
c824e459c950b4d249fc2484c441d9d14b02dbe4192a96d2655fbb7ff19c6857.exe:     file format pei-i386


Disassembly of section .text:

01001000 <.text>:
 1001000:	dec    eax
 1001001:	add    DWORD PTR [eax],0x815600
 1001007:	add    BYTE PTR [esi-0x7f],ah
 100100a:	add    BYTE PTR [eax],al
 100100c:	mov    edx,0xc8000086
 1001011:	xchg   BYTE PTR [eax],al
 1001013:	add    BYTE PTR [eax],al
 1001015:	add    BYTE PTR [eax],al
 1001017:	add    BYTE PTR [esi],ch
 1001019:	mov    DWORD PTR [eax],eax
 100101b:	add    BYTE PTR [ecx+ecx*4],bl
 100101e:	add    BYTE PTR [eax],al
 1001020:	fimul  DWORD PTR [ecx-0x76f00000]
 1001026:	add    BYTE PTR [eax],al
 1001028:	add    al,0x89
 100102a:	add    BYTE PTR [eax],al
 100102c:	test   BYTE PTR [eax-0x77160000],0x0
 1001033:	add    ah,bl
 1001035:	mov    BYTE PTR [eax],al
 1001037:	add    ah,al
 1001039:	mov    BYTE PTR [eax],al
 100103b:	add    BYTE PTR [eax+ecx*4-0x777c0000],bl
 1001042:	add    BYTE PTR [eax],al
 1001044:	ins    BYTE PTR es:[edi],dx
 1001045:	mov    BYTE PTR [eax],al
 1001047:	add    BYTE PTR [eax+ecx*4+0x0],bl
 100104b:	add    BYTE PTR [esi],dh
 100104d:	mov    BYTE PTR [eax],al
 100104f:	add    BYTE PTR [edx],bl
 1001051:	mov    BYTE PTR [eax],al
 1001053:	add    BYTE PTR [esi],al
 1001055:	mov    BYTE PTR [eax],al
 1001057:	add    dl,dh
 1001059:	xchg   DWORD PTR [eax],eax
 100105b:	add    al,bl
 100105d:	xchg   DWORD PTR [eax],eax
 100105f:	add    dl,al
 1001061:	xchg   DWORD PTR [eax],eax
 1001063:	add    BYTE PTR [edi+eax*4-0x78640000],ch
 100106a:	add    BYTE PTR [eax],al
 100106c:	add    BYTE PTR [edi-0x788e0000],0x0
 1001073:	add    BYTE PTR [edi+eax*4+0x0],dl
 1001077:	add    BYTE PTR [edi+eax*4+0x0],al
 100107b:	add    BYTE PTR [edx],dh
 100107d:	xchg   DWORD PTR [eax],eax
 100107f:	add    BYTE PTR [edi+eax*4],bl
 1001082:	add    BYTE PTR [eax],al
 1001084:	inc    BYTE PTR [esi-0x790a0000]
 100108a:	add    BYTE PTR [eax],al
 100108c:	loopne 0x1001014
 100108e:	add    BYTE PTR [eax],al
 1001090:	out    0x82,al
 1001092:	add    BYTE PTR [eax],al
 1001094:	(bad)  
 1001095:	add    BYTE PTR [eax],0x0
 1001098:	ret    0x82
 100109b:	add    BYTE PTR [edx+eax*4-0x7d6c0000],ch
 10010a2:	add    BYTE PTR [eax],al
 10010a4:	test   BYTE PTR [edx-0x7d8e0000],al
 10010aa:	add    BYTE PTR [eax],al
 10010ac:	pop    esi
 10010ad:	add    BYTE PTR [eax],0x0
 10010b0:	push   edx
 10010b1:	add    BYTE PTR [eax],0x0
 10010b4:	cmp    al,0x82
 10010b6:	add    BYTE PTR [eax],al
 10010b8:	sub    al,BYTE PTR [edx-0x7de60000]
 10010be:	add    BYTE PTR [eax],al
 10010c0:	add    BYTE PTR [edx-0x76b80000],al
 10010c6:	add    BYTE PTR [eax],al
 10010c8:	jmp    0x81:0xda000081
 10010cf:	add    al,cl
 10010d1:	add    DWORD PTR [eax],0x81b800
 10010d7:	add    BYTE PTR [esi-0x67ffff7f],ah
 10010dd:	add    DWORD PTR [eax],0x818800
 10010e3:	add    BYTE PTR [edx-0x78],cl
 10010e6:	add    BYTE PTR [eax],al
 10010e8:	pop    edx
 10010e9:	mov    DWORD PTR [eax],eax
 10010eb:	add    BYTE PTR [esi-0x77],ah
 10010ee:	add    BYTE PTR [eax],al
 10010f0:	jbe    0x100107b
 10010f2:	add    BYTE PTR [eax],al
 10010f4:	xchg   BYTE PTR [ecx-0x76340000],cl
 10010fa:	add    BYTE PTR [eax],al
 10010fc:	mov    al,0x89
 10010fe:	add    BYTE PTR [eax],al
 1001100:	xchg   esp,eax
 1001101:	mov    DWORD PTR [eax],eax
 1001103:	add    BYTE PTR [eax],al
 1001105:	add    BYTE PTR [eax],al
 1001107:	add    BYTE PTR [esi+eax*4-0x79a00000],cl
 100110e:	add    BYTE PTR [eax],al
 1001110:	add    BYTE PTR [eax],al
 1001112:	add    BYTE PTR [eax],al
 1001114:	sub    al,BYTE PTR [esi-0x79ec0000]
 100111a:	add    BYTE PTR [eax],al
 100111c:	add    al,0x86
 100111e:	add    BYTE PTR [eax],al
 1001120:	repnz test DWORD PTR [eax],eax
 1001123:	add    al,bl
 1001125:	test   DWORD PTR [eax],eax
 1001127:	add    dh,cl
 1001129:	test   DWORD PTR [eax],eax
 100112b:	add    dh,al
 100112d:	test   DWORD PTR [eax],eax
 100112f:	add    BYTE PTR [eax-0x65ffff7b],bh
 1001135:	test   DWORD PTR [eax],eax
 1001137:	add    BYTE PTR [edx-0x7b],bh
 100113a:	add    BYTE PTR [eax],al
 100113c:	jo     0x10010c3
 100113e:	add    BYTE PTR [eax],al
 1001140:	test   DWORD PTR fs:[eax],eax
 1001143:	add    BYTE PTR [eax-0x7b],dl
 1001146:	add    BYTE PTR [eax],al
 1001148:	cmp    al,BYTE PTR [ebp-0x7ad40000]
 100114e:	add    BYTE PTR [eax],al
 1001150:	and    BYTE PTR [ebp-0x7aea0000],al
 1001156:	add    BYTE PTR [eax],al
 1001158:	push   cs
 1001159:	test   DWORD PTR [eax],eax
 100115b:	add    BYTE PTR [eax],al
 100115d:	test   DWORD PTR [eax],eax
 100115f:	add    dl,dh
 1001161:	test   BYTE PTR [eax],al
 1001163:	add    dl,ch
 1001165:	test   BYTE PTR [eax],al
 1001167:	add    al,ah
 1001169:	test   BYTE PTR [eax],al
 100116b:	add    al,dl
 100116d:	test   BYTE PTR [eax],al
 100116f:	add    dl,al
 1001171:	test   BYTE PTR [eax],al
 1001173:	add    BYTE PTR [eax-0x4fffff7c],bh
 1001179:	test   BYTE PTR [eax],al
 100117b:	add    BYTE PTR [esp+eax*4-0x7b660000],ah
 1001182:	add    BYTE PTR [eax],al
 1001184:	jp     0x100110a
 1001186:	add    BYTE PTR [eax],al
 1001188:	pop    esi
 1001189:	test   BYTE PTR [eax],al
 100118b:	add    BYTE PTR [esp+eax*4],bh
 100118e:	add    BYTE PTR [eax],al
 1001190:	sbb    al,0x84
 1001192:	add    BYTE PTR [eax],al
 1001194:	push   cs
 1001195:	test   BYTE PTR [eax],al
 1001197:	add    BYTE PTR [eax],al
 1001199:	test   BYTE PTR [eax],al
 100119b:	add    al,bh
 100119d:	add    DWORD PTR [eax],0x0
 10011a0:	out    dx,al
 10011a1:	add    DWORD PTR [eax],0x0
 10011a4:	in     al,0x83
 10011a6:	add    BYTE PTR [eax],al
 10011a8:	into   
 10011a9:	add    DWORD PTR [eax],0x0
 10011ac:	mov    eax,0xa8000083
 10011b1:	add    DWORD PTR [eax],0x0
 10011b4:	cwde   
 10011b5:	add    DWORD PTR [eax],0x0
 10011b8:	mov    WORD PTR [ebx-0x7c7e0000],es
 10011be:	add    BYTE PTR [eax],al
 10011c0:	jbe    0x1001145
 10011c2:	add    BYTE PTR [eax],al
 10011c4:	push   0xffffff83
 10011c6:	add    BYTE PTR [eax],al
 10011c8:	pop    esi
 10011c9:	add    DWORD PTR [eax],0x0
 10011cc:	dec    esi
 10011cd:	add    DWORD PTR [eax],0x0
 10011d0:	add    DWORD PTR ds:[eax],0x0
 10011d4:	jmp    0x85:0xae000089
 10011db:	add    dl,bh
 10011dd:	mov    DWORD PTR [eax],eax
 10011df:	add    BYTE PTR [eax],al
 10011e1:	add    BYTE PTR [eax],al
 10011e3:	add    BYTE PTR [eax],bl
 10011e5:	add    DWORD PTR [eax],0x0
 10011e8:	or     al,BYTE PTR [ebx-0x7cda0000]
	...
 10011f6:	add    BYTE PTR [eax],al
 10011f8:	xor    ecx,DWORD PTR [eax+0x0]
 10011fb:	add    DWORD PTR [ebp+esi*2+0x75bf0100],esp
 1001202:	add    BYTE PTR [ecx],al
 1001204:	in     al,dx
 1001205:	jne    0x1001207
 1001207:	add    ebp,edi
 1001209:	jne    0x100120b
 100120b:	add    DWORD PTR [eax],eax
 100120d:	add    BYTE PTR [eax],al
 100120f:	add    BYTE PTR [eax],al
 1001211:	add    BYTE PTR [eax],al
 1001213:	add    BYTE PTR [ecx+0x4a],ah
 1001216:	add    BYTE PTR [ecx],al
 1001218:	ret    0x4d
 100121b:	add    DWORD PTR [eax],eax
 100121d:	add    BYTE PTR [eax],al
 100121f:	add    BYTE PTR [eax],al
 1001221:	add    BYTE PTR [eax],al
 1001223:	add    cl,bl
 1001225:	loop   0x100125c
 1001227:	dec    edi
 1001228:	add    BYTE PTR [eax],al
 100122a:	add    BYTE PTR [eax],al
 100122c:	add    al,BYTE PTR [eax]
 100122e:	add    BYTE PTR [eax],al
 1001230:	and    DWORD PTR [eax],eax
 1001232:	add    BYTE PTR [eax],al
 1001234:	mov    eax,0xb800001e
 1001239:	adc    al,BYTE PTR [eax]
 100123b:	add    BYTE PTR [edx+edx*1+0x0],bl
 100123f:	add    DWORD PTR [eax+0x12],esp
 1001242:	add    BYTE PTR [ecx],al
 1001244:	adc    al,BYTE PTR fs:[eax]
 1001247:	add    DWORD PTR [eax+0x12],ebp
 100124a:	add    BYTE PTR [ecx],al
 100124c:	ins    BYTE PTR es:[edi],dx
 100124d:	adc    al,BYTE PTR [eax]
 100124f:	add    DWORD PTR [edx+edx*1+0x0],esi
 1001253:	add    DWORD PTR [edx+edx*1+0x12a00100],ecx
 100125a:	add    BYTE PTR [ecx],al
 100125c:	push   ebx
 100125d:	add    BYTE PTR [eax],al
 100125f:	add    BYTE PTR [ebp+0x0],cl
 1001262:	add    BYTE PTR [eax],al
 1001264:	inc    esp
 1001265:	add    BYTE PTR [eax],al
 1001267:	add    BYTE PTR [edx+0x0],al
 100126a:	add    BYTE PTR [eax],al
 100126c:	push   esi
 100126d:	add    BYTE PTR [ecx+0x0],ah
 1001270:	ins    BYTE PTR es:[edi],dx
 1001271:	add    BYTE PTR [eax],al
 1001273:	add    BYTE PTR [esi+0x0],al
 1001276:	outs   dx,DWORD PTR ds:[esi]
 1001277:	add    BYTE PTR [edx+0x0],dh
 100127a:	arpl   WORD PTR [eax],ax
 100127c:	add    BYTE PTR gs:[edx+0x0],dl
 1001280:	add    BYTE PTR gs:[ebp+0x0],ch
 1001284:	outs   dx,DWORD PTR ds:[esi]
 1001285:	add    BYTE PTR [esi+0x0],dh
 1001288:	add    BYTE PTR gs:[eax],al
 100128b:	add    BYTE PTR [esi+0x0],cl
 100128e:	outs   dx,DWORD PTR ds:[esi]
 100128f:	add    BYTE PTR [edx+0x0],dl
 1001292:	add    BYTE PTR gs:[ebp+0x0],ch
 1001296:	outs   dx,DWORD PTR ds:[esi]
 1001297:	add    BYTE PTR [esi+0x0],dh
 100129a:	add    BYTE PTR gs:[eax],al
 100129d:	add    BYTE PTR [eax],al
 100129f:	add    BYTE PTR [eax+eax*1+0x65],al
 10012a3:	add    BYTE PTR [eax+eax*1+0x65],ch
 10012a7:	add    BYTE PTR [eax+eax*1+0x65],dh
 10012ab:	add    BYTE PTR [eax],al
 10012ad:	add    BYTE PTR [eax],al
 10012af:	add    bl,dh
 10012b1:	pop    ds
 10012b2:	inc    eax
 10012b3:	add    al,0xf
 10012b5:	mov    ebp,DWORD PTR ds:0x2aeb854d
 10012bb:	xor    eax,0x8b7a8642
 10012c0:	sub    BYTE PTR [esi-0x6e99e77a],ch
 10012c6:	pop    ecx
 10012c7:	inc    edi
 10012c8:	mov    ds,WORD PTR [esi]
 10012ca:	or     ch,al
 10012cc:	dec    ebp
 10012cd:	out    dx,al
 10012ce:	outs   dx,BYTE PTR ds:[esi]
 10012cf:	jl     0x100126a
 10012d1:	pushf  
 10012d2:	sbb    al,0x3e
 10012d4:	dec    esp
 10012d5:	adc    al,0xb6
 10012d7:	dec    esp
 10012d8:	mov    eax,0x48585dcd
 10012dd:	mov    ds:0x755a2249,al
 10012e2:	pop    eax
 10012e3:	inc    eax
 10012e4:	mov    esi,0xbc41c78f
 10012e9:	cdq    
 10012ea:	cmp    eax,0xba745cbf
 10012ef:	(bad)
 10012f4:	add    eax,0xa0435ffd
 10012f9:	fsubr  DWORD PTR ds:0xe5e1c8d5
 10012ff:	pop    edi
 1001300:	test   al,0xff
 1001302:	lods   al,BYTE PTR ds:[esi]
 1001303:	dec    edx
 1001304:	ins    DWORD PTR es:[edi],dx
 1001305:	pop    ss
 1001306:	lods   al,BYTE PTR ds:[esi]
 1001307:	dec    esi
 1001308:	mov    dl,0x42
 100130a:	inc    ebx
 100130b:	adc    ah,BYTE PTR [eax]
 100130d:	repnz imul edi,DWORD PTR [eax+eiz*4],0xfd51f03c
 1001315:	pop    ss
 1001316:	ror    DWORD PTR [eax-0x6f],0xdc
 100131a:	inc    esp
 100131b:	pop    ebx
 100131c:	(bad)  
 100131d:	imul   DWORD PTR [eax]
 100131f:	push   eax
 1001320:	push   ecx
 1001321:	sub    al,0xb8
 1001323:	pop    ebp
 1001324:	add    eax,0x9a3c258a
 1001329:	push   0xffffffdc
 100132b:	inc    esi
 100132c:	mov    dh,0x6a
 100132e:	and    eax,0x7b26ef82
 1001333:	push   0x4f2dc096
 1001338:	lahf   
 1001339:	mov    WORD PTR [edx+0x21a3adaf],gs
 100133f:	lods   al,BYTE PTR ds:[esi]
 1001340:	xchg   esp,eax
 1001341:	sbb    al,0xc
 1001343:	ins    DWORD PTR es:[edi],dx
 1001344:	dec    ecx
 1001345:	mov    bl,0x61
 1001347:	inc    edx
 1001348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1001349:	in     al,dx
 100134a:	mov    DWORD PTR ds:0x928709e4,eax
 1001350:	fs ins DWORD PTR es:[edi],dx
 1001352:	stos   BYTE PTR es:[edi],al
 1001353:	jo     0x10013ac
 1001355:	adc    edx,DWORD PTR [edx+0x46]
 1001358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1001359:	sbb    eax,0xb280d62b
 100135e:	imul   eax,DWORD PTR [esi-0x3a],0xf6744d9c
 1001365:	inc    edi
 1001366:	ror    BYTE PTR [ebx-0x80],cl
 1001369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100136a:	xchg   esp,eax
 100136b:	es iret 
 100136d:	jmp    0x88e2:0x5ae9996d
 1001374:	push   ebp
 1001375:	jmp    0xb9945c44
 100137a:	or     BYTE PTR [ecx-0x429d7004],ah
 1001380:	inc    edi
 1001381:	jmp    0x1001322
 1001383:	mov    esi,DWORD PTR [ebx-0x6abb99ba]
 1001389:	cmp    edx,DWORD PTR [esi-0x7b]
 100138c:	mov    al,ds:0xb295b24e
 1001391:	jle    0x10013e3
 1001393:	ret    
 1001394:	adc    eax,0xbc4870b6
 1001399:	fist   DWORD PTR [eax]
 100139b:	cdq    
 100139c:	push   cs
 100139d:	in     eax,dx
 100139e:	or     al,0xc4
 10013a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10013a1:	cwde   
 10013a2:	int3   
 10013a3:	mov    al,0x4d
 10013a5:	into   
 10013a6:	aad    0x4b
 10013a8:	test   eax,0x6bd2ba22
 10013ad:	add    ecx,DWORD PTR [ecx+0xc6509bd]
 10013b3:	dec    edx
 10013b4:	nop
 10013b5:	mov    edi,0xeeab43da
 10013ba:	or     bh,BYTE PTR [edx-0xed87ac6]
 10013c0:	imul   bx,WORD PTR [edx-0x33],0xff89
 10013c5:	or     eax,0x56b34949
 10013ca:	ss sbb al,0xf0
 10013cd:	xlat   BYTE PTR ds:[ebx]
 10013ce:	inc    ebx
 10013cf:	jb     0x10013b4
 10013d1:	push   edi
 10013d2:	mov    al,ah
 10013d4:	jb     0x1001451
 10013d6:	push   ebp
 10013d7:	dec    ecx
 10013d8:	mov    ebx,0x567ce6c0
 10013dd:	fisttp WORD PTR [edx+0x44c1dd45]
 10013e3:	in     al,0x8e
 10013e5:	jl     0x100140d
 10013e7:	inc    ecx
 10013e8:	or     eax,0xbf632c39
 10013ee:	jmp    0x10013d3
 10013f0:	repz cdq 
 10013f2:	mov    edx,0x57341ea
 10013f7:	inc    ecx
 10013f8:	mov    bh,BYTE PTR [edi]
 10013fa:	sbb    al,0x4f
 10013fc:	cmp    DWORD PTR [ebp-0x3c],edx
 10013ff:	cld    
 1001400:	rol    BYTE PTR [eax-0x71c00a4f],0xce
 1001407:	inc    ebx
 1001408:	mov    ch,0xc1
 100140a:	es jnp 0x1001397
 100140d:	mov    bl,dl
 100140f:	int3   
 1001410:	call   0x3d17:0x22fe6969
 1001417:	dec    edx
 1001418:	xchg   ecx,eax
 1001419:	stos   DWORD PTR es:[edi],eax
 100141a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100141b:	dec    eax
 100141c:	int    0xae
 100141e:	mov    dh,0x2a
 1001420:	lahf   
 1001421:	inc    ecx
 1001422:	or     DWORD PTR [ebp-0x1],esi
 1001425:	jl     0x1001427
 1001427:	inc    eax
 1001428:	and    BYTE PTR [ebp+0x1042e504],0x2f
 100142f:	push   edx
 1001430:	push   edi
 1001431:	pop    es
 1001432:	push   0x312c290b
 1001437:	inc    ebp
 1001438:	cmp    dl,0x53
 100143b:	pop    edx
 100143c:	push   ecx
 100143d:	js     0x10013e9
 100143f:	cwde   
 1001440:	loopne 0x10013f4
 1001442:	jbe    0x1001461
 1001444:	sbb    esi,ecx
 1001446:	rcl    BYTE PTR [ecx],cl
 1001448:	scas   eax,DWORD PTR es:[edi]
 1001449:	ret    
 100144a:	add    BYTE PTR [eax],dl
 100144c:	pop    edx
 100144d:	cdq    
 100144e:	xchg   ecx,eax
 100144f:	out    dx,eax
 1001450:	xor    eax,0xda2c298b
 1001455:	pop    es
 1001456:	icebp  
 1001457:	inc    ebp
 1001458:	xchg   esi,eax
 1001459:	mov    ds:0x1cd955be,eax
 100145e:	lea    edi,[edx+0x29]
 1001461:	xchg   ebp,eax
 1001462:	xor    DWORD PTR [esi],0xfffffff3
 1001465:	cmp    bh,dl
 1001467:	inc    edi
 1001468:	adc    DWORD PTR [esp+esi*8+0xe9ffaa3],0x3d9528d7
 1001473:	aas    
 1001474:	les    edi,FWORD PTR [edx+0x4781420e]
 100147a:	sub    DWORD PTR [ecx-0x3f3aff9d],ecx
 1001480:	add    bh,BYTE PTR [ebx-0x20]
 1001483:	inc    esp
 1001484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001485:	sub    ebx,edx
 1001487:	adc    DWORD PTR [eax+0x4fc00082],edi
 100148d:	jns    0x1001487
 100148f:	add    dh,BYTE PTR [edx+0x20]
 1001492:	ror    DWORD PTR [ecx-0x75],1
 1001495:	aaa    
 1001496:	cli    
 1001497:	dec    edi
 1001498:	mov    al,ds:0xb5e0409e
 100149d:	rcl    BYTE PTR [edi+0x5079c1cc],1
 10014a3:	dec    edx
 10014a4:	push   ecx
 10014a5:	test   DWORD PTR [esi],ebx
 10014a7:	dec    ebp
 10014a8:	xchg   edx,eax
 10014a9:	(bad)  
 10014aa:	cli    
 10014ab:	mov    bl,0x48
 10014ad:	adc    eax,0x1146bba9
 10014b2:	jns    0x10014fe
 10014b4:	in     al,0x19
 10014b6:	rcl    DWORD PTR [ecx],cl
 10014b8:	mov    eax,0x4fc0006b
 10014bd:	jns    0x10014b7
 10014bf:	add    dl,BYTE PTR [eax+0x7e]
 10014c2:	fwait
 10014c3:	dec    edx
 10014c4:	push   ss
 10014c5:	stos   BYTE PTR es:[edi],al
 10014c6:	rcl    BYTE PTR [ecx],1
 10014c8:	test   al,0xc5
 10014ca:	add    BYTE PTR [eax-0x2d5bde37],ah
 10014d0:	das    
 10014d1:	lds    edx,FWORD PTR [eax]
 10014d3:	push   eax
 10014d4:	stos   DWORD PTR es:[edi],eax
 10014d5:	inc    esp
 10014d6:	push   ecx
 10014d7:	inc    eax
 10014d8:	mov    ecx,fs
 10014da:	shr    DWORD PTR [eax+eiz*1-0x27],cl
 10014de:	mov    DWORD PTR [ebp+ecx*2+0x3d53544c],esi
 10014e5:	mov    al,0x9
 10014e7:	inc    edx
 10014e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10014e9:	rcr    cl,1
 10014eb:	fst    QWORD PTR [ebx]
 10014ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10014ee:	add    DWORD PTR [ebx+0x53544c4d],ebx
 10014f4:	clc    
 10014f5:	jecxz  0x1001497
 10014f7:	dec    edx
 10014f8:	adc    DWORD PTR [ebp+0x1168d8a],0x5e02394
 1001502:	sbb    BYTE PTR [eax-0x20],0x66
 1001506:	rcl    DWORD PTR [ecx],cl
 1001508:	xchg   BYTE PTR [eax],al
 100150a:	add    al,al
 100150c:	dec    edi
 100150d:	popa   
 100150e:	and    esi,DWORD PTR [ebx+0x5cb51d20]
 1001514:	push   ds
 1001515:	retf   0x4b7e
 1001518:	xchg   esp,eax
 1001519:	fxch   st(4)
 100151b:	ds ja  0x1001537
 100151e:	mov    ?,WORD PTR [edx-0x25]
 1001521:	mov    bl,0x56
 1001523:	pop    esi
 1001524:	fs jns 0x10014af
 1001527:	inc    ebp
 1001528:	lea    ecx,[ecx-0x2d]
 100152b:	push   edx
 100152c:	cmp    dh,BYTE PTR [edi-0x6df34643]
 1001532:	jg     0x1001598
 1001534:	xor    BYTE PTR [edx+0x5b],al
 1001537:	dec    esp
 1001538:	or     DWORD PTR ds:0x62795fb6,0xa
 100153f:	call   0x6993a599
 1001544:	loopne 0x100157e
 1001546:	pop    ss
 1001547:	dec    ebp
 1001548:	xchg   edx,eax
 1001549:	retf   
 100154a:	mov    DWORD PTR [ecx],ecx
 100154c:	jno    0x100155b
 100154e:	cmp    DWORD PTR [eax-0x53],0x56e87cf
 1001555:	ins    BYTE PTR es:[edi],dx
 1001556:	fisttp WORD PTR [edx-0x64]
 1001559:	xlat   BYTE PTR ds:[ebx]
 100155a:	cmp    edi,DWORD PTR [ecx+0x43]
 100155d:	xchg   DWORD PTR [ebx+0x7c],ebx
 1001560:	sub    ebp,DWORD PTR [eax-0x6c]
 1001563:	je     0x1001505
 1001565:	aaa    
 1001566:	rcl    BYTE PTR [ecx],cl
 1001568:	mov    ds:0x4fc00073,al
 100156d:	mov    ?,esp
 100156f:	(bad)  
 1001570:	jnp    0x10015b6
 1001572:	pop    ebp
 1001573:	jnp    0x1001587
 1001575:	or     ebp,edx
 1001577:	inc    ecx
 1001578:	test   al,0x4e
 100157a:	enter  0x322,0x44
 100157e:	and    dl,ah
 1001580:	or     BYTE PTR [ebx+0x48138756],dl
 1001586:	mov    al,ds:0xd7d09c40
 100158b:	mov    ds:0x3fca3808,eax
 1001590:	(bad)  
 1001591:	call   0x42e1:0x6b91a160
 1001598:	mov    edx,DWORD PTR [edx-0x346c7a94]
 100159e:	dec    edx
 100159f:	(bad)  
 10015a0:	int    0xb8
 10015a2:	mov    gs,WORD PTR [edx+0x11d07a51]
 10015a8:	xchg   edx,eax
 10015a9:	ret    
 10015aa:	add    BYTE PTR [eax+0x458c13c9],ah
 10015b0:	mov    bl,0xa0
 10015b2:	pushf  
 10015b3:	mov    esp,0x449abb4f
 10015b8:	xchg   esi,eax
 10015b9:	jl     0x10015e4
 10015bb:	test   al,0xfa
 10015bd:	jecxz  0x10015df
 10015bf:	xchg   bh,bl
 10015c1:	sbb    eax,0x9d2bbeb0
 10015c6:	pop    ebx
 10015c7:	inc    ebx
 10015c8:	test   eax,0x7e5576e7
 10015cd:	sub    ebp,DWORD PTR [ebx+0x52]
 10015d0:	push   edi
 10015d1:	dec    edx
 10015d2:	(bad)  
 10015d4:	sti    
 10015d5:	inc    edi
 10015d6:	rcl    BYTE PTR [ecx],cl
 10015d8:	and    edi,0x0
 10015db:	ror    BYTE PTR [edi-0x67],0x2
 10015df:	ror    DWORD PTR [esi],0xee
 10015e2:	and    cl,bl
 10015e4:	jb     0x1001626
 10015e6:	out    0x4a,eax
 10015e8:	xchg   esi,eax
 10015e9:	loop   0x100157b
 10015eb:	cld    
 10015ec:	iret   
 10015ed:	xchg   DWORD PTR [ebp+0x77dc8a44],edx
 10015f3:	rcr    BYTE PTR [esi],cl
 10015f5:	stos   BYTE PTR es:[edi],al
 10015f6:	add    eax,DWORD PTR [ebx-0x74]
 10015f9:	add    ebx,DWORD PTR [eax+ebx*2]
 10015fc:	fistp  DWORD PTR [eax]
 10015fe:	jmp    0xa0b5678e
 1001603:	fisub  DWORD PTR [edi+eax*8]
 1001606:	rcl    BYTE PTR [ecx],1
 1001608:	scas   al,BYTE PTR es:[edi]
 1001609:	pop    ds
 100160a:	add    BYTE PTR [eax-0x3c00f037],ah
 1001610:	xchg   esp,eax
 1001611:	mov    ecx,0xef71e269
 1001616:	loopne 0x1001664
 1001618:	mov    ecx,ebp
 100161a:	pop    eax
 100161b:	sbb    al,0x21
 100161d:	jae    0x1001691
 100161f:	call   0xe8578229
 1001624:	je     0x100163e
 1001626:	or     al,0x45
 1001628:	sahf   
 1001629:	cwde   
 100162a:	iret   
 100162b:	cmp    cl,BYTE PTR [eax]
 100162d:	xchg   edi,eax
 100162e:	mov    al,ds:0xb06f4169
 1001633:	call   0x12d28339
 1001638:	stos   BYTE PTR es:[edi],al
 1001639:	jge    0x100163b
 100163b:	ror    BYTE PTR [edi-0x67],0x3
 100163f:	inc    ebx
 1001640:	mov    esp,0x2fed8979
 1001645:	mov    al,0xa9
 1001647:	dec    ebp
 1001648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1001649:	shl    DWORD PTR [di],cl
 100164c:	ins    BYTE PTR es:[edi],dx
 100164d:	and    cl,BYTE PTR ss:[edx]
 1001650:	ss mov dl,0x84
 1001653:	repz test eax,0xbc401bb4
 1001659:	pop    eax
 100165a:	xor    DWORD PTR [esi],eax
 100165c:	jecxz  0x100160a
 100165e:	mov    ds:0xe7e720ec,eax
 1001663:	cmc    
 1001664:	add    DWORD PTR [ecx+edx*8],edx
 1001667:	adc    DWORD PTR [eax-0x7ffffc5],ecx
 100166d:	jne    0x10016e8
 100166f:	shl    BYTE PTR [edi+0x50],cl
 1001672:	dec    esp
 1001673:	test   DWORD PTR [eax-0x28],0xc9804630
 100167a:	mov    al,0xe
 100167c:	push   0x8c0ccaa1
 1001681:	cmp    edi,DWORD PTR [edi]
 1001683:	loop   0x10016d1
 1001685:	sahf   
 1001686:	or     DWORD PTR [edi-0x5f],0x5c
 100168a:	jle    0x1001695
 100168c:	add    eax,0xa8280aeb
 1001691:	ret    0x8ff5
 1001694:	mov    edx,0x8e47175e
 1001699:	loope  0x10016e1
 100169b:	mov    dh,0x42
 100169d:	jge    0x100162e
 100169f:	repz xchg ebx,eax
 10016a1:	outs   dx,BYTE PTR ds:[esi]
 10016a2:	mov    bl,0x96
 10016a4:	sbb    al,0xf7
 10016a6:	pusha  
 10016a7:	inc    ecx
 10016a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10016a9:	jmp    0x632f:0x1d80ae26
	...
 10016c0:	ins    DWORD PTR es:[edi],dx
 10016c1:	add    BYTE PTR [eax+eax*1+0x69],ah
 10016c5:	add    BYTE PTR [eax],al
 10016c7:	add    BYTE PTR [ebp+0x0],ch
 10016ca:	add    BYTE PTR fs:[ecx+0x0],ch
 10016ce:	je     0x10016d0
 10016d0:	popa   
 10016d1:	add    BYTE PTR [edx+0x0],ah
 10016d4:	jae    0x10016d6
 10016d6:	add    BYTE PTR [eax],al
 10016d8:	jae    0x10016da
 10016da:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
 10016df:	add    BYTE PTR [eax+0x0],dh
 10016e2:	add    BYTE PTR [eax],al
 10016e4:	add    BYTE PTR fs:[eax+eax*1+0x65],ah
 10016e9:	add    BYTE PTR [eax],al
 10016eb:	add    BYTE PTR [ebx+0x0],dh
 10016ee:	add    BYTE PTR gs:[eax+eax*1+0x66],ch
 10016f3:	add    BYTE PTR [edx+0x0],dh
 10016f6:	add    BYTE PTR gs:[edi+0x0],ah
 10016fa:	add    BYTE PTR [eax],al
 10016fc:	jb     0x10016fe
 10016fe:	add    BYTE PTR gs:[edi+0x0],ah
 1001702:	jae    0x1001704
 1001704:	add    BYTE PTR gs:[edx+0x0],dh
 1001708:	jbe    0x100170a
 100170a:	add    BYTE PTR gs:[edx+0x0],dh
 100170e:	add    BYTE PTR [eax],al
 1001710:	jne    0x1001712
 1001712:	outs   dx,BYTE PTR ds:[esi]
 1001713:	add    BYTE PTR [edx+0x0],dh
 1001716:	add    BYTE PTR gs:[edi+0x0],ah
 100171a:	jae    0x100171c
 100171c:	add    BYTE PTR gs:[edx+0x0],dh
 1001720:	jbe    0x1001722
 1001722:	add    BYTE PTR gs:[edx+0x0],dh
 1001726:	add    BYTE PTR [eax],al
 1001728:	add    BYTE PTR gs:[ebp+0x0],ch
 100172c:	bound  eax,QWORD PTR [eax]
 100172e:	add    BYTE PTR gs:[eax+eax*1+0x64],ah
 1001733:	add    BYTE PTR [ecx+0x0],ch
 1001736:	outs   dx,BYTE PTR ds:[esi]
 1001737:	add    BYTE PTR [edi+0x0],ah
 100173a:	add    BYTE PTR [eax],al
 100173c:	dec    esp
 100173d:	add    BYTE PTR [ebx+0x0],al
 1001740:	dec    ecx
 1001741:	add    BYTE PTR [eax+eax*1+0x0],al
 1001745:	add    BYTE PTR [eax],al
 1001747:	add    BYTE PTR [eax+eax*1+0x0],ch
 100174b:	add    BYTE PTR [edi],bh
 100174d:	add    BYTE PTR [eax],al
 100174f:	add    BYTE PTR [edx+0x0],dh
 1001752:	je     0x1001754
 1001754:	add    BYTE PTR [eax],al
 1001756:	add    BYTE PTR [eax],al
 1001758:	outs   dx,BYTE PTR ds:[esi]
 1001759:	add    BYTE PTR [edi+0x0],ch
 100175c:	jae    0x100175e
 100175e:	jo     0x1001760
 1001760:	ins    BYTE PTR es:[edi],dx
 1001761:	add    BYTE PTR [ecx+0x0],ah
 1001764:	jae    0x1001766
 1001766:	push   0x0
 100176b:	add    BYTE PTR [eax+eax*1+0x0],ah
 100176f:	add    BYTE PTR [ebp+0x0],al
 1001772:	add    BYTE PTR [eax],al
 1001774:	push   ebp
 1001775:	add    BYTE PTR [eax],al
 1001777:	add    BYTE PTR [eax+0x0],dl
 100177a:	add    BYTE PTR [eax],al
 100177c:	add    BYTE PTR [eax],al
 100177e:	add    BYTE PTR [eax],al
 1001780:	push   ebx
 1001781:	add    BYTE PTR [edi+0x0],ch
 1001784:	data16 add BYTE PTR [eax+eax*1+0x77],dh
 1001789:	add    BYTE PTR [ecx+0x0],ah
 100178c:	jb     0x100178e
 100178e:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
 1001793:	add    BYTE PTR [ecx+0x0],ch
 1001796:	arpl   WORD PTR [eax],ax
 1001798:	jb     0x100179a
 100179a:	outs   dx,DWORD PTR ds:[esi]
 100179b:	add    BYTE PTR [ebx+0x0],dh
 100179e:	outs   dx,DWORD PTR ds:[esi]
 100179f:	add    BYTE PTR [esi+0x0],ah
 10017a2:	je     0x10017a4
 10017a4:	pop    esp
 10017a5:	add    BYTE PTR [ebx+0x0],dl
 10017a8:	push   ecx
 10017a9:	add    BYTE PTR [eax+eax*1+0x20],cl
 10017ad:	add    BYTE PTR [ebx+0x0],dl
 10017b0:	add    BYTE PTR gs:[edx+0x0],dh
 10017b4:	jbe    0x10017b6
 10017b6:	add    BYTE PTR gs:[edx+0x0],dh
 10017ba:	and    BYTE PTR [eax],al
 10017bc:	dec    ebp
 10017bd:	add    BYTE PTR [ecx+0x0],ah
 10017c0:	outs   dx,BYTE PTR ds:[esi]
 10017c1:	add    BYTE PTR [ecx+0x0],ah
 10017c4:	add    BYTE PTR [di+0x0],ah
 10017c8:	ins    DWORD PTR es:[edi],dx
 10017c9:	add    BYTE PTR [ebp+0x0],ah
 10017cc:	outs   dx,BYTE PTR ds:[esi]
 10017cd:	add    BYTE PTR [eax+eax*1+0x20],dh
 10017d1:	add    BYTE PTR [ebx+0x0],dl
 10017d4:	je     0x10017d6
 10017d6:	jne    0x10017d8
 10017d8:	add    BYTE PTR fs:[ecx+0x0],ch
 10017dc:	outs   dx,DWORD PTR ds:[esi]
 10017dd:	add    BYTE PTR [eax+eax*1+0x31],bl
 10017e1:	add    BYTE PTR [ecx],dh
 10017e3:	add    BYTE PTR [esi],ch
 10017e5:	add    BYTE PTR [eax],dh
 10017e7:	add    BYTE PTR [eax],al
 10017e9:	add    BYTE PTR [eax],al
 10017eb:	add    BYTE PTR [eax+eax*1+0x72],dh
 10017ef:	add    BYTE PTR [ebp+0x0],dh
 10017f2:	add    BYTE PTR gs:[eax],al
 10017f5:	add    BYTE PTR [eax],al
 10017f7:	add    BYTE PTR [edi+0x0],bl
 10017fa:	pop    edi
 10017fb:	add    BYTE PTR [ebx+0x0],dl
 10017fe:	push   ebx
 10017ff:	add    BYTE PTR [ebp+0x0],cl
 1001802:	push   ebx
 1001803:	add    BYTE PTR [edi+0x0],bl
 1001806:	inc    ebx
 1001807:	add    BYTE PTR [edi+0x0],cl
 100180a:	dec    ebp
 100180b:	add    BYTE PTR [ebp+0x0],cl
 100180e:	inc    ecx
 100180f:	add    BYTE PTR [esi+0x0],cl
 1001812:	inc    esp
 1001813:	add    BYTE PTR [eax+eax*1+0x49],cl
 1001817:	add    BYTE PTR [esi+0x0],cl
 100181a:	inc    ebp
 100181b:	add    BYTE PTR [edi+0x0],bl
 100181e:	push   esi
 100181f:	add    BYTE PTR [ecx+0x0],al
 1001822:	push   edx
 1001823:	add    BYTE PTR [ecx+0x0],cl
 1001826:	inc    ecx
 1001827:	add    BYTE PTR [edx+0x0],al
 100182a:	dec    esp
 100182b:	add    BYTE PTR [ebp+0x0],al
 100182e:	pop    edi
 100182f:	add    BYTE PTR [esi+0x0],al
 1001832:	dec    ecx
 1001833:	add    BYTE PTR [eax+eax*1+0x45],cl
 1001837:	add    BYTE PTR [eax],al
 1001839:	add    BYTE PTR [eax],al
 100183b:	add    BYTE PTR [esi+0x0],ah
 100183e:	popa   
 100183f:	add    BYTE PTR [eax+eax*1+0x73],ch
 1001843:	add    BYTE PTR [ebp+0x0],ah
 1001846:	add    BYTE PTR [eax],al
 1001848:	push   ebx
 1001849:	add    BYTE PTR [eax+0x0],ch
 100184c:	popa   
 100184d:	add    BYTE PTR [edx+0x0],dh
 1001850:	add    BYTE PTR gs:[eax+eax*1+0x43],ah
 1001855:	add    BYTE PTR [edi+0x0],ch
 1001858:	add    BYTE PTR fs:[ebp+0x0],ah
 100185c:	add    BYTE PTR [eax],al
 100185e:	add    BYTE PTR [eax],al
 1001860:	pop    esp
 1001861:	add    BYTE PTR [ebx+0x0],dh
 1001864:	jno    0x1001866
 1001866:	ins    BYTE PTR es:[edi],dx
 1001867:	add    BYTE PTR [edx+0x0],ah
 100186a:	outs   dx,DWORD PTR ds:[esi]
 100186b:	add    BYTE PTR [edi+0x0],ch
 100186e:	je     0x1001870
 1001870:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 1001875:	add    BYTE PTR [eax+eax*1+0x0],ch
 1001879:	add    BYTE PTR [eax],al
 100187b:	add    BYTE PTR [ecx+0x75],dl
 100187e:	gs jb  0x10018fa
 1001881:	push   esp
 1001882:	outs   dx,DWORD PTR ds:[esi]
 1001883:	outs   dx,DWORD PTR ds:[esi]
 1001884:	ins    BYTE PTR es:[edi],dx
 1001885:	jae    0x10018dd
 1001887:	popa   
 1001888:	ins    BYTE PTR es:[edi],dx
 1001889:	jne    0x10018f0
 100188b:	add    BYTE PTR [ebx+0x0],dl
 100188e:	outs   dx,DWORD PTR ds:[esi]
 100188f:	add    BYTE PTR [esi+0x0],ah
 1001892:	je     0x1001894
 1001894:	ja     0x1001896
 1001896:	popa   
 1001897:	add    BYTE PTR [edx+0x0],dh
 100189a:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
 100189f:	add    BYTE PTR [ecx+0x0],ch
 10018a2:	arpl   WORD PTR [eax],ax
 10018a4:	jb     0x10018a6
 10018a6:	outs   dx,DWORD PTR ds:[esi]
 10018a7:	add    BYTE PTR [ebx+0x0],dh
 10018aa:	outs   dx,DWORD PTR ds:[esi]
 10018ab:	add    BYTE PTR [esi+0x0],ah
 10018ae:	je     0x10018b0
 10018b0:	pop    esp
 10018b1:	add    BYTE PTR [ecx+0x0],al
 10018b4:	jo     0x10018b6
 10018b6:	jo     0x10018b8
 10018b8:	inc    ebp
 10018b9:	add    BYTE PTR [esi+0x0],ch
 10018bc:	jbe    0x10018be
 10018be:	pop    esp
 10018bf:	add    BYTE PTR [ecx],dh
 10018c1:	add    BYTE PTR [eax],dh
 10018c3:	add    BYTE PTR [esi],ch
 10018c5:	add    BYTE PTR [eax],dh
 10018c7:	add    BYTE PTR [eax],al
 10018c9:	add    BYTE PTR [eax],al
 10018cb:	add    BYTE PTR [ecx+0x0],al
 10018ce:	jo     0x10018d0
 10018d0:	jo     0x10018d2
 10018d2:	add    BYTE PTR gs:[esi+0x0],ch
 10018d6:	jbe    0x10018d8
 10018d8:	push   ebx
 10018d9:	add    BYTE PTR [eax+eax*1+0x75],dh
 10018dd:	add    BYTE PTR [edx+0x0],ah
 10018e0:	inc    esp
 10018e1:	add    BYTE PTR [eax+eax*1+0x4c],cl
 10018e5:	add    BYTE PTR [ecx+0x0],cl
 10018e8:	outs   dx,BYTE PTR ds:[esi]
 10018e9:	add    BYTE PTR [ebx+0x0],dh
 10018ec:	je     0x10018ee
 10018ee:	popa   
 10018ef:	add    BYTE PTR [eax+eax*1+0x6c],ch
 10018f3:	add    BYTE PTR [eax+0x0],dl
 10018f6:	popa   
 10018f7:	add    BYTE PTR [eax+eax*1+0x68],dh
 10018fb:	add    BYTE PTR [eax],al
 10018fd:	add    BYTE PTR [eax],al
 10018ff:	add    BYTE PTR [eax+eax*1+0x61],bl
 1001903:	add    BYTE PTR [eax+0x0],dh
 1001906:	jo     0x1001908
 1001908:	add    BYTE PTR gs:[esi+0x0],ch
 100190c:	jbe    0x100190e
 100190e:	jae    0x1001910
 1001910:	je     0x1001912
 1001912:	jne    0x1001914
 1001914:	bound  eax,QWORD PTR [eax]
 1001916:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 100191b:	add    BYTE PTR [eax+eax*1+0x0],ch
 100191f:	add    BYTE PTR [ebx+0x74],dl
 1001922:	popa   
 1001923:	jb     0x1001999
 1001925:	add    BYTE PTR [eax],al
 1001927:	add    BYTE PTR [ebx+0x0],dh
 100192a:	jae    0x100192c
 100192c:	ins    DWORD PTR es:[edi],dx
 100192d:	add    BYTE PTR [ebx+0x0],dh
	...
 1001938:	jnp    0x100193a
 100193a:	bound  eax,QWORD PTR [eax]
 100193c:	xor    BYTE PTR [eax],al
 100193e:	arpl   WORD PTR [eax],ax
 1001940:	arpl   WORD PTR [eax],ax
 1001942:	cmp    DWORD PTR [eax],eax
 1001944:	cmp    BYTE PTR [eax],al
 1001946:	popa   
 1001947:	add    BYTE PTR ds:0x63002d00,dh
 100194d:	add    BYTE PTR [ebp+0x0],ah
 1001950:	xor    al,0x0
 1001952:	add    BYTE PTR fs:0x62003400,ch
 1001959:	add    BYTE PTR [eax+eax*1+0x35],ah
 100195d:	add    BYTE PTR ds:0x39006100,ch
 1001963:	add    BYTE PTR [edx],dh
 1001965:	add    BYTE PTR [edx],dh
 1001967:	add    BYTE PTR ds:0x61006200,ch
 100196d:	add    BYTE PTR [eax+eax*1+0x32],ah
 1001971:	add    BYTE PTR [esi],dh
 1001973:	add    BYTE PTR [edx+0x0],ah
 1001976:	xor    BYTE PTR [eax],al
 1001978:	xor    eax,DWORD PTR [eax]
 100197a:	cmp    BYTE PTR [eax],al
 100197c:	cmp    DWORD PTR [eax],eax
 100197e:	bound  eax,QWORD PTR [eax]
 1001980:	add    BYTE PTR fs:[ebp+0x0],bh
 1001984:	add    BYTE PTR [eax],al
 1001986:	add    BYTE PTR [eax],al
 1001988:	inc    ecx
 1001989:	add    BYTE PTR [eax+eax*1+0x76],ah
 100198d:	add    BYTE PTR [ecx+0x0],ah
 1001990:	jo     0x1001992
 1001992:	imul   eax,DWORD PTR [eax],0x320033
 1001998:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 100199d:	add    BYTE PTR [eax+eax*1+0x0],ch
 10019a1:	add    BYTE PTR [eax],al
 10019a3:	add    BYTE PTR [edx+0x65],dl
 10019a6:	addr16 dec edi
 10019a8:	jo     0x1001a0f
 10019aa:	outs   dx,BYTE PTR ds:[esi]
 10019ab:	dec    ebx
 10019ac:	gs jns 0x1001a03
 10019af:	jb     0x1001a12
 10019b1:	outs   dx,BYTE PTR ds:[esi]
 10019b2:	jae    0x1001a15
 10019b4:	arpl   WORD PTR [ebp+eiz*2+0x64],si
 10019b8:	push   edi
 10019b9:	add    BYTE PTR [eax],al
 10019bb:	add    BYTE PTR [ebx],al
 10019bd:	xor    eax,0x4d2c0100
 10019c2:	add    BYTE PTR [ecx],al
 10019c4:	pop    ds
 10019c5:	add    BYTE PTR ds:[ecx],al
 10019c8:	and    eax,0x5c007300
 10019cd:	add    BYTE PTR ds:0x5c006400,ah
 10019d3:	add    BYTE PTR ds:0x7300,ah
 10019d9:	add    BYTE PTR [eax],al
 10019db:	add    BYTE PTR [eax+eax*1+0x2a],bl
 10019df:	add    BYTE PTR [esi],ch
 10019e1:	add    BYTE PTR [edx],ch
 10019e3:	add    BYTE PTR [eax],al
 10019e5:	add    BYTE PTR [eax],al
 10019e7:	add    BYTE PTR [esi],ch
 10019e9:	add    BYTE PTR [eax],al
 10019eb:	add    BYTE PTR [esi],ch
 10019ed:	add    BYTE PTR [esi],ch
 10019ef:	add    BYTE PTR [eax],al
 10019f1:	add    BYTE PTR [eax],al
 10019f3:	add    BYTE PTR [eax+eax*1+0x47],bl
 10019f7:	add    BYTE PTR [ebp+0x0],ah
 10019fa:	outs   dx,BYTE PTR ds:[esi]
 10019fb:	add    BYTE PTR [ebp+0x0],ah
 10019fe:	jb     0x1001a00
 1001a00:	popa   
 1001a01:	add    BYTE PTR [eax+eax*1+0x0],ch
 1001a05:	add    BYTE PTR [eax],al
 1001a07:	add    BYTE PTR [ebp+0x0],dl
 1001a0a:	dec    ecx
 1001a0b:	add    BYTE PTR [eax+eax*1+0x61],cl
 1001a0f:	add    BYTE PTR [esi+0x0],ch
 1001a12:	add    BYTE PTR [di+0x0],dh
 1001a16:	popa   
 1001a17:	add    BYTE PTR [edi+0x0],ah
 1001a1a:	add    BYTE PTR gs:[eax],al
 1001a1d:	add    BYTE PTR [eax],al
 1001a1f:	add    BYTE PTR ds:0x5f007300,ah
 1001a25:	add    BYTE PTR [ebx+0x0],al
 1001a28:	outs   dx,DWORD PTR ds:[esi]
 1001a29:	add    BYTE PTR [esi+0x0],ch
 1001a2c:	data16 add BYTE PTR [ecx+0x0],ch
 1001a30:	add    BYTE PTR [si+0x0],bl
 1001a34:	push   eax
 1001a35:	add    BYTE PTR [ecx+0x0],ah
 1001a38:	arpl   WORD PTR [eax],ax
 1001a3a:	imul   eax,DWORD PTR [eax],0x61
 1001a3d:	add    BYTE PTR [edi+0x0],ah
 1001a40:	add    BYTE PTR gs:[ebx+0x0],dh
 1001a44:	pop    esp
 1001a45:	add    BYTE PTR ds:0x5c007300,ah
 1001a4b:	add    BYTE PTR [ebx+0x0],dl
 1001a4e:	popa   
 1001a4f:	add    BYTE PTR [eax+eax*1+0x65],dh
 1001a53:	add    BYTE PTR [eax+eax*1+0x6c],ch
 1001a57:	add    BYTE PTR [ecx+0x0],ch
 1001a5a:	je     0x1001a5c
 1001a5c:	add    BYTE PTR gs:[eax+eax*1+0x6c],al
 1001a61:	add    BYTE PTR [eax+eax*1+0x0],ch
 1001a65:	add    BYTE PTR [eax],al
 1001a67:	add    BYTE PTR [eax+eax*1+0x6c],al
 1001a6b:	add    BYTE PTR [eax+eax*1+0x4e],ch
 1001a6f:	add    BYTE PTR [ecx+0x0],ah
 1001a72:	ins    DWORD PTR es:[edi],dx
 1001a73:	add    BYTE PTR [ebp+0x0],ah
 1001a76:	add    BYTE PTR [eax],al
 1001a78:	push   eax
 1001a79:	add    BYTE PTR [ecx+0x0],ah
 1001a7c:	je     0x1001a7e
 1001a7e:	push   0x0
 1001a83:	add    BYTE PTR [esi+0x65],dh
 1001a86:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1001a8a:	cmp    al,0x54
 1001a8c:	and    BYTE PTR ds:[edi+ebp*2+0x6f],dh
 1001a91:	and    BYTE PTR [edi+ebp*2+0x6e],ch
 1001a95:	add    BYTE PTR [bx+si],al
 1001a98:	imul   esp,DWORD PTR [ebp+0x72],0x6e
 1001a9c:	gs ins BYTE PTR es:[edi],dx
 1001a9e:	xor    esi,DWORD PTR [edx]
 1001aa0:	cs fs ins BYTE PTR es:[edi],dx
 1001aa3:	ins    BYTE PTR es:[edi],dx
 1001aa4:	add    BYTE PTR [eax],al
 1001aa6:	add    BYTE PTR [eax],al
 1001aa8:	inc    edi
 1001aa9:	gs je  0x1001aef
 1001aac:	outs   dx,DWORD PTR ds:[esi]
 1001aad:	ins    DWORD PTR es:[edi],dx
 1001aae:	ins    DWORD PTR es:[edi],dx
 1001aaf:	popa   
 1001ab0:	outs   dx,BYTE PTR ds:[esi]
 1001ab1:	fs dec esp
 1001ab3:	imul   ebp,DWORD PTR [esi+0x65],0x57
 1001aba:	add    BYTE PTR [eax],al
 1001abc:	add    BYTE PTR [eax],al
 1001abe:	add    BYTE PTR [eax],al
 1001ac0:	sbb    al,0x1f
 1001ac2:	add    BYTE PTR [ecx],al
 1001ac4:	iret   
 1001ac5:	dec    esp
 1001ac6:	add    BYTE PTR [ecx],al
 1001ac8:	shl    BYTE PTR [eax-0x5ee7ff00],0x0
 1001acf:	add    DWORD PTR [eax],edx
 1001ad1:	pop    ecx
 1001ad2:	das    
 1001ad3:	mov    dh,0x28
 1001ad5:	rcl    DWORD PTR gs:[ecx],1
 1001ad8:	xchg   esi,eax
 1001ad9:	adc    DWORD PTR [eax],eax
 1001adb:	add    al,bh
 1001add:	push   ds
 1001ade:	or     eax,0x4c3de00d
 1001ae3:	cmp    DWORD PTR [edi+0x3c],ebp
 1001ae6:	rcl    BYTE PTR [ecx],cl
 1001ae8:	cmp    DWORD PTR [ebx+0x0],0x7a794fc0
 1001aef:	mov    bh,0xca
 1001af1:	test   eax,0x92a25dc0
 1001af6:	add    al,0x42
 1001af8:	nop
 1001af9:	add    esp,esp
 1001afb:	into   
 1001afc:	pop    edi
 1001afd:	adc    ecx,esp
 1001aff:	test   al,0x35
 1001b01:	push   esi
 1001b02:	add    BYTE PTR [ecx],al
 1001b04:	push   ecx
 1001b05:	push   esi
 1001b06:	add    BYTE PTR [ecx],al
 1001b08:	jae    0x1001b60
 1001b0a:	add    BYTE PTR [ecx],al
 1001b0c:	mov    al,0x56
 1001b0e:	add    BYTE PTR [ecx],al
 1001b10:	int3   
 1001b11:	push   esi
 1001b12:	add    BYTE PTR [ecx],al
 1001b14:	repnz push esi
 1001b16:	add    BYTE PTR [ecx],al
 1001b18:	popa   
 1001b19:	push   edi
 1001b1a:	add    BYTE PTR [ecx],al
 1001b1c:	je     0x1001b75
 1001b1e:	add    BYTE PTR [ecx],al
 1001b20:	ficom  DWORD PTR [edi+0x0]
 1001b23:	add    ebp,ebp
 1001b25:	push   edi
 1001b26:	add    BYTE PTR [ecx],al
 1001b28:	cmc    
 1001b29:	push   edi
 1001b2a:	add    BYTE PTR [ecx],al
 1001b2c:	add    BYTE PTR [eax],al
 1001b2e:	add    BYTE PTR [eax],al
 1001b30:	imul   ebp,DWORD PTR [esi+0x73],0x69706174
 1001b37:	xor    DWORD PTR [ecx],esi
 1001b39:	xor    BYTE PTR [esi],ch
 1001b3b:	fs ins BYTE PTR es:[edi],dx
 1001b3d:	ins    BYTE PTR es:[edi],dx
 1001b3e:	add    BYTE PTR [eax],al
 1001b40:	cmp    eax,DWORD PTR [eax]
 1001b42:	add    BYTE PTR [eax],al
 1001b44:	inc    edi
 1001b45:	gs je  0x1001b8c
 1001b48:	ins    BYTE PTR es:[edi],dx
 1001b49:	ins    BYTE PTR es:[edi],dx
 1001b4a:	inc    esp
 1001b4b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 1001b52:	jns    0x1001bab
 1001b54:	add    BYTE PTR [eax],al
 1001b56:	add    BYTE PTR [eax],al
 1001b58:	imul   eax,DWORD PTR [eax],0x65
 1001b5b:	add    BYTE PTR [edx+0x0],dh
 1001b5e:	outs   dx,BYTE PTR ds:[esi]
 1001b5f:	add    BYTE PTR [ebp+0x0],ah
 1001b62:	ins    BYTE PTR es:[edi],dx
 1001b63:	add    BYTE PTR [ebx],dh
 1001b65:	add    BYTE PTR [edx],dh
 1001b67:	add    BYTE PTR [esi],ch
 1001b69:	add    BYTE PTR [eax+eax*1+0x6c],ah
 1001b6d:	add    BYTE PTR [eax+eax*1+0x0],ch
 1001b71:	add    BYTE PTR [eax],al
 1001b73:	add    BYTE PTR [ebx+0x65],dl
 1001b76:	je     0x1001bbc
 1001b78:	ins    BYTE PTR es:[edi],dx
 1001b79:	ins    BYTE PTR es:[edi],dx
 1001b7a:	inc    esp
 1001b7b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 1001b82:	jns    0x1001bdb
 1001b84:	add    BYTE PTR [eax],al
 1001b86:	add    BYTE PTR [eax],al
 1001b88:	push   ebx
 1001b89:	add    BYTE PTR [edi+0x0],ch
 1001b8c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
 1001b91:	add    BYTE PTR [ecx+0x0],ah
 1001b94:	jb     0x1001b96
 1001b96:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
 1001b9b:	add    BYTE PTR [ecx+0x0],ch
 1001b9e:	arpl   WORD PTR [eax],ax
 1001ba0:	jb     0x1001ba2
 1001ba2:	outs   dx,DWORD PTR ds:[esi]
 1001ba3:	add    BYTE PTR [ebx+0x0],dh
 1001ba6:	outs   dx,DWORD PTR ds:[esi]
 1001ba7:	add    BYTE PTR [esi+0x0],ah
 1001baa:	je     0x1001bac
 1001bac:	pop    esp
 1001bad:	add    BYTE PTR [ebp+0x0],cl
 1001bb0:	imul   eax,DWORD PTR [eax],0x720063
 1001bb6:	outs   dx,DWORD PTR ds:[esi]
 1001bb7:	add    BYTE PTR [ebx+0x0],dh
 1001bba:	outs   dx,DWORD PTR ds:[esi]
 1001bbb:	add    BYTE PTR [esi+0x0],ah
 1001bbe:	je     0x1001bc0
 1001bc0:	and    BYTE PTR [eax],al
 1001bc2:	push   ebx
 1001bc3:	add    BYTE PTR [ecx+0x0],dl
 1001bc6:	dec    esp
 1001bc7:	add    BYTE PTR [eax],ah
 1001bc9:	add    BYTE PTR [ebx+0x0],dl
 1001bcc:	add    BYTE PTR gs:[edx+0x0],dh
 1001bd0:	jbe    0x1001bd2
 1001bd2:	add    BYTE PTR gs:[edx+0x0],dh
 1001bd6:	pop    esp
 1001bd7:	add    BYTE PTR [ecx],dh
 1001bd9:	add    BYTE PTR [ecx],dh
 1001bdb:	add    BYTE PTR [eax],dh
 1001bdd:	add    BYTE PTR [eax],al
 1001bdf:	add    BYTE PTR ds:0x64007e00,ah
 1001be5:	add    BYTE PTR [eax+0x0],dh
 1001be8:	and    eax,0x2e000000
 1001bed:	add    BYTE PTR [ebp+0x0],ah
 1001bf0:	js     0x1001bf2
 1001bf2:	je     0x1001bf4
 1001bf4:	add    BYTE PTR [eax],al
 1001bf6:	add    BYTE PTR [eax],al
 1001bf8:	(bad)  
 1001bf9:	inc    DWORD PTR [eax]
 1001bfb:	add    BYTE PTR [ebp+0x0],ch
 1001bfe:	jae    0x1001c00
 1001c00:	ins    DWORD PTR es:[edi],dx
 1001c01:	add    BYTE PTR [eax+eax*1+0x73],ah
 1001c05:	add    BYTE PTR [edx+0x0],dh
 1001c08:	jbe    0x1001c0a
 1001c0a:	add    BYTE PTR cs:[ebp+0x0],ah
 1001c0e:	js     0x1001c10
 1001c10:	add    BYTE PTR gs:[eax],al
 1001c13:	add    BYTE PTR [eax],al
 1001c15:	add    BYTE PTR [eax],al
 1001c17:	add    BYTE PTR [eax+0x0],cl
 1001c1a:	dec    ebx
 1001c1b:	add    BYTE PTR [ebp+0x0],al
 1001c1e:	pop    ecx
 1001c1f:	add    BYTE PTR [edi+0x0],bl
 1001c22:	dec    esp
 1001c23:	add    BYTE PTR [edi+0x0],cl
 1001c26:	inc    ebx
 1001c27:	add    BYTE PTR [ecx+0x0],al
 1001c2a:	dec    esp
 1001c2b:	add    BYTE PTR [edi+0x0],bl
 1001c2e:	dec    ebp
 1001c2f:	add    BYTE PTR [ecx+0x0],al
 1001c32:	inc    ebx
 1001c33:	add    BYTE PTR [eax+0x0],cl
 1001c36:	dec    ecx
 1001c37:	add    BYTE PTR [esi+0x0],cl
 1001c3a:	inc    ebp
 1001c3b:	add    BYTE PTR [eax+eax*1+0x53],bl
 1001c3f:	add    BYTE PTR [edi+0x0],cl
 1001c42:	inc    esi
 1001c43:	add    BYTE PTR [eax+eax*1+0x57],dl
 1001c47:	add    BYTE PTR [ecx+0x0],al
 1001c4a:	push   edx
 1001c4b:	add    BYTE PTR [ebp+0x0],al
 1001c4e:	pop    esp
 1001c4f:	add    BYTE PTR [ebp+0x0],cl
 1001c52:	imul   eax,DWORD PTR [eax],0x720063
 1001c58:	outs   dx,DWORD PTR ds:[esi]
 1001c59:	add    BYTE PTR [ebx+0x0],dh
 1001c5c:	outs   dx,DWORD PTR ds:[esi]
 1001c5d:	add    BYTE PTR [esi+0x0],ah
 1001c60:	je     0x1001c62
 1001c62:	pop    esp
 1001c63:	add    BYTE PTR [ebp+0x0],cl
 1001c66:	imul   eax,DWORD PTR [eax],0x720063
 1001c6c:	outs   dx,DWORD PTR ds:[esi]
 1001c6d:	add    BYTE PTR [ebx+0x0],dh
 1001c70:	outs   dx,DWORD PTR ds:[esi]
 1001c71:	add    BYTE PTR [esi+0x0],ah
 1001c74:	je     0x1001c76
 1001c76:	and    BYTE PTR [eax],al
 1001c78:	push   ebx
 1001c79:	add    BYTE PTR [ecx+0x0],dl
 1001c7c:	dec    esp
 1001c7d:	add    BYTE PTR [eax],ah
 1001c7f:	add    BYTE PTR [ebx+0x0],dl
 1001c82:	add    BYTE PTR gs:[edx+0x0],dh
 1001c86:	jbe    0x1001c88
 1001c88:	add    BYTE PTR gs:[edx+0x0],dh
 1001c8c:	pop    esp
 1001c8d:	add    BYTE PTR [ecx+0x0],cl
 1001c90:	outs   dx,BYTE PTR ds:[esi]
 1001c91:	add    BYTE PTR [ebx+0x0],dh
 1001c94:	je     0x1001c96
 1001c96:	popa   
 1001c97:	add    BYTE PTR [esi+0x0],ch
 1001c9a:	arpl   WORD PTR [eax],ax
 1001c9c:	add    BYTE PTR gs:[eax],ah
 1001c9f:	add    BYTE PTR [esi+0x0],cl
 1001ca2:	popa   
 1001ca3:	add    BYTE PTR [ebp+0x0],ch
 1001ca6:	add    BYTE PTR gs:[ebx+0x0],dh
 1001caa:	pop    esp
 1001cab:	add    BYTE PTR [ebx+0x0],dl
 1001cae:	push   ecx
 1001caf:	add    BYTE PTR [eax+eax*1+0x0],cl
 1001cb3:	add    BYTE PTR ds:0x51005300,ah
 1001cb9:	add    BYTE PTR [eax+eax*1+0x53],cl
 1001cbd:	add    BYTE PTR [ebp+0x0],al
 1001cc0:	push   edx
 1001cc1:	add    BYTE PTR [esi+0x0],dl
 1001cc4:	push   edx
 1001cc5:	add    BYTE PTR [edi+0x0],bl
 1001cc8:	dec    ecx
 1001cc9:	add    BYTE PTR [esi+0x0],cl
 1001ccc:	push   ebx
 1001ccd:	add    BYTE PTR [eax+eax*1+0x4e],dl
 1001cd1:	add    BYTE PTR [ecx+0x0],al
 1001cd4:	dec    ebp
 1001cd5:	add    BYTE PTR [ebp+0x0],al
 1001cd8:	and    eax,0x69000000
 1001cdd:	add    BYTE PTR [esi+0x0],ch
 1001ce0:	imul   eax,DWORD PTR [eax],0x730000
 1001ce6:	jno    0x1001ce8
 1001ce8:	ins    BYTE PTR es:[edi],dx
 1001ce9:	add    BYTE PTR [ebx+0x0],dh
 1001cec:	add    BYTE PTR gs:[edx+0x0],dh
 1001cf0:	jbe    0x1001cf2
 1001cf2:	jb     0x1001cf4
 1001cf4:	add    BYTE PTR cs:[ecx+0x0],ch
 1001cf8:	outs   dx,BYTE PTR ds:[esi]
 1001cf9:	add    BYTE PTR [ecx+0x0],ch
 1001cfc:	add    BYTE PTR [eax],al
 1001cfe:	add    BYTE PTR [eax],al
 1001d00:	dec    eax
 1001d01:	add    BYTE PTR [ebx+0x0],cl
 1001d04:	inc    ebp
 1001d05:	add    BYTE PTR [ecx+0x0],bl
 1001d08:	pop    edi
 1001d09:	add    BYTE PTR [ebx+0x0],al
 1001d0c:	dec    esp
 1001d0d:	add    BYTE PTR [ecx+0x0],al
 1001d10:	push   ebx
 1001d11:	add    BYTE PTR [ebx+0x0],dl
 1001d14:	inc    ebp
 1001d15:	add    BYTE PTR [ebx+0x0],dl
 1001d18:	pop    edi
 1001d19:	add    BYTE PTR [edx+0x0],dl
 1001d1c:	dec    edi
 1001d1d:	add    BYTE PTR [edi+0x0],cl
 1001d20:	push   esp
 1001d21:	add    BYTE PTR [eax],al
 1001d23:	add    BYTE PTR [eax+0x0],cl
 1001d26:	dec    ebx
 1001d27:	add    BYTE PTR [ebp+0x0],al
 1001d2a:	pop    ecx
 1001d2b:	add    BYTE PTR [edi+0x0],bl
 1001d2e:	inc    ebx
 1001d2f:	add    BYTE PTR [ebp+0x0],dl
 1001d32:	push   edx
 1001d33:	add    BYTE PTR [edx+0x0],dl
 1001d36:	inc    ebp
 1001d37:	add    BYTE PTR [esi+0x0],cl
 1001d3a:	push   esp
 1001d3b:	add    BYTE PTR [edi+0x0],bl
 1001d3e:	push   ebp
 1001d3f:	add    BYTE PTR [ebx+0x0],dl
 1001d42:	inc    ebp
 1001d43:	add    BYTE PTR [edx+0x0],dl
 1001d46:	add    BYTE PTR [eax],al
 1001d48:	dec    eax
 1001d49:	add    BYTE PTR [ebx+0x0],cl
 1001d4c:	inc    ebp
 1001d4d:	add    BYTE PTR [ecx+0x0],bl
 1001d50:	pop    edi
 1001d51:	add    BYTE PTR [eax+eax*1+0x4f],cl
 1001d55:	add    BYTE PTR [ebx+0x0],al
 1001d58:	inc    ecx
 1001d59:	add    BYTE PTR [eax+eax*1+0x5f],cl
 1001d5d:	add    BYTE PTR [ebp+0x0],cl
 1001d60:	inc    ecx
 1001d61:	add    BYTE PTR [ebx+0x0],al
 1001d64:	dec    eax
 1001d65:	add    BYTE PTR [ecx+0x0],cl
 1001d68:	dec    esi
 1001d69:	add    BYTE PTR [ebp+0x0],al
 1001d6c:	add    BYTE PTR [eax],al
 1001d6e:	add    BYTE PTR [eax],al
 1001d70:	dec    eax
 1001d71:	add    BYTE PTR [ebx+0x0],cl
 1001d74:	inc    ebp
 1001d75:	add    BYTE PTR [ecx+0x0],bl
 1001d78:	pop    edi
 1001d79:	add    BYTE PTR [ebp+0x0],dl
 1001d7c:	push   ebx
 1001d7d:	add    BYTE PTR [ebp+0x0],al
 1001d80:	push   edx
 1001d81:	add    BYTE PTR [ebx+0x0],dl
 1001d84:	add    BYTE PTR [eax],al
 1001d86:	add    BYTE PTR [eax],al
 1001d88:	dec    eax
 1001d89:	add    BYTE PTR [ebx+0x0],cl
 1001d8c:	inc    ebp
 1001d8d:	add    BYTE PTR [ecx+0x0],bl
 1001d90:	pop    edi
 1001d91:	add    BYTE PTR [eax+0x0],dl
 1001d94:	inc    ebp
 1001d95:	add    BYTE PTR [edx+0x0],dl
 1001d98:	inc    esi
 1001d99:	add    BYTE PTR [edi+0x0],cl
 1001d9c:	push   edx
 1001d9d:	add    BYTE PTR [ebp+0x0],cl
 1001da0:	inc    ecx
 1001da1:	add    BYTE PTR [esi+0x0],cl
 1001da4:	inc    ebx
 1001da5:	add    BYTE PTR [ebp+0x0],al
 1001da8:	pop    edi
 1001da9:	add    BYTE PTR [eax+eax*1+0x41],al
 1001dad:	add    BYTE PTR [eax+eax*1+0x41],dl
 1001db1:	add    BYTE PTR [eax],al
 1001db3:	add    BYTE PTR [eax+0x0],cl
 1001db6:	dec    ebx
 1001db7:	add    BYTE PTR [ebp+0x0],al
 1001dba:	pop    ecx
 1001dbb:	add    BYTE PTR [edi+0x0],bl
 1001dbe:	inc    ebx
 1001dbf:	add    BYTE PTR [ebp+0x0],dl
 1001dc2:	push   edx
 1001dc3:	add    BYTE PTR [edx+0x0],dl
 1001dc6:	inc    ebp
 1001dc7:	add    BYTE PTR [esi+0x0],cl
 1001dca:	push   esp
 1001dcb:	add    BYTE PTR [edi+0x0],bl
 1001dce:	inc    ebx
 1001dcf:	add    BYTE PTR [edi+0x0],cl
 1001dd2:	dec    esi
 1001dd3:	add    BYTE PTR [esi+0x0],al
 1001dd6:	dec    ecx
 1001dd7:	add    BYTE PTR [edi+0x0],al
 1001dda:	add    BYTE PTR [eax],al
 1001ddc:	dec    eax
 1001ddd:	add    BYTE PTR [ebx+0x0],cl
 1001de0:	inc    ebp
 1001de1:	add    BYTE PTR [ecx+0x0],bl
 1001de4:	pop    edi
 1001de5:	add    BYTE PTR [eax+eax*1+0x59],al
 1001de9:	add    BYTE PTR [esi+0x0],cl
 1001dec:	pop    edi
 1001ded:	add    BYTE PTR [eax+eax*1+0x41],al
 1001df1:	add    BYTE PTR [eax+eax*1+0x41],dl
 1001df5:	add    BYTE PTR [eax],al
 1001df7:	add    BYTE PTR [eax+0x0],al
 1001dfa:	add    BYTE PTR [eax],al
 1001dfc:	add    BYTE PTR fs:[edi+0x0],dh
 1001e00:	outs   dx,DWORD PTR ds:[esi]
 1001e01:	add    BYTE PTR [edx+0x0],dh
 1001e04:	add    BYTE PTR fs:[edx],bh
 1001e07:	add    BYTE PTR ds:0x38003000,ah
 1001e0d:	add    BYTE PTR [eax+0x0],bh
 1001e10:	add    BYTE PTR [eax],al
 1001e12:	add    BYTE PTR [eax],al
 1001e14:	push   0x78006500
 1001e19:	add    BYTE PTR [edx],bh
 1001e1b:	add    BYTE PTR [eax],al
 1001e1d:	add    BYTE PTR [eax],al
 1001e1f:	add    BYTE PTR [eax+0x0],ch
 1001e22:	add    BYTE PTR gs:[eax+0x0],bh
 1001e26:	sub    BYTE PTR [eax],al
 1001e28:	add    BYTE PTR [eax],al
 1001e2a:	add    BYTE PTR [eax],al
 1001e2c:	and    eax,0x29006400
 1001e31:	add    BYTE PTR [edx],bh
 1001e33:	add    BYTE PTR [eax],al
 1001e35:	add    BYTE PTR [eax],al
 1001e37:	add    BYTE PTR ds:0x38003000,ah
 1001e3d:	add    BYTE PTR [eax+0x0],bh
 1001e40:	add    BYTE PTR [eax],al
 1001e42:	add    BYTE PTR [eax],al
 1001e44:	push   ebx
 1001e45:	jns    0x1001eba
 1001e47:	je     0x1001eae
 1001e49:	ins    DWORD PTR es:[edi],dx
 1001e4a:	inc    esi
 1001e4b:	jne    0x1001ebb
 1001e4d:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 1001e51:	outs   dx,BYTE PTR ds:[esi]
 1001e52:	xor    BYTE PTR [eax+esi*1],dh
 1001e55:	add    BYTE PTR [eax],al
 1001e57:	add    BYTE PTR [ebx+0x79],dl
 1001e5a:	jae    0x1001ed0
 1001e5c:	gs ins DWORD PTR es:[edi],dx
 1001e5e:	inc    esi
 1001e5f:	jne    0x1001ecf
 1001e61:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 1001e65:	outs   dx,BYTE PTR ds:[esi]
 1001e66:	xor    BYTE PTR [ecx+esi*1],dh
 1001e69:	add    BYTE PTR [eax],al
 1001e6b:	add    BYTE PTR [eax],al
 1001e6d:	add    BYTE PTR [eax],al
 1001e6f:	add    BYTE PTR [eax+0x0],cl
	...
 1001eaa:	add    BYTE PTR [eax],al
 1001eac:	jl     0x1001e3e
 1001eae:	add    BYTE PTR [ecx],al
 1001eb0:	jo     0x1001ed1
 1001eb2:	add    BYTE PTR [ecx],al
 1001eb4:	sbb    BYTE PTR [eax],al
 1001eb6:	add    BYTE PTR [eax],al
 1001eb8:	push   edx
 1001eb9:	push   ebx
 1001eba:	inc    esp
 1001ebb:	push   ebx
 1001ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001ebd:	sbb    esp,edi
 1001ebf:	jge    0x1001eaa
 1001ec1:	pop    esp
 1001ec2:	mov    cs,WORD PTR [esi-0x7e]
 1001ec5:	imul   esp,DWORD PTR ds:0xda53c75e,0xffffffab
 1001ecc:	add    DWORD PTR [eax],eax
 1001ece:	add    BYTE PTR [eax],al
 1001ed0:	jae    0x1001f45
 1001ed2:	ins    DWORD PTR es:[edi],dx
 1001ed3:	jae    0x1001f03
 1001ed5:	jo     0x1001f3b
 1001ed7:	bound  eax,QWORD PTR [eax]
	...
 1001f25:	add    BYTE PTR [eax],al
 1001f27:	add    BYTE PTR [eax+edx*4+0x0],ah
 1001f2b:	add    DWORD PTR [eax],esi
 1001f2d:	pop    ds
 1001f2e:	add    BYTE PTR [ecx],al
	...
 1001f38:	add    DWORD PTR [eax],eax
 1001f3a:	add    BYTE PTR [eax],al
 1001f3c:	inc    eax
 1001f3d:	pop    ds
 1001f3e:	add    BYTE PTR [ecx],al
 1001f40:	dec    eax
 1001f41:	pop    ds
 1001f42:	add    BYTE PTR [ecx],al
 1001f44:	add    BYTE PTR [eax],al
 1001f46:	add    BYTE PTR [eax],al
 1001f48:	fs nop
 1001f4a:	add    BYTE PTR [ecx],al
	...
 1001f54:	(bad)  
 1001f55:	(bad)  
 1001f56:	(bad)  
 1001f57:	inc    DWORD PTR [eax]
 1001f59:	add    BYTE PTR [eax],al
 1001f5b:	add    BYTE PTR [eax+0x0],al
 1001f5e:	add    BYTE PTR [eax],al
 1001f60:	xor    BYTE PTR [edi],bl
 1001f62:	add    BYTE PTR [ecx],al
	...
 1001f70:	ficom  WORD PTR [eax+0x0]
 1001f73:	add    BYTE PTR [eax+esi*2+0x0],dh
 1001f77:	add    BYTE PTR [ecx-0x2effff90],ch
 1001f7d:	jo     0x1001f7f
 1001f7f:	add    BYTE PTR [ecx+0x71],cl
 1001f82:	add    BYTE PTR [eax],al
 1001f84:	mov    dh,BYTE PTR [ecx+0x0]
 1001f87:	add    BYTE PTR [ebx-0x23ffff8f],dh
 1001f8d:	jno    0x1001f8f
 1001f8f:	add    BYTE PTR ds:0x4b000072,al
 1001f95:	jb     0x1001f97
 1001f97:	add    BYTE PTR [ecx-0x4effff8e],dl
 1001f9d:	jb     0x1001f9f
 1001f9f:	add    cl,ch
 1001fa1:	jb     0x1001fa3
 1001fa3:	add    BYTE PTR [ecx],bh
 1001fa5:	jae    0x1001fa7
 1001fa7:	add    BYTE PTR [ecx+0x73],ah
 1001faa:	add    BYTE PTR [eax],al
 1001fac:	ret    
 1001fad:	jae    0x1001faf
 1001faf:	add    BYTE PTR [eax],cl
 1001fb1:	je     0x1001fb3
 1001fb3:	add    BYTE PTR [eax+0x74],bl
 1001fb6:	add    BYTE PTR [eax],al
 1001fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1001fb9:	je     0x1001fbb
 1001fbb:	add    bh,bl
 1001fbd:	je     0x1001fbf
 1001fbf:	add    bh,bh
 1001fc1:	je     0x1001fc3
 1001fc3:	add    BYTE PTR [eax],ch
 1001fc5:	jne    0x1001fc7
 1001fc7:	add    BYTE PTR [esi+0x75],dl
 1001fca:	add    BYTE PTR [eax],al
 1001fcc:	test   BYTE PTR [ebp+0x0],dh
	...
 1001fe3:	add    BYTE PTR [eax],al
 1001fe5:	push   0x26c
 1001fea:	mov    eax,0x1007074
 1001fef:	call   0x1004bfe
 1001ff4:	mov    eax,DWORD PTR [ebp+0x10]
 1001ff7:	mov    ebx,DWORD PTR [ebp+0x8]
 1001ffa:	mov    DWORD PTR [ebp-0x23c],eax
 1002000:	xor    eax,eax
 1002002:	push   0xec
 1002007:	push   eax
 1002008:	mov    DWORD PTR [ebp-0x238],eax
 100200e:	mov    DWORD PTR [ebp-0x230],eax
 1002014:	lea    eax,[ebp-0x22c]
 100201a:	push   eax
 100201b:	or     esi,0xffffffff
 100201e:	call   0x1004cc4
 1002023:	xor    edx,edx
 1002025:	xor    eax,eax
 1002027:	push   0x9
 1002029:	pop    ecx
 100202a:	lea    edi,[ebp-0x260]
 1002030:	mov    DWORD PTR [ebp-0x264],edx
 1002036:	rep stos DWORD PTR es:[edi],eax
 1002038:	lea    eax,[ebp-0x1f0]
 100203e:	mov    DWORD PTR [ebp-0x13c],eax
 1002044:	lea    eax,[ebp-0x1e8]
 100204a:	mov    DWORD PTR [ebp-0x12c],eax
 1002050:	lea    eax,[ebp-0x1c0]
 1002056:	mov    DWORD PTR [ebp-0x11c],eax
 100205c:	lea    eax,[ebp-0x1b0]
 1002062:	mov    DWORD PTR [ebp-0x10c],eax
 1002068:	lea    eax,[ebp-0x270]
 100206e:	mov    DWORD PTR [ebp-0xfc],eax
 1002074:	lea    eax,[ebp-0x1c0]
 100207a:	mov    DWORD PTR [ebp-0xec],eax
 1002080:	lea    eax,[ebp-0x1bc]
 1002086:	mov    DWORD PTR [ebp-0xdc],eax
 100208c:	lea    eax,[ebp-0x1b8]
 1002092:	mov    DWORD PTR [ebp-0xcc],eax
 1002098:	lea    eax,[ebp-0x1dc]
 100209e:	mov    DWORD PTR [ebp-0xb4],eax
 10020a4:	mov    DWORD PTR [ebp-0xa4],eax
 10020aa:	lea    eax,[ebp-0x248]
 10020b0:	mov    DWORD PTR [ebp-0x9c],eax
 10020b6:	lea    eax,[ebp-0x24c]
 10020bc:	mov    DWORD PTR [ebp-0x84],eax
 10020c2:	mov    DWORD PTR [ebp-0x270],edx
 10020c8:	mov    DWORD PTR [ebp-0x140],0x10016c0
 10020d2:	mov    DWORD PTR [ebp-0x138],edx
 10020d8:	mov    DWORD PTR [ebp-0x134],edx
 10020de:	mov    DWORD PTR [ebp-0x130],0x10016c8
 10020e8:	mov    DWORD PTR [ebp-0x128],edx
 10020ee:	mov    DWORD PTR [ebp-0x124],edx
 10020f4:	mov    DWORD PTR [ebp-0x120],0x10016d8
 10020fe:	mov    DWORD PTR [ebp-0x118],edx
 1002104:	mov    DWORD PTR [ebp-0x114],edx
 100210a:	mov    DWORD PTR [ebp-0x110],0x10016e4
 1002114:	mov    DWORD PTR [ebp-0x108],edx
 100211a:	mov    DWORD PTR [ebp-0x104],edx
 1002120:	mov    DWORD PTR [ebp-0x100],0x10016ec
 100212a:	mov    DWORD PTR [ebp-0xf8],edx
 1002130:	mov    DWORD PTR [ebp-0xf4],edx
 1002136:	mov    DWORD PTR [ebp-0xf0],0x10016fc
 1002140:	mov    DWORD PTR [ebp-0xe8],edx
 1002146:	mov    DWORD PTR [ebp-0xe4],edx
 100214c:	mov    DWORD PTR [ebp-0xe0],0x1001710
 1002156:	mov    DWORD PTR [ebp-0xd8],edx
 100215c:	mov    DWORD PTR [ebp-0xd4],edx
 1002162:	mov    DWORD PTR [ebp-0xd0],0x1001728
 100216c:	mov    DWORD PTR [ebp-0xc8],edx
 1002172:	mov    DWORD PTR [ebp-0xc4],edx
 1002178:	mov    DWORD PTR [ebp-0xc0],0x100173c
 1002182:	mov    DWORD PTR [ebp-0xbc],edx
 1002188:	mov    DWORD PTR [ebp-0xb8],edx
 100218e:	mov    DWORD PTR [ebp-0xb0],0x1001748
 1002198:	mov    DWORD PTR [ebp-0xac],edx
 100219e:	mov    DWORD PTR [ebp-0xa8],edx
 10021a4:	mov    DWORD PTR [ebp-0xa0],0x100174c
 10021ae:	mov    DWORD PTR [ebp-0x98],edx
 10021b4:	mov    DWORD PTR [ebp-0x94],edx
 10021ba:	mov    DWORD PTR [ebp-0x90],0x1001750
 10021c4:	mov    DWORD PTR [ebp-0x8c],edx
 10021ca:	mov    DWORD PTR [ebp-0x88],edx
 10021d0:	mov    DWORD PTR [ebp-0x80],0x1001758
 10021d7:	lea    eax,[ebp-0x244]
 10021dd:	push   DWORD PTR [ebp-0x23c]
 10021e3:	mov    DWORD PTR [ebp-0x7c],eax
 10021e6:	lea    eax,[ebp-0x264]
 10021ec:	mov    DWORD PTR [ebp-0x64],eax
 10021ef:	lea    eax,[ebp-0x25c]
 10021f5:	mov    DWORD PTR [ebp-0x54],eax
 10021f8:	lea    eax,[ebp-0x258]
 10021fe:	mov    DWORD PTR [ebp-0x4c],eax
 1002201:	lea    eax,[ebp-0x254]
 1002207:	mov    DWORD PTR [ebp-0x34],eax
 100220a:	lea    eax,[ebp-0x250]
 1002210:	mov    DWORD PTR [ebp-0x78],edx
 1002213:	mov    DWORD PTR [ebp-0x74],edx
 1002216:	mov    DWORD PTR [ebp-0x70],0x100125c
 100221d:	mov    DWORD PTR [ebp-0x6c],edx
 1002220:	mov    DWORD PTR [ebp-0x68],edx
 1002223:	mov    DWORD PTR [ebp-0x60],0x100176c
 100222a:	mov    DWORD PTR [ebp-0x5c],edx
 100222d:	mov    DWORD PTR [ebp-0x58],edx
 1002230:	mov    DWORD PTR [ebp-0x50],0x1001770
 1002237:	mov    DWORD PTR [ebp-0x48],edx
 100223a:	mov    DWORD PTR [ebp-0x44],edx
 100223d:	mov    DWORD PTR [ebp-0x40],0x1001774
 1002244:	mov    DWORD PTR [ebp-0x3c],edx
 1002247:	mov    DWORD PTR [ebp-0x38],edx
 100224a:	mov    DWORD PTR [ebp-0x30],0x1001778
 1002251:	mov    DWORD PTR [ebp-0x2c],edx
 1002254:	mov    DWORD PTR [ebp-0x28],edx
 1002257:	mov    DWORD PTR [ebp-0x24],eax
 100225a:	mov    DWORD PTR [ebp-0x20],edx
 100225d:	mov    DWORD PTR [ebp-0x1c],edx
 1002260:	mov    DWORD PTR [ebp-0x18],edx
 1002263:	mov    DWORD PTR [ebp-0x14],edx
 1002266:	mov    DWORD PTR [ebp-0x26c],edx
 100226c:	call   0x1004559
 1002271:	push   DWORD PTR [ebp+0x14]
 1002274:	mov    edi,eax
 1002276:	lea    eax,[ebp-0x230]
 100227c:	push   edi
 100227d:	push   eax
 100227e:	call   0x1004243
 1002283:	add    esp,0x1c
 1002286:	test   eax,eax
 1002288:	js     0x100242e
 100228e:	lea    eax,[ebp-0x26c]
 1002294:	push   eax
 1002295:	lea    eax,[ebp-0x278]
 100229b:	push   eax
 100229c:	lea    eax,[ebp-0x20c]
 10022a2:	push   eax
 10022a3:	lea    eax,[ebp-0x140]
 10022a9:	push   eax
 10022aa:	push   DWORD PTR [ebp-0x210]
 10022b0:	mov    DWORD PTR [ebp-0x258],esi
 10022b6:	push   0x1001780
 10022bb:	call   0x10042de
 10022c0:	add    esp,0x18
 10022c3:	cmp    DWORD PTR [ebp-0x20c],0x0
 10022ca:	mov    DWORD PTR [ebp-0x268],eax
 10022d0:	je     0x10022d9
 10022d2:	push   0x10017ec
 10022d7:	jmp    0x10022de
 10022d9:	push   0x100183c
 10022de:	push   0x10017f8
 10022e3:	call   DWORD PTR ds:0x10010c0
 10022e9:	cmp    DWORD PTR [ebp-0x250],0x0
 10022f0:	je     0x100238d
 10022f6:	call   0x1006c9a
 10022fb:	and    DWORD PTR [ebp-0x234],0x0
 1002302:	lea    eax,[ebp-0x234]
 1002308:	push   eax
 1002309:	push   0xfffffffe
 100230b:	push   DWORD PTR [ebp-0x250]
 1002311:	mov    DWORD PTR [ebp-0x238],0x1
 100231b:	call   0x10026b4
 1002320:	test   eax,eax
 1002322:	jne    0x100238d
 1002324:	push   0x8
 1002326:	call   0x1004b3c
 100232b:	pop    ecx
 100232c:	mov    ecx,eax
 100232e:	mov    DWORD PTR [ebp-0x274],ecx
 1002334:	and    DWORD PTR [ebp-0x4],0x0
 1002338:	test   ecx,ecx
 100233a:	je     0x100234f
 100233c:	mov    eax,DWORD PTR [ebp-0x250]
 1002342:	and    DWORD PTR [ecx],0x0
 1002345:	and    DWORD PTR [ecx+0x4],0x0
 1002349:	push   eax
 100234a:	call   0x1002d2b
 100234f:	mov    DWORD PTR [ebp-0x4],esi
 1002352:	mov    ecx,DWORD PTR [ebp-0x234]
 1002358:	mov    eax,DWORD PTR [ebp-0x250]
 100235e:	test   ecx,ecx
 1002360:	je     0x1002369
 1002362:	mov    BYTE PTR [eax],0x0
 1002365:	inc    eax
 1002366:	dec    ecx
 1002367:	jne    0x1002362
 1002369:	lea    eax,[ebp-0x234]
 100236f:	push   eax
 1002370:	push   0xfffffffe
 1002372:	push   edi
 1002373:	call   0x10026b4
 1002378:	test   eax,eax
 100237a:	jne    0x100238d
 100237c:	mov    eax,DWORD PTR [ebp-0x234]
 1002382:	test   eax,eax
 1002384:	je     0x100238d
 1002386:	mov    BYTE PTR [edi],0x0
 1002389:	inc    edi
 100238a:	dec    eax
 100238b:	jne    0x1002386
 100238d:	cmp    DWORD PTR [ebp-0x268],0x0
 1002394:	jge    0x10023c2
 1002396:	and    DWORD PTR [ebp-0x264],0x0
 100239d:	and    DWORD PTR [ebp-0x25c],0x0
 10023a4:	and    DWORD PTR [ebp-0x254],0x0
 10023ab:	and    DWORD PTR [ebp-0x260],0x0
 10023b2:	mov    DWORD PTR [ebp-0x258],esi
 10023b8:	mov    DWORD PTR [ebp-0x248],0x1
 10023c2:	lea    eax,[ebp-0x230]
 10023c8:	push   eax
 10023c9:	call   0x100450e
 10023ce:	pop    ecx
 10023cf:	test   eax,eax
 10023d1:	js     0x1002420
 10023d3:	cmp    DWORD PTR [ebp-0x248],0x0
 10023da:	je     0x10023e5
 10023dc:	call   0x1002f56
 10023e1:	xor    esi,esi
 10023e3:	jmp    0x1002420
 10023e5:	call   0x1005850
 10023ea:	test   eax,eax
 10023ec:	je     0x10023e1
 10023ee:	call   0x1002f67
 10023f3:	test   al,al
 10023f5:	je     0x10023e1
 10023f7:	push   ebx
 10023f8:	call   0x1002d87
 10023fd:	mov    edi,eax
 10023ff:	pop    ecx
 1002400:	test   edi,edi
 1002402:	je     0x1002420
 1002404:	push   DWORD PTR [ebp+0x14]
 1002407:	push   DWORD PTR [ebp-0x23c]
 100240d:	push   ebx
 100240e:	push   edi
 100240f:	call   0x1002ea1
 1002414:	add    esp,0x10
 1002417:	push   edi
 1002418:	mov    esi,eax
 100241a:	call   DWORD PTR ds:0x10010dc
 1002420:	cmp    DWORD PTR [ebp-0x238],0x0
 1002427:	je     0x100242e
 1002429:	call   0x1006d23
 100242e:	mov    eax,esi
 1002430:	call   0x1004c90
 1002435:	ret    0x10
 1002438:	int3   
 1002439:	int3   
 100243a:	int3   
 100243b:	int3   
 100243c:	int3   
 100243d:	mov    edi,edi
 100243f:	push   ebp
 1002440:	mov    ebp,esp
 1002442:	mov    eax,DWORD PTR [ebp+0x8]
 1002445:	mov    DWORD PTR [ebp+0x8],eax
 1002448:	push   0x100776c
 100244d:	lea    eax,[ebp+0x8]
 1002450:	push   eax
 1002451:	call   0x1004b80
 1002456:	int3   
 1002457:	int3   
 1002458:	int3   
 1002459:	int3   
 100245a:	int3   
 100245b:	int3   
 100245c:	mov    edi,edi
 100245e:	push   ebp
 100245f:	mov    ebp,esp
 1002461:	mov    eax,DWORD PTR [ebp+0x8]
 1002464:	test   eax,eax
 1002466:	je     0x1002494
 1002468:	cmp    eax,0xc
 100246b:	je     0x100248d
 100246d:	cmp    eax,0x16
 1002470:	je     0x1002486
 1002472:	cmp    eax,0x22
 1002475:	je     0x1002486
 1002477:	cmp    eax,0x50
 100247a:	je     0x1002494
 100247c:	push   0x80004005
 1002481:	call   0x100243d
 1002486:	push   0x80070057
 100248b:	jmp    0x1002481
 100248d:	push   0x8007000e
 1002492:	jmp    0x1002481
 1002494:	pop    ebp
 1002495:	ret    
 1002496:	int3   
 1002497:	int3   
 1002498:	int3   
 1002499:	int3   
 100249a:	int3   
 100249b:	mov    edi,edi
 100249d:	push   ebp
 100249e:	mov    ebp,esp
 10024a0:	push   DWORD PTR [ebp+0x14]
 10024a3:	push   DWORD PTR [ebp+0x10]
 10024a6:	push   DWORD PTR [ebp+0xc]
 10024a9:	push   DWORD PTR [ebp+0x8]
 10024ac:	call   0x1004b48
 10024b1:	push   eax
 10024b2:	call   0x100245c
 10024b7:	add    esp,0x14
 10024ba:	pop    ebp
 10024bb:	ret    
 10024bc:	int3   
 10024bd:	int3   
 10024be:	int3   
 10024bf:	int3   
 10024c0:	int3   
 10024c1:	mov    edi,edi
 10024c3:	push   ebp
 10024c4:	mov    ebp,esp
 10024c6:	push   DWORD PTR [ebp+0xc]
 10024c9:	push   DWORD PTR [ebp+0x8]
 10024cc:	call   DWORD PTR ds:0x10010d4
 10024d2:	test   eax,eax
 10024d4:	jne    0x10024d8
 10024d6:	pop    ebp
 10024d7:	ret    
 10024d8:	push   esi
 10024d9:	push   eax
 10024da:	call   DWORD PTR ds:0x10010e0
 10024e0:	mov    esi,eax
 10024e2:	test   esi,esi
 10024e4:	je     0x1002511
 10024e6:	push   DWORD PTR [ebp+0xc]
 10024e9:	push   DWORD PTR [ebp+0x8]
 10024ec:	call   DWORD PTR ds:0x10010d0
 10024f2:	mov    edx,DWORD PTR [ebp+0x10]
 10024f5:	lea    ecx,[esi+eax*1]
 10024f8:	and    edx,0xf
 10024fb:	jbe    0x100250d
 10024fd:	cmp    esi,ecx
 10024ff:	jae    0x1002511
 1002501:	movzx  eax,WORD PTR [esi]
 1002504:	lea    esi,[esi+eax*2]
 1002507:	add    esi,0x2
 100250a:	dec    edx
 100250b:	jne    0x10024fd
 100250d:	cmp    esi,ecx
 100250f:	jb     0x1002515
 1002511:	xor    eax,eax
 1002513:	jmp    0x100251e
 1002515:	movzx  eax,WORD PTR [esi]
 1002518:	neg    eax
 100251a:	sbb    eax,eax
 100251c:	and    eax,esi
 100251e:	pop    esi
 100251f:	pop    ebp
 1002520:	ret    
 1002521:	int3   
 1002522:	int3   
 1002523:	int3   
 1002524:	int3   
 1002525:	int3   
 1002526:	mov    edi,edi
 1002528:	push   ebp
 1002529:	mov    ebp,esp
 100252b:	mov    eax,DWORD PTR [ebp+0xc]
 100252e:	shr    eax,0x4
 1002531:	inc    eax
 1002532:	movzx  eax,ax
 1002535:	push   0x6
 1002537:	push   eax
 1002538:	push   DWORD PTR [ebp+0x8]
 100253b:	call   DWORD PTR ds:0x10010bc
 1002541:	test   eax,eax
 1002543:	jne    0x1002547
 1002545:	pop    ebp
 1002546:	ret    
 1002547:	push   DWORD PTR [ebp+0xc]
 100254a:	push   eax
 100254b:	push   DWORD PTR [ebp+0x8]
 100254e:	call   0x10024c1
 1002553:	add    esp,0xc
 1002556:	pop    ebp
 1002557:	ret    
 1002558:	int3   
 1002559:	int3   
 100255a:	int3   
 100255b:	int3   
 100255c:	int3   
 100255d:	mov    edi,edi
 100255f:	push   ebp
 1002560:	mov    ebp,esp
 1002562:	mov    eax,DWORD PTR [ebp+0xc]
 1002565:	push   DWORD PTR [ebp+0x10]
 1002568:	shr    eax,0x4
 100256b:	inc    eax
 100256c:	movzx  eax,ax
 100256f:	push   eax
 1002570:	push   0x6
 1002572:	push   DWORD PTR [ebp+0x8]
 1002575:	call   DWORD PTR ds:0x10010b8
 100257b:	test   eax,eax
 100257d:	jne    0x1002581
 100257f:	pop    ebp
 1002580:	ret    
 1002581:	push   DWORD PTR [ebp+0xc]
 1002584:	push   eax
 1002585:	push   DWORD PTR [ebp+0x8]
 1002588:	call   0x10024c1
 100258d:	add    esp,0xc
 1002590:	pop    ebp
 1002591:	ret    
 1002592:	int3   
 1002593:	int3   
 1002594:	int3   
 1002595:	int3   
 1002596:	int3   
 1002597:	mov    edi,edi
 1002599:	push   ebp
 100259a:	mov    ebp,esp
 100259c:	push   ebx
 100259d:	push   esi
 100259e:	push   edi
 100259f:	mov    ebx,0x100a3e4
 10025a4:	push   0x0
 10025a6:	mov    ecx,ebx
 10025a8:	call   0x1005509
 10025ad:	xor    edi,edi
 10025af:	inc    edi
 10025b0:	jmp    0x10025ce
 10025b2:	push   DWORD PTR [ebp+0xc]
 10025b5:	push   DWORD PTR [ebp+0x8]
 10025b8:	push   esi
 10025b9:	call   0x100255d
 10025be:	add    esp,0xc
 10025c1:	test   eax,eax
 10025c3:	jne    0x10025d9
 10025c5:	push   edi
 10025c6:	mov    ecx,ebx
 10025c8:	call   0x1005509
 10025cd:	inc    edi
 10025ce:	mov    esi,eax
 10025d0:	test   esi,esi
 10025d2:	jne    0x10025b2
 10025d4:	pop    edi
 10025d5:	pop    esi
 10025d6:	pop    ebx
 10025d7:	pop    ebp
 10025d8:	ret    
 10025d9:	mov    eax,esi
 10025db:	jmp    0x10025d4
 10025dd:	int3   
 10025de:	int3   
 10025df:	int3   
 10025e0:	int3   
 10025e1:	int3   
 10025e2:	mov    edi,edi
 10025e4:	push   ebx
 10025e5:	push   esi
 10025e6:	xor    ebx,ebx
 10025e8:	push   edi
 10025e9:	mov    esi,ecx
 10025eb:	mov    ecx,ebx
 10025ed:	mov    edi,eax
 10025ef:	test   eax,eax
 10025f1:	je     0x1002602
 10025f3:	cmp    WORD PTR [esi],bx
 10025f6:	je     0x10025fe
 10025f8:	add    esi,0x2
 10025fb:	dec    eax
 10025fc:	jne    0x10025f3
 10025fe:	test   eax,eax
 1002600:	jne    0x1002607
 1002602:	mov    ecx,0x80070057
 1002607:	test   edx,edx
 1002609:	je     0x1002617
 100260b:	test   ecx,ecx
 100260d:	js     0x1002615
 100260f:	sub    edi,eax
 1002611:	mov    DWORD PTR [edx],edi
 1002613:	jmp    0x1002617
 1002615:	mov    DWORD PTR [edx],ebx
 1002617:	pop    edi
 1002618:	pop    esi
 1002619:	mov    eax,ecx
 100261b:	pop    ebx
 100261c:	ret    
 100261d:	int3   
 100261e:	int3   
 100261f:	int3   
 1002620:	int3   
 1002621:	int3   
 1002622:	mov    edi,edi
 1002624:	push   ebp
 1002625:	mov    ebp,esp
 1002627:	push   ebx
 1002628:	push   edi
 1002629:	mov    edi,DWORD PTR [ebp+0xc]
 100262c:	xor    edx,edx
 100262e:	test   edi,edi
 1002630:	je     0x100263a
 1002632:	cmp    edi,0x7fffffff
 1002638:	jbe    0x100263f
 100263a:	mov    edx,0x80070057
 100263f:	test   edx,edx
 1002641:	js     0x1002657
 1002643:	mov    ecx,DWORD PTR [ebp+0x8]
 1002646:	lea    edx,[ebp+0xc]
 1002649:	mov    eax,edi
 100264b:	call   0x10025e2
 1002650:	mov    ebx,DWORD PTR [ebp+0xc]
 1002653:	mov    edx,eax
 1002655:	jmp    0x1002659
 1002657:	xor    ebx,ebx
 1002659:	test   edx,edx
 100265b:	js     0x10026a7
 100265d:	mov    eax,DWORD PTR [ebp+0x8]
 1002660:	push   esi
 1002661:	mov    esi,edi
 1002663:	push   0x0
 1002665:	lea    ecx,[eax+ebx*2]
 1002668:	pop    edx
 1002669:	sub    esi,ebx
 100266b:	je     0x1002699
 100266d:	mov    eax,esi
 100266f:	add    ebx,0x7fffffff
 1002675:	sub    eax,edi
 1002677:	add    eax,ebx
 1002679:	mov    ebx,DWORD PTR [ebp+0x10]
 100267c:	sub    ebx,ecx
 100267e:	test   eax,eax
 1002680:	je     0x1002695
 1002682:	movzx  edi,WORD PTR [ebx+ecx*1]
 1002686:	test   di,di
 1002689:	je     0x1002695
 100268b:	mov    WORD PTR [ecx],di
 100268e:	add    ecx,0x2
 1002691:	dec    eax
 1002692:	dec    esi
 1002693:	jne    0x100267e
 1002695:	test   esi,esi
 1002697:	jne    0x10026a1
 1002699:	sub    ecx,0x2
 100269c:	mov    edx,0x8007007a
 10026a1:	xor    eax,eax
 10026a3:	mov    WORD PTR [ecx],ax
 10026a6:	pop    esi
 10026a7:	pop    edi
 10026a8:	mov    eax,edx
 10026aa:	pop    ebx
 10026ab:	pop    ebp
 10026ac:	ret    0xc
 10026af:	int3   
 10026b0:	int3   
 10026b1:	int3   
 10026b2:	int3   
 10026b3:	int3   
 10026b4:	mov    edi,edi
 10026b6:	push   ebp
 10026b7:	mov    ebp,esp
 10026b9:	mov    eax,DWORD PTR [ebp+0xc]
 10026bc:	mov    ecx,DWORD PTR [ebp+0x8]
 10026bf:	push   esi
 10026c0:	xor    esi,esi
 10026c2:	shr    eax,1
 10026c4:	mov    DWORD PTR [ebp+0xc],esi
 10026c7:	test   ecx,ecx
 10026c9:	je     0x10026e1
 10026cb:	cmp    eax,0x7fffffff
 10026d0:	ja     0x10026e1
 10026d2:	lea    edx,[ebp+0xc]
 10026d5:	call   0x10025e2
 10026da:	mov    esi,DWORD PTR [ebp+0xc]
 10026dd:	mov    edx,eax
 10026df:	jmp    0x10026e6
 10026e1:	mov    edx,0x80070057
 10026e6:	mov    ecx,DWORD PTR [ebp+0x10]
 10026e9:	test   ecx,ecx
 10026eb:	je     0x10026fb
 10026ed:	test   edx,edx
 10026ef:	js     0x10026f8
 10026f1:	lea    eax,[esi+esi*1]
 10026f4:	mov    DWORD PTR [ecx],eax
 10026f6:	jmp    0x10026fb
 10026f8:	and    DWORD PTR [ecx],0x0
 10026fb:	mov    eax,edx
 10026fd:	pop    esi
 10026fe:	pop    ebp
 10026ff:	ret    0xc
 1002702:	int3   
 1002703:	int3   
 1002704:	int3   
 1002705:	int3   
 1002706:	int3   
 1002707:	mov    edi,edi
 1002709:	push   esi
 100270a:	mov    esi,ecx
 100270c:	lea    eax,[esi+0xc]
 100270f:	or     edx,0xffffffff
 1002712:	lock xadd DWORD PTR [eax],edx
 1002716:	dec    edx
 1002717:	test   edx,edx
 1002719:	jg     0x1002723
 100271b:	mov    ecx,DWORD PTR [esi]
 100271d:	mov    eax,DWORD PTR [ecx]
 100271f:	push   esi
 1002720:	call   DWORD PTR [eax+0x4]
 1002723:	pop    esi
 1002724:	ret    
 1002725:	int3   
 1002726:	int3   
 1002727:	int3   
 1002728:	int3   
 1002729:	int3   
 100272a:	mov    edi,edi
 100272c:	push   ebp
 100272d:	mov    ebp,esp
 100272f:	mov    ecx,DWORD PTR [ebp+0xc]
 1002732:	mov    eax,DWORD PTR [ebp+0x8]
 1002735:	mov    dx,WORD PTR [eax]
 1002738:	cmp    dx,WORD PTR [ecx]
 100273b:	jne    0x100275b
 100273d:	test   dx,dx
 1002740:	je     0x1002757
 1002742:	mov    dx,WORD PTR [eax+0x2]
 1002746:	cmp    dx,WORD PTR [ecx+0x2]
 100274a:	jne    0x100275b
 100274c:	add    eax,0x4
 100274f:	add    ecx,0x4
 1002752:	test   dx,dx
 1002755:	jne    0x1002735
 1002757:	xor    eax,eax
 1002759:	pop    ebp
 100275a:	ret    
 100275b:	sbb    eax,eax
 100275d:	sbb    eax,0xffffffff
 1002760:	pop    ebp
 1002761:	ret    
 1002762:	int3   
 1002763:	int3   
 1002764:	int3   
 1002765:	int3   
 1002766:	int3   
 1002767:	mov    edi,edi
 1002769:	push   ebp
 100276a:	mov    ebp,esp
 100276c:	mov    ecx,DWORD PTR [ebp+0x14]
 100276f:	cmp    ecx,0xffffffff
 1002772:	jne    0x100278a
 1002774:	mov    ecx,DWORD PTR [ebp+0x10]
 1002777:	lea    edx,[ecx+0x2]
 100277a:	mov    ax,WORD PTR [ecx]
 100277d:	add    ecx,0x2
 1002780:	test   ax,ax
 1002783:	jne    0x100277a
 1002785:	sub    ecx,edx
 1002787:	sar    ecx,1
 1002789:	inc    ecx
 100278a:	push   ecx
 100278b:	push   DWORD PTR [ebp+0x10]
 100278e:	push   DWORD PTR [ebp+0xc]
 1002791:	push   DWORD PTR [ebp+0x8]
 1002794:	call   0x100249b
 1002799:	add    esp,0x10
 100279c:	pop    ebp
 100279d:	ret    
 100279e:	int3   
 100279f:	int3   
 10027a0:	int3   
 10027a1:	int3   
 10027a2:	int3   
 10027a3:	mov    edi,edi
 10027a5:	push   ebp
 10027a6:	mov    ebp,esp
 10027a8:	push   esi
 10027a9:	mov    esi,ecx
 10027ab:	mov    ecx,DWORD PTR [ebp+0x8]
 10027ae:	test   ecx,ecx
 10027b0:	jne    0x10027bc
 10027b2:	push   0x80004005
 10027b7:	call   0x100243d
 10027bc:	mov    eax,DWORD PTR [ecx]
 10027be:	call   DWORD PTR [eax+0xc]
 10027c1:	add    eax,0x10
 10027c4:	mov    DWORD PTR [esi],eax
 10027c6:	mov    eax,esi
 10027c8:	pop    esi
 10027c9:	pop    ebp
 10027ca:	ret    0x4
 10027cd:	int3   
 10027ce:	int3   
 10027cf:	int3   
 10027d0:	int3   
 10027d1:	int3   
 10027d2:	mov    ecx,DWORD PTR [ecx]
 10027d4:	sub    ecx,0x10
 10027d7:	jmp    0x1002707
 10027dc:	int3   
 10027dd:	int3   
 10027de:	int3   
 10027df:	int3   
 10027e0:	int3   
 10027e1:	mov    edi,edi
 10027e3:	push   esi
 10027e4:	mov    esi,ecx
 10027e6:	mov    eax,DWORD PTR [esi]
 10027e8:	lea    ecx,[eax-0x10]
 10027eb:	xor    edx,edx
 10027ed:	push   edi
 10027ee:	mov    edi,DWORD PTR [ecx]
 10027f0:	cmp    DWORD PTR [ecx+0x4],edx
 10027f3:	je     0x1002826
 10027f5:	cmp    DWORD PTR [ecx+0xc],edx
 10027f8:	jge    0x1002815
 10027fa:	cmp    DWORD PTR [eax-0x8],edx
 10027fd:	jge    0x1002809
 10027ff:	push   0x80070057
 1002804:	call   0x100243d
 1002809:	mov    DWORD PTR [eax-0xc],edx
 100280c:	mov    eax,DWORD PTR [esi]
 100280e:	xor    ecx,ecx
 1002810:	mov    WORD PTR [eax],cx
 1002813:	jmp    0x1002826
 1002815:	call   0x1002707
 100281a:	mov    eax,DWORD PTR [edi]
 100281c:	mov    ecx,edi
 100281e:	call   DWORD PTR [eax+0xc]
 1002821:	add    eax,0x10
 1002824:	mov    DWORD PTR [esi],eax
 1002826:	pop    edi
 1002827:	pop    esi
 1002828:	ret    
 1002829:	int3   
 100282a:	int3   
 100282b:	int3   
 100282c:	int3   
 100282d:	int3   
 100282e:	mov    edi,edi
 1002830:	push   ebp
 1002831:	mov    ebp,esp
 1002833:	push   ebx
 1002834:	mov    ebx,DWORD PTR [ebp+0xc]
 1002837:	push   edi
 1002838:	mov    edi,ecx
 100283a:	test   ebx,ebx
 100283c:	jne    0x1002845
 100283e:	call   0x10027e1
 1002843:	jmp    0x10028a2
 1002845:	cmp    DWORD PTR [ebp+0x8],0x0
 1002849:	jne    0x1002855
 100284b:	push   0x80070057
 1002850:	call   0x100243d
 1002855:	mov    eax,DWORD PTR [edi]
 1002857:	mov    ecx,DWORD PTR [ebp+0x8]
 100285a:	sub    ecx,eax
 100285c:	sar    ecx,1
 100285e:	push   esi
 100285f:	mov    esi,DWORD PTR [eax-0xc]
 1002862:	mov    DWORD PTR [ebp+0xc],ecx
 1002865:	push   ebx
 1002866:	mov    ecx,edi
 1002868:	call   0x100299c
 100286d:	mov    ecx,DWORD PTR [ebp+0xc]
 1002870:	cmp    ecx,esi
 1002872:	pop    esi
 1002873:	mov    edx,eax
 1002875:	push   ebx
 1002876:	ja     0x1002889
 1002878:	lea    ecx,[edx+ecx*2]
 100287b:	push   ecx
 100287c:	mov    ecx,DWORD PTR [edi]
 100287e:	push   DWORD PTR [ecx-0x8]
 1002881:	push   edx
 1002882:	call   0x10028d4
 1002887:	jmp    0x1002897
 1002889:	push   DWORD PTR [ebp+0x8]
 100288c:	mov    eax,DWORD PTR [edi]
 100288e:	push   DWORD PTR [eax-0x8]
 1002891:	push   edx
 1002892:	call   0x10028ad
 1002897:	add    esp,0x10
 100289a:	push   ebx
 100289b:	mov    ecx,edi
 100289d:	call   0x1002a77
 10028a2:	pop    edi
 10028a3:	pop    ebx
 10028a4:	pop    ebp
 10028a5:	ret    0x8
 10028a8:	int3   
 10028a9:	int3   
 10028aa:	int3   
 10028ab:	int3   
 10028ac:	int3   
 10028ad:	mov    edi,edi
 10028af:	push   ebp
 10028b0:	mov    ebp,esp
 10028b2:	mov    eax,DWORD PTR [ebp+0x14]
 10028b5:	add    eax,eax
 10028b7:	push   eax
 10028b8:	push   DWORD PTR [ebp+0x10]
 10028bb:	mov    eax,DWORD PTR [ebp+0xc]
 10028be:	add    eax,eax
 10028c0:	push   eax
 10028c1:	push   DWORD PTR [ebp+0x8]
 10028c4:	call   DWORD PTR ds:0x10011c8
 10028ca:	add    esp,0x10
 10028cd:	pop    ebp
 10028ce:	ret    
 10028cf:	int3   
 10028d0:	int3   
 10028d1:	int3   
 10028d2:	int3   
 10028d3:	int3   
 10028d4:	mov    edi,edi
 10028d6:	push   ebp
 10028d7:	mov    ebp,esp
 10028d9:	mov    eax,DWORD PTR [ebp+0x14]
 10028dc:	add    eax,eax
 10028de:	push   eax
 10028df:	push   DWORD PTR [ebp+0x10]
 10028e2:	mov    eax,DWORD PTR [ebp+0xc]
 10028e5:	add    eax,eax
 10028e7:	push   eax
 10028e8:	push   DWORD PTR [ebp+0x8]
 10028eb:	call   DWORD PTR ds:0x10011c4
 10028f1:	add    esp,0x10
 10028f4:	pop    ebp
 10028f5:	ret    
 10028f6:	int3   
 10028f7:	int3   
 10028f8:	int3   
 10028f9:	int3   
 10028fa:	int3   
 10028fb:	mov    edi,edi
 10028fd:	push   ebp
 10028fe:	mov    ebp,esp
 1002900:	mov    eax,DWORD PTR [ebp+0x8]
 1002903:	test   eax,eax
 1002905:	jne    0x1002909
 1002907:	pop    ebp
 1002908:	ret    
 1002909:	lea    edx,[eax+0x2]
 100290c:	mov    cx,WORD PTR [eax]
 100290f:	add    eax,0x2
 1002912:	test   cx,cx
 1002915:	jne    0x100290c
 1002917:	sub    eax,edx
 1002919:	sar    eax,1
 100291b:	pop    ebp
 100291c:	ret    
 100291d:	int3   
 100291e:	int3   
 100291f:	int3   
 1002920:	int3   
 1002921:	int3   
 1002922:	push   0x8007000e
 1002927:	call   0x100243d
 100292c:	int3   
 100292d:	int3   
 100292e:	int3   
 100292f:	int3   
 1002930:	int3   
 1002931:	int3   
 1002932:	mov    edi,edi
 1002934:	push   ebp
 1002935:	mov    ebp,esp
 1002937:	push   ecx
 1002938:	mov    eax,ecx
 100293a:	push   ebx
 100293b:	mov    ebx,DWORD PTR [eax]
 100293d:	mov    ecx,DWORD PTR [ebx-0x10]
 1002940:	push   esi
 1002941:	mov    DWORD PTR [ebp-0x4],eax
 1002944:	mov    eax,DWORD PTR [ecx]
 1002946:	push   edi
 1002947:	mov    edi,DWORD PTR [ebx-0xc]
 100294a:	call   DWORD PTR [eax+0x10]
 100294d:	mov    esi,DWORD PTR [ebp+0x8]
 1002950:	mov    edx,DWORD PTR [eax]
 1002952:	push   0x2
 1002954:	push   esi
 1002955:	mov    ecx,eax
 1002957:	call   DWORD PTR [edx]
 1002959:	mov    DWORD PTR [ebp+0x8],eax
 100295c:	test   eax,eax
 100295e:	jne    0x1002965
 1002960:	call   0x1002922
 1002965:	cmp    edi,esi
 1002967:	jge    0x100296b
 1002969:	mov    esi,edi
 100296b:	lea    edx,[esi+0x1]
 100296e:	push   edx
 100296f:	push   ebx
 1002970:	lea    esi,[eax+0x10]
 1002973:	push   edx
 1002974:	push   esi
 1002975:	call   0x10028ad
 100297a:	mov    eax,DWORD PTR [ebp+0x8]
 100297d:	add    esp,0x10
 1002980:	lea    ecx,[ebx-0x10]
 1002983:	mov    DWORD PTR [eax+0x4],edi
 1002986:	call   0x1002707
 100298b:	mov    eax,DWORD PTR [ebp-0x4]
 100298e:	pop    edi
 100298f:	mov    DWORD PTR [eax],esi
 1002991:	pop    esi
 1002992:	pop    ebx
 1002993:	leave  
 1002994:	ret    0x4
 1002997:	int3   
 1002998:	int3   
 1002999:	int3   
 100299a:	int3   
 100299b:	int3   
 100299c:	mov    edi,edi
 100299e:	push   ebp
 100299f:	mov    ebp,esp
 10029a1:	mov    edx,DWORD PTR [ebp+0x8]
 10029a4:	push   esi
 10029a5:	mov    esi,ecx
 10029a7:	test   edx,edx
 10029a9:	jns    0x10029b5
 10029ab:	push   0x80070057
 10029b0:	call   0x100243d
 10029b5:	mov    eax,DWORD PTR [esi]
 10029b7:	xor    ecx,ecx
 10029b9:	inc    ecx
 10029ba:	sub    ecx,DWORD PTR [eax-0x4]
 10029bd:	mov    eax,DWORD PTR [eax-0x8]
 10029c0:	sub    eax,edx
 10029c2:	or     ecx,eax
 10029c4:	jge    0x10029ce
 10029c6:	push   edx
 10029c7:	mov    ecx,esi
 10029c9:	call   0x10029da
 10029ce:	mov    eax,DWORD PTR [esi]
 10029d0:	pop    esi
 10029d1:	pop    ebp
 10029d2:	ret    0x4
 10029d5:	int3   
 10029d6:	int3   
 10029d7:	int3   
 10029d8:	int3   
 10029d9:	int3   
 10029da:	mov    edi,edi
 10029dc:	push   ebp
 10029dd:	mov    ebp,esp
 10029df:	push   esi
 10029e0:	mov    esi,DWORD PTR [ebp+0x8]
 10029e3:	push   edi
 10029e4:	mov    edi,ecx
 10029e6:	mov    ecx,DWORD PTR [edi]
 10029e8:	cmp    DWORD PTR [ecx-0xc],esi
 10029eb:	jle    0x10029f0
 10029ed:	mov    esi,DWORD PTR [ecx-0xc]
 10029f0:	cmp    DWORD PTR [ecx-0x4],0x1
 10029f4:	jle    0x1002a00
 10029f6:	push   esi
 10029f7:	mov    ecx,edi
 10029f9:	call   0x1002932
 10029fe:	jmp    0x1002a2e
 1002a00:	mov    ecx,DWORD PTR [ecx-0x8]
 1002a03:	cmp    ecx,esi
 1002a05:	jge    0x1002a2e
 1002a07:	cmp    ecx,0x40000000
 1002a0d:	jle    0x1002a17
 1002a0f:	add    ecx,0x100000
 1002a15:	jmp    0x1002a20
 1002a17:	mov    eax,ecx
 1002a19:	cdq    
 1002a1a:	sub    eax,edx
 1002a1c:	sar    eax,1
 1002a1e:	add    ecx,eax
 1002a20:	cmp    ecx,esi
 1002a22:	jge    0x1002a26
 1002a24:	mov    ecx,esi
 1002a26:	push   ecx
 1002a27:	mov    ecx,edi
 1002a29:	call   0x1002a39
 1002a2e:	pop    edi
 1002a2f:	pop    esi
 1002a30:	pop    ebp
 1002a31:	ret    0x4
 1002a34:	int3   
 1002a35:	int3   
 1002a36:	int3   
 1002a37:	int3   
 1002a38:	int3   
 1002a39:	mov    edi,edi
 1002a3b:	push   ebp
 1002a3c:	mov    ebp,esp
 1002a3e:	push   esi
 1002a3f:	mov    esi,DWORD PTR [ebp+0x8]
 1002a42:	push   edi
 1002a43:	mov    edi,ecx
 1002a45:	mov    edx,DWORD PTR [edi]
 1002a47:	sub    edx,0x10
 1002a4a:	mov    ecx,DWORD PTR [edx]
 1002a4c:	cmp    DWORD PTR [edx+0x8],esi
 1002a4f:	jge    0x1002a62
 1002a51:	test   esi,esi
 1002a53:	jle    0x1002a62
 1002a55:	mov    eax,DWORD PTR [ecx]
 1002a57:	push   0x2
 1002a59:	push   esi
 1002a5a:	push   edx
 1002a5b:	call   DWORD PTR [eax+0x8]
 1002a5e:	test   eax,eax
 1002a60:	jne    0x1002a67
 1002a62:	call   0x1002922
 1002a67:	add    eax,0x10
 1002a6a:	mov    DWORD PTR [edi],eax
 1002a6c:	pop    edi
 1002a6d:	pop    esi
 1002a6e:	pop    ebp
 1002a6f:	ret    0x4
 1002a72:	int3   
 1002a73:	int3   
 1002a74:	int3   
 1002a75:	int3   
 1002a76:	int3   
 1002a77:	mov    edi,edi
 1002a79:	push   ebp
 1002a7a:	mov    ebp,esp
 1002a7c:	mov    edx,DWORD PTR [ebp+0x8]
 1002a7f:	test   edx,edx
 1002a81:	js     0x1002a99
 1002a83:	mov    eax,DWORD PTR [ecx]
 1002a85:	cmp    edx,DWORD PTR [eax-0x8]
 1002a88:	jg     0x1002a99
 1002a8a:	mov    DWORD PTR [eax-0xc],edx
 1002a8d:	mov    eax,DWORD PTR [ecx]
 1002a8f:	xor    ecx,ecx
 1002a91:	mov    WORD PTR [eax+edx*2],cx
 1002a95:	pop    ebp
 1002a96:	ret    0x4
 1002a99:	push   0x80070057
 1002a9e:	call   0x100243d
 1002aa3:	int3   
 1002aa4:	int3   
 1002aa5:	int3   
 1002aa6:	int3   
 1002aa7:	int3   
 1002aa8:	int3   
 1002aa9:	mov    edi,edi
 1002aab:	push   ebp
 1002aac:	mov    ebp,esp
 1002aae:	push   esi
 1002aaf:	mov    esi,DWORD PTR [ebp+0x8]
 1002ab2:	mov    ecx,DWORD PTR [esi]
 1002ab4:	mov    eax,DWORD PTR [ecx]
 1002ab6:	push   edi
 1002ab7:	call   DWORD PTR [eax+0x10]
 1002aba:	lea    edx,[esi+0xc]
 1002abd:	cmp    DWORD PTR [edx],0x0
 1002ac0:	mov    ecx,eax
 1002ac2:	jl     0x1002ad3
 1002ac4:	cmp    ecx,DWORD PTR [esi]
 1002ac6:	jne    0x1002ad3
 1002ac8:	xor    eax,eax
 1002aca:	mov    edi,esi
 1002acc:	inc    eax
 1002acd:	lock xadd DWORD PTR [edx],eax
 1002ad1:	jmp    0x1002b03
 1002ad3:	mov    eax,DWORD PTR [ecx]
 1002ad5:	push   0x2
 1002ad7:	push   DWORD PTR [esi+0x4]
 1002ada:	call   DWORD PTR [eax]
 1002adc:	mov    edi,eax
 1002ade:	test   edi,edi
 1002ae0:	jne    0x1002ae7
 1002ae2:	call   0x1002922
 1002ae7:	mov    eax,DWORD PTR [esi+0x4]
 1002aea:	mov    DWORD PTR [edi+0x4],eax
 1002aed:	mov    ecx,DWORD PTR [esi+0x4]
 1002af0:	inc    ecx
 1002af1:	push   ecx
 1002af2:	lea    eax,[esi+0x10]
 1002af5:	push   eax
 1002af6:	push   ecx
 1002af7:	lea    eax,[edi+0x10]
 1002afa:	push   eax
 1002afb:	call   0x10028ad
 1002b00:	add    esp,0x10
 1002b03:	mov    eax,edi
 1002b05:	pop    edi
 1002b06:	pop    esi
 1002b07:	pop    ebp
 1002b08:	ret    
 1002b09:	int3   
 1002b0a:	int3   
 1002b0b:	int3   
 1002b0c:	int3   
 1002b0d:	int3   
 1002b0e:	push   0x4
 1002b10:	mov    eax,0x10070a9
 1002b15:	call   0x1004b8b
 1002b1a:	mov    esi,ecx
 1002b1c:	mov    DWORD PTR [ebp-0x10],esi
 1002b1f:	push   0x10090a8
 1002b24:	call   0x10027a3
 1002b29:	and    DWORD PTR [ebp-0x4],0x0
 1002b2d:	push   DWORD PTR [ebp+0x8]
 1002b30:	mov    ecx,esi
 1002b32:	call   0x1002c83
 1002b37:	test   al,al
 1002b39:	jne    0x1002b4f
 1002b3b:	push   DWORD PTR [ebp+0x8]
 1002b3e:	call   0x10028fb
 1002b43:	pop    ecx
 1002b44:	push   eax
 1002b45:	push   DWORD PTR [ebp+0x8]
 1002b48:	mov    ecx,esi
 1002b4a:	call   0x100282e
 1002b4f:	or     DWORD PTR [ebp-0x4],0xffffffff
 1002b53:	mov    eax,esi
 1002b55:	call   0x1004c77
 1002b5a:	ret    0x4
 1002b5d:	int3   
 1002b5e:	int3   
 1002b5f:	int3   
 1002b60:	int3   
 1002b61:	int3   
 1002b62:	push   0x4
 1002b64:	mov    eax,0x10070d1
 1002b69:	call   0x1004b8b
 1002b6e:	mov    DWORD PTR [ebp-0x10],ecx
 1002b71:	or     DWORD PTR [ebp-0x4],0xffffffff
 1002b75:	mov    ecx,DWORD PTR [ecx]
 1002b77:	sub    ecx,0x10
 1002b7a:	call   0x1002707
 1002b7f:	call   0x1004c77
 1002b84:	ret    
 1002b85:	int3   
 1002b86:	int3   
 1002b87:	int3   
 1002b88:	int3   
 1002b89:	int3   
 1002b8a:	mov    edi,edi
 1002b8c:	push   ebp
 1002b8d:	mov    ebp,esp
 1002b8f:	push   esi
 1002b90:	push   DWORD PTR [ebp+0x8]
 1002b93:	mov    esi,ecx
 1002b95:	call   0x10028fb
 1002b9a:	pop    ecx
 1002b9b:	push   eax
 1002b9c:	push   DWORD PTR [ebp+0x8]
 1002b9f:	mov    ecx,esi
 1002ba1:	call   0x100282e
 1002ba6:	mov    eax,esi
 1002ba8:	pop    esi
 1002ba9:	pop    ebp
 1002baa:	ret    0x4
 1002bad:	int3   
 1002bae:	int3   
 1002baf:	int3   
 1002bb0:	int3   
 1002bb1:	int3   
 1002bb2:	mov    eax,DWORD PTR [ecx]
 1002bb4:	mov    ecx,DWORD PTR [eax-0x10]
 1002bb7:	test   ecx,ecx
 1002bb9:	je     0x1002bc2
 1002bbb:	mov    eax,DWORD PTR [ecx]
 1002bbd:	call   DWORD PTR [eax+0x10]
 1002bc0:	jmp    0x1002bc4
 1002bc2:	xor    eax,eax
 1002bc4:	test   eax,eax
 1002bc6:	jne    0x1002bd5
 1002bc8:	mov    ecx,0x10090a8
 1002bcd:	mov    eax,ds:0x10090a8
 1002bd2:	jmp    DWORD PTR [eax+0x10]
 1002bd5:	ret    
 1002bd6:	int3   
 1002bd7:	int3   
 1002bd8:	int3   
 1002bd9:	int3   
 1002bda:	int3   
 1002bdb:	mov    edi,edi
 1002bdd:	push   ebp
 1002bde:	mov    ebp,esp
 1002be0:	cmp    DWORD PTR [ebp+0x8],0x0
 1002be4:	jne    0x1002bf0
 1002be6:	push   0x80004005
 1002beb:	call   0x100243d
 1002bf0:	push   DWORD PTR [ebp+0x8]
 1002bf3:	push   DWORD PTR [ecx]
 1002bf5:	call   0x100272a
 1002bfa:	pop    ecx
 1002bfb:	pop    ecx
 1002bfc:	pop    ebp
 1002bfd:	ret    0x4
 1002c00:	int3   
 1002c01:	int3   
 1002c02:	int3   
 1002c03:	int3   
 1002c04:	int3   
 1002c05:	mov    edi,edi
 1002c07:	push   ebp
 1002c08:	mov    ebp,esp
 1002c0a:	push   esi
 1002c0b:	push   0x0
 1002c0d:	push   DWORD PTR [ebp+0x8]
 1002c10:	mov    esi,ecx
 1002c12:	call   0x1002597
 1002c17:	pop    ecx
 1002c18:	pop    ecx
 1002c19:	test   eax,eax
 1002c1b:	je     0x1002c28
 1002c1d:	push   DWORD PTR [ebp+0x8]
 1002c20:	mov    ecx,esi
 1002c22:	push   eax
 1002c23:	call   0x1002c32
 1002c28:	pop    esi
 1002c29:	pop    ebp
 1002c2a:	ret    0x4
 1002c2d:	int3   
 1002c2e:	int3   
 1002c2f:	int3   
 1002c30:	int3   
 1002c31:	int3   
 1002c32:	mov    edi,edi
 1002c34:	push   ebp
 1002c35:	mov    ebp,esp
 1002c37:	push   ebx
 1002c38:	push   edi
 1002c39:	push   DWORD PTR [ebp+0xc]
 1002c3c:	mov    ebx,ecx
 1002c3e:	push   DWORD PTR [ebp+0x8]
 1002c41:	call   0x1002526
 1002c46:	mov    edi,eax
 1002c48:	pop    ecx
 1002c49:	pop    ecx
 1002c4a:	test   edi,edi
 1002c4c:	je     0x1002c78
 1002c4e:	push   esi
 1002c4f:	movzx  esi,WORD PTR [edi]
 1002c52:	push   esi
 1002c53:	mov    ecx,ebx
 1002c55:	call   0x100299c
 1002c5a:	movzx  ecx,WORD PTR [edi]
 1002c5d:	push   ecx
 1002c5e:	lea    ecx,[edi+0x2]
 1002c61:	push   ecx
 1002c62:	push   esi
 1002c63:	push   eax
 1002c64:	call   0x1002767
 1002c69:	add    esp,0x10
 1002c6c:	push   esi
 1002c6d:	mov    ecx,ebx
 1002c6f:	call   0x1002a77
 1002c74:	xor    eax,eax
 1002c76:	inc    eax
 1002c77:	pop    esi
 1002c78:	pop    edi
 1002c79:	pop    ebx
 1002c7a:	pop    ebp
 1002c7b:	ret    0x8
 1002c7e:	int3   
 1002c7f:	int3   
 1002c80:	int3   
 1002c81:	int3   
 1002c82:	int3   
 1002c83:	mov    edi,edi
 1002c85:	push   ebp
 1002c86:	mov    ebp,esp
 1002c88:	mov    eax,DWORD PTR [ebp+0x8]
 1002c8b:	xor    dl,dl
 1002c8d:	test   eax,eax
 1002c8f:	je     0x1002ca3
 1002c91:	test   eax,0xffff0000
 1002c96:	jne    0x1002ca3
 1002c98:	movzx  eax,ax
 1002c9b:	push   eax
 1002c9c:	call   0x1002c05
 1002ca1:	mov    dl,0x1
 1002ca3:	mov    al,dl
 1002ca5:	pop    ebp
 1002ca6:	ret    0x4
 1002ca9:	int3   
 1002caa:	int3   
 1002cab:	int3   
 1002cac:	int3   
 1002cad:	int3   
 1002cae:	mov    edi,edi
 1002cb0:	push   esi
 1002cb1:	mov    esi,ecx
 1002cb3:	mov    eax,DWORD PTR [esi]
 1002cb5:	test   eax,eax
 1002cb7:	je     0x1002cd6
 1002cb9:	mov    ecx,DWORD PTR [esi+0x4]
 1002cbc:	test   ecx,ecx
 1002cbe:	je     0x1002cc7
 1002cc0:	mov    BYTE PTR [eax],0x0
 1002cc3:	inc    eax
 1002cc4:	dec    ecx
 1002cc5:	jne    0x1002cc0
 1002cc7:	push   DWORD PTR [esi]
 1002cc9:	call   0x1004b60
 1002cce:	and    DWORD PTR [esi],0x0
 1002cd1:	and    DWORD PTR [esi+0x4],0x0
 1002cd5:	pop    ecx
 1002cd6:	pop    esi
 1002cd7:	ret    
 1002cd8:	int3   
 1002cd9:	int3   
 1002cda:	int3   
 1002cdb:	int3   
 1002cdc:	int3   
 1002cdd:	mov    edi,edi
 1002cdf:	push   ebp
 1002ce0:	mov    ebp,esp
 1002ce2:	push   esi
 1002ce3:	mov    esi,ecx
 1002ce5:	call   0x1002cae
 1002cea:	mov    eax,DWORD PTR [ebp+0x8]
 1002ced:	and    eax,0xfffffff8
 1002cf0:	test   DWORD PTR [ebp+0x8],0x7
 1002cf7:	mov    DWORD PTR [esi+0x4],eax
 1002cfa:	jne    0x1002d00
 1002cfc:	test   eax,eax
 1002cfe:	jne    0x1002d06
 1002d00:	add    eax,0x8
 1002d03:	mov    DWORD PTR [esi+0x4],eax
 1002d06:	push   DWORD PTR [esi+0x4]
 1002d09:	call   0x1004b54
 1002d0e:	pop    ecx
 1002d0f:	mov    ecx,eax
 1002d11:	mov    DWORD PTR [esi],ecx
 1002d13:	test   ecx,ecx
 1002d15:	jne    0x1002d1a
 1002d17:	and    DWORD PTR [esi+0x4],eax
 1002d1a:	xor    eax,eax
 1002d1c:	test   ecx,ecx
 1002d1e:	setne  al
 1002d21:	pop    esi
 1002d22:	pop    ebp
 1002d23:	ret    0x4
 1002d26:	int3   
 1002d27:	int3   
 1002d28:	int3   
 1002d29:	int3   
 1002d2a:	int3   
 1002d2b:	mov    edi,edi
 1002d2d:	push   ebp
 1002d2e:	mov    ebp,esp
 1002d30:	push   esi
 1002d31:	mov    esi,ecx
 1002d33:	call   0x1002cae
 1002d38:	cmp    DWORD PTR [ebp+0x8],0x0
 1002d3c:	je     0x1002d7b
 1002d3e:	mov    edx,DWORD PTR [ebp+0x8]
 1002d41:	lea    ecx,[edx+0x2]
 1002d44:	mov    ax,WORD PTR [edx]
 1002d47:	add    edx,0x2
 1002d4a:	test   ax,ax
 1002d4d:	jne    0x1002d44
 1002d4f:	sub    edx,ecx
 1002d51:	sar    edx,1
 1002d53:	push   ebx
 1002d54:	lea    ebx,[edx+0x1]
 1002d57:	cmp    ebx,0x1
 1002d5a:	jbe    0x1002d7a
 1002d5c:	lea    eax,[ebx+ebx*1]
 1002d5f:	push   eax
 1002d60:	mov    ecx,esi
 1002d62:	call   0x1002cdd
 1002d67:	test   al,al
 1002d69:	je     0x1002d7a
 1002d6b:	lea    eax,[esi+0x4]
 1002d6e:	push   eax
 1002d6f:	push   DWORD PTR [esi]
 1002d71:	push   ebx
 1002d72:	push   DWORD PTR [ebp+0x8]
 1002d75:	call   0x1006d4a
 1002d7a:	pop    ebx
 1002d7b:	mov    eax,esi
 1002d7d:	pop    esi
 1002d7e:	pop    ebp
 1002d7f:	ret    0x4
 1002d82:	int3   
 1002d83:	int3   
 1002d84:	int3   
 1002d85:	int3   
 1002d86:	int3   
 1002d87:	mov    edi,edi
 1002d89:	push   ebp
 1002d8a:	mov    ebp,esp
 1002d8c:	sub    esp,0x218
 1002d92:	mov    eax,ds:0x100907c
 1002d97:	xor    eax,ebp
 1002d99:	mov    DWORD PTR [ebp-0x4],eax
 1002d9c:	push   esi
 1002d9d:	push   edi
 1002d9e:	mov    edi,DWORD PTR [ebp+0x8]
 1002da1:	lea    eax,[ebp-0x210]
 1002da7:	push   eax
 1002da8:	push   0x20019
 1002dad:	xor    esi,esi
 1002daf:	push   esi
 1002db0:	push   0x100188c
 1002db5:	push   0x80000002
 1002dba:	mov    DWORD PTR [ebp-0x210],esi
 1002dc0:	call   DWORD PTR ds:0x1001004
 1002dc6:	test   eax,eax
 1002dc8:	jne    0x1002e07
 1002dca:	lea    eax,[ebp-0x214]
 1002dd0:	push   eax
 1002dd1:	lea    eax,[ebp-0x20c]
 1002dd7:	push   eax
 1002dd8:	lea    eax,[ebp-0x218]
 1002dde:	push   eax
 1002ddf:	push   esi
 1002de0:	push   0x10018cc
 1002de5:	push   DWORD PTR [ebp-0x210]
 1002deb:	mov    DWORD PTR [ebp-0x214],0x104
 1002df5:	call   DWORD PTR ds:0x1001008
 1002dfb:	push   DWORD PTR [ebp-0x210]
 1002e01:	call   DWORD PTR ds:0x1001000
 1002e07:	lea    eax,[ebp-0x20c]
 1002e0d:	push   eax
 1002e0e:	call   DWORD PTR ds:0x10010b4
 1002e14:	cmp    eax,0xffffffff
 1002e17:	jne    0x1002e72
 1002e19:	push   0x104
 1002e1e:	lea    eax,[ebp-0x20c]
 1002e24:	push   eax
 1002e25:	push   esi
 1002e26:	call   DWORD PTR ds:0x10010c8
 1002e2c:	lea    eax,[ebp-0x20c]
 1002e32:	push   0x5c
 1002e34:	push   eax
 1002e35:	call   DWORD PTR ds:0x10011bc
 1002e3b:	pop    ecx
 1002e3c:	pop    ecx
 1002e3d:	test   eax,eax
 1002e3f:	je     0x1002e85
 1002e41:	xor    ecx,ecx
 1002e43:	push   0x1001900
 1002e48:	mov    WORD PTR [eax],cx
 1002e4b:	lea    eax,[ebp-0x20c]
 1002e51:	push   0x104
 1002e56:	push   eax
 1002e57:	call   DWORD PTR ds:0x10011c0
 1002e5d:	add    esp,0xc
 1002e60:	lea    eax,[ebp-0x20c]
 1002e66:	push   eax
 1002e67:	call   DWORD PTR ds:0x10010b4
 1002e6d:	cmp    eax,0xffffffff
 1002e70:	je     0x1002e85
 1002e72:	lea    eax,[ebp-0x20c]
 1002e78:	push   eax
 1002e79:	call   DWORD PTR ds:0x10010cc
 1002e7f:	mov    esi,eax
 1002e81:	test   esi,esi
 1002e83:	jne    0x1002e8c
 1002e85:	push   edi
 1002e86:	call   0x1002eea
 1002e8b:	pop    ecx
 1002e8c:	mov    ecx,DWORD PTR [ebp-0x4]
 1002e8f:	pop    edi
 1002e90:	mov    eax,esi
 1002e92:	xor    ecx,ebp
 1002e94:	pop    esi
 1002e95:	call   0x1004b6b
 1002e9a:	leave  
 1002e9b:	ret    
 1002e9c:	int3   
 1002e9d:	int3   
 1002e9e:	int3   
 1002e9f:	int3   
 1002ea0:	int3   
 1002ea1:	mov    edi,edi
 1002ea3:	push   ebp
 1002ea4:	mov    ebp,esp
 1002ea6:	push   esi
 1002ea7:	push   0x1001920
 1002eac:	push   DWORD PTR [ebp+0x8]
 1002eaf:	or     esi,0xffffffff
 1002eb2:	call   DWORD PTR ds:0x10010d8
 1002eb8:	test   eax,eax
 1002eba:	je     0x1002ed7
 1002ebc:	push   0x0
 1002ebe:	push   0x10012b0
 1002ec3:	push   DWORD PTR [ebp+0x14]
 1002ec6:	push   0x1001928
 1002ecb:	push   DWORD PTR [ebp+0x10]
 1002ece:	call   eax
 1002ed0:	add    esp,0x14
 1002ed3:	mov    esi,eax
 1002ed5:	jmp    0x1002ee0
 1002ed7:	push   DWORD PTR [ebp+0xc]
 1002eda:	call   0x1002eea
 1002edf:	pop    ecx
 1002ee0:	mov    eax,esi
 1002ee2:	pop    esi
 1002ee3:	pop    ebp
 1002ee4:	ret    
 1002ee5:	int3   
 1002ee6:	int3   
 1002ee7:	int3   
 1002ee8:	int3   
 1002ee9:	int3   
 1002eea:	mov    edi,edi
 1002eec:	push   ebp
 1002eed:	mov    ebp,esp
 1002eef:	sub    esp,0xfa4
 1002ef5:	mov    eax,ds:0x100907c
 1002efa:	xor    eax,ebp
 1002efc:	mov    DWORD PTR [ebp-0x4],eax
 1002eff:	push   ebx
 1002f00:	push   edi
 1002f01:	mov    edi,DWORD PTR [ebp+0x8]
 1002f04:	mov    ebx,0x3e8
 1002f09:	push   ebx
 1002f0a:	lea    eax,[ebp-0xfa4]
 1002f10:	push   eax
 1002f11:	push   0x68
 1002f13:	push   edi
 1002f14:	call   DWORD PTR ds:0x10011e4
 1002f1a:	push   ebx
 1002f1b:	lea    eax,[ebp-0x7d4]
 1002f21:	push   eax
 1002f22:	push   0x6d
 1002f24:	push   edi
 1002f25:	call   DWORD PTR ds:0x10011e4
 1002f2b:	push   0x10
 1002f2d:	lea    eax,[ebp-0x7d4]
 1002f33:	push   eax
 1002f34:	lea    eax,[ebp-0xfa4]
 1002f3a:	push   eax
 1002f3b:	push   0x0
 1002f3d:	call   DWORD PTR ds:0x10011e8
 1002f43:	mov    ecx,DWORD PTR [ebp-0x4]
 1002f46:	pop    edi
 1002f47:	xor    ecx,ebp
 1002f49:	pop    ebx
 1002f4a:	call   0x1004b6b
 1002f4f:	leave  
 1002f50:	ret    
 1002f51:	int3   
 1002f52:	int3   
 1002f53:	int3   
 1002f54:	int3   
 1002f55:	int3   
 1002f56:	push   0x40
 1002f58:	push   0x66
 1002f5a:	call   0x100305c
 1002f5f:	pop    ecx
 1002f60:	pop    ecx
 1002f61:	ret    
 1002f62:	int3   
 1002f63:	int3   
 1002f64:	int3   
 1002f65:	int3   
 1002f66:	int3   
 1002f67:	mov    edi,edi
 1002f69:	push   ebp
 1002f6a:	mov    ebp,esp
 1002f6c:	sub    esp,0x210
 1002f72:	mov    eax,ds:0x100907c
 1002f77:	xor    eax,ebp
 1002f79:	mov    DWORD PTR [ebp-0x4],eax
 1002f7c:	push   ebx
 1002f7d:	push   esi
 1002f7e:	push   edi
 1002f7f:	push   0x69
 1002f81:	pop    edi
 1002f82:	xor    eax,eax
 1002f84:	push   0x206
 1002f89:	push   eax
 1002f8a:	mov    WORD PTR [ebp-0x20c],ax
 1002f91:	lea    eax,[ebp-0x20a]
 1002f97:	mov    esi,0x104
 1002f9c:	push   eax
 1002f9d:	xor    bl,bl
 1002f9f:	mov    DWORD PTR [ebp-0x210],esi
 1002fa5:	call   0x1004cc4
 1002faa:	add    esp,0xc
 1002fad:	lea    eax,[ebp-0x210]
 1002fb3:	push   eax
 1002fb4:	lea    eax,[ebp-0x20c]
 1002fba:	push   eax
 1002fbb:	push   0x1001848
 1002fc0:	push   0x0
 1002fc2:	call   0x1005837
 1002fc7:	test   eax,eax
 1002fc9:	je     0x1003027
 1002fcb:	push   0x1001860
 1002fd0:	push   esi
 1002fd1:	lea    eax,[ebp-0x20c]
 1002fd7:	push   eax
 1002fd8:	call   0x1002622
 1002fdd:	test   eax,eax
 1002fdf:	js     0x1003027
 1002fe1:	lea    eax,[ebp-0x20c]
 1002fe7:	push   eax
 1002fe8:	call   DWORD PTR ds:0x10010cc
 1002fee:	mov    esi,eax
 1002ff0:	test   esi,esi
 1002ff2:	je     0x100303c
 1002ff4:	push   0x100187c
 1002ff9:	push   esi
 1002ffa:	call   DWORD PTR ds:0x10010d8
 1003000:	test   eax,eax
 1003002:	je     0x100302d
 1003004:	push   0xa1d58f2b
 1003009:	call   eax
 100300b:	cmp    eax,0xffffffff
 100300e:	je     0x100302d
 1003010:	cmp    eax,0xfffffffe
 1003013:	je     0x100302d
 1003015:	cmp    eax,0xffffff00
 100301a:	jne    0x1003021
 100301c:	push   0x6a
 100301e:	pop    edi
 100301f:	jmp    0x100302d
 1003021:	mov    bl,0x1
 1003023:	xor    edi,edi
 1003025:	jmp    0x100302d
 1003027:	mov    esi,DWORD PTR [ebp-0x210]
 100302d:	test   esi,esi
 100302f:	je     0x1003038
 1003031:	push   esi
 1003032:	call   DWORD PTR ds:0x10010dc
 1003038:	test   bl,bl
 100303a:	jne    0x1003046
 100303c:	push   0x10
 100303e:	push   edi
 100303f:	call   0x100305c
 1003044:	pop    ecx
 1003045:	pop    ecx
 1003046:	mov    ecx,DWORD PTR [ebp-0x4]
 1003049:	pop    edi
 100304a:	pop    esi
 100304b:	mov    al,bl
 100304d:	xor    ecx,ebp
 100304f:	pop    ebx
 1003050:	call   0x1004b6b
 1003055:	leave  
 1003056:	ret    
 1003057:	int3   
 1003058:	int3   
 1003059:	int3   
 100305a:	int3   
 100305b:	int3   
 100305c:	push   0x28
 100305e:	mov    eax,0x1007149
 1003063:	call   0x1004bc3
 1003068:	xor    ebx,ebx
 100306a:	mov    DWORD PTR [ebp-0x4],ebx
 100306d:	push   0x1001780
 1003072:	lea    ecx,[ebp-0x24]
 1003075:	call   0x1002b0e
 100307a:	mov    BYTE PTR [ebp-0x4],0x1
 100307e:	push   0x1001938
 1003083:	lea    ecx,[ebp-0x20]
 1003086:	call   0x1002b0e
 100308b:	mov    BYTE PTR [ebp-0x4],0x2
 100308f:	lea    eax,[ebp-0x20]
 1003092:	push   eax
 1003093:	lea    eax,[ebp-0x24]
 1003096:	push   eax
 1003097:	lea    ecx,[ebp-0x34]
 100309a:	call   0x1003540
 100309f:	mov    BYTE PTR [ebp-0x4],0x3
 10030a3:	mov    esi,0x10090a8
 10030a8:	push   esi
 10030a9:	lea    ecx,[ebp-0x1c]
 10030ac:	call   0x10027a3
 10030b1:	mov    BYTE PTR [ebp-0x4],0x4
 10030b5:	mov    BYTE PTR [ebp-0x4],0x5
 10030b9:	lea    eax,[ebp-0x1c]
 10030bc:	push   eax
 10030bd:	push   0x65
 10030bf:	lea    ecx,[ebp-0x34]
 10030c2:	call   0x1003621
 10030c7:	test   al,al
 10030c9:	jne    0x10030dc
 10030cb:	mov    BYTE PTR [ebp-0x11],bl
 10030ce:	push   0x10077a0
 10030d3:	lea    eax,[ebp-0x11]
 10030d6:	push   eax
 10030d7:	call   0x1004b80
 10030dc:	push   esi
 10030dd:	lea    ecx,[ebp-0x18]
 10030e0:	call   0x10027a3
 10030e5:	mov    BYTE PTR [ebp-0x4],0x6
 10030e9:	mov    BYTE PTR [ebp-0x4],0x7
 10030ed:	lea    eax,[ebp-0x18]
 10030f0:	push   eax
 10030f1:	push   DWORD PTR [ebp+0x8]
 10030f4:	lea    ecx,[ebp-0x34]
 10030f7:	call   0x1003621
 10030fc:	test   al,al
 10030fe:	jne    0x100310d
 1003100:	mov    BYTE PTR [ebp-0x12],bl
 1003103:	push   0x10077a0
 1003108:	lea    eax,[ebp-0x12]
 100310b:	jmp    0x10030d6
 100310d:	push   0x40
 100310f:	push   DWORD PTR [ebp-0x1c]
 1003112:	push   DWORD PTR [ebp-0x18]
 1003115:	push   ebx
 1003116:	call   DWORD PTR ds:0x10011e8
 100311c:	mov    BYTE PTR [ebp-0x4],0x8
 1003120:	mov    BYTE PTR [ebp-0x4],0x5
 1003124:	mov    ecx,DWORD PTR [ebp-0x18]
 1003127:	lea    ecx,[ecx-0x10]
 100312a:	call   0x1002707
 100312f:	mov    BYTE PTR [ebp-0x4],0x9
 1003133:	mov    BYTE PTR [ebp-0x4],0x3
 1003137:	mov    ecx,DWORD PTR [ebp-0x1c]
 100313a:	lea    ecx,[ecx-0x10]
 100313d:	call   0x1002707
 1003142:	mov    BYTE PTR [ebp-0x4],0x2
 1003146:	lea    ecx,[ebp-0x34]
 1003149:	call   0x10035b1
 100314e:	mov    BYTE PTR [ebp-0x4],0xa
 1003152:	mov    BYTE PTR [ebp-0x4],0x1
 1003156:	mov    ecx,DWORD PTR [ebp-0x20]
 1003159:	lea    ecx,[ecx-0x10]
 100315c:	call   0x1002707
 1003161:	mov    BYTE PTR [ebp-0x4],0xb
 1003165:	mov    BYTE PTR [ebp-0x4],bl
 1003168:	mov    ecx,DWORD PTR [ebp-0x24]
 100316b:	lea    ecx,[ecx-0x10]
 100316e:	call   0x1002707
 1003173:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003177:	call   0x1004c77
 100317c:	ret    
 100317d:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003181:	mov    eax,0x1003177
 1003186:	ret    
 1003187:	int3   
 1003188:	int3   
 1003189:	int3   
 100318a:	int3   
 100318b:	int3   
 100318c:	mov    edi,edi
 100318e:	push   ebp
 100318f:	mov    ebp,esp
 1003191:	push   esi
 1003192:	mov    esi,ecx
 1003194:	cmp    DWORD PTR [esi],0x0
 1003197:	je     0x10031cf
 1003199:	push   0x1001988
 100319e:	call   DWORD PTR ds:0x10010ac
 10031a4:	test   eax,eax
 10031a6:	je     0x10031dd
 10031a8:	push   0x10019a4
 10031ad:	push   eax
 10031ae:	call   DWORD PTR ds:0x10010d8
 10031b4:	test   eax,eax
 10031b6:	je     0x10031dd
 10031b8:	push   0x0
 10031ba:	push   DWORD PTR [esi]
 10031bc:	push   DWORD PTR [ebp+0x18]
 10031bf:	push   DWORD PTR [ebp+0x14]
 10031c2:	push   DWORD PTR [ebp+0x10]
 10031c5:	push   DWORD PTR [ebp+0xc]
 10031c8:	push   DWORD PTR [ebp+0x8]
 10031cb:	call   eax
 10031cd:	jmp    0x10031e0
 10031cf:	cmp    DWORD PTR [esi+0x4],0x0
 10031d3:	je     0x10031dd
 10031d5:	pop    esi
 10031d6:	pop    ebp
 10031d7:	jmp    DWORD PTR ds:0x1001004
 10031dd:	xor    eax,eax
 10031df:	inc    eax
 10031e0:	pop    esi
 10031e1:	pop    ebp
 10031e2:	ret    0x14
 10031e5:	int3   
 10031e6:	int3   
 10031e7:	int3   
 10031e8:	int3   
 10031e9:	int3   
 10031ea:	jmp    0x10032fb
 10031ef:	int3   
 10031f0:	int3   
 10031f1:	int3   
 10031f2:	int3   
 10031f3:	int3   
 10031f4:	mov    edi,edi
 10031f6:	push   ebp
 10031f7:	mov    ebp,esp
 10031f9:	push   ecx
 10031fa:	lea    eax,[ebp-0x4]
 10031fd:	push   eax
 10031fe:	push   DWORD PTR [ebp+0xc]
 1003201:	lea    eax,[ebp+0xc]
 1003204:	push   eax
 1003205:	push   0x0
 1003207:	push   DWORD PTR [ebp+0x8]
 100320a:	mov    DWORD PTR [ebp-0x4],0x4
 1003211:	push   DWORD PTR [ecx]
 1003213:	call   DWORD PTR ds:0x1001008
 1003219:	test   eax,eax
 100321b:	jne    0x100322a
 100321d:	mov    eax,DWORD PTR [ebp+0xc]
 1003220:	sub    eax,0x4
 1003223:	neg    eax
 1003225:	sbb    eax,eax
 1003227:	and    eax,0xd
 100322a:	leave  
 100322b:	ret    0x8
 100322e:	int3   
 100322f:	int3   
 1003230:	int3   
 1003231:	int3   
 1003232:	int3   
 1003233:	mov    edi,edi
 1003235:	push   ebp
 1003236:	mov    ebp,esp
 1003238:	push   ecx
 1003239:	push   ebx
 100323a:	push   esi
 100323b:	mov    esi,DWORD PTR [ebp+0xc]
 100323e:	push   edi
 100323f:	mov    edi,DWORD PTR [ebp+0x10]
 1003242:	mov    eax,DWORD PTR [edi]
 1003244:	add    eax,eax
 1003246:	mov    DWORD PTR [ebp-0x4],eax
 1003249:	lea    eax,[ebp-0x4]
 100324c:	push   eax
 100324d:	push   esi
 100324e:	lea    eax,[ebp+0x10]
 1003251:	push   eax
 1003252:	xor    ebx,ebx
 1003254:	push   ebx
 1003255:	push   DWORD PTR [ebp+0x8]
 1003258:	mov    DWORD PTR [edi],ebx
 100325a:	push   DWORD PTR [ecx]
 100325c:	call   DWORD PTR ds:0x1001008
 1003262:	test   eax,eax
 1003264:	jne    0x100329f
 1003266:	cmp    DWORD PTR [ebp+0x10],0x1
 100326a:	je     0x1003277
 100326c:	cmp    DWORD PTR [ebp+0x10],0x2
 1003270:	je     0x1003277
 1003272:	push   0xd
 1003274:	pop    eax
 1003275:	jmp    0x100329f
 1003277:	mov    ecx,DWORD PTR [ebp-0x4]
 100327a:	test   esi,esi
 100327c:	je     0x1003299
 100327e:	test   ecx,ecx
 1003280:	je     0x1003294
 1003282:	test   cl,0x1
 1003285:	jne    0x1003272
 1003287:	mov    eax,ecx
 1003289:	shr    eax,1
 100328b:	cmp    WORD PTR [esi+eax*2-0x2],bx
 1003290:	je     0x1003299
 1003292:	jmp    0x1003272
 1003294:	xor    eax,eax
 1003296:	mov    WORD PTR [esi],ax
 1003299:	shr    ecx,1
 100329b:	mov    DWORD PTR [edi],ecx
 100329d:	xor    eax,eax
 100329f:	pop    edi
 10032a0:	pop    esi
 10032a1:	pop    ebx
 10032a2:	leave  
 10032a3:	ret    0xc
 10032a6:	int3   
 10032a7:	int3   
 10032a8:	int3   
 10032a9:	int3   
 10032aa:	int3   
 10032ab:	mov    edi,edi
 10032ad:	push   ebp
 10032ae:	mov    ebp,esp
 10032b0:	push   ecx
 10032b1:	push   esi
 10032b2:	lea    eax,[ebp-0x4]
 10032b5:	push   eax
 10032b6:	push   DWORD PTR [ebp+0x10]
 10032b9:	xor    edx,edx
 10032bb:	push   edx
 10032bc:	push   DWORD PTR [ebp+0xc]
 10032bf:	mov    esi,ecx
 10032c1:	mov    ecx,DWORD PTR [esi+0x8]
 10032c4:	push   DWORD PTR [ebp+0x8]
 10032c7:	mov    DWORD PTR [ebp-0x4],edx
 10032ca:	test   ecx,ecx
 10032cc:	je     0x10032d5
 10032ce:	call   0x100318c
 10032d3:	jmp    0x10032db
 10032d5:	call   DWORD PTR ds:0x1001004
 10032db:	mov    ecx,eax
 10032dd:	test   ecx,ecx
 10032df:	jne    0x10032ef
 10032e1:	mov    ecx,esi
 10032e3:	call   0x10032fb
 10032e8:	mov    ecx,eax
 10032ea:	mov    eax,DWORD PTR [ebp-0x4]
 10032ed:	mov    DWORD PTR [esi],eax
 10032ef:	mov    eax,ecx
 10032f1:	pop    esi
 10032f2:	leave  
 10032f3:	ret    0xc
 10032f6:	int3   
 10032f7:	int3   
 10032f8:	int3   
 10032f9:	int3   
 10032fa:	int3   
 10032fb:	mov    edi,edi
 10032fd:	push   esi
 10032fe:	mov    esi,ecx
 1003300:	xor    eax,eax
 1003302:	cmp    DWORD PTR [esi],eax
 1003304:	je     0x1003311
 1003306:	push   DWORD PTR [esi]
 1003308:	call   DWORD PTR ds:0x1001000
 100330e:	and    DWORD PTR [esi],0x0
 1003311:	and    DWORD PTR [esi+0x4],0x0
 1003315:	pop    esi
 1003316:	ret    
 1003317:	int3   
 1003318:	int3   
 1003319:	int3   
 100331a:	int3   
 100331b:	int3   
 100331c:	ret    
 100331d:	int3   
 100331e:	int3   
 100331f:	int3   
 1003320:	int3   
 1003321:	int3   
 1003322:	mov    edi,edi
 1003324:	push   ebp
 1003325:	mov    ebp,esp
 1003327:	mov    eax,DWORD PTR [ebp+0x8]
 100332a:	push   ebx
 100332b:	mov    ebx,ecx
 100332d:	mov    ecx,DWORD PTR [eax]
 100332f:	push   edi
 1003330:	mov    edi,DWORD PTR [ebx]
 1003332:	lea    edx,[ecx-0x10]
 1003335:	sub    edi,0x10
 1003338:	cmp    edx,edi
 100333a:	je     0x100336c
 100333c:	cmp    DWORD PTR [edi+0xc],0x0
 1003340:	jl     0x1003361
 1003342:	mov    eax,DWORD PTR [edx]
 1003344:	cmp    eax,DWORD PTR [edi]
 1003346:	jne    0x1003361
 1003348:	push   esi
 1003349:	push   edx
 100334a:	call   0x1002aa9
 100334f:	pop    ecx
 1003350:	mov    ecx,edi
 1003352:	mov    esi,eax
 1003354:	call   0x1002707
 1003359:	lea    eax,[esi+0x10]
 100335c:	mov    DWORD PTR [ebx],eax
 100335e:	pop    esi
 100335f:	jmp    0x100336c
 1003361:	push   DWORD PTR [ecx-0xc]
 1003364:	push   ecx
 1003365:	mov    ecx,ebx
 1003367:	call   0x100282e
 100336c:	pop    edi
 100336d:	mov    eax,ebx
 100336f:	pop    ebx
 1003370:	pop    ebp
 1003371:	ret    0x4
 1003374:	int3   
 1003375:	int3   
 1003376:	int3   
 1003377:	int3   
 1003378:	int3   
 1003379:	mov    edi,edi
 100337b:	push   ebp
 100337c:	mov    ebp,esp
 100337e:	mov    ecx,DWORD PTR [ebp+0x8]
 1003381:	push   ebx
 1003382:	mov    ebx,DWORD PTR [ebp+0x10]
 1003385:	push   esi
 1003386:	push   edi
 1003387:	mov    edi,DWORD PTR [ebp+0x18]
 100338a:	lea    eax,[ebx+edi*1]
 100338d:	push   eax
 100338e:	call   0x100299c
 1003393:	push   ebx
 1003394:	push   DWORD PTR [ebp+0xc]
 1003397:	mov    esi,eax
 1003399:	push   ebx
 100339a:	push   esi
 100339b:	call   0x10028ad
 10033a0:	push   edi
 10033a1:	push   DWORD PTR [ebp+0x14]
 10033a4:	lea    eax,[esi+ebx*2]
 10033a7:	push   edi
 10033a8:	push   eax
 10033a9:	call   0x10028ad
 10033ae:	mov    ecx,DWORD PTR [ebp+0x8]
 10033b1:	add    esp,0x20
 10033b4:	lea    eax,[ebx+edi*1]
 10033b7:	push   eax
 10033b8:	call   0x1002a77
 10033bd:	pop    edi
 10033be:	pop    esi
 10033bf:	pop    ebx
 10033c0:	pop    ebp
 10033c1:	ret    
 10033c2:	int3   
 10033c3:	int3   
 10033c4:	int3   
 10033c5:	int3   
 10033c6:	int3   
 10033c7:	mov    edi,edi
 10033c9:	push   ebp
 10033ca:	mov    ebp,esp
 10033cc:	mov    ecx,DWORD PTR [ebp+0x8]
 10033cf:	lea    eax,[ebp+0x10]
 10033d2:	push   eax
 10033d3:	push   DWORD PTR [ebp+0xc]
 10033d6:	call   0x10033e2
 10033db:	pop    ebp
 10033dc:	ret    
 10033dd:	int3   
 10033de:	int3   
 10033df:	int3   
 10033e0:	int3   
 10033e1:	int3   
 10033e2:	mov    edi,edi
 10033e4:	push   ebp
 10033e5:	mov    ebp,esp
 10033e7:	cmp    DWORD PTR [ebp+0x8],0x0
 10033eb:	push   ebx
 10033ec:	push   edi
 10033ed:	mov    ebx,ecx
 10033ef:	jne    0x10033fb
 10033f1:	push   0x80070057
 10033f6:	call   0x100243d
 10033fb:	push   DWORD PTR [ebp+0xc]
 10033fe:	push   DWORD PTR [ebp+0x8]
 1003401:	call   DWORD PTR ds:0x1001194
 1003407:	mov    edi,eax
 1003409:	pop    ecx
 100340a:	pop    ecx
 100340b:	test   edi,edi
 100340d:	jns    0x1003416
 100340f:	push   0x80004005
 1003414:	jmp    0x10033f6
 1003416:	push   edi
 1003417:	mov    ecx,ebx
 1003419:	call   0x100299c
 100341e:	push   DWORD PTR [ebp+0xc]
 1003421:	lea    ecx,[edi+0x1]
 1003424:	push   DWORD PTR [ebp+0x8]
 1003427:	push   ecx
 1003428:	push   eax
 1003429:	call   DWORD PTR ds:0x1001198
 100342f:	add    esp,0x10
 1003432:	push   edi
 1003433:	mov    ecx,ebx
 1003435:	call   0x1002a77
 100343a:	pop    edi
 100343b:	pop    ebx
 100343c:	pop    ebp
 100343d:	ret    0x8
 1003440:	int3   
 1003441:	int3   
 1003442:	int3   
 1003443:	int3   
 1003444:	int3   
 1003445:	push   0x4
 1003447:	mov    eax,0x100718a
 100344c:	call   0x1004b8b
 1003451:	and    DWORD PTR [ebp-0x4],0x0
 1003455:	mov    esi,DWORD PTR [ebp+0xc]
 1003458:	and    DWORD PTR [ebp-0x10],0x0
 100345c:	mov    ecx,esi
 100345e:	call   0x1002bb2
 1003463:	mov    ecx,DWORD PTR [ebp+0x8]
 1003466:	push   eax
 1003467:	call   0x10027a3
 100346c:	and    DWORD PTR [ebp-0x4],0x0
 1003470:	push   DWORD PTR [ebp+0x10]
 1003473:	mov    esi,DWORD PTR [esi]
 1003475:	mov    DWORD PTR [ebp-0x10],0x1
 100347c:	call   0x10028fb
 1003481:	push   eax
 1003482:	push   DWORD PTR [ebp+0x10]
 1003485:	push   DWORD PTR [esi-0xc]
 1003488:	push   esi
 1003489:	push   DWORD PTR [ebp+0x8]
 100348c:	call   0x1003379
 1003491:	mov    eax,DWORD PTR [ebp+0x8]
 1003494:	add    esp,0x18
 1003497:	call   0x1004c77
 100349c:	ret    
 100349d:	int3   
 100349e:	int3   
 100349f:	int3   
 10034a0:	int3   
 10034a1:	int3   
 10034a2:	push   0x4
 10034a4:	mov    eax,0x10071b3
 10034a9:	call   0x1004b8b
 10034ae:	mov    DWORD PTR [ebp-0x10],ecx
 10034b1:	mov    DWORD PTR [ecx],0x10019bc
 10034b7:	or     DWORD PTR [ebp-0x4],0xffffffff
 10034bb:	call   DWORD PTR ds:0x1001188
 10034c1:	call   0x1004c77
 10034c6:	ret    
 10034c7:	int3   
 10034c8:	int3   
 10034c9:	int3   
 10034ca:	int3   
 10034cb:	int3   
 10034cc:	push   0x4
 10034ce:	mov    eax,0x10071dc
 10034d3:	call   0x1004b8b
 10034d8:	mov    esi,ecx
 10034da:	mov    DWORD PTR [ebp-0x10],esi
 10034dd:	push   DWORD PTR [ebp+0x8]
 10034e0:	call   DWORD PTR ds:0x100118c
 10034e6:	and    DWORD PTR [ebp-0x4],0x0
 10034ea:	mov    DWORD PTR [esi],0x10019bc
 10034f0:	or     DWORD PTR [ebp-0x4],0xffffffff
 10034f4:	mov    eax,esi
 10034f6:	call   0x1004c77
 10034fb:	ret    0x4
 10034fe:	int3   
 10034ff:	int3   
 1003500:	int3   
 1003501:	int3   
 1003502:	int3   
 1003503:	push   0x4
 1003505:	mov    eax,0x1007205
 100350a:	call   0x1004b8b
 100350f:	mov    esi,ecx
 1003511:	mov    DWORD PTR [ebp-0x10],esi
 1003514:	mov    DWORD PTR [esi],0x10019bc
 100351a:	or     DWORD PTR [ebp-0x4],0xffffffff
 100351e:	call   DWORD PTR ds:0x1001188
 1003524:	test   BYTE PTR [ebp+0x8],0x1
 1003528:	je     0x1003531
 100352a:	push   esi
 100352b:	call   0x1004b30
 1003530:	pop    ecx
 1003531:	mov    eax,esi
 1003533:	call   0x1004c77
 1003538:	ret    0x4
 100353b:	int3   
 100353c:	int3   
 100353d:	int3   
 100353e:	int3   
 100353f:	int3   
 1003540:	push   0x8
 1003542:	mov    eax,0x100724b
 1003547:	call   0x1004b8b
 100354c:	mov    ebx,ecx
 100354e:	mov    DWORD PTR [ebp-0x10],ebx
 1003551:	lea    edi,[ebx+0x8]
 1003554:	push   0x10090a8
 1003559:	mov    ecx,edi
 100355b:	mov    DWORD PTR [ebx],0x10019c4
 1003561:	mov    DWORD PTR [ebp-0x14],edi
 1003564:	call   0x10027a3
 1003569:	mov    DWORD PTR [ebp-0x4],0x1
 1003570:	lea    esi,[ebx+0xc]
 1003573:	push   0x10090a8
 1003578:	mov    ecx,esi
 100357a:	mov    DWORD PTR [ebp-0x14],esi
 100357d:	call   0x10027a3
 1003582:	mov    BYTE PTR [ebp-0x4],0x3
 1003586:	push   DWORD PTR [ebp+0x8]
 1003589:	and    DWORD PTR [ebx+0x4],0x0
 100358d:	mov    ecx,edi
 100358f:	call   0x1003322
 1003594:	push   DWORD PTR [ebp+0xc]
 1003597:	mov    ecx,esi
 1003599:	call   0x1003322
 100359e:	or     DWORD PTR [ebp-0x4],0xffffffff
 10035a2:	mov    eax,ebx
 10035a4:	call   0x1004c77
 10035a9:	ret    0x8
 10035ac:	int3   
 10035ad:	int3   
 10035ae:	int3   
 10035af:	int3   
 10035b0:	int3   
 10035b1:	push   0x8
 10035b3:	mov    eax,0x1007291
 10035b8:	call   0x1004b8b
 10035bd:	mov    esi,ecx
 10035bf:	mov    DWORD PTR [ebp-0x10],esi
 10035c2:	mov    DWORD PTR [esi],0x10019c4
 10035c8:	mov    DWORD PTR [ebp-0x4],0x1
 10035cf:	mov    eax,DWORD PTR [esi+0x4]
 10035d2:	test   eax,eax
 10035d4:	je     0x10035e6
 10035d6:	cmp    eax,0xffffffff
 10035d9:	je     0x10035e6
 10035db:	push   eax
 10035dc:	call   DWORD PTR ds:0x10010dc
 10035e2:	and    DWORD PTR [esi+0x4],0x0
 10035e6:	mov    BYTE PTR [ebp-0x4],0x0
 10035ea:	lea    ecx,[esi+0xc]
 10035ed:	mov    DWORD PTR [ebp-0x14],ecx
 10035f0:	mov    BYTE PTR [ebp-0x4],0x0
 10035f4:	mov    ecx,DWORD PTR [ecx]
 10035f6:	sub    ecx,0x10
 10035f9:	call   0x1002707
 10035fe:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003602:	lea    ecx,[esi+0x8]
 1003605:	mov    DWORD PTR [ebp-0x14],ecx
 1003608:	or     DWORD PTR [ebp-0x4],0xffffffff
 100360c:	mov    ecx,DWORD PTR [ecx]
 100360e:	sub    ecx,0x10
 1003611:	call   0x1002707
 1003616:	call   0x1004c77
 100361b:	ret    
 100361c:	int3   
 100361d:	int3   
 100361e:	int3   
 100361f:	int3   
 1003620:	int3   
 1003621:	push   0x8
 1003623:	mov    eax,0x10072b1
 1003628:	call   0x1004bc3
 100362d:	xor    ebx,ebx
 100362f:	call   0x1003679
 1003634:	mov    DWORD PTR [ebp-0x4],ebx
 1003637:	cmp    eax,0xffffffff
 100363a:	je     0x1003653
 100363c:	push   DWORD PTR [ebp+0x8]
 100363f:	push   eax
 1003640:	mov    ecx,DWORD PTR [ebp+0xc]
 1003643:	call   0x1002c32
 1003648:	dec    eax
 1003649:	neg    eax
 100364b:	sbb    eax,eax
 100364d:	lea    ebx,[eax+0x1]
 1003650:	mov    BYTE PTR [ebp-0x11],bl
 1003653:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003657:	jmp    0x100366a
 1003659:	mov    BYTE PTR [ebp-0x11],0x0
 100365d:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003661:	mov    eax,0x1003667
 1003666:	ret    
 1003667:	mov    bl,BYTE PTR [ebp-0x11]
 100366a:	mov    al,bl
 100366c:	call   0x1004c77
 1003671:	ret    0x8
 1003674:	int3   
 1003675:	int3   
 1003676:	int3   
 1003677:	int3   
 1003678:	int3   
 1003679:	push   0x4
 100367b:	mov    eax,0x10072e9
 1003680:	call   0x1004b8b
 1003685:	mov    edi,ecx
 1003687:	cmp    DWORD PTR [edi+0x4],0x0
 100368b:	jne    0x10036d1
 100368d:	push   0x10090a8
 1003692:	lea    ecx,[ebp-0x10]
 1003695:	call   0x10027a3
 100369a:	mov    DWORD PTR [ebp-0x4],0x1
 10036a1:	lea    eax,[ebp-0x10]
 10036a4:	push   eax
 10036a5:	mov    ecx,edi
 10036a7:	call   0x10036df
 10036ac:	mov    esi,DWORD PTR [ebp-0x10]
 10036af:	test   al,al
 10036b1:	je     0x10036c5
 10036b3:	push   esi
 10036b4:	call   DWORD PTR ds:0x10010cc
 10036ba:	mov    DWORD PTR [edi+0x4],eax
 10036bd:	test   eax,eax
 10036bf:	jne    0x10036c5
 10036c1:	or     DWORD PTR [edi+0x4],0xffffffff
 10036c5:	or     DWORD PTR [ebp-0x4],0xffffffff
 10036c9:	lea    ecx,[esi-0x10]
 10036cc:	call   0x1002707
 10036d1:	mov    eax,DWORD PTR [edi+0x4]
 10036d4:	call   0x1004c77
 10036d9:	ret    
 10036da:	int3   
 10036db:	int3   
 10036dc:	int3   
 10036dd:	int3   
 10036de:	int3   
 10036df:	push   0x14
 10036e1:	mov    eax,0x1007339
 10036e6:	call   0x1004bc3
 10036eb:	mov    esi,ecx
 10036ed:	xor    bl,bl
 10036ef:	and    DWORD PTR [ebp-0x4],0x0
 10036f3:	mov    edi,0x10090a8
 10036f8:	push   edi
 10036f9:	lea    ecx,[ebp-0x18]
 10036fc:	call   0x10027a3
 1003701:	mov    BYTE PTR [ebp-0x4],0x1
 1003705:	mov    BYTE PTR [ebp-0x4],0x2
 1003709:	push   edi
 100370a:	lea    ecx,[ebp-0x1c]
 100370d:	call   0x10027a3
 1003712:	mov    BYTE PTR [ebp-0x4],0x3
 1003716:	mov    BYTE PTR [ebp-0x4],0x4
 100371a:	lea    eax,[ebp-0x1c]
 100371d:	push   eax
 100371e:	lea    eax,[ebp-0x18]
 1003721:	push   eax
 1003722:	mov    ecx,esi
 1003724:	call   0x1003c4e
 1003729:	test   al,al
 100372b:	je     0x1003766
 100372d:	lea    eax,[ebp-0x20]
 1003730:	push   eax
 1003731:	lea    eax,[ebp-0x1c]
 1003734:	push   eax
 1003735:	lea    eax,[ebp-0x18]
 1003738:	push   eax
 1003739:	mov    ecx,esi
 100373b:	call   0x10037b2
 1003740:	test   al,al
 1003742:	je     0x1003766
 1003744:	mov    edi,DWORD PTR [ebp-0x1c]
 1003747:	push   edi
 1003748:	push   DWORD PTR [ebp-0x20]
 100374b:	mov    esi,DWORD PTR [ebp-0x18]
 100374e:	push   esi
 100374f:	push   0x10019c8
 1003754:	push   DWORD PTR [ebp+0x8]
 1003757:	call   0x10033c7
 100375c:	add    esp,0x14
 100375f:	inc    bl
 1003761:	mov    BYTE PTR [ebp-0x11],bl
 1003764:	jmp    0x100376c
 1003766:	mov    esi,DWORD PTR [ebp-0x18]
 1003769:	mov    edi,DWORD PTR [ebp-0x1c]
 100376c:	mov    BYTE PTR [ebp-0x4],0x5
 1003770:	mov    BYTE PTR [ebp-0x4],0x2
 1003774:	lea    ecx,[edi-0x10]
 1003777:	call   0x1002707
 100377c:	mov    BYTE PTR [ebp-0x4],0x6
 1003780:	mov    BYTE PTR [ebp-0x4],0x0
 1003784:	lea    ecx,[esi-0x10]
 1003787:	call   0x1002707
 100378c:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003790:	jmp    0x10037a3
 1003792:	mov    BYTE PTR [ebp-0x11],0x0
 1003796:	or     DWORD PTR [ebp-0x4],0xffffffff
 100379a:	mov    eax,0x10037a0
 100379f:	ret    
 10037a0:	mov    bl,BYTE PTR [ebp-0x11]
 10037a3:	mov    al,bl
 10037a5:	call   0x1004c77
 10037aa:	ret    0x4
 10037ad:	int3   
 10037ae:	int3   
 10037af:	int3   
 10037b0:	int3   
 10037b1:	int3   
 10037b2:	push   0x1c
 10037b4:	mov    eax,0x1007361
 10037b9:	call   0x1004b8b
 10037be:	mov    edi,ecx
 10037c0:	call   0x1003b66
 10037c5:	mov    DWORD PTR [ebp-0x10],eax
 10037c8:	call   DWORD PTR ds:0x100109c
 10037ce:	mov    DWORD PTR [ebp-0x14],eax
 10037d1:	call   DWORD PTR ds:0x10010a0
 10037d7:	mov    DWORD PTR [ebp-0x18],eax
 10037da:	xor    eax,eax
 10037dc:	mov    DWORD PTR [ebp-0x28],eax
 10037df:	mov    DWORD PTR [ebp-0x24],eax
 10037e2:	mov    DWORD PTR [ebp-0x20],eax
 10037e5:	mov    DWORD PTR [ebp-0x4],eax
 10037e8:	lea    eax,[ebp-0x10]
 10037eb:	push   eax
 10037ec:	lea    ecx,[ebp-0x28]
 10037ef:	call   0x1003f7f
 10037f4:	mov    edx,DWORD PTR [ebp-0x10]
 10037f7:	mov    ecx,edx
 10037f9:	shr    ecx,0x10
 10037fc:	and    ecx,0xf
 10037ff:	mov    eax,edx
 1003801:	shl    ecx,0x10
 1003804:	mov    ebx,0x3ff
 1003809:	and    eax,ebx
 100380b:	or     ecx,eax
 100380d:	lea    esi,[ebx+0x1]
 1003810:	or     ecx,esi
 1003812:	neg    edx
 1003814:	sbb    edx,edx
 1003816:	and    edx,ecx
 1003818:	lea    eax,[ebp-0x10]
 100381b:	push   eax
 100381c:	lea    ecx,[ebp-0x28]
 100381f:	mov    DWORD PTR [ebp-0x10],edx
 1003822:	call   0x1003e77
 1003827:	lea    eax,[ebp-0x14]
 100382a:	push   eax
 100382b:	lea    ecx,[ebp-0x28]
 100382e:	call   0x1003f7f
 1003833:	mov    eax,DWORD PTR [ebp-0x14]
 1003836:	mov    ecx,eax
 1003838:	shr    ecx,0x10
 100383b:	and    ecx,0xf
 100383e:	shl    ecx,0x10
 1003841:	and    eax,ebx
 1003843:	or     ecx,eax
 1003845:	or     ecx,esi
 1003847:	lea    eax,[ebp-0x14]
 100384a:	mov    DWORD PTR [ebp-0x14],ecx
 100384d:	push   eax
 100384e:	lea    ecx,[ebp-0x28]
 1003851:	call   0x1003e77
 1003856:	lea    eax,[ebp-0x18]
 1003859:	push   eax
 100385a:	lea    ecx,[ebp-0x28]
 100385d:	call   0x1003f7f
 1003862:	mov    eax,DWORD PTR [ebp-0x18]
 1003865:	mov    ecx,eax
 1003867:	shr    ecx,0x10
 100386a:	and    ecx,0xf
 100386d:	shl    ecx,0x10
 1003870:	and    eax,ebx
 1003872:	or     ecx,eax
 1003874:	or     ecx,esi
 1003876:	lea    eax,[ebp-0x18]
 1003879:	mov    DWORD PTR [ebp-0x18],ecx
 100387c:	push   eax
 100387d:	lea    ecx,[ebp-0x28]
 1003880:	call   0x1003e77
 1003885:	lea    eax,[ebp-0x18]
 1003888:	push   eax
 1003889:	lea    ecx,[ebp-0x28]
 100388c:	mov    DWORD PTR [ebp-0x18],0x409
 1003893:	call   0x1003e77
 1003898:	mov    esi,DWORD PTR [ebp-0x28]
 100389b:	mov    edx,DWORD PTR [ebp-0x24]
 100389e:	cmp    esi,edx
 10038a0:	je     0x10038ed
 10038a2:	cmp    DWORD PTR [esi],0x0
 10038a5:	je     0x10038bf
 10038a7:	lea    eax,[esi+0x4]
 10038aa:	jmp    0x10038bb
 10038ac:	mov    ecx,DWORD PTR [esi]
 10038ae:	cmp    ecx,DWORD PTR [eax]
 10038b0:	jne    0x10038b8
 10038b2:	and    DWORD PTR [eax],0x0
 10038b5:	mov    edx,DWORD PTR [ebp-0x24]
 10038b8:	add    eax,0x4
 10038bb:	cmp    eax,edx
 10038bd:	jne    0x10038ac
 10038bf:	add    esi,0x4
 10038c2:	cmp    esi,edx
 10038c4:	jne    0x10038a2
 10038c6:	mov    esi,DWORD PTR [ebp-0x28]
 10038c9:	jmp    0x10038e9
 10038cb:	cmp    DWORD PTR [esi],0x0
 10038ce:	je     0x10038e6
 10038d0:	push   DWORD PTR [esi]
 10038d2:	mov    ecx,edi
 10038d4:	push   DWORD PTR [ebp+0xc]
 10038d7:	push   DWORD PTR [ebp+0x8]
 10038da:	call   0x1003ad7
 10038df:	test   al,al
 10038e1:	jne    0x1003915
 10038e3:	mov    edx,DWORD PTR [ebp-0x24]
 10038e6:	add    esi,0x4
 10038e9:	cmp    esi,edx
 10038eb:	jne    0x10038cb
 10038ed:	push   DWORD PTR [ebp+0x10]
 10038f0:	mov    ecx,edi
 10038f2:	push   DWORD PTR [ebp+0xc]
 10038f5:	push   DWORD PTR [ebp+0x8]
 10038f8:	call   0x1003925
 10038fd:	mov    bl,al
 10038ff:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003903:	lea    ecx,[ebp-0x28]
 1003906:	call   0x1004064
 100390b:	mov    al,bl
 100390d:	call   0x1004c77
 1003912:	ret    0xc
 1003915:	mov    ecx,DWORD PTR [esi]
 1003917:	mov    eax,DWORD PTR [ebp+0x10]
 100391a:	mov    DWORD PTR [eax],ecx
 100391c:	mov    bl,0x1
 100391e:	jmp    0x10038ff
 1003920:	int3   
 1003921:	int3   
 1003922:	int3   
 1003923:	int3   
 1003924:	int3   
 1003925:	push   0x278
 100392a:	mov    eax,0x10073c3
 100392f:	call   0x1004c39
 1003934:	mov    DWORD PTR [ebp-0x280],ecx
 100393a:	mov    eax,DWORD PTR [ebp+0x8]
 100393d:	mov    DWORD PTR [ebp-0x284],eax
 1003943:	mov    ecx,DWORD PTR [ebp+0xc]
 1003946:	mov    DWORD PTR [ebp-0x278],ecx
 100394c:	mov    ecx,DWORD PTR [ebp+0x10]
 100394f:	mov    DWORD PTR [ebp-0x27c],ecx
 1003955:	xor    bl,bl
 1003957:	and    DWORD PTR [ebp-0x270],0x0
 100395e:	and    DWORD PTR [ebp-0x4],0x0
 1003962:	push   0x10019dc
 1003967:	push   eax
 1003968:	lea    eax,[ebp-0x274]
 100396e:	push   eax
 100396f:	call   0x1003445
 1003974:	add    esp,0xc
 1003977:	mov    BYTE PTR [ebp-0x4],0x1
 100397b:	lea    eax,[ebp-0x264]
 1003981:	push   eax
 1003982:	push   DWORD PTR [ebp-0x274]
 1003988:	call   DWORD PTR ds:0x10010a8
 100398e:	mov    edi,eax
 1003990:	mov    DWORD PTR [ebp-0x270],edi
 1003996:	cmp    edi,0xffffffff
 1003999:	je     0x1003a80
 100399f:	test   BYTE PTR [ebp-0x264],0x10
 10039a6:	je     0x1003a5c
 10039ac:	lea    eax,[ebp-0x238]
 10039b2:	push   eax
 10039b3:	lea    ecx,[ebp-0x26c]
 10039b9:	call   0x1002b0e
 10039be:	mov    BYTE PTR [ebp-0x4],0x2
 10039c2:	push   0x10019e8
 10039c7:	lea    ecx,[ebp-0x26c]
 10039cd:	call   0x1002bdb
 10039d2:	test   eax,eax
 10039d4:	je     0x1003a46
 10039d6:	push   0x10019ec
 10039db:	lea    ecx,[ebp-0x26c]
 10039e1:	call   0x1002bdb
 10039e6:	test   eax,eax
 10039e8:	je     0x1003a46
 10039ea:	push   DWORD PTR [ebp-0x26c]
 10039f0:	call   DWORD PTR ds:0x100119c
 10039f6:	pop    ecx
 10039f7:	mov    esi,eax
 10039f9:	test   esi,esi
 10039fb:	je     0x1003a40
 10039fd:	push   esi
 10039fe:	push   DWORD PTR [ebp-0x278]
 1003a04:	push   DWORD PTR [ebp-0x284]
 1003a0a:	mov    ecx,DWORD PTR [ebp-0x280]
 1003a10:	call   0x1003ad7
 1003a15:	test   al,al
 1003a17:	je     0x1003a40
 1003a19:	mov    eax,DWORD PTR [ebp-0x27c]
 1003a1f:	mov    DWORD PTR [eax],esi
 1003a21:	mov    bl,0x1
 1003a23:	mov    BYTE PTR [ebp-0x265],bl
 1003a29:	mov    BYTE PTR [ebp-0x4],0x4
 1003a2d:	mov    BYTE PTR [ebp-0x4],bl
 1003a30:	mov    ecx,DWORD PTR [ebp-0x26c]
 1003a36:	lea    ecx,[ecx-0x10]
 1003a39:	call   0x1002707
 1003a3e:	jmp    0x1003a72
 1003a40:	mov    BYTE PTR [ebp-0x4],0x5
 1003a44:	jmp    0x1003a4a
 1003a46:	mov    BYTE PTR [ebp-0x4],0x3
 1003a4a:	mov    BYTE PTR [ebp-0x4],0x1
 1003a4e:	mov    ecx,DWORD PTR [ebp-0x26c]
 1003a54:	lea    ecx,[ecx-0x10]
 1003a57:	call   0x1002707
 1003a5c:	lea    eax,[ebp-0x264]
 1003a62:	push   eax
 1003a63:	push   edi
 1003a64:	call   DWORD PTR ds:0x10010a4
 1003a6a:	test   eax,eax
 1003a6c:	jne    0x100399f
 1003a72:	push   edi
 1003a73:	call   DWORD PTR ds:0x10010b0
 1003a79:	and    DWORD PTR [ebp-0x270],0x0
 1003a80:	mov    BYTE PTR [ebp-0x4],0x6
 1003a84:	mov    BYTE PTR [ebp-0x4],0x0
 1003a88:	mov    ecx,DWORD PTR [ebp-0x274]
 1003a8e:	lea    ecx,[ecx-0x10]
 1003a91:	call   0x1002707
 1003a96:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003a9a:	jmp    0x1003ac8
 1003a9c:	mov    BYTE PTR [ebp-0x265],0x0
 1003aa3:	cmp    DWORD PTR [ebp-0x270],0x0
 1003aaa:	je     0x1003ab8
 1003aac:	push   DWORD PTR [ebp-0x270]
 1003ab2:	call   DWORD PTR ds:0x10010b0
 1003ab8:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003abc:	mov    eax,0x1003ac2
 1003ac1:	ret    
 1003ac2:	mov    bl,BYTE PTR [ebp-0x265]
 1003ac8:	mov    al,bl
 1003aca:	call   0x1004ca4
 1003acf:	ret    0xc
 1003ad2:	int3   
 1003ad3:	int3   
 1003ad4:	int3   
 1003ad5:	int3   
 1003ad6:	int3   
 1003ad7:	push   0xc
 1003ad9:	mov    eax,0x1007408
 1003ade:	call   0x1004bc3
 1003ae3:	xor    bl,bl
 1003ae5:	and    DWORD PTR [ebp-0x4],0x0
 1003ae9:	push   0x10090a8
 1003aee:	lea    ecx,[ebp-0x18]
 1003af1:	call   0x10027a3
 1003af6:	mov    BYTE PTR [ebp-0x4],0x1
 1003afa:	mov    BYTE PTR [ebp-0x4],0x2
 1003afe:	mov    eax,DWORD PTR [ebp+0xc]
 1003b01:	push   DWORD PTR [eax]
 1003b03:	push   DWORD PTR [ebp+0x10]
 1003b06:	mov    eax,DWORD PTR [ebp+0x8]
 1003b09:	push   DWORD PTR [eax]
 1003b0b:	push   0x10019c8
 1003b10:	lea    eax,[ebp-0x18]
 1003b13:	push   eax
 1003b14:	call   0x10033c7
 1003b19:	add    esp,0x14
 1003b1c:	mov    esi,DWORD PTR [ebp-0x18]
 1003b1f:	push   esi
 1003b20:	call   DWORD PTR ds:0x10010b4
 1003b26:	cmp    eax,0xffffffff
 1003b29:	je     0x1003b30
 1003b2b:	inc    bl
 1003b2d:	mov    BYTE PTR [ebp-0x11],bl
 1003b30:	mov    BYTE PTR [ebp-0x4],0x3
 1003b34:	mov    BYTE PTR [ebp-0x4],0x0
 1003b38:	lea    ecx,[esi-0x10]
 1003b3b:	call   0x1002707
 1003b40:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003b44:	jmp    0x1003b57
 1003b46:	mov    BYTE PTR [ebp-0x11],0x0
 1003b4a:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003b4e:	mov    eax,0x1003b54
 1003b53:	ret    
 1003b54:	mov    bl,BYTE PTR [ebp-0x11]
 1003b57:	mov    al,bl
 1003b59:	call   0x1004c77
 1003b5e:	ret    0xc
 1003b61:	int3   
 1003b62:	int3   
 1003b63:	int3   
 1003b64:	int3   
 1003b65:	int3   
 1003b66:	push   0x1c
 1003b68:	mov    eax,0x1007458
 1003b6d:	call   0x1004bc3
 1003b72:	mov    esi,ecx
 1003b74:	xor    ebx,ebx
 1003b76:	mov    DWORD PTR [ebp-0x14],ebx
 1003b79:	mov    DWORD PTR [ebp-0x4],ebx
 1003b7c:	push   0x10090a8
 1003b81:	lea    ecx,[ebp-0x18]
 1003b84:	call   0x10027a3
 1003b89:	mov    BYTE PTR [ebp-0x4],0x1
 1003b8d:	mov    BYTE PTR [ebp-0x4],0x2
 1003b91:	push   0x10019f4
 1003b96:	lea    eax,[esi+0x8]
 1003b99:	push   eax
 1003b9a:	lea    eax,[ebp-0x1c]
 1003b9d:	push   eax
 1003b9e:	call   0x1003445
 1003ba3:	add    esp,0xc
 1003ba6:	mov    BYTE PTR [ebp-0x4],0x3
 1003baa:	push   eax
 1003bab:	lea    ecx,[ebp-0x18]
 1003bae:	call   0x1003322
 1003bb3:	mov    BYTE PTR [ebp-0x4],0x4
 1003bb7:	mov    BYTE PTR [ebp-0x4],0x2
 1003bbb:	mov    ecx,DWORD PTR [ebp-0x1c]
 1003bbe:	lea    ecx,[ecx-0x10]
 1003bc1:	call   0x1002707
 1003bc6:	mov    DWORD PTR [ebp-0x28],ebx
 1003bc9:	mov    DWORD PTR [ebp-0x24],ebx
 1003bcc:	mov    DWORD PTR [ebp-0x20],ebx
 1003bcf:	mov    BYTE PTR [ebp-0x4],0x5
 1003bd3:	push   0x20019
 1003bd8:	mov    esi,DWORD PTR [ebp-0x18]
 1003bdb:	push   esi
 1003bdc:	push   0x80000001
 1003be1:	lea    ecx,[ebp-0x28]
 1003be4:	call   0x10032ab
 1003be9:	test   eax,eax
 1003beb:	jne    0x1003c13
 1003bed:	lea    eax,[ebp-0x14]
 1003bf0:	push   eax
 1003bf1:	push   0x1001a08
 1003bf6:	lea    ecx,[ebp-0x28]
 1003bf9:	call   0x10031f4
 1003bfe:	test   eax,eax
 1003c00:	jne    0x1003c08
 1003c02:	cmp    DWORD PTR [ebp-0x14],0xffffffff
 1003c06:	jne    0x1003c0b
 1003c08:	mov    DWORD PTR [ebp-0x14],ebx
 1003c0b:	lea    ecx,[ebp-0x28]
 1003c0e:	call   0x10032fb
 1003c13:	mov    BYTE PTR [ebp-0x4],0x2
 1003c17:	lea    ecx,[ebp-0x28]
 1003c1a:	call   0x10032fb
 1003c1f:	mov    BYTE PTR [ebp-0x4],0x6
 1003c23:	mov    BYTE PTR [ebp-0x4],bl
 1003c26:	lea    ecx,[esi-0x10]
 1003c29:	call   0x1002707
 1003c2e:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003c32:	mov    eax,DWORD PTR [ebp-0x14]
 1003c35:	call   0x1004c77
 1003c3a:	ret    
 1003c3b:	and    DWORD PTR [ebp-0x14],0x0
 1003c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003c43:	mov    eax,0x1003c32
 1003c48:	ret    
 1003c49:	int3   
 1003c4a:	int3   
 1003c4b:	int3   
 1003c4c:	int3   
 1003c4d:	int3   
 1003c4e:	mov    edi,edi
 1003c50:	push   ebp
 1003c51:	mov    ebp,esp
 1003c53:	push   0xffffffff
 1003c55:	push   0x10074a4
 1003c5a:	mov    eax,fs:0x0
 1003c60:	push   eax
 1003c61:	push   ecx
 1003c62:	mov    eax,0x1024
 1003c67:	call   0x1004d40
 1003c6c:	mov    eax,ds:0x100907c
 1003c71:	xor    eax,ebp
 1003c73:	mov    DWORD PTR [ebp-0x14],eax
 1003c76:	push   ebx
 1003c77:	push   esi
 1003c78:	push   edi
 1003c79:	push   eax
 1003c7a:	lea    eax,[ebp-0xc]
 1003c7d:	mov    fs:0x0,eax
 1003c83:	mov    DWORD PTR [ebp-0x10],esp
 1003c86:	mov    esi,ecx
 1003c88:	mov    edi,DWORD PTR [ebp+0x8]
 1003c8b:	mov    eax,DWORD PTR [ebp+0xc]
 1003c8e:	mov    DWORD PTR [ebp-0x1030],eax
 1003c94:	xor    bl,bl
 1003c96:	and    DWORD PTR [ebp-0x4],0x0
 1003c9a:	push   0x10090a8
 1003c9f:	lea    ecx,[ebp-0x101c]
 1003ca5:	call   0x10027a3
 1003caa:	mov    BYTE PTR [ebp-0x4],0x1
 1003cae:	mov    BYTE PTR [ebp-0x4],0x2
 1003cb2:	push   DWORD PTR [esi+0xc]
 1003cb5:	push   DWORD PTR [esi+0x8]
 1003cb8:	push   0x1001a20
 1003cbd:	lea    eax,[ebp-0x101c]
 1003cc3:	push   eax
 1003cc4:	call   0x10033c7
 1003cc9:	add    esp,0x10
 1003ccc:	xor    eax,eax
 1003cce:	mov    DWORD PTR [ebp-0x1028],eax
 1003cd4:	mov    DWORD PTR [ebp-0x1024],eax
 1003cda:	mov    DWORD PTR [ebp-0x1020],eax
 1003ce0:	mov    BYTE PTR [ebp-0x4],0x3
 1003ce4:	push   0x20019
 1003ce9:	mov    esi,DWORD PTR [ebp-0x101c]
 1003cef:	push   esi
 1003cf0:	push   0x80000001
 1003cf5:	lea    ecx,[ebp-0x1028]
 1003cfb:	call   0x10032ab
 1003d00:	test   eax,eax
 1003d02:	jne    0x1003dc0
 1003d08:	mov    WORD PTR [ebp-0x814],ax
 1003d0f:	push   0x7fe
 1003d14:	push   eax
 1003d15:	lea    eax,[ebp-0x812]
 1003d1b:	push   eax
 1003d1c:	call   0x1004cc4
 1003d21:	add    esp,0xc
 1003d24:	mov    DWORD PTR [ebp-0x1034],0x400
 1003d2e:	lea    eax,[ebp-0x1034]
 1003d34:	push   eax
 1003d35:	lea    eax,[ebp-0x814]
 1003d3b:	push   eax
 1003d3c:	push   0x1001a68
 1003d41:	lea    ecx,[ebp-0x1028]
 1003d47:	call   0x1003233
 1003d4c:	test   eax,eax
 1003d4e:	jne    0x1003dc0
 1003d50:	mov    WORD PTR [ebp-0x1014],ax
 1003d57:	push   0x7fe
 1003d5c:	push   eax
 1003d5d:	lea    eax,[ebp-0x1012]
 1003d63:	push   eax
 1003d64:	call   0x1004cc4
 1003d69:	add    esp,0xc
 1003d6c:	mov    DWORD PTR [ebp-0x102c],0x400
 1003d76:	lea    eax,[ebp-0x102c]
 1003d7c:	push   eax
 1003d7d:	lea    eax,[ebp-0x1014]
 1003d83:	push   eax
 1003d84:	push   0x1001a78
 1003d89:	lea    ecx,[ebp-0x1028]
 1003d8f:	call   0x1003233
 1003d94:	test   eax,eax
 1003d96:	jne    0x1003dc0
 1003d98:	lea    eax,[ebp-0x814]
 1003d9e:	push   eax
 1003d9f:	mov    ecx,DWORD PTR [ebp-0x1030]
 1003da5:	call   0x1002b8a
 1003daa:	lea    eax,[ebp-0x1014]
 1003db0:	push   eax
 1003db1:	mov    ecx,edi
 1003db3:	call   0x1002b8a
 1003db8:	inc    bl
 1003dba:	mov    BYTE PTR [ebp-0x1015],bl
 1003dc0:	mov    BYTE PTR [ebp-0x4],0x2
 1003dc4:	lea    ecx,[ebp-0x1028]
 1003dca:	call   0x10032fb
 1003dcf:	mov    BYTE PTR [ebp-0x4],0x4
 1003dd3:	mov    BYTE PTR [ebp-0x4],0x0
 1003dd7:	lea    ecx,[esi-0x10]
 1003dda:	call   0x1002707
 1003ddf:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003de3:	jmp    0x1003dfc
 1003de5:	mov    BYTE PTR [ebp-0x1015],0x0
 1003dec:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003df0:	mov    eax,0x1003df6
 1003df5:	ret    
 1003df6:	mov    bl,BYTE PTR [ebp-0x1015]
 1003dfc:	mov    al,bl
 1003dfe:	mov    ecx,DWORD PTR [ebp-0xc]
 1003e01:	mov    DWORD PTR fs:0x0,ecx
 1003e08:	pop    ecx
 1003e09:	pop    edi
 1003e0a:	pop    esi
 1003e0b:	pop    ebx
 1003e0c:	mov    ecx,DWORD PTR [ebp-0x14]
 1003e0f:	xor    ecx,ebp
 1003e11:	call   0x1004b6b
 1003e16:	leave  
 1003e17:	ret    0x8
 1003e1a:	int3   
 1003e1b:	int3   
 1003e1c:	int3   
 1003e1d:	int3   
 1003e1e:	int3   
 1003e1f:	mov    edi,edi
 1003e21:	push   ebp
 1003e22:	mov    ebp,esp
 1003e24:	push   esi
 1003e25:	mov    esi,ecx
 1003e27:	call   0x10035b1
 1003e2c:	test   BYTE PTR [ebp+0x8],0x1
 1003e30:	je     0x1003e39
 1003e32:	push   esi
 1003e33:	call   0x1004b30
 1003e38:	pop    ecx
 1003e39:	mov    eax,esi
 1003e3b:	pop    esi
 1003e3c:	pop    ebp
 1003e3d:	ret    0x4
 1003e40:	int3   
 1003e41:	int3   
 1003e42:	int3   
 1003e43:	int3   
 1003e44:	int3   
 1003e45:	push   0x4
 1003e47:	mov    eax,0x10074df
 1003e4c:	call   0x1004b8b
 1003e51:	mov    ecx,DWORD PTR [ebp+0x8]
 1003e54:	mov    DWORD PTR [ebp-0x10],ecx
 1003e57:	and    DWORD PTR [ebp-0x4],0x0
 1003e5b:	test   ecx,ecx
 1003e5d:	je     0x1003e66
 1003e5f:	mov    eax,DWORD PTR [ebp+0xc]
 1003e62:	mov    eax,DWORD PTR [eax]
 1003e64:	mov    DWORD PTR [ecx],eax
 1003e66:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003e6a:	call   0x1004c77
 1003e6f:	ret    0x8
 1003e72:	int3   
 1003e73:	int3   
 1003e74:	int3   
 1003e75:	int3   
 1003e76:	int3   
 1003e77:	mov    edi,edi
 1003e79:	push   ebp
 1003e7a:	mov    ebp,esp
 1003e7c:	push   ebx
 1003e7d:	push   esi
 1003e7e:	mov    esi,ecx
 1003e80:	lea    ebx,[esi+0x4]
 1003e83:	mov    eax,DWORD PTR [ebx]
 1003e85:	push   edi
 1003e86:	mov    edi,DWORD PTR [ebp+0x8]
 1003e89:	cmp    edi,eax
 1003e8b:	jae    0x1003eaa
 1003e8d:	cmp    DWORD PTR [esi],edi
 1003e8f:	ja     0x1003eaa
 1003e91:	sub    edi,DWORD PTR [esi]
 1003e93:	sar    edi,0x2
 1003e96:	cmp    eax,DWORD PTR [esi+0x8]
 1003e99:	jne    0x1003ea2
 1003e9b:	push   0x1
 1003e9d:	call   0x1004016
 1003ea2:	mov    eax,DWORD PTR [esi]
 1003ea4:	lea    eax,[eax+edi*4]
 1003ea7:	push   eax
 1003ea8:	jmp    0x1003eb7
 1003eaa:	cmp    eax,DWORD PTR [esi+0x8]
 1003ead:	jne    0x1003eb6
 1003eaf:	push   0x1
 1003eb1:	call   0x1004016
 1003eb6:	push   edi
 1003eb7:	push   DWORD PTR [ebx]
 1003eb9:	lea    ecx,[esi+0xc]
 1003ebc:	call   0x1003e45
 1003ec1:	add    DWORD PTR [ebx],0x4
 1003ec4:	pop    edi
 1003ec5:	pop    esi
 1003ec6:	pop    ebx
 1003ec7:	pop    ebp
 1003ec8:	ret    0x4
 1003ecb:	int3   
 1003ecc:	int3   
 1003ecd:	int3   
 1003ece:	int3   
 1003ecf:	int3   
 1003ed0:	jmp    0x1004064
 1003ed5:	int3   
 1003ed6:	int3   
 1003ed7:	int3   
 1003ed8:	int3   
 1003ed9:	int3   
 1003eda:	push   0x4
 1003edc:	mov    eax,0x10074ff
 1003ee1:	call   0x1004bc3
 1003ee6:	mov    esi,ecx
 1003ee8:	mov    edi,DWORD PTR [ebp+0x8]
 1003eeb:	cmp    edi,0x3fffffff
 1003ef1:	jbe    0x1003efe
 1003ef3:	push   0x1001a84
 1003ef8:	call   DWORD PTR ds:0x1001108
 1003efe:	mov    eax,DWORD PTR [esi+0x8]
 1003f01:	sub    eax,DWORD PTR [esi]
 1003f03:	sar    eax,0x2
 1003f06:	cmp    eax,edi
 1003f08:	jae    0x1003f5f
 1003f0a:	push   0x0
 1003f0c:	push   edi
 1003f0d:	call   0x10040b1
 1003f12:	pop    ecx
 1003f13:	pop    ecx
 1003f14:	mov    ebx,eax
 1003f16:	mov    DWORD PTR [ebp+0x8],ebx
 1003f19:	and    DWORD PTR [ebp-0x4],0x0
 1003f1d:	push   ebx
 1003f1e:	push   DWORD PTR [esi+0x4]
 1003f21:	push   DWORD PTR [esi]
 1003f23:	mov    ecx,esi
 1003f25:	call   0x100408e
 1003f2a:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003f2e:	mov    eax,DWORD PTR [esi+0x4]
 1003f31:	sub    eax,DWORD PTR [esi]
 1003f33:	sar    eax,0x2
 1003f36:	mov    DWORD PTR [ebp+0x8],eax
 1003f39:	cmp    DWORD PTR [esi],0x0
 1003f3c:	je     0x1003f46
 1003f3e:	push   DWORD PTR [esi]
 1003f40:	call   0x1004b30
 1003f45:	pop    ecx
 1003f46:	mov    ecx,esi
 1003f48:	call   DWORD PTR ds:0x100110c
 1003f4e:	lea    eax,[ebx+edi*4]
 1003f51:	mov    DWORD PTR [esi+0x8],eax
 1003f54:	mov    eax,DWORD PTR [ebp+0x8]
 1003f57:	lea    eax,[ebx+eax*4]
 1003f5a:	mov    DWORD PTR [esi+0x4],eax
 1003f5d:	mov    DWORD PTR [esi],ebx
 1003f5f:	call   0x1004c77
 1003f64:	ret    0x4
 1003f67:	push   DWORD PTR [ebp+0x8]
 1003f6a:	call   0x1004b30
 1003f6f:	pop    ecx
 1003f70:	push   0x0
 1003f72:	push   0x0
 1003f74:	call   0x1004b80
 1003f79:	int3   
 1003f7a:	int3   
 1003f7b:	int3   
 1003f7c:	int3   
 1003f7d:	int3   
 1003f7e:	int3   
 1003f7f:	mov    edi,edi
 1003f81:	push   ebp
 1003f82:	mov    ebp,esp
 1003f84:	push   ebx
 1003f85:	mov    ebx,DWORD PTR [ebp+0x8]
 1003f88:	push   esi
 1003f89:	mov    esi,ecx
 1003f8b:	push   edi
 1003f8c:	lea    edi,[esi+0x4]
 1003f8f:	mov    eax,DWORD PTR [edi]
 1003f91:	cmp    ebx,eax
 1003f93:	jae    0x1003fbc
 1003f95:	cmp    DWORD PTR [esi],ebx
 1003f97:	ja     0x1003fbc
 1003f99:	sub    ebx,DWORD PTR [esi]
 1003f9b:	sar    ebx,0x2
 1003f9e:	cmp    eax,DWORD PTR [esi+0x8]
 1003fa1:	jne    0x1003faa
 1003fa3:	push   0x1
 1003fa5:	call   0x1004016
 1003faa:	mov    eax,DWORD PTR [esi]
 1003fac:	lea    eax,[eax+ebx*4]
 1003faf:	push   eax
 1003fb0:	push   DWORD PTR [edi]
 1003fb2:	lea    ecx,[esi+0xc]
 1003fb5:	call   0x1004118
 1003fba:	jmp    0x1003fd2
 1003fbc:	cmp    eax,DWORD PTR [esi+0x8]
 1003fbf:	jne    0x1003fc8
 1003fc1:	push   0x1
 1003fc3:	call   0x1004016
 1003fc8:	push   ebx
 1003fc9:	push   DWORD PTR [edi]
 1003fcb:	call   0x1004176
 1003fd0:	pop    ecx
 1003fd1:	pop    ecx
 1003fd2:	add    DWORD PTR [edi],0x4
 1003fd5:	pop    edi
 1003fd6:	pop    esi
 1003fd7:	pop    ebx
 1003fd8:	pop    ebp
 1003fd9:	ret    0x4
 1003fdc:	int3   
 1003fdd:	int3   
 1003fde:	int3   
 1003fdf:	int3   
 1003fe0:	int3   
 1003fe1:	mov    edi,edi
 1003fe3:	push   ebp
 1003fe4:	mov    ebp,esp
 1003fe6:	mov    edx,DWORD PTR [ecx+0x8]
 1003fe9:	sub    edx,DWORD PTR [ecx]
 1003feb:	mov    eax,0x3fffffff
 1003ff0:	sar    edx,0x2
 1003ff3:	mov    ecx,edx
 1003ff5:	shr    ecx,1
 1003ff7:	sub    eax,ecx
 1003ff9:	cmp    eax,edx
 1003ffb:	jae    0x1004001
 1003ffd:	xor    edx,edx
 1003fff:	jmp    0x1004003
 1004001:	add    edx,ecx
 1004003:	cmp    edx,DWORD PTR [ebp+0x8]
 1004006:	jae    0x100400b
 1004008:	mov    edx,DWORD PTR [ebp+0x8]
 100400b:	mov    eax,edx
 100400d:	pop    ebp
 100400e:	ret    0x4
 1004011:	int3   
 1004012:	int3   
 1004013:	int3   
 1004014:	int3   
 1004015:	int3   
 1004016:	mov    edi,edi
 1004018:	push   ebp
 1004019:	mov    ebp,esp
 100401b:	push   esi
 100401c:	mov    esi,ecx
 100401e:	mov    edx,DWORD PTR [esi+0x4]
 1004021:	sub    edx,DWORD PTR [esi]
 1004023:	mov    eax,0x3fffffff
 1004028:	sub    eax,DWORD PTR [ebp+0x8]
 100402b:	sar    edx,0x2
 100402e:	cmp    eax,edx
 1004030:	jae    0x100403d
 1004032:	push   0x1001a84
 1004037:	call   DWORD PTR ds:0x1001108
 100403d:	mov    eax,DWORD PTR [esi+0x8]
 1004040:	sub    eax,DWORD PTR [esi]
 1004042:	add    edx,DWORD PTR [ebp+0x8]
 1004045:	sar    eax,0x2
 1004048:	cmp    edx,eax
 100404a:	jbe    0x100405a
 100404c:	push   edx
 100404d:	call   0x1003fe1
 1004052:	push   eax
 1004053:	mov    ecx,esi
 1004055:	call   0x1003eda
 100405a:	pop    esi
 100405b:	pop    ebp
 100405c:	ret    0x4
 100405f:	int3   
 1004060:	int3   
 1004061:	int3   
 1004062:	int3   
 1004063:	int3   
 1004064:	mov    edi,edi
 1004066:	push   esi
 1004067:	push   edi
 1004068:	mov    esi,ecx
 100406a:	xor    edi,edi
 100406c:	cmp    DWORD PTR [esi],edi
 100406e:	je     0x100407e
 1004070:	call   DWORD PTR ds:0x100110c
 1004076:	push   DWORD PTR [esi]
 1004078:	call   0x1004b30
 100407d:	pop    ecx
 100407e:	mov    DWORD PTR [esi],edi
 1004080:	mov    DWORD PTR [esi+0x4],edi
 1004083:	mov    DWORD PTR [esi+0x8],edi
 1004086:	pop    edi
 1004087:	pop    esi
 1004088:	ret    
 1004089:	int3   
 100408a:	int3   
 100408b:	int3   
 100408c:	int3   
 100408d:	int3   
 100408e:	mov    edi,edi
 1004090:	push   ebp
 1004091:	mov    ebp,esp
 1004093:	lea    eax,[ecx+0xc]
 1004096:	push   eax
 1004097:	push   DWORD PTR [ebp+0x10]
 100409a:	push   DWORD PTR [ebp+0xc]
 100409d:	push   DWORD PTR [ebp+0x8]
 10040a0:	call   0x100414a
 10040a5:	add    esp,0x10
 10040a8:	pop    ebp
 10040a9:	ret    0xc
 10040ac:	int3   
 10040ad:	int3   
 10040ae:	int3   
 10040af:	int3   
 10040b0:	int3   
 10040b1:	push   0xc
 10040b3:	mov    eax,0x1007528
 10040b8:	call   0x1004b8b
 10040bd:	mov    eax,DWORD PTR [ebp+0x8]
 10040c0:	xor    ecx,ecx
 10040c2:	test   eax,eax
 10040c4:	je     0x100410b
 10040c6:	cmp    eax,0x3fffffff
 10040cb:	ja     0x10040dd
 10040cd:	shl    eax,0x2
 10040d0:	push   eax
 10040d1:	call   0x1004b3c
 10040d6:	pop    ecx
 10040d7:	mov    ecx,eax
 10040d9:	test   ecx,ecx
 10040db:	jne    0x100410b
 10040dd:	and    DWORD PTR [ebp+0x8],0x0
 10040e1:	lea    eax,[ebp+0x8]
 10040e4:	push   eax
 10040e5:	lea    ecx,[ebp-0x18]
 10040e8:	call   DWORD PTR ds:0x1001190
 10040ee:	and    DWORD PTR [ebp-0x4],0x0
 10040f2:	mov    DWORD PTR [ebp-0x18],0x10019bc
 10040f9:	or     DWORD PTR [ebp-0x4],0xffffffff
 10040fd:	push   0x1007d5c
 1004102:	lea    eax,[ebp-0x18]
 1004105:	push   eax
 1004106:	call   0x1004b80
 100410b:	mov    eax,ecx
 100410d:	call   0x1004c77
 1004112:	ret    
 1004113:	int3   
 1004114:	int3   
 1004115:	int3   
 1004116:	int3   
 1004117:	int3   
 1004118:	push   0x4
 100411a:	mov    eax,0x1007556
 100411f:	call   0x1004b8b
 1004124:	mov    ecx,DWORD PTR [ebp+0x8]
 1004127:	mov    DWORD PTR [ebp-0x10],ecx
 100412a:	and    DWORD PTR [ebp-0x4],0x0
 100412e:	test   ecx,ecx
 1004130:	je     0x1004139
 1004132:	mov    eax,DWORD PTR [ebp+0xc]
 1004135:	mov    eax,DWORD PTR [eax]
 1004137:	mov    DWORD PTR [ecx],eax
 1004139:	or     DWORD PTR [ebp-0x4],0xffffffff
 100413d:	call   0x1004c77
 1004142:	ret    0x8
 1004145:	int3   
 1004146:	int3   
 1004147:	int3   
 1004148:	int3   
 1004149:	int3   
 100414a:	mov    edi,edi
 100414c:	push   ebp
 100414d:	mov    ebp,esp
 100414f:	push   esi
 1004150:	mov    esi,DWORD PTR [ebp+0xc]
 1004153:	sub    esi,DWORD PTR [ebp+0x8]
 1004156:	sar    esi,0x2
 1004159:	shl    esi,0x2
 100415c:	push   esi
 100415d:	push   DWORD PTR [ebp+0x8]
 1004160:	push   DWORD PTR [ebp+0x10]
 1004163:	call   DWORD PTR ds:0x10011a0
 1004169:	add    esp,0xc
 100416c:	add    eax,esi
 100416e:	pop    esi
 100416f:	pop    ebp
 1004170:	ret    
 1004171:	int3   
 1004172:	int3   
 1004173:	int3   
 1004174:	int3   
 1004175:	int3   
 1004176:	push   0x4
 1004178:	mov    eax,0x1007584
 100417d:	call   0x1004b8b
 1004182:	mov    ecx,DWORD PTR [ebp+0x8]
 1004185:	mov    DWORD PTR [ebp+0x8],ecx
 1004188:	mov    DWORD PTR [ebp-0x10],ecx
 100418b:	and    DWORD PTR [ebp-0x4],0x0
 100418f:	test   ecx,ecx
 1004191:	je     0x100419a
 1004193:	mov    eax,DWORD PTR [ebp+0xc]
 1004196:	mov    eax,DWORD PTR [eax]
 1004198:	mov    DWORD PTR [ecx],eax
 100419a:	or     DWORD PTR [ebp-0x4],0xffffffff
 100419e:	call   0x1004c77
 10041a3:	ret    
 10041a4:	int3   
 10041a5:	int3   
 10041a6:	int3   
 10041a7:	int3   
 10041a8:	int3   
 10041a9:	mov    edi,edi
 10041ab:	push   ebp
 10041ac:	mov    ebp,esp
 10041ae:	push   ebx
 10041af:	push   esi
 10041b0:	xor    esi,esi
 10041b2:	push   edi
 10041b3:	mov    edi,DWORD PTR [ebp+0x8]
 10041b6:	mov    ebx,edx
 10041b8:	mov    edx,esi
 10041ba:	test   eax,eax
 10041bc:	je     0x10041e5
 10041be:	mov    esi,DWORD PTR [ebp+0xc]
 10041c1:	sub    esi,ecx
 10041c3:	test   ebx,ebx
 10041c5:	je     0x10041db
 10041c7:	movzx  edi,WORD PTR [esi+ecx*1]
 10041cb:	test   di,di
 10041ce:	je     0x10041db
 10041d0:	mov    WORD PTR [ecx],di
 10041d3:	add    ecx,0x2
 10041d6:	dec    ebx
 10041d7:	inc    edx
 10041d8:	dec    eax
 10041d9:	jne    0x10041c3
 10041db:	mov    edi,DWORD PTR [ebp+0x8]
 10041de:	push   0x0
 10041e0:	pop    esi
 10041e1:	test   eax,eax
 10041e3:	jne    0x10041ee
 10041e5:	sub    ecx,0x2
 10041e8:	dec    edx
 10041e9:	mov    esi,0x8007007a
 10041ee:	xor    eax,eax
 10041f0:	mov    WORD PTR [ecx],ax
 10041f3:	test   edi,edi
 10041f5:	je     0x10041f9
 10041f7:	mov    DWORD PTR [edi],edx
 10041f9:	pop    edi
 10041fa:	mov    eax,esi
 10041fc:	pop    esi
 10041fd:	pop    ebx
 10041fe:	pop    ebp
 10041ff:	ret    0x8
 1004202:	int3   
 1004203:	int3   
 1004204:	int3   
 1004205:	int3   
 1004206:	int3   
 1004207:	mov    edi,edi
 1004209:	push   ebp
 100420a:	mov    ebp,esp
 100420c:	mov    ecx,DWORD PTR [ebp+0xc]
 100420f:	xor    eax,eax
 1004211:	test   ecx,ecx
 1004213:	je     0x100421d
 1004215:	cmp    ecx,0x7fffffff
 100421b:	jbe    0x1004222
 100421d:	mov    eax,0x80070057
 1004222:	test   eax,eax
 1004224:	js     0x100423a
 1004226:	push   DWORD PTR [ebp+0x10]
 1004229:	mov    eax,ecx
 100422b:	mov    ecx,DWORD PTR [ebp+0x8]
 100422e:	push   0x0
 1004230:	mov    edx,0x7ffffffe
 1004235:	call   0x10041a9
 100423a:	pop    ebp
 100423b:	ret    0xc
 100423e:	int3   
 100423f:	int3   
 1004240:	int3   
 1004241:	int3   
 1004242:	int3   
 1004243:	mov    edi,edi
 1004245:	push   ebp
 1004246:	mov    ebp,esp
 1004248:	push   esi
 1004249:	mov    esi,DWORD PTR [ebp+0x8]
 100424c:	test   esi,esi
 100424e:	jne    0x1004257
 1004250:	mov    eax,0x80004003
 1004255:	jmp    0x10042d6
 1004257:	push   ebx
 1004258:	push   edi
 1004259:	mov    edi,0xf0
 100425e:	push   edi
 100425f:	xor    ebx,ebx
 1004261:	push   ebx
 1004262:	push   esi
 1004263:	call   0x1004cc4
 1004268:	mov    DWORD PTR [esi],edi
 100426a:	mov    edi,DWORD PTR [ebp+0xc]
 100426d:	mov    ecx,edi
 100426f:	add    esp,0xc
 1004272:	mov    DWORD PTR [esi+0x8],edi
 1004275:	lea    edx,[ecx+0x2]
 1004278:	mov    ax,WORD PTR [ecx]
 100427b:	add    ecx,0x2
 100427e:	cmp    ax,bx
 1004281:	jne    0x1004278
 1004283:	sub    ecx,edx
 1004285:	sar    ecx,1
 1004287:	lea    ebx,[ecx+0x1]
 100428a:	lea    eax,[ebx+ebx*1]
 100428d:	push   eax
 100428e:	call   DWORD PTR ds:0x1001174
 1004294:	pop    ecx
 1004295:	mov    DWORD PTR [esi+0x20],eax
 1004298:	test   eax,eax
 100429a:	jne    0x10042a3
 100429c:	mov    eax,0x8007000e
 10042a1:	jmp    0x10042d4
 10042a3:	push   edi
 10042a4:	push   ebx
 10042a5:	push   eax
 10042a6:	call   0x1004207
 10042ab:	mov    edi,eax
 10042ad:	cmp    edi,0x8007007a
 10042b3:	jne    0x10042ba
 10042b5:	xor    edi,edi
 10042b7:	inc    edi
 10042b8:	jmp    0x10042cc
 10042ba:	test   edi,edi
 10042bc:	jns    0x10042cc
 10042be:	push   DWORD PTR [esi+0x20]
 10042c1:	call   DWORD PTR ds:0x1001178
 10042c7:	and    DWORD PTR [esi+0x20],0x0
 10042cb:	pop    ecx
 10042cc:	mov    eax,DWORD PTR [ebp+0x10]
 10042cf:	mov    DWORD PTR [esi+0xc],eax
 10042d2:	mov    eax,edi
 10042d4:	pop    edi
 10042d5:	pop    ebx
 10042d6:	pop    esi
 10042d7:	pop    ebp
 10042d8:	ret    
 10042d9:	int3   
 10042da:	int3   
 10042db:	int3   
 10042dc:	int3   
 10042dd:	int3   
 10042de:	mov    edi,edi
 10042e0:	push   ebp
 10042e1:	mov    ebp,esp
 10042e3:	sub    esp,0x18
 10042e6:	push   edi
 10042e7:	mov    edi,DWORD PTR [ebp+0xc]
 10042ea:	test   edi,edi
 10042ec:	jne    0x10042f5
 10042ee:	xor    eax,eax
 10042f0:	jmp    0x1004506
 10042f5:	push   ebx
 10042f6:	mov    ebx,DWORD PTR [ebp+0x10]
 10042f9:	test   ebx,ebx
 10042fb:	je     0x1004500
 1004301:	mov    edx,DWORD PTR [ebp+0x14]
 1004304:	test   edx,edx
 1004306:	je     0x1004500
 100430c:	mov    ecx,DWORD PTR [ebp+0x18]
 100430f:	test   ecx,ecx
 1004311:	je     0x1004500
 1004317:	push   esi
 1004318:	xor    esi,esi
 100431a:	cmp    DWORD PTR [ebx],esi
 100431c:	je     0x100433d
 100431e:	lea    eax,[ebx+0xc]
 1004321:	mov    edx,DWORD PTR [eax-0x8]
 1004324:	test   edx,edx
 1004326:	je     0x100432a
 1004328:	mov    DWORD PTR [edx],esi
 100432a:	mov    edx,DWORD PTR [eax]
 100432c:	test   edx,edx
 100432e:	je     0x1004332
 1004330:	mov    DWORD PTR [edx],esi
 1004332:	add    eax,0x10
 1004335:	cmp    DWORD PTR [eax-0xc],esi
 1004338:	jne    0x1004321
 100433a:	mov    edx,DWORD PTR [ebp+0x14]
 100433d:	mov    eax,DWORD PTR [ebp+0x1c]
 1004340:	mov    DWORD PTR [ecx],esi
 1004342:	test   eax,eax
 1004344:	je     0x1004348
 1004346:	mov    DWORD PTR [eax],esi
 1004348:	mov    eax,DWORD PTR [edx]
 100434a:	mov    DWORD PTR [ebp-0x14],edi
 100434d:	mov    DWORD PTR [ebp-0x8],esi
 1004350:	mov    DWORD PTR [ebp+0xc],esi
 1004353:	mov    DWORD PTR [ebp-0x4],esi
 1004356:	mov    edi,esi
 1004358:	mov    DWORD PTR [ebp-0xc],eax
 100435b:	push   esi
 100435c:	jmp    0x10044d5
 1004361:	mov    eax,DWORD PTR [ebp-0x8]
 1004364:	mov    DWORD PTR [ebp-0x10],esi
 1004367:	dec    eax
 1004368:	je     0x100441a
 100436e:	dec    eax
 100436f:	je     0x10043ec
 1004371:	dec    eax
 1004372:	je     0x1004393
 1004374:	dec    eax
 1004375:	jne    0x10044d2
 100437b:	mov    ecx,DWORD PTR [ebp-0x4]
 100437e:	test   ecx,ecx
 1004380:	je     0x100441a
 1004386:	mov    eax,DWORD PTR [ebp+0xc]
 1004389:	mov    DWORD PTR [ecx],eax
 100438b:	mov    DWORD PTR [ebp-0x4],esi
 100438e:	jmp    0x10044d2
 1004393:	mov    ecx,DWORD PTR [ebp-0x4]
 1004396:	test   ecx,ecx
 1004398:	jne    0x1004386
 100439a:	test   edi,edi
 100439c:	je     0x10043a2
 100439e:	cmp    DWORD PTR [edi],esi
 10043a0:	je     0x10043cc
 10043a2:	push   0x1c
 10043a4:	call   DWORD PTR ds:0x1001174
 10043aa:	mov    edi,eax
 10043ac:	pop    ecx
 10043ad:	test   edi,edi
 10043af:	je     0x10044f6
 10043b5:	or     DWORD PTR [edi+0xc],0xffffffff
 10043b9:	mov    DWORD PTR [edi+0x4],0x1
 10043c0:	mov    DWORD PTR [edi+0x8],esi
 10043c3:	mov    DWORD PTR [edi+0x10],esi
 10043c6:	mov    DWORD PTR [edi+0x14],esi
 10043c9:	mov    DWORD PTR [edi+0x18],esi
 10043cc:	mov    eax,DWORD PTR [ebp+0x14]
 10043cf:	cmp    DWORD PTR [eax],esi
 10043d1:	jne    0x10043d5
 10043d3:	mov    DWORD PTR [eax],edi
 10043d5:	mov    eax,DWORD PTR [ebp-0xc]
 10043d8:	test   eax,eax
 10043da:	je     0x10043df
 10043dc:	mov    DWORD PTR [eax+0x18],edi
 10043df:	mov    eax,DWORD PTR [ebp+0xc]
 10043e2:	mov    DWORD PTR [edi],eax
 10043e4:	mov    DWORD PTR [ebp-0xc],edi
 10043e7:	jmp    0x10044d2
 10043ec:	mov    eax,DWORD PTR [ebp+0x10]
 10043ef:	mov    DWORD PTR [ebp-0x4],esi
 10043f2:	cmp    DWORD PTR [eax],esi
 10043f4:	je     0x100440e
 10043f6:	push   DWORD PTR [ebx]
 10043f8:	push   DWORD PTR [ebp+0xc]
 10043fb:	call   DWORD PTR ds:0x100117c
 1004401:	pop    ecx
 1004402:	pop    ecx
 1004403:	test   eax,eax
 1004405:	je     0x1004427
 1004407:	add    ebx,0x10
 100440a:	cmp    DWORD PTR [ebx],esi
 100440c:	jne    0x10043f6
 100440e:	mov    ecx,DWORD PTR [ebp+0x1c]
 1004411:	test   ecx,ecx
 1004413:	je     0x100441a
 1004415:	mov    eax,DWORD PTR [ebp+0xc]
 1004418:	mov    DWORD PTR [ecx],eax
 100441a:	mov    esi,0x80070057
 100441f:	mov    eax,esi
 1004421:	pop    esi
 1004422:	jmp    0x1004505
 1004427:	push   0x1001750
 100442c:	push   DWORD PTR [ebx]
 100442e:	call   DWORD PTR ds:0x100117c
 1004434:	mov    eax,DWORD PTR [ebx+0x4]
 1004437:	pop    ecx
 1004438:	pop    ecx
 1004439:	test   eax,eax
 100443b:	je     0x1004443
 100443d:	mov    DWORD PTR [eax],0x1
 1004443:	mov    ecx,DWORD PTR [ebx+0x8]
 1004446:	mov    DWORD PTR [ebp-0x18],ecx
 1004449:	cmp    DWORD PTR [ebx+0xc],esi
 100444c:	je     0x1004462
 100444e:	mov    eax,DWORD PTR [ebx+0xc]
 1004451:	mov    DWORD PTR [ebp-0x4],eax
 1004454:	xor    eax,eax
 1004456:	cmp    ecx,0x8
 1004459:	sete   al
 100445c:	add    eax,0x3
 100445f:	mov    DWORD PTR [ebp-0x10],eax
 1004462:	test   ecx,ecx
 1004464:	je     0x10044cf
 1004466:	cmp    ecx,0x8
 1004469:	je     0x10044cf
 100446b:	test   edi,edi
 100446d:	je     0x1004484
 100446f:	lea    eax,[ecx-0x6]
 1004472:	cmp    eax,0x1
 1004475:	ja     0x100447d
 1004477:	cmp    DWORD PTR [edi+0xc],0xffffffff
 100447b:	jmp    0x1004480
 100447d:	cmp    DWORD PTR [edi+0x8],esi
 1004480:	jne    0x100441a
 1004482:	jmp    0x10044ab
 1004484:	push   0x1c
 1004486:	call   DWORD PTR ds:0x1001174
 100448c:	mov    edi,eax
 100448e:	pop    ecx
 100448f:	test   edi,edi
 1004491:	je     0x10044f6
 1004493:	or     DWORD PTR [edi+0xc],0xffffffff
 1004497:	mov    ecx,DWORD PTR [ebp-0x18]
 100449a:	mov    DWORD PTR [edi],esi
 100449c:	mov    DWORD PTR [edi+0x4],esi
 100449f:	mov    DWORD PTR [edi+0x8],esi
 10044a2:	mov    DWORD PTR [edi+0x10],esi
 10044a5:	mov    DWORD PTR [edi+0x14],esi
 10044a8:	mov    DWORD PTR [edi+0x18],esi
 10044ab:	mov    ebx,DWORD PTR [ebp+0x10]
 10044ae:	lea    eax,[ecx-0x6]
 10044b1:	cmp    eax,0x1
 10044b4:	ja     0x10044c3
 10044b6:	xor    eax,eax
 10044b8:	cmp    ecx,0x6
 10044bb:	sete   al
 10044be:	mov    DWORD PTR [edi+0xc],eax
 10044c1:	jmp    0x10044d2
 10044c3:	mov    DWORD PTR [edi+0x4],ecx
 10044c6:	mov    DWORD PTR [edi+0x8],0x1
 10044cd:	jmp    0x10044d2
 10044cf:	mov    ebx,DWORD PTR [ebp+0x10]
 10044d2:	push   DWORD PTR [ebp-0x10]
 10044d5:	lea    eax,[ebp-0x8]
 10044d8:	push   eax
 10044d9:	lea    eax,[ebp+0xc]
 10044dc:	push   eax
 10044dd:	lea    eax,[ebp-0x14]
 10044e0:	push   eax
 10044e1:	call   0x100466e
 10044e6:	add    esp,0x10
 10044e9:	test   eax,eax
 10044eb:	jne    0x1004361
 10044f1:	jmp    0x100441f
 10044f6:	mov    esi,0x8007000e
 10044fb:	jmp    0x100441f
 1004500:	mov    eax,0x80004003
 1004505:	pop    ebx
 1004506:	pop    edi
 1004507:	leave  
 1004508:	ret    
 1004509:	int3   
 100450a:	int3   
 100450b:	int3   
 100450c:	int3   
 100450d:	int3   
 100450e:	mov    edi,edi
 1004510:	push   ebp
 1004511:	mov    ebp,esp
 1004513:	mov    eax,DWORD PTR [ebp+0x8]
 1004516:	test   eax,eax
 1004518:	jne    0x1004521
 100451a:	mov    eax,0x80004003
 100451f:	pop    ebp
 1004520:	ret    
 1004521:	mov    ecx,DWORD PTR [eax+0x24]
 1004524:	xor    edx,edx
 1004526:	test   ecx,ecx
 1004528:	jne    0x1004545
 100452a:	cmp    DWORD PTR [eax+0x28],edx
 100452d:	jne    0x100453e
 100452f:	cmp    DWORD PTR [eax+0x38],edx
 1004532:	jne    0x100453e
 1004534:	cmp    DWORD PTR [eax+0x4c],edx
 1004537:	jne    0x100453e
 1004539:	cmp    DWORD PTR [eax+0x50],edx
 100453c:	je     0x100454c
 100453e:	mov    eax,0x80070057
 1004543:	pop    ebp
 1004544:	ret    
 1004545:	cmp    DWORD PTR [ecx],edx
 1004547:	je     0x100453e
 1004549:	mov    ecx,DWORD PTR [ecx+0x18]
 100454c:	test   ecx,ecx
 100454e:	jne    0x1004545
 1004550:	xor    eax,eax
 1004552:	pop    ebp
 1004553:	ret    
 1004554:	int3   
 1004555:	int3   
 1004556:	int3   
 1004557:	int3   
 1004558:	int3   
 1004559:	mov    edi,edi
 100455b:	push   ebp
 100455c:	mov    ebp,esp
 100455e:	sub    esp,0x118
 1004564:	mov    eax,ds:0x100907c
 1004569:	xor    eax,ebp
 100456b:	mov    DWORD PTR [ebp-0x4],eax
 100456e:	mov    eax,DWORD PTR [ebp+0x8]
 1004571:	push   ebx
 1004572:	push   esi
 1004573:	push   edi
 1004574:	push   0x7d0
 1004579:	mov    ebx,0x10090f0
 100457e:	push   ebx
 100457f:	push   0xffffffff
 1004581:	push   eax
 1004582:	xor    edi,edi
 1004584:	push   edi
 1004585:	push   edi
 1004586:	call   DWORD PTR ds:0x1001090
 100458c:	xor    eax,eax
 100458e:	mov    esi,0x114
 1004593:	push   esi
 1004594:	mov    ds:0x100a08e,ax
 100459a:	lea    eax,[ebp-0x118]
 10045a0:	push   edi
 10045a1:	push   eax
 10045a2:	call   0x1004cc4
 10045a7:	add    esp,0xc
 10045aa:	lea    eax,[ebp-0x118]
 10045b0:	push   eax
 10045b1:	mov    DWORD PTR [ebp-0x118],esi
 10045b7:	call   DWORD PTR ds:0x1001094
 10045bd:	cmp    DWORD PTR [ebp-0x108],0x2
 10045c4:	jne    0x1004658
 10045ca:	push   0x1001a98
 10045cf:	call   DWORD PTR ds:0x1001098
 10045d5:	test   eax,eax
 10045d7:	je     0x1004658
 10045d9:	push   0x1001aa8
 10045de:	push   eax
 10045df:	call   DWORD PTR ds:0x10010d8
 10045e5:	test   eax,eax
 10045e7:	je     0x1004658
 10045e9:	call   eax
 10045eb:	mov    edi,eax
 10045ed:	push   0x22
 10045ef:	pop    eax
 10045f0:	cmp    WORD PTR [edi],ax
 10045f3:	jne    0x100460d
 10045f5:	push   eax
 10045f6:	lea    eax,[edi+0x2]
 10045f9:	push   eax
 10045fa:	call   DWORD PTR ds:0x1001180
 1004600:	mov    esi,eax
 1004602:	pop    ecx
 1004603:	pop    ecx
 1004604:	test   esi,esi
 1004606:	je     0x1004621
 1004608:	add    esi,0x2
 100460b:	jmp    0x100461d
 100460d:	lea    eax,[edi+0x2]
 1004610:	push   0x20
 1004612:	push   eax
 1004613:	call   DWORD PTR ds:0x1001180
 1004619:	pop    ecx
 100461a:	pop    ecx
 100461b:	mov    esi,eax
 100461d:	test   esi,esi
 100461f:	jne    0x100463f
 1004621:	mov    ecx,edi
 1004623:	lea    edx,[ecx+0x2]
 1004626:	xor    esi,esi
 1004628:	mov    ax,WORD PTR [ecx]
 100462b:	add    ecx,0x2
 100462e:	cmp    ax,si
 1004631:	jne    0x1004628
 1004633:	sub    ecx,edx
 1004635:	sar    ecx,1
 1004637:	lea    esi,[edi+ecx*2]
 100463a:	jmp    0x100463f
 100463c:	add    esi,0x2
 100463f:	movzx  eax,WORD PTR [esi]
 1004642:	push   eax
 1004643:	call   0x10047a8
 1004648:	test   eax,eax
 100464a:	jne    0x100463c
 100464c:	push   esi
 100464d:	push   0x7d0
 1004652:	push   ebx
 1004653:	call   0x1004207
 1004658:	mov    ecx,DWORD PTR [ebp-0x4]
 100465b:	pop    edi
 100465c:	pop    esi
 100465d:	mov    eax,ebx
 100465f:	xor    ecx,ebp
 1004661:	pop    ebx
 1004662:	call   0x1004b6b
 1004667:	leave  
 1004668:	ret    
 1004669:	int3   
 100466a:	int3   
 100466b:	int3   
 100466c:	int3   
 100466d:	int3   
 100466e:	mov    edi,edi
 1004670:	push   ebp
 1004671:	mov    ebp,esp
 1004673:	mov    eax,DWORD PTR [ebp+0x8]
 1004676:	push   ebx
 1004677:	push   esi
 1004678:	push   edi
 1004679:	mov    edi,DWORD PTR [ebp+0x10]
 100467c:	test   eax,eax
 100467e:	je     0x100479c
 1004684:	cmp    DWORD PTR [ebp+0xc],0x0
 1004688:	je     0x100479c
 100468e:	test   edi,edi
 1004690:	je     0x100479c
 1004696:	mov    esi,DWORD PTR [eax]
 1004698:	movzx  eax,WORD PTR [esi]
 100469b:	test   ax,ax
 100469e:	je     0x100479c
 10046a4:	mov    ebx,DWORD PTR ds:0x10011ec
 10046aa:	push   0x20
 10046ac:	pop    edi
 10046ad:	push   0x9
 10046af:	pop    ecx
 10046b0:	cmp    ax,di
 10046b3:	je     0x10046ba
 10046b5:	cmp    ax,cx
 10046b8:	jne    0x10046ca
 10046ba:	push   esi
 10046bb:	call   ebx
 10046bd:	mov    esi,eax
 10046bf:	movzx  eax,WORD PTR [esi]
 10046c2:	push   0x9
 10046c4:	pop    ecx
 10046c5:	test   ax,ax
 10046c8:	jne    0x10046b0
 10046ca:	movzx  eax,WORD PTR [esi]
 10046cd:	mov    edi,DWORD PTR [ebp+0x10]
 10046d0:	test   ax,ax
 10046d3:	je     0x100479c
 10046d9:	cmp    DWORD PTR [ebp+0x14],0x4
 10046dd:	jne    0x100470d
 10046df:	mov    eax,DWORD PTR [ebp+0xc]
 10046e2:	mov    DWORD PTR [eax],esi
 10046e4:	xor    eax,eax
 10046e6:	cmp    WORD PTR [esi],ax
 10046e9:	je     0x10046fa
 10046eb:	xor    edi,edi
 10046ed:	push   esi
 10046ee:	call   ebx
 10046f0:	mov    esi,eax
 10046f2:	cmp    WORD PTR [esi],di
 10046f5:	jne    0x10046ed
 10046f7:	mov    edi,DWORD PTR [ebp+0x10]
 10046fa:	mov    ecx,DWORD PTR [ebp+0x8]
 10046fd:	mov    DWORD PTR [ecx],esi
 10046ff:	mov    DWORD PTR [edi],0x4
 1004705:	xor    eax,eax
 1004707:	inc    eax
 1004708:	jmp    0x100479e
 100470d:	cmp    eax,0x2d
 1004710:	je     0x100471f
 1004712:	cmp    eax,0x2f
 1004715:	je     0x100471f
 1004717:	mov    DWORD PTR [edi],0x3
 100471d:	jmp    0x100472a
 100471f:	push   esi
 1004720:	mov    DWORD PTR [edi],0x2
 1004726:	call   ebx
 1004728:	mov    esi,eax
 100472a:	mov    eax,DWORD PTR [ebp+0x14]
 100472d:	cmp    DWORD PTR [edi],eax
 100472f:	je     0x100473b
 1004731:	test   eax,eax
 1004733:	je     0x100473b
 1004735:	mov    DWORD PTR [edi],0x1
 100473b:	mov    eax,DWORD PTR [ebp+0xc]
 100473e:	mov    DWORD PTR [eax],esi
 1004740:	xor    edi,edi
 1004742:	push   0x22
 1004744:	pop    eax
 1004745:	cmp    ax,WORD PTR [esi]
 1004748:	jne    0x1004767
 100474a:	test   edi,edi
 100474c:	jne    0x1004758
 100474e:	push   esi
 100474f:	call   ebx
 1004751:	mov    ecx,DWORD PTR [ebp+0xc]
 1004754:	mov    DWORD PTR [ecx],eax
 1004756:	jmp    0x100475e
 1004758:	push   0x20
 100475a:	pop    eax
 100475b:	mov    WORD PTR [esi],ax
 100475e:	xor    eax,eax
 1004760:	test   edi,edi
 1004762:	sete   al
 1004765:	mov    edi,eax
 1004767:	movzx  eax,WORD PTR [esi]
 100476a:	test   ax,ax
 100476d:	je     0x100478a
 100476f:	test   edi,edi
 1004771:	jne    0x1004783
 1004773:	push   0x20
 1004775:	pop    ecx
 1004776:	cmp    ax,cx
 1004779:	je     0x100478a
 100477b:	push   0x9
 100477d:	pop    ecx
 100477e:	cmp    ax,cx
 1004781:	je     0x100478a
 1004783:	push   esi
 1004784:	call   ebx
 1004786:	mov    esi,eax
 1004788:	jmp    0x1004742
 100478a:	push   esi
 100478b:	call   ebx
 100478d:	mov    ecx,DWORD PTR [ebp+0x8]
 1004790:	mov    DWORD PTR [ecx],eax
 1004792:	xor    ecx,ecx
 1004794:	mov    WORD PTR [esi],cx
 1004797:	jmp    0x1004705
 100479c:	xor    eax,eax
 100479e:	pop    edi
 100479f:	pop    esi
 10047a0:	pop    ebx
 10047a1:	pop    ebp
 10047a2:	ret    
 10047a3:	int3   
 10047a4:	int3   
 10047a5:	int3   
 10047a6:	int3   
 10047a7:	int3   
 10047a8:	mov    edi,edi
 10047aa:	push   ebp
 10047ab:	mov    ebp,esp
 10047ad:	mov    eax,DWORD PTR [ebp+0x8]
 10047b0:	push   0x20
 10047b2:	pop    edx
 10047b3:	xor    cl,cl
 10047b5:	cmp    dx,ax
 10047b8:	jne    0x10047be
 10047ba:	inc    cl
 10047bc:	jmp    0x1004827
 10047be:	push   esi
 10047bf:	mov    esi,0xa0
 10047c4:	cmp    ax,si
 10047c7:	jae    0x10047d6
 10047c9:	add    eax,0xfffffff7
 10047cc:	cmp    ax,0x4
 10047d0:	ja     0x1004826
 10047d2:	mov    cl,0x1
 10047d4:	jmp    0x1004826
 10047d6:	push   edi
 10047d7:	mov    edi,0x303f
 10047dc:	cmp    ax,di
 10047df:	ja     0x1004825
 10047e1:	mov    edx,0x200b
 10047e6:	cmp    ax,dx
 10047e9:	ja     0x10047fa
 10047eb:	cmp    si,ax
 10047ee:	je     0x1004823
 10047f0:	add    edx,0xfffffff5
 10047f3:	cmp    ax,dx
 10047f6:	jb     0x1004825
 10047f8:	jmp    0x1004823
 10047fa:	mov    edx,0x2028
 10047ff:	cmp    dx,ax
 1004802:	je     0x1004823
 1004804:	inc    edx
 1004805:	cmp    dx,ax
 1004808:	je     0x1004823
 100480a:	mov    edx,0x202f
 100480f:	cmp    dx,ax
 1004812:	je     0x1004823
 1004814:	mov    edx,0x3000
 1004819:	cmp    dx,ax
 100481c:	je     0x1004823
 100481e:	cmp    di,ax
 1004821:	jne    0x1004825
 1004823:	mov    cl,0x1
 1004825:	pop    edi
 1004826:	pop    esi
 1004827:	movsx  eax,cl
 100482a:	pop    ebp
 100482b:	ret    0x4
 100482e:	int3   
 100482f:	int3   
 1004830:	int3   
 1004831:	int3   
 1004832:	int3   
 1004833:	push   0x1004ece
 1004838:	call   0x1004e87
 100483d:	mov    eax,ds:0x100a0b4
 1004842:	mov    DWORD PTR [esp],0x100a0a4
 1004849:	push   DWORD PTR ds:0x100a0b0
 100484f:	mov    ds:0x100a0a4,eax
 1004854:	push   0x100a094
 1004859:	push   0x100a098
 100485e:	push   0x100a090
 1004863:	call   DWORD PTR ds:0x100116c
 1004869:	add    esp,0x14
 100486c:	mov    ds:0x100a0a0,eax
 1004871:	test   eax,eax
 1004873:	jns    0x100487d
 1004875:	push   0x8
 1004877:	call   0x1004dd6
 100487c:	pop    ecx
 100487d:	ret    
 100487e:	int3   
 100487f:	int3   
 1004880:	int3   
 1004881:	int3   
 1004882:	int3   
 1004883:	push   0x5c
 1004885:	push   0x1007db0
 100488a:	call   0x1005080
 100488f:	xor    ebx,ebx
 1004891:	mov    DWORD PTR [ebp-0x1c],ebx
 1004894:	lea    eax,[ebp-0x6c]
 1004897:	push   eax
 1004898:	call   DWORD PTR ds:0x100107c
 100489e:	cmp    DWORD PTR ds:0x100aa80,ebx
 10048a4:	jne    0x10048b1
 10048a6:	push   ebx
 10048a7:	push   ebx
 10048a8:	push   0x1
 10048aa:	push   ebx
 10048ab:	call   DWORD PTR ds:0x1001080
 10048b1:	mov    DWORD PTR [ebp-0x4],ebx
 10048b4:	mov    eax,fs:0x18
 10048ba:	mov    esi,DWORD PTR [eax+0x4]
 10048bd:	mov    DWORD PTR [ebp-0x24],ebx
 10048c0:	mov    edi,0x100aa74
 10048c5:	push   ebx
 10048c6:	push   esi
 10048c7:	push   edi
 10048c8:	call   DWORD PTR ds:0x1001084
 10048ce:	cmp    eax,ebx
 10048d0:	je     0x10048eb
 10048d2:	cmp    eax,esi
 10048d4:	jne    0x10048de
 10048d6:	xor    esi,esi
 10048d8:	inc    esi
 10048d9:	mov    DWORD PTR [ebp-0x24],esi
 10048dc:	jmp    0x10048ee
 10048de:	push   0x3e8
 10048e3:	call   DWORD PTR ds:0x1001088
 10048e9:	jmp    0x10048c5
 10048eb:	xor    esi,esi
 10048ed:	inc    esi
 10048ee:	mov    eax,ds:0x100aa70
 10048f3:	cmp    eax,esi
 10048f5:	jne    0x1004901
 10048f7:	push   0x1f
 10048f9:	call   0x1004dd6
 10048fe:	pop    ecx
 10048ff:	jmp    0x100493c
 1004901:	mov    eax,ds:0x100aa70
 1004906:	test   eax,eax
 1004908:	jne    0x1004936
 100490a:	mov    DWORD PTR ds:0x100aa70,esi
 1004910:	push   0x100121c
 1004915:	push   0x1001210
 100491a:	call   0x100506e
 100491f:	pop    ecx
 1004920:	pop    ecx
 1004921:	test   eax,eax
 1004923:	je     0x100493c
 1004925:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100492c:	mov    eax,0xff
 1004931:	jmp    0x1004a56
 1004936:	mov    DWORD PTR ds:0x100a0ac,esi
 100493c:	mov    eax,ds:0x100aa70
 1004941:	cmp    eax,esi
 1004943:	jne    0x1004960
 1004945:	push   0x100120c
 100494a:	push   0x10011f4
 100494f:	call   0x1005062
 1004954:	pop    ecx
 1004955:	pop    ecx
 1004956:	mov    DWORD PTR ds:0x100aa70,0x2
 1004960:	cmp    DWORD PTR [ebp-0x24],ebx
 1004963:	jne    0x100496d
 1004965:	push   ebx
 1004966:	push   edi
 1004967:	call   DWORD PTR ds:0x100108c
 100496d:	cmp    DWORD PTR ds:0x100aa84,ebx
 1004973:	je     0x100498e
 1004975:	push   0x100aa84
 100497a:	call   0x1004fa0
 100497f:	pop    ecx
 1004980:	test   eax,eax
 1004982:	je     0x100498e
 1004984:	push   ebx
 1004985:	push   0x2
 1004987:	push   ebx
 1004988:	call   DWORD PTR ds:0x100aa84
 100498e:	mov    eax,ds:0x1001154
 1004993:	mov    esi,DWORD PTR [eax]
 1004995:	mov    DWORD PTR [ebp-0x20],esi
 1004998:	mov    al,BYTE PTR [esi]
 100499a:	cmp    al,0x20
 100499c:	ja     0x10049e7
 100499e:	cmp    al,bl
 10049a0:	je     0x10049a7
 10049a2:	cmp    DWORD PTR [ebp-0x1c],ebx
 10049a5:	jne    0x10049e7
 10049a7:	mov    al,BYTE PTR [esi]
 10049a9:	cmp    al,bl
 10049ab:	je     0x10049b7
 10049ad:	cmp    al,0x20
 10049af:	ja     0x10049b7
 10049b1:	inc    esi
 10049b2:	mov    DWORD PTR [ebp-0x20],esi
 10049b5:	jmp    0x10049a7
 10049b7:	test   BYTE PTR [ebp-0x40],0x1
 10049bb:	je     0x10049c3
 10049bd:	movzx  eax,WORD PTR [ebp-0x3c]
 10049c1:	jmp    0x10049c6
 10049c3:	push   0xa
 10049c5:	pop    eax
 10049c6:	push   eax
 10049c7:	push   esi
 10049c8:	push   ebx
 10049c9:	push   0x1000000
 10049ce:	call   0x1001fe5
 10049d3:	mov    ds:0x100a0a8,eax
 10049d8:	cmp    DWORD PTR ds:0x100a09c,ebx
 10049de:	jne    0x1004a3c
 10049e0:	push   eax
 10049e1:	call   DWORD PTR ds:0x1001158
 10049e7:	cmp    al,0x22
 10049e9:	jne    0x10049f6
 10049eb:	xor    ecx,ecx
 10049ed:	cmp    DWORD PTR [ebp-0x1c],ebx
 10049f0:	sete   cl
 10049f3:	mov    DWORD PTR [ebp-0x1c],ecx
 10049f6:	movzx  eax,al
 10049f9:	push   eax
 10049fa:	call   DWORD PTR ds:0x100115c
 1004a00:	pop    ecx
 1004a01:	test   eax,eax
 1004a03:	je     0x1004a09
 1004a05:	inc    esi
 1004a06:	mov    DWORD PTR [ebp-0x20],esi
 1004a09:	inc    esi
 1004a0a:	jmp    0x1004995
 1004a0c:	mov    eax,DWORD PTR [ebp-0x14]
 1004a0f:	mov    ecx,DWORD PTR [eax]
 1004a11:	mov    ecx,DWORD PTR [ecx]
 1004a13:	mov    DWORD PTR [ebp-0x28],ecx
 1004a16:	push   eax
 1004a17:	push   ecx
 1004a18:	call   0x1004efa
 1004a1d:	pop    ecx
 1004a1e:	pop    ecx
 1004a1f:	ret    
 1004a20:	mov    esp,DWORD PTR [ebp-0x18]
 1004a23:	mov    eax,DWORD PTR [ebp-0x28]
 1004a26:	mov    ds:0x100a0a8,eax
 1004a2b:	xor    ebx,ebx
 1004a2d:	cmp    DWORD PTR ds:0x100a09c,ebx
 1004a33:	jne    0x1004a3c
 1004a35:	push   eax
 1004a36:	call   DWORD PTR ds:0x1001164
 1004a3c:	cmp    DWORD PTR ds:0x100a0ac,ebx
 1004a42:	jne    0x1004a4a
 1004a44:	call   DWORD PTR ds:0x1001168
 1004a4a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1004a51:	mov    eax,ds:0x100a0a8
 1004a56:	call   0x10050c5
 1004a5b:	ret    
 1004a5c:	int3   
 1004a5d:	int3   
 1004a5e:	int3   
 1004a5f:	int3   
 1004a60:	int3   
 1004a61:	mov    eax,0x5a4d
 1004a66:	cmp    WORD PTR ds:0x1000000,ax
 1004a6d:	je     0x1004a73
 1004a6f:	xor    eax,eax
 1004a71:	jmp    0x1004aa8
 1004a73:	mov    eax,ds:0x100003c
 1004a78:	cmp    DWORD PTR [eax+0x1000000],0x4550
 1004a82:	jne    0x1004a6f
 1004a84:	mov    ecx,0x10b
 1004a89:	cmp    WORD PTR [eax+0x1000018],cx
 1004a90:	jne    0x1004a6f
 1004a92:	cmp    DWORD PTR [eax+0x1000074],0xe
 1004a99:	jbe    0x1004a6f
 1004a9b:	xor    ecx,ecx
 1004a9d:	cmp    DWORD PTR [eax+0x10000e8],ecx
 1004aa3:	setne  cl
 1004aa6:	mov    eax,ecx
 1004aa8:	push   0x2
 1004aaa:	mov    ds:0x100a09c,eax
 1004aaf:	call   DWORD PTR ds:0x1001138
 1004ab5:	pop    ecx
 1004ab6:	push   0xffffffff
 1004ab8:	call   DWORD PTR ds:0x1001078
 1004abe:	mov    ecx,DWORD PTR ds:0x100a0bc
 1004ac4:	mov    ds:0x100aa78,eax
 1004ac9:	mov    ds:0x100aa7c,eax
 1004ace:	mov    eax,ds:0x100113c
 1004ad3:	mov    DWORD PTR [eax],ecx
 1004ad5:	mov    eax,ds:0x1001140
 1004ada:	mov    ecx,DWORD PTR ds:0x100a0b8
 1004ae0:	mov    DWORD PTR [eax],ecx
 1004ae2:	call   0x1004ea3
 1004ae7:	call   0x100513d
 1004aec:	cmp    DWORD PTR ds:0x10090a4,0x0
 1004af3:	jne    0x1004b01
 1004af5:	push   0x1005135
 1004afa:	call   DWORD PTR ds:0x1001144
 1004b00:	pop    ecx
 1004b01:	call   0x1005108
 1004b06:	cmp    DWORD PTR ds:0x10090a0,0xffffffff
 1004b0d:	jne    0x1004b18
 1004b0f:	push   0xffffffff
 1004b11:	call   DWORD PTR ds:0x1001148
 1004b17:	pop    ecx
 1004b18:	xor    eax,eax
 1004b1a:	ret    
 1004b1b:	int3   
 1004b1c:	int3   
 1004b1d:	int3   
 1004b1e:	int3   
 1004b1f:	int3   
 1004b20:	call   0x1005145
 1004b25:	jmp    0x1004883
 1004b2a:	int3   
 1004b2b:	int3   
 1004b2c:	int3   
 1004b2d:	int3   
 1004b2e:	int3   
 1004b2f:	int3   
 1004b30:	jmp    DWORD PTR ds:0x10011d0
 1004b36:	int3   
 1004b37:	int3   
 1004b38:	int3   
 1004b39:	int3   
 1004b3a:	int3   
 1004b3b:	int3   
 1004b3c:	jmp    DWORD PTR ds:0x10011cc
 1004b42:	int3   
 1004b43:	int3   
 1004b44:	int3   
 1004b45:	int3   
 1004b46:	int3   
 1004b47:	int3   
 1004b48:	jmp    DWORD PTR ds:0x10011b8
 1004b4e:	int3   
 1004b4f:	int3   
 1004b50:	int3   
 1004b51:	int3   
 1004b52:	int3   
 1004b53:	int3   
 1004b54:	jmp    DWORD PTR ds:0x10011b4
 1004b5a:	int3   
 1004b5b:	int3   
 1004b5c:	int3   
 1004b5d:	int3   
 1004b5e:	int3   
 1004b5f:	int3   
 1004b60:	jmp    DWORD PTR ds:0x10011b0
 1004b66:	int3   
 1004b67:	int3   
 1004b68:	int3   
 1004b69:	int3   
 1004b6a:	int3   
 1004b6b:	cmp    ecx,DWORD PTR ds:0x100907c
 1004b71:	jne    0x1004b75
 1004b73:	repz ret 
 1004b75:	jmp    0x10051e5
 1004b7a:	int3   
 1004b7b:	int3   
 1004b7c:	int3   
 1004b7d:	int3   
 1004b7e:	int3   
 1004b7f:	int3   
 1004b80:	jmp    DWORD PTR ds:0x10011ac
 1004b86:	int3   
 1004b87:	int3   
 1004b88:	int3   
 1004b89:	int3   
 1004b8a:	int3   
 1004b8b:	push   eax
 1004b8c:	push   DWORD PTR fs:0x0
 1004b93:	lea    eax,[esp+0xc]
 1004b97:	sub    esp,DWORD PTR [esp+0xc]
 1004b9b:	push   ebx
 1004b9c:	push   esi
 1004b9d:	push   edi
 1004b9e:	mov    DWORD PTR [eax],ebp
 1004ba0:	mov    ebp,eax
 1004ba2:	mov    eax,ds:0x100907c
 1004ba7:	xor    eax,ebp
 1004ba9:	push   eax
 1004baa:	push   DWORD PTR [ebp-0x4]
 1004bad:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1004bb4:	lea    eax,[ebp-0xc]
 1004bb7:	mov    fs:0x0,eax
 1004bbd:	ret    
 1004bbe:	int3   
 1004bbf:	int3   
 1004bc0:	int3   
 1004bc1:	int3   
 1004bc2:	int3   
 1004bc3:	push   eax
 1004bc4:	push   DWORD PTR fs:0x0
 1004bcb:	lea    eax,[esp+0xc]
 1004bcf:	sub    esp,DWORD PTR [esp+0xc]
 1004bd3:	push   ebx
 1004bd4:	push   esi
 1004bd5:	push   edi
 1004bd6:	mov    DWORD PTR [eax],ebp
 1004bd8:	mov    ebp,eax
 1004bda:	mov    eax,ds:0x100907c
 1004bdf:	xor    eax,ebp
 1004be1:	push   eax
 1004be2:	mov    DWORD PTR [ebp-0x10],esp
 1004be5:	push   DWORD PTR [ebp-0x4]
 1004be8:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1004bef:	lea    eax,[ebp-0xc]
 1004bf2:	mov    fs:0x0,eax
 1004bf8:	ret    
 1004bf9:	int3   
 1004bfa:	int3   
 1004bfb:	int3   
 1004bfc:	int3   
 1004bfd:	int3   
 1004bfe:	push   eax
 1004bff:	push   DWORD PTR fs:0x0
 1004c06:	lea    eax,[esp+0xc]
 1004c0a:	sub    esp,DWORD PTR [esp+0xc]
 1004c0e:	push   ebx
 1004c0f:	push   esi
 1004c10:	push   edi
 1004c11:	mov    DWORD PTR [eax],ebp
 1004c13:	mov    ebp,eax
 1004c15:	mov    eax,ds:0x100907c
 1004c1a:	xor    eax,ebp
 1004c1c:	push   eax
 1004c1d:	mov    DWORD PTR [ebp-0x10],eax
 1004c20:	push   DWORD PTR [ebp-0x4]
 1004c23:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1004c2a:	lea    eax,[ebp-0xc]
 1004c2d:	mov    fs:0x0,eax
 1004c33:	ret    
 1004c34:	int3   
 1004c35:	int3   
 1004c36:	int3   
 1004c37:	int3   
 1004c38:	int3   
 1004c39:	push   eax
 1004c3a:	push   DWORD PTR fs:0x0
 1004c41:	lea    eax,[esp+0xc]
 1004c45:	sub    esp,DWORD PTR [esp+0xc]
 1004c49:	push   ebx
 1004c4a:	push   esi
 1004c4b:	push   edi
 1004c4c:	mov    DWORD PTR [eax],ebp
 1004c4e:	mov    ebp,eax
 1004c50:	mov    eax,ds:0x100907c
 1004c55:	xor    eax,ebp
 1004c57:	push   eax
 1004c58:	mov    DWORD PTR [ebp-0x14],eax
 1004c5b:	mov    DWORD PTR [ebp-0x10],esp
 1004c5e:	push   DWORD PTR [ebp-0x4]
 1004c61:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1004c68:	lea    eax,[ebp-0xc]
 1004c6b:	mov    fs:0x0,eax
 1004c71:	ret    
 1004c72:	int3   
 1004c73:	int3   
 1004c74:	int3   
 1004c75:	int3   
 1004c76:	int3   
 1004c77:	mov    ecx,DWORD PTR [ebp-0xc]
 1004c7a:	mov    DWORD PTR fs:0x0,ecx
 1004c81:	pop    ecx
 1004c82:	pop    edi
 1004c83:	pop    edi
 1004c84:	pop    esi
 1004c85:	pop    ebx
 1004c86:	mov    esp,ebp
 1004c88:	pop    ebp
 1004c89:	push   ecx
 1004c8a:	ret    
 1004c8b:	int3   
 1004c8c:	int3   
 1004c8d:	int3   
 1004c8e:	int3   
 1004c8f:	int3   
 1004c90:	mov    ecx,DWORD PTR [ebp-0x10]
 1004c93:	xor    ecx,ebp
 1004c95:	call   0x1004b6b
 1004c9a:	jmp    0x1004c77
 1004c9f:	int3   
 1004ca0:	int3   
 1004ca1:	int3   
 1004ca2:	int3   
 1004ca3:	int3   
 1004ca4:	mov    ecx,DWORD PTR [ebp-0x14]
 1004ca7:	xor    ecx,ebp
 1004ca9:	call   0x1004b6b
 1004cae:	jmp    0x1004c77
 1004cb3:	int3   
 1004cb4:	int3   
 1004cb5:	int3   
 1004cb6:	int3   
 1004cb7:	int3   
 1004cb8:	jmp    DWORD PTR ds:0x10011a8
 1004cbe:	int3   
 1004cbf:	int3   
 1004cc0:	int3   
 1004cc1:	int3   
 1004cc2:	int3   
 1004cc3:	int3   
 1004cc4:	jmp    DWORD PTR ds:0x10011a4
 1004cca:	int3   
 1004ccb:	int3   
 1004ccc:	int3   
 1004ccd:	int3   
 1004cce:	int3   
 1004ccf:	mov    edi,edi
 1004cd1:	push   ebp
 1004cd2:	mov    ebp,esp
 1004cd4:	test   BYTE PTR [ebp+0x8],0x2
 1004cd8:	push   edi
 1004cd9:	mov    edi,ecx
 1004cdb:	je     0x1004d02
 1004cdd:	push   esi
 1004cde:	push   0x100541c
 1004ce3:	lea    esi,[edi-0x4]
 1004ce6:	push   DWORD PTR [esi]
 1004ce8:	push   0xc
 1004cea:	push   edi
 1004ceb:	call   0x1005353
 1004cf0:	test   BYTE PTR [ebp+0x8],0x1
 1004cf4:	je     0x1004cfd
 1004cf6:	push   esi
 1004cf7:	call   0x1004b30
 1004cfc:	pop    ecx
 1004cfd:	mov    eax,esi
 1004cff:	pop    esi
 1004d00:	jmp    0x1004d16
 1004d02:	call   0x100541c
 1004d07:	test   BYTE PTR [ebp+0x8],0x1
 1004d0b:	je     0x1004d14
 1004d0d:	push   edi
 1004d0e:	call   0x1004b30
 1004d13:	pop    ecx
 1004d14:	mov    eax,edi
 1004d16:	pop    edi
 1004d17:	pop    ebp
 1004d18:	ret    0x4
 1004d1b:	int3   
 1004d1c:	int3   
 1004d1d:	int3   
 1004d1e:	int3   
 1004d1f:	int3   
 1004d20:	jmp    DWORD PTR ds:0x100118c
 1004d26:	int3   
 1004d27:	int3   
 1004d28:	int3   
 1004d29:	int3   
 1004d2a:	int3   
 1004d2b:	int3   
 1004d2c:	jmp    DWORD PTR ds:0x1001184
 1004d32:	int3   
 1004d33:	int3   
 1004d34:	int3   
 1004d35:	int3   
 1004d36:	int3   
 1004d37:	int3   
 1004d38:	int3   
 1004d39:	int3   
 1004d3a:	int3   
 1004d3b:	int3   
 1004d3c:	int3   
 1004d3d:	int3   
 1004d3e:	int3   
 1004d3f:	int3   
 1004d40:	push   ecx
 1004d41:	lea    ecx,[esp+0x4]
 1004d45:	sub    ecx,eax
 1004d47:	sbb    eax,eax
 1004d49:	not    eax
 1004d4b:	and    ecx,eax
 1004d4d:	mov    eax,esp
 1004d4f:	and    eax,0xfffff000
 1004d54:	cmp    ecx,eax
 1004d56:	jb     0x1004d62
 1004d58:	mov    eax,ecx
 1004d5a:	pop    ecx
 1004d5b:	xchg   esp,eax
 1004d5c:	mov    eax,DWORD PTR [eax]
 1004d5e:	mov    DWORD PTR [esp],eax
 1004d61:	ret    
 1004d62:	sub    eax,0x1000
 1004d67:	test   DWORD PTR [eax],eax
 1004d69:	jmp    0x1004d54
 1004d6b:	int3   
 1004d6c:	int3   
 1004d6d:	int3   
 1004d6e:	int3   
 1004d6f:	int3   
 1004d70:	jmp    DWORD PTR ds:0x1001178
 1004d76:	int3   
 1004d77:	int3   
 1004d78:	int3   
 1004d79:	int3   
 1004d7a:	int3   
 1004d7b:	mov    edi,edi
 1004d7d:	push   ebp
 1004d7e:	mov    ebp,esp
 1004d80:	mov    eax,DWORD PTR [ebp+0x8]
 1004d83:	mov    eax,DWORD PTR [eax]
 1004d85:	cmp    DWORD PTR [eax],0xe06d7363
 1004d8b:	jne    0x1004db7
 1004d8d:	cmp    DWORD PTR [eax+0x10],0x3
 1004d91:	jne    0x1004db7
 1004d93:	mov    eax,DWORD PTR [eax+0x14]
 1004d96:	cmp    eax,0x19930520
 1004d9b:	je     0x1004db2
 1004d9d:	cmp    eax,0x19930521
 1004da2:	je     0x1004db2
 1004da4:	cmp    eax,0x19930522
 1004da9:	je     0x1004db2
 1004dab:	cmp    eax,0x1994000
 1004db0:	jne    0x1004db7
 1004db2:	call   0x10053bc
 1004db7:	xor    eax,eax
 1004db9:	pop    ebp
 1004dba:	ret    0x4
 1004dbd:	int3   
 1004dbe:	int3   
 1004dbf:	int3   
 1004dc0:	int3   
 1004dc1:	int3   
 1004dc2:	push   0x1004d7b
 1004dc7:	call   DWORD PTR ds:0x1001074
 1004dcd:	xor    eax,eax
 1004dcf:	ret    
 1004dd0:	int3   
 1004dd1:	int3   
 1004dd2:	int3   
 1004dd3:	int3   
 1004dd4:	int3   
 1004dd5:	int3   
 1004dd6:	jmp    DWORD PTR ds:0x1001170
 1004ddc:	int3   
 1004ddd:	int3   
 1004dde:	int3   
 1004ddf:	int3   
 1004de0:	int3   
 1004de1:	push   0x14
 1004de3:	push   0x1007dd0
 1004de8:	call   0x1005080
 1004ded:	push   DWORD PTR ds:0x100aa7c
 1004df3:	mov    esi,DWORD PTR ds:0x1001070
 1004df9:	call   esi
 1004dfb:	mov    DWORD PTR [ebp-0x1c],eax
 1004dfe:	cmp    eax,0xffffffff
 1004e01:	jne    0x1004e0f
 1004e03:	push   DWORD PTR [ebp+0x8]
 1004e06:	call   DWORD PTR ds:0x1001128
 1004e0c:	pop    ecx
 1004e0d:	jmp    0x1004e73
 1004e0f:	push   0x8
 1004e11:	call   0x10053e0
 1004e16:	pop    ecx
 1004e17:	and    DWORD PTR [ebp-0x4],0x0
 1004e1b:	push   DWORD PTR ds:0x100aa7c
 1004e21:	call   esi
 1004e23:	mov    DWORD PTR [ebp-0x1c],eax
 1004e26:	push   DWORD PTR ds:0x100aa78
 1004e2c:	call   esi
 1004e2e:	mov    DWORD PTR [ebp-0x20],eax
 1004e31:	lea    eax,[ebp-0x20]
 1004e34:	push   eax
 1004e35:	lea    eax,[ebp-0x1c]
 1004e38:	push   eax
 1004e39:	push   DWORD PTR [ebp+0x8]
 1004e3c:	mov    esi,DWORD PTR ds:0x1001078
 1004e42:	call   esi
 1004e44:	push   eax
 1004e45:	call   0x10053d4
 1004e4a:	add    esp,0xc
 1004e4d:	mov    DWORD PTR [ebp-0x24],eax
 1004e50:	push   DWORD PTR [ebp-0x1c]
 1004e53:	call   esi
 1004e55:	mov    ds:0x100aa7c,eax
 1004e5a:	push   DWORD PTR [ebp-0x20]
 1004e5d:	call   esi
 1004e5f:	mov    ds:0x100aa78,eax
 1004e64:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1004e6b:	call   0x1004e79
 1004e70:	mov    eax,DWORD PTR [ebp-0x24]
 1004e73:	call   0x10050c5
 1004e78:	ret    
 1004e79:	push   0x8
 1004e7b:	call   0x10053c8
 1004e80:	pop    ecx
 1004e81:	ret    
 1004e82:	int3   
 1004e83:	int3   
 1004e84:	int3   
 1004e85:	int3   
 1004e86:	int3   
 1004e87:	mov    edi,edi
 1004e89:	push   ebp
 1004e8a:	mov    ebp,esp
 1004e8c:	push   DWORD PTR [ebp+0x8]
 1004e8f:	call   0x1004de1
 1004e94:	neg    eax
 1004e96:	sbb    eax,eax
 1004e98:	neg    eax
 1004e9a:	pop    ecx
 1004e9b:	dec    eax
 1004e9c:	pop    ebp
 1004e9d:	ret    
 1004e9e:	int3   
 1004e9f:	int3   
 1004ea0:	int3   
 1004ea1:	int3   
 1004ea2:	int3   
 1004ea3:	mov    edi,edi
 1004ea5:	push   esi
 1004ea6:	mov    eax,0x1001fd4
 1004eab:	mov    esi,0x1001fd4
 1004eb0:	push   edi
 1004eb1:	mov    edi,eax
 1004eb3:	cmp    eax,esi
 1004eb5:	jae    0x1004ec6
 1004eb7:	mov    eax,DWORD PTR [edi]
 1004eb9:	test   eax,eax
 1004ebb:	je     0x1004ebf
 1004ebd:	call   eax
 1004ebf:	add    edi,0x4
 1004ec2:	cmp    edi,esi
 1004ec4:	jb     0x1004eb7
 1004ec6:	pop    edi
 1004ec7:	pop    esi
 1004ec8:	ret    
 1004ec9:	int3   
 1004eca:	int3   
 1004ecb:	int3   
 1004ecc:	int3   
 1004ecd:	int3   
 1004ece:	mov    edi,edi
 1004ed0:	push   esi
 1004ed1:	mov    eax,0x1001fdc
 1004ed6:	mov    esi,0x1001fdc
 1004edb:	push   edi
 1004edc:	mov    edi,eax
 1004ede:	cmp    eax,esi
 1004ee0:	jae    0x1004ef1
 1004ee2:	mov    eax,DWORD PTR [edi]
 1004ee4:	test   eax,eax
 1004ee6:	je     0x1004eea
 1004ee8:	call   eax
 1004eea:	add    edi,0x4
 1004eed:	cmp    edi,esi
 1004eef:	jb     0x1004ee2
 1004ef1:	pop    edi
 1004ef2:	pop    esi
 1004ef3:	ret    
 1004ef4:	int3   
 1004ef5:	int3   
 1004ef6:	int3   
 1004ef7:	int3   
 1004ef8:	int3   
 1004ef9:	int3   
 1004efa:	jmp    DWORD PTR ds:0x1001160
 1004f00:	int3   
 1004f01:	int3   
 1004f02:	int3   
 1004f03:	int3   
 1004f04:	int3   
 1004f05:	int3   
 1004f06:	int3   
 1004f07:	int3   
 1004f08:	int3   
 1004f09:	int3   
 1004f0a:	int3   
 1004f0b:	int3   
 1004f0c:	int3   
 1004f0d:	int3   
 1004f0e:	int3   
 1004f0f:	int3   
 1004f10:	mov    edi,edi
 1004f12:	push   ebp
 1004f13:	mov    ebp,esp
 1004f15:	mov    ecx,DWORD PTR [ebp+0x8]
 1004f18:	mov    eax,0x5a4d
 1004f1d:	cmp    WORD PTR [ecx],ax
 1004f20:	je     0x1004f26
 1004f22:	xor    eax,eax
 1004f24:	pop    ebp
 1004f25:	ret    
 1004f26:	mov    eax,DWORD PTR [ecx+0x3c]
 1004f29:	add    eax,ecx
 1004f2b:	cmp    DWORD PTR [eax],0x4550
 1004f31:	jne    0x1004f22
 1004f33:	xor    edx,edx
 1004f35:	mov    ecx,0x10b
 1004f3a:	cmp    WORD PTR [eax+0x18],cx
 1004f3e:	sete   dl
 1004f41:	mov    eax,edx
 1004f43:	pop    ebp
 1004f44:	ret    
 1004f45:	int3   
 1004f46:	int3   
 1004f47:	int3   
 1004f48:	int3   
 1004f49:	int3   
 1004f4a:	int3   
 1004f4b:	int3   
 1004f4c:	int3   
 1004f4d:	int3   
 1004f4e:	int3   
 1004f4f:	int3   
 1004f50:	mov    edi,edi
 1004f52:	push   ebp
 1004f53:	mov    ebp,esp
 1004f55:	mov    eax,DWORD PTR [ebp+0x8]
 1004f58:	mov    ecx,DWORD PTR [eax+0x3c]
 1004f5b:	add    ecx,eax
 1004f5d:	movzx  eax,WORD PTR [ecx+0x14]
 1004f61:	push   ebx
 1004f62:	push   esi
 1004f63:	movzx  esi,WORD PTR [ecx+0x6]
 1004f67:	xor    edx,edx
 1004f69:	push   edi
 1004f6a:	lea    eax,[eax+ecx*1+0x18]
 1004f6e:	test   esi,esi
 1004f70:	je     0x1004f8d
 1004f72:	mov    edi,DWORD PTR [ebp+0xc]
 1004f75:	mov    ecx,DWORD PTR [eax+0xc]
 1004f78:	cmp    edi,ecx
 1004f7a:	jb     0x1004f85
 1004f7c:	mov    ebx,DWORD PTR [eax+0x8]
 1004f7f:	add    ebx,ecx
 1004f81:	cmp    edi,ebx
 1004f83:	jb     0x1004f8f
 1004f85:	inc    edx
 1004f86:	add    eax,0x28
 1004f89:	cmp    edx,esi
 1004f8b:	jb     0x1004f75
 1004f8d:	xor    eax,eax
 1004f8f:	pop    edi
 1004f90:	pop    esi
 1004f91:	pop    ebx
 1004f92:	pop    ebp
 1004f93:	ret    
 1004f94:	int3   
 1004f95:	int3   
 1004f96:	int3   
 1004f97:	int3   
 1004f98:	int3   
 1004f99:	int3   
 1004f9a:	int3   
 1004f9b:	int3   
 1004f9c:	int3   
 1004f9d:	int3   
 1004f9e:	int3   
 1004f9f:	int3   
 1004fa0:	mov    edi,edi
 1004fa2:	push   ebp
 1004fa3:	mov    ebp,esp
 1004fa5:	push   0xfffffffe
 1004fa7:	push   0x1007df0
 1004fac:	push   0x10050de
 1004fb1:	mov    eax,fs:0x0
 1004fb7:	push   eax
 1004fb8:	sub    esp,0x8
 1004fbb:	push   ebx
 1004fbc:	push   esi
 1004fbd:	push   edi
 1004fbe:	mov    eax,ds:0x100907c
 1004fc3:	xor    DWORD PTR [ebp-0x8],eax
 1004fc6:	xor    eax,ebp
 1004fc8:	push   eax
 1004fc9:	lea    eax,[ebp-0x10]
 1004fcc:	mov    fs:0x0,eax
 1004fd2:	mov    DWORD PTR [ebp-0x18],esp
 1004fd5:	mov    DWORD PTR [ebp-0x4],0x0
 1004fdc:	push   0x1000000
 1004fe1:	call   0x1004f10
 1004fe6:	add    esp,0x4
 1004fe9:	test   eax,eax
 1004feb:	je     0x1005041
 1004fed:	mov    eax,DWORD PTR [ebp+0x8]
 1004ff0:	sub    eax,0x1000000
 1004ff5:	push   eax
 1004ff6:	push   0x1000000
 1004ffb:	call   0x1004f50
 1005000:	add    esp,0x8
 1005003:	test   eax,eax
 1005005:	je     0x1005041
 1005007:	mov    eax,DWORD PTR [eax+0x24]
 100500a:	shr    eax,0x1f
 100500d:	not    eax
 100500f:	and    eax,0x1
 1005012:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005019:	mov    ecx,DWORD PTR [ebp-0x10]
 100501c:	mov    DWORD PTR fs:0x0,ecx
 1005023:	pop    ecx
 1005024:	pop    edi
 1005025:	pop    esi
 1005026:	pop    ebx
 1005027:	mov    esp,ebp
 1005029:	pop    ebp
 100502a:	ret    
 100502b:	mov    eax,DWORD PTR [ebp-0x14]
 100502e:	mov    ecx,DWORD PTR [eax]
 1005030:	xor    edx,edx
 1005032:	cmp    DWORD PTR [ecx],0xc0000005
 1005038:	sete   dl
 100503b:	mov    eax,edx
 100503d:	ret    
 100503e:	mov    esp,DWORD PTR [ebp-0x18]
 1005041:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005048:	xor    eax,eax
 100504a:	mov    ecx,DWORD PTR [ebp-0x10]
 100504d:	mov    DWORD PTR fs:0x0,ecx
 1005054:	pop    ecx
 1005055:	pop    edi
 1005056:	pop    esi
 1005057:	pop    ebx
 1005058:	mov    esp,ebp
 100505a:	pop    ebp
 100505b:	ret    
 100505c:	int3   
 100505d:	int3   
 100505e:	int3   
 100505f:	int3   
 1005060:	int3   
 1005061:	int3   
 1005062:	jmp    DWORD PTR ds:0x1001150
 1005068:	int3   
 1005069:	int3   
 100506a:	int3   
 100506b:	int3   
 100506c:	int3   
 100506d:	int3   
 100506e:	jmp    DWORD PTR ds:0x100114c
 1005074:	int3   
 1005075:	int3   
 1005076:	int3   
 1005077:	int3   
 1005078:	int3   
 1005079:	int3   
 100507a:	int3   
 100507b:	int3   
 100507c:	int3   
 100507d:	int3   
 100507e:	int3   
 100507f:	int3   
 1005080:	push   0x10050de
 1005085:	push   DWORD PTR fs:0x0
 100508c:	mov    eax,DWORD PTR [esp+0x10]
 1005090:	mov    DWORD PTR [esp+0x10],ebp
 1005094:	lea    ebp,[esp+0x10]
 1005098:	sub    esp,eax
 100509a:	push   ebx
 100509b:	push   esi
 100509c:	push   edi
 100509d:	mov    eax,ds:0x100907c
 10050a2:	xor    DWORD PTR [ebp-0x4],eax
 10050a5:	xor    eax,ebp
 10050a7:	push   eax
 10050a8:	mov    DWORD PTR [ebp-0x18],esp
 10050ab:	push   DWORD PTR [ebp-0x8]
 10050ae:	mov    eax,DWORD PTR [ebp-0x4]
 10050b1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10050b8:	mov    DWORD PTR [ebp-0x8],eax
 10050bb:	lea    eax,[ebp-0x10]
 10050be:	mov    fs:0x0,eax
 10050c4:	ret    
 10050c5:	mov    ecx,DWORD PTR [ebp-0x10]
 10050c8:	mov    DWORD PTR fs:0x0,ecx
 10050cf:	pop    ecx
 10050d0:	pop    edi
 10050d1:	pop    edi
 10050d2:	pop    esi
 10050d3:	pop    ebx
 10050d4:	mov    esp,ebp
 10050d6:	pop    ebp
 10050d7:	push   ecx
 10050d8:	ret    
 10050d9:	int3   
 10050da:	int3   
 10050db:	int3   
 10050dc:	int3   
 10050dd:	int3   
 10050de:	mov    edi,edi
 10050e0:	push   ebp
 10050e1:	mov    ebp,esp
 10050e3:	push   DWORD PTR [ebp+0x14]
 10050e6:	push   DWORD PTR [ebp+0x10]
 10050e9:	push   DWORD PTR [ebp+0xc]
 10050ec:	push   DWORD PTR [ebp+0x8]
 10050ef:	push   0x1004b6b
 10050f4:	push   0x100907c
 10050f9:	call   0x10053ec
 10050fe:	add    esp,0x18
 1005101:	pop    ebp
 1005102:	ret    
 1005103:	int3   
 1005104:	int3   
 1005105:	int3   
 1005106:	int3   
 1005107:	int3   
 1005108:	mov    edi,edi
 100510a:	push   esi
 100510b:	push   0x30000
 1005110:	push   0x10000
 1005115:	xor    esi,esi
 1005117:	push   esi
 1005118:	call   0x1005404
 100511d:	add    esp,0xc
 1005120:	test   eax,eax
 1005122:	je     0x100512e
 1005124:	push   esi
 1005125:	push   esi
 1005126:	push   esi
 1005127:	push   esi
 1005128:	push   esi
 1005129:	call   0x10053f8
 100512e:	pop    esi
 100512f:	ret    
 1005130:	int3   
 1005131:	int3   
 1005132:	int3   
 1005133:	int3   
 1005134:	int3   
 1005135:	xor    eax,eax
 1005137:	ret    
 1005138:	int3   
 1005139:	int3   
 100513a:	int3   
 100513b:	int3   
 100513c:	int3   
 100513d:	xor    eax,eax
 100513f:	ret    
 1005140:	int3   
 1005141:	int3   
 1005142:	int3   
 1005143:	int3   
 1005144:	int3   
 1005145:	mov    edi,edi
 1005147:	push   ebp
 1005148:	mov    ebp,esp
 100514a:	sub    esp,0x10
 100514d:	mov    eax,ds:0x100907c
 1005152:	and    DWORD PTR [ebp-0x8],0x0
 1005156:	and    DWORD PTR [ebp-0x4],0x0
 100515a:	push   ebx
 100515b:	push   edi
 100515c:	mov    edi,0xbb40e64e
 1005161:	mov    ebx,0xffff0000
 1005166:	cmp    eax,edi
 1005168:	je     0x1005177
 100516a:	test   ebx,eax
 100516c:	je     0x1005177
 100516e:	not    eax
 1005170:	mov    ds:0x1009080,eax
 1005175:	jmp    0x10051dc
 1005177:	push   esi
 1005178:	lea    eax,[ebp-0x8]
 100517b:	push   eax
 100517c:	call   DWORD PTR ds:0x100105c
 1005182:	mov    esi,DWORD PTR [ebp-0x4]
 1005185:	xor    esi,DWORD PTR [ebp-0x8]
 1005188:	call   DWORD PTR ds:0x1001060
 100518e:	xor    esi,eax
 1005190:	call   DWORD PTR ds:0x1001064
 1005196:	xor    esi,eax
 1005198:	call   DWORD PTR ds:0x1001068
 100519e:	xor    esi,eax
 10051a0:	lea    eax,[ebp-0x10]
 10051a3:	push   eax
 10051a4:	call   DWORD PTR ds:0x100106c
 10051aa:	mov    eax,DWORD PTR [ebp-0xc]
 10051ad:	xor    eax,DWORD PTR [ebp-0x10]
 10051b0:	xor    esi,eax
 10051b2:	cmp    esi,edi
 10051b4:	jne    0x10051bd
 10051b6:	mov    esi,0xbb40e64f
 10051bb:	jmp    0x10051cd
 10051bd:	test   ebx,esi
 10051bf:	jne    0x10051cd
 10051c1:	mov    eax,esi
 10051c3:	or     eax,0x4711
 10051c8:	shl    eax,0x10
 10051cb:	or     esi,eax
 10051cd:	mov    DWORD PTR ds:0x100907c,esi
 10051d3:	not    esi
 10051d5:	mov    DWORD PTR ds:0x1009080,esi
 10051db:	pop    esi
 10051dc:	pop    edi
 10051dd:	pop    ebx
 10051de:	leave  
 10051df:	ret    
 10051e0:	int3   
 10051e1:	int3   
 10051e2:	int3   
 10051e3:	int3   
 10051e4:	int3   
 10051e5:	mov    edi,edi
 10051e7:	push   ebp
 10051e8:	mov    ebp,esp
 10051ea:	sub    esp,0x328
 10051f0:	mov    ds:0x100a1c8,eax
 10051f5:	mov    DWORD PTR ds:0x100a1c4,ecx
 10051fb:	mov    DWORD PTR ds:0x100a1c0,edx
 1005201:	mov    DWORD PTR ds:0x100a1bc,ebx
 1005207:	mov    DWORD PTR ds:0x100a1b8,esi
 100520d:	mov    DWORD PTR ds:0x100a1b4,edi
 1005213:	data16 mov WORD PTR ds:0x100a1e0,ss
 100521a:	data16 mov WORD PTR ds:0x100a1d4,cs
 1005221:	data16 mov WORD PTR ds:0x100a1b0,ds
 1005228:	data16 mov WORD PTR ds:0x100a1ac,es
 100522f:	data16 mov WORD PTR ds:0x100a1a8,fs
 1005236:	data16 mov WORD PTR ds:0x100a1a4,gs
 100523d:	pushf  
 100523e:	pop    DWORD PTR ds:0x100a1d8
 1005244:	mov    eax,DWORD PTR [ebp+0x0]
 1005247:	mov    ds:0x100a1cc,eax
 100524c:	mov    eax,DWORD PTR [ebp+0x4]
 100524f:	mov    ds:0x100a1d0,eax
 1005254:	lea    eax,[ebp+0x8]
 1005257:	mov    ds:0x100a1dc,eax
 100525c:	mov    eax,DWORD PTR [ebp-0x320]
 1005262:	mov    DWORD PTR ds:0x100a118,0x10001
 100526c:	mov    eax,ds:0x100a1d0
 1005271:	mov    ds:0x100a0cc,eax
 1005276:	mov    DWORD PTR ds:0x100a0c0,0xc0000409
 1005280:	mov    DWORD PTR ds:0x100a0c4,0x1
 100528a:	mov    eax,ds:0x100907c
 100528f:	mov    DWORD PTR [ebp-0x328],eax
 1005295:	mov    eax,ds:0x1009080
 100529a:	mov    DWORD PTR [ebp-0x324],eax
 10052a0:	call   DWORD PTR ds:0x100104c
 10052a6:	mov    ds:0x100a110,eax
 10052ab:	push   0x1
 10052ad:	call   0x1005410
 10052b2:	pop    ecx
 10052b3:	push   0x0
 10052b5:	call   DWORD PTR ds:0x1001074
 10052bb:	push   0x1001ac8
 10052c0:	call   DWORD PTR ds:0x1001050
 10052c6:	cmp    DWORD PTR ds:0x100a110,0x0
 10052cd:	jne    0x10052d7
 10052cf:	push   0x1
 10052d1:	call   0x1005410
 10052d6:	pop    ecx
 10052d7:	push   0xc0000409
 10052dc:	call   DWORD PTR ds:0x1001054
 10052e2:	push   eax
 10052e3:	call   DWORD PTR ds:0x1001058
 10052e9:	leave  
 10052ea:	ret    
 10052eb:	int3   
 10052ec:	int3   
 10052ed:	int3   
 10052ee:	int3   
 10052ef:	int3   
 10052f0:	push   0x14
 10052f2:	push   0x1007e10
 10052f7:	call   0x1005080
 10052fc:	and    DWORD PTR [ebp-0x4],0x0
 1005300:	dec    DWORD PTR [ebp+0x10]
 1005303:	js     0x100533f
 1005305:	mov    ecx,DWORD PTR [ebp+0x8]
 1005308:	sub    ecx,DWORD PTR [ebp+0xc]
 100530b:	mov    DWORD PTR [ebp+0x8],ecx
 100530e:	call   DWORD PTR [ebp+0x14]
 1005311:	jmp    0x1005300
 1005313:	mov    eax,DWORD PTR [ebp-0x14]
 1005316:	mov    DWORD PTR [ebp-0x1c],eax
 1005319:	mov    eax,DWORD PTR [ebp-0x1c]
 100531c:	mov    eax,DWORD PTR [eax]
 100531e:	mov    DWORD PTR [ebp-0x20],eax
 1005321:	mov    eax,DWORD PTR [ebp-0x20]
 1005324:	cmp    DWORD PTR [eax],0xe06d7363
 100532a:	je     0x1005337
 100532c:	mov    DWORD PTR [ebp-0x24],0x0
 1005333:	mov    eax,DWORD PTR [ebp-0x24]
 1005336:	ret    
 1005337:	call   0x10053bc
 100533c:	mov    esp,DWORD PTR [ebp-0x18]
 100533f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005346:	call   0x10050c5
 100534b:	ret    0x10
 100534e:	int3   
 100534f:	int3   
 1005350:	int3   
 1005351:	int3   
 1005352:	int3   
 1005353:	push   0xc
 1005355:	push   0x1007e30
 100535a:	call   0x1005080
 100535f:	and    DWORD PTR [ebp-0x1c],0x0
 1005363:	mov    esi,DWORD PTR [ebp+0xc]
 1005366:	mov    eax,esi
 1005368:	imul   eax,DWORD PTR [ebp+0x10]
 100536c:	add    DWORD PTR [ebp+0x8],eax
 100536f:	and    DWORD PTR [ebp-0x4],0x0
 1005373:	dec    DWORD PTR [ebp+0x10]
 1005376:	js     0x1005383
 1005378:	sub    DWORD PTR [ebp+0x8],esi
 100537b:	mov    ecx,DWORD PTR [ebp+0x8]
 100537e:	call   DWORD PTR [ebp+0x14]
 1005381:	jmp    0x1005373
 1005383:	mov    DWORD PTR [ebp-0x1c],0x1
 100538a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005391:	call   0x100539e
 1005396:	call   0x10050c5
 100539b:	ret    0x10
 100539e:	cmp    DWORD PTR [ebp-0x1c],0x0
 10053a2:	jne    0x10053b5
 10053a4:	push   DWORD PTR [ebp+0x14]
 10053a7:	push   DWORD PTR [ebp+0x10]
 10053aa:	push   DWORD PTR [ebp+0xc]
 10053ad:	push   DWORD PTR [ebp+0x8]
 10053b0:	call   0x10052f0
 10053b5:	ret    
 10053b6:	int3   
 10053b7:	int3   
 10053b8:	int3   
 10053b9:	int3   
 10053ba:	int3   
 10053bb:	int3   
 10053bc:	jmp    DWORD PTR ds:0x1001134
 10053c2:	int3   
 10053c3:	int3   
 10053c4:	int3   
 10053c5:	int3   
 10053c6:	int3   
 10053c7:	int3   
 10053c8:	jmp    DWORD PTR ds:0x10011d8
 10053ce:	int3   
 10053cf:	int3   
 10053d0:	int3   
 10053d1:	int3   
 10053d2:	int3   
 10053d3:	int3   
 10053d4:	jmp    DWORD PTR ds:0x1001130
 10053da:	int3   
 10053db:	int3   
 10053dc:	int3   
 10053dd:	int3   
 10053de:	int3   
 10053df:	int3   
 10053e0:	jmp    DWORD PTR ds:0x100112c
 10053e6:	int3   
 10053e7:	int3   
 10053e8:	int3   
 10053e9:	int3   
 10053ea:	int3   
 10053eb:	int3   
 10053ec:	jmp    DWORD PTR ds:0x1001124
 10053f2:	int3   
 10053f3:	int3   
 10053f4:	int3   
 10053f5:	int3   
 10053f6:	int3   
 10053f7:	int3   
 10053f8:	jmp    DWORD PTR ds:0x1001120
 10053fe:	int3   
 10053ff:	int3   
 1005400:	int3   
 1005401:	int3   
 1005402:	int3   
 1005403:	int3   
 1005404:	jmp    DWORD PTR ds:0x100111c
 100540a:	int3   
 100540b:	int3   
 100540c:	int3   
 100540d:	int3   
 100540e:	int3   
 100540f:	int3   
 1005410:	jmp    DWORD PTR ds:0x1001118
 1005416:	int3   
 1005417:	int3   
 1005418:	int3   
 1005419:	int3   
 100541a:	int3   
 100541b:	int3   
 100541c:	jmp    DWORD PTR ds:0x1001114
 1005422:	int3   
 1005423:	int3   
 1005424:	int3   
 1005425:	int3   
 1005426:	int3   
 1005427:	mov    edi,edi
 1005429:	push   esi
 100542a:	xor    esi,esi
 100542c:	push   esi
 100542d:	push   ecx
 100542e:	call   DWORD PTR ds:0x100103c
 1005434:	test   eax,eax
 1005436:	jne    0x1005450
 1005438:	call   DWORD PTR ds:0x1001048
 100543e:	mov    esi,eax
 1005440:	test   esi,esi
 1005442:	jle    0x1005450
 1005444:	and    esi,0xffff
 100544a:	or     esi,0x80070000
 1005450:	mov    eax,esi
 1005452:	pop    esi
 1005453:	ret    
 1005454:	int3   
 1005455:	int3   
 1005456:	int3   
 1005457:	int3   
 1005458:	int3   
 1005459:	mov    edi,edi
 100545b:	push   esi
 100545c:	mov    esi,ecx
 100545e:	cmp    DWORD PTR [esi],0x0
 1005461:	je     0x100546e
 1005463:	push   DWORD PTR [esi]
 1005465:	call   0x1004d70
 100546a:	and    DWORD PTR [esi],0x0
 100546d:	pop    ecx
 100546e:	and    DWORD PTR [esi+0x4],0x0
 1005472:	and    DWORD PTR [esi+0x8],0x0
 1005476:	pop    esi
 1005477:	ret    
 1005478:	int3   
 1005479:	int3   
 100547a:	int3   
 100547b:	int3   
 100547c:	int3   
 100547d:	mov    edi,edi
 100547f:	push   esi
 1005480:	push   edi
 1005481:	mov    esi,ecx
 1005483:	push   0x18
 1005485:	xor    edi,edi
 1005487:	lea    eax,[esi+0x14]
 100548a:	push   edi
 100548b:	push   eax
 100548c:	call   0x1004cc4
 1005491:	add    esp,0xc
 1005494:	mov    DWORD PTR [esi+0x2c],edi
 1005497:	mov    DWORD PTR [esi+0x30],edi
 100549a:	mov    DWORD PTR [esi+0x34],edi
 100549d:	pop    edi
 100549e:	mov    eax,esi
 10054a0:	pop    esi
 10054a1:	ret    
 10054a2:	int3   
 10054a3:	int3   
 10054a4:	int3   
 10054a5:	int3   
 10054a6:	int3   
 10054a7:	mov    edi,edi
 10054a9:	push   esi
 10054aa:	mov    esi,ecx
 10054ac:	call   0x100547d
 10054b1:	mov    eax,0x1000000
 10054b6:	lea    ecx,[esi+0x14]
 10054b9:	mov    DWORD PTR [esi],0x38
 10054bf:	mov    DWORD PTR [esi+0x8],eax
 10054c2:	mov    DWORD PTR [esi+0x4],eax
 10054c5:	mov    DWORD PTR [esi+0xc],0xa00
 10054cc:	mov    DWORD PTR [esi+0x10],0x1001af0
 10054d3:	call   0x1005427
 10054d8:	test   eax,eax
 10054da:	jns    0x10054e3
 10054dc:	mov    BYTE PTR ds:0x10090e8,0x1
 10054e3:	mov    eax,esi
 10054e5:	pop    esi
 10054e6:	ret    
 10054e7:	int3   
 10054e8:	int3   
 10054e9:	int3   
 10054ea:	int3   
 10054eb:	int3   
 10054ec:	mov    edi,edi
 10054ee:	push   esi
 10054ef:	mov    esi,ecx
 10054f1:	lea    eax,[esi+0x14]
 10054f4:	push   eax
 10054f5:	call   DWORD PTR ds:0x1001038
 10054fb:	lea    ecx,[esi+0x2c]
 10054fe:	pop    esi
 10054ff:	jmp    0x1005459
 1005504:	int3   
 1005505:	int3   
 1005506:	int3   
 1005507:	int3   
 1005508:	int3   
 1005509:	mov    edi,edi
 100550b:	push   ebp
 100550c:	mov    ebp,esp
 100550e:	push   ebx
 100550f:	push   esi
 1005510:	push   edi
 1005511:	mov    edi,ecx
 1005513:	lea    ebx,[edi+0x14]
 1005516:	push   ebx
 1005517:	call   DWORD PTR ds:0x1001044
 100551d:	mov    esi,DWORD PTR [ebp+0x8]
 1005520:	cmp    esi,DWORD PTR [edi+0x30]
 1005523:	jg     0x1005557
 1005525:	test   esi,esi
 1005527:	js     0x1005557
 1005529:	cmp    esi,DWORD PTR [edi+0x30]
 100552c:	jne    0x100553c
 100552e:	mov    esi,DWORD PTR [edi+0x8]
 1005531:	push   ebx
 1005532:	call   DWORD PTR ds:0x1001040
 1005538:	mov    eax,esi
 100553a:	jmp    0x1005560
 100553c:	jge    0x1005546
 100553e:	mov    eax,DWORD PTR [edi+0x2c]
 1005541:	mov    esi,DWORD PTR [eax+esi*4]
 1005544:	jmp    0x1005531
 1005546:	push   0x0
 1005548:	push   0x0
 100554a:	push   0x1
 100554c:	push   0xc000008c
 1005551:	call   DWORD PTR ds:0x10010e4
 1005557:	push   ebx
 1005558:	call   DWORD PTR ds:0x1001040
 100555e:	xor    eax,eax
 1005560:	pop    edi
 1005561:	pop    esi
 1005562:	pop    ebx
 1005563:	pop    ebp
 1005564:	ret    0x4
 1005567:	int3   
 1005568:	int3   
 1005569:	int3   
 100556a:	int3   
 100556b:	int3   
 100556c:	mov    edi,edi
 100556e:	push   ebp
 100556f:	mov    ebp,esp
 1005571:	mov    eax,DWORD PTR [ebp+0xc]
 1005574:	mul    DWORD PTR [ebp+0x10]
 1005577:	test   edx,edx
 1005579:	jne    0x1005589
 100557b:	cmp    eax,0xffffffff
 100557e:	ja     0x1005589
 1005580:	mov    ecx,DWORD PTR [ebp+0x8]
 1005583:	mov    DWORD PTR [ecx],eax
 1005585:	xor    eax,eax
 1005587:	pop    ebp
 1005588:	ret    
 1005589:	mov    eax,0x80070216
 100558e:	pop    ebp
 100558f:	ret    
 1005590:	int3   
 1005591:	int3   
 1005592:	int3   
 1005593:	int3   
 1005594:	int3   
 1005595:	mov    edi,edi
 1005597:	push   ebp
 1005598:	mov    ebp,esp
 100559a:	mov    eax,DWORD PTR [ebp+0xc]
 100559d:	mul    DWORD PTR [ebp+0x10]
 10055a0:	test   edx,edx
 10055a2:	jne    0x10055b2
 10055a4:	cmp    eax,0xffffffff
 10055a7:	ja     0x10055b2
 10055a9:	mov    ecx,DWORD PTR [ebp+0x8]
 10055ac:	mov    DWORD PTR [ecx],eax
 10055ae:	xor    eax,eax
 10055b0:	pop    ebp
 10055b1:	ret    
 10055b2:	mov    eax,0x80070216
 10055b7:	pop    ebp
 10055b8:	ret    
 10055b9:	int3   
 10055ba:	int3   
 10055bb:	int3   
 10055bc:	int3   
 10055bd:	int3   
 10055be:	mov    edi,edi
 10055c0:	push   ebp
 10055c1:	mov    ebp,esp
 10055c3:	mov    ecx,DWORD PTR [ebp+0xc]
 10055c6:	mov    edx,DWORD PTR [ebp+0x10]
 10055c9:	or     eax,0xffffffff
 10055cc:	sub    eax,ecx
 10055ce:	cmp    eax,edx
 10055d0:	jae    0x10055d9
 10055d2:	mov    eax,0x80070216
 10055d7:	pop    ebp
 10055d8:	ret    
 10055d9:	mov    eax,DWORD PTR [ebp+0x8]
 10055dc:	add    ecx,edx
 10055de:	mov    DWORD PTR [eax],ecx
 10055e0:	xor    eax,eax
 10055e2:	pop    ebp
 10055e3:	ret    
 10055e4:	int3   
 10055e5:	int3   
 10055e6:	int3   
 10055e7:	int3   
 10055e8:	int3   
 10055e9:	mov    edi,edi
 10055eb:	push   ebp
 10055ec:	mov    ebp,esp
 10055ee:	mov    ecx,DWORD PTR [ebp+0xc]
 10055f1:	mov    edx,DWORD PTR [ebp+0x10]
 10055f4:	or     eax,0xffffffff
 10055f7:	sub    eax,ecx
 10055f9:	cmp    eax,edx
 10055fb:	jae    0x1005604
 10055fd:	mov    eax,0x80070216
 1005602:	pop    ebp
 1005603:	ret    
 1005604:	mov    eax,DWORD PTR [ebp+0x8]
 1005607:	add    ecx,edx
 1005609:	mov    DWORD PTR [eax],ecx
 100560b:	xor    eax,eax
 100560d:	pop    ebp
 100560e:	ret    
 100560f:	int3   
 1005610:	int3   
 1005611:	int3   
 1005612:	int3   
 1005613:	int3   
 1005614:	cmp    BYTE PTR [ecx+0x8],0x0
 1005618:	mov    DWORD PTR [ecx],0x1001b00
 100561e:	je     0x100562f
 1005620:	cmp    DWORD PTR [ecx+0x4],0x0
 1005624:	je     0x100562f
 1005626:	push   DWORD PTR [ecx+0x4]
 1005629:	call   DWORD PTR ds:0x1001034
 100562f:	ret    
 1005630:	int3   
 1005631:	int3   
 1005632:	int3   
 1005633:	int3   
 1005634:	int3   
 1005635:	mov    edi,edi
 1005637:	push   ebp
 1005638:	mov    ebp,esp
 100563a:	push   DWORD PTR [ebp+0x8]
 100563d:	push   0x0
 100563f:	push   DWORD PTR [ecx+0x4]
 1005642:	call   DWORD PTR ds:0x1001030
 1005648:	pop    ebp
 1005649:	ret    0x4
 100564c:	int3   
 100564d:	int3   
 100564e:	int3   
 100564f:	int3   
 1005650:	int3   
 1005651:	mov    edi,edi
 1005653:	push   ebp
 1005654:	mov    ebp,esp
 1005656:	cmp    DWORD PTR [ebp+0x8],0x0
 100565a:	je     0x100566a
 100565c:	push   DWORD PTR [ebp+0x8]
 100565f:	push   0x0
 1005661:	push   DWORD PTR [ecx+0x4]
 1005664:	call   DWORD PTR ds:0x1001028
 100566a:	pop    ebp
 100566b:	ret    0x4
 100566e:	int3   
 100566f:	int3   
 1005670:	int3   
 1005671:	int3   
 1005672:	int3   
 1005673:	mov    edi,edi
 1005675:	push   ebp
 1005676:	mov    ebp,esp
 1005678:	mov    edx,DWORD PTR [ebp+0x8]
 100567b:	test   edx,edx
 100567d:	jne    0x1005688
 100567f:	push   DWORD PTR [ebp+0xc]
 1005682:	mov    eax,DWORD PTR [ecx]
 1005684:	call   DWORD PTR [eax]
 1005686:	jmp    0x10056a7
 1005688:	cmp    DWORD PTR [ebp+0xc],0x0
 100568c:	jne    0x1005698
 100568e:	mov    eax,DWORD PTR [ecx]
 1005690:	push   edx
 1005691:	call   DWORD PTR [eax+0x4]
 1005694:	xor    eax,eax
 1005696:	jmp    0x10056a7
 1005698:	push   DWORD PTR [ebp+0xc]
 100569b:	push   edx
 100569c:	push   0x0
 100569e:	push   DWORD PTR [ecx+0x4]
 10056a1:	call   DWORD PTR ds:0x100102c
 10056a7:	pop    ebp
 10056a8:	ret    0x8
 10056ab:	int3   
 10056ac:	int3   
 10056ad:	int3   
 10056ae:	int3   
 10056af:	int3   
 10056b0:	mov    edi,edi
 10056b2:	push   ebp
 10056b3:	mov    ebp,esp
 10056b5:	push   DWORD PTR [ebp+0x8]
 10056b8:	push   0x0
 10056ba:	push   DWORD PTR [ecx+0x4]
 10056bd:	call   DWORD PTR ds:0x1001024
 10056c3:	pop    ebp
 10056c4:	ret    0x4
 10056c7:	int3   
 10056c8:	int3   
 10056c9:	int3   
 10056ca:	int3   
 10056cb:	int3   
 10056cc:	mov    edi,edi
 10056ce:	push   ebp
 10056cf:	mov    ebp,esp
 10056d1:	push   esi
 10056d2:	mov    esi,ecx
 10056d4:	call   0x1005614
 10056d9:	test   BYTE PTR [ebp+0x8],0x1
 10056dd:	je     0x10056e6
 10056df:	push   esi
 10056e0:	call   0x1004b30
 10056e5:	pop    ecx
 10056e6:	mov    eax,esi
 10056e8:	pop    esi
 10056e9:	pop    ebp
 10056ea:	ret    0x4
 10056ed:	int3   
 10056ee:	int3   
 10056ef:	int3   
 10056f0:	int3   
 10056f1:	int3   
 10056f2:	mov    edi,edi
 10056f4:	push   ebp
 10056f5:	mov    ebp,esp
 10056f7:	push   esi
 10056f8:	mov    esi,DWORD PTR [ebp+0x8]
 10056fb:	push   edi
 10056fc:	push   DWORD PTR [ebp+0xc]
 10056ff:	add    esi,0x8
 1005702:	and    esi,0xfffffff8
 1005705:	lea    eax,[ebp+0x8]
 1005708:	push   esi
 1005709:	push   eax
 100570a:	mov    edi,ecx
 100570c:	call   0x100556c
 1005711:	add    esp,0xc
 1005714:	test   eax,eax
 1005716:	js     0x1005754
 1005718:	push   DWORD PTR [ebp+0x8]
 100571b:	lea    eax,[ebp+0x8]
 100571e:	push   0x10
 1005720:	push   eax
 1005721:	call   0x10055e9
 1005726:	add    esp,0xc
 1005729:	test   eax,eax
 100572b:	js     0x1005754
 100572d:	mov    ecx,DWORD PTR [edi+0x4]
 1005730:	push   DWORD PTR [ebp+0x8]
 1005733:	mov    eax,DWORD PTR [ecx]
 1005735:	call   DWORD PTR [eax]
 1005737:	mov    ecx,eax
 1005739:	test   ecx,ecx
 100573b:	je     0x1005754
 100573d:	and    DWORD PTR [ecx+0x4],0x0
 1005741:	lea    eax,[esi-0x1]
 1005744:	mov    DWORD PTR [ecx+0x8],eax
 1005747:	mov    DWORD PTR [ecx],edi
 1005749:	mov    DWORD PTR [ecx+0xc],0x1
 1005750:	mov    eax,ecx
 1005752:	jmp    0x1005756
 1005754:	xor    eax,eax
 1005756:	pop    edi
 1005757:	pop    esi
 1005758:	pop    ebp
 1005759:	ret    0x8
 100575c:	int3   
 100575d:	int3   
 100575e:	int3   
 100575f:	int3   
 1005760:	int3   
 1005761:	mov    edi,edi
 1005763:	push   ebp
 1005764:	mov    ebp,esp
 1005766:	mov    ecx,DWORD PTR [ecx+0x4]
 1005769:	mov    eax,DWORD PTR [ecx]
 100576b:	pop    ebp
 100576c:	jmp    DWORD PTR [eax+0x4]
 100576f:	int3   
 1005770:	int3   
 1005771:	int3   
 1005772:	int3   
 1005773:	int3   
 1005774:	mov    edi,edi
 1005776:	push   ebp
 1005777:	mov    ebp,esp
 1005779:	push   esi
 100577a:	mov    esi,DWORD PTR [ebp+0xc]
 100577d:	push   edi
 100577e:	push   DWORD PTR [ebp+0x10]
 1005781:	add    esi,0x8
 1005784:	and    esi,0xfffffff8
 1005787:	lea    eax,[ebp+0xc]
 100578a:	push   esi
 100578b:	push   eax
 100578c:	mov    edi,ecx
 100578e:	call   0x1005595
 1005793:	add    esp,0xc
 1005796:	test   eax,eax
 1005798:	js     0x10057cd
 100579a:	push   DWORD PTR [ebp+0xc]
 100579d:	lea    eax,[ebp+0xc]
 10057a0:	push   0x10
 10057a2:	push   eax
 10057a3:	call   0x10055be
 10057a8:	add    esp,0xc
 10057ab:	test   eax,eax
 10057ad:	js     0x10057cd
 10057af:	push   DWORD PTR [ebp+0xc]
 10057b2:	mov    ecx,DWORD PTR [edi+0x4]
 10057b5:	push   DWORD PTR [ebp+0x8]
 10057b8:	mov    eax,DWORD PTR [ecx]
 10057ba:	call   DWORD PTR [eax+0x8]
 10057bd:	mov    ecx,eax
 10057bf:	test   ecx,ecx
 10057c1:	je     0x10057cd
 10057c3:	lea    eax,[esi-0x1]
 10057c6:	mov    DWORD PTR [ecx+0x8],eax
 10057c9:	mov    eax,ecx
 10057cb:	jmp    0x10057cf
 10057cd:	xor    eax,eax
 10057cf:	pop    edi
 10057d0:	pop    esi
 10057d1:	pop    ebp
 10057d2:	ret    0xc
 10057d5:	int3   
 10057d6:	int3   
 10057d7:	int3   
 10057d8:	int3   
 10057d9:	int3   
 10057da:	xor    edx,edx
 10057dc:	lea    eax,[ecx+0x14]
 10057df:	inc    edx
 10057e0:	lock xadd DWORD PTR [eax],edx
 10057e4:	lea    eax,[ecx+0x8]
 10057e7:	ret    
 10057e8:	int3   
 10057e9:	int3   
 10057ea:	int3   
 10057eb:	int3   
 10057ec:	int3   
 10057ed:	mov    eax,ecx
 10057ef:	ret    
 10057f0:	int3   
 10057f1:	int3   
 10057f2:	int3   
 10057f3:	int3   
 10057f4:	int3   
 10057f5:	mov    edi,edi
 10057f7:	push   ebp
 10057f8:	mov    ebp,esp
 10057fa:	test   BYTE PTR [ebp+0x8],0x1
 10057fe:	push   esi
 10057ff:	mov    esi,ecx
 1005801:	mov    DWORD PTR [esi],0x1001b14
 1005807:	je     0x1005810
 1005809:	push   esi
 100580a:	call   0x1004b30
 100580f:	pop    ecx
 1005810:	mov    eax,esi
 1005812:	pop    esi
 1005813:	pop    ebp
 1005814:	ret    0x4
 1005817:	mov    eax,0x10090dc
 100581c:	jmp    0x1005821
 1005821:	push   ecx
 1005822:	push   edx
 1005823:	push   eax
 1005824:	push   0x1007e6c
 1005829:	call   0x1006e02
 100582e:	pop    edx
 100582f:	pop    ecx
 1005830:	jmp    eax
 1005832:	int3   
 1005833:	int3   
 1005834:	int3   
 1005835:	int3   
 1005836:	int3   
 1005837:	jmp    DWORD PTR ds:0x10090dc
 100583d:	int3   
 100583e:	int3   
 100583f:	int3   
 1005840:	int3   
 1005841:	int3   
 1005842:	int3   
 1005843:	int3   
 1005844:	int3   
 1005845:	int3   
 1005846:	int3   
 1005847:	int3   
 1005848:	int3   
 1005849:	int3   
 100584a:	int3   
 100584b:	int3   
 100584c:	int3   
 100584d:	int3   
 100584e:	int3   
 100584f:	int3   
 1005850:	mov    edi,edi
 1005852:	push   ebp
 1005853:	mov    ebp,esp
 1005855:	push   0xfffffffe
 1005857:	push   0x1007e50
 100585c:	push   0x10050de
 1005861:	mov    eax,fs:0x0
 1005867:	push   eax
 1005868:	add    esp,0xfffffd98
 100586e:	mov    eax,ds:0x100907c
 1005873:	xor    DWORD PTR [ebp-0x8],eax
 1005876:	xor    eax,ebp
 1005878:	mov    DWORD PTR [ebp-0x1c],eax
 100587b:	push   ebx
 100587c:	push   esi
 100587d:	push   edi
 100587e:	push   eax
 100587f:	lea    eax,[ebp-0x10]
 1005882:	mov    fs:0x0,eax
 1005888:	mov    DWORD PTR [ebp-0x250],0x0
 1005892:	mov    DWORD PTR [ebp-0x22c],0x104
 100589c:	mov    DWORD PTR [ebp-0x238],0x0
 10058a6:	mov    DWORD PTR [ebp-0x24c],0x0
 10058b0:	mov    DWORD PTR [ebp-0x23c],0x0
 10058ba:	mov    DWORD PTR [ebp-0x240],0x0
 10058c4:	mov    DWORD PTR [ebp-0x254],0x0
 10058ce:	mov    DWORD PTR [ebp-0x234],0x0
 10058d8:	mov    DWORD PTR [ebp-0x248],0x0
 10058e2:	mov    DWORD PTR [ebp-0x230],0x409
 10058ec:	mov    DWORD PTR [ebp-0x4],0x0
 10058f3:	lea    eax,[ebp-0x250]
 10058f9:	push   eax
 10058fa:	push   0x20019
 10058ff:	push   0x0
 1005901:	push   0x1001b88
 1005906:	push   0x80000002
 100590b:	call   0x10061f3
 1005910:	mov    DWORD PTR [ebp-0x244],eax
 1005916:	cmp    DWORD PTR [ebp-0x244],0x0
 100591d:	je     0x1005924
 100591f:	jmp    0x1005ea1
 1005924:	lea    ecx,[ebp-0x22c]
 100592a:	push   ecx
 100592b:	lea    edx,[ebp-0x228]
 1005931:	push   edx
 1005932:	push   0x0
 1005934:	push   0x0
 1005936:	push   0x1001848
 100593b:	mov    eax,DWORD PTR [ebp-0x250]
 1005941:	push   eax
 1005942:	call   0x100621f
 1005947:	mov    DWORD PTR [ebp-0x244],eax
 100594d:	cmp    DWORD PTR [ebp-0x244],0x0
 1005954:	je     0x100595b
 1005956:	jmp    0x1005ea1
 100595b:	push   0x1001b74
 1005960:	push   0x1001b58
 1005965:	call   DWORD PTR ds:0x10010ac
 100596b:	push   eax
 100596c:	call   DWORD PTR ds:0x10010d8
 1005972:	mov    DWORD PTR [ebp-0x240],eax
 1005978:	push   0x1001b44
 100597d:	push   0x1001b58
 1005982:	call   DWORD PTR ds:0x10010ac
 1005988:	push   eax
 1005989:	call   DWORD PTR ds:0x10010d8
 100598f:	mov    DWORD PTR [ebp-0x254],eax
 1005995:	cmp    DWORD PTR [ebp-0x240],0x0
 100599c:	je     0x10059a7
 100599e:	cmp    DWORD PTR [ebp-0x254],0x0
 10059a5:	jne    0x10059b6
 10059a7:	mov    DWORD PTR [ebp-0x248],0x1
 10059b1:	jmp    0x1005b56
 10059b6:	push   0x0
 10059b8:	push   0x0
 10059ba:	call   DWORD PTR [ebp-0x254]
 10059c0:	mov    DWORD PTR [ebp-0x238],eax
 10059c6:	mov    ecx,DWORD PTR [ebp-0x238]
 10059cc:	mov    DWORD PTR [ebp-0x22c],ecx
 10059d2:	lea    edx,[ebp-0x228]
 10059d8:	push   edx
 10059d9:	call   DWORD PTR ds:0x10010e8
 10059df:	mov    ecx,DWORD PTR [ebp-0x22c]
 10059e5:	lea    edx,[ecx+eax*1+0x2]
 10059e9:	mov    DWORD PTR [ebp-0x22c],edx
 10059ef:	cmp    DWORD PTR [ebp-0x24c],0x0
 10059f6:	je     0x1005a60
 10059f8:	mov    DWORD PTR [ebp-0x258],0x0
 1005a02:	mov    eax,DWORD PTR [ebp-0x22c]
 1005a08:	shl    eax,1
 1005a0a:	push   eax
 1005a0b:	mov    ecx,DWORD PTR [ebp-0x24c]
 1005a11:	push   ecx
 1005a12:	push   0x8
 1005a14:	call   DWORD PTR ds:0x100101c
 1005a1a:	push   eax
 1005a1b:	call   DWORD PTR ds:0x100102c
 1005a21:	mov    DWORD PTR [ebp-0x258],eax
 1005a27:	cmp    DWORD PTR [ebp-0x258],0x0
 1005a2e:	jne    0x1005a52
 1005a30:	mov    edx,DWORD PTR [ebp-0x24c]
 1005a36:	push   edx
 1005a37:	push   0x0
 1005a39:	call   DWORD PTR ds:0x100101c
 1005a3f:	push   eax
 1005a40:	call   DWORD PTR ds:0x1001028
 1005a46:	mov    DWORD PTR [ebp-0x24c],0x0
 1005a50:	jmp    0x1005a5e
 1005a52:	mov    eax,DWORD PTR [ebp-0x258]
 1005a58:	mov    DWORD PTR [ebp-0x24c],eax
 1005a5e:	jmp    0x1005a7e
 1005a60:	mov    ecx,DWORD PTR [ebp-0x22c]
 1005a66:	shl    ecx,1
 1005a68:	push   ecx
 1005a69:	push   0x8
 1005a6b:	call   DWORD PTR ds:0x100101c
 1005a71:	push   eax
 1005a72:	call   DWORD PTR ds:0x1001030
 1005a78:	mov    DWORD PTR [ebp-0x24c],eax
 1005a7e:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005a85:	je     0x1005aa1
 1005a87:	mov    edx,DWORD PTR [ebp-0x24c]
 1005a8d:	push   edx
 1005a8e:	mov    eax,DWORD PTR [ebp-0x22c]
 1005a94:	push   eax
 1005a95:	call   DWORD PTR [ebp-0x254]
 1005a9b:	mov    DWORD PTR [ebp-0x238],eax
 1005aa1:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005aa8:	je     0x1005abc
 1005aaa:	mov    ecx,DWORD PTR [ebp-0x238]
 1005ab0:	cmp    ecx,DWORD PTR [ebp-0x22c]
 1005ab6:	jae    0x10059b6
 1005abc:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005ac3:	je     0x1005ad2
 1005ac5:	mov    edx,DWORD PTR [ebp-0x24c]
 1005acb:	movzx  eax,WORD PTR [edx]
 1005ace:	test   eax,eax
 1005ad0:	jne    0x1005afa
 1005ad2:	lea    ecx,[ebp-0x228]
 1005ad8:	push   ecx
 1005ad9:	call   DWORD PTR [ebp-0x240]
 1005adf:	mov    DWORD PTR [ebp-0x234],eax
 1005ae5:	cmp    DWORD PTR [ebp-0x234],0x0
 1005aec:	jne    0x1005af8
 1005aee:	mov    DWORD PTR [ebp-0x248],0x1
 1005af8:	jmp    0x1005b56
 1005afa:	push   0xffffffff
 1005afc:	lea    edx,[ebp-0x228]
 1005b02:	push   edx
 1005b03:	push   0xffffffff
 1005b05:	mov    eax,DWORD PTR [ebp-0x24c]
 1005b0b:	push   eax
 1005b0c:	push   0x1
 1005b0e:	mov    ecx,DWORD PTR [ebp-0x230]
 1005b14:	push   ecx
 1005b15:	call   DWORD PTR ds:0x10010c4
 1005b1b:	cmp    eax,0x2
 1005b1e:	je     0x1005b4c
 1005b20:	mov    DWORD PTR [ebp-0x248],0x1
 1005b2a:	mov    edx,DWORD PTR [ebp-0x24c]
 1005b30:	push   edx
 1005b31:	push   0x0
 1005b33:	call   DWORD PTR ds:0x100101c
 1005b39:	push   eax
 1005b3a:	call   DWORD PTR ds:0x1001028
 1005b40:	mov    DWORD PTR [ebp-0x24c],0x0
 1005b4a:	jmp    0x1005b56
 1005b4c:	mov    DWORD PTR [ebp-0x234],0x1
 1005b56:	cmp    DWORD PTR [ebp-0x248],0x0
 1005b5d:	je     0x1005ea1
 1005b63:	push   0x0
 1005b65:	push   0x0
 1005b67:	push   0x1001a78
 1005b6c:	call   DWORD PTR ds:0x1001018
 1005b72:	mov    DWORD PTR [ebp-0x238],eax
 1005b78:	mov    eax,DWORD PTR [ebp-0x238]
 1005b7e:	mov    DWORD PTR [ebp-0x22c],eax
 1005b84:	cmp    DWORD PTR [ebp-0x22c],0x0
 1005b8b:	jne    0x1005baa
 1005b8d:	lea    ecx,[ebp-0x228]
 1005b93:	push   ecx
 1005b94:	push   0x1001a78
 1005b99:	call   DWORD PTR ds:0x10010c0
 1005b9f:	mov    DWORD PTR [ebp-0x234],eax
 1005ba5:	jmp    0x1005ea1
 1005baa:	mov    DWORD PTR [ebp-0x268],0x0
 1005bb4:	mov    DWORD PTR [ebp-0x264],0x0
 1005bbe:	mov    DWORD PTR [ebp-0x25c],0x0
 1005bc8:	lea    edx,[ebp-0x228]
 1005bce:	push   edx
 1005bcf:	call   DWORD PTR ds:0x10010e8
 1005bd5:	add    eax,0x1
 1005bd8:	mov    DWORD PTR [ebp-0x260],eax
 1005bde:	mov    eax,DWORD PTR [ebp-0x238]
 1005be4:	mov    DWORD PTR [ebp-0x22c],eax
 1005bea:	lea    ecx,[ebp-0x228]
 1005bf0:	push   ecx
 1005bf1:	call   DWORD PTR ds:0x10010e8
 1005bf7:	mov    edx,DWORD PTR [ebp-0x22c]
 1005bfd:	lea    eax,[edx+eax*1+0x2]
 1005c01:	mov    DWORD PTR [ebp-0x22c],eax
 1005c07:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005c0e:	je     0x1005c78
 1005c10:	mov    DWORD PTR [ebp-0x26c],0x0
 1005c1a:	mov    ecx,DWORD PTR [ebp-0x22c]
 1005c20:	shl    ecx,1
 1005c22:	push   ecx
 1005c23:	mov    edx,DWORD PTR [ebp-0x24c]
 1005c29:	push   edx
 1005c2a:	push   0x8
 1005c2c:	call   DWORD PTR ds:0x100101c
 1005c32:	push   eax
 1005c33:	call   DWORD PTR ds:0x100102c
 1005c39:	mov    DWORD PTR [ebp-0x26c],eax
 1005c3f:	cmp    DWORD PTR [ebp-0x26c],0x0
 1005c46:	jne    0x1005c6a
 1005c48:	mov    eax,DWORD PTR [ebp-0x24c]
 1005c4e:	push   eax
 1005c4f:	push   0x0
 1005c51:	call   DWORD PTR ds:0x100101c
 1005c57:	push   eax
 1005c58:	call   DWORD PTR ds:0x1001028
 1005c5e:	mov    DWORD PTR [ebp-0x24c],0x0
 1005c68:	jmp    0x1005c76
 1005c6a:	mov    ecx,DWORD PTR [ebp-0x26c]
 1005c70:	mov    DWORD PTR [ebp-0x24c],ecx
 1005c76:	jmp    0x1005c96
 1005c78:	mov    edx,DWORD PTR [ebp-0x22c]
 1005c7e:	shl    edx,1
 1005c80:	push   edx
 1005c81:	push   0x8
 1005c83:	call   DWORD PTR ds:0x100101c
 1005c89:	push   eax
 1005c8a:	call   DWORD PTR ds:0x1001030
 1005c90:	mov    DWORD PTR [ebp-0x24c],eax
 1005c96:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005c9d:	je     0x1005cbe
 1005c9f:	mov    eax,DWORD PTR [ebp-0x22c]
 1005ca5:	push   eax
 1005ca6:	mov    ecx,DWORD PTR [ebp-0x24c]
 1005cac:	push   ecx
 1005cad:	push   0x1001a78
 1005cb2:	call   DWORD PTR ds:0x1001018
 1005cb8:	mov    DWORD PTR [ebp-0x238],eax
 1005cbe:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005cc5:	je     0x1005cd9
 1005cc7:	mov    edx,DWORD PTR [ebp-0x238]
 1005ccd:	cmp    edx,DWORD PTR [ebp-0x22c]
 1005cd3:	jae    0x1005bde
 1005cd9:	mov    eax,DWORD PTR [ebp-0x24c]
 1005cdf:	mov    DWORD PTR [ebp-0x264],eax
 1005ce5:	mov    ecx,DWORD PTR [ebp-0x238]
 1005ceb:	add    ecx,0x1
 1005cee:	mov    DWORD PTR [ebp-0x25c],ecx
 1005cf4:	cmp    DWORD PTR [ebp-0x268],0x0
 1005cfb:	jne    0x1005df5
 1005d01:	mov    edx,DWORD PTR [ebp-0x25c]
 1005d07:	cmp    edx,DWORD PTR [ebp-0x260]
 1005d0d:	jb     0x1005df5
 1005d13:	mov    DWORD PTR [ebp-0x274],0x0
 1005d1d:	mov    DWORD PTR [ebp-0x270],0x0
 1005d27:	mov    WORD PTR [ebp-0x278],0x0
 1005d30:	mov    eax,DWORD PTR [ebp-0x274]
 1005d36:	mov    ecx,DWORD PTR [ebp-0x264]
 1005d3c:	mov    dx,WORD PTR [ecx+eax*2]
 1005d40:	mov    WORD PTR [ebp-0x278],dx
 1005d47:	movzx  eax,WORD PTR [ebp-0x278]
 1005d4e:	mov    ecx,DWORD PTR [ebp-0x274]
 1005d54:	movzx  edx,WORD PTR [ebp+ecx*2-0x228]
 1005d5c:	xor    ecx,ecx
 1005d5e:	cmp    eax,edx
 1005d60:	sete   cl
 1005d63:	mov    DWORD PTR [ebp-0x270],ecx
 1005d69:	cmp    DWORD PTR [ebp-0x270],0x0
 1005d70:	je     0x1005d96
 1005d72:	mov    edx,DWORD PTR [ebp-0x260]
 1005d78:	sub    edx,0x1
 1005d7b:	cmp    DWORD PTR [ebp-0x274],edx
 1005d81:	jne    0x1005d85
 1005d83:	jmp    0x1005d96
 1005d85:	mov    eax,DWORD PTR [ebp-0x274]
 1005d8b:	add    eax,0x1
 1005d8e:	mov    DWORD PTR [ebp-0x274],eax
 1005d94:	jmp    0x1005d30
 1005d96:	cmp    DWORD PTR [ebp-0x270],0x0
 1005d9d:	je     0x1005dab
 1005d9f:	mov    DWORD PTR [ebp-0x268],0x1
 1005da9:	jmp    0x1005dd2
 1005dab:	mov    ecx,DWORD PTR [ebp-0x260]
 1005db1:	sub    ecx,0x1
 1005db4:	cmp    DWORD PTR [ebp-0x274],ecx
 1005dba:	jne    0x1005dd2
 1005dbc:	movzx  edx,WORD PTR [ebp-0x278]
 1005dc3:	cmp    edx,0x3b
 1005dc6:	jne    0x1005dd2
 1005dc8:	mov    DWORD PTR [ebp-0x268],0x1
 1005dd2:	mov    eax,DWORD PTR [ebp-0x264]
 1005dd8:	add    eax,0x2
 1005ddb:	mov    DWORD PTR [ebp-0x264],eax
 1005de1:	mov    ecx,DWORD PTR [ebp-0x25c]
 1005de7:	sub    ecx,0x1
 1005dea:	mov    DWORD PTR [ebp-0x25c],ecx
 1005df0:	jmp    0x1005cf4
 1005df5:	cmp    DWORD PTR [ebp-0x268],0x0
 1005dfc:	je     0x1005e0d
 1005dfe:	mov    DWORD PTR [ebp-0x234],0x1
 1005e08:	jmp    0x1005ea1
 1005e0d:	mov    edx,DWORD PTR [ebp-0x22c]
 1005e13:	shl    edx,1
 1005e15:	push   edx
 1005e16:	push   0x8
 1005e18:	call   DWORD PTR ds:0x100101c
 1005e1e:	push   eax
 1005e1f:	call   DWORD PTR ds:0x1001030
 1005e25:	mov    DWORD PTR [ebp-0x23c],eax
 1005e2b:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005e32:	je     0x1005ea1
 1005e34:	cmp    DWORD PTR [ebp-0x23c],0x0
 1005e3b:	je     0x1005ea1
 1005e3d:	lea    eax,[ebp-0x228]
 1005e43:	push   eax
 1005e44:	mov    ecx,DWORD PTR [ebp-0x22c]
 1005e4a:	push   ecx
 1005e4b:	mov    edx,DWORD PTR [ebp-0x23c]
 1005e51:	push   edx
 1005e52:	call   0x1005f40
 1005e57:	push   0x1001b40
 1005e5c:	mov    eax,DWORD PTR [ebp-0x22c]
 1005e62:	push   eax
 1005e63:	mov    ecx,DWORD PTR [ebp-0x23c]
 1005e69:	push   ecx
 1005e6a:	call   0x1005f90
 1005e6f:	mov    edx,DWORD PTR [ebp-0x24c]
 1005e75:	push   edx
 1005e76:	mov    eax,DWORD PTR [ebp-0x22c]
 1005e7c:	push   eax
 1005e7d:	mov    ecx,DWORD PTR [ebp-0x23c]
 1005e83:	push   ecx
 1005e84:	call   0x1005f90
 1005e89:	mov    edx,DWORD PTR [ebp-0x23c]
 1005e8f:	push   edx
 1005e90:	push   0x1001a78
 1005e95:	call   DWORD PTR ds:0x10010c0
 1005e9b:	mov    DWORD PTR [ebp-0x234],eax
 1005ea1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005ea8:	call   0x1005eaf
 1005ead:	jmp    0x1005f17
 1005eaf:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005eb6:	je     0x1005ed8
 1005eb8:	mov    eax,DWORD PTR [ebp-0x24c]
 1005ebe:	push   eax
 1005ebf:	push   0x0
 1005ec1:	call   DWORD PTR ds:0x100101c
 1005ec7:	push   eax
 1005ec8:	call   DWORD PTR ds:0x1001028
 1005ece:	mov    DWORD PTR [ebp-0x24c],0x0
 1005ed8:	cmp    DWORD PTR [ebp-0x23c],0x0
 1005edf:	je     0x1005f01
 1005ee1:	mov    ecx,DWORD PTR [ebp-0x23c]
 1005ee7:	push   ecx
 1005ee8:	push   0x0
 1005eea:	call   DWORD PTR ds:0x100101c
 1005ef0:	push   eax
 1005ef1:	call   DWORD PTR ds:0x1001028
 1005ef7:	mov    DWORD PTR [ebp-0x23c],0x0
 1005f01:	cmp    DWORD PTR [ebp-0x250],0x0
 1005f08:	je     0x1005f16
 1005f0a:	mov    edx,DWORD PTR [ebp-0x250]
 1005f10:	push   edx
 1005f11:	call   0x1006abe
 1005f16:	ret    
 1005f17:	mov    eax,DWORD PTR [ebp-0x234]
 1005f1d:	mov    ecx,DWORD PTR [ebp-0x10]
 1005f20:	mov    DWORD PTR fs:0x0,ecx
 1005f27:	pop    ecx
 1005f28:	pop    edi
 1005f29:	pop    esi
 1005f2a:	pop    ebx
 1005f2b:	mov    ecx,DWORD PTR [ebp-0x1c]
 1005f2e:	xor    ecx,ebp
 1005f30:	call   0x1004b6b
 1005f35:	mov    esp,ebp
 1005f37:	pop    ebp
 1005f38:	ret    
 1005f39:	int3   
 1005f3a:	int3   
 1005f3b:	int3   
 1005f3c:	int3   
 1005f3d:	int3   
 1005f3e:	int3   
 1005f3f:	int3   
 1005f40:	mov    edi,edi
 1005f42:	push   ebp
 1005f43:	mov    ebp,esp
 1005f45:	push   ecx
 1005f46:	push   0x7fffffff
 1005f4b:	mov    eax,DWORD PTR [ebp+0xc]
 1005f4e:	push   eax
 1005f4f:	mov    ecx,DWORD PTR [ebp+0x8]
 1005f52:	push   ecx
 1005f53:	call   0x1005ff0
 1005f58:	mov    DWORD PTR [ebp-0x4],eax
 1005f5b:	cmp    DWORD PTR [ebp-0x4],0x0
 1005f5f:	jl     0x1005f7c
 1005f61:	push   0x7ffffffe
 1005f66:	mov    edx,DWORD PTR [ebp+0x10]
 1005f69:	push   edx
 1005f6a:	push   0x0
 1005f6c:	mov    eax,DWORD PTR [ebp+0xc]
 1005f6f:	push   eax
 1005f70:	mov    ecx,DWORD PTR [ebp+0x8]
 1005f73:	push   ecx
 1005f74:	call   0x10060f0
 1005f79:	mov    DWORD PTR [ebp-0x4],eax
 1005f7c:	mov    eax,DWORD PTR [ebp-0x4]
 1005f7f:	mov    esp,ebp
 1005f81:	pop    ebp
 1005f82:	ret    0xc
 1005f85:	int3   
 1005f86:	int3   
 1005f87:	int3   
 1005f88:	int3   
 1005f89:	int3   
 1005f8a:	int3   
 1005f8b:	int3   
 1005f8c:	int3   
 1005f8d:	int3   
 1005f8e:	int3   
 1005f8f:	int3   
 1005f90:	mov    edi,edi
 1005f92:	push   ebp
 1005f93:	mov    ebp,esp
 1005f95:	sub    esp,0x8
 1005f98:	push   0x7fffffff
 1005f9d:	lea    eax,[ebp-0x8]
 1005fa0:	push   eax
 1005fa1:	mov    ecx,DWORD PTR [ebp+0xc]
 1005fa4:	push   ecx
 1005fa5:	mov    edx,DWORD PTR [ebp+0x8]
 1005fa8:	push   edx
 1005fa9:	call   0x1006020
 1005fae:	mov    DWORD PTR [ebp-0x4],eax
 1005fb1:	cmp    DWORD PTR [ebp-0x4],0x0
 1005fb5:	jl     0x1005fdb
 1005fb7:	push   0x7fffffff
 1005fbc:	mov    eax,DWORD PTR [ebp+0x10]
 1005fbf:	push   eax
 1005fc0:	push   0x0
 1005fc2:	mov    ecx,DWORD PTR [ebp+0xc]
 1005fc5:	sub    ecx,DWORD PTR [ebp-0x8]
 1005fc8:	push   ecx
 1005fc9:	mov    edx,DWORD PTR [ebp-0x8]
 1005fcc:	mov    eax,DWORD PTR [ebp+0x8]
 1005fcf:	lea    ecx,[eax+edx*2]
 1005fd2:	push   ecx
 1005fd3:	call   0x10060f0
 1005fd8:	mov    DWORD PTR [ebp-0x4],eax
 1005fdb:	mov    eax,DWORD PTR [ebp-0x4]
 1005fde:	mov    esp,ebp
 1005fe0:	pop    ebp
 1005fe1:	ret    0xc
 1005fe4:	int3   
 1005fe5:	int3   
 1005fe6:	int3   
 1005fe7:	int3   
 1005fe8:	int3   
 1005fe9:	int3   
 1005fea:	int3   
 1005feb:	int3   
 1005fec:	int3   
 1005fed:	int3   
 1005fee:	int3   
 1005fef:	int3   
 1005ff0:	mov    edi,edi
 1005ff2:	push   ebp
 1005ff3:	mov    ebp,esp
 1005ff5:	push   ecx
 1005ff6:	mov    DWORD PTR [ebp-0x4],0x0
 1005ffd:	cmp    DWORD PTR [ebp+0xc],0x0
 1006001:	je     0x100600b
 1006003:	mov    eax,DWORD PTR [ebp+0xc]
 1006006:	cmp    eax,DWORD PTR [ebp+0x10]
 1006009:	jbe    0x1006012
 100600b:	mov    DWORD PTR [ebp-0x4],0x80070057
 1006012:	mov    eax,DWORD PTR [ebp-0x4]
 1006015:	mov    esp,ebp
 1006017:	pop    ebp
 1006018:	ret    0xc
 100601b:	int3   
 100601c:	int3   
 100601d:	int3   
 100601e:	int3   
 100601f:	int3   
 1006020:	mov    edi,edi
 1006022:	push   ebp
 1006023:	mov    ebp,esp
 1006025:	push   ecx
 1006026:	mov    eax,DWORD PTR [ebp+0x14]
 1006029:	push   eax
 100602a:	mov    ecx,DWORD PTR [ebp+0xc]
 100602d:	push   ecx
 100602e:	mov    edx,DWORD PTR [ebp+0x8]
 1006031:	push   edx
 1006032:	call   0x1005ff0
 1006037:	mov    DWORD PTR [ebp-0x4],eax
 100603a:	cmp    DWORD PTR [ebp-0x4],0x0
 100603e:	jl     0x1006056
 1006040:	mov    eax,DWORD PTR [ebp+0x10]
 1006043:	push   eax
 1006044:	mov    ecx,DWORD PTR [ebp+0xc]
 1006047:	push   ecx
 1006048:	mov    edx,DWORD PTR [ebp+0x8]
 100604b:	push   edx
 100604c:	call   0x1006070
 1006051:	mov    DWORD PTR [ebp-0x4],eax
 1006054:	jmp    0x100605f
 1006056:	mov    eax,DWORD PTR [ebp+0x10]
 1006059:	mov    DWORD PTR [eax],0x0
 100605f:	mov    eax,DWORD PTR [ebp-0x4]
 1006062:	mov    esp,ebp
 1006064:	pop    ebp
 1006065:	ret    0x10
 1006068:	int3   
 1006069:	int3   
 100606a:	int3   
 100606b:	int3   
 100606c:	int3   
 100606d:	int3   
 100606e:	int3   
 100606f:	int3   
 1006070:	mov    edi,edi
 1006072:	push   ebp
 1006073:	mov    ebp,esp
 1006075:	sub    esp,0x8
 1006078:	mov    DWORD PTR [ebp-0x8],0x0
 100607f:	mov    eax,DWORD PTR [ebp+0xc]
 1006082:	mov    DWORD PTR [ebp-0x4],eax
 1006085:	cmp    DWORD PTR [ebp+0xc],0x0
 1006089:	je     0x10060a9
 100608b:	mov    ecx,DWORD PTR [ebp+0x8]
 100608e:	movzx  edx,WORD PTR [ecx]
 1006091:	test   edx,edx
 1006093:	je     0x10060a9
 1006095:	mov    eax,DWORD PTR [ebp+0x8]
 1006098:	add    eax,0x2
 100609b:	mov    DWORD PTR [ebp+0x8],eax
 100609e:	mov    ecx,DWORD PTR [ebp+0xc]
 10060a1:	sub    ecx,0x1
 10060a4:	mov    DWORD PTR [ebp+0xc],ecx
 10060a7:	jmp    0x1006085
 10060a9:	cmp    DWORD PTR [ebp+0xc],0x0
 10060ad:	jne    0x10060b6
 10060af:	mov    DWORD PTR [ebp-0x8],0x80070057
 10060b6:	cmp    DWORD PTR [ebp+0x10],0x0
 10060ba:	je     0x10060d8
 10060bc:	cmp    DWORD PTR [ebp-0x8],0x0
 10060c0:	jl     0x10060cf
 10060c2:	mov    edx,DWORD PTR [ebp-0x4]
 10060c5:	sub    edx,DWORD PTR [ebp+0xc]
 10060c8:	mov    eax,DWORD PTR [ebp+0x10]
 10060cb:	mov    DWORD PTR [eax],edx
 10060cd:	jmp    0x10060d8
 10060cf:	mov    ecx,DWORD PTR [ebp+0x10]
 10060d2:	mov    DWORD PTR [ecx],0x0
 10060d8:	mov    eax,DWORD PTR [ebp-0x8]
 10060db:	mov    esp,ebp
 10060dd:	pop    ebp
 10060de:	ret    0xc
 10060e1:	int3   
 10060e2:	int3   
 10060e3:	int3   
 10060e4:	int3   
 10060e5:	int3   
 10060e6:	int3   
 10060e7:	int3   
 10060e8:	int3   
 10060e9:	int3   
 10060ea:	int3   
 10060eb:	int3   
 10060ec:	int3   
 10060ed:	int3   
 10060ee:	int3   
 10060ef:	int3   
 10060f0:	mov    edi,edi
 10060f2:	push   ebp
 10060f3:	mov    ebp,esp
 10060f5:	sub    esp,0x8
 10060f8:	mov    DWORD PTR [ebp-0x8],0x0
 10060ff:	mov    DWORD PTR [ebp-0x4],0x0
 1006106:	cmp    DWORD PTR [ebp+0xc],0x0
 100610a:	je     0x1006157
 100610c:	cmp    DWORD PTR [ebp+0x18],0x0
 1006110:	je     0x1006157
 1006112:	mov    eax,DWORD PTR [ebp+0x14]
 1006115:	movzx  ecx,WORD PTR [eax]
 1006118:	test   ecx,ecx
 100611a:	je     0x1006157
 100611c:	mov    edx,DWORD PTR [ebp+0x8]
 100611f:	mov    eax,DWORD PTR [ebp+0x14]
 1006122:	mov    cx,WORD PTR [eax]
 1006125:	mov    WORD PTR [edx],cx
 1006128:	mov    edx,DWORD PTR [ebp+0x8]
 100612b:	add    edx,0x2
 100612e:	mov    DWORD PTR [ebp+0x8],edx
 1006131:	mov    eax,DWORD PTR [ebp+0x14]
 1006134:	add    eax,0x2
 1006137:	mov    DWORD PTR [ebp+0x14],eax
 100613a:	mov    ecx,DWORD PTR [ebp+0xc]
 100613d:	sub    ecx,0x1
 1006140:	mov    DWORD PTR [ebp+0xc],ecx
 1006143:	mov    edx,DWORD PTR [ebp+0x18]
 1006146:	sub    edx,0x1
 1006149:	mov    DWORD PTR [ebp+0x18],edx
 100614c:	mov    eax,DWORD PTR [ebp-0x4]
 100614f:	add    eax,0x1
 1006152:	mov    DWORD PTR [ebp-0x4],eax
 1006155:	jmp    0x1006106
 1006157:	cmp    DWORD PTR [ebp+0xc],0x0
 100615b:	jne    0x1006176
 100615d:	mov    ecx,DWORD PTR [ebp+0x8]
 1006160:	sub    ecx,0x2
 1006163:	mov    DWORD PTR [ebp+0x8],ecx
 1006166:	mov    edx,DWORD PTR [ebp-0x4]
 1006169:	sub    edx,0x1
 100616c:	mov    DWORD PTR [ebp-0x4],edx
 100616f:	mov    DWORD PTR [ebp-0x8],0x8007007a
 1006176:	mov    eax,DWORD PTR [ebp+0x8]
 1006179:	mov    WORD PTR [eax],0x0
 100617e:	cmp    DWORD PTR [ebp+0x10],0x0
 1006182:	je     0x100618c
 1006184:	mov    ecx,DWORD PTR [ebp+0x10]
 1006187:	mov    edx,DWORD PTR [ebp-0x4]
 100618a:	mov    DWORD PTR [ecx],edx
 100618c:	mov    eax,DWORD PTR [ebp-0x8]
 100618f:	mov    esp,ebp
 1006191:	pop    ebp
 1006192:	ret    0x14
 1006195:	int3   
 1006196:	int3   
 1006197:	int3   
 1006198:	int3   
 1006199:	int3   
 100619a:	mov    edi,edi
 100619c:	push   ebp
 100619d:	mov    ebp,esp
 100619f:	mov    ecx,DWORD PTR [ebp+0x8]
 10061a2:	mov    edx,0xffff
 10061a7:	xor    eax,eax
 10061a9:	cmp    WORD PTR [ecx],dx
 10061ac:	jne    0x10061b5
 10061ae:	cmp    WORD PTR [ecx+0x2],ax
 10061b2:	jne    0x10061b5
 10061b4:	inc    eax
 10061b5:	pop    ebp
 10061b6:	ret    0x4
 10061b9:	int3   
 10061ba:	int3   
 10061bb:	int3   
 10061bc:	int3   
 10061bd:	int3   
 10061be:	ret    
 10061bf:	int3   
 10061c0:	int3   
 10061c1:	int3   
 10061c2:	int3   
 10061c3:	int3   
 10061c4:	mov    edi,edi
 10061c6:	push   ebp
 10061c7:	mov    ebp,esp
 10061c9:	push   DWORD PTR [ebp+0x14]
 10061cc:	push   DWORD PTR [ebp+0x10]
 10061cf:	push   DWORD PTR [ebp+0xc]
 10061d2:	push   DWORD PTR [ebp+0x8]
 10061d5:	push   0x1
 10061d7:	push   0x400
 10061dc:	call   DWORD PTR ds:0x10010c4
 10061e2:	sub    eax,0x2
 10061e5:	neg    eax
 10061e7:	sbb    eax,eax
 10061e9:	inc    eax
 10061ea:	pop    ebp
 10061eb:	ret    0x10
 10061ee:	int3   
 10061ef:	int3   
 10061f0:	int3   
 10061f1:	int3   
 10061f2:	int3   
 10061f3:	mov    edi,edi
 10061f5:	push   ebp
 10061f6:	mov    ebp,esp
 10061f8:	cmp    DWORD PTR ds:0x100a430,0x0
 10061ff:	je     0x1006213
 1006201:	push   DWORD PTR [ebp+0x18]
 1006204:	push   DWORD PTR [ebp+0xc]
 1006207:	push   DWORD PTR [ebp+0x8]
 100620a:	call   0x1006be9
 100620f:	pop    ebp
 1006210:	ret    0x14
 1006213:	pop    ebp
 1006214:	jmp    DWORD PTR ds:0x1001004
 100621a:	int3   
 100621b:	int3   
 100621c:	int3   
 100621d:	int3   
 100621e:	int3   
 100621f:	mov    edi,edi
 1006221:	push   ebp
 1006222:	mov    ebp,esp
 1006224:	sub    esp,0xc
 1006227:	cmp    DWORD PTR ds:0x100a430,0x0
 100622e:	je     0x1006455
 1006234:	push   ebx
 1006235:	push   esi
 1006236:	push   DWORD PTR [ebp+0x8]
 1006239:	call   0x10066ba
 100623e:	mov    ecx,DWORD PTR [ebp+0xc]
 1006241:	xor    ebx,ebx
 1006243:	test   ecx,ecx
 1006245:	je     0x100624c
 1006247:	cmp    WORD PTR [ecx],bx
 100624a:	jne    0x1006251
 100624c:	mov    ecx,0x1001df8
 1006251:	push   ecx
 1006252:	push   eax
 1006253:	call   0x100696e
 1006258:	mov    esi,eax
 100625a:	test   esi,esi
 100625c:	je     0x1006448
 1006262:	push   esi
 1006263:	call   0x100619a
 1006268:	test   eax,eax
 100626a:	jne    0x1006443
 1006270:	push   edi
 1006271:	lea    eax,[ebp+0x8]
 1006274:	push   eax
 1006275:	push   ebx
 1006276:	push   0x1001dfc
 100627b:	xor    edi,edi
 100627d:	push   esi
 100627e:	mov    DWORD PTR [ebp+0x8],ebx
 1006281:	inc    edi
 1006282:	mov    DWORD PTR [ebp-0x4],ebx
 1006285:	call   0x1007050
 100628a:	add    esp,0x10
 100628d:	push   0x4
 100628f:	pop    ebx
 1006290:	cmp    eax,edi
 1006292:	jne    0x100629f
 1006294:	mov    DWORD PTR [ebp+0xc],ebx
 1006297:	lea    eax,[ebp+0x8]
 100629a:	jmp    0x10063ce
 100629f:	push   ebx
 10062a0:	push   0x1001e14
 10062a5:	push   ebx
 10062a6:	push   esi
 10062a7:	call   0x10061c4
 10062ac:	push   0x3
 10062ae:	pop    edx
 10062af:	test   al,al
 10062b1:	je     0x10062ba
 10062b3:	mov    ecx,ebx
 10062b5:	mov    DWORD PTR [ebp+0xc],edx
 10062b8:	jmp    0x100630f
 10062ba:	push   ebx
 10062bb:	push   0x1001e20
 10062c0:	push   ebx
 10062c1:	push   esi
 10062c2:	call   0x10061c4
 10062c7:	test   al,al
 10062c9:	je     0x10063f5
 10062cf:	lea    ecx,[ebp-0x8]
 10062d2:	push   ecx
 10062d3:	xor    ecx,ecx
 10062d5:	push   ecx
 10062d6:	lea    eax,[esi+0x8]
 10062d9:	push   0x1001e2c
 10062de:	push   eax
 10062df:	call   0x1007050
 10062e4:	add    esp,0x10
 10062e7:	cmp    eax,0x1
 10062ea:	jne    0x10063f5
 10062f0:	push   0x3a
 10062f2:	pop    eax
 10062f3:	mov    ecx,ebx
 10062f5:	cmp    WORD PTR [esi+0x8],ax
 10062f9:	je     0x1006302
 10062fb:	inc    ecx
 10062fc:	cmp    WORD PTR [esi+ecx*2],ax
 1006300:	jne    0x10062fb
 1006302:	mov    edi,DWORD PTR [ebp-0x8]
 1006305:	mov    DWORD PTR [ebp+0xc],edi
 1006308:	inc    ecx
 1006309:	je     0x10063f5
 100630f:	mov    edx,esi
 1006311:	lea    edi,[edx+0x2]
 1006314:	xor    ebx,ebx
 1006316:	mov    ax,WORD PTR [edx]
 1006319:	add    edx,0x2
 100631c:	cmp    ax,bx
 100631f:	jne    0x1006316
 1006321:	sub    edx,edi
 1006323:	sar    edx,1
 1006325:	sub    edx,ecx
 1006327:	push   0x3
 1006329:	pop    edi
 100632a:	mov    eax,edx
 100632c:	xor    edx,edx
 100632e:	div    edi
 1006330:	lea    edi,[esi+ecx*2]
 1006333:	xor    ecx,ecx
 1006335:	mov    DWORD PTR [ebp+0x10],ecx
 1006338:	lea    ebx,[eax+0x1]
 100633b:	lea    eax,[ebp+0x8]
 100633e:	push   eax
 100633f:	push   ecx
 1006340:	push   0x1001e38
 1006345:	push   edi
 1006346:	mov    DWORD PTR [ebp-0xc],ebx
 1006349:	call   0x1007050
 100634e:	add    esp,0x10
 1006351:	cmp    eax,0x1
 1006354:	jne    0x10063a5
 1006356:	mov    ebx,DWORD PTR [ebp+0x10]
 1006359:	push   0x2c
 100635b:	pop    ecx
 100635c:	jmp    0x1006366
 100635e:	test   ax,ax
 1006361:	je     0x100636e
 1006363:	add    edi,0x2
 1006366:	movzx  eax,WORD PTR [edi]
 1006369:	cmp    ax,cx
 100636c:	jne    0x100635e
 100636e:	mov    al,BYTE PTR [ebp+0x8]
 1006371:	mov    BYTE PTR [ebx+esi*1],al
 1006374:	inc    ebx
 1006375:	cmp    WORD PTR [edi],cx
 1006378:	jne    0x100637d
 100637a:	add    edi,0x2
 100637d:	xor    ecx,ecx
 100637f:	cmp    WORD PTR [edi],cx
 1006382:	je     0x100639f
 1006384:	lea    eax,[ebp+0x8]
 1006387:	push   eax
 1006388:	push   ecx
 1006389:	push   0x1001e38
 100638e:	push   edi
 100638f:	call   0x1007050
 1006394:	add    esp,0x10
 1006397:	push   0x2c
 1006399:	pop    ecx
 100639a:	cmp    eax,0x1
 100639d:	je     0x1006366
 100639f:	mov    DWORD PTR [ebp+0x10],ebx
 10063a2:	mov    ebx,DWORD PTR [ebp-0xc]
 10063a5:	mov    eax,DWORD PTR [ebp+0x10]
 10063a8:	cmp    ebx,eax
 10063aa:	jne    0x10063f0
 10063ac:	mov    edx,DWORD PTR [ebp+0xc]
 10063af:	cmp    edx,0x1
 10063b2:	je     0x10063be
 10063b4:	cmp    edx,0x7
 10063b7:	je     0x10063be
 10063b9:	cmp    edx,0x2
 10063bc:	jne    0x10063cc
 10063be:	test   bl,0x1
 10063c1:	jne    0x10063f0
 10063c3:	add    ebx,0x2
 10063c6:	xor    ecx,ecx
 10063c8:	mov    WORD PTR [eax+esi*1],cx
 10063cc:	mov    eax,esi
 10063ce:	mov    edi,DWORD PTR [ebp+0xc]
 10063d1:	cmp    DWORD PTR [ebp+0x18],0x0
 10063d5:	mov    ecx,DWORD PTR [ebp+0x1c]
 10063d8:	je     0x100641d
 10063da:	cmp    DWORD PTR [ecx],ebx
 10063dc:	jb     0x1006416
 10063de:	push   ebx
 10063df:	push   eax
 10063e0:	push   DWORD PTR [ebp+0x18]
 10063e3:	call   0x100705c
 10063e8:	mov    ecx,DWORD PTR [ebp+0x1c]
 10063eb:	add    esp,0xc
 10063ee:	jmp    0x100641d
 10063f0:	push   0xd
 10063f2:	pop    ebx
 10063f3:	jmp    0x100642f
 10063f5:	mov    ebx,esi
 10063f7:	lea    ecx,[ebx+0x2]
 10063fa:	xor    edx,edx
 10063fc:	mov    ax,WORD PTR [ebx]
 10063ff:	add    ebx,0x2
 1006402:	cmp    ax,dx
 1006405:	jne    0x10063fc
 1006407:	sub    ebx,ecx
 1006409:	sar    ebx,1
 100640b:	lea    ebx,[ebx*2+0x2]
 1006412:	mov    eax,esi
 1006414:	jmp    0x10063d1
 1006416:	mov    DWORD PTR [ebp-0x4],0xea
 100641d:	mov    eax,DWORD PTR [ebp+0x14]
 1006420:	test   eax,eax
 1006422:	je     0x1006426
 1006424:	mov    DWORD PTR [eax],edi
 1006426:	test   ecx,ecx
 1006428:	je     0x100642c
 100642a:	mov    DWORD PTR [ecx],ebx
 100642c:	mov    ebx,DWORD PTR [ebp-0x4]
 100642f:	pop    edi
 1006430:	push   esi
 1006431:	xor    eax,eax
 1006433:	push   eax
 1006434:	call   DWORD PTR ds:0x100101c
 100643a:	push   eax
 100643b:	call   DWORD PTR ds:0x1001028
 1006441:	jmp    0x100644b
 1006443:	push   0x2
 1006445:	pop    ebx
 1006446:	jmp    0x1006430
 1006448:	push   0x8
 100644a:	pop    ebx
 100644b:	push   ebx
 100644c:	call   0x1006476
 1006451:	pop    esi
 1006452:	pop    ebx
 1006453:	jmp    0x100646d
 1006455:	push   DWORD PTR [ebp+0x1c]
 1006458:	push   DWORD PTR [ebp+0x18]
 100645b:	push   DWORD PTR [ebp+0x14]
 100645e:	push   DWORD PTR [ebp+0x10]
 1006461:	push   DWORD PTR [ebp+0xc]
 1006464:	push   DWORD PTR [ebp+0x8]
 1006467:	call   DWORD PTR ds:0x1001008
 100646d:	leave  
 100646e:	ret    0x18
 1006471:	int3   
 1006472:	int3   
 1006473:	int3   
 1006474:	int3   
 1006475:	int3   
 1006476:	mov    edi,edi
 1006478:	push   ebp
 1006479:	mov    ebp,esp
 100647b:	push   DWORD PTR [ebp+0x8]
 100647e:	call   DWORD PTR ds:0x10010f0
 1006484:	mov    eax,DWORD PTR [ebp+0x8]
 1006487:	pop    ebp
 1006488:	ret    0x4
 100648b:	int3   
 100648c:	int3   
 100648d:	int3   
 100648e:	int3   
 100648f:	int3   
 1006490:	mov    edi,edi
 1006492:	push   ebp
 1006493:	mov    ebp,esp
 1006495:	push   ecx
 1006496:	cmp    DWORD PTR ds:0x100a430,0x0
 100649d:	push   esi
 100649e:	mov    esi,DWORD PTR [ebp+0xc]
 10064a1:	je     0x10064ab
 10064a3:	xor    eax,eax
 10064a5:	inc    eax
 10064a6:	jmp    0x1006663
 10064ab:	push   edi
 10064ac:	call   0x10061be
 10064b1:	xor    edi,edi
 10064b3:	test   esi,esi
 10064b5:	je     0x10064cd
 10064b7:	mov    ecx,esi
 10064b9:	lea    edx,[ecx+0x2]
 10064bc:	mov    ax,WORD PTR [ecx]
 10064bf:	add    ecx,0x2
 10064c2:	cmp    ax,di
 10064c5:	jne    0x10064bc
 10064c7:	sub    ecx,edx
 10064c9:	sar    ecx,1
 10064cb:	jmp    0x10064d0
 10064cd:	push   0x3
 10064cf:	pop    ecx
 10064d0:	inc    ecx
 10064d1:	push   ebx
 10064d2:	mov    eax,0x104
 10064d7:	sub    eax,ecx
 10064d9:	push   eax
 10064da:	push   0x100a448
 10064df:	push   DWORD PTR [ebp+0x8]
 10064e2:	mov    DWORD PTR [ebp-0x4],ecx
 10064e5:	call   DWORD PTR ds:0x10010c8
 10064eb:	mov    edx,eax
 10064ed:	test   edx,edx
 10064ef:	je     0x100665f
 10064f5:	lea    eax,[edx*2+0x100a446]
 10064fc:	push   eax
 10064fd:	call   0x10061be
 1006502:	add    esp,0x4
 1006505:	push   0x5c
 1006507:	mov    ecx,edi
 1006509:	mov    ebx,edi
 100650b:	xor    edi,edi
 100650d:	pop    esi
 100650e:	cmp    eax,0x100a448
 1006513:	jbe    0x1006531
 1006515:	test   ebx,ebx
 1006517:	jne    0x1006523
 1006519:	cmp    WORD PTR [eax],0x2e
 100651d:	jne    0x100652a
 100651f:	mov    ebx,eax
 1006521:	jmp    0x100652a
 1006523:	cmp    WORD PTR [eax],si
 1006526:	jne    0x100652a
 1006528:	mov    ecx,eax
 100652a:	sub    eax,0x2
 100652d:	test   ecx,ecx
 100652f:	je     0x100650e
 1006531:	mov    esi,DWORD PTR [ebp+0xc]
 1006534:	test   ecx,ecx
 1006536:	je     0x100665f
 100653c:	add    ecx,0x2
 100653f:	add    ebx,0x2
 1006542:	test   esi,esi
 1006544:	je     0x1006558
 1006546:	mov    eax,DWORD PTR [ebp-0x4]
 1006549:	add    eax,eax
 100654b:	push   eax
 100654c:	push   esi
 100654d:	push   ecx
 100654e:	call   0x100705c
 1006553:	add    esp,0xc
 1006556:	jmp    0x1006599
 1006558:	mov    eax,ecx
 100655a:	sub    eax,0x100a448
 100655f:	sar    eax,1
 1006561:	sub    edx,eax
 1006563:	push   edx
 1006564:	push   ecx
 1006565:	push   DWORD PTR ds:0x10090c8
 100656b:	push   DWORD PTR ds:0x10090c4
 1006571:	call   0x10061c4
 1006576:	test   al,al
 1006578:	je     0x100657d
 100657a:	xor    edi,edi
 100657c:	inc    edi
 100657d:	mov    eax,DWORD PTR [ebp-0x4]
 1006580:	add    eax,eax
 1006582:	push   eax
 1006583:	push   0x1001cdc
 1006588:	push   ebx
 1006589:	call   0x100705c
 100658e:	add    esp,0xc
 1006591:	test   edi,edi
 1006593:	jne    0x100665f
 1006599:	mov    ebx,0x100a448
 100659e:	push   ebx
 100659f:	call   DWORD PTR ds:0x10010b4
 10065a5:	cmp    eax,0xffffffff
 10065a8:	je     0x100665f
 10065ae:	mov    eax,0x100a858
 10065b3:	mov    esi,ebx
 10065b5:	mov    ecx,0x82
 10065ba:	mov    edi,eax
 10065bc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10065be:	mov    ecx,eax
 10065c0:	lea    edx,[ecx+0x2]
 10065c3:	xor    ebx,ebx
 10065c5:	mov    ax,WORD PTR [ecx]
 10065c8:	add    ecx,0x2
 10065cb:	cmp    ax,bx
 10065ce:	jne    0x10065c5
 10065d0:	sub    ecx,edx
 10065d2:	sar    ecx,1
 10065d4:	push   0x5c
 10065d6:	lea    eax,[ecx*2+0x100a856]
 10065dd:	pop    ecx
 10065de:	mov    esi,0x100a858
 10065e3:	cmp    WORD PTR [eax],cx
 10065e6:	je     0x10065f1
 10065e8:	cmp    eax,esi
 10065ea:	jbe    0x10065f1
 10065ec:	sub    eax,0x2
 10065ef:	jmp    0x10065e3
 10065f1:	xor    edx,edx
 10065f3:	mov    WORD PTR [eax],dx
 10065f6:	sub    eax,esi
 10065f8:	sar    eax,1
 10065fa:	inc    eax
 10065fb:	push   esi
 10065fc:	mov    ds:0x100a434,eax
 1006601:	call   0x10061be
 1006606:	mov    eax,0x100a650
 100660b:	mov    ecx,0x82
 1006610:	mov    esi,0x100a448
 1006615:	mov    edi,eax
 1006617:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1006619:	mov    ecx,eax
 100661b:	add    esp,0x4
 100661e:	lea    edx,[ecx+0x2]
 1006621:	mov    ax,WORD PTR [ecx]
 1006624:	add    ecx,0x2
 1006627:	cmp    ax,bx
 100662a:	jne    0x1006621
 100662c:	sub    ecx,edx
 100662e:	sar    ecx,1
 1006630:	lea    edi,[ecx*2+0x100a650]
 1006637:	mov    esi,0x1001bec
 100663c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100663d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100663e:	push   0x100a650
 1006643:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
 1006645:	call   0x10061be
 100664a:	mov    eax,DWORD PTR [ebp+0x10]
 100664d:	mov    ds:0x100a43c,eax
 1006652:	xor    eax,eax
 1006654:	add    esp,0x4
 1006657:	inc    eax
 1006658:	mov    ds:0x100a430,eax
 100665d:	jmp    0x1006661
 100665f:	xor    eax,eax
 1006661:	pop    ebx
 1006662:	pop    edi
 1006663:	pop    esi
 1006664:	leave  
 1006665:	ret    0xc
 1006668:	int3   
 1006669:	int3   
 100666a:	int3   
 100666b:	int3   
 100666c:	int3   
 100666d:	mov    edi,edi
 100666f:	push   ebp
 1006670:	mov    ebp,esp
 1006672:	sub    esp,0x1c
 1006675:	push   0x1c
 1006677:	lea    eax,[ebp-0x1c]
 100667a:	push   eax
 100667b:	push   0x100666d
 1006680:	call   DWORD PTR ds:0x10010ec
 1006686:	test   eax,eax
 1006688:	jne    0x100668c
 100668a:	leave  
 100668b:	ret    
 100668c:	push   esi
 100668d:	mov    esi,DWORD PTR [ebp-0x18]
 1006690:	push   0x0
 1006692:	push   0x0
 1006694:	push   esi
 1006695:	call   0x1006490
 100669a:	test   eax,eax
 100669c:	jne    0x10066af
 100669e:	push   0x1
 10066a0:	push   0x1001ce4
 10066a5:	push   esi
 10066a6:	call   0x1006490
 10066ab:	test   eax,eax
 10066ad:	je     0x10066b2
 10066af:	xor    eax,eax
 10066b1:	inc    eax
 10066b2:	pop    esi
 10066b3:	leave  
 10066b4:	ret    
 10066b5:	int3   
 10066b6:	int3   
 10066b7:	int3   
 10066b8:	int3   
 10066b9:	int3   
 10066ba:	mov    edi,edi
 10066bc:	push   ebp
 10066bd:	mov    ebp,esp
 10066bf:	cmp    DWORD PTR ds:0x100a430,0x0
 10066c6:	jne    0x10066ce
 10066c8:	call   DWORD PTR ds:0x10010f4
 10066ce:	mov    eax,DWORD PTR [ebp+0x8]
 10066d1:	cmp    eax,0x80000000
 10066d6:	jne    0x10066df
 10066d8:	mov    eax,0x1001d00
 10066dd:	jmp    0x1006731
 10066df:	cmp    eax,0x80000001
 10066e4:	jne    0x10066ed
 10066e6:	mov    eax,0x1001d24
 10066eb:	jmp    0x1006731
 10066ed:	cmp    eax,0x80000002
 10066f2:	jne    0x10066fb
 10066f4:	mov    eax,0x1001d48
 10066f9:	jmp    0x1006731
 10066fb:	cmp    eax,0x80000003
 1006700:	jne    0x1006709
 1006702:	mov    eax,0x1001d70
 1006707:	jmp    0x1006731
 1006709:	cmp    eax,0x80000004
 100670e:	jne    0x1006717
 1006710:	mov    eax,0x1001d88
 1006715:	jmp    0x1006731
 1006717:	cmp    eax,0x80000005
 100671c:	jne    0x1006725
 100671e:	mov    eax,0x1001db4
 1006723:	jmp    0x1006731
 1006725:	cmp    eax,0x80000006
 100672a:	jne    0x1006731
 100672c:	mov    eax,0x1001ddc
 1006731:	pop    ebp
 1006732:	ret    0x4
 1006735:	int3   
 1006736:	int3   
 1006737:	int3   
 1006738:	int3   
 1006739:	int3   
 100673a:	mov    edi,edi
 100673c:	push   ebp
 100673d:	mov    ebp,esp
 100673f:	push   ebx
 1006740:	push   esi
 1006741:	push   edi
 1006742:	push   DWORD PTR [ebp+0x8]
 1006745:	call   0x10066ba
 100674a:	mov    ecx,eax
 100674c:	mov    DWORD PTR [ebp+0x8],eax
 100674f:	lea    edx,[ecx+0x2]
 1006752:	xor    ebx,ebx
 1006754:	mov    ax,WORD PTR [ecx]
 1006757:	add    ecx,0x2
 100675a:	cmp    ax,bx
 100675d:	jne    0x1006754
 100675f:	sub    ecx,edx
 1006761:	sar    ecx,1
 1006763:	lea    esi,[ecx+ecx*1]
 1006766:	mov    ecx,DWORD PTR [ebp+0xc]
 1006769:	lea    edx,[ecx+0x2]
 100676c:	mov    ax,WORD PTR [ecx]
 100676f:	add    ecx,0x2
 1006772:	cmp    ax,bx
 1006775:	jne    0x100676c
 1006777:	sub    ecx,edx
 1006779:	sar    ecx,1
 100677b:	lea    edi,[ecx+ecx*1]
 100677e:	lea    eax,[esi+0x4]
 1006781:	add    eax,edi
 1006783:	push   eax
 1006784:	push   ebx
 1006785:	call   DWORD PTR ds:0x100101c
 100678b:	push   eax
 100678c:	call   DWORD PTR ds:0x1001030
 1006792:	mov    ebx,eax
 1006794:	test   ebx,ebx
 1006796:	je     0x10067c7
 1006798:	push   esi
 1006799:	push   DWORD PTR [ebp+0x8]
 100679c:	push   ebx
 100679d:	call   0x100705c
 10067a2:	push   0x5c
 10067a4:	pop    eax
 10067a5:	shr    esi,1
 10067a7:	lea    esi,[ebx+esi*2]
 10067aa:	push   edi
 10067ab:	push   DWORD PTR [ebp+0xc]
 10067ae:	mov    WORD PTR [esi],ax
 10067b1:	add    esi,0x2
 10067b4:	push   esi
 10067b5:	call   0x100705c
 10067ba:	shr    edi,1
 10067bc:	add    esp,0x18
 10067bf:	xor    eax,eax
 10067c1:	mov    WORD PTR [esi+edi*2],ax
 10067c5:	mov    eax,ebx
 10067c7:	pop    edi
 10067c8:	pop    esi
 10067c9:	pop    ebx
 10067ca:	pop    ebp
 10067cb:	ret    0x8
 10067ce:	int3   
 10067cf:	int3   
 10067d0:	int3   
 10067d1:	int3   
 10067d2:	int3   
 10067d3:	mov    edi,edi
 10067d5:	push   ebp
 10067d6:	mov    ebp,esp
 10067d8:	push   ecx
 10067d9:	push   ecx
 10067da:	push   ebx
 10067db:	push   esi
 10067dc:	mov    esi,DWORD PTR [ebp+0x8]
 10067df:	push   edi
 10067e0:	mov    DWORD PTR [ebp-0x8],0x80
 10067e7:	lea    ecx,[esi+0x2]
 10067ea:	xor    edx,edx
 10067ec:	mov    ax,WORD PTR [esi]
 10067ef:	add    esi,0x2
 10067f2:	cmp    ax,dx
 10067f5:	jne    0x10067ec
 10067f7:	sub    esi,ecx
 10067f9:	sar    esi,1
 10067fb:	lea    ebx,[esi+0x80]
 1006801:	lea    eax,[ebx+ebx*1]
 1006804:	push   eax
 1006805:	push   edx
 1006806:	mov    DWORD PTR [ebp-0x4],ebx
 1006809:	call   DWORD PTR ds:0x100101c
 100680f:	jmp    0x100687e
 1006811:	push   0x5
 1006813:	push   0x1001be0
 1006818:	push   esi
 1006819:	push   DWORD PTR [ebp+0x8]
 100681c:	call   0x10061c4
 1006821:	test   al,al
 1006823:	je     0x1006844
 1006825:	mov    ebx,DWORD PTR ds:0x100a434
 100682b:	cmp    ebx,DWORD PTR [ebp-0x4]
 100682e:	ja     0x1006854
 1006830:	lea    eax,[ebx+ebx*1]
 1006833:	push   eax
 1006834:	push   0x100a858
 1006839:	push   edi
 100683a:	call   0x100705c
 100683f:	add    esp,0xc
 1006842:	jmp    0x1006851
 1006844:	push   ebx
 1006845:	push   edi
 1006846:	push   DWORD PTR [ebp+0x8]
 1006849:	call   DWORD PTR ds:0x1001100
 100684f:	mov    ebx,eax
 1006851:	cmp    ebx,DWORD PTR [ebp-0x4]
 1006854:	jle    0x100688b
 1006856:	mov    eax,DWORD PTR [ebp-0x8]
 1006859:	add    eax,eax
 100685b:	push   edi
 100685c:	mov    edi,DWORD PTR ds:0x100101c
 1006862:	lea    ebx,[esi+eax*1]
 1006865:	push   0x0
 1006867:	mov    DWORD PTR [ebp-0x8],eax
 100686a:	mov    DWORD PTR [ebp-0x4],ebx
 100686d:	call   edi
 100686f:	push   eax
 1006870:	call   DWORD PTR ds:0x1001028
 1006876:	lea    eax,[ebx+ebx*1]
 1006879:	push   eax
 100687a:	push   0x0
 100687c:	call   edi
 100687e:	push   eax
 100687f:	call   DWORD PTR ds:0x1001030
 1006885:	mov    edi,eax
 1006887:	test   edi,edi
 1006889:	jne    0x1006811
 100688b:	mov    eax,edi
 100688d:	pop    edi
 100688e:	pop    esi
 100688f:	pop    ebx
 1006890:	leave  
 1006891:	ret    0x4
 1006894:	int3   
 1006895:	int3   
 1006896:	int3   
 1006897:	int3   
 1006898:	int3   
 1006899:	mov    edi,edi
 100689b:	push   ebp
 100689c:	mov    ebp,esp
 100689e:	push   ebx
 100689f:	push   esi
 10068a0:	push   0x100
 10068a5:	push   0x0
 10068a7:	mov    ebx,0x80
 10068ac:	call   DWORD PTR ds:0x100101c
 10068b2:	push   eax
 10068b3:	call   DWORD PTR ds:0x1001030
 10068b9:	mov    esi,eax
 10068bb:	test   esi,esi
 10068bd:	je     0x1006961
 10068c3:	push   edi
 10068c4:	cmp    DWORD PTR [ebp+0x8],0x0
 10068c8:	je     0x1006903
 10068ca:	cmp    DWORD PTR [ebp+0xc],0x0
 10068ce:	je     0x1006903
 10068d0:	push   0x100a650
 10068d5:	push   ebx
 10068d6:	push   esi
 10068d7:	push   0x1001bf8
 10068dc:	push   DWORD PTR [ebp+0xc]
 10068df:	push   DWORD PTR [ebp+0x8]
 10068e2:	call   DWORD PTR ds:0x10010fc
 10068e8:	mov    edi,eax
 10068ea:	lea    ecx,[ebx-0x1]
 10068ed:	cmp    edi,ecx
 10068ef:	je     0x10068fe
 10068f1:	push   esi
 10068f2:	call   0x100619a
 10068f7:	test   eax,eax
 10068f9:	je     0x10068fe
 10068fb:	or     edi,0xffffffff
 10068fe:	cmp    edi,0xffffffff
 1006901:	jne    0x100691d
 1006903:	push   0x100a448
 1006908:	push   ebx
 1006909:	push   esi
 100690a:	push   0x1001bf8
 100690f:	push   DWORD PTR [ebp+0xc]
 1006912:	push   DWORD PTR [ebp+0x8]
 1006915:	call   DWORD PTR ds:0x10010fc
 100691b:	mov    edi,eax
 100691d:	cmp    DWORD PTR [ebp+0x8],0x0
 1006921:	je     0x100692c
 1006923:	cmp    DWORD PTR [ebp+0xc],0x0
 1006927:	lea    eax,[ebx-0x1]
 100692a:	jne    0x100692f
 100692c:	lea    eax,[ebx-0x2]
 100692f:	cmp    edi,eax
 1006931:	jne    0x1006960
 1006933:	push   esi
 1006934:	mov    esi,DWORD PTR ds:0x100101c
 100693a:	push   0x0
 100693c:	add    ebx,ebx
 100693e:	call   esi
 1006940:	push   eax
 1006941:	call   DWORD PTR ds:0x1001028
 1006947:	lea    eax,[ebx+ebx*1]
 100694a:	push   eax
 100694b:	push   0x0
 100694d:	call   esi
 100694f:	push   eax
 1006950:	call   DWORD PTR ds:0x1001030
 1006956:	mov    esi,eax
 1006958:	test   esi,esi
 100695a:	jne    0x10068c4
 1006960:	pop    edi
 1006961:	mov    eax,esi
 1006963:	pop    esi
 1006964:	pop    ebx
 1006965:	pop    ebp
 1006966:	ret    0x8
 1006969:	int3   
 100696a:	int3   
 100696b:	int3   
 100696c:	int3   
 100696d:	int3   
 100696e:	mov    edi,edi
 1006970:	push   ebp
 1006971:	mov    ebp,esp
 1006973:	sub    esp,0xc
 1006976:	push   ebx
 1006977:	mov    ebx,DWORD PTR [ebp+0x8]
 100697a:	push   edi
 100697b:	push   DWORD PTR [ebp+0xc]
 100697e:	push   ebx
 100697f:	call   0x1006899
 1006984:	mov    edi,eax
 1006986:	test   edi,edi
 1006988:	je     0x1006a3b
 100698e:	cmp    DWORD PTR [ebp+0xc],0x0
 1006992:	je     0x1006a3b
 1006998:	test   ebx,ebx
 100699a:	je     0x1006a3b
 10069a0:	push   esi
 10069a1:	push   edi
 10069a2:	call   0x100619a
 10069a7:	xor    edx,edx
 10069a9:	mov    DWORD PTR [ebp-0x8],edx
 10069ac:	test   eax,eax
 10069ae:	je     0x1006a0f
 10069b0:	cmp    DWORD PTR ds:0x100a43c,edx
 10069b6:	je     0x1006a0f
 10069b8:	mov    esi,ebx
 10069ba:	lea    ecx,[esi+0x2]
 10069bd:	mov    ax,WORD PTR [esi]
 10069c0:	add    esi,0x2
 10069c3:	cmp    ax,dx
 10069c6:	jne    0x10069bd
 10069c8:	sub    esi,ecx
 10069ca:	mov    ecx,DWORD PTR [ebp+0xc]
 10069cd:	sar    esi,1
 10069cf:	lea    edx,[ecx+0x2]
 10069d2:	xor    ebx,ebx
 10069d4:	mov    ax,WORD PTR [ecx]
 10069d7:	add    ecx,0x2
 10069da:	cmp    ax,bx
 10069dd:	jne    0x10069d4
 10069df:	sub    ecx,edx
 10069e1:	sar    ecx,1
 10069e3:	mov    eax,0x10090cc
 10069e8:	mov    DWORD PTR [ebp-0xc],ecx
 10069eb:	mov    DWORD PTR [ebp-0x4],eax
 10069ee:	push   DWORD PTR [eax+0x4]
 10069f1:	push   DWORD PTR [eax]
 10069f3:	push   esi
 10069f4:	push   DWORD PTR [ebp+0x8]
 10069f7:	call   0x10061c4
 10069fc:	test   al,al
 10069fe:	jne    0x1006a41
 1006a00:	mov    eax,DWORD PTR [ebp-0x4]
 1006a03:	inc    ebx
 1006a04:	add    eax,0x10
 1006a07:	mov    DWORD PTR [ebp-0x4],eax
 1006a0a:	cmp    ebx,0x1
 1006a0d:	jb     0x10069ee
 1006a0f:	xor    ebx,ebx
 1006a11:	test   edi,edi
 1006a13:	je     0x1006a38
 1006a15:	push   edi
 1006a16:	call   0x100619a
 1006a1b:	test   eax,eax
 1006a1d:	jne    0x1006a38
 1006a1f:	push   edi
 1006a20:	call   0x10067d3
 1006a25:	push   edi
 1006a26:	push   ebx
 1006a27:	mov    esi,eax
 1006a29:	call   DWORD PTR ds:0x100101c
 1006a2f:	push   eax
 1006a30:	call   DWORD PTR ds:0x1001028
 1006a36:	mov    edi,esi
 1006a38:	mov    eax,edi
 1006a3a:	pop    esi
 1006a3b:	pop    edi
 1006a3c:	pop    ebx
 1006a3d:	leave  
 1006a3e:	ret    0x8
 1006a41:	shl    ebx,0x4
 1006a44:	push   DWORD PTR [ebx+0x10090d4]
 1006a4a:	call   0x10067d3
 1006a4f:	mov    edx,eax
 1006a51:	test   edx,edx
 1006a53:	je     0x1006aa1
 1006a55:	mov    ecx,edx
 1006a57:	lea    esi,[ecx+0x2]
 1006a5a:	mov    ax,WORD PTR [ecx]
 1006a5d:	add    ecx,0x2
 1006a60:	cmp    ax,WORD PTR [ebp-0x8]
 1006a64:	jne    0x1006a5a
 1006a66:	push   DWORD PTR [ebp-0xc]
 1006a69:	sub    ecx,esi
 1006a6b:	push   DWORD PTR [ebp+0xc]
 1006a6e:	sar    ecx,1
 1006a70:	push   ecx
 1006a71:	push   edx
 1006a72:	call   0x10061c4
 1006a77:	test   al,al
 1006a79:	je     0x1006a0f
 1006a7b:	push   edi
 1006a7c:	xor    eax,eax
 1006a7e:	push   eax
 1006a7f:	call   DWORD PTR ds:0x100101c
 1006a85:	push   eax
 1006a86:	call   DWORD PTR ds:0x1001028
 1006a8c:	push   DWORD PTR [ebx+0x10090d4]
 1006a92:	push   DWORD PTR [ebp+0x8]
 1006a95:	call   0x1006899
 1006a9a:	mov    edi,eax
 1006a9c:	jmp    0x1006a0f
 1006aa1:	push   edi
 1006aa2:	xor    ebx,ebx
 1006aa4:	push   ebx
 1006aa5:	call   DWORD PTR ds:0x100101c
 1006aab:	push   eax
 1006aac:	call   DWORD PTR ds:0x1001028
 1006ab2:	mov    edi,ebx
 1006ab4:	jmp    0x1006a11
 1006ab9:	int3   
 1006aba:	int3   
 1006abb:	int3   
 1006abc:	int3   
 1006abd:	int3   
 1006abe:	mov    edi,edi
 1006ac0:	push   ebp
 1006ac1:	mov    ebp,esp
 1006ac3:	cmp    DWORD PTR ds:0x100a430,0x0
 1006aca:	je     0x1006b1e
 1006acc:	mov    eax,DWORD PTR [ebp+0x8]
 1006acf:	cmp    eax,0x80000000
 1006ad4:	je     0x1006b10
 1006ad6:	cmp    eax,0x80000001
 1006adb:	je     0x1006b10
 1006add:	cmp    eax,0x80000002
 1006ae2:	je     0x1006b10
 1006ae4:	cmp    eax,0x80000003
 1006ae9:	je     0x1006b10
 1006aeb:	cmp    eax,0x80000004
 1006af0:	je     0x1006b10
 1006af2:	cmp    eax,0x80000005
 1006af7:	je     0x1006b10
 1006af9:	cmp    eax,0x80000006
 1006afe:	je     0x1006b10
 1006b00:	push   eax
 1006b01:	push   0x0
 1006b03:	call   DWORD PTR ds:0x100101c
 1006b09:	push   eax
 1006b0a:	call   DWORD PTR ds:0x1001028
 1006b10:	push   0x0
 1006b12:	call   DWORD PTR ds:0x10010f0
 1006b18:	xor    eax,eax
 1006b1a:	pop    ebp
 1006b1b:	ret    0x4
 1006b1e:	pop    ebp
 1006b1f:	jmp    DWORD PTR ds:0x1001000
 1006b25:	int3   
 1006b26:	int3   
 1006b27:	int3   
 1006b28:	int3   
 1006b29:	int3   
 1006b2a:	mov    edi,edi
 1006b2c:	push   ebp
 1006b2d:	mov    ebp,esp
 1006b2f:	mov    ecx,DWORD PTR [ebp+0x8]
 1006b32:	push   ebx
 1006b33:	push   esi
 1006b34:	push   edi
 1006b35:	cmp    ecx,0x80000000
 1006b3b:	je     0x1006bce
 1006b41:	cmp    ecx,0x80000001
 1006b47:	je     0x1006bce
 1006b4d:	cmp    ecx,0x80000002
 1006b53:	je     0x1006bce
 1006b55:	cmp    ecx,0x80000003
 1006b5b:	je     0x1006bce
 1006b5d:	cmp    ecx,0x80000004
 1006b63:	je     0x1006bce
 1006b65:	cmp    ecx,0x80000005
 1006b6b:	je     0x1006bce
 1006b6d:	cmp    ecx,0x80000006
 1006b73:	je     0x1006bce
 1006b75:	push   ecx
 1006b76:	call   0x10066ba
 1006b7b:	mov    edi,eax
 1006b7d:	mov    ecx,edi
 1006b7f:	lea    edx,[ecx+0x2]
 1006b82:	xor    esi,esi
 1006b84:	mov    ax,WORD PTR [ecx]
 1006b87:	add    ecx,0x2
 1006b8a:	cmp    ax,si
 1006b8d:	jne    0x1006b84
 1006b8f:	sub    ecx,edx
 1006b91:	sar    ecx,1
 1006b93:	lea    ebx,[ecx*2+0x2]
 1006b9a:	push   ebx
 1006b9b:	push   esi
 1006b9c:	call   DWORD PTR ds:0x100101c
 1006ba2:	push   eax
 1006ba3:	call   DWORD PTR ds:0x1001030
 1006ba9:	mov    esi,eax
 1006bab:	test   esi,esi
 1006bad:	jne    0x1006bbc
 1006baf:	push   0x8
 1006bb1:	call   DWORD PTR ds:0x10010f0
 1006bb7:	push   0x8
 1006bb9:	pop    eax
 1006bba:	jmp    0x1006bdd
 1006bbc:	push   ebx
 1006bbd:	push   edi
 1006bbe:	push   esi
 1006bbf:	call   0x100705c
 1006bc4:	mov    eax,DWORD PTR [ebp+0xc]
 1006bc7:	add    esp,0xc
 1006bca:	mov    DWORD PTR [eax],esi
 1006bcc:	jmp    0x1006bd3
 1006bce:	mov    eax,DWORD PTR [ebp+0xc]
 1006bd1:	mov    DWORD PTR [eax],ecx
 1006bd3:	push   0x0
 1006bd5:	call   DWORD PTR ds:0x10010f0
 1006bdb:	xor    eax,eax
 1006bdd:	pop    edi
 1006bde:	pop    esi
 1006bdf:	pop    ebx
 1006be0:	pop    ebp
 1006be1:	ret    0x8
 1006be4:	int3   
 1006be5:	int3   
 1006be6:	int3   
 1006be7:	int3   
 1006be8:	int3   
 1006be9:	mov    edi,edi
 1006beb:	push   ebp
 1006bec:	mov    ebp,esp
 1006bee:	cmp    DWORD PTR ds:0x100a430,0x0
 1006bf5:	push   ebx
 1006bf6:	push   edi
 1006bf7:	je     0x1006c8c
 1006bfd:	mov    eax,DWORD PTR [ebp+0xc]
 1006c00:	test   eax,eax
 1006c02:	je     0x1006c7f
 1006c04:	xor    ebx,ebx
 1006c06:	cmp    WORD PTR [eax],bx
 1006c09:	je     0x1006c7f
 1006c0b:	push   eax
 1006c0c:	push   DWORD PTR [ebp+0x8]
 1006c0f:	call   0x100673a
 1006c14:	mov    edi,eax
 1006c16:	test   edi,edi
 1006c18:	jne    0x1006c2b
 1006c1a:	push   0x8
 1006c1c:	call   DWORD PTR ds:0x10010f0
 1006c22:	push   0x8
 1006c24:	pop    eax
 1006c25:	pop    edi
 1006c26:	pop    ebx
 1006c27:	pop    ebp
 1006c28:	ret    0xc
 1006c2b:	push   esi
 1006c2c:	push   ebx
 1006c2d:	push   edi
 1006c2e:	call   0x1006899
 1006c33:	mov    ebx,eax
 1006c35:	test   ebx,ebx
 1006c37:	je     0x1006c58
 1006c39:	push   ebx
 1006c3a:	call   0x100619a
 1006c3f:	neg    eax
 1006c41:	push   ebx
 1006c42:	sbb    esi,esi
 1006c44:	push   0x0
 1006c46:	and    esi,0x2
 1006c49:	call   DWORD PTR ds:0x100101c
 1006c4f:	push   eax
 1006c50:	call   DWORD PTR ds:0x1001028
 1006c56:	jmp    0x1006c5b
 1006c58:	push   0x8
 1006c5a:	pop    esi
 1006c5b:	test   esi,esi
 1006c5d:	je     0x1006c71
 1006c5f:	push   edi
 1006c60:	push   0x0
 1006c62:	call   DWORD PTR ds:0x100101c
 1006c68:	push   eax
 1006c69:	call   DWORD PTR ds:0x1001028
 1006c6f:	jmp    0x1006c76
 1006c71:	mov    eax,DWORD PTR [ebp+0x10]
 1006c74:	mov    DWORD PTR [eax],edi
 1006c76:	push   esi
 1006c77:	call   0x1006476
 1006c7c:	pop    esi
 1006c7d:	jmp    0x1006c25
 1006c7f:	push   DWORD PTR [ebp+0x10]
 1006c82:	push   DWORD PTR [ebp+0x8]
 1006c85:	call   0x1006b2a
 1006c8a:	jmp    0x1006c25
 1006c8c:	pop    edi
 1006c8d:	pop    ebx
 1006c8e:	pop    ebp
 1006c8f:	jmp    DWORD PTR ds:0x100100c
 1006c95:	int3   
 1006c96:	int3   
 1006c97:	int3   
 1006c98:	int3   
 1006c99:	int3   
 1006c9a:	mov    eax,ds:0x100aa60
 1006c9f:	push   esi
 1006ca0:	mov    esi,DWORD PTR ds:0x100108c
 1006ca6:	test   eax,eax
 1006ca8:	jne    0x1006cc6
 1006caa:	push   0x1001988
 1006caf:	call   DWORD PTR ds:0x10010cc
 1006cb5:	test   eax,eax
 1006cb7:	je     0x1006d11
 1006cb9:	push   eax
 1006cba:	push   0x100aa60
 1006cbf:	call   esi
 1006cc1:	mov    eax,ds:0x100aa60
 1006cc6:	cmp    DWORD PTR ds:0x100aa64,0x0
 1006ccd:	jne    0x1006cec
 1006ccf:	push   0x1001e44
 1006cd4:	push   eax
 1006cd5:	call   DWORD PTR ds:0x10010d8
 1006cdb:	test   eax,eax
 1006cdd:	je     0x1006d11
 1006cdf:	push   eax
 1006ce0:	push   0x100aa64
 1006ce5:	call   esi
 1006ce7:	mov    eax,ds:0x100aa60
 1006cec:	cmp    DWORD PTR ds:0x100aa68,0x0
 1006cf3:	jne    0x1006d0d
 1006cf5:	push   0x1001e58
 1006cfa:	push   eax
 1006cfb:	call   DWORD PTR ds:0x10010d8
 1006d01:	test   eax,eax
 1006d03:	je     0x1006d11
 1006d05:	push   eax
 1006d06:	push   0x100aa68
 1006d0b:	call   esi
 1006d0d:	xor    eax,eax
 1006d0f:	pop    esi
 1006d10:	ret    
 1006d11:	call   DWORD PTR ds:0x1001048
 1006d17:	or     eax,0x80070000
 1006d1c:	pop    esi
 1006d1d:	ret    
 1006d1e:	int3   
 1006d1f:	int3   
 1006d20:	int3   
 1006d21:	int3   
 1006d22:	int3   
 1006d23:	mov    eax,ds:0x100aa60
 1006d28:	test   eax,eax
 1006d2a:	je     0x1006d44
 1006d2c:	push   eax
 1006d2d:	call   DWORD PTR ds:0x10010dc
 1006d33:	xor    eax,eax
 1006d35:	mov    ds:0x100aa60,eax
 1006d3a:	mov    ds:0x100aa64,eax
 1006d3f:	mov    ds:0x100aa68,eax
 1006d44:	ret    
 1006d45:	int3   
 1006d46:	int3   
 1006d47:	int3   
 1006d48:	int3   
 1006d49:	int3   
 1006d4a:	mov    edi,edi
 1006d4c:	push   ebp
 1006d4d:	mov    ebp,esp
 1006d4f:	mov    eax,DWORD PTR [ebp+0xc]
 1006d52:	push   edi
 1006d53:	push   DWORD PTR [ebp+0x8]
 1006d56:	mov    edi,DWORD PTR [ebp+0x14]
 1006d59:	lea    ecx,[eax+eax*1]
 1006d5c:	mov    eax,DWORD PTR [ebp+0x10]
 1006d5f:	call   0x1006d6f
 1006d64:	pop    ecx
 1006d65:	pop    edi
 1006d66:	pop    ebp
 1006d67:	ret    0x10
 1006d6a:	int3   
 1006d6b:	int3   
 1006d6c:	int3   
 1006d6d:	int3   
 1006d6e:	int3   
 1006d6f:	mov    edi,edi
 1006d71:	push   ebp
 1006d72:	mov    ebp,esp
 1006d74:	push   esi
 1006d75:	mov    esi,eax
 1006d77:	mov    eax,0x80004005
 1006d7c:	test   edi,edi
 1006d7e:	je     0x1006df5
 1006d80:	cmp    DWORD PTR [ebp+0x8],0x0
 1006d84:	je     0x1006df5
 1006d86:	test   esi,esi
 1006d88:	jne    0x1006da6
 1006d8a:	cmp    DWORD PTR [edi],esi
 1006d8c:	jne    0x1006dfa
 1006d8e:	mov    eax,ecx
 1006d90:	and    eax,0xfffffff8
 1006d93:	test   ecx,0x7
 1006d99:	jne    0x1006d9f
 1006d9b:	test   eax,eax
 1006d9d:	jne    0x1006da2
 1006d9f:	add    eax,0x8
 1006da2:	mov    DWORD PTR [edi],eax
 1006da4:	jmp    0x1006dd7
 1006da6:	mov    edx,DWORD PTR [edi]
 1006da8:	cmp    ecx,edx
 1006daa:	ja     0x1006dfa
 1006dac:	mov    eax,esi
 1006dae:	test   edx,edx
 1006db0:	je     0x1006db9
 1006db2:	mov    BYTE PTR [eax],0x0
 1006db5:	inc    eax
 1006db6:	dec    edx
 1006db7:	jne    0x1006db2
 1006db9:	push   ecx
 1006dba:	push   DWORD PTR [ebp+0x8]
 1006dbd:	push   esi
 1006dbe:	call   0x100705c
 1006dc3:	add    esp,0xc
 1006dc6:	push   0x0
 1006dc8:	push   DWORD PTR [edi]
 1006dca:	push   esi
 1006dcb:	call   DWORD PTR ds:0x100aa64
 1006dd1:	mov    ecx,eax
 1006dd3:	test   ecx,ecx
 1006dd5:	jne    0x1006ddb
 1006dd7:	xor    eax,eax
 1006dd9:	jmp    0x1006dfa
 1006ddb:	mov    eax,DWORD PTR [edi]
 1006ddd:	test   eax,eax
 1006ddf:	je     0x1006de8
 1006de1:	mov    BYTE PTR [esi],0x0
 1006de4:	inc    esi
 1006de5:	dec    eax
 1006de6:	jne    0x1006de1
 1006de8:	push   ecx
 1006de9:	call   0x1007044
 1006dee:	or     eax,0x80070000
 1006df3:	jmp    0x1006dfa
 1006df5:	mov    eax,0x80070057
 1006dfa:	pop    esi
 1006dfb:	pop    ebp
 1006dfc:	ret    
 1006dfd:	int3   
 1006dfe:	int3   
 1006dff:	int3   
 1006e00:	int3   
 1006e01:	int3   
 1006e02:	mov    edi,edi
 1006e04:	push   ebp
 1006e05:	mov    ebp,esp
 1006e07:	sub    esp,0x44
 1006e0a:	push   ebx
 1006e0b:	mov    eax,0x1000000
 1006e10:	push   esi
 1006e11:	mov    esi,DWORD PTR [ebp+0x8]
 1006e14:	mov    edx,DWORD PTR [esi+0x8]
 1006e17:	mov    ecx,DWORD PTR [esi+0x4]
 1006e1a:	mov    ebx,DWORD PTR [esi+0xc]
 1006e1d:	add    edx,eax
 1006e1f:	push   edi
 1006e20:	mov    edi,DWORD PTR [esi+0x14]
 1006e23:	add    edi,eax
 1006e25:	add    ecx,eax
 1006e27:	mov    DWORD PTR [ebp-0x18],edx
 1006e2a:	mov    edx,DWORD PTR [esi+0x10]
 1006e2d:	add    ebx,eax
 1006e2f:	add    edx,eax
 1006e31:	mov    eax,DWORD PTR [esi+0x1c]
 1006e34:	mov    DWORD PTR [ebp-0x4],eax
 1006e37:	mov    eax,DWORD PTR [ebp+0xc]
 1006e3a:	mov    DWORD PTR [ebp-0x38],ecx
 1006e3d:	xor    ecx,ecx
 1006e3f:	mov    DWORD PTR [ebp-0xc],edi
 1006e42:	mov    DWORD PTR [ebp-0x3c],eax
 1006e45:	xor    eax,eax
 1006e47:	test   DWORD PTR [esi],0x1
 1006e4d:	lea    edi,[ebp-0x30]
 1006e50:	mov    DWORD PTR [ebp-0x44],0x24
 1006e57:	mov    DWORD PTR [ebp-0x40],esi
 1006e5a:	mov    DWORD PTR [ebp-0x34],ecx
 1006e5d:	stos   DWORD PTR es:[edi],eax
 1006e5e:	mov    DWORD PTR [ebp-0x2c],ecx
 1006e61:	mov    DWORD PTR [ebp-0x28],ecx
 1006e64:	mov    DWORD PTR [ebp-0x24],ecx
 1006e67:	jne    0x1006e88
 1006e69:	lea    eax,[ebp-0x44]
 1006e6c:	mov    DWORD PTR [ebp+0xc],eax
 1006e6f:	lea    eax,[ebp+0xc]
 1006e72:	push   eax
 1006e73:	push   0x1
 1006e75:	push   ecx
 1006e76:	push   0xc06d0057
 1006e7b:	call   DWORD PTR ds:0x10010e4
 1006e81:	xor    eax,eax
 1006e83:	jmp    0x1007038
 1006e88:	mov    eax,DWORD PTR [ebp-0x18]
 1006e8b:	mov    edi,DWORD PTR [eax]
 1006e8d:	mov    eax,DWORD PTR [ebp+0xc]
 1006e90:	sub    eax,ebx
 1006e92:	sar    eax,0x2
 1006e95:	shl    eax,0x2
 1006e98:	add    edx,eax
 1006e9a:	mov    edx,DWORD PTR [edx]
 1006e9c:	mov    DWORD PTR [ebp+0x8],eax
 1006e9f:	mov    eax,edx
 1006ea1:	shr    eax,0x1f
 1006ea4:	not    eax
 1006ea6:	and    eax,0x1
 1006ea9:	mov    DWORD PTR [ebp-0x34],eax
 1006eac:	lea    eax,[edx+0x1000002]
 1006eb2:	jne    0x1006eb7
 1006eb4:	movzx  eax,dx
 1006eb7:	mov    DWORD PTR [ebp-0x30],eax
 1006eba:	mov    eax,ds:0x1001ab8
 1006ebf:	xor    ebx,ebx
 1006ec1:	cmp    eax,ecx
 1006ec3:	je     0x1006ed6
 1006ec5:	lea    edx,[ebp-0x44]
 1006ec8:	push   edx
 1006ec9:	push   ecx
 1006eca:	call   eax
 1006ecc:	mov    ebx,eax
 1006ece:	test   ebx,ebx
 1006ed0:	jne    0x100701b
 1006ed6:	test   edi,edi
 1006ed8:	jne    0x1006f80
 1006ede:	mov    eax,ds:0x1001ab8
 1006ee3:	test   eax,eax
 1006ee5:	je     0x1006ef5
 1006ee7:	lea    ecx,[ebp-0x44]
 1006eea:	push   ecx
 1006eeb:	push   0x1
 1006eed:	call   eax
 1006eef:	mov    edi,eax
 1006ef1:	test   edi,edi
 1006ef3:	jne    0x1006f45
 1006ef5:	push   DWORD PTR [ebp-0x38]
 1006ef8:	call   DWORD PTR ds:0x1001020
 1006efe:	mov    edi,eax
 1006f00:	test   edi,edi
 1006f02:	jne    0x1006f45
 1006f04:	call   DWORD PTR ds:0x1001048
 1006f0a:	mov    DWORD PTR [ebp-0x24],eax
 1006f0d:	mov    eax,ds:0x1001abc
 1006f12:	test   eax,eax
 1006f14:	je     0x1006f24
 1006f16:	lea    ecx,[ebp-0x44]
 1006f19:	push   ecx
 1006f1a:	push   0x3
 1006f1c:	call   eax
 1006f1e:	mov    edi,eax
 1006f20:	test   edi,edi
 1006f22:	jne    0x1006f45
 1006f24:	lea    eax,[ebp-0x44]
 1006f27:	mov    DWORD PTR [ebp+0xc],eax
 1006f2a:	lea    eax,[ebp+0xc]
 1006f2d:	push   eax
 1006f2e:	push   0x1
 1006f30:	push   0x0
 1006f32:	push   0xc06d007e
 1006f37:	call   DWORD PTR ds:0x10010e4
 1006f3d:	mov    eax,DWORD PTR [ebp-0x28]
 1006f40:	jmp    0x1007038
 1006f45:	push   edi
 1006f46:	push   DWORD PTR [ebp-0x18]
 1006f49:	call   DWORD PTR ds:0x100108c
 1006f4f:	cmp    eax,edi
 1006f51:	je     0x1006f79
 1006f53:	cmp    DWORD PTR [esi+0x18],0x0
 1006f57:	je     0x1006f80
 1006f59:	push   0x8
 1006f5b:	push   0x40
 1006f5d:	call   DWORD PTR ds:0x10010f8
 1006f63:	test   eax,eax
 1006f65:	je     0x1006f80
 1006f67:	mov    DWORD PTR [eax+0x4],esi
 1006f6a:	mov    ecx,DWORD PTR ds:0x100aa6c
 1006f70:	mov    DWORD PTR [eax],ecx
 1006f72:	mov    ds:0x100aa6c,eax
 1006f77:	jmp    0x1006f80
 1006f79:	push   edi
 1006f7a:	call   DWORD PTR ds:0x10010dc
 1006f80:	mov    eax,ds:0x1001ab8
 1006f85:	mov    DWORD PTR [ebp-0x2c],edi
 1006f88:	test   eax,eax
 1006f8a:	je     0x1006f96
 1006f8c:	lea    ecx,[ebp-0x44]
 1006f8f:	push   ecx
 1006f90:	push   0x2
 1006f92:	call   eax
 1006f94:	mov    ebx,eax
 1006f96:	test   ebx,ebx
 1006f98:	jne    0x1007016
 1006f9a:	cmp    DWORD PTR [esi+0x14],ebx
 1006f9d:	je     0x1006fcb
 1006f9f:	cmp    DWORD PTR [esi+0x1c],ebx
 1006fa2:	je     0x1006fcb
 1006fa4:	mov    eax,DWORD PTR [edi+0x3c]
 1006fa7:	add    eax,edi
 1006fa9:	cmp    DWORD PTR [eax],0x4550
 1006faf:	jne    0x1006fcb
 1006fb1:	mov    ecx,DWORD PTR [ebp-0x4]
 1006fb4:	cmp    DWORD PTR [eax+0x8],ecx
 1006fb7:	jne    0x1006fcb
 1006fb9:	cmp    edi,DWORD PTR [eax+0x34]
 1006fbc:	jne    0x1006fcb
 1006fbe:	mov    eax,DWORD PTR [ebp-0xc]
 1006fc1:	mov    ecx,DWORD PTR [ebp+0x8]
 1006fc4:	mov    ebx,DWORD PTR [ecx+eax*1]
 1006fc7:	test   ebx,ebx
 1006fc9:	jne    0x1007016
 1006fcb:	push   DWORD PTR [ebp-0x30]
 1006fce:	push   edi
 1006fcf:	call   DWORD PTR ds:0x10010d8
 1006fd5:	mov    ebx,eax
 1006fd7:	test   ebx,ebx
 1006fd9:	jne    0x1007016
 1006fdb:	call   DWORD PTR ds:0x1001048
 1006fe1:	mov    DWORD PTR [ebp-0x24],eax
 1006fe4:	mov    eax,ds:0x1001abc
 1006fe9:	test   eax,eax
 1006feb:	je     0x1006ff7
 1006fed:	lea    ecx,[ebp-0x44]
 1006ff0:	push   ecx
 1006ff1:	push   0x4
 1006ff3:	call   eax
 1006ff5:	mov    ebx,eax
 1006ff7:	test   ebx,ebx
 1006ff9:	jne    0x1007016
 1006ffb:	lea    eax,[ebp-0x44]
 1006ffe:	mov    DWORD PTR [ebp+0x8],eax
 1007001:	lea    eax,[ebp+0x8]
 1007004:	push   eax
 1007005:	push   0x1
 1007007:	push   ebx
 1007008:	push   0xc06d007f
 100700d:	call   DWORD PTR ds:0x10010e4
 1007013:	mov    ebx,DWORD PTR [ebp-0x28]
 1007016:	mov    eax,DWORD PTR [ebp+0xc]
 1007019:	mov    DWORD PTR [eax],ebx
 100701b:	mov    eax,ds:0x1001ab8
 1007020:	test   eax,eax
 1007022:	je     0x1007036
 1007024:	and    DWORD PTR [ebp-0x24],0x0
 1007028:	lea    ecx,[ebp-0x44]
 100702b:	push   ecx
 100702c:	push   0x5
 100702e:	mov    DWORD PTR [ebp-0x2c],edi
 1007031:	mov    DWORD PTR [ebp-0x28],ebx
 1007034:	call   eax
 1007036:	mov    eax,ebx
 1007038:	pop    edi
 1007039:	pop    esi
 100703a:	pop    ebx
 100703b:	leave  
 100703c:	ret    0x8
 100703f:	int3   
 1007040:	int3   
 1007041:	int3   
 1007042:	int3   
 1007043:	int3   
 1007044:	jmp    DWORD PTR ds:0x1001010
 100704a:	int3   
 100704b:	int3   
 100704c:	int3   
 100704d:	int3   
 100704e:	int3   
 100704f:	int3   
 1007050:	jmp    DWORD PTR ds:0x10011d4
 1007056:	int3   
 1007057:	int3   
 1007058:	int3   
 1007059:	int3   
 100705a:	int3   
 100705b:	int3   
 100705c:	jmp    DWORD PTR ds:0x10011dc
 1007062:	int3   
 1007063:	int3   
 1007064:	int3   
 1007065:	int3   
 1007066:	int3   
 1007067:	push   DWORD PTR [ebp-0x274]
 100706d:	call   0x1004b30
 1007072:	pop    ecx
 1007073:	ret    
 1007074:	mov    edx,DWORD PTR [esp+0x8]
 1007078:	lea    eax,[edx+0xc]
 100707b:	mov    ecx,DWORD PTR [edx-0x27c]
 1007081:	xor    ecx,eax
 1007083:	call   0x1004b6b
 1007088:	mov    ecx,DWORD PTR [edx-0x4]
 100708b:	xor    ecx,eax
 100708d:	call   0x1004b6b
 1007092:	mov    eax,0x1007640
 1007097:	jmp    0x1004cb8
 100709c:	int3   
 100709d:	int3   
 100709e:	int3   
 100709f:	int3   
 10070a0:	int3   
 10070a1:	mov    ecx,DWORD PTR [ebp-0x10]
 10070a4:	jmp    0x10027d2
 10070a9:	mov    edx,DWORD PTR [esp+0x8]
 10070ad:	lea    eax,[edx+0xc]
 10070b0:	mov    ecx,DWORD PTR [edx-0x14]
 10070b3:	xor    ecx,eax
 10070b5:	call   0x1004b6b
 10070ba:	mov    eax,0x100766c
 10070bf:	jmp    0x1004cb8
 10070c4:	int3   
 10070c5:	int3   
 10070c6:	int3   
 10070c7:	int3   
 10070c8:	int3   
 10070c9:	mov    ecx,DWORD PTR [ebp-0x10]
 10070cc:	jmp    0x10027d2
 10070d1:	mov    edx,DWORD PTR [esp+0x8]
 10070d5:	lea    eax,[edx+0xc]
 10070d8:	mov    ecx,DWORD PTR [edx-0x14]
 10070db:	xor    ecx,eax
 10070dd:	call   0x1004b6b
 10070e2:	mov    eax,0x1007698
 10070e7:	jmp    0x1004cb8
 10070ec:	int3   
 10070ed:	int3   
 10070ee:	int3   
 10070ef:	int3   
 10070f0:	int3   
 10070f1:	lea    ecx,[ebp-0x24]
 10070f4:	jmp    0x1002b62
 10070f9:	lea    ecx,[ebp-0x20]
 10070fc:	jmp    0x1002b62
 1007101:	lea    ecx,[ebp-0x34]
 1007104:	jmp    0x10035b1
 1007109:	lea    ecx,[ebp-0x1c]
 100710c:	jmp    0x10027d2
 1007111:	lea    ecx,[ebp-0x1c]
 1007114:	jmp    0x1002b62
 1007119:	lea    ecx,[ebp-0x18]
 100711c:	jmp    0x10027d2
 1007121:	lea    ecx,[ebp-0x18]
 1007124:	jmp    0x1002b62
 1007129:	lea    ecx,[ebp-0x18]
 100712c:	jmp    0x10027d2
 1007131:	lea    ecx,[ebp-0x1c]
 1007134:	jmp    0x10027d2
 1007139:	lea    ecx,[ebp-0x20]
 100713c:	jmp    0x10027d2
 1007141:	lea    ecx,[ebp-0x24]
 1007144:	jmp    0x10027d2
 1007149:	mov    edx,DWORD PTR [esp+0x8]
 100714d:	lea    eax,[edx+0xc]
 1007150:	mov    ecx,DWORD PTR [edx-0x38]
 1007153:	xor    ecx,eax
 1007155:	call   0x1004b6b
 100715a:	mov    eax,0x10076e0
 100715f:	jmp    0x1004cb8
 1007164:	int3   
 1007165:	int3   
 1007166:	int3   
 1007167:	int3   
 1007168:	int3   
 1007169:	mov    ecx,DWORD PTR [ebp+0x8]
 100716c:	jmp    0x10027d2
 1007171:	mov    eax,DWORD PTR [ebp-0x10]
 1007174:	and    eax,0x1
 1007177:	je     0x1007189
 100717d:	and    DWORD PTR [ebp-0x10],0xfffffffe
 1007181:	mov    ecx,DWORD PTR [ebp+0x8]
 1007184:	jmp    0x1002b62
 1007189:	ret    
 100718a:	mov    edx,DWORD PTR [esp+0x8]
 100718e:	lea    eax,[edx+0xc]
 1007191:	mov    ecx,DWORD PTR [edx-0x14]
 1007194:	xor    ecx,eax
 1007196:	call   0x1004b6b
 100719b:	mov    eax,0x10077e4
 10071a0:	jmp    0x1004cb8
 10071a5:	int3   
 10071a6:	int3   
 10071a7:	int3   
 10071a8:	int3   
 10071a9:	int3   
 10071aa:	mov    ecx,DWORD PTR [ebp-0x10]
 10071ad:	jmp    DWORD PTR ds:0x1001188
 10071b3:	mov    edx,DWORD PTR [esp+0x8]
 10071b7:	lea    eax,[edx+0xc]
 10071ba:	mov    ecx,DWORD PTR [edx-0x14]
 10071bd:	xor    ecx,eax
 10071bf:	call   0x1004b6b
 10071c4:	mov    eax,0x1007810
 10071c9:	jmp    0x1004cb8
 10071ce:	int3   
 10071cf:	int3   
 10071d0:	int3   
 10071d1:	int3   
 10071d2:	int3   
 10071d3:	mov    ecx,DWORD PTR [ebp-0x10]
 10071d6:	jmp    DWORD PTR ds:0x1001188
 10071dc:	mov    edx,DWORD PTR [esp+0x8]
 10071e0:	lea    eax,[edx+0xc]
 10071e3:	mov    ecx,DWORD PTR [edx-0x14]
 10071e6:	xor    ecx,eax
 10071e8:	call   0x1004b6b
 10071ed:	mov    eax,0x100783c
 10071f2:	jmp    0x1004cb8
 10071f7:	int3   
 10071f8:	int3   
 10071f9:	int3   
 10071fa:	int3   
 10071fb:	int3   
 10071fc:	mov    ecx,DWORD PTR [ebp-0x10]
 10071ff:	jmp    DWORD PTR ds:0x1001188
 1007205:	mov    edx,DWORD PTR [esp+0x8]
 1007209:	lea    eax,[edx+0xc]
 100720c:	mov    ecx,DWORD PTR [edx-0x14]
 100720f:	xor    ecx,eax
 1007211:	call   0x1004b6b
 1007216:	mov    eax,0x1007868
 100721b:	jmp    0x1004cb8
 1007220:	int3   
 1007221:	int3   
 1007222:	int3   
 1007223:	int3   
 1007224:	int3   
 1007225:	mov    ecx,DWORD PTR [ebp-0x14]
 1007228:	jmp    0x10027d2
 100722d:	mov    ecx,DWORD PTR [ebp-0x10]
 1007230:	add    ecx,0x8
 1007233:	jmp    0x1002b62
 1007238:	mov    ecx,DWORD PTR [ebp-0x14]
 100723b:	jmp    0x10027d2
 1007240:	mov    ecx,DWORD PTR [ebp-0x10]
 1007243:	add    ecx,0xc
 1007246:	jmp    0x1002b62
 100724b:	mov    edx,DWORD PTR [esp+0x8]
 100724f:	lea    eax,[edx+0xc]
 1007252:	mov    ecx,DWORD PTR [edx-0x18]
 1007255:	xor    ecx,eax
 1007257:	call   0x1004b6b
 100725c:	mov    eax,0x10078ac
 1007261:	jmp    0x1004cb8
 1007266:	int3   
 1007267:	int3   
 1007268:	int3   
 1007269:	int3   
 100726a:	int3   
 100726b:	mov    ecx,DWORD PTR [ebp-0x10]
 100726e:	add    ecx,0x8
 1007271:	jmp    0x1002b62
 1007276:	mov    ecx,DWORD PTR [ebp-0x10]
 1007279:	add    ecx,0xc
 100727c:	jmp    0x1002b62
 1007281:	mov    ecx,DWORD PTR [ebp-0x14]
 1007284:	jmp    0x10027d2
 1007289:	mov    ecx,DWORD PTR [ebp-0x14]
 100728c:	jmp    0x10027d2
 1007291:	mov    edx,DWORD PTR [esp+0x8]
 1007295:	lea    eax,[edx+0xc]
 1007298:	mov    ecx,DWORD PTR [edx-0x18]
 100729b:	xor    ecx,eax
 100729d:	call   0x1004b6b
 10072a2:	mov    eax,0x10078f0
 10072a7:	jmp    0x1004cb8
 10072ac:	int3   
 10072ad:	int3   
 10072ae:	int3   
 10072af:	int3   
 10072b0:	int3   
 10072b1:	mov    edx,DWORD PTR [esp+0x8]
 10072b5:	lea    eax,[edx+0xc]
 10072b8:	mov    ecx,DWORD PTR [edx-0x18]
 10072bb:	xor    ecx,eax
 10072bd:	call   0x1004b6b
 10072c2:	mov    eax,0x1007948
 10072c7:	jmp    0x1004cb8
 10072cc:	int3   
 10072cd:	int3   
 10072ce:	int3   
 10072cf:	int3   
 10072d0:	int3   
 10072d1:	lea    ecx,[ebp-0x10]
 10072d4:	jmp    0x10027d2
 10072d9:	lea    ecx,[ebp-0x10]
 10072dc:	jmp    0x1002b62
 10072e1:	lea    ecx,[ebp-0x10]
 10072e4:	jmp    0x10027d2
 10072e9:	mov    edx,DWORD PTR [esp+0x8]
 10072ed:	lea    eax,[edx+0xc]
 10072f0:	mov    ecx,DWORD PTR [edx-0x14]
 10072f3:	xor    ecx,eax
 10072f5:	call   0x1004b6b
 10072fa:	mov    eax,0x1007984
 10072ff:	jmp    0x1004cb8
 1007304:	int3   
 1007305:	int3   
 1007306:	int3   
 1007307:	int3   
 1007308:	int3   
 1007309:	lea    ecx,[ebp-0x18]
 100730c:	jmp    0x10027d2
 1007311:	lea    ecx,[ebp-0x18]
 1007314:	jmp    0x1002b62
 1007319:	lea    ecx,[ebp-0x1c]
 100731c:	jmp    0x10027d2
 1007321:	lea    ecx,[ebp-0x1c]
 1007324:	jmp    0x1002b62
 1007329:	lea    ecx,[ebp-0x1c]
 100732c:	jmp    0x10027d2
 1007331:	lea    ecx,[ebp-0x18]
 1007334:	jmp    0x10027d2
 1007339:	mov    edx,DWORD PTR [esp+0x8]
 100733d:	lea    eax,[edx+0xc]
 1007340:	mov    ecx,DWORD PTR [edx-0x24]
 1007343:	xor    ecx,eax
 1007345:	call   0x1004b6b
 100734a:	mov    eax,0x10079cc
 100734f:	jmp    0x1004cb8
 1007354:	int3   
 1007355:	int3   
 1007356:	int3   
 1007357:	int3   
 1007358:	int3   
 1007359:	lea    ecx,[ebp-0x28]
 100735c:	jmp    0x1003ed0
 1007361:	mov    edx,DWORD PTR [esp+0x8]
 1007365:	lea    eax,[edx+0xc]
 1007368:	mov    ecx,DWORD PTR [edx-0x2c]
 100736b:	xor    ecx,eax
 100736d:	call   0x1004b6b
 1007372:	mov    eax,0x1007a38
 1007377:	jmp    0x1004cb8
 100737c:	int3   
 100737d:	int3   
 100737e:	int3   
 100737f:	int3   
 1007380:	int3   
 1007381:	lea    ecx,[ebp-0x274]
 1007387:	jmp    0x1002b62
 100738c:	lea    ecx,[ebp-0x26c]
 1007392:	jmp    0x1002b62
 1007397:	lea    ecx,[ebp-0x26c]
 100739d:	jmp    0x10027d2
 10073a2:	lea    ecx,[ebp-0x26c]
 10073a8:	jmp    0x10027d2
 10073ad:	lea    ecx,[ebp-0x26c]
 10073b3:	jmp    0x10027d2
 10073b8:	lea    ecx,[ebp-0x274]
 10073be:	jmp    0x10027d2
 10073c3:	mov    edx,DWORD PTR [esp+0x8]
 10073c7:	lea    eax,[edx+0xc]
 10073ca:	mov    ecx,DWORD PTR [edx-0x288]
 10073d0:	xor    ecx,eax
 10073d2:	call   0x1004b6b
 10073d7:	mov    ecx,DWORD PTR [edx-0x8]
 10073da:	xor    ecx,eax
 10073dc:	call   0x1004b6b
 10073e1:	mov    eax,0x1007a80
 10073e6:	jmp    0x1004cb8
 10073eb:	int3   
 10073ec:	int3   
 10073ed:	int3   
 10073ee:	int3   
 10073ef:	int3   
 10073f0:	lea    ecx,[ebp-0x18]
 10073f3:	jmp    0x10027d2
 10073f8:	lea    ecx,[ebp-0x18]
 10073fb:	jmp    0x1002b62
 1007400:	lea    ecx,[ebp-0x18]
 1007403:	jmp    0x10027d2
 1007408:	mov    edx,DWORD PTR [esp+0x8]
 100740c:	lea    eax,[edx+0xc]
 100740f:	mov    ecx,DWORD PTR [edx-0x1c]
 1007412:	xor    ecx,eax
 1007414:	call   0x1004b6b
 1007419:	mov    eax,0x1007b08
 100741e:	jmp    0x1004cb8
 1007423:	int3   
 1007424:	int3   
 1007425:	int3   
 1007426:	int3   
 1007427:	int3   
 1007428:	lea    ecx,[ebp-0x18]
 100742b:	jmp    0x10027d2
 1007430:	lea    ecx,[ebp-0x18]
 1007433:	jmp    0x1002b62
 1007438:	lea    ecx,[ebp-0x1c]
 100743b:	jmp    0x1002b62
 1007440:	lea    ecx,[ebp-0x1c]
 1007443:	jmp    0x10027d2
 1007448:	lea    ecx,[ebp-0x28]
 100744b:	jmp    0x10031ea
 1007450:	lea    ecx,[ebp-0x18]
 1007453:	jmp    0x10027d2
 1007458:	mov    edx,DWORD PTR [esp+0x8]
 100745c:	lea    eax,[edx+0xc]
 100745f:	mov    ecx,DWORD PTR [edx-0x2c]
 1007462:	xor    ecx,eax
 1007464:	call   0x1004b6b
 1007469:	mov    eax,0x1007b78
 100746e:	jmp    0x1004cb8
 1007473:	int3   
 1007474:	int3   
 1007475:	int3   
 1007476:	int3   
 1007477:	int3   
 1007478:	lea    ecx,[ebp-0x101c]
 100747e:	jmp    0x10027d2
 1007483:	lea    ecx,[ebp-0x101c]
 1007489:	jmp    0x1002b62
 100748e:	lea    ecx,[ebp-0x1028]
 1007494:	jmp    0x10031ea
 1007499:	lea    ecx,[ebp-0x101c]
 100749f:	jmp    0x10027d2
 10074a4:	mov    edx,DWORD PTR [esp+0x8]
 10074a8:	lea    eax,[edx+0xc]
 10074ab:	mov    ecx,DWORD PTR [edx-0x1038]
 10074b1:	xor    ecx,eax
 10074b3:	call   0x1004b6b
 10074b8:	mov    ecx,DWORD PTR [edx-0x8]
 10074bb:	xor    ecx,eax
 10074bd:	call   0x1004b6b
 10074c2:	mov    eax,0x1007c00
 10074c7:	jmp    0x1004cb8
 10074cc:	int3   
 10074cd:	int3   
 10074ce:	int3   
 10074cf:	int3   
 10074d0:	int3   
 10074d1:	push   DWORD PTR [ebp+0x8]
 10074d4:	push   DWORD PTR [ebp-0x10]
 10074d7:	call   0x100331c
 10074dc:	pop    ecx
 10074dd:	pop    ecx
 10074de:	ret    
 10074df:	mov    edx,DWORD PTR [esp+0x8]
 10074e3:	lea    eax,[edx+0xc]
 10074e6:	mov    ecx,DWORD PTR [edx-0x14]
 10074e9:	xor    ecx,eax
 10074eb:	call   0x1004b6b
 10074f0:	mov    eax,0x1007c5c
 10074f5:	jmp    0x1004cb8
 10074fa:	int3   
 10074fb:	int3   
 10074fc:	int3   
 10074fd:	int3   
 10074fe:	int3   
 10074ff:	mov    edx,DWORD PTR [esp+0x8]
 1007503:	lea    eax,[edx+0xc]
 1007506:	mov    ecx,DWORD PTR [edx-0x14]
 1007509:	xor    ecx,eax
 100750b:	call   0x1004b6b
 1007510:	mov    eax,0x1007cb4
 1007515:	jmp    0x1004cb8
 100751a:	int3   
 100751b:	int3   
 100751c:	int3   
 100751d:	int3   
 100751e:	int3   
 100751f:	lea    ecx,[ebp-0x18]
 1007522:	jmp    DWORD PTR ds:0x1001188
 1007528:	mov    edx,DWORD PTR [esp+0x8]
 100752c:	lea    eax,[edx+0xc]
 100752f:	mov    ecx,DWORD PTR [edx-0x1c]
 1007532:	xor    ecx,eax
 1007534:	call   0x1004b6b
 1007539:	mov    eax,0x1007ce0
 100753e:	jmp    0x1004cb8
 1007543:	int3   
 1007544:	int3   
 1007545:	int3   
 1007546:	int3   
 1007547:	int3   
 1007548:	push   DWORD PTR [ebp+0x8]
 100754b:	push   DWORD PTR [ebp-0x10]
 100754e:	call   0x100331c
 1007553:	pop    ecx
 1007554:	pop    ecx
 1007555:	ret    
 1007556:	mov    edx,DWORD PTR [esp+0x8]
 100755a:	lea    eax,[edx+0xc]
 100755d:	mov    ecx,DWORD PTR [edx-0x14]
 1007560:	xor    ecx,eax
 1007562:	call   0x1004b6b
 1007567:	mov    eax,0x1007d0c
 100756c:	jmp    0x1004cb8
 1007571:	int3   
 1007572:	int3   
 1007573:	int3   
 1007574:	int3   
 1007575:	int3   
 1007576:	push   DWORD PTR [ebp+0x8]
 1007579:	push   DWORD PTR [ebp-0x10]
 100757c:	call   0x100331c
 1007581:	pop    ecx
 1007582:	pop    ecx
 1007583:	ret    
 1007584:	mov    edx,DWORD PTR [esp+0x8]
 1007588:	lea    eax,[edx+0xc]
 100758b:	mov    ecx,DWORD PTR [edx-0x14]
 100758e:	xor    ecx,eax
 1007590:	call   0x1004b6b
 1007595:	mov    eax,0x1007d38
 100759a:	jmp    0x1004cb8
 100759f:	int3   
 10075a0:	int3   
 10075a1:	int3   
 10075a2:	int3   
 10075a3:	int3   
 10075a4:	mov    ecx,0x100a3e4
 10075a9:	call   0x10054a7
 10075ae:	push   0x100760d
 10075b3:	call   0x1004e87
 10075b8:	pop    ecx
 10075b9:	ret    
 10075ba:	int3   
 10075bb:	int3   
 10075bc:	int3   
 10075bd:	int3   
 10075be:	int3   
 10075bf:	call   DWORD PTR ds:0x100101c
 10075c5:	push   0x100761c
 10075ca:	mov    DWORD PTR ds:0x100a41c,0x1001b00
 10075d4:	mov    ds:0x100a420,eax
 10075d9:	mov    BYTE PTR ds:0x100a424,0x0
 10075e0:	call   0x1004e87
 10075e5:	pop    ecx
 10075e6:	ret    
 10075e7:	int3   
 10075e8:	int3   
 10075e9:	int3   
 10075ea:	int3   
 10075eb:	int3   
 10075ec:	push   0x100762b
 10075f1:	call   0x1004e87
 10075f6:	pop    ecx
 10075f7:	ret    
 10075f8:	int3   
 10075f9:	int3   
 10075fa:	int3   
 10075fb:	int3   
 10075fc:	int3   
 10075fd:	call   0x100666d
 1007602:	mov    ds:0x100a440,eax
 1007607:	ret    
 1007608:	int3   
 1007609:	int3   
 100760a:	int3   
 100760b:	int3   
 100760c:	int3   
 100760d:	mov    ecx,0x100a3e4
 1007612:	jmp    0x10054ec
 1007617:	int3   
 1007618:	int3   
 1007619:	int3   
 100761a:	int3   
 100761b:	int3   
 100761c:	mov    ecx,0x100a41c
 1007621:	jmp    0x1005614
 1007626:	int3   
 1007627:	int3   
 1007628:	int3   
 1007629:	int3   
 100762a:	int3   
 100762b:	mov    DWORD PTR ds:0x10090a8,0x1001b14
 1007635:	ret    
 1007636:	int3   
 1007637:	int3   
 1007638:	(bad)  
 1007639:	(bad)  
 100763a:	(bad)  
 100763b:	jmp    DWORD PTR [edi+0x70]
 100763e:	add    BYTE PTR [ecx],al
 1007640:	and    al,BYTE PTR ds:0x11993
 1007646:	add    BYTE PTR [eax],al
 1007648:	cmp    BYTE PTR [esi+0x0],dh
 100764b:	add    DWORD PTR [eax],eax
	...
 1007661:	add    BYTE PTR [eax],al
 1007663:	add    bh,bh
 1007665:	(bad)  
 1007666:	(bad)  
 1007667:	jmp    DWORD PTR [ecx+0x22010070]
 100766d:	add    eax,0x11993
 1007672:	add    BYTE PTR [eax],al
 1007674:	fs jbe 0x1007677
 1007677:	add    DWORD PTR [eax],eax
	...
 100768d:	add    BYTE PTR [eax],al
 100768f:	add    bh,bh
 1007691:	(bad)  
 1007692:	(bad)  
 1007693:	dec    ecx
 1007695:	jo     0x1007697
 1007697:	add    DWORD PTR [edx],esp
 1007699:	add    eax,0x11993
 100769e:	add    BYTE PTR [eax],al
 10076a0:	nop
 10076a1:	jbe    0x10076a3
 10076a3:	add    DWORD PTR [eax],eax
	...
 10076c5:	add    BYTE PTR [eax],al
 10076c7:	add    BYTE PTR [ebp+0x31],bh
 10076ca:	add    BYTE PTR [ecx],al
 10076cc:	add    BYTE PTR [eax],al
 10076ce:	add    BYTE PTR [eax],al
 10076d0:	or     eax,DWORD PTR [eax]
 10076d2:	add    BYTE PTR [eax],al
 10076d4:	or     al,0x0
 10076d6:	add    BYTE PTR [eax],al
 10076d8:	add    DWORD PTR [eax],eax
 10076da:	add    BYTE PTR [eax],al
 10076dc:	mov    esp,0x22010076
 10076e1:	add    eax,0xd1993
 10076e6:	add    BYTE PTR [eax],al
 10076e8:	add    al,0x77
 10076ea:	add    BYTE PTR [ecx],al
 10076ec:	add    DWORD PTR [eax],eax
 10076ee:	add    BYTE PTR [eax],al
 10076f0:	int3   
 10076f1:	jbe    0x10076f3
 10076f3:	add    DWORD PTR [eax],eax
	...
 1007701:	add    BYTE PTR [eax],al
 1007703:	add    bh,bh
 1007705:	(bad)  
 1007706:	(bad)  
 1007707:	inc    DWORD PTR [eax]
 1007709:	add    BYTE PTR [eax],al
 100770b:	add    BYTE PTR [eax],al
 100770d:	add    BYTE PTR [eax],al
 100770f:	add    cl,dh
 1007711:	jo     0x1007713
 1007713:	add    DWORD PTR [ecx],eax
 1007715:	add    BYTE PTR [eax],al
 1007717:	add    cl,bh
 1007719:	jo     0x100771b
 100771b:	add    DWORD PTR [edx],eax
 100771d:	add    BYTE PTR [eax],al
 100771f:	add    BYTE PTR [ecx],al
 1007721:	jno    0x1007723
 1007723:	add    DWORD PTR [ebx],eax
 1007725:	add    BYTE PTR [eax],al
 1007727:	add    BYTE PTR [ecx],cl
 1007729:	jno    0x100772b
 100772b:	add    DWORD PTR [ebx],eax
 100772d:	add    BYTE PTR [eax],al
 100772f:	add    BYTE PTR [ecx],dl
 1007731:	jno    0x1007733
 1007733:	add    DWORD PTR ds:0x19000000,eax
 1007739:	jno    0x100773b
 100773b:	add    DWORD PTR ds:0x21000000,eax
 1007741:	jno    0x1007743
 1007743:	add    DWORD PTR ds:0x29000000,eax
 1007749:	jno    0x100774b
 100774b:	add    DWORD PTR [ebx],eax
 100774d:	add    BYTE PTR [eax],al
 100774f:	add    BYTE PTR [ecx],dh
 1007751:	jno    0x1007753
 1007753:	add    DWORD PTR [ecx],eax
 1007755:	add    BYTE PTR [eax],al
 1007757:	add    BYTE PTR [ecx],bh
 1007759:	jno    0x100775b
 100775b:	add    DWORD PTR [eax],eax
 100775d:	add    BYTE PTR [eax],al
 100775f:	add    BYTE PTR [ecx+0x71],al
 1007762:	add    BYTE PTR [ecx],al
 1007764:	(bad)  
 1007765:	(bad)  
 1007766:	(bad)  
 1007767:	inc    DWORD PTR [eax]
	...
 1007775:	add    BYTE PTR [eax],al
 1007777:	add    BYTE PTR [edi+esi*2+0x0],bh
 100777b:	add    DWORD PTR [ecx],eax
 100777d:	add    BYTE PTR [eax],al
 100777f:	add    BYTE PTR [edi+esi*2+0x100],al
 1007786:	add    BYTE PTR [eax],al
 1007788:	add    BYTE PTR [eax+0x100],dl
 100778e:	add    BYTE PTR [eax],al
 1007790:	(bad)  
 1007791:	(bad)  
 1007792:	(bad)  
 1007793:	inc    DWORD PTR [eax]
 1007795:	add    BYTE PTR [eax],al
 1007797:	add    BYTE PTR [eax+eax*1],al
	...
 10077aa:	add    BYTE PTR [eax],al
 10077ac:	mov    al,0x77
 10077ae:	add    BYTE PTR [ecx],al
 10077b0:	add    DWORD PTR [eax],eax
 10077b2:	add    BYTE PTR [eax],al
 10077b4:	mov    eax,0x1010077
 10077b9:	add    BYTE PTR [eax],al
 10077bb:	add    BYTE PTR [eax],ah
 10077bd:	nop
 10077be:	add    BYTE PTR [ecx],al
 10077c0:	add    BYTE PTR [eax],al
 10077c2:	add    BYTE PTR [eax],al
 10077c4:	(bad)  
 10077c5:	(bad)  
 10077c6:	(bad)  
 10077c7:	inc    DWORD PTR [eax]
 10077c9:	add    BYTE PTR [eax],al
 10077cb:	add    BYTE PTR [ecx],al
 10077cd:	add    BYTE PTR [eax],al
 10077cf:	add    BYTE PTR [eax],al
 10077d1:	add    BYTE PTR [eax],al
 10077d3:	add    bh,bh
 10077d5:	(bad)  
 10077d6:	(bad)  
 10077d7:	push   DWORD PTR [ecx+0x71]
 10077da:	add    BYTE PTR [ecx],al
 10077dc:	add    BYTE PTR [eax],al
 10077de:	add    BYTE PTR [eax],al
 10077e0:	imul   esi,DWORD PTR [ecx+0x0],0x93052201
 10077e7:	sbb    DWORD PTR [edx],eax
 10077e9:	add    BYTE PTR [eax],al
 10077eb:	add    ah,dl
 10077ed:	ja     0x10077ef
 10077ef:	add    DWORD PTR [eax],eax
	...
 1007805:	add    BYTE PTR [eax],al
 1007807:	add    bh,bh
 1007809:	(bad)  
 100780a:	(bad)  
 100780b:	jmp    FWORD PTR [edx+0x22010071]
 1007811:	add    eax,0x11993
 1007816:	add    BYTE PTR [eax],al
 1007818:	or     BYTE PTR [eax+0x0],bh
 100781b:	add    DWORD PTR [eax],eax
	...
 1007831:	add    BYTE PTR [eax],al
 1007833:	add    bh,bh
 1007835:	(bad)  
 1007836:	(bad)  
 1007837:	call   ebx
 1007839:	jno    0x100783b
 100783b:	add    DWORD PTR [edx],esp
 100783d:	add    eax,0x11993
 1007842:	add    BYTE PTR [eax],al
 1007844:	xor    al,0x78
 1007846:	add    BYTE PTR [ecx],al
	...
 1007860:	(bad)  
 1007861:	(bad)  
 1007862:	(bad)  
 1007863:	(bad)  
 1007864:	cld    
 1007865:	jno    0x1007867
 1007867:	add    DWORD PTR [edx],esp
 1007869:	add    eax,0x11993
 100786e:	add    BYTE PTR [eax],al
 1007870:	pusha  
 1007871:	js     0x1007873
 1007873:	add    DWORD PTR [eax],eax
	...
 1007889:	add    BYTE PTR [eax],al
 100788b:	add    bh,bh
 100788d:	(bad)  
 100788e:	(bad)  
 100788f:	jmp    DWORD PTR ds:0xff010072
 1007895:	(bad)  
 1007896:	(bad)  
 1007897:	jmp    FWORD PTR ds:0x1010072
 100789d:	add    BYTE PTR [eax],al
 100789f:	add    BYTE PTR [eax],bh
 10078a1:	jb     0x10078a3
 10078a3:	add    DWORD PTR [ecx],eax
 10078a5:	add    BYTE PTR [eax],al
 10078a7:	add    BYTE PTR [eax+0x72],al
 10078aa:	add    BYTE PTR [ecx],al
 10078ac:	and    al,BYTE PTR ds:0x41993
 10078b2:	add    BYTE PTR [eax],al
 10078b4:	mov    WORD PTR [eax+0x0],?
 10078b7:	add    DWORD PTR [eax],eax
	...
 10078cd:	add    BYTE PTR [eax],al
 10078cf:	add    bh,bh
 10078d1:	(bad)  
 10078d2:	(bad)  
 10078d3:	jmp    FWORD PTR [ebx+0x72]
 10078d6:	add    BYTE PTR [ecx],al
 10078d8:	add    BYTE PTR [eax],al
 10078da:	add    BYTE PTR [eax],al
 10078dc:	jbe    0x1007950
 10078de:	add    BYTE PTR [ecx],al
 10078e0:	add    BYTE PTR [eax],al
 10078e2:	add    BYTE PTR [eax],al
 10078e4:	xor    DWORD PTR [edx+0x0],0xffffff01
 10078eb:	dec    DWORD PTR [ecx+0x22010072]
 10078f1:	add    eax,0x41993
 10078f6:	add    BYTE PTR [eax],al
 10078f8:	sar    BYTE PTR [eax+0x0],1
 10078fb:	add    DWORD PTR [eax],eax
	...
 100791d:	add    BYTE PTR [eax],al
 100791f:	add    BYTE PTR [ecx+0x36],bl
 1007922:	add    BYTE PTR [ecx],al
 1007924:	(bad)  
 1007925:	(bad)  
 1007926:	(bad)  
 1007927:	inc    DWORD PTR [eax]
 1007929:	add    BYTE PTR [eax],al
 100792b:	add    bh,bh
 100792d:	(bad)  
 100792e:	(bad)  
 100792f:	inc    DWORD PTR [eax]
	...
 1007939:	add    BYTE PTR [eax],al
 100793b:	add    BYTE PTR [ecx],al
 100793d:	add    BYTE PTR [eax],al
 100793f:	add    BYTE PTR [ecx],al
 1007941:	add    BYTE PTR [eax],al
 1007943:	add    BYTE PTR [ecx+edi*2],dl
 1007946:	add    BYTE PTR [ecx],al
 1007948:	and    al,BYTE PTR ds:0x21993
 100794e:	add    BYTE PTR [eax],al
 1007950:	and    al,0x79
 1007952:	add    BYTE PTR [ecx],al
 1007954:	add    DWORD PTR [eax],eax
 1007956:	add    BYTE PTR [eax],al
 1007958:	xor    al,0x79
 100795a:	add    BYTE PTR [ecx],al
	...
 100796c:	(bad)  
 100796d:	(bad)  
 100796e:	(bad)  
 100796f:	call   ecx
 1007971:	jb     0x1007973
 1007973:	add    edi,edi
 1007975:	(bad)  
 1007976:	(bad)  
 1007977:	(bad)  
 1007978:	fnstenv [edx+0x0]
 100797b:	add    edi,edi
 100797d:	(bad)  
 100797e:	(bad)  
 100797f:	jmp    ecx
 1007981:	jb     0x1007983
 1007983:	add    DWORD PTR [edx],esp
 1007985:	add    eax,0x31993
 100798a:	add    BYTE PTR [eax],al
 100798c:	ins    BYTE PTR es:[edi],dx
 100798d:	jns    0x100798f
 100798f:	add    DWORD PTR [eax],eax
	...
 10079b1:	add    BYTE PTR [eax],al
 10079b3:	add    BYTE PTR [edx+0x10037],dl
 10079b9:	add    BYTE PTR [eax],al
 10079bb:	add    BYTE PTR [esi],al
 10079bd:	add    BYTE PTR [eax],al
 10079bf:	add    BYTE PTR [edi],al
 10079c1:	add    BYTE PTR [eax],al
 10079c3:	add    BYTE PTR [ecx],al
 10079c5:	add    BYTE PTR [eax],al
 10079c7:	add    BYTE PTR [eax+0x22010079],ch
 10079cd:	add    eax,0x81993
 10079d2:	add    BYTE PTR [eax],al
 10079d4:	lock jns 0x10079d7
 10079d7:	add    DWORD PTR [ecx],eax
 10079d9:	add    BYTE PTR [eax],al
 10079db:	add    BYTE PTR [eax+0x10079],bh
	...
 10079ed:	add    BYTE PTR [eax],al
 10079ef:	add    bh,bh
 10079f1:	(bad)  
 10079f2:	(bad)  
 10079f3:	inc    DWORD PTR [eax]
 10079f5:	add    BYTE PTR [eax],al
 10079f7:	add    BYTE PTR [eax],al
 10079f9:	add    BYTE PTR [eax],al
 10079fb:	add    BYTE PTR [ecx],cl
 10079fd:	jae    0x10079ff
 10079ff:	add    DWORD PTR [eax],eax
 1007a01:	add    BYTE PTR [eax],al
 1007a03:	add    BYTE PTR [ecx],dl
 1007a05:	jae    0x1007a07
 1007a07:	add    DWORD PTR [edx],eax
 1007a09:	add    BYTE PTR [eax],al
 1007a0b:	add    BYTE PTR [ecx],bl
 1007a0d:	jae    0x1007a0f
 1007a0f:	add    DWORD PTR [edx],eax
 1007a11:	add    BYTE PTR [eax],al
 1007a13:	add    BYTE PTR [ecx],ah
 1007a15:	jae    0x1007a17
 1007a17:	add    DWORD PTR [edx],eax
 1007a19:	add    BYTE PTR [eax],al
 1007a1b:	add    BYTE PTR [ecx],ch
 1007a1d:	jae    0x1007a1f
 1007a1f:	add    DWORD PTR [eax],eax
 1007a21:	add    BYTE PTR [eax],al
 1007a23:	add    BYTE PTR [ecx],dh
 1007a25:	jae    0x1007a27
 1007a27:	add    edi,edi
 1007a29:	(bad)  
 1007a2a:	(bad)  
 1007a2b:	inc    DWORD PTR [eax]
 1007a2d:	add    BYTE PTR [eax],al
 1007a2f:	add    bh,bh
 1007a31:	(bad)  
 1007a32:	(bad)  
 1007a33:	call   FWORD PTR [ecx+0x73]
 1007a36:	add    BYTE PTR [ecx],al
 1007a38:	and    al,BYTE PTR ds:0x11993
 1007a3e:	add    BYTE PTR [eax],al
 1007a40:	xor    BYTE PTR [edx+0x0],bh
 1007a43:	add    DWORD PTR [eax],eax
	...
 1007a65:	add    BYTE PTR [eax],al
 1007a67:	add    BYTE PTR [edx+edi*1+0x100],bl
 1007a6e:	add    BYTE PTR [eax],al
 1007a70:	push   es
 1007a71:	add    BYTE PTR [eax],al
 1007a73:	add    BYTE PTR [edi],al
 1007a75:	add    BYTE PTR [eax],al
 1007a77:	add    BYTE PTR [ecx],al
 1007a79:	add    BYTE PTR [eax],al
 1007a7b:	add    BYTE PTR [edx+edi*2+0x0],bl
 1007a7f:	add    DWORD PTR [edx],esp
 1007a81:	add    eax,0x81993
 1007a86:	add    BYTE PTR [eax],al
 1007a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1007a89:	jp     0x1007a8b
 1007a8b:	add    DWORD PTR [ecx],eax
 1007a8d:	add    BYTE PTR [eax],al
 1007a8f:	add    BYTE PTR [edx+edi*2+0x0],ch
 1007a93:	add    DWORD PTR [eax],eax
	...
 1007aa1:	add    BYTE PTR [eax],al
 1007aa3:	add    bh,bh
 1007aa5:	(bad)  
 1007aa6:	(bad)  
 1007aa7:	inc    DWORD PTR [eax]
 1007aa9:	add    BYTE PTR [eax],al
 1007aab:	add    BYTE PTR [eax],al
 1007aad:	add    BYTE PTR [eax],al
 1007aaf:	add    BYTE PTR [ecx+0x1010073],al
 1007ab5:	add    BYTE PTR [eax],al
 1007ab7:	add    BYTE PTR [ebx+esi*2+0x10100],cl
 1007abe:	add    BYTE PTR [eax],al
 1007ac0:	lods   eax,DWORD PTR ds:[esi]
 1007ac1:	jae    0x1007ac3
 1007ac3:	add    DWORD PTR [ecx],eax
 1007ac5:	add    BYTE PTR [eax],al
 1007ac7:	add    BYTE PTR [edi+0x1010073],dl
 1007acd:	add    BYTE PTR [eax],al
 1007acf:	add    BYTE PTR [edx+0x10073],ah
 1007ad5:	add    BYTE PTR [eax],al
 1007ad7:	add    BYTE PTR [eax-0xfeff8d],bh
 1007add:	(bad)  
 1007ade:	(bad)  
 1007adf:	inc    DWORD PTR [eax]
	...
 1007aed:	add    BYTE PTR [eax],al
 1007aef:	add    BYTE PTR [esi+0x3b],al
 1007af2:	add    BYTE PTR [ecx],al
 1007af4:	add    BYTE PTR [eax],al
 1007af6:	add    BYTE PTR [eax],al
 1007af8:	add    eax,DWORD PTR [eax]
 1007afa:	add    BYTE PTR [eax],al
 1007afc:	add    al,0x0
 1007afe:	add    BYTE PTR [eax],al
 1007b00:	add    DWORD PTR [eax],eax
 1007b02:	add    BYTE PTR [eax],al
 1007b04:	in     al,0x7a
 1007b06:	add    BYTE PTR [ecx],al
 1007b08:	and    al,BYTE PTR ds:0x51993
 1007b0e:	add    BYTE PTR [eax],al
 1007b10:	sub    al,0x7b
 1007b12:	add    BYTE PTR [ecx],al
 1007b14:	add    DWORD PTR [eax],eax
 1007b16:	add    BYTE PTR [eax],al
 1007b18:	hlt    
 1007b19:	jp     0x1007b1b
 1007b1b:	add    DWORD PTR [eax],eax
	...
 1007b29:	add    BYTE PTR [eax],al
 1007b2b:	add    bh,bh
 1007b2d:	(bad)  
 1007b2e:	(bad)  
 1007b2f:	inc    DWORD PTR [eax]
 1007b31:	add    BYTE PTR [eax],al
 1007b33:	add    BYTE PTR [eax],al
 1007b35:	add    BYTE PTR [eax],al
 1007b37:	add    al,dh
 1007b39:	jae    0x1007b3b
 1007b3b:	add    DWORD PTR [eax],eax
 1007b3d:	add    BYTE PTR [eax],al
 1007b3f:	add    al,bh
 1007b41:	jae    0x1007b43
 1007b43:	add    DWORD PTR [eax],eax
 1007b45:	add    BYTE PTR [eax],al
 1007b47:	add    BYTE PTR [eax],al
 1007b49:	je     0x1007b4b
 1007b4b:	add    edi,edi
 1007b4d:	(bad)  
 1007b4e:	(bad)  
 1007b4f:	inc    DWORD PTR [eax]
	...
 1007b5d:	add    BYTE PTR [eax],al
 1007b5f:	add    BYTE PTR [ebx],bh
 1007b61:	cmp    al,0x0
 1007b63:	add    DWORD PTR [eax],eax
 1007b65:	add    BYTE PTR [eax],al
 1007b67:	add    BYTE PTR [esi],al
 1007b69:	add    BYTE PTR [eax],al
 1007b6b:	add    BYTE PTR [edi],al
 1007b6d:	add    BYTE PTR [eax],al
 1007b6f:	add    BYTE PTR [ecx],al
 1007b71:	add    BYTE PTR [eax],al
 1007b73:	add    BYTE PTR [ebx+edi*2+0x0],dl
 1007b77:	add    DWORD PTR [edx],esp
 1007b79:	add    eax,0x81993
 1007b7e:	add    BYTE PTR [eax],al
 1007b80:	pushf  
 1007b81:	jnp    0x1007b83
 1007b83:	add    DWORD PTR [ecx],eax
 1007b85:	add    BYTE PTR [eax],al
 1007b87:	add    BYTE PTR [ebx+edi*2+0x0],ah
 1007b8b:	add    DWORD PTR [eax],eax
	...
 1007b99:	add    BYTE PTR [eax],al
 1007b9b:	add    bh,bh
 1007b9d:	(bad)  
 1007b9e:	(bad)  
 1007b9f:	inc    DWORD PTR [eax]
 1007ba1:	add    BYTE PTR [eax],al
 1007ba3:	add    BYTE PTR [eax],al
 1007ba5:	add    BYTE PTR [eax],al
 1007ba7:	add    BYTE PTR [eax],ch
 1007ba9:	je     0x1007bab
 1007bab:	add    DWORD PTR [eax],eax
 1007bad:	add    BYTE PTR [eax],al
 1007baf:	add    BYTE PTR [eax],dh
 1007bb1:	je     0x1007bb3
 1007bb3:	add    DWORD PTR [edx],eax
 1007bb5:	add    BYTE PTR [eax],al
 1007bb7:	add    BYTE PTR [eax],bh
 1007bb9:	je     0x1007bbb
 1007bbb:	add    DWORD PTR [edx],eax
 1007bbd:	add    BYTE PTR [eax],al
 1007bbf:	add    BYTE PTR [eax+0x74],al
 1007bc2:	add    BYTE PTR [ecx],al
 1007bc4:	add    al,BYTE PTR [eax]
 1007bc6:	add    BYTE PTR [eax],al
 1007bc8:	dec    eax
 1007bc9:	je     0x1007bcb
 1007bcb:	add    DWORD PTR [eax],eax
 1007bcd:	add    BYTE PTR [eax],al
 1007bcf:	add    BYTE PTR [eax+0x74],dl
 1007bd2:	add    BYTE PTR [ecx],al
 1007bd4:	(bad)  
 1007bd5:	(bad)  
 1007bd6:	(bad)  
 1007bd7:	inc    DWORD PTR [eax]
	...
 1007be5:	add    BYTE PTR [eax],al
 1007be7:	add    ch,ah
 1007be9:	cmp    eax,0x100
 1007bee:	add    BYTE PTR [eax],al
 1007bf0:	add    al,0x0
 1007bf2:	add    BYTE PTR [eax],al
 1007bf4:	add    eax,0x1000000
 1007bf9:	add    BYTE PTR [eax],al
 1007bfb:	add    ah,bl
 1007bfd:	jnp    0x1007bff
 1007bff:	add    DWORD PTR [edx],esp
 1007c01:	add    eax,0x61993
 1007c06:	add    BYTE PTR [eax],al
 1007c08:	and    al,0x7c
 1007c0a:	add    BYTE PTR [ecx],al
 1007c0c:	add    DWORD PTR [eax],eax
 1007c0e:	add    BYTE PTR [eax],al
 1007c10:	in     al,dx
 1007c11:	jnp    0x1007c13
 1007c13:	add    DWORD PTR [eax],eax
	...
 1007c21:	add    BYTE PTR [eax],al
 1007c23:	add    bh,bh
 1007c25:	(bad)  
 1007c26:	(bad)  
 1007c27:	inc    DWORD PTR [eax]
 1007c29:	add    BYTE PTR [eax],al
 1007c2b:	add    BYTE PTR [eax],al
 1007c2d:	add    BYTE PTR [eax],al
 1007c2f:	add    BYTE PTR [eax+0x74],bh
 1007c32:	add    BYTE PTR [ecx],al
 1007c34:	add    BYTE PTR [eax],al
 1007c36:	add    BYTE PTR [eax],al
 1007c38:	xor    DWORD PTR [eax+eax*1+0x1],0x2
 1007c3d:	add    BYTE PTR [eax],al
 1007c3f:	add    BYTE PTR [esi+0x10074],cl
 1007c45:	add    BYTE PTR [eax],al
 1007c47:	add    BYTE PTR [ecx-0xfeff8c],bl
 1007c4d:	(bad)  
 1007c4e:	(bad)  
 1007c4f:	inc    DWORD PTR [eax]
 1007c51:	add    BYTE PTR [eax],al
 1007c53:	add    bh,bh
 1007c55:	(bad)  
 1007c56:	(bad)  
 1007c57:	call   ecx
 1007c59:	je     0x1007c5b
 1007c5b:	add    DWORD PTR [edx],esp
 1007c5d:	add    eax,0x11993
 1007c62:	add    BYTE PTR [eax],al
 1007c64:	push   esp
 1007c65:	jl     0x1007c67
 1007c67:	add    DWORD PTR [eax],eax
	...
 1007c89:	add    BYTE PTR [eax],al
 1007c8b:	add    BYTE PTR [edi+0x3f],ah
 1007c8e:	add    BYTE PTR [ecx],al
 1007c90:	(bad)  
 1007c91:	(bad)  
 1007c92:	(bad)  
 1007c93:	inc    DWORD PTR [eax]
 1007c95:	add    BYTE PTR [eax],al
 1007c97:	add    bh,bh
 1007c99:	(bad)  
 1007c9a:	(bad)  
 1007c9b:	inc    DWORD PTR [eax]
	...
 1007ca5:	add    BYTE PTR [eax],al
 1007ca7:	add    BYTE PTR [ecx],al
 1007ca9:	add    BYTE PTR [eax],al
 1007cab:	add    BYTE PTR [ecx],al
 1007cad:	add    BYTE PTR [eax],al
 1007caf:	add    BYTE PTR [eax+0x2201007c],al
 1007cb5:	add    eax,0x21993
 1007cba:	add    BYTE PTR [eax],al
 1007cbc:	nop
 1007cbd:	jl     0x1007cbf
 1007cbf:	add    DWORD PTR [ecx],eax
 1007cc1:	add    BYTE PTR [eax],al
 1007cc3:	add    BYTE PTR [eax+0x1007c],ah
	...
 1007cd5:	add    BYTE PTR [eax],al
 1007cd7:	add    bh,bh
 1007cd9:	(bad)  
 1007cda:	(bad)  
 1007cdb:	call   FWORD PTR [edi]
 1007cdd:	jne    0x1007cdf
 1007cdf:	add    DWORD PTR [edx],esp
 1007ce1:	add    eax,0x11993
 1007ce6:	add    BYTE PTR [eax],al
 1007ce8:	fdivr  DWORD PTR [eax+eax*1+0x1]
	...
 1007d04:	(bad)  
 1007d05:	(bad)  
 1007d06:	(bad)  
 1007d07:	dec    DWORD PTR [eax+0x75]
 1007d0a:	add    BYTE PTR [ecx],al
 1007d0c:	and    al,BYTE PTR ds:0x11993
 1007d12:	add    BYTE PTR [eax],al
 1007d14:	add    al,0x7d
 1007d16:	add    BYTE PTR [ecx],al
	...
 1007d30:	(bad)  
 1007d31:	(bad)  
 1007d32:	(bad)  
 1007d33:	push   DWORD PTR [esi+0x75]
 1007d36:	add    BYTE PTR [ecx],al
 1007d38:	and    al,BYTE PTR ds:0x11993
 1007d3e:	add    BYTE PTR [eax],al
 1007d40:	xor    BYTE PTR [ebp+0x0],bh
 1007d43:	add    DWORD PTR [eax],eax
	...
 1007d5d:	add    BYTE PTR [eax],al
 1007d5f:	add    BYTE PTR [edx+0x10034],ah
 1007d65:	add    BYTE PTR [eax],al
 1007d67:	add    BYTE PTR [ebp+edi*2+0x0],ch
 1007d6b:	add    DWORD PTR [edx],eax
 1007d6d:	add    BYTE PTR [eax],al
 1007d6f:	add    BYTE PTR [eax+0x7d],bh
 1007d72:	add    BYTE PTR [ecx],al
 1007d74:	xchg   esp,eax
 1007d75:	jge    0x1007d77
 1007d77:	add    DWORD PTR [eax],eax
 1007d79:	add    BYTE PTR [eax],al
 1007d7b:	add    BYTE PTR [eax+edx*4],ch
 1007d7e:	add    BYTE PTR [ecx],al
 1007d80:	add    BYTE PTR [eax],al
 1007d82:	add    BYTE PTR [eax],al
 1007d84:	(bad)  
 1007d85:	(bad)  
 1007d86:	(bad)  
 1007d87:	inc    DWORD PTR [eax]
 1007d89:	add    BYTE PTR [eax],al
 1007d8b:	add    BYTE PTR [eax+eax*1],cl
 1007d8e:	add    BYTE PTR [eax],al
 1007d90:	int3   
 1007d91:	xor    al,0x0
 1007d93:	add    DWORD PTR [eax],eax
 1007d95:	add    BYTE PTR [eax],al
 1007d97:	add    BYTE PTR [eax-0x70],cl
 1007d9a:	add    BYTE PTR [ecx],al
 1007d9c:	add    BYTE PTR [eax],al
 1007d9e:	add    BYTE PTR [eax],al
 1007da0:	(bad)  
 1007da1:	(bad)  
 1007da2:	(bad)  
 1007da3:	inc    DWORD PTR [eax]
 1007da5:	add    BYTE PTR [eax],al
 1007da7:	add    BYTE PTR [eax+eax*1],cl
 1007daa:	add    BYTE PTR [eax],al
 1007dac:	and    BYTE PTR [ebp+0x0],cl
 1007daf:	add    esi,edi
 1007db1:	(bad)  
 1007db2:	(bad)  
 1007db3:	inc    DWORD PTR [eax]
 1007db5:	add    BYTE PTR [eax],al
 1007db7:	add    BYTE PTR [edi+edi*8+0xffff],al
 1007dbe:	add    BYTE PTR [eax],al
 1007dc0:	(bad)  
 1007dc1:	(bad)  
 1007dc2:	(bad)  
 1007dc3:	dec    DWORD PTR [edx+ecx*2]
 1007dc6:	add    BYTE PTR [ecx],al
 1007dc8:	and    BYTE PTR [edx+0x0],cl
 1007dcb:	add    DWORD PTR [eax],eax
 1007dcd:	add    BYTE PTR [eax],al
 1007dcf:	add    dh,bh
 1007dd1:	(bad)  
 1007dd2:	(bad)  
 1007dd3:	inc    DWORD PTR [eax]
 1007dd5:	add    BYTE PTR [eax],al
 1007dd7:	add    ah,cl
 1007dd9:	(bad)  
 1007dda:	(bad)  
 1007ddb:	inc    DWORD PTR [eax]
 1007ddd:	add    BYTE PTR [eax],al
 1007ddf:	add    dh,bh
 1007de1:	(bad)  
 1007de2:	(bad)  
 1007de3:	inc    DWORD PTR [eax]
 1007de5:	add    BYTE PTR [eax],al
 1007de7:	add    BYTE PTR [ecx+0x4e],bh
 1007dea:	add    BYTE PTR [ecx],al
 1007dec:	add    BYTE PTR [eax],al
 1007dee:	add    BYTE PTR [eax],al
 1007df0:	(bad)  
 1007df1:	(bad)  
 1007df2:	(bad)  
 1007df3:	inc    DWORD PTR [eax]
 1007df5:	add    BYTE PTR [eax],al
 1007df7:	add    al,bl
 1007df9:	(bad)  
 1007dfa:	(bad)  
 1007dfb:	inc    DWORD PTR [eax]
 1007dfd:	add    BYTE PTR [eax],al
 1007dff:	add    dh,bh
 1007e01:	(bad)  
 1007e02:	(bad)  
 1007e03:	jmp    FWORD PTR [ebx]
 1007e05:	push   eax
 1007e06:	add    BYTE PTR [ecx],al
 1007e08:	ds push eax
 1007e0a:	add    BYTE PTR [ecx],al
 1007e0c:	add    BYTE PTR [eax],al
 1007e0e:	add    BYTE PTR [eax],al
 1007e10:	(bad)  
 1007e11:	(bad)  
 1007e12:	(bad)  
 1007e13:	inc    DWORD PTR [eax]
 1007e15:	add    BYTE PTR [eax],al
 1007e17:	add    ah,cl
 1007e19:	(bad)  
 1007e1a:	(bad)  
 1007e1b:	inc    DWORD PTR [eax]
 1007e1d:	add    BYTE PTR [eax],al
 1007e1f:	add    dh,bh
 1007e21:	(bad)  
 1007e22:	(bad)  
 1007e23:	call   DWORD PTR [ebx]
 1007e25:	push   ebx
 1007e26:	add    BYTE PTR [ecx],al
 1007e28:	cmp    al,0x53
 1007e2a:	add    BYTE PTR [ecx],al
 1007e2c:	add    BYTE PTR [eax],al
 1007e2e:	add    BYTE PTR [eax],al
 1007e30:	(bad)  
 1007e31:	(bad)  
 1007e32:	(bad)  
 1007e33:	inc    DWORD PTR [eax]
 1007e35:	add    BYTE PTR [eax],al
 1007e37:	add    ah,dl
 1007e39:	(bad)  
 1007e3a:	(bad)  
 1007e3b:	inc    DWORD PTR [eax]
 1007e3d:	add    BYTE PTR [eax],al
 1007e3f:	add    dh,bh
 1007e41:	(bad)  
 1007e42:	(bad)  
 1007e43:	inc    DWORD PTR [eax]
 1007e45:	add    BYTE PTR [eax],al
 1007e47:	add    BYTE PTR [esi+0x10053],bl
 1007e4d:	add    BYTE PTR [eax],al
 1007e4f:	add    ah,ah
 1007e51:	(bad)  
 1007e52:	(bad)  
 1007e53:	inc    DWORD PTR [eax]
 1007e55:	add    BYTE PTR [eax],al
 1007e57:	add    BYTE PTR [eax-0x3],bh
 1007e5a:	(bad)  
 1007e5b:	inc    DWORD PTR [eax]
 1007e5d:	add    BYTE PTR [eax],al
 1007e5f:	add    dh,bh
 1007e61:	(bad)  
 1007e62:	(bad)  
 1007e63:	inc    DWORD PTR [eax]
 1007e65:	add    BYTE PTR [eax],al
 1007e67:	add    BYTE PTR [edi+0x101005e],ch
 1007e6d:	add    BYTE PTR [eax],al
 1007e6f:	add    BYTE PTR [eax],dh
 1007e71:	sbb    eax,DWORD PTR [eax]
 1007e73:	add    BYTE PTR [eax],ch
 1007e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1007e76:	add    BYTE PTR [eax],al
 1007e78:	fcom   QWORD PTR [eax+0x7eac0000]
 1007e7e:	add    BYTE PTR [eax],al
 1007e80:	aam    0x7e
	...
 1007eaa:	add    BYTE PTR [eax],al
 1007eac:	mov    ah,0x7e
	...
 1007eb6:	inc    edi
 1007eb7:	gs je  0x1007f0d
 1007eba:	push   ecx
 1007ebb:	dec    esp
 1007ebc:	push   esi
 1007ebd:	gs jb  0x1007f13
 1007ec0:	jo     0x1007f27
 1007ec2:	arpl   WORD PTR [ecx+0x66],bp
 1007ec5:	imul   esp,DWORD PTR [ebx+0x52],0x74536765
 1007ecc:	jb     0x1007f37
 1007ece:	outs   dx,BYTE PTR ds:[esi]
 1007ecf:	add    BYTE PTR [bx+si],dh
	...
 1007eda:	add    BYTE PTR [eax],al
 1007edc:	push   esp
 1007edd:	jg     0x1007edf
	...
 1007ee7:	add    BYTE PTR [edx-0x7f],bh
 1007eea:	add    BYTE PTR [eax],al
 1007eec:	add    BYTE PTR [eax],dl
 1007eee:	add    BYTE PTR [eax],al
 1007ef0:	ins    BYTE PTR es:[edi],dx
 1007ef1:	jg     0x1007ef3
	...
 1007efb:	add    ah,bh
 1007efd:	add    BYTE PTR [eax],0x0
 1007f00:	sbb    BYTE PTR [eax],dl
 1007f02:	add    BYTE PTR [eax],al
 1007f04:	cmp    BYTE PTR [ecx+0x0],al
 1007f0a:	add    BYTE PTR [eax],al
 1007f0c:	add    BYTE PTR [eax],al
 1007f0e:	add    BYTE PTR [eax],al
 1007f10:	xor    al,BYTE PTR [ebx+0x11e40000]
 1007f16:	add    BYTE PTR [eax],al
 1007f18:	push   0x80
 1007f1d:	add    BYTE PTR [eax],al
 1007f1f:	add    BYTE PTR [eax],al
 1007f21:	add    BYTE PTR [eax],al
 1007f23:	add    BYTE PTR [ebp+eax*4+0x11140000],cl
 1007f2a:	add    BYTE PTR [eax],al
 1007f2c:	pop    esp
 1007f2d:	add    BYTE PTR [eax],0x0
	...
 1007f38:	lods   al,BYTE PTR ds:[esi]
 1007f39:	xchg   BYTE PTR [eax],al
 1007f3b:	add    BYTE PTR [eax],cl
 1007f3d:	adc    DWORD PTR [eax],eax
	...
 1007f53:	add    BYTE PTR [eax-0x7f],cl
 1007f56:	add    BYTE PTR [eax],al
 1007f58:	push   esi
 1007f59:	add    DWORD PTR [eax],0x816600
 1007f5f:	add    BYTE PTR [edx-0x37ffff7a],bh
 1007f65:	xchg   BYTE PTR [eax],al
 1007f67:	add    BYTE PTR [eax],al
 1007f69:	add    BYTE PTR [eax],al
 1007f6b:	add    BYTE PTR [esi],ch
 1007f6d:	mov    DWORD PTR [eax],eax
 1007f6f:	add    BYTE PTR [ecx+ecx*4],bl
 1007f72:	add    BYTE PTR [eax],al
 1007f74:	fimul  DWORD PTR [ecx-0x76f00000]
 1007f7a:	add    BYTE PTR [eax],al
 1007f7c:	add    al,0x89
 1007f7e:	add    BYTE PTR [eax],al
 1007f80:	test   BYTE PTR [eax-0x77160000],0x0
 1007f87:	add    ah,bl
 1007f89:	mov    BYTE PTR [eax],al
 1007f8b:	add    ah,al
 1007f8d:	mov    BYTE PTR [eax],al
 1007f8f:	add    BYTE PTR [eax+ecx*4-0x777c0000],bl
 1007f96:	add    BYTE PTR [eax],al
 1007f98:	ins    BYTE PTR es:[edi],dx
 1007f99:	mov    BYTE PTR [eax],al
 1007f9b:	add    BYTE PTR [eax+ecx*4+0x0],bl
 1007f9f:	add    BYTE PTR [esi],dh
 1007fa1:	mov    BYTE PTR [eax],al
 1007fa3:	add    BYTE PTR [edx],bl
 1007fa5:	mov    BYTE PTR [eax],al
 1007fa7:	add    BYTE PTR [esi],al
 1007fa9:	mov    BYTE PTR [eax],al
 1007fab:	add    dl,dh
 1007fad:	xchg   DWORD PTR [eax],eax
 1007faf:	add    al,bl
 1007fb1:	xchg   DWORD PTR [eax],eax
 1007fb3:	add    dl,al
 1007fb5:	xchg   DWORD PTR [eax],eax
 1007fb7:	add    BYTE PTR [edi+eax*4-0x78640000],ch
 1007fbe:	add    BYTE PTR [eax],al
 1007fc0:	add    BYTE PTR [edi-0x788e0000],0x0
 1007fc7:	add    BYTE PTR [edi+eax*4+0x0],dl
 1007fcb:	add    BYTE PTR [edi+eax*4+0x0],al
 1007fcf:	add    BYTE PTR [edx],dh
 1007fd1:	xchg   DWORD PTR [eax],eax
 1007fd3:	add    BYTE PTR [edi+eax*4],bl
 1007fd6:	add    BYTE PTR [eax],al
 1007fd8:	inc    BYTE PTR [esi-0x790a0000]
 1007fde:	add    BYTE PTR [eax],al
 1007fe0:	loopne 0x1007f68
 1007fe2:	add    BYTE PTR [eax],al
 1007fe4:	out    0x82,al
 1007fe6:	add    BYTE PTR [eax],al
 1007fe8:	(bad)  
 1007fe9:	add    BYTE PTR [eax],0x0
 1007fec:	ret    0x82
 1007fef:	add    BYTE PTR [edx+eax*4-0x7d6c0000],ch
 1007ff6:	add    BYTE PTR [eax],al
 1007ff8:	test   BYTE PTR [edx-0x7d8e0000],al
 1007ffe:	add    BYTE PTR [eax],al
 1008000:	pop    esi
 1008001:	add    BYTE PTR [eax],0x0
 1008004:	push   edx
 1008005:	add    BYTE PTR [eax],0x0
 1008008:	cmp    al,0x82
 100800a:	add    BYTE PTR [eax],al
 100800c:	sub    al,BYTE PTR [edx-0x7de60000]
 1008012:	add    BYTE PTR [eax],al
 1008014:	add    BYTE PTR [edx-0x76b80000],al
 100801a:	add    BYTE PTR [eax],al
 100801c:	jmp    0x81:0xda000081
 1008023:	add    al,cl
 1008025:	add    DWORD PTR [eax],0x81b800
 100802b:	add    BYTE PTR [esi-0x67ffff7f],ah
 1008031:	add    DWORD PTR [eax],0x818800
 1008037:	add    BYTE PTR [edx-0x78],cl
 100803a:	add    BYTE PTR [eax],al
 100803c:	pop    edx
 100803d:	mov    DWORD PTR [eax],eax
 100803f:	add    BYTE PTR [esi-0x77],ah
 1008042:	add    BYTE PTR [eax],al
 1008044:	jbe    0x1007fcf
 1008046:	add    BYTE PTR [eax],al
 1008048:	xchg   BYTE PTR [ecx-0x76340000],cl
 100804e:	add    BYTE PTR [eax],al
 1008050:	mov    al,0x89
 1008052:	add    BYTE PTR [eax],al
 1008054:	xchg   esp,eax
 1008055:	mov    DWORD PTR [eax],eax
 1008057:	add    BYTE PTR [eax],al
 1008059:	add    BYTE PTR [eax],al
 100805b:	add    BYTE PTR [esi+eax*4-0x79a00000],cl
 1008062:	add    BYTE PTR [eax],al
 1008064:	add    BYTE PTR [eax],al
 1008066:	add    BYTE PTR [eax],al
 1008068:	sub    al,BYTE PTR [esi-0x79ec0000]
 100806e:	add    BYTE PTR [eax],al
 1008070:	add    al,0x86
 1008072:	add    BYTE PTR [eax],al
 1008074:	repnz test DWORD PTR [eax],eax
 1008077:	add    al,bl
 1008079:	test   DWORD PTR [eax],eax
 100807b:	add    dh,cl
 100807d:	test   DWORD PTR [eax],eax
 100807f:	add    dh,al
 1008081:	test   DWORD PTR [eax],eax
 1008083:	add    BYTE PTR [eax-0x65ffff7b],bh
 1008089:	test   DWORD PTR [eax],eax
 100808b:	add    BYTE PTR [edx-0x7b],bh
 100808e:	add    BYTE PTR [eax],al
 1008090:	jo     0x1008017
 1008092:	add    BYTE PTR [eax],al
 1008094:	test   DWORD PTR fs:[eax],eax
 1008097:	add    BYTE PTR [eax-0x7b],dl
 100809a:	add    BYTE PTR [eax],al
 100809c:	cmp    al,BYTE PTR [ebp-0x7ad40000]
 10080a2:	add    BYTE PTR [eax],al
 10080a4:	and    BYTE PTR [ebp-0x7aea0000],al
 10080aa:	add    BYTE PTR [eax],al
 10080ac:	push   cs
 10080ad:	test   DWORD PTR [eax],eax
 10080af:	add    BYTE PTR [eax],al
 10080b1:	test   DWORD PTR [eax],eax
 10080b3:	add    dl,dh
 10080b5:	test   BYTE PTR [eax],al
 10080b7:	add    dl,ch
 10080b9:	test   BYTE PTR [eax],al
 10080bb:	add    al,ah
 10080bd:	test   BYTE PTR [eax],al
 10080bf:	add    al,dl
 10080c1:	test   BYTE PTR [eax],al
 10080c3:	add    dl,al
 10080c5:	test   BYTE PTR [eax],al
 10080c7:	add    BYTE PTR [eax-0x4fffff7c],bh
 10080cd:	test   BYTE PTR [eax],al
 10080cf:	add    BYTE PTR [esp+eax*4-0x7b660000],ah
 10080d6:	add    BYTE PTR [eax],al
 10080d8:	jp     0x100805e
 10080da:	add    BYTE PTR [eax],al
 10080dc:	pop    esi
 10080dd:	test   BYTE PTR [eax],al
 10080df:	add    BYTE PTR [esp+eax*4],bh
 10080e2:	add    BYTE PTR [eax],al
 10080e4:	sbb    al,0x84
 10080e6:	add    BYTE PTR [eax],al
 10080e8:	push   cs
 10080e9:	test   BYTE PTR [eax],al
 10080eb:	add    BYTE PTR [eax],al
 10080ed:	test   BYTE PTR [eax],al
 10080ef:	add    al,bh
 10080f1:	add    DWORD PTR [eax],0x0
 10080f4:	out    dx,al
 10080f5:	add    DWORD PTR [eax],0x0
 10080f8:	in     al,0x83
 10080fa:	add    BYTE PTR [eax],al
 10080fc:	into   
 10080fd:	add    DWORD PTR [eax],0x0
 1008100:	mov    eax,0xa8000083
 1008105:	add    DWORD PTR [eax],0x0
 1008108:	cwde   
 1008109:	add    DWORD PTR [eax],0x0
 100810c:	mov    WORD PTR [ebx-0x7c7e0000],es
 1008112:	add    BYTE PTR [eax],al
 1008114:	jbe    0x1008099
 1008116:	add    BYTE PTR [eax],al
 1008118:	push   0xffffff83
 100811a:	add    BYTE PTR [eax],al
 100811c:	pop    esi
 100811d:	add    DWORD PTR [eax],0x0
 1008120:	dec    esi
 1008121:	add    DWORD PTR [eax],0x0
 1008124:	add    DWORD PTR ds:[eax],0x0
 1008128:	jmp    0x85:0xae000089
 100812f:	add    dl,bh
 1008131:	mov    DWORD PTR [eax],eax
 1008133:	add    BYTE PTR [eax],al
 1008135:	add    BYTE PTR [eax],al
 1008137:	add    BYTE PTR [eax],bl
 1008139:	add    DWORD PTR [eax],0x0
 100813c:	or     al,BYTE PTR [ebx-0x7cda0000]
 1008142:	add    BYTE PTR [eax],al
 1008144:	add    BYTE PTR [eax],al
 1008146:	add    BYTE PTR [eax],al
 1008148:	xor    BYTE PTR [edx],al
 100814a:	push   edx
 100814b:	gs addr16 inc ebx
 100814e:	ins    BYTE PTR es:[edi],dx
 100814f:	outs   dx,DWORD PTR ds:[esi]
 1008150:	jae    0x10081b7
 1008152:	dec    ebx
 1008153:	gs jns 0x1008156
 1008156:	popa   
 1008157:	add    dl,BYTE PTR [edx+0x65]
 100815a:	addr16 dec edi
 100815c:	jo     0x10081c3
 100815e:	outs   dx,BYTE PTR ds:[esi]
 100815f:	dec    ebx
 1008160:	gs jns 0x10081a8
 1008163:	js     0x10081bc
 1008165:	add    BYTE PTR [esi+0x2],ch
 1008168:	push   edx
 1008169:	gs addr16 push ecx
 100816c:	jne    0x10081d3
 100816e:	jb     0x10081e9
 1008170:	push   esi
 1008171:	popa   
 1008172:	ins    BYTE PTR es:[edi],dx
 1008173:	jne    0x10081da
 1008175:	inc    ebp
 1008176:	js     0x10081cf
 1008178:	add    BYTE PTR [eax],al
 100817a:	inc    ecx
 100817b:	inc    esp
 100817c:	push   esi
 100817d:	inc    ecx
 100817e:	push   eax
 100817f:	dec    ecx
 1008180:	xor    esi,DWORD PTR [edx]
 1008182:	cs fs ins BYTE PTR es:[edi],dx
 1008185:	ins    BYTE PTR es:[edi],dx
 1008186:	add    BYTE PTR [eax],al
 1008188:	push   esp
 1008189:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
 100818d:	imul   edx,DWORD PTR [edx+0x65],0x73
 1008191:	outs   dx,DWORD PTR ds:[esi]
 1008192:	jne    0x1008206
 1008194:	arpl   WORD PTR [ebp+0x0],sp
 1008197:	add    BYTE PTR [edx+0x1],ah
 100819a:	inc    esi
 100819b:	jb     0x1008202
 100819d:	gs dec esp
 100819f:	imul   esp,DWORD PTR [edx+0x72],0x797261
 10081a6:	inc    ebp
 10081a7:	add    al,BYTE PTR [edi+0x65]
 10081aa:	je     0x10081fc
 10081ac:	jb     0x100821d
 10081ae:	arpl   WORD PTR [ecx+0x64],ax
 10081b1:	fs jb  0x1008219
 10081b4:	jae    0x1008229
 10081b6:	add    BYTE PTR [eax],al
 10081b8:	inc    ecx
 10081b9:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
 10081bd:	fs push edx
 10081bf:	gs jae 0x1008231
 10081c2:	jne    0x1008236
 10081c4:	arpl   WORD PTR [ebp+0x0],sp
 10081c7:	add    BYTE PTR [ecx+0x7a695304],dh
 10081cd:	outs   dx,DWORD PTR gs:[esi]
 10081cf:	push   dx
 10081d1:	gs jae 0x1008243
 10081d4:	jne    0x1008248
 10081d6:	arpl   WORD PTR [ebp+0x0],sp
 10081d9:	add    BYTE PTR [edi],bh
 10081db:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
 10081df:	fs dec esp
 10081e1:	imul   esp,DWORD PTR [edx+0x72],0x57797261
 10081e8:	add    BYTE PTR [eax],al
 10081ea:	adc    al,0x2
 10081ec:	inc    edi
 10081ed:	gs je  0x100823d
 10081f0:	outs   dx,DWORD PTR ds:[esi]
 10081f1:	fs jne 0x1008260
 10081f4:	gs inc esi
 10081f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
 10081fe:	add    BYTE PTR [eax],al
 1008200:	push   edi
 1008201:	add    al,0x53
 1008203:	gs je  0x100824b
 1008206:	outs   dx,BYTE PTR ds:[esi]
 1008207:	jbe    0x1008272
 1008209:	jb     0x100827a
 100820b:	outs   dx,BYTE PTR ds:[esi]
 100820c:	ins    DWORD PTR es:[edi],dx
 100820d:	outs   dx,BYTE PTR gs:[esi]
 100820f:	je     0x1008267
 1008211:	popa   
 1008212:	jb     0x100827d
 1008214:	popa   
 1008215:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
 1008219:	add    BYTE PTR [esi+0x1],cl
 100821c:	inc    esi
 100821d:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
 1008224:	jne    0x1008298
 1008226:	arpl   WORD PTR [ebp+0x57],sp
 1008229:	add    BYTE PTR [ebp+0x1],cl
 100822c:	inc    esi
 100822d:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
 1008234:	jne    0x10082a8
 1008236:	arpl   WORD PTR [ebp+0x45],sp
 1008239:	js     0x1008292
 100823b:	add    dl,ch
 100823d:	add    DWORD PTR [edi+0x65],eax
 1008240:	je     0x1008288
 1008242:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
 100824a:	bound  esi,QWORD PTR [ebp+0x74]
 100824d:	gs jae 0x10082a7
 1008250:	add    BYTE PTR [eax],al
 1008252:	add    DWORD PTR cs:[esi+0x69],eax
 1008256:	outs   dx,BYTE PTR ds:[esi]
 1008257:	fs inc ebx
 1008259:	ins    BYTE PTR es:[edi],dx
 100825a:	outs   dx,DWORD PTR ds:[esi]
 100825b:	jae    0x10082c2
 100825d:	add    BYTE PTR [eax],bl
 100825f:	add    al,BYTE PTR [edi+0x65]
 1008262:	je     0x10082b1
 1008264:	outs   dx,DWORD PTR ds:[esi]
 1008265:	fs jne 0x10082d4
 1008268:	gs dec eax
 100826a:	popa   
 100826b:	outs   dx,BYTE PTR ds:[esi]
 100826c:	fs ins BYTE PTR es:[edi],dx
 100826e:	gs push edi
 1008270:	add    BYTE PTR [eax],al
 1008272:	cmp    DWORD PTR [ecx],eax
 1008274:	inc    esi
 1008275:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
 100827c:	je     0x10082c4
 100827e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x1450000
 1008286:	inc    esi
 1008287:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
 100828e:	inc    esi
 100828f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x47026b00
 1008297:	gs je  0x10082ed
 100829a:	jns    0x100830f
 100829c:	je     0x1008303
 100829e:	ins    DWORD PTR es:[edi],dx
 100829f:	inc    esp
 10082a0:	gs popaw 
 10082a3:	jne    0x1008311
 10082a5:	je     0x10082f3
 10082a7:	inc    ebx
 10082a8:	dec    ecx
 10082a9:	inc    esp
 10082aa:	add    BYTE PTR [eax],al
 10082ac:	fwait
 10082ad:	add    al,BYTE PTR [edi+0x65]
 10082b0:	je     0x1008307
 10082b2:	jae    0x1008319
 10082b4:	jb     0x10082fa
 10082b6:	gs popaw 
 10082b9:	jne    0x1008327
 10082bb:	je     0x1008309
 10082bd:	inc    ebx
 10082be:	dec    ecx
 10082bf:	inc    esp
 10082c0:	add    BYTE PTR [eax],al
 10082c2:	adc    eax,0x74654702
 10082c7:	dec    ebp
 10082c8:	outs   dx,DWORD PTR ds:[esi]
 10082c9:	fs jne 0x1008338
 10082cc:	gs dec eax
 10082ce:	popa   
 10082cf:	outs   dx,BYTE PTR ds:[esi]
 10082d0:	fs ins BYTE PTR es:[edi],dx
 10082d2:	gs inc ecx
 10082d4:	add    BYTE PTR [eax],al
 10082d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10082d7:	add    al,BYTE PTR [edi+0x65]
 10082da:	je     0x1008332
 10082dc:	gs jb  0x1008352
 10082df:	imul   ebp,DWORD PTR [edi+0x6e],0x577845
 10082e6:	add    ecx,DWORD PTR [di+0x75]
 10082ea:	ins    BYTE PTR es:[edi],dx
 10082eb:	je     0x1008356
 10082ed:	inc    edx
 10082ee:	jns    0x1008364
 10082f0:	gs push esp
 10082f2:	outs   dx,DWORD PTR ds:[esi]
 10082f3:	push   edi
 10082f4:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x726168
 10082fc:	dec    ebx
 10082fd:	inc    ebp
 10082fe:	push   edx
 10082ff:	dec    esi
 1008300:	inc    ebp
 1008301:	dec    esp
 1008302:	xor    esi,DWORD PTR [edx]
 1008304:	cs fs ins BYTE PTR es:[edi],dx
 1008307:	ins    BYTE PTR es:[edi],dx
 1008308:	add    BYTE PTR [eax],al
 100830a:	pop    ss
 100830b:	add    cl,BYTE PTR [ebp+0x65]
 100830e:	jae    0x1008383
 1008310:	popa   
 1008311:	addr16 gs inc edx
 1008314:	outs   dx,DWORD PTR ds:[esi]
 1008315:	js     0x100836e
 1008317:	add    ah,bh
 1008319:	add    DWORD PTR [edi+ebp*2+0x61],ecx
 100831d:	fs push ebx
 100831f:	je     0x1008393
 1008321:	imul   ebp,DWORD PTR [esi+0x67],0x310057
 1008328:	inc    ebx
 1008329:	push   0x654e7261
 100832e:	js     0x10083a4
 1008330:	push   edi
 1008331:	add    BYTE PTR [ebp+0x53],dl
 1008334:	inc    ebp
 1008335:	push   edx
 1008336:	xor    esi,DWORD PTR [edx]
 1008338:	cs fs ins BYTE PTR es:[edi],dx
 100833b:	ins    BYTE PTR es:[edi],dx
 100833c:	add    BYTE PTR [eax],al
 100833e:	add    BYTE PTR gs:[edi],bh
 1008341:	aas    
 1008342:	xor    eax,DWORD PTR [eax+0x59]
 1008345:	inc    ecx
 1008346:	pop    eax
 1008347:	push   eax
 1008348:	inc    ecx
 1008349:	pop    eax
 100834a:	inc    eax
 100834b:	pop    edx
 100834c:	add    BYTE PTR [eax],al
 100834e:	arpl   WORD PTR [eax],ax
 1008350:	aas    
 1008351:	aas    
 1008352:	xor    al,BYTE PTR [eax+0x59]
 1008355:	inc    ecx
 1008356:	push   eax
 1008357:	inc    ecx
 1008358:	pop    eax
 1008359:	dec    ecx
 100835a:	inc    eax
 100835b:	pop    edx
 100835c:	add    BYTE PTR [eax],al
 100835e:	rol    BYTE PTR ds:0x636d656d,1
 1008364:	jo     0x10083df
 1008366:	pop    edi
 1008367:	jae    0x1008369
 1008369:	add    dl,dl
 100836b:	add    eax,0x6d6d656d
 1008370:	outs   dx,DWORD PTR ds:[esi]
 1008371:	jbe    0x10083d8
 1008373:	pop    edi
 1008374:	jae    0x1008376
 1008376:	das    
 1008377:	push   es
 1008378:	ja     0x10083dd
 100837a:	jae    0x10083df
 100837c:	popa   
 100837d:	je     0x10083de
 100837f:	jae    0x1008381
 1008381:	add    BYTE PTR [edi],bh
 1008383:	push   es
 1008384:	ja     0x10083e9
 1008386:	jae    0x10083fa
 1008388:	arpl   WORD PTR [eax+0x72],bp
 100838b:	add    BYTE PTR [edi+0x6],cl
 100838e:	ja     0x10083fd
 1008390:	gs ins DWORD PTR es:[edi],dx
 1008392:	arpl   WORD PTR [eax+0x79],si
 1008395:	pop    edi
 1008396:	jae    0x1008398
 1008398:	js     0x100839a
 100839a:	aas    
 100839b:	aas    
 100839c:	pop    edi
 100839d:	push   ebp
 100839e:	inc    eax
 100839f:	pop    ecx
 10083a0:	inc    ecx
 10083a1:	push   eax
 10083a2:	inc    ecx
 10083a3:	pop    eax
 10083a4:	dec    ecx
 10083a5:	inc    eax
 10083a6:	pop    edx
 10083a7:	add    BYTE PTR [edx+0x0],bh
 10083aa:	aas    
 10083ab:	aas    
 10083ac:	pop    edi
 10083ad:	push   esi
 10083ae:	inc    eax
 10083af:	pop    ecx
 10083b0:	inc    ecx
 10083b1:	pop    eax
 10083b2:	push   eax
 10083b3:	inc    ecx
 10083b4:	pop    eax
 10083b5:	inc    eax
 10083b6:	pop    edx
 10083b7:	add    BYTE PTR [ecx],ah
 10083b9:	add    DWORD PTR [edi+0x43],ebx
 10083bc:	js     0x1008436
 10083be:	push   esp
 10083bf:	push   0x45776f72
 10083c4:	js     0x1008429
 10083c6:	gs jo  0x100843d
 10083c9:	imul   ebp,DWORD PTR [edi+0x6e],0x13a0000
 10083d0:	pop    edi
 10083d1:	pop    edi
 10083d2:	inc    ebx
 10083d3:	js     0x100844d
 10083d5:	inc    esi
 10083d6:	jb     0x1008439
 10083d8:	ins    DWORD PTR es:[edi],dx
 10083d9:	gs dec eax
 10083db:	popa   
 10083dc:	outs   dx,BYTE PTR ds:[esi]
 10083dd:	fs ins BYTE PTR es:[edi],dx
 10083df:	gs jb  0x1008415
 10083e2:	add    BYTE PTR [eax],al
 10083e4:	rol    DWORD PTR ds:0x736d656d,cl
 10083ea:	gs je  0x10083ed
 10083ed:	add    cl,dl
 10083ef:	add    eax,0x6d6d656d
 10083f4:	outs   dx,DWORD PTR ds:[esi]
 10083f5:	jbe    0x100845c
 10083f7:	add    BYTE PTR [ebp+eax*1+0x5f],dl
 10083fb:	ja     0x1008471
 10083fd:	outs   dx,DWORD PTR ds:[esi]
 10083fe:	ins    BYTE PTR es:[edi],dx
 10083ff:	add    BYTE PTR [ecx],ch
 1008401:	push   es
 1008402:	jbe    0x1008477
 1008404:	ja     0x1008476
 1008406:	jb     0x1008471
 1008408:	outs   dx,BYTE PTR ds:[esi]
 1008409:	je     0x1008471
 100840b:	pop    edi
 100840c:	jae    0x100840e
 100840e:	lods   eax,DWORD PTR ds:[esi]
 100840f:	add    al,0x5f
 1008411:	jbe    0x1008486
 1008413:	arpl   WORD PTR [edi+0x70],si
 1008416:	jb     0x1008481
 1008418:	outs   dx,BYTE PTR ds:[esi]
 1008419:	je     0x1008481
 100841b:	add    BYTE PTR [edx],ah
 100841d:	add    BYTE PTR [edi],bh
 100841f:	aas    
 1008420:	xor    BYTE PTR [ebp+0x78],ah
 1008423:	arpl   WORD PTR [ebp+0x70],sp
 1008426:	je     0x1008491
 1008428:	outs   dx,DWORD PTR ds:[esi]
 1008429:	outs   dx,BYTE PTR ds:[esi]
 100842a:	inc    eax
 100842b:	jae    0x10084a1
 100842d:	fs inc eax
 100842f:	inc    eax
 1008430:	push   ecx
 1008431:	inc    ecx
 1008432:	inc    ebp
 1008433:	inc    eax
 1008434:	inc    ecx
 1008435:	inc    edx
 1008436:	push   ecx
 1008437:	inc    edx
 1008438:	inc    esp
 1008439:	inc    eax
 100843a:	pop    edx
 100843b:	add    BYTE PTR [eax+eax*1],ah
 100843e:	aas    
 100843f:	aas    
 1008440:	xor    BYTE PTR [ebp+0x78],ah
 1008443:	arpl   WORD PTR [ebp+0x70],sp
 1008446:	je     0x10084b1
 1008448:	outs   dx,DWORD PTR ds:[esi]
 1008449:	outs   dx,BYTE PTR ds:[esi]
 100844a:	inc    eax
 100844b:	jae    0x10084c1
 100844d:	fs inc eax
 100844f:	inc    eax
 1008450:	push   ecx
 1008451:	inc    ecx
 1008452:	inc    ebp
 1008453:	inc    eax
 1008454:	inc    ecx
 1008455:	inc    edx
 1008456:	push   esi
 1008457:	xor    BYTE PTR [ecx],dh
 1008459:	inc    eax
 100845a:	inc    eax
 100845b:	pop    edx
 100845c:	add    BYTE PTR [eax],al
 100845e:	pop    ebp
 100845f:	add    BYTE PTR [edi],bh
 1008461:	aas    
 1008462:	xor    DWORD PTR [ebp+0x78],esp
 1008465:	arpl   WORD PTR [ebp+0x70],sp
 1008468:	je     0x10084d3
 100846a:	outs   dx,DWORD PTR ds:[esi]
 100846b:	outs   dx,BYTE PTR ds:[esi]
 100846c:	inc    eax
 100846d:	jae    0x10084e3
 100846f:	fs inc eax
 1008471:	inc    eax
 1008472:	push   ebp
 1008473:	inc    ecx
 1008474:	inc    ebp
 1008475:	inc    eax
 1008476:	pop    eax
 1008477:	pop    edx
 1008478:	add    BYTE PTR [eax],al
 100847a:	or     eax,0x68773f01
 100847f:	popa   
 1008480:	je     0x10084c2
 1008482:	gs js  0x10084e8
 1008485:	gs jo  0x10084fc
 1008488:	imul   ebp,DWORD PTR [edi+0x6e],0x64747340
 100848f:	inc    eax
 1008490:	inc    eax
 1008491:	push   ebp
 1008492:	inc    edx
 1008493:	inc    ebp
 1008494:	push   eax
 1008495:	inc    edx
 1008496:	inc    esp
 1008497:	pop    eax
 1008498:	pop    edx
 1008499:	add    BYTE PTR [eax],dh
 100849b:	push   es
 100849c:	ja     0x1008501
 100849e:	jae    0x1008503
 10084a0:	push   0xd8000072
 10084a5:	add    al,0x5f
 10084a7:	ja     0x100850c
 10084a9:	jae    0x1008514
 10084ab:	arpl   WORD PTR [ebp+0x70],bp
 10084ae:	add    BYTE PTR [eax],al
 10084b0:	mov    eax,DWORD PTR ds:0x65657266
 10084b6:	add    BYTE PTR [eax],al
 10084b8:	les    eax,FWORD PTR ds:0x6c6c616d
 10084be:	outs   dx,DWORD PTR ds:[esi]
 10084bf:	arpl   WORD PTR [eax],ax
 10084c1:	add    ch,al
 10084c3:	add    DWORD PTR [edi+0x61],ebx
 10084c6:	ins    DWORD PTR es:[edi],dx
 10084c7:	jae    0x1008530
 10084c9:	pop    edi
 10084ca:	gs js  0x1008536
 10084cd:	je     0x10084cf
 10084cf:	add    BYTE PTR [ebx+0x1],ah
 10084d2:	pop    edi
 10084d3:	pop    edi
 10084d4:	addr16 gs je 0x1008545
 10084d8:	popa   
 10084d9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
 10084e0:	fadd   QWORD PTR [ecx]
 10084e2:	pop    edi
 10084e3:	arpl   WORD PTR [ebp+0x78],sp
 10084e6:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x655f022a
 10084ee:	js     0x1008559
 10084f0:	je     0x10084f2
 10084f2:	sub    eax,0x63585f01
 10084f7:	jo     0x100856d
 10084f9:	inc    esi
 10084fa:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x2d20072
 1008502:	pop    edi
 1008503:	imul   esi,DWORD PTR [ebx+0x6d],0x656c6262
 100850a:	popa   
 100850b:	add    BYTE PTR fs:[eax],al
 100850e:	jae    0x1008515
 1008510:	gs js  0x100857c
 1008513:	je     0x1008515
 1008515:	add    BYTE PTR [ecx+eax*1+0x6d63615f],bh
 100851c:	fs ins BYTE PTR es:[edi],dx
 100851e:	outs   dx,BYTE PTR ds:[esi]
 100851f:	add    BYTE PTR [eax+0x6e695f02],dh
 1008525:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xb1006d72
 100852d:	add    bl,BYTE PTR [edi+0x69]
 1008530:	outs   dx,BYTE PTR ds:[esi]
 1008531:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x655f6d72
 1008539:	add    ah,ch
 100853b:	add    DWORD PTR [edi+0x63],ebx
 100853e:	outs   dx,DWORD PTR ds:[esi]
 100853f:	outs   dx,BYTE PTR ds:[esi]
 1008540:	imul   sp,WORD PTR [edi+0x74],0x7268
 1008546:	gs popa 
 1008548:	fs ins BYTE PTR es:[edi],dx
 100854a:	outs   dx,DWORD PTR ds:[esi]
 100854b:	arpl   WORD PTR [ecx+0x6c],sp
 100854e:	add    BYTE PTR gs:[edx+0x735f5f01],ah
 1008555:	gs je  0x10085cd
 1008558:	jae    0x10085bf
 100855a:	jb     0x10085c9
 100855c:	popa   
 100855d:	je     0x10085c7
 100855f:	gs jb  0x10085d4
 1008562:	add    BYTE PTR [eax],al
 1008564:	jmp    0x1008567
 1008566:	pop    edi
 1008567:	arpl   WORD PTR [edi+0x6d],bp
 100856a:	ins    DWORD PTR es:[edi],dx
 100856b:	outs   dx,DWORD PTR ds:[esi]
 100856c:	fs add BYTE PTR gs:[eax],al
 1008570:	inc    ebp
 1008571:	add    bl,BYTE PTR [edi+0x66]
 1008574:	ins    DWORD PTR es:[edi],dx
 1008575:	outs   dx,DWORD PTR ds:[esi]
 1008576:	fs add BYTE PTR gs:[eax],al
 100857a:	lahf   
 100857b:	add    DWORD PTR [edi+0x5f],ebx
 100857e:	jae    0x10085e5
 1008580:	je     0x10085e1
 1008582:	popa   
 1008583:	jo     0x10085f5
 1008585:	pop    edi
 1008586:	je     0x1008601
 1008588:	jo     0x10085ef
 100858a:	add    BYTE PTR [eax],al
 100858c:	dec    ebp
 100858d:	push   ebx
 100858e:	push   esi
 100858f:	inc    ebx
 1008590:	push   edx
 1008591:	xor    DWORD PTR [eax],esi
 1008593:	xor    BYTE PTR [esi],ch
 1008595:	fs ins BYTE PTR es:[edi],dx
 1008597:	ins    BYTE PTR es:[edi],dx
 1008598:	add    BYTE PTR [eax],al
 100859a:	add    al,BYTE PTR [ecx]
 100859c:	aas    
 100859d:	je     0x1008604
 100859f:	jb     0x100860e
 10085a1:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
 10085a8:	pop    ecx
 10085a9:	inc    ecx
 10085aa:	pop    eax
 10085ab:	pop    eax
 10085ac:	pop    edx
 10085ad:	add    BYTE PTR [ebp+0x6e755f04],cl
 10085b3:	ins    BYTE PTR es:[edi],dx
 10085b4:	outs   dx,DWORD PTR ds:[esi]
 10085b5:	arpl   WORD PTR [ebx+0x0],bp
 10085b8:	pop    ebx
 10085b9:	add    DWORD PTR [edi+0x5f],ebx
 10085bc:	fs ins BYTE PTR es:[edi],dx
 10085be:	ins    BYTE PTR es:[edi],dx
 10085bf:	outs   dx,DWORD PTR ds:[esi]
 10085c0:	outs   dx,BYTE PTR ds:[esi]
 10085c1:	gs js  0x100862d
 10085c4:	je     0x10085c6
 10085c6:	and    eax,DWORD PTR [ebx]
 10085c8:	pop    edi
 10085c9:	ins    BYTE PTR es:[edi],dx
 10085ca:	outs   dx,DWORD PTR ds:[esi]
 10085cb:	arpl   WORD PTR [ebx+0x0],bp
 10085ce:	leave  
 10085cf:	add    ebx,DWORD PTR [edi+0x6f]
 10085d2:	outs   dx,BYTE PTR ds:[esi]
 10085d3:	gs js  0x100863f
 10085d6:	je     0x10085d8
 10085d8:	and    DWORD PTR [edx],eax
 10085da:	pop    edi
 10085db:	gs js  0x1008641
 10085de:	gs jo  0x1008655
 10085e1:	pop    edi
 10085e2:	push   0x6c646e61
 10085e7:	gs jb  0x100861e
 10085ea:	pop    edi
 10085eb:	arpl   WORD PTR [edi+0x6d],bp
 10085ee:	ins    DWORD PTR es:[edi],dx
 10085ef:	outs   dx,DWORD PTR ds:[esi]
 10085f0:	outs   dx,BYTE PTR ds:[esi]
 10085f1:	add    BYTE PTR [eax+0x6e695f02],bh
 10085f7:	jbe    0x1008668
 10085f9:	imul   esp,DWORD PTR [ebp+0x5f],0x77
 10085fd:	popa   
 10085fe:	je     0x1008673
 1008600:	outs   dx,DWORD PTR ds:[esi]
 1008601:	outs   dx,BYTE PTR ds:[esi]
 1008602:	add    BYTE PTR [eax],al
 1008604:	out    dx,eax
 1008605:	add    DWORD PTR [edi+0x63],ebx
 1008608:	outs   dx,DWORD PTR ds:[esi]
 1008609:	outs   dx,BYTE PTR ds:[esi]
 100860a:	je     0x100867e
 100860c:	outs   dx,DWORD PTR ds:[esi]
 100860d:	ins    BYTE PTR es:[edi],dx
 100860e:	data16 jo 0x1008670
 1008611:	jae    0x1008613
 1008613:	add    bl,bh
 1008615:	add    DWORD PTR [edi+0x63],ebx
 1008618:	jb     0x100868e
 100861a:	pop    edi
 100861b:	fs bound esi,QWORD PTR gs:[ebp+0x67]
 1008620:	addr16 gs jb 0x1008683
 1008624:	push   0x6b6f6f
 1008629:	add    dh,ch
 100862b:	add    BYTE PTR [edi],bh
 100862d:	pop    edi
 100862e:	je     0x10086a9
 1008630:	jo     0x1008697
 1008632:	pop    edi
 1008633:	imul   ebp,DWORD PTR [esi+0x66],0x74645f6f
 100863a:	outs   dx,DWORD PTR ds:[esi]
 100863b:	jb     0x100869c
 100863d:	imul   ebp,DWORD PTR [esi+0x74],0x616e7265
 1008644:	ins    BYTE PTR es:[edi],dx
 1008645:	pop    edi
 1008646:	ins    DWORD PTR es:[edi],dx
 1008647:	gs je  0x10086b2
 100864a:	outs   dx,DWORD PTR ds:[esi]
 100864b:	fs inc eax
 100864d:	je     0x10086c8
 100864f:	jo     0x10086b6
 1008651:	pop    edi
 1008652:	imul   ebp,DWORD PTR [esi+0x66],0x5140406f
 1008659:	inc    ecx
 100865a:	inc    ebp
 100865b:	pop    eax
 100865c:	pop    eax
 100865d:	pop    edx
 100865e:	add    BYTE PTR [eax],al
 1008660:	push   ecx
 1008661:	add    bh,BYTE PTR [edi]
 1008663:	pop    edi
 1008664:	dec    edi
 1008665:	jb     0x10086d7
 1008667:	push   0x615f6e61
 100866c:	ins    BYTE PTR es:[edi],dx
 100866d:	ins    BYTE PTR es:[edi],dx
 100866e:	inc    eax
 100866f:	pop    edi
 1008670:	inc    ebx
 1008671:	outs   dx,DWORD PTR ds:[esi]
 1008672:	outs   dx,BYTE PTR ds:[esi]
 1008673:	je     0x10086d6
 1008675:	imul   ebp,DWORD PTR [esi+0x65],0x61625f72
 100867c:	jae    0x10086e3
 100867e:	xor    BYTE PTR [eax+0x73],al
 1008681:	je     0x10086e7
 1008683:	inc    eax
 1008684:	inc    eax
 1008685:	push   ecx
 1008686:	inc    ecx
 1008687:	inc    ebp
 1008688:	pop    eax
 1008689:	pop    eax
 100868a:	pop    edx
 100868b:	add    BYTE PTR [edx+eax*1+0x6c585f3f],cl
 1008692:	outs   dx,BYTE PTR gs:[esi]
 1008694:	addr16 je 0x10086ff
 1008697:	pop    edi
 1008698:	gs jb  0x100870d
 100869b:	outs   dx,DWORD PTR ds:[esi]
 100869c:	jb     0x10086de
 100869e:	jae    0x1008714
 10086a0:	fs inc eax
 10086a2:	inc    eax
 10086a3:	pop    ecx
 10086a4:	inc    ecx
 10086a5:	pop    eax
 10086a6:	push   eax
 10086a7:	inc    edx
 10086a8:	inc    esp
 10086a9:	inc    eax
 10086aa:	pop    edx
 10086ab:	add    BYTE PTR [ebp+0x53],cl
 10086ae:	push   esi
 10086af:	inc    ebx
 10086b0:	push   eax
 10086b1:	xor    DWORD PTR [eax],esi
 10086b3:	xor    BYTE PTR [esi],ch
 10086b5:	fs ins BYTE PTR es:[edi],dx
 10086b7:	ins    BYTE PTR es:[edi],dx
 10086b8:	add    BYTE PTR [eax],al
 10086ba:	add    dl,BYTE PTR fs:[edx+0x65]
 10086be:	addr16 dec edi
 10086c0:	jo     0x1008727
 10086c2:	outs   dx,BYTE PTR ds:[esi]
 10086c3:	dec    ebx
 10086c4:	gs jns 0x100871e
 10086c7:	add    BYTE PTR [ebx+0x61734c01],bh
 10086cd:	dec    esi
 10086ce:	je     0x1008723
 10086d0:	je     0x1008733
 10086d2:	je     0x1008749
 10086d4:	jae    0x100872a
 10086d6:	outs   dx,DWORD PTR ds:[esi]
 10086d7:	push   edi
 10086d8:	imul   ebp,DWORD PTR [esi+0x45],0x726f7272
 10086df:	add    ah,ch
 10086e1:	add    cl,BYTE PTR [ecx+0x6e]
 10086e4:	je     0x100874b
 10086e6:	jb     0x1008754
 10086e8:	outs   dx,DWORD PTR ds:[esi]
 10086e9:	arpl   WORD PTR [ebx+0x65],bp
 10086ec:	fs inc ebp
 10086ee:	js     0x1008753
 10086f0:	push   0x65676e61
 10086f5:	add    BYTE PTR [edx+0x656c5304],dh
 10086fb:	gs jo  0x10086fe
 10086fe:	jmp    0x756ed005
 1008703:	gs jb  0x1008772
 1008706:	outs   dx,DWORD PTR ds:[esi]
 1008707:	arpl   WORD PTR [ebx+0x65],bp
 100870a:	fs inc ebx
 100870c:	outs   dx,DWORD PTR ds:[esi]
 100870d:	ins    DWORD PTR es:[edi],dx
 100870e:	jo     0x1008771
 1008710:	jb     0x1008777
 1008712:	inc    ebp
 1008713:	js     0x1008778
 1008715:	push   0x65676e61
 100871a:	add    BYTE PTR [eax],al
 100871c:	rol    DWORD PTR [edx],cl
 100871e:	dec    eax
 100871f:	gs popa 
 1008721:	jo     0x1008776
 1008723:	gs je  0x100876f
 1008726:	outs   dx,BYTE PTR ds:[esi]
 1008727:	outs   dx,WORD PTR ds:[esi]
 1008729:	jb     0x1008798
 100872b:	popa   
 100872c:	je     0x1008797
 100872e:	outs   dx,DWORD PTR ds:[esi]
 100872f:	outs   dx,BYTE PTR ds:[esi]
 1008730:	add    BYTE PTR [eax],al
 1008732:	arpl   WORD PTR [edx],ax
 1008734:	inc    edi
 1008735:	gs je  0x100878b
 1008738:	je     0x100879b
 100873a:	jb     0x10087b0
 100873c:	jne    0x10087ae
 100873e:	dec    ecx
 100873f:	outs   dx,BYTE PTR ds:[esi]
 1008740:	outs   dx,WORD PTR ds:[esi]
 1008742:	push   edi
 1008743:	add    dl,ch
 1008745:	add    BYTE PTR [ebp+0x6e],al
 1008748:	arpl   WORD PTR [edi+0x64],bp
 100874b:	gs push eax
 100874d:	outs   dx,DWORD PTR ds:[esi]
 100874e:	imul   ebp,DWORD PTR [esi+0x74],0xa5007265
 1008755:	add    al,0x53
 1008757:	gs je  0x10087af
 100875a:	outs   dx,BYTE PTR ds:[esi]
 100875b:	push   0x6c646e61
 1008760:	gs fs inc ebp
 1008763:	js     0x10087c8
 1008765:	gs jo  0x10087dc
 1008768:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 100876f:	gs jb  0x1008772
 1008772:	retf   0x4400
 1008775:	arpl   WORD PTR gs:[edi+0x64],bp
 1008779:	gs push eax
 100877b:	outs   dx,DWORD PTR ds:[esi]
 100877c:	imul   ebp,DWORD PTR [esi+0x74],0xa7007265
 1008783:	add    edx,DWORD PTR [ecx+0x75]
 1008786:	gs jb  0x1008802
 1008789:	push   eax
 100878a:	gs jb  0x10087f3
 100878d:	outs   dx,DWORD PTR ds:[esi]
 100878e:	jb     0x10087fd
 1008790:	popa   
 1008791:	outs   dx,BYTE PTR ds:[esi]
 1008792:	arpl   WORD PTR [ebp+0x43],sp
 1008795:	outs   dx,DWORD PTR ds:[esi]
 1008796:	jne    0x1008806
 1008798:	je     0x10087ff
 100879a:	jb     0x100879c
 100879c:	xchg   ebx,eax
 100879d:	add    al,BYTE PTR [edi+0x65]
 10087a0:	je     0x10087f6
 10087a2:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
 10087a9:	je     0x10087ab
 10087ab:	add    ch,al
 10087ad:	add    DWORD PTR [edi+0x65],eax
 10087b0:	je     0x10087f5
 10087b2:	jne    0x1008826
 10087b4:	jb     0x100881b
 10087b6:	outs   dx,BYTE PTR ds:[esi]
 10087b7:	je     0x100880d
 10087b9:	push   0x64616572
 10087be:	dec    ecx
 10087bf:	add    BYTE PTR fs:[eax],al
 10087c2:	rol    DWORD PTR [ecx],0x47
 10087c5:	gs je  0x100880b
 10087c8:	jne    0x100883c
 10087ca:	jb     0x1008831
 10087cc:	outs   dx,BYTE PTR ds:[esi]
 10087cd:	je     0x100881f
 10087cf:	jb     0x1008840
 10087d1:	arpl   WORD PTR [ebp+0x73],sp
 10087d4:	jae    0x100881f
 10087d6:	add    BYTE PTR fs:[ecx+0x2],bh
 10087da:	inc    edi
 10087db:	gs je  0x1008831
 10087de:	jns    0x1008853
 10087e0:	je     0x1008847
 10087e2:	ins    DWORD PTR es:[edi],dx
 10087e3:	push   esp
 10087e4:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
 10087eb:	ins    BYTE PTR es:[edi],dx
 10087ec:	gs push esp
 10087ee:	imul   ebp,DWORD PTR [ebp+0x65],0x5404c000
 10087f5:	gs jb  0x1008865
 10087f8:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
 10087ff:	outs   dx,DWORD PTR ds:[esi]
 1008800:	arpl   WORD PTR [ebp+0x73],sp
 1008803:	jae    0x1008805
 1008805:	add    al,al
 1008807:	add    DWORD PTR [edi+0x65],eax
 100880a:	je     0x100884f
 100880c:	jne    0x1008880
 100880e:	jb     0x1008875
 1008810:	outs   dx,BYTE PTR ds:[esi]
 1008811:	je     0x1008863
 1008813:	jb     0x1008884
 1008815:	arpl   WORD PTR [ebp+0x73],sp
 1008818:	jae    0x100881a
 100881a:	rol    DWORD PTR [edx*2+0x6e61686e],cl
 1008821:	fs ins BYTE PTR es:[edi],dx
 1008823:	gs fs inc ebp
 1008826:	js     0x100888b
 1008828:	gs jo  0x100889f
 100882b:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 1008832:	gs jb  0x1008835
 1008835:	add    BYTE PTR [eax],al
 1008837:	add    ecx,DWORD PTR [ecx+0x73]
 100883a:	inc    esp
 100883b:	bound  esi,QWORD PTR gs:[ebp+0x67]
 100883f:	addr16 gs jb 0x1008893
 1008843:	jb     0x10088aa
 1008845:	jae    0x10088ac
 1008847:	outs   dx,BYTE PTR ds:[esi]
 1008848:	je     0x100884a
 100884a:	mov    cl,0x3
 100884c:	push   edx
 100884d:	popa   
 100884e:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
 1008855:	jo     0x10088cb
 1008857:	imul   ebp,DWORD PTR [edi+0x6e],0x2020000
 100885e:	inc    edi
 100885f:	gs je  0x10088ae
 1008862:	popa   
 1008863:	jae    0x10088d9
 1008865:	inc    ebp
 1008866:	jb     0x10088da
 1008868:	outs   dx,DWORD PTR ds:[esi]
 1008869:	jb     0x100886b
 100886b:	add    dh,ch
 100886d:	add    BYTE PTR [ebp+0x6e],al
 1008870:	je     0x10088d7
 1008872:	jb     0x10088b7
 1008874:	jb     0x10088df
 1008876:	je     0x10088e1
 1008878:	arpl   WORD PTR [ecx+0x6c],sp
 100887b:	push   ebx
 100887c:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1008881:	outs   dx,BYTE PTR ds:[esi]
 1008882:	add    BYTE PTR [eax],al
 1008884:	cmp    DWORD PTR [ebx],eax
 1008886:	dec    esp
 1008887:	gs popa 
 1008889:	jbe    0x10088f0
 100888b:	inc    ebx
 100888c:	jb     0x10088f7
 100888e:	je     0x10088f9
 1008890:	arpl   WORD PTR [ecx+0x6c],sp
 1008893:	push   ebx
 1008894:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1008899:	outs   dx,BYTE PTR ds:[esi]
 100889a:	add    BYTE PTR [eax],al
 100889c:	jecxz  0x10088a0
 100889e:	dec    ecx
 100889f:	outs   dx,BYTE PTR ds:[esi]
 10088a0:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 10088a8:	inc    ebx
 10088a9:	jb     0x1008914
 10088ab:	je     0x1008916
 10088ad:	arpl   WORD PTR [ecx+0x6c],sp
 10088b0:	push   ebx
 10088b1:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 10088b6:	outs   dx,BYTE PTR ds:[esi]
 10088b7:	inc    ecx
 10088b8:	outs   dx,BYTE PTR ds:[esi]
 10088b9:	fs push ebx
 10088bb:	jo     0x1008926
 10088bd:	outs   dx,BYTE PTR ds:[esi]
 10088be:	inc    ebx
 10088bf:	outs   dx,DWORD PTR ds:[esi]
 10088c0:	jne    0x1008930
 10088c2:	je     0x10088c4
 10088c4:	rol    DWORD PTR [eax],1
 10088c6:	inc    esp
 10088c7:	gs ins BYTE PTR es:[edi],dx
 10088c9:	gs je  0x1008931
 10088cc:	inc    ebx
 10088cd:	jb     0x1008938
 10088cf:	je     0x100893a
 10088d1:	arpl   WORD PTR [ecx+0x6c],sp
 10088d4:	push   ebx
 10088d5:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 10088da:	outs   dx,BYTE PTR ds:[esi]
 10088db:	add    dh,cl
 10088dd:	add    cl,BYTE PTR [eax+0x65]
 10088e0:	popa   
 10088e1:	jo     0x1008927
 10088e3:	gs jae 0x100895a
 10088e6:	jb     0x1008957
 10088e8:	jns    0x10088ea
 10088ea:	retf   
 10088eb:	add    cl,BYTE PTR [eax+0x65]
 10088ee:	popa   
 10088ef:	jo     0x1008932
 10088f1:	ins    BYTE PTR es:[edi],dx
 10088f2:	ins    BYTE PTR es:[edi],dx
 10088f3:	outs   dx,DWORD PTR ds:[esi]
 10088f4:	arpl   WORD PTR [eax],ax
 10088f6:	rol    BYTE PTR [edx],cl
 10088f8:	dec    eax
 10088f9:	gs popa 
 10088fb:	jo     0x100894f
 10088fd:	gs inc ecx
 10088ff:	ins    BYTE PTR es:[edi],dx
 1008900:	ins    BYTE PTR es:[edi],dx
 1008901:	outs   dx,DWORD PTR ds:[esi]
 1008902:	arpl   WORD PTR [eax],ax
 1008904:	iret   
 1008905:	add    cl,BYTE PTR [eax+0x65]
 1008908:	popa   
 1008909:	jo     0x1008951
 100890b:	jb     0x1008972
 100890d:	add    BYTE PTR gs:[eax],al
 1008910:	aam    0x2
 1008912:	dec    eax
 1008913:	gs popa 
 1008915:	jo     0x100896a
 1008917:	imul   edi,DWORD PTR [edx+0x65],0x24a0000
 100891e:	inc    edi
 100891f:	gs je  0x1008972
 1008922:	jb     0x1008993
 1008924:	arpl   WORD PTR [ebp+0x73],sp
 1008927:	jae    0x1008971
 1008929:	gs popa 
 100892b:	jo     0x100892d
 100892d:	add    ah,bl
 100892f:	add    DWORD PTR [edi+0x65],eax
 1008932:	je     0x1008979
 1008934:	outs   dx,BYTE PTR ds:[esi]
 1008935:	jbe    0x10089a0
 1008937:	jb     0x10089a8
 1008939:	outs   dx,BYTE PTR ds:[esi]
 100893a:	ins    DWORD PTR es:[edi],dx
 100893b:	outs   dx,BYTE PTR gs:[esi]
 100893d:	je     0x1008995
 100893f:	popa   
 1008940:	jb     0x10089ab
 1008942:	popa   
 1008943:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
 1008947:	add    BYTE PTR [eax+eax*1+0x43],ah
 100894b:	outs   dx,DWORD PTR ds:[esi]
 100894c:	ins    DWORD PTR es:[edi],dx
 100894d:	jo     0x10089b0
 100894f:	jb     0x10089b6
 1008951:	push   ebx
 1008952:	je     0x10089c6
 1008954:	imul   ebp,DWORD PTR [esi+0x67],0x4e000057
 100895b:	add    eax,0x7274736c
 1008960:	ins    BYTE PTR es:[edi],dx
 1008961:	outs   dx,BYTE PTR gs:[esi]
 1008963:	push   edi
 1008964:	add    BYTE PTR [eax],al
 1008966:	icebp  
 1008967:	add    al,0x56
 1008969:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
 1008970:	jne    0x10089d7
 1008972:	jb     0x10089ed
 1008974:	add    BYTE PTR [eax],al
 1008976:	jae    0x100897c
 1008978:	push   ebx
 1008979:	gs je  0x10089c8
 100897c:	popa   
 100897d:	jae    0x10089f3
 100897f:	inc    ebp
 1008980:	jb     0x10089f4
 1008982:	outs   dx,DWORD PTR ds:[esi]
 1008983:	jb     0x1008985
 1008985:	add    bh,al
 1008987:	add    BYTE PTR [ebp+eiz*2+0x62],al
 100898b:	jne    0x10089f4
 100898d:	inc    edx
 100898e:	jb     0x10089f5
 1008990:	popa   
 1008991:	imul   eax,DWORD PTR [eax],0x0
 1008994:	sbb    eax,0x70784501
 1008999:	popa   
 100899a:	outs   dx,BYTE PTR ds:[esi]
 100899b:	fs inc ebp
 100899d:	outs   dx,BYTE PTR ds:[esi]
 100899e:	jbe    0x1008a09
 10089a0:	jb     0x1008a11
 10089a2:	outs   dx,BYTE PTR ds:[esi]
 10089a3:	ins    DWORD PTR es:[edi],dx
 10089a4:	outs   dx,BYTE PTR gs:[esi]
 10089a6:	je     0x10089fb
 10089a8:	je     0x1008a1c
 10089aa:	imul   ebp,DWORD PTR [esi+0x67],0x42005773
 10089b1:	add    al,BYTE PTR [edi+0x65]
 10089b4:	je     0x1008a06
 10089b6:	jb     0x1008a21
 10089b8:	jbe    0x1008a1b
 10089ba:	je     0x1008a21
 10089bc:	push   eax
 10089bd:	jb     0x1008a2e
 10089bf:	imul   bp,WORD PTR [ebp+eiz*2+0x53],0x7274
 10089c6:	imul   ebp,DWORD PTR [esi+0x67],0x44000057
 10089cd:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
 10089d1:	popa   
 10089d2:	ins    BYTE PTR es:[edi],dx
 10089d3:	inc    ecx
 10089d4:	ins    BYTE PTR es:[edi],dx
 10089d5:	ins    BYTE PTR es:[edi],dx
 10089d6:	outs   dx,DWORD PTR ds:[esi]
 10089d7:	arpl   WORD PTR [eax],ax
 10089d9:	add    BYTE PTR [ebx+eax*1],bh
 10089dc:	dec    esp
 10089dd:	outs   dx,DWORD PTR ds:[esi]
 10089de:	popa   
 10089df:	fs dec esp
 10089e1:	imul   esp,DWORD PTR [edx+0x72],0x41797261
 10089e8:	add    BYTE PTR [eax],al
 10089ea:	push   0x4
 10089ec:	pop    edi
 10089ed:	jae    0x1008a66
 10089ef:	jae    0x1008a54
 10089f1:	popa   
 10089f2:	outs   dx,BYTE PTR ds:[esi]
 10089f3:	pop    di
 10089f5:	jae    0x1008a56
 10089f7:	ins    BYTE PTR es:[edi],dx
 10089f8:	add    BYTE PTR [eax],al
 10089fa:	iret   
 10089fb:	add    eax,0x636d656d
 1008a00:	jo     0x1008a7b
	...

Disassembly of section .data:

01009000 <.data>:
 1009000:	les    ebx,FWORD PTR [edx]
 1009002:	add    BYTE PTR [ecx],al
 1009004:	add    BYTE PTR [eax],al
 1009006:	add    BYTE PTR [eax],al
 1009008:	cs aas 
 100900a:	inc    ecx
 100900b:	push   esi
 100900c:	inc    ebx
 100900d:	inc    ecx
 100900e:	je     0x100907c
 1009010:	inc    ebp
 1009011:	js     0x1009076
 1009013:	gs jo  0x100908a
 1009016:	imul   ebp,DWORD PTR [edi+0x6e],0x4c544140
 100901d:	inc    eax
 100901e:	inc    eax
 100901f:	add    ah,al
 1009021:	sbb    al,BYTE PTR [eax]
 1009023:	add    DWORD PTR [eax],eax
 1009025:	add    BYTE PTR [eax],al
 1009027:	add    BYTE PTR [esi],ch
 1009029:	pop    edi
 100902a:	dec    esi
 100902b:	add    ah,al
 100902d:	sbb    al,BYTE PTR [eax]
 100902f:	add    DWORD PTR [eax],eax
 1009031:	add    BYTE PTR [eax],al
 1009033:	add    BYTE PTR [esi],ch
 1009035:	aas    
 1009036:	inc    ecx
 1009037:	push   esi
 1009038:	bound  esp,QWORD PTR [ecx+0x64]
 100903b:	pop    edi
 100903c:	popa   
 100903d:	ins    BYTE PTR es:[edi],dx
 100903e:	ins    BYTE PTR es:[edi],dx
 100903f:	outs   dx,DWORD PTR ds:[esi]
 1009040:	arpl   WORD PTR [eax+0x73],ax
 1009043:	je     0x10090a9
 1009045:	inc    eax
 1009046:	inc    eax
 1009047:	add    ah,al
 1009049:	sbb    al,BYTE PTR [eax]
 100904b:	add    DWORD PTR [eax],eax
 100904d:	add    BYTE PTR [eax],al
 100904f:	add    BYTE PTR [esi],ch
 1009051:	aas    
 1009052:	inc    ecx
 1009053:	push   esi
 1009054:	gs js  0x10090ba
 1009057:	gs jo  0x10090ce
 100905a:	imul   ebp,DWORD PTR [edi+0x6e],0x64747340
 1009061:	inc    eax
 1009062:	inc    eax
 1009063:	add    ah,al
 1009065:	sbb    al,BYTE PTR [eax]
 1009067:	add    DWORD PTR [eax],eax
 1009069:	add    BYTE PTR [eax],al
 100906b:	add    BYTE PTR [esi],ch
 100906d:	aas    
 100906e:	inc    ecx
 100906f:	push   esi
 1009070:	je     0x10090eb
 1009072:	jo     0x10090d9
 1009074:	pop    edi
 1009075:	imul   ebp,DWORD PTR [esi+0x66],0x40406f
 100907c:	dec    esi
 100907d:	out    0x40,al
 100907f:	mov    ebx,0x44bf19b1
	...
 1009090:	(bad)  
 1009091:	(bad)  
 1009092:	(bad)  
 1009093:	(bad)  
 1009094:	(bad)  
 1009095:	(bad)  
 1009096:	(bad)  
 1009097:	inc    DWORD PTR [eax]
 1009099:	add    BYTE PTR [eax],al
 100909b:	add    BYTE PTR [eax],al
 100909d:	add    BYTE PTR [eax],al
 100909f:	add    dh,bh
 10090a1:	(bad)  
 10090a2:	(bad)  
 10090a3:	inc    DWORD PTR [ecx]
 10090a5:	add    BYTE PTR [eax],al
 10090a7:	add    BYTE PTR [ebx+ebx*1],dl
 10090aa:	add    BYTE PTR [ecx],al
 10090ac:	sbb    al,0xa4
 10090ae:	add    BYTE PTR [ecx],al
 10090b0:	test   al,0x90
 10090b2:	add    BYTE PTR [ecx],al
	...
 10090bc:	add    al,BYTE PTR [eax]
 10090be:	add    BYTE PTR [eax],al
 10090c0:	add    BYTE PTR [eax],al
 10090c2:	add    BYTE PTR [eax],al
 10090c4:	cld    
 10090c5:	sbb    eax,DWORD PTR [eax]
 10090c7:	add    DWORD PTR [ebx],ecx
 10090c9:	add    BYTE PTR [eax],al
 10090cb:	add    BYTE PTR [eax],bl
 10090cd:	sbb    al,0x0
 10090cf:	add    DWORD PTR [ebp+0x0],ecx
 10090d2:	add    BYTE PTR [eax],al
 10090d4:	mov    ah,0x1c
 10090d6:	add    BYTE PTR [ecx],al
 10090d8:	adc    eax,DWORD PTR [eax]
 10090da:	add    BYTE PTR [eax],al
 10090dc:	pop    ss
 10090dd:	pop    eax
 10090de:	add    BYTE PTR [ecx],al
	...

Disassembly of section .rsrc:

0100b000 <.rsrc>:
	...
 100b008:	add    al,0x0
 100b00a:	add    BYTE PTR [eax],al
 100b00c:	add    BYTE PTR [eax],al
 100b00e:	push   es
 100b00f:	add    BYTE PTR [ebx],al
 100b011:	add    BYTE PTR [eax],al
 100b013:	add    BYTE PTR [eax+0x0],al
 100b016:	add    BYTE PTR [eax+0x6],al
 100b01c:	or     BYTE PTR [edx],al
 100b01e:	add    BYTE PTR [eax+0x9],al
 100b024:	and    BYTE PTR [edx],al
 100b026:	add    BYTE PTR [eax+0xe],al
 100b02c:	cmp    BYTE PTR [edx],al
 100b02e:	add    BYTE PTR [eax+0x10],al
 100b034:	mov    al,0x2
 100b036:	add    BYTE PTR [eax+0x18],al
 100b03c:	enter  0x2,0x80
	...
 100b048:	add    al,0x0
 100b04a:	add    BYTE PTR [eax],al
 100b04c:	add    BYTE PTR [eax],al
 100b04e:	aaa    
 100b04f:	add    BYTE PTR [ecx],al
 100b051:	add    BYTE PTR [eax],al
 100b053:	add    al,ah
 100b055:	add    al,BYTE PTR [eax]
 100b057:	add    BYTE PTR [edx],0x0
 100b05a:	add    BYTE PTR [eax],al
 100b05c:	clc    
 100b05d:	add    al,BYTE PTR [eax]
 100b05f:	add    BYTE PTR [ebx],0x0
 100b062:	add    BYTE PTR [eax],al
 100b064:	adc    BYTE PTR [ebx],al
 100b066:	add    BYTE PTR [eax+0x4],al
 100b06c:	sub    BYTE PTR [ebx],al
 100b06e:	add    BYTE PTR [eax+0x5],al
 100b074:	inc    eax
 100b075:	add    eax,DWORD PTR [eax]
 100b077:	add    BYTE PTR [esi],0x0
 100b07a:	add    BYTE PTR [eax],al
 100b07c:	pop    eax
 100b07d:	add    eax,DWORD PTR [eax]
 100b07f:	add    BYTE PTR [edi],0x0
 100b082:	add    BYTE PTR [eax],al
 100b084:	jo     0x100b089
 100b086:	add    BYTE PTR [eax+0x8],al
 100b08c:	mov    BYTE PTR [ebx],al
 100b08e:	add    BYTE PTR [eax+0x9],al
 100b094:	mov    al,ds:0xa800003
 100b099:	add    BYTE PTR [eax],al
 100b09b:	add    BYTE PTR [eax+0xb800003],bh
 100b0a1:	add    BYTE PTR [eax],al
 100b0a3:	add    al,dl
 100b0a5:	add    eax,DWORD PTR [eax]
 100b0a7:	or     BYTE PTR [eax+eax*1],0x0
 100b0ab:	add    al,ch
 100b0ad:	add    eax,DWORD PTR [eax]
 100b0af:	or     BYTE PTR ds:0x0,0x4
 100b0b6:	add    BYTE PTR [eax+0xe],al
 100b0bc:	sbb    BYTE PTR [eax+eax*1],al
 100b0bf:	or     BYTE PTR [edi],0x0
 100b0c2:	add    BYTE PTR [eax],al
 100b0c4:	xor    BYTE PTR [eax+eax*1],al
 100b0c7:	adc    BYTE PTR [eax],0x0
 100b0ca:	add    BYTE PTR [eax],al
 100b0cc:	dec    eax
 100b0cd:	add    al,0x0
 100b0cf:	adc    BYTE PTR [ecx],0x0
 100b0d2:	add    BYTE PTR [eax],al
 100b0d4:	pusha  
 100b0d5:	add    al,0x0
 100b0d7:	adc    BYTE PTR [edx],0x0
 100b0da:	add    BYTE PTR [eax],al
 100b0dc:	js     0x100b0e2
 100b0de:	add    BYTE PTR [eax+0x13],al
 100b0e4:	nop
 100b0e5:	add    al,0x0
 100b0e7:	adc    BYTE PTR [eax+eax*1],0x0
 100b0eb:	add    BYTE PTR [eax+0x15800004],ch
 100b0f1:	add    BYTE PTR [eax],al
 100b0f3:	add    al,al
 100b0f5:	add    al,0x0
 100b0f7:	adc    BYTE PTR [esi],0x0
 100b0fa:	add    BYTE PTR [eax],al
 100b0fc:	fadd   DWORD PTR [eax+eax*1]
 100b0ff:	adc    BYTE PTR [edi],0x0
 100b102:	add    BYTE PTR [eax],al
 100b104:	lock add al,0x0
 100b107:	sbb    BYTE PTR [eax],0x0
 100b10a:	add    BYTE PTR [eax],al
 100b10c:	or     BYTE PTR ds:0x198000,al
 100b112:	add    BYTE PTR [eax],al
 100b114:	and    BYTE PTR ds:0x1a8000,al
 100b11a:	add    BYTE PTR [eax],al
 100b11c:	cmp    BYTE PTR ds:0x1b8000,al
 100b122:	add    BYTE PTR [eax],al
 100b124:	push   eax
 100b125:	add    eax,0x1c8000
 100b12a:	add    BYTE PTR [eax],al
 100b12c:	push   0x1d800005
 100b131:	add    BYTE PTR [eax],al
 100b133:	add    BYTE PTR [eax+0x1e800005],al
 100b139:	add    BYTE PTR [eax],al
 100b13b:	add    BYTE PTR [eax+0x1f800005],bl
 100b141:	add    BYTE PTR [eax],al
 100b143:	add    BYTE PTR [eax+0x20800005],dh
 100b149:	add    BYTE PTR [eax],al
 100b14b:	add    al,cl
 100b14d:	add    eax,0x218000
 100b152:	add    BYTE PTR [eax],al
 100b154:	loopne 0x100b15b
 100b156:	add    BYTE PTR [eax+0x22],al
 100b15c:	clc    
 100b15d:	add    eax,0x238000
 100b162:	add    BYTE PTR [eax],al
 100b164:	adc    BYTE PTR [esi],al
 100b166:	add    BYTE PTR [eax+0x24],al
 100b16c:	sub    BYTE PTR [esi],al
 100b16e:	add    BYTE PTR [eax+0x25],al
 100b174:	inc    eax
 100b175:	push   es
 100b176:	add    BYTE PTR [eax+0x26],al
 100b17c:	pop    eax
 100b17d:	push   es
 100b17e:	add    BYTE PTR [eax+0x27],al
 100b184:	jo     0x100b18c
 100b186:	add    BYTE PTR [eax+0x28],al
 100b18c:	mov    BYTE PTR [esi],al
 100b18e:	add    BYTE PTR [eax+0x29],al
 100b194:	mov    al,ds:0x2a800006
 100b199:	add    BYTE PTR [eax],al
 100b19b:	add    BYTE PTR [eax+0x2b800006],bh
 100b1a1:	add    BYTE PTR [eax],al
 100b1a3:	add    al,dl
 100b1a5:	push   es
 100b1a6:	add    BYTE PTR [eax+0x2c],al
 100b1ac:	call   0x2e80b1b7
 100b1b1:	add    BYTE PTR [eax],al
 100b1b3:	add    BYTE PTR [eax],al
 100b1b5:	pop    es
 100b1b6:	add    BYTE PTR [eax+0x2e],al
 100b1bc:	sbb    BYTE PTR [edi],al
 100b1be:	add    BYTE PTR [eax+0x2f],al
 100b1c4:	xor    BYTE PTR [edi],al
 100b1c6:	add    BYTE PTR [eax+0x30],al
 100b1cc:	dec    eax
 100b1cd:	pop    es
 100b1ce:	add    BYTE PTR [eax+0x31],al
 100b1d4:	pusha  
 100b1d5:	pop    es
 100b1d6:	add    BYTE PTR [eax+0x32],al
 100b1dc:	js     0x100b1e5
 100b1de:	add    BYTE PTR [eax+0x33],al
 100b1e4:	nop
 100b1e5:	pop    es
 100b1e6:	add    BYTE PTR [eax+0x34],al
 100b1ec:	test   al,0x7
 100b1ee:	add    BYTE PTR [eax+0x35],al
 100b1f4:	rol    BYTE PTR [edi],0x0
 100b1f7:	xor    BYTE PTR [esi],0x0
 100b1fa:	add    BYTE PTR [eax],al
 100b1fc:	fadd   DWORD PTR [edi]
 100b1fe:	add    BYTE PTR [eax+0x37],al
 100b204:	lock pop es
 100b206:	add    BYTE PTR [eax+0x0],al
 100b20c:	add    BYTE PTR [eax],al
 100b20e:	add    BYTE PTR [eax],al
 100b210:	add    al,0x0
 100b212:	add    BYTE PTR [eax],al
 100b214:	add    BYTE PTR [eax],al
 100b216:	add    DWORD PTR [eax],eax
 100b218:	pop    es
 100b219:	add    BYTE PTR [eax],al
 100b21b:	add    BYTE PTR [eax],cl
 100b21d:	or     BYTE PTR [eax],al
 100b21f:	add    BYTE PTR [eax],0x0
 100b222:	add    BYTE PTR [eax],al
 100b224:	add    BYTE PTR [eax],al
 100b226:	add    BYTE PTR [eax],al
 100b228:	add    al,0x0
 100b22a:	add    BYTE PTR [eax],al
 100b22c:	add    BYTE PTR [eax],al
 100b22e:	add    DWORD PTR [eax],eax
 100b230:	ins    DWORD PTR es:[edi],dx
 100b231:	add    BYTE PTR [eax],al
 100b233:	add    BYTE PTR [eax],ah
 100b235:	or     BYTE PTR [eax],al
 100b237:	add    BYTE PTR [eax],0x0
 100b23a:	add    BYTE PTR [eax],al
 100b23c:	add    BYTE PTR [eax],al
 100b23e:	add    BYTE PTR [eax],al
 100b240:	add    al,0x0
 100b242:	add    BYTE PTR [eax],al
 100b244:	add    BYTE PTR [eax],al
 100b246:	or     eax,0x6b00
 100b24b:	add    BYTE PTR [eax],bh
 100b24d:	or     BYTE PTR [eax],al
 100b24f:	sub    BYTE PTR [eax+eax*1+0x0],0x0
 100b254:	push   eax
 100b255:	or     BYTE PTR [eax],al
 100b257:	adc    BYTE PTR [eax],0x27
 100b25a:	add    BYTE PTR [eax],al
 100b25c:	push   0x11800008
 100b261:	daa    
 100b262:	add    BYTE PTR [eax],al
 100b264:	or     BYTE PTR [eax],0x0
 100b267:	adc    BYTE PTR [edx],0x27
 100b26a:	add    BYTE PTR [eax],al
 100b26c:	cwde   
 100b26d:	or     BYTE PTR [eax],al
 100b26f:	adc    BYTE PTR [ebx],0x27
 100b272:	add    BYTE PTR [eax],al
 100b274:	mov    al,0x8
 100b276:	add    BYTE PTR [eax+0x2714],al
 100b27c:	enter  0x8,0x80
 100b280:	adc    eax,0xe0000027
 100b285:	or     BYTE PTR [eax],al
 100b287:	adc    BYTE PTR [esi],0x27
 100b28a:	add    BYTE PTR [eax],al
 100b28c:	clc    
 100b28d:	or     BYTE PTR [eax],al
 100b28f:	adc    BYTE PTR [edi],0x27
 100b292:	add    BYTE PTR [eax],al
 100b294:	adc    BYTE PTR [ecx],cl
 100b296:	add    BYTE PTR [eax+0x271d],al
 100b29c:	sub    BYTE PTR [ecx],cl
 100b29e:	add    BYTE PTR [eax+0x271e],al
 100b2a4:	inc    eax
 100b2a5:	or     DWORD PTR [eax],eax
 100b2a7:	sbb    BYTE PTR [edi],0x27
 100b2aa:	add    BYTE PTR [eax],al
 100b2ac:	pop    eax
 100b2ad:	or     DWORD PTR [eax],eax
 100b2af:	add    BYTE PTR [eax],0x0
 100b2b2:	add    BYTE PTR [eax],al
 100b2b4:	add    BYTE PTR [eax],al
 100b2b6:	add    BYTE PTR [eax],al
 100b2b8:	add    al,0x0
 100b2ba:	add    BYTE PTR [eax],al
 100b2bc:	add    BYTE PTR [eax],al
 100b2be:	add    DWORD PTR [eax],eax
 100b2c0:	add    DWORD PTR [eax],eax
 100b2c2:	add    BYTE PTR [eax],al
 100b2c4:	jo     0x100b2cf
 100b2c6:	add    BYTE PTR [eax+0x0],al
 100b2cc:	add    BYTE PTR [eax],al
 100b2ce:	add    BYTE PTR [eax],al
 100b2d0:	add    al,0x0
 100b2d2:	add    BYTE PTR [eax],al
 100b2d4:	add    BYTE PTR [eax],al
 100b2d6:	add    DWORD PTR [eax],eax
 100b2d8:	add    DWORD PTR [eax],eax
 100b2da:	add    BYTE PTR [eax],al
 100b2dc:	mov    BYTE PTR [ecx],cl
 100b2de:	add    BYTE PTR [eax+0x0],al
 100b2e4:	add    BYTE PTR [eax],al
 100b2e6:	add    BYTE PTR [eax],al
 100b2e8:	add    al,0x0
 100b2ea:	add    BYTE PTR [eax],al
 100b2ec:	add    BYTE PTR [eax],al
 100b2ee:	add    DWORD PTR [eax],eax
 100b2f0:	or     DWORD PTR [eax+eax*1],eax
 100b2f3:	add    BYTE PTR [eax+0x9],ah
 100b2f9:	add    BYTE PTR [eax],al
 100b2fb:	add    BYTE PTR [eax],al
 100b2fd:	add    BYTE PTR [eax],al
 100b2ff:	add    BYTE PTR [eax+eax*1],al
 100b302:	add    BYTE PTR [eax],al
 100b304:	add    BYTE PTR [eax],al
 100b306:	add    DWORD PTR [eax],eax
 100b308:	or     DWORD PTR [eax+eax*1],eax
 100b30b:	add    BYTE PTR [eax+0x9],dh
 100b311:	add    BYTE PTR [eax],al
 100b313:	add    BYTE PTR [eax],al
 100b315:	add    BYTE PTR [eax],al
 100b317:	add    BYTE PTR [eax+eax*1],al
 100b31a:	add    BYTE PTR [eax],al
 100b31c:	add    BYTE PTR [eax],al
 100b31e:	add    DWORD PTR [eax],eax
 100b320:	or     DWORD PTR [eax+eax*1],eax
 100b323:	add    al,al
 100b325:	or     DWORD PTR [eax],eax
	...
 100b32f:	add    BYTE PTR [eax+eax*1],al
 100b332:	add    BYTE PTR [eax],al
 100b334:	add    BYTE PTR [eax],al
 100b336:	add    DWORD PTR [eax],eax
 100b338:	or     DWORD PTR [eax+eax*1],eax
 100b33b:	add    al,dl
 100b33d:	or     DWORD PTR [eax],eax
	...
 100b347:	add    BYTE PTR [eax+eax*1],al
 100b34a:	add    BYTE PTR [eax],al
 100b34c:	add    BYTE PTR [eax],al
 100b34e:	add    DWORD PTR [eax],eax
 100b350:	or     DWORD PTR [eax+eax*1],eax
 100b353:	add    al,ah
 100b355:	or     DWORD PTR [eax],eax
	...
 100b35f:	add    BYTE PTR [eax+eax*1],al
 100b362:	add    BYTE PTR [eax],al
 100b364:	add    BYTE PTR [eax],al
 100b366:	add    DWORD PTR [eax],eax
 100b368:	or     DWORD PTR [eax+eax*1],eax
 100b36b:	add    al,dh
 100b36d:	or     DWORD PTR [eax],eax
	...
 100b377:	add    BYTE PTR [eax+eax*1],al
 100b37a:	add    BYTE PTR [eax],al
 100b37c:	add    BYTE PTR [eax],al
 100b37e:	add    DWORD PTR [eax],eax
 100b380:	or     DWORD PTR [eax+eax*1],eax
 100b383:	add    BYTE PTR [eax],al
 100b385:	or     al,BYTE PTR [eax]
	...
 100b38f:	add    BYTE PTR [eax+eax*1],al
 100b392:	add    BYTE PTR [eax],al
 100b394:	add    BYTE PTR [eax],al
 100b396:	add    DWORD PTR [eax],eax
 100b398:	or     DWORD PTR [eax+eax*1],eax
 100b39b:	add    BYTE PTR [eax],dl
 100b39d:	or     al,BYTE PTR [eax]
	...
 100b3a7:	add    BYTE PTR [eax+eax*1],al
 100b3aa:	add    BYTE PTR [eax],al
 100b3ac:	add    BYTE PTR [eax],al
 100b3ae:	add    DWORD PTR [eax],eax
 100b3b0:	or     DWORD PTR [eax+eax*1],eax
 100b3b3:	add    BYTE PTR [eax],ah
 100b3b5:	or     al,BYTE PTR [eax]
	...
 100b3bf:	add    BYTE PTR [eax+eax*1],al
 100b3c2:	add    BYTE PTR [eax],al
 100b3c4:	add    BYTE PTR [eax],al
 100b3c6:	add    DWORD PTR [eax],eax
 100b3c8:	or     DWORD PTR [eax+eax*1],eax
 100b3cb:	add    BYTE PTR [eax],dh
 100b3cd:	or     al,BYTE PTR [eax]
	...
 100b3d7:	add    BYTE PTR [eax+eax*1],al
 100b3da:	add    BYTE PTR [eax],al
 100b3dc:	add    BYTE PTR [eax],al
 100b3de:	add    DWORD PTR [eax],eax
 100b3e0:	or     DWORD PTR [eax+eax*1],eax
 100b3e3:	add    BYTE PTR [eax+0xa],al
	...
 100b3ee:	add    BYTE PTR [eax],al
 100b3f0:	add    al,0x0
 100b3f2:	add    BYTE PTR [eax],al
 100b3f4:	add    BYTE PTR [eax],al
 100b3f6:	add    DWORD PTR [eax],eax
 100b3f8:	or     DWORD PTR [eax+eax*1],eax
 100b3fb:	add    BYTE PTR [eax+0xa],dl
	...
 100b406:	add    BYTE PTR [eax],al
 100b408:	add    al,0x0
 100b40a:	add    BYTE PTR [eax],al
 100b40c:	add    BYTE PTR [eax],al
 100b40e:	add    DWORD PTR [eax],eax
 100b410:	or     DWORD PTR [eax+eax*1],eax
 100b413:	add    BYTE PTR [eax+0xa],ah
	...
 100b41e:	add    BYTE PTR [eax],al
 100b420:	add    al,0x0
 100b422:	add    BYTE PTR [eax],al
 100b424:	add    BYTE PTR [eax],al
 100b426:	add    DWORD PTR [eax],eax
 100b428:	or     DWORD PTR [eax+eax*1],eax
 100b42b:	add    BYTE PTR [eax+0xa],dh
	...
 100b436:	add    BYTE PTR [eax],al
 100b438:	add    al,0x0
 100b43a:	add    BYTE PTR [eax],al
 100b43c:	add    BYTE PTR [eax],al
 100b43e:	add    DWORD PTR [eax],eax
 100b440:	or     DWORD PTR [eax+eax*1],eax
 100b443:	add    BYTE PTR [eax+0xa],al
 100b449:	add    BYTE PTR [eax],al
 100b44b:	add    BYTE PTR [eax],al
 100b44d:	add    BYTE PTR [eax],al
 100b44f:	add    BYTE PTR [eax+eax*1],al
 100b452:	add    BYTE PTR [eax],al
 100b454:	add    BYTE PTR [eax],al
 100b456:	add    DWORD PTR [eax],eax
 100b458:	or     DWORD PTR [eax+eax*1],eax
 100b45b:	add    BYTE PTR [eax+0xa],dl
 100b461:	add    BYTE PTR [eax],al
 100b463:	add    BYTE PTR [eax],al
 100b465:	add    BYTE PTR [eax],al
 100b467:	add    BYTE PTR [eax+eax*1],al
 100b46a:	add    BYTE PTR [eax],al
 100b46c:	add    BYTE PTR [eax],al
 100b46e:	add    DWORD PTR [eax],eax
 100b470:	or     DWORD PTR [eax+eax*1],eax
 100b473:	add    BYTE PTR [eax+0xa],ah
 100b479:	add    BYTE PTR [eax],al
 100b47b:	add    BYTE PTR [eax],al
 100b47d:	add    BYTE PTR [eax],al
 100b47f:	add    BYTE PTR [eax+eax*1],al
 100b482:	add    BYTE PTR [eax],al
 100b484:	add    BYTE PTR [eax],al
 100b486:	add    DWORD PTR [eax],eax
 100b488:	or     DWORD PTR [eax+eax*1],eax
 100b48b:	add    BYTE PTR [eax+0xa],dh
 100b491:	add    BYTE PTR [eax],al
 100b493:	add    BYTE PTR [eax],al
 100b495:	add    BYTE PTR [eax],al
 100b497:	add    BYTE PTR [eax+eax*1],al
 100b49a:	add    BYTE PTR [eax],al
 100b49c:	add    BYTE PTR [eax],al
 100b49e:	add    DWORD PTR [eax],eax
 100b4a0:	or     DWORD PTR [eax+eax*1],eax
 100b4a3:	add    al,al
 100b4a5:	or     al,BYTE PTR [eax]
	...
 100b4af:	add    BYTE PTR [eax+eax*1],al
 100b4b2:	add    BYTE PTR [eax],al
 100b4b4:	add    BYTE PTR [eax],al
 100b4b6:	add    DWORD PTR [eax],eax
 100b4b8:	or     DWORD PTR [eax+eax*1],eax
 100b4bb:	add    al,dl
 100b4bd:	or     al,BYTE PTR [eax]
	...
 100b4c7:	add    BYTE PTR [eax+eax*1],al
 100b4ca:	add    BYTE PTR [eax],al
 100b4cc:	add    BYTE PTR [eax],al
 100b4ce:	add    DWORD PTR [eax],eax
 100b4d0:	or     DWORD PTR [eax+eax*1],eax
 100b4d3:	add    al,ah
 100b4d5:	or     al,BYTE PTR [eax]
	...
 100b4df:	add    BYTE PTR [eax+eax*1],al
 100b4e2:	add    BYTE PTR [eax],al
 100b4e4:	add    BYTE PTR [eax],al
 100b4e6:	add    DWORD PTR [eax],eax
 100b4e8:	or     DWORD PTR [eax+eax*1],eax
 100b4eb:	add    al,dh
 100b4ed:	or     al,BYTE PTR [eax]
	...
 100b4f7:	add    BYTE PTR [eax+eax*1],al
 100b4fa:	add    BYTE PTR [eax],al
 100b4fc:	add    BYTE PTR [eax],al
 100b4fe:	add    DWORD PTR [eax],eax
 100b500:	or     DWORD PTR [eax+eax*1],eax
 100b503:	add    BYTE PTR [eax],al
 100b505:	or     eax,DWORD PTR [eax]
	...
 100b50f:	add    BYTE PTR [eax+eax*1],al
 100b512:	add    BYTE PTR [eax],al
 100b514:	add    BYTE PTR [eax],al
 100b516:	add    DWORD PTR [eax],eax
 100b518:	or     DWORD PTR [eax+eax*1],eax
 100b51b:	add    BYTE PTR [eax],dl
 100b51d:	or     eax,DWORD PTR [eax]
	...
 100b527:	add    BYTE PTR [eax+eax*1],al
 100b52a:	add    BYTE PTR [eax],al
 100b52c:	add    BYTE PTR [eax],al
 100b52e:	add    DWORD PTR [eax],eax
 100b530:	or     DWORD PTR [eax+eax*1],eax
 100b533:	add    BYTE PTR [eax],ah
 100b535:	or     eax,DWORD PTR [eax]
	...
 100b53f:	add    BYTE PTR [eax+eax*1],al
 100b542:	add    BYTE PTR [eax],al
 100b544:	add    BYTE PTR [eax],al
 100b546:	add    DWORD PTR [eax],eax
 100b548:	or     DWORD PTR [eax+eax*1],eax
 100b54b:	add    BYTE PTR [eax],dh
 100b54d:	or     eax,DWORD PTR [eax]
	...
 100b557:	add    BYTE PTR [eax+eax*1],al
 100b55a:	add    BYTE PTR [eax],al
 100b55c:	add    BYTE PTR [eax],al
 100b55e:	add    DWORD PTR [eax],eax
 100b560:	or     DWORD PTR [eax+eax*1],eax
 100b563:	add    BYTE PTR [eax+0xb],al
	...
 100b56e:	add    BYTE PTR [eax],al
 100b570:	add    al,0x0
 100b572:	add    BYTE PTR [eax],al
 100b574:	add    BYTE PTR [eax],al
 100b576:	add    DWORD PTR [eax],eax
 100b578:	or     DWORD PTR [eax+eax*1],eax
 100b57b:	add    BYTE PTR [eax+0xb],dl
	...
 100b586:	add    BYTE PTR [eax],al
 100b588:	add    al,0x0
 100b58a:	add    BYTE PTR [eax],al
 100b58c:	add    BYTE PTR [eax],al
 100b58e:	add    DWORD PTR [eax],eax
 100b590:	or     DWORD PTR [eax+eax*1],eax
 100b593:	add    BYTE PTR [eax+0xb],ah
	...
 100b59e:	add    BYTE PTR [eax],al
 100b5a0:	add    al,0x0
 100b5a2:	add    BYTE PTR [eax],al
 100b5a4:	add    BYTE PTR [eax],al
 100b5a6:	add    DWORD PTR [eax],eax
 100b5a8:	or     DWORD PTR [eax+eax*1],eax
 100b5ab:	add    BYTE PTR [eax+0xb],dh
	...
 100b5b6:	add    BYTE PTR [eax],al
 100b5b8:	add    al,0x0
 100b5ba:	add    BYTE PTR [eax],al
 100b5bc:	add    BYTE PTR [eax],al
 100b5be:	add    DWORD PTR [eax],eax
 100b5c0:	or     DWORD PTR [eax+eax*1],eax
 100b5c3:	add    BYTE PTR [eax+0xb],al
 100b5c9:	add    BYTE PTR [eax],al
 100b5cb:	add    BYTE PTR [eax],al
 100b5cd:	add    BYTE PTR [eax],al
 100b5cf:	add    BYTE PTR [eax+eax*1],al
 100b5d2:	add    BYTE PTR [eax],al
 100b5d4:	add    BYTE PTR [eax],al
 100b5d6:	add    DWORD PTR [eax],eax
 100b5d8:	or     DWORD PTR [eax+eax*1],eax
 100b5db:	add    BYTE PTR [eax+0xb],dl
 100b5e1:	add    BYTE PTR [eax],al
 100b5e3:	add    BYTE PTR [eax],al
 100b5e5:	add    BYTE PTR [eax],al
 100b5e7:	add    BYTE PTR [eax+eax*1],al
 100b5ea:	add    BYTE PTR [eax],al
 100b5ec:	add    BYTE PTR [eax],al
 100b5ee:	add    DWORD PTR [eax],eax
 100b5f0:	or     DWORD PTR [eax+eax*1],eax
 100b5f3:	add    BYTE PTR [eax+0xb],ah
 100b5f9:	add    BYTE PTR [eax],al
 100b5fb:	add    BYTE PTR [eax],al
 100b5fd:	add    BYTE PTR [eax],al
 100b5ff:	add    BYTE PTR [eax+eax*1],al
 100b602:	add    BYTE PTR [eax],al
 100b604:	add    BYTE PTR [eax],al
 100b606:	add    DWORD PTR [eax],eax
 100b608:	or     DWORD PTR [eax+eax*1],eax
 100b60b:	add    BYTE PTR [eax+0xb],dh
 100b611:	add    BYTE PTR [eax],al
 100b613:	add    BYTE PTR [eax],al
 100b615:	add    BYTE PTR [eax],al
 100b617:	add    BYTE PTR [eax+eax*1],al
 100b61a:	add    BYTE PTR [eax],al
 100b61c:	add    BYTE PTR [eax],al
 100b61e:	add    DWORD PTR [eax],eax
 100b620:	or     DWORD PTR [eax+eax*1],eax
 100b623:	add    al,al
 100b625:	or     eax,DWORD PTR [eax]
	...
 100b62f:	add    BYTE PTR [eax+eax*1],al
 100b632:	add    BYTE PTR [eax],al
 100b634:	add    BYTE PTR [eax],al
 100b636:	add    DWORD PTR [eax],eax
 100b638:	or     DWORD PTR [eax+eax*1],eax
 100b63b:	add    al,dl
 100b63d:	or     eax,DWORD PTR [eax]
	...
 100b647:	add    BYTE PTR [eax+eax*1],al
 100b64a:	add    BYTE PTR [eax],al
 100b64c:	add    BYTE PTR [eax],al
 100b64e:	add    DWORD PTR [eax],eax
 100b650:	or     DWORD PTR [eax+eax*1],eax
 100b653:	add    al,ah
 100b655:	or     eax,DWORD PTR [eax]
	...
 100b65f:	add    BYTE PTR [eax+eax*1],al
 100b662:	add    BYTE PTR [eax],al
 100b664:	add    BYTE PTR [eax],al
 100b666:	add    DWORD PTR [eax],eax
 100b668:	or     DWORD PTR [eax+eax*1],eax
 100b66b:	add    al,dh
 100b66d:	or     eax,DWORD PTR [eax]
	...
 100b677:	add    BYTE PTR [eax+eax*1],al
 100b67a:	add    BYTE PTR [eax],al
 100b67c:	add    BYTE PTR [eax],al
 100b67e:	add    DWORD PTR [eax],eax
 100b680:	or     DWORD PTR [eax+eax*1],eax
 100b683:	add    BYTE PTR [eax],al
 100b685:	or     al,0x0
	...
 100b68f:	add    BYTE PTR [eax+eax*1],al
 100b692:	add    BYTE PTR [eax],al
 100b694:	add    BYTE PTR [eax],al
 100b696:	add    DWORD PTR [eax],eax
 100b698:	or     DWORD PTR [eax+eax*1],eax
 100b69b:	add    BYTE PTR [eax],dl
 100b69d:	or     al,0x0
	...
 100b6a7:	add    BYTE PTR [eax+eax*1],al
 100b6aa:	add    BYTE PTR [eax],al
 100b6ac:	add    BYTE PTR [eax],al
 100b6ae:	add    DWORD PTR [eax],eax
 100b6b0:	or     DWORD PTR [eax+eax*1],eax
 100b6b3:	add    BYTE PTR [eax],ah
 100b6b5:	or     al,0x0
	...
 100b6bf:	add    BYTE PTR [eax+eax*1],al
 100b6c2:	add    BYTE PTR [eax],al
 100b6c4:	add    BYTE PTR [eax],al
 100b6c6:	add    DWORD PTR [eax],eax
 100b6c8:	or     DWORD PTR [eax+eax*1],eax
 100b6cb:	add    BYTE PTR [eax],dh
 100b6cd:	or     al,0x0
	...
 100b6d7:	add    BYTE PTR [eax+eax*1],al
 100b6da:	add    BYTE PTR [eax],al
 100b6dc:	add    BYTE PTR [eax],al
 100b6de:	add    DWORD PTR [eax],eax
 100b6e0:	or     DWORD PTR [eax+eax*1],eax
 100b6e3:	add    BYTE PTR [eax+0xc],al
	...
 100b6ee:	add    BYTE PTR [eax],al
 100b6f0:	add    al,0x0
 100b6f2:	add    BYTE PTR [eax],al
 100b6f4:	add    BYTE PTR [eax],al
 100b6f6:	add    DWORD PTR [eax],eax
 100b6f8:	or     DWORD PTR [eax+eax*1],eax
 100b6fb:	add    BYTE PTR [eax+0xc],dl
	...
 100b706:	add    BYTE PTR [eax],al
 100b708:	add    al,0x0
 100b70a:	add    BYTE PTR [eax],al
 100b70c:	add    BYTE PTR [eax],al
 100b70e:	add    DWORD PTR [eax],eax
 100b710:	or     DWORD PTR [eax+eax*1],eax
 100b713:	add    BYTE PTR [eax+0xc],ah
	...
 100b71e:	add    BYTE PTR [eax],al
 100b720:	add    al,0x0
 100b722:	add    BYTE PTR [eax],al
 100b724:	add    BYTE PTR [eax],al
 100b726:	add    DWORD PTR [eax],eax
 100b728:	or     DWORD PTR [eax+eax*1],eax
 100b72b:	add    BYTE PTR [eax+0xc],dh
	...
 100b736:	add    BYTE PTR [eax],al
 100b738:	add    al,0x0
 100b73a:	add    BYTE PTR [eax],al
 100b73c:	add    BYTE PTR [eax],al
 100b73e:	add    DWORD PTR [eax],eax
 100b740:	or     DWORD PTR [eax+eax*1],eax
 100b743:	add    BYTE PTR [eax+0xc],al
 100b749:	add    BYTE PTR [eax],al
 100b74b:	add    BYTE PTR [eax],al
 100b74d:	add    BYTE PTR [eax],al
 100b74f:	add    BYTE PTR [eax+eax*1],al
 100b752:	add    BYTE PTR [eax],al
 100b754:	add    BYTE PTR [eax],al
 100b756:	add    DWORD PTR [eax],eax
 100b758:	or     DWORD PTR [eax+eax*1],eax
 100b75b:	add    BYTE PTR [eax+0xc],dl
 100b761:	add    BYTE PTR [eax],al
 100b763:	add    BYTE PTR [eax],al
 100b765:	add    BYTE PTR [eax],al
 100b767:	add    BYTE PTR [eax+eax*1],al
 100b76a:	add    BYTE PTR [eax],al
 100b76c:	add    BYTE PTR [eax],al
 100b76e:	add    DWORD PTR [eax],eax
 100b770:	or     DWORD PTR [eax+eax*1],eax
 100b773:	add    BYTE PTR [eax+0xc],ah
 100b779:	add    BYTE PTR [eax],al
 100b77b:	add    BYTE PTR [eax],al
 100b77d:	add    BYTE PTR [eax],al
 100b77f:	add    BYTE PTR [eax+eax*1],al
 100b782:	add    BYTE PTR [eax],al
 100b784:	add    BYTE PTR [eax],al
 100b786:	add    DWORD PTR [eax],eax
 100b788:	or     DWORD PTR [eax+eax*1],eax
 100b78b:	add    BYTE PTR [eax+0xc],dh
 100b791:	add    BYTE PTR [eax],al
 100b793:	add    BYTE PTR [eax],al
 100b795:	add    BYTE PTR [eax],al
 100b797:	add    BYTE PTR [eax+eax*1],al
 100b79a:	add    BYTE PTR [eax],al
 100b79c:	add    BYTE PTR [eax],al
 100b79e:	add    DWORD PTR [eax],eax
 100b7a0:	or     DWORD PTR [eax+eax*1],eax
 100b7a3:	add    al,al
 100b7a5:	or     al,0x0
	...
 100b7af:	add    BYTE PTR [eax+eax*1],al
 100b7b2:	add    BYTE PTR [eax],al
 100b7b4:	add    BYTE PTR [eax],al
 100b7b6:	add    DWORD PTR [eax],eax
 100b7b8:	or     DWORD PTR [eax+eax*1],eax
 100b7bb:	add    al,dl
 100b7bd:	or     al,0x0
	...
 100b7c7:	add    BYTE PTR [eax+eax*1],al
 100b7ca:	add    BYTE PTR [eax],al
 100b7cc:	add    BYTE PTR [eax],al
 100b7ce:	add    DWORD PTR [eax],eax
 100b7d0:	or     DWORD PTR [eax+eax*1],eax
 100b7d3:	add    al,ah
 100b7d5:	or     al,0x0
	...
 100b7df:	add    BYTE PTR [eax+eax*1],al
 100b7e2:	add    BYTE PTR [eax],al
 100b7e4:	add    BYTE PTR [eax],al
 100b7e6:	add    DWORD PTR [eax],eax
 100b7e8:	or     DWORD PTR [eax+eax*1],eax
 100b7eb:	add    al,dh
 100b7ed:	or     al,0x0
	...
 100b7f7:	add    BYTE PTR [eax+eax*1],al
 100b7fa:	add    BYTE PTR [eax],al
 100b7fc:	add    BYTE PTR [eax],al
 100b7fe:	add    DWORD PTR [eax],eax
 100b800:	or     DWORD PTR [eax+eax*1],eax
 100b803:	add    BYTE PTR [eax],al
 100b805:	or     eax,0x0
 100b80a:	add    BYTE PTR [eax],al
 100b80c:	add    BYTE PTR [eax],al
 100b80e:	add    BYTE PTR [eax],al
 100b810:	add    al,0x0
 100b812:	add    BYTE PTR [eax],al
 100b814:	add    BYTE PTR [eax],al
 100b816:	add    DWORD PTR [eax],eax
 100b818:	or     DWORD PTR [eax+eax*1],eax
 100b81b:	add    BYTE PTR [eax],dl
 100b81d:	or     eax,0x0
 100b822:	add    BYTE PTR [eax],al
 100b824:	add    BYTE PTR [eax],al
 100b826:	add    BYTE PTR [eax],al
 100b828:	add    al,0x0
 100b82a:	add    BYTE PTR [eax],al
 100b82c:	add    BYTE PTR [eax],al
 100b82e:	add    DWORD PTR [eax],eax
 100b830:	or     DWORD PTR [eax+eax*1],eax
 100b833:	add    BYTE PTR [eax],ah
 100b835:	or     eax,0x0
 100b83a:	add    BYTE PTR [eax],al
 100b83c:	add    BYTE PTR [eax],al
 100b83e:	add    BYTE PTR [eax],al
 100b840:	add    al,0x0
 100b842:	add    BYTE PTR [eax],al
 100b844:	add    BYTE PTR [eax],al
 100b846:	add    DWORD PTR [eax],eax
 100b848:	or     DWORD PTR [eax+eax*1],eax
 100b84b:	add    BYTE PTR [eax],dh
 100b84d:	or     eax,0x0
 100b852:	add    BYTE PTR [eax],al
 100b854:	add    BYTE PTR [eax],al
 100b856:	add    BYTE PTR [eax],al
 100b858:	add    al,0x0
 100b85a:	add    BYTE PTR [eax],al
 100b85c:	add    BYTE PTR [eax],al
 100b85e:	add    DWORD PTR [eax],eax
 100b860:	or     DWORD PTR [eax+eax*1],eax
 100b863:	add    BYTE PTR [eax+0xd],al
	...
 100b86e:	add    BYTE PTR [eax],al
 100b870:	add    al,0x0
 100b872:	add    BYTE PTR [eax],al
 100b874:	add    BYTE PTR [eax],al
 100b876:	add    DWORD PTR [eax],eax
 100b878:	or     DWORD PTR [eax+eax*1],eax
 100b87b:	add    BYTE PTR [eax+0xd],dl
	...
 100b886:	add    BYTE PTR [eax],al
 100b888:	add    al,0x0
 100b88a:	add    BYTE PTR [eax],al
 100b88c:	add    BYTE PTR [eax],al
 100b88e:	add    DWORD PTR [eax],eax
 100b890:	or     DWORD PTR [eax+eax*1],eax
 100b893:	add    BYTE PTR [eax+0xd],ah
	...
 100b89e:	add    BYTE PTR [eax],al
 100b8a0:	add    al,0x0
 100b8a2:	add    BYTE PTR [eax],al
 100b8a4:	add    BYTE PTR [eax],al
 100b8a6:	add    DWORD PTR [eax],eax
 100b8a8:	or     DWORD PTR [eax+eax*1],eax
 100b8ab:	add    BYTE PTR [eax+0xd],dh
	...
 100b8b6:	add    BYTE PTR [eax],al
 100b8b8:	add    al,0x0
 100b8ba:	add    BYTE PTR [eax],al
 100b8bc:	add    BYTE PTR [eax],al
 100b8be:	add    DWORD PTR [eax],eax
 100b8c0:	or     DWORD PTR [eax+eax*1],eax
 100b8c3:	add    BYTE PTR [eax+0xd],al
 100b8c9:	add    BYTE PTR [eax],al
 100b8cb:	add    BYTE PTR [eax],al
 100b8cd:	add    BYTE PTR [eax],al
 100b8cf:	add    BYTE PTR [eax+eax*1],al
 100b8d2:	add    BYTE PTR [eax],al
 100b8d4:	add    BYTE PTR [eax],al
 100b8d6:	add    DWORD PTR [eax],eax
 100b8d8:	or     DWORD PTR [eax+eax*1],eax
 100b8db:	add    BYTE PTR [eax+0xd],dl
 100b8e1:	add    BYTE PTR [eax],al
 100b8e3:	add    BYTE PTR [eax],al
 100b8e5:	add    BYTE PTR [eax],al
 100b8e7:	add    BYTE PTR [eax+eax*1],al
 100b8ea:	add    BYTE PTR [eax],al
 100b8ec:	add    BYTE PTR [eax],al
 100b8ee:	add    DWORD PTR [eax],eax
 100b8f0:	or     DWORD PTR [eax+eax*1],eax
 100b8f3:	add    BYTE PTR [eax+0xd],ah
 100b8f9:	add    BYTE PTR [eax],al
 100b8fb:	add    BYTE PTR [eax],al
 100b8fd:	add    BYTE PTR [eax],al
 100b8ff:	add    BYTE PTR [eax+eax*1],al
 100b902:	add    BYTE PTR [eax],al
 100b904:	add    BYTE PTR [eax],al
 100b906:	add    DWORD PTR [eax],eax
 100b908:	or     DWORD PTR [eax+eax*1],eax
 100b90b:	add    BYTE PTR [eax+0xd],dh
 100b911:	add    BYTE PTR [eax],al
 100b913:	add    BYTE PTR [eax],al
 100b915:	add    BYTE PTR [eax],al
 100b917:	add    BYTE PTR [eax+eax*1],al
 100b91a:	add    BYTE PTR [eax],al
 100b91c:	add    BYTE PTR [eax],al
 100b91e:	add    DWORD PTR [eax],eax
 100b920:	or     DWORD PTR [eax+eax*1],eax
 100b923:	add    al,al
 100b925:	or     eax,0x0
 100b92a:	add    BYTE PTR [eax],al
 100b92c:	add    BYTE PTR [eax],al
 100b92e:	add    BYTE PTR [eax],al
 100b930:	add    al,0x0
 100b932:	add    BYTE PTR [eax],al
 100b934:	add    BYTE PTR [eax],al
 100b936:	add    DWORD PTR [eax],eax
 100b938:	or     DWORD PTR [eax+eax*1],eax
 100b93b:	add    al,dl
 100b93d:	or     eax,0x0
 100b942:	add    BYTE PTR [eax],al
 100b944:	add    BYTE PTR [eax],al
 100b946:	add    BYTE PTR [eax],al
 100b948:	add    al,0x0
 100b94a:	add    BYTE PTR [eax],al
 100b94c:	add    BYTE PTR [eax],al
 100b94e:	add    DWORD PTR [eax],eax
 100b950:	or     DWORD PTR [eax+eax*1],eax
 100b953:	add    al,ah
 100b955:	or     eax,0x0
 100b95a:	add    BYTE PTR [eax],al
 100b95c:	add    BYTE PTR [eax],al
 100b95e:	add    BYTE PTR [eax],al
 100b960:	add    al,0x0
 100b962:	add    BYTE PTR [eax],al
 100b964:	add    BYTE PTR [eax],al
 100b966:	add    DWORD PTR [eax],eax
 100b968:	or     DWORD PTR [eax+eax*1],eax
 100b96b:	add    al,dh
 100b96d:	or     eax,0x0
 100b972:	add    BYTE PTR [eax],al
 100b974:	add    BYTE PTR [eax],al
 100b976:	add    BYTE PTR [eax],al
 100b978:	add    al,0x0
 100b97a:	add    BYTE PTR [eax],al
 100b97c:	add    BYTE PTR [eax],al
 100b97e:	add    DWORD PTR [eax],eax
 100b980:	or     DWORD PTR [eax+eax*1],eax
 100b983:	add    BYTE PTR [eax],al
 100b985:	push   cs
	...
 100b98e:	add    BYTE PTR [eax],al
 100b990:	add    al,0x0
 100b992:	add    BYTE PTR [eax],al
 100b994:	add    BYTE PTR [eax],al
 100b996:	add    DWORD PTR [eax],eax
 100b998:	or     DWORD PTR [eax+eax*1],eax
 100b99b:	add    BYTE PTR [eax],dl
 100b99d:	push   cs
 100b99e:	add    BYTE PTR [eax],al
 100b9a0:	and    BYTE PTR [esi+0x5680000],bh
 100b9a6:	add    BYTE PTR [eax],al
 100b9a8:	in     al,0x4
 100b9aa:	add    BYTE PTR [eax],al
 100b9ac:	add    BYTE PTR [eax],al
 100b9ae:	add    BYTE PTR [eax],al
 100b9b0:	mov    bl,al
 100b9b2:	add    BYTE PTR [eax],al
 100b9b4:	push   0xe4000004
 100b9b9:	add    al,0x0
 100b9bb:	add    BYTE PTR [eax],al
 100b9bd:	add    BYTE PTR [eax],al
 100b9bf:	add    al,dh
 100b9c1:	mov    DWORD PTR [eax],0x8a800
 100b9c7:	add    ah,ah
 100b9c9:	add    al,0x0
 100b9cb:	add    BYTE PTR [eax],al
 100b9cd:	add    BYTE PTR [eax],al
 100b9cf:	add    BYTE PTR [eax-0x57ffff30],bl
 100b9d5:	adc    BYTE PTR [eax],al
 100b9d7:	add    ah,ah
 100b9d9:	add    al,0x0
 100b9db:	add    BYTE PTR [eax],al
 100b9dd:	add    BYTE PTR [eax],al
 100b9df:	add    BYTE PTR [eax-0x1f],al
 100b9e2:	add    BYTE PTR [eax],al
 100b9e4:	push   0xe4000005
 100b9e9:	add    al,0x0
 100b9eb:	add    BYTE PTR [eax],al
 100b9ed:	add    BYTE PTR [eax],al
 100b9ef:	add    BYTE PTR [eax+0x680000e6],ch
 100b9f5:	add    al,0x0
 100b9f7:	add    ah,ah
 100b9f9:	add    al,0x0
 100b9fb:	add    BYTE PTR [eax],al
 100b9fd:	add    BYTE PTR [eax],al
 100b9ff:	add    BYTE PTR [eax],dl
 100ba01:	jmp    0x100ba03
 100ba03:	add    BYTE PTR [eax-0x1bfffff8],ch
 100ba09:	add    al,0x0
 100ba0b:	add    BYTE PTR [eax],al
 100ba0d:	add    BYTE PTR [eax],al
 100ba0f:	add    BYTE PTR [eax-0x57ffff0d],bh
 100ba15:	adc    BYTE PTR [eax],al
 100ba17:	add    ah,ah
 100ba19:	add    al,0x0
 100ba1b:	add    BYTE PTR [eax],al
 100ba1d:	add    BYTE PTR [eax],al
 100ba1f:	add    BYTE PTR [eax+0x4],ah
 100ba22:	add    DWORD PTR [eax],eax
 100ba24:	test   al,0x8
 100ba26:	add    BYTE PTR [eax],al
 100ba28:	in     al,0x4
 100ba2a:	add    BYTE PTR [eax],al
 100ba2c:	add    BYTE PTR [eax],al
 100ba2e:	add    BYTE PTR [eax],al
 100ba30:	or     BYTE PTR ds:0x5680001,cl
 100ba36:	add    BYTE PTR [eax],al
 100ba38:	in     al,0x4
 100ba3a:	add    BYTE PTR [eax],al
 100ba3c:	add    BYTE PTR [eax],al
 100ba3e:	add    BYTE PTR [eax],al
 100ba40:	jo     0x100ba54
 100ba42:	add    DWORD PTR [eax],eax
 100ba44:	test   al,0x10
 100ba46:	add    BYTE PTR [eax],al
 100ba48:	in     al,0x4
 100ba4a:	add    BYTE PTR [eax],al
 100ba4c:	add    BYTE PTR [eax],al
 100ba4e:	add    BYTE PTR [eax],al
 100ba50:	sbb    BYTE PTR [ebx],ah
 100ba52:	add    DWORD PTR [eax],eax
 100ba54:	push   0xe4000004
 100ba59:	add    al,0x0
 100ba5b:	add    BYTE PTR [eax],al
 100ba5d:	add    BYTE PTR [eax],al
 100ba5f:	add    BYTE PTR [eax-0x57fffed9],al
 100ba65:	or     BYTE PTR [eax],al
 100ba67:	add    ah,ah
 100ba69:	add    al,0x0
 100ba6b:	add    BYTE PTR [eax],al
 100ba6d:	add    BYTE PTR [eax],al
 100ba6f:	add    BYTE PTR [eax],ch
 100ba71:	xor    BYTE PTR [ecx],al
 100ba73:	add    BYTE PTR [eax+0x5],ch
 100ba76:	add    BYTE PTR [eax],al
 100ba78:	in     al,0x4
 100ba7a:	add    BYTE PTR [eax],al
 100ba7c:	add    BYTE PTR [eax],al
 100ba7e:	add    BYTE PTR [eax],al
 100ba80:	nop
 100ba81:	xor    eax,0x10a80001
 100ba86:	add    BYTE PTR [eax],al
 100ba88:	in     al,0x4
 100ba8a:	add    BYTE PTR [eax],al
 100ba8c:	add    BYTE PTR [eax],al
 100ba8e:	add    BYTE PTR [eax],al
 100ba90:	cmp    BYTE PTR [esi+0x1],al
 100ba93:	add    BYTE PTR [eax+0x4],ch
 100ba96:	add    BYTE PTR [eax],al
 100ba98:	in     al,0x4
 100ba9a:	add    BYTE PTR [eax],al
 100ba9c:	add    BYTE PTR [eax],al
 100ba9e:	add    BYTE PTR [eax],al
 100baa0:	mov    al,ds:0xa800014a
 100baa5:	or     BYTE PTR [eax],al
 100baa7:	add    ah,ah
 100baa9:	add    al,0x0
 100baab:	add    BYTE PTR [eax],al
 100baad:	add    BYTE PTR [eax],al
 100baaf:	add    BYTE PTR [eax+0x53],cl
 100bab2:	add    DWORD PTR [eax],eax
 100bab4:	push   0xe4000005
 100bab9:	add    al,0x0
 100babb:	add    BYTE PTR [eax],al
 100babd:	add    BYTE PTR [eax],al
 100babf:	add    BYTE PTR [eax-0x57fffea8],dh
 100bac5:	adc    BYTE PTR [eax],al
 100bac7:	add    ah,ah
 100bac9:	add    al,0x0
 100bacb:	add    BYTE PTR [eax],al
 100bacd:	add    BYTE PTR [eax],al
 100bacf:	add    BYTE PTR [eax+0x69],bl
 100bad2:	add    DWORD PTR [eax],eax
 100bad4:	push   0xe4000004
 100bad9:	add    al,0x0
 100badb:	add    BYTE PTR [eax],al
 100badd:	add    BYTE PTR [eax],al
 100badf:	add    al,al
 100bae1:	ins    DWORD PTR es:[edi],dx
 100bae2:	add    DWORD PTR [eax],eax
 100bae4:	test   al,0x8
 100bae6:	add    BYTE PTR [eax],al
 100bae8:	in     al,0x4
 100baea:	add    BYTE PTR [eax],al
 100baec:	add    BYTE PTR [eax],al
 100baee:	add    BYTE PTR [eax],al
 100baf0:	push   0x68000176
 100baf5:	add    eax,0x4e40000
 100bafa:	add    BYTE PTR [eax],al
 100bafc:	add    BYTE PTR [eax],al
 100bafe:	add    BYTE PTR [eax],al
 100bb00:	sar    BYTE PTR [ebx+0x1],1
 100bb03:	add    BYTE PTR [eax-0x1bfffff0],ch
 100bb09:	add    al,0x0
 100bb0b:	add    BYTE PTR [eax],al
 100bb0d:	add    BYTE PTR [eax],al
 100bb0f:	add    BYTE PTR [eax-0x74],bh
 100bb12:	add    DWORD PTR [eax],eax
 100bb14:	push   0xe4000004
 100bb19:	add    al,0x0
 100bb1b:	add    BYTE PTR [eax],al
 100bb1d:	add    BYTE PTR [eax],al
 100bb1f:	add    al,ah
 100bb21:	nop
 100bb22:	add    DWORD PTR [eax],eax
 100bb24:	test   al,0x8
 100bb26:	add    BYTE PTR [eax],al
 100bb28:	in     al,0x4
 100bb2a:	add    BYTE PTR [eax],al
 100bb2c:	add    BYTE PTR [eax],al
 100bb2e:	add    BYTE PTR [eax],al
 100bb30:	mov    BYTE PTR [ecx+0x5680001],bl
 100bb36:	add    BYTE PTR [eax],al
 100bb38:	in     al,0x4
 100bb3a:	add    BYTE PTR [eax],al
 100bb3c:	add    BYTE PTR [eax],al
 100bb3e:	add    BYTE PTR [eax],al
 100bb40:	lock sahf 
 100bb42:	add    DWORD PTR [eax],eax
 100bb44:	test   al,0x10
 100bb46:	add    BYTE PTR [eax],al
 100bb48:	in     al,0x4
 100bb4a:	add    BYTE PTR [eax],al
 100bb4c:	add    BYTE PTR [eax],al
 100bb4e:	add    BYTE PTR [eax],al
 100bb50:	cwde   
 100bb51:	scas   eax,DWORD PTR es:[edi]
 100bb52:	add    DWORD PTR [eax],eax
 100bb54:	push   0xe4000004
 100bb59:	add    al,0x0
 100bb5b:	add    BYTE PTR [eax],al
 100bb5d:	add    BYTE PTR [eax],al
 100bb5f:	add    BYTE PTR [eax],al
 100bb61:	mov    ah,0x1
 100bb63:	add    BYTE PTR [eax-0x1bfffff8],ch
 100bb69:	add    al,0x0
 100bb6b:	add    BYTE PTR [eax],al
 100bb6d:	add    BYTE PTR [eax],al
 100bb6f:	add    BYTE PTR [eax+0x680001bc],ch
 100bb75:	add    eax,0x4e40000
 100bb7a:	add    BYTE PTR [eax],al
 100bb7c:	add    BYTE PTR [eax],al
 100bb7e:	add    BYTE PTR [eax],al
 100bb80:	adc    dl,al
 100bb82:	add    DWORD PTR [eax],eax
 100bb84:	test   al,0x10
 100bb86:	add    BYTE PTR [eax],al
 100bb88:	in     al,0x4
 100bb8a:	add    BYTE PTR [eax],al
 100bb8c:	add    BYTE PTR [eax],al
 100bb8e:	add    BYTE PTR [eax],al
 100bb90:	mov    eax,0x680001d2
 100bb95:	add    al,0x0
 100bb97:	add    ah,ah
 100bb99:	add    al,0x0
 100bb9b:	add    BYTE PTR [eax],al
 100bb9d:	add    BYTE PTR [eax],al
 100bb9f:	add    BYTE PTR [eax],ah
 100bba1:	xlat   BYTE PTR ds:[ebx]
 100bba2:	add    DWORD PTR [eax],eax
 100bba4:	test   al,0x8
 100bba6:	add    BYTE PTR [eax],al
 100bba8:	in     al,0x4
 100bbaa:	add    BYTE PTR [eax],al
 100bbac:	add    BYTE PTR [eax],al
 100bbae:	add    BYTE PTR [eax],al
 100bbb0:	enter  0x1df,0x0
 100bbb4:	push   0xe4000005
 100bbb9:	add    al,0x0
 100bbbb:	add    BYTE PTR [eax],al
 100bbbd:	add    BYTE PTR [eax],al
 100bbbf:	add    BYTE PTR [eax],dh
 100bbc1:	in     eax,0x1
 100bbc3:	add    BYTE PTR [eax-0x1bfffff0],ch
 100bbc9:	add    al,0x0
 100bbcb:	add    BYTE PTR [eax],al
 100bbcd:	add    BYTE PTR [eax],al
 100bbcf:	add    al,bl
 100bbd1:	cmc    
 100bbd2:	add    DWORD PTR [eax],eax
 100bbd4:	push   0xe4000004
 100bbd9:	add    al,0x0
 100bbdb:	add    BYTE PTR [eax],al
 100bbdd:	add    BYTE PTR [eax],al
 100bbdf:	add    BYTE PTR [eax-0x6],al
 100bbe2:	add    DWORD PTR [eax],eax
 100bbe4:	test   al,0x8
 100bbe6:	add    BYTE PTR [eax],al
 100bbe8:	in     al,0x4
 100bbea:	add    BYTE PTR [eax],al
 100bbec:	add    BYTE PTR [eax],al
 100bbee:	add    BYTE PTR [eax],al
 100bbf0:	call   0x6900bdf7
 100bbf5:	add    eax,0x4e40000
 100bbfa:	add    BYTE PTR [eax],al
 100bbfc:	add    BYTE PTR [eax],al
 100bbfe:	add    BYTE PTR [eax],al
 100bc00:	push   eax
 100bc01:	or     BYTE PTR [edx],al
 100bc03:	add    BYTE PTR [eax-0x1bfffff0],ch
 100bc09:	add    al,0x0
 100bc0b:	add    BYTE PTR [eax],al
 100bc0d:	add    BYTE PTR [eax],al
 100bc0f:	add    al,bh
 100bc11:	sbb    BYTE PTR [edx],al
 100bc13:	add    BYTE PTR [eax+0x4],ch
 100bc16:	add    BYTE PTR [eax],al
 100bc18:	in     al,0x4
 100bc1a:	add    BYTE PTR [eax],al
 100bc1c:	add    BYTE PTR [eax],al
 100bc1e:	add    BYTE PTR [eax],al
 100bc20:	pusha  
 100bc21:	sbb    eax,0x8a80002
 100bc26:	add    BYTE PTR [eax],al
 100bc28:	in     al,0x4
 100bc2a:	add    BYTE PTR [eax],al
 100bc2c:	add    BYTE PTR [eax],al
 100bc2e:	add    BYTE PTR [eax],al
 100bc30:	or     BYTE PTR [esi],ah
 100bc32:	add    al,BYTE PTR [eax]
 100bc34:	push   0xe4000005
 100bc39:	add    al,0x0
 100bc3b:	add    BYTE PTR [eax],al
 100bc3d:	add    BYTE PTR [eax],al
 100bc3f:	add    BYTE PTR [eax+0x2b],dh
 100bc42:	add    al,BYTE PTR [eax]
 100bc44:	test   al,0x8
 100bc46:	add    BYTE PTR [eax],al
 100bc48:	in     al,0x4
 100bc4a:	add    BYTE PTR [eax],al
 100bc4c:	add    BYTE PTR [eax],al
 100bc4e:	add    BYTE PTR [eax],al
 100bc50:	sbb    BYTE PTR [edx+eax*1],dh
 100bc53:	add    BYTE PTR [eax+0x5],ch
 100bc56:	add    BYTE PTR [eax],al
 100bc58:	in     al,0x4
 100bc5a:	add    BYTE PTR [eax],al
 100bc5c:	add    BYTE PTR [eax],al
 100bc5e:	add    BYTE PTR [eax],al
 100bc60:	cmp    BYTE PTR [ecx],0x2
 100bc63:	add    BYTE PTR [eax+0x5],ch
 100bc66:	add    BYTE PTR [eax],al
 100bc68:	in     al,0x4
 100bc6a:	add    BYTE PTR [eax],al
 100bc6c:	add    BYTE PTR [eax],al
 100bc6e:	add    BYTE PTR [eax],al
 100bc70:	call   0x6900beb3
 100bc75:	add    al,0x0
 100bc77:	add    ah,ah
 100bc79:	add    al,0x0
 100bc7b:	add    BYTE PTR [eax],al
 100bc7d:	add    BYTE PTR [eax],al
 100bc7f:	add    BYTE PTR [eax+0x43],dl
 100bc82:	add    al,BYTE PTR [eax]
 100bc84:	sub    BYTE PTR [esi],dl
 100bc86:	add    BYTE PTR [eax],al
 100bc88:	in     al,0x4
 100bc8a:	add    BYTE PTR [eax],al
 100bc8c:	add    BYTE PTR [eax],al
 100bc8e:	add    BYTE PTR [eax],al
 100bc90:	js     0x100bceb
 100bc92:	add    al,BYTE PTR [eax]
 100bc94:	test   al,0xe
 100bc96:	add    BYTE PTR [eax],al
 100bc98:	in     al,0x4
 100bc9a:	add    BYTE PTR [eax],al
 100bc9c:	add    BYTE PTR [eax],al
 100bc9e:	add    BYTE PTR [eax],al
 100bca0:	and    BYTE PTR [eax+0x2],ch
 100bca3:	add    BYTE PTR [eax-0x1bfffff8],ch
 100bca9:	add    al,0x0
 100bcab:	add    BYTE PTR [eax],al
 100bcad:	add    BYTE PTR [eax],al
 100bcaf:	add    al,cl
 100bcb1:	jo     0x100bcb5
 100bcb3:	add    BYTE PTR [eax+0x5],ch
 100bcb6:	add    BYTE PTR [eax],al
 100bcb8:	in     al,0x4
 100bcba:	add    BYTE PTR [eax],al
 100bcbc:	add    BYTE PTR [eax],al
 100bcbe:	add    BYTE PTR [eax],al
 100bcc0:	xor    BYTE PTR [esi+0x2],dh
 100bcc3:	add    BYTE PTR [ebx],al
 100bcc5:	mov    al,BYTE PTR [eax]
 100bcc7:	add    ah,ah
 100bcc9:	add    al,0x0
 100bccb:	add    BYTE PTR [eax],al
 100bccd:	add    BYTE PTR [eax],al
 100bccf:	add    BYTE PTR [eax+eax*1],dh
 100bcd2:	add    eax,DWORD PTR [eax]
 100bcd4:	sub    BYTE PTR [edx+0x0],al
 100bcd7:	add    ah,ah
 100bcd9:	add    al,0x0
 100bcdb:	add    BYTE PTR [eax],al
 100bcdd:	add    BYTE PTR [eax],al
 100bcdf:	add    BYTE PTR [edx+eax*2+0x3],bl
 100bce3:	add    BYTE PTR [eax-0x1bffffdb],ch
 100bce9:	add    al,0x0
 100bceb:	add    BYTE PTR [eax],al
 100bced:	add    BYTE PTR [eax],al
 100bcef:	add    BYTE PTR [eax+ebp*2],al
 100bcf2:	add    eax,DWORD PTR [eax]
 100bcf4:	test   al,0x10
 100bcf6:	add    BYTE PTR [eax],al
 100bcf8:	in     al,0x4
 100bcfa:	add    BYTE PTR [eax],al
 100bcfc:	add    BYTE PTR [eax],al
 100bcfe:	add    BYTE PTR [eax],al
 100bd00:	lods   al,BYTE PTR ds:[esi]
 100bd01:	js     0x100bd06
 100bd03:	add    BYTE PTR [eax+0x4],ch
 100bd06:	add    BYTE PTR [eax],al
 100bd08:	in     al,0x4
 100bd0a:	add    BYTE PTR [eax],al
 100bd0c:	add    BYTE PTR [eax],al
 100bd0e:	add    BYTE PTR [eax],al
 100bd10:	adc    al,0x7d
 100bd12:	add    eax,DWORD PTR [eax]
 100bd14:	inc    edx
 100bd15:	add    DWORD PTR [eax],eax
 100bd17:	add    ah,ah
 100bd19:	add    al,0x0
 100bd1b:	add    BYTE PTR [eax],al
 100bd1d:	add    BYTE PTR [eax],al
 100bd1f:	add    BYTE PTR [eax+0x7e],bl
 100bd22:	add    eax,DWORD PTR [eax]
 100bd24:	adc    BYTE PTR [eax],al
 100bd26:	add    BYTE PTR [eax],al
 100bd28:	in     al,0x4
 100bd2a:	add    BYTE PTR [eax],al
 100bd2c:	add    BYTE PTR [eax],al
 100bd2e:	add    BYTE PTR [eax],al
 100bd30:	push   0x3e00037e
 100bd35:	add    BYTE PTR [eax],al
 100bd37:	add    ah,ah
 100bd39:	add    al,0x0
 100bd3b:	add    BYTE PTR [eax],al
 100bd3d:	add    BYTE PTR [eax],al
 100bd3f:	add    BYTE PTR [eax+0x3e00037e],ch
 100bd45:	add    BYTE PTR [eax],al
 100bd47:	add    ah,ah
 100bd49:	add    al,0x0
 100bd4b:	add    BYTE PTR [eax],al
 100bd4d:	add    BYTE PTR [eax],al
 100bd4f:	add    al,ch
 100bd51:	jle    0x100bd56
 100bd53:	add    BYTE PTR [esi],bh
 100bd55:	add    BYTE PTR [eax],al
 100bd57:	add    ah,ah
 100bd59:	add    al,0x0
 100bd5b:	add    BYTE PTR [eax],al
 100bd5d:	add    BYTE PTR [eax],al
 100bd5f:	add    BYTE PTR [eax],ch
 100bd61:	jg     0x100bd66
 100bd63:	add    BYTE PTR [esi],bh
 100bd65:	add    BYTE PTR [eax],al
 100bd67:	add    ah,ah
 100bd69:	add    al,0x0
 100bd6b:	add    BYTE PTR [eax],al
 100bd6d:	add    BYTE PTR [eax],al
 100bd6f:	add    BYTE PTR [eax+0x7f],ch
 100bd72:	add    eax,DWORD PTR [eax]
 100bd74:	add    BYTE PTR ds:[eax],al
 100bd77:	add    ah,ah
 100bd79:	add    al,0x0
 100bd7b:	add    BYTE PTR [eax],al
 100bd7d:	add    BYTE PTR [eax],al
 100bd7f:	add    BYTE PTR [eax+0x3e00037f],ch
 100bd85:	add    BYTE PTR [eax],al
 100bd87:	add    ah,ah
 100bd89:	add    al,0x0
 100bd8b:	add    BYTE PTR [eax],al
 100bd8d:	add    BYTE PTR [eax],al
 100bd8f:	add    al,ch
 100bd91:	jg     0x100bd96
 100bd93:	add    BYTE PTR [esi],bh
 100bd95:	add    BYTE PTR [eax],al
 100bd97:	add    ah,ah
 100bd99:	add    al,0x0
 100bd9b:	add    BYTE PTR [eax],al
 100bd9d:	add    BYTE PTR [eax],al
 100bd9f:	add    BYTE PTR [eax],ch
 100bda1:	add    BYTE PTR [ebx],0x0
 100bda4:	add    BYTE PTR ds:[eax],al
 100bda7:	add    ah,ah
 100bda9:	add    al,0x0
 100bdab:	add    BYTE PTR [eax],al
 100bdad:	add    BYTE PTR [eax],al
 100bdaf:	add    BYTE PTR [eax-0x80],ch
 100bdb2:	add    eax,DWORD PTR [eax]
 100bdb4:	add    BYTE PTR ds:[eax],al
 100bdb7:	add    ah,ah
 100bdb9:	add    al,0x0
 100bdbb:	add    BYTE PTR [eax],al
 100bdbd:	add    BYTE PTR [eax],al
 100bdbf:	add    BYTE PTR [eax+0x3e000380],ch
 100bdc5:	add    BYTE PTR [eax],al
 100bdc7:	add    ah,ah
 100bdc9:	add    al,0x0
 100bdcb:	add    BYTE PTR [eax],al
 100bdcd:	add    BYTE PTR [eax],al
 100bdcf:	add    al,ch
 100bdd1:	add    BYTE PTR [ebx],0x0
 100bdd4:	and    al,BYTE PTR [eax]
 100bdd6:	add    BYTE PTR [eax],al
 100bdd8:	in     al,0x4
 100bdda:	add    BYTE PTR [eax],al
 100bddc:	add    BYTE PTR [eax],al
 100bdde:	add    BYTE PTR [eax],al
 100bde0:	or     al,0x81
 100bde2:	add    eax,DWORD PTR [eax]
 100bde4:	add    BYTE PTR ds:[eax],al
 100bde7:	add    ah,ah
 100bde9:	add    al,0x0
 100bdeb:	add    BYTE PTR [eax],al
 100bded:	add    BYTE PTR [eax],al
 100bdef:	add    BYTE PTR [ecx+eax*4+0x3],cl
 100bdf3:	add    BYTE PTR [eax+eax*1+0x4e40000],al
 100bdfa:	add    BYTE PTR [eax],al
 100bdfc:	add    BYTE PTR [eax],al
 100bdfe:	add    BYTE PTR [eax],al
 100be00:	rol    BYTE PTR [ecx+0x3380003],1
 100be06:	add    BYTE PTR [eax],al
 100be08:	in     al,0x4
 100be0a:	add    BYTE PTR [eax],al
 100be0c:	add    BYTE PTR [eax],al
 100be0e:	add    BYTE PTR [eax],al
 100be10:	or     BYTE PTR [ebp+0x3cf0003],al
 100be16:	add    BYTE PTR [eax],al
 100be18:	in     al,0x4
 100be1a:	add    BYTE PTR [eax],al
 100be1c:	add    BYTE PTR [eax],al
 100be1e:	add    BYTE PTR [eax],al
 100be20:	sub    BYTE PTR [eax],al
 100be22:	add    BYTE PTR [eax],al
 100be24:	adc    BYTE PTR [eax],al
 100be26:	add    BYTE PTR [eax],al
 100be28:	and    BYTE PTR [eax],al
 100be2a:	add    BYTE PTR [eax],al
 100be2c:	add    DWORD PTR [eax],eax
 100be2e:	or     BYTE PTR [eax],al
 100be30:	add    BYTE PTR [eax],al
 100be32:	add    BYTE PTR [eax],al
 100be34:	add    BYTE PTR [ecx],al
	...
 100be3e:	add    BYTE PTR [eax],al
 100be40:	add    BYTE PTR [ecx],al
 100be42:	add    BYTE PTR [eax],al
 100be44:	add    BYTE PTR [ecx],al
 100be46:	add    BYTE PTR [eax],al
 100be48:	add    BYTE PTR [eax],al
 100be4a:	add    BYTE PTR [eax],al
 100be4c:	sub    al,0x46
 100be4e:	pop    eax
 100be4f:	add    BYTE PTR [ebx],bl
 100be51:	pop    ebx
 100be52:	ja     0x100be54
 100be54:	jne    0x100beaf
 100be56:	inc    esp
 100be57:	add    BYTE PTR [esi-0x77ffa192],al
 100be5d:	outs   dx,DWORD PTR ds:[esi]
 100be5e:	pop    ebp
 100be5f:	add    BYTE PTR [ebx-0x70ffa18f],cl
 100be65:	jne    0x100bec8
 100be67:	add    BYTE PTR [ebx+0x3300687a],dl
 100be6d:	int3   
 100be6e:	data16 add BYTE PTR [edx-0x5dff8978],ah
 100be75:	mov    bh,BYTE PTR [ecx+0x0]
 100be78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100be79:	lea    edi,[eax+eax*1+0x21]
 100be7d:	add    DWORD PTR gs:[eax],0x2c
 100be81:	je     0x100be1d
 100be83:	add    BYTE PTR [edi],ch
 100be85:	jbe    0x100be23
 100be87:	add    BYTE PTR [edi+0x75],cl
 100be8a:	pop    DWORD PTR [eax]
 100be8c:	jne    0x100bf0c
 100be8e:	add    DWORD PTR [eax],0x53
 100be91:	call   0xb8:0x9b5400b8
 100be98:	pop    eax
 100be99:	popf   
 100be9a:	mov    edx,0xbb9f5c00
 100be9f:	add    BYTE PTR [ebx-0x5d],dh
 100bea2:	mov    dh,0x0
 100bea4:	jne    0x100be50
 100bea6:	mov    ebx,0xe69f0000
 100beab:	add    BYTE PTR [eax],al
 100bead:	mov    ds:0xa70000e6,eax
 100beb2:	in     al,dx
 100beb3:	add    BYTE PTR [eax],dl
 100beb5:	mov    al,0xec
 100beb7:	add    BYTE PTR [ebx],bl
 100beb9:	mov    ch,0xed
 100bebb:	add    BYTE PTR [esi*4-0x45cfff14],bl
 100bec2:	in     al,dx
 100bec3:	add    BYTE PTR [edx],ch
 100bec5:	mov    edx,0xc94c00f0
 100beca:	icebp  
 100becb:	add    BYTE PTR [edx-0x36],dl
 100bece:	repnz add BYTE PTR [ecx-0x33],dl
 100bed2:	hlt    
 100bed3:	add    BYTE PTR [esi+ecx*8-0x16],ch
 100bed7:	add    BYTE PTR [ebp+edx*8-0xe],ch
 100bedb:	add    BYTE PTR [edx-0x28],dh
 100bede:	repnz add BYTE PTR [ebx-0x26],dh
 100bee2:	cmc    
 100bee3:	add    BYTE PTR [edx-0x1e],bh
 100bee6:	sti    
 100bee7:	add    BYTE PTR [edi-0x55ff7c6a],ch
 100beed:	mov    ds:0xa1b7009b,al
 100bef2:	nop
 100bef3:	add    BYTE PTR [edx-0x65ff6c5d],bh
 100bef9:	mov    eax,ds:0xafae00a9
 100befe:	scas   al,BYTE PTR es:[edi]
 100beff:	add    BYTE PTR [esi-0x40ff4e47],bh
 100bf05:	mov    ebx,0xafc300bb
 100bf0a:	mov    al,ds:0xadb9c900
 100bf0f:	add    bh,al
 100bf11:	mov    esp,0xc5d100b1
 100bf16:	mov    edx,0xcebd8a00
 100bf1b:	add    BYTE PTR [edi-0x6eff101f],dl
 100bf21:	in     al,0xf6
 100bf23:	add    BYTE PTR [esi-0x5fff0917],bl
 100bf29:	jmp    0xf7:0xeca100f6
 100bf30:	lods   eax,DWORD PTR ds:[esi]
 100bf31:	lock clc 
 100bf33:	add    BYTE PTR [ecx-0x4aff050d],dh
 100bf39:	cmc    
 100bf3a:	cli    
 100bf3b:	add    bl,bl
 100bf3d:	rol    edi,1
 100bf3f:	add    bl,bh
 100bf41:	(bad)  
 100bf43:	add    dl,ch
 100bf45:	loope  0x100bf1f
 100bf47:	add    dl,bh
 100bf49:	loope  0x100bf1c
 100bf4b:	add    al,dh
 100bf4d:	loop   0x100bf28
 100bf4f:	add    ch,cl
 100bf51:	(bad)  
 100bf52:	inc    DWORD PTR [eax]
 100bf54:	sar    edi,cl
 100bf56:	inc    DWORD PTR [eax]
 100bf58:	in     al,dx
 100bf59:	out    0xe2,eax
 100bf5b:	add    dl,dh
 100bf5d:	out    0xe1,eax
 100bf5f:	add    bl,bh
 100bf61:	cli    
 100bf62:	test   DWORD PTR [eax],0xffffff
	...
 100c248:	add    BYTE PTR [ecx],cl
 100c24a:	add    BYTE PTR [ecx],cl
 100c24c:	add    BYTE PTR [ecx+eax*1],ch
 100c24f:	add    BYTE PTR [eax],al
 100c251:	add    BYTE PTR [eax],al
 100c253:	add    BYTE PTR [ebx],al
 100c255:	xor    al,BYTE PTR [eax]
 100c257:	add    BYTE PTR [eax],al
 100c259:	add    BYTE PTR [eax],al
 100c25b:	add    BYTE PTR [eax],al
 100c25d:	add    BYTE PTR [esi],bl
 100c25f:	add    al,BYTE PTR [eax]
 100c261:	add    BYTE PTR [eax],al
 100c263:	add    edi,DWORD PTR ds:0x2a
 100c269:	or     DWORD PTR [eax],eax
 100c26b:	add    BYTE PTR [eax],al
 100c26d:	add    BYTE PTR [eax],al
 100c26f:	push   ds
 100c270:	or     eax,0x2a3f0300
	...
 100c27d:	add    BYTE PTR [eax],al
 100c27f:	add    BYTE PTR [esi],bl
 100c281:	add    eax,DWORD PTR [eax+0x2a]
 100c284:	add    BYTE PTR [eax],al
 100c286:	add    BYTE PTR [eax],al
 100c288:	add    BYTE PTR [ecx],cl
 100c28a:	add    BYTE PTR [eax],al
 100c28c:	add    BYTE PTR [eax],al
 100c28e:	add    BYTE PTR [eax],al
 100c290:	add    edi,DWORD PTR [esi]
 100c292:	or     eax,0x6000000
	...
 100c29f:	add    eax,DWORD PTR [ecx+0x2a]
 100c2a2:	push   ds
 100c2a3:	or     eax,0x6460606
 100c2a8:	add    BYTE PTR [ebx],dl
 100c2aa:	adc    BYTE PTR [eax],dl
 100c2ac:	adc    DWORD PTR [eax*1+0x2f002a44],eax
 100c2b3:	sub    DWORD PTR [ebp+0x33],eax
 100c2b6:	pop    es
 100c2b7:	add    BYTE PTR [ebx],dl
 100c2b9:	and    BYTE PTR ds:0x302e0c23,dh
 100c2bf:	or     BYTE PTR [eax],al
 100c2c1:	add    BYTE PTR [eax],al
 100c2c3:	sub    eax,DWORD PTR [edi+0x33]
 100c2c6:	pop    es
 100c2c7:	add    BYTE PTR [ebx],dl
 100c2c9:	and    bh,BYTE PTR [ecx]
 100c2cb:	sub    bl,BYTE PTR es:[edx]
 100c2ce:	sub    eax,0xc
 100c2d3:	or     al,0x31
 100c2d5:	pop    es
 100c2d6:	add    BYTE PTR [eax],al
 100c2d8:	adc    al,0x22
 100c2da:	cmp    BYTE PTR [esi],ah
 100c2dc:	sbb    eax,0x312a17
 100c2e1:	sub    BYTE PTR [edx],cl
 100c2e3:	pop    es
 100c2e4:	pop    es
 100c2e5:	add    BYTE PTR [eax],al
 100c2e7:	add    BYTE PTR [edx+eiz*1],dl
 100c2ea:	cmp    DWORD PTR ds:0xe191d,esp
 100c2f0:	add    BYTE PTR [eax],al
 100c2f2:	add    BYTE PTR [eax],al
 100c2f4:	add    BYTE PTR [eax],al
 100c2f6:	or     DWORD PTR [eax],eax
 100c2f8:	adc    al,0x22
 100c2fa:	cmp    DWORD PTR ds:0xe191d,esp
	...
 100c308:	adc    al,0x22
 100c30a:	cmp    BYTE PTR [ebx+ebx*1],ah
 100c30d:	sbb    BYTE PTR [esi],cl
 100c30f:	add    BYTE PTR [eax],al
 100c311:	add    BYTE PTR [eax],al
 100c313:	add    BYTE PTR [eax],al
 100c315:	add    BYTE PTR [ecx],cl
 100c317:	add    BYTE PTR [edi+eiz*1],dl
 100c31a:	cmp    dh,BYTE PTR [esi]
 100c31c:	and    bl,BYTE PTR [edi]
 100c31e:	push   cs
	...
 100c327:	add    BYTE PTR [esp+edi*1],dh
 100c32a:	inc    edx
 100c32b:	inc    ebx
 100c32c:	inc    edx
 100c32d:	cmp    al,0x16
 100c32f:	add    BYTE PTR [ecx],cl
 100c331:	add    BYTE PTR [ecx],cl
 100c333:	add    BYTE PTR [ecx],cl
 100c335:	add    BYTE PTR [ecx],cl
 100c337:	add    BYTE PTR [eax],al
 100c339:	xor    al,0x34
 100c33b:	xor    al,0x34
 100c33d:	xor    al,0x0
	...
 100c347:	add    BYTE PTR [ecx-0x3ffff0d],ch
 100c34d:	jecxz  0x100c34f
 100c34f:	add    BYTE PTR [esi-0xffffb9],bh
 100c355:	sldt   WORD PTR [eax]
 100c358:	mov    edi,0xfe00001d
 100c35d:	add    BYTE PTR [eax],al
 100c35f:	add    BYTE PTR [eax+0x41],al
 100c365:	loope  0x100c367
 100c367:	add    BYTE PTR [eax],al
 100c369:	jecxz  0x100c36b
 100c36b:	add    BYTE PTR [eax],al
 100c36d:	xchg   DWORD PTR [eax],eax
 100c36f:	add    BYTE PTR [ecx],al
 100c371:	std    
 100c372:	add    BYTE PTR [eax],al
 100c374:	add    edi,edi
 100c376:	add    BYTE PTR [eax],al
 100c378:	add    ebp,edi
 100c37a:	add    BYTE PTR [eax],al
 100c37c:	add    edi,edi
 100c37e:	add    BYTE PTR [eax],al
 100c380:	add    DWORD PTR [ebp+0x0],edx
 100c383:	add    BYTE PTR [ebx+0x280000ff],al
 100c389:	add    BYTE PTR [eax],al
 100c38b:	add    BYTE PTR [eax],dl
 100c38d:	add    BYTE PTR [eax],al
 100c38f:	add    BYTE PTR [eax],ah
 100c391:	add    BYTE PTR [eax],al
 100c393:	add    BYTE PTR [ecx],al
 100c395:	add    BYTE PTR [eax],ah
 100c397:	add    BYTE PTR [eax],al
 100c399:	add    BYTE PTR [eax],al
 100c39b:	add    BYTE PTR [eax+0x4],al
	...
 100c3b2:	add    BYTE PTR [eax],al
 100c3b4:	xor    ecx,esp
 100c3b6:	data16 (bad) 
 100c3b8:	(bad)  
 100c3b9:	std    
 100c3ba:	cld    
 100c3bb:	and    DWORD PTR [ebx],esi
 100c3bd:	int3   
 100c3be:	data16 (bad) 
 100c3c0:	(bad)  
 100c3c1:	std    
 100c3c2:	cld    
 100c3c3:	and    DWORD PTR [edx+0x2cffa9a1],ebx
 100c3c9:	inc    esi
 100c3ca:	pop    eax
 100c3cb:	jmp    DWORD PTR [esi]
 100c3cd:	sub    edi,DWORD PTR [ecx]
 100c3cf:	jo     0x100c3d1
	...
 100c3dd:	add    BYTE PTR [eax],al
 100c3df:	add    BYTE PTR [ebp+0x59],dh
 100c3e2:	inc    esp
 100c3e3:	inc    edi
 100c3e5:	mov    esp,0xffb1
	...
 100c3f2:	add    BYTE PTR [eax],al
 100c3f4:	(bad)  
 100c3f5:	std    
 100c3f6:	cld    
 100c3f7:	and    DWORD PTR [eax],eax
	...
 100c401:	add    BYTE PTR [eax],al
 100c403:	add    BYTE PTR [ecx+edi*2-0x7c],dh
 100c407:	dec    edi
 100c408:	xor    BYTE PTR [edx+0x5b1bffec],bh
 100c40e:	ja     0x100c40f
 100c410:	sub    DWORD PTR [eax],ebp
 100c412:	add    BYTE PTR ss:[bx+si],al
 100c416:	add    BYTE PTR [eax],al
 100c418:	add    BYTE PTR [eax],al
 100c41a:	add    BYTE PTR [eax],al
 100c41c:	jne    0x100c477
 100c41e:	inc    esp
 100c41f:	(bad)  
 100c420:	fcmovnbe st,st(1)
 100c422:	(bad)  
 100c423:	push   DWORD PTR [edi-0x3b006f5f]
 100c429:	mov    al,0xa0
 100c42b:	or     DWORD PTR [eax],eax
 100c42d:	add    BYTE PTR [eax],al
 100c42f:	add    BYTE PTR [eax],al
 100c431:	add    BYTE PTR [eax],al
 100c433:	add    BYTE PTR [ebx],dh
 100c435:	int3   
 100c436:	inc    WORD PTR [eax]
	...
 100c445:	add    BYTE PTR [eax],al
 100c447:	add    BYTE PTR [eax+0x78],bh
 100c44a:	adc    BYTE PTR [ebp+0x30],0xba
 100c44e:	in     al,dx
 100c44f:	jmp    DWORD PTR [ecx]
 100c451:	gs cmp edi,0x3b
 100c455:	xor    BYTE PTR ds:0x4459755d,dh
 100c45b:	(bad)  
 100c45c:	jmp    0x90a1:0xb7ffd8e1
 100c463:	inc    DWORD PTR [eax]
	...
 100c471:	add    BYTE PTR [eax],al
 100c473:	add    bh,bh
 100c475:	std    
 100c476:	cld    
 100c477:	and    DWORD PTR [eax],eax
	...
 100c489:	add    BYTE PTR [eax],al
 100c48b:	add    BYTE PTR [ebp+0x7f],dh
 100c48e:	mov    cs,WORD PTR [ecx+0x30]
 100c491:	mov    edx,0x5975ffec
 100c496:	inc    esp
 100c497:	(bad)  
 100c498:	cli    
 100c499:	loope  0x100c46c
 100c49b:	push   DWORD PTR [edi+0xff90a1]
	...
 100c4a9:	add    BYTE PTR [eax],al
 100c4ab:	add    BYTE PTR [edx+0x52],dh
 100c4ae:	or     DWORD PTR ds:[eax],eax
 100c4b1:	add    BYTE PTR [eax],al
 100c4b3:	add    BYTE PTR [ebx],dh
 100c4b5:	int3   
 100c4b6:	inc    WORD PTR [eax]
	...
 100c4cd:	add    BYTE PTR [eax],al
 100c4cf:	add    BYTE PTR [ebp+0x59],dh
 100c4d2:	inc    esp
 100c4d3:	(bad)  
 100c4d4:	sti    
 100c4d5:	(bad)  
 100c4d7:	jmp    DWORD PTR [ecx]
 100c4d9:	gs cmp edi,0x0
	...
 100c4e5:	add    BYTE PTR [eax],al
 100c4e7:	add    BYTE PTR [ebx-0x5f00a18f],cl
 100c4ed:	mov    edi,DWORD PTR [ebp+0x3d]
 100c4f0:	add    BYTE PTR [eax],al
 100c4f2:	add    BYTE PTR [eax],al
 100c4f4:	(bad)  
 100c4f5:	std    
 100c4f6:	cld    
 100c4f7:	and    DWORD PTR [eax],eax
	...
 100c509:	add    BYTE PTR [eax],al
 100c50b:	add    BYTE PTR [ebp+0x59],dh
 100c50e:	inc    esp
 100c50f:	push   eax
 100c511:	loop   0x100c4ec
 100c513:	push   DWORD PTR [edi+0x30ff90a1]
 100c519:	mov    edx,0x6521ffec
 100c51e:	cmp    edi,0xffffff8b
 100c521:	jno    0x100c581
 100c523:	dec    DWORD PTR [ebx-0x400a18f]
 100c529:	cli    
 100c52a:	idiv   edi
 100c52c:	mov    esi,DWORD PTR [ecx+0x5e]
 100c52f:	inc    DWORD PTR [eax]
 100c531:	add    BYTE PTR [eax],al
 100c533:	add    BYTE PTR [ebx+ebx*4-0x48],dl
 100c537:	inc    DWORD PTR [edi+0x6f]
 100c53a:	mov    dh,bl
 100c53c:	inc    edi
 100c53d:	outs   dx,DWORD PTR ds:[esi]
 100c53e:	mov    dh,bl
 100c540:	jb     0x100c5bd
 100c542:	cmp    ecx,0xff5e6e86
 100c548:	mov    BYTE PTR [edi+0x5d],ch
 100c54b:	(bad)  
 100c54c:	in     al,dx
 100c54d:	out    0xe2,eax
 100c54f:	push   DWORD PTR [edi+0xff90a1]
 100c555:	add    BYTE PTR [eax],al
 100c557:	add    BYTE PTR [esp+eax*4-0x5d55737c],cl
 100c55e:	fwait
 100c55f:	push   edx
 100c561:	out    0xe1,eax
 100c563:	call   ebx
 100c565:	lds    edi,FWORD PTR [ecx+0x61758fff]
 100c56b:	jmp    FWORD PTR [ebx+edx*4-0x64abc980]
 100c572:	mov    eax,0xf1c94cff
 100c577:	call   DWORD PTR [edi+0x6cffefe1]
 100c57d:	into   
 100c57e:	jmp    0xbeff:0x7c8da4ff
 100c585:	mov    ecx,0xafc3ffb1
 100c58a:	mov    al,ds:0x687a93ff
 100c58f:	inc    DWORD PTR [eax]
 100c591:	add    BYTE PTR [eax],al
 100c593:	add    BYTE PTR [eax],al
 100c595:	add    BYTE PTR [eax],al
 100c597:	add    BYTE PTR [ebp-0x45f97966],dh
 100c59d:	mov    ds:0xffffff93,eax
 100c5a2:	(bad)  
 100c5a3:	cld    
 100c5a4:	rol    ch,1
 100c5a6:	mov    ebx,0x61758fff
 100c5ab:	inc    DWORD PTR [eax]
 100c5ad:	add    BYTE PTR [eax],al
 100c5af:	add    BYTE PTR [ecx-0x67],dl
 100c5b2:	mov    bh,0xfb
 100c5b4:	push   ecx
 100c5b5:	into   
 100c5b6:	hlt    
 100c5b7:	jmp    DWORD PTR [ecx+0x73fff7ec]
 100c5bd:	(bad)  
 100c5bf:	push   DWORD PTR [edi+0xff90a1]
 100c5c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 100c5c6:	in     al,dx
 100c5c7:	jmp    FWORD PTR [esi-0x5c005151]
 100c5cd:	mov    edi,DWORD PTR [edx-0x1]
 100c5d0:	add    BYTE PTR [eax],al
 100c5d2:	add    BYTE PTR [eax],al
 100c5d4:	and    DWORD PTR [ebx+0x50],0x16
 100c5d8:	and    DWORD PTR [edi+ecx*2+0x47],0xff7889a2
 100c5e0:	enter  0xaeb9,0xff
 100c5e4:	(bad)  
 100c5e5:	jne    0x100c648
 100c5e7:	call   DWORD PTR [edx+0x6e6478]
 100c5ed:	add    BYTE PTR [eax],al
 100c5ef:	add    BYTE PTR [edx-0x67],dl
 100c5f2:	mov    bh,0xf5
 100c5f4:	push   ecx
 100c5f5:	into   
 100c5f6:	hlt    
 100c5f7:	call   FWORD PTR [edi+0x72fff6ea]
 100c5fd:	fdiv   st,st(2)
 100c5ff:	call   FWORD PTR [ebx]
 100c601:	mov    ch,0xed
 100c603:	push   DWORD PTR [ebp-0x56]
 100c606:	mov    ebx,0x90a1b7ff
 100c60b:	(bad)  
 100c60c:	mov    ecx,0xafbe92a3
 100c611:	xchg   edi,eax
 100c612:	test   BYTE PTR [edx],ch
 100c614:	scas   eax,DWORD PTR es:[edi]
 100c615:	xchg   esi,eax
 100c616:	cmp    edi,0xffffffa2
 100c619:	mov    BYTE PTR [esi-0x1],dh
 100c61c:	(bad)  
 100c61d:	jne    0x100c680
 100c61f:	dec    DWORD PTR [edi-0x70009e8b]
 100c625:	jne    0x100c688
 100c627:	data16 add BYTE PTR [eax],al
 100c62a:	add    BYTE PTR [eax],al
 100c62c:	add    BYTE PTR [eax],al
 100c62e:	add    BYTE PTR [eax],al
 100c630:	push   ebx
 100c631:	call   0xfff4:0xce52f5b8
 100c638:	mov    al,ds:0x72fff6ea
 100c63d:	fdiv   st,st(3)
 100c63f:	call   FWORD PTR [ebx]
 100c641:	mov    ch,0xed
 100c643:	inc    DWORD PTR [eax]
 100c645:	mov    ds:0x732bffe7,eax
 100c64a:	call   0x0:0xfd
	...
 100c665:	add    BYTE PTR [eax],al
 100c667:	add    BYTE PTR [ebx],dh
 100c669:	int3   
 100c66a:	inc    WORD PTR [eax]
 100c66d:	add    BYTE PTR [eax],al
 100c66f:	add    BYTE PTR [ebx-0x66],dl
 100c672:	mov    eax,0xf4ce52f5
 100c677:	jmp    DWORD PTR [eax+0x73fff6ea]
 100c67d:	fdiv   st,st(3)
 100c67f:	call   FWORD PTR [esi*4-0x5cff0014]
 100c686:	out    0xff,al
 100c688:	sub    al,0x73
 100c68a:	call   0x0:0xfd
	...
 100c6a5:	add    BYTE PTR [eax],al
 100c6a7:	add    bh,bh
 100c6a9:	std    
 100c6aa:	cld    
 100c6ab:	and    DWORD PTR [eax],eax
 100c6ad:	add    BYTE PTR [eax],al
 100c6af:	add    BYTE PTR [edx-0x66],dl
 100c6b2:	mov    ecx,0xf4cd51f5
 100c6b7:	call   FWORD PTR [ebp+0x6cfff6e9]
 100c6bd:	aad    0xf2
 100c6bf:	call   DWORD PTR [eax]
 100c6c1:	mov    al,0xec
 100c6c3:	inc    DWORD PTR [eax]
 100c6c5:	lahf   
 100c6c6:	out    0xff,al
 100c6c8:	sub    esi,DWORD PTR [ebx-0x65]
 100c6cb:	std    
	...
 100c6e8:	xor    ecx,esp
 100c6ea:	inc    WORD PTR [eax]
 100c6ed:	add    BYTE PTR [eax],al
 100c6ef:	add    BYTE PTR [esi-0x64],dl
 100c6f2:	mov    ecx,0xfbe27af5
 100c6f7:	jmp    FWORD PTR [ebp-0x6e000710]
 100c6fd:	in     al,0xf6
 100c6ff:	call   DWORD PTR [edx-0x36]
 100c702:	repnz jmp FWORD PTR [edx]
 100c705:	mov    edx,0x752efff0
 100c70a:	pushf  
 100c70b:	std    
	...
 100c728:	(bad)  
 100c729:	std    
 100c72a:	cld    
 100c72b:	and    DWORD PTR [eax],eax
 100c72d:	add    BYTE PTR [eax],al
 100c72f:	add    BYTE PTR [edx-0x4a003143],cl
 100c735:	cmc    
 100c736:	cli    
 100c737:	dec    esp
 100c739:	(bad)  
 100c73a:	(bad)  
 100c73b:	call   ebx
 100c73d:	(bad)  
 100c73e:	(bad)  
 100c73f:	dec    esi
 100c741:	(bad)  
 100c742:	(bad)  
 100c743:	push   DWORD PTR [ecx+0x73fffaf3]
 100c749:	mov    ds:0xffb6,eax
 100c74e:	add    BYTE PTR [eax],al
 100c750:	xor    ecx,esp
 100c752:	data16 (bad) 
 100c754:	(bad)  
 100c755:	std    
 100c756:	cld    
 100c757:	and    DWORD PTR [ebx],esi
 100c759:	int3   
 100c75a:	data16 (bad) 
 100c75c:	(bad)  
 100c75d:	std    
 100c75e:	cld    
 100c75f:	and    DWORD PTR [ebx],esi
 100c761:	int3   
 100c762:	data16 (bad) 
 100c764:	(bad)  
 100c765:	std    
 100c766:	cld    
 100c767:	and    DWORD PTR [ebx],esi
 100c769:	int3   
 100c76a:	inc    WORD PTR [eax]
 100c76d:	add    BYTE PTR [eax],al
 100c76f:	add    BYTE PTR [eax],al
 100c771:	add    BYTE PTR [eax],al
 100c773:	add    BYTE PTR [edx-0x75003143],cl
 100c779:	mov    ebp,0xbd8affce
 100c77e:	into   
 100c77f:	dec    DWORD PTR [edx-0x75003143]
 100c785:	mov    ebp,0xffce
	...
 100c7ae:	add    BYTE PTR [eax],al
 100c7b0:	xor    bl,0x0
 100c7b3:	add    BYTE PTR [eax-0x43ffff9f],bh
 100c7b9:	pop    es
 100c7ba:	add    BYTE PTR [eax],al
 100c7bc:	mov    esi,0xbf00000e
 100c7c1:	sbb    al,0x0
 100c7c3:	add    BYTE PTR [esi-0x80000000],bh
 100c7c9:	inc    eax
 100c7ca:	add    BYTE PTR [eax],al
 100c7cc:	add    cl,al
 100c7ce:	add    BYTE PTR [eax],al
 100c7d0:	add    BYTE PTR [ecx+0x3000000],al
 100c7d6:	add    BYTE PTR [eax],al
 100c7d8:	add    ebp,edi
 100c7da:	add    BYTE PTR [eax],al
 100c7dc:	add    ebp,edi
 100c7de:	add    BYTE PTR [eax],al
 100c7e0:	add    ebp,edi
 100c7e2:	add    BYTE PTR [eax],al
 100c7e4:	add    ebp,edi
 100c7e6:	add    BYTE PTR [eax],al
 100c7e8:	add    DWORD PTR [ecx],eax
 100c7ea:	add    BYTE PTR [eax],al
 100c7ec:	cmp    edi,0x0
 100c7ef:	add    BYTE PTR [eax],ch
 100c7f1:	add    BYTE PTR [eax],al
 100c7f3:	add    BYTE PTR [eax],ah
 100c7f5:	add    BYTE PTR [eax],al
 100c7f7:	add    BYTE PTR [eax+0x0],al
 100c7fa:	add    BYTE PTR [eax],al
 100c7fc:	add    DWORD PTR [eax],eax
 100c7fe:	or     BYTE PTR [eax],al
 100c800:	add    BYTE PTR [eax],al
 100c802:	add    BYTE PTR [eax],al
 100c804:	add    BYTE PTR [eax+eax*1],al
	...
 100c80f:	add    BYTE PTR [eax],al
 100c811:	add    DWORD PTR [eax],eax
 100c813:	add    BYTE PTR [eax],al
 100c815:	add    DWORD PTR [eax],eax
 100c817:	add    BYTE PTR [edx],bl
 100c819:	or     BYTE PTR [edi],cl
 100c81b:	add    BYTE PTR [esi],bl
 100c81d:	push   ds
 100c81e:	add    BYTE PTR es:[ebx],bl
 100c821:	and    eax,0x2812002f
 100c826:	aaa    
 100c827:	add    BYTE PTR [ecx],bl
 100c829:	sub    BYTE PTR [esi],dh
 100c82b:	add    BYTE PTR [eax],bl
 100c82d:	sub    eax,0x2337003b
 100c832:	sub    al,BYTE PTR [eax]
 100c834:	and    BYTE PTR [edx],ch
 100c836:	xor    eax,0x36282900
 100c83b:	add    BYTE PTR [esi],ah
 100c83d:	sub    edi,DWORD PTR [ecx]
 100c83f:	add    BYTE PTR [eax],ch
 100c841:	sub    bh,BYTE PTR [ecx]
 100c843:	add    BYTE PTR [ebx],ch
 100c845:	xor    DWORD PTR [esi],edi
 100c847:	add    BYTE PTR [ebx],bh
 100c849:	xor    BYTE PTR ds:0x132b4a00,dh
 100c84f:	add    BYTE PTR [edx+0x37],dl
 100c852:	and    eax,DWORD PTR [eax]
 100c854:	pop    ebx
 100c855:	cmp    esp,DWORD PTR [ebx]
 100c857:	add    BYTE PTR [ecx+0x3c],bl
 100c85a:	sub    DWORD PTR [eax],eax
 100c85c:	data16 and al,BYTE PTR ds:[eax]
 100c860:	xor    al,0x67
 100c862:	cmp    al,0x0
 100c864:	arpl   WORD PTR [edx+0x2a],ax
 100c867:	add    BYTE PTR [esi+0x4a],ch
 100c86a:	das    
 100c86b:	add    BYTE PTR [edx+0x4b],ch
 100c86e:	xor    eax,DWORD PTR [eax]
 100c870:	ins    BYTE PTR es:[edi],dx
 100c871:	dec    ebp
 100c872:	cmp    BYTE PTR [eax],al
 100c874:	outs   dx,DWORD PTR ds:[esi]
 100c875:	push   ecx
 100c876:	cmp    eax,0x3d527000
 100c87b:	add    BYTE PTR [esi],dh
 100c87d:	ds dec edi
 100c87f:	add    BYTE PTR [ebx],bl
 100c881:	inc    eax
 100c882:	push   esi
 100c883:	add    BYTE PTR [edi],bl
 100c885:	inc    esp
 100c886:	pop    ecx
 100c887:	add    BYTE PTR [edi],ah
 100c889:	inc    esi
 100c88a:	push   edi
 100c88b:	add    BYTE PTR [esi+eax*2],ch
 100c88e:	pop    eax
 100c88f:	add    BYTE PTR [edx],ch
 100c891:	dec    eax
 100c892:	pop    ecx
 100c893:	add    BYTE PTR [ebx],bh
 100c895:	inc    esi
 100c896:	push   esi
 100c897:	add    BYTE PTR [ebx],bl
 100c899:	pop    ebx
 100c89a:	ja     0x100c89c
 100c89c:	daa    
 100c89d:	dec    ebp
 100c89e:	imul   eax,DWORD PTR [eax],0x29
 100c8a1:	push   esp
 100c8a2:	je     0x100c8a4
 100c8a4:	and    BYTE PTR [edi+0x7d],dl
 100c8a7:	add    BYTE PTR [esi],ah
 100c8a9:	pop    esi
 100c8aa:	js     0x100c8ac
 100c8ac:	sub    ebx,DWORD PTR [ebx+0x7b]
 100c8af:	add    BYTE PTR [ebp+0x43],cl
 100c8b2:	dec    edx
 100c8b3:	add    BYTE PTR [esp+ecx*2+0x48],dl
 100c8b7:	add    BYTE PTR [esp+ecx*2+0x57],al
 100c8bb:	add    BYTE PTR [edx+0x55],dh
 100c8be:	inc    eax
 100c8bf:	add    BYTE PTR [eax+ebx*2+0x42],dh
 100c8c3:	add    BYTE PTR [ebp+0x59],dh
 100c8c6:	inc    esp
 100c8c7:	add    BYTE PTR [ecx+0x5d],bh
 100c8ca:	dec    ecx
 100c8cb:	add    BYTE PTR [ebx+0x5b],ch
 100c8ce:	push   ecx
 100c8cf:	add    BYTE PTR [edi+0x63],bh
 100c8d2:	dec    edi
 100c8d3:	add    BYTE PTR [esi+0x63],bh
 100c8d6:	push   eax
 100c8d7:	add    BYTE PTR [esi+0x5a],cl
 100c8da:	imul   eax,DWORD PTR [eax],0x775d40
 100c8e0:	arpl   WORD PTR [ebx+0x68],sp
 100c8e3:	add    BYTE PTR [esi+ebp*2+0x71],dh
 100c8e7:	add    BYTE PTR [eax+0x73],bh
 100c8ea:	jo     0x100c8ec
 100c8ec:	ja     0x100c962
 100c8ee:	jl     0x100c8f0
 100c8f0:	and    BYTE PTR [ebx+0x4f],0x0
 100c8f4:	and    DWORD PTR [ebx+0x50],0x566b8700
 100c8fb:	add    BYTE PTR [esp+ebp*2+0x6e89005a],al
 100c902:	pop    ebx
 100c903:	add    BYTE PTR [edx-0x72ffa290],cl
 100c909:	jno    0x100c967
 100c90b:	add    BYTE PTR [ebx-0x79ffa08c],dl
 100c911:	jae    0x100c978
 100c913:	add    BYTE PTR [ebx-0x72ff9e8e],cl
 100c919:	jb     0x100c97c
 100c91b:	add    BYTE PTR [ebx-0x70ff9c8c],cl
 100c921:	jne    0x100c984
 100c923:	add    BYTE PTR [edi-0x74ff9b8b],cl
 100c929:	ja     0x100c995
 100c92b:	add    BYTE PTR [ebx-0x6cff9a87],dl
 100c931:	jp     0x100c99b
 100c933:	add    BYTE PTR [ecx-0x70ff9482],bl
 100c939:	jge    0x100c9ac
 100c93b:	add    BYTE PTR [esi+edx*4+0x54],cl
 100c93f:	add    BYTE PTR [eax-0x54],bl
 100c942:	pop    edi
 100c943:	add    BYTE PTR [ecx-0x68ff917f],bl
 100c949:	xor    BYTE PTR [ebx+0x0],0x9c
 100c94d:	test   BYTE PTR [edx+0x0],dh
 100c950:	sahf   
 100c951:	mov    BYTE PTR [esi+0x0],dh
 100c954:	cwde   
 100c955:	mov    DWORD PTR [edi+0x0],edi
 100c958:	mov    ds:0xa1007587,al
 100c95d:	mov    BYTE PTR [esi+0x0],dh
 100c960:	mov    ds:0xa4007889,al
 100c965:	mov    WORD PTR [edx+0x0],?
 100c968:	mov    al,ds:0xa4007d8b
 100c96d:	lea    edi,[eax+eax*1-0x55]
 100c971:	(bad)  
 100c972:	jnp    0x100c974
 100c974:	mov    ah,0x94
 100c976:	jle    0x100c978
 100c978:	and    DWORD PTR [ebp-0x7d],esp
 100c97b:	add    BYTE PTR ds:0x3e008260,ch
 100c981:	jo     0x100c90a
 100c983:	add    BYTE PTR [ebx+esi*2],ch
 100c986:	call   0x300:0x92723700
 100c98d:	ja     0x100c943
 100c98f:	add    BYTE PTR [edx],al
 100c991:	jns    0x100c948
 100c993:	add    BYTE PTR [edi+0x6f],al
 100c996:	mov    al,BYTE PTR [eax]
 100c998:	pop    esi
 100c999:	je     0x100c923
 100c99b:	add    BYTE PTR [edi+0x7d],ch
 100c99e:	mov    al,BYTE PTR [eax]
 100c9a0:	outs   dx,BYTE PTR ds:[esi]
 100c9a1:	jle    0x100c92f
 100c9a3:	add    BYTE PTR [edx+0x79],dh
 100c9a6:	add    DWORD PTR [eax],0x78
 100c9a9:	js     0x100c92d
 100c9ab:	add    BYTE PTR [ebx+0x7d],dh
 100c9ae:	mov    WORD PTR [eax],es
 100c9b0:	mov    bh,BYTE PTR [esi-0x7d]
 100c9b3:	add    BYTE PTR [eax],al
 100c9b5:	add    BYTE PTR [eax],al
 100c9b7:	add    BYTE PTR ds:0x3400bd91,bl
 100c9bd:	xchg   ebp,eax
 100c9be:	mov    esp,0x9d907300
 100c9c3:	add    BYTE PTR [edx-0x7f],al
 100c9c6:	mov    al,ds:0xaa8d4f00
 100c9cb:	add    BYTE PTR [ebx-0x68],dl
 100c9ce:	mov    ch,0x0
 100c9d0:	pop    ebp
 100c9d1:	popf   
 100c9d2:	mov    bh,0x0
 100c9d4:	push   edx
 100c9d5:	call   0xb8:0x9b5400b8
 100c9dc:	push   esi
 100c9dd:	pushf  
 100c9de:	mov    ecx,0xab996800
 100c9e3:	add    BYTE PTR [ebx-0x5d],dh
 100c9e6:	mov    dh,0x0
 100c9e8:	add    al,0x85
 100c9ea:	leave  
 100c9eb:	add    BYTE PTR [esi],dl
 100c9ed:	xchg   edi,eax
 100c9ee:	int3   
 100c9ef:	add    BYTE PTR [ecx],al
 100c9f1:	mov    dl,bl
 100c9f3:	add    BYTE PTR [ecx],al
 100c9f5:	mov    ebx,ss
 100c9f7:	add    BYTE PTR [esi],al
 100c9f9:	(bad)  
 100c9fa:	rol    BYTE PTR [eax],1
 100c9fc:	add    DWORD PTR [edx-0x6effff2c],ecx
 100ca02:	fild   DWORD PTR [eax]
 100ca04:	add    BYTE PTR [ecx-0x68d3ff24],dl
 100ca0a:	les    eax,FWORD PTR [eax]
 100ca0c:	cs cdq 
 100ca0e:	rol    DWORD PTR [eax],0x39
 100ca11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100ca12:	mov    BYTE PTR [eax],0x0
 100ca15:	cwde   
 100ca16:	jecxz  0x100ca18
 100ca18:	add    BYTE PTR [ecx-0x60ffff1b],bl
 100ca1e:	out    0x0,al
 100ca20:	add    BYTE PTR [ebx-0x54d2ff19],ah
 100ca26:	loopne 0x100ca28
 100ca28:	xor    dh,BYTE PTR [ecx-0x45cfff1e]
 100ca2e:	in     al,dx
 100ca2f:	add    BYTE PTR [edx+edi*4],dh
 100ca32:	in     eax,dx
 100ca33:	add    BYTE PTR ds:0x2a00e8bb,bh
 100ca39:	mov    edx,0xaa6e00f0
 100ca3e:	rol    BYTE PTR [eax],0x69
 100ca41:	stos   DWORD PTR es:[edi],eax
 100ca42:	mov    BYTE PTR [eax],0x69
 100ca45:	lods   al,BYTE PTR ds:[esi]
 100ca46:	mov    DWORD PTR [eax],0xedc03d
 100ca4c:	push   edi
 100ca4d:	(bad)  
 100ca4e:	in     eax,dx
 100ca4f:	add    BYTE PTR [edx+ecx*8-0x12],dl
 100ca53:	add    BYTE PTR [esi-0x34],dl
 100ca56:	out    dx,al
 100ca57:	add    BYTE PTR [eax-0x34],bl
 100ca5a:	out    dx,al
 100ca5b:	add    BYTE PTR [ecx+ecx*8-0xf],cl
 100ca5f:	add    BYTE PTR [ecx-0x33],dl
 100ca62:	hlt    
 100ca63:	add    BYTE PTR [eax-0x34],bl
 100ca66:	lock add BYTE PTR [esi-0x40],bh
 100ca6a:	in     eax,0x0
 100ca6c:	jo     0x100ca37
 100ca6e:	loopne 0x100ca70
 100ca70:	jnp    0x100ca34
 100ca72:	jmp    0x6c00:0xedd46e00
 100ca79:	aad    0xf2
 100ca7b:	add    BYTE PTR [eax-0x28],dh
 100ca7e:	icebp  
 100ca7f:	add    BYTE PTR [edx-0x23],bh
 100ca82:	repnz add BYTE PTR [ebp-0x24],bh
 100ca86:	test   BYTE PTR [eax],0x50
 100ca89:	cmc    
 100ca8a:	inc    DWORD PTR [eax]
 100ca8c:	jp     0x100ca70
 100ca8e:	sti    
 100ca8f:	add    BYTE PTR [esp+eax*4-0x797aff7c],cl
 100ca96:	mov    es,WORD PTR [eax]
 100ca98:	xchg   edx,eax
 100ca99:	mov    al,BYTE PTR [esi-0x7d736400]
 100ca9f:	add    BYTE PTR [eax-0x73ff7474],dl
 100caa5:	nop
 100caa6:	xchg   edi,eax
 100caa7:	add    BYTE PTR [eax-0x59ff686d],bl
 100caad:	xchg   ebx,eax
 100caae:	xchg   BYTE PTR [eax],al
 100cab0:	test   eax,0xac008192
 100cab5:	xchg   ebx,eax
 100cab6:	add    BYTE PTR [eax],0xaf
 100cab9:	xchg   esi,eax
 100caba:	add    DWORD PTR [eax],0xffffffab
 100cabd:	xchg   esp,eax
 100cabe:	test   DWORD PTR [eax],eax
 100cac0:	scas   al,BYTE PTR es:[edi]
 100cac1:	xchg   esi,eax
 100cac2:	test   BYTE PTR [eax],al
 100cac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100cac5:	xchg   esp,eax
 100cac6:	mov    BYTE PTR [eax],al
 100cac8:	test   al,0x94
 100caca:	mov    BYTE PTR [eax],al
 100cacc:	mov    al,0x96
 100cace:	add    DWORD PTR [eax],0xffffffb5
 100cad1:	call   0x89:0x99b00086
 100cad8:	mov    bl,0x9c
 100cada:	mov    al,BYTE PTR [eax]
 100cadc:	mov    cl,0x9d
 100cade:	lea    eax,[eax]
 100cae0:	mov    ch,0x9e
 100cae2:	mov    WORD PTR [eax],es
 100cae4:	mov    dh,0xa0
 100cae6:	pop    DWORD PTR [eax]
 100cae8:	mov    esp,0xaa008ba1
 100caed:	mov    ds:0xa0b3009b,al
 100caf2:	xchg   edx,eax
 100caf3:	add    BYTE PTR [edi-0x4dff6f5f],dh
 100caf9:	mov    eax,ds:0xa1b80095
 100cafe:	xchg   ecx,eax
 100caff:	add    BYTE PTR [ecx-0x45ff6c5c],bh
 100cb05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100cb06:	xchg   esp,eax
 100cb07:	add    BYTE PTR [ebp-0x41ff6b5c],bh
 100cb0d:	test   eax,0xa080009a
 100cb12:	mov    eax,ds:0xafa59a00
 100cb17:	add    dl,al
 100cb19:	lods   al,BYTE PTR ds:[esi]
 100cb1a:	fwait
 100cb1b:	add    ah,al
 100cb1d:	scas   al,BYTE PTR es:[edi]
 100cb1e:	mov    al,ds:0xa1b0c500
 100cb23:	add    cl,cl
 100cb25:	mov    ch,0xa6
 100cb27:	add    dh,al
 100cb29:	mov    edx,0xbaca00ae
 100cb2e:	scas   al,BYTE PTR es:[edi]
 100cb2f:	add    ah,cl
 100cb31:	mov    ebp,0xbbc000b1
 100cb36:	mov    ebx,0xb3c0ce00
 100cb3b:	add    bl,dl
 100cb3d:	shl    DWORD PTR [ebx-0x453b2f00],0x0
 100cb44:	fcmovnb st,st(4)
 100cb46:	mov    eax,0xbdc8d700
 100cb4b:	add    dh,ch
 100cb4d:	(bad)  
 100cb4e:	mov    bl,0x0
 100cb50:	out    dx,eax
 100cb51:	int3   
 100cb52:	mov    ebx,0xcebd8a00
 100cb57:	add    BYTE PTR [edi-0x66ff2541],dl
 100cb5d:	ret    
 100cb5e:	fld    DWORD PTR [eax]
 100cb60:	lahf   
 100cb61:	(bad)  
 100cb62:	loope  0x100cb64
 100cb64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100cb65:	fsubr  st(5),st
 100cb67:	add    BYTE PTR [edi-0x76ff101f],dl
 100cb6d:	jecxz  0x100cb65
 100cb6f:	add    BYTE PTR [ecx-0x61ff091c],dl
 100cb75:	jmp    0xe1a8cc70
 100cb7a:	out    0x0,eax
 100cb7c:	stos   DWORD PTR es:[edi],eax
 100cb7d:	in     eax,0xec
 100cb7f:	add    BYTE PTR [eax-0x55ff0915],ah
 100cb85:	lock clc 
 100cb87:	add    BYTE PTR [ebx-0x45ff050c],dh
 100cb8d:	idiv   esp
 100cb8f:	add    BYTE PTR [edx-0x43ff0208],bh
 100cb95:	(bad)  
 100cb96:	inc    DWORD PTR [eax]
 100cb98:	ret    0xcbc6
 100cb9b:	add    ah,dl
 100cb9d:	enter  0xc0,0xd9
 100cba1:	int    0xc2
 100cba3:	add    bl,bl
 100cba5:	rol    edi,1
 100cba7:	add    dh,bl
 100cba9:	ror    dl,cl
 100cbab:	add    cl,dl
 100cbad:	rcl    ah,cl
 100cbaf:	add    dh,bl
 100cbb1:	fcom   st(0)
 100cbb3:	add    ah,dl
 100cbb5:	aad    0xd9
 100cbb7:	add    bh,dl
 100cbb9:	fcmovu st,st(7)
 100cbbb:	add    dl,dh
 100cbbd:	rol    ebp,cl
 100cbbf:	add    bl,bh
 100cbc1:	(bad)  
 100cbc3:	add    bh,ah
 100cbc5:	(bad)  
 100cbc7:	add    cl,ch
 100cbc9:	loope  0x100cba4
 100cbcb:	add    dl,bh
 100cbcd:	loope  0x100cba0
 100cbcf:	add    al,dh
 100cbd1:	loop   0x100cbac
 100cbd3:	add    bh,dh
 100cbd5:	jecxz  0x100cbb1
 100cbd7:	add    bh,dh
 100cbd9:	in     al,0xdb
 100cbdb:	add    bh,dh
 100cbdd:	in     al,0xdc
 100cbdf:	add    dl,al
 100cbe1:	(bad)  
 100cbe2:	inc    DWORD PTR [eax]
 100cbe4:	int3   
 100cbe5:	(bad)  
 100cbe6:	inc    DWORD PTR [eax]
 100cbe8:	sar    edi,cl
 100cbea:	inc    DWORD PTR [eax]
 100cbec:	in     al,dx
 100cbed:	out    0xe2,al
 100cbef:	add    bh,ch
 100cbf1:	jmp    0x100cbdb
 100cbf3:	add    dl,dh
 100cbf5:	out    0xe1,eax
 100cbf7:	add    cl,dh
 100cbf9:	in     eax,dx
 100cbfa:	jmp    0xf800:0xedf1fa00
 100cc01:	cmc    
 100cc02:	repnz add bl,bh
 100cc05:	stc    
 100cc06:	test   DWORD PTR [eax],0xfefefe
 100cc0c:	add    BYTE PTR [eax],al
 100cc0e:	add    BYTE PTR [eax],al
 100cc10:	(bad)  
 100cc11:	(bad)  
 100cc12:	inc    BYTE PTR [eax]
 100cc14:	add    BYTE PTR [eax],al
 100cc16:	add    BYTE PTR [eax],al
 100cc18:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 in eax,0x62
 100cc26:	add    dh,BYTE PTR [edx]
 100cc28:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 das 
 100cc32:	sub    esp,DWORD PTR [edi+0x67]
 100cc35:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100cc43:	addr16 mov edi,0x33057d85
 100cc49:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 inc ecx
 100cc51:	sub    ecx,esi
 100cc53:	mov    cl,0x67
 100cc55:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100cc63:	addr16 bound eax,QWORD PTR [di+0x368]
 100cc69:	mov    ds:0x67676767,eax
 100cc6e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
 100cc70:	sub    esi,eax
 100cc72:	out    0xb7,al
 100cc74:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100cc82:	addr16 addr16 addr16 bound eax,QWORD PTR [di+0x47d]
 100cc8a:	lahf   
 100cc8b:	addr16 addr16 addr16 dec ebx
 100cc8f:	sub    esi,ecx
 100cc91:	out    0xb7,al
 100cc93:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100cca1:	addr16 addr16 addr16 addr16 addr16 bound eax,QWORD PTR [di+0x1b7d]
 100ccab:	cmp    WORD PTR [bp+di],bp
 100ccaf:	icebp  
 100ccb0:	out    0xb7,al
 100ccb2:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100ccc0:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 bound eax,QWORD PTR [di+0x1e7c]
 100cccc:	inc    esp
 100cccd:	sub    esi,ecx
 100cccf:	out    0xb7,al
 100ccd1:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec ecx
 100ccda:	adc    ah,BYTE PTR [edi+0x49]
 100ccdd:	adc    ah,BYTE PTR [edi+0x49]
 100cce0:	adc    ah,BYTE PTR [edi+0x49]
 100cce3:	adc    ah,BYTE PTR [edi+0x67]
 100cce6:	addr16 addr16 bound eax,QWORD PTR [di+0x2b3e]
 100cced:	stc    
 100ccee:	out    0xb7,al
 100ccf0:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec edx
 100ccfa:	dec    ecx
 100ccfb:	addr16 dec edx
 100ccfd:	dec    ecx
 100ccfe:	addr16 dec edx
 100cd00:	dec    ecx
 100cd01:	addr16 dec edx
 100cd03:	dec    ecx
 100cd04:	addr16 addr16 addr16 addr16 addr16 addr16 ds sub edi,ebx
 100cd0d:	out    0xb7,al
 100cd0f:	addr16 addr16 addr16 addr16 addr16 sub DWORD PTR [si+0x6767],ebp
 100cd19:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100cd27:	addr16 addr16 ds sub edi,esp
 100cd2c:	out    0xb7,al
 100cd2e:	pop    edx
 100cd2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100cd30:	addr16 addr16 addr16 sub DWORD PTR [di-0x47c6],esp
 100cd38:	addr16 dec ecx
 100cd3a:	adc    ah,BYTE PTR [edi+0x67]
 100cd3d:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
 100cd49:	sub    edi,esp
 100cd4b:	out    0xb7,al
 100cd4d:	test   DWORD PTR [ecx+0x34],ebp
 100cd50:	mov    eax,ds:0x29ab6767
 100cd55:	jmp    0x4b67f720
 100cd5a:	dec    ecx
 100cd5b:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec esp
 100cd68:	sub    edi,esp
 100cd6a:	out    0xb7,al
 100cd6c:	bound  ebp,QWORD PTR [bp+si-0x42]
 100cd70:	inc    edi
 100cd71:	cmp    eax,0x38b12c37
 100cd76:	sub    DWORD PTR [edi+0x67],esp
 100cd79:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
 100cd84:	dec    esp
 100cd85:	aas    
 100cd86:	das    
 100cd87:	sub    edi,esp
 100cd89:	out    0xb7,al
 100cd8b:	addr16 addr16 addr16 mov eax,ds:0xc1ca
 100cd91:	mov    esp,0x672f52af
 100cd96:	addr16 addr16 addr16 dec ecx
 100cd9a:	adc    ah,BYTE PTR [edi+0x67]
 100cd9d:	addr16 addr16 addr16 addr16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
 100cda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100cda4:	push   ebx
 100cda5:	push   edx
 100cda6:	dec    ebp
 100cda7:	(bad)  
 100cda8:	out    0xb7,al
 100cdaa:	addr16 addr16 addr16 addr16 shl ah,0xf9
 100cdb1:	out    dx,eax
 100cdb2:	jmp    0x68680809
 100cdb7:	addr16 addr16 dec edx
 100cdba:	dec    ecx
 100cdbb:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 mov ecx,0xc9c6e4e4
 100cdc7:	push   ebp
 100cdc8:	inc    esi
 100cdc9:	(bad)
 100cdd1:	stc    
 100cdd2:	int    0x4e
 100cdd4:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100cde2:	mov    al,0x67
 100cde4:	addr16 lds ebp,FWORD PTR [bx+di+0x674d]
 100cdea:	addr16 addr16 addr16 addr16 mov dh,0xf8
 100cdf0:	cld    
 100cdf1:	int    0x4e
 100cdf3:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100ce01:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
 100ce03:	addr16 addr16 addr16 in al,0xbd
 100ce08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100ce09:	addr16 addr16 addr16 addr16 addr16 dec ebp
 100ce0f:	cld    
 100ce10:	retf   
 100ce11:	dec    esi
 100ce12:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100ce20:	(bad)
 100ce29:	addr16 addr16 addr16 addr16 dec ebp
 100ce2e:	mov    cl,0x4e
 100ce30:	dec    esi
 100ce31:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100ce3f:	addr16 addr16 addr16 addr16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
 100ce45:	mov    al,0xb2
 100ce47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100ce48:	addr16 addr16 dec esi
 100ce4b:	dec    esi
 100ce4c:	dec    esi
 100ce4d:	dec    esi
 100ce4e:	dec    esi
 100ce4f:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 imul esi,DWORD PTR [bx+di],0x31
 100ce5d:	xor    DWORD PTR [ecx],esi
 100ce5f:	and    esi,DWORD PTR [ecx]
 100ce61:	and    DWORD PTR [edi+0x67],esp
 100ce64:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100ce72:	addr16 addr16 addr16 addr16 addr16 addr16 imul esi,DWORD PTR [di+0x7e],0xffffff95
 100ce7d:	xchg   edi,eax
 100ce7e:	xchg   DWORD PTR [eax+0x5e],edi
 100ce81:	pop    ebp
 100ce82:	and    DWORD PTR [edi+0x67],esp
 100ce85:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100ce93:	addr16 addr16 addr16 addr16 addr16 addr16 pop esp
 100ce9a:	test   BYTE PTR [esi+0x7f8c999a],cl
 100cea0:	jp     0x100cf16
 100cea2:	and    DWORD PTR [edi+0x67],esp
 100cea5:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec ecx
 100ceb1:	adc    ah,BYTE PTR [edi+0x67]
 100ceb4:	addr16 addr16 addr16 addr16 addr16 pop esp
 100ceba:	test   DWORD PTR [edi+0x7f8c999a],ecx
 100cec0:	jp     0x100cf39
 100cec2:	and    DWORD PTR [edi+0x67],esp
 100cec5:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec edx
 100ced1:	dec    ecx
 100ced2:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 pop esp
 100ceda:	test   DWORD PTR [edi+0x7f8c999a],ecx
 100cee0:	jp     0x100cf59
 100cee2:	and    DWORD PTR [edi+0x67],esp
 100cee5:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100cef3:	addr16 addr16 addr16 addr16 addr16 addr16 pop esp
 100cefa:	test   DWORD PTR [edi+0x7f8c999a],ecx
 100cf00:	jnp    0x100cf7b
 100cf02:	and    DWORD PTR [edi+0x67],esp
 100cf05:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec ecx
 100cf11:	adc    ah,BYTE PTR [edi+0x67]
 100cf14:	addr16 addr16 addr16 addr16 imul eax,DWORD PTR [bp-0x656d],0xffffff99
 100cf1e:	mov    WORD PTR [edi+0x7b],?
 100cf21:	ja     0x100cf45
 100cf23:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec edx
 100cf31:	dec    ecx
 100cf32:	addr16 addr16 addr16 addr16 addr16 addr16 ins BYTE PTR es:[di],dx
 100cf3a:	xchg   BYTE PTR [eax-0x7f736666],dl
 100cf40:	jp     0x100cfb9
 100cf42:	and    eax,0x67676767
 100cf47:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100cf55:	addr16 addr16 addr16 ins DWORD PTR es:[di],dx
 100cf5a:	test   DWORD PTR [ebx+0x7f8c999a],edx
 100cf60:	jp     0x100cfd9
 100cf62:	and    eax,0x67676767
 100cf67:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec ecx
 100cf71:	adc    ah,BYTE PTR [edi+0x67]
 100cf74:	addr16 addr16 addr16 addr16 outs dx,BYTE PTR ds:[si]
 100cf7a:	test   DWORD PTR [edi+0x7f8c999a],ecx
 100cf80:	jp     0x100cff8
 100cf82:	pop    ecx
 100cf83:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec edx
 100cf91:	dec    ecx
 100cf92:	addr16 addr16 addr16 addr16 addr16 addr16 outs dx,BYTE PTR ds:[si]
 100cf9a:	xchg   ebx,eax
 100cf9b:	aad    0xdb
 100cf9d:	fstp   st(4)
 100cf9f:	fwait
 100cfa0:	lea    eax,[ebx+0x67676759]
 100cfa6:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100cfb4:	addr16 addr16 addr16 addr16 outs dx,BYTE PTR ds:[si]
 100cfba:	(bad)  
 100cfbc:	(bad)  
 100cfbe:	(bad)  
 100cfc0:	(bad)  
 100cfc2:	pop    ecx
 100cfc3:	addr16 addr16 addr16 addr16 dec ecx
 100cfc8:	adc    ah,BYTE PTR [edi+0x49]
 100cfcb:	adc    ah,BYTE PTR [edi+0x49]
 100cfce:	adc    ah,BYTE PTR [edi+0x49]
 100cfd1:	adc    ah,BYTE PTR [edi+0x67]
 100cfd4:	addr16 addr16 addr16 addr16 addr16 mov edx,edx
 100cfdb:	rcr    cl,cl
 100cfdd:	fstp   st(5)
 100cfdf:	fcom   st(3)
 100cfe1:	rcr    DWORD PTR [ecx+0x67],cl
 100cfe4:	addr16 addr16 addr16 dec edx
 100cfe8:	dec    ecx
 100cfe9:	addr16 dec edx
 100cfeb:	dec    ecx
 100cfec:	addr16 dec edx
 100cfee:	dec    ecx
 100cfef:	addr16 dec edx
 100cff1:	dec    ecx
 100cff2:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 mov DWORD PTR [bp+di-0x7576],ecx
 100cffe:	mov    cl,BYTE PTR [edx+0x6767728b]
 100d004:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100d012:	addr16 addr16 addr16 addr16 addr16 addr16 push eax
 100d01a:	call   FWORD PTR [edi+0xf7ff0ff]
 100d020:	(bad)  
 100d021:	clc    
 100d022:	ds ud0 edi,esp
 100d026:	sbb    al,0x1f
 100d028:	(bad)  
 100d029:	dec    BYTE PTR [eax]
 100d02b:	aas    
 100d02c:	(bad)  
 100d02d:	inc    DWORD PTR [eax]
 100d02f:	jg     0x100cfc3
 100d031:	dec    edi
 100d032:	cmp    bh,0x92
 100d035:	dec    edi
 100d036:	sar    ecx,0xff
 100d039:	inc    DWORD PTR [eax+0xff9ff0]
 100d03f:	pusha  
 100d040:	lahf   
 100d041:	dec    BYTE PTR [eax]
 100d043:	add    edi,edi
 100d045:	loopne 0x100d063
 100d047:	pop    es
 100d048:	lahf   
 100d049:	sar    BYTE PTR [edi+eax*1],0x9f
 100d04d:	sar    BYTE PTR [edi+ecx*1-0x1],0xdc
 100d052:	jl     0x100d073
 100d054:	(bad)  
 100d055:	fdivr  QWORD PTR [edi+edi*1-0x1]
 100d059:	cld    
 100d05a:	js     0x100d0db
 100d05c:	push   eax
 100d05e:	sar    edi,0xc0
 100d061:	aas    
 100d062:	(bad)  
 100d063:	inc    DWORD PTR [eax-0x7f0000e1]
 100d069:	pop    ds
 100d06a:	(bad)  
 100d06b:	aas    
 100d06c:	sbb    BYTE PTR [edi],0xff
 100d06f:	aas    
 100d070:	sbb    BYTE PTR [edi],0xff
 100d073:	inc    DWORD PTR [eax-0x7fc000e1]
 100d079:	pop    ds
 100d07a:	(bad)  
 100d07b:	aas    
 100d07c:	sbb    BYTE PTR [edi],0xff
 100d07f:	inc    DWORD PTR [eax-0x7fc000e1]
 100d085:	pop    ds
 100d086:	(bad)  
 100d087:	aas    
 100d088:	sbb    BYTE PTR [edi],0xff
 100d08b:	inc    DWORD PTR [eax-0x7fc0b6e2]
 100d091:	push   ds
 100d092:	dec    ecx
 100d093:	aas    
 100d094:	sar    BYTE PTR [edi],0xff
 100d097:	jmp    FWORD PTR [eax]
 100d099:	add    BYTE PTR [eax],al
 100d09b:	add    BYTE PTR [eax],ah
 100d09d:	add    BYTE PTR [eax],al
 100d09f:	add    BYTE PTR [eax+0x0],al
 100d0a2:	add    BYTE PTR [eax],al
 100d0a4:	add    DWORD PTR [eax],eax
 100d0a6:	and    BYTE PTR [eax],al
 100d0a8:	add    BYTE PTR [eax],al
 100d0aa:	add    BYTE PTR [eax],al
 100d0ac:	adc    BYTE PTR [eax],0x0
	...
 100d0ef:	add    cl,dl
 100d0f1:	rcl    ah,cl
 100d0f3:	jmp    FWORD PTR [esi+0x7e]
 100d0f6:	mov    edi,?
 100d0f8:	sbb    esp,DWORD PTR ds:0x6363ff2f
 100d0fe:	push   0xff
	...
 100d123:	add    BYTE PTR [esi+0x63],bh
 100d126:	push   eax
 100d127:	push   DWORD PTR [ebp+0x59]
 100d12a:	inc    esp
 100d12b:	inc    DWORD PTR [eax]
	...
 100d16d:	add    BYTE PTR [eax],al
 100d16f:	add    BYTE PTR [edx+0x30ffafa5],bl
 100d175:	mov    edx,0x992effec
 100d17a:	sar    edi,0x18
 100d17d:	sub    eax,0x6e74ff3b
 100d182:	jno    0x100d183
	...
 100d1a0:	mov    esi,DWORD PTR [ebx+eiz*2-0x1]
 100d1a4:	jne    0x100d1ff
 100d1a6:	inc    esp
 100d1a7:	(bad)  
 100d1a8:	out    dx,eax
 100d1a9:	int3   
 100d1aa:	mov    ebx,0x8d9db1ff
 100d1af:	inc    DWORD PTR [eax]
	...
 100d1f1:	add    BYTE PTR [eax],al
 100d1f3:	add    BYTE PTR [esi+0x7e],ch
 100d1f6:	mov    edi,?
 100d1f8:	xor    BYTE PTR [edx-0x6ee20014],bh
 100d1fe:	mov    ebp,0x372812ff
 100d203:	dec    DWORD PTR [eax+edx*4+0xff97]
	...
 100d21a:	add    BYTE PTR [eax],al
 100d21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100d21d:	xchg   ebx,eax
 100d21e:	xchg   bh,bh
 100d220:	jne    0x100d27b
 100d222:	inc    esp
 100d223:	push   edi
 100d225:	in     al,0xdb
 100d227:	(bad)  
 100d228:	(bad)  
 100d22a:	sar    bh,1
 100d22c:	mov    bh,0xa1
 100d22e:	nop
 100d22f:	inc    DWORD PTR [eax]
	...
 100d275:	add    BYTE PTR [eax],al
 100d277:	add    BYTE PTR [esi+0x7e],ch
 100d27a:	mov    edi,?
 100d27c:	xor    BYTE PTR [edx-0x66d10014],bh
 100d282:	sar    edi,0x19
 100d285:	sub    BYTE PTR [esi],dh
 100d287:	inc    DWORD PTR [ebp+0xff8e86]
	...
 100d295:	add    BYTE PTR [eax],al
 100d297:	add    BYTE PTR [ecx+0x75ff6e81],bl
 100d29d:	pop    ecx
 100d29e:	inc    esp
 100d29f:	push   edi
 100d2a1:	in     al,0xdc
 100d2a3:	(bad)  
 100d2a4:	(bad)  
 100d2a6:	sar    bh,1
 100d2a8:	mov    bh,0xa1
 100d2aa:	nop
 100d2ab:	inc    DWORD PTR [eax]
	...
 100d2f9:	add    BYTE PTR [eax],al
 100d2fb:	add    BYTE PTR [esi+0x7e],ch
 100d2fe:	mov    edi,?
 100d300:	xor    BYTE PTR [edx-0x66d10014],bh
 100d306:	sar    edi,0x1f
 100d309:	inc    esp
 100d30a:	pop    ecx
 100d30b:	dec    DWORD PTR [edx+0xff837e]
 100d311:	add    BYTE PTR [eax],al
 100d313:	add    BYTE PTR [esp+ebp*2+0x5975ff5a],al
 100d31a:	inc    esp
 100d31b:	push   edi
 100d31d:	in     al,0xdc
 100d31f:	(bad)  
 100d320:	(bad)  
 100d322:	sar    bh,1
 100d324:	mov    bh,0xa1
 100d326:	nop
 100d327:	inc    DWORD PTR [eax]
	...
 100d37d:	add    BYTE PTR [eax],al
 100d37f:	add    BYTE PTR [esi+0x7e],ch
 100d382:	mov    edi,?
 100d384:	xor    BYTE PTR [edx-0x68d30014],bh
 100d38a:	(bad)  
 100d38b:	jmp    FWORD PTR [edx]
 100d38d:	dec    eax
 100d38e:	pop    ecx
 100d38f:	dec    DWORD PTR [ebx+0x75ff6a77]
 100d395:	pop    ecx
 100d396:	inc    esp
 100d397:	push   edi
 100d399:	in     al,0xdc
 100d39b:	(bad)  
 100d39c:	(bad)  
 100d39e:	sar    bh,1
 100d3a0:	mov    bh,0xa1
 100d3a2:	nop
 100d3a3:	inc    DWORD PTR [eax]
	...
 100d3c1:	add    BYTE PTR [eax],al
 100d3c3:	add    BYTE PTR [esi+edx*4+0x54],cl
 100d3c7:	push   DWORD PTR [edi+eiz*2]
 100d3ca:	cmp    al,0xff
 100d3cc:	add    BYTE PTR [eax],al
 100d3ce:	add    BYTE PTR [eax],al
 100d3d0:	dec    esp
 100d3d1:	xchg   esi,eax
 100d3d2:	push   esp
 100d3d3:	push   DWORD PTR [edi+eiz*2]
 100d3d6:	cmp    al,0xff
 100d3d8:	add    BYTE PTR [eax],al
 100d3da:	add    BYTE PTR [eax],al
 100d3dc:	dec    esp
 100d3dd:	xchg   esi,eax
 100d3de:	push   esp
 100d3df:	push   DWORD PTR [edi+eiz*2]
 100d3e2:	cmp    al,0xff
 100d3e4:	add    BYTE PTR [eax],al
 100d3e6:	add    BYTE PTR [eax],al
 100d3e8:	dec    esp
 100d3e9:	xchg   esi,eax
 100d3ea:	push   esp
 100d3eb:	push   DWORD PTR [edi+eiz*2]
 100d3ee:	cmp    al,0xff
	...
 100d404:	outs   dx,BYTE PTR ds:[esi]
 100d405:	jle    0x100d393
 100d407:	push   DWORD PTR [eax]
 100d409:	mov    edx,0x7386ffec
 100d40e:	push   DWORD PTR gs:[ebp+0x59]
 100d412:	inc    esp
 100d413:	(bad)  
 100d414:	cli    
 100d415:	icebp  
 100d416:	in     eax,dx
 100d417:	(bad)  
 100d418:	(bad)  
 100d41a:	sar    bh,1
 100d41c:	mov    bh,0xa1
 100d41e:	nop
 100d41f:	inc    DWORD PTR [eax]
	...
 100d441:	add    BYTE PTR [eax],al
 100d443:	add    BYTE PTR [eax-0x54],bl
 100d446:	pop    edi
 100d447:	dec    DWORD PTR [esi+edx*4+0x54]
 100d44b:	inc    DWORD PTR [eax]
 100d44d:	add    BYTE PTR [eax],al
 100d44f:	add    BYTE PTR [eax-0x54],bl
 100d452:	pop    edi
 100d453:	dec    DWORD PTR [esi+edx*4+0x54]
 100d457:	inc    DWORD PTR [eax]
 100d459:	add    BYTE PTR [eax],al
 100d45b:	add    BYTE PTR [eax-0x54],bl
 100d45e:	pop    edi
 100d45f:	dec    DWORD PTR [esi+edx*4+0x54]
 100d463:	inc    DWORD PTR [eax]
 100d465:	add    BYTE PTR [eax],al
 100d467:	add    BYTE PTR [eax-0x54],bl
 100d46a:	pop    edi
 100d46b:	dec    DWORD PTR [esi+edx*4+0x54]
 100d46f:	inc    DWORD PTR [eax]
	...
 100d485:	add    BYTE PTR [eax],al
 100d487:	add    BYTE PTR [esi+0x75ff6573],al
 100d48d:	pop    ecx
 100d48e:	inc    esp
 100d48f:	(bad)  
 100d490:	sti    
 100d491:	stc    
 100d492:	idiv   edi
 100d494:	(bad)  
 100d496:	sar    bh,1
 100d498:	mov    bh,0xa1
 100d49a:	nop
 100d49b:	inc    DWORD PTR [eax]
	...
 100d4b1:	add    BYTE PTR [eax],al
 100d4b3:	add    BYTE PTR [edx+0x55],dh
 100d4b6:	inc    eax
 100d4b7:	jmp    FWORD PTR [eax+0xff8894]
	...
 100d501:	add    BYTE PTR [eax],al
 100d503:	add    BYTE PTR [esi+0x75ff6573],al
 100d509:	pop    ecx
 100d50a:	inc    esp
 100d50b:	(bad)  
 100d50c:	(bad)  
 100d50d:	(bad)  
 100d50e:	(bad)  
 100d50f:	(bad)  
 100d510:	(bad)  
 100d512:	sar    bh,1
 100d514:	mov    bh,0xa1
 100d516:	nop
 100d517:	(bad)  
 100d518:	ds jo  0x100d4a2
 100d51b:	call   FWORD PTR [eax+0xff9793]
	...
 100d52d:	add    BYTE PTR [eax],al
 100d52f:	add    BYTE PTR [edx+0x55],dh
 100d532:	inc    eax
 100d533:	jmp    DWORD PTR [esi-0x7600796d]
 100d539:	outs   dx,BYTE PTR ds:[esi]
 100d53a:	pop    ebx
 100d53b:	push   DWORD PTR [edx+0xff95a1]
 100d541:	add    BYTE PTR [eax],al
 100d543:	add    BYTE PTR [esi+edx*4+0x54],cl
 100d547:	push   DWORD PTR [edi+eiz*2]
 100d54a:	cmp    al,0xff
	...
 100d580:	test   eax,0x75ff8192
 100d585:	pop    ecx
 100d586:	inc    esp
 100d587:	(bad)  
 100d588:	(bad)  
 100d589:	(bad)  
 100d58a:	(bad)  
 100d58b:	(bad)  
 100d58c:	(bad)  
 100d58e:	sar    bh,1
 100d590:	mov    bh,0xa1
 100d592:	nop
 100d593:	push   DWORD PTR [eax]
 100d595:	mov    edx,0x9534ffec
 100d59a:	mov    esp,0x707378ff
 100d59f:	call   FWORD PTR [esp+ecx*4+0xff82]
 100d5a6:	add    BYTE PTR [eax],al
 100d5a8:	add    BYTE PTR [eax],al
 100d5aa:	add    BYTE PTR [eax],al
 100d5ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100d5ad:	xchg   esp,eax
 100d5ae:	mov    bh,bh
 100d5b0:	jb     0x100d607
 100d5b2:	inc    eax
 100d5b3:	push   edx
 100d5b5:	rol    ebp,cl
 100d5b7:	dec    esp
 100d5b9:	mov    ebp,0x5572ffb1
 100d5be:	inc    eax
 100d5bf:	inc    DWORD PTR [eax]
 100d5c1:	add    BYTE PTR [eax],al
 100d5c3:	add    BYTE PTR [eax-0x54],bl
 100d5c6:	pop    edi
 100d5c7:	dec    DWORD PTR [esi+edx*4+0x54]
 100d5cb:	inc    DWORD PTR [eax]
	...
 100d5f9:	add    BYTE PTR [eax],al
 100d5fb:	add    BYTE PTR [edi+0x75ff7382],dl
 100d601:	pop    ecx
 100d602:	inc    esp
 100d603:	(bad)  
 100d604:	(bad)  
 100d605:	(bad)  
 100d606:	(bad)  
 100d607:	(bad)  
 100d608:	(bad)  
 100d60a:	sar    bh,1
 100d60c:	mov    bh,0xa1
 100d60e:	nop
 100d60f:	inc    DWORD PTR [eax]
 100d611:	add    BYTE PTR [eax],al
 100d613:	add    BYTE PTR [esi+0x7e],ch
 100d616:	mov    edi,?
 100d618:	jae    0x100d5aa
 100d61a:	popf   
 100d61b:	inc    DWORD PTR [eax-0x66005e60]
 100d621:	jle    0x100d68e
 100d623:	call   DWORD PTR [ebx-0x7e00a08c]
 100d629:	arpl   WORD PTR [eax-0x1],dx
 100d62c:	jns    0x100d68b
 100d62e:	dec    ecx
 100d62f:	push   DWORD PTR [ecx-0x78007263]
 100d635:	imul   edx,DWORD PTR [esi-0x1],0x72
 100d639:	push   ebp
 100d63a:	inc    eax
 100d63b:	inc    DWORD PTR [eax]
	...
 100d669:	add    BYTE PTR [eax],al
 100d66b:	add    BYTE PTR [ecx-0x68007e6e],ch
 100d671:	xor    BYTE PTR [ebx-0x1],0x8b
 100d675:	jb     0x100d6d8
 100d677:	(bad)  
 100d678:	jle    0x100d6dd
 100d67a:	push   eax
 100d67b:	push   DWORD PTR [ebp+0x59]
 100d67e:	inc    esp
 100d67f:	(bad)  
 100d680:	(bad)  
 100d681:	(bad)  
 100d682:	(bad)  
 100d683:	(bad)  
 100d684:	(bad)  
 100d686:	sar    bh,1
 100d688:	mov    bh,0xa1
 100d68a:	nop
 100d68b:	inc    DWORD PTR [eax]
	...
 100d695:	add    BYTE PTR [eax],al
 100d697:	add    BYTE PTR [esp+ecx*4-0x3b2e007e],bl
 100d69e:	mov    edx,0xa0aec4ff
 100d6a3:	(bad)  
 100d6a4:	mov    ebp,0xb0ff94a4
 100d6a9:	cdq    
 100d6aa:	mov    edi,edi
 100d6ac:	mov    ds:0x7eff7889,al
 100d6b1:	arpl   WORD PTR [eax-0x1],dx
	...
 100d6c4:	dec    esp
 100d6c5:	xchg   esi,eax
 100d6c6:	push   esp
 100d6c7:	push   DWORD PTR [edi+eiz*2]
 100d6ca:	cmp    al,0xff
	...
 100d6e8:	test   eax,0xa9ff8192
 100d6ed:	xchg   edx,eax
 100d6ee:	cmp    edi,0xff7a8ca4
 100d6f4:	mov    ds:0x9cff7889,al
 100d6f9:	test   BYTE PTR [edx-0x1],dh
 100d6fc:	(bad)  
 100d6fd:	mov    edx,0xd8deffae
 100d702:	sar    bh,1
 100d704:	mov    bh,0xa1
 100d706:	nop
 100d707:	inc    DWORD PTR [eax]
	...
 100d715:	add    BYTE PTR [eax],al
 100d717:	add    dl,al
 100d719:	lods   al,BYTE PTR ds:[esi]
 100d71a:	fwait
 100d71b:	(bad)  
 100d71c:	(bad)  
 100d71e:	retf   0xfaff
 100d721:	icebp  
 100d722:	in     eax,dx
 100d723:	push   edi
 100d725:	jecxz  0x100d701
 100d727:	push   edx
 100d729:	rol    ebp,cl
 100d72b:	jmp    DWORD PTR [edx-0x76008777]
 100d731:	outs   dx,BYTE PTR ds:[esi]
 100d732:	pop    ebx
 100d733:	inc    DWORD PTR [eax]
	...
 100d741:	add    BYTE PTR [eax],al
 100d743:	add    BYTE PTR [eax-0x54],bl
 100d746:	pop    edi
 100d747:	dec    DWORD PTR [esi+edx*4+0x54]
 100d74b:	inc    DWORD PTR [eax]
	...
 100d765:	add    BYTE PTR [eax],al
 100d767:	add    BYTE PTR [eax-0x21006e5f],bh
 100d76d:	ror    dl,cl
 100d76f:	(bad)  
 100d770:	(bad)  
 100d772:	retf   0xccff
 100d775:	mov    ebp,0xc1d3ffb1
 100d77a:	mov    bl,0xff
 100d77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100d77d:	lea    edi,[edi+edi*8-0x6d]
 100d781:	jp     0x100d7eb
 100d783:	inc    DWORD PTR [eax]
	...
 100d795:	add    BYTE PTR [eax],al
 100d797:	add    dl,cl
 100d799:	mov    edx,0xdfe7ffae
 100d79e:	(bad)  
 100d7a0:	(bad)  
 100d7a1:	(bad)  
 100d7a2:	(bad)  
 100d7a3:	(bad)  
 100d7a4:	cli    
 100d7a5:	icebp  
 100d7a6:	in     eax,dx
 100d7a7:	(bad)  
 100d7a8:	out    dx,al
 100d7a9:	(bad)  
 100d7aa:	mov    bl,0xff
 100d7ac:	sahf   
 100d7ad:	mov    BYTE PTR [esi-0x1],dh
	...
 100d7e8:	mov    bl,0x9c
 100d7ea:	mov    bh,bh
	...
 100d7f8:	retf   0xaeba
 100d7fb:	jmp    FWORD PTR [ebx-0x63007a6c]
 100d801:	test   BYTE PTR [edx-0x1],dh
	...
 100d818:	mov    bl,0xa0
 100d81a:	xchg   edx,eax
 100d81b:	push   ecx
 100d81d:	in     eax,dx
 100d81e:	jmp    0xeeff:0xfefefeff
 100d825:	(bad)  
 100d826:	mov    bl,0xff
 100d828:	sahf   
 100d829:	mov    BYTE PTR [esi-0x1],dh
	...
 100d868:	test   eax,0xff8192
	...
 100d875:	add    BYTE PTR [eax],al
 100d877:	add    dh,bl
 100d879:	ror    dl,cl
 100d87b:	(bad)  
 100d87c:	mov    esi,0xa9ff9aa9
 100d881:	xchg   edx,eax
 100d882:	cmp    edi,0x0
	...
 100d898:	pushf  
 100d899:	test   BYTE PTR [edx-0x1],dh
 100d89c:	(bad)  
 100d89d:	(bad)  
 100d89e:	(bad)  
 100d89f:	(bad)  
 100d8a0:	fcmovnb st,st(4)
 100d8a2:	mov    eax,0x76889eff
 100d8a7:	inc    DWORD PTR [eax]
	...
 100d8f5:	add    BYTE PTR [eax],al
 100d8f7:	add    dl,cl
 100d8f9:	mov    edx,0xacc2ffae
 100d8fe:	fwait
 100d8ff:	jmp    FWORD PTR [ecx+0xff8192]
	...
 100d911:	add    BYTE PTR [eax],al
 100d913:	add    BYTE PTR [esp+eax*4-0x624e008e],bl
 100d91a:	(bad)  
 100d91b:	call   FWORD PTR [esi-0x61008978]
 100d921:	mov    BYTE PTR [esi-0x1],dh
	...
 100d970:	test   eax,0xb3ff8192
 100d975:	pushf  
 100d976:	mov    bh,bh
 100d978:	mov    ch,0x9e
 100d97a:	mov    edi,?
 100d97c:	test   eax,0xff8192
 100d981:	add    BYTE PTR [eax],al
 100d983:	add    BYTE PTR [eax],al
 100d985:	add    BYTE PTR [eax],al
 100d987:	add    BYTE PTR [esi-0x61008978],bl
 100d98d:	mov    BYTE PTR [esi-0x1],dh
 100d990:	sahf   
 100d991:	mov    BYTE PTR [esi-0x1],dh
 100d994:	sahf   
 100d995:	mov    BYTE PTR [esi-0x1],dh
 100d998:	sahf   
 100d999:	mov    BYTE PTR [esi-0x1],dh
	...
 100d9c8:	inc    edx
 100d9c9:	and    DWORD PTR [eax+0x775d40ff],0x775d40ff
 100d9d3:	inc    DWORD PTR [eax+0x5d]
 100d9d6:	ja     0x100d9d7
 100d9d8:	inc    eax
 100d9d9:	pop    ebp
 100d9da:	ja     0x100d9db
 100d9dc:	and    BYTE PTR [edi+0x7d],dl
 100d9df:	inc    DWORD PTR [eax+0x5d]
 100d9e2:	ja     0x100d9e3
 100d9e4:	daa    
 100d9e5:	dec    ebp
 100d9e6:	imul   edi,edi,0x0
	...
 100da41:	add    BYTE PTR [eax],al
 100da43:	add    BYTE PTR [edx-0x7f],al
 100da46:	mov    al,ds:0xcc9716ff
 100da4b:	(bad)  
 100da4c:	cmp    DWORD PTR [esi+eax*8-0x1f368f01],esp
 100da53:	jmp    FWORD PTR [esi-0x2c]
 100da56:	in     eax,dx
 100da57:	(bad)  
 100da58:	cmp    eax,0x6ffe8bb
 100da5d:	(bad)  
 100da5e:	sar    bh,1
 100da60:	add    bh,BYTE PTR [ecx-0x4b]
 100da63:	inc    DWORD PTR [ebx]
 100da65:	ja     0x100da1b
 100da67:	jmp    DWORD PTR [edi]
 100da69:	dec    ebp
 100da6a:	imul   edi,edi,0x0
	...
 100dac1:	add    BYTE PTR [eax],al
 100dac3:	add    BYTE PTR [edi],dh
 100dac5:	jb     0x100da59
 100dac7:	push   DWORD PTR [edx]
 100dac9:	mov    cl,0xe2
 100dacb:	call   DWORD PTR [edx+ecx*8-0x12]
 100dacf:	(bad)  
 100dad0:	jp     0x100daaf
 100dad2:	repnz push DWORD PTR [eax-0x28]
 100dad6:	icebp  
 100dad7:	(bad)  
 100dad8:	cmp    eax,0xffedc0
 100dadd:	cwde   
 100dade:	jecxz  0x100dadf
 100dae0:	add    BYTE PTR [ecx-0x7afb0025],dl
 100dae6:	leave  
 100dae7:	jmp    DWORD PTR [edi]
 100dae9:	dec    ebp
 100daea:	imul   edi,edi,0x0
	...
 100db1d:	add    BYTE PTR [eax],al
 100db1f:	add    BYTE PTR [esi+edx*4+0x54],cl
 100db23:	push   DWORD PTR [edi+eiz*2]
 100db26:	cmp    al,0xff
	...
 100db44:	aaa    
 100db45:	jb     0x100dad9
 100db47:	push   DWORD PTR [eax]
 100db49:	mov    edx,0xcc56ffec
 100db4e:	out    dx,al
 100db4f:	(bad)  
 100db50:	jp     0x100db2f
 100db52:	repnz push DWORD PTR [eax-0x28]
 100db56:	icebp  
 100db57:	(bad)  
 100db58:	cmp    eax,0xffedc0
 100db5d:	cwde   
 100db5e:	jecxz  0x100db5f
 100db60:	add    BYTE PTR [ecx-0x73fe0025],dl
 100db66:	sar    edi,cl
 100db68:	daa    
 100db69:	dec    ebp
 100db6a:	imul   edi,edi,0x0
	...
 100db9d:	add    BYTE PTR [eax],al
 100db9f:	add    BYTE PTR [eax-0x54],bl
 100dba2:	pop    edi
 100dba3:	dec    DWORD PTR [esi+edx*4+0x54]
 100dba7:	inc    DWORD PTR [eax]
	...
 100dbc1:	add    BYTE PTR [eax],al
 100dbc3:	add    BYTE PTR [edi],dh
 100dbc5:	jb     0x100db59
 100dbc7:	push   DWORD PTR [eax]
 100dbc9:	mov    edx,0xcc56ffec
 100dbce:	out    dx,al
 100dbcf:	(bad)  
 100dbd0:	jp     0x100dbaf
 100dbd2:	repnz push DWORD PTR [eax-0x28]
 100dbd6:	icebp  
 100dbd7:	(bad)  
 100dbd8:	cmp    eax,0xffedc0
 100dbdd:	cwde   
 100dbde:	jecxz  0x100dbdf
 100dbe0:	add    BYTE PTR [ecx-0x73fe0025],dl
 100dbe6:	sar    edi,cl
 100dbe8:	daa    
 100dbe9:	dec    ebp
 100dbea:	imul   edi,edi,0x0
	...
 100dc41:	add    BYTE PTR [eax],al
 100dc43:	add    BYTE PTR [edi],dh
 100dc45:	jb     0x100dbd9
 100dc47:	push   DWORD PTR [eax]
 100dc49:	mov    edx,0xcc56ffec
 100dc4e:	out    dx,al
 100dc4f:	(bad)  
 100dc50:	jp     0x100dc2f
 100dc52:	repnz push DWORD PTR [eax-0x28]
 100dc56:	icebp  
 100dc57:	(bad)  
 100dc58:	cmp    eax,0xffedc0
 100dc5d:	cwde   
 100dc5e:	jecxz  0x100dc5f
 100dc60:	add    BYTE PTR [ecx-0x75fe0024],dl
 100dc66:	aam    0xff
 100dc68:	daa    
 100dc69:	dec    ebp
 100dc6a:	imul   edi,edi,0x0
	...
 100dc9d:	add    BYTE PTR [eax],al
 100dc9f:	add    BYTE PTR [esi+edx*4+0x54],cl
 100dca3:	push   DWORD PTR [edi+eiz*2]
 100dca6:	cmp    al,0xff
	...
 100dcc4:	inc    edx
 100dcc5:	and    DWORD PTR [eax-0x1245cb01],0xf0cc58ff
 100dccf:	(bad)  
 100dcd0:	jp     0x100dcaf
 100dcd2:	repnz push DWORD PTR [eax-0x28]
 100dcd6:	icebp  
 100dcd7:	(bad)  
 100dcd8:	cmp    eax,0xffedc0
 100dcdd:	cwde   
 100dcde:	jecxz  0x100dcdf
 100dce0:	add    BYTE PTR [ecx-0x73fe0024],dl
 100dce6:	sar    edi,cl
 100dce8:	sub    DWORD PTR [esp+esi*2-0x1],edx
	...
 100dd20:	pop    eax
 100dd21:	lods   al,BYTE PTR ds:[esi]
 100dd22:	pop    edi
 100dd23:	dec    DWORD PTR [esi+edx*4+0x54]
 100dd27:	inc    DWORD PTR [eax]
	...
 100dd41:	add    BYTE PTR [eax],al
 100dd43:	add    BYTE PTR [edi-0x73],cl
 100dd46:	stos   BYTE PTR es:[edi],al
 100dd47:	push   DWORD PTR [edx+edi*4]
 100dd4a:	in     eax,dx
 100dd4b:	call   FWORD PTR [eax-0x34]
 100dd4e:	out    dx,al
 100dd4f:	(bad)  
 100dd50:	jp     0x100dd2f
 100dd52:	repnz push DWORD PTR [eax-0x28]
 100dd56:	icebp  
 100dd57:	(bad)  
 100dd58:	cmp    eax,0xffedc0
 100dd5d:	cdq    
 100dd5e:	in     eax,0xff
 100dd60:	add    BYTE PTR [ecx-0x73fe0025],dl
 100dd66:	sar    edi,cl
 100dd68:	sub    ebx,DWORD PTR [ebx+0x7b]
 100dd6b:	inc    DWORD PTR [eax]
	...
 100ddc1:	add    BYTE PTR [eax],al
 100ddc3:	add    BYTE PTR [ebx-0x68],dl
 100ddc6:	mov    ch,0xff
 100ddc8:	xor    BYTE PTR [edx-0x33a70014],bh
 100ddce:	lock (bad) 
 100ddd0:	jp     0x100ddaf
 100ddd2:	repnz push DWORD PTR [eax-0x28]
 100ddd6:	icebp  
 100ddd7:	(bad)  
 100ddd8:	cmp    eax,0xffedc0
 100dddd:	cwde   
 100ddde:	jecxz  0x100dddf
 100dde0:	add    BYTE PTR [ecx-0x73fe0025],dl
 100dde6:	sar    edi,cl
 100dde8:	sub    ebx,DWORD PTR [ebx+0x7b]
 100ddeb:	inc    DWORD PTR [eax]
	...
 100de1d:	add    BYTE PTR [eax],al
 100de1f:	add    BYTE PTR [esi+edx*4+0x54],cl
 100de23:	push   DWORD PTR [edi+eiz*2]
 100de26:	cmp    al,0xff
	...
 100de44:	pop    ebp
 100de45:	popf   
 100de46:	mov    bh,0xff
 100de48:	xor    BYTE PTR [edx-0x33a90014],bh
 100de4e:	out    dx,al
 100de4f:	(bad)  
 100de50:	jp     0x100de2f
 100de52:	repnz push DWORD PTR [eax-0x28]
 100de56:	icebp  
 100de57:	(bad)  
 100de58:	cmp    eax,0xffedc0
 100de5d:	cwde   
 100de5e:	jecxz  0x100de5f
 100de60:	add    BYTE PTR [ecx-0x75fe0025],dl
 100de66:	sar    edi,cl
 100de68:	sub    eax,0xff8260
	...
 100de9d:	add    BYTE PTR [eax],al
 100de9f:	add    BYTE PTR [eax-0x54],bl
 100dea2:	pop    edi
 100dea3:	dec    DWORD PTR [esi+edx*4+0x54]
 100dea7:	inc    DWORD PTR [eax]
	...
 100dec1:	add    BYTE PTR [eax],al
 100dec3:	add    BYTE PTR [ebp-0x63],bl
 100dec6:	mov    bh,0xff
 100dec8:	pop    eax
 100dec9:	int3   
 100deca:	lock dec DWORD PTR [ecx-0x5500091d]
 100ded1:	lock clc 
 100ded3:	(bad)  
 100ded4:	mov    edx,0xb3fffcf7
 100ded9:	hlt    
 100deda:	cli    
 100dedb:	(bad)  
 100dedc:	jge    0x100deba
 100dede:	idiv   bh
 100dee0:	push   edi
 100dee1:	(bad)  
 100dee2:	in     eax,dx
 100dee3:	jmp    FWORD PTR ds:0x2dffe0ab
 100dee9:	pusha  
 100deea:	cmp    bh,0x0
	...
 100df41:	add    BYTE PTR [eax],al
 100df43:	add    BYTE PTR [ebp-0x63],bl
 100df46:	mov    bh,0xff
 100df48:	mov    edx,0xbafffdf8
 100df4d:	clc    
 100df4e:	std    
 100df4f:	(bad)  
 100df50:	mov    edx,0xbafffdf8
 100df55:	clc    
 100df56:	std    
 100df57:	(bad)  
 100df58:	mov    edx,0xbafffdf8
 100df5d:	clc    
 100df5e:	std    
 100df5f:	(bad)  
 100df60:	mov    edx,0xbafffdf8
 100df65:	clc    
 100df66:	std    
 100df67:	jmp    FWORD PTR ds:0xff8260
	...
 100df79:	add    BYTE PTR [eax],al
 100df7b:	add    BYTE PTR [esi+edx*4+0x54],cl
 100df7f:	push   DWORD PTR [edi+eiz*2]
 100df82:	cmp    al,0xff
 100df84:	add    BYTE PTR [eax],al
 100df86:	add    BYTE PTR [eax],al
 100df88:	dec    esp
 100df89:	xchg   esi,eax
 100df8a:	push   esp
 100df8b:	push   DWORD PTR [edi+eiz*2]
 100df8e:	cmp    al,0xff
 100df90:	add    BYTE PTR [eax],al
 100df92:	add    BYTE PTR [eax],al
 100df94:	dec    esp
 100df95:	xchg   esi,eax
 100df96:	push   esp
 100df97:	push   DWORD PTR [edi+eiz*2]
 100df9a:	cmp    al,0xff
 100df9c:	add    BYTE PTR [eax],al
 100df9e:	add    BYTE PTR [eax],al
 100dfa0:	dec    esp
 100dfa1:	xchg   esi,eax
 100dfa2:	push   esp
 100dfa3:	push   DWORD PTR [edi+eiz*2]
 100dfa6:	cmp    al,0xff
	...
 100dfc4:	outs   dx,BYTE PTR ds:[esi]
 100dfc5:	stos   BYTE PTR es:[edi],al
 100dfc6:	sar    bh,0x9f
 100dfc9:	(bad)  
 100dfca:	loope  0x100dfcb
 100dfcc:	lahf   
 100dfcd:	(bad)  
 100dfce:	loope  0x100dfcf
 100dfd0:	stos   DWORD PTR es:[edi],eax
 100dfd1:	in     eax,0xec
 100dfd3:	(bad)  
 100dfd4:	mov    edx,0xbafffcf7
 100dfd9:	idiv   esp
 100dfdb:	jmp    FWORD PTR [eax-0x5a001820]
 100dfe1:	fsubr  st(5),st
 100dfe3:	jmp    DWORD PTR [ebp+0x2dffe5dc]
 100dfe9:	pusha  
 100dfea:	cmp    bh,0x0
	...
 100dff9:	add    BYTE PTR [eax],al
 100dffb:	add    BYTE PTR [eax-0x54],bl
 100dffe:	pop    edi
 100dfff:	dec    DWORD PTR [esi+edx*4+0x54]
 100e003:	inc    DWORD PTR [eax]
 100e005:	add    BYTE PTR [eax],al
 100e007:	add    BYTE PTR [eax-0x54],bl
 100e00a:	pop    edi
 100e00b:	dec    DWORD PTR [esi+edx*4+0x54]
 100e00f:	inc    DWORD PTR [eax]
 100e011:	add    BYTE PTR [eax],al
 100e013:	add    BYTE PTR [eax-0x54],bl
 100e016:	pop    edi
 100e017:	dec    DWORD PTR [esi+edx*4+0x54]
 100e01b:	inc    DWORD PTR [eax]
 100e01d:	add    BYTE PTR [eax],al
 100e01f:	add    BYTE PTR [eax-0x54],bl
 100e022:	pop    edi
 100e023:	dec    DWORD PTR [esi+edx*4+0x54]
 100e027:	inc    DWORD PTR [eax]
	...
 100e045:	add    BYTE PTR [eax],al
 100e047:	add    BYTE PTR [esi-0x56],ch
 100e04a:	sar    bh,0x69
 100e04d:	lods   al,BYTE PTR ds:[esi]
 100e04e:	(bad)  
 100e04f:	jmp    FWORD PTR [ecx-0x55]
 100e052:	(bad)  
 100e053:	jmp    FWORD PTR [ecx-0x55]
 100e056:	(bad)  
 100e057:	jmp    FWORD PTR [ecx-0x55]
 100e05a:	(bad)  
 100e05b:	jmp    FWORD PTR [ecx-0x55]
 100e05e:	(bad)  
 100e05f:	jmp    FWORD PTR [ecx-0x54]
 100e062:	(bad)  
 100e063:	jmp    FWORD PTR [eax-0x67]
 100e066:	stos   DWORD PTR es:[edi],eax
 100e067:	inc    DWORD PTR [eax]
	...
 100e0bd:	add    BYTE PTR [eax],al
 100e0bf:	add    bh,bh
 100e0c1:	lock call FWORD PTR [edi+0xf7ff0ff]
 100e0c8:	(bad)  
 100e0c9:	clc    
 100e0ca:	ds ud0 edi,esp
 100e0ce:	sbb    al,0x1f
 100e0d0:	(bad)  
 100e0d1:	dec    BYTE PTR [eax]
 100e0d3:	aas    
 100e0d4:	(bad)  
 100e0d5:	inc    DWORD PTR [eax]
 100e0d7:	jg     0x100e06b
 100e0d9:	dec    edi
 100e0da:	cmp    bh,0x92
 100e0dd:	dec    edi
 100e0de:	sar    ecx,0xff
 100e0e1:	inc    DWORD PTR [eax+0xff9ff0]
 100e0e7:	pusha  
 100e0e8:	lahf   
 100e0e9:	dec    BYTE PTR [eax]
 100e0eb:	add    edi,edi
 100e0ed:	loopne 0x100e10b
 100e0ef:	pop    es
 100e0f0:	lahf   
 100e0f1:	sar    BYTE PTR [edi+eax*1],0x9f
 100e0f5:	sar    BYTE PTR [edi+ecx*1-0x1],0xdc
 100e0fa:	jl     0x100e11b
 100e0fc:	(bad)  
 100e0fd:	fdivr  QWORD PTR [edi+edi*1-0x1]
 100e101:	cld    
 100e102:	js     0x100e183
 100e104:	push   eax
 100e106:	sar    edi,0xc0
 100e109:	aas    
 100e10a:	(bad)  
 100e10b:	inc    DWORD PTR [eax-0x7f0000e1]
 100e111:	pop    ds
 100e112:	(bad)  
 100e113:	aas    
 100e114:	sbb    BYTE PTR [edi],0xff
 100e117:	aas    
 100e118:	sbb    BYTE PTR [edi],0xff
 100e11b:	inc    DWORD PTR [eax-0x7fc000e1]
 100e121:	pop    ds
 100e122:	(bad)  
 100e123:	aas    
 100e124:	sbb    BYTE PTR [edi],0xff
 100e127:	inc    DWORD PTR [eax-0x7fc000e1]
 100e12d:	pop    ds
 100e12e:	(bad)  
 100e12f:	aas    
 100e130:	sbb    BYTE PTR [edi],0xff
 100e133:	inc    DWORD PTR [eax-0x7fc0b6e2]
 100e139:	push   ds
 100e13a:	dec    ecx
 100e13b:	aas    
 100e13c:	sar    BYTE PTR [edi],0xff
 100e13f:	jmp    FWORD PTR [eax]
 100e141:	add    BYTE PTR [eax],al
 100e143:	add    BYTE PTR [eax],dl
 100e145:	add    BYTE PTR [eax],al
 100e147:	add    BYTE PTR [eax],ah
 100e149:	add    BYTE PTR [eax],al
 100e14b:	add    BYTE PTR [ecx],al
 100e14d:	add    BYTE PTR [eax],cl
 100e14f:	add    BYTE PTR [eax],al
 100e151:	add    BYTE PTR [eax],al
 100e153:	add    BYTE PTR [eax],al
 100e155:	add    DWORD PTR [eax],eax
	...
 100e15f:	add    BYTE PTR [eax],al
 100e161:	add    DWORD PTR [eax],eax
 100e163:	add    BYTE PTR [eax],al
 100e165:	add    DWORD PTR [eax],eax
 100e167:	add    BYTE PTR [eax],al
 100e169:	add    BYTE PTR [eax],al
 100e16b:	add    BYTE PTR [esi+eax*2],ch
 100e16e:	pop    eax
 100e16f:	add    BYTE PTR [ebx],bl
 100e171:	pop    ebx
 100e172:	ja     0x100e174
 100e174:	jne    0x100e1cf
 100e176:	inc    esp
 100e177:	add    BYTE PTR [esi-0x77ffa192],al
 100e17d:	outs   dx,DWORD PTR ds:[esi]
 100e17e:	pop    ebp
 100e17f:	add    BYTE PTR [ebx-0x70ffa18f],cl
 100e185:	jne    0x100e1e8
 100e187:	add    BYTE PTR [ebx+0x3300687a],dl
 100e18d:	int3   
 100e18e:	data16 add BYTE PTR [edx-0x5dff8978],ah
 100e195:	mov    bh,BYTE PTR [ecx+0x0]
 100e198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100e199:	lea    edi,[eax+eax*1+0x21]
 100e19d:	add    DWORD PTR gs:[eax],0x2c
 100e1a1:	je     0x100e13d
 100e1a3:	add    BYTE PTR [edi],ch
 100e1a5:	jbe    0x100e143
 100e1a7:	add    BYTE PTR [edi+0x75],cl
 100e1aa:	pop    DWORD PTR [eax]
 100e1ac:	jne    0x100e22c
 100e1ae:	add    DWORD PTR [eax],0x53
 100e1b1:	call   0xb8:0x9b5400b8
 100e1b8:	pop    eax
 100e1b9:	popf   
 100e1ba:	mov    edx,0xbb9f5c00
 100e1bf:	add    BYTE PTR [ebx-0x5d],dh
 100e1c2:	mov    dh,0x0
 100e1c4:	jne    0x100e170
 100e1c6:	mov    ebx,0xe69f0000
 100e1cb:	add    BYTE PTR [eax],al
 100e1cd:	mov    ds:0xa70000e6,eax
 100e1d2:	in     al,dx
 100e1d3:	add    BYTE PTR [eax],dl
 100e1d5:	mov    al,0xec
 100e1d7:	add    BYTE PTR [ebx],bl
 100e1d9:	mov    ch,0xed
 100e1db:	add    BYTE PTR [esi*4-0x45cfff14],bl
 100e1e2:	in     al,dx
 100e1e3:	add    BYTE PTR [edx],ch
 100e1e5:	mov    edx,0xc94c00f0
 100e1ea:	icebp  
 100e1eb:	add    BYTE PTR [edx-0x36],dl
 100e1ee:	repnz add BYTE PTR [ecx-0x33],dl
 100e1f2:	hlt    
 100e1f3:	add    BYTE PTR [esi+ecx*8-0x16],ch
 100e1f7:	add    BYTE PTR [ebp+edx*8-0xe],ch
 100e1fb:	add    BYTE PTR [edx-0x28],dh
 100e1fe:	repnz add BYTE PTR [ebx-0x26],dh
 100e202:	cmc    
 100e203:	add    BYTE PTR [edx-0x1e],bh
 100e206:	sti    
 100e207:	add    BYTE PTR [edi-0x55ff7c6a],ch
 100e20d:	mov    ds:0xa1b7009b,al
 100e212:	nop
 100e213:	add    BYTE PTR [edx-0x65ff6c5d],bh
 100e219:	mov    eax,ds:0xafae00a9
 100e21e:	scas   al,BYTE PTR es:[edi]
 100e21f:	add    BYTE PTR [esi-0x40ff4e47],bh
 100e225:	mov    ebx,0xafc300bb
 100e22a:	mov    al,ds:0xadb9c900
 100e22f:	add    bh,al
 100e231:	mov    esp,0xc5d100b1
 100e236:	mov    edx,0xcebd8a00
 100e23b:	add    BYTE PTR [edi-0x6eff101f],dl
 100e241:	in     al,0xf6
 100e243:	add    BYTE PTR [esi-0x5fff0917],bl
 100e249:	jmp    0xf7:0xeca100f6
 100e250:	lods   eax,DWORD PTR ds:[esi]
 100e251:	lock clc 
 100e253:	add    BYTE PTR [ecx-0x4aff050d],dh
 100e259:	cmc    
 100e25a:	cli    
 100e25b:	add    bl,bl
 100e25d:	rol    edi,1
 100e25f:	add    bl,bh
 100e261:	(bad)  
 100e263:	add    dl,ch
 100e265:	loope  0x100e23f
 100e267:	add    dl,bh
 100e269:	loope  0x100e23c
 100e26b:	add    al,dh
 100e26d:	loop   0x100e248
 100e26f:	add    ch,cl
 100e271:	(bad)  
 100e272:	inc    DWORD PTR [eax]
 100e274:	sar    edi,cl
 100e276:	inc    DWORD PTR [eax]
 100e278:	in     al,dx
 100e279:	out    0xe2,eax
 100e27b:	add    dl,dh
 100e27d:	out    0xe1,eax
 100e27f:	add    bl,bh
 100e281:	cli    
 100e282:	test   DWORD PTR [eax],0xffffff
	...
 100e568:	add    BYTE PTR [ecx],cl
 100e56a:	add    BYTE PTR [ecx],cl
 100e56c:	add    BYTE PTR [ecx+eax*1],ch
 100e56f:	add    BYTE PTR [eax],al
 100e571:	add    BYTE PTR [eax],al
 100e573:	add    BYTE PTR [ebx],al
 100e575:	xor    al,BYTE PTR [eax]
 100e577:	add    BYTE PTR [eax],al
 100e579:	add    BYTE PTR [eax],al
 100e57b:	add    BYTE PTR [eax],al
 100e57d:	add    BYTE PTR [esi],bl
 100e57f:	add    al,BYTE PTR [eax]
 100e581:	add    BYTE PTR [eax],al
 100e583:	add    edi,DWORD PTR ds:0x2a
 100e589:	or     DWORD PTR [eax],eax
 100e58b:	add    BYTE PTR [eax],al
 100e58d:	add    BYTE PTR [eax],al
 100e58f:	push   ds
 100e590:	or     eax,0x2a3f0300
	...
 100e59d:	add    BYTE PTR [eax],al
 100e59f:	add    BYTE PTR [esi],bl
 100e5a1:	add    eax,DWORD PTR [eax+0x2a]
 100e5a4:	add    BYTE PTR [eax],al
 100e5a6:	add    BYTE PTR [eax],al
 100e5a8:	add    BYTE PTR [ecx],cl
 100e5aa:	add    BYTE PTR [eax],al
 100e5ac:	add    BYTE PTR [eax],al
 100e5ae:	add    BYTE PTR [eax],al
 100e5b0:	add    edi,DWORD PTR [esi]
 100e5b2:	or     eax,0x6000000
	...
 100e5bf:	add    eax,DWORD PTR [ecx+0x2a]
 100e5c2:	push   ds
 100e5c3:	or     eax,0x6460606
 100e5c8:	add    BYTE PTR [ebx],dl
 100e5ca:	adc    BYTE PTR [eax],dl
 100e5cc:	adc    DWORD PTR [eax*1+0x2f002a44],eax
 100e5d3:	sub    DWORD PTR [ebp+0x33],eax
 100e5d6:	pop    es
 100e5d7:	add    BYTE PTR [ebx],dl
 100e5d9:	and    BYTE PTR ds:0x302e0c23,dh
 100e5df:	or     BYTE PTR [eax],al
 100e5e1:	add    BYTE PTR [eax],al
 100e5e3:	sub    eax,DWORD PTR [edi+0x33]
 100e5e6:	pop    es
 100e5e7:	add    BYTE PTR [ebx],dl
 100e5e9:	and    bh,BYTE PTR [ecx]
 100e5eb:	sub    bl,BYTE PTR es:[edx]
 100e5ee:	sub    eax,0xc
 100e5f3:	or     al,0x31
 100e5f5:	pop    es
 100e5f6:	add    BYTE PTR [eax],al
 100e5f8:	adc    al,0x22
 100e5fa:	cmp    BYTE PTR [esi],ah
 100e5fc:	sbb    eax,0x312a17
 100e601:	sub    BYTE PTR [edx],cl
 100e603:	pop    es
 100e604:	pop    es
 100e605:	add    BYTE PTR [eax],al
 100e607:	add    BYTE PTR [edx+eiz*1],dl
 100e60a:	cmp    DWORD PTR ds:0xe191d,esp
 100e610:	add    BYTE PTR [eax],al
 100e612:	add    BYTE PTR [eax],al
 100e614:	add    BYTE PTR [eax],al
 100e616:	or     DWORD PTR [eax],eax
 100e618:	adc    al,0x22
 100e61a:	cmp    DWORD PTR ds:0xe191d,esp
	...
 100e628:	adc    al,0x22
 100e62a:	cmp    BYTE PTR [ebx+ebx*1],ah
 100e62d:	sbb    BYTE PTR [esi],cl
 100e62f:	add    BYTE PTR [eax],al
 100e631:	add    BYTE PTR [eax],al
 100e633:	add    BYTE PTR [eax],al
 100e635:	add    BYTE PTR [ecx],cl
 100e637:	add    BYTE PTR [edi+eiz*1],dl
 100e63a:	cmp    dh,BYTE PTR [esi]
 100e63c:	and    bl,BYTE PTR [edi]
 100e63e:	push   cs
	...
 100e647:	add    BYTE PTR [esp+edi*1],dh
 100e64a:	inc    edx
 100e64b:	inc    ebx
 100e64c:	inc    edx
 100e64d:	cmp    al,0x16
 100e64f:	add    BYTE PTR [ecx],cl
 100e651:	add    BYTE PTR [ecx],cl
 100e653:	add    BYTE PTR [ecx],cl
 100e655:	add    BYTE PTR [ecx],cl
 100e657:	add    BYTE PTR [eax],al
 100e659:	xor    al,0x34
 100e65b:	xor    al,0x34
 100e65d:	xor    al,0x0
	...
 100e667:	add    BYTE PTR [ecx-0x3ffff0d],ch
 100e66d:	jecxz  0x100e66f
 100e66f:	add    BYTE PTR [esi-0xffffb9],bh
 100e675:	sldt   WORD PTR [eax]
 100e678:	mov    edi,0xfe00001d
 100e67d:	add    BYTE PTR [eax],al
 100e67f:	add    BYTE PTR [eax+0x41],al
 100e685:	loope  0x100e687
 100e687:	add    BYTE PTR [eax],al
 100e689:	jecxz  0x100e68b
 100e68b:	add    BYTE PTR [eax],al
 100e68d:	xchg   DWORD PTR [eax],eax
 100e68f:	add    BYTE PTR [ecx],al
 100e691:	std    
 100e692:	add    BYTE PTR [eax],al
 100e694:	add    edi,edi
 100e696:	add    BYTE PTR [eax],al
 100e698:	add    ebp,edi
 100e69a:	add    BYTE PTR [eax],al
 100e69c:	add    edi,edi
 100e69e:	add    BYTE PTR [eax],al
 100e6a0:	add    DWORD PTR [ebp+0x0],edx
 100e6a3:	add    BYTE PTR [ebx+0x280000ff],al
 100e6a9:	add    BYTE PTR [eax],al
 100e6ab:	add    BYTE PTR [eax],dl
 100e6ad:	add    BYTE PTR [eax],al
 100e6af:	add    BYTE PTR [eax],ah
 100e6b1:	add    BYTE PTR [eax],al
 100e6b3:	add    BYTE PTR [ecx],al
 100e6b5:	add    BYTE PTR [eax],ah
 100e6b7:	add    BYTE PTR [eax],al
 100e6b9:	add    BYTE PTR [eax],al
 100e6bb:	add    BYTE PTR [eax+0x4],al
	...
 100e6d2:	add    BYTE PTR [eax],al
 100e6d4:	xor    ecx,esp
 100e6d6:	data16 (bad) 
 100e6d8:	(bad)  
 100e6d9:	std    
 100e6da:	cld    
 100e6db:	and    DWORD PTR [ebx],esi
 100e6dd:	int3   
 100e6de:	data16 (bad) 
 100e6e0:	(bad)  
 100e6e1:	std    
 100e6e2:	cld    
 100e6e3:	and    DWORD PTR [edx+0x2cffa9a1],ebx
 100e6e9:	inc    esi
 100e6ea:	pop    eax
 100e6eb:	jmp    DWORD PTR [esi]
 100e6ed:	sub    edi,DWORD PTR [ecx]
 100e6ef:	jo     0x100e6f1
	...
 100e6fd:	add    BYTE PTR [eax],al
 100e6ff:	add    BYTE PTR [ebp+0x59],dh
 100e702:	inc    esp
 100e703:	inc    edi
 100e705:	mov    esp,0xffb1
	...
 100e712:	add    BYTE PTR [eax],al
 100e714:	(bad)  
 100e715:	std    
 100e716:	cld    
 100e717:	and    DWORD PTR [eax],eax
	...
 100e721:	add    BYTE PTR [eax],al
 100e723:	add    BYTE PTR [ecx+edi*2-0x7c],dh
 100e727:	dec    edi
 100e728:	xor    BYTE PTR [edx+0x5b1bffec],bh
 100e72e:	ja     0x100e72f
 100e730:	sub    DWORD PTR [eax],ebp
 100e732:	add    BYTE PTR ss:[bx+si],al
 100e736:	add    BYTE PTR [eax],al
 100e738:	add    BYTE PTR [eax],al
 100e73a:	add    BYTE PTR [eax],al
 100e73c:	jne    0x100e797
 100e73e:	inc    esp
 100e73f:	(bad)  
 100e740:	fcmovnbe st,st(1)
 100e742:	(bad)  
 100e743:	push   DWORD PTR [edi-0x3b006f5f]
 100e749:	mov    al,0xa0
 100e74b:	or     DWORD PTR [eax],eax
 100e74d:	add    BYTE PTR [eax],al
 100e74f:	add    BYTE PTR [eax],al
 100e751:	add    BYTE PTR [eax],al
 100e753:	add    BYTE PTR [ebx],dh
 100e755:	int3   
 100e756:	inc    WORD PTR [eax]
	...
 100e765:	add    BYTE PTR [eax],al
 100e767:	add    BYTE PTR [eax+0x78],bh
 100e76a:	adc    BYTE PTR [ebp+0x30],0xba
 100e76e:	in     al,dx
 100e76f:	jmp    DWORD PTR [ecx]
 100e771:	gs cmp edi,0x3b
 100e775:	xor    BYTE PTR ds:0x4459755d,dh
 100e77b:	(bad)  
 100e77c:	jmp    0x90a1:0xb7ffd8e1
 100e783:	inc    DWORD PTR [eax]
	...
 100e791:	add    BYTE PTR [eax],al
 100e793:	add    bh,bh
 100e795:	std    
 100e796:	cld    
 100e797:	and    DWORD PTR [eax],eax
	...
 100e7a9:	add    BYTE PTR [eax],al
 100e7ab:	add    BYTE PTR [ebp+0x7f],dh
 100e7ae:	mov    cs,WORD PTR [ecx+0x30]
 100e7b1:	mov    edx,0x5975ffec
 100e7b6:	inc    esp
 100e7b7:	(bad)  
 100e7b8:	cli    
 100e7b9:	loope  0x100e78c
 100e7bb:	push   DWORD PTR [edi+0xff90a1]
	...
 100e7c9:	add    BYTE PTR [eax],al
 100e7cb:	add    BYTE PTR [edx+0x52],dh
 100e7ce:	or     DWORD PTR ds:[eax],eax
 100e7d1:	add    BYTE PTR [eax],al
 100e7d3:	add    BYTE PTR [ebx],dh
 100e7d5:	int3   
 100e7d6:	inc    WORD PTR [eax]
	...
 100e7ed:	add    BYTE PTR [eax],al
 100e7ef:	add    BYTE PTR [ebp+0x59],dh
 100e7f2:	inc    esp
 100e7f3:	(bad)  
 100e7f4:	sti    
 100e7f5:	(bad)  
 100e7f7:	jmp    DWORD PTR [ecx]
 100e7f9:	gs cmp edi,0x0
	...
 100e805:	add    BYTE PTR [eax],al
 100e807:	add    BYTE PTR [ebx-0x5f00a18f],cl
 100e80d:	mov    edi,DWORD PTR [ebp+0x3d]
 100e810:	add    BYTE PTR [eax],al
 100e812:	add    BYTE PTR [eax],al
 100e814:	(bad)  
 100e815:	std    
 100e816:	cld    
 100e817:	and    DWORD PTR [eax],eax
	...
 100e829:	add    BYTE PTR [eax],al
 100e82b:	add    BYTE PTR [ebp+0x59],dh
 100e82e:	inc    esp
 100e82f:	push   eax
 100e831:	loop   0x100e80c
 100e833:	push   DWORD PTR [edi+0x30ff90a1]
 100e839:	mov    edx,0x6521ffec
 100e83e:	cmp    edi,0xffffff8b
 100e841:	jno    0x100e8a1
 100e843:	dec    DWORD PTR [ebx-0x400a18f]
 100e849:	cli    
 100e84a:	idiv   edi
 100e84c:	mov    esi,DWORD PTR [ecx+0x5e]
 100e84f:	inc    DWORD PTR [eax]
 100e851:	add    BYTE PTR [eax],al
 100e853:	add    BYTE PTR [ebx+ebx*4-0x48],dl
 100e857:	inc    DWORD PTR [edi+0x6f]
 100e85a:	mov    dh,bl
 100e85c:	inc    edi
 100e85d:	outs   dx,DWORD PTR ds:[esi]
 100e85e:	mov    dh,bl
 100e860:	jb     0x100e8dd
 100e862:	cmp    ecx,0xff5e6e86
 100e868:	mov    BYTE PTR [edi+0x5d],ch
 100e86b:	(bad)  
 100e86c:	in     al,dx
 100e86d:	out    0xe2,eax
 100e86f:	push   DWORD PTR [edi+0xff90a1]
 100e875:	add    BYTE PTR [eax],al
 100e877:	add    BYTE PTR [esp+eax*4-0x5d55737c],cl
 100e87e:	fwait
 100e87f:	push   edx
 100e881:	out    0xe1,eax
 100e883:	call   ebx
 100e885:	lds    edi,FWORD PTR [ecx+0x61758fff]
 100e88b:	jmp    FWORD PTR [ebx+edx*4-0x64abc980]
 100e892:	mov    eax,0xf1c94cff
 100e897:	call   DWORD PTR [edi+0x6cffefe1]
 100e89d:	into   
 100e89e:	jmp    0xbeff:0x7c8da4ff
 100e8a5:	mov    ecx,0xafc3ffb1
 100e8aa:	mov    al,ds:0x687a93ff
 100e8af:	inc    DWORD PTR [eax]
 100e8b1:	add    BYTE PTR [eax],al
 100e8b3:	add    BYTE PTR [eax],al
 100e8b5:	add    BYTE PTR [eax],al
 100e8b7:	add    BYTE PTR [ebp-0x45f97966],dh
 100e8bd:	mov    ds:0xffffff93,eax
 100e8c2:	(bad)  
 100e8c3:	cld    
 100e8c4:	rol    ch,1
 100e8c6:	mov    ebx,0x61758fff
 100e8cb:	inc    DWORD PTR [eax]
 100e8cd:	add    BYTE PTR [eax],al
 100e8cf:	add    BYTE PTR [ecx-0x67],dl
 100e8d2:	mov    bh,0xfb
 100e8d4:	push   ecx
 100e8d5:	into   
 100e8d6:	hlt    
 100e8d7:	jmp    DWORD PTR [ecx+0x73fff7ec]
 100e8dd:	(bad)  
 100e8df:	push   DWORD PTR [edi+0xff90a1]
 100e8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 100e8e6:	in     al,dx
 100e8e7:	jmp    FWORD PTR [esi-0x5c005151]
 100e8ed:	mov    edi,DWORD PTR [edx-0x1]
 100e8f0:	add    BYTE PTR [eax],al
 100e8f2:	add    BYTE PTR [eax],al
 100e8f4:	and    DWORD PTR [ebx+0x50],0x16
 100e8f8:	and    DWORD PTR [edi+ecx*2+0x47],0xff7889a2
 100e900:	enter  0xaeb9,0xff
 100e904:	(bad)  
 100e905:	jne    0x100e968
 100e907:	call   DWORD PTR [edx+0x6e6478]
 100e90d:	add    BYTE PTR [eax],al
 100e90f:	add    BYTE PTR [edx-0x67],dl
 100e912:	mov    bh,0xf5
 100e914:	push   ecx
 100e915:	into   
 100e916:	hlt    
 100e917:	call   FWORD PTR [edi+0x72fff6ea]
 100e91d:	fdiv   st,st(2)
 100e91f:	call   FWORD PTR [ebx]
 100e921:	mov    ch,0xed
 100e923:	push   DWORD PTR [ebp-0x56]
 100e926:	mov    ebx,0x90a1b7ff
 100e92b:	(bad)  
 100e92c:	mov    ecx,0xafbe92a3
 100e931:	xchg   edi,eax
 100e932:	test   BYTE PTR [edx],ch
 100e934:	scas   eax,DWORD PTR es:[edi]
 100e935:	xchg   esi,eax
 100e936:	cmp    edi,0xffffffa2
 100e939:	mov    BYTE PTR [esi-0x1],dh
 100e93c:	(bad)  
 100e93d:	jne    0x100e9a0
 100e93f:	dec    DWORD PTR [edi-0x70009e8b]
 100e945:	jne    0x100e9a8
 100e947:	data16 add BYTE PTR [eax],al
 100e94a:	add    BYTE PTR [eax],al
 100e94c:	add    BYTE PTR [eax],al
 100e94e:	add    BYTE PTR [eax],al
 100e950:	push   ebx
 100e951:	call   0xfff4:0xce52f5b8
 100e958:	mov    al,ds:0x72fff6ea
 100e95d:	fdiv   st,st(3)
 100e95f:	call   FWORD PTR [ebx]
 100e961:	mov    ch,0xed
 100e963:	inc    DWORD PTR [eax]
 100e965:	mov    ds:0x732bffe7,eax
 100e96a:	call   0x0:0xfd
	...
 100e985:	add    BYTE PTR [eax],al
 100e987:	add    BYTE PTR [ebx],dh
 100e989:	int3   
 100e98a:	inc    WORD PTR [eax]
 100e98d:	add    BYTE PTR [eax],al
 100e98f:	add    BYTE PTR [ebx-0x66],dl
 100e992:	mov    eax,0xf4ce52f5
 100e997:	jmp    DWORD PTR [eax+0x73fff6ea]
 100e99d:	fdiv   st,st(3)
 100e99f:	call   FWORD PTR [esi*4-0x5cff0014]
 100e9a6:	out    0xff,al
 100e9a8:	sub    al,0x73
 100e9aa:	call   0x0:0xfd
	...
 100e9c5:	add    BYTE PTR [eax],al
 100e9c7:	add    bh,bh
 100e9c9:	std    
 100e9ca:	cld    
 100e9cb:	and    DWORD PTR [eax],eax
 100e9cd:	add    BYTE PTR [eax],al
 100e9cf:	add    BYTE PTR [edx-0x66],dl
 100e9d2:	mov    ecx,0xf4cd51f5
 100e9d7:	call   FWORD PTR [ebp+0x6cfff6e9]
 100e9dd:	aad    0xf2
 100e9df:	call   DWORD PTR [eax]
 100e9e1:	mov    al,0xec
 100e9e3:	inc    DWORD PTR [eax]
 100e9e5:	lahf   
 100e9e6:	out    0xff,al
 100e9e8:	sub    esi,DWORD PTR [ebx-0x65]
 100e9eb:	std    
	...
 100ea08:	xor    ecx,esp
 100ea0a:	inc    WORD PTR [eax]
 100ea0d:	add    BYTE PTR [eax],al
 100ea0f:	add    BYTE PTR [esi-0x64],dl
 100ea12:	mov    ecx,0xfbe27af5
 100ea17:	jmp    FWORD PTR [ebp-0x6e000710]
 100ea1d:	in     al,0xf6
 100ea1f:	call   DWORD PTR [edx-0x36]
 100ea22:	repnz jmp FWORD PTR [edx]
 100ea25:	mov    edx,0x752efff0
 100ea2a:	pushf  
 100ea2b:	std    
	...
 100ea48:	(bad)  
 100ea49:	std    
 100ea4a:	cld    
 100ea4b:	and    DWORD PTR [eax],eax
 100ea4d:	add    BYTE PTR [eax],al
 100ea4f:	add    BYTE PTR [edx-0x4a003143],cl
 100ea55:	cmc    
 100ea56:	cli    
 100ea57:	dec    esp
 100ea59:	(bad)  
 100ea5a:	(bad)  
 100ea5b:	call   ebx
 100ea5d:	(bad)  
 100ea5e:	(bad)  
 100ea5f:	dec    esi
 100ea61:	(bad)  
 100ea62:	(bad)  
 100ea63:	push   DWORD PTR [ecx+0x73fffaf3]
 100ea69:	mov    ds:0xffb6,eax
 100ea6e:	add    BYTE PTR [eax],al
 100ea70:	xor    ecx,esp
 100ea72:	data16 (bad) 
 100ea74:	(bad)  
 100ea75:	std    
 100ea76:	cld    
 100ea77:	and    DWORD PTR [ebx],esi
 100ea79:	int3   
 100ea7a:	data16 (bad) 
 100ea7c:	(bad)  
 100ea7d:	std    
 100ea7e:	cld    
 100ea7f:	and    DWORD PTR [ebx],esi
 100ea81:	int3   
 100ea82:	data16 (bad) 
 100ea84:	(bad)  
 100ea85:	std    
 100ea86:	cld    
 100ea87:	and    DWORD PTR [ebx],esi
 100ea89:	int3   
 100ea8a:	inc    WORD PTR [eax]
 100ea8d:	add    BYTE PTR [eax],al
 100ea8f:	add    BYTE PTR [eax],al
 100ea91:	add    BYTE PTR [eax],al
 100ea93:	add    BYTE PTR [edx-0x75003143],cl
 100ea99:	mov    ebp,0xbd8affce
 100ea9e:	into   
 100ea9f:	dec    DWORD PTR [edx-0x75003143]
 100eaa5:	mov    ebp,0xffce
	...
 100eace:	add    BYTE PTR [eax],al
 100ead0:	xor    bl,0x0
 100ead3:	add    BYTE PTR [eax-0x43ffff9f],bh
 100ead9:	pop    es
 100eada:	add    BYTE PTR [eax],al
 100eadc:	mov    esi,0xbf00000e
 100eae1:	sbb    al,0x0
 100eae3:	add    BYTE PTR [esi-0x80000000],bh
 100eae9:	inc    eax
 100eaea:	add    BYTE PTR [eax],al
 100eaec:	add    cl,al
 100eaee:	add    BYTE PTR [eax],al
 100eaf0:	add    BYTE PTR [ecx+0x3000000],al
 100eaf6:	add    BYTE PTR [eax],al
 100eaf8:	add    ebp,edi
 100eafa:	add    BYTE PTR [eax],al
 100eafc:	add    ebp,edi
 100eafe:	add    BYTE PTR [eax],al
 100eb00:	add    ebp,edi
 100eb02:	add    BYTE PTR [eax],al
 100eb04:	add    ebp,edi
 100eb06:	add    BYTE PTR [eax],al
 100eb08:	add    DWORD PTR [ecx],eax
 100eb0a:	add    BYTE PTR [eax],al
 100eb0c:	cmp    edi,0x0
 100eb0f:	add    BYTE PTR [eax],ch
 100eb11:	add    BYTE PTR [eax],al
 100eb13:	add    BYTE PTR [eax],ah
 100eb15:	add    BYTE PTR [eax],al
 100eb17:	add    BYTE PTR [eax+0x0],al
 100eb1a:	add    BYTE PTR [eax],al
 100eb1c:	add    DWORD PTR [eax],eax
 100eb1e:	or     BYTE PTR [eax],al
 100eb20:	add    BYTE PTR [eax],al
 100eb22:	add    BYTE PTR [eax],al
 100eb24:	add    BYTE PTR [eax+eax*1],al
	...
 100eb2f:	add    BYTE PTR [eax],al
 100eb31:	add    DWORD PTR [eax],eax
 100eb33:	add    BYTE PTR [eax],al
 100eb35:	add    DWORD PTR [eax],eax
 100eb37:	add    BYTE PTR [edx],bl
 100eb39:	or     BYTE PTR [edi],cl
 100eb3b:	add    BYTE PTR [esi],bl
 100eb3d:	push   ds
 100eb3e:	add    BYTE PTR es:[ebx],bl
 100eb41:	and    eax,0x2812002f
 100eb46:	aaa    
 100eb47:	add    BYTE PTR [ecx],bl
 100eb49:	sub    BYTE PTR [esi],dh
 100eb4b:	add    BYTE PTR [eax],bl
 100eb4d:	sub    eax,0x2337003b
 100eb52:	sub    al,BYTE PTR [eax]
 100eb54:	and    BYTE PTR [edx],ch
 100eb56:	xor    eax,0x36282900
 100eb5b:	add    BYTE PTR [esi],ah
 100eb5d:	sub    edi,DWORD PTR [ecx]
 100eb5f:	add    BYTE PTR [eax],ch
 100eb61:	sub    bh,BYTE PTR [ecx]
 100eb63:	add    BYTE PTR [ebx],ch
 100eb65:	xor    DWORD PTR [esi],edi
 100eb67:	add    BYTE PTR [ebx],bh
 100eb69:	xor    BYTE PTR ds:0x132b4a00,dh
 100eb6f:	add    BYTE PTR [edx+0x37],dl
 100eb72:	and    eax,DWORD PTR [eax]
 100eb74:	pop    ebx
 100eb75:	cmp    esp,DWORD PTR [ebx]
 100eb77:	add    BYTE PTR [ecx+0x3c],bl
 100eb7a:	sub    DWORD PTR [eax],eax
 100eb7c:	data16 and al,BYTE PTR ds:[eax]
 100eb80:	xor    al,0x67
 100eb82:	cmp    al,0x0
 100eb84:	arpl   WORD PTR [edx+0x2a],ax
 100eb87:	add    BYTE PTR [esi+0x4a],ch
 100eb8a:	das    
 100eb8b:	add    BYTE PTR [edx+0x4b],ch
 100eb8e:	xor    eax,DWORD PTR [eax]
 100eb90:	ins    BYTE PTR es:[edi],dx
 100eb91:	dec    ebp
 100eb92:	cmp    BYTE PTR [eax],al
 100eb94:	outs   dx,DWORD PTR ds:[esi]
 100eb95:	push   ecx
 100eb96:	cmp    eax,0x3d527000
 100eb9b:	add    BYTE PTR [esi],dh
 100eb9d:	ds dec edi
 100eb9f:	add    BYTE PTR [ebx],bl
 100eba1:	inc    eax
 100eba2:	push   esi
 100eba3:	add    BYTE PTR [edi],bl
 100eba5:	inc    esp
 100eba6:	pop    ecx
 100eba7:	add    BYTE PTR [edi],ah
 100eba9:	inc    esi
 100ebaa:	push   edi
 100ebab:	add    BYTE PTR [esi+eax*2],ch
 100ebae:	pop    eax
 100ebaf:	add    BYTE PTR [edx],ch
 100ebb1:	dec    eax
 100ebb2:	pop    ecx
 100ebb3:	add    BYTE PTR [ebx],bh
 100ebb5:	inc    esi
 100ebb6:	push   esi
 100ebb7:	add    BYTE PTR [ebx],bl
 100ebb9:	pop    ebx
 100ebba:	ja     0x100ebbc
 100ebbc:	daa    
 100ebbd:	dec    ebp
 100ebbe:	imul   eax,DWORD PTR [eax],0x29
 100ebc1:	push   esp
 100ebc2:	je     0x100ebc4
 100ebc4:	and    BYTE PTR [edi+0x7d],dl
 100ebc7:	add    BYTE PTR [esi],ah
 100ebc9:	pop    esi
 100ebca:	js     0x100ebcc
 100ebcc:	sub    ebx,DWORD PTR [ebx+0x7b]
 100ebcf:	add    BYTE PTR [ebp+0x43],cl
 100ebd2:	dec    edx
 100ebd3:	add    BYTE PTR [esp+ecx*2+0x48],dl
 100ebd7:	add    BYTE PTR [esp+ecx*2+0x57],al
 100ebdb:	add    BYTE PTR [edx+0x55],dh
 100ebde:	inc    eax
 100ebdf:	add    BYTE PTR [eax+ebx*2+0x42],dh
 100ebe3:	add    BYTE PTR [ebp+0x59],dh
 100ebe6:	inc    esp
 100ebe7:	add    BYTE PTR [ecx+0x5d],bh
 100ebea:	dec    ecx
 100ebeb:	add    BYTE PTR [ebx+0x5b],ch
 100ebee:	push   ecx
 100ebef:	add    BYTE PTR [edi+0x63],bh
 100ebf2:	dec    edi
 100ebf3:	add    BYTE PTR [esi+0x63],bh
 100ebf6:	push   eax
 100ebf7:	add    BYTE PTR [esi+0x5a],cl
 100ebfa:	imul   eax,DWORD PTR [eax],0x775d40
 100ec00:	arpl   WORD PTR [ebx+0x68],sp
 100ec03:	add    BYTE PTR [esi+ebp*2+0x71],dh
 100ec07:	add    BYTE PTR [eax+0x73],bh
 100ec0a:	jo     0x100ec0c
 100ec0c:	ja     0x100ec82
 100ec0e:	jl     0x100ec10
 100ec10:	and    BYTE PTR [ebx+0x4f],0x0
 100ec14:	and    DWORD PTR [ebx+0x50],0x566b8700
 100ec1b:	add    BYTE PTR [esp+ebp*2+0x6e89005a],al
 100ec22:	pop    ebx
 100ec23:	add    BYTE PTR [edx-0x72ffa290],cl
 100ec29:	jno    0x100ec87
 100ec2b:	add    BYTE PTR [ebx-0x79ffa08c],dl
 100ec31:	jae    0x100ec98
 100ec33:	add    BYTE PTR [ebx-0x72ff9e8e],cl
 100ec39:	jb     0x100ec9c
 100ec3b:	add    BYTE PTR [ebx-0x70ff9c8c],cl
 100ec41:	jne    0x100eca4
 100ec43:	add    BYTE PTR [edi-0x74ff9b8b],cl
 100ec49:	ja     0x100ecb5
 100ec4b:	add    BYTE PTR [ebx-0x6cff9a87],dl
 100ec51:	jp     0x100ecbb
 100ec53:	add    BYTE PTR [ecx-0x70ff9482],bl
 100ec59:	jge    0x100eccc
 100ec5b:	add    BYTE PTR [esi+edx*4+0x54],cl
 100ec5f:	add    BYTE PTR [eax-0x54],bl
 100ec62:	pop    edi
 100ec63:	add    BYTE PTR [ecx-0x68ff917f],bl
 100ec69:	xor    BYTE PTR [ebx+0x0],0x9c
 100ec6d:	test   BYTE PTR [edx+0x0],dh
 100ec70:	sahf   
 100ec71:	mov    BYTE PTR [esi+0x0],dh
 100ec74:	cwde   
 100ec75:	mov    DWORD PTR [edi+0x0],edi
 100ec78:	mov    ds:0xa1007587,al
 100ec7d:	mov    BYTE PTR [esi+0x0],dh
 100ec80:	mov    ds:0xa4007889,al
 100ec85:	mov    WORD PTR [edx+0x0],?
 100ec88:	mov    al,ds:0xa4007d8b
 100ec8d:	lea    edi,[eax+eax*1-0x55]
 100ec91:	(bad)  
 100ec92:	jnp    0x100ec94
 100ec94:	mov    ah,0x94
 100ec96:	jle    0x100ec98
 100ec98:	and    DWORD PTR [ebp-0x7d],esp
 100ec9b:	add    BYTE PTR ds:0x3e008260,ch
 100eca1:	jo     0x100ec2a
 100eca3:	add    BYTE PTR [ebx+esi*2],ch
 100eca6:	call   0x300:0x92723700
 100ecad:	ja     0x100ec63
 100ecaf:	add    BYTE PTR [edx],al
 100ecb1:	jns    0x100ec68
 100ecb3:	add    BYTE PTR [edi+0x6f],al
 100ecb6:	mov    al,BYTE PTR [eax]
 100ecb8:	pop    esi
 100ecb9:	je     0x100ec43
 100ecbb:	add    BYTE PTR [edi+0x7d],ch
 100ecbe:	mov    al,BYTE PTR [eax]
 100ecc0:	outs   dx,BYTE PTR ds:[esi]
 100ecc1:	jle    0x100ec4f
 100ecc3:	add    BYTE PTR [edx+0x79],dh
 100ecc6:	add    DWORD PTR [eax],0x78
 100ecc9:	js     0x100ec4d
 100eccb:	add    BYTE PTR [ebx+0x7d],dh
 100ecce:	mov    WORD PTR [eax],es
 100ecd0:	mov    bh,BYTE PTR [esi-0x7d]
 100ecd3:	add    BYTE PTR [eax],al
 100ecd5:	add    BYTE PTR [eax],al
 100ecd7:	add    BYTE PTR ds:0x3400bd91,bl
 100ecdd:	xchg   ebp,eax
 100ecde:	mov    esp,0x9d907300
 100ece3:	add    BYTE PTR [edx-0x7f],al
 100ece6:	mov    al,ds:0xaa8d4f00
 100eceb:	add    BYTE PTR [ebx-0x68],dl
 100ecee:	mov    ch,0x0
 100ecf0:	pop    ebp
 100ecf1:	popf   
 100ecf2:	mov    bh,0x0
 100ecf4:	push   edx
 100ecf5:	call   0xb8:0x9b5400b8
 100ecfc:	push   esi
 100ecfd:	pushf  
 100ecfe:	mov    ecx,0xab996800
 100ed03:	add    BYTE PTR [ebx-0x5d],dh
 100ed06:	mov    dh,0x0
 100ed08:	add    al,0x85
 100ed0a:	leave  
 100ed0b:	add    BYTE PTR [esi],dl
 100ed0d:	xchg   edi,eax
 100ed0e:	int3   
 100ed0f:	add    BYTE PTR [ecx],al
 100ed11:	mov    dl,bl
 100ed13:	add    BYTE PTR [ecx],al
 100ed15:	mov    ebx,ss
 100ed17:	add    BYTE PTR [esi],al
 100ed19:	(bad)  
 100ed1a:	rol    BYTE PTR [eax],1
 100ed1c:	add    DWORD PTR [edx-0x6effff2c],ecx
 100ed22:	fild   DWORD PTR [eax]
 100ed24:	add    BYTE PTR [ecx-0x68d3ff24],dl
 100ed2a:	les    eax,FWORD PTR [eax]
 100ed2c:	cs cdq 
 100ed2e:	rol    DWORD PTR [eax],0x39
 100ed31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100ed32:	mov    BYTE PTR [eax],0x0
 100ed35:	cwde   
 100ed36:	jecxz  0x100ed38
 100ed38:	add    BYTE PTR [ecx-0x60ffff1b],bl
 100ed3e:	out    0x0,al
 100ed40:	add    BYTE PTR [ebx-0x54d2ff19],ah
 100ed46:	loopne 0x100ed48
 100ed48:	xor    dh,BYTE PTR [ecx-0x45cfff1e]
 100ed4e:	in     al,dx
 100ed4f:	add    BYTE PTR [edx+edi*4],dh
 100ed52:	in     eax,dx
 100ed53:	add    BYTE PTR ds:0x2a00e8bb,bh
 100ed59:	mov    edx,0xaa6e00f0
 100ed5e:	rol    BYTE PTR [eax],0x69
 100ed61:	stos   DWORD PTR es:[edi],eax
 100ed62:	mov    BYTE PTR [eax],0x69
 100ed65:	lods   al,BYTE PTR ds:[esi]
 100ed66:	mov    DWORD PTR [eax],0xedc03d
 100ed6c:	push   edi
 100ed6d:	(bad)  
 100ed6e:	in     eax,dx
 100ed6f:	add    BYTE PTR [edx+ecx*8-0x12],dl
 100ed73:	add    BYTE PTR [esi-0x34],dl
 100ed76:	out    dx,al
 100ed77:	add    BYTE PTR [eax-0x34],bl
 100ed7a:	out    dx,al
 100ed7b:	add    BYTE PTR [ecx+ecx*8-0xf],cl
 100ed7f:	add    BYTE PTR [ecx-0x33],dl
 100ed82:	hlt    
 100ed83:	add    BYTE PTR [eax-0x34],bl
 100ed86:	lock add BYTE PTR [esi-0x40],bh
 100ed8a:	in     eax,0x0
 100ed8c:	jo     0x100ed57
 100ed8e:	loopne 0x100ed90
 100ed90:	jnp    0x100ed54
 100ed92:	jmp    0x6c00:0xedd46e00
 100ed99:	aad    0xf2
 100ed9b:	add    BYTE PTR [eax-0x28],dh
 100ed9e:	icebp  
 100ed9f:	add    BYTE PTR [edx-0x23],bh
 100eda2:	repnz add BYTE PTR [ebp-0x24],bh
 100eda6:	test   BYTE PTR [eax],0x50
 100eda9:	cmc    
 100edaa:	inc    DWORD PTR [eax]
 100edac:	jp     0x100ed90
 100edae:	sti    
 100edaf:	add    BYTE PTR [esp+eax*4-0x797aff7c],cl
 100edb6:	mov    es,WORD PTR [eax]
 100edb8:	xchg   edx,eax
 100edb9:	mov    al,BYTE PTR [esi-0x7d736400]
 100edbf:	add    BYTE PTR [eax-0x73ff7474],dl
 100edc5:	nop
 100edc6:	xchg   edi,eax
 100edc7:	add    BYTE PTR [eax-0x59ff686d],bl
 100edcd:	xchg   ebx,eax
 100edce:	xchg   BYTE PTR [eax],al
 100edd0:	test   eax,0xac008192
 100edd5:	xchg   ebx,eax
 100edd6:	add    BYTE PTR [eax],0xaf
 100edd9:	xchg   esi,eax
 100edda:	add    DWORD PTR [eax],0xffffffab
 100eddd:	xchg   esp,eax
 100edde:	test   DWORD PTR [eax],eax
 100ede0:	scas   al,BYTE PTR es:[edi]
 100ede1:	xchg   esi,eax
 100ede2:	test   BYTE PTR [eax],al
 100ede4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100ede5:	xchg   esp,eax
 100ede6:	mov    BYTE PTR [eax],al
 100ede8:	test   al,0x94
 100edea:	mov    BYTE PTR [eax],al
 100edec:	mov    al,0x96
 100edee:	add    DWORD PTR [eax],0xffffffb5
 100edf1:	call   0x89:0x99b00086
 100edf8:	mov    bl,0x9c
 100edfa:	mov    al,BYTE PTR [eax]
 100edfc:	mov    cl,0x9d
 100edfe:	lea    eax,[eax]
 100ee00:	mov    ch,0x9e
 100ee02:	mov    WORD PTR [eax],es
 100ee04:	mov    dh,0xa0
 100ee06:	pop    DWORD PTR [eax]
 100ee08:	mov    esp,0xaa008ba1
 100ee0d:	mov    ds:0xa0b3009b,al
 100ee12:	xchg   edx,eax
 100ee13:	add    BYTE PTR [edi-0x4dff6f5f],dh
 100ee19:	mov    eax,ds:0xa1b80095
 100ee1e:	xchg   ecx,eax
 100ee1f:	add    BYTE PTR [ecx-0x45ff6c5c],bh
 100ee25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100ee26:	xchg   esp,eax
 100ee27:	add    BYTE PTR [ebp-0x41ff6b5c],bh
 100ee2d:	test   eax,0xa080009a
 100ee32:	mov    eax,ds:0xafa59a00
 100ee37:	add    dl,al
 100ee39:	lods   al,BYTE PTR ds:[esi]
 100ee3a:	fwait
 100ee3b:	add    ah,al
 100ee3d:	scas   al,BYTE PTR es:[edi]
 100ee3e:	mov    al,ds:0xa1b0c500
 100ee43:	add    cl,cl
 100ee45:	mov    ch,0xa6
 100ee47:	add    dh,al
 100ee49:	mov    edx,0xbaca00ae
 100ee4e:	scas   al,BYTE PTR es:[edi]
 100ee4f:	add    ah,cl
 100ee51:	mov    ebp,0xbbc000b1
 100ee56:	mov    ebx,0xb3c0ce00
 100ee5b:	add    bl,dl
 100ee5d:	shl    DWORD PTR [ebx-0x453b2f00],0x0
 100ee64:	fcmovnb st,st(4)
 100ee66:	mov    eax,0xbdc8d700
 100ee6b:	add    dh,ch
 100ee6d:	(bad)  
 100ee6e:	mov    bl,0x0
 100ee70:	out    dx,eax
 100ee71:	int3   
 100ee72:	mov    ebx,0xcebd8a00
 100ee77:	add    BYTE PTR [edi-0x66ff2541],dl
 100ee7d:	ret    
 100ee7e:	fld    DWORD PTR [eax]
 100ee80:	lahf   
 100ee81:	(bad)  
 100ee82:	loope  0x100ee84
 100ee84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100ee85:	fsubr  st(5),st
 100ee87:	add    BYTE PTR [edi-0x76ff101f],dl
 100ee8d:	jecxz  0x100ee85
 100ee8f:	add    BYTE PTR [ecx-0x61ff091c],dl
 100ee95:	jmp    0xe1a8ef90
 100ee9a:	out    0x0,eax
 100ee9c:	stos   DWORD PTR es:[edi],eax
 100ee9d:	in     eax,0xec
 100ee9f:	add    BYTE PTR [eax-0x55ff0915],ah
 100eea5:	lock clc 
 100eea7:	add    BYTE PTR [ebx-0x45ff050c],dh
 100eead:	idiv   esp
 100eeaf:	add    BYTE PTR [edx-0x43ff0208],bh
 100eeb5:	(bad)  
 100eeb6:	inc    DWORD PTR [eax]
 100eeb8:	ret    0xcbc6
 100eebb:	add    ah,dl
 100eebd:	enter  0xc0,0xd9
 100eec1:	int    0xc2
 100eec3:	add    bl,bl
 100eec5:	rol    edi,1
 100eec7:	add    dh,bl
 100eec9:	ror    dl,cl
 100eecb:	add    cl,dl
 100eecd:	rcl    ah,cl
 100eecf:	add    dh,bl
 100eed1:	fcom   st(0)
 100eed3:	add    ah,dl
 100eed5:	aad    0xd9
 100eed7:	add    bh,dl
 100eed9:	fcmovu st,st(7)
 100eedb:	add    dl,dh
 100eedd:	rol    ebp,cl
 100eedf:	add    bl,bh
 100eee1:	(bad)  
 100eee3:	add    bh,ah
 100eee5:	(bad)  
 100eee7:	add    cl,ch
 100eee9:	loope  0x100eec4
 100eeeb:	add    dl,bh
 100eeed:	loope  0x100eec0
 100eeef:	add    al,dh
 100eef1:	loop   0x100eecc
 100eef3:	add    bh,dh
 100eef5:	jecxz  0x100eed1
 100eef7:	add    bh,dh
 100eef9:	in     al,0xdb
 100eefb:	add    bh,dh
 100eefd:	in     al,0xdc
 100eeff:	add    dl,al
 100ef01:	(bad)  
 100ef02:	inc    DWORD PTR [eax]
 100ef04:	int3   
 100ef05:	(bad)  
 100ef06:	inc    DWORD PTR [eax]
 100ef08:	sar    edi,cl
 100ef0a:	inc    DWORD PTR [eax]
 100ef0c:	in     al,dx
 100ef0d:	out    0xe2,al
 100ef0f:	add    bh,ch
 100ef11:	jmp    0x100eefb
 100ef13:	add    dl,dh
 100ef15:	out    0xe1,eax
 100ef17:	add    cl,dh
 100ef19:	in     eax,dx
 100ef1a:	jmp    0xf800:0xedf1fa00
 100ef21:	cmc    
 100ef22:	repnz add bl,bh
 100ef25:	stc    
 100ef26:	test   DWORD PTR [eax],0xfefefe
 100ef2c:	add    BYTE PTR [eax],al
 100ef2e:	add    BYTE PTR [eax],al
 100ef30:	(bad)  
 100ef31:	(bad)  
 100ef32:	inc    BYTE PTR [eax]
 100ef34:	add    BYTE PTR [eax],al
 100ef36:	add    BYTE PTR [eax],al
 100ef38:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 in eax,0x62
 100ef46:	add    dh,BYTE PTR [edx]
 100ef48:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 das 
 100ef52:	sub    esp,DWORD PTR [edi+0x67]
 100ef55:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100ef63:	addr16 mov edi,0x33057d85
 100ef69:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 inc ecx
 100ef71:	sub    ecx,esi
 100ef73:	mov    cl,0x67
 100ef75:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100ef83:	addr16 bound eax,QWORD PTR [di+0x368]
 100ef89:	mov    ds:0x67676767,eax
 100ef8e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
 100ef90:	sub    esi,eax
 100ef92:	out    0xb7,al
 100ef94:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100efa2:	addr16 addr16 addr16 bound eax,QWORD PTR [di+0x47d]
 100efaa:	lahf   
 100efab:	addr16 addr16 addr16 dec ebx
 100efaf:	sub    esi,ecx
 100efb1:	out    0xb7,al
 100efb3:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100efc1:	addr16 addr16 addr16 addr16 addr16 bound eax,QWORD PTR [di+0x1b7d]
 100efcb:	cmp    WORD PTR [bp+di],bp
 100efcf:	icebp  
 100efd0:	out    0xb7,al
 100efd2:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100efe0:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 bound eax,QWORD PTR [di+0x1e7c]
 100efec:	inc    esp
 100efed:	sub    esi,ecx
 100efef:	out    0xb7,al
 100eff1:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec ecx
 100effa:	adc    ah,BYTE PTR [edi+0x49]
 100effd:	adc    ah,BYTE PTR [edi+0x49]
 100f000:	adc    ah,BYTE PTR [edi+0x49]
 100f003:	adc    ah,BYTE PTR [edi+0x67]
 100f006:	addr16 addr16 bound eax,QWORD PTR [di+0x2b3e]
 100f00d:	stc    
 100f00e:	out    0xb7,al
 100f010:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec edx
 100f01a:	dec    ecx
 100f01b:	addr16 dec edx
 100f01d:	dec    ecx
 100f01e:	addr16 dec edx
 100f020:	dec    ecx
 100f021:	addr16 dec edx
 100f023:	dec    ecx
 100f024:	addr16 addr16 addr16 addr16 addr16 addr16 ds sub edi,ebx
 100f02d:	out    0xb7,al
 100f02f:	addr16 addr16 addr16 addr16 addr16 sub DWORD PTR [si+0x6767],ebp
 100f039:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f047:	addr16 addr16 ds sub edi,esp
 100f04c:	out    0xb7,al
 100f04e:	pop    edx
 100f04f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100f050:	addr16 addr16 addr16 sub DWORD PTR [di-0x47c6],esp
 100f058:	addr16 dec ecx
 100f05a:	adc    ah,BYTE PTR [edi+0x67]
 100f05d:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
 100f069:	sub    edi,esp
 100f06b:	out    0xb7,al
 100f06d:	test   DWORD PTR [ecx+0x34],ebp
 100f070:	mov    eax,ds:0x29ab6767
 100f075:	jmp    0x4b681a40
 100f07a:	dec    ecx
 100f07b:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec esp
 100f088:	sub    edi,esp
 100f08a:	out    0xb7,al
 100f08c:	bound  ebp,QWORD PTR [bp+si-0x42]
 100f090:	inc    edi
 100f091:	cmp    eax,0x38b12c37
 100f096:	sub    DWORD PTR [edi+0x67],esp
 100f099:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
 100f0a4:	dec    esp
 100f0a5:	aas    
 100f0a6:	das    
 100f0a7:	sub    edi,esp
 100f0a9:	out    0xb7,al
 100f0ab:	addr16 addr16 addr16 mov eax,ds:0xc1ca
 100f0b1:	mov    esp,0x672f52af
 100f0b6:	addr16 addr16 addr16 dec ecx
 100f0ba:	adc    ah,BYTE PTR [edi+0x67]
 100f0bd:	addr16 addr16 addr16 addr16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
 100f0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100f0c4:	push   ebx
 100f0c5:	push   edx
 100f0c6:	dec    ebp
 100f0c7:	(bad)  
 100f0c8:	out    0xb7,al
 100f0ca:	addr16 addr16 addr16 addr16 shl ah,0xf9
 100f0d1:	out    dx,eax
 100f0d2:	jmp    0x68682b29
 100f0d7:	addr16 addr16 dec edx
 100f0da:	dec    ecx
 100f0db:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 mov ecx,0xc9c6e4e4
 100f0e7:	push   ebp
 100f0e8:	inc    esi
 100f0e9:	(bad)
 100f0f1:	stc    
 100f0f2:	int    0x4e
 100f0f4:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f102:	mov    al,0x67
 100f104:	addr16 lds ebp,FWORD PTR [bx+di+0x674d]
 100f10a:	addr16 addr16 addr16 addr16 mov dh,0xf8
 100f110:	cld    
 100f111:	int    0x4e
 100f113:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f121:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
 100f123:	addr16 addr16 addr16 in al,0xbd
 100f128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100f129:	addr16 addr16 addr16 addr16 addr16 dec ebp
 100f12f:	cld    
 100f130:	retf   
 100f131:	dec    esi
 100f132:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f140:	(bad)
 100f149:	addr16 addr16 addr16 addr16 dec ebp
 100f14e:	mov    cl,0x4e
 100f150:	dec    esi
 100f151:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f15f:	addr16 addr16 addr16 addr16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
 100f165:	mov    al,0xb2
 100f167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100f168:	addr16 addr16 dec esi
 100f16b:	dec    esi
 100f16c:	dec    esi
 100f16d:	dec    esi
 100f16e:	dec    esi
 100f16f:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 imul esi,DWORD PTR [bx+di],0x31
 100f17d:	xor    DWORD PTR [ecx],esi
 100f17f:	and    esi,DWORD PTR [ecx]
 100f181:	and    DWORD PTR [edi+0x67],esp
 100f184:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f192:	addr16 addr16 addr16 addr16 addr16 addr16 imul esi,DWORD PTR [di+0x7e],0xffffff95
 100f19d:	xchg   edi,eax
 100f19e:	xchg   DWORD PTR [eax+0x5e],edi
 100f1a1:	pop    ebp
 100f1a2:	and    DWORD PTR [edi+0x67],esp
 100f1a5:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f1b3:	addr16 addr16 addr16 addr16 addr16 addr16 pop esp
 100f1ba:	test   BYTE PTR [esi+0x7f8c999a],cl
 100f1c0:	jp     0x100f236
 100f1c2:	and    DWORD PTR [edi+0x67],esp
 100f1c5:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec ecx
 100f1d1:	adc    ah,BYTE PTR [edi+0x67]
 100f1d4:	addr16 addr16 addr16 addr16 addr16 pop esp
 100f1da:	test   DWORD PTR [edi+0x7f8c999a],ecx
 100f1e0:	jp     0x100f259
 100f1e2:	and    DWORD PTR [edi+0x67],esp
 100f1e5:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec edx
 100f1f1:	dec    ecx
 100f1f2:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 pop esp
 100f1fa:	test   DWORD PTR [edi+0x7f8c999a],ecx
 100f200:	jp     0x100f279
 100f202:	and    DWORD PTR [edi+0x67],esp
 100f205:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f213:	addr16 addr16 addr16 addr16 addr16 addr16 pop esp
 100f21a:	test   DWORD PTR [edi+0x7f8c999a],ecx
 100f220:	jnp    0x100f29b
 100f222:	and    DWORD PTR [edi+0x67],esp
 100f225:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec ecx
 100f231:	adc    ah,BYTE PTR [edi+0x67]
 100f234:	addr16 addr16 addr16 addr16 imul eax,DWORD PTR [bp-0x656d],0xffffff99
 100f23e:	mov    WORD PTR [edi+0x7b],?
 100f241:	ja     0x100f265
 100f243:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec edx
 100f251:	dec    ecx
 100f252:	addr16 addr16 addr16 addr16 addr16 addr16 ins BYTE PTR es:[di],dx
 100f25a:	xchg   BYTE PTR [eax-0x7f736666],dl
 100f260:	jp     0x100f2d9
 100f262:	and    eax,0x67676767
 100f267:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f275:	addr16 addr16 addr16 ins DWORD PTR es:[di],dx
 100f27a:	test   DWORD PTR [ebx+0x7f8c999a],edx
 100f280:	jp     0x100f2f9
 100f282:	and    eax,0x67676767
 100f287:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec ecx
 100f291:	adc    ah,BYTE PTR [edi+0x67]
 100f294:	addr16 addr16 addr16 addr16 outs dx,BYTE PTR ds:[si]
 100f29a:	test   DWORD PTR [edi+0x7f8c999a],ecx
 100f2a0:	jp     0x100f318
 100f2a2:	pop    ecx
 100f2a3:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 dec edx
 100f2b1:	dec    ecx
 100f2b2:	addr16 addr16 addr16 addr16 addr16 addr16 outs dx,BYTE PTR ds:[si]
 100f2ba:	xchg   ebx,eax
 100f2bb:	aad    0xdb
 100f2bd:	fstp   st(4)
 100f2bf:	fwait
 100f2c0:	lea    eax,[ebx+0x67676759]
 100f2c6:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f2d4:	addr16 addr16 addr16 addr16 outs dx,BYTE PTR ds:[si]
 100f2da:	(bad)  
 100f2dc:	(bad)  
 100f2de:	(bad)  
 100f2e0:	(bad)  
 100f2e2:	pop    ecx
 100f2e3:	addr16 addr16 addr16 addr16 dec ecx
 100f2e8:	adc    ah,BYTE PTR [edi+0x49]
 100f2eb:	adc    ah,BYTE PTR [edi+0x49]
 100f2ee:	adc    ah,BYTE PTR [edi+0x49]
 100f2f1:	adc    ah,BYTE PTR [edi+0x67]
 100f2f4:	addr16 addr16 addr16 addr16 addr16 mov edx,edx
 100f2fb:	rcr    cl,cl
 100f2fd:	fstp   st(5)
 100f2ff:	fcom   st(3)
 100f301:	rcr    DWORD PTR [ecx+0x67],cl
 100f304:	addr16 addr16 addr16 dec edx
 100f308:	dec    ecx
 100f309:	addr16 dec edx
 100f30b:	dec    ecx
 100f30c:	addr16 dec edx
 100f30e:	dec    ecx
 100f30f:	addr16 dec edx
 100f311:	dec    ecx
 100f312:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 mov DWORD PTR [bp+di-0x7576],ecx
 100f31e:	mov    cl,BYTE PTR [edx+0x6767728b]
 100f324:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16 addr16
 100f332:	addr16 addr16 addr16 addr16 addr16 addr16 push eax
 100f33a:	call   FWORD PTR [edi+0xf7ff0ff]
 100f340:	(bad)  
 100f341:	clc    
 100f342:	ds ud0 edi,esp
 100f346:	sbb    al,0x1f
 100f348:	(bad)  
 100f349:	dec    BYTE PTR [eax]
 100f34b:	aas    
 100f34c:	(bad)  
 100f34d:	inc    DWORD PTR [eax]
 100f34f:	jg     0x100f2e3
 100f351:	dec    edi
 100f352:	cmp    bh,0x92
 100f355:	dec    edi
 100f356:	sar    ecx,0xff
 100f359:	inc    DWORD PTR [eax+0xff9ff0]
 100f35f:	pusha  
 100f360:	lahf   
 100f361:	dec    BYTE PTR [eax]
 100f363:	add    edi,edi
 100f365:	loopne 0x100f383
 100f367:	pop    es
 100f368:	lahf   
 100f369:	sar    BYTE PTR [edi+eax*1],0x9f
 100f36d:	sar    BYTE PTR [edi+ecx*1-0x1],0xdc
 100f372:	jl     0x100f393
 100f374:	(bad)  
 100f375:	fdivr  QWORD PTR [edi+edi*1-0x1]
 100f379:	cld    
 100f37a:	js     0x100f3fb
 100f37c:	push   eax
 100f37e:	sar    edi,0xc0
 100f381:	aas    
 100f382:	(bad)  
 100f383:	inc    DWORD PTR [eax-0x7f0000e1]
 100f389:	pop    ds
 100f38a:	(bad)  
 100f38b:	aas    
 100f38c:	sbb    BYTE PTR [edi],0xff
 100f38f:	aas    
 100f390:	sbb    BYTE PTR [edi],0xff
 100f393:	inc    DWORD PTR [eax-0x7fc000e1]
 100f399:	pop    ds
 100f39a:	(bad)  
 100f39b:	aas    
 100f39c:	sbb    BYTE PTR [edi],0xff
 100f39f:	inc    DWORD PTR [eax-0x7fc000e1]
 100f3a5:	pop    ds
 100f3a6:	(bad)  
 100f3a7:	aas    
 100f3a8:	sbb    BYTE PTR [edi],0xff
 100f3ab:	inc    DWORD PTR [eax-0x7fc0b6e2]
 100f3b1:	push   ds
 100f3b2:	dec    ecx
 100f3b3:	aas    
 100f3b4:	sar    BYTE PTR [edi],0xff
 100f3b7:	jmp    FWORD PTR [eax]
 100f3b9:	add    BYTE PTR [eax],al
 100f3bb:	add    BYTE PTR [eax],ah
 100f3bd:	add    BYTE PTR [eax],al
 100f3bf:	add    BYTE PTR [eax+0x0],al
 100f3c2:	add    BYTE PTR [eax],al
 100f3c4:	add    DWORD PTR [eax],eax
 100f3c6:	and    BYTE PTR [eax],al
 100f3c8:	add    BYTE PTR [eax],al
 100f3ca:	add    BYTE PTR [eax],al
 100f3cc:	adc    BYTE PTR [eax],0x0
	...
 100f40f:	add    cl,dl
 100f411:	rcl    ah,cl
 100f413:	jmp    FWORD PTR [esi+0x7e]
 100f416:	mov    edi,?
 100f418:	sbb    esp,DWORD PTR ds:0x6363ff2f
 100f41e:	push   0xff
	...
 100f443:	add    BYTE PTR [esi+0x63],bh
 100f446:	push   eax
 100f447:	push   DWORD PTR [ebp+0x59]
 100f44a:	inc    esp
 100f44b:	inc    DWORD PTR [eax]
	...
 100f48d:	add    BYTE PTR [eax],al
 100f48f:	add    BYTE PTR [edx+0x30ffafa5],bl
 100f495:	mov    edx,0x992effec
 100f49a:	sar    edi,0x18
 100f49d:	sub    eax,0x6e74ff3b
 100f4a2:	jno    0x100f4a3
	...
 100f4c0:	mov    esi,DWORD PTR [ebx+eiz*2-0x1]
 100f4c4:	jne    0x100f51f
 100f4c6:	inc    esp
 100f4c7:	(bad)  
 100f4c8:	out    dx,eax
 100f4c9:	int3   
 100f4ca:	mov    ebx,0x8d9db1ff
 100f4cf:	inc    DWORD PTR [eax]
	...
 100f511:	add    BYTE PTR [eax],al
 100f513:	add    BYTE PTR [esi+0x7e],ch
 100f516:	mov    edi,?
 100f518:	xor    BYTE PTR [edx-0x6ee20014],bh
 100f51e:	mov    ebp,0x372812ff
 100f523:	dec    DWORD PTR [eax+edx*4+0xff97]
	...
 100f53a:	add    BYTE PTR [eax],al
 100f53c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100f53d:	xchg   ebx,eax
 100f53e:	xchg   bh,bh
 100f540:	jne    0x100f59b
 100f542:	inc    esp
 100f543:	push   edi
 100f545:	in     al,0xdb
 100f547:	(bad)  
 100f548:	(bad)  
 100f54a:	sar    bh,1
 100f54c:	mov    bh,0xa1
 100f54e:	nop
 100f54f:	inc    DWORD PTR [eax]
	...
 100f595:	add    BYTE PTR [eax],al
 100f597:	add    BYTE PTR [esi+0x7e],ch
 100f59a:	mov    edi,?
 100f59c:	xor    BYTE PTR [edx-0x66d10014],bh
 100f5a2:	sar    edi,0x19
 100f5a5:	sub    BYTE PTR [esi],dh
 100f5a7:	inc    DWORD PTR [ebp+0xff8e86]
	...
 100f5b5:	add    BYTE PTR [eax],al
 100f5b7:	add    BYTE PTR [ecx+0x75ff6e81],bl
 100f5bd:	pop    ecx
 100f5be:	inc    esp
 100f5bf:	push   edi
 100f5c1:	in     al,0xdc
 100f5c3:	(bad)  
 100f5c4:	(bad)  
 100f5c6:	sar    bh,1
 100f5c8:	mov    bh,0xa1
 100f5ca:	nop
 100f5cb:	inc    DWORD PTR [eax]
	...
 100f619:	add    BYTE PTR [eax],al
 100f61b:	add    BYTE PTR [esi+0x7e],ch
 100f61e:	mov    edi,?
 100f620:	xor    BYTE PTR [edx-0x66d10014],bh
 100f626:	sar    edi,0x1f
 100f629:	inc    esp
 100f62a:	pop    ecx
 100f62b:	dec    DWORD PTR [edx+0xff837e]
 100f631:	add    BYTE PTR [eax],al
 100f633:	add    BYTE PTR [esp+ebp*2+0x5975ff5a],al
 100f63a:	inc    esp
 100f63b:	push   edi
 100f63d:	in     al,0xdc
 100f63f:	(bad)  
 100f640:	(bad)  
 100f642:	sar    bh,1
 100f644:	mov    bh,0xa1
 100f646:	nop
 100f647:	inc    DWORD PTR [eax]
	...
 100f69d:	add    BYTE PTR [eax],al
 100f69f:	add    BYTE PTR [esi+0x7e],ch
 100f6a2:	mov    edi,?
 100f6a4:	xor    BYTE PTR [edx-0x68d30014],bh
 100f6aa:	(bad)  
 100f6ab:	jmp    FWORD PTR [edx]
 100f6ad:	dec    eax
 100f6ae:	pop    ecx
 100f6af:	dec    DWORD PTR [ebx+0x75ff6a77]
 100f6b5:	pop    ecx
 100f6b6:	inc    esp
 100f6b7:	push   edi
 100f6b9:	in     al,0xdc
 100f6bb:	(bad)  
 100f6bc:	(bad)  
 100f6be:	sar    bh,1
 100f6c0:	mov    bh,0xa1
 100f6c2:	nop
 100f6c3:	inc    DWORD PTR [eax]
	...
 100f6e1:	add    BYTE PTR [eax],al
 100f6e3:	add    BYTE PTR [esi+edx*4+0x54],cl
 100f6e7:	push   DWORD PTR [edi+eiz*2]
 100f6ea:	cmp    al,0xff
 100f6ec:	add    BYTE PTR [eax],al
 100f6ee:	add    BYTE PTR [eax],al
 100f6f0:	dec    esp
 100f6f1:	xchg   esi,eax
 100f6f2:	push   esp
 100f6f3:	push   DWORD PTR [edi+eiz*2]
 100f6f6:	cmp    al,0xff
 100f6f8:	add    BYTE PTR [eax],al
 100f6fa:	add    BYTE PTR [eax],al
 100f6fc:	dec    esp
 100f6fd:	xchg   esi,eax
 100f6fe:	push   esp
 100f6ff:	push   DWORD PTR [edi+eiz*2]
 100f702:	cmp    al,0xff
 100f704:	add    BYTE PTR [eax],al
 100f706:	add    BYTE PTR [eax],al
 100f708:	dec    esp
 100f709:	xchg   esi,eax
 100f70a:	push   esp
 100f70b:	push   DWORD PTR [edi+eiz*2]
 100f70e:	cmp    al,0xff
	...
 100f724:	outs   dx,BYTE PTR ds:[esi]
 100f725:	jle    0x100f6b3
 100f727:	push   DWORD PTR [eax]
 100f729:	mov    edx,0x7386ffec
 100f72e:	push   DWORD PTR gs:[ebp+0x59]
 100f732:	inc    esp
 100f733:	(bad)  
 100f734:	cli    
 100f735:	icebp  
 100f736:	in     eax,dx
 100f737:	(bad)  
 100f738:	(bad)  
 100f73a:	sar    bh,1
 100f73c:	mov    bh,0xa1
 100f73e:	nop
 100f73f:	inc    DWORD PTR [eax]
	...
 100f761:	add    BYTE PTR [eax],al
 100f763:	add    BYTE PTR [eax-0x54],bl
 100f766:	pop    edi
 100f767:	dec    DWORD PTR [esi+edx*4+0x54]
 100f76b:	inc    DWORD PTR [eax]
 100f76d:	add    BYTE PTR [eax],al
 100f76f:	add    BYTE PTR [eax-0x54],bl
 100f772:	pop    edi
 100f773:	dec    DWORD PTR [esi+edx*4+0x54]
 100f777:	inc    DWORD PTR [eax]
 100f779:	add    BYTE PTR [eax],al
 100f77b:	add    BYTE PTR [eax-0x54],bl
 100f77e:	pop    edi
 100f77f:	dec    DWORD PTR [esi+edx*4+0x54]
 100f783:	inc    DWORD PTR [eax]
 100f785:	add    BYTE PTR [eax],al
 100f787:	add    BYTE PTR [eax-0x54],bl
 100f78a:	pop    edi
 100f78b:	dec    DWORD PTR [esi+edx*4+0x54]
 100f78f:	inc    DWORD PTR [eax]
	...
 100f7a5:	add    BYTE PTR [eax],al
 100f7a7:	add    BYTE PTR [esi+0x75ff6573],al
 100f7ad:	pop    ecx
 100f7ae:	inc    esp
 100f7af:	(bad)  
 100f7b0:	sti    
 100f7b1:	stc    
 100f7b2:	idiv   edi
 100f7b4:	(bad)  
 100f7b6:	sar    bh,1
 100f7b8:	mov    bh,0xa1
 100f7ba:	nop
 100f7bb:	inc    DWORD PTR [eax]
	...
 100f7d1:	add    BYTE PTR [eax],al
 100f7d3:	add    BYTE PTR [edx+0x55],dh
 100f7d6:	inc    eax
 100f7d7:	jmp    FWORD PTR [eax+0xff8894]
	...
 100f821:	add    BYTE PTR [eax],al
 100f823:	add    BYTE PTR [esi+0x75ff6573],al
 100f829:	pop    ecx
 100f82a:	inc    esp
 100f82b:	(bad)  
 100f82c:	(bad)  
 100f82d:	(bad)  
 100f82e:	(bad)  
 100f82f:	(bad)  
 100f830:	(bad)  
 100f832:	sar    bh,1
 100f834:	mov    bh,0xa1
 100f836:	nop
 100f837:	(bad)  
 100f838:	ds jo  0x100f7c2
 100f83b:	call   FWORD PTR [eax+0xff9793]
	...
 100f84d:	add    BYTE PTR [eax],al
 100f84f:	add    BYTE PTR [edx+0x55],dh
 100f852:	inc    eax
 100f853:	jmp    DWORD PTR [esi-0x7600796d]
 100f859:	outs   dx,BYTE PTR ds:[esi]
 100f85a:	pop    ebx
 100f85b:	push   DWORD PTR [edx+0xff95a1]
 100f861:	add    BYTE PTR [eax],al
 100f863:	add    BYTE PTR [esi+edx*4+0x54],cl
 100f867:	push   DWORD PTR [edi+eiz*2]
 100f86a:	cmp    al,0xff
	...
 100f8a0:	test   eax,0x75ff8192
 100f8a5:	pop    ecx
 100f8a6:	inc    esp
 100f8a7:	(bad)  
 100f8a8:	(bad)  
 100f8a9:	(bad)  
 100f8aa:	(bad)  
 100f8ab:	(bad)  
 100f8ac:	(bad)  
 100f8ae:	sar    bh,1
 100f8b0:	mov    bh,0xa1
 100f8b2:	nop
 100f8b3:	push   DWORD PTR [eax]
 100f8b5:	mov    edx,0x9534ffec
 100f8ba:	mov    esp,0x707378ff
 100f8bf:	call   FWORD PTR [esp+ecx*4+0xff82]
 100f8c6:	add    BYTE PTR [eax],al
 100f8c8:	add    BYTE PTR [eax],al
 100f8ca:	add    BYTE PTR [eax],al
 100f8cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100f8cd:	xchg   esp,eax
 100f8ce:	mov    bh,bh
 100f8d0:	jb     0x100f927
 100f8d2:	inc    eax
 100f8d3:	push   edx
 100f8d5:	rol    ebp,cl
 100f8d7:	dec    esp
 100f8d9:	mov    ebp,0x5572ffb1
 100f8de:	inc    eax
 100f8df:	inc    DWORD PTR [eax]
 100f8e1:	add    BYTE PTR [eax],al
 100f8e3:	add    BYTE PTR [eax-0x54],bl
 100f8e6:	pop    edi
 100f8e7:	dec    DWORD PTR [esi+edx*4+0x54]
 100f8eb:	inc    DWORD PTR [eax]
	...
 100f919:	add    BYTE PTR [eax],al
 100f91b:	add    BYTE PTR [edi+0x75ff7382],dl
 100f921:	pop    ecx
 100f922:	inc    esp
 100f923:	(bad)  
 100f924:	(bad)  
 100f925:	(bad)  
 100f926:	(bad)  
 100f927:	(bad)  
 100f928:	(bad)  
 100f92a:	sar    bh,1
 100f92c:	mov    bh,0xa1
 100f92e:	nop
 100f92f:	inc    DWORD PTR [eax]
 100f931:	add    BYTE PTR [eax],al
 100f933:	add    BYTE PTR [esi+0x7e],ch
 100f936:	mov    edi,?
 100f938:	jae    0x100f8ca
 100f93a:	popf   
 100f93b:	inc    DWORD PTR [eax-0x66005e60]
 100f941:	jle    0x100f9ae
 100f943:	call   DWORD PTR [ebx-0x7e00a08c]
 100f949:	arpl   WORD PTR [eax-0x1],dx
 100f94c:	jns    0x100f9ab
 100f94e:	dec    ecx
 100f94f:	push   DWORD PTR [ecx-0x78007263]
 100f955:	imul   edx,DWORD PTR [esi-0x1],0x72
 100f959:	push   ebp
 100f95a:	inc    eax
 100f95b:	inc    DWORD PTR [eax]
	...
 100f989:	add    BYTE PTR [eax],al
 100f98b:	add    BYTE PTR [ecx-0x68007e6e],ch
 100f991:	xor    BYTE PTR [ebx-0x1],0x8b
 100f995:	jb     0x100f9f8
 100f997:	(bad)  
 100f998:	jle    0x100f9fd
 100f99a:	push   eax
 100f99b:	push   DWORD PTR [ebp+0x59]
 100f99e:	inc    esp
 100f99f:	(bad)  
 100f9a0:	(bad)  
 100f9a1:	(bad)  
 100f9a2:	(bad)  
 100f9a3:	(bad)  
 100f9a4:	(bad)  
 100f9a6:	sar    bh,1
 100f9a8:	mov    bh,0xa1
 100f9aa:	nop
 100f9ab:	inc    DWORD PTR [eax]
	...
 100f9b5:	add    BYTE PTR [eax],al
 100f9b7:	add    BYTE PTR [esp+ecx*4-0x3b2e007e],bl
 100f9be:	mov    edx,0xa0aec4ff
 100f9c3:	(bad)  
 100f9c4:	mov    ebp,0xb0ff94a4
 100f9c9:	cdq    
 100f9ca:	mov    edi,edi
 100f9cc:	mov    ds:0x7eff7889,al
 100f9d1:	arpl   WORD PTR [eax-0x1],dx
	...
 100f9e4:	dec    esp
 100f9e5:	xchg   esi,eax
 100f9e6:	push   esp
 100f9e7:	push   DWORD PTR [edi+eiz*2]
 100f9ea:	cmp    al,0xff
	...
 100fa08:	test   eax,0xa9ff8192
 100fa0d:	xchg   edx,eax
 100fa0e:	cmp    edi,0xff7a8ca4
 100fa14:	mov    ds:0x9cff7889,al
 100fa19:	test   BYTE PTR [edx-0x1],dh
 100fa1c:	(bad)  
 100fa1d:	mov    edx,0xd8deffae
 100fa22:	sar    bh,1
 100fa24:	mov    bh,0xa1
 100fa26:	nop
 100fa27:	inc    DWORD PTR [eax]
	...
 100fa35:	add    BYTE PTR [eax],al
 100fa37:	add    dl,al
 100fa39:	lods   al,BYTE PTR ds:[esi]
 100fa3a:	fwait
 100fa3b:	(bad)  
 100fa3c:	(bad)  
 100fa3e:	retf   0xfaff
 100fa41:	icebp  
 100fa42:	in     eax,dx
 100fa43:	push   edi
 100fa45:	jecxz  0x100fa21
 100fa47:	push   edx
 100fa49:	rol    ebp,cl
 100fa4b:	jmp    DWORD PTR [edx-0x76008777]
 100fa51:	outs   dx,BYTE PTR ds:[esi]
 100fa52:	pop    ebx
 100fa53:	inc    DWORD PTR [eax]
	...
 100fa61:	add    BYTE PTR [eax],al
 100fa63:	add    BYTE PTR [eax-0x54],bl
 100fa66:	pop    edi
 100fa67:	dec    DWORD PTR [esi+edx*4+0x54]
 100fa6b:	inc    DWORD PTR [eax]
	...
 100fa85:	add    BYTE PTR [eax],al
 100fa87:	add    BYTE PTR [eax-0x21006e5f],bh
 100fa8d:	ror    dl,cl
 100fa8f:	(bad)  
 100fa90:	(bad)  
 100fa92:	retf   0xccff
 100fa95:	mov    ebp,0xc1d3ffb1
 100fa9a:	mov    bl,0xff
 100fa9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100fa9d:	lea    edi,[edi+edi*8-0x6d]
 100faa1:	jp     0x100fb0b
 100faa3:	inc    DWORD PTR [eax]
	...
 100fab5:	add    BYTE PTR [eax],al
 100fab7:	add    dl,cl
 100fab9:	mov    edx,0xdfe7ffae
 100fabe:	(bad)  
 100fac0:	(bad)  
 100fac1:	(bad)  
 100fac2:	(bad)  
 100fac3:	(bad)  
 100fac4:	cli    
 100fac5:	icebp  
 100fac6:	in     eax,dx
 100fac7:	(bad)  
 100fac8:	out    dx,al
 100fac9:	(bad)  
 100faca:	mov    bl,0xff
 100facc:	sahf   
 100facd:	mov    BYTE PTR [esi-0x1],dh
	...
 100fb08:	mov    bl,0x9c
 100fb0a:	mov    bh,bh
	...
 100fb18:	retf   0xaeba
 100fb1b:	jmp    FWORD PTR [ebx-0x63007a6c]
 100fb21:	test   BYTE PTR [edx-0x1],dh
	...
 100fb38:	mov    bl,0xa0
 100fb3a:	xchg   edx,eax
 100fb3b:	push   ecx
 100fb3d:	in     eax,dx
 100fb3e:	jmp    0xeeff:0xfefefeff
 100fb45:	(bad)  
 100fb46:	mov    bl,0xff
 100fb48:	sahf   
 100fb49:	mov    BYTE PTR [esi-0x1],dh
	...
 100fb88:	test   eax,0xff8192
	...
 100fb95:	add    BYTE PTR [eax],al
 100fb97:	add    dh,bl
 100fb99:	ror    dl,cl
 100fb9b:	(bad)  
 100fb9c:	mov    esi,0xa9ff9aa9
 100fba1:	xchg   edx,eax
 100fba2:	cmp    edi,0x0
	...
 100fbb8:	pushf  
 100fbb9:	test   BYTE PTR [edx-0x1],dh
 100fbbc:	(bad)  
 100fbbd:	(bad)  
 100fbbe:	(bad)  
 100fbbf:	(bad)  
 100fbc0:	fcmovnb st,st(4)
 100fbc2:	mov    eax,0x76889eff
 100fbc7:	inc    DWORD PTR [eax]
	...
 100fc15:	add    BYTE PTR [eax],al
 100fc17:	add    dl,cl
 100fc19:	mov    edx,0xacc2ffae
 100fc1e:	fwait
 100fc1f:	jmp    FWORD PTR [ecx+0xff8192]
	...
 100fc31:	add    BYTE PTR [eax],al
 100fc33:	add    BYTE PTR [esp+eax*4-0x624e008e],bl
 100fc3a:	(bad)  
 100fc3b:	call   FWORD PTR [esi-0x61008978]
 100fc41:	mov    BYTE PTR [esi-0x1],dh
	...
 100fc90:	test   eax,0xb3ff8192
 100fc95:	pushf  
 100fc96:	mov    bh,bh
 100fc98:	mov    ch,0x9e
 100fc9a:	mov    edi,?
 100fc9c:	test   eax,0xff8192
 100fca1:	add    BYTE PTR [eax],al
 100fca3:	add    BYTE PTR [eax],al
 100fca5:	add    BYTE PTR [eax],al
 100fca7:	add    BYTE PTR [esi-0x61008978],bl
 100fcad:	mov    BYTE PTR [esi-0x1],dh
 100fcb0:	sahf   
 100fcb1:	mov    BYTE PTR [esi-0x1],dh
 100fcb4:	sahf   
 100fcb5:	mov    BYTE PTR [esi-0x1],dh
 100fcb8:	sahf   
 100fcb9:	mov    BYTE PTR [esi-0x1],dh
	...
 100fce8:	inc    edx
 100fce9:	and    DWORD PTR [eax+0x775d40ff],0x775d40ff
 100fcf3:	inc    DWORD PTR [eax+0x5d]
 100fcf6:	ja     0x100fcf7
 100fcf8:	inc    eax
 100fcf9:	pop    ebp
 100fcfa:	ja     0x100fcfb
 100fcfc:	and    BYTE PTR [edi+0x7d],dl
 100fcff:	inc    DWORD PTR [eax+0x5d]
 100fd02:	ja     0x100fd03
 100fd04:	daa    
 100fd05:	dec    ebp
 100fd06:	imul   edi,edi,0x0
	...
 100fd61:	add    BYTE PTR [eax],al
 100fd63:	add    BYTE PTR [edx-0x7f],al
 100fd66:	mov    al,ds:0xcc9716ff
 100fd6b:	(bad)  
 100fd6c:	cmp    DWORD PTR [esi+eax*8-0x1f368f01],esp
 100fd73:	jmp    FWORD PTR [esi-0x2c]
 100fd76:	in     eax,dx
 100fd77:	(bad)  
 100fd78:	cmp    eax,0x6ffe8bb
 100fd7d:	(bad)  
 100fd7e:	sar    bh,1
 100fd80:	add    bh,BYTE PTR [ecx-0x4b]
 100fd83:	inc    DWORD PTR [ebx]
 100fd85:	ja     0x100fd3b
 100fd87:	jmp    DWORD PTR [edi]
 100fd89:	dec    ebp
 100fd8a:	imul   edi,edi,0x0
	...
 100fde1:	add    BYTE PTR [eax],al
 100fde3:	add    BYTE PTR [edi],dh
 100fde5:	jb     0x100fd79
 100fde7:	push   DWORD PTR [edx]
 100fde9:	mov    cl,0xe2
 100fdeb:	call   DWORD PTR [edx+ecx*8-0x12]
 100fdef:	(bad)  
 100fdf0:	jp     0x100fdcf
 100fdf2:	repnz push DWORD PTR [eax-0x28]
 100fdf6:	icebp  
 100fdf7:	(bad)  
 100fdf8:	cmp    eax,0xffedc0
 100fdfd:	cwde   
 100fdfe:	jecxz  0x100fdff
 100fe00:	add    BYTE PTR [ecx-0x7afb0025],dl
 100fe06:	leave  
 100fe07:	jmp    DWORD PTR [edi]
 100fe09:	dec    ebp
 100fe0a:	imul   edi,edi,0x0
	...
 100fe3d:	add    BYTE PTR [eax],al
 100fe3f:	add    BYTE PTR [esi+edx*4+0x54],cl
 100fe43:	push   DWORD PTR [edi+eiz*2]
 100fe46:	cmp    al,0xff
	...
 100fe64:	aaa    
 100fe65:	jb     0x100fdf9
 100fe67:	push   DWORD PTR [eax]
 100fe69:	mov    edx,0xcc56ffec
 100fe6e:	out    dx,al
 100fe6f:	(bad)  
 100fe70:	jp     0x100fe4f
 100fe72:	repnz push DWORD PTR [eax-0x28]
 100fe76:	icebp  
 100fe77:	(bad)  
 100fe78:	cmp    eax,0xffedc0
 100fe7d:	cwde   
 100fe7e:	jecxz  0x100fe7f
 100fe80:	add    BYTE PTR [ecx-0x73fe0025],dl
 100fe86:	sar    edi,cl
 100fe88:	daa    
 100fe89:	dec    ebp
 100fe8a:	imul   edi,edi,0x0
	...
 100febd:	add    BYTE PTR [eax],al
 100febf:	add    BYTE PTR [eax-0x54],bl
 100fec2:	pop    edi
 100fec3:	dec    DWORD PTR [esi+edx*4+0x54]
 100fec7:	inc    DWORD PTR [eax]
	...
 100fee1:	add    BYTE PTR [eax],al
 100fee3:	add    BYTE PTR [edi],dh
 100fee5:	jb     0x100fe79
 100fee7:	push   DWORD PTR [eax]
 100fee9:	mov    edx,0xcc56ffec
 100feee:	out    dx,al
 100feef:	(bad)  
 100fef0:	jp     0x100fecf
 100fef2:	repnz push DWORD PTR [eax-0x28]
 100fef6:	icebp  
 100fef7:	(bad)  
 100fef8:	cmp    eax,0xffedc0
 100fefd:	cwde   
 100fefe:	jecxz  0x100feff
 100ff00:	add    BYTE PTR [ecx-0x73fe0025],dl
 100ff06:	sar    edi,cl
 100ff08:	daa    
 100ff09:	dec    ebp
 100ff0a:	imul   edi,edi,0x0
	...
 100ff61:	add    BYTE PTR [eax],al
 100ff63:	add    BYTE PTR [edi],dh
 100ff65:	jb     0x100fef9
 100ff67:	push   DWORD PTR [eax]
 100ff69:	mov    edx,0xcc56ffec
 100ff6e:	out    dx,al
 100ff6f:	(bad)  
 100ff70:	jp     0x100ff4f
 100ff72:	repnz push DWORD PTR [eax-0x28]
 100ff76:	icebp  
 100ff77:	(bad)  
 100ff78:	cmp    eax,0xffedc0
 100ff7d:	cwde   
 100ff7e:	jecxz  0x100ff7f
 100ff80:	add    BYTE PTR [ecx-0x75fe0024],dl
 100ff86:	aam    0xff
 100ff88:	daa    
 100ff89:	dec    ebp
 100ff8a:	imul   edi,edi,0x0
	...
 100ffbd:	add    BYTE PTR [eax],al
 100ffbf:	add    BYTE PTR [esi+edx*4+0x54],cl
 100ffc3:	push   DWORD PTR [edi+eiz*2]
 100ffc6:	cmp    al,0xff
	...
 100ffe4:	inc    edx
 100ffe5:	and    DWORD PTR [eax-0x1245cb01],0xf0cc58ff
 100ffef:	(bad)  
 100fff0:	jp     0x100ffcf
 100fff2:	repnz push DWORD PTR [eax-0x28]
 100fff6:	icebp  
 100fff7:	(bad)  
 100fff8:	cmp    eax,0xffedc0
 100fffd:	cwde   
 100fffe:	jecxz  0x100ffff
 1010000:	add    BYTE PTR [ecx-0x73fe0024],dl
 1010006:	sar    edi,cl
 1010008:	sub    DWORD PTR [esp+esi*2-0x1],edx
	...
 1010040:	pop    eax
 1010041:	lods   al,BYTE PTR ds:[esi]
 1010042:	pop    edi
 1010043:	dec    DWORD PTR [esi+edx*4+0x54]
 1010047:	inc    DWORD PTR [eax]
	...
 1010061:	add    BYTE PTR [eax],al
 1010063:	add    BYTE PTR [edi-0x73],cl
 1010066:	stos   BYTE PTR es:[edi],al
 1010067:	push   DWORD PTR [edx+edi*4]
 101006a:	in     eax,dx
 101006b:	call   FWORD PTR [eax-0x34]
 101006e:	out    dx,al
 101006f:	(bad)  
 1010070:	jp     0x101004f
 1010072:	repnz push DWORD PTR [eax-0x28]
 1010076:	icebp  
 1010077:	(bad)  
 1010078:	cmp    eax,0xffedc0
 101007d:	cdq    
 101007e:	in     eax,0xff
 1010080:	add    BYTE PTR [ecx-0x73fe0025],dl
 1010086:	sar    edi,cl
 1010088:	sub    ebx,DWORD PTR [ebx+0x7b]
 101008b:	inc    DWORD PTR [eax]
	...
 10100e1:	add    BYTE PTR [eax],al
 10100e3:	add    BYTE PTR [ebx-0x68],dl
 10100e6:	mov    ch,0xff
 10100e8:	xor    BYTE PTR [edx-0x33a70014],bh
 10100ee:	lock (bad) 
 10100f0:	jp     0x10100cf
 10100f2:	repnz push DWORD PTR [eax-0x28]
 10100f6:	icebp  
 10100f7:	(bad)  
 10100f8:	cmp    eax,0xffedc0
 10100fd:	cwde   
 10100fe:	jecxz  0x10100ff
 1010100:	add    BYTE PTR [ecx-0x73fe0025],dl
 1010106:	sar    edi,cl
 1010108:	sub    ebx,DWORD PTR [ebx+0x7b]
 101010b:	inc    DWORD PTR [eax]
	...
 101013d:	add    BYTE PTR [eax],al
 101013f:	add    BYTE PTR [esi+edx*4+0x54],cl
 1010143:	push   DWORD PTR [edi+eiz*2]
 1010146:	cmp    al,0xff
	...
 1010164:	pop    ebp
 1010165:	popf   
 1010166:	mov    bh,0xff
 1010168:	xor    BYTE PTR [edx-0x33a90014],bh
 101016e:	out    dx,al
 101016f:	(bad)  
 1010170:	jp     0x101014f
 1010172:	repnz push DWORD PTR [eax-0x28]
 1010176:	icebp  
 1010177:	(bad)  
 1010178:	cmp    eax,0xffedc0
 101017d:	cwde   
 101017e:	jecxz  0x101017f
 1010180:	add    BYTE PTR [ecx-0x75fe0025],dl
 1010186:	sar    edi,cl
 1010188:	sub    eax,0xff8260
	...
 10101bd:	add    BYTE PTR [eax],al
 10101bf:	add    BYTE PTR [eax-0x54],bl
 10101c2:	pop    edi
 10101c3:	dec    DWORD PTR [esi+edx*4+0x54]
 10101c7:	inc    DWORD PTR [eax]
	...
 10101e1:	add    BYTE PTR [eax],al
 10101e3:	add    BYTE PTR [ebp-0x63],bl
 10101e6:	mov    bh,0xff
 10101e8:	pop    eax
 10101e9:	int3   
 10101ea:	lock dec DWORD PTR [ecx-0x5500091d]
 10101f1:	lock clc 
 10101f3:	(bad)  
 10101f4:	mov    edx,0xb3fffcf7
 10101f9:	hlt    
 10101fa:	cli    
 10101fb:	(bad)  
 10101fc:	jge    0x10101da
 10101fe:	idiv   bh
 1010200:	push   edi
 1010201:	(bad)  
 1010202:	in     eax,dx
 1010203:	jmp    FWORD PTR ds:0x2dffe0ab
 1010209:	pusha  
 101020a:	cmp    bh,0x0
	...
 1010261:	add    BYTE PTR [eax],al
 1010263:	add    BYTE PTR [ebp-0x63],bl
 1010266:	mov    bh,0xff
 1010268:	mov    edx,0xbafffdf8
 101026d:	clc    
 101026e:	std    
 101026f:	(bad)  
 1010270:	mov    edx,0xbafffdf8
 1010275:	clc    
 1010276:	std    
 1010277:	(bad)  
 1010278:	mov    edx,0xbafffdf8
 101027d:	clc    
 101027e:	std    
 101027f:	(bad)  
 1010280:	mov    edx,0xbafffdf8
 1010285:	clc    
 1010286:	std    
 1010287:	jmp    FWORD PTR ds:0xff8260
	...
 1010299:	add    BYTE PTR [eax],al
 101029b:	add    BYTE PTR [esi+edx*4+0x54],cl
 101029f:	push   DWORD PTR [edi+eiz*2]
 10102a2:	cmp    al,0xff
 10102a4:	add    BYTE PTR [eax],al
 10102a6:	add    BYTE PTR [eax],al
 10102a8:	dec    esp
 10102a9:	xchg   esi,eax
 10102aa:	push   esp
 10102ab:	push   DWORD PTR [edi+eiz*2]
 10102ae:	cmp    al,0xff
 10102b0:	add    BYTE PTR [eax],al
 10102b2:	add    BYTE PTR [eax],al
 10102b4:	dec    esp
 10102b5:	xchg   esi,eax
 10102b6:	push   esp
 10102b7:	push   DWORD PTR [edi+eiz*2]
 10102ba:	cmp    al,0xff
 10102bc:	add    BYTE PTR [eax],al
 10102be:	add    BYTE PTR [eax],al
 10102c0:	dec    esp
 10102c1:	xchg   esi,eax
 10102c2:	push   esp
 10102c3:	push   DWORD PTR [edi+eiz*2]
 10102c6:	cmp    al,0xff
	...
 10102e4:	outs   dx,BYTE PTR ds:[esi]
 10102e5:	stos   BYTE PTR es:[edi],al
 10102e6:	sar    bh,0x9f
 10102e9:	(bad)  
 10102ea:	loope  0x10102eb
 10102ec:	lahf   
 10102ed:	(bad)  
 10102ee:	loope  0x10102ef
 10102f0:	stos   DWORD PTR es:[edi],eax
 10102f1:	in     eax,0xec
 10102f3:	(bad)  
 10102f4:	mov    edx,0xbafffcf7
 10102f9:	idiv   esp
 10102fb:	jmp    FWORD PTR [eax-0x5a001820]
 1010301:	fsubr  st(5),st
 1010303:	jmp    DWORD PTR [ebp+0x2dffe5dc]
 1010309:	pusha  
 101030a:	cmp    bh,0x0
	...
 1010319:	add    BYTE PTR [eax],al
 101031b:	add    BYTE PTR [eax-0x54],bl
 101031e:	pop    edi
 101031f:	dec    DWORD PTR [esi+edx*4+0x54]
 1010323:	inc    DWORD PTR [eax]
 1010325:	add    BYTE PTR [eax],al
 1010327:	add    BYTE PTR [eax-0x54],bl
 101032a:	pop    edi
 101032b:	dec    DWORD PTR [esi+edx*4+0x54]
 101032f:	inc    DWORD PTR [eax]
 1010331:	add    BYTE PTR [eax],al
 1010333:	add    BYTE PTR [eax-0x54],bl
 1010336:	pop    edi
 1010337:	dec    DWORD PTR [esi+edx*4+0x54]
 101033b:	inc    DWORD PTR [eax]
 101033d:	add    BYTE PTR [eax],al
 101033f:	add    BYTE PTR [eax-0x54],bl
 1010342:	pop    edi
 1010343:	dec    DWORD PTR [esi+edx*4+0x54]
 1010347:	inc    DWORD PTR [eax]
	...
 1010365:	add    BYTE PTR [eax],al
 1010367:	add    BYTE PTR [esi-0x56],ch
 101036a:	sar    bh,0x69
 101036d:	lods   al,BYTE PTR ds:[esi]
 101036e:	(bad)  
 101036f:	jmp    FWORD PTR [ecx-0x55]
 1010372:	(bad)  
 1010373:	jmp    FWORD PTR [ecx-0x55]
 1010376:	(bad)  
 1010377:	jmp    FWORD PTR [ecx-0x55]
 101037a:	(bad)  
 101037b:	jmp    FWORD PTR [ecx-0x55]
 101037e:	(bad)  
 101037f:	jmp    FWORD PTR [ecx-0x54]
 1010382:	(bad)  
 1010383:	jmp    FWORD PTR [eax-0x67]
 1010386:	stos   DWORD PTR es:[edi],eax
 1010387:	inc    DWORD PTR [eax]
	...
 10103dd:	add    BYTE PTR [eax],al
 10103df:	add    bh,bh
 10103e1:	lock call FWORD PTR [edi+0xf7ff0ff]
 10103e8:	(bad)  
 10103e9:	clc    
 10103ea:	ds ud0 edi,esp
 10103ee:	sbb    al,0x1f
 10103f0:	(bad)  
 10103f1:	dec    BYTE PTR [eax]
 10103f3:	aas    
 10103f4:	(bad)  
 10103f5:	inc    DWORD PTR [eax]
 10103f7:	jg     0x101038b
 10103f9:	dec    edi
 10103fa:	cmp    bh,0x92
 10103fd:	dec    edi
 10103fe:	sar    ecx,0xff
 1010401:	inc    DWORD PTR [eax+0xff9ff0]
 1010407:	pusha  
 1010408:	lahf   
 1010409:	dec    BYTE PTR [eax]
 101040b:	add    edi,edi
 101040d:	loopne 0x101042b
 101040f:	pop    es
 1010410:	lahf   
 1010411:	sar    BYTE PTR [edi+eax*1],0x9f
 1010415:	sar    BYTE PTR [edi+ecx*1-0x1],0xdc
 101041a:	jl     0x101043b
 101041c:	(bad)  
 101041d:	fdivr  QWORD PTR [edi+edi*1-0x1]
 1010421:	cld    
 1010422:	js     0x10104a3
 1010424:	push   eax
 1010426:	sar    edi,0xc0
 1010429:	aas    
 101042a:	(bad)  
 101042b:	inc    DWORD PTR [eax-0x7f0000e1]
 1010431:	pop    ds
 1010432:	(bad)  
 1010433:	aas    
 1010434:	sbb    BYTE PTR [edi],0xff
 1010437:	aas    
 1010438:	sbb    BYTE PTR [edi],0xff
 101043b:	inc    DWORD PTR [eax-0x7fc000e1]
 1010441:	pop    ds
 1010442:	(bad)  
 1010443:	aas    
 1010444:	sbb    BYTE PTR [edi],0xff
 1010447:	inc    DWORD PTR [eax-0x7fc000e1]
 101044d:	pop    ds
 101044e:	(bad)  
 101044f:	aas    
 1010450:	sbb    BYTE PTR [edi],0xff
 1010453:	inc    DWORD PTR [eax-0x7fc0b6e2]
 1010459:	push   ds
 101045a:	dec    ecx
 101045b:	aas    
 101045c:	sar    BYTE PTR [edi],0xff
 101045f:	jmp    FWORD PTR [eax]
 1010461:	add    BYTE PTR [eax],al
 1010463:	add    BYTE PTR [eax],ah
 1010465:	add    BYTE PTR [eax],al
 1010467:	add    BYTE PTR [eax+0x0],al
 101046a:	add    BYTE PTR [eax],al
 101046c:	add    DWORD PTR [eax],eax
 101046e:	or     BYTE PTR [eax],al
	...
 101048c:	(bad)  
 101048d:	(bad)  
 101048e:	inc    BYTE PTR [eax]
 1010490:	(bad)  
 1010491:	stc    
 1010492:	clc    
 1010493:	add    dh,bh
 1010495:	cli    
 1010496:	stc    
 1010497:	add    ch,bh
 1010499:	stc    
 101049a:	clc    
 101049b:	add    cl,bh
 101049d:	jmp    0x1010485
 101049f:	add    ah,bh
 10104a1:	icebp  
 10104a2:	in     eax,dx
 10104a3:	add    ah,bh
 10104a5:	hlt    
 10104a6:	icebp  
 10104a7:	add    dh,bh
 10104a9:	sti    
 10104aa:	cli    
 10104ab:	add    ah,dh
 10104ad:	fxch   st(6)
 10104af:	add    bh,dh
 10104b1:	in     al,0xdc
 10104b3:	add    dl,bh
 10104b5:	in     eax,dx
 10104b6:	call   0xc3d2f5bb
 10104bb:	add    dl,dh
 10104bd:	rol    ebp,cl
 10104bf:	add    bl,dh
 10104c1:	aad    0xc8
 10104c3:	add    dh,dh
 10104c5:	(bad)  
 10104c7:	add    ah,dh
 10104c9:	(bad)  
 10104cb:	add    dh,dh
 10104cd:	loopne 0x10104a5
 10104cf:	add    bh,dh
 10104d1:	jecxz  0x10104ad
 10104d3:	add    dh,dh
 10104d5:	loop   0x10104b0
 10104d7:	add    al,bh
 10104d9:	out    0xdf,eax
 10104db:	add    cl,bh
 10104dd:	jmp    0xecfa05c4
 10104e2:	in     eax,0x0
 10104e4:	cli    
 10104e5:	in     eax,dx
 10104e6:	out    0x0,eax
 10104e8:	stc    
 10104e9:	in     al,dx
 10104ea:	out    0x0,al
 10104ec:	sti    
 10104ed:	lock jmp 0x10104f0
 10104f0:	cli    
 10104f1:	out    dx,eax
 10104f2:	jmp    0xfc00:0xe9eef900
 10104f9:	cmc    
 10104fa:	repnz add bl,bh
 10104fd:	hlt    
 10104fe:	icebp  
 10104ff:	add    dl,dl
 1010501:	test   al,0x93
 1010503:	add    ah,dl
 1010505:	stos   DWORD PTR es:[edi],eax
 1010506:	xchg   edi,eax
 1010507:	add    dl,dl
 1010509:	stos   BYTE PTR es:[edi],al
 101050a:	xchg   esi,eax
 101050b:	add    ah,dl
 101050d:	lods   eax,DWORD PTR ds:[esi]
 101050e:	call   0xd700:0x9fb1d600
 1010515:	mov    bl,0xa1
 1010517:	add    al,bl
 1010519:	mov    ch,0xa3
 101051b:	add    bl,bl
 101051d:	mov    esp,0xc0de00ac
 1010522:	mov    cl,0x0
 1010524:	ffreep st(2)
 1010526:	mov    bl,0x0
 1010528:	ffreep st(4)
 101052a:	mov    dh,0x0
 101052c:	repz (bad) 
 101052e:	enter  0xf300,0xd8
 1010532:	retf   
 1010533:	add    ah,dh
 1010535:	fcmove st,st(5)
 1010537:	add    ah,dh
 1010539:	fcmovne st,st(6)
 101053b:	add    ch,dh
 101053d:	(bad)  
 101053f:	add    ch,dh
 1010541:	(bad)  
 1010543:	add    bh,dh
 1010545:	in     al,0xdb
 1010547:	add    al,bh
 1010549:	in     eax,0xdc
 101054b:	add    ch,dl
 101054d:	lds    edi,FWORD PTR [ebp-0x1f170800]
 1010553:	add    bh,dh
 1010555:	out    0xdf,eax
 1010557:	add    dl,bh
 1010559:	in     al,dx
 101055a:	in     eax,0x0
 101055c:	clc    
 101055d:	jmp    0xe8:0xeefa00e3
 1010564:	sti    
 1010565:	icebp  
 1010566:	in     al,dx
 1010567:	add    ah,bh
 1010569:	div    bl
 101056b:	add    bl,dh
 101056d:	out    dx,eax
 101056e:	in     eax,dx
 101056f:	add    dh,bh
 1010571:	cld    
 1010572:	sti    
 1010573:	add    dh,dl
 1010575:	mov    al,0x9c
 1010577:	add    al,bl
 1010579:	mov    bh,0xa5
 101057b:	add    dl,bl
 101057d:	mov    ecx,0xbbdb00a7
 1010582:	stos   BYTE PTR es:[edi],al
 1010583:	add    cl,bl
 1010585:	mov    ecx,0xbedc00a8
 101058a:	scas   al,BYTE PTR es:[edi]
 101058b:	add    ch,bl
 101058d:	shl    DWORD PTR [ecx-0x5a4e3900],0x0
 1010594:	leave  
 1010595:	mov    ah,0xa9
 1010597:	add    ch,dh
 1010599:	loopne 0x1010570
 101059b:	add    ch,dh
 101059d:	loope  0x1010575
 101059f:	add    bh,dh
 10105a1:	out    0xdd,al
 10105a3:	add    ah,bh
 10105a5:	repz out dx,al
 10105a7:	add    bl,bh
 10105a9:	repnz in eax,dx
 10105ab:	add    BYTE PTR [edx-0x4aff7667],dh
 10105b1:	popf   
 10105b2:	mov    es,WORD PTR [eax]
 10105b4:	stos   DWORD PTR es:[edi],eax
 10105b5:	xchg   ebp,eax
 10105b6:	xchg   DWORD PTR [eax],eax
 10105b8:	mov    ebp,0xbc0097a5
 10105bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10105be:	call   0xc000:0xb8c7e000
 10105c5:	stos   DWORD PTR es:[edi],eax
 10105c6:	sahf   
 10105c7:	add    bh,al
 10105c9:	mov    ah,0xa8
 10105cb:	add    dl,bh
 10105cd:	out    dx,al
 10105ce:	out    0x0,eax
 10105d0:	sti    
 10105d1:	repz out dx,al
 10105d3:	add    ch,bh
 10105d5:	clc    
 10105d6:	cmc    
 10105d7:	add    ah,bh
 10105d9:	div    esp
 10105db:	add    BYTE PTR [edx+ecx*4+0x7f960078],ah
 10105e2:	outs   dx,DWORD PTR ds:[esi]
 10105e3:	add    BYTE PTR [ebx-0x5fff8b7c],bl
 10105e9:	mov    DWORD PTR [ecx+0x0],edi
 10105ec:	mov    ds:0xa1007b8b,al
 10105f1:	mov    edi,DWORD PTR [eax+eax*1-0x58]
 10105f5:	xchg   edx,eax
 10105f6:	add    DWORD PTR [eax],0xffffffa7
 10105f9:	xchg   ecx,eax
 10105fa:	add    BYTE PTR [eax],0xac
 10105fd:	xchg   esi,eax
 10105fe:	xchg   DWORD PTR [eax],eax
 1010600:	mov    dl,0x9c
 1010602:	lea    eax,[eax]
 1010604:	mov    dl,0x9d
 1010606:	pop    DWORD PTR [eax]
 1010608:	mov    al,0x9b
 101060a:	lea    eax,[eax]
 101060c:	mov    ch,0xa0
 101060e:	xchg   edx,eax
 101060f:	add    BYTE PTR [edi+ebx*4-0x5a45ff6f],dh
 1010616:	xchg   edi,eax
 1010617:	add    BYTE PTR [edi-0x42ff6b5e],dh
 101061d:	test   al,0x9a
 101061f:	add    BYTE PTR [ecx-0x45ff685b],bh
 1010625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1010626:	cwde   
 1010627:	add    BYTE PTR [edi-0x3bff6255],bh
 101062d:	mov    al,0xa3
 101062f:	add    cl,al
 1010631:	lods   eax,DWORD PTR ds:[esi]
 1010632:	mov    al,ds:0xa7b4c800
 1010637:	add    dh,al
 1010639:	mov    dl,0xa5
 101063b:	add    bl,al
 101063d:	mov    al,0xa3
 101063f:	add    bl,cl
 1010641:	mov    bh,0xaa
 1010643:	add    bl,cl
 1010645:	mov    eax,0xb6c900ab
 101064a:	test   eax,0x35496300
 101064f:	add    BYTE PTR [ecx-0x7effaa98],al
 1010655:	push   0x6b840056
 101065a:	pop    ecx
 101065b:	add    BYTE PTR [ecx-0x78ffa190],cl
 1010661:	outs   dx,DWORD PTR ds:[esi]
 1010662:	pop    ebp
 1010663:	add    BYTE PTR [ebx-0x6fff9e8d],cl
 1010669:	jns    0x10106d3
 101066b:	add    BYTE PTR [edi-0x6aff9888],cl
 1010671:	jge    0x10106df
 1010673:	add    BYTE PTR [ebp-0x67ff9282],dl
 1010679:	xor    DWORD PTR [eax+0x0],0x6f8097
 1010680:	fwait
 1010681:	test   BYTE PTR [ebx+0x0],dh
 1010684:	pushf  
 1010685:	test   DWORD PTR [eax+eax*1-0x68],esi
 1010689:	xor    BYTE PTR [ecx+0x0],0x9e
 101068d:	xchg   DWORD PTR [esi+0x0],esi
 1010690:	popf   
 1010691:	xchg   DWORD PTR [esi+0x0],esi
 1010694:	mov    ds:0x9f007b8c,eax
 1010699:	mov    DWORD PTR [ecx+0x0],edi
 101069c:	sahf   
 101069d:	mov    BYTE PTR [eax+0x0],bh
 10106a0:	mov    ds:0xa5007c8c,al
 10106a5:	(bad)  
 10106a6:	jg     0x10106a8
 10106a8:	stos   BYTE PTR es:[edi],al
 10106a9:	xchg   esp,eax
 10106aa:	test   BYTE PTR [eax],al
 10106ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10106ad:	xchg   ecx,eax
 10106ae:	add    DWORD PTR [eax],0x8494a9
 10106b4:	lods   eax,DWORD PTR ds:[esi]
 10106b5:	cwde   
 10106b6:	mov    BYTE PTR [eax],al
 10106b8:	stos   DWORD PTR es:[edi],eax
 10106b9:	xchg   esi,eax
 10106ba:	xchg   DWORD PTR [eax],eax
 10106bc:	mov    cl,0x9c
 10106be:	lea    eax,[eax]
 10106c0:	scas   eax,DWORD PTR es:[edi]
 10106c1:	call   0x8a:0x99ae008b
 10106c8:	mov    bl,0x9e
 10106ca:	pop    DWORD PTR [eax]
 10106cc:	mov    eax,0xb60094a3
 10106d1:	mov    eax,ds:0x9fb30092
 10106d6:	nop
 10106d7:	add    BYTE PTR [ebx-0x4bff685a],bh
 10106dd:	mov    al,ds:0xa4b80091
 10106e2:	xchg   ebp,eax
 10106e3:	add    al,al
 10106e5:	lods   al,BYTE PTR ds:[esi]
 10106e6:	popf   
 10106e7:	add    dl,al
 10106e9:	scas   eax,DWORD PTR es:[edi]
 10106ea:	mov    eax,ds:0xa0aec100
 10106ef:	add    al,al
 10106f1:	lods   eax,DWORD PTR ds:[esi]
 10106f2:	lahf   
 10106f3:	add    bh,al
 10106f5:	mov    ah,0xa6
 10106f7:	add    ch,bh
 10106f9:	stc    
 10106fa:	test   BYTE PTR [eax],0x84
 10106fd:	ins    BYTE PTR es:[edi],dx
 10106fe:	pop    ecx
 10106ff:	add    BYTE PTR [esi-0x70ffa492],al
 1010705:	ja     0x101076b
 1010707:	add    BYTE PTR [ebp-0x6eff9b8a],cl
 101070d:	jp     0x1010777
 101070f:	add    BYTE PTR [edx-0x48ff9685],dl
 1010715:	mov    ds:0xb3c50093,eax
 101071a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 101071b:	add    bl,ah
 101071d:	fcmovbe st,st(3)
 101071f:	add    ch,bh
 1010721:	sti    
 1010722:	stc    
 1010723:	add    bh,bh
 1010725:	(bad)  
 1010726:	std    
 1010727:	add    dh,bh
 1010729:	std    
 101072a:	cld    
 101072b:	add    ch,al
 101072d:	stc    
 101072e:	std    
 101072f:	add    al,al
 1010731:	icebp  
 1010732:	cmc    
 1010733:	add    bh,al
 1010735:	clc    
 1010736:	cld    
 1010737:	add    BYTE PTR [ebp-0x3eff050d],dh
 101073d:	idiv   ebp
 101073f:	add    bl,al
 1010741:	clc    
 1010742:	std    
 1010743:	add    BYTE PTR [eax-0x3fff1017],bh
 1010749:	repnz test DWORD PTR [eax],0xf6eba2
 1010750:	mov    bl,0xe2
 1010752:	jmp    0xece6bc57
 1010757:	add    BYTE PTR [edx+eiz*8-0xf50ff12],bl
 101075e:	sti    
 101075f:	add    BYTE PTR [edx-0x72ff0c21],al
 1010765:	jecxz  0x101075b
 1010767:	add    BYTE PTR [edx-0x52ff0818],bl
 101076d:	fucom  st(6)
 101076f:	add    BYTE PTR [ebx-0x7eff0b21],al
 1010775:	fcomi  st,st(0)
 1010777:	add    BYTE PTR [edx-0x70ff1a2e],al
 101077d:	loop   0x1010776
 101077f:	add    BYTE PTR [ebx-0x4e],cl
 1010782:	iret   
 1010783:	add    BYTE PTR [edi-0x2d],ah
 1010786:	icebp  
 1010787:	add    BYTE PTR [ecx-0x2c],ch
 101078a:	icebp  
 101078b:	add    BYTE PTR [ebx-0x2b],ch
 101078e:	hlt    
 101078f:	add    BYTE PTR [ebx-0x2c],ch
 1010792:	repnz add BYTE PTR [ebx-0x2c],ch
 1010796:	icebp  
 1010797:	add    BYTE PTR [ebp-0x3a],al
 101079a:	lock add BYTE PTR [esi-0x3a],al
 101079e:	lock add BYTE PTR [ecx-0x36],dl
 10107a2:	lock add BYTE PTR [eax-0x3a],dl
 10107a6:	in     al,dx
 10107a7:	add    BYTE PTR [edx-0x30],ch
 10107aa:	lock add BYTE PTR [esi],bl
 10107ad:	mov    ch,0xed
 10107af:	add    BYTE PTR [esi],bl
 10107b1:	mov    dh,0xed
 10107b3:	add    BYTE PTR [ebx],ah
 10107b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10107b6:	aam    0x0
 10107b8:	ds mov eax,0xc44300e5
 10107be:	lock add BYTE PTR [ebx-0x3c],al
 10107c2:	out    dx,eax
 10107c3:	add    BYTE PTR [esi-0x3b],al
 10107c6:	lock add BYTE PTR [ebp+edi*4-0x19],al
 10107cb:	add    BYTE PTR [eax-0x54],dh
 10107ce:	ret    0x8100
 10107d1:	mov    bh,0xca
 10107d3:	add    BYTE PTR [ebx-0x58],bh
 10107d6:	mov    eax,0xe8a70100
 10107db:	add    BYTE PTR [ecx],al
 10107dd:	mov    ds:0xa10100e2,al
 10107e2:	loop   0x10107e4
 10107e4:	add    DWORD PTR [ecx-0x58fdff1f],esp
 10107ea:	call   0xe9a909ef
 10107ef:	add    BYTE PTR [edx],al
 10107f1:	mov    eax,ds:0x9b0300e1
 10107f6:	fiadd  DWORD PTR [eax]
 10107f8:	add    ebx,DWORD PTR [edx+ebx*8-0x2563fc00]
 10107ff:	add    BYTE PTR ds:0xc00c18b,al
 1010805:	popf   
 1010806:	fadd   DWORD PTR [eax]
 1010808:	and    al,0xaa
 101080a:	fld    QWORD PTR [eax]
 101080c:	push   0xffffffa7
 101080e:	mov    esi,0xd0b97c00
 1010813:	add    BYTE PTR [eax+edi*4-0x31],bh
 1010817:	add    BYTE PTR [ebx+ebx*4],al
 101081a:	fild   DWORD PTR [eax]
 101081c:	or     DWORD PTR [esi-0x76f7ff2e],edx
 1010822:	rol    BYTE PTR [eax],0x53
 1010825:	xchg   edx,eax
 1010826:	scas   al,BYTE PTR es:[edi]
 1010827:	add    BYTE PTR [ecx-0x6c],bl
 101082a:	scas   eax,DWORD PTR es:[edi]
 101082b:	add    BYTE PTR [edx-0x63],ah
 101082e:	mov    bh,0x0
 1010830:	dec    ecx
 1010831:	test   BYTE PTR [edx-0x5d7bb600],ah
 1010837:	add    BYTE PTR [eax-0x75],dl
 101083a:	test   al,0x0
 101083c:	das    
 101083d:	push   0xffffff8f
 101083f:	add    BYTE PTR [esi],bh
 1010841:	jae    0x10107d6
 1010843:	add    BYTE PTR ds:0x3b009070,bh
 1010849:	ins    BYTE PTR es:[edi],dx
 101084a:	mov    eax,DWORD PTR [eax]
 101084c:	cmp    ah,BYTE PTR [edi-0x7a]
 101084f:	add    BYTE PTR [ecx],bh
 1010851:	arpl   WORD PTR [ecx+0x7e603800],ax
 1010857:	add    BYTE PTR [ebx+0x70],dl
 101085a:	mov    DWORD PTR [eax],eax
 101085c:	(bad)  
 101085d:	(bad)  
 101085e:	inc    DWORD PTR [eax]
 1010860:	(bad)  
 1010861:	(bad)  
 1010862:	inc    DWORD PTR [eax]
	...
 1010898:	add    BYTE PTR [eax],al
 101089a:	add    bh,ah
 101089c:	hlt    
 101089d:	hlt    
 101089e:	hlt    
 101089f:	hlt    
 10108a0:	hlt    
 10108a1:	hlt    
 10108a2:	in     eax,dx
 10108a3:	hlt    
 10108a4:	repz add BYTE PTR [eax],al
 10108a7:	add    BYTE PTR [eax],al
 10108a9:	add    BYTE PTR [ebx+0x71],dh
 10108ac:	jno    0x101091f
 10108ae:	jno    0x1010921
 10108b0:	jno    0x1010923
 10108b2:	jno    0x1010925
 10108b4:	jno    0x1010927
 10108b6:	jno    0x1010929
 10108b8:	jno    0x101092b
 10108ba:	out    0xcb,eax
 10108bc:	mov    esi,0xc7bbb4bc
 10108c1:	loopne 0x10108a2
 10108c3:	fsubrp st(6),st
 10108c5:	repz add BYTE PTR [eax],al
 10108c8:	add    BYTE PTR [eax],al
 10108ca:	je     0x10108f8
 10108cc:	es inc eax
 10108ce:	and    eax,0x243c3f3e
 10108d3:	and    esp,DWORD PTR [edx]
 10108d5:	cmp    esp,DWORD PTR [ecx]
 10108d7:	pop    ds
 10108d8:	and    BYTE PTR [esi],bl
 10108da:	jmp    0xc6ba:0xb1b7bfd0
 10108e1:	retf   0xd7d8
 10108e4:	in     eax,0xf3
 10108e6:	add    BYTE PTR [eax],al
 10108e8:	add    BYTE PTR [eax],al
 10108ea:	sahf   
 10108eb:	adc    BYTE PTR [ebx],bl
 10108ed:	sbb    BYTE PTR ds:0x11123033,dh
 10108f3:	adc    BYTE PTR cs:[edx+ebp*1],ch
 10108f7:	sub    DWORD PTR ds:0xc0cdea0c,ecx
 10108fd:	mov    bh,0xb1
 10108ff:	mov    edx,0xd7d9cac6
 1010904:	fdivr  st(3),st
 1010906:	add    BYTE PTR [eax],al
 1010908:	add    BYTE PTR [eax],al
 101090a:	jne    0x1010939
 101090c:	sbb    DWORD PTR [ebx],ebx
 101090e:	add    eax,0x12301415
 1010913:	inc    ebp
 1010914:	sub    eax,0xe2a2b10
 1010919:	or     eax,0xb7c0ceea
 101091e:	mov    cl,0xb6
 1010920:	(bad)  
 1010921:	retf   0xdad9
 1010924:	fdivr  st(3),st
 1010926:	add    BYTE PTR [eax],al
 1010928:	add    BYTE PTR [eax],al
 101092a:	ja     0x101093d
 101092c:	dec    eax
 101092d:	outs   dx,DWORD PTR ds:[esi]
 101092e:	outs   dx,DWORD PTR ds:[esi]
 101092f:	imul   ebp,DWORD PTR [ecx+0x4f],0x67
 1010933:	popa   
 1010934:	mov    ds,WORD PTR [ebx-0x7d]
 1010937:	jg     0x10109b4
 1010939:	lahf   
 101093a:	jmp    0xc6b6:0xb1b7c0c4
 1010941:	retf   0xd5d9
 1010944:	in     al,0xf3
 1010946:	add    BYTE PTR [eax],al
 1010948:	add    BYTE PTR [eax],al
 101094a:	mov    al,ds:0x19470713
 101094f:	or     esi,DWORD PTR [edx*1+0x11130a14]
 1010956:	movups xmm1,XMMWORD PTR [ecx]
 1010959:	sub    ch,bl
 101095b:	(bad)
 101095e:	mov    cl,0xba
 1010960:	(bad)  
 1010961:	retf   0xd6d4
 1010964:	fdivr  st(3),st
 1010966:	add    BYTE PTR [eax],al
 1010968:	add    BYTE PTR [eax],al
 101096a:	jns    0x101099b
 101096c:	cmp    BYTE PTR [edi],al
 101096e:	push   edx
 101096f:	sbb    DWORD PTR [esi],esi
 1010971:	push   ss
 1010972:	adc    eax,0x11130a14
 1010977:	sub    eax,0xcfec0910
 101097c:	ret    0xb1b7
 101097f:	mov    dh,0xc6
 1010981:	retf   0xd7d4
 1010984:	fdivr  st(2),st
 1010986:	add    BYTE PTR [eax],al
 1010988:	add    BYTE PTR [eax],al
 101098a:	mov    ds:0x6f6f9c14,al
 101098f:	jo     0x1010935
 1010991:	cdq    
 1010992:	gs xchg ecx,eax
 1010994:	lea    ecx,[edi+eax*4-0x175e837c]
 101099b:	iret   
 101099c:	ret    0xb1b7
 101099f:	mov    edx,0xd6d8c9c6
 10109a4:	(bad)  
 10109a6:	add    BYTE PTR [eax],al
 10109a8:	add    BYTE PTR [eax],al
 10109aa:	jp     0x10109de
 10109ac:	add    edx,DWORD PTR [ebx+0x38]
 10109af:	sbb    eax,0x16511a48
 10109b4:	adc    eax,0x44130a14
 10109b9:	sub    eax,0xb7c3cfe9
 10109be:	mov    cl,0xba
 10109c0:	(bad)  
 10109c1:	retf   0xd7d9
 10109c4:	fdivr  st(0),st
 10109c6:	add    BYTE PTR [eax],al
 10109c8:	add    BYTE PTR [eax],al
 10109ca:	push   esi
 10109cb:	xor    eax,0x38530208
 10109d0:	sbb    eax,0x16171a06
 10109d5:	adc    eax,0x11132f33
 10109da:	loope  0x10109a0
 10109dc:	ret    0xb1b7
 10109df:	mov    edx,0xdad9cac6
 10109e4:	fsub   st(7),st
 10109e6:	add    BYTE PTR [eax],al
 10109e8:	add    BYTE PTR [eax],al
 10109ea:	sbb    BYTE PTR [eax],0xa7
 10109ed:	outs   dx,DWORD PTR ds:[esi]
 10109ee:	outs   dx,DWORD PTR ds:[esi]
 10109ef:	outs   dx,DWORD PTR ds:[esi]
 10109f0:	push   eax
 10109f1:	ins    DWORD PTR es:[edi],dx
 10109f2:	xchg   edi,eax
 10109f3:	arpl   WORD PTR [edx-0x71],sp
 10109f6:	pop    ebx
 10109f7:	pop    ecx
 10109f8:	push   edi
 10109f9:	jp     0x10109cc
 10109fb:	(bad)  
 10109fc:	shl    BYTE PTR [edi-0x3539454f],0xd8
 1010a03:	xlat   BYTE PTR ds:[ebx]
 1010a04:	fucomi st,st(6)
 1010a06:	add    BYTE PTR [eax],al
 1010a08:	add    BYTE PTR [eax],al
 1010a0a:	jle    0x1010a42
 1010a0c:	add    DWORD PTR [eax+0x1c530408],ebp
 1010a12:	sbb    eax,0x16171a48
 1010a17:	xor    al,BYTE PTR [esi+0x12]
 1010a1a:	rol    ecx,1
 1010a1c:	mov    eax,0xadaeaeac
 1010a21:	mov    ch,0xbd
 1010a23:	enter  0xeecc,0x0
 1010a27:	add    BYTE PTR [eax],al
 1010a29:	add    BYTE PTR [edx-0x57fe0ae7],al
 1010a2f:	or     BYTE PTR [ebx+edx*2],al
 1010a32:	cmp    BYTE PTR ds:0x35171a48,bl
 1010a38:	xor    al,BYTE PTR [esi-0x2f]
 1010a3b:	test   eax,0xa9a9a9a9
 1010a40:	test   eax,0xa9a9a9a9
 1010a45:	out    dx,al
 1010a46:	add    BYTE PTR [eax],al
 1010a48:	add    BYTE PTR [eax],al
 1010a4a:	test   BYTE PTR [eax-0xb],cl
 1010a4d:	outs   dx,DWORD PTR ds:[esi]
 1010a4e:	outs   dx,DWORD PTR ds:[esi]
 1010a4f:	outs   dx,DWORD PTR ds:[esi]
 1010a50:	jo     0x1010abe
 1010a52:	cdq    
 1010a53:	gs xchg ecx,eax
 1010a55:	pop    esi
 1010a56:	dec    ebx
 1010a57:	xchg   DWORD PTR [ebp-0x46462d84],eax
 1010a5d:	scas   eax,DWORD PTR es:[edi]
 1010a5e:	mov    al,0xab
 1010a60:	stos   DWORD PTR es:[edi],eax
 1010a61:	stos   BYTE PTR es:[edi],al
 1010a62:	mov    bl,0xb2
 1010a64:	mov    dl,0xee
 1010a66:	add    BYTE PTR [eax],al
 1010a68:	add    BYTE PTR [eax],al
 1010a6a:	pop    ecx
 1010a6b:	sbb    eax,0x1f5f5f5
 1010a70:	test   al,0x8
 1010a72:	add    al,0x53
 1010a74:	sbb    al,0x52
 1010a76:	dec    eax
 1010a77:	sbb    bl,BYTE PTR [eax]
 1010a79:	xor    eax,0xe3e2d232
 1010a7e:	jecxz  0x1010a63
 1010a80:	jecxz  0x1010a65
 1010a82:	jecxz  0x1010a66
 1010a84:	rol    DWORD PTR [eax],cl
 1010a86:	add    BYTE PTR [eax],al
 1010a88:	add    BYTE PTR [eax],al
 1010a8a:	xchg   DWORD PTR [eax],edi
 1010a8c:	cmc    
 1010a8d:	cmc    
 1010a8e:	cmc    
 1010a8f:	cmc    
 1010a90:	add    DWORD PTR [edx],edi
 1010a92:	or     BYTE PTR [esp+edx*2],al
 1010a95:	sbb    al,0x52
 1010a97:	aaa    
 1010a98:	sbb    bl,BYTE PTR [eax]
 1010a9a:	xor    eax,0x11123032
 1010a9f:	cmp    eax,0x71
 1010aa4:	add    BYTE PTR [eax],al
 1010aa6:	add    BYTE PTR [eax],al
 1010aa8:	add    BYTE PTR [eax],al
 1010aaa:	mov    DWORD PTR [ebx-0xb],edx
 1010aad:	outs   dx,DWORD PTR ds:[esi]
 1010aae:	outs   dx,DWORD PTR ds:[esi]
 1010aaf:	outs   dx,DWORD PTR ds:[esi]
 1010ab0:	outs   dx,BYTE PTR ds:[esi]
 1010ab1:	imul   ebp,DWORD PTR [ecx+0x68],0x66
 1010ab5:	xchg   ebp,eax
 1010ab6:	(bad)  
 1010ab7:	pop    ebx
 1010ab8:	pop    edx
 1010ab9:	push   edi
 1010aba:	jp     0x1010a5c
 1010abc:	jbe    0x1010b30
 1010abe:	adc    bh,BYTE PTR [esi]
 1010ac0:	jno    0x1010ac2
	...
 1010aca:	mov    BYTE PTR [edx],al
 1010acc:	cmc    
 1010acd:	cmc    
 1010ace:	cmc    
 1010acf:	cmc    
 1010ad0:	cmc    
 1010ad1:	cmc    
 1010ad2:	test   al,0xa8
 1010ad4:	add    eax,DWORD PTR [ebx+edx*2]
 1010ad7:	sbb    al,0x52
 1010ad9:	aaa    
 1010ada:	sbb    BYTE PTR ss:0x71253032,dh
	...
 1010ae9:	add    BYTE PTR [ebp+0x8],bl
 1010aec:	cmc    
 1010aed:	cmc    
 1010aee:	cmc    
 1010aef:	cmc    
 1010af0:	cmc    
 1010af1:	cmc    
 1010af2:	cmc    
 1010af3:	add    DWORD PTR [edx],edi
 1010af5:	or     BYTE PTR [esp+edx*2+0x1b19521c],bl
 1010afc:	sbb    BYTE PTR ds:0x714014,dh
	...
 1010b0a:	(bad)  
 1010b0b:	cmp    dh,ch
 1010b0d:	outs   dx,DWORD PTR ds:[esi]
 1010b0e:	outs   dx,DWORD PTR ds:[esi]
 1010b0f:	outs   dx,DWORD PTR ds:[esi]
 1010b10:	outs   dx,DWORD PTR ds:[esi]
 1010b11:	jo     0x1010b7f
 1010b13:	push   0x65
 1010b15:	mov    ds:0x85874b8d,eax
 1010b1a:	jge    0x1010b94
 1010b1c:	ja     0x1010abb
 1010b1e:	adc    eax,0x7141
 1010b23:	add    BYTE PTR [eax],al
 1010b25:	add    BYTE PTR [eax],al
 1010b27:	add    BYTE PTR [eax],al
 1010b29:	add    BYTE PTR [ebp-0xa0a0a59],cl
 1010b2f:	cmc    
 1010b30:	cmc    
 1010b31:	cmc    
 1010b32:	cmc    
 1010b33:	cmc    
 1010b34:	add    DWORD PTR [edi+0x3804a63a],esp
 1010b3a:	pop    es
 1010b3b:	dec    eax
 1010b3c:	sbb    DWORD PTR [esi],esi
 1010b3e:	push   ss
 1010b3f:	daa    
 1010b40:	jno    0x1010b42
	...
 1010b4a:	nop
 1010b4b:	cmc    
 1010b4c:	cmc    
 1010b4d:	cmc    
 1010b4e:	cmc    
 1010b4f:	cmc    
 1010b50:	cmc    
 1010b51:	cmc    
 1010b52:	cmc    
 1010b53:	cmc    
 1010b54:	cmc    
 1010b55:	cmc    
 1010b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1010b57:	cmp    al,BYTE PTR [ebx]
 1010b59:	add    al,0x54
 1010b5b:	pop    es
 1010b5c:	dec    eax
 1010b5d:	sbb    DWORD PTR [esi],esi
 1010b5f:	sub    BYTE PTR [ecx+0x0],dh
	...
 1010b6a:	popa   
 1010b6b:	cmc    
 1010b6c:	cmc    
 1010b6d:	outs   dx,DWORD PTR ds:[esi]
 1010b6e:	outs   dx,DWORD PTR ds:[esi]
 1010b6f:	outs   dx,DWORD PTR ds:[esi]
 1010b70:	outs   dx,DWORD PTR ds:[esi]
 1010b71:	outs   dx,DWORD PTR ds:[esi]
 1010b72:	fwait
 1010b73:	ins    DWORD PTR es:[edi],dx
 1010b74:	push   0x3aa76868
 1010b79:	add    bl,BYTE PTR [eax+edi*1+0x4e194807]
 1010b80:	jno    0x1010b82
	...
 1010b8a:	xchg   ecx,eax
 1010b8b:	cmc    
 1010b8c:	cmc    
 1010b8d:	cmc    
 1010b8e:	cmc    
 1010b8f:	cmc    
 1010b90:	cmc    
 1010b91:	cmc    
 1010b92:	cmc    
 1010b93:	cmc    
 1010b94:	cmc    
 1010b95:	cmc    
 1010b96:	cmc    
 1010b97:	add    DWORD PTR [edi+0x43530308],esp
 1010b9d:	dec    esp
 1010b9e:	dec    ecx
 1010b9f:	push   ebp
 1010ba0:	jno    0x1010ba2
	...
 1010baa:	addr16 cmc 
 1010bac:	cmc    
 1010bad:	cmc    
 1010bae:	cmc    
 1010baf:	cmc    
 1010bb0:	cmc    
 1010bb1:	cmc    
 1010bb2:	cmc    
 1010bb3:	cmc    
 1010bb4:	cmc    
 1010bb5:	cmc    
 1010bb6:	cmc    
 1010bb7:	cmc    
 1010bb8:	add    DWORD PTR [eax+0x7171813a],ebp
 1010bbe:	jno    0x1010c31
 1010bc0:	jno    0x1010bc2
	...
 1010bca:	dec    ebp
 1010bcb:	cmc    
 1010bcc:	cmc    
 1010bcd:	cmc    
 1010bce:	cmc    
 1010bcf:	cmc    
 1010bd0:	cmc    
 1010bd1:	cmc    
 1010bd2:	cmc    
 1010bd3:	cmc    
 1010bd4:	cmc    
 1010bd5:	cmc    
 1010bd6:	cmc    
 1010bd7:	cmc    
 1010bd8:	cmc    
 1010bd9:	cmc    
 1010bda:	test   al,0x58
 1010bdc:	xor    DWORD PTR [edx+0x4a],eax
 1010bdf:	add    DWORD PTR [eax],0x0
 1010be5:	add    BYTE PTR [eax],al
 1010be7:	add    BYTE PTR [eax],al
 1010be9:	add    BYTE PTR [eax-0xb],ch
 1010bec:	cmc    
 1010bed:	cmc    
 1010bee:	cmc    
 1010bef:	cmc    
 1010bf0:	cmc    
 1010bf1:	cmc    
 1010bf2:	cmc    
 1010bf3:	cmc    
 1010bf4:	cmc    
 1010bf5:	cmc    
 1010bf6:	cmc    
 1010bf7:	cmc    
 1010bf8:	cmc    
 1010bf9:	cmc    
 1010bfa:	add    DWORD PTR [esi+0x8131a5],eax
	...
 1010c08:	add    BYTE PTR [eax],al
 1010c0a:	call   0xf5f5:0xf5f5f5f5
 1010c11:	cmc    
 1010c12:	cmc    
 1010c13:	cmc    
 1010c14:	cmc    
 1010c15:	cmc    
 1010c16:	cmc    
 1010c17:	cmc    
 1010c18:	cmc    
 1010c19:	cmc    
 1010c1a:	cmc    
 1010c1b:	xchg   DWORD PTR [ecx],edi
 1010c1d:	add    DWORD PTR [eax],0x0
 1010c23:	add    BYTE PTR [eax],al
 1010c25:	add    BYTE PTR [eax],al
 1010c27:	add    BYTE PTR [eax],al
 1010c29:	add    BYTE PTR [eax-0xa0a0a0b],bl
 1010c2f:	test   al,0x8
 1010c31:	add    al,0x53
 1010c33:	sbb    al,0x52
 1010c35:	sbb    DWORD PTR [ebx],ecx
 1010c37:	push   ss
 1010c38:	adc    eax,0x8a5c2f46
	...
 1010c49:	add    BYTE PTR [ecx-0x68],ch
 1010c4c:	cdq    
 1010c4d:	call   0x6496:0x944d6568
 1010c54:	xchg   edx,eax
 1010c55:	xchg   ebx,eax
 1010c56:	pop    edi
 1010c57:	pusha  
 1010c58:	mov    cs,WORD PTR [ebx+0x8a8c]
	...
 1010c86:	add    BYTE PTR [eax],al
 1010c88:	(bad)  
 1010c89:	jmp    eax
 1010c8b:	pop    es
 1010c8c:	rol    BYTE PTR [eax],0x0
 1010c8f:	add    eax,eax
 1010c91:	add    BYTE PTR [eax],al
 1010c93:	add    eax,eax
 1010c95:	add    BYTE PTR [eax],al
 1010c97:	add    eax,eax
 1010c99:	add    BYTE PTR [eax],al
 1010c9b:	add    eax,eax
 1010c9d:	add    BYTE PTR [eax],al
 1010c9f:	add    eax,eax
 1010ca1:	add    BYTE PTR [eax],al
 1010ca3:	add    eax,eax
 1010ca5:	add    BYTE PTR [eax],al
 1010ca7:	add    eax,eax
 1010ca9:	add    BYTE PTR [eax],al
 1010cab:	add    eax,eax
 1010cad:	add    BYTE PTR [eax],al
 1010caf:	add    eax,eax
 1010cb1:	add    BYTE PTR [eax],al
 1010cb3:	add    eax,eax
 1010cb5:	add    BYTE PTR [eax],al
 1010cb7:	add    eax,eax
 1010cb9:	add    BYTE PTR [eax],al
 1010cbb:	add    eax,eax
 1010cbd:	add    BYTE PTR [eax],al
 1010cbf:	add    eax,eax
 1010cc1:	add    BYTE PTR [eax],al
 1010cc3:	add    eax,eax
 1010cc5:	add    BYTE PTR [eax],al
 1010cc7:	pop    es
 1010cc8:	rol    BYTE PTR [eax],0x0
 1010ccb:	jg     0x1010c8d
 1010ccd:	add    BYTE PTR [eax],al
 1010ccf:	jg     0x1010c91
 1010cd1:	add    BYTE PTR [eax],al
 1010cd3:	jg     0x1010c95
 1010cd5:	add    BYTE PTR [eax],al
 1010cd7:	jg     0x1010c99
 1010cd9:	add    BYTE PTR [eax],al
 1010cdb:	jg     0x1010c9d
 1010cdd:	add    BYTE PTR [eax],al
 1010cdf:	jg     0x1010ca1
 1010ce1:	add    BYTE PTR [eax],al
 1010ce3:	jg     0x1010ca5
 1010ce5:	add    BYTE PTR [eax],al
 1010ce7:	jg     0x1010ca9
 1010ce9:	add    BYTE PTR [eax],al
 1010ceb:	jg     0x1010cad
 1010ced:	add    BYTE PTR [eax],al
 1010cef:	jg     0x1010cb1
 1010cf1:	add    BYTE PTR [eax],al
 1010cf3:	inc    eax
 1010cf5:	add    BYTE PTR [ecx],al
 1010cf7:	inc    eax
 1010cf9:	add    BYTE PTR [ebx],al
 1010cfb:	inc    eax
 1010cfd:	add    BYTE PTR [edi],al
 1010cff:	inc    eax
 1010d01:	add    BYTE PTR [edi],cl
 1010d03:	(bad)  
 1010d04:	(bad)  
 1010d05:	(bad)  
 1010d06:	(bad)  
 1010d07:	jmp    FWORD PTR [eax]
 1010d09:	add    BYTE PTR [eax],al
 1010d0b:	add    BYTE PTR [eax],dl
 1010d0d:	add    BYTE PTR [eax],al
 1010d0f:	add    BYTE PTR [eax],ah
 1010d11:	add    BYTE PTR [eax],al
 1010d13:	add    BYTE PTR [ecx],al
 1010d15:	add    BYTE PTR [eax],cl
	...
 1010d33:	add    ch,bh
 1010d35:	cli    
 1010d36:	stc    
 1010d37:	add    dl,bh
 1010d39:	out    dx,al
 1010d3a:	jmp    0xbfccf43f
 1010d3f:	add    bh,dh
 1010d41:	in     eax,0xdd
 1010d43:	add    cl,bh
 1010d45:	jmp    0xea:0xeffa00e3
 1010d4c:	cld    
 1010d4d:	repz out dx,eax
 1010d4f:	add    dh,bl
 1010d51:	mov    edi,0xd8f300af
 1010d56:	retf   
 1010d57:	add    ch,dh
 1010d59:	(bad)  
 1010d5b:	add    dh,dh
 1010d5d:	loope  0x1010d36
 1010d5f:	add    al,bh
 1010d61:	jmp    0xef:0xf3fb00e3
 1010d68:	std    
 1010d69:	div    esp
 1010d6b:	add    ah,bh
 1010d6d:	div    bl
 1010d6f:	add    dh,bh
 1010d71:	cli    
 1010d72:	clc    
 1010d73:	add    bh,bh
 1010d75:	std    
 1010d76:	cld    
 1010d77:	add    bh,al
 1010d79:	mov    bl,0xa8
 1010d7b:	add    al,cl
 1010d7d:	mov    dh,0xac
 1010d7f:	add    bh,dh
 1010d81:	out    0xdd,al
 1010d83:	add    cl,bh
 1010d85:	jmp    0x1010d6a
 1010d87:	add    al,ah
 1010d89:	ror    esp,cl
 1010d8b:	add    dl,bh
 1010d8d:	out    dx,eax
 1010d8e:	jmp    0xeff50993
 1010d93:	add    BYTE PTR [ecx-0x51ff9788],dl
 1010d99:	cwde   
 1010d9a:	mov    eax,DWORD PTR [eax]
 1010d9c:	mov    ecx,0xfb0097a4
 1010da1:	repz out dx,al
 1010da3:	add    BYTE PTR [edi-0x69ffa493],al
 1010da9:	jg     0x1010e1a
 1010dab:	add    BYTE PTR [ebp+ecx*4-0x715aff82],ah
 1010db2:	jg     0x1010db4
 1010db4:	mov    eax,ds:0xac007c8b
 1010db9:	xchg   edi,eax
 1010dba:	mov    DWORD PTR [eax],eax
 1010dbc:	mov    bl,0x9f
 1010dbe:	xchg   edx,eax
 1010dbf:	add    BYTE PTR [edx-0x3fff675a],bh
 1010dc5:	lods   al,BYTE PTR ds:[esi]
 1010dc6:	sahf   
 1010dc7:	add    BYTE PTR [edi-0x3aff6255],bh
 1010dcd:	mov    cl,0xa4
 1010dcf:	add    BYTE PTR [esi-0x3cff5e53],bh
 1010dd5:	mov    dl,0xa6
 1010dd7:	add    al,dh
 1010dd9:	jmp    0xf8:0xfafd00e6
 1010de0:	arpl   WORD PTR [ecx+0x35],cx
 1010de3:	add    BYTE PTR [ecx+edx*2+0x3d],ch
 1010de7:	add    BYTE PTR [ecx+0x57],dh
 1010dea:	inc    esp
 1010deb:	add    BYTE PTR [edi-0x62ff9080],dl
 1010df1:	xchg   BYTE PTR [ebp+0x0],dh
 1010df4:	pushf  
 1010df5:	test   DWORD PTR [eax+eax*1-0x5d],esi
 1010df9:	lea    edi,[ebp+0x0]
 1010dfc:	test   al,0x93
 1010dfe:	add    DWORD PTR [eax],0xffffffab
 1010e01:	xchg   esi,eax
 1010e02:	xchg   BYTE PTR [eax],al
 1010e04:	lods   al,BYTE PTR ds:[esi]
 1010e05:	xchg   edi,eax
 1010e06:	mov    BYTE PTR [eax],al
 1010e08:	mov    ah,0x9f
 1010e0a:	nop
 1010e0b:	add    BYTE PTR [ebx-0x4dff7062],dh
 1010e11:	popf   
 1010e12:	mov    es,WORD PTR [eax]
 1010e14:	mov    bl,0x9f
 1010e16:	nop
 1010e17:	add    bh,al
 1010e19:	mov    bh,0xab
 1010e1b:	add    BYTE PTR [ebp+edi*2-0x6854ff95],dl
 1010e22:	xchg   DWORD PTR [eax],eax
 1010e24:	mov    ecx,0xb80097a6
 1010e29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1010e2a:	cwde   
 1010e2b:	add    BYTE PTR [ebx-0x41ff6b5e],dh
 1010e31:	lods   al,BYTE PTR ds:[esi]
 1010e32:	sahf   
 1010e33:	add    dl,al
 1010e35:	mov    dl,0xa5
 1010e37:	add    BYTE PTR [eax-0x1ff6558],bh
 1010e3d:	std    
 1010e3e:	cld    
 1010e3f:	add    ah,cl
 1010e41:	(bad)  
 1010e42:	inc    DWORD PTR [eax]
 1010e44:	into   
 1010e45:	(bad)  
 1010e46:	inc    DWORD PTR [eax]
 1010e48:	sar    edi,cl
 1010e4a:	inc    DWORD PTR [eax]
 1010e4c:	mov    ch,0xf5
 1010e4e:	cli    
 1010e4f:	add    BYTE PTR [ebp-0x4eff0710],ch
 1010e55:	repz cli 
 1010e57:	add    BYTE PTR [ecx-0x62ff0814],ah
 1010e5d:	jmp    0xeba00f58
 1010e62:	test   BYTE PTR [eax],0xa0
 1010e65:	jmp    0xf6:0xe49100f6
 1010e6c:	xchg   edi,eax
 1010e6d:	loope  0x1010e5e
 1010e6f:	add    BYTE PTR [edx-0x1e],bh
 1010e72:	sti    
 1010e73:	add    BYTE PTR [ebp+edx*8-0xe],ch
 1010e77:	add    BYTE PTR [esi+ecx*8-0x16],ch
 1010e7b:	add    BYTE PTR [ebx-0x26],dh
 1010e7e:	cmc    
 1010e7f:	add    BYTE PTR [edx-0x28],dh
 1010e82:	repz add BYTE PTR [edx-0x28],dh
 1010e86:	repnz add BYTE PTR [ebx-0x28],dh
 1010e8a:	repz add BYTE PTR [ecx+ecx*8-0xf],cl
 1010e8f:	add    BYTE PTR [ecx-0x33],dl
 1010e92:	hlt    
 1010e93:	add    BYTE PTR [ecx-0x32],dl
 1010e96:	hlt    
 1010e97:	add    BYTE PTR [edx-0x32],dl
 1010e9a:	hlt    
 1010e9b:	add    BYTE PTR [eax],dl
 1010e9d:	mov    al,0xec
 1010e9f:	add    BYTE PTR [edx],bl
 1010ea1:	mov    bh,0xf0
 1010ea3:	add    BYTE PTR [ebx],bl
 1010ea5:	mov    ch,0xed
 1010ea7:	add    BYTE PTR [esi*4-0x45d5ff14],bl
 1010eae:	lock add BYTE PTR [edx-0x36],dl
 1010eb2:	repnz add BYTE PTR [edx+0xcebd],cl
 1010eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1010eba:	in     al,dx
 1010ebb:	add    BYTE PTR [eax],al
 1010ebd:	mov    ds:0xa40000e7,eax
 1010ec2:	out    0x0,eax
 1010ec4:	add    BYTE PTR [ebx-0x59dfff1a],ah
 1010eca:	fiadd  DWORD PTR [eax]
 1010ecc:	push   esp
 1010ecd:	fwait
 1010ece:	mov    eax,0xb79a5300
 1010ed3:	add    BYTE PTR [ebp-0x67],dl
 1010ed6:	mov    ch,0x0
 1010ed8:	pop    ecx
 1010ed9:	popf   
 1010eda:	mov    ecx,0xba9f5c00
 1010edf:	add    BYTE PTR [ebx-0x5d],dh
 1010ee2:	mov    dh,0x0
 1010ee4:	add    BYTE PTR [edi-0x67f7ff1a],bl
 1010eea:	aad    0x0
 1010eec:	push   ebp
 1010eed:	cdq    
 1010eee:	mov    dh,0x0
 1010ef0:	pop    eax
 1010ef1:	fwait
 1010ef2:	mov    eax,0x9c742d00
 1010ef7:	add    BYTE PTR ds:0x2d009b73,ch
 1010efd:	je     0x1010e9a
 1010eff:	add    BYTE PTR ds:0x2e009a73,ch
 1010f05:	je     0x1010ea2
 1010f07:	add    BYTE PTR [eax],dh
 1010f09:	jbe    0x1010ea8
 1010f0b:	add    BYTE PTR ds:0x4f009874,dh
 1010f11:	jne    0x1010ea2
 1010f13:	add    BYTE PTR [eax+0x76],dl
 1010f16:	nop
 1010f17:	add    bh,bh
 1010f19:	(bad)  
 1010f1a:	inc    DWORD PTR [eax]
 1010f1c:	(bad)  
 1010f1d:	(bad)  
 1010f1e:	inc    DWORD PTR [eax]
	...
 1011138:	add    BYTE PTR [edi+0x79],ah
 101113b:	jns    0x10111b5
 101113d:	jns    0x101113f
 101113f:	add    BYTE PTR [eax],al
 1011141:	cs sub al,0x2c
 1011144:	sub    al,0x2c
 1011146:	sub    al,0x2c
 1011148:	addr16 push edi
 101114a:	dec    edi
 101114b:	push   edx
 101114c:	data16 outs dx,BYTE PTR ds:[esi]
 101114e:	ja     0x1011150
 1011150:	add    BYTE PTR ds:0x8080803,bl
 1011156:	or     BYTE PTR [eax],cl
 1011158:	push   0x5c534a59
 101115d:	bound  esi,QWORD PTR [eax+eax*1+0x0]
 1011161:	sbb    DWORD PTR [edi],edx
 1011163:	adc    eax,0x90a0b14
 1011168:	jo     0x10111c3
 101116a:	dec    esp
 101116b:	push   ebp
 101116c:	pop    ebp
 101116d:	fs jb  0x1011170
 1011170:	add    BYTE PTR [esi],bl
 1011172:	sbb    al,0x36
 1011174:	xor    eax,0x693b3020
 1011179:	pop    edx
 101117a:	dec    ebp
 101117b:	push   esp
 101117c:	pop    ebp
 101117d:	arpl   WORD PTR [ebx+0x0],si
 1011180:	add    BYTE PTR [ecx],dh
 1011182:	prefetch BYTE PTR [esi]
 1011185:	or     al,0x4
 1011187:	or     ebp,DWORD PTR [edx+0x5a]
 101118a:	dec    ebp
 101118b:	push   esi
 101118c:	pop    esi
 101118d:	gs jne 0x1011190
 1011190:	add    BYTE PTR [ecx],ah
 1011192:	adc    BYTE PTR [ecx+edi*1],ah
 1011195:	cmp    al,0x1f
 1011197:	xor    DWORD PTR [edi+0x58],ebp
 101119a:	dec    ebx
 101119b:	push   ecx
 101119c:	pop    ebx
 101119d:	ins    DWORD PTR es:[edi],dx
 101119e:	jno    0x10111a0
 10111a0:	add    BYTE PTR [ebx],dh
 10111a2:	inc    ebx
 10111a3:	sub    ecx,DWORD PTR [edi]
 10111a5:	sbb    BYTE PTR [edi],dl
 10111a7:	add    eax,0x4e48506b
 10111ac:	pusha  
 10111ad:	pop    edi
 10111ae:	jbe    0x10111b0
 10111b0:	add    BYTE PTR [edx],bl
 10111b2:	jp     0x10111d9
 10111b4:	cmp    eax,0x61323437
 10111b9:	inc    edi
 10111ba:	inc    esp
 10111bb:	inc    esi
 10111bc:	inc    ebp
 10111bd:	dec    ecx
 10111be:	ins    BYTE PTR es:[edi],dx
 10111bf:	add    BYTE PTR [eax],al
 10111c1:	and    edi,DWORD PTR [edx+0x7a]
 10111c4:	inc    ebx
 10111c5:	sub    ecx,DWORD PTR [esi]
 10111c7:	or     eax,0x61616102
 10111cc:	popa   
 10111cd:	popa   
 10111ce:	add    BYTE PTR [eax],al
 10111d0:	add    BYTE PTR [esi],bh
 10111d2:	jp     0x10111fb
 10111d4:	sbb    edi,DWORD PTR es:[eax]
 10111d7:	push   ss
 10111d8:	pop    es
 10111d9:	pop    ss
 10111da:	or     BYTE PTR ds:0x0,ch
 10111e0:	add    BYTE PTR [eax+0x7a],al
 10111e3:	jp     0x101125f
 10111e5:	jp     0x101122a
 10111e7:	add    DWORD PTR [edi],ebp
 10111e9:	sub    eax,0x2d2d
 10111ee:	add    BYTE PTR [eax],al
 10111f0:	add    BYTE PTR [ecx+0x7a],al
 10111f3:	jp     0x101126f
 10111f5:	jp     0x1011271
 10111f7:	adc    DWORD PTR [edi],ebp
 10111f9:	sub    ch,BYTE PTR [edi]
 10111fb:	add    BYTE PTR [eax],al
 10111fd:	add    BYTE PTR [eax],al
 10111ff:	add    BYTE PTR [eax],al
 1011201:	cmp    bh,BYTE PTR [edx+0x7a]
 1011204:	jp     0x1011280
 1011206:	jp     0x1011282
 1011208:	das    
 1011209:	das    
 101120a:	add    BYTE PTR [eax],al
 101120c:	add    BYTE PTR [eax],al
 101120e:	add    BYTE PTR [eax],al
 1011210:	add    BYTE PTR [edx],dl
 1011212:	adc    ebp,DWORD PTR [ecx]
 1011214:	sub    BYTE PTR [edx+0x3f],al
 1011217:	and    ch,BYTE PTR [edi]
	...
 101122d:	add    BYTE PTR [eax],al
 101122f:	add    bh,bh
 1011231:	and    DWORD PTR [edx+0x6f018014],0x70
 1011238:	add    BYTE PTR [ecx],0x65
 101123b:	xchg   ecx,eax
 101123c:	add    BYTE PTR [ecx],0x87
 101123f:	test   BYTE PTR [eax-0x7f3017ff],al
 1011245:	add    DWORD PTR [ecx-0x27fe7f46],esi
 101124b:	(bad)  
 101124c:	add    BYTE PTR [ecx],0x0
 101124f:	add    BYTE PTR [eax-0x7fcd85ff],al
 1011255:	add    edi,DWORD PTR [eax]
 1011257:	sbb    eax,0x16510f80
 101125c:	or     BYTE PTR [edi],0xa
 101125f:	adc    eax,DWORD PTR [eax-0x7f3016e1]
 1011265:	aas    
 1011266:	mov    cl,0xba
 1011268:	cmp    BYTE PTR [edi-0x27],0xd7
 101126c:	(bad)  
 101126d:	inc    DWORD PTR [eax]
 101126f:	add    BYTE PTR [eax],ch
 1011271:	add    BYTE PTR [eax],al
 1011273:	add    BYTE PTR [eax],ah
 1011275:	add    BYTE PTR [eax],al
 1011277:	add    BYTE PTR [eax+0x0],al
 101127a:	add    BYTE PTR [eax],al
 101127c:	add    DWORD PTR [eax],eax
 101127e:	and    BYTE PTR [eax],al
	...
 10112e4:	push   ebx
 10112e5:	xchg   edx,eax
 10112e6:	scas   al,BYTE PTR es:[edi]
 10112e7:	call   DWORD PTR [ebx+0x70]
 10112ea:	mov    edi,edi
 10112ec:	push   ebx
 10112ed:	jo     0x1011278
 10112ef:	call   DWORD PTR [ebx+0x70]
 10112f2:	mov    edi,edi
 10112f4:	push   ebx
 10112f5:	jo     0x1011280
 10112f7:	call   DWORD PTR [ebx+0x70]
 10112fa:	mov    edi,edi
 10112fc:	push   ebx
 10112fd:	jo     0x1011288
 10112ff:	jmp    FWORD PTR [edi]
 1011301:	push   0xffffff8f
 1011303:	call   DWORD PTR [ebx+0x70]
 1011306:	mov    edi,edi
 1011308:	cmp    BYTE PTR [eax+0x7e],ah
 101130b:	inc    DWORD PTR [eax]
	...
 101131d:	add    BYTE PTR [eax],al
 101131f:	add    BYTE PTR [ecx+0x63ff5668],al
 1011325:	dec    ecx
 1011326:	xor    eax,0x354963ff
 101132b:	jmp    DWORD PTR [ebx+0x49]
 101132e:	xor    eax,0x354963ff
 1011333:	jmp    DWORD PTR [ebx+0x49]
 1011336:	xor    eax,0x354963ff
 101133b:	jmp    DWORD PTR [ebx+0x49]
 101133e:	xor    eax,0x354963ff
 1011343:	jmp    DWORD PTR [ebx+0x49]
 1011346:	xor    eax,0x354963ff
 101134b:	jmp    DWORD PTR [ebx+0x49]
 101134e:	xor    eax,0x354963ff
 1011353:	jmp    DWORD PTR [ebx+0x49]
 1011356:	xor    eax,0x354963ff
 101135b:	jmp    DWORD PTR [ebx+0x49]
 101135e:	xor    eax,0xae9253ff
 1011363:	jmp    DWORD PTR [ebx]
 1011365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1011366:	aam    0xff
 1011368:	dec    ebx
 1011369:	mov    dl,0xcf
 101136b:	inc    DWORD PTR [edx-0x63001a2e]
 1011371:	loop   0x1011361
 1011373:	inc    DWORD PTR [ecx+0x50fff0db]
 1011379:	(bad)  
 101137a:	in     al,dx
 101137b:	jmp    DWORD PTR [edx+ebp*4]
 101137e:	(bad)  
 1011380:	or     al,0x9d
 1011382:	fdivr  st,st(7)
 1011384:	add    eax,0x8ffc18b
 1011389:	mov    eax,eax
 101138b:	(bad)  
 101138c:	cmp    BYTE PTR [eax+0x7e],ah
 101138f:	inc    DWORD PTR [eax]
	...
 101139d:	add    BYTE PTR [eax],al
 101139f:	add    BYTE PTR [ebx+ebp*2-0x240b00a7],al
 10113a6:	into   
 10113a7:	(bad)  
 10113a8:	faddp  st(0),st
 10113aa:	mov    cl,0xff
 10113ac:	fdivr  QWORD PTR [esi-0x43240052]
 10113b2:	lods   al,BYTE PTR ds:[esi]
 10113b3:	(bad)  
 10113b4:	fstp   TBYTE PTR [ebx-0x46260056]
 10113ba:	test   al,0xff
 10113bc:	fdiv   DWORD PTR [edi-0x4a27005b]
 10113c2:	mov    ds:0xa1b3d7ff,eax
 10113c7:	call   esi
 10113c9:	mov    cl,0x9f
 10113cb:	call   esi
 10113cd:	mov    al,0x9c
 10113cf:	call   esp
 10113d1:	lods   eax,DWORD PTR ds:[esi]
 10113d2:	call   0xd2ff:0x97abd4ff
 10113d9:	stos   BYTE PTR es:[edi],al
 10113da:	xchg   esi,eax
 10113db:	call   edx
 10113dd:	test   al,0x93
 10113df:	dec    DWORD PTR [ecx-0x7c]
 10113e2:	mov    ds:0xe7bd44ff,al
 10113e7:	jmp    DWORD PTR [edi-0x2d]
 10113ea:	icebp  
 10113eb:	dec    DWORD PTR [ebx+eiz*8-0x145d000c]
 10113f2:	idiv   bh
 10113f4:	sbb    edi,0xfffffff4
 10113f7:	call   DWORD PTR [eax-0x36]
 10113fa:	lock call FWORD PTR [esi]
 10113fd:	mov    dh,0xed
 10113ff:	inc    DWORD PTR [edx]
 1011401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1011402:	call   0xe2a21606
 1011407:	dec    DWORD PTR [ecx]
 1011409:	xchg   esi,eax
 101140a:	sar    bh,cl
 101140c:	cmp    BYTE PTR [eax+0x7e],ah
 101140f:	inc    DWORD PTR [eax]
	...
 101141d:	add    BYTE PTR [eax],al
 101141f:	add    BYTE PTR [esi-0xb00a492],al
 1011425:	(bad)  
 1011427:	(bad)  
 1011428:	cli    
 1011429:	out    dx,al
 101142a:	jmp    0xe7ee0e2e
 101142f:	(bad)  
 1011430:	stc    
 1011431:	jmp    0xffdf:0xe7f7ffe3
 1011438:	clc    
 1011439:	in     eax,0xdc
 101143b:	push   edi
 101143d:	jecxz  0x1011419
 101143f:	push   esi
 1011441:	loopne 0x101141a
 1011443:	push   ebp
 1011445:	(bad)  
 1011447:	push   esp
 1011449:	fst    st(1)
 101144b:	push   esp
 101144d:	fcmovne st,st(6)
 101144f:	push   ebx
 1011451:	fmul   st,st(3)
 1011453:	push   ebx
 1011455:	(bad)  
 1011456:	enter  0xf2ff,0xd3
 101145a:	(bad)  
 101145d:	rol    edx,1
 101145f:	dec    DWORD PTR [ecx-0x7c]
 1011462:	mov    ds:0xf0c443ff,al
 1011467:	jmp    FWORD PTR [ecx-0x2c]
 101146a:	icebp  
 101146b:	dec    DWORD PTR [ebx+eiz*8-0x145d000c]
 1011472:	idiv   bh
 1011474:	sbb    edi,0xfffffff4
 1011477:	call   DWORD PTR [eax-0x36]
 101147a:	lock call FWORD PTR [esi]
 101147d:	mov    dh,0xed
 101147f:	inc    DWORD PTR [edx]
 1011481:	test   al,0xe8
 1011483:	inc    DWORD PTR [ecx]
 1011485:	mov    eax,ds:0x9c03ffe1
 101148a:	(bad)  
 101148c:	cmp    BYTE PTR [eax+0x7e],ah
 101148f:	inc    DWORD PTR [eax]
	...
 101149d:	add    BYTE PTR [eax],al
 101149f:	add    BYTE PTR [ecx-0xa00a190],cl
 10114a5:	(bad)  
 10114a7:	(bad)  
 10114a8:	cli    
 10114a9:	lock in al,dx
 10114ab:	(bad)  
 10114ac:	stc    
 10114ad:	out    dx,al
 10114ae:	call   0xe7ed0eb2
 10114b3:	(bad)  
 10114b4:	stc    
 10114b5:	jmp    0xe8fa149c
 10114ba:	(bad)  
 10114bc:	clc    
 10114bd:	in     eax,0xdc
 10114bf:	push   esi
 10114c1:	jecxz  0x101149d
 10114c3:	push   ebp
 10114c5:	loope  0x101149d
 10114c7:	push   ebp
 10114c9:	(bad)  
 10114cb:	push   ebp
 10114cd:	fst    st(1)
 10114cf:	push   esp
 10114d1:	fcmove st,st(5)
 10114d3:	push   ebx
 10114d5:	fmul   st,st(3)
 10114d7:	push   ebx
 10114d9:	aad    0xc8
 10114db:	push   edx
 10114dd:	rol    ebp,cl
 10114df:	dec    DWORD PTR [ecx-0x7c]
 10114e2:	mov    ds:0xefc443ff,al
 10114e7:	jmp    FWORD PTR [eax-0x2c]
 10114ea:	icebp  
 10114eb:	dec    DWORD PTR [ebp-0x5d000b1d]
 10114f1:	jmp    0x10114e9
 10114f3:	inc    DWORD PTR [edx+0x51fff3df]
 10114f9:	retf   0xfff0
 10114fc:	push   ds
 10114fd:	mov    dh,0xed
 10114ff:	inc    DWORD PTR [edx]
 1011501:	test   al,0xe8
 1011503:	inc    DWORD PTR [edx]
 1011505:	mov    eax,ds:0x9c03ffe1
 101150a:	(bad)  
 101150c:	cmp    BYTE PTR [eax+0x7e],ah
 101150f:	inc    DWORD PTR [eax]
	...
 101151d:	add    BYTE PTR [eax],al
 101151f:	add    BYTE PTR [ebx-0x9009e8d],cl
 1011525:	loopne 0x10114fd
 1011527:	(bad)  
 1011528:	sti    
 1011529:	repnz out dx,al
 101152b:	dec    ebx
 101152d:	mov    eax,0xb8cbffab
 1011532:	stos   DWORD PTR es:[edi],eax
 1011533:	dec    eax
 1011535:	mov    ah,0xa7
 1011537:	inc    esp
 1011539:	mov    al,0xa3
 101153b:	inc    eax
 101153d:	stos   DWORD PTR es:[edi],eax
 101153e:	sahf   
 101153f:	(bad)  
 1011540:	mov    edx,0xb5ff98a6
 1011545:	mov    al,ds:0x9aafff92
 101154a:	mov    edi,edi
 101154c:	test   eax,0xa3ff8393
 1011551:	mov    WORD PTR [ebx-0x1],?
 1011554:	pushf  
 1011555:	test   DWORD PTR [edi+edi*8-0x6b],esi
 1011559:	jle    0x10115c8
 101155b:	dec    DWORD PTR [edi+0x49ff6477]
 1011561:	test   BYTE PTR [edx-0xf39ba01],ah
 1011567:	jmp    FWORD PTR [edx-0x2c]
 101156a:	icebp  
 101156b:	dec    DWORD PTR [ebx+eiz*8-0x145d000c]
 1011572:	idiv   bh
 1011574:	sbb    bh,0xf4
 1011577:	call   DWORD PTR [ecx-0x36]
 101157a:	lock call FWORD PTR [esi]
 101157d:	mov    dh,0xed
 101157f:	inc    DWORD PTR [edx]
 1011581:	test   al,0xe8
 1011583:	inc    DWORD PTR [ecx]
 1011585:	mov    ds:0x9b04ffe2,al
 101158a:	(bad)  
 101158c:	cmp    BYTE PTR [eax+0x7e],ah
 101158f:	inc    DWORD PTR [eax]
	...
 101159d:	add    BYTE PTR [eax],al
 101159f:	add    BYTE PTR [ebp-0x9009b8a],cl
 10115a5:	loop   0x101157f
 10115a7:	(bad)  
 10115a8:	cld    
 10115a9:	hlt    
 10115aa:	repnz (bad) 
 10115ac:	cld    
 10115ad:	repz out dx,al
 10115af:	(bad)  
 10115b0:	sti    
 10115b1:	lock jmp 0x10115b3
 10115b4:	cli    
 10115b5:	in     eax,dx
 10115b6:	call   0xe6ee10ba
 10115bb:	(bad)  
 10115bc:	clc    
 10115bd:	jmp    0xe7fa15a3
 10115c2:	(bad)  
 10115c4:	mul    esp
 10115c6:	fdiv   st(7),st
 10115c8:	mul    dl
 10115ca:	fcos   
 10115cc:	mul    cl
 10115ce:	(bad)  
 10115cf:	push   esi
 10115d1:	(bad)  
 10115d3:	push   ebp
 10115d5:	(bad)  
 10115d7:	push   esp
 10115d9:	fxch   st(6)
 10115db:	push   ebx
 10115dd:	fmul   st,st(2)
 10115df:	dec    DWORD PTR [edx-0x7c]
 10115e2:	mov    ds:0xf0c646ff,al
 10115e7:	jmp    FWORD PTR [edx-0x2c]
 10115ea:	repnz dec DWORD PTR [ebp-0x5d000b1d]
 10115f1:	jmp    0x10115e9
 10115f3:	inc    DWORD PTR [ebx+0x50fff4df]
 10115f9:	retf   0xfff0
 10115fc:	push   ds
 10115fd:	mov    dh,0xed
 10115ff:	inc    DWORD PTR [ecx]
 1011601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1011602:	call   0xe3a21806
 1011607:	inc    DWORD PTR [ebx]
 1011609:	pushf  
 101160a:	(bad)  
 101160c:	cmp    BYTE PTR [eax+0x7e],ah
 101160f:	inc    DWORD PTR [eax]
	...
 101161d:	add    BYTE PTR [eax],al
 101161f:	add    BYTE PTR [edi-0x8009888],cl
 1011625:	in     al,0xdb
 1011627:	(bad)  
 1011628:	cld    
 1011629:	div    ah
 101162b:	(bad)  
 101162c:	cld    
 101162d:	hlt    
 101162e:	icebp  
 101162f:	(bad)  
 1011630:	sti    
 1011631:	repz out dx,al
 1011633:	(bad)  
 1011634:	cli    
 1011635:	lock jmp 0x1011637
 1011638:	cli    
 1011639:	out    dx,al
 101163a:	call   0xe6ed103e
 101163f:	(bad)  
 1011640:	stc    
 1011641:	jmp    0xe8fa1627
 1011646:	(bad)  
 1011648:	mul    esp
 101164a:	fdiv   st(7),st
 101164c:	mul    dl
 101164e:	fcos   
 1011650:	mul    al
 1011652:	(bad)  
 1011653:	push   ebp
 1011655:	(bad)  
 1011657:	push   esp
 1011659:	(bad)  
 101165b:	push   esp
 101165d:	fcmove st,st(6)
 101165f:	call   DWORD PTR [eax-0x75]
 1011662:	test   al,0xff
 1011664:	inc    esi
 1011665:	(bad)
 1011668:	imul   edx,esp,0xfffffff2
 101166b:	dec    DWORD PTR [ebp-0x5d000b1d]
 1011671:	jmp    0x1011669
 1011673:	inc    DWORD PTR [edx+0x50fff4df]
 1011679:	retf   0xfff0
 101167c:	push   ds
 101167d:	mov    dh,0xed
 101167f:	inc    DWORD PTR [ecx]
 1011681:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1011682:	call   0xe2a21886
 1011687:	inc    DWORD PTR [ebx]
 1011689:	pushf  
 101168a:	(bad)  
 101168c:	cmp    DWORD PTR [ebx-0x7f],esp
 101168f:	inc    DWORD PTR [eax]
	...
 101169d:	add    BYTE PTR [eax],al
 101169f:	add    BYTE PTR [edx-0x7009685],dl
 10116a5:	out    0xde,al
 10116a7:	(bad)  
 10116a8:	std    
 10116a9:	stc    
 10116aa:	idiv   bh
 10116ac:	retf   
 10116ad:	mov    eax,0xb8cbffab
 10116b2:	stos   DWORD PTR es:[edi],eax
 10116b3:	dec    ecx
 10116b5:	mov    dh,0xa9
 10116b7:	inc    ebp
 10116b9:	mov    bl,0xa5
 10116bb:	inc    edx
 10116bd:	scas   al,BYTE PTR es:[edi]
 10116be:	mov    al,ds:0x9ba8bdff
 10116c3:	(bad)  
 10116c4:	mov    eax,0xb1ff95a3
 10116c9:	popf   
 10116ca:	(bad)  
 10116cb:	jmp    FWORD PTR [ebx-0x5a00786a]
 10116d1:	(bad)  
 10116d2:	jg     0x10116d3
 10116d4:	lahf   
 10116d5:	mov    DWORD PTR [eax-0x1],edi
 10116d8:	cwde   
 10116d9:	xor    DWORD PTR [eax-0x1],0xff687a91
 10116e0:	pop    ecx
 10116e1:	xchg   esp,eax
 10116e2:	scas   eax,DWORD PTR es:[edi]
 10116e3:	inc    DWORD PTR [esi-0x3b]
 10116e6:	lock jmp FWORD PTR [ebx-0x2c]
 10116ea:	repnz dec DWORD PTR [ebp-0x5d000b1d]
 10116f1:	jmp    0x10116e9
 10116f3:	inc    DWORD PTR [ebx+0x51fff4df]
 10116f9:	retf   
 10116fa:	lock call FWORD PTR [esi]
 10116fd:	mov    ch,0xed
 10116ff:	inc    DWORD PTR [edx]
 1011701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1011702:	call   0xe3a21906
 1011707:	inc    DWORD PTR [esp+ebx*4]
 101170a:	(bad)  
 101170c:	cmp    ah,BYTE PTR [edi-0x7a]
 101170f:	inc    DWORD PTR [eax]
	...
 101171d:	add    BYTE PTR [eax],al
 101171f:	add    BYTE PTR [ebp-0x7009383],dl
 1011725:	call   0xfc00170b
 101172a:	stc    
 101172b:	(bad)  
 101172c:	std    
 101172d:	clc    
 101172e:	idiv   bh
 1011730:	cld    
 1011731:	div    bl
 1011733:	(bad)  
 1011734:	sti    
 1011735:	hlt    
 1011736:	icebp  
 1011737:	(bad)  
 1011738:	sti    
 1011739:	repnz in eax,dx
 101173b:	(bad)  
 101173c:	cli    
 101173d:	out    dx,eax
 101173e:	jmp    0x101173f
 1011740:	cli    
 1011741:	out    dx,al
 1011742:	out    0xff,eax
 1011744:	stc    
 1011745:	jmp    0x101172c
 1011747:	(bad)  
 1011748:	clc    
 1011749:	jmp    0xe7fa172f
 101174e:	fdivp  st(7),st
 1011750:	mul    esp
 1011752:	fdiv   st(7),st
 1011754:	mul    edx
 1011756:	fcos   
 1011758:	cmc    
 1011759:	loopne 0x1011730
 101175b:	push   ebp
 101175d:	(bad)  
 101175f:	jmp    DWORD PTR [edx-0x63]
 1011762:	mov    bh,0xff
 1011764:	inc    esi
 1011765:	(bad)
 1011768:	imul   edx,esp,0xfffffff1
 101176b:	dec    DWORD PTR [ebp-0x5d000b1d]
 1011771:	jmp    0x1011769
 1011773:	inc    DWORD PTR [ebx+0x51fff4df]
 1011779:	retf   0xfff0
 101177c:	push   ds
 101177d:	mov    dh,0xed
 101177f:	inc    DWORD PTR [edx]
 1011781:	test   al,0xe9
 1011783:	inc    DWORD PTR [ecx]
 1011785:	mov    eax,ds:0x9c03ffe1
 101178a:	(bad)  
 101178c:	cmp    ebp,DWORD PTR [ebx+ecx*4-0x1]
	...
 10117a0:	xchg   esi,eax
 10117a1:	jg     0x1011812
 10117a3:	(bad)  
 10117a4:	stc    
 10117a5:	jmp    0xfffa:0xfcfeffe3
 10117ac:	(bad)  
 10117ad:	cli    
 10117ae:	clc    
 10117af:	(bad)  
 10117b0:	std    
 10117b1:	clc    
 10117b2:	cmc    
 10117b3:	(bad)  
 10117b4:	cld    
 10117b5:	div    bl
 10117b7:	(bad)  
 10117b8:	sti    
 10117b9:	hlt    
 10117ba:	icebp  
 10117bb:	(bad)  
 10117bc:	cld    
 10117bd:	icebp  
 10117be:	in     eax,dx
 10117bf:	(bad)  
 10117c0:	cli    
 10117c1:	lock jmp 0xf9ff:0xe7edfaff
 10117c9:	jmp    0xffe1:0xe9f8ffe4
 10117d0:	mul    edi
 10117d2:	fdivp  st(7),st
 10117d4:	mul    ah
 10117d6:	(bad)  
 10117d8:	mul    dl
 10117da:	fdivr  st,st(7)
 10117dc:	cmc    
 10117dd:	loopne 0x10117b5
 10117df:	jmp    FWORD PTR [edx-0x59]
 10117e2:	mov    esi,0xf0c645ff
 10117e7:	jmp    FWORD PTR [ebx-0x2c]
 10117ea:	repnz dec DWORD PTR [ebp-0x5d000b1d]
 10117f1:	jmp    0x10117e9
 10117f3:	inc    DWORD PTR [ebx+0x51fff4df]
 10117f9:	retf   0xfff0
 10117fc:	push   ds
 10117fd:	mov    dh,0xed
 10117ff:	inc    DWORD PTR [edx]
 1011801:	test   al,0xe8
 1011803:	inc    DWORD PTR [edx]
 1011805:	mov    eax,ds:0x9c03ffe1
 101180a:	(bad)  
 101180c:	cmp    eax,0xff9070
	...
 101181d:	add    BYTE PTR [eax],al
 101181f:	add    BYTE PTR [eax-0x6008e7e],bl
 1011825:	in     al,dx
 1011826:	out    0xff,al
 1011828:	(bad)  
 1011829:	std    
 101182a:	std    
 101182b:	dec    ebx
 101182d:	mov    eax,0xb8cbffab
 1011832:	stos   DWORD PTR es:[edi],eax
 1011833:	dec    edx
 1011835:	mov    eax,0xb4c7ffab
 101183a:	test   al,0xff
 101183c:	ret    
 101183d:	mov    al,0xa3
 101183f:	inc    eax
 1011841:	lods   al,BYTE PTR ds:[esi]
 1011842:	popf   
 1011843:	(bad)  
 1011844:	mov    edx,0xb4ff97a5
 1011849:	lahf   
 101184a:	xchg   ecx,eax
 101184b:	jmp    FWORD PTR [esi-0x57007567]
 1011851:	xchg   edx,eax
 1011852:	cmp    edi,0xffffffa2
 1011855:	mov    edi,DWORD PTR [ebx-0x1]
 1011858:	fwait
 1011859:	test   BYTE PTR [edi+edi*8-0x6b],dh
 101185d:	jle    0x10118cb
 101185f:	push   DWORD PTR [eax-0x54]
 1011862:	ret    0x45ff
 1011865:	(bad)  
 1011866:	lock jmp FWORD PTR [ecx-0x2c]
 101186a:	icebp  
 101186b:	dec    DWORD PTR [ebx+eiz*8-0x145d000c]
 1011872:	idiv   bh
 1011874:	sbb    edi,0xfffffff4
 1011877:	call   DWORD PTR [ecx-0x36]
 101187a:	lock call FWORD PTR [esi]
 101187d:	mov    dh,0xed
 101187f:	inc    DWORD PTR [edx]
 1011881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1011882:	call   0xe2a21a86
 1011887:	inc    DWORD PTR [ebx]
 1011889:	(bad)  
 101188c:	ds jae 0x1011822
 101188f:	inc    DWORD PTR [eax]
	...
 101189d:	add    BYTE PTR [eax],al
 101189f:	add    BYTE PTR [ebx-0x5008c7c],bl
 10118a5:	out    dx,al
 10118a6:	call   0x18aa
 10118ab:	(bad)  
 10118ac:	(bad)  
 10118ad:	std    
 10118ae:	std    
 10118af:	(bad)  
 10118b0:	(bad)  
 10118b1:	sti    
 10118b2:	cli    
 10118b3:	(bad)  
 10118b4:	std    
 10118b5:	stc    
 10118b6:	clc    
 10118b7:	(bad)  
 10118b8:	std    
 10118b9:	clc    
 10118ba:	idiv   bh
 10118bc:	std    
 10118bd:	div    dl
 10118bf:	(bad)  
 10118c0:	sti    
 10118c1:	hlt    
 10118c2:	lock (bad) 
 10118c4:	sti    
 10118c5:	repnz in eax,dx
 10118c7:	(bad)  
 10118c8:	cli    
 10118c9:	out    dx,eax
 10118ca:	jmp    0xf9ff:0xe7edfaff
 10118d1:	jmp    0xffe0:0xe8f8ffe4
 10118d8:	mul    esi
 10118da:	(bad)  
 10118dc:	mul    ebx
 10118de:	(bad)  
 10118e0:	jo     0x101188e
 10118e2:	ret    0x6bff
 10118e5:	aad    0xf4
 10118e7:	call   FWORD PTR [edx-0x4a000818]
 10118ed:	repz cli 
 10118ef:	inc    edx
 10118f1:	clc    
 10118f2:	cld    
 10118f3:	inc    ebx
 10118f5:	clc    
 10118f6:	std    
 10118f7:	inc    ecx
 10118f9:	idiv   ebp
 10118fb:	jmp    FWORD PTR [edi-0x70000410]
 1011901:	loop   0x10118fa
 1011903:	jmp    FWORD PTR [edx-0x30]
 1011906:	lock (bad) 
 1011908:	ds mov eax,0x733effe5
 101190e:	xchg   ebx,eax
 101190f:	inc    DWORD PTR [eax]
	...
 101191d:	add    BYTE PTR [eax],al
 101191f:	add    BYTE PTR [ebp-0x5008979],bl
 1011925:	icebp  
 1011926:	jmp    0x1011927
 1011928:	(bad)  
 1011929:	(bad)  
 101192a:	(bad)  
 101192b:	(bad)  
 101192c:	(bad)  
 101192d:	(bad)  
 101192e:	(bad)  
 101192f:	(bad)  
 1011930:	(bad)  
 1011931:	std    
 1011932:	cld    
 1011933:	(bad)  
 1011934:	(bad)  
 1011935:	sti    
 1011936:	cli    
 1011937:	(bad)  
 1011938:	std    
 1011939:	cli    
 101193a:	clc    
 101193b:	(bad)  
 101193c:	std    
 101193d:	clc    
 101193e:	idiv   bh
 1011940:	cld    
 1011941:	div    bl
 1011943:	(bad)  
 1011944:	sti    
 1011945:	hlt    
 1011946:	lock (bad) 
 1011948:	sti    
 1011949:	repnz in eax,dx
 101194b:	(bad)  
 101194c:	cli    
 101194d:	out    dx,eax
 101194e:	jmp    0xf8ff:0xe7edf9ff
 1011955:	jmp    0xffe0:0xe8f8ffe3
 101195c:	mul    esi
 101195e:	(bad)  
 1011960:	jo     0x101190e
 1011962:	ret    0xc5ff
 1011965:	stc    
 1011966:	std    
 1011967:	inc    ebp
 1011969:	stc    
 101196a:	std    
 101196b:	inc    ebp
 101196d:	stc    
 101196e:	std    
 101196f:	inc    ebp
 1011971:	stc    
 1011972:	std    
 1011973:	inc    ebp
 1011975:	stc    
 1011976:	std    
 1011977:	inc    ebp
 1011979:	stc    
 101197a:	std    
 101197b:	inc    ebp
 101197d:	stc    
 101197e:	std    
 101197f:	inc    ebp
 1011981:	stc    
 1011982:	std    
 1011983:	inc    ebp
 1011985:	stc    
 1011986:	std    
 1011987:	inc    ebp
 1011989:	stc    
 101198a:	std    
 101198b:	(bad)  
 101198c:	ds jae 0x1011922
 101198f:	inc    DWORD PTR [eax]
	...
 101199d:	add    BYTE PTR [eax],al
 101199f:	add    BYTE PTR [edi-0x4008677],bl
 10119a5:	repnz out dx,al
 10119a7:	(bad)  
 10119a8:	(bad)  
 10119a9:	(bad)  
 10119aa:	(bad)  
 10119ab:	dec    ebx
 10119ad:	mov    eax,0xb8cbffab
 10119b2:	stos   DWORD PTR es:[edi],eax
 10119b3:	dec    ebx
 10119b5:	mov    eax,0xb6c9ffab
 10119ba:	test   eax,0xa5b2c6ff
 10119bf:	inc    ecx
 10119c1:	scas   al,BYTE PTR es:[edi]
 10119c2:	mov    al,ds:0x9aa8bdff
 10119c7:	(bad)  
 10119c8:	mov    eax,0xb2ff94a3
 10119cd:	pushf  
 10119ce:	(bad)  
 10119cf:	jmp    FWORD PTR [ebx-0x5a00786b]
 10119d5:	(bad)  
 10119d6:	jg     0x10119d7
 10119d8:	sahf   
 10119d9:	mov    BYTE PTR [eax-0x1],bh
 10119dc:	cwde   
 10119dd:	xor    DWORD PTR [eax-0x1],0xffcab781
 10119e4:	lods   eax,DWORD PTR ds:[esi]
 10119e5:	fucom  st(6)
 10119e7:	jmp    FWORD PTR [ebp-0x47001923]
 10119ed:	jmp    0xf3c219e1
 10119f2:	idiv   edi
 10119f4:	xbegin 0xf9c919f6
 10119fa:	cld    
 10119fb:	inc    eax
 10119fd:	icebp  
 10119fe:	cmc    
 10119ff:	push   DWORD PTR [ebp-0x4c00141b]
 1011a05:	loop   0x10119f0
 1011a07:	push   DWORD PTR [ebx+0x3effe9e2]
 1011a0d:	jae    0x10119a2
 1011a0f:	inc    DWORD PTR [eax]
	...
 1011a1d:	add    BYTE PTR [eax],al
 1011a1f:	add    BYTE PTR [edx-0x4008474],ah
 1011a25:	hlt    
 1011a26:	icebp  
 1011a27:	(bad)  
 1011a28:	(bad)  
 1011a29:	(bad)  
 1011a2a:	(bad)  
 1011a2b:	(bad)  
 1011a2c:	(bad)  
 1011a2d:	(bad)  
 1011a2e:	(bad)  
 1011a2f:	(bad)  
 1011a30:	(bad)  
 1011a31:	(bad)  
 1011a32:	(bad)  
 1011a33:	(bad)  
 1011a34:	(bad)  
 1011a35:	(bad)  
 1011a36:	(bad)  
 1011a37:	(bad)  
 1011a38:	(bad)  
 1011a39:	std    
 1011a3a:	cld    
 1011a3b:	(bad)  
 1011a3c:	(bad)  
 1011a3d:	sti    
 1011a3e:	cli    
 1011a3f:	(bad)  
 1011a40:	std    
 1011a41:	stc    
 1011a42:	idiv   edi
 1011a44:	std    
 1011a45:	div    ebp
 1011a47:	(bad)  
 1011a48:	cld    
 1011a49:	cmc    
 1011a4a:	repnz (bad) 
 1011a4c:	sti    
 1011a4d:	repz out dx,eax
 1011a4f:	(bad)  
 1011a50:	sti    
 1011a51:	repnz in eax,dx
 1011a53:	(bad)  
 1011a54:	cli    
 1011a55:	out    dx,eax
 1011a56:	jmp    0xe8ee145a
 1011a5b:	(bad)  
 1011a5c:	clc    
 1011a5d:	jmp    0xffe0:0xe8f8ffe3
 1011a64:	xor    DWORD PTR [edi-0x46830036],0xb87cffd0
 1011a6e:	iret   
 1011a6f:	(bad)  
 1011a70:	jl     0x1011a2a
 1011a72:	iret   
 1011a73:	(bad)  
 1011a74:	jl     0x1011a2e
 1011a76:	iret   
 1011a77:	(bad)  
 1011a78:	jl     0x1011a32
 1011a7a:	iret   
 1011a7b:	(bad)  
 1011a7c:	jl     0x1011a36
 1011a7e:	iret   
 1011a7f:	(bad)  
 1011a80:	jl     0x1011a3a
 1011a82:	iret   
 1011a83:	(bad)  
 1011a84:	jl     0x1011a3f
 1011a86:	sar    bh,1
 1011a88:	jnp    0x1011a32
 1011a8a:	mov    eax,0xff
	...
 1011a9f:	add    BYTE PTR [esi+ecx*4-0x9030082],ah
 1011aa6:	repz (bad) 
 1011aa8:	(bad)  
 1011aa9:	(bad)  
 1011aaa:	(bad)  
 1011aab:	(bad)  
 1011aac:	(bad)  
 1011aad:	(bad)  
 1011aae:	(bad)  
 1011aaf:	(bad)  
 1011ab0:	(bad)  
 1011ab1:	(bad)  
 1011ab2:	(bad)  
 1011ab3:	(bad)  
 1011ab4:	(bad)  
 1011ab5:	(bad)  
 1011ab6:	(bad)  
 1011ab7:	(bad)  
 1011ab8:	(bad)  
 1011ab9:	(bad)  
 1011aba:	(bad)  
 1011abb:	(bad)  
 1011abc:	(bad)  
 1011abd:	cld    
 1011abe:	cld    
 1011abf:	(bad)  
 1011ac0:	(bad)  
 1011ac1:	sti    
 1011ac2:	cli    
 1011ac3:	(bad)  
 1011ac4:	std    
 1011ac5:	stc    
 1011ac6:	idiv   edi
 1011ac8:	cld    
 1011ac9:	div    ebp
 1011acb:	(bad)  
 1011acc:	cld    
 1011acd:	cmc    
 1011ace:	repnz (bad) 
 1011ad0:	sti    
 1011ad1:	repz out dx,eax
 1011ad3:	(bad)  
 1011ad4:	sti    
 1011ad5:	icebp  
 1011ad6:	in     al,dx
 1011ad7:	(bad)  
 1011ad8:	cli    
 1011ad9:	out    dx,eax
 1011ada:	jmp    0xe7ee14de
 1011adf:	(bad)  
 1011ae0:	clc    
 1011ae1:	jmp    0xffe0:0xe8f8ffe3
 1011ae8:	clc    
 1011ae9:	in     eax,0xdc
 1011aeb:	push   esi
 1011aed:	jecxz  0x1011ac9
 1011aef:	push   esi
 1011af1:	loope  0x1011aca
 1011af3:	(bad)  
 1011af4:	fidivr DWORD PTR [ecx+0x4963ffa7]
 1011afa:	xor    eax,0xff
	...
 1011b1f:	add    BYTE PTR [esi-0x2007e6f],ah
 1011b25:	clc    
 1011b26:	idiv   bh
 1011b28:	(bad)  
 1011b29:	(bad)  
 1011b2a:	(bad)  
 1011b2b:	dec    ebx
 1011b2d:	mov    eax,0xb8cbffab
 1011b32:	stos   DWORD PTR es:[edi],eax
 1011b33:	dec    ebx
 1011b35:	mov    eax,0xb7cbffab
 1011b3a:	stos   BYTE PTR es:[edi],al
 1011b3b:	dec    eax
 1011b3d:	mov    ah,0xa7
 1011b3f:	inc    esp
 1011b41:	mov    al,0xa2
 1011b43:	(bad)  
 1011b44:	mov    edi,0xb9ff9dab
 1011b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1011b4a:	xchg   edi,eax
 1011b4b:	push   DWORD PTR [eax+eiz*4-0x6650006f]
 1011b52:	mov    bh,bh
 1011b54:	test   al,0x92
 1011b56:	cmp    edi,0xffffffa1
 1011b59:	mov    edi,DWORD PTR [edi+edi*8-0x65]
 1011b5d:	test   BYTE PTR [edi+edi*8-0x6c],dh
 1011b61:	jge    0x1011bcf
 1011b63:	dec    DWORD PTR [esi-0x78009b8a]
 1011b69:	outs   dx,DWORD PTR ds:[esi]
 1011b6a:	pop    ebp
 1011b6b:	inc    DWORD PTR [ecx-0x800aa98]
 1011b71:	jecxz  0x1011b4d
 1011b73:	(bad)  
 1011b74:	fstp   TBYTE PTR [edx+0x4963ffaa]
 1011b7a:	xor    eax,0xff
	...
 1011b9f:	add    BYTE PTR [edx-0x1007b6c],ch
 1011ba5:	stc    
 1011ba6:	clc    
 1011ba7:	(bad)  
 1011ba8:	(bad)  
 1011ba9:	(bad)  
 1011baa:	(bad)  
 1011bab:	(bad)  
 1011bac:	(bad)  
 1011bad:	(bad)  
 1011bae:	(bad)  
 1011baf:	(bad)  
 1011bb0:	(bad)  
 1011bb1:	(bad)  
 1011bb2:	(bad)  
 1011bb3:	(bad)  
 1011bb4:	(bad)  
 1011bb5:	(bad)  
 1011bb6:	(bad)  
 1011bb7:	(bad)  
 1011bb8:	(bad)  
 1011bb9:	(bad)  
 1011bba:	(bad)  
 1011bbb:	(bad)  
 1011bbc:	(bad)  
 1011bbd:	(bad)  
 1011bbe:	(bad)  
 1011bbf:	(bad)  
 1011bc0:	(bad)  
 1011bc1:	std    
 1011bc2:	std    
 1011bc3:	(bad)  
 1011bc4:	(bad)  
 1011bc5:	std    
 1011bc6:	cld    
 1011bc7:	(bad)  
 1011bc8:	(bad)  
 1011bc9:	sti    
 1011bca:	stc    
 1011bcb:	(bad)  
 1011bcc:	std    
 1011bcd:	stc    
 1011bce:	idiv   edi
 1011bd0:	std    
 1011bd1:	clc    
 1011bd2:	hlt    
 1011bd3:	(bad)  
 1011bd4:	cld    
 1011bd5:	cmc    
 1011bd6:	repnz (bad) 
 1011bd8:	sti    
 1011bd9:	repz out dx,eax
 1011bdb:	(bad)  
 1011bdc:	cli    
 1011bdd:	icebp  
 1011bde:	in     al,dx
 1011bdf:	(bad)  
 1011be0:	cli    
 1011be1:	out    dx,eax
 1011be2:	call   0xe7ef15e6
 1011be7:	(bad)  
 1011be8:	clc    
 1011be9:	jmp    0xffe0:0xe8f8ffe2
 1011bf0:	clc    
 1011bf1:	in     eax,0xdc
 1011bf3:	(bad)  
 1011bf4:	fstp   TBYTE PTR [esp+ebp*4+0x354963ff]
 1011bfb:	inc    DWORD PTR [eax]
	...
 1011c1d:	add    BYTE PTR [eax],al
 1011c1f:	add    BYTE PTR [esi+edx*4-0x4010079],ch
 1011c26:	cli    
 1011c27:	(bad)  
 1011c28:	(bad)  
 1011c29:	(bad)  
 1011c2a:	(bad)  
 1011c2b:	(bad)  
 1011c2c:	(bad)  
 1011c2d:	(bad)  
 1011c2e:	(bad)  
 1011c2f:	(bad)  
 1011c30:	(bad)  
 1011c31:	(bad)  
 1011c32:	(bad)  
 1011c33:	(bad)  
 1011c34:	(bad)  
 1011c35:	(bad)  
 1011c36:	(bad)  
 1011c37:	(bad)  
 1011c38:	(bad)  
 1011c39:	(bad)  
 1011c3a:	(bad)  
 1011c3b:	(bad)  
 1011c3c:	(bad)  
 1011c3d:	(bad)  
 1011c3e:	(bad)  
 1011c3f:	(bad)  
 1011c40:	(bad)  
 1011c41:	(bad)  
 1011c42:	(bad)  
 1011c43:	(bad)  
 1011c44:	(bad)  
 1011c45:	std    
 1011c46:	(bad)  
 1011c47:	(bad)  
 1011c48:	(bad)  
 1011c49:	cld    
 1011c4a:	sti    
 1011c4b:	(bad)  
 1011c4c:	(bad)  
 1011c4d:	sti    
 1011c4e:	cli    
 1011c4f:	(bad)  
 1011c50:	std    
 1011c51:	stc    
 1011c52:	idiv   bh
 1011c54:	std    
 1011c55:	div    esp
 1011c57:	(bad)  
 1011c58:	cld    
 1011c59:	cmc    
 1011c5a:	repnz (bad) 
 1011c5c:	sti    
 1011c5d:	repz out dx,al
 1011c5f:	(bad)  
 1011c60:	sti    
 1011c61:	lock in al,dx
 1011c63:	(bad)  
 1011c64:	stc    
 1011c65:	out    dx,al
 1011c66:	jmp    0xe7ee176a
 1011c6b:	(bad)  
 1011c6c:	stc    
 1011c6d:	jmp    0xffdf:0xe7f8ffe3
 1011c74:	fdivr  QWORD PTR [esi+0x4963ffae]
 1011c7a:	xor    eax,0xff
	...
 1011c9f:	add    BYTE PTR [esi-0x1007567],ch
 1011ca5:	cld    
 1011ca6:	cld    
 1011ca7:	(bad)  
 1011ca8:	(bad)  
 1011ca9:	(bad)  
 1011caa:	(bad)  
 1011cab:	dec    ebx
 1011cad:	mov    eax,0xb8cbffab
 1011cb2:	stos   DWORD PTR es:[edi],eax
 1011cb3:	dec    ebx
 1011cb5:	mov    eax,0xb8cbffab
 1011cba:	stos   DWORD PTR es:[edi],eax
 1011cbb:	dec    ecx
 1011cbd:	mov    dh,0xa8
 1011cbf:	inc    ebp
 1011cc1:	mov    dl,0xa5
 1011cc3:	inc    ecx
 1011cc5:	lods   eax,DWORD PTR ds:[esi]
 1011cc6:	mov    al,ds:0x9aa8bdff
 1011ccb:	push   DWORD PTR [edi-0x4e006c5d]
 1011cd1:	pushf  
 1011cd2:	(bad)  
 1011cd3:	jmp    FWORD PTR [ebx-0x5a00796b]
 1011cd9:	(bad)  
 1011cda:	jg     0x1011cdb
 1011cdc:	sahf   
 1011cdd:	xchg   DWORD PTR [eax-0x1],edi
 1011ce0:	xchg   edi,eax
 1011ce1:	sub    BYTE PTR [edi-0x1],0x90
 1011ce5:	jns    0x1011d4f
 1011ce7:	dec    DWORD PTR [edx-0x7b009f8e]
 1011ced:	ins    BYTE PTR es:[edi],dx
 1011cee:	pop    ecx
 1011cef:	(bad)  
 1011cf0:	stc    
 1011cf1:	jmp    0xc2df1cd8
 1011cf6:	mov    cl,0xff
 1011cf8:	arpl   WORD PTR [ecx+0x35],cx
 1011cfb:	inc    DWORD PTR [eax]
	...
 1011d1d:	add    BYTE PTR [eax],al
 1011d1f:	add    BYTE PTR [ecx-0x7264],dh
 1011d25:	(bad)  
 1011d26:	std    
 1011d27:	(bad)  
 1011d28:	(bad)  
 1011d29:	(bad)  
 1011d2a:	(bad)  
 1011d2b:	(bad)  
 1011d2c:	(bad)  
 1011d2d:	(bad)  
 1011d2e:	(bad)  
 1011d2f:	(bad)  
 1011d30:	(bad)  
 1011d31:	(bad)  
 1011d32:	(bad)  
 1011d33:	(bad)  
 1011d34:	(bad)  
 1011d35:	(bad)  
 1011d36:	(bad)  
 1011d37:	(bad)  
 1011d38:	(bad)  
 1011d39:	(bad)  
 1011d3a:	(bad)  
 1011d3b:	(bad)  
 1011d3c:	(bad)  
 1011d3d:	(bad)  
 1011d3e:	(bad)  
 1011d3f:	(bad)  
 1011d40:	(bad)  
 1011d41:	(bad)  
 1011d42:	(bad)  
 1011d43:	(bad)  
 1011d44:	(bad)  
 1011d45:	(bad)  
 1011d46:	(bad)  
 1011d47:	(bad)  
 1011d48:	(bad)  
 1011d49:	(bad)  
 1011d4a:	(bad)  
 1011d4b:	(bad)  
 1011d4c:	(bad)  
 1011d4d:	(bad)  
 1011d4e:	std    
 1011d4f:	(bad)  
 1011d50:	(bad)  
 1011d51:	std    
 1011d52:	sti    
 1011d53:	(bad)  
 1011d54:	std    
 1011d55:	sti    
 1011d56:	stc    
 1011d57:	(bad)  
 1011d58:	std    
 1011d59:	stc    
 1011d5a:	idiv   edi
 1011d5c:	cld    
 1011d5d:	div    ah
 1011d5f:	(bad)  
 1011d60:	cld    
 1011d61:	hlt    
 1011d62:	icebp  
 1011d63:	(bad)  
 1011d64:	sti    
 1011d65:	repnz out dx,al
 1011d67:	(bad)  
 1011d68:	sti    
 1011d69:	lock jmp 0x1011d6b
 1011d6c:	cli    
 1011d6d:	out    dx,al
 1011d6e:	call   0xe6ed1772
 1011d73:	(bad)  
 1011d74:	ffreep st(2)
 1011d76:	mov    bl,0xff
 1011d78:	arpl   WORD PTR [ecx+0x35],cx
 1011d7b:	inc    DWORD PTR [eax]
	...
 1011d9d:	add    BYTE PTR [eax],al
 1011d9f:	add    BYTE PTR [ebx-0x7062],dh
 1011da5:	(bad)  
 1011da6:	(bad)  
 1011da7:	(bad)  
 1011da8:	(bad)  
 1011da9:	(bad)  
 1011daa:	(bad)  
 1011dab:	(bad)  
 1011dac:	(bad)  
 1011dad:	(bad)  
 1011dae:	(bad)  
 1011daf:	(bad)  
 1011db0:	(bad)  
 1011db1:	(bad)  
 1011db2:	(bad)  
 1011db3:	(bad)  
 1011db4:	(bad)  
 1011db5:	(bad)  
 1011db6:	(bad)  
 1011db7:	(bad)  
 1011db8:	(bad)  
 1011db9:	(bad)  
 1011dba:	(bad)  
 1011dbb:	(bad)  
 1011dbc:	(bad)  
 1011dbd:	(bad)  
 1011dbe:	(bad)  
 1011dbf:	(bad)  
 1011dc0:	(bad)  
 1011dc1:	(bad)  
 1011dc2:	(bad)  
 1011dc3:	(bad)  
 1011dc4:	(bad)  
 1011dc5:	(bad)  
 1011dc6:	(bad)  
 1011dc7:	(bad)  
 1011dc8:	(bad)  
 1011dc9:	(bad)  
 1011dca:	(bad)  
 1011dcb:	(bad)  
 1011dcc:	(bad)  
 1011dcd:	(bad)  
 1011dce:	(bad)  
 1011dcf:	(bad)  
 1011dd0:	(bad)  
 1011dd1:	(bad)  
 1011dd2:	std    
 1011dd3:	(bad)  
 1011dd4:	(bad)  
 1011dd5:	cld    
 1011dd6:	sti    
 1011dd7:	(bad)  
 1011dd8:	(bad)  
 1011dd9:	sti    
 1011dda:	stc    
 1011ddb:	(bad)  
 1011ddc:	std    
 1011ddd:	stc    
 1011dde:	idiv   edi
 1011de0:	cld    
 1011de1:	div    esp
 1011de3:	(bad)  
 1011de4:	cld    
 1011de5:	hlt    
 1011de6:	icebp  
 1011de7:	(bad)  
 1011de8:	sti    
 1011de9:	repnz out dx,al
 1011deb:	(bad)  
 1011dec:	sti    
 1011ded:	lock jmp 0x1011def
 1011df0:	cli    
 1011df1:	out    dx,al
 1011df2:	call   0xb7c5fdf6
 1011df7:	jmp    DWORD PTR [ebx+0x49]
 1011dfa:	xor    eax,0xff
	...
 1011e1f:	add    BYTE PTR [ebp-0x6d60],dh
 1011e25:	(bad)  
 1011e26:	(bad)  
 1011e27:	(bad)  
 1011e28:	(bad)  
 1011e29:	(bad)  
 1011e2a:	(bad)  
 1011e2b:	dec    ebx
 1011e2d:	mov    eax,0xb8cbffab
 1011e32:	stos   DWORD PTR es:[edi],eax
 1011e33:	dec    ebx
 1011e35:	mov    eax,0xb8cbffab
 1011e3a:	stos   DWORD PTR es:[edi],eax
 1011e3b:	dec    edx
 1011e3d:	mov    eax,0xb4c7ffab
 1011e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1011e43:	inc    ebx
 1011e45:	mov    al,0xa2
 1011e47:	(bad)  
 1011e48:	mov    edi,0xbfff9dab
 1011e4d:	stos   DWORD PTR es:[edi],eax
 1011e4e:	popf   
 1011e4f:	(bad)  
 1011e50:	mov    edi,0xffff9dab
 1011e55:	(bad)  
 1011e56:	cld    
 1011e57:	(bad)  
 1011e58:	(bad)  
 1011e59:	cld    
 1011e5a:	sti    
 1011e5b:	(bad)  
 1011e5c:	(bad)  
 1011e5d:	cli    
 1011e5e:	clc    
 1011e5f:	(bad)  
 1011e60:	std    
 1011e61:	stc    
 1011e62:	idiv   bh
 1011e64:	cld    
 1011e65:	div    ah
 1011e67:	(bad)  
 1011e68:	cld    
 1011e69:	cmc    
 1011e6a:	icebp  
 1011e6b:	(bad)  
 1011e6c:	sti    
 1011e6d:	repz in eax,dx
 1011e6f:	(bad)  
 1011e70:	cli    
 1011e71:	lock jmp 0x1011e73
 1011e74:	loopne 0x1011e3d
 1011e76:	mov    eax,0x354963ff
 1011e7b:	inc    DWORD PTR [eax]
	...
 1011e9d:	add    BYTE PTR [eax],al
 1011e9f:	add    BYTE PTR [eax-0x6b5d],bh
 1011ea5:	(bad)  
 1011ea6:	(bad)  
 1011ea7:	(bad)  
 1011ea8:	(bad)  
 1011ea9:	(bad)  
 1011eaa:	(bad)  
 1011eab:	(bad)  
 1011eac:	(bad)  
 1011ead:	(bad)  
 1011eae:	(bad)  
 1011eaf:	(bad)  
 1011eb0:	(bad)  
 1011eb1:	(bad)  
 1011eb2:	(bad)  
 1011eb3:	(bad)  
 1011eb4:	(bad)  
 1011eb5:	(bad)  
 1011eb6:	(bad)  
 1011eb7:	(bad)  
 1011eb8:	(bad)  
 1011eb9:	(bad)  
 1011eba:	(bad)  
 1011ebb:	(bad)  
 1011ebc:	(bad)  
 1011ebd:	(bad)  
 1011ebe:	(bad)  
 1011ebf:	(bad)  
 1011ec0:	(bad)  
 1011ec1:	(bad)  
 1011ec2:	(bad)  
 1011ec3:	(bad)  
 1011ec4:	(bad)  
 1011ec5:	(bad)  
 1011ec6:	(bad)  
 1011ec7:	(bad)  
 1011ec8:	(bad)  
 1011ec9:	(bad)  
 1011eca:	(bad)  
 1011ecb:	(bad)  
 1011ecc:	(bad)  
 1011ecd:	(bad)  
 1011ece:	(bad)  
 1011ecf:	(bad)  
 1011ed0:	(bad)  
 1011ed1:	(bad)  
 1011ed2:	(bad)  
 1011ed3:	(bad)  
 1011ed4:	(bad)  
 1011ed5:	(bad)  
 1011ed6:	(bad)  
 1011ed7:	(bad)  
 1011ed8:	(bad)  
 1011ed9:	(bad)  
 1011eda:	cld    
 1011edb:	(bad)  
 1011edc:	(bad)  
 1011edd:	sti    
 1011ede:	sti    
 1011edf:	(bad)  
 1011ee0:	(bad)  
 1011ee1:	cli    
 1011ee2:	stc    
 1011ee3:	(bad)  
 1011ee4:	std    
 1011ee5:	clc    
 1011ee6:	idiv   bh
 1011ee8:	leave  
 1011ee9:	mov    ah,0xa9
 1011eeb:	(bad)  
 1011eec:	mov    ebp,0xb2ff97a5
 1011ef1:	cdq    
 1011ef2:	mov    edi,edi
 1011ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1011ef5:	mov    bh,BYTE PTR [eax-0x1]
 1011ef8:	arpl   WORD PTR [ecx+0x35],cx
 1011efb:	inc    DWORD PTR [eax]
	...
 1011f1d:	add    BYTE PTR [eax],al
 1011f1f:	add    BYTE PTR [edx-0x675a],bh
 1011f25:	(bad)  
 1011f26:	(bad)  
 1011f27:	(bad)  
 1011f28:	(bad)  
 1011f29:	(bad)  
 1011f2a:	(bad)  
 1011f2b:	(bad)  
 1011f2c:	(bad)  
 1011f2d:	(bad)  
 1011f2e:	(bad)  
 1011f2f:	(bad)  
 1011f30:	(bad)  
 1011f31:	(bad)  
 1011f32:	(bad)  
 1011f33:	(bad)  
 1011f34:	(bad)  
 1011f35:	(bad)  
 1011f36:	(bad)  
 1011f37:	(bad)  
 1011f38:	(bad)  
 1011f39:	(bad)  
 1011f3a:	(bad)  
 1011f3b:	(bad)  
 1011f3c:	(bad)  
 1011f3d:	(bad)  
 1011f3e:	(bad)  
 1011f3f:	(bad)  
 1011f40:	(bad)  
 1011f41:	(bad)  
 1011f42:	(bad)  
 1011f43:	(bad)  
 1011f44:	(bad)  
 1011f45:	(bad)  
 1011f46:	(bad)  
 1011f47:	(bad)  
 1011f48:	(bad)  
 1011f49:	(bad)  
 1011f4a:	(bad)  
 1011f4b:	(bad)  
 1011f4c:	(bad)  
 1011f4d:	(bad)  
 1011f4e:	(bad)  
 1011f4f:	(bad)  
 1011f50:	(bad)  
 1011f51:	(bad)  
 1011f52:	(bad)  
 1011f53:	(bad)  
 1011f54:	(bad)  
 1011f55:	(bad)  
 1011f56:	(bad)  
 1011f57:	(bad)  
 1011f58:	(bad)  
 1011f59:	(bad)  
 1011f5a:	(bad)  
 1011f5b:	(bad)  
 1011f5c:	(bad)  
 1011f5d:	std    
 1011f5e:	cld    
 1011f5f:	(bad)  
 1011f60:	(bad)  
 1011f61:	cld    
 1011f62:	sti    
 1011f63:	call   FWORD PTR [esi+0x63ff7687]
 1011f69:	dec    ecx
 1011f6a:	xor    eax,0x354963ff
 1011f6f:	jmp    DWORD PTR [ebx+0x49]
 1011f72:	xor    eax,0x354963ff
 1011f77:	jmp    DWORD PTR [ebx+0x49]
 1011f7a:	xor    eax,0xff
	...
 1011f9f:	add    BYTE PTR [eax+ebp*4-0x66],bh
 1011fa6:	(bad)  
 1011fa7:	(bad)  
 1011fa8:	(bad)  
 1011fa9:	(bad)  
 1011faa:	(bad)  
 1011fab:	(bad)  
 1011fac:	(bad)  
 1011fad:	(bad)  
 1011fae:	(bad)  
 1011faf:	(bad)  
 1011fb0:	(bad)  
 1011fb1:	(bad)  
 1011fb2:	(bad)  
 1011fb3:	(bad)  
 1011fb4:	(bad)  
 1011fb5:	(bad)  
 1011fb6:	(bad)  
 1011fb7:	(bad)  
 1011fb8:	(bad)  
 1011fb9:	(bad)  
 1011fba:	(bad)  
 1011fbb:	(bad)  
 1011fbc:	(bad)  
 1011fbd:	(bad)  
 1011fbe:	(bad)  
 1011fbf:	(bad)  
 1011fc0:	(bad)  
 1011fc1:	(bad)  
 1011fc2:	(bad)  
 1011fc3:	(bad)  
 1011fc4:	(bad)  
 1011fc5:	(bad)  
 1011fc6:	(bad)  
 1011fc7:	(bad)  
 1011fc8:	(bad)  
 1011fc9:	(bad)  
 1011fca:	(bad)  
 1011fcb:	(bad)  
 1011fcc:	(bad)  
 1011fcd:	(bad)  
 1011fce:	(bad)  
 1011fcf:	(bad)  
 1011fd0:	(bad)  
 1011fd1:	(bad)  
 1011fd2:	(bad)  
 1011fd3:	(bad)  
 1011fd4:	(bad)  
 1011fd5:	(bad)  
 1011fd6:	(bad)  
 1011fd7:	(bad)  
 1011fd8:	(bad)  
 1011fd9:	(bad)  
 1011fda:	(bad)  
 1011fdb:	(bad)  
 1011fdc:	(bad)  
 1011fdd:	(bad)  
 1011fde:	(bad)  
 1011fdf:	(bad)  
 1011fe0:	(bad)  
 1011fe1:	std    
 1011fe2:	cld    
 1011fe3:	jmp    DWORD PTR [eax-0x2a008677]
 1011fe9:	lds    edi,FWORD PTR [ebp-0x5a4e3801]
 1011fef:	push   DWORD PTR [ebp-0x61007163]
 1011ff5:	xchg   DWORD PTR [esi-0x1],esi
	...
 1012020:	mov    esi,0xffff9caa
 1012025:	(bad)  
 1012026:	(bad)  
 1012027:	(bad)  
 1012028:	(bad)  
 1012029:	(bad)  
 101202a:	(bad)  
 101202b:	(bad)  
 101202c:	(bad)  
 101202d:	(bad)  
 101202e:	(bad)  
 101202f:	(bad)  
 1012030:	(bad)  
 1012031:	(bad)  
 1012032:	(bad)  
 1012033:	(bad)  
 1012034:	(bad)  
 1012035:	(bad)  
 1012036:	(bad)  
 1012037:	(bad)  
 1012038:	(bad)  
 1012039:	(bad)  
 101203a:	(bad)  
 101203b:	(bad)  
 101203c:	(bad)  
 101203d:	(bad)  
 101203e:	(bad)  
 101203f:	(bad)  
 1012040:	(bad)  
 1012041:	(bad)  
 1012042:	(bad)  
 1012043:	(bad)  
 1012044:	(bad)  
 1012045:	(bad)  
 1012046:	(bad)  
 1012047:	(bad)  
 1012048:	(bad)  
 1012049:	(bad)  
 101204a:	(bad)  
 101204b:	(bad)  
 101204c:	(bad)  
 101204d:	(bad)  
 101204e:	(bad)  
 101204f:	(bad)  
 1012050:	(bad)  
 1012051:	(bad)  
 1012052:	(bad)  
 1012053:	(bad)  
 1012054:	(bad)  
 1012055:	(bad)  
 1012056:	(bad)  
 1012057:	(bad)  
 1012058:	(bad)  
 1012059:	(bad)  
 101205a:	(bad)  
 101205b:	(bad)  
 101205c:	(bad)  
 101205d:	(bad)  
 101205e:	(bad)  
 101205f:	(bad)  
 1012060:	(bad)  
 1012061:	(bad)  
 1012062:	(bad)  
 1012063:	jmp    DWORD PTR [edx-0x1c008374]
 1012069:	fcmovbe st,st(3)
 101206b:	call   ebp
 101206d:	lds    edi,FWORD PTR [edi+edi*8-0x897862]
	...
 10120a0:	shr    BYTE PTR [ebp-0x61],0xff
 10120a7:	(bad)  
 10120a8:	(bad)  
 10120a9:	(bad)  
 10120aa:	(bad)  
 10120ab:	(bad)  
 10120ac:	(bad)  
 10120ad:	(bad)  
 10120ae:	(bad)  
 10120af:	(bad)  
 10120b0:	(bad)  
 10120b1:	(bad)  
 10120b2:	(bad)  
 10120b3:	(bad)  
 10120b4:	(bad)  
 10120b5:	(bad)  
 10120b6:	(bad)  
 10120b7:	(bad)  
 10120b8:	(bad)  
 10120b9:	(bad)  
 10120ba:	(bad)  
 10120bb:	(bad)  
 10120bc:	(bad)  
 10120bd:	(bad)  
 10120be:	(bad)  
 10120bf:	(bad)  
 10120c0:	(bad)  
 10120c1:	(bad)  
 10120c2:	(bad)  
 10120c3:	(bad)  
 10120c4:	(bad)  
 10120c5:	(bad)  
 10120c6:	(bad)  
 10120c7:	(bad)  
 10120c8:	(bad)  
 10120c9:	(bad)  
 10120ca:	(bad)  
 10120cb:	(bad)  
 10120cc:	(bad)  
 10120cd:	(bad)  
 10120ce:	(bad)  
 10120cf:	(bad)  
 10120d0:	(bad)  
 10120d1:	(bad)  
 10120d2:	(bad)  
 10120d3:	(bad)  
 10120d4:	(bad)  
 10120d5:	(bad)  
 10120d6:	(bad)  
 10120d7:	(bad)  
 10120d8:	(bad)  
 10120d9:	(bad)  
 10120da:	(bad)  
 10120db:	(bad)  
 10120dc:	(bad)  
 10120dd:	(bad)  
 10120de:	(bad)  
 10120df:	(bad)  
 10120e0:	(bad)  
 10120e1:	(bad)  
 10120e2:	(bad)  
 10120e3:	jmp    DWORD PTR [ebp-0xc008172]
 10120e9:	out    dx,eax
 10120ea:	in     eax,dx
 10120eb:	call   FWORD PTR [esi+0xff7687]
	...
 101211d:	add    BYTE PTR [eax],al
 101211f:	add    dl,al
 1012121:	scas   eax,DWORD PTR es:[edi]
 1012122:	mov    eax,ds:0xffffffff
 1012127:	(bad)  
 1012128:	(bad)  
 1012129:	(bad)  
 101212a:	(bad)  
 101212b:	(bad)  
 101212c:	(bad)  
 101212d:	(bad)  
 101212e:	(bad)  
 101212f:	(bad)  
 1012130:	(bad)  
 1012131:	(bad)  
 1012132:	(bad)  
 1012133:	(bad)  
 1012134:	(bad)  
 1012135:	std    
 1012136:	cld    
 1012137:	(bad)  
 1012138:	(bad)  
 1012139:	sti    
 101213a:	sti    
 101213b:	(bad)  
 101213c:	std    
 101213d:	stc    
 101213e:	clc    
 101213f:	(bad)  
 1012140:	std    
 1012141:	clc    
 1012142:	cmc    
 1012143:	(bad)  
 1012144:	cld    
 1012145:	cmc    
 1012146:	repnz (bad) 
 1012148:	sti    
 1012149:	repz out dx,eax
 101214b:	(bad)  
 101214c:	sti    
 101214d:	lock jmp 0x101214f
 1012150:	cli    
 1012151:	in     eax,dx
 1012152:	call   0xe5ed1b56
 1012157:	(bad)  
 1012158:	clc    
 1012159:	jmp    0xe8f92140
 101215e:	(bad)  
 1012160:	mul    esp
 1012162:	(bad)  
 1012164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1012165:	xchg   ecx,eax
 1012166:	cmp    bh,0xa9
 1012169:	xchg   esp,eax
 101216a:	test   bh,bh
	...
 10121a0:	lds    esi,FWORD PTR [ecx-0x503c005d]
 10121a6:	mov    eax,ds:0xa0aec2ff
 10121ab:	inc    eax
 10121ad:	lods   al,BYTE PTR ds:[esi]
 10121ae:	lahf   
 10121af:	(bad)  
 10121b0:	mov    edi,0xbdff9cab
 10121b5:	test   eax,0xa7bcff9b
 10121ba:	call   0xb8ff:0x97a6bbff
 10121c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10121c2:	xchg   ebp,eax
 10121c3:	push   DWORD PTR [edi-0x49006b5e]
 10121c9:	mov    eax,ds:0x9fb3ff92
 10121ce:	nop
 10121cf:	push   DWORD PTR [edx-0x4f007063]
 10121d5:	fwait
 10121d6:	(bad)  
 10121d7:	jmp    FWORD PTR [esi-0x52007466]
 10121dd:	cwde   
 10121de:	mov    bh,bh
 10121e0:	stos   DWORD PTR es:[edi],eax
 10121e1:	xchg   esi,eax
 10121e2:	xchg   edi,edi
 10121e4:	test   eax,0xff8494
	...
 1012295:	add    BYTE PTR [eax],al
 1012297:	add    bh,bh
 1012299:	jmp    eax
 101229b:	pop    es
 101229c:	rol    BYTE PTR [eax],0x0
 101229f:	add    eax,eax
 10122a1:	add    BYTE PTR [eax],al
 10122a3:	add    eax,eax
 10122a5:	add    BYTE PTR [eax],al
 10122a7:	add    eax,eax
 10122a9:	add    BYTE PTR [eax],al
 10122ab:	add    eax,eax
 10122ad:	add    BYTE PTR [eax],al
 10122af:	add    eax,eax
 10122b1:	add    BYTE PTR [eax],al
 10122b3:	add    eax,eax
 10122b5:	add    BYTE PTR [eax],al
 10122b7:	add    eax,eax
 10122b9:	add    BYTE PTR [eax],al
 10122bb:	add    eax,eax
 10122bd:	add    BYTE PTR [eax],al
 10122bf:	add    eax,eax
 10122c1:	add    BYTE PTR [eax],al
 10122c3:	add    eax,eax
 10122c5:	add    BYTE PTR [eax],al
 10122c7:	add    eax,eax
 10122c9:	add    BYTE PTR [eax],al
 10122cb:	add    eax,eax
 10122cd:	add    BYTE PTR [eax],al
 10122cf:	add    eax,eax
 10122d1:	add    BYTE PTR [eax],al
 10122d3:	add    eax,eax
 10122d5:	add    BYTE PTR [eax],al
 10122d7:	pop    es
 10122d8:	rol    BYTE PTR [eax],0x0
 10122db:	jg     0x101229d
 10122dd:	add    BYTE PTR [eax],al
 10122df:	jg     0x10122a1
 10122e1:	add    BYTE PTR [eax],al
 10122e3:	jg     0x10122a5
 10122e5:	add    BYTE PTR [eax],al
 10122e7:	jg     0x10122a9
 10122e9:	add    BYTE PTR [eax],al
 10122eb:	jg     0x10122ad
 10122ed:	add    BYTE PTR [eax],al
 10122ef:	jg     0x10122b1
 10122f1:	add    BYTE PTR [eax],al
 10122f3:	jg     0x10122b5
 10122f5:	add    BYTE PTR [eax],al
 10122f7:	jg     0x10122b9
 10122f9:	add    BYTE PTR [eax],al
 10122fb:	jg     0x10122bd
 10122fd:	add    BYTE PTR [eax],al
 10122ff:	jg     0x10122c1
 1012301:	add    BYTE PTR [eax],al
 1012303:	inc    eax
 1012305:	add    BYTE PTR [ecx],al
 1012307:	inc    eax
 1012309:	add    BYTE PTR [ebx],al
 101230b:	inc    eax
 101230d:	add    BYTE PTR [edi],al
 101230f:	inc    eax
 1012311:	add    BYTE PTR [edi],cl
 1012313:	(bad)  
 1012314:	(bad)  
 1012315:	(bad)  
 1012316:	(bad)  
 1012317:	jmp    FWORD PTR [eax]
 1012319:	add    BYTE PTR [eax],al
 101231b:	add    BYTE PTR [eax],dl
 101231d:	add    BYTE PTR [eax],al
 101231f:	add    BYTE PTR [eax],ah
 1012321:	add    BYTE PTR [eax],al
 1012323:	add    BYTE PTR [ecx],al
 1012325:	add    BYTE PTR [eax],ah
	...
 1012363:	add    BYTE PTR [ebx+ebx*4-0x48],dl
 1012367:	inc    DWORD PTR [edi+0x6f]
 101236a:	mov    dh,bl
 101236c:	inc    edi
 101236d:	outs   dx,DWORD PTR ds:[esi]
 101236e:	mov    dh,bl
 1012370:	inc    esi
 1012371:	outs   dx,BYTE PTR ds:[esi]
 1012372:	mov    ebx,esi
 1012374:	push   eax
 1012375:	jbe    0x1012307
 1012377:	inc    DWORD PTR [eax]
	...
 1012381:	add    BYTE PTR [eax],al
 1012383:	add    BYTE PTR [ecx+0x57],dh
 1012386:	inc    esp
 1012387:	jmp    DWORD PTR [ebx+0x49]
 101238a:	xor    eax,0x354963ff
 101238f:	jmp    DWORD PTR [ebx+0x49]
 1012392:	xor    eax,0x354963ff
 1012397:	jmp    DWORD PTR [ebx+0x49]
 101239a:	xor    eax,0x354963ff
 101239f:	call   DWORD PTR [ebx+ebx*4-0x48]
 10123a3:	dec    DWORD PTR [ecx+ecx*8-0xf]
 10123a7:	call   DWORD PTR [edi+0x6cffefe1]
 10123ad:	into   
 10123ae:	jmp    0x8ff:0xdaa620ff
 10123b5:	cwde   
 10123b6:	aad    0xff
 10123b8:	cs jo  0x1012350
 10123bb:	test   DWORD PTR [eax],0x0
 10123c1:	add    BYTE PTR [eax],al
 10123c3:	add    BYTE PTR [edi-0x1800a493],al
 10123c9:	retf   
 10123ca:	mov    esi,0xafbfdeff
 10123cf:	(bad)  
 10123d0:	fidivr WORD PTR [edi-0x40210051]
 10123d6:	scas   eax,DWORD PTR es:[edi]
 10123d7:	(bad)  
 10123d8:	fidivr WORD PTR [edi-0x40210051]
 10123de:	scas   eax,DWORD PTR es:[edi]
 10123df:	call   DWORD PTR [ebx-0x66]
 10123e2:	mov    bh,0xff
 10123e4:	push   ecx
 10123e5:	into   
 10123e6:	hlt    
 10123e7:	jmp    DWORD PTR [ecx+0x73fff7ec]
 10123ed:	(bad)  
 10123ef:	call   FWORD PTR [edx]
 10123f1:	mov    bh,0xf0
 10123f3:	inc    DWORD PTR [eax]
 10123f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10123f6:	in     al,dx
 10123f7:	jmp    FWORD PTR [ebx]
 10123f9:	jb     0x1012394
 10123fb:	std    
	...
 1012404:	lea    esi,[ebx+eiz*2-0x9]
 1012408:	cli    
 1012409:	out    dx,eax
 101240a:	jmp    0xe4ed1e0e
 101240f:	push   edi
 1012411:	out    0xdd,al
 1012413:	push   esi
 1012415:	loope  0x10123ee
 1012417:	push   ebp
 1012419:	(bad)  
 101241b:	push   ebx
 101241d:	fmul   st,st(3)
 101241f:	call   FWORD PTR [eax-0x65]
 1012422:	mov    eax,0xf4ce51ff
 1012427:	call   FWORD PTR [edi+0x72fff6ea]
 101242d:	fdiv   st,st(2)
 101242f:	call   FWORD PTR [ebx]
 1012431:	mov    ch,0xed
 1012433:	inc    DWORD PTR [eax]
 1012435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1012436:	out    0xff,eax
 1012438:	sub    esi,DWORD PTR [edx-0x66]
 101243b:	std    
	...
 1012444:	xchg   ebx,eax
 1012445:	jnp    0x10124b1
 1012447:	idiv   ebx
 1012449:	repz out dx,al
 101244b:	push   DWORD PTR [edi+ebx*4-0x68530070]
 1012452:	mov    bh,bh
 1012454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1012455:	mov    ?,WORD PTR [edi-0x1]
 1012458:	popf   
 1012459:	xchg   BYTE PTR [ebp-0x1],dh
 101245c:	xchg   esp,eax
 101245d:	jge    0x10124ca
 101245f:	call   DWORD PTR [ebp-0x67]
 1012462:	mov    ch,0xff
 1012464:	push   edx
 1012465:	into   
 1012466:	hlt    
 1012467:	jmp    DWORD PTR [eax+0x72fff6ea]
 101246d:	fdiv   st,st(3)
 101246f:	call   FWORD PTR [ebx]
 1012471:	mov    ch,0xed
 1012473:	inc    DWORD PTR [eax]
 1012475:	mov    ds:0x732bffe7,eax
 101247a:	call   0x0:0xfd
 1012481:	add    BYTE PTR [eax],al
 1012483:	add    BYTE PTR [ecx-0x3088f7f],bl
 1012489:	div    bl
 101248b:	(bad)  
 101248c:	sti    
 101248d:	repz out dx,eax
 101248f:	(bad)  
 1012490:	cli    
 1012491:	out    dx,eax
 1012492:	jmp    0xf7ff:0xe3eaf8ff
 1012499:	in     eax,0xdd
 101249b:	push   esi
 101249d:	loope  0x1012476
 101249f:	call   FWORD PTR [ecx-0x63]
 10124a2:	mov    ecx,0xf4ce52ff
 10124a7:	jmp    DWORD PTR [eax+0x73fff6ea]
 10124ad:	fdiv   st,st(3)
 10124af:	call   FWORD PTR [esi*4-0x5cff0014]
 10124b6:	out    0xff,al
 10124b8:	sub    al,0x73
 10124ba:	call   0x0:0xfd
 10124c1:	add    BYTE PTR [eax],al
 10124c3:	add    BYTE PTR [esi-0x1088779],bl
 10124c9:	cli    
 10124ca:	clc    
 10124cb:	(bad)  
 10124cc:	mov    edx,0xb3ff98a6
 10124d1:	lahf   
 10124d2:	nop
 10124d3:	jmp    FWORD PTR [ebx-0x5b007869]
 10124d9:	lea    edi,[esi-0x1]
 10124dc:	pushf  
 10124dd:	test   DWORD PTR [edi+edi*8+0x55],esi
 10124e1:	cdq    
 10124e2:	mov    dh,0xff
 10124e4:	push   ecx
 10124e5:	int    0xf4
 10124e7:	call   FWORD PTR [ebp+0x6cfff6e9]
 10124ed:	aad    0xf2
 10124ef:	call   DWORD PTR [eax]
 10124f1:	mov    al,0xec
 10124f3:	inc    DWORD PTR [eax]
 10124f5:	lahf   
 10124f6:	out    0xff,al
 10124f8:	sub    esi,DWORD PTR [ebx-0x65]
 10124fb:	std    
	...
 1012504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1012505:	(bad)  
 1012506:	jg     0x10124ff
 1012508:	(bad)  
 1012509:	std    
 101250a:	cld    
 101250b:	(bad)  
 101250c:	std    
 101250d:	cli    
 101250e:	clc    
 101250f:	(bad)  
 1012510:	cld    
 1012511:	div    bl
 1012513:	(bad)  
 1012514:	cld    
 1012515:	repz out dx,al
 1012517:	(bad)  
 1012518:	cli    
 1012519:	out    dx,eax
 101251a:	jmp    0xe4ec1f1e
 101251f:	call   FWORD PTR [edi+ebx*4-0x46]
 1012523:	(bad)  
 1012524:	jp     0x1012508
 1012526:	sti    
 1012527:	jmp    FWORD PTR [ebp-0x6e000710]
 101252d:	in     al,0xf6
 101252f:	call   DWORD PTR [edx-0x36]
 1012532:	repnz jmp FWORD PTR [edx]
 1012535:	mov    edx,0x752efff0
 101253a:	pushf  
 101253b:	std    
	...
 1012544:	stos   DWORD PTR es:[edi],eax
 1012545:	xchg   ebp,eax
 1012546:	xchg   edi,esi
 1012548:	(bad)  
 1012549:	(bad)  
 101254a:	(bad)  
 101254b:	inc    eax
 101254d:	lods   al,BYTE PTR ds:[esi]
 101254e:	sahf   
 101254f:	(bad)  
 1012550:	mov    ecx,0xb3ff97a6
 1012555:	sahf   
 1012556:	(bad)  
 1012557:	jmp    FWORD PTR [ebx-0x5c00796a]
 101255d:	lea    edi,[ebp-0x1]
 1012560:	mov    bh,BYTE PTR [ebp-0xa4a0032]
 1012566:	cli    
 1012567:	dec    esp
 1012569:	(bad)  
 101256a:	(bad)  
 101256b:	call   ebx
 101256d:	(bad)  
 101256e:	(bad)  
 101256f:	dec    esi
 1012571:	(bad)  
 1012572:	(bad)  
 1012573:	push   DWORD PTR [ecx+0x73fffaf3]
 1012579:	mov    ds:0xffb6,eax
 101257e:	add    BYTE PTR [eax],al
 1012580:	add    BYTE PTR [eax],al
 1012582:	add    BYTE PTR [eax],al
 1012584:	mov    cl,0x9c
 1012586:	mov    ?,edi
 1012588:	(bad)  
 1012589:	(bad)  
 101258a:	(bad)  
 101258b:	(bad)  
 101258c:	(bad)  
 101258d:	(bad)  
 101258e:	(bad)  
 101258f:	(bad)  
 1012590:	(bad)  
 1012591:	std    
 1012592:	cld    
 1012593:	(bad)  
 1012594:	std    
 1012595:	cli    
 1012596:	clc    
 1012597:	(bad)  
 1012598:	std    
 1012599:	div    esp
 101259b:	(bad)  
 101259c:	sti    
 101259d:	repz out dx,eax
 101259f:	(bad)  
 10125a0:	cli    
 10125a1:	out    dx,al
 10125a2:	jmp    0xcfbeb0a6
 10125a7:	dec    DWORD PTR [edx-0x75003143]
 10125ad:	mov    ebp,0xbd8affce
 10125b2:	into   
 10125b3:	dec    DWORD PTR [edx+0xffcebd]
	...
 10125c1:	add    BYTE PTR [eax],al
 10125c3:	add    BYTE PTR [esi-0x86a5d],dh
 10125c9:	(bad)  
 10125ca:	(bad)  
 10125cb:	inc    ebp
 10125cd:	mov    cl,0xa4
 10125cf:	(bad)  
 10125d0:	mov    edi,0xb9ff9dab
 10125d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10125d6:	xchg   edi,eax
 10125d7:	push   DWORD PTR [edx-0x1f007163]
 10125dd:	ror    esp,cl
 10125df:	(bad)  
 10125e0:	cld    
 10125e1:	repz out dx,eax
 10125e3:	(bad)  
 10125e4:	cli    
 10125e5:	out    dx,eax
 10125e6:	jmp    0xb0c104ea
 10125eb:	jmp    FWORD PTR [ecx+edx*2+0x3d]
 10125ef:	inc    DWORD PTR [eax]
	...
 1012601:	add    BYTE PTR [eax],al
 1012603:	add    BYTE PTR [ecx+ebp*4-0x865],bh
 101260a:	(bad)  
 101260b:	(bad)  
 101260c:	(bad)  
 101260d:	(bad)  
 101260e:	(bad)  
 101260f:	(bad)  
 1012610:	(bad)  
 1012611:	(bad)  
 1012612:	(bad)  
 1012613:	(bad)  
 1012614:	(bad)  
 1012615:	(bad)  
 1012616:	(bad)  
 1012617:	(bad)  
 1012618:	(bad)  
 1012619:	std    
 101261a:	cld    
 101261b:	(bad)  
 101261c:	std    
 101261d:	cli    
 101261e:	stc    
 101261f:	call   DWORD PTR [edi+0x6cff6f80]
 1012625:	push   ecx
 1012626:	cmp    eax,0x3d516cff
 101262b:	jmp    FWORD PTR [ecx+edx*2+0x3d]
 101262f:	inc    DWORD PTR [eax]
	...
 1012641:	add    BYTE PTR [eax],al
 1012643:	add    al,al
 1012645:	scas   eax,DWORD PTR es:[edi]
 1012646:	mov    ds:0xfffffff7,al
 101264b:	(bad)  
 101264c:	(bad)  
 101264d:	(bad)  
 101264e:	(bad)  
 101264f:	(bad)  
 1012650:	(bad)  
 1012651:	(bad)  
 1012652:	(bad)  
 1012653:	(bad)  
 1012654:	(bad)  
 1012655:	(bad)  
 1012656:	(bad)  
 1012657:	(bad)  
 1012658:	(bad)  
 1012659:	(bad)  
 101265a:	(bad)  
 101265b:	(bad)  
 101265c:	(bad)  
 101265d:	std    
 101265e:	cld    
 101265f:	call   DWORD PTR [edi-0xf009080]
 1012665:	jmp    0xff6f:0x8097ffe6
	...
 1012684:	(bad)  
 1012685:	mov    ch,0xa9
 1012687:	stc    
 1012688:	(bad)  
 1012689:	(bad)  
 101268a:	(bad)  
 101268b:	(bad)  
 101268c:	(bad)  
 101268d:	(bad)  
 101268e:	(bad)  
 101268f:	(bad)  
 1012690:	(bad)  
 1012691:	(bad)  
 1012692:	(bad)  
 1012693:	(bad)  
 1012694:	(bad)  
 1012695:	(bad)  
 1012696:	(bad)  
 1012697:	(bad)  
 1012698:	(bad)  
 1012699:	(bad)  
 101269a:	(bad)  
 101269b:	(bad)  
 101269c:	(bad)  
 101269d:	(bad)  
 101269e:	(bad)  
 101269f:	call   DWORD PTR [edi-0x68009080]
 10126a5:	sub    BYTE PTR [edi-0x1],0x0
	...
 10126c1:	add    BYTE PTR [eax],al
 10126c3:	add    bl,al
 10126c5:	scas   al,BYTE PTR es:[edi]
 10126c6:	mov    ds:0xa9b4c6ef,al
 10126cb:	test   ecx,0xbcf7a3b0
 10126d1:	stos   BYTE PTR es:[edi],al
 10126d2:	sahf   
 10126d3:	div    DWORD PTR [esi-0x4e08685b]
 10126d9:	lahf   
 10126da:	xchg   ecx,eax
 10126db:	imul   DWORD PTR [ecx-0x68087a6c]
 10126e1:	sub    BYTE PTR [edi-0x1],0x0
	...
 101273d:	add    BYTE PTR [eax],al
 101273f:	add    bh,bh
 1012741:	add    DWORD PTR [eax],0x0
 1012744:	add    BYTE PTR [ecx],0x0
 1012747:	add    BYTE PTR [eax-0x7f0096ff],al
 101274d:	add    esi,ebx
 101274f:	inc    DWORD PTR [eax-0x7f0009ff]
 1012755:	add    DWORD PTR [ebx-0x54fe7f01],ebp
 101275b:	inc    DWORD PTR [eax-0x7f0056ff]
 1012761:	add    DWORD PTR [ebp-0x5ffc7f01],esp
 1012767:	inc    DWORD PTR [eax-0x7f0064f1]
 101276d:	setne  bh
 1012770:	sbb    BYTE PTR [edi],0x8d
 1012773:	inc    DWORD PTR [eax-0x7f0078c1]
 1012779:	jg     0x10127fa
 101277b:	(bad)  
 101277c:	(bad)  
 101277d:	(bad)  
 101277e:	js     0x101277f
 1012780:	sub    BYTE PTR [eax],al
 1012782:	add    BYTE PTR [eax],al
 1012784:	and    BYTE PTR [eax],al
 1012786:	add    BYTE PTR [eax],al
 1012788:	inc    eax
 1012789:	add    BYTE PTR [eax],al
 101278b:	add    BYTE PTR [ecx],al
 101278d:	add    BYTE PTR [eax],cl
	...
 10127a7:	add    bl,al
 10127a9:	mov    edi,0xda
 10127ae:	add    BYTE PTR [eax],al
 10127b0:	les    ebx,FWORD PTR [ebx-0x1607ff66]
 10127b6:	call   0xe1e314bb
 10127bb:	add    al,ah
 10127bd:	into   
 10127be:	retf   0xfb00
 10127c1:	fcmovbe st,st(0)
 10127c3:	add    cl,bh
 10127c5:	icebp  
 10127c6:	out    dx,al
 10127c7:	add    bh,bh
 10127c9:	in     al,0xd9
 10127cb:	add    ah,dl
 10127cd:	rcl    cl,cl
 10127cf:	add    cl,al
 10127d1:	fwait
 10127d2:	test   DWORD PTR [eax],eax
 10127d4:	rcr    DWORD PTR [edi-0x6747ff74],0x87
 10127db:	add    BYTE PTR [eax+ecx*4-0x7265ff88],ah
 10127e2:	test   BYTE PTR [eax],al
 10127e4:	aam    0xce
 10127e6:	retf   0xfd00
 10127e9:	div    ebx
 10127eb:	add    BYTE PTR [ecx+ebp*4-0x3e37ff5f],dh
 10127f2:	mov    esp,0x697a8e00
 10127f7:	add    bl,al
 10127f9:	mov    ebp,0xf9ff00b8
 10127fe:	hlt    
 10127ff:	add    ah,cl
 1012801:	mov    ebx,0xa9b1ba00
 1012807:	add    BYTE PTR [ebx+eiz*4-0x402ff66],ch
 101280e:	stc    
 101280f:	add    BYTE PTR [edi-0x48ff4f48],bh
 1012815:	mov    cl,0xa9
 1012817:	add    bh,bh
 1012819:	std    
 101281a:	cli    
 101281b:	add    bh,bh
 101281d:	(bad)  
 101281e:	test   BYTE PTR [eax],0xe6
 1012821:	out    0xb5,al
 1012823:	add    bh,bh
 1012825:	(bad)  
 1012826:	cld    
 1012827:	add    BYTE PTR [esi+0x6cdd],bl
 101282d:	aad    0x0
 101282f:	add    cl,dl
 1012831:	(bad)  
 1012832:	inc    DWORD PTR [eax]
 1012834:	out    0xff,al
 1012836:	inc    DWORD PTR [eax]
 1012838:	(bad)  
 1012839:	idiv   cl
 101283b:	add    cl,ah
 101283d:	cli    
 101283e:	cld    
 101283f:	add    ah,ah
 1012841:	cli    
 1012842:	cld    
 1012843:	add    bl,al
 1012845:	hlt    
 1012846:	stc    
 1012847:	add    dl,cl
 1012849:	hlt    
 101284a:	clc    
 101284b:	add    al,dl
 101284d:	cmc    
 101284e:	stc    
 101284f:	add    BYTE PTR [esi-0x29],al
 1012852:	jmp    0x1012854
 1012854:	push   eax
 1012855:	(bad)  
 1012857:	add    BYTE PTR [ebp-0x4aff0611],ch
 101285d:	icebp  
 101285e:	stc    
 101285f:	add    ah,al
 1012861:	lock test BYTE PTR [eax],0xd0
 1012865:	repnz test DWORD PTR [eax],0xf8f3d2
 101286c:	fprem1 
 101286e:	stc    
 101286f:	add    ch,bl
 1012871:	clc    
 1012872:	cld    
 1012873:	add    cl,ah
 1012875:	clc    
 1012876:	sti    
 1012877:	add    ah,ah
 1012879:	clc    
 101287a:	sti    
 101287b:	add    BYTE PTR [esi-0x43],al
 101287e:	rol    DWORD PTR [eax],cl
 1012880:	push   ebp
 1012881:	(bad)
 1012884:	pop    esp
 1012885:	(bad)  
 1012886:	fiadd  DWORD PTR [eax]
 1012888:	push   edi
 1012889:	mov    ebx,0xc95f00cc
 101288e:	fadd   QWORD PTR [eax]
 1012890:	(bad)  
 1012891:	retf   0xdd
 1012894:	popa   
 1012895:	enter  0xda,0x65
 1012899:	int    0xdf
 101289b:	add    BYTE PTR [ebx+ecx*8-0x22],ah
 101289f:	add    BYTE PTR [ecx-0x32],ch
 10128a2:	fild   WORD PTR [eax]
 10128a4:	outs   dx,BYTE PTR ds:[esi]
 10128a5:	shl    ecx,1
 10128a7:	add    BYTE PTR [esp+edx*8-0x1c],dh
 10128ab:	add    BYTE PTR [edx-0x29],bh
 10128ae:	out    0x0,al
 10128b0:	sbb    ecx,0xdf8f00e9
 10128b6:	in     eax,dx
 10128b7:	add    BYTE PTR [ecx-0x5bff101d],bl
 10128bd:	jecxz  0x10128ac
 10128bf:	add    BYTE PTR [ebx-0x44ff0b15],dh
 10128c5:	jmp    0xf3:0xecc100f2
 10128cc:	enter  0xf5ef,0x0
 10128d0:	int3   
 10128d1:	lock test BYTE PTR [eax],0xd5
 10128d5:	repz clc 
 10128d7:	add    dh,bl
 10128d9:	idiv   dl
 10128db:	add    BYTE PTR [eax-0x49],al
 10128de:	rol    BYTE PTR [eax],1
 10128e0:	inc    edx
 10128e1:	mov    ecx,0xb94600d1
 10128e6:	rol    DWORD PTR [eax],1
 10128e8:	dec    ecx
 10128e9:	mov    esi,0xbf4c00d5
 10128ee:	aad    0x0
 10128f0:	dec    esp
 10128f1:	mov    edx,0xbd4e00d0
 10128f6:	rol    DWORD PTR [eax],cl
 10128f8:	push   eax
 10128f9:	rcl    dh,0x0
 10128fc:	dec    ebx
 10128fd:	scas   al,BYTE PTR es:[edi]
 10128fe:	ret    0x5500
 1012901:	mov    edi,0xb34f00d4
 1012906:	mov    BYTE PTR [eax],0x57
 1012909:	ret    
 101290a:	xlat   BYTE PTR ds:[ebx]
 101290b:	add    BYTE PTR [edx-0x3a],bl
 101290e:	fiadd  DWORD PTR [eax]
 1012910:	pop    edx
 1012911:	rcl    esi,0x0
 1012914:	pop    ebp
 1012915:	ret    
 1012916:	fadd   DWORD PTR [eax]
 1012918:	pusha  
 1012919:	(bad)  
 101291a:	fld    DWORD PTR [eax]
 101291c:	pop    ebp
 101291d:	mov    esi,0xc46100d1
 1012922:	fadd   DWORD PTR [eax]
 1012924:	mov    ch,bl
 1012926:	out    dx,eax
 1012927:	add    BYTE PTR [eax-0x66ff0415],ah
 101292d:	xlat   BYTE PTR ds:[ebx]
 101292e:	in     al,0x0
 1012930:	lods   al,BYTE PTR ds:[esi]
 1012931:	loop   0x101291f
 1012933:	add    BYTE PTR [ebp-0x4cff1c27],ah
 1012939:	in     al,0xee
 101293b:	add    BYTE PTR [edx-0x75],al
 101293e:	popf   
 101293f:	add    BYTE PTR [edx-0x4d],bl
 1012942:	mov    DWORD PTR [eax],0xc9b661
 1012948:	jae    0x101291f
 101294a:	in     eax,dx
 101294b:	add    BYTE PTR [esi-0x27],bh
 101294e:	out    dx,al
 101294f:	add    BYTE PTR [esi-0x66ff0a1f],al
 1012955:	out    0xfa,eax
 1012957:	add    BYTE PTR [ecx-0x4cff212f],bl
 101295d:	in     eax,dx
 101295e:	cli    
 101295f:	add    BYTE PTR [ebx-0x45ff121c],bh
 1012965:	fucom  st(5)
 1012967:	add    bl,cl
 1012969:	jmp    0xec:0xc83f00f1
 1012970:	cmp    DWORD PTR [ebp-0x2c9cff3e],esp
 1012976:	repnz add BYTE PTR [ebx-0x35],ah
 101297a:	call   0xf5db9d7f
 101297f:	add    BYTE PTR [edi-0x38ff1e33],al
 1012985:	in     al,0xec
 1012987:	add    dl,dl
 1012989:	in     al,dx
 101298a:	repz add BYTE PTR [ebp-0x42],al
 101298e:	out    0x0,al
 1012990:	push   ebx
 1012991:	(bad)
 1012994:	xchg   edi,eax
 1012995:	fcomip st,st(5)
 1012997:	add    dl,al
 1012999:	in     eax,0xf0
 101299b:	add    BYTE PTR [esi],bl
 101299d:	mov    ch,0xed
 101299f:	add    BYTE PTR [edi],ch
 10129a1:	mov    eax,0xb54200e9
 10129a6:	fld    QWORD PTR [eax]
 10129a8:	pop    ecx
 10129a9:	retf   0xf4
 10129ac:	ins    DWORD PTR es:[edi],dx
 10129ad:	mov    ecx,0x965800d4
 10129b2:	stos   DWORD PTR es:[edi],eax
 10129b3:	add    BYTE PTR [ecx-0x3a],bh
 10129b6:	loope  0x10129b8
 10129b8:	js     0x1012976
 10129ba:	aam    0x0
 10129bc:	add    cl,0xd6
 10129bf:	add    BYTE PTR [eax-0x63],dh
 10129c2:	lods   eax,DWORD PTR ds:[esi]
 10129c3:	add    BYTE PTR [edi-0x4f],bh
 10129c6:	ret    
 10129c7:	add    BYTE PTR [esp+ebp*4-0x42],bh
 10129cb:	add    BYTE PTR [edx-0x6aff3b4d],al
 10129d1:	(bad)  
 10129d2:	fld    DWORD PTR [eax]
 10129d4:	fsub   st,st(3)
 10129d6:	out    0x0,eax
 10129d8:	adc    ch,BYTE PTR [ecx+0x7f1100e6]
 10129de:	lods   eax,DWORD PTR ds:[esi]
 10129df:	add    BYTE PTR [edi],dl
 10129e1:	nop
 10129e2:	ret    
 10129e3:	add    BYTE PTR [ebx+ebp*4],bl
 10129e6:	loop   0x10129e8
 10129e8:	sbb    eax,0x7300dba4
 10129ed:	mov    eax,ds:0x996d00b3
 10129f2:	stos   BYTE PTR es:[edi],al
 10129f3:	add    BYTE PTR [ecx-0x54ff0c24],ah
 10129f9:	int3   
 10129fa:	fld    DWORD PTR [eax]
 10129fc:	mov    al,0xbc
 10129fe:	rol    DWORD PTR [eax],0xcb
 1012a01:	aad    0xd9
 1012a03:	add    dh,bl
 1012a05:	call   0x8c0d2af6
 1012a0a:	rol    DWORD PTR [eax],0x10
 1012a0d:	sahf   
 1012a0e:	fild   DWORD PTR [eax]
 1012a10:	sbb    ebx,DWORD PTR [esp+edx*8-0x3d6fe500]
 1012a17:	add    BYTE PTR [edi-0x4d],bl
 1012a1a:	fadd   DWORD PTR [eax]
 1012a1c:	push   ebp
 1012a1d:	adc    DWORD PTR [ebp-0x7d8db200],0xab966800
 1012a27:	add    BYTE PTR [ebp-0x7a],bl
 1012a2a:	cdq    
 1012a2b:	add    BYTE PTR [ebp-0x6f],ah
 1012a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1012a2f:	add    BYTE PTR [ebx-0x68],ch
 1012a32:	lods   eax,DWORD PTR ds:[esi]
 1012a33:	add    BYTE PTR [edi-0x63],ch
 1012a36:	mov    dl,0x0
 1012a38:	push   0xffffff94
 1012a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1012a3b:	add    BYTE PTR [esi-0x5c],dh
 1012a3e:	mov    ecx,0xbca87900
 1012a43:	add    BYTE PTR [edx-0x6cff3449],cl
 1012a49:	rcl    ah,0x0
 1012a4c:	(bad)  
 1012a4d:	mov    cl,0xc1
 1012a4f:	add    BYTE PTR [ebp-0x79ff4151],cl
 1012a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1012a56:	mov    dl,0x0
 1012a58:	mov    WORD PTR [ecx-0x2a39ff56],fs
 1012a5e:	fadd   QWORD PTR [eax]
 1012a60:	stos   DWORD PTR es:[edi],eax
 1012a61:	mov    eax,0xd0c500be
 1012a66:	aad    0x0
 1012a68:	pop    ebx
 1012a69:	mov    dl,0xdb
 1012a6b:	add    BYTE PTR [ecx-0x7f],dl
 1012a6e:	cwde   
 1012a6f:	add    BYTE PTR [esi+0x7a],cl
 1012a72:	nop
 1012a73:	add    BYTE PTR [ecx+0x7d],dl
 1012a76:	xchg   ebx,eax
 1012a77:	add    BYTE PTR [edi-0x7b],dl
 1012a7a:	fwait
 1012a7b:	add    BYTE PTR [ebx+0x6c],cl
 1012a7e:	jge    0x1012a80
 1012a80:	addr16 xchg ebx,eax
 1012a82:	test   eax,0xa28d6300
 1012a87:	add    BYTE PTR [esi-0x66],ch
 1012a8a:	scas   eax,DWORD PTR es:[edi]
 1012a8b:	add    BYTE PTR [eax-0x73ff3247],dl
 1012a91:	lods   eax,DWORD PTR ds:[esi]
 1012a92:	mov    ebp,0xad9e8000
 1012a97:	add    BYTE PTR [ebx-0x71ff4455],cl
 1012a9d:	lods   eax,DWORD PTR ds:[esi]
 1012a9e:	mov    esp,0xbfb9ad00
 1012aa3:	add    al,cl
 1012aa5:	rcl    bh,cl
 1012aa7:	add    BYTE PTR [ebx-0x59],bl
 1012aaa:	rol    DWORD PTR [eax],1
 1012aac:	dec    edx
 1012aad:	je     0x1012a3a
 1012aaf:	add    BYTE PTR [ecx+0x72],cl
 1012ab2:	mov    DWORD PTR [eax],eax
 1012ab4:	dec    esi
 1012ab5:	je     0x1012a41
 1012ab7:	add    BYTE PTR [edx-0x7b],bl
 1012aba:	pushf  
 1012abb:	add    BYTE PTR [ebx-0x77],ah
 1012abe:	sahf   
 1012abf:	add    BYTE PTR [edx-0x77ff4456],cl
 1012ac5:	test   al,0xb9
 1012ac7:	add    BYTE PTR [ebp-0x75ff4355],cl
 1012acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1012ace:	mov    bl,0x0
 1012ad0:	ftst   
 1012ad2:	jmp    0x4b00:0xe9e3d800
 1012ad9:	jbe    0x1012a6a
 1012adb:	add    BYTE PTR [ebp+0x75],cl
 1012ade:	lea    eax,[eax]
 1012ae0:	push   esi
 1012ae1:	jle    0x1012a79
 1012ae3:	add    BYTE PTR [edx-0x7e],bl
 1012ae6:	call   0x4800:0x927b5600
 1012aed:	data16 jns 0x1012af0
 1012af0:	pop    esi
 1012af1:	test   DWORD PTR [ebp-0x657ca300],ebx
 1012af7:	add    BYTE PTR [esi-0x7e],bl
 1012afa:	cwde   
 1012afb:	add    BYTE PTR [ebx-0x39ff4149],ch
 1012b01:	rcl    dh,1
 1012b03:	add    bh,dl
 1012b05:	loope  0x1012aee
 1012b07:	add    ch,dl
 1012b09:	(bad)  
 1012b0b:	add    BYTE PTR [ebp+0x71],cl
 1012b0e:	mov    DWORD PTR [eax],eax
 1012b10:	push   edx
 1012b11:	js     0x1012aa4
 1012b13:	add    BYTE PTR [edi+0x73],cl
 1012b16:	mov    eax,DWORD PTR [eax]
 1012b18:	push   ecx
 1012b19:	jne    0x1012aa9
 1012b1b:	add    BYTE PTR [edi+0x7c],dl
 1012b1e:	xchg   ebp,eax
 1012b1f:	add    BYTE PTR [ebp-0x52],bh
 1012b22:	iret   
 1012b23:	add    BYTE PTR [eax+0x63],cl
 1012b26:	jbe    0x1012b28
 1012b28:	pop    esp
 1012b29:	jl     0x1012abd
 1012b2b:	add    BYTE PTR [eax+0x72],ah
 1012b2e:	jle    0x1012b30
 1012b30:	inc    edi
 1012b31:	imul   eax,DWORD PTR [esi-0x7690b500],0x0
 1012b38:	dec    ebx
 1012b39:	ins    DWORD PTR es:[edi],dx
 1012b3a:	xchg   BYTE PTR [eax],al
 1012b3c:	dec    ebp
 1012b3d:	outs   dx,BYTE PTR ds:[esi]
 1012b3e:	xchg   BYTE PTR [eax],al
 1012b40:	push   ecx
 1012b41:	jno    0x1012acc
 1012b43:	add    BYTE PTR [eax+0x7b],bl
 1012b46:	xchg   esp,eax
 1012b47:	add    BYTE PTR [edx+0x7d],bl
 1012b4a:	xchg   esi,eax
 1012b4b:	add    BYTE PTR [edx+0x7b],bl
 1012b4e:	xchg   ebx,eax
 1012b4f:	add    BYTE PTR [edi+0x76],dl
 1012b52:	mov    es,WORD PTR [eax]
 1012b54:	pop    ebp
 1012b55:	jle    0x1012aed
 1012b57:	add    BYTE PTR [ecx+0x79],bl
 1012b5a:	nop
 1012b5b:	add    BYTE PTR [ebx+0x6d],bl
 1012b5e:	jp     0x1012b60
 1012b60:	pop    edx
 1012b61:	ins    BYTE PTR es:[edi],dx
 1012b62:	jns    0x1012b64
 1012b64:	pop    esp
 1012b65:	outs   dx,BYTE PTR ds:[esi]
 1012b66:	jnp    0x1012b68
 1012b68:	pop    ebp
 1012b69:	outs   dx,DWORD PTR ds:[esi]
 1012b6a:	jl     0x1012b6c
 1012b6c:	pop    edi
 1012b6d:	jo     0x1012bec
 1012b6f:	add    BYTE PTR [esi+0x76],ah
 1012b72:	add    BYTE PTR [eax],0x45
 1012b75:	add    WORD PTR [eax],0x6a49
 1012b7a:	test   DWORD PTR [eax],eax
 1012b7c:	dec    edx
 1012b7d:	imul   eax,DWORD PTR [ebx+0x6e5a4200],0x73604800
 1012b87:	add    BYTE PTR [edx+edi*2-0x6e],bl
 1012b8b:	add    BYTE PTR [esp+ebx*2],bh
 1012b8e:	jns    0x1012b90
 1012b90:	inc    edx
 1012b91:	bound  edi,QWORD PTR [esi+0x0]
 1012b94:	dec    ecx
 1012b95:	add    WORD PTR [eax],0x543c
 1012b9a:	imul   eax,DWORD PTR [eax],0x83694c
 1012ba0:	(bad)  
 1012ba1:	(bad)  
 1012ba2:	inc    DWORD PTR [eax]
 1012ba4:	(bad)  
 1012ba5:	(bad)  
 1012ba6:	inc    DWORD PTR [eax]
 1012ba8:	add    DWORD PTR [ecx],eax
 1012baa:	add    DWORD PTR [ecx],eax
 1012bac:	add    esi,ecx
 1012bae:	into   
 1012baf:	rcr    dl,1
 1012bb1:	(bad)  
 1012bb3:	int    0xdb
 1012bb5:	fcmovnu st,st(1)
 1012bb7:	jecxz  0x1012b9d
 1012bb9:	in     al,0xe4
 1012bbb:	hlt    
 1012bbc:	cmc    
 1012bbd:	cmc    
 1012bbe:	repz repz cli 
 1012bc1:	cli    
 1012bc2:	stc    
 1012bc3:	stc    
 1012bc4:	add    DWORD PTR [ecx],eax
 1012bc6:	add    DWORD PTR [ecx],eax
 1012bc8:	add    DWORD PTR [ecx],eax
 1012bca:	add    DWORD PTR [ecx],eax
 1012bcc:	add    edi,ecx
 1012bce:	sub    al,0x60
 1012bd0:	imul   ebp,DWORD PTR [edx+0x75],0x73
 1012bd4:	xor    BYTE PTR [ecx+0x7e],0x7d
 1012bd8:	jge    0x1012b66
 1012bda:	mov    WORD PTR [esp+ecx*4-0x66666674],cs
 1012be1:	cdq    
 1012be2:	cwde   
 1012be3:	(bad)  
 1012be4:	sti    
 1012be5:	add    DWORD PTR [ecx],eax
 1012be7:	add    DWORD PTR [ecx],eax
 1012be9:	add    DWORD PTR [ecx],eax
 1012beb:	mov    DWORD PTR [ecx-0x77777877],ecx
 1012bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1012bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1012bf3:	xchg   ecx,eax
 1012bf4:	mov    ds:0xa1a4a2b8,eax
 1012bf9:	mov    bh,0xc5
 1012bfb:	rcl    ah,cl
 1012bfd:	call   0xe5e808d2
 1012c02:	sti    
 1012c03:	(bad)  
 1012c04:	sti    
 1012c05:	add    DWORD PTR [ecx],eax
 1012c07:	add    DWORD PTR [ecx],eax
 1012c09:	add    DWORD PTR [ecx],eax
 1012c0b:	lods   al,BYTE PTR ds:[esi]
 1012c0c:	inc    ebp
 1012c0d:	inc    esp
 1012c0e:	inc    ebx
 1012c0f:	inc    edx
 1012c10:	push   0x7e797a74
 1012c15:	jle    0x1012ba6
 1012c17:	(bad)  
 1012c18:	(bad)  
 1012c19:	(bad)  
 1012c1a:	nop
 1012c1b:	nop
 1012c1c:	nop
 1012c1d:	nop
 1012c1e:	call   0x98f3:0x8d8e9a9a
 1012c25:	sti    
 1012c26:	add    DWORD PTR [ecx],eax
 1012c28:	add    DWORD PTR [ecx],eax
 1012c2a:	mov    ah,0xc4
 1012c2c:	popf   
 1012c2d:	mov    bl,0xb3
 1012c2f:	mov    dl,0xcc
 1012c31:	int    0xc1
 1012c33:	rol    edx,0xc2
 1012c36:	ret    0xd9c1
 1012c39:	ret    
 1012c3a:	fcmovnu st,st(1)
 1012c3c:	(bad)  
 1012c3e:	in     eax,0xe4
 1012c40:	hlt    
 1012c41:	cmc    
 1012c42:	mov    ?,ebp
 1012c44:	(bad)  
 1012c45:	stc    
 1012c46:	add    DWORD PTR [ecx],eax
 1012c48:	add    DWORD PTR [ecx],eax
 1012c4a:	mov    ah,0x6f
 1012c4c:	ja     0x1012cc5
 1012c4e:	ja     0x1012cc7
 1012c50:	outs   dx,DWORD PTR ds:[esi]
 1012c51:	outs   dx,DWORD PTR ds:[esi]
 1012c52:	outs   dx,DWORD PTR ds:[esi]
 1012c53:	ins    BYTE PTR es:[edi],dx
 1012c54:	mov    cl,BYTE PTR [edx-0x7b7a7a7b]
 1012c5a:	test   BYTE PTR [ecx+eax*4+0x72818181],al
 1012c61:	in     eax,0xe5
 1012c63:	(bad)  
 1012c64:	sti    
 1012c65:	cld    
 1012c66:	add    DWORD PTR [ecx],eax
 1012c68:	add    DWORD PTR [ecx],eax
 1012c6a:	add    DWORD PTR [ecx+0x7078786f],esi
 1012c70:	jo     0x1012cee
 1012c72:	outs   dx,BYTE PTR ds:[esi]
 1012c73:	arpl   WORD PTR fs:[ecx+0x61],sp
 1012c77:	jbe    0x1012cef
 1012c79:	jbe    0x1012cf1
 1012c7b:	add    DWORD PTR [ebx-0x7e7c7c7d],0x72
 1012c82:	out    0x9b,al
 1012c84:	sti    
 1012c85:	cld    
 1012c86:	add    DWORD PTR [ecx],eax
 1012c88:	add    DWORD PTR [ecx],eax
 1012c8a:	add    DWORD PTR [edx+0x2f30246f],eax
 1012c90:	dec    edx
 1012c91:	cs dec eax
 1012c93:	inc    esi
 1012c94:	inc    esi
 1012c95:	inc    esp
 1012c96:	inc    esp
 1012c97:	pop    edi
 1012c98:	pop    edi
 1012c99:	pop    edi
 1012c9a:	pop    edi
 1012c9b:	imul   ebp,DWORD PTR [ecx+0x69],0x7f686869
 1012ca2:	(bad)
 1012ca5:	test   BYTE PTR [ecx],0x1
 1012ca8:	add    DWORD PTR [ecx],eax
 1012caa:	add    DWORD PTR [edx+0x2d272772],eax
 1012cb0:	sub    eax,0xc0e602c
 1012cb5:	or     al,0xc
 1012cb7:	or     al,0xc
 1012cb9:	or     eax,0x2b2b0d0d
 1012cbe:	sub    ch,BYTE PTR [edx]
 1012cc0:	sub    dh,BYTE PTR [ecx-0x5f]
 1012cc3:	out    0xea,al
 1012cc5:	test   BYTE PTR [ecx],0x1
 1012cc8:	add    DWORD PTR [ecx],eax
 1012cca:	add    DWORD PTR [ecx],eax
 1012ccc:	bound  esp,QWORD PTR gs:[ebx+0x63]
 1012cd0:	popa   
 1012cd1:	ins    BYTE PTR es:[edi],dx
 1012cd2:	jbe    0x1012cec
 1012cd4:	pop    ds
 1012cd5:	or     BYTE PTR [eax],cl
 1012cd7:	or     BYTE PTR [eax],cl
 1012cd9:	and    BYTE PTR [esi],bl
 1012cdb:	add    bh,BYTE PTR [eax]
 1012cdd:	cmp    BYTE PTR [eax],bh
 1012cdf:	cmp    BYTE PTR [edi+0x57],dl
 1012ce2:	push   ebp
 1012ce3:	out    0xec,al
 1012ce5:	test   BYTE PTR [ecx],0x1
 1012ce8:	add    DWORD PTR [ecx],eax
 1012cea:	add    DWORD PTR [ecx],eax
 1012cec:	popf   
 1012ced:	outs   dx,BYTE PTR ds:[esi]
 1012cee:	outs   dx,DWORD PTR ds:[esi]
 1012cef:	outs   dx,DWORD PTR ds:[esi]
 1012cf0:	arpl   WORD PTR [ebx+0x6c],sp
 1012cf3:	sbb    BYTE PTR ds:0x6060606,bl
 1012cf9:	and    DWORD PTR [eax],esp
 1012cfb:	add    ah,BYTE PTR [edi+0x67]
 1012cfe:	addr16 data16 push di
 1012d02:	push   edi
 1012d03:	jmp    0x101:0x101f7ec
 1012d0a:	add    DWORD PTR [ecx],eax
 1012d0c:	mov    al,ds:0x63626264
 1012d11:	popa   
 1012d12:	popa   
 1012d13:	sbb    BYTE PTR ds:0xdea89409,bl
 1012d19:	add    BYTE PTR [ebx],al
 1012d1b:	or     al,0x5d
 1012d1d:	pop    ebp
 1012d1e:	pop    ebp
 1012d1f:	cmp    BYTE PTR [eax],bh
 1012d21:	push   edx
 1012d22:	dec    edi
 1012d23:	in     al,dx
 1012d24:	loopne 0x1012d1d
 1012d26:	add    DWORD PTR [ecx],eax
 1012d28:	add    DWORD PTR [ecx],eax
 1012d2a:	add    DWORD PTR [ecx],eax
 1012d2c:	lds    eax,FWORD PTR [edi+0x6e]
 1012d2f:	bound  eax,QWORD PTR fs:[ebp+0x61]
 1012d33:	adc    DWORD PTR ds:0x802c7ba7,ebx
 1012d39:	rol    BYTE PTR ds:0x5a5b5e0b,0x56
 1012d40:	push   esi
 1012d41:	push   ebx
 1012d42:	dec    edi
 1012d43:	clc    
 1012d44:	jmp    0x1012d3d
 1012d46:	add    DWORD PTR [ecx],eax
 1012d48:	add    DWORD PTR [ecx],eax
 1012d4a:	add    DWORD PTR [ecx],eax
 1012d4c:	mov    bh,0x48
 1012d4e:	dec    eax
 1012d4f:	inc    edi
 1012d50:	bound  eax,QWORD PTR fs:[ebp+0x11]
 1012d54:	sbb    eax,0x802d60b9
 1012d59:	mov    al,0x5
 1012d5b:	or     ebx,DWORD PTR [esi+0x5b]
 1012d5e:	pop    edx
 1012d5f:	push   esi
 1012d60:	push   ebx
 1012d61:	push   edx
 1012d62:	dec    edi
 1012d63:	clc    
 1012d64:	jmp    0x1012d45
 1012d66:	add    DWORD PTR [ecx],eax
 1012d68:	add    DWORD PTR [ecx],eax
 1012d6a:	add    DWORD PTR [ecx],eax
 1012d6c:	mov    bh,0x49
 1012d6e:	dec    ecx
 1012d6f:	dec    eax
 1012d70:	inc    edi
 1012d71:	bound  edx,QWORD PTR fs:[edi]
 1012d74:	sbb    al,0xa8
 1012d76:	pusha  
 1012d77:	ins    DWORD PTR es:[edi],dx
 1012d78:	sbb    BYTE PTR [ebp+eax*1+0x5a5b5c0a],0x56
 1012d80:	push   ebx
 1012d81:	dec    edi
 1012d82:	dec    esi
 1012d83:	loopne 0x1012d70
 1012d85:	fild   WORD PTR [ecx]
 1012d87:	add    DWORD PTR [ecx],eax
 1012d89:	add    DWORD PTR [ecx],eax
 1012d8b:	add    DWORD PTR [ecx+0x48494a2f],esp
 1012d91:	inc    edi
 1012d92:	fs sbb bh,dh
 1012d95:	mov    ah,BYTE PTR [eax+0x6d]
 1012d98:	sbb    BYTE PTR [esp+eax*1+0x5a5b5c0b],0x56
 1012da0:	push   ebx
 1012da1:	dec    edi
 1012da2:	dec    ebp
 1012da3:	jmp    0x2030d7c
 1012da8:	add    DWORD PTR [ecx],eax
 1012daa:	add    DWORD PTR [ecx],eax
 1012dac:	mov    eax,ds:0x494a304b
 1012db1:	dec    eax
 1012db2:	inc    edi
 1012db3:	pop    ss
 1012db4:	pop    es
 1012db5:	mov    ch,BYTE PTR [ebx+0x6d]
 1012db8:	xor    BYTE PTR [eax+0x5b5c0b0f],0x58
 1012dbf:	push   esp
 1012dc0:	push   ecx
 1012dc1:	dec    edi
 1012dc2:	dec    ebp
 1012dc3:	jmp    0x2030d9c
 1012dc8:	add    DWORD PTR [ecx],eax
 1012dca:	add    DWORD PTR [ecx],eax
 1012dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1012dcd:	xor    DWORD PTR [ecx],esi
 1012dcf:	xor    BYTE PTR [edx+0x49],cl
 1012dd2:	dec    eax
 1012dd3:	adc    DWORD PTR ds:0x22232294,eax
 1012dd9:	xchg   ebx,eax
 1012dda:	push   cs
 1012ddb:	adc    ebx,DWORD PTR [ecx+ebx*2+0x58]
 1012ddf:	push   esp
 1012de0:	push   ebx
 1012de1:	dec    edi
 1012de2:	dec    esi
 1012de3:	jmp    0x2030dbc
 1012de8:	add    DWORD PTR [ecx],eax
 1012dea:	add    DWORD PTR [ecx],eax
 1012dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1012ded:	dec    esp
 1012dee:	dec    esp
 1012def:	xor    DWORD PTR [eax],esi
 1012df1:	dec    edx
 1012df2:	dec    eax
 1012df3:	adc    bh,dh
 1012df5:	outs   dx,DWORD PTR ds:[esi]
 1012df6:	ja     0x1012e27
 1012df8:	jo     0x1012d8e
 1012dfa:	pop    es
 1012dfb:	or     edi,DWORD PTR [ebx]
 1012dfd:	aaa    
 1012dfe:	pop    eax
 1012dff:	push   esp
 1012e00:	push   ecx
 1012e01:	xor    eax,0xdfd3e74e
 1012e06:	add    DWORD PTR [ecx],eax
 1012e08:	add    DWORD PTR [ecx],eax
 1012e0a:	add    DWORD PTR [ecx],eax
 1012e0c:	xchg   edx,eax
 1012e0d:	xor    ecx,DWORD PTR [ecx+esi*1+0x4b]
 1012e11:	das    
 1012e12:	dec    ecx
 1012e13:	adc    bh,dh
 1012e15:	adc    BYTE PTR [edi+0x100396ad],dl
 1012e1b:	or     edi,DWORD PTR [edx]
 1012e1d:	aaa    
 1012e1e:	pop    ecx
 1012e1f:	pop    eax
 1012e20:	push   esp
 1012e21:	push   eax
 1012e22:	dec    esi
 1012e23:	out    0xd3,eax
 1012e25:	rol    DWORD PTR [ecx],1
 1012e27:	add    DWORD PTR [ecx],eax
 1012e29:	add    DWORD PTR [ecx],eax
 1012e2b:	add    DWORD PTR [edx+0x314c3334],edx
 1012e31:	dec    ebx
 1012e32:	dec    edx
 1012e33:	adc    bh,dh
 1012e35:	sbb    al,0x1c
 1012e37:	pop    ds
 1012e38:	sbb    al,0x15
 1012e3a:	sbb    DWORD PTR [ebx],ecx
 1012e3c:	cmp    al,0x3a
 1012e3e:	aaa    
 1012e3f:	ss push esp
 1012e41:	push   ecx
 1012e42:	xor    eax,0x1d1d2dd
 1012e47:	add    DWORD PTR [ecx],eax
 1012e49:	add    DWORD PTR [ecx],eax
 1012e4b:	add    DWORD PTR [esi+0x4c333326],eax
 1012e51:	and    al,0x30
 1012e53:	sbb    edx,DWORD PTR [edx]
 1012e55:	sbb    dl,BYTE PTR [edi]
 1012e57:	sbb    BYTE PTR [esi],cl
 1012e59:	adc    edx,DWORD PTR [ebx]
 1012e5b:	push   cs
 1012e5c:	ds cmp eax,0x54365939
 1012e62:	push   eax
 1012e63:	fst    st(2)
 1012e65:	rol    DWORD PTR [ecx],1
 1012e67:	add    DWORD PTR [ecx],eax
 1012e69:	add    DWORD PTR [ecx],eax
 1012e6b:	add    DWORD PTR [esi+0x4c332626],eax
 1012e71:	xor    DWORD PTR [eax],esi
 1012e73:	push   ss
 1012e74:	(bad)  
 1012e75:	pop    ds
 1012e76:	pop    ds
 1012e77:	sbb    al,0x15
 1012e79:	adc    eax,0x3e3f0b1d
 1012e7e:	cmp    eax,0x54365939
 1012e83:	into   
 1012e84:	rcl    cl,cl
 1012e86:	add    DWORD PTR [ecx],eax
 1012e88:	add    DWORD PTR [ecx],eax
 1012e8a:	add    DWORD PTR [ecx],eax
 1012e8c:	xchg   BYTE PTR [esi],ah
 1012e8e:	es and eax,0xf243132
 1012e94:	(bad)  
 1012e95:	(bad)  
 1012e96:	(bad)  
 1012e97:	(bad)  
 1012e98:	(bad)  
 1012e99:	(bad)  
 1012e9a:	dec    BYTE PTR [ebx]
 1012e9c:	inc    eax
 1012e9d:	aas    
 1012e9e:	ds cmp eax,0xcf365939
 1012ea4:	(bad)
 1012ea7:	add    DWORD PTR [ecx],eax
 1012ea9:	add    DWORD PTR [ecx],eax
 1012eab:	add    DWORD PTR [esi+0x32252626],eax
 1012eb1:	xor    DWORD PTR [esp+edx*1],esp
 1012eb4:	movhps xmm2,QWORD PTR [esi]
 1012eb7:	push   ss
 1012eb8:	push   ss
 1012eb9:	push   ss
 1012eba:	push   ss
 1012ebb:	or     eax,DWORD PTR [ecx+0x40]
 1012ebe:	aas    
 1012ebf:	ds cmp al,0x3a
 1012ec2:	aaa    
 1012ec3:	iret   
 1012ec4:	mov    bh,0xb5
 1012ec6:	add    DWORD PTR [ecx],eax
 1012ec8:	add    DWORD PTR [ecx],eax
 1012eca:	add    DWORD PTR [ecx],eax
 1012ecc:	xchg   ecx,eax
 1012ecd:	and    eax,0x32322525
 1012ed2:	and    al,0x29
 1012ed4:	sub    BYTE PTR [esi],ch
 1012ed6:	inc    edi
 1012ed7:	inc    esi
 1012ed8:	bound  eax,QWORD PTR [ebp+0x44]
 1012edb:	inc    ebx
 1012edc:	inc    edx
 1012edd:	inc    ecx
 1012ede:	inc    eax
 1012edf:	inc    eax
 1012ee0:	aas    
 1012ee1:	cmp    al,0x3a
 1012ee3:	shl    BYTE PTR [edi+0x10101b5],cl
 1012ee9:	add    DWORD PTR [ecx],eax
 1012eeb:	add    DWORD PTR [edi-0x3636696a],eax
 1012ef1:	xchg   esi,eax
 1012ef2:	xchg   esi,eax
 1012ef3:	stos   DWORD PTR es:[edi],eax
 1012ef4:	stos   DWORD PTR es:[edi],eax
 1012ef5:	mov    edi,0xafababbf
 1012efa:	scas   eax,DWORD PTR es:[edi]
 1012efb:	mov    ebx,0xbbafafbb
 1012f00:	mov    ebx,0xa1c4d6d6
 1012f05:	mov    ch,0x1
 1012f07:	add    DWORD PTR [ecx],eax
 1012f09:	add    DWORD PTR [ecx],eax
 1012f0b:	add    DWORD PTR [edi-0x6a6a0d0e],eax
 1012f11:	repnz loope 0x1012ea9
 1012f14:	xchg   ebp,eax
 1012f15:	icebp  
 1012f16:	lock aad 0xd5
 1012f19:	out    dx,eax
 1012f1a:	out    dx,eax
 1012f1b:	scas   al,BYTE PTR es:[edi]
 1012f1c:	scas   al,BYTE PTR es:[edi]
 1012f1d:	in     eax,dx
 1012f1e:	in     eax,dx
 1012f1f:	scas   al,BYTE PTR es:[edi]
 1012f20:	scas   al,BYTE PTR es:[edi]
 1012f21:	in     eax,dx
 1012f22:	in     eax,dx
 1012f23:	les    esi,FWORD PTR [esi+0x101019e]
 1012f29:	add    DWORD PTR [ecx],eax
 1012f2b:	add    DWORD PTR [edi-0x37422829],eax
 1012f31:	xlat   BYTE PTR ds:[ebx]
 1012f32:	mov    edi,DWORD PTR [ebp-0x55282843]
 1012f38:	stos   BYTE PTR es:[edi],al
 1012f39:	fcomp  st(0)
 1012f3b:	mov    edi,0xbcbcd7d8
 1012f41:	xlat   BYTE PTR ds:[ebx]
 1012f42:	(bad)  
 1012f43:	mov    ds:0x1019e9f,al
 1012f48:	add    DWORD PTR [ecx],eax
 1012f4a:	add    DWORD PTR [ecx],eax
 1012f4c:	xchg   DWORD PTR [esi-0x411e1e42],edi
 1012f52:	mov    esi,0xbebeeff0
 1012f57:	in     eax,dx
 1012f58:	out    dx,eax
 1012f59:	aad    0xd5
 1012f5b:	in     eax,dx
 1012f5c:	in     eax,dx
 1012f5d:	aad    0xd5
 1012f5f:	in     eax,dx
 1012f60:	out    dx,al
 1012f61:	scas   al,BYTE PTR es:[edi]
 1012f62:	scas   al,BYTE PTR es:[edi]
 1012f63:	(bad)  
 1012f64:	mov    ds:0x101019e,al
 1012f69:	add    DWORD PTR [ecx],eax
 1012f6b:	add    DWORD PTR [ecx],eax
 1012f6d:	mov    DWORD PTR [edi-0x43437435],eax
 1012f73:	retf   
 1012f74:	retf   0xaaaa
 1012f77:	retf   0xa9ca
 1012f7a:	test   eax,0xc6c68bd7
 1012f7f:	retf   
 1012f80:	retf   0xaaba
 1012f83:	retf   0x9ea2
 1012f86:	add    DWORD PTR [ecx],eax
 1012f88:	add    DWORD PTR [ecx],eax
 1012f8a:	add    DWORD PTR [ecx],eax
 1012f8c:	add    DWORD PTR [ecx],eax
 1012f8e:	xchg   DWORD PTR [eax-0x5c6e5a5a],ecx
 1012f94:	mov    eax,0xd2b7a19f
 1012f99:	iret   
 1012f9a:	into   
 1012f9b:	fcmove st,st(5)
 1012f9d:	jecxz  0x1012f81
 1012f9f:	repz cli 
 1012fa1:	stc    
 1012fa2:	stc    
 1012fa3:	stc    
 1012fa4:	stc    
 1012fa5:	add    DWORD PTR [ecx],eax
 1012fa7:	add    eax,edi
 1012fa9:	add    BYTE PTR [eax],al
 1012fab:	psubb  mm0,QWORD PTR [eax]
 1012fae:	add    BYTE PTR [edi],al
 1012fb0:	loopne 0x1012fb2
 1012fb2:	add    BYTE PTR [edi],al
 1012fb4:	loopne 0x1012fb6
 1012fb6:	add    BYTE PTR [ebx],al
 1012fb8:	rol    BYTE PTR [eax],0x0
 1012fbb:	add    eax,eax
 1012fbd:	add    BYTE PTR [eax],al
 1012fbf:	add    esp,eax
 1012fc1:	add    BYTE PTR [eax],al
 1012fc3:	add    esp,eax
 1012fc5:	add    BYTE PTR [eax],al
 1012fc7:	add    esp,eax
 1012fc9:	add    BYTE PTR [eax],al
 1012fcb:	add    esi,eax
 1012fcd:	add    BYTE PTR [eax],al
 1012fcf:	add    esi,eax
 1012fd1:	add    BYTE PTR [eax],al
 1012fd3:	add    esi,eax
 1012fd5:	add    BYTE PTR [eax],al
 1012fd7:	add    esi,eax
 1012fd9:	add    BYTE PTR [eax],al
 1012fdb:	add    esi,eax
 1012fdd:	add    BYTE PTR [eax],al
 1012fdf:	add    esi,eax
 1012fe1:	add    BYTE PTR [eax],al
 1012fe3:	add    esi,eax
 1012fe5:	add    BYTE PTR [eax],al
 1012fe7:	add    esi,eax
 1012fe9:	add    BYTE PTR [eax],al
 1012feb:	add    esi,eax
 1012fed:	add    BYTE PTR [eax],al
 1012fef:	add    esi,eax
 1012ff1:	add    BYTE PTR [eax],al
 1012ff3:	add    esi,eax
 1012ff5:	add    BYTE PTR [eax],al
 1012ff7:	add    esi,eax
 1012ff9:	add    BYTE PTR [eax],al
 1012ffb:	add    esi,eax
 1012ffd:	add    BYTE PTR [eax],al
 1012fff:	add    esi,eax
 1013001:	add    BYTE PTR [eax],al
 1013003:	add    esi,eax
 1013005:	add    BYTE PTR [eax],al
 1013007:	add    esi,eax
 1013009:	add    BYTE PTR [eax],al
 101300b:	add    esi,eax
 101300d:	add    BYTE PTR [eax],al
 101300f:	add    esi,eax
 1013011:	add    BYTE PTR [eax],al
 1013013:	add    esi,eax
 1013015:	add    BYTE PTR [eax],al
 1013017:	add    esi,eax
 1013019:	add    BYTE PTR [eax],al
 101301b:	add    esi,eax
 101301d:	add    BYTE PTR [eax],al
 101301f:	add    edi,eax
 1013021:	add    BYTE PTR [eax],al
 1013023:	add    edi,esp
 1013025:	add    BYTE PTR [eax],al
 1013027:	pop    es
 1013028:	sub    BYTE PTR [eax],al
 101302a:	add    BYTE PTR [eax],al
 101302c:	adc    BYTE PTR [eax],al
 101302e:	add    BYTE PTR [eax],al
 1013030:	and    BYTE PTR [eax],al
 1013032:	add    BYTE PTR [eax],al
 1013034:	add    DWORD PTR [eax],eax
 1013036:	or     BYTE PTR [eax],al
	...
 1013054:	iret   
 1013055:	sar    BYTE PTR [edx-0x7b694600],0x0
 101305c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101305d:	xchg   edx,eax
 101305e:	mov    BYTE PTR [eax],al
 1013060:	cmc    
 1013061:	loopne 0x1013039
 1013063:	add    ch,bh
 1013065:	lock jmp 0x6e88dd6b
 101306b:	add    BYTE PTR [edx+edi*2-0x3149ffa8],dl
 1013072:	int    0x0
 1013074:	mov    ebx,0xe700ffff
 1013079:	(bad)  
 101307a:	inc    DWORD PTR [eax]
 101307c:	jmp    0xec023080
 1013081:	(bad)  
 1013082:	inc    DWORD PTR [eax]
 1013084:	mov    dl,0xfd
 1013086:	inc    DWORD PTR [eax]
 1013088:	mov    bl,0xfd
 101308a:	inc    DWORD PTR [eax]
 101308c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101308d:	clc    
 101308e:	inc    DWORD PTR [eax]
 1013090:	test   al,0xf9
 1013092:	inc    DWORD PTR [eax]
 1013094:	popf   
 1013095:	cmc    
 1013096:	inc    DWORD PTR [eax]
 1013098:	mov    al,ds:0x6e00fcf3
 101309d:	lahf   
 101309e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101309f:	add    BYTE PTR [edx-0x60],dh
 10130a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10130a3:	add    BYTE PTR [esi-0x63ff0714],dl
 10130a9:	repz inc DWORD PTR [eax]
 10130ac:	pushf  
 10130ad:	in     eax,dx
 10130ae:	stc    
 10130af:	add    BYTE PTR [edi-0x64],ah
 10130b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10130b3:	add    BYTE PTR [edx-0x75ff0013],cl
 10130b9:	jecxz  0x10130ae
 10130bb:	add    BYTE PTR [edx-0x6bff0010],dl
 10130c1:	out    dx,eax
 10130c2:	inc    DWORD PTR [eax]
 10130c4:	xchg   esp,eax
 10130c5:	lock inc DWORD PTR [eax]
 10130c8:	imul   ebx,DWORD PTR [ebp-0x2391ff5b],0xe98200f4
 10130d2:	inc    DWORD PTR [eax]
 10130d4:	jge    0x10130b0
 10130d6:	out    dx,al
 10130d7:	add    BYTE PTR [ecx-0x75ff0014],cl
 10130dd:	jmp    0x10130de
 10130df:	add    BYTE PTR [edx-0x78ff0014],cl
 10130e5:	in     eax,0xf9
 10130e7:	add    BYTE PTR [eax+0x5e00f9e5],cl
 10130ed:	cdq    
 10130ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10130ef:	add    BYTE PTR [edi+ebp*8-0xe52ff01],bl
 10130f6:	inc    DWORD PTR [eax]
 10130f8:	fdivr  st(7),st
 10130fa:	cld    
 10130fb:	add    BYTE PTR [esi-0x26],ch
 10130fe:	hlt    
 10130ff:	add    BYTE PTR [edx-0x1b],bh
 1013102:	inc    DWORD PTR [eax]
 1013104:	outs   dx,DWORD PTR ds:[esi]
 1013105:	shr    al,1
 1013107:	add    BYTE PTR [ebx-0x1b],bh
 101310a:	inc    DWORD PTR [eax]
 101310c:	dec    edi
 101310d:	xchg   edx,eax
 101310e:	mov    ds:0xffe88000,eax
 1013113:	add    BYTE PTR [ecx+0x5300ffe8],al
 1013119:	xchg   esp,eax
 101311a:	mov    ds:0xffec9e00,eax
 101311f:	add    cl,ch
 1013121:	stc    
 1013122:	std    
 1013123:	add    BYTE PTR [eax-0x31],dl
 1013126:	hlt    
 1013127:	add    BYTE PTR [edx-0x2f],dl
 101312a:	hlt    
 101312b:	add    BYTE PTR [ebx+ecx*4],bh
 101312e:	mov    ds:0xa28c4000,al
 1013133:	add    BYTE PTR [ebx-0x24],ch
 1013136:	sti    
 1013137:	add    BYTE PTR [ebx-0x25],ch
 101313a:	cli    
 101313b:	add    BYTE PTR [edx-0x39],ah
 101313e:	jecxz  0x1013140
 1013140:	dec    ecx
 1013141:	(bad)  
 1013142:	mov    ds:0xffe17400,eax
 1013147:	add    BYTE PTR [edx+eiz*8-0x1],dh
 101314b:	add    BYTE PTR [ebp-0x1f],dh
 101314e:	inc    DWORD PTR [eax]
 1013150:	xor    BYTE PTR [esi-0x47b2ff5f],al
 1013156:	fild   DWORD PTR [eax]
 1013158:	push   ebp
 1013159:	(bad)  
 101315a:	call   0xefcc8d5f
 101315f:	add    BYTE PTR [esi-0x42],dl
 1013162:	fiadd  WORD PTR [eax]
 1013164:	push   esi
 1013165:	mov    edi,0xd96a00de
 101316a:	cli    
 101316b:	add    BYTE PTR [ebx-0x64],dl
 101316e:	mov    ah,0x0
 1013170:	xchg   ebp,eax
 1013171:	fcomip st,st(7)
 1013173:	add    BYTE PTR [edi+0x900f9e8],ch
 1013179:	jne    0x1013118
 101317b:	add    BYTE PTR [ebx],dl
 101317d:	jns    0x101311e
 101317f:	add    BYTE PTR [ecx],ah
 1013181:	jg     0x1013122
 1013183:	add    BYTE PTR [ebx+eax*8],dh
 1013186:	repz add BYTE PTR [edi],dh
 1013189:	ret    
 101318a:	repnz add BYTE PTR ds:0x3e00a081,ah
 1013191:	lods   al,BYTE PTR ds:[esi]
 1013192:	rol    BYTE PTR [eax],cl
 1013194:	xor    BYTE PTR [ebp-0x4fbdff5e],al
 101319a:	(bad)  
 101319b:	add    BYTE PTR [ecx+edi*4-0x22],cl
 101319f:	add    BYTE PTR [ebp+edx*4-0x51],cl
 10131a3:	add    BYTE PTR [edi-0x69],cl
 10131a6:	mov    cl,0x0
 10131a8:	push   ecx
 10131a9:	call   0xb5:0x9d5500b3
 10131b0:	and    eax,0x2500a984
 10131b5:	sub    BYTE PTR [eax-0x5b80db00],0x0
 10131bc:	aaa    
 10131bd:	and    BYTE PTR [eax-0x5979c600],0x0
 10131c4:	cmp    al,0x88
 10131c6:	test   al,0x0
 10131c8:	mov    ch,BYTE PTR ds:[eax-0x5472bf00]
 10131cf:	add    BYTE PTR [ebp-0x71],al
 10131d2:	lods   al,BYTE PTR ds:[esi]
 10131d3:	add    BYTE PTR [eax-0x6e],cl
 10131d6:	scas   al,BYTE PTR es:[edi]
 10131d7:	add    BYTE PTR [eax-0x63],dl
 10131da:	mov    ebx,0x705f3600
 10131df:	add    BYTE PTR [edi-0x24],bh
 10131e2:	inc    DWORD PTR [eax]
 10131e4:	cmp    al,0x61
 10131e6:	jo     0x10131e8
 10131e8:	cmp    eax,0x41007061
 10131ed:	arpl   WORD PTR [ecx+0x0],si
 10131f0:	jbe    0x1013198
 10131f2:	mov    ecx,0xc0ad7b00
 10131f7:	add    BYTE PTR [eax],al
 10131f9:	bound  ecx,QWORD PTR [eax+eax*1+0xa88125]
 1013200:	and    eax,0x2500a57f
 1013205:	jge    0x10131aa
 1013207:	add    BYTE PTR ds:0x2500a27b,ah
 101320d:	jp     0x10131ae
 101320f:	add    BYTE PTR ds:0x25009e79,ah
 1013215:	jp     0x10131b5
 1013217:	add    BYTE PTR ds:0x2a009c78,ah
 101321d:	add    BYTE PTR gs:[eax],0x2e
 1013221:	ins    DWORD PTR es:[edi],dx
 1013222:	mov    DWORD PTR [eax],eax
 1013224:	xor    dh,BYTE PTR [ebp-0x6e]
 1013227:	add    BYTE PTR ds:0x36009a7c,dh
 101322d:	pop    esi
 101322e:	jo     0x1013230
 1013230:	inc    edx
 1013231:	arpl   WORD PTR [ecx+0x0],si
 1013234:	outs   dx,DWORD PTR ds:[esi]
 1013235:	popf   
 1013236:	mov    dl,0x0
 1013238:	and    DWORD PTR [edx+0x6a],edx
 101323b:	add    BYTE PTR [esi],ah
 101323d:	pop    ebx
 101323e:	jne    0x1013240
 1013240:	sub    BYTE PTR [eax+0x6f],bl
 1013243:	add    BYTE PTR [edi],ch
 1013245:	pop    ebx
 1013246:	jo     0x1013248
 1013248:	pop    edi
 1013249:	mov    esp,DWORD PTR [ecx-0x556b9800]
 101324f:	add    BYTE PTR [esi+0x76],bl
 1013252:	add    BYTE PTR [eax],0x6a
 1013255:	or     DWORD PTR [edi+0x60481d00],0x0
 101325c:	adc    al,0x35
 101325e:	dec    edx
 101325f:	add    BYTE PTR [ecx],bl
 1013261:	ds push esp
 1013263:	add    BYTE PTR [eax-0x80],bl
 1013266:	cwde   
 1013267:	add    bl,ah
 1013269:	jmp    0x101325b
 101326b:	add    BYTE PTR [edi],cl
 101326d:	sub    al,0x3f
 101326f:	add    BYTE PTR [eax+0x76],dl
 1013272:	pop    DWORD PTR [eax]
 1013274:	push   eax
 1013275:	gs jae 0x1013278
 1013278:	or     al,0x24
 101327a:	add    BYTE PTR ss:[ecx+0x64],al
 101327e:	jg     0x1013280
 1013280:	dec    eax
 1013281:	ins    BYTE PTR es:[edi],dx
 1013282:	xchg   BYTE PTR [eax],al
 1013284:	inc    eax
 1013285:	push   ebp
 1013286:	add    BYTE PTR fs:0x31007a5e,bh
 101328d:	inc    esp
 101328e:	push   esp
 101328f:	add    BYTE PTR [ebx*2+0x5e3d007a],bh
 1013296:	jnp    0x1013298
 1013298:	cmp    al,0x5c
 101329a:	jns    0x101329c
 101329c:	or     BYTE PTR [ebx],bl
 101329e:	sub    eax,0x47352200
 10132a3:	add    BYTE PTR [esp+edx*1],al
 10132a6:	and    eax,0x1f0f0200
 10132ab:	add    BYTE PTR [edi],cl
 10132ad:	pop    ds
 10132ae:	xor    al,BYTE PTR [eax]
 10132b0:	add    eax,0x19002312
 10132b5:	sub    BYTE PTR [ebx],bh
 10132b7:	add    BYTE PTR [ebx],al
 10132b9:	push   cs
 10132ba:	push   ds
 10132bb:	add    BYTE PTR [ecx],cl
 10132bd:	pop    ss
 10132be:	sub    eax,DWORD PTR [eax]
 10132c0:	(bad)  
 10132c1:	(bad)  
 10132c2:	inc    DWORD PTR [eax]
	...
 1013450:	add    BYTE PTR [eax],al
 1013452:	add    BYTE PTR [ecx-0x70727680],al
 1013458:	xchg   esp,eax
 1013459:	cdq    
 101345a:	xchg   edi,eax
 101345b:	fwait
 101345c:	cwde   
 101345d:	call   0x696b:0x96
 1013464:	imul   ebp,DWORD PTR [eax+0x79],0x88857e7f
 101346b:	mov    WORD PTR [ebx+0x9592],cs
 1013471:	add    BYTE PTR [eax],al
 1013473:	imul   ecx,DWORD PTR [edi],0x12
 1013476:	adc    eax,0x3b2d211a
 101347b:	inc    ebp
 101347c:	inc    ecx
 101347d:	nop
 101347e:	xchg   ebx,eax
 101347f:	add    BYTE PTR [eax],al
 1013481:	pop    eax
 1013482:	pop    ecx
 1013483:	imul   ebp,DWORD PTR [edx+ebx*2+0x6d],0x6e
 1013488:	outs   dx,DWORD PTR ds:[esi]
 1013489:	jno    0x10134fb
 101348b:	jb     0x10134d1
 101348d:	mov    cs,WORD PTR [edx+0x62000000]
 1013493:	push   ebx
 1013494:	push   ebx
 1013495:	push   ebx
 1013496:	push   ebx
 1013497:	push   ebx
 1013498:	push   ebx
 1013499:	push   eax
 101349a:	push   eax
 101349b:	push   eax
 101349c:	push   0xffffff91
 101349e:	xchg   DWORD PTR [eax],eax
 10134a0:	add    BYTE PTR [eax],al
 10134a2:	add    BYTE PTR [edx+0x43],cl
 10134a5:	and    al,0x3
 10134a7:	add    al,BYTE PTR [esi]
 10134a9:	pop    es
 10134aa:	inc    esi
 10134ab:	inc    ebx
 10134ac:	push   edx
 10134ad:	pop    esp
 10134ae:	add    DWORD PTR [eax],0x0
 10134b1:	add    BYTE PTR [eax],al
 10134b3:	dec    edx
 10134b4:	adc    DWORD PTR ds:0x6088601,ebx
 10134ba:	cmp    eax,0x845d4239
 10134bf:	add    BYTE PTR [eax],al
 10134c1:	add    BYTE PTR [eax],al
 10134c3:	dec    ebx
 10134c4:	movups XMMWORD PTR [ecx],xmm0
 10134c7:	xor    esp,DWORD PTR [esi+eax*1+0x2c]
 10134cb:	aas    
 10134cc:	cmp    bl,BYTE PTR [esi-0x7e]
 10134cf:	add    BYTE PTR [eax],al
 10134d1:	add    BYTE PTR [eax],al
 10134d3:	dec    esp
 10134d4:	or     eax,0x28290110
 10134d9:	push   es
 10134da:	and    BYTE PTR [esi+edi*1],ch
 10134dd:	pop    edi
 10134de:	jp     0x10134e0
 10134e0:	add    BYTE PTR [eax],al
 10134e2:	add    BYTE PTR [ecx+0x9],dl
 10134e5:	push   cs
 10134e6:	add    DWORD PTR [ecx],eax
 10134e8:	add    DWORD PTR [esi],eax
 10134ea:	sbb    DWORD PTR [ecx],esi
 10134ec:	cs pusha 
 10134ee:	jnp    0x10134f0
 10134f0:	add    BYTE PTR [eax],al
 10134f2:	add    BYTE PTR [eax],bh
 10134f4:	or     al,0xb
 10134f6:	add    DWORD PTR ds:0x231c0604,eax
 10134fc:	xor    BYTE PTR [ecx+0x73],ah
 10134ff:	add    BYTE PTR [eax],al
 1013501:	add    BYTE PTR [eax],al
 1013503:	das    
 1013504:	or     cl,BYTE PTR [edx]
 1013506:	add    DWORD PTR [ecx],eax
 1013508:	add    DWORD PTR [ecx],eax
 101350a:	push   ss
 101350b:	sbb    esp,DWORD PTR [edx]
 101350d:	push   esp
 101350e:	je     0x1013510
 1013510:	add    BYTE PTR [eax],al
 1013512:	add    BYTE PTR [edi],ah
 1013514:	sub    ah,BYTE PTR [di+0x34]
 1013518:	ja     0x1013563
 101351a:	jge    0x1013564
 101351c:	jl     0x1013573
 101351e:	jne    0x1013520
 1013520:	add    BYTE PTR [eax],al
 1013522:	add    BYTE PTR [esi],bl
 1013524:	pop    ss
 1013525:	js     0x101354d
 1013527:	popw   ds
 1013529:	arpl   WORD PTR [esi],si
 101352b:	jge    0x101357b
 101352d:	push   esi
 101352e:	jbe    0x1013530
 1013530:	add    BYTE PTR [eax],al
 1013532:	add    BYTE PTR [edi+eiz*2],dl
 1013535:	and    eax,0x35772b65
 101353a:	jge    0x1013589
 101353c:	jl     0x1013585
 101353e:	pop    ebx
 101353f:	add    BYTE PTR [eax],al
 1013541:	add    BYTE PTR [eax],al
 1013543:	adc    al,0x14
 1013545:	adc    ebx,DWORD PTR [eax]
 1013547:	daa    
 1013548:	xor    bh,BYTE PTR [edi+esi*1]
 101354b:	inc    eax
 101354c:	dec    edi
 101354d:	push   edi
 101354e:	add    BYTE PTR [eax],al
 1013550:	loopne 0x1013553
 1013552:	add    DWORD PTR [edx+0x2d2701c0],eax
 1013558:	loopne 0x101355b
 101355a:	pusha  
 101355b:	push   cs
 101355c:	add    BYTE PTR [ecx],0xc
 101355f:	or     al,0xc0
 1013561:	add    DWORD PTR ds:0x2a01e00d,ecx
 1013567:	sub    ah,al
 1013569:	add    DWORD PTR [ecx+0x101e0e6],esp
 101356f:	add    eax,esp
 1013571:	add    DWORD PTR [ecx],eax
 1013573:	add    eax,esp
 1013575:	add    DWORD PTR [ebx+0x63],esp
 1013578:	loopne 0x101357b
 101357a:	jbe    0x1013594
 101357c:	loopne 0x101357f
 101357e:	or     BYTE PTR [eax],cl
 1013580:	loopne 0x1013583
 1013582:	push   ds
 1013583:	add    ah,al
 1013585:	add    DWORD PTR [eax],edi
 1013587:	cmp    al,ah
 1013589:	add    DWORD PTR [ebp-0x1a],edx
 101358c:	loopne 0x1013591
 101358e:	add    DWORD PTR [ecx],eax
 1013590:	sub    BYTE PTR [eax],al
 1013592:	add    BYTE PTR [eax],al
 1013594:	and    BYTE PTR [eax],al
 1013596:	add    BYTE PTR [eax],al
 1013598:	inc    eax
 1013599:	add    BYTE PTR [eax],al
 101359b:	add    BYTE PTR [ecx],al
 101359d:	add    BYTE PTR [eax],ah
	...
 10135cb:	add    BYTE PTR [edi+0x7f],dl
 10135ce:	xchg   esi,eax
 10135cf:	call   DWORD PTR [ebp+0x7d]
 10135d2:	xchg   ebp,eax
 10135d3:	call   DWORD PTR [ebx+edi*2-0x6e]
 10135d7:	call   DWORD PTR [ebx+0x78]
 10135da:	xchg   ecx,eax
 10135db:	call   DWORD PTR [eax+0x77]
 10135de:	(bad)  
 10135df:	call   DWORD PTR [eax+0x74]
 10135e2:	mov    ?,edi
 10135e4:	dec    edi
 10135e5:	je     0x1013574
 10135e7:	dec    DWORD PTR [edi+0x73]
 10135ea:	mov    edi,edi
 10135ec:	dec    esi
 10135ed:	jb     0x101357a
 10135ef:	dec    DWORD PTR [ebp+0x70]
 10135f2:	mov    edi,edi
 10135f4:	dec    esp
 10135f5:	outs   dx,BYTE PTR ds:[esi]
 10135f6:	mov    bh,bh
 10135f8:	dec    ebx
 10135f9:	ins    DWORD PTR es:[edi],dx
 10135fa:	xchg   edi,edi
 10135fc:	dec    ebx
 10135fd:	ins    DWORD PTR es:[edi],dx
 10135fe:	test   edi,edi
 1013600:	dec    ebx
 1013601:	ins    BYTE PTR es:[edi],dx
 1013602:	xchg   bh,bh
 1013604:	dec    ecx
 1013605:	push   0xffffff85
 1013607:	dec    DWORD PTR [edx+0x6a]
 101360a:	cmp    edi,0x49
 101360d:	push   0x6646ff82
 1013612:	cmp    edi,0xff7f6444
 1013618:	inc    edx
 1013619:	bound  edi,QWORD PTR [ebp-0x1]
 101361c:	inc    ecx
 101361d:	pusha  
 101361e:	jl     0x101361f
 1013620:	inc    eax
 1013621:	pop    edi
 1013622:	jp     0x1013623
 1013624:	cmp    eax,0xff795d
	...
 1013649:	add    BYTE PTR [eax],al
 101364b:	add    BYTE PTR [edx-0x7e],bl
 101364e:	call   0xa3ff:0xf7f0adff
 1013655:	in     al,dx
 1013656:	idiv   bh
 1013658:	xchg   edi,eax
 1013659:	out    0xf5,eax
 101365b:	inc    DWORD PTR [esi+0x74fff5e1]
 1013661:	(bad)  
 1013663:	jmp    DWORD PTR [ebx-0x2d]
 1013666:	bnd call DWORD PTR [eax-0x35]
 101366a:	repnz (bad) 
 101366c:	aas    
 101366d:	(bad)  
 101366e:	icebp  
 101366f:	push   DWORD PTR [eax]
 1013671:	mov    ebp,0xb722ffef
 1013676:	out    dx,al
 1013677:	call   FWORD PTR [ecx]
 1013679:	mov    dl,0xec
 101367b:	call   DWORD PTR [edx]
 101367d:	scas   al,BYTE PTR es:[edi]
 101367e:	jmp    0x12ff:0xe9ac11ff
 1013685:	test   eax,0xa612ffe6
 101368a:	in     al,0xff
 101368c:	adc    ah,BYTE PTR [ebx-0x5eee001e]
 1013692:	(bad)  
 1013694:	adc    DWORD PTR [edi-0x63f00024],ebx
 101369a:	(bad)  
 101369c:	push   cs
 101369d:	fwait
 101369e:	xlat   BYTE PTR ds:[ebx]
 101369f:	dec    DWORD PTR [ebx]
 10136a1:	mov    eax,ebx
 10136a3:	dec    DWORD PTR [edx]
 10136a5:	jl     0x1013653
 10136a7:	dec    DWORD PTR [ecx+0x66]
 10136aa:	cmp    bh,0x0
	...
 10136c1:	add    BYTE PTR [eax],al
 10136c3:	add    DWORD PTR [esp+esi*4-0x4a7c003b],eax
 10136ca:	(bad)  
 10136cd:	mov    bl,0xc3
 10136cf:	inc    DWORD PTR [eax+0x7effc1b0]
 10136d5:	scas   al,BYTE PTR es:[edi]
 10136d6:	mov    edi,0xbdab7bff
 10136db:	(bad)  
 10136dc:	js     0x1013685
 10136de:	mov    ebx,0xb8a375ff
 10136e3:	push   DWORD PTR [ebx-0x5f]
 10136e6:	mov    ah,0xff
 10136e8:	outs   dx,DWORD PTR ds:[esi]
 10136e9:	pushf  
 10136ea:	mov    cl,0xff
 10136ec:	outs   dx,DWORD PTR ds:[esi]
 10136ed:	cdq    
 10136ee:	scas   al,BYTE PTR es:[edi]
 10136ef:	jmp    FWORD PTR [ebx-0x69]
 10136f2:	stos   DWORD PTR es:[edi],eax
 10136f3:	jmp    FWORD PTR [edx-0x6d]
 10136f6:	test   al,0xff
 10136f8:	addr16 nop
 10136fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10136fb:	jmp    DWORD PTR [esi-0x74]
 10136fe:	mov    ds:0x9f8963ff,al
 1013703:	jmp    DWORD PTR [ecx-0x7b]
 1013706:	pushf  
 1013707:	call   FWORD PTR [edi-0x7e]
 101370a:	cdq    
 101370b:	call   FWORD PTR [ebx+0x7d]
 101370e:	xchg   esi,eax
 101370f:	call   DWORD PTR [edi+0x7a]
 1013712:	xchg   ecx,eax
 1013713:	call   DWORD PTR [ebx+0x75]
 1013716:	(bad)  
 1013717:	call   DWORD PTR [ecx+0x71]
 101371a:	mov    edi,edi
 101371c:	dec    esp
 101371d:	ins    BYTE PTR es:[edi],dx
 101371e:	xchg   bh,bh
 1013720:	dec    eax
 1013721:	addr16 cmp edi,0xd
 1013725:	jl     0x10136d3
 1013727:	dec    DWORD PTR [ecx+0x66]
 101372a:	cmp    bh,0x0
	...
 101373d:	add    BYTE PTR [eax],al
 101373f:	add    DWORD PTR [eax],eax
 1013741:	push   ebp
 1013742:	push   ebp
 1013743:	push   es
 1013744:	mov    WORD PTR [ecx-0x195a0056],fs
 101374a:	out    dx,al
 101374b:	call   FWORD PTR [edx+eiz*8-0x21700014]
 1013752:	in     al,dx
 1013753:	inc    DWORD PTR [edx+0x74ffebd8]
 1013759:	shr    edx,cl
 101375b:	jmp    DWORD PTR [ebx-0x35]
 101375e:	call   0xe8c68b62
 1013763:	inc    DWORD PTR [ebp-0x42]
 1013766:	out    0xff,al
 1013768:	ss mov eax,0xb328ffe6
 101376e:	in     eax,0xff
 1013770:	and    BYTE PTR [edi-0x54e4001d],ch
 1013776:	loop   0x1013777
 1013778:	sbb    DWORD PTR [edx-0x58e5001f],ebp
 101377e:	loopne 0x101377f
 1013780:	sbb    esp,DWORD PTR [esi-0x5ae20022]
 1013786:	fdiv   st(7),st
 1013788:	push   ds
 1013789:	mov    ds:0xa11effda,al
 101378e:	xlat   BYTE PTR ds:[ebx]
 101378f:	call   FWORD PTR ds:0x1bffd59e
 1013795:	pushf  
 1013796:	aam    0xff
 1013798:	sbb    DWORD PTR [ebx-0x6fe9002d],ebx
 101379e:	ret    
 101379f:	call   DWORD PTR [ecx+eax*4]
 10137a2:	scas   eax,DWORD PTR es:[edi]
 10137a3:	inc    DWORD PTR [edi+0x66]
 10137a6:	cmp    bh,0xd
 10137a9:	mov    bh,BYTE PTR [edi-0x7f99b601]
 10137af:	inc    DWORD PTR [eax]
	...
 10137bd:	xor    esp,DWORD PTR [esi+0x5]
 10137c0:	pop    eax
 10137c1:	test   DWORD PTR [ebx-0x637aa501],ebx
 10137c7:	call   DWORD PTR [ecx+eax*4-0x6a]
 10137cb:	call   DWORD PTR [ecx+0x7e]
 10137ce:	xchg   ebx,eax
 10137cf:	call   DWORD PTR [eax+0x7c]
 10137d2:	xchg   edx,eax
 10137d3:	dec    DWORD PTR [esi+0x7a]
 10137d6:	nop
 10137d7:	dec    DWORD PTR [ebx+0x76]
 10137da:	(bad)  
 10137db:	dec    DWORD PTR [esi+esi*2-0x73]
 10137df:	dec    DWORD PTR [ecx+0x74]
 10137e2:	mov    edi,edi
 10137e4:	dec    edx
 10137e5:	je     0x1013772
 10137e7:	dec    DWORD PTR [eax+0x71]
 10137ea:	mov    edi,edi
 10137ec:	dec    ecx
 10137ed:	jb     0x1013779
 10137ef:	dec    DWORD PTR [edx+0x72]
 10137f2:	mov    edi,edi
 10137f4:	dec    ebx
 10137f5:	jae    0x1013782
 10137f7:	dec    DWORD PTR [edx+esi*2-0x76]
 10137fb:	dec    DWORD PTR [esi+0x74]
 10137fe:	mov    bh,bh
 1013800:	dec    esi
 1013801:	jae    0x101378e
 1013803:	dec    DWORD PTR [edi+0x72]
 1013806:	mov    edi,edi
 1013808:	dec    ebp
 1013809:	jno    0x1013795
 101380b:	dec    DWORD PTR [ebp+0x71]
 101380e:	mov    bh,bh
 1013810:	dec    esp
 1013811:	outs   dx,DWORD PTR ds:[esi]
 1013812:	xchg   edi,edi
 1013814:	dec    ecx
 1013815:	ins    DWORD PTR es:[edi],dx
 1013816:	test   bh,bh
 1013818:	dec    ecx
 1013819:	imul   eax,DWORD PTR [ebx-0x7c96b501],0xffffffff
 1013820:	sbb    BYTE PTR [edi+0x684affc2],cl
 1013826:	cmp    edi,0x10
 1013829:	jle    0x10137d8
 101382b:	(bad)  
 101382c:	ds pop ebp
 101382e:	jns    0x101382f
	...
 1013838:	add    BYTE PTR [eax],al
 101383a:	add    BYTE PTR [ecx],al
 101383c:	add    BYTE PTR [eax+0x60],al
 101383f:	or     BYTE PTR [esi-0x7c],dl
 1013842:	fwait
 1013843:	(bad)  
 1013844:	mov    edx,0xccffe6dd
 1013849:	out    0xed,al
 101384b:	dec    ecx
 101384d:	in     al,0xec
 101384f:	inc    esi
 1013851:	loop   0x101383e
 1013853:	inc    ebx
 1013855:	loope  0x1013841
 1013857:	(bad)  
 1013858:	mov    edi,0xb9ffe8df
 101385d:	fsubr  st(6),st
 101385f:	push   DWORD PTR [edx-0x62001a27]
 1013865:	into   
 1013866:	fdivp  st(7),st
 1013868:	xchg   ebp,eax
 1013869:	retf   
 101386a:	fdiv   st(7),st
 101386c:	pop    edi
 101386e:	(bad)  
 1013870:	xchg   esp,eax
 1013872:	xlat   BYTE PTR ds:[ebx]
 1013873:	inc    DWORD PTR [ecx+0x7effd6c0]
 1013879:	mov    edi,0xbe7bffd6
 101387e:	aad    0xff
 1013880:	jns    0x101383f
 1013882:	aam    0xff
 1013884:	jae    0x1013840
 1013886:	sar    bh,cl
 1013888:	jno    0x1013843
 101388a:	sar    bh,cl
 101388c:	jo     0x1013847
 101388e:	sar    bh,cl
 1013890:	ins    DWORD PTR es:[edi],dx
 1013891:	mov    eax,0xb86bffd2
 1013896:	aad    0xff
 1013898:	mov    eax,ds:0x6e4dffc3
 101389e:	xchg   bh,bh
 10138a0:	dec    ebp
 10138a1:	outs   dx,BYTE PTR ds:[esi]
 10138a2:	xchg   bh,bh
 10138a4:	sbb    BYTE PTR [edx+0x6649ffae],al
 10138aa:	cmp    bh,0x39
 10138ad:	push   edx
 10138ae:	inc    DWORD PTR [bx+si]
	...
 10138bd:	xor    esp,DWORD PTR [esi+0x5]
 10138c0:	add    BYTE PTR [ebx+0x5e],al
 10138c3:	adc    edx,DWORD PTR [ecx-0x7f]
 10138c6:	cwde   
 10138c7:	(bad)  
 10138c8:	mov    ebp,0xd4ffe7de
 10138cd:	in     eax,dx
 10138ce:	repz call eax
 10138d1:	jmp    0xfff1:0xeacdfff2
 10138d8:	enter  0xf1e8,0xff
 10138dc:	ret    0xf0e5
 10138df:	(bad)  
 10138e0:	mov    ebp,0xb6ffeee2
 10138e5:	loopne 0x10138d4
 10138e7:	jmp    DWORD PTR [eax-0x6600182a]
 10138ed:	aam    0xe6
 10138ef:	call   DWORD PTR [edx-0x74001a30]
 10138f5:	int    0xe3
 10138f7:	inc    DWORD PTR [edi-0x79001c33]
 10138fd:	int3   
 10138fe:	jecxz  0x10138ff
 1013900:	or     ebx,0xffffffe2
 1013903:	(bad)  
 1013904:	jle    0x10138ce
 1013906:	loope  0x1013907
 1013908:	jnp    0x10138d2
 101390a:	loope  0x101390b
 101390c:	jns    0x10138d4
 101390e:	loope  0x101390f
 1013910:	js     0x10138d7
 1013912:	loope  0x1013913
 1013914:	jae    0x10138db
 1013916:	loope  0x1013917
 1013918:	push   0x38ffdbbd
 101391d:	test   al,0xd0
 101391f:	call   DWORD PTR [edx+0x70]
 1013922:	mov    edi,edi
 1013924:	sbb    edx,DWORD PTR [eax+0x6749ffc2]
 101392a:	cmp    bh,0x3e
 101392d:	push   esi
 101392e:	push   0xffffffff
	...
 101393c:	add    BYTE PTR [eax],al
 101393e:	add    BYTE PTR [ecx],al
 1013940:	add    BYTE PTR [ebp+0x6d],ch
 1013943:	pop    es
 1013944:	pop    ecx
 1013945:	nop
 1013946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1013947:	(bad)  
 1013948:	mov    esi,0xd7ffe2dd
 101394d:	cmc    
 101394e:	stc    
 101394f:	call   ebx
 1013951:	repz clc 
 1013953:	dec    edi
 1013955:	repnz idiv edi
 1013958:	retf   0xf7f1
 101395b:	inc    esp
 101395d:	out    dx,eax
 101395e:	idiv   bh
 1013960:	mov    ebp,0xb7fff6ed
 1013965:	jmp    0x101395c
 1013967:	push   DWORD PTR [ecx-0x64000b16]
 101396d:	in     al,0xf2
 101396f:	call   DWORD PTR [ecx+eiz*8-0x21730010]
 1013976:	lock dec DWORD PTR [ecx-0x77001022]
 101397d:	fucomp st(7)
 101397f:	inc    DWORD PTR [esi-0x7f001024]
 1013985:	(bad)  
 1013987:	(bad)  
 1013988:	jg     0x1013964
 101398a:	out    dx,al
 101398b:	(bad)  
 101398c:	jge    0x1013967
 101398e:	out    dx,al
 101398f:	(bad)  
 1013990:	jp     0x101396a
 1013992:	out    dx,al
 1013993:	push   DWORD PTR [ebp-0x29]
 1013996:	out    dx,al
 1013997:	push   DWORD PTR [ecx-0x2a]
 101399a:	out    dx,al
 101399b:	inc    DWORD PTR [edx-0x4b]
 101399e:	(bad)  
 10139a0:	data16 mov BYTE PTR [esi-0x6e86ad01],bl
 10139a7:	dec    DWORD PTR [ecx+ebp*2-0x7d]
 10139ab:	inc    DWORD PTR [eax+0x58]
 10139ae:	ins    BYTE PTR es:[edi],dx
 10139af:	inc    DWORD PTR [eax]
	...
 10139c1:	stos   BYTE PTR es:[edi],al
 10139c2:	stos   BYTE PTR es:[edi],al
 10139c3:	add    edx,DWORD PTR [esi-0x64]
 10139c6:	mov    al,0xff
 10139c8:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
 10139ca:	mov    dl,0xff
 10139cc:	vpsubw ymm7,ymm1,ymm7
 10139d0:	shl    ebx,0xf8
 10139d3:	(bad)  
 10139d4:	mov    ecx,0xb2fff7f2
 10139d9:	icebp  
 10139da:	idiv   bh
 10139dc:	stos   BYTE PTR es:[edi],al
 10139dd:	out    dx,al
 10139de:	cmc    
 10139df:	jmp    DWORD PTR [eax-0x5e000b14]
 10139e5:	xchg   ebp,eax
 10139e6:	mov    edi,edi
 10139e8:	mov    bh,0x97
 10139ea:	xchg   bh,bh
 10139ec:	mov    bh,0x97
 10139ee:	xchg   bh,bh
 10139f0:	mov    bh,0x97
 10139f2:	xchg   bh,bh
 10139f4:	mov    eax,0xbaff8798
 10139f9:	xchg   esi,eax
 10139fa:	mov    edi,edi
 10139fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10139fd:	mov    BYTE PTR [eax-0x1],bh
 1013a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1013a01:	mov    BYTE PTR [eax-0x1],bh
 1013a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1013a05:	mov    BYTE PTR [eax-0x1],bh
 1013a08:	push   eax
 1013a09:	(bad)  
 1013a0b:	call   DWORD PTR [eax-0x26]
 1013a0e:	in     al,dx
 1013a0f:	dec    DWORD PTR [ebx-0x28]
 1013a12:	jmp    0x1013a13
 1013a14:	inc    edi
 1013a15:	fsubr  st,st(3)
 1013a17:	inc    DWORD PTR [ecx-0x2c]
 1013a1a:	jmp    0x62ff:0xe6cb3eff
 1013a21:	xchg   edx,eax
 1013a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1013a23:	call   DWORD PTR [eax+0x71]
 1013a26:	mov    edi,edi
 1013a28:	push   edi
 1013a29:	ja     0x10139ba
 1013a2b:	inc    DWORD PTR [ecx+0x5a]
 1013a2e:	ins    DWORD PTR es:[edi],dx
 1013a2f:	inc    DWORD PTR [eax]
	...
 1013a41:	add    BYTE PTR [eax-0x3a51fffe],0x16
 1013a48:	inc    edx
 1013a49:	mov    ebx,DWORD PTR [ebp-0x171e5401]
 1013a4f:	jmp    FWORD PTR [eax-0x5d001a23]
 1013a55:	(bad)  
 1013a57:	call   FWORD PTR [ebx-0x6a001f29]
 1013a5d:	aam    0xde
 1013a5f:	dec    DWORD PTR [edx-0x54002431]
 1013a65:	mov    eax,ds:0xffffff98
 1013a6a:	cld    
 1013a6b:	(bad)  
 1013a6c:	jmp    eax
 1013a6e:	aam    0xff
 1013a70:	jmp    esi
 1013a72:	xlat   BYTE PTR ds:[ebx]
 1013a73:	(bad)  
 1013a74:	jmp    esi
 1013a76:	(bad)  
 1013a78:	jmp    esp
 1013a7a:	fdivp  st(7),st
 1013a7c:	(bad)  
 1013a7d:	fistp  DWORD PTR [edi-0x1]
 1013a80:	out    0xe6,al
 1013a82:	mov    ch,0xff
 1013a84:	rcr    DWORD PTR [ebp-0x43a50069],0xcc
 1013a8b:	call   FWORD PTR [ecx-0x44]
 1013a8e:	retf   
 1013a8f:	call   DWORD PTR [esi-0x45]
 1013a92:	retf   
 1013a93:	call   DWORD PTR [edx+edi*4-0x36]
 1013a97:	dec    DWORD PTR [edi-0x48]
 1013a9a:	enter  0x4cff,0xb3
 1013a9e:	(bad)  
 1013aa1:	scas   al,BYTE PTR es:[edi]
 1013aa2:	ret    0x52ff
 1013aa5:	jae    0x1013a31
 1013aa7:	call   FWORD PTR [eax+0x78]
 1013aaa:	nop
 1013aab:	inc    DWORD PTR [ebp+0x5d]
 1013aae:	jo     0x1013aaf
	...
 1013ac4:	add    BYTE PTR [ebp-0x80],dl
 1013ac7:	push   es
 1013ac8:	push   ebp
 1013ac9:	adc    BYTE PTR [edi+edi*8-0x151c44],0xb8
 1013ad1:	fucomip st,st(0)
 1013ad3:	push   DWORD PTR [edx-0x53001b24]
 1013ad9:	(bad)  
 1013adb:	jmp    DWORD PTR [edx-0x6500202b]
 1013ae1:	rcr    ebp,1
 1013ae3:	jmp    FWORD PTR [ecx-0x6760]
 1013ae9:	cld    
 1013aea:	cmc    
 1013aeb:	(bad)  
 1013aec:	(bad)  
 1013aed:	(bad)  
 1013aef:	(bad)  
 1013af0:	stc    
 1013af1:	fst    st(1)
 1013af3:	push   esi
 1013af5:	(bad)  
 1013af6:	int    0xff
 1013af8:	(bad)  
 1013af9:	(bad)  
 1013afb:	inc    DWORD PTR [eax]
 1013afd:	aad    0x0
 1013aff:	jmp    FWORD PTR [edi-0x38008622]
 1013b05:	cdq    
 1013b06:	pushf  
 1013b07:	jmp    DWORD PTR [edx-0x4a]
 1013b0a:	leave  
 1013b0b:	jmp    DWORD PTR [edx-0x4a]
 1013b0e:	leave  
 1013b0f:	jmp    DWORD PTR [eax-0x4b]
 1013b12:	enter  0x5cff,0xb4
 1013b16:	(bad)  
 1013b17:	call   FWORD PTR [eax-0x4e]
 1013b1a:	(bad)  
 1013b1b:	call   DWORD PTR [ebx-0x4f]
 1013b1e:	(bad)  
 1013b21:	mov    cl,0xc7
 1013b23:	call   DWORD PTR [esi+0x75]
 1013b26:	(bad)  
 1013b27:	call   FWORD PTR [ecx+0x79]
 1013b2a:	xchg   ecx,eax
 1013b2b:	inc    DWORD PTR [esi+0x60]
 1013b2e:	jb     0x1013b2f
	...
 1013b44:	add    BYTE PTR [eax],al
 1013b46:	add    BYTE PTR [ecx],al
 1013b48:	pop    ebp
 1013b49:	xchg   BYTE PTR [ecx-0x131c4e01],bl
 1013b4f:	jmp    FWORD PTR [edi-0x5500151f]
 1013b55:	fsubp  st(0),st
 1013b57:	jmp    DWORD PTR [esp+ebx*8-0x2562001a]
 1013b5e:	in     al,0xff
 1013b60:	xchg   esp,eax
 1013b61:	(bad)  
 1013b62:	loop   0x1013b63
 1013b64:	scas   eax,DWORD PTR es:[edi]
 1013b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1013b66:	popf   
 1013b67:	(bad)  
 1013b68:	(bad)  
 1013b69:	push   edi
 1013b6b:	call   esp
 1013b6d:	rcl    cl,cl
 1013b6f:	jmp    DWORD PTR [esi-0x6f002c3c]
 1013b75:	mov    esi,0xae7dffd4
 1013b7a:	iret   
 1013b7b:	inc    ebx
 1013b7d:	mov    edi,0xe7ffffda
 1013b82:	out    0xff,al
 1013b84:	mov    ecx,0x5eff899a
 1013b89:	mov    esi,0xbe5dffd1
 1013b8e:	sar    edi,1
 1013b90:	pop    ebx
 1013b91:	mov    ebp,0xbb57ffd1
 1013b96:	sar    bh,1
 1013b98:	push   ebx
 1013b99:	mov    ecx,0xb84dffce
 1013b9e:	int    0xff
 1013ba0:	inc    esi
 1013ba1:	mov    dh,0xcd
 1013ba3:	call   FWORD PTR [edx+0x79]
 1013ba6:	nop
 1013ba7:	call   FWORD PTR [esp+edi*2-0x6e]
 1013bab:	dec    DWORD PTR [eax+0x60]
 1013bae:	jae    0x1013baf
	...
 1013bc8:	popa   
 1013bc9:	mov    DWORD PTR [ebx-0xe164401],ebx
 1013bcf:	(bad)  
 1013bd0:	mov    eax,0xb3ffefe7
 1013bd5:	in     eax,0xee
 1013bd7:	jmp    FWORD PTR [esi-0x5a00121d]
 1013bdd:	loopne 0x1013bc9
 1013bdf:	call   FWORD PTR [esp+ebx*8-0x574d0019]
 1013be6:	mov    al,ds:0xf6feffff
 1013beb:	dec    DWORD PTR [edx-0x68003449]
 1013bf1:	fcomip st,st(5)
 1013bf3:	jmp    FWORD PTR [edi+0x5afffff0]
 1013bf9:	leave  
 1013bfa:	cmc    
 1013bfb:	call   FWORD PTR [ebx-0x59]
 1013bfe:	sar    edi,1
 1013c00:	fmulp  st(4),st
 1013c02:	int3   
 1013c03:	inc    ecx
 1013c05:	sahf   
 1013c06:	mov    edi,?
 1013c08:	popa   
 1013c09:	(bad)  
 1013c0a:	xlat   BYTE PTR ds:[ebx]
 1013c0b:	call   FWORD PTR [esi-0x3d]
 1013c0e:	xlat   BYTE PTR ds:[ebx]
 1013c0f:	call   FWORD PTR [ebx-0x3f]
 1013c12:	aad    0xff
 1013c14:	push   edi
 1013c15:	rcl    ah,0xff
 1013c18:	push   ebx
 1013c19:	mov    esi,0xbc4dffd3
 1013c1e:	sar    bh,cl
 1013c20:	inc    edi
 1013c21:	mov    ecx,0x7a5cffd0
 1013c26:	xchg   ecx,eax
 1013c27:	call   FWORD PTR [ebp+0x7e]
 1013c2a:	xchg   ebp,eax
 1013c2b:	dec    DWORD PTR [ecx+0x61]
 1013c2e:	je     0x1013c2f
	...
 1013c48:	bound  ecx,QWORD PTR [edi+ebx*4-0xc133d01]
 1013c4f:	inc    ecx
 1013c51:	jmp    0x1013c45
 1013c53:	(bad)  
 1013c54:	mov    ebx,0xb4fff0e9
 1013c59:	out    0xee,al
 1013c5b:	jmp    FWORD PTR [ebp-0x5b00121e]
 1013c61:	loopne 0x1013c4e
 1013c63:	push   DWORD PTR [ebp-0x5c56]
 1013c69:	push   esp
 1013c6b:	call   DWORD PTR [eax-0x5f003247]
 1013c71:	in     eax,dx
 1013c72:	(bad)  
 1013c73:	push   DWORD PTR [ebx+0x5cfffdf1]
 1013c79:	int    0xf8
 1013c7b:	call   FWORD PTR [edx-0x4f]
 1013c7e:	(bad)  
 1013c80:	loope  0x1013c4d
 1013c82:	enter  0xc1ff,0x9f
 1013c86:	mov    edi,?
 1013c88:	popa   
 1013c89:	(bad)  
 1013c8a:	fdivr  st,st(7)
 1013c8c:	pop    esi
 1013c8d:	ret    0xffd7
 1013c90:	pop    ebx
 1013c91:	rcl    esi,0xff
 1013c94:	push   ebp
 1013c95:	mov    edi,0xbd50ffd5
 1013c9a:	sar    edi,cl
 1013c9c:	dec    ebx
 1013c9d:	mov    ebx,0xb946ffd2
 1013ca2:	sar    edi,1
 1013ca4:	pop    esp
 1013ca5:	jp     0x1013c39
 1013ca7:	call   FWORD PTR [esi+edi*2-0x6b]
 1013cab:	dec    DWORD PTR [ecx+0x62]
 1013cae:	jne    0x1013caf
	...
 1013cc8:	mov    fs,WORD PTR fs:[ecx-0xa103501]
 1013ccf:	inc    edi
 1013cd1:	out    dx,al
 1013cd2:	hlt    
 1013cd3:	inc    edx
 1013cd5:	jmp    0x1013cc9
 1013cd7:	(bad)  
 1013cd8:	mov    edx,0xb3fff0e9
 1013cdd:	out    0xef,al
 1013cdf:	jmp    FWORD PTR [ebx-0x4500121d]
 1013ce5:	mov    dl,0xa9
 1013ce7:	(bad)  
 1013ce8:	(bad)  
 1013ce9:	(bad)  
 1013cea:	cli    
 1013ceb:	call   DWORD PTR [ebp-0x5f002c3f]
 1013cf1:	jmp    0xeeb73cf5
 1013cf6:	cli    
 1013cf7:	call   FWORD PTR [esi-0x37]
 1013cfa:	cmc    
 1013cfb:	jmp    DWORD PTR [eax-0x4d]
 1013cfe:	fcos   
 1013d00:	in     al,0xd0
 1013d02:	retf   
 1013d03:	inc    ecx
 1013d05:	fwait
 1013d06:	test   edi,edi
 1013d08:	pusha  
 1013d09:	(bad)
 1013d0c:	pop    ebp
 1013d0d:	ret    
 1013d0e:	fdivr  st,st(7)
 1013d10:	pop    edx
 1013d11:	rcl    esi,0xff
 1013d14:	push   ebp
 1013d15:	rcl    ch,0xff
 1013d18:	dec    esi
 1013d19:	mov    ebp,0xba48ffd3
 1013d1e:	sar    edi,1
 1013d20:	inc    edx
 1013d21:	mov    eax,0x7c5bffd0
 1013d26:	xchg   ebx,eax
 1013d27:	call   FWORD PTR [esi+0x7f]
 1013d2a:	xchg   edi,eax
 1013d2b:	dec    DWORD PTR [ecx+0x63]
 1013d2e:	jne    0x1013d2f
	...
 1013d48:	gs xchg ecx,eax
 1013d4a:	mov    ds:0xf7f1d1ff,eax
 1013d4f:	dec    esp
 1013d51:	lock cmc 
 1013d53:	dec    eax
 1013d55:	out    dx,al
 1013d56:	hlt    
 1013d57:	inc    edx
 1013d59:	in     al,dx
 1013d5a:	repz (bad) 
 1013d5c:	mov    edx,0xb1fff1e9
 1013d61:	out    0xef,al
 1013d63:	inc    eax
 1013d65:	mov    bh,0xaf
 1013d67:	(bad)  
 1013d68:	(bad)  
 1013d69:	(bad)  
 1013d6a:	(bad)  
 1013d6b:	call   FWORD PTR [eax-0x6000293c]
 1013d71:	call   0xefb53d74
 1013d76:	cli    
 1013d77:	call   FWORD PTR [ebx-0x36]
 1013d7a:	repz call FWORD PTR [esi-0x4e]
 1013d7e:	xlat   BYTE PTR ds:[ebx]
 1013d7f:	(bad)  
 1013d80:	in     eax,dx
 1013d81:	loope  0x1013d63
 1013d83:	inc    ecx
 1013d85:	lahf   
 1013d86:	mov    edi,?
 1013d88:	pop    edi
 1013d89:	(bad)
 1013d8c:	pop    ebp
 1013d8d:	ret    
 1013d8e:	fdivr  st,st(7)
 1013d90:	pop    ecx
 1013d91:	ret    0xffd6
 1013d94:	push   esp
 1013d95:	mov    edi,0xbd4dffd5
 1013d9a:	sar    edi,cl
 1013d9c:	inc    esi
 1013d9d:	mov    edx,0xb73fffd2
 1013da2:	iret   
 1013da3:	call   FWORD PTR [edx+0x7b]
 1013da6:	xchg   edx,eax
 1013da7:	call   FWORD PTR [esi-0x7f]
 1013daa:	xchg   edi,eax
 1013dab:	dec    DWORD PTR [eax+0x63]
 1013dae:	jne    0x1013daf
	...
 1013dc8:	addr16 xchg edx,eax
 1013dca:	mov    ds:0xf8f3d6ff,eax
 1013dcf:	call   edx
 1013dd1:	repnz idiv edi
 1013dd4:	into   
 1013dd5:	lock idiv bh
 1013dd8:	enter  0xf5ef,0xff
 1013ddc:	shr    esp,0xf3
 1013ddf:	(bad)  
 1013de0:	mov    eax,0xbbfff0e8
 1013de5:	mov    cl,0xa9
 1013de7:	(bad)  
 1013de8:	push   edx
 1013dea:	in     eax,dx
 1013deb:	call   FWORD PTR [eax-0x6500273b]
 1013df1:	out    0xfe,eax
 1013df3:	push   DWORD PTR [ecx+0x59fffaed]
 1013df9:	(bad)  
 1013dfa:	repz call FWORD PTR [ebx-0x4d]
 1013dfe:	fdiv   st(7),st
 1013e00:	ror    ebx,cl
 1013e02:	leave  
 1013e03:	inc    ecx
 1013e05:	lahf   
 1013e06:	mov    edi,?
 1013e08:	pop    edi
 1013e09:	(bad)  
 1013e0a:	fcos   
 1013e0c:	pop    esp
 1013e0d:	(bad)  
 1013e0e:	fdivr  st,st(7)
 1013e10:	pop    eax
 1013e11:	ret    0xffd7
 1013e14:	push   ecx
 1013e15:	mov    edi,0xbd4cffd5
 1013e1a:	aam    0xff
 1013e1c:	inc    esi
 1013e1d:	mov    edx,0xb740ffd2
 1013e22:	sar    bh,1
 1013e24:	pop    edx
 1013e25:	jnp    0x1013dba
 1013e27:	call   FWORD PTR [esi-0x7f]
 1013e2a:	cwde   
 1013e2b:	inc    DWORD PTR [edi+0x63]
 1013e2e:	jbe    0x1013e2f
	...
 1013e48:	imul   edx,DWORD PTR [ebp+eiz*4-0x70a2401],0xf8f4d8ff
 1013e53:	call   ebx
 1013e55:	repz clc 
 1013e57:	dec    ebp
 1013e59:	lock idiv bh
 1013e5c:	(bad)  
 1013e5d:	out    dx,al
 1013e5e:	hlt    
 1013e5f:	(bad)  
 1013e60:	mov    edi,0xb4fff3eb
 1013e65:	test   eax,0xcfdcffa1
 1013e6a:	enter  0xa6ff,0xcd
 1013e6e:	(bad)  
 1013e70:	sar    edi,1
 1013e72:	(bad)  
 1013e73:	jmp    esi
 1013e75:	(bad)  
 1013e76:	(bad)  
 1013e77:	call   ecx
 1013e79:	(bad)  
 1013e7a:	(bad)  
 1013e7b:	jmp    DWORD PTR [ecx-0x65000c24]
 1013e81:	nop
 1013e82:	mov    edi,edi
 1013e84:	lea    esi,[ecx+0x5c]
 1013e87:	jmp    DWORD PTR [eax-0x3a]
 1013e8a:	(bad)  
 1013e8c:	pop    ebx
 1013e8d:	(bad)
 1013e90:	push   edi
 1013e91:	ret    
 1013e92:	xlat   BYTE PTR ds:[ebx]
 1013e93:	call   DWORD PTR [edx-0x41]
 1013e96:	(bad)  
 1013e97:	dec    DWORD PTR [ebp+edi*4-0x2d]
 1013e9b:	inc    DWORD PTR [ebp-0x46]
 1013e9e:	sar    bh,cl
 1013ea0:	inc    ecx
 1013ea1:	mov    ecx,0x7b5affd0
 1013ea6:	xchg   ebx,eax
 1013ea7:	call   FWORD PTR [esi-0x7e]
 1013eaa:	cwde   
 1013eab:	inc    DWORD PTR [edi+0x63]
 1013eae:	jbe    0x1013eaf
	...
 1013ec8:	push   0xffffff96
 1013eca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1013ecb:	(bad)  
 1013ecc:	fdivrp st(6),st
 1013ece:	stc    
 1013ecf:	(bad)  
 1013ed0:	fdivr  st(5),st
 1013ed2:	clc    
 1013ed3:	(bad)  
 1013ed4:	fdiv   st,st(5)
 1013ed6:	clc    
 1013ed7:	call   edx
 1013ed9:	repz idiv edi
 1013edc:	int3   
 1013edd:	lock cmc 
 1013edf:	inc    ebx
 1013ee1:	out    dx,al
 1013ee2:	repz dec eax
 1013ee5:	sar    BYTE PTR [edx-0x1],0xff
 1013eec:	rcr    dl,0xe2
 1013eef:	inc    edi
 1013ef1:	out    0xed,al
 1013ef3:	call   eax
 1013ef5:	icebp  
 1013ef6:	idiv   bh
 1013ef8:	int    0xed
 1013efa:	icebp  
 1013efb:	push   DWORD PTR [edx+edx*8-0xf0c0024]
 1013f02:	out    dx,eax
 1013f03:	inc    ecx
 1013f05:	lahf   
 1013f06:	mov    edi,?
 1013f08:	popa   
 1013f09:	enter  0xffda,0x5c
 1013f0d:	(bad)  
 1013f0e:	(bad)  
 1013f10:	push   edi
 1013f11:	ret    
 1013f12:	xlat   BYTE PTR ds:[ebx]
 1013f13:	call   DWORD PTR [ecx-0x40]
 1013f16:	(bad)  
 1013f17:	dec    DWORD PTR [edi+edi*4-0x2b]
 1013f1b:	inc    DWORD PTR [esi-0x44]
 1013f1e:	sar    bh,cl
 1013f20:	inc    edx
 1013f21:	mov    ecx,0x7b58ffd1
 1013f26:	xchg   esp,eax
 1013f27:	call   FWORD PTR [edx+eax*4-0x66]
 1013f2b:	inc    DWORD PTR [edi+0x63]
 1013f2e:	jbe    0x1013f2f
	...
 1013f48:	ins    BYTE PTR es:[edi],dx
 1013f49:	cwde   
 1013f4a:	test   eax,0xfbf8e1ff
 1013f4f:	(bad)  
 1013f50:	fcomip st,st(6)
 1013f52:	cli    
 1013f53:	(bad)  
 1013f54:	(bad)  
 1013f56:	stc    
 1013f57:	call   esi
 1013f59:	hlt    
 1013f5a:	clc    
 1013f5b:	call   ecx
 1013f5d:	repnz idiv edi
 1013f60:	leave  
 1013f61:	out    dx,eax
 1013f62:	cmc    
 1013f63:	dec    eax
 1013f65:	sar    DWORD PTR [edx-0x1],0xff
 1013f6c:	std    
 1013f6d:	div    ebx
 1013f6f:	(bad)  
 1013f70:	fsubp  st(0),st
 1013f72:	in     al,dx
 1013f73:	inc    esi
 1013f75:	aad    0xdc
 1013f77:	dec    ebp
 1013f79:	xlat   BYTE PTR ds:[ebx]
 1013f7a:	(bad)  
 1013f7c:	lock jmp 0xfff1:0xf8ffffe9
 1013f84:	rcr    DWORD PTR [edi-0x369c0074],0xdc
 1013f8b:	call   FWORD PTR [esi-0x38]
 1013f8e:	(bad)  
 1013f90:	pop    edx
 1013f91:	(bad)
 1013f94:	push   esp
 1013f95:	ret    0xffd7
 1013f98:	dec    esi
 1013f99:	rcl    dh,0xff
 1013f9c:	dec    eax
 1013f9d:	mov    ebp,0xba42ffd4
 1013fa2:	sar    bh,cl
 1013fa4:	push   edi
 1013fa5:	jnp    0x1013f3b
 1013fa7:	call   FWORD PTR [ebp-0x7d]
 1013faa:	call   0xff:0x786548ff
	...
 1013fc5:	add    BYTE PTR [eax],al
 1013fc7:	add    BYTE PTR [esi-0x66],ch
 1013fca:	stos   BYTE PTR es:[edi],al
 1013fcb:	jmp    esp
 1013fcd:	clc    
 1013fce:	sti    
 1013fcf:	jmp    edx
 1013fd1:	clc    
 1013fd2:	cli    
 1013fd3:	(bad)  
 1013fd4:	fdivrp st(6),st
 1013fd6:	cli    
 1013fd7:	(bad)  
 1013fd8:	(bad)  
 1013fda:	stc    
 1013fdb:	call   esp
 1013fdd:	repz clc 
 1013fdf:	dec    ebp
 1013fe1:	icebp  
 1013fe2:	idiv   bh
 1013fe4:	enter  0xbcc1,0xff
 1013fe8:	(bad)  
 1013fe9:	(bad)  
 1013fea:	(bad)  
 1013feb:	(bad)  
 1013fec:	(bad)  
 1013fed:	std    
 1013fee:	sti    
 1013fef:	(bad)  
 1013ff0:	(bad)  
 1013ff1:	std    
 1013ff2:	sti    
 1013ff3:	(bad)  
 1013ff4:	(bad)  
 1013ff5:	(bad)  
 1013ff6:	cld    
 1013ff7:	(bad)  
 1013ff8:	(bad)  
 1013ff9:	cld    
 1013ffa:	stc    
 1013ffb:	(bad)  
 1013ffc:	(bad)  
 1013ffd:	clc    
 1013ffe:	idiv   bh
 1014000:	std    
 1014001:	sti    
 1014002:	stc    
 1014003:	inc    ecx
 1014005:	lahf   
 1014006:	mov    edi,?
 1014008:	gs int3 
 101400a:	fdivp  st(7),st
 101400c:	popa   
 101400d:	leave  
 101400e:	fdiv   st(7),st
 1014010:	pop    esp
 1014011:	(bad)  
 1014012:	(bad)  
 1014014:	push   ebp
 1014015:	(bad)  
 1014016:	fcos   
 1014018:	push   ecx
 1014019:	rcl    edi,0xff
 101401c:	dec    ebx
 101401d:	rcl    ch,0xff
 1014020:	inc    esi
 1014021:	mov    ebp,0x7c57ffd3
 1014026:	xchg   ebp,eax
 1014027:	call   FWORD PTR [esi-0x7b]
 101402a:	pushf  
 101402b:	inc    DWORD PTR [edi+0x65]
 101402e:	js     0x101402f
	...
 1014048:	outs   dx,BYTE PTR ds:[esi]
 1014049:	fwait
 101404a:	lods   al,BYTE PTR ds:[esi]
 101404b:	jmp    esp
 101404d:	cli    
 101404e:	cld    
 101404f:	jmp    edx
 1014051:	clc    
 1014052:	cld    
 1014053:	jmp    eax
 1014055:	clc    
 1014056:	sti    
 1014057:	(bad)  
 1014058:	(bad)  
 101405a:	cli    
 101405b:	call   edi
 101405d:	hlt    
 101405e:	stc    
 101405f:	call   ecx
 1014061:	repz clc 
 1014063:	push   DWORD PTR [edi-0x3700564f]
 1014069:	ret    
 101406a:	mov    esi,0xb1b8beff
 101406f:	(bad)  
 1014070:	mov    ecx,0xaeffa9b0
 1014075:	mov    ds:0x8a9aff9c,eax
 101407a:	jg     0x101407b
 101407c:	xchg   edx,eax
 101407d:	xor    DWORD PTR [edx-0x1],0xff6d7b8b
 1014084:	xchg   edx,eax
 1014085:	test   DWORD PTR [ecx-0x1],edi
 1014088:	imul   ecx,ebp,0xcb64ffdf
 101408e:	(bad)  
 1014090:	pop    edi
 1014091:	enter  0xffdc,0x5a
 1014095:	(bad)  
 1014096:	(bad)  
 1014098:	push   ebp
 1014099:	(bad)  
 101409a:	fdivr  st,st(7)
 101409c:	dec    edi
 101409d:	ret    0xffd7
 10140a0:	dec    edx
 10140a1:	mov    edi,0x7d58ffd5
 10140a6:	xchg   ebp,eax
 10140a7:	call   FWORD PTR [esi-0x7a]
 10140aa:	pushf  
 10140ab:	dec    DWORD PTR [eax+0x66]
 10140ae:	jns    0x10140af
	...
 10140c8:	outs   dx,DWORD PTR ds:[esi]
 10140c9:	pushf  
 10140ca:	lods   eax,DWORD PTR ds:[esi]
 10140cb:	jmp    esi
 10140cd:	cli    
 10140ce:	cld    
 10140cf:	jmp    esp
 10140d1:	stc    
 10140d2:	cld    
 10140d3:	jmp    ecx
 10140d5:	clc    
 10140d6:	sti    
 10140d7:	(bad)  
 10140d8:	(bad)  
 10140da:	cli    
 10140db:	(bad)  
 10140dc:	fprem1 
 10140de:	stc    
 10140df:	call   ebx
 10140e1:	repz clc 
 10140e3:	dec    ebp
 10140e5:	enter  0xffc2,0xff
 10140e9:	(bad)  
 10140ea:	(bad)  
 10140eb:	(bad)  
 10140ec:	(bad)  
 10140ed:	(bad)  
 10140ee:	std    
 10140ef:	(bad)  
 10140f0:	(bad)  
 10140f1:	(bad)  
 10140f2:	cld    
 10140f3:	(bad)  
 10140f4:	(bad)  
 10140f5:	cld    
 10140f6:	sti    
 10140f7:	(bad)  
 10140f8:	(bad)  
 10140f9:	cli    
 10140fa:	cmc    
 10140fb:	(bad)  
 10140fc:	(bad)  
 10140fd:	clc    
 10140fe:	repz (bad) 
 1014100:	(bad)  
 1014101:	cld    
 1014102:	idiv   bh
 1014104:	rcr    DWORD PTR [edi-0x2f910074],0xe1
 101410b:	jmp    FWORD PTR [eax-0x33]
 101410e:	(bad)  
 1014110:	fs retf 
 1014112:	fdivp  st(7),st
 1014114:	pop    esi
 1014115:	leave  
 1014116:	fdiv   st(7),st
 1014118:	pop    edx
 1014119:	(bad)  
 101411a:	(bad)  
 101411c:	push   ebp
 101411d:	(bad)
 1014120:	dec    edi
 1014121:	ret    0xffd7
 1014124:	push   edi
 1014125:	jg     0x10140be
 1014127:	call   FWORD PTR [edi-0x79]
 101412a:	lahf   
 101412b:	inc    DWORD PTR [edi+0x67]
 101412e:	jns    0x101412f
	...
 1014148:	jo     0x10140e8
 101414a:	lods   eax,DWORD PTR ds:[esi]
 101414b:	jmp    esi
 101414d:	cli    
 101414e:	std    
 101414f:	jmp    esp
 1014151:	cli    
 1014152:	cld    
 1014153:	jmp    ecx
 1014155:	stc    
 1014156:	cld    
 1014157:	(bad)  
 1014158:	fdivp  st(0),st
 101415a:	sti    
 101415b:	(bad)  
 101415c:	fincstp 
 101415e:	cli    
 101415f:	call   esp
 1014161:	idiv   cl
 1014163:	call   ebp
 1014165:	ror    ah,1
 1014167:	(bad)  
 1014168:	(bad)  
 1014169:	(bad)  
 101416a:	(bad)  
 101416b:	(bad)  
 101416c:	(bad)  
 101416d:	(bad)  
 101416e:	(bad)  
 101416f:	(bad)  
 1014170:	(bad)  
 1014171:	(bad)  
 1014172:	(bad)  
 1014173:	(bad)  
 1014174:	(bad)  
 1014175:	(bad)  
 1014176:	(bad)  
 1014177:	(bad)  
 1014178:	(bad)  
 1014179:	(bad)  
 101417a:	(bad)  
 101417b:	(bad)  
 101417c:	(bad)  
 101417d:	(bad)  
 101417e:	(bad)  
 101417f:	(bad)  
 1014180:	(bad)  
 1014181:	(bad)  
 1014182:	(bad)  
 1014183:	inc    ecx
 1014185:	lahf   
 1014186:	mov    edi,?
 1014188:	jae    0x101415e
 101418a:	jecxz  0x101418b
 101418c:	outs   dx,BYTE PTR ds:[esi]
 101418d:	shl    edx,1
 101418f:	jmp    FWORD PTR [ecx-0x31]
 1014192:	loopne 0x1014193
 1014194:	fs int3 
 1014196:	fdivp  st(7),st
 1014198:	pop    edi
 1014199:	leave  
 101419a:	(bad)  
 101419c:	pop    ecx
 101419d:	(bad)  
 101419e:	(bad)  
 10141a0:	push   ebp
 10141a1:	(bad)
 10141a4:	pop    ecx
 10141a5:	sbb    DWORD PTR [eax-0x5f759e01],0x7b6949ff
 10141af:	inc    DWORD PTR [eax]
	...
 10141c5:	add    BYTE PTR [eax],al
 10141c7:	add    BYTE PTR [ecx-0x62],dh
 10141ca:	scas   eax,DWORD PTR es:[edi]
 10141cb:	jmp    esp
 10141cd:	cli    
 10141ce:	std    
 10141cf:	jmp    ebx
 10141d1:	cli    
 10141d2:	std    
 10141d3:	jmp    ecx
 10141d5:	stc    
 10141d6:	cld    
 10141d7:	(bad)  
 10141d8:	fdivp  st(0),st
 10141da:	cld    
 10141db:	(bad)  
 10141dc:	(bad)  
 10141de:	sti    
 10141df:	call   esi
 10141e1:	idiv   dl
 10141e3:	inc    ebx
 10141e5:	mov    ebp,0xcfd3ffb8
 10141ea:	leave  
 10141eb:	dec    edi
 10141ed:	retf   
 10141ee:	(bad)  
 10141ef:	dec    esi
 10141f1:	enter  0xffc4,0xce
 10141f5:	leave  
 10141f6:	ret    
 10141f7:	dec    edx
 10141f9:	mov    cl,0xff
 10141fc:	retf   0xc0c5
 10141ff:	dec    ebx
 1014201:	(bad)
 1014204:	rcr    DWORD PTR [edi-0x28850074],0xe6
 101420b:	push   DWORD PTR [esp+edx*8-0x1c]
 101420f:	jmp    FWORD PTR [edi-0x2f]
 1014212:	loop   0x1014213
 1014214:	push   0xffffffcf
 1014216:	loopne 0x1014217
 1014218:	gs int 0xdf
 101421b:	jmp    DWORD PTR [eax-0x35]
 101421e:	(bad)  
 1014220:	pop    ebx
 1014221:	leave  
 1014222:	(bad)  
 1014224:	pop    edx
 1014225:	sbb    DWORD PTR [ebx-0x5d739d01],0xffffffff
 101422c:	dec    edx
 101422d:	push   0x7c
 101422f:	inc    DWORD PTR [eax]
	...
 1014245:	add    BYTE PTR [eax],al
 1014247:	add    BYTE PTR [edx-0x60],dh
 101424a:	mov    al,0xff
 101424c:	loope  0x1014248
 101424e:	cld    
 101424f:	jmp    ecx
 1014251:	cli    
 1014252:	cld    
 1014253:	jmp    eax
 1014255:	cli    
 1014256:	cld    
 1014257:	(bad)  
 1014258:	fdivp  st(1),st
 101425a:	cld    
 101425b:	(bad)  
 101425c:	(bad)  
 101425e:	sti    
 101425f:	call   esi
 1014261:	idiv   edx
 1014263:	call   eax
 1014265:	cmc    
 1014266:	stc    
 1014267:	dec    edx
 1014269:	hlt    
 101426a:	clc    
 101426b:	inc    ebx
 101426d:	icebp  
 101426e:	idiv   bh
 1014270:	mov    ebx,0xb2fff5ef
 1014275:	in     al,dx
 1014276:	repz jmp FWORD PTR [edx-0x5e000e17]
 101427d:	out    0xef,al
 101427f:	call   FWORD PTR [eax-0x6e00111d]
 1014285:	loope  0x1014272
 1014287:	(bad)  
 1014288:	jg     0x1014264
 101428a:	out    0xff,eax
 101428c:	jp     0x1014265
 101428e:	out    0xff,al
 1014290:	jbe    0x1014267
 1014292:	in     al,0xff
 1014294:	jno    0x101426a
 1014296:	jecxz  0x1014297
 1014298:	ins    DWORD PTR es:[edi],dx
 1014299:	shl    eax,1
 101429b:	jmp    DWORD PTR [edi-0x33]
 101429e:	(bad)  
 10142a0:	(bad)  
 10142a1:	retf   
 10142a2:	(bad)  
 10142a4:	pop    esp
 10142a5:	test   DWORD PTR [ebp-0x5b719b01],ebx
 10142ab:	dec    DWORD PTR [ebp+ebp*2+0x7e]
 10142af:	inc    DWORD PTR [eax]
	...
 10142c5:	add    BYTE PTR [eax],al
 10142c7:	add    BYTE PTR [edi-0x4f],bh
 10142ca:	(bad)  
 10142cb:	dec    ebx
 10142cd:	aad    0xd9
 10142cf:	dec    esp
 10142d1:	aam    0xd9
 10142d3:	dec    DWORD PTR [edx-0x75004c5c]
 10142d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10142da:	mov    bl,0xff
 10142dc:	retf   0xd8d3
 10142df:	dec    edx
 10142e1:	aam    0xd8
 10142e3:	inc    DWORD PTR [edi-0x78004d5c]
 10142e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10142ea:	mov    dl,0xff
 10142ec:	enter  0xd7d2,0xff
 10142f0:	enter  0xd7d2,0xff
 10142f4:	xchg   BYTE PTR [ecx+esi*4-0x4d5b7a01],ah
 10142fb:	inc    ebp
 10142fd:	rcl    ch,1
 10142ff:	inc    esi
 1014301:	rcl    ch,1
 1014303:	(bad)  
 1014304:	jg     0x10142a1
 1014306:	stos   DWORD PTR es:[edi],eax
 1014307:	(bad)  
 1014308:	jg     0x10142a6
 101430a:	lods   al,BYTE PTR ds:[esi]
 101430b:	inc    ebp
 101430d:	iret   
 101430e:	aad    0xff
 1014310:	(bad)  
 1014311:	rcl    ch,1
 1014313:	inc    DWORD PTR [ecx-0x7d005161]
 1014319:	mov    al,ds:0xd0c6ffaf
 101431e:	(bad)  
 101431f:	inc    esi
 1014321:	rcl    esi,1
 1014323:	call   FWORD PTR [esp+eax*4-0x64]
 1014327:	jmp    DWORD PTR [esi-0x70]
 101432a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101432b:	dec    DWORD PTR [esi+ebp*2+0x7f]
 101432f:	inc    DWORD PTR [eax]
	...
 1014345:	add    BYTE PTR [eax],al
 1014347:	add    BYTE PTR [edi-0x4e],bh
 101434a:	(bad)  
 101434b:	jmp    FWORD PTR [eax+0x78]
 101434e:	test   bh,bh
 1014350:	push   0xb1ff8478
 1014355:	mov    esp,0xbcb1ffc2
 101435a:	ret    0x64ff
 101435d:	jne    0x10142e0
 101435f:	jmp    DWORD PTR [ebx+0x74]
 1014362:	cmp    bh,0xaf
 1014365:	mov    ebx,0xbbaeffc1
 101436a:	sar    bh,0x5f
 101436d:	jo     0x10143ec
 101436f:	call   FWORD PTR [ebp+0x6f]
 1014372:	jl     0x1014373
 1014374:	stos   DWORD PTR es:[edi],eax
 1014375:	mov    bh,0xbe
 1014377:	jmp    FWORD PTR [ebx+0x5cffbeb7]
 101437d:	outs   dx,BYTE PTR ds:[esi]
 101437e:	jnp    0x101437f
 1014380:	pop    esp
 1014381:	outs   dx,BYTE PTR ds:[esi]
 1014382:	jnp    0x1014383
 1014384:	lods   al,BYTE PTR ds:[esi]
 1014385:	mov    eax,0xb8acffbe
 101438a:	mov    edi,0x7a6d5bff
 101438f:	call   FWORD PTR [ebx+0x6d]
 1014392:	jp     0x1014393
 1014394:	stos   DWORD PTR es:[edi],eax
 1014395:	mov    eax,0xb8abffbe
 101439a:	mov    esi,0x7a6d5bff
 101439f:	call   FWORD PTR [ebx+0x6d]
 10143a2:	jp     0x10143a3
 10143a4:	pop    esp
 10143a5:	test   BYTE PTR [edi+edi*8-0x566c99],bl
 10143ac:	dec    edi
 10143ad:	jo     0x101432f
 10143af:	inc    DWORD PTR [eax]
	...
 10143c5:	add    BYTE PTR [eax],al
 10143c7:	add    BYTE PTR [edi-0x4e],bh
 10143ca:	(bad)  
 10143cb:	call   edi
 10143cd:	loope  0x10143b6
 10143cf:	call   edi
 10143d1:	loope  0x10143ba
 10143d3:	dec    DWORD PTR [esi-0x72004454]
 10143d9:	stos   DWORD PTR es:[edi],eax
 10143da:	mov    esp,0xe7e2d7ff
 10143df:	(bad)  
 10143e0:	fsub   st,st(3)
 10143e2:	out    0xff,eax
 10143e4:	mov    gs,WORD PTR [ebp-0x51710044]
 10143ea:	mov    ebp,0xe7e1d6ff
 10143ef:	call   esi
 10143f1:	loop   0x10143da
 10143f3:	dec    DWORD PTR [ebp-0x72004151]
 10143f9:	scas   eax,DWORD PTR es:[edi]
 10143fa:	mov    edi,0xe5dfd4ff
 10143ff:	call   ebp
 1014401:	(bad)  
 1014403:	inc    DWORD PTR [edi-0x77004759]
 1014409:	test   al,0xb9
 101440b:	call   ebp
 101440d:	loopne 0x10143f5
 101440f:	call   esi
 1014411:	loope  0x10143f9
 1014413:	dec    DWORD PTR [edx-0x74004455]
 1014419:	lods   al,BYTE PTR ds:[esi]
 101441a:	mov    esp,0xe7e1d6ff
 101441f:	inc    esi
 1014421:	rcl    esi,1
 1014423:	jmp    FWORD PTR [eax+ebx*4-0x53]
 1014427:	jmp    FWORD PTR [eax-0x6a]
 101442a:	stos   DWORD PTR es:[edi],eax
 101442b:	dec    DWORD PTR [esi+0x72]
 101442e:	cmp    bh,0x0
	...
 1014445:	add    BYTE PTR [eax],al
 1014447:	add    BYTE PTR [edi-0x4e],bh
 101444a:	(bad)  
 101444b:	jmp    FWORD PTR [esi-0x52003f47]
 1014451:	mov    ecx,0x7260ffc0
 1014456:	jle    0x1014457
 1014458:	pusha  
 1014459:	jno    0x10144d9
 101445b:	jmp    FWORD PTR [ebp-0x52004047]
 1014461:	mov    ecx,0x6f5dffc0
 1014466:	jl     0x1014467
 1014468:	pop    esp
 1014469:	outs   dx,BYTE PTR ds:[esi]
 101446a:	jnp    0x101446b
 101446c:	lods   al,BYTE PTR ds:[esi]
 101446d:	mov    ecx,0xb9acffbf
 1014472:	mov    edi,0x7a6d5bff
 1014477:	call   FWORD PTR [esi+ebp*2+0x7b]
 101447b:	jmp    FWORD PTR [ebx-0x55004149]
 1014481:	mov    dh,0xbd
 1014483:	call   FWORD PTR [ebx+0x6d]
 1014486:	jp     0x1014487
 1014488:	pop    ebx
 1014489:	ins    DWORD PTR es:[edi],dx
 101448a:	jp     0x101448b
 101448c:	stos   DWORD PTR es:[edi],eax
 101448d:	mov    bh,0xbd
 101448f:	jmp    FWORD PTR [ebx+0x5bffbeb7]
 1014495:	ins    DWORD PTR es:[edi],dx
 1014496:	jp     0x1014497
 1014498:	pop    edx
 1014499:	ins    BYTE PTR es:[edi],dx
 101449a:	jns    0x101449b
 101449c:	stos   DWORD PTR es:[edi],eax
 101449d:	mov    eax,0xb8abffbe
 10144a2:	mov    esi,0xbbaa8aff
 10144a7:	jmp    FWORD PTR [ebx-0x68]
 10144aa:	lods   eax,DWORD PTR ds:[esi]
 10144ab:	dec    DWORD PTR [esi+0x72]
 10144ae:	cmp    bh,0x0
	...
 10144c9:	add    BYTE PTR [eax],al
 10144cb:	add    BYTE PTR [edx-0x7e003b4e],al
 10144d1:	mov    cl,0xc4
 10144d3:	(bad)  
 10144d4:	fsub   st,st(3)
 10144d6:	jmp    0xe9e51eda
 10144db:	dec    DWORD PTR [ebx-0x74004456]
 10144e1:	stos   DWORD PTR es:[edi],eax
 10144e2:	mov    esp,0xe9e3d8ff
 10144e7:	(bad)  
 10144e8:	ftst   
 10144ea:	jmp    0xbfafd2ee
 10144ef:	dec    DWORD PTR [esi-0x26004051]
 10144f5:	in     al,0xea
 10144f7:	(bad)  
 10144f8:	fxam   
 10144fa:	jmp    0x8fff:0xc0b18fff
 1014501:	mov    cl,0xc1
 1014503:	call   edi
 1014505:	loop   0x10144ef
 1014507:	(bad)  
 1014508:	fsub   st,st(2)
 101450a:	call   0xbbaacf0e
 101450f:	dec    DWORD PTR [edx-0x27004456]
 1014515:	jecxz  0x1014500
 1014517:	(bad)  
 1014518:	ftst   
 101451a:	jmp    0xbeaed21e
 101451f:	dec    DWORD PTR [ebp-0x26004152]
 1014525:	in     al,0xea
 1014527:	jmp    FWORD PTR [ebx-0x68]
 101452a:	lods   eax,DWORD PTR ds:[esi]
 101452b:	dec    DWORD PTR [esi+0x72]
 101452e:	cmp    bh,0x0
	...
 101454d:	add    BYTE PTR [eax],al
 101454f:	add    BYTE PTR [ebp-0x51],bh
 1014552:	sar    edi,0x7b
 1014555:	lods   al,BYTE PTR ds:[esi]
 1014556:	mov    edi,0xbca979ff
 101455b:	push   DWORD PTR [esi-0x5b]
 101455e:	mov    ecx,0xb5a173ff
 1014563:	jmp    FWORD PTR [edi-0x62]
 1014566:	mov    bl,0xff
 1014568:	ins    BYTE PTR es:[edi],dx
 1014569:	call   0xffaa:0x9568ffaf
 1014570:	fs xchg ecx,eax
 1014572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1014573:	jmp    DWORD PTR [ecx-0x75]
 1014576:	mov    eax,ds:0x9d865cff
 101457b:	call   FWORD PTR [ecx-0x7e]
 101457e:	call   0x51ff:0x957d55ff
 1014585:	js     0x1014518
 1014587:	dec    DWORD PTR [ebp+0x74]
 101458a:	(bad)  
 101458b:	dec    DWORD PTR [edx+0x6f]
 101458e:	mov    edi,edi
 1014590:	inc    edi
 1014591:	imul   eax,DWORD PTR [esi-0x7d98bc01],0xffffffff
 1014598:	inc    ecx
 1014599:	arpl   WORD PTR [edi-0x1],di
 101459c:	ds pop edi
 101459e:	jl     0x101459f
 10145a0:	cmp    al,0x5d
 10145a2:	jns    0x10145a3
 10145a4:	cmp    bl,BYTE PTR [edx+0x77]
 10145a7:	(bad)  
 10145a8:	cmp    BYTE PTR [edi+0x75],dl
 10145ab:	inc    DWORD PTR [eax]
	...
 10145b5:	add    BYTE PTR [eax],al
 10145b7:	add    al,bh
 10145b9:	add    BYTE PTR [eax],al
 10145bb:	psubb  mm0,QWORD PTR [eax]
 10145be:	add    BYTE PTR [edi],al
 10145c0:	rol    BYTE PTR [eax],0x0
 10145c3:	pop    es
 10145c4:	add    BYTE PTR [eax],0x0
 10145c7:	add    eax,DWORD PTR [eax+0x30000]
 10145cd:	add    BYTE PTR [eax],al
 10145cf:	add    eax,DWORD PTR [eax-0x7ffd0000]
 10145d5:	add    BYTE PTR [eax],al
 10145d7:	add    eax,eax
 10145d9:	add    BYTE PTR [eax],al
 10145db:	add    eax,eax
 10145dd:	add    BYTE PTR [eax],al
 10145df:	add    esp,eax
 10145e1:	add    BYTE PTR [eax],al
 10145e3:	add    esp,eax
 10145e5:	add    BYTE PTR [eax],al
 10145e7:	add    esi,eax
 10145e9:	add    BYTE PTR [eax],al
 10145eb:	add    esi,eax
 10145ed:	add    BYTE PTR [eax],al
 10145ef:	add    esi,eax
 10145f1:	add    BYTE PTR [eax],al
 10145f3:	add    esi,eax
 10145f5:	add    BYTE PTR [eax],al
 10145f7:	add    esi,eax
 10145f9:	add    BYTE PTR [eax],al
 10145fb:	add    esi,eax
 10145fd:	add    BYTE PTR [eax],al
 10145ff:	add    esi,eax
 1014601:	add    BYTE PTR [eax],al
 1014603:	add    esi,eax
 1014605:	add    BYTE PTR [eax],al
 1014607:	add    esi,eax
 1014609:	add    BYTE PTR [eax],al
 101460b:	add    esi,eax
 101460d:	add    BYTE PTR [eax],al
 101460f:	add    esi,eax
 1014611:	add    BYTE PTR [eax],al
 1014613:	add    esi,eax
 1014615:	add    BYTE PTR [eax],al
 1014617:	add    esi,eax
 1014619:	add    BYTE PTR [eax],al
 101461b:	add    esi,eax
 101461d:	add    BYTE PTR [eax],al
 101461f:	add    esi,eax
 1014621:	add    BYTE PTR [eax],al
 1014623:	add    esi,eax
 1014625:	add    BYTE PTR [eax],al
 1014627:	add    esi,eax
 1014629:	add    BYTE PTR [eax],al
 101462b:	add    esi,eax
 101462d:	add    BYTE PTR [eax],al
 101462f:	add    edi,eax
 1014631:	add    BYTE PTR [eax],al
 1014633:	add    edi,esp
 1014635:	add    BYTE PTR [eax],al
 1014637:	pop    es
 1014638:	sub    BYTE PTR [eax],al
 101463a:	add    BYTE PTR [eax],al
 101463c:	adc    BYTE PTR [eax],al
 101463e:	add    BYTE PTR [eax],al
 1014640:	and    BYTE PTR [eax],al
 1014642:	add    BYTE PTR [eax],al
 1014644:	add    DWORD PTR [eax],eax
 1014646:	and    BYTE PTR [eax],al
	...
 101466c:	push   0xffffff83
 101466e:	(bad)  
 101466f:	call   FWORD PTR [esi+0x76]
 1014672:	cmp    bh,0x50
 1014675:	gs jae 0x1014677
 1014678:	inc    eax
 1014679:	push   ebp
 101467a:	push   DWORD PTR fs:[ecx]
 101467d:	inc    esp
 101467e:	push   esp
 101467f:	jmp    DWORD PTR [edx]
 1014681:	xor    eax,0x2819ff47
 1014686:	cmp    edi,edi
 1014688:	nop    DWORD PTR [edx]
 101468b:	dec    DWORD PTR [ecx]
 101468d:	pop    ss
 101468e:	sub    edi,edi
 1014690:	add    eax,0x3ff2312
 1014695:	push   cs
 1014696:	push   ds
 1014697:	inc    DWORD PTR [edx]
 1014699:	nop    edi
	...
 10146a8:	and    eax,0x7bffa881
 10146ad:	lods   eax,DWORD PTR ds:[esi]
 10146ae:	sar    bh,0x7b
 10146b1:	lods   eax,DWORD PTR ds:[esi]
 10146b2:	sar    bh,0x76
 10146b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10146b6:	mov    ecx,0xb29d6fff
 10146bb:	jmp    FWORD PTR [eax-0x6c]
 10146be:	stos   BYTE PTR es:[edi],al
 10146bf:	call   FWORD PTR [edi-0x75]
 10146c2:	mov    eax,ds:0x988058ff
 10146c7:	call   DWORD PTR [eax+0x76]
 10146ca:	(bad)  
 10146cb:	dec    DWORD PTR [eax+0x6c]
 10146ce:	xchg   bh,bh
 10146d0:	inc    ecx
 10146d1:	fs jg  0x10146d3
 10146d4:	cmp    al,0x5c
 10146d6:	jns    0x10146d7
 10146d8:	add    al,0x14
 10146da:	and    eax,0xff
	...
 10146eb:	add    BYTE PTR ds:0xa7ffa881,ah
 10146f1:	clc    
 10146f2:	(bad)  
 10146f3:	jmp    DWORD PTR [eax-0x6900030d]
 10146f9:	in     al,dx
 10146fa:	clc    
 10146fb:	dec    DWORD PTR [edx+0x7dfff3e3]
 1014701:	(bad)  
 1014703:	jmp    FWORD PTR [edi-0x30]
 1014706:	call   0xe4c8aa0a
 101470b:	call   DWORD PTR [esi-0x41]
 101470e:	fdivp  st(7),st
 1014710:	dec    ebp
 1014711:	mov    eax,0x5d3cffdb
 1014716:	jp     0x1014717
 1014718:	or     BYTE PTR [ebx],bl
 101471a:	sub    eax,0xff
 101471f:	add    BYTE PTR [eax],al
 1014721:	add    BYTE PTR [eax],al
 1014723:	add    BYTE PTR ds:0x25ffa984,ah
 1014729:	sub    BYTE PTR [eax-0x577eda01],0xff
 1014730:	and    eax,0x25ffa57f
 1014735:	jg     0x10146db
 1014737:	jmp    DWORD PTR ds:0x25ffa37d
 101473d:	jnp    0x10146e1
 101473f:	jmp    DWORD PTR ds:0x25ff9f7a
 1014745:	jp     0x10146e5
 1014747:	jmp    DWORD PTR ds:0x25ff9e79
 101474d:	js     0x10146eb
 101474f:	call   DWORD PTR [esi-0x42]
 1014752:	fdivp  st(7),st
 1014754:	cmp    eax,0xcff7a5e
 1014759:	and    al,0x36
 101475b:	inc    DWORD PTR [eax]
	...
 1014765:	add    BYTE PTR [eax],al
 1014767:	add    BYTE PTR [eax-0x63],dl
 101476a:	mov    ebx,0xdeb94cff
 101476f:	dec    DWORD PTR [ecx+edi*4-0x22]
 1014773:	dec    DWORD PTR [ecx+edi*4-0x22]
 1014777:	dec    DWORD PTR [ecx+edi*4-0x22]
 101477b:	dec    DWORD PTR [ecx+edi*4-0x22]
 101477f:	dec    DWORD PTR [ecx+edi*4-0x22]
 1014783:	(bad)  
 1014784:	lods   al,BYTE PTR ds:[esi]
 1014786:	sar    bh,cl
 1014788:	lods   al,BYTE PTR ds:[esi]
 101478a:	sar    bh,cl
 101478c:	lods   al,BYTE PTR ds:[esi]
 101478e:	sar    bh,cl
 1014790:	add    BYTE PTR [edx-0x74],ah
 1014793:	(bad)  
 1014794:	cmp    eax,0xfff7b5e
 1014799:	sub    al,0x3f
 101479b:	inc    DWORD PTR [eax]
	...
 10147a9:	add    BYTE PTR [eax],al
 10147ab:	add    BYTE PTR [ecx],cl
 10147ad:	jne    0x101474c
 10147af:	call   FWORD PTR [ebx+ecx*8-0x12]
 10147b3:	dec    DWORD PTR [edx-0x58000014]
 10147b9:	xchg   edx,eax
 10147ba:	mov    bh,bh
 10147bc:	mov    edx,0xadff8496
 10147c1:	xchg   DWORD PTR [ebp-0x1],ebp
 10147c4:	xchg   esp,eax
 10147c5:	jp     0x101481f
 10147c7:	jmp    FWORD PTR [edx-0x27]
 10147ca:	cli    
 10147cb:	call   FWORD PTR [ebx+ecx*8-0x12]
 10147cf:	inc    DWORD PTR [edx-0x50]
 10147d2:	(bad)  
 10147d3:	(bad)  
 10147d4:	cmp    al,BYTE PTR [esi+0x3514ffa6]
 10147da:	dec    edx
 10147db:	inc    DWORD PTR [eax]
	...
 10147e9:	add    BYTE PTR [eax],al
 10147eb:	add    BYTE PTR [ecx],cl
 10147ed:	jne    0x101478c
 10147ef:	call   FWORD PTR [ebp-0x6b00000b]
 10147f5:	lock (bad) 
 10147f7:	dec    edi
 10147f9:	sar    BYTE PTR [edx-0xf141c01],0xff
 1014800:	mov    dh,0xce
 1014802:	int    0xff
 1014804:	lods   eax,DWORD PTR ds:[esi]
 1014805:	xchg   DWORD PTR [ebp-0x1],ebp
 1014808:	je     0x10147eb
 101480a:	(bad)  
 101480b:	jmp    FWORD PTR [ebx-0x24]
 101480e:	sti    
 101480f:	call   DWORD PTR [ebp-0x3c]
 1014812:	call   0xa9898516
 1014817:	call   FWORD PTR [ecx]
 1014819:	ds push esp
 101481b:	inc    DWORD PTR [eax]
	...
 1014829:	add    BYTE PTR [eax],al
 101482b:	add    BYTE PTR [ebx],dl
 101482d:	jns    0x10147ce
 101482f:	jmp    DWORD PTR [edi-0x62000008]
 1014835:	cmc    
 1014836:	(bad)  
 1014837:	dec    edi
 1014839:	sar    BYTE PTR [edx-0x136101],0xff
 1014840:	jg     0x101481e
 1014842:	(bad)  
 1014843:	jmp    FWORD PTR [ebp+0x7aff6d87]
 1014849:	in     eax,0xff
 101484b:	push   DWORD PTR [ebp-0x1f]
 101484e:	(bad)  
 101484f:	jmp    FWORD PTR [ebx-0x25]
 1014852:	cli    
 1014853:	(bad)  
 1014854:	mov    ch,BYTE PTR ds:[eax+0x60481dff]
 101485b:	inc    DWORD PTR [eax]
	...
 1014869:	add    BYTE PTR [eax],al
 101486b:	add    BYTE PTR [ecx],ah
 101486d:	jg     0x101480e
 101486f:	push   DWORD PTR [edx-0x57000003]
 1014875:	stc    
 1014876:	(bad)  
 1014877:	dec    edi
 1014879:	sar    BYTE PTR [edx-0xe5201],0xff
 1014880:	pushf  
 1014881:	out    dx,eax
 1014882:	(bad)  
 1014883:	jmp    FWORD PTR [ebp-0x7d009279]
 1014889:	jmp    0xe67c488d
 101488e:	(bad)  
 101488f:	push   DWORD PTR [edx+eiz*8-0x1]
 1014893:	inc    DWORD PTR [ecx-0x73]
 1014896:	stos   DWORD PTR es:[edi],eax
 1014897:	jmp    DWORD PTR [ecx]
 1014899:	push   edx
 101489a:	push   0xffffffff
	...
 10148ac:	xor    BYTE PTR [ebp-0x44005e],al
 10148b2:	(bad)  
 10148b3:	push   DWORD PTR [ebx-0x30000003]
 10148b9:	sar    BYTE PTR [edx-0x453f3001],0xff
 10148c0:	iret   
 10148c1:	sar    BYTE PTR [edx+0x6d87adff],0xff
 10148c8:	mov    ch,ch
 10148ca:	(bad)  
 10148cb:	inc    DWORD PTR [ecx+0x7bffffe8]
 10148d1:	in     eax,0xff
 10148d3:	inc    DWORD PTR [ebp-0x71]
 10148d6:	lods   al,BYTE PTR ds:[esi]
 10148d7:	jmp    DWORD PTR [esi]
 10148d9:	pop    ebx
 10148da:	jne    0x10148db
	...
 10148ec:	inc    eax
 10148ed:	mov    WORD PTR [edx-0x1401],fs
 10148f3:	(bad)  
 10148f4:	jmp    0xd10148f8
 10148f9:	sar    BYTE PTR [edx-0x160f0201],0xff
 1014900:	cmc    
 1014901:	loopne 0x10148d9
 1014903:	jmp    FWORD PTR [ebp-0x6b009279]
 1014909:	out    dx,eax
 101490a:	(bad)  
 101490b:	dec    DWORD PTR [edx-0x7f000015]
 1014911:	call   0x934a4915
 1014916:	scas   al,BYTE PTR es:[edi]
 1014917:	jmp    FWORD PTR [edx]
 1014919:	gs cmp bh,0x0
	...
 1014929:	add    BYTE PTR [eax],al
 101492b:	add    BYTE PTR [edi-0x6e],cl
 101492e:	mov    ds:0xffffe7ff,eax
 1014933:	jmp    edi
 1014935:	(bad)  
 1014936:	(bad)  
 1014937:	dec    edi
 1014939:	sar    BYTE PTR [edx-0x453f3001],0xff
 1014940:	iret   
 1014941:	sar    BYTE PTR [edx-0x453f3001],0xff
 1014948:	pushf  
 1014949:	repz (bad) 
 101494b:	call   DWORD PTR [edx-0x76000010]
 1014951:	in     al,dx
 1014952:	(bad)  
 1014953:	dec    DWORD PTR [ebp+edx*4-0x51]
 1014957:	jmp    FWORD PTR [esi]
 1014959:	ins    DWORD PTR es:[edi],dx
 101495a:	mov    edi,edi
	...
 101496c:	pop    esi
 101496d:	cdq    
 101496e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101496f:	inc    DWORD PTR [ecx+0x63]
 1014972:	jno    0x1014973
 1014974:	fdivr  st(7),st
 1014976:	cld    
 1014977:	(bad)  
 1014978:	cmp    al,0x61
 101497a:	jo     0x101497b
 101497c:	jmp    0x3801477a
 1014981:	pop    esi
 1014982:	jo     0x1014983
 1014984:	scas   eax,DWORD PTR es:[edi]
 1014985:	call   0x5c314983
 101498a:	jo     0x101498b
 101498c:	xchg   ebp,eax
 101498d:	fcomip st,st(7)
 101498f:	jmp    FWORD PTR [eax]
 1014991:	pop    eax
 1014992:	outs   dx,DWORD PTR ds:[esi]
 1014993:	dec    DWORD PTR [edi-0x69]
 1014996:	mov    cl,0xff
 1014998:	xor    dh,BYTE PTR [ebp-0x6e]
 101499b:	inc    DWORD PTR [eax]
	...
 10149a9:	add    BYTE PTR [eax],al
 10149ab:	add    BYTE PTR [ecx-0x63],ch
 10149ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10149af:	call   FWORD PTR [ebp+ebp*8+0x6342fff9]
 10149b6:	jno    0x10149b7
 10149b8:	mov    ch,ah
 10149ba:	stc    
 10149bb:	(bad)  
 10149bc:	cmp    eax,0x6eff7061
 10149c1:	fdivr  st(4),st
 10149c3:	push   DWORD PTR [esi]
 10149c5:	pop    edi
 10149c6:	jo     0x10149c7
 10149c8:	push   edx
 10149c9:	shl    esp,1
 10149cb:	jmp    FWORD PTR [edi]
 10149cd:	pop    ebx
 10149ce:	jo     0x10149cf
 10149d0:	aaa    
 10149d1:	ret    
 10149d2:	bnd call DWORD PTR [ecx-0x66]
 10149d6:	mov    bl,0xff
 10149d8:	xor    eax,0xff9a7c
	...
 10149e9:	add    BYTE PTR [eax],al
 10149eb:	add    BYTE PTR [edx-0x60],dh
 10149ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10149ef:	inc    DWORD PTR [ecx+0x63]
 10149f2:	jno    0x10149f3
 10149f4:	xchg   ebp,esp
 10149f6:	stc    
 10149f7:	(bad)  
 10149f8:	cmp    al,0x61
 10149fa:	jo     0x10149fb
 10149fc:	outs   dx,BYTE PTR ds:[esi]
 10149fd:	(bad)  
 10149ff:	push   DWORD PTR [esi]
 1014a01:	pop    esi
 1014a02:	jo     0x1014a03
 1014a04:	push   eax
 1014a05:	iret   
 1014a06:	hlt    
 1014a07:	jmp    FWORD PTR [edi]
 1014a09:	pop    ebx
 1014a0a:	jo     0x1014a0b
 1014a0c:	xor    al,0xc3
 1014a0e:	repz jmp FWORD PTR [eax]
 1014a11:	pop    eax
 1014a12:	outs   dx,DWORD PTR ds:[esi]
 1014a13:	call   DWORD PTR [ebx-0x64]
 1014a16:	mov    ah,0xff
 1014a18:	aaa    
 1014a19:	and    BYTE PTR [eax+0xff],0x0
	...
 1014a2c:	jb     0x10149ce
 1014a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1014a2f:	push   DWORD PTR [edx-0x60]
 1014a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1014a33:	jmp    FWORD PTR [esi-0x61]
 1014a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1014a37:	jmp    DWORD PTR [edi-0x64]
 1014a3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1014a3b:	call   FWORD PTR [esi-0x67]
 1014a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1014a3f:	call   DWORD PTR [ebx-0x6c]
 1014a42:	mov    ds:0xa38f49ff,eax
 1014a47:	(bad)  
 1014a48:	cmp    al,0x8b
 1014a4a:	mov    ds:0xa18630ff,al
 1014a4f:	jmp    DWORD PTR ds:0x55ffa081
 1014a55:	popf   
 1014a56:	mov    ch,0xff
 1014a58:	cmp    al,BYTE PTR [esi+0x91a6]
 1014a5e:	add    BYTE PTR [eax],al
 1014a60:	loopne 0x1014a63
 1014a62:	add    BYTE PTR [eax],al
 1014a64:	rol    BYTE PTR [ecx],0x0
 1014a67:	add    al,ah
 1014a69:	add    DWORD PTR [edx-0x4ffe7ffd],ebp
 1014a6f:	inc    eax
 1014a71:	add    DWORD PTR [edx-0x6fe1f01],esi
 1014a77:	jmp    eax
 1014a79:	add    eax,edi
 1014a7b:	jmp    eax
 1014a7d:	add    edi,esi
 1014a7f:	jmp    eax
 1014a81:	add    esi,esi
 1014a83:	jmp    eax
 1014a85:	add    ebp,esi
 1014a87:	jmp    eax
 1014a89:	add    esp,esi
 1014a8b:	jmp    eax
 1014a8d:	add    DWORD PTR [ebx-0x79fe1f01],ecx
 1014a93:	jmp    eax
 1014a95:	add    DWORD PTR [esi-0x79fe1f01],eax
 1014a9b:	jmp    eax
 1014a9d:	add    DWORD PTR [edi+0x28ff],eax
 1014aa3:	add    BYTE PTR [eax],ah
 1014aa5:	add    BYTE PTR [eax],al
 1014aa7:	add    BYTE PTR [eax+0x0],al
 1014aaa:	add    BYTE PTR [eax],al
 1014aac:	add    DWORD PTR [eax],eax
 1014aae:	or     BYTE PTR [eax],al
 1014ab0:	add    BYTE PTR [eax],al
 1014ab2:	add    BYTE PTR [eax],al
 1014ab4:	add    BYTE PTR [eax+eax*1],al
	...
 1014abf:	add    BYTE PTR [eax],al
 1014ac1:	add    DWORD PTR [eax],eax
 1014ac3:	add    BYTE PTR [eax],al
 1014ac5:	add    DWORD PTR [eax],eax
 1014ac7:	add    BYTE PTR [eax],al
 1014ac9:	add    BYTE PTR [eax],al
 1014acb:	add    BYTE PTR [ebx+0x49],ah
 1014ace:	xor    eax,0x364a6400
 1014ad3:	add    BYTE PTR [ecx],bh
 1014ad5:	pop    edx
 1014ad6:	jbe    0x1014ad8
 1014ad8:	cmp    bl,BYTE PTR [eax+edi*2+0x0]
 1014adc:	cmp    al,0x5e
 1014ade:	jp     0x1014ae0
 1014ae0:	ds pusha 
 1014ae2:	jl     0x1014ae4
 1014ae4:	inc    eax
 1014ae5:	bound  edi,QWORD PTR [esi+0x0]
 1014ae8:	fldcw  WORD PTR [edx+0x33]
 1014aeb:	add    dl,ah
 1014aed:	jae    0x1014b29
 1014aef:	add    al,ch
 1014af1:	jl     0x1014b38
 1014af3:	add    dl,ch
 1014af5:	xchg   DWORD PTR [eax+eax*1-0x16],edx
 1014af9:	xchg   edx,eax
 1014afa:	fs add dl,ch
 1014afd:	fwait
 1014afe:	je     0x1014b00
 1014b00:	jmp    0x8364:0x3d00749c
 1014b07:	add    BYTE PTR [ebx],bh
 1014b09:	ins    BYTE PTR es:[edi],dx
 1014b0a:	mov    WORD PTR [eax],es
 1014b0c:	cmp    al,0x77
 1014b0e:	xchg   edi,eax
 1014b0f:	add    BYTE PTR [edx+0x65],al
 1014b12:	add    BYTE PTR [eax],0x44
 1014b15:	add    BYTE PTR [bx+si],0x48
 1014b19:	data16 add BYTE PTR [eax],0x44
 1014b1d:	push   0x714c0084
 1014b22:	mov    eax,DWORD PTR [eax]
 1014b24:	push   edi
 1014b25:	jb     0x1014ab1
 1014b27:	add    BYTE PTR [ebp+0x79],cl
 1014b2a:	xchg   esi,eax
 1014b2b:	add    BYTE PTR [ebp+0x7d],dl
 1014b2e:	xchg   esp,eax
 1014b2f:	add    BYTE PTR [ecx+0x7c],ah
 1014b32:	xchg   ebx,eax
 1014b33:	add    BYTE PTR [edi],bl
 1014b35:	mov    bh,BYTE PTR [ebx-0x5079cf00]
 1014b3b:	add    BYTE PTR [ecx-0x7e],bl
 1014b3e:	cdq    
 1014b3f:	add    BYTE PTR [edi-0x7e],bl
 1014b42:	call   0x5d00:0x9c855b00
 1014b49:	mov    BYTE PTR [esi-0x62779500],bl
 1014b4f:	add    BYTE PTR [edi-0x76],bl
 1014b52:	mov    al,ds:0xa48e6300
 1014b57:	add    BYTE PTR [ebp-0x71],ah
 1014b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1014b5b:	add    BYTE PTR [ecx+edx*4-0x5a],ah
 1014b5f:	add    BYTE PTR [esi-0x6e],ah
 1014b62:	test   al,0x0
 1014b64:	push   0x6c00aa95
 1014b69:	cwde   
 1014b6a:	lods   eax,DWORD PTR ds:[esi]
 1014b6b:	add    BYTE PTR [edi-0x6b],bh
 1014b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1014b6f:	add    BYTE PTR [ecx-0x6b],bh
 1014b72:	test   eax,0xae9a7200
 1014b77:	add    BYTE PTR [esi-0x54],bh
 1014b7a:	mov    ebp,0xd5970200
 1014b7f:	add    BYTE PTR [ecx],al
 1014b81:	cwde   
 1014b82:	(bad)  
 1014b83:	add    BYTE PTR [ebx],al
 1014b85:	pushf  
 1014b86:	fild   DWORD PTR [eax]
 1014b88:	add    al,0x9c
 1014b8a:	fild   DWORD PTR [eax]
 1014b8c:	add    bl,BYTE PTR [esi-0x61fbff23]
 1014b92:	fld    QWORD PTR [eax]
 1014b94:	add    ah,BYTE PTR [eax-0x5de9ff21]
 1014b9a:	fild   DWORD PTR [eax]
 1014b9c:	add    BYTE PTR [edx-0x5bffff1e],ah
 1014ba2:	jecxz  0x1014ba4
 1014ba4:	add    BYTE PTR [ebx-0x59feff1c],ah
 1014baa:	out    0x0,al
 1014bac:	add    DWORD PTR [esi-0x52f4ff18],esp
 1014bb2:	jmp    0x1014bb4
 1014bb4:	or     al,0xad
 1014bb6:	jmp    0x1000:0xecaf0d00
 1014bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1014bbe:	loope  0x1014bc0
 1014bc0:	and    eax,0x2800edb8
 1014bc5:	mov    ecx,0xb83000ed
 1014bca:	jmp    0x4500:0xefbf3500
 1014bd1:	(bad)
 1014bd4:	dec    eax
 1014bd5:	(bad)  
 1014bd6:	out    dx,al
 1014bd7:	add    BYTE PTR [edx-0x35],dl
 1014bda:	repz add BYTE PTR [ebx-0x30],ah
 1014bde:	repnz add BYTE PTR [edx+edx*8-0xf],ah
 1014be3:	add    BYTE PTR [ebp-0x2b],ch
 1014be6:	repz add BYTE PTR [ecx-0x2b],bh
 1014bea:	lock add BYTE PTR [edi-0x46ff6c5e],dh
 1014bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1014bf2:	xchg   ebp,eax
 1014bf3:	add    BYTE PTR [esi-0x7eff6557],bh
 1014bf9:	call   0xae:0x9d8a00ac
 1014c00:	xchg   DWORD PTR [ebx-0x5171ff43],ebp
 1014c06:	mov    esi,0x9cabc000
 1014c0b:	add    bl,al
 1014c0d:	scas   al,BYTE PTR es:[edi]
 1014c0e:	sahf   
 1014c0f:	add    al,cl
 1014c11:	mov    dl,0xa3
 1014c13:	add    cl,cl
 1014c15:	mov    bl,0xa4
 1014c17:	add    ah,cl
 1014c19:	mov    dh,0xa7
 1014c1b:	add    bh,cl
 1014c1d:	mov    ecx,0xbbd100a9
 1014c22:	stos   DWORD PTR es:[edi],eax
 1014c23:	add    ah,dl
 1014c25:	mov    esi,0xc2d800ae
 1014c2a:	mov    dl,0x0
 1014c2c:	aam    0xc5
 1014c2e:	mov    edx,0xbdcae100
 1014c33:	add    BYTE PTR [edx-0x5fff3949],cl
 1014c39:	mov    esp,0xc39400ca
 1014c3e:	rol    BYTE PTR [eax],1
 1014c40:	mov    ds:0x8000dcd2,al
 1014c45:	retf   0xe0
 1014c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1014c49:	fsub   st,st(1)
 1014c4b:	add    BYTE PTR [ebp-0x6aff0b20],al
 1014c51:	in     eax,0xf9
 1014c53:	add    BYTE PTR [ebx-0x4cff0617],bl
 1014c59:	in     eax,0xec
 1014c5b:	add    BYTE PTR [ebp-0x5aff1018],dh
 1014c61:	in     eax,dx
 1014c62:	test   BYTE PTR [eax],0xab
 1014c65:	out    dx,eax
 1014c66:	sti    
 1014c67:	add    BYTE PTR [esi-0x40ff080f],bh
 1014c6d:	repnz clc 
 1014c6f:	add    BYTE PTR [eax-0x20ff030b],bh
 1014c75:	int3   
 1014c76:	rol    DWORD PTR [eax],0xe4
 1014c79:	iret   
 1014c7a:	les    eax,FWORD PTR [eax]
 1014c7c:	loopne 0x1014c4f
 1014c7e:	mov    DWORD PTR [eax],0xc9d3e6
 1014c84:	out    0xd5,eax
 1014c86:	retf   
 1014c87:	add    bl,ch
 1014c89:	fcmovnbe st,st(3)
 1014c8b:	add    ah,ch
 1014c8d:	fst    st(5)
 1014c8f:	add    ch,ch
 1014c91:	(bad)  
 1014c93:	add    dh,ch
 1014c95:	loope  0x1014c71
 1014c97:	add    bl,al
 1014c99:	stc    
 1014c9a:	std    
 1014c9b:	add    ch,al
 1014c9d:	stc    
 1014c9e:	std    
 1014c9f:	add    cl,dh
 1014ca1:	out    0xe1,eax
 1014ca3:	add    dl,dh
 1014ca5:	jmp    0xecf54d8d
 1014caa:	out    0x0,al
 1014cac:	cmc    
 1014cad:	in     eax,dx
 1014cae:	jmp    0xeff343b3
 1014cb3:	add    al,bh
 1014cb5:	repz lock add cl,bh
 1014cb9:	cmc    
 1014cba:	repnz add dl,bh
 1014cbd:	div    ebp
 1014cbf:	add    ah,bh
 1014cc1:	cli    
 1014cc2:	stc    
 1014cc3:	add    ch,bh
 1014cc5:	cld    
 1014cc6:	sti    
 1014cc7:	add    dh,bh
 1014cc9:	(bad)  
 1014cca:	inc    BYTE PTR [eax]
	...
 1014ed0:	add    BYTE PTR [eax],al
 1014ed2:	add    BYTE PTR [ecx+0x1],cl
 1014ed5:	add    DWORD PTR [ecx],eax
 1014ed7:	add    DWORD PTR [ecx],eax
 1014ed9:	add    DWORD PTR [ecx],eax
 1014edb:	add    DWORD PTR [ecx],eax
 1014edd:	add    DWORD PTR [eax],eax
	...
 1014ef3:	dec    ecx
 1014ef4:	or     BYTE PTR [ecx+0x49],0x49
 1014ef8:	dec    ecx
 1014ef9:	dec    ecx
 1014efa:	dec    ecx
 1014efb:	dec    ecx
 1014efc:	dec    ecx
 1014efd:	add    DWORD PTR [eax],eax
	...
 1014f13:	dec    ecx
 1014f14:	add    BYTE PTR [eax+0x71767a80],0x6e
 1014f1b:	pop    edx
 1014f1c:	dec    ecx
 1014f1d:	add    DWORD PTR [eax],eax
	...
 1014f2f:	dec    ecx
 1014f30:	add    DWORD PTR [ecx],eax
 1014f32:	add    DWORD PTR [ecx-0x80],ecx
 1014f35:	or     eax,0x90a0b0c
 1014f3a:	or     BYTE PTR [ecx+ecx*2+0x1],ch
	...
 1014f4e:	add    BYTE PTR [ecx-0x80],cl
 1014f51:	dec    ecx
 1014f52:	dec    ecx
 1014f53:	dec    ecx
 1014f54:	add    BYTE PTR [eax+0x777a8080],0x72
 1014f5b:	outs   dx,BYTE PTR ds:[esi]
 1014f5c:	dec    ecx
 1014f5d:	add    DWORD PTR [eax],eax
	...
 1014f6f:	dec    ecx
 1014f70:	add    BYTE PTR [eax+0xd804a80],0xc
 1014f77:	or     ecx,DWORD PTR [edx]
 1014f79:	or     DWORD PTR [eax],ecx
 1014f7b:	jno    0x1014fc6
 1014f7d:	add    DWORD PTR [edx],ebx
 1014f7f:	sub    DWORD PTR [eax],eax
	...
 1014f89:	add    BYTE PTR [eax],al
 1014f8b:	dec    ecx
 1014f8c:	add    DWORD PTR [ecx],eax
 1014f8e:	add    DWORD PTR [ecx-0x80],ecx
 1014f91:	or     eax,0x80804b0c
 1014f96:	add    BYTE PTR [eax+0x73777c80],0x49
 1014f9d:	add    DWORD PTR [ecx+edx*1],ebx
 1014fa0:	unpcklps xmm1,XMMWORD PTR [ebp+0x0]
 1014fa4:	add    BYTE PTR [eax],al
 1014fa6:	add    BYTE PTR [eax],al
 1014fa8:	add    BYTE PTR [eax],al
 1014faa:	add    BYTE PTR [ecx-0x80],cl
 1014fad:	dec    ecx
 1014fae:	dec    ecx
 1014faf:	dec    ecx
 1014fb0:	add    BYTE PTR [eax+0xd805180],0xc
 1014fb7:	or     ecx,DWORD PTR [edx]
 1014fb9:	or     DWORD PTR [eax],ecx
 1014fbb:	ja     0x1015006
 1014fbd:	add    DWORD PTR [eax],edi
 1014fbf:	cmp    BYTE PTR [eax],dh
 1014fc1:	sbb    edx,DWORD PTR [eax]
 1014fc3:	pop    ss
 1014fc4:	add    BYTE PTR [eax],al
 1014fc6:	add    BYTE PTR [eax],al
 1014fc8:	add    BYTE PTR [eax],al
 1014fca:	add    BYTE PTR [ecx-0x80],cl
 1014fcd:	add    BYTE PTR [eax+0xc0d804a],0x52
 1014fd4:	add    BYTE PTR [eax-0x7f7f7f80],0x7d
 1014fdb:	jp     0x1015026
 1014fdd:	add    DWORD PTR [eax],edi
 1014fdf:	cmp    BYTE PTR [eax],dh
 1014fe1:	xor    BYTE PTR ds:0x3,ch
 1014fe7:	add    BYTE PTR [eax],al
 1014fe9:	add    BYTE PTR [eax],al
 1014feb:	dec    ecx
 1014fec:	or     BYTE PTR ds:0x80804b0c,0x80
 1014ff3:	push   edx
 1014ff4:	or     BYTE PTR ds:0x800a0b0c,0x80
 1014ffb:	dec    ecx
 1014ffc:	dec    ecx
 1014ffd:	add    DWORD PTR [eax],edi
 1014fff:	cmp    BYTE PTR [eax],dh
 1015001:	xor    BYTE PTR ds:0x4,ch
 1015007:	add    BYTE PTR [eax],al
 1015009:	add    BYTE PTR [eax],al
 101500b:	dec    ecx
 101500c:	add    BYTE PTR [eax+0xd805180],0xc
 1015013:	push   esi
 1015014:	add    BYTE PTR [eax-0x7f7f7f80],0x49
 101501b:	add    DWORD PTR [ecx],eax
 101501d:	add    DWORD PTR [eax],edi
 101501f:	cmp    BYTE PTR [eax],dh
 1015021:	xor    BYTE PTR [eax],dh
 1015023:	add    eax,DWORD PTR [eax]
 1015025:	add    BYTE PTR [eax],al
 1015027:	add    BYTE PTR [eax],al
 1015029:	add    BYTE PTR [eax],al
 101502b:	dec    edx
 101502c:	or     BYTE PTR ds:0x8080520c,0x80
 1015033:	push   esi
 1015034:	add    BYTE PTR [eax-0x7f7f7f80],0x4a
 101503b:	pop    ecx
 101503c:	add    DWORD PTR [ebx+0x38],ecx
 101503f:	cmp    BYTE PTR [ebx],dh
 1015041:	xor    BYTE PTR [esi],ch
 1015043:	add    eax,DWORD PTR [eax]
 1015045:	add    BYTE PTR [eax],al
 1015047:	add    BYTE PTR [eax],al
 1015049:	add    BYTE PTR [eax],al
 101504b:	dec    ebx
 101504c:	add    BYTE PTR [eax+0xd805280],0xc
 1015053:	pop    eax
 1015054:	add    BYTE PTR [eax-0x7f7f7f80],0x51
 101505b:	add    DWORD PTR [ebx+0x3b],ebp
 101505e:	cmp    DWORD PTR [eax],edi
 1015060:	xor    BYTE PTR [eax],dh
 1015062:	sub    eax,0x4
 1015067:	add    BYTE PTR [eax],al
 1015069:	add    BYTE PTR [eax],al
 101506b:	push   ecx
 101506c:	or     BYTE PTR ds:0x8080560c,0x80
 1015073:	pop    eax
 1015074:	pop    eax
 1015075:	pop    eax
 1015076:	pop    eax
 1015077:	pop    eax
 1015078:	push   esi
 1015079:	push   ebp
 101507a:	push   edx
 101507b:	imul   edi,DWORD PTR [esi],0x3b
 101507e:	cmp    BYTE PTR [eax],bh
 1015080:	xor    BYTE PTR [eax],dh
 1015082:	xor    BYTE PTR [eax+eax*1],al
 1015085:	add    BYTE PTR [eax],al
 1015087:	add    BYTE PTR [eax],al
 1015089:	add    BYTE PTR [eax],al
 101508b:	push   edx
 101508c:	add    BYTE PTR [eax-0x7f7fa980],0x80
 1015093:	add    BYTE PTR [eax+0x1594980],0x49
 101509a:	inc    esi
 101509b:	inc    edx
 101509c:	cmp    edi,DWORD PTR ds:[eax]
 101509f:	cmp    BYTE PTR [eax],bh
 10150a1:	xor    BYTE PTR [esi],ch
 10150a3:	add    al,0x0
 10150a5:	add    BYTE PTR [eax],al
 10150a7:	add    BYTE PTR [eax],al
 10150a9:	add    BYTE PTR [eax],al
 10150ab:	push   edx
 10150ac:	or     BYTE PTR ds:0x8080580c,0x80
 10150b3:	add    BYTE PTR [eax+0x6b014980],0x61
 10150ba:	inc    esi
 10150bb:	inc    edx
 10150bc:	cmp    edi,DWORD PTR ds:[ecx]
 10150bf:	cmp    BYTE PTR [eax],dh
 10150c1:	xor    BYTE PTR [esi],ch
 10150c3:	add    al,0x0
 10150c5:	add    BYTE PTR [eax],al
 10150c7:	add    BYTE PTR [eax],al
 10150c9:	add    BYTE PTR [eax],al
 10150cb:	push   esi
 10150cc:	add    BYTE PTR [eax+0x58585880],0x58
 10150d3:	pop    eax
 10150d4:	push   esi
 10150d5:	push   esi
 10150d6:	push   edx
 10150d7:	ins    DWORD PTR es:[edi],dx
 10150d8:	popaw  
 10150da:	inc    esi
 10150db:	inc    edx
 10150dc:	cmp    edi,DWORD PTR ds:[eax]
 10150df:	cmp    BYTE PTR [eax],dh
 10150e1:	xor    BYTE PTR ds:0x6,ch
 10150e7:	add    BYTE PTR [eax],al
 10150e9:	add    BYTE PTR [eax],al
 10150eb:	push   esi
 10150ec:	add    BYTE PTR [eax-0x7f7f7f80],0x49
 10150f3:	pop    ecx
 10150f4:	add    DWORD PTR [ecx+0x61],ecx
 10150f7:	data16 popaw 
 10150fa:	inc    esi
 10150fb:	inc    edx
 10150fc:	cmp    edi,DWORD PTR ds:[eax]
 10150ff:	cmp    BYTE PTR [eax],dh
 1015101:	xor    BYTE PTR ds:0x6,ch
 1015107:	add    BYTE PTR [eax],al
 1015109:	add    BYTE PTR [eax],al
 101510b:	pop    eax
 101510c:	add    BYTE PTR [eax-0x7f7f7f80],0x49
 1015113:	add    DWORD PTR [ebx+0x46],ebp
 1015116:	popa   
 1015117:	data16 popaw 
 101511a:	inc    esi
 101511b:	inc    edx
 101511c:	cmp    edi,DWORD PTR ds:[eax]
 101511f:	cmp    BYTE PTR [eax],dh
 1015121:	xor    BYTE PTR [eax],dh
 1015123:	push   es
 1015124:	add    BYTE PTR [eax],al
 1015126:	add    BYTE PTR [eax],al
 1015128:	add    BYTE PTR [eax],al
 101512a:	add    BYTE PTR [eax+0x58],bl
 101512d:	pop    eax
 101512e:	pop    eax
 101512f:	pop    eax
 1015130:	push   esi
 1015131:	dec    edx
 1015132:	dec    ecx
 1015133:	imul   eax,DWORD PTR [ebx+0x46],0x61
 1015137:	data16 popaw 
 101513a:	inc    esi
 101513b:	inc    edx
 101513c:	cmp    edi,DWORD PTR ds:[eax]
 101513f:	cmp    BYTE PTR [ebx],dh
 1015141:	xor    BYTE PTR [esi],ch
 1015143:	pop    es
	...
 1015150:	add    BYTE PTR [ebx],ah
 1015152:	cmp    edi,DWORD PTR [edi]
 1015154:	inc    ebx
 1015155:	inc    esi
 1015156:	popa   
 1015157:	data16 popaw 
 101515a:	inc    esi
 101515b:	inc    edx
 101515c:	cmp    edi,DWORD PTR ds:[eax]
 101515f:	cmp    BYTE PTR [eax],dh
 1015161:	xor    BYTE PTR [esi],ch
 1015163:	pop    es
	...
 1015170:	add    BYTE PTR [ebx],ah
 1015172:	cmp    edi,DWORD PTR [edi]
 1015174:	inc    ebx
 1015175:	inc    esi
 1015176:	popa   
 1015177:	data16 popaw 
 101517a:	inc    esi
 101517b:	inc    edx
 101517c:	cmp    edi,DWORD PTR ds:[eax]
 101517f:	cmp    BYTE PTR [eax],dh
 1015181:	xor    BYTE PTR ds:0x7,ch
	...
 101518f:	add    BYTE PTR [eax],al
 1015191:	and    eax,0x46433f3c
 1015196:	popa   
 1015197:	data16 popaw 
 101519a:	inc    esi
 101519b:	inc    edx
 101519c:	cmp    edi,DWORD PTR ds:[eax]
 101519f:	cmp    BYTE PTR [eax],dh
 10151a1:	xor    BYTE PTR [eax],dh
 10151a3:	pop    es
	...
 10151b0:	add    BYTE PTR ds:0x46433f3b,ah
 10151b6:	popa   
 10151b7:	data16 popaw 
 10151ba:	inc    esi
 10151bb:	inc    edx
 10151bc:	cmp    edi,DWORD PTR ds:[eax]
 10151bf:	cmp    BYTE PTR [eax],bh
 10151c1:	xor    BYTE PTR [esi],ch
 10151c3:	pop    es
	...
 10151d0:	add    BYTE PTR [esi],ah
 10151d2:	cmp    edi,DWORD PTR [edi]
 10151d4:	inc    ebx
 10151d5:	inc    esi
 10151d6:	popa   
 10151d7:	data16 popaw 
 10151da:	inc    esi
 10151db:	inc    edx
 10151dc:	cmp    edi,DWORD PTR ds:[eax]
 10151df:	cmp    BYTE PTR [eax],dh
 10151e1:	xor    BYTE PTR ds:0x13,ch
	...
 10151ef:	add    BYTE PTR [eax],al
 10151f1:	es cmp al,0x3f
 10151f4:	inc    ebx
 10151f5:	inc    esi
 10151f6:	popa   
 10151f7:	addr16 popaw 
 10151fa:	inc    esi
 10151fb:	inc    edx
 10151fc:	cmp    edi,DWORD PTR ds:[eax]
 10151ff:	cmp    BYTE PTR [eax],dh
 1015201:	xor    BYTE PTR ds:0x13,ch
	...
 101520f:	add    BYTE PTR [eax],al
 1015211:	daa    
 1015212:	cmp    eax,DWORD PTR [ecx+0x46]
 1015215:	arpl   WORD PTR [edx+0x75],bp
 1015218:	jne    0x101528f
 101521a:	jne    0x1015291
 101521c:	bound  eax,QWORD PTR [di+0x40]
 1015220:	cmp    eax,0x132d30
	...
 1015231:	daa    
 1015232:	inc    esp
 1015233:	arpl   WORD PTR [ebp+0x75],si
 1015236:	jne    0x10152ad
 1015238:	jne    0x10152af
 101523a:	jne    0x10152b1
 101523c:	jne    0x10152b3
 101523e:	jne    0x10152b5
 1015240:	jne    0x101528a
 1015242:	xor    al,0x13
	...
 1015250:	add    BYTE PTR [esi+0x65],cl
 1015253:	jne    0x10152ca
 1015255:	jne    0x10152cc
 1015257:	jne    0x10152ce
 1015259:	jne    0x10152d0
 101525b:	jne    0x10152d2
 101525d:	jne    0x10152d4
 101525f:	jne    0x10152d6
 1015261:	jne    0x10152c2
 1015263:	and    DWORD PTR [eax],eax
	...
 1015271:	pop    esp
 1015272:	sub    BYTE PTR [ebx*2+0x75696560],ch
 1015279:	jne    0x10152f0
 101527b:	jne    0x10152f2
 101527d:	imul   esp,DWORD PTR [esi+ebx*2+0x5b],0x4c1618
	...
 1015291:	add    BYTE PTR [eax],al
 1015293:	add    BYTE PTR [edi+0x2b],cl
 1015296:	and    al,0x23
 1015298:	and    BYTE PTR [esi],bl
 101529a:	push   ds
 101529b:	push   ds
 101529c:	sbb    DWORD PTR [ecx],ebx
 101529e:	sbb    DWORD PTR [esi],ebx
 10152a0:	sub    al,BYTE PTR [eax]
	...
 10152c6:	add    BYTE PTR [eax],al
 10152c8:	jmp    eax
 10152ca:	add    edi,edi
 10152cc:	jmp    eax
 10152ce:	add    edi,edi
 10152d0:	jmp    eax
 10152d2:	add    edi,edi
 10152d4:	inc    BYTE PTR [eax]
 10152d6:	add    edi,edi
 10152d8:	inc    BYTE PTR [eax]
 10152da:	add    edi,edi
 10152dc:	inc    BYTE PTR [eax]
 10152de:	add    bh,bh
 10152e0:	loopne 0x10152e2
 10152e2:	add    BYTE PTR [edi],bl
 10152e4:	loopne 0x10152e6
 10152e6:	add    BYTE PTR [edi],cl
 10152e8:	loopne 0x10152ea
 10152ea:	add    BYTE PTR [edi],cl
 10152ec:	loopne 0x10152ee
 10152ee:	add    BYTE PTR [edi],cl
 10152f0:	loopne 0x10152f2
 10152f2:	add    BYTE PTR [edi],cl
 10152f4:	loopne 0x10152f6
 10152f6:	add    BYTE PTR [edi],cl
 10152f8:	loopne 0x10152fa
 10152fa:	add    BYTE PTR [edi],cl
 10152fc:	loopne 0x10152fe
 10152fe:	add    BYTE PTR [edi],cl
 1015300:	loopne 0x1015302
 1015302:	add    BYTE PTR [edi],cl
 1015304:	loopne 0x1015306
 1015306:	add    BYTE PTR [edi],cl
 1015308:	loopne 0x101530a
 101530a:	add    BYTE PTR [edi],cl
 101530c:	loopne 0x101530e
 101530e:	add    BYTE PTR [edi],cl
 1015310:	loopne 0x1015312
 1015312:	add    BYTE PTR [edi],cl
 1015314:	loopne 0x1015316
 1015316:	add    BYTE PTR [edi],cl
 1015318:	inc    DWORD PTR [eax-0x7f00f100]
 101531e:	add    BYTE PTR [edi],cl
 1015320:	inc    DWORD PTR [eax-0x7f00f100]
 1015326:	add    BYTE PTR [edi],cl
 1015328:	inc    DWORD PTR [eax-0x7f00f100]
 101532e:	add    BYTE PTR [edi],cl
 1015330:	inc    DWORD PTR [eax-0x7f00f100]
 1015336:	add    BYTE PTR [edi],cl
 1015338:	inc    DWORD PTR [eax-0x7f00f100]
 101533e:	add    BYTE PTR [edi],cl
 1015340:	push   eax
 1015342:	add    BYTE PTR [edi-0x1],bh
 1015345:	(bad)  
 1015346:	(bad)  
 1015347:	jmp    FWORD PTR [eax]
 1015349:	add    BYTE PTR [eax],al
 101534b:	add    BYTE PTR [eax],dl
 101534d:	add    BYTE PTR [eax],al
 101534f:	add    BYTE PTR [eax],ah
 1015351:	add    BYTE PTR [eax],al
 1015353:	add    BYTE PTR [ecx],al
 1015355:	add    BYTE PTR [eax],cl
 1015357:	add    BYTE PTR [eax],al
 1015359:	add    BYTE PTR [eax],al
 101535b:	add    BYTE PTR [eax],al
 101535d:	add    DWORD PTR [eax],eax
	...
 1015367:	add    BYTE PTR [eax],al
 1015369:	add    DWORD PTR [eax],eax
 101536b:	add    BYTE PTR [eax],al
 101536d:	add    DWORD PTR [eax],eax
 101536f:	add    BYTE PTR [eax],al
 1015371:	add    BYTE PTR [eax],al
 1015373:	add    BYTE PTR [ebx+0x49],ah
 1015376:	xor    eax,0x364a6400
 101537b:	add    BYTE PTR ds:0x2d00694a,ch
 1015381:	dec    ebp
 1015382:	imul   eax,DWORD PTR [eax],0x2e
 1015385:	dec    esi
 1015386:	ins    BYTE PTR es:[edi],dx
 1015387:	add    BYTE PTR [edx],dh
 1015389:	push   edx
 101538a:	ins    BYTE PTR es:[edi],dx
 101538b:	add    BYTE PTR [ebx],dh
 101538d:	push   esp
 101538e:	jb     0x1015390
 1015390:	aaa    
 1015391:	pop    edx
 1015392:	jne    0x1015394
 1015394:	ss pop ebp
 1015396:	ja     0x1015398
 1015398:	cmp    esp,DWORD PTR [eax+0x7d]
 101539b:	add    BYTE PTR [edi],ah
 101539d:	pop    ebx
 101539e:	add    BYTE PTR [eax],0x16
 10153a1:	ins    DWORD PTR es:[edi],dx
 10153a2:	lahf   
 10153a3:	add    BYTE PTR [edi],bh
 10153a5:	add    BYTE PTR fs:[eax],0x34
 10153a9:	jo     0x101533b
 10153ab:	add    BYTE PTR [ecx+0x66],al
 10153ae:	add    BYTE PTR [eax],0x46
 10153b1:	push   0xffffff84
 10153b3:	add    BYTE PTR [eax-0x7a],bl
 10153b6:	mov    al,ds:0xa28a5b00
 10153bb:	add    BYTE PTR [edx-0x74],bl
 10153be:	mov    ds:0xa68e5c00,eax
 10153c3:	add    BYTE PTR [edx-0x77],dl
 10153c6:	scas   al,BYTE PTR es:[edi]
 10153c7:	add    BYTE PTR [ebx-0x72],bl
 10153ca:	lods   eax,DWORD PTR ds:[esi]
 10153cb:	add    BYTE PTR [edi-0x6f],bl
 10153ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10153cf:	add    BYTE PTR [ecx-0x6d],ah
 10153d2:	lods   al,BYTE PTR ds:[esi]
 10153d3:	add    BYTE PTR [edi-0x66],ah
 10153d6:	stos   BYTE PTR es:[edi],al
 10153d7:	add    BYTE PTR [esi-0x68],ah
 10153da:	lods   al,BYTE PTR ds:[esi]
 10153db:	add    BYTE PTR [eax-0x65],dh
 10153de:	mov    cl,0x0
 10153e0:	add    eax,DWORD PTR [edi-0x7ff3ff3a]
 10153e6:	rol    DWORD PTR [eax],0x2
 10153e9:	mov    edx,ss
 10153eb:	add    BYTE PTR [eax],al
 10153ed:	mov    esp,edx
 10153ef:	add    BYTE PTR [ecx],al
 10153f1:	mov    esp,ss
 10153f3:	add    BYTE PTR [ecx],al
 10153f5:	(bad)  
 10153f6:	fiadd  DWORD PTR [eax]
 10153f8:	add    BYTE PTR [edx-0x6fffff2a],dl
 10153fe:	fild   DWORD PTR [eax]
 1015400:	add    BYTE PTR [eax-0x54d5ff24],dl
 1015406:	fild   WORD PTR [eax]
 1015408:	add    BYTE PTR [edi-0x67ffff1e],dl
 101540e:	loop   0x1015410
 1015410:	add    BYTE PTR [eax-0x59eeff19],bl
 1015416:	jmp    0x3100:0xe9a81100
 101541d:	mov    edx,0xba3600ed
 1015422:	out    dx,al
 1015423:	add    BYTE PTR [ebx-0x54],bh
 1015426:	rol    BYTE PTR [eax],0x7b
 1015429:	mov    dl,0xc5
 101542b:	add    BYTE PTR [esi],bh
 101542d:	ret    0xeb
 1015430:	ds shr dh,0x0
 1015434:	inc    eax
 1015435:	shr    ch,0x0
 1015438:	pop    ecx
 1015439:	leave  
 101543a:	in     eax,dx
 101543b:	add    BYTE PTR [ebp-0x32],dl
 101543e:	repnz add BYTE PTR [edx-0x33],bl
 1015442:	lock add BYTE PTR [esi-0x29],ch
 1015446:	icebp  
 1015447:	add    BYTE PTR [ecx-0x29],dh
 101544a:	icebp  
 101544b:	add    BYTE PTR [eax-0x27],dh
 101544e:	cmc    
 101544f:	add    BYTE PTR [edx-0x23],bh
 1015452:	icebp  
 1015453:	add    BYTE PTR [ebp+ebx*8-0xf],bh
 1015457:	add    BYTE PTR [ebp-0x24],bh
 101545a:	test   DWORD PTR [eax],0x93a2b7
 1015460:	test   BYTE PTR [ecx-0x5d33ff46],ch
 1015466:	mov    es,WORD PTR [eax]
 1015468:	aam    0xa7
 101546a:	nop
 101546b:	add    dl,ch
 101546d:	mov    dh,0x99
 101546f:	add    bh,al
 1015471:	mov    dl,0xa3
 1015473:	add    al,cl
 1015475:	mov    dl,0xa3
 1015477:	add    bh,cl
 1015479:	mov    ecx,0xbed400a9
 101547e:	scas   al,BYTE PTR es:[edi]
 101547f:	add    al,bl
 1015481:	ret    0xb2
 1015484:	(bad)  
 1015485:	lds    edi,FWORD PTR [ecx-0x41352600]
 101548b:	add    BYTE PTR [ebx+esi*4-0x477cff3d],cl
 1015492:	enter  0x9900,0xbf
 1015496:	aad    0x0
 1015498:	xchg   esp,eax
 1015499:	ret    
 101549a:	into   
 101549b:	add    BYTE PTR [eax-0x72ff303b],bl
 10154a1:	(bad)  
 10154a2:	aam    0x0
 10154a4:	call   0xd7d3:0xb300dfd3
 10154ab:	add    BYTE PTR [edx-0x44ff192a],ah
 10154b1:	fsubr  st(5),st
 10154b3:	add    BYTE PTR [edi-0x6dff071d],al
 10154b9:	in     eax,0xf6
 10154bb:	add    BYTE PTR [eax+ebp*8-0x186dff09],dl
 10154c2:	clc    
 10154c3:	add    BYTE PTR [edi+eiz*8-0x1553ff12],ch
 10154ca:	repnz add BYTE PTR [ebx-0x59ff0312],ah
 10154d1:	icebp  
 10154d2:	test   BYTE PTR [eax],0xb4
 10154d5:	idiv   dl
 10154d7:	add    BYTE PTR [ebp-0x45ff030d],dh
 10154dd:	icebp  
 10154de:	stc    
 10154df:	add    BYTE PTR [edx-0x41ff0109],bh
 10154e5:	idiv   esp
 10154e7:	add    BYTE PTR [edi-0x46ff0108],dh
 10154ed:	stc    
 10154ee:	cli    
 10154ef:	add    BYTE PTR [ecx-0x42ff0308],bh
 10154f5:	clc    
 10154f6:	std    
 10154f7:	add    bh,bl
 10154f9:	int3   
 10154fa:	rol    DWORD PTR [eax],0xd8
 10154fd:	aad    0xd3
 10154ff:	add    al,ah
 1015501:	ror    al,cl
 1015503:	add    dl,ch
 1015505:	loopne 0x10154df
 1015507:	add    dl,dh
 1015509:	jmp    0x10154f2
 101550b:	add    ah,bh
 101550d:	sti    
 101550e:	cli    
 101550f:	add    ch,bh
 1015511:	cld    
 1015512:	sti    
 1015513:	add    ch,bh
 1015515:	cld    
 1015516:	cld    
	...
 1015773:	add    BYTE PTR [ebx],bh
 1015775:	add    DWORD PTR [ecx],eax
 1015777:	add    DWORD PTR [ecx],eax
 1015779:	add    DWORD PTR [ecx],eax
 101577b:	push   cs
 101577c:	adc    eax,0x49
 1015781:	add    BYTE PTR [ebx],bh
 1015783:	add    DWORD PTR [ebx],edi
 1015785:	addr16 gs fs inc esi
 1015789:	inc    ebp
 101578a:	add    DWORD PTR ds:0x160b0c,ebx
 1015790:	cmp    eax,DWORD PTR [ecx]
 1015792:	cmp    esp,DWORD PTR [edi+0x3b]
 1015795:	addr16 aas 
 1015797:	ds cmp eax,0x22260145
 101579d:	sbb    al,0x3
 101579f:	add    BYTE PTR [ebx],bh
 10157a1:	cmp    esp,DWORD PTR [bx+0x40]
 10157a5:	addr16 addr16 gs inc bp
 10157aa:	add    DWORD PTR [eax],ebp
 10157ac:	and    DWORD PTR [esi],ebx
 10157ae:	add    eax,DWORD PTR [eax]
 10157b0:	cmp    esp,DWORD PTR [edi+0x40]
 10157b3:	addr16 inc edx
 10157b5:	addr16 aas 
 10157b7:	aas    
 10157b8:	arpl   WORD PTR [ebp+0x1],ax
 10157bb:	sub    BYTE PTR [ecx],ah
 10157bd:	push   ds
 10157be:	add    eax,0x42674000
 10157c3:	addr16 inc ebx
 10157c5:	addr16 addr16 add DWORD PTR [bx+di],eax
 10157ca:	add    DWORD PTR [eax],ebp
 10157cc:	and    DWORD PTR [esi],ebx
 10157ce:	push   es
 10157cf:	add    BYTE PTR [edx+0x67],al
 10157d2:	inc    ebx
 10157d3:	addr16 inc esp
 10157d5:	addr16 addr16 add DWORD PTR [bx+di+0x62],eax
 10157db:	sub    BYTE PTR [ecx],ah
 10157dd:	push   ds
 10157de:	pop    es
 10157df:	add    BYTE PTR [ebx+0x67],al
 10157e2:	inc    esp
 10157e3:	addr16 inc esp
 10157e5:	inc    esp
 10157e6:	inc    ebx
 10157e7:	inc    ecx
 10157e8:	inc    ecx
 10157e9:	bound  ebp,QWORD PTR [edx]
 10157eb:	daa    
 10157ec:	and    DWORD PTR [esi],ebx
 10157ee:	or     BYTE PTR [eax],al
 10157f0:	inc    esp
 10157f1:	addr16 inc esp
 10157f3:	inc    esp
 10157f4:	inc    ebx
 10157f5:	cmp    edi,DWORD PTR [ebx]
 10157f7:	bound  esi,QWORD PTR [edi]
 10157f9:	xor    DWORD PTR [ecx],ebp
 10157fb:	sub    BYTE PTR [ecx],ah
 10157fd:	push   ds
 10157fe:	or     BYTE PTR [eax],al
 1015800:	inc    esp
 1015801:	inc    esp
 1015802:	inc    ebx
 1015803:	cmp    edi,DWORD PTR [ebx]
 1015805:	bound  edi,QWORD PTR [ecx]
 1015807:	push   ebx
 1015808:	xor    BYTE PTR ss:[edx],ch
 101580b:	sub    BYTE PTR [ecx],ah
 101580d:	push   ds
 101580e:	or     DWORD PTR [eax],eax
 1015810:	add    BYTE PTR [eax],al
 1015812:	add    BYTE PTR [edx],dl
 1015814:	sub    al,0x34
 1015816:	cmp    DWORD PTR [edx+0x37],edx
 1015819:	xor    BYTE PTR [edx],ch
 101581b:	sub    BYTE PTR [ecx],ah
 101581d:	push   ds
 101581e:	or     al,BYTE PTR [eax]
 1015820:	add    BYTE PTR [eax],al
 1015822:	add    BYTE PTR [edx],dl
 1015824:	sub    al,0x32
 1015826:	cmp    DWORD PTR [ebp+esi*1+0x31],edx
 101582a:	sub    ch,BYTE PTR [eax]
 101582c:	and    bl,BYTE PTR [esi]
 101582e:	or     eax,0x0
 1015833:	pop    ss
 1015834:	xor    edx,DWORD PTR [ecx+0x58]
 1015837:	pop    ecx
 1015838:	pop    esp
 1015839:	pop    ecx
 101583a:	push   edi
 101583b:	cmp    DWORD PTR [edx],esi
 101583d:	and    eax,0xf
 1015842:	add    BYTE PTR [eax],bl
 1015844:	popa   
 1015845:	popa   
 1015846:	popa   
 1015847:	pop    edi
 1015848:	popa   
 1015849:	popa   
 101584a:	pop    edi
 101584b:	popa   
 101584c:	pop    esp
 101584d:	pop    esp
 101584e:	adc    BYTE PTR [eax],al
 1015850:	add    BYTE PTR [eax],al
 1015852:	add    BYTE PTR [ebx+0x2e],cl
 1015855:	dec    esp
 1015856:	dec    edi
 1015857:	push   esi
 1015858:	pop    ecx
 1015859:	pop    ecx
 101585a:	push   ebp
 101585b:	dec    edi
 101585c:	sbb    DWORD PTR cs:[eax+eax*1],edi
 1015860:	add    BYTE PTR [eax],al
 1015862:	add    BYTE PTR [eax],al
 1015864:	push   eax
 1015865:	dec    edx
 1015866:	sub    eax,0x12111218
 101586b:	sbb    eax,DWORD PTR [edi+0x4e]
 101586e:	add    BYTE PTR [eax],al
 1015870:	lock add eax,DWORD PTR [eax]
 1015873:	add    al,al
 1015875:	add    DWORD PTR [eax],eax
 1015877:	add    BYTE PTR [eax],al
 1015879:	add    DWORD PTR [eax],eax
 101587b:	add    BYTE PTR [eax],al
 101587d:	add    DWORD PTR [eax],eax
 101587f:	add    BYTE PTR [eax],al
 1015881:	add    DWORD PTR [eax],eax
 1015883:	add    BYTE PTR [eax],al
 1015885:	add    DWORD PTR [eax],eax
 1015887:	add    BYTE PTR [eax],al
 1015889:	add    DWORD PTR [eax],eax
 101588b:	add    BYTE PTR [eax],al
 101588d:	add    DWORD PTR [eax],eax
 101588f:	add    BYTE PTR [eax],al
 1015891:	add    DWORD PTR [eax],eax
 1015893:	add    BYTE PTR [eax],al
 1015895:	add    DWORD PTR [eax],eax
 1015897:	add    al,ah
 1015899:	add    DWORD PTR [eax],eax
 101589b:	add    al,ah
 101589d:	add    DWORD PTR [eax],eax
 101589f:	add    al,ah
 10158a1:	add    DWORD PTR [eax],eax
 10158a3:	add    al,ah
 10158a5:	add    DWORD PTR [eax],eax
 10158a7:	add    al,ah
 10158a9:	add    DWORD PTR [eax],eax
 10158ab:	add    al,dh
 10158ad:	add    eax,DWORD PTR [eax]
 10158af:	add    BYTE PTR [eax],ch
 10158b1:	add    BYTE PTR [eax],al
 10158b3:	add    BYTE PTR [eax],ah
 10158b5:	add    BYTE PTR [eax],al
 10158b7:	add    BYTE PTR [eax+0x0],al
 10158ba:	add    BYTE PTR [eax],al
 10158bc:	add    DWORD PTR [eax],eax
 10158be:	and    BYTE PTR [eax],al
 10158c0:	add    BYTE PTR [eax],al
 10158c2:	add    BYTE PTR [eax],al
 10158c4:	adc    BYTE PTR [eax],0x0
	...
 1015903:	add    BYTE PTR [edi+0x63ff93a2],dh
 1015909:	dec    ecx
 101590a:	xor    eax,0x354963ff
 101590f:	jmp    DWORD PTR [ebx+0x49]
 1015912:	xor    eax,0x354963ff
 1015917:	jmp    DWORD PTR [ebx+0x49]
 101591a:	xor    eax,0x354963ff
 101591f:	jmp    DWORD PTR [ebx+0x49]
 1015922:	xor    eax,0x354963ff
 1015927:	jmp    DWORD PTR [ebx+0x49]
 101592a:	xor    eax,0x354963ff
 101592f:	inc    DWORD PTR [eax]
	...
 1015981:	add    BYTE PTR [eax],al
 1015983:	add    BYTE PTR [edi-0x6c5e],dh
 1015989:	(bad)  
 101598a:	(bad)  
 101598b:	push   DWORD PTR [edi-0x48006c5e]
 1015991:	mov    ds:0xa2b7ff93,al
 1015996:	xchg   ebx,eax
 1015997:	push   DWORD PTR [edi-0x48006c5e]
 101599d:	mov    ds:0xa2b7ff93,al
 10159a2:	xchg   ebx,eax
 10159a3:	push   DWORD PTR [edi-0x48006c5e]
 10159a9:	mov    ds:0x4963ff93,al
 10159ae:	xor    eax,0xff
	...
 1015a03:	add    BYTE PTR [edi-0x6c5e],dh
 1015a09:	(bad)  
 1015a0a:	(bad)  
 1015a0b:	(bad)  
 1015a0c:	(bad)  
 1015a0d:	(bad)  
 1015a0e:	(bad)  
 1015a0f:	(bad)  
 1015a10:	cld    
 1015a11:	cli    
 1015a12:	stc    
 1015a13:	push   edi
 1015a15:	icebp  
 1015a16:	out    dx,al
 1015a17:	push   ecx
 1015a19:	out    0xe1,eax
 1015a1b:	(bad)  
 1015a1c:	in     al,dx
 1015a1d:	fst    st(5)
 1015a1f:	jmp    esi
 1015a21:	ror    ecx,cl
 1015a23:	jmp    ecx
 1015a25:	retf   0xffbd
 1015a28:	mov    bh,0xa2
 1015a2a:	xchg   ebx,eax
 1015a2b:	jmp    DWORD PTR [ebx+0x49]
 1015a2e:	xor    eax,0xff
	...
 1015a73:	add    BYTE PTR [edi+0x63ff93a2],dh
 1015a79:	dec    ecx
 1015a7a:	xor    eax,0x354963ff
 1015a7f:	jmp    DWORD PTR [ebx+0x49]
 1015a82:	xor    eax,0x93a2b7ff
 1015a87:	(bad)  
 1015a88:	(bad)  
 1015a89:	(bad)  
 1015a8a:	(bad)  
 1015a8b:	(bad)  
 1015a8c:	jmp    0x6492:0xeaff749c
 1015a93:	(bad)  
 1015a94:	jmp    0x457c:0xe8ff5487
 1015a9b:	jmp    edx
 1015a9d:	jae    0x1015ad9
 1015a9f:	(bad)  
 1015aa0:	fldcw  WORD PTR [ebx+0x33]
 1015aa3:	jmp    esp
 1015aa5:	iret   
 1015aa6:	(bad)  
 1015aa7:	push   DWORD PTR [edi+0x63ff93a2]
 1015aad:	dec    ecx
 1015aae:	xor    eax,0xff
	...
 1015af3:	add    BYTE PTR [edi-0x6c5e],dh
 1015af9:	(bad)  
 1015afa:	(bad)  
 1015afb:	push   DWORD PTR [edi-0x48006c5e]
 1015b01:	mov    ds:0xa2b7ff93,al
 1015b06:	xchg   ebx,eax
 1015b07:	(bad)  
 1015b08:	(bad)  
 1015b09:	(bad)  
 1015b0a:	(bad)  
 1015b0b:	(bad)  
 1015b0c:	(bad)  
 1015b0d:	(bad)  
 1015b0e:	(bad)  
 1015b0f:	(bad)  
 1015b10:	(bad)  
 1015b11:	(bad)  
 1015b12:	(bad)  
 1015b13:	(bad)  
 1015b14:	std    
 1015b15:	cld    
 1015b16:	sti    
 1015b17:	(bad)  
 1015b18:	clc    
 1015b19:	repz lock push edx
 1015b1d:	jmp    0xe0ef5b05
 1015b22:	fdivr  st,st(7)
 1015b24:	out    0xd5,eax
 1015b26:	retf   
 1015b27:	push   DWORD PTR [edi+0x63ff93a2]
 1015b2d:	dec    ecx
 1015b2e:	xor    eax,0xff
	...
 1015b73:	add    BYTE PTR [edi-0x6c5e],dh
 1015b79:	(bad)  
 1015b7a:	(bad)  
 1015b7b:	(bad)  
 1015b7c:	(bad)  
 1015b7d:	(bad)  
 1015b7e:	(bad)  
 1015b7f:	(bad)  
 1015b80:	cld    
 1015b81:	cli    
 1015b82:	stc    
 1015b83:	(bad)  
 1015b84:	mov    edx,0xffff96a5
 1015b89:	(bad)  
 1015b8a:	(bad)  
 1015b8b:	(bad)  
 1015b8c:	jmp    0x6492:0xeaff749c
 1015b93:	(bad)  
 1015b94:	jmp    0x457c:0xe8ff5487
 1015b9b:	jmp    edx
 1015b9d:	jae    0x1015bd9
 1015b9f:	(bad)  
 1015ba0:	fldcw  WORD PTR [edx+0x33]
 1015ba3:	(bad)  
 1015ba4:	jmp    0x1015b81
 1015ba6:	sar    edi,cl
 1015ba8:	mov    bh,0xa2
 1015baa:	xchg   ebx,eax
 1015bab:	jmp    DWORD PTR [ebx+0x49]
 1015bae:	xor    eax,0x7b5f3eff
 1015bb3:	sar    BYTE PTR ds:0x3ba7795e,1
 1015bb9:	pop    esp
 1015bba:	js     0x1015c21
 1015bbc:	cmp    DWORD PTR [edx+0x77],ebx
 1015bbf:	or     BYTE PTR [eax],al
	...
 1015be1:	add    BYTE PTR [eax],al
 1015be3:	add    BYTE PTR [edi+0x63ff93a2],dh
 1015be9:	dec    ecx
 1015bea:	xor    eax,0x354963ff
 1015bef:	jmp    DWORD PTR [ebx+0x49]
 1015bf2:	xor    eax,0x93a2b7ff
 1015bf7:	(bad)  
 1015bf8:	(bad)  
 1015bf9:	(bad)  
 1015bfa:	(bad)  
 1015bfb:	(bad)  
 1015bfc:	jmp    0x6492:0xeaff749c
 1015c03:	(bad)  
 1015c04:	mov    esi,0xffff9aa9
 1015c09:	(bad)  
 1015c0a:	(bad)  
 1015c0b:	(bad)  
 1015c0c:	(bad)  
 1015c0d:	(bad)  
 1015c0e:	(bad)  
 1015c0f:	(bad)  
 1015c10:	(bad)  
 1015c11:	(bad)  
 1015c12:	(bad)  
 1015c13:	(bad)  
 1015c14:	(bad)  
 1015c15:	(bad)  
 1015c16:	(bad)  
 1015c17:	(bad)  
 1015c18:	(bad)  
 1015c19:	std    
 1015c1a:	cld    
 1015c1b:	(bad)  
 1015c1c:	stc    
 1015c1d:	cmc    
 1015c1e:	repnz push esp
 1015c21:	jmp    0x1015c09
 1015c23:	(bad)  
 1015c24:	out    dx,al
 1015c25:	loope  0x1015c01
 1015c27:	push   DWORD PTR [edi+0x63ff93a2]
 1015c2d:	dec    ecx
 1015c2e:	xor    eax,0xaa7e24ff
 1015c33:	out    dx,eax
 1015c34:	xor    BYTE PTR [esi-0x6f],ch
 1015c37:	out    dx,eax
 1015c38:	aaa    
 1015c39:	pusha  
 1015c3a:	jg     0x1015c33
 1015c3c:	cmp    bl,BYTE PTR [edx+0x78]
 1015c3f:	in     al,dx
 1015c40:	cmp    DWORD PTR [ecx+0x76],ebx
 1015c43:	xchg   esi,eax
 1015c44:	aaa    
 1015c45:	pop    eax
 1015c46:	jne    0x1015c5e
	...
 1015c64:	mov    bh,0xa2
 1015c66:	xchg   ebx,eax
 1015c67:	(bad)  
 1015c68:	(bad)  
 1015c69:	(bad)  
 1015c6a:	(bad)  
 1015c6b:	push   DWORD PTR [edi-0x48006c5e]
 1015c71:	mov    ds:0xa2b7ff93,al
 1015c76:	xchg   ebx,eax
 1015c77:	(bad)  
 1015c78:	(bad)  
 1015c79:	(bad)  
 1015c7a:	(bad)  
 1015c7b:	(bad)  
 1015c7c:	(bad)  
 1015c7d:	(bad)  
 1015c7e:	(bad)  
 1015c7f:	(bad)  
 1015c80:	(bad)  
 1015c81:	(bad)  
 1015c82:	(bad)  
 1015c83:	inc    ebx
 1015c85:	scas   al,BYTE PTR es:[edi]
 1015c86:	sahf   
 1015c87:	(bad)  
 1015c88:	(bad)  
 1015c89:	(bad)  
 1015c8a:	(bad)  
 1015c8b:	(bad)  
 1015c8c:	jmp    0x6492:0xeaff749b
 1015c93:	(bad)  
 1015c94:	jmp    0x457c:0xe8ff5487
 1015c9b:	jmp    edx
 1015c9d:	jae    0x1015cd9
 1015c9f:	(bad)  
 1015ca0:	fldcw  WORD PTR [ebx+0x33]
 1015ca3:	push   ecx
 1015ca5:	out    0xe1,eax
 1015ca7:	push   DWORD PTR [edi+0x63ff93a2]
 1015cad:	dec    ecx
 1015cae:	xor    eax,0xe5a502ff
 1015cb3:	inc    DWORD PTR [ecx]
 1015cb5:	mov    eax,ds:0x9e04ffe2
 1015cba:	(bad)  
 1015cbc:	push   ss
 1015cbd:	xchg   BYTE PTR [ecx-0x799bcf0b],bh
 1015cc3:	icebp  
 1015cc4:	cmp    BYTE PTR [eax+0x75],bl
 1015cc7:	xlat   BYTE PTR ds:[ebx]
	...
 1015ce4:	mov    bh,0xa2
 1015ce6:	xchg   ebx,eax
 1015ce7:	(bad)  
 1015ce8:	(bad)  
 1015ce9:	(bad)  
 1015cea:	(bad)  
 1015ceb:	(bad)  
 1015cec:	(bad)  
 1015ced:	(bad)  
 1015cee:	(bad)  
 1015cef:	(bad)  
 1015cf0:	cld    
 1015cf1:	cli    
 1015cf2:	stc    
 1015cf3:	(bad)  
 1015cf4:	mov    edx,0xffff96a5
 1015cf9:	(bad)  
 1015cfa:	(bad)  
 1015cfb:	(bad)  
 1015cfc:	jmp    0x6492:0xeaff749c
 1015d03:	dec    eax
 1015d05:	mov    dl,0xa3
 1015d07:	(bad)  
 1015d08:	(bad)  
 1015d09:	(bad)  
 1015d0a:	(bad)  
 1015d0b:	(bad)  
 1015d0c:	(bad)  
 1015d0d:	(bad)  
 1015d0e:	(bad)  
 1015d0f:	(bad)  
 1015d10:	(bad)  
 1015d11:	(bad)  
 1015d12:	(bad)  
 1015d13:	(bad)  
 1015d14:	(bad)  
 1015d15:	(bad)  
 1015d16:	(bad)  
 1015d17:	(bad)  
 1015d18:	(bad)  
 1015d19:	(bad)  
 1015d1a:	(bad)  
 1015d1b:	(bad)  
 1015d1c:	(bad)  
 1015d1d:	(bad)  
 1015d1e:	(bad)  
 1015d1f:	(bad)  
 1015d20:	cli    
 1015d21:	div    ebp
 1015d23:	push   ebp
 1015d25:	in     eax,dx
 1015d26:	jmp    0x94a4152a
 1015d2b:	jmp    DWORD PTR [ebx+0x49]
 1015d2e:	xor    eax,0xe7a601ff
 1015d33:	inc    DWORD PTR [eax]
 1015d35:	mov    ds:0xa002ffe4,eax
 1015d3a:	(bad)  
 1015d3c:	add    ebx,DWORD PTR [ebp-0x68fc0025]
 1015d42:	aam    0xff
 1015d44:	cmp    DWORD PTR [ecx+0x76],ebx
 1015d47:	inc    DWORD PTR [eax]
	...
 1015d61:	add    BYTE PTR [eax],al
 1015d63:	add    BYTE PTR [edi-0x6c5e],dh
 1015d69:	(bad)  
 1015d6a:	(bad)  
 1015d6b:	(bad)  
 1015d6c:	jmp    0x6492:0xeaff749c
 1015d73:	(bad)  
 1015d74:	mov    esi,0xffff9aa9
 1015d79:	(bad)  
 1015d7a:	(bad)  
 1015d7b:	(bad)  
 1015d7c:	(bad)  
 1015d7d:	(bad)  
 1015d7e:	(bad)  
 1015d7f:	(bad)  
 1015d80:	(bad)  
 1015d81:	(bad)  
 1015d82:	(bad)  
 1015d83:	dec    esp
 1015d85:	mov    dh,0xa7
 1015d87:	(bad)  
 1015d88:	(bad)  
 1015d89:	(bad)  
 1015d8a:	(bad)  
 1015d8b:	(bad)  
 1015d8c:	jmp    0x6592:0xeaff749c
 1015d93:	(bad)  
 1015d94:	jmp    0x457c:0xe8ff5487
 1015d9b:	(bad)  
 1015d9c:	(bad)  
 1015d9d:	(bad)  
 1015d9e:	(bad)  
 1015d9f:	(bad)  
 1015da0:	std    
 1015da1:	cld    
 1015da2:	sti    
 1015da3:	push   DWORD PTR [edi-0x48006c5e]
 1015da9:	mov    ds:0x4a64ff93,al
 1015dae:	inc    DWORD PTR ss:[ecx]
 1015db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1015db2:	out    0xff,eax
 1015db4:	add    BYTE PTR [ebx-0x5ffc001c],ah
 1015dba:	(bad)  
 1015dbc:	add    al,0x9d
 1015dbe:	(bad)  
 1015dc0:	add    bl,BYTE PTR [eax+0x5a39ffd6]
 1015dc6:	ja     0x1015dc7
	...
 1015de4:	mov    bh,0xa2
 1015de6:	xchg   ebx,eax
 1015de7:	(bad)  
 1015de8:	(bad)  
 1015de9:	(bad)  
 1015dea:	(bad)  
 1015deb:	(bad)  
 1015dec:	(bad)  
 1015ded:	(bad)  
 1015dee:	(bad)  
 1015def:	(bad)  
 1015df0:	(bad)  
 1015df1:	(bad)  
 1015df2:	(bad)  
 1015df3:	inc    ebx
 1015df5:	scas   al,BYTE PTR es:[edi]
 1015df6:	sahf   
 1015df7:	(bad)  
 1015df8:	(bad)  
 1015df9:	(bad)  
 1015dfa:	(bad)  
 1015dfb:	(bad)  
 1015dfc:	jmp    0x6492:0xeaff749b
 1015e03:	call   ecx
 1015e05:	mov    ebx,0xffffffab
 1015e0a:	(bad)  
 1015e0b:	(bad)  
 1015e0c:	(bad)  
 1015e0d:	(bad)  
 1015e0e:	(bad)  
 1015e0f:	(bad)  
 1015e10:	(bad)  
 1015e11:	(bad)  
 1015e12:	(bad)  
 1015e13:	(bad)  
 1015e14:	(bad)  
 1015e15:	(bad)  
 1015e16:	(bad)  
 1015e17:	(bad)  
 1015e18:	(bad)  
 1015e19:	(bad)  
 1015e1a:	(bad)  
 1015e1b:	(bad)  
 1015e1c:	(bad)  
 1015e1d:	(bad)  
 1015e1e:	(bad)  
 1015e1f:	push   DWORD PTR [edi+0x64ff93a2]
 1015e25:	dec    edx
 1015e26:	jmp    DWORD PTR ss:[edx+ecx*2+0x36]
 1015e2b:	jmp    DWORD PTR [edx+ecx*2+0x36]
 1015e2f:	inc    DWORD PTR [ecx]
 1015e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1015e32:	out    0xff,eax
 1015e34:	add    BYTE PTR [ebx-0x60fd001c],ah
 1015e3a:	(bad)  
 1015e3c:	add    al,0x9c
 1015e3e:	(bad)  
 1015e40:	add    bl,BYTE PTR [eax+0x5a39ffd6]
 1015e46:	ja     0x1015e47
	...
 1015e64:	mov    edx,0xffff96a5
 1015e69:	(bad)  
 1015e6a:	(bad)  
 1015e6b:	(bad)  
 1015e6c:	jmp    0x6492:0xeaff749c
 1015e73:	dec    eax
 1015e75:	mov    dl,0xa3
 1015e77:	(bad)  
 1015e78:	(bad)  
 1015e79:	(bad)  
 1015e7a:	(bad)  
 1015e7b:	(bad)  
 1015e7c:	(bad)  
 1015e7d:	(bad)  
 1015e7e:	(bad)  
 1015e7f:	(bad)  
 1015e80:	(bad)  
 1015e81:	(bad)  
 1015e82:	(bad)  
 1015e83:	call   ebp
 1015e85:	mov    edi,0xffffffaf
 1015e8a:	(bad)  
 1015e8b:	(bad)  
 1015e8c:	(bad)  
 1015e8d:	(bad)  
 1015e8e:	(bad)  
 1015e8f:	(bad)  
 1015e90:	(bad)  
 1015e91:	(bad)  
 1015e92:	(bad)  
 1015e93:	(bad)  
 1015e94:	(bad)  
 1015e95:	(bad)  
 1015e96:	(bad)  
 1015e97:	(bad)  
 1015e98:	(bad)  
 1015e99:	(bad)  
 1015e9a:	(bad)  
 1015e9b:	(bad)  
 1015e9c:	(bad)  
 1015e9d:	(bad)  
 1015e9e:	(bad)  
 1015e9f:	(bad)  
 1015ea0:	mov    ecx,0xd4ff95a4
 1015ea5:	lds    edi,FWORD PTR [edx+0x354963ff]
 1015eab:	(bad)  
 1015eac:	mov    edi,0x1ff9ba9
 1015eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1015eb2:	out    0xff,eax
 1015eb4:	add    DWORD PTR [ebx-0x60fc001c],esp
 1015eba:	(bad)  
 1015ebc:	add    ebx,DWORD PTR [ebx+ebx*8-0x2967fd01]
 1015ec3:	(bad)  
 1015ec4:	cmp    bl,BYTE PTR [ebx+0x77]
 1015ec7:	inc    DWORD PTR [eax]
	...
 1015ee1:	add    BYTE PTR [eax],al
 1015ee3:	add    BYTE PTR [esi-0x6557],bh
 1015ee9:	(bad)  
 1015eea:	(bad)  
 1015eeb:	(bad)  
 1015eec:	(bad)  
 1015eed:	(bad)  
 1015eee:	(bad)  
 1015eef:	(bad)  
 1015ef0:	(bad)  
 1015ef1:	(bad)  
 1015ef2:	(bad)  
 1015ef3:	dec    esp
 1015ef5:	mov    dh,0xa7
 1015ef7:	(bad)  
 1015ef8:	(bad)  
 1015ef9:	(bad)  
 1015efa:	(bad)  
 1015efb:	(bad)  
 1015efc:	jmp    0x6592:0xeaff749c
 1015f03:	(bad)  
 1015f04:	fadd   st,st(2)
 1015f06:	mov    dl,0xff
 1015f08:	(bad)  
 1015f09:	(bad)  
 1015f0a:	(bad)  
 1015f0b:	(bad)  
 1015f0c:	(bad)  
 1015f0d:	(bad)  
 1015f0e:	(bad)  
 1015f0f:	(bad)  
 1015f10:	(bad)  
 1015f11:	(bad)  
 1015f12:	(bad)  
 1015f13:	(bad)  
 1015f14:	(bad)  
 1015f15:	(bad)  
 1015f16:	(bad)  
 1015f17:	(bad)  
 1015f18:	(bad)  
 1015f19:	(bad)  
 1015f1a:	(bad)  
 1015f1b:	(bad)  
 1015f1c:	(bad)  
 1015f1d:	(bad)  
 1015f1e:	(bad)  
 1015f1f:	inc    eax
 1015f21:	stos   DWORD PTR es:[edi],eax
 1015f22:	pushf  
 1015f23:	jmp    DWORD PTR [ebx+0x49]
 1015f26:	xor    eax,0xc1ccdfff
 1015f2b:	dec    DWORD PTR [esi+ebp*4]
 1015f2e:	jmp    0xff:0xe8a601ff
 1015f35:	mov    ds:0xa003ffe4,eax
 1015f3a:	(bad)  
 1015f3c:	add    ebx,DWORD PTR [esp+ebx*8-0x2967fd01]
 1015f43:	(bad)  
 1015f44:	cmp    bl,BYTE PTR [eax+edi*2-0x1]
	...
 1015f64:	ret    
 1015f65:	scas   al,BYTE PTR es:[edi]
 1015f66:	sahf   
 1015f67:	(bad)  
 1015f68:	(bad)  
 1015f69:	(bad)  
 1015f6a:	(bad)  
 1015f6b:	(bad)  
 1015f6c:	jmp    0x6492:0xeaff749b
 1015f73:	call   ecx
 1015f75:	mov    ebx,0xffffffab
 1015f7a:	(bad)  
 1015f7b:	(bad)  
 1015f7c:	(bad)  
 1015f7d:	(bad)  
 1015f7e:	(bad)  
 1015f7f:	(bad)  
 1015f80:	(bad)  
 1015f81:	(bad)  
 1015f82:	(bad)  
 1015f83:	(bad)  
 1015f84:	fadd   st,st(2)
 1015f86:	mov    dl,0xff
 1015f88:	fadd   st,st(2)
 1015f8a:	mov    dl,0xff
 1015f8c:	fadd   st,st(2)
 1015f8e:	mov    dl,0xff
 1015f90:	fadd   st,st(2)
 1015f92:	mov    dl,0xff
 1015f94:	fadd   st,st(2)
 1015f96:	mov    dl,0xff
 1015f98:	aam    0xbe
 1015f9a:	scas   al,BYTE PTR es:[edi]
 1015f9b:	dec    edi
 1015f9d:	mov    ecx,0xb3c9ffa9
 1015fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1015fa3:	(bad)  
 1015fa4:	(bad)  
 1015fa6:	sar    edi,0x24
 1015fa9:	mov    eax,0xae0dffee
 1015fae:	jmp    0x1015faf
 1015fb0:	add    DWORD PTR [edi-0x5cff0019],esp
 1015fb6:	jecxz  0x1015fb7
 1015fb8:	add    esp,DWORD PTR [eax-0x62fc0021]
 1015fbe:	(bad)  
 1015fc0:	add    bl,BYTE PTR [eax+0x5c3bffd6]
 1015fc6:	jns    0x1015fc7
	...
 1015fe4:	enter  0xa3b2,0xff
 1015fe8:	(bad)  
 1015fe9:	(bad)  
 1015fea:	(bad)  
 1015feb:	(bad)  
 1015fec:	(bad)  
 1015fed:	(bad)  
 1015fee:	(bad)  
 1015fef:	(bad)  
 1015ff0:	(bad)  
 1015ff1:	(bad)  
 1015ff2:	(bad)  
 1015ff3:	call   ebp
 1015ff5:	mov    edi,0xffffffaf
 1015ffa:	(bad)  
 1015ffb:	(bad)  
 1015ffc:	(bad)  
 1015ffd:	(bad)  
 1015ffe:	(bad)  
 1015fff:	(bad)  
 1016000:	(bad)  
 1016001:	(bad)  
 1016002:	(bad)  
 1016003:	(bad)  
 1016004:	(bad)  
 1016005:	(bad)  
 1016006:	(bad)  
 1016007:	(bad)  
 1016008:	(bad)  
 1016009:	(bad)  
 101600a:	(bad)  
 101600b:	(bad)  
 101600c:	(bad)  
 101600d:	(bad)  
 101600e:	(bad)  
 101600f:	push   DWORD PTR [edi-0x2b006c5e]
 1016015:	lds    edi,FWORD PTR [edx+0x354963ff]
 101601b:	push   DWORD PTR [edi+0x64ff93a2]
 1016021:	shl    cl,cl
 1016023:	inc    DWORD PTR [ebp-0x3b]
 1016026:	out    dx,eax
 1016027:	jmp    DWORD PTR ds:0xbffedb9
 101602d:	lods   eax,DWORD PTR ds:[esi]
 101602e:	jmp    0x101602f
 1016030:	add    BYTE PTR [edi-0x5cff0019],ah
 1016036:	in     al,0xff
 1016038:	add    ah,BYTE PTR [eax-0x62fc0021]
 101603e:	(bad)  
 1016040:	add    bl,BYTE PTR [eax+0x5e3cffd6]
 1016046:	jns    0x1016047
	...
 1016064:	int3   
 1016065:	mov    dh,0xa7
 1016067:	(bad)  
 1016068:	(bad)  
 1016069:	(bad)  
 101606a:	(bad)  
 101606b:	(bad)  
 101606c:	jmp    0x6592:0xeaff749c
 1016073:	(bad)  
 1016074:	fadd   st,st(2)
 1016076:	mov    dl,0xff
 1016078:	(bad)  
 1016079:	(bad)  
 101607a:	(bad)  
 101607b:	(bad)  
 101607c:	(bad)  
 101607d:	(bad)  
 101607e:	(bad)  
 101607f:	(bad)  
 1016080:	(bad)  
 1016081:	(bad)  
 1016082:	(bad)  
 1016083:	(bad)  
 1016084:	(bad)  
 1016085:	(bad)  
 1016086:	(bad)  
 1016087:	(bad)  
 1016088:	(bad)  
 1016089:	(bad)  
 101608a:	(bad)  
 101608b:	(bad)  
 101608c:	(bad)  
 101608d:	(bad)  
 101608e:	(bad)  
 101608f:	push   DWORD PTR [edi+0x63ff93a2]
 1016095:	dec    ecx
 1016096:	xor    eax,0xc1ccdfff
 101609b:	inc    DWORD PTR [eax+eiz*8-0x2d9b000c]
 10160a2:	icebp  
 10160a3:	inc    DWORD PTR [ebp-0x3b]
 10160a6:	out    dx,eax
 10160a7:	jmp    DWORD PTR ds:0xcffedb8
 10160ad:	scas   al,BYTE PTR es:[edi]
 10160ae:	jmp    0xff:0xe8a601ff
 10160b5:	mov    ds:0xa002ffe4,eax
 10160ba:	(bad)  
 10160bc:	add    ebx,DWORD PTR [esp+ebx*8-0x2967fd01]
 10160c3:	(bad)  
 10160c4:	cmp    al,0x5e
 10160c6:	jp     0x10160c7
	...
 10160e4:	sar    DWORD PTR [ebx-0x55],1
 10160ea:	(bad)  
 10160eb:	(bad)  
 10160ec:	(bad)  
 10160ed:	(bad)  
 10160ee:	(bad)  
 10160ef:	(bad)  
 10160f0:	(bad)  
 10160f1:	(bad)  
 10160f2:	(bad)  
 10160f3:	(bad)  
 10160f4:	fadd   st,st(2)
 10160f6:	mov    dl,0xff
 10160f8:	fadd   st,st(2)
 10160fa:	mov    dl,0xff
 10160fc:	fadd   st,st(2)
 10160fe:	mov    dl,0xff
 1016100:	fadd   st,st(2)
 1016102:	mov    dl,0xff
 1016104:	fadd   st,st(2)
 1016106:	mov    dl,0xff
 1016108:	aam    0xbe
 101610a:	scas   al,BYTE PTR es:[edi]
 101610b:	dec    edi
 101610d:	mov    ecx,0xb3c9ffa9
 1016112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016113:	jmp    eax
 1016115:	rol    edi,1
 1016117:	jmp    DWORD PTR [ebp+ebp*8-0x1f7b000a]
 101611e:	hlt    
 101611f:	jmp    DWORD PTR [edx+edx*8-0xf]
 1016123:	inc    DWORD PTR [ebp-0x3b]
 1016126:	out    dx,eax
 1016127:	jmp    DWORD PTR ds:0xcffedb8
 101612d:	lods   eax,DWORD PTR ds:[esi]
 101612e:	jmp    0x101612f
 1016130:	add    DWORD PTR [esi-0x5cff0019],esp
 1016136:	jecxz  0x1016137
 1016138:	add    ebx,DWORD PTR [edi-0x63fc0021]
 101613e:	(bad)  
 1016140:	add    bl,BYTE PTR [eax+0x5f3dffd6]
 1016146:	jnp    0x1016147
	...
 1016164:	aad    0xbf
 1016166:	scas   eax,DWORD PTR es:[edi]
 1016167:	(bad)  
 1016168:	(bad)  
 1016169:	(bad)  
 101616a:	(bad)  
 101616b:	(bad)  
 101616c:	(bad)  
 101616d:	(bad)  
 101616e:	(bad)  
 101616f:	(bad)  
 1016170:	(bad)  
 1016171:	(bad)  
 1016172:	(bad)  
 1016173:	(bad)  
 1016174:	(bad)  
 1016175:	(bad)  
 1016176:	(bad)  
 1016177:	(bad)  
 1016178:	(bad)  
 1016179:	(bad)  
 101617a:	(bad)  
 101617b:	(bad)  
 101617c:	(bad)  
 101617d:	(bad)  
 101617e:	(bad)  
 101617f:	push   DWORD PTR [edi-0x2b006c5e]
 1016185:	lds    edi,FWORD PTR [edx+0x354963ff]
 101618b:	push   DWORD PTR [edi-0x79006c5e]
 1016191:	loopne 0x1016187
 1016193:	jmp    DWORD PTR [esi-0x5b000812]
 1016199:	in     eax,dx
 101619a:	idiv   bh
 101619c:	test   eax,esp
 101619e:	hlt    
 101619f:	jmp    DWORD PTR [ebx+edx*8-0xf]
 10161a3:	inc    DWORD PTR [esi+eax*8-0x11]
 10161a7:	jmp    DWORD PTR [ecx+edi*4]
 10161aa:	in     eax,dx
 10161ab:	dec    DWORD PTR ds:0x1ffeaae
 10161b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10161b2:	call   0xe5a462b6
 10161b7:	inc    DWORD PTR [ebx]
 10161b9:	lahf   
 10161ba:	(bad)  
 10161bc:	add    ebx,DWORD PTR [ebx+ebx*8-0x2967fd01]
 10161c3:	(bad)  
 10161c4:	ds pusha 
 10161c6:	jl     0x10161c7
	...
 10161e4:	fadd   st,st(2)
 10161e6:	mov    dl,0xff
 10161e8:	(bad)  
 10161e9:	(bad)  
 10161ea:	(bad)  
 10161eb:	(bad)  
 10161ec:	(bad)  
 10161ed:	(bad)  
 10161ee:	(bad)  
 10161ef:	(bad)  
 10161f0:	(bad)  
 10161f1:	(bad)  
 10161f2:	(bad)  
 10161f3:	(bad)  
 10161f4:	(bad)  
 10161f5:	(bad)  
 10161f6:	(bad)  
 10161f7:	(bad)  
 10161f8:	(bad)  
 10161f9:	(bad)  
 10161fa:	(bad)  
 10161fb:	(bad)  
 10161fc:	(bad)  
 10161fd:	(bad)  
 10161fe:	(bad)  
 10161ff:	push   DWORD PTR [edi+0x63ff93a2]
 1016205:	dec    ecx
 1016206:	xor    eax,0xc1ccdfff
 101620b:	jmp    DWORD PTR [ebp-0x2d]
 101620e:	repnz inc DWORD PTR [esi-0x59000b1f]
 1016215:	out    dx,al
 1016216:	idiv   edi
 1016218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016219:	in     eax,dx
 101621a:	idiv   bh
 101621c:	test   al,ah
 101621e:	hlt    
 101621f:	jmp    DWORD PTR [edx+edx*8-0xf]
 1016223:	inc    DWORD PTR [ebp-0x3b]
 1016226:	out    dx,eax
 1016227:	jmp    DWORD PTR [ecx+edi*4]
 101622a:	in     eax,dx
 101622b:	dec    DWORD PTR [esi+ebp*4]
 101622e:	jmp    0xff:0xe8a701ff
 1016235:	mov    ds:0xa003ffe4,eax
 101623a:	(bad)  
 101623c:	add    ebx,DWORD PTR [ebp-0x67fd0025]
 1016242:	(bad)  
 1016243:	(bad)  
 1016244:	aas    
 1016245:	popa   
 1016246:	jge    0x1016247
	...
 1016264:	fadd   st,st(2)
 1016266:	mov    dl,0xff
 1016268:	fadd   st,st(2)
 101626a:	mov    dl,0xff
 101626c:	fadd   st,st(2)
 101626e:	mov    dl,0xff
 1016270:	fadd   st,st(2)
 1016272:	mov    dl,0xff
 1016274:	fadd   st,st(2)
 1016276:	mov    dl,0xff
 1016278:	aam    0xbe
 101627a:	scas   al,BYTE PTR es:[edi]
 101627b:	push   DWORD PTR [edi-0x48006c5e]
 1016281:	mov    ds:0xccdfff93,al
 1016286:	sar    edi,0x48
 1016289:	(bad)  
 101628a:	out    dx,eax
 101628b:	jmp    DWORD PTR [esi-0x2e]
 101628e:	icebp  
 101628f:	inc    DWORD PTR [esi-0x59000b20]
 1016295:	out    dx,al
 1016296:	idiv   edi
 1016298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016299:	in     eax,dx
 101629a:	idiv   bh
 101629c:	test   al,ah
 101629e:	hlt    
 101629f:	jmp    DWORD PTR [edx+edx*8-0xe]
 10162a3:	inc    DWORD PTR [ebp-0x3b]
 10162a6:	out    dx,eax
 10162a7:	jmp    DWORD PTR [ecx+edi*4]
 10162aa:	in     eax,dx
 10162ab:	dec    DWORD PTR [esi+ebp*4]
 10162ae:	jmp    0x10162af
 10162b0:	add    DWORD PTR [edi-0x5cff0019],esp
 10162b6:	in     al,0xff
 10162b8:	add    esp,DWORD PTR [eax-0x62fb0021]
 10162be:	(bad)  
 10162c0:	add    dl,BYTE PTR [edi+0x6140ffd7]
 10162c6:	jge    0x10162c7
	...
 10162fc:	arpl   WORD PTR [esi-0x50f2005c],cx
 1016302:	in     al,dx
 1016303:	jmp    FWORD PTR [eax]
 1016305:	mov    ecx,0xc647ffee
 101630a:	out    dx,eax
 101630b:	jmp    DWORD PTR [ebp-0x2d]
 101630e:	icebp  
 101630f:	inc    DWORD PTR [esi-0x59000b1f]
 1016315:	out    dx,al
 1016316:	idiv   edi
 1016318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016319:	in     eax,dx
 101631a:	idiv   bh
 101631c:	test   eax,esp
 101631e:	hlt    
 101631f:	jmp    DWORD PTR [edx+edx*8-0xf]
 1016323:	inc    DWORD PTR [ebp+eax*8-0x11]
 1016327:	jmp    DWORD PTR ds:0xcffedb9
 101632d:	lods   eax,DWORD PTR ds:[esi]
 101632e:	jmp    0xff:0xe7a601ff
 1016335:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016336:	jecxz  0x1016337
 1016338:	add    ebx,DWORD PTR [edi-0x62fb0021]
 101633e:	(bad)  
 1016340:	add    dl,BYTE PTR [edi+0x6240ffd6]
 1016346:	jle    0x1016347
	...
 101637c:	arpl   WORD PTR [edi-0x51f2005b],cx
 1016382:	jmp    0x1016383
 1016384:	sub    BYTE PTR [ecx-0x39b80013],bh
 101638a:	out    dx,eax
 101638b:	jmp    DWORD PTR [ebp-0x2d]
 101638e:	repnz inc DWORD PTR [esi-0x59000b1f]
 1016395:	out    dx,al
 1016396:	idiv   edi
 1016398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016399:	in     eax,dx
 101639a:	idiv   bh
 101639c:	test   al,ah
 101639e:	hlt    
 101639f:	jmp    DWORD PTR [edx+edx*8-0xf]
 10163a3:	inc    DWORD PTR [ebp-0x3b]
 10163a6:	out    dx,eax
 10163a7:	jmp    DWORD PTR [ecx+edi*4]
 10163aa:	in     eax,dx
 10163ab:	dec    DWORD PTR [ebp*4-0x58fe0016]
 10163b2:	call   0xe5a464b6
 10163b7:	inc    DWORD PTR [ebx]
 10163b9:	mov    al,ds:0x9d03ffdf
 10163be:	(bad)  
 10163c0:	add    bl,BYTE PTR [eax+0x6340ffd6]
 10163c6:	jg     0x10163c7
	...
 10163fc:	fs nop
 10163fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10163ff:	dec    DWORD PTR [esi]
 1016401:	scas   eax,DWORD PTR es:[edi]
 1016402:	in     al,dx
 1016403:	jmp    DWORD PTR [edi]
 1016405:	mov    ecx,0xc648ffee
 101640a:	out    dx,eax
 101640b:	jmp    DWORD PTR [esi-0x2d]
 101640e:	icebp  
 101640f:	inc    DWORD PTR [esi-0x59000b1f]
 1016415:	out    dx,al
 1016416:	idiv   edi
 1016418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016419:	in     eax,dx
 101641a:	idiv   bh
 101641c:	test   al,ah
 101641e:	hlt    
 101641f:	jmp    DWORD PTR [edx+edx*8-0xf]
 1016423:	inc    DWORD PTR [ebp-0x3b]
 1016426:	out    dx,eax
 1016427:	jmp    DWORD PTR ds:0xdffedb8
 101642d:	lods   eax,DWORD PTR ds:[esi]
 101642e:	jmp    0xff:0xe7a701ff
 1016435:	mov    ds:0xa003ffe3,eax
 101643a:	(bad)  
 101643c:	add    ebx,DWORD PTR [ebp-0x67fd0024]
 1016442:	(bad)  
 1016443:	inc    DWORD PTR [edx+0x65]
 1016446:	cmp    bh,0x0
	...
 1016479:	add    BYTE PTR [eax],al
 101647b:	add    BYTE PTR [ebp-0x6e],ah
 101647e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101647f:	dec    DWORD PTR ds:0x27ffecaf
 1016485:	mov    edx,0xc747ffee
 101648a:	out    dx,eax
 101648b:	jmp    DWORD PTR [ebp-0x2e]
 101648e:	icebp  
 101648f:	inc    DWORD PTR [esi-0x59000b20]
 1016495:	out    dx,al
 1016496:	idiv   bh
 1016498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1016499:	in     eax,dx
 101649a:	idiv   edi
 101649c:	test   eax,esp
 101649e:	cmc    
 101649f:	jmp    DWORD PTR [edx+edx*8-0xe]
 10164a3:	inc    DWORD PTR [ebp-0x3b]
 10164a6:	out    dx,eax
 10164a7:	jmp    DWORD PTR [eax+edi*4]
 10164aa:	in     eax,dx
 10164ab:	dec    DWORD PTR [ebp*4-0x58fe0016]
 10164b2:	call   0xe5a465b6
 10164b7:	inc    DWORD PTR [edx]
 10164b9:	lahf   
 10164ba:	(bad)  
 10164bc:	add    ebx,DWORD PTR [ebx+ebx*8-0x2967fe01]
 10164c3:	inc    DWORD PTR [ebx+0x65]
 10164c6:	cmp    edi,0x0
	...
 10164fc:	xchg   dx,ax
 10164fe:	test   al,0xff
 1016500:	or     eax,0x27ffebae
 1016505:	mov    ecx,0xc647ffed
 101650a:	out    dx,eax
 101650b:	jmp    DWORD PTR [ebp-0x2e]
 101650e:	icebp  
 101650f:	inc    DWORD PTR [esi-0x59000b20]
 1016515:	out    dx,al
 1016516:	idiv   edi
 1016518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016519:	in     eax,dx
 101651a:	idiv   bh
 101651c:	test   eax,esp
 101651e:	hlt    
 101651f:	jmp    DWORD PTR [ebp-0x2e]
 1016522:	repnz inc DWORD PTR [ebp-0x3b]
 1016526:	out    dx,eax
 1016527:	jmp    DWORD PTR [eax+edi*4]
 101652a:	in     eax,dx
 101652b:	dec    DWORD PTR [ebp*4-0x58fe0015]
 1016532:	out    0xff,eax
 1016534:	add    DWORD PTR [ebx-0x5ffc001c],esp
 101653a:	(bad)  
 101653c:	add    ebx,DWORD PTR [ebp-0x67fd0024]
 1016542:	(bad)  
 1016543:	inc    DWORD PTR [ebx+0x67]
 1016546:	cmp    edi,0x0
	...
 101657c:	addr16 xchg ebx,eax
 101657e:	test   eax,0xebaf0eff
 1016583:	jmp    DWORD PTR [edi]
 1016585:	mov    ecx,0xc648ffee
 101658a:	out    dx,al
 101658b:	jmp    DWORD PTR [esi-0x2e]
 101658e:	repnz inc DWORD PTR [edi-0x59000b20]
 1016595:	out    dx,al
 1016596:	idiv   edi
 1016598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016599:	in     eax,dx
 101659a:	idiv   bh
 101659c:	test   al,ah
 101659e:	hlt    
 101659f:	jmp    DWORD PTR [edx+edx*8-0xe]
 10165a3:	inc    DWORD PTR [ebp-0x3b]
 10165a6:	out    dx,eax
 10165a7:	jmp    DWORD PTR ds:0xcffedb9
 10165ad:	lods   eax,DWORD PTR ds:[esi]
 10165ae:	jmp    0x1ff:0xe8a601ff
 10165b5:	mov    ds:0xa003ffe4,eax
 10165ba:	(bad)  
 10165bc:	add    al,0x9d
 10165be:	(bad)  
 10165c0:	add    bl,BYTE PTR [eax+0x6744ffd6]
 10165c6:	cmp    bh,0x0
	...
 10165f9:	add    BYTE PTR [eax],al
 10165fb:	add    BYTE PTR [eax-0x6b],ch
 10165fe:	stos   BYTE PTR es:[edi],al
 10165ff:	dec    DWORD PTR [esi]
 1016601:	scas   eax,DWORD PTR es:[edi]
 1016602:	in     al,dx
 1016603:	push   DWORD PTR ds:0x6dffefbf
 1016609:	aad    0xf3
 101660b:	call   FWORD PTR [ebx-0x47000617]
 1016611:	cmc    
 1016612:	cld    
 1016613:	inc    ebx
 1016615:	stc    
 1016616:	std    
 1016617:	inc    ebp
 1016619:	cli    
 101661a:	(bad)  
 101661b:	inc    esi
 101661d:	cli    
 101661e:	(bad)  
 101661f:	inc    esi
 1016621:	cli    
 1016622:	(bad)  
 1016623:	inc    ebx
 1016625:	stc    
 1016626:	(bad)  
 1016627:	jmp    FWORD PTR [ebx-0x6b000411]
 101662d:	in     eax,0xf9
 101662f:	jmp    DWORD PTR [ebx-0x30]
 1016632:	repnz push DWORD PTR [eax]
 1016635:	mov    eax,0xa510ffea
 101663a:	loope  0x101663b
 101663c:	add    ebx,DWORD PTR [ebx+ebx*8-0x2967fd01]
 1016643:	inc    DWORD PTR [eax+ebp*2-0x7c]
 1016647:	inc    DWORD PTR [eax]
	...
 1016679:	add    BYTE PTR [eax],al
 101667b:	add    BYTE PTR [eax-0x6a],ch
 101667e:	stos   DWORD PTR es:[edi],eax
 101667f:	call   DWORD PTR [edx-0x35]
 1016682:	repz call DWORD PTR [esi-0x3900061a]
 1016689:	cli    
 101668a:	(bad)  
 101668b:	inc    esi
 101668d:	cli    
 101668e:	(bad)  
 101668f:	inc    esi
 1016691:	cli    
 1016692:	(bad)  
 1016693:	inc    esi
 1016695:	cli    
 1016696:	(bad)  
 1016697:	inc    esi
 1016699:	cli    
 101669a:	(bad)  
 101669b:	inc    esi
 101669d:	cli    
 101669e:	(bad)  
 101669f:	inc    esi
 10166a1:	cli    
 10166a2:	(bad)  
 10166a3:	inc    esi
 10166a5:	cli    
 10166a6:	(bad)  
 10166a7:	inc    esi
 10166a9:	cli    
 10166aa:	(bad)  
 10166ab:	inc    esi
 10166ad:	cli    
 10166ae:	(bad)  
 10166af:	inc    esi
 10166b1:	cli    
 10166b2:	(bad)  
 10166b3:	inc    esi
 10166b5:	cli    
 10166b6:	(bad)  
 10166b7:	inc    esi
 10166b9:	cli    
 10166ba:	(bad)  
 10166bb:	(bad)  
 10166bc:	jns    0x1016693
 10166be:	lock call DWORD PTR [esi]
 10166c1:	mov    ds:0x6945ffdb,al
 10166c6:	test   bh,bh
	...
 10166fc:	xchg   DWORD PTR [ebx-0x174a0043],ebp
 1016702:	out    dx,eax
 1016703:	inc    ebp
 1016705:	stc    
 1016706:	std    
 1016707:	inc    esi
 1016709:	cli    
 101670a:	(bad)  
 101670b:	inc    esi
 101670d:	cli    
 101670e:	(bad)  
 101670f:	inc    esi
 1016711:	cli    
 1016712:	(bad)  
 1016713:	inc    esi
 1016715:	cli    
 1016716:	(bad)  
 1016717:	inc    esi
 1016719:	cli    
 101671a:	(bad)  
 101671b:	inc    esi
 101671d:	cli    
 101671e:	(bad)  
 101671f:	inc    esi
 1016721:	cli    
 1016722:	(bad)  
 1016723:	inc    esi
 1016725:	cli    
 1016726:	(bad)  
 1016727:	inc    esi
 1016729:	cli    
 101672a:	(bad)  
 101672b:	inc    esi
 101672d:	cli    
 101672e:	(bad)  
 101672f:	inc    esi
 1016731:	cli    
 1016732:	(bad)  
 1016733:	inc    esi
 1016735:	cli    
 1016736:	(bad)  
 1016737:	inc    esi
 1016739:	cli    
 101673a:	(bad)  
 101673b:	inc    esi
 101673d:	cli    
 101673e:	(bad)  
 101673f:	inc    DWORD PTR [eax+0x6bfee0ca]
 1016745:	mov    BYTE PTR [ebp+0xff],bl
	...
 101677b:	add    BYTE PTR [edx-0x69],ch
 101677e:	lods   eax,DWORD PTR ds:[esi]
 101677f:	mov    ds:0xf7ab9568,al
 1016784:	jle    0x1016732
 1016786:	mov    ebp,0xd0c394ff
 101678b:	jmp    DWORD PTR [esi-0x49001e28]
 1016791:	call   0xf3c16785
 1016796:	clc    
 1016797:	inc    esp
 1016799:	clc    
 101679a:	cld    
 101679b:	inc    esi
 101679d:	cli    
 101679e:	(bad)  
 101679f:	inc    esi
 10167a1:	cli    
 10167a2:	(bad)  
 10167a3:	inc    esi
 10167a5:	cli    
 10167a6:	(bad)  
 10167a7:	inc    esp
 10167a9:	clc    
 10167aa:	cld    
 10167ab:	(bad)  
 10167ac:	mov    esi,0xb3fff7f1
 10167b1:	in     eax,0xec
 10167b3:	jmp    DWORD PTR [edx-0x7500232e]
 10167b9:	mov    bh,0xc6
 10167bb:	inc    DWORD PTR [ebp+0x74]
 10167be:	xchg   edx,eax
 10167bf:	hlt    
 10167c0:	dec    eax
 10167c1:	outs   dx,BYTE PTR ds:[esi]
 10167c2:	mov    ecx,edi
 10167c4:	inc    edi
 10167c5:	ins    BYTE PTR es:[edi],dx
 10167c6:	xchg   BYTE PTR [esi+0x0],ch
	...
 1016800:	imul   edx,DWORD PTR [edi-0x6c98f155],0x91656eaa
 101680a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101680b:	mov    ebx,0xe5a58f63
 1016810:	popa   
 1016811:	mov    WORD PTR [ebx-0x5f75a008],fs
 1016817:	(bad)  
 1016818:	pop    ebp
 1016819:	mov    BYTE PTR [esi-0x637aa401],bl
 101681f:	call   FWORD PTR [edx-0x7d]
 1016822:	call   0x56ff:0x988158ff
 1016829:	jg     0x10167c1
 101682b:	call   DWORD PTR [esp+edi*2-0x6c]
 101682f:	(bad)  
 1016830:	push   edx
 1016831:	jp     0x10167c5
 1016833:	clc    
 1016834:	push   eax
 1016835:	jbe    0x10167c7
 1016837:	call   0xc28fdc8a
 101683c:	dec    esp
 101683d:	jb     0x10167ca
 101683f:	jge    0x101688b
 1016841:	outs   dx,DWORD PTR ds:[esi]
 1016842:	mov    DWORD PTR [ebx],esp
 1016844:	dec    eax
 1016845:	ins    BYTE PTR es:[edi],dx
 1016846:	xchg   DWORD PTR [edx],eax
	...
 10168d8:	jmp    eax
 10168da:	add    edi,edi
 10168dc:	jmp    eax
 10168de:	add    edi,edi
 10168e0:	jmp    eax
 10168e2:	add    edi,edi
 10168e4:	inc    BYTE PTR [eax]
 10168e6:	add    edi,edi
 10168e8:	inc    BYTE PTR [eax]
 10168ea:	add    edi,edi
 10168ec:	inc    BYTE PTR [eax]
 10168ee:	add    BYTE PTR [edi],bh
 10168f0:	loopne 0x10168f2
 10168f2:	add    BYTE PTR [edi],cl
 10168f4:	loopne 0x10168f6
 10168f6:	add    BYTE PTR [edi],cl
 10168f8:	loopne 0x10168fa
 10168fa:	add    BYTE PTR [edi],cl
 10168fc:	loopne 0x10168fe
 10168fe:	add    BYTE PTR [edi],cl
 1016900:	loopne 0x1016902
 1016902:	add    BYTE PTR [edi],cl
 1016904:	loopne 0x1016906
 1016906:	add    BYTE PTR [edi],cl
 1016908:	loopne 0x101690a
 101690a:	add    BYTE PTR [edi],cl
 101690c:	loopne 0x101690e
 101690e:	add    BYTE PTR [edi],cl
 1016910:	loopne 0x1016912
 1016912:	add    BYTE PTR [edi],cl
 1016914:	loopne 0x1016916
 1016916:	add    BYTE PTR [edi],cl
 1016918:	loopne 0x101691a
 101691a:	add    BYTE PTR [edi],cl
 101691c:	loopne 0x101691e
 101691e:	add    BYTE PTR [edi],cl
 1016920:	loopne 0x1016922
 1016922:	add    BYTE PTR [edi],cl
 1016924:	loopne 0x1016926
 1016926:	add    BYTE PTR [edi],cl
 1016928:	inc    DWORD PTR [eax-0x7f00f100]
 101692e:	add    BYTE PTR [edi],cl
 1016930:	inc    DWORD PTR [eax-0x7f00f100]
 1016936:	add    BYTE PTR [edi],cl
 1016938:	inc    DWORD PTR [eax-0x7f00f100]
 101693e:	add    BYTE PTR [edi],cl
 1016940:	inc    DWORD PTR [eax-0x7f00f100]
 1016946:	add    BYTE PTR [edi],cl
 1016948:	inc    DWORD PTR [eax-0x7f00f100]
 101694e:	add    BYTE PTR [edi],cl
 1016950:	inc    eax
 1016952:	add    BYTE PTR [edi],cl
 1016954:	(bad)  
 1016955:	(bad)  
 1016956:	(bad)  
 1016957:	jmp    FWORD PTR [eax]
 1016959:	add    BYTE PTR [eax],al
 101695b:	add    BYTE PTR [eax],dl
 101695d:	add    BYTE PTR [eax],al
 101695f:	add    BYTE PTR [eax],ah
 1016961:	add    BYTE PTR [eax],al
 1016963:	add    BYTE PTR [ecx],al
 1016965:	add    BYTE PTR [eax],ah
 1016967:	add    BYTE PTR [eax],al
 1016969:	add    BYTE PTR [eax],al
 101696b:	add    BYTE PTR [eax+0x4],al
	...
 101698e:	add    BYTE PTR [eax],al
 1016990:	mov    bh,0xa2
 1016992:	xchg   ebx,eax
 1016993:	jmp    DWORD PTR [ebx+0x49]
 1016996:	xor    eax,0x354963ff
 101699b:	jmp    DWORD PTR [ebx+0x49]
 101699e:	xor    eax,0x354963ff
 10169a3:	jmp    DWORD PTR [ebx+0x49]
 10169a6:	xor    eax,0x354963ff
 10169ab:	push   DWORD PTR [eax+esi*2]
 10169ae:	nop
 10169af:	call   DWORD PTR [edx-0x77]
 10169b2:	scas   al,BYTE PTR es:[edi]
 10169b3:	call   FWORD PTR [ecx+0xffd5bf]
	...
 10169c5:	add    BYTE PTR [eax],al
 10169c7:	add    BYTE PTR [edi+0x63ff93a2],dh
 10169cd:	dec    ecx
 10169ce:	xor    eax,0x93a2b7ff
 10169d3:	(bad)  
 10169d4:	cld    
 10169d5:	sti    
 10169d6:	cli    
 10169d7:	(bad)  
 10169d8:	jmp    0xc8d2:0xe0ffd8e0
 10169df:	(bad)  
 10169e0:	fcmove st,st(2)
 10169e2:	mov    esi,0xb8c4d6ff
 10169e7:	jmp    DWORD PTR [ebx+0x49]
 10169ea:	xor    eax,0xc1800cff
 10169ef:	call   DWORD PTR [esi]
 10169f1:	ins    DWORD PTR es:[edi],dx
 10169f2:	lahf   
 10169f3:	jmp    DWORD PTR [edi]
 10169f5:	pop    ebx
 10169f6:	cmp    bh,0x5b
 10169f9:	mov    gs,WORD PTR [ebp+0xff]
 10169ff:	add    BYTE PTR [edi+0x63ff93a2],dh
 1016a05:	dec    ecx
 1016a06:	xor    eax,0x93a2b7ff
 1016a0b:	(bad)  
 1016a0c:	cld    
 1016a0d:	sti    
 1016a0e:	cli    
 1016a0f:	push   DWORD PTR [edi-0x3006c5e]
 1016a15:	sti    
 1016a16:	cli    
 1016a17:	(bad)  
 1016a18:	jmp    0x10169d0
 1016a1a:	call   0xccff:0x90a7d4ff
 1016a21:	mov    ds:0xc4d6ff8e,al
 1016a26:	mov    eax,0x354963ff
 1016a2b:	inc    DWORD PTR [eax]
 1016a2d:	xchg   edi,eax
 1016a2e:	loop   0x1016a2f
 1016a30:	add    BYTE PTR [ebx-0x78fc0029],dl
 1016a36:	(bad)  
 1016a37:	jmp    FWORD PTR ds:0xff694a
 1016a3d:	add    BYTE PTR [eax],al
 1016a3f:	add    BYTE PTR [edi-0x3006c5e],dh
 1016a45:	sti    
 1016a46:	cli    
 1016a47:	push   DWORD PTR [edi-0x3006c5e]
 1016a4d:	sti    
 1016a4e:	cli    
 1016a4f:	inc    edi
 1016a51:	mov    dl,0xa3
 1016a53:	(bad)  
 1016a54:	std    
 1016a55:	cld    
 1016a56:	sti    
 1016a57:	(bad)  
 1016a58:	std    
 1016a59:	cld    
 1016a5a:	cld    
 1016a5b:	push   edx
 1016a5d:	jmp    0x1016a46
 1016a5f:	(bad)  
 1016a60:	jmp    0xbac6:0xd7ffd8e0
 1016a67:	jmp    DWORD PTR [ebx+0x49]
 1016a6a:	xor    eax,0xe79900ff
 1016a6f:	inc    DWORD PTR [ecx]
 1016a71:	(bad)  
 1016a72:	(bad)  
 1016a74:	add    cl,BYTE PTR [edx+edx*8+0x6b4d2dff]
 1016a7b:	inc    DWORD PTR [eax]
 1016a7d:	add    BYTE PTR [eax],al
 1016a7f:	add    BYTE PTR [edi-0x3006c5e],dh
 1016a85:	sti    
 1016a86:	cli    
 1016a87:	inc    edi
 1016a89:	mov    dl,0xa3
 1016a8b:	(bad)  
 1016a8c:	std    
 1016a8d:	cld    
 1016a8e:	sti    
 1016a8f:	dec    edi
 1016a91:	mov    ecx,0xfbfcffa9
 1016a96:	cli    
 1016a97:	(bad)  
 1016a98:	jmp    0x99b7:0xeaff99b7
 1016a9f:	(bad)  
 1016aa0:	fcom   st(5)
 1016aa2:	sar    edi,cl
 1016aa4:	xlat   BYTE PTR ds:[ebx]
 1016aa5:	(bad)  
 1016aa6:	mov    edx,0x354963ff
 1016aab:	inc    DWORD PTR [eax]
 1016aad:	cwde   
 1016aae:	jecxz  0x1016aaf
 1016ab0:	add    DWORD PTR [eax-0x72fe0025],edx
 1016ab6:	aad    0xff
 1016ab8:	cs dec esi
 1016aba:	ins    BYTE PTR es:[edi],dx
 1016abb:	inc    DWORD PTR [eax]
 1016abd:	add    BYTE PTR [eax],al
 1016abf:	add    bh,al
 1016ac1:	mov    dl,0xa3
 1016ac3:	(bad)  
 1016ac4:	std    
 1016ac5:	cld    
 1016ac6:	sti    
 1016ac7:	dec    edi
 1016ac9:	mov    ecx,0xfbfcffa9
 1016ace:	cli    
 1016acf:	call   esp
 1016ad1:	mov    esi,0xfbfcffaf
 1016ad6:	cli    
 1016ad7:	(bad)  
 1016ad8:	cld    
 1016ad9:	sti    
 1016ada:	cli    
 1016adb:	(bad)  
 1016adc:	cld    
 1016add:	sti    
 1016ade:	cli    
 1016adf:	jmp    DWORD PTR [edx+ecx*2+0x36]
 1016ae3:	jmp    DWORD PTR [edx+ecx*2+0x36]
 1016ae7:	jmp    DWORD PTR [edx+ecx*2+0x36]
 1016aeb:	inc    DWORD PTR [ecx]
 1016aed:	cwde   
 1016aee:	jecxz  0x1016aef
 1016af0:	add    BYTE PTR [ebx-0x75fd0024],dl
 1016af6:	aam    0xff
 1016af8:	xor    dl,BYTE PTR [edx+0x6c]
 1016afb:	inc    DWORD PTR [eax]
 1016afd:	add    BYTE PTR [eax],al
 1016aff:	add    bh,cl
 1016b01:	mov    ecx,0xfbfcffa9
 1016b06:	cli    
 1016b07:	call   esp
 1016b09:	mov    esi,0xfbfcffaf
 1016b0e:	cli    
 1016b0f:	(bad)  
 1016b10:	fadd   st,st(2)
 1016b12:	mov    dl,0xff
 1016b14:	cld    
 1016b15:	sti    
 1016b16:	cli    
 1016b17:	(bad)  
 1016b18:	cld    
 1016b19:	sti    
 1016b1a:	cli    
 1016b1b:	(bad)  
 1016b1c:	cld    
 1016b1d:	sti    
 1016b1e:	cli    
 1016b1f:	jmp    DWORD PTR [edx+ecx*2+0x36]
 1016b23:	dec    eax
 1016b25:	mov    dl,0xa3
 1016b27:	(bad)  
 1016b28:	(bad)  
 1016b2a:	sar    edi,0x1
 1016b2d:	cwde   
 1016b2e:	jecxz  0x1016b2f
 1016b30:	add    BYTE PTR [eax-0x73fe0024],dl
 1016b36:	aam    0xff
 1016b38:	xor    edx,DWORD PTR [edx+esi*2-0x1]
 1016b3c:	add    BYTE PTR [eax],al
 1016b3e:	add    BYTE PTR [eax],al
 1016b40:	aam    0xbe
 1016b42:	scas   eax,DWORD PTR es:[edi]
 1016b43:	(bad)  
 1016b44:	cld    
 1016b45:	sti    
 1016b46:	cli    
 1016b47:	(bad)  
 1016b48:	fadd   st,st(2)
 1016b4a:	mov    dl,0xff
 1016b4c:	cld    
 1016b4d:	sti    
 1016b4e:	cli    
 1016b4f:	(bad)  
 1016b50:	fadd   st,st(2)
 1016b52:	mov    dl,0xff
 1016b54:	fadd   st,st(2)
 1016b56:	mov    dl,0xff
 1016b58:	aam    0xbf
 1016b5a:	scas   al,BYTE PTR es:[edi]
 1016b5b:	dec    eax
 1016b5d:	mov    dl,0xa3
 1016b5f:	dec    eax
 1016b61:	mov    dl,0xa3
 1016b63:	(bad)  
 1016b64:	(bad)  
 1016b66:	sar    edi,0x12
 1016b69:	test   eax,0x9900ffea
 1016b6e:	loope  0x1016b6f
 1016b70:	add    DWORD PTR [edi-0x75ff0025],ecx
 1016b76:	aad    0xff
 1016b78:	aaa    
 1016b79:	pop    ecx
 1016b7a:	je     0x1016b7b
 1016b7c:	add    BYTE PTR [eax],al
 1016b7e:	add    BYTE PTR [eax],al
 1016b80:	fadd   st,st(2)
 1016b82:	mov    dl,0xff
 1016b84:	cld    
 1016b85:	sti    
 1016b86:	cli    
 1016b87:	(bad)  
 1016b88:	fadd   st,st(2)
 1016b8a:	mov    dl,0xff
 1016b8c:	fadd   st,st(2)
 1016b8e:	mov    dl,0xff
 1016b90:	aam    0xbf
 1016b92:	scas   al,BYTE PTR es:[edi]
 1016b93:	push   DWORD PTR [edi-0x48006c5e]
 1016b99:	mov    ds:0xccdfff93,al
 1016b9e:	sar    edi,0x70
 1016ba1:	fxtract 
 1016ba3:	inc    DWORD PTR [eax-0x3f]
 1016ba6:	in     al,dx
 1016ba7:	call   DWORD PTR [ecx]
 1016ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1016baa:	jmp    0xff:0xe29901ff
 1016bb1:	nop
 1016bb2:	fdiv   st(7),st
 1016bb4:	add    cl,BYTE PTR [edx+edx*8+0x765b37ff]
 1016bbb:	inc    DWORD PTR [eax]
 1016bbd:	add    BYTE PTR [eax],al
 1016bbf:	add    al,bl
 1016bc1:	ret    0xffb2
 1016bc4:	fadd   st,st(2)
 1016bc6:	mov    dl,0xff
 1016bc8:	aam    0xbf
 1016bca:	scas   al,BYTE PTR es:[edi]
 1016bcb:	push   DWORD PTR [edi-0x48006c5e]
 1016bd1:	mov    ds:0xccdfff93,al
 1016bd6:	sar    edi,0x7c
 1016bd9:	(bad)  
 1016bdb:	call   DWORD PTR [eax+ebp*8-0x288e0009]
 1016be2:	icebp  
 1016be3:	(bad)  
 1016be4:	ds shr dh,0xff
 1016be8:	adc    DWORD PTR [ecx-0x67fe0016],ebp
 1016bee:	out    0xff,eax
 1016bf0:	add    BYTE PTR [ecx-0x75ff0025],dl
 1016bf6:	aad    0xff
 1016bf8:	ss pop ebp
 1016bfa:	ja     0x1016bfb
	...
 1016c0c:	pop    ebx
 1016c0d:	mov    ah,BYTE PTR [edx-0x1145c901]
 1016c13:	call   FWORD PTR [edx-0x33]
 1016c16:	lock (bad) 
 1016c18:	jp     0x1016bf7
 1016c1a:	icebp  
 1016c1b:	call   DWORD PTR [edx+0x71fff6e5]
 1016c21:	(bad)  
 1016c23:	(bad)  
 1016c24:	ds ret 0xffeb
 1016c28:	adc    ch,BYTE PTR [ecx-0x67fe0018]
 1016c2e:	jecxz  0x1016c2f
 1016c30:	add    BYTE PTR [eax-0x73fd0024],dl
 1016c36:	sar    bh,cl
 1016c38:	cmp    esp,DWORD PTR [eax+0x7d]
 1016c3b:	inc    DWORD PTR [eax]
	...
 1016c49:	add    BYTE PTR [eax],al
 1016c4b:	add    BYTE PTR [esi+ecx*4-0x5a],bl
 1016c4f:	push   DWORD PTR [ecx]
 1016c51:	mov    edx,0xca58ffed
 1016c56:	in     eax,dx
 1016c57:	(bad)  
 1016c58:	jp     0x1016c37
 1016c5a:	icebp  
 1016c5b:	call   DWORD PTR [edx+0x6efff8e7]
 1016c61:	xlat   BYTE PTR ds:[ebx]
 1016c62:	icebp  
 1016c63:	inc    DWORD PTR [eax-0x40]
 1016c66:	out    dx,al
 1016c67:	call   DWORD PTR [ecx]
 1016c69:	test   al,0xeb
 1016c6b:	inc    DWORD PTR [eax]
 1016c6d:	cwde   
 1016c6e:	jecxz  0x1016c6f
 1016c70:	add    BYTE PTR [edx-0x77fe002a],dl
 1016c76:	aam    0xff
 1016c78:	aas    
 1016c79:	fs cmp bh,0x0
	...
 1016c89:	add    BYTE PTR [eax],al
 1016c8b:	add    BYTE PTR [edi-0x6e],bl
 1016c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1016c8f:	call   DWORD PTR [ebp-0x32]
 1016c92:	repnz inc DWORD PTR [edi-0x5900071d]
 1016c99:	icebp  
 1016c9a:	idiv   bh
 1016c9c:	mov    ch,0xf7
 1016c9e:	sti    
 1016c9f:	(bad)  
 1016ca0:	mov    ecx,0xb4fffef7
 1016ca5:	idiv   cl
 1016ca7:	jmp    DWORD PTR [ebx+0x7dfffcee]
 1016cad:	fdivr  st(7),st
 1016caf:	call   FWORD PTR [ebx-0x38]
 1016cb2:	out    dx,al
 1016cb3:	jmp    FWORD PTR [edx]
 1016cb5:	stos   DWORD PTR es:[edi],eax
 1016cb6:	(bad)  
 1016cb8:	inc    ecx
 1016cb9:	data16 cmp bh,0x0
	...
 1016cc9:	add    BYTE PTR [eax],al
 1016ccb:	add    BYTE PTR [ecx-0x6d],ah
 1016cce:	lods   al,BYTE PTR ds:[esi]
 1016ccf:	(bad)  
 1016cd0:	mov    esi,0xb9fffcf7
 1016cd5:	stc    
 1016cd6:	sti    
 1016cd7:	(bad)  
 1016cd8:	mov    ebx,0xb9fffef7
 1016cdd:	stc    
 1016cde:	stc    
 1016cdf:	(bad)  
 1016ce0:	mov    edx,0xbcfffdf9
 1016ce5:	stc    
 1016ce6:	std    
 1016ce7:	push   DWORD PTR [edi-0x40000108]
 1016ced:	stc    
 1016cee:	cld    
 1016cef:	(bad)  
 1016cf0:	mov    ecx,0xbcfffcf8
 1016cf5:	clc    
 1016cf6:	(bad)  
 1016cf7:	inc    DWORD PTR [esi+0x6a]
 1016cfa:	test   bh,bh
	...
 1016d0c:	cwde   
 1016d0d:	(bad)
 1016d10:	jnp    0x1016cc4
 1016d12:	(bad)  
 1016d15:	(bad)  
 1016d16:	aam    0xff
 1016d18:	mov    ds:0xacffe6d6,al
 1016d1d:	jmp    0xfff9:0xf1bafff2
 1016d24:	mov    ch,0xf3
 1016d26:	cld    
 1016d27:	jmp    FWORD PTR [edi+eiz*8-0x2c650012]
 1016d2e:	(bad)  
 1016d30:	cmp    DWORD PTR [eax-0x65980038],0xffffffaa
 1016d37:	inc    DWORD PTR [ecx+ebp*4+0xffba]
	...
 1016d4e:	add    BYTE PTR [eax],al
 1016d50:	mov    ebx,0x94ffe5dc
 1016d55:	ret    
 1016d56:	into   
 1016d57:	(bad)  
 1016d58:	jnp    0x1016d06
 1016d5a:	sar    bh,0x66
 1016d5d:	cwde   
 1016d5e:	lods   al,BYTE PTR ds:[esi]
 1016d5f:	call   FWORD PTR [edx-0x74]
 1016d62:	mov    ds:0xa08658ff,eax
 1016d67:	call   FWORD PTR [edi-0x70]
 1016d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1016d6b:	push   DWORD PTR [eax-0x65]
 1016d6e:	mov    cl,0xff
 1016d70:	mov    WORD PTR [ebx-0x2c4c003d],?
 1016d76:	xlat   BYTE PTR ds:[ebx]
 1016d77:	inc    DWORD PTR [eax]
 1016d79:	add    BYTE PTR [eax],al
 1016d7b:	add    BYTE PTR [eax],al
 1016d7d:	add    BYTE PTR [eax],al
 1016d7f:	add    al,dh
 1016d81:	add    eax,DWORD PTR [eax]
 1016d83:	add    al,al
 1016d85:	add    DWORD PTR [eax],eax
 1016d87:	add    BYTE PTR [eax],al
 1016d89:	add    DWORD PTR [eax],eax
 1016d8b:	add    BYTE PTR [eax],al
 1016d8d:	add    DWORD PTR [eax],eax
 1016d8f:	add    BYTE PTR [eax],al
 1016d91:	add    DWORD PTR [eax],eax
 1016d93:	add    BYTE PTR [eax],al
 1016d95:	add    DWORD PTR [eax],eax
 1016d97:	add    BYTE PTR [eax],al
 1016d99:	add    DWORD PTR [eax],eax
 1016d9b:	add    BYTE PTR [eax],al
 1016d9d:	add    DWORD PTR [eax],eax
 1016d9f:	add    BYTE PTR [eax],al
 1016da1:	add    DWORD PTR [eax],eax
 1016da3:	add    BYTE PTR [eax],al
 1016da5:	add    DWORD PTR [eax],eax
 1016da7:	add    al,ah
 1016da9:	add    DWORD PTR [eax],eax
 1016dab:	add    al,ah
 1016dad:	add    DWORD PTR [eax],eax
 1016daf:	add    al,ah
 1016db1:	add    DWORD PTR [eax],eax
 1016db3:	add    al,ah
 1016db5:	add    DWORD PTR [eax],eax
 1016db7:	add    al,ah
 1016db9:	add    DWORD PTR [eax],eax
 1016dbb:	add    al,dh
 1016dbd:	add    eax,DWORD PTR [eax]
 1016dbf:	add    BYTE PTR [eax],ch
 1016dc1:	add    BYTE PTR [eax],al
 1016dc3:	add    BYTE PTR [eax],ah
 1016dc5:	add    BYTE PTR [eax],al
 1016dc7:	add    BYTE PTR [eax+0x0],al
 1016dca:	add    BYTE PTR [eax],al
 1016dcc:	add    DWORD PTR [eax],eax
 1016dce:	or     BYTE PTR [eax],al
	...
 1016dec:	inc    edi
 1016ded:	aas    
 1016dee:	aas    
 1016def:	add    BYTE PTR [ebp-0x13ff6f69],ch
 1016df5:	jmp    0xbae76ee2
 1016dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1016dfb:	add    al,bh
 1016dfd:	add    BYTE PTR [eax+eax*1-0xd],0x8c
 1016e02:	pop    eax
 1016e03:	add    dl,bl
 1016e05:	sbb    BYTE PTR [eax+0x0],0xf2
 1016e09:	xchg   esp,eax
 1016e0a:	gs add bl,bh
 1016e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1016e0e:	jl     0x1016e10
 1016e10:	imul   BYTE PTR [ebp-0x6f37ff79]
 1016e16:	je     0x1016e18
 1016e18:	cld    
 1016e19:	into   
 1016e1a:	mov    dh,0x0
 1016e1c:	jecxz  0x1016deb
 1016e1e:	ret    0x8d00
 1016e21:	ja     0x1016e8e
 1016e23:	add    ch,bh
 1016e25:	hlt    
 1016e26:	out    dx,eax
 1016e27:	add    BYTE PTR [esi-0xffd0ab],dl
 1016e2d:	cli    
 1016e2e:	test   DWORD PTR [eax],0x3c4e69
 1016e34:	jo     0x1016e8d
 1016e36:	inc    esi
 1016e37:	add    BYTE PTR [ecx-0x30ff7365],dh
 1016e3d:	mov    bh,0xa7
 1016e3f:	add    bh,dh
 1016e41:	loope  0x1016e15
 1016e43:	add    BYTE PTR [ebx+0x49],ah
 1016e46:	xor    eax,0x374b6500
 1016e4b:	add    BYTE PTR [esi+0x4c],ah
 1016e4e:	cmp    BYTE PTR [eax],al
 1016e50:	jo     0x1016eaa
 1016e52:	inc    esi
 1016e53:	add    BYTE PTR [ecx+0x71008494],ch
 1016e59:	push   ebx
 1016e5a:	cmp    eax,DWORD PTR [eax]
 1016e5c:	cmc    
 1016e5d:	out    dx,eax
 1016e5e:	jmp    0xc1ce4563
 1016e63:	add    bh,bh
 1016e65:	(bad)  
 1016e66:	stc    
 1016e67:	add    BYTE PTR [ebx-0x77ff625a],dl
 1016e6d:	in     eax,dx
 1016e6e:	jmp    0x1016e70
 1016e70:	sar    bh,0xff
 1016e73:	add    al,cl
 1016e75:	(bad)  
 1016e76:	inc    DWORD PTR [eax]
 1016e78:	loop   0x1016e79
 1016e7a:	inc    DWORD PTR [eax]
 1016e7c:	out    dx,eax
 1016e7d:	(bad)  
 1016e7e:	inc    DWORD PTR [eax]
 1016e80:	mov    edx,0xf900bebe
 1016e85:	std    
 1016e86:	std    
 1016e87:	add    bl,bh
 1016e89:	(bad)  
 1016e8a:	inc    BYTE PTR [eax]
 1016e8c:	std    
 1016e8d:	(bad)  
 1016e8e:	inc    BYTE PTR [eax]
 1016e90:	mov    edi,0xbc00fcfa
 1016e95:	cmc    
 1016e96:	test   DWORD PTR [eax],0xfffa81
 1016e9c:	mov    al,0xf3
 1016e9e:	test   BYTE PTR [eax],0x69
 1016ea1:	hlt    
 1016ea2:	inc    DWORD PTR [eax]
 1016ea4:	xchg   ebp,eax
 1016ea5:	clc    
 1016ea6:	inc    DWORD PTR [eax]
 1016ea8:	mov    al,0xe8
 1016eaa:	in     al,dx
 1016eab:	add    al,cl
 1016ead:	jecxz  0x1016e95
 1016eaf:	add    dl,dh
 1016eb1:	cld    
 1016eb2:	std    
 1016eb3:	add    BYTE PTR [edx-0x64ff0a17],bl
 1016eb9:	jmp    0xf6:0xeb9f00f6
 1016ec0:	mov    al,ds:0xa400f6eb
 1016ec5:	in     al,dx
 1016ec6:	test   DWORD PTR [eax],0xf7edaa
 1016ecc:	mov    cl,0xef
 1016ece:	clc    
 1016ecf:	add    BYTE PTR [ecx-0x35ff070f],bh
 1016ed5:	hlt    
 1016ed6:	cli    
 1016ed7:	add    bh,cl
 1016ed9:	cmc    
 1016eda:	cli    
 1016edb:	add    cl,bl
 1016edd:	idiv   ebx
 1016edf:	add    ch,bl
 1016ee1:	clc    
 1016ee2:	cld    
 1016ee3:	add    dh,ah
 1016ee5:	cli    
 1016ee6:	std    
 1016ee7:	add    ch,dh
 1016ee9:	std    
 1016eea:	inc    BYTE PTR [eax]
 1016eec:	idiv   esi
 1016eee:	inc    DWORD PTR [eax]
 1016ef0:	idiv   ch
 1016ef2:	inc    BYTE PTR [eax]
 1016ef4:	push   ecx
 1016ef5:	out    0xff,al
 1016ef7:	add    BYTE PTR [edi-0x6fff0112],cl
 1016efd:	in     al,0xf3
 1016eff:	add    BYTE PTR [edx-0x69ff0b1b],dl
 1016f05:	out    0xf4,eax
 1016f07:	add    BYTE PTR [ebp-0x5dff0916],bl
 1016f0d:	jmp    0x1016f06
 1016f0f:	add    BYTE PTR [esi-0x52ff0814],ah
 1016f15:	in     eax,dx
 1016f16:	clc    
 1016f17:	add    BYTE PTR [ebp-0x42ff0611],dh
 1016f1d:	icebp  
 1016f1e:	stc    
 1016f1f:	add    cl,al
 1016f21:	repnz cli 
 1016f23:	add    dh,al
 1016f25:	repz cli 
 1016f27:	add    dl,dl
 1016f29:	cmc    
 1016f2a:	sti    
 1016f2b:	add    ah,dl
 1016f2d:	cmc    
 1016f2e:	sti    
 1016f2f:	add    dl,ah
 1016f31:	clc    
 1016f32:	cld    
 1016f33:	add    cl,ch
 1016f35:	cli    
 1016f36:	std    
 1016f37:	add    dh,ch
 1016f39:	sti    
 1016f3a:	std    
 1016f3b:	add    cl,dh
 1016f3d:	cld    
 1016f3e:	inc    BYTE PTR [eax]
 1016f40:	sub    al,0xfe
 1016f43:	add    BYTE PTR [esi-0x76ff0e21],al
 1016f49:	loope  0x1016f3d
 1016f4b:	add    BYTE PTR [ecx+eiz*8-0x5693ff0d],cl
 1016f52:	mov    ch,0x0
 1016f54:	scas   al,BYTE PTR es:[edi]
 1016f55:	jmp    0xf8:0xecb500f7
 1016f5c:	(bad)  
 1016f5d:	icebp  
 1016f5e:	cli    
 1016f5f:	add    al,bh
 1016f61:	std    
 1016f62:	inc    BYTE PTR [eax]
 1016f64:	jno    0x1016f42
 1016f66:	test   DWORD PTR [eax],0xf3dc7a
 1016f6c:	jns    0x1016f46
 1016f6e:	out    dx,eax
 1016f6f:	add    BYTE PTR [esi-0x22],bh
 1016f72:	test   BYTE PTR [eax],0x7e
 1016f75:	(bad)  
 1016f77:	add    BYTE PTR [eax-0x7cff0b22],al
 1016f7d:	fdivrp st(4),st
 1016f7f:	add    BYTE PTR [edx-0x7aff0e24],al
 1016f85:	fdivrp st(4),st
 1016f87:	add    BYTE PTR [ecx-0x79ff061c],cl
 1016f8d:	loopne 0x1016f83
 1016f8f:	add    BYTE PTR [esi-0x77ff0b21],al
 1016f95:	fcomip st,st(4)
 1016f97:	add    BYTE PTR [ecx-0x74ff0a20],cl
 1016f9d:	loopne 0x1016f94
 1016f9f:	add    BYTE PTR [ebp-0x70ff0a1f],cl
 1016fa5:	loop   0x1016f9c
 1016fa7:	add    BYTE PTR [edi-0x6fff0a1f],cl
 1016fad:	loope  0x1016fa4
 1016faf:	add    BYTE PTR [ecx-0x6cff0a1e],dl
 1016fb5:	loop   0x1016fad
 1016fb7:	add    BYTE PTR [edx-0x6aff0a1d],dl
 1016fbd:	jecxz  0x1016fb5
 1016fbf:	add    BYTE PTR [ebp-0x68ff0a1d],dl
 1016fc5:	in     al,0xf6
 1016fc7:	add    BYTE PTR [eax-0x66ff0a1d],bl
 1016fcd:	in     al,0xf6
 1016fcf:	add    BYTE PTR [edx-0x61ff091c],bl
 1016fd5:	in     eax,0xf7
 1016fd7:	add    BYTE PTR [ebp-0x60ff091b],bl
 1016fdd:	out    0xf6,al
 1016fdf:	add    BYTE PTR [ecx-0x5cff0819],ah
 1016fe5:	out    0xf7,eax
 1016fe7:	add    BYTE PTR [ebp-0x59ff0819],ah
 1016fed:	out    0xf7,eax
 1016fef:	add    BYTE PTR [edi-0x56ff0818],ah
 1016ff5:	call   0xe2a570f2
 1016ffa:	lock add BYTE PTR [ecx-0x55ff0818],ch
 1017001:	jmp    0xebae70fd
 1017006:	clc    
 1017007:	add    BYTE PTR [ebp-0x50ff0717],ch
 101700d:	jmp    0xf8:0xebb100f8
 1017014:	mov    bl,0xeb
 1017016:	clc    
 1017017:	add    BYTE PTR [esi-0x48ff0715],dh
 101701d:	in     al,dx
 101701e:	clc    
 101701f:	add    BYTE PTR [ecx-0x6dff0613],bh
 1017025:	mov    edx,0xedba00c4
 101702a:	stc    
 101702b:	add    BYTE PTR [ebp+ebp*8-0x103fff07],bh
 1017032:	cli    
 1017033:	add    BYTE PTR [edi-0x3cff0612],bh
 1017039:	out    dx,eax
 101703a:	cli    
 101703b:	add    ch,al
 101703d:	lock cli 
 101703f:	add    dl,cl
 1017041:	icebp  
 1017042:	cli    
 1017043:	add    dh,cl
 1017045:	repnz cli 
 1017047:	add    bl,bl
 1017049:	cmc    
 101704a:	sti    
 101704b:	add    al,ch
 101704d:	stc    
 101704e:	std    
 101704f:	add    dh,ch
 1017051:	sti    
 1017052:	inc    BYTE PTR [eax]
 1017054:	in     eax,dx
 1017055:	cli    
 1017056:	std    
 1017057:	add    bl,dh
 1017059:	cld    
 101705a:	inc    BYTE PTR [eax]
 101705c:	dec    ebp
 101705d:	retf   0xee
 1017060:	pop    ebx
 1017061:	shl    ecx,1
 1017063:	add    BYTE PTR [esi-0x2f],bl
 1017066:	repnz add BYTE PTR [eax-0x31],ch
 101706a:	in     al,dx
 101706b:	add    BYTE PTR [ebp-0x5c],dl
 101706e:	mov    edx,0xeed47000
 1017073:	add    BYTE PTR [edi-0x51ff3140],cl
 1017079:	in     eax,0xf4
 101707b:	add    BYTE PTR [ecx+ecx*8-0x4f67ff2b],bl
 1017082:	mov    bh,0x0
 1017084:	jmp    0x101707f
 1017086:	std    
 1017087:	add    BYTE PTR [edx-0x39],al
 101708a:	out    dx,eax
 101708b:	add    BYTE PTR [edx+eax*8-0x19],cl
 101708f:	add    BYTE PTR [esi+eax*8-0x16],dl
 1017093:	add    BYTE PTR [ebp-0x2f],bl
 1017096:	hlt    
 1017097:	add    BYTE PTR [edi-0x35],bl
 101709a:	jmp    0x101709c
 101709c:	ins    DWORD PTR es:[edi],dx
 101709d:	ret    
 101709e:	fiadd  WORD PTR [eax]
 10170a0:	mov    ds:0xe300e8d7,eax
 10170a5:	idiv   ebp
 10170a7:	add    cl,dh
 10170a9:	sti    
 10170aa:	inc    BYTE PTR [eax]
 10170ac:	add    eax,0x1d004836
 10170b1:	stos   BYTE PTR es:[edi],al
 10170b2:	fild   WORD PTR [eax]
 10170b4:	sub    eax,0x3500e1b2
 10170b9:	ret    
 10170ba:	hlt    
 10170bb:	add    BYTE PTR [edi],dh
 10170bd:	mov    edx,0xb63600e9
 10170c2:	jecxz  0x10170c4
 10170c4:	xor    ebx,DWORD PTR [ecx-0x44c0ff42]
 10170ca:	in     eax,0x0
 10170cc:	inc    esp
 10170cd:	mov    esi,0xbe4600ea
 10170d2:	out    0x0,al
 10170d4:	inc    ebp
 10170d5:	stos   DWORD PTR es:[edi],eax
 10170d6:	rol    BYTE PTR [eax],1
 10170d8:	jns    0x1017096
 10170da:	rol    DWORD PTR [eax],cl
 10170dc:	jae    0x101708f
 10170de:	enter  0x7900,0xab
 10170e2:	mov    ebp,0xb9a77600
 10170e7:	add    BYTE PTR [esi+ebp*4-0x40],bh
 10170eb:	add    BYTE PTR [ebx-0x53],bh
 10170ee:	mov    esi,0xbdab7a00
 10170f3:	add    BYTE PTR [ebp-0x67],dh
 10170f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10170f7:	add    dl,ch
 10170f9:	cmc    
 10170fa:	stc    
 10170fb:	add    dl,bh
 10170fd:	std    
 10170fe:	inc    BYTE PTR [eax]
 1017100:	add    BYTE PTR [edi-0x50ffff01],dh
 1017106:	cmc    
 1017107:	add    BYTE PTR [eax],al
 1017109:	test   eax,0xa70000ec
 101710e:	jmp    0x1017110
 1017110:	pop    es
 1017111:	sahf   
 1017112:	fiadd  DWORD PTR [eax]
 1017114:	or     eax,0x1400dca1
 1017119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 101711a:	fld    QWORD PTR [eax]
 101711c:	and    eax,0x2700e2ae
 1017121:	dec    ebx
 1017122:	pop    edx
 1017123:	add    BYTE PTR [ebx-0x74],cl
 1017126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1017127:	add    BYTE PTR [ebp-0x63],dl
 101712a:	mov    edx,0xbca97800
 101712f:	add    BYTE PTR [ebp-0x5c],dh
 1017132:	mov    bh,0x0
 1017134:	sub    BYTE PTR [edi-0xd17ff3f],0xf6
 101713b:	add    BYTE PTR [eax],al
 101713d:	mov    al,ds:0xb71400e7
 1017142:	cld    
 1017143:	add    BYTE PTR [ebp+edx*4-0x4f],dl
 1017147:	add    BYTE PTR [ebx-0x67],ch
 101714a:	scas   al,BYTE PTR es:[edi]
 101714b:	add    BYTE PTR [ebp-0x65],ch
 101714e:	mov    al,0x0
 1017150:	jo     0x10170f0
 1017152:	mov    bl,0x0
 1017154:	jb     0x10170f7
 1017156:	mov    ch,0x0
 1017158:	iret   
 1017159:	out    0xf0,al
 101715b:	add    BYTE PTR [eax],al
 101715d:	stos   BYTE PTR es:[edi],al
 101715e:	std    
 101715f:	add    BYTE PTR [ecx-0x71],dl
 1017162:	scas   al,BYTE PTR es:[edi]
 1017163:	add    BYTE PTR [eax-0x69],bl
 1017166:	mov    ch,0x0
 1017168:	pusha  
 1017169:	mov    WORD PTR [ebx-0x566c9b00],fs
 101716f:	add    BYTE PTR [ebx-0x71],ah
 1017172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1017173:	add    BYTE PTR [eax-0x6b],ch
 1017176:	stos   DWORD PTR es:[edi],eax
 1017177:	add    BYTE PTR [edx+0xc6ba],ah
 101717d:	cwde   
 101717e:	out    dx,eax
 101717f:	add    BYTE PTR [eax],dl
 1017181:	imul   ebx,DWORD PTR [ebp-0x5684db00],0x0
 1017188:	sub    dh,BYTE PTR [ebp-0x63]
 101718b:	add    BYTE PTR [ebx+0x7f],cl
 101718e:	fwait
 101718f:	add    BYTE PTR [ebx-0x7b],bl
 1017192:	popf   
 1017193:	add    BYTE PTR [esi-0x78],bl
 1017196:	lahf   
 1017197:	add    BYTE PTR [esi+0x2e00daca],ch
 101719d:	imul   edx,DWORD PTR [eax-0x6881aa00],0x0
 10171a4:	pop    ecx
 10171a5:	sbb    DWORD PTR [edx-0x728cb300],0x92785200
 10171af:	add    BYTE PTR [eax+0x75],dl
 10171b2:	pop    DWORD PTR [eax]
 10171b4:	push   esp
 10171b5:	jnp    0x101714c
 10171b7:	add    BYTE PTR [ecx+0x6d],cl
 10171ba:	mov    BYTE PTR [eax],al
 10171bc:	dec    ebx
 10171bd:	jo     0x101714a
 10171bf:	add    BYTE PTR [ebx+0x66],al
 10171c2:	add    BYTE PTR [eax],0x45
 10171c5:	imul   eax,DWORD PTR [ebp-0x7894b900],0xd3a68f00
 10171cf:	add    BYTE PTR [edx+0x5300cea7],dl
 10171d5:	imul   ecx,ebx,0xa7473f00
 10171db:	add    BYTE PTR [ebp-0xff1472],al
 10171e1:	(bad)  
 10171e2:	inc    DWORD PTR [eax]
 10171e4:	(bad)  
 10171e5:	(bad)  
 10171e6:	inc    DWORD PTR [eax]
 10171e8:	add    BYTE PTR [eax],al
 10171ea:	add    BYTE PTR [eax],al
 10171ec:	add    BYTE PTR [eax],al
 10171ee:	not    BYTE PTR [edi]
 10171f0:	pop    ss
 10171f1:	pop    ss
 10171f2:	pop    ss
 10171f3:	pop    ss
 10171f4:	pop    ss
 10171f5:	pop    ss
 10171f6:	pop    ss
 10171f7:	pop    ss
 10171f8:	pop    ss
 10171f9:	pop    ss
 10171fa:	pop    ss
 10171fb:	pop    ss
 10171fc:	pop    ss
 10171fd:	pop    ss
 10171fe:	pop    ss
 10171ff:	pop    ss
 1017200:	pop    ss
 1017201:	pop    ss
 1017202:	pop    ss
 1017203:	pop    ss
 1017204:	pop    ss
	...
 101720d:	add    dh,dh
 101720f:	xor    al,0x33
 1017211:	xor    eax,DWORD PTR [edi+0x45]
 1017214:	pop    eax
 1017215:	popaw  
 1017217:	mov    ds:0xa9aaaca0,al
 101721c:	mov    eax,0xb2cdb3b6
 1017221:	int3   
 1017222:	retf   
 1017223:	retf   0x17
 1017226:	add    BYTE PTR [eax],al
 1017228:	add    BYTE PTR [eax],al
 101722a:	add    dh,dh
 101722c:	pop    ss
 101722d:	pop    ss
 101722e:	test   DWORD PTR [eax-0x70],0x82878a5c
 1017235:	jg     0x10172b4
 1017237:	jp     0x10172b1
 1017239:	jae    0x10172ac
 101723b:	outs   dx,BYTE PTR ds:[esi]
 101723c:	ins    BYTE PTR es:[edi],dx
 101723d:	push   0x65
 101723f:	arpl   WORD PTR fs:[eax+0x60],sp
 1017243:	retf   
 1017244:	pop    ss
 1017245:	add    BYTE PTR [eax],al
 1017247:	add    BYTE PTR [eax],al
 1017249:	add    BYTE PTR [eax],al
 101724b:	div    BYTE PTR [ebx+esi*1]
 101724e:	div    DWORD PTR [esi]
 1017250:	xchg   edx,eax
 1017251:	xchg   ecx,eax
 1017252:	lea    ecx,[ebx+0x7e82865b]
 1017258:	jnp    0x10172d4
 101725a:	jne    0x10172ce
 101725c:	outs   dx,DWORD PTR ds:[esi]
 101725d:	ins    DWORD PTR es:[edi],dx
 101725e:	imul   esp,DWORD PTR [edi+0x65],0x64
 1017262:	arpl   sp,cx
 1017264:	pop    ss
 1017265:	add    BYTE PTR [eax],al
 1017267:	add    BYTE PTR [eax],al
 1017269:	add    BYTE PTR [eax],al
 101726b:	test   DWORD PTR [eax-0x70],0xbdae49f8
 1017272:	loope  0x1017237
 1017274:	jmp    0x80be5b61
 1017279:	jge    0x10172f7
 101727b:	ja     0x10172f2
 101727d:	jb     0x10172ed
 101727f:	ins    BYTE PTR es:[edi],dx
 1017280:	imul   esp,DWORD PTR [ebp+0x64],0x17cc
 1017287:	add    BYTE PTR [eax],al
 1017289:	add    BYTE PTR [eax],al
 101728b:	div    DWORD PTR [esi]
 101728d:	xchg   edx,eax
 101728e:	hlt    
 101728f:	dec    edx
 1017290:	iret   
 1017291:	mov    ebx,0xc62e2344
 1017296:	aad    0xed
 1017298:	test   BYTE PTR [ecx+0x777a7d7e],al
 101729e:	jae    0x101730f
 10172a0:	pop    ecx
 10172a1:	imul   esp,DWORD PTR [edi-0x4e],0x17
 10172a5:	add    BYTE PTR [eax],al
 10172a7:	add    BYTE PTR [eax],al
 10172a9:	add    BYTE PTR [eax],al
 10172ab:	clc    
 10172ac:	dec    ecx
 10172ad:	pop    ebp
 10172ae:	cmc    
 10172af:	cmp    bh,cl
 10172b1:	test   al,0x2f
 10172b3:	sub    ch,BYTE PTR [ebx-0x5b173939]
 10172b9:	xchg   DWORD PTR [ebp+0x797c7e80],eax
 10172bf:	jne    0x1017333
 10172c1:	outs   dx,BYTE PTR ds:[esi]
 10172c2:	ins    BYTE PTR es:[edi],dx
 10172c3:	int    0x17
 10172c5:	add    BYTE PTR [eax],al
 10172c7:	add    BYTE PTR [eax],al
 10172c9:	add    BYTE PTR [eax],al
 10172cb:	hlt    
 10172cc:	dec    edx
 10172cd:	xchg   edi,eax
 10172ce:	lock dec ebx
 10172d0:	fidivr WORD PTR [ecx-0x3760d4bc]
 10172d6:	fucom  st(7)
 10172d8:	mov    WORD PTR [ebx+0x7f828689],cs
 10172de:	jnp    0x101735a
 10172e0:	ja     0x1017356
 10172e2:	jo     0x1017297
 10172e4:	pop    ss
 10172e5:	add    BYTE PTR [eax],al
 10172e7:	add    BYTE PTR [eax],al
 10172e9:	add    BYTE PTR [eax],al
 10172eb:	cmc    
 10172ec:	cmp    BYTE PTR [ecx-0xe],dl
 10172ef:	cmp    edi,edx
 10172f1:	mov    ecx,0xc89f2b44
 10172f6:	fucom  st(7)
 10172f8:	xchg   ebx,eax
 10172f9:	nop
 10172fa:	mov    WORD PTR [edx+0x7e808388],cs
 1017300:	jl     0x101737b
 1017302:	jbe    0x10172ba
 1017304:	pop    ss
 1017305:	add    BYTE PTR [eax],al
 1017307:	add    BYTE PTR [eax],al
 1017309:	add    BYTE PTR [eax],al
 101730b:	lock dec ebx
 101730d:	cwde   
 101730e:	icebp  
 101730f:	dec    esp
 1017310:	fistp  QWORD PTR [ecx-0x3661d4bc]
 1017316:	fucom  st(7)
 1017318:	adc    BYTE PTR [edx+edx*1],bl
 101731b:	adc    dl,BYTE PTR [ebx]
 101731d:	sbb    dl,BYTE PTR [ebx]
 101731f:	cmp    BYTE PTR [edi+0x7d],0x7a
 1017323:	mov    eax,0x17
 1017328:	add    BYTE PTR [eax],al
 101732a:	add    dl,dh
 101732c:	cmp    DWORD PTR [edx-0xd],edx
 101732f:	cmp    dl,al
 1017331:	mov    ch,0x56
 1017333:	sub    eax,0xe6e5e5a8
 1017338:	or     al,0xfe
 101733a:	push   ss
 101733b:	push   ss
 101733c:	pop    ds
 101733d:	adc    eax,0x81855b13
 1017342:	jle    0x10172fe
 1017344:	pop    ss
 1017345:	add    BYTE PTR [eax],al
 1017347:	add    BYTE PTR [eax],al
 1017349:	add    BYTE PTR [eax],al
 101734b:	icebp  
 101734c:	dec    esp
 101734d:	cdq    
 101734e:	out    dx,al
 101734f:	dec    ebp
 1017350:	rcr    BYTE PTR [ebp-0x4b9dd5d1],1
 1017356:	(bad)  
 1017357:	out    0x4,al
 1017359:	pop    ds
 101735a:	or     eax,0x1315161e
 101735f:	pop    esp
 1017360:	mov    cl,BYTE PTR [eax+0x17a982]
 1017366:	add    BYTE PTR [eax],al
 1017368:	add    BYTE PTR [eax],al
 101736a:	add    bl,dh
 101736c:	cmp    bl,BYTE PTR [ebx+0x30d34eef]
 1017372:	and    al,0x25
 1017374:	(bad)  
 1017375:	(bad)  
 1017376:	and    cl,bh
 1017378:	adc    eax,0x10e1e0f
 101737d:	adc    dl,BYTE PTR [ebx]
 101737f:	xchg   ecx,eax
 1017380:	lea    ecx,[ebx+0x17aa89]
 1017386:	add    BYTE PTR [eax],al
 1017388:	add    BYTE PTR [eax],al
 101738a:	add    dh,ch
 101738c:	dec    ebp
 101738d:	mov    al,0xea
 101738f:	dec    edi
 1017390:	xor    esp,ebp
 1017392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1017393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1017394:	mov    ds:0xda68fa3,eax
 1017399:	sbb    eax,0xb1ad020d
 101739e:	adc    edx,DWORD PTR [ebx+edx*4+0x17ac5c8e]
 10173a5:	add    BYTE PTR [eax],al
 10173a7:	add    BYTE PTR [eax],al
 10173a9:	add    BYTE PTR [eax],al
 10173ab:	out    dx,eax
 10173ac:	dec    esi
 10173ad:	inc    edx
 10173ae:	jmp    0x10173eb
 10173b0:	sub    DWORD PTR [edi],esp
 10173b2:	(bad)  
 10173b3:	aam    0xc4
 10173b5:	adc    al,0x3
 10173b7:	inc    BYTE PTR [ebx]
 10173b9:	(bad)  
 10173ba:	adc    esp,ebx
 10173bc:	cs inc ebx
 10173be:	into   
 10173bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10173c0:	xchg   ebp,eax
 10173c1:	xchg   edx,eax
 10173c2:	xchg   ecx,eax
 10173c3:	mov    al,ds:0x17
 10173c8:	add    BYTE PTR [eax],al
 10173ca:	add    dl,ch
 10173cc:	dec    edi
 10173cd:	sub    al,ah
 10173cf:	cmp    al,0xfe
 10173d1:	(bad)  
 10173d2:	sub    DWORD PTR [eax],ebp
 10173d4:	pop    esi
 10173d5:	adc    al,0xc
 10173d7:	push   ss
 10173d8:	add    al,0xc
 10173da:	or     cl,BYTE PTR [ecx]
 10173dc:	or     ebx,DWORD PTR [edi+0x2e]
 10173df:	mov    cl,0xe4
 10173e1:	pop    ebp
 10173e2:	xchg   esp,eax
 10173e3:	mov    ds:0x17,al
 10173e8:	add    BYTE PTR [eax],al
 10173ea:	add    bl,ch
 10173ec:	cmp    ebp,DWORD PTR [ecx]
 10173ee:	loop   0x1017441
 10173f0:	(bad)  
 10173f1:	(bad)  
 10173f2:	(bad)  
 10173f3:	sub    DWORD PTR [eax],ebp
 10173f5:	adc    al,0xa
 10173f7:	or     cl,BYTE PTR [ecx]
 10173f9:	or     BYTE PTR [esi],al
 10173fb:	add    eax,0x43680705
 1017400:	into   
 1017401:	and    BYTE PTR [esi+0x1761],dl
 1017407:	add    BYTE PTR [eax],al
 1017409:	add    BYTE PTR [eax],al
 101740b:	loopne 0x1017449
 101740d:	(bad)  
 101740e:	loope  0x101744d
 1017410:	(bad)  
 1017411:	(bad)  
 1017412:	(bad)  
 1017413:	(bad)  
 1017414:	(bad)  
 1017415:	adc    al,0x5
 1017417:	add    eax,0x5050505
 101741c:	add    eax,0x212c2605
 1017421:	into   
 1017422:	cli    
 1017423:	arpl   WORD PTR [edi],dx
 1017425:	add    BYTE PTR [eax],al
 1017427:	add    BYTE PTR [eax],al
 1017429:	add    BYTE PTR [eax],al
 101742b:	loop   0x101747e
 101742d:	(bad)  
 101742e:	jecxz  0x101746e
 1017430:	(bad)  
 1017431:	(bad)  
 1017432:	(bad)  
 1017433:	(bad)  
 1017434:	(bad)  
 1017435:	(bad)  
 1017436:	(bad)  
 1017437:	sub    BYTE PTR [eax],ch
 1017439:	inc    ecx
 101743a:	inc    eax
 101743b:	xor    bl,BYTE PTR [edx-0x1bce6659]
 1017441:	std    
 1017442:	cld    
 1017443:	push   edi
 1017444:	pop    ss
 1017445:	add    BYTE PTR [eax],al
 1017447:	add    BYTE PTR [eax],al
 1017449:	add    BYTE PTR [eax],al
 101744b:	loope  0x101748a
 101744d:	(bad)  
 101744e:	fcom   DWORD PTR [edx-0x2]
 1017451:	(bad)  
 1017452:	(bad)  
 1017453:	(bad)  
 1017454:	(bad)  
 1017455:	(bad)  
 1017456:	(bad)  
 1017457:	(bad)  
 1017458:	sub    DWORD PTR [eax],ebp
 101745a:	daa    
 101745b:	inc    eax
 101745c:	pushf  
 101745d:	mov    al,0x9b
 101745f:	cdq    
 1017460:	in     al,dx
 1017461:	sti    
 1017462:	stc    
 1017463:	pop    ecx
 1017464:	pop    ss
 1017465:	add    BYTE PTR [eax],al
 1017467:	add    BYTE PTR [eax],al
 1017469:	add    BYTE PTR [eax],al
 101746b:	jecxz  0x10174ab
 101746d:	(bad)  
 101746e:	fnstcw WORD PTR [edi]
 1017470:	(bad)  
 1017471:	(bad)  
 1017472:	(bad)  
 1017473:	(bad)  
 1017474:	(bad)  
 1017475:	(bad)  
 1017476:	(bad)  
 1017477:	(bad)  
 1017478:	(bad)  
 1017479:	(bad)  
 101747a:	sub    ch,al
 101747c:	inc    edx
 101747d:	inc    eax
 101747e:	mov    al,0x9a
 1017480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1017481:	cdq    
 1017482:	scas   eax,DWORD PTR es:[edi]
 1017483:	inc    esi
 1017484:	pop    ss
 1017485:	add    BYTE PTR [eax],al
 1017487:	add    BYTE PTR [eax],al
 1017489:	add    BYTE PTR [eax],al
 101748b:	fcom   DWORD PTR [edx-0x2]
 101748e:	ficom  DWORD PTR [ebx-0x2]
 1017491:	(bad)  
 1017492:	(bad)  
 1017493:	(bad)  
 1017494:	(bad)  
 1017495:	(bad)  
 1017496:	(bad)  
 1017497:	(bad)  
 1017498:	(bad)  
 1017499:	(bad)  
 101749a:	(bad)  
 101749b:	sub    DWORD PTR [eax],ebp
 101749d:	pop    esi
 101749e:	inc    edx
 101749f:	pushf  
 10174a0:	mov    al,0x9b
 10174a2:	push   ebx
 10174a3:	inc    edi
 10174a4:	pop    ss
 10174a5:	add    BYTE PTR [eax],al
 10174a7:	add    BYTE PTR [eax],al
 10174a9:	add    BYTE PTR [eax],al
 10174ab:	fnstcw WORD PTR [edi]
 10174ad:	(bad)  
 10174ae:	fist   DWORD PTR [esi+edi*8-0x2]
 10174b2:	(bad)  
 10174b3:	(bad)  
 10174b4:	(bad)  
 10174b5:	(bad)  
 10174b6:	(bad)  
 10174b7:	(bad)  
 10174b8:	(bad)  
 10174b9:	(bad)  
 10174ba:	(bad)  
 10174bb:	(bad)  
 10174bc:	(bad)  
 10174bd:	sub    BYTE PTR [eax],ch
 10174bf:	inc    edx
 10174c0:	pushf  
 10174c1:	xor    bl,BYTE PTR [edx+0x1733]
 10174c7:	add    BYTE PTR [eax],al
 10174c9:	add    BYTE PTR [eax],al
 10174cb:	ficom  DWORD PTR [ebx-0x2]
 10174ce:	rcl    BYTE PTR [ebp-0x2],cl
 10174d1:	(bad)  
 10174d2:	(bad)  
 10174d3:	(bad)  
 10174d4:	(bad)  
 10174d5:	(bad)  
 10174d6:	(bad)  
 10174d7:	(bad)  
 10174d8:	(bad)  
 10174d9:	(bad)  
 10174da:	(bad)  
 10174db:	(bad)  
 10174dc:	(bad)  
 10174dd:	(bad)  
 10174de:	(bad)  
 10174df:	sub    cl,al
 10174e1:	(bad)  
 10174e3:	icebp  
 10174e4:	pop    ss
 10174e5:	add    BYTE PTR [eax],al
 10174e7:	add    BYTE PTR [eax],al
 10174e9:	add    BYTE PTR [eax],al
 10174eb:	fist   DWORD PTR [esi+edi*8-0x41]
 10174ef:	inc    eax
 10174f0:	(bad)  
 10174f1:	(bad)  
 10174f2:	(bad)  
 10174f3:	(bad)  
 10174f4:	(bad)  
 10174f5:	(bad)  
 10174f6:	(bad)  
 10174f7:	(bad)  
 10174f8:	(bad)  
 10174f9:	(bad)  
 10174fa:	(bad)  
 10174fb:	(bad)  
 10174fc:	(bad)  
 10174fd:	(bad)  
 10174fe:	(bad)  
 10174ff:	mov    edi,0x17171717
 1017504:	pop    ss
 1017505:	add    BYTE PTR [eax],al
 1017507:	add    BYTE PTR [eax],al
 1017509:	add    BYTE PTR [eax],al
 101750b:	rcl    BYTE PTR [ebp-0x2],cl
 101750e:	rol    DWORD PTR [ecx-0x2],1
 1017511:	(bad)  
 1017512:	(bad)  
 1017513:	(bad)  
 1017514:	(bad)  
 1017515:	(bad)  
 1017516:	(bad)  
 1017517:	(bad)  
 1017518:	(bad)  
 1017519:	(bad)  
 101751a:	(bad)  
 101751b:	(bad)  
 101751c:	(bad)  
 101751d:	(bad)  
 101751e:	(bad)  
 101751f:	ror    ebp,1
 1017521:	int    0xb7
 1017523:	pop    ss
 1017524:	add    BYTE PTR [eax],al
 1017526:	add    BYTE PTR [eax],al
 1017528:	add    BYTE PTR [eax],al
 101752a:	add    BYTE PTR [edi+0x28befe40],bh
 1017530:	(bad)  
 1017531:	(bad)  
 1017532:	(bad)  
 1017533:	(bad)  
 1017534:	(bad)  
 1017535:	(bad)  
 1017536:	(bad)  
 1017537:	(bad)  
 1017538:	(bad)  
 1017539:	(bad)  
 101753a:	(bad)  
 101753b:	(bad)  
 101753c:	(bad)  
 101753d:	(bad)  
 101753e:	inc    dl
 1017540:	stos   BYTE PTR es:[edi],al
 1017541:	mov    eax,ds:0x18
 1017546:	add    BYTE PTR [eax],al
 1017548:	add    BYTE PTR [eax],al
 101754a:	add    cl,dl
 101754c:	inc    ecx
 101754d:	inc    cl
 101754f:	sub    esi,edi
 1017551:	(bad)  
 1017552:	(bad)  
 1017553:	(bad)  
 1017554:	(bad)  
 1017555:	(bad)  
 1017556:	(bad)  
 1017557:	(bad)  
 1017558:	(bad)  
 1017559:	(bad)  
 101755a:	(bad)  
 101755b:	(bad)  
 101755c:	(bad)  
 101755d:	(bad)  
 101755e:	inc    cl
 1017560:	pop    edx
 1017561:	sbb    DWORD PTR [eax],eax
	...
 101756b:	mov    esi,0xfec0fe28
 1017570:	(bad)  
 1017571:	sub    BYTE PTR [edx+0x55],al
 1017574:	push   ebx
 1017575:	push   edx
 1017576:	cmp    eax,0x3a4e3b50
 101757b:	cmp    DWORD PTR [eax],edi
 101757d:	aaa    
 101757e:	xor    eax,0x12c3
	...
 101758b:	shr    DWORD PTR [ecx],0xfe
 101758e:	rol    al,0xc0
 1017591:	rol    al,0xc0
 1017594:	rol    al,0xc0
 1017597:	rol    al,0xc0
 101759a:	rol    al,0xc0
 101759d:	rol    al,0x1b
	...
 10175a8:	add    BYTE PTR [eax],al
 10175aa:	add    al,al
 10175ac:	(bad)  
 10175ad:	(bad)  
 10175ae:	sub    BYTE PTR [edx+0x55],al
 10175b1:	push   ebx
 10175b2:	push   edx
 10175b3:	cmp    eax,0x3a4e3b50
 10175b8:	cmp    DWORD PTR [eax],edi
 10175ba:	aaa    
 10175bb:	xor    eax,0x12c3
	...
 10175c8:	add    BYTE PTR [eax],al
 10175ca:	add    al,al
 10175cc:	rol    al,0xc0
 10175cf:	rol    al,0xc0
 10175d2:	rol    al,0xc0
 10175d5:	rol    al,0xc0
 10175d8:	rol    al,0xc0
 10175db:	rcr    BYTE PTR [ebx],0x0
	...
 10175e6:	add    BYTE PTR [eax],al
 10175e8:	cld    
 10175e9:	add    BYTE PTR [eax],al
 10175eb:	pop    es
 10175ec:	cld    
 10175ed:	add    BYTE PTR [eax],al
 10175ef:	pop    es
 10175f0:	loopne 0x10175f2
 10175f2:	add    BYTE PTR [edi],al
 10175f4:	loopne 0x10175f6
 10175f6:	add    BYTE PTR [edi],al
 10175f8:	loopne 0x10175fa
 10175fa:	add    BYTE PTR [edi],al
 10175fc:	loopne 0x10175fe
 10175fe:	add    BYTE PTR [edi],al
 1017600:	loopne 0x1017602
 1017602:	add    BYTE PTR [edi],al
 1017604:	loopne 0x1017606
 1017606:	add    BYTE PTR [edi],al
 1017608:	loopne 0x101760a
 101760a:	add    BYTE PTR [edi],al
 101760c:	loopne 0x101760e
 101760e:	add    BYTE PTR [edi],al
 1017610:	loopne 0x1017612
 1017612:	add    BYTE PTR [edi],al
 1017614:	loopne 0x1017616
 1017616:	add    BYTE PTR [edi],al
 1017618:	loopne 0x101761a
 101761a:	add    BYTE PTR [edi],al
 101761c:	loopne 0x101761e
 101761e:	add    BYTE PTR [edi],al
 1017620:	loopne 0x1017622
 1017622:	add    BYTE PTR [edi],al
 1017624:	loopne 0x1017626
 1017626:	add    BYTE PTR [edi],al
 1017628:	loopne 0x101762a
 101762a:	add    BYTE PTR [edi],al
 101762c:	loopne 0x101762e
 101762e:	add    BYTE PTR [edi],al
 1017630:	loopne 0x1017632
 1017632:	add    BYTE PTR [edi],al
 1017634:	loopne 0x1017636
 1017636:	add    BYTE PTR [edi],al
 1017638:	loopne 0x101763a
 101763a:	add    BYTE PTR [edi],al
 101763c:	loopne 0x101763e
 101763e:	add    BYTE PTR [edi],al
 1017640:	loopne 0x1017642
 1017642:	add    BYTE PTR [edi],al
 1017644:	loopne 0x1017646
 1017646:	add    BYTE PTR [edi],al
 1017648:	loopne 0x101764a
 101764a:	add    BYTE PTR [edi],al
 101764c:	loopne 0x101764e
 101764e:	add    BYTE PTR [edi],cl
 1017650:	loopne 0x1017652
 1017652:	add    BYTE PTR [edi],bl
 1017654:	loopne 0x1017656
 1017656:	add    BYTE PTR [edi],bh
 1017658:	loopne 0x101765a
 101765a:	add    BYTE PTR [edi-0x20],bh
 101765d:	add    BYTE PTR [eax],al
 101765f:	jmp    eax
 1017661:	add    BYTE PTR [ebx],al
 1017663:	jmp    eax
 1017665:	add    BYTE PTR [edi],al
 1017667:	jmp    FWORD PTR [eax]
 1017669:	add    BYTE PTR [eax],al
 101766b:	add    BYTE PTR [eax],dl
 101766d:	add    BYTE PTR [eax],al
 101766f:	add    BYTE PTR [eax],ah
 1017671:	add    BYTE PTR [eax],al
 1017673:	add    BYTE PTR [ecx],al
 1017675:	add    BYTE PTR [eax],cl
	...
 1017693:	add    ah,ah
 1017695:	loope  0x101767a
 1017697:	add    BYTE PTR [esi-0x7dff8881],dl
 101769d:	jns    0x1017715
 101769f:	add    bh,bh
 10176a1:	xchg   esp,eax
 10176a2:	pop    ecx
 10176a3:	add    bh,bh
 10176a5:	mov    dh,0x8f
 10176a7:	add    bh,cl
 10176a9:	mov    eax,ds:0x486a0085
 10176ae:	xor    DWORD PTR [eax],eax
 10176b0:	pop    esp
 10176b1:	inc    edx
 10176b2:	cs add bh,bh
 10176b5:	les    ebx,FWORD PTR [edx-0x6f512b00]
 10176bb:	add    BYTE PTR [ecx+0x3e],bl
 10176be:	sub    DWORD PTR [eax],eax
 10176c0:	jno    0x1017719
 10176c2:	inc    edx
 10176c3:	add    BYTE PTR [esi+0x57],ch
 10176c6:	inc    esp
 10176c7:	add    BYTE PTR [ebp+0x56],ch
 10176ca:	inc    esp
 10176cb:	add    BYTE PTR [esi-0xff7365],ch
 10176d1:	cmc    
 10176d2:	jmp    0x10176d4
 10176d4:	push   esi
 10176d6:	in     al,dx
 10176d7:	add    BYTE PTR [edx-0x77ff0001],dl
 10176dd:	sti    
 10176de:	inc    DWORD PTR [eax]
 10176e0:	xchg   esi,eax
 10176e1:	repnz cld 
 10176e3:	add    BYTE PTR [ebx-0x64ff474b],bl
 10176e9:	jmp    0xf6:0xefc000f6
 10176f0:	jno    0x10176af
 10176f2:	retf   
 10176f3:	add    BYTE PTR [ecx-0x2fff0c1f],cl
 10176f9:	repz cli 
 10176fb:	add    BYTE PTR [edi-0x38],ch
 10176fe:	fadd   QWORD PTR [eax]
 1017700:	sbb    edx,0xfffffff0
 1017703:	add    BYTE PTR [ebp-0x7cff0a1f],cl
 1017709:	into   
 101770a:	loopne 0x101770c
 101770c:	xchg   edi,eax
 101770d:	jecxz  0x1017704
 101770f:	add    BYTE PTR [esi-0x5cff091a],bl
 1017715:	out    0xf7,eax
 1017717:	add    BYTE PTR [edx-0x4fff0818],ch
 101771d:	jmp    0xf8:0xecb600f8
 1017724:	mov    ebp,0xc300f9ee
 1017729:	out    dx,eax
 101772a:	cli    
 101772b:	add    bl,al
 101772d:	lock cli 
 101772f:	add    ah,cl
 1017731:	out    0xec,al
 1017733:	add    BYTE PTR [ebx-0x33],ah
 1017736:	jmp    0x1017738
 1017738:	outs   dx,DWORD PTR ds:[esi]
 1017739:	shr    esi,cl
 101773b:	add    BYTE PTR [edi-0x2d],ch
 101773e:	in     eax,dx
 101773f:	add    BYTE PTR [esi],bh
 1017741:	mov    ebx,0xc45100e4
 1017746:	call   0xe1c6e04b
 101774b:	add    BYTE PTR [esp+edi*4-0x4bccff35],cl
 1017752:	jecxz  0x1017754
 1017754:	xor    esi,DWORD PTR [ebp-0x4bccff1d]
 101775a:	loop   0x101775c
 101775c:	jl     0x101770c
 101775e:	rol    BYTE PTR [eax],0xce
 1017761:	in     eax,dx
 1017762:	clc    
 1017763:	add    BYTE PTR [edi],al
 1017765:	sahf   
 1017766:	fiadd  DWORD PTR [eax]
 1017768:	or     DWORD PTR [ebp-0x53eeff26],ebx
 101776e:	in     eax,dx
 101776f:	add    BYTE PTR [ecx],bl
 1017771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1017772:	fiadd  WORD PTR [eax]
 1017774:	push   ds
 1017775:	test   eax,0xa87700de
 101777a:	mov    ebx,0xb7a47400
 101777f:	add    BYTE PTR [ecx-0x56],bh
 1017782:	mov    ebp,0xbca97800
 1017787:	add    BYTE PTR [ebx-0x54],bh
 101778a:	mov    edi,0xb8a57600
 101778f:	add    BYTE PTR [edx+0xeed8],ah
 1017795:	scas   eax,DWORD PTR es:[edi]
 1017796:	inc    DWORD PTR [eax]
 1017798:	pop    ds
 1017799:	pop    ebx
 101779b:	add    BYTE PTR [ecx-0x6a],ch
 101779e:	stos   DWORD PTR es:[edi],eax
 101779f:	add    BYTE PTR [edi-0x63],ch
 10177a2:	mov    dl,0x0
 10177a4:	jno    0x1017745
 10177a6:	mov    ah,0x0
 10177a8:	jae    0x101774c
 10177aa:	mov    dh,0x0
 10177ac:	bound  ecx,QWORD PTR [esi-0x6f9bff5c]
 10177b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10177b3:	add    BYTE PTR [ebx-0x68],ch
 10177b6:	scas   al,BYTE PTR es:[edi]
 10177b7:	add    BYTE PTR [ebp+eax*4-0x64],bl
 10177bb:	add    BYTE PTR [esi-0x78],bl
 10177be:	lahf   
 10177bf:	add    BYTE PTR [ebx-0x3dff323d],dh
 10177c5:	rcr    ebp,cl
 10177c7:	add    BYTE PTR [eax],al
 10177c9:	(bad)  
 10177ca:	hlt    
 10177cb:	add    BYTE PTR [edi+0x75],cl
 10177ce:	pop    DWORD PTR [eax]
 10177d0:	push   ebp
 10177d1:	jl     0x1017769
 10177d3:	add    BYTE PTR [eax+0x7f],bl
 10177d6:	cwde   
 10177d7:	add    BYTE PTR [edi+0x4a00c1b3],bl
 10177dd:	outs   dx,BYTE PTR ds:[esi]
 10177de:	mov    DWORD PTR [eax],eax
 10177e0:	inc    ebx
 10177e1:	data16 add BYTE PTR [eax],0x45
 10177e5:	imul   eax,DWORD PTR [ebp-0x3b7aa700],0xd5aa9300
 10177ef:	add    BYTE PTR [eax+0x79],bl
 10177f2:	rol    DWORD PTR [eax],0x72
 10177f5:	xchg   eax,ecx
 10177f7:	add    BYTE PTR [esi+0x75],bl
 10177fa:	rol    DWORD PTR [eax],0xff
 10177fd:	(bad)  
 10177fe:	inc    DWORD PTR [eax]
 1017800:	(bad)  
 1017801:	(bad)  
 1017802:	inc    DWORD PTR [eax]
	...
 1017a94:	push   esp
 1017a95:	or     al,0xb
 1017a97:	or     eax,0xd0d0d0d
 1017a9c:	or     eax,0x70e
 1017aa1:	add    BYTE PTR [eax],al
 1017aa3:	add    BYTE PTR [ebx+ebx*2+0x16],dl
 1017aa7:	push   ss
 1017aa8:	sbb    DWORD PTR [ebx],ebp
 1017aaa:	sub    eax,0x7353831
 1017aaf:	add    BYTE PTR [eax],al
 1017ab1:	add    BYTE PTR [esp+ecx*1+0x54],dl
 1017ab5:	das    
 1017ab6:	sbb    BYTE PTR [edx+0x4d],al
 1017ab9:	and    esp,DWORD PTR [ecx]
 1017abb:	pop    ds
 1017abc:	sbb    eax,0x735
 1017ac1:	add    BYTE PTR [ebx+ebx*2+0x55],dl
 1017ac5:	sbb    edx,DWORD PTR [edx]
 1017ac7:	inc    ecx
 1017ac8:	push   edx
 1017ac9:	daa    
 1017aca:	and    al,0x22
 1017acc:	and    BYTE PTR ds:0x7,dh
 1017ad2:	push   esp
 1017ad3:	pop    ebx
 1017ad4:	push   ebx
 1017ad5:	adc    ecx,DWORD PTR cs:[esi+0x2]
 1017ad9:	or     cl,BYTE PTR [edi]
 1017adb:	and    eax,0x73923
 1017ae0:	add    BYTE PTR [eax],al
 1017ae2:	push   ebp
 1017ae3:	pop    ebx
 1017ae4:	dec    edi
 1017ae5:	push   ds
 1017ae6:	adc    al,0x37
 1017ae8:	dec    esp
 1017ae9:	adc    BYTE PTR [ebx],al
 1017aeb:	sbb    ah,BYTE PTR [esi]
 1017aed:	sub    al,0x7
 1017aef:	add    BYTE PTR [eax],al
 1017af1:	add    BYTE PTR [ebx+0x5b],dl
 1017af4:	push   eax
 1017af5:	sub    BYTE PTR [eax+0x15],al
 1017af8:	adc    DWORD PTR [ecx],eax
 1017afa:	pop    eax
 1017afb:	push   edi
 1017afc:	xor    al,0x29
 1017afe:	pop    es
 1017aff:	add    BYTE PTR [eax],al
 1017b01:	add    BYTE PTR [edi+0x5b],cl
 1017b04:	dec    edx
 1017b05:	pop    ebx
 1017b06:	pop    ebx
 1017b07:	or     DWORD PTR ds:0x59560604,eax
 1017b0d:	sbb    al,0x7
 1017b0f:	add    BYTE PTR [eax],al
 1017b11:	add    BYTE PTR [eax+0x5b],dl
 1017b14:	inc    edi
 1017b15:	pop    ebx
 1017b16:	pop    ebx
 1017b17:	pop    ebx
 1017b18:	pop    ebx
 1017b19:	pop    ebx
 1017b1a:	pop    ebx
 1017b1b:	pop    ss
 1017b1c:	pop    edx
 1017b1d:	ss pop es
 1017b1f:	add    BYTE PTR [eax],al
 1017b21:	add    BYTE PTR [edx+0x5b],cl
 1017b24:	inc    ebx
 1017b25:	pop    ebx
 1017b26:	pop    ebx
 1017b27:	pop    ebx
 1017b28:	pop    ebx
 1017b29:	pop    ebx
 1017b2a:	push   ecx
 1017b2b:	pop    es
 1017b2c:	pop    es
 1017b2d:	pop    es
 1017b2e:	pop    es
 1017b2f:	add    BYTE PTR [eax],al
 1017b31:	add    BYTE PTR [edi+0x5b],al
 1017b34:	inc    esp
 1017b35:	pop    ebx
 1017b36:	pop    ebx
 1017b37:	pop    ebx
 1017b38:	pop    ebx
 1017b39:	pop    ebx
 1017b3a:	dec    ebx
 1017b3b:	xor    dh,BYTE PTR [eax]
 1017b3d:	or     BYTE PTR [eax],al
 1017b3f:	add    BYTE PTR [eax],al
 1017b41:	add    BYTE PTR [ebx+0x5b],al
 1017b44:	cmp    ebx,DWORD PTR [ebx+0x5b]
 1017b47:	pop    ebx
 1017b48:	pop    ebx
 1017b49:	pop    ebx
 1017b4a:	dec    eax
 1017b4b:	sub    cl,BYTE PTR [eax]
 1017b4d:	add    BYTE PTR [eax],al
 1017b4f:	add    BYTE PTR [eax],al
 1017b51:	add    BYTE PTR [ebx+ebx*2+0x3d],al
 1017b55:	pop    ebx
 1017b56:	pop    ebx
 1017b57:	pop    ebx
 1017b58:	pop    ebx
 1017b59:	pop    ebx
 1017b5a:	dec    ecx
 1017b5b:	or     BYTE PTR [eax],al
 1017b5d:	add    BYTE PTR [eax],al
 1017b5f:	add    BYTE PTR [eax],al
 1017b61:	add    BYTE PTR [ebx],bh
 1017b63:	pop    ebx
 1017b64:	xor    edi,DWORD PTR [esi]
 1017b66:	cmp    al,0x3a
 1017b68:	aas    
 1017b69:	inc    esi
 1017b6a:	inc    ebp
 1017b6b:	add    BYTE PTR [eax],al
 1017b6d:	add    BYTE PTR [eax],al
 1017b6f:	add    BYTE PTR [eax],al
 1017b71:	add    BYTE PTR ds:0x5b5b5b5b,bh
 1017b77:	pop    ebx
 1017b78:	dec    ecx
 1017b79:	or     BYTE PTR [eax],al
 1017b7b:	add    BYTE PTR [eax],al
 1017b7d:	add    BYTE PTR [eax],al
 1017b7f:	add    BYTE PTR [eax],al
 1017b81:	add    BYTE PTR [ebx],dh
 1017b83:	ds cmp al,0x3a
 1017b86:	aas    
 1017b87:	inc    esi
 1017b88:	inc    ebp
 1017b89:	add    BYTE PTR [eax],al
 1017b8b:	add    BYTE PTR [eax],al
 1017b8d:	add    BYTE PTR [eax],al
 1017b8f:	add    al,dh
 1017b91:	add    DWORD PTR [eax],eax
 1017b93:	cmc    
 1017b94:	lock add edx,esi
 1017b97:	cmp    eax,eax
 1017b99:	add    DWORD PTR [ebx+ebp*1-0x40],eax
 1017b9d:	add    ebp,ebx
 1017b9f:	out    0xc0,eax
 1017ba1:	add    DWORD PTR [edx+ecx*4+0x7e8001c0],ecx
 1017ba8:	rol    BYTE PTR [ecx],0x76
 1017bab:	mov    dh,0xc0
 1017bad:	add    DWORD PTR [eax],eax
 1017baf:	add    al,al
 1017bb1:	add    DWORD PTR [eax],eax
 1017bb3:	lock rol BYTE PTR [ecx],0xf1
 1017bb7:	dec    esp
 1017bb8:	rol    BYTE PTR [ebx],0x44
 1017bbb:	sub    eax,eax
 1017bbd:	pop    es
 1017bbe:	fucom  st(7)
 1017bc0:	ror    BYTE PTR [edi],0x12
 1017bc3:	adc    al,al
 1017bc5:	pop    ds
 1017bc6:	adc    eax,DWORD PTR [edx-0x4785c040]
 1017bcc:	sar    BYTE PTR [edi+0x0],0x0
 1017bd0:	sub    BYTE PTR [eax],al
 1017bd2:	add    BYTE PTR [eax],al
 1017bd4:	and    BYTE PTR [eax],al
 1017bd6:	add    BYTE PTR [eax],al
 1017bd8:	inc    eax
 1017bd9:	add    BYTE PTR [eax],al
 1017bdb:	add    BYTE PTR [ecx],al
 1017bdd:	add    BYTE PTR [eax],ah
	...
 1017c0f:	add    BYTE PTR [ebx+0x66],al
 1017c12:	cmp    bh,0x63
 1017c15:	dec    ecx
 1017c16:	xor    eax,0x354963ff
 1017c1b:	jmp    DWORD PTR [ebx+0x49]
 1017c1e:	xor    eax,0x354963ff
 1017c23:	jmp    DWORD PTR [ebx+0x49]
 1017c26:	xor    eax,0x354963ff
 1017c2b:	jmp    DWORD PTR [ebx+0x49]
 1017c2e:	xor    eax,0x354963ff
 1017c33:	jmp    DWORD PTR [ebx+0x49]
 1017c36:	xor    eax,0x354963ff
 1017c3b:	jmp    DWORD PTR [ebx+0x49]
 1017c3e:	xor    eax,0x354963ff
 1017c43:	jmp    DWORD PTR [ebx+0x49]
 1017c46:	xor    eax,0x354963ff
 1017c4b:	jmp    DWORD PTR [ebx+0x49]
 1017c4e:	xor    eax,0x354963ff
 1017c53:	jmp    DWORD PTR [ebx+0x49]
 1017c56:	xor    eax,0x354963ff
 1017c5b:	jmp    DWORD PTR [ebx+0x49]
 1017c5e:	xor    eax,0x354963ff
 1017c63:	jmp    DWORD PTR [ebx+0x49]
 1017c66:	xor    eax,0x354963ff
 1017c6b:	inc    DWORD PTR [eax]
	...
 1017c8d:	add    BYTE PTR [eax],al
 1017c8f:	add    BYTE PTR [ebx+0x66],al
 1017c92:	cmp    bh,0x9b
 1017c95:	jmp    0xfff5:0xe99afff6
 1017c9c:	call   0xf4e7:0x96fff5e9
 1017ca3:	call   DWORD PTR [eax-0x76000c1c]
 1017ca9:	loope  0x1017c9d
 1017cab:	inc    DWORD PTR [edx+0x79fff1dc]
 1017cb1:	fsubr  st,st(7)
 1017cb3:	push   DWORD PTR [eax-0x2c]
 1017cb6:	out    dx,al
 1017cb7:	jmp    DWORD PTR [edi-0x31]
 1017cba:	in     al,dx
 1017cbb:	call   FWORD PTR [ebp-0x35]
 1017cbe:	jmp    0x1017cbf
 1017cc0:	push   esp
 1017cc1:	(bad)
 1017cc4:	dec    ecx
 1017cc5:	shl    bh,0xff
 1017cc8:	inc    eax
 1017cc9:	mov    ebx,0xb636ffe5
 1017cce:	jecxz  0x1017ccf
 1017cd0:	sub    eax,0x24ffe1b2
 1017cd5:	lods   eax,DWORD PTR ds:[esi]
 1017cd6:	loopne 0x1017cd7
 1017cd8:	sbb    al,0xa9
 1017cda:	(bad)  
 1017cdc:	adc    al,0xa5
 1017cde:	(bad)  
 1017ce0:	push   cs
 1017ce1:	mov    eax,ds:0x9e07ffdb
 1017ce6:	(bad)  
 1017ce8:	arpl   WORD PTR [ecx+0x35],cx
 1017ceb:	inc    DWORD PTR [eax]
	...
 1017d01:	add    BYTE PTR [eax],al
 1017d03:	add    BYTE PTR [ebx+0x66],al
 1017d06:	cmp    bh,0x63
 1017d09:	dec    ecx
 1017d0a:	xor    eax,0x354963ff
 1017d0f:	inc    DWORD PTR [eax+ebp*2-0x7c]
 1017d13:	call   FWORD PTR [ebp-0x45000916]
 1017d19:	in     eax,dx
 1017d1a:	stc    
 1017d1b:	push   DWORD PTR [ebp-0x4f000714]
 1017d21:	jmp    0x1017d1b
 1017d23:	jmp    FWORD PTR [edx+ebp*8-0x17570008]
 1017d2a:	idiv   edi
 1017d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1017d2d:	out    0xf7,eax
 1017d2f:	call   FWORD PTR [edi-0x6400091a]
 1017d35:	in     eax,0xf6
 1017d37:	call   FWORD PTR [eax-0x6b000a1d]
 1017d3d:	loop   0x1017d35
 1017d3f:	call   DWORD PTR [eax-0x72000a1f]
 1017d45:	loope  0x1017d3c
 1017d47:	dec    DWORD PTR [ecx-0x79000b20]
 1017d4d:	fcomip st,st(4)
 1017d4f:	inc    DWORD PTR [ebx-0x7f000b22]
 1017d55:	(bad)  
 1017d57:	(bad)  
 1017d58:	jle    0x1017d37
 1017d5a:	repz (bad) 
 1017d5c:	jl     0x1017d3b
 1017d5e:	repz (bad) 
 1017d60:	jp     0x1017d3e
 1017d62:	repz dec DWORD PTR [ebx]
 1017d65:	mov    eax,ds:0x4963ffdc
 1017d6a:	xor    eax,0xff
	...
 1017d83:	add    BYTE PTR [ebx+0x66],al
 1017d86:	cmp    bh,0x9b
 1017d89:	jmp    0xfff5:0xe99afff6
 1017d90:	inc    ebp
 1017d91:	imul   eax,DWORD PTR [ebp-0x9145f01],0xfaefc0ff
 1017d9b:	(bad)  
 1017d9c:	mov    esp,0xb8fff9ed
 1017da1:	in     al,dx
 1017da2:	stc    
 1017da3:	push   DWORD PTR [ebx-0x51000715]
 1017da9:	jmp    0xfff7:0xe9aafff8
 1017db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1017db1:	call   0xe8a47dad
 1017db6:	idiv   edi
 1017db8:	sahf   
 1017db9:	out    0xf7,al
 1017dbb:	call   FWORD PTR [edx-0x6a00091c]
 1017dc1:	jecxz  0x1017db9
 1017dc3:	call   DWORD PTR [edx-0x71000a1e]
 1017dc9:	loop   0x1017dc0
 1017dcb:	dec    DWORD PTR [ebx-0x77000a20]
 1017dd1:	fcomip st,st(4)
 1017dd3:	inc    DWORD PTR [ebp-0x7d000b22]
 1017dd9:	fdivrp st(4),st
 1017ddb:	inc    DWORD PTR [eax+0x7dfff3de]
 1017de1:	(bad)  
 1017de3:	call   DWORD PTR [edx]
 1017de5:	mov    ds:0x4963ffdd,eax
 1017dea:	xor    eax,0xff
	...
 1017e03:	add    BYTE PTR [eax+ebp*2-0x7c],al
 1017e07:	call   FWORD PTR [ebp-0x45000916]
 1017e0d:	in     eax,dx
 1017e0e:	stc    
 1017e0f:	inc    DWORD PTR [edi+0x6b]
 1017e12:	xchg   edi,edi
 1017e14:	mov    ds:0xa3fff7eb,al
 1017e19:	xlat   BYTE PTR ds:[ebx]
 1017e1a:	call   0xc9b2f21e
 1017e1f:	jmp    DWORD PTR [ebp+edx*4-0x55]
 1017e23:	push   DWORD PTR [eax-0x6d]
 1017e26:	mov    ds:0x9b7f4bff,eax
 1017e2b:	jmp    DWORD PTR [edi]
 1017e2d:	je     0x1017dcc
 1017e2f:	jmp    FWORD PTR [esi*2-0x43860065]
 1017e36:	sar    edi,cl
 1017e38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1017e39:	out    0xf7,eax
 1017e3b:	jmp    DWORD PTR [eax-0x6300091a]
 1017e41:	in     eax,0xf6
 1017e43:	call   FWORD PTR [eax-0x6b00091c]
 1017e49:	jecxz  0x1017e41
 1017e4b:	call   DWORD PTR [ecx-0x72000a1e]
 1017e51:	loope  0x1017e48
 1017e53:	dec    DWORD PTR [ecx-0x79000a20]
 1017e59:	loopne 0x1017e4f
 1017e5b:	inc    DWORD PTR [esi+ebx*8-0x217f000c]
 1017e62:	hlt    
 1017e63:	call   DWORD PTR [edi]
 1017e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1017e66:	(bad)  
 1017e68:	arpl   WORD PTR [ecx+0x35],cx
 1017e6b:	inc    DWORD PTR [eax]
	...
 1017e81:	add    BYTE PTR [eax],al
 1017e83:	add    BYTE PTR [ebp+0x69],al
 1017e86:	test   edi,edi
 1017e88:	mov    al,ds:0xc0fff6eb
 1017e8d:	out    dx,eax
 1017e8e:	cli    
 1017e8f:	dec    DWORD PTR [ecx+0x6d]
 1017e92:	mov    bh,bh
 1017e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1017e95:	in     al,dx
 1017e96:	idiv   edi
 1017e98:	dec    ecx
 1017e99:	mov    BYTE PTR [edi+edi*8-0x2f54bb],ah
 1017ea0:	(bad)  
 1017ea1:	in     eax,dx
 1017ea2:	cld    
 1017ea3:	dec    eax
 1017ea5:	(bad)  
 1017ea6:	(bad)  
 1017ea7:	jmp    DWORD PTR [edx-0x15]
 1017eaa:	(bad)  
 1017eab:	inc    DWORD PTR [eax]
 1017ead:	mov    ch,0xff
 1017eaf:	inc    DWORD PTR [eax]
 1017eb1:	mov    al,ds:0x6b2effe7
 1017eb6:	nop
 1017eb7:	jmp    DWORD PTR [ecx+eiz*8-0x17590010]
 1017ebe:	idiv   edi
 1017ec0:	mov    ds:0x9efff7e7,al
 1017ec5:	out    0xf6,al
 1017ec7:	call   FWORD PTR [edx-0x6800091c]
 1017ecd:	jecxz  0x1017ec5
 1017ecf:	call   DWORD PTR [ebx-0x7000091e]
 1017ed5:	loop   0x1017ecc
 1017ed7:	dec    DWORD PTR [ebx-0x77000b1f]
 1017edd:	fcomip st,st(4)
 1017edf:	inc    DWORD PTR [ebp+0x1efff4df]
 1017ee5:	stos   BYTE PTR es:[edi],al
 1017ee6:	(bad)  
 1017ee8:	arpl   WORD PTR [ecx+0x35],cx
 1017eeb:	inc    DWORD PTR [eax]
	...
 1017f01:	add    BYTE PTR [eax],al
 1017f03:	add    BYTE PTR [edi+0x6b],al
 1017f06:	xchg   edi,edi
 1017f08:	mov    ds:0xc7fff7eb,al
 1017f0d:	icebp  
 1017f0e:	cli    
 1017f0f:	dec    DWORD PTR [ebx+0x70]
 1017f12:	mov    edi,edi
 1017f14:	test   eax,0x4efff7ec
 1017f19:	mov    gs,WORD PTR [edx-0x1039be01]
 1017f1f:	call   DWORD PTR [edx-0x40000004]
 1017f25:	sti    
 1017f26:	sti    
 1017f27:	call   FWORD PTR [ebp-0x2f]
 1017f2a:	hlt    
 1017f2b:	inc    DWORD PTR [eax]
 1017f2d:	scas   eax,DWORD PTR es:[edi]
 1017f2e:	cmc    
 1017f2f:	inc    DWORD PTR [eax]
 1017f31:	mov    eax,0x762bffff
 1017f36:	sahf   
 1017f37:	jmp    FWORD PTR [esi-0x52000b1b]
 1017f3d:	jmp    0xfff7:0xe8a9fff8
 1017f44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1017f45:	out    0xf7,eax
 1017f47:	jmp    DWORD PTR [eax-0x62000819]
 1017f4d:	in     eax,0xf6
 1017f4f:	call   FWORD PTR [ecx-0x6a00091c]
 1017f55:	jecxz  0x1017f4d
 1017f57:	call   DWORD PTR [ecx-0x71000a1e]
 1017f5d:	loope  0x1017f54
 1017f5f:	dec    DWORD PTR [edx+0x26fff5e0]
 1017f65:	lods   eax,DWORD PTR ds:[esi]
 1017f66:	loope  0x1017f67
 1017f68:	arpl   WORD PTR [ecx+0x35],cx
 1017f6b:	inc    DWORD PTR [eax]
	...
 1017f81:	add    BYTE PTR [eax],al
 1017f83:	add    BYTE PTR [ecx+0x6d],cl
 1017f86:	mov    bh,bh
 1017f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1017f89:	in     al,dx
 1017f8a:	idiv   edi
 1017f8c:	into   
 1017f8d:	repnz cli 
 1017f8f:	dec    DWORD PTR [ebp+0x73]
 1017f92:	(bad)  
 1017f93:	jmp    FWORD PTR [ebp+0x51fff8ed]
 1017f99:	(bad)  
 1017f9a:	scas   al,BYTE PTR es:[edi]
 1017f9b:	inc    DWORD PTR [edx-0x41]
 1017f9e:	jmp    0xbdff:0xffef8eff
 1017fa5:	cmc    
 1017fa6:	idiv   edi
 1017fa8:	pop    esi
 1017fa9:	shl    cl,1
 1017fab:	inc    DWORD PTR [eax]
 1017fad:	stos   BYTE PTR es:[edi],al
 1017fae:	jmp    0x1017faf
 1017fb0:	add    BYTE PTR [ebx+0x7a29fffc],ch
 1017fb6:	test   al,0xff
 1017fb8:	mov    dh,0xeb
 1017fba:	clc    
 1017fbb:	push   DWORD PTR [ebx+ebp*8-0x15500008]
 1017fc2:	clc    
 1017fc3:	jmp    FWORD PTR [ebx-0x58000817]
 1017fc9:	call   0xe8a57fc5
 1017fce:	idiv   edi
 1017fd0:	sahf   
 1017fd1:	in     eax,0xf7
 1017fd3:	call   FWORD PTR [edx-0x6800091b]
 1017fd9:	in     al,0xf5
 1017fdb:	call   DWORD PTR [edx-0x70000a1d]
 1017fe1:	loope  0x1017fd8
 1017fe3:	jmp    FWORD PTR ds:0x63ffe1b2
 1017fe9:	dec    ecx
 1017fea:	xor    eax,0xff
	...
 1018003:	add    BYTE PTR [ebx+0x70],cl
 1018006:	mov    edi,edi
 1018008:	test   eax,0xd5fff7ec
 101800d:	hlt    
 101800e:	sti    
 101800f:	call   DWORD PTR [eax+0x75]
 1018012:	(bad)  
 1018013:	push   DWORD PTR [eax+0x54fff8ef]
 1018019:	xchg   ebp,eax
 101801a:	mov    cl,0xff
 101801c:	inc    esp
 101801d:	mov    esi,0xee8fffeb
 1018022:	(bad)  
 1018023:	(bad)  
 1018024:	mov    ebp,0x5dfff7f5
 1018029:	shl    dl,cl
 101802b:	inc    DWORD PTR [eax]
 101802d:	test   al,0xed
 101802f:	inc    DWORD PTR [eax]
 1018031:	stos   DWORD PTR es:[edi],eax
 1018032:	(bad)  
 1018033:	jmp    DWORD PTR [ebx]
 1018035:	jle    0x1017fe4
 1018037:	(bad)  
 1018038:	mov    edi,0xbbfff9ee
 101803d:	in     eax,dx
 101803e:	stc    
 101803f:	push   DWORD PTR [edi-0x4d000715]
 1018045:	jmp    0x101803f
 1018047:	jmp    FWORD PTR [ebp-0x56000717]
 101804d:	call   0xe8a7804a
 1018052:	idiv   edi
 1018054:	mov    eax,ds:0x9dfff7e6
 1018059:	in     eax,0xf6
 101805b:	call   FWORD PTR [ecx-0x6a00091b]
 1018061:	jecxz  0x1018058
 1018063:	push   DWORD PTR ds:0x63ffe3b6
 1018069:	dec    ecx
 101806a:	xor    eax,0xff
	...
 1018083:	add    BYTE PTR [ebp+0x73],cl
 1018086:	(bad)  
 1018087:	jmp    FWORD PTR [ebp-0x24000713]
 101808d:	cmc    
 101808e:	sti    
 101808f:	call   DWORD PTR [edx+0x78]
 1018092:	xchg   edx,eax
 1018093:	push   DWORD PTR [ebp+0x58fff9ef]
 1018099:	xchg   edi,eax
 101809a:	mov    ch,0xff
 101809c:	inc    ebp
 101809d:	mov    esi,0xee8fffea
 10180a2:	(bad)  
 10180a3:	(bad)  
 10180a4:	mov    ebx,0x5bfff7f5
 10180a9:	shl    ecx,1
 10180ab:	inc    DWORD PTR [eax]
 10180ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10180ae:	jmp    0x10180af
 10180b0:	add    BYTE PTR [ecx+0x7a24fffc],ch
 10180b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10180b7:	call   DWORD PTR [esi+0x77ff2f55]
 10180bd:	push   ebx
 10180be:	aaa    
 10180bf:	jmp    FWORD PTR [edx+0x53]
 10180c2:	aas    
 10180c3:	jmp    FWORD PTR [ecx+0x50]
 10180c6:	push   DWORD PTR ds:[eax+0x57]
 10180ca:	inc    esi
 10180cb:	push   DWORD PTR [eax+0x58]
 10180ce:	inc    esi
 10180cf:	push   DWORD PTR [eax+0x57]
 10180d2:	inc    esi
 10180d3:	jmp    DWORD PTR [edi-0x5c000818]
 10180d9:	out    0xf7,eax
 10180db:	call   FWORD PTR [edi-0x6400091a]
 10180e1:	in     al,0xf6
 10180e3:	(bad)  
 10180e4:	ds mov edx,0x4963ffe5
 10180ea:	xor    eax,0xff
	...
 1018103:	add    BYTE PTR [eax+0x75],dl
 1018106:	(bad)  
 1018107:	push   DWORD PTR [eax-0x1d000711]
 101810d:	idiv   esp
 101810f:	call   DWORD PTR [ebx+edi*2-0x6b]
 1018113:	(bad)  
 1018114:	mov    ecx,0x53fff8f1
 1018119:	call   0xffe9:0xba37ffb8
 1018120:	sub    al,0xfe
 1018123:	push   DWORD PTR [eax+0x42fff6f3]
 1018129:	(bad)  
 101812a:	out    dx,eax
 101812b:	inc    DWORD PTR [eax]
 101812d:	fwait
 101812e:	jmp    0x101812f
 1018130:	add    BYTE PTR [ebp+0x6b12fff3],dl
 1018136:	popf   
 1018137:	(bad)  
 1018138:	(bad)  
 1018139:	sar    BYTE PTR [ebp-0x1],cl
 101813f:	push   esp
 1018141:	loopne 0x1018118
 1018143:	push   edi
 1018145:	loopne 0x1018116
 1018147:	(bad)  
 1018148:	(bad)  
 1018149:	(bad)  
 101814a:	cli    
 101814b:	dec    ebx
 101814d:	mov    ah,0xa3
 101814f:	push   DWORD PTR [eax+0x57]
 1018152:	inc    esi
 1018153:	jmp    FWORD PTR [esi-0x55000816]
 1018159:	call   0xe8a88155
 101815e:	idiv   edi
 1018160:	mov    eax,ds:0x46fff6e7
 1018165:	mov    esi,0x4963ffe6
 101816a:	xor    eax,0xff
	...
 1018183:	add    BYTE PTR [edx+0x78],dl
 1018186:	xchg   edx,eax
 1018187:	push   DWORD PTR [ebp-0x17000611]
 101818d:	stc    
 101818e:	std    
 101818f:	call   DWORD PTR [esi+0x7e]
 1018192:	xchg   edi,eax
 1018193:	(bad)  
 1018194:	mov    ebp,0x56fff9f1
 1018199:	lahf   
 101819a:	mov    ebx,0xeeca4dff
 101819f:	call   FWORD PTR [eax-0x4100000c]
 10181a5:	stc    
 10181a6:	cld    
 10181a7:	(bad)  
 10181a8:	jle    0x1018189
 10181aa:	idiv   edi
 10181ac:	xor    eax,0x14fff4c3
 10181b1:	mov    bh,0xfc
 10181b3:	dec    DWORD PTR [esi]
 10181b5:	imul   ebx,DWORD PTR [edi+edi*8-0x55441e],0xffffffff
 10181bd:	(bad)  
 10181be:	clc    
 10181bf:	jmp    esi
 10181c1:	iret   
 10181c2:	(bad)  
 10181c3:	(bad)  
 10181c4:	fmul   st,st(2)
 10181c6:	mov    edx,0xd9ecf3ff
 10181cb:	call   ecx
 10181cd:	mov    eax,0x5770ffa3
 10181d2:	inc    esi
 10181d3:	push   DWORD PTR [ebp-0x4e000714]
 10181d9:	jmp    0xfff8:0xe9acfff8
 10181e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10181e1:	call   0xc45181dd
 10181e6:	out    0xff,eax
 10181e8:	arpl   WORD PTR [ecx+0x35],cx
 10181eb:	inc    DWORD PTR [eax]
	...
 1018201:	add    BYTE PTR [eax],al
 1018203:	add    BYTE PTR [ebx+edi*2-0x6b],dl
 1018207:	(bad)  
 1018208:	mov    ecx,0xedfff8f1
 101820d:	cli    
 101820e:	std    
 101820f:	call   FWORD PTR [ecx-0x7f]
 1018212:	call   0x80ff:0xfaf2c1ff
 1018219:	scas   eax,DWORD PTR es:[edi]
 101821a:	sar    edi,0xb0
 101821d:	call   0xe4820e
 1018222:	(bad)  
 1018223:	(bad)  
 1018224:	out    dx,eax
 1018225:	(bad)  
 1018226:	(bad)  
 1018227:	(bad)  
 1018228:	(bad)  
 1018229:	(bad)  
 101822a:	(bad)  
 101822b:	(bad)  
 101822c:	(bad)  
 101822d:	(bad)  
 101822e:	(bad)  
 101822f:	inc    eax
 1018231:	(bad)  
 1018232:	(bad)  
 1018233:	dec    DWORD PTR [ebx-0x72]
 1018236:	test   al,0xff
 1018238:	sar    BYTE PTR [edx-0xb020050],1
 101823e:	out    dx,eax
 101823f:	call   esi
 1018241:	int    0xc6
 1018243:	dec    DWORD PTR [ebp+0x47ff6b77]
 1018249:	aas    
 101824a:	aas    
 101824b:	jmp    FWORD PTR [ebx+0x4a]
 101824e:	cmp    al,0xff
 1018250:	jo     0x10182a9
 1018252:	inc    esi
 1018253:	(bad)  
 1018254:	mov    esp,0xb7fff9ed
 1018259:	in     al,dx
 101825a:	clc    
 101825b:	push   DWORD PTR [ebx-0x50000715]
 1018261:	jmp    0xffe9:0xc657fff8
 1018268:	arpl   WORD PTR [ecx+0x35],cx
 101826b:	inc    DWORD PTR [eax]
	...
 1018281:	add    BYTE PTR [eax],al
 1018283:	add    BYTE PTR [esi+0x7e],dl
 1018286:	xchg   edi,eax
 1018287:	(bad)  
 1018288:	mov    ebp,0xf2fff9f1
 101828d:	sti    
 101828e:	(bad)  
 101828f:	call   FWORD PTR [ebx-0x7b]
 1018292:	popf   
 1018293:	inc    esi
 1018295:	repz cli 
 1018297:	inc    ebp
 1018299:	loopne 0x1018281
 101829b:	jmp    FWORD PTR [ecx-0x61002730]
 10182a1:	retf   0xffd6
 10182a4:	cdq    
 10182a5:	enter  0xffd4,0x93
 10182a9:	ror    dh,0xff
 10182ac:	mov    edi,DWORD PTR [edi-0x456d0033]
 10182b2:	(bad)  
 10182b3:	call   FWORD PTR [ebp-0x1d004e51]
 10182b9:	int3   
 10182ba:	sar    edi,0xf5
 10182bd:	out    dx,eax
 10182be:	jmp    0xc1cd63c2
 10182c3:	jmp    FWORD PTR [ebp+0x6dff9097]
 10182c9:	ret    
 10182ca:	fdivp  st(7),st
 10182cc:	or     BYTE PTR [ecx],bh
 10182ce:	inc    edi
 10182cf:	push   DWORD PTR [eax+0x57]
 10182d2:	inc    esi
 10182d3:	inc    ebx
 10182d5:	out    dx,eax
 10182d6:	cli    
 10182d7:	(bad)  
 10182d8:	mov    esi,0xb9fff9ee
 10182dd:	in     eax,dx
 10182de:	stc    
 10182df:	push   DWORD PTR [ebp+0x60fff9ec]
 10182e5:	retf   
 10182e6:	jmp    0xff:0x354963ff
	...
 1018301:	add    BYTE PTR [eax],al
 1018303:	add    BYTE PTR [ecx-0x7f],bl
 1018306:	call   0xf6ff:0xfaf2c1ff
 101830d:	cld    
 101830e:	(bad)  
 101830f:	call   FWORD PTR [esi-0x78]
 1018312:	lahf   
 1018313:	dec    ebx
 1018315:	hlt    
 1018316:	cli    
 1018317:	(bad)  
 1018318:	(bad)  
 1018319:	(bad)  
 101831a:	(bad)  
 101831b:	(bad)  
 101831c:	stc    
 101831d:	std    
 101831e:	std    
 101831f:	(bad)  
 1018320:	in     al,dx
 1018321:	cmc    
 1018322:	clc    
 1018323:	(bad)  
 1018324:	call   0xea017a1b
 1018329:	cmc    
 101832a:	stc    
 101832b:	push   DWORD PTR [ecx-0x12007365]
 1018331:	out    0xe4,al
 1018333:	(bad)  
 1018334:	(bad)  
 1018335:	(bad)  
 1018336:	(bad)  
 1018337:	(bad)  
 1018338:	jmp    0x1018325
 101833a:	jmp    0x101833b
 101833c:	(bad)  
 101833d:	(bad)  
 101833e:	(bad)  
 101833f:	(bad)  
 1018340:	(bad)  
 1018341:	cli    
 1018342:	idiv   edi
 1018344:	iret   
 1018345:	out    0xf0,al
 1018347:	push   DWORD PTR [edx-0x5]
 101834a:	(bad)  
 101834b:	call   DWORD PTR [ebx-0x16]
 101834e:	(bad)  
 101834f:	call   DWORD PTR [edx]
 1018351:	dec    eax
 1018352:	pop    edi
 1018353:	call   DWORD PTR [ebx-0x3a00434f]
 1018359:	lock cli 
 101835b:	inc    ecx
 101835d:	out    dx,eax
 101835e:	cli    
 101835f:	(bad)  
 1018360:	mov    esp,0x68fff9ed
 1018365:	iret   
 1018366:	in     al,dx
 1018367:	jmp    DWORD PTR [ebx+0x49]
 101836a:	xor    eax,0xff
	...
 1018383:	add    BYTE PTR [ebx-0x7b],bl
 1018386:	popf   
 1018387:	inc    esi
 1018389:	repz cli 
 101838b:	(bad)  
 101838c:	sti    
 101838d:	(bad)  
 101838e:	(bad)  
 101838f:	jmp    DWORD PTR [eax-0x74]
 1018392:	mov    ds:0xfaf5cfff,eax
 1018397:	(bad)  
 1018398:	(bad)  
 1018399:	(bad)  
 101839a:	(bad)  
 101839b:	(bad)  
 101839c:	(bad)  
 101839d:	(bad)  
 101839e:	(bad)  
 101839f:	(bad)  
 10183a0:	std    
 10183a1:	(bad)  
 10183a2:	(bad)  
 10183a3:	(bad)  
 10183a4:	cli    
 10183a5:	(bad)  
 10183a6:	(bad)  
 10183a7:	(bad)  
 10183a8:	clc    
 10183a9:	std    
 10183aa:	(bad)  
 10183ab:	push   DWORD PTR [ecx-0x7365]
 10183b1:	sar    DWORD PTR [edx-0x36280001],cl
 10183b7:	(bad)  
 10183b8:	jmp    0xabc6:0xf6ffa0b7
 10183bf:	push   eax
 10183c1:	mov    cl,0x8f
 10183c3:	(bad)  
 10183c4:	jmp    FWORD PTR [ebx-0x6f370081]
 10183ca:	je     0x10183cb
 10183cc:	jno    0x10183aa
 10183ce:	idiv   edi
 10183d0:	addr16 idiv edi
 10183d3:	inc    DWORD PTR [ecx]
 10183d5:	xor    cl,BYTE PTR [eax-0x1]
 10183d8:	mov    eax,ds:0xc7ffc1bb
 10183dd:	icebp  
 10183de:	cli    
 10183df:	inc    ebx
 10183e1:	out    dx,eax
 10183e2:	cli    
 10183e3:	push   DWORD PTR [eax-0x2d]
 10183e6:	out    dx,al
 10183e7:	jmp    DWORD PTR [ebx+0x49]
 10183ea:	xor    eax,0xff
	...
 1018403:	add    BYTE PTR [esi-0x78],bl
 1018406:	lahf   
 1018407:	dec    ebx
 1018409:	hlt    
 101840a:	cli    
 101840b:	(bad)  
 101840c:	(bad)  
 101840d:	(bad)  
 101840e:	(bad)  
 101840f:	jmp    DWORD PTR [ebx-0x71]
 1018412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1018413:	call   esp
 1018415:	idiv   bl
 1018417:	(bad)  
 1018418:	(bad)  
 1018419:	(bad)  
 101841a:	(bad)  
 101841b:	(bad)  
 101841c:	(bad)  
 101841d:	(bad)  
 101841e:	(bad)  
 101841f:	(bad)  
 1018420:	(bad)  
 1018421:	(bad)  
 1018422:	(bad)  
 1018423:	(bad)  
 1018424:	(bad)  
 1018425:	(bad)  
 1018426:	(bad)  
 1018427:	(bad)  
 1018428:	cld    
 1018429:	(bad)  
 101842a:	(bad)  
 101842b:	push   DWORD PTR [ecx-0x5007365]
 1018431:	lods   al,BYTE PTR ds:[esi]
 1018432:	test   bh,bh
 1018434:	stc    
 1018435:	stos   DWORD PTR es:[edi],eax
 1018436:	cmp    edi,0xfffffff7
 1018439:	mov    ds:0x94f2ff79,eax
 101843e:	gs push ebx
 1018441:	mov    WORD PTR [eax-0x1],ds
 1018444:	test   DWORD PTR [ecx+0x78ffff46],0x82daff2e
 101844e:	pop    eax
 101844f:	dec    DWORD PTR [ecx+0x4ffff9e4]
 1018455:	loop   0x1018456
 1018457:	jmp    FWORD PTR [edi+edx*2]
 101845a:	pop    esp
 101845b:	call   DWORD PTR [ebx-0x3500625a]
 1018461:	icebp  
 1018462:	cli    
 1018463:	(bad)  
 1018464:	js     0x101843d
 1018466:	out    dx,eax
 1018467:	jmp    DWORD PTR [ebx+0x49]
 101846a:	xor    eax,0xff
	...
 1018483:	add    BYTE PTR [eax-0x74],ah
 1018486:	mov    ds:0xfaf5cfff,eax
 101848b:	(bad)  
 101848c:	(bad)  
 101848d:	(bad)  
 101848e:	(bad)  
 101848f:	jmp    DWORD PTR [esi-0x6e]
 1018492:	test   al,0xff
 1018494:	fincstp 
 1018496:	sti    
 1018497:	(bad)  
 1018498:	(bad)  
 1018499:	(bad)  
 101849a:	(bad)  
 101849b:	(bad)  
 101849c:	(bad)  
 101849d:	(bad)  
 101849e:	(bad)  
 101849f:	(bad)  
 10184a0:	(bad)  
 10184a1:	(bad)  
 10184a2:	(bad)  
 10184a3:	(bad)  
 10184a4:	(bad)  
 10184a5:	(bad)  
 10184a6:	(bad)  
 10184a7:	(bad)  
 10184a8:	(bad)  
 10184a9:	(bad)  
 10184aa:	(bad)  
 10184ab:	push   DWORD PTR [ecx-0x8007365]
 10184b1:	add    DWORD PTR [esi-0x1],0xff4681f7
 10184b8:	test   DWORD PTR [ecx-0x7e0800ba],0x81f7ff46
 10184c2:	inc    esi
 10184c3:	push   edi
 10184c5:	add    DWORD PTR [esi-0x1],0xff4681f7
 10184cc:	test   DWORD PTR [ecx-0x414500ba],0xfa81ffbe
 10184d6:	(bad)  
 10184d7:	dec    DWORD PTR [eax+0x36ffebed]
 10184dd:	inc    ecx
 10184de:	push   ebx
 10184df:	call   DWORD PTR [edx+0x7fffcea7]
 10184e5:	fdivr  st(0),st
 10184e7:	jmp    DWORD PTR [ebx+0x49]
 10184ea:	xor    eax,0xff
	...
 1018503:	add    BYTE PTR [ebx-0x71],ah
 1018506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1018507:	call   esp
 1018509:	idiv   bl
 101850b:	(bad)  
 101850c:	(bad)  
 101850d:	(bad)  
 101850e:	(bad)  
 101850f:	jmp    FWORD PTR [eax-0x6b]
 1018512:	stos   DWORD PTR es:[edi],eax
 1018513:	(bad)  
 1018514:	(bad)  
 1018516:	cld    
 1018517:	(bad)  
 1018518:	(bad)  
 1018519:	(bad)  
 101851a:	(bad)  
 101851b:	(bad)  
 101851c:	(bad)  
 101851d:	(bad)  
 101851e:	(bad)  
 101851f:	(bad)  
 1018520:	(bad)  
 1018521:	(bad)  
 1018522:	(bad)  
 1018523:	(bad)  
 1018524:	(bad)  
 1018525:	(bad)  
 1018526:	(bad)  
 1018527:	(bad)  
 1018528:	(bad)  
 1018529:	(bad)  
 101852a:	(bad)  
 101852b:	(bad)  
 101852c:	(bad)  
 101852d:	(bad)  
 101852e:	(bad)  
 101852f:	(bad)  
 1018530:	(bad)  
 1018531:	(bad)  
 1018532:	(bad)  
 1018533:	(bad)  
 1018534:	cld    
 1018535:	(bad)  
 1018536:	(bad)  
 1018537:	(bad)  
 1018538:	cli    
 1018539:	(bad)  
 101853a:	(bad)  
 101853b:	push   edi
 101853d:	std    
 101853e:	(bad)  
 101853f:	push   ebp
 1018541:	cld    
 1018542:	(bad)  
 1018543:	push   edx
 1018545:	cld    
 1018546:	std    
 1018547:	(bad)  
 1018548:	out    dx,al
 1018549:	sti    
 101854a:	(bad)  
 101854b:	(bad)  
 101854c:	jmp    0xfdf9:0xe7fffdf9
 1018553:	dec    ebx
 1018555:	in     eax,0xe5
 1018557:	jmp    DWORD PTR [ebx-0x7a003547]
 101855d:	mov    gs,ebx
 101855f:	(bad)  
 1018560:	aas    
 1018561:	inc    edi
 1018562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1018563:	inc    DWORD PTR [esi+0x63fff1df]
 1018569:	dec    ecx
 101856a:	xor    eax,0xff
	...
 1018583:	add    BYTE PTR [esi-0x6e],ah
 1018586:	test   al,0xff
 1018588:	fincstp 
 101858a:	sti    
 101858b:	(bad)  
 101858c:	(bad)  
 101858d:	(bad)  
 101858e:	(bad)  
 101858f:	jmp    FWORD PTR [ebx-0x67]
 1018592:	scas   al,BYTE PTR es:[edi]
 1018593:	jmp    ecx
 1018595:	clc    
 1018596:	cld    
 1018597:	(bad)  
 1018598:	(bad)  
 1018599:	(bad)  
 101859a:	(bad)  
 101859b:	(bad)  
 101859c:	(bad)  
 101859d:	(bad)  
 101859e:	(bad)  
 101859f:	(bad)  
 10185a0:	(bad)  
 10185a1:	(bad)  
 10185a2:	(bad)  
 10185a3:	(bad)  
 10185a4:	(bad)  
 10185a5:	(bad)  
 10185a6:	(bad)  
 10185a7:	(bad)  
 10185a8:	(bad)  
 10185a9:	(bad)  
 10185aa:	(bad)  
 10185ab:	(bad)  
 10185ac:	(bad)  
 10185ad:	(bad)  
 10185ae:	(bad)  
 10185af:	(bad)  
 10185b0:	(bad)  
 10185b1:	(bad)  
 10185b2:	(bad)  
 10185b3:	(bad)  
 10185b4:	(bad)  
 10185b5:	(bad)  
 10185b6:	(bad)  
 10185b7:	(bad)  
 10185b8:	std    
 10185b9:	(bad)  
 10185ba:	(bad)  
 10185bb:	(bad)  
 10185bc:	sti    
 10185bd:	(bad)  
 10185be:	(bad)  
 10185bf:	(bad)  
 10185c0:	stc    
 10185c1:	std    
 10185c2:	(bad)  
 10185c3:	push   ebp
 10185c5:	std    
 10185c6:	(bad)  
 10185c7:	push   ebx
 10185c9:	cld    
 10185ca:	(bad)  
 10185cb:	push   eax
 10185cd:	sti    
 10185ce:	(bad)  
 10185cf:	(bad)  
 10185d0:	in     al,dx
 10185d1:	cli    
 10185d2:	std    
 10185d3:	(bad)  
 10185d4:	call   0xb40183d2
 10185d9:	(bad)  
 10185da:	(bad)  
 10185dc:	push   ebx
 10185dd:	imul   ecx,ebx,0xd3a68fff
 10185e3:	dec    DWORD PTR [ecx+eiz*8+0x4963fff3]
 10185ea:	xor    eax,0xff
	...
 1018603:	add    BYTE PTR [eax-0x6b],ch
 1018606:	stos   DWORD PTR es:[edi],eax
 1018607:	(bad)  
 1018608:	(bad)  
 101860a:	cld    
 101860b:	(bad)  
 101860c:	(bad)  
 101860d:	(bad)  
 101860e:	(bad)  
 101860f:	jmp    FWORD PTR [ebp-0x65]
 1018612:	mov    al,0xff
 1018614:	in     eax,0xfa
 1018616:	std    
 1018617:	(bad)  
 1018618:	(bad)  
 1018619:	(bad)  
 101861a:	(bad)  
 101861b:	(bad)  
 101861c:	(bad)  
 101861d:	(bad)  
 101861e:	(bad)  
 101861f:	(bad)  
 1018620:	(bad)  
 1018621:	(bad)  
 1018622:	(bad)  
 1018623:	(bad)  
 1018624:	(bad)  
 1018625:	(bad)  
 1018626:	(bad)  
 1018627:	(bad)  
 1018628:	(bad)  
 1018629:	(bad)  
 101862a:	(bad)  
 101862b:	(bad)  
 101862c:	(bad)  
 101862d:	(bad)  
 101862e:	(bad)  
 101862f:	(bad)  
 1018630:	(bad)  
 1018631:	(bad)  
 1018632:	(bad)  
 1018633:	(bad)  
 1018634:	(bad)  
 1018635:	(bad)  
 1018636:	(bad)  
 1018637:	(bad)  
 1018638:	(bad)  
 1018639:	(bad)  
 101863a:	(bad)  
 101863b:	(bad)  
 101863c:	(bad)  
 101863d:	(bad)  
 101863e:	(bad)  
 101863f:	(bad)  
 1018640:	cld    
 1018641:	(bad)  
 1018642:	(bad)  
 1018643:	(bad)  
 1018644:	cli    
 1018645:	std    
 1018646:	(bad)  
 1018647:	push   edi
 1018649:	std    
 101864a:	(bad)  
 101864b:	push   ebp
 101864d:	cld    
 101864e:	(bad)  
 101864f:	push   edx
 1018651:	sti    
 1018652:	(bad)  
 1018653:	(bad)  
 1018654:	out    dx,eax
 1018655:	sti    
 1018656:	(bad)  
 1018657:	(bad)  
 1018658:	jmp    0x1018653
 101865a:	std    
 101865b:	jmp    edi
 101865d:	stc    
 101865e:	cld    
 101865f:	jmp    ebx
 1018661:	idiv   ebp
 1018663:	call   DWORD PTR [edx+0x63fff4e5]
 1018669:	dec    ecx
 101866a:	xor    eax,0xff
	...
 1018683:	add    BYTE PTR [ebx-0x67],ch
 1018686:	scas   al,BYTE PTR es:[edi]
 1018687:	jmp    ecx
 1018689:	clc    
 101868a:	cld    
 101868b:	(bad)  
 101868c:	(bad)  
 101868d:	(bad)  
 101868e:	(bad)  
 101868f:	push   DWORD PTR [eax-0x62]
 1018692:	mov    dl,0xff
 1018694:	jmp    0x1018493
 1018699:	(bad)  
 101869a:	(bad)  
 101869b:	(bad)  
 101869c:	(bad)  
 101869d:	(bad)  
 101869e:	(bad)  
 101869f:	(bad)  
 10186a0:	(bad)  
 10186a1:	(bad)  
 10186a2:	(bad)  
 10186a3:	(bad)  
 10186a4:	(bad)  
 10186a5:	(bad)  
 10186a6:	(bad)  
 10186a7:	(bad)  
 10186a8:	(bad)  
 10186a9:	(bad)  
 10186aa:	(bad)  
 10186ab:	(bad)  
 10186ac:	(bad)  
 10186ad:	(bad)  
 10186ae:	(bad)  
 10186af:	(bad)  
 10186b0:	(bad)  
 10186b1:	(bad)  
 10186b2:	(bad)  
 10186b3:	(bad)  
 10186b4:	(bad)  
 10186b5:	(bad)  
 10186b6:	(bad)  
 10186b7:	(bad)  
 10186b8:	(bad)  
 10186b9:	(bad)  
 10186ba:	(bad)  
 10186bb:	(bad)  
 10186bc:	(bad)  
 10186bd:	(bad)  
 10186be:	(bad)  
 10186bf:	(bad)  
 10186c0:	(bad)  
 10186c1:	(bad)  
 10186c2:	(bad)  
 10186c3:	(bad)  
 10186c4:	std    
 10186c5:	(bad)  
 10186c6:	(bad)  
 10186c7:	(bad)  
 10186c8:	sti    
 10186c9:	(bad)  
 10186ca:	(bad)  
 10186cb:	(bad)  
 10186cc:	clc    
 10186cd:	std    
 10186ce:	(bad)  
 10186cf:	push   esi
 10186d1:	std    
 10186d2:	(bad)  
 10186d3:	push   ebx
 10186d5:	cld    
 10186d6:	(bad)  
 10186d7:	push   eax
 10186d9:	sti    
 10186da:	(bad)  
 10186db:	(bad)  
 10186dc:	in     eax,dx
 10186dd:	cli    
 10186de:	std    
 10186df:	(bad)  
 10186e0:	jmp    0x980184de
 10186e5:	out    0xf4,eax
 10186e7:	jmp    DWORD PTR [ebx+0x49]
 10186ea:	xor    eax,0xff
	...
 1018703:	add    BYTE PTR [ebp-0x65],ch
 1018706:	mov    al,0xff
 1018708:	in     eax,0xfa
 101870a:	std    
 101870b:	(bad)  
 101870c:	(bad)  
 101870d:	(bad)  
 101870e:	(bad)  
 101870f:	push   DWORD PTR [edx-0x5f]
 1018712:	mov    ch,0xff
 1018714:	out    dx,al
 1018715:	sti    
 1018716:	std    
 1018717:	(bad)  
 1018718:	(bad)  
 1018719:	(bad)  
 101871a:	(bad)  
 101871b:	(bad)  
 101871c:	(bad)  
 101871d:	(bad)  
 101871e:	(bad)  
 101871f:	(bad)  
 1018720:	(bad)  
 1018721:	(bad)  
 1018722:	(bad)  
 1018723:	(bad)  
 1018724:	(bad)  
 1018725:	(bad)  
 1018726:	(bad)  
 1018727:	(bad)  
 1018728:	(bad)  
 1018729:	(bad)  
 101872a:	(bad)  
 101872b:	(bad)  
 101872c:	(bad)  
 101872d:	(bad)  
 101872e:	(bad)  
 101872f:	(bad)  
 1018730:	(bad)  
 1018731:	(bad)  
 1018732:	(bad)  
 1018733:	(bad)  
 1018734:	(bad)  
 1018735:	(bad)  
 1018736:	(bad)  
 1018737:	(bad)  
 1018738:	(bad)  
 1018739:	(bad)  
 101873a:	(bad)  
 101873b:	(bad)  
 101873c:	(bad)  
 101873d:	(bad)  
 101873e:	(bad)  
 101873f:	(bad)  
 1018740:	(bad)  
 1018741:	(bad)  
 1018742:	(bad)  
 1018743:	(bad)  
 1018744:	(bad)  
 1018745:	(bad)  
 1018746:	(bad)  
 1018747:	(bad)  
 1018748:	(bad)  
 1018749:	(bad)  
 101874a:	(bad)  
 101874b:	(bad)  
 101874c:	cld    
 101874d:	(bad)  
 101874e:	(bad)  
 101874f:	(bad)  
 1018750:	cli    
 1018751:	(bad)  
 1018752:	(bad)  
 1018753:	push   edi
 1018755:	std    
 1018756:	(bad)  
 1018757:	push   esp
 1018759:	cld    
 101875a:	(bad)  
 101875b:	push   edx
 101875d:	cld    
 101875e:	std    
 101875f:	(bad)  
 1018760:	out    dx,al
 1018761:	cli    
 1018762:	(bad)  
 1018763:	call   FWORD PTR [edx+0x63fff5e9]
 1018769:	dec    ecx
 101876a:	xor    eax,0xff
	...
 1018783:	add    BYTE PTR [eax-0x62],dh
 1018786:	mov    dl,0xff
 1018788:	jmp    0x1018587
 101878d:	(bad)  
 101878e:	(bad)  
 101878f:	push   DWORD PTR [ebp-0x5c]
 1018792:	mov    bh,0xff
 1018794:	icebp  
 1018795:	cld    
 1018796:	(bad)  
 1018797:	(bad)  
 1018798:	(bad)  
 1018799:	(bad)  
 101879a:	(bad)  
 101879b:	(bad)  
 101879c:	(bad)  
 101879d:	(bad)  
 101879e:	(bad)  
 101879f:	(bad)  
 10187a0:	(bad)  
 10187a1:	(bad)  
 10187a2:	(bad)  
 10187a3:	(bad)  
 10187a4:	(bad)  
 10187a5:	(bad)  
 10187a6:	(bad)  
 10187a7:	(bad)  
 10187a8:	(bad)  
 10187a9:	(bad)  
 10187aa:	(bad)  
 10187ab:	(bad)  
 10187ac:	(bad)  
 10187ad:	(bad)  
 10187ae:	(bad)  
 10187af:	(bad)  
 10187b0:	(bad)  
 10187b1:	(bad)  
 10187b2:	(bad)  
 10187b3:	(bad)  
 10187b4:	(bad)  
 10187b5:	(bad)  
 10187b6:	(bad)  
 10187b7:	(bad)  
 10187b8:	(bad)  
 10187b9:	(bad)  
 10187ba:	(bad)  
 10187bb:	(bad)  
 10187bc:	(bad)  
 10187bd:	(bad)  
 10187be:	(bad)  
 10187bf:	(bad)  
 10187c0:	(bad)  
 10187c1:	(bad)  
 10187c2:	(bad)  
 10187c3:	(bad)  
 10187c4:	(bad)  
 10187c5:	(bad)  
 10187c6:	(bad)  
 10187c7:	(bad)  
 10187c8:	(bad)  
 10187c9:	(bad)  
 10187ca:	(bad)  
 10187cb:	(bad)  
 10187cc:	(bad)  
 10187cd:	(bad)  
 10187ce:	(bad)  
 10187cf:	(bad)  
 10187d0:	(bad)  
 10187d1:	(bad)  
 10187d2:	(bad)  
 10187d3:	(bad)  
 10187d4:	cld    
 10187d5:	(bad)  
 10187d6:	(bad)  
 10187d7:	(bad)  
 10187d8:	jnp    0x1018786
 10187da:	mov    edi,0xb49f70ff
 10187df:	jmp    DWORD PTR [ecx-0x74]
 10187e2:	mov    ds:0x927952ff,al
 10187e7:	jmp    DWORD PTR [ebx+0x49]
 10187ea:	xor    eax,0xff
	...
 1018803:	add    BYTE PTR [edx-0x5f],dh
 1018806:	mov    ch,0xff
 1018808:	out    dx,al
 1018809:	sti    
 101880a:	std    
 101880b:	(bad)  
 101880c:	(bad)  
 101880d:	(bad)  
 101880e:	(bad)  
 101880f:	push   DWORD PTR [esi-0x59]
 1018812:	mov    ecx,0xfefdf4ff
 1018817:	(bad)  
 1018818:	(bad)  
 1018819:	(bad)  
 101881a:	(bad)  
 101881b:	(bad)  
 101881c:	(bad)  
 101881d:	(bad)  
 101881e:	(bad)  
 101881f:	(bad)  
 1018820:	(bad)  
 1018821:	(bad)  
 1018822:	(bad)  
 1018823:	(bad)  
 1018824:	(bad)  
 1018825:	(bad)  
 1018826:	(bad)  
 1018827:	(bad)  
 1018828:	(bad)  
 1018829:	(bad)  
 101882a:	(bad)  
 101882b:	(bad)  
 101882c:	(bad)  
 101882d:	(bad)  
 101882e:	(bad)  
 101882f:	(bad)  
 1018830:	(bad)  
 1018831:	(bad)  
 1018832:	(bad)  
 1018833:	(bad)  
 1018834:	(bad)  
 1018835:	(bad)  
 1018836:	(bad)  
 1018837:	(bad)  
 1018838:	(bad)  
 1018839:	(bad)  
 101883a:	(bad)  
 101883b:	(bad)  
 101883c:	(bad)  
 101883d:	(bad)  
 101883e:	(bad)  
 101883f:	(bad)  
 1018840:	(bad)  
 1018841:	(bad)  
 1018842:	(bad)  
 1018843:	(bad)  
 1018844:	(bad)  
 1018845:	(bad)  
 1018846:	(bad)  
 1018847:	(bad)  
 1018848:	(bad)  
 1018849:	(bad)  
 101884a:	(bad)  
 101884b:	(bad)  
 101884c:	(bad)  
 101884d:	(bad)  
 101884e:	(bad)  
 101884f:	(bad)  
 1018850:	(bad)  
 1018851:	(bad)  
 1018852:	(bad)  
 1018853:	push   DWORD PTR [esi-0x59]
 1018856:	mov    ecx,0x354963ff
 101885b:	jmp    DWORD PTR [ebx+0x49]
 101885e:	xor    eax,0x354963ff
 1018863:	jmp    DWORD PTR [ebx+0x49]
 1018866:	xor    eax,0x354963ff
 101886b:	jmp    DWORD PTR [ebx+0x49]
 101886e:	xor    eax,0xe
	...
 1018883:	add    BYTE PTR [ebp-0x5c],dh
 1018886:	mov    bh,0xff
 1018888:	icebp  
 1018889:	cld    
 101888a:	(bad)  
 101888b:	(bad)  
 101888c:	(bad)  
 101888d:	(bad)  
 101888e:	(bad)  
 101888f:	(bad)  
 1018890:	js     0x101883b
 1018892:	mov    esp,0xfffef7ff
 1018897:	(bad)  
 1018898:	(bad)  
 1018899:	(bad)  
 101889a:	(bad)  
 101889b:	(bad)  
 101889c:	(bad)  
 101889d:	(bad)  
 101889e:	(bad)  
 101889f:	(bad)  
 10188a0:	(bad)  
 10188a1:	(bad)  
 10188a2:	(bad)  
 10188a3:	(bad)  
 10188a4:	(bad)  
 10188a5:	(bad)  
 10188a6:	(bad)  
 10188a7:	(bad)  
 10188a8:	(bad)  
 10188a9:	(bad)  
 10188aa:	(bad)  
 10188ab:	(bad)  
 10188ac:	(bad)  
 10188ad:	(bad)  
 10188ae:	(bad)  
 10188af:	(bad)  
 10188b0:	(bad)  
 10188b1:	(bad)  
 10188b2:	(bad)  
 10188b3:	(bad)  
 10188b4:	(bad)  
 10188b5:	(bad)  
 10188b6:	(bad)  
 10188b7:	(bad)  
 10188b8:	(bad)  
 10188b9:	(bad)  
 10188ba:	(bad)  
 10188bb:	(bad)  
 10188bc:	(bad)  
 10188bd:	(bad)  
 10188be:	(bad)  
 10188bf:	(bad)  
 10188c0:	(bad)  
 10188c1:	(bad)  
 10188c2:	(bad)  
 10188c3:	(bad)  
 10188c4:	(bad)  
 10188c5:	(bad)  
 10188c6:	(bad)  
 10188c7:	(bad)  
 10188c8:	(bad)  
 10188c9:	(bad)  
 10188ca:	(bad)  
 10188cb:	(bad)  
 10188cc:	(bad)  
 10188cd:	(bad)  
 10188ce:	(bad)  
 10188cf:	(bad)  
 10188d0:	(bad)  
 10188d1:	(bad)  
 10188d2:	(bad)  
 10188d3:	(bad)  
 10188d4:	js     0x101887e
 10188d6:	mov    esp,0xe4b024ff
 10188db:	jmp    DWORD PTR [edi+ebp*4]
 10188de:	in     al,0xff
 10188e0:	xor    ebx,DWORD PTR [ecx+0x4a64ffbe]
 10188e6:	jmp    DWORD PTR ss:[ebx+0x49]
 10188ea:	xor    eax,0x9e
	...
 1018903:	add    BYTE PTR [esi-0x59],dh
 1018906:	mov    ecx,0xfefdf4ff
 101890b:	(bad)  
 101890c:	(bad)  
 101890d:	(bad)  
 101890e:	(bad)  
 101890f:	(bad)  
 1018910:	jns    0x10188bd
 1018912:	mov    ebp,0xfffefaff
 1018917:	(bad)  
 1018918:	(bad)  
 1018919:	(bad)  
 101891a:	(bad)  
 101891b:	(bad)  
 101891c:	(bad)  
 101891d:	(bad)  
 101891e:	(bad)  
 101891f:	(bad)  
 1018920:	(bad)  
 1018921:	(bad)  
 1018922:	(bad)  
 1018923:	(bad)  
 1018924:	(bad)  
 1018925:	(bad)  
 1018926:	(bad)  
 1018927:	(bad)  
 1018928:	(bad)  
 1018929:	(bad)  
 101892a:	(bad)  
 101892b:	(bad)  
 101892c:	(bad)  
 101892d:	(bad)  
 101892e:	(bad)  
 101892f:	(bad)  
 1018930:	(bad)  
 1018931:	(bad)  
 1018932:	(bad)  
 1018933:	(bad)  
 1018934:	(bad)  
 1018935:	(bad)  
 1018936:	(bad)  
 1018937:	(bad)  
 1018938:	(bad)  
 1018939:	(bad)  
 101893a:	(bad)  
 101893b:	(bad)  
 101893c:	(bad)  
 101893d:	(bad)  
 101893e:	(bad)  
 101893f:	(bad)  
 1018940:	(bad)  
 1018941:	(bad)  
 1018942:	(bad)  
 1018943:	(bad)  
 1018944:	(bad)  
 1018945:	(bad)  
 1018946:	(bad)  
 1018947:	(bad)  
 1018948:	(bad)  
 1018949:	(bad)  
 101894a:	(bad)  
 101894b:	(bad)  
 101894c:	(bad)  
 101894d:	(bad)  
 101894e:	(bad)  
 101894f:	(bad)  
 1018950:	(bad)  
 1018951:	(bad)  
 1018952:	(bad)  
 1018953:	(bad)  
 1018954:	jp     0x1018901
 1018956:	mov    ebp,0xedc651ff
 101895b:	call   DWORD PTR [ebp-0x5c]
 101895e:	mov    edx,0x374b65ff
 1018963:	jmp    DWORD PTR [edi+0x4d]
 1018966:	cmp    DWORD PTR [edx+0x0],edx
	...
 1018984:	js     0x101892f
 1018986:	mov    esp,0xfffef7ff
 101898b:	(bad)  
 101898c:	(bad)  
 101898d:	(bad)  
 101898e:	(bad)  
 101898f:	(bad)  
 1018990:	jnp    0x101893f
 1018992:	mov    esi,0xfefffdff
 1018997:	(bad)  
 1018998:	(bad)  
 1018999:	(bad)  
 101899a:	(bad)  
 101899b:	(bad)  
 101899c:	(bad)  
 101899d:	(bad)  
 101899e:	(bad)  
 101899f:	(bad)  
 10189a0:	(bad)  
 10189a1:	(bad)  
 10189a2:	(bad)  
 10189a3:	(bad)  
 10189a4:	(bad)  
 10189a5:	(bad)  
 10189a6:	(bad)  
 10189a7:	(bad)  
 10189a8:	(bad)  
 10189a9:	(bad)  
 10189aa:	(bad)  
 10189ab:	(bad)  
 10189ac:	(bad)  
 10189ad:	(bad)  
 10189ae:	(bad)  
 10189af:	(bad)  
 10189b0:	(bad)  
 10189b1:	(bad)  
 10189b2:	(bad)  
 10189b3:	(bad)  
 10189b4:	(bad)  
 10189b5:	(bad)  
 10189b6:	(bad)  
 10189b7:	(bad)  
 10189b8:	(bad)  
 10189b9:	(bad)  
 10189ba:	(bad)  
 10189bb:	(bad)  
 10189bc:	(bad)  
 10189bd:	(bad)  
 10189be:	(bad)  
 10189bf:	(bad)  
 10189c0:	(bad)  
 10189c1:	(bad)  
 10189c2:	(bad)  
 10189c3:	(bad)  
 10189c4:	(bad)  
 10189c5:	(bad)  
 10189c6:	(bad)  
 10189c7:	(bad)  
 10189c8:	(bad)  
 10189c9:	(bad)  
 10189ca:	(bad)  
 10189cb:	(bad)  
 10189cc:	(bad)  
 10189cd:	(bad)  
 10189ce:	(bad)  
 10189cf:	(bad)  
 10189d0:	(bad)  
 10189d1:	(bad)  
 10189d2:	(bad)  
 10189d3:	(bad)  
 10189d4:	jp     0x1018982
 10189d6:	mov    esi,0xb5a96cff
 10189db:	jmp    DWORD PTR [esi+0x4c]
 10189de:	cmp    bh,bh
 10189e0:	outs   dx,DWORD PTR ds:[esi]
 10189e1:	push   esi
 10189e2:	inc    edx
 10189e3:	mov    al,BYTE PTR [eax]
	...
 1018a01:	add    BYTE PTR [eax],al
 1018a03:	add    BYTE PTR [ecx-0x55],bh
 1018a06:	mov    ebp,0xfffefaff
 1018a0b:	(bad)  
 1018a0c:	(bad)  
 1018a0d:	(bad)  
 1018a0e:	(bad)  
 1018a0f:	(bad)  
 1018a10:	jl     0x10189c0
 1018a12:	sar    bh,0xff
 1018a15:	(bad)  
 1018a16:	(bad)  
 1018a17:	(bad)  
 1018a18:	(bad)  
 1018a19:	(bad)  
 1018a1a:	(bad)  
 1018a1b:	(bad)  
 1018a1c:	sti    
 1018a1d:	(bad)  
 1018a1e:	(bad)  
 1018a1f:	push   esi
 1018a21:	std    
 1018a22:	(bad)  
 1018a23:	push   eax
 1018a25:	cld    
 1018a26:	(bad)  
 1018a27:	(bad)  
 1018a28:	call   0xe4018827
 1018a2d:	clc    
 1018a2e:	cld    
 1018a2f:	(bad)  
 1018a30:	fincstp 
 1018a32:	sti    
 1018a33:	call   edx
 1018a35:	cmc    
 1018a36:	sti    
 1018a37:	dec    ecx
 1018a39:	hlt    
 1018a3a:	cli    
 1018a3b:	inc    ecx
 1018a3d:	repnz stc 
 1018a3f:	(bad)  
 1018a40:	mov    ecx,0xb1fff8f0
 1018a45:	out    dx,eax
 1018a46:	clc    
 1018a47:	jmp    FWORD PTR [edx-0x5b000813]
 1018a4d:	in     al,dx
 1018a4e:	idiv   edi
 1018a50:	lahf   
 1018a51:	jmp    0x1018a49
 1018a53:	push   DWORD PTR [edi-0x64]
 1018a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1018a57:	jmp    FWORD PTR [eax+0x4e]
 1018a5a:	cmp    bh,bh
 1018a5c:	jnp    0x1018ac0
 1018a5e:	dec    edi
 1018a5f:	add    BYTE PTR [eax],0x0
	...
 1018a82:	add    BYTE PTR [eax],al
 1018a84:	jnp    0x1018a33
 1018a86:	mov    esi,0xfefffdff
 1018a8b:	(bad)  
 1018a8c:	(bad)  
 1018a8d:	(bad)  
 1018a8e:	(bad)  
 1018a8f:	(bad)  
 1018a90:	jl     0x1018a40
 1018a92:	sar    bh,0x7c
 1018a95:	scas   al,BYTE PTR es:[edi]
 1018a96:	sar    bh,0x7c
 1018a99:	scas   al,BYTE PTR es:[edi]
 1018a9a:	sar    bh,0x7c
 1018a9d:	scas   al,BYTE PTR es:[edi]
 1018a9e:	sar    bh,0x7c
 1018aa1:	scas   al,BYTE PTR es:[edi]
 1018aa2:	sar    bh,0x7c
 1018aa5:	scas   al,BYTE PTR es:[edi]
 1018aa6:	sar    bh,0x7c
 1018aa9:	scas   al,BYTE PTR es:[edi]
 1018aaa:	sar    bh,0x7c
 1018aad:	scas   al,BYTE PTR es:[edi]
 1018aae:	sar    bh,0x7c
 1018ab1:	scas   al,BYTE PTR es:[edi]
 1018ab2:	sar    bh,0x7c
 1018ab5:	scas   al,BYTE PTR es:[edi]
 1018ab6:	sar    bh,0x7c
 1018ab9:	scas   al,BYTE PTR es:[edi]
 1018aba:	sar    bh,0x7c
 1018abd:	scas   al,BYTE PTR es:[edi]
 1018abe:	sar    bh,0x7c
 1018ac1:	scas   al,BYTE PTR es:[edi]
 1018ac2:	sar    bh,0x7c
 1018ac5:	scas   al,BYTE PTR es:[edi]
 1018ac6:	sar    bh,0x7c
 1018ac9:	scas   al,BYTE PTR es:[edi]
 1018aca:	sar    bh,0x7c
 1018acd:	scas   al,BYTE PTR es:[edi]
 1018ace:	sar    bh,0x7c
 1018ad1:	scas   al,BYTE PTR es:[edi]
 1018ad2:	sar    bh,0xa9
 1018ad5:	xchg   esp,eax
 1018ad6:	test   bh,bh
 1018ad8:	lea    esi,[esi+0x64]
 1018adb:	jno    0x1018add
	...
 1018b01:	add    BYTE PTR [eax],al
 1018b03:	add    BYTE PTR [esi+ebp*4-0x40],bh
 1018b07:	(bad)  
 1018b08:	(bad)  
 1018b09:	(bad)  
 1018b0a:	(bad)  
 1018b0b:	(bad)  
 1018b0c:	(bad)  
 1018b0d:	(bad)  
 1018b0e:	(bad)  
 1018b0f:	(bad)  
 1018b10:	sti    
 1018b11:	(bad)  
 1018b12:	(bad)  
 1018b13:	push   esi
 1018b15:	std    
 1018b16:	(bad)  
 1018b17:	push   eax
 1018b19:	cld    
 1018b1a:	(bad)  
 1018b1b:	(bad)  
 1018b1c:	call   0xe401891b
 1018b21:	clc    
 1018b22:	cld    
 1018b23:	(bad)  
 1018b24:	fincstp 
 1018b26:	sti    
 1018b27:	call   edx
 1018b29:	cmc    
 1018b2a:	sti    
 1018b2b:	dec    ecx
 1018b2d:	hlt    
 1018b2e:	cli    
 1018b2f:	inc    ecx
 1018b31:	repnz stc 
 1018b33:	(bad)  
 1018b34:	mov    ecx,0xb1fff8f0
 1018b39:	out    dx,eax
 1018b3a:	clc    
 1018b3b:	jmp    FWORD PTR [edx-0x5b000813]
 1018b41:	in     al,dx
 1018b42:	idiv   edi
 1018b44:	lahf   
 1018b45:	jmp    0x1018b3d
 1018b47:	push   DWORD PTR [edi-0x64]
 1018b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1018b4b:	jmp    FWORD PTR [eax+0x4e]
 1018b4e:	cmp    bh,bh
 1018b50:	jnp    0x1018bb4
 1018b52:	dec    edi
 1018b53:	add    BYTE PTR [eax],0x0
	...
 1018b82:	add    BYTE PTR [eax],al
 1018b84:	jl     0x1018b34
 1018b86:	sar    bh,0x7c
 1018b89:	scas   al,BYTE PTR es:[edi]
 1018b8a:	sar    bh,0x7c
 1018b8d:	scas   al,BYTE PTR es:[edi]
 1018b8e:	sar    bh,0x7c
 1018b91:	scas   al,BYTE PTR es:[edi]
 1018b92:	sar    bh,0x7c
 1018b95:	scas   al,BYTE PTR es:[edi]
 1018b96:	sar    bh,0x7c
 1018b99:	scas   al,BYTE PTR es:[edi]
 1018b9a:	sar    bh,0x7c
 1018b9d:	scas   al,BYTE PTR es:[edi]
 1018b9e:	sar    bh,0x7c
 1018ba1:	scas   al,BYTE PTR es:[edi]
 1018ba2:	sar    bh,0x7c
 1018ba5:	scas   al,BYTE PTR es:[edi]
 1018ba6:	sar    bh,0x7c
 1018ba9:	scas   al,BYTE PTR es:[edi]
 1018baa:	sar    bh,0x7c
 1018bad:	scas   al,BYTE PTR es:[edi]
 1018bae:	sar    bh,0x7c
 1018bb1:	scas   al,BYTE PTR es:[edi]
 1018bb2:	sar    bh,0x7c
 1018bb5:	scas   al,BYTE PTR es:[edi]
 1018bb6:	sar    bh,0x7c
 1018bb9:	scas   al,BYTE PTR es:[edi]
 1018bba:	sar    bh,0x7c
 1018bbd:	scas   al,BYTE PTR es:[edi]
 1018bbe:	sar    bh,0x7c
 1018bc1:	scas   al,BYTE PTR es:[edi]
 1018bc2:	sar    bh,0x7c
 1018bc5:	scas   al,BYTE PTR es:[edi]
 1018bc6:	sar    bh,0xa9
 1018bc9:	xchg   esp,eax
 1018bca:	test   bh,bh
 1018bcc:	lea    esi,[esi+0x64]
 1018bcf:	jno    0x1018bd1
	...
 1018bf5:	add    BYTE PTR [eax],al
 1018bf7:	add    ah,bh
 1018bf9:	add    BYTE PTR [eax],al
 1018bfb:	pop    es
 1018bfc:	cld    
 1018bfd:	add    BYTE PTR [eax],al
 1018bff:	pop    es
 1018c00:	loopne 0x1018c02
 1018c02:	add    BYTE PTR [edi],al
 1018c04:	loopne 0x1018c06
 1018c06:	add    BYTE PTR [edi],al
 1018c08:	loopne 0x1018c0a
 1018c0a:	add    BYTE PTR [edi],al
 1018c0c:	loopne 0x1018c0e
 1018c0e:	add    BYTE PTR [edi],al
 1018c10:	loopne 0x1018c12
 1018c12:	add    BYTE PTR [edi],al
 1018c14:	loopne 0x1018c16
 1018c16:	add    BYTE PTR [edi],al
 1018c18:	loopne 0x1018c1a
 1018c1a:	add    BYTE PTR [edi],al
 1018c1c:	loopne 0x1018c1e
 1018c1e:	add    BYTE PTR [edi],al
 1018c20:	loopne 0x1018c22
 1018c22:	add    BYTE PTR [edi],al
 1018c24:	loopne 0x1018c26
 1018c26:	add    BYTE PTR [edi],al
 1018c28:	loopne 0x1018c2a
 1018c2a:	add    BYTE PTR [edi],al
 1018c2c:	loopne 0x1018c2e
 1018c2e:	add    BYTE PTR [edi],al
 1018c30:	loopne 0x1018c32
 1018c32:	add    BYTE PTR [edi],al
 1018c34:	loopne 0x1018c36
 1018c36:	add    BYTE PTR [edi],al
 1018c38:	loopne 0x1018c3a
 1018c3a:	add    BYTE PTR [edi],al
 1018c3c:	loopne 0x1018c3e
 1018c3e:	add    BYTE PTR [edi],al
 1018c40:	loopne 0x1018c42
 1018c42:	add    BYTE PTR [edi],al
 1018c44:	loopne 0x1018c46
 1018c46:	add    BYTE PTR [edi],al
 1018c48:	loopne 0x1018c4a
 1018c4a:	add    BYTE PTR [edi],al
 1018c4c:	loopne 0x1018c4e
 1018c4e:	add    BYTE PTR [edi],al
 1018c50:	loopne 0x1018c52
 1018c52:	add    BYTE PTR [edi],al
 1018c54:	loopne 0x1018c56
 1018c56:	add    BYTE PTR [edi],al
 1018c58:	loopne 0x1018c5a
 1018c5a:	add    BYTE PTR [ebx],al
 1018c5c:	loopne 0x1018c5e
 1018c5e:	add    BYTE PTR [edi],al
 1018c60:	loopne 0x1018c62
 1018c62:	add    BYTE PTR [edi],cl
 1018c64:	loopne 0x1018c66
 1018c66:	add    BYTE PTR [edi],bl
 1018c68:	loopne 0x1018c6a
 1018c6a:	add    BYTE PTR [edi],bh
 1018c6c:	loopne 0x1018c6e
 1018c6e:	add    BYTE PTR [edi-0x20],bh
 1018c71:	add    BYTE PTR [ecx],al
 1018c73:	jmp    eax
 1018c75:	add    BYTE PTR [ebx],al
 1018c77:	jmp    FWORD PTR [eax]
 1018c79:	add    BYTE PTR [eax],al
 1018c7b:	add    BYTE PTR [eax],dl
 1018c7d:	add    BYTE PTR [eax],al
 1018c7f:	add    BYTE PTR [eax],ah
 1018c81:	add    BYTE PTR [eax],al
 1018c83:	add    BYTE PTR [ecx],al
 1018c85:	add    BYTE PTR [eax],ah
	...
 1018caf:	add    BYTE PTR [ebx+0x66],al
 1018cb2:	cmp    bh,0x6f
 1018cb5:	push   ebp
 1018cb6:	inc    eax
 1018cb7:	cld    
 1018cb8:	pop    ecx
 1018cb9:	ds sub edi,edi
 1018cbc:	pop    ebp
 1018cbd:	inc    ebx
 1018cbe:	cs in  al,0x5d
 1018cc1:	inc    ebx
 1018cc2:	cs in  al,0x5d
 1018cc5:	inc    ebx
 1018cc6:	cs in  al,0x5d
 1018cc9:	inc    ebx
 1018cca:	cs in  al,0x5d
 1018ccd:	inc    ebx
 1018cce:	cs in  al,0x5d
 1018cd1:	inc    ebx
 1018cd2:	cs in  al,0x5c
 1018cd5:	inc    edx
 1018cd6:	cs in  al,0x6a
 1018cd9:	dec    eax
 1018cda:	xor    edi,edi
	...
 1018cf0:	inc    ebx
 1018cf1:	data16 cmp bh,0xff
 1018cf5:	(bad)  
 1018cf6:	(bad)  
 1018cf7:	call   FWORD PTR [ebx-0x64000916]
 1018cfd:	jmp    0xfff3:0xe189fff6
 1018d04:	outs   dx,DWORD PTR ds:[esi]
 1018d05:	shr    ebp,cl
 1018d07:	call   DWORD PTR [ecx-0x3c]
 1018d0a:	call   0xe4b6c10e
 1018d0f:	call   FWORD PTR [ecx]
 1018d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1018d12:	fdivp  st(7),st
 1018d14:	pop    es
 1018d15:	sahf   
 1018d16:	(bad)  
 1018d18:	push   0x48
 1018d1a:	xor    edi,edi
	...
 1018d28:	inc    ebx
 1018d29:	data16 cmp bh,0x6f
 1018d2d:	push   ebp
 1018d2e:	inc    eax
 1018d2f:	cld    
 1018d30:	inc    ebx
 1018d31:	data16 cmp bh,0x8c
 1018d35:	mov    esp,0xbd71ffcb
 1018d3a:	retf   
 1018d3b:	call   FWORD PTR [edi]
 1018d3d:	pop    ebx
 1018d3f:	inc    edx
 1018d41:	rcr    ebp,cl
 1018d43:	push   DWORD PTR [eax-0x5c000716]
 1018d49:	out    0xf7,eax
 1018d4b:	call   DWORD PTR [edi-0x72000a1d]
 1018d51:	loope  0x1018d48
 1018d53:	inc    DWORD PTR [edi]
 1018d55:	sahf   
 1018d56:	(bad)  
 1018d58:	push   0x48
 1018d5a:	xor    edi,edi
	...
 1018d68:	inc    ebx
 1018d69:	data16 cmp bh,0xff
 1018d6d:	(bad)  
 1018d6e:	(bad)  
 1018d6f:	inc    DWORD PTR [ebp+0x69]
 1018d72:	test   edi,edi
 1018d74:	outs   dx,DWORD PTR ds:[esi]
 1018d75:	enter  0xffdc,0x92
 1018d79:	(bad)  
 1018d7a:	(bad)  
 1018d7b:	inc    DWORD PTR [eax]
 1018d7d:	scas   eax,DWORD PTR es:[edi]
 1018d7e:	(bad)  
 1018d7f:	call   FWORD PTR [edi-0x3c003e4d]
 1018d85:	lock cli 
 1018d87:	push   DWORD PTR [esi-0x55000714]
 1018d8d:	call   0xe7a08d89
 1018d92:	idiv   bh
 1018d94:	pop    es
 1018d95:	sahf   
 1018d96:	(bad)  
 1018d98:	push   0x48
 1018d9a:	xor    edi,edi
	...
 1018da8:	inc    ebx
 1018da9:	data16 cmp bh,0xff
 1018dad:	(bad)  
 1018dae:	(bad)  
 1018daf:	dec    DWORD PTR [edx+0x6e]
 1018db2:	mov    edi,edi
 1018db4:	imul   eax,ebp,0xfb88ffe0
 1018dba:	(bad)  
 1018dbb:	inc    DWORD PTR [eax]
 1018dbd:	(bad)  
 1018dbe:	hlt    
 1018dbf:	call   DWORD PTR [esi-0x2a008881]
 1018dc5:	scas   al,BYTE PTR es:[edi]
 1018dc6:	nop
 1018dc7:	jmp    FWORD PTR [esi-0x42007365]
 1018dcd:	out    dx,al
 1018dce:	stc    
 1018dcf:	push   DWORD PTR [eax+0x1efff8ea]
 1018dd5:	test   eax,0x486affde
 1018dda:	xor    edi,edi
	...
 1018de8:	inc    ebp
 1018de9:	imul   eax,DWORD PTR [ebp-0x1],0x8f754fff
 1018df3:	inc    DWORD PTR [ebx-0x69001f32]
 1018df9:	repnz cld 
 1018dfb:	call   DWORD PTR [ecx]
 1018dfd:	lods   al,BYTE PTR ds:[esi]
 1018dfe:	in     eax,dx
 1018dff:	push   DWORD PTR [ebx-0x323d]
 1018e05:	cmc    
 1018e06:	jmp    0x1018e07
 1018e08:	cmp    BYTE PTR [ecx+0x76],0xff
 1018e0c:	shl    bl,1
 1018e0e:	cli    
 1018e0f:	inc    ebx
 1018e11:	out    dx,eax
 1018e12:	cli    
 1018e13:	(bad)  
 1018e14:	ds mov ebx,0x486affe4
 1018e1a:	xor    edi,edi
	...
 1018e28:	dec    edx
 1018e29:	outs   dx,BYTE PTR ds:[esi]
 1018e2a:	mov    edi,edi
 1018e2c:	(bad)  
 1018e2d:	(bad)  
 1018e2e:	(bad)  
 1018e2f:	call   DWORD PTR [ebp+0x7c]
 1018e32:	xchg   esi,eax
 1018e33:	dec    esp
 1018e35:	out    0xec,al
 1018e37:	jmp    DWORD PTR [edx-0x64001128]
 1018e3d:	mov    ch,0xb8
 1018e3f:	(bad)  
 1018e40:	push   esi
 1018e42:	in     al,dx
 1018e43:	jmp    esp
 1018e45:	loope  0x1018e2a
 1018e47:	call   FWORD PTR [eax+0x79]
 1018e4a:	sar    edi,0x93
 1018e4d:	stos   BYTE PTR es:[edi],al
 1018e4e:	aad    0xff
 1018e50:	into   
 1018e51:	in     eax,dx
 1018e52:	clc    
 1018e53:	jmp    DWORD PTR [ebx-0x33]
 1018e56:	jmp    0x1018e57
 1018e58:	push   0x48
 1018e5a:	xor    edi,edi
	...
 1018e68:	dec    edi
 1018e69:	jne    0x1018dfa
 1018e6b:	(bad)  
 1018e6c:	(bad)  
 1018e6d:	(bad)  
 1018e6e:	(bad)  
 1018e6f:	call   FWORD PTR [ebp+eax*4-0x64]
 1018e73:	(bad)  
 1018e74:	(bad)  
 1018e75:	(bad)  
 1018e76:	(bad)  
 1018e77:	(bad)  
 1018e78:	(bad)  
 1018e79:	(bad)  
 1018e7a:	(bad)  
 1018e7b:	(bad)  
 1018e7c:	inc    esp
 1018e7e:	call   0xffff:0x8fb6ffff
 1018e85:	xchg   esp,eax
 1018e86:	pop    ecx
 1018e87:	dec    edi
 1018e89:	mov    eax,ds:0x8559ff85
 1018e8e:	(bad)  
 1018e8f:	push   DWORD PTR [edx-0x79]
 1018e92:	enter  0x83ff,0xda
 1018e96:	lock jmp FWORD PTR [edx+0x48]
 1018e9a:	xor    edi,edi
	...
 1018ea8:	push   ebp
 1018ea9:	jl     0x1018e41
 1018eab:	(bad)  
 1018eac:	(bad)  
 1018ead:	(bad)  
 1018eae:	(bad)  
 1018eaf:	jmp    DWORD PTR [edx-0x72]
 1018eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1018eb3:	(bad)  
 1018eb4:	(bad)  
 1018eb5:	(bad)  
 1018eb6:	(bad)  
 1018eb7:	(bad)  
 1018eb8:	(bad)  
 1018eb9:	(bad)  
 1018eba:	(bad)  
 1018ebb:	(bad)  
 1018ebc:	(bad)  
 1018ebd:	(bad)  
 1018ebe:	(bad)  
 1018ebf:	(bad)  
 1018ec0:	(bad)  
 1018ec1:	(bad)  
 1018ec2:	(bad)  
 1018ec3:	(bad)  
 1018ec4:	(bad)  
 1018ec5:	(bad)  
 1018ec6:	(bad)  
 1018ec7:	(bad)  
 1018ec8:	(bad)  
 1018ec9:	(bad)  
 1018eca:	(bad)  
 1018ecb:	inc    eax
 1018ecd:	out    dx,eax
 1018ece:	idiv   bh
 1018ed0:	pop    esi
 1018ed1:	jne    0x1018e94
 1018ed3:	dec    DWORD PTR [ecx]
 1018ed5:	popf   
 1018ed6:	(bad)  
 1018ed8:	push   0x48
 1018eda:	xor    edi,edi
	...
 1018ee8:	pop    esp
 1018ee9:	test   DWORD PTR [edi+edi*8-0x1],ebx
 1018ef0:	imul   edx,DWORD PTR [esi-0x55],0xffffffff
 1018efa:	(bad)  
 1018efb:	(bad)  
 1018efc:	(bad)  
 1018efd:	(bad)  
 1018efe:	(bad)  
 1018eff:	(bad)  
 1018f00:	(bad)  
 1018f01:	(bad)  
 1018f02:	(bad)  
 1018f03:	(bad)  
 1018f04:	(bad)  
 1018f05:	(bad)  
 1018f06:	(bad)  
 1018f07:	call   FWORD PTR [eax+0x7f]
 1018f0a:	cwde   
 1018f0b:	jmp    FWORD PTR [edx+0x48]
 1018f0e:	xor    edi,edi
 1018f10:	push   0x48
 1018f12:	xor    edi,edi
 1018f14:	push   0x48
 1018f16:	xor    edi,edi
 1018f18:	push   0x48
 1018f1a:	xor    edi,edi
	...
 1018f28:	bound  ecx,QWORD PTR [esi-0x5c]
 1018f2e:	(bad)  
 1018f2f:	jmp    FWORD PTR [edi-0x63]
 1018f32:	mov    dl,0xff
 1018f34:	(bad)  
 1018f35:	(bad)  
 1018f36:	(bad)  
 1018f37:	(bad)  
 1018f38:	(bad)  
 1018f39:	(bad)  
 1018f3a:	(bad)  
 1018f3b:	(bad)  
 1018f3c:	(bad)  
 1018f3d:	(bad)  
 1018f3e:	(bad)  
 1018f3f:	(bad)  
 1018f40:	(bad)  
 1018f41:	(bad)  
 1018f42:	(bad)  
 1018f43:	(bad)  
 1018f44:	(bad)  
 1018f45:	(bad)  
 1018f46:	(bad)  
 1018f47:	call   FWORD PTR [esi-0x78]
 1018f4a:	lahf   
 1018f4b:	push   DWORD PTR [ebx]
 1018f4d:	mov    ah,0xe2
 1018f4f:	push   DWORD PTR [ebx]
 1018f51:	mov    ah,0xe3
 1018f53:	call   FWORD PTR [edx+eax*2+0x2e]
 1018f57:	push   DWORD PTR [ebp+ebx*4+0x8e8d]
	...
 1018f66:	add    BYTE PTR [eax],al
 1018f68:	imul   edx,DWORD PTR [esi-0x55],0xa474ffff
 1018f72:	mov    bh,0xff
 1018f74:	(bad)  
 1018f75:	(bad)  
 1018f76:	(bad)  
 1018f77:	(bad)  
 1018f78:	(bad)  
 1018f79:	(bad)  
 1018f7a:	(bad)  
 1018f7b:	(bad)  
 1018f7c:	(bad)  
 1018f7d:	(bad)  
 1018f7e:	(bad)  
 1018f7f:	(bad)  
 1018f80:	(bad)  
 1018f81:	(bad)  
 1018f82:	(bad)  
 1018f83:	(bad)  
 1018f84:	(bad)  
 1018f85:	(bad)  
 1018f86:	(bad)  
 1018f87:	jmp    DWORD PTR [eax+edx*4-0x59]
 1018f8b:	jmp    FWORD PTR [edi-0x2d]
 1018f8e:	out    dx,al
 1018f8f:	call   FWORD PTR [edx+eax*2+0x2e]
 1018f93:	push   DWORD PTR [ebp+ebx*4-0x412b7173]
 1018f9a:	scas   eax,DWORD PTR es:[edi]
 1018f9b:	adc    al,BYTE PTR [eax]
	...
 1018fa5:	add    BYTE PTR [eax],al
 1018fa7:	add    BYTE PTR [edi-0x63],ch
 1018faa:	mov    dl,0xff
 1018fac:	(bad)  
 1018fad:	(bad)  
 1018fae:	(bad)  
 1018faf:	(bad)  
 1018fb0:	js     0x1018f5b
 1018fb2:	mov    esp,0xffffffff
 1018fb7:	(bad)  
 1018fb8:	(bad)  
 1018fb9:	(bad)  
 1018fba:	(bad)  
 1018fbb:	(bad)  
 1018fbc:	(bad)  
 1018fbd:	(bad)  
 1018fbe:	(bad)  
 1018fbf:	(bad)  
 1018fc0:	(bad)  
 1018fc1:	(bad)  
 1018fc2:	(bad)  
 1018fc3:	(bad)  
 1018fc4:	(bad)  
 1018fc5:	(bad)  
 1018fc6:	(bad)  
 1018fc7:	jmp    FWORD PTR [ebx-0x68]
 1018fca:	scas   al,BYTE PTR es:[edi]
 1018fcb:	call   FWORD PTR [edx+eax*2+0x2e]
 1018fcf:	(bad)  
 1018fd0:	mov    eax,0xd4cd91a1
 1018fd5:	mov    esi,0x12af
	...
 1018fe6:	add    BYTE PTR [eax],al
 1018fe8:	je     0x1018f8e
 1018fea:	mov    bh,0xff
 1018fec:	(bad)  
 1018fed:	(bad)  
 1018fee:	(bad)  
 1018fef:	(bad)  
 1018ff0:	jl     0x1018fa0
 1018ff2:	sar    bh,0x7b
 1018ff5:	lods   al,BYTE PTR ds:[esi]
 1018ff6:	mov    edi,0xbdaa79ff
 1018ffb:	push   DWORD PTR [edi-0x58]
 1018ffe:	mov    ebx,0xb8a576ff
 1019003:	push   DWORD PTR [ebx-0x5e]
 1019006:	mov    dh,0xff
 1019008:	jno    0x1018fa9
 101900a:	mov    ah,0xff
 101900c:	les    ebp,FWORD PTR [esi-0x48322a62]
 1019012:	test   al,0x2b
	...
 1019028:	js     0x1018fd3
 101902a:	mov    esp,0xffffffff
 101902f:	(bad)  
 1019030:	(bad)  
 1019031:	(bad)  
 1019032:	(bad)  
 1019033:	(bad)  
 1019034:	(bad)  
 1019035:	(bad)  
 1019036:	(bad)  
 1019037:	(bad)  
 1019038:	(bad)  
 1019039:	(bad)  
 101903a:	(bad)  
 101903b:	(bad)  
 101903c:	(bad)  
 101903d:	(bad)  
 101903e:	(bad)  
 101903f:	jmp    FWORD PTR [ebx-0x68]
 1019042:	scas   al,BYTE PTR es:[edi]
 1019043:	call   FWORD PTR [edx+eax*2+0x2e]
 1019047:	(bad)  
 1019048:	mov    edx,0xd48f93a3
 101904d:	mov    esi,0x12af
	...
 1019066:	add    BYTE PTR [eax],al
 1019068:	jl     0x1019018
 101906a:	sar    bh,0x7b
 101906d:	lods   al,BYTE PTR ds:[esi]
 101906e:	mov    edi,0xbdaa79ff
 1019073:	push   DWORD PTR [edi-0x58]
 1019076:	mov    ebx,0xb8a576ff
 101907b:	push   DWORD PTR [ebx-0x5e]
 101907e:	mov    dh,0xff
 1019080:	jno    0x1019021
 1019082:	mov    ah,0xff
 1019084:	leave  
 1019085:	mov    bl,0xa4
 1019087:	mov    eax,ds:0x1ba4b3c9
	...
 10190a0:	lock add DWORD PTR [eax],eax
 10190a3:	add    al,dh
 10190a5:	add    DWORD PTR [eax],eax
 10190a7:	add    al,al
 10190a9:	add    DWORD PTR [eax],eax
 10190ab:	add    al,al
 10190ad:	add    DWORD PTR [ebx-0x8fe3f01],ecx
 10190b3:	inc    eax
 10190b5:	add    ebx,edi
 10190b7:	inc    eax
 10190b9:	add    DWORD PTR [edi-0x7fe3f01],ecx
 10190bf:	inc    eax
 10190c1:	add    DWORD PTR [ecx-0x14fe3f01],esi
 10190c7:	inc    eax
 10190c9:	add    edi,edi
 10190cb:	inc    eax
 10190cd:	add    edi,esi
 10190cf:	inc    eax
 10190d1:	add    esi,edx
 10190d3:	inc    eax
 10190d5:	pop    es
 10190d6:	in     eax,dx
 10190d7:	inc    eax
 10190d9:	paddd  mm7,mm7
 10190dc:	rcr    BYTE PTR [edi],0xad
 10190df:	jmp    FWORD PTR [eax]
 10190e1:	add    BYTE PTR [eax],al
 10190e3:	add    BYTE PTR [eax],ah
 10190e5:	add    BYTE PTR [eax],al
 10190e7:	add    BYTE PTR [eax+0x0],al
 10190ea:	add    BYTE PTR [eax],al
 10190ec:	add    DWORD PTR [eax],eax
 10190ee:	or     BYTE PTR [eax],al
 10190f0:	add    BYTE PTR [eax],al
 10190f2:	add    BYTE PTR [eax],al
 10190f4:	add    BYTE PTR [eax+eax*1],al
	...
 10190ff:	add    BYTE PTR [eax],al
 1019101:	add    DWORD PTR [eax],eax
 1019103:	add    BYTE PTR [eax],al
 1019105:	add    DWORD PTR [eax],eax
 1019107:	add    BYTE PTR [eax],al
 1019109:	add    BYTE PTR [eax],al
 101910b:	add    BYTE PTR [ebx+0x49],ah
 101910e:	xor    eax,0x52473800
 1019113:	add    BYTE PTR [esi],bh
 1019115:	push   esp
 1019116:	bound  eax,QWORD PTR [eax]
 1019118:	outs   dx,BYTE PTR ds:[esi]
 1019119:	push   ebp
 101911a:	inc    edx
 101911b:	add    BYTE PTR [edx+0x59],dh
 101911e:	inc    esi
 101911f:	add    BYTE PTR [ebp+0x5c],dh
 1019122:	dec    edx
 1019123:	add    BYTE PTR [eax+0x5f],bh
 1019126:	dec    ebp
 1019127:	add    BYTE PTR [ebx+eiz*2+0x51],bh
 101912b:	add    BYTE PTR [esi+0x66],bh
 101912e:	push   ebp
 101912f:	add    BYTE PTR [edi+0x73],bl
 1019132:	jnp    0x1019134
 1019134:	push   0x6900766d
 1019139:	jb     0x10191b3
 101913b:	add    BYTE PTR [esi+0x74],ch
 101913e:	jge    0x1019140
 1019140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1019141:	push   esp
 1019142:	add    BYTE PTR [eax],al
 1019144:	lods   al,BYTE PTR ds:[esi]
 1019145:	pop    esi
 1019146:	verw   WORD PTR [edi+ebx*2+0x67b10010]
 101914e:	sbb    eax,0x1e68b100
 1019153:	add    BYTE PTR [edx-0x49ffde96],dh
 1019159:	jb     0x1019188
 101915b:	add    BYTE PTR [ebp+edi*2+0x6881003d],bh
 1019162:	push   esi
 1019163:	add    BYTE PTR [ebx-0x7bffa696],al
 1019169:	imul   ebx,DWORD PTR [ecx+0x0],0xffffff86
 101916d:	outs   dx,BYTE PTR ds:[esi]
 101916e:	pop    ebx
 101916f:	add    BYTE PTR [esi-0x76ffa393],al
 1019175:	jo     0x10191d5
 1019177:	add    BYTE PTR [ebp-0x75ffbf81],bh
 101917d:	jb     0x10191e0
 101917f:	add    BYTE PTR [ebp-0x70ff9b8b],cl
 1019185:	js     0x10191ee
 1019187:	add    BYTE PTR [ecx-0x6aff9687],dl
 101918d:	jge    0x10191fb
 101918f:	add    BYTE PTR [ebp-0x67ffbd80],bh
 1019195:	xor    DWORD PTR [ecx+0x0],0x73849b
 101919c:	popf   
 101919d:	xchg   BYTE PTR [ebp+0x0],dh
 10191a0:	lahf   
 10191a1:	mov    DWORD PTR [ecx+0x0],edi
 10191a4:	mov    al,ds:0xa4007888
 10191a9:	mov    bh,BYTE PTR [eax+0x0]
 10191ac:	mov    ds:0xa2007b8c,al
 10191b1:	mov    WORD PTR [eax+eax*1-0x5c],?
 10191b5:	mov    ?,WORD PTR [esi+0x0]
 10191b8:	les    ecx,FWORD PTR [ebp-0x6836ffab]
 10191be:	fs add ah,cl
 10191c1:	xchg   edi,eax
 10191c2:	data16 add ah,cl
 10191c5:	cwde   
 10191c6:	addr16 add bh,cl
 10191c9:	mov    eax,ds:0xa3cf0073
 10191ce:	jbe    0x10191d0
 10191d0:	shl    DWORD PTR [eax-0x5e2eff8d],1
 10191d6:	jbe    0x10191d8
 10191d8:	push   es
 10191d9:	ja     0x101916e
 10191db:	add    BYTE PTR [esi],al
 10191dd:	ja     0x1019173
 10191df:	add    BYTE PTR [esi],bl
 10191e1:	je     0x101917c
 10191e3:	add    BYTE PTR [ebp+0x76],ch
 10191e6:	add    DWORD PTR [eax],0x857b73
 10191ec:	add    eax,0x4009d80
 10191f1:	mov    ch,BYTE PTR [eax-0x5773fc00]
 10191f7:	add    BYTE PTR [ebx],al
 10191f9:	xchg   esi,eax
 10191fa:	mov    dl,0x0
 10191fc:	add    al,0x96
 10191fe:	mov    dl,0x0
 1019200:	add    ah,BYTE PTR [ecx-0x7d8cff42]
 1019206:	mov    es,WORD PTR [eax]
 1019208:	jne    0x1019194
 101920a:	xchg   edx,eax
 101920b:	add    BYTE PTR [ecx-0x74],bh
 101920e:	xchg   esi,eax
 101920f:	add    BYTE PTR [edx-0x70],bh
 1019212:	cwde   
 1019213:	add    BYTE PTR [edx],al
 1019215:	lods   al,BYTE PTR ds:[esi]
 1019216:	enter  0x100,0xb7
 101921a:	rol    BYTE PTR [eax],cl
 101921c:	add    DWORD PTR [eax-0x3fffff2e],edi
 1019222:	fiadd  DWORD PTR [eax]
 1019224:	add    dh,al
 1019226:	loopne 0x1019228
 1019228:	or     ecx,ebp
 101922a:	jecxz  0x101922c
 101922c:	adc    al,0xd2
 101922e:	out    0x0,al
 1019230:	and    dh,dl
 1019232:	jmp    0x3c00:0xecdc2e00
 1019239:	loop   0x101922b
 101923b:	add    BYTE PTR [eax-0x3b],bl
 101923e:	into   
 101923f:	add    BYTE PTR [ebx-0x18],cl
 1019242:	repnz add BYTE PTR [eax+ebp*8-0xe],cl
 1019247:	add    BYTE PTR [ebx-0x12],bl
 101924a:	test   BYTE PTR [eax],0x5c
 101924d:	in     eax,dx
 101924e:	test   DWORD PTR [eax],0xf7f066
 1019254:	imul   esi,ebx,0xf17500f9
 101925a:	test   DWORD PTR [eax],0xf8f175
 1019260:	ja     0x101925a
 1019262:	cld    
 1019263:	add    BYTE PTR [eax-0x7],bh
 1019266:	sti    
 1019267:	add    BYTE PTR [esi-0x56ff7e70],ah
 101926d:	xchg   ecx,eax
 101926e:	add    DWORD PTR [eax],0x8493ab
 1019274:	test   eax,0xac008494
 1019279:	xchg   esi,eax
 101927a:	xchg   BYTE PTR [eax],al
 101927c:	lods   eax,DWORD PTR ds:[esi]
 101927d:	cdq    
 101927e:	mov    DWORD PTR [eax],eax
 1019280:	mov    cl,0x99
 1019282:	mov    DWORD PTR [eax],eax
 1019284:	mov    al,0x9b
 1019286:	lea    eax,[eax]
 1019288:	mov    dl,0x9c
 101928a:	lea    eax,[eax]
 101928c:	mov    ah,0x9c
 101928e:	mov    es,WORD PTR [eax]
 1019290:	mov    bl,0x9f
 1019292:	nop
 1019293:	add    BYTE PTR [ebp-0x49ff6f61],dh
 1019299:	mov    al,ds:0xa2b70091
 101929e:	xchg   esp,eax
 101929f:	add    BYTE PTR [eax-0x47ff6d5e],bh
 10192a5:	mov    ds:0xa4b90094,eax
 10192aa:	xchg   esi,eax
 10192ab:	add    BYTE PTR [ebp+eiz*4-0x5945ff69],bh
 10192b2:	cwde   
 10192b3:	add    BYTE PTR [ebp-0x42ff675a],bh
 10192b9:	test   al,0x9a
 10192bb:	add    BYTE PTR [esi-0x2fff6356],bh
 10192c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10192c2:	pop    DWORD PTR [eax]
 10192c4:	shr    DWORD PTR [edx-0x543fff65],0x9c
 10192cb:	add    al,al
 10192cd:	lods   al,BYTE PTR ds:[esi]
 10192ce:	lahf   
 10192cf:	add    al,dl
 10192d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10192d2:	xchg   ecx,eax
 10192d3:	add    dl,dl
 10192d5:	test   al,0x93
 10192d7:	add    dl,dl
 10192d9:	stos   BYTE PTR es:[edi],al
 10192da:	xchg   esi,eax
 10192db:	add    ah,dl
 10192dd:	stos   DWORD PTR es:[edi],eax
 10192de:	xchg   edi,eax
 10192df:	add    ah,dl
 10192e1:	lods   eax,DWORD PTR ds:[esi]
 10192e2:	call   0xd600:0x95b7dd00
 10192e9:	mov    al,0x9d
 10192eb:	add    dh,bl
 10192ed:	mov    ebx,0xbddf009b
 10192f2:	popf   
 10192f3:	add    dl,al
 10192f5:	scas   al,BYTE PTR es:[edi]
 10192f6:	mov    al,ds:0xa3b1c500
 10192fb:	add    bh,al
 10192fd:	mov    cl,0xa5
 10192ff:	add    cl,cl
 1019301:	mov    ah,0xa9
 1019303:	add    bh,dl
 1019305:	mov    bl,0xa0
 1019307:	add    bh,dl
 1019309:	mov    ch,0xa3
 101930b:	add    al,bl
 101930d:	mov    ch,0xa3
 101930f:	add    al,bl
 1019311:	mov    bh,0xa5
 1019313:	add    dl,bl
 1019315:	mov    ecx,0xbada00a7
 101931a:	test   eax,0xacbcdb00
 101931f:	add    ah,bl
 1019321:	mov    esi,0xbfe200ae
 1019326:	mov    ds:0xb1c1de00,al
 101932b:	add    bh,bl
 101932d:	les    esi,FWORD PTR [esi-0x433a2b00]
 1019333:	add    cl,ah
 1019335:	ret    0xa5
 1019338:	jecxz  0x10192fe
 101933a:	test   eax,0xaec8e400
 101933f:	add    ch,ah
 1019341:	retf   0xb1
 1019344:	out    0xcc,al
 1019346:	mov    ah,0x0
 1019348:	jmp    0xb8c7:0xe000b6cb
 101934f:	add    al,dh
 1019351:	into   
 1019352:	mov    ebp,0xf8f38800
 1019357:	add    BYTE PTR [eax-0x7cff070c],cl
 101935d:	cld    
 101935e:	inc    BYTE PTR [eax]
 1019360:	test   ah,bh
 1019362:	inc    BYTE PTR [eax]
 1019364:	mov    edi,?
 1019366:	inc    DWORD PTR [eax]
 1019368:	in     al,dx
 1019369:	fcmovne st,st(2)
 101936b:	add    cl,dh
 101936d:	rol    cl,1
 101936f:	add    dl,dh
 1019371:	rol    esp,cl
 1019373:	add    bl,dh
 1019375:	aad    0xc7
 1019377:	add    bl,dh
 1019379:	(bad)  
 101937a:	enter  0xf200,0xd8
 101937e:	retf   0xf400
 1019381:	fmul   st,st(2)
 1019383:	add    bl,dh
 1019385:	fxch   st(4)
 1019387:	add    ah,dh
 1019389:	fcmove st,st(5)
 101938b:	add    ch,dh
 101938d:	fmul   st(7),st
 101938f:	add    bl,ah
 1019391:	fcmovbe st,st(3)
 1019393:	add    bl,dh
 1019395:	(bad)  
 1019397:	add    ah,dh
 1019399:	fst    st(1)
 101939b:	add    ch,dh
 101939d:	(bad)  
 101939f:	add    cl,dh
 10193a1:	jecxz  0x101937a
 10193a3:	add    ch,dh
 10193a5:	loopne 0x101937c
 10193a7:	add    dh,dh
 10193a9:	loop   0x1019384
 10193ab:	add    dh,dh
 10193ad:	in     al,0xdb
 10193af:	add    bh,dh
 10193b1:	out    0xdd,al
 10193b3:	add    al,bh
 10193b5:	out    0xdd,al
 10193b7:	add    bh,bl
 10193b9:	loop   0x10193a1
 10193bb:	add    al,bh
 10193bd:	jmp    0xebfa94a3
 10193c2:	in     al,0x0
 10193c4:	stc    
 10193c5:	in     al,dx
 10193c6:	in     eax,0x0
 10193c8:	repz out dx,eax
 10193ca:	in     eax,dx
 10193cb:	add    cl,bh
 10193cd:	out    dx,al
 10193ce:	call   0xebf28dd3
 10193d3:	add    dl,bh
 10193d5:	repnz in eax,dx
 10193d7:	add    ah,bh
 10193d9:	icebp  
 10193da:	in     eax,dx
 10193db:	add    cl,ah
 10193dd:	std    
 10193de:	std    
 10193df:	add    bl,bh
 10193e1:	hlt    
 10193e2:	icebp  
 10193e3:	add    ah,bh
 10193e5:	cmc    
 10193e6:	icebp  
 10193e7:	add    ah,bh
 10193e9:	div    ah
 10193eb:	add    ah,bh
 10193ed:	clc    
 10193ee:	cmc    
 10193ef:	add    dl,dh
 10193f1:	(bad)  
 10193f2:	inc    BYTE PTR [eax]
 10193f4:	std    
 10193f5:	cli    
 10193f6:	stc    
 10193f7:	add    dh,bh
 10193f9:	cld    
 10193fa:	cli    
 10193fb:	add    dh,bh
 10193fd:	(bad)  
 10193fe:	inc    BYTE PTR [eax]
	...
 101951c:	add    BYTE PTR [eax],al
 101951e:	lods   al,BYTE PTR ds:[esi]
 101951f:	add    eax,DWORD PTR [edx]
 1019521:	add    BYTE PTR [eax],al
 1019523:	lods   al,BYTE PTR ds:[esi]
	...
 101953c:	lods   al,BYTE PTR ds:[esi]
 101953d:	add    eax,DWORD PTR [ebx]
 101953f:	dec    ecx
 1019540:	dec    eax
 1019541:	cmp    bh,BYTE PTR [ecx]
 1019543:	add    BYTE PTR [eax],al
 1019545:	lods   al,BYTE PTR ds:[esi]
 1019546:	add    BYTE PTR [eax],al
 1019548:	add    BYTE PTR [esi],dl
 101954a:	add    DWORD PTR [ecx],eax
 101954c:	add    DWORD PTR [ecx],eax
 101954e:	add    DWORD PTR [ecx],eax
 1019550:	add    DWORD PTR [ecx],eax
 1019552:	add    DWORD PTR [ecx],eax
 1019554:	add    DWORD PTR [ecx],eax
 1019556:	add    DWORD PTR [ecx],eax
 1019558:	add    DWORD PTR [ecx],eax
 101955a:	add    DWORD PTR [ebx],ecx
 101955c:	add    ecx,DWORD PTR [ebx+ecx*2+0x4a]
 1019560:	dec    ecx
 1019561:	cmp    eax,0x34393a
 1019566:	or     al,BYTE PTR [eax]
 1019568:	add    BYTE PTR [eax],bl
 101956a:	mov    al,ds:0x86868688
 101956f:	add    BYTE PTR [edx+0x78787f82],0x76
 1019576:	jne    0x10195ed
 1019578:	jne    0x10195e8
 101957a:	outs   dx,BYTE PTR ds:[esi]
 101957b:	or     al,0x50
 101957d:	dec    esi
 101957e:	dec    esp
 101957f:	dec    ebx
 1019580:	dec    edx
 1019581:	ds cmp eax,0x234393a
 1019587:	add    BYTE PTR [eax],al
 1019589:	sbb    BYTE PTR [ecx+esi*4-0x54565051],ah
 1019590:	test   eax,0xa0a4a7a4
 1019595:	mov    al,ds:0x92999b9b
 101959a:	xchg   edx,eax
 101959b:	or     al,0x53
 101959d:	push   ecx
 101959e:	dec    esi
 101959f:	dec    esp
 10195a0:	dec    ebx
 10195a1:	inc    ebx
 10195a2:	ds cmp eax,0x2393a
 10195a8:	add    BYTE PTR [ebx],bl
 10195aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10195ab:	mov    bl,0xaf
 10195ad:	scas   eax,DWORD PTR es:[edi]
 10195ae:	scas   eax,DWORD PTR es:[edi]
 10195af:	stos   DWORD PTR es:[edi],eax
 10195b0:	stos   DWORD PTR es:[edi],eax
 10195b1:	test   eax,0xa0a4a4a7
 10195b6:	popf   
 10195b7:	fwait
 10195b8:	fwait
 10195b9:	fwait
 10195ba:	xchg   edx,eax
 10195bb:	aaa    
 10195bc:	push   edi
 10195bd:	push   ebx
 10195be:	push   eax
 10195bf:	dec    esi
 10195c0:	dec    esp
 10195c1:	inc    esp
 10195c2:	inc    ebx
 10195c3:	ds cmp eax,0x23a
 10195c9:	sbb    eax,0xb1b3b3a7
 10195ce:	scas   eax,DWORD PTR es:[edi]
 10195cf:	scas   eax,DWORD PTR es:[edi]
 10195d0:	stos   DWORD PTR es:[edi],eax
 10195d1:	stos   DWORD PTR es:[edi],eax
 10195d2:	test   eax,0xa0a4a4a9
 10195d7:	mov    al,ds:0x38929b9b
 10195dc:	xchg   esi,eax
 10195dd:	push   esi
 10195de:	push   ebx
 10195df:	push   eax
 10195e0:	dec    esi
 10195e1:	inc    esi
 10195e2:	inc    ebp
 10195e3:	inc    ebx
 10195e4:	ds cmp eax,0x1d000002
 10195ea:	test   eax,0x696f6fb8
 10195ef:	imul   esp,DWORD PTR [eax+0x5c],0x23272758
 10195f6:	and    BYTE PTR ds:0x3f060816,bl
 10195fc:	xchg   edi,eax
 10195fd:	xchg   edi,eax
 10195fe:	xchg   esi,eax
 10195ff:	push   esi
 1019600:	dec    ebp
 1019601:	cmp    al,BYTE PTR [edi+0x46]
 1019604:	inc    ebp
 1019605:	inc    ebx
 1019606:	add    al,BYTE PTR [eax]
 1019608:	add    BYTE PTR [eax],ah
 101960a:	test   eax,0xb1b3b8b8
 101960f:	scas   eax,DWORD PTR es:[edi]
 1019610:	scas   eax,DWORD PTR es:[edi]
 1019611:	scas   eax,DWORD PTR es:[edi]
 1019612:	stos   DWORD PTR es:[edi],eax
 1019613:	stos   DWORD PTR es:[edi],eax
 1019614:	test   eax,0xa0a4a4a4
 1019619:	popf   
 101961a:	fwait
 101961b:	inc    edx
 101961c:	xchg   edi,eax
 101961d:	xchg   edi,eax
 101961e:	dec    ebp
 101961f:	dec    ebp
 1019620:	mov    ch,0x93
 1019622:	cmp    bh,BYTE PTR [edx]
 1019624:	inc    esi
 1019625:	inc    ebp
 1019626:	add    al,BYTE PTR [eax]
 1019628:	add    BYTE PTR [eax],ah
 101962a:	stos   DWORD PTR es:[edi],eax
 101962b:	mov    ecx,0xb3b3b8b8
 1019630:	scas   eax,DWORD PTR es:[edi]
 1019631:	scas   eax,DWORD PTR es:[edi]
 1019632:	scas   eax,DWORD PTR es:[edi]
 1019633:	test   eax,0xa4a7a9ab
 1019638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1019639:	mov    al,ds:0x4d4d409d
 101963e:	mov    ebp,0x5593b5ba
 1019643:	push   edx
 1019644:	cmp    bh,BYTE PTR [edx]
 1019646:	add    al,BYTE PTR [eax]
 1019648:	add    BYTE PTR [eax],ah
 101964a:	scas   eax,DWORD PTR es:[edi]
 101964b:	mov    ebp,0x696f6f6f
 1019650:	fs pusha 
 1019652:	pop    esp
 1019653:	daa    
 1019654:	daa    
 1019655:	and    esp,DWORD PTR [ebx]
 1019657:	sbb    eax,0x4107091b
 101965c:	ss mov ebp,0x93b5babd
 1019662:	push   ebp
 1019663:	push   edx
 1019664:	push   eax
 1019665:	add    al,BYTE PTR ss:[eax]
 1019668:	add    BYTE PTR [ebx],ah
 101966a:	scas   eax,DWORD PTR es:[edi]
 101966b:	mov    ecx,0xb3b8b9b9
 1019670:	mov    bl,0xb1
 1019672:	scas   eax,DWORD PTR es:[edi]
 1019673:	scas   eax,DWORD PTR es:[edi]
 1019674:	scas   eax,DWORD PTR es:[edi]
 1019675:	lods   eax,DWORD PTR ds:[esi]
 1019676:	stos   DWORD PTR es:[edi],eax
 1019677:	test   eax,0xa0a4a4a7
 101967c:	lods   al,BYTE PTR ds:[esi]
 101967d:	ss ss mov edx,0x365493b5
 1019684:	lods   al,BYTE PTR ss:[esi]
 1019686:	add    BYTE PTR [eax],al
 1019688:	add    BYTE PTR [ebx],ah
 101968a:	scas   eax,DWORD PTR es:[edi]
 101968b:	mov    ebp,0xb8b9b9bd
 1019690:	mov    eax,0xafafb1b3
 1019695:	lods   eax,DWORD PTR ds:[esi]
 1019696:	stos   DWORD PTR es:[edi],eax
 1019697:	test   eax,0xa4a4a4a9
 101969c:	mov    al,ds:0x3636ac9d
 10196a1:	ss lods al,BYTE PTR ss:[esi]
 10196a4:	add    BYTE PTR [eax],al
 10196a6:	add    BYTE PTR [eax],al
 10196a8:	add    BYTE PTR [ebx],ah
 10196aa:	scas   eax,DWORD PTR es:[edi]
 10196ab:	mov    ebp,0x13a70ebd
 10196b0:	mov    ds,WORD PTR [ecx*4+0x770f0e0e]
 10196b7:	xor    ah,BYTE PTR cs:[eax-0x5f5f6fee]
 10196be:	js     0x10196c1
 10196c0:	lods   al,BYTE PTR ds:[esi]
 10196c1:	lods   al,BYTE PTR ds:[esi]
 10196c2:	add    BYTE PTR [eax],al
 10196c4:	add    BYTE PTR [eax],al
 10196c6:	add    BYTE PTR [eax],al
 10196c8:	add    BYTE PTR [edi],ah
 10196ca:	mov    bl,0xbd
 10196cc:	mov    ebp,0x8b138c0e
 10196d1:	sbb    al,0x8e
 10196d3:	sbb    al,0xb1
 10196d5:	mov    WORD PTR [edx],ss
 10196d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10196d8:	adc    ch,BYTE PTR [esi]
 10196da:	xor    ah,BYTE PTR [edi+0x17fa4a4]
	...
 10196e8:	add    BYTE PTR [esi],ah
 10196ea:	mov    bl,0xbd
 10196ec:	mov    ebp,0x312e310e
 10196f1:	sbb    al,0x90
 10196f3:	sbb    al,0xb3
 10196f5:	mov    cl,0xe
 10196f7:	scas   eax,DWORD PTR es:[edi]
 10196f8:	xor    dl,BYTE PTR [edx]
 10196fa:	test   eax,0x82a4a4a9
 10196ff:	add    DWORD PTR [eax],eax
	...
 1019709:	daa    
 101970a:	mov    eax,0x2c0ebdbd
 101970f:	cwde   
 1019710:	and    ah,BYTE PTR [edx]
 1019712:	mov    fs,WORD PTR [edx]
 1019714:	mov    bl,0x8d
 1019716:	adc    ch,BYTE PTR [edi-0x5678ede4]
 101971c:	test   eax,0x182a4
	...
 1019729:	daa    
 101972a:	mov    ecx,0x2c0ebdbd
 101972f:	mov    ebp,0xe8e2210
 1019734:	push   cs
 1019735:	adc    BYTE PTR [edx+0x7a],bh
 1019738:	sbb    al,0x8b
 101973a:	adc    al,0xab
 101973c:	test   eax,0x182a9
	...
 1019749:	pop    esp
 101974a:	mov    eax,0xbdbdbdbd
 101974f:	mov    ebp,0xb9bdbdbd
 1019754:	mov    ecx,0xb1b1b3b8
 1019759:	scas   eax,DWORD PTR es:[edi]
 101975a:	scas   eax,DWORD PTR es:[edi]
 101975b:	stos   DWORD PTR es:[edi],eax
 101975c:	stos   DWORD PTR es:[edi],eax
 101975d:	stos   DWORD PTR es:[edi],eax
 101975e:	xchg   BYTE PTR [ecx],al
	...
 1019768:	add    BYTE PTR [ecx+edi*4-0x43],bl
 101976c:	mov    ebp,0xbdbdbdbd
 1019771:	mov    ebp,0xb9b8bdbd
 1019776:	mov    eax,0xafb1b3b3
 101977b:	scas   eax,DWORD PTR es:[edi]
 101977c:	stos   DWORD PTR es:[edi],eax
 101977d:	stos   DWORD PTR es:[edi],eax
 101977e:	add    DWORD PTR [ecx],0x0
	...
 1019789:	pop    esp
 101978a:	mov    ebp,0x6f6f6fbd
 101978f:	outs   dx,DWORD PTR ds:[esi]
 1019790:	imul   ebp,DWORD PTR [ecx+0x60],0x5c
 1019794:	daa    
 1019795:	daa    
 1019796:	and    esp,DWORD PTR [eax]
 1019798:	sbb    eax,0x4050918
 101979d:	stos   DWORD PTR es:[edi],eax
 101979e:	xchg   BYTE PTR [ecx],al
	...
 10197a8:	add    BYTE PTR [ebp-0x43],bl
 10197ab:	mov    ebp,0xbdbdbdbd
 10197b0:	mov    ebp,0xbdbdbdbd
 10197b5:	mov    ebp,0xb3b8b8b9
 10197ba:	mov    bl,0xb1
 10197bc:	scas   eax,DWORD PTR es:[edi]
 10197bd:	scas   eax,DWORD PTR es:[edi]
 10197be:	mov    BYTE PTR [ecx],al
	...
 10197c8:	add    BYTE PTR [eax-0x43],ah
 10197cb:	mov    ebp,0xbdbdbdbd
 10197d0:	mov    ebp,0xbdbdbdbd
 10197d5:	mov    ebp,0xb8b8b9b9
 10197da:	mov    bl,0xb1
 10197dc:	mov    cl,0xaf
 10197de:	mov    BYTE PTR [ecx],al
	...
 10197e8:	add    BYTE PTR [eax-0x43],ah
 10197eb:	mov    ebp,0x6f6f6f6f
 10197f0:	ins    BYTE PTR es:[edi],dx
 10197f1:	imul   esp,DWORD PTR [ebx+0x60],0x21252759
 10197f8:	push   ds
 10197f9:	sbb    edx,DWORD PTR [esi]
 10197fb:	pop    es
 10197fc:	add    eax,0x188b1
	...
 1019809:	fs mov ebp,0xbdbdbdbd
 101980f:	mov    ebp,0xbdbdbdbd
 1019814:	mov    ebp,0xb9bdbdbd
 1019819:	mov    eax,0xb3b3b8b8
 101981e:	xchg   ecx,eax
 101981f:	add    DWORD PTR [eax],eax
	...
 1019829:	imul   edi,DWORD PTR [ebp-0x42424243],0xbdbdbdbd
 1019833:	mov    ebp,0xbdbdbdbd
 1019838:	mov    ebp,0x6b7eb8b9
 101983d:	pusha  
 101983e:	daa    
 101983f:	add    DWORD PTR [eax],eax
	...
 1019849:	imul   edi,DWORD PTR [ebp+0x6f6f6fbd],0x69696f6f
 1019853:	pusha  
 1019854:	pusha  
 1019855:	pusha  
 1019856:	mov    ebp,0x23bdbdbd
 101985b:	add    DWORD PTR [ecx],eax
 101985d:	add    DWORD PTR [ecx],eax
 101985f:	add    DWORD PTR [eax],eax
	...
 1019869:	ins    BYTE PTR es:[edi],dx
 101986a:	mov    ebp,0xbdbdbdbd
 101986f:	mov    ebp,0xbdbdbdbd
 1019874:	mov    ebp,0xbdbdbdbd
 1019879:	mov    ebp,0x617e8a27
 101987e:	and    eax,0x0
 1019883:	add    BYTE PTR [eax],al
 1019885:	add    BYTE PTR [eax],al
 1019887:	add    BYTE PTR [eax],al
 1019889:	ins    BYTE PTR es:[edi],dx
 101988a:	mov    ebp,0xbdbdbdbd
 101988f:	mov    ebp,0xbdbdbdbd
 1019894:	mov    ebp,0xbdbdbdbd
 1019899:	mov    ebp,0x258aa227
	...
 10198a6:	add    BYTE PTR [eax],al
 10198a8:	add    BYTE PTR [ebx-0x43],bh
 10198ab:	mov    ebp,0xbdbdbdbd
 10198b0:	mov    ebp,0xbdbdbdbd
 10198b5:	mov    ebp,0xbdbdbdbd
 10198ba:	pop    eax
 10198bb:	mov    al,0x25
	...
 10198c9:	jnp    0x1019888
 10198cb:	mov    ebp,0xbdbdbdbd
 10198d0:	mov    ecx,0xb3b3b8b9
 10198d5:	scas   eax,DWORD PTR es:[edi]
 10198d6:	scas   eax,DWORD PTR es:[edi]
 10198d7:	scas   eax,DWORD PTR es:[edi]
 10198d8:	test   eax,0x5c58a9
	...
 10198e9:	jl     0x1019966
 10198eb:	jnp    0x101995c
 10198ed:	ins    BYTE PTR es:[edi],dx
 10198ee:	ins    BYTE PTR es:[edi],dx
 10198ef:	imul   ebp,DWORD PTR [ecx+0x69],0x64
 10198f3:	fs pusha 
 10198f5:	arpl   WORD PTR [ebp+0x5d],bx
 10198f8:	pop    ebp
 10198f9:	pop    esp
 10198fa:	pop    esp
	...
 1019907:	add    bh,bh
 1019909:	(bad)  
 101990a:	cld    
 101990b:	ud0    edi,edi
 101990e:	lock add eax,DWORD PTR [eax-0x7fff0000]
 1019915:	add    BYTE PTR [eax],al
 1019917:	add    DWORD PTR [eax-0x7fff0000],eax
 101991d:	add    BYTE PTR [eax],al
 101991f:	add    DWORD PTR [eax-0x7fff0000],eax
 1019925:	add    BYTE PTR [eax],al
 1019927:	add    DWORD PTR [eax-0x7fff0000],eax
 101992d:	add    BYTE PTR [eax],al
 101992f:	add    DWORD PTR [eax-0x7fff0000],eax
 1019935:	add    BYTE PTR [eax],al
 1019937:	add    eax,DWORD PTR [eax-0x7ff10000]
 101993d:	add    BYTE PTR [eax],al
 101993f:	aas    
 1019940:	add    BYTE PTR [eax],0x0
 1019943:	inc    DWORD PTR [eax-0x7f010000]
 1019949:	add    BYTE PTR [eax],al
 101994b:	inc    DWORD PTR [eax-0x7f010000]
 1019951:	add    BYTE PTR [eax],al
 1019953:	inc    DWORD PTR [eax-0x7f010000]
 1019959:	add    BYTE PTR [eax],al
 101995b:	inc    DWORD PTR [eax-0x7f010000]
 1019961:	add    BYTE PTR [eax],al
 1019963:	inc    DWORD PTR [eax-0x7f010000]
 1019969:	add    BYTE PTR [eax],al
 101996b:	inc    DWORD PTR [eax-0x7f010000]
 1019971:	add    BYTE PTR [eax],al
 1019973:	inc    DWORD PTR [eax-0x7f00ff00]
 1019979:	add    BYTE PTR [ebx],al
 101997b:	inc    DWORD PTR [eax-0x7f00f900]
 1019981:	add    BYTE PTR [edi],cl
 1019983:	inc    DWORD PTR [eax+0x28ff1f00]
 1019989:	add    BYTE PTR [eax],al
 101998b:	add    BYTE PTR [eax],dl
 101998d:	add    BYTE PTR [eax],al
 101998f:	add    BYTE PTR [eax],ah
 1019991:	add    BYTE PTR [eax],al
 1019993:	add    BYTE PTR [ecx],al
 1019995:	add    BYTE PTR [eax],cl
 1019997:	add    BYTE PTR [eax],al
 1019999:	add    BYTE PTR [eax],al
 101999b:	add    BYTE PTR [eax],al
 101999d:	add    DWORD PTR [eax],eax
	...
 10199a7:	add    BYTE PTR [eax],al
 10199a9:	add    DWORD PTR [eax],eax
 10199ab:	add    BYTE PTR [eax],al
 10199ad:	add    DWORD PTR [eax],eax
 10199af:	add    BYTE PTR [eax],al
 10199b1:	add    BYTE PTR [eax],al
 10199b3:	add    BYTE PTR [eax],al
 10199b5:	add    bl,BYTE PTR [ecx]
 10199b7:	add    BYTE PTR [eax],al
 10199b9:	add    eax,0x17000025
 10199be:	xor    eax,0x371b0300
 10199c3:	add    BYTE PTR [ebx],al
 10199c5:	and    eax,0x4963003e
 10199ca:	xor    eax,0x3d516c00
 10199cf:	add    BYTE PTR [eax],al
 10199d1:	sub    al,0x43
 10199d3:	add    BYTE PTR [ebx],al
 10199d5:	xor    al,0x4f
 10199d7:	add    BYTE PTR ds:0x6458,cl
 10199dd:	dec    edx
 10199de:	jnp    0x10199e0
 10199e0:	adc    ebp,DWORD PTR [eax+0x78]
 10199e3:	add    BYTE PTR [edx+edx*2+0x54],dl
 10199e7:	add    BYTE PTR [edx+0x4f],ah
 10199ea:	inc    ecx
 10199eb:	add    BYTE PTR [ecx+0x57],dh
 10199ee:	inc    esp
 10199ef:	add    BYTE PTR [esi+0x5c],dh
 10199f2:	dec    ecx
 10199f3:	add    BYTE PTR [edx+0x61],bh
 10199f6:	dec    esi
 10199f7:	add    BYTE PTR [ebp+0x6a],dl
 10199fa:	jp     0x10199fc
 10199fc:	popa   
 10199fd:	jo     0x1019a72
 10199ff:	add    BYTE PTR [edi+0x78],ch
 1019a02:	jge    0x1019a04
 1019a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1019a05:	push   esp
 1019a06:	add    BYTE PTR [eax],al
 1019a08:	stos   DWORD PTR es:[edi],eax
 1019a09:	pop    edi
 1019a0a:	adc    DWORD PTR [eax],eax
 1019a0c:	lods   al,BYTE PTR ds:[esi]
 1019a0d:	pop    edi
 1019a0e:	adc    BYTE PTR [eax],al
 1019a10:	xchg   edi,eax
 1019a11:	outs   dx,BYTE PTR ds:[esi]
 1019a12:	cmp    eax,DWORD PTR [eax]
 1019a14:	mov    cl,0x6a
 1019a16:	and    DWORD PTR [eax],eax
 1019a18:	mov    bh,0x73
 1019a1a:	das    
 1019a1b:	add    BYTE PTR [ebp+edi*2+0x6780003e],bh
 1019a22:	push   ebp
 1019a23:	add    BYTE PTR [esi-0x42ffa593],al
 1019a29:	jle    0x1019a6b
 1019a2b:	add    BYTE PTR [ebx-0x42ff9e8d],cl
 1019a31:	add    BYTE PTR [edx+0x0],0xbd
 1019a35:	add    DWORD PTR [eax+eax*1-0x69],0x9d006f80
 1019a3d:	xchg   BYTE PTR [esi+0x0],dh
 1019a40:	mov    ds:0xcc007c8c,al
 1019a45:	cwde   
 1019a46:	push   0x8c781100
 1019a4b:	add    BYTE PTR [eax],al
 1019a4d:	imul   ebx,DWORD PTR [ecx-0x61920000],0x0
 1019a54:	sub    BYTE PTR [edi-0x7d],dh
 1019a57:	add    BYTE PTR ds:0x8a7e,dh
 1019a5d:	jne    0x1019a03
 1019a5f:	add    BYTE PTR [eax],al
 1019a61:	jp     0x1019a0c
 1019a63:	add    BYTE PTR [eax],al
 1019a65:	test   BYTE PTR [eax-0x40700000],dh
 1019a6b:	add    BYTE PTR [edx-0x6f],al
 1019a6e:	fwait
 1019a6f:	add    BYTE PTR [ebp-0x6f],dl
 1019a72:	scas   al,BYTE PTR es:[edi]
 1019a73:	add    BYTE PTR [eax],al
 1019a75:	sahf   
 1019a76:	int3   
 1019a77:	add    BYTE PTR [eax],al
 1019a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1019a7a:	mov    DWORD PTR [eax],0xd4ab00
 1019a80:	add    BYTE PTR [ecx+ebp*8-0x3e5b9800],bh
 1019a87:	add    BYTE PTR [eax],al
 1019a89:	(bad)  
 1019a8a:	jecxz  0x1019a8c
 1019a8c:	add    bl,bl
 1019a8e:	clc    
 1019a8f:	add    BYTE PTR [eax],al
 1019a91:	loopne 0x1019a92
 1019a93:	add    BYTE PTR [eax],al
 1019a95:	in     al,dx
 1019a96:	inc    BYTE PTR [eax]
 1019a98:	sbb    cl,ch
 1019a9a:	stc    
 1019a9b:	add    BYTE PTR [eax],al
 1019a9d:	clc    
 1019a9e:	inc    DWORD PTR [eax]
 1019aa0:	add    eax,0xfff8
 1019aa5:	(bad)  
 1019aa6:	inc    DWORD PTR [eax]
 1019aa8:	and    esp,edi
 1019aaa:	out    dx,eax
 1019aab:	add    BYTE PTR [ebx],ch
 1019aad:	(bad)  
 1019aae:	inc    DWORD PTR [eax]
 1019ab0:	xor    eax,0x4400ffff
 1019ab5:	loopne 0x1019aa1
 1019ab7:	add    BYTE PTR [edi-0x1],cl
 1019aba:	inc    DWORD PTR [eax]
 1019abc:	pop    esp
 1019abd:	(bad)  
 1019abe:	inc    DWORD PTR [eax]
 1019ac0:	out    0xf1,ax
 1019ac3:	add    BYTE PTR [esi-0x1],ah
 1019ac6:	inc    DWORD PTR [eax]
 1019ac8:	imul   edi,edi,0xffffffff
 1019acb:	add    BYTE PTR [eax-0x53ff7c6d],ch
 1019ad1:	xchg   ebx,eax
 1019ad2:	add    DWORD PTR [eax],0x8a99ae
 1019ad8:	mov    bl,0x9b
 1019ada:	mov    al,BYTE PTR [eax]
 1019adc:	mov    ah,0x9b
 1019ade:	mov    eax,DWORD PTR [eax]
 1019ae0:	mov    bl,0x9f
 1019ae2:	nop
 1019ae3:	add    BYTE PTR [eax-0x43ff6a5c],bh
 1019ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1019aea:	xchg   esp,eax
 1019aeb:	add    BYTE PTR [ebp-0x27ff6458],bh
 1019af1:	mov    cl,0x8c
 1019af3:	add    al,cl
 1019af5:	scas   eax,DWORD PTR es:[edi]
 1019af6:	xchg   ebx,eax
 1019af7:	add    ah,al
 1019af9:	scas   al,BYTE PTR es:[edi]
 1019afa:	popf   
 1019afb:	add    dl,bl
 1019afd:	mov    ch,0x92
 1019aff:	add    al,bl
 1019b01:	mov    al,0x9d
 1019b03:	add    dl,al
 1019b05:	scas   al,BYTE PTR es:[edi]
 1019b06:	mov    al,ds:0xa6b6cc00
 1019b0b:	add    dl,bl
 1019b0d:	mov    ah,0xa2
 1019b0f:	add    ah,bl
 1019b11:	mov    eax,0xbcd300a7
 1019b16:	lods   eax,DWORD PTR ds:[esi]
 1019b17:	add    ah,dl
 1019b19:	mov    ebp,0xbddf00ae
 1019b1e:	stos   DWORD PTR es:[edi],eax
 1019b1f:	add    dh,bl
 1019b21:	mov    edi,0xc3da00af
 1019b26:	mov    ah,0x0
 1019b28:	in     al,dx
 1019b29:	iret   
 1019b2a:	mov    edx,0xbfcef100
 1019b2f:	add    BYTE PTR [ecx-0x10ff1b31],ah
 1019b35:	rol    esi,cl
 1019b37:	add    cl,dh
 1019b39:	rol    ecx,1
 1019b3b:	add    dl,dh
 1019b3d:	rol    esp,cl
 1019b3f:	add    dl,dh
 1019b41:	(bad)  
 1019b42:	leave  
 1019b43:	add    ah,dh
 1019b45:	fmul   st,st(2)
 1019b47:	add    ah,dh
 1019b49:	fcmove st,st(5)
 1019b4b:	add    bh,ah
 1019b4d:	(bad)  
 1019b4f:	add    ah,dh
 1019b51:	(bad)  
 1019b53:	add    ch,dh
 1019b55:	(bad)  
 1019b57:	add    ch,dh
 1019b59:	loope  0x1019b31
 1019b5b:	add    bh,dh
 1019b5d:	jecxz  0x1019b38
 1019b5f:	add    bh,dh
 1019b61:	in     eax,0xdd
 1019b63:	add    al,bh
 1019b65:	loop   0x1019b3f
 1019b67:	add    al,bh
 1019b69:	in     al,0xdb
 1019b6b:	add    al,bh
 1019b6d:	out    0xde,al
 1019b6f:	add    bh,dh
 1019b71:	out    0xe0,eax
 1019b73:	add    cl,bh
 1019b75:	jmp    0xecfb9c5b
 1019b7a:	in     al,0x0
 1019b7c:	cli    
 1019b7d:	in     eax,dx
 1019b7e:	in     eax,0x0
 1019b80:	cli    
 1019b81:	out    dx,eax
 1019b82:	jmp    0xfc00:0xedf1fb00
 1019b89:	hlt    
 1019b8a:	out    dx,eax
 1019b8b:	add    bl,bh
 1019b8d:	cmc    
 1019b8e:	lock add ah,bh
 1019b91:	hlt    
 1019b92:	icebp  
 1019b93:	add    ch,bh
 1019b95:	clc    
 1019b96:	test   BYTE PTR [eax],0xf2
 1019b99:	(bad)  
 1019b9a:	inc    DWORD PTR [eax]
 1019b9c:	(bad)  
 1019b9d:	sti    
 1019b9e:	stc    
 1019b9f:	add    dh,bh
 1019ba1:	cld    
 1019ba2:	sti    
 1019ba3:	add    dh,bh
 1019ba5:	(bad)  
 1019ba6:	inc    BYTE PTR [eax]
	...
 1019db0:	add    BYTE PTR [edi],cl
 1019db2:	push   es
 1019db3:	push   es
 1019db4:	push   es
 1019db5:	push   es
 1019db6:	push   es
 1019db7:	push   es
 1019db8:	push   es
 1019db9:	push   cs
 1019dba:	or     BYTE PTR es:[eax],al
 1019dbd:	or     eax,0x10000000
 1019dc2:	popa   
 1019dc3:	pop    esp
 1019dc4:	pop    esp
 1019dc5:	pop    eax
 1019dc6:	pop    eax
 1019dc7:	push   esp
 1019dc8:	xor    BYTE PTR [esi],ah
 1019dca:	aaa    
 1019dcb:	cmp    BYTE PTR [edx+eax*1],ch
 1019dce:	add    BYTE PTR [eax+eax*1],dl
 1019dd1:	adc    DWORD PTR [ebp+0x65],ebp
 1019dd4:	fs fs pop esi
 1019dd7:	pop    esi
 1019dd8:	or     bh,BYTE PTR ds:0x2b2d373d
 1019dde:	or     eax,DWORD PTR [ecx]
 1019de0:	add    BYTE PTR [ebp*2+0x4b4e5256],bl
 1019de7:	dec    eax
 1019de8:	sub    DWORD PTR [edi],edi
 1019dea:	cmp    al,0x39
 1019dec:	xor    DWORD PTR ds:0x1d000428,ebp
 1019df2:	jno    0x1019e5f
 1019df4:	imul   esp,DWORD PTR [ebp+0x65],0x40422a65
 1019dfb:	cmp    DWORD PTR [ebx+esi*1],esi
 1019dfe:	cs add eax,0x5a711f00
 1019e04:	push   esi
 1019e05:	push   ebp
 1019e06:	dec    esi
 1019e07:	dec    ebx
 1019e08:	das    
 1019e09:	inc    esi
 1019e0a:	ds inc esp
 1019e0c:	xor    ch,BYTE PTR [eax]
 1019e0e:	xor    al,0x9
 1019e10:	add    BYTE PTR [ebp+0x75],ch
 1019e13:	jno    0x1019e86
 1019e15:	outs   dx,DWORD PTR ds:[esi]
 1019e16:	ins    DWORD PTR es:[edi],dx
 1019e17:	push   0xc
 1019e19:	inc    ecx
 1019e1a:	jp     0x1019e96
 1019e1c:	inc    ebx
 1019e1d:	cmp    ah,BYTE PTR [edi]
 1019e1f:	add    esp,DWORD PTR [ecx]
 1019e21:	jo     0x1019e3e
 1019e23:	jne    0x1019e3a
 1019e25:	sbb    esp,DWORD PTR ds:0x6035136b
 1019e2b:	jge    0x1019e72
 1019e2d:	ss xor eax,0x1e152112
 1019e33:	ja     0x1019e50
 1019e35:	je     0x1019e55
 1019e37:	jno    0x1019eaa
 1019e39:	sbb    BYTE PTR ds:0x352728,dh
 1019e3f:	add    BYTE PTR [esi],dl
 1019e41:	and    eax,0x771e7916
 1019e46:	sbb    dh,BYTE PTR [ebp+0x71]
 1019e49:	sbb    DWORD PTR [ecx+0x65],edx
 1019e4c:	push   es
 1019e4d:	add    BYTE PTR [eax],al
 1019e4f:	add    BYTE PTR [ecx],bl
 1019e51:	ins    DWORD PTR es:[edi],dx
 1019e52:	sbb    DWORD PTR [ebp+0x19],edi
 1019e55:	and    DWORD PTR [ebx+0x75],edx
 1019e58:	sbb    DWORD PTR [eax+0x19],edx
 1019e5b:	pop    esi
 1019e5c:	push   es
 1019e5d:	add    BYTE PTR [eax],al
 1019e5f:	add    BYTE PTR [eax],al
 1019e61:	jo     0x1019edc
 1019e63:	jge    0x1019ee2
 1019e65:	jge    0x1019ee0
 1019e67:	jns    0x1019ee0
 1019e69:	ja     0x1019ee0
 1019e6b:	jno    0x1019e73
 1019e6d:	add    BYTE PTR [eax],al
 1019e6f:	add    BYTE PTR [eax],al
 1019e71:	pop    esp
 1019e72:	jns    0x1019ed1
 1019e74:	pop    edx
 1019e75:	push   esi
 1019e76:	push   edx
 1019e77:	jno    0x1019ef6
 1019e79:	and    al,0x7
 1019e7b:	pop    es
 1019e7c:	push   es
 1019e7d:	add    BYTE PTR [eax],al
 1019e7f:	add    BYTE PTR [eax],al
 1019e81:	dec    esi
 1019e82:	jge    0x1019f01
 1019e84:	jge    0x1019f03
 1019e86:	jge    0x1019f05
 1019e88:	jns    0x1019eae
 1019e8a:	addr16 and al,0x0
 1019e8d:	add    BYTE PTR [eax],al
 1019e8f:	add    BYTE PTR [eax],al
 1019e91:	dec    edi
 1019e92:	jge    0x1019f11
 1019e94:	jge    0x1019f13
 1019e96:	jge    0x1019f15
 1019e98:	jge    0x1019ebe
 1019e9a:	and    al,0x0
 1019e9c:	add    BYTE PTR [eax],al
 1019e9e:	add    BYTE PTR [eax],al
 1019ea0:	add    BYTE PTR [ebp+0x4f],dl
 1019ea3:	dec    esi
 1019ea4:	dec    esp
 1019ea5:	dec    ecx
 1019ea6:	inc    edi
 1019ea7:	and    al,0x23
 1019ea9:	and    al,BYTE PTR [eax]
 1019eab:	add    BYTE PTR [eax],al
 1019ead:	add    BYTE PTR [eax],al
 1019eaf:	add    BYTE PTR [eax-0x7ffffffd],al
 1019eb5:	add    BYTE PTR [eax],al
 1019eb7:	add    BYTE PTR [eax-0x80000000],al
 1019ebd:	add    BYTE PTR [eax],al
 1019ebf:	add    BYTE PTR [eax-0x80000000],al
 1019ec5:	add    BYTE PTR [eax],al
 1019ec7:	add    BYTE PTR [eax+0x0],al
 1019ecd:	add    BYTE PTR [eax],al
 1019ecf:	add    BYTE PTR [eax],al
 1019ed1:	add    eax,DWORD PTR [eax]
 1019ed3:	add    BYTE PTR [eax],al
 1019ed5:	pop    es
 1019ed6:	add    BYTE PTR [eax],al
 1019ed8:	add    BYTE PTR [edi],al
 1019eda:	add    BYTE PTR [eax],al
 1019edc:	add    BYTE PTR [edi],0x0
 1019edf:	add    BYTE PTR [eax-0x7ffffff9],al
 1019ee5:	sldt   WORD PTR [eax]
 1019ee8:	sbb    BYTE PTR [edi],0x0
 1019eeb:	add    BYTE PTR [eax+0x2800003f],al
 1019ef1:	add    BYTE PTR [eax],al
 1019ef3:	add    BYTE PTR [eax],ah
 1019ef5:	add    BYTE PTR [eax],al
 1019ef7:	add    BYTE PTR [eax+0x0],al
 1019efa:	add    BYTE PTR [eax],al
 1019efc:	add    DWORD PTR [eax],eax
 1019efe:	and    BYTE PTR [eax],al
 1019f00:	add    BYTE PTR [eax],al
 1019f02:	add    BYTE PTR [eax],al
 1019f04:	adc    BYTE PTR [eax],0x0
	...
 1019f6f:	add    bh,bl
 1019f71:	loop   0x1019f59
 1019f73:	(bad)  
 1019f74:	ds push esp
 1019f76:	(bad)  
 1019f77:	(bad)  
 1019f78:	cmp    BYTE PTR [edi+0x52],al
 1019f7b:	inc    DWORD PTR [eax]
 1019f7d:	add    BYTE PTR [eax],al
 1019f7f:	inc    DWORD PTR [eax]
 1019f81:	add    BYTE PTR [eax],al
 1019f83:	(bad)  
 1019f84:	(bad)  
 1019f86:	out    0xff,al
	...
 1019fe8:	(bad)  
 1019fea:	out    0xff,al
 1019fec:	ds push esp
 1019fee:	(bad)  
 1019fef:	(bad)  
 1019ff0:	ds push esp
 1019ff2:	(bad)  
 1019ff3:	call   DWORD PTR [edx+edx*8]
 1019ff6:	out    0xff,al
 1019ff8:	or     ecx,ebp
 1019ffa:	jecxz  0x1019ffb
 1019ffc:	add    eax,0x5ffa88a
 101a001:	sbb    DWORD PTR [ebp+0xff],0xff
 101a00b:	(bad)  
 101a00c:	(bad)  
 101a00e:	out    0xff,al
	...
 101a01c:	sub    DWORD PTR [eax+0x56],0x354963ff
 101a023:	jmp    DWORD PTR [ebx+0x49]
 101a026:	xor    eax,0x354963ff
 101a02b:	jmp    DWORD PTR [ebx+0x49]
 101a02e:	xor    eax,0x354963ff
 101a033:	jmp    DWORD PTR [ebx+0x49]
 101a036:	xor    eax,0x354963ff
 101a03b:	jmp    DWORD PTR [ebx+0x49]
 101a03e:	xor    eax,0x354963ff
 101a043:	jmp    DWORD PTR [ebx+0x49]
 101a046:	xor    eax,0x354963ff
 101a04b:	jmp    DWORD PTR [ebx+0x49]
 101a04e:	xor    eax,0x354963ff
 101a053:	jmp    DWORD PTR [ebx+0x49]
 101a056:	xor    eax,0x354963ff
 101a05b:	jmp    DWORD PTR [ebx+0x49]
 101a05e:	xor    eax,0x354963ff
 101a063:	jmp    FWORD PTR [eax+0x6d]
 101a066:	jbe    0x101a067
 101a068:	ds push esp
 101a06a:	(bad)  
 101a06b:	(bad)  
 101a06c:	cmp    al,0xe2
 101a06e:	lock jmp FWORD PTR [esi]
 101a071:	fsub   st(4),st
 101a073:	jmp    DWORD PTR [eax]
 101a075:	(bad)  
 101a076:	jmp    0x4ff:0xe6d215ff
 101a07d:	xchg   edi,eax
 101a07e:	mov    bl,0xff
 101a080:	add    al,0x8c
 101a082:	test   al,0xff
 101a084:	push   es
 101a085:	sbb    BYTE PTR [ebp-0x6c88f901],0xff
 101a08c:	add    BYTE PTR [eax],al
 101a08e:	add    bh,bh
 101a090:	pop    edi
 101a091:	jae    0x101a10e
 101a093:	inc    DWORD PTR [eax]
 101a095:	add    BYTE PTR [eax],al
 101a097:	add    BYTE PTR [eax],al
 101a099:	add    BYTE PTR [eax],al
 101a09b:	add    BYTE PTR [ebx+ebp*2-0x240b00a7],al
 101a0a2:	into   
 101a0a3:	(bad)  
 101a0a4:	faddp  st(0),st
 101a0a6:	mov    cl,0xff
 101a0a8:	fdivr  QWORD PTR [esi-0x43240052]
 101a0ae:	lods   al,BYTE PTR ds:[esi]
 101a0af:	(bad)  
 101a0b0:	fstp   TBYTE PTR [ebx-0x46260056]
 101a0b6:	test   al,0xff
 101a0b8:	fdiv   DWORD PTR [edi-0x4a27005b]
 101a0be:	mov    ds:0xa1b3d7ff,eax
 101a0c3:	call   esi
 101a0c5:	mov    cl,0x9f
 101a0c7:	call   esi
 101a0c9:	mov    al,0x9c
 101a0cb:	call   esp
 101a0cd:	lods   eax,DWORD PTR ds:[esi]
 101a0ce:	call   0xd2ff:0x97abd4ff
 101a0d5:	stos   BYTE PTR es:[edi],al
 101a0d6:	xchg   esi,eax
 101a0d7:	call   edx
 101a0d9:	test   al,0x93
 101a0db:	call   eax
 101a0dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101a0de:	xchg   ecx,eax
 101a0df:	call   eax
 101a0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101a0e2:	(bad)  
 101a0e3:	jmp    FWORD PTR [ecx+0x72]
 101a0e6:	js     0x101a0e7
 101a0e8:	pop    ebx
 101a0e9:	out    dx,al
 101a0ea:	idiv   bh
 101a0ec:	dec    ebx
 101a0ed:	call   0xe33ea0e4
 101a0f2:	lock jmp FWORD PTR [esi]
 101a0f5:	fsub   st(4),st
 101a0f7:	jmp    DWORD PTR [eax]
 101a0f9:	xlat   BYTE PTR ds:[ebx]
 101a0fa:	jmp    0x4ff:0xbea103ff
 101a101:	xchg   edi,eax
 101a102:	mov    dl,0xff
 101a104:	add    al,0x8a
 101a106:	test   al,0xff
 101a108:	push   es
 101a109:	sbb    BYTE PTR [ebp-0x6b88f901],0xff
 101a110:	cmp    BYTE PTR [edi+0x52],al
 101a113:	inc    DWORD PTR [eax]
 101a115:	add    BYTE PTR [eax],al
 101a117:	add    BYTE PTR [eax],al
 101a119:	add    BYTE PTR [eax],al
 101a11b:	add    BYTE PTR [esi-0xb00a492],al
 101a121:	(bad)  
 101a123:	(bad)  
 101a124:	cli    
 101a125:	out    dx,al
 101a126:	jmp    0xe7ee9b2a
 101a12b:	(bad)  
 101a12c:	stc    
 101a12d:	jmp    0xffdf:0xe7f7ffe3
 101a134:	clc    
 101a135:	in     eax,0xdc
 101a137:	push   edi
 101a139:	jecxz  0x101a115
 101a13b:	push   esi
 101a13d:	loopne 0x101a116
 101a13f:	push   ebp
 101a141:	(bad)  
 101a143:	push   esp
 101a145:	fst    st(1)
 101a147:	push   esp
 101a149:	fcmovne st,st(6)
 101a14b:	push   ebx
 101a14d:	fmul   st,st(3)
 101a14f:	push   ebx
 101a151:	(bad)  
 101a152:	enter  0xf2ff,0xd3
 101a156:	(bad)  
 101a159:	rol    edx,1
 101a15b:	push   ecx
 101a15d:	iret   
 101a15e:	mov    edi,0xbccdf0ff
 101a163:	jmp    FWORD PTR [esi+0x74]
 101a166:	jge    0x101a167
 101a168:	push   0xfffffff3
 101a16a:	stc    
 101a16b:	call   FWORD PTR [ebx-0x12]
 101a16e:	idiv   edi
 101a170:	dec    esp
 101a171:	call   0xe33ea168
 101a176:	lock jmp FWORD PTR [esi]
 101a179:	fsub   st(4),st
 101a17b:	inc    DWORD PTR [edx]
 101a17d:	lods   al,BYTE PTR ds:[esi]
 101a17e:	leave  
 101a17f:	inc    DWORD PTR [ebx]
 101a181:	mov    ds:0x9604ffbe,al
 101a186:	mov    dl,0xff
 101a188:	add    al,0x8a
 101a18a:	test   al,0xff
 101a18c:	push   es
 101a18d:	sbb    BYTE PTR [ebp+0x524738ff],0xff
	...
 101a19c:	mov    DWORD PTR [eax+0x5e],esi
 101a19f:	push   ebp
 101a1a1:	(bad)  
 101a1a3:	(bad)  
 101a1a4:	cli    
 101a1a5:	lock in al,dx
 101a1a7:	(bad)  
 101a1a8:	stc    
 101a1a9:	out    dx,al
 101a1aa:	call   0xe7ed9bae
 101a1af:	(bad)  
 101a1b0:	stc    
 101a1b1:	jmp    0xe8faa198
 101a1b6:	(bad)  
 101a1b8:	clc    
 101a1b9:	in     eax,0xdc
 101a1bb:	push   esi
 101a1bd:	jecxz  0x101a199
 101a1bf:	push   ebp
 101a1c1:	loope  0x101a199
 101a1c3:	push   ebp
 101a1c5:	(bad)  
 101a1c7:	push   ebp
 101a1c9:	fst    st(1)
 101a1cb:	push   esp
 101a1cd:	fcmove st,st(5)
 101a1cf:	push   ebx
 101a1d1:	fmul   st,st(3)
 101a1d3:	push   ebx
 101a1d5:	aad    0xc8
 101a1d7:	push   edx
 101a1d9:	rol    ebp,cl
 101a1db:	push   ecx
 101a1dd:	rol    ecx,1
 101a1df:	push   eax
 101a1e1:	iret   
 101a1e2:	mov    esi,0x81766dff
 101a1e7:	(bad)  
 101a1e8:	js     0x101a1e3
 101a1ea:	sti    
 101a1eb:	jmp    FWORD PTR [ecx-0xd]
 101a1ee:	stc    
 101a1ef:	call   FWORD PTR [ebx-0x12]
 101a1f2:	idiv   bh
 101a1f4:	dec    esp
 101a1f5:	call   0xe33ea1ed
 101a1fa:	lock inc DWORD PTR [ecx]
 101a1fd:	mov    bh,0xd2
 101a1ff:	inc    DWORD PTR [edx]
 101a201:	lods   eax,DWORD PTR ds:[esi]
 101a202:	enter  0x2ff,0xa2
 101a206:	mov    esi,0xb29603ff
 101a20b:	inc    DWORD PTR [esp+ecx*4]
 101a20e:	test   al,0xff
 101a210:	cmp    BYTE PTR [edi+0x52],al
 101a213:	inc    DWORD PTR [eax]
 101a215:	add    BYTE PTR [eax],al
 101a217:	add    BYTE PTR [eax],al
 101a219:	add    BYTE PTR [eax],al
 101a21b:	add    BYTE PTR [ebx-0x9009e8d],cl
 101a221:	loopne 0x101a1f9
 101a223:	(bad)  
 101a224:	sti    
 101a225:	repnz out dx,al
 101a227:	(bad)  
 101a228:	cli    
 101a229:	icebp  
 101a22a:	jmp    0x101a22b
 101a22c:	stc    
 101a22d:	out    dx,al
 101a22e:	jmp    0xe6ee9c32
 101a233:	(bad)  
 101a234:	stc    
 101a235:	jmp    0xffdf:0xe7f8ffe2
 101a23c:	clc    
 101a23d:	in     eax,0xdc
 101a23f:	push   esi
 101a241:	jecxz  0x101a21c
 101a243:	push   esi
 101a245:	loope  0x101a21e
 101a247:	push   ebp
 101a249:	(bad)  
 101a24b:	push   ebp
 101a24d:	fst    st(1)
 101a24f:	push   esp
 101a251:	fcmove st,st(5)
 101a253:	push   esp
 101a255:	fmul   st,st(2)
 101a257:	push   ebx
 101a259:	aad    0xc8
 101a25b:	push   edx
 101a25d:	rol    esp,cl
 101a25f:	push   ecx
 101a261:	rol    cl,1
 101a263:	push   DWORD PTR [ebx+0x7b]
 101a266:	test   edi,edi
 101a268:	cmp    esp,0xfffffffe
 101a26b:	push   DWORD PTR [edi-0x7]
 101a26e:	cld    
 101a26f:	jmp    FWORD PTR [ecx-0xd]
 101a272:	stc    
 101a273:	call   FWORD PTR [ebp+ebp*8-0x9]
 101a277:	dec    DWORD PTR [eax+ebp*8-0xe]
 101a27b:	inc    DWORD PTR [eax]
 101a27d:	rcr    dl,0xff
 101a280:	add    DWORD PTR [eax-0x52fd002e],edi
 101a286:	enter  0x3ff,0xa2
 101a28a:	mov    esi,0xb39703ff
 101a28f:	(bad)  
 101a290:	cmp    BYTE PTR [edi+0x52],al
 101a293:	inc    DWORD PTR [eax]
 101a295:	add    BYTE PTR [eax],al
 101a297:	add    BYTE PTR [eax],al
 101a299:	add    BYTE PTR [eax],al
 101a29b:	add    BYTE PTR [ebp-0x9009b8a],cl
 101a2a1:	loop   0x101a27b
 101a2a3:	(bad)  
 101a2a4:	cld    
 101a2a5:	hlt    
 101a2a6:	repnz inc ecx
 101a2a9:	stos   DWORD PTR es:[edi],eax
 101a2aa:	pushf  
 101a2ab:	inc    ecx
 101a2ad:	stos   DWORD PTR es:[edi],eax
 101a2ae:	pushf  
 101a2af:	(bad)  
 101a2b0:	mov    esi,0xb9ff98a6
 101a2b5:	mov    ds:0x9cb4ff93,al
 101a2ba:	mov    ?,edi
 101a2bc:	lods   eax,DWORD PTR ds:[esi]
 101a2bd:	xchg   edi,eax
 101a2be:	xchg   edi,edi
 101a2c0:	test   al,0x90
 101a2c2:	cmp    edi,0xff7989a1
 101a2c8:	mov    eax,ds:0x99ff7888
 101a2cd:	xor    DWORD PTR [ecx-0x1],0xff697991
 101a2d4:	mov    dh,BYTE PTR [edx+0x61]
 101a2d7:	inc    DWORD PTR [ebx+0x7cff596a]
 101a2dd:	arpl   WORD PTR [ecx-0x1],dx
 101a2e0:	jne    0x101a33e
 101a2e2:	dec    edx
 101a2e3:	push   DWORD PTR [ebx-0x7e]
 101a2e6:	mov    ?,edi
 101a2e8:	mov    edi,?
 101a2ea:	(bad)  
 101a2eb:	dec    DWORD PTR [edi+edi*8-0x37b0001]
 101a2f2:	(bad)  
 101a2f3:	push   DWORD PTR [edi-0x8]
 101a2f6:	cld    
 101a2f7:	call   FWORD PTR [eax-0x3b]
 101a2fa:	into   
 101a2fb:	inc    DWORD PTR [edx+ecx*4]
 101a2fe:	test   al,0xff
 101a300:	add    dh,al
 101a302:	loopne 0x101a303
 101a304:	add    al,al
 101a306:	(bad)  
 101a308:	add    DWORD PTR [eax-0x52fd002e],edi
 101a30e:	enter  0x38ff,0x47
 101a312:	push   edx
 101a313:	inc    DWORD PTR [eax]
 101a315:	add    BYTE PTR [eax],al
 101a317:	add    BYTE PTR [eax],al
 101a319:	add    BYTE PTR [eax],al
 101a31b:	add    BYTE PTR [edi-0x8009888],cl
 101a321:	in     al,0xdb
 101a323:	(bad)  
 101a324:	cld    
 101a325:	div    ah
 101a327:	(bad)  
 101a328:	cld    
 101a329:	hlt    
 101a32a:	icebp  
 101a32b:	(bad)  
 101a32c:	sti    
 101a32d:	repz out dx,al
 101a32f:	(bad)  
 101a330:	cli    
 101a331:	lock jmp 0x101a333
 101a334:	cli    
 101a335:	out    dx,al
 101a336:	call   0xe6ed9d3a
 101a33b:	(bad)  
 101a33c:	stc    
 101a33d:	jmp    0xe8faa323
 101a342:	(bad)  
 101a344:	mul    esp
 101a346:	fdiv   st(7),st
 101a348:	mul    dl
 101a34a:	fcos   
 101a34c:	mul    al
 101a34e:	(bad)  
 101a34f:	push   ebp
 101a351:	(bad)  
 101a353:	push   esp
 101a355:	(bad)  
 101a357:	push   esp
 101a359:	fcmove st,st(6)
 101a35b:	push   ebx
 101a35d:	xlat   BYTE PTR ds:[ebx]
 101a35e:	retf   0xf3ff
 101a361:	aad    0xc7
 101a363:	(bad)  
 101a364:	jp     0x101a2f6
 101a366:	cwde   
 101a367:	dec    DWORD PTR [edi+edi*8-0x730001]
 101a36e:	(bad)  
 101a36f:	call   FWORD PTR [eax-0x3b]
 101a372:	into   
 101a373:	call   FWORD PTR [eax-0x3b]
 101a376:	into   
 101a377:	jmp    ecx
 101a379:	std    
 101a37a:	std    
 101a37b:	dec    DWORD PTR [eax+0x4fff8f3]
 101a381:	mov    ch,BYTE PTR [eax-0x5775fb01]
 101a387:	inc    DWORD PTR [ecx]
 101a389:	rcr    bl,0xff
 101a38c:	add    DWORD PTR [edi+0x4738ffd2],esi
 101a392:	push   edx
 101a393:	inc    DWORD PTR [eax]
 101a395:	add    BYTE PTR [eax],al
 101a397:	add    BYTE PTR [eax],al
 101a399:	add    BYTE PTR [eax],al
 101a39b:	add    BYTE PTR [edx-0x7009685],dl
 101a3a1:	out    0xde,al
 101a3a3:	(bad)  
 101a3a4:	std    
 101a3a5:	stc    
 101a3a6:	idiv   bh
 101a3a8:	cld    
 101a3a9:	div    ebx
 101a3ab:	(bad)  
 101a3ac:	sti    
 101a3ad:	hlt    
 101a3ae:	icebp  
 101a3af:	(bad)  
 101a3b0:	sti    
 101a3b1:	repnz out dx,al
 101a3b3:	(bad)  
 101a3b4:	cli    
 101a3b5:	lock jmp 0x101a3b7
 101a3b8:	cli    
 101a3b9:	out    dx,al
 101a3ba:	call   0xe5ee9dbe
 101a3bf:	(bad)  
 101a3c0:	clc    
 101a3c1:	jmp    0xe8f9a3a8
 101a3c6:	fdivp  st(7),st
 101a3c8:	mul    esp
 101a3ca:	(bad)  
 101a3cc:	mul    bl
 101a3ce:	fcos   
 101a3d0:	cmc    
 101a3d1:	loope  0x101a3a9
 101a3d3:	push   ebp
 101a3d5:	(bad)  
 101a3d7:	push   ebp
 101a3d9:	(bad)  
 101a3db:	push   esp
 101a3dd:	fcmove st,st(5)
 101a3df:	push   ebx
 101a3e1:	xlat   BYTE PTR ds:[ebx]
 101a3e2:	retf   0x75ff
 101a3e5:	mov    dl,BYTE PTR [edx-0x313aa701]
 101a3eb:	call   FWORD PTR [eax-0x3b]
 101a3ee:	into   
 101a3ef:	(bad)  
 101a3f0:	(bad)  
 101a3f1:	(bad)  
 101a3f2:	(bad)  
 101a3f3:	push   edx
 101a3f5:	(bad)  
 101a3f6:	(bad)  
 101a3f7:	jmp    ecx
 101a3f9:	std    
 101a3fa:	(bad)  
 101a3fb:	dec    DWORD PTR [eax+0x75fff8f3]
 101a401:	icebp  
 101a402:	clc    
 101a403:	jmp    DWORD PTR [esi-0x10]
 101a406:	idiv   edi
 101a408:	add    al,0x8a
 101a40a:	test   al,0xff
 101a40c:	add    al,0x8a
 101a40e:	test   al,0xff
 101a410:	cmp    BYTE PTR [edi+0x52],al
 101a413:	inc    DWORD PTR [eax]
 101a415:	add    BYTE PTR [eax],al
 101a417:	add    BYTE PTR [eax],al
 101a419:	add    BYTE PTR [eax],al
 101a41b:	add    BYTE PTR [ebp-0x7009383],dl
 101a421:	call   0xfc00a407
 101a426:	stc    
 101a427:	inc    ecx
 101a429:	stos   DWORD PTR es:[edi],eax
 101a42a:	pushf  
 101a42b:	inc    ecx
 101a42d:	stos   DWORD PTR es:[edi],eax
 101a42e:	pushf  
 101a42f:	(bad)  
 101a430:	mov    edi,0xbaff9aa9
 101a435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 101a436:	xchg   esi,eax
 101a437:	push   DWORD PTR [edi-0x4e006f60]
 101a43d:	cdq    
 101a43e:	mov    bh,bh
 101a440:	stos   DWORD PTR es:[edi],eax
 101a441:	xchg   ebx,eax
 101a442:	test   bh,bh
 101a444:	mov    ds:0xa3ff7b8d,eax
 101a449:	mov    WORD PTR [ebx-0x1],?
 101a44c:	pushf  
 101a44d:	test   BYTE PTR [edi+edi*8-0x6a],dh
 101a451:	jge    0x101a4bf
 101a453:	dec    DWORD PTR [esi-0x79009a8b]
 101a459:	ins    DWORD PTR es:[edi],dx
 101a45a:	pop    esp
 101a45b:	(bad)  
 101a45c:	jle    0x101a4c4
 101a45e:	push   ebp
 101a45f:	(bad)  
 101a460:	js     0x101a4c1
 101a462:	dec    ebp
 101a463:	(bad)  
 101a464:	jns    0x101a3f2
 101a466:	xchg   esi,eax
 101a467:	call   FWORD PTR [esi]
 101a469:	je     0x101a404
 101a46b:	(bad)  
 101a46c:	(bad)  
 101a46d:	(bad)  
 101a46e:	(bad)  
 101a46f:	(bad)  
 101a470:	(bad)  
 101a471:	(bad)  
 101a472:	(bad)  
 101a473:	push   edx
 101a475:	(bad)  
 101a476:	(bad)  
 101a477:	jmp    ecx
 101a479:	std    
 101a47a:	(bad)  
 101a47b:	dec    DWORD PTR [eax+0x75fff8f4]
 101a481:	icebp  
 101a482:	clc    
 101a483:	jmp    DWORD PTR [esi-0x10]
 101a486:	idiv   edi
 101a488:	pop    ebx
 101a489:	out    dx,al
 101a48a:	idiv   bh
 101a48c:	push   ds
 101a48d:	je     0x101a428
 101a48f:	(bad)  
 101a490:	cmp    BYTE PTR [edi+0x52],al
 101a493:	inc    DWORD PTR [eax]
 101a495:	add    BYTE PTR [eax],al
 101a497:	add    BYTE PTR [eax],al
 101a499:	add    BYTE PTR [eax],al
 101a49b:	add    BYTE PTR [esi-0x6009081],dl
 101a4a1:	jmp    0xfffa:0xfcfeffe3
 101a4a8:	(bad)  
 101a4a9:	cli    
 101a4aa:	clc    
 101a4ab:	(bad)  
 101a4ac:	std    
 101a4ad:	clc    
 101a4ae:	cmc    
 101a4af:	(bad)  
 101a4b0:	cld    
 101a4b1:	div    bl
 101a4b3:	(bad)  
 101a4b4:	sti    
 101a4b5:	hlt    
 101a4b6:	icebp  
 101a4b7:	(bad)  
 101a4b8:	cld    
 101a4b9:	icebp  
 101a4ba:	in     eax,dx
 101a4bb:	(bad)  
 101a4bc:	cli    
 101a4bd:	lock jmp 0xf9ff:0xe7edfaff
 101a4c5:	jmp    0xffe1:0xe9f8ffe4
 101a4cc:	mul    edi
 101a4ce:	fdivp  st(7),st
 101a4d0:	mul    ah
 101a4d2:	(bad)  
 101a4d4:	mul    dl
 101a4d6:	fdivr  st,st(7)
 101a4d8:	cmc    
 101a4d9:	loopne 0x101a4b1
 101a4db:	push   ebp
 101a4dd:	(bad)  
 101a4df:	push   esp
 101a4e1:	(bad)  
 101a4e3:	push   esp
 101a4e5:	fxch   st(5)
 101a4e7:	(bad)  
 101a4e8:	(bad)  
 101a4ea:	out    0xff,al
 101a4ec:	push   ds
 101a4ed:	je     0x101a488
 101a4ef:	call   FWORD PTR [esi]
 101a4f1:	je     0x101a48c
 101a4f3:	push   edx
 101a4f5:	(bad)  
 101a4f6:	(bad)  
 101a4f7:	jmp    ecx
 101a4f9:	std    
 101a4fa:	(bad)  
 101a4fb:	dec    DWORD PTR [eax+0x75fff9f3]
 101a501:	icebp  
 101a502:	idiv   edi
 101a504:	push   ds
 101a505:	je     0x101a4a0
 101a507:	call   FWORD PTR [esi]
 101a509:	je     0x101a4a4
 101a50b:	(bad)  
 101a50c:	(bad)  
 101a50e:	out    0xff,al
	...
 101a51c:	cwde   
 101a51d:	xor    BYTE PTR [ecx-0x1],0xf9
 101a521:	in     al,dx
 101a522:	out    0xff,al
 101a524:	(bad)  
 101a525:	std    
 101a526:	std    
 101a527:	(bad)  
 101a528:	(bad)  
 101a529:	cld    
 101a52a:	sti    
 101a52b:	(bad)  
 101a52c:	std    
 101a52d:	cli    
 101a52e:	clc    
 101a52f:	(bad)  
 101a530:	std    
 101a531:	clc    
 101a532:	cmc    
 101a533:	(bad)  
 101a534:	cld    
 101a535:	div    bl
 101a537:	(bad)  
 101a538:	cld    
 101a539:	hlt    
 101a53a:	lock (bad) 
 101a53c:	sti    
 101a53d:	icebp  
 101a53e:	in     eax,dx
 101a53f:	(bad)  
 101a540:	sti    
 101a541:	lock jmp 0xf9ff:0xe7edfaff
 101a549:	jmp    0xffe1:0xe8f8ffe4
 101a550:	clc    
 101a551:	out    0xde,eax
 101a553:	push   esi
 101a555:	in     al,0xdb
 101a557:	push   esi
 101a559:	loope  0x101a533
 101a55b:	push   ebp
 101a55d:	loopne 0x101a534
 101a55f:	push   ebp
 101a561:	fst    st(3)
 101a563:	push   ebp
 101a565:	fmul   st(7),st
 101a567:	push   esp
 101a569:	fcmove st,st(4)
 101a56b:	push   ebx
 101a56d:	xlat   BYTE PTR ds:[ebx]
 101a56e:	leave  
 101a56f:	(bad)  
 101a570:	(bad)  
 101a572:	out    0xff,al
 101a574:	push   ds
 101a575:	je     0x101a510
 101a577:	call   FWORD PTR [esi]
 101a579:	je     0x101a514
 101a57b:	call   FWORD PTR [esi]
 101a57d:	je     0x101a518
 101a57f:	call   FWORD PTR [esi]
 101a581:	je     0x101a51c
 101a583:	(bad)  
 101a584:	(bad)  
 101a586:	out    0xff,al
	...
 101a59c:	fwait
 101a59d:	test   BYTE PTR [ebx-0x1],dh
 101a5a0:	cli    
 101a5a1:	out    dx,al
 101a5a2:	call   0xa5a6
 101a5a7:	(bad)  
 101a5a8:	(bad)  
 101a5a9:	std    
 101a5aa:	std    
 101a5ab:	jmp    DWORD PTR [esi-0xe00ffac]
 101a5b1:	jecxz  0x101a58a
 101a5b3:	push   DWORD PTR [edx-0x1900de96]
 101a5b9:	retf   
 101a5ba:	mov    cl,0xff
 101a5bc:	mov    ebp,0xe4ff407f
 101a5c1:	enter  0xffae,0xa6
 101a5c5:	push   esp
 101a5c6:	add    bh,bh
 101a5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101a5c9:	push   esp
 101a5ca:	add    bh,bh
 101a5cc:	lods   al,BYTE PTR ds:[esi]
 101a5cd:	pop    esi
 101a5ce:	ud0    ebx,ebp
 101a5d1:	mov    bh,0x95
 101a5d3:	dec    esp
 101a5d5:	cwde   
 101a5d6:	addr16 call ecx
 101a5d9:	mov    al,ds:0xd9f1ff75
 101a5de:	retf   0xb1ff
 101a5e1:	addr16 sbb eax,0xb6cbeaff
 101a5e7:	push   esp
 101a5e9:	fcmovne st,st(7)
 101a5eb:	push   ebx
 101a5ed:	fxch   st(4)
 101a5ef:	call   esi
 101a5f1:	mov    cl,0x9e
 101a5f3:	jmp    DWORD PTR [ebx+0x49]
 101a5f6:	xor    eax,0xe6e2dfff
 101a5fb:	(bad)  
 101a5fc:	(bad)  
 101a5fe:	out    0xff,al
	...
 101a61c:	popf   
 101a61d:	xchg   DWORD PTR [esi-0x1],esi
 101a620:	cli    
 101a621:	icebp  
 101a622:	jmp    0x101a623
 101a624:	(bad)  
 101a625:	(bad)  
 101a626:	(bad)  
 101a627:	(bad)  
 101a628:	(bad)  
 101a629:	(bad)  
 101a62a:	(bad)  
 101a62b:	jmp    DWORD PTR [esi-0x1e00ffac]
 101a631:	ret    
 101a632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101a633:	push   DWORD PTR [edx-0x1f00de96]
 101a639:	shl    DWORD PTR [edi+edi*8-0xbe8043],0xe4
 101a641:	leave  
 101a642:	mov    al,0xff
 101a644:	mov    ebp,0xfaff3f7e
 101a649:	out    dx,eax
 101a64a:	jmp    0xb1ff:0xa9c4e3ff
 101a651:	push   0xdef3ff1e
 101a656:	sar    edi,1
 101a658:	mov    cl,0x67
 101a65a:	sbb    eax,0x6697ccff
 101a65f:	call   ecx
 101a661:	mov    al,ds:0xe0f6ff73
 101a666:	aad    0xff
 101a668:	cmc    
 101a669:	fst    st(3)
 101a66b:	push   esp
 101a66d:	fcmovne st,st(7)
 101a66f:	call   edi
 101a671:	mov    bl,0xa0
 101a673:	jmp    DWORD PTR [ebx+0x49]
 101a676:	xor    eax,0xff
	...
 101a69b:	add    BYTE PTR [edi-0x4008677],bl
 101a6a1:	repnz out dx,al
 101a6a3:	(bad)  
 101a6a4:	(bad)  
 101a6a5:	(bad)  
 101a6a6:	(bad)  
 101a6a7:	(bad)  
 101a6a8:	(bad)  
 101a6a9:	(bad)  
 101a6aa:	(bad)  
 101a6ab:	jmp    DWORD PTR [esi-0x3000ffac]
 101a6b1:	mov    ds:0x97c9ff76,eax
 101a6b6:	fs dec edi
 101a6b9:	mov    eax,ds:0x7fbdff73
 101a6be:	inc    ecx
 101a6bf:	jmp    esi
 101a6c1:	retf   0xffb2
 101a6c4:	mov    ebp,0xfaff407f
 101a6c9:	repnz in al,dx
 101a6cb:	(bad)  
 101a6cc:	cli    
 101a6cd:	out    dx,eax
 101a6ce:	jmp    0x1564dd2
 101a6d3:	(bad)  
 101a6d4:	stc    
 101a6d5:	jmp    0xff77:0xa3d2ffe3
 101a6dc:	mov    cl,0x67
 101a6de:	sbb    eax,0xdae3f6ff
 101a6e3:	push   esi
 101a6e5:	loope  0x101a6bf
 101a6e7:	push   esi
 101a6e9:	loopne 0x101a6bf
 101a6eb:	push   ebp
 101a6ed:	fst    st(2)
 101a6ef:	call   edi
 101a6f1:	mov    ch,0xa3
 101a6f3:	jmp    DWORD PTR [ebx+0x49]
 101a6f6:	xor    eax,0xff
	...
 101a71b:	add    BYTE PTR [edx-0x4008474],ah
 101a721:	hlt    
 101a722:	icebp  
 101a723:	(bad)  
 101a724:	(bad)  
 101a725:	(bad)  
 101a726:	(bad)  
 101a727:	(bad)  
 101a728:	(bad)  
 101a729:	(bad)  
 101a72a:	(bad)  
 101a72b:	jmp    DWORD PTR [esi-0x3b00ffac]
 101a731:	lea    edx,[ebp-0x1]
 101a734:	in     al,dx
 101a735:	fcmovne st,st(2)
 101a737:	(bad)  
 101a738:	mov    ebp,0xbdff4381
 101a73d:	add    BYTE PTR [edx-0x1],0xe6
 101a741:	int3   
 101a742:	mov    ah,0xff
 101a744:	mov    ebp,0xfbff417f
 101a749:	repz out dx,eax
 101a74b:	jmp    esp
 101a74d:	enter  0xffae,0xb1
 101a751:	imul   ebx,DWORD PTR [edi],0xe7ecf9ff
 101a757:	(bad)  
 101a758:	mov    esp,0xb1ff3d7c
 101a75d:	push   0xbfe2ff1e
 101a762:	mov    ds:0xdae3f7ff,al
 101a767:	push   esi
 101a769:	loope  0x101a743
 101a76b:	push   esi
 101a76d:	(bad)  
 101a76f:	(bad)  
 101a770:	fnstenv [edi+0x4963ffa5]
 101a776:	xor    eax,0xff
	...
 101a79b:	add    BYTE PTR [esi+ecx*4-0x9030082],ah
 101a7a2:	repz (bad) 
 101a7a4:	(bad)  
 101a7a5:	(bad)  
 101a7a6:	(bad)  
 101a7a7:	(bad)  
 101a7a8:	(bad)  
 101a7a9:	(bad)  
 101a7aa:	(bad)  
 101a7ab:	jmp    DWORD PTR [esi-0x3b00ffac]
 101a7b1:	lea    edx,[ebp-0x1]
 101a7b4:	(bad)  
 101a7b5:	(bad)  
 101a7b6:	(bad)  
 101a7b7:	jmp    FWORD PTR [edi+ebx*2-0x7e4200ef]
 101a7be:	inc    ebx
 101a7bf:	jmp    esi
 101a7c1:	int    0xb5
 101a7c3:	jmp    DWORD PTR [esi-0x5900ffac]
 101a7c9:	push   esp
 101a7ca:	add    bh,bh
 101a7cc:	lods   al,BYTE PTR ds:[esi]
 101a7cd:	pop    edi
 101a7ce:	adc    bh,bh
 101a7d0:	fistp  QWORD PTR [ebp-0x44210063]
 101a7d6:	fwait
 101a7d7:	(bad)  
 101a7d8:	mov    esp,0xe2ff3d7d
 101a7dd:	ret    0xffa6
 101a7e0:	mov    dh,0x72
 101a7e2:	sub    eax,0xdce5f8ff
 101a7e7:	push   esi
 101a7e9:	jecxz  0x101a7c5
 101a7eb:	push   esi
 101a7ed:	loope  0x101a7c6
 101a7ef:	(bad)  
 101a7f0:	fidivr DWORD PTR [ecx+0x4963ffa7]
 101a7f6:	xor    eax,0xff
	...
 101a81b:	add    BYTE PTR [esi-0x2007e6f],ah
 101a821:	clc    
 101a822:	idiv   bh
 101a824:	(bad)  
 101a825:	(bad)  
 101a826:	(bad)  
 101a827:	(bad)  
 101a828:	(bad)  
 101a829:	(bad)  
 101a82a:	(bad)  
 101a82b:	(bad)  
 101a82c:	(bad)  
 101a82d:	(bad)  
 101a82e:	(bad)  
 101a82f:	(bad)  
 101a830:	(bad)  
 101a831:	(bad)  
 101a832:	(bad)  
 101a833:	(bad)  
 101a834:	(bad)  
 101a835:	(bad)  
 101a836:	(bad)  
 101a837:	(bad)  
 101a838:	(bad)  
 101a839:	(bad)  
 101a83a:	std    
 101a83b:	(bad)  
 101a83c:	(bad)  
 101a83d:	std    
 101a83e:	cld    
 101a83f:	(bad)  
 101a840:	(bad)  
 101a841:	sti    
 101a842:	cli    
 101a843:	(bad)  
 101a844:	std    
 101a845:	stc    
 101a846:	idiv   edi
 101a848:	cld    
 101a849:	clc    
 101a84a:	hlt    
 101a84b:	(bad)  
 101a84c:	cld    
 101a84d:	cmc    
 101a84e:	repnz (bad) 
 101a850:	sti    
 101a851:	repz out dx,eax
 101a853:	(bad)  
 101a854:	sti    
 101a855:	lock in al,dx
 101a857:	(bad)  
 101a858:	cli    
 101a859:	out    dx,eax
 101a85a:	jmp    0xe6eea25e
 101a85f:	(bad)  
 101a860:	stc    
 101a861:	jmp    0xffe0:0xe8f8ffe3
 101a868:	clc    
 101a869:	out    0xdd,al
 101a86b:	push   edi
 101a86d:	jecxz  0x101a849
 101a86f:	(bad)  
 101a870:	fstp   TBYTE PTR [edx+0x4963ffaa]
 101a876:	xor    eax,0xff
	...
 101a89b:	add    BYTE PTR [edx-0x1007b6c],ch
 101a8a1:	stc    
 101a8a2:	clc    
 101a8a3:	(bad)  
 101a8a4:	(bad)  
 101a8a5:	(bad)  
 101a8a6:	(bad)  
 101a8a7:	(bad)  
 101a8a8:	(bad)  
 101a8a9:	(bad)  
 101a8aa:	(bad)  
 101a8ab:	(bad)  
 101a8ac:	(bad)  
 101a8ad:	(bad)  
 101a8ae:	(bad)  
 101a8af:	(bad)  
 101a8b0:	(bad)  
 101a8b1:	(bad)  
 101a8b2:	(bad)  
 101a8b3:	(bad)  
 101a8b4:	(bad)  
 101a8b5:	(bad)  
 101a8b6:	(bad)  
 101a8b7:	(bad)  
 101a8b8:	(bad)  
 101a8b9:	(bad)  
 101a8ba:	(bad)  
 101a8bb:	(bad)  
 101a8bc:	(bad)  
 101a8bd:	std    
 101a8be:	std    
 101a8bf:	(bad)  
 101a8c0:	(bad)  
 101a8c1:	std    
 101a8c2:	cld    
 101a8c3:	(bad)  
 101a8c4:	(bad)  
 101a8c5:	sti    
 101a8c6:	stc    
 101a8c7:	(bad)  
 101a8c8:	std    
 101a8c9:	stc    
 101a8ca:	idiv   edi
 101a8cc:	std    
 101a8cd:	clc    
 101a8ce:	hlt    
 101a8cf:	(bad)  
 101a8d0:	cld    
 101a8d1:	cmc    
 101a8d2:	repnz (bad) 
 101a8d4:	sti    
 101a8d5:	repz out dx,eax
 101a8d7:	(bad)  
 101a8d8:	cli    
 101a8d9:	icebp  
 101a8da:	in     al,dx
 101a8db:	(bad)  
 101a8dc:	cli    
 101a8dd:	out    dx,eax
 101a8de:	call   0xe7efa2e2
 101a8e3:	(bad)  
 101a8e4:	clc    
 101a8e5:	jmp    0xffe0:0xe8f8ffe2
 101a8ec:	clc    
 101a8ed:	in     eax,0xdc
 101a8ef:	(bad)  
 101a8f0:	fstp   TBYTE PTR [esp+ebp*4+0x354963ff]
 101a8f7:	inc    DWORD PTR [eax]
	...
 101a919:	add    BYTE PTR [eax],al
 101a91b:	add    BYTE PTR [esi+edx*4-0x4010079],ch
 101a922:	cli    
 101a923:	(bad)  
 101a924:	(bad)  
 101a925:	(bad)  
 101a926:	(bad)  
 101a927:	inc    ecx
 101a929:	stos   DWORD PTR es:[edi],eax
 101a92a:	pushf  
 101a92b:	inc    ecx
 101a92d:	stos   DWORD PTR es:[edi],eax
 101a92e:	pushf  
 101a92f:	inc    ecx
 101a931:	stos   DWORD PTR es:[edi],eax
 101a932:	pushf  
 101a933:	inc    ecx
 101a935:	stos   BYTE PTR es:[edi],al
 101a936:	fwait
 101a937:	(bad)  
 101a938:	mov    esi,0xb9ff98a6
 101a93d:	mov    ds:0x9cb3ff92,al
 101a942:	(bad)  
 101a943:	jmp    FWORD PTR [esi+edx*4-0x6f59007a]
 101a94a:	cmp    bh,0xa1
 101a94d:	mov    BYTE PTR [eax-0x1],bh
 101a950:	cdq    
 101a951:	xor    DWORD PTR [ecx-0x1],0xff697991
 101a958:	mov    dh,BYTE PTR [edx+0x61]
 101a95b:	inc    DWORD PTR [ebx+0x7cff596a]
 101a961:	arpl   WORD PTR [ecx-0x1],dx
 101a964:	jne    0x101a9c2
 101a966:	dec    edx
 101a967:	jmp    FWORD PTR [esi+0x55]
 101a96a:	inc    edx
 101a96b:	(bad)  
 101a96c:	clc    
 101a96d:	out    0xdf,eax
 101a96f:	(bad)  
 101a970:	fdivr  QWORD PTR [esi+0x4963ffae]
 101a976:	xor    eax,0xff
	...
 101a99b:	add    BYTE PTR [esi-0x1007567],ch
 101a9a1:	cld    
 101a9a2:	cld    
 101a9a3:	(bad)  
 101a9a4:	(bad)  
 101a9a5:	(bad)  
 101a9a6:	(bad)  
 101a9a7:	(bad)  
 101a9a8:	(bad)  
 101a9a9:	(bad)  
 101a9aa:	(bad)  
 101a9ab:	(bad)  
 101a9ac:	(bad)  
 101a9ad:	(bad)  
 101a9ae:	(bad)  
 101a9af:	(bad)  
 101a9b0:	(bad)  
 101a9b1:	(bad)  
 101a9b2:	(bad)  
 101a9b3:	(bad)  
 101a9b4:	(bad)  
 101a9b5:	(bad)  
 101a9b6:	(bad)  
 101a9b7:	(bad)  
 101a9b8:	(bad)  
 101a9b9:	(bad)  
 101a9ba:	(bad)  
 101a9bb:	(bad)  
 101a9bc:	(bad)  
 101a9bd:	(bad)  
 101a9be:	(bad)  
 101a9bf:	(bad)  
 101a9c0:	(bad)  
 101a9c1:	(bad)  
 101a9c2:	(bad)  
 101a9c3:	(bad)  
 101a9c4:	(bad)  
 101a9c5:	std    
 101a9c6:	std    
 101a9c7:	(bad)  
 101a9c8:	(bad)  
 101a9c9:	cld    
 101a9ca:	sti    
 101a9cb:	(bad)  
 101a9cc:	(bad)  
 101a9cd:	sti    
 101a9ce:	stc    
 101a9cf:	(bad)  
 101a9d0:	std    
 101a9d1:	stc    
 101a9d2:	idiv   edi
 101a9d4:	std    
 101a9d5:	div    esp
 101a9d7:	(bad)  
 101a9d8:	cld    
 101a9d9:	cmc    
 101a9da:	icebp  
 101a9db:	(bad)  
 101a9dc:	sti    
 101a9dd:	repnz out dx,eax
 101a9df:	(bad)  
 101a9e0:	cli    
 101a9e1:	icebp  
 101a9e2:	jmp    0x101a9e3
 101a9e4:	cli    
 101a9e5:	out    dx,al
 101a9e6:	jmp    0xe7eda4ea
 101a9eb:	(bad)  
 101a9ec:	stc    
 101a9ed:	jmp    0xc2dfa9d4
 101a9f2:	mov    cl,0xff
 101a9f4:	arpl   WORD PTR [ecx+0x35],cx
 101a9f7:	inc    DWORD PTR [eax]
	...
 101aa19:	add    BYTE PTR [eax],al
 101aa1b:	add    BYTE PTR [ecx-0x7264],dh
 101aa21:	(bad)  
 101aa22:	std    
 101aa23:	(bad)  
 101aa24:	(bad)  
 101aa25:	(bad)  
 101aa26:	(bad)  
 101aa27:	(bad)  
 101aa28:	(bad)  
 101aa29:	(bad)  
 101aa2a:	(bad)  
 101aa2b:	(bad)  
 101aa2c:	(bad)  
 101aa2d:	(bad)  
 101aa2e:	(bad)  
 101aa2f:	(bad)  
 101aa30:	(bad)  
 101aa31:	(bad)  
 101aa32:	(bad)  
 101aa33:	(bad)  
 101aa34:	(bad)  
 101aa35:	(bad)  
 101aa36:	(bad)  
 101aa37:	(bad)  
 101aa38:	(bad)  
 101aa39:	(bad)  
 101aa3a:	(bad)  
 101aa3b:	(bad)  
 101aa3c:	(bad)  
 101aa3d:	(bad)  
 101aa3e:	(bad)  
 101aa3f:	(bad)  
 101aa40:	(bad)  
 101aa41:	(bad)  
 101aa42:	(bad)  
 101aa43:	(bad)  
 101aa44:	(bad)  
 101aa45:	(bad)  
 101aa46:	(bad)  
 101aa47:	(bad)  
 101aa48:	(bad)  
 101aa49:	(bad)  
 101aa4a:	std    
 101aa4b:	(bad)  
 101aa4c:	(bad)  
 101aa4d:	std    
 101aa4e:	sti    
 101aa4f:	(bad)  
 101aa50:	std    
 101aa51:	sti    
 101aa52:	stc    
 101aa53:	(bad)  
 101aa54:	std    
 101aa55:	stc    
 101aa56:	idiv   edi
 101aa58:	cld    
 101aa59:	div    ah
 101aa5b:	(bad)  
 101aa5c:	cld    
 101aa5d:	hlt    
 101aa5e:	icebp  
 101aa5f:	(bad)  
 101aa60:	sti    
 101aa61:	repnz out dx,al
 101aa63:	(bad)  
 101aa64:	sti    
 101aa65:	lock jmp 0x101aa67
 101aa68:	cli    
 101aa69:	out    dx,al
 101aa6a:	call   0xe6eda46e
 101aa6f:	(bad)  
 101aa70:	ffreep st(2)
 101aa72:	mov    bl,0xff
 101aa74:	arpl   WORD PTR [ecx+0x35],cx
 101aa77:	inc    DWORD PTR [eax]
	...
 101aa99:	add    BYTE PTR [eax],al
 101aa9b:	add    BYTE PTR [ebx-0x7062],dh
 101aaa1:	(bad)  
 101aaa2:	(bad)  
 101aaa3:	(bad)  
 101aaa4:	(bad)  
 101aaa5:	(bad)  
 101aaa6:	(bad)  
 101aaa7:	inc    ecx
 101aaa9:	stos   DWORD PTR es:[edi],eax
 101aaaa:	pushf  
 101aaab:	inc    ecx
 101aaad:	stos   DWORD PTR es:[edi],eax
 101aaae:	pushf  
 101aaaf:	inc    ecx
 101aab1:	stos   DWORD PTR es:[edi],eax
 101aab2:	pushf  
 101aab3:	inc    ecx
 101aab5:	stos   DWORD PTR es:[edi],eax
 101aab6:	pushf  
 101aab7:	(bad)  
 101aab8:	mov    edi,0xbaff99a9
 101aabd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101aabe:	xchg   esi,eax
 101aabf:	push   DWORD PTR [ebp-0x4e006f61]
 101aac5:	cdq    
 101aac6:	mov    edi,edi
 101aac8:	stos   BYTE PTR es:[edi],al
 101aac9:	xchg   ebx,eax
 101aaca:	cmp    bh,0xa3
 101aacd:	mov    WORD PTR [ebx-0x1],?
 101aad0:	pushf  
 101aad1:	test   BYTE PTR [edi+edi*8-0x6a],dh
 101aad5:	jge    0x101ab43
 101aad7:	dec    DWORD PTR [esi-0x79009a8b]
 101aadd:	ins    DWORD PTR es:[edi],dx
 101aade:	pop    esp
 101aadf:	(bad)  
 101aae0:	jle    0x101ab48
 101aae2:	push   ebp
 101aae3:	(bad)  
 101aae4:	js     0x101ab45
 101aae6:	dec    ebp
 101aae7:	push   DWORD PTR [edx+0x59]
 101aaea:	inc    esi
 101aaeb:	(bad)  
 101aaec:	cli    
 101aaed:	out    dx,al
 101aaee:	call   0xb7c68af2
 101aaf3:	jmp    DWORD PTR [ebx+0x49]
 101aaf6:	xor    eax,0xff
	...
 101ab1b:	add    BYTE PTR [ebp-0x6d60],dh
 101ab21:	(bad)  
 101ab22:	(bad)  
 101ab23:	(bad)  
 101ab24:	(bad)  
 101ab25:	(bad)  
 101ab26:	(bad)  
 101ab27:	(bad)  
 101ab28:	(bad)  
 101ab29:	(bad)  
 101ab2a:	(bad)  
 101ab2b:	(bad)  
 101ab2c:	(bad)  
 101ab2d:	(bad)  
 101ab2e:	(bad)  
 101ab2f:	(bad)  
 101ab30:	(bad)  
 101ab31:	(bad)  
 101ab32:	(bad)  
 101ab33:	(bad)  
 101ab34:	(bad)  
 101ab35:	(bad)  
 101ab36:	(bad)  
 101ab37:	(bad)  
 101ab38:	(bad)  
 101ab39:	(bad)  
 101ab3a:	(bad)  
 101ab3b:	(bad)  
 101ab3c:	(bad)  
 101ab3d:	(bad)  
 101ab3e:	(bad)  
 101ab3f:	(bad)  
 101ab40:	(bad)  
 101ab41:	(bad)  
 101ab42:	(bad)  
 101ab43:	(bad)  
 101ab44:	(bad)  
 101ab45:	(bad)  
 101ab46:	(bad)  
 101ab47:	(bad)  
 101ab48:	(bad)  
 101ab49:	(bad)  
 101ab4a:	(bad)  
 101ab4b:	(bad)  
 101ab4c:	(bad)  
 101ab4d:	(bad)  
 101ab4e:	(bad)  
 101ab4f:	(bad)  
 101ab50:	(bad)  
 101ab51:	(bad)  
 101ab52:	cld    
 101ab53:	(bad)  
 101ab54:	(bad)  
 101ab55:	cld    
 101ab56:	sti    
 101ab57:	(bad)  
 101ab58:	(bad)  
 101ab59:	cli    
 101ab5a:	clc    
 101ab5b:	(bad)  
 101ab5c:	std    
 101ab5d:	stc    
 101ab5e:	idiv   bh
 101ab60:	cld    
 101ab61:	div    ah
 101ab63:	(bad)  
 101ab64:	cld    
 101ab65:	cmc    
 101ab66:	icebp  
 101ab67:	(bad)  
 101ab68:	sti    
 101ab69:	repz in eax,dx
 101ab6b:	(bad)  
 101ab6c:	cli    
 101ab6d:	lock jmp 0x101ab6f
 101ab70:	loopne 0x101ab39
 101ab72:	mov    eax,0x354963ff
 101ab77:	inc    DWORD PTR [eax]
	...
 101ab99:	add    BYTE PTR [eax],al
 101ab9b:	add    BYTE PTR [eax-0x6b5d],bh
 101aba1:	(bad)  
 101aba2:	(bad)  
 101aba3:	(bad)  
 101aba4:	(bad)  
 101aba5:	(bad)  
 101aba6:	(bad)  
 101aba7:	(bad)  
 101aba8:	(bad)  
 101aba9:	(bad)  
 101abaa:	(bad)  
 101abab:	(bad)  
 101abac:	(bad)  
 101abad:	(bad)  
 101abae:	(bad)  
 101abaf:	(bad)  
 101abb0:	(bad)  
 101abb1:	(bad)  
 101abb2:	(bad)  
 101abb3:	(bad)  
 101abb4:	(bad)  
 101abb5:	(bad)  
 101abb6:	(bad)  
 101abb7:	(bad)  
 101abb8:	(bad)  
 101abb9:	(bad)  
 101abba:	(bad)  
 101abbb:	(bad)  
 101abbc:	(bad)  
 101abbd:	(bad)  
 101abbe:	(bad)  
 101abbf:	(bad)  
 101abc0:	(bad)  
 101abc1:	(bad)  
 101abc2:	(bad)  
 101abc3:	(bad)  
 101abc4:	(bad)  
 101abc5:	(bad)  
 101abc6:	(bad)  
 101abc7:	(bad)  
 101abc8:	(bad)  
 101abc9:	(bad)  
 101abca:	(bad)  
 101abcb:	(bad)  
 101abcc:	(bad)  
 101abcd:	(bad)  
 101abce:	(bad)  
 101abcf:	(bad)  
 101abd0:	(bad)  
 101abd1:	(bad)  
 101abd2:	(bad)  
 101abd3:	(bad)  
 101abd4:	(bad)  
 101abd5:	(bad)  
 101abd6:	cld    
 101abd7:	(bad)  
 101abd8:	(bad)  
 101abd9:	sti    
 101abda:	sti    
 101abdb:	(bad)  
 101abdc:	(bad)  
 101abdd:	cli    
 101abde:	stc    
 101abdf:	(bad)  
 101abe0:	std    
 101abe1:	clc    
 101abe2:	idiv   bh
 101abe4:	leave  
 101abe5:	mov    ah,0xa9
 101abe7:	(bad)  
 101abe8:	mov    ebp,0xb2ff97a5
 101abed:	cdq    
 101abee:	mov    edi,edi
 101abf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101abf1:	mov    bh,BYTE PTR [eax-0x1]
 101abf4:	arpl   WORD PTR [ecx+0x35],cx
 101abf7:	inc    DWORD PTR [eax]
	...
 101ac19:	add    BYTE PTR [eax],al
 101ac1b:	add    BYTE PTR [edx-0x675a],bh
 101ac21:	(bad)  
 101ac22:	(bad)  
 101ac23:	(bad)  
 101ac24:	(bad)  
 101ac25:	(bad)  
 101ac26:	(bad)  
 101ac27:	inc    ecx
 101ac29:	stos   DWORD PTR es:[edi],eax
 101ac2a:	pushf  
 101ac2b:	inc    ecx
 101ac2d:	stos   DWORD PTR es:[edi],eax
 101ac2e:	pushf  
 101ac2f:	inc    ecx
 101ac31:	stos   DWORD PTR es:[edi],eax
 101ac32:	pushf  
 101ac33:	inc    ecx
 101ac35:	stos   DWORD PTR es:[edi],eax
 101ac36:	pushf  
 101ac37:	inc    eax
 101ac39:	stos   DWORD PTR es:[edi],eax
 101ac3a:	pushf  
 101ac3b:	(bad)  
 101ac3c:	mov    esp,0xb8ff97a6
 101ac41:	mov    ds:0x9cb3ff92,al
 101ac46:	(bad)  
 101ac47:	push   DWORD PTR [ebx-0x4c007264]
 101ac4d:	pushf  
 101ac4e:	(bad)  
 101ac4f:	(bad)  
 101ac50:	(bad)  
 101ac51:	(bad)  
 101ac52:	(bad)  
 101ac53:	(bad)  
 101ac54:	(bad)  
 101ac55:	(bad)  
 101ac56:	(bad)  
 101ac57:	(bad)  
 101ac58:	(bad)  
 101ac59:	std    
 101ac5a:	cld    
 101ac5b:	(bad)  
 101ac5c:	(bad)  
 101ac5d:	cld    
 101ac5e:	sti    
 101ac5f:	call   FWORD PTR [esi+0x63ff7687]
 101ac65:	dec    ecx
 101ac66:	xor    eax,0x354963ff
 101ac6b:	jmp    DWORD PTR [ebx+0x49]
 101ac6e:	xor    eax,0x354963ff
 101ac73:	jmp    DWORD PTR [ebx+0x49]
 101ac76:	xor    eax,0xff
	...
 101ac9b:	add    BYTE PTR [eax+ebp*4-0x66],bh
 101aca2:	(bad)  
 101aca3:	(bad)  
 101aca4:	(bad)  
 101aca5:	(bad)  
 101aca6:	(bad)  
 101aca7:	(bad)  
 101aca8:	(bad)  
 101aca9:	(bad)  
 101acaa:	(bad)  
 101acab:	(bad)  
 101acac:	(bad)  
 101acad:	(bad)  
 101acae:	(bad)  
 101acaf:	(bad)  
 101acb0:	(bad)  
 101acb1:	(bad)  
 101acb2:	(bad)  
 101acb3:	(bad)  
 101acb4:	(bad)  
 101acb5:	(bad)  
 101acb6:	(bad)  
 101acb7:	(bad)  
 101acb8:	(bad)  
 101acb9:	(bad)  
 101acba:	(bad)  
 101acbb:	(bad)  
 101acbc:	(bad)  
 101acbd:	(bad)  
 101acbe:	(bad)  
 101acbf:	(bad)  
 101acc0:	(bad)  
 101acc1:	(bad)  
 101acc2:	(bad)  
 101acc3:	(bad)  
 101acc4:	(bad)  
 101acc5:	(bad)  
 101acc6:	(bad)  
 101acc7:	(bad)  
 101acc8:	(bad)  
 101acc9:	(bad)  
 101acca:	(bad)  
 101accb:	(bad)  
 101accc:	(bad)  
 101accd:	(bad)  
 101acce:	(bad)  
 101accf:	(bad)  
 101acd0:	(bad)  
 101acd1:	(bad)  
 101acd2:	(bad)  
 101acd3:	(bad)  
 101acd4:	(bad)  
 101acd5:	(bad)  
 101acd6:	(bad)  
 101acd7:	(bad)  
 101acd8:	(bad)  
 101acd9:	(bad)  
 101acda:	(bad)  
 101acdb:	(bad)  
 101acdc:	(bad)  
 101acdd:	std    
 101acde:	cld    
 101acdf:	jmp    DWORD PTR [eax-0x2a008677]
 101ace5:	lds    edi,FWORD PTR [ebp-0x5a4e3801]
 101aceb:	push   DWORD PTR [ebp-0x61007163]
 101acf1:	xchg   DWORD PTR [esi-0x1],esi
	...
 101ad1c:	mov    esi,0xffff9caa
 101ad21:	(bad)  
 101ad22:	(bad)  
 101ad23:	(bad)  
 101ad24:	(bad)  
 101ad25:	(bad)  
 101ad26:	(bad)  
 101ad27:	(bad)  
 101ad28:	(bad)  
 101ad29:	(bad)  
 101ad2a:	(bad)  
 101ad2b:	(bad)  
 101ad2c:	(bad)  
 101ad2d:	(bad)  
 101ad2e:	(bad)  
 101ad2f:	(bad)  
 101ad30:	(bad)  
 101ad31:	(bad)  
 101ad32:	(bad)  
 101ad33:	(bad)  
 101ad34:	(bad)  
 101ad35:	(bad)  
 101ad36:	(bad)  
 101ad37:	(bad)  
 101ad38:	(bad)  
 101ad39:	(bad)  
 101ad3a:	(bad)  
 101ad3b:	(bad)  
 101ad3c:	(bad)  
 101ad3d:	(bad)  
 101ad3e:	(bad)  
 101ad3f:	(bad)  
 101ad40:	(bad)  
 101ad41:	(bad)  
 101ad42:	(bad)  
 101ad43:	(bad)  
 101ad44:	(bad)  
 101ad45:	(bad)  
 101ad46:	(bad)  
 101ad47:	(bad)  
 101ad48:	(bad)  
 101ad49:	(bad)  
 101ad4a:	(bad)  
 101ad4b:	(bad)  
 101ad4c:	(bad)  
 101ad4d:	(bad)  
 101ad4e:	(bad)  
 101ad4f:	(bad)  
 101ad50:	(bad)  
 101ad51:	(bad)  
 101ad52:	(bad)  
 101ad53:	(bad)  
 101ad54:	(bad)  
 101ad55:	(bad)  
 101ad56:	(bad)  
 101ad57:	(bad)  
 101ad58:	(bad)  
 101ad59:	(bad)  
 101ad5a:	(bad)  
 101ad5b:	(bad)  
 101ad5c:	(bad)  
 101ad5d:	(bad)  
 101ad5e:	(bad)  
 101ad5f:	jmp    DWORD PTR [edx-0x1c008374]
 101ad65:	fcmovbe st,st(3)
 101ad67:	call   ebp
 101ad69:	lds    edi,FWORD PTR [edi+edi*8-0x897862]
	...
 101ad9c:	shr    BYTE PTR [ebp-0x61],0xff
 101ada3:	(bad)  
 101ada4:	(bad)  
 101ada5:	(bad)  
 101ada6:	(bad)  
 101ada7:	(bad)  
 101ada8:	(bad)  
 101ada9:	(bad)  
 101adaa:	(bad)  
 101adab:	(bad)  
 101adac:	(bad)  
 101adad:	(bad)  
 101adae:	(bad)  
 101adaf:	(bad)  
 101adb0:	(bad)  
 101adb1:	(bad)  
 101adb2:	(bad)  
 101adb3:	(bad)  
 101adb4:	(bad)  
 101adb5:	(bad)  
 101adb6:	(bad)  
 101adb7:	(bad)  
 101adb8:	(bad)  
 101adb9:	(bad)  
 101adba:	(bad)  
 101adbb:	(bad)  
 101adbc:	(bad)  
 101adbd:	(bad)  
 101adbe:	(bad)  
 101adbf:	(bad)  
 101adc0:	(bad)  
 101adc1:	(bad)  
 101adc2:	(bad)  
 101adc3:	(bad)  
 101adc4:	(bad)  
 101adc5:	(bad)  
 101adc6:	(bad)  
 101adc7:	(bad)  
 101adc8:	(bad)  
 101adc9:	(bad)  
 101adca:	(bad)  
 101adcb:	(bad)  
 101adcc:	(bad)  
 101adcd:	(bad)  
 101adce:	(bad)  
 101adcf:	(bad)  
 101add0:	(bad)  
 101add1:	(bad)  
 101add2:	(bad)  
 101add3:	(bad)  
 101add4:	(bad)  
 101add5:	(bad)  
 101add6:	(bad)  
 101add7:	(bad)  
 101add8:	(bad)  
 101add9:	(bad)  
 101adda:	(bad)  
 101addb:	(bad)  
 101addc:	(bad)  
 101addd:	(bad)  
 101adde:	(bad)  
 101addf:	jmp    DWORD PTR [ebp-0xc008172]
 101ade5:	out    dx,eax
 101ade6:	in     eax,dx
 101ade7:	call   FWORD PTR [esi+0xff7687]
	...
 101ae19:	add    BYTE PTR [eax],al
 101ae1b:	add    dl,al
 101ae1d:	scas   eax,DWORD PTR es:[edi]
 101ae1e:	mov    eax,ds:0xffffffff
 101ae23:	(bad)  
 101ae24:	(bad)  
 101ae25:	(bad)  
 101ae26:	(bad)  
 101ae27:	(bad)  
 101ae28:	(bad)  
 101ae29:	(bad)  
 101ae2a:	(bad)  
 101ae2b:	(bad)  
 101ae2c:	(bad)  
 101ae2d:	(bad)  
 101ae2e:	(bad)  
 101ae2f:	(bad)  
 101ae30:	(bad)  
 101ae31:	std    
 101ae32:	cld    
 101ae33:	(bad)  
 101ae34:	(bad)  
 101ae35:	sti    
 101ae36:	sti    
 101ae37:	(bad)  
 101ae38:	std    
 101ae39:	stc    
 101ae3a:	clc    
 101ae3b:	(bad)  
 101ae3c:	std    
 101ae3d:	clc    
 101ae3e:	cmc    
 101ae3f:	(bad)  
 101ae40:	cld    
 101ae41:	cmc    
 101ae42:	repnz (bad) 
 101ae44:	sti    
 101ae45:	repz out dx,eax
 101ae47:	(bad)  
 101ae48:	sti    
 101ae49:	lock jmp 0x101ae4b
 101ae4c:	cli    
 101ae4d:	in     eax,dx
 101ae4e:	call   0xe5eda852
 101ae53:	(bad)  
 101ae54:	clc    
 101ae55:	jmp    0xe8f9ae3c
 101ae5a:	(bad)  
 101ae5c:	mul    esp
 101ae5e:	(bad)  
 101ae60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101ae61:	xchg   ecx,eax
 101ae62:	cmp    bh,0xa9
 101ae65:	xchg   esp,eax
 101ae66:	test   bh,bh
	...
 101ae9c:	lds    esi,FWORD PTR [ecx-0x503c005d]
 101aea2:	mov    eax,ds:0xa0aec2ff
 101aea7:	inc    eax
 101aea9:	lods   al,BYTE PTR ds:[esi]
 101aeaa:	lahf   
 101aeab:	(bad)  
 101aeac:	mov    edi,0xbdff9cab
 101aeb1:	test   eax,0xa7bcff9b
 101aeb6:	call   0xb8ff:0x97a6bbff
 101aebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101aebe:	xchg   ebp,eax
 101aebf:	push   DWORD PTR [edi-0x49006b5e]
 101aec5:	mov    eax,ds:0x9fb3ff92
 101aeca:	nop
 101aecb:	push   DWORD PTR [edx-0x4f007063]
 101aed1:	fwait
 101aed2:	(bad)  
 101aed3:	jmp    FWORD PTR [esi-0x52007466]
 101aed9:	cwde   
 101aeda:	mov    bh,bh
 101aedc:	stos   DWORD PTR es:[edi],eax
 101aedd:	xchg   esi,eax
 101aede:	xchg   edi,edi
 101aee0:	test   eax,0xff8494
	...
 101af15:	add    BYTE PTR [eax],al
 101af17:	add    bh,bh
 101af19:	(bad)  
 101af1a:	cld    
 101af1b:	ud0    edi,edi
 101af1e:	lock add eax,DWORD PTR [eax-0x7fff0000]
 101af25:	add    BYTE PTR [eax],al
 101af27:	add    DWORD PTR [eax-0x7fff0000],eax
 101af2d:	add    BYTE PTR [eax],al
 101af2f:	add    DWORD PTR [eax-0x7fff0000],eax
 101af35:	add    BYTE PTR [eax],al
 101af37:	add    DWORD PTR [eax-0x7fff0000],eax
 101af3d:	add    BYTE PTR [eax],al
 101af3f:	add    DWORD PTR [eax-0x7fff0000],eax
 101af45:	add    BYTE PTR [eax],al
 101af47:	add    eax,DWORD PTR [eax-0x7ff10000]
 101af4d:	add    BYTE PTR [eax],al
 101af4f:	aas    
 101af50:	add    BYTE PTR [eax],0x0
 101af53:	inc    DWORD PTR [eax-0x7f010000]
 101af59:	add    BYTE PTR [eax],al
 101af5b:	inc    DWORD PTR [eax-0x7f010000]
 101af61:	add    BYTE PTR [eax],al
 101af63:	inc    DWORD PTR [eax-0x7f010000]
 101af69:	add    BYTE PTR [eax],al
 101af6b:	inc    DWORD PTR [eax-0x7f010000]
 101af71:	add    BYTE PTR [eax],al
 101af73:	inc    DWORD PTR [eax-0x7f010000]
 101af79:	add    BYTE PTR [eax],al
 101af7b:	inc    DWORD PTR [eax-0x7f010000]
 101af81:	add    BYTE PTR [eax],al
 101af83:	inc    DWORD PTR [eax-0x7f00ff00]
 101af89:	add    BYTE PTR [ebx],al
 101af8b:	inc    DWORD PTR [eax-0x7f00f900]
 101af91:	add    BYTE PTR [edi],cl
 101af93:	inc    DWORD PTR [eax+0x28ff1f00]
 101af99:	add    BYTE PTR [eax],al
 101af9b:	add    BYTE PTR [eax],dl
 101af9d:	add    BYTE PTR [eax],al
 101af9f:	add    BYTE PTR [eax],ah
 101afa1:	add    BYTE PTR [eax],al
 101afa3:	add    BYTE PTR [ecx],al
 101afa5:	add    BYTE PTR [eax],ah
 101afa7:	add    BYTE PTR [eax],al
 101afa9:	add    BYTE PTR [eax],al
 101afab:	add    BYTE PTR [eax+0x4],al
	...
 101afc2:	add    BYTE PTR [eax],al
 101afc4:	jno    0x101b01d
 101afc6:	inc    esp
 101afc7:	jmp    DWORD PTR [ebx+0x49]
 101afca:	xor    eax,0x354963ff
 101afcf:	jmp    DWORD PTR [ebx+0x49]
 101afd2:	xor    eax,0x354963ff
 101afd7:	jmp    DWORD PTR [ebx+0x49]
 101afda:	xor    eax,0x354963ff
 101afdf:	jmp    DWORD PTR [ebx+0x4a]
 101afe2:	jmp    DWORD PTR ss:[edx+0x4f]
 101afe6:	inc    ecx
 101afe7:	call   DWORD PTR [ecx]
 101afe9:	js     0x101af77
 101afeb:	inc    DWORD PTR [eax]
 101afed:	sub    al,0x43
 101afef:	inc    DWORD PTR [eax]
 101aff1:	add    BYTE PTR [eax],al
 101aff3:	push   DWORD PTR [edi]
 101aff5:	xor    eax,0x1723da37
 101affa:	pop    ss
 101affb:	xor    DWORD PTR [esi+0x2a9a1],eax
 101b001:	add    BYTE PTR [eax],al
 101b003:	add    BYTE PTR [esi+0x5c],dh
 101b006:	dec    ecx
 101b007:	(bad)  
 101b008:	out    dx,eax
 101b009:	rol    esi,cl
 101b00b:	(bad)  
 101b00c:	fidivr WORD PTR [edi-0x42200051]
 101b012:	stos   DWORD PTR es:[edi],eax
 101b013:	(bad)  
 101b014:	fdivr  QWORD PTR [eax-0x4b250059]
 101b01a:	mov    ds:0x9db0d8ff,al
 101b01f:	call   DWORD PTR [ebp-0x6f]
 101b022:	scas   al,BYTE PTR es:[edi]
 101b023:	call   DWORD PTR [ecx]
 101b025:	js     0x101afb3
 101b027:	inc    DWORD PTR [eax]
 101b029:	(bad)  
 101b02b:	inc    DWORD PTR [eax]
 101b02d:	loopne 0x101b02e
 101b02f:	inc    DWORD PTR [eax]
 101b031:	jp     0x101afdc
 101b033:	inc    DWORD PTR [eax]
 101b035:	add    eax,0xff25
 101b03a:	add    bh,bh
 101b03c:	xor    DWORD PTR [esi],edi
 101b03e:	inc    esi
 101b03f:	mov    dl,0x0
 101b041:	add    BYTE PTR [eax],al
 101b043:	add    BYTE PTR [edx+0x61],bh
 101b046:	dec    esi
 101b047:	(bad)  
 101b048:	clc    
 101b049:	loop   0x101b023
 101b04b:	push   esp
 101b04d:	fmul   st,st(2)
 101b04f:	push   edx
 101b051:	aad    0xc8
 101b053:	push   edx
 101b055:	rol    esp,cl
 101b057:	push   ecx
 101b059:	rol    ecx,1
 101b05b:	push   ecx
 101b05d:	into   
 101b05e:	mov    edi,0x64580dff
 101b063:	inc    DWORD PTR [eax]
 101b065:	(bad)  
 101b066:	(bad)  
 101b067:	inc    DWORD PTR [eax]
 101b069:	clc    
 101b06a:	(bad)  
 101b06b:	inc    DWORD PTR [eax]
 101b06d:	(bad)  
 101b06f:	inc    DWORD PTR [eax]
 101b071:	test   DWORD PTR [ecx-0x5b8aff01],esi
 101b077:	inc    DWORD PTR [eax]
 101b079:	dec    edx
 101b07a:	jnp    0x101b07b
 101b07c:	add    BYTE PTR [edx],al
 101b07e:	sbb    edi,edi
 101b080:	add    BYTE PTR [eax],al
 101b082:	add    BYTE PTR [eax],al
 101b084:	and    BYTE PTR [edi+0x55],0xff
 101b088:	clc    
 101b089:	in     al,0xdb
 101b08b:	dec    ebp
 101b08d:	mov    bh,0xa7
 101b08f:	inc    ebp
 101b091:	scas   eax,DWORD PTR es:[edi]
 101b092:	sahf   
 101b093:	(bad)  
 101b094:	mov    esp,0xb4ff95a6
 101b099:	fwait
 101b09a:	mov    edi,edi
 101b09c:	lods   al,BYTE PTR ds:[esi]
 101b09d:	xchg   ebx,eax
 101b09e:	cmp    edi,0xff837728
 101b0a4:	sub    edi,edi
 101b0a6:	(bad)  
 101b0a7:	inc    DWORD PTR ds:0xfffff8
 101b0ad:	in     al,dx
 101b0ae:	(bad)  
 101b0af:	inc    DWORD PTR [eax]
 101b0b1:	sahf   
 101b0b2:	int3   
 101b0b3:	inc    DWORD PTR [eax]
 101b0b5:	test   BYTE PTR [eax-0x6191ff01],dh
 101b0bb:	inc    DWORD PTR [eax]
 101b0bd:	sbb    DWORD PTR ds:0xfc,esi
 101b0c3:	add    BYTE PTR [esi-0x600a593],al
 101b0c9:	call   0xe3f8b0ae
 101b0ce:	xlat   BYTE PTR ds:[ebx]
 101b0cf:	push   ebp
 101b0d1:	(bad)  
 101b0d3:	push   esp
 101b0d5:	(bad)  
 101b0d7:	push   esp
 101b0d9:	fcmove st,st(5)
 101b0db:	push   ebx
 101b0dd:	xlat   BYTE PTR ds:[ebx]
 101b0de:	retf   0x35ff
 101b0e1:	jle    0x101b06d
 101b0e3:	dec    DWORD PTR [edi-0x1]
 101b0e6:	(bad)  
 101b0e7:	push   DWORD PTR ds:0xffffff
 101b0ed:	in     eax,dx
 101b0ee:	(bad)  
 101b0ef:	inc    DWORD PTR [eax]
 101b0f1:	mov    esp,0xab00ffe9
 101b0f6:	aam    0xff
 101b0f8:	add    BYTE PTR [eax+0x2300ffbf],dl
 101b0fe:	cmp    al,0xfc
 101b100:	add    BYTE PTR [eax],al
 101b102:	add    BYTE PTR [eax],al
 101b104:	mov    esi,DWORD PTR [ebx+0x61]
 101b107:	(bad)  
 101b108:	cli    
 101b109:	jmp    0x101b0ef
 101b10b:	call   esp
 101b10d:	mov    ebp,0xb7ccffae
 101b112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101b113:	inc    ebp
 101b115:	scas   al,BYTE PTR es:[edi]
 101b116:	popf   
 101b117:	(bad)  
 101b118:	mov    esp,0xb3ff94a5
 101b11d:	fwait
 101b11e:	mov    bh,bh
 101b120:	inc    edx
 101b121:	xchg   ecx,eax
 101b122:	fwait
 101b123:	jmp    FWORD PTR [ebx-0x1]
 101b126:	(bad)  
 101b127:	jmp    DWORD PTR [ebx]
 101b129:	out    0xef,eax
 101b12b:	jmp    DWORD PTR [esi-0x19]
 101b12e:	icebp  
 101b12f:	inc    DWORD PTR [eax]
 101b131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101b132:	(bad)  
 101b133:	inc    DWORD PTR [eax]
 101b135:	imul   ebx,DWORD PTR [ecx-0x1643ff01],0xffffffff
 101b13c:	add    BYTE PTR [edx],dh
 101b13e:	dec    ebp
 101b13f:	cld    
 101b140:	add    BYTE PTR [eax],al
 101b142:	add    BYTE PTR [eax],al
 101b144:	clc    
 101b145:	out    0xde,al
 101b147:	(bad)  
 101b148:	sti    
 101b149:	out    dx,al
 101b14a:	out    0xff,eax
 101b14c:	stc    
 101b14d:	in     al,dx
 101b14e:	in     al,0xff
 101b150:	clc    
 101b151:	call   0xe7f9b137
 101b156:	(bad)  
 101b158:	mul    ebx
 101b15a:	fcos   
 101b15c:	cmc    
 101b15d:	loope  0x101b135
 101b15f:	call   DWORD PTR [ebx]
 101b161:	push   0xe044ff78
 101b166:	jmp    0xf1ff:0xfffff3ff
 101b16d:	(bad)  
 101b16e:	(bad)  
 101b16f:	call   FWORD PTR [edi+edi*8-0x1]
 101b173:	call   FWORD PTR [eax]
 101b175:	jmp    0x6c02b173
 101b17a:	cdq    
 101b17b:	inc    DWORD PTR [eax]
 101b17d:	pop    ss
 101b17e:	xor    eax,0x54a6ff
 101b183:	mov    ebx,0xffdee6f8
 101b188:	mov    ebp,0xfaff3f7e
 101b18d:	out    dx,eax
 101b18e:	jmp    0x101b18f
 101b190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101b191:	push   esp
 101b192:	add    bh,bh
 101b194:	mov    esp,0xccff3d7c
 101b199:	cdq    
 101b19a:	imul   edi,edi,0xffdde5f7
 101b1a0:	popa   
 101b1a1:	jo     0x101b216
 101b1a3:	jmp    FWORD PTR [eax-0x5c]
 101b1a6:	sar    edi,0xa1
 101b1a9:	iret   
 101b1aa:	in     al,0xff
 101b1ac:	(bad)  
 101b1ad:	(bad)  
 101b1ae:	(bad)  
 101b1af:	jmp    DWORD PTR [esi-0x1]
 101b1b2:	(bad)  
 101b1b3:	inc    DWORD PTR [eax]
 101b1b5:	(bad)  
 101b1b6:	jecxz  0x101b1b7
 101b1b8:	push   0xcffc1a4
 101b1bd:	sub    al,BYTE PTR [ecx-0x4e]
 101b1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101b1c1:	push   esp
 101b1c2:	add    BYTE PTR [ebx-0xffab5a],bh
 101b1c8:	mov    ebp,0xfbff407e
 101b1cd:	cmc    
 101b1ce:	lock (bad) 
 101b1d0:	mov    ebp,0xfaff3f7e
 101b1d5:	out    dx,eax
 101b1d6:	jmp    0xf9ff:0x3e7dbcff
 101b1dd:	jmp    0xffe0:0xe7f7ffe3
 101b1e4:	xchg   edi,eax
 101b1e5:	outs   dx,BYTE PTR ds:[esi]
 101b1e6:	cmp    edi,edi
 101b1e8:	push   0xffc1a4
 101b1ed:	imul   ebx,DWORD PTR [ecx-0x6694ff01],0xffffffff
 101b1f4:	push   0x3effc1a4
 101b1f9:	mov    dh,BYTE PTR [ebx+0x675e5a31]
 101b1ff:	add    ah,BYTE PTR [esi-0x3311ffac]
 101b205:	cwde   
 101b206:	push   0x105facff
 101b20b:	(bad)  
 101b20c:	std    
 101b20d:	clc    
 101b20e:	idiv   bh
 101b210:	mov    ebp,0xfcff417f
 101b215:	hlt    
 101b216:	lock push DWORD PTR [edi-0x500d08d]
 101b21d:	out    dx,eax
 101b21e:	jmp    0xb2ff:0xe6edfaff
 101b225:	push   0x21
 101b227:	dec    eax
 101b229:	scas   eax,DWORD PTR es:[edi]
 101b22a:	xchg   ebx,eax
 101b22b:	push   esp
 101b22d:	(bad)  
 101b22f:	jmp    DWORD PTR [ebx+0x49]
 101b232:	xor    eax,0xff
	...
 101b23f:	add    BYTE PTR [esi-0x722ffac],ah
 101b245:	out    0xde,al
 101b247:	push   DWORD PTR [edx-0x100de96]
 101b24d:	sti    
 101b24e:	cli    
 101b24f:	push   DWORD PTR [edx-0x4200de96]
 101b255:	add    BYTE PTR [edx-0x1],0xda
 101b259:	mov    ch,0x92
 101b25b:	(bad)  
 101b25c:	cld    
 101b25d:	hlt    
 101b25e:	out    dx,eax
 101b25f:	push   DWORD PTR [edx-0x2700de96]
 101b265:	mov    cl,0x8c
 101b267:	push   DWORD PTR [edx-0x1300de96]
 101b26d:	iret   
 101b26e:	mov    edx,0x354963ff
 101b273:	inc    DWORD PTR [eax]
	...
 101b281:	add    BYTE PTR [eax],al
 101b283:	add    al,bh
 101b285:	out    0xde,al
 101b287:	(bad)  
 101b288:	(bad)  
 101b289:	stc    
 101b28a:	idiv   edi
 101b28c:	(bad)  
 101b28d:	(bad)  
 101b28e:	(bad)  
 101b28f:	(bad)  
 101b290:	(bad)  
 101b291:	std    
 101b292:	sti    
 101b293:	(bad)  
 101b294:	(bad)  
 101b295:	sti    
 101b296:	cli    
 101b297:	(bad)  
 101b298:	std    
 101b299:	cli    
 101b29a:	idiv   edi
 101b29c:	std    
 101b29d:	clc    
 101b29e:	cmc    
 101b29f:	(bad)  
 101b2a0:	cld    
 101b2a1:	cmc    
 101b2a2:	repnz (bad) 
 101b2a4:	sti    
 101b2a5:	repz out dx,eax
 101b2a7:	(bad)  
 101b2a8:	sti    
 101b2a9:	lock in al,dx
 101b2ab:	(bad)  
 101b2ac:	sti    
 101b2ad:	jmp    0xff35:0x4963ffe0
	...
 101b2c4:	fistp  QWORD PTR [ebp-0x4010055]
 101b2ca:	stc    
 101b2cb:	(bad)  
 101b2cc:	fcmovb st,st(3)
 101b2ce:	mov    ah,0xff
 101b2d0:	sar    DWORD PTR [ebp+ebp*4-0x594b3301],cl
 101b2d7:	inc    esp
 101b2d9:	lods   eax,DWORD PTR ds:[esi]
 101b2da:	pushf  
 101b2db:	(bad)  
 101b2dc:	cli    
 101b2dd:	jmp    0xfff7:0xf9feffe2
 101b2e4:	mov    ds:0x6cff7c8c,al
 101b2e9:	push   ecx
 101b2ea:	cmp    eax,0x3d516cff
 101b2ef:	jmp    DWORD PTR [ebx+0x49]
 101b2f2:	xor    eax,0xff
	...
 101b303:	add    BYTE PTR [eax-0x1006a5c],bh
 101b309:	cld    
 101b30a:	sti    
 101b30b:	(bad)  
 101b30c:	(bad)  
 101b30d:	(bad)  
 101b30e:	(bad)  
 101b30f:	(bad)  
 101b310:	(bad)  
 101b311:	(bad)  
 101b312:	(bad)  
 101b313:	(bad)  
 101b314:	(bad)  
 101b315:	(bad)  
 101b316:	(bad)  
 101b317:	(bad)  
 101b318:	(bad)  
 101b319:	(bad)  
 101b31a:	(bad)  
 101b31b:	(bad)  
 101b31c:	(bad)  
 101b31d:	std    
 101b31e:	std    
 101b31f:	(bad)  
 101b320:	(bad)  
 101b321:	cld    
 101b322:	sti    
 101b323:	jmp    DWORD PTR [edx-0x18008374]
 101b329:	(bad)  
 101b32b:	jmp    DWORD PTR [ebx+0xff7d8d]
	...
 101b341:	add    BYTE PTR [eax],al
 101b343:	add    BYTE PTR [ebp-0x6458],bh
 101b349:	(bad)  
 101b34a:	(bad)  
 101b34b:	(bad)  
 101b34c:	(bad)  
 101b34d:	(bad)  
 101b34e:	(bad)  
 101b34f:	(bad)  
 101b350:	(bad)  
 101b351:	(bad)  
 101b352:	(bad)  
 101b353:	(bad)  
 101b354:	(bad)  
 101b355:	(bad)  
 101b356:	(bad)  
 101b357:	(bad)  
 101b358:	(bad)  
 101b359:	(bad)  
 101b35a:	(bad)  
 101b35b:	(bad)  
 101b35c:	(bad)  
 101b35d:	(bad)  
 101b35e:	(bad)  
 101b35f:	(bad)  
 101b360:	(bad)  
 101b361:	(bad)  
 101b362:	(bad)  
 101b363:	jmp    DWORD PTR [edx-0x5c008374]
 101b369:	lea    edi,[ebp-0x1]
	...
 101b384:	ret    0xa0ae
 101b387:	(bad)  
 101b388:	mov    ebp,0xb8ff9ba8
 101b38d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b38e:	xchg   ebp,eax
 101b38f:	push   DWORD PTR [ebx-0x51006f61]
 101b395:	cdq    
 101b396:	mov    bh,bh
 101b398:	test   al,0x93
 101b39a:	cmp    edi,0xffffffa3
 101b39d:	lea    edi,[ebp-0x1]
 101b3a0:	popf   
 101b3a1:	xchg   BYTE PTR [esi-0x1],dh
 101b3a4:	xchg   edi,eax
 101b3a5:	sub    BYTE PTR [edi-0x1],0x0
	...
 101b3bd:	add    BYTE PTR [eax],al
 101b3bf:	add    BYTE PTR [eax-0x80000000],al
 101b3c5:	add    BYTE PTR [eax],al
 101b3c7:	add    BYTE PTR [eax-0x80000000],al
 101b3cd:	add    BYTE PTR [eax],al
 101b3cf:	add    BYTE PTR [eax-0x80000000],al
 101b3d5:	add    BYTE PTR [eax],al
 101b3d7:	add    BYTE PTR [eax+0x0],al
	...
 101b3e5:	pop    es
 101b3e6:	add    BYTE PTR [eax],al
 101b3e8:	add    BYTE PTR [edi],al
 101b3ea:	add    BYTE PTR [eax],al
 101b3ec:	add    BYTE PTR [edi],0x0
 101b3ef:	add    BYTE PTR [eax-0x7ffffff9],al
 101b3f5:	sldt   WORD PTR [eax]
 101b3f8:	sbb    BYTE PTR [edi],0x0
 101b3fb:	add    BYTE PTR [eax+0x2800003f],al
 101b401:	add    BYTE PTR [eax],al
 101b403:	add    BYTE PTR [eax],ah
 101b405:	add    BYTE PTR [eax],al
 101b407:	add    BYTE PTR [eax+0x0],al
 101b40a:	add    BYTE PTR [eax],al
 101b40c:	add    DWORD PTR [eax],eax
 101b40e:	or     BYTE PTR [eax],al
 101b410:	add    BYTE PTR [eax],al
 101b412:	add    BYTE PTR [eax],al
 101b414:	add    BYTE PTR [eax+eax*1],al
	...
 101b41f:	add    BYTE PTR [eax],al
 101b421:	add    DWORD PTR [eax],eax
 101b423:	add    BYTE PTR [eax],al
 101b425:	add    DWORD PTR [eax],eax
 101b427:	add    BYTE PTR [eax],al
 101b429:	add    BYTE PTR [eax],al
 101b42b:	add    BYTE PTR [ebx+0x49],ah
 101b42e:	xor    eax,0x52473800
 101b433:	add    BYTE PTR [esi],bh
 101b435:	push   esp
 101b436:	bound  eax,QWORD PTR [eax]
 101b438:	outs   dx,BYTE PTR ds:[esi]
 101b439:	push   ebp
 101b43a:	inc    edx
 101b43b:	add    BYTE PTR [edx+0x59],dh
 101b43e:	inc    esi
 101b43f:	add    BYTE PTR [ebp+0x5c],dh
 101b442:	dec    edx
 101b443:	add    BYTE PTR [eax+0x5f],bh
 101b446:	dec    ebp
 101b447:	add    BYTE PTR [ebx+eiz*2+0x51],bh
 101b44b:	add    BYTE PTR [esi+0x66],bh
 101b44e:	push   ebp
 101b44f:	add    BYTE PTR [edi+0x73],bl
 101b452:	jnp    0x101b454
 101b454:	push   0x6900766d
 101b459:	jb     0x101b4d3
 101b45b:	add    BYTE PTR [esi+0x74],ch
 101b45e:	jge    0x101b460
 101b460:	sub    DWORD PTR [eax+0x56],0x596a8300
 101b467:	add    BYTE PTR [ebx+ebp*2+0x6e860059],al
 101b46e:	pop    ebx
 101b46f:	add    BYTE PTR [esi-0x76ffa393],al
 101b475:	jo     0x101b4d5
 101b477:	add    BYTE PTR [edx-0x72ff9e8e],cl
 101b47d:	jne    0x101b4e3
 101b47f:	add    BYTE PTR [edi-0x6eff9888],cl
 101b485:	jns    0x101b4f0
 101b487:	add    BYTE PTR [ebp+0x50006c7d],dl
 101b48d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101b48e:	add    BYTE PTR [eax],al
 101b490:	pop    ebx
 101b491:	stos   BYTE PTR es:[edi],al
 101b492:	push   cs
 101b493:	add    BYTE PTR [edi-0x4e],ah
 101b496:	and    al,BYTE PTR [eax]
 101b498:	jno    0x101b44c
 101b49a:	sub    eax,DWORD PTR [eax]
 101b49c:	jae    0x101b455
 101b49e:	xor    al,BYTE PTR [eax]
 101b4a0:	jae    0x101b45a
 101b4a2:	xor    eax,DWORD PTR [eax]
 101b4a4:	jl     0x101b45b
 101b4a6:	cmp    DWORD PTR [eax],eax
 101b4a8:	jge    0x101b463
 101b4aa:	add    BYTE PTR ds:[esi-0x45],bh
 101b4ae:	inc    eax
 101b4af:	add    BYTE PTR [esi-0x43],bh
 101b4b2:	inc    ebx
 101b4b3:	add    BYTE PTR [edi-0x43],bh
 101b4b6:	inc    esp
 101b4b7:	add    BYTE PTR [edi-0x77ffba48],al
 101b4bd:	mov    edx,0xbc880049
 101b4c2:	dec    ebx
 101b4c3:	add    BYTE PTR [edx-0x67ffa943],dl
 101b4c9:	xor    DWORD PTR [ecx+0x0],0x73849b
 101b4d0:	popf   
 101b4d1:	xchg   BYTE PTR [ebp+0x0],dh
 101b4d4:	lahf   
 101b4d5:	mov    DWORD PTR [ecx+0x0],edi
 101b4d8:	mov    al,ds:0xa4007888
 101b4dd:	mov    bh,BYTE PTR [eax+0x0]
 101b4e0:	mov    ds:0xa2007b8c,al
 101b4e5:	mov    WORD PTR [eax+eax*1-0x5c],?
 101b4e9:	mov    ?,WORD PTR [esi+0x0]
 101b4ec:	mov    ecx,eax
 101b4ee:	push   ecx
 101b4ef:	add    BYTE PTR [edx-0x6bffaa3c],cl
 101b4f5:	lds    esp,FWORD PTR [eax+0x0]
 101b4f8:	xchg   esi,eax
 101b4f9:	leave  
 101b4fa:	add    BYTE PTR gs:[eax-0x5eff8f36],ah
 101b501:	int    0x73
 101b503:	add    BYTE PTR [edx+0x60077d0],ah
 101b509:	ja     0x101b49e
 101b50b:	add    BYTE PTR [esi],al
 101b50d:	ja     0x101b4a3
 101b50f:	add    BYTE PTR [esi],bl
 101b511:	je     0x101b4ac
 101b513:	add    BYTE PTR [ebp+0x76],ch
 101b516:	add    DWORD PTR [eax],0x857b73
 101b51c:	add    eax,0x4009d80
 101b521:	mov    ch,BYTE PTR [eax-0x5773fc00]
 101b527:	add    BYTE PTR [ebx],al
 101b529:	xchg   esi,eax
 101b52a:	mov    dl,0x0
 101b52c:	add    al,0x96
 101b52e:	mov    dl,0x0
 101b530:	add    ah,BYTE PTR [ecx-0x7d8cff42]
 101b536:	mov    es,WORD PTR [eax]
 101b538:	jne    0x101b4c4
 101b53a:	xchg   edx,eax
 101b53b:	add    BYTE PTR [ecx-0x74],bh
 101b53e:	xchg   esi,eax
 101b53f:	add    BYTE PTR [edx-0x70],bh
 101b542:	cwde   
 101b543:	add    BYTE PTR [edx],al
 101b545:	lods   al,BYTE PTR ds:[esi]
 101b546:	enter  0x100,0xb7
 101b54a:	rol    BYTE PTR [eax],cl
 101b54c:	add    DWORD PTR [eax-0x3fffff2e],edi
 101b552:	fiadd  DWORD PTR [eax]
 101b554:	add    dh,al
 101b556:	loopne 0x101b558
 101b558:	or     ecx,ebp
 101b55a:	jecxz  0x101b55c
 101b55c:	adc    al,0xd2
 101b55e:	out    0x0,al
 101b560:	and    dh,dl
 101b562:	jmp    0x3c00:0xecdc2e00
 101b569:	loop   0x101b55b
 101b56b:	add    BYTE PTR [eax-0x3b],bl
 101b56e:	into   
 101b56f:	add    BYTE PTR [ebx-0x18],cl
 101b572:	repnz add BYTE PTR [eax+ebp*8-0xe],cl
 101b577:	add    BYTE PTR [ebx-0x12],bl
 101b57a:	test   BYTE PTR [eax],0x5c
 101b57d:	in     eax,dx
 101b57e:	test   DWORD PTR [eax],0xf7f066
 101b584:	imul   esi,ebx,0xf17500f9
 101b58a:	test   DWORD PTR [eax],0xf8f175
 101b590:	ja     0x101b58a
 101b592:	cld    
 101b593:	add    BYTE PTR [eax-0x7],bh
 101b596:	sti    
 101b597:	add    BYTE PTR [esi-0x56ff7e70],ah
 101b59d:	xchg   ecx,eax
 101b59e:	add    DWORD PTR [eax],0x8493ab
 101b5a4:	test   eax,0xac008494
 101b5a9:	xchg   esi,eax
 101b5aa:	xchg   BYTE PTR [eax],al
 101b5ac:	lods   eax,DWORD PTR ds:[esi]
 101b5ad:	cdq    
 101b5ae:	mov    DWORD PTR [eax],eax
 101b5b0:	mov    cl,0x99
 101b5b2:	mov    DWORD PTR [eax],eax
 101b5b4:	mov    al,0x9b
 101b5b6:	lea    eax,[eax]
 101b5b8:	mov    dl,0x9c
 101b5ba:	lea    eax,[eax]
 101b5bc:	mov    ah,0x9c
 101b5be:	mov    es,WORD PTR [eax]
 101b5c0:	mov    bl,0x9f
 101b5c2:	nop
 101b5c3:	add    BYTE PTR [ebp-0x49ff6f61],dh
 101b5c9:	mov    al,ds:0xa2b70091
 101b5ce:	xchg   esp,eax
 101b5cf:	add    BYTE PTR [eax-0x47ff6d5e],bh
 101b5d5:	mov    ds:0xa4b90094,eax
 101b5da:	xchg   esi,eax
 101b5db:	add    BYTE PTR [ebp+eiz*4-0x5945ff69],bh
 101b5e2:	cwde   
 101b5e3:	add    BYTE PTR [ebp-0x42ff675a],bh
 101b5e9:	test   al,0x9a
 101b5eb:	add    BYTE PTR [esi-0x2fff6356],bh
 101b5f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b5f2:	pop    DWORD PTR [eax]
 101b5f4:	shr    DWORD PTR [edx-0x543fff65],0x9c
 101b5fb:	add    al,al
 101b5fd:	lods   al,BYTE PTR ds:[esi]
 101b5fe:	lahf   
 101b5ff:	add    al,dl
 101b601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101b602:	xchg   ecx,eax
 101b603:	add    dl,dl
 101b605:	test   al,0x93
 101b607:	add    dl,dl
 101b609:	stos   BYTE PTR es:[edi],al
 101b60a:	xchg   esi,eax
 101b60b:	add    ah,dl
 101b60d:	stos   DWORD PTR es:[edi],eax
 101b60e:	xchg   edi,eax
 101b60f:	add    ah,dl
 101b611:	lods   eax,DWORD PTR ds:[esi]
 101b612:	call   0xc200:0x9db0d600
 101b619:	scas   al,BYTE PTR es:[edi]
 101b61a:	mov    al,ds:0xa3b1c500
 101b61f:	add    bh,al
 101b621:	mov    cl,0xa5
 101b623:	add    cl,cl
 101b625:	mov    ah,0xa9
 101b627:	add    bh,dl
 101b629:	mov    bl,0xa0
 101b62b:	add    bh,dl
 101b62d:	mov    ch,0xa3
 101b62f:	add    al,bl
 101b631:	mov    ch,0xa3
 101b633:	add    al,bl
 101b635:	mov    bh,0xa5
 101b637:	add    dl,bl
 101b639:	mov    ecx,0xbada00a7
 101b63e:	test   eax,0xacbcdb00
 101b643:	add    ah,bl
 101b645:	mov    esi,0xc9b400ae
 101b64a:	add    BYTE PTR [eax],0xb5
 101b64d:	int3   
 101b64e:	test   DWORD PTR [eax],eax
 101b650:	mov    ebp,0xac0088c8
 101b655:	rol    DWORD PTR [edx-0x7b2d5400],1
 101b65b:	add    BYTE PTR [ebp-0x52ff792c],ch
 101b661:	aad    0x88
 101b663:	add    BYTE PTR [edi-0x40ff712c],dh
 101b669:	int    0x90
 101b66b:	add    bl,cl
 101b66d:	fsub   DWORD PTR [esi-0x56263300]
 101b673:	add    ch,cl
 101b675:	fsubr  QWORD PTR [ebx-0x52223300]
 101b67b:	add    dh,bl
 101b67d:	shl    DWORD PTR [ecx-0x493b2100],0x0
 101b684:	aad    0xc5
 101b686:	mov    esp,0xb8c7e000
 101b68b:	add    al,dh
 101b68d:	into   
 101b68e:	mov    ebp,0xb1e0ce00
 101b693:	add    al,dl
 101b695:	in     al,0xb7
 101b697:	add    al,dl
 101b699:	out    0xba,al
 101b69b:	add    BYTE PTR [eax-0x77ff070d],cl
 101b6a1:	hlt    
 101b6a2:	clc    
 101b6a3:	add    BYTE PTR [ebx-0x7bff0104],al
 101b6a9:	cld    
 101b6aa:	inc    BYTE PTR [eax]
 101b6ac:	mov    edi,?
 101b6ae:	inc    DWORD PTR [eax]
 101b6b0:	icebp  
 101b6b1:	rol    cl,1
 101b6b3:	add    dl,dh
 101b6b5:	rol    esp,cl
 101b6b7:	add    bl,dh
 101b6b9:	aad    0xc7
 101b6bb:	add    bl,dh
 101b6bd:	(bad)  
 101b6be:	enter  0xf300,0xd8
 101b6c2:	retf   
 101b6c3:	add    ah,dh
 101b6c5:	fmul   st,st(2)
 101b6c7:	add    ah,dh
 101b6c9:	fcmove st,st(5)
 101b6cb:	add    ch,dh
 101b6cd:	fmul   st(7),st
 101b6cf:	add    bl,ah
 101b6d1:	fcmovbe st,st(3)
 101b6d3:	add    ah,dh
 101b6d5:	fst    st(1)
 101b6d7:	add    ch,dh
 101b6d9:	(bad)  
 101b6db:	add    bl,bl
 101b6dd:	jmp    0xd1:0xe4ed00c8
 101b6e4:	cmc    
 101b6e5:	loopne 0x101b6bd
 101b6e7:	add    dh,dh
 101b6e9:	loop   0x101b6c4
 101b6eb:	add    dh,dh
 101b6ed:	in     al,0xdb
 101b6ef:	add    bh,dh
 101b6f1:	out    0xdd,al
 101b6f3:	add    al,bh
 101b6f5:	out    0xdd,al
 101b6f7:	add    bh,bl
 101b6f9:	loop   0x101b6e1
 101b6fb:	add    al,bh
 101b6fd:	jmp    0xebfab7e3
 101b702:	in     al,0x0
 101b704:	stc    
 101b705:	in     al,dx
 101b706:	in     eax,0x0
 101b708:	repz out dx,eax
 101b70a:	in     eax,dx
 101b70b:	add    cl,bh
 101b70d:	out    dx,al
 101b70e:	call   0xebf2b113
 101b713:	add    dl,bh
 101b715:	icebp  
 101b716:	in     eax,dx
 101b717:	add    ah,bh
 101b719:	icebp  
 101b71a:	in     eax,dx
 101b71b:	add    bl,dh
 101b71d:	clc    
 101b71e:	in     eax,dx
 101b71f:	add    cl,ah
 101b721:	std    
 101b722:	std    
 101b723:	add    bl,bh
 101b725:	hlt    
 101b726:	icebp  
 101b727:	add    ah,bh
 101b729:	cmc    
 101b72a:	icebp  
 101b72b:	add    ah,bh
 101b72d:	div    ah
 101b72f:	add    ah,bh
 101b731:	clc    
 101b732:	cmc    
 101b733:	add    dl,dh
 101b735:	(bad)  
 101b736:	inc    BYTE PTR [eax]
 101b738:	std    
 101b739:	cli    
 101b73a:	stc    
 101b73b:	add    dh,bh
 101b73d:	cld    
 101b73e:	cli    
 101b73f:	add    dh,bh
 101b741:	(bad)  
 101b742:	inc    BYTE PTR [eax]
	...
 101b83c:	add    BYTE PTR [eax],al
 101b83e:	mov    ah,0x3
 101b840:	add    al,BYTE PTR [eax]
 101b842:	add    BYTE PTR [eax+eax*1+0x0],dh
	...
 101b859:	add    BYTE PTR [eax],al
 101b85b:	add    BYTE PTR [ebx+eax*1+0x3e4c4d03],dh
 101b862:	cmp    eax,0xb40000
 101b867:	add    BYTE PTR [eax],al
 101b869:	push   cs
 101b86a:	add    DWORD PTR [ecx],eax
 101b86c:	add    DWORD PTR [ecx],eax
 101b86e:	add    DWORD PTR [ecx],eax
 101b870:	add    DWORD PTR [ecx],eax
 101b872:	add    DWORD PTR [ecx],eax
 101b874:	add    DWORD PTR [ecx],eax
 101b876:	add    DWORD PTR [ecx],eax
 101b878:	add    DWORD PTR [ecx],eax
 101b87a:	add    DWORD PTR [ebx],ecx
 101b87c:	add    edx,DWORD PTR [eax+0x4f]
 101b87f:	dec    esi
 101b880:	dec    ebp
 101b881:	inc    ecx
 101b882:	ds cmp eax,0xa0038
 101b888:	add    BYTE PTR [eax],dl
 101b88a:	test   al,0x95
 101b88c:	xchg   DWORD PTR [edi-0x7c7c7c79],eax
 101b892:	cmp    BYTE PTR [ebx+0x7b],0x7a
 101b896:	jns    0x101b911
 101b898:	jns    0x101b90c
 101b89a:	jb     0x101b8a8
 101b89c:	push   esp
 101b89d:	push   edx
 101b89e:	push   eax
 101b89f:	dec    edi
 101b8a0:	dec    esi
 101b8a1:	inc    edx
 101b8a2:	inc    ecx
 101b8a3:	ds cmp eax,0x238
 101b8a9:	adc    BYTE PTR [ebx-0x4e484847],ch
 101b8af:	mov    bl,0xb1
 101b8b1:	stos   DWORD PTR es:[edi],eax
 101b8b2:	scas   eax,DWORD PTR es:[edi]
 101b8b3:	stos   DWORD PTR es:[edi],eax
 101b8b4:	test   al,0xa8
 101b8b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b8b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b8b8:	mov    ds:0x570c9999,al
 101b8bd:	push   ebp
 101b8be:	push   edx
 101b8bf:	push   eax
 101b8c0:	dec    edi
 101b8c1:	inc    edi
 101b8c2:	inc    edx
 101b8c3:	inc    ecx
 101b8c4:	ds cmp eax,0x13000002
 101b8ca:	stos   DWORD PTR es:[edi],eax
 101b8cb:	mov    ebx,0xb3b7b7b7
 101b8d0:	mov    bl,0xb1
 101b8d2:	scas   eax,DWORD PTR es:[edi]
 101b8d3:	stos   DWORD PTR es:[edi],eax
 101b8d4:	stos   DWORD PTR es:[edi],eax
 101b8d5:	test   al,0xa6
 101b8d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b8d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b8da:	cdq    
 101b8db:	cmp    ebx,DWORD PTR [ebx+0x57]
 101b8de:	push   esp
 101b8df:	push   edx
 101b8e0:	push   eax
 101b8e1:	dec    eax
 101b8e2:	inc    edi
 101b8e3:	inc    edx
 101b8e4:	inc    ecx
 101b8e5:	add    al,BYTE PTR ds:[eax]
 101b8e8:	add    BYTE PTR [edi+ebp*4],dl
 101b8eb:	mov    ebx,0xb7b7b9bb
 101b8f0:	mov    bl,0xb3
 101b8f2:	mov    cl,0xb1
 101b8f4:	stos   DWORD PTR es:[edi],eax
 101b8f5:	stos   DWORD PTR es:[edi],eax
 101b8f6:	test   al,0xa8
 101b8f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b8fa:	cdq    
 101b8fb:	cmp    al,0xa0
 101b8fd:	pop    edx
 101b8fe:	push   edi
 101b8ff:	push   esp
 101b900:	push   edx
 101b901:	dec    edx
 101b902:	dec    ecx
 101b903:	inc    edi
 101b904:	inc    edx
 101b905:	inc    ecx
 101b906:	add    al,BYTE PTR [eax]
 101b908:	add    BYTE PTR [ecx+esi*4],dl
 101b90b:	shl    BYTE PTR [esp+esi*2+0x6d],0x6d
 101b910:	fs pusha 
 101b912:	pop    esp
 101b913:	sub    al,0x2c
 101b915:	sub    BYTE PTR [edi],dl
 101b917:	adc    al,0xe
 101b919:	or     BYTE PTR [esi],al
 101b91b:	inc    ebx
 101b91c:	mov    eax,ds:0x515aa0a1
 101b921:	ds dec ebx
 101b923:	dec    edx
 101b924:	dec    ecx
 101b925:	inc    edi
 101b926:	add    al,BYTE PTR [eax]
 101b928:	add    BYTE PTR [edi],dl
 101b92a:	mov    cl,0xc0
 101b92c:	sar    BYTE PTR [ebx-0x48484845],0xb3
 101b933:	mov    bl,0xb1
 101b935:	stos   DWORD PTR es:[edi],eax
 101b936:	stos   DWORD PTR es:[edi],eax
 101b937:	stos   DWORD PTR es:[edi],eax
 101b938:	test   al,0xa6
 101b93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101b93b:	inc    esi
 101b93c:	mov    eax,ds:0xbe5151a1
 101b941:	popf   
 101b942:	ds ds dec edx
 101b945:	dec    ecx
 101b946:	add    al,BYTE PTR [eax]
 101b948:	add    BYTE PTR [edi],dl
 101b94a:	mov    bl,0xc4
 101b94c:	rol    al,0xbb
 101b94f:	mov    ebx,0xb1b7b7b7
 101b954:	mov    bl,0xb1
 101b956:	scas   eax,DWORD PTR es:[edi]
 101b957:	stos   DWORD PTR es:[edi],eax
 101b958:	stos   DWORD PTR es:[edi],eax
 101b959:	test   al,0xa6
 101b95b:	inc    esp
 101b95c:	push   ecx
 101b95d:	push   ecx
 101b95e:	(bad)
 101b962:	pop    ecx
 101b963:	push   esi
 101b964:	ds add al,BYTE PTR ds:[eax]
 101b968:	add    BYTE PTR [edi],dl
 101b96a:	mov    bh,0xc4
 101b96c:	je     0x101b9e2
 101b96e:	jo     0x101b9dd
 101b970:	push   0x2c2c6062
 101b975:	sub    BYTE PTR [eax],ch
 101b977:	adc    al,0x13
 101b979:	or     DWORD PTR [edi],eax
 101b97b:	inc    ebp
 101b97c:	cmp    al,ah
 101b97e:	(bad)
 101b982:	pop    ecx
 101b983:	push   esi
 101b984:	push   esp
 101b985:	cmp    al,BYTE PTR [edx]
 101b987:	add    BYTE PTR [eax],al
 101b989:	sub    BYTE PTR [edi-0x3f3d3b3c],dh
 101b98f:	sar    BYTE PTR [ebx-0x48484847],0xb3
 101b996:	mov    bl,0xb1
 101b998:	scas   eax,DWORD PTR es:[edi]
 101b999:	stos   DWORD PTR es:[edi],eax
 101b99a:	stos   DWORD PTR es:[edi],eax
 101b99b:	test   al,0xb4
 101b99d:	cmp    bh,BYTE PTR [edx]
 101b99f:	ret    
 101b9a0:	mov    esi,0x3a3a589d
 101b9a5:	mov    ah,0x0
 101b9a7:	add    BYTE PTR [eax],al
 101b9a9:	sub    BYTE PTR [edi-0x3d3b3b3c],dh
 101b9af:	rol    al,0xbb
 101b9b2:	mov    ebx,0xb3b7b7b7
 101b9b7:	mov    cl,0xaf
 101b9b9:	scas   eax,DWORD PTR es:[edi]
 101b9ba:	stos   DWORD PTR es:[edi],eax
 101b9bb:	stos   DWORD PTR es:[edi],eax
 101b9bc:	test   al,0xa8
 101b9be:	mov    ah,0x3a
 101b9c0:	cmp    bh,BYTE PTR [edx]
 101b9c2:	cmp    dh,BYTE PTR [eax+eax*1+0x0]
 101b9c9:	sub    BYTE PTR [ebx+0x1d9b9c1e],bh
 101b9cf:	mov    WORD PTR [ebx+esi*1+0x1f92208f],cs
 101b9d6:	sbb    DWORD PTR [ecx],ebx
 101b9d8:	pop    ds
 101b9d9:	sbb    ch,BYTE PTR [ebx+0x7b8a24ab]
 101b9df:	add    DWORD PTR [esp+esi*4+0x0],esi
 101b9e6:	add    BYTE PTR [eax],al
 101b9e8:	add    BYTE PTR [edx],ch
 101b9ea:	mov    ebx,0x9b23239c
 101b9ef:	mov    WORD PTR [ecx+esi*1+0x20932035],cs
 101b9f6:	xchg   edx,eax
 101b9f7:	mov    bl,0xb1
 101b9f9:	es sbb al,0x1f
 101b9fc:	sbb    ch,BYTE PTR [ebx+0x180]
 101ba02:	add    BYTE PTR [eax],al
 101ba04:	add    BYTE PTR [eax],al
 101ba06:	add    BYTE PTR [eax],al
 101ba08:	add    BYTE PTR [ebx],ch
 101ba0a:	mov    ebx,0xc43432c4
 101ba0f:	mov    WORD PTR [esi],?
 101ba11:	xor    DWORD PTR [ecx],esp
 101ba13:	and    DWORD PTR [ebx-0x48486ce0],edx
 101ba19:	mov    DWORD PTR [edi],esp
 101ba1b:	mov    DWORD PTR [edi],esp
 101ba1d:	stos   DWORD PTR es:[edi],eax
 101ba1e:	add    BYTE PTR [ecx],0x0
	...
 101ba29:	sub    al,0xc0
 101ba2b:	mov    ebp,0x8ebd1b1b
 101ba30:	and    ecx,DWORD PTR [ecx+esi*1-0x6cdf65df]
 101ba37:	mov    bh,0xb7
 101ba39:	scas   al,BYTE PTR es:[edi]
 101ba3a:	sbb    ah,BYTE PTR [esi]
 101ba3c:	nop
 101ba3d:	stos   DWORD PTR es:[edi],eax
 101ba3e:	xchg   DWORD PTR [ecx],eax
	...
 101ba48:	add    BYTE PTR [esp+eax*8],ch
 101ba4b:	aaa    
 101ba4c:	mov    cs,WORD PTR [esi-0x52e671c9]
 101ba52:	mov    WORD PTR [ecx],ds
 101ba54:	call   0x26b7:0xb7b99323
 101ba5b:	sbb    dh,BYTE PTR [ecx+0x183af]
	...
 101ba69:	pusha  
 101ba6a:	ret    0xc4c4
 101ba6d:	(bad)  
 101ba6e:	(bad)  
 101ba6f:	(bad)  
 101ba70:	(bad)  
 101ba71:	(bad)  
 101ba72:	(bad)  
 101ba73:	(bad)
 101ba77:	mov    ebx,0xb3b7b7b9
 101ba7c:	mov    bl,0xb3
 101ba7e:	xchg   DWORD PTR [ecx],eax
	...
 101ba88:	add    BYTE PTR [eax-0x3c],ah
 101ba8b:	(bad)  
 101ba8c:	(bad)  
 101ba8d:	(bad)  
 101ba8e:	(bad)  
 101ba8f:	(bad)  
 101ba90:	(bad)  
 101ba91:	(bad)  
 101ba92:	(bad)  
 101ba93:	(bad)
 101ba97:	sar    BYTE PTR [ebx-0x4c484847],0xb3
 101ba9e:	xchg   DWORD PTR [ecx],eax
	...
 101baa8:	add    BYTE PTR [eax-0x3c],ah
 101baab:	les    edi,FWORD PTR [ebp+0x74]
 101baae:	jl     0x101bb24
 101bab0:	je     0x101bb1f
 101bab2:	fs popa 
 101bab4:	pop    esp
 101bab5:	sub    al,0x28
 101bab7:	pop    ss
 101bab8:	adc    al,0x10
 101baba:	or     DWORD PTR ds:0x187b304,eax
	...
 101bac8:	add    BYTE PTR [ecx-0x3c],ah
 101bacb:	(bad)  
 101bacc:	(bad)  
 101bacd:	(bad)  
 101bace:	(bad)  
 101bacf:	(bad)  
 101bad0:	(bad)  
 101bad1:	(bad)  
 101bad2:	(bad)  
 101bad3:	(bad)  
 101bad4:	(bad)  
 101bad5:	(bad)  
 101bad6:	(bad)  
 101bad7:	rol    al,0xbb
 101bada:	mov    ebx,0x87b7b7b9
 101badf:	add    DWORD PTR [eax],eax
	...
 101bae9:	fs (bad) 
 101baeb:	(bad)  
 101baec:	(bad)  
 101baed:	(bad)  
 101baee:	(bad)  
 101baef:	(bad)  
 101baf0:	(bad)  
 101baf1:	(bad)  
 101baf2:	(bad)  
 101baf3:	(bad)  
 101baf4:	(bad)  
 101baf5:	(bad)  
 101baf6:	(bad)  
 101baf7:	(bad)  
 101baf8:	rol    al,0xbb
 101bafb:	mov    ebx,0x195b7b7
	...
 101bb08:	add    BYTE PTR [esi-0x3c],ah
 101bb0b:	les    edi,FWORD PTR [ebp+0x74]
 101bb0e:	jl     0x101bb84
 101bb10:	je     0x101bb82
 101bb12:	imul   esp,DWORD PTR [eax+eiz*2+0x2c],0x1017172b
 101bb1a:	or     DWORD PTR [edi],eax
 101bb1c:	add    eax,0x196b9
	...
 101bb29:	imul   eax,esp,0xc4c4c4c4
 101bb2f:	(bad)  
 101bb30:	(bad)  
 101bb31:	(bad)  
 101bb32:	(bad)  
 101bb33:	(bad)  
 101bb34:	(bad)  
 101bb35:	(bad)  
 101bb36:	(bad)  
 101bb37:	(bad)  
 101bb38:	(bad)  
 101bb39:	(bad)  
 101bb3a:	rol    al,0xbb
 101bb3d:	mov    ebx,0x196
 101bb42:	add    BYTE PTR [eax],al
 101bb44:	add    BYTE PTR [eax],al
 101bb46:	add    BYTE PTR [eax],al
 101bb48:	add    BYTE PTR [ecx-0x3c],ch
 101bb4b:	(bad)  
 101bb4c:	(bad)  
 101bb4d:	(bad)  
 101bb4e:	(bad)  
 101bb4f:	(bad)  
 101bb50:	(bad)  
 101bb51:	(bad)  
 101bb52:	(bad)  
 101bb53:	(bad)  
 101bb54:	(bad)  
 101bb55:	(bad)  
 101bb56:	(bad)  
 101bb57:	(bad)  
 101bb58:	(bad)  
 101bb59:	(bad)  
 101bb5a:	les    edi,FWORD PTR [edi+0x6d]
 101bb5d:	fs sub eax,0x1
 101bb63:	add    BYTE PTR [eax],al
 101bb65:	add    BYTE PTR [eax],al
 101bb67:	add    BYTE PTR [eax],al
 101bb69:	jo     0x101bb2f
 101bb6b:	les    edi,FWORD PTR [ebp+0x74]
 101bb6e:	jl     0x101bbe4
 101bb70:	jl     0x101bbe2
 101bb72:	ins    DWORD PTR es:[edi],dx
 101bb73:	imul   esp,DWORD PTR fs:[esp+eax*8-0x3c],0x12bc4c4
 101bb7c:	add    DWORD PTR [ecx],eax
 101bb7e:	add    DWORD PTR [ecx],eax
	...
 101bb88:	add    BYTE PTR [eax-0x3c],dh
 101bb8b:	(bad)  
 101bb8c:	(bad)  
 101bb8d:	(bad)  
 101bb8e:	(bad)  
 101bb8f:	(bad)  
 101bb90:	(bad)  
 101bb91:	(bad)  
 101bb92:	(bad)  
 101bb93:	(bad)  
 101bb94:	(bad)  
 101bb95:	(bad)  
 101bb96:	(bad)  
 101bb97:	(bad)  
 101bb98:	(bad)  
 101bb99:	les    ebp,FWORD PTR [edi+edx*4]
 101bb9c:	jge    0x101bc02
 101bb9e:	sub    al,BYTE PTR [eax]
	...
 101bba8:	add    BYTE PTR [eax-0x3c],dh
 101bbab:	(bad)  
 101bbac:	(bad)  
 101bbad:	(bad)  
 101bbae:	(bad)  
 101bbaf:	(bad)  
 101bbb0:	(bad)  
 101bbb1:	(bad)  
 101bbb2:	(bad)  
 101bbb3:	(bad)  
 101bbb4:	(bad)  
 101bbb5:	(bad)  
 101bbb6:	(bad)  
 101bbb7:	(bad)  
 101bbb8:	(bad)  
 101bbb9:	les    ebx,FWORD PTR [edx+ebp*4-0x69]
 101bbbd:	sub    al,BYTE PTR [eax]
	...
 101bbc7:	add    BYTE PTR [eax],al
 101bbc9:	jl     0x101bb8f
 101bbcb:	(bad)  
 101bbcc:	(bad)  
 101bbcd:	(bad)  
 101bbce:	(bad)  
 101bbcf:	(bad)  
 101bbd0:	(bad)  
 101bbd1:	(bad)  
 101bbd2:	(bad)  
 101bbd3:	(bad)  
 101bbd4:	(bad)  
 101bbd5:	(bad)  
 101bbd6:	(bad)  
 101bbd7:	(bad)  
 101bbd8:	(bad)  
 101bbd9:	les    ebx,FWORD PTR [eax+edi*4+0x2a]
	...
 101bbe9:	jge    0x101bbaf
 101bbeb:	(bad)  
 101bbec:	(bad)  
 101bbed:	(bad)  
 101bbee:	(bad)  
 101bbef:	(bad)  
 101bbf0:	(bad)  
 101bbf1:	(bad)
 101bbf5:	mov    ebx,0xb3b7b7b7
 101bbfa:	pop    esp
 101bbfb:	pusha  
	...
 101bc08:	add    BYTE PTR [ebp+0x7d],bh
 101bc0b:	jge    0x101bc89
 101bc0d:	jne    0x101bc7f
 101bc0f:	jo     0x101bc81
 101bc11:	ins    DWORD PTR es:[edi],dx
 101bc12:	imul   ebp,DWORD PTR [ecx+0x68],0x60616464
 101bc19:	pusha  
 101bc1a:	pusha  
	...
 101bc27:	add    bh,bh
 101bc29:	(bad)  
 101bc2a:	cld    
 101bc2b:	ud0    edi,edi
 101bc2e:	lock add eax,DWORD PTR [eax-0x7fff0000]
 101bc35:	add    BYTE PTR [eax],al
 101bc37:	add    DWORD PTR [eax-0x7fff0000],eax
 101bc3d:	add    BYTE PTR [eax],al
 101bc3f:	add    DWORD PTR [eax-0x7fff0000],eax
 101bc45:	add    BYTE PTR [eax],al
 101bc47:	add    DWORD PTR [eax-0x7fff0000],eax
 101bc4d:	add    BYTE PTR [eax],al
 101bc4f:	add    DWORD PTR [eax-0x7fff0000],eax
 101bc55:	add    BYTE PTR [eax],al
 101bc57:	add    eax,DWORD PTR [eax-0x7ff10000]
 101bc5d:	add    BYTE PTR [eax],al
 101bc5f:	aas    
 101bc60:	add    BYTE PTR [eax],0x0
 101bc63:	inc    DWORD PTR [eax-0x7f010000]
 101bc69:	add    BYTE PTR [eax],al
 101bc6b:	inc    DWORD PTR [eax-0x7f010000]
 101bc71:	add    BYTE PTR [eax],al
 101bc73:	inc    DWORD PTR [eax-0x7f010000]
 101bc79:	add    BYTE PTR [eax],al
 101bc7b:	inc    DWORD PTR [eax-0x7f010000]
 101bc81:	add    BYTE PTR [eax],al
 101bc83:	inc    DWORD PTR [eax-0x7f010000]
 101bc89:	add    BYTE PTR [eax],al
 101bc8b:	inc    DWORD PTR [eax-0x7f010000]
 101bc91:	add    BYTE PTR [eax],al
 101bc93:	inc    DWORD PTR [eax-0x7f00ff00]
 101bc99:	add    BYTE PTR [ebx],al
 101bc9b:	inc    DWORD PTR [eax-0x7f00f900]
 101bca1:	add    BYTE PTR [edi],cl
 101bca3:	inc    DWORD PTR [eax+0x28ff1f00]
 101bca9:	add    BYTE PTR [eax],al
 101bcab:	add    BYTE PTR [eax],dl
 101bcad:	add    BYTE PTR [eax],al
 101bcaf:	add    BYTE PTR [eax],ah
 101bcb1:	add    BYTE PTR [eax],al
 101bcb3:	add    BYTE PTR [ecx],al
 101bcb5:	add    BYTE PTR [eax],cl
 101bcb7:	add    BYTE PTR [eax],al
 101bcb9:	add    BYTE PTR [eax],al
 101bcbb:	add    BYTE PTR [eax],al
 101bcbd:	add    DWORD PTR [eax],eax
	...
 101bcc7:	add    BYTE PTR [eax],al
 101bcc9:	add    DWORD PTR [eax],eax
 101bccb:	add    BYTE PTR [eax],al
 101bccd:	add    DWORD PTR [eax],eax
 101bccf:	add    BYTE PTR [eax],al
 101bcd1:	add    BYTE PTR [eax],al
 101bcd3:	add    BYTE PTR [eax],al
 101bcd5:	add    bl,BYTE PTR [ecx]
 101bcd7:	add    BYTE PTR [eax],al
 101bcd9:	add    eax,0x17000025
 101bcde:	xor    eax,0x371b0300
 101bce3:	add    BYTE PTR [ebx],al
 101bce5:	and    eax,0x4963003e
 101bcea:	xor    eax,0x3d516c00
 101bcef:	add    BYTE PTR [eax],al
 101bcf1:	sub    al,0x43
 101bcf3:	add    BYTE PTR [ebx],al
 101bcf5:	xor    al,0x4f
 101bcf7:	add    BYTE PTR ds:0x6458,cl
 101bcfd:	dec    edx
 101bcfe:	jnp    0x101bd00
 101bd00:	adc    ebp,DWORD PTR [eax+0x78]
 101bd03:	add    BYTE PTR [edx+edx*2+0x54],dl
 101bd07:	add    BYTE PTR [edx+0x4f],ah
 101bd0a:	inc    ecx
 101bd0b:	add    BYTE PTR [ecx+0x57],dh
 101bd0e:	inc    esp
 101bd0f:	add    BYTE PTR [esi+0x5c],dh
 101bd12:	dec    ecx
 101bd13:	add    BYTE PTR [edx+0x61],bh
 101bd16:	dec    esi
 101bd17:	add    BYTE PTR [ebp+0x6a],dl
 101bd1a:	jp     0x101bd1c
 101bd1c:	outs   dx,DWORD PTR ds:[esi]
 101bd1d:	js     0x101bd9c
 101bd1f:	add    BYTE PTR [eax+0x66005567],al
 101bd25:	cdq    
 101bd26:	xor    eax,DWORD PTR [eax]
 101bd28:	jo     0x101bcc9
 101bd2a:	inc    eax
 101bd2b:	add    BYTE PTR [eax-0x60],dh
 101bd2e:	inc    eax
 101bd2f:	add    BYTE PTR [edx-0x5c],bh
 101bd32:	dec    ebx
 101bd33:	add    BYTE PTR [edx-0x5b],bh
 101bd36:	dec    esp
 101bd37:	add    BYTE PTR [ebx-0x68ffa957],al
 101bd3d:	sub    BYTE PTR [edi+0x0],0x9d
 101bd41:	xchg   BYTE PTR [esi+0x0],dh
 101bd44:	mov    ds:0x8d007c8c,al
 101bd49:	scas   eax,DWORD PTR es:[edi]
 101bd4a:	bound  eax,QWORD PTR [eax]
 101bd4c:	lea    esi,[ecx-0x4c68ff9b]
 101bd52:	ins    BYTE PTR es:[edi],dx
 101bd53:	add    BYTE PTR [eax+0x110077b8],ah
 101bd59:	js     0x101bce7
 101bd5b:	add    BYTE PTR [eax],al
 101bd5d:	imul   ebx,DWORD PTR [ecx-0x61920000],0x0
 101bd64:	sub    BYTE PTR [edi-0x7d],dh
 101bd67:	add    BYTE PTR ds:0x8a7e,dh
 101bd6d:	jne    0x101bd13
 101bd6f:	add    BYTE PTR [eax],al
 101bd71:	jp     0x101bd1c
 101bd73:	add    BYTE PTR [eax],al
 101bd75:	test   BYTE PTR [eax-0x40700000],dh
 101bd7b:	add    BYTE PTR [edx-0x6f],al
 101bd7e:	fwait
 101bd7f:	add    BYTE PTR [esi+eax*4-0x6c],ch
 101bd83:	add    BYTE PTR [ebp-0x6f],dl
 101bd86:	scas   al,BYTE PTR es:[edi]
 101bd87:	add    BYTE PTR [eax],al
 101bd89:	sahf   
 101bd8a:	int3   
 101bd8b:	add    BYTE PTR [eax],al
 101bd8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101bd8e:	mov    DWORD PTR [eax],0xd4ab00
 101bd94:	add    BYTE PTR [ecx+ebp*8-0x3e5b9800],bh
 101bd9b:	add    BYTE PTR [eax],al
 101bd9d:	(bad)  
 101bd9e:	jecxz  0x101bda0
 101bda0:	add    bl,bl
 101bda2:	clc    
 101bda3:	add    BYTE PTR [eax],al
 101bda5:	loopne 0x101bda6
 101bda7:	add    BYTE PTR [eax],al
 101bda9:	in     al,dx
 101bdaa:	inc    BYTE PTR [eax]
 101bdac:	sbb    cl,ch
 101bdae:	stc    
 101bdaf:	add    BYTE PTR [eax],al
 101bdb1:	clc    
 101bdb2:	inc    DWORD PTR [eax]
 101bdb4:	add    eax,0xfff8
 101bdb9:	(bad)  
 101bdba:	inc    DWORD PTR [eax]
 101bdbc:	and    esp,edi
 101bdbe:	out    dx,eax
 101bdbf:	add    BYTE PTR [ebx],ch
 101bdc1:	(bad)  
 101bdc2:	inc    DWORD PTR [eax]
 101bdc4:	xor    eax,0x4400ffff
 101bdc9:	loopne 0x101bdb5
 101bdcb:	add    BYTE PTR [edi-0x1],cl
 101bdce:	inc    DWORD PTR [eax]
 101bdd0:	pop    esp
 101bdd1:	(bad)  
 101bdd2:	inc    DWORD PTR [eax]
 101bdd4:	out    0xf1,ax
 101bdd7:	add    BYTE PTR [esi-0x1],ah
 101bdda:	inc    DWORD PTR [eax]
 101bddc:	imul   edi,edi,0xffffffff
 101bddf:	add    BYTE PTR [eax-0x51ff7f6f],ch
 101bde5:	cdq    
 101bde6:	mov    al,BYTE PTR [eax]
 101bde8:	mov    bl,0x9f
 101bdea:	nop
 101bdeb:	add    BYTE PTR [eax-0x42ff6a5c],bh
 101bdf1:	test   al,0x9b
 101bdf3:	add    dl,al
 101bdf5:	scas   al,BYTE PTR es:[edi]
 101bdf6:	mov    al,ds:0x8fc6ac00
 101bdfb:	add    BYTE PTR [ebp-0x41ff6f39],ch
 101be01:	(bad)  
 101be02:	call   0xbf00:0x9dcabe00
 101be09:	int    0xa1
 101be0b:	add    dl,al
 101be0d:	(bad)  
 101be0e:	lods   eax,DWORD PTR ds:[esi]
 101be0f:	add    BYTE PTR [ecx-0x2fff1b31],ah
 101be15:	(bad)  
 101be16:	fadd   DWORD PTR [eax]
 101be18:	out    dx,eax
 101be19:	rol    esi,cl
 101be1b:	add    ah,dh
 101be1d:	fxch   st(5)
 101be1f:	add    bh,ah
 101be21:	(bad)  
 101be23:	add    ch,dh
 101be25:	(bad)  
 101be27:	add    ch,dh
 101be29:	(bad)  
 101be2b:	add    ah,ah
 101be2d:	loopne 0x101be0d
 101be2f:	add    dh,dh
 101be31:	loope  0x101be0a
 101be33:	add    dh,dh
 101be35:	loop   0x101be10
 101be37:	add    bh,dh
 101be39:	in     al,0xdb
 101be3b:	add    bh,dh
 101be3d:	out    0xde,al
 101be3f:	add    al,bh
 101be41:	out    0xde,al
 101be43:	add    al,bh
 101be45:	call   0xe9f9bf29
 101be4a:	loope  0x101be4c
 101be4c:	clc    
 101be4d:	jmp    0xe6:0xecf900e4
 101be54:	stc    
 101be55:	out    dx,al
 101be56:	call   0xecf2b85b
 101be5b:	add    bl,bh
 101be5d:	icebp  
 101be5e:	in     eax,dx
 101be5f:	add    ah,bh
 101be61:	repz out dx,eax
 101be63:	add    bl,bh
 101be65:	hlt    
 101be66:	lock add ah,bh
 101be69:	cmc    
 101be6a:	icebp  
 101be6b:	add    ah,bh
 101be6d:	div    ah
 101be6f:	add    ah,bh
 101be71:	clc    
 101be72:	test   BYTE PTR [eax],0xf2
 101be75:	(bad)  
 101be76:	inc    DWORD PTR [eax]
 101be78:	(bad)  
 101be79:	sti    
 101be7a:	stc    
 101be7b:	add    dh,bh
 101be7d:	cld    
 101be7e:	sti    
 101be7f:	add    dh,bh
 101be81:	(bad)  
 101be82:	inc    BYTE PTR [eax]
	...
 101c0d0:	add    BYTE PTR [edi],cl
 101c0d2:	push   es
 101c0d3:	push   es
 101c0d4:	push   es
 101c0d5:	push   es
 101c0d6:	push   es
 101c0d7:	push   es
 101c0d8:	push   es
 101c0d9:	push   cs
 101c0da:	and    cl,BYTE PTR [eax]
 101c0dc:	add    BYTE PTR ds:0x10000000,cl
 101c0e2:	pop    edx
 101c0e3:	pop    edx
 101c0e4:	push   esi
 101c0e5:	push   esi
 101c0e6:	push   ebx
 101c0e7:	push   ebx
 101c0e8:	sub    eax,0x28353422
 101c0ed:	add    al,BYTE PTR [eax]
 101c0ef:	adc    eax,DWORD PTR [eax]
 101c0f1:	adc    DWORD PTR [edx+0x44],ebx
 101c0f4:	inc    esp
 101c0f5:	inc    esp
 101c0f6:	inc    esp
 101c0f7:	inc    esp
 101c0f8:	or     bh,BYTE PTR [edx]
 101c0fa:	cmp    dh,BYTE PTR [ecx+ebp*1]
 101c0fd:	daa    
 101c0fe:	or     eax,DWORD PTR [ecx]
 101c100:	add    BYTE PTR [edi+ebx*2],dl
 101c103:	pop    ebp
 101c104:	pop    edx
 101c105:	pop    edx
 101c106:	pop    eax
 101c107:	push   esi
 101c108:	and    eax,0x2e36393c
 101c10d:	sub    DWORD PTR [esp+eax*1],esp
 101c110:	add    BYTE PTR [edi+ebx*2+0x5f],bl
 101c114:	pop    edi
 101c115:	pop    esp
 101c116:	pop    edx
 101c117:	pop    edx
 101c118:	es aas 
 101c11a:	cmp    eax,0x2a303136
 101c11f:	add    eax,0x171f1700
 101c124:	pop    edi
 101c125:	sbb    DWORD PTR [edx+ebx*1+0x2b],ebx
 101c129:	inc    ebx
 101c12a:	cmp    eax,DWORD PTR [ecx+0x2f]
 101c12d:	and    al,0x31
 101c12f:	or     DWORD PTR [eax],eax
 101c131:	push   ss
 101c132:	arpl   WORD PTR [ebx+0x61],sp
 101c135:	sbb    bl,BYTE PTR [esi]
 101c137:	sbb    cl,BYTE PTR [esi+edi*1]
 101c13a:	imul   ebp,DWORD PTR [ecx+0x40],0x32337
 101c141:	push   ss
 101c142:	data16 arpl WORD PTR [ebx+0x4e],sp
 101c146:	sbb    DWORD PTR [ebp+0x2c],ecx
 101c149:	xor    dl,BYTE PTR [eax+0x6c]
 101c14c:	inc    edx
 101c14d:	xor    esi,DWORD PTR [edx]
 101c14f:	adc    al,BYTE PTR [eax]
 101c151:	and    DWORD PTR [esi+0x68],esp
 101c154:	data16 arpl WORD PTR [ecx],bx
 101c157:	popa   
 101c158:	pop    edi
 101c159:	push   ecx
 101c15a:	xor    ah,BYTE PTR [ebx+eiz*1]
 101c15d:	xor    al,BYTE PTR [eax]
 101c15f:	add    BYTE PTR [eax],al
 101c161:	pop    esp
 101c162:	ins    BYTE PTR es:[edi],dx
 101c163:	data16 data16 data16 arpl WORD PTR [ebx+0x61],sp
 101c169:	pop    edi
 101c16a:	push   edi
 101c16b:	pop    esp
 101c16c:	push   edx
 101c16d:	add    BYTE PTR [eax],al
 101c16f:	add    BYTE PTR [eax],al
 101c171:	push   ss
 101c172:	dec    edx
 101c173:	push   ss
 101c174:	ins    BYTE PTR es:[edi],dx
 101c175:	pop    ds
 101c176:	popw   ds
 101c178:	arpl   WORD PTR [esp+eax*2+0x5f],ax
 101c17c:	push   edx
 101c17d:	add    BYTE PTR [eax],al
 101c17f:	add    BYTE PTR [eax],al
 101c181:	dec    esp
 101c182:	push   ss
 101c183:	ins    BYTE PTR es:[edi],dx
 101c184:	push   0x661f151f
 101c189:	arpl   WORD PTR [ebx+0x61],sp
 101c18c:	push   es
 101c18d:	add    BYTE PTR [eax],al
 101c18f:	add    BYTE PTR [eax],al
 101c191:	and    BYTE PTR [esi],dl
 101c193:	ins    BYTE PTR es:[edi],dx
 101c194:	ins    BYTE PTR es:[edi],dx
 101c195:	pop    ss
 101c196:	dec    edx
 101c197:	push   ss
 101c198:	sbb    ax,0x707
 101c19c:	push   es
 101c19d:	add    BYTE PTR [eax],al
 101c19f:	add    BYTE PTR [eax],al
 101c1a1:	push   ss
 101c1a2:	dec    edi
 101c1a3:	push   ss
 101c1a4:	ins    BYTE PTR es:[edi],dx
 101c1a5:	sbb    DWORD PTR [ecx+ebx*1+0x6c],ebp
 101c1a9:	sbb    eax,0x1d54
 101c1ae:	add    BYTE PTR [eax],al
 101c1b0:	add    BYTE PTR [esp+ebp*2+0x6c],bl
 101c1b4:	ins    BYTE PTR es:[edi],dx
 101c1b5:	ins    BYTE PTR es:[edi],dx
 101c1b6:	ins    BYTE PTR es:[edi],dx
 101c1b7:	ins    BYTE PTR es:[edi],dx
 101c1b8:	sbb    ax,0x1d
 101c1bc:	add    BYTE PTR [eax],al
 101c1be:	add    BYTE PTR [eax],al
 101c1c0:	add    BYTE PTR [ecx+0x48],cl
 101c1c3:	inc    edi
 101c1c4:	inc    esi
 101c1c5:	inc    ebp
 101c1c6:	inc    esp
 101c1c7:	sbb    eax,0x1b1c
 101c1cc:	add    BYTE PTR [eax],al
 101c1ce:	add    BYTE PTR [eax],al
 101c1d0:	add    BYTE PTR [ebx],0x0
 101c1d3:	add    BYTE PTR [eax-0x80000000],al
 101c1d9:	add    BYTE PTR [eax],al
 101c1db:	add    BYTE PTR [eax-0x80000000],al
 101c1e1:	add    BYTE PTR [eax],al
 101c1e3:	add    BYTE PTR [eax-0x80000000],al
 101c1e9:	add    BYTE PTR [eax],al
 101c1eb:	add    BYTE PTR [eax-0x80000000],al
 101c1f1:	add    eax,DWORD PTR [eax]
 101c1f3:	add    BYTE PTR [eax-0x7ffffff9],al
 101c1f9:	pop    es
 101c1fa:	add    BYTE PTR [eax],al
 101c1fc:	add    BYTE PTR [edi],0x0
 101c1ff:	add    BYTE PTR [eax-0x7ffffff9],al
 101c205:	sldt   WORD PTR [eax]
 101c208:	sbb    BYTE PTR [edi],0x0
 101c20b:	add    BYTE PTR [eax+0x2800003f],al
 101c211:	add    BYTE PTR [eax],al
 101c213:	add    BYTE PTR [eax],ah
 101c215:	add    BYTE PTR [eax],al
 101c217:	add    BYTE PTR [eax+0x0],al
 101c21a:	add    BYTE PTR [eax],al
 101c21c:	add    DWORD PTR [eax],eax
 101c21e:	and    BYTE PTR [eax],al
 101c220:	add    BYTE PTR [eax],al
 101c222:	add    BYTE PTR [eax],al
 101c224:	adc    BYTE PTR [eax],0x0
	...
 101c28f:	add    bh,bl
 101c291:	loop   0x101c279
 101c293:	(bad)  
 101c294:	ds push esp
 101c296:	(bad)  
 101c297:	(bad)  
 101c298:	cmp    BYTE PTR [edi+0x52],al
 101c29b:	inc    DWORD PTR [eax]
 101c29d:	add    BYTE PTR [eax],al
 101c29f:	inc    DWORD PTR [eax]
 101c2a1:	add    BYTE PTR [eax],al
 101c2a3:	(bad)  
 101c2a4:	(bad)  
 101c2a6:	out    0xff,al
	...
 101c308:	(bad)  
 101c30a:	out    0xff,al
 101c30c:	ds push esp
 101c30e:	(bad)  
 101c30f:	(bad)  
 101c310:	ds push esp
 101c312:	(bad)  
 101c313:	call   DWORD PTR [edx+edx*8]
 101c316:	out    0xff,al
 101c318:	or     ecx,ebp
 101c31a:	jecxz  0x101c31b
 101c31c:	add    eax,0x5ffa88a
 101c321:	sbb    DWORD PTR [ebp+0xff],0xff
 101c32b:	(bad)  
 101c32c:	(bad)  
 101c32e:	out    0xff,al
	...
 101c33c:	sub    DWORD PTR [eax+0x56],0x354963ff
 101c343:	jmp    DWORD PTR [ebx+0x49]
 101c346:	xor    eax,0x354963ff
 101c34b:	jmp    DWORD PTR [ebx+0x49]
 101c34e:	xor    eax,0x354963ff
 101c353:	jmp    DWORD PTR [ebx+0x49]
 101c356:	xor    eax,0x354963ff
 101c35b:	jmp    DWORD PTR [ebx+0x49]
 101c35e:	xor    eax,0x354963ff
 101c363:	jmp    DWORD PTR [ebx+0x49]
 101c366:	xor    eax,0x354963ff
 101c36b:	jmp    DWORD PTR [ebx+0x49]
 101c36e:	xor    eax,0x354963ff
 101c373:	jmp    DWORD PTR [ebx+0x49]
 101c376:	xor    eax,0x354963ff
 101c37b:	jmp    DWORD PTR [ebx+0x49]
 101c37e:	xor    eax,0x354963ff
 101c383:	jmp    FWORD PTR [eax+0x6d]
 101c386:	jbe    0x101c387
 101c388:	ds push esp
 101c38a:	(bad)  
 101c38b:	(bad)  
 101c38c:	cmp    al,0xe2
 101c38e:	lock jmp FWORD PTR [esi]
 101c391:	fsub   st(4),st
 101c393:	jmp    DWORD PTR [eax]
 101c395:	(bad)  
 101c396:	jmp    0x4ff:0xe6d215ff
 101c39d:	xchg   edi,eax
 101c39e:	mov    bl,0xff
 101c3a0:	add    al,0x8c
 101c3a2:	test   al,0xff
 101c3a4:	push   es
 101c3a5:	sbb    BYTE PTR [ebp-0x6c88f901],0xff
 101c3ac:	add    BYTE PTR [eax],al
 101c3ae:	add    bh,bh
 101c3b0:	pop    edi
 101c3b1:	jae    0x101c42e
 101c3b3:	inc    DWORD PTR [eax]
 101c3b5:	add    BYTE PTR [eax],al
 101c3b7:	add    BYTE PTR [eax],al
 101c3b9:	add    BYTE PTR [eax],al
 101c3bb:	add    BYTE PTR [ebx+ebp*2-0x240b00a7],al
 101c3c2:	into   
 101c3c3:	(bad)  
 101c3c4:	faddp  st(0),st
 101c3c6:	mov    cl,0xff
 101c3c8:	fdivr  QWORD PTR [esi-0x43240052]
 101c3ce:	lods   al,BYTE PTR ds:[esi]
 101c3cf:	(bad)  
 101c3d0:	fstp   TBYTE PTR [ebx-0x46260056]
 101c3d6:	test   al,0xff
 101c3d8:	fdiv   DWORD PTR [edi-0x4a27005b]
 101c3de:	mov    ds:0xa1b3d7ff,eax
 101c3e3:	call   esi
 101c3e5:	mov    cl,0x9f
 101c3e7:	call   esi
 101c3e9:	mov    al,0x9c
 101c3eb:	call   esp
 101c3ed:	lods   eax,DWORD PTR ds:[esi]
 101c3ee:	call   0xd2ff:0x97abd4ff
 101c3f5:	stos   BYTE PTR es:[edi],al
 101c3f6:	xchg   esi,eax
 101c3f7:	call   edx
 101c3f9:	test   al,0x93
 101c3fb:	call   eax
 101c3fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101c3fe:	xchg   ecx,eax
 101c3ff:	call   eax
 101c401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101c402:	(bad)  
 101c403:	jmp    FWORD PTR [ecx+0x72]
 101c406:	js     0x101c407
 101c408:	pop    ebx
 101c409:	out    dx,al
 101c40a:	idiv   bh
 101c40c:	dec    ebx
 101c40d:	call   0xe33ec404
 101c412:	lock jmp FWORD PTR [esi]
 101c415:	fsub   st(4),st
 101c417:	jmp    DWORD PTR [eax]
 101c419:	xlat   BYTE PTR ds:[ebx]
 101c41a:	jmp    0x4ff:0xbea103ff
 101c421:	xchg   edi,eax
 101c422:	mov    dl,0xff
 101c424:	add    al,0x8a
 101c426:	test   al,0xff
 101c428:	push   es
 101c429:	sbb    BYTE PTR [ebp-0x6b88f901],0xff
 101c430:	cmp    BYTE PTR [edi+0x52],al
 101c433:	inc    DWORD PTR [eax]
 101c435:	add    BYTE PTR [eax],al
 101c437:	add    BYTE PTR [eax],al
 101c439:	add    BYTE PTR [eax],al
 101c43b:	add    BYTE PTR [esi-0xb00a492],al
 101c441:	(bad)  
 101c443:	(bad)  
 101c444:	cli    
 101c445:	out    dx,al
 101c446:	jmp    0xe7eebe4a
 101c44b:	(bad)  
 101c44c:	stc    
 101c44d:	jmp    0xffdf:0xe7f7ffe3
 101c454:	clc    
 101c455:	in     eax,0xdc
 101c457:	push   edi
 101c459:	jecxz  0x101c435
 101c45b:	push   esi
 101c45d:	loopne 0x101c436
 101c45f:	push   ebp
 101c461:	(bad)  
 101c463:	push   esp
 101c465:	fst    st(1)
 101c467:	push   esp
 101c469:	fcmovne st,st(6)
 101c46b:	push   ebx
 101c46d:	fmul   st,st(3)
 101c46f:	push   ebx
 101c471:	(bad)  
 101c472:	enter  0xf2ff,0xd3
 101c476:	(bad)  
 101c479:	rol    edx,1
 101c47b:	push   ecx
 101c47d:	iret   
 101c47e:	mov    edi,0xbccdf0ff
 101c483:	jmp    FWORD PTR [esi+0x74]
 101c486:	jge    0x101c487
 101c488:	push   0xfffffff3
 101c48a:	stc    
 101c48b:	call   FWORD PTR [ebx-0x12]
 101c48e:	idiv   edi
 101c490:	dec    esp
 101c491:	call   0xe33ec488
 101c496:	lock jmp FWORD PTR [esi]
 101c499:	fsub   st(4),st
 101c49b:	inc    DWORD PTR [edx]
 101c49d:	lods   al,BYTE PTR ds:[esi]
 101c49e:	leave  
 101c49f:	inc    DWORD PTR [ebx]
 101c4a1:	mov    ds:0x9604ffbe,al
 101c4a6:	mov    dl,0xff
 101c4a8:	add    al,0x8a
 101c4aa:	test   al,0xff
 101c4ac:	push   es
 101c4ad:	sbb    BYTE PTR [ebp+0x524738ff],0xff
	...
 101c4bc:	mov    DWORD PTR [eax+0x5e],esi
 101c4bf:	push   ebp
 101c4c1:	(bad)  
 101c4c3:	(bad)  
 101c4c4:	cli    
 101c4c5:	lock in al,dx
 101c4c7:	(bad)  
 101c4c8:	stc    
 101c4c9:	out    dx,al
 101c4ca:	call   0xe7edbece
 101c4cf:	(bad)  
 101c4d0:	stc    
 101c4d1:	jmp    0xe8fac4b8
 101c4d6:	(bad)  
 101c4d8:	clc    
 101c4d9:	in     eax,0xdc
 101c4db:	push   esi
 101c4dd:	jecxz  0x101c4b9
 101c4df:	push   ebp
 101c4e1:	loope  0x101c4b9
 101c4e3:	push   ebp
 101c4e5:	(bad)  
 101c4e7:	push   ebp
 101c4e9:	fst    st(1)
 101c4eb:	push   esp
 101c4ed:	fcmove st,st(5)
 101c4ef:	push   ebx
 101c4f1:	fmul   st,st(3)
 101c4f3:	push   ebx
 101c4f5:	aad    0xc8
 101c4f7:	push   edx
 101c4f9:	rol    ebp,cl
 101c4fb:	push   ecx
 101c4fd:	rol    ecx,1
 101c4ff:	push   eax
 101c501:	iret   
 101c502:	mov    esi,0x81766dff
 101c507:	(bad)  
 101c508:	js     0x101c503
 101c50a:	sti    
 101c50b:	jmp    FWORD PTR [ecx-0xd]
 101c50e:	stc    
 101c50f:	call   FWORD PTR [ebx-0x12]
 101c512:	idiv   bh
 101c514:	dec    esp
 101c515:	call   0xe33ec50d
 101c51a:	lock inc DWORD PTR [ecx]
 101c51d:	mov    bh,0xd2
 101c51f:	inc    DWORD PTR [edx]
 101c521:	lods   eax,DWORD PTR ds:[esi]
 101c522:	enter  0x2ff,0xa2
 101c526:	mov    esi,0xb29603ff
 101c52b:	inc    DWORD PTR [esp+ecx*4]
 101c52e:	test   al,0xff
 101c530:	cmp    BYTE PTR [edi+0x52],al
 101c533:	inc    DWORD PTR [eax]
 101c535:	add    BYTE PTR [eax],al
 101c537:	add    BYTE PTR [eax],al
 101c539:	add    BYTE PTR [eax],al
 101c53b:	add    BYTE PTR [ebx-0x9009e8d],cl
 101c541:	loopne 0x101c519
 101c543:	(bad)  
 101c544:	sti    
 101c545:	repnz out dx,al
 101c547:	(bad)  
 101c548:	cli    
 101c549:	icebp  
 101c54a:	jmp    0x101c54b
 101c54c:	stc    
 101c54d:	out    dx,al
 101c54e:	jmp    0xe6eebf52
 101c553:	(bad)  
 101c554:	stc    
 101c555:	jmp    0xffdf:0xe7f8ffe2
 101c55c:	clc    
 101c55d:	in     eax,0xdc
 101c55f:	push   esi
 101c561:	jecxz  0x101c53c
 101c563:	push   esi
 101c565:	loope  0x101c53e
 101c567:	push   ebp
 101c569:	(bad)  
 101c56b:	push   ebp
 101c56d:	fst    st(1)
 101c56f:	push   esp
 101c571:	fcmove st,st(5)
 101c573:	push   esp
 101c575:	fmul   st,st(2)
 101c577:	push   ebx
 101c579:	aad    0xc8
 101c57b:	push   edx
 101c57d:	rol    esp,cl
 101c57f:	push   ecx
 101c581:	rol    cl,1
 101c583:	push   DWORD PTR [ebx+0x7b]
 101c586:	test   edi,edi
 101c588:	cmp    esp,0xfffffffe
 101c58b:	push   DWORD PTR [edi-0x7]
 101c58e:	cld    
 101c58f:	jmp    FWORD PTR [ecx-0xd]
 101c592:	stc    
 101c593:	call   FWORD PTR [ebp+ebp*8-0x9]
 101c597:	dec    DWORD PTR [eax+ebp*8-0xe]
 101c59b:	inc    DWORD PTR [eax]
 101c59d:	rcr    dl,0xff
 101c5a0:	add    DWORD PTR [eax-0x52fd002e],edi
 101c5a6:	enter  0x3ff,0xa2
 101c5aa:	mov    esi,0xb39703ff
 101c5af:	(bad)  
 101c5b0:	cmp    BYTE PTR [edi+0x52],al
 101c5b3:	inc    DWORD PTR [eax]
 101c5b5:	add    BYTE PTR [eax],al
 101c5b7:	add    BYTE PTR [eax],al
 101c5b9:	add    BYTE PTR [eax],al
 101c5bb:	add    BYTE PTR [ebp-0x9009b8a],cl
 101c5c1:	loop   0x101c59b
 101c5c3:	(bad)  
 101c5c4:	cld    
 101c5c5:	hlt    
 101c5c6:	repnz inc ecx
 101c5c9:	stos   DWORD PTR es:[edi],eax
 101c5ca:	pushf  
 101c5cb:	inc    ecx
 101c5cd:	stos   DWORD PTR es:[edi],eax
 101c5ce:	pushf  
 101c5cf:	(bad)  
 101c5d0:	mov    esi,0xb9ff98a6
 101c5d5:	mov    ds:0x9cb4ff93,al
 101c5da:	mov    ?,edi
 101c5dc:	lods   eax,DWORD PTR ds:[esi]
 101c5dd:	xchg   edi,eax
 101c5de:	xchg   edi,edi
 101c5e0:	test   al,0x90
 101c5e2:	cmp    edi,0xff7989a1
 101c5e8:	mov    eax,ds:0x99ff7888
 101c5ed:	xor    DWORD PTR [ecx-0x1],0xff697991
 101c5f4:	mov    dh,BYTE PTR [edx+0x61]
 101c5f7:	inc    DWORD PTR [ebx+0x7cff596a]
 101c5fd:	arpl   WORD PTR [ecx-0x1],dx
 101c600:	jne    0x101c65e
 101c602:	dec    edx
 101c603:	push   DWORD PTR [ebx-0x7e]
 101c606:	mov    ?,edi
 101c608:	mov    edi,?
 101c60a:	(bad)  
 101c60b:	dec    DWORD PTR [edi+edi*8-0x37b0001]
 101c612:	(bad)  
 101c613:	push   DWORD PTR [edi-0x8]
 101c616:	cld    
 101c617:	call   FWORD PTR [eax-0x3b]
 101c61a:	into   
 101c61b:	inc    DWORD PTR [edx+ecx*4]
 101c61e:	test   al,0xff
 101c620:	add    dh,al
 101c622:	loopne 0x101c623
 101c624:	add    al,al
 101c626:	(bad)  
 101c628:	add    DWORD PTR [eax-0x52fd002e],edi
 101c62e:	enter  0x38ff,0x47
 101c632:	push   edx
 101c633:	inc    DWORD PTR [eax]
 101c635:	add    BYTE PTR [eax],al
 101c637:	add    BYTE PTR [eax],al
 101c639:	add    BYTE PTR [eax],al
 101c63b:	add    BYTE PTR [edi-0x8009888],cl
 101c641:	in     al,0xdb
 101c643:	(bad)  
 101c644:	cld    
 101c645:	div    ah
 101c647:	(bad)  
 101c648:	cld    
 101c649:	hlt    
 101c64a:	icebp  
 101c64b:	(bad)  
 101c64c:	sti    
 101c64d:	repz out dx,al
 101c64f:	(bad)  
 101c650:	cli    
 101c651:	lock jmp 0x101c653
 101c654:	cli    
 101c655:	out    dx,al
 101c656:	call   0xe6edc05a
 101c65b:	(bad)  
 101c65c:	stc    
 101c65d:	jmp    0xe8fac643
 101c662:	(bad)  
 101c664:	mul    esp
 101c666:	fdiv   st(7),st
 101c668:	mul    dl
 101c66a:	fcos   
 101c66c:	mul    al
 101c66e:	(bad)  
 101c66f:	push   ebp
 101c671:	(bad)  
 101c673:	push   esp
 101c675:	(bad)  
 101c677:	push   esp
 101c679:	fcmove st,st(6)
 101c67b:	push   ebx
 101c67d:	xlat   BYTE PTR ds:[ebx]
 101c67e:	retf   0xf3ff
 101c681:	aad    0xc7
 101c683:	(bad)  
 101c684:	jp     0x101c616
 101c686:	cwde   
 101c687:	dec    DWORD PTR [edi+edi*8-0x730001]
 101c68e:	(bad)  
 101c68f:	call   FWORD PTR [eax-0x3b]
 101c692:	into   
 101c693:	call   FWORD PTR [eax-0x3b]
 101c696:	into   
 101c697:	jmp    ecx
 101c699:	std    
 101c69a:	std    
 101c69b:	dec    DWORD PTR [eax+0x4fff8f3]
 101c6a1:	mov    ch,BYTE PTR [eax-0x5775fb01]
 101c6a7:	inc    DWORD PTR [ecx]
 101c6a9:	rcr    bl,0xff
 101c6ac:	add    DWORD PTR [edi+0x4738ffd2],esi
 101c6b2:	push   edx
 101c6b3:	inc    DWORD PTR [eax]
 101c6b5:	add    BYTE PTR [eax],al
 101c6b7:	add    BYTE PTR [eax],al
 101c6b9:	add    BYTE PTR [eax],al
 101c6bb:	add    BYTE PTR [edx-0x7009685],dl
 101c6c1:	out    0xde,al
 101c6c3:	(bad)  
 101c6c4:	std    
 101c6c5:	stc    
 101c6c6:	idiv   bh
 101c6c8:	cld    
 101c6c9:	div    ebx
 101c6cb:	(bad)  
 101c6cc:	sti    
 101c6cd:	hlt    
 101c6ce:	icebp  
 101c6cf:	(bad)  
 101c6d0:	sti    
 101c6d1:	repnz out dx,al
 101c6d3:	(bad)  
 101c6d4:	cli    
 101c6d5:	lock jmp 0x101c6d7
 101c6d8:	cli    
 101c6d9:	out    dx,al
 101c6da:	call   0xe5eec0de
 101c6df:	(bad)  
 101c6e0:	clc    
 101c6e1:	jmp    0xe8f9c6c8
 101c6e6:	fdivp  st(7),st
 101c6e8:	mul    esp
 101c6ea:	(bad)  
 101c6ec:	mul    bl
 101c6ee:	fcos   
 101c6f0:	cmc    
 101c6f1:	loope  0x101c6c9
 101c6f3:	push   ebp
 101c6f5:	(bad)  
 101c6f7:	push   ebp
 101c6f9:	(bad)  
 101c6fb:	push   esp
 101c6fd:	fcmove st,st(5)
 101c6ff:	push   ebx
 101c701:	xlat   BYTE PTR ds:[ebx]
 101c702:	retf   0x75ff
 101c705:	mov    dl,BYTE PTR [edx-0x313aa701]
 101c70b:	call   FWORD PTR [eax-0x3b]
 101c70e:	into   
 101c70f:	(bad)  
 101c710:	(bad)  
 101c711:	(bad)  
 101c712:	(bad)  
 101c713:	push   edx
 101c715:	(bad)  
 101c716:	(bad)  
 101c717:	jmp    ecx
 101c719:	std    
 101c71a:	(bad)  
 101c71b:	dec    DWORD PTR [eax+0x75fff8f3]
 101c721:	icebp  
 101c722:	clc    
 101c723:	jmp    DWORD PTR [esi-0x10]
 101c726:	idiv   edi
 101c728:	add    al,0x8a
 101c72a:	test   al,0xff
 101c72c:	add    al,0x8a
 101c72e:	test   al,0xff
 101c730:	cmp    BYTE PTR [edi+0x52],al
 101c733:	inc    DWORD PTR [eax]
 101c735:	add    BYTE PTR [eax],al
 101c737:	add    BYTE PTR [eax],al
 101c739:	add    BYTE PTR [eax],al
 101c73b:	add    BYTE PTR [ebp-0x7009383],dl
 101c741:	call   0xfc00c727
 101c746:	stc    
 101c747:	inc    ecx
 101c749:	stos   DWORD PTR es:[edi],eax
 101c74a:	pushf  
 101c74b:	inc    ecx
 101c74d:	stos   DWORD PTR es:[edi],eax
 101c74e:	pushf  
 101c74f:	(bad)  
 101c750:	mov    edi,0xbaff9aa9
 101c755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 101c756:	xchg   esi,eax
 101c757:	push   DWORD PTR [edi-0x4e006f60]
 101c75d:	cdq    
 101c75e:	mov    bh,bh
 101c760:	stos   DWORD PTR es:[edi],eax
 101c761:	xchg   ebx,eax
 101c762:	test   bh,bh
 101c764:	mov    ds:0xa3ff7b8d,eax
 101c769:	mov    WORD PTR [ebx-0x1],?
 101c76c:	pushf  
 101c76d:	test   BYTE PTR [edi+edi*8-0x6a],dh
 101c771:	jge    0x101c7df
 101c773:	dec    DWORD PTR [esi-0x79009a8b]
 101c779:	ins    DWORD PTR es:[edi],dx
 101c77a:	pop    esp
 101c77b:	(bad)  
 101c77c:	jle    0x101c7e4
 101c77e:	push   ebp
 101c77f:	(bad)  
 101c780:	js     0x101c7e1
 101c782:	dec    ebp
 101c783:	(bad)  
 101c784:	jns    0x101c712
 101c786:	xchg   esi,eax
 101c787:	call   FWORD PTR [esi]
 101c789:	je     0x101c724
 101c78b:	(bad)  
 101c78c:	(bad)  
 101c78d:	(bad)  
 101c78e:	(bad)  
 101c78f:	(bad)  
 101c790:	(bad)  
 101c791:	(bad)  
 101c792:	(bad)  
 101c793:	push   edx
 101c795:	(bad)  
 101c796:	(bad)  
 101c797:	jmp    ecx
 101c799:	std    
 101c79a:	(bad)  
 101c79b:	dec    DWORD PTR [eax+0x75fff8f4]
 101c7a1:	icebp  
 101c7a2:	clc    
 101c7a3:	jmp    DWORD PTR [esi-0x10]
 101c7a6:	idiv   edi
 101c7a8:	pop    ebx
 101c7a9:	out    dx,al
 101c7aa:	idiv   bh
 101c7ac:	push   ds
 101c7ad:	je     0x101c748
 101c7af:	(bad)  
 101c7b0:	cmp    BYTE PTR [edi+0x52],al
 101c7b3:	inc    DWORD PTR [eax]
 101c7b5:	add    BYTE PTR [eax],al
 101c7b7:	add    BYTE PTR [eax],al
 101c7b9:	add    BYTE PTR [eax],al
 101c7bb:	add    BYTE PTR [esi-0x6009081],dl
 101c7c1:	jmp    0xfffa:0xfcfeffe3
 101c7c8:	(bad)  
 101c7c9:	cli    
 101c7ca:	clc    
 101c7cb:	(bad)  
 101c7cc:	std    
 101c7cd:	clc    
 101c7ce:	cmc    
 101c7cf:	(bad)  
 101c7d0:	cld    
 101c7d1:	div    bl
 101c7d3:	(bad)  
 101c7d4:	sti    
 101c7d5:	hlt    
 101c7d6:	icebp  
 101c7d7:	(bad)  
 101c7d8:	cld    
 101c7d9:	icebp  
 101c7da:	in     eax,dx
 101c7db:	(bad)  
 101c7dc:	cli    
 101c7dd:	lock jmp 0xf9ff:0xe7edfaff
 101c7e5:	jmp    0xffe1:0xe9f8ffe4
 101c7ec:	mul    edi
 101c7ee:	fdivp  st(7),st
 101c7f0:	mul    ah
 101c7f2:	(bad)  
 101c7f4:	mul    dl
 101c7f6:	fdivr  st,st(7)
 101c7f8:	cmc    
 101c7f9:	loopne 0x101c7d1
 101c7fb:	push   ebp
 101c7fd:	(bad)  
 101c7ff:	push   esp
 101c801:	(bad)  
 101c803:	push   esp
 101c805:	fxch   st(5)
 101c807:	(bad)  
 101c808:	(bad)  
 101c80a:	out    0xff,al
 101c80c:	push   ds
 101c80d:	je     0x101c7a8
 101c80f:	call   FWORD PTR [esi]
 101c811:	je     0x101c7ac
 101c813:	push   edx
 101c815:	(bad)  
 101c816:	(bad)  
 101c817:	jmp    ecx
 101c819:	std    
 101c81a:	(bad)  
 101c81b:	dec    DWORD PTR [eax+0x75fff9f3]
 101c821:	icebp  
 101c822:	idiv   edi
 101c824:	push   ds
 101c825:	je     0x101c7c0
 101c827:	call   FWORD PTR [esi]
 101c829:	je     0x101c7c4
 101c82b:	(bad)  
 101c82c:	(bad)  
 101c82e:	out    0xff,al
	...
 101c83c:	cwde   
 101c83d:	xor    BYTE PTR [ecx-0x1],0xf9
 101c841:	in     al,dx
 101c842:	out    0xff,al
 101c844:	(bad)  
 101c845:	std    
 101c846:	std    
 101c847:	(bad)  
 101c848:	(bad)  
 101c849:	cld    
 101c84a:	sti    
 101c84b:	(bad)  
 101c84c:	std    
 101c84d:	cli    
 101c84e:	clc    
 101c84f:	(bad)  
 101c850:	std    
 101c851:	clc    
 101c852:	cmc    
 101c853:	(bad)  
 101c854:	cld    
 101c855:	div    bl
 101c857:	(bad)  
 101c858:	cld    
 101c859:	hlt    
 101c85a:	lock (bad) 
 101c85c:	sti    
 101c85d:	icebp  
 101c85e:	in     eax,dx
 101c85f:	(bad)  
 101c860:	sti    
 101c861:	lock jmp 0xf9ff:0xe7edfaff
 101c869:	jmp    0xffe1:0xe8f8ffe4
 101c870:	clc    
 101c871:	out    0xde,eax
 101c873:	push   esi
 101c875:	in     al,0xdb
 101c877:	push   esi
 101c879:	loope  0x101c853
 101c87b:	push   ebp
 101c87d:	loopne 0x101c854
 101c87f:	push   ebp
 101c881:	fst    st(3)
 101c883:	push   ebp
 101c885:	fmul   st(7),st
 101c887:	push   esp
 101c889:	fcmove st,st(4)
 101c88b:	push   ebx
 101c88d:	xlat   BYTE PTR ds:[ebx]
 101c88e:	leave  
 101c88f:	(bad)  
 101c890:	(bad)  
 101c892:	out    0xff,al
 101c894:	push   ds
 101c895:	je     0x101c830
 101c897:	call   FWORD PTR [esi]
 101c899:	je     0x101c834
 101c89b:	call   FWORD PTR [esi]
 101c89d:	je     0x101c838
 101c89f:	call   FWORD PTR [esi]
 101c8a1:	je     0x101c83c
 101c8a3:	(bad)  
 101c8a4:	(bad)  
 101c8a6:	out    0xff,al
	...
 101c8bc:	fwait
 101c8bd:	test   BYTE PTR [ebx-0x1],dh
 101c8c0:	cli    
 101c8c1:	out    dx,al
 101c8c2:	call   0x34ba3cc6
 101c8c7:	call   eax
 101c8c9:	out    0xba,al
 101c8cb:	call   eax
 101c8cd:	in     al,0xb7
 101c8cf:	push   DWORD PTR [ebx-0x49]
 101c8d2:	xor    bh,bh
 101c8d4:	lods   al,BYTE PTR ds:[esi]
 101c8d5:	rol    BYTE PTR [ebx-0x7e2e5301],cl
 101c8db:	call   DWORD PTR [ebp+eax*8-0x2b4800a0]
 101c8e2:	mov    ?,edi
 101c8e4:	jge    0x101c89f
 101c8e6:	ds dec ebp
 101c8e9:	fisubr DWORD PTR [ecx+0x3db87dff]
 101c8ef:	call   DWORD PTR [eax-0x5a]
 101c8f2:	add    bh,bh
 101c8f4:	push   eax
 101c8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101c8f6:	add    bh,bh
 101c8f8:	jge    0x101c8b0
 101c8fa:	cmp    bh,bh
 101c8fc:	pop    ebx
 101c8fd:	stos   BYTE PTR es:[edi],al
 101c8fe:	push   cs
 101c8ff:	push   esi
 101c901:	(bad)  
 101c903:	push   ebp
 101c905:	fst    st(2)
 101c907:	inc    DWORD PTR [edi-0x4200ba48]
 101c90d:	enter  0xff88,0xd6
 101c911:	mov    cl,0x9e
 101c913:	jmp    DWORD PTR [ebx+0x49]
 101c916:	xor    eax,0xe6e2dfff
 101c91b:	(bad)  
 101c91c:	(bad)  
 101c91e:	out    0xff,al
	...
 101c93c:	popf   
 101c93d:	xchg   DWORD PTR [esi-0x1],esi
 101c940:	cli    
 101c941:	icebp  
 101c942:	jmp    0x101c943
 101c944:	shl    bh,1
 101c946:	mov    ebx,0x44bd7fff
 101c94b:	(bad)  
 101c94c:	jle    0x101c90b
 101c94e:	inc    ebx
 101c94f:	call   eax
 101c951:	in     al,0xb7
 101c953:	jmp    FWORD PTR [ebx+edx*8-0x2d53007c]
 101c95a:	cmp    edi,0xffffff89
 101c95d:	rcl    DWORD PTR [ecx-0x1],0xa0
 101c961:	retf   0xff70
 101c964:	jle    0x101c920
 101c966:	aas    
 101c967:	dec    ebp
 101c969:	fsubr  QWORD PTR [edi+edi*8-0xc14683]
 101c970:	retf   
 101c971:	fsub   DWORD PTR [esi-0x1f170701]
 101c977:	push   edi
 101c979:	out    0xdd,al
 101c97b:	dec    DWORD PTR [eax+0x71ff49ba]
 101c981:	mov    dl,0x2b
 101c983:	(bad)  
 101c984:	jl     0x101c93b
 101c986:	cmp    edi,edi
 101c988:	pop    ebx
 101c989:	stos   BYTE PTR es:[edi],al
 101c98a:	push   cs
 101c98b:	push   esp
 101c98d:	fcmovne st,st(7)
 101c98f:	call   edi
 101c991:	mov    bl,0xa0
 101c993:	jmp    DWORD PTR [ebx+0x49]
 101c996:	xor    eax,0xff
	...
 101c9bb:	add    BYTE PTR [edi-0x4008677],bl
 101c9c1:	repnz out dx,al
 101c9c3:	(bad)  
 101c9c4:	(bad)  
 101c9c5:	(bad)  
 101c9c6:	(bad)  
 101c9c7:	dec    DWORD PTR [edx-0x6900aa3c]
 101c9cd:	leave  
 101c9ce:	gs (bad) 
 101c9d0:	(bad)  
 101c9d1:	std    
 101c9d2:	cld    
 101c9d3:	jmp    FWORD PTR [ebp-0x5e007a2d]
 101c9d9:	int    0x73
 101c9db:	dec    DWORD PTR [edx+0x7eff52c1]
 101c9e1:	mov    ebx,0xbb7eff41
 101c9e6:	inc    eax
 101c9e7:	dec    ebp
 101c9e9:	fisubr WORD PTR [ebp+0x3eb97dff]
 101c9ef:	dec    ebp
 101c9f1:	fldcw  WORD PTR [ecx-0x1c150601]
 101c9f7:	(bad)  
 101c9f8:	clc    
 101c9f9:	call   0xcdb7c9de
 101c9fe:	test   edi,edi
 101ca00:	xchg   edx,eax
 101ca01:	mov    esi,0xc9b4ff57
 101ca06:	cmp    bh,0x92
 101ca09:	mov    ebp,0xddf5ff55
 101ca0e:	sar    bh,cl
 101ca10:	xlat   BYTE PTR ds:[ebx]
 101ca11:	mov    ch,0xa3
 101ca13:	jmp    DWORD PTR [ebx+0x49]
 101ca16:	xor    eax,0xff
	...
 101ca3b:	add    BYTE PTR [edx-0x4008474],ah
 101ca41:	hlt    
 101ca42:	icebp  
 101ca43:	push   ebx
 101ca45:	stc    
 101ca46:	out    dx,al
 101ca47:	jmp    DWORD PTR [edi-0x4e]
 101ca4a:	and    bh,bh
 101ca4c:	addr16 mov dl,0x22
 101ca4f:	push   ebx
 101ca51:	clc    
 101ca52:	in     eax,dx
 101ca53:	jmp    FWORD PTR [ebp+0x7eff86d4]
 101ca59:	mov    ebp,0xd2acff43
 101ca5e:	test   bh,bh
 101ca60:	mov    al,cl
 101ca62:	push   edx
 101ca63:	(bad)  
 101ca64:	jle    0x101ca21
 101ca66:	inc    ecx
 101ca67:	dec    ebp
 101ca69:	fisubr WORD PTR [edi+0x3fba7eff]
 101ca6f:	dec    ebp
 101ca71:	fsubr  QWORD PTR [ebx-0x18130601]
 101ca77:	(bad)  
 101ca78:	clc    
 101ca79:	jmp    0xffd1:0xe4edffe3
 101ca80:	pop    ebx
 101ca81:	stos   BYTE PTR es:[edi],al
 101ca82:	ud0    ecx,DWORD PTR [eax-0x4000b646]
 101ca89:	int    0x90
 101ca8b:	push   esi
 101ca8d:	(bad)  
 101ca8f:	(bad)  
 101ca90:	fnstenv [edi+0x4963ffa5]
 101ca96:	xor    eax,0xff
	...
 101cabb:	add    BYTE PTR [esi+ecx*4-0x9030082],ah
 101cac2:	repz jmp DWORD PTR [edx-0x52008830]
 101cac9:	aad    0x88
 101cacb:	jmp    FWORD PTR [ebp-0x5d00772b]
 101cad1:	shl    BYTE PTR [edi-0x1],1
 101cad4:	lods   eax,DWORD PTR ds:[esi]
 101cad5:	aad    0x87
 101cad7:	call   DWORD PTR [eax-0x5a]
 101cada:	add    bh,bh
 101cadc:	fucomi st,st(2)
 101cade:	enter  0xacff,0xd2
 101cae2:	test   bh,bh
 101cae4:	push   eax
 101cae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101cae6:	add    bh,bh
 101cae8:	into   
 101cae9:	loopne 0x101ca9c
 101caeb:	(bad)  
 101caec:	jle    0x101caa9
 101caee:	inc    eax
 101caef:	dec    ebp
 101caf1:	(bad)  [ebp-0x16100501]
 101caf7:	(bad)  
 101caf8:	stc    
 101caf9:	in     al,dx
 101cafa:	out    0xff,al
 101cafc:	clc    
 101cafd:	jmp    0xff4b:0xbc88ffe3
 101cb04:	pop    ebx
 101cb05:	stos   BYTE PTR es:[edi],al
 101cb06:	ud0    esi,esi
 101cb09:	jecxz  0x101cae5
 101cb0b:	push   esi
 101cb0d:	loope  0x101cae6
 101cb0f:	(bad)  
 101cb10:	fidivr DWORD PTR [ecx+0x4963ffa7]
 101cb16:	xor    eax,0xff
	...
 101cb3b:	add    BYTE PTR [esi-0x2007e6f],ah
 101cb41:	clc    
 101cb42:	idiv   bh
 101cb44:	(bad)  
 101cb45:	(bad)  
 101cb46:	(bad)  
 101cb47:	(bad)  
 101cb48:	(bad)  
 101cb49:	(bad)  
 101cb4a:	(bad)  
 101cb4b:	(bad)  
 101cb4c:	(bad)  
 101cb4d:	(bad)  
 101cb4e:	(bad)  
 101cb4f:	(bad)  
 101cb50:	(bad)  
 101cb51:	(bad)  
 101cb52:	(bad)  
 101cb53:	(bad)  
 101cb54:	(bad)  
 101cb55:	(bad)  
 101cb56:	(bad)  
 101cb57:	(bad)  
 101cb58:	(bad)  
 101cb59:	(bad)  
 101cb5a:	std    
 101cb5b:	(bad)  
 101cb5c:	(bad)  
 101cb5d:	std    
 101cb5e:	cld    
 101cb5f:	(bad)  
 101cb60:	(bad)  
 101cb61:	sti    
 101cb62:	cli    
 101cb63:	(bad)  
 101cb64:	std    
 101cb65:	stc    
 101cb66:	idiv   edi
 101cb68:	cld    
 101cb69:	clc    
 101cb6a:	hlt    
 101cb6b:	(bad)  
 101cb6c:	cld    
 101cb6d:	cmc    
 101cb6e:	repnz (bad) 
 101cb70:	sti    
 101cb71:	repz out dx,eax
 101cb73:	(bad)  
 101cb74:	sti    
 101cb75:	lock in al,dx
 101cb77:	(bad)  
 101cb78:	cli    
 101cb79:	out    dx,eax
 101cb7a:	jmp    0xe6eec57e
 101cb7f:	(bad)  
 101cb80:	stc    
 101cb81:	jmp    0xffe0:0xe8f8ffe3
 101cb88:	clc    
 101cb89:	out    0xdd,al
 101cb8b:	push   edi
 101cb8d:	jecxz  0x101cb69
 101cb8f:	(bad)  
 101cb90:	fstp   TBYTE PTR [edx+0x4963ffaa]
 101cb96:	xor    eax,0xff
	...
 101cbbb:	add    BYTE PTR [edx-0x1007b6c],ch
 101cbc1:	stc    
 101cbc2:	clc    
 101cbc3:	(bad)  
 101cbc4:	(bad)  
 101cbc5:	(bad)  
 101cbc6:	(bad)  
 101cbc7:	(bad)  
 101cbc8:	(bad)  
 101cbc9:	(bad)  
 101cbca:	(bad)  
 101cbcb:	(bad)  
 101cbcc:	(bad)  
 101cbcd:	(bad)  
 101cbce:	(bad)  
 101cbcf:	(bad)  
 101cbd0:	(bad)  
 101cbd1:	(bad)  
 101cbd2:	(bad)  
 101cbd3:	(bad)  
 101cbd4:	(bad)  
 101cbd5:	(bad)  
 101cbd6:	(bad)  
 101cbd7:	(bad)  
 101cbd8:	(bad)  
 101cbd9:	(bad)  
 101cbda:	(bad)  
 101cbdb:	(bad)  
 101cbdc:	(bad)  
 101cbdd:	std    
 101cbde:	std    
 101cbdf:	(bad)  
 101cbe0:	(bad)  
 101cbe1:	std    
 101cbe2:	cld    
 101cbe3:	(bad)  
 101cbe4:	(bad)  
 101cbe5:	sti    
 101cbe6:	stc    
 101cbe7:	(bad)  
 101cbe8:	std    
 101cbe9:	stc    
 101cbea:	idiv   edi
 101cbec:	std    
 101cbed:	clc    
 101cbee:	hlt    
 101cbef:	(bad)  
 101cbf0:	cld    
 101cbf1:	cmc    
 101cbf2:	repnz (bad) 
 101cbf4:	sti    
 101cbf5:	repz out dx,eax
 101cbf7:	(bad)  
 101cbf8:	cli    
 101cbf9:	icebp  
 101cbfa:	in     al,dx
 101cbfb:	(bad)  
 101cbfc:	cli    
 101cbfd:	out    dx,eax
 101cbfe:	call   0xe7efc602
 101cc03:	(bad)  
 101cc04:	clc    
 101cc05:	jmp    0xffe0:0xe8f8ffe2
 101cc0c:	clc    
 101cc0d:	in     eax,0xdc
 101cc0f:	(bad)  
 101cc10:	fstp   TBYTE PTR [esp+ebp*4+0x354963ff]
 101cc17:	inc    DWORD PTR [eax]
	...
 101cc39:	add    BYTE PTR [eax],al
 101cc3b:	add    BYTE PTR [esi+edx*4-0x4010079],ch
 101cc42:	cli    
 101cc43:	(bad)  
 101cc44:	(bad)  
 101cc45:	(bad)  
 101cc46:	(bad)  
 101cc47:	inc    ecx
 101cc49:	stos   DWORD PTR es:[edi],eax
 101cc4a:	pushf  
 101cc4b:	inc    ecx
 101cc4d:	stos   DWORD PTR es:[edi],eax
 101cc4e:	pushf  
 101cc4f:	inc    ecx
 101cc51:	stos   DWORD PTR es:[edi],eax
 101cc52:	pushf  
 101cc53:	inc    ecx
 101cc55:	stos   BYTE PTR es:[edi],al
 101cc56:	fwait
 101cc57:	(bad)  
 101cc58:	mov    esi,0xb9ff98a6
 101cc5d:	mov    ds:0x9cb3ff92,al
 101cc62:	(bad)  
 101cc63:	jmp    FWORD PTR [esi+edx*4-0x6f59007a]
 101cc6a:	cmp    bh,0xa1
 101cc6d:	mov    BYTE PTR [eax-0x1],bh
 101cc70:	cdq    
 101cc71:	xor    DWORD PTR [ecx-0x1],0xff697991
 101cc78:	mov    dh,BYTE PTR [edx+0x61]
 101cc7b:	inc    DWORD PTR [ebx+0x7cff596a]
 101cc81:	arpl   WORD PTR [ecx-0x1],dx
 101cc84:	jne    0x101cce2
 101cc86:	dec    edx
 101cc87:	jmp    FWORD PTR [esi+0x55]
 101cc8a:	inc    edx
 101cc8b:	(bad)  
 101cc8c:	clc    
 101cc8d:	out    0xdf,eax
 101cc8f:	(bad)  
 101cc90:	fdivr  QWORD PTR [esi+0x4963ffae]
 101cc96:	xor    eax,0xff
	...
 101ccbb:	add    BYTE PTR [esi-0x1007567],ch
 101ccc1:	cld    
 101ccc2:	cld    
 101ccc3:	(bad)  
 101ccc4:	(bad)  
 101ccc5:	(bad)  
 101ccc6:	(bad)  
 101ccc7:	(bad)  
 101ccc8:	(bad)  
 101ccc9:	(bad)  
 101ccca:	(bad)  
 101cccb:	(bad)  
 101cccc:	(bad)  
 101cccd:	(bad)  
 101ccce:	(bad)  
 101cccf:	(bad)  
 101ccd0:	(bad)  
 101ccd1:	(bad)  
 101ccd2:	(bad)  
 101ccd3:	(bad)  
 101ccd4:	(bad)  
 101ccd5:	(bad)  
 101ccd6:	(bad)  
 101ccd7:	(bad)  
 101ccd8:	(bad)  
 101ccd9:	(bad)  
 101ccda:	(bad)  
 101ccdb:	(bad)  
 101ccdc:	(bad)  
 101ccdd:	(bad)  
 101ccde:	(bad)  
 101ccdf:	(bad)  
 101cce0:	(bad)  
 101cce1:	(bad)  
 101cce2:	(bad)  
 101cce3:	(bad)  
 101cce4:	(bad)  
 101cce5:	std    
 101cce6:	std    
 101cce7:	(bad)  
 101cce8:	(bad)  
 101cce9:	cld    
 101ccea:	sti    
 101cceb:	(bad)  
 101ccec:	(bad)  
 101cced:	sti    
 101ccee:	stc    
 101ccef:	(bad)  
 101ccf0:	std    
 101ccf1:	stc    
 101ccf2:	idiv   edi
 101ccf4:	std    
 101ccf5:	div    esp
 101ccf7:	(bad)  
 101ccf8:	cld    
 101ccf9:	cmc    
 101ccfa:	icebp  
 101ccfb:	(bad)  
 101ccfc:	sti    
 101ccfd:	repnz out dx,eax
 101ccff:	(bad)  
 101cd00:	cli    
 101cd01:	icebp  
 101cd02:	jmp    0x101cd03
 101cd04:	cli    
 101cd05:	out    dx,al
 101cd06:	jmp    0xe7edc80a
 101cd0b:	(bad)  
 101cd0c:	stc    
 101cd0d:	jmp    0xc2dfccf4
 101cd12:	mov    cl,0xff
 101cd14:	arpl   WORD PTR [ecx+0x35],cx
 101cd17:	inc    DWORD PTR [eax]
	...
 101cd39:	add    BYTE PTR [eax],al
 101cd3b:	add    BYTE PTR [ecx-0x7264],dh
 101cd41:	(bad)  
 101cd42:	std    
 101cd43:	(bad)  
 101cd44:	(bad)  
 101cd45:	(bad)  
 101cd46:	(bad)  
 101cd47:	(bad)  
 101cd48:	(bad)  
 101cd49:	(bad)  
 101cd4a:	(bad)  
 101cd4b:	(bad)  
 101cd4c:	(bad)  
 101cd4d:	(bad)  
 101cd4e:	(bad)  
 101cd4f:	(bad)  
 101cd50:	(bad)  
 101cd51:	(bad)  
 101cd52:	(bad)  
 101cd53:	(bad)  
 101cd54:	(bad)  
 101cd55:	(bad)  
 101cd56:	(bad)  
 101cd57:	(bad)  
 101cd58:	(bad)  
 101cd59:	(bad)  
 101cd5a:	(bad)  
 101cd5b:	(bad)  
 101cd5c:	(bad)  
 101cd5d:	(bad)  
 101cd5e:	(bad)  
 101cd5f:	(bad)  
 101cd60:	(bad)  
 101cd61:	(bad)  
 101cd62:	(bad)  
 101cd63:	(bad)  
 101cd64:	(bad)  
 101cd65:	(bad)  
 101cd66:	(bad)  
 101cd67:	(bad)  
 101cd68:	(bad)  
 101cd69:	(bad)  
 101cd6a:	std    
 101cd6b:	(bad)  
 101cd6c:	(bad)  
 101cd6d:	std    
 101cd6e:	sti    
 101cd6f:	(bad)  
 101cd70:	std    
 101cd71:	sti    
 101cd72:	stc    
 101cd73:	(bad)  
 101cd74:	std    
 101cd75:	stc    
 101cd76:	idiv   edi
 101cd78:	cld    
 101cd79:	div    ah
 101cd7b:	(bad)  
 101cd7c:	cld    
 101cd7d:	hlt    
 101cd7e:	icebp  
 101cd7f:	(bad)  
 101cd80:	sti    
 101cd81:	repnz out dx,al
 101cd83:	(bad)  
 101cd84:	sti    
 101cd85:	lock jmp 0x101cd87
 101cd88:	cli    
 101cd89:	out    dx,al
 101cd8a:	call   0xe6edc78e
 101cd8f:	(bad)  
 101cd90:	ffreep st(2)
 101cd92:	mov    bl,0xff
 101cd94:	arpl   WORD PTR [ecx+0x35],cx
 101cd97:	inc    DWORD PTR [eax]
	...
 101cdb9:	add    BYTE PTR [eax],al
 101cdbb:	add    BYTE PTR [ebx-0x7062],dh
 101cdc1:	(bad)  
 101cdc2:	(bad)  
 101cdc3:	(bad)  
 101cdc4:	(bad)  
 101cdc5:	(bad)  
 101cdc6:	(bad)  
 101cdc7:	inc    ecx
 101cdc9:	stos   DWORD PTR es:[edi],eax
 101cdca:	pushf  
 101cdcb:	inc    ecx
 101cdcd:	stos   DWORD PTR es:[edi],eax
 101cdce:	pushf  
 101cdcf:	inc    ecx
 101cdd1:	stos   DWORD PTR es:[edi],eax
 101cdd2:	pushf  
 101cdd3:	inc    ecx
 101cdd5:	stos   DWORD PTR es:[edi],eax
 101cdd6:	pushf  
 101cdd7:	(bad)  
 101cdd8:	mov    edi,0xbaff99a9
 101cddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101cdde:	xchg   esi,eax
 101cddf:	push   DWORD PTR [ebp-0x4e006f61]
 101cde5:	cdq    
 101cde6:	mov    edi,edi
 101cde8:	stos   BYTE PTR es:[edi],al
 101cde9:	xchg   ebx,eax
 101cdea:	cmp    bh,0xa3
 101cded:	mov    WORD PTR [ebx-0x1],?
 101cdf0:	pushf  
 101cdf1:	test   BYTE PTR [edi+edi*8-0x6a],dh
 101cdf5:	jge    0x101ce63
 101cdf7:	dec    DWORD PTR [esi-0x79009a8b]
 101cdfd:	ins    DWORD PTR es:[edi],dx
 101cdfe:	pop    esp
 101cdff:	(bad)  
 101ce00:	jle    0x101ce68
 101ce02:	push   ebp
 101ce03:	(bad)  
 101ce04:	js     0x101ce65
 101ce06:	dec    ebp
 101ce07:	push   DWORD PTR [edx+0x59]
 101ce0a:	inc    esi
 101ce0b:	(bad)  
 101ce0c:	cli    
 101ce0d:	out    dx,al
 101ce0e:	call   0xb7c6ae12
 101ce13:	jmp    DWORD PTR [ebx+0x49]
 101ce16:	xor    eax,0xff
	...
 101ce3b:	add    BYTE PTR [ebp-0x6d60],dh
 101ce41:	(bad)  
 101ce42:	(bad)  
 101ce43:	(bad)  
 101ce44:	(bad)  
 101ce45:	(bad)  
 101ce46:	(bad)  
 101ce47:	(bad)  
 101ce48:	(bad)  
 101ce49:	(bad)  
 101ce4a:	(bad)  
 101ce4b:	(bad)  
 101ce4c:	(bad)  
 101ce4d:	(bad)  
 101ce4e:	(bad)  
 101ce4f:	(bad)  
 101ce50:	(bad)  
 101ce51:	(bad)  
 101ce52:	(bad)  
 101ce53:	(bad)  
 101ce54:	(bad)  
 101ce55:	(bad)  
 101ce56:	(bad)  
 101ce57:	(bad)  
 101ce58:	(bad)  
 101ce59:	(bad)  
 101ce5a:	(bad)  
 101ce5b:	(bad)  
 101ce5c:	(bad)  
 101ce5d:	(bad)  
 101ce5e:	(bad)  
 101ce5f:	(bad)  
 101ce60:	(bad)  
 101ce61:	(bad)  
 101ce62:	(bad)  
 101ce63:	(bad)  
 101ce64:	(bad)  
 101ce65:	(bad)  
 101ce66:	(bad)  
 101ce67:	(bad)  
 101ce68:	(bad)  
 101ce69:	(bad)  
 101ce6a:	(bad)  
 101ce6b:	(bad)  
 101ce6c:	(bad)  
 101ce6d:	(bad)  
 101ce6e:	(bad)  
 101ce6f:	(bad)  
 101ce70:	(bad)  
 101ce71:	(bad)  
 101ce72:	cld    
 101ce73:	(bad)  
 101ce74:	(bad)  
 101ce75:	cld    
 101ce76:	sti    
 101ce77:	(bad)  
 101ce78:	(bad)  
 101ce79:	cli    
 101ce7a:	clc    
 101ce7b:	(bad)  
 101ce7c:	std    
 101ce7d:	stc    
 101ce7e:	idiv   bh
 101ce80:	cld    
 101ce81:	div    ah
 101ce83:	(bad)  
 101ce84:	cld    
 101ce85:	cmc    
 101ce86:	icebp  
 101ce87:	(bad)  
 101ce88:	sti    
 101ce89:	repz in eax,dx
 101ce8b:	(bad)  
 101ce8c:	cli    
 101ce8d:	lock jmp 0x101ce8f
 101ce90:	loopne 0x101ce59
 101ce92:	mov    eax,0x354963ff
 101ce97:	inc    DWORD PTR [eax]
	...
 101ceb9:	add    BYTE PTR [eax],al
 101cebb:	add    BYTE PTR [eax-0x6b5d],bh
 101cec1:	(bad)  
 101cec2:	(bad)  
 101cec3:	(bad)  
 101cec4:	(bad)  
 101cec5:	(bad)  
 101cec6:	(bad)  
 101cec7:	(bad)  
 101cec8:	(bad)  
 101cec9:	(bad)  
 101ceca:	(bad)  
 101cecb:	(bad)  
 101cecc:	(bad)  
 101cecd:	(bad)  
 101cece:	(bad)  
 101cecf:	(bad)  
 101ced0:	(bad)  
 101ced1:	(bad)  
 101ced2:	(bad)  
 101ced3:	(bad)  
 101ced4:	(bad)  
 101ced5:	(bad)  
 101ced6:	(bad)  
 101ced7:	(bad)  
 101ced8:	(bad)  
 101ced9:	(bad)  
 101ceda:	(bad)  
 101cedb:	(bad)  
 101cedc:	(bad)  
 101cedd:	(bad)  
 101cede:	(bad)  
 101cedf:	(bad)  
 101cee0:	(bad)  
 101cee1:	(bad)  
 101cee2:	(bad)  
 101cee3:	(bad)  
 101cee4:	(bad)  
 101cee5:	(bad)  
 101cee6:	(bad)  
 101cee7:	(bad)  
 101cee8:	(bad)  
 101cee9:	(bad)  
 101ceea:	(bad)  
 101ceeb:	(bad)  
 101ceec:	(bad)  
 101ceed:	(bad)  
 101ceee:	(bad)  
 101ceef:	(bad)  
 101cef0:	(bad)  
 101cef1:	(bad)  
 101cef2:	(bad)  
 101cef3:	(bad)  
 101cef4:	(bad)  
 101cef5:	(bad)  
 101cef6:	cld    
 101cef7:	(bad)  
 101cef8:	(bad)  
 101cef9:	sti    
 101cefa:	sti    
 101cefb:	(bad)  
 101cefc:	(bad)  
 101cefd:	cli    
 101cefe:	stc    
 101ceff:	(bad)  
 101cf00:	std    
 101cf01:	clc    
 101cf02:	idiv   bh
 101cf04:	leave  
 101cf05:	mov    ah,0xa9
 101cf07:	(bad)  
 101cf08:	mov    ebp,0xb2ff97a5
 101cf0d:	cdq    
 101cf0e:	mov    edi,edi
 101cf10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101cf11:	mov    bh,BYTE PTR [eax-0x1]
 101cf14:	arpl   WORD PTR [ecx+0x35],cx
 101cf17:	inc    DWORD PTR [eax]
	...
 101cf39:	add    BYTE PTR [eax],al
 101cf3b:	add    BYTE PTR [edx-0x675a],bh
 101cf41:	(bad)  
 101cf42:	(bad)  
 101cf43:	(bad)  
 101cf44:	(bad)  
 101cf45:	(bad)  
 101cf46:	(bad)  
 101cf47:	inc    ecx
 101cf49:	stos   DWORD PTR es:[edi],eax
 101cf4a:	pushf  
 101cf4b:	inc    ecx
 101cf4d:	stos   DWORD PTR es:[edi],eax
 101cf4e:	pushf  
 101cf4f:	inc    ecx
 101cf51:	stos   DWORD PTR es:[edi],eax
 101cf52:	pushf  
 101cf53:	inc    ecx
 101cf55:	stos   DWORD PTR es:[edi],eax
 101cf56:	pushf  
 101cf57:	inc    eax
 101cf59:	stos   DWORD PTR es:[edi],eax
 101cf5a:	pushf  
 101cf5b:	(bad)  
 101cf5c:	mov    esp,0xb8ff97a6
 101cf61:	mov    ds:0x9cb3ff92,al
 101cf66:	(bad)  
 101cf67:	push   DWORD PTR [ebx-0x4c007264]
 101cf6d:	pushf  
 101cf6e:	(bad)  
 101cf6f:	(bad)  
 101cf70:	(bad)  
 101cf71:	(bad)  
 101cf72:	(bad)  
 101cf73:	(bad)  
 101cf74:	(bad)  
 101cf75:	(bad)  
 101cf76:	(bad)  
 101cf77:	(bad)  
 101cf78:	(bad)  
 101cf79:	std    
 101cf7a:	cld    
 101cf7b:	(bad)  
 101cf7c:	(bad)  
 101cf7d:	cld    
 101cf7e:	sti    
 101cf7f:	call   FWORD PTR [esi+0x63ff7687]
 101cf85:	dec    ecx
 101cf86:	xor    eax,0x354963ff
 101cf8b:	jmp    DWORD PTR [ebx+0x49]
 101cf8e:	xor    eax,0x354963ff
 101cf93:	jmp    DWORD PTR [ebx+0x49]
 101cf96:	xor    eax,0xff
	...
 101cfbb:	add    BYTE PTR [eax+ebp*4-0x66],bh
 101cfc2:	(bad)  
 101cfc3:	(bad)  
 101cfc4:	(bad)  
 101cfc5:	(bad)  
 101cfc6:	(bad)  
 101cfc7:	(bad)  
 101cfc8:	(bad)  
 101cfc9:	(bad)  
 101cfca:	(bad)  
 101cfcb:	(bad)  
 101cfcc:	(bad)  
 101cfcd:	(bad)  
 101cfce:	(bad)  
 101cfcf:	(bad)  
 101cfd0:	(bad)  
 101cfd1:	(bad)  
 101cfd2:	(bad)  
 101cfd3:	(bad)  
 101cfd4:	(bad)  
 101cfd5:	(bad)  
 101cfd6:	(bad)  
 101cfd7:	(bad)  
 101cfd8:	(bad)  
 101cfd9:	(bad)  
 101cfda:	(bad)  
 101cfdb:	(bad)  
 101cfdc:	(bad)  
 101cfdd:	(bad)  
 101cfde:	(bad)  
 101cfdf:	(bad)  
 101cfe0:	(bad)  
 101cfe1:	(bad)  
 101cfe2:	(bad)  
 101cfe3:	(bad)  
 101cfe4:	(bad)  
 101cfe5:	(bad)  
 101cfe6:	(bad)  
 101cfe7:	(bad)  
 101cfe8:	(bad)  
 101cfe9:	(bad)  
 101cfea:	(bad)  
 101cfeb:	(bad)  
 101cfec:	(bad)  
 101cfed:	(bad)  
 101cfee:	(bad)  
 101cfef:	(bad)  
 101cff0:	(bad)  
 101cff1:	(bad)  
 101cff2:	(bad)  
 101cff3:	(bad)  
 101cff4:	(bad)  
 101cff5:	(bad)  
 101cff6:	(bad)  
 101cff7:	(bad)  
 101cff8:	(bad)  
 101cff9:	(bad)  
 101cffa:	(bad)  
 101cffb:	(bad)  
 101cffc:	(bad)  
 101cffd:	std    
 101cffe:	cld    
 101cfff:	jmp    DWORD PTR [eax-0x2a008677]
 101d005:	lds    edi,FWORD PTR [ebp-0x5a4e3801]
 101d00b:	push   DWORD PTR [ebp-0x61007163]
 101d011:	xchg   DWORD PTR [esi-0x1],esi
	...
 101d03c:	mov    esi,0xffff9caa
 101d041:	(bad)  
 101d042:	(bad)  
 101d043:	(bad)  
 101d044:	(bad)  
 101d045:	(bad)  
 101d046:	(bad)  
 101d047:	(bad)  
 101d048:	(bad)  
 101d049:	(bad)  
 101d04a:	(bad)  
 101d04b:	(bad)  
 101d04c:	(bad)  
 101d04d:	(bad)  
 101d04e:	(bad)  
 101d04f:	(bad)  
 101d050:	(bad)  
 101d051:	(bad)  
 101d052:	(bad)  
 101d053:	(bad)  
 101d054:	(bad)  
 101d055:	(bad)  
 101d056:	(bad)  
 101d057:	(bad)  
 101d058:	(bad)  
 101d059:	(bad)  
 101d05a:	(bad)  
 101d05b:	(bad)  
 101d05c:	(bad)  
 101d05d:	(bad)  
 101d05e:	(bad)  
 101d05f:	(bad)  
 101d060:	(bad)  
 101d061:	(bad)  
 101d062:	(bad)  
 101d063:	(bad)  
 101d064:	(bad)  
 101d065:	(bad)  
 101d066:	(bad)  
 101d067:	(bad)  
 101d068:	(bad)  
 101d069:	(bad)  
 101d06a:	(bad)  
 101d06b:	(bad)  
 101d06c:	(bad)  
 101d06d:	(bad)  
 101d06e:	(bad)  
 101d06f:	(bad)  
 101d070:	(bad)  
 101d071:	(bad)  
 101d072:	(bad)  
 101d073:	(bad)  
 101d074:	(bad)  
 101d075:	(bad)  
 101d076:	(bad)  
 101d077:	(bad)  
 101d078:	(bad)  
 101d079:	(bad)  
 101d07a:	(bad)  
 101d07b:	(bad)  
 101d07c:	(bad)  
 101d07d:	(bad)  
 101d07e:	(bad)  
 101d07f:	jmp    DWORD PTR [edx-0x1c008374]
 101d085:	fcmovbe st,st(3)
 101d087:	call   ebp
 101d089:	lds    edi,FWORD PTR [edi+edi*8-0x897862]
	...
 101d0bc:	shr    BYTE PTR [ebp-0x61],0xff
 101d0c3:	(bad)  
 101d0c4:	(bad)  
 101d0c5:	(bad)  
 101d0c6:	(bad)  
 101d0c7:	(bad)  
 101d0c8:	(bad)  
 101d0c9:	(bad)  
 101d0ca:	(bad)  
 101d0cb:	(bad)  
 101d0cc:	(bad)  
 101d0cd:	(bad)  
 101d0ce:	(bad)  
 101d0cf:	(bad)  
 101d0d0:	(bad)  
 101d0d1:	(bad)  
 101d0d2:	(bad)  
 101d0d3:	(bad)  
 101d0d4:	(bad)  
 101d0d5:	(bad)  
 101d0d6:	(bad)  
 101d0d7:	(bad)  
 101d0d8:	(bad)  
 101d0d9:	(bad)  
 101d0da:	(bad)  
 101d0db:	(bad)  
 101d0dc:	(bad)  
 101d0dd:	(bad)  
 101d0de:	(bad)  
 101d0df:	(bad)  
 101d0e0:	(bad)  
 101d0e1:	(bad)  
 101d0e2:	(bad)  
 101d0e3:	(bad)  
 101d0e4:	(bad)  
 101d0e5:	(bad)  
 101d0e6:	(bad)  
 101d0e7:	(bad)  
 101d0e8:	(bad)  
 101d0e9:	(bad)  
 101d0ea:	(bad)  
 101d0eb:	(bad)  
 101d0ec:	(bad)  
 101d0ed:	(bad)  
 101d0ee:	(bad)  
 101d0ef:	(bad)  
 101d0f0:	(bad)  
 101d0f1:	(bad)  
 101d0f2:	(bad)  
 101d0f3:	(bad)  
 101d0f4:	(bad)  
 101d0f5:	(bad)  
 101d0f6:	(bad)  
 101d0f7:	(bad)  
 101d0f8:	(bad)  
 101d0f9:	(bad)  
 101d0fa:	(bad)  
 101d0fb:	(bad)  
 101d0fc:	(bad)  
 101d0fd:	(bad)  
 101d0fe:	(bad)  
 101d0ff:	jmp    DWORD PTR [ebp-0xc008172]
 101d105:	out    dx,eax
 101d106:	in     eax,dx
 101d107:	call   FWORD PTR [esi+0xff7687]
	...
 101d139:	add    BYTE PTR [eax],al
 101d13b:	add    dl,al
 101d13d:	scas   eax,DWORD PTR es:[edi]
 101d13e:	mov    eax,ds:0xffffffff
 101d143:	(bad)  
 101d144:	(bad)  
 101d145:	(bad)  
 101d146:	(bad)  
 101d147:	(bad)  
 101d148:	(bad)  
 101d149:	(bad)  
 101d14a:	(bad)  
 101d14b:	(bad)  
 101d14c:	(bad)  
 101d14d:	(bad)  
 101d14e:	(bad)  
 101d14f:	(bad)  
 101d150:	(bad)  
 101d151:	std    
 101d152:	cld    
 101d153:	(bad)  
 101d154:	(bad)  
 101d155:	sti    
 101d156:	sti    
 101d157:	(bad)  
 101d158:	std    
 101d159:	stc    
 101d15a:	clc    
 101d15b:	(bad)  
 101d15c:	std    
 101d15d:	clc    
 101d15e:	cmc    
 101d15f:	(bad)  
 101d160:	cld    
 101d161:	cmc    
 101d162:	repnz (bad) 
 101d164:	sti    
 101d165:	repz out dx,eax
 101d167:	(bad)  
 101d168:	sti    
 101d169:	lock jmp 0x101d16b
 101d16c:	cli    
 101d16d:	in     eax,dx
 101d16e:	call   0xe5edcb72
 101d173:	(bad)  
 101d174:	clc    
 101d175:	jmp    0xe8f9d15c
 101d17a:	(bad)  
 101d17c:	mul    esp
 101d17e:	(bad)  
 101d180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101d181:	xchg   ecx,eax
 101d182:	cmp    bh,0xa9
 101d185:	xchg   esp,eax
 101d186:	test   bh,bh
	...
 101d1bc:	lds    esi,FWORD PTR [ecx-0x503c005d]
 101d1c2:	mov    eax,ds:0xa0aec2ff
 101d1c7:	inc    eax
 101d1c9:	lods   al,BYTE PTR ds:[esi]
 101d1ca:	lahf   
 101d1cb:	(bad)  
 101d1cc:	mov    edi,0xbdff9cab
 101d1d1:	test   eax,0xa7bcff9b
 101d1d6:	call   0xb8ff:0x97a6bbff
 101d1dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101d1de:	xchg   ebp,eax
 101d1df:	push   DWORD PTR [edi-0x49006b5e]
 101d1e5:	mov    eax,ds:0x9fb3ff92
 101d1ea:	nop
 101d1eb:	push   DWORD PTR [edx-0x4f007063]
 101d1f1:	fwait
 101d1f2:	(bad)  
 101d1f3:	jmp    FWORD PTR [esi-0x52007466]
 101d1f9:	cwde   
 101d1fa:	mov    bh,bh
 101d1fc:	stos   DWORD PTR es:[edi],eax
 101d1fd:	xchg   esi,eax
 101d1fe:	xchg   edi,edi
 101d200:	test   eax,0xff8494
	...
 101d235:	add    BYTE PTR [eax],al
 101d237:	add    bh,bh
 101d239:	(bad)  
 101d23a:	cld    
 101d23b:	ud0    edi,edi
 101d23e:	lock add eax,DWORD PTR [eax-0x7fff0000]
 101d245:	add    BYTE PTR [eax],al
 101d247:	add    DWORD PTR [eax-0x7fff0000],eax
 101d24d:	add    BYTE PTR [eax],al
 101d24f:	add    DWORD PTR [eax-0x7fff0000],eax
 101d255:	add    BYTE PTR [eax],al
 101d257:	add    DWORD PTR [eax-0x7fff0000],eax
 101d25d:	add    BYTE PTR [eax],al
 101d25f:	add    DWORD PTR [eax-0x7fff0000],eax
 101d265:	add    BYTE PTR [eax],al
 101d267:	add    eax,DWORD PTR [eax-0x7ff10000]
 101d26d:	add    BYTE PTR [eax],al
 101d26f:	aas    
 101d270:	add    BYTE PTR [eax],0x0
 101d273:	inc    DWORD PTR [eax-0x7f010000]
 101d279:	add    BYTE PTR [eax],al
 101d27b:	inc    DWORD PTR [eax-0x7f010000]
 101d281:	add    BYTE PTR [eax],al
 101d283:	inc    DWORD PTR [eax-0x7f010000]
 101d289:	add    BYTE PTR [eax],al
 101d28b:	inc    DWORD PTR [eax-0x7f010000]
 101d291:	add    BYTE PTR [eax],al
 101d293:	inc    DWORD PTR [eax-0x7f010000]
 101d299:	add    BYTE PTR [eax],al
 101d29b:	inc    DWORD PTR [eax-0x7f010000]
 101d2a1:	add    BYTE PTR [eax],al
 101d2a3:	inc    DWORD PTR [eax-0x7f00ff00]
 101d2a9:	add    BYTE PTR [ebx],al
 101d2ab:	inc    DWORD PTR [eax-0x7f00f900]
 101d2b1:	add    BYTE PTR [edi],cl
 101d2b3:	inc    DWORD PTR [eax+0x28ff1f00]
 101d2b9:	add    BYTE PTR [eax],al
 101d2bb:	add    BYTE PTR [eax],dl
 101d2bd:	add    BYTE PTR [eax],al
 101d2bf:	add    BYTE PTR [eax],ah
 101d2c1:	add    BYTE PTR [eax],al
 101d2c3:	add    BYTE PTR [ecx],al
 101d2c5:	add    BYTE PTR [eax],ah
 101d2c7:	add    BYTE PTR [eax],al
 101d2c9:	add    BYTE PTR [eax],al
 101d2cb:	add    BYTE PTR [eax+0x4],al
	...
 101d2e2:	add    BYTE PTR [eax],al
 101d2e4:	jno    0x101d33d
 101d2e6:	inc    esp
 101d2e7:	jmp    DWORD PTR [ebx+0x49]
 101d2ea:	xor    eax,0x354963ff
 101d2ef:	jmp    DWORD PTR [ebx+0x49]
 101d2f2:	xor    eax,0x354963ff
 101d2f7:	jmp    DWORD PTR [ebx+0x49]
 101d2fa:	xor    eax,0x354963ff
 101d2ff:	jmp    DWORD PTR [ebx+0x4a]
 101d302:	jmp    DWORD PTR ss:[edx+0x4f]
 101d306:	inc    ecx
 101d307:	call   DWORD PTR [ecx]
 101d309:	js     0x101d297
 101d30b:	inc    DWORD PTR [eax]
 101d30d:	sub    al,0x43
 101d30f:	inc    DWORD PTR [eax]
 101d311:	add    BYTE PTR [eax],al
 101d313:	push   DWORD PTR [edi]
 101d315:	xor    eax,0x1723da37
 101d31a:	pop    ss
 101d31b:	xor    DWORD PTR [esi+0x2a9a1],eax
 101d321:	add    BYTE PTR [eax],al
 101d323:	add    BYTE PTR [esi+0x5c],dh
 101d326:	dec    ecx
 101d327:	push   edi
 101d329:	jecxz  0x101d306
 101d32b:	push   esi
 101d32d:	loope  0x101d307
 101d32f:	push   ebp
 101d331:	(bad)  
 101d333:	push   ebp
 101d335:	(bad)  
 101d337:	push   esp
 101d339:	fcmovne st,st(6)
 101d33b:	push   esp
 101d33d:	fmul   st,st(4)
 101d33f:	call   DWORD PTR [ebp-0x6f]
 101d342:	scas   al,BYTE PTR es:[edi]
 101d343:	call   DWORD PTR [ecx]
 101d345:	js     0x101d2d3
 101d347:	inc    DWORD PTR [eax]
 101d349:	(bad)  
 101d34b:	inc    DWORD PTR [eax]
 101d34d:	loopne 0x101d34e
 101d34f:	inc    DWORD PTR [eax]
 101d351:	jp     0x101d2fc
 101d353:	inc    DWORD PTR [eax]
 101d355:	add    eax,0xff25
 101d35a:	add    bh,bh
 101d35c:	xor    DWORD PTR [esi],edi
 101d35e:	inc    esi
 101d35f:	mov    dl,0x0
 101d361:	add    BYTE PTR [eax],al
 101d363:	add    BYTE PTR [edx+0x61],bh
 101d366:	dec    esi
 101d367:	push   edi
 101d369:	out    0xdf,eax
 101d36b:	jmp    FWORD PTR [eax-0x57007f6f]
 101d371:	xchg   ecx,eax
 101d372:	cmp    bh,0xa8
 101d375:	xchg   ecx,eax
 101d376:	cmp    bh,0xa8
 101d379:	xchg   ecx,eax
 101d37a:	cmp    bh,0xa8
 101d37d:	xchg   ecx,eax
 101d37e:	cmp    bh,0xd
 101d381:	pop    eax
 101d382:	inc    DWORD PTR fs:[eax]
 101d385:	(bad)  
 101d386:	(bad)  
 101d387:	inc    DWORD PTR [eax]
 101d389:	clc    
 101d38a:	(bad)  
 101d38b:	inc    DWORD PTR [eax]
 101d38d:	(bad)  
 101d38f:	inc    DWORD PTR [eax]
 101d391:	test   DWORD PTR [ecx-0x5b8aff01],esi
 101d397:	inc    DWORD PTR [eax]
 101d399:	dec    edx
 101d39a:	jnp    0x101d39b
 101d39c:	add    BYTE PTR [edx],al
 101d39e:	sbb    edi,edi
 101d3a0:	add    BYTE PTR [eax],al
 101d3a2:	add    BYTE PTR [eax],al
 101d3a4:	and    BYTE PTR [edi+0x55],0xff
 101d3a8:	stc    
 101d3a9:	jmp    0xffdf:0xe8f8ffe2
 101d3b0:	mul    esi
 101d3b2:	(bad)  
 101d3b4:	mul    bl
 101d3b6:	(bad)  
 101d3b8:	mul    cl
 101d3ba:	xlat   BYTE PTR ds:[ebx]
 101d3bb:	push   ebp
 101d3bd:	(bad)  
 101d3bf:	jmp    FWORD PTR [eax]
 101d3c1:	ja     0x101d346
 101d3c3:	jmp    FWORD PTR [ebx]
 101d3c5:	(bad)  
 101d3c6:	(bad)  
 101d3c7:	inc    DWORD PTR ds:0xfffff8
 101d3cd:	in     al,dx
 101d3ce:	(bad)  
 101d3cf:	inc    DWORD PTR [eax]
 101d3d1:	sahf   
 101d3d2:	int3   
 101d3d3:	inc    DWORD PTR [eax]
 101d3d5:	test   BYTE PTR [eax-0x6191ff01],dh
 101d3db:	inc    DWORD PTR [eax]
 101d3dd:	sbb    DWORD PTR ds:0xfc,esi
 101d3e3:	add    al,bh
 101d3e5:	out    0xde,al
 101d3e7:	(bad)  
 101d3e8:	stc    
 101d3e9:	in     eax,dx
 101d3ea:	out    0xff,al
 101d3ec:	clc    
 101d3ed:	jmp    0x101d3d3
 101d3ef:	(bad)  
 101d3f0:	clc    
 101d3f1:	call   0xe7fad3d7
 101d3f6:	fdivp  st(7),st
 101d3f8:	mul    esp
 101d3fa:	(bad)  
 101d3fc:	mul    edx
 101d3fe:	fdivr  st,st(7)
 101d400:	xor    eax,0x4fff8a7e
 101d405:	(bad)  
 101d406:	(bad)  
 101d407:	push   DWORD PTR ds:0xffffff
 101d40d:	in     eax,dx
 101d40e:	(bad)  
 101d40f:	inc    DWORD PTR [eax]
 101d411:	mov    esp,0xab00ffe9
 101d416:	aam    0xff
 101d418:	add    BYTE PTR [eax+0x2300ffbf],dl
 101d41e:	cmp    al,0xfc
 101d420:	add    BYTE PTR [eax],al
 101d422:	add    BYTE PTR [eax],al
 101d424:	jo     0x101d3c5
 101d426:	inc    eax
 101d427:	dec    DWORD PTR [ebp+0x70ff64b0]
 101d42d:	lahf   
 101d42e:	inc    eax
 101d42f:	(bad)  
 101d430:	cli    
 101d431:	jmp    0x101d417
 101d433:	(bad)  
 101d434:	jnp    0x101d3db
 101d436:	dec    esp
 101d437:	(bad)  
 101d438:	clc    
 101d439:	out    0xdf,eax
 101d43b:	inc    DWORD PTR [ebx+0x42ff55a8]
 101d441:	xchg   ecx,eax
 101d442:	fwait
 101d443:	jmp    FWORD PTR [ebx-0x1]
 101d446:	(bad)  
 101d447:	jmp    DWORD PTR [ebx]
 101d449:	out    0xef,eax
 101d44b:	jmp    DWORD PTR [esi-0x19]
 101d44e:	icebp  
 101d44f:	inc    DWORD PTR [eax]
 101d451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101d452:	(bad)  
 101d453:	inc    DWORD PTR [eax]
 101d455:	imul   ebx,DWORD PTR [ecx-0x1643ff01],0xffffffff
 101d45c:	add    BYTE PTR [edx],dh
 101d45e:	dec    ebp
 101d45f:	cld    
 101d460:	add    BYTE PTR [eax],al
 101d462:	add    BYTE PTR [eax],al
 101d464:	jo     0x101d405
 101d466:	inc    eax
 101d467:	(bad)  
 101d468:	sti    
 101d469:	repnz out dx,al
 101d46b:	(bad)  
 101d46c:	sti    
 101d46d:	icebp  
 101d46e:	in     al,dx
 101d46f:	(bad)  
 101d470:	cli    
 101d471:	out    dx,al
 101d472:	jmp    0x58ac5876
 101d477:	dec    DWORD PTR [ebp-0x7c009d51]
 101d47d:	test   eax,0x6813ff56
 101d482:	js     0x101d483
 101d484:	inc    esp
 101d485:	loopne 0x101d471
 101d487:	push   ebx
 101d489:	(bad)  
 101d48a:	(bad)  
 101d48b:	push   ecx
 101d48d:	(bad)  
 101d48e:	(bad)  
 101d48f:	call   FWORD PTR [edi+edi*8-0x1]
 101d493:	call   FWORD PTR [eax]
 101d495:	jmp    0x6c02d493
 101d49a:	cdq    
 101d49b:	inc    DWORD PTR [eax]
 101d49d:	pop    ss
 101d49e:	xor    eax,0xff
 101d4a3:	add    BYTE PTR [eax-0x61],dh
 101d4a6:	inc    eax
 101d4a7:	(bad)  
 101d4a8:	cld    
 101d4a9:	cmc    
 101d4aa:	repnz (bad) 
 101d4ac:	cld    
 101d4ad:	repz out dx,eax
 101d4af:	(bad)  
 101d4b0:	sti    
 101d4b1:	icebp  
 101d4b2:	in     al,dx
 101d4b3:	(bad)  
 101d4b4:	mov    edi,0x7affa1cd
 101d4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101d4ba:	dec    ebx
 101d4bb:	(bad)  
 101d4bc:	mov    esi,0x6cff9dca
 101d4c1:	xchg   BYTE PTR [edi+edi*8-0x3e5b98],dl
 101d4c8:	mov    eax,ds:0xffffe4cf
 101d4cd:	(bad)  
 101d4ce:	(bad)  
 101d4cf:	jmp    DWORD PTR [esi-0x1]
 101d4d2:	(bad)  
 101d4d3:	inc    DWORD PTR [eax]
 101d4d5:	(bad)  
 101d4d6:	jecxz  0x101d4d7
 101d4d8:	push   0xcffc1a4
 101d4dd:	sub    al,BYTE PTR [ecx-0x4e]
 101d4e0:	add    BYTE PTR [eax],al
 101d4e2:	add    BYTE PTR [eax],al
 101d4e4:	mov    al,ds:0xfcff77b8
 101d4e9:	div    ebp
 101d4eb:	(bad)  
 101d4ec:	cld    
 101d4ed:	div    dl
 101d4ef:	(bad)  
 101d4f0:	cld    
 101d4f1:	hlt    
 101d4f2:	lock (bad) 
 101d4f4:	sti    
 101d4f5:	repnz in eax,dx
 101d4f7:	(bad)  
 101d4f8:	jp     0x101d49f
 101d4fa:	dec    esp
 101d4fb:	(bad)  
 101d4fc:	cli    
 101d4fd:	out    dx,al
 101d4fe:	call   0xe6ecce02
 101d503:	call   eax
 101d505:	(bad)  
 101d506:	fdivr  st,st(7)
 101d508:	push   0xffc1a4
 101d50d:	imul   ebx,DWORD PTR [ecx-0x6694ff01],0xffffffff
 101d514:	push   0x3effc1a4
 101d519:	mov    dh,BYTE PTR [ebx+0x675e5a31]
 101d51f:	add    al,BYTE PTR [eax]
 101d521:	add    BYTE PTR [eax],al
 101d523:	add    al,bh
 101d525:	out    0xde,al
 101d527:	(bad)  
 101d528:	std    
 101d529:	stc    
 101d52a:	idiv   edi
 101d52c:	cld    
 101d52d:	clc    
 101d52e:	idiv   bh
 101d530:	std    
 101d531:	div    ah
 101d533:	(bad)  
 101d534:	cld    
 101d535:	hlt    
 101d536:	icebp  
 101d537:	(bad)  
 101d538:	sti    
 101d539:	repz out dx,al
 101d53b:	(bad)  
 101d53c:	sti    
 101d53d:	icebp  
 101d53e:	jmp    0x101d53f
 101d540:	cli    
 101d541:	out    dx,eax
 101d542:	jmp    0xe7eed046
 101d547:	jmp    esp
 101d549:	loopne 0x101d529
 101d54b:	(bad)  
 101d54c:	clc    
 101d54d:	call   0xd4f1d532
 101d552:	(bad)  
 101d553:	inc    DWORD PTR [eax]
	...
 101d561:	add    BYTE PTR [eax],al
 101d563:	add    BYTE PTR [eax-0x61],dh
 101d566:	inc    eax
 101d567:	jmp    FWORD PTR [ebp+0x70ff90c7]
 101d56d:	lahf   
 101d56e:	inc    eax
 101d56f:	(bad)  
 101d570:	std    
 101d571:	stc    
 101d572:	idiv   edi
 101d574:	mov    ?,WORD PTR [edx-0xa03009a]
 101d57a:	repnz dec DWORD PTR [esi-0x4009a4f]
 101d581:	repnz in eax,dx
 101d583:	jmp    FWORD PTR [eax-0x57007f6f]
 101d589:	xchg   ecx,eax
 101d58a:	cmp    bh,0xf9
 101d58d:	jmp    0x101d573
 101d58f:	(bad)  
 101d590:	out    dx,eax
 101d591:	rol    esi,cl
 101d593:	inc    DWORD PTR [eax]
	...
 101d5a1:	add    BYTE PTR [eax],al
 101d5a3:	add    BYTE PTR [esi+0x70ff9ac7],bh
 101d5a9:	lahf   
 101d5aa:	inc    eax
 101d5ab:	(bad)  
 101d5ac:	(bad)  
 101d5ad:	cld    
 101d5ae:	sti    
 101d5af:	(bad)  
 101d5b0:	(bad)  
 101d5b1:	sti    
 101d5b2:	stc    
 101d5b3:	dec    DWORD PTR [esi+0x66ff67b3]
 101d5b9:	cdq    
 101d5ba:	xor    edi,edi
 101d5bc:	mov    ?,WORD PTR [edx-0xb04009a]
 101d5c2:	lock (bad) 
 101d5c4:	sti    
 101d5c5:	repnz out dx,al
 101d5c7:	(bad)  
 101d5c8:	cli    
 101d5c9:	lock jmp 0x101d5cb
 101d5cc:	stc    
 101d5cd:	out    dx,al
 101d5ce:	jmp    0x364b39d2
 101d5d3:	inc    DWORD PTR [eax]
	...
 101d5e1:	add    BYTE PTR [eax],al
 101d5e3:	add    BYTE PTR [edi+0x70ff6cb3],dl
 101d5e9:	lahf   
 101d5ea:	inc    eax
 101d5eb:	(bad)  
 101d5ec:	(bad)  
 101d5ed:	(bad)  
 101d5ee:	std    
 101d5ef:	(bad)  
 101d5f0:	(bad)  
 101d5f1:	cld    
 101d5f2:	cld    
 101d5f3:	push   DWORD PTR [eax-0x60]
 101d5f6:	inc    eax
 101d5f7:	jmp    FWORD PTR [esi+eax*8-0x608f0071]
 101d5fe:	inc    eax
 101d5ff:	(bad)  
 101d600:	cld    
 101d601:	div    bl
 101d603:	jmp    DWORD PTR [edx+0x6cff7c8c]
 101d609:	push   ecx
 101d60a:	cmp    eax,0x3d516cff
 101d60f:	jmp    DWORD PTR [ebx+0x49]
 101d612:	xor    eax,0xff
	...
 101d623:	add    BYTE PTR [eax-0x61],dh
 101d626:	inc    eax
 101d627:	inc    edx
 101d629:	(bad)  
 101d62a:	lods   eax,DWORD PTR ds:[esi]
 101d62b:	push   DWORD PTR [eax-0x61]
 101d62e:	inc    eax
 101d62f:	(bad)  
 101d630:	(bad)  
 101d631:	(bad)  
 101d632:	(bad)  
 101d633:	(bad)  
 101d634:	jp     0x101d5dc
 101d636:	dec    esi
 101d637:	(bad)  
 101d638:	(bad)  
 101d639:	cld    
 101d63a:	sti    
 101d63b:	(bad)  
 101d63c:	jp     0x101d5e4
 101d63e:	dec    ebp
 101d63f:	(bad)  
 101d640:	std    
 101d641:	clc    
 101d642:	idiv   edi
 101d644:	mov    ds:0xe7ff7c8c,al
 101d649:	(bad)  
 101d64b:	jmp    DWORD PTR [ebx+0xff7d8d]
	...
 101d661:	add    BYTE PTR [eax],al
 101d663:	add    al,bh
 101d665:	out    0xde,al
 101d667:	(bad)  
 101d668:	(bad)  
 101d669:	(bad)  
 101d66a:	(bad)  
 101d66b:	(bad)  
 101d66c:	(bad)  
 101d66d:	(bad)  
 101d66e:	(bad)  
 101d66f:	(bad)  
 101d670:	(bad)  
 101d671:	(bad)  
 101d672:	(bad)  
 101d673:	(bad)  
 101d674:	(bad)  
 101d675:	(bad)  
 101d676:	(bad)  
 101d677:	(bad)  
 101d678:	(bad)  
 101d679:	std    
 101d67a:	std    
 101d67b:	(bad)  
 101d67c:	(bad)  
 101d67d:	cld    
 101d67e:	sti    
 101d67f:	(bad)  
 101d680:	(bad)  
 101d681:	sti    
 101d682:	cli    
 101d683:	jmp    DWORD PTR [edx-0x5c008374]
 101d689:	lea    edi,[ebp-0x1]
	...
 101d6a4:	ret    0xa0ae
 101d6a7:	(bad)  
 101d6a8:	mov    ebp,0xb8ff9ba8
 101d6ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101d6ae:	xchg   ebp,eax
 101d6af:	push   DWORD PTR [ebx-0x51006f61]
 101d6b5:	cdq    
 101d6b6:	mov    bh,bh
 101d6b8:	test   al,0x93
 101d6ba:	cmp    edi,0xffffffa3
 101d6bd:	lea    edi,[ebp-0x1]
 101d6c0:	popf   
 101d6c1:	xchg   BYTE PTR [esi-0x1],dh
 101d6c4:	xchg   edi,eax
 101d6c5:	sub    BYTE PTR [edi-0x1],0x0
	...
 101d6dd:	add    BYTE PTR [eax],al
 101d6df:	add    BYTE PTR [eax-0x80000000],al
 101d6e5:	add    BYTE PTR [eax],al
 101d6e7:	add    BYTE PTR [eax-0x80000000],al
 101d6ed:	add    BYTE PTR [eax],al
 101d6ef:	add    BYTE PTR [eax-0x80000000],al
 101d6f5:	add    BYTE PTR [eax],al
 101d6f7:	add    BYTE PTR [eax-0x80000000],al
 101d6fd:	add    BYTE PTR [eax],al
 101d6ff:	add    BYTE PTR [eax-0x80000000],al
 101d705:	pop    es
 101d706:	add    BYTE PTR [eax],al
 101d708:	add    BYTE PTR [edi],0x0
 101d70b:	add    BYTE PTR [eax-0x7ffffff9],al
 101d711:	pop    es
 101d712:	add    BYTE PTR [eax],al
 101d714:	or     BYTE PTR [edi],0x0
 101d717:	add    BYTE PTR [eax-0x7fffffe1],al
 101d71d:	aas    
 101d71e:	add    BYTE PTR [eax],al
 101d720:	sub    BYTE PTR [eax],al
 101d722:	add    BYTE PTR [eax],al
 101d724:	and    BYTE PTR [eax],al
 101d726:	add    BYTE PTR [eax],al
 101d728:	inc    eax
 101d729:	add    BYTE PTR [eax],al
 101d72b:	add    BYTE PTR [ecx],al
 101d72d:	add    BYTE PTR [eax],cl
 101d72f:	add    BYTE PTR [eax],al
 101d731:	add    BYTE PTR [eax],al
 101d733:	add    BYTE PTR [eax],al
 101d735:	add    al,0x0
	...
 101d73f:	add    BYTE PTR [eax],al
 101d741:	add    DWORD PTR [eax],eax
 101d743:	add    BYTE PTR [eax],al
 101d745:	add    DWORD PTR [eax],eax
 101d747:	add    BYTE PTR [eax],al
 101d749:	add    BYTE PTR [eax],al
 101d74b:	add    BYTE PTR [ebx+0x49],ah
 101d74e:	xor    eax,0x52473800
 101d753:	add    BYTE PTR [esi],bh
 101d755:	push   esp
 101d756:	bound  eax,QWORD PTR [eax]
 101d758:	outs   dx,BYTE PTR ds:[esi]
 101d759:	push   ebp
 101d75a:	inc    edx
 101d75b:	add    BYTE PTR [edx+0x59],dh
 101d75e:	inc    esi
 101d75f:	add    BYTE PTR [ebp+0x5c],dh
 101d762:	dec    edx
 101d763:	add    BYTE PTR [eax+0x5f],bh
 101d766:	dec    ebp
 101d767:	add    BYTE PTR [ebx+eiz*2+0x51],bh
 101d76b:	add    BYTE PTR [esi+0x66],bh
 101d76e:	push   ebp
 101d76f:	add    BYTE PTR [edi+0x73],bl
 101d772:	jnp    0x101d774
 101d774:	push   0x6900766d
 101d779:	jb     0x101d7f3
 101d77b:	add    BYTE PTR [esi+0x74],ch
 101d77e:	jge    0x101d780
 101d780:	sub    DWORD PTR [eax+0x56],0x596a8300
 101d787:	add    BYTE PTR [ebx+ebp*2+0x6e860059],al
 101d78e:	pop    ebx
 101d78f:	add    BYTE PTR [esi-0x76ffa393],al
 101d795:	jo     0x101d7f5
 101d797:	add    BYTE PTR [edx-0x72ff9e8e],cl
 101d79d:	jne    0x101d803
 101d79f:	add    BYTE PTR [edi-0x6eff9888],cl
 101d7a5:	jns    0x101d810
 101d7a7:	add    BYTE PTR [ebp-0x67ff9383],dl
 101d7ad:	xor    DWORD PTR [ecx+0x0],0x73849b
 101d7b4:	popf   
 101d7b5:	xchg   BYTE PTR [ebp+0x0],dh
 101d7b8:	lahf   
 101d7b9:	mov    DWORD PTR [ecx+0x0],edi
 101d7bc:	mov    al,ds:0xa4007888
 101d7c1:	mov    bh,BYTE PTR [eax+0x0]
 101d7c4:	mov    ds:0xa2007b8c,al
 101d7c9:	mov    WORD PTR [eax+eax*1-0x5c],?
 101d7cd:	mov    ?,WORD PTR [esi+0x0]
 101d7d0:	push   es
 101d7d1:	ja     0x101d766
 101d7d3:	add    BYTE PTR [esi],al
 101d7d5:	ja     0x101d76b
 101d7d7:	add    BYTE PTR [esi],bl
 101d7d9:	je     0x101d774
 101d7db:	add    BYTE PTR [ebp+0x76],ch
 101d7de:	add    DWORD PTR [eax],0x857b73
 101d7e4:	stos   BYTE PTR es:[edi],al
 101d7e5:	pop    ds
 101d7e6:	stos   BYTE PTR es:[edi],al
 101d7e7:	add    BYTE PTR [edi-0x4bff50d3],ch
 101d7ed:	cmp    dh,BYTE PTR [ecx-0x49ad4200]
 101d7f3:	add    BYTE PTR [edi-0x3fff46ab],bh
 101d7f9:	push   edi
 101d7fa:	mov    esp,0xbe59c000
 101d7ff:	add    al,al
 101d801:	pop    edx
 101d802:	rol    BYTE PTR [eax],0xc5
 101d805:	retw   0xca00
 101d809:	jae    0x101d7cf
 101d80b:	add    BYTE PTR ds:0x4009d80,al
 101d811:	mov    ch,BYTE PTR [eax-0x5773fc00]
 101d817:	add    BYTE PTR [ebx],al
 101d819:	xchg   esi,eax
 101d81a:	mov    dl,0x0
 101d81c:	add    al,0x96
 101d81e:	mov    dl,0x0
 101d820:	add    ah,BYTE PTR [ecx-0x7d8cff42]
 101d826:	mov    es,WORD PTR [eax]
 101d828:	jne    0x101d7b4
 101d82a:	xchg   edx,eax
 101d82b:	add    BYTE PTR [ecx-0x74],bh
 101d82e:	xchg   esi,eax
 101d82f:	add    BYTE PTR [edx-0x70],bh
 101d832:	cwde   
 101d833:	add    BYTE PTR [edx],al
 101d835:	lods   al,BYTE PTR ds:[esi]
 101d836:	enter  0x100,0xb7
 101d83a:	rol    BYTE PTR [eax],cl
 101d83c:	add    DWORD PTR [eax-0x3fffff2e],edi
 101d842:	fiadd  DWORD PTR [eax]
 101d844:	add    dh,al
 101d846:	loopne 0x101d848
 101d848:	or     ecx,ebp
 101d84a:	jecxz  0x101d84c
 101d84c:	adc    al,0xd2
 101d84e:	out    0x0,al
 101d850:	and    dh,dl
 101d852:	jmp    0x3c00:0xecdc2e00
 101d859:	loop   0x101d84b
 101d85b:	add    BYTE PTR [eax-0x3b],bl
 101d85e:	into   
 101d85f:	add    BYTE PTR [ebx-0x18],cl
 101d862:	repnz add BYTE PTR [eax+ebp*8-0xe],cl
 101d867:	add    BYTE PTR [ebx-0x12],bl
 101d86a:	test   BYTE PTR [eax],0x5c
 101d86d:	in     eax,dx
 101d86e:	test   DWORD PTR [eax],0xf7f066
 101d874:	imul   esi,ebx,0xf17500f9
 101d87a:	test   DWORD PTR [eax],0xf8f175
 101d880:	ja     0x101d87a
 101d882:	cld    
 101d883:	add    BYTE PTR [eax-0x7],bh
 101d886:	sti    
 101d887:	add    BYTE PTR [esi-0x56ff7e70],ah
 101d88d:	xchg   ecx,eax
 101d88e:	add    DWORD PTR [eax],0x8493ab
 101d894:	test   eax,0xac008494
 101d899:	xchg   esi,eax
 101d89a:	xchg   BYTE PTR [eax],al
 101d89c:	lods   eax,DWORD PTR ds:[esi]
 101d89d:	cdq    
 101d89e:	mov    DWORD PTR [eax],eax
 101d8a0:	mov    cl,0x99
 101d8a2:	mov    DWORD PTR [eax],eax
 101d8a4:	mov    al,0x9b
 101d8a6:	lea    eax,[eax]
 101d8a8:	mov    dl,0x9c
 101d8aa:	lea    eax,[eax]
 101d8ac:	mov    ah,0x9c
 101d8ae:	mov    es,WORD PTR [eax]
 101d8b0:	mov    bl,0x9f
 101d8b2:	nop
 101d8b3:	add    BYTE PTR [ebp-0x49ff6f61],dh
 101d8b9:	mov    al,ds:0xa2b70091
 101d8be:	xchg   esp,eax
 101d8bf:	add    BYTE PTR [eax-0x47ff6d5e],bh
 101d8c5:	mov    ds:0xa4b90094,eax
 101d8ca:	xchg   esi,eax
 101d8cb:	add    BYTE PTR [ebp+eiz*4-0x5945ff69],bh
 101d8d2:	cwde   
 101d8d3:	add    BYTE PTR [ebp-0x42ff675a],bh
 101d8d9:	test   al,0x9a
 101d8db:	add    BYTE PTR [esi-0x2fff6356],bh
 101d8e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101d8e2:	pop    DWORD PTR [eax]
 101d8e4:	shr    DWORD PTR [edx-0x543fff65],0x9c
 101d8eb:	add    al,al
 101d8ed:	lods   al,BYTE PTR ds:[esi]
 101d8ee:	lahf   
 101d8ef:	add    al,dl
 101d8f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101d8f2:	xchg   ecx,eax
 101d8f3:	add    dl,dl
 101d8f5:	test   al,0x93
 101d8f7:	add    dl,dl
 101d8f9:	stos   BYTE PTR es:[edi],al
 101d8fa:	xchg   esi,eax
 101d8fb:	add    ah,dl
 101d8fd:	stos   DWORD PTR es:[edi],eax
 101d8fe:	xchg   edi,eax
 101d8ff:	add    ah,dl
 101d901:	lods   eax,DWORD PTR ds:[esi]
 101d902:	call   0xc200:0x9db0d600
 101d909:	scas   al,BYTE PTR es:[edi]
 101d90a:	mov    al,ds:0xa3b1c500
 101d90f:	add    bh,al
 101d911:	mov    cl,0xa5
 101d913:	add    cl,cl
 101d915:	mov    ah,0xa9
 101d917:	add    bh,dl
 101d919:	mov    bl,0xa0
 101d91b:	add    bh,dl
 101d91d:	mov    ch,0xa3
 101d91f:	add    al,bl
 101d921:	mov    ch,0xa3
 101d923:	add    al,bl
 101d925:	mov    bh,0xa5
 101d927:	add    dl,bl
 101d929:	mov    ecx,0xbada00a7
 101d92e:	test   eax,0xacbcdb00
 101d933:	add    ah,bl
 101d935:	mov    esi,0xc1de00ae
 101d93a:	mov    cl,0x0
 101d93c:	ffreep st(4)
 101d93e:	mov    dh,0x0
 101d940:	aad    0xc5
 101d942:	mov    esp,0xb8c7e000
 101d947:	add    al,dh
 101d949:	into   
 101d94a:	mov    ebp,0xc780cf00
 101d94f:	add    bl,dl
 101d951:	mov    ah,al
 101d953:	add    ah,dl
 101d955:	mov    ebp,eax
 101d957:	add    al,dl
 101d959:	or     dl,0x0
 101d95c:	aam    0x8b
 101d95e:	enter  0xdc00,0x9e
 101d962:	lds    eax,FWORD PTR [eax]
 101d964:	(bad)  
 101d965:	xchg   edx,eax
 101d966:	rol    BYTE PTR [eax],cl
 101d968:	frstor [esp+ecx*8-0x295f2500]
 101d96f:	add    bh,bl
 101d971:	test   al,0xd3
 101d973:	add    ah,bl
 101d975:	mov    ds:0xace000d8,al
 101d97a:	xlat   BYTE PTR ds:[ebx]
 101d97b:	add    ah,ah
 101d97d:	mov    ah,0xd5
 101d97f:	add    BYTE PTR [eax-0x77ff070d],cl
 101d985:	hlt    
 101d986:	clc    
 101d987:	add    BYTE PTR [ebx-0x7bff0104],al
 101d98d:	cld    
 101d98e:	inc    BYTE PTR [eax]
 101d990:	mov    edi,?
 101d992:	inc    DWORD PTR [eax]
 101d994:	icebp  
 101d995:	rol    cl,1
 101d997:	add    dl,dh
 101d999:	rol    esp,cl
 101d99b:	add    bl,dh
 101d99d:	aad    0xc7
 101d99f:	add    bl,dh
 101d9a1:	(bad)  
 101d9a2:	enter  0xf300,0xd8
 101d9a6:	retf   
 101d9a7:	add    ah,dh
 101d9a9:	fmul   st,st(2)
 101d9ab:	add    bl,dh
 101d9ad:	fxch   st(4)
 101d9af:	add    ah,dh
 101d9b1:	fcmove st,st(5)
 101d9b3:	add    ch,dh
 101d9b5:	fmul   st(7),st
 101d9b7:	add    al,ch
 101d9b9:	rcl    ch,0x0
 101d9bc:	in     eax,dx
 101d9bd:	retf   0xd4
 101d9c0:	out    dx,al
 101d9c1:	iret   
 101d9c2:	fild   DWORD PTR [eax]
 101d9c4:	jecxz  0x101d9a0
 101d9c6:	rol    DWORD PTR [eax],cl
 101d9c8:	hlt    
 101d9c9:	fst    st(1)
 101d9cb:	add    ch,dh
 101d9cd:	(bad)  
 101d9cf:	add    ch,dh
 101d9d1:	loopne 0x101d9a8
 101d9d3:	add    dh,dh
 101d9d5:	loop   0x101d9af
 101d9d7:	add    dh,dh
 101d9d9:	in     al,0xdb
 101d9db:	add    bh,dh
 101d9dd:	out    0xdd,al
 101d9df:	add    al,bh
 101d9e1:	out    0xdd,al
 101d9e3:	add    al,ch
 101d9e5:	shl    ebp,0x0
 101d9e8:	jmp    0x101d9b3
 101d9ea:	loope  0x101d9ec
 101d9ec:	call   0xf002c2b4
 101d9f1:	shl    ecx,cl
 101d9f3:	add    bh,bl
 101d9f5:	loop   0x101d9dd
 101d9f7:	add    al,bh
 101d9f9:	jmp    0xebfadadf
 101d9fe:	in     al,0x0
 101da00:	stc    
 101da01:	in     al,dx
 101da02:	in     eax,0x0
 101da04:	repz out dx,eax
 101da06:	in     eax,dx
 101da07:	add    cl,bh
 101da09:	out    dx,al
 101da0a:	call   0xebf2d40f
 101da0f:	add    dl,bh
 101da11:	icebp  
 101da12:	in     eax,dx
 101da13:	add    ah,bh
 101da15:	icebp  
 101da16:	in     eax,dx
 101da17:	add    cl,ah
 101da19:	std    
 101da1a:	std    
 101da1b:	add    bl,bh
 101da1d:	hlt    
 101da1e:	lock add ah,bh
 101da21:	cmc    
 101da22:	icebp  
 101da23:	add    ah,bh
 101da25:	div    ah
 101da27:	add    ah,bh
 101da29:	clc    
 101da2a:	cmc    
 101da2b:	add    dl,dh
 101da2d:	(bad)  
 101da2e:	inc    BYTE PTR [eax]
 101da30:	std    
 101da31:	cli    
 101da32:	stc    
 101da33:	add    dh,bh
 101da35:	cld    
 101da36:	cli    
 101da37:	add    dh,bh
 101da39:	(bad)  
 101da3a:	inc    BYTE PTR [eax]
	...
 101db5c:	add    BYTE PTR [eax],al
 101db5e:	stos   DWORD PTR es:[edi],eax
 101db5f:	add    eax,DWORD PTR [edx]
 101db61:	add    BYTE PTR [eax],al
 101db63:	stos   DWORD PTR es:[edi],eax
	...
 101db7c:	stos   DWORD PTR es:[edi],eax
 101db7d:	add    eax,DWORD PTR [ebx]
 101db7f:	inc    ecx
 101db80:	inc    eax
 101db81:	xor    dh,BYTE PTR [ecx]
 101db83:	add    BYTE PTR [eax],al
 101db85:	stos   DWORD PTR es:[edi],eax
 101db86:	add    BYTE PTR [eax],al
 101db88:	add    BYTE PTR [esi],cl
 101db8a:	add    DWORD PTR [ecx],eax
 101db8c:	add    DWORD PTR [ecx],eax
 101db8e:	add    DWORD PTR [ecx],eax
 101db90:	add    DWORD PTR [ecx],eax
 101db92:	add    DWORD PTR [ecx],eax
 101db94:	add    DWORD PTR [ecx],eax
 101db96:	add    DWORD PTR [ecx],eax
 101db98:	add    DWORD PTR [ecx],eax
 101db9a:	add    DWORD PTR [ebx],ecx
 101db9c:	add    eax,DWORD PTR [ebx+eax*2+0x42]
 101dba0:	inc    ecx
 101dba1:	xor    eax,0x223132
 101dba6:	or     al,BYTE PTR [eax]
 101dba8:	add    BYTE PTR [eax],dl
 101dbaa:	call   0x7777:0x7b7b7b7c
 101dbb1:	ja     0x101dc27
 101dbb3:	outs   dx,DWORD PTR ds:[esi]
 101dbb4:	outs   dx,DWORD PTR ds:[esi]
 101dbb5:	outs   dx,BYTE PTR ds:[esi]
 101dbb6:	ins    DWORD PTR es:[edi],dx
 101dbb7:	ins    DWORD PTR es:[edi],dx
 101dbb8:	ins    DWORD PTR es:[edi],dx
 101dbb9:	data16 data16 or al,0x48
 101dbbd:	inc    esi
 101dbbe:	inc    esp
 101dbbf:	inc    ebx
 101dbc0:	inc    edx
 101dbc1:	ss xor eax,0x2223132
 101dbc7:	add    BYTE PTR [eax],al
 101dbc9:	adc    BYTE PTR [eax-0x5b515150],ah
 101dbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dbd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dbd1:	mov    al,ds:0x9a9aa0a2
 101dbd6:	xchg   ebp,eax
 101dbd7:	xchg   ebp,eax
 101dbd8:	xchg   ebx,eax
 101dbd9:	add    BYTE PTR [eax+0x46494b0c],0x44
 101dbe0:	inc    ebx
 101dbe1:	cmp    esi,DWORD PTR [esi]
 101dbe3:	xor    eax,0x23132
 101dbe8:	add    BYTE PTR [ebx],dl
 101dbea:	mov    al,ds:0xaeaeaeb2
 101dbef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dbf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dbf2:	mov    ds:0x979aa0a0,al
 101dbf7:	xchg   ebp,eax
 101dbf8:	xchg   ebp,eax
 101dbf9:	xchg   ebp,eax
 101dbfa:	and    BYTE PTR ds:0x46484b4f,0x44
 101dc01:	cmp    al,0x3b
 101dc03:	ss xor eax,0x232
 101dc09:	adc    al,0xa2
 101dc0b:	mov    dl,0xb2
 101dc0d:	mov    al,0xae
 101dc0f:	scas   al,BYTE PTR es:[edi]
 101dc10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dc11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dc12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dc14:	mov    al,ds:0x959a9aa0
 101dc19:	xchg   ebp,eax
 101dc1a:	and    BYTE PTR [esi],0x91
 101dc1d:	dec    esi
 101dc1e:	dec    ebx
 101dc1f:	dec    eax
 101dc20:	inc    esi
 101dc21:	ds cmp eax,0x235363b
 101dc27:	add    BYTE PTR [eax],al
 101dc29:	adc    al,0xa4
 101dc2b:	mov    bh,0x67
 101dc2d:	addr16 popa 
 101dc2f:	popa   
 101dc30:	pop    eax
 101dc31:	push   esp
 101dc32:	push   eax
 101dc33:	sbb    eax,0x1417191d
 101dc38:	push   cs
 101dc39:	or     BYTE PTR [esi],al
 101dc3b:	aaa    
 101dc3c:	xchg   edx,eax
 101dc3d:	xchg   edx,eax
 101dc3e:	xchg   ecx,eax
 101dc3f:	dec    esi
 101dc40:	inc    ebp
 101dc41:	xor    bh,BYTE PTR [edi]
 101dc43:	ds cmp eax,0x23b
 101dc49:	pop    ss
 101dc4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dc4b:	mov    bh,0xb7
 101dc4d:	mov    dl,0xb0
 101dc4f:	scas   al,BYTE PTR es:[edi]
 101dc50:	scas   al,BYTE PTR es:[edi]
 101dc51:	scas   al,BYTE PTR es:[edi]
 101dc52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dc54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dc55:	mov    al,ds:0x979aa0a0
 101dc5a:	xchg   ebp,eax
 101dc5b:	cmp    dl,BYTE PTR [edx-0x4bbaba6e]
 101dc61:	mov    ?,WORD PTR [edx]
 101dc63:	xor    bh,BYTE PTR [esi]
 101dc65:	cmp    eax,0x17000002
 101dc6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dc6b:	mov    eax,0xb2b2b7b7
 101dc70:	scas   al,BYTE PTR es:[edi]
 101dc71:	scas   al,BYTE PTR es:[edi]
 101dc72:	scas   al,BYTE PTR es:[edi]
 101dc73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dc74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dc75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dc76:	mov    ds:0x979aa0a0,al
 101dc7b:	cmp    BYTE PTR [ebp+0x45],al
 101dc7e:	mov    esp,0x4d8eb4b9
 101dc83:	dec    edx
 101dc84:	xor    dh,BYTE PTR [edx]
 101dc86:	add    al,BYTE PTR [eax]
 101dc88:	add    BYTE PTR [edi],dl
 101dc8a:	scas   al,BYTE PTR es:[edi]
 101dc8b:	mov    esp,0x61676767
 101dc90:	pop    esp
 101dc91:	pop    eax
 101dc92:	push   esp
 101dc93:	sbb    eax,0x1419191d
 101dc98:	adc    ecx,DWORD PTR [ecx]
 101dc9a:	pop    es
 101dc9b:	cmp    DWORD PTR [esp+edi*4],esp
 101dc9e:	mov    esp,0x4d8eb4b9
 101dca3:	dec    edx
 101dca4:	dec    eax
 101dca5:	and    al,0x2
 101dca7:	add    BYTE PTR [eax],al
 101dca9:	sbb    DWORD PTR [esi-0x48474748],ebp
 101dcaf:	mov    dl,0xb2
 101dcb1:	mov    al,0xae
 101dcb3:	scas   al,BYTE PTR es:[edi]
 101dcb4:	scas   al,BYTE PTR es:[edi]
 101dcb5:	lods   al,BYTE PTR ds:[esi]
 101dcb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dcb8:	mov    ds:0xab9aa0a0,al
 101dcbd:	and    al,0x24
 101dcbf:	mov    ecx,0x244c8eb4
 101dcc4:	and    al,0xab
 101dcc6:	add    BYTE PTR [eax],al
 101dcc8:	add    BYTE PTR [ecx],bl
 101dcca:	scas   al,BYTE PTR es:[edi]
 101dccb:	mov    esp,0xb8b8b8bc
 101dcd0:	mov    bh,0xb2
 101dcd2:	mov    dl,0xae
 101dcd4:	scas   al,BYTE PTR es:[edi]
 101dcd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dcd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dcd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dcd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dcd9:	mov    al,ds:0x979aa0a0
 101dcde:	stos   DWORD PTR es:[edi],eax
 101dcdf:	and    al,0x24
 101dce1:	and    al,0x24
 101dce3:	stos   DWORD PTR es:[edi],eax
 101dce4:	add    BYTE PTR [eax],al
 101dce6:	add    BYTE PTR [eax],al
 101dce8:	add    BYTE PTR [ecx],bl
 101dcea:	scas   al,BYTE PTR es:[edi]
 101dceb:	mov    esp,0x27272ebc
 101dcf0:	sub    al,0xb2
 101dcf2:	daa    
 101dcf3:	stos   BYTE PTR es:[edi],al
 101dcf4:	sub    DWORD PTR [ebp-0x5bd577d4],ecx
 101dcfa:	sub    al,BYTE PTR [esi+0x16f9a9a]
 101dd00:	stos   DWORD PTR es:[edi],eax
 101dd01:	stos   DWORD PTR es:[edi],eax
 101dd02:	add    BYTE PTR [eax],al
 101dd04:	add    BYTE PTR [eax],al
 101dd06:	add    BYTE PTR [eax],al
 101dd08:	add    BYTE PTR ds:0x2ebcbcb2,bl
 101dd0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101dd0f:	mov    esp,0x8c27892e
 101dd14:	sub    DWORD PTR [edx+ebp*1+0x2a822ba6],ecx
 101dd1b:	mov    ds:0x174a0a0,al
	...
 101dd28:	add    BYTE PTR [edx+esi*4],bl
 101dd2b:	mov    esp,0xb8a72ebc
 101dd30:	xchg   DWORD PTR [edi-0x7ecf7bd9],eax
 101dd36:	sub    ebp,DWORD PTR [esi-0x5b62d864]
 101dd3c:	mov    al,ds:0x177a0
	...
 101dd49:	sbb    eax,0x2ebcbcb7
 101dd4e:	test   eax,0x278b2ebc
 101dd53:	das    
 101dd54:	test   al,0x2c
 101dd56:	sub    esi,DWORD PTR [eax-0x5b7dd67b]
 101dd5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101dd5d:	mov    al,ds:0x177
 101dd62:	add    BYTE PTR [eax],al
 101dd64:	add    BYTE PTR [eax],al
 101dd66:	add    BYTE PTR [eax],al
 101dd68:	add    BYTE PTR ds:0x2ebcbcb8,bl
 101dd6e:	daa    
 101dd6f:	daa    
 101dd70:	cs mov esp,0x28b72f27
 101dd76:	sub    al,0xaa
 101dd78:	sub    DWORD PTR [esi-0x5b5b62d7],ebx
 101dd7e:	ja     0x101dd81
	...
 101dd88:	add    BYTE PTR [edi+esi*4-0x44],dl
 101dd8c:	mov    esp,0xbcbcbcbc
 101dd91:	mov    esp,0xb7b7bcb8
 101dd96:	mov    dl,0xb2
 101dd98:	mov    al,0xae
 101dd9a:	scas   al,BYTE PTR es:[edi]
 101dd9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dd9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dd9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101dd9e:	jnp    0x101dda1
	...
 101dda8:	add    BYTE PTR [eax+edi*4-0x44],dl
 101ddac:	mov    esp,0xbcbcbcbc
 101ddb1:	mov    esp,0xb8b8b8bc
 101ddb6:	mov    bh,0xb2
 101ddb8:	mov    dl,0xb0
 101ddba:	scas   al,BYTE PTR es:[edi]
 101ddbb:	scas   al,BYTE PTR es:[edi]
 101ddbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101ddbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101ddbe:	js     0x101ddc1
	...
 101ddc8:	add    BYTE PTR [esp+edi*4-0x44],dl
 101ddcc:	addr16 addr16 addr16 arpl WORD PTR [bx+di+0x58],sp
 101ddd3:	push   esp
 101ddd4:	push   eax
 101ddd5:	sbb    eax,0x10141719
 101ddda:	or     DWORD PTR ds:0x17ba604,eax
	...
 101dde8:	add    BYTE PTR [ebp-0x44],dl
 101ddeb:	mov    esp,0xbcbcbcbc
 101ddf0:	mov    esp,0xbcbcbcbc
 101ddf5:	mov    eax,0xb2b7b8b8
 101ddfa:	mov    dl,0xb0
 101ddfc:	scas   al,BYTE PTR es:[edi]
 101ddfd:	scas   al,BYTE PTR es:[edi]
 101ddfe:	jl     0x101de01
	...
 101de08:	add    BYTE PTR [eax-0x44],bl
 101de0b:	mov    esp,0xbcbcbcbc
 101de10:	mov    esp,0xbcbcbcbc
 101de15:	mov    esp,0xb7b7b8b8
 101de1a:	mov    dl,0xb2
 101de1c:	scas   al,BYTE PTR es:[edi]
 101de1d:	scas   al,BYTE PTR es:[edi]
 101de1e:	jl     0x101de21
	...
 101de28:	add    BYTE PTR [eax-0x44],bl
 101de2b:	mov    esp,0x67676767
 101de30:	fs popa 
 101de32:	pop    ebx
 101de33:	pop    eax
 101de34:	push   ecx
 101de35:	sbb    eax,0x1016171d
 101de3a:	or     DWORD PTR [edi],eax
 101de3c:	add    eax,0x17db0
	...
 101de49:	pop    esp
 101de4a:	mov    esp,0xbcbcbcbc
 101de4f:	mov    esp,0xbcbcbcbc
 101de54:	mov    esp,0xb8bcbcbc
 101de59:	mov    eax,0xb2b2b7b7
 101de5e:	jge    0x101de61
	...
 101de68:	add    BYTE PTR [ecx-0x44],ah
 101de6b:	mov    esp,0xbcbcbcbc
 101de70:	mov    esp,0xbcbcbcbc
 101de75:	mov    esp,0xb8bcbcbc
 101de7a:	mov    eax,0x1d566173
 101de7f:	add    DWORD PTR [eax],eax
	...
 101de89:	popa   
 101de8a:	mov    esp,0x676767bc
 101de8f:	addr16 addr16 popa 
 101de92:	popa   
 101de93:	pop    eax
 101de94:	pop    eax
 101de95:	pop    eax
 101de96:	mov    esp,0x19bcbcbc
 101de9b:	add    DWORD PTR [ecx],eax
 101de9d:	add    DWORD PTR [ecx],eax
 101de9f:	add    DWORD PTR [eax],eax
	...
 101dea9:	fs mov esp,0xbcbcbcbc
 101deaf:	mov    esp,0xbcbcbcbc
 101deb4:	mov    esp,0xbcbcbcbc
 101deb9:	mov    esp,0x59727e1d
 101debe:	sbb    eax,0x0
 101dec3:	add    BYTE PTR [eax],al
 101dec5:	add    BYTE PTR [eax],al
 101dec7:	add    BYTE PTR [eax],al
 101dec9:	fs mov esp,0xbcbcbcbc
 101decf:	mov    esp,0xbcbcbcbc
 101ded4:	mov    esp,0xbcbcbcbc
 101ded9:	mov    esp,0x1d7e9f1d
	...
 101dee6:	add    BYTE PTR [eax],al
 101dee8:	add    BYTE PTR [eax-0x44],dh
 101deeb:	mov    esp,0xbcbcbcbc
 101def0:	mov    esp,0xbcbcbcbc
 101def5:	mov    esp,0xbcbcbcbc
 101defa:	push   eax
 101defb:	scas   eax,DWORD PTR es:[edi]
 101defc:	sbb    eax,0x0
	...
 101df09:	jo     0x101dec7
 101df0b:	mov    esp,0xbcbcbcbc
 101df10:	mov    eax,0xb2b2b7b8
 101df15:	scas   al,BYTE PTR es:[edi]
 101df16:	scas   al,BYTE PTR es:[edi]
 101df17:	scas   al,BYTE PTR es:[edi]
 101df18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101df19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101df1a:	push   eax
 101df1b:	push   esp
	...
 101df28:	add    BYTE PTR [ecx+0x70],dh
 101df2b:	jo     0x101df94
 101df2d:	fs arpl WORD PTR fs:[ecx+0x61],sp
 101df32:	pop    esp
 101df33:	pop    esp
 101df34:	pop    edx
 101df35:	pop    ebx
 101df36:	push   ebp
 101df37:	push   ebp
 101df38:	push   ebp
 101df39:	push   esp
 101df3a:	push   esp
	...
 101df47:	add    bh,bh
 101df49:	(bad)  
 101df4a:	cld    
 101df4b:	ud0    edi,edi
 101df4e:	lock add eax,DWORD PTR [eax-0x7fff0000]
 101df55:	add    BYTE PTR [eax],al
 101df57:	add    DWORD PTR [eax-0x7fff0000],eax
 101df5d:	add    BYTE PTR [eax],al
 101df5f:	add    DWORD PTR [eax-0x7fff0000],eax
 101df65:	add    BYTE PTR [eax],al
 101df67:	add    DWORD PTR [eax-0x7fff0000],eax
 101df6d:	add    BYTE PTR [eax],al
 101df6f:	add    DWORD PTR [eax-0x7fff0000],eax
 101df75:	add    BYTE PTR [eax],al
 101df77:	add    eax,DWORD PTR [eax-0x7ff10000]
 101df7d:	add    BYTE PTR [eax],al
 101df7f:	aas    
 101df80:	add    BYTE PTR [eax],0x0
 101df83:	inc    DWORD PTR [eax-0x7f010000]
 101df89:	add    BYTE PTR [eax],al
 101df8b:	inc    DWORD PTR [eax-0x7f010000]
 101df91:	add    BYTE PTR [eax],al
 101df93:	inc    DWORD PTR [eax-0x7f010000]
 101df99:	add    BYTE PTR [eax],al
 101df9b:	inc    DWORD PTR [eax-0x7f010000]
 101dfa1:	add    BYTE PTR [eax],al
 101dfa3:	inc    DWORD PTR [eax-0x7f010000]
 101dfa9:	add    BYTE PTR [eax],al
 101dfab:	inc    DWORD PTR [eax-0x7f010000]
 101dfb1:	add    BYTE PTR [eax],al
 101dfb3:	inc    DWORD PTR [eax-0x7f00ff00]
 101dfb9:	add    BYTE PTR [ebx],al
 101dfbb:	inc    DWORD PTR [eax-0x7f00f900]
 101dfc1:	add    BYTE PTR [edi],cl
 101dfc3:	inc    DWORD PTR [eax+0x28ff1f00]
 101dfc9:	add    BYTE PTR [eax],al
 101dfcb:	add    BYTE PTR [eax],dl
 101dfcd:	add    BYTE PTR [eax],al
 101dfcf:	add    BYTE PTR [eax],ah
 101dfd1:	add    BYTE PTR [eax],al
 101dfd3:	add    BYTE PTR [ecx],al
 101dfd5:	add    BYTE PTR [eax],cl
 101dfd7:	add    BYTE PTR [eax],al
 101dfd9:	add    BYTE PTR [eax],al
 101dfdb:	add    BYTE PTR [eax],al
 101dfdd:	add    DWORD PTR [eax],eax
	...
 101dfe7:	add    BYTE PTR [eax],al
 101dfe9:	add    DWORD PTR [eax],eax
 101dfeb:	add    BYTE PTR [eax],al
 101dfed:	add    DWORD PTR [eax],eax
 101dfef:	add    BYTE PTR [eax],al
 101dff1:	add    BYTE PTR [eax],al
 101dff3:	add    BYTE PTR [eax],al
 101dff5:	add    bl,BYTE PTR [ecx]
 101dff7:	add    BYTE PTR [eax],al
 101dff9:	add    eax,0x17000025
 101dffe:	xor    eax,0x371b0300
 101e003:	add    BYTE PTR [ebx],al
 101e005:	and    eax,0x4963003e
 101e00a:	xor    eax,0x3d516c00
 101e00f:	add    BYTE PTR [eax],al
 101e011:	sub    al,0x43
 101e013:	add    BYTE PTR [ebx],al
 101e015:	xor    al,0x4f
 101e017:	add    BYTE PTR ds:0x6458,cl
 101e01d:	dec    edx
 101e01e:	jnp    0x101e020
 101e020:	adc    ebp,DWORD PTR [eax+0x78]
 101e023:	add    BYTE PTR [edx+edx*2+0x54],dl
 101e027:	add    BYTE PTR [edx+0x4f],ah
 101e02a:	inc    ecx
 101e02b:	add    BYTE PTR [ecx+0x57],dh
 101e02e:	inc    esp
 101e02f:	add    BYTE PTR [esi+0x5c],dh
 101e032:	dec    ecx
 101e033:	add    BYTE PTR [edx+0x61],bh
 101e036:	dec    esi
 101e037:	add    BYTE PTR [ebp+0x6a],dl
 101e03a:	jp     0x101e03c
 101e03c:	outs   dx,DWORD PTR ds:[esi]
 101e03d:	js     0x101e0bc
 101e03f:	add    BYTE PTR [eax-0x79ffaa99],al
 101e045:	ins    DWORD PTR es:[edi],dx
 101e046:	pop    edx
 101e047:	add    BYTE PTR [ebx-0x68ff9e8d],cl
 101e04d:	sub    BYTE PTR [edi+0x0],0x9d
 101e051:	xchg   BYTE PTR [esi+0x0],dh
 101e054:	mov    ds:0x11007c8c,al
 101e059:	js     0x101dfe7
 101e05b:	add    BYTE PTR [eax],al
 101e05d:	imul   ebx,DWORD PTR [ecx-0x61920000],0x0
 101e064:	sub    BYTE PTR [edi-0x7d],dh
 101e067:	add    BYTE PTR ds:0x8a7e,dh
 101e06d:	jne    0x101e013
 101e06f:	add    BYTE PTR [eax],al
 101e071:	jp     0x101e01c
 101e073:	add    BYTE PTR [ecx+0x55],bl
 101e076:	xchg   BYTE PTR [eax],al
 101e078:	stos   BYTE PTR es:[edi],al
 101e079:	pop    ds
 101e07a:	stos   BYTE PTR es:[edi],al
 101e07b:	add    BYTE PTR [ecx-0x50ff55ce],dl
 101e081:	sub    eax,0x3ab400ae
 101e086:	mov    cl,0x0
 101e088:	mov    ch,0x3c
 101e08a:	mov    ah,0x0
 101e08c:	mov    edx,0xbf00b84a
 101e091:	push   ebp
 101e092:	mov    ecx,0xbc57c000
 101e097:	add    al,al
 101e099:	pop    eax
 101e09a:	mov    ebp,0xc05ac000
 101e09f:	add    ch,al
 101e0a1:	rol    BYTE PTR gs:[eax],0xca
 101e0a5:	jno    0x101e069
 101e0a7:	add    BYTE PTR [eax],al
 101e0a9:	test   BYTE PTR [eax-0x40700000],dh
 101e0af:	add    BYTE PTR [edx-0x6f],al
 101e0b2:	fwait
 101e0b3:	add    BYTE PTR [ebp-0x6f],dl
 101e0b6:	scas   al,BYTE PTR es:[edi]
 101e0b7:	add    BYTE PTR [eax],al
 101e0b9:	sahf   
 101e0ba:	int3   
 101e0bb:	add    BYTE PTR [eax],al
 101e0bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101e0be:	mov    DWORD PTR [eax],0xd4ab00
 101e0c4:	add    BYTE PTR [ecx+ebp*8-0x3e5b9800],bh
 101e0cb:	add    BYTE PTR [eax],al
 101e0cd:	(bad)  
 101e0ce:	jecxz  0x101e0d0
 101e0d0:	add    bl,bl
 101e0d2:	clc    
 101e0d3:	add    BYTE PTR [eax],al
 101e0d5:	loopne 0x101e0d6
 101e0d7:	add    BYTE PTR [eax],al
 101e0d9:	in     al,dx
 101e0da:	inc    BYTE PTR [eax]
 101e0dc:	sbb    cl,ch
 101e0de:	stc    
 101e0df:	add    BYTE PTR [eax],al
 101e0e1:	clc    
 101e0e2:	inc    DWORD PTR [eax]
 101e0e4:	add    eax,0xfff8
 101e0e9:	(bad)  
 101e0ea:	inc    DWORD PTR [eax]
 101e0ec:	and    esp,edi
 101e0ee:	out    dx,eax
 101e0ef:	add    BYTE PTR [ebx],ch
 101e0f1:	(bad)  
 101e0f2:	inc    DWORD PTR [eax]
 101e0f4:	xor    eax,0x4400ffff
 101e0f9:	loopne 0x101e0e5
 101e0fb:	add    BYTE PTR [edi-0x1],cl
 101e0fe:	inc    DWORD PTR [eax]
 101e100:	pop    esp
 101e101:	(bad)  
 101e102:	inc    DWORD PTR [eax]
 101e104:	out    0xf1,ax
 101e107:	add    BYTE PTR [esi-0x1],ah
 101e10a:	inc    DWORD PTR [eax]
 101e10c:	imul   edi,edi,0xffffffff
 101e10f:	add    BYTE PTR [eax-0x53ff7c6d],ch
 101e115:	xchg   ebx,eax
 101e116:	add    DWORD PTR [eax],0x8a99ae
 101e11c:	mov    bl,0x9b
 101e11e:	mov    al,BYTE PTR [eax]
 101e120:	mov    ah,0x9b
 101e122:	mov    eax,DWORD PTR [eax]
 101e124:	mov    bl,0x9f
 101e126:	nop
 101e127:	add    BYTE PTR [eax-0x43ff6a5c],bh
 101e12d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 101e12e:	xchg   esp,eax
 101e12f:	add    BYTE PTR [ebp-0x3bff6458],bh
 101e135:	scas   al,BYTE PTR es:[edi]
 101e136:	popf   
 101e137:	add    al,bl
 101e139:	mov    al,0x9d
 101e13b:	add    dl,al
 101e13d:	scas   al,BYTE PTR es:[edi]
 101e13e:	mov    al,ds:0xa6b6cc00
 101e143:	add    dl,bl
 101e145:	mov    ah,0xa2
 101e147:	add    ah,bl
 101e149:	mov    eax,0xbcd300a7
 101e14e:	lods   eax,DWORD PTR ds:[esi]
 101e14f:	add    ah,dl
 101e151:	mov    ebp,0xbddf00ae
 101e156:	stos   DWORD PTR es:[edi],eax
 101e157:	add    dh,bl
 101e159:	mov    edi,0xc3da00af
 101e15e:	mov    ah,0x0
 101e160:	icebp  
 101e161:	into   
 101e162:	mov    edi,0xca81d000
 101e167:	add    ch,dl
 101e169:	(bad)  
 101e16a:	retf   0xdc00
 101e16d:	mov    eax,ds:0xb2e200d7
 101e172:	rol    BYTE PTR [eax],cl
 101e174:	mov    eax,ds:0xdb00e4cf
 101e179:	(bad)  
 101e17a:	aad    0x0
 101e17c:	out    dx,eax
 101e17d:	rol    esi,cl
 101e17f:	add    cl,dh
 101e181:	rol    ecx,1
 101e183:	add    dl,dh
 101e185:	rol    esp,cl
 101e187:	add    dl,dh
 101e189:	(bad)  
 101e18a:	leave  
 101e18b:	add    ah,dh
 101e18d:	fmul   st,st(2)
 101e18f:	add    ah,dh
 101e191:	fcmove st,st(5)
 101e193:	add    bh,ah
 101e195:	(bad)  
 101e197:	add    ah,dh
 101e199:	(bad)  
 101e19b:	add    ch,dh
 101e19d:	(bad)  
 101e19f:	add    dh,dh
 101e1a1:	loope  0x101e179
 101e1a3:	add    bh,dh
 101e1a5:	jecxz  0x101e180
 101e1a7:	add    bh,dh
 101e1a9:	in     eax,0xdd
 101e1ab:	add    al,bh
 101e1ad:	loop   0x101e187
 101e1af:	add    al,bh
 101e1b1:	in     al,0xdb
 101e1b3:	add    al,bh
 101e1b5:	out    0xde,al
 101e1b7:	add    bh,ch
 101e1b9:	shl    ecx,cl
 101e1bb:	add    cl,bh
 101e1bd:	jmp    0xecfae2a3
 101e1c2:	in     al,0x0
 101e1c4:	cli    
 101e1c5:	in     eax,dx
 101e1c6:	in     eax,0x0
 101e1c8:	cli    
 101e1c9:	out    dx,eax
 101e1ca:	jmp    0xfc00:0xedf1fb00
 101e1d1:	hlt    
 101e1d2:	out    dx,eax
 101e1d3:	add    bl,bh
 101e1d5:	cmc    
 101e1d6:	lock add ah,bh
 101e1d9:	cmc    
 101e1da:	repnz add ch,bh
 101e1dd:	clc    
 101e1de:	test   BYTE PTR [eax],0xf2
 101e1e1:	(bad)  
 101e1e2:	inc    DWORD PTR [eax]
 101e1e4:	(bad)  
 101e1e5:	sti    
 101e1e6:	stc    
 101e1e7:	add    dh,bh
 101e1e9:	cld    
 101e1ea:	sti    
 101e1eb:	add    dh,bh
 101e1ed:	(bad)  
 101e1ee:	inc    BYTE PTR [eax]
	...
 101e3f0:	add    BYTE PTR [edi],cl
 101e3f2:	push   es
 101e3f3:	push   es
 101e3f4:	push   es
 101e3f5:	push   es
 101e3f6:	push   es
 101e3f7:	push   es
 101e3f8:	push   es
 101e3f9:	push   cs
 101e3fa:	sbb    cl,BYTE PTR [eax]
 101e3fc:	add    BYTE PTR ds:0x10000000,cl
 101e402:	arpl   WORD PTR [edx+0x5a],bx
 101e405:	push   esi
 101e406:	push   esi
 101e407:	push   edx
 101e408:	xor    DWORD PTR [edx],ebx
 101e40a:	cmp    BYTE PTR [ecx],bh
 101e40c:	and    BYTE PTR [edx],al
 101e40e:	add    BYTE PTR [ebx],dl
 101e410:	add    BYTE PTR [ecx],dl
 101e412:	outs   dx,DWORD PTR ds:[esi]
 101e413:	addr16 data16 pop sp
 101e417:	pop    esp
 101e418:	or     bh,BYTE PTR [esi]
 101e41a:	cmp    BYTE PTR ds:[esi],ch
 101e41d:	pop    ds
 101e41e:	or     eax,DWORD PTR [ecx]
 101e420:	add    BYTE PTR [edi+ebp*2],dl
 101e423:	push   esp
 101e424:	push   ecx
 101e425:	dec    edi
 101e426:	dec    ebx
 101e427:	dec    ecx
 101e428:	sbb    eax,0x323a3d40
 101e42d:	cs sbb al,0x4
 101e430:	add    BYTE PTR ds:0x676b6d73,dl
 101e436:	addr16 addr16 push ds
 101e439:	inc    ebx
 101e43a:	inc    ecx
 101e43b:	cmp    dh,BYTE PTR ds:0x52f34
 101e441:	push   ss
 101e442:	jae    0x101e49c
 101e444:	push   esp
 101e445:	push   ecx
 101e446:	dec    edi
 101e447:	dec    esp
 101e448:	xor    BYTE PTR [edi+0x3f],al
 101e44b:	inc    ebp
 101e44c:	xor    ebx,DWORD PTR [esi*1+0x776f0009]
 101e453:	jae    0x101e4c8
 101e455:	jno    0x101e4c4
 101e457:	ins    BYTE PTR es:[edi],dx
 101e458:	or     al,0x42
 101e45a:	jl     0x101e4d8
 101e45c:	inc    esp
 101e45d:	cmp    ebx,DWORD PTR [ebx]
 101e45f:	add    esp,DWORD PTR [edx]
 101e461:	sub    BYTE PTR [ebp+0x77],bl
 101e464:	sub    BYTE PTR [ebx+0x29],dh
 101e467:	ins    DWORD PTR es:[edi],dx
 101e468:	and    DWORD PTR [esi],esi
 101e46a:	popa   
 101e46b:	jg     0x101e4b3
 101e46d:	aaa    
 101e46e:	adc    ch,BYTE PTR ss:[ebx]
 101e471:	outs   dx,DWORD PTR ds:[esi]
 101e472:	sub    esi,DWORD PTR [edi+0x2b]
 101e475:	and    ch,BYTE PTR [eax]
 101e477:	jae    0x101e4d9
 101e479:	and    esi,DWORD PTR [esi]
 101e47b:	sbb    al,0x1b
 101e47d:	add    BYTE PTR ss:[eax],al
 101e480:	sub    esi,DWORD PTR [ecx+0x27]
 101e483:	jnp    0x101e4a9
 101e485:	pop    ebp
 101e486:	and    al,0x77
 101e488:	pop    esi
 101e489:	and    eax,0x66762
 101e48e:	add    BYTE PTR [eax],al
 101e490:	and    eax,0x257f5f28
 101e495:	jnp    0x101e4bc
 101e497:	ja     0x101e4c5
 101e499:	jb     0x101e4c8
 101e49b:	ins    DWORD PTR es:[edi],dx
 101e49c:	push   es
 101e49d:	add    BYTE PTR [eax],al
 101e49f:	add    BYTE PTR [eax],al
 101e4a1:	outs   dx,DWORD PTR ds:[esi]
 101e4a2:	jg     0x101e523
 101e4a4:	jg     0x101e525
 101e4a6:	jnp    0x101e523
 101e4a8:	jp     0x101e521
 101e4aa:	ja     0x101e51f
 101e4ac:	push   es
 101e4ad:	add    BYTE PTR [eax],al
 101e4af:	add    BYTE PTR [eax],al
 101e4b1:	pop    edx
 101e4b2:	jnp    0x101e50f
 101e4b4:	pop    eax
 101e4b5:	push   esp
 101e4b6:	push   ecx
 101e4b7:	jae    0x101e534
 101e4b9:	sbb    DWORD PTR [edi],eax
 101e4bb:	pop    es
 101e4bc:	push   es
 101e4bd:	add    BYTE PTR [eax],al
 101e4bf:	add    BYTE PTR [eax],al
 101e4c1:	dec    edi
 101e4c2:	jg     0x101e543
 101e4c4:	jg     0x101e545
 101e4c6:	jg     0x101e547
 101e4c8:	jg     0x101e4e3
 101e4ca:	imul   ebx,DWORD PTR [ecx],0x0
 101e4d0:	add    BYTE PTR [eax+0x7f],dl
 101e4d3:	jg     0x101e554
 101e4d5:	jg     0x101e556
 101e4d7:	jg     0x101e558
 101e4d9:	sbb    DWORD PTR [ecx],ebx
 101e4db:	add    BYTE PTR [eax],al
 101e4dd:	add    BYTE PTR [eax],al
 101e4df:	add    BYTE PTR [eax],al
 101e4e1:	push   ebx
 101e4e2:	push   eax
 101e4e3:	dec    edi
 101e4e4:	dec    ebp
 101e4e5:	dec    edx
 101e4e6:	dec    eax
 101e4e7:	sbb    DWORD PTR [eax],ebx
 101e4e9:	pop    ss
 101e4ea:	add    BYTE PTR [eax],al
 101e4ec:	add    BYTE PTR [eax],al
 101e4ee:	add    BYTE PTR [eax],al
 101e4f0:	add    BYTE PTR [ebx],0x0
 101e4f3:	add    BYTE PTR [eax-0x80000000],al
 101e4f9:	add    BYTE PTR [eax],al
 101e4fb:	add    BYTE PTR [eax-0x80000000],al
 101e501:	add    BYTE PTR [eax],al
 101e503:	add    BYTE PTR [eax-0x80000000],al
	...
 101e511:	add    eax,DWORD PTR [eax]
 101e513:	add    BYTE PTR [eax],al
 101e515:	pop    es
 101e516:	add    BYTE PTR [eax],al
 101e518:	add    BYTE PTR [edi],al
 101e51a:	add    BYTE PTR [eax],al
 101e51c:	add    BYTE PTR [edi],0x0
 101e51f:	add    BYTE PTR [eax-0x7ffffff9],al
 101e525:	sldt   WORD PTR [eax]
 101e528:	sbb    BYTE PTR [edi],0x0
 101e52b:	add    BYTE PTR [eax+0x2800003f],al
 101e531:	add    BYTE PTR [eax],al
 101e533:	add    BYTE PTR [eax],ah
 101e535:	add    BYTE PTR [eax],al
 101e537:	add    BYTE PTR [eax+0x0],al
 101e53a:	add    BYTE PTR [eax],al
 101e53c:	add    DWORD PTR [eax],eax
 101e53e:	and    BYTE PTR [eax],al
 101e540:	add    BYTE PTR [eax],al
 101e542:	add    BYTE PTR [eax],al
 101e544:	adc    BYTE PTR [eax],0x0
	...
 101e5af:	add    bh,bl
 101e5b1:	loop   0x101e599
 101e5b3:	(bad)  
 101e5b4:	ds push esp
 101e5b6:	(bad)  
 101e5b7:	(bad)  
 101e5b8:	cmp    BYTE PTR [edi+0x52],al
 101e5bb:	inc    DWORD PTR [eax]
 101e5bd:	add    BYTE PTR [eax],al
 101e5bf:	inc    DWORD PTR [eax]
 101e5c1:	add    BYTE PTR [eax],al
 101e5c3:	(bad)  
 101e5c4:	(bad)  
 101e5c6:	out    0xff,al
	...
 101e628:	(bad)  
 101e62a:	out    0xff,al
 101e62c:	ds push esp
 101e62e:	(bad)  
 101e62f:	(bad)  
 101e630:	ds push esp
 101e632:	(bad)  
 101e633:	call   DWORD PTR [edx+edx*8]
 101e636:	out    0xff,al
 101e638:	or     ecx,ebp
 101e63a:	jecxz  0x101e63b
 101e63c:	add    eax,0x5ffa88a
 101e641:	sbb    DWORD PTR [ebp+0xff],0xff
 101e64b:	(bad)  
 101e64c:	(bad)  
 101e64e:	out    0xff,al
	...
 101e65c:	sub    DWORD PTR [eax+0x56],0x354963ff
 101e663:	jmp    DWORD PTR [ebx+0x49]
 101e666:	xor    eax,0x354963ff
 101e66b:	jmp    DWORD PTR [ebx+0x49]
 101e66e:	xor    eax,0x354963ff
 101e673:	jmp    DWORD PTR [ebx+0x49]
 101e676:	xor    eax,0x354963ff
 101e67b:	jmp    DWORD PTR [ebx+0x49]
 101e67e:	xor    eax,0x354963ff
 101e683:	jmp    DWORD PTR [ebx+0x49]
 101e686:	xor    eax,0x354963ff
 101e68b:	jmp    DWORD PTR [ebx+0x49]
 101e68e:	xor    eax,0x354963ff
 101e693:	jmp    DWORD PTR [ebx+0x49]
 101e696:	xor    eax,0x354963ff
 101e69b:	jmp    DWORD PTR [ebx+0x49]
 101e69e:	xor    eax,0x354963ff
 101e6a3:	jmp    FWORD PTR [eax+0x6d]
 101e6a6:	jbe    0x101e6a7
 101e6a8:	ds push esp
 101e6aa:	(bad)  
 101e6ab:	(bad)  
 101e6ac:	cmp    al,0xe2
 101e6ae:	lock jmp FWORD PTR [esi]
 101e6b1:	fsub   st(4),st
 101e6b3:	jmp    DWORD PTR [eax]
 101e6b5:	(bad)  
 101e6b6:	jmp    0x4ff:0xe6d215ff
 101e6bd:	xchg   edi,eax
 101e6be:	mov    bl,0xff
 101e6c0:	add    al,0x8c
 101e6c2:	test   al,0xff
 101e6c4:	push   es
 101e6c5:	sbb    BYTE PTR [ebp-0x6c88f901],0xff
 101e6cc:	add    BYTE PTR [eax],al
 101e6ce:	add    bh,bh
 101e6d0:	pop    edi
 101e6d1:	jae    0x101e74e
 101e6d3:	inc    DWORD PTR [eax]
 101e6d5:	add    BYTE PTR [eax],al
 101e6d7:	add    BYTE PTR [eax],al
 101e6d9:	add    BYTE PTR [eax],al
 101e6db:	add    BYTE PTR [ebx+ebp*2-0x240b00a7],al
 101e6e2:	into   
 101e6e3:	(bad)  
 101e6e4:	faddp  st(0),st
 101e6e6:	mov    cl,0xff
 101e6e8:	fdivr  QWORD PTR [esi-0x43240052]
 101e6ee:	lods   al,BYTE PTR ds:[esi]
 101e6ef:	(bad)  
 101e6f0:	fstp   TBYTE PTR [ebx-0x46260056]
 101e6f6:	test   al,0xff
 101e6f8:	fdiv   DWORD PTR [edi-0x4a27005b]
 101e6fe:	mov    ds:0xa1b3d7ff,eax
 101e703:	call   esi
 101e705:	mov    cl,0x9f
 101e707:	call   esi
 101e709:	mov    al,0x9c
 101e70b:	call   esp
 101e70d:	lods   eax,DWORD PTR ds:[esi]
 101e70e:	call   0xd2ff:0x97abd4ff
 101e715:	stos   BYTE PTR es:[edi],al
 101e716:	xchg   esi,eax
 101e717:	call   edx
 101e719:	test   al,0x93
 101e71b:	call   eax
 101e71d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101e71e:	xchg   ecx,eax
 101e71f:	call   eax
 101e721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101e722:	(bad)  
 101e723:	jmp    FWORD PTR [ecx+0x72]
 101e726:	js     0x101e727
 101e728:	pop    ebx
 101e729:	out    dx,al
 101e72a:	idiv   bh
 101e72c:	dec    ebx
 101e72d:	call   0xe33ee724
 101e732:	lock jmp FWORD PTR [esi]
 101e735:	fsub   st(4),st
 101e737:	jmp    DWORD PTR [eax]
 101e739:	xlat   BYTE PTR ds:[ebx]
 101e73a:	jmp    0x4ff:0xbea103ff
 101e741:	xchg   edi,eax
 101e742:	mov    dl,0xff
 101e744:	add    al,0x8a
 101e746:	test   al,0xff
 101e748:	push   es
 101e749:	sbb    BYTE PTR [ebp-0x6b88f901],0xff
 101e750:	cmp    BYTE PTR [edi+0x52],al
 101e753:	inc    DWORD PTR [eax]
 101e755:	add    BYTE PTR [eax],al
 101e757:	add    BYTE PTR [eax],al
 101e759:	add    BYTE PTR [eax],al
 101e75b:	add    BYTE PTR [esi-0xb00a492],al
 101e761:	(bad)  
 101e763:	(bad)  
 101e764:	cli    
 101e765:	out    dx,al
 101e766:	jmp    0xe7eee16a
 101e76b:	(bad)  
 101e76c:	stc    
 101e76d:	jmp    0xffdf:0xe7f7ffe3
 101e774:	clc    
 101e775:	in     eax,0xdc
 101e777:	push   edi
 101e779:	jecxz  0x101e755
 101e77b:	push   esi
 101e77d:	loopne 0x101e756
 101e77f:	push   ebp
 101e781:	(bad)  
 101e783:	push   esp
 101e785:	fst    st(1)
 101e787:	push   esp
 101e789:	fcmovne st,st(6)
 101e78b:	push   ebx
 101e78d:	fmul   st,st(3)
 101e78f:	push   ebx
 101e791:	(bad)  
 101e792:	enter  0xf2ff,0xd3
 101e796:	(bad)  
 101e799:	rol    edx,1
 101e79b:	push   ecx
 101e79d:	iret   
 101e79e:	mov    edi,0xbccdf0ff
 101e7a3:	jmp    FWORD PTR [esi+0x74]
 101e7a6:	jge    0x101e7a7
 101e7a8:	push   0xfffffff3
 101e7aa:	stc    
 101e7ab:	call   FWORD PTR [ebx-0x12]
 101e7ae:	idiv   edi
 101e7b0:	dec    esp
 101e7b1:	call   0xe33ee7a8
 101e7b6:	lock jmp FWORD PTR [esi]
 101e7b9:	fsub   st(4),st
 101e7bb:	inc    DWORD PTR [edx]
 101e7bd:	lods   al,BYTE PTR ds:[esi]
 101e7be:	leave  
 101e7bf:	inc    DWORD PTR [ebx]
 101e7c1:	mov    ds:0x9604ffbe,al
 101e7c6:	mov    dl,0xff
 101e7c8:	add    al,0x8a
 101e7ca:	test   al,0xff
 101e7cc:	push   es
 101e7cd:	sbb    BYTE PTR [ebp+0x524738ff],0xff
	...
 101e7dc:	mov    DWORD PTR [eax+0x5e],esi
 101e7df:	push   ebp
 101e7e1:	(bad)  
 101e7e3:	(bad)  
 101e7e4:	cli    
 101e7e5:	lock in al,dx
 101e7e7:	(bad)  
 101e7e8:	stc    
 101e7e9:	out    dx,al
 101e7ea:	call   0xe7ede1ee
 101e7ef:	(bad)  
 101e7f0:	stc    
 101e7f1:	jmp    0xe8fae7d8
 101e7f6:	(bad)  
 101e7f8:	clc    
 101e7f9:	in     eax,0xdc
 101e7fb:	push   esi
 101e7fd:	jecxz  0x101e7d9
 101e7ff:	push   ebp
 101e801:	loope  0x101e7d9
 101e803:	push   ebp
 101e805:	(bad)  
 101e807:	push   ebp
 101e809:	fst    st(1)
 101e80b:	push   esp
 101e80d:	fcmove st,st(5)
 101e80f:	push   ebx
 101e811:	fmul   st,st(3)
 101e813:	push   ebx
 101e815:	aad    0xc8
 101e817:	push   edx
 101e819:	rol    ebp,cl
 101e81b:	push   ecx
 101e81d:	rol    ecx,1
 101e81f:	push   eax
 101e821:	iret   
 101e822:	mov    esi,0x81766dff
 101e827:	(bad)  
 101e828:	js     0x101e823
 101e82a:	sti    
 101e82b:	jmp    FWORD PTR [ecx-0xd]
 101e82e:	stc    
 101e82f:	call   FWORD PTR [ebx-0x12]
 101e832:	idiv   bh
 101e834:	dec    esp
 101e835:	call   0xe33ee82d
 101e83a:	lock inc DWORD PTR [ecx]
 101e83d:	mov    bh,0xd2
 101e83f:	inc    DWORD PTR [edx]
 101e841:	lods   eax,DWORD PTR ds:[esi]
 101e842:	enter  0x2ff,0xa2
 101e846:	mov    esi,0xb29603ff
 101e84b:	inc    DWORD PTR [esp+ecx*4]
 101e84e:	test   al,0xff
 101e850:	cmp    BYTE PTR [edi+0x52],al
 101e853:	inc    DWORD PTR [eax]
 101e855:	add    BYTE PTR [eax],al
 101e857:	add    BYTE PTR [eax],al
 101e859:	add    BYTE PTR [eax],al
 101e85b:	add    BYTE PTR [ebx-0x9009e8d],cl
 101e861:	loopne 0x101e839
 101e863:	(bad)  
 101e864:	sti    
 101e865:	repnz out dx,al
 101e867:	(bad)  
 101e868:	cli    
 101e869:	icebp  
 101e86a:	jmp    0x101e86b
 101e86c:	stc    
 101e86d:	out    dx,al
 101e86e:	jmp    0xe6eee272
 101e873:	(bad)  
 101e874:	stc    
 101e875:	jmp    0xffdf:0xe7f8ffe2
 101e87c:	clc    
 101e87d:	in     eax,0xdc
 101e87f:	push   esi
 101e881:	jecxz  0x101e85c
 101e883:	push   esi
 101e885:	loope  0x101e85e
 101e887:	push   ebp
 101e889:	(bad)  
 101e88b:	push   ebp
 101e88d:	fst    st(1)
 101e88f:	push   esp
 101e891:	fcmove st,st(5)
 101e893:	push   esp
 101e895:	fmul   st,st(2)
 101e897:	push   ebx
 101e899:	aad    0xc8
 101e89b:	push   edx
 101e89d:	rol    esp,cl
 101e89f:	push   ecx
 101e8a1:	rol    cl,1
 101e8a3:	push   DWORD PTR [ebx+0x7b]
 101e8a6:	test   edi,edi
 101e8a8:	cmp    esp,0xfffffffe
 101e8ab:	push   DWORD PTR [edi-0x7]
 101e8ae:	cld    
 101e8af:	jmp    FWORD PTR [ecx-0xd]
 101e8b2:	stc    
 101e8b3:	call   FWORD PTR [ebp+ebp*8-0x9]
 101e8b7:	dec    DWORD PTR [eax+ebp*8-0xe]
 101e8bb:	inc    DWORD PTR [eax]
 101e8bd:	rcr    dl,0xff
 101e8c0:	add    DWORD PTR [eax-0x52fd002e],edi
 101e8c6:	enter  0x3ff,0xa2
 101e8ca:	mov    esi,0xb39703ff
 101e8cf:	(bad)  
 101e8d0:	cmp    BYTE PTR [edi+0x52],al
 101e8d3:	inc    DWORD PTR [eax]
 101e8d5:	add    BYTE PTR [eax],al
 101e8d7:	add    BYTE PTR [eax],al
 101e8d9:	add    BYTE PTR [eax],al
 101e8db:	add    BYTE PTR [ebp-0x9009b8a],cl
 101e8e1:	loop   0x101e8bb
 101e8e3:	(bad)  
 101e8e4:	cld    
 101e8e5:	hlt    
 101e8e6:	repnz inc ecx
 101e8e9:	stos   DWORD PTR es:[edi],eax
 101e8ea:	pushf  
 101e8eb:	inc    ecx
 101e8ed:	stos   DWORD PTR es:[edi],eax
 101e8ee:	pushf  
 101e8ef:	(bad)  
 101e8f0:	mov    esi,0xb9ff98a6
 101e8f5:	mov    ds:0x9cb4ff93,al
 101e8fa:	mov    ?,edi
 101e8fc:	lods   eax,DWORD PTR ds:[esi]
 101e8fd:	xchg   edi,eax
 101e8fe:	xchg   edi,edi
 101e900:	test   al,0x90
 101e902:	cmp    edi,0xff7989a1
 101e908:	mov    eax,ds:0x99ff7888
 101e90d:	xor    DWORD PTR [ecx-0x1],0xff697991
 101e914:	mov    dh,BYTE PTR [edx+0x61]
 101e917:	inc    DWORD PTR [ebx+0x7cff596a]
 101e91d:	arpl   WORD PTR [ecx-0x1],dx
 101e920:	jne    0x101e97e
 101e922:	dec    edx
 101e923:	push   DWORD PTR [ebx-0x7e]
 101e926:	mov    ?,edi
 101e928:	mov    edi,?
 101e92a:	(bad)  
 101e92b:	dec    DWORD PTR [edi+edi*8-0x37b0001]
 101e932:	(bad)  
 101e933:	push   DWORD PTR [edi-0x8]
 101e936:	cld    
 101e937:	call   FWORD PTR [eax-0x3b]
 101e93a:	into   
 101e93b:	inc    DWORD PTR [edx+ecx*4]
 101e93e:	test   al,0xff
 101e940:	add    dh,al
 101e942:	loopne 0x101e943
 101e944:	add    al,al
 101e946:	(bad)  
 101e948:	add    DWORD PTR [eax-0x52fd002e],edi
 101e94e:	enter  0x38ff,0x47
 101e952:	push   edx
 101e953:	inc    DWORD PTR [eax]
 101e955:	add    BYTE PTR [eax],al
 101e957:	add    BYTE PTR [eax],al
 101e959:	add    BYTE PTR [eax],al
 101e95b:	add    BYTE PTR [edi-0x8009888],cl
 101e961:	in     al,0xdb
 101e963:	(bad)  
 101e964:	cld    
 101e965:	div    ah
 101e967:	(bad)  
 101e968:	cld    
 101e969:	hlt    
 101e96a:	icebp  
 101e96b:	(bad)  
 101e96c:	sti    
 101e96d:	repz out dx,al
 101e96f:	(bad)  
 101e970:	cli    
 101e971:	lock jmp 0x101e973
 101e974:	cli    
 101e975:	out    dx,al
 101e976:	call   0xe6ede37a
 101e97b:	(bad)  
 101e97c:	stc    
 101e97d:	jmp    0xe8fae963
 101e982:	(bad)  
 101e984:	mul    esp
 101e986:	fdiv   st(7),st
 101e988:	mul    dl
 101e98a:	fcos   
 101e98c:	mul    al
 101e98e:	(bad)  
 101e98f:	push   ebp
 101e991:	(bad)  
 101e993:	push   esp
 101e995:	(bad)  
 101e997:	push   esp
 101e999:	fcmove st,st(6)
 101e99b:	push   ebx
 101e99d:	xlat   BYTE PTR ds:[ebx]
 101e99e:	retf   0xf3ff
 101e9a1:	aad    0xc7
 101e9a3:	(bad)  
 101e9a4:	jp     0x101e936
 101e9a6:	cwde   
 101e9a7:	dec    DWORD PTR [edi+edi*8-0x730001]
 101e9ae:	(bad)  
 101e9af:	call   FWORD PTR [eax-0x3b]
 101e9b2:	into   
 101e9b3:	call   FWORD PTR [eax-0x3b]
 101e9b6:	into   
 101e9b7:	jmp    ecx
 101e9b9:	std    
 101e9ba:	std    
 101e9bb:	dec    DWORD PTR [eax+0x4fff8f3]
 101e9c1:	mov    ch,BYTE PTR [eax-0x5775fb01]
 101e9c7:	inc    DWORD PTR [ecx]
 101e9c9:	rcr    bl,0xff
 101e9cc:	add    DWORD PTR [edi+0x4738ffd2],esi
 101e9d2:	push   edx
 101e9d3:	inc    DWORD PTR [eax]
 101e9d5:	add    BYTE PTR [eax],al
 101e9d7:	add    BYTE PTR [eax],al
 101e9d9:	add    BYTE PTR [eax],al
 101e9db:	add    BYTE PTR [edx-0x7009685],dl
 101e9e1:	out    0xde,al
 101e9e3:	(bad)  
 101e9e4:	std    
 101e9e5:	stc    
 101e9e6:	idiv   bh
 101e9e8:	cld    
 101e9e9:	div    ebx
 101e9eb:	(bad)  
 101e9ec:	sti    
 101e9ed:	hlt    
 101e9ee:	icebp  
 101e9ef:	(bad)  
 101e9f0:	sti    
 101e9f1:	repnz out dx,al
 101e9f3:	(bad)  
 101e9f4:	cli    
 101e9f5:	lock jmp 0x101e9f7
 101e9f8:	cli    
 101e9f9:	out    dx,al
 101e9fa:	call   0xe5eee3fe
 101e9ff:	(bad)  
 101ea00:	clc    
 101ea01:	jmp    0xe8f9e9e8
 101ea06:	fdivp  st(7),st
 101ea08:	mul    esp
 101ea0a:	(bad)  
 101ea0c:	mul    bl
 101ea0e:	fcos   
 101ea10:	cmc    
 101ea11:	loope  0x101e9e9
 101ea13:	push   ebp
 101ea15:	(bad)  
 101ea17:	push   ebp
 101ea19:	(bad)  
 101ea1b:	push   esp
 101ea1d:	fcmove st,st(5)
 101ea1f:	push   ebx
 101ea21:	xlat   BYTE PTR ds:[ebx]
 101ea22:	retf   0x75ff
 101ea25:	mov    dl,BYTE PTR [edx-0x313aa701]
 101ea2b:	call   FWORD PTR [eax-0x3b]
 101ea2e:	into   
 101ea2f:	(bad)  
 101ea30:	(bad)  
 101ea31:	(bad)  
 101ea32:	(bad)  
 101ea33:	push   edx
 101ea35:	(bad)  
 101ea36:	(bad)  
 101ea37:	jmp    ecx
 101ea39:	std    
 101ea3a:	(bad)  
 101ea3b:	dec    DWORD PTR [eax+0x75fff8f3]
 101ea41:	icebp  
 101ea42:	clc    
 101ea43:	jmp    DWORD PTR [esi-0x10]
 101ea46:	idiv   edi
 101ea48:	add    al,0x8a
 101ea4a:	test   al,0xff
 101ea4c:	add    al,0x8a
 101ea4e:	test   al,0xff
 101ea50:	cmp    BYTE PTR [edi+0x52],al
 101ea53:	inc    DWORD PTR [eax]
 101ea55:	add    BYTE PTR [eax],al
 101ea57:	add    BYTE PTR [eax],al
 101ea59:	add    BYTE PTR [eax],al
 101ea5b:	add    BYTE PTR [ebp-0x7009383],dl
 101ea61:	call   0xfc00ea47
 101ea66:	stc    
 101ea67:	inc    ecx
 101ea69:	stos   DWORD PTR es:[edi],eax
 101ea6a:	pushf  
 101ea6b:	inc    ecx
 101ea6d:	stos   DWORD PTR es:[edi],eax
 101ea6e:	pushf  
 101ea6f:	(bad)  
 101ea70:	mov    edi,0xbaff9aa9
 101ea75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 101ea76:	xchg   esi,eax
 101ea77:	push   DWORD PTR [edi-0x4e006f60]
 101ea7d:	cdq    
 101ea7e:	mov    bh,bh
 101ea80:	stos   DWORD PTR es:[edi],eax
 101ea81:	xchg   ebx,eax
 101ea82:	test   bh,bh
 101ea84:	mov    ds:0xa3ff7b8d,eax
 101ea89:	mov    WORD PTR [ebx-0x1],?
 101ea8c:	pushf  
 101ea8d:	test   BYTE PTR [edi+edi*8-0x6a],dh
 101ea91:	jge    0x101eaff
 101ea93:	dec    DWORD PTR [esi-0x79009a8b]
 101ea99:	ins    DWORD PTR es:[edi],dx
 101ea9a:	pop    esp
 101ea9b:	(bad)  
 101ea9c:	jle    0x101eb04
 101ea9e:	push   ebp
 101ea9f:	(bad)  
 101eaa0:	js     0x101eb01
 101eaa2:	dec    ebp
 101eaa3:	(bad)  
 101eaa4:	jns    0x101ea32
 101eaa6:	xchg   esi,eax
 101eaa7:	call   FWORD PTR [esi]
 101eaa9:	je     0x101ea44
 101eaab:	(bad)  
 101eaac:	(bad)  
 101eaad:	(bad)  
 101eaae:	(bad)  
 101eaaf:	(bad)  
 101eab0:	(bad)  
 101eab1:	(bad)  
 101eab2:	(bad)  
 101eab3:	push   edx
 101eab5:	(bad)  
 101eab6:	(bad)  
 101eab7:	jmp    ecx
 101eab9:	std    
 101eaba:	(bad)  
 101eabb:	dec    DWORD PTR [eax+0x75fff8f4]
 101eac1:	icebp  
 101eac2:	clc    
 101eac3:	jmp    DWORD PTR [esi-0x10]
 101eac6:	idiv   edi
 101eac8:	pop    ebx
 101eac9:	out    dx,al
 101eaca:	idiv   bh
 101eacc:	push   ds
 101eacd:	je     0x101ea68
 101eacf:	(bad)  
 101ead0:	cmp    BYTE PTR [edi+0x52],al
 101ead3:	inc    DWORD PTR [eax]
 101ead5:	add    BYTE PTR [eax],al
 101ead7:	add    BYTE PTR [eax],al
 101ead9:	add    BYTE PTR [eax],al
 101eadb:	add    BYTE PTR [esi-0x6009081],dl
 101eae1:	jmp    0xfffa:0xfcfeffe3
 101eae8:	(bad)  
 101eae9:	cli    
 101eaea:	clc    
 101eaeb:	(bad)  
 101eaec:	std    
 101eaed:	clc    
 101eaee:	cmc    
 101eaef:	(bad)  
 101eaf0:	cld    
 101eaf1:	div    bl
 101eaf3:	(bad)  
 101eaf4:	sti    
 101eaf5:	hlt    
 101eaf6:	icebp  
 101eaf7:	(bad)  
 101eaf8:	cld    
 101eaf9:	icebp  
 101eafa:	in     eax,dx
 101eafb:	(bad)  
 101eafc:	cli    
 101eafd:	lock jmp 0xf9ff:0xe7edfaff
 101eb05:	jmp    0xffe1:0xe9f8ffe4
 101eb0c:	mul    edi
 101eb0e:	fdivp  st(7),st
 101eb10:	mul    ah
 101eb12:	(bad)  
 101eb14:	mul    dl
 101eb16:	fdivr  st,st(7)
 101eb18:	cmc    
 101eb19:	loopne 0x101eaf1
 101eb1b:	push   ebp
 101eb1d:	(bad)  
 101eb1f:	push   esp
 101eb21:	(bad)  
 101eb23:	push   esp
 101eb25:	fxch   st(5)
 101eb27:	(bad)  
 101eb28:	(bad)  
 101eb2a:	out    0xff,al
 101eb2c:	push   ds
 101eb2d:	je     0x101eac8
 101eb2f:	call   FWORD PTR [esi]
 101eb31:	je     0x101eacc
 101eb33:	push   edx
 101eb35:	(bad)  
 101eb36:	(bad)  
 101eb37:	jmp    ecx
 101eb39:	std    
 101eb3a:	(bad)  
 101eb3b:	dec    DWORD PTR [eax+0x75fff9f3]
 101eb41:	icebp  
 101eb42:	idiv   edi
 101eb44:	push   ds
 101eb45:	je     0x101eae0
 101eb47:	call   FWORD PTR [esi]
 101eb49:	je     0x101eae4
 101eb4b:	(bad)  
 101eb4c:	(bad)  
 101eb4e:	out    0xff,al
	...
 101eb5c:	cwde   
 101eb5d:	xor    BYTE PTR [ecx-0x1],0xf9
 101eb61:	in     al,dx
 101eb62:	out    0xff,al
 101eb64:	(bad)  
 101eb65:	std    
 101eb66:	std    
 101eb67:	(bad)  
 101eb68:	(bad)  
 101eb69:	cld    
 101eb6a:	sti    
 101eb6b:	(bad)  
 101eb6c:	std    
 101eb6d:	cli    
 101eb6e:	clc    
 101eb6f:	(bad)  
 101eb70:	std    
 101eb71:	clc    
 101eb72:	cmc    
 101eb73:	(bad)  
 101eb74:	cld    
 101eb75:	div    bl
 101eb77:	(bad)  
 101eb78:	cld    
 101eb79:	hlt    
 101eb7a:	lock (bad) 
 101eb7c:	sti    
 101eb7d:	icebp  
 101eb7e:	in     eax,dx
 101eb7f:	(bad)  
 101eb80:	sti    
 101eb81:	lock jmp 0xf9ff:0xe7edfaff
 101eb89:	jmp    0xffe1:0xe8f8ffe4
 101eb90:	clc    
 101eb91:	out    0xde,eax
 101eb93:	push   esi
 101eb95:	in     al,0xdb
 101eb97:	push   esi
 101eb99:	loope  0x101eb73
 101eb9b:	push   ebp
 101eb9d:	loopne 0x101eb74
 101eb9f:	push   ebp
 101eba1:	fst    st(3)
 101eba3:	push   ebp
 101eba5:	fmul   st(7),st
 101eba7:	push   esp
 101eba9:	fcmove st,st(4)
 101ebab:	push   ebx
 101ebad:	xlat   BYTE PTR ds:[ebx]
 101ebae:	leave  
 101ebaf:	(bad)  
 101ebb0:	(bad)  
 101ebb2:	out    0xff,al
 101ebb4:	push   ds
 101ebb5:	je     0x101eb50
 101ebb7:	call   FWORD PTR [esi]
 101ebb9:	je     0x101eb54
 101ebbb:	call   FWORD PTR [esi]
 101ebbd:	je     0x101eb58
 101ebbf:	call   FWORD PTR [esi]
 101ebc1:	je     0x101eb5c
 101ebc3:	(bad)  
 101ebc4:	(bad)  
 101ebc6:	out    0xff,al
	...
 101ebdc:	fwait
 101ebdd:	test   BYTE PTR [ebx-0x1],dh
 101ebe0:	cli    
 101ebe1:	out    dx,al
 101ebe2:	call   0xebe6
 101ebe7:	(bad)  
 101ebe8:	(bad)  
 101ebe9:	std    
 101ebea:	std    
 101ebeb:	inc    eax
 101ebed:	pop    edx
 101ebee:	mov    edi,0xaa1faaff
 101ebf3:	jmp    FWORD PTR [edx-0x3f0055e1]
 101ebf9:	pop    eax
 101ebfa:	mov    ebp,0xf0f4fbff
 101ebff:	jmp    FWORD PTR [edx-0x100055e1]
 101ec05:	shl    ecx,cl
 101ec07:	push   DWORD PTR [ebp-0x1b004dc6]
 101ec0d:	mov    ah,0xd5
 101ec0f:	(bad)  
 101ec10:	mov    edi,0xddffb855
 101ec15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101ec16:	int3   
 101ec17:	(bad)  
 101ec18:	mov    edi,0xf6ffb753
 101ec1d:	loop   0x101ebf7
 101ec1f:	(bad)  
 101ec20:	mov    esi,0xdcffb652
 101ec25:	sahf   
 101ec26:	(bad)  
 101ec29:	fcmovne st,st(7)
 101ec2b:	push   ebx
 101ec2d:	fxch   st(4)
 101ec2f:	call   esi
 101ec31:	mov    cl,0x9e
 101ec33:	jmp    DWORD PTR [ebx+0x49]
 101ec36:	xor    eax,0xe6e2dfff
 101ec3b:	(bad)  
 101ec3c:	(bad)  
 101ec3e:	out    0xff,al
	...
 101ec5c:	popf   
 101ec5d:	xchg   DWORD PTR [esi-0x1],esi
 101ec60:	cli    
 101ec61:	icebp  
 101ec62:	jmp    0x101ec63
 101ec64:	(bad)  
 101ec65:	(bad)  
 101ec66:	(bad)  
 101ec67:	(bad)  
 101ec68:	(bad)  
 101ec69:	(bad)  
 101ec6a:	(bad)  
 101ec6b:	inc    eax
 101ec6d:	pop    edx
 101ec6e:	sar    bh,0xe8
 101ec71:	shl    ch,0xff
 101ec74:	std    
 101ec75:	cli    
 101ec76:	clc    
 101ec77:	inc    eax
 101ec79:	pop    ecx
 101ec7a:	mov    esi,0xd6a0dbff
 101ec7f:	jmp    FWORD PTR [edx-0x1f0055e1]
 101ec85:	lods   al,BYTE PTR ds:[esi]
 101ec86:	xlat   BYTE PTR ds:[ebx]
 101ec87:	push   DWORD PTR [ebp-0x20004cc5]
 101ec8d:	test   al,0xd3
 101ec8f:	(bad)  
 101ec90:	mov    edi,0xf8ffb955
 101ec95:	call   0x55c1ec7a
 101ec9a:	mov    eax,0xc488d3ff
 101ec9f:	(bad)  
 101eca0:	mov    esi,0xf6ffb653
 101eca5:	loopne 0x101ec7c
 101eca7:	push   ebp
 101eca9:	fst    st(3)
 101ecab:	push   esp
 101ecad:	fcmovne st,st(7)
 101ecaf:	call   edi
 101ecb1:	mov    bl,0xa0
 101ecb3:	jmp    DWORD PTR [ebx+0x49]
 101ecb6:	xor    eax,0xff
	...
 101ecdb:	add    BYTE PTR [edi-0x4008677],bl
 101ece1:	repnz out dx,al
 101ece3:	(bad)  
 101ece4:	(bad)  
 101ece5:	(bad)  
 101ece6:	(bad)  
 101ece7:	(bad)  
 101ece8:	(bad)  
 101ece9:	(bad)  
 101ecea:	(bad)  
 101eceb:	inc    ecx
 101eced:	pop    edx
 101ecee:	sar    bh,0xe8
 101ecf1:	ret    0xffe6
 101ecf4:	(bad)  
 101ecf5:	sti    
 101ecf6:	cli    
 101ecf7:	call   esi
 101ecf9:	xchg   ebx,eax
 101ecfa:	sar    edi,cl
 101ecfc:	(bad)  
 101ecfd:	xchg   edx,eax
 101ecfe:	sar    bh,cl
 101ed00:	stos   BYTE PTR es:[edi],al
 101ed01:	pop    ds
 101ed02:	stos   BYTE PTR es:[edi],al
 101ed03:	call   eax
 101ed05:	or     dl,0xff
 101ed08:	retf   0xc473
 101ed0b:	dec    edi
 101ed0d:	add    bh,0xff
 101ed10:	mov    edi,0xf9ffba56
 101ed15:	jmp    0xffd5:0xc0e8ffe3
 101ed1c:	stos   BYTE PTR es:[edi],al
 101ed1d:	pop    ds
 101ed1e:	stos   BYTE PTR es:[edi],al
 101ed1f:	(bad)  
 101ed20:	in     al,dx
 101ed21:	leave  
 101ed22:	aam    0xff
 101ed24:	mul    cl
 101ed26:	fdivr  st,st(7)
 101ed28:	mul    al
 101ed2a:	aam    0xff
 101ed2c:	cmc    
 101ed2d:	fst    st(2)
 101ed2f:	call   edi
 101ed31:	mov    ch,0xa3
 101ed33:	jmp    DWORD PTR [ebx+0x49]
 101ed36:	xor    eax,0xff
	...
 101ed5b:	add    BYTE PTR [edx-0x4008474],ah
 101ed61:	hlt    
 101ed62:	icebp  
 101ed63:	(bad)  
 101ed64:	(bad)  
 101ed65:	(bad)  
 101ed66:	(bad)  
 101ed67:	(bad)  
 101ed68:	(bad)  
 101ed69:	(bad)  
 101ed6a:	(bad)  
 101ed6b:	inc    ecx
 101ed6d:	pop    ebx
 101ed6e:	sar    edi,0xe8
 101ed71:	ret    
 101ed72:	call   0xfdffec76
 101ed77:	inc    eax
 101ed79:	pop    edx
 101ed7a:	mov    edi,0xd8a2dcff
 101ed7f:	jmp    FWORD PTR [edx-0x3a0055e1]
 101ed85:	retw   0xebff
 101ed89:	leave  
 101ed8a:	loope  0x101ed8b
 101ed8c:	rcl    BYTE PTR [edi-0x44],0xff
 101ed90:	mov    edi,0xf9ffbb56
 101ed95:	in     al,dx
 101ed96:	out    0xff,eax
 101ed98:	aam    0x8b
 101ed9a:	enter  0xb4ff,0x3a
 101ed9e:	mov    cl,0xff
 101eda0:	aam    0x89
 101eda2:	(bad)  
 101eda5:	jecxz  0x101ed81
 101eda7:	push   esi
 101eda9:	loope  0x101ed83
 101edab:	push   esi
 101edad:	(bad)  
 101edaf:	(bad)  
 101edb0:	fnstenv [edi+0x4963ffa5]
 101edb6:	xor    eax,0xff
	...
 101eddb:	add    BYTE PTR [esi+ecx*4-0x9030082],ah
 101ede2:	repz (bad) 
 101ede4:	(bad)  
 101ede5:	(bad)  
 101ede6:	(bad)  
 101ede7:	(bad)  
 101ede8:	(bad)  
 101ede9:	(bad)  
 101edea:	(bad)  
 101edeb:	inc    ecx
 101eded:	pop    ebx
 101edee:	sar    edi,0xaa
 101edf1:	pop    ds
 101edf2:	stos   BYTE PTR es:[edi],al
 101edf3:	jmp    FWORD PTR [edx-0x3f0055e1]
 101edf9:	pop    edx
 101edfa:	sar    bh,0xfe
 101edfd:	sti    
 101edfe:	cli    
 101edff:	jmp    FWORD PTR [edx-0x3a0055e1]
 101ee05:	addr16 ret 
 101ee07:	(bad)  
 101ee08:	cld    
 101ee09:	cmc    
 101ee0a:	repnz jmp FWORD PTR [edi-0x3f0050d3]
 101ee11:	push   edi
 101ee12:	mov    esp,0xe1d3efff
 101ee17:	push   DWORD PTR [ebp-0x11004dc6]
 101ee1d:	iret   
 101ee1e:	(bad)  
 101ee20:	mov    ah,0x3a
 101ee22:	mov    cl,0xff
 101ee24:	out    dx,al
 101ee25:	retf   
 101ee26:	aad    0xff
 101ee28:	mul    bl
 101ee2a:	(bad)  
 101ee2c:	mul    cl
 101ee2e:	xlat   BYTE PTR ds:[ebx]
 101ee2f:	(bad)  
 101ee30:	fidivr DWORD PTR [ecx+0x4963ffa7]
 101ee36:	xor    eax,0xff
	...
 101ee5b:	add    BYTE PTR [esi-0x2007e6f],ah
 101ee61:	clc    
 101ee62:	idiv   bh
 101ee64:	(bad)  
 101ee65:	(bad)  
 101ee66:	(bad)  
 101ee67:	(bad)  
 101ee68:	(bad)  
 101ee69:	(bad)  
 101ee6a:	(bad)  
 101ee6b:	(bad)  
 101ee6c:	(bad)  
 101ee6d:	(bad)  
 101ee6e:	(bad)  
 101ee6f:	(bad)  
 101ee70:	(bad)  
 101ee71:	(bad)  
 101ee72:	(bad)  
 101ee73:	(bad)  
 101ee74:	(bad)  
 101ee75:	(bad)  
 101ee76:	(bad)  
 101ee77:	(bad)  
 101ee78:	(bad)  
 101ee79:	(bad)  
 101ee7a:	std    
 101ee7b:	(bad)  
 101ee7c:	(bad)  
 101ee7d:	std    
 101ee7e:	cld    
 101ee7f:	(bad)  
 101ee80:	(bad)  
 101ee81:	sti    
 101ee82:	cli    
 101ee83:	(bad)  
 101ee84:	std    
 101ee85:	stc    
 101ee86:	idiv   edi
 101ee88:	cld    
 101ee89:	clc    
 101ee8a:	hlt    
 101ee8b:	(bad)  
 101ee8c:	cld    
 101ee8d:	cmc    
 101ee8e:	repnz (bad) 
 101ee90:	sti    
 101ee91:	repz out dx,eax
 101ee93:	(bad)  
 101ee94:	sti    
 101ee95:	lock in al,dx
 101ee97:	(bad)  
 101ee98:	cli    
 101ee99:	out    dx,eax
 101ee9a:	jmp    0xe6eee89e
 101ee9f:	(bad)  
 101eea0:	stc    
 101eea1:	jmp    0xffe0:0xe8f8ffe3
 101eea8:	clc    
 101eea9:	out    0xdd,al
 101eeab:	push   edi
 101eead:	jecxz  0x101ee89
 101eeaf:	(bad)  
 101eeb0:	fstp   TBYTE PTR [edx+0x4963ffaa]
 101eeb6:	xor    eax,0xff
	...
 101eedb:	add    BYTE PTR [edx-0x1007b6c],ch
 101eee1:	stc    
 101eee2:	clc    
 101eee3:	(bad)  
 101eee4:	(bad)  
 101eee5:	(bad)  
 101eee6:	(bad)  
 101eee7:	(bad)  
 101eee8:	(bad)  
 101eee9:	(bad)  
 101eeea:	(bad)  
 101eeeb:	(bad)  
 101eeec:	(bad)  
 101eeed:	(bad)  
 101eeee:	(bad)  
 101eeef:	(bad)  
 101eef0:	(bad)  
 101eef1:	(bad)  
 101eef2:	(bad)  
 101eef3:	(bad)  
 101eef4:	(bad)  
 101eef5:	(bad)  
 101eef6:	(bad)  
 101eef7:	(bad)  
 101eef8:	(bad)  
 101eef9:	(bad)  
 101eefa:	(bad)  
 101eefb:	(bad)  
 101eefc:	(bad)  
 101eefd:	std    
 101eefe:	std    
 101eeff:	(bad)  
 101ef00:	(bad)  
 101ef01:	std    
 101ef02:	cld    
 101ef03:	(bad)  
 101ef04:	(bad)  
 101ef05:	sti    
 101ef06:	stc    
 101ef07:	(bad)  
 101ef08:	std    
 101ef09:	stc    
 101ef0a:	idiv   edi
 101ef0c:	std    
 101ef0d:	clc    
 101ef0e:	hlt    
 101ef0f:	(bad)  
 101ef10:	cld    
 101ef11:	cmc    
 101ef12:	repnz (bad) 
 101ef14:	sti    
 101ef15:	repz out dx,eax
 101ef17:	(bad)  
 101ef18:	cli    
 101ef19:	icebp  
 101ef1a:	in     al,dx
 101ef1b:	(bad)  
 101ef1c:	cli    
 101ef1d:	out    dx,eax
 101ef1e:	call   0xe7efe922
 101ef23:	(bad)  
 101ef24:	clc    
 101ef25:	jmp    0xffe0:0xe8f8ffe2
 101ef2c:	clc    
 101ef2d:	in     eax,0xdc
 101ef2f:	(bad)  
 101ef30:	fstp   TBYTE PTR [esp+ebp*4+0x354963ff]
 101ef37:	inc    DWORD PTR [eax]
	...
 101ef59:	add    BYTE PTR [eax],al
 101ef5b:	add    BYTE PTR [esi+edx*4-0x4010079],ch
 101ef62:	cli    
 101ef63:	(bad)  
 101ef64:	(bad)  
 101ef65:	(bad)  
 101ef66:	(bad)  
 101ef67:	inc    ecx
 101ef69:	stos   DWORD PTR es:[edi],eax
 101ef6a:	pushf  
 101ef6b:	inc    ecx
 101ef6d:	stos   DWORD PTR es:[edi],eax
 101ef6e:	pushf  
 101ef6f:	inc    ecx
 101ef71:	stos   DWORD PTR es:[edi],eax
 101ef72:	pushf  
 101ef73:	inc    ecx
 101ef75:	stos   BYTE PTR es:[edi],al
 101ef76:	fwait
 101ef77:	(bad)  
 101ef78:	mov    esi,0xb9ff98a6
 101ef7d:	mov    ds:0x9cb3ff92,al
 101ef82:	(bad)  
 101ef83:	jmp    FWORD PTR [esi+edx*4-0x6f59007a]
 101ef8a:	cmp    bh,0xa1
 101ef8d:	mov    BYTE PTR [eax-0x1],bh
 101ef90:	cdq    
 101ef91:	xor    DWORD PTR [ecx-0x1],0xff697991
 101ef98:	mov    dh,BYTE PTR [edx+0x61]
 101ef9b:	inc    DWORD PTR [ebx+0x7cff596a]
 101efa1:	arpl   WORD PTR [ecx-0x1],dx
 101efa4:	jne    0x101f002
 101efa6:	dec    edx
 101efa7:	jmp    FWORD PTR [esi+0x55]
 101efaa:	inc    edx
 101efab:	(bad)  
 101efac:	clc    
 101efad:	out    0xdf,eax
 101efaf:	(bad)  
 101efb0:	fdivr  QWORD PTR [esi+0x4963ffae]
 101efb6:	xor    eax,0xff
	...
 101efdb:	add    BYTE PTR [esi-0x1007567],ch
 101efe1:	cld    
 101efe2:	cld    
 101efe3:	(bad)  
 101efe4:	(bad)  
 101efe5:	(bad)  
 101efe6:	(bad)  
 101efe7:	(bad)  
 101efe8:	(bad)  
 101efe9:	(bad)  
 101efea:	(bad)  
 101efeb:	(bad)  
 101efec:	(bad)  
 101efed:	(bad)  
 101efee:	(bad)  
 101efef:	(bad)  
 101eff0:	(bad)  
 101eff1:	(bad)  
 101eff2:	(bad)  
 101eff3:	(bad)  
 101eff4:	(bad)  
 101eff5:	(bad)  
 101eff6:	(bad)  
 101eff7:	(bad)  
 101eff8:	(bad)  
 101eff9:	(bad)  
 101effa:	(bad)  
 101effb:	(bad)  
 101effc:	(bad)  
 101effd:	(bad)  
 101effe:	(bad)  
 101efff:	(bad)  
 101f000:	(bad)  
 101f001:	(bad)  
 101f002:	(bad)  
 101f003:	(bad)  
 101f004:	(bad)  
 101f005:	std    
 101f006:	std    
 101f007:	(bad)  
 101f008:	(bad)  
 101f009:	cld    
 101f00a:	sti    
 101f00b:	(bad)  
 101f00c:	(bad)  
 101f00d:	sti    
 101f00e:	stc    
 101f00f:	(bad)  
 101f010:	std    
 101f011:	stc    
 101f012:	idiv   edi
 101f014:	std    
 101f015:	div    esp
 101f017:	(bad)  
 101f018:	cld    
 101f019:	cmc    
 101f01a:	icebp  
 101f01b:	(bad)  
 101f01c:	sti    
 101f01d:	repnz out dx,eax
 101f01f:	(bad)  
 101f020:	cli    
 101f021:	icebp  
 101f022:	jmp    0x101f023
 101f024:	cli    
 101f025:	out    dx,al
 101f026:	jmp    0xe7edeb2a
 101f02b:	(bad)  
 101f02c:	stc    
 101f02d:	jmp    0xc2dff014
 101f032:	mov    cl,0xff
 101f034:	arpl   WORD PTR [ecx+0x35],cx
 101f037:	inc    DWORD PTR [eax]
	...
 101f059:	add    BYTE PTR [eax],al
 101f05b:	add    BYTE PTR [ecx-0x7264],dh
 101f061:	(bad)  
 101f062:	std    
 101f063:	(bad)  
 101f064:	(bad)  
 101f065:	(bad)  
 101f066:	(bad)  
 101f067:	(bad)  
 101f068:	(bad)  
 101f069:	(bad)  
 101f06a:	(bad)  
 101f06b:	(bad)  
 101f06c:	(bad)  
 101f06d:	(bad)  
 101f06e:	(bad)  
 101f06f:	(bad)  
 101f070:	(bad)  
 101f071:	(bad)  
 101f072:	(bad)  
 101f073:	(bad)  
 101f074:	(bad)  
 101f075:	(bad)  
 101f076:	(bad)  
 101f077:	(bad)  
 101f078:	(bad)  
 101f079:	(bad)  
 101f07a:	(bad)  
 101f07b:	(bad)  
 101f07c:	(bad)  
 101f07d:	(bad)  
 101f07e:	(bad)  
 101f07f:	(bad)  
 101f080:	(bad)  
 101f081:	(bad)  
 101f082:	(bad)  
 101f083:	(bad)  
 101f084:	(bad)  
 101f085:	(bad)  
 101f086:	(bad)  
 101f087:	(bad)  
 101f088:	(bad)  
 101f089:	(bad)  
 101f08a:	std    
 101f08b:	(bad)  
 101f08c:	(bad)  
 101f08d:	std    
 101f08e:	sti    
 101f08f:	(bad)  
 101f090:	std    
 101f091:	sti    
 101f092:	stc    
 101f093:	(bad)  
 101f094:	std    
 101f095:	stc    
 101f096:	idiv   edi
 101f098:	cld    
 101f099:	div    ah
 101f09b:	(bad)  
 101f09c:	cld    
 101f09d:	hlt    
 101f09e:	icebp  
 101f09f:	(bad)  
 101f0a0:	sti    
 101f0a1:	repnz out dx,al
 101f0a3:	(bad)  
 101f0a4:	sti    
 101f0a5:	lock jmp 0x101f0a7
 101f0a8:	cli    
 101f0a9:	out    dx,al
 101f0aa:	call   0xe6edeaae
 101f0af:	(bad)  
 101f0b0:	ffreep st(2)
 101f0b2:	mov    bl,0xff
 101f0b4:	arpl   WORD PTR [ecx+0x35],cx
 101f0b7:	inc    DWORD PTR [eax]
	...
 101f0d9:	add    BYTE PTR [eax],al
 101f0db:	add    BYTE PTR [ebx-0x7062],dh
 101f0e1:	(bad)  
 101f0e2:	(bad)  
 101f0e3:	(bad)  
 101f0e4:	(bad)  
 101f0e5:	(bad)  
 101f0e6:	(bad)  
 101f0e7:	inc    ecx
 101f0e9:	stos   DWORD PTR es:[edi],eax
 101f0ea:	pushf  
 101f0eb:	inc    ecx
 101f0ed:	stos   DWORD PTR es:[edi],eax
 101f0ee:	pushf  
 101f0ef:	inc    ecx
 101f0f1:	stos   DWORD PTR es:[edi],eax
 101f0f2:	pushf  
 101f0f3:	inc    ecx
 101f0f5:	stos   DWORD PTR es:[edi],eax
 101f0f6:	pushf  
 101f0f7:	(bad)  
 101f0f8:	mov    edi,0xbaff99a9
 101f0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101f0fe:	xchg   esi,eax
 101f0ff:	push   DWORD PTR [ebp-0x4e006f61]
 101f105:	cdq    
 101f106:	mov    edi,edi
 101f108:	stos   BYTE PTR es:[edi],al
 101f109:	xchg   ebx,eax
 101f10a:	cmp    bh,0xa3
 101f10d:	mov    WORD PTR [ebx-0x1],?
 101f110:	pushf  
 101f111:	test   BYTE PTR [edi+edi*8-0x6a],dh
 101f115:	jge    0x101f183
 101f117:	dec    DWORD PTR [esi-0x79009a8b]
 101f11d:	ins    DWORD PTR es:[edi],dx
 101f11e:	pop    esp
 101f11f:	(bad)  
 101f120:	jle    0x101f188
 101f122:	push   ebp
 101f123:	(bad)  
 101f124:	js     0x101f185
 101f126:	dec    ebp
 101f127:	push   DWORD PTR [edx+0x59]
 101f12a:	inc    esi
 101f12b:	(bad)  
 101f12c:	cli    
 101f12d:	out    dx,al
 101f12e:	call   0xb7c6d132
 101f133:	jmp    DWORD PTR [ebx+0x49]
 101f136:	xor    eax,0xff
	...
 101f15b:	add    BYTE PTR [ebp-0x6d60],dh
 101f161:	(bad)  
 101f162:	(bad)  
 101f163:	(bad)  
 101f164:	(bad)  
 101f165:	(bad)  
 101f166:	(bad)  
 101f167:	(bad)  
 101f168:	(bad)  
 101f169:	(bad)  
 101f16a:	(bad)  
 101f16b:	(bad)  
 101f16c:	(bad)  
 101f16d:	(bad)  
 101f16e:	(bad)  
 101f16f:	(bad)  
 101f170:	(bad)  
 101f171:	(bad)  
 101f172:	(bad)  
 101f173:	(bad)  
 101f174:	(bad)  
 101f175:	(bad)  
 101f176:	(bad)  
 101f177:	(bad)  
 101f178:	(bad)  
 101f179:	(bad)  
 101f17a:	(bad)  
 101f17b:	(bad)  
 101f17c:	(bad)  
 101f17d:	(bad)  
 101f17e:	(bad)  
 101f17f:	(bad)  
 101f180:	(bad)  
 101f181:	(bad)  
 101f182:	(bad)  
 101f183:	(bad)  
 101f184:	(bad)  
 101f185:	(bad)  
 101f186:	(bad)  
 101f187:	(bad)  
 101f188:	(bad)  
 101f189:	(bad)  
 101f18a:	(bad)  
 101f18b:	(bad)  
 101f18c:	(bad)  
 101f18d:	(bad)  
 101f18e:	(bad)  
 101f18f:	(bad)  
 101f190:	(bad)  
 101f191:	(bad)  
 101f192:	cld    
 101f193:	(bad)  
 101f194:	(bad)  
 101f195:	cld    
 101f196:	sti    
 101f197:	(bad)  
 101f198:	(bad)  
 101f199:	cli    
 101f19a:	clc    
 101f19b:	(bad)  
 101f19c:	std    
 101f19d:	stc    
 101f19e:	idiv   bh
 101f1a0:	cld    
 101f1a1:	div    ah
 101f1a3:	(bad)  
 101f1a4:	cld    
 101f1a5:	cmc    
 101f1a6:	icebp  
 101f1a7:	(bad)  
 101f1a8:	sti    
 101f1a9:	repz in eax,dx
 101f1ab:	(bad)  
 101f1ac:	cli    
 101f1ad:	lock jmp 0x101f1af
 101f1b0:	loopne 0x101f179
 101f1b2:	mov    eax,0x354963ff
 101f1b7:	inc    DWORD PTR [eax]
	...
 101f1d9:	add    BYTE PTR [eax],al
 101f1db:	add    BYTE PTR [eax-0x6b5d],bh
 101f1e1:	(bad)  
 101f1e2:	(bad)  
 101f1e3:	(bad)  
 101f1e4:	(bad)  
 101f1e5:	(bad)  
 101f1e6:	(bad)  
 101f1e7:	(bad)  
 101f1e8:	(bad)  
 101f1e9:	(bad)  
 101f1ea:	(bad)  
 101f1eb:	(bad)  
 101f1ec:	(bad)  
 101f1ed:	(bad)  
 101f1ee:	(bad)  
 101f1ef:	(bad)  
 101f1f0:	(bad)  
 101f1f1:	(bad)  
 101f1f2:	(bad)  
 101f1f3:	(bad)  
 101f1f4:	(bad)  
 101f1f5:	(bad)  
 101f1f6:	(bad)  
 101f1f7:	(bad)  
 101f1f8:	(bad)  
 101f1f9:	(bad)  
 101f1fa:	(bad)  
 101f1fb:	(bad)  
 101f1fc:	(bad)  
 101f1fd:	(bad)  
 101f1fe:	(bad)  
 101f1ff:	(bad)  
 101f200:	(bad)  
 101f201:	(bad)  
 101f202:	(bad)  
 101f203:	(bad)  
 101f204:	(bad)  
 101f205:	(bad)  
 101f206:	(bad)  
 101f207:	(bad)  
 101f208:	(bad)  
 101f209:	(bad)  
 101f20a:	(bad)  
 101f20b:	(bad)  
 101f20c:	(bad)  
 101f20d:	(bad)  
 101f20e:	(bad)  
 101f20f:	(bad)  
 101f210:	(bad)  
 101f211:	(bad)  
 101f212:	(bad)  
 101f213:	(bad)  
 101f214:	(bad)  
 101f215:	(bad)  
 101f216:	cld    
 101f217:	(bad)  
 101f218:	(bad)  
 101f219:	sti    
 101f21a:	sti    
 101f21b:	(bad)  
 101f21c:	(bad)  
 101f21d:	cli    
 101f21e:	stc    
 101f21f:	(bad)  
 101f220:	std    
 101f221:	clc    
 101f222:	idiv   bh
 101f224:	leave  
 101f225:	mov    ah,0xa9
 101f227:	(bad)  
 101f228:	mov    ebp,0xb2ff97a5
 101f22d:	cdq    
 101f22e:	mov    edi,edi
 101f230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101f231:	mov    bh,BYTE PTR [eax-0x1]
 101f234:	arpl   WORD PTR [ecx+0x35],cx
 101f237:	inc    DWORD PTR [eax]
	...
 101f259:	add    BYTE PTR [eax],al
 101f25b:	add    BYTE PTR [edx-0x675a],bh
 101f261:	(bad)  
 101f262:	(bad)  
 101f263:	(bad)  
 101f264:	(bad)  
 101f265:	(bad)  
 101f266:	(bad)  
 101f267:	inc    ecx
 101f269:	stos   DWORD PTR es:[edi],eax
 101f26a:	pushf  
 101f26b:	inc    ecx
 101f26d:	stos   DWORD PTR es:[edi],eax
 101f26e:	pushf  
 101f26f:	inc    ecx
 101f271:	stos   DWORD PTR es:[edi],eax
 101f272:	pushf  
 101f273:	inc    ecx
 101f275:	stos   DWORD PTR es:[edi],eax
 101f276:	pushf  
 101f277:	inc    eax
 101f279:	stos   DWORD PTR es:[edi],eax
 101f27a:	pushf  
 101f27b:	(bad)  
 101f27c:	mov    esp,0xb8ff97a6
 101f281:	mov    ds:0x9cb3ff92,al
 101f286:	(bad)  
 101f287:	push   DWORD PTR [ebx-0x4c007264]
 101f28d:	pushf  
 101f28e:	(bad)  
 101f28f:	(bad)  
 101f290:	(bad)  
 101f291:	(bad)  
 101f292:	(bad)  
 101f293:	(bad)  
 101f294:	(bad)  
 101f295:	(bad)  
 101f296:	(bad)  
 101f297:	(bad)  
 101f298:	(bad)  
 101f299:	std    
 101f29a:	cld    
 101f29b:	(bad)  
 101f29c:	(bad)  
 101f29d:	cld    
 101f29e:	sti    
 101f29f:	call   FWORD PTR [esi+0x63ff7687]
 101f2a5:	dec    ecx
 101f2a6:	xor    eax,0x354963ff
 101f2ab:	jmp    DWORD PTR [ebx+0x49]
 101f2ae:	xor    eax,0x354963ff
 101f2b3:	jmp    DWORD PTR [ebx+0x49]
 101f2b6:	xor    eax,0xff
	...
 101f2db:	add    BYTE PTR [eax+ebp*4-0x66],bh
 101f2e2:	(bad)  
 101f2e3:	(bad)  
 101f2e4:	(bad)  
 101f2e5:	(bad)  
 101f2e6:	(bad)  
 101f2e7:	(bad)  
 101f2e8:	(bad)  
 101f2e9:	(bad)  
 101f2ea:	(bad)  
 101f2eb:	(bad)  
 101f2ec:	(bad)  
 101f2ed:	(bad)  
 101f2ee:	(bad)  
 101f2ef:	(bad)  
 101f2f0:	(bad)  
 101f2f1:	(bad)  
 101f2f2:	(bad)  
 101f2f3:	(bad)  
 101f2f4:	(bad)  
 101f2f5:	(bad)  
 101f2f6:	(bad)  
 101f2f7:	(bad)  
 101f2f8:	(bad)  
 101f2f9:	(bad)  
 101f2fa:	(bad)  
 101f2fb:	(bad)  
 101f2fc:	(bad)  
 101f2fd:	(bad)  
 101f2fe:	(bad)  
 101f2ff:	(bad)  
 101f300:	(bad)  
 101f301:	(bad)  
 101f302:	(bad)  
 101f303:	(bad)  
 101f304:	(bad)  
 101f305:	(bad)  
 101f306:	(bad)  
 101f307:	(bad)  
 101f308:	(bad)  
 101f309:	(bad)  
 101f30a:	(bad)  
 101f30b:	(bad)  
 101f30c:	(bad)  
 101f30d:	(bad)  
 101f30e:	(bad)  
 101f30f:	(bad)  
 101f310:	(bad)  
 101f311:	(bad)  
 101f312:	(bad)  
 101f313:	(bad)  
 101f314:	(bad)  
 101f315:	(bad)  
 101f316:	(bad)  
 101f317:	(bad)  
 101f318:	(bad)  
 101f319:	(bad)  
 101f31a:	(bad)  
 101f31b:	(bad)  
 101f31c:	(bad)  
 101f31d:	std    
 101f31e:	cld    
 101f31f:	jmp    DWORD PTR [eax-0x2a008677]
 101f325:	lds    edi,FWORD PTR [ebp-0x5a4e3801]
 101f32b:	push   DWORD PTR [ebp-0x61007163]
 101f331:	xchg   DWORD PTR [esi-0x1],esi
	...
 101f35c:	mov    esi,0xffff9caa
 101f361:	(bad)  
 101f362:	(bad)  
 101f363:	(bad)  
 101f364:	(bad)  
 101f365:	(bad)  
 101f366:	(bad)  
 101f367:	(bad)  
 101f368:	(bad)  
 101f369:	(bad)  
 101f36a:	(bad)  
 101f36b:	(bad)  
 101f36c:	(bad)  
 101f36d:	(bad)  
 101f36e:	(bad)  
 101f36f:	(bad)  
 101f370:	(bad)  
 101f371:	(bad)  
 101f372:	(bad)  
 101f373:	(bad)  
 101f374:	(bad)  
 101f375:	(bad)  
 101f376:	(bad)  
 101f377:	(bad)  
 101f378:	(bad)  
 101f379:	(bad)  
 101f37a:	(bad)  
 101f37b:	(bad)  
 101f37c:	(bad)  
 101f37d:	(bad)  
 101f37e:	(bad)  
 101f37f:	(bad)  
 101f380:	(bad)  
 101f381:	(bad)  
 101f382:	(bad)  
 101f383:	(bad)  
 101f384:	(bad)  
 101f385:	(bad)  
 101f386:	(bad)  
 101f387:	(bad)  
 101f388:	(bad)  
 101f389:	(bad)  
 101f38a:	(bad)  
 101f38b:	(bad)  
 101f38c:	(bad)  
 101f38d:	(bad)  
 101f38e:	(bad)  
 101f38f:	(bad)  
 101f390:	(bad)  
 101f391:	(bad)  
 101f392:	(bad)  
 101f393:	(bad)  
 101f394:	(bad)  
 101f395:	(bad)  
 101f396:	(bad)  
 101f397:	(bad)  
 101f398:	(bad)  
 101f399:	(bad)  
 101f39a:	(bad)  
 101f39b:	(bad)  
 101f39c:	(bad)  
 101f39d:	(bad)  
 101f39e:	(bad)  
 101f39f:	jmp    DWORD PTR [edx-0x1c008374]
 101f3a5:	fcmovbe st,st(3)
 101f3a7:	call   ebp
 101f3a9:	lds    edi,FWORD PTR [edi+edi*8-0x897862]
	...
 101f3dc:	shr    BYTE PTR [ebp-0x61],0xff
 101f3e3:	(bad)  
 101f3e4:	(bad)  
 101f3e5:	(bad)  
 101f3e6:	(bad)  
 101f3e7:	(bad)  
 101f3e8:	(bad)  
 101f3e9:	(bad)  
 101f3ea:	(bad)  
 101f3eb:	(bad)  
 101f3ec:	(bad)  
 101f3ed:	(bad)  
 101f3ee:	(bad)  
 101f3ef:	(bad)  
 101f3f0:	(bad)  
 101f3f1:	(bad)  
 101f3f2:	(bad)  
 101f3f3:	(bad)  
 101f3f4:	(bad)  
 101f3f5:	(bad)  
 101f3f6:	(bad)  
 101f3f7:	(bad)  
 101f3f8:	(bad)  
 101f3f9:	(bad)  
 101f3fa:	(bad)  
 101f3fb:	(bad)  
 101f3fc:	(bad)  
 101f3fd:	(bad)  
 101f3fe:	(bad)  
 101f3ff:	(bad)  
 101f400:	(bad)  
 101f401:	(bad)  
 101f402:	(bad)  
 101f403:	(bad)  
 101f404:	(bad)  
 101f405:	(bad)  
 101f406:	(bad)  
 101f407:	(bad)  
 101f408:	(bad)  
 101f409:	(bad)  
 101f40a:	(bad)  
 101f40b:	(bad)  
 101f40c:	(bad)  
 101f40d:	(bad)  
 101f40e:	(bad)  
 101f40f:	(bad)  
 101f410:	(bad)  
 101f411:	(bad)  
 101f412:	(bad)  
 101f413:	(bad)  
 101f414:	(bad)  
 101f415:	(bad)  
 101f416:	(bad)  
 101f417:	(bad)  
 101f418:	(bad)  
 101f419:	(bad)  
 101f41a:	(bad)  
 101f41b:	(bad)  
 101f41c:	(bad)  
 101f41d:	(bad)  
 101f41e:	(bad)  
 101f41f:	jmp    DWORD PTR [ebp-0xc008172]
 101f425:	out    dx,eax
 101f426:	in     eax,dx
 101f427:	call   FWORD PTR [esi+0xff7687]
	...
 101f459:	add    BYTE PTR [eax],al
 101f45b:	add    dl,al
 101f45d:	scas   eax,DWORD PTR es:[edi]
 101f45e:	mov    eax,ds:0xffffffff
 101f463:	(bad)  
 101f464:	(bad)  
 101f465:	(bad)  
 101f466:	(bad)  
 101f467:	(bad)  
 101f468:	(bad)  
 101f469:	(bad)  
 101f46a:	(bad)  
 101f46b:	(bad)  
 101f46c:	(bad)  
 101f46d:	(bad)  
 101f46e:	(bad)  
 101f46f:	(bad)  
 101f470:	(bad)  
 101f471:	std    
 101f472:	cld    
 101f473:	(bad)  
 101f474:	(bad)  
 101f475:	sti    
 101f476:	sti    
 101f477:	(bad)  
 101f478:	std    
 101f479:	stc    
 101f47a:	clc    
 101f47b:	(bad)  
 101f47c:	std    
 101f47d:	clc    
 101f47e:	cmc    
 101f47f:	(bad)  
 101f480:	cld    
 101f481:	cmc    
 101f482:	repnz (bad) 
 101f484:	sti    
 101f485:	repz out dx,eax
 101f487:	(bad)  
 101f488:	sti    
 101f489:	lock jmp 0x101f48b
 101f48c:	cli    
 101f48d:	in     eax,dx
 101f48e:	call   0xe5edee92
 101f493:	(bad)  
 101f494:	clc    
 101f495:	jmp    0xe8f9f47c
 101f49a:	(bad)  
 101f49c:	mul    esp
 101f49e:	(bad)  
 101f4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101f4a1:	xchg   ecx,eax
 101f4a2:	cmp    bh,0xa9
 101f4a5:	xchg   esp,eax
 101f4a6:	test   bh,bh
	...
 101f4dc:	lds    esi,FWORD PTR [ecx-0x503c005d]
 101f4e2:	mov    eax,ds:0xa0aec2ff
 101f4e7:	inc    eax
 101f4e9:	lods   al,BYTE PTR ds:[esi]
 101f4ea:	lahf   
 101f4eb:	(bad)  
 101f4ec:	mov    edi,0xbdff9cab
 101f4f1:	test   eax,0xa7bcff9b
 101f4f6:	call   0xb8ff:0x97a6bbff
 101f4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101f4fe:	xchg   ebp,eax
 101f4ff:	push   DWORD PTR [edi-0x49006b5e]
 101f505:	mov    eax,ds:0x9fb3ff92
 101f50a:	nop
 101f50b:	push   DWORD PTR [edx-0x4f007063]
 101f511:	fwait
 101f512:	(bad)  
 101f513:	jmp    FWORD PTR [esi-0x52007466]
 101f519:	cwde   
 101f51a:	mov    bh,bh
 101f51c:	stos   DWORD PTR es:[edi],eax
 101f51d:	xchg   esi,eax
 101f51e:	xchg   edi,edi
 101f520:	test   eax,0xff8494
	...
 101f555:	add    BYTE PTR [eax],al
 101f557:	add    bh,bh
 101f559:	(bad)  
 101f55a:	cld    
 101f55b:	ud0    edi,edi
 101f55e:	lock add eax,DWORD PTR [eax-0x7fff0000]
 101f565:	add    BYTE PTR [eax],al
 101f567:	add    DWORD PTR [eax-0x7fff0000],eax
 101f56d:	add    BYTE PTR [eax],al
 101f56f:	add    DWORD PTR [eax-0x7fff0000],eax
 101f575:	add    BYTE PTR [eax],al
 101f577:	add    DWORD PTR [eax-0x7fff0000],eax
 101f57d:	add    BYTE PTR [eax],al
 101f57f:	add    DWORD PTR [eax-0x7fff0000],eax
 101f585:	add    BYTE PTR [eax],al
 101f587:	add    eax,DWORD PTR [eax-0x7ff10000]
 101f58d:	add    BYTE PTR [eax],al
 101f58f:	aas    
 101f590:	add    BYTE PTR [eax],0x0
 101f593:	inc    DWORD PTR [eax-0x7f010000]
 101f599:	add    BYTE PTR [eax],al
 101f59b:	inc    DWORD PTR [eax-0x7f010000]
 101f5a1:	add    BYTE PTR [eax],al
 101f5a3:	inc    DWORD PTR [eax-0x7f010000]
 101f5a9:	add    BYTE PTR [eax],al
 101f5ab:	inc    DWORD PTR [eax-0x7f010000]
 101f5b1:	add    BYTE PTR [eax],al
 101f5b3:	inc    DWORD PTR [eax-0x7f010000]
 101f5b9:	add    BYTE PTR [eax],al
 101f5bb:	inc    DWORD PTR [eax-0x7f010000]
 101f5c1:	add    BYTE PTR [eax],al
 101f5c3:	inc    DWORD PTR [eax-0x7f00ff00]
 101f5c9:	add    BYTE PTR [ebx],al
 101f5cb:	inc    DWORD PTR [eax-0x7f00f900]
 101f5d1:	add    BYTE PTR [edi],cl
 101f5d3:	inc    DWORD PTR [eax+0x28ff1f00]
 101f5d9:	add    BYTE PTR [eax],al
 101f5db:	add    BYTE PTR [eax],dl
 101f5dd:	add    BYTE PTR [eax],al
 101f5df:	add    BYTE PTR [eax],ah
 101f5e1:	add    BYTE PTR [eax],al
 101f5e3:	add    BYTE PTR [ecx],al
 101f5e5:	add    BYTE PTR [eax],ah
 101f5e7:	add    BYTE PTR [eax],al
 101f5e9:	add    BYTE PTR [eax],al
 101f5eb:	add    BYTE PTR [eax+0x4],al
	...
 101f602:	add    BYTE PTR [eax],al
 101f604:	jno    0x101f65d
 101f606:	inc    esp
 101f607:	jmp    DWORD PTR [ebx+0x49]
 101f60a:	xor    eax,0x354963ff
 101f60f:	jmp    DWORD PTR [ebx+0x49]
 101f612:	xor    eax,0x354963ff
 101f617:	jmp    DWORD PTR [ebx+0x49]
 101f61a:	xor    eax,0x354963ff
 101f61f:	jmp    DWORD PTR [ebx+0x4a]
 101f622:	jmp    DWORD PTR ss:[edx+0x4f]
 101f626:	inc    ecx
 101f627:	call   DWORD PTR [ecx]
 101f629:	js     0x101f5b7
 101f62b:	inc    DWORD PTR [eax]
 101f62d:	sub    al,0x43
 101f62f:	inc    DWORD PTR [eax]
 101f631:	add    BYTE PTR [eax],al
 101f633:	push   DWORD PTR [edi]
 101f635:	xor    eax,0x1723da37
 101f63a:	pop    ss
 101f63b:	xor    DWORD PTR [esi+0x2a9a1],eax
 101f641:	add    BYTE PTR [eax],al
 101f643:	add    BYTE PTR [esi+0x5c],dh
 101f646:	dec    ecx
 101f647:	(bad)  
 101f648:	out    dx,eax
 101f649:	rol    esi,cl
 101f64b:	(bad)  
 101f64c:	fidivr WORD PTR [edi-0x42200051]
 101f652:	stos   DWORD PTR es:[edi],eax
 101f653:	(bad)  
 101f654:	fdivr  QWORD PTR [eax-0x4b250059]
 101f65a:	mov    ds:0x9db0d8ff,al
 101f65f:	call   DWORD PTR [ebp-0x6f]
 101f662:	scas   al,BYTE PTR es:[edi]
 101f663:	call   DWORD PTR [ecx]
 101f665:	js     0x101f5f3
 101f667:	inc    DWORD PTR [eax]
 101f669:	(bad)  
 101f66b:	inc    DWORD PTR [eax]
 101f66d:	loopne 0x101f66e
 101f66f:	inc    DWORD PTR [eax]
 101f671:	jp     0x101f61c
 101f673:	inc    DWORD PTR [eax]
 101f675:	add    eax,0xff25
 101f67a:	add    bh,bh
 101f67c:	xor    DWORD PTR [esi],edi
 101f67e:	inc    esi
 101f67f:	mov    dl,0x0
 101f681:	add    BYTE PTR [eax],al
 101f683:	add    BYTE PTR [edx+0x61],bh
 101f686:	dec    esi
 101f687:	(bad)  
 101f688:	clc    
 101f689:	loop   0x101f663
 101f68b:	push   esp
 101f68d:	fmul   st,st(2)
 101f68f:	push   edx
 101f691:	aad    0xc8
 101f693:	push   edx
 101f695:	rol    esp,cl
 101f697:	push   ecx
 101f699:	rol    ecx,1
 101f69b:	push   ecx
 101f69d:	into   
 101f69e:	mov    edi,0x64580dff
 101f6a3:	inc    DWORD PTR [eax]
 101f6a5:	(bad)  
 101f6a6:	(bad)  
 101f6a7:	inc    DWORD PTR [eax]
 101f6a9:	clc    
 101f6aa:	(bad)  
 101f6ab:	inc    DWORD PTR [eax]
 101f6ad:	(bad)  
 101f6af:	inc    DWORD PTR [eax]
 101f6b1:	test   DWORD PTR [ecx-0x5b8aff01],esi
 101f6b7:	inc    DWORD PTR [eax]
 101f6b9:	dec    edx
 101f6ba:	jnp    0x101f6bb
 101f6bc:	add    BYTE PTR [edx],al
 101f6be:	sbb    edi,edi
 101f6c0:	add    BYTE PTR [eax],al
 101f6c2:	add    BYTE PTR [eax],al
 101f6c4:	and    BYTE PTR [edi+0x55],0xff
 101f6c8:	clc    
 101f6c9:	in     al,0xdb
 101f6cb:	dec    ebp
 101f6cd:	mov    bh,0xa7
 101f6cf:	inc    ebp
 101f6d1:	scas   eax,DWORD PTR es:[edi]
 101f6d2:	sahf   
 101f6d3:	(bad)  
 101f6d4:	mov    esp,0xb4ff95a6
 101f6d9:	fwait
 101f6da:	mov    edi,edi
 101f6dc:	lods   al,BYTE PTR ds:[esi]
 101f6dd:	xchg   ebx,eax
 101f6de:	cmp    edi,0xff837728
 101f6e4:	sub    edi,edi
 101f6e6:	(bad)  
 101f6e7:	inc    DWORD PTR ds:0xfffff8
 101f6ed:	in     al,dx
 101f6ee:	(bad)  
 101f6ef:	inc    DWORD PTR [eax]
 101f6f1:	sahf   
 101f6f2:	int3   
 101f6f3:	inc    DWORD PTR [eax]
 101f6f5:	test   BYTE PTR [eax-0x6191ff01],dh
 101f6fb:	inc    DWORD PTR [eax]
 101f6fd:	sbb    DWORD PTR ds:0xfc,esi
 101f703:	add    BYTE PTR [esi-0x600a593],al
 101f709:	call   0xe3f8f6ee
 101f70e:	xlat   BYTE PTR ds:[ebx]
 101f70f:	push   ebp
 101f711:	(bad)  
 101f713:	push   esp
 101f715:	(bad)  
 101f717:	push   esp
 101f719:	fcmove st,st(5)
 101f71b:	push   ebx
 101f71d:	xlat   BYTE PTR ds:[ebx]
 101f71e:	retf   0x35ff
 101f721:	jle    0x101f6ad
 101f723:	dec    DWORD PTR [edi-0x1]
 101f726:	(bad)  
 101f727:	push   DWORD PTR ds:0xffffff
 101f72d:	in     eax,dx
 101f72e:	(bad)  
 101f72f:	inc    DWORD PTR [eax]
 101f731:	mov    esp,0xab00ffe9
 101f736:	aam    0xff
 101f738:	add    BYTE PTR [eax+0x2300ffbf],dl
 101f73e:	cmp    al,0xfc
 101f740:	add    BYTE PTR [eax],al
 101f742:	add    BYTE PTR [eax],al
 101f744:	mov    esi,DWORD PTR [ebx+0x61]
 101f747:	(bad)  
 101f748:	cli    
 101f749:	jmp    0x101f72f
 101f74b:	call   esp
 101f74d:	mov    ebp,0xb7ccffae
 101f752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101f753:	inc    ebp
 101f755:	scas   al,BYTE PTR es:[edi]
 101f756:	popf   
 101f757:	(bad)  
 101f758:	mov    esp,0xb3ff94a5
 101f75d:	fwait
 101f75e:	mov    bh,bh
 101f760:	inc    edx
 101f761:	xchg   ecx,eax
 101f762:	fwait
 101f763:	jmp    FWORD PTR [ebx-0x1]
 101f766:	(bad)  
 101f767:	jmp    DWORD PTR [ebx]
 101f769:	out    0xef,eax
 101f76b:	jmp    DWORD PTR [esi-0x19]
 101f76e:	icebp  
 101f76f:	inc    DWORD PTR [eax]
 101f771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101f772:	(bad)  
 101f773:	inc    DWORD PTR [eax]
 101f775:	imul   ebx,DWORD PTR [ecx-0x1643ff01],0xffffffff
 101f77c:	add    BYTE PTR [edx],dh
 101f77e:	dec    ebp
 101f77f:	cld    
 101f780:	add    BYTE PTR [eax],al
 101f782:	add    BYTE PTR [eax],al
 101f784:	clc    
 101f785:	out    0xde,al
 101f787:	(bad)  
 101f788:	sti    
 101f789:	out    dx,al
 101f78a:	out    0xff,eax
 101f78c:	stc    
 101f78d:	in     al,dx
 101f78e:	in     al,0xff
 101f790:	clc    
 101f791:	call   0xe7f9f777
 101f796:	(bad)  
 101f798:	mul    ebx
 101f79a:	fcos   
 101f79c:	cmc    
 101f79d:	loope  0x101f775
 101f79f:	call   DWORD PTR [ebx]
 101f7a1:	push   0xe044ff78
 101f7a6:	jmp    0xf1ff:0xfffff3ff
 101f7ad:	(bad)  
 101f7ae:	(bad)  
 101f7af:	call   FWORD PTR [edi+edi*8-0x1]
 101f7b3:	call   FWORD PTR [eax]
 101f7b5:	jmp    0x6c02f7b3
 101f7ba:	cdq    
 101f7bb:	inc    DWORD PTR [eax]
 101f7bd:	pop    ss
 101f7be:	xor    eax,0xaa1faaff
 101f7c3:	(bad)  
 101f7c4:	mov    edi,0xd0ffb854
 101f7c9:	or     ecx,0xebeffaff
 101f7cf:	(bad)  
 101f7d0:	mov    edi,0xf8ffba56
 101f7d5:	jmp    0x101f7bb
 101f7d7:	(bad)  
 101f7d8:	mov    edi,0xf7ffb955
 101f7dd:	in     eax,0xdd
 101f7df:	call   FWORD PTR [ecx+0x55]
 101f7e2:	xchg   bh,bh
 101f7e4:	push   0xa1ffc1a4
 101f7e9:	iret   
 101f7ea:	in     al,0xff
 101f7ec:	(bad)  
 101f7ed:	(bad)  
 101f7ee:	(bad)  
 101f7ef:	jmp    DWORD PTR [esi-0x1]
 101f7f2:	(bad)  
 101f7f3:	inc    DWORD PTR [eax]
 101f7f5:	(bad)  
 101f7f6:	jecxz  0x101f7f7
 101f7f8:	push   0xcffc1a4
 101f7fd:	sub    al,BYTE PTR [ecx-0x4e]
 101f800:	stos   BYTE PTR es:[edi],al
 101f801:	pop    ds
 101f802:	stos   BYTE PTR es:[edi],al
 101f803:	mov    ebx,0xffdee6f8
 101f808:	rcr    BYTE PTR [eax-0x43],0xff
 101f80c:	sti    
 101f80d:	cmc    
 101f80e:	lock inc eax
 101f811:	push   edi
 101f812:	mov    esp,0xaa1faaff
 101f817:	(bad)  
 101f818:	mov    edi,0xf9ffba56
 101f81d:	jmp    0xffd2:0xb2e2ffe3
 101f824:	xchg   ecx,eax
 101f825:	xor    ch,BYTE PTR [edx-0x3e5b9701]
 101f82b:	inc    DWORD PTR [eax]
 101f82d:	imul   ebx,DWORD PTR [ecx-0x6694ff01],0xffffffff
 101f834:	push   0x3effc1a4
 101f839:	mov    dh,BYTE PTR [ebx+0x675e5a31]
 101f83f:	add    ch,BYTE PTR [edx-0x74455e1]
 101f845:	out    0xde,al
 101f847:	(bad)  
 101f848:	mov    edx,0xfdffb84a
 101f84d:	clc    
 101f84e:	idiv   bh
 101f850:	scas   eax,DWORD PTR es:[edi]
 101f851:	sub    eax,0x82d0ffaf
 101f856:	retf   
 101f857:	jmp    FWORD PTR [edi-0x50051d3]
 101f85d:	out    dx,eax
 101f85e:	jmp    0xb4ff:0xca8dd5ff
 101f865:	cmp    dh,BYTE PTR [ecx-0x2a392401]
 101f86b:	push   esp
 101f86d:	(bad)  
 101f86f:	jmp    DWORD PTR [ebx+0x49]
 101f872:	xor    eax,0xff
	...
 101f87f:	add    BYTE PTR [edx-0x402255e1],ch
 101f885:	push   esp
 101f886:	mov    eax,0xd7a1dcff
 101f88b:	(bad)  
 101f88c:	(bad)  
 101f88d:	sti    
 101f88e:	cli    
 101f88f:	push   DWORD PTR [ebp-0x2004bc4]
 101f895:	clc    
 101f896:	idiv   bh
 101f898:	mov    ch,0x3c
 101f89a:	mov    ah,0xff
 101f89c:	cld    
 101f89d:	hlt    
 101f89e:	out    dx,eax
 101f89f:	inc    ebp
 101f8a1:	gs sar bh,0xef
 101f8a5:	shl    ecx,cl
 101f8a7:	dec    edx
 101f8a9:	jno    0x101f86d
 101f8ab:	push   edi
 101f8ad:	loop   0x101f886
 101f8af:	jmp    DWORD PTR [ebx+0x49]
 101f8b2:	xor    eax,0xff
	...
 101f8c3:	add    al,bh
 101f8c5:	out    0xde,al
 101f8c7:	(bad)  
 101f8c8:	(bad)  
 101f8c9:	stc    
 101f8ca:	idiv   edi
 101f8cc:	(bad)  
 101f8cd:	(bad)  
 101f8ce:	(bad)  
 101f8cf:	(bad)  
 101f8d0:	(bad)  
 101f8d1:	std    
 101f8d2:	sti    
 101f8d3:	(bad)  
 101f8d4:	(bad)  
 101f8d5:	sti    
 101f8d6:	cli    
 101f8d7:	(bad)  
 101f8d8:	std    
 101f8d9:	cli    
 101f8da:	idiv   edi
 101f8dc:	std    
 101f8dd:	clc    
 101f8de:	cmc    
 101f8df:	(bad)  
 101f8e0:	cld    
 101f8e1:	cmc    
 101f8e2:	repnz (bad) 
 101f8e4:	sti    
 101f8e5:	repz out dx,eax
 101f8e7:	(bad)  
 101f8e8:	sti    
 101f8e9:	lock in al,dx
 101f8eb:	(bad)  
 101f8ec:	sti    
 101f8ed:	jmp    0xff35:0x4963ffe0
	...
 101f904:	fistp  QWORD PTR [ebp-0x4010055]
 101f90a:	stc    
 101f90b:	(bad)  
 101f90c:	fcmovb st,st(3)
 101f90e:	mov    ah,0xff
 101f910:	sar    DWORD PTR [ebp+ebp*4-0x594b3301],cl
 101f917:	inc    esp
 101f919:	lods   eax,DWORD PTR ds:[esi]
 101f91a:	pushf  
 101f91b:	(bad)  
 101f91c:	cli    
 101f91d:	jmp    0xfff7:0xf9feffe2
 101f924:	mov    ds:0x6cff7c8c,al
 101f929:	push   ecx
 101f92a:	cmp    eax,0x3d516cff
 101f92f:	jmp    DWORD PTR [ebx+0x49]
 101f932:	xor    eax,0xff
	...
 101f943:	add    BYTE PTR [eax-0x1006a5c],bh
 101f949:	cld    
 101f94a:	sti    
 101f94b:	(bad)  
 101f94c:	(bad)  
 101f94d:	(bad)  
 101f94e:	(bad)  
 101f94f:	(bad)  
 101f950:	(bad)  
 101f951:	(bad)  
 101f952:	(bad)  
 101f953:	(bad)  
 101f954:	(bad)  
 101f955:	(bad)  
 101f956:	(bad)  
 101f957:	(bad)  
 101f958:	(bad)  
 101f959:	(bad)  
 101f95a:	(bad)  
 101f95b:	(bad)  
 101f95c:	(bad)  
 101f95d:	std    
 101f95e:	std    
 101f95f:	(bad)  
 101f960:	(bad)  
 101f961:	cld    
 101f962:	sti    
 101f963:	jmp    DWORD PTR [edx-0x18008374]
 101f969:	(bad)  
 101f96b:	jmp    DWORD PTR [ebx+0xff7d8d]
	...
 101f981:	add    BYTE PTR [eax],al
 101f983:	add    BYTE PTR [ebp-0x6458],bh
 101f989:	(bad)  
 101f98a:	(bad)  
 101f98b:	(bad)  
 101f98c:	(bad)  
 101f98d:	(bad)  
 101f98e:	(bad)  
 101f98f:	(bad)  
 101f990:	(bad)  
 101f991:	(bad)  
 101f992:	(bad)  
 101f993:	(bad)  
 101f994:	(bad)  
 101f995:	(bad)  
 101f996:	(bad)  
 101f997:	(bad)  
 101f998:	(bad)  
 101f999:	(bad)  
 101f99a:	(bad)  
 101f99b:	(bad)  
 101f99c:	(bad)  
 101f99d:	(bad)  
 101f99e:	(bad)  
 101f99f:	(bad)  
 101f9a0:	(bad)  
 101f9a1:	(bad)  
 101f9a2:	(bad)  
 101f9a3:	jmp    DWORD PTR [edx-0x5c008374]
 101f9a9:	lea    edi,[ebp-0x1]
	...
 101f9c4:	ret    0xa0ae
 101f9c7:	(bad)  
 101f9c8:	mov    ebp,0xb8ff9ba8
 101f9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 101f9ce:	xchg   ebp,eax
 101f9cf:	push   DWORD PTR [ebx-0x51006f61]
 101f9d5:	cdq    
 101f9d6:	mov    bh,bh
 101f9d8:	test   al,0x93
 101f9da:	cmp    edi,0xffffffa3
 101f9dd:	lea    edi,[ebp-0x1]
 101f9e0:	popf   
 101f9e1:	xchg   BYTE PTR [esi-0x1],dh
 101f9e4:	xchg   edi,eax
 101f9e5:	sub    BYTE PTR [edi-0x1],0x0
	...
 101f9fd:	add    BYTE PTR [eax],al
 101f9ff:	add    BYTE PTR [eax-0x80000000],al
 101fa05:	add    BYTE PTR [eax],al
 101fa07:	add    BYTE PTR [eax-0x80000000],al
 101fa0d:	add    BYTE PTR [eax],al
 101fa0f:	add    BYTE PTR [eax-0x80000000],al
 101fa15:	add    BYTE PTR [eax],al
 101fa17:	add    BYTE PTR [eax+0x0],al
	...
 101fa25:	pop    es
 101fa26:	add    BYTE PTR [eax],al
 101fa28:	add    BYTE PTR [edi],al
 101fa2a:	add    BYTE PTR [eax],al
 101fa2c:	add    BYTE PTR [edi],0x0
 101fa2f:	add    BYTE PTR [eax-0x7ffffff9],al
 101fa35:	sldt   WORD PTR [eax]
 101fa38:	sbb    BYTE PTR [edi],0x0
 101fa3b:	add    BYTE PTR [eax+0x2800003f],al
 101fa41:	add    BYTE PTR [eax],al
 101fa43:	add    BYTE PTR [eax],ah
 101fa45:	add    BYTE PTR [eax],al
 101fa47:	add    BYTE PTR [eax+0x0],al
 101fa4a:	add    BYTE PTR [eax],al
 101fa4c:	add    DWORD PTR [eax],eax
 101fa4e:	or     BYTE PTR [eax],al
	...
 101fa6c:	(bad)  
 101fa6d:	std    
 101fa6e:	inc    DWORD PTR [eax]
 101fa70:	mov    ah,0xad
 101fa72:	mov    dl,0x0
 101fa74:	jns    0x101faeb
 101fa76:	ja     0x101fa78
 101fa78:	retf   
 101fa79:	pushf  
 101fa7a:	mov    ds:0xe2e2ee00,al
 101fa7f:	add    BYTE PTR [eax-0x75ff6060],bh
 101fa85:	ins    DWORD PTR es:[edi],dx
 101fa86:	addr16 add bh,bh
 101fa89:	jmp    0x90:0x9cbc00e4
 101fa90:	stc    
 101fa91:	rol    ebp,cl
 101fa93:	add    BYTE PTR [edx-0x10ff6965],ch
 101fa99:	int3   
 101fa9a:	mov    esi,0xeef1f800
 101fa9f:	add    BYTE PTR [eax-0x1ff7d74],ah
 101faa5:	jecxz  0x101fa7d
 101faa7:	add    bl,cl
 101faa9:	mov    ebp,0xf3ff00b6
 101faae:	in     eax,dx
 101faaf:	add    bh,bh
 101fab1:	sti    
 101fab2:	stc    
 101fab3:	add    BYTE PTR [ebx-0x4fff7467],dh
 101fab9:	cdq    
 101faba:	mov    al,BYTE PTR [eax]
 101fabc:	mov    dh,0xac
 101fabe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 101fabf:	add    BYTE PTR [ebp+0x6a],bh
 101fac2:	pop    esp
 101fac3:	add    BYTE PTR [edx-0x41ff968c],al
 101fac9:	mov    bl,0xaa
 101facb:	add    BYTE PTR [ecx-0x31ff6058],dh
 101fad1:	leave  
 101fad2:	les    eax,FWORD PTR [eax]
 101fad4:	nop
 101fad5:	test   DWORD PTR [ecx+0x0],edi
 101fad8:	ror    dh,cl
 101fada:	leave  
 101fadb:	add    bh,dl
 101fadd:	aam    0xd0
 101fadf:	add    dh,dl
 101fae1:	ror    edi,cl
 101fae3:	add    bh,bh
 101fae5:	cld    
 101fae6:	cmc    
 101fae7:	add    bh,bh
 101fae9:	(bad)  
 101faea:	sti    
 101faeb:	add    bh,ah
 101faed:	jecxz  0x101faab
 101faef:	add    bh,bh
 101faf1:	(bad)  
 101faf2:	cld    
 101faf3:	add    al,dl
 101faf5:	fisub  WORD PTR [esi+0x4fde8100]
 101fafb:	add    BYTE PTR [esi],dh
 101fafd:	xlat   BYTE PTR ds:[ebx]
 101fafe:	or     DWORD PTR [eax],eax
 101fb00:	jmp    0x101fafa
 101fb02:	hlt    
 101fb03:	add    BYTE PTR [esp+edi*8-0x33ff03],cl
 101fb0a:	inc    DWORD PTR [eax]
 101fb0c:	sbb    edi,eax
 101fb0e:	inc    DWORD PTR [eax]
 101fb10:	imul   esi,esi,0xfffffffb
 101fb13:	add    BYTE PTR [edi],ah
 101fb15:	(bad)  
 101fb17:	add    BYTE PTR [esi-0x1eff080e],dh
 101fb1d:	cli    
 101fb1e:	cld    
 101fb1f:	add    ah,ah
 101fb21:	cli    
 101fb22:	cld    
 101fb23:	add    BYTE PTR [esi],al
 101fb25:	shr    ebx,cl
 101fb27:	add    BYTE PTR ds:0x3a00d6c2,bl
 101fb2d:	(bad)  
 101fb2e:	(bad)  
 101fb2f:	add    BYTE PTR [edi+ebp*8-0xb3cff0a],ch
 101fb36:	stc    
 101fb37:	add    ch,dl
 101fb39:	idiv   dl
 101fb3b:	add    BYTE PTR [eax],al
 101fb3d:	rcr    bl,0x0
 101fb40:	sahf   
 101fb41:	jmp    0xf0:0xe9ba00f5
 101fb48:	(bad)  
 101fb49:	out    dx,eax
 101fb4a:	cmc    
 101fb4b:	add    cl,dl
 101fb4d:	repnz test DWORD PTR [eax],0xf8f4d7
 101fb54:	(bad)  
 101fb56:	cli    
 101fb57:	add    cl,ah
 101fb59:	clc    
 101fb5a:	sti    
 101fb5b:	add    ah,ah
 101fb5d:	clc    
 101fb5e:	sti    
 101fb5f:	add    BYTE PTR [eax],al
 101fb61:	mov    cl,0xcd
 101fb63:	add    BYTE PTR [edx],ah
 101fb65:	mov    al,ds:0xd54a00b5
 101fb6a:	in     al,dx
 101fb6b:	add    BYTE PTR [esi-0x43],al
 101fb6e:	rol    DWORD PTR [eax],cl
 101fb70:	push   ebp
 101fb71:	(bad)  
 101fb72:	fadd   DWORD PTR [eax]
 101fb74:	push   esp
 101fb75:	mov    edx,0xc65c00cc
 101fb7a:	fld    DWORD PTR [eax]
 101fb7c:	pop    esi
 101fb7d:	leave  
 101fb7e:	fadd   QWORD PTR [eax]
 101fb80:	pop    edx
 101fb81:	mov    ebp,0xca6100cf
 101fb86:	fld    QWORD PTR [eax]
 101fb88:	fs int3 
 101fb8a:	fiadd  WORD PTR [eax]
 101fb8c:	imul   ecx,esi,0xd16e00e0
 101fb92:	loope  0x101fb94
 101fb94:	je     0x101fb6a
 101fb96:	in     al,0x0
 101fb98:	jp     0x101fb71
 101fb9a:	out    0x0,al
 101fb9c:	mov    ebx,esi
 101fb9e:	in     al,dx
 101fb9f:	add    BYTE PTR [ebx-0x53ff131e],ah
 101fba5:	loop   0x101fb92
 101fba7:	add    dl,al
 101fba9:	in     al,dx
 101fbaa:	repz add ah,cl
 101fbad:	lock test BYTE PTR [eax],0xd3
 101fbb1:	repz clc 
 101fbb3:	add    dh,bl
 101fbb5:	clc    
 101fbb6:	cld    
 101fbb7:	add    dh,bl
 101fbb9:	idiv   dl
 101fbbb:	add    BYTE PTR [eax],al
 101fbbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101fbbe:	mov    BYTE PTR [eax],0x40
 101fbc1:	mov    bh,0xd0
 101fbc3:	add    BYTE PTR [edx-0x47],al
 101fbc6:	rol    DWORD PTR [eax],1
 101fbc8:	inc    esi
 101fbc9:	mov    ecx,0xbe4900d1
 101fbce:	aad    0x0
 101fbd0:	dec    esp
 101fbd1:	mov    edi,0xba4c00d5
 101fbd6:	rol    BYTE PTR [eax],1
 101fbd8:	dec    esi
 101fbd9:	mov    ebp,0xc15000d3
 101fbde:	xlat   BYTE PTR ds:[ebx]
 101fbdf:	add    BYTE PTR [ebx-0x52],cl
 101fbe2:	ret    0x5300
 101fbe5:	mov    edi,0xb34f00d5
 101fbea:	mov    BYTE PTR [eax],0x5a
 101fbed:	(bad)  
 101fbee:	fiadd  DWORD PTR [eax]
 101fbf0:	pop    ecx
 101fbf1:	rcl    esi,0x0
 101fbf4:	pop    ebp
 101fbf5:	ret    
 101fbf6:	fadd   DWORD PTR [eax]
 101fbf8:	pop    edx
 101fbf9:	mov    ch,0xc8
 101fbfb:	add    BYTE PTR [ecx-0x67ff1b29],bl
 101fc01:	rcr    esi,cl
 101fc03:	add    BYTE PTR [ebx-0x4cff1b27],ah
 101fc09:	in     al,0xee
 101fc0b:	add    BYTE PTR [esi+0x4200f5ec],bh
 101fc11:	mov    ebx,DWORD PTR [ebp-0x36499f00]
 101fc17:	add    BYTE PTR [ebx-0x2b],dh
 101fc1a:	in     eax,dx
 101fc1b:	add    BYTE PTR [esi-0x28],bh
 101fc1e:	in     eax,dx
 101fc1f:	add    BYTE PTR [eax-0x42ff1b26],dh
 101fc25:	jecxz  0x101fc13
 101fc27:	add    BYTE PTR [esi+ebx*8-0x3bbeff1a],bh
 101fc2e:	jmp    0x6300:0xc2a53900
 101fc35:	shl    edx,cl
 101fc37:	add    BYTE PTR [ebx-0x35],ah
 101fc3a:	call   0xf5dc703f
 101fc3f:	add    BYTE PTR [edx-0x34ff2538],cl
 101fc45:	call   0xedd3fd3a
 101fc4a:	repz add BYTE PTR [ebx-0x3b],dl
 101fc4e:	out    0x0,eax
 101fc50:	xor    DWORD PTR [esp+eax*8-0x22326700],0x0
 101fc58:	ret    0xf0e5
 101fc5b:	add    dh,al
 101fc5d:	loop   0x101fc4a
 101fc5f:	add    BYTE PTR [eax],cl
 101fc61:	lea    edi,[ebp-0x1d53e400]
 101fc67:	add    BYTE PTR [esi],bl
 101fc69:	mov    ch,0xed
 101fc6b:	add    BYTE PTR [edi],ch
 101fc6d:	mov    eax,0xb54200e9
 101fc72:	fld    QWORD PTR [eax]
 101fc74:	pop    eax
 101fc75:	xchg   esi,eax
 101fc76:	stos   DWORD PTR es:[edi],eax
 101fc77:	add    BYTE PTR [esi-0x46],ch
 101fc7a:	aam    0x0
 101fc7c:	jns    0x101fc44
 101fc7e:	loope  0x101fc80
 101fc80:	jl     0x101fc40
 101fc82:	aad    0x0
 101fc84:	xchg   esp,ecx
 101fc86:	jecxz  0x101fc88
 101fc88:	jo     0x101fc27
 101fc8a:	lods   eax,DWORD PTR ds:[esi]
 101fc8b:	add    BYTE PTR [esp+ebp*4-0x42],bh
 101fc8f:	add    BYTE PTR [ecx+ecx*8-0x1c27ff2d],ch
 101fc96:	out    0x0,eax
 101fc98:	add    BYTE PTR [edx+0x66],cl
 101fc9b:	add    BYTE PTR [edx],dl
 101fc9d:	lods   eax,DWORD PTR ds:[esi]
 101fc9e:	jmp    0xe00:0xe6a91200
 101fca5:	jl     0x101fc4f
 101fca7:	add    BYTE PTR [ebx],bl
 101fca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101fcaa:	fild   WORD PTR [eax]
 101fcac:	pop    ss
 101fcad:	nop
 101fcae:	ret    
 101fcaf:	add    BYTE PTR [esi],bl
 101fcb1:	mov    ds:0xa87600da,eax
 101fcb6:	mov    ebp,0xc2af7d00
 101fcbb:	add    BYTE PTR [ebx-0x5f],dh
 101fcbe:	mov    bl,0x0
 101fcc0:	ins    DWORD PTR es:[edi],dx
 101fcc1:	cdq    
 101fcc2:	stos   BYTE PTR es:[edi],al
 101fcc3:	add    BYTE PTR [eax-0x7aff3b4f],al
 101fcc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 101fcca:	mov    dl,0x0
 101fccc:	xchg   esi,eax
 101fccd:	scas   al,BYTE PTR es:[edi]
 101fcce:	mov    eax,0xc1bcb000
 101fcd3:	add    BYTE PTR [edi],cl
 101fcd5:	popf   
 101fcd6:	fiadd  DWORD PTR [eax]
 101fcd8:	adc    ah,BYTE PTR [ebx-0x63e4ff1e]
 101fcde:	aam    0x0
 101fce0:	sbb    edx,DWORD PTR [eax-0x7eaaff3e]
 101fce6:	xchg   ebp,eax
 101fce7:	add    BYTE PTR [esi+0x72],cl
 101fcea:	add    BYTE PTR [eax],0x68
 101fced:	xchg   esi,eax
 101fcee:	stos   DWORD PTR es:[edi],eax
 101fcef:	add    BYTE PTR [ebp-0x7a],bl
 101fcf2:	cdq    
 101fcf3:	add    BYTE PTR [ebp-0x6f],ah
 101fcf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 101fcf7:	add    BYTE PTR [ebx-0x68],ch
 101fcfa:	lods   eax,DWORD PTR ds:[esi]
 101fcfb:	add    BYTE PTR [edi-0x63],ch
 101fcfe:	mov    dl,0x0
 101fd00:	push   0xffffff94
 101fd02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 101fd03:	add    BYTE PTR [esi-0x5c],dh
 101fd06:	mov    ecx,0xc1b18f00
 101fd0b:	add    BYTE PTR [ebp-0x71ff4151],cl
 101fd11:	scas   al,BYTE PTR es:[edi]
 101fd12:	mov    ebp,0xaaa18c00
 101fd17:	add    BYTE PTR [ebx-0x3aff4148],ch
 101fd1d:	rcl    ch,1
 101fd1f:	add    BYTE PTR [ecx-0x7f],dl
 101fd22:	cwde   
 101fd23:	add    BYTE PTR [esi+0x7a],cl
 101fd26:	nop
 101fd27:	add    BYTE PTR [ecx+0x7d],dl
 101fd2a:	xchg   ebx,eax
 101fd2b:	add    BYTE PTR [edi-0x7b],dl
 101fd2e:	fwait
 101fd2f:	add    BYTE PTR [ebx+0x6c],cl
 101fd32:	jge    0x101fd34
 101fd34:	addr16 xchg ebx,eax
 101fd36:	test   eax,0xa28d6300
 101fd3b:	add    BYTE PTR [esi-0x66],ch
 101fd3e:	scas   eax,DWORD PTR es:[edi]
 101fd3f:	add    BYTE PTR [ebp+ebp*4-0x617fff43],cl
 101fd46:	lods   eax,DWORD PTR ds:[esi]
 101fd47:	add    BYTE PTR [ebx-0x71ff4455],cl
 101fd4d:	lods   eax,DWORD PTR ds:[esi]
 101fd4e:	mov    esp,0xbfb9ad00
 101fd53:	add    BYTE PTR [edx+0x74],cl
 101fd56:	mov    eax,DWORD PTR [eax]
 101fd58:	dec    ecx
 101fd59:	jb     0x101fce4
 101fd5b:	add    BYTE PTR [esi+0x74],cl
 101fd5e:	mov    al,BYTE PTR [eax]
 101fd60:	pop    edx
 101fd61:	test   DWORD PTR [eax+eax*1+0x9e8963],ebx
 101fd68:	mov    ch,BYTE PTR [edx-0x5777ff45]
 101fd6e:	mov    ecx,0xbcab8d00
 101fd73:	add    BYTE PTR [edx-0x26ff4c5c],cl
 101fd79:	in     al,0xea
 101fd7b:	add    al,bl
 101fd7d:	jecxz  0x101fd68
 101fd7f:	add    bh,dl
 101fd81:	loop   0x101fd6b
 101fd83:	add    dh,dl
 101fd85:	loope  0x101fd6e
 101fd87:	add    bl,cl
 101fd89:	aam    0xd9
 101fd8b:	add    al,cl
 101fd8d:	rcl    esi,1
 101fd8f:	add    BYTE PTR [ebx+0x76],cl
 101fd92:	pop    DWORD PTR [eax]
 101fd94:	dec    ebp
 101fd95:	jne    0x101fd24
 101fd97:	add    BYTE PTR [ebx+esi*2-0x75],cl
 101fd9b:	add    BYTE PTR [esi+0x7e],dl
 101fd9e:	xchg   esi,eax
 101fd9f:	add    BYTE PTR [edx-0x7e],bl
 101fda2:	call   0x4800:0x927b5600
 101fda9:	data16 jns 0x101fdac
 101fdac:	pop    esi
 101fdad:	test   DWORD PTR [ebp-0x657ca300],ebx
 101fdb3:	add    BYTE PTR [esi-0x7e],bl
 101fdb6:	cwde   
 101fdb7:	add    BYTE PTR [ebx-0x39ff4149],ch
 101fdbd:	rcl    dh,1
 101fdbf:	add    ch,dl
 101fdc1:	(bad)  
 101fdc3:	add    BYTE PTR [ebp+0x71],cl
 101fdc6:	mov    al,BYTE PTR [eax]
 101fdc8:	dec    esi
 101fdc9:	jae    0x101fd56
 101fdcb:	add    BYTE PTR [ebp+0x71],cl
 101fdce:	mov    DWORD PTR [eax],eax
 101fdd0:	push   edx
 101fdd1:	js     0x101fd64
 101fdd3:	add    BYTE PTR [ecx+0x75],dl
 101fdd6:	mov    es,WORD PTR [eax]
 101fdd8:	dec    edi
 101fdd9:	jb     0x101fd64
 101fddb:	add    BYTE PTR [edi+0x7c],dl
 101fdde:	xchg   ebp,eax
 101fddf:	add    BYTE PTR [esi+edi*1],ch
 101fde2:	dec    edx
 101fde3:	add    BYTE PTR [eax+0x63],cl
 101fde6:	jbe    0x101fde8
 101fde8:	pop    esp
 101fde9:	jl     0x101fd7d
 101fdeb:	add    BYTE PTR [edi+0x6b],al
 101fdee:	xchg   BYTE PTR [eax],al
 101fdf0:	dec    ebx
 101fdf1:	outs   dx,DWORD PTR ds:[esi]
 101fdf2:	mov    DWORD PTR [eax],eax
 101fdf4:	dec    ebx
 101fdf5:	ins    DWORD PTR es:[edi],dx
 101fdf6:	xchg   BYTE PTR [eax],al
 101fdf8:	dec    ebp
 101fdf9:	outs   dx,BYTE PTR ds:[esi]
 101fdfa:	xchg   BYTE PTR [eax],al
 101fdfc:	push   ecx
 101fdfd:	jno    0x101fd88
 101fdff:	add    BYTE PTR [eax+0x7b],bl
 101fe02:	xchg   esp,eax
 101fe03:	add    BYTE PTR [edx+0x7d],bl
 101fe06:	xchg   esi,eax
 101fe07:	add    BYTE PTR [edx+0x7b],bl
 101fe0a:	xchg   ebx,eax
 101fe0b:	add    BYTE PTR [edi+0x76],dl
 101fe0e:	mov    es,WORD PTR [eax]
 101fe10:	pop    ebp
 101fe11:	jle    0x101fda9
 101fe13:	add    BYTE PTR [ecx+0x79],bl
 101fe16:	nop
 101fe17:	add    BYTE PTR [ebx+0x6d],bl
 101fe1a:	jp     0x101fe1c
 101fe1c:	pop    edx
 101fe1d:	ins    BYTE PTR es:[edi],dx
 101fe1e:	jns    0x101fe20
 101fe20:	pop    esp
 101fe21:	outs   dx,BYTE PTR ds:[esi]
 101fe22:	jnp    0x101fe24
 101fe24:	pop    ebp
 101fe25:	outs   dx,DWORD PTR ds:[esi]
 101fe26:	jl     0x101fe28
 101fe28:	pusha  
 101fe29:	jno    0x101fea9
 101fe2b:	add    BYTE PTR [esi+0x76],ah
 101fe2e:	add    BYTE PTR [eax],0x45
 101fe31:	add    WORD PTR [eax],0x6a49
 101fe36:	test   DWORD PTR [eax],eax
 101fe38:	dec    edx
 101fe39:	imul   eax,DWORD PTR [ebx+0x6e5a4200],0x73604800
 101fe43:	add    BYTE PTR [edx+edi*2-0x6e],bl
 101fe47:	add    BYTE PTR [esp+ebx*2],bh
 101fe4a:	jns    0x101fe4c
 101fe4c:	inc    edx
 101fe4d:	bound  edi,QWORD PTR [esi+0x0]
 101fe50:	dec    ecx
 101fe51:	add    WORD PTR [eax],0x543c
 101fe56:	imul   eax,DWORD PTR [eax],0x83694c
 101fe5c:	mov    dl,BYTE PTR [ebp+ebx*4-0x100]
 101fe63:	add    bh,bh
 101fe65:	(bad)  
 101fe66:	inc    DWORD PTR [eax]
 101fe68:	add    BYTE PTR [eax],al
 101fe6a:	add    BYTE PTR [eax],al
 101fe6c:	int    0xcd
 101fe6e:	iret   
 101fe6f:	fcmovu st,st(3)
 101fe71:	fcmovne st,st(3)
 101fe73:	fcomp  st(0)
 101fe75:	(bad)  
 101fe77:	jecxz  0x101fe5c
 101fe79:	jecxz  0x101fe6e
 101fe7b:	hlt    
 101fe7c:	hlt    
 101fe7d:	repnz repnz stc 
 101fe80:	stc    
 101fe81:	clc    
 101fe82:	clc    
	...
 101fe8b:	add    dh,cl
 101fe8d:	xor    dh,BYTE PTR [esi]
 101fe8f:	ss dec ebp
 101fe91:	jne    0x101ff06
 101fe93:	jns    0x101ff06
 101fe95:	add    DWORD PTR [eax-0x71727280],0x9b9c9c8e
 101fe9f:	fwait
 101fea0:	fwait
 101fea1:	jle    0x101fe32
 101fea3:	cli    
 101fea4:	add    BYTE PTR [eax],al
 101fea6:	add    BYTE PTR [eax],al
 101fea8:	add    BYTE PTR [eax],al
 101feaa:	jp     0x101ff26
 101feac:	jp     0x101fe45
 101feae:	mov    DWORD PTR [ecx-0x5a6a586d],ecx
 101feb4:	mov    ch,0xa4
 101feb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 101feb7:	mov    ds:0xd3d1bfb4,eax
 101febc:	out    0xcf,eax
 101febe:	frstpm(287 only) 
 101fec0:	jecxz  0x101febc
 101fec2:	(bad)  
 101fec3:	cli    
 101fec4:	add    BYTE PTR [eax],al
 101fec6:	add    BYTE PTR [eax],al
 101fec8:	add    BYTE PTR [eax],al
 101feca:	stos   DWORD PTR es:[edi],eax
 101fecb:	dec    esi
 101fecc:	dec    esi
 101fecd:	dec    ebp
 101fece:	ins    DWORD PTR es:[edi],dx
 101fecf:	ins    BYTE PTR es:[edi],dx
 101fed0:	je     0x101ff4b
 101fed2:	jno    0x101fe55
 101fed4:	cmp    DWORD PTR [edi+0x7f],0x9290907f
 101fedb:	xchg   edx,eax
 101fedc:	xchg   edx,eax
 101fedd:	popf   
 101fede:	popf   
 101fedf:	popf   
 101fee0:	xchg   ecx,eax
 101fee1:	(bad)  
 101fee2:	bnd jle 0x101fedf
 101fee5:	add    BYTE PTR [eax],al
 101fee7:	add    BYTE PTR [eax],al
 101fee9:	mov    cl,0xbe
 101feeb:	lahf   
 101feec:	mov    al,0xb0
 101feee:	scas   eax,DWORD PTR es:[edi]
 101feef:	retf   0xbbcb
 101fef2:	mov    ebx,0xccbcbcbc
 101fef7:	int3   
 101fef8:	mov    ebp,0xd9d7dcd8
 101fefd:	in     al,0xe3
 101feff:	repz hlt 
 101ff01:	xchg   ecx,eax
 101ff02:	hlt    
 101ff03:	(bad)  
 101ff04:	clc    
 101ff05:	add    BYTE PTR [eax],al
 101ff07:	add    BYTE PTR [eax],al
 101ff09:	mov    cl,0x70
 101ff0b:	ja     0x101ff8a
 101ff0d:	jge    0x101ff8c
 101ff0f:	jo     0x101ff81
 101ff11:	outs   dx,BYTE PTR ds:[esi]
 101ff12:	jnp    0x101ff8f
 101ff14:	jbe    0x101ff8c
 101ff16:	xchg   BYTE PTR [esi-0x7b7b797a],al
 101ff1c:	test   BYTE PTR [esp+eax*4-0x701b1b8e],al
 101ff23:	cli    
 101ff24:	sti    
 101ff25:	add    BYTE PTR [eax],al
 101ff27:	add    BYTE PTR [eax],al
 101ff29:	add    BYTE PTR [esi+0x77787870],ch
 101ff2f:	ja     0x101ffad
 101ff31:	outs   dx,DWORD PTR ds:[esi]
 101ff32:	push   0x87666567
 101ff37:	xchg   DWORD PTR [edi-0x7a7a7a79],eax
 101ff3d:	test   DWORD PTR [ebp-0x611a8d7c],eax
 101ff43:	cli    
 101ff44:	sti    
 101ff45:	add    BYTE PTR [eax],al
 101ff47:	add    BYTE PTR [eax],al
 101ff49:	add    BYTE PTR [ebx+0x39523a70],al
 101ff4f:	push   ecx
 101ff50:	cmp    BYTE PTR [ecx+0x1b],ch
 101ff53:	sbb    edx,DWORD PTR [edi]
 101ff55:	pop    ss
 101ff56:	pop    ss
 101ff57:	pop    ss
 101ff58:	pop    ss
 101ff59:	pop    ss
 101ff5a:	pop    ss
 101ff5b:	push   ss
 101ff5c:	ins    DWORD PTR es:[edi],dx
 101ff5d:	ins    DWORD PTR es:[edi],dx
 101ff5e:	ins    BYTE PTR es:[edi],dx
 101ff5f:	ins    BYTE PTR es:[edi],dx
 101ff60:	cmp    BYTE PTR [edi+0xf5fcda],0x0
 101ff67:	add    BYTE PTR [eax],al
 101ff69:	add    BYTE PTR [ebx+0x2c333372],al
 101ff6f:	sub    al,0x32
 101ff71:	sbb    BYTE PTR ss:[ecx],dl
 101ff74:	or     al,0xc
 101ff76:	or     al,0xc
 101ff78:	or     cl,BYTE PTR [edx+ecx*1]
 101ff7b:	or     DWORD PTR [eax+0x40],eax
 101ff7e:	inc    eax
 101ff7f:	inc    eax
 101ff80:	jno    0x101ff25
 101ff82:	in     eax,0xe9
 101ff84:	cmc    
 101ff85:	add    BYTE PTR [eax],al
 101ff87:	add    BYTE PTR [eax],al
 101ff89:	add    BYTE PTR [eax],al
 101ff8b:	push   0x4f
 101ff8d:	addr16 addr16 gs data16 jbe 0x101ffac
 101ff93:	pop    ds
 101ff94:	(bad)  
 101ff95:	(bad)  
 101ff96:	(bad)  
 101ff97:	invd   
 101ff99:	and    eax,0x43460424
 101ff9e:	inc    ebx
 101ff9f:	pusha  
 101ffa0:	pusha  
 101ffa1:	pop    esi
 101ffa2:	in     eax,0xeb
 101ffa4:	cmc    
 101ffa5:	add    BYTE PTR [eax],al
 101ffa7:	add    BYTE PTR [eax],al
 101ffa9:	add    BYTE PTR [eax],al
 101ffab:	lahf   
 101ffac:	outs   dx,DWORD PTR ds:[esi]
 101ffad:	jo     0x102001d
 101ffaf:	outs   dx,BYTE PTR ds:[esi]
 101ffb0:	sbb    WORD PTR [bx+di],dx
 101ffb4:	(bad)  
 101ffb5:	invd   
 101ffb7:	or     BYTE PTR [eax],cl
 101ffb9:	and    esp,DWORD PTR [ecx]
 101ffbb:	or     DWORD PTR [ebx+0x6b],ebp
 101ffbe:	fs fs pusha 
 101ffc1:	pusha  
 101ffc2:	jmp    0x102f6b2
 101ffc7:	add    BYTE PTR [eax],al
 101ffc9:	add    BYTE PTR [eax],al
 101ffcb:	mov    ds:0x674f4f68,al
 101ffd0:	gs gs adc eax,0x30c0f1f
 101ffd7:	pop    es
 101ffd8:	or     dl,BYTE PTR [ecx]
 101ffda:	adc    DWORD PTR [ebx],edx
 101ffdc:	inc    esi
 101ffdd:	inc    esi
 101ffde:	inc    esi
 101ffdf:	inc    ebx
 101ffe0:	pop    ebx
 101ffe1:	pop    eax
 101ffe2:	jmp    0x101ffc4
 101ffe4:	test   BYTE PTR [eax],0x0
 101ffe7:	add    BYTE PTR [eax],al
 101ffe9:	add    BYTE PTR [eax],al
 101ffeb:	mov    edi,0x4f683737
 101fff0:	dec    esi
 101fff1:	sbb    BYTE PTR gs:[eax],cl
 101fff4:	std    
 101fff5:	aas    
 101fff6:	xor    eax,0x80ede8f
 101fffb:	or     DWORD PTR [ebx+0x62],esp
 101fffe:	bound  ebx,QWORD PTR [edi+0x5c]
 1020001:	pop    eax
 1020002:	imul   edx
 1020004:	test   BYTE PTR [eax],0x0
 1020007:	add    BYTE PTR [eax],al
 1020009:	add    BYTE PTR [eax],al
 102000b:	mov    ah,0x50
 102000d:	push   eax
 102000e:	aaa    
 102000f:	push   0x99104e4f
 1020014:	sub    ebp,DWORD PTR [ecx]
 1020016:	das    
 1020017:	xor    eax,0x14068c55
 102001c:	arpl   WORD PTR [edx+0x5f],sp
 102001f:	pop    esp
 1020020:	pop    ebx
 1020021:	pop    eax
 1020022:	imul   edx
 1020024:	fild   WORD PTR [eax]
 1020026:	add    BYTE PTR [eax],al
 1020028:	add    BYTE PTR [eax],al
 102002a:	add    BYTE PTR [ecx+edx*2+0x68375038],dh
 1020031:	dec    edi
 1020032:	adc    BYTE PTR [edx+0x2f2f2a2a],cl
 1020038:	xor    eax,0x63140b7e
 102003d:	bound  ebx,QWORD PTR [edi+0x5c]
 1020040:	pop    eax
 1020041:	push   edi
 1020042:	loopne 0x102002e
 1020044:	fild   WORD PTR [eax]
 1020046:	add    BYTE PTR [eax],al
 1020048:	add    BYTE PTR [eax],al
 102004a:	add    BYTE PTR [ebx+0x50385139],ah
 1020050:	aaa    
 1020051:	push   0x2a278a10
 1020056:	xor    DWORD PTR [esi],edi
 1020058:	das    
 1020059:	push   ebp
 102005a:	push   es
 102005b:	adc    al,0x63
 102005d:	bound  ebx,QWORD PTR [edi+0x5c]
 1020060:	pop    eax
 1020061:	push   esi
 1020062:	call   0x102e03a
 1020067:	add    BYTE PTR [eax],al
 1020069:	add    BYTE PTR [eax],al
 102006b:	mov    ds:0x3851393a,eax
 1020070:	push   eax
 1020071:	aaa    
 1020072:	adc    BYTE PTR [edx+0x4d264f27],cl
 1020078:	xor    BYTE PTR [ebp+0x2],dl
 102007b:	adc    al,0x63
 102007d:	bound  ebx,QWORD PTR [edi+0x5a]
 1020080:	pop    eax
 1020081:	push   esi
 1020082:	call   0x102e05a
 1020087:	add    BYTE PTR [eax],al
 1020089:	add    BYTE PTR [eax],al
 102008b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102008c:	cmp    edi,DWORD PTR [edx]
 102008e:	push   edx
 102008f:	push   ecx
 1020090:	cmp    BYTE PTR [ecx+0x18],ch
 1020093:	cwde   
 1020094:	xchg   BYTE PTR [ecx],al
 1020096:	(bad)  
 1020097:	sub    BYTE PTR [edx],ch
 1020099:	aas    
 102009a:	pop    ss
 102009b:	adc    al,0x44
 102009d:	inc    edx
 102009e:	pop    edi
 102009f:	pop    esp
 10200a0:	pop    eax
 10200a1:	push   edi
 10200a2:	call   0x102e07a
 10200a7:	add    BYTE PTR [eax],al
 10200a9:	add    BYTE PTR [eax],al
 10200ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10200ac:	push   esp
 10200ad:	cmp    edi,DWORD PTR [edx]
 10200af:	cmp    DWORD PTR [ecx+0x50],edx
 10200b2:	adc    BYTE PTR [edx],ah
 10200b4:	mov    dl,BYTE PTR [ebx+0x5946476]
 10200ba:	unpcklps xmm0,XMMWORD PTR [edx+eax*2+0x5d]
 10200bf:	pop    edx
 10200c0:	inc    ecx
 10200c1:	push   edi
 10200c2:	out    0xd2,al
 10200c4:	fild   WORD PTR [eax]
 10200c6:	add    BYTE PTR [eax],al
 10200c8:	add    BYTE PTR [eax],al
 10200ca:	add    BYTE PTR [esi+0x3a3b543c],dl
 10200d0:	cmp    DWORD PTR [eax],edi
 10200d2:	sbb    bh,dh
 10200d4:	pop    ds
 10200d5:	or     eax,0x1111c98a
 10200da:	pop    ds
 10200db:	adc    al,0x45
 10200dd:	popa   
 10200de:	inc    edx
 10200df:	pop    edx
 10200e0:	pop    ecx
 10200e1:	push   edi
 10200e2:	out    0xd2,al
 10200e4:	rol    BYTE PTR [eax],1
 10200e6:	add    BYTE PTR [eax],al
 10200e8:	add    BYTE PTR [eax],al
 10200ea:	add    BYTE PTR [esi+0x3b543c3d],dl
 10200f0:	push   edx
 10200f1:	push   ecx
 10200f2:	sbb    bh,dh
 10200f4:	(bad)  
 10200f5:	(bad)  
 10200f6:	(bad)  
 10200f7:	(bad)  
 10200f8:	and    ah,BYTE PTR [eax]
 10200fa:	(bad)  
 10200fb:	adc    al,0x47
 10200fd:	inc    esp
 10200fe:	inc    edx
 10200ff:	pop    ebp
 1020100:	pop    edx
 1020101:	inc    ecx
 1020102:	fst    st(1)
 1020104:	rol    BYTE PTR [eax],1
 1020106:	add    BYTE PTR [eax],al
 1020108:	add    BYTE PTR [eax],al
 102010a:	add    BYTE PTR [eax+0x543c3c2e],cl
 1020110:	cmp    bh,BYTE PTR [ecx]
 1020112:	sbb    BYTE PTR [edx],bl
 1020114:	adc    BYTE PTR [eax],bl
 1020116:	adc    eax,0xe0e0b19
 102011b:	adc    al,0x48
 102011d:	inc    ebp
 102011e:	popa   
 102011f:	inc    edx
 1020120:	pop    ebp
 1020121:	pop    ecx
 1020122:	fst    st(1)
 1020124:	rol    BYTE PTR [eax],1
 1020126:	add    BYTE PTR [eax],al
 1020128:	add    BYTE PTR [eax],al
 102012a:	add    BYTE PTR [eax+0x543c2e2e],cl
 1020130:	cmp    edx,DWORD PTR [edx+0x1a]
 1020133:	dec    BYTE PTR ds:0xd0d0d0d
 1020139:	or     eax,0x48491411
 102013e:	inc    ebp
 102013f:	popa   
 1020140:	inc    edx
 1020141:	pop    ebp
 1020142:	int    0xd1
 1020144:	rol    BYTE PTR [eax],1
 1020146:	add    BYTE PTR [eax],al
 1020148:	add    BYTE PTR [eax],al
 102014a:	add    BYTE PTR [eax+0x532d2e2e],cl
 1020150:	cmp    esi,DWORD PTR [esp+ebx*1]
 1020153:	(bad)  
 1020154:	(bad)  
 1020155:	(bad)  
 1020156:	and    BYTE PTR [edx],dl
 1020158:	pop    ds
 1020159:	pop    ds
 102015a:	pop    ds
 102015b:	adc    al,0x4a
 102015d:	dec    ecx
 102015e:	dec    eax
 102015f:	inc    ebp
 1020160:	popa   
 1020161:	inc    edx
 1020162:	into   
 1020163:	mov    edi,0xd0
 1020168:	add    BYTE PTR [eax],al
 102016a:	add    BYTE PTR [eax+0x532d2e2e],cl
 1020170:	cmp    esi,DWORD PTR [ebx*1-0x1010102]
 1020177:	(bad)  
 1020178:	(bad)  
 1020179:	(bad)  
 102017a:	(bad)  
 102017b:	adc    al,0x4b
 102017d:	dec    edx
 102017e:	dec    ecx
 102017f:	dec    eax
 1020180:	inc    edi
 1020181:	inc    ebp
 1020182:	into   
 1020183:	mov    ah,0xb2
 1020185:	add    BYTE PTR [eax],al
 1020187:	add    BYTE PTR [eax],al
 1020189:	add    BYTE PTR [eax],al
 102018b:	xchg   ebp,eax
 102018c:	sub    eax,0x3b532d2d
 1020191:	xor    al,0x10
 1020193:	push   ds
 1020194:	sbb    al,0x1c
 1020196:	sbb    al,0x1a
 1020198:	sbb    bl,BYTE PTR [edx]
 102019a:	sbb    al,0x10
 102019c:	dec    esp
 102019d:	dec    ebx
 102019e:	dec    ebx
 102019f:	dec    edx
 10201a0:	dec    ecx
 10201a1:	inc    edi
 10201a2:	shl    DWORD PTR [edx+esi*4+0x0],1
 10201a9:	add    BYTE PTR [eax],al
 10201ab:	xchg   edi,eax
 10201ac:	enter  0xc3c8,0xc3
 10201b0:	enter  0x98c8,0x98
 10201b4:	leave  
 10201b5:	leave  
 10201b6:	cwde   
 10201b7:	cwde   
 10201b8:	lods   eax,DWORD PTR ds:[esi]
 10201b9:	lods   eax,DWORD PTR ds:[esi]
 10201ba:	mov    bh,0xb7
 10201bc:	lods   eax,DWORD PTR ds:[esi]
 10201bd:	lods   eax,DWORD PTR ds:[esi]
 10201be:	mov    bh,0xb7
 10201c0:	aad    0xd5
 10201c2:	mov    esi,0xb2a3
 10201c7:	add    BYTE PTR [eax],al
 10201c9:	add    BYTE PTR [eax],al
 10201cb:	xchg   edi,eax
 10201cc:	icebp  
 10201cd:	icebp  
 10201ce:	call   0xf09a:0x9af1f19a
 10201d5:	out    dx,eax
 10201d6:	aam    0xd4
 10201d8:	out    dx,al
 10201d9:	out    dx,al
 10201da:	lods   al,BYTE PTR ds:[esi]
 10201db:	lods   al,BYTE PTR ds:[esi]
 10201dc:	in     al,dx
 10201dd:	in     al,dx
 10201de:	lods   al,BYTE PTR ds:[esi]
 10201df:	lods   al,BYTE PTR ds:[esi]
 10201e0:	in     al,dx
 10201e1:	in     al,dx
 10201e2:	mov    esi,0xa0b3
 10201e7:	add    BYTE PTR [eax],al
 10201e9:	add    BYTE PTR [eax],al
 10201eb:	xchg   edi,eax
 10201ec:	mov    edi,0x8bc6c2b9
 10201f2:	mov    ecx,0xa9c7c7aa
 10201f7:	test   eax,0xc1c1d6d6
 10201fc:	(bad)  
 10201fd:	(bad)  
 10201fe:	mov    eax,0xa4d5c7b8
 1020203:	mov    eax,ds:0xa0
 1020208:	add    BYTE PTR [eax],al
 102020a:	add    BYTE PTR [edi-0xf0f4546],dl
 1020210:	mov    edx,0xbaeeefba
 1020215:	mov    edx,0xd4d4eeec
 102021a:	in     al,dx
 102021b:	in     al,dx
 102021c:	aam    0xd4
 102021e:	in     al,dx
 102021f:	in     eax,dx
 1020220:	lods   al,BYTE PTR ds:[esi]
 1020221:	lods   al,BYTE PTR ds:[esi]
 1020222:	shl    BYTE PTR [eax+eiz*4+0x0],0x0
 102022a:	add    BYTE PTR [eax],al
 102022c:	jp     0x10201c5
 102022e:	lds    ecx,FWORD PTR [ebx-0x3b3a4748]
 1020234:	test   eax,0xa8c4c4a9
 1020239:	test   al,0xc6
 102023b:	mov    al,0xc0
 102023e:	(bad)
 1020241:	test   eax,0xa0a4c4
 1020246:	add    BYTE PTR [eax],al
 1020248:	add    BYTE PTR [eax],al
 102024a:	add    BYTE PTR [eax],al
 102024c:	add    BYTE PTR [ecx+ecx*4-0x5a6a586d],dl
 1020253:	mov    ch,0xa1
 1020255:	mov    ds:0xcdced1b4,eax
 102025a:	fcmove st,st(3)
 102025c:	loop   0x102023f
 102025e:	repnz stc 
 1020260:	clc    
 1020261:	clc    
 1020262:	clc    
 1020263:	clc    
 1020264:	add    BYTE PTR [eax],al
 1020266:	add    BYTE PTR [eax],al
 1020268:	lock add BYTE PTR [eax],al
 102026b:	pop    ds
 102026c:	lock add BYTE PTR [eax],al
 102026f:	xadd   BYTE PTR [eax],al
 1020272:	add    BYTE PTR [edi],cl
 1020274:	rol    BYTE PTR [eax],0x0
 1020277:	pop    es
 1020278:	add    BYTE PTR [eax],0x0
 102027b:	pop    es
 102027c:	add    BYTE PTR [eax],0x0
 102027f:	pop    es
 1020280:	rol    BYTE PTR [eax],0x0
 1020283:	pop    es
 1020284:	rol    BYTE PTR [eax],0x0
 1020287:	pop    es
 1020288:	rol    BYTE PTR [eax],0x0
 102028b:	pop    es
 102028c:	loopne 0x102028e
 102028e:	add    BYTE PTR [edi],al
 1020290:	loopne 0x1020292
 1020292:	add    BYTE PTR [edi],al
 1020294:	loopne 0x1020296
 1020296:	add    BYTE PTR [edi],al
 1020298:	loopne 0x102029a
 102029a:	add    BYTE PTR [edi],al
 102029c:	loopne 0x102029e
 102029e:	add    BYTE PTR [edi],al
 10202a0:	loopne 0x10202a2
 10202a2:	add    BYTE PTR [edi],al
 10202a4:	loopne 0x10202a6
 10202a6:	add    BYTE PTR [edi],al
 10202a8:	loopne 0x10202aa
 10202aa:	add    BYTE PTR [edi],al
 10202ac:	loopne 0x10202ae
 10202ae:	add    BYTE PTR [edi],al
 10202b0:	loopne 0x10202b2
 10202b2:	add    BYTE PTR [edi],al
 10202b4:	loopne 0x10202b6
 10202b6:	add    BYTE PTR [edi],al
 10202b8:	loopne 0x10202ba
 10202ba:	add    BYTE PTR [edi],al
 10202bc:	loopne 0x10202be
 10202be:	add    BYTE PTR [edi],al
 10202c0:	loopne 0x10202c2
 10202c2:	add    BYTE PTR [edi],al
 10202c4:	loopne 0x10202c6
 10202c6:	add    BYTE PTR [edi],al
 10202c8:	loopne 0x10202ca
 10202ca:	add    BYTE PTR [edi],al
 10202cc:	loopne 0x10202ce
 10202ce:	add    BYTE PTR [edi],al
 10202d0:	loopne 0x10202d2
 10202d2:	add    BYTE PTR [edi],al
 10202d4:	loopne 0x10202d6
 10202d6:	add    BYTE PTR [edi],al
 10202d8:	loopne 0x10202da
 10202da:	add    BYTE PTR [edi],al
 10202dc:	loopne 0x10202de
 10202de:	add    BYTE PTR [edi],al
 10202e0:	lock add BYTE PTR [eax],al
 10202e3:	pop    es
 10202e4:	clc    
 10202e5:	add    BYTE PTR [eax],al
 10202e7:	movaps xmm0,XMMWORD PTR [eax]
 10202ea:	add    BYTE PTR [eax],al
 10202ec:	adc    BYTE PTR [eax],al
 10202ee:	add    BYTE PTR [eax],al
 10202f0:	and    BYTE PTR [eax],al
 10202f2:	add    BYTE PTR [eax],al
 10202f4:	add    DWORD PTR [eax],eax
 10202f6:	or     BYTE PTR [eax],al
	...
 1020310:	popf   
 1020311:	call   0x0:0xa7
 1020318:	(bad)  
 1020319:	hlt    
 102031a:	repz add bh,bh
 102031d:	call   0xdeea0403
 1020322:	fadd   DWORD PTR [eax]
 1020324:	cwde   
 1020325:	mov    al,BYTE PTR [ebx-0x110b0100]
 102032b:	add    dh,dh
 102032d:	jmp    0x1020314
 102032f:	add    BYTE PTR [eax-0x4fff7d72],ah
 1020335:	stos   BYTE PTR es:[edi],al
 1020336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1020337:	add    al,bh
 1020339:	hlt    
 102033a:	lock add BYTE PTR [ecx-0x7dff8375],bl
 1020341:	jg     0x10203bc
 1020343:	add    BYTE PTR [ebx-0xff5f58],ch
 1020349:	push   ecx
 102034b:	add    ch,dh
 102034d:	(bad)  
 102034e:	mov    eax,0xa7a9a700
 1020353:	add    BYTE PTR [ebx+0x7a00ffff],bh
 1020359:	mov    ecx,DWORD PTR [ebx-0x1900]
 102035f:	add    cl,ch
 1020361:	(bad)  
 1020362:	inc    DWORD PTR [eax]
 1020364:	jmp    0x1020365
 1020366:	inc    DWORD PTR [eax]
 1020368:	jns    0x102035c
 102036a:	cmc    
 102036b:	add    BYTE PTR [edx-0x4cff0003],dh
 1020371:	std    
 1020372:	inc    DWORD PTR [eax]
 1020374:	mov    al,0xd9
 1020376:	fiadd  DWORD PTR [eax]
 1020378:	add    ah,ch
 102037a:	inc    DWORD PTR [eax]
 102037c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102037d:	clc    
 102037e:	inc    DWORD PTR [eax]
 1020380:	test   al,0xf9
 1020382:	inc    DWORD PTR [eax]
 1020384:	popf   
 1020385:	cmc    
 1020386:	inc    DWORD PTR [eax]
 1020388:	mov    al,ds:0x6e00fcf3
 102038d:	lahf   
 102038e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102038f:	add    BYTE PTR [edx-0x60],dh
 1020392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1020393:	add    BYTE PTR [esi-0x63ff0714],dl
 1020399:	in     eax,dx
 102039a:	stc    
 102039b:	add    BYTE PTR [edi-0x64],ah
 102039e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102039f:	add    BYTE PTR [edi+0xa00fcf3],dh
 10203a5:	cwde   
 10203a6:	scas   al,BYTE PTR es:[edi]
 10203a7:	add    BYTE PTR [eax-0x41],cl
 10203aa:	rol    BYTE PTR [eax],cl
 10203ac:	mov    ah,bl
 10203ae:	repz add BYTE PTR [edx-0x6bff0010],dl
 10203b5:	lock inc DWORD PTR [eax]
 10203b8:	imul   ebx,DWORD PTR [ebp-0x2391ff5b],0xda7d00f4
 10203c2:	out    dx,al
 10203c3:	add    BYTE PTR [ecx-0x75ff0014],cl
 10203c9:	jmp    0x10203ca
 10203cb:	add    BYTE PTR [edx-0x78ff0014],cl
 10203d1:	in     eax,0xf9
 10203d3:	add    BYTE PTR [eax+0x5e00f9e5],cl
 10203d9:	cdq    
 10203da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10203db:	add    ah,bl
 10203dd:	idiv   esp
 10203df:	add    BYTE PTR [esi-0x26],ch
 10203e2:	hlt    
 10203e3:	add    BYTE PTR [edx-0x1b],bh
 10203e6:	inc    DWORD PTR [eax]
 10203e8:	outs   dx,DWORD PTR ds:[esi]
 10203e9:	shr    al,1
 10203eb:	add    BYTE PTR [ebx-0x1b],bh
 10203ee:	inc    DWORD PTR [eax]
 10203f0:	dec    edi
 10203f1:	xchg   edx,eax
 10203f2:	mov    ds:0xffe88000,eax
 10203f7:	add    BYTE PTR [ecx+0x5300ffe8],al
 10203fd:	xchg   esp,eax
 10203fe:	mov    ds:0xfdf9e900,eax
 1020403:	add    BYTE PTR [eax],al
 1020405:	xchg   ebp,eax
 1020406:	mov    esp,0xf4cf5000
 102040b:	add    BYTE PTR [edx-0x2f],dl
 102040e:	hlt    
 102040f:	add    BYTE PTR [ebx+ecx*4],bh
 1020412:	mov    ds:0xa28c4000,al
 1020417:	add    BYTE PTR [ebx-0x24],ch
 102041a:	sti    
 102041b:	add    BYTE PTR [ebx-0x25],ch
 102041e:	cli    
 102041f:	add    BYTE PTR [edx-0x39],ah
 1020422:	jecxz  0x1020424
 1020424:	dec    ecx
 1020425:	(bad)  
 1020426:	mov    ds:0xffe27400,eax
 102042b:	add    BYTE PTR [ebp-0x1f],dh
 102042e:	inc    DWORD PTR [eax]
 1020430:	scas   eax,DWORD PTR es:[edi]
 1020431:	(bad)  
 1020432:	loopne 0x1020434
 1020434:	xor    BYTE PTR [esi-0x47b2ff5f],al
 102043a:	fild   DWORD PTR [eax]
 102043c:	push   ebp
 102043d:	(bad)  
 102043e:	call   0xefcd6043
 1020443:	add    BYTE PTR [esi-0x42],dl
 1020446:	fiadd  WORD PTR [eax]
 1020448:	push   esi
 1020449:	mov    edi,0x9c5300de
 102044e:	mov    ah,0x0
 1020450:	xchg   ebp,eax
 1020451:	fcomip st,st(7)
 1020453:	add    BYTE PTR [edi+0x900f9e8],ch
 1020459:	jne    0x10203f8
 102045b:	add    BYTE PTR [ebx],dl
 102045d:	jns    0x10203fe
 102045f:	add    BYTE PTR [ecx],ah
 1020461:	jg     0x1020402
 1020463:	add    BYTE PTR [ebx+eax*8],dh
 1020466:	repz add BYTE PTR [edi],dh
 1020469:	ret    
 102046a:	repnz add BYTE PTR ds:0x3e00a081,ah
 1020471:	lods   al,BYTE PTR ds:[esi]
 1020472:	rol    BYTE PTR [eax],cl
 1020474:	xor    BYTE PTR [ebp-0x4fbdff5e],al
 102047a:	(bad)  
 102047b:	add    BYTE PTR [ecx+edi*4-0x22],cl
 102047f:	add    BYTE PTR [ebp+edx*4-0x51],cl
 1020483:	add    BYTE PTR [edi-0x69],cl
 1020486:	mov    cl,0x0
 1020488:	push   ecx
 1020489:	call   0xb5:0x9d5500b3
 1020490:	and    eax,0x2500a984
 1020495:	sub    BYTE PTR [eax-0x5b80db00],0x0
 102049c:	aaa    
 102049d:	and    BYTE PTR [eax-0x5979c600],0x0
 10204a4:	cmp    al,0x88
 10204a6:	test   al,0x0
 10204a8:	mov    ch,BYTE PTR ds:[eax-0x5472bf00]
 10204af:	add    BYTE PTR [ebp-0x71],al
 10204b2:	lods   al,BYTE PTR ds:[esi]
 10204b3:	add    BYTE PTR [eax-0x6e],cl
 10204b6:	scas   al,BYTE PTR es:[edi]
 10204b7:	add    BYTE PTR [eax-0x63],dl
 10204ba:	mov    ebx,0x705f3600
 10204bf:	add    BYTE PTR [ecx+eiz*2],bh
 10204c2:	jo     0x10204c4
 10204c4:	cmp    eax,0x41007061
 10204c9:	arpl   WORD PTR [ecx+0x0],si
 10204cc:	jbe    0x1020474
 10204ce:	mov    ecx,0xc0ad7b00
 10204d3:	add    BYTE PTR [eax],al
 10204d5:	bound  ecx,QWORD PTR [eax+eax*1+0xa88125]
 10204dc:	and    eax,0x2500a57f
 10204e1:	jge    0x1020486
 10204e3:	add    BYTE PTR ds:0x2500a27b,ah
 10204e9:	jp     0x102048a
 10204eb:	add    BYTE PTR ds:0x25009e79,ah
 10204f1:	jp     0x1020491
 10204f3:	add    BYTE PTR ds:0x2a009c78,ah
 10204f9:	add    BYTE PTR gs:[eax],0x2e
 10204fd:	ins    DWORD PTR es:[edi],dx
 10204fe:	mov    DWORD PTR [eax],eax
 1020500:	xor    dh,BYTE PTR [ebp-0x6e]
 1020503:	add    BYTE PTR ds:0x36009a7c,dh
 1020509:	pop    esi
 102050a:	jo     0x102050c
 102050c:	inc    edx
 102050d:	arpl   WORD PTR [ecx+0x0],si
 1020510:	outs   dx,DWORD PTR ds:[esi]
 1020511:	popf   
 1020512:	mov    dl,0x0
 1020514:	and    DWORD PTR [edx+0x6a],edx
 1020517:	add    BYTE PTR [esi],ah
 1020519:	pop    ebx
 102051a:	jne    0x102051c
 102051c:	sub    BYTE PTR [eax+0x6f],bl
 102051f:	add    BYTE PTR [edi],ch
 1020521:	pop    ebx
 1020522:	jo     0x1020524
 1020524:	pop    edi
 1020525:	mov    esp,DWORD PTR [ecx-0x556b9800]
 102052b:	add    BYTE PTR [esi+0x76],bl
 102052e:	add    BYTE PTR [eax],0x6a
 1020531:	or     DWORD PTR [edi+0x60481d00],0x0
 1020538:	adc    al,0x35
 102053a:	dec    edx
 102053b:	add    BYTE PTR [ecx],bl
 102053d:	ds push esp
 102053f:	add    BYTE PTR [eax-0x80],bl
 1020542:	cwde   
 1020543:	add    dl,cl
 1020545:	(bad)  
 1020546:	fld    QWORD PTR [eax]
 1020548:	cvttps2pi mm7,QWORD PTR [edi]
 102054b:	add    BYTE PTR [eax+0x76],dl
 102054e:	pop    DWORD PTR [eax]
 1020550:	push   eax
 1020551:	gs jae 0x1020554
 1020554:	or     al,0x24
 1020556:	add    BYTE PTR ss:[ecx+0x64],al
 102055a:	jg     0x102055c
 102055c:	dec    eax
 102055d:	ins    BYTE PTR es:[edi],dx
 102055e:	xchg   BYTE PTR [eax],al
 1020560:	inc    eax
 1020561:	push   ebp
 1020562:	add    BYTE PTR fs:0x31007a5e,bh
 1020569:	inc    esp
 102056a:	push   esp
 102056b:	add    BYTE PTR [ebx*2+0x5e3d007a],bh
 1020572:	jnp    0x1020574
 1020574:	cmp    al,0x5c
 1020576:	jns    0x1020578
 1020578:	or     BYTE PTR [ebx],bl
 102057a:	sub    eax,0x47352200
 102057f:	add    BYTE PTR [esp+edx*1],al
 1020582:	and    eax,0x1f0f0200
 1020587:	add    BYTE PTR [edi],cl
 1020589:	pop    ds
 102058a:	xor    al,BYTE PTR [eax]
 102058c:	add    eax,0x19002312
 1020591:	sub    BYTE PTR [ebx],bh
 1020593:	add    BYTE PTR [ebx],al
 1020595:	push   cs
 1020596:	push   ds
 1020597:	add    BYTE PTR [ecx],cl
 1020599:	pop    ss
 102059a:	sub    eax,DWORD PTR [eax]
 102059c:	(bad)  
 102059d:	(bad)  
 102059e:	inc    DWORD PTR [eax]
	...
 1020710:	add    DWORD PTR [ecx],eax
 1020712:	add    DWORD PTR [eax-0x696b6f79],ecx
 1020718:	fwait
 1020719:	mov    al,ds:0xa19fa29e
 102071e:	popf   
 102071f:	add    DWORD PTR [ecx],eax
 1020721:	add    DWORD PTR [edx+0x70],esi
 1020724:	jo     0x1020795
 1020726:	add    BYTE PTR [esi-0x6c70737b],0x92
 102072d:	cdq    
 102072e:	pushf  
 102072f:	add    DWORD PTR [ecx],eax
 1020731:	add    DWORD PTR [ecx],eax
 1020733:	jb     0x1020750
 1020735:	push   ds
 1020736:	and    DWORD PTR [edi],esp
 1020738:	sub    al,0x36
 102073a:	inc    esp
 102073b:	dec    esi
 102073c:	dec    edx
 102073d:	xchg   edi,eax
 102073e:	call   0x7372:0x61600101
 1020745:	bound  esi,QWORD PTR [ebp+esi*2+0x76]
 1020749:	js     0x10207c2
 102074b:	jns    0x102079a
 102074d:	xchg   ebp,eax
 102074e:	xchg   ecx,eax
 102074f:	add    DWORD PTR [ecx],eax
 1020751:	add    DWORD PTR [edx+0x5b],ebp
 1020754:	pop    ebx
 1020755:	pop    ebx
 1020756:	adc    cl,BYTE PTR [eax]
 1020758:	add    eax,0x71580c0b
 102075d:	cwde   
 102075e:	mov    es,WORD PTR [ecx]
 1020760:	add    DWORD PTR [ecx],eax
 1020762:	add    DWORD PTR [edx+0x4c],edx
 1020765:	das    
 1020766:	or     eax,0xc0f030e
 102076b:	dec    esp
 102076c:	pop    edx
 102076d:	mov    al,BYTE PTR fs:[ecx]
 1020770:	add    DWORD PTR [ecx],eax
 1020772:	add    DWORD PTR [edx+0x1d],edx
 1020775:	sub    DWORD PTR [ecx],ecx
 1020777:	sbb    DWORD PTR ds:0x4b420c00,esp
 102077d:	mov    eax,DWORD PTR gs:[ecx]
 1020780:	add    DWORD PTR [ecx],eax
 1020782:	add    DWORD PTR [ebx+0x1b],edx
 1020785:	sbb    eax,0x3d1a1610
 102078a:	or     al,0x47
 102078c:	inc    ebx
 102078d:	mov    WORD PTR [ecx],ax
 1020790:	add    DWORD PTR [ecx],eax
 1020792:	add    DWORD PTR [edi+edx*1+0x1c],edx
 1020796:	adc    BYTE PTR [eax+0x24],cl
 1020799:	es or  al,0x35
 102079c:	inc    esi
 102079d:	add    DWORD PTR [bx+di],0x59010101
 10207a4:	adc    DWORD PTR [eax],ebx
 10207a6:	adc    BYTE PTR [edx],al
 10207a8:	lea    eax,[esi]
 10207aa:	or     al,0x3a
 10207ac:	aaa    
 10207ad:	push   0x1010182
 10207b2:	add    DWORD PTR [ecx+0x15],eax
 10207b5:	adc    al,0x10
 10207b7:	or     al,BYTE PTR [edi]
 10207b9:	add    al,0xc
 10207bb:	cmp    DWORD PTR cs:[ecx+0x7a],ebp
 10207bf:	add    DWORD PTR [ecx],eax
 10207c1:	add    DWORD PTR [ecx],eax
 10207c3:	cmp    BYTE PTR [ebx],dl
 10207c5:	adc    edx,DWORD PTR [eax]
 10207c7:	adc    BYTE PTR [eax],dl
 10207c9:	adc    BYTE PTR [eax],dl
 10207cb:	sub    BYTE PTR ds:0x1017b5c,ch
 10207d1:	add    DWORD PTR [ecx],eax
 10207d3:	xor    ch,BYTE PTR [esi+0x33]
 10207d6:	ins    BYTE PTR es:[edi],dx
 10207d7:	cmp    al,0x7e
 10207d9:	push   ecx
 10207da:	test   BYTE PTR [eax-0x7d],dl
 10207dd:	pop    ebp
 10207de:	jl     0x10207e1
 10207e0:	add    DWORD PTR [ecx],eax
 10207e2:	add    DWORD PTR [edx],ebp
 10207e4:	and    bh,BYTE PTR [edi+0x31]
 10207e7:	ins    DWORD PTR es:[edi],dx
 10207e8:	sub    ebp,DWORD PTR [ebx+0x3f]
 10207eb:	test   BYTE PTR [esi+0x5e],dl
 10207ee:	jge    0x10207f1
 10207f0:	add    DWORD PTR [ecx],eax
 10207f2:	add    DWORD PTR [eax],esp
 10207f4:	outs   dx,BYTE PTR ds:[esi]
 10207f5:	xor    BYTE PTR [esp+esi*1+0x7e],ch
 10207f9:	test   BYTE PTR ds:[ebp-0x7d],dl
 10207fd:	dec    edi
 10207fe:	arpl   WORD PTR [ecx],ax
 1020800:	add    DWORD PTR [ecx],eax
 1020802:	add    DWORD PTR [eax],esp
 1020804:	and    BYTE PTR [edi],bl
 1020806:	and    esi,DWORD PTR [edx]
 1020808:	cmp    eax,DWORD PTR [ebp+0x40]
 102080b:	dec    ecx
 102080c:	push   edi
 102080d:	pop    edi
 102080e:	add    DWORD PTR [ecx],eax
 1020810:	loopne 0x1020813
 1020812:	xor    DWORD PTR [edx-0x40],0x1
 1020816:	sub    al,0x2c
 1020818:	loopne 0x102081b
 102081a:	sbb    BYTE PTR [ecx],dl
 102081c:	add    BYTE PTR [ecx],0xc
 102081f:	or     al,0xc0
 1020821:	add    DWORD PTR [edx],ecx
 1020823:	or     eax,esp
 1020825:	add    DWORD PTR [eax+0x40],eax
 1020828:	loopne 0x102082b
 102082a:	in     eax,0xe9
 102082c:	loopne 0x102082f
 102082e:	add    BYTE PTR [eax],al
 1020830:	loopne 0x1020833
 1020832:	add    BYTE PTR [edx-0x20],ch
 1020835:	add    DWORD PTR [edi+0x65],esp
 1020838:	loopne 0x102083b
 102083a:	sbb    DWORD PTR [edi],ebx
 102083c:	loopne 0x102083f
 102083e:	(bad)  
 102083f:	pavgb  mm0,QWORD PTR [ecx]
 1020842:	and    al,0x4
 1020844:	loopne 0x1020847
 1020846:	inc    ebx
 1020847:	pusha  
 1020848:	loopne 0x102084b
 102084a:	in     eax,0xeb
 102084c:	loopne 0x1020851
 102084e:	add    BYTE PTR [eax],al
 1020850:	sub    BYTE PTR [eax],al
 1020852:	add    BYTE PTR [eax],al
 1020854:	and    BYTE PTR [eax],al
 1020856:	add    BYTE PTR [eax],al
 1020858:	inc    eax
 1020859:	add    BYTE PTR [eax],al
 102085b:	add    BYTE PTR [ecx],al
 102085d:	add    BYTE PTR [eax],ah
	...
 1020887:	add    BYTE PTR [edi+0x7f],dl
 102088a:	xchg   esi,eax
 102088b:	call   DWORD PTR [ebp+0x7d]
 102088e:	xchg   ebp,eax
 102088f:	call   DWORD PTR [ebx+edi*2-0x6e]
 1020893:	call   DWORD PTR [ebx+0x78]
 1020896:	xchg   ecx,eax
 1020897:	call   DWORD PTR [eax+0x77]
 102089a:	(bad)  
 102089b:	call   DWORD PTR [eax+0x74]
 102089e:	mov    ?,edi
 10208a0:	dec    edi
 10208a1:	je     0x1020830
 10208a3:	dec    DWORD PTR [edi+0x73]
 10208a6:	mov    edi,edi
 10208a8:	dec    esi
 10208a9:	jb     0x1020836
 10208ab:	dec    DWORD PTR [ebp+0x70]
 10208ae:	mov    edi,edi
 10208b0:	dec    esp
 10208b1:	outs   dx,BYTE PTR ds:[esi]
 10208b2:	mov    bh,bh
 10208b4:	dec    ebx
 10208b5:	ins    DWORD PTR es:[edi],dx
 10208b6:	xchg   edi,edi
 10208b8:	dec    ebx
 10208b9:	ins    DWORD PTR es:[edi],dx
 10208ba:	test   edi,edi
 10208bc:	dec    ebx
 10208bd:	ins    BYTE PTR es:[edi],dx
 10208be:	xchg   bh,bh
 10208c0:	dec    ecx
 10208c1:	push   0xffffff85
 10208c3:	dec    DWORD PTR [edx+0x6a]
 10208c6:	cmp    edi,0x49
 10208c9:	push   0x6646ff82
 10208ce:	cmp    edi,0xff7f6444
 10208d4:	inc    edx
 10208d5:	bound  edi,QWORD PTR [ebp-0x1]
 10208d8:	inc    ecx
 10208d9:	pusha  
 10208da:	jl     0x10208db
 10208dc:	inc    eax
 10208dd:	pop    edi
 10208de:	jp     0x10208df
 10208e0:	cmp    eax,0xff795d
	...
 1020905:	add    BYTE PTR [eax],al
 1020907:	add    BYTE PTR [edx-0x7e],bl
 102090a:	call   0xa3ff:0xf7f0adff
 1020911:	in     al,dx
 1020912:	idiv   bh
 1020914:	xchg   edi,eax
 1020915:	out    0xf5,eax
 1020917:	inc    DWORD PTR [esi+0x74fff5e1]
 102091d:	(bad)  
 102091f:	jmp    DWORD PTR [ebx-0x2d]
 1020922:	bnd call DWORD PTR [eax-0x35]
 1020926:	repnz (bad) 
 1020928:	aas    
 1020929:	(bad)  
 102092a:	icebp  
 102092b:	push   DWORD PTR [eax]
 102092d:	mov    ebp,0xb722ffef
 1020932:	out    dx,al
 1020933:	call   FWORD PTR [ecx]
 1020935:	mov    dl,0xec
 1020937:	call   DWORD PTR [edx]
 1020939:	scas   al,BYTE PTR es:[edi]
 102093a:	jmp    0x12ff:0xe9ac11ff
 1020941:	test   eax,0xa612ffe6
 1020946:	in     al,0xff
 1020948:	adc    ah,BYTE PTR [ebx-0x5eee001e]
 102094e:	(bad)  
 1020950:	adc    DWORD PTR [edi-0x63f00024],ebx
 1020956:	(bad)  
 1020958:	push   cs
 1020959:	fwait
 102095a:	xlat   BYTE PTR ds:[ebx]
 102095b:	dec    DWORD PTR [ebx]
 102095d:	mov    eax,ebx
 102095f:	dec    DWORD PTR [edx]
 1020961:	jl     0x102090f
 1020963:	dec    DWORD PTR [ecx+0x66]
 1020966:	cmp    bh,0x0
	...
 102097d:	add    BYTE PTR [eax],al
 102097f:	add    DWORD PTR [esp+esi*4-0x4a7c003b],eax
 1020986:	(bad)  
 1020989:	mov    bl,0xc3
 102098b:	inc    DWORD PTR [eax+0x7effc1b0]
 1020991:	scas   al,BYTE PTR es:[edi]
 1020992:	mov    edi,0xbdab7bff
 1020997:	(bad)  
 1020998:	js     0x1020941
 102099a:	mov    ebx,0xb8a375ff
 102099f:	push   DWORD PTR [ebx-0x5f]
 10209a2:	mov    ah,0xff
 10209a4:	outs   dx,DWORD PTR ds:[esi]
 10209a5:	pushf  
 10209a6:	mov    cl,0xff
 10209a8:	outs   dx,DWORD PTR ds:[esi]
 10209a9:	cdq    
 10209aa:	scas   al,BYTE PTR es:[edi]
 10209ab:	jmp    FWORD PTR [ebx-0x69]
 10209ae:	stos   DWORD PTR es:[edi],eax
 10209af:	jmp    FWORD PTR [edx-0x6d]
 10209b2:	test   al,0xff
 10209b4:	addr16 nop
 10209b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10209b7:	jmp    DWORD PTR [esi-0x74]
 10209ba:	mov    ds:0x9f8963ff,al
 10209bf:	jmp    DWORD PTR [ecx-0x7b]
 10209c2:	pushf  
 10209c3:	call   FWORD PTR [edi-0x7e]
 10209c6:	cdq    
 10209c7:	call   FWORD PTR [ebx+0x7d]
 10209ca:	xchg   esi,eax
 10209cb:	call   DWORD PTR [edi+0x7a]
 10209ce:	xchg   ecx,eax
 10209cf:	call   DWORD PTR [ebx+0x75]
 10209d2:	(bad)  
 10209d3:	call   DWORD PTR [ecx+0x71]
 10209d6:	mov    edi,edi
 10209d8:	dec    esp
 10209d9:	ins    BYTE PTR es:[edi],dx
 10209da:	xchg   bh,bh
 10209dc:	dec    eax
 10209dd:	addr16 cmp edi,0xd
 10209e1:	jl     0x102098f
 10209e3:	dec    DWORD PTR [ecx+0x66]
 10209e6:	cmp    bh,0x0
	...
 10209f9:	add    BYTE PTR [eax],al
 10209fb:	add    DWORD PTR [eax],eax
 10209fd:	push   ebp
 10209fe:	push   ebp
 10209ff:	push   es
 1020a00:	mov    WORD PTR [ecx-0x195a0056],fs
 1020a06:	out    dx,al
 1020a07:	call   FWORD PTR [edx+eiz*8-0x21700014]
 1020a0e:	in     al,dx
 1020a0f:	inc    DWORD PTR [edx+0x74ffebd8]
 1020a15:	shr    edx,cl
 1020a17:	jmp    DWORD PTR [ebx-0x35]
 1020a1a:	call   0xe8c75e1e
 1020a1f:	inc    DWORD PTR [ebp-0x42]
 1020a22:	out    0xff,al
 1020a24:	ss mov eax,0xb328ffe6
 1020a2a:	in     eax,0xff
 1020a2c:	and    BYTE PTR [edi-0x54e4001d],ch
 1020a32:	loop   0x1020a33
 1020a34:	sbb    DWORD PTR [edx-0x58e5001f],ebp
 1020a3a:	loopne 0x1020a3b
 1020a3c:	sbb    esp,DWORD PTR [esi-0x5ae20022]
 1020a42:	fdiv   st(7),st
 1020a44:	push   ds
 1020a45:	mov    ds:0xa11effda,al
 1020a4a:	xlat   BYTE PTR ds:[ebx]
 1020a4b:	call   FWORD PTR ds:0x1bffd59e
 1020a51:	pushf  
 1020a52:	aam    0xff
 1020a54:	sbb    DWORD PTR [ebx-0x6fe9002d],ebx
 1020a5a:	ret    
 1020a5b:	call   DWORD PTR [ecx+eax*4]
 1020a5e:	scas   eax,DWORD PTR es:[edi]
 1020a5f:	inc    DWORD PTR [edi+0x66]
 1020a62:	cmp    bh,0xd
 1020a65:	mov    bh,BYTE PTR [edi-0x7f99b601]
 1020a6b:	inc    DWORD PTR [eax]
	...
 1020a79:	xor    esp,DWORD PTR [esi+0x5]
 1020a7c:	pop    eax
 1020a7d:	test   DWORD PTR [ebx-0x637aa501],ebx
 1020a83:	call   DWORD PTR [ecx+eax*4-0x6a]
 1020a87:	call   DWORD PTR [ecx+0x7e]
 1020a8a:	xchg   ebx,eax
 1020a8b:	call   DWORD PTR [eax+0x7c]
 1020a8e:	xchg   edx,eax
 1020a8f:	dec    DWORD PTR [esi+0x7a]
 1020a92:	nop
 1020a93:	dec    DWORD PTR [ebx+0x76]
 1020a96:	(bad)  
 1020a97:	dec    DWORD PTR [esi+esi*2-0x73]
 1020a9b:	dec    DWORD PTR [ecx+0x74]
 1020a9e:	mov    edi,edi
 1020aa0:	dec    edx
 1020aa1:	je     0x1020a2e
 1020aa3:	dec    DWORD PTR [eax+0x71]
 1020aa6:	mov    edi,edi
 1020aa8:	dec    ecx
 1020aa9:	jb     0x1020a35
 1020aab:	dec    DWORD PTR [edx+0x72]
 1020aae:	mov    edi,edi
 1020ab0:	dec    ebx
 1020ab1:	jae    0x1020a3e
 1020ab3:	dec    DWORD PTR [edx+esi*2-0x76]
 1020ab7:	dec    DWORD PTR [esi+0x74]
 1020aba:	mov    bh,bh
 1020abc:	dec    esi
 1020abd:	jae    0x1020a4a
 1020abf:	dec    DWORD PTR [edi+0x72]
 1020ac2:	mov    edi,edi
 1020ac4:	dec    ebp
 1020ac5:	jno    0x1020a51
 1020ac7:	dec    DWORD PTR [ebp+0x71]
 1020aca:	mov    bh,bh
 1020acc:	dec    esp
 1020acd:	outs   dx,DWORD PTR ds:[esi]
 1020ace:	xchg   edi,edi
 1020ad0:	dec    ecx
 1020ad1:	ins    DWORD PTR es:[edi],dx
 1020ad2:	test   bh,bh
 1020ad4:	dec    ecx
 1020ad5:	imul   eax,DWORD PTR [ebx-0x7c96b501],0xffffffff
 1020adc:	sbb    BYTE PTR [edi+0x684affc2],cl
 1020ae2:	cmp    edi,0x10
 1020ae5:	jle    0x1020a94
 1020ae7:	(bad)  
 1020ae8:	ds pop ebp
 1020aea:	jns    0x1020aeb
	...
 1020af8:	add    BYTE PTR [eax+0x60],al
 1020afb:	or     BYTE PTR [esi-0x7c],dl
 1020afe:	fwait
 1020aff:	(bad)  
 1020b00:	mov    edx,0xccffe6dd
 1020b05:	out    0xed,al
 1020b07:	dec    ecx
 1020b09:	in     al,0xec
 1020b0b:	inc    esi
 1020b0d:	loop   0x1020afa
 1020b0f:	inc    ebx
 1020b11:	loope  0x1020afd
 1020b13:	(bad)  
 1020b14:	mov    edi,0xb9ffe8df
 1020b19:	fsubr  st(6),st
 1020b1b:	push   DWORD PTR [edx-0x62001a27]
 1020b21:	into   
 1020b22:	fdivp  st(7),st
 1020b24:	xchg   ebp,eax
 1020b25:	retf   
 1020b26:	fdiv   st(7),st
 1020b28:	pop    edi
 1020b2a:	(bad)  
 1020b2c:	xchg   esp,eax
 1020b2e:	xlat   BYTE PTR ds:[ebx]
 1020b2f:	inc    DWORD PTR [ecx+0x7effd6c0]
 1020b35:	mov    edi,0xbe7bffd6
 1020b3a:	aad    0xff
 1020b3c:	jns    0x1020afb
 1020b3e:	aam    0xff
 1020b40:	jae    0x1020afc
 1020b42:	sar    bh,cl
 1020b44:	jno    0x1020aff
 1020b46:	sar    bh,cl
 1020b48:	jo     0x1020b03
 1020b4a:	sar    bh,cl
 1020b4c:	ins    DWORD PTR es:[edi],dx
 1020b4d:	mov    eax,0xb86bffd2
 1020b52:	aad    0xff
 1020b54:	mov    eax,ds:0x6e4dffc3
 1020b5a:	xchg   bh,bh
 1020b5c:	dec    ebp
 1020b5d:	outs   dx,BYTE PTR ds:[esi]
 1020b5e:	xchg   bh,bh
 1020b60:	sbb    BYTE PTR [edx+0x6649ffae],al
 1020b66:	cmp    bh,0x39
 1020b69:	push   edx
 1020b6a:	inc    DWORD PTR [bx+si]
	...
 1020b79:	xor    esp,DWORD PTR [esi+0x5]
 1020b7c:	add    BYTE PTR [ebx+0x5e],al
 1020b7f:	adc    edx,DWORD PTR [ecx-0x7f]
 1020b82:	cwde   
 1020b83:	(bad)  
 1020b84:	mov    ebp,0xd4ffe7de
 1020b89:	in     eax,dx
 1020b8a:	repz call eax
 1020b8d:	jmp    0xfff1:0xeacdfff2
 1020b94:	enter  0xf1e8,0xff
 1020b98:	ret    0xf0e5
 1020b9b:	(bad)  
 1020b9c:	mov    ebp,0xb6ffeee2
 1020ba1:	loopne 0x1020b90
 1020ba3:	jmp    DWORD PTR [eax-0x6600182a]
 1020ba9:	aam    0xe6
 1020bab:	call   DWORD PTR [edx-0x74001a30]
 1020bb1:	int    0xe3
 1020bb3:	inc    DWORD PTR [edi-0x79001c33]
 1020bb9:	int3   
 1020bba:	jecxz  0x1020bbb
 1020bbc:	or     ebx,0xffffffe2
 1020bbf:	(bad)  
 1020bc0:	jle    0x1020b8a
 1020bc2:	loope  0x1020bc3
 1020bc4:	jnp    0x1020b8e
 1020bc6:	loope  0x1020bc7
 1020bc8:	jns    0x1020b90
 1020bca:	loope  0x1020bcb
 1020bcc:	js     0x1020b93
 1020bce:	loope  0x1020bcf
 1020bd0:	jae    0x1020b97
 1020bd2:	loope  0x1020bd3
 1020bd4:	push   0x38ffdbbd
 1020bd9:	test   al,0xd0
 1020bdb:	call   DWORD PTR [edx+0x70]
 1020bde:	mov    edi,edi
 1020be0:	sbb    edx,DWORD PTR [eax+0x6749ffc2]
 1020be6:	cmp    bh,0x3e
 1020be9:	push   esi
 1020bea:	push   0xffffffff
	...
 1020bf8:	add    BYTE PTR [eax],al
 1020bfa:	add    BYTE PTR [ecx],al
 1020bfc:	add    BYTE PTR [ebp+0x6d],ch
 1020bff:	pop    es
 1020c00:	pop    ecx
 1020c01:	nop
 1020c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1020c03:	(bad)  
 1020c04:	mov    esi,0xd7ffe2dd
 1020c09:	cmc    
 1020c0a:	stc    
 1020c0b:	call   ebx
 1020c0d:	repz clc 
 1020c0f:	dec    edi
 1020c11:	repnz idiv edi
 1020c14:	retf   0xf7f1
 1020c17:	inc    esp
 1020c19:	out    dx,eax
 1020c1a:	idiv   bh
 1020c1c:	mov    ebp,0x8efff6ed
 1020c21:	test   DWORD PTR [edx-0x1],edi
 1020c24:	xchg   edx,eax
 1020c25:	test   DWORD PTR [edi-0x1],esi
 1020c28:	test   DWORD PTR [edi+0x69],esi
 1020c2b:	inc    DWORD PTR [eax+edi*2+0x7681ff6a]
 1020c32:	push   0xffffffff
 1020c34:	xor    BYTE PTR [esi+0x69],0xff
 1020c38:	xor    BYTE PTR [eax+ebp*2-0x1],0x83
 1020c3d:	jae    0x1020cab
 1020c3f:	inc    DWORD PTR [edx+esi*2+0x6a7dff69]
 1020c46:	pop    esp
 1020c47:	(bad)  
 1020c48:	jge    0x1020c23
 1020c4a:	out    dx,al
 1020c4b:	(bad)  
 1020c4c:	jp     0x1020c26
 1020c4e:	out    dx,al
 1020c4f:	push   DWORD PTR [ebp-0x29]
 1020c52:	out    dx,al
 1020c53:	push   DWORD PTR [ecx-0x2a]
 1020c56:	out    dx,al
 1020c57:	inc    DWORD PTR [edx-0x4b]
 1020c5a:	(bad)  
 1020c5c:	data16 mov BYTE PTR [esi-0x6e86ad01],bl
 1020c63:	dec    DWORD PTR [ecx+ebp*2-0x7d]
 1020c67:	inc    DWORD PTR [eax+0x58]
 1020c6a:	ins    BYTE PTR es:[edi],dx
 1020c6b:	inc    DWORD PTR [eax]
	...
 1020c7d:	stos   BYTE PTR es:[edi],al
 1020c7e:	stos   BYTE PTR es:[edi],al
 1020c7f:	add    edx,DWORD PTR [esi-0x64]
 1020c82:	mov    al,0xff
 1020c84:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
 1020c86:	mov    dl,0xff
 1020c88:	vpsubw ymm7,ymm1,ymm7
 1020c8c:	shl    ebx,0xf8
 1020c8f:	(bad)  
 1020c90:	mov    ecx,0xb2fff7f2
 1020c95:	icebp  
 1020c96:	idiv   bh
 1020c98:	stos   BYTE PTR es:[edi],al
 1020c99:	out    dx,al
 1020c9a:	cmc    
 1020c9b:	jmp    DWORD PTR [eax-0x45000b14]
 1020ca1:	mov    cl,0xa8
 1020ca3:	(bad)  
 1020ca4:	push   ebx
 1020ca6:	jmp    0xefff:0xbac8edff
 1020cad:	int    0xbf
 1020caf:	(bad)  
 1020cb0:	out    dx,eax
 1020cb1:	int    0xbf
 1020cb3:	(bad)  
 1020cb4:	out    dx,eax
 1020cb5:	into   
 1020cb6:	mov    edi,0xc5cef4ff
 1020cbb:	(bad)  
 1020cbc:	jmp    0x1020c8b
 1020cbe:	mov    ecx,0xc4d6f8ff
 1020cc3:	(bad)  
 1020cc4:	mov    esi,0x50ff919c
 1020cc9:	(bad)  
 1020ccb:	dec    DWORD PTR [ebx-0x28]
 1020cce:	jmp    0x1020ccf
 1020cd0:	inc    edi
 1020cd1:	fsubr  st,st(3)
 1020cd3:	inc    DWORD PTR [ecx-0x2c]
 1020cd6:	jmp    0x62ff:0xe6cb3eff
 1020cdd:	xchg   edx,eax
 1020cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1020cdf:	call   DWORD PTR [eax+0x71]
 1020ce2:	mov    edi,edi
 1020ce4:	push   edi
 1020ce5:	ja     0x1020c76
 1020ce7:	inc    DWORD PTR [ecx+0x5a]
 1020cea:	ins    DWORD PTR es:[edi],dx
 1020ceb:	inc    DWORD PTR [eax]
	...
 1020cfd:	add    BYTE PTR [eax-0x3a51fffe],0x16
 1020d04:	inc    edx
 1020d05:	mov    ebx,DWORD PTR [ebp-0x171e5401]
 1020d0b:	jmp    FWORD PTR [eax-0x5d001a23]
 1020d11:	(bad)  
 1020d13:	call   FWORD PTR [ebx-0x6a001f29]
 1020d19:	aam    0xde
 1020d1b:	dec    DWORD PTR [edx-0x4e002431]
 1020d21:	test   eax,0xfbffffa0
 1020d26:	repnz (bad) 
 1020d28:	(bad)  
 1020d29:	loope  0x1020d00
 1020d2b:	(bad)  
 1020d2c:	(bad)  
 1020d2d:	jecxz  0x1020d06
 1020d2f:	(bad)  
 1020d30:	(bad)  
 1020d31:	in     al,0xd8
 1020d33:	(bad)  
 1020d34:	jmp    esp
 1020d36:	fcos   
 1020d38:	jmp    ebx
 1020d3a:	out    dx,al
 1020d3b:	push   DWORD PTR [esi]
 1020d3d:	xlat   BYTE PTR ds:[ebx]
 1020d3e:	or     edi,edi
 1020d40:	sbb    esi,0x9ccbff4f
 1020d46:	mov    ds:0xcbbc59ff,al
 1020d4b:	call   DWORD PTR [esi-0x45]
 1020d4e:	retf   
 1020d4f:	call   DWORD PTR [edx+edi*4-0x36]
 1020d53:	dec    DWORD PTR [edi-0x48]
 1020d56:	enter  0x4cff,0xb3
 1020d5a:	(bad)  
 1020d5d:	scas   al,BYTE PTR es:[edi]
 1020d5e:	ret    0x52ff
 1020d61:	jae    0x1020ced
 1020d63:	call   FWORD PTR [eax+0x78]
 1020d66:	nop
 1020d67:	inc    DWORD PTR [ebp+0x5d]
 1020d6a:	jo     0x1020d6b
	...
 1020d80:	add    BYTE PTR [ebp-0x80],dl
 1020d83:	push   es
 1020d84:	push   ebp
 1020d85:	adc    BYTE PTR [edi+edi*8-0x151c44],0xb8
 1020d8d:	fucomip st,st(0)
 1020d8f:	push   DWORD PTR [edx-0x53001b24]
 1020d95:	(bad)  
 1020d97:	jmp    DWORD PTR [edx-0x6500202b]
 1020d9d:	rcr    ebp,1
 1020d9f:	push   DWORD PTR [ebx-0x5d56]
 1020da5:	imul   edi
 1020da7:	(bad)  
 1020da8:	cld    
 1020da9:	(bad)  
 1020dab:	(bad)  
 1020dac:	jmp    ebp
 1020dae:	(bad)  
 1020daf:	(bad)  
 1020db0:	push   eax
 1020db2:	loope  0x1020db3
 1020db4:	push   ecx
 1020db6:	in     al,0xff
 1020db8:	jmp    esp
 1020dba:	loope  0x1020dbb
 1020dbc:	rcr    dh,1
 1020dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1020dbf:	jmp    edi
 1020dc1:	jecxz  0x1020d7f
 1020dc3:	(bad)  
 1020dc4:	mov    ebx,0x62ff9098
 1020dc9:	mov    dh,0xc9
 1020dcb:	jmp    DWORD PTR [eax-0x4b]
 1020dce:	enter  0x5cff,0xb4
 1020dd2:	(bad)  
 1020dd3:	call   FWORD PTR [eax-0x4e]
 1020dd6:	(bad)  
 1020dd7:	call   DWORD PTR [ebx-0x4f]
 1020dda:	(bad)  
 1020ddd:	mov    cl,0xc7
 1020ddf:	call   DWORD PTR [esi+0x75]
 1020de2:	(bad)  
 1020de3:	call   FWORD PTR [ecx+0x79]
 1020de6:	xchg   ecx,eax
 1020de7:	inc    DWORD PTR [esi+0x60]
 1020dea:	jb     0x1020deb
	...
 1020e00:	add    BYTE PTR [eax],al
 1020e02:	add    BYTE PTR [ecx],al
 1020e04:	pop    ebp
 1020e05:	xchg   BYTE PTR [ecx-0x131c4e01],bl
 1020e0b:	jmp    FWORD PTR [edi-0x5500151f]
 1020e11:	fsubp  st(0),st
 1020e13:	jmp    DWORD PTR [esp+ebx*8-0x2562001a]
 1020e1a:	in     al,0xff
 1020e1c:	xchg   esp,eax
 1020e1d:	(bad)  
 1020e1e:	loop   0x1020e1f
 1020e20:	mov    dh,0xad
 1020e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1020e23:	(bad)  
 1020e24:	(bad)  
 1020e25:	push   esi
 1020e27:	(bad)  
 1020e28:	jmp    ebx
 1020e2a:	sar    edi,cl
 1020e2c:	hlt    
 1020e2d:	retf   0xffc4
 1020e30:	jns    0x1020ea7
 1020e32:	ja     0x1020e33
 1020e34:	mov    ch,BYTE PTR [ebp+0x67]
 1020e37:	(bad)  
 1020e38:	call   esp
 1020e3a:	(bad)  
 1020e3b:	(bad)  
 1020e3c:	push   eax
 1020e3e:	lock (bad) 
 1020e40:	(bad)  
 1020e41:	out    dx,al
 1020e42:	jmp    0x1020e43
 1020e44:	mov    bl,0x99
 1020e46:	mov    edi,edi
 1020e48:	pop    ebp
 1020e49:	mov    esi,0xbd5bffd1
 1020e4e:	sar    edi,1
 1020e50:	push   edi
 1020e51:	mov    ebx,0xb953ffd0
 1020e56:	into   
 1020e57:	dec    DWORD PTR [ebp-0x48]
 1020e5a:	int    0xff
 1020e5c:	inc    esi
 1020e5d:	mov    dh,0xcd
 1020e5f:	call   FWORD PTR [edx+0x79]
 1020e62:	nop
 1020e63:	call   FWORD PTR [esp+edi*2-0x6e]
 1020e67:	dec    DWORD PTR [eax+0x60]
 1020e6a:	jae    0x1020e6b
	...
 1020e84:	popa   
 1020e85:	mov    DWORD PTR [ebx-0xe164401],ebx
 1020e8b:	(bad)  
 1020e8c:	mov    eax,0xb3ffefe7
 1020e91:	in     eax,0xee
 1020e93:	jmp    FWORD PTR [esi-0x5a00121d]
 1020e99:	loopne 0x1020e85
 1020e9b:	call   FWORD PTR [esp+ebx*8-0x4c3e0019]
 1020ea2:	stos   BYTE PTR es:[edi],al
 1020ea3:	(bad)  
 1020ea4:	cld    
 1020ea5:	in     al,0xe0
 1020ea7:	dec    DWORD PTR [edx+0x1bff9d94]
 1020ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1020eae:	mov    dl,0xff
 1020eb0:	add    BYTE PTR [esi+0x7000ffd8],bh
 1020eb6:	mov    ?,edi
 1020eb8:	sub    al,0x3e
 1020eba:	dec    edx
 1020ebb:	jmp    DWORD PTR [ebp-0x847d]
 1020ec1:	out    dx,eax
 1020ec2:	jecxz  0x1020ec3
 1020ec4:	mov    ebx,0x5eff8f9f
 1020ec9:	ret    
 1020eca:	xlat   BYTE PTR ds:[ebx]
 1020ecb:	call   FWORD PTR [ebx-0x3f]
 1020ece:	aad    0xff
 1020ed0:	push   edi
 1020ed1:	rcl    ah,0xff
 1020ed4:	push   ebx
 1020ed5:	mov    esi,0xbc4dffd3
 1020eda:	sar    bh,cl
 1020edc:	inc    edi
 1020edd:	mov    ecx,0x7a5cffd0
 1020ee2:	xchg   ecx,eax
 1020ee3:	call   FWORD PTR [ebp+0x7e]
 1020ee6:	xchg   ebp,eax
 1020ee7:	dec    DWORD PTR [ecx+0x61]
 1020eea:	je     0x1020eeb
	...
 1020f04:	bound  ecx,QWORD PTR [edi+ebx*4-0xc133d01]
 1020f0b:	inc    ecx
 1020f0d:	jmp    0x1020f01
 1020f0f:	(bad)  
 1020f10:	mov    ebx,0xb4fff0e9
 1020f15:	out    0xee,al
 1020f17:	jmp    FWORD PTR [ebp-0x5b00121e]
 1020f1d:	loopne 0x1020f0a
 1020f1f:	dec    esi
 1020f21:	mov    eax,0xae96ffae
 1020f26:	mov    eax,0xe4da27ff
 1020f2b:	call   FWORD PTR [ebx]
 1020f2d:	clc    
 1020f2e:	(bad)  
 1020f2f:	inc    DWORD PTR [ebx]
 1020f31:	f2xm1  
 1020f33:	inc    DWORD PTR [eax]
 1020f35:	ret    0xffdf
 1020f38:	add    BYTE PTR [edx+0x4a00ffc5],ah
 1020f3e:	data16 (bad) 
 1020f40:	mov    eax,0xb0ffa0a2
 1020f45:	cdq    
 1020f46:	mov    bh,bh
 1020f48:	pop    esi
 1020f49:	ret    0xffd7
 1020f4c:	pop    ebx
 1020f4d:	rcl    esi,0xff
 1020f50:	push   ebp
 1020f51:	mov    edi,0xbd50ffd5
 1020f56:	sar    edi,cl
 1020f58:	dec    ebx
 1020f59:	mov    ebx,0xb946ffd2
 1020f5e:	sar    edi,1
 1020f60:	pop    esp
 1020f61:	jp     0x1020ef5
 1020f63:	call   FWORD PTR [esi+edi*2-0x6b]
 1020f67:	dec    DWORD PTR [ecx+0x62]
 1020f6a:	jne    0x1020f6b
	...
 1020f84:	mov    fs,WORD PTR fs:[ecx-0xa103501]
 1020f8b:	inc    edi
 1020f8d:	out    dx,al
 1020f8e:	hlt    
 1020f8f:	inc    edx
 1020f91:	jmp    0x1020f85
 1020f93:	(bad)  
 1020f94:	mov    edx,0xb3fff0e9
 1020f99:	out    0xef,al
 1020f9b:	jmp    FWORD PTR [ebx-0x3000121d]
 1020fa1:	mov    eax,0xcba8ffae
 1020fa6:	sar    edi,1
 1020fa8:	jb     0x1020fa9
 1020faa:	(bad)  
 1020fab:	jmp    DWORD PTR [edx-0xd]
 1020fae:	std    
 1020faf:	call   DWORD PTR [esi]
 1020fb1:	(bad)  
 1020fb3:	inc    DWORD PTR [eax]
 1020fb5:	retf   
 1020fb6:	jecxz  0x1020fb7
 1020fb8:	add    al,al
 1020fba:	fcos   
 1020fbc:	add    BYTE PTR [ebx-0x6552004a],dl
 1020fc2:	call   0x5dff:0x8a99b0ff
 1020fc9:	ret    
 1020fca:	fdivr  st,st(7)
 1020fcc:	pop    edx
 1020fcd:	rcl    esi,0xff
 1020fd0:	push   ebp
 1020fd1:	rcl    ch,0xff
 1020fd4:	dec    esi
 1020fd5:	mov    ebp,0xba48ffd3
 1020fda:	sar    edi,1
 1020fdc:	inc    edx
 1020fdd:	mov    eax,0x7c5bffd0
 1020fe2:	xchg   ebx,eax
 1020fe3:	call   FWORD PTR [esi+0x7f]
 1020fe6:	xchg   edi,eax
 1020fe7:	dec    DWORD PTR [ecx+0x63]
 1020fea:	jne    0x1020feb
	...
 1021004:	gs xchg ecx,eax
 1021006:	mov    ds:0xf7f1d1ff,eax
 102100b:	dec    esp
 102100d:	lock cmc 
 102100f:	dec    eax
 1021011:	out    dx,al
 1021012:	hlt    
 1021013:	inc    edx
 1021015:	in     al,dx
 1021016:	repz (bad) 
 1021018:	mov    edx,0xb1fff1e9
 102101d:	out    0xef,al
 102101f:	call   eax
 1021021:	mov    ebx,0xccb5ffb3
 1021026:	sar    edi,cl
 1021028:	xchg   ebx,eax
 1021029:	(bad)  
 102102a:	(bad)  
 102102b:	jmp    FWORD PTR [ecx+edi*8-0x6]
 102102f:	(bad)  
 1021030:	cmp    al,bh
 1021032:	(bad)  
 1021033:	inc    DWORD PTR [eax]
 1021035:	mov    cl,0xcd
 1021037:	inc    DWORD PTR [eax]
 1021039:	int3   
 102103a:	out    0xff,eax
 102103c:	add    BYTE PTR [ebx-0x61480038],ch
 1021042:	popf   
 1021043:	push   DWORD PTR [eax+0x5dff8a99]
 1021049:	ret    
 102104a:	fdivr  st,st(7)
 102104c:	pop    ecx
 102104d:	ret    0xffd6
 1021050:	push   esp
 1021051:	mov    edi,0xbd4dffd5
 1021056:	sar    edi,cl
 1021058:	inc    esi
 1021059:	mov    edx,0xb73fffd2
 102105e:	iret   
 102105f:	call   FWORD PTR [edx+0x7b]
 1021062:	xchg   edx,eax
 1021063:	call   FWORD PTR [esi-0x7f]
 1021066:	xchg   edi,eax
 1021067:	dec    DWORD PTR [eax+0x63]
 102106a:	jne    0x102106b
	...
 1021084:	addr16 xchg edx,eax
 1021086:	mov    ds:0xf8f3d6ff,eax
 102108b:	call   edx
 102108d:	repnz idiv edi
 1021090:	into   
 1021091:	lock idiv bh
 1021094:	enter  0xf5ef,0xff
 1021098:	shr    esp,0xf3
 102109b:	(bad)  
 102109c:	mov    eax,0xd4fff0e8
 10210a1:	sar    DWORD PTR [edx-0x272e5a01],0xff
 10210a8:	test   ecx,edi
 10210aa:	cli    
 10210ab:	jmp    FWORD PTR [edi+eiz*8-0x7140017]
 10210b2:	hlt    
 10210b3:	dec    DWORD PTR [ebp+0x1dffe3da]
 10210b9:	ret    0xffd6
 10210bc:	add    BYTE PTR [edi-0x524b003a],ah
 10210c2:	mov    dl,0xff
 10210c4:	mov    al,0x99
 10210c6:	mov    bh,bh
 10210c8:	pop    esp
 10210c9:	(bad)  
 10210ca:	fdivr  st,st(7)
 10210cc:	pop    eax
 10210cd:	ret    0xffd7
 10210d0:	push   ecx
 10210d1:	mov    edi,0xbd4cffd5
 10210d6:	aam    0xff
 10210d8:	inc    esi
 10210d9:	mov    edx,0xb740ffd2
 10210de:	sar    bh,1
 10210e0:	pop    edx
 10210e1:	jnp    0x1021076
 10210e3:	call   FWORD PTR [esi-0x7f]
 10210e6:	cwde   
 10210e7:	inc    DWORD PTR [edi+0x63]
 10210ea:	jbe    0x10210eb
	...
 1021104:	imul   edx,DWORD PTR [ebp+eiz*4-0x70a2401],0xf8f4d8ff
 102110f:	call   ebx
 1021111:	repz clc 
 1021113:	dec    ebp
 1021115:	lock idiv bh
 1021118:	(bad)  
 1021119:	out    dx,al
 102111a:	hlt    
 102111b:	(bad)  
 102111c:	mov    edi,0xc1fff3eb
 1021121:	scas   eax,DWORD PTR es:[edi]
 1021122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1021123:	inc    DWORD PTR [edx+0x7bffb1a7]
 1021129:	mov    edx,0xfdffffd3
 102112e:	(bad)  
 102112f:	(bad)  
 1021130:	(bad)  
 1021131:	(bad)  
 1021132:	(bad)  
 1021133:	dec    esp
 1021135:	(bad)  
 1021136:	(bad)  
 1021137:	jmp    FWORD PTR [ebp-0x15]
 102113a:	cmc    
 102113b:	jmp    FWORD PTR [ecx]
 102113d:	fwait
 102113e:	mov    eax,0x676b7fff
 1021143:	push   DWORD PTR [eax+0x5bff8b99]
 1021149:	(bad)
 102114c:	push   edi
 102114d:	ret    
 102114e:	xlat   BYTE PTR ds:[ebx]
 102114f:	call   DWORD PTR [edx-0x41]
 1021152:	(bad)  
 1021153:	dec    DWORD PTR [ebp+edi*4-0x2d]
 1021157:	inc    DWORD PTR [ebp-0x46]
 102115a:	sar    bh,cl
 102115c:	inc    ecx
 102115d:	mov    ecx,0x7b5affd0
 1021162:	xchg   ebx,eax
 1021163:	call   FWORD PTR [esi-0x7e]
 1021166:	cwde   
 1021167:	inc    DWORD PTR [edi+0x63]
 102116a:	jbe    0x102116b
	...
 1021184:	push   0xffffff96
 1021186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1021187:	(bad)  
 1021188:	fdivrp st(6),st
 102118a:	stc    
 102118b:	(bad)  
 102118c:	fdivr  st(5),st
 102118e:	clc    
 102118f:	(bad)  
 1021190:	fdiv   st,st(5)
 1021192:	clc    
 1021193:	call   edx
 1021195:	repz idiv edi
 1021198:	int3   
 1021199:	lock cmc 
 102119b:	inc    ebx
 102119d:	out    dx,al
 102119e:	repz inc edi
 10211a1:	mov    esi,0xffffffb7
 10211a6:	cld    
 10211a7:	push   DWORD PTR [eax+0x71ffd2c6]
 10211ad:	test   al,0xc0
 10211af:	dec    DWORD PTR [ecx+0x5affdbc7]
 10211b5:	mov    eax,0xae7cffcc
 10211ba:	ret    
 10211bb:	(bad)  
 10211bc:	out    dx,al
 10211bd:	loop   0x10211a1
 10211bf:	(bad)  
 10211c0:	cld    
 10211c1:	loop   0x1021199
 10211c3:	push   DWORD PTR [eax+0x5cff8a99]
 10211c9:	(bad)  
 10211ca:	(bad)  
 10211cc:	push   edi
 10211cd:	ret    
 10211ce:	xlat   BYTE PTR ds:[ebx]
 10211cf:	call   DWORD PTR [ecx-0x40]
 10211d2:	(bad)  
 10211d3:	dec    DWORD PTR [edi+edi*4-0x2b]
 10211d7:	inc    DWORD PTR [esi-0x44]
 10211da:	sar    bh,cl
 10211dc:	inc    edx
 10211dd:	mov    ecx,0x7b58ffd1
 10211e2:	xchg   esp,eax
 10211e3:	call   FWORD PTR [edx+eax*4-0x66]
 10211e7:	inc    DWORD PTR [edi+0x63]
 10211ea:	jbe    0x10211eb
	...
 1021204:	ins    BYTE PTR es:[edi],dx
 1021205:	cwde   
 1021206:	test   eax,0xfbf8e1ff
 102120b:	(bad)  
 102120c:	fcomip st,st(6)
 102120e:	cli    
 102120f:	(bad)  
 1021210:	(bad)  
 1021212:	stc    
 1021213:	call   esi
 1021215:	hlt    
 1021216:	clc    
 1021217:	call   ecx
 1021219:	repnz idiv edi
 102121c:	leave  
 102121d:	out    dx,eax
 102121e:	cmc    
 102121f:	dec    ebp
 1021221:	mov    dl,0xff
 1021224:	(bad)  
 1021225:	(bad)  
 1021226:	(bad)  
 1021227:	(bad)  
 1021228:	(bad)  
 1021229:	push   edi
 102122b:	(bad)  
 102122c:	clc    
 102122d:	out    dx,eax
 102122e:	in     eax,dx
 102122f:	jmp    FWORD PTR [eax-0x3700303f]
 1021235:	rcl    ch,1
 1021237:	(bad)  
 1021238:	push   esi
 102123a:	out    dx,al
 102123b:	(bad)  
 102123c:	(bad)  
 102123d:	clc    
 102123e:	out    dx,eax
 102123f:	(bad)  
 1021240:	(bad)  
 1021241:	std    
 1021242:	idiv   bh
 1021244:	mov    al,0x99
 1021246:	mov    bh,bh
 1021248:	pop    esi
 1021249:	enter  0xffda,0x5a
 102124d:	(bad)
 1021250:	push   esp
 1021251:	ret    0xffd7
 1021254:	dec    esi
 1021255:	rcl    dh,0xff
 1021258:	dec    eax
 1021259:	mov    ebp,0xba42ffd4
 102125e:	sar    bh,cl
 1021260:	push   edi
 1021261:	jnp    0x10211f7
 1021263:	call   FWORD PTR [ebp-0x7d]
 1021266:	call   0xff:0x786548ff
	...
 1021281:	add    BYTE PTR [eax],al
 1021283:	add    BYTE PTR [esi-0x66],ch
 1021286:	stos   BYTE PTR es:[edi],al
 1021287:	jmp    esp
 1021289:	clc    
 102128a:	sti    
 102128b:	jmp    edx
 102128d:	clc    
 102128e:	cli    
 102128f:	(bad)  
 1021290:	fdivrp st(6),st
 1021292:	cli    
 1021293:	(bad)  
 1021294:	(bad)  
 1021296:	stc    
 1021297:	call   esp
 1021299:	repz clc 
 102129b:	dec    ebp
 102129d:	icebp  
 102129e:	idiv   bh
 10212a0:	into   
 10212a1:	enter  0xffc4,0xff
 10212a5:	(bad)  
 10212a6:	(bad)  
 10212a7:	(bad)  
 10212a8:	(bad)  
 10212a9:	(bad)  
 10212aa:	(bad)  
 10212ab:	(bad)  
 10212ac:	(bad)  
 10212ad:	(bad)  
 10212ae:	(bad)  
 10212af:	(bad)  
 10212b0:	(bad)  
 10212b1:	(bad)  
 10212b2:	(bad)  
 10212b3:	(bad)  
 10212b4:	(bad)  
 10212b5:	(bad)  
 10212b6:	(bad)  
 10212b7:	(bad)  
 10212b8:	(bad)  
 10212b9:	(bad)  
 10212ba:	cld    
 10212bb:	(bad)  
 10212bc:	(bad)  
 10212bd:	(bad)  
 10212be:	sti    
 10212bf:	(bad)  
 10212c0:	(bad)  
 10212c1:	(bad)  
 10212c2:	(bad)  
 10212c3:	push   DWORD PTR [eax+0x61ff8a99]
 10212c9:	leave  
 10212ca:	fdiv   st(7),st
 10212cc:	pop    esp
 10212cd:	(bad)  
 10212ce:	(bad)  
 10212d0:	push   ebp
 10212d1:	(bad)  
 10212d2:	fcos   
 10212d4:	push   ecx
 10212d5:	rcl    edi,0xff
 10212d8:	dec    ebx
 10212d9:	rcl    ch,0xff
 10212dc:	inc    esi
 10212dd:	mov    ebp,0x7c57ffd3
 10212e2:	xchg   ebp,eax
 10212e3:	call   FWORD PTR [esi-0x7b]
 10212e6:	pushf  
 10212e7:	inc    DWORD PTR [edi+0x65]
 10212ea:	js     0x10212eb
	...
 1021304:	outs   dx,BYTE PTR ds:[esi]
 1021305:	fwait
 1021306:	lods   al,BYTE PTR ds:[esi]
 1021307:	jmp    esp
 1021309:	cli    
 102130a:	cld    
 102130b:	jmp    edx
 102130d:	clc    
 102130e:	cld    
 102130f:	jmp    eax
 1021311:	clc    
 1021312:	sti    
 1021313:	(bad)  
 1021314:	(bad)  
 1021316:	cli    
 1021317:	call   edi
 1021319:	hlt    
 102131a:	stc    
 102131b:	call   ecx
 102131d:	repz clc 
 102131f:	(bad)  
 1021320:	mov    ebx,0xcfffadb5
 1021325:	leave  
 1021326:	(bad)  
 1021329:	mov    esi,0xb7beffb9
 102132e:	scas   eax,DWORD PTR es:[edi]
 102132f:	(bad)  
 1021330:	mov    eax,0xb0ffa7ae
 1021335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1021336:	popf   
 1021337:	jmp    DWORD PTR [edi-0x5f006d65]
 102133d:	xchg   ebx,eax
 102133e:	mov    edi,edi
 1021340:	call   0x8a99:0xb0ff818d
 1021347:	jmp    DWORD PTR [ebx+ecx*8-0x23]
 102134b:	call   FWORD PTR [edi-0x38]
 102134e:	fdiv   st(7),st
 1021350:	pop    edx
 1021351:	(bad)  
 1021352:	(bad)  
 1021354:	push   ebp
 1021355:	(bad)  
 1021356:	fdivr  st,st(7)
 1021358:	dec    edi
 1021359:	ret    0xffd7
 102135c:	dec    edx
 102135d:	mov    edi,0x7d58ffd5
 1021362:	xchg   ebp,eax
 1021363:	call   FWORD PTR [esi-0x7a]
 1021366:	pushf  
 1021367:	dec    DWORD PTR [eax+0x66]
 102136a:	jns    0x102136b
	...
 1021384:	outs   dx,DWORD PTR ds:[esi]
 1021385:	pushf  
 1021386:	lods   eax,DWORD PTR ds:[esi]
 1021387:	jmp    esi
 1021389:	cli    
 102138a:	cld    
 102138b:	jmp    esp
 102138d:	stc    
 102138e:	cld    
 102138f:	jmp    ecx
 1021391:	clc    
 1021392:	sti    
 1021393:	(bad)  
 1021394:	(bad)  
 1021396:	cli    
 1021397:	(bad)  
 1021398:	fprem1 
 102139a:	stc    
 102139b:	call   ebx
 102139d:	repz clc 
 102139f:	dec    esi
 10213a1:	retf   0xffc4
 10213a4:	(bad)  
 10213a5:	(bad)  
 10213a6:	(bad)  
 10213a7:	(bad)  
 10213a8:	clc    
 10213a9:	cmc    
 10213aa:	hlt    
 10213ab:	(bad)  
 10213ac:	clc    
 10213ad:	hlt    
 10213ae:	icebp  
 10213af:	(bad)  
 10213b0:	stc    
 10213b1:	repnz lock (bad) 
 10213b4:	clc    
 10213b5:	icebp  
 10213b6:	in     eax,dx
 10213b7:	push   esi
 10213b9:	out    dx,al
 10213ba:	jmp    0x10213bb
 10213bc:	imul   esi
 10213be:	jmp    0xecf411c2
 10213c3:	push   DWORD PTR [eax+0x68ff8a99]
 10213c9:	int    0xdf
 10213cb:	jmp    DWORD PTR [ebx+ecx*8-0x22]
 10213cf:	call   FWORD PTR [esi-0x37]
 10213d2:	fdiv   st(7),st
 10213d4:	pop    edx
 10213d5:	(bad)  
 10213d6:	(bad)  
 10213d8:	push   ebp
 10213d9:	(bad)
 10213dc:	dec    edi
 10213dd:	ret    0xffd7
 10213e0:	push   edi
 10213e1:	jg     0x102137a
 10213e3:	call   FWORD PTR [edi-0x79]
 10213e6:	lahf   
 10213e7:	inc    DWORD PTR [edi+0x67]
 10213ea:	jns    0x10213eb
	...
 1021404:	jo     0x10213a4
 1021406:	lods   eax,DWORD PTR ds:[esi]
 1021407:	jmp    esi
 1021409:	cli    
 102140a:	std    
 102140b:	jmp    esp
 102140d:	cli    
 102140e:	cld    
 102140f:	jmp    ecx
 1021411:	stc    
 1021412:	cld    
 1021413:	(bad)  
 1021414:	fdivp  st(0),st
 1021416:	sti    
 1021417:	(bad)  
 1021418:	fincstp 
 102141a:	cli    
 102141b:	call   esp
 102141d:	idiv   cl
 102141f:	call   esp
 1021421:	iret   
 1021422:	retf   
 1021423:	(bad)  
 1021424:	(bad)  
 1021425:	(bad)  
 1021426:	(bad)  
 1021427:	(bad)  
 1021428:	(bad)  
 1021429:	(bad)  
 102142a:	(bad)  
 102142b:	(bad)  
 102142c:	(bad)  
 102142d:	(bad)  
 102142e:	(bad)  
 102142f:	(bad)  
 1021430:	(bad)  
 1021431:	(bad)  
 1021432:	sti    
 1021433:	(bad)  
 1021434:	(bad)  
 1021435:	sti    
 1021436:	stc    
 1021437:	(bad)  
 1021438:	(bad)  
 1021439:	stc    
 102143a:	idiv   bh
 102143c:	(bad)  
 102143d:	stc    
 102143e:	hlt    
 102143f:	(bad)  
 1021440:	(bad)  
 1021441:	cli    
 1021442:	hlt    
 1021443:	push   DWORD PTR [eax+0x6eff8a99]
 1021449:	shl    edx,1
 102144b:	jmp    FWORD PTR [ecx-0x31]
 102144e:	loopne 0x102144f
 1021450:	fs int3 
 1021452:	fdivp  st(7),st
 1021454:	pop    edi
 1021455:	leave  
 1021456:	(bad)  
 1021458:	pop    ecx
 1021459:	(bad)  
 102145a:	(bad)  
 102145c:	push   ebp
 102145d:	(bad)
 1021460:	pop    ecx
 1021461:	sbb    DWORD PTR [eax-0x5f759e01],0x7b6949ff
 102146b:	inc    DWORD PTR [eax]
	...
 1021481:	add    BYTE PTR [eax],al
 1021483:	add    BYTE PTR [ecx-0x62],dh
 1021486:	scas   eax,DWORD PTR es:[edi]
 1021487:	jmp    esp
 1021489:	cli    
 102148a:	std    
 102148b:	jmp    ebx
 102148d:	cli    
 102148e:	std    
 102148f:	jmp    ecx
 1021491:	stc    
 1021492:	cld    
 1021493:	(bad)  
 1021494:	fdivp  st(0),st
 1021496:	cld    
 1021497:	(bad)  
 1021498:	(bad)  
 102149a:	sti    
 102149b:	call   esi
 102149d:	idiv   dl
 102149f:	call   edi
 10214a1:	aam    0xd0
 10214a3:	(bad)  
 10214a4:	(bad)  
 10214a5:	(bad)  
 10214a6:	(bad)  
 10214a7:	(bad)  
 10214a8:	(bad)  
 10214a9:	(bad)  
 10214aa:	(bad)  
 10214ab:	(bad)  
 10214ac:	(bad)  
 10214ad:	(bad)  
 10214ae:	(bad)  
 10214af:	(bad)  
 10214b0:	(bad)  
 10214b1:	(bad)  
 10214b2:	(bad)  
 10214b3:	(bad)  
 10214b4:	(bad)  
 10214b5:	(bad)  
 10214b6:	(bad)  
 10214b7:	(bad)  
 10214b8:	(bad)  
 10214b9:	(bad)  
 10214ba:	(bad)  
 10214bb:	(bad)  
 10214bc:	(bad)  
 10214bd:	(bad)  
 10214be:	(bad)  
 10214bf:	(bad)  
 10214c0:	(bad)  
 10214c1:	(bad)  
 10214c2:	(bad)  
 10214c3:	push   DWORD PTR [eax+0x74ff8a99]
 10214c9:	aam    0xe4
 10214cb:	jmp    FWORD PTR [edi-0x2f]
 10214ce:	loop   0x10214cf
 10214d0:	push   0xffffffcf
 10214d2:	loopne 0x10214d3
 10214d4:	gs int 0xdf
 10214d7:	jmp    DWORD PTR [eax-0x35]
 10214da:	(bad)  
 10214dc:	pop    ebx
 10214dd:	leave  
 10214de:	(bad)  
 10214e0:	pop    edx
 10214e1:	sbb    DWORD PTR [ebx-0x5d739d01],0xffffffff
 10214e8:	dec    edx
 10214e9:	push   0x7c
 10214eb:	inc    DWORD PTR [eax]
	...
 1021501:	add    BYTE PTR [eax],al
 1021503:	add    BYTE PTR [edx-0x60],dh
 1021506:	mov    al,0xff
 1021508:	loope  0x1021504
 102150a:	cld    
 102150b:	jmp    ecx
 102150d:	cli    
 102150e:	cld    
 102150f:	jmp    eax
 1021511:	cli    
 1021512:	cld    
 1021513:	(bad)  
 1021514:	fdivp  st(1),st
 1021516:	cld    
 1021517:	(bad)  
 1021518:	(bad)  
 102151a:	sti    
 102151b:	call   esi
 102151d:	idiv   edx
 102151f:	inc    ebp
 1021521:	sar    BYTE PTR [ebx-0x302c2901],0xff
 1021528:	aam    0xce
 102152a:	retf   0xd2ff
 102152d:	into   
 102152e:	leave  
 102152f:	call   edx
 1021531:	int    0xc7
 1021533:	call   eax
 1021535:	retf   0xffc6
 1021538:	iret   
 1021539:	retf   
 102153a:	(bad)  
 102153d:	leave  
 102153e:	vaddsubps ymm1,ymm0,ymm4
 1021542:	enter  0xc7ff,0xc0
 1021546:	mov    edx,0xe6d77aff
 102154b:	push   DWORD PTR [esi-0x2b]
 102154e:	in     al,0xff
 1021550:	jno    0x1021526
 1021552:	jecxz  0x1021553
 1021554:	ins    DWORD PTR es:[edi],dx
 1021555:	shl    eax,1
 1021557:	jmp    DWORD PTR [edi-0x33]
 102155a:	(bad)  
 102155c:	(bad)  
 102155d:	retf   
 102155e:	(bad)  
 1021560:	pop    esp
 1021561:	test   DWORD PTR [ebp-0x5b719b01],ebx
 1021567:	dec    DWORD PTR [ebp+ebp*2+0x7e]
 102156b:	inc    DWORD PTR [eax]
	...
 1021581:	add    BYTE PTR [eax],al
 1021583:	add    BYTE PTR [edi-0x4f],bh
 1021586:	(bad)  
 1021587:	dec    ebx
 1021589:	aad    0xd9
 102158b:	dec    esp
 102158d:	aam    0xd9
 102158f:	dec    DWORD PTR [edx-0x75004c5c]
 1021595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1021596:	mov    bl,0xff
 1021598:	retf   0xd8d3
 102159b:	dec    edx
 102159d:	aam    0xd8
 102159f:	inc    DWORD PTR [edi-0x78004d5c]
 10215a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10215a6:	mov    dl,0xff
 10215a8:	enter  0xd7d2,0xff
 10215ac:	enter  0xd7d2,0xff
 10215b0:	xchg   BYTE PTR [ecx+esi*4-0x4d5b7a01],ah
 10215b7:	inc    ebp
 10215b9:	rcl    ch,1
 10215bb:	inc    esi
 10215bd:	rcl    ch,1
 10215bf:	(bad)  
 10215c0:	jg     0x102155d
 10215c2:	stos   DWORD PTR es:[edi],eax
 10215c3:	(bad)  
 10215c4:	jg     0x1021562
 10215c6:	lods   al,BYTE PTR ds:[esi]
 10215c7:	inc    ebp
 10215c9:	iret   
 10215ca:	aad    0xff
 10215cc:	(bad)  
 10215cd:	rcl    ch,1
 10215cf:	inc    DWORD PTR [ecx-0x7d005161]
 10215d5:	mov    al,ds:0xd0c6ffaf
 10215da:	(bad)  
 10215db:	inc    esi
 10215dd:	rcl    esi,1
 10215df:	call   FWORD PTR [esp+eax*4-0x64]
 10215e3:	jmp    DWORD PTR [esi-0x70]
 10215e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10215e7:	dec    DWORD PTR [esi+ebp*2+0x7f]
 10215eb:	inc    DWORD PTR [eax]
	...
 1021601:	add    BYTE PTR [eax],al
 1021603:	add    BYTE PTR [edi-0x4e],bh
 1021606:	(bad)  
 1021607:	jmp    FWORD PTR [eax+0x78]
 102160a:	test   bh,bh
 102160c:	push   0xb1ff8478
 1021611:	mov    esp,0xbcb1ffc2
 1021616:	ret    0x64ff
 1021619:	jne    0x102159c
 102161b:	jmp    DWORD PTR [ebx+0x74]
 102161e:	cmp    bh,0xaf
 1021621:	mov    ebx,0xbbaeffc1
 1021626:	sar    bh,0x5f
 1021629:	jo     0x10216a8
 102162b:	call   FWORD PTR [ebp+0x6f]
 102162e:	jl     0x102162f
 1021630:	stos   DWORD PTR es:[edi],eax
 1021631:	mov    bh,0xbe
 1021633:	jmp    FWORD PTR [ebx+0x5cffbeb7]
 1021639:	outs   dx,BYTE PTR ds:[esi]
 102163a:	jnp    0x102163b
 102163c:	pop    esp
 102163d:	outs   dx,BYTE PTR ds:[esi]
 102163e:	jnp    0x102163f
 1021640:	lods   al,BYTE PTR ds:[esi]
 1021641:	mov    eax,0xb8acffbe
 1021646:	mov    edi,0x7a6d5bff
 102164b:	call   FWORD PTR [ebx+0x6d]
 102164e:	jp     0x102164f
 1021650:	stos   DWORD PTR es:[edi],eax
 1021651:	mov    eax,0xb8abffbe
 1021656:	mov    esi,0x7a6d5bff
 102165b:	call   FWORD PTR [ebx+0x6d]
 102165e:	jp     0x102165f
 1021660:	pop    esp
 1021661:	test   BYTE PTR [edi+edi*8-0x566c99],bl
 1021668:	dec    edi
 1021669:	jo     0x10215eb
 102166b:	inc    DWORD PTR [eax]
	...
 1021681:	add    BYTE PTR [eax],al
 1021683:	add    BYTE PTR [edi-0x4e],bh
 1021686:	(bad)  
 1021687:	call   edi
 1021689:	loope  0x1021672
 102168b:	call   edi
 102168d:	loope  0x1021676
 102168f:	dec    DWORD PTR [esi-0x72004454]
 1021695:	stos   DWORD PTR es:[edi],eax
 1021696:	mov    esp,0xe7e2d7ff
 102169b:	(bad)  
 102169c:	fsub   st,st(3)
 102169e:	out    0xff,eax
 10216a0:	mov    gs,WORD PTR [ebp-0x51710044]
 10216a6:	mov    ebp,0xe7e1d6ff
 10216ab:	call   esi
 10216ad:	loop   0x1021696
 10216af:	dec    DWORD PTR [ebp-0x72004151]
 10216b5:	scas   eax,DWORD PTR es:[edi]
 10216b6:	mov    edi,0xe5dfd4ff
 10216bb:	call   ebp
 10216bd:	(bad)  
 10216bf:	inc    DWORD PTR [edi-0x77004759]
 10216c5:	test   al,0xb9
 10216c7:	call   ebp
 10216c9:	loopne 0x10216b1
 10216cb:	call   esi
 10216cd:	loope  0x10216b5
 10216cf:	dec    DWORD PTR [edx-0x74004455]
 10216d5:	lods   al,BYTE PTR ds:[esi]
 10216d6:	mov    esp,0xe7e1d6ff
 10216db:	inc    esi
 10216dd:	rcl    esi,1
 10216df:	jmp    FWORD PTR [eax+ebx*4-0x53]
 10216e3:	jmp    FWORD PTR [eax-0x6a]
 10216e6:	stos   DWORD PTR es:[edi],eax
 10216e7:	dec    DWORD PTR [esi+0x72]
 10216ea:	cmp    bh,0x0
	...
 1021701:	add    BYTE PTR [eax],al
 1021703:	add    BYTE PTR [edi-0x4e],bh
 1021706:	(bad)  
 1021707:	jmp    FWORD PTR [esi-0x52003f47]
 102170d:	mov    ecx,0x7260ffc0
 1021712:	jle    0x1021713
 1021714:	pusha  
 1021715:	jno    0x1021795
 1021717:	jmp    FWORD PTR [ebp-0x52004047]
 102171d:	mov    ecx,0x6f5dffc0
 1021722:	jl     0x1021723
 1021724:	pop    esp
 1021725:	outs   dx,BYTE PTR ds:[esi]
 1021726:	jnp    0x1021727
 1021728:	lods   al,BYTE PTR ds:[esi]
 1021729:	mov    ecx,0xb9acffbf
 102172e:	mov    edi,0x7a6d5bff
 1021733:	call   FWORD PTR [esi+ebp*2+0x7b]
 1021737:	jmp    FWORD PTR [ebx-0x55004149]
 102173d:	mov    dh,0xbd
 102173f:	call   FWORD PTR [ebx+0x6d]
 1021742:	jp     0x1021743
 1021744:	pop    ebx
 1021745:	ins    DWORD PTR es:[edi],dx
 1021746:	jp     0x1021747
 1021748:	stos   DWORD PTR es:[edi],eax
 1021749:	mov    bh,0xbd
 102174b:	jmp    FWORD PTR [ebx+0x5bffbeb7]
 1021751:	ins    DWORD PTR es:[edi],dx
 1021752:	jp     0x1021753
 1021754:	pop    edx
 1021755:	ins    BYTE PTR es:[edi],dx
 1021756:	jns    0x1021757
 1021758:	stos   DWORD PTR es:[edi],eax
 1021759:	mov    eax,0xb8abffbe
 102175e:	mov    esi,0xbbaa8aff
 1021763:	jmp    FWORD PTR [ebx-0x68]
 1021766:	lods   eax,DWORD PTR ds:[esi]
 1021767:	dec    DWORD PTR [esi+0x72]
 102176a:	cmp    bh,0x0
	...
 1021785:	add    BYTE PTR [eax],al
 1021787:	add    BYTE PTR [edx-0x7e003b4e],al
 102178d:	mov    cl,0xc4
 102178f:	(bad)  
 1021790:	fsub   st,st(3)
 1021792:	jmp    0xe9e5f196
 1021797:	dec    DWORD PTR [ebx-0x74004456]
 102179d:	stos   DWORD PTR es:[edi],eax
 102179e:	mov    esp,0xe9e3d8ff
 10217a3:	(bad)  
 10217a4:	ftst   
 10217a6:	jmp    0xbfb0a5aa
 10217ab:	dec    DWORD PTR [esi-0x26004051]
 10217b1:	in     al,0xea
 10217b3:	(bad)  
 10217b4:	fxam   
 10217b6:	jmp    0x8fff:0xc0b18fff
 10217bd:	mov    cl,0xc1
 10217bf:	call   edi
 10217c1:	loop   0x10217ab
 10217c3:	(bad)  
 10217c4:	fsub   st,st(2)
 10217c6:	call   0xbbaba1ca
 10217cb:	dec    DWORD PTR [edx-0x27004456]
 10217d1:	jecxz  0x10217bc
 10217d3:	(bad)  
 10217d4:	ftst   
 10217d6:	jmp    0xbeafa4da
 10217db:	dec    DWORD PTR [ebp-0x26004152]
 10217e1:	in     al,0xea
 10217e3:	jmp    FWORD PTR [ebx-0x68]
 10217e6:	lods   eax,DWORD PTR ds:[esi]
 10217e7:	dec    DWORD PTR [esi+0x72]
 10217ea:	cmp    bh,0x0
	...
 1021809:	add    BYTE PTR [eax],al
 102180b:	add    BYTE PTR [ebp-0x51],bh
 102180e:	sar    edi,0x7b
 1021811:	lods   al,BYTE PTR ds:[esi]
 1021812:	mov    edi,0xbca979ff
 1021817:	push   DWORD PTR [esi-0x5b]
 102181a:	mov    ecx,0xb5a173ff
 102181f:	jmp    FWORD PTR [edi-0x62]
 1021822:	mov    bl,0xff
 1021824:	ins    BYTE PTR es:[edi],dx
 1021825:	call   0xffaa:0x9568ffaf
 102182c:	fs xchg ecx,eax
 102182e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102182f:	jmp    DWORD PTR [ecx-0x75]
 1021832:	mov    eax,ds:0x9d865cff
 1021837:	call   FWORD PTR [ecx-0x7e]
 102183a:	call   0x51ff:0x957d55ff
 1021841:	js     0x10217d4
 1021843:	dec    DWORD PTR [ebp+0x74]
 1021846:	(bad)  
 1021847:	dec    DWORD PTR [edx+0x6f]
 102184a:	mov    edi,edi
 102184c:	inc    edi
 102184d:	imul   eax,DWORD PTR [esi-0x7d98bc01],0xffffffff
 1021854:	inc    ecx
 1021855:	arpl   WORD PTR [edi-0x1],di
 1021858:	ds pop edi
 102185a:	jl     0x102185b
 102185c:	cmp    al,0x5d
 102185e:	jns    0x102185f
 1021860:	cmp    bl,BYTE PTR [edx+0x77]
 1021863:	(bad)  
 1021864:	cmp    BYTE PTR [edi+0x75],dl
 1021867:	inc    DWORD PTR [eax]
	...
 1021875:	add    BYTE PTR [eax],al
 1021877:	add    al,dh
 1021879:	add    BYTE PTR [eax],al
 102187b:	pop    ds
 102187c:	lock add BYTE PTR [eax],al
 102187f:	jo     0x1111885
 1021885:	add    BYTE PTR [eax],al
 1021887:	pop    es
 1021888:	add    BYTE PTR [eax],al
 102188a:	add    BYTE PTR [edi],al
 102188c:	add    BYTE PTR [eax],al
 102188e:	add    BYTE PTR [edi],al
 1021890:	add    BYTE PTR [eax],al
 1021892:	add    BYTE PTR [edi],al
 1021894:	add    BYTE PTR [eax],al
 1021896:	add    BYTE PTR [edi],al
 1021898:	add    BYTE PTR [eax],0x0
 102189b:	pop    es
 102189c:	add    BYTE PTR [eax],0x0
 102189f:	pop    es
 10218a0:	rol    BYTE PTR [eax],0x0
 10218a3:	pop    es
 10218a4:	rol    BYTE PTR [eax],0x0
 10218a7:	pop    es
 10218a8:	loopne 0x10218aa
 10218aa:	add    BYTE PTR [edi],al
 10218ac:	loopne 0x10218ae
 10218ae:	add    BYTE PTR [edi],al
 10218b0:	loopne 0x10218b2
 10218b2:	add    BYTE PTR [edi],al
 10218b4:	loopne 0x10218b6
 10218b6:	add    BYTE PTR [edi],al
 10218b8:	loopne 0x10218ba
 10218ba:	add    BYTE PTR [edi],al
 10218bc:	loopne 0x10218be
 10218be:	add    BYTE PTR [edi],al
 10218c0:	loopne 0x10218c2
 10218c2:	add    BYTE PTR [edi],al
 10218c4:	loopne 0x10218c6
 10218c6:	add    BYTE PTR [edi],al
 10218c8:	loopne 0x10218ca
 10218ca:	add    BYTE PTR [edi],al
 10218cc:	loopne 0x10218ce
 10218ce:	add    BYTE PTR [edi],al
 10218d0:	loopne 0x10218d2
 10218d2:	add    BYTE PTR [edi],al
 10218d4:	loopne 0x10218d6
 10218d6:	add    BYTE PTR [edi],al
 10218d8:	loopne 0x10218da
 10218da:	add    BYTE PTR [edi],al
 10218dc:	loopne 0x10218de
 10218de:	add    BYTE PTR [edi],al
 10218e0:	loopne 0x10218e2
 10218e2:	add    BYTE PTR [edi],al
 10218e4:	loopne 0x10218e6
 10218e6:	add    BYTE PTR [edi],al
 10218e8:	loopne 0x10218ea
 10218ea:	add    BYTE PTR [edi],al
 10218ec:	loopne 0x10218ee
 10218ee:	add    BYTE PTR [edi],al
 10218f0:	lock add BYTE PTR [eax],al
 10218f3:	pop    es
 10218f4:	clc    
 10218f5:	add    BYTE PTR [eax],al
 10218f7:	movaps xmm0,XMMWORD PTR [eax]
 10218fa:	add    BYTE PTR [eax],al
 10218fc:	adc    BYTE PTR [eax],al
 10218fe:	add    BYTE PTR [eax],al
 1021900:	and    BYTE PTR [eax],al
 1021902:	add    BYTE PTR [eax],al
 1021904:	add    DWORD PTR [eax],eax
 1021906:	and    BYTE PTR [eax],al
	...
 102192c:	push   0xffffff83
 102192e:	(bad)  
 102192f:	call   FWORD PTR [esi+0x76]
 1021932:	cmp    bh,0x50
 1021935:	gs jae 0x1021937
 1021938:	inc    eax
 1021939:	push   ebp
 102193a:	push   DWORD PTR fs:[ecx]
 102193d:	inc    esp
 102193e:	push   esp
 102193f:	jmp    DWORD PTR [edx]
 1021941:	xor    eax,0x2819ff47
 1021946:	cmp    edi,edi
 1021948:	nop    DWORD PTR [edx]
 102194b:	dec    DWORD PTR [ecx]
 102194d:	pop    ss
 102194e:	sub    edi,edi
 1021950:	add    eax,0x3ff2312
 1021955:	push   cs
 1021956:	push   ds
 1021957:	inc    DWORD PTR [edx]
 1021959:	nop    edi
	...
 1021968:	and    eax,0x7bffa881
 102196d:	lods   eax,DWORD PTR ds:[esi]
 102196e:	sar    bh,0x7b
 1021971:	lods   eax,DWORD PTR ds:[esi]
 1021972:	sar    bh,0x76
 1021975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1021976:	mov    ecx,0xb29d6fff
 102197b:	jmp    FWORD PTR [eax-0x6c]
 102197e:	stos   BYTE PTR es:[edi],al
 102197f:	call   FWORD PTR [edi-0x75]
 1021982:	mov    eax,ds:0x988058ff
 1021987:	call   DWORD PTR [eax+0x76]
 102198a:	(bad)  
 102198b:	dec    DWORD PTR [eax+0x6c]
 102198e:	xchg   bh,bh
 1021990:	inc    ecx
 1021991:	fs jg  0x1021993
 1021994:	cmp    al,0x5c
 1021996:	jns    0x1021997
 1021998:	add    al,0x14
 102199a:	and    eax,0xff
	...
 10219ab:	add    BYTE PTR ds:0xa7ffa881,ah
 10219b1:	clc    
 10219b2:	(bad)  
 10219b3:	jmp    DWORD PTR [eax-0x6900030d]
 10219b9:	in     al,dx
 10219ba:	clc    
 10219bb:	dec    DWORD PTR [edx+0x7dfff3e3]
 10219c1:	(bad)  
 10219c3:	jmp    FWORD PTR [edi-0x30]
 10219c6:	call   0xe4c97cca
 10219cb:	call   DWORD PTR [esi-0x41]
 10219ce:	fdivp  st(7),st
 10219d0:	dec    ebp
 10219d1:	mov    eax,0x5d3cffdb
 10219d6:	jp     0x10219d7
 10219d8:	or     BYTE PTR [ebx],bl
 10219da:	sub    eax,0xff
 10219df:	add    BYTE PTR [eax],al
 10219e1:	add    BYTE PTR [eax],al
 10219e3:	add    BYTE PTR ds:0x25ffa984,ah
 10219e9:	sub    BYTE PTR [eax-0x577eda01],0xff
 10219f0:	and    eax,0x25ffa57f
 10219f5:	jg     0x102199b
 10219f7:	jmp    DWORD PTR ds:0x25ffa37d
 10219fd:	jnp    0x10219a1
 10219ff:	jmp    DWORD PTR ds:0x25ff9f7a
 1021a05:	jp     0x10219a5
 1021a07:	jmp    DWORD PTR ds:0x25ff9e79
 1021a0d:	js     0x10219ab
 1021a0f:	call   DWORD PTR [esi-0x42]
 1021a12:	fdivp  st(7),st
 1021a14:	cmp    eax,0xcff7a5e
 1021a19:	and    al,0x36
 1021a1b:	inc    DWORD PTR [eax]
	...
 1021a25:	add    BYTE PTR [eax],al
 1021a27:	add    BYTE PTR [eax-0x63],dl
 1021a2a:	mov    ebx,0xdeb94cff
 1021a2f:	dec    DWORD PTR [ecx+edi*4-0x22]
 1021a33:	dec    DWORD PTR [ecx+edi*4-0x22]
 1021a37:	(bad)  
 1021a38:	jp     0x10219c5
 1021a3a:	mov    edi,edi
 1021a3c:	mov    al,ds:0x98ff828e
 1021a41:	mov    al,BYTE PTR [ebx+0x7c8b99ff]
 1021a47:	inc    DWORD PTR [edx+0x3eff797f]
 1021a4d:	lods   al,BYTE PTR ds:[esi]
 1021a4e:	sar    bh,cl
 1021a50:	add    BYTE PTR [edx-0x74],ah
 1021a53:	(bad)  
 1021a54:	cmp    eax,0xfff7b5e
 1021a59:	sub    al,0x3f
 1021a5b:	inc    DWORD PTR [eax]
	...
 1021a69:	add    BYTE PTR [eax],al
 1021a6b:	add    BYTE PTR [ecx],cl
 1021a6d:	jne    0x1021a0c
 1021a6f:	call   FWORD PTR [ebx+ecx*8-0x12]
 1021a73:	dec    DWORD PTR [edx-0x54000014]
 1021a79:	test   al,0xa0
 1021a7b:	(bad)  
 1021a7c:	(bad)  
 1021a7d:	push   ecx
 1021a7f:	(bad)  
 1021a80:	(bad)  
 1021a81:	call   0xf81a67
 1021a86:	mov    eax,0x797f82ff
 1021a8b:	call   FWORD PTR [ebx+ecx*8-0x12]
 1021a8f:	inc    DWORD PTR [edx-0x50]
 1021a92:	(bad)  
 1021a93:	(bad)  
 1021a94:	cmp    al,BYTE PTR [esi+0x3514ffa6]
 1021a9a:	dec    edx
 1021a9b:	inc    DWORD PTR [eax]
	...
 1021aa9:	add    BYTE PTR [eax],al
 1021aab:	add    BYTE PTR [ecx],cl
 1021aad:	jne    0x1021a4c
 1021aaf:	call   FWORD PTR [ebp-0x6b00000b]
 1021ab5:	lock (bad) 
 1021ab7:	push   DWORD PTR [eax-0x4f005b56]
 1021abd:	(bad)  
 1021abf:	dec    DWORD PTR [edx]
 1021ac1:	cwde   
 1021ac2:	scas   al,BYTE PTR es:[edi]
 1021ac3:	call   FWORD PTR [ebp-0x7d005866]
 1021ac9:	jg     0x1021b44
 1021acb:	jmp    FWORD PTR [ebx-0x24]
 1021ace:	sti    
 1021acf:	call   DWORD PTR [ebp-0x3c]
 1021ad2:	call   0xa98a57d6
 1021ad7:	call   FWORD PTR [ecx]
 1021ad9:	ds push esp
 1021adb:	inc    DWORD PTR [eax]
	...
 1021ae9:	add    BYTE PTR [eax],al
 1021aeb:	add    BYTE PTR [ebx],dl
 1021aed:	jns    0x1021a8e
 1021aef:	jmp    DWORD PTR [edi-0x62000008]
 1021af5:	cmc    
 1021af6:	(bad)  
 1021af7:	jmp    DWORD PTR [edi+0x79ffa7a9]
 1021afd:	repnz cmc 
 1021aff:	inc    DWORD PTR [eax]
 1021b01:	in     al,dx
 1021b02:	(bad)  
 1021b03:	inc    DWORD PTR [eax]
 1021b05:	xchg   ebp,eax
 1021b06:	mov    esp,0x797f82ff
 1021b0b:	push   DWORD PTR [ebp-0x1f]
 1021b0e:	(bad)  
 1021b0f:	jmp    FWORD PTR [ebx-0x25]
 1021b12:	cli    
 1021b13:	(bad)  
 1021b14:	mov    ch,BYTE PTR ds:[eax+0x60481dff]
 1021b1b:	inc    DWORD PTR [eax]
	...
 1021b29:	add    BYTE PTR [eax],al
 1021b2b:	add    BYTE PTR [ecx],ah
 1021b2d:	jg     0x1021ace
 1021b2f:	push   DWORD PTR [edx-0x57000003]
 1021b35:	stc    
 1021b36:	(bad)  
 1021b37:	jmp    DWORD PTR [edi-0x50005857]
 1021b3d:	(bad)  
 1021b3e:	loopne 0x1021b3f
 1021b40:	mov    bh,0xf3
 1021b42:	cld    
 1021b43:	dec    DWORD PTR [eax-0x41]
 1021b46:	sar    bh,cl
 1021b48:	cmp    BYTE PTR [edi+0x79],0xff
 1021b4c:	jp     0x1021b33
 1021b4e:	(bad)  
 1021b4f:	push   DWORD PTR [edx+eiz*8-0x1]
 1021b53:	inc    DWORD PTR [ecx-0x73]
 1021b56:	stos   DWORD PTR es:[edi],eax
 1021b57:	jmp    DWORD PTR [ecx]
 1021b59:	push   edx
 1021b5a:	push   0xffffffff
	...
 1021b6c:	xor    BYTE PTR [ebp-0x44005e],al
 1021b72:	(bad)  
 1021b73:	push   DWORD PTR [ebx-0x58000003]
 1021b79:	test   eax,0xf4feffa7
 1021b7e:	repz dec edx
 1021b81:	(bad)  
 1021b82:	(bad)  
 1021b84:	push   esp
 1021b86:	out    dx,al
 1021b87:	inc    DWORD PTR [edx-0x7e008681]
 1021b8d:	call   0xe67e1b91
 1021b92:	(bad)  
 1021b93:	inc    DWORD PTR [ebp-0x71]
 1021b96:	lods   al,BYTE PTR ds:[esi]
 1021b97:	jmp    DWORD PTR [esi]
 1021b99:	pop    ebx
 1021b9a:	jne    0x1021b9b
	...
 1021bac:	inc    eax
 1021bad:	mov    WORD PTR [edx-0x1401],fs
 1021bb3:	(bad)  
 1021bb4:	jmp    0xa9021bb8
 1021bb9:	test   eax,0xf4f8ffa7
 1021bbe:	lock push esi
 1021bc1:	jmp    0x1021ba8
 1021bc3:	(bad)  
 1021bc4:	call   0x8401f4a6
 1021bc9:	jg     0x1021c44
 1021bcb:	dec    DWORD PTR [edx-0x7f000015]
 1021bd1:	call   0x934b1bd5
 1021bd6:	scas   al,BYTE PTR es:[edi]
 1021bd7:	jmp    FWORD PTR [edx]
 1021bd9:	gs cmp bh,0x0
	...
 1021be9:	add    BYTE PTR [eax],al
 1021beb:	add    BYTE PTR [edi-0x6e],cl
 1021bee:	mov    ds:0xffffe7ff,eax
 1021bf3:	jmp    edi
 1021bf5:	(bad)  
 1021bf6:	(bad)  
 1021bf7:	jmp    DWORD PTR [edi-0x58005857]
 1021bfd:	test   eax,0xa9a7ffa7
 1021c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1021c03:	jmp    DWORD PTR [edi-0x58005857]
 1021c09:	test   eax,0xf092ffa7
 1021c0e:	(bad)  
 1021c0f:	dec    DWORD PTR [ecx+0x4cffffec]
 1021c15:	xchg   ebp,eax
 1021c16:	scas   eax,DWORD PTR es:[edi]
 1021c17:	jmp    FWORD PTR [esi]
 1021c19:	ins    DWORD PTR es:[edi],dx
 1021c1a:	mov    edi,edi
	...
 1021c2c:	pop    esi
 1021c2d:	cdq    
 1021c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1021c2f:	inc    DWORD PTR [ecx+0x63]
 1021c32:	jno    0x1021c33
 1021c34:	fdivr  st(7),st
 1021c36:	cld    
 1021c37:	(bad)  
 1021c38:	cmp    al,0x61
 1021c3a:	jo     0x1021c3b
 1021c3c:	jmp    0x38021a3a
 1021c41:	pop    esi
 1021c42:	jo     0x1021c43
 1021c44:	scas   eax,DWORD PTR es:[edi]
 1021c45:	call   0x5c321c43
 1021c4a:	jo     0x1021c4b
 1021c4c:	xchg   ebp,eax
 1021c4d:	fcomip st,st(7)
 1021c4f:	jmp    FWORD PTR [eax]
 1021c51:	pop    eax
 1021c52:	outs   dx,DWORD PTR ds:[esi]
 1021c53:	dec    DWORD PTR [edi-0x69]
 1021c56:	mov    cl,0xff
 1021c58:	xor    dh,BYTE PTR [ebp-0x6e]
 1021c5b:	inc    DWORD PTR [eax]
	...
 1021c69:	add    BYTE PTR [eax],al
 1021c6b:	add    BYTE PTR [ecx-0x63],ch
 1021c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1021c6f:	call   FWORD PTR [ebp+ebp*8+0x6342fff9]
 1021c76:	jno    0x1021c77
 1021c78:	mov    ch,ah
 1021c7a:	stc    
 1021c7b:	(bad)  
 1021c7c:	cmp    eax,0x6eff7061
 1021c81:	fdivr  st(4),st
 1021c83:	push   DWORD PTR [esi]
 1021c85:	pop    edi
 1021c86:	jo     0x1021c87
 1021c88:	push   edx
 1021c89:	shl    esp,1
 1021c8b:	jmp    FWORD PTR [edi]
 1021c8d:	pop    ebx
 1021c8e:	jo     0x1021c8f
 1021c90:	aaa    
 1021c91:	ret    
 1021c92:	bnd call DWORD PTR [ecx-0x66]
 1021c96:	mov    bl,0xff
 1021c98:	xor    eax,0xff9a7c
	...
 1021ca9:	add    BYTE PTR [eax],al
 1021cab:	add    BYTE PTR [edx-0x60],dh
 1021cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1021caf:	inc    DWORD PTR [ecx+0x63]
 1021cb2:	jno    0x1021cb3
 1021cb4:	xchg   ebp,esp
 1021cb6:	stc    
 1021cb7:	(bad)  
 1021cb8:	cmp    al,0x61
 1021cba:	jo     0x1021cbb
 1021cbc:	outs   dx,BYTE PTR ds:[esi]
 1021cbd:	(bad)  
 1021cbf:	push   DWORD PTR [esi]
 1021cc1:	pop    esi
 1021cc2:	jo     0x1021cc3
 1021cc4:	push   eax
 1021cc5:	iret   
 1021cc6:	hlt    
 1021cc7:	jmp    FWORD PTR [edi]
 1021cc9:	pop    ebx
 1021cca:	jo     0x1021ccb
 1021ccc:	xor    al,0xc3
 1021cce:	repz jmp FWORD PTR [eax]
 1021cd1:	pop    eax
 1021cd2:	outs   dx,DWORD PTR ds:[esi]
 1021cd3:	call   DWORD PTR [ebx-0x64]
 1021cd6:	mov    ah,0xff
 1021cd8:	aaa    
 1021cd9:	and    BYTE PTR [eax+0xff],0x0
	...
 1021cec:	jb     0x1021c8e
 1021cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1021cef:	push   DWORD PTR [edx-0x60]
 1021cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1021cf3:	jmp    FWORD PTR [esi-0x61]
 1021cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1021cf7:	jmp    DWORD PTR [edi-0x64]
 1021cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1021cfb:	call   FWORD PTR [esi-0x67]
 1021cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1021cff:	call   DWORD PTR [ebx-0x6c]
 1021d02:	mov    ds:0xa38f49ff,eax
 1021d07:	(bad)  
 1021d08:	cmp    al,0x8b
 1021d0a:	mov    ds:0xa18630ff,al
 1021d0f:	jmp    DWORD PTR ds:0x55ffa081
 1021d15:	popf   
 1021d16:	mov    ch,0xff
 1021d18:	cmp    al,BYTE PTR [esi+0x91a6]
 1021d1e:	add    BYTE PTR [eax],al
 1021d20:	loopne 0x1021d23
 1021d22:	add    BYTE PTR [eax],al
 1021d24:	rol    BYTE PTR [ecx],0xaa
 1021d27:	add    esp,eax
 1021d29:	add    DWORD PTR [eax-0x4dfe7f01],esi
 1021d2f:	inc    eax
 1021d31:	add    ecx,edi
 1021d33:	jmp    eax
 1021d35:	add    eax,edi
 1021d37:	jmp    eax
 1021d39:	add    edi,esi
 1021d3b:	jmp    eax
 1021d3d:	add    esi,esi
 1021d3f:	jmp    eax
 1021d41:	add    ebp,esi
 1021d43:	jmp    eax
 1021d45:	add    esp,esi
 1021d47:	jmp    eax
 1021d49:	add    DWORD PTR [eax-0x15fe1f01],ebp
 1021d4f:	jmp    eax
 1021d51:	add    DWORD PTR [edx-0x40fe1f01],edi
 1021d57:	jmp    eax
 1021d59:	add    DWORD PTR [edi-0x40fe1f01],edi
 1021d5f:	jmp    FWORD PTR [eax]
 1021d61:	add    BYTE PTR [eax],al
 1021d63:	add    BYTE PTR [eax],ah
 1021d65:	add    BYTE PTR [eax],al
 1021d67:	add    BYTE PTR [eax+0x0],al
 1021d6a:	add    BYTE PTR [eax],al
 1021d6c:	add    DWORD PTR [eax],eax
 1021d6e:	or     BYTE PTR [eax],al
	...
 1021d8c:	arpl   WORD PTR [ecx+0x35],cx
 1021d8f:	add    BYTE PTR [edx+ecx*2+0x36],ah
 1021d93:	add    BYTE PTR [eax],bh
 1021d95:	inc    edi
 1021d96:	push   edx
 1021d97:	add    BYTE PTR [ebx+ecx*2],bh
 1021d9a:	push   esi
 1021d9b:	add    BYTE PTR [ecx+0x51],al
 1021d9e:	pop    ebx
 1021d9f:	add    BYTE PTR [edi+0x59],al
 1021da2:	bound  eax,QWORD PTR [eax]
 1021da4:	dec    edi
 1021da5:	pusha  
 1021da6:	imul   eax,DWORD PTR [eax],0x706855
 1021dac:	pop    ebx
 1021dad:	outs   dx,BYTE PTR ds:[esi]
 1021dae:	jbe    0x1021db0
 1021db0:	pop    edi
 1021db1:	jae    0x1021e2e
 1021db3:	add    cl,bl
 1021db5:	push   0x33
 1021db7:	add    dl,ah
 1021db9:	jae    0x1021df5
 1021dbb:	add    al,ch
 1021dbd:	jl     0x1021e04
 1021dbf:	add    dl,ch
 1021dc1:	xchg   DWORD PTR [eax+eax*1-0x16],edx
 1021dc5:	xchg   edx,eax
 1021dc6:	fs add dl,ch
 1021dc9:	fwait
 1021dca:	je     0x1021dcc
 1021dcc:	jmp    0x9377:0x600749c
 1021dd3:	add    BYTE PTR [esi],al
 1021dd5:	ja     0x1021d6b
 1021dd7:	add    BYTE PTR [esi],al
 1021dd9:	jp     0x1021d72
 1021ddb:	add    BYTE PTR ds:0x1e009a7d,al
 1021de1:	je     0x1021d7c
 1021de3:	add    BYTE PTR [eax],al
 1021de5:	add    BYTE PTR [eax],al
 1021de7:	add    BYTE PTR ds:0x4009d80,al
 1021ded:	test   DWORD PTR [ecx-0x5b78fb00],esp
 1021df3:	add    BYTE PTR [ecx+ecx*4],al
 1021df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1021df7:	add    BYTE PTR [edx+ecx*4],al
 1021dfa:	test   al,0x0
 1021dfc:	add    al,0x8c
 1021dfe:	test   al,0x0
 1021e00:	add    al,0x8f
 1021e02:	lods   al,BYTE PTR ds:[esi]
 1021e03:	add    BYTE PTR [ecx+edx*4],al
 1021e06:	lods   eax,DWORD PTR ds:[esi]
 1021e07:	add    BYTE PTR [ebx],al
 1021e09:	xchg   esi,eax
 1021e0a:	mov    cl,0x0
 1021e0c:	add    al,0x95
 1021e0e:	mov    cl,0x0
 1021e10:	add    ebx,DWORD PTR [ecx-0x66fbff4b]
 1021e16:	mov    ah,0x0
 1021e18:	add    ebx,DWORD PTR [edi+esi*4-0x4662fe00]
 1021e1f:	add    BYTE PTR [ebx],al
 1021e21:	mov    al,ds:0xa10200bb
 1021e26:	mov    ebp,0xbfa40200
 1021e2b:	add    BYTE PTR [ebx+eax*4-0x74],dh
 1021e2f:	add    BYTE PTR [esi-0x79],dh
 1021e32:	nop
 1021e33:	add    BYTE PTR [ebp-0x76],dh
 1021e36:	xchg   edx,eax
 1021e37:	add    BYTE PTR [eax-0x77],bh
 1021e3a:	xchg   esp,eax
 1021e3b:	add    BYTE PTR [ecx-0x74],bh
 1021e3e:	xchg   esi,eax
 1021e3f:	add    BYTE PTR [edx-0x70],bh
 1021e42:	cwde   
 1021e43:	add    BYTE PTR [eax-0x45],ah
 1021e46:	mov    ebx,0xc0a50200
 1021e4b:	add    BYTE PTR [edx],al
 1021e4d:	test   al,0xc2
 1021e4f:	add    BYTE PTR [edx],al
 1021e51:	stos   BYTE PTR es:[edi],al
 1021e52:	les    eax,FWORD PTR [eax]
 1021e54:	add    ch,BYTE PTR [ebp-0x52feff39]
 1021e5a:	enter  0x100,0xb0
 1021e5e:	retf   
 1021e5f:	add    BYTE PTR [ecx],al
 1021e61:	mov    dl,0xcd
 1021e63:	add    BYTE PTR [ecx],al
 1021e65:	mov    ah,0xce
 1021e67:	add    BYTE PTR [ecx],al
 1021e69:	mov    ch,0xd0
 1021e6b:	add    BYTE PTR [ecx],al
 1021e6d:	mov    eax,0xb90000d2
 1021e72:	aam    0x0
 1021e74:	add    BYTE PTR [esi+edx*8-0x27420000],bh
 1021e7b:	add    BYTE PTR [eax],al
 1021e7d:	rcr    dl,0x0
 1021e80:	add    dl,al
 1021e82:	fadd   QWORD PTR [eax]
 1021e84:	add    ah,al
 1021e86:	fiadd  WORD PTR [eax]
 1021e88:	add    dh,al
 1021e8a:	loopne 0x1021e8c
 1021e8c:	daa    
 1021e8d:	(bad)  
 1021e8e:	jmp    0xebdb4d93
 1021e93:	add    BYTE PTR [ebx],dh
 1021e95:	fucomi st,st(3)
 1021e97:	add    BYTE PTR [edi],dh
 1021e99:	fsub   st(4),st
 1021e9b:	add    BYTE PTR [ebx],bh
 1021e9d:	fsubp  st(5),st
 1021e9f:	add    BYTE PTR [edi],bh
 1021ea1:	fucomip st,st(6)
 1021ea3:	add    BYTE PTR [edi],bh
 1021ea5:	loopne 0x1021e95
 1021ea7:	add    BYTE PTR [eax-0x3b],bl
 1021eaa:	into   
 1021eab:	add    BYTE PTR [ebx-0x1f],al
 1021eae:	out    dx,eax
 1021eaf:	add    BYTE PTR [edi-0x1d],al
 1021eb2:	out    dx,eax
 1021eb3:	add    BYTE PTR [edi-0x1d],al
 1021eb6:	lock add BYTE PTR [ebx-0x1c],cl
 1021eba:	icebp  
 1021ebb:	add    BYTE PTR [esi-0x1b],cl
 1021ebe:	icebp  
 1021ebf:	add    BYTE PTR [eax+ebp*8-0xe],cl
 1021ec3:	add    BYTE PTR [eax-0x1a],dl
 1021ec6:	repnz add BYTE PTR [ebx-0x18],dl
 1021eca:	repnz add BYTE PTR [edi-0x16],dl
 1021ece:	repz add BYTE PTR [eax-0x16],bl
 1021ed2:	repz add BYTE PTR [ebx-0x15],bl
 1021ed6:	hlt    
 1021ed7:	add    BYTE PTR [ebx-0x13],bl
 1021eda:	cmc    
 1021edb:	add    BYTE PTR [esp+ebp*8-0xc],bl
 1021edf:	add    BYTE PTR [ecx-0x12],ah
 1021ee2:	test   BYTE PTR [eax],0x64
 1021ee5:	out    dx,eax
 1021ee6:	test   BYTE PTR [eax],0x68
 1021ee9:	out    dx,eax
 1021eea:	test   DWORD PTR [eax],0xf7f066
 1021ef0:	push   0x6a00f7f0
 1021ef5:	icebp  
 1021ef6:	clc    
 1021ef7:	add    BYTE PTR [esi-0xd],ch
 1021efa:	clc    
 1021efb:	add    BYTE PTR [edx-0x10],dh
 1021efe:	test   DWORD PTR [eax],0xf7f175
 1021f04:	jge    0x1021ef7
 1021f06:	test   DWORD PTR [eax],0xf8f072
 1021f0c:	jne    0x1021eff
 1021f0e:	clc    
 1021f0f:	add    BYTE PTR [edx-0xc],dh
 1021f12:	stc    
 1021f13:	add    BYTE PTR [ebp-0xb],dh
 1021f16:	cli    
 1021f17:	add    BYTE PTR [ecx+esi*8-0x8],bh
 1021f1b:	add    BYTE PTR [eax-0x9],bh
 1021f1e:	sti    
 1021f1f:	add    BYTE PTR [edi-0x8],dh
 1021f22:	cld    
 1021f23:	add    BYTE PTR [ebx-0x8],bh
 1021f26:	cld    
 1021f27:	add    BYTE PTR [ebp-0x7],bh
 1021f2a:	cld    
 1021f2b:	add    BYTE PTR [edi-0x46ff6c5e],dh
 1021f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1021f32:	xchg   ebp,eax
 1021f33:	add    BYTE PTR [esi-0x33ff6557],bh
 1021f39:	mov    ds:0xabc0008e,al
 1021f3e:	pushf  
 1021f3f:	add    bl,al
 1021f41:	scas   al,BYTE PTR es:[edi]
 1021f42:	sahf   
 1021f43:	add    ah,dl
 1021f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1021f46:	nop
 1021f47:	add    dl,ch
 1021f49:	mov    dh,0x99
 1021f4b:	add    bh,al
 1021f4d:	mov    dl,0xa3
 1021f4f:	add    al,cl
 1021f51:	mov    dl,0xa3
 1021f53:	add    cl,cl
 1021f55:	mov    bl,0xa4
 1021f57:	add    ah,cl
 1021f59:	mov    dh,0xa7
 1021f5b:	add    bh,cl
 1021f5d:	mov    ecx,0xbbd100a9
 1021f62:	stos   DWORD PTR es:[edi],eax
 1021f63:	add    ah,dl
 1021f65:	mov    esi,0xc2d800ae
 1021f6a:	mov    dl,0x0
 1021f6c:	aam    0xc5
 1021f6e:	mov    ecx,0xbecada00
 1021f73:	add    cl,ah
 1021f75:	retf   0xbd
 1021f78:	xchg   edx,esi
 1021f7a:	clc    
 1021f7b:	add    BYTE PTR [eax-0x77ff070e],cl
 1021f81:	hlt    
 1021f82:	clc    
 1021f83:	add    BYTE PTR [ecx-0x7bff0305],al
 1021f89:	sti    
 1021f8a:	std    
 1021f8b:	add    BYTE PTR [esp+edi*8-0x176ff02],al
 1021f92:	inc    BYTE PTR [eax]
 1021f94:	mov    edi,?
 1021f96:	inc    DWORD PTR [eax]
 1021f98:	xchg   ebx,eax
 1021f99:	hlt    
 1021f9a:	stc    
 1021f9b:	add    BYTE PTR [esp+esi*8-0xa5fff07],dl
 1021fa2:	stc    
 1021fa3:	add    BYTE PTR [ebp-0x45ff050a],ch
 1021fa9:	idiv   ebx
 1021fab:	add    BYTE PTR [ecx-0x46ff0408],bh
 1021fb1:	clc    
 1021fb2:	cld    
 1021fb3:	add    bh,bl
 1021fb5:	int3   
 1021fb6:	rol    DWORD PTR [eax],0xd8
 1021fb9:	aad    0xd3
 1021fbb:	add    ah,ah
 1021fbd:	iret   
 1021fbe:	les    eax,FWORD PTR [eax]
 1021fc0:	loopne 0x1021f93
 1021fc2:	mov    DWORD PTR [eax],0xc8d2e0
 1021fc8:	out    0xd3,al
 1021fca:	leave  
 1021fcb:	add    bh,ah
 1021fcd:	aad    0xcb
 1021fcf:	add    bl,ch
 1021fd1:	fcmovnbe st,st(3)
 1021fd3:	add    ah,ch
 1021fd5:	fst    st(5)
 1021fd7:	add    ch,ch
 1021fd9:	(bad)  
 1021fdb:	add    dl,ch
 1021fdd:	loopne 0x1021fb7
 1021fdf:	add    dh,ch
 1021fe1:	loope  0x1021fbd
 1021fe3:	add    bh,bl
 1021fe5:	loop   0x1021fcd
 1021fe7:	add    dh,al
 1021fe9:	stc    
 1021fea:	sti    
 1021feb:	add    dh,al
 1021fed:	stc    
 1021fee:	cld    
 1021fef:	add    dl,dl
 1021ff1:	cli    
 1021ff2:	cld    
 1021ff3:	add    dh,bl
 1021ff5:	sti    
 1021ff6:	std    
 1021ff7:	add    ch,bl
 1021ff9:	cld    
 1021ffa:	std    
 1021ffb:	add    cl,dh
 1021ffd:	out    0xe1,eax
 1021fff:	add    dl,dh
 1022001:	jmp    0xecf420e9
 1022006:	out    0x0,eax
 1022008:	hlt    
 1022009:	jmp    0x1021ff1
 102200b:	add    ch,dh
 102200d:	in     eax,dx
 102200e:	jmp    0xeff41713
 1022013:	add    cl,ah
 1022015:	std    
 1022016:	std    
 1022017:	add    al,ch
 1022019:	cld    
 102201a:	std    
 102201b:	add    al,bh
 102201d:	repz lock add cl,bh
 1022021:	cmc    
 1022022:	repnz add dl,bh
 1022025:	div    ebp
 1022027:	add    cl,dh
 1022029:	std    
 102202a:	inc    BYTE PTR [eax]
 102202c:	cld    
 102202d:	cli    
 102202e:	stc    
 102202f:	add    ch,bh
 1022031:	cld    
 1022032:	sti    
 1022033:	add    cl,bh
 1022035:	(bad)  
 1022036:	inc    BYTE PTR [eax]
 1022038:	(bad)  
 1022039:	(bad)  
 102203a:	inc    BYTE PTR [eax]
 102203c:	add    BYTE PTR [eax],al
 102203e:	add    BYTE PTR [eax],al
 1022040:	add    al,0x9a
 1022042:	mov    ch,0x0
 1022044:	add    al,0x99
 1022046:	mov    ah,0x0
 1022048:	add    ebx,DWORD PTR [eax-0x68fbff4b]
 102204e:	mov    bl,0x0
 1022050:	add    al,0x95
 1022052:	mov    al,0x0
 1022054:	add    al,0x93
 1022056:	scas   al,BYTE PTR es:[edi]
 1022057:	add    BYTE PTR [eax+edx*4],al
 102205a:	lods   eax,DWORD PTR ds:[esi]
 102205b:	add    BYTE PTR [edi+ecx*4],al
 102205e:	lods   al,BYTE PTR ds:[esi]
 102205f:	add    BYTE PTR [esi+ecx*4],al
 1022062:	stos   DWORD PTR es:[edi],eax
 1022063:	add    BYTE PTR [ecx+ecx*4],al
 1022066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1022067:	add    BYTE PTR ds:0x500a98d,al
 102206d:	mov    esp,DWORD PTR [edi-0x5a76fb00]
 1022073:	add    BYTE PTR ds:0xf900a286,al
 1022079:	(bad)  
 102207a:	inc    DWORD PTR [eax]
 102207c:	add    al,0x8a
 102207e:	test   al,0x0
 1022080:	add    eax,0x500a487
 1022085:	test   BYTE PTR [ecx-0x607cfb00],ah
 102208b:	add    BYTE PTR ds:0x5009e80,al
 1022091:	sbb    BYTE PTR [eax+eax*1+0x9b7e05],0x6
 1022099:	jl     0x1022034
 102209b:	add    BYTE PTR [esi],al
 102209d:	jp     0x1022036
 102209f:	add    BYTE PTR [ebp+0x68],dl
 10220a2:	jo     0x10220a4
 10220a4:	pop    ebx
 10220a5:	outs   dx,BYTE PTR ds:[esi]
 10220a6:	jbe    0x10220a8
 10220a8:	push   ds
 10220a9:	je     0x1022044
 10220ab:	add    BYTE PTR [edi+0x59],al
 10220ae:	bound  eax,QWORD PTR [eax]
 10220b0:	dec    edi
 10220b1:	pusha  
 10220b2:	imul   eax,DWORD PTR [eax],0x968c79
 10220b8:	jbe    0x1022041
 10220ba:	nop
 10220bb:	add    BYTE PTR [ecx+0x51],al
 10220be:	pop    ebx
 10220bf:	add    BYTE PTR [ebx+eax*4-0x74],dh
 10220c3:	add    BYTE PTR [eax-0x77],bh
 10220c6:	xchg   esp,eax
 10220c7:	add    BYTE PTR [eax],bh
 10220c9:	inc    edi
 10220ca:	push   edx
 10220cb:	add    BYTE PTR [ebx+ecx*2],bh
 10220ce:	push   esi
 10220cf:	add    bh,bh
 10220d1:	(bad)  
 10220d2:	inc    DWORD PTR [eax]
 10220d4:	add    BYTE PTR [eax],al
 10220d6:	add    BYTE PTR [eax],al
 10220d8:	(bad)  
 10220d9:	(bad)  
 10220da:	inc    DWORD PTR [eax]
	...
 1022188:	pop    ss
 1022189:	pop    ss
 102218a:	pop    ss
 102218b:	pop    ss
 102218c:	pop    ss
 102218d:	pop    ss
 102218e:	pop    ss
 102218f:	pop    ss
 1022190:	imul   eax,DWORD PTR [ecx],0x1010101
 1022196:	add    DWORD PTR [ecx],eax
 1022198:	add    DWORD PTR [ecx],eax
 102219a:	add    DWORD PTR [edi],edx
 102219c:	pop    ss
 102219d:	pop    ss
 102219e:	pop    ss
 102219f:	pop    ss
 10221a0:	pop    ss
 10221a1:	pop    ss
 10221a2:	pop    ss
 10221a3:	pop    ss
 10221a4:	pop    ss
 10221a5:	pop    ss
 10221a6:	pop    ss
 10221a7:	pop    ss
 10221a8:	pop    ss
 10221a9:	pop    ss
 10221aa:	pop    ss
 10221ab:	pop    ss
 10221ac:	pop    ss
 10221ad:	pop    ss
 10221ae:	pop    ss
 10221af:	pop    ss
 10221b0:	imul   ebp,DWORD PTR [ecx+ebp*2+0x69696969],0x1696969
 10221bb:	pop    ss
 10221bc:	pop    ss
 10221bd:	pop    ss
 10221be:	pop    ss
 10221bf:	pop    ss
 10221c0:	pop    ss
 10221c1:	pop    ss
 10221c2:	pop    ss
 10221c3:	pop    ss
 10221c4:	pop    ss
 10221c5:	pop    ss
 10221c6:	pop    ss
 10221c7:	pop    ss
 10221c8:	pop    ss
 10221c9:	pop    ss
 10221ca:	pop    ss
 10221cb:	pop    ss
 10221cc:	pop    ss
 10221cd:	pop    ss
 10221ce:	pop    ss
 10221cf:	pop    ss
 10221d0:	imul   ebp,DWORD PTR [esp+ebp*4-0x6c625d57],0x1697b90
 10221db:	pop    ss
 10221dc:	pop    ss
 10221dd:	pop    ss
 10221de:	pop    ss
 10221df:	pop    ss
 10221e0:	pop    ss
 10221e1:	pop    ss
 10221e2:	pop    ss
 10221e3:	pop    ss
 10221e4:	pop    ss
 10221e5:	pop    ss
 10221e6:	pop    ss
 10221e7:	pop    ss
 10221e8:	pop    ss
 10221e9:	pop    ss
 10221ea:	pop    ss
 10221eb:	pop    ss
 10221ec:	imul   eax,DWORD PTR [ecx],0xac690101
 10221f2:	adc    DWORD PTR [edi],ecx
 10221f4:	push   cs
 10221f5:	or     eax,0x698d0b0c
 10221fa:	add    DWORD PTR [edi],edx
 10221fc:	pop    ss
 10221fd:	pop    ss
 10221fe:	pop    ss
 10221ff:	pop    ss
 1022200:	pop    ss
 1022201:	pop    ss
 1022202:	pop    ss
 1022203:	pop    ss
 1022204:	pop    ss
 1022205:	pop    ss
 1022206:	pop    ss
 1022207:	pop    ss
 1022208:	pop    ss
 1022209:	pop    ss
 102220a:	pop    ss
 102220b:	pop    ss
 102220c:	imul   ebp,DWORD PTR [ecx+ebp*2-0x53539697],0x9ea5aaac
 1022217:	xchg   esp,eax
 1022218:	xchg   ecx,eax
 1022219:	imul   eax,DWORD PTR [ecx],0x17170000
 102221f:	pop    ss
 1022220:	pop    ss
 1022221:	pop    ss
 1022222:	pop    ss
 1022223:	pop    ss
 1022224:	pop    ss
 1022225:	pop    ss
 1022226:	pop    ss
 1022227:	pop    ss
 1022228:	pop    ss
 1022229:	pop    ss
 102222a:	pop    ss
 102222b:	pop    ss
 102222c:	imul   ebp,DWORD PTR [esp+ebp*4+0x11ac6aa9],0xc0d0e0f
 1022237:	or     edx,DWORD PTR [edx+0x25300169]
 102223d:	add    BYTE PTR [eax],al
 102223f:	pop    ss
 1022240:	pop    ss
 1022241:	pop    ss
 1022242:	pop    ss
 1022243:	pop    ss
 1022244:	pop    ss
 1022245:	pop    ss
 1022246:	pop    ss
 1022247:	pop    ss
 1022248:	imul   eax,DWORD PTR [ecx],0xac690101
 102224e:	adc    DWORD PTR [edi],ecx
 1022250:	imul   ebp,DWORD PTR [esp+ebp*4-0x59535354],0xffffffa0
 1022258:	xchg   esi,eax
 1022259:	imul   eax,DWORD PTR [ecx],0x21252832
 102225f:	add    BYTE PTR [eax],al
 1022261:	pop    ss
 1022262:	pop    ss
 1022263:	pop    ss
 1022264:	pop    ss
 1022265:	pop    ss
 1022266:	pop    ss
 1022267:	pop    ss
 1022268:	imul   ebp,DWORD PTR [ecx+ebp*2-0x53539697],0x10ac6eac
 1022273:	femms  
 1022275:	or     eax,0x699d0b0c
 102227a:	add    DWORD PTR [eax+esi*1],esi
 102227d:	daa    
 102227e:	and    ah,BYTE PTR [ecx]
 1022280:	sbb    eax,0x17170000
 1022285:	pop    ss
 1022286:	pop    ss
 1022287:	pop    ss
 1022288:	imul   ebp,DWORD PTR [esp+ebp*4+0x11ac6aa9],0xacac720f
 1022293:	lods   al,BYTE PTR ds:[esi]
 1022294:	lods   al,BYTE PTR ds:[esi]
 1022295:	lods   al,BYTE PTR ds:[esi]
 1022296:	lods   al,BYTE PTR ds:[esi]
 1022297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1022298:	mov    eax,ds:0x32360169
 102229d:	xor    BYTE PTR ds:0x1a1d1f23,ah
 10222a3:	add    BYTE PTR [eax],al
 10222a5:	pop    ss
 10222a6:	pop    ss
 10222a7:	pop    ss
 10222a8:	imul   ebp,DWORD PTR [ecx+edx*1-0x535394f1],0x11ac74ac
 10222b3:	femms  
 10222b5:	or     eax,0x6969aaac
 10222ba:	add    dh,BYTE PTR [edi]
 10222bc:	xor    al,0x32
 10222be:	daa    
 10222bf:	and    eax,0x191b1e20
 10222c4:	sbb    BYTE PTR [eax],al
 10222c6:	add    BYTE PTR [edi],dl
 10222c8:	imul   ebp,DWORD PTR [esp+ebp*4+0x10ac6eac],0xacac760f
 10222d3:	lods   al,BYTE PTR ds:[esi]
 10222d4:	lods   al,BYTE PTR ds:[esi]
 10222d5:	lods   al,BYTE PTR ds:[esi]
 10222d6:	lods   al,BYTE PTR ds:[esi]
 10222d7:	imul   eax,DWORD PTR [edx],0x36390202
 10222dd:	xor    al,0x30
 10222df:	daa    
 10222e0:	and    esp,DWORD PTR [ecx]
 10222e2:	sbb    eax,0x1415181a
 10222e7:	or     DWORD PTR [edx-0x54],ebp
 10222ea:	adc    DWORD PTR [edi],ecx
 10222ec:	jb     0x102229a
 10222ee:	lods   al,BYTE PTR ds:[esi]
 10222ef:	lods   al,BYTE PTR ds:[esi]
 10222f0:	ja     0x102229e
 10222f2:	lods   al,BYTE PTR ds:[esi]
 10222f3:	lods   al,BYTE PTR ds:[esi]
 10222f4:	lods   al,BYTE PTR ds:[esi]
 10222f5:	lods   al,BYTE PTR ds:[esi]
 10222f6:	lods   al,BYTE PTR ds:[esi]
 10222f7:	push   0x79
 10222f9:	add    DWORD PTR [ebx+0x3b],ebp
 10222fc:	cmp    BYTE PTR ds:0x21253032,dh
 1022302:	pop    ds
 1022303:	sbb    al,0x19
 1022305:	sbb    BYTE PTR ds:0xacac6b08,dl
 102230b:	lods   al,BYTE PTR ds:[esi]
 102230c:	je     0x10222ba
 102230e:	adc    DWORD PTR [edi],ecx
 1022310:	js     0x10222be
 1022312:	lods   al,BYTE PTR ds:[esi]
 1022313:	lods   al,BYTE PTR ds:[esi]
 1022314:	lods   al,BYTE PTR ds:[esi]
 1022315:	lods   al,BYTE PTR ds:[esi]
 1022316:	lods   al,BYTE PTR ds:[esi]
 1022317:	ins    DWORD PTR es:[edi],dx
 1022318:	add    DWORD PTR [ebx+0x373a3c41],ecx
 102231e:	xor    al,0x31
 1022320:	daa    
 1022321:	and    ah,BYTE PTR [ecx]
 1022323:	push   ds
 1022324:	sbb    ebx,DWORD PTR [ecx]
 1022326:	sbb    BYTE PTR [edi],al
 1022328:	outs   dx,BYTE PTR ds:[esi]
 1022329:	lods   al,BYTE PTR ds:[esi]
 102232a:	adc    BYTE PTR [edi],cl
 102232c:	jbe    0x10222da
 102232e:	lods   al,BYTE PTR ds:[esi]
 102232f:	lods   al,BYTE PTR ds:[esi]
 1022330:	js     0x10223aa
 1022332:	js     0x10223ac
 1022334:	js     0x10223ad
 1022336:	jne    0x10223ab
 1022338:	mov    eax,DWORD PTR [ebx+0x42]
 102233b:	cmp    eax,0x3436393c
 1022340:	xor    BYTE PTR [esi],ah
 1022342:	and    bl,BYTE PTR [edi]
 1022344:	sbb    eax,0x7206181a
 1022349:	lods   al,BYTE PTR ds:[esi]
 102234a:	lods   al,BYTE PTR ds:[esi]
 102234b:	lods   al,BYTE PTR ds:[esi]
 102234c:	ja     0x10222fa
 102234e:	lods   al,BYTE PTR ds:[esi]
 102234f:	lods   al,BYTE PTR ds:[esi]
 1022350:	lods   al,BYTE PTR ds:[esi]
 1022351:	lods   al,BYTE PTR ds:[esi]
 1022352:	lods   al,BYTE PTR ds:[esi]
 1022353:	imul   edi,DWORD PTR [ecx+0x1],0x45474969
 102235a:	inc    esp
 102235b:	ds cmp al,0x3a
 102235e:	cmp    BYTE PTR ds:0x20252832,dh
 1022364:	pop    ds
 1022365:	sbb    ebx,DWORD PTR [ecx]
 1022367:	add    eax,0xf11ac74
 102236c:	js     0x102231a
 102236e:	lods   al,BYTE PTR ds:[esi]
 102236f:	lods   al,BYTE PTR ds:[esi]
 1022370:	lods   al,BYTE PTR ds:[esi]
 1022371:	lods   al,BYTE PTR ds:[esi]
 1022372:	lods   al,BYTE PTR ds:[esi]
 1022373:	imul   eax,DWORD PTR [ecx],0x4b4d4f8b
 1022379:	dec    ecx
 102237a:	inc    esi
 102237b:	aas    
 102237c:	ds cmp al,0x3a
 102237f:	aaa    
 1022380:	xor    al,0x31
 1022382:	daa    
 1022383:	and    ah,BYTE PTR [eax]
 1022385:	sbb    eax,0xac76041b
 102238a:	lods   al,BYTE PTR ds:[esi]
 102238b:	lods   al,BYTE PTR ds:[esi]
 102238c:	js     0x1022406
 102238e:	js     0x1022408
 1022390:	js     0x1022409
 1022392:	jne    0x1022407
 1022394:	mov    ss,WORD PTR [ebp+0x51]
 1022397:	push   eax
 1022398:	dec    edi
 1022399:	dec    esp
 102239a:	dec    edx
 102239b:	inc    eax
 102239c:	aas    
 102239d:	cmp    eax,0x3236383b
 10223a2:	xor    BYTE PTR ds:0x31d1f22,ah
 10223a8:	ja     0x1022356
 10223aa:	lods   al,BYTE PTR ds:[esi]
 10223ab:	lods   al,BYTE PTR ds:[esi]
 10223ac:	lods   al,BYTE PTR ds:[esi]
 10223ad:	lods   al,BYTE PTR ds:[esi]
 10223ae:	lods   al,BYTE PTR ds:[esi]
 10223af:	imul   edi,DWORD PTR [ecx+0x1],0x57595b69
 10223b6:	push   esi
 10223b7:	push   esp
 10223b8:	push   edx
 10223b9:	push   eax
 10223ba:	dec    ebp
 10223bb:	inc    eax
 10223bc:	inc    eax
 10223bd:	ds cmp al,0x3a
 10223c0:	cmp    BYTE PTR [edx+esi*1],dh
 10223c3:	daa    
 10223c4:	and    eax,0x78031f20
 10223c9:	lods   al,BYTE PTR ds:[esi]
 10223ca:	lods   al,BYTE PTR ds:[esi]
 10223cb:	lods   al,BYTE PTR ds:[esi]
 10223cc:	lods   al,BYTE PTR ds:[esi]
 10223cd:	lods   al,BYTE PTR ds:[esi]
 10223ce:	lods   al,BYTE PTR ds:[esi]
 10223cf:	imul   eax,DWORD PTR [ecx],0x5c62638b
 10223d5:	pop    ebx
 10223d6:	pop    ecx
 10223d7:	push   edi
 10223d8:	push   ebp
 10223d9:	push   ebx
 10223da:	dec    ebp
 10223db:	inc    eax
 10223dc:	inc    eax
 10223dd:	aas    
 10223de:	ds cmp al,0x3a
 10223e1:	ss xor al,0x31
 10223e4:	daa    
 10223e5:	and    ah,BYTE PTR [ecx]
 10223e7:	add    edi,DWORD PTR [eax+0x78]
 10223ea:	js     0x1022464
 10223ec:	js     0x1022465
 10223ee:	imul   ebp,DWORD PTR [ecx-0x75],0x63656768
 10223f5:	bound  ebx,QWORD PTR [ebx+ebx*2+0x59]
 10223f9:	das    
 10223fa:	das    
 10223fb:	sbb    al,0x1c
 10223fd:	inc    eax
 10223fe:	aas    
 10223ff:	cmp    eax,0x3236383b
 1022404:	xor    BYTE PTR ds:0x17170322,ah
 102240a:	pop    ss
 102240b:	pop    ss
 102240c:	pop    ss
 102240d:	pop    ss
 102240e:	pop    ss
 102240f:	sub    DWORD PTR [ecx+0x68687f80],eax
 1022415:	arpl   WORD PTR gs:[edi],bp
 1022418:	das    
 1022419:	mov    DWORD PTR [edi+0x1c1c8486],eax
 102241f:	ds cmp al,0x3a
 1022422:	cmp    BYTE PTR [edx+esi*1],dh
 1022425:	daa    
 1022426:	and    al,0x3
 1022428:	pop    ss
 1022429:	pop    ss
 102242a:	pop    ss
 102242b:	pop    ss
 102242c:	pop    ss
 102242d:	pop    ss
 102242e:	pop    ss
 102242f:	sub    al,BYTE PTR [edx+0x7f7f8182]
 1022435:	dec    eax
 1022436:	das    
 1022437:	call   0x7d85:0x86878999
 102243e:	fs sbb al,0x1c
 1022441:	cmp    al,0x39
 1022443:	xor    esi,DWORD PTR ss:[eax]
 1022446:	add    edx,DWORD PTR es:[edi]
 1022449:	pop    ss
 102244a:	pop    ss
 102244b:	pop    ss
 102244c:	pop    ss
 102244d:	pop    ss
 102244e:	pop    ss
 102244f:	sub    al,0x83
 1022451:	add    DWORD PTR [edx-0x635bb7b8],0xffffff9a
 1022458:	cdq    
 1022459:	mov    DWORD PTR [edi+0x647d8486],eax
 102245f:	pusha  
 1022460:	pop    edx
 1022461:	sbb    al,0x1c
 1022463:	cmp    BYTE PTR ds:0x17032832,dh
 1022469:	pop    ss
 102246a:	pop    ss
 102246b:	pop    ss
 102246c:	pop    ss
 102246d:	pop    ss
 102246e:	pop    ss
 102246f:	sub    eax,0xab484883
 1022474:	test   al,0xa4
 1022476:	pushf  
 1022477:	call   0x7d85:0x86878899
 102247e:	fs pusha 
 1022480:	pop    edx
 1022481:	push   esi
 1022482:	push   esp
 1022483:	sbb    al,0x1c
 1022485:	xor    al,0x31
 1022487:	add    edx,DWORD PTR [edi]
 1022489:	pop    ss
 102248a:	pop    ss
 102248b:	pop    ss
 102248c:	pop    ss
 102248d:	pop    ss
 102248e:	pop    ss
 102248f:	sub    eax,0xabacac48
 1022494:	test   al,0xa4
 1022496:	pushf  
 1022497:	call   0x7d85:0x86878999
 102249e:	fs pop ebp
 10224a0:	pop    edx
 10224a1:	push   esi
 10224a2:	push   esp
 10224a3:	push   esp
 10224a4:	push   esp
 10224a5:	sbb    al,0x1c
 10224a7:	add    edx,DWORD PTR [edi]
 10224a9:	pop    ss
 10224aa:	pop    ss
 10224ab:	pop    ss
 10224ac:	pop    ss
 10224ad:	pop    ss
 10224ae:	pop    ss
 10224af:	sub    eax,0xabacac16
 10224b4:	test   al,0xa4
 10224b6:	pushf  
 10224b7:	call   0x7c85:0x86878999
 10224be:	fs pusha 
 10224c0:	pop    eax
 10224c1:	push   esi
 10224c2:	push   esp
 10224c3:	push   esp
 10224c4:	push   esp
 10224c5:	push   esp
 10224c6:	push   ss
 10224c7:	add    edx,DWORD PTR [edi]
 10224c9:	pop    ss
 10224ca:	pop    ss
 10224cb:	pop    ss
 10224cc:	pop    ss
 10224cd:	pop    ss
 10224ce:	pop    ss
 10224cf:	pop    ss
 10224d0:	pop    ss
 10224d1:	push   ss
 10224d2:	push   ss
 10224d3:	stos   DWORD PTR es:[edi],eax
 10224d4:	test   al,0xa4
 10224d6:	pushf  
 10224d7:	call   0x7d85:0x86878a98
 10224de:	fs pusha 
 10224e0:	pop    eax
 10224e1:	push   esi
 10224e2:	push   esp
 10224e3:	push   esp
 10224e4:	push   esp
 10224e5:	push   ss
 10224e6:	push   ss
 10224e7:	pop    ss
 10224e8:	pop    ss
 10224e9:	pop    ss
 10224ea:	pop    ss
 10224eb:	pop    ss
 10224ec:	pop    ss
 10224ed:	pop    ss
 10224ee:	pop    ss
 10224ef:	pop    ss
 10224f0:	pop    ss
 10224f1:	pop    ss
 10224f2:	pop    ss
 10224f3:	push   ss
 10224f4:	push   ss
 10224f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10224f6:	fwait
 10224f7:	call   0x7d85:0x86878998
 10224fe:	pop    edi
 10224ff:	pop    ebp
 1022500:	pop    ecx
 1022501:	push   esi
 1022502:	push   esp
 1022503:	push   ss
 1022504:	push   ss
 1022505:	pop    ss
 1022506:	pop    ss
 1022507:	pop    ss
 1022508:	pop    ss
 1022509:	pop    ss
 102250a:	pop    ss
 102250b:	pop    ss
 102250c:	pop    ss
 102250d:	pop    ss
 102250e:	pop    ss
 102250f:	pop    ss
 1022510:	pop    ss
 1022511:	pop    ss
 1022512:	pop    ss
 1022513:	pop    ss
 1022514:	pop    ss
 1022515:	push   ss
 1022516:	push   ss
 1022517:	call   0x7c85:0x86878999
 102251e:	fs pop ebp
 1022520:	pop    eax
 1022521:	push   ss
 1022522:	push   ss
 1022523:	pop    ss
 1022524:	pop    ss
 1022525:	pop    ss
 1022526:	pop    ss
 1022527:	pop    ss
 1022528:	pop    ss
 1022529:	pop    ss
 102252a:	pop    ss
 102252b:	pop    ss
 102252c:	pop    ss
 102252d:	pop    ss
 102252e:	pop    ss
 102252f:	pop    ss
 1022530:	pop    ss
 1022531:	pop    ss
 1022532:	pop    ss
 1022533:	pop    ss
 1022534:	pop    ss
 1022535:	pop    ss
 1022536:	pop    ss
 1022537:	push   ss
 1022538:	push   ss
 1022539:	mov    DWORD PTR [edi+0x647c8586],eax
 102253f:	push   ss
 1022540:	push   ss
 1022541:	pop    ss
 1022542:	pop    ss
 1022543:	pop    ss
 1022544:	pop    ss
 1022545:	pop    ss
 1022546:	pop    ss
 1022547:	pop    ss
 1022548:	pop    ss
 1022549:	pop    ss
 102254a:	pop    ss
 102254b:	pop    ss
 102254c:	pop    ss
 102254d:	pop    ss
 102254e:	pop    ss
 102254f:	pop    ss
 1022550:	pop    ss
 1022551:	pop    ss
 1022552:	pop    ss
 1022553:	pop    ss
 1022554:	pop    ss
 1022555:	pop    ss
 1022556:	pop    ss
 1022557:	pop    ss
 1022558:	pop    ss
 1022559:	push   ss
 102255a:	push   ss
 102255b:	xchg   BYTE PTR [esi+edx*1+0x17171716],al
 1022562:	pop    ss
 1022563:	pop    ss
 1022564:	pop    ss
 1022565:	pop    ss
 1022566:	pop    ss
 1022567:	pop    ss
 1022568:	pop    ss
 1022569:	pop    ss
 102256a:	pop    ss
 102256b:	pop    ss
 102256c:	pop    ss
 102256d:	pop    ss
 102256e:	pop    ss
 102256f:	pop    ss
 1022570:	pop    ss
 1022571:	pop    ss
 1022572:	pop    ss
 1022573:	pop    ss
 1022574:	pop    ss
 1022575:	pop    ss
 1022576:	pop    ss
 1022577:	pop    ss
 1022578:	pop    ss
 1022579:	pop    ss
 102257a:	pop    ss
 102257b:	push   ss
 102257c:	push   ss
 102257d:	pop    ss
 102257e:	pop    ss
 102257f:	pop    ss
 1022580:	pop    ss
 1022581:	pop    ss
 1022582:	pop    ss
 1022583:	pop    ss
 1022584:	pop    ss
 1022585:	pop    ss
 1022586:	pop    ss
 1022587:	pop    ss
 1022588:	inc    DWORD PTR [eax]
 102258a:	pop    ds
 102258b:	(bad)  
 102258c:	inc    DWORD PTR [eax]
 102258e:	pop    ds
 102258f:	(bad)  
 1022590:	inc    DWORD PTR [eax]
 1022592:	pop    ds
 1022593:	push   eax
 1022595:	add    BYTE PTR [edi],bl
 1022597:	push   eax
 1022599:	add    BYTE PTR [edi],al
 102259b:	push   eax
 102259d:	add    BYTE PTR [ecx],al
 102259f:	inc    DWORD PTR [eax]
 10225a1:	add    BYTE PTR [eax],al
 10225a3:	jg     0x10225a5
 10225a5:	add    BYTE PTR [eax],al
 10225a7:	pop    ds
 10225a8:	add    BYTE PTR [eax],al
 10225aa:	add    BYTE PTR [edi],al
 10225ac:	add    BYTE PTR [eax],al
 10225ae:	add    BYTE PTR [ecx],al
	...
 10225d8:	inc    BYTE PTR [eax]
 10225da:	add    BYTE PTR [eax],al
 10225dc:	inc    BYTE PTR [eax]
 10225de:	add    BYTE PTR [eax],al
 10225e0:	inc    BYTE PTR [eax]
 10225e2:	add    BYTE PTR [eax],al
 10225e4:	inc    BYTE PTR [eax]
 10225e6:	add    BYTE PTR [eax],al
 10225e8:	inc    BYTE PTR [eax]
 10225ea:	add    BYTE PTR [eax],al
 10225ec:	inc    BYTE PTR [eax]
 10225ee:	add    BYTE PTR [eax],al
 10225f0:	inc    DWORD PTR [eax-0x1f00ff00]
 10225f6:	add    BYTE PTR [edi],al
 10225f8:	(bad)  
 10225f9:	clc    
 10225fa:	add    BYTE PTR [edi],bl
 10225fc:	(bad)  
 10225fd:	inc    BYTE PTR [eax]
 10225ff:	jg     0x1022600
 1022601:	inc    DWORD PTR [ecx-0x18000001]
 1022607:	jmp    FWORD PTR [eax]
 1022609:	add    BYTE PTR [eax],al
 102260b:	add    BYTE PTR [eax],dl
 102260d:	add    BYTE PTR [eax],al
 102260f:	add    BYTE PTR [eax],ah
 1022611:	add    BYTE PTR [eax],al
 1022613:	add    BYTE PTR [ecx],al
 1022615:	add    BYTE PTR [eax],cl
	...
 1022633:	add    BYTE PTR [ebx+0x49],ah
 1022636:	xor    eax,0x364a6400
 102263b:	add    BYTE PTR [eax],bh
 102263d:	inc    edi
 102263e:	push   edx
 102263f:	add    BYTE PTR [ebx+ecx*2],bh
 1022642:	push   esi
 1022643:	add    BYTE PTR [ecx+0x51],al
 1022646:	pop    ebx
 1022647:	add    BYTE PTR [edi+0x59],al
 102264a:	bound  eax,QWORD PTR [eax]
 102264c:	dec    edi
 102264d:	pusha  
 102264e:	imul   eax,DWORD PTR [eax],0x706855
 1022654:	pop    ebx
 1022655:	outs   dx,BYTE PTR ds:[esi]
 1022656:	jbe    0x1022658
 1022658:	pop    edi
 1022659:	jae    0x10226d6
 102265b:	add    cl,bl
 102265d:	push   0x33
 102265f:	add    dl,ah
 1022661:	jae    0x102269d
 1022663:	add    al,ch
 1022665:	jl     0x10226ac
 1022667:	add    dl,ch
 1022669:	xchg   DWORD PTR [eax+eax*1-0x16],edx
 102266d:	xchg   edx,eax
 102266e:	fs add dl,ch
 1022671:	fwait
 1022672:	je     0x1022674
 1022674:	jmp    0x9377:0x600749c
 102267b:	add    BYTE PTR [esi],al
 102267d:	ja     0x1022613
 102267f:	add    BYTE PTR [esi],al
 1022681:	jp     0x102261a
 1022683:	add    BYTE PTR ds:0x1e009a7d,al
 1022689:	je     0x1022624
 102268b:	add    BYTE PTR [eax],al
 102268d:	add    BYTE PTR [eax],al
 102268f:	add    BYTE PTR ds:0x4009d80,al
 1022695:	test   DWORD PTR [ecx-0x5b78fb00],esp
 102269b:	add    BYTE PTR [ecx+ecx*4],al
 102269e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102269f:	add    BYTE PTR [edx+ecx*4],al
 10226a2:	test   al,0x0
 10226a4:	add    al,0x8c
 10226a6:	test   al,0x0
 10226a8:	add    al,0x8f
 10226aa:	lods   al,BYTE PTR ds:[esi]
 10226ab:	add    BYTE PTR [ecx+edx*4],al
 10226ae:	lods   eax,DWORD PTR ds:[esi]
 10226af:	add    BYTE PTR [ebx],al
 10226b1:	xchg   esi,eax
 10226b2:	mov    cl,0x0
 10226b4:	add    al,0x95
 10226b6:	mov    cl,0x0
 10226b8:	add    ebx,DWORD PTR [ecx-0x66fbff4b]
 10226be:	mov    ah,0x0
 10226c0:	add    ebx,DWORD PTR [edi+esi*4-0x4662fe00]
 10226c7:	add    BYTE PTR [ebx],al
 10226c9:	mov    al,ds:0xa10200bb
 10226ce:	mov    ebp,0xbfa40200
 10226d3:	add    BYTE PTR [ebx+eax*4-0x74],dh
 10226d7:	add    BYTE PTR [esi-0x79],dh
 10226da:	nop
 10226db:	add    BYTE PTR [ebp-0x76],dh
 10226de:	xchg   edx,eax
 10226df:	add    BYTE PTR [eax-0x77],bh
 10226e2:	xchg   esp,eax
 10226e3:	add    BYTE PTR [ecx-0x74],bh
 10226e6:	xchg   esi,eax
 10226e7:	add    BYTE PTR [edx-0x70],bh
 10226ea:	cwde   
 10226eb:	add    BYTE PTR [eax-0x45],ah
 10226ee:	mov    ebx,0xc0a50200
 10226f3:	add    BYTE PTR [edx],al
 10226f5:	test   al,0xc2
 10226f7:	add    BYTE PTR [edx],al
 10226f9:	stos   BYTE PTR es:[edi],al
 10226fa:	les    eax,FWORD PTR [eax]
 10226fc:	add    ch,BYTE PTR [ebp-0x52feff39]
 1022702:	enter  0x100,0xb0
 1022706:	retf   
 1022707:	add    BYTE PTR [ecx],al
 1022709:	mov    dl,0xcd
 102270b:	add    BYTE PTR [ecx],al
 102270d:	mov    ah,0xce
 102270f:	add    BYTE PTR [ecx],al
 1022711:	mov    ch,0xd0
 1022713:	add    BYTE PTR [ecx],al
 1022715:	mov    eax,0xb90000d2
 102271a:	aam    0x0
 102271c:	add    BYTE PTR [esi+edx*8-0x27420000],bh
 1022723:	add    BYTE PTR [eax],al
 1022725:	rcr    dl,0x0
 1022728:	add    dl,al
 102272a:	fadd   QWORD PTR [eax]
 102272c:	add    ah,al
 102272e:	fiadd  WORD PTR [eax]
 1022730:	add    dh,al
 1022732:	loopne 0x1022734
 1022734:	daa    
 1022735:	(bad)  
 1022736:	jmp    0xebdb563b
 102273b:	add    BYTE PTR [ebx],dh
 102273d:	fucomi st,st(3)
 102273f:	add    BYTE PTR [edi],dh
 1022741:	fsub   st(4),st
 1022743:	add    BYTE PTR [ebx],bh
 1022745:	fsubp  st(5),st
 1022747:	add    BYTE PTR [edi],bh
 1022749:	fucomip st,st(6)
 102274b:	add    BYTE PTR [edi],bh
 102274d:	loopne 0x102273d
 102274f:	add    BYTE PTR [eax-0x3b],bl
 1022752:	into   
 1022753:	add    BYTE PTR [ebx-0x1f],al
 1022756:	out    dx,eax
 1022757:	add    BYTE PTR [edi-0x1d],al
 102275a:	out    dx,eax
 102275b:	add    BYTE PTR [edi-0x1d],al
 102275e:	lock add BYTE PTR [ebx-0x1c],cl
 1022762:	icebp  
 1022763:	add    BYTE PTR [esi-0x1b],cl
 1022766:	icebp  
 1022767:	add    BYTE PTR [eax+ebp*8-0xe],cl
 102276b:	add    BYTE PTR [eax-0x1a],dl
 102276e:	repnz add BYTE PTR [ebx-0x18],dl
 1022772:	repnz add BYTE PTR [edi-0x16],dl
 1022776:	repz add BYTE PTR [eax-0x16],bl
 102277a:	repz add BYTE PTR [ebx-0x15],bl
 102277e:	hlt    
 102277f:	add    BYTE PTR [ebx-0x13],bl
 1022782:	cmc    
 1022783:	add    BYTE PTR [esp+ebp*8-0xc],bl
 1022787:	add    BYTE PTR [ecx-0x12],ah
 102278a:	test   BYTE PTR [eax],0x64
 102278d:	out    dx,eax
 102278e:	test   BYTE PTR [eax],0x68
 1022791:	out    dx,eax
 1022792:	test   DWORD PTR [eax],0xf7f066
 1022798:	push   0x6a00f7f0
 102279d:	icebp  
 102279e:	clc    
 102279f:	add    BYTE PTR [esi-0xd],ch
 10227a2:	clc    
 10227a3:	add    BYTE PTR [edx-0x10],dh
 10227a6:	test   DWORD PTR [eax],0xf7f175
 10227ac:	jge    0x102279f
 10227ae:	test   DWORD PTR [eax],0xf8f072
 10227b4:	jne    0x10227a7
 10227b6:	clc    
 10227b7:	add    BYTE PTR [edx-0xc],dh
 10227ba:	stc    
 10227bb:	add    BYTE PTR [ebp-0xb],dh
 10227be:	cli    
 10227bf:	add    BYTE PTR [ecx+esi*8-0x8],bh
 10227c3:	add    BYTE PTR [eax-0x9],bh
 10227c6:	sti    
 10227c7:	add    BYTE PTR [edi-0x8],dh
 10227ca:	cld    
 10227cb:	add    BYTE PTR [ebx-0x8],bh
 10227ce:	cld    
 10227cf:	add    BYTE PTR [ebp-0x7],bh
 10227d2:	cld    
 10227d3:	add    BYTE PTR [edi-0x46ff6c5e],dh
 10227d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10227da:	xchg   ebp,eax
 10227db:	add    BYTE PTR [esi-0x33ff6557],bh
 10227e1:	mov    ds:0xabc0008e,al
 10227e6:	pushf  
 10227e7:	add    bl,al
 10227e9:	scas   al,BYTE PTR es:[edi]
 10227ea:	sahf   
 10227eb:	add    ah,dl
 10227ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10227ee:	nop
 10227ef:	add    dl,ch
 10227f1:	mov    dh,0x99
 10227f3:	add    bh,al
 10227f5:	mov    dl,0xa3
 10227f7:	add    al,cl
 10227f9:	mov    dl,0xa3
 10227fb:	add    cl,cl
 10227fd:	mov    bl,0xa4
 10227ff:	add    ah,cl
 1022801:	mov    dh,0xa7
 1022803:	add    bh,cl
 1022805:	mov    ecx,0xbbd100a9
 102280a:	stos   DWORD PTR es:[edi],eax
 102280b:	add    ah,dl
 102280d:	mov    esi,0xc2d800ae
 1022812:	mov    dl,0x0
 1022814:	aam    0xc5
 1022816:	mov    ecx,0xbecada00
 102281b:	add    cl,ah
 102281d:	retf   0xbd
 1022820:	xchg   edx,esi
 1022822:	clc    
 1022823:	add    BYTE PTR [eax-0x77ff070e],cl
 1022829:	hlt    
 102282a:	clc    
 102282b:	add    BYTE PTR [ecx-0x7bff0305],al
 1022831:	sti    
 1022832:	std    
 1022833:	add    BYTE PTR [esp+edi*8-0x176ff02],al
 102283a:	inc    BYTE PTR [eax]
 102283c:	mov    edi,?
 102283e:	inc    DWORD PTR [eax]
 1022840:	xchg   ebx,eax
 1022841:	hlt    
 1022842:	stc    
 1022843:	add    BYTE PTR [esp+esi*8-0xa5fff07],dl
 102284a:	stc    
 102284b:	add    BYTE PTR [ebp-0x45ff050a],ch
 1022851:	idiv   ebx
 1022853:	add    BYTE PTR [ecx-0x46ff0408],bh
 1022859:	clc    
 102285a:	cld    
 102285b:	add    bh,bl
 102285d:	int3   
 102285e:	rol    DWORD PTR [eax],0xd8
 1022861:	aad    0xd3
 1022863:	add    ah,ah
 1022865:	iret   
 1022866:	les    eax,FWORD PTR [eax]
 1022868:	loopne 0x102283b
 102286a:	mov    DWORD PTR [eax],0xc8d2e0
 1022870:	out    0xd3,al
 1022872:	leave  
 1022873:	add    bh,ah
 1022875:	aad    0xcb
 1022877:	add    bl,ch
 1022879:	fcmovnbe st,st(3)
 102287b:	add    ah,ch
 102287d:	fst    st(5)
 102287f:	add    ch,ch
 1022881:	(bad)  
 1022883:	add    dl,ch
 1022885:	loopne 0x102285f
 1022887:	add    dh,ch
 1022889:	loope  0x1022865
 102288b:	add    bh,bl
 102288d:	loop   0x1022875
 102288f:	add    dh,al
 1022891:	stc    
 1022892:	sti    
 1022893:	add    dh,al
 1022895:	stc    
 1022896:	cld    
 1022897:	add    dl,dl
 1022899:	cli    
 102289a:	cld    
 102289b:	add    dh,bl
 102289d:	sti    
 102289e:	std    
 102289f:	add    ch,bl
 10228a1:	cld    
 10228a2:	std    
 10228a3:	add    cl,dh
 10228a5:	out    0xe1,eax
 10228a7:	add    dl,dh
 10228a9:	jmp    0xecf42991
 10228ae:	out    0x0,eax
 10228b0:	hlt    
 10228b1:	jmp    0x1022899
 10228b3:	add    ch,dh
 10228b5:	in     eax,dx
 10228b6:	jmp    0xeff41fbb
 10228bb:	add    cl,ah
 10228bd:	std    
 10228be:	std    
 10228bf:	add    al,ch
 10228c1:	cld    
 10228c2:	std    
 10228c3:	add    al,bh
 10228c5:	repz lock add cl,bh
 10228c9:	cmc    
 10228ca:	repnz add dl,bh
 10228cd:	div    ebp
 10228cf:	add    cl,dh
 10228d1:	std    
 10228d2:	inc    BYTE PTR [eax]
 10228d4:	cld    
 10228d5:	cli    
 10228d6:	stc    
 10228d7:	add    ch,bh
 10228d9:	cld    
 10228da:	sti    
 10228db:	add    cl,bh
 10228dd:	(bad)  
 10228de:	inc    BYTE PTR [eax]
 10228e0:	(bad)  
 10228e1:	(bad)  
 10228e2:	inc    BYTE PTR [eax]
	...
 1022a30:	pop    ss
 1022a31:	pop    ss
 1022a32:	pop    ss
 1022a33:	pop    ss
 1022a34:	imul   eax,DWORD PTR [ecx],0x1010101
 1022a3a:	add    DWORD PTR [edi],edx
 1022a3c:	pop    ss
 1022a3d:	pop    ss
 1022a3e:	pop    ss
 1022a3f:	pop    ss
 1022a40:	pop    ss
 1022a41:	pop    ss
 1022a42:	imul   eax,DWORD PTR [ecx],0x8f95a969
 1022a48:	jp     0x1022ac3
 1022a4a:	add    DWORD PTR [edi],edx
 1022a4c:	pop    ss
 1022a4d:	pop    ss
 1022a4e:	pop    ss
 1022a4f:	pop    ss
 1022a50:	imul   eax,DWORD PTR [ecx],0xa969a969
 1022a56:	jo     0x1022ac7
 1022a58:	ins    BYTE PTR es:[edi],dx
 1022a59:	jns    0x1022a5c
 1022a5b:	add    BYTE PTR [edi],dl
 1022a5d:	pop    ss
 1022a5e:	pop    ss
 1022a5f:	pop    ss
 1022a60:	imul   ebp,DWORD PTR [ecx-0x558e5697],0x79959fac
 1022a6a:	add    DWORD PTR [eax],ebx
 1022a6c:	add    BYTE PTR [eax],al
 1022a6e:	pop    ss
 1022a6f:	pop    ss
 1022a70:	imul   ebp,DWORD PTR [ecx-0x568a558f],0x798c7070
 1022a7a:	add    DWORD PTR ds:0xa001218,ebx
 1022a80:	jno    0x1022a2c
 1022a82:	jne    0x1022a2d
 1022a84:	ja     0x1022a2f
 1022a86:	test   eax,0x20202a9
 1022a8b:	and    DWORD PTR [eax+ebx*1],ebx
 1022a8e:	adc    eax,DWORD PTR [ebx]
 1022a90:	jne    0x1022a3b
 1022a92:	ja     0x1022a3d
 1022a94:	js     0x1022a3f
 1022a96:	test   eax,0x8b7202a9
 1022a9b:	daa    
 1022a9c:	and    DWORD PTR [eax+ebx*1],ebx
 1022a9f:	add    esi,DWORD PTR [edi-0x57]
 1022aa2:	js     0x1022a4d
 1022aa4:	js     0x1022b1e
 1022aa6:	ja     0x1022b1a
 1022aa8:	jb     0x1022a35
 1022aaa:	cmp    BYTE PTR [edi+eiz*1],dh
 1022aad:	and    BYTE PTR ds:0x78a97803,bl
 1022ab3:	js     0x1022b2c
 1022ab5:	imul   ebp,DWORD PTR [ecx-0x75],0x393d4e55
 1022abc:	xor    al,0x27
 1022abe:	and    BYTE PTR [ebx],al
 1022ac0:	js     0x1022b3a
 1022ac2:	ja     0x1022b2d
 1022ac4:	imul   ecx,DWORD PTR [ebx+0x48668183],0x393d401c
 1022ace:	xor    al,0x3
 1022ad0:	pop    ss
 1022ad1:	pop    ss
 1022ad2:	pop    ss
 1022ad3:	pop    ss
 1022ad4:	add    DWORD PTR cs:[ebx+0x7da34848],0x1c
 1022adc:	sbb    al,0x3d
 1022ade:	cmp    BYTE PTR [ebx],al
 1022ae0:	pop    ss
 1022ae1:	pop    ss
 1022ae2:	pop    ss
 1022ae3:	pop    ss
 1022ae4:	sub    ecx,DWORD PTR [eax+0x48]
 1022ae7:	lods   al,BYTE PTR ds:[esi]
 1022ae8:	test   al,0xa3
 1022aea:	jge    0x1022b4d
 1022aec:	pop    ecx
 1022aed:	sbb    al,0x1c
 1022aef:	add    edx,DWORD PTR [edi]
 1022af1:	pop    ss
 1022af2:	pop    ss
 1022af3:	pop    ss
 1022af4:	sub    eax,0xa8acac16
 1022af9:	mov    ds:0x5459617e,eax
 1022afe:	push   ss
 1022aff:	add    edx,DWORD PTR [edi]
 1022b01:	pop    ss
 1022b02:	pop    ss
 1022b03:	pop    ss
 1022b04:	pop    ss
 1022b05:	pop    ss
 1022b06:	push   ss
 1022b07:	push   ss
 1022b08:	test   al,0xa3
 1022b0a:	jge    0x1022b6a
 1022b0c:	push   ss
 1022b0d:	push   ss
 1022b0e:	pop    ss
 1022b0f:	pop    ss
 1022b10:	pop    ss
 1022b11:	pop    ss
 1022b12:	pop    ss
 1022b13:	pop    ss
 1022b14:	pop    ss
 1022b15:	pop    ss
 1022b16:	pop    ss
 1022b17:	pop    ss
 1022b18:	push   ss
 1022b19:	push   ss
 1022b1a:	push   ss
 1022b1b:	push   ss
 1022b1c:	pop    ss
 1022b1d:	pop    ss
 1022b1e:	pop    ss
 1022b1f:	pop    ss
 1022b20:	pop    ss
 1022b21:	pop    ss
 1022b22:	pop    ss
 1022b23:	pop    ss
 1022b24:	pop    ss
 1022b25:	pop    ss
 1022b26:	pop    ss
 1022b27:	pop    ss
 1022b28:	pop    ss
 1022b29:	pop    ss
 1022b2a:	pop    ss
 1022b2b:	pop    ss
 1022b2c:	pop    ss
 1022b2d:	pop    ss
 1022b2e:	pop    ss
 1022b2f:	pop    ss
 1022b30:	lock pop ds
 1022b32:	lods   al,BYTE PTR ds:[esi]
 1022b33:	test   eax,0xf111fc0
 1022b38:	add    BYTE PTR [edi],cl
 1022b3a:	lods   al,BYTE PTR ds:[esi]
 1022b3b:	lods   al,BYTE PTR ds:[esi]
 1022b3c:	add    BYTE PTR [ebx],al
 1022b3e:	lods   al,BYTE PTR ds:[esi]
 1022b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1022b40:	add    BYTE PTR [eax],al
 1022b42:	add    DWORD PTR [esi],esi
 1022b44:	add    BYTE PTR [eax],al
 1022b46:	and    eax,0x1a000023
 1022b4b:	add    BYTE PTR [eax],al
 1022b4d:	add    BYTE PTR [edi],dl
 1022b4f:	pop    ss
 1022b50:	add    BYTE PTR [eax],al
 1022b52:	adc    DWORD PTR [edi],ecx
 1022b54:	add    BYTE PTR [eax],al
 1022b56:	lods   al,BYTE PTR ds:[esi]
 1022b57:	lods   al,BYTE PTR ds:[esi]
 1022b58:	lock add BYTE PTR [ecx],dl
 1022b5b:	(bad)  
 1022b5d:	add    BYTE PTR [edx+ebp*4+0x370200f0],ch
 1022b64:	cld    
 1022b65:	add    esp,DWORD PTR [edi]
 1022b67:	and    eax,0x191b0fff
 1022b6c:	(bad)  
 1022b6d:	inc    DWORD PTR [eax]
 1022b6f:	pop    ss
 1022b70:	sub    BYTE PTR [eax],al
 1022b72:	add    BYTE PTR [eax],al
 1022b74:	and    BYTE PTR [eax],al
 1022b76:	add    BYTE PTR [eax],al
 1022b78:	inc    eax
 1022b79:	add    BYTE PTR [eax],al
 1022b7b:	add    BYTE PTR [ecx],al
 1022b7d:	add    BYTE PTR [eax],cl
	...
 1022b9b:	add    BYTE PTR [ebx+0x49],ah
 1022b9e:	xor    eax,0x364a6400
 1022ba3:	add    BYTE PTR [eax],bh
 1022ba5:	inc    edi
 1022ba6:	push   edx
 1022ba7:	add    BYTE PTR [ebx+ecx*2],bh
 1022baa:	push   esi
 1022bab:	add    BYTE PTR [ecx+0x51],al
 1022bae:	pop    ebx
 1022baf:	add    BYTE PTR [edi+0x59],al
 1022bb2:	bound  eax,QWORD PTR [eax]
 1022bb4:	dec    edi
 1022bb5:	pusha  
 1022bb6:	imul   eax,DWORD PTR [eax],0x706855
 1022bbc:	pop    ebx
 1022bbd:	outs   dx,BYTE PTR ds:[esi]
 1022bbe:	jbe    0x1022bc0
 1022bc0:	pop    edi
 1022bc1:	jae    0x1022c3e
 1022bc3:	add    cl,bl
 1022bc5:	push   0x33
 1022bc7:	add    dl,ah
 1022bc9:	jae    0x1022c05
 1022bcb:	add    al,ch
 1022bcd:	jl     0x1022c14
 1022bcf:	add    dl,ch
 1022bd1:	xchg   DWORD PTR [eax+eax*1-0x16],edx
 1022bd5:	xchg   edx,eax
 1022bd6:	fs add dl,ch
 1022bd9:	fwait
 1022bda:	je     0x1022bdc
 1022bdc:	jmp    0x9377:0x600749c
 1022be3:	add    BYTE PTR [esi],al
 1022be5:	ja     0x1022b7b
 1022be7:	add    BYTE PTR [esi],al
 1022be9:	jp     0x1022b82
 1022beb:	add    BYTE PTR ds:0x1e009a7d,al
 1022bf1:	je     0x1022b8c
 1022bf3:	add    bh,bh
 1022bf5:	add    bh,bh
 1022bf7:	add    BYTE PTR ds:0x4009d80,al
 1022bfd:	test   DWORD PTR [ecx-0x5b78fb00],esp
 1022c03:	add    BYTE PTR [ecx+ecx*4],al
 1022c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1022c07:	add    BYTE PTR [edx+ecx*4],al
 1022c0a:	test   al,0x0
 1022c0c:	add    al,0x8c
 1022c0e:	test   al,0x0
 1022c10:	add    al,0x8f
 1022c12:	lods   al,BYTE PTR ds:[esi]
 1022c13:	add    BYTE PTR [ecx+edx*4],al
 1022c16:	lods   eax,DWORD PTR ds:[esi]
 1022c17:	add    BYTE PTR [ebx],al
 1022c19:	xchg   esi,eax
 1022c1a:	mov    cl,0x0
 1022c1c:	add    al,0x95
 1022c1e:	mov    cl,0x0
 1022c20:	add    ebx,DWORD PTR [ecx-0x66fbff4b]
 1022c26:	mov    ah,0x0
 1022c28:	add    ebx,DWORD PTR [edi+esi*4-0x4662fe00]
 1022c2f:	add    BYTE PTR [ebx],al
 1022c31:	mov    al,ds:0xa10200bb
 1022c36:	mov    ebp,0xbfa40200
 1022c3b:	add    BYTE PTR [ebx+eax*4-0x74],dh
 1022c3f:	add    BYTE PTR [esi-0x79],dh
 1022c42:	nop
 1022c43:	add    BYTE PTR [ebp-0x76],dh
 1022c46:	xchg   edx,eax
 1022c47:	add    BYTE PTR [eax-0x77],bh
 1022c4a:	xchg   esp,eax
 1022c4b:	add    BYTE PTR [ecx-0x74],bh
 1022c4e:	xchg   esi,eax
 1022c4f:	add    BYTE PTR [edx-0x70],bh
 1022c52:	cwde   
 1022c53:	add    BYTE PTR [eax-0x45],ah
 1022c56:	mov    ebx,0xc0a50200
 1022c5b:	add    BYTE PTR [edx],al
 1022c5d:	test   al,0xc2
 1022c5f:	add    BYTE PTR [edx],al
 1022c61:	stos   BYTE PTR es:[edi],al
 1022c62:	les    eax,FWORD PTR [eax]
 1022c64:	add    ch,BYTE PTR [ebp-0x52feff39]
 1022c6a:	enter  0x100,0xb0
 1022c6e:	retf   
 1022c6f:	add    BYTE PTR [ecx],al
 1022c71:	mov    dl,0xcd
 1022c73:	add    BYTE PTR [ecx],al
 1022c75:	mov    ah,0xce
 1022c77:	add    BYTE PTR [ecx],al
 1022c79:	mov    ch,0xd0
 1022c7b:	add    BYTE PTR [ecx],al
 1022c7d:	mov    eax,0xb90000d2
 1022c82:	aam    0x0
 1022c84:	add    BYTE PTR [esi+edx*8-0x27420000],bh
 1022c8b:	add    BYTE PTR [eax],al
 1022c8d:	rcr    dl,0x0
 1022c90:	add    dl,al
 1022c92:	fadd   QWORD PTR [eax]
 1022c94:	add    ah,al
 1022c96:	fiadd  WORD PTR [eax]
 1022c98:	add    dh,al
 1022c9a:	loopne 0x1022c9c
 1022c9c:	daa    
 1022c9d:	(bad)  
 1022c9e:	jmp    0xebdb5ba3
 1022ca3:	add    BYTE PTR [ebx],dh
 1022ca5:	fucomi st,st(3)
 1022ca7:	add    BYTE PTR [edi],dh
 1022ca9:	fsub   st(4),st
 1022cab:	add    BYTE PTR [ebx],bh
 1022cad:	fsubp  st(5),st
 1022caf:	add    BYTE PTR [edi],bh
 1022cb1:	fucomip st,st(6)
 1022cb3:	add    BYTE PTR [edi],bh
 1022cb5:	loopne 0x1022ca5
 1022cb7:	add    BYTE PTR [eax-0x3b],bl
 1022cba:	into   
 1022cbb:	add    BYTE PTR [ebx-0x1f],al
 1022cbe:	out    dx,eax
 1022cbf:	add    BYTE PTR [edi-0x1d],al
 1022cc2:	out    dx,eax
 1022cc3:	add    BYTE PTR [edi-0x1d],al
 1022cc6:	lock add BYTE PTR [ebx-0x1c],cl
 1022cca:	icebp  
 1022ccb:	add    BYTE PTR [esi-0x1b],cl
 1022cce:	icebp  
 1022ccf:	add    BYTE PTR [eax+ebp*8-0xe],cl
 1022cd3:	add    BYTE PTR [eax-0x1a],dl
 1022cd6:	repnz add BYTE PTR [ebx-0x18],dl
 1022cda:	repnz add BYTE PTR [edi-0x16],dl
 1022cde:	repz add BYTE PTR [eax-0x16],bl
 1022ce2:	repz add BYTE PTR [ebx-0x15],bl
 1022ce6:	hlt    
 1022ce7:	add    BYTE PTR [ebx-0x13],bl
 1022cea:	cmc    
 1022ceb:	add    BYTE PTR [esp+ebp*8-0xc],bl
 1022cef:	add    BYTE PTR [ecx-0x12],ah
 1022cf2:	test   BYTE PTR [eax],0x64
 1022cf5:	out    dx,eax
 1022cf6:	test   BYTE PTR [eax],0x68
 1022cf9:	out    dx,eax
 1022cfa:	test   DWORD PTR [eax],0xf7f066
 1022d00:	push   0x6a00f7f0
 1022d05:	icebp  
 1022d06:	clc    
 1022d07:	add    BYTE PTR [esi-0xd],ch
 1022d0a:	clc    
 1022d0b:	add    BYTE PTR [edx-0x10],dh
 1022d0e:	test   DWORD PTR [eax],0xf7f175
 1022d14:	jge    0x1022d07
 1022d16:	test   DWORD PTR [eax],0xf8f072
 1022d1c:	jne    0x1022d0f
 1022d1e:	clc    
 1022d1f:	add    BYTE PTR [edx-0xc],dh
 1022d22:	stc    
 1022d23:	add    BYTE PTR [ebp-0xb],dh
 1022d26:	cli    
 1022d27:	add    BYTE PTR [ecx+esi*8-0x8],bh
 1022d2b:	add    BYTE PTR [eax-0x9],bh
 1022d2e:	sti    
 1022d2f:	add    BYTE PTR [edi-0x8],dh
 1022d32:	cld    
 1022d33:	add    BYTE PTR [ebx-0x8],bh
 1022d36:	cld    
 1022d37:	add    BYTE PTR [ebp-0x7],bh
 1022d3a:	cld    
 1022d3b:	add    BYTE PTR [edi-0x46ff6c5e],dh
 1022d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1022d42:	xchg   ebp,eax
 1022d43:	add    BYTE PTR [esi-0x33ff6557],bh
 1022d49:	mov    ds:0xabc0008e,al
 1022d4e:	pushf  
 1022d4f:	add    bl,al
 1022d51:	scas   al,BYTE PTR es:[edi]
 1022d52:	sahf   
 1022d53:	add    ah,dl
 1022d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1022d56:	nop
 1022d57:	add    dl,ch
 1022d59:	mov    dh,0x99
 1022d5b:	add    bh,al
 1022d5d:	mov    dl,0xa3
 1022d5f:	add    al,cl
 1022d61:	mov    dl,0xa3
 1022d63:	add    cl,cl
 1022d65:	mov    bl,0xa4
 1022d67:	add    ah,cl
 1022d69:	mov    dh,0xa7
 1022d6b:	add    bh,cl
 1022d6d:	mov    ecx,0xbbd100a9
 1022d72:	stos   DWORD PTR es:[edi],eax
 1022d73:	add    ah,dl
 1022d75:	mov    esi,0xc2d800ae
 1022d7a:	mov    dl,0x0
 1022d7c:	aam    0xc5
 1022d7e:	mov    ecx,0xbecada00
 1022d83:	add    cl,ah
 1022d85:	retf   0xbd
 1022d88:	xchg   edx,esi
 1022d8a:	clc    
 1022d8b:	add    BYTE PTR [eax-0x77ff070e],cl
 1022d91:	hlt    
 1022d92:	clc    
 1022d93:	add    BYTE PTR [ecx-0x7bff0305],al
 1022d99:	sti    
 1022d9a:	std    
 1022d9b:	add    BYTE PTR [esp+edi*8-0x176ff02],al
 1022da2:	inc    BYTE PTR [eax]
 1022da4:	mov    edi,?
 1022da6:	inc    DWORD PTR [eax]
 1022da8:	xchg   ebx,eax
 1022da9:	hlt    
 1022daa:	stc    
 1022dab:	add    BYTE PTR [esp+esi*8-0xa5fff07],dl
 1022db2:	stc    
 1022db3:	add    BYTE PTR [ebp-0x45ff050a],ch
 1022db9:	idiv   ebx
 1022dbb:	add    BYTE PTR [ecx-0x46ff0408],bh
 1022dc1:	clc    
 1022dc2:	cld    
 1022dc3:	add    bh,bl
 1022dc5:	int3   
 1022dc6:	rol    DWORD PTR [eax],0xd8
 1022dc9:	aad    0xd3
 1022dcb:	add    ah,ah
 1022dcd:	iret   
 1022dce:	les    eax,FWORD PTR [eax]
 1022dd0:	loopne 0x1022da3
 1022dd2:	mov    DWORD PTR [eax],0xc8d2e0
 1022dd8:	out    0xd3,al
 1022dda:	leave  
 1022ddb:	add    bh,ah
 1022ddd:	aad    0xcb
 1022ddf:	add    bl,ch
 1022de1:	fcmovnbe st,st(3)
 1022de3:	add    ah,ch
 1022de5:	fst    st(5)
 1022de7:	add    ch,ch
 1022de9:	(bad)  
 1022deb:	add    dl,ch
 1022ded:	loopne 0x1022dc7
 1022def:	add    dh,ch
 1022df1:	loope  0x1022dcd
 1022df3:	add    bh,bl
 1022df5:	loop   0x1022ddd
 1022df7:	add    dh,al
 1022df9:	stc    
 1022dfa:	sti    
 1022dfb:	add    dh,al
 1022dfd:	stc    
 1022dfe:	cld    
 1022dff:	add    dl,dl
 1022e01:	cli    
 1022e02:	cld    
 1022e03:	add    dh,bl
 1022e05:	sti    
 1022e06:	std    
 1022e07:	add    ch,bl
 1022e09:	cld    
 1022e0a:	std    
 1022e0b:	add    cl,dh
 1022e0d:	out    0xe1,eax
 1022e0f:	add    dl,dh
 1022e11:	jmp    0xecf42ef9
 1022e16:	out    0x0,eax
 1022e18:	hlt    
 1022e19:	jmp    0x1022e01
 1022e1b:	add    ch,dh
 1022e1d:	in     eax,dx
 1022e1e:	jmp    0xeff42523
 1022e23:	add    cl,ah
 1022e25:	std    
 1022e26:	std    
 1022e27:	add    al,ch
 1022e29:	cld    
 1022e2a:	std    
 1022e2b:	add    al,bh
 1022e2d:	repz lock add cl,bh
 1022e31:	cmc    
 1022e32:	repnz add dl,bh
 1022e35:	div    ebp
 1022e37:	add    cl,dh
 1022e39:	std    
 1022e3a:	inc    BYTE PTR [eax]
 1022e3c:	cld    
 1022e3d:	cli    
 1022e3e:	stc    
 1022e3f:	add    ch,bh
 1022e41:	cld    
 1022e42:	sti    
 1022e43:	add    cl,bh
 1022e45:	(bad)  
 1022e46:	inc    BYTE PTR [eax]
 1022e48:	(bad)  
 1022e49:	(bad)  
 1022e4a:	inc    BYTE PTR [eax]
	...
 1022f98:	lods   eax,DWORD PTR ds:[esi]
 1022f99:	lods   eax,DWORD PTR ds:[esi]
 1022f9a:	lods   eax,DWORD PTR ds:[esi]
 1022f9b:	lods   eax,DWORD PTR ds:[esi]
 1022f9c:	lods   eax,DWORD PTR ds:[esi]
 1022f9d:	lods   eax,DWORD PTR ds:[esi]
 1022f9e:	lods   eax,DWORD PTR ds:[esi]
 1022f9f:	lods   eax,DWORD PTR ds:[esi]
 1022fa0:	imul   eax,DWORD PTR [ecx],0x1010101
 1022fa6:	add    DWORD PTR [ecx],eax
 1022fa8:	add    DWORD PTR [ecx],eax
 1022faa:	add    DWORD PTR [ebp-0x52525253],ebp
 1022fb0:	lods   eax,DWORD PTR ds:[esi]
 1022fb1:	lods   eax,DWORD PTR ds:[esi]
 1022fb2:	lods   eax,DWORD PTR ds:[esi]
 1022fb3:	lods   eax,DWORD PTR ds:[esi]
 1022fb4:	lods   eax,DWORD PTR ds:[esi]
 1022fb5:	lods   eax,DWORD PTR ds:[esi]
 1022fb6:	lods   eax,DWORD PTR ds:[esi]
 1022fb7:	lods   eax,DWORD PTR ds:[esi]
 1022fb8:	lods   eax,DWORD PTR ds:[esi]
 1022fb9:	lods   eax,DWORD PTR ds:[esi]
 1022fba:	lods   eax,DWORD PTR ds:[esi]
 1022fbb:	lods   eax,DWORD PTR ds:[esi]
 1022fbc:	lods   eax,DWORD PTR ds:[esi]
 1022fbd:	lods   eax,DWORD PTR ds:[esi]
 1022fbe:	lods   eax,DWORD PTR ds:[esi]
 1022fbf:	lods   eax,DWORD PTR ds:[esi]
 1022fc0:	imul   ebp,DWORD PTR [ecx+ebp*2+0x69696969],0x1696969
 1022fcb:	lods   eax,DWORD PTR ds:[esi]
 1022fcc:	lods   eax,DWORD PTR ds:[esi]
 1022fcd:	lods   eax,DWORD PTR ds:[esi]
 1022fce:	lods   eax,DWORD PTR ds:[esi]
 1022fcf:	lods   eax,DWORD PTR ds:[esi]
 1022fd0:	lods   eax,DWORD PTR ds:[esi]
 1022fd1:	lods   eax,DWORD PTR ds:[esi]
 1022fd2:	lods   eax,DWORD PTR ds:[esi]
 1022fd3:	lods   eax,DWORD PTR ds:[esi]
 1022fd4:	lods   eax,DWORD PTR ds:[esi]
 1022fd5:	lods   eax,DWORD PTR ds:[esi]
 1022fd6:	lods   eax,DWORD PTR ds:[esi]
 1022fd7:	lods   eax,DWORD PTR ds:[esi]
 1022fd8:	lods   eax,DWORD PTR ds:[esi]
 1022fd9:	lods   eax,DWORD PTR ds:[esi]
 1022fda:	lods   eax,DWORD PTR ds:[esi]
 1022fdb:	lods   eax,DWORD PTR ds:[esi]
 1022fdc:	lods   eax,DWORD PTR ds:[esi]
 1022fdd:	lods   eax,DWORD PTR ds:[esi]
 1022fde:	lods   eax,DWORD PTR ds:[esi]
 1022fdf:	lods   eax,DWORD PTR ds:[esi]
 1022fe0:	imul   ebp,DWORD PTR [esp+ebp*4-0x6c625d57],0x1697b90
 1022feb:	lods   eax,DWORD PTR ds:[esi]
 1022fec:	lods   eax,DWORD PTR ds:[esi]
 1022fed:	lods   eax,DWORD PTR ds:[esi]
 1022fee:	lods   eax,DWORD PTR ds:[esi]
 1022fef:	lods   eax,DWORD PTR ds:[esi]
 1022ff0:	lods   eax,DWORD PTR ds:[esi]
 1022ff1:	lods   eax,DWORD PTR ds:[esi]
 1022ff2:	lods   eax,DWORD PTR ds:[esi]
 1022ff3:	lods   eax,DWORD PTR ds:[esi]
 1022ff4:	lods   eax,DWORD PTR ds:[esi]
 1022ff5:	lods   eax,DWORD PTR ds:[esi]
 1022ff6:	lods   eax,DWORD PTR ds:[esi]
 1022ff7:	lods   eax,DWORD PTR ds:[esi]
 1022ff8:	lods   eax,DWORD PTR ds:[esi]
 1022ff9:	lods   eax,DWORD PTR ds:[esi]
 1022ffa:	lods   eax,DWORD PTR ds:[esi]
 1022ffb:	lods   eax,DWORD PTR ds:[esi]
 1022ffc:	imul   eax,DWORD PTR [ecx],0xac690101
 1023002:	adc    DWORD PTR [edi],ecx
 1023004:	push   cs
 1023005:	or     eax,0x698d0b0c
 102300a:	add    DWORD PTR [ebp-0x52525253],ebp
 1023010:	lods   eax,DWORD PTR ds:[esi]
 1023011:	lods   eax,DWORD PTR ds:[esi]
 1023012:	lods   eax,DWORD PTR ds:[esi]
 1023013:	lods   eax,DWORD PTR ds:[esi]
 1023014:	lods   eax,DWORD PTR ds:[esi]
 1023015:	lods   eax,DWORD PTR ds:[esi]
 1023016:	lods   eax,DWORD PTR ds:[esi]
 1023017:	lods   eax,DWORD PTR ds:[esi]
 1023018:	lods   eax,DWORD PTR ds:[esi]
 1023019:	lods   eax,DWORD PTR ds:[esi]
 102301a:	lods   eax,DWORD PTR ds:[esi]
 102301b:	lods   eax,DWORD PTR ds:[esi]
 102301c:	imul   ebp,DWORD PTR [ecx+ebp*2-0x53539697],0x9ea5aaac
 1023027:	xchg   esp,eax
 1023028:	xchg   ecx,eax
 1023029:	imul   eax,DWORD PTR [ecx],0xad970000
 102302f:	lods   eax,DWORD PTR ds:[esi]
 1023030:	lods   eax,DWORD PTR ds:[esi]
 1023031:	lods   eax,DWORD PTR ds:[esi]
 1023032:	lods   eax,DWORD PTR ds:[esi]
 1023033:	lods   eax,DWORD PTR ds:[esi]
 1023034:	lods   eax,DWORD PTR ds:[esi]
 1023035:	lods   eax,DWORD PTR ds:[esi]
 1023036:	lods   eax,DWORD PTR ds:[esi]
 1023037:	lods   eax,DWORD PTR ds:[esi]
 1023038:	lods   eax,DWORD PTR ds:[esi]
 1023039:	lods   eax,DWORD PTR ds:[esi]
 102303a:	lods   eax,DWORD PTR ds:[esi]
 102303b:	lods   eax,DWORD PTR ds:[esi]
 102303c:	imul   ebp,DWORD PTR [esp+ebp*4+0x11ac6aa9],0xc0d0e0f
 1023047:	or     edx,DWORD PTR [edx+0x25300169]
 102304d:	add    BYTE PTR [eax],al
 102304f:	xchg   edi,eax
 1023050:	lods   eax,DWORD PTR ds:[esi]
 1023051:	lods   eax,DWORD PTR ds:[esi]
 1023052:	lods   eax,DWORD PTR ds:[esi]
 1023053:	lods   eax,DWORD PTR ds:[esi]
 1023054:	lods   eax,DWORD PTR ds:[esi]
 1023055:	lods   eax,DWORD PTR ds:[esi]
 1023056:	lods   eax,DWORD PTR ds:[esi]
 1023057:	lods   eax,DWORD PTR ds:[esi]
 1023058:	imul   eax,DWORD PTR [ecx],0xac690101
 102305e:	adc    DWORD PTR [edi],ecx
 1023060:	imul   ebp,DWORD PTR [esp+ebp*4-0x59535354],0xffffffa0
 1023068:	xchg   esi,eax
 1023069:	imul   eax,DWORD PTR [ecx],0x21252832
 102306f:	add    BYTE PTR [eax],al
 1023071:	xchg   edi,eax
 1023072:	lods   eax,DWORD PTR ds:[esi]
 1023073:	lods   eax,DWORD PTR ds:[esi]
 1023074:	lods   eax,DWORD PTR ds:[esi]
 1023075:	lods   eax,DWORD PTR ds:[esi]
 1023076:	lods   eax,DWORD PTR ds:[esi]
 1023077:	lods   eax,DWORD PTR ds:[esi]
 1023078:	imul   ebp,DWORD PTR [ecx+ebp*2-0x53539697],0x10ac6eac
 1023083:	femms  
 1023085:	or     eax,0x699d0b0c
 102308a:	add    DWORD PTR [eax+esi*1],esi
 102308d:	daa    
 102308e:	and    ah,BYTE PTR [ecx]
 1023090:	sbb    eax,0xad970000
 1023095:	lods   eax,DWORD PTR ds:[esi]
 1023096:	lods   eax,DWORD PTR ds:[esi]
 1023097:	lods   eax,DWORD PTR ds:[esi]
 1023098:	imul   ebp,DWORD PTR [esp+ebp*4+0x11ac6aa9],0xacac720f
 10230a3:	lods   al,BYTE PTR ds:[esi]
 10230a4:	lods   al,BYTE PTR ds:[esi]
 10230a5:	lods   al,BYTE PTR ds:[esi]
 10230a6:	lods   al,BYTE PTR ds:[esi]
 10230a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10230a8:	mov    eax,ds:0x32360169
 10230ad:	xor    BYTE PTR ds:0x191d1f23,ah
 10230b3:	add    BYTE PTR [eax],al
 10230b5:	xchg   edi,eax
 10230b6:	lods   eax,DWORD PTR ds:[esi]
 10230b7:	lods   eax,DWORD PTR ds:[esi]
 10230b8:	imul   ebp,DWORD PTR [ecx+edx*1-0x535394f1],0x11ac74ac
 10230c3:	femms  
 10230c5:	or     eax,0x6969aaac
 10230ca:	add    dh,BYTE PTR [edi]
 10230cc:	xor    al,0x32
 10230ce:	daa    
 10230cf:	and    eax,0x191b1e20
 10230d4:	sbb    BYTE PTR [eax],al
 10230d6:	add    BYTE PTR [edi-0x53535397],dl
 10230dc:	outs   dx,BYTE PTR ds:[esi]
 10230dd:	lods   al,BYTE PTR ds:[esi]
 10230de:	adc    BYTE PTR [edi],cl
 10230e0:	jbe    0x102308e
 10230e2:	lods   al,BYTE PTR ds:[esi]
 10230e3:	lods   al,BYTE PTR ds:[esi]
 10230e4:	lods   al,BYTE PTR ds:[esi]
 10230e5:	lods   al,BYTE PTR ds:[esi]
 10230e6:	lods   al,BYTE PTR ds:[esi]
 10230e7:	imul   eax,DWORD PTR [edx],0x36390202
 10230ed:	xor    al,0x30
 10230ef:	daa    
 10230f0:	and    esp,DWORD PTR [ecx]
 10230f2:	sbb    eax,0x1415181b
 10230f7:	or     DWORD PTR [edx-0x54],ebp
 10230fa:	adc    DWORD PTR [edi],ecx
 10230fc:	jb     0x10230aa
 10230fe:	lods   al,BYTE PTR ds:[esi]
 10230ff:	lods   al,BYTE PTR ds:[esi]
 1023100:	ja     0x10230ae
 1023102:	lods   al,BYTE PTR ds:[esi]
 1023103:	lods   al,BYTE PTR ds:[esi]
 1023104:	lods   al,BYTE PTR ds:[esi]
 1023105:	lods   al,BYTE PTR ds:[esi]
 1023106:	lods   al,BYTE PTR ds:[esi]
 1023107:	push   0x79
 1023109:	add    DWORD PTR [ebx+0x3b],ebp
 102310c:	cmp    BYTE PTR ds:0x21253032,dh
 1023112:	pop    ds
 1023113:	sbb    al,0x19
 1023115:	sbb    BYTE PTR ds:0xacac6b08,dl
 102311b:	lods   al,BYTE PTR ds:[esi]
 102311c:	je     0x10230ca
 102311e:	adc    DWORD PTR [edi],ecx
 1023120:	js     0x10230ce
 1023122:	lods   al,BYTE PTR ds:[esi]
 1023123:	lods   al,BYTE PTR ds:[esi]
 1023124:	lods   al,BYTE PTR ds:[esi]
 1023125:	lods   al,BYTE PTR ds:[esi]
 1023126:	lods   al,BYTE PTR ds:[esi]
 1023127:	ins    DWORD PTR es:[edi],dx
 1023128:	add    DWORD PTR [ebx+0x373a3c41],ecx
 102312e:	xor    al,0x32
 1023130:	daa    
 1023131:	and    ah,BYTE PTR [ecx]
 1023133:	sbb    eax,0x718191b
 1023138:	outs   dx,BYTE PTR ds:[esi]
 1023139:	lods   al,BYTE PTR ds:[esi]
 102313a:	adc    BYTE PTR [edi],cl
 102313c:	jbe    0x10230ea
 102313e:	lods   al,BYTE PTR ds:[esi]
 102313f:	lods   al,BYTE PTR ds:[esi]
 1023140:	js     0x10231ba
 1023142:	js     0x10231bc
 1023144:	js     0x10231bd
 1023146:	jne    0x10231bb
 1023148:	mov    eax,DWORD PTR [ebx+0x42]
 102314b:	cmp    eax,0x3436393b
 1023150:	xor    BYTE PTR ds:0x1a1d1f22,ah
 1023156:	sbb    BYTE PTR [esi],al
 1023158:	jb     0x1023106
 102315a:	lods   al,BYTE PTR ds:[esi]
 102315b:	lods   al,BYTE PTR ds:[esi]
 102315c:	ja     0x102310a
 102315e:	lods   al,BYTE PTR ds:[esi]
 102315f:	lods   al,BYTE PTR ds:[esi]
 1023160:	lods   al,BYTE PTR ds:[esi]
 1023161:	lods   al,BYTE PTR ds:[esi]
 1023162:	lods   al,BYTE PTR ds:[esi]
 1023163:	imul   edi,DWORD PTR [ecx+0x1],0x45474969
 102316a:	inc    esp
 102316b:	ds cmp al,0x3a
 102316e:	cmp    BYTE PTR ds:0x20252832,dh
 1023174:	pop    ds
 1023175:	sbb    ebx,DWORD PTR [ecx]
 1023177:	add    eax,0xf11ac74
 102317c:	js     0x102312a
 102317e:	lods   al,BYTE PTR ds:[esi]
 102317f:	lods   al,BYTE PTR ds:[esi]
 1023180:	lods   al,BYTE PTR ds:[esi]
 1023181:	lods   al,BYTE PTR ds:[esi]
 1023182:	lods   al,BYTE PTR ds:[esi]
 1023183:	imul   eax,DWORD PTR [ecx],0x4b4d4f8b
 1023189:	dec    ecx
 102318a:	inc    esi
 102318b:	aas    
 102318c:	ds cmp al,0x3a
 102318f:	aaa    
 1023190:	xor    al,0x31
 1023192:	daa    
 1023193:	and    ah,BYTE PTR [eax]
 1023195:	sbb    eax,0xac76041b
 102319a:	lods   al,BYTE PTR ds:[esi]
 102319b:	lods   al,BYTE PTR ds:[esi]
 102319c:	js     0x1023216
 102319e:	js     0x1023218
 10231a0:	js     0x1023219
 10231a2:	jne    0x1023217
 10231a4:	mov    ss,WORD PTR [ebp+0x51]
 10231a7:	push   eax
 10231a8:	dec    edi
 10231a9:	dec    esp
 10231aa:	dec    edx
 10231ab:	inc    eax
 10231ac:	aas    
 10231ad:	cmp    eax,0x3236383b
 10231b2:	xor    BYTE PTR ds:0x31d1f22,ah
 10231b8:	ja     0x1023166
 10231ba:	lods   al,BYTE PTR ds:[esi]
 10231bb:	lods   al,BYTE PTR ds:[esi]
 10231bc:	lods   al,BYTE PTR ds:[esi]
 10231bd:	lods   al,BYTE PTR ds:[esi]
 10231be:	lods   al,BYTE PTR ds:[esi]
 10231bf:	imul   edi,DWORD PTR [ecx+0x1],0x57595b69
 10231c6:	push   esi
 10231c7:	push   esp
 10231c8:	push   edx
 10231c9:	push   eax
 10231ca:	dec    ebp
 10231cb:	inc    eax
 10231cc:	inc    eax
 10231cd:	ds cmp al,0x3a
 10231d0:	cmp    BYTE PTR [edx+esi*1],dh
 10231d3:	daa    
 10231d4:	and    eax,0x78031f21
 10231d9:	lods   al,BYTE PTR ds:[esi]
 10231da:	lods   al,BYTE PTR ds:[esi]
 10231db:	lods   al,BYTE PTR ds:[esi]
 10231dc:	lods   al,BYTE PTR ds:[esi]
 10231dd:	lods   al,BYTE PTR ds:[esi]
 10231de:	lods   al,BYTE PTR ds:[esi]
 10231df:	imul   eax,DWORD PTR [ecx],0x5c62638b
 10231e5:	pop    ebx
 10231e6:	pop    ecx
 10231e7:	push   edi
 10231e8:	push   ebp
 10231e9:	push   ebx
 10231ea:	dec    ebp
 10231eb:	inc    eax
 10231ec:	inc    eax
 10231ed:	aas    
 10231ee:	ds cmp al,0x39
 10231f1:	ss xor al,0x31
 10231f4:	daa    
 10231f5:	and    ah,BYTE PTR [ecx]
 10231f7:	add    edi,DWORD PTR [eax+0x78]
 10231fa:	js     0x1023274
 10231fc:	js     0x1023275
 10231fe:	imul   ebp,DWORD PTR [ecx-0x75],0x63656768
 1023205:	bound  ebx,QWORD PTR [ebx+ebx*2+0x59]
 1023209:	das    
 102320a:	das    
 102320b:	sbb    al,0x1c
 102320d:	inc    eax
 102320e:	aas    
 102320f:	cmp    eax,0x3236383b
 1023214:	xor    BYTE PTR ds:0xadad0322,ah
 102321a:	lods   eax,DWORD PTR ds:[esi]
 102321b:	lods   eax,DWORD PTR ds:[esi]
 102321c:	lods   eax,DWORD PTR ds:[esi]
 102321d:	lods   eax,DWORD PTR ds:[esi]
 102321e:	lods   eax,DWORD PTR ds:[esi]
 102321f:	sub    DWORD PTR [ecx+0x68687f80],eax
 1023225:	arpl   WORD PTR gs:[edi],bp
 1023228:	das    
 1023229:	mov    DWORD PTR [edi+0x1c1c8486],eax
 102322f:	ds cmp al,0x3a
 1023232:	cmp    BYTE PTR [edx+esi*1],dh
 1023235:	daa    
 1023236:	and    al,0x3
 1023238:	lods   eax,DWORD PTR ds:[esi]
 1023239:	lods   eax,DWORD PTR ds:[esi]
 102323a:	lods   eax,DWORD PTR ds:[esi]
 102323b:	lods   eax,DWORD PTR ds:[esi]
 102323c:	lods   eax,DWORD PTR ds:[esi]
 102323d:	lods   eax,DWORD PTR ds:[esi]
 102323e:	lods   eax,DWORD PTR ds:[esi]
 102323f:	sub    al,BYTE PTR [edx+0x7f7f8182]
 1023245:	dec    eax
 1023246:	das    
 1023247:	call   0x7d85:0x86878999
 102324e:	fs sbb al,0x1c
 1023251:	cmp    edi,DWORD PTR [ecx]
 1023253:	xor    esi,DWORD PTR ss:[eax]
 1023256:	add    ebp,DWORD PTR es:[ebp-0x52525253]
 102325d:	lods   eax,DWORD PTR ds:[esi]
 102325e:	lods   eax,DWORD PTR ds:[esi]
 102325f:	sub    al,0x83
 1023261:	add    DWORD PTR [edx-0x635bb7b8],0xffffff9a
 1023268:	cdq    
 1023269:	mov    DWORD PTR [edi+0x647d8486],eax
 102326f:	pusha  
 1023270:	pop    edx
 1023271:	sbb    al,0x1c
 1023273:	cmp    BYTE PTR ds:0xad032832,dh
 1023279:	lods   eax,DWORD PTR ds:[esi]
 102327a:	lods   eax,DWORD PTR ds:[esi]
 102327b:	lods   eax,DWORD PTR ds:[esi]
 102327c:	lods   eax,DWORD PTR ds:[esi]
 102327d:	lods   eax,DWORD PTR ds:[esi]
 102327e:	lods   eax,DWORD PTR ds:[esi]
 102327f:	sub    eax,0xab484883
 1023284:	test   al,0xa4
 1023286:	pushf  
 1023287:	call   0x7d85:0x86878899
 102328e:	fs pusha 
 1023290:	pop    edx
 1023291:	push   esi
 1023292:	push   esp
 1023293:	sbb    al,0x1c
 1023295:	xor    al,0x31
 1023297:	add    ebp,DWORD PTR [ebp-0x52525253]
 102329d:	lods   eax,DWORD PTR ds:[esi]
 102329e:	lods   eax,DWORD PTR ds:[esi]
 102329f:	sub    eax,0xabacac48
 10232a4:	test   al,0xa4
 10232a6:	pushf  
 10232a7:	call   0x7d85:0x86878999
 10232ae:	fs pop ebp
 10232b0:	pop    edx
 10232b1:	push   esi
 10232b2:	push   esp
 10232b3:	push   esp
 10232b4:	push   esp
 10232b5:	sbb    al,0x1c
 10232b7:	add    ebp,DWORD PTR [ebp-0x52525253]
 10232bd:	lods   eax,DWORD PTR ds:[esi]
 10232be:	lods   eax,DWORD PTR ds:[esi]
 10232bf:	sub    eax,0xabacac16
 10232c4:	test   al,0xa4
 10232c6:	pushf  
 10232c7:	call   0x7c85:0x86878999
 10232ce:	fs pusha 
 10232d0:	pop    eax
 10232d1:	push   esi
 10232d2:	push   esp
 10232d3:	push   esp
 10232d4:	push   esp
 10232d5:	push   esp
 10232d6:	push   ss
 10232d7:	add    ebp,DWORD PTR [ebp-0x52525253]
 10232dd:	lods   eax,DWORD PTR ds:[esi]
 10232de:	lods   eax,DWORD PTR ds:[esi]
 10232df:	lods   eax,DWORD PTR ds:[esi]
 10232e0:	xchg   edi,eax
 10232e1:	push   ss
 10232e2:	push   ss
 10232e3:	stos   DWORD PTR es:[edi],eax
 10232e4:	test   al,0xa4
 10232e6:	pushf  
 10232e7:	call   0x7d85:0x86878a98
 10232ee:	fs pop ebp
 10232f0:	pop    eax
 10232f1:	push   esi
 10232f2:	push   esp
 10232f3:	push   esp
 10232f4:	push   esp
 10232f5:	push   ss
 10232f6:	push   ss
 10232f7:	xchg   edi,eax
 10232f8:	lods   eax,DWORD PTR ds:[esi]
 10232f9:	lods   eax,DWORD PTR ds:[esi]
 10232fa:	lods   eax,DWORD PTR ds:[esi]
 10232fb:	lods   eax,DWORD PTR ds:[esi]
 10232fc:	lods   eax,DWORD PTR ds:[esi]
 10232fd:	lods   eax,DWORD PTR ds:[esi]
 10232fe:	lods   eax,DWORD PTR ds:[esi]
 10232ff:	lods   eax,DWORD PTR ds:[esi]
 1023300:	lods   eax,DWORD PTR ds:[esi]
 1023301:	lods   eax,DWORD PTR ds:[esi]
 1023302:	xchg   edi,eax
 1023303:	push   ss
 1023304:	push   ss
 1023305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1023306:	fwait
 1023307:	call   0x7c85:0x86878998
 102330e:	pop    edi
 102330f:	pop    ebp
 1023310:	pop    edx
 1023311:	push   esi
 1023312:	push   esp
 1023313:	push   ss
 1023314:	push   ss
 1023315:	xchg   edi,eax
 1023316:	lods   eax,DWORD PTR ds:[esi]
 1023317:	lods   eax,DWORD PTR ds:[esi]
 1023318:	lods   eax,DWORD PTR ds:[esi]
 1023319:	lods   eax,DWORD PTR ds:[esi]
 102331a:	lods   eax,DWORD PTR ds:[esi]
 102331b:	lods   eax,DWORD PTR ds:[esi]
 102331c:	lods   eax,DWORD PTR ds:[esi]
 102331d:	lods   eax,DWORD PTR ds:[esi]
 102331e:	lods   eax,DWORD PTR ds:[esi]
 102331f:	lods   eax,DWORD PTR ds:[esi]
 1023320:	lods   eax,DWORD PTR ds:[esi]
 1023321:	lods   eax,DWORD PTR ds:[esi]
 1023322:	lods   eax,DWORD PTR ds:[esi]
 1023323:	lods   eax,DWORD PTR ds:[esi]
 1023324:	xchg   edi,eax
 1023325:	push   ss
 1023326:	push   ss
 1023327:	call   0x7c85:0x86878999
 102332e:	fs pop ebp
 1023330:	pop    eax
 1023331:	push   ss
 1023332:	push   ss
 1023333:	xchg   edi,eax
 1023334:	lods   eax,DWORD PTR ds:[esi]
 1023335:	lods   eax,DWORD PTR ds:[esi]
 1023336:	lods   eax,DWORD PTR ds:[esi]
 1023337:	lods   eax,DWORD PTR ds:[esi]
 1023338:	lods   eax,DWORD PTR ds:[esi]
 1023339:	lods   eax,DWORD PTR ds:[esi]
 102333a:	lods   eax,DWORD PTR ds:[esi]
 102333b:	lods   eax,DWORD PTR ds:[esi]
 102333c:	lods   eax,DWORD PTR ds:[esi]
 102333d:	lods   eax,DWORD PTR ds:[esi]
 102333e:	lods   eax,DWORD PTR ds:[esi]
 102333f:	lods   eax,DWORD PTR ds:[esi]
 1023340:	lods   eax,DWORD PTR ds:[esi]
 1023341:	lods   eax,DWORD PTR ds:[esi]
 1023342:	lods   eax,DWORD PTR ds:[esi]
 1023343:	lods   eax,DWORD PTR ds:[esi]
 1023344:	lods   eax,DWORD PTR ds:[esi]
 1023345:	lods   eax,DWORD PTR ds:[esi]
 1023346:	xchg   edi,eax
 1023347:	push   ss
 1023348:	push   ss
 1023349:	mov    DWORD PTR [edi+0x647c8586],eax
 102334f:	push   ss
 1023350:	push   ss
 1023351:	xchg   edi,eax
 1023352:	lods   eax,DWORD PTR ds:[esi]
 1023353:	lods   eax,DWORD PTR ds:[esi]
 1023354:	lods   eax,DWORD PTR ds:[esi]
 1023355:	lods   eax,DWORD PTR ds:[esi]
 1023356:	lods   eax,DWORD PTR ds:[esi]
 1023357:	lods   eax,DWORD PTR ds:[esi]
 1023358:	lods   eax,DWORD PTR ds:[esi]
 1023359:	lods   eax,DWORD PTR ds:[esi]
 102335a:	lods   eax,DWORD PTR ds:[esi]
 102335b:	lods   eax,DWORD PTR ds:[esi]
 102335c:	lods   eax,DWORD PTR ds:[esi]
 102335d:	lods   eax,DWORD PTR ds:[esi]
 102335e:	lods   eax,DWORD PTR ds:[esi]
 102335f:	lods   eax,DWORD PTR ds:[esi]
 1023360:	lods   eax,DWORD PTR ds:[esi]
 1023361:	lods   eax,DWORD PTR ds:[esi]
 1023362:	lods   eax,DWORD PTR ds:[esi]
 1023363:	lods   eax,DWORD PTR ds:[esi]
 1023364:	lods   eax,DWORD PTR ds:[esi]
 1023365:	lods   eax,DWORD PTR ds:[esi]
 1023366:	lods   eax,DWORD PTR ds:[esi]
 1023367:	lods   eax,DWORD PTR ds:[esi]
 1023368:	xchg   edi,eax
 1023369:	push   ss
 102336a:	push   ss
 102336b:	xchg   BYTE PTR [esi+edx*1-0x525268ea],al
 1023372:	lods   eax,DWORD PTR ds:[esi]
 1023373:	lods   eax,DWORD PTR ds:[esi]
 1023374:	lods   eax,DWORD PTR ds:[esi]
 1023375:	lods   eax,DWORD PTR ds:[esi]
 1023376:	lods   eax,DWORD PTR ds:[esi]
 1023377:	lods   eax,DWORD PTR ds:[esi]
 1023378:	lods   eax,DWORD PTR ds:[esi]
 1023379:	lods   eax,DWORD PTR ds:[esi]
 102337a:	lods   eax,DWORD PTR ds:[esi]
 102337b:	lods   eax,DWORD PTR ds:[esi]
 102337c:	lods   eax,DWORD PTR ds:[esi]
 102337d:	lods   eax,DWORD PTR ds:[esi]
 102337e:	lods   eax,DWORD PTR ds:[esi]
 102337f:	lods   eax,DWORD PTR ds:[esi]
 1023380:	lods   eax,DWORD PTR ds:[esi]
 1023381:	lods   eax,DWORD PTR ds:[esi]
 1023382:	lods   eax,DWORD PTR ds:[esi]
 1023383:	lods   eax,DWORD PTR ds:[esi]
 1023384:	lods   eax,DWORD PTR ds:[esi]
 1023385:	lods   eax,DWORD PTR ds:[esi]
 1023386:	lods   eax,DWORD PTR ds:[esi]
 1023387:	lods   eax,DWORD PTR ds:[esi]
 1023388:	lods   eax,DWORD PTR ds:[esi]
 1023389:	lods   eax,DWORD PTR ds:[esi]
 102338a:	xchg   edi,eax
 102338b:	push   ss
 102338c:	push   ss
 102338d:	xchg   edi,eax
 102338e:	lods   eax,DWORD PTR ds:[esi]
 102338f:	lods   eax,DWORD PTR ds:[esi]
 1023390:	lods   eax,DWORD PTR ds:[esi]
 1023391:	lods   eax,DWORD PTR ds:[esi]
 1023392:	lods   eax,DWORD PTR ds:[esi]
 1023393:	lods   eax,DWORD PTR ds:[esi]
 1023394:	lods   eax,DWORD PTR ds:[esi]
 1023395:	lods   eax,DWORD PTR ds:[esi]
 1023396:	lods   eax,DWORD PTR ds:[esi]
 1023397:	lods   eax,DWORD PTR ds:[esi]
 1023398:	inc    DWORD PTR [eax]
 102339a:	pop    ds
 102339b:	(bad)  
 102339c:	inc    DWORD PTR [eax]
 102339e:	pop    ds
 102339f:	(bad)  
 10233a0:	inc    DWORD PTR [eax]
 10233a2:	pop    ds
 10233a3:	push   eax
 10233a5:	add    BYTE PTR [edi],bl
 10233a7:	push   eax
 10233a9:	add    BYTE PTR [ebx],al
 10233ab:	push   eax
 10233ad:	add    BYTE PTR [eax],al
 10233af:	inc    DWORD PTR [eax]
 10233b1:	add    BYTE PTR [eax],al
 10233b3:	aas    
 10233b4:	add    BYTE PTR [eax],al
 10233b6:	add    BYTE PTR [edi],cl
 10233b8:	add    BYTE PTR [eax],al
 10233ba:	add    BYTE PTR [ebx],al
	...
 10233e8:	inc    BYTE PTR [eax]
 10233ea:	add    BYTE PTR [eax],al
 10233ec:	inc    BYTE PTR [eax]
 10233ee:	add    BYTE PTR [eax],al
 10233f0:	inc    BYTE PTR [eax]
 10233f2:	add    BYTE PTR [eax],al
 10233f4:	inc    BYTE PTR [eax]
 10233f6:	add    BYTE PTR [eax],al
 10233f8:	inc    BYTE PTR [eax]
 10233fa:	add    BYTE PTR [eax],al
 10233fc:	inc    BYTE PTR [eax]
 10233fe:	add    BYTE PTR [eax],al
 1023400:	inc    DWORD PTR [eax]
 1023402:	add    BYTE PTR [eax],al
 1023404:	inc    eax
 1023406:	add    BYTE PTR [ebx],al
 1023408:	push   eax
 102340a:	add    BYTE PTR [edi],cl
 102340c:	(bad)  
 102340d:	cld    
 102340e:	add    BYTE PTR [edi],bh
 1023410:	(bad)  
 1023411:	inc    DWORD PTR [eax]
 1023413:	(bad)  
 1023414:	(bad)  
 1023415:	inc    ebx
 1023417:	jmp    FWORD PTR [eax]
 1023419:	add    BYTE PTR [eax],al
 102341b:	add    BYTE PTR [eax],dl
 102341d:	add    BYTE PTR [eax],al
 102341f:	add    BYTE PTR [eax],ah
 1023421:	add    BYTE PTR [eax],al
 1023423:	add    BYTE PTR [ecx],al
 1023425:	add    BYTE PTR [eax],cl
	...
 1023443:	add    BYTE PTR [ebx+0x49],ah
 1023446:	xor    eax,0x364a6400
 102344b:	add    BYTE PTR [eax],bh
 102344d:	inc    edi
 102344e:	push   edx
 102344f:	add    BYTE PTR [ebx+ecx*2],bh
 1023452:	push   esi
 1023453:	add    BYTE PTR [ecx+0x51],al
 1023456:	pop    ebx
 1023457:	add    BYTE PTR [edi+0x59],al
 102345a:	bound  eax,QWORD PTR [eax]
 102345c:	dec    edi
 102345d:	pusha  
 102345e:	imul   eax,DWORD PTR [eax],0x706855
 1023464:	pop    ebx
 1023465:	outs   dx,BYTE PTR ds:[esi]
 1023466:	jbe    0x1023468
 1023468:	pop    edi
 1023469:	jae    0x10234e6
 102346b:	add    cl,bl
 102346d:	push   0x33
 102346f:	add    dl,ah
 1023471:	jae    0x10234ad
 1023473:	add    al,ch
 1023475:	jl     0x10234bc
 1023477:	add    dl,ch
 1023479:	xchg   DWORD PTR [eax+eax*1-0x16],edx
 102347d:	xchg   edx,eax
 102347e:	fs add dl,ch
 1023481:	fwait
 1023482:	je     0x1023484
 1023484:	jmp    0x9377:0x600749c
 102348b:	add    BYTE PTR [esi],al
 102348d:	ja     0x1023423
 102348f:	add    BYTE PTR [esi],al
 1023491:	jp     0x102342a
 1023493:	add    BYTE PTR ds:0x1e009a7d,al
 1023499:	je     0x1023434
 102349b:	add    bh,bh
 102349d:	add    bh,bh
 102349f:	add    BYTE PTR ds:0x4009d80,al
 10234a5:	test   DWORD PTR [ecx-0x5b78fb00],esp
 10234ab:	add    BYTE PTR [ecx+ecx*4],al
 10234ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10234af:	add    BYTE PTR [edx+ecx*4],al
 10234b2:	test   al,0x0
 10234b4:	add    al,0x8c
 10234b6:	test   al,0x0
 10234b8:	add    al,0x8f
 10234ba:	lods   al,BYTE PTR ds:[esi]
 10234bb:	add    BYTE PTR [ecx+edx*4],al
 10234be:	lods   eax,DWORD PTR ds:[esi]
 10234bf:	add    BYTE PTR [ebx],al
 10234c1:	xchg   esi,eax
 10234c2:	mov    cl,0x0
 10234c4:	add    al,0x95
 10234c6:	mov    cl,0x0
 10234c8:	add    ebx,DWORD PTR [ecx-0x66fbff4b]
 10234ce:	mov    ah,0x0
 10234d0:	add    ebx,DWORD PTR [edi+esi*4-0x4662fe00]
 10234d7:	add    BYTE PTR [ebx],al
 10234d9:	mov    al,ds:0xa10200bb
 10234de:	mov    ebp,0xbfa40200
 10234e3:	add    BYTE PTR [ebx+eax*4-0x74],dh
 10234e7:	add    BYTE PTR [esi-0x79],dh
 10234ea:	nop
 10234eb:	add    BYTE PTR [ebp-0x76],dh
 10234ee:	xchg   edx,eax
 10234ef:	add    BYTE PTR [eax-0x77],bh
 10234f2:	xchg   esp,eax
 10234f3:	add    BYTE PTR [ecx-0x74],bh
 10234f6:	xchg   esi,eax
 10234f7:	add    BYTE PTR [edx-0x70],bh
 10234fa:	cwde   
 10234fb:	add    BYTE PTR [eax-0x45],ah
 10234fe:	mov    ebx,0xc0a50200
 1023503:	add    BYTE PTR [edx],al
 1023505:	test   al,0xc2
 1023507:	add    BYTE PTR [edx],al
 1023509:	stos   BYTE PTR es:[edi],al
 102350a:	les    eax,FWORD PTR [eax]
 102350c:	add    ch,BYTE PTR [ebp-0x52feff39]
 1023512:	enter  0x100,0xb0
 1023516:	retf   
 1023517:	add    BYTE PTR [ecx],al
 1023519:	mov    dl,0xcd
 102351b:	add    BYTE PTR [ecx],al
 102351d:	mov    ah,0xce
 102351f:	add    BYTE PTR [ecx],al
 1023521:	mov    ch,0xd0
 1023523:	add    BYTE PTR [ecx],al
 1023525:	mov    eax,0xb90000d2
 102352a:	aam    0x0
 102352c:	add    BYTE PTR [esi+edx*8-0x27420000],bh
 1023533:	add    BYTE PTR [eax],al
 1023535:	rcr    dl,0x0
 1023538:	add    dl,al
 102353a:	fadd   QWORD PTR [eax]
 102353c:	add    ah,al
 102353e:	fiadd  WORD PTR [eax]
 1023540:	add    dh,al
 1023542:	loopne 0x1023544
 1023544:	daa    
 1023545:	(bad)  
 1023546:	jmp    0xebdb644b
 102354b:	add    BYTE PTR [ebx],dh
 102354d:	fucomi st,st(3)
 102354f:	add    BYTE PTR [edi],dh
 1023551:	fsub   st(4),st
 1023553:	add    BYTE PTR [ebx],bh
 1023555:	fsubp  st(5),st
 1023557:	add    BYTE PTR [edi],bh
 1023559:	fucomip st,st(6)
 102355b:	add    BYTE PTR [edi],bh
 102355d:	loopne 0x102354d
 102355f:	add    BYTE PTR [eax-0x3b],bl
 1023562:	into   
 1023563:	add    BYTE PTR [ebx-0x1f],al
 1023566:	out    dx,eax
 1023567:	add    BYTE PTR [edi-0x1d],al
 102356a:	out    dx,eax
 102356b:	add    BYTE PTR [edi-0x1d],al
 102356e:	lock add BYTE PTR [ebx-0x1c],cl
 1023572:	icebp  
 1023573:	add    BYTE PTR [esi-0x1b],cl
 1023576:	icebp  
 1023577:	add    BYTE PTR [eax+ebp*8-0xe],cl
 102357b:	add    BYTE PTR [eax-0x1a],dl
 102357e:	repnz add BYTE PTR [ebx-0x18],dl
 1023582:	repnz add BYTE PTR [edi-0x16],dl
 1023586:	repz add BYTE PTR [eax-0x16],bl
 102358a:	repz add BYTE PTR [ebx-0x15],bl
 102358e:	hlt    
 102358f:	add    BYTE PTR [ebx-0x13],bl
 1023592:	cmc    
 1023593:	add    BYTE PTR [esp+ebp*8-0xc],bl
 1023597:	add    BYTE PTR [ecx-0x12],ah
 102359a:	test   BYTE PTR [eax],0x64
 102359d:	out    dx,eax
 102359e:	test   BYTE PTR [eax],0x68
 10235a1:	out    dx,eax
 10235a2:	test   DWORD PTR [eax],0xf7f066
 10235a8:	push   0x6a00f7f0
 10235ad:	icebp  
 10235ae:	clc    
 10235af:	add    BYTE PTR [esi-0xd],ch
 10235b2:	clc    
 10235b3:	add    BYTE PTR [edx-0x10],dh
 10235b6:	test   DWORD PTR [eax],0xf7f175
 10235bc:	jge    0x10235af
 10235be:	test   DWORD PTR [eax],0xf8f072
 10235c4:	jne    0x10235b7
 10235c6:	clc    
 10235c7:	add    BYTE PTR [edx-0xc],dh
 10235ca:	stc    
 10235cb:	add    BYTE PTR [ebp-0xb],dh
 10235ce:	cli    
 10235cf:	add    BYTE PTR [ecx+esi*8-0x8],bh
 10235d3:	add    BYTE PTR [eax-0x9],bh
 10235d6:	sti    
 10235d7:	add    BYTE PTR [edi-0x8],dh
 10235da:	cld    
 10235db:	add    BYTE PTR [ebx-0x8],bh
 10235de:	cld    
 10235df:	add    BYTE PTR [ebp-0x7],bh
 10235e2:	cld    
 10235e3:	add    BYTE PTR [edi-0x46ff6c5e],dh
 10235e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10235ea:	xchg   ebp,eax
 10235eb:	add    BYTE PTR [esi-0x33ff6557],bh
 10235f1:	mov    ds:0xabc0008e,al
 10235f6:	pushf  
 10235f7:	add    bl,al
 10235f9:	scas   al,BYTE PTR es:[edi]
 10235fa:	sahf   
 10235fb:	add    ah,dl
 10235fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10235fe:	nop
 10235ff:	add    dl,ch
 1023601:	mov    dh,0x99
 1023603:	add    bh,al
 1023605:	mov    dl,0xa3
 1023607:	add    al,cl
 1023609:	mov    dl,0xa3
 102360b:	add    cl,cl
 102360d:	mov    bl,0xa4
 102360f:	add    ah,cl
 1023611:	mov    dh,0xa7
 1023613:	add    bh,cl
 1023615:	mov    ecx,0xbbd100a9
 102361a:	stos   DWORD PTR es:[edi],eax
 102361b:	add    ah,dl
 102361d:	mov    esi,0xc2d800ae
 1023622:	mov    dl,0x0
 1023624:	aam    0xc5
 1023626:	mov    ecx,0xbecada00
 102362b:	add    cl,ah
 102362d:	retf   0xbd
 1023630:	xchg   edx,esi
 1023632:	clc    
 1023633:	add    BYTE PTR [eax-0x77ff070e],cl
 1023639:	hlt    
 102363a:	clc    
 102363b:	add    BYTE PTR [ecx-0x7bff0305],al
 1023641:	sti    
 1023642:	std    
 1023643:	add    BYTE PTR [esp+edi*8-0x176ff02],al
 102364a:	inc    BYTE PTR [eax]
 102364c:	mov    edi,?
 102364e:	inc    DWORD PTR [eax]
 1023650:	xchg   ebx,eax
 1023651:	hlt    
 1023652:	stc    
 1023653:	add    BYTE PTR [esp+esi*8-0xa5fff07],dl
 102365a:	stc    
 102365b:	add    BYTE PTR [ebp-0x45ff050a],ch
 1023661:	idiv   ebx
 1023663:	add    BYTE PTR [ecx-0x46ff0408],bh
 1023669:	clc    
 102366a:	cld    
 102366b:	add    bh,bl
 102366d:	int3   
 102366e:	rol    DWORD PTR [eax],0xd8
 1023671:	aad    0xd3
 1023673:	add    ah,ah
 1023675:	iret   
 1023676:	les    eax,FWORD PTR [eax]
 1023678:	loopne 0x102364b
 102367a:	mov    DWORD PTR [eax],0xc8d2e0
 1023680:	out    0xd3,al
 1023682:	leave  
 1023683:	add    bh,ah
 1023685:	aad    0xcb
 1023687:	add    bl,ch
 1023689:	fcmovnbe st,st(3)
 102368b:	add    ah,ch
 102368d:	fst    st(5)
 102368f:	add    ch,ch
 1023691:	(bad)  
 1023693:	add    dl,ch
 1023695:	loopne 0x102366f
 1023697:	add    dh,ch
 1023699:	loope  0x1023675
 102369b:	add    bh,bl
 102369d:	loop   0x1023685
 102369f:	add    dh,al
 10236a1:	stc    
 10236a2:	sti    
 10236a3:	add    dh,al
 10236a5:	stc    
 10236a6:	cld    
 10236a7:	add    dl,dl
 10236a9:	cli    
 10236aa:	cld    
 10236ab:	add    dh,bl
 10236ad:	sti    
 10236ae:	std    
 10236af:	add    ch,bl
 10236b1:	cld    
 10236b2:	std    
 10236b3:	add    cl,dh
 10236b5:	out    0xe1,eax
 10236b7:	add    dl,dh
 10236b9:	jmp    0xecf437a1
 10236be:	out    0x0,eax
 10236c0:	hlt    
 10236c1:	jmp    0x10236a9
 10236c3:	add    ch,dh
 10236c5:	in     eax,dx
 10236c6:	jmp    0xeff42dcb
 10236cb:	add    cl,ah
 10236cd:	std    
 10236ce:	std    
 10236cf:	add    al,ch
 10236d1:	cld    
 10236d2:	std    
 10236d3:	add    al,bh
 10236d5:	repz lock add cl,bh
 10236d9:	cmc    
 10236da:	repnz add dl,bh
 10236dd:	div    ebp
 10236df:	add    cl,dh
 10236e1:	std    
 10236e2:	inc    BYTE PTR [eax]
 10236e4:	cld    
 10236e5:	cli    
 10236e6:	stc    
 10236e7:	add    ch,bh
 10236e9:	cld    
 10236ea:	sti    
 10236eb:	add    cl,bh
 10236ed:	(bad)  
 10236ee:	inc    BYTE PTR [eax]
 10236f0:	(bad)  
 10236f1:	(bad)  
 10236f2:	inc    BYTE PTR [eax]
	...
 1023840:	lods   eax,DWORD PTR ds:[esi]
 1023841:	lods   eax,DWORD PTR ds:[esi]
 1023842:	lods   eax,DWORD PTR ds:[esi]
 1023843:	lods   eax,DWORD PTR ds:[esi]
 1023844:	imul   eax,DWORD PTR [ecx],0x1010101
 102384a:	add    DWORD PTR [ebp-0x52525253],ebp
 1023850:	lods   eax,DWORD PTR ds:[esi]
 1023851:	lods   eax,DWORD PTR ds:[esi]
 1023852:	imul   eax,DWORD PTR [ecx],0x8f95a969
 1023858:	jp     0x10238d3
 102385a:	add    DWORD PTR [ebp-0x52525253],ebp
 1023860:	imul   eax,DWORD PTR [ecx],0xa969a969
 1023866:	jo     0x10238d7
 1023868:	ins    BYTE PTR es:[edi],dx
 1023869:	jns    0x102386c
 102386b:	add    BYTE PTR [edi+0x69adadad],dl
 1023871:	test   eax,0xaa71a969
 1023876:	lods   al,BYTE PTR ds:[esi]
 1023877:	lahf   
 1023878:	xchg   ebp,eax
 1023879:	jns    0x102387c
 102387b:	sbb    BYTE PTR [eax],al
 102387d:	add    BYTE PTR [edi+0x71a969ad],dl
 1023883:	stos   BYTE PTR es:[edi],al
 1023884:	jne    0x102382f
 1023886:	jo     0x10238f8
 1023888:	mov    WORD PTR [ecx+0x1],?
 102388b:	sbb    eax,0xa001218
 1023890:	jno    0x102383c
 1023892:	jne    0x102383d
 1023894:	ja     0x102383f
 1023896:	test   eax,0x20202a9
 102389b:	and    DWORD PTR [eax+ebx*1],ebx
 102389e:	adc    eax,DWORD PTR [ebx]
 10238a0:	jne    0x102384b
 10238a2:	ja     0x102384d
 10238a4:	js     0x102384f
 10238a6:	test   eax,0x8b7202a9
 10238ab:	daa    
 10238ac:	and    DWORD PTR [eax+ebx*1],ebx
 10238af:	add    esi,DWORD PTR [edi-0x57]
 10238b2:	js     0x102385d
 10238b4:	js     0x102392e
 10238b6:	ja     0x102392a
 10238b8:	jb     0x1023845
 10238ba:	cmp    BYTE PTR [edi+eiz*1],dh
 10238bd:	and    BYTE PTR ds:0x78a97803,bl
 10238c3:	js     0x102393c
 10238c5:	imul   ebp,DWORD PTR [ecx-0x75],0x393d4e55
 10238cc:	xor    al,0x27
 10238ce:	and    BYTE PTR [ebx],al
 10238d0:	js     0x102394a
 10238d2:	ja     0x102393d
 10238d4:	imul   ecx,DWORD PTR [ebx+0x48668183],0x393d401c
 10238de:	xor    al,0x3
 10238e0:	lods   eax,DWORD PTR ds:[esi]
 10238e1:	lods   eax,DWORD PTR ds:[esi]
 10238e2:	lods   eax,DWORD PTR ds:[esi]
 10238e3:	lods   eax,DWORD PTR ds:[esi]
 10238e4:	add    DWORD PTR cs:[ebx+0x7da34848],0x1c
 10238ec:	sbb    al,0x3d
 10238ee:	cmp    BYTE PTR [ebx],al
 10238f0:	lods   eax,DWORD PTR ds:[esi]
 10238f1:	lods   eax,DWORD PTR ds:[esi]
 10238f2:	lods   eax,DWORD PTR ds:[esi]
 10238f3:	lods   eax,DWORD PTR ds:[esi]
 10238f4:	sub    ecx,DWORD PTR [eax+0x48]
 10238f7:	lods   al,BYTE PTR ds:[esi]
 10238f8:	test   al,0xa3
 10238fa:	jge    0x102395d
 10238fc:	pop    ecx
 10238fd:	sbb    al,0x1c
 10238ff:	add    ebp,DWORD PTR [ebp+0x2dadadad]
 1023905:	push   ss
 1023906:	lods   al,BYTE PTR ds:[esi]
 1023907:	lods   al,BYTE PTR ds:[esi]
 1023908:	test   al,0xa3
 102390a:	jle    0x102396d
 102390c:	pop    ecx
 102390d:	push   esp
 102390e:	push   ss
 102390f:	add    ebp,DWORD PTR [ebp-0x52525253]
 1023915:	xchg   edi,eax
 1023916:	push   ss
 1023917:	push   ss
 1023918:	test   al,0xa3
 102391a:	jge    0x102397a
 102391c:	push   ss
 102391d:	push   ss
 102391e:	xchg   edi,eax
 102391f:	lods   eax,DWORD PTR ds:[esi]
 1023920:	lods   eax,DWORD PTR ds:[esi]
 1023921:	lods   eax,DWORD PTR ds:[esi]
 1023922:	lods   eax,DWORD PTR ds:[esi]
 1023923:	lods   eax,DWORD PTR ds:[esi]
 1023924:	lods   eax,DWORD PTR ds:[esi]
 1023925:	lods   eax,DWORD PTR ds:[esi]
 1023926:	lods   eax,DWORD PTR ds:[esi]
 1023927:	xchg   edi,eax
 1023928:	push   ss
 1023929:	push   ss
 102392a:	push   ss
 102392b:	push   ss
 102392c:	xchg   edi,eax
 102392d:	lods   eax,DWORD PTR ds:[esi]
 102392e:	lods   eax,DWORD PTR ds:[esi]
 102392f:	lods   eax,DWORD PTR ds:[esi]
 1023930:	lods   eax,DWORD PTR ds:[esi]
 1023931:	lods   eax,DWORD PTR ds:[esi]
 1023932:	lods   eax,DWORD PTR ds:[esi]
 1023933:	lods   eax,DWORD PTR ds:[esi]
 1023934:	lods   eax,DWORD PTR ds:[esi]
 1023935:	lods   eax,DWORD PTR ds:[esi]
 1023936:	lods   eax,DWORD PTR ds:[esi]
 1023937:	lods   eax,DWORD PTR ds:[esi]
 1023938:	lods   eax,DWORD PTR ds:[esi]
 1023939:	xchg   edi,eax
 102393a:	xchg   edi,eax
 102393b:	lods   eax,DWORD PTR ds:[esi]
 102393c:	lods   eax,DWORD PTR ds:[esi]
 102393d:	lods   eax,DWORD PTR ds:[esi]
 102393e:	lods   eax,DWORD PTR ds:[esi]
 102393f:	lods   eax,DWORD PTR ds:[esi]
 1023940:	lock pop ds
 1023942:	lods   al,BYTE PTR ds:[esi]
 1023943:	test   eax,0xf111fc0
 1023948:	add    BYTE PTR [edi],al
 102394a:	lods   al,BYTE PTR ds:[esi]
 102394b:	lods   al,BYTE PTR ds:[esi]
 102394c:	add    BYTE PTR [ecx],al
 102394e:	lods   al,BYTE PTR ds:[esi]
 102394f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1023950:	add    BYTE PTR [eax],al
 1023952:	add    DWORD PTR [esi],esi
 1023954:	add    BYTE PTR [eax],al
 1023956:	and    eax,0x19000023
 102395b:	add    BYTE PTR [eax],al
 102395d:	add    BYTE PTR [ebp+0x110000ad],ch
 1023963:	sldt   WORD PTR [eax]
 1023966:	lods   al,BYTE PTR ds:[esi]
 1023967:	lods   al,BYTE PTR ds:[esi]
 1023968:	lock add BYTE PTR [ecx],dl
 102396b:	(bad)  
 102396d:	add    BYTE PTR [edx+ebp*4+0x370200f0],ch
 1023974:	clc    
 1023975:	add    DWORD PTR [edi],esp
 1023977:	and    eax,0x191b07fe
 102397c:	call   FWORD PTR [edi+0x289700]
 1023982:	add    BYTE PTR [eax],al
 1023984:	adc    BYTE PTR [eax],al
 1023986:	add    BYTE PTR [eax],al
 1023988:	and    BYTE PTR [eax],al
 102398a:	add    BYTE PTR [eax],al
 102398c:	add    DWORD PTR [eax],eax
 102398e:	or     BYTE PTR [eax],al
 1023990:	add    BYTE PTR [eax],al
 1023992:	add    BYTE PTR [eax],al
 1023994:	add    BYTE PTR [ecx],al
	...
 102399e:	add    BYTE PTR [eax],al
 10239a0:	add    BYTE PTR [ecx],al
 10239a2:	add    BYTE PTR [eax],al
 10239a4:	add    BYTE PTR [ecx],al
 10239a6:	add    BYTE PTR [eax],al
 10239a8:	add    BYTE PTR [eax],al
 10239aa:	add    BYTE PTR [eax],al
 10239ac:	add    BYTE PTR [ebp-0x69fc0000],dl
 10239b2:	add    al,0x0
 10239b4:	add    BYTE PTR [eax-0x66e70000],bl
 10239ba:	add    BYTE PTR [eax],al
 10239bc:	and    BYTE PTR [ebx-0x62d70000],bl
 10239c2:	add    BYTE PTR [eax],al
 10239c4:	sub    al,0x9e
 10239c6:	add    BYTE PTR [eax],al
 10239c8:	xor    ebx,DWORD PTR [edi-0x5ec7fff6]
 10239ce:	and    DWORD PTR [eax],eax
 10239d0:	mov    ds:0xab360027,al
 10239d6:	add    BYTE PTR ss:[ebp*4-0x5bbbffc4],bh
 10239de:	sub    eax,0x34a44300
 10239e3:	add    BYTE PTR [esi-0x5b],al
 10239e6:	cmp    BYTE PTR [eax],al
 10239e8:	dec    ecx
 10239e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10239ea:	cmp    BYTE PTR [eax],al
 10239ec:	dec    ebp
 10239ed:	test   al,0x3a
 10239ef:	add    BYTE PTR [edi],bh
 10239f1:	lods   al,BYTE PTR ds:[esi]
 10239f2:	inc    eax
 10239f3:	add    BYTE PTR [eax-0x58],dl
 10239f6:	inc    edx
 10239f7:	add    BYTE PTR [edi-0x54],dl
 10239fa:	dec    eax
 10239fb:	add    BYTE PTR [ecx-0x53],bl
 10239fe:	dec    ebp
 10239ff:	add    BYTE PTR [edi-0x47],dl
 1023a02:	push   edi
 1023a03:	add    BYTE PTR [ecx-0x46],bl
 1023a06:	pop    ecx
 1023a07:	add    BYTE PTR [ebx-0x44],bl
 1023a0a:	pop    ebx
 1023a0b:	add    BYTE PTR [eax-0x51],ah
 1023a0e:	pop    ecx
 1023a0f:	add    BYTE PTR [ecx+esi*4+0x5c],ah
 1023a13:	add    BYTE PTR [edx-0x43],ch
 1023a16:	pop    eax
 1023a17:	add    BYTE PTR [edi-0x4e],ah
 1023a1a:	pusha  
 1023a1b:	add    BYTE PTR [eax-0x4e],ch
 1023a1e:	popa   
 1023a1f:	add    BYTE PTR [eax-0x4a],dh
 1023a22:	imul   eax,DWORD PTR [eax],0x6cb773
 1023a28:	jb     0x10239e2
 1023a2a:	push   0x0
 1023a2c:	jne    0x10239e7
 1023a2e:	outs   dx,BYTE PTR ds:[esi]
 1023a2f:	add    BYTE PTR [ebp-0x3f],dh
 1023a32:	jne    0x1023a34
 1023a34:	js     0x10239fd
 1023a36:	js     0x1023a38
 1023a38:	add    BYTE PTR [eax-0x51eeff55],ah
 1023a3e:	mov    eax,0xb9b02a00
 1023a43:	add    BYTE PTR [edx],bl
 1023a45:	mov    ch,0xc0
 1023a47:	add    BYTE PTR [edi],dh
 1023a49:	mov    ebx,0xbb3800c5
 1023a4e:	les    eax,FWORD PTR [eax]
 1023a50:	xor    al,0xcb
 1023a52:	aad    0x0
 1023a54:	push   ebp
 1023a55:	rcr    esp,cl
 1023a57:	add    BYTE PTR [ebp-0x2c],dl
 1023a5a:	fadd   QWORD PTR [eax]
 1023a5c:	jg     0x1023a2d
 1023a5e:	aad    0x0
 1023a60:	inc    edi
 1023a61:	ftst   
 1023a63:	add    BYTE PTR [eax-0xb],ch
 1023a66:	inc    DWORD PTR [eax]
 1023a68:	mov    ebx,eax
 1023a6a:	xchg   DWORD PTR [eax],eax
 1023a6c:	xchg   ecx,eax
 1023a6d:	enter  0x8d,0x94
 1023a71:	enter  0x8f,0x94
 1023a75:	(bad)  
 1023a76:	xchg   ecx,eax
 1023a77:	add    BYTE PTR [edx+ecx*8-0x3468ff6f],dl
 1023a7e:	xchg   ebp,eax
 1023a7f:	add    BYTE PTR [esi-0x55ff592e],ah
 1023a85:	aam    0xa9
 1023a87:	add    BYTE PTR [ebx-0x1aff0e14],ah
 1023a8d:	cmc    
 1023a8e:	test   BYTE PTR [eax],0xea
 1023a91:	cli    
 1023a92:	sti    
	...
 1023dab:	add    DWORD PTR [eax],eax
 1023dad:	add    BYTE PTR [eax],al
 1023daf:	add    BYTE PTR [eax],al
 1023db1:	sub    eax,0x2d2626
 1023db6:	add    BYTE PTR [eax],al
 1023db8:	add    BYTE PTR [eax],al
 1023dba:	add    BYTE PTR [ecx],al
 1023dbc:	add    DWORD PTR [eax],eax
 1023dbe:	add    BYTE PTR [eax],al
 1023dc0:	sub    eax,0x24242424
 1023dc5:	sub    eax,0x0
 1023dca:	add    al,0x6
 1023dcc:	add    DWORD PTR [ecx],eax
 1023dce:	add    BYTE PTR [eax],al
 1023dd0:	sub    DWORD PTR [edi],esp
 1023dd2:	and    eax,0x262424
 1023dd7:	add    BYTE PTR [eax],al
 1023dd9:	or     DWORD PTR [eax],esi
 1023ddb:	push   ds
 1023ddc:	adc    eax,DWORD PTR ds:0x2e2b0009
 1023de2:	sub    ah,BYTE PTR ds:0x2624
 1023de8:	sbb    DWORD PTR [ebx],esi
 1023dea:	or     eax,0xf3431
 1023def:	add    BYTE PTR [eax],bh
 1023df1:	das    
 1023df2:	cs daa 
 1023df4:	and    al,0x2d
 1023df6:	add    BYTE PTR [eax],al
 1023df8:	sbb    BYTE PTR [edx],dl
 1023dfa:	add    BYTE PTR [ecx],dl
 1023dfc:	adc    eax,0x0
 1023e01:	cmp    BYTE PTR [ebx],ch
 1023e03:	sub    BYTE PTR ds:0x18000000,ch
 1023e09:	add    BYTE PTR [eax],al
 1023e0b:	and    DWORD PTR [eax],eax
	...
 1023e15:	add    BYTE PTR [ecx],al
 1023e17:	add    BYTE PTR [esi],dl
	...
 1023e25:	add    BYTE PTR [eax],al
 1023e27:	or     esp,DWORD PTR [ebx]
	...
 1023e35:	add    BYTE PTR [eax],al
 1023e37:	add    DWORD PTR [eax],eax
 1023e39:	or     al,0x0
	...
 1023e43:	add    BYTE PTR [esi],al
 1023e45:	add    BYTE PTR [eax],al
 1023e47:	add    DWORD PTR [eax],eax
 1023e49:	add    BYTE PTR [eax],al
 1023e4b:	sub    eax,0x2d2626
 1023e50:	add    BYTE PTR [eax],al
 1023e52:	add    BYTE PTR [esi],al
 1023e54:	add    DWORD PTR [eax],eax
 1023e56:	add    DWORD PTR [ebx],eax
 1023e58:	add    BYTE PTR [eax],al
 1023e5a:	sub    eax,0x24242424
 1023e5f:	sub    eax,0x21100000
 1023e64:	or     BYTE PTR [ecx],al
 1023e66:	push   es
 1023e67:	sbb    eax,DWORD PTR [eax]
 1023e69:	add    BYTE PTR [ecx],ch
 1023e6b:	daa    
 1023e6c:	and    eax,0x262424
 1023e71:	push   ds
 1023e72:	xor    eax,0x101d3137
 1023e77:	add    BYTE PTR [eax],al
 1023e79:	add    BYTE PTR [ebx],ch
 1023e7b:	sub    ah,BYTE PTR cs:0x2624
 1023e82:	and    DWORD PTR [esi],esi
 1023e84:	sbb    eax,0x1a
 1023e89:	add    BYTE PTR [eax],bh
 1023e8b:	das    
 1023e8c:	cs daa 
 1023e8e:	and    al,0x2d
 1023e90:	add    BYTE PTR [eax],al
 1023e92:	add    BYTE PTR [ecx],ah
 1023e94:	adc    eax,DWORD PTR [eax]
 1023e96:	add    BYTE PTR [eax],al
 1023e98:	add    BYTE PTR [eax],al
 1023e9a:	add    BYTE PTR [eax],bh
 1023e9c:	sub    ebp,DWORD PTR [eax]
 1023e9e:	sub    eax,0x0
 1023ea3:	add    BYTE PTR ds:0xef000000,dl
 1023ea9:	xchg   DWORD PTR [eax],eax
 1023eab:	add    bh,ah
 1023ead:	add    eax,DWORD PTR [eax]
 1023eaf:	add    bl,al
 1023eb1:	add    eax,DWORD PTR [eax]
 1023eb3:	add    BYTE PTR [ecx+0x3000003],al
 1023eb9:	add    eax,DWORD PTR [eax]
 1023ebb:	add    BYTE PTR [edi],ah
 1023ebd:	xchg   DWORD PTR [eax],eax
 1023ebf:	add    BYTE PTR [edi-0x3],ch
 1023ec2:	add    BYTE PTR [eax],al
 1023ec4:	jg     0x1023ec4
 1023ec6:	add    BYTE PTR [eax],al
 1023ec8:	jg     0x1023ec8
 1023eca:	add    BYTE PTR [eax],al
 1023ecc:	mov    edi,0xe10000f6
 1023ed1:	in     al,0x0
 1023ed3:	add    al,al
 1023ed5:	rol    BYTE PTR [eax],0x0
 1023ed8:	rol    BYTE PTR [ecx-0x3c400000],0x0
 1023edf:	add    al,al
 1023ee1:	out    0x0,eax
 1023ee3:	add    cl,ah
 1023ee5:	test   DWORD PTR [eax],0x2800
 1023eeb:	add    BYTE PTR [eax],dl
 1023eed:	add    BYTE PTR [eax],al
 1023eef:	add    BYTE PTR [eax],ah
 1023ef1:	add    BYTE PTR [eax],al
 1023ef3:	add    BYTE PTR [ecx],al
 1023ef5:	add    BYTE PTR [eax],ah
 1023ef7:	add    BYTE PTR [eax],al
 1023ef9:	add    BYTE PTR [eax],al
 1023efb:	add    BYTE PTR [eax+0x4],al
	...
 1023f1a:	add    BYTE PTR [eax],al
 1023f1c:	add    BYTE PTR [eax+eax*1+0xff],dl
	...
 1023f33:	add    BYTE PTR [edi-0x31],bh
 1023f36:	aad    0xff
 1023f38:	sub    dh,BYTE PTR [eax-0x4fd50047]
 1023f3e:	mov    ecx,0xd5cf7fff
 1023f43:	inc    DWORD PTR [eax]
	...
 1023f5d:	xchg   ebp,eax
 1023f5e:	add    bh,bh
 1023f60:	add    BYTE PTR [eax+eax*1+0xff],dl
	...
 1023f6f:	add    BYTE PTR [edi-0x31],bh
 1023f72:	aad    0xff
 1023f74:	add    BYTE PTR [eax-0x5fff0055],ah
 1023f7a:	stos   DWORD PTR es:[edi],eax
 1023f7b:	inc    DWORD PTR [eax]
 1023f7d:	mov    al,ds:0xa000ffab
 1023f82:	stos   DWORD PTR es:[edi],eax
 1023f83:	(bad)  
 1023f84:	jg     0x1023f55
 1023f86:	aad    0xff
	...
 1023f98:	sbb    DWORD PTR [ecx-0x62d70100],ebx
 1023f9e:	add    bh,bh
 1023fa0:	add    BYTE PTR [edi-0x6aff0100],dl
 1023fa6:	add    bh,bh
	...
 1023fb0:	cmp    BYTE PTR [ebx-0x4ae5003c],bh
 1023fb6:	sar    bh,0x11
 1023fb9:	scas   al,BYTE PTR es:[edi]
 1023fba:	mov    eax,0xaba000ff
 1023fbf:	inc    DWORD PTR [eax]
 1023fc1:	mov    al,ds:0xb02affab
 1023fc6:	mov    ecx,0xff
	...
 1023fd3:	add    BYTE PTR [eax],bh
 1023fd5:	mov    eax,ds:0xc389ff21
 1023fda:	xchg   edi,edi
 1023fdc:	jo     0x1023f94
 1023fde:	imul   edi,edi,0xff42a850
 1023fe4:	and    BYTE PTR [ebx-0x5dc10100],bl
 1023fea:	daa    
 1023feb:	inc    DWORD PTR [eax]
 1023fed:	add    BYTE PTR [eax],al
 1023fef:	add    BYTE PTR [ebp-0x2d],dl
 1023ff2:	fdiv   st(7),st
 1023ff4:	inc    edi
 1023ff5:	(bad)  
 1023ff7:	push   DWORD PTR [ebx+ecx*8]
 1023ffa:	aad    0xff
 1023ffc:	adc    DWORD PTR [esi-0x5fff0048],ebp
 1024002:	stos   DWORD PTR es:[edi],eax
 1024003:	jmp    FWORD PTR [edx]
 1024005:	mov    al,0xb9
 1024007:	inc    DWORD PTR [eax]
 1024009:	add    BYTE PTR [eax],al
 102400b:	add    BYTE PTR [eax],al
 102400d:	add    BYTE PTR [eax],al
 102400f:	add    BYTE PTR [eax-0x51],ah
 1024012:	pop    ecx
 1024013:	call   DWORD PTR [edi+eax*8-0x5bbb006f]
 102401a:	sub    eax,0x8dc891ff
 102401f:	call   DWORD PTR [edx+ecx*8-0x5ab9006f]
 1024026:	cmp    bh,bh
	...
 1024030:	mov    ds:0x68fff1ec,eax
 1024035:	cmc    
 1024036:	(bad)  
 1024037:	inc    DWORD PTR [edi-0x27]
 102403a:	in     al,0xff
 102403c:	sbb    dh,BYTE PTR [esi-0x5fff0040]
 1024042:	stos   DWORD PTR es:[edi],eax
 1024043:	(bad)  
 1024044:	jg     0x1024015
 1024046:	aad    0xff
	...
 1024050:	pop    ebx
 1024051:	mov    esp,0xac3fff5b
 1024056:	inc    eax
 1024057:	inc    DWORD PTR [eax]
 1024059:	add    BYTE PTR [eax],al
 102405b:	add    BYTE PTR [ebp-0x58],cl
 102405e:	cmp    bh,bh
 1024060:	pop    ecx
 1024061:	lods   eax,DWORD PTR ds:[esi]
 1024062:	dec    ebp
 1024063:	inc    DWORD PTR [eax]
	...
 1024071:	add    BYTE PTR [eax],al
 1024073:	add    BYTE PTR [ebx+0x55fff1ec],ah
 1024079:	aam    0xdc
 102407b:	push   DWORD PTR [edi]
 102407d:	mov    ebx,0xcf7fffc5
 1024082:	aad    0xff
	...
 1024090:	pop    ecx
 1024091:	mov    edx,0xff59
 1024096:	add    BYTE PTR [eax],al
 1024098:	add    BYTE PTR [eax],al
 102409a:	add    BYTE PTR [eax],al
 102409c:	je     0x1024056
 102409e:	outs   dx,BYTE PTR ds:[esi]
 102409f:	inc    DWORD PTR [eax]
	...
 10240c9:	xchg   esp,eax
 10240ca:	add    bh,bh
 10240cc:	add    BYTE PTR [eax],al
 10240ce:	add    BYTE PTR [eax],al
 10240d0:	push   edi
 10240d1:	mov    ecx,0xff57
	...
 102410a:	add    BYTE PTR [eax],al
 102410c:	ss stos DWORD PTR es:[edi],eax
 102410e:	ss (bad) 
 1024110:	js     0x10240d9
 1024112:	js     0x1024113
	...
 102414c:	add    BYTE PTR [eax+eax*1+0xff],dl
 1024153:	add    BYTE PTR [ebp*4+0xff3c],bh
	...
 102417e:	add    BYTE PTR [eax],al
 1024180:	sub    al,0x9e
 1024182:	add    bh,bh
	...
 102418c:	add    BYTE PTR [ebp+0xff00],dl
	...
 102419a:	add    BYTE PTR [eax],al
 102419c:	jg     0x102416d
 102419e:	aad    0xff
 10241a0:	sub    dh,BYTE PTR [eax-0x4fd50047]
 10241a6:	mov    ecx,0xd5cf7fff
 10241ab:	inc    DWORD PTR [eax]
	...
 10241b9:	add    BYTE PTR [eax],al
 10241bb:	add    BYTE PTR [ebx],ch
 10241bd:	popf   
 10241be:	add    bh,bh
 10241c0:	add    BYTE PTR [esi+0xff00],dl
 10241c6:	add    BYTE PTR [eax],al
 10241c8:	add    al,0x96
 10241ca:	add    al,0xff
 10241cc:	add    BYTE PTR [eax+0xff00],bl
 10241d2:	add    BYTE PTR [eax],al
 10241d4:	add    BYTE PTR [eax],al
 10241d6:	add    BYTE PTR [eax],al
 10241d8:	jg     0x10241a9
 10241da:	aad    0xff
 10241dc:	add    BYTE PTR [eax-0x5fff0055],ah
 10241e2:	stos   DWORD PTR es:[edi],eax
 10241e3:	inc    DWORD PTR [eax]
 10241e5:	mov    al,ds:0xa000ffab
 10241ea:	stos   DWORD PTR es:[edi],eax
 10241eb:	(bad)  
 10241ec:	jg     0x10241bd
 10241ee:	aad    0xff
	...
 10241f8:	dec    ecx
 10241f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10241fa:	cmp    bh,bh
 10241fc:	jbe    0x10241b8
 10241fe:	outs   dx,DWORD PTR ds:[esi]
 10241ff:	push   DWORD PTR [ebx]
 1024201:	lahf   
 1024202:	or     bh,bh
 1024204:	add    BYTE PTR [edi-0x61d30100],dl
 102420a:	add    bh,bh
 102420c:	push   0xffffffbd
 102420e:	pop    eax
 102420f:	inc    DWORD PTR [eax]
 1024211:	add    BYTE PTR [eax],al
 1024213:	add    BYTE PTR [eax],al
 1024215:	add    BYTE PTR [eax],al
 1024217:	add    BYTE PTR [eax],bh
 1024219:	mov    ebx,0xb51affc4
 102421e:	sar    bh,0x11
 1024221:	scas   al,BYTE PTR es:[edi]
 1024222:	mov    eax,0xaba000ff
 1024227:	inc    DWORD PTR [eax]
 1024229:	mov    al,ds:0xb02affab
 102422e:	mov    ecx,0xff
 1024233:	add    BYTE PTR [ebx-0x49],dh
 1024236:	ins    BYTE PTR es:[edi],dx
 1024237:	call   DWORD PTR [edi-0x55006a35]
 102423d:	aam    0xa9
 102423f:	call   DWORD PTR [eax+ecx*8-0x4d970071]
 1024246:	popa   
 1024247:	inc    DWORD PTR [ebx-0x5c]
 102424a:	xor    al,0xff
	...
 1024258:	push   ebp
 1024259:	rcr    esp,cl
 102425b:	inc    DWORD PTR [edi-0x26]
 102425e:	in     al,0xff
 1024260:	xor    al,0xcb
 1024262:	aad    0xff
 1024264:	adc    DWORD PTR [esi-0x5fff0048],ebp
 102426a:	stos   DWORD PTR es:[edi],eax
 102426b:	jmp    FWORD PTR [edx]
 102426d:	mov    al,0xb9
 102426f:	inc    DWORD PTR [eax]
 1024271:	add    BYTE PTR [eax],al
 1024273:	add    BYTE PTR [eax],al
 1024275:	add    BYTE PTR [eax],al
 1024277:	add    BYTE PTR [ecx-0x48],dh
 102427a:	imul   edi,edi,0xffffffa6
 102427d:	shl    BYTE PTR [esi+0x60b267ff],cl
 1024283:	jmp    DWORD PTR [ecx+esi*4+0x5c]
 1024287:	inc    DWORD PTR [eax]
	...
 1024295:	add    BYTE PTR [eax],al
 1024297:	add    BYTE PTR [ebx+0x68fff1ec],ah
 102429d:	cmc    
 102429e:	(bad)  
 102429f:	inc    DWORD PTR [edi-0x27]
 10242a2:	in     al,0xff
 10242a4:	sbb    dh,BYTE PTR [esi-0x5fff0040]
 10242aa:	stos   DWORD PTR es:[edi],eax
 10242ab:	(bad)  
 10242ac:	jg     0x102427d
 10242ae:	aad    0xff
	...
 10242bc:	jae    0x1024276
 10242be:	push   0xffffffff
 10242c0:	push   edi
 10242c1:	lods   al,BYTE PTR ds:[esi]
 10242c2:	dec    eax
 10242c3:	inc    DWORD PTR [eax]
	...
 10242d9:	add    BYTE PTR [eax],al
 10242db:	add    BYTE PTR [ebx+0x55fff1ec],ah
 10242e1:	aam    0xdc
 10242e3:	push   DWORD PTR [edi]
 10242e5:	mov    ebx,0xcf7fffc5
 10242ea:	aad    0xff
	...
 1024300:	push   edi
 1024301:	lods   al,BYTE PTR ds:[esi]
 1024302:	dec    eax
 1024303:	inc    DWORD PTR [eax]
	...
 102430d:	add    BYTE PTR [eax],al
 102430f:	add    bh,ch
 1024311:	xchg   DWORD PTR [eax],eax
 1024313:	add    bh,ah
 1024315:	add    eax,DWORD PTR [eax]
 1024317:	add    bl,al
 1024319:	add    eax,DWORD PTR [eax]
 102431b:	add    BYTE PTR [ecx+0x3000003],al
 1024321:	add    eax,DWORD PTR [eax]
 1024323:	add    BYTE PTR [edi],ah
 1024325:	xchg   DWORD PTR [eax],eax
 1024327:	add    BYTE PTR [edi-0x3],ch
 102432a:	add    BYTE PTR [eax],al
 102432c:	jg     0x102432c
 102432e:	add    BYTE PTR [eax],al
 1024330:	jg     0x1024330
 1024332:	add    BYTE PTR [eax],al
 1024334:	mov    edi,0xe10000f6
 1024339:	in     al,0x0
 102433b:	add    al,al
 102433d:	rol    BYTE PTR [eax],0x0
 1024340:	rol    BYTE PTR [ecx-0x3c400000],0x0
 1024347:	add    al,al
 1024349:	out    0x0,eax
 102434b:	add    cl,ah
 102434d:	test   DWORD PTR [eax],0x2800
 1024353:	add    BYTE PTR [eax+0x0],al
 1024356:	add    BYTE PTR [eax],al
 1024358:	add    BYTE PTR [eax],0x0
 102435b:	add    BYTE PTR [ecx],al
 102435d:	add    BYTE PTR [eax],cl
 102435f:	add    BYTE PTR [eax],al
 1024361:	add    BYTE PTR [eax],al
 1024363:	add    BYTE PTR [eax],al
 1024365:	adc    BYTE PTR [eax],al
	...
 102436f:	add    BYTE PTR [eax],al
 1024371:	add    DWORD PTR [eax],eax
 1024373:	add    BYTE PTR [eax],al
 1024375:	add    DWORD PTR [eax],eax
 1024377:	add    BYTE PTR [eax],al
 1024379:	add    BYTE PTR [eax],al
 102437b:	add    BYTE PTR [ebp+eax*2+0x32],bl
 102437f:	add    BYTE PTR [esi+0x48],bl
 1024382:	xor    eax,0x37496000
 1024387:	add    BYTE PTR [edi+0x4f],ah
 102438a:	cmp    eax,0x7f561a00
 102438f:	add    BYTE PTR [esi+edx*2+0x44],ch
 1024393:	add    BYTE PTR [esi+ebx*2+0x4c],dh
 1024397:	add    BYTE PTR [ebp+0x62],ch
 102439a:	pop    ebx
 102439b:	add    BYTE PTR [ebx+0x65],bh
 102439e:	push   edx
 102439f:	add    BYTE PTR [ecx+ebp*2+0x55],bh
 10243a3:	add    BYTE PTR [eax-0x7bffa693],al
 10243a9:	outs   dx,BYTE PTR ds:[esi]
 10243aa:	pop    esp
 10243ab:	add    BYTE PTR [ebx-0x7affa390],al
 10243b1:	jno    0x1024410
 10243b3:	add    BYTE PTR [edi-0x75ff9f8c],al
 10243b9:	jbe    0x102441d
 10243bb:	add    BYTE PTR [ebp-0x6eff9a88],cl
 10243c1:	jge    0x102442d
 10243c3:	add    BYTE PTR [esi-0x66ff9180],dl
 10243c9:	test   BYTE PTR [edx+0x0],dh
 10243cc:	sahf   
 10243cd:	mov    DWORD PTR [edi+0x0],esi
 10243d0:	mov    eax,ds:0xa7007a8c
 10243d5:	nop
 10243d6:	jg     0x10243d8
 10243d8:	and    al,0x5d
 10243da:	add    DWORD PTR [eax],0x2a
 10243dd:	arpl   WORD PTR [ecx-0x6c90ca00],cx
 10243e3:	add    BYTE PTR [ecx],bh
 10243e5:	outs   dx,DWORD PTR ds:[esi]
 10243e6:	xchg   ecx,eax
 10243e7:	add    BYTE PTR [esi],ch
 10243e9:	ja     0x102438a
 10243eb:	add    BYTE PTR [edx+esi*2],dh
 10243ee:	xchg   esi,eax
 10243ef:	add    BYTE PTR [edx],dh
 10243f1:	jne    0x102438e
 10243f3:	add    BYTE PTR [edx],bh
 10243f5:	jbe    0x1024391
 10243f7:	add    BYTE PTR [edx+edi*2],bh
 10243fa:	popf   
 10243fb:	add    BYTE PTR [ebp+0x76],bl
 10243fe:	mov    eax,DWORD PTR [eax]
 1024400:	inc    eax
 1024401:	jp     0x102439f
 1024403:	add    BYTE PTR [edx+0x7e],al
 1024406:	mov    eax,ds:0xa07f4d00
 102440b:	add    BYTE PTR [esi-0x7e],cl
 102440e:	fwait
 102440f:	add    BYTE PTR [eax-0x7a],dl
 1024412:	sahf   
 1024413:	add    BYTE PTR [ecx+eax*4-0x6d],ch
 1024417:	add    BYTE PTR [ebx-0x78],dh
 102441a:	cwde   
 102441b:	add    BYTE PTR [ecx-0x75],bh
 102441e:	cdq    
 102441f:	add    BYTE PTR [esi-0x74],bh
 1024422:	call   0x7e00:0x9d8f7a00
 1024429:	nop
 102442a:	popf   
 102442b:	add    BYTE PTR [ebx+eax*4-0x5c],al
 102442f:	add    BYTE PTR [ebx-0x7d],cl
 1024432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1024433:	add    BYTE PTR [edx-0x78],cl
 1024436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1024437:	add    BYTE PTR [esi-0x72],cl
 102443a:	scas   al,BYTE PTR es:[edi]
 102443b:	add    BYTE PTR [ebx-0x79],dl
 102443e:	mov    al,ds:0xa58a5500
 1024443:	add    BYTE PTR [ebx-0x75],bl
 1024446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1024447:	add    BYTE PTR [ecx-0x74],dl
 102444a:	scas   eax,DWORD PTR es:[edi]
 102444b:	add    BYTE PTR [edx-0x72],bl
 102444e:	test   al,0x0
 1024450:	pop    ecx
 1024451:	nop
 1024452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1024453:	add    BYTE PTR [esi-0x6f],dl
 1024456:	scas   al,BYTE PTR es:[edi]
 1024457:	add    BYTE PTR [ebp-0x6f],bl
 102445a:	test   eax,0xb1924d00
 102445f:	add    BYTE PTR [edx+edx*4-0x4d],dl
 1024463:	add    BYTE PTR [edi-0x6c],bl
 1024466:	mov    dl,0x0
 1024468:	pop    edx
 1024469:	cwde   
 102446a:	mov    eax,0xa68e6300
 102446f:	add    BYTE PTR [ecx-0x6c],ch
 1024472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1024473:	add    BYTE PTR [ecx-0x6b],ah
 1024476:	lods   al,BYTE PTR ds:[esi]
 1024477:	add    BYTE PTR [ecx-0x6a],ch
 102447a:	test   eax,0xae996600
 102447f:	add    BYTE PTR [ebx-0x6c],dh
 1024482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1024483:	add    BYTE PTR [esi-0x6d],bh
 1024486:	mov    eax,ds:0xb19c6900
 102448b:	add    BYTE PTR [ebx-0x61],ch
 102448e:	mov    edx,0xb5a26a00
 1024493:	add    BYTE PTR [edi-0x59],ch
 1024496:	mov    ebx,0xb6a27800
 102449b:	add    BYTE PTR [esi-0x57],bh
 102449e:	mov    edx,0xc7a75400
 10244a3:	add    BYTE PTR [ebx-0x44],bl
 10244a6:	fild   DWORD PTR [eax]
 10244a8:	js     0x1024459
 10244aa:	ret    0x7700
 10244ad:	mov    cl,0xc7
 10244af:	add    BYTE PTR [edx+ecx*8],ch
 10244b2:	inc    DWORD PTR [eax]
 10244b4:	xor    al,0xcc
 10244b6:	inc    BYTE PTR [eax]
 10244b8:	cmp    cl,dh
 10244ba:	inc    BYTE PTR [eax]
 10244bc:	ds shl dh,1
 10244bf:	add    BYTE PTR ds:0x6100ffd1,bh
 10244c5:	rcr    dh,0x0
 10244c8:	inc    esp
 10244c9:	sar    esi,1
 10244cb:	add    BYTE PTR [ebp-0x2c],cl
 10244ce:	std    
 10244cf:	add    BYTE PTR [edx-0x23],cl
 10244d2:	inc    DWORD PTR [eax]
 10244d4:	push   edi
 10244d5:	fincstp 
 10244d7:	add    BYTE PTR [edx-0x2a],dl
 10244da:	cld    
 10244db:	add    BYTE PTR [eax-0x29],bl
 10244de:	std    
 10244df:	add    BYTE PTR [esp+ebx*8-0x3],dl
 10244e3:	add    BYTE PTR [ebp-0x26],bl
 10244e6:	cli    
 10244e7:	add    BYTE PTR [ebx-0x39],ah
 10244ea:	in     eax,0x0
 10244ec:	arpl   bx,bx
 10244ee:	cli    
 10244ef:	add    BYTE PTR [edx-0x23],ch
 10244f2:	cli    
 10244f3:	add    BYTE PTR [ebp+ebx*8-0xa],dh
 10244f7:	add    BYTE PTR [esp+eiz*8-0x1],bl
 10244fb:	add    BYTE PTR [ecx-0x1f],ah
 10244fe:	cld    
 10244ff:	add    BYTE PTR [ebp-0x1d],ch
 1024502:	std    
 1024503:	add    BYTE PTR [eax-0x16],ah
 1024506:	inc    DWORD PTR [eax]
 1024508:	outs   dx,BYTE PTR ds:[esi]
 1024509:	call   0xe37b460d
 102450e:	cmc    
 102450f:	add    BYTE PTR [edx-0x1f],dh
 1024512:	sti    
 1024513:	add    BYTE PTR [edx-0x1b],bh
 1024516:	sti    
 1024517:	add    BYTE PTR [ebp-0x59ff7e7b],cl
 102451d:	xchg   ecx,eax
 102451e:	add    BYTE PTR [eax],0xac
 1024521:	xchg   ebp,eax
 1024522:	test   BYTE PTR [eax],al
 1024524:	scas   al,BYTE PTR es:[edi]
 1024525:	cwde   
 1024526:	xchg   DWORD PTR [eax],eax
 1024528:	mov    cl,0x99
 102452a:	mov    DWORD PTR [eax],eax
 102452c:	mov    dh,0xa1
 102452e:	nop
 102452f:	add    BYTE PTR [edx-0x43ff6b5c],bh
 1024535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1024536:	cwde   
 1024537:	add    BYTE PTR [esi-0x7bff6758],bh
 102453d:	xchg   ebp,eax
 102453e:	mov    eax,ds:0xaca59a00
 1024543:	add    BYTE PTR [ebp-0x7bff5158],bl
 1024549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102454a:	mov    eax,0xbaaa8000
 102454f:	add    BYTE PTR [ebp-0x74ff4656],dl
 1024555:	mov    al,0xbe
 1024557:	add    BYTE PTR [ebp-0x4aff4250],dl
 102455d:	mov    al,0xad
 102455f:	add    BYTE PTR [ebp+ebp*4-0x4444ff4e],ah
 1024566:	mov    ebx,0x9cabc100
 102456b:	add    ah,al
 102456d:	scas   eax,DWORD PTR es:[edi]
 102456e:	mov    al,ds:0xa1b0c500
 1024573:	add    dl,dl
 1024575:	mov    edx,0xbfc100a9
 102457a:	mov    ebp,0xbac0ca00
 102457f:	add    dl,cl
 1024581:	sar    BYTE PTR [eax+eax*1+0xbcc2cc],0xe6
 1024589:	retf   0xb7
 102458c:	out    0xcc,eax
 102458e:	mov    ecx,0xbdcee800
 1024593:	add    BYTE PTR [eax-0x73ff3b4f],cl
 1024599:	mov    ebx,0xb89300cb
 102459e:	lds    eax,FWORD PTR [eax]
 10245a0:	cdq    
 10245a1:	mov    esp,0xba8500c9
 10245a6:	rol    BYTE PTR [eax],cl
 10245a8:	mov    al,dh
 10245aa:	fld    QWORD PTR [eax]
 10245ac:	lods   al,BYTE PTR ds:[esi]
 10245ad:	ror    ebx,0x0
 10245b0:	mov    bl,0xc1
 10245b2:	mov    DWORD PTR [eax],0xcdc3b1
 10245b8:	mov    edx,0xbe00d1c9
 10245bd:	rcr    eax,1
 10245bf:	add    BYTE PTR [edi-0x46ff1c2e],ch
 10245c5:	fsubp  st(5),st
 10245c7:	add    BYTE PTR [eax-0x7cff0e21],ah
 10245cd:	in     eax,0xff
 10245cf:	add    BYTE PTR [ebx-0x78ff051b],cl
 10245d5:	call   0xe79846d9
 10245da:	sti    
 10245db:	add    BYTE PTR [edx-0x63ff0115],dl
 10245e1:	in     eax,dx
 10245e2:	std    
 10245e3:	add    BYTE PTR [edx-0x41ff101e],dh
 10245e9:	out    0xee,eax
 10245eb:	add    BYTE PTR [ebx-0x53ff0315],ah
 10245f1:	in     al,dx
 10245f2:	cld    
 10245f3:	add    BYTE PTR [edi-0x42ff0e1c],dh
 10245f9:	call   0xf3ae46f5
 10245fe:	std    
 10245ff:	add    BYTE PTR [ebx-0x43ff010d],dh
 1024605:	repnz inc BYTE PTR [eax]
 1024608:	mov    dl,0xf8
 102460a:	inc    DWORD PTR [eax]
 102460c:	rol    cl,0xc2
 102460f:	add    ah,cl
 1024611:	mov    bl,0x0
 1024614:	leave  
 1024615:	mov    ah,0x0
 1024618:	into   
 1024619:	enter  0xc4,0xc5
 102461d:	retf   0xcc
 1024620:	aam    0xc9
 1024622:	ret    
 1024623:	add    dl,dl
 1024625:	retf   
 1024626:	mov    DWORD PTR [eax],0xc4cad4
 102462c:	(bad)  
 102462e:	rol    DWORD PTR [eax],0xd4
 1024631:	int    0xca
 1024633:	add    bh,dl
 1024635:	ror    ah,1
 1024637:	add    al,bl
 1024639:	ror    ebp,1
 102463b:	add    bh,bl
 102463d:	aam    0xcd
 102463f:	add    cl,cl
 1024641:	rcl    edi,1
 1024643:	add    bl,dl
 1024645:	rcl    eax,1
 1024647:	add    bl,bl
 1024649:	fcmovnu st,st(2)
 102464b:	add    cl,ah
 102464d:	into   
 102464e:	ret    
 102464f:	add    dl,ah
 1024651:	rol    ebp,1
 1024653:	add    dl,ch
 1024655:	rol    bl,cl
 1024657:	add    ch,ah
 1024659:	aam    0xc9
 102465b:	add    al,ah
 102465d:	aad    0xce
 102465f:	add    ah,ch
 1024661:	(bad)  
 1024662:	enter  0xed00,0xda
 1024666:	int3   
 1024667:	add    al,ah
 1024669:	fcmovnbe st,st(6)
 102466b:	add    ch,ah
 102466d:	fcmovnbe st,st(4)
 102466f:	add    ah,ah
 1024671:	fst    st(7)
 1024673:	add    ch,ch
 1024675:	fst    st(3)
 1024677:	add    ch,ah
 1024679:	fcompp 
 102467b:	add    al,dh
 102467d:	(bad)  
 102467f:	add    bh,bh
 1024681:	loopne 0x1024651
 1024683:	add    dl,ch
 1024685:	loop   0x1024664
 1024687:	add    al,dh
 1024689:	loopne 0x1024661
 102468b:	add    bh,bh
 102468d:	loop   0x1024660
 102468f:	add    bh,bh
 1024691:	in     al,0xd2
 1024693:	add    bh,bh
 1024695:	in     eax,0xd5
 1024697:	add    dl,dh
 1024699:	jecxz  0x1024674
 102469b:	add    dl,dh
 102469d:	in     al,0xdb
 102469f:	add    ah,dh
 10246a1:	in     eax,0xdb
 10246a3:	add    dl,dh
 10246a5:	in     eax,0xdd
 10246a7:	add    ah,dh
 10246a9:	out    0xdf,eax
 10246ab:	add    bh,bh
 10246ad:	out    0xd8,al
 10246af:	add    ah,dh
 10246b1:	call   0xea014795
 10246b6:	fiadd  DWORD PTR [eax]
 10246b8:	(bad)  
 10246b9:	jmp    0xdf:0xecff00dd
 10246c0:	ret    
 10246c1:	fsub   st,st(0)
 10246c3:	add    dh,cl
 10246c5:	fucom  st(2)
 10246c7:	add    bl,dl
 10246c9:	fucom  st(1)
 10246cb:	add    al,bl
 10246cd:	jecxz  0x10246b6
 10246cf:	add    dl,al
 10246d1:	repz inc BYTE PTR [eax]
 10246d4:	int3   
 10246d5:	hlt    
 10246d6:	inc    BYTE PTR [eax]
 10246d8:	shl    ebp,cl
 10246da:	inc    DWORD PTR [eax]
 10246dc:	sar    dl,cl
 10246de:	inc    DWORD PTR [eax]
 10246e0:	(bad)  
 10246e2:	inc    DWORD PTR [eax]
 10246e4:	in     al,0xe3
 10246e6:	loop   0x10246e8
 10246e8:	out    0xe6,al
 10246ea:	out    0x0,al
 10246ec:	jmp    0x10246d3
 10246ee:	loop   0x10246f0
 10246f0:	out    dx,eax
 10246f1:	jmp    0xece447dd
 10246f6:	out    dx,al
 10246f7:	add    dh,ch
 10246f9:	in     eax,dx
 10246fa:	in     al,dx
 10246fb:	add    ah,dh
 10246fd:	call   0xeaf447e2
 1024702:	out    0x0,al
 1024704:	imul   dl
 1024706:	in     al,0x0
 1024708:	imul   ah
 102470a:	in     eax,0x0
 102470c:	(bad)  
 102470d:	jmp    0x10246ef
 102470f:	add    bh,bh
 1024711:	in     al,dx
 1024712:	loope  0x1024714
 1024714:	clc    
 1024715:	jmp    0x10246fd
 1024717:	add    al,bh
 1024719:	in     eax,dx
 102471a:	out    0x0,al
 102471c:	(bad)  
 102471d:	out    dx,al
 102471e:	in     eax,0x0
 1024720:	hlt    
 1024721:	in     eax,dx
 1024722:	jmp    0xeaf13f27
 1024727:	add    bh,bh
 1024729:	lock out 0x0,al
 102472c:	div    al
 102472e:	in     al,dx
 102472f:	add    al,bh
 1024731:	lock jmp 0xf900:0xe9f1fe00
 1024739:	repnz in eax,dx
 102473b:	add    bh,bh
 102473d:	repnz in al,dx
 102473f:	add    dh,bh
 1024741:	hlt    
 1024742:	out    dx,al
 1024743:	add    ah,dh
 1024745:	repz repz add dl,bh
 1024749:	cmc    
 102474a:	icebp  
 102474b:	add    dh,bh
 102474d:	div    cl
 102474f:	add    bl,bh
 1024751:	div    esp
 1024753:	add    bh,bh
 1024755:	clc    
 1024756:	repnz add dh,bh
 1024759:	stc    
 102475a:	cmc    
 102475b:	add    cl,bh
 102475d:	cli    
 102475e:	cli    
 102475f:	add    dh,bh
 1024761:	cli    
 1024762:	clc    
 1024763:	add    dh,bh
 1024765:	cld    
 1024766:	cli    
 1024767:	add    bl,bh
 1024769:	std    
 102476a:	cld    
 102476b:	add    dh,bh
 102476d:	(bad)  
 102476e:	inc    BYTE PTR [eax]
 1024770:	add    BYTE PTR [eax],al
 1024772:	add    BYTE PTR [eax],al
 1024774:	(bad)  
 1024775:	(bad)  
 1024776:	inc    DWORD PTR [eax]
	...
 10247fc:	add    BYTE PTR [eax],al
 10247fe:	or     ecx,DWORD PTR [ebx]
 1024800:	or     ecx,DWORD PTR [ebx]
 1024802:	or     ecx,DWORD PTR [ebx]
 1024804:	or     ecx,DWORD PTR [ebx]
 1024806:	or     ecx,DWORD PTR [ebx]
 1024808:	or     ecx,DWORD PTR [ebx]
 102480a:	or     ecx,DWORD PTR [ebx]
 102480c:	or     ecx,DWORD PTR [ebx]
 102480e:	or     ecx,DWORD PTR [ebx]
 1024810:	or     ecx,DWORD PTR [ebx]
 1024812:	or     ecx,DWORD PTR [ebx]
 1024814:	or     ecx,DWORD PTR [ebx]
 1024816:	or     ecx,DWORD PTR [ebx]
 1024818:	or     ecx,DWORD PTR [ebx]
 102481a:	or     ecx,DWORD PTR [ebx]
 102481c:	or     ecx,DWORD PTR [ebx]
 102481e:	or     ecx,DWORD PTR [ebx]
 1024820:	or     ecx,DWORD PTR [ebx]
 1024822:	or     ecx,DWORD PTR [ebx]
 1024824:	or     ecx,DWORD PTR [ebx]
 1024826:	or     ecx,DWORD PTR [ebx]
 1024828:	or     ecx,DWORD PTR [ebx]
 102482a:	or     ecx,DWORD PTR [ebx]
 102482c:	or     ecx,DWORD PTR [ebx]
 102482e:	or     ecx,DWORD PTR [ebx]
	...
 102483c:	add    BYTE PTR [eax],al
 102483e:	or     esi,edi
 1024840:	div    edi
 1024842:	div    edx
 1024844:	repnz repnz repnz repnz repnz repnz repnz in al,dx
 102484c:	repnz in al,dx
 102484e:	in     al,dx
 102484f:	in     al,dx
 1024850:	in     al,dx
 1024851:	in     al,dx
 1024852:	in     al,dx
 1024853:	in     al,dx
 1024854:	in     al,dx
 1024855:	shr    ah,1
 1024857:	rcl    al,1
 1024859:	rcl    al,1
 102485b:	rcl    al,1
 102485d:	ror    ch,1
 102485f:	rol    bh,1
 1024861:	int    0xc7
 1024863:	mov    edi,0xc7c7c7c7
 1024869:	mov    edx,0xc2c2c2c7
 102486f:	or     eax,DWORD PTR [eax]
	...
 1024879:	add    BYTE PTR [eax],al
 102487b:	add    BYTE PTR [ecx+0x68],bh
 102487e:	push   0xf7796868
 1024883:	repnz repnz repnz repnz repnz repnz repnz in al,dx
 102488b:	repnz in al,dx
 102488d:	repnz in al,dx
 102488f:	in     al,dx
 1024890:	in     al,dx
 1024891:	in     al,dx
 1024892:	in     al,dx
 1024893:	shr    ah,1
 1024895:	shr    ah,1
 1024897:	shr    ah,1
 1024899:	rcl    al,1
 102489b:	rcl    al,1
 102489d:	rcl    al,1
 102489f:	(bad)  
 10248a0:	int    0xcd
 10248a2:	int    0xcd
 10248a4:	int    0xc7
 10248a6:	mov    edi,0xc2c7c2c7
 10248ac:	mov    edx,0xbc2
	...
 10248ba:	add    BYTE PTR [eax],al
 10248bc:	or     BYTE PTR [edi+0x8dbffa7],ah
 10248c2:	div    edi
 10248c4:	div    edx
 10248c6:	repnz repnz repnz repnz in al,dx
 10248cb:	repnz repnz in al,dx
 10248ce:	in     al,dx
 10248cf:	in     al,dx
 10248d0:	in     al,dx
 10248d1:	in     al,dx
 10248d2:	in     al,dx
 10248d3:	in     al,dx
 10248d4:	in     al,dx
 10248d5:	in     al,dx
 10248d6:	shr    ah,1
 10248d8:	rcl    al,1
 10248da:	in     al,dx
 10248db:	rcl    al,1
 10248dd:	ror    ch,1
 10248df:	ror    ch,1
 10248e1:	int    0xcd
 10248e3:	int    0xc7
 10248e5:	mov    edi,0xc2c7c7c7
 10248eb:	mov    edx,0xbc2c7
	...
 10248f9:	add    BYTE PTR [eax],al
 10248fb:	add    al,ah
 10248fd:	fcmovnu st,st(3)
 10248ff:	fcmovnu st,st(3)
 1024901:	loopne 0x10248fa
 1024903:	div    edi
 1024905:	repnz repnz repnz repnz repnz repnz in al,dx
 102490c:	repnz in al,dx
 102490e:	repnz in al,dx
 1024910:	repnz in al,dx
 1024912:	in     al,dx
 1024913:	in     al,dx
 1024914:	in     al,dx
 1024915:	shr    ah,1
 1024917:	shr    ah,1
 1024919:	rcl    al,1
 102491b:	rcl    al,1
 102491d:	rcl    al,1
 102491f:	rcl    al,1
 1024921:	int    0xcd
 1024923:	int    0xcd
 1024925:	int    0xc7
 1024927:	mov    edi,0xc2c7c7c7
 102492d:	mov    edx,0xb
	...
 102493b:	add    BYTE PTR [eax],al
 102493d:	add    BYTE PTR ds:0xf7f7f7f8,cl
 1024943:	div    edi
 1024945:	div    edx
 1024947:	repnz repnz repnz repnz repnz in al,dx
 102494d:	repnz in al,dx
 102494f:	repnz in al,dx
 1024951:	in     al,dx
 1024952:	in     al,dx
 1024953:	in     al,dx
 1024954:	in     al,dx
 1024955:	in     al,dx
 1024956:	in     al,dx
 1024957:	in     al,dx
 1024958:	shr    ah,1
 102495a:	shr    ah,1
 102495c:	rcl    al,1
 102495e:	rcl    al,1
 1024960:	int    0xd0
 1024962:	ror    ch,1
 1024964:	int    0xcd
 1024966:	mov    edi,0xc2c7c7c7
 102496c:	mov    edx,0xbc7
	...
 102497e:	or     eax,0xf7f7f7f8
 1024983:	div    edi
 1024985:	div    edi
 1024987:	div    edx
 1024989:	repnz repnz repnz repnz repnz repnz in al,dx
 1024990:	repnz in al,dx
 1024992:	in     al,dx
 1024993:	in     al,dx
 1024994:	in     al,dx
 1024995:	in     al,dx
 1024996:	in     al,dx
 1024997:	shr    ah,1
 1024999:	in     al,dx
 102499a:	shr    ah,1
 102499c:	rcl    al,1
 102499e:	rcl    al,1
 10249a0:	rcl    al,1
 10249a2:	int    0xd0
 10249a4:	int    0xcd
 10249a6:	int    0xc7
 10249a8:	mov    edi,0xc7c7c7c7
 10249ae:	ret    0xb
	...
 10249b9:	add    BYTE PTR [eax],al
 10249bb:	add    BYTE PTR [ecx+0x68],bh
 10249be:	push   0xfa796868
 10249c3:	div    edi
 10249c5:	div    edi
 10249c7:	div    edx
 10249c9:	repnz repnz repnz repnz repnz in al,dx
 10249cf:	jecxz  0x102499c
 10249d1:	retf   
 10249d2:	loope  0x10249c0
 10249d4:	in     al,dx
 10249d5:	in     al,dx
 10249d6:	in     al,dx
 10249d7:	in     al,dx
 10249d8:	in     al,dx
 10249d9:	shr    ah,1
 10249db:	shr    ah,1
 10249dd:	shr    ah,1
 10249df:	rcl    al,1
 10249e1:	rcl    al,1
 10249e3:	ror    ch,1
 10249e5:	ror    ch,1
 10249e7:	int    0xcd
 10249e9:	mov    edi,0xc7c7c7c7
 10249ef:	or     eax,DWORD PTR [eax]
	...
 10249f9:	add    BYTE PTR [eax],al
 10249fb:	add    BYTE PTR [eax],cl
 10249fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10249fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10249ff:	(bad)  
 1024a00:	fisttp DWORD PTR [eax]
 1024a02:	cli    
 1024a03:	div    edi
 1024a05:	div    edi
 1024a07:	div    edi
 1024a09:	div    edx
 1024a0b:	repnz repnz repnz jecxz 0x10249cd
 1024a10:	lods   al,BYTE PTR ds:[esi]
 1024a11:	lods   al,BYTE PTR ds:[esi]
 1024a12:	mov    ecx,0xecececcb
 1024a17:	in     al,dx
 1024a18:	in     al,dx
 1024a19:	in     al,dx
 1024a1a:	in     al,dx
 1024a1b:	in     al,dx
 1024a1c:	shr    ah,1
 1024a1e:	rcl    al,1
 1024a20:	rcl    al,1
 1024a22:	rcl    al,1
 1024a24:	ror    ch,1
 1024a26:	rol    bh,1
 1024a28:	int    0xc7
 1024a2a:	int    0xc7
 1024a2c:	mov    edi,0xbc7
	...
 1024a3a:	add    BYTE PTR [eax],al
 1024a3c:	loopne 0x1024a19
 1024a3e:	fcmovnu st,st(3)
 1024a40:	fneni(8087 only) 
 1024a42:	idiv   edx
 1024a44:	cli    
 1024a45:	div    edi
 1024a47:	div    edi
 1024a49:	div    edi
 1024a4b:	repnz repnz bnd jbe 0x1024a68
 1024a50:	add    eax,0xcbb1832b
 1024a55:	in     al,dx
 1024a56:	in     al,dx
 1024a57:	in     al,dx
 1024a58:	in     al,dx
 1024a59:	in     al,dx
 1024a5a:	shr    ah,1
 1024a5c:	shr    ah,1
 1024a5e:	shr    ah,1
 1024a60:	rcl    al,1
 1024a62:	rcl    al,1
 1024a64:	rcl    al,1
 1024a66:	int    0xd0
 1024a68:	(bad)  
 1024a69:	rol    bh,1
 1024a6b:	mov    edi,0xbc7c7
	...
 1024a7d:	add    BYTE PTR ds:0xf7fff8ff,cl
 1024a83:	cli    
 1024a84:	idiv   edx
 1024a86:	div    edi
 1024a88:	div    edi
 1024a8a:	div    edi
 1024a8c:	div    edx
 1024a8e:	sbb    ebx,DWORD PTR [ebx-0x7ddedf5e]
 1024a94:	mov    cl,0xcb
 1024a96:	in     al,dx
 1024a97:	in     al,dx
 1024a98:	in     al,dx
 1024a99:	in     al,dx
 1024a9a:	in     al,dx
 1024a9b:	in     al,dx
 1024a9c:	in     al,dx
 1024a9d:	shr    ah,1
 1024a9f:	shr    ah,1
 1024aa1:	rcl    al,1
 1024aa3:	rcl    al,1
 1024aa5:	rcl    al,1
 1024aa7:	rcl    al,1
 1024aa9:	(bad)  
 1024aaa:	rol    bh,1
 1024aac:	mov    edi,0xbc7
	...
 1024abe:	psubb  mm7,mm7
 1024ac1:	idiv   edx
 1024ac3:	cli    
 1024ac4:	cli    
 1024ac5:	idiv   edx
 1024ac7:	div    edi
 1024ac9:	div    edi
 1024acb:	div    edi
 1024acd:	repnz sbb dl,bh
 1024ad0:	mov    ds:0x83281fa1,al
 1024ad5:	mov    cl,0xe1
 1024ad7:	in     al,dx
 1024ad8:	in     al,dx
 1024ad9:	in     al,dx
 1024ada:	in     al,dx
 1024adb:	in     eax,0xec
 1024add:	in     al,dx
 1024ade:	in     al,dx
 1024adf:	rcl    al,1
 1024ae1:	in     al,dx
 1024ae2:	shr    ah,1
 1024ae4:	rcl    al,1
 1024ae6:	rcl    al,1
 1024ae8:	(bad)  
 1024ae9:	rol    bh,1
 1024aeb:	rol    bh,1
 1024aed:	mov    edi,0xb
	...
 1024afb:	add    BYTE PTR [ecx+0x68],bh
 1024afe:	push   0xff796868
 1024b03:	idiv   edx
 1024b05:	cli    
 1024b06:	idiv   edx
 1024b08:	div    edi
 1024b0a:	div    edi
 1024b0c:	div    edx
 1024b0e:	xor    esp,DWORD PTR [eax+0x1da1a2a3]
 1024b14:	jno    0x1024a98
 1024b16:	mov    cl,0xcb
 1024b18:	in     al,dx
 1024b19:	in     al,dx
 1024b1a:	in     al,dx
 1024b1b:	in     al,dx
 1024b1c:	in     al,dx
 1024b1d:	in     al,dx
 1024b1e:	shr    ah,1
 1024b20:	in     al,dx
 1024b21:	shr    ah,1
 1024b23:	int    0xd0
 1024b25:	rcl    al,1
 1024b27:	rcl    al,1
 1024b29:	ror    ch,1
 1024b2b:	(bad)  
 1024b2c:	rol    bh,1
 1024b2e:	(bad)  
 1024b2f:	or     eax,DWORD PTR [eax]
	...
 1024b39:	add    BYTE PTR [eax],al
 1024b3b:	add    BYTE PTR [eax],cl
 1024b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1024b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1024b3f:	(bad)  
 1024b40:	fisttp DWORD PTR [eax]
 1024b42:	cli    
 1024b43:	push   edi
 1024b45:	cli    
 1024b46:	idiv   edx
 1024b48:	cli    
 1024b49:	div    edi
 1024b4b:	div    edi
 1024b4d:	test   DWORD PTR [edi-0x5d5d29c4],0x83281da4
 1024b57:	mov    ecx,0xececece1
 1024b5c:	in     al,dx
 1024b5d:	in     al,dx
 1024b5e:	in     al,dx
 1024b5f:	in     al,dx
 1024b60:	shr    ah,1
 1024b62:	shr    ah,1
 1024b64:	rcl    al,1
 1024b66:	rcl    al,1
 1024b68:	rcl    al,1
 1024b6a:	rcl    al,1
 1024b6c:	(bad)  
 1024b6d:	int    0xcd
 1024b6f:	or     eax,DWORD PTR [eax]
	...
 1024b79:	add    BYTE PTR [eax],al
 1024b7b:	add    al,ah
 1024b7d:	fcmovnu st,st(3)
 1024b7f:	fcmovnu st,st(3)
 1024b81:	loopne 0x1024b82
 1024b83:	idiv   edi
 1024b85:	idiv   edx
 1024b87:	idiv   edx
 1024b89:	idiv   edx
 1024b8b:	div    edi
 1024b8d:	neg    esi
 1024b8f:	and    al,0x93
 1024b91:	(bad)  
 1024b92:	mov    ds:0x2a1fa1a2,al
 1024b97:	cmp    DWORD PTR [ecx-0x1313131f],0xffffffec
 1024b9e:	in     al,dx
 1024b9f:	in     al,dx
 1024ba0:	in     al,dx
 1024ba1:	in     al,dx
 1024ba2:	int    0xec
 1024ba4:	in     al,dx
 1024ba5:	shr    ah,1
 1024ba7:	int    0xd0
 1024ba9:	rcl    al,1
 1024bab:	int    0xd0
 1024bad:	ror    ch,1
 1024baf:	or     eax,DWORD PTR [eax]
	...
 1024bbd:	add    BYTE PTR [edi],cl
 1024bbf:	(bad)  
 1024bc0:	(bad)  
 1024bc1:	cli    
 1024bc2:	push   edi
 1024bc4:	push   edi
 1024bc6:	push   edi
 1024bc8:	cli    
 1024bc9:	idiv   edx
 1024bcb:	div    edi
 1024bcd:	div    edi
 1024bcf:	mov    dl,0x45
 1024bd1:	pushf  
 1024bd2:	mov    ds:0x209da1a4,eax
 1024bd7:	daa    
 1024bd8:	cmp    DWORD PTR [ecx-0x1313131f],0xffffffec
 1024bdf:	in     al,dx
 1024be0:	in     eax,0xec
 1024be2:	in     al,dx
 1024be3:	int    0xec
 1024be5:	int    0xec
 1024be7:	rcl    al,1
 1024be9:	rcl    al,1
 1024beb:	rcl    al,1
 1024bed:	(bad)  
 1024bee:	ror    BYTE PTR [ebx],1
	...
 1024bfc:	add    BYTE PTR [eax],al
 1024bfe:	adc    edi,edi
 1024c00:	clc    
 1024c01:	(bad)  
 1024c02:	clc    
 1024c03:	push   edi
 1024c05:	push   edi
 1024c07:	cli    
 1024c08:	cli    
 1024c09:	cli    
 1024c0a:	idiv   edx
 1024c0c:	div    edi
 1024c0e:	div    edi
 1024c10:	je     0x1024c4d
 1024c12:	fldenv [ecx+0x1f9a9da1]
 1024c18:	jno    0x1024b9c
 1024c1a:	mov    ecx,0xececece1
 1024c1f:	in     al,dx
 1024c20:	in     al,dx
 1024c21:	in     al,dx
 1024c22:	in     al,dx
 1024c23:	in     al,dx
 1024c24:	in     al,dx
 1024c25:	in     eax,0xd0
 1024c27:	in     al,dx
 1024c28:	rcl    al,1
 1024c2a:	rcl    al,1
 1024c2c:	rcl    al,1
 1024c2e:	ror    BYTE PTR [ebx],1
	...
 1024c3c:	jns    0x1024ca6
 1024c3e:	push   0xff796868
 1024c43:	clc    
 1024c44:	push   edi
 1024c46:	(bad)  
 1024c47:	cli    
 1024c48:	idiv   edx
 1024c4a:	cli    
 1024c4b:	idiv   edx
 1024c4d:	idiv   edx
 1024c4f:	neg    esp
 1024c51:	xchg   DWORD PTR [edx+eiz*4-0x66686663],edx
 1024c58:	sbb    eax,0xe1b9832b
 1024c5d:	in     al,dx
 1024c5e:	in     al,dx
 1024c5f:	in     al,dx
 1024c60:	in     al,dx
 1024c61:	in     al,dx
 1024c62:	in     al,dx
 1024c63:	in     eax,0xec
 1024c65:	in     al,dx
 1024c66:	int    0xec
 1024c68:	rcl    al,1
 1024c6a:	rcl    al,1
 1024c6c:	rcl    al,1
 1024c6e:	int    0xb
	...
 1024c7c:	or     BYTE PTR [edi+0x8dbffa7],ah
 1024c82:	(bad)  
 1024c83:	(bad)  
 1024c84:	clc    
 1024c85:	(bad)  
 1024c86:	cli    
 1024c87:	(bad)  
 1024c88:	cli    
 1024c89:	cli    
 1024c8a:	cli    
 1024c8b:	cli    
 1024c8c:	idiv   edx
 1024c8e:	div    edi
 1024c90:	not    DWORD PTR [eax-0x686625d1]
 1024c96:	bound  sp,DWORD PTR [edi+0x1f]
 1024c9a:	daa    
 1024c9b:	xor    BYTE PTR [ecx-0x1313131f],0xec
 1024ca2:	in     al,dx
 1024ca3:	in     al,dx
 1024ca4:	in     eax,0xe5
 1024ca6:	in     al,dx
 1024ca7:	shr    ah,1
 1024ca9:	shr    ah,1
 1024cab:	rcl    al,1
 1024cad:	rcl    al,1
 1024caf:	or     eax,DWORD PTR [eax]
	...
 1024cb9:	add    BYTE PTR [eax],al
 1024cbb:	add    al,ah
 1024cbd:	fcmovnu st,st(3)
 1024cbf:	fcmovnu st,st(3)
 1024cc1:	loopne 0x1024cc2
 1024cc3:	clc    
 1024cc4:	(bad)  
 1024cc5:	cli    
 1024cc6:	push   edi
 1024cc8:	push   edi
 1024cca:	push   edi
 1024ccc:	cli    
 1024ccd:	cli    
 1024cce:	div    edi
 1024cd0:	imul   ebp
 1024cd2:	lea    ecx,[ebx+0x595e679d]
 1024cd8:	pop    eax
 1024cd9:	pop    esi
 1024cda:	and    esp,DWORD PTR [edi]
 1024cdc:	xor    BYTE PTR [ecx-0x1313131f],0xec
 1024ce3:	in     al,dx
 1024ce4:	in     al,dx
 1024ce5:	in     al,dx
 1024ce6:	in     eax,0xec
 1024ce8:	shr    ah,1
 1024cea:	rcl    al,1
 1024cec:	rcl    al,1
 1024cee:	ror    BYTE PTR [ebx],1
	...
 1024cfc:	add    BYTE PTR [eax],al
 1024cfe:	push   ss
 1024cff:	(bad)  
 1024d00:	(bad)  
 1024d01:	(bad)  
 1024d02:	(bad)  
 1024d03:	(bad)  
 1024d04:	clc    
 1024d05:	(bad)  
 1024d06:	cli    
 1024d07:	push   edi
 1024d09:	push   edi
 1024d0b:	push   edi
 1024d0d:	in     eax,dx
 1024d0e:	(bad)  
 1024d10:	fcmovnu st,st(5)
 1024d12:	(bad)  [edi]
 1024d14:	lahf   
 1024d15:	pop    cx
 1024d17:	pop    eax
 1024d18:	push   esp
 1024d19:	push   edx
 1024d1a:	pop    eax
 1024d1b:	push   ds
 1024d1c:	sub    al,0x83
 1024d1e:	mov    cl,0xe1
 1024d20:	in     al,dx
 1024d21:	in     al,dx
 1024d22:	in     al,dx
 1024d23:	in     al,dx
 1024d24:	in     eax,0xec
 1024d26:	in     al,dx
 1024d27:	in     al,dx
 1024d28:	in     eax,0xec
 1024d2a:	shr    ah,1
 1024d2c:	rcl    al,1
 1024d2e:	ror    BYTE PTR [ebx],1
	...
 1024d3c:	add    BYTE PTR [eax],al
 1024d3e:	push   ss
 1024d3f:	(bad)  
 1024d40:	(bad)  
 1024d41:	(bad)  
 1024d42:	(bad)  
 1024d43:	clc    
 1024d44:	(bad)  
 1024d45:	(bad)  
 1024d46:	push   edi
 1024d48:	(bad)  
 1024d49:	cli    
 1024d4a:	cli    
 1024d4b:	imul   ebp
 1024d4d:	mov    ah,0xa9
 1024d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1024d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1024d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1024d52:	jnp    0x1024d96
 1024d54:	mov    WORD PTR [ecx+0x50545458],ds
 1024d5a:	dec    edi
 1024d5b:	pop    eax
 1024d5c:	push   ds
 1024d5d:	jno    0x1024d06
 1024d5f:	mov    cl,0xe1
 1024d61:	in     al,dx
 1024d62:	in     al,dx
 1024d63:	in     al,dx
 1024d64:	in     al,dx
 1024d65:	jmp    0xedef334f
 1024d6a:	int    0xec
 1024d6c:	shr    ah,1
 1024d6e:	ror    BYTE PTR [ebx],1
	...
 1024d7c:	jns    0x1024de6
 1024d7e:	push   0xff796868
 1024d83:	(bad)  
 1024d84:	push   edi
 1024d86:	(bad)  
 1024d87:	push   edi
 1024d89:	(bad)  
 1024d8a:	(bad)  
 1024d8b:	dec    DWORD PTR [ebp+0x232f3035]
 1024d91:	and    esp,DWORD PTR [ebx]
 1024d93:	cmp    bh,BYTE PTR [edx]
 1024d95:	xchg   edx,eax
 1024d96:	pop    esi
 1024d97:	push   eax
 1024d98:	push   eax
 1024d99:	push   esp
 1024d9a:	dec    esi
 1024d9b:	dec    esi
 1024d9c:	pop    edx
 1024d9d:	push   ds
 1024d9e:	sub    BYTE PTR [ebx-0x13131e47],al
 1024da4:	in     al,dx
 1024da5:	in     al,dx
 1024da6:	in     al,dx
 1024da7:	in     al,dx
 1024da8:	in     al,dx
 1024da9:	in     eax,0xec
 1024dab:	in     al,dx
 1024dac:	int    0xec
 1024dae:	ror    BYTE PTR [ebx],1
	...
 1024dbc:	or     BYTE PTR [edi+0x8dbffa7],ah
 1024dc2:	(bad)  
 1024dc3:	(bad)  
 1024dc4:	(bad)  
 1024dc5:	(bad)  
 1024dc6:	(bad)  
 1024dc7:	(bad)  
 1024dc8:	push   edi
 1024dca:	push   edi
 1024dcc:	xor    eax,0x9d9d9d9d
 1024dd1:	popf   
 1024dd2:	popf   
 1024dd3:	popf   
 1024dd4:	popf   
 1024dd5:	popf   
 1024dd6:	cwde   
 1024dd7:	dec    edi
 1024dd8:	dec    esi
 1024dd9:	dec    esi
 1024dda:	dec    esi
 1024ddb:	dec    esi
 1024ddc:	push   edx
 1024ddd:	push   ecx
 1024dde:	sbb    al,0x2a
 1024de0:	cmp    DWORD PTR [ecx-0x130e131e],0xffffffec
 1024de7:	in     al,dx
 1024de8:	in     al,dx
 1024de9:	in     eax,0xec
 1024deb:	in     eax,0xec
 1024ded:	int    0xec
 1024def:	or     eax,DWORD PTR [eax]
	...
 1024df9:	add    BYTE PTR [eax],al
 1024dfb:	add    al,ah
 1024dfd:	fcmovnu st,st(3)
 1024dff:	fcmovnu st,st(3)
 1024e01:	loopne 0x1024e02
 1024e03:	(bad)  
 1024e04:	clc    
 1024e05:	(bad)  
 1024e06:	push   edi
 1024e08:	(bad)  
 1024e09:	(bad)  
 1024e0a:	(bad)  
 1024e0b:	dec    DWORD PTR [esi+0x595ed84d]
 1024e11:	pop    eax
 1024e12:	pop    eax
 1024e13:	push   ebp
 1024e14:	push   ebp
 1024e15:	push   ebp
 1024e16:	push   esp
 1024e17:	push   esp
 1024e18:	push   esp
 1024e19:	push   eax
 1024e1a:	push   eax
 1024e1b:	push   eax
 1024e1c:	dec    edi
 1024e1d:	dec    edi
 1024e1e:	dec    edi
 1024e1f:	sub    eax,0xece1ab43
 1024e24:	icebp  
 1024e25:	in     al,dx
 1024e26:	icebp  
 1024e27:	in     al,dx
 1024e28:	in     al,dx
 1024e29:	jmp    0xedef3b13
 1024e2e:	in     eax,0xb
	...
 1024e3c:	add    BYTE PTR [eax],al
 1024e3e:	imul   edi,edi,0xffffffff
 1024e44:	(bad)  
 1024e45:	(bad)  
 1024e46:	(bad)  
 1024e47:	(bad)  
 1024e48:	push   edi
 1024e4a:	push   edi
 1024e4c:	loopne 0x1024ec5
 1024e4e:	mov    ds:0x5d595d9e,eax
 1024e53:	pop    ebp
 1024e54:	pop    ebp
 1024e55:	pop    esi
 1024e56:	pop    esi
 1024e57:	pop    esi
 1024e58:	pop    esi
 1024e59:	pop    esi
 1024e5a:	pop    esi
 1024e5b:	pop    esi
 1024e5c:	pop    esi
 1024e5d:	pop    esi
 1024e5e:	pop    esi
 1024e5f:	pop    esi
 1024e60:	sbb    DWORD PTR [ebx-0x130e0e17],esi
 1024e66:	icebp  
 1024e67:	in     al,dx
 1024e68:	in     al,dx
 1024e69:	jmp    0xe6e8345a
 1024e6e:	in     eax,0xb
	...
 1024e7c:	add    BYTE PTR [eax],al
 1024e7e:	imul   edi,edi,0xffffffff
 1024e84:	(bad)  
 1024e85:	(bad)  
 1024e86:	clc    
 1024e87:	(bad)  
 1024e88:	(bad)  
 1024e89:	(bad)  
 1024e8a:	(bad)  
 1024e8b:	(bad)  
 1024e8c:	call   esp
 1024e8e:	xor    eax,0x5d5b5ed8
 1024e93:	pop    ebp
 1024e94:	pop    ebp
 1024e95:	pop    ebp
 1024e96:	pop    esi
 1024e97:	pop    ebp
 1024e98:	bound  ecx,QWORD PTR [edx+0x20]
 1024e9b:	and    BYTE PTR [ebx],ah
 1024e9d:	and    ebp,DWORD PTR ds:0xececa932
 1024ea3:	imul   esp
 1024ea5:	icebp  
 1024ea6:	icebp  
 1024ea7:	in     al,dx
 1024ea8:	in     al,dx
 1024ea9:	in     al,dx
 1024eaa:	in     al,dx
 1024eab:	jmp    0xce83b9c
	...
 1024ebc:	jns    0x1024f26
 1024ebe:	push   0xff796868
 1024ec3:	(bad)  
 1024ec4:	(bad)  
 1024ec5:	(bad)  
 1024ec6:	(bad)  
 1024ec7:	(bad)  
 1024ec8:	(bad)  
 1024ec9:	(bad)  
 1024eca:	cli    
 1024ecb:	(bad)  
 1024ecc:	cli    
 1024ecd:	push   DWORD PTR [esi+edx*8-0x63]
 1024ed1:	pop    ebx
 1024ed2:	pop    edi
 1024ed3:	addr16 xchg ebp,eax
 1024ed5:	gs addr16 addr16 cmp DWORD PTR gs:[bp+di-0x58],esi
 1024edd:	mov    esp,0xf7f7e0db
 1024ee2:	in     al,dx
 1024ee3:	div    ecx
 1024ee5:	icebp  
 1024ee6:	icebp  
 1024ee7:	icebp  
 1024ee8:	icebp  
 1024ee9:	in     al,dx
 1024eea:	icebp  
 1024eeb:	jmp    0xcec3bdc
	...
 1024efc:	or     BYTE PTR [edi+0x8dbffa7],ah
 1024f02:	(bad)  
 1024f03:	(bad)  
 1024f04:	(bad)  
 1024f05:	(bad)  
 1024f06:	(bad)  
 1024f07:	(bad)  
 1024f08:	(bad)  
 1024f09:	(bad)  
 1024f0a:	(bad)  
 1024f0b:	(bad)  
 1024f0c:	push   edi
 1024f0e:	aad    0x4d
 1024f10:	fcomp  DWORD PTR [esi+0x59]
 1024f13:	addr16 addr16 addr16 addr16 addr16 addr16 addr16 pop edi
 1024f1b:	cmp    dh,BYTE PTR [edx-0x58]
 1024f1e:	rcr    dh,0xf2
 1024f21:	div    edi
 1024f23:	in     al,dx
 1024f24:	icebp  
 1024f25:	imul   esp
 1024f27:	icebp  
 1024f28:	in     al,dx
 1024f29:	icebp  
 1024f2a:	in     al,dx
 1024f2b:	in     al,dx
 1024f2c:	in     al,dx
 1024f2d:	jmp    0x1025b1b
	...
 1024f3a:	add    BYTE PTR [eax],al
 1024f3c:	loopne 0x1024f19
 1024f3e:	fcmovnu st,st(3)
 1024f40:	fneni(8087 only) 
 1024f42:	(bad)  
 1024f43:	(bad)  
 1024f44:	(bad)  
 1024f45:	(bad)  
 1024f46:	(bad)  
 1024f47:	(bad)  
 1024f48:	(bad)  
 1024f49:	(bad)  
 1024f4a:	clc    
 1024f4b:	(bad)  
 1024f4c:	(bad)  
 1024f4d:	(bad)  
 1024f4e:	(bad)  
 1024f4f:	ds (bad) 
 1024f51:	popf   
 1024f52:	pop    ebp
 1024f53:	pop    edi
 1024f54:	data16 data16 data16 addr16 data16 addr16 pop sp
 1024f5c:	cmp    DWORD PTR [ebx-0x58],esi
 1024f5f:	shr    ah,0xf2
 1024f62:	div    ecx
 1024f64:	div    ecx
 1024f66:	icebp  
 1024f67:	icebp  
 1024f68:	icebp  
 1024f69:	in     al,dx
 1024f6a:	icebp  
 1024f6b:	in     al,dx
 1024f6c:	in     al,dx
 1024f6d:	in     al,dx
 1024f6e:	in     al,dx
 1024f6f:	or     eax,DWORD PTR [eax]
	...
 1024f7d:	add    BYTE PTR [ecx-0x1],ch
 1024f80:	(bad)  
 1024f81:	(bad)  
 1024f82:	(bad)  
 1024f83:	(bad)  
 1024f84:	(bad)  
 1024f85:	(bad)  
 1024f86:	(bad)  
 1024f87:	(bad)  
 1024f88:	(bad)  
 1024f89:	(bad)  
 1024f8a:	(bad)  
 1024f8b:	(bad)  
 1024f8c:	clc    
 1024f8d:	(bad)  
 1024f8e:	clc    
 1024f8f:	ror    DWORD PTR [eax-0x28],cl
 1024f92:	pop    ebp
 1024f93:	pop    ebx
 1024f94:	pop    esi
 1024f95:	pop    di
 1024f97:	data16 data16 data16 data16 addr16 xor BYTE PTR [bp+si-0x55],bh
 1024fa0:	rcr    dh,0xf7
 1024fa3:	icebp  
 1024fa4:	icebp  
 1024fa5:	icebp  
 1024fa6:	imul   esp
 1024fa8:	imul   esp
 1024faa:	icebp  
 1024fab:	in     al,dx
 1024fac:	in     al,dx
 1024fad:	in     al,dx
 1024fae:	in     al,dx
 1024faf:	or     eax,DWORD PTR [eax]
	...
 1024fbd:	add    BYTE PTR [ecx-0x1],ch
 1024fc0:	(bad)  
 1024fc1:	(bad)  
 1024fc2:	(bad)  
 1024fc3:	(bad)  
 1024fc4:	(bad)  
 1024fc5:	(bad)  
 1024fc6:	(bad)  
 1024fc7:	(bad)  
 1024fc8:	(bad)  
 1024fc9:	(bad)  
 1024fca:	(bad)  
 1024fcb:	(bad)  
 1024fcc:	(bad)  
 1024fcd:	(bad)  
 1024fce:	(bad)  
 1024fcf:	dec    DWORD PTR [ecx-0x2a]
 1024fd2:	xchg   esp,eax
 1024fd3:	pop    ecx
 1024fd4:	pop    esi
 1024fd5:	bound  ebx,QWORD PTR [esi+0x62]
 1024fd8:	pop    esi
 1024fd9:	pop    esi
 1024fda:	bound  ebx,QWORD PTR [esi+0x66]
 1024fdd:	pop    esp
 1024fde:	aaa    
 1024fdf:	jp     0x1024f8c
 1024fe1:	fucomp st(4)
 1024fe3:	div    edi
 1024fe5:	icebp  
 1024fe6:	div    ecx
 1024fe8:	icebp  
 1024fe9:	icebp  
 1024fea:	icebp  
 1024feb:	icebp  
 1024fec:	icebp  
 1024fed:	icebp  
 1024fee:	in     al,dx
 1024fef:	or     eax,DWORD PTR [eax]
	...
 1024ff9:	add    BYTE PTR [eax],al
 1024ffb:	add    BYTE PTR [ecx+0x68],bh
 1024ffe:	push   0xff796868
 1025003:	(bad)  
 1025004:	(bad)  
 1025005:	(bad)  
 1025006:	(bad)  
 1025007:	(bad)  
 1025008:	(bad)  
 1025009:	(bad)  
 102500a:	(bad)  
 102500b:	(bad)  
 102500c:	(bad)  
 102500d:	clc    
 102500e:	(bad)  
 102500f:	call   DWORD PTR [eax+0x5b5dd975]
 1025015:	pop    ebp
 1025016:	pop    esi
 1025017:	pop    esi
 1025018:	pop    esi
 1025019:	pop    esi
 102501a:	pop    esi
 102501b:	pop    esi
 102501c:	bound  esp,QWORD PTR [edx+0x5c]
 102501f:	cmp    BYTE PTR [ebx-0x55],bh
 1025022:	(bad)  
 1025024:	div    edi
 1025026:	in     al,dx
 1025027:	icebp  
 1025028:	imul   esp
 102502a:	imul   esp
 102502c:	icebp  
 102502d:	in     al,dx
 102502e:	in     al,dx
 102502f:	or     eax,DWORD PTR [eax]
	...
 1025039:	add    BYTE PTR [eax],al
 102503b:	add    BYTE PTR [eax],cl
 102503d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102503e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102503f:	(bad)  
 1025040:	fisttp DWORD PTR [eax]
 1025042:	(bad)  
 1025043:	(bad)  
 1025044:	(bad)  
 1025045:	(bad)  
 1025046:	(bad)  
 1025047:	(bad)  
 1025048:	(bad)  
 1025049:	(bad)  
 102504a:	(bad)  
 102504b:	(bad)  
 102504c:	(bad)  
 102504d:	(bad)  
 102504e:	(bad)  
 102504f:	(bad)  
 1025050:	clc    
 1025051:	mov    edi,edx
 1025053:	xchg   esi,eax
 1025054:	pop    ebp
 1025055:	pop    ebx
 1025056:	pop    ebp
 1025057:	pop    ebp
 1025058:	pop    esi
 1025059:	pop    ebp
 102505a:	pop    esi
 102505b:	pop    esi
 102505c:	pop    esi
 102505d:	popa   
 102505e:	bound  ebx,QWORD PTR [ebp+esi*1-0x80]
 1025062:	stos   DWORD PTR es:[edi],eax
 1025063:	fucomp st(4)
 1025065:	div    ecx
 1025067:	div    ecx
 1025069:	icebp  
 102506a:	icebp  
 102506b:	icebp  
 102506c:	icebp  
 102506d:	imul   esp
 102506f:	or     al,0x0
	...
 1025079:	add    BYTE PTR [eax],al
 102507b:	add    al,ah
 102507d:	fcmovnu st,st(3)
 102507f:	fcmovnu st,st(3)
 1025081:	loopne 0x1025082
 1025083:	(bad)  
 1025084:	(bad)  
 1025085:	(bad)  
 1025086:	(bad)  
 1025087:	(bad)  
 1025088:	(bad)  
 1025089:	(bad)  
 102508a:	(bad)  
 102508b:	(bad)  
 102508c:	(bad)  
 102508d:	(bad)  
 102508e:	(bad)  
 102508f:	(bad)  
 1025090:	call   ebx
 1025092:	mov    al,bl
 1025094:	pop    ebx
 1025095:	pop    ebx
 1025096:	pop    ebx
 1025097:	pop    ebp
 1025098:	pop    ebp
 1025099:	pop    ebp
 102509a:	pop    ebp
 102509b:	pop    ebp
 102509c:	pop    ebp
 102509d:	pop    esi
 102509e:	popa   
 102509f:	pop    esi
 10250a0:	push   ebx
 10250a1:	cmp    eax,0xf1dbb180
 10250a6:	icebp  
 10250a7:	div    ecx
 10250a9:	icebp  
 10250aa:	div    ecx
 10250ac:	icebp  
 10250ad:	in     al,dx
 10250ae:	icebp  
 10250af:	or     al,0x0
	...
 10250bd:	add    BYTE PTR [edi+edi*8-0x1],ch
 10250c1:	(bad)  
 10250c2:	(bad)  
 10250c3:	(bad)  
 10250c4:	(bad)  
 10250c5:	(bad)  
 10250c6:	(bad)  
 10250c7:	(bad)  
 10250c8:	(bad)  
 10250c9:	(bad)  
 10250ca:	(bad)  
 10250cb:	(bad)  
 10250cc:	(bad)  
 10250cd:	(bad)  
 10250ce:	(bad)  
 10250cf:	clc    
 10250d0:	push   ebx
 10250d2:	mov    dl,bh
 10250d4:	xchg   esi,eax
 10250d5:	pop    ebp
 10250d6:	push   edi
 10250d7:	pop    ebp
 10250d8:	pop    ebp
 10250d9:	pop    ebx
 10250da:	pop    ebp
 10250db:	pop    ebx
 10250dc:	pop    ebx
 10250dd:	pop    ebp
 10250de:	pop    ecx
 10250df:	popa   
 10250e0:	pop    esi
 10250e1:	dec    ebx
 10250e2:	cmp    eax,0xfae2b07b
 10250e7:	div    ecx
 10250e9:	icebp  
 10250ea:	div    ecx
 10250ec:	icebp  
 10250ed:	icebp  
 10250ee:	icebp  
 10250ef:	or     eax,DWORD PTR [eax]
	...
 10250fd:	add    BYTE PTR [edi+edi*8-0x1],ch
 1025101:	(bad)  
 1025102:	(bad)  
 1025103:	(bad)  
 1025104:	(bad)  
 1025105:	(bad)  
 1025106:	(bad)  
 1025107:	(bad)  
 1025108:	(bad)  
 1025109:	(bad)  
 102510a:	(bad)  
 102510b:	(bad)  
 102510c:	(bad)  
 102510d:	(bad)  
 102510e:	(bad)  
 102510f:	(bad)  
 1025110:	(bad)  
 1025111:	(bad)  
 1025112:	fisttp WORD PTR [eax+0x5b575ad7]
 1025118:	pop    ebx
 1025119:	popa   
 102511a:	pop    ebx
 102511b:	popa   
 102511c:	popa   
 102511d:	popa   
 102511e:	popa   
 102511f:	popa   
 1025120:	pusha  
 1025121:	popa   
 1025122:	dec    ebx
 1025123:	cmp    ch,BYTE PTR [ebx-0xe08081e]
 1025129:	cli    
 102512a:	icebp  
 102512b:	icebp  
 102512c:	icebp  
 102512d:	div    ecx
 102512f:	or     eax,DWORD PTR [eax]
	...
 1025139:	add    BYTE PTR [eax],al
 102513b:	add    BYTE PTR [ecx+0x68],bh
 102513e:	push   0xff796868
 1025143:	(bad)  
 1025144:	(bad)  
 1025145:	(bad)  
 1025146:	(bad)  
 1025147:	(bad)  
 1025148:	(bad)  
 1025149:	(bad)  
 102514a:	(bad)  
 102514b:	(bad)  
 102514c:	(bad)  
 102514d:	(bad)  
 102514e:	(bad)  
 102514f:	(bad)  
 1025150:	(bad)  
 1025151:	(bad)  
 1025152:	dec    DWORD PTR [ecx+0x565661d7]
 1025158:	pusha  
 1025159:	pusha  
 102515a:	pusha  
 102515b:	pusha  
 102515c:	pusha  
 102515d:	pusha  
 102515e:	pusha  
 102515f:	popa   
 1025160:	arpl   WORD PTR [ebx+0x63],sp
 1025163:	xor    al,al
 1025165:	fdivrp st(7),st
 1025167:	div    edi
 1025169:	icebp  
 102516a:	div    ecx
 102516c:	div    ecx
 102516e:	icebp  
 102516f:	or     eax,DWORD PTR [eax]
	...
 1025179:	add    BYTE PTR [eax],al
 102517b:	add    BYTE PTR [eax],cl
 102517d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102517e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102517f:	(bad)  
 1025180:	fisttp DWORD PTR [eax]
 1025182:	(bad)  
 1025183:	(bad)  
 1025184:	(bad)  
 1025185:	(bad)  
 1025186:	(bad)  
 1025187:	(bad)  
 1025188:	(bad)  
 1025189:	(bad)  
 102518a:	(bad)  
 102518b:	(bad)  
 102518c:	(bad)  
 102518d:	(bad)  
 102518e:	(bad)  
 102518f:	(bad)  
 1025190:	(bad)  
 1025191:	(bad)  
 1025192:	call   edx
 1025194:	inc    ebp
 1025195:	inc    edi
 1025196:	inc    esi
 1025197:	inc    esi
 1025198:	inc    ecx
 1025199:	inc    ecx
 102519a:	aas    
 102519b:	cmp    BYTE PTR [ebx],dh
 102519d:	cmp    BYTE PTR [ecx],dh
 102519f:	xor    ah,BYTE PTR [esi]
 10251a1:	and    eax,0xf7f7763e
 10251a6:	div    edi
 10251a8:	icebp  
 10251a9:	cli    
 10251aa:	icebp  
 10251ab:	div    cl
 10251ad:	icebp  
 10251ae:	icebp  
 10251af:	or     al,0x0
	...
 10251b9:	add    BYTE PTR [eax],al
 10251bb:	add    al,ah
 10251bd:	fcmovnu st,st(3)
 10251bf:	fcmovnu st,st(3)
 10251c1:	loopne 0x10251c2
 10251c3:	(bad)  
 10251c4:	(bad)  
 10251c5:	(bad)  
 10251c6:	(bad)  
 10251c7:	(bad)  
 10251c8:	(bad)  
 10251c9:	(bad)  
 10251ca:	(bad)  
 10251cb:	(bad)  
 10251cc:	(bad)  
 10251cd:	(bad)  
 10251ce:	(bad)  
 10251cf:	(bad)  
 10251d0:	(bad)  
 10251d1:	(bad)  
 10251d2:	(bad)  
 10251d3:	(bad)  
 10251d4:	(bad)  
 10251d5:	(bad)  
 10251d6:	clc    
 10251d7:	(bad)  
 10251d8:	(bad)  
 10251d9:	clc    
 10251da:	(bad)  
 10251db:	clc    
 10251dc:	(bad)  
 10251dd:	clc    
 10251de:	clc    
 10251df:	clc    
 10251e0:	clc    
 10251e1:	(bad)  
 10251e2:	clc    
 10251e3:	clc    
 10251e4:	div    edi
 10251e6:	cli    
 10251e7:	idiv   edx
 10251e9:	div    ecx
 10251eb:	cli    
 10251ec:	icebp  
 10251ed:	cli    
 10251ee:	icebp  
 10251ef:	or     eax,DWORD PTR [eax]
	...
 10251fd:	add    BYTE PTR [ebp-0x1],ch
 1025200:	(bad)  
 1025201:	(bad)  
 1025202:	(bad)  
 1025203:	(bad)  
 1025204:	(bad)  
 1025205:	(bad)  
 1025206:	(bad)  
 1025207:	(bad)  
 1025208:	(bad)  
 1025209:	(bad)  
 102520a:	(bad)  
 102520b:	(bad)  
 102520c:	(bad)  
 102520d:	(bad)  
 102520e:	(bad)  
 102520f:	(bad)  
 1025210:	(bad)  
 1025211:	(bad)  
 1025212:	(bad)  
 1025213:	(bad)  
 1025214:	(bad)  
 1025215:	(bad)  
 1025216:	(bad)  
 1025217:	(bad)  
 1025218:	(bad)  
 1025219:	(bad)  
 102521a:	clc    
 102521b:	(bad)  
 102521c:	clc    
 102521d:	(bad)  
 102521e:	(bad)  
 102521f:	clc    
 1025220:	(bad)  
 1025221:	clc    
 1025222:	clc    
 1025223:	clc    
 1025224:	push   edi
 1025226:	idiv   edx
 1025228:	div    edi
 102522a:	icebp  
 102522b:	cli    
 102522c:	icebp  
 102522d:	icebp  
 102522e:	test   DWORD PTR [ebx],0x0
	...
 102523c:	add    BYTE PTR [eax],al
 102523e:	ins    DWORD PTR es:[edi],dx
 102523f:	(bad)  
 1025240:	(bad)  
 1025241:	(bad)  
 1025242:	(bad)  
 1025243:	(bad)  
 1025244:	(bad)  
 1025245:	(bad)  
 1025246:	(bad)  
 1025247:	(bad)  
 1025248:	(bad)  
 1025249:	(bad)  
 102524a:	(bad)  
 102524b:	(bad)  
 102524c:	(bad)  
 102524d:	(bad)  
 102524e:	(bad)  
 102524f:	(bad)  
 1025250:	(bad)  
 1025251:	(bad)  
 1025252:	(bad)  
 1025253:	(bad)  
 1025254:	(bad)  
 1025255:	(bad)  
 1025256:	(bad)  
 1025257:	clc    
 1025258:	(bad)  
 1025259:	(bad)  
 102525a:	(bad)  
 102525b:	clc    
 102525c:	(bad)  
 102525d:	clc    
 102525e:	(bad)  
 102525f:	clc    
 1025260:	clc    
 1025261:	(bad)  
 1025262:	clc    
 1025263:	clc    
 1025264:	clc    
 1025265:	idiv   edx
 1025267:	idiv   edx
 1025269:	idiv   edx
 102526b:	icebp  
 102526c:	cli    
 102526d:	div    ecx
 102526f:	or     al,0x0
	...
 1025279:	add    BYTE PTR [eax],al
 102527b:	add    BYTE PTR [ecx+0x68],bh
 102527e:	push   0xff796868
 1025283:	(bad)  
 1025284:	(bad)  
 1025285:	(bad)  
 1025286:	(bad)  
 1025287:	(bad)  
 1025288:	(bad)  
 1025289:	(bad)  
 102528a:	(bad)  
 102528b:	(bad)  
 102528c:	(bad)  
 102528d:	(bad)  
 102528e:	(bad)  
 102528f:	(bad)  
 1025290:	(bad)  
 1025291:	(bad)  
 1025292:	(bad)  
 1025293:	(bad)  
 1025294:	(bad)  
 1025295:	(bad)  
 1025296:	(bad)  
 1025297:	(bad)  
 1025298:	(bad)  
 1025299:	(bad)  
 102529a:	(bad)  
 102529b:	(bad)  
 102529c:	(bad)  
 102529d:	clc    
 102529e:	(bad)  
 102529f:	clc    
 10252a0:	(bad)  
 10252a1:	clc    
 10252a2:	(bad)  
 10252a3:	clc    
 10252a4:	push   edi
 10252a6:	push   edi
 10252a8:	div    esi
 10252aa:	idiv   dl
 10252ac:	icebp  
 10252ad:	div    bh
 10252af:	or     al,0x0
	...
 10252b9:	add    BYTE PTR [eax],al
 10252bb:	add    BYTE PTR [eax],cl
 10252bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10252be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10252bf:	(bad)  
 10252c0:	fisttp DWORD PTR [eax]
 10252c2:	(bad)  
 10252c3:	(bad)  
 10252c4:	(bad)  
 10252c5:	(bad)  
 10252c6:	(bad)  
 10252c7:	(bad)  
 10252c8:	(bad)  
 10252c9:	(bad)  
 10252ca:	(bad)  
 10252cb:	(bad)  
 10252cc:	(bad)  
 10252cd:	(bad)  
 10252ce:	(bad)  
 10252cf:	(bad)  
 10252d0:	(bad)  
 10252d1:	(bad)  
 10252d2:	(bad)  
 10252d3:	(bad)  
 10252d4:	(bad)  
 10252d5:	(bad)  
 10252d6:	(bad)  
 10252d7:	(bad)  
 10252d8:	(bad)  
 10252d9:	clc    
 10252da:	(bad)  
 10252db:	clc    
 10252dc:	(bad)  
 10252dd:	(bad)  
 10252de:	clc    
 10252df:	(bad)  
 10252e0:	(bad)  
 10252e1:	clc    
 10252e2:	clc    
 10252e3:	push   edi
 10252e5:	push   edi
 10252e7:	cli    
 10252e8:	cli    
 10252e9:	div    ecx
 10252eb:	cli    
 10252ec:	cli    
 10252ed:	icebp  
 10252ee:	test   BYTE PTR [eax+eax*1],0x0
	...
 10252fa:	add    BYTE PTR [eax],al
 10252fc:	loopne 0x10252d9
 10252fe:	fcmovnu st,st(3)
 1025300:	fneni(8087 only) 
 1025302:	(bad)  
 1025303:	(bad)  
 1025304:	(bad)  
 1025305:	(bad)  
 1025306:	(bad)  
 1025307:	(bad)  
 1025308:	(bad)  
 1025309:	(bad)  
 102530a:	(bad)  
 102530b:	(bad)  
 102530c:	(bad)  
 102530d:	(bad)  
 102530e:	(bad)  
 102530f:	(bad)  
 1025310:	(bad)  
 1025311:	(bad)  
 1025312:	(bad)  
 1025313:	(bad)  
 1025314:	(bad)  
 1025315:	(bad)  
 1025316:	(bad)  
 1025317:	(bad)  
 1025318:	(bad)  
 1025319:	(bad)  
 102531a:	(bad)  
 102531b:	(bad)  
 102531c:	(bad)  
 102531d:	clc    
 102531e:	(bad)  
 102531f:	(bad)  
 1025320:	clc    
 1025321:	(bad)  
 1025322:	push   edi
 1025324:	push   edi
 1025326:	idiv   edx
 1025328:	idiv   edx
 102532a:	cli    
 102532b:	idiv   edx
 102532d:	icebp  
 102532e:	cli    
 102532f:	or     al,0x0
	...
 102533d:	add    BYTE PTR [ebp-0x1],ch
 1025340:	(bad)  
 1025341:	(bad)  
 1025342:	(bad)  
 1025343:	(bad)  
 1025344:	(bad)  
 1025345:	(bad)  
 1025346:	(bad)  
 1025347:	(bad)  
 1025348:	(bad)  
 1025349:	(bad)  
 102534a:	(bad)  
 102534b:	(bad)  
 102534c:	(bad)  
 102534d:	(bad)  
 102534e:	(bad)  
 102534f:	(bad)  
 1025350:	(bad)  
 1025351:	(bad)  
 1025352:	(bad)  
 1025353:	(bad)  
 1025354:	(bad)  
 1025355:	(bad)  
 1025356:	(bad)  
 1025357:	(bad)  
 1025358:	(bad)  
 1025359:	(bad)  
 102535a:	(bad)  
 102535b:	(bad)  
 102535c:	(bad)  
 102535d:	(bad)  
 102535e:	(bad)  
 102535f:	clc    
 1025360:	adc    edx,DWORD PTR [ebx]
 1025362:	adc    edx,DWORD PTR [ebx]
 1025364:	adc    DWORD PTR [ebx],edx
 1025366:	adc    DWORD PTR [ecx],edx
 1025368:	adc    DWORD PTR [ecx],edx
 102536a:	(bad)  
 102536b:	(bad)  
 102536c:	(bad)  
 102536e:	add    eax,DWORD PTR [ecx]
	...
 102537c:	add    BYTE PTR [eax],al
 102537e:	jo     0x102537f
 1025380:	(bad)  
 1025381:	(bad)  
 1025382:	(bad)  
 1025383:	(bad)  
 1025384:	(bad)  
 1025385:	(bad)  
 1025386:	(bad)  
 1025387:	(bad)  
 1025388:	(bad)  
 1025389:	(bad)  
 102538a:	(bad)  
 102538b:	(bad)  
 102538c:	(bad)  
 102538d:	(bad)  
 102538e:	(bad)  
 102538f:	(bad)  
 1025390:	(bad)  
 1025391:	(bad)  
 1025392:	(bad)  
 1025393:	(bad)  
 1025394:	(bad)  
 1025395:	(bad)  
 1025396:	(bad)  
 1025397:	(bad)  
 1025398:	(bad)  
 1025399:	(bad)  
 102539a:	(bad)  
 102539b:	clc    
 102539c:	(bad)  
 102539d:	(bad)  
 102539e:	(bad)  
 102539f:	call   DWORD PTR [ebx]
 10253a1:	(bad)  
 10253a2:	mov    edi,0xb7bababb
 10253a7:	mov    bh,0xb7
 10253a9:	mov    bh,0xb7
 10253ab:	xchg   BYTE PTR [edi+0x9037f],dh
	...
 10253b9:	add    BYTE PTR [eax],al
 10253bb:	add    BYTE PTR [ecx+0x68],bh
 10253be:	push   0xff796868
 10253c3:	(bad)  
 10253c4:	(bad)  
 10253c5:	(bad)  
 10253c6:	(bad)  
 10253c7:	(bad)  
 10253c8:	(bad)  
 10253c9:	(bad)  
 10253ca:	(bad)  
 10253cb:	(bad)  
 10253cc:	(bad)  
 10253cd:	(bad)  
 10253ce:	(bad)  
 10253cf:	(bad)  
 10253d0:	(bad)  
 10253d1:	(bad)  
 10253d2:	(bad)  
 10253d3:	(bad)  
 10253d4:	(bad)  
 10253d5:	(bad)  
 10253d6:	(bad)  
 10253d7:	(bad)  
 10253d8:	(bad)  
 10253d9:	(bad)  
 10253da:	(bad)  
 10253db:	(bad)  
 10253dc:	(bad)  
 10253dd:	(bad)  
 10253de:	clc    
 10253df:	call   DWORD PTR [edi+edi*8]
 10253e2:	jecxz  0x10253c7
 10253e4:	retf   
 10253e5:	(bad)
 10253e9:	mov    bh,0x86
 10253eb:	test   BYTE PTR [ebx+eax*1+0xab5],al
	...
 10253fa:	add    BYTE PTR [eax],al
 10253fc:	or     BYTE PTR [edi+0x8dbffa7],ah
 1025402:	(bad)  
 1025403:	(bad)  
 1025404:	(bad)  
 1025405:	(bad)  
 1025406:	(bad)  
 1025407:	(bad)  
 1025408:	(bad)  
 1025409:	(bad)  
 102540a:	(bad)  
 102540b:	(bad)  
 102540c:	(bad)  
 102540d:	(bad)  
 102540e:	(bad)  
 102540f:	(bad)  
 1025410:	(bad)  
 1025411:	(bad)  
 1025412:	(bad)  
 1025413:	(bad)  
 1025414:	(bad)  
 1025415:	(bad)  
 1025416:	(bad)  
 1025417:	(bad)  
 1025418:	(bad)  
 1025419:	(bad)  
 102541a:	(bad)  
 102541b:	(bad)  
 102541c:	(bad)  
 102541d:	(bad)  
 102541e:	(bad)  
 102541f:	call   DWORD PTR [edi+edi*8]
 1025422:	repnz jecxz 0x1025408
 1025425:	retf   
 1025426:	(bad)
 102542a:	mov    bh,0x86
 102542c:	push   es
 102542d:	mov    ch,0xec
 102542f:	or     eax,DWORD PTR [eax]
	...
 1025439:	add    BYTE PTR [eax],al
 102543b:	add    al,ah
 102543d:	fcmovnu st,st(3)
 102543f:	fcmovnu st,st(3)
 1025441:	loopne 0x1025442
 1025443:	(bad)  
 1025444:	(bad)  
 1025445:	(bad)  
 1025446:	(bad)  
 1025447:	(bad)  
 1025448:	(bad)  
 1025449:	(bad)  
 102544a:	(bad)  
 102544b:	(bad)  
 102544c:	(bad)  
 102544d:	(bad)  
 102544e:	(bad)  
 102544f:	(bad)  
 1025450:	(bad)  
 1025451:	(bad)  
 1025452:	(bad)  
 1025453:	(bad)  
 1025454:	(bad)  
 1025455:	(bad)  
 1025456:	(bad)  
 1025457:	(bad)  
 1025458:	(bad)  
 1025459:	(bad)  
 102545a:	(bad)  
 102545b:	(bad)  
 102545c:	(bad)  
 102545d:	(bad)  
 102545e:	(bad)  
 102545f:	call   DWORD PTR ds:0xe3f3f7ff
 1025465:	into   
 1025466:	retf   
 1025467:	sar    DWORD PTR [ebx-0x4af84846],0xec
 102546e:	test   DWORD PTR [ebx],0x0
	...
 102547c:	add    BYTE PTR [eax],al
 102547e:	jl     0x102547f
 1025480:	(bad)  
 1025481:	(bad)  
 1025482:	(bad)  
 1025483:	(bad)  
 1025484:	(bad)  
 1025485:	(bad)  
 1025486:	(bad)  
 1025487:	(bad)  
 1025488:	(bad)  
 1025489:	(bad)  
 102548a:	(bad)  
 102548b:	(bad)  
 102548c:	(bad)  
 102548d:	(bad)  
 102548e:	(bad)  
 102548f:	(bad)  
 1025490:	(bad)  
 1025491:	(bad)  
 1025492:	(bad)  
 1025493:	(bad)  
 1025494:	(bad)  
 1025495:	(bad)  
 1025496:	(bad)  
 1025497:	(bad)  
 1025498:	(bad)  
 1025499:	(bad)  
 102549a:	(bad)  
 102549b:	(bad)  
 102549c:	(bad)  
 102549d:	(bad)  
 102549e:	(bad)  
 102549f:	call   DWORD PTR ds:0xf3f7f8ff
 10254a5:	jecxz  0x1025472
 10254a7:	les    edi,FWORD PTR [ebx-0x1349f645]
 10254ad:	div    ecx
 10254af:	or     eax,DWORD PTR [eax]
	...
 10254bd:	add    BYTE PTR [edi+edi*8-0x1],bh
 10254c1:	(bad)  
 10254c2:	(bad)  
 10254c3:	(bad)  
 10254c4:	(bad)  
 10254c5:	(bad)  
 10254c6:	(bad)  
 10254c7:	(bad)  
 10254c8:	(bad)  
 10254c9:	(bad)  
 10254ca:	(bad)  
 10254cb:	(bad)  
 10254cc:	(bad)  
 10254cd:	(bad)  
 10254ce:	(bad)  
 10254cf:	(bad)  
 10254d0:	(bad)  
 10254d1:	(bad)  
 10254d2:	(bad)  
 10254d3:	(bad)  
 10254d4:	(bad)  
 10254d5:	(bad)  
 10254d6:	(bad)  
 10254d7:	(bad)  
 10254d8:	(bad)  
 10254d9:	(bad)  
 10254da:	(bad)  
 10254db:	(bad)  
 10254dc:	(bad)  
 10254dd:	(bad)  
 10254de:	(bad)  
 10254df:	call   DWORD PTR ds:0xecf3f8ff
 10254e5:	jecxz  0x10254b2
 10254e7:	les    edi,FWORD PTR [ebx-0x130d45f5]
 10254ed:	div    edi
 10254ef:	or     eax,DWORD PTR [eax]
	...
 10254f9:	add    BYTE PTR [eax],al
 10254fb:	add    BYTE PTR [ecx+0x68],bh
 10254fe:	push   0xff796868
 1025503:	(bad)  
 1025504:	(bad)  
 1025505:	(bad)  
 1025506:	(bad)  
 1025507:	(bad)  
 1025508:	(bad)  
 1025509:	(bad)  
 102550a:	(bad)  
 102550b:	(bad)  
 102550c:	(bad)  
 102550d:	(bad)  
 102550e:	(bad)  
 102550f:	(bad)  
 1025510:	(bad)  
 1025511:	(bad)  
 1025512:	(bad)  
 1025513:	(bad)  
 1025514:	(bad)  
 1025515:	(bad)  
 1025516:	(bad)  
 1025517:	(bad)  
 1025518:	(bad)  
 1025519:	(bad)  
 102551a:	(bad)  
 102551b:	(bad)  
 102551c:	(bad)  
 102551d:	(bad)  
 102551e:	(bad)  
 102551f:	call   DWORD PTR ds:0xdef7f8ff
 1025525:	jecxz  0x10254f2
 1025527:	les    edx,FWORD PTR [ecx]
 1025529:	mov    edx,0xf7f7f2ec
 102552e:	cli    
 102552f:	or     eax,DWORD PTR [eax]
	...
 1025539:	add    BYTE PTR [eax],al
 102553b:	add    BYTE PTR [eax],cl
 102553d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102553e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102553f:	(bad)  
 1025540:	fisttp DWORD PTR [eax]
 1025542:	(bad)  
 1025543:	(bad)  
 1025544:	(bad)  
 1025545:	(bad)  
 1025546:	(bad)  
 1025547:	(bad)  
 1025548:	(bad)  
 1025549:	(bad)  
 102554a:	(bad)  
 102554b:	(bad)  
 102554c:	(bad)  
 102554d:	(bad)  
 102554e:	(bad)  
 102554f:	(bad)  
 1025550:	(bad)  
 1025551:	(bad)  
 1025552:	(bad)  
 1025553:	(bad)  
 1025554:	(bad)  
 1025555:	(bad)  
 1025556:	(bad)  
 1025557:	(bad)  
 1025558:	(bad)  
 1025559:	(bad)  
 102555a:	(bad)  
 102555b:	(bad)  
 102555c:	(bad)  
 102555d:	(bad)  
 102555e:	(bad)  
 102555f:	call   DWORD PTR [esi]
 1025561:	(bad)  
 1025562:	clc    
 1025563:	repz in al,dx
 1025565:	jecxz  0x102552b
 1025567:	adc    edi,DWORD PTR [ebx-0x8080d0e]
 102556d:	idiv   edx
 102556f:	or     eax,DWORD PTR [eax]
	...
 1025579:	add    BYTE PTR [eax],al
 102557b:	add    al,ah
 102557d:	fcmovnu st,st(3)
 102557f:	fcmovnu st,st(3)
 1025581:	loopne 0x1025582
 1025583:	(bad)  
 1025584:	(bad)  
 1025585:	(bad)  
 1025586:	(bad)  
 1025587:	(bad)  
 1025588:	(bad)  
 1025589:	(bad)  
 102558a:	(bad)  
 102558b:	(bad)  
 102558c:	(bad)  
 102558d:	(bad)  
 102558e:	(bad)  
 102558f:	(bad)  
 1025590:	(bad)  
 1025591:	(bad)  
 1025592:	(bad)  
 1025593:	(bad)  
 1025594:	(bad)  
 1025595:	(bad)  
 1025596:	(bad)  
 1025597:	(bad)  
 1025598:	(bad)  
 1025599:	(bad)  
 102559a:	(bad)  
 102559b:	(bad)  
 102559c:	(bad)  
 102559d:	(bad)  
 102559e:	(bad)  
 102559f:	call   DWORD PTR [esi]
 10255a1:	push   edi
 10255a3:	repz jecxz 0x1025574
 10255a6:	adc    eax,0xf7f2f2bb
 10255ab:	div    edi
 10255ad:	cli    
 10255ae:	dec    DWORD PTR [ebx]
	...
 10255bc:	add    BYTE PTR [eax],al
 10255be:	jl     0x10255bf
 10255c0:	(bad)  
 10255c1:	(bad)  
 10255c2:	(bad)  
 10255c3:	(bad)  
 10255c4:	(bad)  
 10255c5:	(bad)  
 10255c6:	(bad)  
 10255c7:	(bad)  
 10255c8:	(bad)  
 10255c9:	(bad)  
 10255ca:	(bad)  
 10255cb:	(bad)  
 10255cc:	(bad)  
 10255cd:	(bad)  
 10255ce:	(bad)  
 10255cf:	(bad)  
 10255d0:	(bad)  
 10255d1:	(bad)  
 10255d2:	(bad)  
 10255d3:	(bad)  
 10255d4:	(bad)  
 10255d5:	(bad)  
 10255d6:	(bad)  
 10255d7:	(bad)  
 10255d8:	(bad)  
 10255d9:	(bad)  
 10255da:	(bad)  
 10255db:	(bad)  
 10255dc:	(bad)  
 10255dd:	(bad)  
 10255de:	(bad)  
 10255df:	call   DWORD PTR [edi]
 10255e1:	push   edx
 10255e3:	jecxz  0x10255b3
 10255e5:	pop    ss
 10255e6:	mov    edi,0xf7f2f2f2
 10255eb:	cli    
 10255ec:	cli    
 10255ed:	(bad)  
 10255ee:	dec    DWORD PTR [ebx]
	...
 10255fc:	add    BYTE PTR [eax],al
 10255fe:	jge    0x10255ff
 1025600:	(bad)  
 1025601:	(bad)  
 1025602:	(bad)  
 1025603:	(bad)  
 1025604:	(bad)  
 1025605:	(bad)  
 1025606:	(bad)  
 1025607:	(bad)  
 1025608:	(bad)  
 1025609:	(bad)  
 102560a:	(bad)  
 102560b:	(bad)  
 102560c:	(bad)  
 102560d:	(bad)  
 102560e:	(bad)  
 102560f:	(bad)  
 1025610:	(bad)  
 1025611:	(bad)  
 1025612:	(bad)  
 1025613:	(bad)  
 1025614:	(bad)  
 1025615:	(bad)  
 1025616:	(bad)  
 1025617:	(bad)  
 1025618:	(bad)  
 1025619:	(bad)  
 102561a:	(bad)  
 102561b:	(bad)  
 102561c:	(bad)  
 102561d:	(bad)  
 102561e:	(bad)  
 102561f:	call   DWORD PTR [edi]
 1025621:	jmp    ebx
 1025623:	jecxz  0x102568e
 1025625:	shl    edx,0xf2
 1025628:	repnz clc 
 102562a:	idiv   edi
 102562c:	(bad)  
 102562d:	(bad)  
 102562e:	dec    DWORD PTR [ebx]
	...
 102563c:	jns    0x10256a6
 102563e:	push   0xff796868
 1025643:	(bad)  
 1025644:	(bad)  
 1025645:	(bad)  
 1025646:	(bad)  
 1025647:	(bad)  
 1025648:	(bad)  
 1025649:	(bad)  
 102564a:	(bad)  
 102564b:	(bad)  
 102564c:	(bad)  
 102564d:	(bad)  
 102564e:	(bad)  
 102564f:	(bad)  
 1025650:	(bad)  
 1025651:	(bad)  
 1025652:	(bad)  
 1025653:	(bad)  
 1025654:	(bad)  
 1025655:	(bad)  
 1025656:	(bad)  
 1025657:	(bad)  
 1025658:	(bad)  
 1025659:	(bad)  
 102565a:	(bad)  
 102565b:	(bad)  
 102565c:	(bad)  
 102565d:	(bad)  
 102565e:	(bad)  
 102565f:	jmp    FWORD PTR [ecx-0x1]
 1025662:	jecxz  0x10256cf
 1025664:	shl    edx,0xf2
 1025667:	repnz clc 
 1025669:	(bad)  
 102566a:	clc    
 102566b:	(bad)  
 102566c:	(bad)  
 102566d:	(bad)  
 102566e:	dec    DWORD PTR [ebx]
	...
 102567c:	or     BYTE PTR [edi+0x8dbffa7],ah
 1025682:	(bad)  
 1025683:	(bad)  
 1025684:	(bad)  
 1025685:	(bad)  
 1025686:	(bad)  
 1025687:	(bad)  
 1025688:	(bad)  
 1025689:	(bad)  
 102568a:	(bad)  
 102568b:	(bad)  
 102568c:	(bad)  
 102568d:	(bad)  
 102568e:	(bad)  
 102568f:	(bad)  
 1025690:	(bad)  
 1025691:	(bad)  
 1025692:	(bad)  
 1025693:	(bad)  
 1025694:	(bad)  
 1025695:	(bad)  
 1025696:	(bad)  
 1025697:	(bad)  
 1025698:	(bad)  
 1025699:	(bad)  
 102569a:	(bad)  
 102569b:	(bad)  
 102569c:	(bad)  
 102569d:	(bad)  
 102569e:	(bad)  
 102569f:	jmp    FWORD PTR [esi+ecx*8+0x6c]
 10256a3:	shl    edx,0xf2
 10256a6:	cmc    
 10256a7:	clc    
 10256a8:	clc    
 10256a9:	clc    
 10256aa:	(bad)  
 10256ab:	(bad)  
 10256ac:	(bad)  
 10256ad:	(bad)  
 10256ae:	dec    DWORD PTR [ebx]
	...
 10256bc:	loopne 0x1025699
 10256be:	fcmovnu st,st(3)
 10256c0:	fneni(8087 only) 
 10256c2:	(bad)  
 10256c3:	(bad)  
 10256c4:	(bad)  
 10256c5:	(bad)  
 10256c6:	(bad)  
 10256c7:	(bad)  
 10256c8:	(bad)  
 10256c9:	(bad)  
 10256ca:	(bad)  
 10256cb:	(bad)  
 10256cc:	(bad)  
 10256cd:	(bad)  
 10256ce:	(bad)  
 10256cf:	(bad)  
 10256d0:	(bad)  
 10256d1:	(bad)  
 10256d2:	(bad)  
 10256d3:	(bad)  
 10256d4:	(bad)  
 10256d5:	(bad)  
 10256d6:	(bad)  
 10256d7:	(bad)  
 10256d8:	(bad)  
 10256d9:	(bad)  
 10256da:	(bad)  
 10256db:	(bad)  
 10256dc:	(bad)  
 10256dd:	(bad)  
 10256de:	(bad)  
 10256df:	jmp    FWORD PTR [esp+ebp*2-0x3c]
 10256e3:	repnz repnz repnz clc 
 10256e7:	clc    
 10256e8:	(bad)  
 10256e9:	(bad)  
 10256ea:	(bad)  
 10256eb:	(bad)  
 10256ec:	(bad)  
 10256ed:	(bad)  
 10256ee:	dec    DWORD PTR [ebx]
	...
 10256fc:	add    BYTE PTR [eax],al
 10256fe:	jle    0x102577e
 1025700:	jl     0x1025780
 1025702:	jl     0x1025780
 1025704:	jl     0x1025782
 1025706:	jl     0x1025784
 1025708:	jl     0x102577a
 102570a:	jl     0x102577c
 102570c:	jo     0x102577e
 102570e:	ins    DWORD PTR es:[edi],dx
 102570f:	jo     0x102577e
 1025711:	jo     0x1025780
 1025713:	ins    DWORD PTR es:[edi],dx
 1025714:	ins    DWORD PTR es:[edi],dx
 1025715:	jo     0x1025784
 1025717:	ins    DWORD PTR es:[edi],dx
 1025718:	ins    DWORD PTR es:[edi],dx
 1025719:	ins    DWORD PTR es:[edi],dx
 102571a:	ins    DWORD PTR es:[edi],dx
 102571b:	ins    DWORD PTR es:[edi],dx
 102571c:	ins    DWORD PTR es:[edi],dx
 102571d:	imul   ebp,DWORD PTR [ebx+0x69],0x6c6c6c6d
 1025724:	ins    BYTE PTR es:[edi],dx
 1025725:	ins    BYTE PTR es:[edi],dx
 1025726:	ins    BYTE PTR es:[edi],dx
 1025727:	imul   ebp,DWORD PTR [ebx+0x69],0x6b
 102572b:	imul   ebp,DWORD PTR [ecx+0x6b],0x69
 102572f:	or     eax,DWORD PTR [eax]
	...
 1025775:	add    BYTE PTR [eax],al
 1025777:	add    bh,bh
 1025779:	(bad)  
 102577a:	(bad)  
 102577b:	(bad)  
 102577c:	(bad)  
 102577d:	(bad)  
 102577e:	(bad)  
 102577f:	(bad)  
 1025780:	(bad)  
 1025781:	(bad)  
 1025782:	(bad)  
 1025783:	(bad)  
 1025784:	(bad)  
 1025785:	(bad)  
 1025786:	(bad)  
 1025787:	(bad)  
 1025788:	cld    
 1025789:	add    BYTE PTR [eax],al
 102578b:	add    BYTE PTR [eax],al
 102578d:	add    BYTE PTR [eax],al
 102578f:	(bad)  
 1025790:	cld    
 1025791:	add    BYTE PTR [eax],al
 1025793:	add    BYTE PTR [eax],al
 1025795:	add    BYTE PTR [eax],al
 1025797:	push   eax
 1025799:	add    BYTE PTR [eax],al
 102579b:	add    BYTE PTR [eax],al
 102579d:	add    BYTE PTR [eax],al
 102579f:	push   eax
 10257a1:	add    BYTE PTR [eax],al
 10257a3:	add    BYTE PTR [eax],al
 10257a5:	add    BYTE PTR [eax],al
 10257a7:	push   eax
 10257a9:	add    BYTE PTR [eax],al
 10257ab:	add    BYTE PTR [eax],al
 10257ad:	add    BYTE PTR [eax],al
 10257af:	(bad)  
 10257b0:	cld    
 10257b1:	add    BYTE PTR [eax],al
 10257b3:	add    BYTE PTR [eax],al
 10257b5:	add    BYTE PTR [eax],al
 10257b7:	(bad)  
 10257b8:	cld    
 10257b9:	add    BYTE PTR [eax],al
 10257bb:	add    BYTE PTR [eax],al
 10257bd:	add    BYTE PTR [eax],al
 10257bf:	push   eax
 10257c1:	add    BYTE PTR [eax],al
 10257c3:	add    BYTE PTR [eax],al
 10257c5:	add    BYTE PTR [eax],al
 10257c7:	push   eax
 10257c9:	add    BYTE PTR [eax],al
 10257cb:	add    BYTE PTR [eax],al
 10257cd:	add    BYTE PTR [eax],al
 10257cf:	push   eax
 10257d1:	add    BYTE PTR [eax],al
 10257d3:	add    BYTE PTR [eax],al
 10257d5:	add    BYTE PTR [eax],al
 10257d7:	(bad)  
 10257d8:	cld    
 10257d9:	add    BYTE PTR [eax],al
 10257db:	add    BYTE PTR [eax],al
 10257dd:	add    BYTE PTR [eax],al
 10257df:	(bad)  
 10257e0:	cld    
 10257e1:	add    BYTE PTR [eax],al
 10257e3:	add    BYTE PTR [eax],al
 10257e5:	add    BYTE PTR [eax],al
 10257e7:	push   eax
 10257e9:	add    BYTE PTR [eax],al
 10257eb:	add    BYTE PTR [eax],al
 10257ed:	add    BYTE PTR [eax],al
 10257ef:	push   eax
 10257f1:	add    BYTE PTR [eax],al
 10257f3:	add    BYTE PTR [eax],al
 10257f5:	add    BYTE PTR [eax],al
 10257f7:	push   eax
 10257f9:	add    BYTE PTR [eax],al
 10257fb:	add    BYTE PTR [eax],al
 10257fd:	add    BYTE PTR [eax],al
 10257ff:	(bad)  
 1025800:	cld    
 1025801:	add    BYTE PTR [eax],al
 1025803:	add    BYTE PTR [eax],al
 1025805:	add    BYTE PTR [eax],al
 1025807:	(bad)  
 1025808:	cld    
 1025809:	add    BYTE PTR [eax],al
 102580b:	add    BYTE PTR [eax],al
 102580d:	add    BYTE PTR [eax],al
 102580f:	push   eax
 1025811:	add    BYTE PTR [eax],al
 1025813:	add    BYTE PTR [eax],al
 1025815:	add    BYTE PTR [eax],al
 1025817:	push   eax
 1025819:	add    BYTE PTR [eax],al
 102581b:	add    BYTE PTR [eax],al
 102581d:	add    BYTE PTR [eax],al
 102581f:	push   eax
 1025821:	add    BYTE PTR [eax],al
 1025823:	add    BYTE PTR [eax],al
 1025825:	add    BYTE PTR [eax],al
 1025827:	(bad)  
 1025828:	cld    
 1025829:	add    BYTE PTR [eax],al
 102582b:	add    BYTE PTR [eax],al
 102582d:	add    BYTE PTR [eax],al
 102582f:	(bad)  
 1025830:	cld    
 1025831:	add    BYTE PTR [eax],al
 1025833:	add    BYTE PTR [eax],al
 1025835:	add    BYTE PTR [eax],al
 1025837:	push   eax
 1025839:	add    BYTE PTR [eax],al
 102583b:	add    BYTE PTR [eax],al
 102583d:	add    BYTE PTR [eax],al
 102583f:	push   eax
 1025841:	add    BYTE PTR [eax],al
 1025843:	add    BYTE PTR [eax],al
 1025845:	add    BYTE PTR [eax],al
 1025847:	push   eax
 1025849:	add    BYTE PTR [eax],al
 102584b:	add    BYTE PTR [eax],al
 102584d:	add    BYTE PTR [eax],al
 102584f:	(bad)  
 1025850:	cld    
 1025851:	add    BYTE PTR [eax],al
 1025853:	add    BYTE PTR [eax],al
 1025855:	add    BYTE PTR [eax],al
 1025857:	(bad)  
 1025858:	cld    
 1025859:	add    BYTE PTR [eax],al
 102585b:	add    BYTE PTR [eax],al
 102585d:	add    BYTE PTR [eax],al
 102585f:	push   eax
 1025861:	add    BYTE PTR [eax],al
 1025863:	add    BYTE PTR [eax],al
 1025865:	add    BYTE PTR [eax],al
 1025867:	push   eax
 1025869:	add    BYTE PTR [eax],al
 102586b:	add    BYTE PTR [eax],al
 102586d:	add    BYTE PTR [eax],al
 102586f:	push   eax
 1025871:	add    BYTE PTR [eax],al
 1025873:	add    BYTE PTR [eax],al
 1025875:	add    BYTE PTR [eax],al
 1025877:	(bad)  
 1025878:	cld    
 1025879:	add    BYTE PTR [eax],al
 102587b:	add    BYTE PTR [eax],al
 102587d:	add    BYTE PTR [eax],al
 102587f:	(bad)  
 1025880:	cld    
 1025881:	add    BYTE PTR [eax],al
 1025883:	add    BYTE PTR [eax],al
 1025885:	add    BYTE PTR [eax],al
 1025887:	push   eax
 1025889:	add    BYTE PTR [eax],al
 102588b:	add    BYTE PTR [eax],al
 102588d:	add    BYTE PTR [eax],al
 102588f:	push   eax
 1025891:	add    BYTE PTR [eax],al
 1025893:	add    BYTE PTR [eax],al
 1025895:	add    BYTE PTR [eax],al
 1025897:	push   eax
 1025899:	add    BYTE PTR [eax],al
 102589b:	add    BYTE PTR [eax],al
 102589d:	add    BYTE PTR [eax],al
 102589f:	(bad)  
 10258a0:	cld    
 10258a1:	add    BYTE PTR [eax],al
 10258a3:	add    BYTE PTR [eax],al
 10258a5:	add    BYTE PTR [eax],al
 10258a7:	(bad)  
 10258a8:	cld    
 10258a9:	add    BYTE PTR [eax],al
 10258ab:	add    BYTE PTR [eax],al
 10258ad:	add    BYTE PTR [eax],al
 10258af:	push   eax
 10258b1:	add    BYTE PTR [eax],al
 10258b3:	add    BYTE PTR [eax],al
 10258b5:	add    BYTE PTR [eax],al
 10258b7:	push   eax
 10258b9:	add    BYTE PTR [eax],al
 10258bb:	add    BYTE PTR [eax],al
 10258bd:	add    BYTE PTR [eax],al
 10258bf:	push   eax
 10258c1:	add    BYTE PTR [eax],al
 10258c3:	add    BYTE PTR [eax],al
 10258c5:	add    BYTE PTR [eax],al
 10258c7:	(bad)  
 10258c8:	cld    
 10258c9:	add    BYTE PTR [eax],al
 10258cb:	add    BYTE PTR [eax],al
 10258cd:	add    BYTE PTR [eax],al
 10258cf:	(bad)  
 10258d0:	cld    
 10258d1:	add    BYTE PTR [eax],al
 10258d3:	add    BYTE PTR [eax],al
 10258d5:	add    BYTE PTR [eax],al
 10258d7:	push   eax
 10258d9:	add    BYTE PTR [eax],al
 10258db:	add    BYTE PTR [eax],al
 10258dd:	add    BYTE PTR [eax],al
 10258df:	push   eax
 10258e1:	add    BYTE PTR [eax],al
 10258e3:	add    BYTE PTR [eax],al
 10258e5:	add    BYTE PTR [eax],al
 10258e7:	push   eax
 10258e9:	add    BYTE PTR [eax],al
 10258eb:	add    BYTE PTR [eax],al
 10258ed:	add    BYTE PTR [eax],al
 10258ef:	(bad)  
 10258f0:	cld    
 10258f1:	add    BYTE PTR [eax],al
 10258f3:	add    BYTE PTR [eax],al
 10258f5:	add    BYTE PTR [eax],al
 10258f7:	(bad)  
 10258f8:	cld    
 10258f9:	add    BYTE PTR [eax],al
 10258fb:	add    BYTE PTR [eax],al
 10258fd:	add    BYTE PTR [eax],al
 10258ff:	push   eax
 1025901:	add    BYTE PTR [eax],al
 1025903:	add    BYTE PTR [eax],al
 1025905:	add    BYTE PTR [eax],al
 1025907:	push   eax
 1025909:	add    BYTE PTR [eax],al
 102590b:	add    BYTE PTR [eax],al
 102590d:	add    BYTE PTR [eax],al
 102590f:	push   eax
 1025911:	add    BYTE PTR [eax],al
 1025913:	add    BYTE PTR [eax],al
 1025915:	add    BYTE PTR [eax],al
 1025917:	(bad)  
 1025918:	cld    
 1025919:	add    BYTE PTR [eax],al
 102591b:	add    BYTE PTR [eax],al
 102591d:	add    BYTE PTR [eax],al
 102591f:	(bad)  
 1025920:	cld    
 1025921:	add    BYTE PTR [eax],al
 1025923:	add    BYTE PTR [eax],al
 1025925:	add    BYTE PTR [eax],al
 1025927:	push   eax
 1025929:	add    BYTE PTR [eax],al
 102592b:	add    BYTE PTR [eax],al
 102592d:	add    BYTE PTR [eax],al
 102592f:	push   eax
 1025931:	add    BYTE PTR [eax],al
 1025933:	add    BYTE PTR [eax],al
 1025935:	add    BYTE PTR [eax],al
 1025937:	push   eax
 1025939:	add    BYTE PTR [eax],al
 102593b:	add    BYTE PTR [eax],al
 102593d:	add    BYTE PTR [eax],al
 102593f:	(bad)  
 1025940:	cld    
 1025941:	add    BYTE PTR [eax],al
 1025943:	add    BYTE PTR [eax],al
 1025945:	add    BYTE PTR [eax],al
 1025947:	(bad)  
 1025948:	cld    
 1025949:	add    BYTE PTR [eax],al
 102594b:	add    BYTE PTR [eax],al
 102594d:	add    BYTE PTR [eax],al
 102594f:	push   eax
 1025951:	add    BYTE PTR [eax],al
 1025953:	add    BYTE PTR [eax],al
 1025955:	add    BYTE PTR [eax],al
 1025957:	push   eax
 1025959:	add    BYTE PTR [eax],al
 102595b:	add    BYTE PTR [eax],al
 102595d:	add    BYTE PTR [eax],al
 102595f:	push   eax
 1025961:	add    BYTE PTR [eax],al
 1025963:	add    BYTE PTR [eax],al
 1025965:	add    BYTE PTR [eax],al
 1025967:	(bad)  
 1025968:	cld    
 1025969:	add    BYTE PTR [eax],al
 102596b:	add    BYTE PTR [eax],al
 102596d:	add    BYTE PTR [eax],al
 102596f:	(bad)  
 1025970:	(bad)  
 1025971:	(bad)  
 1025972:	(bad)  
 1025973:	(bad)  
 1025974:	(bad)  
 1025975:	(bad)  
 1025976:	(bad)  
 1025977:	jmp    FWORD PTR [eax]
 1025979:	add    BYTE PTR [eax],al
 102597b:	add    BYTE PTR [eax],dh
 102597d:	add    BYTE PTR [eax],al
 102597f:	add    BYTE PTR [eax+0x0],ah
 1025982:	add    BYTE PTR [eax],al
 1025984:	add    DWORD PTR [eax],eax
 1025986:	or     BYTE PTR [eax],al
 1025988:	add    BYTE PTR [eax],al
 102598a:	add    BYTE PTR [eax],al
 102598c:	add    BYTE PTR [ecx],cl
	...
 1025996:	add    BYTE PTR [eax],al
 1025998:	add    BYTE PTR [ecx],al
 102599a:	add    BYTE PTR [eax],al
 102599c:	add    BYTE PTR [ecx],al
 102599e:	add    BYTE PTR [eax],al
 10259a0:	add    BYTE PTR [eax],al
 10259a2:	add    BYTE PTR [eax],al
 10259a4:	pusha  
 10259a5:	dec    eax
 10259a6:	xor    BYTE PTR [eax],al
 10259a8:	gs dec ebp
 10259aa:	add    BYTE PTR ss:[eax+0x51],ch
 10259ae:	cmp    DWORD PTR [eax],eax
 10259b0:	push   0x53
 10259b2:	cmp    al,0x0
 10259b4:	ins    DWORD PTR es:[edi],dx
 10259b5:	push   ebp
 10259b6:	add    BYTE PTR ds:[edi+0x57],ch
 10259ba:	inc    ecx
 10259bb:	add    BYTE PTR [edi+0x58],ch
 10259be:	inc    ecx
 10259bf:	add    BYTE PTR [edx+0x59],dh
 10259c2:	inc    ecx
 10259c3:	add    BYTE PTR [edx+ebx*2+0x42],dh
 10259c7:	add    BYTE PTR [ebx+0x5b],dh
 10259ca:	inc    ebp
 10259cb:	add    BYTE PTR [ebx+0x5d],dh
 10259ce:	inc    esi
 10259cf:	add    BYTE PTR [ebp+0x5d],dh
 10259d2:	inc    ebp
 10259d3:	add    BYTE PTR [esi+0x5f],dh
 10259d6:	dec    ecx
 10259d7:	add    BYTE PTR [eax+0x61],bh
 10259da:	dec    ecx
 10259db:	add    BYTE PTR [edx+0x62],bh
 10259de:	dec    esp
 10259df:	add    BYTE PTR [esp+eiz*2+0x4e],bh
 10259e3:	add    BYTE PTR [ebp+0x62],ch
 10259e6:	pop    ebx
 10259e7:	add    BYTE PTR [esi+0x66],bh
 10259ea:	push   eax
 10259eb:	add    BYTE PTR [esi+0x68],bh
 10259ee:	push   edx
 10259ef:	add    BYTE PTR [edi+0x69],bh
 10259f2:	push   esp
 10259f3:	add    BYTE PTR [eax-0x7dffad98],al
 10259f9:	push   0x55
 10259fb:	add    BYTE PTR [ebx-0x7cffa894],al
 1025a01:	ins    DWORD PTR es:[edi],dx
 1025a02:	pop    eax
 1025a03:	add    BYTE PTR [ebp-0x77ffa692],al
 1025a09:	jno    0x1025a68
 1025a0b:	add    BYTE PTR [edx-0x77ffa08c],cl
 1025a11:	je     0x1025a74
 1025a13:	add    BYTE PTR [esi+esi*2+0x788e0062],cl
 1025a1a:	add    BYTE PTR fs:[eax-0x6dff9986],dl
 1025a21:	jge    0x1025a8c
 1025a23:	add    BYTE PTR [esi+edi*2-0x7f6aff95],dl
 1025a2a:	ins    DWORD PTR es:[edi],dx
 1025a2b:	add    BYTE PTR [eax-0x64ff8f7d],bl
 1025a31:	test   DWORD PTR [edx+0x0],esi
 1025a34:	popf   
 1025a35:	xchg   DWORD PTR [ebp+0x0],esi
 1025a38:	test   al,0x8d
 1025a3a:	ja     0x1025a3c
 1025a3c:	mov    ds:0x27007a8d,al
 1025a41:	pusha  
 1025a42:	test   DWORD PTR [eax],eax
 1025a44:	imul   ecx,DWORD PTR cs:[ebp-0x7598ce00],0x8f6b3200
 1025a4f:	add    BYTE PTR [ebx],dh
 1025a51:	ins    DWORD PTR es:[edi],dx
 1025a52:	pop    DWORD PTR [eax]
 1025a54:	das    
 1025a55:	ins    DWORD PTR es:[edi],dx
 1025a56:	xchg   ecx,eax
 1025a57:	add    BYTE PTR [ecx],dh
 1025a59:	ins    BYTE PTR es:[edi],dx
 1025a5a:	nop
 1025a5b:	add    BYTE PTR [esi],dh
 1025a5d:	ins    BYTE PTR es:[edi],dx
 1025a5e:	nop
 1025a5f:	add    BYTE PTR [edi],dh
 1025a61:	jo     0x10259f6
 1025a63:	add    BYTE PTR [edi],dh
 1025a65:	jb     0x10259fd
 1025a67:	add    BYTE PTR [esi],dh
 1025a69:	je     0x1025a01
 1025a6b:	add    BYTE PTR [edx],dh
 1025a6d:	jb     0x1025a07
 1025a6f:	add    BYTE PTR [esi-0x7b],cl
 1025a72:	sahf   
 1025a73:	add    BYTE PTR [edx-0x7a],cl
 1025a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1025a77:	add    BYTE PTR [edi-0x76],al
 1025a7a:	stos   DWORD PTR es:[edi],eax
 1025a7b:	add    BYTE PTR [esi-0x76],cl
 1025a7e:	stos   DWORD PTR es:[edi],eax
 1025a7f:	add    BYTE PTR [esi-0x79],bl
 1025a82:	mov    ds:0xa38b5300,al
 1025a87:	add    BYTE PTR [ecx-0x76],bl
 1025a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1025a8b:	add    BYTE PTR [ebp-0x73],bl
 1025a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1025a8f:	add    BYTE PTR [ecx-0x73],dl
 1025a92:	lods   eax,DWORD PTR ds:[esi]
 1025a93:	add    BYTE PTR [edi+ecx*4-0x53],dl
 1025a97:	add    BYTE PTR [ecx-0x70],bl
 1025a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1025a9b:	add    BYTE PTR [edx-0x70],dl
 1025a9e:	scas   al,BYTE PTR es:[edi]
 1025a9f:	add    BYTE PTR [ebx+edx*4-0x54],bl
 1025aa3:	add    BYTE PTR [ebx-0x6e],cl
 1025aa6:	mov    bl,0x0
 1025aa8:	push   esi
 1025aa9:	xchg   esp,eax
 1025aaa:	mov    bl,0x0
 1025aac:	pop    esp
 1025aad:	cdq    
 1025aae:	mov    bh,0x0
 1025ab0:	pop    esi
 1025ab1:	fwait
 1025ab2:	mov    edx,0xa88f6800
 1025ab7:	add    BYTE PTR [ebp-0x70],ch
 1025aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1025abb:	add    BYTE PTR [ecx-0x69],ah
 1025abe:	lods   eax,DWORD PTR ds:[esi]
 1025abf:	add    BYTE PTR [ebx-0x6c],dh
 1025ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1025ac3:	add    BYTE PTR [ebp-0x63],ah
 1025ac6:	mov    dl,0x0
 1025ac8:	push   esi
 1025ac9:	mov    al,ds:0xa36b00bf
 1025ace:	mov    dh,0x0
 1025ad0:	ins    BYTE PTR es:[edi],dx
 1025ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1025ad2:	mov    edx,0xbaa87400
 1025ad7:	add    BYTE PTR [ebp-0x4e],bl
 1025ada:	rol    BYTE PTR [eax],1
 1025adc:	imul   esp,DWORD PTR [esi-0x33caff3b],0xffffffff
 1025ae3:	add    BYTE PTR ds:0x6200ffcd,bh
 1025ae9:	rcr    edi,0x0
 1025aec:	inc    esi
 1025aed:	sar    edi,1
 1025aef:	add    BYTE PTR [edi-0x2c],al
 1025af2:	inc    DWORD PTR [eax]
 1025af4:	dec    ecx
 1025af5:	sar    bh,cl
 1025af7:	add    BYTE PTR [esp+edx*8-0x1],cl
 1025afb:	add    BYTE PTR [ebp-0x28],bl
 1025afe:	clc    
 1025aff:	add    BYTE PTR [edx-0x2d],ch
 1025b02:	icebp  
 1025b03:	add    BYTE PTR [eax-0x26],ah
 1025b06:	clc    
 1025b07:	add    BYTE PTR [ebp-0x25],ah
 1025b0a:	stc    
 1025b0b:	add    BYTE PTR [esp+ebx*8-0x7],ah
 1025b0f:	add    BYTE PTR [eax-0x25],ah
 1025b12:	inc    DWORD PTR [eax]
 1025b14:	arpl   sp,bx
 1025b16:	inc    DWORD PTR [eax]
 1025b18:	imul   ebx,ebp,0xfffffffa
 1025b1b:	add    BYTE PTR [edx-0x21],dh
 1025b1e:	cli    
 1025b1f:	add    BYTE PTR [ebx-0x1f],dh
 1025b22:	cli    
 1025b23:	add    BYTE PTR [ecx-0x1e],bh
 1025b26:	sti    
 1025b27:	add    BYTE PTR [ebx-0x1c],bh
 1025b2a:	sti    
 1025b2b:	add    BYTE PTR [esp+eiz*8-0x5],bh
 1025b2f:	add    BYTE PTR [edx-0x1c],bh
 1025b32:	inc    BYTE PTR [eax]
 1025b34:	jl     0x1025b1a
 1025b36:	inc    DWORD PTR [eax]
 1025b38:	lea    eax,[ebp-0x6c58ff7f]
 1025b3e:	add    BYTE PTR [eax],0xa9
 1025b41:	xchg   esp,eax
 1025b42:	add    BYTE PTR [eax],0xae
 1025b45:	xchg   esi,eax
 1025b46:	add    BYTE PTR [eax],0xa9
 1025b49:	xchg   ebp,eax
 1025b4a:	test   BYTE PTR [eax],al
 1025b4c:	scas   al,BYTE PTR es:[edi]
 1025b4d:	call   0x8b:0x9caf008a
 1025b54:	mov    dl,0x9e
 1025b56:	mov    es,WORD PTR [eax]
 1025b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1025b59:	fwait
 1025b5a:	xchg   esi,eax
 1025b5b:	add    BYTE PTR [ebp-0x4cff7260],dh
 1025b61:	mov    al,ds:0xa1b50090
 1025b66:	xchg   edx,eax
 1025b67:	add    BYTE PTR [esi-0x46ff6b5d],dh
 1025b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1025b6e:	xchg   esi,eax
 1025b6f:	add    BYTE PTR [edx-0x42ff6758],bh
 1025b75:	test   eax,0xabbe009a
 1025b7a:	popf   
 1025b7b:	add    BYTE PTR [edi-0x7eff6254],bh
 1025b81:	cdq    
 1025b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1025b83:	add    BYTE PTR [ebp-0x6bff505c],al
 1025b89:	mov    al,ds:0xb29b00a6
 1025b8e:	mov    ebx,0xa7a5a000
 1025b93:	add    BYTE PTR [ebx-0x51ff5e5c],ch
 1025b99:	lods   al,BYTE PTR ds:[esi]
 1025b9a:	stos   BYTE PTR es:[edi],al
 1025b9b:	add    BYTE PTR [ecx-0x4bff5f5a],dh
 1025ba1:	test   al,0xa1
 1025ba3:	add    BYTE PTR [ebp-0x42ff5652],dh
 1025ba9:	mov    bl,0xad
 1025bab:	add    BYTE PTR [eax-0x3fff444d],ch
 1025bb1:	lods   eax,DWORD PTR ds:[esi]
 1025bb2:	sahf   
 1025bb3:	add    ah,al
 1025bb5:	mov    cl,0xa2
 1025bb7:	add    al,cl
 1025bb9:	mov    ch,0xa6
 1025bbb:	add    cl,cl
 1025bbd:	mov    dh,0xa9
 1025bbf:	add    ch,cl
 1025bc1:	mov    edx,0xbdd000ac
 1025bc6:	scas   eax,DWORD PTR es:[edi]
 1025bc7:	add    bl,al
 1025bc9:	mov    eax,0xbac500b2
 1025bce:	mov    ah,0x0
 1025bd0:	lds    edi,FWORD PTR [esi+esi*4-0x4e453600]
 1025bd7:	add    dl,cl
 1025bd9:	mov    esp,0xbecd00b1
 1025bde:	mov    ch,0x0
 1025be0:	sar    BYTE PTR [esi-0x3d34ff50],1
 1025be6:	mov    ebp,0xb4c0d200
 1025beb:	add    cl,dl
 1025bed:	les    edi,FWORD PTR [ebx-0x41290100]
 1025bf3:	add    BYTE PTR [eax-0x5fff2842],al
 1025bf9:	mov    esp,0xbfae00c7
 1025bfe:	enter  0xb100,0xb9
 1025c02:	rol    BYTE PTR [eax],0xae
 1025c05:	ror    al,0x0
 1025c08:	scas   al,BYTE PTR es:[edi]
 1025c09:	(bad)  
 1025c0a:	iret   
 1025c0b:	add    BYTE PTR [edi-0x49ff3339],bh
 1025c11:	int    0xd4
 1025c13:	add    BYTE PTR [ecx+edx*8-0x2e6cff28],bh
 1025c1a:	in     eax,0x0
 1025c1c:	mov    ah,ah
 1025c1e:	inc    BYTE PTR [eax]
 1025c20:	test   ecx,ebp
 1025c22:	cld    
 1025c23:	add    BYTE PTR [ecx-0x62ff0015],dl
 1025c29:	in     eax,dx
 1025c2a:	inc    DWORD PTR [eax]
 1025c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1025c2d:	loop   0x1025c1f
 1025c2f:	add    BYTE PTR [edx-0x59ff0e1d],ch
 1025c35:	out    0xfb,eax
 1025c37:	add    BYTE PTR [ebp-0x57ff0314],ah
 1025c3d:	jmp    0x1025c3a
 1025c3f:	add    BYTE PTR [ebx-0x4cff0916],dh
 1025c45:	in     eax,dx
 1025c46:	inc    BYTE PTR [eax]
 1025c48:	mov    ebp,0xa200ffef
 1025c4d:	lock inc DWORD PTR [eax]
 1025c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1025c51:	icebp  
 1025c52:	inc    DWORD PTR [eax]
 1025c54:	mov    ch,0xf4
 1025c56:	inc    DWORD PTR [eax]
 1025c58:	leave  
 1025c59:	mov    ah,0x0
 1025c5c:	rol    edi,cl
 1025c5e:	rol    DWORD PTR [eax],0xd4
 1025c61:	enter  0xc1,0xd8
 1025c65:	int3   
 1025c66:	ret    
 1025c67:	add    ch,bl
 1025c69:	ror    ecx,1
 1025c6b:	add    bl,al
 1025c6d:	xlat   BYTE PTR ds:[ebx]
 1025c6e:	fld    QWORD PTR [eax]
 1025c70:	(bad)  
 1025c71:	rcl    edx,cl
 1025c73:	add    bh,bl
 1025c75:	(bad)  
 1025c76:	rol    DWORD PTR [eax],1
 1025c78:	loope  0x1025c4a
 1025c7a:	mov    DWORD PTR [eax],0xc8d3e5
 1025c80:	out    0xd4,al
 1025c82:	leave  
 1025c83:	add    cl,ah
 1025c85:	aam    0xcd
 1025c87:	add    ah,ah
 1025c89:	xlat   BYTE PTR ds:[ebx]
 1025c8a:	iret   
 1025c8b:	add    ah,dh
 1025c8d:	xlat   BYTE PTR ds:[ebx]
 1025c8e:	ret    0xff00
 1025c91:	xlat   BYTE PTR ds:[ebx]
 1025c92:	rol    BYTE PTR [eax],0xf5
 1025c95:	fcmovb st,st(6)
 1025c97:	add    bh,bh
 1025c99:	fadd   st,st(2)
 1025c9b:	add    bh,bh
 1025c9d:	fcmovb st,st(5)
 1025c9f:	add    bh,bh
 1025ca1:	fadd   st(7),st
 1025ca3:	add    dh,dh
 1025ca5:	fmulp  st(4),st
 1025ca7:	add    bh,bh
 1025ca9:	(bad)  
 1025cab:	add    bh,bh
 1025cad:	(bad)  
 1025caf:	add    ah,ch
 1025cb1:	fst    st(5)
 1025cb3:	add    al,dh
 1025cb5:	fst    st(2)
 1025cb7:	add    bh,dh
 1025cb9:	loopne 0x1025c8a
 1025cbb:	add    bh,bh
 1025cbd:	loopne 0x1025c8d
 1025cbf:	add    ch,ch
 1025cc1:	loopne 0x1025c9c
 1025cc3:	add    bh,ch
 1025cc5:	in     eax,0xde
 1025cc7:	add    ah,dh
 1025cc9:	loope  0x1025c9e
 1025ccb:	add    bh,bh
 1025ccd:	loop   0x1025ca0
 1025ccf:	add    bh,bh
 1025cd1:	in     al,0xd3
 1025cd3:	add    al,bh
 1025cd5:	in     al,0xd7
 1025cd7:	add    bh,bh
 1025cd9:	in     al,0xd5
 1025cdb:	add    dl,dh
 1025cdd:	in     al,0xdb
 1025cdf:	add    bh,dh
 1025ce1:	in     eax,0xd9
 1025ce3:	add    dl,dh
 1025ce5:	in     al,0xdc
 1025ce7:	add    dh,dh
 1025ce9:	out    0xdc,al
 1025ceb:	add    cl,bh
 1025ced:	in     eax,0xd9
 1025cef:	add    bh,bh
 1025cf1:	out    0xd8,al
 1025cf3:	add    bh,dh
 1025cf5:	call   0xea005dd9
 1025cfa:	fiadd  DWORD PTR [eax]
 1025cfc:	stc    
 1025cfd:	jmp    0xeb005ddf
 1025d02:	fld    QWORD PTR [eax]
 1025d04:	enter  0xfff3,0x0
 1025d08:	retf   0xfef5
 1025d0b:	add    dh,cl
 1025d0d:	cmc    
 1025d0e:	inc    DWORD PTR [eax]
 1025d10:	shl    esi,1
 1025d12:	inc    DWORD PTR [eax]
 1025d14:	aad    0xf7
 1025d16:	inc    DWORD PTR [eax]
 1025d18:	fdiv   st,st(7)
 1025d1a:	inc    DWORD PTR [eax]
 1025d1c:	sar    ecx,cl
 1025d1e:	inc    DWORD PTR [eax]
 1025d20:	(bad)  
 1025d22:	inc    DWORD PTR [eax]
 1025d24:	out    dx,eax
 1025d25:	out    0xe3,eax
 1025d27:	add    dl,dh
 1025d29:	jmp    0xe9f75e10
 1025d2e:	loope  0x1025d30
 1025d30:	imul   bl
 1025d32:	out    0x0,al
 1025d34:	hlt    
 1025d35:	in     al,dx
 1025d36:	out    0x0,eax
 1025d38:	clc    
 1025d39:	jmp    0xed005e1e
 1025d3e:	loopne 0x1025d40
 1025d40:	cli    
 1025d41:	in     al,dx
 1025d42:	loop   0x1025d44
 1025d44:	(bad)  
 1025d45:	in     al,dx
 1025d46:	loope  0x1025d48
 1025d48:	cli    
 1025d49:	in     eax,dx
 1025d4a:	in     eax,0x0
 1025d4c:	(bad)  
 1025d4d:	out    dx,al
 1025d4e:	in     al,0x0
 1025d50:	imul   ch
 1025d52:	call   0xe7f35c57
 1025d57:	add    ch,dh
 1025d59:	lock in eax,dx
 1025d5b:	add    dl,bh
 1025d5d:	lock jmp 0xeaf45b63
 1025d63:	add    dl,bh
 1025d65:	repnz out dx,al
 1025d67:	add    dh,bh
 1025d69:	repz in al,dx
 1025d6b:	add    bl,bh
 1025d6d:	hlt    
 1025d6e:	out    dx,eax
 1025d6f:	add    dh,bh
 1025d71:	hlt    
 1025d72:	out    dx,al
 1025d73:	add    dl,ah
 1025d75:	sti    
 1025d76:	inc    DWORD PTR [eax]
 1025d78:	div    esp
 1025d7a:	repnz add dl,bh
 1025d7d:	cmc    
 1025d7e:	repnz add dh,bh
 1025d81:	div    cl
 1025d83:	add    bh,bh
 1025d85:	clc    
 1025d86:	repnz add dl,bh
 1025d89:	clc    
 1025d8a:	cmc    
 1025d8b:	add    dh,bh
 1025d8d:	stc    
 1025d8e:	cmc    
 1025d8f:	add    bl,bh
 1025d91:	stc    
 1025d92:	clc    
 1025d93:	add    dh,bh
 1025d95:	cli    
 1025d96:	clc    
 1025d97:	add    dh,bh
 1025d99:	cld    
 1025d9a:	cli    
 1025d9b:	add    bh,bh
 1025d9d:	(bad)  
 1025d9e:	inc    DWORD PTR [eax]
 1025da0:	add    BYTE PTR [eax],al
 1025da2:	add    BYTE PTR [eax],al
 1025da4:	add    BYTE PTR [eax],al
 1025da6:	and    esp,DWORD PTR [edx]
 1025da8:	and    DWORD PTR [ecx],esp
 1025daa:	pop    ds
 1025dab:	pop    ds
 1025dac:	sbb    eax,0x19191b1b
 1025db1:	push   ss
 1025db2:	adc    al,0x13
 1025db4:	adc    BYTE PTR [eax],dl
 1025db6:	push   cs
 1025db7:	or     eax,0x60b0b0b
 1025dbc:	add    eax,0x2050505
 1025dc1:	add    al,BYTE PTR [edx]
 1025dc3:	add    al,BYTE PTR [edx]
 1025dc5:	add    al,BYTE PTR [ecx]
 1025dc7:	add    al,BYTE PTR [ecx]
 1025dc9:	add    DWORD PTR [edx],eax
 1025dcb:	add    DWORD PTR [ecx],eax
 1025dcd:	add    BYTE PTR [eax],al
 1025dcf:	add    BYTE PTR [eax],al
 1025dd1:	add    BYTE PTR [eax],al
 1025dd3:	add    BYTE PTR [esi+0x66],ah
 1025dd6:	adc    ax,si
 1025dd9:	in     eax,dx
 1025dda:	in     eax,dx
 1025ddb:	in     eax,dx
 1025ddc:	in     eax,dx
 1025ddd:	in     eax,dx
 1025dde:	fsubr  st,st(5)
 1025de0:	fcomp  st(0)
 1025de2:	fcomp  st(0)
 1025de4:	aam    0xd4
 1025de6:	aam    0xce
 1025de8:	into   
 1025de9:	into   
 1025dea:	into   
 1025deb:	mov    edi,0xc2c2c2c7
 1025df1:	ret    0xc0c2
 1025df4:	rol    al,0x94
 1025df7:	xchg   esp,eax
 1025df8:	mov    esp,0xb949494
 1025dfd:	add    BYTE PTR [eax],al
 1025dff:	add    BYTE PTR [eax],al
 1025e01:	add    BYTE PTR [eax],al
 1025e03:	add    BYTE PTR [esi-0x52],ah
 1025e06:	jmp    FWORD PTR [esi-0x10]
 1025e09:	lock in eax,dx
 1025e0b:	in     eax,dx
 1025e0c:	in     eax,dx
 1025e0d:	fsubr  st,st(5)
 1025e0f:	fcomp  st(0)
 1025e11:	fcomp  st(0)
 1025e13:	fcomp  st(0)
 1025e15:	aam    0xd4
 1025e17:	into   
 1025e18:	into   
 1025e19:	into   
 1025e1a:	into   
 1025e1b:	into   
 1025e1c:	mov    edi,0xc2c7c2c7
 1025e22:	ret    0xc0c0
 1025e25:	rol    al,0xc0
 1025e28:	xchg   esp,eax
 1025e29:	rcl    BYTE PTR [esp+edx*4+0x8],0x0
 1025e31:	add    BYTE PTR [eax],al
 1025e33:	add    BYTE PTR [eax],al
 1025e35:	add    BYTE PTR [edi-0x13],ah
 1025e38:	lock lock lock in eax,dx
 1025e3c:	in     eax,dx
 1025e3d:	in     eax,dx
 1025e3e:	in     eax,dx
 1025e3f:	in     eax,dx
 1025e40:	fsubr  st,st(5)
 1025e42:	fcomp  st(0)
 1025e44:	fcomp  st(0)
 1025e46:	aam    0xd8
 1025e48:	into   
 1025e49:	into   
 1025e4a:	into   
 1025e4b:	(bad)  
 1025e4c:	into   
 1025e4d:	into   
 1025e4e:	(bad)  
 1025e4f:	into   
 1025e50:	ret    0xc2c2
 1025e53:	ret    0xc0c0
 1025e56:	sar    BYTE PTR [eax+eax*8+0xb94bc94],0x0
	...
 1025e66:	push   0xffffffed
 1025e68:	lock lock lock in eax,dx
 1025e6c:	in     eax,dx
 1025e6d:	in     eax,dx
 1025e6e:	in     eax,dx
 1025e6f:	fsubr  st,st(5)
 1025e71:	fsubr  st,st(5)
 1025e73:	fcomp  st(0)
 1025e75:	fcomp  st(0)
 1025e77:	into   
 1025e78:	fmul   st,st(6)
 1025e7a:	into   
 1025e7b:	into   
 1025e7c:	into   
 1025e7d:	(bad)  
 1025e7e:	into   
 1025e7f:	ret    0xc2ce
 1025e82:	mov    edx,0xc0c0c0c2
 1025e88:	sar    BYTE PTR [eax+eax*8+0x894],0x0
 1025e90:	add    BYTE PTR [eax],al
 1025e92:	add    BYTE PTR [eax],al
 1025e94:	data16 data16 adc ax,si
 1025e99:	lock lock lock in eax,dx
 1025e9d:	in     eax,dx
 1025e9e:	in     eax,dx
 1025e9f:	in     eax,dx
 1025ea0:	in     eax,dx
 1025ea1:	in     eax,dx
 1025ea2:	aam    0xd8
 1025ea4:	fcomp  st(0)
 1025ea6:	fcomp  st(0)
 1025ea8:	into   
 1025ea9:	fmul   st,st(6)
 1025eab:	into   
 1025eac:	into   
 1025ead:	into   
 1025eae:	(bad)  
 1025eaf:	into   
 1025eb0:	mov    edi,0xc2c2c7c2
 1025eb6:	rol    al,0xc0
 1025eb9:	rcl    BYTE PTR [eax+eax*8+0x8],0x0
 1025ec1:	add    BYTE PTR [eax],al
 1025ec3:	add    BYTE PTR [esi-0x52],ah
 1025ec6:	jmp    FWORD PTR [esi-0x8]
 1025ec9:	clc    
 1025eca:	lock lock lock in eax,dx
 1025ece:	in     eax,dx
 1025ecf:	in     eax,dx
 1025ed0:	in     eax,dx
 1025ed1:	in     eax,dx
 1025ed2:	fcom   st(2)
 1025ed4:	(bad)
 1025ed7:	fcomp  st(0)
 1025ed9:	aam    0xd4
 1025edb:	aam    0xce
 1025edd:	into   
 1025ede:	into   
 1025edf:	(bad)  
 1025ee0:	into   
 1025ee1:	mov    edi,0xc2c2c7c2
 1025ee7:	rol    al,0xc0
 1025eea:	rcl    BYTE PTR [ebx+ecx*1+0x0],0x0
 1025ef2:	add    BYTE PTR [eax],al
 1025ef4:	add    BYTE PTR [eax],al
 1025ef6:	imul   esi,eax,0xfffffff0
 1025ef9:	clc    
 1025efa:	clc    
 1025efb:	lock clc 
 1025efd:	lock in eax,dx
 1025eff:	in     eax,dx
 1025f00:	in     eax,dx
 1025f01:	in     eax,dx
 1025f02:	shl    BYTE PTR [esi-0x31456d71],cl
 1025f08:	fcomp  st(0)
 1025f0a:	aam    0xd4
 1025f0c:	aam    0xce
 1025f0e:	into   
 1025f0f:	into   
 1025f10:	(bad)  
 1025f11:	into   
 1025f12:	mov    edi,0xc2c2c7c2
 1025f18:	rol    al,0xc0
 1025f1b:	ror    BYTE PTR [ebx],0x0
	...
 1025f26:	imul   esi,eax,0xfffffff8
 1025f29:	clc    
 1025f2a:	lock clc 
 1025f2c:	lock lock lock in eax,dx
 1025f30:	in     eax,dx
 1025f31:	in     eax,dx
 1025f32:	sub    DWORD PTR [edx],0x28
 1025f35:	or     BYTE PTR [edi-0x2727314a],0xd8
 1025f3c:	aam    0xd4
 1025f3e:	into   
 1025f3f:	into   
 1025f40:	into   
 1025f41:	(bad)  
 1025f42:	into   
 1025f43:	mov    edi,0xc2c2c7c2
 1025f49:	rol    al,0xc0
 1025f4c:	or     eax,DWORD PTR [eax]
 1025f4e:	add    BYTE PTR [eax],al
 1025f50:	add    BYTE PTR [eax],al
 1025f52:	add    BYTE PTR [eax],al
 1025f54:	data16 data16 adc ax,di
 1025f59:	clc    
 1025f5a:	clc    
 1025f5b:	lock clc 
 1025f5d:	lock lock lock in eax,dx
 1025f61:	in     eax,dx
 1025f62:	das    
 1025f63:	cmc    
 1025f64:	stos   DWORD PTR es:[edi],eax
 1025f65:	sub    DWORD PTR [edi-0x71],edi
 1025f68:	mov    edx,0xd8d4d8ce
 1025f6d:	aam    0xd4
 1025f6f:	into   
 1025f70:	into   
 1025f71:	into   
 1025f72:	(bad)  
 1025f73:	into   
 1025f74:	mov    edi,0xc2c2c7c2
 1025f7a:	rol    al,0xb
 1025f7d:	add    BYTE PTR [eax],al
 1025f7f:	add    BYTE PTR [eax],al
 1025f81:	add    BYTE PTR [eax],al
 1025f83:	add    BYTE PTR [esi-0x52],ah
 1025f86:	jmp    FWORD PTR [esi-0x8]
 1025f89:	clc    
 1025f8a:	clc    
 1025f8b:	clc    
 1025f8c:	lock clc 
 1025f8e:	lock clc 
 1025f90:	lock lock cmp bl,bl
 1025f94:	lods   eax,DWORD PTR ds:[esi]
 1025f95:	stos   DWORD PTR es:[edi],eax
 1025f96:	sub    DWORD PTR [edi-0x73],edi
 1025f99:	mov    edx,0xd8d4d8ce
 1025f9e:	aam    0xd4
 1025fa0:	into   
 1025fa1:	into   
 1025fa2:	into   
 1025fa3:	(bad)  
 1025fa4:	into   
 1025fa5:	mov    edi,0xc2c2c2c7
 1025fab:	ror    BYTE PTR [eax+eax*1],0x0
 1025faf:	add    BYTE PTR [eax],al
 1025fb1:	add    BYTE PTR [eax],al
 1025fb3:	add    BYTE PTR [eax],al
 1025fb5:	add    BYTE PTR [eax-0x10],dh
 1025fb8:	sti    
 1025fb9:	clc    
 1025fba:	clc    
 1025fbb:	clc    
 1025fbc:	clc    
 1025fbd:	lock clc 
 1025fbf:	lock lock lock fwait
 1025fc3:	xchg   ebp,eax
 1025fc4:	fild   QWORD PTR [ebx-0x7280d155]
 1025fca:	mov    edx,0xd4d4d8ce
 1025fcf:	aam    0xd4
 1025fd1:	into   
 1025fd2:	into   
 1025fd3:	into   
 1025fd4:	(bad)  
 1025fd5:	into   
 1025fd6:	mov    edi,0xc2c2c2c7
 1025fdc:	adc    BYTE PTR [eax],al
	...
 1025fe6:	jo     0x1025fe0
 1025fe8:	clc    
 1025fe9:	sti    
 1025fea:	clc    
 1025feb:	clc    
 1025fec:	clc    
 1025fed:	clc    
 1025fee:	lock clc 
 1025ff0:	lock lock lock inc ebp
 1025ff4:	fld    TBYTE PTR [ebp+0x7f2eabab]
 1025ffa:	lea    edi,[edx-0x2b272732]
 1026000:	aam    0xd4
 1026002:	into   
 1026003:	into   
 1026004:	into   
 1026005:	(bad)  
 1026006:	into   
 1026007:	mov    edi,0x10c2c2c7
 102600d:	add    BYTE PTR [eax],al
 102600f:	add    BYTE PTR [eax],al
 1026011:	add    BYTE PTR [eax],al
 1026013:	add    BYTE PTR [esi+0x66],ah
 1026016:	adc    bx,di
 1026019:	sti    
 102601a:	sti    
 102601b:	clc    
 102601c:	clc    
 102601d:	clc    
 102601e:	clc    
 102601f:	lock clc 
 1026021:	lock lock loope 0x1026061
 1026025:	cmc    
 1026026:	stos   DWORD PTR es:[edi],eax
 1026027:	stos   DWORD PTR es:[edi],eax
 1026028:	stos   DWORD PTR es:[edi],eax
 1026029:	cs jg  0x1025fb9
 102602c:	mov    edx,0xd8d8d8ce
 1026031:	aam    0xd4
 1026033:	into   
 1026034:	into   
 1026035:	into   
 1026036:	(bad)  
 1026037:	into   
 1026038:	mov    edi,0x10c2c7
 102603e:	add    BYTE PTR [eax],al
 1026040:	add    BYTE PTR [eax],al
 1026042:	add    BYTE PTR [eax],al
 1026044:	data16 scas al,BYTE PTR es:[edi]
 1026046:	jmp    FWORD PTR [esi-0x5]
 1026049:	sti    
 102604a:	sti    
 102604b:	sti    
 102604c:	clc    
 102604d:	clc    
 102604e:	clc    
 102604f:	clc    
 1026050:	lock clc 
 1026052:	lock lock cdq 
 1026055:	sahf   
 1026056:	fld    TBYTE PTR [ebx+0x7f30abab]
 102605c:	lea    edi,[edx-0x2b272732]
 1026062:	aam    0xd4
 1026064:	aam    0xce
 1026066:	into   
 1026067:	(bad)  
 1026068:	into   
 1026069:	mov    edi,0x10c2
 102606f:	add    BYTE PTR [eax],al
 1026071:	add    BYTE PTR [eax],al
 1026073:	add    BYTE PTR [eax],al
 1026075:	add    BYTE PTR [ebx-0x8],dh
 1026078:	sti    
 1026079:	sti    
 102607a:	sti    
 102607b:	sti    
 102607c:	sti    
 102607d:	clc    
 102607e:	clc    
 102607f:	clc    
 1026080:	clc    
 1026081:	clc    
 1026082:	clc    
 1026083:	lock lock cmp bl,ah
 1026087:	mov    ds:0x30a1a1a1,al
 102608c:	jg     0x102601b
 102608e:	mov    edx,0xd4d8d8ce
 1026093:	aam    0xd4
 1026095:	aam    0xce
 1026097:	into   
 1026098:	(bad)  
 1026099:	into   
 102609a:	mov    edi,0x10
 10260a0:	add    BYTE PTR [eax],al
 10260a2:	add    BYTE PTR [eax],al
 10260a4:	add    BYTE PTR [eax],al
 10260a6:	je     0x10260a0
 10260a8:	(bad)  
 10260a9:	sti    
 10260aa:	sti    
 10260ab:	sti    
 10260ac:	sti    
 10260ad:	sti    
 10260ae:	clc    
 10260af:	clc    
 10260b0:	clc    
 10260b1:	lock in al,dx
 10260b3:	loope  0x102607d
 10260b5:	mov    ah,0x43
 10260b7:	(bad)  [esp+eiz*2+0x64]
 10260bb:	xor    BYTE PTR fs:[edi-0x71],bh
 10260bf:	mov    dh,0xd8
 10260c1:	fcom   st(4)
 10260c3:	fcom   st(4)
 10260c5:	aam    0xd4
 10260c7:	into   
 10260c8:	into   
 10260c9:	(bad)  
 10260ca:	into   
 10260cb:	(bad)  
 10260cc:	adc    BYTE PTR [eax],al
 10260ce:	add    BYTE PTR [eax],al
 10260d0:	add    BYTE PTR [eax],al
 10260d2:	add    BYTE PTR [eax],al
 10260d4:	data16 data16 adc bx,di
 10260d9:	(bad)  
 10260da:	sti    
 10260db:	sti    
 10260dc:	sti    
 10260dd:	sti    
 10260de:	sti    
 10260df:	clc    
 10260e0:	clc    
 10260e1:	in     al,dx
 10260e2:	mov    ch,0x91
 10260e4:	mov    WORD PTR [eax+ecx*2+0x5c5c9fa5],cs
 10260eb:	pop    esp
 10260ec:	pop    esp
 10260ed:	xor    BYTE PTR [edi-0x73],bh
 10260f0:	mov    dh,0xd4
 10260f2:	fcom   st(4)
 10260f4:	fcom   st(4)
 10260f6:	aam    0xd4
 10260f8:	(bad)  
 10260f9:	aam    0xc7
 10260fb:	into   
 10260fc:	adc    BYTE PTR [eax],al
 10260fe:	add    BYTE PTR [eax],al
 1026100:	add    BYTE PTR [eax],al
 1026102:	add    BYTE PTR [eax],al
 1026104:	data16 scas al,BYTE PTR es:[edi]
 1026106:	jmp    FWORD PTR [esi-0x1]
 1026109:	sti    
 102610a:	(bad)  
 102610b:	sti    
 102610c:	sti    
 102610d:	sti    
 102610e:	sti    
 102610f:	sti    
 1026110:	lock cdq 
 1026112:	inc    edx
 1026113:	aas    
 1026114:	aaa    
 1026115:	xor    eax,0x55aa4f43
 102611a:	push   esp
 102611b:	push   ebp
 102611c:	push   ebp
 102611d:	push   ebp
 102611e:	xor    bh,BYTE PTR [edi-0x71]
 1026121:	mov    dh,0xd4
 1026123:	fcom   st(4)
 1026125:	fcom   st(4)
 1026127:	aam    0xd4
 1026129:	into   
 102612a:	into   
 102612b:	(bad)  
 102612c:	push   ss
	...
 1026135:	add    BYTE PTR [ebx+edi*8-0x1],dh
 1026139:	sti    
 102613a:	sti    
 102613b:	(bad)  
 102613c:	sti    
 102613d:	sti    
 102613e:	sti    
 102613f:	sti    
 1026140:	sti    
 1026141:	ds test eax,0xa9a9a9a9
 1026147:	test   eax,0x50505050
 102614c:	push   eax
 102614d:	push   ecx
 102614e:	push   ebp
 102614f:	xor    edi,DWORD PTR [ebp-0x6d]
 1026152:	retf   0xd8d8
 1026155:	aam    0xd4
 1026157:	aam    0xd4
 1026159:	aam    0xce
 102615b:	into   
 102615c:	adc    al,BYTE PTR [eax]
	...
 1026166:	test   eax,edi
 1026168:	(bad)  
 1026169:	(bad)  
 102616a:	sti    
 102616b:	(bad)  
 102616c:	sti    
 102616d:	sti    
 102616e:	sti    
 102616f:	sti    
 1026170:	clc    
 1026171:	jns    0x102611a
 1026173:	lahf   
 1026174:	pop    edi
 1026175:	pop    edi
 1026176:	pop    edi
 1026177:	pop    edi
 1026178:	pop    edi
 1026179:	pop    edi
 102617a:	pop    edi
 102617b:	pop    esi
 102617c:	pop    esi
 102617d:	pusha  
 102617e:	pop    edi
 102617f:	mov    al,ds:0xd8d0b629
 1026184:	jmp    0xd5d73a61
 1026189:	aam    0xd4
 102618b:	into   
 102618c:	push   ss
 102618d:	add    BYTE PTR [eax],al
 102618f:	add    BYTE PTR [eax],al
 1026191:	add    BYTE PTR [eax],al
 1026193:	add    BYTE PTR [esi+0x66],ah
 1026196:	adc    di,di
 1026199:	sti    
 102619a:	(bad)  
 102619b:	sti    
 102619c:	(bad)  
 102619d:	sti    
 102619e:	sti    
 102619f:	sti    
 10261a0:	sti    
 10261a1:	clc    
 10261a2:	cmp    ch,BYTE PTR [ebp+0x5c5f5c5c]
 10261a8:	pop    esp
 10261a9:	pop    esp
 10261aa:	pop    edi
 10261ab:	inc    ecx
 10261ac:	ss ss ss ss cwde 
 10261b1:	shr    ch,1
 10261b3:	fcomp  st(0)
 10261b5:	jmp    0xd5d73a92
 10261ba:	aam    0xd4
 10261bc:	push   ss
 10261bd:	add    BYTE PTR [eax],al
 10261bf:	add    BYTE PTR [eax],al
 10261c1:	add    BYTE PTR [eax],al
 10261c3:	add    BYTE PTR [esi-0x52],ah
 10261c6:	jmp    FWORD PTR [esi-0x1]
 10261c9:	(bad)  
 10261ca:	(bad)  
 10261cb:	sti    
 10261cc:	(bad)  
 10261cd:	sti    
 10261ce:	(bad)  
 10261cf:	sti    
 10261d0:	sti    
 10261d1:	sti    
 10261d2:	xchg   esi,eax
 10261d3:	test   al,0xa7
 10261d5:	bound  esp,QWORD PTR fs:[edx+0x62]
 10261d9:	bound  esp,QWORD PTR [esp+eiz*2+0x3f]
 10261dd:	adc    BYTE PTR [ecx-0x27121238],0xeb
 10261e4:	jmp    0xd9db3ac1
 10261e9:	aam    0xd4
 10261eb:	aam    0x16
	...
 10261f5:	add    BYTE PTR [ebp-0x4000005],al
 10261fb:	(bad)  
 10261fc:	sti    
 10261fd:	(bad)  
 10261fe:	sti    
 10261ff:	(bad)  
 1026200:	sti    
 1026201:	sti    
 1026202:	sti    
 1026203:	inc    edi
 1026204:	loopne 0x102626a
 1026206:	pusha  
 1026207:	bound  esp,QWORD PTR [eax+0x62]
 102620a:	pusha  
 102620b:	bound  esp,QWORD PTR [ebx+edi*1-0x7e]
 102620f:	scas   eax,DWORD PTR es:[edi]
 1026210:	(bad)  
 1026211:	in     eax,dx
 1026212:	in     eax,dx
 1026213:	in     eax,dx
 1026214:	fsubr  st,st(1)
 1026216:	jmp    0xd5db3af3
 102621b:	aam    0x19
	...
 1026225:	add    BYTE PTR [ebp-0x1],al
 102622b:	(bad)  
 102622c:	sti    
 102622d:	(bad)  
 102622e:	sti    
 102622f:	sti    
 1026230:	(bad)  
 1026231:	sti    
 1026232:	sti    
 1026233:	cdq    
 1026234:	test   al,0xa7
 1026236:	pusha  
 1026237:	pusha  
 1026238:	pusha  
 1026239:	pusha  
 102623a:	pusha  
 102623b:	pusha  
 102623c:	pusha  
 102623d:	pusha  
 102623e:	inc    esi
 102623f:	xor    BYTE PTR [ecx-0x1427122e],0xeb
 1026246:	fsubr  st,st(1)
 1026248:	fcomp  st(0)
 102624a:	fcom   st(4)
 102624c:	sbb    DWORD PTR [eax],eax
 102624e:	add    BYTE PTR [eax],al
 1026250:	add    BYTE PTR [eax],al
 1026252:	add    BYTE PTR [eax],al
 1026254:	data16 data16 adc di,di
 1026259:	(bad)  
 102625a:	sti    
 102625b:	(bad)  
 102625c:	(bad)  
 102625d:	sti    
 102625e:	(bad)  
 102625f:	(bad)  
 1026260:	sti    
 1026261:	(bad)  
 1026262:	sti    
 1026263:	sti    
 1026264:	dec    ecx
 1026265:	loopne 0x10262c6
 1026267:	pop    esi
 1026268:	pop    edi
 1026269:	pop    esi
 102626a:	pop    edi
 102626b:	pop    esi
 102626c:	pop    edi
 102626d:	pop    edi
 102626e:	pop    eax
 102626f:	js     0x10261fb
 1026271:	mov    dl,0xd2
 1026273:	in     eax,dx
 1026274:	in     eax,dx
 1026275:	in     eax,dx
 1026276:	fsubr  st,st(1)
 1026278:	jmp    0x1cec4c55
 102627d:	add    BYTE PTR [eax],al
 102627f:	add    BYTE PTR [eax],al
 1026281:	add    BYTE PTR [eax],al
 1026283:	add    BYTE PTR [esi-0x52],ah
 1026286:	jmp    FWORD PTR [esi-0x1]
 1026289:	(bad)  
 102628a:	(bad)  
 102628b:	(bad)  
 102628c:	(bad)  
 102628d:	(bad)  
 102628e:	sti    
 102628f:	(bad)  
 1026290:	sti    
 1026291:	sti    
 1026292:	(bad)  
 1026293:	sti    
 1026294:	pushf  
 1026295:	mov    ds:0x5a5a5ea7,eax
 102629a:	pop    edx
 102629b:	pop    ebx
 102629c:	pop    edx
 102629d:	pop    esp
 102629e:	pop    esi
 102629f:	push   edx
 10262a0:	jp     0x102622c
 10262a2:	mov    edx,0xedededd2
 10262a7:	fsubr  st,st(1)
 10262a9:	jmp    0x11e3b82
	...
 10262b6:	xchg   ebx,edi
 10262b8:	(bad)  
 10262b9:	(bad)  
 10262ba:	(bad)  
 10262bb:	(bad)  
 10262bc:	sti    
 10262bd:	(bad)  
 10262be:	(bad)  
 10262bf:	sti    
 10262c0:	(bad)  
 10262c1:	(bad)  
 10262c2:	sti    
 10262c3:	(bad)  
 10262c4:	sti    
 10262c5:	dec    ebx
 10262c6:	fcomp  QWORD PTR [esi+0x5a]
 10262c9:	pop    edx
 10262ca:	pop    edx
 10262cb:	pop    edx
 10262cc:	pop    edx
 10262cd:	pop    edx
 10262ce:	pop    edx
 10262cf:	pop    edx
 10262d0:	dec    esi
 10262d1:	jl     0x102625d
 10262d3:	mov    edx,0xebebd8ed
 10262d8:	jmp    0x1cec4cc6
	...
 10262e5:	add    BYTE PTR [edi-0x1],al
 10262eb:	(bad)  
 10262ec:	(bad)  
 10262ed:	(bad)  
 10262ee:	(bad)  
 10262ef:	(bad)  
 10262f0:	sti    
 10262f1:	(bad)  
 10262f2:	sti    
 10262f3:	sti    
 10262f4:	call   FWORD PTR [ebp+0x5a59a7a3]
 10262fa:	pop    ecx
 10262fb:	pop    edx
 10262fc:	pop    ecx
 10262fd:	pop    edx
 10262fe:	pop    ecx
 10262ff:	pop    edx
 1026300:	pop    ecx
 1026301:	dec    edx
 1026302:	jle    0x10262b3
 1026304:	shr    ch,cl
 1026306:	jmp    0x10262f3
 1026308:	jmp    0x10262f3
 102630a:	jmp    0x1027ef8
 102630f:	add    BYTE PTR [eax],al
 1026311:	add    BYTE PTR [eax],al
 1026313:	add    BYTE PTR [esi+0x66],ah
 1026316:	adc    di,di
 1026319:	(bad)  
 102631a:	(bad)  
 102631b:	(bad)  
 102631c:	(bad)  
 102631d:	(bad)  
 102631e:	sti    
 102631f:	(bad)  
 1026320:	(bad)  
 1026321:	sti    
 1026322:	(bad)  
 1026323:	(bad)  
 1026324:	sti    
 1026325:	sti    
 1026326:	dec    ebp
 1026327:	fcomp  QWORD PTR [edx+0x59]
 102632a:	pop    ecx
 102632b:	pop    ecx
 102632c:	push   edi
 102632d:	pop    ecx
 102632e:	pop    ecx
 102632f:	pop    ecx
 1026330:	pop    ecx
 1026331:	pop    ecx
 1026332:	aaa    
 1026333:	mov    dl,0xe2
 1026335:	jmp    0x1026327
 1026337:	jmp    0x1026324
 1026339:	jmp    0x1026324
 102633b:	jmp    0x102635b
 1026340:	add    BYTE PTR [eax],al
 1026342:	add    BYTE PTR [eax],al
 1026344:	data16 scas al,BYTE PTR es:[edi]
 1026346:	jmp    FWORD PTR [esi-0x1]
 1026349:	(bad)  
 102634a:	(bad)  
 102634b:	(bad)  
 102634c:	(bad)  
 102634d:	(bad)  
 102634e:	(bad)  
 102634f:	(bad)  
 1026350:	(bad)  
 1026351:	(bad)  
 1026352:	sti    
 1026353:	(bad)  
 1026354:	sti    
 1026355:	push   DWORD PTR [ebx+0x494b4c4c]
 102635b:	inc    edi
 102635c:	inc    edx
 102635d:	ds aas 
 102635f:	cmp    DWORD PTR [esp+esi*1],esi
 1026362:	jnp    0x1026348
 1026364:	in     eax,dx
 1026365:	lock lock jmp 0x1026354
 1026369:	jmp    0x1026356
 102636b:	jmp    0x102638f
 1026370:	add    BYTE PTR [eax],al
 1026372:	add    BYTE PTR [eax],al
 1026374:	add    BYTE PTR [eax],al
 1026376:	(bad)  
 1026377:	sti    
 1026378:	(bad)  
 1026379:	(bad)  
 102637a:	(bad)  
 102637b:	(bad)  
 102637c:	(bad)  
 102637d:	(bad)  
 102637e:	(bad)  
 102637f:	(bad)  
 1026380:	sti    
 1026381:	(bad)  
 1026382:	(bad)  
 1026383:	sti    
 1026384:	(bad)  
 1026385:	sti    
 1026386:	(bad)  
 1026387:	sti    
 1026388:	sti    
 1026389:	sti    
 102638a:	sti    
 102638b:	sti    
 102638c:	sti    
 102638d:	sti    
 102638e:	clc    
 102638f:	sti    
 1026390:	clc    
 1026391:	sti    
 1026392:	lock lock lock lock lock lock jmp 0x1026385
 102639a:	jmp    0x1026387
 102639c:	pop    ds
	...
 10263a5:	add    BYTE PTR [ebp-0x1],cl
 10263ab:	(bad)  
 10263ac:	(bad)  
 10263ad:	(bad)  
 10263ae:	(bad)  
 10263af:	(bad)  
 10263b0:	(bad)  
 10263b1:	(bad)  
 10263b2:	(bad)  
 10263b3:	(bad)  
 10263b4:	(bad)  
 10263b5:	(bad)  
 10263b6:	clc    
 10263b7:	(bad)  
 10263b8:	sti    
 10263b9:	sti    
 10263ba:	(bad)  
 10263bb:	clc    
 10263bc:	sti    
 10263bd:	sti    
 10263be:	sti    
 10263bf:	lock sti 
 10263c1:	lock sti 
 10263c3:	lock lock lock lock lock lock jmp 0x10263b6
 10263cb:	jmp    0x10263ec
 10263cd:	add    BYTE PTR [eax],al
 10263cf:	add    BYTE PTR [eax],al
 10263d1:	add    BYTE PTR [eax],al
 10263d3:	add    BYTE PTR [esi+0x66],ah
 10263d6:	adc    di,di
 10263d9:	(bad)  
 10263da:	(bad)  
 10263db:	(bad)  
 10263dc:	(bad)  
 10263dd:	(bad)  
 10263de:	(bad)  
 10263df:	(bad)  
 10263e0:	(bad)  
 10263e1:	(bad)  
 10263e2:	sti    
 10263e3:	(bad)  
 10263e4:	sti    
 10263e5:	(bad)  
 10263e6:	(bad)  
 10263e7:	sti    
 10263e8:	(bad)  
 10263e9:	sti    
 10263ea:	sti    
 10263eb:	sti    
 10263ec:	sti    
 10263ed:	sti    
 10263ee:	sti    
 10263ef:	sti    
 10263f0:	sti    
 10263f1:	sti    
 10263f2:	lock sti 
 10263f4:	clc    
 10263f5:	lock sti 
 10263f7:	lock lock lock jmp 0x10263e7
 10263fc:	and    al,BYTE PTR [eax]
 10263fe:	add    BYTE PTR [eax],al
 1026400:	add    BYTE PTR [eax],al
 1026402:	add    BYTE PTR [eax],al
 1026404:	data16 scas al,BYTE PTR es:[edi]
 1026406:	jmp    FWORD PTR [esi-0x1]
 1026409:	(bad)  
 102640a:	(bad)  
 102640b:	(bad)  
 102640c:	(bad)  
 102640d:	(bad)  
 102640e:	(bad)  
 102640f:	(bad)  
 1026410:	(bad)  
 1026411:	(bad)  
 1026412:	(bad)  
 1026413:	(bad)  
 1026414:	(bad)  
 1026415:	(bad)  
 1026416:	sti    
 1026417:	(bad)  
 1026418:	sti    
 1026419:	(bad)  
 102641a:	sti    
 102641b:	(bad)  
 102641c:	sti    
 102641d:	sti    
 102641e:	sti    
 102641f:	sti    
 1026420:	clc    
 1026421:	sti    
 1026422:	sti    
 1026423:	lock sti 
 1026425:	lock lock lock lock lock lock jmp 0x102644f
	...
 1026435:	add    BYTE PTR [ecx-0x1],cl
 102643b:	(bad)  
 102643c:	(bad)  
 102643d:	(bad)  
 102643e:	(bad)  
 102643f:	(bad)  
 1026440:	(bad)  
 1026441:	(bad)  
 1026442:	(bad)  
 1026443:	(bad)  
 1026444:	(bad)  
 1026445:	(bad)  
 1026446:	(bad)  
 1026447:	sti    
 1026448:	(bad)  
 1026449:	sti    
 102644a:	(bad)  
 102644b:	clc    
 102644c:	(bad)  
 102644d:	sti    
 102644e:	sti    
 102644f:	sti    
 1026450:	sti    
 1026451:	clc    
 1026452:	sti    
 1026453:	clc    
 1026454:	clc    
 1026455:	sti    
 1026456:	lock sti 
 1026458:	lock lock lock in al,0x22
	...
 1026465:	add    BYTE PTR [eax-0x5],dl
 102646b:	(bad)  
 102646c:	(bad)  
 102646d:	(bad)  
 102646e:	(bad)  
 102646f:	(bad)  
 1026470:	(bad)  
 1026471:	(bad)  
 1026472:	(bad)  
 1026473:	(bad)  
 1026474:	(bad)  
 1026475:	sti    
 1026476:	(bad)  
 1026477:	(bad)  
 1026478:	sti    
 1026479:	(bad)  
 102647a:	sti    
 102647b:	(bad)  
 102647c:	clc    
 102647d:	(bad)  
 102647e:	sti    
 102647f:	sti    
 1026480:	sti    
 1026481:	imul   esp,DWORD PTR [ebx],0x23
 1026484:	pop    ds
 1026485:	sbb    eax,0xb101419
 102648a:	pop    es
 102648b:	add    eax,0xb
 1026490:	add    BYTE PTR [eax],al
 1026492:	add    BYTE PTR [eax],al
 1026494:	data16 data16 adc di,di
 1026499:	(bad)  
 102649a:	(bad)  
 102649b:	(bad)  
 102649c:	(bad)  
 102649d:	(bad)  
 102649e:	(bad)  
 102649f:	(bad)  
 10264a0:	(bad)  
 10264a1:	(bad)  
 10264a2:	(bad)  
 10264a3:	(bad)  
 10264a4:	(bad)  
 10264a5:	(bad)  
 10264a6:	(bad)  
 10264a7:	(bad)  
 10264a8:	(bad)  
 10264a9:	sti    
 10264aa:	(bad)  
 10264ab:	sti    
 10264ac:	(bad)  
 10264ad:	clc    
 10264ae:	(bad)  
 10264af:	sti    
 10264b0:	sti    
 10264b1:	jo     0x102647d
 10264b3:	fcom   st(2)
 10264b5:	retf   0xbdc6
 10264b8:	mov    ebp,0x1d1b26bd
 10264bd:	add    BYTE PTR [eax],al
 10264bf:	add    BYTE PTR [eax],al
 10264c1:	add    BYTE PTR [eax],al
 10264c3:	add    BYTE PTR [esi-0x52],ah
 10264c6:	jmp    FWORD PTR [esi-0x1]
 10264c9:	(bad)  
 10264ca:	(bad)  
 10264cb:	(bad)  
 10264cc:	(bad)  
 10264cd:	(bad)  
 10264ce:	(bad)  
 10264cf:	(bad)  
 10264d0:	(bad)  
 10264d1:	(bad)  
 10264d2:	(bad)  
 10264d3:	(bad)  
 10264d4:	(bad)  
 10264d5:	(bad)  
 10264d6:	(bad)  
 10264d7:	sti    
 10264d8:	(bad)  
 10264d9:	(bad)  
 10264da:	(bad)  
 10264db:	sti    
 10264dc:	(bad)  
 10264dd:	sti    
 10264de:	sti    
 10264df:	sti    
 10264e0:	push   DWORD PTR [eax-0x2e]
 10264e3:	in     al,0xd8
 10264e5:	aam    0xca
 10264e7:	retf   0x6ac6
 10264ea:	pop    ds
 10264eb:	jmp    0x1026509
	...
 10264f5:	add    BYTE PTR [edx-0x1],dl
 10264fb:	(bad)  
 10264fc:	(bad)  
 10264fd:	(bad)  
 10264fe:	(bad)  
 10264ff:	(bad)  
 1026500:	(bad)  
 1026501:	(bad)  
 1026502:	(bad)  
 1026503:	(bad)  
 1026504:	(bad)  
 1026505:	(bad)  
 1026506:	(bad)  
 1026507:	(bad)  
 1026508:	(bad)  
 1026509:	(bad)  
 102650a:	sti    
 102650b:	(bad)  
 102650c:	(bad)  
 102650d:	sti    
 102650e:	(bad)  
 102650f:	sti    
 1026510:	sti    
 1026511:	je     0x10264f7
 1026513:	in     al,dx
 1026514:	jmp    0x10264fa
 1026516:	fcom   st(0)
 1026518:	outs   dx,DWORD PTR ds:[esi]
 1026519:	and    ebp,ebx
 102651b:	lock sbb eax,0x0
 1026521:	add    BYTE PTR [eax],al
 1026523:	add    BYTE PTR [eax],al
 1026525:	add    BYTE PTR [edx-0x5],dl
 102652b:	(bad)  
 102652c:	(bad)  
 102652d:	(bad)  
 102652e:	(bad)  
 102652f:	(bad)  
 1026530:	(bad)  
 1026531:	(bad)  
 1026532:	(bad)  
 1026533:	(bad)  
 1026534:	(bad)  
 1026535:	(bad)  
 1026536:	(bad)  
 1026537:	(bad)  
 1026538:	(bad)  
 1026539:	(bad)  
 102653a:	(bad)  
 102653b:	(bad)  
 102653c:	sti    
 102653d:	(bad)  
 102653e:	sti    
 102653f:	(bad)  
 1026540:	sti    
 1026541:	je     0x1026527
 1026543:	clc    
 1026544:	lock icebp 
 1026546:	jmp    0x10265bc
 1026548:	daa    
 1026549:	jmp    0x102653b
 102654b:	lock sbb al,0x0
 102654e:	add    BYTE PTR [eax],al
 1026550:	add    BYTE PTR [eax],al
 1026552:	add    BYTE PTR [eax],al
 1026554:	data16 data16 adc di,di
 1026559:	(bad)  
 102655a:	(bad)  
 102655b:	(bad)  
 102655c:	(bad)  
 102655d:	(bad)  
 102655e:	(bad)  
 102655f:	(bad)  
 1026560:	(bad)  
 1026561:	(bad)  
 1026562:	(bad)  
 1026563:	(bad)  
 1026564:	(bad)  
 1026565:	(bad)  
 1026566:	(bad)  
 1026567:	(bad)  
 1026568:	(bad)  
 1026569:	(bad)  
 102656a:	sti    
 102656b:	(bad)  
 102656c:	(bad)  
 102656d:	(bad)  
 102656e:	sti    
 102656f:	(bad)  
 1026570:	sti    
 1026571:	test   ecx,esi
 1026573:	cli    
 1026574:	sti    
 1026575:	lock sub BYTE PTR [edx-0x15],0xf0
 102657a:	clc    
 102657b:	sti    
 102657c:	sbb    eax,0x0
 1026581:	add    BYTE PTR [eax],al
 1026583:	add    BYTE PTR [esi-0x52],ah
 1026586:	jmp    FWORD PTR [esi-0x1]
 1026589:	(bad)  
 102658a:	(bad)  
 102658b:	(bad)  
 102658c:	(bad)  
 102658d:	(bad)  
 102658e:	(bad)  
 102658f:	(bad)  
 1026590:	(bad)  
 1026591:	(bad)  
 1026592:	(bad)  
 1026593:	(bad)  
 1026594:	(bad)  
 1026595:	(bad)  
 1026596:	(bad)  
 1026597:	(bad)  
 1026598:	(bad)  
 1026599:	(bad)  
 102659a:	(bad)  
 102659b:	(bad)  
 102659c:	(bad)  
 102659d:	sti    
 102659e:	(bad)  
 102659f:	(bad)  
 10265a0:	inc    DWORD PTR [ebp-0x7504000a]
 10265a6:	outs   dx,DWORD PTR ds:[esi]
 10265a7:	jmp    0x1026599
 10265a9:	clc    
 10265aa:	clc    
 10265ab:	sti    
 10265ac:	sbb    al,0x0
	...
 10265b6:	xchg   edx,eax
 10265b7:	(bad)  
 10265b8:	(bad)  
 10265b9:	(bad)  
 10265ba:	(bad)  
 10265bb:	(bad)  
 10265bc:	(bad)  
 10265bd:	(bad)  
 10265be:	(bad)  
 10265bf:	(bad)  
 10265c0:	(bad)  
 10265c1:	(bad)  
 10265c2:	(bad)  
 10265c3:	(bad)  
 10265c4:	(bad)  
 10265c5:	(bad)  
 10265c6:	(bad)  
 10265c7:	(bad)  
 10265c8:	(bad)  
 10265c9:	(bad)  
 10265ca:	(bad)  
 10265cb:	(bad)  
 10265cc:	(bad)  
 10265cd:	(bad)  
 10265ce:	(bad)  
 10265cf:	clc    
 10265d0:	inc    DWORD PTR [edi+0x7391fff6]
 10265d6:	jmp    0x10265c8
 10265d8:	clc    
 10265d9:	clc    
 10265da:	sti    
 10265db:	sti    
 10265dc:	sbb    eax,0x0
 10265e1:	add    BYTE PTR [eax],al
 10265e3:	add    BYTE PTR [eax],al
 10265e5:	add    BYTE PTR [edx-0x1],dl
 10265eb:	(bad)  
 10265ec:	(bad)  
 10265ed:	(bad)  
 10265ee:	(bad)  
 10265ef:	(bad)  
 10265f0:	(bad)  
 10265f1:	(bad)  
 10265f2:	(bad)  
 10265f3:	(bad)  
 10265f4:	(bad)  
 10265f5:	(bad)  
 10265f6:	(bad)  
 10265f7:	(bad)  
 10265f8:	(bad)  
 10265f9:	(bad)  
 10265fa:	(bad)  
 10265fb:	(bad)  
 10265fc:	(bad)  
 10265fd:	(bad)  
 10265fe:	(bad)  
 10265ff:	(bad)  
 1026600:	dec    DWORD PTR [ebp-0x147b4e0a]
 1026606:	lock clc 
 1026608:	clc    
 1026609:	sti    
 102660a:	sti    
 102660b:	call   FWORD PTR [ecx]
 102660d:	add    BYTE PTR [eax],al
 102660f:	add    BYTE PTR [eax],al
 1026611:	add    BYTE PTR [eax],al
 1026613:	add    BYTE PTR [esi+0x66],ah
 1026616:	adc    di,di
 1026619:	(bad)  
 102661a:	(bad)  
 102661b:	(bad)  
 102661c:	(bad)  
 102661d:	(bad)  
 102661e:	(bad)  
 102661f:	(bad)  
 1026620:	(bad)  
 1026621:	(bad)  
 1026622:	(bad)  
 1026623:	(bad)  
 1026624:	(bad)  
 1026625:	(bad)  
 1026626:	(bad)  
 1026627:	(bad)  
 1026628:	(bad)  
 1026629:	(bad)  
 102662a:	(bad)  
 102662b:	(bad)  
 102662c:	(bad)  
 102662d:	(bad)  
 102662e:	(bad)  
 102662f:	sti    
 1026630:	dec    DWORD PTR [ecx-0x7147a4e]
 1026636:	clc    
 1026637:	clc    
 1026638:	sti    
 1026639:	sti    
 102663a:	(bad)  
 102663b:	call   FWORD PTR ds:0x0
 1026641:	add    BYTE PTR [eax],al
 1026643:	add    BYTE PTR [esi-0x52],ah
 1026646:	jmp    FWORD PTR [esi-0x1]
 1026649:	(bad)  
 102664a:	(bad)  
 102664b:	(bad)  
 102664c:	(bad)  
 102664d:	(bad)  
 102664e:	(bad)  
 102664f:	(bad)  
 1026650:	(bad)  
 1026651:	(bad)  
 1026652:	(bad)  
 1026653:	(bad)  
 1026654:	(bad)  
 1026655:	(bad)  
 1026656:	(bad)  
 1026657:	(bad)  
 1026658:	(bad)  
 1026659:	(bad)  
 102665a:	(bad)  
 102665b:	(bad)  
 102665c:	(bad)  
 102665d:	(bad)  
 102665e:	(bad)  
 102665f:	(bad)  
 1026660:	clc    
 1026661:	xchg   DWORD PTR [ebp-0x7070f15],ecx
 1026667:	sti    
 1026668:	sti    
 1026669:	(bad)  
 102666a:	sti    
 102666b:	call   FWORD PTR [eax+eax*1]
	...
 1026676:	xchg   edx,eax
 1026677:	mov    DWORD PTR [ecx-0x76767677],ecx
 102667d:	mov    DWORD PTR [ebp-0x78787877],ecx
 1026683:	xchg   DWORD PTR [edi-0x7b7b787c],eax
 1026689:	test   BYTE PTR [ebx+0x73],dh
 102668c:	jae    0x1026701
 102668e:	outs   dx,DWORD PTR ds:[esi]
 102668f:	jo     0x10266fe
 1026691:	test   DWORD PTR [ebp-0x7a8b7a7b],eax
 1026697:	jae    0x102670c
 1026699:	jae    0x102670b
 102669b:	jo     0x10266ba
 102669d:	add    BYTE PTR [eax],al
 102669f:	add    ah,bh
 10266a1:	add    BYTE PTR [eax],al
 10266a3:	add    BYTE PTR [eax],al
 10266a5:	pop    es
 10266a6:	add    BYTE PTR [eax],al
 10266a8:	lock add BYTE PTR [eax],al
 10266ab:	add    BYTE PTR [eax],al
 10266ad:	pop    es
 10266ae:	add    BYTE PTR [eax],al
 10266b0:	lock add BYTE PTR [eax],al
 10266b3:	add    BYTE PTR [eax],al
 10266b5:	pop    es
 10266b6:	add    BYTE PTR [eax],al
 10266b8:	cld    
 10266b9:	add    BYTE PTR [eax],al
 10266bb:	add    BYTE PTR [eax],al
 10266bd:	pop    es
 10266be:	add    BYTE PTR [eax],al
 10266c0:	cld    
 10266c1:	add    BYTE PTR [eax],al
 10266c3:	add    BYTE PTR [eax],al
 10266c5:	pop    es
 10266c6:	add    BYTE PTR [eax],al
 10266c8:	lock add BYTE PTR [eax],al
 10266cb:	add    BYTE PTR [eax],al
 10266cd:	pop    es
 10266ce:	add    BYTE PTR [eax],al
 10266d0:	lock add BYTE PTR [eax],al
 10266d3:	add    BYTE PTR [eax],al
 10266d5:	pop    es
 10266d6:	add    BYTE PTR [eax],al
 10266d8:	cld    
 10266d9:	add    BYTE PTR [eax],al
 10266db:	add    BYTE PTR [eax],al
 10266dd:	pop    es
 10266de:	add    BYTE PTR [eax],al
 10266e0:	cld    
 10266e1:	add    BYTE PTR [eax],al
 10266e3:	add    BYTE PTR [eax],al
 10266e5:	pop    es
 10266e6:	add    BYTE PTR [eax],al
 10266e8:	lock add BYTE PTR [eax],al
 10266eb:	add    BYTE PTR [eax],al
 10266ed:	pop    es
 10266ee:	add    BYTE PTR [eax],al
 10266f0:	lock add BYTE PTR [eax],al
 10266f3:	add    BYTE PTR [eax],al
 10266f5:	pop    es
 10266f6:	add    BYTE PTR [eax],al
 10266f8:	cld    
 10266f9:	add    BYTE PTR [eax],al
 10266fb:	add    BYTE PTR [eax],al
 10266fd:	pop    es
 10266fe:	add    BYTE PTR [eax],al
 1026700:	cld    
 1026701:	add    BYTE PTR [eax],al
 1026703:	add    BYTE PTR [eax],al
 1026705:	pop    es
 1026706:	add    BYTE PTR [eax],al
 1026708:	lock add BYTE PTR [eax],al
 102670b:	add    BYTE PTR [eax],al
 102670d:	pop    es
 102670e:	add    BYTE PTR [eax],al
 1026710:	lock add BYTE PTR [eax],al
 1026713:	add    BYTE PTR [eax],al
 1026715:	pop    es
 1026716:	add    BYTE PTR [eax],al
 1026718:	cld    
 1026719:	add    BYTE PTR [eax],al
 102671b:	add    BYTE PTR [eax],al
 102671d:	pop    es
 102671e:	add    BYTE PTR [eax],al
 1026720:	cld    
 1026721:	add    BYTE PTR [eax],al
 1026723:	add    BYTE PTR [eax],al
 1026725:	pop    es
 1026726:	add    BYTE PTR [eax],al
 1026728:	lock add BYTE PTR [eax],al
 102672b:	add    BYTE PTR [eax],al
 102672d:	pop    es
 102672e:	add    BYTE PTR [eax],al
 1026730:	lock add BYTE PTR [eax],al
 1026733:	add    BYTE PTR [eax],al
 1026735:	pop    es
 1026736:	add    BYTE PTR [eax],al
 1026738:	cld    
 1026739:	add    BYTE PTR [eax],al
 102673b:	add    BYTE PTR [eax],al
 102673d:	pop    es
 102673e:	add    BYTE PTR [eax],al
 1026740:	cld    
 1026741:	add    BYTE PTR [eax],al
 1026743:	add    BYTE PTR [eax],al
 1026745:	pop    es
 1026746:	add    BYTE PTR [eax],al
 1026748:	lock add BYTE PTR [eax],al
 102674b:	add    BYTE PTR [eax],al
 102674d:	pop    es
 102674e:	add    BYTE PTR [eax],al
 1026750:	lock add BYTE PTR [eax],al
 1026753:	add    BYTE PTR [eax],al
 1026755:	pop    es
 1026756:	add    BYTE PTR [eax],al
 1026758:	cld    
 1026759:	add    BYTE PTR [eax],al
 102675b:	add    BYTE PTR [eax],al
 102675d:	pop    es
 102675e:	add    BYTE PTR [eax],al
 1026760:	cld    
 1026761:	add    BYTE PTR [eax],al
 1026763:	add    BYTE PTR [eax],al
 1026765:	pop    es
 1026766:	add    BYTE PTR [eax],al
 1026768:	lock add BYTE PTR [eax],al
 102676b:	add    BYTE PTR [eax],al
 102676d:	pop    es
 102676e:	add    BYTE PTR [eax],al
 1026770:	lock add BYTE PTR [eax],al
 1026773:	add    BYTE PTR [eax],al
 1026775:	pop    es
 1026776:	add    BYTE PTR [eax],al
 1026778:	cld    
 1026779:	add    BYTE PTR [eax],al
 102677b:	add    BYTE PTR [eax],al
 102677d:	pop    es
 102677e:	add    BYTE PTR [eax],al
 1026780:	cld    
 1026781:	add    BYTE PTR [eax],al
 1026783:	add    BYTE PTR [eax],al
 1026785:	pop    es
 1026786:	add    BYTE PTR [eax],al
 1026788:	lock add BYTE PTR [eax],al
 102678b:	add    BYTE PTR [eax],al
 102678d:	pop    es
 102678e:	add    BYTE PTR [eax],al
 1026790:	lock add BYTE PTR [eax],al
 1026793:	add    BYTE PTR [eax],al
 1026795:	pop    es
 1026796:	add    BYTE PTR [eax],al
 1026798:	cld    
 1026799:	add    BYTE PTR [eax],al
 102679b:	add    BYTE PTR [eax],al
 102679d:	pop    es
 102679e:	add    BYTE PTR [eax],al
 10267a0:	cld    
 10267a1:	add    BYTE PTR [eax],al
 10267a3:	add    BYTE PTR [eax],al
 10267a5:	pop    es
 10267a6:	add    BYTE PTR [eax],al
 10267a8:	lock add BYTE PTR [eax],al
 10267ab:	add    BYTE PTR [eax],al
 10267ad:	pop    es
 10267ae:	add    BYTE PTR [eax],al
 10267b0:	lock add BYTE PTR [eax],al
 10267b3:	add    BYTE PTR [eax],al
 10267b5:	pop    es
 10267b6:	add    BYTE PTR [eax],al
 10267b8:	cld    
 10267b9:	add    BYTE PTR [eax],al
 10267bb:	add    BYTE PTR [eax],al
 10267bd:	pop    es
 10267be:	add    BYTE PTR [eax],al
 10267c0:	cld    
 10267c1:	add    BYTE PTR [eax],al
 10267c3:	add    BYTE PTR [eax],al
 10267c5:	pop    es
 10267c6:	add    BYTE PTR [eax],al
 10267c8:	lock add BYTE PTR [eax],al
 10267cb:	add    BYTE PTR [eax],al
 10267cd:	pop    es
 10267ce:	add    BYTE PTR [eax],al
 10267d0:	lock add BYTE PTR [eax],al
 10267d3:	add    BYTE PTR [eax],al
 10267d5:	pop    es
 10267d6:	add    BYTE PTR [eax],al
 10267d8:	cld    
 10267d9:	add    BYTE PTR [eax],al
 10267db:	add    BYTE PTR [eax],al
 10267dd:	pop    es
 10267de:	add    BYTE PTR [eax],al
 10267e0:	cld    
 10267e1:	add    BYTE PTR [eax],al
 10267e3:	add    BYTE PTR [eax],al
 10267e5:	pop    es
 10267e6:	add    BYTE PTR [eax],al
 10267e8:	lock add BYTE PTR [eax],al
 10267eb:	add    BYTE PTR [eax],al
 10267ed:	pop    es
 10267ee:	add    BYTE PTR [eax],al
 10267f0:	lock add BYTE PTR [eax],al
 10267f3:	add    BYTE PTR [eax],al
 10267f5:	pop    es
 10267f6:	add    BYTE PTR [eax],al
 10267f8:	cld    
 10267f9:	add    BYTE PTR [eax],al
 10267fb:	add    BYTE PTR [eax],al
 10267fd:	pop    es
 10267fe:	add    BYTE PTR [eax],al
 1026800:	cld    
 1026801:	add    BYTE PTR [eax],al
 1026803:	add    BYTE PTR [eax],al
 1026805:	pop    es
 1026806:	add    BYTE PTR [eax],al
 1026808:	lock add BYTE PTR [eax],al
 102680b:	add    BYTE PTR [eax],al
 102680d:	pop    es
 102680e:	add    BYTE PTR [eax],al
 1026810:	lock add BYTE PTR [eax],al
 1026813:	add    BYTE PTR [eax],al
 1026815:	pop    es
 1026816:	add    BYTE PTR [eax],al
 1026818:	cld    
 1026819:	add    BYTE PTR [eax],al
 102681b:	add    BYTE PTR [eax],al
 102681d:	pop    es
 102681e:	add    BYTE PTR [eax],al
 1026820:	sub    BYTE PTR [eax],al
 1026822:	add    BYTE PTR [eax],al
 1026824:	and    BYTE PTR [eax],al
 1026826:	add    BYTE PTR [eax],al
 1026828:	inc    eax
 1026829:	add    BYTE PTR [eax],al
 102682b:	add    BYTE PTR [ecx],al
 102682d:	add    BYTE PTR [eax],cl
 102682f:	add    BYTE PTR [eax],al
 1026831:	add    BYTE PTR [eax],al
 1026833:	add    BYTE PTR [eax],al
 1026835:	add    al,0x0
	...
 102683f:	add    BYTE PTR [eax],al
 1026841:	add    DWORD PTR [eax],eax
 1026843:	add    BYTE PTR [eax],al
 1026845:	add    DWORD PTR [eax],eax
 1026847:	add    BYTE PTR [eax],al
 1026849:	add    BYTE PTR [eax],al
 102684b:	add    BYTE PTR [ecx+0x49],ah
 102684e:	xor    DWORD PTR [eax],eax
 1026850:	gs dec ebp
 1026852:	add    BYTE PTR ss:[eax+0x51],ch
 1026856:	cmp    DWORD PTR [eax],eax
 1026858:	imul   edx,DWORD PTR [ebx+0x3c],0x0
 102685c:	ins    DWORD PTR es:[edi],dx
 102685d:	push   ebp
 102685e:	add    BYTE PTR ds:[edx],bl
 1026861:	push   esi
 1026862:	jg     0x1026864
 1026864:	outs   dx,DWORD PTR ds:[esi]
 1026865:	push   edi
 1026866:	inc    ecx
 1026867:	add    BYTE PTR [edi+0x58],ch
 102686a:	inc    ecx
 102686b:	add    BYTE PTR [ecx+0x5a],dh
 102686e:	inc    ebx
 102686f:	add    BYTE PTR [ebx+0x5b],dh
 1026872:	inc    ebp
 1026873:	add    BYTE PTR [ebp+0x5d],dh
 1026876:	inc    ebp
 1026877:	add    BYTE PTR [esi+0x5f],dh
 102687a:	dec    ecx
 102687b:	add    BYTE PTR [eax+0x61],bh
 102687e:	dec    ecx
 102687f:	add    BYTE PTR [edx+0x62],bh
 1026882:	dec    esp
 1026883:	add    BYTE PTR [esp+eiz*2+0x4e],bh
 1026887:	add    BYTE PTR [ebp+0x62],ch
 102688a:	pop    ebx
 102688b:	add    BYTE PTR [esi+0x66],bh
 102688e:	push   eax
 102688f:	add    BYTE PTR [esi+0x68],bh
 1026892:	push   edx
 1026893:	add    BYTE PTR [edi+0x69],bh
 1026896:	push   esp
 1026897:	add    BYTE PTR [eax-0x7dffad98],al
 102689d:	push   0x55
 102689f:	add    BYTE PTR [ebx-0x7affa894],al
 10268a5:	outs   dx,BYTE PTR ds:[esi]
 10268a6:	pop    ecx
 10268a7:	add    BYTE PTR [eax-0x75ffa38f],cl
 10268ad:	je     0x102690e
 10268af:	add    BYTE PTR [edx-0x6fff9f8c],cl
 10268b5:	jp     0x102691e
 10268b7:	add    BYTE PTR [esi-0x64ff917f],dl
 10268bd:	test   DWORD PTR [edx+0x0],esi
 10268c0:	mov    ds:0x2e007a8d,al
 10268c5:	ins    BYTE PTR es:[edi],dx
 10268c6:	xchg   ecx,eax
 10268c7:	add    BYTE PTR [ebx+0x74],cl
 10268ca:	xchg   BYTE PTR [eax],al
 10268cc:	dec    edi
 10268cd:	jnp    0x102685d
 10268cf:	add    BYTE PTR [edx-0x7e],dl
 10268d2:	xchg   esi,eax
 10268d3:	add    BYTE PTR [ebp-0x78],dl
 10268d6:	popf   
 10268d7:	add    BYTE PTR [ebp-0x7b],al
 10268da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10268db:	add    BYTE PTR [edx-0x72],bl
 10268de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10268df:	add    BYTE PTR [ecx-0x70],bl
 10268e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10268e3:	add    BYTE PTR [ebx],ah
 10268e5:	(bad)  
 10268e6:	inc    DWORD PTR [eax]
 10268e8:	cmp    esp,edx
 10268ea:	inc    DWORD PTR [eax]
 10268ec:	inc    edi
 10268ed:	aad    0xff
 10268ef:	add    BYTE PTR [esi-0x21],cl
 10268f2:	inc    DWORD PTR [eax]
 10268f4:	(bad)  
 10268f5:	(bad)  
 10268f7:	add    BYTE PTR [esi-0x24],ah
 10268fa:	stc    
 10268fb:	add    BYTE PTR [edx-0x23],ch
 10268fe:	cli    
 10268ff:	add    BYTE PTR [esi-0x22],ch
 1026902:	stc    
 1026903:	add    BYTE PTR [esi-0x20],bl
 1026906:	std    
 1026907:	add    BYTE PTR [edi-0x1c],bl
 102690a:	inc    DWORD PTR [eax]
 102690c:	pusha  
 102690d:	loope  0x102690d
 102690f:	add    BYTE PTR [eax-0x1b],ah
 1026912:	inc    DWORD PTR [eax]
 1026914:	push   0xffffffe1
 1026916:	sti    
 1026917:	add    BYTE PTR [edi-0x1f],ch
 102691a:	sti    
 102691b:	add    BYTE PTR [eax+eiz*8-0x4],ch
 102691f:	add    BYTE PTR [edx-0x19],ch
 1026922:	inc    DWORD PTR [eax]
 1026924:	jne    0x1026908
 1026926:	cli    
 1026927:	add    BYTE PTR [edx-0x1e],dh
 102692a:	std    
 102692b:	add    BYTE PTR [eax-0x1c],dh
 102692e:	inc    DWORD PTR [eax]
 1026930:	jne    0x1026918
 1026932:	inc    BYTE PTR [eax]
 1026934:	jp     0x102691c
 1026936:	cld    
 1026937:	add    BYTE PTR [edi-0x14],dh
 102693a:	inc    DWORD PTR [eax]
 102693c:	jl     0x1026927
 102693e:	inc    DWORD PTR [eax]
 1026940:	repz inc DWORD PTR gs:[eax]
 1026944:	lea    eax,[ebp-0x6b56ff7f]
 102694a:	add    BYTE PTR [eax],0xae
 102694d:	call   0x8d:0x9eb2008a
 1026954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1026955:	fwait
 1026956:	xchg   esi,eax
 1026957:	add    BYTE PTR [ebp-0x49ff7260],dh
 102695d:	mov    ds:0xa5b90092,al
 1026962:	xchg   ebp,eax
 1026963:	add    BYTE PTR [edx-0x42ff6658],bh
 1026969:	test   eax,0xabbe009a
 102696e:	popf   
 102696f:	add    BYTE PTR [esi-0x67ff5b62],dl
 1026975:	sahf   
 1026976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1026977:	add    BYTE PTR [edx-0x63ff595f],bl
 102697d:	mov    al,ds:0xa68200a5
 1026982:	mov    dh,0x0
 1026984:	sub    DWORD PTR [ecx-0x557bff47],0xffffffba
 102698b:	add    BYTE PTR [ebp-0x7eff4454],al
 1026991:	lods   al,BYTE PTR ds:[esi]
 1026992:	mov    edi,0xb8ac8f00
 1026997:	add    BYTE PTR [eax-0x5fff585d],ah
 102699d:	test   al,0xab
 102699f:	add    BYTE PTR [edi-0x49ff4e4e],dh
 10269a5:	mov    edx,0xabc000be
 10269aa:	pushf  
 10269ab:	add    cl,al
 10269ad:	lods   eax,DWORD PTR ds:[esi]
 10269ae:	sahf   
 10269af:	add    dl,al
 10269b1:	mov    al,0xa1
 10269b3:	add    dh,al
 10269b5:	mov    cl,0xa2
 10269b7:	add    ch,al
 10269b9:	mov    bl,0xa4
 10269bb:	add    dh,al
 10269bd:	mov    ah,0xa5
 10269bf:	add    al,cl
 10269c1:	mov    ch,0xa6
 10269c3:	add    dl,cl
 10269c5:	mov    bh,0xa9
 10269c7:	add    bl,cl
 10269c9:	mov    eax,0xb9cc00ab
 10269ce:	stos   BYTE PTR es:[edi],al
 10269cf:	add    ah,cl
 10269d1:	mov    edx,0xbdcf00ac
 10269d6:	scas   eax,DWORD PTR es:[edi]
 10269d7:	add    dl,al
 10269d9:	mov    ecx,0xbcca00b4
 10269de:	mov    cl,0x0
 10269e0:	leave  
 10269e1:	mov    esp,0xbfc500b5
 10269e6:	mov    ebx,0xb0bed000
 10269eb:	add    al,dl
 10269ed:	sar    DWORD PTR [ecx-0x443a2f00],0x0
 10269f4:	fadd   st,st(5)
 10269f6:	mov    edx,0xbdc8db00
 10269fb:	add    BYTE PTR [ebx-0x78ff3b50],al
 1026a01:	mov    ch,0xc6
 1026a03:	add    BYTE PTR [ebx-0x5aff3141],dl
 1026a09:	mov    edx,0xc89f00c2
 1026a0e:	rol    DWORD PTR [eax],cl
 1026a10:	lahf   
 1026a11:	leave  
 1026a12:	xlat   BYTE PTR ds:[ebx]
 1026a13:	add    BYTE PTR [ecx-0x53ff373f],dh
 1026a19:	(bad)  
 1026a1a:	jecxz  0x1026a1c
 1026a1c:	(bad)  
 1026a1d:	jmp    0xfc:0xea9200fc
 1026a24:	pushf  
 1026a25:	out    dx,al
 1026a26:	std    
 1026a27:	add    BYTE PTR [edi-0x4cff000f],dl
 1026a2d:	lock std 
 1026a2f:	add    BYTE PTR [eax-0x40ff0001],dh
 1026a35:	(bad)  
 1026a36:	inc    DWORD PTR [eax]
 1026a38:	rol    ecx,0xc2
 1026a3b:	add    cl,cl
 1026a3d:	mov    ah,0x0
 1026a40:	fcmove st,st(2)
 1026a42:	rol    DWORD PTR [eax],0xd8
 1026a45:	int3   
 1026a46:	ret    0xdc00
 1026a49:	int3   
 1026a4a:	ret    0xdd00
 1026a4d:	iret   
 1026a4e:	mov    DWORD PTR [eax],0xc3cfe2
 1026a54:	loope  0x1026a26
 1026a56:	mov    DWORD PTR [eax],0xcdd6e6
 1026a5c:	jmp    0xec033335
 1026a61:	fmul   st,st(4)
 1026a63:	add    cl,dh
 1026a65:	fcmovne st,st(7)
 1026a67:	add    bh,bh
 1026a69:	(bad)  
 1026a6b:	add    bh,bh
 1026a6d:	(bad)  
 1026a6f:	add    ch,ch
 1026a71:	fcmovnbe st,st(0)
 1026a73:	add    dh,ch
 1026a75:	(bad)  
 1026a77:	add    bl,ch
 1026a79:	fst    st(5)
 1026a7b:	add    cl,dh
 1026a7d:	(bad)  
 1026a7f:	add    bh,bh
 1026a81:	loopne 0x1026a51
 1026a83:	add    bh,dh
 1026a85:	loope  0x1026a5b
 1026a87:	add    bh,bh
 1026a89:	loop   0x1026a5c
 1026a8b:	add    bh,bh
 1026a8d:	in     al,0xd3
 1026a8f:	add    al,bh
 1026a91:	loope  0x1026a67
 1026a93:	add    dh,bh
 1026a95:	in     eax,0xd6
 1026a97:	add    ch,dh
 1026a99:	in     al,0xda
 1026a9b:	add    bh,dh
 1026a9d:	out    0xdd,eax
 1026a9f:	add    cl,bh
 1026aa1:	in     eax,0xd9
 1026aa3:	add    dh,bh
 1026aa5:	out    0xd8,al
 1026aa7:	add    bl,bh
 1026aa9:	out    0xdc,eax
 1026aab:	add    dh,bh
 1026aad:	call   0xeafb6b8c
 1026ab2:	fiadd  WORD PTR [eax]
 1026ab4:	(bad)  
 1026ab5:	jmp    0xf4c36b97
 1026aba:	inc    BYTE PTR [eax]
 1026abc:	int3   
 1026abd:	repz sti 
 1026abf:	add    al,cl
 1026ac1:	cmc    
 1026ac2:	inc    BYTE PTR [eax]
 1026ac4:	iret   
 1026ac5:	hlt    
 1026ac6:	cld    
 1026ac7:	add    bl,dl
 1026ac9:	idiv   ch
 1026acb:	add    al,dl
 1026acd:	(bad)  
 1026ace:	inc    DWORD PTR [eax]
 1026ad0:	aad    0xff
 1026ad2:	inc    DWORD PTR [eax]
 1026ad4:	stc    
 1026ad5:	jmp    0xed006bbb
 1026ada:	loopne 0x1026adc
 1026adc:	cli    
 1026add:	in     al,dx
 1026ade:	loop   0x1026ae0
 1026ae0:	(bad)  
 1026ae1:	in     al,dx
 1026ae2:	loope  0x1026ae4
 1026ae4:	cli    
 1026ae5:	out    dx,al
 1026ae6:	in     eax,0x0
 1026ae8:	(bad)  
 1026ae9:	out    dx,al
 1026aea:	in     al,0x0
 1026aec:	push   eax
 1026aee:	out    0x0,al
 1026af0:	sti    
 1026af1:	lock jmp 0xeaf468f7
 1026af7:	add    dh,bh
 1026af9:	repz in al,dx
 1026afb:	add    dh,bh
 1026afd:	hlt    
 1026afe:	out    dx,al
 1026aff:	add    dh,bh
 1026b01:	div    cl
 1026b03:	add    bh,bh
 1026b05:	clc    
 1026b06:	repz add dh,bh
 1026b09:	stc    
 1026b0a:	cmc    
 1026b0b:	add    dh,bh
 1026b0d:	cli    
 1026b0e:	clc    
 1026b0f:	add    dh,bh
 1026b11:	cld    
 1026b12:	cli    
 1026b13:	add    bh,bh
 1026b15:	(bad)  
 1026b16:	inc    BYTE PTR [eax]
	...
 1026c44:	(bad)  
 1026c45:	(bad)  
 1026c46:	inc    DWORD PTR [eax]
 1026c48:	add    BYTE PTR [eax],al
 1026c4a:	add    BYTE PTR [eax],al
 1026c4c:	sbb    al,0x15
 1026c4e:	adc    edx,DWORD PTR [edx]
 1026c50:	(bad)  
 1026c51:	prefetchw BYTE PTR [ebx+ecx*1]
 1026c55:	or     ecx,DWORD PTR [ebx]
 1026c57:	add    eax,0x5050505
 1026c5c:	add    al,BYTE PTR [edx]
 1026c5e:	add    al,BYTE PTR [edx]
 1026c60:	add    al,BYTE PTR [edx]
 1026c62:	add    DWORD PTR [ecx],eax
 1026c64:	add    DWORD PTR [ecx],eax
 1026c66:	add    BYTE PTR [eax],al
 1026c68:	add    BYTE PTR [eax],al
 1026c6a:	aas    
 1026c6b:	aas    
 1026c6c:	aas    
 1026c6d:	adc    BYTE PTR [eax-0x57645758],ch
 1026c73:	fwait
 1026c74:	fwait
 1026c75:	cwde   
 1026c76:	cwde   
 1026c77:	xchg   edi,eax
 1026c78:	cwde   
 1026c79:	xchg   edi,eax
 1026c7a:	xchg   edi,eax
 1026c7b:	mov    ss,WORD PTR [edi-0x77717172]
 1026c81:	mov    BYTE PTR [eax+0xb8888],cl
 1026c87:	add    BYTE PTR [eax],al
 1026c89:	add    BYTE PTR [edi],bh
 1026c8b:	jge    0x1026c8c
 1026c8d:	inc    ebx
 1026c8e:	test   al,0xa8
 1026c90:	test   al,0x9b
 1026c92:	fwait
 1026c93:	fwait
 1026c94:	fwait
 1026c95:	xchg   edi,eax
 1026c96:	(bad)  
 1026c97:	xchg   edi,eax
 1026c98:	xchg   edi,eax
 1026c99:	xchg   edi,eax
 1026c9a:	xchg   edi,eax
 1026c9b:	mov    ss,WORD PTR [edi-0x71716872]
 1026ca1:	mov    BYTE PTR [esi+0xb8888],cl
 1026ca7:	add    BYTE PTR [eax],al
 1026ca9:	add    BYTE PTR [eax],al
 1026cab:	add    BYTE PTR [edx-0x57],al
 1026cae:	test   al,0xa8
 1026cb0:	test   al,0xa8
 1026cb2:	test   al,0xa8
 1026cb4:	cwde   
 1026cb5:	xchg   BYTE PTR [edx-0x6868687b],al
 1026cbb:	xchg   edi,eax
 1026cbc:	mov    ss,WORD PTR [edi-0x71716872]
 1026cc2:	mov    BYTE PTR [esi+0xb88],cl
 1026cc8:	add    BYTE PTR [eax],al
 1026cca:	add    BYTE PTR [eax],al
 1026ccc:	inc    edx
 1026ccd:	stos   DWORD PTR es:[edi],eax
 1026cce:	test   eax,0x9ba8a8a8
 1026cd3:	test   al,0x57
 1026cd5:	pop    ds
 1026cd6:	push   ebp
 1026cd7:	imul   eax,DWORD PTR [edx-0x68686878],0xffffff97
 1026cde:	mov    cs,WORD PTR [esi-0x71776872]
 1026ce4:	mov    BYTE PTR ds:0x0,cl
 1026cea:	aas    
 1026ceb:	aas    
 1026cec:	aas    
 1026ced:	adc    BYTE PTR [ebx-0x57575755],ch
 1026cf3:	test   al,0x25
 1026cf5:	daa    
 1026cf6:	pop    ds
 1026cf7:	dec    edx
 1026cf8:	imul   eax,DWORD PTR [ebp-0x68686871],0xffffff97
 1026cff:	mov    ss,WORD PTR [edi-0x71717172]
 1026d05:	sldt   WORD PTR [eax]
 1026d08:	add    BYTE PTR [eax],al
 1026d0a:	aas    
 1026d0b:	jge    0x1026d0c
 1026d0d:	inc    ebx
 1026d0e:	stos   DWORD PTR es:[edi],eax
 1026d0f:	stos   DWORD PTR es:[edi],eax
 1026d10:	stos   DWORD PTR es:[edi],eax
 1026d11:	test   al,0xa8
 1026d13:	test   al,0x53
 1026d15:	jno    0x1026d3e
 1026d17:	pop    ds
 1026d18:	dec    edx
 1026d19:	imul   eax,DWORD PTR [ebp-0x71687169],0xffffff91
 1026d20:	mov    ss,WORD PTR [edi+0xd88978e]
 1026d26:	add    BYTE PTR [eax],al
 1026d28:	add    BYTE PTR [eax],al
 1026d2a:	add    BYTE PTR [eax],al
 1026d2c:	inc    ebp
 1026d2d:	stos   DWORD PTR es:[edi],eax
 1026d2e:	stos   DWORD PTR es:[edi],eax
 1026d2f:	stos   DWORD PTR es:[edi],eax
 1026d30:	stos   DWORD PTR es:[edi],eax
 1026d31:	stos   DWORD PTR es:[edi],eax
 1026d32:	test   al,0xa8
 1026d34:	test   al,0x26
 1026d36:	mov    eax,ds:0x6b4d1f27
 1026d3b:	adc    BYTE PTR [edi-0x6e6e6e69],0x97
 1026d42:	mov    cs,WORD PTR [esi+0xf8e]
 1026d48:	add    BYTE PTR [eax],al
 1026d4a:	add    BYTE PTR [eax],al
 1026d4c:	inc    esi
 1026d4d:	stos   DWORD PTR es:[edi],eax
 1026d4e:	scas   al,BYTE PTR es:[edi]
 1026d4f:	stos   DWORD PTR es:[edi],eax
 1026d50:	stos   DWORD PTR es:[edi],eax
 1026d51:	stos   DWORD PTR es:[edi],eax
 1026d52:	stos   DWORD PTR es:[edi],eax
 1026d53:	test   al,0xa8
 1026d55:	jo     0x1026dc8
 1026d57:	mov    eax,ds:0x6b541f27
 1026d5c:	adc    BYTE PTR [edi-0x686e646f],0x97
 1026d63:	mov    ss,WORD PTR [edi+0xd]
 1026d69:	add    BYTE PTR [edi],bh
 1026d6b:	aas    
 1026d6c:	aas    
 1026d6d:	adc    BYTE PTR [ebx-0x54545452],ch
 1026d73:	test   al,0xa8
 1026d75:	xchg   esp,eax
 1026d76:	es je  0x1026df3
 1026d79:	daa    
 1026d7a:	pop    ds
 1026d7b:	dec    ebp
 1026d7c:	imul   eax,DWORD PTR [edx-0x68646e69],0xffffff8e
 1026d83:	xchg   edi,eax
 1026d84:	mov    cs,WORD PTR [edi]
 1026d86:	add    BYTE PTR [eax],al
 1026d88:	add    BYTE PTR [eax],al
 1026d8a:	aas    
 1026d8b:	jge    0x1026d8c
 1026d8d:	inc    ebx
 1026d8e:	scas   al,BYTE PTR es:[edi]
 1026d8f:	stos   DWORD PTR es:[edi],eax
 1026d90:	stos   DWORD PTR es:[edi],eax
 1026d91:	stos   DWORD PTR es:[edi],eax
 1026d92:	stos   DWORD PTR es:[edi],eax
 1026d93:	test   al,0x8c
 1026d95:	add    DWORD PTR [ecx+0x273c7b25],0x856b4d06
 1026d9f:	(bad)  
 1026da0:	xchg   ecx,eax
 1026da1:	xchg   ecx,eax
 1026da2:	xchg   ecx,eax
 1026da3:	xchg   edi,eax
 1026da4:	mov    cs,WORD PTR [edi]
 1026da6:	add    BYTE PTR [eax],al
 1026da8:	add    BYTE PTR [eax],al
 1026daa:	add    BYTE PTR [eax],al
 1026dac:	dec    eax
 1026dad:	scas   al,BYTE PTR es:[edi]
 1026dae:	scas   al,BYTE PTR es:[edi]
 1026daf:	scas   al,BYTE PTR es:[edi]
 1026db0:	scas   al,BYTE PTR es:[edi]
 1026db1:	stos   DWORD PTR es:[edi],eax
 1026db2:	scas   al,BYTE PTR es:[edi]
 1026db3:	jae    0x1026dda
 1026db5:	and    esp,DWORD PTR [edx]
 1026db7:	and    DWORD PTR [eax],esp
 1026db9:	js     0x1026de3
 1026dbb:	daa    
 1026dbc:	push   es
 1026dbd:	dec    ebp
 1026dbe:	imul   ecx,DWORD PTR [edi-0x6e6e6465],0xffffff91
 1026dc5:	adc    eax,DWORD PTR [eax]
 1026dc7:	add    BYTE PTR [eax],al
 1026dc9:	add    BYTE PTR [eax],al
 1026dcb:	add    BYTE PTR [eax-0x52],cl
 1026dce:	scas   al,BYTE PTR es:[edi]
 1026dcf:	stos   DWORD PTR es:[edi],eax
 1026dd0:	scas   al,BYTE PTR es:[edi]
 1026dd1:	stos   DWORD PTR es:[edi],eax
 1026dd2:	stos   DWORD PTR es:[edi],eax
 1026dd3:	dec    esi
 1026dd4:	jnp    0x1026e51
 1026dd6:	jnp    0x1026e53
 1026dd8:	jnp    0x1026e17
 1026dda:	sub    DWORD PTR [edx],ebp
 1026ddc:	daa    
 1026ddd:	push   es
 1026dde:	mov    edx,DWORD PTR [bx-0x646f]
 1026de3:	fwait
 1026de4:	xchg   edi,eax
 1026de5:	sldt   WORD PTR [eax]
 1026de8:	add    BYTE PTR [eax],al
 1026dea:	aas    
 1026deb:	aas    
 1026dec:	aas    
 1026ded:	adc    BYTE PTR [esi-0x51515152],ch
 1026df3:	stos   DWORD PTR es:[edi],eax
 1026df4:	jb     0x1026e6f
 1026df6:	xor    ebp,DWORD PTR [ebp*1+0x24242439]
 1026dfd:	and    al,0x7c
 1026dff:	cwde   
 1026e00:	fwait
 1026e01:	fwait
 1026e02:	fwait
 1026e03:	xchg   edi,eax
 1026e04:	xchg   edi,eax
 1026e05:	adc    eax,0x0
 1026e0a:	aas    
 1026e0b:	jge    0x1026e0c
 1026e0d:	inc    ebx
 1026e0e:	scas   al,BYTE PTR es:[edi]
 1026e0f:	scas   al,BYTE PTR es:[edi]
 1026e10:	scas   al,BYTE PTR es:[edi]
 1026e11:	stos   DWORD PTR es:[edi],eax
 1026e12:	scas   al,BYTE PTR es:[edi]
 1026e13:	stos   DWORD PTR es:[edi],eax
 1026e14:	push   edx
 1026e15:	mov    al,ds:0x3b393575
 1026e1a:	daa    
 1026e1b:	and    al,0x56
 1026e1d:	or     DWORD PTR [ebx-0x6e646468],0x15979b
 1026e27:	add    BYTE PTR [eax],al
 1026e29:	add    BYTE PTR [eax],al
 1026e2b:	add    BYTE PTR [edx-0x51],bl
 1026e2e:	scas   eax,DWORD PTR es:[edi]
 1026e2f:	scas   al,BYTE PTR es:[edi]
 1026e30:	scas   al,BYTE PTR es:[edi]
 1026e31:	scas   al,BYTE PTR es:[edi]
 1026e32:	scas   al,BYTE PTR es:[edi]
 1026e33:	scas   al,BYTE PTR es:[edi]
 1026e34:	stos   DWORD PTR es:[edi],eax
 1026e35:	outs   dx,DWORD PTR ds:[esi]
 1026e36:	pushf  
 1026e37:	cmp    DWORD PTR [esi],ebp
 1026e39:	cmp    DWORD PTR [ebx],edi
 1026e3b:	daa    
 1026e3c:	and    al,0x64
 1026e3e:	imul   ecx,DWORD PTR [ebx-0x64646465],0xffffff91
 1026e45:	adc    eax,0x0
 1026e4a:	add    BYTE PTR [eax],al
 1026e4c:	pop    edx
 1026e4d:	scas   eax,DWORD PTR es:[edi]
 1026e4e:	scas   eax,DWORD PTR es:[edi]
 1026e4f:	scas   eax,DWORD PTR es:[edi]
 1026e50:	scas   al,BYTE PTR es:[edi]
 1026e51:	scas   al,BYTE PTR es:[edi]
 1026e52:	scas   al,BYTE PTR es:[edi]
 1026e53:	scas   al,BYTE PTR es:[edi]
 1026e54:	stos   DWORD PTR es:[edi],eax
 1026e55:	push   edx
 1026e56:	mov    al,ds:0x2d2c2c76
 1026e5b:	cmp    DWORD PTR [edi],esp
 1026e5d:	and    al,0x66
 1026e5f:	or     DWORD PTR [ebx-0x64646465],0x15
 1026e69:	add    BYTE PTR [edi],bh
 1026e6b:	aas    
 1026e6c:	aas    
 1026e6d:	adc    BYTE PTR [edi-0x51515051],ch
 1026e73:	scas   al,BYTE PTR es:[edi]
 1026e74:	scas   al,BYTE PTR es:[edi]
 1026e75:	stos   DWORD PTR es:[edi],eax
 1026e76:	outs   dx,BYTE PTR ds:[esi]
 1026e77:	sahf   
 1026e78:	sub    eax,0x352d2c2c
 1026e7d:	daa    
 1026e7e:	and    al,0x6b
 1026e80:	or     DWORD PTR [edi+0x179b9ba8],0x0
 1026e8a:	aas    
 1026e8b:	jge    0x1026e8c
 1026e8d:	inc    ebx
 1026e8e:	scas   eax,DWORD PTR es:[edi]
 1026e8f:	jmp    FWORD PTR [esi-0x51515151]
 1026e95:	scas   al,BYTE PTR es:[edi]
 1026e96:	push   edx
 1026e97:	sahf   
 1026e98:	ja     0x1026ecd
 1026e9a:	das    
 1026e9b:	das    
 1026e9c:	xor    bh,BYTE PTR [esi]
 1026e9e:	daa    
 1026e9f:	and    al,0x85
 1026ea1:	xchg   esp,eax
 1026ea2:	test   al,0x9b
 1026ea4:	fwait
 1026ea5:	pop    ss
 1026ea6:	add    BYTE PTR [eax],al
 1026ea8:	add    BYTE PTR [eax],al
 1026eaa:	add    BYTE PTR [eax],al
 1026eac:	pop    edx
 1026ead:	jmp    FWORD PTR [edi-0x50505051]
 1026eb3:	scas   al,BYTE PTR es:[edi]
 1026eb4:	scas   al,BYTE PTR es:[edi]
 1026eb5:	scas   al,BYTE PTR es:[edi]
 1026eb6:	stos   DWORD PTR es:[edi],eax
 1026eb7:	push   edx
 1026eb8:	and    al,0x24
 1026eba:	and    al,0x24
 1026ebc:	and    al,0x24
 1026ebe:	and    al,0x6e
 1026ec0:	xchg   ebp,eax
 1026ec1:	test   al,0xa8
 1026ec3:	fwait
 1026ec4:	fwait
 1026ec5:	sbb    DWORD PTR [eax],eax
 1026ec7:	add    BYTE PTR [eax],al
 1026ec9:	add    BYTE PTR [eax],al
 1026ecb:	add    BYTE PTR [esi-0x1],bl
 1026ece:	scas   eax,DWORD PTR es:[edi]
 1026ecf:	jmp    FWORD PTR [edi-0x51505051]
 1026ed5:	scas   al,BYTE PTR es:[edi]
 1026ed6:	scas   al,BYTE PTR es:[edi]
 1026ed7:	stos   DWORD PTR es:[edi],eax
 1026ed8:	scas   al,BYTE PTR es:[edi]
 1026ed9:	stos   DWORD PTR es:[edi],eax
 1026eda:	stos   DWORD PTR es:[edi],eax
 1026edb:	stos   DWORD PTR es:[edi],eax
 1026edc:	stos   DWORD PTR es:[edi],eax
 1026edd:	stos   DWORD PTR es:[edi],eax
 1026ede:	stos   DWORD PTR es:[edi],eax
 1026edf:	test   al,0xa8
 1026ee1:	test   al,0xa8
 1026ee3:	test   al,0xa8
 1026ee5:	sbb    DWORD PTR [eax],eax
 1026ee7:	add    BYTE PTR [eax],al
 1026ee9:	add    BYTE PTR [edi],bh
 1026eeb:	aas    
 1026eec:	aas    
 1026eed:	adc    bh,bh
 1026eef:	scas   al,BYTE PTR es:[edi]
 1026ef0:	jmp    FWORD PTR [edi-0x51505101]
 1026ef6:	scas   eax,DWORD PTR es:[edi]
 1026ef7:	scas   al,BYTE PTR es:[edi]
 1026ef8:	scas   al,BYTE PTR es:[edi]
 1026ef9:	scas   al,BYTE PTR es:[edi]
 1026efa:	scas   al,BYTE PTR es:[edi]
 1026efb:	stos   DWORD PTR es:[edi],eax
 1026efc:	stos   DWORD PTR es:[edi],eax
 1026efd:	stos   DWORD PTR es:[edi],eax
 1026efe:	stos   DWORD PTR es:[edi],eax
 1026eff:	stos   DWORD PTR es:[edi],eax
 1026f00:	test   eax,0x9ba8a8a8
 1026f05:	sbb    DWORD PTR [eax],eax
 1026f07:	add    BYTE PTR [eax],al
 1026f09:	add    BYTE PTR [edi],bh
 1026f0b:	jge    0x1026f0c
 1026f0d:	inc    ebx
 1026f0e:	jmp    FWORD PTR [esi-0x505101]
 1026f14:	scas   al,BYTE PTR es:[edi]
 1026f15:	jmp    FWORD PTR [esi-0x54515152]
 1026f1b:	scas   eax,DWORD PTR es:[edi]
 1026f1c:	stos   DWORD PTR es:[edi],eax
 1026f1d:	stos   DWORD PTR es:[edi],eax
 1026f1e:	stos   DWORD PTR es:[edi],eax
 1026f1f:	stos   DWORD PTR es:[edi],eax
 1026f20:	stos   DWORD PTR es:[edi],eax
 1026f21:	test   eax,0x1aa8a8a8
 1026f26:	add    BYTE PTR [eax],al
 1026f28:	add    BYTE PTR [eax],al
 1026f2a:	add    BYTE PTR [eax],al
 1026f2c:	pusha  
 1026f2d:	(bad)  
 1026f2e:	(bad)  
 1026f2f:	jmp    FWORD PTR [esi-0x50505101]
 1026f35:	scas   al,BYTE PTR es:[edi]
 1026f36:	scas   al,BYTE PTR es:[edi]
 1026f37:	scas   al,BYTE PTR es:[edi]
 1026f38:	scas   al,BYTE PTR es:[edi]
 1026f39:	scas   al,BYTE PTR es:[edi]
 1026f3a:	scas   al,BYTE PTR es:[edi]
 1026f3b:	scas   al,BYTE PTR es:[edi]
 1026f3c:	scas   al,BYTE PTR es:[edi]
 1026f3d:	inc    edx
 1026f3e:	sbb    al,0x1b
 1026f40:	sbb    dl,BYTE PTR [edi]
 1026f42:	adc    ecx,DWORD PTR [edi]
 1026f44:	or     eax,DWORD PTR ds:0x0
 1026f4a:	add    BYTE PTR [eax],al
 1026f4c:	pusha  
 1026f4d:	jmp    FWORD PTR [edi-0x510001]
 1026f53:	jmp    FWORD PTR [esi-0x51005101]
 1026f59:	scas   al,BYTE PTR es:[edi]
 1026f5a:	scas   al,BYTE PTR es:[edi]
 1026f5b:	scas   al,BYTE PTR es:[edi]
 1026f5c:	stos   DWORD PTR es:[edi],eax
 1026f5d:	dec    eax
 1026f5e:	stos   DWORD PTR es:[edi],eax
 1026f5f:	test   al,0xa5
 1026f61:	fwait
 1026f62:	xchg   esp,eax
 1026f63:	inc    esp
 1026f64:	sbb    eax,0x1a
 1026f69:	add    BYTE PTR [edi],bh
 1026f6b:	aas    
 1026f6c:	aas    
 1026f6d:	adc    bh,bh
 1026f6f:	scas   eax,DWORD PTR es:[edi]
 1026f70:	(bad)  
 1026f71:	jmp    FWORD PTR [esi-0x505101]
 1026f77:	scas   al,BYTE PTR es:[edi]
 1026f78:	scas   al,BYTE PTR es:[edi]
 1026f79:	scas   al,BYTE PTR es:[edi]
 1026f7a:	scas   al,BYTE PTR es:[edi]
 1026f7b:	scas   al,BYTE PTR es:[edi]
 1026f7c:	scas   al,BYTE PTR es:[edi]
 1026f7d:	dec    eax
 1026f7e:	scas   al,BYTE PTR es:[edi]
 1026f7f:	lods   eax,DWORD PTR ds:[esi]
 1026f80:	lods   eax,DWORD PTR ds:[esi]
 1026f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1026f82:	dec    eax
 1026f83:	push   ds
 1026f84:	stos   DWORD PTR es:[edi],eax
 1026f85:	sbb    al,BYTE PTR [eax]
 1026f87:	add    BYTE PTR [eax],al
 1026f89:	add    BYTE PTR [edi],bh
 1026f8b:	jge    0x1026f8c
 1026f8d:	inc    ebx
 1026f8e:	(bad)  
 1026f8f:	jmp    FWORD PTR [edi-0x510001]
 1026f95:	scas   al,BYTE PTR es:[edi]
 1026f96:	scas   al,BYTE PTR es:[edi]
 1026f97:	jmp    FWORD PTR [esi-0x51515151]
 1026f9d:	pop    edx
 1026f9e:	jmp    FWORD PTR [ebp-0x54bfa553]
 1026fa4:	stos   DWORD PTR es:[edi],eax
 1026fa5:	sbb    eax,DWORD PTR [eax]
 1026fa7:	add    BYTE PTR [eax],al
 1026fa9:	add    BYTE PTR [eax],al
 1026fab:	add    BYTE PTR [eax-0x1],ah
 1026fae:	(bad)  
 1026faf:	(bad)  
 1026fb0:	jmp    FWORD PTR [edi-0x510001]
 1026fb6:	scas   al,BYTE PTR es:[edi]
 1026fb7:	jmp    FWORD PTR [esi-0x51515101]
 1026fbd:	pop    ebp
 1026fbe:	jmp    FWORD PTR [edi-0x5456bd9c]
 1026fc4:	call   FWORD PTR [ecx]
 1026fc6:	add    BYTE PTR [eax],al
 1026fc8:	add    BYTE PTR [eax],al
 1026fca:	add    BYTE PTR [eax],al
 1026fcc:	imul   edi,edi,0xffffffff
 1026fcf:	(bad)  
 1026fd0:	(bad)  
 1026fd1:	jmp    FWORD PTR [edi-0x510001]
 1026fd7:	scas   al,BYTE PTR es:[edi]
 1026fd8:	jmp    FWORD PTR [esi+0x5faeffae]
 1026fde:	jmp    FWORD PTR [edx+0x45]
 1026fe1:	test   eax,0x19ffafab
 1026fe6:	add    BYTE PTR [eax],al
 1026fe8:	add    BYTE PTR [eax],al
 1026fea:	aas    
 1026feb:	aas    
 1026fec:	aas    
 1026fed:	adc    bh,bh
 1026fef:	jmp    FWORD PTR [edi-0x4e000001]
 1026ff5:	jmp    FWORD PTR [esi-0x51005101]
 1026ffb:	scas   al,BYTE PTR es:[edi]
 1026ffc:	scas   al,BYTE PTR es:[edi]
 1026ffd:	data16 jg 0x1027048
 1027000:	test   eax,0xafffafab
 1027005:	sbb    al,BYTE PTR [eax]
 1027007:	add    BYTE PTR [eax],al
 1027009:	add    BYTE PTR [edi],bh
 102700b:	jge    0x102700c
 102700d:	inc    ebx
 102700e:	(bad)  
 102700f:	(bad)  
 1027010:	(bad)  
 1027011:	(bad)  
 1027012:	(bad)  
 1027013:	jmp    FWORD PTR [edi-0x510001]
 1027019:	scas   al,BYTE PTR es:[edi]
 102701a:	jmp    FWORD PTR [esi-0x57a19f01]
 1027020:	stos   DWORD PTR es:[edi],eax
 1027021:	scas   al,BYTE PTR es:[edi]
 1027022:	jmp    FWORD PTR [esi+0x1aff]
 1027028:	add    BYTE PTR [eax],al
 102702a:	add    BYTE PTR [eax],al
 102702c:	arpl   WORD PTR [esi+0x5e],bx
 102702f:	pop    esi
 1027030:	pop    esi
 1027031:	pop    edx
 1027032:	pop    edx
 1027033:	pop    edx
 1027034:	pop    edx
 1027035:	dec    eax
 1027036:	dec    eax
 1027037:	dec    eax
 1027038:	inc    esi
 1027039:	inc    esi
 102703a:	inc    ebp
 102703b:	inc    ebp
 102703c:	inc    edx
 102703d:	pop    edx
 102703e:	dec    eax
 102703f:	dec    eax
 1027040:	inc    esi
 1027041:	inc    esi
 1027042:	inc    ebp
 1027043:	inc    ebp
 1027044:	inc    edx
 1027045:	sbb    al,BYTE PTR [eax]
 1027047:	add    al,dh
 1027049:	add    BYTE PTR [eax],al
 102704b:	add    eax,eax
 102704d:	add    BYTE PTR [eax],al
 102704f:	add    eax,eax
 1027051:	add    BYTE PTR [eax],al
 1027053:	add    esi,eax
 1027055:	add    BYTE PTR [eax],al
 1027057:	add    esi,eax
 1027059:	add    BYTE PTR [eax],al
 102705b:	add    eax,eax
 102705d:	add    BYTE PTR [eax],al
 102705f:	add    eax,eax
 1027061:	add    BYTE PTR [eax],al
 1027063:	add    esi,eax
 1027065:	add    BYTE PTR [eax],al
 1027067:	add    esi,eax
 1027069:	add    BYTE PTR [eax],al
 102706b:	add    eax,eax
 102706d:	add    BYTE PTR [eax],al
 102706f:	add    eax,eax
 1027071:	add    BYTE PTR [eax],al
 1027073:	add    esi,eax
 1027075:	add    BYTE PTR [eax],al
 1027077:	add    esi,eax
 1027079:	add    BYTE PTR [eax],al
 102707b:	add    eax,eax
 102707d:	add    BYTE PTR [eax],al
 102707f:	add    eax,eax
 1027081:	add    BYTE PTR [eax],al
 1027083:	add    esi,eax
 1027085:	add    BYTE PTR [eax],al
 1027087:	add    esi,eax
 1027089:	add    BYTE PTR [eax],al
 102708b:	add    eax,eax
 102708d:	add    BYTE PTR [eax],al
 102708f:	add    eax,eax
 1027091:	add    BYTE PTR [eax],al
 1027093:	add    esi,eax
 1027095:	add    BYTE PTR [eax],al
 1027097:	add    esi,eax
 1027099:	add    BYTE PTR [eax],al
 102709b:	add    eax,eax
 102709d:	add    BYTE PTR [eax],al
 102709f:	add    eax,eax
 10270a1:	add    BYTE PTR [eax],al
 10270a3:	add    esi,eax
 10270a5:	add    BYTE PTR [eax],al
 10270a7:	add    esi,eax
 10270a9:	add    BYTE PTR [eax],al
 10270ab:	add    eax,eax
 10270ad:	add    BYTE PTR [eax],al
 10270af:	add    eax,eax
 10270b1:	add    BYTE PTR [eax],al
 10270b3:	add    esi,eax
 10270b5:	add    BYTE PTR [eax],al
 10270b7:	add    esi,eax
 10270b9:	add    BYTE PTR [eax],al
 10270bb:	add    eax,eax
 10270bd:	add    BYTE PTR [eax],al
 10270bf:	add    eax,eax
 10270c1:	add    BYTE PTR [eax],al
 10270c3:	add    esi,eax
 10270c5:	add    BYTE PTR [eax],al
 10270c7:	add    ebp,DWORD PTR [eax]
 10270c9:	add    BYTE PTR [eax],al
 10270cb:	add    BYTE PTR [eax],dl
 10270cd:	add    BYTE PTR [eax],al
 10270cf:	add    BYTE PTR [eax],ah
 10270d1:	add    BYTE PTR [eax],al
 10270d3:	add    BYTE PTR [ecx],al
 10270d5:	add    BYTE PTR [eax],cl
 10270d7:	add    BYTE PTR [eax],al
 10270d9:	add    BYTE PTR [eax],al
 10270db:	add    BYTE PTR [eax],al
 10270dd:	add    DWORD PTR [eax],eax
	...
 10270e7:	add    BYTE PTR [eax],al
 10270e9:	add    DWORD PTR [eax],eax
 10270eb:	add    BYTE PTR [eax],al
 10270ed:	add    DWORD PTR [eax],eax
 10270ef:	add    BYTE PTR [eax],al
 10270f1:	add    BYTE PTR [eax],al
 10270f3:	add    BYTE PTR [eax+eiz*1],bl
 10270f6:	sbb    al,0x0
 10270f8:	and    BYTE PTR ds:0x24260020,ah
 10270fe:	and    eax,DWORD PTR [eax]
 1027100:	pusha  
 1027101:	dec    eax
 1027102:	xor    BYTE PTR [eax],al
 1027104:	fs dec edx
 1027106:	add    BYTE PTR ss:[eax+0x4e],ch
 102710a:	cmp    al,BYTE PTR [eax]
 102710c:	ins    DWORD PTR es:[edi],dx
 102710d:	push   esi
 102710e:	aas    
 102710f:	add    BYTE PTR [esi],ch
 1027111:	cmp    eax,DWORD PTR [edx+0x0]
 1027114:	ss dec edx
 1027116:	pusha  
 1027117:	add    BYTE PTR [edx],ch
 1027119:	push   eax
 102711a:	ins    BYTE PTR es:[edi],dx
 102711b:	add    BYTE PTR [ecx+ebx*2],ch
 102711e:	je     0x1027120
 1027120:	jae    0x102717a
 1027122:	inc    esp
 1027123:	add    BYTE PTR [eax+ebx*2+0x44],dh
 1027127:	add    BYTE PTR [eax+eiz*2+0x4c],bh
 102712b:	add    BYTE PTR [ebp+0x58],al
 102712e:	arpl   WORD PTR [eax],ax
 1027130:	push   esp
 1027131:	bound  ebp,QWORD PTR [ebx+0x0]
 1027134:	data16 data16 add BYTE PTR [bx+si+0x67],ch
 102713a:	add    BYTE PTR [di+0x76],dh
 102713e:	jne    0x1027140
 1027140:	js     0x10271ba
 1027142:	js     0x1027144
 1027144:	jg     0x10271c4
 1027146:	jge    0x1027148
 1027148:	sub    DWORD PTR [ebx+0x57],0x70829700
 102714f:	add    BYTE PTR [eax+0x1c007689],ah
 1027155:	mov    es,WORD PTR [bx+si]
 1027158:	cmp    BYTE PTR [ebp+ebx*4+0x0],bh
 102715c:	sub    al,0x92
 102715e:	mov    dh,0x0
 1027160:	jo     0x10270e5
 1027162:	mov    al,BYTE PTR [eax]
 1027164:	push   ebp
 1027165:	nop
 1027166:	lods   al,BYTE PTR ds:[esi]
 1027167:	add    BYTE PTR [edx-0x6a],bl
 102716a:	scas   eax,DWORD PTR es:[edi]
 102716b:	add    BYTE PTR [edx-0x6f],dh
 102716e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102716f:	add    BYTE PTR [ebx-0x60],bl
 1027172:	mov    bh,0x0
 1027174:	push   0x3500bead
 1027179:	lahf   
 102717a:	lds    eax,FWORD PTR [eax]
 102717c:	inc    edx
 102717d:	cwde   
 102717e:	rol    BYTE PTR [eax],0x4a
 1027181:	test   al,0xcf
 1027183:	add    BYTE PTR [esi-0x4e],bl
 1027186:	into   
 1027187:	add    BYTE PTR [ebx-0x56],cl
 102718a:	rol    DWORD PTR [eax],1
 102718c:	push   0x2300d5ba
 1027191:	(bad)  
 1027192:	inc    DWORD PTR [eax]
 1027194:	cmp    al,0xd0
 1027196:	inc    DWORD PTR [eax]
 1027198:	cmp    ebx,eax
 102719a:	inc    DWORD PTR [eax]
 102719c:	push   ebp
 102719d:	fcos   
 102719f:	add    BYTE PTR [ebx-0x20],ch
 10271a2:	sti    
 10271a3:	add    BYTE PTR [eax-0x1b],bh
 10271a6:	inc    DWORD PTR [eax]
 10271a8:	jle    0x102718e
 10271aa:	inc    DWORD PTR [eax]
 10271ac:	add    BYTE PTR [eax-0x7574ff80],0x8a
 10271b3:	add    BYTE PTR [edi-0x44ff695d],dh
 10271b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10271ba:	xchg   esi,eax
 10271bb:	add    BYTE PTR [ebx-0x43ff675a],bh
 10271c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10271c2:	cdq    
 10271c3:	add    BYTE PTR [ebp-0x41ff6558],bh
 10271c9:	stos   BYTE PTR es:[edi],al
 10271ca:	pushf  
 10271cb:	add    BYTE PTR [esp+eiz*4-0x4b49ff5d],ah
 10271d2:	mov    bl,0x0
 10271d4:	shr    BYTE PTR [ebx-0x523eff63],0x9f
 10271db:	add    ah,al
 10271dd:	mov    al,0xa2
 10271df:	add    dh,al
 10271e1:	mov    bl,0xa5
 10271e3:	add    cl,cl
 10271e5:	mov    bl,0xa4
 10271e7:	add    cl,cl
 10271e9:	mov    ch,0xa7
 10271eb:	add    cl,cl
 10271ed:	mov    dh,0xa8
 10271ef:	add    bl,cl
 10271f1:	mov    eax,0xb9cc00aa
 10271f6:	stos   DWORD PTR es:[edi],eax
 10271f7:	add    dh,cl
 10271f9:	mov    ebx,0xbccf00ac
 10271fe:	scas   al,BYTE PTR es:[edi]
 10271ff:	add    al,dl
 1027201:	mov    ebp,0xbed000af
 1027206:	mov    al,0x0
 1027208:	rol    al,cl
 102720a:	mov    dl,0x0
 102720c:	ffree  st(6)
 102720e:	mov    bh,0x0
 1027210:	xlat   BYTE PTR ds:[ebx]
 1027211:	(bad)  
 1027212:	mov    edx,0xa7c6f700
 1027217:	add    al,bh
 1027219:	les    esp,FWORD PTR [eax+eax*1+0xaac8f7]
 1027220:	test   bl,0xb0
 1027223:	add    ah,dh
 1027225:	int    0xb5
 1027227:	add    bl,dh
 1027229:	sar    DWORD PTR [edx-0x452f0c00],1
 102722f:	add    BYTE PTR [eax-0x40ff3b4d],dl
 1027235:	(bad)  
 1027236:	inc    DWORD PTR [eax]
 1027238:	jecxz  0x102720d
 102723a:	enter  0xe100,0xd5
 102723e:	int3   
 102723f:	add    dl,dh
 1027241:	aam    0xc0
 1027243:	add    cl,dh
 1027245:	xlat   BYTE PTR ds:[ebx]
 1027246:	lds    eax,FWORD PTR [eax]
 1027248:	lock fxch st(2)
 102724b:	add    dl,ch
 102724d:	fcmovnbe st,st(2)
 102724f:	add    al,ah
 1027251:	fcmovu st,st(1)
 1027253:	add    dh,cl
 1027255:	in     eax,0xee
 1027257:	add    al,al
 1027259:	(bad)  
 102725a:	inc    DWORD PTR [eax]
 102725c:	retf   
 102725d:	std    
 102725e:	inc    DWORD PTR [eax]
 1027260:	out    0xe1,al
 1027262:	loopne 0x1027264
 1027264:	lock jmp 0xf3ff7350
 102726a:	in     eax,dx
 102726b:	add    dh,bh
 102726d:	hlt    
 102726e:	out    dx,al
 102726f:	add    cl,ah
 1027271:	(bad)  
 1027272:	inc    DWORD PTR [eax]
 1027274:	std    
 1027275:	cmc    
 1027276:	icebp  
 1027277:	add    ah,bh
 1027279:	div    esp
 102727b:	add    dh,bh
 102727d:	clc    
 102727e:	cmc    
 102727f:	add    dh,bh
 1027281:	cli    
 1027282:	clc    
 1027283:	add    dh,bh
 1027285:	cld    
 1027286:	cli    
 1027287:	add    dh,bh
 1027289:	(bad)  
 102728a:	inc    BYTE PTR [eax]
	...
 10274ec:	(bad)  
 10274ed:	(bad)  
 10274ee:	inc    DWORD PTR [eax]
 10274f0:	add    BYTE PTR [edx],dl
 10274f2:	aaa    
 10274f3:	xor    DWORD PTR [edi],edx
 10274f5:	push   ss
 10274f6:	pop    es
 10274f7:	add    al,0x4
 10274f9:	add    al,0x4
 10274fb:	add    al,0x4
 10274fd:	add    al,0x4
 10274ff:	add    al,0x0
 1027501:	xor    BYTE PTR ds:0x55566434,dl
 1027507:	push   ebp
 1027508:	dec    edi
 1027509:	dec    ebp
 102750a:	dec    edi
 102750b:	dec    ebp
 102750c:	dec    ebp
 102750d:	dec    ebx
 102750e:	dec    edx
 102750f:	add    al,0x0
 1027511:	add    esp,DWORD PTR [ecx+edi*1+0x64]
 1027515:	arpl   WORD PTR [edi+ebx*1],bx
 1027518:	pop    ebp
 1027519:	pop    edi
 102751a:	popa   
 102751b:	pop    edi
 102751c:	pop    edi
 102751d:	pop    edi
 102751e:	dec    ecx
 102751f:	add    al,0x0
 1027521:	xor    BYTE PTR [edi],ch
 1027523:	cmp    DWORD PTR [ebx+eiz*2+0x1e],esp
 1027527:	sub    bl,BYTE PTR ds:0x5f616158
 102752d:	pop    edi
 102752e:	dec    ebp
 102752f:	add    al,0x0
 1027531:	add    DWORD PTR [edx+edi*1+0x64],esp
 1027535:	fs push eax
 1027537:	cs sbb DWORD PTR cs:[ecx+eiz*2+0x5f],ebx
 102753d:	pop    edi
 102753e:	dec    ebx
 102753f:	add    al,0x0
 1027541:	xor    BYTE PTR [edi],ch
 1027543:	cmp    DWORD PTR [eax+edx*1+0xf],esp
 1027547:	or     BYTE PTR [ebx+0x2b],bl
 102754a:	or     bl,BYTE PTR [eax+0x5f]
 102754d:	pop    edi
 102754e:	dec    ecx
 102754f:	add    al,0x0
 1027551:	add    DWORD PTR [edx+edi*1+0x64],esp
 1027555:	and    BYTE PTR [ecx+0x51],dl
 1027558:	pop    edx
 1027559:	cs sub al,0x9
 102755c:	pop    edi
 102755d:	pop    edi
 102755e:	dec    ebp
 102755f:	add    al,0x0
 1027561:	xor    BYTE PTR [edi],ch
 1027563:	cmp    ah,BYTE PTR [ecx+ebx*2+0x25]
 1027567:	pop    edx
 1027568:	sub    DWORD PTR [edx],esp
 102756a:	cmp    BYTE PTR [ecx+0x61],ah
 102756d:	pop    edi
 102756e:	dec    ebx
 102756f:	add    al,0x0
 1027571:	add    DWORD PTR [esp+edi*1+0x64],esp
 1027575:	and    DWORD PTR fs:[eax+0x5a],esp
 1027579:	sub    BYTE PTR [ebx],bl
 102757b:	cmp    BYTE PTR [ecx+0x61],ah
 102757e:	dec    ebp
 102757f:	add    al,0x0
 1027581:	adc    edx,DWORD PTR ds:0x6464643c
 1027587:	daa    
 1027588:	es and al,0x23
 102758b:	sbb    cl,BYTE PTR [ebx]
 102758d:	popa   
 102758e:	dec    edi
 102758f:	add    al,0x0
 1027591:	add    DWORD PTR [eax+eax*2+0x64],esp
 1027595:	fs fs fs fs fs fs fs popa 
 102759d:	push   edi
 102759e:	push   edx
 102759f:	add    al,0x0
 10275a1:	adc    ebp,DWORD PTR [edi]
 10275a3:	inc    eax
 10275a4:	fs fs fs fs fs fs fs fs xor al,0xc
 10275ae:	push   cs
 10275af:	add    eax,0x45640300
 10275b4:	fs fs fs fs fs fs fs fs xor al,0x48
 10275be:	or     al,0x18
 10275c0:	add    BYTE PTR [ecx],dl
 10275c2:	das    
 10275c3:	inc    ebp
 10275c4:	fs fs fs fs fs fs fs cmp al,BYTE PTR fs:[esi]
 10275ce:	inc    edi
 10275cf:	push   ss
 10275d0:	add    BYTE PTR [edx],al
 10275d2:	fs inc esi
 10275d4:	fs fs fs fs fs fs fs fs ds push edx
 10275de:	fs pop ss
 10275e0:	add    BYTE PTR [eax],al
 10275e2:	das    
 10275e3:	inc    esi
 10275e4:	inc    esi
 10275e5:	inc    ebp
 10275e6:	inc    eax
 10275e7:	inc    eax
 10275e8:	aas    
 10275e9:	cmp    al,0x3f
 10275eb:	cmp    al,0x3a
 10275ed:	cmp    DWORD PTR [ecx],edi
 10275ef:	xor    al,0x80
 10275f1:	add    BYTE PTR [eax],al
 10275f3:	add    BYTE PTR [eax-0x80000000],al
 10275f9:	add    BYTE PTR [eax],al
 10275fb:	add    BYTE PTR [eax-0x80000000],al
 1027601:	add    BYTE PTR [eax],al
 1027603:	add    BYTE PTR [eax-0x80000000],al
 1027609:	add    BYTE PTR [eax],al
 102760b:	add    BYTE PTR [eax-0x80000000],al
 1027611:	add    BYTE PTR [eax],al
 1027613:	add    BYTE PTR [eax-0x80000000],al
 1027619:	add    BYTE PTR [eax],al
 102761b:	add    BYTE PTR [eax-0x80000000],al
 1027621:	add    BYTE PTR [eax],al
 1027623:	add    BYTE PTR [eax-0x80000000],al
 1027629:	add    BYTE PTR [eax],al
 102762b:	add    al,al
 102762d:	add    BYTE PTR [eax],al
 102762f:	add    BYTE PTR [ecx+0xd474e50],cl
 1027635:	or     bl,BYTE PTR [edx]
 1027637:	or     al,BYTE PTR [eax]
 1027639:	add    BYTE PTR [eax],al
 102763b:	or     eax,0x52444849
 1027640:	add    BYTE PTR [eax],al
 1027642:	add    DWORD PTR [eax],eax
 1027644:	add    BYTE PTR [eax],al
 1027646:	add    DWORD PTR [eax],eax
 1027648:	or     BYTE PTR [esi],al
 102764a:	add    BYTE PTR [eax],al
 102764c:	add    BYTE PTR [edx+esi*2-0x58],bl
 1027650:	data16 add BYTE PTR [eax],al
 1027653:	add    BYTE PTR [ecx],cl
 1027655:	jo     0x102769f
 1027657:	pop    ecx
 1027658:	jae    0x102765a
 102765a:	add    BYTE PTR [esi],cl
 102765c:	ret    
 102765d:	add    BYTE PTR [eax],al
 102765f:	push   cs
 1027660:	ret    
 1027661:	add    edi,eax
 1027663:	outs   dx,DWORD PTR ds:[esi]
 1027664:	test   al,0x64
 1027666:	add    BYTE PTR [eax],al
 1027668:	and    BYTE PTR [eax],al
 102766a:	dec    ecx
 102766b:	inc    esp
 102766c:	inc    ecx
 102766d:	push   esp
 102766e:	js     0x102760c
 1027670:	in     al,dx
 1027671:	mov    ebp,0x47649c79
 1027676:	jno    0x102769f
 1027678:	dec    ch
 102767a:	push   edi
 102767b:	aad    0xdd
 102767d:	aad    0xd5
 102767f:	pop    ebp
 1027680:	cmp    eax,0xcce746b7
 1027685:	call   0x18293a2
 102768a:	jmp    0x10276d2
 102768c:	and    eax,DWORD PTR [eax+0x5c]
 102768f:	(bad)  
 1027690:	pop    esi
 1027691:	sbb    esp,DWORD PTR [ebx+0x7e]
 1027694:	fcomp  DWORD PTR ss:[esi+0x73]
 1027698:	std    
 1027699:	mov    esp,0x6035966
 102769e:	ins    BYTE PTR es:[edi],dx
 102769f:	or     al,0xe2
 10276a1:	mov    al,0xb9
 10276a3:	ins    BYTE PTR es:[edi],dx
 10276a4:	and    al,0x24
 10276a6:	test   BYTE PTR [ecx],al
 10276a8:	arpl   WORD PTR [esi-0x1d207e71],bp
 10276ae:	(bad)
 10276b1:	(bad)  
 10276b2:	out    0xf2,al
 10276b4:	add    edx,eax
 10276b6:	pushf  
 10276b7:	add    ah,BYTE PTR [ecx]
 10276b9:	xor    al,0x12
 10276bb:	or     edx,DWORD PTR ss:[edx]
 10276be:	cmp    dl,BYTE PTR [ecx-0x65172dcc]
 10276c4:	rcr    DWORD PTR [edx+edx*8],1
 10276c7:	(bad)  
 10276c9:	std    
 10276ca:	loop   0x10276c3
 10276cc:	inc    edi
 10276cd:	fs inc si
 10276d0:	inc    esp
 10276d1:	out    0xab,al
 10276d3:	sbb    ecx,esp
 10276d5:	jmp    0x91aaf104
 10276da:	jp     0x10276c6
 10276dc:	sbb    eax,0xc6664479
 10276e1:	aaa    
 10276e2:	and    dh,dl
 10276e4:	jl     0x10276a6
 10276e6:	mov    BYTE PTR [esi+0x34],al
 10276e9:	mov    ds:0x44688d11,al
 10276ee:	and    ebx,DWORD PTR [edx]
 10276f0:	ror    DWORD PTR [eax+0x11a23446],1
 10276f6:	lea    ebp,[eax+0x44]
 10276f9:	and    ebx,DWORD PTR [edx]
 10276fb:	ror    DWORD PTR [eax+0x11a23446],1
 1027701:	lea    ebp,[eax+0x44]
 1027704:	aas    
 1027705:	or     eax,0xfabfaef4
 102770a:	inc    edx
 102770b:	imul   ebx,eax,0x3c
 102770e:	mov    WORD PTR [eax+0x44],gs
 1027711:	and    ebx,DWORD PTR [edx]
 1027713:	shl    DWORD PTR [ecx+0x43],1
 1027716:	outs   dx,BYTE PTR ds:[esi]
 1027717:	sbb    BYTE PTR [ecx+0x7ccfcffe],bl
 102771d:	mov    ecx,DWORD PTR [esi]
 102771f:	imul   eax,DWORD PTR [edx+0x1f85c004],0x4be40802
 1027729:	inc    esi
 102772a:	xor    cl,BYTE PTR [eax]
 102772c:	test   DWORD PTR [eax],eax
 102772e:	push   cs
 102772f:	and    BYTE PTR [edx],al
 1027731:	pushf  
 1027732:	add    edx,DWORD PTR [ecx]
 1027734:	rol    DWORD PTR [ebp+0x231324c8],0x93
 102773b:	je     0x10276f5
 102773d:	daa    
 102773e:	fist   WORD PTR [bx+di+0xa]
 1027742:	add    al,0xc4
 1027744:	cmp    al,0x29
 1027746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1027747:	out    dx,eax
 1027748:	inc    eax
 1027749:	and    BYTE PTR [ebx-0x3edf406a],dl
 102774f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
 1027751:	loop   0x1027776
 1027753:	xchg   ebx,eax
 1027754:	lods   eax,DWORD PTR ds:[esi]
 1027755:	sbb    DWORD PTR [edx],esp
 1027757:	cs pop esi
 1027759:	or     al,0x49
 102775b:	mov    dl,0x78
 102775d:	adc    al,0xde
 102775f:	cmp    bl,BYTE PTR [ebx]
 1027761:	xchg   edi,eax
 1027762:	out    dx,eax
 1027763:	inc    ebp
 1027764:	in     eax,0x8
 1027766:	shr    BYTE PTR cs:[ebx-0x7d55a1c4],cl
 102776d:	xchg   esp,eax
 102776e:	lahf   
 102776f:	enter  0x5550,0x93
 1027773:	out    0x85,eax
 1027775:	inc    eax
 1027776:	into   
 1027777:	lock sbb dl,bl
 102777a:	push   esi
 102777b:	or     eax,0xf22d6b23
 1027780:	out    0xe0,eax
 1027782:	inc    edx
 1027783:	popf   
 1027784:	and    DWORD PTR [ecx+ecx*2+0x79d64aca],esi
 102778b:	mov    ebx,0xb9d98e35
 1027790:	std    
 1027791:	ds pop ds
 1027793:	and    al,ch
 1027795:	and    ecx,DWORD PTR [eax-0x5a]
 1027798:	int3   
 1027799:	in     eax,0xd7
 102779b:	inc    edx
 102779c:	inc    eax
 102779d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102779e:	jb     0x1027785
 10277a0:	cmp    eax,0x7b99b2c9
 10277a5:	std    
 10277a6:	into   
 10277a7:	sub    DWORD PTR [eax-0x268c537a],0x6a93ccce
 10277b1:	and    edx,DWORD PTR [ecx+0x117c0b97]
 10277b7:	dec    eax
 10277b8:	mov    ebp,DWORD PTR [eax]
 10277ba:	test   eax,0x8bd2e0d2
 10277bf:	(bad)  
 10277c0:	fild   DWORD PTR [eax-0x50]
 10277c3:	fstp   DWORD PTR [esi]
 10277c5:	inc    esp
 10277c6:	es and eax,0xaeafd17a
 10277cc:	sbb    edx,DWORD PTR [esi-0x2a]
 10277cf:	and    ebx,DWORD PTR [edx-0x60]
 10277d2:	je     0x10277cd
 10277d4:	inc    edi
 10277d5:	dec    DWORD PTR [ecx]
 10277d7:	lods   eax,DWORD PTR ds:[esi]
 10277d8:	push   0xc
 10277da:	iret   
 10277db:	js     0x10277cf
 10277dd:	fstp   DWORD PTR [eax-0x4f]
 10277e0:	je     0x10277f3
 10277e2:	pushf  
 10277e3:	add    ebp,DWORD PTR [edx]
 10277e5:	pop    es
 10277e6:	mov    eax,0xe72a1ca
 10277eb:	push   cs
 10277ec:	jmp    0xc2c2b1cf
 10277f1:	mov    eax,ds:0x3afc2aa
 10277f6:	pushf  
 10277f7:	or     ecx,edi
 10277f9:	ret    
 10277fa:	cmp    edx,DWORD PTR [edi]
 10277fc:	lahf   
 10277fd:	xchg   ecx,eax
 10277fe:	inc    DWORD PTR [ebp-0x578007bd]
 1027804:	hlt    
 1027805:	cli    
 1027806:	retf   
 1027807:	ds ss mov al,0xbc
 102780b:	stos   BYTE PTR es:[edi],al
 102780c:	and    ebp,0x1d11a234
 1027812:	add    bh,BYTE PTR [edx-0x13]
 1027815:	dec    ebx
 1027816:	sahf   
 1027817:	test   DWORD PTR [edi],ebp
 1027819:	jg     0x102787e
 102781b:	cmp    eax,0xed96f36
 1027820:	and    al,BYTE PTR [edx+0x4d]
 1027823:	inc    eax
 1027824:	dec    ebp
 1027825:	and    al,0xfe
 1027827:	add    BYTE PTR [edx-0x101fe03d],ch
 102782d:	shl    ecx,0xbc
 1027830:	mov    eax,ds:0x5adebfd5
 1027835:	push   ebx
 1027836:	mov    esp,0xd0fcd60e
 102783b:	cli    
 102783c:	test   al,0x8f
 102783e:	mov    BYTE PTR [edx],dh
 1027840:	das    
 1027841:	jo     0x1027861
 1027843:	imul   esp,DWORD PTR [eax+eax*1-0x171f4bba],0x16792fb5
 102784e:	scas   al,BYTE PTR es:[edi]
 102784f:	clc    
 1027850:	(bad)  
 1027851:	jp     0x10278bf
 1027853:	fidiv  DWORD PTR [edx-0x57fcabe3]
 1027859:	add    DWORD PTR [edx+0x6ba8229],ebp
 102785f:	jns    0x1027831
 1027861:	xlat   BYTE PTR ds:[ebx]
 1027862:	add    al,0xaa
 1027864:	or     DWORD PTR [ebp-0x63],esi
 1027867:	add    BYTE PTR [esi+0x13],bl
 102786a:	lds    ebp,FWORD PTR [esi+0x5a]
 102786d:	add    al,0x3f
 102786f:	adc    BYTE PTR [ebx-0x581113ec],bh
 1027875:	out    dx,al
 1027876:	aad    0x30
 1027878:	push   0x148ef970
 102787d:	ror    BYTE PTR [eax-0x942dbea],0x25
 1027884:	iret   
 1027885:	ret    0x5f15
 1027888:	pop    edi
 1027889:	(bad)  
 102788a:	dec    ebp
 102788b:	pop    ebx
 102788c:	mov    bh,0x61
 102788e:	cs sbb bh,0x83
 1027892:	mov    edx,0x4fa08e
 1027897:	scas   eax,DWORD PTR es:[edi]
 1027898:	and    esp,eax
 102789a:	mov    ebp,0x82f1e012
 102789f:	sbb    al,BYTE PTR [ecx+0x49]
 10278a2:	push   eax
 10278a3:	jmp    0x1b9c:0x4acd7a7
 10278aa:	mov    cl,BYTE PTR [esi]
 10278ac:	sbb    BYTE PTR [esi+ebx*4+0x43],ah
 10278b0:	sbb    eax,DWORD PTR [ebx]
 10278b2:	cmp    BYTE PTR [eax],bl
 10278b4:	or     eax,0xaeabf5fb
 10278b9:	ret    0xd7b7
 10278bc:	scas   eax,DWORD PTR es:[edi]
 10278bd:	(bad)  
 10278be:	lea    esi,[edi-0x28ac7324]
 10278c4:	scas   al,BYTE PTR es:[edi]
 10278c5:	lds    edi,FWORD PTR [edx+0x53c1cfb3]
 10278cb:	(bad)  
 10278cc:	(bad)  
 10278cd:	(bad)  
 10278ce:	push   cs
 10278cf:	inc    esi
 10278d0:	in     al,0xe9
 10278d2:	jne    0x10278d3
 10278d4:	std    
 10278d5:	push   edi
 10278d6:	jo     0x10278c1
 10278d8:	inc    edi
 10278d9:	xchg   DWORD PTR ds:[edi+0x5e],esp
 10278dd:	js     0x10278ed
 10278df:	xchg   esi,eax
 10278e0:	das    
 10278e1:	pop    ebp
 10278e2:	test   BYTE PTR [edx-0x521e578e],ch
 10278e8:	pop    edx
 10278e9:	sbb    al,0x7c
 10278eb:	add    edi,DWORD PTR [edx+eiz*4]
 10278ee:	sub    eax,DWORD PTR [ecx+eax*8+0x438aa037]
 10278f5:	jo     0x1027918
 10278f7:	or     al,0xf
 10278f9:	fisub  WORD PTR [esi+0xf3df127]
 10278ff:	adc    bl,BYTE PTR [edi]
 1027901:	scas   al,BYTE PTR es:[edi]
 1027902:	je     0x10278cc
 1027904:	adc    al,0xc0
 1027906:	cli    
 1027907:	sbb    ebp,edi
 1027909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102790a:	stos   DWORD PTR es:[edi],eax
 102790b:	mov    edi,0xaaaa337f
 1027910:	test   DWORD PTR [esi+0x7b],esi
 1027913:	or     al,0xad
 1027915:	push   esi
 1027916:	or     edx,DWORD PTR [ebp+0x55]
 1027919:	popa   
 102791a:	jl     0x1027998
 102791c:	sbb    al,0x13
 102791e:	adc    esp,DWORD PTR [ebx+0x18]
 1027921:	pop    ds
 1027922:	pop    ds
 1027923:	ret    
 1027924:	in     al,0x78
 1027926:	or     edx,DWORD PTR [ebx]
 1027928:	jecxz  0x1027997
 102792a:	dec    esp
 102792b:	dec    edi
 102792c:	mov    ah,0x71
 102792e:	rcr    DWORD PTR [ebp+0x5b],cl
 1027931:	xor    esi,ebx
 1027933:	scas   al,BYTE PTR es:[edi]
 1027934:	shr    BYTE PTR [esi+0x57],1
 1027937:	push   0xb3cd54bb
 102793c:	inc    esp
 102793d:	mov    al,ds:0x59bec6ba
 1027942:	ret    0xa38a
 1027945:	dec    edi
 1027946:	rcl    ebx,0x7f
 1027949:	inc    BYTE PTR [esp+ebx*4]
 102794c:	mul    DWORD PTR [ecx+ebx*2+0x6f43e47c]
 1027953:	ret    
 1027954:	or     eax,0x4dd37
 1027959:	and    esp,DWORD PTR ds:0x1748a230
 102795f:	mov    ebp,0x949d9f4
 1027964:	sub    al,0x5b
 1027966:	adc    al,0xc1
 1027968:	iret   
 1027969:	mov    ah,BYTE PTR [eax-0x540be07a]
 102796f:	push   0xffffff87
 1027971:	mov    edx,0x9415422
 1027976:	clc    
 1027977:	jno    0x10279f5
 1027979:	push   ds
 102797a:	mov    DWORD PTR [edi+0x61],esi
 102797d:	push   es
 102797e:	add    bh,BYTE PTR [esi]
 1027980:	jbe    0x1027936
 1027982:	cld    
 1027983:	xchg   esp,eax
 1027984:	xchg   di,ax
 1027986:	xor    BYTE PTR [eax],bh
 1027988:	xor    eax,0xe3a74830
 102798d:	nop
 102798e:	sub    DWORD PTR [eax-0x18120071],eax
 1027994:	jno    0x1027984
 1027996:	mov    ecx,0x7c7c6367
 102799b:	sbb    al,0x63
 102799d:	arpl   WORD PTR [ebx+0x18],sp
 10279a0:	pop    ds
 10279a1:	outs   dx,DWORD PTR ds:[esi]
 10279a2:	arpl   WORD PTR [edx-0x22539ea3],sp
 10279a8:	ret    0x58c4
 10279ab:	or     edx,DWORD PTR [ebx]
 10279ad:	cld    
 10279ae:	cmp    ebx,esi
 10279b0:	(bad)  
 10279b1:	hlt    
 10279b2:	fs sbb ebx,ebp
 10279b5:	mov    DWORD PTR [ecx],esi
 10279b7:	je     0x102797f
 10279b9:	pop    ebx
 10279ba:	bound  esi,QWORD PTR [esi+edx*1]
 10279bd:	imul   esi,DWORD PTR [eax],0xf6dff426
 10279c3:	int    0xce
 10279c5:	popa   
 10279c6:	sti    
 10279c7:	scas   al,BYTE PTR es:[edi]
 10279c8:	std    
 10279c9:	fdiv   DWORD PTR [ecx-0x1e81e085]
 10279cf:	fldcw  WORD PTR [edi]
 10279d1:	(bad)  
 10279d2:	pop    ss
 10279d3:	aas    
 10279d4:	test   DWORD PTR [ecx],0x35fd7b7c
 10279da:	and    eax,DWORD PTR ds:0x654b33f0
 10279e0:	push   0x67d2f45c
 10279e5:	jecxz  0x1027979
 10279e7:	movq   QWORD PTR [esi],mm2
 10279ea:	mov    edi,0xb07394f0
 10279ef:	(bad)  
 10279f0:	fldenv [edx-0x8]
 10279f3:	xor    DWORD PTR [esi+0xf],edi
 10279f6:	fisttp DWORD PTR [edx]
 10279f8:	add    al,0xd4
 10279fa:	push   cs
 10279fb:	mov    ch,0x3
 10279fd:	pop    esp
 10279fe:	or     eax,0xc769f9c0
 1027a03:	dec    edx
 1027a04:	pop    eax
 1027a05:	neg    dl
 1027a07:	dec    esp
 1027a08:	leave  
 1027a09:	cmp    eax,eax
 1027a0b:	xchg   DWORD PTR [edi],eax
 1027a0d:	loopne 0x1027997
 1027a0f:	popa   
 1027a10:	out    dx,eax
 1027a11:	mov    ebx,0x2518304
 1027a16:	or     esi,DWORD PTR [eax+0xc]
 1027a19:	loopne 0x102799c
 1027a1b:	pop    es
 1027a1c:	push   ds
 1027a1d:	shl    dh,0xed
 1027a20:	psraw  mm4,mm1
 1027a23:	xchg   DWORD PTR [edi],ebx
 1027a25:	(bad)  
 1027a26:	mov    ds,WORD PTR ds:0xc763b13b
 1027a2c:	cs ins BYTE PTR es:[edi],dx
 1027a2e:	fbstp  TBYTE PTR [ecx-0x3308c4f1]
 1027a34:	(bad)  
 1027a35:	neg    esi
 1027a37:	pop    ecx
 1027a38:	in     al,dx
 1027a39:	fidivr DWORD PTR [edi]
 1027a3b:	xchg   DWORD PTR [ebp+0x1350e7fb],edi
 1027a41:	popa   
 1027a42:	mov    esp,0xa27742dd
 1027a47:	lea    esi,[ecx-0x129cf48a]
 1027a4d:	or     ch,ch
 1027a4f:	push   esi
 1027a50:	cli    
 1027a51:	sbb    ebp,DWORD PTR [ebx+0x57]
 1027a54:	sbb    BYTE PTR [edi],cl
 1027a56:	retf   0x7262
 1027a59:	jl     0x1027a67
 1027a5b:	popf   
 1027a5c:	mov    cl,0xa
 1027a5e:	inc    esp
 1027a5f:	test   BYTE PTR ds:0xc3f0f,bl
 1027a65:	mov    eax,0xe5b96f1
 1027a6a:	adc    eax,0x605a23cb
 1027a6f:	aam    0xaf
 1027a71:	xbegin 0xacf479fd
 1027a77:	clc    
 1027a78:	xlat   BYTE PTR ds:[ebx]
 1027a79:	scas   eax,DWORD PTR es:[edi]
 1027a7a:	pop    esp
 1027a7b:	lea    ecx,[ebp+0xf]
 1027a7e:	outs   dx,BYTE PTR ds:[esi]
 1027a7f:	dec    ebx
 1027a80:	xor    eax,DWORD PTR [ecx]
 1027a82:	and    al,0x47
 1027a84:	call   ebx
 1027a86:	and    BYTE PTR [ecx],ah
 1027a88:	aas    
 1027a89:	out    0x31,eax
 1027a8b:	add    eax,esi
 1027a8d:	lods   al,BYTE PTR ds:[esi]
 1027a8e:	add    BYTE PTR [ecx+edx*1+0x3c140022],al
 1027a95:	add    DWORD PTR [edx+0x60a6b],edx
 1027a9b:	into   
 1027a9c:	jp     0x1027a9c
 1027a9e:	mov    bl,0x60
 1027aa0:	cmp    ah,BYTE PTR [esi+ebx*1-0x40]
 1027aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1027aa5:	int    0x9b
 1027aa7:	jo     0x1027a80
 1027aa9:	fstp   QWORD PTR [ebx]
 1027aab:	xor    BYTE PTR [ecx],dh
 1027aad:	faddp  st(1),st
 1027aaf:	(bad)  
 1027ab0:	les    eax,FWORD PTR [esp+esi*2-0x3]
 1027ab4:	daa    
 1027ab5:	es es shr cl,1
 1027ab9:	dec    esp
 1027aba:	bound  esp,QWORD PTR [edx-0x5e]
 1027abd:	xor    ecx,0xfffffff1
 1027ac0:	xor    esp,ecx
 1027ac2:	dec    esp
 1027ac3:	dec    ebp
 1027ac4:	pusha  
 1027ac5:	out    dx,eax
 1027ac6:	mov    esi,0x3d39d8fd
 1027acb:	xor    ecx,0xe72a16b1
 1027ad1:	jne    0x1027b3d
 1027ad3:	in     eax,0x78
 1027ad5:	lock lds edx,FWORD PTR [ebx+0x4d]
 1027ad9:	test   BYTE PTR [ebp-0x5],bh
 1027adc:	out    0xb0,eax
 1027ade:	imul   ebx,ebx,0x687a6c6e
 1027ae4:	aaa    
 1027ae5:	fidivr WORD PTR ss:[ebp+0x37]
 1027ae9:	add    al,ah
 1027aeb:	aam    0xb5
 1027aed:	imul   ecx,DWORD PTR [edi],0x15
 1027af0:	retf   
 1027af1:	and    ebx,DWORD PTR [edx+0x60]
 1027af4:	push   esp
 1027af5:	push   ebx
 1027af6:	jg     0x1027b5c
 1027af8:	mov    esp,0xfff65f1
 1027afd:	fdivrp st(1),st
 1027aff:	cmp    DWORD PTR [edi-0x40],0x9ed3e2f
 1027b06:	pop    eax
 1027b07:	mov    ecx,0xdaea317c
 1027b0c:	rcl    DWORD PTR [ebp+0x14],0xba
 1027b10:	add    eax,0x3c77d9c1
 1027b15:	push   ss
 1027b16:	loopne 0x1027a9d
 1027b18:	lods   eax,DWORD PTR ds:[esi]
 1027b19:	inc    edx
 1027b1a:	test   DWORD PTR [ecx],edi
 1027b1c:	adc    BYTE PTR [edx],ch
 1027b1e:	aas    
 1027b1f:	cmp    BYTE PTR [eax+0x156f39da],al
 1027b25:	jns    0x1027b7d
 1027b27:	and    BYTE PTR [eax+0x2],bh
 1027b2a:	adc    eax,0x6009410
 1027b2f:	mov    al,0x56
 1027b31:	pusha  
 1027b32:	jo     0x1027b52
 1027b34:	shl    BYTE PTR [ecx],0x53
 1027b37:	add    bh,cl
 1027b39:	jnp    0x1027b29
 1027b3b:	scas   eax,DWORD PTR es:[edi]
 1027b3c:	loope  0x1027b41
 1027b3e:	pop    ds
 1027b3f:	clc    
 1027b40:	pusha  
 1027b41:	call   0x81017741
 1027b46:	mov    ebx,0xd5ab42dd
 1027b4b:	ret    0xd8d8
 1027b4e:	cmp    BYTE PTR [edx],bh
 1027b50:	popf   
 1027b51:	push   cs
 1027b52:	es es (bad) 
 1027b55:	xor    DWORD PTR ds:0xd4d4c5d5,esi
 1027b5b:	xor    al,0x16
 1027b5d:	das    
 1027b5e:	sahf   
 1027b5f:	inc    ecx
 1027b60:	ja     0x1027bcc
 1027b62:	or     ah,BYTE PTR [ebx-0x13]
 1027b65:	xor    DWORD PTR [ebx+ebx*8+0x53803f2d],esi
 1027b6c:	adc    esp,DWORD PTR [esi+0x67]
 1027b6f:	out    0x30,eax
 1027b71:	cmp    edi,DWORD PTR [ebx-0x110884e1]
 1027b77:	lds    ecx,FWORD PTR [esi+0x6db13b1d]
 1027b7d:	(bad)  [esi-0x14]
 1027b80:	fdivr  QWORD PTR [ecx+0xfb8e303]
 1027b86:	arpl   bp,bp
 1027b88:	ss (bad) 
 1027b8a:	popf   
 1027b8b:	jge    0x1027b5b
 1027b8d:	mov    eax,ds:0xb447962
 1027b92:	mov    WORD PTR [eax-0x21cfcfc2],gs
 1027b98:	hlt    
 1027b99:	repnz pop edi
 1027b9b:	ret    
 1027b9c:	lahf   
 1027b9d:	std    
 1027b9e:	in     eax,0xa7
 1027ba0:	icebp  
 1027ba1:	pop    edi
 1027ba2:	sahf   
 1027ba3:	jle    0x1027be3
 1027ba5:	push   esi
 1027ba6:	cs pop ebx
 1027ba8:	in     al,dx
 1027ba9:	lods   eax,DWORD PTR ds:[esi]
 1027baa:	cmp    BYTE PTR [eax],ch
 1027bac:	hlt    
 1027bad:	stc    
 1027bae:	mov    ebp,0x868bc067
 1027bb3:	or     BYTE PTR [esi-0x45],cl
 1027bb6:	jmp    ecx
 1027bb8:	lahf   
 1027bb9:	call   0xa050:0xe2024182
 1027bc0:	pop    ds
 1027bc1:	push   ebx
 1027bc2:	lock sub ebx,DWORD PTR [esi]
 1027bc5:	sbb    eax,0x5806afcd
 1027bca:	nop
 1027bcb:	arpl   WORD PTR [eax],ax
 1027bcd:	scas   eax,DWORD PTR es:[edi]
 1027bce:	js     0x1027bae
 1027bd0:	xchg   ebx,eax
 1027bd1:	(bad)  
 1027bd3:	dec    edx
 1027bd4:	(bad)  
 1027bd5:	out    0x67,eax
 1027bd7:	mov    esi,0xf67c2f45
 1027bdc:	stc    
 1027bdd:	(bad)  
 1027bdf:	dec    esp
 1027be0:	dec    ebx
 1027be1:	pop    edi
 1027be2:	mov    edi,0xeab83bea
 1027be7:	fisubr DWORD PTR [ebx+0x70]
 1027bea:	jecxz  0x1027c19
 1027bec:	sbb    esi,DWORD PTR [eax-0x16]
 1027bef:	fiadd  DWORD PTR [edi-0x71]
 1027bf2:	add    WORD PTR [esi-0x3a],di
 1027bf6:	test   eax,0x5083e
 1027bfb:	add    BYTE PTR [edi-0x4],bh
 1027bfe:	mov    bl,BYTE PTR [edi-0x39]
 1027c01:	fcmovnu st,st(7)
 1027c03:	jmp    FWORD PTR [ecx]
 1027c05:	cld    
 1027c06:	repnz rcl edi,cl
 1027c09:	popa   
 1027c0a:	in     eax,0x8a
 1027c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1027c0d:	(bad)  
 1027c0e:	ror    bh,0xa1
 1027c11:	and    al,BYTE PTR [eax-0xbfd61d6]
 1027c17:	cmp    BYTE PTR [esi+0x21],ch
 1027c1a:	int    0x4
 1027c1c:	add    BYTE PTR ds:0x1c3508e0,dl
 1027c22:	sub    bh,BYTE PTR [ebp+0x12bda06]
 1027c28:	jb     0x1027c4a
 1027c2a:	out    0x67,eax
 1027c2c:	or     esp,ebx
 1027c2e:	cmp    al,0xe9
 1027c30:	add    DWORD PTR ds:0x291e00a9,0xfd9825f9
 1027c3a:	stos   DWORD PTR es:[edi],eax
 1027c3b:	out    dx,eax
 1027c3c:	test   eax,0x53c3ac17
 1027c41:	das    
 1027c42:	sbb    BYTE PTR [ecx],al
 1027c44:	jle    0x1027c8a
 1027c46:	sahf   
 1027c47:	call   0xcee5bc5d
 1027c4c:	mov    edi,0xedbc3cff
 1027c51:	jge    0x1027cd2
 1027c53:	xchg   DWORD PTR [edi+0x3d],esp
 1027c56:	jae    0x1027c75
 1027c58:	mov    ds,WORD PTR [eax-0x42]
 1027c5b:	xor    al,0xe
 1027c5d:	cld    
 1027c5e:	xchg   ecx,eax
 1027c5f:	jae    0x1027c09
 1027c61:	dec    ecx
 1027c62:	push   cs
 1027c63:	add    al,0x2
 1027c65:	jne    0x1027c7f
 1027c67:	xor    al,0xac
 1027c69:	in     al,0x50
 1027c6b:	and    BYTE PTR [ecx-0x5b],bh
 1027c6e:	inc    eax
 1027c6f:	into   
 1027c70:	iret   
 1027c71:	sbb    al,0xb0
 1027c73:	fistp  DWORD PTR [edi+0x3b]
 1027c76:	clc    
 1027c77:	out    dx,al
 1027c78:	sbb    BYTE PTR [edx+esi*1],0x3c
 1027c7c:	aam    0x5a
 1027c7e:	pusha  
 1027c7f:	or     BYTE PTR [ebx],0x1
 1027c82:	inc    esi
 1027c83:	or     eax,DWORD PTR [ecx-0x579f4bba]
 1027c89:	scas   al,BYTE PTR es:[edi]
 1027c8a:	pop    ds
 1027c8b:	fld1   
 1027c8d:	fcomp  DWORD PTR [ebx+0x5e]
 1027c90:	cmc    
 1027c91:	sbb    edi,eax
 1027c93:	fdivr  QWORD PTR [edi+0x37fb895e]
 1027c99:	ins    DWORD PTR es:[edi],dx
 1027c9a:	cmc    
 1027c9b:	add    edi,DWORD PTR [esi+0x75]
 1027c9e:	pop    edx
 1027c9f:	ss int3 
 1027ca1:	sub    eax,DWORD PTR [edi]
 1027ca3:	retf   
 1027ca4:	dec    ebx
 1027ca5:	sub    DWORD PTR [ecx],0xd
 1027ca8:	adc    al,0xd6
 1027caa:	bound  eax,QWORD PTR [ecx-0x6bd3e36f]
 1027cb0:	jg     0x1027c39
 1027cb2:	sbb    BYTE PTR [edi-0x79ff0b7d],ch
 1027cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1027cb9:	add    BYTE PTR [esi+0x447ad0b8],al
 1027cbf:	or     edx,DWORD PTR [esi+0x2a11e8]
 1027cc5:	add    BYTE PTR [eax-0x25],bh
 1027cc8:	pop    ds
 1027cc9:	cld    
 1027cca:	push   ss
 1027ccb:	ds sti 
 1027ccd:	das    
 1027cce:	pop    edi
 1027ccf:	(bad)  
 1027cd0:	std    
 1027cd1:	(bad)  
 1027cd3:	cmc    
 1027cd4:	or     eax,DWORD PTR [ebx+eax*1+0x52906b6a]
 1027cdb:	push   es
 1027cdc:	push   ds
 1027cdd:	in     al,dx
 1027cde:	loope  0x1027d1e
 1027ce0:	cmp    BYTE PTR [esi+eax*4-0x4b73d5a8],0x9c
 1027ce8:	sbb    BYTE PTR [ecx+0x25],ah
 1027ceb:	and    DWORD PTR [edi+0x59],ecx
 1027cee:	(bad)  
 1027cef:	popf   
 1027cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1027cf1:	or     edx,DWORD PTR [eax+0x1600a286]
 1027cf7:	push   0xc8688d5d
 1027cfc:	je     0x1027c9e
 1027cfe:	pop    ecx
 1027cff:	sbb    BYTE PTR [esp+edi*2+0x7fede1a7],0xf8
 1027d07:	(bad)  
 1027d09:	(bad)  
 1027d0a:	jg     0x1027d0a
 1027d0c:	sub    ch,dh
 1027d0e:	jnp    0x1027d70
 1027d10:	dec    ebx
 1027d11:	pop    eax
 1027d12:	sub    ch,BYTE PTR [esi+esi*1]
 1027d15:	or     al,0x89
 1027d17:	mov    ebp,0xc80d3c00
 1027d1c:	retf   0x220
 1027d1f:	mov    ebp,0x82025e4e
 1027d24:	jb     0x1027d66
 1027d26:	popf   
 1027d27:	out    dx,al
 1027d28:	arpl   WORD PTR [esi-0x79],cx
 1027d2b:	dec    edx
 1027d2c:	mov    al,0xf
 1027d2e:	imul   DWORD PTR [esi]
 1027d30:	sbb    BYTE PTR [ebx],0x69
 1027d33:	adc    BYTE PTR [ecx],0xfd
 1027d36:	add    al,0x44
 1027d38:	jae    0x1027cc9
 1027d3a:	dec    esp
 1027d3b:	jo     0x1027d65
 1027d3d:	cs out dx,eax
 1027d3f:	and    edi,esp
 1027d41:	jmp    0x8021ba65
 1027d46:	inc    DWORD PTR [ebp-0x8423c81]
 1027d4c:	outs   dx,DWORD PTR ds:[esi]
 1027d4d:	mov    esi,edx
 1027d4f:	mov    esp,0x7e065786
 1027d54:	rcl    DWORD PTR [eax+0x53501f58],cl
 1027d5a:	fdivr  DWORD PTR [edi]
 1027d5c:	loopne 0x1027d32
 1027d5e:	inc    BYTE PTR [edx]
 1027d60:	add    ah,BYTE PTR [ebp-0x287c3185]
 1027d66:	sbb    al,0x84
 1027d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1027d69:	inc    edi
 1027d6a:	pop    es
 1027d6b:	sbb    bl,al
 1027d6d:	ds pop eax
 1027d6f:	into   
 1027d70:	pop    es
 1027d71:	inc    ebp
 1027d72:	ret    
 1027d73:	icebp  
 1027d74:	add    BYTE PTR [esi],cl
 1027d76:	fbld   TBYTE PTR [ebp-0x3bc5dc2b]
 1027d7c:	adc    al,0x5d
 1027d7e:	outs   dx,DWORD PTR ds:[esi]
 1027d7f:	add    BYTE PTR [ebx-0x71],dh
 1027d82:	rol    BYTE PTR [ebx],0x48
 1027d85:	jnp    0x1027d88
 1027d87:	ret    0x5f82
 1027d8a:	add    bh,dh
 1027d8c:	in     al,dx
 1027d8d:	(bad)  
 1027d8e:	pop    esi
 1027d8f:	test   BYTE PTR [edi+0x7d],cl
 1027d92:	out    dx,al
 1027d93:	or     bl,ah
 1027d95:	jnp    0x1027d96
 1027d97:	sbb    esi,0xfffffffd
 1027d9a:	scas   eax,DWORD PTR es:[edi]
 1027d9b:	sub    DWORD PTR [ebx+0x5101952f],0x70
 1027da2:	std    
 1027da3:	leave  
 1027da4:	pop    ds
 1027da5:	cld    
 1027da6:	inc    ecx
 1027da7:	popa   
 1027da8:	or     al,0x0
 1027daa:	ret    0x863
 1027dad:	or     eax,DWORD PTR [edx+eiz*8-0x670f9c0a]
 1027db4:	inc    edx
 1027db5:	cwde   
 1027db6:	xor    eax,0x3f848350
 1027dbb:	pop    ecx
 1027dbc:	cdq    
 1027dbd:	pop    es
 1027dbe:	inc    ebp
 1027dbf:	ret    
 1027dc0:	sbb    DWORD PTR [ebx],eax
 1027dc2:	sbb    BYTE PTR [ecx-0x80],ch
 1027dc5:	adc    ebp,esi
 1027dc7:	and    ecx,DWORD PTR [ebx-0x70d1df80]
 1027dcd:	ins    BYTE PTR es:[edi],dx
 1027dce:	or     al,0x80
 1027dd0:	and    dl,BYTE PTR [eax]
 1027dd2:	shr    ecx,cl
 1027dd4:	inc    ecx
 1027dd5:	sar    BYTE PTR [ebx],0x2e
 1027dd8:	jp     0x1027e0b
 1027dda:	(bad)  
 1027ddb:	div    BYTE PTR [ebx]
 1027ddd:	pop    edi
 1027dde:	les    edi,FWORD PTR [ebp+0xf]
 1027de1:	cmp    al,0x18
 1027de3:	push   es
 1027de4:	push   es
 1027de5:	sub    DWORD PTR [edx],ebp
 1027de7:	add    eax,DWORD PTR [edx]
 1027de9:	sbb    BYTE PTR [edx+0x28],0x2
 1027ded:	xor    DWORD PTR [eax+0x8],eax
 1027df0:	xor    DWORD PTR [esi],edi
 1027df2:	inc    eax
 1027df3:	popa   
 1027df4:	jmp    0x71059859
 1027df9:	loopne 0x1027d7e
 1027dfb:	(bad)  
 1027dfc:	loop   0x1027e74
 1027dfe:	in     al,0x5
 1027e00:	and    ah,bl
 1027e02:	ret    
 1027e03:	push   ecx
 1027e04:	add    BYTE PTR [ebx-0x5773fc2],ah
 1027e0a:	xchg   ecx,eax
 1027e0b:	cwde   
 1027e0c:	lea    esi,[ebx-0x6c]
 1027e0f:	data16 (bad) 
 1027e12:	push   cs
 1027e13:	push   edx
 1027e14:	add    DWORD PTR [ebp+eiz*2+0x2fd069bc],esp
 1027e1b:	or     eax,0x5c9701e0
 1027e20:	hlt    
 1027e21:	cmp    edi,eax
 1027e23:	fwait
 1027e24:	dec    edi
 1027e25:	dec    DWORD PTR [ebx]
 1027e27:	out    dx,al
 1027e28:	mov    ebp,0x207141ff
 1027e2d:	mov    BYTE PTR [edi-0xd],dh
 1027e30:	out    0x90,eax
 1027e32:	or     BYTE PTR [ecx+eiz*4+0x7b],0x10
 1027e37:	mov    ds,WORD PTR [eax+ecx*4]
 1027e3a:	cs jle 0x1027e57
 1027e3d:	das    
 1027e3e:	mov    al,ds:0x2b8244a8
 1027e43:	and    BYTE PTR [eax+edi*2-0xd646c10],0x1
 1027e4b:	ret    0x3863
 1027e4e:	jmp    0x1027e50
 1027e50:	loop   0x1027ec6
 1027e52:	dec    ebx
 1027e53:	jmp    DWORD PTR [eax-0x21]
 1027e56:	clc    
 1027e57:	into   
 1027e58:	push   ebp
 1027e59:	mov    eax,0xf8f5daea
 1027e5e:	ror    ebp,1
 1027e60:	mov    ds:0x133fc0ed,eax
 1027e65:	(bad)  
 1027e66:	jmp    0x1027ed6
 1027e68:	sub    ah,0x4c
 1027e6b:	inc    edi
 1027e6c:	rol    cl,1
 1027e6e:	dec    ebp
 1027e6f:	add    esp,DWORD PTR [esi-0x661d0163]
 1027e75:	sahf   
 1027e76:	fiadd  WORD PTR [edi]
 1027e78:	add    BYTE PTR [edx+esi*8-0x3a],bl
 1027e7c:	ffreep st(5)
 1027e7e:	jmp    0x1027e7e
 1027e80:	hlt    
 1027e81:	and    edi,DWORD PTR [eax-0x2]
 1027e84:	repz jle 0x1027ea0
 1027e87:	inc    edi
 1027e88:	scas   eax,DWORD PTR es:[edi]
 1027e89:	pop    esp
 1027e8a:	out    dx,al
 1027e8b:	xlat   BYTE PTR ds:[ebx]
 1027e8c:	add    bh,BYTE PTR [eax]
 1027e8e:	inc    edx
 1027e8f:	stos   DWORD PTR es:[edi],eax
 1027e90:	not    dh
 1027e92:	sbb    al,0x55
 1027e94:	cmp    bh,ah
 1027e96:	xor    BYTE PTR [ebx+eiz*1+0x4f8278f0],cl
 1027e9d:	retf   
 1027e9e:	sub    edx,DWORD PTR [edi-0x550c2076]
 1027ea4:	shl    DWORD PTR [eax+0x1b2fc0be],0x48
 1027eab:	jmp    0x1027eb7
 1027ead:	push   ds
 1027eae:	stc    
 1027eaf:	push   ss
 1027eb0:	mov    ds:0xe18069c1,al
 1027eb5:	ins    DWORD PTR es:[edi],dx
 1027eb6:	pop    es
 1027eb7:	mov    esi,0x6d41db7b
 1027ebc:	pop    es
 1027ebd:	jle    0x1027e99
 1027ebf:	xor    ecx,DWORD PTR [esi-0x40]
 1027ec2:	mov    ecx,0x76d1c4f
 1027ec7:	fmul   QWORD PTR ds:[ecx+0x26a0b500]
 1027ece:	sbb    eax,0xe0fcac4
 1027ed3:	inc    edx
 1027ed4:	add    DWORD PTR [ecx+eiz*1],eax
 1027ed7:	loop   0x1027f1c
 1027ed9:	dec    ecx
 1027eda:	mov    DWORD PTR [eax],esp
 1027edc:	push   cs
 1027edd:	sub    esi,DWORD PTR [ebp+0x71]
 1027ee0:	sub    al,0x81
 1027ee2:	push   edi
 1027ee3:	stc    
 1027ee4:	pop    esp
 1027ee5:	cli    
 1027ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1027ee7:	xchg   edi,eax
 1027ee8:	loop   0x1027f1f
 1027eea:	jg     0x1027ee6
 1027eec:	inc    ecx
 1027eed:	cld    
 1027eee:	mov    edi,0x1c6cf9bf
 1027ef3:	mov    ch,0x72
 1027ef5:	jns    0x1027ecf
 1027ef7:	xor    eax,0x811ca848
 1027efc:	ret    0x1f8a
 1027eff:	mov    edi,0x1e2c200f
 1027f04:	stos   BYTE PTR es:[edi],al
 1027f05:	mov    esp,0x426aef9f
 1027f0a:	in     eax,0xec
 1027f0c:	inc    ecx
 1027f0d:	mov    dl,0x8e
 1027f0f:	aaa    
 1027f10:	or     al,0xa4
 1027f12:	xchg   ebx,eax
 1027f13:	add    al,0x1c
 1027f15:	test   DWORD PTR [ebp-0x7b],ebp
 1027f18:	je     0x1027eda
 1027f1a:	inc    ebp
 1027f1b:	outs   dx,DWORD PTR ds:[esi]
 1027f1c:	pop    ecx
 1027f1d:	pop    ebp
 1027f1e:	or     al,0x88
 1027f20:	push   cs
 1027f21:	pop    ecx
 1027f22:	pop    ss
 1027f23:	loopne 0x1027f08
 1027f25:	jg     0x1027f22
 1027f27:	jns    0x1027f1d
 1027f29:	jp     0x1027f68
 1027f2b:	sub    al,0x59
 1027f2d:	mov    dl,0x18
 1027f2f:	dec    ebx
 1027f30:	xchg   edi,eax
 1027f31:	cs (bad) 
 1027f33:	mov    dl,BYTE PTR ds:0xcaf4704b
 1027f39:	and    eax,0xcc56a38
 1027f3e:	mov    ds,WORD PTR [edx+0x36]
 1027f41:	lea    esp,[ebx-0x1b8e8b69]
 1027f47:	loop   0x1027f39
 1027f49:	mov    bh,0xb4
 1027f4b:	mov    esp,DWORD PTR [ebx]
 1027f4d:	xchg   edi,eax
 1027f4e:	je     0x1027fc1
 1027f50:	hlt    
 1027f51:	mov    dl,0x29
 1027f53:	lods   al,BYTE PTR ds:[esi]
 1027f54:	pop    esp
 1027f55:	aam    0xc5
 1027f57:	repnz inc ebp
 1027f59:	xchg   ebx,eax
 1027f5a:	cmp    BYTE PTR [edx-0xf],ah
 1027f5d:	and    al,0x96
 1027f5f:	das    
 1027f60:	call   0x5cac:0x5d45cac4
 1027f67:	xor    al,BYTE PTR [ebp-0x1eb2699d]
 1027f6d:	fcom   DWORD PTR ds:0xf96a38d3
 1027f73:	xor    al,0x8e
 1027f75:	pop    edx
 1027f76:	(bad)  
 1027f77:	lds    ebp,FWORD PTR [edi]
 1027f79:	cmp    al,0xfb
 1027f7b:	in     eax,0xd8
 1027f7d:	aas    
 1027f7e:	cmp    ecx,DWORD PTR [ebx-0x19405091]
 1027f84:	push   eax
 1027f85:	mov    cl,0x3c
 1027f87:	mov    ds:0x99e2029f,al
 1027f8c:	xor    al,0x67
 1027f8e:	(bad)  
 1027f8f:	sub    BYTE PTR [eax+edi*1-0x1f],bl
 1027f93:	dec    esi
 1027f94:	xlat   BYTE PTR ds:[ebx]
 1027f95:	cmc    
 1027f96:	pop    esp
 1027f97:	jae    0x1027fd3
 1027f99:	jl     0x1027f65
 1027f9b:	(bad)  
 1027f9c:	hlt    
 1027f9d:	mov    bl,0xbd
 1027fa0:	aas    
 1027fa1:	cdq    
 1027fa2:	cwde   
 1027fa3:	lahf   
 1027fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1027fa5:	push   ebx
 1027fa6:	jns    0x1027fa9
 1027fa8:	loopne 0x1028007
 1027faa:	jg     0x1027fa8
 1027fac:	jnp    0x1027fa6
 1027fae:	fcomp  st(7)
 1027fb0:	cld    
 1027fb1:	and    esi,DWORD PTR [esi]
 1027fb3:	fidiv  WORD PTR [edi+0x73f6ba29]
 1027fb9:	in     al,dx
 1027fba:	mov    eax,ds:0x7c6351f2
 1027fbf:	mov    edx,0x40275c90
 1027fc4:	adc    ch,bl
 1027fc6:	add    BYTE PTR [esi+0x37],cl
 1027fc9:	sbb    eax,0x1cd7162b
 1027fce:	xor    BYTE PTR [edi],ah
 1027fd0:	(bad)  
 1027fd1:	pusha  
 1027fd2:	xchg   esi,eax
 1027fd3:	jo     0x1027f65
 1027fd5:	daa    
 1027fd6:	add    cl,BYTE PTR [ebp+0x688f03b6]
 1027fdc:	push   0x1b50f8c4
 1027fe1:	ins    DWORD PTR es:[edi],dx
 1027fe2:	ret    
 1027fe3:	test   DWORD PTR [ebx-0x232fde66],edx
 1027fe9:	pop    esp
 1027fea:	aas    
 1027feb:	xadd   BYTE PTR ds:0x6e1c1f2b,al
 1027ff2:	or     dl,bl
 1027ff4:	and    BYTE PTR [ecx],0xa7
 1027ff7:	or     BYTE PTR [eax+0x1],al
 1027ffa:	dec    esi
 1027ffb:	ficomp WORD PTR [edx+0x70]
 1027ffe:	stc    
 1027fff:	fwait
 1028000:	pop    edi
 1028001:	or     DWORD PTR [edi-0x4e580a02],0xf14dbef1
 102800b:	sbb    al,0x41
 102800d:	cmp    edx,ecx
 102800f:	pop    edi
 1028010:	mov    esi,DWORD PTR ds:0x3ce01602
 1028016:	popf   
 1028017:	cwde   
 1028018:	out    dx,al
 1028019:	ret    
 102801a:	outs   dx,DWORD PTR ds:[esi]
 102801b:	in     eax,dx
 102801c:	inc    esp
 102801d:	pop    eax
 102801e:	pop    ss
 102801f:	(bad)  
 1028020:	pop    ds
 1028021:	push   cs
 1028022:	dec    edx
 1028023:	or     ecx,DWORD PTR [eax+edx*2]
 1028026:	add    ecx,DWORD PTR [esi+esi*4+0x68688f03]
 102802d:	in     al,0x18
 102802f:	loopne 0x102806d
 1028031:	loopne 0x1027ffa
 1028033:	mov    ds:0x8bf2c1fd,eax
 1028038:	mov    bl,0x38
 102803a:	cld    
 102803b:	dec    edi
 102803c:	popa   
 102803d:	sbb    dl,BYTE PTR [eax-0xe8eece0]
 1028043:	cmp    eax,DWORD PTR [edx]
 1028045:	jno    0x1028073
 1028047:	adc    dl,0xe9
 102804a:	ds icebp 
 102804c:	sbb    eax,DWORD PTR ds:0x31e4cd21
 1028052:	adc    dh,bl
 1028054:	std    
 1028055:	(bad)  
 1028056:	push   edi
 1028057:	loop   0x10280ae
 1028059:	jg     0x102804d
 102805b:	push   ds
 102805c:	cld    
 102805d:	(bad)  
 102805e:	pop    ss
 102805f:	aas    
 1028060:	cmova  ebx,DWORD PTR [edi]
 1028063:	jne    0x1028069
 1028065:	and    dl,bh
 1028067:	lock jno 0x102807d
 102806a:	push   eax
 102806b:	jo     0x1028062
 102806d:	imul   eax,DWORD PTR [edi+0x70],0xffffffe4
 1028071:	test   DWORD PTR [esp+edx*8],0xfdab8395
 1028078:	bound  edx,QWORD PTR ss:[edi]
 102807b:	jp     0x102807e
 102807d:	mov    cl,0xf
 102807f:	ret    0x8dbb
 1028082:	push   0x2e
 1028084:	fwait
 1028085:	cmp    al,0x6a
 1028087:	lods   al,BYTE PTR ds:[esi]
 1028088:	pop    edi
 1028089:	lds    edi,FWORD PTR [edx+eiz*4]
 102808c:	push   0xfffffffc
 102808e:	dec    edi
 102808f:	shr    DWORD PTR [eax+0x3b],1
 1028092:	lock mov BYTE PTR [esi],al
 1028095:	inc    ebx
 1028096:	(bad)  
 1028097:	call   0xcad7:0x779ee903
 102809e:	and    BYTE PTR [edi+ebx*1],ah
 10280a1:	test   bl,ch
 10280a3:	mov    ds:0x44b41007,al
 10280a8:	pop    edx
 10280a9:	hlt    
 10280aa:	ret    
 10280ab:	std    
 10280ac:	jg     0x10280cd
 10280ae:	dec    ecx
 10280af:	cs aad 0xa5
 10280b2:	clc    
 10280b3:	sahf   
 10280b4:	xchg   ebp,eax
 10280b5:	inc    ebx
 10280b6:	xor    dh,BYTE PTR [esi-0x21843fbc]
 10280bc:	(bad)  
 10280bd:	push   0xffffffbc
 10280bf:	repnz dec ebp
 10280c1:	out    dx,eax
 10280c2:	(bad)  
 10280c3:	retf   
 10280c4:	(bad)  
 10280c5:	fld    TBYTE PTR [edi-0x1f]
 10280c8:	fsub   DWORD PTR [ebx-0x7aa40f72]
 10280ce:	popf   
 10280cf:	fild   WORD PTR [ecx+0x58]
 10280d2:	xchg   DWORD PTR [ebx+0x5],esi
 10280d5:	stos   DWORD PTR es:[edi],eax
 10280d6:	cmp    dh,BYTE PTR [edi+esi*8-0x63]
 10280da:	or     ebx,DWORD PTR [ebx]
 10280dc:	cmp    DWORD PTR [ebx+edx*4],0xfffffffc
 10280e0:	test   eax,0x8f5d88f
 10280e5:	mov    edx,0xc1089586
 10280ea:	lahf   
 10280eb:	xor    eax,eax
 10280ed:	fdivr  st(6),st
 10280ef:	inc    ebp
 10280f0:	stc    
 10280f1:	inc    edx
 10280f2:	hlt    
 10280f3:	add    BYTE PTR [esi],bl
 10280f5:	leave  
 10280f6:	jbe    0x10280d8
 10280f8:	(bad)  
 10280f9:	jge    0x10280f5
 10280fb:	sbb    esi,esp
 10280fd:	loop   0x10280e6
 10280ff:	pop    esp
 1028100:	jo     0x10280c2
 1028102:	inc    ecx
 1028103:	popf   
 1028104:	outs   dx,DWORD PTR ds:[esi]
 1028105:	pop    esi
 1028106:	jge    0x102813d
 1028108:	scas   al,BYTE PTR es:[edi]
 1028109:	mov    edx,0x3b68fd76
 102810e:	lock loope 0x1028155
 1028111:	inc    ecx
 1028112:	test   BYTE PTR [ecx],0xe9
 1028115:	arpl   WORD PTR [ecx-0x32],ax
 1028118:	or     DWORD PTR [eax],esp
 102811a:	pop    edx
 102811b:	dec    ebp
 102811c:	adc    dl,ah
 102811e:	adc    dl,dh
 1028120:	xor    DWORD PTR [eax-0x9c3398],eax
 1028126:	pop    esi
 1028127:	idiv   BYTE PTR [ebp+0x3d3bbf75]
 102812d:	and    esi,DWORD PTR [ecx]
 102812f:	cmp    BYTE PTR [eax],ch
 1028131:	pop    esp
 1028132:	stc    
 1028133:	lock xchg ebp,eax
 1028135:	lahf   
 1028136:	idiv   esi
 1028138:	jmp    0x70fe71a8
 102813d:	mov    esp,0xdfffbf14
 1028142:	pop    edi
 1028143:	and    BYTE PTR [ebx-0x71],0x3a
 1028147:	ret    0xf92f
 102814a:	cmc    
 102814b:	mov    DWORD PTR [bx+di-0x18f2],esp
 1028150:	test   BYTE PTR [ecx],bh
 1028152:	(bad)  
 1028153:	pop    ebx
 1028154:	cmp    ebp,0xffffff9a
 1028157:	add    DWORD PTR [edi],esp
 1028159:	(bad)  
 102815a:	sub    ebp,DWORD PTR [eax]
 102815c:	test   al,0x82
 102815e:	or     cl,dh
 1028160:	fist   WORD PTR [edi-0x4]
 1028163:	mov    WORD PTR cs:0x691c7138,?
 102816a:	ret    
 102816b:	inc    esi
 102816c:	ret    0xe41
 102816f:	add    cl,BYTE PTR [esi]
 1028171:	gs sbb dl,al
 1028174:	cmp    DWORD PTR [edi+0x5550aaaa],eax
 102817a:	std    
 102817b:	xchg   DWORD PTR [eax],esp
 102817d:	sahf   
 102817e:	jp     0x1028141
 1028180:	add    eax,0x1705ea78
 1028185:	or     al,0x88
 1028187:	stos   DWORD PTR es:[edi],eax
 1028188:	adc    ebp,ecx
 102818a:	pop    es
 102818b:	mov    cl,0x30
 102818d:	mov    DWORD PTR [ecx-0x10],0x673c00
 1028194:	sahf   
 1028195:	and    DWORD PTR [ecx+0x7a473bf4],eax
 102819b:	sbb    eax,0x870d7c80
 10281a0:	mov    al,0x1c
 10281a2:	aaa    
 10281a3:	jne    0x10281ac
 10281a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10281a6:	jb     0x10281f0
 10281a8:	popa   
 10281a9:	sub    DWORD PTR [ecx],ebp
 10281ab:	mov    DWORD PTR [edx],edi
 10281ad:	test   BYTE PTR [ebx],ah
 10281af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10281b0:	mov    edi,0xf7dfa960
 10281b5:	mov    ss,edi
 10281b7:	loope  0x10281ce
 10281b9:	scas   eax,DWORD PTR es:[edi]
 10281ba:	mov    edi,0xbdfeaf04
 10281bf:	pop    ss
 10281c0:	loope  0x102819a
 10281c2:	mov    ds:0x4f3c656,eax
 10281c7:	sub    dl,BYTE PTR [esi+0x54]
 10281ca:	popa   
 10281cb:	fs lahf 
 10281cd:	fcomp  st(7)
 10281cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10281d0:	js     0x10281c2
 10281d2:	xor    BYTE PTR [edx+0xe],ch
 10281d5:	daa    
 10281d6:	repnz out 0xed,eax
 10281d9:	(bad)  
 10281da:	mul    al
 10281dc:	inc    ecx
 10281dd:	out    dx,al
 10281de:	out    0x64,al
 10281e0:	dec    edx
 10281e1:	pusha  
 10281e2:	and    DWORD PTR [esi],ecx
 10281e4:	add    bh,BYTE PTR [esi]
 10281e6:	adc    bl,BYTE PTR [edx]
 10281e8:	in     al,0x28
 10281ea:	out    0x88,eax
 10281ec:	xchg   BYTE PTR [edi+0x42],al
 10281ef:	(bad)  
 10281f0:	jecxz  0x10281ea
 10281f2:	pop    ss
 10281f3:	dec    ecx
 10281f4:	mov    al,0x7
 10281f6:	push   eax
 10281f7:	mov    al,0x37
 10281f9:	mov    al,ds:0xe8dbc922
 10281fe:	add    esp,edx
 1028200:	loop   0x102821b
 1028202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1028203:	gs jp  0x1028228
 1028206:	int    0x8
 1028208:	repnz shl BYTE PTR [edi+0xbf208e7],1
 102820f:	inc    eax
 1028210:	retf   0xf3f2
 1028213:	cmp    eax,DWORD PTR [eax]
 1028215:	imul   esi,ecx,0x2e2fe110
 102821b:	jle    0x1028220
 102821d:	cs dec ebx
 1028220:	(bad)  
 1028221:	jecxz  0x10281f1
 1028223:	jnp    0x1028213
 1028225:	dec    edi
 1028226:	cmp    DWORD PTR [ebp+0x71],0xffffff85
 102822a:	mov    al,ds:0xfb8bf61f
 102822f:	or     BYTE PTR [eax+0x41],bh
 1028232:	adc    BYTE PTR [eax-0x41],bh
 1028235:	inc    eax
 1028236:	pop    eax
 1028237:	inc    eax
 1028238:	les    edi,FWORD PTR [ecx-0x3b]
 102823b:	rol    DWORD PTR [ebx-0x2f],0x45
 102823f:	adc    DWORD PTR [ebp-0x6d],ebx
 1028242:	mov    esp,0x900706de
 1028247:	shl    DWORD PTR [esi-0x20],1
 102824a:	adc    ebp,ecx
 102824c:	sbb    edi,DWORD PTR [ecx]
 102824e:	adc    ah,BYTE PTR [ebx+0x751808f9]
 1028254:	push   eax
 1028255:	push   esi
 1028256:	xchg   edi,eax
 1028257:	mov    DWORD PTR [eax-0x6b53d3b4],eax
 102825d:	les    esi,FWORD PTR [ecx]
 102825f:	add    BYTE PTR [esi-0x4b],dh
 1028262:	add    ebp,eax
 1028264:	imul   edx,edx,0x69
 1028267:	xchg   edx,eax
 1028268:	enter  0xe653,0xc3
 102826c:	(bad)  
 102826d:	mov    edi,0x220135e6
 1028272:	pusha  
 1028273:	cld    
 1028274:	pusha  
 1028275:	or     BYTE PTR [ebp-0x31068090],ah
 102827b:	aaa    
 102827c:	loop   0x1028270
 102827e:	idiv   ebp
 1028280:	adc    eax,0xbf73dc36
 1028285:	cmp    dl,BYTE PTR [ebx]
 1028287:	mov    al,ds:0xe961726
 102828c:	mov    edx,DWORD PTR [ecx+0x20373e7f]
 1028292:	dec    esi
 1028293:	sbb    ecx,DWORD PTR [edx]
 1028295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1028296:	add    edx,DWORD PTR [ecx-0x4ef5d4ca]
 102829c:	fwait
 102829d:	xor    dh,cl
 102829f:	adc    BYTE PTR [ecx+eax*4],cl
 10282a2:	inc    esi
 10282a3:	fild   DWORD PTR [ecx-0x37378bb9]
 10282a9:	div    BYTE PTR [edi+0xc3ec4d5]
 10282af:	enter  0x61b,0x4
 10282b3:	dec    ebx
 10282b4:	(bad)  
 10282b5:	cmp    BYTE PTR [edx-0x4a],cl
 10282b8:	push   cs
 10282b9:	and    BYTE PTR [eax+0x78c5e576],0x22
 10282c0:	and    edi,esi
 10282c2:	mov    bh,0xe6
 10282c4:	fwait
 10282c5:	call   0x41118b50
 10282ca:	mov    ebp,0xf03fcfd2
 10282cf:	scas   al,BYTE PTR es:[edi]
 10282d0:	aas    
 10282d1:	sar    DWORD PTR [ebx],0xdf
 10282d4:	repz popa 
 10282d6:	fdivr  QWORD PTR [ecx+0x1e0fef1]
 10282dc:	and    al,0x65
 10282de:	mov    eax,ds:0x95800cf6
 10282e3:	adc    BYTE PTR [ebx],0x60
 10282e6:	pop    ss
 10282e7:	sbb    eax,DWORD PTR [esi+0x6fc89842]
 10282ed:	enter  0x6bf,0xef
 10282f1:	and    eax,0x862a0e18
 10282f6:	mov    bl,0x1d
 10282f8:	js     0x1028312
 10282fa:	cdq    
 10282fb:	mov    gs,WORD PTR [eax+0x5e]
 10282fe:	sub    ebp,esi
 1028300:	mov    esi,0x3f182cd3
 1028305:	addr16 cmp al,0xb2
 1028308:	pop    es
 1028309:	adc    BYTE PTR [edi-0x6c],bl
 102830c:	jle    0x10282db
 102830e:	and    ebp,DWORD PTR [ecx]
 1028310:	sub    esi,ebp
 1028312:	sbb    al,0x77
 1028314:	add    DWORD PTR [eax],ebp
 1028316:	add    dh,BYTE PTR ds:0xa388505a
 102831c:	mov    esi,0xc5015c19
 1028321:	jmp    0xe263f2de
 1028326:	inc    ebx
 1028327:	(bad)  
 1028328:	fcmovne st,st(7)
 102832a:	(bad)  [ebx+0x46]
 102832d:	xchg   ebx,eax
 102832e:	pop    es
 102832f:	shl    bh,0x0
 1028332:	jl     0x1028324
 1028334:	pop    ebp
 1028335:	outs   dx,DWORD PTR ds:[esi]
 1028336:	lds    esp,FWORD PTR ds:0x1b107f97
 102833c:	out    dx,al
 102833d:	mov    ecx,0xf0b5440f
 1028342:	cmp    BYTE PTR [eax],ch
 1028344:	sub    al,BYTE PTR [ebx+0x7810da78]
 102834a:	scas   eax,DWORD PTR es:[edi]
 102834b:	add    BYTE PTR [ecx+0x65],ch
 102834e:	ret    0x89e
 1028351:	out    dx,eax
 1028352:	sbb    ah,ah
 1028354:	(bad)  [ebx]
 1028356:	loope  0x1028399
 1028358:	push   eax
 1028359:	mov    eax,ds:0x469be62e
 102835e:	arpl   WORD PTR [eax],ax
 1028360:	and    edi,DWORD PTR [edx]
 1028362:	and    al,0x94
 1028364:	sub    eax,0x174097e1
 1028369:	out    dx,al
 102836a:	js     0x10282ff
 102836c:	pop    es
 102836d:	rcl    BYTE PTR [ebx-0xc],0x16
 1028371:	cld    
 1028372:	push   edx
 1028373:	push   esp
 1028374:	out    0xd8,al
 1028376:	add    esp,DWORD PTR [eax]
 1028378:	and    BYTE PTR fs:[ecx+0x4b],ah
 102837c:	pop    ds
 102837d:	mov    bh,0xea
 102837f:	xchg   BYTE PTR [edi-0x3f52604f],al
 1028385:	das    
 1028386:	lods   eax,DWORD PTR ds:[esi]
 1028387:	cmp    al,0x5
 1028389:	retf   
 102838a:	dec    esp
 102838b:	icebp  
 102838c:	cmp    bh,BYTE PTR [esi+0x2b]
 102838f:	and    BYTE PTR [eax+eiz*8-0x77],dh
 1028393:	or     BYTE PTR [edi],bl
 1028395:	cli    
 1028396:	repz mov bh,0xe1
 1028399:	dec    edi
 102839a:	das    
 102839b:	jnp    0x10283dc
 102839d:	ss ins BYTE PTR es:[edi],dx
 102839f:	mov    esp,0xac20ed4f
 10283a4:	leave  
 10283a5:	imul   esp,ebp,0xe20263c2
 10283ab:	jnp    0x1028330
 10283ad:	fld    DWORD PTR [edi+0x51b16b48]
 10283b3:	mov    edi,eax
 10283b5:	sub    al,0x20
 10283b7:	mov    edx,0x18fd8714
 10283bc:	ror    al,0x5
 10283bf:	cmp    BYTE PTR [eax+ecx*2],ch
 10283c2:	adc    BYTE PTR [ebp+0x76],0x63
 10283c6:	jecxz  0x102834a
 10283c8:	push   ds
 10283c9:	sub    edi,eax
 10283cb:	inc    edx
 10283cc:	inc    ebx
 10283cd:	les    edi,FWORD PTR [eax+0x76]
 10283d0:	data16 mov al,ds:0xe4a67d21
 10283d6:	add    eax,edi
 10283d8:	mov    edi,0x3e5714b8
 10283dd:	in     al,0xc1
 10283df:	xor    eax,0x57f128f1
 10283e4:	add    BYTE PTR [ebx],bl
 10283e6:	jnp    0x10283f9
 10283e8:	xor    eax,0x2924047f
 10283ed:	adc    BYTE PTR [esi],ch
 10283ef:	adc    ebx,DWORD PTR [ebx-0x4]
 10283f2:	ud0    edi,ecx
 10283f5:	lahf   
 10283f6:	loope  0x10283a5
 10283f8:	xchg   edi,eax
 10283f9:	mov    esp,0x7ddc770f
 10283fe:	outs   dx,DWORD PTR ds:[esi]
 10283ff:	pushf  
 1028400:	jne    0x1028452
 1028402:	out    0x7,eax
 1028404:	(bad)  
 1028405:	out    dx,al
 1028406:	add    esp,edx
 1028408:	jae    0x1028405
 102840a:	popa   
 102840b:	sar    BYTE PTR [eax-0x2c],cl
 102840e:	pop    eax
 102840f:	hlt    
 1028410:	bound  eax,QWORD PTR [edx+0x6b0a91c2]
 1028416:	inc    eax
 1028417:	xor    al,0x3a
 1028419:	adc    al,0x74
 102841b:	inc    esp
 102841c:	jmp    FWORD PTR [ecx+0x72]
 102841f:	in     al,0x41
 1028421:	iret   
 1028422:	add    edi,DWORD PTR [esi+0x51]
 1028425:	jle    0x102842a
 1028427:	mov    ds:0x94e5349d,al
 102842c:	out    dx,al
 102842d:	jns    0x102844c
 102842f:	xor    BYTE PTR [ebp+edi*4+0x4d],0x54
 1028434:	adc    eax,0x801e16af
 1028439:	add    cl,BYTE PTR [edx]
 102843b:	jno    0x102849c
 102843d:	call   0x8d28:0xf8a72dc1
 1028444:	mov    esi,0x68de5923
 1028449:	jge    0x10283ee
 102844b:	adc    cl,BYTE PTR [eax-0x59]
 102844e:	std    
 102844f:	js     0x102847c
 1028451:	or     eax,0x7cfdcbf1
 1028456:	loopne 0x102841b
 1028458:	out    dx,eax
 1028459:	mov    ecx,0xf8bd6f18
 102845e:	cmp    eax,0x3de373b8
 1028463:	cli    
 1028464:	cmp    al,0x41
 1028466:	xor    bh,ch
 1028468:	std    
 1028469:	call   0x5c24c87
 102846e:	je     0x102846e
 1028470:	inc    edx
 1028471:	jno    0x10284c7
 1028473:	adc    bl,BYTE PTR [esi+ebp*4+0x1]
 1028477:	jnp    0x1028440
 1028479:	ret    
 102847a:	pop    ecx
 102847b:	pop    es
 102847c:	and    bl,bh
 102847e:	jo     0x10284fd
 1028480:	push   0xa7f81db4
 1028485:	(bad)  
 1028486:	lods   al,BYTE PTR ds:[esi]
 1028487:	imul   ecx,esi,0xffffffee
 102848a:	mov    esi,0xc2a7c15d
 102848f:	fdiv   DWORD PTR [esi+0x16]
 1028492:	xor    BYTE PTR [edi],0x53
 1028495:	jecxz  0x1028450
 1028497:	jmp    0x10284c8
 1028499:	outs   dx,BYTE PTR ds:[esi]
 102849a:	out    0xea,al
 102849c:	call   0x524aa889
 10284a1:	mov    dl,0xf5
 10284a3:	and    BYTE PTR [ecx+0x652729b4],0x44
 10284aa:	adc    DWORD PTR [ecx],0x4a972fdd
 10284b0:	ret    
 10284b1:	xor    ecx,DWORD PTR [edi-0x60]
 10284b4:	ror    BYTE PTR [edi+0x4f],1
 10284b7:	cmp    ecx,esi
 10284b9:	add    BYTE PTR [ecx],0xa7
 10284bc:	mul    DWORD PTR [ecx+0x2f13bdf7]
 10284c2:	jge    0x10284a9
 10284c4:	jmp    0x10284b6
 10284c6:	div    BYTE PTR [edi]
 10284c8:	std    
 10284c9:	and    esi,edx
 10284cb:	sbb    al,0x7b
 10284cd:	je     0x10284eb
 10284cf:	je     0x102847d
 10284d1:	inc    edx
 10284d2:	sbb    dh,BYTE PTR [ebp+0x5]
 10284d5:	mov    eax,0xbf807ab0
 10284da:	inc    ecx
 10284db:	pop    eax
 10284dc:	ret    
 10284dd:	stc    
 10284de:	pop    ebp
 10284df:	test   DWORD PTR [ecx+0x5c5ce773],eax
 10284e5:	cmp    eax,eax
 10284e7:	jnp    0x102854a
 10284e9:	jmp    0x10284db
 10284eb:	ffree  st(2)
 10284ed:	inc    ecx
 10284ee:	jmp    0x1d11:0xe076d180
 10284f5:	xor    al,0x49
 10284f7:	ror    bl,1
 10284f9:	mov    ch,0xfa
 10284fb:	pop    ecx
 10284fc:	mov    edi,0xcbecac5f
 1028501:	cmp    dh,dl
 1028503:	idiv   BYTE PTR [esi+0xe323e4f]
 1028509:	add    DWORD PTR [eax-0x6ff84319],ebp
 102850f:	mov    esi,0x3ae107d3
 1028514:	sti    
 1028515:	imul   edi,DWORD PTR [ecx+0x2e],0x7
 1028519:	fsub   st,st(2)
 102851b:	inc    ebx
 102851c:	pop    ebx
 102851d:	loop   0x1028513
 102851f:	pushf  
 1028520:	jg     0x10284e7
 1028522:	test   al,0xbd
 1028524:	call   0x2311acaa
 1028529:	sub    DWORD PTR [ebx],ebx
 102852b:	not    BYTE PTR [esi]
 102852d:	ds hlt 
 102852f:	fimul  WORD PTR [ebx-0xf]
 1028532:	rcl    BYTE PTR [edi-0x42],cl
 1028535:	push   ss
 1028536:	jg     0x102852e
 1028538:	(bad)  
 1028539:	jg     0x10284bf
 102853b:	xor    eax,0xda851dc7
 1028540:	cmp    DWORD PTR [eax+0x540a67f2],esp
 1028546:	pushf  
 1028547:	pop    es
 1028548:	adc    BYTE PTR [eax+0x2ffadccf],al
 102854e:	adc    BYTE PTR [eax+0x45],bh
 1028551:	nop
 1028552:	mov    esi,0xfc404c4c
 1028557:	inc    esi
 1028558:	xor    DWORD PTR [edx-0x77],0xafa34006
 102855f:	add    ecx,DWORD PTR [edi+0x2b5899a8]
 1028565:	pop    es
 1028566:	jb     0x102855a
 1028568:	cdq    
 1028569:	pop    eax
 102856a:	rol    DWORD PTR [edi+0x6c],1
 102856d:	icebp  
 102856e:	dec    ebx
 102856f:	pusha  
 1028570:	das    
 1028571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1028572:	sub    DWORD PTR [edx+0x364f8b49],eax
 1028578:	or     al,0x77
 102857a:	sub    edi,DWORD PTR [eax+0x2f]
 102857d:	inc    eax
 102857e:	sub    eax,0x3824d127
 1028583:	adc    ecx,eax
 1028585:	iret   
 1028586:	outs   dx,BYTE PTR ds:[esi]
 1028587:	mov    ebp,0xb03c04f6
 102858c:	std    
 102858d:	jmp    DWORD PTR [ecx-0x27]
 1028590:	and    BYTE PTR [eax+eax*8],ah
 1028593:	adc    DWORD PTR [eax],eax
 1028595:	out    dx,al
 1028596:	shl    BYTE PTR [ebp-0x24],cl
 1028599:	cmp    ah,ah
 102859b:	bound  edx,QWORD PTR [edi]
 102859d:	and    BYTE PTR ds:0x3e7cfa0e,cl
 10285a3:	hlt    
 10285a4:	fmulp  st(3),st
 10285a6:	lock aas 
 10285a8:	pop    esi
 10285a9:	cmc    
 10285aa:	pop    edx
 10285ab:	mov    esp,0x8fe4fe3
 10285b0:	imul   ecx,DWORD PTR [esi+0xd75063b],0x54
 10285b7:	push   ebp
 10285b8:	cli    
 10285b9:	fidiv  DWORD PTR [eax-0x37]
 10285bc:	mov    ebx,0xa8455e89
 10285c1:	sbb    al,0xfe
 10285c3:	or     dh,BYTE PTR [ecx]
 10285c5:	push   ecx
 10285c6:	cmp    BYTE PTR [eax],bh
 10285c8:	les    ecx,FWORD PTR ds:0xda301fb6
 10285ce:	push   cs
 10285cf:	cmp    al,0xa2
 10285d1:	and    dh,BYTE PTR [ecx-0x27fcd8bb]
 10285d7:	loop   0x102858e
 10285d9:	sbb    al,bl
 10285db:	xchg   ebx,eax
 10285dc:	stos   DWORD PTR es:[edi],eax
 10285dd:	sti    
 10285de:	xchg   esp,eax
 10285df:	jne    0x10285c7
 10285e1:	ja     0x10285dc
 10285e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10285e4:	sahf   
 10285e5:	sbb    eax,0x6460a30
 10285ea:	in     al,0x31
 10285ec:	and    ah,0xbe
 10285ef:	repz push cs
 10285f1:	mov    ebp,0x328212a8
 10285f6:	and    ch,BYTE PTR [eax-0x35]
 10285f9:	dec    edi
 10285fa:	sar    ebp,1
 10285fc:	pop    es
 10285fd:	sub    ecx,DWORD PTR ds:0xb6f1172e
 1028603:	fnsave [edx+ecx*1+0x7d8bd390]
 102860a:	cmc    
 102860b:	fs cdq 
 102860d:	mov    al,ds:0x7c0120a6
 1028612:	lock mov ebp,0x6f0de197
 1028618:	mov    ebx,0xb5dfb70c
 102861d:	push   ecx
 102861e:	mov    ebp,0xf48b0b4b
 1028623:	cmp    eax,0xc7161e9f
 1028628:	or     ebp,DWORD PTR [edx+0x39]
 102862b:	push   cs
 102862c:	adc    dl,ah
 102862e:	or     al,0x70
 1028630:	xchg   esp,eax
 1028631:	jl     0x10285e7
 1028633:	sbb    eax,0x248a4478
 1028638:	(bad)  
 1028639:	and    BYTE PTR [esi+0x11],bh
 102863c:	pop    esp
 102863d:	jle    0x102865d
 102863f:	rcl    BYTE PTR [ebx+0x6454f83b],0xfe
 1028646:	adc    DWORD PTR [esi+0x454d7c41],ebx
 102864c:	pop    esp
 102864d:	stos   DWORD PTR es:[edi],eax
 102864e:	test   DWORD PTR [edx+0x6a],eax
 1028651:	cdq    
 1028652:	or     BYTE PTR [ebx+eax*8-0x5b],0xef
 1028657:	add    dl,BYTE PTR [eax+0x6e5847fa]
 102865d:	popa   
 102865e:	mov    ebp,0xc09f5b93
 1028663:	retf   0x29a1
 1028666:	jbe    0x102867d
 1028668:	xchg   edx,eax
 1028669:	dec    ebp
 102866a:	dec    esi
 102866b:	fld    QWORD PTR [ebx]
 102866d:	test   eax,0x20878460
 1028672:	mov    ebp,0xef7a3888
 1028677:	add    edi,DWORD PTR [edi-0x10]
 102867a:	mov    ebp,0x5ef7e397
 102867f:	cmc    
 1028680:	sbb    bl,BYTE PTR [esp+edi*8-0x2a]
 1028684:	mov    esi,DWORD PTR [eax-0x4]
 1028687:	jno    0x10286d0
 1028689:	mov    ds:0x60b76172,eax
 102868e:	add    eax,0x34584c7f
 1028693:	mov    bl,0x2e
 1028695:	out    0x7,al
 1028697:	repnz pop edi
 1028699:	cs out 0x23,al
 102869c:	(bad)  
 102869d:	adc    BYTE PTR [edi+0xf],cl
 10286a0:	cmp    cl,BYTE PTR [eax-0x5bde2dc2]
 10286a6:	shl    DWORD PTR [esi-0x20],1
 10286a9:	adc    DWORD PTR [ecx],ebp
 10286ab:	push   edx
 10286ac:	outs   dx,BYTE PTR ds:[esi]
 10286ad:	jle    0x1028727
 10286af:	inc    eax
 10286b0:	add    BYTE PTR [edx],0x69
 10286b3:	jecxz  0x102867f
 10286b5:	shr    BYTE PTR ds:[ecx-0x6c],cl
 10286b9:	mov    esp,0x6f1bfb06
 10286be:	in     al,dx
 10286bf:	dec    esp
 10286c0:	cmp    DWORD PTR [ebp+0x4c],0x5dfcd40
 10286c7:	and    cl,dl
 10286c9:	adc    BYTE PTR gs:[esi+0x2298013b],dl
 10286d0:	cmp    BYTE PTR ds:0x800cf5e8,ah
 10286d6:	lock mov ah,0xc3
 10286d9:	mov    ah,BYTE PTR [eax]
 10286db:	test   eax,0xd483381c
 10286e0:	jmp    DWORD PTR [edi+0x42571798]
 10286e6:	lea    edi,[edx]
 10286e8:	push   cs
 10286e9:	push   ss
 10286ea:	jle    0x10286cc
 10286ec:	mov    ebp,0xaf65e397
 10286f1:	jp     0x1028700
 10286f3:	cs jns 0x10286e1
 10286f6:	inc    ebp
 10286f7:	cmp    BYTE PTR [ecx-0x2b],ah
 10286fa:	mov    cl,0x7e
 10286fc:	push   ebx
 10286fd:	adc    BYTE PTR [ecx],al
 10286ff:	push   cs
 1028700:	cld    
 1028701:	sub    eax,0xd831bf42
 1028706:	outs   dx,DWORD PTR ds:[esi]
 1028707:	sbb    BYTE PTR [edx],al
 1028709:	sub    al,BYTE PTR [edi-0x58]
 102870c:	leave  
 102870d:	stc    
 102870e:	xor    DWORD PTR [ecx],eax
 1028710:	and    al,ah
 1028712:	ret    
 1028713:	add    al,0x6
 1028715:	cmp    al,0xd
 1028717:	xor    BYTE PTR [ebp+ebp*8-0x4406e040],dl
 102871e:	scas   eax,DWORD PTR es:[edi]
 102871f:	shr    bh,cl
 1028721:	(bad)  
 1028722:	cli    
 1028723:	xchg   ebx,eax
 1028724:	inc    edi
 1028725:	fild   DWORD PTR [ecx+0x20888a7f]
 102872b:	cli    
 102872c:	fld    TBYTE PTR [ecx+edi*2+0x25]
 1028730:	test   al,0xfb
 1028732:	or     eax,0x93dd21ec
 1028737:	or     BYTE PTR [ebx],ch
 1028739:	inc    ecx
 102873a:	lods   al,BYTE PTR ds:[esi]
 102873b:	mov    ds:0xe2430508,al
 1028740:	mov    edx,0x3eec8794
 1028745:	les    ebp,FWORD PTR [esi]
 1028747:	add    BYTE PTR [ebx],bh
 1028749:	cld    
 102874a:	xchg   esp,eax
 102874b:	jecxz  0x1028772
 102874d:	mov    edx,0x818b90fc
 1028752:	push   edx
 1028753:	pop    eax
 1028754:	push   esi
 1028755:	or     BYTE PTR [ebp+0x74],dh
 1028758:	std    
 1028759:	std    
 102875a:	aas    
 102875b:	imul   ebx,esi,0xd26e819f
 1028761:	loop   0x10287d3
 1028763:	and    DWORD PTR [ecx+0x1e],0x76ee07f
 102876a:	mov    al,dh
 102876c:	xchg   edi,eax
 102876d:	out    dx,eax
 102876e:	mov    ecx,0xf57f2f1c
 1028773:	imul   esi,eax,0xffffffce
 1028776:	mov    bh,0xbd
 1028778:	push   ds
 1028779:	(bad)  
 102877a:	scas   eax,DWORD PTR es:[edi]
 102877b:	ds push es
 102877d:	test   al,0x1d
 102877f:	test   al,0xf2
 1028781:	xchg   DWORD PTR [ecx-0x3cbdbc08],ecx
 1028787:	outs   dx,BYTE PTR ds:[esi]
 1028788:	shl    DWORD PTR [eax],0x2b
 102878b:	loopne 0x1028778
 102878d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102878e:	mul    bh
 1028790:	add    eax,0x77e4e506
 1028795:	sbb    al,0x2e
 1028797:	inc    eax
 1028798:	pavgb  mm2,QWORD PTR [ecx+0x6d187390]
 102879f:	pop    es
 10287a0:	(bad)  
 10287a1:	sub    DWORD PTR [ebx-0x420d7618],esp
 10287a7:	xor    ebp,DWORD PTR [edi]
 10287a9:	mov    edx,DWORD PTR [ecx]
 10287ab:	hlt    
 10287ac:	mov    ds:0x73c2e588,eax
 10287b1:	adc    eax,0xe8866840
 10287b6:	sub    eax,0xd6033598
 10287bb:	sub    DWORD PTR [eax],eax
 10287bd:	cdq    
 10287be:	inc    ebx
 10287bf:	inc    ecx
 10287c0:	and    ebx,DWORD PTR [eax+0x7d]
 10287c3:	sbb    dh,ch
 10287c5:	ds jp  0x1028748
 10287c8:	xrelease mov BYTE PTR [edx-0x168dacfc],dh
 10287cf:	sbb    esp,ecx
 10287d1:	or     DWORD PTR [eax+ecx*4+0x571e400],edi
 10287d8:	sbb    BYTE PTR [eax+0x5b],0x20
 10287dc:	shl    dh,cl
 10287de:	jl     0x10287c3
 10287e0:	mov    DWORD PTR [edx-0x28],0xde2108bb
 10287e7:	call   FWORD PTR [esi+0x57f2f1cb]
 10287ed:	std    
 10287ee:	and    DWORD PTR [esi],ebp
 10287f0:	jge    0x10287ed
 10287f2:	sbb    esi,DWORD PTR [ecx-0x1e]
 10287f5:	call   0xbf2a:0xf0263
 10287fc:	ror    BYTE PTR ss:[edi],0x12
 1028800:	and    ch,BYTE PTR [edx]
 1028802:	add    al,0x87
 1028804:	jo     0x10287f5
 1028806:	cld    
 1028807:	or     DWORD PTR [ebx-0x36],eax
 102880a:	stos   DWORD PTR es:[edi],eax
 102880b:	sbb    al,BYTE PTR [eax]
 102880d:	lea    edx,[esi]
 102880f:	add    bh,ch
 1028811:	or     al,0x93
 1028813:	xchg   ebp,eax
 1028814:	xor    esp,DWORD PTR [edi-0x22]
 1028817:	adc    DWORD PTR [edx],edx
 1028819:	xor    BYTE PTR [ebx],dh
 102881b:	jg     0x10287bb
 102881d:	nop
 102881e:	sub    DWORD PTR [esi],eax
 1028820:	addr16 pop esi
 1028822:	gs jb  0x1028851
 1028825:	ret    0x5193
 1028828:	xor    BYTE PTR [eax+edi*8],bh
 102882b:	int    0x60
 102882d:	push   edx
 102882e:	inc    edi
 102882f:	add    BYTE PTR ds:0x388031e2,0x30
 1028836:	push   edi
 1028837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1028838:	aad    0x80
 102883a:	pop    esi
 102883b:	inc    ecx
 102883c:	mov    BYTE PTR [ecx+0x47b02400],bl
 1028842:	mov    al,0x6
 1028844:	xchg   edi,eax
 1028845:	push   ds
 1028846:	mov    al,0xfb
 1028848:	add    ecx,esp
 102884a:	pop    edi
 102884b:	cld    
 102884c:	and    dh,BYTE PTR [eax]
 102884e:	add    ebx,DWORD PTR [edi+ebp*4+0x1d]
 1028852:	loopne 0x102880c
 1028854:	inc    BYTE PTR [ecx]
 1028856:	lahf   
 1028857:	inc    ebp
 1028858:	sbb    dl,dl
 102885a:	es ret 0xdffb
 102885e:	sti    
 102885f:	out    0xb8,eax
 1028861:	call   0xb7e5a033
 1028866:	cmp    ebp,esi
 1028868:	mov    ds,WORD PTR [edi]
 102886a:	and    ch,ah
 102886c:	jmp    0xd9803d3a
 1028871:	pushf  
 1028872:	cmp    DWORD PTR [eax-0x3e],ebp
 1028875:	or     eax,0x17b468a
 102887a:	jle    0x1028852
 102887c:	dec    eax
 102887d:	aam    0xbd
 102887f:	jmp    0x7c1433fa
 1028884:	mov    dh,0xcc
 1028886:	cld    
 1028887:	popa   
 1028888:	push   cs
 1028889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102888b:	aaa    
 102888c:	mov    ebp,0xd24d71d4
 1028891:	mov    ecx,0xe425b310
 1028896:	cs add eax,0xedd6e3bb
 102889c:	outs   dx,DWORD PTR ds:[esi]
 102889d:	loopne 0x10288a6
 102889f:	nop
 10288a0:	arpl   WORD PTR [eax],ax
 10288a2:	test   BYTE PTR [eax+0x829e96f],0x0
 10288a9:	fwait
 10288aa:	mov    esp,0x2c91a013
 10288af:	ds mov ecx,0x560fe1f4
 10288b5:	or     BYTE PTR [ecx-0xd1c5c00],dh
 10288bb:	or     BYTE PTR [ebp+0x48],bh
 10288be:	cmp    BYTE PTR [ebp+0xd],cl
 10288c1:	es in  eax,0x1
 10288c4:	cmp    BYTE PTR [eax],bh
 10288c6:	and    bh,ah
 10288c8:	lds    ebx,FWORD PTR [edi-0x42e8e441]
 10288ce:	stc    
 10288cf:	xchg   edx,eax
 10288d0:	mov    al,ds:0xebf00204
 10288d5:	cmp    ah,BYTE PTR [ebp+0x793e0b55]
 10288db:	sti    
 10288dc:	jo     0x10288ab
 10288de:	push   ds
 10288df:	retf   
 10288e0:	loopne 0x10288e2
 10288e2:	xor    dh,dl
 10288e4:	add    BYTE PTR [esi-0x2a],bh
 10288e7:	enter  0xeb09,0xae
 10288eb:	pop    ds
 10288ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10288ed:	in     eax,0xbc
 10288ef:	sub    dl,0xc3
 10288f2:	xchg   edi,eax
 10288f3:	ror    BYTE PTR [esp],0x10
 10288f7:	aaa    
 10288f8:	mov    fs:0x5ee66c2,eax
 10288fe:	push   edx
 10288ff:	pop    esi
 1028900:	xor    bl,BYTE PTR [eax+0x61942a9d]
 1028906:	out    0xe4,al
 1028908:	sbb    BYTE PTR [eax+0x20f73c9f],al
 102890e:	inc    edx
 102890f:	mov    dl,0xc8
 1028911:	in     al,dx
 1028912:	xchg   esi,eax
 1028913:	xor    esi,DWORD PTR [eax-0x7]
 1028916:	inc    esp
 1028917:	fbstp  TBYTE PTR [esp+esi*8+0x27ead96]
 102891e:	outs   dx,DWORD PTR ds:[esi]
 102891f:	jb     0x1028920
 1028921:	mov    ebp,0x7cdde042
 1028926:	jne    0x1028918
 1028928:	sub    bl,al
 102892a:	fwait
 102892b:	mov    BYTE PTR [edx+0x29],cl
 102892e:	out    dx,al
 102892f:	call   0xe886a7c7
 1028934:	mov    ebx,?
 1028936:	add    eax,DWORD PTR [eax+0x72fbbcf7]
 102893c:	mov    esp,0xe097cdfe
 1028941:	mov    dh,0x3b
 1028943:	out    dx,al
 1028944:	add    ch,BYTE PTR [eax]
 1028946:	lods   eax,DWORD PTR ds:[esi]
 1028947:	and    eax,0x141ed688
 102894c:	ds inc esp
 102894e:	dec    edx
 102894f:	bound  ebp,QWORD PTR [edi+0x41]
 1028952:	inc    ebx
 1028953:	test   esi,ecx
 1028955:	adc    ecx,DWORD PTR ds:0x2380dbe9
 102895b:	pop    ss
 102895c:	pusha  
 102895d:	sub    BYTE PTR [edx+ebp*4+0x5d],ah
 1028961:	sbb    dh,BYTE PTR [ebp+0x7e]
 1028964:	sub    eax,0x1768bfd6
 1028969:	mov    esp,0x8d3530c1
 102896e:	cld    
 102896f:	inc    esi
 1028970:	sub    ebp,DWORD PTR [edx-0x6]
 1028973:	add    bl,cl
 1028975:	daa    
 1028976:	rep ins BYTE PTR es:[edi],dx
 1028978:	call   0x2406:0x3588a956
 102897f:	cmp    bh,dl
 1028981:	sar    BYTE PTR [ebx],cl
 1028983:	mov    BYTE PTR [ebx],bl
 1028985:	ins    DWORD PTR es:[edi],dx
 1028986:	and    BYTE PTR [eax+0x7cbec40a],al
 102898c:	leave  
 102898d:	add    ecx,DWORD PTR [eax-0x14b776fd]
 1028993:	add    dl,BYTE PTR [edx+0x7932795]
 1028999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102899a:	jl     0x102892c
 102899c:	shl    bh,cl
 102899e:	cmp    ebx,edi
 10289a0:	sbb    ah,BYTE PTR [edx+0x40]
 10289a3:	rol    DWORD PTR [edi],1
 10289a5:	add    al,0x91
 10289a7:	out    dx,eax
 10289a8:	jecxz  0x1028969
 10289aa:	sti    
 10289ab:	repnz retf 
 10289ad:	icebp  
 10289ae:	cli    
 10289af:	mov    bh,0x5c
 10289b1:	sbb    BYTE PTR [ebx-0x12],0xb8
 10289b5:	or     esi,DWORD PTR ds:0x1bd8e611
 10289bb:	and    al,bh
 10289bd:	repz push es
 10289bf:	and    DWORD PTR [edx-0x7de20400],edi
 10289c5:	add    edx,eax
 10289c7:	arpl   WORD PTR [eax+eiz*1-0x38],si
 10289cb:	popa   
 10289cc:	dec    esi
 10289cd:	or     dh,BYTE PTR [edi-0x70973ff]
 10289d3:	sub    eax,0x22275e16
 10289d8:	cmp    BYTE PTR [ebx],dl
 10289da:	pop    es
 10289db:	cmp    cl,BYTE PTR [edx-0xf]
 10289de:	aaa    
 10289df:	push   ebx
 10289e0:	push   es
 10289e1:	test   DWORD PTR [ecx-0x4fb11200],eax
 10289e7:	mov    dl,0xc9
 10289e9:	cwde   
 10289ea:	mov    ch,0x7c
 10289ec:	xchg   DWORD PTR [ebx],ecx
 10289ee:	unpcklps xmm6,XMMWORD PTR [ecx-0x1a7b6fe5]
 10289f5:	xchg   edi,eax
 10289f6:	jno    0x10289c0
 10289f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10289f9:	(bad)  
 10289fb:	les    edi,FWORD PTR [eax-0x7058432f]
 1028a01:	jl     0x1028a53
 1028a03:	dec    edx
 1028a04:	mov    ds:0x7ab95226,eax
 1028a09:	iret   
 1028a0a:	and    DWORD PTR [edi+ecx*4-0x7fe38509],eax
 1028a11:	adc    BYTE PTR [esi+0x508994a4],0x48
 1028a18:	mov    BYTE PTR [edi],bl
 1028a1a:	sbb    BYTE PTR [ecx+0x0],dh
 1028a1d:	fdivrp st(5),st
 1028a1f:	scas   al,BYTE PTR es:[edi]
 1028a20:	ja     0x1028a03
 1028a22:	or     eax,0x6e27796f
 1028a27:	mov    ebx,0x2a544363
 1028a2c:	or     al,0x7a
 1028a2e:	(bad)  
 1028a2f:	loopne 0x10289b8
 1028a31:	call   FWORD PTR [esi]
 1028a33:	leave  
 1028a34:	out    0x4f,eax
 1028a36:	syscall 
 1028a38:	lea    ecx,[esi]
 1028a3a:	add    al,0x39
 1028a3c:	int3   
 1028a3d:	leave  
 1028a3e:	pop    edx
 1028a3f:	jns    0x1028a81
 1028a41:	or     BYTE PTR [edx+0x23c401cb],ch
 1028a47:	repz rcr eax,1
 1028a4a:	push   edx
 1028a4b:	(bad)  
 1028a4c:	scas   al,BYTE PTR es:[edi]
 1028a4d:	mov    DWORD PTR [eax+eiz*2],esp
 1028a50:	jecxz  0x10289f1
 1028a52:	pop    ebp
 1028a53:	in     al,0x43
 1028a55:	and    BYTE PTR ss:[eax+0x54],0xf2
 1028a5a:	dec    esp
 1028a5b:	inc    edx
 1028a5c:	jg     0x10289e2
 1028a5e:	ja     0x1028a95
 1028a60:	outs   dx,DWORD PTR ds:[esi]
 1028a61:	push   es
 1028a62:	loop   0x1028a62
 1028a64:	jbe    0x1028a66
 1028a66:	ja     0x1028abc
 1028a68:	add    al,0x75
 1028a6a:	in     al,dx
 1028a6b:	add    BYTE PTR [edi+esi*2],ah
 1028a6e:	popf   
 1028a6f:	nop
 1028a70:	jbe    0x1028a68
 1028a72:	lds    ebp,FWORD PTR [ebp+ebx*4+0x56]
 1028a76:	xor    BYTE PTR [eax-0x22778dfd],dl
 1028a7c:	or     DWORD PTR [esi+0xf],ebx
 1028a7f:	pusha  
 1028a80:	lldt   WORD PTR [ecx+0x3c]
 1028a84:	test   BYTE PTR [ebx+0x4e],ch
 1028a87:	dec    eax
 1028a88:	jle    0x1028ace
 1028a8a:	test   bh,bl
 1028a8c:	cmp    DWORD PTR [edx],eax
 1028a8e:	cs mov ebx,0xfd785df4
 1028a94:	pop    ebx
 1028a95:	lds    ebp,FWORD PTR cs:[ebp-0x18779049]
 1028a9c:	add    eax,0xd712afca
 1028aa1:	mov    ch,0x8b
 1028aa3:	daa    
 1028aa4:	or     al,0xd
 1028aa6:	rol    BYTE PTR [esi+ecx*4-0x3a],cl
 1028aaa:	add    BYTE PTR [esi],cl
 1028aac:	xor    ebp,DWORD PTR [edx]
 1028aae:	js     0x1028a84
 1028ab0:	or     DWORD PTR [eax+eax*2],ecx
 1028ab3:	sbb    cl,ah
 1028ab5:	or     ebx,DWORD PTR [esi-0x661e96c0]
 1028abb:	add    al,0xab
 1028abd:	add    ah,BYTE PTR [ecx+0x78]
 1028ac0:	push   ecx
 1028ac1:	adc    al,0x4f
 1028ac3:	push   ss
 1028ac4:	js     0x1028a79
 1028ac6:	or     BYTE PTR [eax-0x47],0xea
 1028aca:	add    eax,0x3fd2f4fe
 1028acf:	add    edx,DWORD PTR [ebx+eiz*8+0x56]
 1028ad3:	nop
 1028ad4:	pop    ecx
 1028ad5:	or     DWORD PTR [eax],ebx
 1028ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1028ad8:	hlt    
 1028ad9:	push   0x51
 1028adb:	ds out dx,al
 1028add:	xchg   ebx,eax
 1028ade:	repz jg 0x1028b05
 1028ae1:	jle    0x1028b2c
 1028ae3:	mov    WORD PTR ds:0x25002fc4,es
 1028ae9:	gs and bl,ch
 1028aec:	inc    ah
 1028aee:	xor    DWORD PTR [esi-0x5],0xffffff99
 1028af2:	das    
 1028af3:	jmp    0x1028b02
 1028af5:	inc    esp
 1028af6:	pop    DWORD PTR [edx+0x78]
 1028af9:	sub    al,0x91
 1028afb:	iret   
 1028afc:	jo     0x1028b75
 1028afe:	fldenv [ebp+0x6f0de197]
 1028b04:	jge    0x1028b2d
 1028b06:	outs   dx,BYTE PTR ds:[esi]
 1028b07:	mov    ebp,0x4fc12efd
 1028b0c:	call   0x3490:0x632f6019
 1028b13:	pushf  
 1028b14:	scas   eax,DWORD PTR es:[edi]
 1028b15:	add    ecx,DWORD PTR [ebx-0x5cb816fa]
 1028b1b:	in     eax,dx
 1028b1c:	ror    BYTE PTR [edi+0x189e229c],0xdc
 1028b23:	add    BYTE PTR [edi],0xb2
 1028b26:	xor    eax,0x68092edd
 1028b2b:	and    al,0x4a
 1028b2d:	out    dx,eax
 1028b2e:	bound  ebx,QWORD PTR [edx]
 1028b30:	loop   0x1028acf
 1028b32:	or     eax,0x871f359f
 1028b37:	punpckhwd mm7,QWORD PTR [ebx]
 1028b3a:	add    eax,0x9376915e
 1028b3f:	pop    ss
 1028b40:	and    bl,dh
 1028b42:	xor    dh,BYTE PTR [ebx]
 1028b44:	add    cl,BYTE PTR [esi-0x50e52d28]
 1028b4a:	add    al,0x62
 1028b4c:	pop    es
 1028b4d:	pop    ds
 1028b4e:	sub    eax,DWORD PTR [esp]
 1028b51:	inc    eax
 1028b52:	cli    
 1028b53:	mul    ecx
 1028b55:	xchg   edi,eax
 1028b56:	fisttp WORD PTR [ecx]
 1028b58:	(bad)  
 1028b59:	and    ch,ch
 1028b5b:	add    DWORD PTR [eax+0x2],eax
 1028b5e:	cmp    al,BYTE PTR [ebx+0x69517999]
 1028b64:	push   0xffffff86
 1028b66:	in     eax,dx
 1028b67:	add    ah,BYTE PTR [edx-0x675fea2c]
 1028b6d:	(bad)  
 1028b6e:	sub    al,0xf4
 1028b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1028b71:	out    dx,eax
 1028b72:	mov    esp,0xfebd170c
 1028b77:	jne    0x1028b31
 1028b79:	clc    
 1028b7a:	lods   eax,DWORD PTR ds:[esi]
 1028b7b:	pop    ss
 1028b7c:	popa   
 1028b7d:	in     eax,dx
 1028b7e:	icebp  
 1028b7f:	stos   DWORD PTR es:[edi],eax
 1028b80:	hlt    
 1028b81:	jmp    0x3440:0x640f0840
 1028b88:	fimul  DWORD PTR [esi]
 1028b8a:	jl     0x1028bc4
 1028b8c:	xchg   ecx,eax
 1028b8d:	mov    ah,0xd0
 1028b8f:	dec    esi
 1028b90:	add    bh,al
 1028b92:	pop    eax
 1028b93:	ins    DWORD PTR es:[edi],dx
 1028b94:	xor    eax,0xf25ec7
 1028b99:	dec    eax
 1028b9a:	sbb    esi,ebx
 1028b9c:	jl     0x1028bf7
 1028b9e:	scas   al,BYTE PTR es:[edi]
 1028b9f:	leave  
 1028ba0:	push   ebx
 1028ba1:	in     eax,dx
 1028ba2:	or     esp,DWORD PTR [eax-0x11]
 1028ba5:	ret    0x835
 1028ba8:	xor    cl,BYTE PTR [ecx]
 1028baa:	lsl    eax,WORD PTR [edx+0x2a3710c7]
 1028bb1:	adc    BYTE PTR [ecx],bl
 1028bb3:	into   
 1028bb4:	mov    cl,0x9b
 1028bb6:	sub    al,0x14
 1028bb8:	inc    eax
 1028bb9:	add    al,0xad
 1028bbb:	dec    esi
 1028bbc:	xchg   edi,eax
 1028bbd:	inc    eax
 1028bbe:	jle    0x1028c0d
 1028bc0:	cmp    eax,0x6f667592
 1028bc5:	and    DWORD PTR [ecx+0x24],edi
 1028bc8:	add    eax,0xffbb43c0
 1028bcd:	add    al,0xff
 1028bcf:	and    BYTE PTR [esi-0x18c353d7],ah
 1028bd5:	adc    eax,0x51a0f
 1028bda:	ds or  al,0x14
 1028bdd:	jmp    0x48f48f80
 1028be2:	inc    edi
 1028be3:	cmp    al,bh
 1028be5:	and    eax,0x378a5c97
 1028bea:	mov    esp,0xfc5c22e1
 1028bef:	push   ss
 1028bf0:	scas   eax,DWORD PTR es:[edi]
 1028bf1:	add    al,0x28
 1028bf3:	sub    al,0x3
 1028bf5:	scas   al,BYTE PTR es:[edi]
 1028bf6:	popf   
 1028bf7:	push   edx
 1028bf9:	push   eax
 1028bfa:	pop    ecx
 1028bfb:	sub    ecx,esi
 1028bfd:	jge    0x397e9ac1
 1028c03:	adc    DWORD PTR [edi-0x1f4edc5a],ebp
 1028c09:	dec    esi
 1028c0a:	lods   al,BYTE PTR ds:[esi]
 1028c0b:	mov    dh,0x53
 1028c0d:	outs   dx,BYTE PTR ds:[esi]
 1028c0e:	mov    edx,0xd4997970
 1028c13:	pop    esp
 1028c14:	aas    
 1028c15:	aas    
 1028c16:	or     DWORD PTR [eax+0x8cb9057],0x7e
 1028c1d:	pop    es
 1028c1e:	cmc    
 1028c1f:	icebp  
 1028c20:	(bad)  
 1028c21:	sbb    ah,dl
 1028c23:	push   0x12
 1028c25:	in     al,0x53
 1028c27:	lea    ecx,[eax]
 1028c29:	jno    0x1028c4e
 1028c2b:	pop    ebx
 1028c2c:	loope  0x1028c6b
 1028c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1028c2f:	xchg   edi,eax
 1028c30:	xchg   edx,eax
 1028c31:	pusha  
 1028c32:	add    eax,0x10d9fa10
 1028c37:	pusha  
 1028c38:	push   esi
 1028c39:	loopne 0x1028c87
 1028c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1028c3c:	add    BYTE PTR [ebx-0x68],dh
 1028c3f:	je     0x1028c6b
 1028c41:	xor    BYTE PTR [ecx+0x25],ch
 1028c44:	adc    BYTE PTR [edi-0x4],cl
 1028c47:	dec    ecx
 1028c48:	fld    QWORD PTR [ebp-0x1bd0b448]
 1028c4e:	test   DWORD PTR [eax+0x172298e5],edi
 1028c54:	mov    ch,0x4a
 1028c56:	sub    ebp,DWORD PTR [esp+edx*1-0x7e]
 1028c5a:	hlt    
 1028c5b:	push   ds
 1028c5c:	xchg   edx,eax
 1028c5d:	xor    cl,BYTE PTR [eax-0x23]
 1028c60:	xchg   ebx,eax
 1028c61:	(bad)
 1028c65:	pop    edi
 1028c66:	xchg   BYTE PTR [edi],dh
 1028c68:	mov    esi,0x72dc52ed
 1028c6d:	sti    
 1028c6e:	xchg   BYTE PTR [ebx+edi*2],dh
 1028c71:	push   ecx
 1028c72:	push   ebx
 1028c73:	dec    esp
 1028c74:	addr16 push eax
 1028c76:	xor    al,0xda
 1028c78:	push   cs
 1028c79:	jl     0x1028c13
 1028c7b:	adc    BYTE PTR [ecx-0x48e286a1],cl
 1028c81:	xchg   edi,eax
 1028c82:	xor    ecx,eax
 1028c84:	cmp    BYTE PTR [eax-0x5d4d6900],al
 1028c8a:	and    eax,0x800b33f9
 1028c8f:	push   esp
 1028c90:	ja     0x1028cd2
 1028c92:	add    cl,BYTE PTR [edi-0x6ffa40f0]
 1028c98:	lods   eax,DWORD PTR ds:[esi]
 1028c99:	add    edx,DWORD PTR [eax]
 1028c9b:	xlat   BYTE PTR ds:[ebx]
 1028c9c:	out    0x1b,al
 1028c9e:	popf   
 1028c9f:	sbb    DWORD PTR [eax+0x38],edx
 1028ca2:	dec    esp
 1028ca3:	add    al,0x70
 1028ca5:	js     0x1028c4f
 1028ca7:	xchg   edi,eax
 1028ca8:	add    dl,BYTE PTR [ebx+0x4]
 1028cab:	dec    ebp
 1028cac:	pushf  
 1028cad:	dec    ebx
 1028cae:	out    0x7e,eax
 1028cb0:	jne    0x1028d12
 1028cb2:	inc    esi
 1028cb3:	or     DWORD PTR [esi],0xd7f00bc9
 1028cb9:	dec    esi
 1028cba:	(bad)  
 1028cbb:	rcr    DWORD PTR [esi],cl
 1028cbd:	and    ah,0xcb
 1028cc0:	aas    
 1028cc1:	stos   DWORD PTR es:[edi],eax
 1028cc2:	int    0x18
 1028cc4:	add    esp,edi
 1028cc6:	(bad)  
 1028cc7:	fdiv   DWORD PTR [edi+0x7]
 1028cca:	inc    edx
 1028ccb:	ja     0x1028ccd
 1028ccd:	jb     0x1028c5c
 1028ccf:	inc    eax
 1028cd0:	repnz push ds
 1028cd2:	repnz cli 
 1028cd4:	and    al,0x5c
 1028cd6:	jl     0x1028cc9
 1028cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1028cd9:	js     0x1028cbe
 1028cdb:	fld    TBYTE PTR [esi]
 1028cdd:	(bad)
 1028ce0:	fsubrp st(1),st
 1028ce2:	pop    es
 1028ce3:	push   es
 1028ce4:	jecxz  0x1028cd2
 1028ce6:	(bad)
 1028ce9:	shr    BYTE PTR [eax+0x3b],0xf0
 1028ced:	add    ah,BYTE PTR [esi]
 1028cef:	scas   al,BYTE PTR es:[edi]
 1028cf0:	imul   edi,DWORD PTR cs:[eax-0x1133345b],0x7874839
 1028cfb:	test   BYTE PTR [ebp-0x3d648e6b],dl
 1028d01:	call   0x76dd:0x823a8b4c
 1028d08:	loope  0x1028d67
 1028d0a:	xchg   esp,eax
 1028d0b:	sti    
 1028d0c:	or     al,0xc9
 1028d0e:	and    edx,DWORD PTR [ecx+0x2f8a075d]
 1028d14:	je     0x1028cd4
 1028d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1028d17:	and    al,0xa2
 1028d19:	xchg   ebp,eax
 1028d1a:	push   ss
 1028d1b:	in     eax,0x90
 1028d1d:	push   esi
 1028d1e:	push   ss
 1028d1f:	add    al,0xfd
 1028d21:	pop    esi
 1028d22:	add    BYTE PTR [edi+edi*2-0x60],bl
 1028d26:	inc    ebx
 1028d27:	idiv   bh
 1028d29:	cmp    DWORD PTR [eax+esi*8+0x5730800e],ebx
 1028d30:	das    
 1028d31:	ret    
 1028d32:	test   DWORD PTR [ebp+0x1fafce02],edi
 1028d38:	test   al,0xf9
 1028d3a:	ds push ss
 1028d3c:	ds pushf 
 1028d3e:	push   ecx
 1028d3f:	add    BYTE PTR [edi-0x56c05382],bl
 1028d45:	adc    BYTE PTR [ecx+edi*1+0x2f],al
 1028d49:	mov    esi,0xf1bc52f8
 1028d4e:	lea    edx,[edi]
 1028d50:	loope  0x1028d34
 1028d52:	aas    
 1028d53:	jns    0x1028d72
 1028d55:	(bad)  
 1028d56:	sahf   
 1028d57:	mov    ah,0x1a
 1028d59:	push   esp
 1028d5a:	jb     0x1028d1f
 1028d5c:	out    0x91,al
 1028d5e:	inc    esi
 1028d5f:	fild   DWORD PTR [ecx+0x70492817]
 1028d65:	dec    eax
 1028d66:	inc    ebp
 1028d67:	and    BYTE PTR [ebp-0x405dfc7],ch
 1028d6d:	ret    0xc7ea
 1028d70:	jle    0x1028d2c
 1028d72:	dec    ebp
 1028d73:	retf   
 1028d74:	mov    ds:0x328724be,al
 1028d79:	adc    esi,esi
 1028d7b:	sub    BYTE PTR [edx],cl
 1028d7d:	stc    
 1028d7e:	retf   0xa2eb
 1028d81:	cmp    eax,0x928d0313
 1028d86:	xchg   ecx,eax
 1028d87:	adc    DWORD PTR [ecx],0x7d
 1028d8a:	dec    BYTE PTR [edx+0x78]
 1028d8d:	sbb    dh,BYTE PTR [ecx+0x774489f7]
 1028d93:	ds es daa 
 1028d96:	mov    edx,0xed198007
 1028d9b:	ja     0x1028df7
 1028d9d:	imul   ecx,eax,0x417f42f4
 1028da3:	pop    ecx
 1028da4:	jge    0x1028db4
 1028da6:	and    BYTE PTR [eax-0x53],bh
 1028da9:	mov    ds:0xb6e20096,eax
 1028dae:	in     al,0xf0
 1028db0:	mov    fs,WORD PTR [edx+0x20]
 1028db3:	push   ecx
 1028db4:	pop    es
 1028db5:	cs in  eax,0x2f
 1028db8:	mov    DWORD PTR [ebp-0xd21c440],edx
 1028dbe:	pop    edx
 1028dbf:	pushf  
 1028dc0:	jl     0x1028dbe
 1028dc2:	call   0x4347:0x4381a883
 1028dc9:	(bad)  [esi]
 1028dcb:	cld    
 1028dcc:	sar    DWORD PTR [edi-0x5a17d47],0x9b
 1028dd3:	dec    edi
 1028dd4:	sbb    ebp,DWORD PTR [ebp+0x7]
 1028dd7:	jle    0x1028d7d
 1028dd9:	and    al,0x91
 1028ddb:	cs movs DWORD PTR es:[edi],DWORD PTR cs:[esi]
 1028dde:	or     ebp,ebp
 1028de0:	les    esp,FWORD PTR [eax]
 1028de2:	and    BYTE PTR [edi],bh
 1028de4:	retf   
 1028de5:	dec    esp
 1028de6:	test   eax,0xc0695a01
 1028deb:	dec    edi
 1028dec:	dec    ebp
 1028ded:	sti    
 1028dee:	xchg   ecx,eax
 1028def:	push   ds
 1028df0:	or     BYTE PTR [ebx+edx*2+0x73],dl
 1028df4:	or     eax,0xe2609f16
 1028df9:	lock mov ch,0xf1
 1028dfc:	dec    edx
 1028dfd:	fs mov ecx,0x820c5cf8
 1028e03:	dec    esi
 1028e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1028e05:	push   esp
 1028e06:	or     eax,0x41d45fc
 1028e0b:	stos   DWORD PTR es:[edi],eax
 1028e0c:	sbb    al,0x5d
 1028e0e:	(bad)  
 1028e0f:	push   eax
 1028e10:	imul   bx,cx,0x62d3
 1028e15:	push   ds
 1028e16:	and    al,0x4b
 1028e18:	sbb    al,0x5d
 1028e1a:	jle    0x1028e19
 1028e1c:	retf   
 1028e1d:	stos   DWORD PTR es:[edi],eax
 1028e1e:	repz adc dl,BYTE PTR [eax+0x35]
 1028e22:	test   al,0xe3
 1028e24:	mov    esp,0xb8fcfc7d
 1028e29:	dec    eax
 1028e2a:	and    esi,edx
 1028e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1028e2d:	pop    es
 1028e2e:	sub    BYTE PTR [ebx+0x426a2a82],ah
 1028e34:	dec    edi
 1028e35:	dec    ecx
 1028e36:	or     DWORD PTR [esi+ecx*1+0x340e5c83],edi
 1028e3d:	pushf  
 1028e3e:	imul   eax,eax,0x7f81d7d1
 1028e44:	and    dl,BYTE PTR [edx-0x25]
 1028e47:	jne    0x1028e6a
 1028e49:	add    al,0x55
 1028e4b:	push   cs
 1028e4c:	mov    esi,0x3408fb85
 1028e51:	fld    TBYTE PTR [edi-0x79]
 1028e54:	(bad)  
 1028e55:	add    eax,0xf2006f25
 1028e5a:	sbb    eax,0xf27d1107
 1028e5f:	cmp    BYTE PTR [ebx+0x690e1560],dh
 1028e65:	jbe    0x1028de7
 1028e67:	add    al,0xe8
 1028e69:	fdiv   DWORD PTR ds:0xc9058a91
 1028e6f:	and    eax,0x19
 1028e72:	add    cl,cl
 1028e74:	xchg   edi,eax
 1028e75:	push   edx
 1028e76:	push   es
 1028e77:	and    dl,cl
 1028e79:	sti    
 1028e7a:	mov    bh,0xee
 1028e7c:	cmp    DWORD PTR [eax+0x55],edx
 1028e7f:	cmp    eax,0xefce7262
 1028e84:	iret   
 1028e85:	inc    edi
 1028e86:	or     ebp,DWORD PTR [eax+0x31]
 1028e89:	add    eax,DWORD PTR [ebx]
 1028e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1028e8c:	(bad)  
 1028e8d:	jg     0x1028e77
 1028e8f:	jge    0x1028e89
 1028e91:	popf   
 1028e92:	fistp  QWORD PTR [ebx+0x15]
 1028e95:	dec    esi
 1028e96:	cmp    al,0xe9
 1028e98:	test   BYTE PTR [ecx+0x75b439e5],al
 1028e9e:	add    BYTE PTR [ebx],ah
 1028ea0:	cmp    bh,BYTE PTR [eax+0x62]
 1028ea3:	stc    
 1028ea4:	mov    bh,0x22
 1028ea6:	sub    DWORD PTR [ecx-0x555dfda7],eax
 1028eac:	out    0x26,al
 1028eae:	jmp    0x1028e7c
 1028eb0:	push   ss
 1028eb1:	rol    DWORD PTR [edx],1
 1028eb3:	push   eax
 1028eb4:	xor    BYTE PTR [esp+eiz*4+0x102bd824],0x5e
 1028ebc:	test   DWORD PTR ds:0x2ccb8c7f,eax
 1028ec2:	dec    eax
 1028ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1028ec4:	fs mov ebp,0x34f680a
 1028eca:	mov    ch,0x38
 1028ecc:	xor    BYTE PTR [ebx-0x5c],dl
 1028ecf:	jno    0x1028e97
 1028ed1:	xor    ebx,DWORD PTR [esi+0xeaaafdf]
 1028ed7:	or     edi,DWORD PTR [edx+0x6bbcef3]
 1028edd:	xchg   esi,eax
 1028ede:	xlat   BYTE PTR ds:[ebx]
 1028edf:	jo     0x1028ef5
 1028ee1:	ror    BYTE PTR [eax],0xff
 1028ee4:	pop    es
 1028ee5:	dec    ebp
 1028ee6:	(bad)  
 1028ee7:	test   DWORD PTR [esi-0x75cce40],ecx
 1028eed:	rcl    DWORD PTR fs:[edi+0x48],1
 1028ef1:	test   al,0x34
 1028ef3:	aaa    
 1028ef4:	scas   eax,DWORD PTR es:[edi]
 1028ef5:	xchg   esp,eax
 1028ef6:	inc    esi
 1028ef7:	and    DWORD PTR [esi+0x66f2818b],edi
 1028efd:	adc    ebx,eax
 1028eff:	xchg   eax,eax
 1028f01:	jne    0x1028ea9
 1028f03:	add    al,0x6c
 1028f05:	ds in  al,dx
 1028f07:	or     DWORD PTR [eax+0xf3680dd],ebp
 1028f0d:	ror    ebp,cl
 1028f0f:	add    DWORD PTR [eax-0x36074055],eax
 1028f15:	inc    esi
 1028f16:	fst    DWORD PTR [ecx+0x570545e9]
 1028f1c:	test   al,0x93
 1028f1e:	in     al,dx
 1028f1f:	pop    ebp
 1028f20:	push   ebx
 1028f21:	jp     0x1028ebf
 1028f23:	mov    bh,0xac
 1028f25:	pop    ss
 1028f26:	xor    al,cl
 1028f28:	popf   
 1028f29:	push   ecx
 1028f2a:	xor    BYTE PTR [esi],0x1f
 1028f2d:	rcr    ebp,1
 1028f2f:	xchg   ecx,eax
 1028f30:	retf   0x94ba
 1028f33:	(bad)  
 1028f34:	jl     0x1028f26
 1028f36:	jmp    0x50be:0xab865cb7
 1028f3d:	out    0xeb,al
 1028f3f:	push   eax
 1028f40:	shr    DWORD PTR [eax+0x33],cl
 1028f43:	ror    BYTE PTR [edi+0x19],1
 1028f46:	adc    eax,0xebbac6ba
 1028f4b:	out    dx,eax
 1028f4c:	hlt    
 1028f4d:	cmp    eax,0xcb281ba9
 1028f52:	sub    eax,0x509ca5fb
 1028f57:	rcl    ebp,1
 1028f59:	pop    ss
 1028f5a:	out    dx,eax
 1028f5b:	xchg   ebp,eax
 1028f5c:	out    0xc0,eax
 1028f5e:	fiadd  WORD PTR [ecx-0x36b82cf4]
 1028f64:	fdivr  DWORD PTR [edx+esi*4+0x421bb297]
 1028f6b:	jns    0x1028f66
 1028f6d:	in     al,0x8d
 1028f6f:	call   0xd902:0xce53238e
 1028f76:	lods   eax,DWORD PTR ds:[esi]
 1028f77:	leave  
 1028f78:	xor    ch,BYTE PTR [ebp+0x39]
 1028f7b:	retf   0x75cf
 1028f7e:	out    0xc4,al
 1028f80:	mov    ebp,0x6df2c1e2
 1028f85:	inc    esi
 1028f86:	pop    edx
 1028f87:	push   ebp
 1028f88:	not    BYTE PTR [edx+0x2a7932f]
 1028f8e:	mov    esp,0x1957ae83
 1028f93:	sahf   
 1028f94:	mov    al,ds:0x80396737
 1028f99:	xor    ah,BYTE PTR [esi]
 1028f9b:	out    0x8f,al
 1028f9d:	inc    esi
 1028f9e:	jnp    0x1028fa1
 1028fa0:	jle    0x1028f6c
 1028fa2:	sub    BYTE PTR [edx],cl
 1028fa4:	sbb    BYTE PTR [ecx],ah
 1028fa6:	mov    bl,0xa4
 1028fa8:	jno    0x1028f48
 1028faa:	pop    ebp
 1028fab:	mov    edx,0x8522af9
 1028fb0:	dec    ebx
 1028fb1:	leave  
 1028fb2:	and    dl,BYTE PTR [edi]
 1028fb4:	lea    ebx,[esp+edx*1+0x521a42ba]
 1028fbb:	jns    0x1029021
 1028fbd:	js     0x1028f72
 1028fbf:	or     ah,BYTE PTR [ecx+0x7419bde9]
 1028fc5:	test   BYTE PTR [ebp+edx*1+0x65f4b261],bh
 1028fcc:	push   edi
 1028fcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1028fce:	nop
 1028fcf:	jbe    0x1029010
 1028fd1:	or     ebx,DWORD PTR [edx+0x4a]
 1028fd4:	or     eax,DWORD PTR [eax-0x1d]
 1028fd7:	jle    0x1028fe0
 1028fd9:	adc    eax,0xcb9d959f
 1028fde:	lahf   
 1028fdf:	test   eax,0x2af3c278
 1028fe4:	gs daa 
 1028fe6:	jecxz  0x1028fae
 1028fe8:	outs   dx,BYTE PTR ds:[esi]
 1028fe9:	pop    ebx
 1028fea:	leave  
 1028feb:	adc    ebp,DWORD PTR [ecx]
 1028fed:	sub    BYTE PTR [esi+0x47f307e6],cl
 1028ff3:	inc    ebx
 1028ff4:	cmp    dl,BYTE PTR [ecx]
 1028ff6:	push   0xc91403e4
 1028ffb:	dec    eax
 1028ffc:	jae    0x1028fa7
 1028ffe:	xchg   esi,eax
 1028fff:	loop   0x102900f
 1029001:	sub    eax,DWORD PTR ds:[ecx+0x5a34b022]
 1029008:	inc    ebp
 1029009:	dec    ebx
 102900a:	call   0x46fe4b9f
 102900f:	mov    ah,0xa7
 1029011:	hlt    
 1029012:	call   0x5e54:0xb52e95d8
 1029019:	xor    dl,BYTE PTR [eax+0x1812de35]
 102901f:	dec    ebp
 1029020:	ret    0xad6f
 1029023:	loop   0x1028fa6
 1029025:	test   al,0xe4
 1029027:	icebp  
 1029028:	mov    al,0xc2
 102902a:	push   esp
 102902b:	popa   
 102902c:	sbb    al,BYTE PTR [edi+ecx*4-0x43]
 1029030:	stos   DWORD PTR es:[edi],eax
 1029031:	add    ebp,DWORD PTR [ecx]
 1029033:	sbb    DWORD PTR [ecx-0x5a77eb34],ebp
 1029039:	test   esp,0x7244848a
 102903f:	push   ss
 1029040:	lock mov dl,0x32
 1029043:	nop
 1029044:	loop   0x1028fda
 1029046:	xchg   esp,eax
 1029047:	into   
 1029048:	jl     0x102901c
 102904a:	nop
 102904b:	push   es
 102904c:	add    DWORD PTR [edi+0x54],eax
 102904f:	and    bh,BYTE PTR [ebx+0x0]
 1029052:	xchg   DWORD PTR ds:0xc647975d,edi
 1029058:	add    DWORD PTR [esi+ebp*4-0x41],esp
 102905c:	les    ecx,FWORD PTR [ecx-0x5d]
 102905f:	cld    
 1029060:	enter  0xba4e,0xfc
 1029064:	in     eax,0xdb
 1029066:	inc    edx
 1029067:	(bad)  
 1029068:	int3   
 1029069:	call   0x606a:0x79192437
 1029070:	ret    0x84e8
 1029073:	iretw  
 1029075:	inc    edx
 1029076:	or     al,0x46
 1029078:	fisubr DWORD PTR [ecx]
 102907a:	rcl    DWORD PTR [edx+0x5a],0xf1
 102907e:	fsubrp st(6),st
 1029080:	in     eax,dx
 1029081:	dec    esp
 1029082:	fadd   DWORD PTR [ebx]
 1029084:	push   esp
 1029085:	mov    cs,WORD PTR [edx]
 1029087:	addr16 xchg esp,eax
 1029089:	sub    BYTE PTR [ebx+eiz*2],0xbc
 102908d:	out    0xf6,al
 102908f:	sub    DWORD PTR [ecx+ebp*2+0x359e2faa],eax
 1029096:	sub    DWORD PTR [ebp+0x2c],esp
 1029099:	retf   
 102909a:	jns    0x10290ac
 102909c:	cli    
 102909d:	out    dx,al
 102909e:	nop
 102909f:	shr    DWORD PTR [eax+0x16],1
 10290a2:	pusha  
 10290a3:	mov    BYTE PTR [esp+edx*1+0x1e],dl
 10290a7:	sti    
 10290a8:	sar    BYTE PTR [edx-0x313f9d5c],1
 10290ae:	pop    edx
 10290af:	rcl    DWORD PTR [edx-0x53],1
 10290b2:	ss jne 0x10290b6
 10290b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10290b6:	mov    al,0x96
 10290b8:	sbb    bh,0x18
 10290bb:	pop    esi
 10290bc:	out    0x25,al
 10290be:	clc    
 10290bf:	xchg   ecx,eax
 10290c0:	cdq    
 10290c1:	(bad)
 10290c4:	sbb    BYTE PTR [ebx+ebp*2+0x2],ah
 10290c8:	or     al,BYTE PTR [eax+0x1a9be0e2]
 10290ce:	ins    BYTE PTR es:[edi],dx
 10290cf:	xor    al,0xe5
 10290d1:	call   0x13a5f569
 10290d6:	xchg   ecx,eax
 10290d7:	retf   0x18b5
 10290da:	(bad)  
 10290db:	cmp    al,0xb7
 10290dd:	scas   al,BYTE PTR es:[edi]
 10290de:	jnp    0x102907c
 10290e0:	adc    ch,BYTE PTR [ebp+0x52]
 10290e3:	stos   BYTE PTR es:[edi],al
 10290e4:	and    DWORD PTR [ebx+esi*1],ecx
 10290e7:	sahf   
 10290e8:	sub    DWORD PTR [esi-0x5d],ebp
 10290eb:	cwde   
 10290ec:	or     cl,BYTE PTR [esi]
 10290ee:	enter  0xd2bc,0x90
 10290f2:	mov    esi,0xa6b48c0e
 10290f7:	mov    edx,0x6c2cfd0f
 10290fc:	pop    es
 10290fd:	jbe    0x10290e5
 10290ff:	ficomp DWORD PTR [edx-0x39]
 1029102:	loop   0x102914e
 1029104:	ds inc eax
 1029106:	iret   
 1029107:	scas   eax,DWORD PTR es:[edi]
 1029108:	pop    ss
 1029109:	shl    BYTE PTR [eax-0x6e],cl
 102910c:	retf   0x7941
 102910f:	adc    ah,cl
 1029111:	popa   
 1029112:	mov    dh,0xed
 1029114:	push   ss
 1029115:	rcl    DWORD PTR gs:[edi+0x72],0x9a
 102911a:	xor    DWORD PTR [ecx+0x32],ebp
 102911d:	xchg   ebx,eax
 102911e:	mov    bh,0x7d
 1029120:	xchg   esp,eax
 1029121:	or     dl,0x37
 1029124:	sub    BYTE PTR [edx+0x3040b6b8],ah
 102912a:	cs stc 
 102912c:	xchg   edx,eax
 102912d:	stc    
 102912e:	pop    ebx
 102912f:	(bad)
 1029133:	xchg   ecx,eax
 1029134:	mov    ebx,0xb4983127
 1029139:	ret    0x7864
 102913c:	adc    al,0x1e
 102913e:	xchg   edi,eax
 102913f:	dec    esp
 1029140:	push   edi
 1029141:	into   
 1029142:	add    al,0xc8
 1029144:	push   ecx
 1029145:	jge    0x10290df
 1029147:	mov    eax,0xf1d3be31
 102914c:	mov    bl,bh
 102914e:	cmp    edx,DWORD PTR [eax]
 1029150:	in     eax,0x93
 1029152:	sbb    esp,DWORD PTR gs:[ebp+esi*8-0x7e24b9f9]
 102915a:	xchg   DWORD PTR [ebx-0x4a],eax
 102915d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102915e:	test   DWORD PTR [ebp+0x5b46dc6f],esp
 1029164:	mov    al,0xb4
 1029166:	into   
 1029167:	xlat   BYTE PTR ds:[ebx]
 1029169:	xchg   edi,eax
 102916a:	icebp  
 102916b:	inc    ecx
 102916c:	mov    dh,0x80
 102916e:	mov    BYTE PTR [edx+0x5e],dl
 1029171:	xchg   edx,eax
 1029172:	sbb    eax,0x7f287d65
 1029177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1029178:	fdiv   DWORD PTR [ecx]
 102917a:	mov    cl,BYTE PTR [ecx+0x2]
 102917d:	aaa    
 102917e:	xchg   esi,eax
 102917f:	mov    eax,ds:0x6805f01f
 1029184:	adc    al,0x20
 1029186:	pop    esp
 1029187:	and    DWORD PTR [edi],ebp
 1029189:	retf   
 102918a:	push   edi
 102918b:	or     DWORD PTR ds:0xf9b76e4d,esp
 1029191:	push   ebp
 1029192:	jmp    0x10291a6
 1029194:	cmp    BYTE PTR [edi-0x6b5af47e],ch
 102919a:	test   al,0x28
 102919c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102919d:	fcomp  QWORD PTR [esi+0x6d]
 10291a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10291a1:	or     BYTE PTR [ecx-0x2d88a773],bl
 10291a7:	and    esp,edx
 10291a9:	mov    edx,0x6c9bb42e
 10291ae:	(bad)  
 10291af:	cmp    al,0xf7
 10291b1:	stc    
 10291b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10291b3:	rcl    edi,1
 10291b5:	add    DWORD PTR [edi],0x16cc9940
 10291bb:	shr    BYTE PTR [edi],0x81
 10291be:	xchg   esp,eax
 10291bf:	cmp    eax,0xf99982b7
 10291c4:	scas   eax,DWORD PTR es:[edi]
 10291c5:	call   0xda0b:0x6f2ce3ec
 10291cc:	push   es
 10291cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10291ce:	arpl   WORD PTR [ebp-0x6c37a343],bp
 10291d4:	pop    ecx
 10291d5:	sub    al,0x29
 10291d7:	ror    BYTE PTR ds:0x18799bf2,1
 10291dd:	xchg   esi,eax
 10291de:	aaa    
 10291df:	or     BYTE PTR [ebx],cl
 10291e1:	pop    edx
 10291e2:	jo     0x1029189
 10291e4:	leave  
 10291e5:	inc    esi
 10291e6:	adc    BYTE PTR [edx-0x70db764d],cl
 10291ec:	rcr    DWORD PTR [ebx],1
 10291ee:	adc    BYTE PTR [eax+0x54],ah
 10291f1:	loope  0x102923f
 10291f3:	pop    ss
 10291f4:	inc    esi
 10291f5:	xchg   ecx,eax
 10291f6:	push   eax
 10291f7:	xchg   esi,eax
 10291f8:	xor    bl,BYTE PTR [edi-0x5b]
 10291fb:	clc    
 10291fc:	int3   
 10291fd:	jnp    0x1029186
 10291ff:	pop    esp
 1029200:	inc    ecx
 1029201:	test   al,0x34
 1029203:	call   0x7901:0xbb885e78
 102920a:	cmp    esi,DWORD PTR [eax-0x59]
 102920d:	xor    eax,DWORD PTR [ecx-0x73f60e0f]
 1029213:	(bad)  
 1029214:	(bad)  
 1029215:	popa   
 1029216:	dec    edi
 1029217:	jnp    0x1029235
 1029219:	xchg   ebx,eax
 102921a:	popf   
 102921b:	xor    esp,edx
 102921d:	mov    ch,0x3f
 102921f:	or     eax,0xc6c60015
 1029224:	pop    edx
 1029225:	jno    0x1029262
 1029227:	jo     0x10291d4
 1029229:	push   ebp
 102922a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102922b:	(bad)  
 102922c:	xor    DWORD PTR [edx+0x48],eax
 102922f:	inc    esp
 1029230:	push   0xeef61555
 1029235:	lahf   
 1029236:	ret    
 1029237:	ret    
 1029238:	mov    ebx,0xc0ed930e
 102923d:	ret    0xc71a
 1029240:	mov    ds:0x48adb936,al
 1029245:	mul    DWORD PTR [eax+eax*1]
 1029248:	cwde   
 1029249:	pop    ecx
 102924a:	inc    ebx
 102924b:	xchg   ebx,eax
 102924c:	mov    esi,0x2dd18404
 1029251:	cdq    
 1029252:	sti    
 1029253:	or     esp,esp
 1029255:	pusha  
 1029256:	push   ebp
 1029257:	adc    BYTE PTR [ecx],0x16
 102925a:	into   
 102925b:	out    0x1b,al
 102925d:	mov    ebp,0x516ed30a
 1029262:	call   0x2e9e5276
 1029267:	fwait
 1029268:	jb     0x1029229
 102926a:	or     edx,DWORD PTR [esi+0x69b3c9b8]
 1029270:	add    dl,BYTE PTR [edx]
 1029272:	fldcw  WORD PTR [ebx-0x55]
 1029275:	xor    al,0xb
 1029277:	pop    esi
 1029278:	inc    esp
 1029279:	mov    ds:0x2e54a2e2,eax
 102927e:	(bad)  [esi]
 1029280:	mov    dh,0x8b
 1029282:	and    DWORD PTR [ecx+0x1f],eax
 1029285:	xchg   ebp,eax
 1029286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1029287:	hlt    
 1029288:	add    cl,BYTE PTR [eax]
 102928a:	jns    0x10292a3
 102928c:	(bad)  
 102928d:	fnstenv [edx+0xf]
 1029290:	scas   al,BYTE PTR es:[edi]
 1029291:	and    esi,DWORD PTR [eax]
 1029293:	fimul  DWORD PTR [esi]
 1029295:	cmp    al,0x40
 1029297:	mov    al,BYTE PTR [edx+0x2dddd61]
 102929d:	or     ch,ah
 102929f:	sbb    BYTE PTR [edx+0x69],0x90
 10292a3:	scas   al,BYTE PTR es:[edi]
 10292a4:	fs in  eax,0x95
 10292a7:	rcr    BYTE PTR [ebx],1
 10292a9:	aaa    
 10292aa:	push   esp
 10292ab:	or     eax,0x20255942
 10292b0:	ror    al,cl
 10292b2:	dec    esi
 10292b3:	or     eax,DWORD PTR [edx+0x42324b91]
 10292b9:	ins    DWORD PTR es:[edi],dx
 10292ba:	repnz push esi
 10292bc:	mov    cl,BYTE PTR [ebx]
 10292be:	add    ah,BYTE PTR [eax]
 10292c0:	cs xchg ebp,eax
 10292c2:	and    edi,DWORD PTR [ebx]
 10292c4:	outs   dx,BYTE PTR ds:[esi]
 10292c5:	sbb    al,0x42
 10292c7:	cmp    DWORD PTR [ebp+0x854b02c],edx
 10292cd:	add    al,BYTE PTR [ebp+eax*8+0x5f22458d]
 10292d4:	sbb    ebx,DWORD PTR [ebp-0x477a5cd4]
 10292da:	int3   
 10292db:	scas   eax,DWORD PTR es:[edi]
 10292dc:	std    
 10292dd:	jb     0x10292f0
 10292df:	ja     0x102934a
 10292e1:	lods   al,BYTE PTR ds:[esi]
 10292e2:	inc    edx
 10292e3:	xchg   edx,eax
 10292e4:	jne    0x102928c
 10292e6:	xchg   esp,eax
 10292e7:	fwait
 10292e8:	test   al,0x63
 10292ea:	mov    ch,0x61
 10292ec:	or     al,BYTE PTR [esi-0x2f]
 10292ef:	enter  0xc4f2,0x34
 10292f3:	push   ss
 10292f4:	mov    al,ds:0xeda3007
 10292f9:	pushf  
 10292fa:	xchg   ebx,eax
 10292fb:	rcr    BYTE PTR [ebp+0x4],0x6
 10292ff:	mov    ebx,0xe8d200dc
 1029304:	xor    BYTE PTR [edi-0x5ba519a9],bh
 102930a:	ret    
 102930b:	xchg   esi,eax
 102930c:	ret    
 102930d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102930e:	ins    DWORD PTR es:[edi],dx
 102930f:	repz mov dl,0x3
 1029312:	jae    0x1029380
 1029314:	push   ebp
 1029315:	loop   0x10292dd
 1029317:	sbb    eax,0xd07407c1
 102931c:	fsub   QWORD PTR [ebp+0x3ccfbc2f]
 1029322:	adc    al,0xa0
 1029324:	out    dx,eax
 1029325:	dec    eax
 1029326:	mov    edi,0x6513041a
 102932b:	mov    cl,0x16
 102932d:	xor    DWORD PTR [esi-0x6e],ebx
 1029330:	test   eax,0xd453ce2f
 1029335:	mov    edx,DWORD PTR [eax+ebp*1-0x5b]
 1029339:	mov    dl,0x70
 102933b:	pushf  
 102933c:	xchg   edx,eax
 102933d:	xchg   edx,eax
 102933e:	mov    cl,0xa
 1029340:	scas   eax,DWORD PTR es:[edi]
 1029341:	adc    al,0xb7
 1029343:	push   cs
 1029344:	int3   
 1029345:	fistp  DWORD PTR fs:[ecx+ebx*4+0x35d0f0c9]
 102934d:	cmp    al,0x57
 102934f:	sub    al,0x93
 1029351:	loopne 0x102932a
 1029353:	mov    al,0x13
 1029355:	fild   DWORD PTR [esi+0x6e113f3]
 102935b:	pop    es
 102935c:	jmp    DWORD PTR [ecx]
 102935e:	ins    DWORD PTR es:[edi],dx
 102935f:	pop    es
 1029360:	dec    BYTE PTR [ebx-0x42f403b1]
 1029366:	cld    
 1029367:	stc    
 1029368:	iret   
 1029369:	cmp    al,0xec
 102936b:	mov    bh,0x3
 102936d:	fucomi st,st(6)
 102936f:	pop    edi
 1029370:	(bad)  
 1029371:	pop    es
 1029372:	mov    ch,0x11
 1029374:	lods   al,BYTE PTR ds:[esi]
 1029375:	jne    0x1029379
 1029377:	aam    0x68
 1029379:	jg     0x1029321
 102937b:	push   eax
 102937c:	dec    esp
 102937d:	pop    eax
 102937e:	test   eax,0x7200a464
 1029383:	out    0xfd,al
 1029385:	out    0xe9,al
 1029387:	mov    ds:0xa5ef9012,eax
 102938c:	inc    ebp
 102938d:	jbe    0x1029314
 102938f:	jnp    0x1029363
 1029391:	jns    0x10293c7
 1029393:	pop    ecx
 1029394:	inc    eax
 1029395:	adc    eax,0x52be290f
 102939a:	dec    edx
 102939b:	pop    es
 102939c:	xchg   ecx,eax
 102939d:	xchg   BYTE PTR [edx+0x39],ah
 10293a0:	xchg   esp,eax
 10293a1:	ror    DWORD PTR [edx-0x70],cl
 10293a4:	xor    DWORD PTR [eax-0x4f],0x1b
 10293a8:	xchg   esp,eax
 10293a9:	xchg   ebx,eax
 10293aa:	push   edx
 10293ab:	pusha  
 10293ac:	dec    eax
 10293ad:	cmc    
 10293ae:	push   es
 10293af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10293b0:	cs push edx
 10293b2:	imul   ebx,DWORD PTR [edx-0x51],0xf299a9e8
 10293b9:	jno    0x10293f0
 10293bb:	jno    0x102939f
 10293bd:	inc    ebp
 10293be:	lock dec ebx
 10293c0:	loopne 0x1029355
 10293c2:	lock cmp BYTE PTR [edx-0x2dc30bcc],bl
 10293c9:	push   eax
 10293ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10293cb:	add    ecx,ecx
 10293cd:	std    
 10293ce:	mov    WORD PTR [ebp+ebx*1-0x68],?
 10293d2:	mov    ah,0x20
 10293d4:	pop    ecx
 10293d5:	stos   DWORD PTR es:[edi],eax
 10293d6:	pop    ss
 10293d7:	add    eax,0xfac94740
 10293dc:	shl    DWORD PTR ds:0xb19233d7,0x74
 10293e3:	ror    DWORD PTR [ebp+0x1fc6e96],1
 10293e9:	rcl    BYTE PTR [esp+edx*2+0x28],0xd6
 10293ee:	or     esi,DWORD PTR [ecx]
 10293f0:	retf   0x71a4
 10293f3:	sub    eax,0xa89e0bf
 10293f8:	in     eax,0x8b
 10293fa:	inc    eax
 10293fb:	mov    cl,0x56
 10293fd:	aam    0x64
 10293ff:	test   eax,0xf0923976
 1029404:	xchg   esi,eax
 1029405:	call   0x5379:0x9e7e8278
 102940c:	or     eax,0xb7850bdd
 1029411:	push   es
 1029412:	test   edi,eax
 1029414:	inc    ecx
 1029415:	mov    al,BYTE PTR [ebx-0x57067d83]
 102941b:	lods   al,BYTE PTR ds:[esi]
 102941c:	or     ecx,edx
 102941e:	psrad  mm3,QWORD PTR [ebp+0x4c]
 1029422:	pop    edi
 1029423:	xchg   esp,eax
 1029424:	push   ebx
 1029425:	jns    0x102944e
 1029427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1029428:	pop    ebp
 1029429:	pop    ecx
 102942a:	repz inc esp
 102942c:	mov    ds:0x621d834f,eax
 1029431:	and    dh,bl
 1029433:	(bad)  
 1029434:	push   ss
 1029435:	sub    DWORD PTR [ebx+0x19],esi
 1029438:	and    eax,0xb7058550
 102943d:	dec    ebp
 102943e:	pop    ds
 102943f:	shr    DWORD PTR [eax],cl
 1029441:	push   esp
 1029442:	pop    ecx
 1029443:	xchg   esp,eax
 1029444:	sbb    esi,DWORD PTR [esi+0x256b05c4]
 102944a:	rol    DWORD PTR [eax+0x59],0x44
 102944e:	std    
 102944f:	mov    esp,0xe0602571
 1029454:	cmp    esi,esi
 1029456:	jae    0x10294a3
 1029458:	inc    eax
 1029459:	xchg   edx,eax
 102945a:	or     al,BYTE PTR [ecx+0x4192bc74]
 1029460:	and    esp,esi
 1029462:	int    0xa4
 1029464:	and    DWORD PTR [ebx],esi
 1029466:	push   ebp
 1029467:	pop    ebp
 1029468:	pop    es
 1029469:	lds    ecx,FWORD PTR [esi+eiz*8+0x7e2789ad]
 1029470:	sub    DWORD PTR [edi],eax
 1029472:	in     eax,0x8a
 1029474:	inc    ecx
 1029475:	inc    esp
 1029476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1029477:	sub    esp,DWORD PTR ds:0xcacca94d
 102947d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102947e:	xchg   edi,eax
 102947f:	mov    DWORD PTR [ecx],edi
 1029481:	pop    ebp
 1029482:	xchg   esi,eax
 1029483:	call   0x98fd5e6d
 1029488:	jns    0x10294a2
 102948a:	gs ins BYTE PTR es:[edi],dx
 102948c:	aaa    
 102948d:	pop    ebx
 102948e:	or     eax,0x869efa0e
 1029493:	mov    ah,0x19
 1029495:	push   0x3f9cc5d0
 102949a:	mov    dl,0xc2
 102949c:	daa    
 102949d:	rcr    DWORD PTR [edx],0xe5
 10294a0:	mov    al,dl
 10294a2:	in     al,dx
 10294a3:	xchg   edx,eax
 10294a4:	or     ah,BYTE PTR [ecx-0x4f]
 10294a7:	add    ch,BYTE PTR [edi-0x4451f452]
 10294ad:	cmp    al,0xe0
 10294af:	mov    bl,0x6f
 10294b1:	pop    ds
 10294b2:	push   edx
 10294b3:	lock xchg ebx,eax
 10294b5:	and    ah,BYTE PTR [ebx]
 10294b7:	jnp    0x1029501
 10294b9:	out    0xc2,al
 10294bb:	pop    edx
 10294bc:	xor    ebp,DWORD PTR [ebx+0x728f2420]
 10294c2:	dec    ebp
 10294c3:	inc    ecx
 10294c4:	aas    
 10294c5:	add    DWORD PTR [edi+0x49],edx
 10294c8:	pop    eax
 10294c9:	mov    bh,0x5e
 10294cb:	sub    ch,BYTE PTR [edx]
 10294cd:	icebp  
 10294ce:	pop    ebx
 10294cf:	and    cl,BYTE PTR [ecx+0x3f548723]
 10294d5:	mov    ch,0xb8
 10294d7:	xchg   esi,eax
 10294d8:	xor    DWORD PTR [ebx+0x37860975],0xb28c90a5
 10294e2:	push   esp
 10294e3:	jp     0x102953a
 10294e5:	xor    eax,0x4c3b01b4
 10294ea:	jp     0x10294f1
 10294ec:	xchg   cl,cl
 10294ee:	mov    esp,0xa9068e94
 10294f3:	rol    BYTE PTR [ebx-0x7fd6de5f],0xc3
 10294fa:	iret   
 10294fb:	add    edx,DWORD PTR [eax-0x8]
 10294fe:	je     0x1029542
 1029500:	sub    BYTE PTR [ecx],bl
 1029502:	mov    al,ds:0x1aecea5
 1029507:	sbb    BYTE PTR [ebp+0x2abf924e],0xe
 102950e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102950f:	jl     0x1029509
 1029511:	jns    0x10294e7
 1029513:	das    
 1029514:	add    eax,0xa0025add
 1029519:	dec    edx
 102951a:	lahf   
 102951b:	lods   eax,DWORD PTR ds:[esi]
 102951c:	sbb    eax,0x696700b4
 1029521:	pop    ss
 1029522:	retf   0xcac
 1029525:	pop    ebx
 1029526:	xor    DWORD PTR [ecx-0x1ce23044],eax
 102952c:	mov    dh,BYTE PTR [eax]
 102952e:	adc    DWORD PTR [eax],ebx
 1029530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1029531:	dec    ebx
 1029532:	ror    edi,cl
 1029534:	push   esi
 1029535:	sub    ch,ah
 1029537:	sbb    bl,BYTE PTR [esi]
 1029539:	xor    BYTE PTR [edi],cl
 102953b:	fnstenv [esi]
 102953d:	out    0x90,al
 102953f:	imul   esp,esi,0xecf0842d
 1029545:	test   eax,0x292e7895
 102954a:	sub    DWORD PTR [ebp-0x3a433503],ebp
 1029550:	cli    
 1029551:	imul   ebp,DWORD PTR [edx-0x60dc3d40],0xae61ec
 102955b:	push   ss
 102955c:	jp     0x102956d
 102955e:	inc    eax
 102955f:	pop    ecx
 1029560:	es dec edx
 1029562:	mov    al,ds:0xd92abee3
 1029567:	xor    BYTE PTR [eax],dl
 1029569:	push   ds
 102956a:	adc    bl,0xcf
 102956d:	lods   al,BYTE PTR ds:[esi]
 102956e:	pop    esp
 102956f:	xchg   esp,eax
 1029570:	hlt    
 1029571:	test   BYTE PTR [eax+eiz*2-0x3809a0a9],bh
 1029578:	stc    
 1029579:	xlat   BYTE PTR ds:[ebx]
 102957a:	sahf   
 102957b:	add    BYTE PTR [esp+eiz*8-0xcc4a52d],ch
 1029582:	or     al,0xe
 1029584:	mov    ecx,0x84c5d1b2
 1029589:	jge    0x10295e8
 102958b:	xor    BYTE PTR [edx+0x30a5c0c5],ch
 1029591:	cdq    
 1029592:	jmp    0x102956f
 1029594:	les    ecx,FWORD PTR [ebx+0x21]
 1029597:	arpl   WORD PTR [ebp-0x49],dx
 102959a:	(bad)  
 102959b:	xor    esp,edx
 102959d:	imul   eax,DWORD PTR [edx-0x2d],0x66798f85
 10295a4:	jmp    0xf019bb5c
 10295a9:	mov    edx,esi
 10295ab:	fcomi  st,st(0)
 10295ad:	mov    ds:0xb3c834c2,al
 10295b2:	dec    esp
 10295b3:	mov    bl,0x54
 10295b5:	daa    
 10295b6:	and    eax,0x310b1b65
 10295bb:	and    BYTE PTR [edx],bl
 10295bd:	popf   
 10295be:	pop    es
 10295bf:	lock adc edx,DWORD PTR [eax+0x5c11b4b4]
 10295c6:	inc    edx
 10295c7:	add    BYTE PTR [ecx],dl
 10295c9:	sahf   
 10295ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10295cb:	add    dl,bh
 10295cd:	sbb    DWORD PTR [edi],esi
 10295cf:	jle    0x102959a
 10295d1:	retf   0x8048
 10295d4:	fdivr  DWORD PTR [eax]
 10295d6:	sub    bh,BYTE PTR ds:0x4088b3ce
 10295dc:	lods   eax,DWORD PTR ds:[esi]
 10295dd:	and    al,0x88
 10295df:	stc    
 10295e0:	push   0xffffffb0
 10295e2:	pop    esp
 10295e3:	(bad)  
 10295e4:	push   ebx
 10295e5:	sub    ecx,ecx
 10295e7:	mov    bl,0x55
 10295e9:	sbb    cl,BYTE PTR [esi-0x5c]
 10295ec:	and    eax,0x7954efa7
 10295f1:	lods   eax,DWORD PTR ds:[esi]
 10295f2:	xchg   DWORD PTR [ebx-0x51],esp
 10295f5:	fxam   
 10295f7:	pop    ss
 10295f8:	xchg   esi,eax
 10295f9:	pop    esi
 10295fa:	sub    dl,BYTE PTR [ecx+0x1b]
 10295fd:	inc    edi
 10295fe:	xchg   ebp,eax
 10295ff:	fbld   TBYTE PTR [eax-0x7c]
 1029602:	retf   
 1029603:	pop    eax
 1029604:	mov    WORD PTR [ebx],gs
 1029606:	mov    ebp,0xb3bc284
 102960b:	in     al,dx
 102960c:	and    dh,BYTE PTR [ecx+0x3f0a0f62]
 1029612:	scas   al,BYTE PTR es:[edi]
 1029613:	push   esi
 1029614:	mov    ah,0xe5
 1029616:	sub    ch,BYTE PTR [eax]
 1029618:	test   al,0x58
 102961a:	push   esi
 102961b:	ret    
 102961c:	ja     0x102962f
 102961e:	out    0xd6,al
 1029620:	jb     0x10295ee
 1029622:	xor    ecx,DWORD PTR ds:0x28701069
 1029628:	mov    ecx,0xae52521e
 102962d:	scas   eax,DWORD PTR es:[edi]
 102962e:	ror    edi,cl
 1029630:	xor    cl,bl
 1029632:	outs   dx,DWORD PTR ds:[esi]
 1029633:	out    dx,al
 1029634:	mov    esi,DWORD PTR [ebx-0x34]
 1029637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1029638:	or     al,0x4
 102963a:	xor    BYTE PTR [ecx+eax*2-0x6f],bl
 102963e:	test   al,0x5b
 1029640:	sti    
 1029641:	int3   
 1029642:	in     al,0xa1
 1029644:	shr    BYTE PTR [ecx+0x34],0x8f
 1029648:	fsub   QWORD PTR [edx-0x24]
 102964b:	iret   
 102964c:	cmp    edx,DWORD PTR [ebx+0x25f53e5]
 1029652:	inc    edx
 1029653:	adc    bh,BYTE PTR [ebp+eiz*2-0x27]
 1029657:	dec    ecx
 1029658:	les    esi,FWORD PTR [ebx]
 102965a:	cmc    
 102965b:	and    BYTE PTR [ebx-0x537489bc],bh
 1029661:	add    al,0xb0
 1029663:	aad    0x5b
 1029665:	mov    cl,0xac
 1029667:	and    bh,0x2c
 102966a:	mov    ds:0x97e54349,al
 102966f:	push   cs
 1029670:	cmp    al,0xc6
 1029672:	add    BYTE PTR [eax],al
 1029674:	and    BYTE PTR [eax],al
 1029676:	dec    ecx
 1029677:	inc    esp
 1029678:	inc    ecx
 1029679:	push   esp
 102967a:	sar    esp,0x49
 102967d:	iret   
 102967e:	leave  
 102967f:	mov    al,0x57
 1029681:	add    ah,BYTE PTR [esi+0x5bc7138c]
 1029687:	inc    esp
 1029688:	stc    
 1029689:	cwde   
 102968a:	scas   eax,DWORD PTR es:[edi]
 102968b:	lods   al,BYTE PTR ds:[esi]
 102968c:	popf   
 102968d:	fld    QWORD PTR fs:[edx-0x29]
 1029691:	dec    edi
 1029692:	dec    ecx
 1029693:	jno    0x102963d
 1029695:	add    eax,0x21a00345
 102969a:	sbb    eax,0x3470b609
 102969f:	inc    eax
 10296a0:	out    0x9e,al
 10296a2:	icebp  
 10296a3:	lods   eax,DWORD PTR ds:[esi]
 10296a4:	mov    ah,0xfa
 10296a6:	xor    BYTE PTR [esi+0x1ab84276],0x85
 10296ad:	leave  
 10296ae:	add    al,0x2d
 10296b0:	in     eax,0xc1
 10296b2:	stc    
 10296b3:	lock cmp edi,DWORD PTR [ecx+0x6a9b815]
 10296ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10296bb:	ja     0x10296de
 10296bd:	pop    ds
 10296be:	nop
 10296bf:	or     eax,0x98bcfd04
 10296c4:	sahf   
 10296c5:	add    al,0xac
 10296c7:	in     al,0x5
 10296c9:	ror    BYTE PTR [ebx+0x4fc90479],1
 10296cf:	jl     0x1029736
 10296d1:	gs inc eax
 10296d3:	push   cs
 10296d4:	or     BYTE PTR [eax],0x8a
 10296d7:	adc    DWORD PTR [eax+0x6a],0x19
 10296db:	pop    ebx
 10296dc:	aam    0xd0
 10296de:	gs mov dl,0x7c
 10296e1:	sbb    ebx,DWORD PTR [esi]
 10296e3:	push   esp
 10296e4:	popf   
 10296e5:	nop
 10296e6:	jmp    0x5731c884
 10296eb:	cdq    
 10296ec:	enter  0x55ee,0x13
 10296f0:	pop    edi
 10296f1:	dec    esi
 10296f2:	les    esi,FWORD PTR ds:0xa746bddd
 10296f8:	fidiv  WORD PTR [esi]
 10296fa:	fadd   DWORD PTR [eax-0x1263ce5f]
 1029700:	shr    BYTE PTR [esi],0x7d
 1029703:	imul   esp,DWORD PTR [ebp+0x3b7d0d1f],0xcae8d0b0
 102970d:	cmp    cl,BYTE PTR [eax-0x2d]
 1029710:	and    al,0xc9
 1029712:	hlt    
 1029713:	shl    ebp,0x63
 1029716:	sbb    esp,DWORD PTR [esi+esi*4]
 1029719:	mov    bh,0xbc
 102971b:	xchg   ecx,eax
 102971c:	push   esi
 102971d:	mov    bh,bl
 102971f:	mov    dl,0xfd
 1029721:	cli    
 1029722:	or     DWORD PTR [esi+0x7338fb07],eax
 1029728:	leave  
 1029729:	lea    ecx,[ecx-0x730d4815]
 102972f:	fimul  WORD PTR fs:[esi+0x67]
 1029733:	in     eax,dx
 1029734:	lods   al,BYTE PTR ds:[esi]
 1029735:	mov    al,ds:0xfc0a34cb
 102973a:	lock shl BYTE PTR [ebp-0x34b46814],0xdc
 1029742:	sub    BYTE PTR [edi],al
 1029744:	scas   al,BYTE PTR es:[edi]
 1029745:	pushf  
 1029746:	outs   dx,BYTE PTR ds:[esi]
 1029747:	lods   al,BYTE PTR ds:[esi]
 1029748:	es jmp 0x6b231f93
 102974e:	mov    ecx,0x14297cb0
 1029753:	sub    BYTE PTR [ebx],al
 1029755:	pop    ds
 1029756:	xor    bl,BYTE PTR [ecx+eax*1+0x11779362]
 102975d:	pop    ds
 102975e:	xchg   ebp,eax
 102975f:	sub    al,0xbe
 1029761:	mov    esp,0x6c07934
 1029766:	cmp    eax,0xdf360508
 102976b:	xor    al,0xda
 102976d:	push   cs
 102976e:	fadd   QWORD PTR [eax-0x54]
 1029771:	cmc    
 1029772:	aad    0x60
 1029774:	adc    DWORD PTR [eax+edx*2-0x16098fa8],ecx
 102977b:	out    0x35,eax
 102977d:	sub    DWORD PTR [ebx+eax*1],0x515b2bb1
 1029784:	push   ss
 1029785:	fs mov DWORD PTR gs:0x40acf980,eax
 102978d:	or     DWORD PTR [esi],ebp
 102978f:	mov    ebx,0x80622ff2
 1029794:	inc    esp
 1029795:	jp     0x102976d
 1029797:	cmp    esi,DWORD PTR [eax-0x7243e934]
 102979d:	xchg   edx,eax
 102979e:	jne    0x102972f
 10297a0:	sbb    BYTE PTR [ebx],dl
 10297a2:	dec    edx
 10297a3:	inc    esi
 10297a4:	dec    esi
 10297a5:	jge    0x10297bd
 10297a7:	adc    eax,0x15f80359
 10297ac:	call   0x41500fde
 10297b1:	cs (bad) 
 10297b3:	sbb    eax,0xd9206337
 10297b8:	lock mov al,BYTE PTR [edi-0x5c]
 10297bc:	mov    edx,0x148f87b0
 10297c1:	je     0x1029835
 10297c3:	sahf   
 10297c4:	or     DWORD PTR [ebx-0x7],0x47d9c0d8
 10297cb:	add    BYTE PTR [edi+ecx*4],0x59
 10297cf:	pop    ebx
 10297d0:	sbb    DWORD PTR [ebp+0x36],eax
 10297d3:	dec    eax
 10297d4:	sbb    ch,BYTE PTR [ebp+0x7]
 10297d7:	outs   dx,BYTE PTR ds:[esi]
 10297d8:	mov    al,ds:0xb7cbbfac
 10297dd:	(bad)  
 10297de:	test   cl,al
 10297e0:	pop    esp
 10297e1:	or     ebp,ebx
 10297e3:	inc    edx
 10297e4:	ss push cs
 10297e6:	xchg   DWORD PTR [ebp+0x521632a0],esi
 10297ec:	mov    ecx,0x4bde9490
 10297f1:	and    DWORD PTR [edx+0x24],edx
 10297f4:	ror    BYTE PTR [edx+ecx*1+0x6ca0b842],cl
 10297fb:	mov    ch,0xb3
 10297fd:	add    DWORD PTR [edx+0x52e04002],esi
 1029803:	push   ds
 1029804:	(bad)  
 1029805:	mov    ds:0xec9be6b0,eax
 102980a:	and    eax,DWORD PTR [edx+0x26]
 102980d:	shl    BYTE PTR [ecx],1
 102980f:	imul   eax,DWORD PTR [edx+0x7f],0x48fdf6b
 1029816:	clc    
 1029817:	in     eax,dx
 1029818:	test   DWORD PTR [ebx],0xe5939295
 102981e:	mov    al,0x6c
 1029820:	mov    BYTE PTR [ecx+ecx*8-0x1bbf6c44],bh
 1029827:	cli    
 1029828:	mov    bh,0xba
 102982a:	dec    edx
 102982b:	mov    BYTE PTR [ebx],0x90
 102982e:	psadbw mm1,QWORD PTR [edx-0x3154ba88]
 1029835:	loopne 0x102981e
 1029837:	addr16 mov dh,0xf2
 102983a:	push   esp
 102983b:	fisttp QWORD PTR [esi+ecx*8]
 102983e:	add    eax,0x36076d18
 1029843:	xchg   esp,eax
 1029844:	popa   
 1029845:	pop    ecx
 1029846:	pop    edx
 1029847:	jecxz  0x102984b
 1029849:	xor    BYTE PTR [ecx],ah
 102984b:	sahf   
 102984c:	(bad)  
 102984d:	pop    ebp
 102984e:	outs   dx,DWORD PTR ds:[esi]
 102984f:	inc    esi
 1029850:	or     DWORD PTR [edi+ecx*4],edx
 1029853:	scas   al,BYTE PTR es:[edi]
 1029854:	xor    bl,BYTE PTR [ecx]
 1029856:	mov    cl,0x45
 1029858:	cs mov edx,0x74d2199d
 102985e:	nop
 102985f:	inc    esi
 1029860:	aaa    
 1029861:	push   esp
 1029862:	pop    eax
 1029863:	pop    esi
 1029864:	retf   
 1029865:	jp     0x10297fd
 1029867:	xchg   BYTE PTR [ecx+0x74],dl
 102986a:	repnz gs aas 
 102986d:	jno    0x10298c3
 102986f:	dec    edx
 1029870:	ret    0xcd96
 1029873:	sub    BYTE PTR [edx+0x275f9fac],dl
 1029879:	dec    ebx
 102987a:	sbb    BYTE PTR [ecx+0x2b],al
 102987d:	sbb    BYTE PTR [eax],ch
 102987f:	sahf   
 1029880:	shr    BYTE PTR [ebx-0x7],0x11
 1029884:	icebp  
 1029885:	popf   
 1029886:	or     BYTE PTR [ecx+edi*8],ch
 1029889:	xchg   ecx,eax
 102988a:	add    ebp,DWORD PTR [edi-0x1d9ef2cf]
 1029890:	(bad)  
 1029892:	pusha  
 1029893:	xchg   esi,eax
 1029894:	retf   
 1029895:	and    BYTE PTR [ecx+esi*1],bh
 1029898:	sti    
 1029899:	cmp    eax,0xaf451282
 102989e:	retf   
 102989f:	js     0x10298e6
 10298a1:	mov    dh,0xad
 10298a3:	xor    BYTE PTR [edx-0x5],0xcc
 10298a7:	daa    
 10298a8:	lea    esi,[esi-0x7fb768fd]
 10298ae:	pop    ebx
 10298af:	sbb    DWORD PTR [eax+0x2],0x1225a5f
 10298b6:	pushf  
 10298b7:	xchg   edx,eax
 10298b8:	dec    ebx
 10298b9:	popf   
 10298ba:	pop    ecx
 10298bb:	push   edx
 10298bc:	jno    0x1029911
 10298be:	pop    esp
 10298bf:	das    
 10298c0:	ffreep st(4)
 10298c2:	push   ebx
 10298c3:	into   
 10298c4:	sahf   
 10298c5:	mov    edi,0xdb641917
 10298ca:	pop    eax
 10298cb:	xor    DWORD PTR [edx-0xb3e2e8e],0xd99635e9
 10298d5:	outs   dx,BYTE PTR ds:[esi]
 10298d7:	js     0x10298ff
 10298d9:	retf   
 10298da:	ret    0xe91b
 10298dd:	stos   DWORD PTR es:[edi],eax
 10298de:	jne    0x1029870
 10298e0:	sub    ecx,DWORD PTR [edx+0x5b]
 10298e3:	xchg   esi,eax
 10298e4:	rcl    BYTE PTR [esi+ebx*4+0x1f26374c],cl
 10298eb:	jmp    0x5937:0xb04b8e51
 10298f2:	je     0x102989d
 10298f4:	fwait
 10298f5:	adc    al,0x66
 10298f7:	sub    DWORD PTR [eax+ebp*1+0x1ac3146],ebp
 10298fe:	mov    edi,0x299cefb3
 1029903:	fwait
 1029904:	icebp  
 1029905:	pusha  
 1029906:	pop    esp
 1029907:	and    esi,ebx
 1029909:	and    bh,dl
 102990b:	leave  
 102990c:	mov    WORD PTR [esi+0x46921b03],?
 1029912:	dec    esp
 1029913:	lods   eax,DWORD PTR ds:[esi]
 1029914:	mov    ds:0x5db8ee37,eax
 1029919:	xor    eax,0x91701456
 102991e:	push   esi
 102991f:	cld    
 1029920:	xchg   ebp,eax
 1029921:	imul   eax,eax,0x60c19f80
 1029927:	add    BYTE PTR [ebx+0x1],ah
 102992a:	das    
 102992b:	sti    
 102992c:	fnstenv [edx]
 102992e:	xor    ebx,ecx
 1029930:	mov    bh,0x6f
 1029932:	mov    dl,0xc2
 1029934:	ss int 0x8c
 1029937:	ins    DWORD PTR es:[edi],dx
 1029938:	jecxz  0x10298d0
 102993a:	inc    edx
 102993b:	add    cl,BYTE PTR [ecx+0x1dba0990]
 1029941:	addr16 nop
 1029943:	jl     0x102999d
 1029945:	nop
 1029946:	fs in  eax,0x11
 1029949:	loope  0x10298f8
 102994b:	xchg   edx,eax
 102994c:	imul   esi,DWORD PTR [edx-0x59],0x2dd58281
 1029953:	cli    
 1029954:	fdivr  QWORD PTR [ecx+0x6c8fdf9b]
 102995a:	cmp    cl,BYTE PTR [edx-0x17]
 102995d:	xor    ebx,DWORD PTR [ecx+0x6d]
 1029960:	push   edi
 1029961:	push   eax
 1029962:	fidiv  WORD PTR [ecx-0x1ae6bbb2]
 1029968:	push   ss
 1029969:	jo     0x1029916
 102996b:	xor    BYTE PTR [edx+0xdc026b],dh
 1029971:	jge    0x10298f3
 1029973:	mov    eax,ds:0xf77e076c
 1029978:	(bad)  
 1029979:	ds dec ebx
 102997b:	scas   eax,DWORD PTR es:[edi]
 102997c:	jle    0x102996f
 102997e:	mov    bl,0x6
 1029980:	mov    edi,0xc922d81d
 1029985:	mov    esp,0x8b465262
 102998a:	sbb    edx,DWORD PTR [eax+0x48]
 102998d:	xchg   edx,eax
 102998e:	je     0x1029979
 1029990:	and    al,0x40
 1029992:	or     dh,BYTE PTR [edx]
 1029994:	lods   al,BYTE PTR ds:[esi]
 1029995:	mov    bl,0xe6
 1029997:	(bad)  
 1029998:	aaa    
 1029999:	or     al,BYTE PTR [edx+esi*8-0x6a]
 102999d:	sub    eax,0x2ff129ee
 10299a2:	lods   al,BYTE PTR ds:[esi]
 10299a3:	or     cl,BYTE PTR [edi+ebx*2]
 10299a6:	repnz pop ecx
 10299a8:	je     0x10299fd
 10299aa:	dec    ebp
 10299ab:	mov    eax,0xe5ecb828
 10299b0:	enter  0xe46b,0x69
 10299b4:	retf   
 10299b5:	pop    ebp
 10299b6:	jo     0x1029962
 10299b8:	push   cs
 10299b9:	sub    eax,0xd5799db0
 10299be:	add    BYTE PTR [eax+0x754a7462],dl
 10299c4:	push   esp
 10299c5:	ins    BYTE PTR es:[edi],dx
 10299c6:	es scas al,BYTE PTR es:[edi]
 10299c8:	cmp    edx,DWORD PTR [ebx-0x37]
 10299cb:	std    
 10299cc:	(bad)  
 10299cd:	adc    eax,0xb802c7b2
 10299d2:	push   esp
 10299d3:	or     ah,BYTE PTR [eax]
 10299d5:	out    dx,al
 10299d6:	gs ja  0x10299db
 10299d9:	sub    bh,ah
 10299db:	push   ecx
 10299dc:	hlt    
 10299dd:	xor    BYTE PTR [eax-0x35a08ed9],bl
 10299e3:	retf   
 10299e4:	cdq    
 10299e5:	cmp    dl,cl
 10299e7:	pop    ebx
 10299e8:	imul   edx,DWORD PTR [edx],0xffffffd2
 10299eb:	jns    0x102998d
 10299ed:	loope  0x1029a5b
 10299ef:	pop    es
 10299f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10299f1:	and    DWORD PTR [ebp+0x1d],edi
 10299f4:	fcom   st(4)
 10299f6:	stos   DWORD PTR es:[edi],eax
 10299f7:	mov    dl,0x44
 10299f9:	adc    BYTE PTR [eax-0x2e50d14a],al
 10299ff:	fcmove st,st(6)
 1029a01:	les    edx,FWORD PTR [ebx+0x6b1e15e9]
 1029a07:	mov    DWORD PTR [esi],edx
 1029a09:	shr    BYTE PTR [edi+0x369f4eac],cl
 1029a0f:	pop    DWORD PTR [ecx+0x2c]
 1029a12:	lock and esp,DWORD PTR [ebx]
 1029a15:	cmp    cl,BYTE PTR [ebp+0x1fb0807e]
 1029a1b:	jmp    0x10299a9
 1029a1d:	fld    QWORD PTR [esi]
 1029a1f:	imul   esi,DWORD PTR [ebp-0xe2de39b],0xffffffa5
 1029a26:	xchg   ebp,eax
 1029a27:	xchg   ebx,eax
 1029a28:	jl     0x1029a71
 1029a2a:	mov    eax,DWORD PTR [edi+0x2ac45d72]
 1029a30:	ins    DWORD PTR es:[edi],dx
 1029a31:	loopne 0x10299e2
 1029a33:	call   0xca8b4546
 1029a38:	inc    ebx
 1029a39:	loop   0x10299f5
 1029a3b:	jnp    0x1029a81
 1029a3d:	mov    dh,0xb2
 1029a3f:	push   eax
 1029a40:	push   edi
 1029a41:	dec    ebp
 1029a42:	fst    QWORD PTR [ebx]
 1029a44:	pop    ecx
 1029a45:	outs   dx,BYTE PTR ds:[esi]
 1029a46:	jmp    0x1029ab1
 1029a48:	dec    ecx
 1029a49:	dec    edi
 1029a4a:	sub    BYTE PTR [ebx-0x2cf742d6],cl
 1029a50:	(bad)  
 1029a51:	and    eax,0x20bd6f9d
 1029a56:	scas   eax,DWORD PTR es:[edi]
 1029a57:	inc    DWORD PTR [edi]
 1029a59:	out    0x1,eax
 1029a5b:	or     al,0x65
 1029a5d:	and    eax,edx
 1029a5f:	loopne 0x1029a55
 1029a61:	pop    ebx
 1029a62:	add    edx,DWORD PTR [ecx+0x701403f8]
 1029a68:	in     al,0x3e
 1029a6a:	hlt    
 1029a6b:	push   edx
 1029a6c:	cmp    eax,esp
 1029a6e:	inc    ebx
 1029a6f:	xor    al,0xad
 1029a71:	imul   ebx,DWORD PTR [ebp+0x6a],0x33
 1029a75:	into   
 1029a76:	ret    
 1029a77:	in     eax,0x96
 1029a79:	push   ebp
 1029a7a:	pop    ds
 1029a7b:	add    BYTE PTR [ecx+0x2e158a15],ah
 1029a81:	mov    ch,0x3c
 1029a83:	mov    dh,0x80
 1029a85:	ror    BYTE PTR [eax],1
 1029a87:	push   es
 1029a88:	and    ebp,DWORD PTR [eax+0x25]
 1029a8b:	pop    eax
 1029a8d:	adc    DWORD PTR es:[edi+0x726c558d],ebp
 1029a94:	inc    esp
 1029a95:	aam    0x40
 1029a97:	lods   eax,DWORD PTR ds:[esi]
 1029a98:	or     al,0x47
 1029a9a:	sub    DWORD PTR [edi+0x5b],edi
 1029a9d:	daa    
 1029a9e:	mov    ds:0x91c5321a,al
 1029aa3:	adc    eax,0xa16a04a7
 1029aa8:	and    al,0x49
 1029aaa:	or     al,BYTE PTR gs:0xe713c546
 1029ab1:	sub    eax,0x9499c6c2
 1029ab6:	adc    al,dl
 1029ab8:	(bad)  
 1029ab9:	cmp    DWORD PTR [ecx+0x5682a444],ebx
 1029abf:	in     eax,0x84
 1029ac1:	test   eax,0x85fa52db
 1029ac6:	ret    0x76c9
 1029ac9:	xchg   ebp,eax
 1029aca:	dec    ebx
 1029acb:	(bad)  
 1029acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1029acd:	aaa    
 1029ace:	cmp    DWORD PTR [eax-0x6],ebp
 1029ad1:	cdq    
 1029ad2:	clc    
 1029ad3:	cmp    BYTE PTR [eax+0x5a5f1e02],ch
 1029ad9:	imul   ebp,ecx,0xffffff90
 1029adc:	(bad)  
 1029add:	iret   
 1029ade:	or     esi,DWORD PTR [edi-0x2d65a52e]
 1029ae4:	mov    BYTE PTR [ecx+0x6229e913],dh
 1029aea:	add    DWORD PTR gs:[ecx],esp
 1029aed:	xor    al,0x6
 1029aef:	mov    WORD PTR ds:0xe5c26420,fs
 1029af5:	dec    esp
 1029af6:	cli    
 1029af7:	push   edx
 1029af8:	xchg   edx,eax
 1029af9:	dec    esp
 1029afa:	aaa    
 1029afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1029afc:	push   0x1255a49d
 1029b01:	das    
 1029b02:	fs pop edi
 1029b04:	cmp    ch,BYTE PTR [edx]
 1029b06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1029b07:	and    DWORD PTR [eax],0xffffffc5
 1029b0a:	stos   DWORD PTR es:[edi],eax
 1029b0b:	add    eax,0xb76c814b
 1029b10:	and    BYTE PTR [ebx-0x65f14d5e],dh
 1029b16:	adc    al,0xa9
 1029b18:	cld    
 1029b19:	sub    eax,0xd0095658
 1029b1e:	sbb    BYTE PTR [esi-0x28dd384c],al
 1029b24:	out    dx,eax
 1029b25:	add    esp,DWORD PTR [esi-0x1a77fa73]
 1029b2b:	sbb    DWORD PTR ds:0x3ca9e525,ecx
 1029b31:	adc    al,0xa9
 1029b33:	cmp    BYTE PTR [ebx],bl
 1029b35:	cmp    al,0x12
 1029b37:	ret    
 1029b38:	xchg   edx,eax
 1029b39:	retf   0xfb3f
 1029b3c:	rcl    BYTE PTR [ebx],cl
 1029b3e:	retf   0xcc69
 1029b41:	pop    ss
 1029b42:	sbb    eax,0x48819bfe
 1029b47:	push   edi
 1029b48:	mov    esp,0xc16a0d33
 1029b4d:	sahf   
 1029b4e:	sub    eax,0x9c34e1f4
 1029b53:	lock mov eax,0xf1ca3b85
 1029b59:	jb     0x1029b0e
 1029b5b:	lods   eax,DWORD PTR ds:[esi]
 1029b5c:	sub    eax,0xce521285
 1029b61:	(bad)  
 1029b62:	or     BYTE PTR [eax-0x37],ah
 1029b65:	repnz sub DWORD PTR [eax-0x16d7a61a],edx
 1029b6c:	sub    cl,BYTE PTR [edx]
 1029b6e:	lahf   
 1029b6f:	add    BYTE PTR [edi-0xa],ah
 1029b72:	sahf   
 1029b73:	je     0x1029b8f
 1029b75:	xor    bl,BYTE PTR [edi]
 1029b77:	addr16 ret 
 1029b79:	and    BYTE PTR [ebp+0x4a859523],ah
 1029b7f:	ror    DWORD PTR [eax],cl
 1029b81:	xor    edi,edx
 1029b83:	addr16 push ss
 1029b85:	inc    esi
 1029b86:	aam    0x8d
 1029b88:	push   edx
 1029b89:	and    BYTE PTR [ebp-0x44],cl
 1029b8c:	fnsetpm(287 only) 
 1029b8e:	or     edi,DWORD PTR [edx+ebx*2-0x7b]
 1029b92:	sub    bh,BYTE PTR [ecx+0x50]
 1029b95:	push   ds
 1029b96:	sahf   
 1029b97:	in     al,0x51
 1029b99:	aam    0x89
 1029b9b:	mov    bl,0x9
 1029b9d:	dec    ecx
 1029b9e:	cdq    
 1029b9f:	and    cl,0xc3
 1029ba2:	cmp    al,0x8c
 1029ba4:	push   es
 1029ba5:	shl    dl,0x2b
 1029ba8:	bnd jae 0x1029bd1
 1029bab:	sahf   
 1029bac:	sub    ch,BYTE PTR [edi-0x7f9163af]
 1029bb2:	rol    DWORD PTR [eax],cl
 1029bb4:	ret    
 1029bb5:	sbb    DWORD PTR [ebx],eax
 1029bb7:	cwde   
 1029bb8:	addr16 sbb eax,0x40478127
 1029bbe:	cli    
 1029bbf:	mov    ds:0xb2b770ae,al
 1029bc4:	push   es
 1029bc5:	sub    BYTE PTR [ecx+0x1a],cl
 1029bc8:	(bad)  
 1029bc9:	adc    ecx,DWORD PTR ds:0x19990dc6
 1029bcf:	mov    ebx,0x3a53124c
 1029bd4:	fst    DWORD PTR [ecx+0x52]
 1029bd7:	xchg   esi,eax
 1029bd8:	pop    ecx
 1029bd9:	jnp    0x1029c46
 1029bdb:	or     dl,BYTE PTR [eax]
 1029bdd:	sub    eax,0xa35d8958
 1029be2:	pop    ecx
 1029be3:	jbe    0x1029bd4
 1029be5:	fadd   DWORD PTR [edx+0x12ba6ebb]
 1029beb:	pmaxub mm6,QWORD PTR [edi+0x1b]
 1029bef:	jbe    0x1029c5d
 1029bf1:	mov    ebp,0xc2907507
 1029bf6:	mov    edx,0xff24bff6
 1029bfb:	push   0xffffffbe
 1029bfd:	scas   al,BYTE PTR es:[edi]
 1029bfe:	jecxz  0x1029bd2
 1029c00:	ins    BYTE PTR es:[edi],dx
 1029c01:	stos   BYTE PTR es:[edi],al
 1029c02:	imul   ebx,DWORD PTR ds:0xd83b8546,0xffffffe7
 1029c09:	cmp    cl,BYTE PTR ds:0x53f33f99
 1029c0f:	mov    bh,bl
 1029c11:	xchg   ebx,eax
 1029c12:	rcl    BYTE PTR [ecx-0x39],cl
 1029c15:	lahf   
 1029c16:	mov    ?,ebx
 1029c18:	jle    0x1029c13
 1029c1a:	and    eax,0x49f47e58
 1029c1f:	test   al,0xaa
 1029c21:	retf   0x352f
 1029c24:	ja     0x1029c9f
 1029c26:	(bad)  [ebp+0x24]
 1029c29:	jmp    0xc6db:0x6dc1f659
 1029c30:	cli    
 1029c31:	mov    ds,WORD PTR [edx+0x4b]
 1029c34:	mov    ah,0x87
 1029c36:	push   ebp
 1029c37:	mov    ds:0x9580a0c2,al
 1029c3c:	aaa    
 1029c3d:	sub    ecx,DWORD PTR [ecx+eiz*4+0x34]
 1029c41:	xchg   ebp,eax
 1029c42:	pop    ss
 1029c43:	sub    DWORD PTR ds:0x806803ac,esi
 1029c49:	popf   
 1029c4a:	in     al,0xc3
 1029c4c:	out    dx,al
 1029c4d:	dec    eax
 1029c4e:	xor    ch,dl
 1029c50:	or     BYTE PTR [eax+eiz*2],0x7e
 1029c54:	add    DWORD PTR [edx+ebx*2],esi
 1029c57:	ret    0xc00c
 1029c5a:	in     al,dx
 1029c5b:	jbe    0x1029cb0
 1029c5d:	push   0x30
 1029c5f:	in     eax,0xfa
 1029c61:	mov    eax,ds:0x2fb218b9
 1029c66:	push   ds
 1029c67:	ret    
 1029c68:	xor    eax,0xa5996858
 1029c6d:	loop   0x1029cb4
 1029c6f:	push   0x1c
 1029c71:	addr16 ret 0x7b88
 1029c75:	leave  
 1029c76:	ret    
 1029c77:	cmp    eax,0xab8b5db7
 1029c7c:	mov    esi,0xdc362970
 1029c81:	hlt    
 1029c82:	ins    DWORD PTR es:[edi],dx
 1029c83:	in     al,dx
 1029c84:	fdiv   DWORD PTR [esi-0x51]
 1029c87:	div    BYTE PTR [esi]
 1029c89:	cwde   
 1029c8a:	xchg   edi,eax
 1029c8b:	mov    al,ds:0xe908897e
 1029c90:	aas    
 1029c91:	push   cs
 1029c92:	inc    edi
 1029c93:	xor    DWORD PTR [edx+eiz*8+0x28b854a7],ebx
 1029c9a:	mov    ecx,0x665d4c94
 1029c9f:	(bad)  
 1029ca1:	imul   ecx,DWORD PTR [eax-0x32f6cdd8],0xffffffc1
 1029ca8:	dec    edi
 1029ca9:	inc    esi
 1029caa:	neg    esi
 1029cac:	inc    BYTE PTR [ebx]
 1029cae:	jl     0x1029c96
 1029cb0:	std    
 1029cb1:	scas   eax,DWORD PTR es:[edi]
 1029cb2:	les    eax,FWORD PTR [esi-0x133c5065]
 1029cb8:	in     al,dx
 1029cb9:	sub    al,0xe6
 1029cbb:	jmp    0x87d9:0x69b61d3a
 1029cc2:	imul   esi,DWORD PTR [edi],0xa8542466
 1029cc8:	sbb    al,0xa7
 1029cca:	push   eax
 1029ccb:	cmc    
 1029ccc:	addr16 xchg esp,eax
 1029cce:	jb     0x1029d23
 1029cd0:	mov    bh,0xcf
 1029cd2:	jp     0x1029cdb
 1029cd4:	add    al,0xa0
 1029cd6:	push   ss
 1029cd7:	fnsave [eax+ebx*2+0x24728507]
 1029cde:	(bad)  
 1029cdf:	in     al,0xb0
 1029ce1:	test   DWORD PTR [eax],0x6b4d27e6
 1029ce7:	jl     0x1029c8c
 1029ce9:	xchg   BYTE PTR [esi],dh
 1029ceb:	outs   dx,BYTE PTR ds:[esi]
 1029cec:	mov    ah,0xb2
 1029cee:	mov    al,ds:0xf08b1992
 1029cf3:	add    ch,BYTE PTR [edi-0x16ea0a67]
 1029cf9:	hlt    
 1029cfa:	sbb    eax,0x70b83440
 1029cff:	test   edi,ebx
 1029d01:	bound  esp,QWORD PTR [ecx-0x29e72bbc]
 1029d07:	sub    BYTE PTR [eax],bl
 1029d09:	add    al,bl
 1029d0b:	jb     0x1029d0c
 1029d0d:	ins    DWORD PTR es:[edi],dx
 1029d0e:	mov    eax,0x1a7fd71
 1029d13:	add    BYTE PTR [ebx-0x69],cl
 1029d16:	cmc    
 1029d17:	jo     0x1029cf3
 1029d19:	sbb    DWORD PTR [edi+0x11c96a62],esp
 1029d1f:	push   0xa5292c4d
 1029d24:	jl     0x1029cfe
 1029d26:	rcr    dh,1
 1029d28:	ins    DWORD PTR es:[edi],dx
 1029d29:	mov    bh,0xe2
 1029d2b:	mov    cl,BYTE PTR [edi+0x7d]
 1029d2e:	add    DWORD PTR [edi],esi
 1029d30:	std    
 1029d31:	lock push ds
 1029d33:	pop    esp
 1029d34:	stc    
 1029d35:	pxor   mm0,mm3
 1029d38:	jae    0x1029d98
 1029d3a:	cmc    
 1029d3b:	popa   
 1029d3c:	dec    esp
 1029d3d:	je     0x1029d79
 1029d3f:	jle    0x1029cc2
 1029d41:	cdq    
 1029d42:	cdq    
 1029d43:	imul   edx,DWORD PTR [ebp-0x48],0xffffff97
 1029d47:	xchg   ebp,eax
 1029d48:	push   0x5e
 1029d4a:	xchg   esi,eax
 1029d4b:	mov    esp,0x8bcae8bb
 1029d50:	jbe    0x1029d80
 1029d52:	jp     0x1029dc3
 1029d54:	enter  0xbd,0xeb
 1029d58:	pop    ebp
 1029d59:	repnz mov ds:0xcb46491a,eax
 1029d5f:	out    dx,al
 1029d60:	loope  0x1029d5e
 1029d62:	shl    DWORD PTR [eax-0x42],cl
 1029d65:	push   cs
 1029d66:	jl     0x1029d70
 1029d68:	or     ebp,DWORD PTR [edx]
 1029d6a:	mov    esp,0xf650f532
 1029d6f:	or     DWORD PTR [ebp+0x7d98d5bb],ebp
 1029d75:	push   ebx
 1029d76:	mov    ds:0x6f2a5799,eax
 1029d7b:	rol    DWORD PTR [eax-0x4f8dff24],0xed
 1029d82:	sub    DWORD PTR [edi-0x7d],eax
 1029d85:	sti    
 1029d86:	mov    edx,0xecef8208
 1029d8b:	xchg   edi,eax
 1029d8c:	or     BYTE PTR [edi-0x4],dh
 1029d8f:	lock fild WORD PTR [eax+0x20]
 1029d93:	lods   al,BYTE PTR ds:[esi]
 1029d94:	pop    ecx
 1029d95:	jnp    0x1029dab
 1029d97:	dec    esi
 1029d98:	cmp    eax,0xc5fea9f7
 1029d9d:	(bad)  
 1029d9e:	lods   eax,DWORD PTR ds:[esi]
 1029d9f:	mov    al,ds:0xb70b3e07
 1029da4:	repz inc esi
 1029da6:	pusha  
 1029da7:	imul   ebp
 1029da9:	sbb    BYTE PTR [ecx+0x19],0x9b
 1029dad:	repz and bl,al
 1029db0:	test   ch,bh
 1029db2:	mov    ch,0xcf
 1029db4:	ins    BYTE PTR es:[edi],dx
 1029db5:	fisttp WORD PTR [eax-0x6aa2a004]
 1029dbb:	or     esi,DWORD PTR [edx+0x50]
 1029dbe:	ins    DWORD PTR es:[edi],dx
 1029dbf:	dec    al
 1029dc1:	add    eax,0x1ff56263
 1029dc6:	loop   0x1029d5f
 1029dc8:	pop    esi
 1029dc9:	cld    
 1029dca:	and    bl,ah
 1029dcc:	hlt    
 1029dcd:	inc    edi
 1029dce:	xchg   edi,eax
 1029dcf:	pusha  
 1029dd0:	xlat   BYTE PTR ds:[ebx]
 1029dd1:	inc    ebx
 1029dd2:	fwait
 1029dd3:	mov    cl,0x73
 1029dd5:	xlat   BYTE PTR ds:[ebx]
 1029dd6:	into   
 1029dd7:	cmp    ch,al
 1029dd9:	fsubr  QWORD PTR [edx-0x4b]
 1029ddc:	je     0x1029d88
 1029dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1029ddf:	mov    ebx,0x3c8bf27f
 1029de4:	inc    ebp
 1029de5:	mov    ecx,DWORD PTR [esp+ebx*8+0x6e569458]
 1029dec:	pop    edx
 1029ded:	arpl   WORD PTR [edx+0x3a8a896a],sp
 1029df3:	add    BYTE PTR [eax+0xe016769],dl
 1029df9:	jae    0x1029e0a
 1029dfb:	shr    BYTE PTR [ebx-0x2c],0xff
 1029dff:	fdiv   QWORD PTR [esi-0x20]
 1029e02:	adc    ah,BYTE PTR [eax]
 1029e04:	and    DWORD PTR [edi+eax*8],0x1ab8ab8d
 1029e0b:	and    BYTE PTR [esi],0x57
 1029e0e:	mov    ds:0xe6b28e95,eax
 1029e13:	mov    WORD PTR [edx+0x56],gs
 1029e16:	cs dec esi
 1029e18:	paddd  mm0,QWORD PTR [edi+esi*4-0x64]
 1029e1d:	sti    
 1029e1e:	jns    0x1029e2d
 1029e20:	cmp    BYTE PTR [ebx-0x73879383],al
 1029e26:	arpl   WORD PTR ds:0x20b5e04e,ax
 1029e2c:	inc    esp
 1029e2d:	pushf  
 1029e2e:	daa    
 1029e2f:	add    eax,ebx
 1029e31:	jp     0x1029e32
 1029e33:	ins    DWORD PTR es:[edi],dx
 1029e34:	fdiv   DWORD PTR [esi-0x7f7f8917]
 1029e3a:	adc    ecx,DWORD PTR [edi+0x7f]
 1029e3d:	ins    BYTE PTR es:[edi],dx
 1029e3e:	or     dh,BYTE PTR [edx-0x11]
 1029e41:	inc    DWORD PTR [edx+0x500371db]
 1029e47:	add    eax,0xafd2c35b
 1029e4c:	sbb    BYTE PTR ds:0x2ba550ff,cl
 1029e52:	int    0x4a
 1029e54:	addr16 jl 0x1029eb5
 1029e57:	inc    ebx
 1029e58:	push   ebp
 1029e59:	data16 fadd st(5),st
 1029e5c:	aad    0xa7
 1029e5e:	(bad)  
 1029e5f:	arpl   bx,cx
 1029e61:	fst    DWORD PTR [ecx+esi*1-0x73]
 1029e65:	cmp    ebx,DWORD PTR [ebp+0x17a8e81a]
 1029e6b:	add    ebx,edx
 1029e6d:	pop    DWORD PTR [ebx]
 1029e6f:	imul   BYTE PTR [ebp-0x77]
 1029e72:	(bad)  
 1029e73:	jbe    0x1029e64
 1029e75:	fiadd  DWORD PTR [ebp-0x4e7c58b2]
 1029e7b:	jp     0x1029e99
 1029e7d:	push   ebp
 1029e7e:	stos   DWORD PTR es:[edi],eax
 1029e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1029e80:	mov    edx,0xd61bb683
 1029e85:	mov    ah,0x86
 1029e87:	fistp  WORD PTR [edx]
 1029e89:	adc    eax,0xab1321fb
 1029e8e:	push   es
 1029e8f:	lods   eax,DWORD PTR ds:[esi]
 1029e90:	fcmove st,st(4)
 1029e92:	ds mov edi,0xf47e90d6
 1029e98:	out    0x6c,al
 1029e9a:	and    al,BYTE PTR [ebx]
 1029e9c:	sbb    al,0x3
 1029e9e:	pop    eax
 1029e9f:	mov    al,0xdb
 1029ea1:	or     DWORD PTR [ebx-0x485f69c8],0x7e0b68fd
 1029eab:	ror    DWORD PTR [eax-0x4e],cl
 1029eae:	mov    ebx,0x99d80d90
 1029eb3:	mov    esi,0x4ecc5f
 1029eb8:	pop    edi
 1029eb9:	scas   al,BYTE PTR es:[edi]
 1029eba:	and    DWORD PTR [eax+0x5459a78d],eax
 1029ec0:	aaa    
 1029ec1:	jbe    0x1029e46
 1029ec3:	mov    BYTE PTR [edx+0x1f],bl
 1029ec6:	outs   dx,DWORD PTR ds:[esi]
 1029ec7:	mov    ebp,0x2f314917
 1029ecc:	ret    0xd7ed
 1029ecf:	jg     0x1029ed6
 1029ed1:	add    BYTE PTR [eax+0x1831ed66],dh
 1029ed7:	jmp    0x1029f07
 1029ed9:	mul    ecx
 1029edb:	ja     0x1029eda
 1029edd:	sbb    BYTE PTR [esi-0x19],ch
 1029ee0:	cmc    
 1029ee1:	add    ch,ah
 1029ee3:	pop    esp
 1029ee4:	xor    BYTE PTR [esi+0x186b4ae2],dl
 1029eea:	inc    eax
 1029eeb:	pop    ss
 1029eec:	inc    eax
 1029eed:	cdq    
 1029eee:	cmp    eax,0xc3f04b0e
 1029ef3:	inc    esi
 1029ef4:	rcl    BYTE PTR [ebx-0xe343600],cl
 1029efa:	call   0x1f2d:0xd5269a5c
 1029f01:	cdq    
 1029f02:	dec    edx
 1029f03:	sub    al,0x35
 1029f05:	hlt    
 1029f06:	xchg   edx,eax
 1029f07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1029f08:	add    BYTE PTR [ebx-0x43],cl
 1029f0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1029f0c:	jae    0x1029efb
 1029f0e:	xchg   edi,eax
 1029f0f:	ltr    WORD PTR ds:[eax]
 1029f13:	lahf   
 1029f14:	pop    edx
 1029f15:	mov    WORD PTR [ebp-0x5],?
 1029f18:	mul    BYTE PTR [ecx-0x1]
 1029f1b:	in     al,dx
 1029f1c:	sub    al,0x6a
 1029f1e:	and    bh,BYTE PTR ds:0x45c0d778
 1029f24:	not    al
 1029f26:	sbb    DWORD PTR [ecx],esi
 1029f28:	sub    DWORD PTR [eax+0x7b],ebx
 1029f2b:	sub    DWORD PTR [edx+0x2a],esp
 1029f2e:	sub    eax,0x83566c87
 1029f33:	dec    edx
 1029f34:	adc    DWORD PTR [ebp+0x6745aa9c],eax
 1029f3a:	xor    esp,edi
 1029f3c:	add    dh,ah
 1029f3e:	add    BYTE PTR [esi],al
 1029f40:	mov    ecx,0xa0c2f81d
 1029f45:	add    BYTE PTR [edx+0x78],cl
 1029f48:	sub    edi,DWORD PTR [ebp-0x25]
 1029f4b:	cs push edx
 1029f4d:	ror    DWORD PTR [edi],0xcb
 1029f50:	pushf  
 1029f51:	add    BYTE PTR [edx],0xe0
 1029f54:	dec    edx
 1029f55:	inc    esi
 1029f56:	rol    DWORD PTR [ecx-0x10],cl
 1029f59:	ins    BYTE PTR es:[edi],dx
 1029f5a:	shl    DWORD PTR [edi-0x54],cl
 1029f5d:	xchg   ecx,eax
 1029f5e:	mov    BYTE PTR [ebx],ch
 1029f60:	lea    ebp,[eax-0x50f97fec]
 1029f66:	and    al,0x1a
 1029f68:	out    0x42,al
 1029f6a:	pop    ebp
 1029f6b:	inc    edi
 1029f6c:	push   ds
 1029f6d:	sbb    al,0xb0
 1029f6f:	in     eax,0xbe
 1029f71:	(bad)  [eax+0x20edf37d]
 1029f77:	adc    BYTE PTR [esi+0x3c],cl
 1029f7a:	std    
 1029f7b:	hlt    
 1029f7c:	adc    al,0x60
 1029f7e:	sar    DWORD PTR [edi],cl
 1029f80:	and    eax,0xb404066
 1029f85:	inc    ecx
 1029f86:	mov    ebx,0xab8ade55
 1029f8b:	(bad)  
 1029f8c:	mov    cl,0x74
 1029f8e:	aaa    
 1029f8f:	les    esi,FWORD PTR [ebx-0x1b669688]
 1029f95:	mov    cl,0x63
 1029f97:	dec    edx
 1029f98:	jg     0x1029f84
 1029f9a:	xor    eax,ebx
 1029f9c:	inc    esi
 1029f9d:	stos   BYTE PTR es:[edi],al
 1029f9e:	adc    eax,0x55062935
 1029fa3:	mov    dl,0x3c
 1029fa5:	mov    cl,BYTE PTR [ebx+esi*4-0x2e3f5608]
 1029fac:	das    
 1029fad:	add    al,BYTE PTR [eax]
 1029faf:	fdivr  QWORD PTR [edx-0x33]
 1029fb2:	out    0xf0,eax
 1029fb4:	int    0x2f
 1029fb6:	pop    edi
 1029fb7:	(bad)  
 1029fb9:	cmp    dh,dh
 1029fbb:	jno    0x1029f7c
 1029fbd:	or     dh,dh
 1029fbf:	loopne 0x102a023
 1029fc1:	fstp   QWORD PTR [ecx-0x20]
 1029fc4:	cdq    
 1029fc5:	shr    BYTE PTR [ecx],cl
 1029fc7:	dec    esi
 1029fc8:	fs fwait
 1029fca:	xchg   esp,eax
 1029fcb:	ficomp WORD PTR [ebx-0x3d]
 1029fce:	and    dl,dl
 1029fd0:	outs   dx,DWORD PTR ds:[esi]
 1029fd1:	sub    ch,BYTE PTR [ebp-0x265064b3]
 1029fd7:	push   0xd2a274c8
 1029fdc:	sbb    BYTE PTR [ebx+eax*1+0x3b730b0],bl
 1029fe3:	dec    ebx
 1029fe4:	inc    eax
 1029fe5:	inc    ebp
 1029fe6:	fnstenv [eax+0x5]
 1029fe9:	add    esp,DWORD PTR [esi-0x4b]
 1029fec:	add    DWORD PTR ds:0x2918c1d9,0x2a
 1029ff3:	or     ecx,DWORD PTR [ebx-0x37]
 1029ff6:	cmp    ecx,DWORD PTR [eax+0x8690ac]
 1029ffc:	leave  
 1029ffd:	jo     0x1029f81
 1029fff:	mov    bh,0x68
 102a001:	loope  0x102a050
 102a003:	jle    0x102a082
 102a005:	pop    eax
 102a006:	push   esi
 102a007:	jns    0x102a01c
 102a009:	adc    DWORD PTR [esi-0x5],ebp
 102a00c:	(bad)  
 102a00d:	jg     0x102a015
 102a00f:	or     BYTE PTR [eax-0x4d],bl
 102a012:	neg    BYTE PTR [eax-0x74]
 102a015:	jne    0x1029fae
 102a017:	stc    
 102a018:	pop    ss
 102a019:	mov    ebx,0xebb70c7e
 102a01e:	jp     0x102a064
 102a020:	leave  
 102a021:	lods   al,BYTE PTR ds:[esi]
 102a022:	sbb    al,0x50
 102a024:	mov    bh,0x42
 102a026:	mov    ds:0x2abb8ac1,al
 102a02b:	adc    eax,0x4953d54e
 102a030:	mov    ds:0x32400299,eax
 102a035:	pop    ebp
 102a036:	jmp    0x1462bc1
 102a03b:	xchg   ebp,eax
 102a03c:	or     DWORD PTR [edi],esp
 102a03e:	test   eax,0x24beb480
 102a043:	loopne 0x1029ffa
 102a045:	clc    
 102a046:	ret    0xfe08
 102a049:	ins    DWORD PTR es:[edi],dx
 102a04a:	ja     0x1029ff9
 102a04c:	(bad)  
 102a04d:	addr16 aas 
 102a04f:	stc    
 102a050:	sub    eax,0x8f51c000
 102a055:	jns    0x102a05d
 102a057:	xchg   esi,eax
 102a058:	scas   eax,DWORD PTR es:[edi]
 102a059:	cmp    bl,BYTE PTR ds:0xde63e363
 102a05f:	cmc    
 102a060:	scas   eax,DWORD PTR es:[edi]
 102a061:	pop    eax
 102a062:	fild   DWORD PTR [edx-0x49]
 102a065:	or     eax,0xb9629e84
 102a06a:	and    DWORD PTR [ecx],edx
 102a06c:	mov    ah,0xe4
 102a06e:	inc    ecx
 102a06f:	xor    dl,BYTE PTR [edi]
 102a071:	inc    ecx
 102a072:	iret   
 102a073:	sub    edi,ecx
 102a075:	inc    edx
 102a076:	shl    WORD PTR [eax+0x3ae675cc],cl
 102a07d:	dec    edi
 102a07e:	xchg   esp,eax
 102a07f:	or     BYTE PTR [edi],0xce
 102a082:	add    DWORD PTR [eax-0x68],ebx
 102a085:	fild   DWORD PTR [ecx-0x47e6afe7]
 102a08b:	dec    edx
 102a08c:	or     BYTE PTR ds:0x4cf4faaa,ch
 102a092:	mov    ch,0x77
 102a094:	add    edx,DWORD PTR [eax]
 102a096:	arpl   WORD PTR [ecx+eiz*8-0x5a],si
 102a09a:	(bad)  
 102a09b:	outs   dx,BYTE PTR ds:[esi]
 102a09c:	or     BYTE PTR [ecx],0x27
 102a09f:	mov    bl,0xe3
 102a0a1:	test   ebp,0x869d7693
 102a0a7:	xchg   esp,eax
 102a0a8:	adc    eax,0xf6658cd4
 102a0ad:	sbb    al,ah
 102a0af:	ret    
 102a0b0:	jnp    0x102a120
 102a0b2:	mov    edi,0xdfb73b0e
 102a0b7:	pop    es
 102a0b8:	add    BYTE PTR [eax-0x5],bl
 102a0bb:	clc    
 102a0bc:	lahf   
 102a0bd:	dec    ebx
 102a0be:	inc    ecx
 102a0bf:	out    dx,eax
 102a0c0:	call   DWORD PTR [esp+ebx*1]
 102a0c3:	add    edx,eax
 102a0c5:	push   ebp
 102a0c6:	push   eax
 102a0c7:	adc    eax,0x33b84a86
 102a0cc:	xchg   esi,eax
 102a0cd:	stc    
 102a0ce:	call   0x823219ae
 102a0d3:	les    eax,FWORD PTR [eax+0x3982c5e]
 102a0d9:	xor    BYTE PTR [edi],al
 102a0db:	lds    edi,FWORD PTR [ebp-0xcb52f4c]
 102a0e1:	push   ds
 102a0e2:	inc    eax
 102a0e3:	test   DWORD PTR [ebp+0x73],esp
 102a0e6:	mov    ah,0x21
 102a0e8:	dec    esi
 102a0e9:	xchg   ebx,eax
 102a0ea:	bound  ebx,QWORD PTR [eax-0xfd4b82]
 102a0f0:	inc    edi
 102a0f1:	fcomip st,st(5)
 102a0f3:	sub    DWORD PTR [eax],eax
 102a0f5:	shl    dl,0xe3
 102a0f8:	push   ds
 102a0f9:	mov    esp,DWORD PTR [ebx]
 102a0fb:	dec    edi
 102a0fc:	jge    0x102a120
 102a0fe:	cmp    bl,BYTE PTR [ebp+0x499d3a0e]
 102a104:	mov    WORD PTR [edi-0x1a755c73],cs
 102a10a:	mov    BYTE PTR cs:[ebp-0x61],al
 102a10e:	ss mov bl,0x95
 102a111:	outs   dx,DWORD PTR ds:[esi]
 102a112:	xchg   ebp,eax
 102a113:	mov    eax,0xb3c68dd2
 102a118:	sub    cl,cl
 102a11a:	or     edx,0xffffffae
 102a11d:	shl    BYTE PTR [eax+0x720c2f46],1
 102a123:	cld    
 102a124:	xadd   BYTE PTR [edx],al
 102a127:	fmul   QWORD PTR [esi]
 102a129:	jl     0x102a129
 102a12b:	(bad)  
 102a12d:	and    al,0xc3
 102a12f:	gs pop ebp
 102a131:	test   eax,0xe371bc92
 102a136:	dec    eax
 102a137:	rcl    BYTE PTR [esi-0x5212e47e],1
 102a13d:	hlt    
 102a13e:	xchg   DWORD PTR [ecx-0x21],esi
 102a141:	ins    BYTE PTR es:[edi],dx
 102a142:	cmp    edx,DWORD PTR [edx-0x736cddf7]
 102a148:	repnz ins BYTE PTR es:[edi],dx
 102a14a:	cmp    al,0x0
 102a14c:	cmc    
 102a14d:	jns    0x102a1bc
 102a14f:	xchg   edi,eax
 102a150:	outs   dx,DWORD PTR gs:[esi]
 102a152:	adc    al,BYTE PTR [ecx+0x700f1e]
 102a158:	aad    0x84
 102a15a:	cmp    ebp,DWORD PTR [edi-0x8]
 102a15d:	or     cl,BYTE PTR [eax]
 102a15f:	test   BYTE PTR [edi-0x61],al
 102a162:	jne    0x102a17e
 102a164:	pop    edx
 102a165:	jecxz  0x102a19a
 102a167:	(bad)  
 102a168:	(bad)  
 102a16a:	imul   esp,ecx,0xfffffff6
 102a16d:	fsub   st(1),st
 102a16f:	xor    esp,DWORD PTR [ebp+0x2b]
 102a172:	sbb    BYTE PTR ds:0x85df523e,ch
 102a178:	jae    0x102a105
 102a17a:	cwde   
 102a17b:	daa    
 102a17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102a17d:	mov    esi,0xd2b4003e
 102a182:	repz pop edx
 102a184:	jo     0x102a16c
 102a186:	enter  0x53bf,0x3c
 102a18a:	repnz and BYTE PTR [ebx+0x60],ah
 102a18e:	mov    eax,0xe80d9882
 102a193:	mov    ds:0xe519ac00,eax
 102a198:	xchg   DWORD PTR [ebp-0x2a62e43b],esp
 102a19e:	shl    BYTE PTR [ecx-0x7c6ffcd1],0x7f
 102a1a5:	int    0xd9
 102a1a7:	iret   
 102a1a8:	shl    esp,0xe4
 102a1ab:	and    al,0xa6
 102a1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102a1ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102a1af:	xor    DWORD PTR [ecx],edi
 102a1b1:	aad    0x45
 102a1b3:	jnp    0x102a221
 102a1b5:	in     al,dx
 102a1b6:	sbb    BYTE PTR [ebx],0xcd
 102a1b9:	dec    edx
 102a1ba:	(bad)  
 102a1bb:	aas    
 102a1bc:	xchg   edx,eax
 102a1bd:	nop
 102a1be:	adc    eax,0x78d5ed69
 102a1c3:	lea    esi,[esi+eiz*8+0x786b5b92]
 102a1ca:	inc    esp
 102a1cb:	call   0x7af:0xbaf6f816
 102a1d2:	xor    DWORD PTR [edi+0x34],ecx
 102a1d5:	xchg   esp,eax
 102a1d6:	in     eax,dx
 102a1d7:	shr    bh,0xfc
 102a1da:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102a1dc:	jmp    0x4f7bd196
 102a1e1:	fucomip st,st(5)
 102a1e3:	rol    BYTE PTR [eax+eiz*8],0x4a
 102a1e7:	mov    bl,0x1d
 102a1e9:	clc    
 102a1ea:	jl     0x102a18a
 102a1ec:	add    eax,0x95a542a0
 102a1f1:	mov    ch,bl
 102a1f3:	mov    bl,0x20
 102a1f5:	xchg   DWORD PTR [esi-0x29ef5692],esi
 102a1fb:	sbb    dh,BYTE PTR [esi]
 102a1fd:	and    eax,0xc81a7da3
 102a202:	mov    esi,0x856d2252
 102a207:	inc    ebp
 102a208:	or     BYTE PTR [eax+0x2c],bl
 102a20b:	inc    ebx
 102a20c:	add    esp,DWORD PTR [ebp+0x3b]
 102a20f:	retf   0xfdc2
 102a212:	mov    ebp,0xbd8b5c77
 102a217:	mov    ebx,0x1c0401b6
 102a21c:	jae    0x102a1f0
 102a21e:	mov    ds:0x3e9bcf12,eax
 102a223:	pop    ds
 102a224:	add    dh,BYTE PTR [edx]
 102a226:	add    BYTE PTR [edx],al
 102a228:	clc    
 102a229:	sbb    eax,0xce096a00
 102a22e:	dec    eax
 102a22f:	test   BYTE PTR [ecx-0x29],ah
 102a232:	xchg   BYTE PTR [edi+0xd],ch
 102a235:	inc    ebx
 102a236:	jno    0x102a214
 102a238:	dec    edi
 102a239:	mov    bh,BYTE PTR [edx+0x16d73b68]
 102a23f:	or     al,0x86
 102a241:	add    dh,BYTE PTR [ecx+0x57]
 102a244:	and    eax,DWORD PTR [edx-0x2d0caf43]
 102a24a:	jae    0x102a1d4
 102a24c:	test   DWORD PTR [esi+edi*1+0x2ace8014],esi
 102a253:	pusha  
 102a254:	cmc    
 102a255:	imul   eax,DWORD PTR [eax-0x4884ed96],0xffffffdd
 102a25c:	call   0xaf5e:0x853bbf83
 102a263:	xchg   DWORD PTR [ecx+0x26261ee9],ebp
 102a269:	cmp    ch,BYTE PTR [eax-0x49]
 102a26c:	(bad)  [ecx+0x2ea194a2]
 102a272:	mov    ah,0x23
 102a274:	fild   QWORD PTR [edx+0x11182e7a]
 102a27a:	out    0xc4,eax
 102a27c:	or     al,0x90
 102a27e:	add    al,0xb2
 102a280:	push   esp
 102a281:	or     al,0xa1
 102a283:	dec    esp
 102a284:	inc    ebp
 102a285:	mov    ebp,0x40fef106
 102a28a:	cmp    dh,BYTE PTR [ecx-0x80]
 102a28d:	xor    al,0xb4
 102a28f:	test   DWORD PTR [eax-0x3],eax
 102a292:	mov    dh,0x3
 102a294:	jae    0x102a23b
 102a296:	bnd jbe 0x102a279
 102a299:	pop    eax
 102a29a:	xchg   edi,eax
 102a29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102a29c:	sub    ebx,DWORD PTR [edx]
 102a29e:	inc    eax
 102a29f:	add    BYTE PTR ds:[ebp-0x23],ch
 102a2a3:	in     eax,dx
 102a2a4:	adc    ch,0x7
 102a2a7:	repnz xor dl,ch
 102a2aa:	and    eax,0x128a1184
 102a2af:	add    dl,BYTE PTR [eax+eax*8+0x647ce4df]
 102a2b6:	or     ecx,DWORD PTR [ebp+0x4]
 102a2b9:	das    
 102a2ba:	xor    bl,BYTE PTR [esi-0x6d]
 102a2bd:	inc    edx
 102a2be:	xchg   edx,eax
 102a2bf:	gs mov dh,0x69
 102a2c2:	adc    BYTE PTR [ecx],dl
 102a2c4:	ss fdivr st(0),st
 102a2c7:	xor    eax,0x9cc78080
 102a2cc:	std    
 102a2cd:	sub    BYTE PTR [eax-0x4a807b2a],bh
 102a2d3:	std    
 102a2d4:	cmp    bh,BYTE PTR [eax-0x348c6403]
 102a2da:	out    dx,eax
 102a2db:	sub    bh,BYTE PTR [edi+0xd]
 102a2de:	pop    ss
 102a2df:	xor    BYTE PTR [ecx],ch
 102a2e1:	data16 add BYTE PTR [esp+eax*2-0x13d46c35],ah
 102a2e9:	lock ja 0x102a2f8
 102a2ec:	daa    
 102a2ed:	sub    eax,DWORD PTR [edx-0x22]
 102a2f0:	xlat   BYTE PTR ds:[ebx]
 102a2f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a2f2:	mov    ds:0x2039e0eb,al
 102a2f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102a2f8:	xlat   BYTE PTR ds:[ebx]
 102a2f9:	push   esp
 102a2fa:	pop    edx
 102a2fb:	adc    dh,BYTE PTR [ebp-0x21b2f55f]
 102a301:	repnz scas eax,DWORD PTR es:[edi]
 102a303:	cli    
 102a304:	add    esp,DWORD PTR [eax-0x31133b66]
 102a30a:	(bad)  
 102a30b:	clc    
 102a30c:	les    edi,FWORD PTR [ebx+0x30001aff]
 102a312:	mov    ch,0x6c
 102a314:	xor    eax,0x1cfd9f56
 102a319:	je     0x102a341
 102a31b:	mov    ebx,0xd0f74de8
 102a320:	jmp    0x102a2ef
 102a322:	mov    al,ds:0x58c499d3
 102a327:	jnp    0x102a335
 102a329:	scas   al,BYTE PTR es:[edi]
 102a32a:	stos   BYTE PTR es:[edi],al
 102a32b:	xchg   esp,eax
 102a32c:	pop    esp
 102a32d:	(bad)  
 102a32e:	aam    0x85
 102a330:	pop    ss
 102a331:	lds    edi,FWORD PTR [edx-0x3779663a]
 102a337:	fcmovbe st,st(0)
 102a339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102a33a:	out    0x5,eax
 102a33c:	mov    edi,0xae2fb344
 102a341:	mov    ds:0xc886babc,eax
 102a346:	xchg   dl,ah
 102a348:	and    dh,BYTE PTR [edx]
 102a34a:	push   0xc
 102a34c:	xor    ch,BYTE PTR [edi]
 102a34e:	xor    al,0x9c
 102a350:	jne    0x102a352
 102a352:	add    eax,0x9d947592
 102a357:	popf   
 102a358:	lods   ax,WORD PTR ds:[esi]
 102a35a:	mov    bl,0x6c
 102a35c:	inc    esp
 102a35d:	adc    ebx,DWORD PTR [edi+0x36]
 102a360:	inc    esi
 102a361:	jecxz  0x102a354
 102a363:	pop    esp
 102a364:	(bad)  
 102a366:	dec    esi
 102a367:	arpl   WORD PTR [ebx],cx
 102a369:	ror    BYTE PTR ds:0x4106e318,1
 102a36f:	mov    DWORD PTR [ebx+0x7a],ecx
 102a372:	dec    ecx
 102a373:	(bad)  
 102a374:	mov    eax,DWORD PTR [esi+0xf]
 102a377:	shl    BYTE PTR [ebx],1
 102a379:	mov    eax,0xb28bd2d6
 102a37e:	xor    eax,0x97122379
 102a383:	fs retf 
 102a385:	dec    esi
 102a386:	jle    0x102a3f4
 102a388:	in     al,0x8e
 102a38a:	jmp    0x102a34b
 102a38c:	mov    WORD PTR ds:0x4082b6bb,?
 102a392:	cmp    dl,bh
 102a394:	(bad)  
 102a395:	rcl    DWORD PTR [edx+0x76],cl
 102a398:	fwait
 102a399:	ds (bad) 
 102a39b:	aam    0x67
 102a39d:	or     DWORD PTR [eax+0x58243b47],eax
 102a3a3:	jns    0x102a36a
 102a3a5:	inc    eax
 102a3a6:	adc    eax,0x2347b6d2
 102a3ab:	loope  0x102a3d9
 102a3ad:	adc    DWORD PTR [ecx-0x45],0xa5acce4a
 102a3b4:	out    0xf0,al
 102a3b6:	cld    
 102a3b7:	dec    edx
 102a3b8:	or     al,0x32
 102a3ba:	adc    dl,BYTE PTR [edi-0x38]
 102a3bd:	add    esp,edx
 102a3bf:	pop    esp
 102a3c0:	lods   al,BYTE PTR ds:[esi]
 102a3c1:	in     al,dx
 102a3c2:	mov    edx,0x935aefc
 102a3c7:	sbb    al,0xf3
 102a3c9:	ror    BYTE PTR [eax],cl
 102a3cb:	dec    BYTE PTR [edi+0x7823f3bf]
 102a3d1:	push   0x66746efb
 102a3d6:	push   esi
 102a3d7:	(bad)  
 102a3d8:	int    0x79
 102a3da:	mov    edi,0x176ec981
 102a3df:	xor    edx,ebx
 102a3e1:	xor    ebp,eax
 102a3e3:	int    0xcc
 102a3e5:	pusha  
 102a3e6:	mov    dl,0xdb
 102a3e8:	(bad)  
 102a3eb:	cmp    BYTE PTR [eax+esi*1+0x2a],bl
 102a3ef:	(bad)  
 102a3f0:	retf   0x3116
 102a3f3:	fadd   DWORD PTR [eax]
 102a3f5:	ss pop ecx
 102a3f7:	div    DWORD PTR [ecx-0x1a]
 102a3fa:	adc    al,0x79
 102a3fc:	fmul   st,st(4)
 102a3fe:	cs dec eax
 102a400:	cmp    eax,0x505632ca
 102a405:	cli    
 102a406:	xor    al,BYTE PTR [ecx]
 102a408:	mov    ebx,0xc367e2ec
 102a40d:	add    ebp,DWORD PTR [eax]
 102a40f:	clc    
 102a410:	inc    eax
 102a411:	(bad)  
 102a412:	icebp  
 102a413:	mov    bl,0xd8
 102a415:	das    
 102a416:	push   es
 102a417:	xchg   esi,eax
 102a418:	popa   
 102a419:	mov    WORD PTR [edi],ss
 102a41b:	pop    ebx
 102a41c:	or     BYTE PTR [edx+0x3fe52327],bl
 102a422:	cmp    BYTE PTR [ecx+ebp*8+0x34291984],0x4e
 102a42a:	ds xchg esp,eax
 102a42c:	mov    esp,0xe5b33214
 102a431:	push   0x74
 102a433:	mul    DWORD PTR [ebp+0x251f5a0]
 102a439:	sti    
 102a43a:	imul   esi
 102a43c:	mov    dh,0xdb
 102a43f:	scas   al,BYTE PTR es:[edi]
 102a440:	push   es
 102a441:	add    BYTE PTR [ebx+esi*8-0xa6c8c6c],bl
 102a448:	(bad)  
 102a44a:	gs mov eax,0xa3f0cdd9
 102a450:	repnz push cs
 102a452:	test   al,0xa4
 102a454:	in     eax,0x6f
 102a456:	test   DWORD PTR [edx+0x196047b1],eax
 102a45c:	daa    
 102a45d:	loope  0x102a494
 102a45f:	xchg   esp,eax
 102a460:	cld    
 102a461:	adc    BYTE PTR [ecx+0x1e],ah
 102a464:	arpl   WORD PTR [edi+0x4a],di
 102a467:	push   esp
 102a468:	push   esp
 102a469:	xor    al,0x77
 102a46b:	cld    
 102a46c:	sahf   
 102a46d:	add    ebx,DWORD PTR [edi]
 102a46f:	test   dl,dh
 102a471:	lock (bad) 
 102a473:	mov    al,ds:0xb6fc23c8
 102a478:	cmp    al,al
 102a47a:	stos   BYTE PTR es:[edi],al
 102a47b:	push   edi
 102a47c:	add    ah,BYTE PTR [ebx-0x35]
 102a47f:	xor    dh,al
 102a481:	lahf   
 102a482:	jo     0x102a445
 102a484:	or     esi,DWORD PTR [ecx]
 102a486:	mov    ebp,0xbba62968
 102a48b:	rcr    DWORD PTR [eax-0x245e1662],cl
 102a491:	popf   
 102a492:	mov    ah,al
 102a494:	scas   eax,DWORD PTR es:[edi]
 102a495:	pushf  
 102a496:	push   ebx
 102a497:	ins    DWORD PTR es:[edi],dx
 102a498:	(bad)
 102a49b:	fldcw  WORD PTR [esi]
 102a49d:	rcl    DWORD PTR [esi+0x2b723cd6],cl
 102a4a3:	jne    0x102a505
 102a4a5:	js     0x102a4f8
 102a4a7:	pop    esp
 102a4a8:	imul   DWORD PTR [edi]
 102a4aa:	mov    ch,BYTE PTR [esi]
 102a4ac:	test   esi,edx
 102a4ae:	out    dx,al
 102a4af:	inc    ecx
 102a4b0:	mov    dl,cl
 102a4b2:	mov    eax,ds:0x7945d024
 102a4b7:	sbb    BYTE PTR [edx+ebx*1+0xf1a9f8],bl
 102a4be:	add    BYTE PTR [eax+0x10],ch
 102a4c1:	mov    al,0x91
 102a4c3:	jb     0x102a467
 102a4c5:	add    cl,BYTE PTR [ebp-0x7706f3d5]
 102a4cb:	aam    0x4f
 102a4cd:	push   DWORD PTR [ecx+0x6ceb2114]
 102a4d3:	xchg   ebp,eax
 102a4d4:	lods   eax,DWORD PTR ds:[esi]
 102a4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102a4d6:	push   ecx
 102a4d7:	adc    ah,BYTE PTR [edx+0x6e8651ec]
 102a4dd:	popf   
 102a4de:	xchg   esp,edx
 102a4e0:	dec    BYTE PTR [ebp+0x16]
 102a4e3:	aas    
 102a4e4:	push   es
 102a4e5:	ja     0x102a469
 102a4e7:	pop    ss
 102a4e8:	sbb    DWORD PTR [esi-0x1e],ebx
 102a4eb:	(bad)
 102a4ef:	repnz sub eax,0x83dbedcc
 102a4f5:	into   
 102a4f6:	fs pop es
 102a4f8:	dec    ebx
 102a4f9:	mov    ds,WORD PTR [ebx+eiz*8+0x5f]
 102a4fd:	aam    0x7b
 102a4ff:	loopne 0x102a4b7
 102a501:	jle    0x102a50c
 102a503:	push   ecx
 102a504:	or     ch,BYTE PTR [ebx-0x5f528ff6]
 102a50a:	add    dl,bl
 102a50c:	loope  0x102a545
 102a50e:	sub    BYTE PTR [ecx],al
 102a510:	ds pop ds
 102a512:	pop    esp
 102a513:	or     BYTE PTR [esi+0x59c51c5d],0xc1
 102a51a:	fisttp QWORD PTR [edx+0x1f74a228]
 102a520:	or     DWORD PTR [eax],0xffffffc0
 102a523:	cmp    esp,DWORD PTR [eax]
 102a525:	lea    edx,[ecx]
 102a527:	pop    eax
 102a528:	mov    ebp,DWORD PTR [edi]
 102a52a:	sub    DWORD PTR [edi],0x50a549e2
 102a530:	dec    ebp
 102a531:	add    bh,al
 102a533:	mov    ebp,0x16389802
 102a538:	cwde   
 102a539:	fisttp DWORD PTR [ebp+0x27d0ffbf]
 102a53f:	adc    bh,al
 102a541:	lahf   
 102a542:	clc    
 102a543:	inc    edx
 102a544:	dec    esp
 102a545:	not    DWORD PTR [esi+0x1a6a7a62]
 102a54b:	mov    ebp,0x4d4c1999
 102a550:	dec    esi
 102a551:	popa   
 102a552:	jl     0x102a5d0
 102a554:	cmp    al,0xed
 102a556:	add    dl,BYTE PTR [ebp+edx*1+0x24eeb2c]
 102a55d:	pop    ecx
 102a55e:	cmp    al,0x57
 102a560:	dec    ebp
 102a561:	push   0x947b73de
 102a566:	in     al,0x48
 102a568:	cmp    eax,0xc23f293
 102a56d:	push   ecx
 102a56e:	push   ss
 102a56f:	iret   
 102a570:	call   0xa0e66847
 102a575:	or     eax,0x2323200f
 102a57a:	jae    0x102a552
 102a57c:	pop    edx
 102a57d:	(bad)  
 102a57e:	scas   al,BYTE PTR es:[edi]
 102a57f:	test   eax,0xb3292594
 102a584:	loop   0x102a5e0
 102a586:	mov    edx,0x3046c552
 102a58b:	xor    eax,0x9280bcaf
 102a590:	div    BYTE PTR [eax]
 102a592:	cs mov ebx,0x3c24ef2
 102a598:	imul   ebx,DWORD PTR ds:0x3ef15aec,0x43eb3f06
 102a5a2:	xor    bh,BYTE PTR [esi-0x51355f5c]
 102a5a8:	(bad)  
 102a5ab:	mov    ebx,0x576dcf71
 102a5b0:	add    DWORD PTR [eax+0x38],0xfffffffd
 102a5b4:	fadd   st(7),st
 102a5b6:	jns    0x102a548
 102a5b8:	add    esp,DWORD PTR [eax-0x323da8d3]
 102a5be:	in     eax,dx
 102a5bf:	sub    edx,0xfc16bbf3
 102a5c5:	loopne 0x102a623
 102a5c7:	add    BYTE PTR [edi-0x3b],bh
 102a5ca:	fiadd  WORD PTR [eax]
 102a5cc:	pop    ss
 102a5cd:	pop    esp
 102a5ce:	xor    BYTE PTR [ebx+0x447d34b9],bl
 102a5d4:	fcompp 
 102a5d6:	addr16 push edx
 102a5d8:	inc    ecx
 102a5d9:	or     BYTE PTR [ebx],dl
 102a5db:	cwde   
 102a5dc:	sub    eax,0x15f98216
 102a5e1:	iret   
 102a5e2:	ins    DWORD PTR es:[edi],dx
 102a5e3:	ja     0x102a626
 102a5e5:	cmp    bh,0xb
 102a5e8:	pop    ds
 102a5e9:	sti    
 102a5ea:	xor    BYTE PTR [esi],dh
 102a5ec:	outs   dx,BYTE PTR ds:[esi]
 102a5ed:	fmul   DWORD PTR [edx-0x54f8a72a]
 102a5f3:	iret   
 102a5f4:	jnp    0x102a614
 102a5f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a5f8:	xchg   edi,eax
 102a5f9:	pusha  
 102a5fa:	jp     0x102a636
 102a5fc:	cmp    BYTE PTR [edi-0x7097ac5],0x38
 102a603:	pop    esp
 102a604:	retf   
 102a605:	ja     0x102a67e
 102a607:	fs jmp 0x29a5:0xb42a7bca
 102a60f:	xchg   ebp,eax
 102a610:	mov    edi,0x427f296
 102a615:	test   eax,0xd7c615e4
 102a61a:	inc    esi
 102a61b:	mov    edi,0xa8f59d35
 102a620:	rol    BYTE PTR [ebp+0x59],cl
 102a623:	inc    esi
 102a624:	push   es
 102a625:	or     eax,0x5d68607e
 102a62a:	xor    al,0x8b
 102a62d:	fs in  eax,0xa3
 102a630:	mov    BYTE PTR ds:0xc21f834,0xc
 102a637:	inc    esp
 102a638:	cmp    al,0xa9
 102a63a:	dec    ecx
 102a63b:	dec    ebp
 102a63c:	pop    eax
 102a63d:	fnstcw WORD PTR [eax]
 102a63f:	jno    0x102a635
 102a641:	push   esi
 102a642:	push   0x7d167b72
 102a647:	out    0x36,al
 102a649:	mov    dh,al
 102a64b:	xchg   ecx,eax
 102a64c:	clc    
 102a64d:	call   0xc32496b9
 102a652:	rep outs dx,DWORD PTR ds:[esi]
 102a654:	mov    edi,0xaa029506
 102a659:	push   esi
 102a65a:	adc    al,0x1a
 102a65c:	sub    DWORD PTR [esi-0x53e2ad4],ecx
 102a662:	out    dx,eax
 102a663:	fild   WORD PTR [ebx+0x2583b74e]
 102a669:	inc    edi
 102a66a:	scas   al,BYTE PTR es:[edi]
 102a66b:	mul    cl
 102a66d:	jmp    0x7cd:0xff5b703d
 102a674:	scas   al,BYTE PTR es:[edi]
 102a675:	inc    edx
 102a676:	retf   0x7e0c
 102a679:	xlat   BYTE PTR ds:[ebx]
 102a67a:	xchg   BYTE PTR [edi-0x3dfb5304],dh
 102a680:	jnp    0x102a6f8
 102a682:	scas   eax,DWORD PTR es:[edi]
 102a683:	mov    dl,0xd5
 102a685:	jg     0x102a6d3
 102a687:	xchg   esi,eax
 102a688:	repz sar BYTE PTR [ebp-0x318250fc],cl
 102a68f:	jmp    0x8722d59e
 102a694:	xor    esi,DWORD PTR [ecx-0x53]
 102a697:	inc    edi
 102a698:	jo     0x102a65e
 102a69a:	scas   eax,DWORD PTR es:[edi]
 102a69b:	sub    eax,esi
 102a69d:	fcomip st,st(4)
 102a69f:	ret    
 102a6a0:	jnp    0x102a672
 102a6a2:	sbb    ch,bl
 102a6a4:	loopne 0x102a69e
 102a6a6:	jne    0x102a6d7
 102a6a8:	ror    ah,0x92
 102a6ab:	mov    ds:0x3cf5ebd0,eax
 102a6b0:	clc    
 102a6b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102a6b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a6b3:	xor    DWORD PTR [esi],esi
 102a6b5:	xor    DWORD PTR [ecx+0x26afcb56],eax
 102a6bb:	mov    ch,0x75
 102a6bd:	xchg   esi,eax
 102a6be:	jne    0x102a66a
 102a6c0:	sbb    esp,DWORD PTR [esp+eax*2+0x16]
 102a6c4:	mov    DWORD PTR [eax],edi
 102a6c6:	or     BYTE PTR [eax],0x2f
 102a6c9:	(bad)  [esi+edx*1]
 102a6cc:	ror    edx,0xf
 102a6cf:	inc    esp
 102a6d0:	fisub  DWORD PTR [edx+0x559859fd]
 102a6d6:	sub    eax,0x6505c837
 102a6db:	pop    ss
 102a6dc:	and    DWORD PTR [ecx+0x2c06ed21],0xffffff97
 102a6e3:	xor    dh,bl
 102a6e5:	les    ebx,FWORD PTR [ebp-0x4f2ac092]
 102a6eb:	loop   0x102a746
 102a6ed:	jbe    0x102a709
 102a6ef:	mov    ebp,DWORD PTR [esp+edi*2+0x4d389861]
 102a6f6:	xchg   ebp,eax
 102a6f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102a6f8:	lea    ebp,[ebx]
 102a6fa:	js     0x102a74d
 102a6fc:	sub    al,0x97
 102a6fe:	out    dx,al
 102a6ff:	lea    eax,[esi-0x70]
 102a702:	jp     0x102a6c8
 102a704:	xchg   esi,eax
 102a705:	xchg   DWORD PTR [esp+ebx*2-0xf],ebp
 102a709:	mov    ds:0xb625cda9,al
 102a70e:	imul   ah
 102a710:	fmul   QWORD PTR [edx+0x5dfc7f7b]
 102a716:	add    BYTE PTR [eax-0x4386302d],0xb1
 102a71d:	(bad)  
 102a71e:	mov    ebx,0xdcfd06a0
 102a723:	sbb    BYTE PTR [eax+esi*8],bh
 102a726:	ret    
 102a727:	pop    ds
 102a728:	fcom   DWORD PTR [ebx]
 102a72a:	or     BYTE PTR [ecx+0x2a],al
 102a72d:	jmp    0x102a706
 102a72f:	retf   0x375a
 102a732:	dec    edx
 102a733:	rcl    ebp,0xd0
 102a736:	sbb    eax,0x6aa1ab60
 102a73b:	icebp  
 102a73c:	mov    eax,0x3aabd14e
 102a741:	lods   al,BYTE PTR ds:[esi]
 102a742:	ds and al,0xe4
 102a745:	fld    QWORD PTR [ecx]
 102a747:	xor    bh,BYTE PTR [edi+0x21]
 102a74a:	out    dx,al
 102a74b:	mov    bl,BYTE PTR [edi+0x5]
 102a74e:	data16 cld 
 102a750:	mov    cl,0xef
 102a752:	push   ss
 102a753:	cld    
 102a754:	mov    ecx,DWORD PTR [esi-0x16567ca8]
 102a75a:	sub    DWORD PTR [edi+esi*8+0x7a],ecx
 102a75e:	cwde   
 102a75f:	sahf   
 102a760:	call   0x726e:0x7f0044c6
 102a767:	jae    0x102a794
 102a769:	pop    edi
 102a76a:	aam    0xd6
 102a76c:	mov    dh,0x61
 102a76e:	test   BYTE PTR [edx+0x5a44dacd],dh
 102a774:	jno    0x102a719
 102a776:	and    ah,ah
 102a778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102a779:	stos   BYTE PTR es:[edi],al
 102a77a:	and    eax,0xefee4e11
 102a77f:	sub    cl,dh
 102a781:	inc    esp
 102a782:	idiv   cl
 102a784:	add    BYTE PTR [ecx+0x48],ch
 102a787:	pop    ebp
 102a788:	add    BYTE PTR [edx],ch
 102a78a:	faddp  st(6),st
 102a78c:	xchg   ecx,eax
 102a78d:	push   edi
 102a78e:	stc    
 102a78f:	pop    eax
 102a790:	push   0x514ca66e
 102a795:	enter  0x20c6,0xe8
 102a799:	test   eax,0xd2cb2917
 102a79e:	mov    ebp,0xf14bce86
 102a7a3:	add    DWORD PTR ds:0xec0dcc87,ecx
 102a7a9:	xchg   DWORD PTR [edi+0x146ba002],eax
 102a7af:	clc    
 102a7b0:	pop    ss
 102a7b1:	popa   
 102a7b2:	in     eax,0xac
 102a7b4:	xchg   DWORD PTR [ecx+edi*8-0x2d],esi
 102a7b8:	cmp    BYTE PTR [edx],0x61
 102a7bb:	ret    
 102a7bc:	or     eax,0xbeecc15f
 102a7c1:	fstp   QWORD PTR [eax-0x44]
 102a7c4:	jl     0x102a837
 102a7c6:	mov    dl,0xfe
 102a7c8:	sti    
 102a7c9:	mov    bh,0xc2
 102a7cb:	ins    DWORD PTR es:[edi],dx
 102a7cc:	stc    
 102a7cd:	or     dl,dl
 102a7cf:	inc    eax
 102a7d0:	pop    edi
 102a7d1:	call   0x55084bc9
 102a7d6:	rol    DWORD PTR [ebx],0xe0
 102a7d9:	add    DWORD PTR cs:[ecx],ecx
 102a7dc:	mov    al,0x94
 102a7de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a7df:	aas    
 102a7e0:	adc    al,0x73
 102a7e2:	sbb    dl,0x1e
 102a7e5:	pop    esp
 102a7e6:	cdq    
 102a7e7:	inc    edx
 102a7e8:	adc    DWORD PTR [ebx],eax
 102a7ea:	pop    edi
 102a7eb:	pop    eax
 102a7ec:	stc    
 102a7ed:	mov    eax,0x5401c890
 102a7f2:	xchg   esp,edi
 102a7f4:	sbb    al,ah
 102a7f6:	test   DWORD PTR [ebp-0x69009fd],edi
 102a7fc:	scas   eax,DWORD PTR es:[edi]
 102a7fd:	add    BYTE PTR [ebx],dh
 102a7ff:	out    0x2,eax
 102a801:	add    BYTE PTR [esi-0x10],bh
 102a804:	aad    0xbf
 102a806:	ret    
 102a807:	dec    ebp
 102a808:	aas    
 102a809:	mov    esp,0xf83c0007
 102a80e:	push   edi
 102a80f:	lods   al,BYTE PTR ds:[esi]
 102a810:	(bad)  
 102a811:	hlt    
 102a812:	aam    0x14
 102a814:	jp     0x102a7d3
 102a816:	sbb    DWORD PTR [edi+eax*1-0x35],ecx
 102a81a:	pop    edi
 102a81b:	sbb    eax,esi
 102a81d:	sub    ecx,ebx
 102a81f:	retf   
 102a820:	in     eax,0x90
 102a822:	pop    ecx
 102a823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a824:	es dec edx
 102a826:	xor    al,al
 102a828:	iret   
 102a829:	dec    ebx
 102a82a:	add    BYTE PTR [ebp+0x2e8d5ae9],dl
 102a830:	jmp    0xe6a2:0x2a08794a
 102a837:	and    DWORD PTR [ebx+0x1c],edx
 102a83a:	mov    ds:0xab9db34a,al
 102a83f:	add    esp,DWORD PTR [ecx+eiz*4+0xeb81d7d]
 102a846:	ds scas eax,DWORD PTR es:[edi]
 102a848:	sar    BYTE PTR [eax+0x32a14f2c],cl
 102a84e:	mov    esi,0xf855d571
 102a853:	mov    ds,eax
 102a855:	push   cs
 102a856:	jl     0x102a856
 102a858:	pop    ecx
 102a859:	cli    
 102a85a:	mov    ebx,0x6c0ac500
 102a85f:	nop
 102a860:	jno    0x102a8dd
 102a862:	aam    0xb7
 102a864:	or     al,0x5b
 102a866:	and    ch,BYTE PTR [ebx+0x47f2395]
 102a86c:	aad    0xb7
 102a86e:	mov    ecx,cs
 102a870:	cmp    cl,BYTE PTR [ebp+0x4a81e919]
 102a876:	dec    esp
 102a877:	test   eax,0x790bc23c
 102a87c:	xor    BYTE PTR [esp+ebx*4+0x26],al
 102a880:	adc    al,0x2
 102a882:	mov    dl,0x77
 102a884:	out    0x56,eax
 102a886:	cmp    al,0x70
 102a888:	xlat   BYTE PTR ds:[ebx]
 102a889:	jg     0x102a88b
 102a88b:	add    BYTE PTR [esi],bl
 102a88d:	jge    0x102a85d
 102a88f:	sbb    eax,esp
 102a891:	add    eax,0x4bf9b43c
 102a896:	jo     0x102a90b
 102a898:	mov    ebx,0xf05aa81
 102a89d:	mov    dl,0xb6
 102a89f:	mov    bh,0xf8
 102a8a1:	adc    eax,0x2f67e5b
 102a8a6:	js     0x102a8ee
 102a8a8:	or     ch,0x5c
 102a8ab:	pusha  
 102a8ac:	push   ss
 102a8ad:	xchg   ebp,eax
 102a8ae:	popa   
 102a8af:	sub    al,0x3c
 102a8b1:	ja     0x102a895
 102a8b3:	mov    edx,0x1071bd24
 102a8b8:	adc    DWORD PTR [esi],edi
 102a8ba:	js     0x17b16aed
 102a8c0:	jmp    0x2d72740f
 102a8c5:	ds aad 0x29
 102a8c8:	(bad)  
 102a8ca:	jecxz  0x102a8e1
 102a8cc:	clc    
 102a8cd:	mov    edi,0x16bd9f4
 102a8d2:	add    bh,al
 102a8d4:	cmp    al,0xfe
 102a8d6:	pop    ecx
 102a8d7:	cwde   
 102a8d8:	pop    ecx
 102a8d9:	mov    cl,0x2a
 102a8db:	idiv   cl
 102a8dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102a8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102a8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a8e0:	xor    esi,ebx
 102a8e2:	icebp  
 102a8e3:	or     edi,DWORD PTR [ebp-0x64]
 102a8e6:	pushf  
 102a8e7:	fwait
 102a8e8:	adc    eax,ebp
 102a8ea:	xchg   edx,eax
 102a8eb:	shr    DWORD PTR [edi+0x12],cl
 102a8ee:	lock mov dl,0x97
 102a8f1:	mov    al,ds:0x981de4a8
 102a8f6:	xlat   BYTE PTR ds:[ebx]
 102a8f7:	pushf  
 102a8f8:	pop    esi
 102a8f9:	push   ss
 102a8fa:	sahf   
 102a8fb:	int3   
 102a8fc:	jnp    0x102a8cb
 102a8fe:	push   edx
 102a8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a900:	pusha  
 102a901:	nop
 102a902:	mov    ds:0x503b9229,al
 102a907:	pop    es
 102a908:	dec    ebp
 102a909:	inc    ebx
 102a90a:	fisttp DWORD PTR [esi]
 102a90c:	jl     0x102a901
 102a90e:	inc    ecx
 102a90f:	ins    BYTE PTR es:[edi],dx
 102a910:	pop    es
 102a911:	mov    ds:0x85f03b61,al
 102a917:	inc    ecx
 102a918:	or     DWORD PTR [eax+edx*4+0x15],eax
 102a91c:	cld    
 102a91d:	jne    0x102a8a4
 102a91f:	ja     0x102a8fa
 102a921:	add    eax,0x68da16b0
 102a926:	outs   dx,DWORD PTR ds:[esi]
 102a927:	or     DWORD PTR [eax+eax*8+0x58],eax
 102a92b:	add    BYTE PTR [ecx],dl
 102a92d:	inc    esi
 102a92e:	jns    0x102a959
 102a930:	test   DWORD PTR [esi+0x6c983286],ebp
 102a936:	fstp   QWORD PTR [ecx]
 102a938:	and    edx,DWORD PTR [edx+0x3b]
 102a93b:	or     BYTE PTR [esi-0x3ff87be4],bl
 102a941:	jno    0x102a9ae
 102a943:	ret    0x371d
 102a946:	clc    
 102a947:	in     eax,dx
 102a948:	mov    esi,0x412d964b
 102a94d:	ja     0x102a920
 102a94f:	adc    esi,edi
 102a951:	(bad)  
 102a954:	jo     0x102a965
 102a956:	jge    0x102a993
 102a958:	sbb    bh,0x1
 102a95b:	lods   eax,DWORD PTR ds:[esi]
 102a95c:	xchg   esi,eax
 102a95d:	mov    bh,0xba
 102a95f:	push   ebp
 102a960:	or     eax,eax
 102a962:	sbb    dl,ah
 102a964:	sbb    BYTE PTR [eax-0x18bfd61d],al
 102a96a:	pop    es
 102a96b:	add    cl,cl
 102a96d:	add    eax,0x87b4ee8b
 102a972:	and    al,0x2b
 102a974:	sar    BYTE PTR [edx-0x6dc335d4],0x8
 102a97b:	les    esi,FWORD PTR [ecx-0x1c]
 102a97e:	xchg   BYTE PTR [eax+0x212254ca],ah
 102a984:	jmp    0x102a985
 102a986:	retf   
 102a987:	retf   0x9eea
 102a98a:	in     al,dx
 102a98b:	lods   eax,DWORD PTR ds:[esi]
 102a98c:	aas    
 102a98d:	jb     0x102a97f
 102a98f:	scas   eax,DWORD PTR es:[edi]
 102a990:	pop    esp
 102a991:	jnp    0x102a9a1
 102a993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102a995:	cld    
 102a996:	sub    bh,BYTE PTR [edi+0x261ee9e9]
 102a99c:	es daa 
 102a99e:	and    edi,eax
 102a9a0:	xchg   ebp,eax
 102a9a1:	ficom  WORD PTR [edx]
 102a9a3:	xchg   ah,al
 102a9a5:	xchg   edx,eax
 102a9a6:	lods   al,BYTE PTR ds:[esi]
 102a9a7:	xlat   BYTE PTR ds:[ebx]
 102a9a8:	js     0x102a9d9
 102a9aa:	cmp    al,0x2e
 102a9ac:	in     eax,0x3d
 102a9ae:	push   ss
 102a9af:	and    al,dh
 102a9b1:	addr16 ret 0x17da
 102a9b5:	jne    0x102a93d
 102a9b7:	cmc    
 102a9b8:	or     al,BYTE PTR [ebp+0x1e]
 102a9bb:	cmp    edx,esp
 102a9bd:	inc    ebx
 102a9be:	adc    al,0x93
 102a9c0:	xchg   si,ax
 102a9c2:	into   
 102a9c3:	add    BYTE PTR [eax-0x3f],ch
 102a9c6:	ins    DWORD PTR es:[edi],dx
 102a9c7:	pop    es
 102a9c8:	mov    esi,0xa26bdaea
 102a9cd:	add    ch,BYTE PTR [eax]
 102a9cf:	add    esi,DWORD PTR cs:[esi]
 102a9d2:	(bad)  
 102a9d3:	or     al,0xd0
 102a9d5:	xor    ch,BYTE PTR [esi-0x7f]
 102a9d8:	imul   ebx,DWORD PTR [edi+eax*1],0x85ad6d7f
 102a9df:	adc    al,0x12
 102a9e1:	daa    
 102a9e2:	fnstcw WORD PTR fs:[edi+ecx*8+0x71a13706]
 102a9ea:	and    edx,DWORD PTR [ebp+0x47591345]
 102a9f0:	gs iret 
 102a9f2:	into   
 102a9f3:	lods   eax,DWORD PTR ds:[esi]
 102a9f4:	fdiv   DWORD PTR [edi+esi*8-0x9]
 102a9f8:	inc    ecx
 102a9f9:	inc    esp
 102a9fa:	js     0x102a9d0
 102a9fc:	mov    ecx,0x372ca467
 102aa01:	pop    ebp
 102aa02:	add    DWORD PTR [edi+0x2e],eax
 102aa05:	int3   
 102aa06:	fild   WORD PTR [edi]
 102aa08:	imul   ebx,DWORD PTR [edi+0x49],0xffffffe0
 102aa0c:	repz and BYTE PTR [eax+0x18],ah
 102aa10:	std    
 102aa11:	(bad)  
 102aa12:	mov    ebx,0xc62b8e3
 102aa17:	xchg   DWORD PTR [ecx-0x6f7d7d6e],esi
 102aa1d:	gs xchg esp,eax
 102aa1f:	push   ds
 102aa20:	mov    esp,0x614c687a
 102aa25:	pop    esp
 102aa26:	sub    eax,0xfc157fc5
 102aa2b:	or     al,BYTE PTR [ecx-0xd]
 102aa2e:	pushf  
 102aa2f:	adc    ecx,ebx
 102aa31:	cmp    eax,0xd7e23811
 102aa36:	add    DWORD PTR [eax],eax
 102aa38:	paddusb mm6,mm2
 102aa3b:	dec    ebp
 102aa3c:	add    eax,0x9e2715fe
 102aa41:	lea    ebp,[esi-0x49]
 102aa44:	mov    ebx,DWORD PTR [esi+0x6f]
 102aa47:	(bad)  
 102aa48:	das    
 102aa49:	icebp  
 102aa4a:	xor    eax,0xde2df96
 102aa4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102aa50:	jnp    0x102aa28
 102aa52:	xor    edx,edx
 102aa54:	add    BYTE PTR [eax-0x30834f7a],bh
 102aa5a:	push   ebp
 102aa5b:	push   ebx
 102aa5c:	enter  0xd40,0x24
 102aa60:	fwait
 102aa61:	jl     0x102aab7
 102aa63:	mov    ebx,0xdca36bca
 102aa68:	dec    ebx
 102aa69:	jns    0x102aa34
 102aa6b:	(bad)  
 102aa6c:	call   0x42f5c598
 102aa71:	or     esi,DWORD PTR [edx+0x3b]
 102aa74:	jo     0x102aa9a
 102aa76:	adc    DWORD PTR [esi],0x54d41169
 102aa7c:	pushf  
 102aa7d:	mov    esp,0x9ca4d416
 102aa82:	sti    
 102aa83:	jns    0x102aa09
 102aa85:	dec    edx
 102aa86:	(bad)  
 102aa87:	sbb    edx,edx
 102aa89:	in     eax,dx
 102aa8a:	jmp    0x102aac9
 102aa8c:	sbb    BYTE PTR [ebx+edx*2-0x1f],dh
 102aa90:	xchg   ebp,eax
 102aa91:	int3   
 102aa92:	stos   DWORD PTR es:[edi],eax
 102aa93:	es ret 0xdf2d
 102aa97:	sti    
 102aa98:	pop    es
 102aa99:	or     BYTE PTR [eax],0x4b
 102aa9c:	xchg   esi,eax
 102aa9d:	das    
 102aa9e:	inc    ecx
 102aa9f:	ja     0x102ab07
 102aaa1:	test   DWORD PTR [edi-0x37],edi
 102aaa4:	(bad)  
 102aaa5:	pop    ds
 102aaa6:	shl    ebp,0x77
 102aaa9:	popa   
 102aaaa:	loopne 0x102aa3b
 102aaac:	adc    eax,0x34863540
 102aab1:	add    al,cl
 102aab3:	add    DWORD PTR [ebx+0x64a1a12e],0x6e
 102aaba:	and    al,0x6f
 102aabc:	xor    bh,ch
 102aabe:	sbb    eax,0x1be53f10
 102aac3:	mov    ecx,0xa438fb94
 102aac8:	push   0x25
 102aaca:	sbb    eax,0x7560ba26
 102aacf:	jp     0x102ab18
 102aad1:	add    al,0x74
 102aad3:	mov    cs,WORD PTR [esi-0x28892020]
 102aad9:	jp     0x102aad7
 102aadb:	cmc    
 102aadc:	sti    
 102aadd:	mov    edi,0x76580000
 102aae2:	ret    0x5839
 102aae5:	jno    0x102ab39
 102aae7:	add    bh,bh
 102aae9:	je     0x102ab1a
 102aaeb:	sbb    DWORD PTR [edi-0x5e],0xf1bbd545
 102aaf2:	mov    esp,0x56ca4f32
 102aaf7:	lods   al,BYTE PTR ds:[esi]
 102aaf8:	cmc    
 102aaf9:	jp     0x102ab67
 102aafb:	shl    DWORD PTR [ebp+0x5c],1
 102aafe:	cdq    
 102aaff:	ss rcl DWORD PTR gs:[esi*1-0x2aacddd3],1
 102ab08:	ins    DWORD PTR es:[edi],dx
 102ab09:	inc    eax
 102ab0a:	dec    edi
 102ab0b:	xchg   BYTE PTR [edi-0x237d2cbf],al
 102ab11:	push   cs
 102ab12:	sub    al,0x49
 102ab14:	jp     0x102aac8
 102ab16:	in     al,dx
 102ab17:	fidiv  WORD PTR [ecx]
 102ab19:	sbb    DWORD PTR [edi+0x5b],ecx
 102ab1c:	xchg   ecx,eax
 102ab1d:	mov    ch,0xb4
 102ab1f:	dec    edx
 102ab20:	mov    al,0xa
 102ab22:	xchg   esi,eax
 102ab23:	cmp    al,0xdb
 102ab25:	jns    0x102ab6f
 102ab27:	cmp    bl,BYTE PTR [esi-0x74]
 102ab2a:	out    dx,eax
 102ab2b:	or     al,dl
 102ab2d:	ret    
 102ab2e:	retf   0xa0a2
 102ab31:	jne    0x102ab65
 102ab33:	push   ds
 102ab34:	test   DWORD PTR ds:0xc7e9bed9,esi
 102ab3a:	js     0x102ab24
 102ab3c:	sar    DWORD PTR [ebx],0x1
 102ab3f:	add    BYTE PTR [edi+0x5313d27f],cl
 102ab45:	cdq    
 102ab46:	out    dx,eax
 102ab47:	stc    
 102ab48:	pop    ebx
 102ab49:	cmp    BYTE PTR [edi+edx*4],al
 102ab4c:	push   ds
 102ab4d:	jecxz  0x102ab2d
 102ab4f:	add    eax,0x9ee16377
 102ab54:	fnstsw WORD PTR [esi+0x61]
 102ab57:	std    
 102ab58:	popf   
 102ab59:	sbb    DWORD PTR [edx+0x65155005],0x2a
 102ab60:	dec    esp
 102ab61:	fst    QWORD PTR [ebx]
 102ab63:	rcr    BYTE PTR [ecx],cl
 102ab65:	imul   ecx,edx,0xd
 102ab68:	inc    eax
 102ab69:	cmp    BYTE PTR [ecx+0x44],ah
 102ab6c:	fdivr  st(3),st
 102ab6e:	or     al,0x40
 102ab70:	sub    BYTE PTR [eax+0x1c],ch
 102ab73:	daa    
 102ab74:	or     al,al
 102ab76:	xchg   edi,eax
 102ab77:	std    
 102ab78:	sahf   
 102ab79:	jbe    0x102ab8a
 102ab7b:	cmp    dl,ah
 102ab7d:	cmp    DWORD PTR [eax],eax
 102ab7f:	repnz popf 
 102ab81:	jge    0x102ab4a
 102ab83:	ds (bad) 
 102ab85:	xchg   edi,eax
 102ab86:	shr    ch,1
 102ab88:	jbe    0x102ab3b
 102ab8a:	sub    BYTE PTR [eax-0x3b662c41],al
 102ab90:	pop    eax
 102ab91:	fcomp  st(5)
 102ab93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102ab94:	shl    BYTE PTR [ebp-0x52],0x55
 102ab98:	sbb    ebx,DWORD PTR [ebx+0xed324b6]
 102ab9e:	dec    ebp
 102ab9f:	dec    eax
 102aba0:	push   ebx
 102aba1:	pusha  
 102aba2:	fs and eax,0x545fd6cd
 102aba8:	xchg   ecx,eax
 102aba9:	dec    esp
 102abaa:	and    dl,BYTE PTR [ebx+0x1bdca123]
 102abb0:	mov    ebx,0xacf4640a
 102abb5:	or     al,0xb7
 102abb7:	push   eax
 102abb8:	cmp    eax,0x76d8180
 102abbd:	ds jmp 0x102abdc
 102abc0:	in     eax,dx
 102abc1:	bound  ecx,QWORD PTR [ebx-0x6affa9fa]
 102abc7:	pusha  
 102abc8:	lea    esp,ss:[edx+0x1e]
 102abcc:	sti    
 102abcd:	loopne 0x102aba5
 102abcf:	push   0xffffff93
 102abd1:	outs   dx,BYTE PTR ds:[esi]
 102abd2:	pop    esp
 102abd3:	sub    DWORD PTR [esi+edx*8-0x6],esp
 102abd7:	sub    BYTE PTR [ecx+esi*1],bh
 102abda:	pop    esi
 102abdb:	dec    eax
 102abdc:	aaa    
 102abdd:	stos   BYTE PTR es:[edi],al
 102abde:	cmp    al,BYTE PTR [ecx]
 102abe0:	push   ss
 102abe1:	or     eax,0x45304169
 102abe6:	test   BYTE PTR [ebx+0x1035f47e],bh
 102abec:	adc    BYTE PTR [ebp+0x6b],0x8f
 102abf0:	inc    edi
 102abf1:	jnp    0x102abaf
 102abf3:	jmp    0x102abb8
 102abf5:	out    dx,eax
 102abf6:	mov    edx,0x8dcf6e1d
 102abfb:	mov    BYTE PTR [ebx],ah
 102abfd:	cld    
 102abfe:	jo     0x102ab88
 102ac00:	jge    0x102ac7f
 102ac02:	sbb    dh,bl
 102ac04:	mov    al,BYTE PTR [eax-0x3f1b0159]
 102ac0a:	pop    ds
 102ac0b:	test   BYTE PTR [edx],dl
 102ac0d:	test   al,0x90
 102ac0f:	xor    al,0x55
 102ac11:	mov    cl,BYTE PTR es:[esi]
 102ac14:	fnstenv [eax-0x74cdfc4c]
 102ac1a:	scas   eax,DWORD PTR es:[edi]
 102ac1b:	ror    BYTE PTR [esi],0xe8
 102ac1e:	arpl   bx,ax
 102ac20:	clc    
 102ac21:	(bad)  
 102ac22:	add    eax,DWORD PTR [si-0x500b]
 102ac27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102ac28:	and    BYTE PTR [ebx],0x7f
 102ac2b:	adc    ebp,DWORD PTR [eax-0x7e0c4eda]
 102ac31:	pop    ds
 102ac32:	sub    dh,al
 102ac34:	scas   eax,DWORD PTR es:[edi]
 102ac35:	cmp    cl,bl
 102ac37:	outs   dx,DWORD PTR ds:[esi]
 102ac38:	jmp    0x102ac27
 102ac3a:	dec    ebp
 102ac3b:	div    DWORD PTR [eax]
 102ac3d:	aad    0xeb
 102ac3f:	mov    eax,ds:0xf07ae9d3
 102ac44:	mov    ebx,0x96d6572a
 102ac49:	or     BYTE PTR [esi-0x672bfdf],0xa8
 102ac50:	lock push esi
 102ac52:	push   ecx
 102ac53:	lock arpl WORD PTR [esi-0x7b3c7ad5],cx
 102ac5a:	(bad)  
 102ac5b:	retf   0x2904
 102ac5e:	pop    esp
 102ac5f:	ss jle 0x102ac32
 102ac62:	aam    0xb6
 102ac64:	shl    DWORD PTR es:[edx],cl
 102ac67:	(bad)  
 102ac68:	mov    ecx,0xe639b680
 102ac6d:	cdq    
 102ac6e:	xchg   BYTE PTR [edx-0x101207e3],dh
 102ac74:	call   FWORD PTR [ebx+0x7a]
 102ac77:	jecxz  0x102ac44
 102ac79:	sahf   
 102ac7a:	xchg   DWORD PTR [edx-0x52],edi
 102ac7d:	mov    ds,WORD PTR [edx+0x53]
 102ac80:	in     eax,dx
 102ac81:	pop    DWORD PTR [edi-0x150d4141]
 102ac87:	stos   DWORD PTR es:[edi],eax
 102ac88:	icebp  
 102ac89:	popf   
 102ac8a:	jmp    0x102ac4e
 102ac8c:	jbe    0x102ac6e
 102ac8e:	xchg   ebx,eax
 102ac8f:	cld    
 102ac90:	jbe    0x102ac72
 102ac92:	daa    
 102ac93:	scas   eax,DWORD PTR es:[edi]
 102ac94:	pop    ebx
 102ac95:	xchg   edi,eax
 102ac96:	dec    ebp
 102ac97:	cmc    
 102ac98:	les    edx,FWORD PTR ds:0xa0b28079
 102ac9e:	xchg   ecx,eax
 102ac9f:	mov    WORD PTR [esi],ss
 102aca1:	(bad)  
 102aca2:	mov    dl,0xeb
 102aca4:	dec    esp
 102aca5:	adc    BYTE PTR [esi+0x40],ch
 102aca8:	imul   esp,DWORD PTR [ecx-0x5b5cd1f5],0xfffffff8
 102acaf:	mov    edx,0x82bb7b49
 102acb4:	mov    al,0x94
 102acb6:	dec    eax
 102acb7:	push   0x7f9bada8
 102acbc:	mov    WORD PTR [edi+0x2003bc1e],es
 102acc2:	ret    0x8f09
 102acc5:	jns    0x102ad13
 102acc7:	or     dh,BYTE PTR [ebx+0x6e888bf9]
 102accd:	cmp    eax,0x705681b5
 102acd2:	jmp    DWORD PTR [ebp+0x17]
 102acd5:	add    BYTE PTR [ebp-0x449806a8],dl
 102acdb:	add    BYTE PTR [eax],dl
 102acdd:	adc    dh,0x24
 102ace0:	jno    0x102ac8e
 102ace2:	sbb    al,0x24
 102ace4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102ace5:	mov    eax,ds:0xbeeaafcf
 102acea:	dec    esi
 102aceb:	loope  0x102ac8f
 102aced:	mov    eax,ebx
 102acef:	icebp  
 102acf0:	add    BYTE PTR [edi],0xc0
 102acf3:	jmp    0x102acfd
 102acf5:	sbb    al,0x1
 102acf7:	outs   dx,BYTE PTR ds:[esi]
 102acf8:	adc    bh,BYTE PTR [eax]
 102acfa:	bnd jns 0x102ad3d
 102acfd:	aad    0xc5
 102acff:	in     al,dx
 102ad00:	into   
 102ad01:	(bad)  
 102ad02:	clc    
 102ad03:	fwait
 102ad04:	idiv   DWORD PTR [ebx-0x10]
 102ad07:	test   DWORD PTR [esi-0x3154e6c4],0x53ba0e7a
 102ad11:	push   ebx
 102ad12:	call   0xde33a464
 102ad17:	jmp    0x102ad7a
 102ad19:	jb     0x102accd
 102ad1b:	jmp    0x102ad6c
 102ad1d:	mul    DWORD PTR [ecx-0x31]
 102ad20:	mov    ds:0x66dc6950,eax
 102ad25:	dec    edx
 102ad26:	jns    0x102aceb
 102ad28:	mov    al,0x58
 102ad2a:	mov    al,ds:0x2bd84ca8
 102ad2f:	adc    BYTE PTR [ecx+0x35],ch
 102ad32:	sahf   
 102ad33:	or     BYTE PTR [eax+esi*1-0x7],dl
 102ad37:	jge    0x102ad14
 102ad39:	xchg   ecx,eax
 102ad3a:	leave  
 102ad3b:	retf   0xd158
 102ad3e:	sub    eax,0x9617fc48
 102ad43:	xor    eax,0xed0d2bcc
 102ad48:	retf   
 102ad49:	inc    eax
 102ad4a:	xchg   ebp,eax
 102ad4b:	stos   DWORD PTR es:[edi],eax
 102ad4c:	loopne 0x102ad28
 102ad4e:	push   ebp
 102ad4f:	and    edi,eax
 102ad51:	add    eax,esp
 102ad53:	sub    DWORD PTR [edi],edx
 102ad55:	pop    esp
 102ad56:	and    BYTE PTR [edi+0x4b81d7f0],0x95
 102ad5d:	retf   0x4886
 102ad60:	cdq    
 102ad61:	jb     0x102ad80
 102ad63:	(bad)  
 102ad64:	pop    edx
 102ad65:	jge    0x102ad7c
 102ad67:	pop    gs
 102ad69:	loope  0x102ad9e
 102ad6b:	pop    ds
 102ad6c:	dec    edi
 102ad6d:	pop    esp
 102ad6e:	ss popf 
 102ad70:	adc    bl,BYTE PTR [ecx+edi*2+0x5878ac14]
 102ad77:	nop
 102ad78:	mov    WORD PTR [ecx],gs
 102ad7a:	push   0x93bfc6c8
 102ad7f:	or     al,0x11
 102ad81:	loope  0x102ad71
 102ad83:	pop    ds
 102ad84:	jge    0x102ad93
 102ad86:	add    BYTE PTR [eax-0x4bec1b16],dh
 102ad8c:	cmc    
 102ad8d:	fbstp  TBYTE PTR [ebp-0x5d]
 102ad90:	mov    bh,0xf0
 102ad92:	push   ebp
 102ad93:	mov    al,0xfa
 102ad95:	jno    0x102ad5b
 102ad97:	mov    edi,0xefb97e25
 102ad9c:	(bad)  
 102ad9e:	push   esi
 102ad9f:	sahf   
 102ada0:	aaa    
 102ada1:	add    al,0xc5
 102ada3:	jp     0x102add9
 102ada5:	shl    BYTE PTR [esi-0x59],cl
 102ada8:	push   ebx
 102ada9:	push   esp
 102adaa:	lds    ecx,FWORD PTR [ecx+0x2d]
 102adad:	push   0x2b
 102adaf:	cmp    edx,DWORD PTR [eax+edx*2+0x55]
 102adb3:	mov    esi,DWORD PTR [eax+0x1d7822a2]
 102adb9:	ror    DWORD PTR [edx-0x681f71a1],0x9b
 102adc0:	jnp    0x102ad50
 102adc2:	cmp    esi,ebx
 102adc4:	push   edi
 102adc5:	xor    ecx,ebx
 102adc7:	or     eax,0x66677adb
 102adcc:	xor    cl,bl
 102adce:	icebp  
 102adcf:	xchg   DWORD PTR [edx+0x38],edi
 102add2:	cmp    BYTE PTR [ebp-0x39],bl
 102add5:	ret    0x8b93
 102add8:	push   ss
 102add9:	fbld   TBYTE PTR [ebp-0xad46c46]
 102addf:	mov    dl,0x36
 102ade1:	mov    fs,WORD PTR [ebp-0x7c]
 102ade4:	repnz ficomp DWORD PTR [eax-0x539926ad]
 102adeb:	sbb    al,0xb2
 102aded:	mov    eax,0x8d2c33c6
 102adf2:	pinsrw mm5,WORD PTR [edx-0x6a],0xf9
 102adf7:	frndint 
 102adf9:	sbb    ebp,DWORD PTR [eax-0x40]
 102adfc:	fadd   DWORD PTR [edi]
 102adfe:	lock push ebx
 102ae00:	lock pop ebp
 102ae02:	add    BYTE PTR [ebx],bh
 102ae04:	aaa    
 102ae05:	jle    0x102ada7
 102ae07:	lock icebp 
 102ae09:	xchg   esi,eax
 102ae0a:	mov    ch,0xb7
 102ae0c:	add    eax,0x6ea2a1a7
 102ae11:	xor    BYTE PTR [esi],dl
 102ae13:	inc    ebx
 102ae14:	add    eax,0x7dd62522
 102ae19:	sti    
 102ae1a:	jno    0x102adf2
 102ae1c:	ror    eax,cl
 102ae1e:	add    al,0xcd
 102ae20:	in     al,0x2d
 102ae22:	outs   dx,DWORD PTR ds:[esi]
 102ae23:	xor    al,ch
 102ae25:	adc    DWORD PTR [esi+edx*4-0x33],0xfffffff7
 102ae2a:	fadd   QWORD PTR [eax+0x9dcb687]
 102ae30:	add    dh,BYTE PTR [eax-0x3e]
 102ae33:	mov    ds:0xf07ff585,eax
 102ae38:	mov    eax,DWORD PTR [ecx]
 102ae3a:	mov    ah,0x72
 102ae3c:	mov    cl,0x4f
 102ae3e:	retf   
 102ae3f:	jnp    0x102ae42
 102ae41:	jbe    0x102ae11
 102ae43:	aas    
 102ae44:	mov    edx,0xd12501ff
 102ae49:	cli    
 102ae4a:	mov    bl,0xc9
 102ae4c:	mov    bl,0xd6
 102ae4e:	lahf   
 102ae4f:	fst    QWORD PTR [esi+edi*2]
 102ae52:	outs   dx,BYTE PTR ds:[esi]
 102ae53:	fsub   QWORD PTR [eax]
 102ae55:	push   ebp
 102ae56:	xor    BYTE PTR [ecx+0x59],dl
 102ae59:	adc    DWORD PTR [ebp-0x7ddbe5e],ecx
 102ae5f:	sub    DWORD PTR [ecx-0x7fcc0681],eax
 102ae65:	mov    cl,0xe5
 102ae67:	stc    
 102ae68:	into   
 102ae69:	mov    esi,0xd308be27
 102ae6e:	mov    edx,DWORD PTR [esi+0x2de537a2]
 102ae74:	jg     0x102aead
 102ae76:	ins    BYTE PTR es:[edi],dx
 102ae77:	out    dx,al
 102ae78:	jno    0x102aecf
 102ae7a:	test   DWORD PTR [edx],ebp
 102ae7c:	sub    BYTE PTR [eax],al
 102ae7e:	or     esp,DWORD PTR [esi]
 102ae80:	stos   DWORD PTR es:[edi],eax
 102ae81:	xchg   edi,eax
 102ae82:	in     al,dx
 102ae83:	xchg   esi,eax
 102ae84:	push   es
 102ae85:	xor    eax,0x97596aad
 102ae8a:	mov    bl,0xb4
 102ae8d:	arpl   cx,bp
 102ae8f:	add    al,0xe0
 102ae91:	clc    
 102ae92:	pop    esi
 102ae93:	test   ch,cl
 102ae95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102ae96:	pop    ds
 102ae97:	jne    0x102aec6
 102ae99:	es dec edi
 102ae9b:	les    edx,FWORD PTR ds:0x64fc3078
 102aea1:	out    0x52,eax
 102aea3:	push   ds
 102aea4:	or     al,0x1e
 102aea6:	push   cs
 102aea7:	and    DWORD PTR ds:0x3190336d,ecx
 102aead:	mov    ds,edx
 102aeaf:	lea    edx,[esi+0x66]
 102aeb2:	xor    eax,0x36c3238f
 102aeb7:	push   ebp
 102aeb8:	pusha  
 102aeb9:	dec    ecx
 102aeba:	add    ah,ah
 102aebc:	fsubr  QWORD PTR [edi+0x3a52ff92]
 102aec2:	and    DWORD PTR [ebx+0x4acf5b92],esp
 102aec8:	les    ebx,FWORD PTR [edx+0x26]
 102aecb:	sbb    ecx,DWORD PTR [edi+0x1d]
 102aece:	icebp  
 102aecf:	sub    eax,0xcb154284
 102aed4:	(bad)  
 102aed5:	stos   DWORD PTR es:[edi],eax
 102aed6:	or     DWORD PTR [edi-0x4],esi
 102aed9:	lock pop edi
 102aedb:	add    DWORD PTR [edx],esp
 102aedd:	pushf  
 102aede:	hlt    
 102aedf:	cwde   
 102aee0:	rcl    eax,cl
 102aee2:	push   ds
 102aee3:	lahf   
 102aee4:	hlt    
 102aee5:	rcr    DWORD PTR [esi],0xbe
 102aee8:	sar    DWORD PTR [edi-0x20],0xc3
 102aeec:	test   ebx,edx
 102aeee:	outs   dx,BYTE PTR ds:[esi]
 102aeef:	loop   0x102af25
 102aef1:	pop    ds
 102aef2:	(bad)  
 102aef3:	clc    
 102aef4:	(bad)
 102aef8:	jl     0x102af1c
 102aefa:	dec    esi
 102aefb:	clc    
 102aefc:	jae    0x102aef4
 102aefe:	push   edi
 102aeff:	aam    0xa2
 102af01:	mov    esp,0x89accf96
 102af06:	mov    ecx,esp
 102af08:	sbb    dl,BYTE PTR [ebx+0x48fdfaa7]
 102af0e:	mov    al,ds:0x1ca203af
 102af13:	add    DWORD PTR [ebx-0x62],ecx
 102af16:	or     cl,BYTE PTR [esp+ebx*1-0x69]
 102af1a:	in     eax,dx
 102af1b:	in     al,dx
 102af1c:	cmp    edi,esi
 102af1e:	adc    BYTE PTR [edi],0x62
 102af21:	stos   BYTE PTR es:[edi],al
 102af22:	mov    bh,0x4
 102af24:	rcl    DWORD PTR [ebx-0x2d],cl
 102af27:	cwde   
 102af28:	or     bl,bl
 102af2a:	jp     0x102aef3
 102af2c:	add    bh,al
 102af2e:	popf   
 102af2f:	jae    0x102afaa
 102af31:	fisttp QWORD PTR [ebx+0x353ccc3a]
 102af37:	pop    bp
 102af39:	mov    ah,0x25
 102af3b:	(bad)  
 102af3c:	pop    edx
 102af3d:	enter  0x21d9,0x59
 102af41:	xlat   BYTE PTR ds:[ebx]
 102af42:	or     bh,ah
 102af44:	mov    ds:0x3457f1a4,al
 102af49:	push   esp
 102af4a:	int3   
 102af4b:	and    eax,DWORD PTR [eax-0x10a71c62]
 102af51:	xor    ch,bl
 102af53:	fisubr DWORD PTR ds:[ebx-0x5f]
 102af57:	mov    al,0x4a
 102af59:	es jg  0x102af1c
 102af5c:	clc    
 102af5d:	pop    ds
 102af5e:	fimul  WORD PTR [ecx+0x4e30a40]
 102af64:	(bad)  
 102af66:	cmp    BYTE PTR [eax+0x70e246e6],0x56
 102af6d:	jmp    0x102afa5
 102af6f:	aam    0x98
 102af71:	lods   al,BYTE PTR ds:[esi]
 102af72:	lock call 0x3319c90a
 102af78:	ss dec esi
 102af7a:	shl    eax,0x45
 102af7d:	in     eax,dx
 102af7e:	pop    edi
 102af7f:	push   edx
 102af80:	inc    edx
 102af81:	xchg   edx,eax
 102af82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102af83:	xchg   edx,eax
 102af84:	loop   0x102afe6
 102af86:	imul   esp,DWORD PTR [ebx+eiz*8],0x3b
 102af8a:	std    
 102af8b:	ds jp  0x102afaf
 102af8e:	loop   0x102afc5
 102af90:	add    DWORD PTR [eax-0x4f083c81],edi
 102af96:	ja     0x102af8f
 102af98:	jbe    0x102af9a
 102af9a:	shr    dl,0xd3
 102af9d:	rcl    BYTE PTR [ecx+0x5f],cl
 102afa0:	mov    eax,0xc61d3ff
 102afa5:	das    
 102afa6:	dec    esp
 102afa7:	sti    
 102afa8:	and    DWORD PTR [edi+ebp*8],ebp
 102afab:	ins    DWORD PTR es:[edi],dx
 102afac:	mov    ch,0x1
 102afae:	aaa    
 102afaf:	mov    ?,WORD PTR [eax+0x615a87f1]
 102afb5:	into   
 102afb6:	pop    edi
 102afb7:	js     0x102afb9
 102afb9:	nop
 102afba:	jg     0x102afcc
 102afbc:	iret   
 102afbd:	inc    ebp
 102afbe:	mov    DWORD PTR [ecx+0x11],ebx
 102afc1:	sub    BYTE PTR [ebx-0x5c5c1bf5],dl
 102afc7:	pop    esp
 102afc8:	inc    eax
 102afc9:	add    edx,DWORD PTR [edi]
 102afcb:	and    bh,al
 102afcd:	xor    DWORD PTR [ecx],eax
 102afcf:	daa    
 102afd0:	(bad)  
 102afd2:	ror    ah,0x79
 102afd5:	inc    eax
 102afd6:	out    0xb8,eax
 102afd8:	ins    BYTE PTR es:[edi],dx
 102afd9:	fild   QWORD PTR [bp+si-0x2c8d]
 102afde:	into   
 102afdf:	mov    esi,0x6fb3b0e9
 102afe4:	dec    esp
 102afe5:	ins    BYTE PTR es:[edi],dx
 102afe6:	jmp    0x102b01d
 102afe8:	aad    0xa9
 102afea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102afeb:	jne    0x102b020
 102afed:	and    eax,0x824c002f
 102aff2:	and    eax,0x795a0a9
 102aff7:	adc    ax,WORD PTR [edi-0x2ab5a897]
 102affe:	shr    ecx,0x37
 102b001:	inc    ebp
 102b002:	xchg   ebp,eax
 102b003:	jl     0x102b06a
 102b005:	mov    bl,0x3c
 102b007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102b008:	ret    
 102b009:	dec    edx
 102b00a:	pop    esi
 102b00b:	xchg   esp,eax
 102b00c:	rcl    DWORD PTR [eax+0x1a603972],1
 102b012:	ficomp DWORD PTR [esi-0x80]
 102b015:	xchg   edx,eax
 102b016:	data16 mov WORD PTR [edi],cs
 102b019:	push   edx
 102b01a:	xor    cl,bh
 102b01c:	push   ebx
 102b01d:	jbe    0x102b00a
 102b01f:	dec    esp
 102b020:	lock xchg edx,eax
 102b022:	(bad)  
 102b023:	sub    eax,0xef32182e
 102b028:	dec    ebx
 102b029:	inc    edi
 102b02a:	dec    eax
 102b02b:	jno    0x102b04d
 102b02d:	cmp    DWORD PTR [eax],edi
 102b02f:	mov    ds:0x668d37f2,eax
 102b034:	adc    eax,0xe346299b
 102b039:	sti    
 102b03a:	sbb    BYTE PTR [esi-0x2c8223da],ch
 102b040:	xlat   BYTE PTR ds:[ebx]
 102b041:	add    DWORD PTR [eax],eax
 102b043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102b044:	popf   
 102b045:	cmc    
 102b046:	jae    0x102b0b8
 102b048:	popa   
 102b049:	ret    
 102b04a:	movzx  ebx,BYTE PTR [edi+0x7]
 102b04e:	aaa    
 102b04f:	sti    
 102b050:	pusha  
 102b051:	pop    edx
 102b052:	in     eax,dx
 102b053:	out    0xda,eax
 102b055:	inc    eax
 102b056:	imul   ecx,DWORD PTR [eax+ebp*4],0x18
 102b05a:	clc    
 102b05b:	jl     0x102b027
 102b05d:	dec    edi
 102b05e:	pop    eax
 102b05f:	adc    BYTE PTR [edi+eiz*4],dl
 102b062:	dec    BYTE PTR [edx-0x60]
 102b065:	aaa    
 102b066:	pop    ebx
 102b067:	sub    BYTE PTR [ebp+0x64f55389],0xcc
 102b06e:	ins    BYTE PTR es:[edi],dx
 102b06f:	push   esi
 102b070:	sbb    ah,BYTE PTR [ecx+0x6c48e34d]
 102b076:	js     0x102b066
 102b078:	push   0xffffffa0
 102b07a:	jnp    0x102b026
 102b07c:	pop    edi
 102b07d:	jmp    0xaef926e9
 102b082:	cmp    edi,edi
 102b084:	add    eax,0x147a5998
 102b089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102b08a:	jnp    0x102b08a
 102b08c:	sub    BYTE PTR [edi-0x1313c8a2],ch
 102b092:	stos   DWORD PTR es:[edi],eax
 102b093:	pop    edx
 102b094:	push   0xffffff89
 102b096:	scas   eax,DWORD PTR es:[edi]
 102b097:	push   0x47
 102b099:	mov    eax,esi
 102b09b:	ds push esi
 102b09d:	cmp    esi,DWORD PTR [edx+0x29]
 102b0a0:	adc    eax,0x91edca3f
 102b0a5:	leave  
 102b0a6:	xchg   edx,eax
 102b0a7:	xchg   ecx,eax
 102b0a8:	add    DWORD PTR [edi+0xa],edx
 102b0ab:	push   0x252a511a
 102b0b0:	stos   DWORD PTR es:[edi],eax
 102b0b1:	mov    WORD PTR [edx-0x5245fdac],cs
 102b0b7:	loop   0x102b0ba
 102b0b9:	rcl    BYTE PTR [eax-0x49],cl
 102b0bc:	add    eax,DWORD PTR [ebx]
 102b0be:	mov    ds:0x788de302,al
 102b0c3:	daa    
 102b0c4:	fnstsw WORD PTR [edx]
 102b0c6:	stc    
 102b0c7:	lods   al,BYTE PTR ds:[esi]
 102b0c8:	push   eax
 102b0c9:	mov    ebx,0xa1378c45
 102b0ce:	push   ebx
 102b0cf:	nop
 102b0d0:	push   edx
 102b0d1:	add    ch,BYTE PTR [eax]
 102b0d3:	mov    bh,0x73
 102b0d5:	icebp  
 102b0d6:	push   esp
 102b0d7:	sbb    BYTE PTR [ebp+0x25],ah
 102b0da:	sar    ebp,cl
 102b0dc:	cmp    eax,0x34a1af60
 102b0e2:	jbe    0x102b154
 102b0e4:	call   FWORD PTR [ebp+0x5dbec3df]
 102b0ea:	fild   DWORD PTR [eax]
 102b0ec:	and    bl,BYTE PTR [esi*2-0x2167604]
 102b0f3:	add    edi,edi
 102b0f5:	or     al,0xe7
 102b0f7:	sub    bh,al
 102b0f9:	test   eax,0xe8da76b6
 102b0fe:	ret    
 102b0ff:	jecxz  0x102b101
 102b101:	adc    eax,0x33780577
 102b106:	mov    ?,ebp
 102b108:	add    BYTE PTR [eax+0x263d0749],bl
 102b10e:	rcl    BYTE PTR [edx-0x2292ea35],0x2f
 102b115:	retf   
 102b116:	mov    esp,0xea42b154
 102b11b:	inc    ecx
 102b11c:	add    bh,al
 102b11e:	loope  0x102b0d7
 102b120:	jae    0x102b144
 102b122:	sar    BYTE PTR [ebx],1
 102b124:	sbb    eax,DWORD PTR [eax]
 102b126:	lock mov ch,0x4f
 102b129:	jge    0x102b14d
 102b12b:	in     eax,dx
 102b12c:	in     al,dx
 102b12d:	cmp    edi,edi
 102b12f:	add    eax,0x26b95998
 102b134:	sub    eax,0xc69a9df1
 102b139:	clc    
 102b13a:	les    eax,FWORD PTR [edx+ebp*4]
 102b13d:	add    BYTE PTR [esi+0x65],bh
 102b140:	pop    es
 102b141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102b142:	dec    esi
 102b143:	xor    ebp,esi
 102b145:	fadd   QWORD PTR [esi+edx*4]
 102b148:	fdiv   DWORD PTR [ebx]
 102b14a:	popa   
 102b14b:	lock sbb ebp,DWORD PTR [ebx+0x32045250]
 102b152:	scas   al,BYTE PTR es:[edi]
 102b153:	retf   
 102b154:	mov    ds:0x52e75d24,eax
 102b159:	fcmovnu st,st(1)
 102b15b:	cmp    DWORD PTR [esi+0x2a22ba7e],0x333f1113
 102b165:	push   es
 102b166:	cld    
 102b167:	mov    esi,0x45f35ca1
 102b16c:	ret    
 102b16d:	(bad)  [esp]
 102b170:	outs   dx,DWORD PTR ds:[esi]
 102b171:	mov    eax,0x6d7e2162
 102b176:	and    ebx,DWORD PTR [ebx]
 102b178:	or     eax,0x2d03296b
 102b17d:	or     ecx,esi
 102b17f:	add    eax,edi
 102b181:	loopne 0x102b173
 102b183:	retf   0x4053
 102b186:	add    bh,BYTE PTR [edx]
 102b188:	aaa    
 102b189:	sbb    al,0x83
 102b18b:	mov    dh,0x29
 102b18d:	inc    ecx
 102b18e:	leave  
 102b18f:	out    dx,eax
 102b190:	dec    edi
 102b191:	loop   0x102b204
 102b193:	add    al,al
 102b195:	(bad)  
 102b196:	mov    ebp,0xfae1b0bb
 102b19b:	das    
 102b19c:	add    DWORD PTR [eax],0x19d6769c
 102b1a2:	push   ds
 102b1a3:	lock inc eax
 102b1a5:	mov    al,0xfe
 102b1a7:	pop    ebx
 102b1a8:	push   edx
 102b1a9:	(bad)  
 102b1aa:	inc    BYTE PTR ds:[ebp+0x13b93f69]
 102b1b1:	nop
 102b1b2:	in     al,0x20
 102b1b4:	and    BYTE PTR [edi],dl
 102b1b6:	inc    esp
 102b1b7:	add    BYTE PTR [edi+0x5ff1e3af],bl
 102b1bd:	shl    BYTE PTR [ebx],cl
 102b1bf:	loopne 0x102b23c
 102b1c1:	icebp  
 102b1c2:	retf   
 102b1c3:	cmp    edi,esp
 102b1c5:	adc    al,0xea
 102b1c7:	dec    eax
 102b1c8:	push   esp
 102b1c9:	mov    WORD PTR [eax+0x30163979],gs
 102b1cf:	mov    cl,0x1a
 102b1d1:	cwde   
 102b1d2:	cmp    DWORD PTR [ebx],ecx
 102b1d4:	sbb    BYTE PTR [edi-0x21],0x7f
 102b1d8:	fnsave [edi+0x6e]
 102b1db:	add    eax,DWORD PTR [eax]
 102b1dd:	lods   al,BYTE PTR ds:[esi]
 102b1de:	cmp    bh,bl
 102b1e0:	mov    ecx,0x77e11de8
 102b1e5:	test   ch,0xf0
 102b1e8:	sahf   
 102b1e9:	dec    BYTE PTR [esi-0x42]
 102b1ec:	mov    bl,0x2f
 102b1ee:	inc    ebx
 102b1ef:	xchg   DWORD PTR [esi+edi*8+0x72bb4038],esi
 102b1f6:	fisttp DWORD PTR [ecx+0x3dcab5c6]
 102b1fc:	imul   ecx,DWORD PTR [edx-0xf],0xffffff82
 102b200:	rcr    DWORD PTR [eax-0x1dd8f5d7],0x59
 102b207:	dec    edi
 102b208:	inc    ecx
 102b209:	call   0xc108ed5f
 102b20e:	sub    esp,0x65b383f8
 102b214:	sub    DWORD PTR [ecx],ebx
 102b216:	cdq    
 102b217:	add    eax,edx
 102b219:	shl    BYTE PTR [esi+0x65712301],1
 102b21f:	jo     0x102b226
 102b221:	inc    eax
 102b222:	arpl   WORD PTR [edi],sp
 102b224:	push   0xffffffc7
 102b226:	hlt    
 102b227:	xchg   ebx,eax
 102b228:	pop    ebx
 102b229:	pop    ecx
 102b22a:	sti    
 102b22b:	ror    al,0x71
 102b22e:	lods   al,BYTE PTR ds:[esi]
 102b22f:	fadd   DWORD PTR [ebx]
 102b231:	or     DWORD PTR [edx-0x741a5d35],eax
 102b237:	jp     0x102b1eb
 102b239:	mov    dl,0x88
 102b23b:	mov    ah,0xa
 102b23d:	or     DWORD PTR [edi],esi
 102b23f:	jp     0x102b26d
 102b241:	loop   0x102b29c
 102b243:	dec    ebp
 102b244:	test   BYTE PTR [ebx+0x7f],bh
 102b247:	jl     0x102b25e
 102b249:	mul    WORD PTR [bx+si-0x122d]
 102b24f:	loop   0x102b239
 102b251:	adc    eax,DWORD PTR [edx+0xf7aff5]
 102b257:	idiv   DWORD PTR [ebp-0x26]
 102b25a:	daa    
 102b25b:	inc    edx
 102b25c:	popa   
 102b25d:	retf   0x6e2f
 102b260:	repz in eax,0x9d
 102b263:	jg     0x102b2c8
 102b265:	add    dl,bl
 102b267:	imul   esp,DWORD PTR [ebx-0x49b2cbb1],0xa2fe601b
 102b271:	add    BYTE PTR [eax+0x422a6708],0x5d
 102b278:	dec    edx
 102b279:	mov    DWORD PTR [edi-0x7b],esp
 102b27c:	and    BYTE PTR [eax-0x31],al
 102b27f:	add    eax,0xf815c6aa
 102b284:	jns    0x102b303
 102b286:	call   ecx
 102b288:	(bad)  
 102b289:	jnp    0x102b2a1
 102b28b:	push   ss
 102b28c:	sbb    eax,0xd6dfb27d
 102b291:	sbb    eax,eax
 102b293:	aas    
 102b294:	xor    ecx,edx
 102b296:	inc    ecx
 102b297:	mov    ebx,0x95f67625
 102b29c:	dec    eax
 102b29d:	sub    ah,BYTE PTR [ebx+0x6]
 102b2a0:	pop    eax
 102b2a1:	pop    ds
 102b2a2:	and    esp,DWORD PTR [eax+0x56628c6e]
 102b2a8:	scas   eax,DWORD PTR es:[edi]
 102b2a9:	xchg   ebp,eax
 102b2aa:	stos   DWORD PTR es:[edi],eax
 102b2ab:	shl    DWORD PTR [edi-0x5303bb63],1
 102b2b1:	(bad)  
 102b2b2:	das    
 102b2b3:	xchg   esp,eax
 102b2b4:	dec    ebp
 102b2b5:	sar    DWORD PTR [eax],1
 102b2b7:	mov    cl,0xdc
 102b2b9:	fdiv   DWORD PTR [ebp+ebx*2-0x35c679bf]
 102b2c0:	sub    DWORD PTR [esi+edx*8-0x72de59df],0xd7f03801
 102b2cb:	and    DWORD PTR [ebx-0x63],0xa1681dca
 102b2d2:	inc    edx
 102b2d3:	mov    edi,0xedfb571
 102b2d8:	jl     0x102b2bd
 102b2da:	sub    eax,0x9394e337
 102b2df:	(bad)  
 102b2e0:	cli    
 102b2e1:	test   DWORD PTR [eax-0x19],eax
 102b2e4:	scas   eax,DWORD PTR es:[edi]
 102b2e5:	sub    esi,edi
 102b2e7:	sbb    BYTE PTR [ebp+edx*8-0x67478331],ah
 102b2ee:	ins    DWORD PTR es:[edi],dx
 102b2ef:	fbstp  TBYTE PTR [ebp-0x38cd2d29]
 102b2f5:	cmp    eax,0x16694833
 102b2fa:	xchg   edx,eax
 102b2fb:	rol    esi,cl
 102b2fd:	test   eax,0x5665a2d8
 102b302:	in     al,0xfb
 102b304:	mov    ecx,0xdf71bbbd
 102b309:	in     eax,dx
 102b30a:	xlat   BYTE PTR ds:[ebx]
 102b30b:	add    BYTE PTR [eax+edi*2-0xc],al
 102b30f:	fldenv [edi-0x3a]
 102b312:	test   al,ch
 102b314:	shl    DWORD PTR [eax-0x28],0x7
 102b318:	(bad)  
 102b319:	lock push edi
 102b31b:	popa   
 102b31c:	leave  
 102b31d:	scas   eax,DWORD PTR es:[edi]
 102b31e:	sbb    ecx,DWORD PTR [edi-0x52]
 102b321:	mov    edi,0xba3fd633
 102b326:	test   DWORD PTR ds:0xa3ef2005,0x10a92e9
 102b330:	push   eax
 102b331:	mov    esi,0x2b267c6d
 102b336:	enter  0x1cd4,0xf1
 102b33a:	jns    0x102b33c
 102b33c:	mov    ch,0xe7
 102b33e:	imul   ebx,ecx,0x33
 102b341:	add    DWORD PTR [eax],eax
 102b343:	aas    
 102b344:	clc    
 102b345:	fcmovu st,st(7)
 102b347:	gs fwait
 102b349:	jnp    0x102b2f1
 102b34b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102b34c:	add    eax,0x6a933bf8
 102b351:	jae    0x102b2e2
 102b353:	push   0x37
 102b355:	xor    al,0x78
 102b357:	push   ecx
 102b358:	push   esp
 102b359:	mov    esi,0x95ca3a55
 102b35e:	fild   WORD PTR [edi-0x19]
 102b361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102b362:	mov    al,ds:0x304294e7
 102b367:	imul   eax,DWORD PTR [ebp+0x60],0xd9123c17
 102b36e:	adc    eax,0x2d68b2b0
 102b373:	mov    ebx,0x5790dd7a
 102b378:	mov    ds:0xd23cd0c,eax
 102b37d:	ins    DWORD PTR es:[edi],dx
 102b37e:	cmp    esi,eax
 102b380:	sub    eax,0x1dbc0f1b
 102b385:	js     0x102b36c
 102b387:	xor    DWORD PTR [edi+0x4f4be9e0],esp
 102b38d:	sar    BYTE PTR [ecx+0x4f],0xf2
 102b391:	fild   DWORD PTR [ecx-0x204c8b81]
 102b397:	push   cs
 102b398:	cld    
 102b399:	in     al,0xf3
 102b39b:	rcr    DWORD PTR [ecx+0xac01900],cl
 102b3a1:	and    BYTE PTR [ebx+0x1b],0x58
 102b3a5:	xchg   BYTE PTR [edi+0x270ba5c1],cl
 102b3ab:	adc    eax,0x324a5185
 102b3b0:	lahf   
 102b3b1:	es ja  0x102b361
 102b3b4:	xor    al,0x8a
 102b3b6:	fcom   QWORD PTR [esi+eiz*4]
 102b3b9:	push   es
 102b3ba:	loope  0x102b35a
 102b3bc:	fld    TBYTE PTR [edi+0x3dfedcc2]
 102b3c2:	cwde   
 102b3c3:	call   0x89fb653e
 102b3c8:	and    edi,DWORD PTR [ebp-0x80]
 102b3cb:	jp     0x102b3dc
 102b3cd:	fadd   QWORD PTR [ebx-0x5225faa1]
 102b3d3:	lock xchg ebp,eax
 102b3d5:	popf   
 102b3d6:	ss cld 
 102b3d8:	mov    edx,0xc006337f
 102b3dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102b3de:	std    
 102b3df:	jo     0x102b3e0
 102b3e1:	fisttp WORD PTR [esi+0x7f8fabfe]
 102b3e7:	adc    al,0x6
 102b3e9:	pop    es
 102b3ea:	popf   
 102b3eb:	mov    ebp,0x1a966516
 102b3f0:	push   cs
 102b3f1:	inc    eax
 102b3f2:	jno    0x102b3d8
 102b3f4:	fild   WORD PTR [ebp+0x38dc00f3]
 102b3fa:	mov    al,0xd4
 102b3fc:	cmp    DWORD PTR [edi-0x25],0x5d
 102b400:	jmp    0x102b3f3
 102b402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102b403:	iret   
 102b404:	add    al,0xcb
 102b406:	(bad)  
 102b407:	clc    
 102b408:	addr16 popa 
 102b40a:	lds    ecx,FWORD PTR [ecx]
 102b40c:	addr16 mov ds:0x353b,eax
 102b410:	test   ecx,ebp
 102b412:	test   eax,0xa6a6a61e
 102b417:	shr    ecx,1
 102b419:	dec    esp
 102b41a:	cli    
 102b41b:	mov    ds:0x9f9f64bc,eax
 102b420:	dec    esp
 102b421:	cmp    edi,DWORD PTR [ecx]
 102b423:	pop    ebp
 102b424:	(bad)  
 102b425:	repnz push ebp
 102b427:	stos   BYTE PTR es:[edi],al
 102b428:	inc    esp
 102b429:	adc    al,0xdb
 102b42b:	retf   0xdd5a
 102b42e:	xchg   edx,eax
 102b42f:	cmc    
 102b430:	xchg   edi,eax
 102b431:	cmp    cl,BYTE PTR [ebp+0x25]
 102b434:	(bad)  
 102b435:	imul   edx,DWORD PTR [esi],0xaf34b6da
 102b43b:	scas   eax,DWORD PTR es:[edi]
 102b43c:	aaa    
 102b43d:	mov    al,0x21
 102b43f:	or     eax,0x130158c1
 102b444:	(bad)  
 102b445:	mov    ds,WORD PTR [edi+0x4ba6aec7]
 102b44b:	cmp    al,0x2d
 102b44d:	pop    eax
 102b44e:	punpcklbw mm4,DWORD PTR [eax-0x25]
 102b452:	adc    edi,0xcf0b835f
 102b458:	pop    edi
 102b459:	xchg   edi,eax
 102b45a:	sub    dl,al
 102b45c:	mov    ah,0x88
 102b45e:	ins    BYTE PTR es:[edi],dx
 102b45f:	loopne 0x102b407
 102b461:	and    eax,0xa22e64bc
 102b466:	rcl    DWORD PTR [esi+ebx*4-0x46d3ef7d],1
 102b46d:	pop    eax
 102b46e:	sub    DWORD PTR [esi+0x67],esp
 102b471:	lods   eax,DWORD PTR ds:[esi]
 102b472:	xor    ecx,0x3a
 102b475:	dec    edx
 102b476:	in     eax,dx
 102b477:	dec    eax
 102b478:	es adc DWORD PTR ds:[eax],esi
 102b47c:	mov    ebx,0xbfee376f
 102b481:	std    
 102b482:	sbb    dl,BYTE PTR [eax]
 102b484:	add    BYTE PTR [edi-0x61],0x73
 102b488:	push   esi
 102b489:	or     bh,BYTE PTR [ebx-0xa8f641b]
 102b48f:	outs   dx,BYTE PTR ds:[esi]
 102b490:	add    BYTE PTR ds:0xeb9404af,ch
 102b496:	das    
 102b497:	push   esi
 102b498:	cld    
 102b499:	icebp  
 102b49a:	rcr    edi,1
 102b49c:	mov    esp,0xfecf8fca
 102b4a1:	push   edi
 102b4a2:	push   ss
 102b4a3:	lahf   
 102b4a4:	aaa    
 102b4a5:	add    dh,BYTE PTR ds:0x650a0378
 102b4ab:	push   cs
 102b4ac:	dec    ecx
 102b4ad:	dec    edx
 102b4ae:	inc    ebp
 102b4af:	mov    eax,ds:0xb2426323
 102b4b4:	jecxz  0x102b437
 102b4b6:	and    DWORD PTR [eax-0x20],edx
 102b4b9:	(bad)  
 102b4ba:	fsub   st,st(5)
 102b4bc:	jg     0x102b4cd
 102b4be:	add    BYTE PTR [eax+0x74],bl
 102b4c1:	fsub   QWORD PTR [ebx-0x4f]
 102b4c4:	loop   0x102b4be
 102b4c6:	mov    bl,0xd0
 102b4c8:	popf   
 102b4c9:	out    dx,al
 102b4ca:	bound  esp,QWORD PTR [esi-0x10103019]
 102b4d0:	je     0x102b4f8
 102b4d2:	rcr    DWORD PTR [esi],1
 102b4d4:	imul   ebp,ebx,0x25
 102b4d7:	mov    esi,0x160c7016
 102b4dc:	outs   dx,BYTE PTR ds:[esi]
 102b4dd:	add    eax,DWORD PTR [ebx+0x1173d8e0]
 102b4e3:	cmc    
 102b4e4:	push   0x41
 102b4e6:	xchg   esi,eax
 102b4e7:	sub    eax,0x9c8a9705
 102b4ec:	xchg   ebp,eax
 102b4ed:	mov    ebp,DWORD PTR [ecx-0x5c]
 102b4f0:	ins    BYTE PTR es:[edi],dx
 102b4f1:	dec    ecx
 102b4f2:	mov    ecx,0xd158ca25
 102b4f7:	sbb    eax,0xa48ca327
 102b4fc:	ret    
 102b4fd:	fs push esp
 102b4ff:	addr16 jp 0x102b531
 102b502:	rcr    DWORD PTR [edi-0x38],0x72
 102b506:	mov    esi,0x76dc169
 102b50b:	mov    esi,0x325bd6e9
 102b510:	ror    BYTE PTR [ecx+0x1],1
 102b513:	push   eax
 102b514:	mov    dl,0xdb
 102b516:	push   esp
 102b517:	mov    ds:0x8e715e26,eax
 102b51c:	pop    ecx
 102b51d:	push   0x2ced8364
 102b522:	jns    0x102b4b9
 102b524:	dec    esi
 102b525:	sar    DWORD PTR [ebp+0x4441a728],1
 102b52b:	fdivr  DWORD PTR [eax-0xd]
 102b52e:	xlat   BYTE PTR ds:[ebx]
 102b52f:	xor    BYTE PTR [edi],dh
 102b531:	mov    ebx,0x49c99d07
 102b536:	sub    al,0x5e
 102b538:	mov    cl,0xd2
 102b53a:	mov    edi,0x6dc0f7a8
 102b53f:	(bad)  
 102b540:	sub    dl,al
 102b542:	stos   BYTE PTR es:[edi],al
 102b543:	add    BYTE PTR [edx+0x23],ch
 102b546:	dec    esi
 102b547:	std    
 102b548:	cmp    DWORD PTR [esi-0x5],ebx
 102b54b:	iret   
 102b54c:	mov    edi,DWORD PTR [ebp-0x3e]
 102b54f:	xchg   esp,eax
 102b550:	pop    ds
 102b551:	scas   eax,DWORD PTR es:[edi]
 102b552:	sti    
 102b553:	out    0xf9,eax
 102b555:	jg     0x102b55c
 102b557:	jl     0x102b564
 102b559:	jbe    0x102b544
 102b55b:	add    DWORD PTR [eax-0x10],ecx
 102b55e:	pop    es
 102b55f:	inc    esi
 102b560:	sub    esp,DWORD PTR [ebx-0x3e]
 102b563:	mov    dl,0x91
 102b565:	sub    eax,0xea023859
 102b56a:	std    
 102b56b:	dec    BYTE PTR [ebx+0x7fe008bd]
 102b571:	neg    edi
 102b573:	add    DWORD PTR [eax+0x58],0x7c
 102b577:	fsub   QWORD PTR [ebx-0x4f]
 102b57a:	cli    
 102b57b:	in     al,dx
 102b57c:	pop    edi
 102b57d:	repz dec ebx
 102b57f:	jl     0x102b5fc
 102b581:	xor    ebx,DWORD PTR [eax+0x1130f5ea]
 102b587:	jbe    0x102b57f
 102b589:	cmp    DWORD PTR [ebx],eax
 102b58b:	(bad)  
 102b58c:	mov    ds:0x8d802fd5,al
 102b591:	fst    DWORD PTR [ecx+0x4a]
 102b594:	push   esi
 102b595:	pop    esp
 102b596:	aaa    
 102b597:	call   0x26e1aa97
 102b59c:	popf   
 102b59d:	gs ret 
 102b59f:	(bad)
 102b5a2:	dec    eax
 102b5a3:	ror    dl,0x7
 102b5a6:	aas    
 102b5a7:	xchg   esp,eax
 102b5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102b5a9:	push   ebx
 102b5aa:	sub    eax,DWORD PTR [ebx+0x696a00d4]
 102b5b0:	jl     0x102b54c
 102b5b2:	push   cs
 102b5b3:	nop
 102b5b4:	sbb    DWORD PTR [ebp*1-0x583f1248],esp
 102b5bb:	pushf  
 102b5bc:	mov    ah,0x36
 102b5be:	add    edx,DWORD PTR [ebp-0x2f]
 102b5c1:	inc    ebp
 102b5c2:	sub    al,0x34
 102b5c4:	push   esi
 102b5c5:	leave  
 102b5c6:	adc    eax,0x84725673
 102b5cb:	mov    es,dx
 102b5ce:	sub    dl,al
 102b5d0:	stos   BYTE PTR es:[edi],al
 102b5d1:	mov    ds:0x9973e4c5,eax
 102b5d6:	(bad)  
 102b5d7:	and    al,0xc6
 102b5d9:	xchg   ecx,eax
 102b5da:	in     eax,0x3
 102b5dc:	rcr    BYTE PTR [esi-0x20bca4a3],0x1f
 102b5e3:	cmp    BYTE PTR [ebp-0x23],bh
 102b5e6:	adc    edx,DWORD PTR [edx-0x6c]
 102b5e9:	dec    ebp
 102b5ea:	push   edi
 102b5eb:	rcl    cl,0x6e
 102b5ee:	(bad)  
 102b5f0:	push   esi
 102b5f1:	in     eax,0x7
 102b5f3:	cli    
 102b5f4:	sub    ah,cl
 102b5f6:	sti    
 102b5f7:	xchg   ebx,eax
 102b5f8:	cmp    al,0xe8
 102b5fa:	inc    ebx
 102b5fb:	js     0x102b5fd
 102b5fd:	cdq    
 102b5fe:	mov    ecx,edi
 102b600:	loopne 0x102b631
 102b602:	pushf  
 102b603:	pop    es
 102b604:	shr    BYTE PTR [eax-0x7a51dff8],1
 102b60a:	push   edx
 102b60b:	pusha  
 102b60c:	inc    esp
 102b60d:	jb     0x102b610
 102b60f:	sbb    BYTE PTR [ecx-0xb],bh
 102b612:	ds pusha 
 102b614:	icebp  
 102b615:	xchg   ebx,eax
 102b616:	adc    DWORD PTR [esi+0x17],0x8adfb77b
 102b61d:	(bad)  
 102b61e:	mov    edi,0x100d3fb
 102b623:	mov    ecx,DWORD PTR [edi+0x3afb3bf1]
 102b629:	xchg   ebx,eax
 102b62a:	xchg   ebx,eax
 102b62b:	icebp  
 102b62c:	xor    al,0x9f
 102b62e:	leave  
 102b62f:	into   
 102b630:	and    al,0xc6
 102b632:	mov    edx,0x2a4bb67
 102b638:	xchg   BYTE PTR [eax+0x5b660373],ch
 102b63e:	xchg   ebp,eax
 102b63f:	dec    esi
 102b640:	mov    esi,0xb1436244
 102b645:	stos   BYTE PTR es:[di],al
 102b647:	sahf   
 102b648:	mov    edx,DWORD PTR [edx]
 102b64a:	ja     0x102b681
 102b64c:	and    edx,DWORD PTR [edi]
 102b64e:	mov    edx,DWORD PTR [edx-0x7a]
 102b651:	icebp  
 102b652:	xchg   ecx,eax
 102b653:	add    BYTE PTR [ebx+eiz*2-0x46],dh
 102b657:	sub    dh,BYTE PTR [ecx]
 102b659:	popf   
 102b65a:	pop    esp
 102b65b:	push   esp
 102b65c:	data16 mov bl,0x1
 102b660:	nop
 102b661:	mov    ecx,0x3da0bfb
 102b666:	sbb    ah,ah
 102b668:	jbe    0x102b6ca
 102b66a:	add    dl,bl
 102b66c:	fimul  DWORD PTR [ebx]
 102b66e:	or     ebp,esi
 102b670:	call   0x2130:0x89df972a
 102b677:	stos   BYTE PTR es:[edi],al
 102b678:	mov    esi,0x73b0e610
 102b67d:	or     eax,DWORD PTR [eax]
 102b67f:	add    BYTE PTR [eax],ah
 102b681:	add    BYTE PTR [ecx+0x44],cl
 102b684:	inc    ecx
 102b685:	push   esp
 102b686:	add    ah,dh
 102b688:	dec    edx
 102b689:	out    dx,eax
 102b68a:	lds    ecx,FWORD PTR [ebx]
 102b68c:	mov    dh,0x2a
 102b68e:	lds    edi,FWORD PTR ds:0xa8342805
 102b694:	adc    al,0x5e
 102b696:	and    ch,BYTE PTR [esp+edi*4-0x7]
 102b69a:	jmp    0x102b69c
 102b69c:	add    BYTE PTR [ebp-0x35],0x97
 102b6a0:	mov    ds:0x7fa978b7,eax
 102b6a5:	mov    cl,0x7f
 102b6a7:	sub    ebx,esp
 102b6a9:	xchg   esi,eax
 102b6aa:	jg     0x102b69f
 102b6ac:	mov    edi,DWORD PTR [esi-0x8]
 102b6af:	test   BYTE PTR [edi-0x4a],bl
 102b6b2:	(bad)  
 102b6b3:	xchg   ebp,eax
 102b6b4:	je     0x102b6b3
 102b6b6:	lds    eax,FWORD PTR [ecx+0xf93719f]
 102b6bc:	lahf   
 102b6bd:	lds    esp,FWORD PTR [edi]
 102b6bf:	iret   
 102b6c0:	add    DWORD PTR [eax],ebp
 102b6c2:	sub    DWORD PTR [ecx],eax
 102b6c4:	mov    ecx,0xdd02c818
 102b6c9:	and    ebx,esi
 102b6cb:	mov    cl,0x65
 102b6cd:	imul   ecx,DWORD PTR [eax],0x1f7ea41
 102b6d3:	dec    ebx
 102b6d4:	sahf   
 102b6d5:	sbb    BYTE PTR [edi],dh
 102b6d7:	idiv   DWORD PTR [edx+esi*8+0x3d]
 102b6db:	lahf   
 102b6dc:	add    al,0x0
 102b6de:	je     0x102b677
 102b6e0:	lods   eax,DWORD PTR ds:[esi]
 102b6e1:	ret    0xf32a
 102b6e4:	int    0xbe
 102b6e6:	out    dx,al
 102b6e7:	fs aaa 
 102b6e9:	cs icebp 
 102b6eb:	add    eax,0xf5643072
 102b6f0:	push   0xcb4e5dea
 102b6f5:	retf   0x890b
 102b6f8:	int    0xa2
 102b6fa:	ret    0x9e90
 102b6fd:	test   DWORD PTR [eax-0x4d],ebp
 102b700:	sub    al,0xf
 102b702:	jecxz  0x102b689
 102b704:	jo     0x102b6e2
 102b706:	or     al,0xb4
 102b708:	in     al,dx
 102b709:	xor    ch,BYTE PTR gs:[edi+0x32c6d0ae]
 102b710:	ins    DWORD PTR es:[edi],dx
 102b711:	and    DWORD PTR [edi-0x77955e36],edx
 102b717:	push   ebx
 102b718:	sub    al,bl
 102b71a:	jl     0x102b6ef
 102b71c:	push   eax
 102b71d:	mov    dh,0x3
 102b71f:	push   ecx
 102b721:	lahf   
 102b722:	push   DWORD PTR ds:0x7ff7f9bd
 102b728:	fstp   TBYTE PTR [edi+0x1d]
 102b72b:	mov    eax,0xae999560
 102b730:	cld    
 102b731:	out    dx,al
 102b732:	aad    0xf8
 102b734:	into   
 102b735:	mov    ch,0xeb
 102b737:	jno    0x102b70c
 102b739:	lods   eax,DWORD PTR ds:[esi]
 102b73a:	sbb    esi,DWORD PTR [eax+0xa]
 102b73d:	outs   dx,DWORD PTR ds:[esi]
 102b73e:	pop    es
 102b73f:	jle    0x102b703
 102b741:	mov    edx,0x54e3c5ac
 102b746:	popf   
 102b747:	mov    al,0xe0
 102b749:	xchg   ecx,eax
 102b74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102b74b:	out    0x8f,al
 102b74d:	popw   ds
 102b74f:	mov    edx,0x8dc09bc1
 102b754:	cld    
 102b755:	jns    0x102b79f
 102b757:	xor    ah,BYTE PTR [ecx+0x45]
 102b75a:	or     bl,BYTE PTR [ecx+0x41]
 102b75d:	or     BYTE PTR [ebx+0x3f92be27],0xea
 102b764:	jmp    0x102b727
 102b766:	(bad)  
 102b767:	fild   WORD PTR [edi]
 102b769:	inc    eax
 102b76a:	cmp    ch,ch
 102b76c:	lods   al,BYTE PTR ds:[esi]
 102b76d:	xor    edx,ebx
 102b76f:	stos   DWORD PTR es:[edi],eax
 102b770:	dec    ebp
 102b771:	pop    edi
 102b772:	and    bl,0x65
 102b775:	mov    esi,0x3e2dedae
 102b77a:	(bad)  
 102b77b:	mov    esp,0xfc172feb
 102b780:	enter  0xbeed,0x4
 102b784:	test   al,0xf
 102b786:	or     dl,0xcf
 102b789:	and    DWORD PTR [edi-0x3],0xad9f717f
 102b790:	adc    ecx,DWORD PTR [eax]
 102b792:	add    eax,0x44a4b629
 102b797:	(bad)  
 102b798:	sbb    al,0x30
 102b79a:	jns    0x102b7e6
 102b79c:	add    al,0xff
 102b79e:	daa    
 102b79f:	jmp    FWORD PTR cs:[eax]
 102b7a2:	mov    dh,0x6f
 102b7a4:	fild   WORD PTR [ebx-0x53b53332]
 102b7aa:	div    DWORD PTR ds:[edi]
 102b7ad:	cmp    al,0xf8
 102b7af:	inc    ebx
 102b7b0:	lahf   
 102b7b1:	jg     0x102b765
 102b7b3:	rol    DWORD PTR [ebp+0x6b],cl
 102b7b6:	ins    BYTE PTR es:[edi],dx
 102b7b7:	dec    esp
 102b7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102b7b9:	(bad)  
 102b7ba:	jb     0x102b839
 102b7bc:	xchg   edi,eax
 102b7bd:	sub    al,0x38
 102b7bf:	add    DWORD PTR [esi+0x2],0xffffffa9
 102b7c3:	shr    DWORD PTR [ebp+0x56],0x8a
 102b7c7:	add    BYTE PTR [ecx+esi*8-0x5c],0xf5
 102b7cc:	out    dx,al
 102b7cd:	jecxz  0x102b7e4
 102b7cf:	ret    0x8d84
 102b7d2:	sahf   
 102b7d3:	or     DWORD PTR ds:0x7a5c012e,0x8a91b32f
 102b7dd:	retf   
 102b7de:	and    eax,0xdc55f8de
 102b7e3:	stos   DWORD PTR es:[edi],eax
 102b7e4:	and    bl,dh
 102b7e6:	cmp    ebp,DWORD PTR [eax+0x14]
 102b7e9:	sbb    eax,0x52da1a1a
 102b7ee:	pusha  
 102b7ef:	sti    
 102b7f0:	jne    0x102b7d2
 102b7f2:	or     BYTE PTR [eax+eiz*8-0x3e],0xf3
 102b7f7:	das    
 102b7f8:	rol    BYTE PTR [ebp+0x2ba05fe7],0x85
 102b7ff:	ror    DWORD PTR [ecx+0x3a],0x62
 102b803:	mov    esp,0xb554802d
 102b808:	xor    DWORD PTR [ecx+0x5a812c46],ecx
 102b80e:	cmp    al,0x0
 102b811:	cs pop edx
 102b813:	aas    
 102b814:	test   DWORD PTR [edi-0x7b6c4dd1],0xf5bc1000
 102b81e:	daa    
 102b81f:	add    dl,BYTE PTR [esi]
 102b821:	das    
 102b822:	pop    ebx
 102b823:	mov    cs,ecx
 102b825:	jmp    0x80b437c8
 102b82a:	sub    ebx,esp
 102b82c:	imul   BYTE PTR [ebx+0x9d5f03c]
 102b832:	mov    edi,0x50215e63
 102b837:	or     ebp,DWORD PTR [eax+0x39]
 102b83a:	call   0xd34b7724
 102b83f:	out    dx,al
 102b840:	dec    esp
 102b841:	lahf   
 102b842:	aas    
 102b843:	push   esi
 102b844:	add    BYTE PTR [eax],0x3a
 102b847:	mov    al,ds:0xdb1871c3
 102b84c:	adc    eax,0xc45ea7b0
 102b851:	or     bl,BYTE PTR [esi+0x3afcabf3]
 102b857:	(bad)  
 102b858:	mov    eax,ds:0x9f05b7de
 102b85d:	js     0x102b856
 102b85f:	inc    edi
 102b860:	icebp  
 102b861:	shl    dh,1
 102b863:	fstp   QWORD PTR [eax-0x2a7ea668]
 102b869:	out    0x3d,eax
 102b86b:	pop    ds
 102b86c:	push   ebx
 102b86d:	loope  0x102b822
 102b86f:	pop    ebp
 102b870:	sar    DWORD PTR [ebp-0x1020a3a2],cl
 102b876:	int3   
 102b877:	cli    
 102b878:	jle    0x102b7ff
 102b87a:	mov    ebx,0x9b99f012
 102b87f:	mov    al,ds:0xdb9d554
 102b884:	xchg   esp,eax
 102b885:	arpl   WORD PTR [esi],si
 102b887:	imul   ecx,DWORD PTR [edi],0xffffffb6
 102b88a:	aam    0x5c
 102b88c:	or     al,0xca
 102b88e:	jecxz  0x102b812
 102b890:	ret    
 102b891:	fnstcw WORD PTR [ebp+ebx*2-0x7226d867]
 102b898:	nop
 102b899:	iret   
 102b89a:	mov    ds:0x57782443,al
 102b89f:	sahf   
 102b8a0:	sahf   
 102b8a1:	sub    al,0x94
 102b8a3:	sub    DWORD PTR [ebx+0x64],esp
 102b8a6:	inc    ecx
 102b8a7:	push   0xffffff8e
 102b8a9:	add    DWORD PTR [ebx+0x75],edx
 102b8ac:	loopne 0x102b8ce
 102b8ae:	repz inc eax
 102b8b0:	test   DWORD PTR [edx],ecx
 102b8b2:	push   esi
 102b8b3:	in     eax,0xb7
 102b8b5:	fisub  DWORD PTR [eax]
 102b8b7:	cmp    al,0x23
 102b8b9:	and    al,0x40
 102b8bb:	pop    ecx
 102b8bc:	imul   DWORD PTR [ebx]
 102b8be:	stos   DWORD PTR es:[edi],eax
 102b8bf:	cmp    edx,ebx
 102b8c1:	sub    BYTE PTR [edx],dl
 102b8c3:	fcom   QWORD PTR [edx+ebp*2+0x20]
 102b8c7:	push   0x5cc4d163
 102b8cc:	cmp    al,0x25
 102b8ce:	stos   DWORD PTR es:[edi],eax
 102b8cf:	adc    al,0xae
 102b8d1:	adc    ch,cl
 102b8d3:	pop    edx
 102b8d4:	aaa    
 102b8d5:	and    ah,BYTE PTR [eax-0x19]
 102b8d8:	mov    dh,0x7b
 102b8da:	icebp  
 102b8db:	loopne 0x102b8a3
 102b8dd:	dec    DWORD PTR [ebx]
 102b8df:	add    BYTE PTR [eax],bh
 102b8e1:	push   ebp
 102b8e2:	pop    eax
 102b8e3:	jg     0x102b951
 102b8e5:	cli    
 102b8e6:	bound  eax,QWORD PTR [eax]
 102b8e8:	cmp    ch,BYTE PTR [edi-0x418f013]
 102b8ee:	lds    edi,FWORD PTR [ecx]
 102b8f0:	jmp    DWORD PTR [eax-0x3f]
 102b8f3:	push   ebp
 102b8f4:	ret    0x4a6
 102b8f7:	jno    0x102b88d
 102b8f9:	sub    ebp,esp
 102b8fb:	int    0xa7
 102b8fd:	inc    edx
 102b8fe:	mov    eax,0x58356f78
 102b903:	or     BYTE PTR [ebx+0x32],cl
 102b906:	sub    eax,0x3f69ef1
 102b90b:	popf   
 102b90c:	jecxz  0x102b8d1
 102b90e:	out    0x9e,al
 102b910:	cmp    eax,0x3f27d2f8
 102b915:	mov    DWORD PTR [edi-0x273e1049],eax
 102b91b:	in     al,0x22
 102b91d:	lods   al,BYTE PTR ds:[esi]
 102b91e:	cmp    edi,ebp
 102b920:	add    eax,0x9a599a98
 102b925:	ins    DWORD PTR es:[edi],dx
 102b926:	out    dx,al
 102b927:	push   ecx
 102b928:	loopne 0x102b961
 102b92a:	cmc    
 102b92b:	(bad)  
 102b92c:	in     al,0xf2
 102b92e:	pop    edx
 102b92f:	test   DWORD PTR [ecx],ecx
 102b931:	jae    0x102b982
 102b933:	test   DWORD PTR [edi+0x56],ebx
 102b936:	adc    al,0xb1
 102b938:	push   0xffffff90
 102b93a:	mov    ah,BYTE PTR [ecx+0x3445908a]
 102b940:	mov    WORD PTR [edx+ebx*8],ss
 102b943:	xchg   esi,eax
 102b944:	stos   DWORD PTR es:[edi],eax
 102b945:	and    al,0x3b
 102b947:	(bad)  
 102b949:	push   esi
 102b94a:	adc    DWORD PTR [edi+0x23e44e9],esp
 102b950:	jmp    0x8695eba2
 102b955:	sbb    eax,0x376d0d20
 102b95a:	mov    al,ds:0x5b9ab6bc
 102b95f:	imul   edx,DWORD PTR [ecx-0x57],0x9265651d
 102b966:	mov    edi,ecx
 102b968:	xor    al,BYTE PTR [esi-0x26]
 102b96b:	fild   DWORD PTR [esp+edi*2-0x16f66ad1]
 102b972:	fs aad 0x6a
 102b975:	inc    esp
 102b976:	mov    eax,ds:0x2361ec1c
 102b97b:	xchg   edx,eax
 102b97c:	mov    bh,0x6c
 102b97e:	push   cs
 102b97f:	fst    DWORD PTR [esi+0x56147993]
 102b985:	test   DWORD PTR [eax-0x48],eax
 102b988:	jmp    0x102b910
 102b98a:	das    
 102b98b:	add    ah,BYTE PTR [eax]
 102b98d:	lods   al,BYTE PTR ds:[esi]
 102b98e:	cmp    al,0xee
 102b990:	cwde   
 102b991:	fs std 
 102b993:	neg    esi
 102b995:	or     ebp,DWORD PTR [edi+edi*8+0x4e]
 102b999:	mov    al,0xfa
 102b99b:	popa   
 102b99c:	int    0x7f
 102b99e:	sub    ebp,DWORD PTR [eax+esi*8-0x6df6faad]
 102b9a5:	ret    0xedbb
 102b9a8:	bound  esp,QWORD PTR [ecx-0x45a18e67]
 102b9ae:	jmp    0x102ba02
 102b9b0:	mov    eax,ds:0x5e043d88
 102b9b5:	ins    DWORD PTR es:[edi],dx
 102b9b6:	(bad)
 102b9b9:	bound  ebp,QWORD PTR [edx+0x67]
 102b9bc:	sub    ch,BYTE PTR [ebp+0x40411da0]
 102b9c2:	jnp    0x102ba1d
 102b9c4:	add    al,0xff
 102b9c6:	mov    edi,0x70afe27e
 102b9cb:	shl    ebp,cl
 102b9cd:	test   ecx,0xcc7026b5
 102b9d3:	cdq    
 102b9d4:	mov    edi,0x7f4f6e8e
 102b9d9:	mov    bl,0x6f
 102b9db:	jl     0x102ba59
 102b9dd:	sbb    al,0xce
 102b9df:	push   ebp
 102b9e0:	jo     0x102ba52
 102b9e2:	leave  
 102b9e3:	repnz dec edx
 102b9e5:	retf   
 102b9e6:	ins    BYTE PTR es:[edi],dx
 102b9e7:	xchg   edx,eax
 102b9e8:	xchg   esi,eax
 102b9e9:	add    BYTE PTR [ecx-0x6c],dh
 102b9ec:	mov    esp,0xbfd7b934
 102b9f1:	imul   ecx,DWORD PTR [esi-0x4ce249a4],0x8a14f25f
 102b9fb:	jecxz  0x102ba09
 102b9fd:	stos   BYTE PTR es:[edi],al
 102b9fe:	ins    DWORD PTR es:[edi],dx
 102b9ff:	or     al,0x4b
 102ba01:	and    eax,0x275f8b70
 102ba06:	outs   dx,DWORD PTR ds:[esi]
 102ba07:	dec    ecx
 102ba08:	aas    
 102ba09:	jo     0x102b9b0
 102ba0b:	js     0x102ba2f
 102ba0d:	ins    BYTE PTR es:[edi],dx
 102ba0e:	fcomp  QWORD PTR [edi-0x5e]
 102ba11:	stos   DWORD PTR es:[edi],eax
 102ba12:	pusha  
 102ba13:	loopne 0x102ba49
 102ba15:	aam    0xcf
 102ba17:	add    edi,0x42
 102ba1a:	xchg   edi,eax
 102ba1b:	dec    esp
 102ba1c:	sub    DWORD PTR [ecx+0x3d],0x1a552e39
 102ba23:	loopne 0x102ba08
 102ba25:	add    al,0x59
 102ba27:	jo     0x102ba61
 102ba29:	pop    esp
 102ba2a:	jno    0x102b9d9
 102ba2c:	inc    eax
 102ba2d:	ror    ebp,0x2b
 102ba30:	outs   dx,BYTE PTR ds:[esi]
 102ba31:	inc    edi
 102ba32:	xchg   cl,cl
 102ba34:	mov    ebx,0x2e54bd21
 102ba39:	and    al,0x41
 102ba3b:	push   ss
 102ba3c:	inc    edx
 102ba3d:	sub    BYTE PTR [ebx-0x24192f0e],cl
 102ba43:	icebp  
 102ba44:	rcl    dh,1
 102ba46:	or     eax,0xfe4e0220
 102ba4b:	cmp    DWORD PTR [ecx-0x3],esp
 102ba4e:	out    dx,eax
 102ba4f:	inc    edi
 102ba51:	adc    BYTE PTR [eax-0x74],cl
 102ba54:	call   0xca1f0930
 102ba59:	pop    ebp
 102ba5a:	xchg   DWORD PTR [edi+esi*8],eax
 102ba5d:	sti    
 102ba5e:	fistp  QWORD PTR [edx+0xe]
 102ba61:	jno    0x102ba48
 102ba63:	pop    ds
 102ba64:	sbb    al,0xf4
 102ba66:	inc    eax
 102ba67:	pop    edi
 102ba68:	lock adc ch,BYTE PTR [edx+0x40]
 102ba6c:	jne    0x102ba83
 102ba6e:	bound  esi,QWORD PTR [edi-0x80]
 102ba71:	mov    DWORD PTR [ecx],0xd8803ecc
 102ba77:	sbb    BYTE PTR [edx-0x56625384],ah
 102ba7d:	test   BYTE PTR [edx],0x20
 102ba80:	cmp    bh,0xe6
 102ba83:	sbb    ebp,esi
 102ba85:	inc    ebp
 102ba86:	aad    0x1e
 102ba88:	(bad)  
 102ba89:	jno    0x102ba72
 102ba8b:	cld    
 102ba8c:	push   edi
 102ba8d:	jmp    ebp
 102ba8f:	sahf   
 102ba90:	sahf   
 102ba91:	pop    es
 102ba92:	jg     0x102ba4b
 102ba94:	cmp    esp,ebp
 102ba96:	aaa    
 102ba97:	test   DWORD PTR [ebp+eax*4+0x120c0a3e],0x23e24268
 102baa2:	enter  0x941d,0x3
 102baa6:	ret    0x64dc
 102baa9:	push   ebp
 102baaa:	sub    eax,0xbabcae80
 102baaf:	inc    edx
 102bab0:	ds cs jg 0x102ba60
 102bab4:	outs   dx,BYTE PTR ds:[esi]
 102bab5:	call   0xb0c2:0x5228b9bc
 102babc:	xor    al,0x92
 102babe:	xchg   ecx,eax
 102babf:	sub    eax,0xd00c20a5
 102bac4:	aad    0xc
 102bac6:	mov    BYTE PTR [edx+ebp*2+0x45065ca3],ch
 102bacd:	ret    
 102bace:	cmp    edx,DWORD PTR [eax]
 102bad0:	inc    esp
 102bad1:	push   esp
 102bad2:	test   BYTE PTR [edx+0x2],dl
 102bad5:	xsaves cs:[esi+0x5d]
 102bada:	xchg   ebx,eax
 102badb:	retf   
 102badc:	mov    dl,al
 102bade:	jae    0x102bb05
 102bae0:	mov    edi,0x8b87a2d2
 102bae5:	bound  edi,QWORD PTR [edx]
 102bae7:	push   esi
 102bae8:	push   ebx
 102bae9:	retf   
 102baea:	xor    al,0x60
 102baec:	sbb    cl,BYTE PTR [edx-0x1a]
 102baef:	mov    eax,ds:0x5b7c1712
 102baf4:	sub    eax,0x6e7b844f
 102baf9:	inc    BYTE PTR [esi]
 102bafb:	inc    eax
 102bafc:	shl    BYTE PTR [ecx+0x6b],0x4f
 102bb00:	inc    edx
 102bb01:	jnp    0x102bb6f
 102bb03:	int3   
 102bb04:	mov    edi,0xb01b75d8
 102bb09:	jecxz  0x102bb52
 102bb0b:	fsubp  st(2),st
 102bb0d:	mov    bl,0xa9
 102bb0f:	lods   al,BYTE PTR ds:[esi]
 102bb10:	or     al,al
 102bb12:	sub    al,0x30
 102bb14:	xlat   BYTE PTR ds:[ebx]
 102bb15:	add    bl,BYTE PTR [edx-0x5]
 102bb18:	cmp    BYTE PTR [edx+0xf15f7f6],0x10
 102bb1f:	xor    bl,BYTE PTR [eax+0x2002e21d]
 102bb25:	add    BYTE PTR [ecx-0x74c7ef75],ch
 102bb2b:	outs   dx,BYTE PTR ds:[esi]
 102bb2c:	or     al,0x52
 102bb2e:	clc    
 102bb2f:	enter  0x2b35,0x8c
 102bb33:	xchg   dl,cl
 102bb35:	(bad)  
 102bb36:	in     eax,0x4a
 102bb38:	sahf   
 102bb39:	(bad)  
 102bb3a:	jne    0x102bb93
 102bb3c:	cld    
 102bb3d:	cmp    eax,0x7dd1fe6e
 102bb42:	test   al,0xda
 102bb44:	adc    edi,DWORD PTR [eax]
 102bb46:	imul   ah
 102bb48:	ffreep st(2)
 102bb4a:	int3   
 102bb4b:	repnz aad 0xe8
 102bb4e:	cmc    
 102bb4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102bb50:	xor    DWORD PTR ds:0x98f40fed,edi
 102bb56:	cwde   
 102bb57:	call   0xb7811120
 102bb5c:	push   ds
 102bb5d:	adc    eax,0xd6d89719
 102bb62:	ins    DWORD PTR es:[edi],dx
 102bb63:	test   eax,0xba3d638e
 102bb68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102bb69:	loopne 0x102bb18
 102bb6b:	push   ebp
 102bb6c:	(bad)
 102bb70:	iret   
 102bb71:	fcmovb st,st(7)
 102bb73:	cld    
 102bb74:	fimul  DWORD PTR [ebp+ebp*4-0x4e]
 102bb78:	push   eax
 102bb79:	mov    dl,0x17
 102bb7b:	shr    BYTE PTR [edx],cl
 102bb7d:	sbb    DWORD PTR [ecx+ebp*8],eax
 102bb80:	adc    eax,0xcb28f310
 102bb85:	mov    al,ds:0x7cfd06dc
 102bb8a:	shr    BYTE PTR [ebx+0x7e618100],1
 102bb90:	sbb    al,0xb4
 102bb92:	leave  
 102bb93:	mov    ds:0x88f60017,al
 102bb98:	fsub   QWORD PTR [ebx]
 102bb9a:	push   ss
 102bb9b:	or     cl,BYTE PTR [ecx]
 102bb9d:	shr    BYTE PTR ds:[ecx-0x6c],cl
 102bba1:	adc    al,0x89
 102bba3:	sbb    bl,BYTE PTR [esp+ebp*2]
 102bba6:	push   eax
 102bba7:	add    al,0x52
 102bba9:	and    DWORD PTR [edx+eax*8+0x64],0x1d75561a
 102bbb1:	ret    0xf6ef
 102bbb4:	int    0xb7
 102bbb6:	arpl   di,ax
 102bbb8:	(bad)  
 102bbb9:	cmp    eax,DWORD PTR [ecx]
 102bbbb:	adc    dh,dl
 102bbbd:	enter  0x3ec3,0x36
 102bbc1:	std    
 102bbc2:	dec    ebx
 102bbc3:	loop   0x102bb4f
 102bbc5:	or     BYTE PTR [eax+0x73],dh
 102bbc8:	rcr    ah,0xfe
 102bbcb:	pusha  
 102bbcc:	push   ss
 102bbcd:	imul   esp,DWORD PTR [eax+0x54e8a30e],0x1
 102bbd4:	jae    0x102bbe2
 102bbd6:	jo     0x102bbd6
 102bbd8:	or     eax,0x50173812
 102bbdd:	loope  0x102bc3b
 102bbdf:	jo     0x102bbca
 102bbe1:	xchg   ecx,eax
 102bbe2:	jmp    0x40a2:0xe5c0259
 102bbe9:	(bad)  
 102bbea:	repnz lods eax,DWORD PTR ds:[esi]
 102bbec:	jo     0x102bc4b
 102bbee:	(bad)  
 102bbf0:	imul   eax,DWORD PTR [eax],0x2d
 102bbf3:	aas    
 102bbf4:	out    dx,eax
 102bbf5:	pop    ds
 102bbf6:	retf   0xe473
 102bbf9:	jmp    0x40c4a0bd
 102bbfe:	xor    ebx,DWORD PTR [ebp-0x2ece21c2]
 102bc04:	inc    ecx
 102bc05:	stos   DWORD PTR es:[edi],eax
 102bc06:	in     eax,dx
 102bc07:	push   edi
 102bc08:	ja     0x102bc7c
 102bc0a:	adc    eax,0x12ed2935
 102bc0f:	sub    BYTE PTR [ebp+0x2daa24d7],ah
 102bc15:	pop    esi
 102bc16:	jae    0x102bc34
 102bc18:	jne    0x102bc90
 102bc1a:	or     DWORD PTR [ecx+0x5c],0xffffffa5
 102bc1e:	sub    eax,DWORD PTR [ecx+0x74162a5c]
 102bc24:	fwait
 102bc25:	inc    esi
 102bc26:	gs shl eax,cl
 102bc29:	pop    ecx
 102bc2a:	inc    esp
 102bc2b:	pop    ecx
 102bc2c:	or     eax,0x15f6d5ef
 102bc31:	push   edi
 102bc32:	dec    esi
 102bc33:	(bad)  [eax+0x3d9ccaa3]
 102bc39:	das    
 102bc3a:	xchg   esp,eax
 102bc3b:	addr16 mov esi,0x1e6869
 102bc41:	push   edi
 102bc42:	imul   edx,DWORD PTR es:[eax+0x36],0x34
 102bc47:	shr    BYTE PTR [ebx],cl
 102bc49:	nop
 102bc4a:	jge    0x102bc7f
 102bc4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102bc4d:	jge    0x102bbe0
 102bc4f:	or     al,0x9b
 102bc51:	adc    cl,BYTE PTR [edx]
 102bc53:	(bad)  
 102bc54:	retf   0xfa46
 102bc57:	push   esp
 102bc58:	inc    ebp
 102bc59:	aaa    
 102bc5a:	icebp  
 102bc5b:	push   ebx
 102bc5c:	loopne 0x102bc1f
 102bc5e:	inc    esi
 102bc5f:	mov    BYTE PTR [eax],dh
 102bc61:	adc    dl,BYTE PTR [edx]
 102bc63:	sub    bh,BYTE PTR [ecx-0x78]
 102bc66:	out    dx,eax
 102bc67:	sbb    bh,al
 102bc69:	and    cl,BYTE PTR [ecx]
 102bc6b:	stos   BYTE PTR es:[edi],al
 102bc6c:	or     edi,esi
 102bc6e:	fdivr  st(2),st
 102bc70:	or     eax,0x4f638010
 102bc75:	xchg   edx,eax
 102bc76:	(bad)  
 102bc77:	inc    edi
 102bc79:	ror    BYTE PTR [esi-0xaa81fe5],0x31
 102bc80:	repz mov bl,0x0
 102bc83:	push   0x60
 102bc85:	scas   al,BYTE PTR es:[edi]
 102bc86:	push   cs
 102bc87:	xchg   esi,eax
 102bc88:	jge    0x102bca9
 102bc8a:	loopne 0x102bc36
 102bc8c:	loopne 0x102bc60
 102bc8e:	or     ecx,ebx
 102bc90:	scas   eax,DWORD PTR es:[edi]
 102bc91:	into   
 102bc92:	lock adc ebx,DWORD PTR [esi+eax*8+0x2f]
 102bc97:	test   BYTE PTR [esi+0x7d73e130],0xa9
 102bc9e:	xor    bl,BYTE PTR [ebp-0x76]
 102bca1:	and    bh,BYTE PTR [ebp-0x1b3996fb]
 102bca7:	sub    eax,esp
 102bca9:	scas   al,BYTE PTR es:[edi]
 102bcaa:	push   cs
 102bcab:	mov    ebx,0xab217d0e
 102bcb0:	idiv   BYTE PTR [eax]
 102bcb2:	mov    dh,0xdd
 102bcb4:	jns    0x102bce3
 102bcb6:	mov    dh,0xdf
 102bcb8:	cmc    
 102bcb9:	cmp    eax,0xf9ac2b4
 102bcbe:	out    0x5c,eax
 102bcc0:	mov    al,0xfa
 102bcc2:	dec    esi
 102bcc3:	daa    
 102bcc4:	ja     0x102bc66
 102bcc6:	mov    ch,BYTE PTR [edi-0x60]
 102bcc9:	and    edx,esi
 102bccb:	cmp    al,0x6
 102bccd:	daa    
 102bcce:	popf   
 102bccf:	stc    
 102bcd0:	repz call 0x8114f603
 102bcd6:	inc    ebx
 102bcd7:	adc    eax,0x392c9c3c
 102bcdc:	or     esi,esp
 102bcde:	and    BYTE PTR [esi-0x1fa692a9],0x47
 102bce5:	or     DWORD PTR [esi-0x17aa746b],0x394879d0
 102bcef:	nop
 102bcf0:	jecxz  0x102bd43
 102bcf2:	xchg   esi,eax
 102bcf3:	add    eax,0x619bba00
 102bcf8:	stc    
 102bcf9:	xor    eax,0xee86d074
 102bcfe:	adc    cl,dl
 102bd00:	rol    BYTE PTR [esi],1
 102bd02:	add    DWORD PTR [ebx-0x3cf2eb2b],esp
 102bd08:	jb     0x102bce3
 102bd0a:	aam    0x2f
 102bd0c:	xchg   ebx,eax
 102bd0d:	xchg   ebp,eax
 102bd0e:	scas   al,BYTE PTR es:[edi]
 102bd0f:	sub    al,0xb1
 102bd11:	push   0x4635a2b4
 102bd16:	and    DWORD PTR ds:0x59f288d3,edi
 102bd1c:	aas    
 102bd1d:	adc    DWORD PTR [ebp+0x82e5b1a],0x141a2f89
 102bd27:	into   
 102bd28:	(bad)  
 102bd29:	sti    
 102bd2a:	outs   dx,DWORD PTR ds:[esi]
 102bd2b:	les    ecx,FWORD PTR [esi-0x7dffe453]
 102bd31:	mov    cl,0xfe
 102bd33:	call   FWORD PTR [esp+esi*4-0x5218c2ba]
 102bd3a:	aas    
 102bd3b:	push   ebp
 102bd3c:	shr    BYTE PTR [ebp+eax*1-0x4c],0x66
 102bd41:	std    
 102bd42:	das    
 102bd43:	enter  0xe1ec,0xf
 102bd47:	xchg   ebp,eax
 102bd48:	push   esp
 102bd49:	inc    ecx
 102bd4a:	pavgb  mm2,QWORD PTR [ecx]
 102bd4d:	ret    0x7c79
 102bd50:	and    DWORD PTR [ebp+0x4bbf6e78],edi
 102bd56:	retf   
 102bd57:	sub    al,0x2d
 102bd59:	jp     0x102bdbf
 102bd5b:	clc    
 102bd5c:	clc    
 102bd5d:	pop    eax
 102bd5e:	call   0x601d:0xda40a0c3
 102bd65:	(bad)  [edi]
 102bd67:	lock fdiv DWORD PTR [ebx-0xf7ef8b2]
 102bd6e:	lods   eax,DWORD PTR ds:[esi]
 102bd6f:	scas   eax,DWORD PTR es:[edi]
 102bd70:	cld    
 102bd71:	or     BYTE PTR [ebx+edx*1-0x4],dl
 102bd75:	scas   al,BYTE PTR es:[edi]
 102bd76:	dec    esi
 102bd77:	mov    ah,bl
 102bd79:	cmp    al,BYTE PTR [edi-0x1c401176]
 102bd7f:	pop    es
 102bd80:	mov    eax,0xe3cfeaf1
 102bd85:	pop    ss
 102bd86:	pop    edi
 102bd87:	repnz pop esi
 102bd89:	int3   
 102bd8a:	sub    al,0x3f
 102bd8c:	sbb    al,BYTE PTR [eax+0x30543cd8]
 102bd92:	mov    bl,0xa5
 102bd94:	sbb    DWORD PTR [esi+0x0],0x1a087c7a
 102bd9b:	lods   al,BYTE PTR ds:[esi]
 102bd9c:	dec    esi
 102bd9d:	(bad)  
 102bd9e:	mov    bl,0xec
 102bda0:	fwait
 102bda1:	cmp    al,0x6c
 102bda3:	mov    ch,0x95
 102bda5:	mov    esp,0x2b8f9894
 102bdaa:	retf   
 102bdab:	add    BYTE PTR [eax-0x68ef7cf4],dl
 102bdb1:	(bad)  
 102bdb2:	ins    BYTE PTR es:[edi],dx
 102bdb3:	pop    es
 102bdb4:	inc    ecx
 102bdb5:	inc    ebx
 102bdb6:	cli    
 102bdb7:	cmp    dh,BYTE PTR [eax-0x16ca7749]
 102bdbd:	mov    ah,BYTE PTR [ebx+eax*8-0x3d]
 102bdc1:	xchg   ebp,eax
 102bdc2:	jae    0x102bda9
 102bdc4:	aad    0x57
 102bdc6:	loope  0x102bdb2
 102bdc8:	jmp    0x102bda0
 102bdca:	jecxz  0x102be13
 102bdcc:	mov    bh,0xdc
 102bdce:	mov    WORD PTR [ebx+0x4f],ss
 102bdd1:	pop    edx
 102bdd2:	mov    esp,DWORD PTR [edi]
 102bdd4:	pushf  
 102bdd5:	jne    0x102bde5
 102bdd7:	sahf   
 102bdd8:	adc    al,0x36
 102bdda:	add    ah,BYTE PTR [ebp-0x45]
 102bddd:	scas   al,BYTE PTR es:[edi]
 102bdde:	add    al,0x18
 102bde0:	in     eax,dx
 102bde1:	dec    edx
 102bde2:	aas    
 102bde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102bde4:	sub    al,0xc4
 102bde6:	mov    ch,0x13
 102bde8:	and    DWORD PTR [edx+0x2d307147],0x27d442c0
 102bdf2:	lods   al,BYTE PTR ds:[esi]
 102bdf3:	jl     0x102be4a
 102bdf5:	adc    esp,ecx
 102bdf7:	out    dx,al
 102bdf8:	pop    ds
 102bdf9:	pop    ebp
 102bdfa:	add    DWORD PTR [eax+0x1e63c270],eax
 102be00:	xchg   ebp,eax
 102be01:	lods   al,BYTE PTR ds:[esi]
 102be02:	inc    ebx
 102be04:	xlat   BYTE PTR ds:[ebx]
 102be05:	add    edi,DWORD PTR [ebx]
 102be07:	scas   al,BYTE PTR es:[edi]
 102be08:	dec    edi
 102be09:	and    eax,0xe577916e
 102be0e:	mov    ecx,0x5bc3f616
 102be13:	jle    0x102be6c
 102be15:	pop    es
 102be16:	xlat   BYTE PTR ds:[ebx]
 102be17:	lahf   
 102be18:	mov    edi,0xc27157b3
 102be1d:	jns    0x102bda5
 102be1f:	jae    0x102be02
 102be21:	xchg   BYTE PTR [edi+0x6240e503],ah
 102be27:	(bad)  
 102be28:	js     0x102be52
 102be2a:	jo     0x102be99
 102be2c:	xor    eax,0x2210a866
 102be31:	(bad)  
 102be32:	out    dx,eax
 102be33:	add    al,0xee
 102be35:	fisttp DWORD PTR [ecx]
 102be37:	int3   
 102be38:	out    dx,al
 102be39:	(bad)  
 102be3a:	pop    eax
 102be3b:	cmp    eax,0xf99dc787
 102be40:	cmp    BYTE PTR [esi+edi*4-0x5f430312],bl
 102be47:	xchg   DWORD PTR [eax+0x63f5dd36],ecx
 102be4d:	pop    esp
 102be4e:	stc    
 102be4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102be50:	imul   esi,DWORD PTR [ecx+0x6c56c371],0xffffffba
 102be57:	out    dx,eax
 102be58:	push   cs
 102be59:	je     0x102be71
 102be5b:	sub    eax,0x813578c7
 102be60:	or     al,BYTE PTR [ebp+0x101b02f3]
 102be66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102be67:	ficomp DWORD PTR [ebp-0x41]
 102be6a:	retf   0x1a6f
 102be6d:	lods   al,BYTE PTR ds:[esi]
 102be6e:	dec    ebp
 102be6f:	jno    0x102bed1
 102be71:	cwde   
 102be72:	jne    0x102be9e
 102be74:	inc    edi
 102be75:	xor    esp,DWORD PTR [esi]
 102be77:	pop    ebx
 102be78:	lods   eax,DWORD PTR ds:[esi]
 102be79:	cmp    edx,DWORD PTR [eax]
 102be7b:	jp     0x102be36
 102be7d:	hlt    
 102be7e:	sub    ebx,DWORD PTR [ecx]
 102be80:	int    0xbc
 102be82:	xchg   esp,eax
 102be83:	add    ecx,edx
 102be85:	shl    BYTE PTR [esi-0x108920fd],1
 102be8b:	xor    DWORD PTR [edi-0x1386e0fd],0xb2fa7829
 102be95:	ret    0xe076
 102be98:	daa    
 102be99:	lods   al,BYTE PTR ds:[esi]
 102be9a:	dec    ebx
 102be9b:	adc    eax,0x3c347d6
 102bea0:	loop   0x102be7c
 102bea2:	push   esi
 102bea3:	stos   BYTE PTR es:[edi],al
 102bea4:	lods   al,BYTE PTR ds:[esi]
 102bea5:	js     0x102be8f
 102bea7:	mov    eax,0x973f3e32
 102beac:	add    edi,DWORD PTR [edx+0x52]
 102beaf:	mov    ebx,0x4b3e81db
 102beb4:	inc    esp
 102beb5:	shl    dh,0xbb
 102beb8:	(bad)  
 102beb9:	sbb    eax,0x36cf77b
 102bebe:	add    DWORD PTR [eax],edi
 102bec0:	outs   dx,BYTE PTR ds:[esi]
 102bec1:	in     eax,dx
 102bec2:	sub    ecx,ebp
 102bec4:	in     eax,0xbd
 102bec6:	jg     0x102be6f
 102bec8:	jae    0x102be65
 102beca:	add    edi,esp
 102becc:	push   0x5c8570bf
 102bed1:	sbb    eax,0x542cc1f4
 102bed6:	mov    eax,ds:0x42c2f1e3
 102bedb:	fisub  DWORD PTR [edx+0x248daee5]
 102bee1:	adc    dl,BYTE PTR [edi+ecx*4+0x55]
 102bee5:	cli    
 102bee6:	mov    eax,0xaab4bbc
 102beeb:	xchg   esi,eax
 102beec:	sahf   
 102beed:	ror    DWORD PTR [eax+0x2566f65f],cl
 102bef3:	inc    edx
 102bef4:	shr    ah,0x43
 102bef7:	shr    dh,0x1f
 102befa:	arpl   WORD PTR [esp+eax*1],cx
 102befd:	in     al,dx
 102befe:	(bad)  
 102beff:	ja     0x102bf5e
 102bf01:	dec    eax
 102bf02:	dec    ecx
 102bf03:	pop    es
 102bf04:	jne    0x102bedc
 102bf06:	jnp    0x102be89
 102bf08:	mov    ?,WORD PTR [esi+edi*1-0x30]
 102bf0c:	pop    ecx
 102bf0d:	test   DWORD PTR ds:0xf86e3600,edx
 102bf13:	xor    al,BYTE PTR [eax]
 102bf15:	pusha  
 102bf16:	call   FWORD PTR [eax+esi*4]
 102bf19:	addr16 out dx,eax
 102bf1b:	push   ds
 102bf1c:	das    
 102bf1d:	dec    edi
 102bf1e:	arpl   bx,sp
 102bf20:	mov    cl,0xba
 102bf22:	bound  ebx,QWORD PTR [ebx+0x5e383c16]
 102bf28:	fbld   TBYTE PTR [esi+esi*1+0x5130898d]
 102bf2f:	stc    
 102bf30:	pop    ebx
 102bf31:	xor    ebp,DWORD PTR [esi]
 102bf33:	stos   DWORD PTR es:[edi],eax
 102bf34:	int3   
 102bf35:	cmp    al,0x8f
 102bf37:	dec    ecx
 102bf38:	cwde   
 102bf39:	not    BYTE PTR [esi-0x37a33965]
 102bf3f:	cmp    ebx,DWORD PTR [edx]
 102bf41:	mov    ds:0xe0a7ca7e,eax
 102bf46:	lods   eax,DWORD PTR ds:[esi]
 102bf47:	dec    edx
 102bf48:	out    dx,eax
 102bf49:	jb     0x102bf9b
 102bf4b:	mov    ah,0xe0
 102bf4d:	mov    dh,0x3
 102bf4f:	jg     0x102bf38
 102bf51:	fisubr DWORD PTR [ebx-0x4]
 102bf54:	jns    0x102bf56
 102bf56:	add    eax,0x980aa75
 102bf5b:	push   ecx
 102bf5c:	cdq    
 102bf5d:	inc    edx
 102bf5e:	out    dx,al
 102bf5f:	mov    ecx,0x2fc4c9e1
 102bf64:	push   0x67
 102bf66:	es fld1 
 102bf69:	ret    0xb0c3
 102bf6c:	push   ss
 102bf6d:	fimul  WORD PTR es:[edx-0x3b]
 102bf71:	add    al,0xc2
 102bf73:	jge    0x102bf2c
 102bf75:	pop    ebp
 102bf76:	or     DWORD PTR [eax],edx
 102bf78:	jo     0x102bf64
 102bf7a:	sbb    DWORD PTR [edi+0x24],esp
 102bf7d:	or     esi,DWORD PTR [esi-0x9fa503]
 102bf83:	add    edi,DWORD PTR [edx]
 102bf85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102bf86:	sbb    eax,0x5ae7950d
 102bf8b:	inc    edi
 102bf8c:	mov    bh,0x9e
 102bf8e:	xor    edx,DWORD PTR [eax+0x3aeb871c]
 102bf94:	fcom   QWORD PTR [edi-0x10]
 102bf97:	retf   0x25a4
 102bf9a:	xor    al,0x56
 102bf9c:	pop    esp
 102bf9d:	aas    
 102bf9e:	add    BYTE PTR [ebx-0xbe00c71],dl
 102bfa4:	test   al,0xd9
 102bfa6:	in     al,0x99
 102bfa8:	or     ah,BYTE PTR [ecx-0x71]
 102bfab:	bound  ecx,QWORD PTR [esi]
 102bfad:	pop    esi
 102bfae:	sbb    ebp,ecx
 102bfb0:	ds or  al,0xec
 102bfb3:	clc    
 102bfb4:	inc    ecx
 102bfb5:	pop    esi
 102bfb6:	sbb    DWORD PTR [ecx-0x38ef142d],0xdcf9ec22
 102bfc0:	xchg   esi,eax
 102bfc1:	stos   BYTE PTR es:[edi],al
 102bfc2:	imul   esp,eax,0x9d00b7c4
 102bfc8:	push   ebp
 102bfc9:	rcr    ah,0x6e
 102bfcc:	jl     0x102bfb0
 102bfce:	fnstsw WORD PTR [edi+0xd]
 102bfd1:	add    BYTE PTR [eax-0x39c381a6],bl
 102bfd7:	jp     0x102c004
 102bfd9:	xor    BYTE PTR [edi-0x43dbe981],dh
 102bfdf:	sbb    eax,0xf05e9235
 102bfe4:	mov    bl,0x15
 102bfe6:	mov    BYTE PTR [ebp+eax*8+0x54ffa56],al
 102bfed:	push   ss
 102bfee:	popa   
 102bfef:	inc    ebp
 102bff0:	mov    ch,0xa8
 102bff2:	xor    BYTE PTR [edi+ebx*2-0x3b5b79b5],ch
 102bff9:	xchg   edi,eax
 102bffa:	mov    WORD PTR [edx],gs
 102bffc:	jns    0x102c032
 102bffe:	inc    edx
 102bfff:	retf   0x69cd
 102c002:	hlt    
 102c003:	(bad)
 102c006:	shr    DWORD PTR [ebp+0x7],0xbe
 102c00a:	shr    DWORD PTR [esi+0x7],1
 102c00d:	inc    esi
 102c00e:	(bad)  
 102c00f:	xchg   dl,bh
 102c011:	cdq    
 102c012:	jo     0x102bfd7
 102c014:	bound  edi,QWORD PTR [ebp-0x1db0316d]
 102c01a:	push   ebp
 102c01b:	xchg   BYTE PTR [ecx+0x6b],dl
 102c01e:	cmovl  edi,DWORD PTR [ecx-0x75]
 102c022:	mov    dl,0xc7
 102c024:	cmovne esi,DWORD PTR [edi+0x64]
 102c028:	rcr    DWORD PTR [ebp-0x1],cl
 102c02b:	mov    ?,WORD PTR [ebp-0x45]
 102c02e:	mov    bh,0x3
 102c030:	and    BYTE PTR [esp+ebx*2-0x427ac54b],ch
 102c037:	push   ebx
 102c039:	es inc ecx
 102c03b:	arpl   cx,cx
 102c03d:	and    ebp,edi
 102c03f:	in     al,0xad
 102c041:	out    dx,eax
 102c042:	pushf  
 102c043:	nop
 102c044:	or     ah,BYTE PTR cs:[eax+0x7aeec4b5]
 102c04b:	lea    esp,[eax]
 102c04d:	jne    0x102c0c4
 102c04f:	mov    dl,0xea
 102c051:	dec    edx
 102c052:	cmp    BYTE PTR [ebx],cl
 102c054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102c055:	cmp    eax,edx
 102c057:	ret    0x1e79
 102c05a:	sub    ecx,eax
 102c05c:	adc    al,0x50
 102c05e:	and    DWORD PTR ds:0xcb190839,edi
 102c064:	push   ecx
 102c065:	inc    ebx
 102c066:	mov    eax,ds:0xe3832a47
 102c06b:	pop    edi
 102c06c:	sbb    eax,ecx
 102c06e:	inc    DWORD PTR [ebp+0xf187d8f]
 102c074:	ins    DWORD PTR es:[edi],dx
 102c075:	fisttp WORD PTR [ebp+0x5583ac6a]
 102c07b:	out    0xfe,eax
 102c07d:	data16 jns 0x102c003
 102c080:	adc    bh,bl
 102c082:	fidivr DWORD PTR fs:[esi]
 102c085:	test   DWORD PTR [edx],0x3463adb9
 102c08b:	adc    DWORD PTR [edi-0x52],eax
 102c08e:	retf   
 102c08f:	push   edi
 102c090:	aad    0x62
 102c092:	mov    ebx,0xb2b9d282
 102c097:	add    ah,BYTE PTR [esi]
 102c099:	fcmovu st,st(2)
 102c09b:	repnz adc eax,0x92ea8683
 102c0a1:	xchg   DWORD PTR [edx-0x1b6bea8e],ecx
 102c0a7:	push   0xffffff90
 102c0a9:	mov    ah,0xe0
 102c0ab:	mov    dh,0x3
 102c0ad:	lahf   
 102c0ae:	jp     0x102c102
 102c0b0:	clc    
 102c0b1:	cmp    dh,BYTE PTR [eax+0x53]
 102c0b4:	add    edx,DWORD PTR ds:0xc6100d48
 102c0ba:	xchg   DWORD PTR [edx],ebp
 102c0bc:	jp     0x102c13a
 102c0be:	data16 aaa 
 102c0c0:	push   cs
 102c0c1:	icebp  
 102c0c2:	ret    0x5714
 102c0c5:	mov    BYTE PTR [edi+0x2119e35],dl
 102c0cb:	stos   BYTE PTR es:[edi],al
 102c0cc:	mov    ebp,0x4e1027f5
 102c0d1:	cmp    DWORD PTR [eax-0x7736980b],edx
 102c0d7:	add    edi,DWORD PTR [ebx+0x2]
 102c0da:	loopne 0x102c0b5
 102c0dc:	jl     0x102c071
 102c0de:	xor    DWORD PTR [ebp-0x14],eax
 102c0e1:	and    DWORD PTR [esp-0x80],edx
 102c0e5:	and    eax,0x2dc12b01
 102c0ea:	add    esi,ecx
 102c0ec:	jmp    0x2a4438a4
 102c0f1:	jge    0x102c0e1
 102c0f3:	adc    cl,al
 102c0f5:	xor    BYTE PTR [ecx+0x25],dh
 102c0f8:	popa   
 102c0f9:	lods   eax,DWORD PTR ds:[esi]
 102c0fa:	jecxz  0x102c127
 102c0fc:	inc    esi
 102c0fd:	add    DWORD PTR [edi+0x52ac5994],edi
 102c103:	in     al,0xfc
 102c105:	fs cli 
 102c107:	dec    esp
 102c108:	(bad)  
 102c109:	mov    ebp,0x2e1f1fd2
 102c10e:	mov    cs,WORD PTR [esi]
 102c110:	scas   eax,DWORD PTR es:[edi]
 102c111:	(bad)  
 102c112:	cmp    bl,BYTE PTR [eax-0xb]
 102c115:	test   BYTE PTR [edi],dl
 102c117:	pusha  
 102c118:	mov    ds:0x899d08bb,al
 102c11d:	or     DWORD PTR [edi+0x52d5b8a4],edi
 102c123:	aad    0x25
 102c125:	jg     0x102c0b2
 102c127:	in     eax,dx
 102c128:	into   
 102c129:	push   ebp
 102c12a:	push   0xffffffe3
 102c12c:	enter  0xb0ea,0xaf
 102c130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102c131:	and    dl,BYTE PTR [ecx+0x659d26c0]
 102c137:	hlt    
 102c138:	and    cl,BYTE PTR [ebp+0x7e]
 102c13b:	icebp  
 102c13c:	jge    0x102c0bf
 102c13e:	and    DWORD PTR [ecx+0x72ae394c],edi
 102c144:	sub    al,0x84
 102c146:	sub    edx,ebp
 102c148:	jmp    0x7c0e:0xdb82d27c
 102c14f:	ficomp WORD PTR [ecx-0x19]
 102c152:	in     al,0x1a
 102c154:	pop    edx
 102c155:	push   0xffffffe7
 102c157:	lock into 
 102c159:	mov    edi,ebx
 102c15b:	ins    BYTE PTR es:[edi],dx
 102c15c:	mov    al,ds:0x76c75cc6
 102c161:	mov    bh,0x26
 102c163:	cmp    eax,0x45cab5c4
 102c168:	and    eax,0x2d01227
 102c16d:	inc    edi
 102c16e:	mov    eax,0x63af96e7
 102c173:	fistp  WORD PTR [esi-0x405eff13]
 102c179:	cmc    
 102c17a:	(bad)
 102c17e:	inc    eax
 102c17f:	sbb    al,0xe8
 102c181:	arpl   ax,dx
 102c183:	inc    ebp
 102c184:	jae    0x102c1ac
 102c186:	ret    
 102c187:	dec    ebx
 102c188:	inc    ebp
 102c189:	adc    BYTE PTR [eax+0x6a4445e4],bl
 102c18f:	fs pop edi
 102c191:	sub    al,0x1
 102c193:	into   
 102c194:	int3   
 102c195:	pop    ebp
 102c196:	sub    DWORD PTR [ebp+0x12b25502],ebp
 102c19c:	mov    WORD PTR [ecx],gs
 102c19e:	jecxz  0x102c207
 102c1a0:	adc    DWORD PTR ds:0x31a04e7c,edi
 102c1a6:	mov    ch,0x25
 102c1a8:	lock das 
 102c1aa:	neg    bh
 102c1ac:	jle    0x102c192
 102c1ae:	mov    ds:0xeb1abc3,eax
 102c1b3:	push   esi
 102c1b4:	popf   
 102c1b5:	test   DWORD PTR [edx],0x8358accc
 102c1bb:	out    dx,al
 102c1bc:	push   esp
 102c1bd:	pop    ss
 102c1be:	xchg   ebx,eax
 102c1bf:	loope  0x102c214
 102c1c1:	popa   
 102c1c2:	xchg   ebp,eax
 102c1c3:	stos   DWORD PTR es:[edi],eax
 102c1c4:	push   eax
 102c1c5:	mov    DWORD PTR [ebx],esp
 102c1c7:	les    edx,FWORD PTR [edx*4-0x70626be6]
 102c1ce:	push   es
 102c1cf:	ss leave 
 102c1d1:	xchg   BYTE PTR [edi],dh
 102c1d3:	push   ss
 102c1d4:	fisttp QWORD PTR [ecx+0x52f411b8]
 102c1da:	imul   edx,DWORD PTR [edx+ebp*4],0x5f2526ca
 102c1e1:	sub    BYTE PTR [edi],ch
 102c1e3:	inc    esp
 102c1e4:	jmp    0x3400:0x6c4a7ee0
 102c1eb:	xchg   esp,eax
 102c1ec:	in     eax,dx
 102c1ed:	rcl    BYTE PTR [edi],0x5d
 102c1f0:	cli    
 102c1f1:	push   ecx
 102c1f2:	jp     0x102c1cf
 102c1f4:	pop    ds
 102c1f5:	mov    esp,0x1d5cf518
 102c1fa:	sbb    ecx,DWORD PTR [edx-0xefda41b]
 102c200:	pop    ebx
 102c201:	xlat   BYTE PTR ds:[ebx]
 102c202:	pop    esp
 102c203:	(bad)  
 102c204:	out    dx,eax
 102c205:	pop    esi
 102c206:	mov    bh,0x1e
 102c208:	aaa    
 102c209:	fsubp  st(2),st
 102c20b:	mov    edi,0x59de7c0e
 102c210:	out    0xe0,eax
 102c212:	dec    ecx
 102c213:	popa   
 102c214:	cmp    esi,DWORD PTR [eax-0x4f]
 102c217:	mov    ds:0xdda54243,al
 102c21c:	jle    0x102c1af
 102c21e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
 102c220:	sbb    ecx,edi
 102c222:	sub    BYTE PTR ds:0xb447d67f,0x16
 102c229:	inc    ebx
 102c22a:	mov    ecx,0xf83d2604
 102c22f:	cld    
 102c230:	imul   ebp
 102c232:	fisttp DWORD PTR [ebp+0x3d61bcd]
 102c238:	add    al,0x3c
 102c23a:	dec    BYTE PTR [ecx-0x4014dbe9]
 102c240:	jmp    0xa802224f
 102c245:	add    bl,bh
 102c247:	inc    esi
 102c248:	dec    edx
 102c249:	xor    ch,BYTE PTR [ebx]
 102c24b:	int3   
 102c24c:	xchg   edx,eax
 102c24d:	imul   eax,DWORD PTR [eax-0x3c],0xffffffd7
 102c251:	jb     0x102c1f1
 102c253:	aas    
 102c254:	mov    es,WORD PTR ds:0x2d204504
 102c25a:	xor    dh,BYTE PTR [ebx]
 102c25c:	cwde   
 102c25d:	lods   eax,DWORD PTR ds:[esi]
 102c25e:	mov    al,ds:0xa5200991
 102c263:	pop    ecx
 102c264:	ret    
 102c265:	mov    eax,0xab5f92ff
 102c26a:	xor    al,0x98
 102c26c:	mov    DWORD PTR [edx+0x7e],0xf0e005dc
 102c273:	stos   DWORD PTR es:[edi],eax
 102c274:	jle    0x102c2b5
 102c276:	sbb    BYTE PTR [edi+0x1e],0x1d
 102c27a:	jle    0x102c248
 102c27c:	cdq    
 102c27d:	iret   
 102c27e:	inc    ebp
 102c27f:	outs   dx,DWORD PTR ds:[esi]
 102c280:	lds    ebp,FWORD PTR [edx+0x7f]
 102c283:	xchg   al,ah
 102c285:	je     0x102c296
 102c287:	fucomp st(1)
 102c289:	sub    DWORD PTR [edi+eax*8+0x228317fc],esi
 102c290:	sbb    BYTE PTR [ebp+0x68f5b49e],ah
 102c296:	inc    eax
 102c297:	test   DWORD PTR gs:[edx],esi
 102c29a:	pop    ebx
 102c29b:	fsub   DWORD PTR [ebx+0x2c]
 102c29e:	mov    ebp,0xcdd21eaa
 102c2a3:	scas   eax,DWORD PTR es:[edi]
 102c2a4:	push   es
 102c2a5:	pop    ss
 102c2a6:	ins    DWORD PTR es:[edi],dx
 102c2a7:	mov    edx,0x165ed79
 102c2ac:	aam    0xd1
 102c2ae:	jae    0x102c2ac
 102c2b0:	dec    esp
 102c2b1:	repnz cmp BYTE PTR [ebp*1+0x75b430],al
 102c2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102c2ba:	in     eax,dx
 102c2bb:	rcl    dl,0x83
 102c2be:	push   es
 102c2bf:	ret    0xe076
 102c2c2:	jne    0x102c2db
 102c2c4:	push   0x3d428ecb
 102c2c9:	dec    ecx
 102c2ca:	lods   eax,DWORD PTR ds:[esi]
 102c2cb:	outs   dx,DWORD PTR ds:[esi]
 102c2cc:	jge    0x102c303
 102c2ce:	sbb    eax,DWORD PTR [ecx+0x56]
 102c2d1:	mov    edx,0x33e490c9
 102c2d6:	xchg   esp,eax
 102c2d7:	sbb    ebx,DWORD PTR [edx]
 102c2d9:	and    cl,BYTE PTR [edx+eiz*8-0x28ac1ba7]
 102c2e0:	test   bl,bh
 102c2e2:	outs   dx,DWORD PTR ds:[esi]
 102c2e3:	mov    edi,0x3df31c3a
 102c2e8:	mov    DWORD PTR [ebp-0x35],eax
 102c2eb:	push   edi
 102c2ec:	test   BYTE PTR [edi],dl
 102c2ee:	jnp    0x102c270
 102c2f0:	pop    es
 102c2f1:	scas   eax,DWORD PTR es:[edi]
 102c2f2:	sub    BYTE PTR [edi],ah
 102c2f4:	enter  0xe592,0x82
 102c2f8:	add    eax,0xfa9f839f
 102c2fd:	add    eax,DWORD PTR [ebp+0x319141e9]
 102c303:	not    DWORD PTR [edi-0x75dcd12c]
 102c309:	dec    ecx
 102c30a:	add    DWORD PTR [edi],0xf85ce6e0
 102c310:	bound  ebp,QWORD PTR [edi+0x123988a9]
 102c316:	push   ebx
 102c317:	xor    DWORD PTR [esi+0x192b90d2],0xffffffee
 102c31e:	pop    esi
 102c31f:	adc    BYTE PTR [ebx+0x2db3465b],al
 102c325:	push   edi
 102c326:	and    DWORD PTR [esi-0x69654f9b],ebp
 102c32c:	imul   edx,ebp,0xfec5812b
 102c332:	pusha  
 102c333:	push   edi
 102c334:	jns    0x102c3aa
 102c336:	clc    
 102c337:	xchg   ecx,eax
 102c338:	(bad)  
 102c339:	jge    0x102c351
 102c33b:	push   ss
 102c33c:	sbb    eax,0xddba3275
 102c341:	sub    esp,ecx
 102c343:	dec    esp
 102c344:	sti    
 102c345:	rol    DWORD PTR [ebx-0x2dd83839],cl
 102c34b:	add    DWORD PTR [edx+0x7ca292d6],esp
 102c351:	or     eax,0x1df1bcf3
 102c356:	push   edi
 102c357:	popa   
 102c358:	or     BYTE PTR [eax+0x5a],bl
 102c35b:	neg    DWORD PTR [edi-0x58]
 102c35e:	popf   
 102c35f:	je     0x102c384
 102c361:	fs mov dl,0x89
 102c364:	xchg   esp,eax
 102c365:	int3   
 102c366:	push   edx
 102c367:	cdq    
 102c368:	pop    ds
 102c369:	jne    0x102c3aa
 102c36b:	loopne 0x102c3ab
 102c36d:	rcl    al,0xb6
 102c370:	add    eax,edi
 102c372:	imul   edx,DWORD PTR [edx],0x5104b721
 102c378:	stc    
 102c379:	test   edi,ebx
 102c37b:	test   al,0x89
 102c37d:	ins    DWORD PTR es:[edi],dx
 102c37e:	jp     0x102c3b1
 102c380:	xor    ah,dl
 102c382:	in     al,dx
 102c383:	pop    eax
 102c384:	int3   
 102c385:	inc    edi
 102c386:	and    al,0x93
 102c388:	push   ebp
 102c389:	mov    esi,0x59e6fd34
 102c38e:	xor    DWORD PTR [ecx+ebp*4+0x28],ebx
 102c392:	push   es
 102c393:	pop    ebx
 102c394:	add    al,0x60
 102c396:	(bad)  
 102c397:	(bad)  
 102c398:	fnstsw WORD PTR [eax-0x10]
 102c39b:	cs das 
 102c39d:	aam    0xa7
 102c39f:	pushf  
 102c3a0:	jno    0x102c3e8
 102c3a2:	or     bh,bl
 102c3a4:	loopne 0x102c3dd
 102c3a6:	cmp    DWORD PTR [ecx+0x5090d9d],0xcc01aee9
 102c3b0:	push   es
 102c3b1:	dec    ebx
 102c3b2:	jmp    0xc21784af
 102c3b7:	pusha  
 102c3b8:	or     edi,DWORD PTR [edx-0x50]
 102c3bb:	les    edx,FWORD PTR [edx+0x7f090a5a]
 102c3c1:	mov    ds:0x57b83870,al
 102c3c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102c3c7:	push   ecx
 102c3c8:	and    bh,BYTE PTR [esi]
 102c3ca:	arpl   WORD PTR [ecx+ebp*4+0x2f34be16],ax
 102c3d1:	cmp    dl,ah
 102c3d3:	hlt    
 102c3d4:	mov    edx,DWORD PTR [ebx]
 102c3d6:	lock ins BYTE PTR es:[edi],dx
 102c3d8:	jmp    0x7030bbe2
 102c3dd:	or     eax,0xd8f95fe0
 102c3e2:	addr16 popa 
 102c3e4:	(bad)  [ecx]
 102c3e6:	addr16 jnp 0x102c3d9
 102c3e9:	iret   
 102c3ea:	int3   
 102c3eb:	mov    al,ds:0xf4fed3b
 102c3f0:	outs   dx,BYTE PTR ds:[esi]
 102c3f1:	mov    bh,0xda
 102c3f3:	jo     0x102c376
 102c3f5:	xchg   DWORD PTR [eax+0x7d],ebp
 102c3f8:	or     ecx,DWORD PTR [eax+0x4843e7b4]
 102c3fe:	and    eax,0xd2cab7cd
 102c403:	or     dl,bl
 102c405:	push   ds
 102c406:	outs   dx,DWORD PTR ds:[esi]
 102c407:	or     ebp,eax
 102c409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102c40a:	push   edx
 102c40b:	pop    esp
 102c40c:	jae    0x102c47b
 102c40e:	gs xchg edx,eax
 102c410:	cmp    eax,0xb494d295
 102c415:	pusha  
 102c416:	sub    eax,0x9a307ba5
 102c41b:	ins    BYTE PTR es:[edi],dx
 102c41c:	sahf   
 102c41d:	push   0xa4000a38
 102c422:	push   cs
 102c423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102c424:	sub    DWORD PTR [esi-0x53059727],edx
 102c42a:	fld    QWORD PTR [ebp-0x73dbde8f]
 102c430:	xor    al,0x55
 102c432:	test   al,0x6a
 102c434:	inc    esp
 102c435:	push   0xcd23b5f9
 102c43a:	inc    ebp
 102c43b:	mov    ebp,0x253de640
 102c440:	adc    ecx,0xf086aeb
 102c446:	fdiv   QWORD PTR [ecx+0x35]
 102c449:	out    0xf6,al
 102c44b:	out    dx,eax
 102c44c:	inc    ebp
 102c44d:	addr16 mov dl,0xab
 102c450:	lods   al,BYTE PTR ds:[esi]
 102c451:	mov    edi,0xa5cbf07b
 102c456:	xchg   edx,eax
 102c457:	xchg   BYTE PTR [eax+0x1fc44e6c],bh
 102c45d:	push   ebx
 102c45e:	or     eax,0xcf2755a0
 102c463:	and    dh,cl
 102c465:	adc    cl,BYTE PTR [eax]
 102c467:	mov    bl,0x15
 102c469:	out    0x52,eax
 102c46b:	popf   
 102c46c:	pop    esi
 102c46d:	and    eax,ecx
 102c46f:	retf   0x12a9
 102c472:	xchg   ebp,eax
 102c473:	push   ecx
 102c474:	jmp    0xf3a1:0xa9c42284
 102c47b:	fldcw  WORD PTR cs:[ebx]
 102c47e:	xchg   BYTE PTR gs:[ebx+0x1fc15842],ch
 102c485:	nop
 102c486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102c487:	in     al,dx
 102c488:	mov    eax,0xfe5a3557
 102c48d:	adc    eax,0xa98d9c27
 102c492:	scas   al,BYTE PTR es:[edi]
 102c493:	call   FWORD PTR [eax+ebx*2+0x77]
 102c497:	push   0x1a
 102c499:	xchg   ebx,eax
 102c49a:	xchg   ebx,eax
 102c49b:	out    0xe8,al
 102c49d:	lock xchg edx,eax
 102c49f:	xor    ah,BYTE PTR [edi+0x0]
 102c4a2:	dec    ebx
 102c4a3:	dec    ebx
 102c4a4:	cs pop eax
 102c4a6:	push   ecx
 102c4a7:	xchg   BYTE PTR [eax-0x4c],al
 102c4aa:	adc    esi,edi
 102c4ac:	inc    esp
 102c4ad:	push   esp
 102c4ae:	xor    eax,0xa327dce4
 102c4b3:	add    ch,BYTE PTR [ebp-0x7ee1b588]
 102c4b9:	pop    esp
 102c4ba:	adc    DWORD PTR ss:[edi+0x16],ebx
 102c4be:	lods   al,BYTE PTR ds:[esi]
 102c4bf:	mov    ecx,0xaba359aa
 102c4c4:	dec    ebx
 102c4c5:	faddp  st(1),st
 102c4c7:	jl     0x102c49c
 102c4c9:	sar    BYTE PTR [esi-0x2004e7f3],1
 102c4cf:	mov    ds:0x8df6c51,al
 102c4d4:	enter  0x78bd,0xeb
 102c4d8:	rol    DWORD PTR [edi-0x55],1
 102c4db:	rol    BYTE PTR [edi-0x67],1
 102c4de:	test   al,0xb6
 102c4e0:	xor    BYTE PTR ds:0x82cadca3,cl
 102c4e6:	mul    bh
 102c4e8:	mov    esp,edx
 102c4ea:	mov    ecx,0xc6098200
 102c4ef:	mov    BYTE PTR cs:[eax-0x3fe02113],dh
 102c4f6:	(bad)  
 102c4f7:	cld    
 102c4f8:	call   FWORD PTR [edx+ecx*1+0x53]
 102c4fc:	jne    0x102c47e
 102c4fe:	adc    ebx,edi
 102c500:	or     ah,ch
 102c502:	fistp  WORD PTR [edx-0x20]
 102c505:	out    dx,al
 102c506:	pusha  
 102c507:	dec    eax
 102c508:	xor    bh,BYTE PTR [esi-0x70]
 102c50b:	jno    0x102c579
 102c50d:	shr    edi,0xfb
 102c510:	ffreep st(0)
 102c512:	out    dx,al
 102c513:	(bad)  [ecx+0x46565a2a]
 102c519:	adc    eax,0x134b0da6
 102c51e:	fiadd  DWORD PTR [eax+0x5a]
 102c521:	push   ebp
 102c522:	test   al,0x7c
 102c524:	fs stos DWORD PTR es:[edi],eax
 102c526:	xor    ah,BYTE PTR [ebp+0x76c96569]
 102c52c:	shr    dl,0x57
 102c52f:	add    BYTE PTR [ebx+0x765fe0ca],cl
 102c535:	ret    0x98d9
 102c538:	in     al,dx
 102c539:	dec    esi
 102c53a:	mov    eax,ds:0xd30668b7
 102c53f:	shl    DWORD PTR [ebx],cl
 102c541:	add    esp,edi
 102c543:	ins    DWORD PTR es:[edi],dx
 102c544:	mov    eax,0xc8b31556
 102c549:	lods   al,BYTE PTR ds:[esi]
 102c54a:	test   al,0x64
 102c54c:	shl    DWORD PTR ds:0xb245043,0x44
 102c553:	xor    dh,BYTE PTR [edx+0x54]
 102c556:	mov    BYTE PTR [eax],bl
 102c558:	inc    ebp
 102c559:	mov    dl,bl
 102c55b:	adc    BYTE PTR ss:[edi-0x1c],0xc7
 102c560:	inc    ecx
 102c561:	(bad)  
 102c562:	dec    edi
 102c563:	xor    al,0x31
 102c565:	push   esp
 102c566:	xchg   edx,eax
 102c567:	inc    ecx
 102c568:	xor    al,0x74
 102c56a:	outs   dx,DWORD PTR ds:[esi]
 102c56b:	out    0x99,eax
 102c56d:	xchg   BYTE PTR [esi+0x5616301b],dh
 102c573:	mov    eax,0x4c35f1ef
 102c578:	mov    edi,0xa3496a4c
 102c57d:	fldenv [ebp-0x40fc0884]
 102c583:	hlt    
 102c584:	sbb    ah,BYTE PTR [edx]
 102c586:	leave  
 102c587:	(bad)  
 102c588:	pop    edi
 102c589:	aas    
 102c58a:	jle    0x102c511
 102c58c:	sbb    al,0xc7
 102c58e:	inc    esp
 102c58f:	jne    0x102c602
 102c591:	loop   0x102c576
 102c593:	mov    edx,0xcf6fb1ae
 102c598:	inc    ebx
 102c599:	add    BYTE PTR [eax+0x75cb6599],al
 102c59f:	shl    BYTE PTR [ecx+0x186ffe25],0xb4
 102c5a6:	jmp    0x102c5fe
 102c5a8:	loopne 0x102c572
 102c5aa:	dec    DWORD PTR [edx]
 102c5ac:	fdivr  st(7),st
 102c5ae:	aaa    
 102c5af:	inc    ecx
 102c5b0:	or     DWORD PTR [eax-0x68],eax
 102c5b3:	xor    eax,0xeb4be6e1
 102c5b8:	int    0xe5
 102c5ba:	gs repz xchg esi,eax
 102c5bd:	lods   eax,DWORD PTR ds:[esi]
 102c5be:	add    eax,0xeb0d4c00
 102c5c3:	imul   esi,esi,0x50
 102c5c6:	push   esi
 102c5c7:	(bad)  
 102c5c8:	es mov al,0x28
 102c5cb:	or     eax,0x2ff049f8
 102c5d0:	aas    
 102c5d1:	(bad)  
 102c5d2:	ins    BYTE PTR es:[edi],dx
 102c5d3:	dec    esp
 102c5d4:	dec    esi
 102c5d5:	dec    ebp
 102c5d6:	popa   
 102c5d7:	es in  al,dx
 102c5d9:	sub    BYTE PTR [esp+ebp*8+0x1edda24c],bl
 102c5e0:	repz jecxz 0x102c626
 102c5e3:	add    eax,0xbe152b8b
 102c5e8:	add    bl,BYTE PTR [ecx+0x151586e9]
 102c5ee:	mov    esi,0x160d1434
 102c5f3:	test   DWORD PTR [eax+edi*1+0x6b],eax
 102c5f7:	xchg   esp,eax
 102c5f8:	xor    ah,BYTE PTR [ebp-0x566d9bdf]
 102c5fe:	je     0x102c5b8
 102c600:	mov    BYTE PTR [edx-0xda94dc9],bh
 102c606:	es push es
 102c608:	dec    ecx
 102c609:	inc    ebx
 102c60a:	jmp    0xf8beee11
 102c60f:	test   eax,0x8c8278b0
 102c614:	push   esp
 102c615:	adc    ch,BYTE PTR [edi+edi*2]
 102c618:	fcom   QWORD PTR [eax-0x3754a2d2]
 102c61e:	xor    BYTE PTR [ebp-0x7ba3e4d5],dl
 102c624:	retf   
 102c625:	sub    al,0x87
 102c627:	imul   edx,DWORD PTR [ecx],0xdc94e112
 102c62d:	mov    esi,DWORD PTR [esp+edx*8-0x2c]
 102c631:	jnp    0x102c61f
 102c633:	xchg   ebx,eax
 102c634:	add    BYTE PTR [edi],cl
 102c636:	cmp    eax,0x7a8719b8
 102c63b:	xchg   ebx,eax
 102c63c:	int3   
 102c63d:	dec    edi
 102c63e:	dec    esp
 102c63f:	fst    QWORD PTR [ebx-0x406e1004]
 102c645:	in     eax,dx
 102c646:	(bad)  
 102c647:	cmc    
 102c648:	sub    dh,dh
 102c64a:	loope  0x102c5cd
 102c64c:	int3   
 102c64d:	pop    esp
 102c64e:	fidiv  DWORD PTR [ebp+0x48d8bc00]
 102c654:	sahf   
 102c655:	inc    edi
 102c656:	push   eax
 102c657:	aam    0xac
 102c659:	add    esp,edi
 102c65b:	dec    ebx
 102c65c:	lahf   
 102c65d:	push   es
 102c65e:	sbb    al,0xf1
 102c660:	stos   DWORD PTR es:[edi],eax
 102c661:	add    dl,cl
 102c663:	jge    0x102c663
 102c665:	leave  
 102c666:	jmp    0xead3685b
 102c66b:	push   ds
 102c66c:	mov    edx,0xe1da2e9d
 102c671:	call   0xac7134e6
 102c676:	in     al,dx
 102c677:	aad    0xdc
 102c679:	jl     0x102c69a
 102c67b:	hlt    
 102c67c:	enter  0x7c51,0xd1
 102c680:	and    al,0x45
 102c682:	inc    ecx
 102c683:	retf   
 102c684:	xchg   edx,eax
 102c685:	adc    DWORD PTR [ebx+0x3],esp
 102c688:	in     al,dx
 102c689:	in     eax,dx
 102c68a:	fldz   
 102c68c:	add    eax,0xa3a714ff
 102c691:	popa   
 102c692:	and    ebp,eax
 102c694:	stos   BYTE PTR es:[edi],al
 102c695:	and    DWORD PTR [ecx],edx
 102c697:	mov    dh,0x29
 102c699:	fsub   DWORD PTR [eax-0x7e249798]
 102c69f:	add    ecx,esp
 102c6a1:	sub    dh,cl
 102c6a3:	cmp    eax,0x5076580a
 102c6a8:	fld    QWORD PTR ds:0xc78dcd65
 102c6ae:	sbb    ecx,ecx
 102c6b0:	cdq    
 102c6b1:	(bad)  
 102c6b2:	push   edx
 102c6b3:	pop    ebx
 102c6b4:	xchg   DWORD PTR [edi-0x64],edi
 102c6b7:	push   cs
 102c6b8:	pop    esi
 102c6b9:	outs   dx,BYTE PTR ds:[esi]
 102c6ba:	cmp    BYTE PTR [esi+0x3e],dl
 102c6bd:	sbb    bh,0x92
 102c6c0:	cmp    ebp,DWORD PTR [ecx]
 102c6c2:	stc    
 102c6c3:	mov    al,ds:0xf23bd09a
 102c6c8:	je     0x102c736
 102c6ca:	mov    edi,0xf7f8fbf7
 102c6cf:	sub    ebp,DWORD PTR [edi-0x3a7b2afc]
 102c6d5:	retf   
 102c6d6:	xchg   esi,eax
 102c6d7:	mov    eax,ds:0x883164b7
 102c6dc:	ret    0x5167
 102c6df:	mov    DWORD PTR [edx+0x225f84e0],eax
 102c6e5:	adc    ch,dl
 102c6e7:	loope  0x102c687
 102c6e9:	ja     0x102c6c1
 102c6eb:	adc    DWORD PTR [eax-0x72],ebp
 102c6ee:	ret    0x23b
 102c6f1:	push   eax
 102c6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102c6f3:	ja     0x102c749
 102c6f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102c6f6:	pop    edi
 102c6f7:	enter  0x8e7b,0x5f
 102c6fb:	add    esp,ecx
 102c6fd:	(bad)
 102c701:	push   ebx
 102c702:	sahf   
 102c703:	mov    WORD PTR [esi+0x67],ss
 102c706:	cmp    eax,edx
 102c708:	pop    ebp
 102c709:	or     ebp,esp
 102c70b:	mov    edx,0x5cea41a5
 102c710:	call   0x8879cf17
 102c715:	std    
 102c716:	pop    edx
 102c717:	mov    ebx,0x3714a828
 102c71c:	rcr    DWORD PTR [ebp+edx*1-0x3f560b50],cl
 102c723:	xor    DWORD PTR [edi],ebp
 102c725:	add    DWORD PTR [eax],eax
 102c727:	fdiv   st(5),st
 102c729:	sub    DWORD PTR [ebx],0x14
 102c72c:	clc    
 102c72d:	push   edi
 102c72e:	pushf  
 102c72f:	adc    BYTE PTR [edi+edi*8],ch
 102c732:	int3   
 102c733:	or     al,0xa6
 102c735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102c736:	jp     0x102c6d0
 102c738:	pushf  
 102c739:	in     al,dx
 102c73a:	mov    ds:0x1a3e2e3d,al
 102c73f:	push   edx
 102c740:	enter  0x5b22,0xb9
 102c744:	daa    
 102c745:	sbb    BYTE PTR [edx-0x2ffbec8b],0x64
 102c74c:	pushf  
 102c74d:	mov    ds:0xb869cf2b,al
 102c752:	add    al,0x6a
 102c754:	pop    es
 102c755:	mov    eax,ds:0x155765d8
 102c75a:	ret    0xf500
 102c75d:	test   eax,0x557e928a
 102c762:	xchg   ebx,eax
 102c763:	ss push edx
 102c765:	leave  
 102c766:	call   0xa2a7cacb
 102c76b:	sub    al,BYTE PTR [eax]
 102c76d:	addr16 jle 0x102c713
 102c770:	inc    esi
 102c771:	mov    ch,0x2e
 102c773:	sbb    ecx,DWORD PTR [eax+edi*2-0x1fce7e4f]
 102c77a:	push   edi
 102c77b:	pop    esi
 102c77c:	test   ebx,edx
 102c77e:	imul   esi,DWORD PTR [ecx+0x5f],0xecf1b9f
 102c785:	cld    
 102c786:	test   eax,0x5d0c636b
 102c78b:	inc    ecx
 102c78c:	shl    BYTE PTR [edx],1
 102c78e:	mov    esi,DWORD PTR [edx-0x2d221ef0]
 102c794:	push   ebp
 102c795:	dec    edi
 102c796:	ret    0x3dde
 102c799:	jae    0x102c773
 102c79b:	mov    ebp,0xdea056ed
 102c7a0:	test   DWORD PTR [ebp-0x349cc865],ebp
 102c7a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102c7a7:	dec    ebp
 102c7a8:	push   ds
 102c7a9:	pushf  
 102c7aa:	jne    0x102c7ae
 102c7ac:	jb     0x102c7aa
 102c7ae:	stos   DWORD PTR es:[edi],eax
 102c7af:	jge    0x102c812
 102c7b1:	push   0x9
 102c7b3:	loop   0x102c7ef
 102c7b5:	cmovae eax,DWORD PTR [edx]
 102c7b8:	loopne 0x102c7d8
 102c7ba:	jmp    ebp
 102c7bc:	mov    ah,0xe4
 102c7be:	std    
 102c7bf:	mov    ds:0xae3c771e,eax
 102c7c4:	sti    
 102c7c5:	jmp    0x442f:0x53e670d7
 102c7cc:	stos   DWORD PTR es:[edi],eax
 102c7cd:	mov    bl,0xa2
 102c7cf:	mov    eax,ds:0xeda14205
 102c7d4:	mov    dh,0x60
 102c7d6:	and    BYTE PTR [edi],al
 102c7d8:	jg     0x102c823
 102c7da:	inc    edx
 102c7db:	aad    0xb4
 102c7dd:	popa   
 102c7de:	cwde   
 102c7df:	add    DWORD PTR [eax-0xa],ebx
 102c7e2:	xor    al,0xe0
 102c7e4:	call   0xc0e2cdc8
 102c7e9:	sbb    ah,dh
 102c7eb:	jg     0x102c7eb
 102c7ed:	retf   0x800f
 102c7f0:	cs pop ebp
 102c7f2:	sti    
 102c7f3:	inc    esp
 102c7f4:	sub    al,0xf
 102c7f6:	jge    0x102c7f6
 102c7f8:	in     al,0xf6
 102c7fa:	pop    es
 102c7fb:	retf   
 102c7fc:	fild   WORD PTR [eax]
 102c7fe:	dec    ah
 102c800:	xor    cl,BYTE PTR [ebx]
 102c802:	popa   
 102c803:	sub    cl,ch
 102c805:	call   FWORD PTR [eax]
 102c807:	dec    ecx
 102c808:	hlt    
 102c809:	leave  
 102c80a:	lods   eax,DWORD PTR ds:[esi]
 102c80b:	mov    bh,0x10
 102c80d:	(bad)  
 102c80e:	jle    0x102c7b4
 102c810:	sbb    al,0x70
 102c812:	pushf  
 102c813:	nop
 102c814:	push   edi
 102c815:	mov    WORD PTR [ebx-0x32],fs
 102c818:	out    dx,eax
 102c819:	push   esi
 102c81a:	inc    esi
 102c81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102c81c:	xchg   esp,eax
 102c81d:	inc    esi
 102c81e:	(bad)  
 102c81f:	js     0x102c84f
 102c821:	cmp    ebx,DWORD PTR [ecx]
 102c823:	lock lea edx,[ecx+0x1a]
 102c827:	adc    al,0xd
 102c829:	icebp  
 102c82a:	dec    eax
 102c82b:	mov    al,0xb4
 102c82d:	sbb    eax,0x50bc6b38
 102c832:	loope  0x102c813
 102c834:	cli    
 102c835:	scas   al,BYTE PTR es:[edi]
 102c836:	fisttp WORD PTR [esi]
 102c838:	jl     0x102c81d
 102c83a:	lods   eax,DWORD PTR ds:[esi]
 102c83b:	(bad)  
 102c83c:	jmp    0x102c7fe
 102c83e:	dec    edi
 102c83f:	cmp    bl,ch
 102c841:	sbb    al,0x3c
 102c843:	icebp  
 102c844:	mov    esp,0xa3bb4975
 102c849:	mov    eax,ds:0xd26a9ae2
 102c84e:	push   0x39cf3271
 102c853:	scas   al,BYTE PTR es:[edi]
 102c854:	xor    DWORD PTR [esi-0x5be0b9ec],0x67
 102c85b:	test   BYTE PTR [ebp-0x7aaaa5fd],0xb1
 102c862:	neg    BYTE PTR [eax]
 102c864:	push   ss
 102c865:	sbb    eax,0xef5c2e7b
 102c86a:	push   esp
 102c86b:	in     al,dx
 102c86c:	fidiv  WORD PTR [ecx+0x1f7bb319]
 102c872:	ss inc eax
 102c874:	dec    ebp
 102c875:	stc    
 102c876:	mov    al,ds:0x558828a6
 102c87b:	sub    BYTE PTR [eax-0x24],dl
 102c87e:	adc    ch,BYTE PTR ds:0x95e253cc
 102c884:	test   BYTE PTR [eax-0x5a],dh
 102c887:	pop    ss
 102c888:	shl    DWORD PTR [ebx+0x2341240],1
 102c88e:	loope  0x102c836
 102c890:	fwait
 102c891:	scas   al,BYTE PTR es:[edi]
 102c892:	ret    0x27c9
 102c895:	div    edx
 102c897:	or     dh,BYTE PTR [edx-0x6b]
 102c89a:	(bad)  
 102c89b:	mov    al,ds:0x23e0f571
 102c8a0:	and    DWORD PTR [esi],esi
 102c8a2:	scas   eax,DWORD PTR es:[edi]
 102c8a3:	mov    dl,0x2
 102c8a5:	imul   esp,DWORD PTR [eax-0x17],0xffffffd3
 102c8a9:	adc    eax,0xaefa3ff8
 102c8ae:	dec    edi
 102c8af:	add    DWORD PTR [eax],eax
 102c8b1:	data16 mov ?,WORD PTR [ecx+0x2c]
 102c8b5:	mov    ?,WORD PTR [ebp*8+0x6173fee9]
 102c8bc:	xor    edi,DWORD PTR ds:0xdbb4f54c
 102c8c2:	iret   
 102c8c3:	sub    DWORD PTR [esi+0x5d],esp
 102c8c6:	jbe    0x102c892
 102c8c8:	sub    eax,0xdaaf7cb7
 102c8cd:	sbb    BYTE PTR [edi-0x31805e9],0x52
 102c8d4:	int    0x3e
 102c8d6:	leave  
 102c8d7:	je     0x102c876
 102c8d9:	scas   al,BYTE PTR es:[edi]
 102c8da:	xchg   edx,eax
 102c8db:	sub    al,0x1f
 102c8dd:	retf   
 102c8de:	sbb    al,0xa9
 102c8e0:	test   al,0x45
 102c8e2:	iret   
 102c8e3:	push   esp
 102c8e4:	lea    edx,[edi-0x38]
 102c8e7:	pop    edx
 102c8e8:	xor    ecx,DWORD PTR [edx-0x505f9a7e]
 102c8ee:	ja     0x102c921
 102c8f0:	sysenter 
 102c8f2:	mov    ah,0xed
 102c8f4:	shl    BYTE PTR [edi-0x121f8821],0xc0
 102c8fb:	inc    edi
 102c8fc:	sbb    eax,0xb19e0a77
 102c901:	cld    
 102c902:	add    al,0x3c
 102c904:	loope  0x102c8cf
 102c906:	imul   edi,DWORD PTR [ebx],0x6afc1130
 102c90c:	inc    eax
 102c90d:	inc    ebx
 102c90e:	cdq    
 102c90f:	jnp    0x102c93f
 102c911:	sbb    eax,DWORD PTR [eax]
 102c913:	mov    ecx,0xb600b1a2
 102c918:	ins    DWORD PTR es:[edi],dx
 102c919:	fild   DWORD PTR [esi+edi*8]
 102c91c:	dec    esp
 102c91d:	sti    
 102c91e:	retf   
 102c91f:	cld    
 102c920:	add    DWORD PTR [eax-0x7273d56],edi
 102c926:	cmp    BYTE PTR [esi+0xa6a6],ah
 102c92c:	jecxz  0x102c911
 102c92e:	jecxz  0x102c908
 102c930:	mov    bh,0x6f
 102c932:	pop    ds
 102c933:	jmp    0x350f:0xbe16f6ba
 102c93a:	mov    esi,0x23d85e65
 102c93f:	mov    eax,ds:0x52d45972
 102c944:	add    BYTE PTR fs:[ebx],bh
 102c947:	out    dx,al
 102c948:	mov    ebx,0x36bbb309
 102c94d:	add    esi,DWORD PTR [eax]
 102c94f:	or     ah,BYTE PTR [eax]
 102c951:	dec    edx
 102c952:	mov    esi,0x7cd4c28
 102c957:	(bad)  
 102c958:	mov    al,ds:0x8fafbbbf
 102c95d:	cmp    BYTE PTR [esi+0x26],cl
 102c960:	xchg   esi,eax
 102c961:	imul   ebx,DWORD PTR [ecx+0x33],0xe3398ff8
 102c968:	cmp    DWORD PTR [eax-0x22ce8914],ebx
 102c96e:	jmp    0x102c9d1
 102c970:	cmp    bh,BYTE PTR [eax+0xb6adfd]
 102c976:	mov    edi,0xcee44328
 102c97b:	pop    eax
 102c97c:	outs   dx,BYTE PTR ds:[esi]
 102c97d:	shl    DWORD PTR [ecx-0x478b1082],0x92
 102c984:	xchg   DWORD PTR [edi+0x15],esp
 102c987:	jnp    0x102c9e2
 102c989:	sub    BYTE PTR [ebp+edi*8+0x16],cl
 102c98d:	cmp    al,0x5
 102c98f:	jns    0x102c9ae
 102c991:	mov    ebx,0x59efd016
 102c996:	adc    DWORD PTR [ebx],edi
 102c998:	jns    0x102c9c9
 102c99a:	ret    0x3d19
 102c99d:	xchg   ecx,eax
 102c99e:	adc    al,0x53
 102c9a0:	xchg   esi,eax
 102c9a1:	fdivr  st,st(4)
 102c9a3:	rol    BYTE PTR [edx-0xa83f125],cl
 102c9a9:	mov    ch,0xd7
 102c9ab:	sub    BYTE PTR ds:0xa80bb2e0,al
 102c9b1:	retf   0x1acc
 102c9b4:	das    
 102c9b5:	add    eax,0x88006e69
 102c9ba:	clc    
 102c9bb:	ror    BYTE PTR [ebp-0x6f7ed5a],1
 102c9c1:	stos   BYTE PTR es:[edi],al
 102c9c2:	mov    ah,0x2a
 102c9c4:	xchg   DWORD PTR [esi-0x45],esi
 102c9c7:	in     eax,dx
 102c9c8:	sti    
 102c9c9:	mov    ah,0xad
 102c9cb:	ss mov edx,0xeff62edd
 102c9d1:	fisttp WORD PTR [edi-0x1e09a547]
 102c9d7:	xchg   ecx,eax
 102c9d8:	or     ebx,DWORD PTR [edi-0x77]
 102c9db:	cmp    DWORD PTR [ecx+0x1e],ebx
 102c9de:	pop    ebx
 102c9df:	inc    esi
 102c9e0:	rol    DWORD PTR [ebx+0x774e5614],0x76
 102c9e7:	fild   QWORD PTR [esi-0x24]
 102c9ea:	jno    0x102c9df
 102c9ec:	adc    eax,0x6e9d0020
 102c9f1:	daa    
 102c9f2:	mov    ecx,0x81bb73ff
 102c9f7:	mov    ebp,0xe575fc1b
 102c9fc:	mov    eax,es
 102c9fe:	push   ebp
 102c9ff:	popa   
 102ca00:	xchg   ecx,eax
 102ca01:	xchg   ecx,eax
 102ca02:	cmp    DWORD PTR [edx-0x54],edx
 102ca05:	mov    DWORD PTR [ecx-0x47],eax
 102ca08:	pushw  ss
 102ca0a:	enter  0xfedc,0x1c
 102ca0e:	cld    
 102ca0f:	jle    0x102c9af
 102ca11:	jg     0x102ca8d
 102ca13:	stos   BYTE PTR es:[edi],al
 102ca14:	xchg   esi,ecx
 102ca16:	fs aaa 
 102ca18:	(bad)  
 102ca19:	test   BYTE PTR [edi+0x5302ad24],0x54
 102ca20:	mov    al,0xca
 102ca22:	cld    
 102ca23:	pop    esp
 102ca24:	sub    cl,BYTE PTR [ecx]
 102ca26:	xchg   DWORD PTR [edi+eiz*1+0x71],ebx
 102ca2a:	je     0x102ca87
 102ca2c:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
 102ca2e:	out    dx,al
 102ca2f:	pusha  
 102ca30:	xchg   esp,eax
 102ca31:	add    ebx,DWORD PTR [ecx]
 102ca33:	pushf  
 102ca34:	in     eax,0x28
 102ca36:	scas   eax,DWORD PTR es:[edi]
 102ca37:	and    DWORD PTR [edx],0x4a1e4a9f
 102ca3d:	cmp    al,0x8b
 102ca3f:	pop    es
 102ca40:	mov    cl,0x58
 102ca42:	std    
 102ca43:	in     al,0x61
 102ca45:	push   ds
 102ca46:	imul   eax,ecx,0xe9be076d
 102ca4c:	mov    dh,0x5b
 102ca4e:	cld    
 102ca4f:	jnp    0x102ca65
 102ca51:	jmp    0x4da8:0x7966584c
 102ca58:	test   eax,0xcbc5556e
 102ca5d:	clc    
 102ca5e:	cld    
 102ca5f:	pop    esi
 102ca60:	pop    eax
 102ca61:	sub    esp,0xd711374c
 102ca67:	cdq    
 102ca68:	hlt    
 102ca69:	sbb    eax,0xdd0aa1c
 102ca6e:	test   al,0xaa
 102ca70:	push   ss
 102ca71:	(bad)  
 102ca72:	imul   eax,edx,0xa0ff5b
 102ca78:	cmp    BYTE PTR [edx+0x33a3e3d],dh
 102ca7e:	mov    cl,0xe0
 102ca80:	pop    ebp
 102ca81:	ficom  WORD PTR [edi]
 102ca83:	and    DWORD PTR [eax+0x2d],0xfdfe039a
 102ca8a:	mov    bh,bh
 102ca8c:	lea    edi,[ecx+0x3d307b7d]
 102ca92:	cmp    eax,0xc93ec789
 102ca97:	jg     0x102ca53
 102ca99:	sbb    esi,ebp
 102ca9b:	outs   dx,BYTE PTR ds:[esi]
 102ca9c:	pusha  
 102ca9d:	jecxz  0x102ca66
 102ca9f:	nop
 102caa0:	mov    edx,0x21b3a100
 102caa5:	xchg   ecx,eax
 102caa6:	and    BYTE PTR [ebx-0x4c7da9fe],bh
 102caac:	ficom  DWORD PTR [ebx]
 102caae:	jge    0x102ca4f
 102cab0:	gs dec edi
 102cab2:	ins    DWORD PTR es:[edi],dx
 102cab3:	push   es
 102cab4:	call   FWORD PTR [ecx+0x726741cf]
 102caba:	retf   0x2d7f
 102cabd:	test   al,0x17
 102cabf:	push   es
 102cac0:	cld    
 102cac1:	mov    dh,0xe2
 102cac4:	mov    cl,0xe1
 102cac6:	jo     0x102cb10
 102cac8:	addr16 mov al,ds:0xe840
 102cacc:	and    al,0x25
 102cace:	setp   BYTE PTR [ebx]
 102cad1:	fld    DWORD PTR [edi-0x9a3f569]
 102cad7:	neg    DWORD PTR [ebp+0x7f2d6788]
 102cadd:	jno    0x102cad8
 102cadf:	add    dl,BYTE PTR [edi-0x7d]
 102cae2:	lods   al,BYTE PTR ds:[esi]
 102cae3:	fdivr  QWORD PTR [esi]
 102cae5:	push   esi
 102cae6:	mov    ecx,0xe41b5e2f
 102caeb:	mov    ch,BYTE PTR cs:[eax]
 102caee:	xchg   ebp,eax
 102caef:	cmc    
 102caf0:	imul   edi,DWORD PTR [edi+0x41f358fd],0xb
 102caf7:	outs   dx,BYTE PTR ds:[esi]
 102caf8:	cmp    esi,eax
 102cafa:	sub    DWORD PTR [edi],esp
 102cafc:	scas   al,BYTE PTR es:[edi]
 102cafd:	sub    eax,0xf4b80acf
 102cb02:	mov    WORD PTR [edi-0x2b],gs
 102cb05:	mov    al,ds:0x3828a04d
 102cb0a:	inc    eax
 102cb0b:	jns    0x102cb0e
 102cb0d:	mov    DWORD PTR [ebp+0x44],edx
 102cb10:	xor    DWORD PTR [ecx+0x2ed2af74],esi
 102cb16:	push   0x17
 102cb18:	xchg   DWORD PTR [edx+0x555ae0e5],ebp
 102cb1e:	add    al,0x7d
 102cb20:	cli    
 102cb21:	adc    eax,0x4f836ade
 102cb26:	dec    eax
 102cb27:	int3   
 102cb28:	sbb    eax,esp
 102cb2a:	sti    
 102cb2b:	or     ebp,DWORD PTR es:[eax-0x1d]
 102cb2f:	cmp    ah,BYTE PTR [eax-0x3d]
 102cb32:	cmc    
 102cb33:	ffreep st(0)
 102cb35:	out    0xd,al
 102cb37:	call   DWORD PTR [edi]
 102cb39:	add    cl,ah
 102cb3b:	xchg   edi,eax
 102cb3c:	pop    esi
 102cb3d:	lock sub al,0xff
 102cb40:	push   ebp
 102cb41:	popa   
 102cb42:	add    al,bl
 102cb44:	clc    
 102cb45:	mov    edi,0x7885da00
 102cb4a:	inc    esi
 102cb4b:	pusha  
 102cb4c:	sbb    al,0x7
 102cb4e:	or     BYTE PTR [ecx],cl
 102cb50:	mov    ah,0x24
 102cb52:	test   al,0x49
 102cb54:	pop    ss
 102cb55:	xchg   esp,eax
 102cb56:	mov    DWORD PTR [edi+0x5],esi
 102cb59:	push   edx
 102cb5a:	test   DWORD PTR [eax+0x31fa7ed9],edi
 102cb60:	std    
 102cb61:	sub    eax,0x4cff007f
 102cb66:	outs   dx,DWORD PTR ds:[esi]
 102cb67:	push   es
 102cb68:	xchg   ebx,eax
 102cb69:	xchg   ebx,eax
 102cb6a:	cli    
 102cb6b:	mov    eax,DWORD PTR [ecx-0x64]
 102cb6e:	mov    ebp,0xbc69f5b3
 102cb73:	sub    DWORD PTR [edx+ebx*4+0x594229fb],0x279522d
 102cb7e:	pop    ecx
 102cb7f:	cmovbe ebx,DWORD PTR [ebp-0x7c]
 102cb83:	jl     0x102cb9a
 102cb85:	push   es
 102cb86:	mov    ecx,0xcb9abab8
 102cb8b:	push   es
 102cb8c:	mov    ebx,0xd925bf90
 102cb91:	and    eax,0x450b5950
 102cb96:	ss dec eax
 102cb98:	pop    edx
 102cb99:	push   eax
 102cb9a:	fild   DWORD PTR [ecx-0x31c91225]
 102cba0:	or     eax,0x59d581db
 102cba5:	std    
 102cba6:	or     al,0x5a
 102cba8:	daa    
 102cba9:	adc    al,0xb6
 102cbab:	je     0x102cb94
 102cbad:	xchg   ecx,eax
 102cbae:	sub    dl,BYTE PTR [edi+0x1d]
 102cbb1:	loope  0x102cbd8
 102cbb3:	dec    esp
 102cbb4:	mov    cs,WORD PTR [ebx+eax*8]
 102cbb7:	adc    al,0x2d
 102cbb9:	mov    al,al
 102cbbb:	inc    esp
 102cbbc:	adc    al,0xcc
 102cbbe:	lods   al,BYTE PTR ds:[esi]
 102cbbf:	add    eax,0x583a4a1
 102cbc4:	scas   al,BYTE PTR es:[edi]
 102cbc5:	loop   0x102cc14
 102cbc7:	sub    al,0x95
 102cbc9:	retf   
 102cbca:	repnz push eax
 102cbcc:	clc    
 102cbcd:	stos   BYTE PTR es:[edi],al
 102cbce:	inc    esp
 102cbcf:	xor    dh,dh
 102cbd1:	mov    ebp,0xabb38860
 102cbd6:	and    al,0x58
 102cbd8:	stos   BYTE PTR es:[edi],al
 102cbd9:	hlt    
 102cbda:	mov    ebx,0xf803db63
 102cbdf:	shl    DWORD PTR [edi-0x149cae03],1
 102cbe5:	jle    0x102cbe5
 102cbe7:	dec    esp
 102cbe8:	je     0x102cb81
 102cbea:	lods   al,BYTE PTR ds:[esi]
 102cbeb:	icebp  
 102cbec:	adc    DWORD PTR [esi-0x3c3fca1],esi
 102cbf2:	pop    ds
 102cbf3:	lock fistp WORD PTR ds:0x930da70c
 102cbfa:	jmp    0x80ddbfeb
 102cbff:	pop    es
 102cc00:	les    ecx,FWORD PTR [edi-0x75]
 102cc03:	rcl    DWORD PTR [esi-0x80],0x29
 102cc07:	inc    esp
 102cc08:	addr16 or eax,0xd5eab0
 102cc0e:	retf   0xefe0
 102cc11:	je     0x102cc50
 102cc13:	clc    
 102cc14:	jnp    0x102cbd3
 102cc16:	sbb    DWORD PTR [esi+esi*2-0x59],ecx
 102cc1a:	xor    BYTE PTR [esi],dl
 102cc1c:	jbe    0x102cc14
 102cc1e:	gs addr16 sti 
 102cc21:	icebp  
 102cc22:	das    
 102cc23:	and    DWORD PTR [di-0x1e88],ebp
 102cc28:	mov    ebp,0x9d321055
 102cc2d:	fdiv   st,st(4)
 102cc2f:	add    dh,ah
 102cc31:	xor    DWORD PTR [edx+0x6b24bf05],ebx
 102cc37:	std    
 102cc38:	repz xlat BYTE PTR ds:[ebx]
 102cc3a:	in     eax,0x66
 102cc3c:	das    
 102cc3d:	sub    BYTE PTR [ecx-0x57],ch
 102cc40:	xor    BYTE PTR [edi+ebx*8],dl
 102cc43:	jge    0x102cc57
 102cc45:	sub    eax,0xa6f9b129
 102cc4a:	mov    eax,ds:0x83fe076c
 102cc4f:	aas    
 102cc50:	sti    
 102cc51:	adc    BYTE PTR [ebp-0x13a1f01d],bh
 102cc57:	mov    edi,0x8d668c0e
 102cc5c:	cli    
 102cc5d:	lods   eax,DWORD PTR ds:[esi]
 102cc5e:	imul   ebp,DWORD PTR [esi-0x5228ca3a],0xffffffc7
 102cc65:	dec    ebp
 102cc66:	mov    bh,0x6d
 102cc68:	shr    BYTE PTR [ecx],0x27
 102cc6b:	ds sbb ah,bh
 102cc6e:	bnd jbe 0x102ccd1
 102cc71:	adc    DWORD PTR [esi-0x47],edx
 102cc74:	mov    ss,esp
 102cc76:	fadd   QWORD PTR [eax-0x225487f4]
 102cc7c:	sub    eax,0x1ae0d15
 102cc81:	jle    0x102cc59
 102cc83:	pop    ebp
 102cc84:	add    esp,esi
 102cc86:	pop    eax
 102cc87:	sub    DWORD PTR [eax+0x79],0xffffffdb
 102cc8b:	mov    edi,0xc2325054
 102cc90:	cwde   
 102cc91:	pop    ecx
 102cc92:	add    BYTE PTR [ebx-0x63901b64],ah
 102cc98:	inc    edi
 102cc99:	jbe    0x102cced
 102cc9b:	loopne 0x102cca6
 102cc9d:	(bad)  
 102cc9f:	retf   0x3147
 102cca2:	mov    ebx,0x388e176f
 102cca7:	push   0x29
 102cca9:	(bad)  
 102ccaa:	sahf   
 102ccab:	stc    
 102ccac:	and    al,0x9f
 102ccae:	into   
 102ccaf:	(bad)  
 102ccb0:	sub    eax,0x8ff03c0
 102ccb5:	mov    al,ds:0x733e3805
 102ccba:	mov    al,0xd6
 102ccbc:	rcr    BYTE PTR [ebx],cl
 102ccbe:	cmp    eax,0x1eb4a01
 102ccc3:	pop    esp
 102ccc4:	sub    BYTE PTR [eax-0x7b],bl
 102ccc7:	loopne 0x102cc67
 102ccc9:	cmp    DWORD PTR [ebp+0x78e2702a],edi
 102cccf:	loopne 0x102ccc9
 102ccd1:	aaa    
 102ccd2:	add    ebp,edx
 102ccd4:	and    al,0xf6
 102ccd6:	outs   dx,BYTE PTR ds:[esi]
 102ccd7:	mov    ebx,0x27fb7335
 102ccdc:	daa    
 102ccdd:	inc    ebx
 102ccde:	lahf   
 102ccdf:	mov    edi,0x3418bfe7
 102cce4:	ss out dx,al
 102cce6:	ror    edi,0xee
 102cce9:	dec    ebp
 102ccea:	sub    al,0xb7
 102ccec:	push   esp
 102cced:	loopne 0x102cd31
 102ccef:	mov    cl,0x4b
 102ccf1:	pop    ss
 102ccf2:	sahf   
 102ccf3:	jmp    0x102cd38
 102ccf5:	popf   
 102ccf6:	test   al,0x23
 102ccf8:	jmp    0xb6f0:0x891d5641
 102ccff:	cmp    eax,0x365f11b
 102cd04:	pop    edx
 102cd05:	ret    
 102cd06:	and    bl,ah
 102cd08:	push   ss
 102cd09:	add    al,0xb6
 102cd0b:	call   0x73b35319
 102cd10:	sbb    esi,DWORD PTR [eax-0x44e78e24]
 102cd16:	add    DWORD PTR [ebp+esi*4+0x1a283f78],ebx
 102cd1d:	fisub  DWORD PTR [edi+0x556aac1]
 102cd23:	xlat   BYTE PTR ds:[ebx]
 102cd24:	stos   BYTE PTR es:[edi],al
 102cd25:	cli    
 102cd26:	sahf   
 102cd27:	ret    
 102cd28:	jg     0x102cd0b
 102cd2a:	stc    
 102cd2b:	pop    ss
 102cd2c:	loopne 0x102ccf0
 102cd2e:	daa    
 102cd2f:	pop    esp
 102cd30:	nop
 102cd31:	lods   al,BYTE PTR ds:[esi]
 102cd32:	xor    eax,0x39c7f541
 102cd37:	dec    esi
 102cd38:	push   ebx
 102cd39:	mov    ds:0xb1b43eaa,eax
 102cd3e:	int3   
 102cd3f:	cdq    
 102cd40:	out    0x85,al
 102cd42:	outs   dx,BYTE PTR ds:[esi]
 102cd43:	push   edi
 102cd44:	or     edx,DWORD PTR [eax+0x35]
 102cd47:	cwde   
 102cd48:	arpl   cx,ax
 102cd4a:	iret   
 102cd4b:	xlat   BYTE PTR ds:[ebx]
 102cd4c:	push   esi
 102cd4d:	push   edx
 102cd4e:	dec    esp
 102cd4f:	sbb    al,0x65
 102cd51:	cdq    
 102cd52:	pop    esp
 102cd53:	mov    dl,BYTE PTR [ebx]
 102cd55:	aaa    
 102cd56:	fmul   DWORD PTR [ecx]
 102cd58:	pop    esp
 102cd5a:	jbe    0x102cdbb
 102cd5c:	lods   al,BYTE PTR ds:[esi]
 102cd5d:	int3   
 102cd5e:	test   eax,0x6e810d75
 102cd63:	sti    
 102cd64:	ficom  WORD PTR [edi]
 102cd66:	mov    cl,0xe5
 102cd68:	sahf   
 102cd69:	sbb    eax,DWORD PTR [ecx+0x44]
 102cd6c:	js     0x102cd68
 102cd6e:	jae    0x102cdef
 102cd70:	sbb    DWORD PTR [eax-0x1f],esi
 102cd73:	hlt    
 102cd74:	loope  0x102cdf1
 102cd76:	dec    DWORD PTR [edi-0x51237521]
 102cd7c:	ret    0x62d1
 102cd7f:	mov    WORD PTR [esi-0x7bb01bd0],?
 102cd85:	je     0x102cd77
 102cd87:	dec    eax
 102cd88:	popf   
 102cd89:	data16 add al,0x94
 102cd8c:	out    0x13,al
 102cd8e:	push   esp
 102cd8f:	xchg   ecx,eax
 102cd90:	pop    edi
 102cd91:	dec    ebp
 102cd92:	mov    eax,0x6b404de6
 102cd97:	sar    BYTE PTR [edi+0x22],cl
 102cd9a:	cmp    al,0x9c
 102cd9c:	jecxz  0x102cdd5
 102cd9e:	mov    ecx,0x3e8e3574
 102cda3:	jecxz  0x102cdde
 102cda5:	call   0x6b901e
 102cdaa:	mov    ah,0x7
 102cdac:	jg     0x102ce09
 102cdae:	sbb    BYTE PTR [edi+0x56],0x8d
 102cdb2:	adc    ecx,DWORD PTR [edx+0x2e36145b]
 102cdb8:	retf   0x561
 102cdbb:	(bad)  
 102cdbc:	mov    al,ds:0xdaaf74a7
 102cdc1:	dec    eax
 102cdc2:	ss inc esp
 102cdc4:	test   eax,0x457652c2
 102cdc9:	and    BYTE PTR [edi],dh
 102cdcb:	(bad)  
 102cdcc:	shl    BYTE PTR [edi],0x82
 102cdcf:	lahf   
 102cdd0:	jns    0x102ce35
 102cdd2:	and    eax,0x86a0d221
 102cdd7:	xor    BYTE PTR [edx-0x6b2ce525],dh
 102cddd:	ins    DWORD PTR es:[edi],dx
 102cdde:	fsub   QWORD PTR [esp+eax*2+0x738691e6]
 102cde5:	sub    al,0x78
 102cde7:	lock leave 
 102cde9:	dec    edx
 102cdea:	or     BYTE PTR [eax+0x32d2a24],0xbd
 102cdf1:	dec    esp
 102cdf2:	dec    ebx
 102cdf3:	push   esp
 102cdf4:	sub    bl,BYTE PTR [ecx+0x3a9072f8]
 102cdfa:	cmp    eax,DWORD PTR [ebx]
 102cdfc:	push   eax
 102cdfd:	add    al,0xb6
 102cdff:	rcl    BYTE PTR [edx+0x7d],0xfe
 102ce03:	adc    BYTE PTR ds:0xe5587c8e,0x65
 102ce0a:	int    0xb4
 102ce0c:	loope  0x102ce57
 102ce0e:	or     bh,BYTE PTR [ebp+0x4c]
 102ce11:	push   ebx
 102ce12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102ce13:	jge    0x102ce15
 102ce15:	(bad)  
 102ce16:	fs ds xchg ecx,eax
 102ce19:	lds    edx,FWORD PTR [eax]
 102ce1b:	outs   dx,BYTE PTR ds:[esi]
 102ce1c:	out    0xf6,eax
 102ce1e:	pop    es
 102ce1f:	jo     0x102cdec
 102ce21:	mov    ch,0x9f
 102ce23:	pop    es
 102ce24:	adc    eax,esi
 102ce26:	aam    0x67
 102ce28:	pop    edi
 102ce29:	xor    cl,0xa9
 102ce2c:	xchg   ebp,eax
 102ce2d:	inc    ch
 102ce2f:	(bad)  
 102ce30:	outs   dx,DWORD PTR ds:[esi]
 102ce31:	add    bh,BYTE PTR [ebx+0x6e]
 102ce34:	pop    es
 102ce35:	xor    BYTE PTR [esi],al
 102ce37:	mov    al,ds:0x650abbf6
 102ce3c:	jg     0x102cde7
 102ce3e:	sahf   
 102ce3f:	or     eax,0x41418599
 102ce44:	jbe    0x102ce89
 102ce46:	mov    eax,0x2507507b
 102ce4b:	rcr    ebx,0x90
 102ce4e:	leave  
 102ce4f:	jns    0x102ce41
 102ce51:	pop    ds
 102ce52:	inc    DWORD PTR [esi]
 102ce54:	mov    al,ds:0xf8ffe0f2
 102ce59:	cmp    edi,DWORD PTR [edi]
 102ce5b:	adc    bh,BYTE PTR [esi]
 102ce5d:	adc    DWORD PTR [esi-0x26138ee],edi
 102ce63:	sbb    ebp,eax
 102ce65:	dec    esp
 102ce66:	jbe    0x102ce39
 102ce68:	fwait
 102ce69:	cdq    
 102ce6a:	inc    ecx
 102ce6b:	dec    edi
 102ce6c:	pop    edx
 102ce6d:	jle    0x102ce06
 102ce6f:	sub    al,0x7f
 102ce71:	sub    al,0x94
 102ce73:	lods   eax,DWORD PTR ds:[esi]
 102ce74:	mov    al,ds:0x75a35942
 102ce79:	xchg   esp,eax
 102ce7a:	mov    al,BYTE PTR [edx+0x44]
 102ce7d:	jne    0x102ce69
 102ce7f:	ret    0x49a4
 102ce82:	or     eax,0x936d0a8f
 102ce87:	or     DWORD PTR [esi-0x4c41b434],edx
 102ce8d:	push   ds
 102ce8e:	dec    eax
 102ce8f:	and    DWORD PTR [ebp+0x3b],ebx
 102ce92:	jle    0x102ceb7
 102ce94:	xchg   ebp,eax
 102ce95:	or     edi,DWORD PTR [ebx+0x2d]
 102ce98:	fxch   st(2)
 102ce9a:	lds    edx,FWORD PTR [eax-0x4b]
 102ce9d:	jbe    0x102ce55
 102ce9f:	popa   
 102cea0:	mov    esi,0x82074869
 102cea5:	push   eax
 102cea6:	push   es
 102cea7:	xchg   ah,cl
 102cea9:	pop    edx
 102ceaa:	mov    ah,bh
 102ceac:	stos   BYTE PTR es:[edi],al
 102cead:	mov    ds:0x28c2b358,al
 102ceb2:	push   es
 102ceb3:	add    DWORD PTR [esi+0x67],eax
 102ceb6:	ror    BYTE PTR [ecx-0x7ba13c7e],cl
 102cebc:	push   ecx
 102cebd:	sbb    dl,dl
 102cebf:	or     esi,DWORD PTR [ecx+0x3e52500d]
 102cec5:	xor    DWORD PTR [edi],ecx
 102cec7:	or     edi,esi
 102cec9:	lods   al,BYTE PTR ds:[esi]
 102ceca:	pushf  
 102cecb:	(bad)
 102cece:	js     0x102ce92
 102ced0:	mov    dl,0x49
 102ced2:	pop    esp
 102ced3:	fs push ss
 102ced5:	mov    ds:0xb3e58e90,al
 102ceda:	es ret 0xbff7
 102cede:	repnz xor edi,ebp
 102cee1:	cli    
 102cee2:	pop    ds
 102cee3:	mov    ebp,0x3b4eab0c
 102cee8:	retf   
 102cee9:	mov    edi,0xd805bfd8
 102ceee:	cli    
 102ceef:	jne    0x102cef0
 102cef1:	cmp    eax,0x10aafe41
 102cef6:	imul   edx,esp,0xffffff9a
 102cef9:	mov    edi,0x70e1033
 102cefe:	mov    al,ds:0x63ca27da
 102cf03:	add    edi,DWORD PTR [edx+ebp*4+0x10]
 102cf07:	pop    ds
 102cf08:	dec    ebx
 102cf09:	into   
 102cf0a:	pop    esp
 102cf0b:	jne    0x102cee4
 102cf0d:	add    bh,al
 102cf0f:	mov    edi,0x6f7f073e
 102cf14:	and    eax,0x42f79d56
 102cf19:	dec    esp
 102cf1a:	int    0x2c
 102cf1c:	inc    ebp
 102cf1d:	outs   dx,DWORD PTR ds:[esi]
 102cf1e:	cmp    bh,BYTE PTR [ebp+0x2b]
 102cf21:	jo     0x102cf8f
 102cf23:	dec    esp
 102cf24:	or     al,0xf8
 102cf26:	lds    ecx,FWORD PTR [edx+0x6d]
 102cf29:	stos   BYTE PTR es:[edi],al
 102cf2a:	pushf  
 102cf2b:	add    al,0xae
 102cf2d:	push   0x214a3995
 102cf32:	jl     0x102cfa0
 102cf34:	aas    
 102cf35:	stos   DWORD PTR es:[edi],eax
 102cf36:	js     0x102cf53
 102cf38:	cmp    al,0xca
 102cf3a:	cwde   
 102cf3b:	xchg   DWORD PTR [ebx+0x69],ecx
 102cf3e:	ss cmc 
 102cf40:	int    0xb3
 102cf42:	cmp    ah,BYTE PTR [edi-0x5b]
 102cf45:	sub    esp,esp
 102cf47:	add    esi,DWORD PTR es:[eax]
 102cf4a:	xor    esi,DWORD PTR [ebp-0x80]
 102cf4d:	mov    ah,0x8a
 102cf4f:	out    0x57,eax
 102cf51:	mov    dh,ah
 102cf53:	pop    es
 102cf54:	dec    ecx
 102cf55:	inc    ebx
 102cf56:	push   ebx
 102cf57:	add    dl,ah
 102cf59:	inc    esi
 102cf5a:	(bad)  
 102cf5b:	push   0x12fec960
 102cf60:	repnz inc esi
 102cf62:	sub    eax,0xa4d4b236
 102cf67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102cf68:	mov    cl,BYTE PTR [esi]
 102cf6a:	popa   
 102cf6b:	xchg   esp,eax
 102cf6c:	mul    BYTE PTR [esi-0x7f]
 102cf6f:	inc    eax
 102cf70:	mov    ah,BYTE PTR [ebx]
 102cf72:	gs retf 0x9ab0
 102cf76:	js     0x102cf02
 102cf78:	out    0xc9,al
 102cf7a:	xchg   esp,eax
 102cf7b:	or     DWORD PTR [edx+0x9eb9072],0x16
 102cf82:	push   esi
 102cf83:	retf   0x93df
 102cf86:	gs ret 0x2458
 102cf8a:	leave  
 102cf8b:	retf   
 102cf8c:	in     eax,dx
 102cf8d:	push   ecx
 102cf8f:	inc    ebp
 102cf90:	ins    BYTE PTR es:[edi],dx
 102cf91:	mov    ecx,0x840046f7
 102cf96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102cf97:	std    
 102cf98:	call   0x400c:0xf81ffd70
 102cf9f:	sti    
 102cfa0:	add    BYTE PTR [edx],bl
 102cfa2:	add    ebx,DWORD PTR [edx+0x73]
 102cfa5:	loope  0x102cf2b
 102cfa7:	mov    al,ds:0xd02270b9
 102cfac:	sbb    al,0xe2
 102cfae:	xchg   edi,eax
 102cfaf:	sub    DWORD PTR [ebx+0x61],0xfffffff9
 102cfb3:	imul   esp,edi,0xffffff9f
 102cfb6:	push   edi
 102cfb7:	mov    bl,0xe2
 102cfb9:	in     al,dx
 102cfba:	dec    edi
 102cfbb:	repnz (bad) 
 102cfbd:	mov    edi,0xe6b03c7b
 102cfc2:	jne    0x102d009
 102cfc4:	retf   
 102cfc5:	mov    edi,0xa217bcea
 102cfca:	cmp    esi,DWORD PTR [ebx+0x69e9dd14]
 102cfd0:	dec    esp
 102cfd1:	repz sbb BYTE PTR [edi+0x2b2fcb4],0x4d
 102cfd9:	pop    ebp
 102cfda:	inc    ebp
 102cfdb:	das    
 102cfdc:	dec    edi
 102cfdd:	aam    0x67
 102cfdf:	push   esp
 102cfe0:	lock and eax,0x6de5dd17
 102cfe6:	mov    eax,ds:0x7a34d02a
 102cfeb:	test   eax,0x2eadfb3d
 102cff0:	inc    esp
 102cff1:	sub    DWORD PTR [ecx],ebx
 102cff3:	adc    DWORD PTR [ecx+0x5a7755d1],edi
 102cff9:	xchg   BYTE PTR [edx+0x42],ah
 102cffc:	es mov ebp,0x64dec526
 102d002:	dec    eax
 102d003:	out    0x93,al
 102d005:	xchg   BYTE PTR [ebp+ebx*1-0x127240c8],dh
 102d00c:	stos   DWORD PTR es:[edi],eax
 102d00d:	xor    al,0x41
 102d00f:	mov    eax,0x5b37e974
 102d014:	imul   ebp,DWORD PTR [ebp-0x7c],0x6
 102d018:	inc    esi
 102d019:	(bad)  
 102d01a:	cli    
 102d01b:	fwait
 102d01c:	rol    DWORD PTR [edx],1
 102d01e:	das    
 102d01f:	adc    ch,BYTE PTR [edx+eax*8+0x7b]
 102d023:	jo     0x102cfaa
 102d025:	cmp    BYTE PTR ds:0x5b3d16e0,ah
 102d02b:	and    esp,esp
 102d02d:	repnz and eax,0x670ad797
 102d033:	imul   ecx,esi,0x6db689bb
 102d039:	mov    edx,0xfb5cb713
 102d03e:	jns    0x102cfc0
 102d040:	and    BYTE PTR [edi+0x3093cafc],0x3e
 102d047:	adc    eax,0xfd6cfc16
 102d04c:	ss mov al,0x77
 102d04f:	and    edx,edx
 102d051:	pop    ss
 102d052:	xchg   DWORD PTR [ebx+0x5e],ebx
 102d055:	or     DWORD PTR [eax],edx
 102d057:	ret    0x2f7
 102d05a:	sbb    al,0x7c
 102d05c:	(bad)  
 102d05d:	mov    edi,0x80b1a46
 102d062:	pop    edi
 102d063:	push   ds
 102d064:	inc    edx
 102d065:	or     eax,0x5cf11b50
 102d06a:	mov    edi,0xac4c0d56
 102d06f:	add    dl,dh
 102d071:	mov    esp,0xe3fe08b6
 102d076:	add    bh,al
 102d078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102d079:	ret    0x9f54
 102d07c:	jb     0x102d079
 102d07e:	ret    
 102d07f:	daa    
 102d080:	int    0x1a
 102d082:	stos   DWORD PTR es:[edi],eax
 102d083:	pop    edi
 102d084:	add    bl,ah
 102d086:	add    al,0x50
 102d088:	or     bl,dh
 102d08a:	sub    BYTE PTR [esi-0x28],ah
 102d08d:	mov    edx,0xcc8c3a77
 102d092:	xchg   esp,eax
 102d093:	fbstp  TBYTE PTR [ebx-0x77eb5a39]
 102d099:	lock push es
 102d09b:	mov    bl,0x3a
 102d09d:	mov    bh,0xb2
 102d09f:	fs repnz mov dh,0xe1
 102d0a3:	loop   0x102d0d0
 102d0a5:	leave  
 102d0a6:	mov    esi,DWORD PTR [ecx]
 102d0a8:	jo     0x102d05b
 102d0aa:	sub    al,0xd6
 102d0ac:	mov    dl,0x4
 102d0ae:	mov    ds:0xa7b0efd5,eax
 102d0b3:	stc    
 102d0b4:	mov    al,ds:0x8005ede1
 102d0b9:	jo     0x102d03c
 102d0bb:	push   ecx
 102d0bc:	adc    BYTE PTR [eax],al
 102d0be:	mov    al,ds:0x9152d7d8
 102d0c3:	mov    ecx,0xe28044f1
 102d0c8:	jns    0x102d061
 102d0ca:	fld    DWORD PTR [ebp+0xe802120]
 102d0d0:	(bad)  
 102d0d1:	cmp    eax,0x5937f9b3
 102d0d6:	jl     0x102d131
 102d0d8:	push   ds
 102d0d9:	fwait
 102d0da:	push   edi
 102d0db:	leave  
 102d0dc:	mov    esi,DWORD PTR [ecx]
 102d0de:	ret    0xd9a
 102d0e1:	pusha  
 102d0e2:	mov    DWORD PTR [eax],edi
 102d0e4:	std    
 102d0e5:	sub    al,0x5a
 102d0e7:	dec    ebp
 102d0e8:	test   BYTE PTR [edi],bl
 102d0ea:	jl     0x102d0e1
 102d0ec:	arpl   WORD PTR [eax+0x6b1bb7dd],bx
 102d0f2:	dec    esi
 102d0f3:	ds push cs
 102d0f5:	(bad)  
 102d0f6:	popf   
 102d0f7:	sbb    cl,BYTE PTR [esi+0xf73db1f]
 102d0fd:	mov    al,0xfd
 102d0ff:	mov    ebx,0x8b8fbdde
 102d104:	ins    DWORD PTR es:[edi],dx
 102d105:	cmp    bl,al
 102d107:	push   ss
 102d108:	ret    0x42b1
 102d10b:	mov    bl,ch
 102d10d:	jle    0x102d188
 102d10f:	inc    esi
 102d110:	adc    BYTE PTR [ebx+0x27],0x84
 102d114:	add    eax,0x570f9541
 102d119:	dec    ebp
 102d11a:	xchg   ebp,eax
 102d11b:	rcr    edi,0xf3
 102d11e:	loopne 0x102d0bf
 102d120:	jmp    0xd067:0xa6f7f079
 102d127:	popf   
 102d128:	call   0x55da:0x4c4d8c6
 102d12f:	dec    ebx
 102d130:	jl     0x102d101
 102d132:	push   eax
 102d133:	xchg   edi,eax
 102d134:	and    DWORD PTR [ebx-0x4e3af17c],esi
 102d13a:	nop
 102d13b:	sbb    dh,bl
 102d13d:	pop    edx
 102d13e:	pop    edi
 102d13f:	push   ebx
 102d140:	push   ebp
 102d141:	mov    dl,0x78
 102d143:	sar    dl,cl
 102d145:	retf   0xf611
 102d148:	xchg   edx,eax
 102d149:	adc    dh,BYTE PTR [ebp+0x29292fc0]
 102d14f:	push   eax
 102d150:	xchg   edx,eax
 102d151:	test   eax,0x936fe0d2
 102d156:	ins    BYTE PTR es:[edi],dx
 102d157:	push   ss
 102d158:	sti    
 102d159:	stc    
 102d15a:	and    bl,BYTE PTR [esi]
 102d15c:	sub    BYTE PTR [eax+eiz*2+0x79],0x8
 102d161:	push   cs
 102d162:	shl    al,0xe
 102d165:	add    eax,0x234d7ecd
 102d16a:	fist   DWORD PTR ds:0x68be2a76
 102d170:	fsubr  st,st(4)
 102d172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102d173:	sahf   
 102d174:	and    BYTE PTR [eax+0x32e46465],0x73
 102d17b:	fisttp DWORD PTR [edx]
 102d17d:	mov    esp,0xf98b13aa
 102d182:	push   edi
 102d183:	pop    eax
 102d184:	jbe    0x102d1b0
 102d186:	in     eax,0x27
 102d188:	lods   al,BYTE PTR ds:[esi]
 102d189:	mov    esi,DWORD PTR [edx+edx*2-0x2f8df3ea]
 102d190:	dec    eax
 102d191:	sahf   
 102d192:	mov    bh,0x11
 102d194:	test   edi,edx
 102d196:	sub    BYTE PTR [edi+eax*1],bl
 102d199:	sub    BYTE PTR [edx-0x3e],0xcd
 102d19d:	jmp    0x102d1de
 102d19f:	add    DWORD PTR [edi+0x200dc1e],0x61
 102d1a6:	fnstsw WORD PTR [edi+0x79]
 102d1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102d1aa:	mov    bh,0xf6
 102d1ac:	add    al,dh
 102d1ae:	loopne 0x102d16f
 102d1b0:	add    BYTE PTR [eax+0x7f39a45],bl
 102d1b6:	bound  ebx,QWORD PTR [edi]
 102d1b8:	(bad)  
 102d1ba:	add    DWORD PTR [ebp+0x78],esi
 102d1bd:	mov    ?,eax
 102d1bf:	or     al,0xe
 102d1c1:	jle    0x102d14d
 102d1c3:	jo     0x102d193
 102d1c5:	xchg   DWORD PTR [ebx+0x4570482],ebp
 102d1cb:	push   esp
 102d1cc:	adc    edi,esi
 102d1ce:	sub    BYTE PTR [edi+0x109ff812],ch
 102d1d4:	sar    BYTE PTR [edi],0xe3
 102d1d7:	out    0xf9,eax
 102d1d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102d1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102d1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102d1dc:	xor    DWORD PTR [esi],edi
 102d1de:	adc    DWORD PTR ss:[esi+0x25],0x59e48f14
 102d1e6:	sub    dh,BYTE PTR [ebx+eiz*4]
 102d1e9:	sbb    BYTE PTR [ebp+0x7d],dl
 102d1ec:	sbb    edi,DWORD PTR [edi+0x39]
 102d1ef:	cmp    ebx,edi
 102d1f1:	mov    edi,0x75cc2c64
 102d1f6:	push   esp
 102d1f7:	out    0x7d,al
 102d1f9:	or     al,0x4b
 102d1fb:	push   ss
 102d1fc:	lahf   
 102d1fd:	repnz imul BYTE PTR [eax]
 102d200:	xchg   BYTE PTR [edi-0x5d],ah
 102d203:	and    esi,ebx
 102d205:	sub    eax,0x546bae8
 102d20a:	iret   
 102d20b:	jns    0x102d226
 102d20d:	ja     0x102d280
 102d20f:	rol    dh,0x1f
 102d212:	rcl    al,0x3c
 102d215:	add    BYTE PTR [ecx+0x54],dl
 102d218:	mov    esi,DWORD PTR [edx+0x3]
 102d21b:	call   0xae1e0232
 102d220:	es in  eax,0xe1
 102d223:	push   esp
 102d224:	outs   dx,BYTE PTR ds:[esi]
 102d225:	(bad)  
 102d226:	jb     0x102d21f
 102d228:	push   ebx
 102d229:	xor    ah,BYTE PTR [edx]
 102d22b:	mov    esi,0x8f2adcb5
 102d230:	xchg   BYTE PTR [esi-0x75],dl
 102d233:	dec    edx
 102d234:	dec    edx
 102d235:	sub    BYTE PTR ds:0x24514ab5,ah
 102d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102d23c:	sub    al,0x17
 102d23e:	cdq    
 102d23f:	mov    esp,0xe47c20a
 102d244:	fdivr  st,st(6)
 102d246:	loopne 0x102d24e
 102d248:	cld    
 102d249:	clc    
 102d24a:	mov    edx,0x3c04002f
 102d24f:	repz mov ecx,0xc4d680bf
 102d255:	and    bh,bh
 102d257:	cli    
 102d258:	shr    DWORD PTR [edi+0x1c3ecdc3],0xc0
 102d25f:	dec    edi
 102d260:	enter  0x4e80,0xc1
 102d264:	add    ebp,DWORD PTR [eax-0xf]
 102d267:	sub    al,al
 102d269:	sbb    ch,cl
 102d26b:	stos   DWORD PTR es:[edi],eax
 102d26c:	les    eax,FWORD PTR [ecx+0x31]
 102d26f:	push   eax
 102d270:	sbb    BYTE PTR [edi],bl
 102d272:	push   0xbec7004d
 102d277:	or     al,0xe8
 102d279:	sbb    al,0xb
 102d27b:	int3   
 102d27c:	in     eax,dx
 102d27d:	into   
 102d27e:	sar    DWORD PTR [edi],0xb3
 102d281:	adc    al,0xdd
 102d283:	pop    esi
 102d284:	iret   
 102d285:	lahf   
 102d286:	loopne 0x102d2c3
 102d288:	cmp    eax,0x7f31b18d
 102d28d:	sub    BYTE PTR [edi+0x4e54a11c],0x8c
 102d294:	hlt    
 102d295:	mov    dh,0x58
 102d297:	jns    0x102d2d3
 102d299:	in     al,0x9e
 102d29b:	sahf   
 102d29c:	xchg   ecx,eax
 102d29d:	pop    es
 102d29e:	aad    0x2d
 102d2a0:	sub    al,0x3b
 102d2a2:	adc    eax,0xca090a65
 102d2a7:	stos   BYTE PTR es:[edi],al
 102d2a8:	xchg   esp,eax
 102d2a9:	push   esi
 102d2aa:	mov    ebx,0xe4ebc034
 102d2af:	lea    esp,ds:0x1e4c6869
 102d2b5:	sub    bl,BYTE PTR [ebx-0xa]
 102d2b8:	push   ss
 102d2b9:	or     cl,BYTE PTR [edx+0x71b962b]
 102d2bf:	imul   ebp,DWORD PTR [esi+eiz*8+0xa28699],0xc897e72a
 102d2ca:	(bad)  
 102d2cb:	mov    dl,0xc3
 102d2cd:	jecxz  0x102d25f
 102d2cf:	mul    BYTE PTR [eax+0x7d574784]
 102d2d5:	idiv   DWORD PTR [ebx]
 102d2d7:	mov    eax,0xe2d77be6
 102d2dc:	(bad)  
 102d2dd:	pop    ebx
 102d2de:	outs   dx,DWORD PTR ds:[esi]
 102d2df:	ret    0x2729
 102d2e2:	scas   al,BYTE PTR es:[edi]
 102d2e3:	lds    edi,FWORD PTR [ecx+0xb839e67]
 102d2e9:	ret    0x177
 102d2ec:	xor    dh,BYTE PTR [edi+edx*1-0x24]
 102d2f0:	mov    bl,0xc
 102d2f2:	cmp    esi,DWORD PTR [eax+edx*1+0x15]
 102d2f6:	das    
 102d2f7:	pop    esp
 102d2f8:	xor    ebp,edx
 102d2fa:	aas    
 102d2fb:	adc    eax,0xa369bcd6
 102d300:	nop
 102d301:	adc    eax,0x489092e0
 102d306:	add    ebx,DWORD PTR [eax-0x4c]
 102d309:	or     al,0x7d
 102d30b:	test   BYTE PTR [ebx],ah
 102d30d:	lea    esp,[ecx]
 102d30f:	js     0x102d2e8
 102d311:	pop    ds
 102d312:	add    BYTE PTR [esi-0x61],dl
 102d315:	mov    esp,0x7f8f2b0a
 102d31a:	mov    ah,0x7f
 102d31c:	mov    esi,0x5db81ef7
 102d321:	aas    
 102d322:	dec    esp
 102d323:	xchg   esi,eax
 102d324:	fild   QWORD PTR [edi]
 102d326:	inc    ecx
 102d327:	or     al,0x85
 102d329:	or     BYTE PTR [eax+0x77],ah
 102d32c:	jae    0x102d36e
 102d32e:	retf   
 102d32f:	add    eax,0x317808f
 102d334:	leave  
 102d335:	out    dx,al
 102d336:	add    BYTE PTR [ebx+0xe3be65f],0x1c
 102d33d:	sti    
 102d33e:	xchg   edx,eax
 102d33f:	or     dh,bh
 102d341:	clc    
 102d342:	leave  
 102d343:	scas   al,BYTE PTR es:[edi]
 102d344:	jbe    0x102d36d
 102d346:	cmp    DWORD PTR [edi+0x7a],0x17a8b1a
 102d34d:	cld    
 102d34e:	jecxz  0x102d311
 102d350:	xacquire xchg DWORD PTR ds:0x3a860d46,ecx
 102d357:	xchg   esi,eax
 102d358:	pop    ecx
 102d35a:	popa   
 102d35b:	lods   eax,DWORD PTR ds:[esi]
 102d35c:	jg     0x102d32f
 102d35e:	push   ss
 102d35f:	jo     0x102d33e
 102d361:	adc    edx,DWORD PTR [ebx+edi*1-0x40]
 102d365:	les    esi,FWORD PTR [ebp-0x1e]
 102d368:	ret    0x488a
 102d36b:	leave  
 102d36c:	and    eax,0x4ed81697
 102d371:	adc    edx,DWORD PTR [edi-0x1f1d12e]
 102d377:	xor    eax,0x29f312c9
 102d37c:	mov    esp,0xc9b692da
 102d381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102d382:	test   eax,0x7f36958b
 102d387:	xor    al,0xb4
 102d389:	in     eax,dx
 102d38a:	rcr    BYTE PTR [ebx],0xee
 102d38d:	aas    
 102d38e:	lock jbe 0x102d371
 102d391:	arpl   WORD PTR [esi-0x63],dx
 102d394:	and    BYTE PTR [edi-0x54],0x10
 102d398:	fild   DWORD PTR [ecx+0x75ff16f]
 102d39e:	mov    esi,0x7a75bce0
 102d3a3:	add    DWORD PTR [ecx],edx
 102d3a5:	or     al,BYTE PTR [edx-0x2ab5e59d]
 102d3ab:	ins    DWORD PTR es:[edi],dx
 102d3ac:	out    0x1a,al
 102d3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102d3af:	retf   0xb357
 102d3b2:	pop    es
 102d3b3:	push   es
 102d3b4:	fld    QWORD PTR [ebp-0x80]
 102d3b7:	dec    ebx
 102d3b8:	pusha  
 102d3b9:	retf   
 102d3ba:	xor    BYTE PTR [esi],ah
 102d3bc:	jae    0x102d369
 102d3be:	xchg   esp,eax
 102d3bf:	in     al,dx
 102d3c0:	enter  0x12b5,0xd8
 102d3c4:	push   es
 102d3c5:	xchg   edi,eax
 102d3c6:	les    ebp,FWORD PTR [edi+0x76]
 102d3c9:	and    esp,ebx
 102d3cb:	mov    edx,0x7878b3fe
 102d3d0:	retf   
 102d3d1:	fisttp QWORD PTR [eax-0x26f8c052]
 102d3d7:	bnd jne 0x102d412
 102d3da:	xlat   BYTE PTR ds:[ebx]
 102d3db:	dec    esi
 102d3dc:	xchg   edx,eax
 102d3dd:	out    dx,al
 102d3de:	out    0x10,al
 102d3e0:	pop    ss
 102d3e1:	stc    
 102d3e2:	lock or al,al
 102d3e5:	clc    
 102d3e6:	ror    DWORD PTR [esi],1
 102d3e8:	stc    
 102d3e9:	(bad)  
 102d3ea:	arpl   WORD PTR [edx],ax
 102d3ec:	sbb    BYTE PTR [edi-0x71fce7e7],0xf9
 102d3f3:	sbb    eax,0xfe8c73a0
 102d3f8:	fs push edi
 102d3fa:	mov    ebx,0x7bcf6383
 102d3ff:	add    DWORD PTR [edx-0x3feda43],edi
 102d405:	mov    edx,eax
 102d407:	adc    eax,0x35c1df96
 102d40c:	iret   
 102d40d:	xchg   ecx,eax
 102d40e:	inc    ebx
 102d40f:	sub    edx,eax
 102d411:	push   edx
 102d412:	pop    ecx
 102d413:	lods   eax,DWORD PTR ds:[esi]
 102d414:	bound  edx,QWORD PTR [esi+edx*8+0x33]
 102d418:	scas   eax,DWORD PTR es:[edi]
 102d419:	mov    fs,edx
 102d41b:	add    ecx,DWORD PTR [ecx]
 102d41d:	je     0x102d45a
 102d41f:	lea    ebx,[eax-0x4c]
 102d422:	mov    dl,0xa6
 102d424:	popa   
 102d425:	push   cs
 102d426:	fs cld 
 102d428:	jecxz  0x102d467
 102d42a:	adc    DWORD PTR [esi],0xffffff85
 102d42d:	ss aaa 
 102d42f:	inc    eax
 102d430:	es stc 
 102d432:	dec    esp
 102d433:	in     al,0xe3
 102d435:	inc    esp
 102d436:	jge    0x102d400
 102d438:	sub    ebx,ebp
 102d43a:	inc    ecx
 102d43b:	rol    dl,cl
 102d43d:	fisttp DWORD PTR [esi]
 102d43f:	jl     0x102d41e
 102d441:	xor    eax,0xeb09e0b8
 102d446:	(bad)  
 102d447:	fsubr  DWORD PTR [ecx+eiz*1+0x10]
 102d44b:	jmp    0x9189bbd6
 102d450:	xchg   esi,eax
 102d451:	mov    bh,0xe4
 102d453:	sub    eax,0x44b4f748
 102d458:	dec    ebp
 102d459:	std    
 102d45a:	(bad)  
 102d45b:	in     al,dx
 102d45c:	inc    esp
 102d45d:	popa   
 102d45e:	leave  
 102d45f:	mov    edx,DWORD PTR [ecx+0x508250c]
 102d465:	loope  0x102d4b8
 102d467:	dec    edx
 102d468:	inc    edi
 102d469:	xor    DWORD PTR [edi-0x4325e082],edx
 102d46f:	add    DWORD PTR [edi+0xbef7d],esi
 102d475:	adc    DWORD PTR [esi-0x2],edi
 102d478:	mov    ecx,0xb8d688bf
 102d47d:	fucomip st,st(3)
 102d47f:	dec    edi
 102d480:	pop    ebx
 102d481:	scas   al,BYTE PTR es:[edi]
 102d482:	test   BYTE PTR [ebx-0xdf03e89],ch
 102d488:	adc    DWORD PTR [edx+ebp*8+0x3c],esi
 102d48c:	ret    0xa75f
 102d48f:	out    0x7c,eax
 102d491:	test   BYTE PTR [eax-0x14],bh
 102d494:	sbb    al,BYTE PTR [ecx+ebx*8+0x380c6a80]
 102d49b:	repnz add eax,0x745fe08d
 102d4a1:	les    ebx,FWORD PTR [edx+0x677adb0]
 102d4a7:	xchg   ebx,eax
 102d4a8:	push   ebx
 102d4a9:	push   ebx
 102d4aa:	mov    esi,0xef8e1fcf
 102d4af:	xchg   esi,eax
 102d4b0:	retf   0x56d0
 102d4b3:	push   esp
 102d4b4:	sub    al,0xa3
 102d4b6:	shl    edi,cl
 102d4b8:	pop    ecx
 102d4b9:	cmp    bl,ch
 102d4bb:	out    0x1b,al
 102d4bd:	imul   ebp,DWORD PTR [edi-0x6e6cc744],0x4d
 102d4c4:	mov    ebx,0xd4cc40b8
 102d4c9:	mov    cl,0x6d
 102d4cb:	jg     0x102d4c2
 102d4cd:	lods   al,BYTE PTR ds:[esi]
 102d4ce:	and    DWORD PTR [esi-0x67b2e9ab],ecx
 102d4d4:	xchg   ebp,eax
 102d4d5:	xchg   al,cl
 102d4d7:	sbb    BYTE PTR [ebx+0x7d],0x35
 102d4db:	lea    edi,[ebp-0x198b797c]
 102d4e1:	xchg   ebx,eax
 102d4e2:	push   ss
 102d4e3:	fdiv   QWORD PTR [esi-0x20]
 102d4e6:	fwait
 102d4e7:	outs   dx,DWORD PTR ds:[esi]
 102d4e8:	mov    ebx,0x149a0b45
 102d4ed:	adc    BYTE PTR [ebx+0x55],ah
 102d4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102d4f1:	dec    edi
 102d4f2:	leave  
 102d4f3:	xor    BYTE PTR [eax+eax*2+0xac18a8e],0xa5
 102d4fb:	jno    0x102d4f6
 102d4fd:	mov    edx,DWORD PTR [esi]
 102d4ff:	inc    esp
 102d500:	cmp    al,0x63
 102d502:	pop    esi
 102d503:	aam    0xca
 102d505:	inc    ecx
 102d506:	repz fimul WORD PTR [esi+0x61]
 102d50a:	stos   BYTE PTR es:[edi],al
 102d50b:	xor    bl,BYTE PTR [ebx]
 102d50d:	dec    ebp
 102d50e:	mov    al,ds:0xbbc28806
 102d513:	std    
 102d514:	jnp    0x102d58d
 102d516:	loop   0x102d51f
 102d518:	pop    edi
 102d519:	sti    
 102d51a:	cmp    BYTE PTR [eax-0x40],al
 102d51d:	jmp    0xd39a:0xe5635793
 102d524:	jl     0x102d4be
 102d526:	cmp    eax,0xb9edc2f7
 102d52b:	or     eax,0x3e88daa8
 102d530:	and    eax,0x25e3eaaf
 102d535:	mov    esi,0xaafa2bc
 102d53a:	outs   dx,BYTE PTR ds:[esi]
 102d53b:	jg     0x102d59a
 102d53d:	test   DWORD PTR [ebx-0x1f],ebp
 102d540:	add    DWORD PTR [ebx+eiz*2-0x40],edx
 102d544:	retf   0x6adf
 102d547:	add    al,0xff
 102d549:	dec    esp
 102d54a:	clc    
 102d54b:	fs push edi
 102d54d:	outs   dx,DWORD PTR ds:[esi]
 102d54e:	(bad)  
 102d54f:	outs   dx,DWORD PTR ds:[esi]
 102d550:	in     al,0x9a
 102d552:	cwde   
 102d553:	call   0x9751aaf8
 102d558:	lahf   
 102d559:	mov    cl,0x9b
 102d55b:	int    0x5e
 102d55d:	cmp    BYTE PTR [ecx+0x3f],dl
 102d560:	add    eax,0x21ad1993
 102d565:	jmp    0x102d577
 102d567:	or     DWORD PTR [esp+eiz*8],edx
 102d56a:	shl    dh,0x75
 102d56d:	dec    ecx
 102d56e:	push   0xffffff8a
 102d570:	dec    ebp
 102d571:	sub    cl,dl
 102d573:	inc    edx
 102d574:	fidiv  DWORD PTR [esi+0x3b]
 102d577:	xor    bh,ah
 102d579:	push   ebx
 102d57a:	retf   0x54d3
 102d57d:	mov    ebx,0xfd2a374a
 102d582:	push   eax
 102d583:	int    0xd6
 102d585:	lock adc al,0x9c
 102d588:	retf   
 102d589:	mov    ds:0x8c1e45dc,al
 102d58e:	sbb    BYTE PTR [edi-0x50],0x5d
 102d592:	add    BYTE PTR [ecx+0x6d],0x7
 102d596:	ds stc 
 102d598:	les    esi,FWORD PTR [ebp+0x9929c1a]
 102d59e:	jmp    0x6c0fe0ed
 102d5a3:	adc    eax,0x6c850b04
 102d5a8:	sub    eax,0x157e4bb
 102d5ad:	mov    ah,0x0
 102d5af:	jle    0x102d5e6
 102d5b1:	std    
 102d5b2:	sub    BYTE PTR [ebx],bl
 102d5b4:	cwde   
 102d5b5:	mov    eax,?
 102d5b7:	lock jnp 0x102d542
 102d5ba:	xchg   DWORD PTR [ebp-0x31],ecx
 102d5bd:	clc    
 102d5be:	push   ebp
 102d5bf:	inc    ecx
 102d5c0:	cwde   
 102d5c1:	or     DWORD PTR [ebx+ebx*2+0x761cfdae],eax
 102d5c8:	ins    BYTE PTR es:[edi],dx
 102d5c9:	mov    ecx,0x14dedd1b
 102d5ce:	into   
 102d5cf:	inc    ebp
 102d5d1:	lahf   
 102d5d2:	unpckhps xmm6,XMMWORD PTR [ebp-0x2a2f0be5]
 102d5d9:	jo     0x102d649
 102d5db:	sub    al,0x30
 102d5dd:	sbb    eax,0x1b13bcac
 102d5e2:	jg     0x102d5a4
 102d5e4:	pusha  
 102d5e5:	out    0xe3,eax
 102d5e7:	jle    0x102d643
 102d5e9:	jle    0x102d60c
 102d5eb:	push   eax
 102d5ec:	int3   
 102d5ed:	int3   
 102d5ee:	jns    0x102d5d5
 102d5f0:	mov    cl,0xf2
 102d5f2:	xlat   BYTE PTR ds:[ebx]
 102d5f3:	or     DWORD PTR [ecx+0x4d4ff066],0xc666634f
 102d5fd:	mov    ebx,0x9e313fd
 102d602:	cld    
 102d603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102d604:	jp     0x102d659
 102d606:	cmp    esp,eax
 102d608:	lea    ebp,[edx+0x4b2fca3f]
 102d60e:	(bad)  
 102d60f:	(bad)
 102d613:	push   0xffffffbb
 102d615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102d616:	in     eax,dx
 102d617:	aam    0xc5
 102d619:	je     0x102d5d3
 102d61b:	push   ds
 102d61c:	inc    ebp
 102d61d:	sbb    BYTE PTR [ebx-0x37136a6c],ch
 102d623:	mov    al,0x42
 102d625:	mov    ?,WORD PTR [eax]
 102d627:	mov    gs,WORD PTR [ecx+0x36]
 102d62a:	lahf   
 102d62b:	sahf   
 102d62c:	push   esp
 102d62d:	dec    eax
 102d62e:	pop    es
 102d62f:	sub    BYTE PTR [edi-0x53c1644],ch
 102d635:	mov    esp,0xedbc2d3
 102d63a:	jl     0x102d622
 102d63c:	cmp    DWORD PTR [edx-0x50],edi
 102d63f:	inc    esi
 102d640:	aam    0x9e
 102d642:	ror    dh,cl
 102d644:	add    dl,BYTE PTR [esi+edx*2-0x472b7ed0]
 102d64b:	(bad)  
 102d64c:	test   DWORD PTR [edi+0x2a6ad1f3],esi
 102d652:	dec    ecx
 102d653:	pop    edx
 102d654:	imul   ebp,DWORD PTR [eax-0x30],0xffffffcb
 102d658:	hlt    
 102d659:	sub    eax,0x4c9865f8
 102d65e:	test   al,0x4d
 102d660:	(bad)
 102d664:	add    dh,BYTE PTR [esi+0x7709bc6c]
 102d66a:	pop    ebp
 102d66b:	call   DWORD PTR ds:0x7f0b8400
 102d671:	in     eax,0x19
 102d673:	push   0x57fb4f8d
 102d678:	fcmovnbe st,st(6)
 102d67a:	ret    
 102d67b:	rcr    DWORD PTR [esi+0xf],1
 102d67e:	pusha  
 102d67f:	int3   
 102d680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102d681:	ret    
 102d682:	cmp    al,0x5c
 102d684:	or     eax,0x7e1f3cdf
 102d689:	xchg   esi,eax
 102d68a:	add    BYTE PTR [eax],al
 102d68c:	and    BYTE PTR [eax],al
 102d68e:	dec    ecx
 102d68f:	inc    esp
 102d690:	inc    ecx
 102d691:	push   esp
 102d692:	lahf   
 102d693:	out    0x7e,eax
 102d695:	xor    edi,DWORD PTR ds:0x9e352497
 102d69c:	call   DWORD PTR [ebp+0x3]
 102d69f:	sub    ebx,DWORD PTR [edi+0xd1c4c0b]
 102d6a5:	int3   
 102d6a6:	in     eax,dx
 102d6a7:	(bad)  
 102d6a8:	aas    
 102d6a9:	jge    0x102d6a7
 102d6ab:	and    eax,DWORD PTR [ebp-0x10]
 102d6ae:	idiv   DWORD PTR [edx+0x7e]
 102d6b1:	sahf   
 102d6b2:	fistp  QWORD PTR [esi-0x4e]
 102d6b5:	dec    ebx
 102d6b6:	pop    ecx
 102d6b7:	push   ebx
 102d6b8:	add    DWORD PTR [esi+0x26e90548],ebp
 102d6be:	push   ebx
 102d6bf:	aaa    
 102d6c0:	push   0xfffffffc
 102d6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102d6c3:	push   eax
 102d6c4:	jle    0x102d69b
 102d6c6:	ins    DWORD PTR es:[edi],dx
 102d6c7:	push   0xffffffb2
 102d6c9:	fisub  DWORD PTR [edx+esi*8-0x6b]
 102d6cd:	jno    0x102d694
 102d6cf:	scas   eax,DWORD PTR es:[edi]
 102d6d0:	add    eax,0xb25655af
 102d6d5:	add    BYTE PTR [ecx-0x6b8918ee],bl
 102d6db:	iret   
 102d6dc:	cmp    BYTE PTR [eax-0x12d9b7ab],bh
 102d6e2:	dec    esp
 102d6e3:	ss inc edx
 102d6e5:	sbb    al,0x57
 102d6e7:	stos   BYTE PTR es:[edi],al
 102d6e8:	mov    bl,0x1
 102d6ea:	rcl    DWORD PTR [eax-0x4a],1
 102d6ed:	add    edi,DWORD PTR [edi+0x417fcde2]
 102d6f3:	outs   dx,DWORD PTR ds:[esi]
 102d6f4:	jnp    0x102d6cb
 102d6f6:	mov    esi,DWORD PTR [eax]
 102d6f8:	aaa    
 102d6f9:	xchg   edi,eax
 102d6fa:	mul    BYTE PTR [ebx+0x7e1a4d2b]
 102d700:	scas   eax,DWORD PTR es:[edi]
 102d701:	mov    edx,0xff58bbf6
 102d706:	mov    ebp,0xb6f9b8f5
 102d70b:	or     eax,0x47c4f938
 102d710:	sti    
 102d711:	pop    ecx
 102d712:	xor    bl,0xfc
 102d715:	jbe    0x102d6f7
 102d717:	or     BYTE PTR [ebx+ebp*8],dl
 102d71a:	cmp    dl,BYTE PTR [ecx+0x59]
 102d71d:	cmp    BYTE PTR [edx-0x26],ah
 102d720:	adc    cl,BYTE PTR [eax+0x6b230ad6]
 102d726:	mov    edi,0x999eda83
 102d72b:	pop    ecx
 102d72c:	add    DWORD PTR [ebx],edx
 102d72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102d72f:	mov    cl,0x2f
 102d731:	push   0xffffffd2
 102d733:	enter  0x4714,0x88
 102d737:	mov    al,0x7f
 102d739:	fisttp WORD PTR [esi+0x5c]
 102d73c:	dec    ebp
 102d73e:	dec    DWORD PTR [edi]
 102d740:	add    BYTE PTR [eax-0x26],dh
 102d743:	jecxz  0x102d764
 102d745:	test   DWORD PTR ds:0x71f1ad47,esp
 102d74b:	jbe    0x102d72a
 102d74d:	push   cs
 102d74e:	mov    bh,0x7f
 102d750:	adc    esp,eax
 102d752:	fimul  DWORD PTR [ecx+0x22]
 102d755:	fldln2 
 102d757:	daa    
 102d758:	(bad)  
 102d75a:	jecxz  0x102d720
 102d75c:	xor    eax,0xe42e74a3
 102d761:	sbb    dl,BYTE PTR [ebx+eax*8]
 102d764:	mov    ds:0x7bfc0175,al
 102d769:	lock dec edi
 102d76b:	pop    ds
 102d76c:	dec    DWORD PTR [eax]
 102d76e:	outs   dx,BYTE PTR ds:[esi]
 102d76f:	cld    
 102d770:	loope  0x102d738
 102d772:	add    al,0xfe
 102d774:	in     eax,0xab
 102d776:	rcr    DWORD PTR [ebp-0x65601f0e],1
 102d77c:	out    dx,al
 102d77d:	mov    eax,ds:0xab4499d3
 102d782:	in     eax,dx
 102d783:	rcr    DWORD PTR [edi-0x2e],0x61
 102d787:	icebp  
 102d788:	xchg   edi,eax
 102d789:	je     0x102d804
 102d78b:	xor    dl,BYTE PTR [eax-0xf9dc537]
 102d791:	xchg   ebx,eax
 102d792:	push   es
 102d793:	dec    ebx
 102d794:	add    al,0x9e
 102d796:	or     al,0x6b
 102d798:	add    BYTE PTR [edx],ch
 102d79a:	sub    DWORD PTR [esi+0x647552e1],esp
 102d7a0:	pop    esi
 102d7a1:	mov    eax,ds:0x65a54248
 102d7a6:	add    ch,cl
 102d7a8:	out    dx,eax
 102d7a9:	xor    eax,eax
 102d7ab:	push   ss
 102d7ac:	loop   0x102d772
 102d7ae:	dec    ebx
 102d7af:	inc    edx
 102d7b0:	mov    cl,0x8d
 102d7b2:	xchg   ebp,eax
 102d7b3:	adc    BYTE PTR [esp+edi*2+0x35c71138],0xc7
 102d7bb:	lahf   
 102d7bc:	dec    edi
 102d7bd:	sbb    bl,dl
 102d7bf:	pop    esi
 102d7c0:	adc    dh,0xff
 102d7c3:	(bad)  
 102d7c5:	mov    bh,0x5
 102d7c7:	retf   
 102d7c8:	jne    0x102d826
 102d7ca:	xlat   BYTE PTR ds:[ebx]
 102d7cb:	lods   eax,DWORD PTR ds:[esi]
 102d7cc:	sahf   
 102d7cd:	mov    ecx,0xf73b99af
 102d7d2:	xchg   edx,eax
 102d7d3:	and    BYTE PTR [ecx],cl
 102d7d5:	lock and DWORD PTR [ebp-0x6f7dfede],eax
 102d7dc:	add    BYTE PTR [edx-0x5a],cl
 102d7df:	sub    BYTE PTR [edx],dl
 102d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102d7e2:	or     BYTE PTR [eax],ch
 102d7e4:	push   esp
 102d7e5:	lods   al,BYTE PTR ds:[esi]
 102d7e6:	clc    
 102d7e7:	adc    DWORD PTR [ecx-0x76],edx
 102d7ea:	arpl   bp,ax
 102d7ec:	(bad)  
 102d7ed:	mov    dl,0x3f
 102d7ef:	loop   0x102d845
 102d7f1:	ds repnz arpl di,ax
 102d7f5:	test   eax,0xb8a923e4
 102d7fa:	xchg   edx,eax
 102d7fb:	dec    edx
 102d7fc:	stc    
 102d7fd:	and    edx,DWORD PTR [ebp-0x7]
 102d800:	dec    ecx
 102d801:	push   ebp
 102d802:	and    ch,BYTE PTR [ebx]
 102d804:	into   
 102d805:	(bad)  
 102d806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102d807:	sub    BYTE PTR [edx+0x43b65b2c],dh
 102d80d:	mov    DWORD PTR [edx+0x5b443ca5],esi
 102d813:	(bad)  
 102d814:	and    esp,DWORD PTR [esp+eax*1-0x74dafb70]
 102d81b:	and    cl,dh
 102d81d:	and    BYTE PTR [ecx-0x6e],ch
 102d820:	xchg   edx,eax
 102d821:	clc    
 102d822:	adc    BYTE PTR [ecx+0x1],cl
 102d825:	add    al,0x8
 102d827:	adc    BYTE PTR [eax],al
 102d829:	out    dx,eax
 102d82a:	je     0x102d86a
 102d82c:	into   
 102d82d:	jmp    0xdfb24370
 102d832:	cmp    eax,0x33be1f97
 102d837:	inc    ecx
 102d838:	in     eax,0x76
 102d83a:	adc    eax,0xd39ccf70
 102d83f:	(bad)  
 102d840:	mov    ebp,0xf6bdef77
 102d845:	out    dx,al
 102d846:	fnstsw WORD PTR ds:[ebp-0x6]
 102d84a:	jge    0x102d840
 102d84c:	cli    
 102d84d:	jge    0x102d83a
 102d84f:	stc    
 102d850:	cmp    BYTE PTR [ebx+0x0],dl
 102d853:	out    dx,al
 102d854:	jp     0x102d845
 102d856:	jle    0x102d834
 102d858:	cmc    
 102d859:	fdivp  st(5),st
 102d85b:	ins    DWORD PTR es:[edi],dx
 102d85c:	sbb    DWORD PTR [ecx],ecx
 102d85e:	in     eax,dx
 102d85f:	shl    DWORD PTR [ebp-0x65],cl
 102d862:	xchg   edi,eax
 102d863:	cmp    ebp,DWORD PTR [ebx]
 102d865:	shl    cl,0xa2
 102d868:	cli    
 102d869:	xor    eax,DWORD PTR [ebp-0x2441e38b]
 102d86f:	jmp    0xc65c:0xfbb5b28a
 102d876:	cmp    ecx,DWORD PTR [edi-0x52]
 102d879:	push   esi
 102d87a:	mov    esi,0x37a1c9e0
 102d87f:	(bad)  
 102d880:	mov    BYTE PTR [ebx+0x7],ah
 102d883:	out    dx,eax
 102d884:	(bad)
 102d887:	das    
 102d888:	arpl   WORD PTR [eax],di
 102d88a:	sbb    ah,cl
 102d88c:	fucomp st(7)
 102d88e:	jg     0x102d90f
 102d890:	repz jo 0x102d90f
 102d893:	push   ss
 102d894:	loope  0x102d84b
 102d896:	inc    edi
 102d897:	sbb    DWORD PTR [esi-0x61],0xfa6b4f98
 102d89e:	fcmovnbe st,st(3)
 102d8a0:	jp     0x102d904
 102d8a2:	sbb    cl,BYTE PTR [esi]
 102d8a4:	mov    WORD PTR [ebx-0x657b7fc7],?
 102d8aa:	sub    DWORD PTR [edx],esi
 102d8ac:	pop    eax
 102d8ad:	mov    ecx,0x3e6d5815
 102d8b2:	popa   
 102d8b3:	test   ch,0xe4
 102d8b6:	stc    
 102d8b7:	sti    
 102d8b8:	(bad)  
 102d8b9:	icebp  
 102d8ba:	scas   eax,DWORD PTR es:[edi]
 102d8bb:	pop    esp
 102d8bc:	icebp  
 102d8bd:	ss or  al,0x57
 102d8c0:	inc    esi
 102d8c1:	stc    
 102d8c2:	clc    
 102d8c3:	outs   dx,BYTE PTR ds:[esi]
 102d8c4:	arpl   sp,di
 102d8c6:	(bad)  
 102d8c7:	les    ebx,FWORD PTR [ecx+edx*2]
 102d8ca:	and    eax,0x15fe6670
 102d8cf:	fdiv   QWORD PTR [ecx+eiz*2+0x55]
 102d8d3:	hlt    
 102d8d4:	fs inc eax
 102d8d6:	mov    eax,ds:0x91c36e77
 102d8db:	sub    esp,DWORD PTR [ebp+0x2f]
 102d8de:	mov    ds:0xe456f588,al
 102d8e3:	in     eax,0x3a
 102d8e5:	fst    DWORD PTR [ecx-0x2bbe1e4c]
 102d8eb:	int3   
 102d8ec:	inc    esp
 102d8ed:	outs   dx,DWORD PTR ds:[esi]
 102d8ee:	mov    edx,0x1a0486f6
 102d8f3:	xor    BYTE PTR [esi+0x5e],ah
 102d8f6:	in     al,0xb7
 102d8f8:	xchg   ecx,eax
 102d8f9:	int    0xc
 102d8fb:	mov    WORD PTR [edi],ds
 102d8fd:	cwde   
 102d8fe:	cmc    
 102d8ff:	ja     0x102d902
 102d901:	dec    eax
 102d902:	pop    edx
 102d903:	adc    esi,edx
 102d905:	sbb    BYTE PTR [ecx-0x74],bh
 102d908:	lods   eax,DWORD PTR ds:[esi]
 102d909:	loopne 0x102d8e6
 102d90b:	adc    al,0x26
 102d90d:	rcl    DWORD PTR [ebx-0x1b831aae],0x75
 102d914:	pop    esp
 102d915:	rcl    DWORD PTR [ebx-0x3],0x12
 102d919:	and    DWORD PTR [esi],edx
 102d91b:	loopne 0x102d8df
 102d91d:	scas   eax,DWORD PTR es:[edi]
 102d91e:	jl     0x102d958
 102d920:	cdq    
 102d921:	into   
 102d922:	jbe    0x102d8e4
 102d924:	les    edi,FWORD PTR [ebx]
 102d926:	cmp    ah,al
 102d928:	dec    ebx
 102d929:	scas   al,BYTE PTR es:[edi]
 102d92a:	xlat   BYTE PTR ds:[ebx]
 102d92b:	push   0xb9e57ae9
 102d930:	and    edi,eax
 102d932:	fsubrp st(1),st
 102d934:	aas    
 102d935:	pop    es
 102d936:	adc    BYTE PTR [ecx-0x29],dh
 102d939:	(bad)  
 102d93b:	or     DWORD PTR [esi+edi*2+0x7c57bc73],eax
 102d942:	cmc    
 102d943:	loope  0x102d97b
 102d945:	in     al,dx
 102d946:	in     al,dx
 102d947:	push   ebx
 102d948:	and    esi,DWORD PTR [edi+ecx*4+0x57e4443f]
 102d94f:	jle    0x102d982
 102d951:	int    0x1
 102d953:	and    al,0x13
 102d955:	imul   edi,DWORD PTR [esi],0xef471de1
 102d95b:	inc    ecx
 102d95c:	pop    eax
 102d95d:	mov    ebp,0xe8f00019
 102d962:	pop    edi
 102d963:	cld    
 102d964:	xor    DWORD PTR [esi+0x3fa3c],ecx
 102d96a:	enter  0xbfc6,0x2c
 102d96e:	(bad)  
 102d96f:	aas    
 102d970:	aaa    
 102d971:	aaa    
 102d972:	pop    es
 102d973:	test   BYTE PTR [eax+0x2],dl
 102d976:	pop    ecx
 102d977:	mov    ah,0x72
 102d979:	mul    ah
 102d97b:	pop    ds
 102d97c:	add    BYTE PTR [ebx],dh
 102d97e:	mov    esp,0x717f7319
 102d983:	aas    
 102d984:	mov    ah,BYTE PTR [eax+0xa]
 102d987:	xor    BYTE PTR [edi+0x6154a10],bl
 102d98d:	test   al,0x40
 102d98f:	mov    ds:0x2a58eb00,eax
 102d994:	dec    edi
 102d995:	in     al,0xe5
 102d997:	bound  eax,QWORD PTR [esi+eiz*1]
 102d99a:	int3   
 102d99b:	aam    0x7a
 102d99d:	imul   eax,DWORD PTR [edi],0xfffffff4
 102d9a0:	xchg   BYTE PTR [ecx+0x3f],bl
 102d9a3:	loop   0x102d98d
 102d9a5:	test   DWORD PTR [eax-0x16],esp
 102d9a8:	push   esp
 102d9a9:	ror    BYTE PTR [edi+esi*8+0x2],cl
 102d9ad:	add    BYTE PTR [edx+0x7c],ah
 102d9b0:	and    al,0x81
 102d9b2:	je     0x102da1c
 102d9b4:	arpl   WORD PTR [ecx],sp
 102d9b6:	enter  0xb950,0x5f
 102d9ba:	inc    ecx
 102d9bb:	ror    BYTE PTR [eax-0x30e7fc2e],1
 102d9c1:	or     ebx,ebx
 102d9c3:	add    esp,ebx
 102d9c5:	mov    ?,ecx
 102d9c7:	xor    al,0x52
 102d9c9:	sub    ebx,0x20de53d1
 102d9cf:	cld    
 102d9d0:	test   al,0xe2
 102d9d2:	and    eax,0x1a3ca1f0
 102d9d7:	inc    BYTE PTR [esi]
 102d9d9:	add    bh,ah
 102d9db:	iret   
 102d9dc:	mov    ebp,0xfb5fc386
 102d9e1:	and    al,0x0
 102d9e3:	loopne 0x102d9d2
 102d9e5:	aaa    
 102d9e6:	out    dx,eax
 102d9e7:	rcl    DWORD PTR [esi-0x61925155],0x9f
 102d9ee:	std    
 102d9ef:	sub    eax,DWORD PTR [ebp+esi*4-0x6a06ea9]
 102d9f6:	in     eax,0x41
 102d9f8:	test   BYTE PTR fs:[ecx],bh
 102d9fb:	retf   0x9d2b
 102d9fe:	sbb    edx,DWORD PTR [esi-0x65fdc9d9]
 102da04:	jae    0x102da06
 102da06:	xlat   BYTE PTR ds:[ebx]
 102da07:	adc    BYTE PTR [edi-0x6d4f7621],dl
 102da0d:	mov    edi,?
 102da0f:	push   ds
 102da10:	cld    
 102da11:	scas   eax,DWORD PTR es:[edi]
 102da12:	jnp    0x102da33
 102da14:	inc    esp
 102da15:	inc    esp
 102da16:	les    esi,FWORD PTR [esi+0x2b087e77]
 102da1c:	push   edi
 102da1d:	pop    esp
 102da1e:	fisttp DWORD PTR [eax+edi*8-0x53]
 102da22:	lods   al,BYTE PTR ds:[esi]
 102da23:	bound  edi,QWORD PTR [eax]
 102da25:	pop    edx
 102da26:	shl    DWORD PTR [edx-0x15],0xf9
 102da2a:	mov    eax,ebx
 102da2c:	cmp    al,0xda
 102da2e:	pop    ds
 102da2f:	xabort 0x49
 102da32:	ss (bad) 
 102da34:	imul   eax,DWORD PTR [esi-0x6e],0x4d91b27
 102da3b:	add    ebp,DWORD PTR [edx]
 102da3d:	(bad)  
 102da3e:	cli    
 102da3f:	aam    0x8f
 102da41:	test   DWORD PTR [ecx-0x5d489fd0],esp
 102da47:	sub    BYTE PTR [esi+0x39cac310],dl
 102da4d:	daa    
 102da4e:	push   cs
 102da4f:	out    0x89,eax
 102da51:	(bad)  
 102da52:	pop    esp
 102da53:	sub    al,0x19
 102da55:	outs   dx,DWORD PTR ds:[esi]
 102da56:	mov    ds:0x75827549,al
 102da5b:	mov    dl,0x28
 102da5d:	fdiv   st(5),st
 102da5f:	mul    BYTE PTR [esi]
 102da61:	or     DWORD PTR [ecx],ebx
 102da63:	mov    ah,0xa6
 102da65:	ins    DWORD PTR es:[edi],dx
 102da66:	cld    
 102da67:	ror    BYTE PTR [edi+eax*4],0x0
 102da6b:	(bad)  
 102da6d:	xchg   edx,eax
 102da6e:	shl    DWORD PTR [esi+ebp*8+0x37],1
 102da72:	addr16 hlt 
 102da74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102da75:	mov    ds:0x246fdede,al
 102da7a:	out    0x7d,eax
 102da7c:	shl    DWORD PTR [ebp-0x57],cl
 102da7f:	cmp    eax,0x874ae213
 102da84:	mov    dl,0xb2
 102da86:	pop    ss
 102da87:	jecxz  0x102da50
 102da89:	in     al,0x7c
 102da8b:	fnstsw WORD PTR [eax]
 102da8d:	nop
 102da8e:	ficom  DWORD PTR [eax]
 102da90:	inc    ebp
 102da91:	loope  0x102da88
 102da93:	or     al,0x88
 102da95:	rcr    BYTE PTR [eax],0x11
 102da98:	(bad)  
 102da99:	jle    0x102da90
 102da9b:	xchg   ebx,eax
 102da9c:	cmp    BYTE PTR [ebx-0x46],bh
 102da9f:	or     eax,0xabbaeffd
 102daa4:	leave  
 102daa5:	cmp    edi,DWORD PTR [esi+0x1d]
 102daa8:	loope  0x102da76
 102daaa:	jno    0x102dae0
 102daac:	imul   esi,edi,0x53
 102daaf:	test   DWORD PTR [ecx+0x6b],ecx
 102dab2:	and    esi,edx
 102dab4:	popa   
 102dab5:	popf   
 102dab6:	sbb    bl,bl
 102dab8:	mov    BYTE PTR [edx],0xf2
 102dabb:	xchg   ecx,eax
 102dabc:	fbstp  TBYTE PTR [ecx+0x79]
 102dabf:	aaa    
 102dac0:	ret    0xbbca
 102dac3:	add    BYTE PTR [eax],al
 102dac5:	(bad)  
 102dac6:	jle    0x102dabd
 102dac8:	push   ds
 102dac9:	cld    
 102daca:	out    dx,eax
 102dacb:	das    
 102dacc:	sbb    al,0x0
 102dace:	(bad)  
 102dacf:	les    esi,FWORD PTR [esi-0x347bc165]
 102dad5:	scas   eax,DWORD PTR es:[edi]
 102dad6:	fisttp WORD PTR [ebx+0x4632f2c1]
 102dadc:	stos   DWORD PTR es:[edi],eax
 102dadd:	sub    esi,DWORD PTR [esi]
 102dadf:	in     al,dx
 102dae0:	out    0xc5,eax
 102dae2:	out    dx,eax
 102dae3:	es (bad) 
 102dae5:	inc    esi
 102dae6:	xor    esp,ebx
 102dae8:	push   edx
 102dae9:	jecxz  0x102db1c
 102daeb:	dec    ecx
 102daec:	ret    
 102daed:	cld    
 102daee:	call   0x51aa:0xab8f1c5c
 102daf5:	adc    al,0xd
 102daf7:	and    bh,BYTE PTR [ebx-0x70]
 102dafa:	push   0xe45c8902
 102daff:	iret   
 102db00:	xchg   ebx,eax
 102db01:	mov    ecx,0xe7e5d11c
 102db06:	adc    ch,BYTE PTR [ecx]
 102db08:	push   ss
 102db09:	fs xor ebp,edi
 102db0c:	or     al,0x3a
 102db0e:	and    al,0x88
 102db10:	ret    0x2417
 102db13:	ins    BYTE PTR es:[edi],dx
 102db14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102db15:	imul   ebp,DWORD PTR [esi+0x7f],0x5a
 102db19:	imul   esp,DWORD PTR [esi-0x25],0xa8ef0b81
 102db20:	enter  0x20eb,0x69
 102db24:	cmc    
 102db25:	jge    0x102db63
 102db27:	dec    edx
 102db28:	loopne 0x102db5f
 102db2a:	pop    es
 102db2b:	mov    dh,BYTE PTR [eax+0x431156b2]
 102db31:	mov    WORD PTR [esi-0x417f64be],?
 102db37:	and    DWORD PTR [eax],esp
 102db39:	pop    ds
 102db3a:	arpl   bp,ax
 102db3c:	xor    al,0xc3
 102db3e:	jbe    0x102dbaa
 102db40:	in     al,0xbf
 102db42:	int3   
 102db43:	mov    bl,0x80
 102db45:	retf   
 102db46:	mov    edi,DWORD PTR [edi+0x75]
 102db49:	or     BYTE PTR [edi],ch
 102db4b:	cmp    eax,0x231008f3
 102db50:	jle    0x102db44
 102db52:	xchg   edi,eax
 102db53:	jle    0x102db6b
 102db55:	mov    eax,ds:0x3ff1eedf
 102db5a:	jns    0x102db0c
 102db5c:	gs scas al,BYTE PTR es:[edi]
 102db5e:	outs   dx,DWORD PTR ds:[esi]
 102db5f:	mov    ebx,ebp
 102db61:	mov    ch,0x42
 102db63:	dec    ebp
 102db64:	jg     0x102dbc9
 102db66:	cmp    ebx,DWORD PTR [eax+eiz*8]
 102db69:	mov    bh,0x0
 102db6b:	mov    ebp,0x8dd2e231
 102db70:	popf   
 102db71:	icebp  
 102db72:	jg     0x102db61
 102db74:	jae    0x102db6e
 102db76:	repnz pop ss
 102db78:	push   cs
 102db79:	add    dl,BYTE PTR [ecx]
 102db7b:	fdiv   DWORD PTR [esi-0x2d]
 102db7e:	fstp   st(0)
 102db80:	jb     0x102db5f
 102db82:	ins    DWORD PTR es:[edi],dx
 102db83:	sbb    BYTE PTR [edi+ecx*1],ch
 102db86:	fwait
 102db87:	or     DWORD PTR [edi+0x3df695e5],edi
 102db8d:	call   FWORD PTR [ecx+ebx*2+0xc9b93e4]
 102db94:	and    al,0x3
 102db96:	jp     0x102db5e
 102db98:	std    
 102db99:	pop    edx
 102db9a:	test   bh,ch
 102db9c:	and    cl,BYTE PTR [edi]
 102db9e:	and    edi,DWORD PTR [edi]
 102dba0:	adc    dl,BYTE PTR [edx-0x54d9e459]
 102dba6:	hlt    
 102dba7:	sub    DWORD PTR [edx-0x9],eax
 102dbaa:	fwait
 102dbab:	in     eax,0xaa
 102dbad:	rol    DWORD PTR [esi-0x3e6f01c7],1
 102dbb3:	xchg   edi,eax
 102dbb4:	call   0x701a:0xcda672e1
 102dbbb:	xor    DWORD PTR [edi-0x54],ebx
 102dbbe:	fwait
 102dbbf:	dec    esp
 102dbc0:	(bad)
 102dbc4:	outs   dx,DWORD PTR ds:[esi]
 102dbc5:	push   cs
 102dbc6:	test   BYTE PTR [ecx+0x6921b137],ch
 102dbcc:	jbe    0x102dc41
 102dbce:	add    ah,ah
 102dbd0:	icebp  
 102dbd1:	aam    0xa8
 102dbd3:	int3   
 102dbd4:	mov    esi,0xb536f279
 102dbd9:	arpl   WORD PTR [edx+edx*2+0x1255c62a],di
 102dbe0:	push   ebp
 102dbe1:	test   al,0xc1
 102dbe3:	add    dh,BYTE PTR [eax]
 102dbe5:	loope  0x102dc61
 102dbe7:	push   esi
 102dbe8:	fdiv   st,st(6)
 102dbea:	cmp    ebx,edx
 102dbec:	xchg   ebp,eax
 102dbed:	lea    esi,[eax+ebx*4]
 102dbf0:	loop   0x102dc67
 102dbf2:	inc    eax
 102dbf3:	dec    eax
 102dbf4:	mul    DWORD PTR [ebx-0x39]
 102dbf7:	stos   DWORD PTR es:[edi],eax
 102dbf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102dbf9:	stc    
 102dbfa:	pop    esi
 102dbfb:	sub    BYTE PTR [ebx-0x2],bh
 102dbfe:	fcomp  QWORD PTR [ecx]
 102dc00:	cmp    al,0xfe
 102dc02:	(bad)  
 102dc03:	inc    DWORD PTR [esi]
 102dc05:	add    BYTE PTR [eax+0x186ddf79],bh
 102dc0b:	mov    WORD PTR [edx-0x283875b1],ds
 102dc11:	mov    fs,WORD PTR [ecx]
 102dc13:	pusha  
 102dc14:	lods   eax,DWORD PTR ds:[esi]
 102dc15:	or     edi,ebp
 102dc17:	xor    ecx,DWORD PTR [ebp+0x2d]
 102dc1a:	xchg   ebx,eax
 102dc1b:	mov    DWORD PTR [eax-0x72],ecx
 102dc1e:	add    dl,dl
 102dc20:	push   0xffffffbf
 102dc22:	jno    0x102dc68
 102dc24:	pop    esp
 102dc25:	mov    edx,0xf3ff8c9e
 102dc2a:	clc    
 102dc2b:	repnz mov ebp,0xb0231107
 102dc31:	cmc    
 102dc32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102dc33:	mov    ebx,0x5bbae5b1
 102dc38:	fwait
 102dc39:	inc    ebp
 102dc3a:	sub    ebp,DWORD PTR ds:[ebx+0x60ad1958]
 102dc41:	test   eax,0x421efe35
 102dc46:	xchg   esi,eax
 102dc47:	gs mov cl,0xe2
 102dc4a:	mov    dl,0x14
 102dc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102dc4d:	push   ecx
 102dc4e:	neg    dl
 102dc50:	fidivr DWORD PTR [ecx+0x2d]
 102dc53:	xchg   edi,eax
 102dc54:	out    0x82,eax
 102dc56:	fdiv   DWORD PTR [eax-0x36199ee3]
 102dc5c:	inc    ebp
 102dc5d:	retf   0x67cb
 102dc60:	add    al,0x7a
 102dc62:	test   eax,0xcf465066
 102dc67:	cmp    al,0x32
 102dc69:	add    eax,0xac361cc0
 102dc6e:	pop    esi
 102dc6f:	push   eax
 102dc70:	sbb    eax,0x4c537aa
 102dc75:	pop    edi
 102dc76:	call   0x4f830579
 102dc7b:	cmp    ecx,ebp
 102dc7d:	call   0xe51b2cd2
 102dc82:	add    eax,0x8f1df004
 102dc87:	pop    ebp
 102dc88:	mov    esp,0x1bfd8142
 102dc8d:	pushf  
 102dc8e:	mov    dl,0xa9
 102dc90:	xchg   edi,eax
 102dc91:	js     0x102dcd5
 102dc93:	xchg   ecx,eax
 102dc94:	cmp    eax,DWORD PTR [edi+ecx*4+0x61f062d5]
 102dc9b:	aam    0xe6
 102dc9d:	ss sub al,0x13
 102dca0:	gs fucomi st,st(2)
 102dca3:	jmp    0xc523311a
 102dca8:	sub    dl,BYTE PTR [esi]
 102dcaa:	sbb    BYTE PTR [ebx-0x4078ee76],ah
 102dcb0:	(bad)  
 102dcb1:	pop    edi
 102dcb2:	jno    0x102dc95
 102dcb4:	cld    
 102dcb5:	pop    ecx
 102dcb6:	or     al,0x57
 102dcb8:	inc    esi
 102dcb9:	js     0x102dc82
 102dcbb:	fidivr WORD PTR [ebx]
 102dcbd:	call   0x3c2e:0x11d7e38c
 102dcc4:	(bad)  
 102dcc5:	jl     0x102dc4b
 102dcc7:	push   edi
 102dcc8:	stos   BYTE PTR es:[edi],al
 102dcc9:	sub    al,0x6b
 102dccb:	mov    edi,0x36b54bfe
 102dcd0:	fidivr WORD PTR [edi]
 102dcd2:	outs   dx,BYTE PTR cs:[esi]
 102dcd4:	retf   
 102dcd5:	(bad)  
 102dcd6:	jg     0x102dcd0
 102dcd8:	imul   esi,edi,0xffffffe2
 102dcdb:	mov    esi,0x10041c2f
 102dce0:	mov    cl,0x75
 102dce2:	iret   
 102dce3:	pop    es
 102dce4:	jno    0x102dccf
 102dce6:	fld    TBYTE PTR [esi-0x3b]
 102dce9:	or     BYTE PTR [edi+edi*2-0x17f968f],0xfc
 102dcf1:	cmp    al,0x7a
 102dcf3:	mov    eax,ds:0x2a050e67
 102dcf8:	in     al,0x4b
 102dcfa:	sub    eax,edx
 102dcfc:	jae    0x102dd01
 102dcfe:	mov    ds:0x6913961c,al
 102dd03:	inc    esi
 102dd04:	jbe    0x102dd2f
 102dd06:	cmp    al,0x77
 102dd08:	jmp    0x295e:0xa2cd79ae
 102dd0f:	push   ebx
 102dd10:	hlt    
 102dd11:	mov    DWORD PTR [edx+0x74],edi
 102dd14:	(bad)  
 102dd15:	test   al,0xb5
 102dd17:	ins    BYTE PTR es:[edi],dx
 102dd18:	in     al,0x1b
 102dd1a:	xchg   edx,eax
 102dd1b:	pop    ecx
 102dd1c:	sbb    eax,0x3ac8ba57
 102dd21:	in     al,0x1
 102dd23:	popf   
 102dd24:	repz pop ebx
 102dd26:	les    esi,FWORD PTR [edx]
 102dd28:	cmc    
 102dd29:	xor    al,0xd3
 102dd2b:	in     eax,dx
 102dd2c:	shr    BYTE PTR [edx],0x4
 102dd2f:	jle    0x102dd8d
 102dd31:	js     0x102dd89
 102dd33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102dd34:	mov    bh,0xb2
 102dd36:	mov    al,0x27
 102dd38:	sub    BYTE PTR [eax],dl
 102dd3a:	cmp    eax,esi
 102dd3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102dd3d:	nop
 102dd3e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102dd40:	aaa    
 102dd41:	fcmovu st,st(7)
 102dd43:	inc    esi
 102dd44:	loope  0x102dd16
 102dd46:	add    DWORD PTR [edi-0x4b85fdb2],0xcc2f6df2
 102dd50:	aad    0x43
 102dd52:	inc    edi
 102dd53:	mov    bh,BYTE PTR [ecx+eax*1]
 102dd56:	js     0x102dd49
 102dd58:	jmp    0x9afc55a0
 102dd5d:	outs   dx,DWORD PTR ds:[esi]
 102dd5e:	add    esi,DWORD PTR [ecx]
 102dd60:	loop   0x102dd89
 102dd62:	jle    0x102dd55
 102dd64:	and    ebx,DWORD PTR [ebp-0x52]
 102dd67:	push   edi
 102dd68:	pop    ds
 102dd69:	xchg   BYTE PTR [ecx+0x37ed67f1],bl
 102dd6f:	or     al,0x26
 102dd71:	je     0x102dd60
 102dd73:	out    0x0,al
 102dd75:	bound  ebx,QWORD PTR [eax+0x44]
 102dd78:	pop    eax
 102dd79:	ins    DWORD PTR es:[edi],dx
 102dd7a:	push   cs
 102dd7b:	or     edi,DWORD PTR [ecx]
 102dd7d:	cld    
 102dd7e:	cmc    
 102dd7f:	das    
 102dd80:	loopne 0x102dd40
 102dd82:	aas    
 102dd83:	cmp    DWORD PTR [eax],eax
 102dd85:	and    dl,ah
 102dd87:	repnz fstp QWORD PTR [edi]
 102dd8a:	les    edx,FWORD PTR [esi+0x5fe31aeb]
 102dd90:	pop    ebp
 102dd91:	pop    ecx
 102dd92:	lds    ebp,FWORD PTR [eax-0x2c]
 102dd95:	jle    0x102dd49
 102dd97:	imul   edi,DWORD PTR [esi-0x41689b07],0xfffffffd
 102dd9e:	pusha  
 102dd9f:	dec    edi
 102dda0:	sbb    ebp,ecx
 102dda2:	ja     0x102ddaa
 102dda4:	dec    edi
 102dda5:	iret   
 102dda6:	push   eax
 102dda7:	xchg   edx,eax
 102dda8:	jl     0x102ddb4
 102ddaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102ddab:	out    dx,al
 102ddac:	cmp    al,0x2c
 102ddae:	add    ebp,DWORD PTR [ebp+0x3ad74327]
 102ddb4:	sub    al,BYTE PTR [esi-0x22f31797]
 102ddba:	or     eax,0xac5fa743
 102ddbf:	add    ebp,DWORD PTR [edi+eiz*8+0x3e]
 102ddc3:	repz mov eax,esp
 102ddc6:	sub    edx,DWORD PTR [ecx-0x1996e14e]
 102ddcc:	aaa    
 102ddcd:	sub    DWORD PTR [ecx+0xa369b94],0xffffffcc
 102ddd4:	out    0x54,al
 102ddd6:	loopne 0x102dda8
 102ddd8:	ret    
 102ddd9:	cmp    BYTE PTR [esi-0x6b5c2111],ah
 102dddf:	pusha  
 102dde0:	(bad)  [ecx-0x9]
 102dde3:	pop    ds
 102dde4:	jl     0x102dde6
 102dde6:	pop    es
 102dde7:	pop    ds
 102dde8:	jle    0x102ddfa
 102ddea:	inc    edi
 102ddeb:	mov    ds,WORD PTR [edi]
 102dded:	ror    DWORD PTR [ebp-0x109d89c5],0x2d
 102ddf4:	jnp    0x102dda7
 102ddf6:	out    dx,eax
 102ddf7:	mov    ?,WORD PTR [ebp-0x24]
 102ddfa:	scas   eax,DWORD PTR es:[edi]
 102ddfb:	inc    esi
 102ddfc:	test   al,0x35
 102ddfe:	sbb    esp,ebp
 102de00:	jnp    0x102de5b
 102de02:	jmp    DWORD PTR [edx]
 102de04:	jne    0x102de68
 102de06:	hlt    
 102de07:	push   ecx
 102de08:	cmp    BYTE PTR [ebp+0x48],dh
 102de0b:	out    dx,al
 102de0c:	cwde   
 102de0d:	dec    edx
 102de0e:	(bad)  
 102de0f:	xor    dl,BYTE PTR [eax+0x2adedfa5]
 102de15:	inc    ecx
 102de16:	sahf   
 102de17:	mov    al,ds:0xfce214f2
 102de1c:	stc    
 102de1d:	xor    edi,DWORD PTR [eax-0x4]
 102de20:	sbb    ecx,ebp
 102de22:	icebp  
 102de23:	fidivr DWORD PTR [edi]
 102de25:	mov    dh,0xef
 102de27:	jbe    0x102de35
 102de29:	inc    esi
 102de2a:	in     eax,dx
 102de2b:	push   ds
 102de2c:	call   edi
 102de2e:	mov    fs,WORD PTR [ecx]
 102de30:	jg     0x102de6c
 102de32:	fwait
 102de33:	lods   eax,DWORD PTR ds:[esi]
 102de34:	sbb    BYTE PTR [ebp+0x73],0x32
 102de38:	inc    BYTE PTR [eax-0x64]
 102de3b:	les    ecx,FWORD PTR [eax-0x47b86428]
 102de41:	mov    ah,0x59
 102de43:	cmp    al,0xf5
 102de45:	in     al,0xc3
 102de47:	jg     0x102ddcf
 102de49:	sti    
 102de4a:	(bad)  
 102de4b:	in     al,0x0
 102de4d:	bound  eax,QWORD PTR [ebx+eiz*2-0x4]
 102de51:	xlat   BYTE PTR ds:[ebx]
 102de52:	mov    esi,0x80ff18c7
 102de57:	mov    edi,0x43e497d7
 102de5c:	xchg   dl,cl
 102de5e:	xchg   BYTE PTR [ebx+ebx*4-0x34d4f75a],bl
 102de65:	mov    edi,DWORD PTR [ecx+0x16]
 102de68:	shl    DWORD PTR [edi+0x59],0x51
 102de6c:	jge    0x102de9a
 102de6e:	pop    edi
 102de6f:	adc    eax,eax
 102de71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102de72:	cli    
 102de73:	ror    DWORD PTR ds:0x96794c13,1
 102de79:	jg     0x102de88
 102de7b:	and    al,0x48
 102de7d:	push   esp
 102de7e:	inc    ebp
 102de7f:	cmp    bh,cl
 102de81:	std    
 102de82:	and    ebp,esi
 102de84:	imul   ebx,esi,0x4c
 102de87:	push   edi
 102de88:	mov    bh,BYTE PTR [esp+ecx*1]
 102de8b:	xor    ebp,DWORD PTR [eax]
 102de8d:	ror    bl,1
 102de8f:	jne    0x102de9b
 102de91:	ret    0x2aab
 102de94:	pop    esp
 102de95:	add    BYTE PTR [edx+0x746cb56f],cl
 102de9b:	call   0x70ff:0xefe076d9
 102dea2:	std    
 102dea3:	in     eax,dx
 102dea4:	sar    BYTE PTR [edi-0x1d],0xda
 102dea8:	pop    ebp
 102dea9:	fdiv   DWORD PTR [edx+0x6cee3b75]
 102deaf:	mov    bh,0x3
 102deb1:	aas    
 102deb2:	jle    0x102dea0
 102deb4:	or     BYTE PTR [eax],dl
 102deb6:	fwait
 102deb7:	in     eax,dx
 102deb8:	rcr    BYTE PTR [edx],0xea
 102debb:	scas   eax,DWORD PTR es:[edi]
 102debc:	xchg   esp,ebp
 102debe:	outs   dx,BYTE PTR ds:[esi]
 102debf:	test   al,0xe1
 102dec1:	fs scas al,BYTE PTR es:[edi]
 102dec3:	mov    eax,ds:0x3a21917f
 102dec8:	aas    
 102dec9:	pop    ecx
 102deca:	pop    ebx
 102decb:	sbb    al,0x80
 102decd:	mov    BYTE PTR [ebp+0x22220072],dh
 102ded3:	push   ds
 102ded4:	sti    
 102ded5:	cli    
 102ded6:	daa    
 102ded7:	icebp  
 102ded8:	(bad)  
 102ded9:	stc    
 102deda:	mov    bl,0x18
 102dedc:	scas   al,BYTE PTR es:[edi]
 102dedd:	lods   al,BYTE PTR ds:[esi]
 102dede:	loopne 0x102defd
 102dee0:	mov    bh,0xdd
 102dee2:	(bad)  
 102dee3:	cmp    al,0x18
 102dee5:	mov    edi,0x2bc6f08e
 102deea:	enter  0xfafb,0xfd
 102deee:	fsub   DWORD PTR [edx+0x540e947d]
 102def4:	mov    BYTE PTR [eax-0xa],ch
 102def7:	div    bh
 102def9:	adc    DWORD PTR [esi],ebp
 102defb:	mov    ebp,0xf2700013
 102df00:	mov    ecx,0x1fe2f8c3
 102df05:	jl     0x102df0c
 102df07:	mov    BYTE PTR [ecx],dl
 102df09:	pop    ebx
 102df0a:	outs   dx,BYTE PTR ds:[esi]
 102df0b:	cld    
 102df0c:	icebp  
 102df0d:	xabort 0x47
 102df10:	(bad)  
 102df11:	cld    
 102df12:	repz popf 
 102df14:	icebp  
 102df15:	out    0x6a,eax
 102df17:	sbb    al,0xc1
 102df19:	adc    DWORD PTR fs:[edi],0xf
 102df1d:	pop    ebx
 102df1e:	int3   
 102df1f:	adc    eax,eax
 102df21:	adc    eax,0x47532971
 102df26:	sbb    DWORD PTR cs:[eax+edi*1-0x75],ebx
 102df2b:	sbb    BYTE PTR [edx+0x4800ee29],dh
 102df31:	inc    ecx
 102df32:	mov    edx,0xc76a196
 102df37:	divps  xmm3,XMMWORD PTR [esi-0x39]
 102df3b:	mov    eax,0xf7571799
 102df40:	xchg   edx,eax
 102df41:	pushf  
 102df42:	push   edx
 102df43:	mov    ebp,0xbd48501e
 102df48:	pop    ss
 102df49:	in     eax,dx
 102df4a:	mov    cl,0xe0
 102df4c:	rcr    edx,cl
 102df4e:	push   cs
 102df4f:	jl     0x102df31
 102df51:	rol    BYTE PTR [ecx-0x6c67e344],1
 102df57:	mov    cs,ecx
 102df59:	push   esp
 102df5a:	xchg   ecx,eax
 102df5b:	int3   
 102df5c:	ret    
 102df5d:	idiv   dh
 102df5f:	cwde   
 102df60:	push   ds
 102df61:	mov    ecx,0x241f6f72
 102df66:	das    
 102df67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102df68:	push   ebp
 102df69:	aad    0xcc
 102df6b:	push   ecx
 102df6c:	xor    eax,0xa67a1aa1
 102df71:	cli    
 102df72:	add    esi,eax
 102df74:	in     al,dx
 102df75:	ja     0x102df66
 102df77:	ret    
 102df78:	retf   
 102df79:	iret   
 102df7a:	jle    0x102df83
 102df7c:	mov    BYTE PTR [ecx],dl
 102df7e:	jg     0x102df7b
 102df80:	pop    ss
 102df81:	sub    ah,dh
 102df83:	aas    
 102df84:	cmc    
 102df85:	sbb    eax,0xd4fdb3e4
 102df8a:	dec    edx
 102df8b:	int3   
 102df8c:	jbe    0x102df51
 102df8e:	fsubr  DWORD PTR [ecx+0x58]
 102df91:	mov    BYTE PTR [eax],al
 102df93:	cli    
 102df94:	shl    BYTE PTR ds:0xc9c1fccd,0xe7
 102df9b:	push   cs
 102df9c:	jecxz  0x102dff1
 102df9e:	push   ecx
 102dfa0:	test   DWORD PTR [ecx],0xdd57cb00
 102dfa6:	test   bl,cl
 102dfa8:	scas   al,BYTE PTR es:[edi]
 102dfa9:	jg     0x102dfda
 102dfab:	xchg   esi,eax
 102dfac:	xchg   BYTE PTR [ebx-0x54],al
 102dfaf:	mov    WORD PTR [esi+0x4a],ss
 102dfb2:	iret   
 102dfb3:	iret   
 102dfb4:	jl     0x102e00b
 102dfb6:	cwde   
 102dfb7:	push   ebp
 102dfb8:	xor    bl,dl
 102dfba:	mov    al,0xbe
 102dfbc:	dec    eax
 102dfbd:	in     al,0x4d
 102dfbf:	lea    ecx,[esp+eax*2]
 102dfc2:	and    BYTE PTR [esi-0x63],bl
 102dfc5:	cmp    cl,BYTE PTR [ecx-0x47c45866]
 102dfcb:	or     al,0xd1
 102dfcd:	out    0x81,eax
 102dfcf:	lods   al,BYTE PTR ds:[esi]
 102dfd0:	xchg   edi,eax
 102dfd1:	int3   
 102dfd2:	mov    edx,0x98900f0b
 102dfd7:	push   ds
 102dfd8:	push   cs
 102dfd9:	out    dx,eax
 102dfda:	fidivr DWORD PTR [ebx+0x5c]
 102dfdd:	mov    esi,0x7a3878ea
 102dfe2:	je     0x102dfce
 102dfe4:	jbe    0x102dfcd
 102dfe6:	cmp    al,0x26
 102dfe8:	adc    DWORD PTR [ebp-0x235d16ff],edi
 102dfee:	push   cs
 102dfef:	in     al,dx
 102dff0:	lea    ebx,[ebp-0x7d53b776]
 102dff6:	int3   
 102dff7:	sbb    bl,BYTE PTR [esi+0x31db5846]
 102dffd:	push   ss
 102dffe:	lods   eax,DWORD PTR ds:[esi]
 102dfff:	and    DWORD PTR [ebx-0x5e7e6a2c],esp
 102e005:	push   0xffffffe1
 102e007:	mov    dh,0x2e
 102e009:	(bad)  
 102e00a:	fucom  st(4)
 102e00c:	leave  
 102e00d:	inc    edx
 102e00e:	add    al,0x5e
 102e010:	jnp    0x102e007
 102e012:	xchg   DWORD PTR [eax-0x6],edi
 102e015:	fistp  DWORD PTR [edi+0x42]
 102e018:	mov    WORD PTR [ecx],ss
 102e01a:	sti    
 102e01b:	aas    
 102e01c:	hlt    
 102e01d:	push   ebx
 102e01e:	sbb    BYTE PTR [edx+ebx*8-0x15801c3],cl
 102e025:	adc    ah,BYTE PTR [ecx-0x33eba239]
 102e02b:	lahf   
 102e02c:	out    0x9a,al
 102e02e:	sub    eax,0x2317fdb4
 102e033:	jo     0x102dffe
 102e035:	in     eax,dx
 102e036:	add    BYTE PTR [eax-0x79c2306d],al
 102e03c:	(bad)  
 102e03e:	dec    edi
 102e03f:	jg     0x102e041
 102e041:	add    BYTE PTR [eax-0x42],bl
 102e044:	push   0xf
 102e046:	mov    dh,0xde
 102e048:	hlt    
 102e049:	popa   
 102e04a:	or     al,0x5a
 102e04c:	jecxz  0x102e0ad
 102e04e:	sbb    DWORD PTR [ebp+0x7b7a97d2],ebp
 102e054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102e055:	icebp  
 102e056:	jo     0x102e0d7
 102e058:	js     0x102e062
 102e05a:	fwait
 102e05b:	cmp    al,0xfe
 102e05d:	and    al,0x2f
 102e05f:	push   0x8bed5045
 102e064:	scas   al,BYTE PTR es:[edi]
 102e065:	push   ecx
 102e066:	mov    ecx,0xb13d9ec5
 102e06b:	dec    eax
 102e06c:	xchg   ecx,eax
 102e06d:	add    DWORD PTR [edi],ecx
 102e06f:	stos   DWORD PTR es:[edi],eax
 102e070:	mov    dl,0x51
 102e072:	dec    esi
 102e073:	jmp    0x8831:0xe6bf948f
 102e07a:	pop    ss
 102e07b:	in     eax,0xf5
 102e07d:	dec    ebp
 102e07e:	icebp  
 102e07f:	and    al,0x19
 102e081:	push   0xffffffaf
 102e083:	movlps QWORD PTR [edi],xmm7
 102e086:	xor    eax,0x74ad3287
 102e08b:	shr    DWORD PTR [ebp+0x7],1
 102e08e:	fidivr WORD PTR [ecx+0x1e1677d]
 102e094:	pop    esp
 102e095:	lds    edx,FWORD PTR [ebx]
 102e097:	and    eax,0xec169da8
 102e09c:	sub    eax,0x3c7fc91c
 102e0a1:	(bad)  
 102e0a2:	xchg   esi,eax
 102e0a3:	add    BYTE PTR [ecx],ah
 102e0a5:	or     BYTE PTR [eax+0x34b95950],al
 102e0ab:	aaa    
 102e0ac:	xor    ecx,DWORD PTR [eax+0x25]
 102e0af:	jo     0x102e03a
 102e0b1:	adc    DWORD PTR [edi-0x2],eax
 102e0b4:	iret   
 102e0b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102e0b6:	jo     0x102e099
 102e0b8:	cld    
 102e0b9:	pop    ecx
 102e0ba:	pop    esp
 102e0bb:	jno    0x102e08a
 102e0bd:	push   ebp
 102e0be:	js     0x102e08b
 102e0c0:	mov    ds,WORD PTR [ebp-0x50f429b3]
 102e0c6:	and    al,ah
 102e0c8:	inc    edx
 102e0c9:	sbb    edi,edx
 102e0cb:	push   edi
 102e0cc:	xchg   edx,eax
 102e0cd:	jno    0x102e14e
 102e0cf:	lods   eax,DWORD PTR ds:[esi]
 102e0d0:	and    eax,0xe33ad78e
 102e0d5:	jg     0x102e0d5
 102e0d7:	jno    0x102e155
 102e0d9:	cli    
 102e0da:	mov    ds:0xaf0ff18d,eax
 102e0df:	fiadd  DWORD PTR [ebx-0x7bc18453]
 102e0e5:	inc    ecx
 102e0e6:	sti    
 102e0e7:	mov    cl,0xce
 102e0e9:	retw   0x806f
 102e0ed:	mov    ecx,0x148479b9
 102e0f2:	test   BYTE PTR [edi+0x74],0x99
 102e0f6:	sub    bl,al
 102e0f8:	sbb    eax,0xecbd8147
 102e0fd:	push   0xe24f69af
 102e102:	mov    al,fs:0x2a44a1a0
 102e108:	sbb    ebp,ecx
 102e10a:	sbb    DWORD PTR [edi],esi
 102e10c:	pusha  
 102e10d:	dec    esi
 102e10e:	std    
 102e10f:	dec    ecx
 102e110:	(bad)
 102e114:	repnz lds esp,FWORD PTR [ecx]
 102e117:	scas   al,BYTE PTR es:[edi]
 102e118:	mov    es,WORD PTR ds:0x804dcf67
 102e11e:	mov    bl,0xde
 102e120:	dec    edx
 102e121:	mov    esi,0x39d63ea2
 102e126:	loope  0x102e171
 102e128:	xchg   DWORD PTR [ebx],ebx
 102e12a:	adc    ecx,DWORD PTR [edi]
 102e12c:	dec    edx
 102e12d:	fld    st(0)
 102e12f:	je     0x102e102
 102e131:	ins    DWORD PTR es:[edi],dx
 102e132:	pop    es
 102e133:	fidivr WORD PTR [ebx-0x35]
 102e136:	fisub  WORD PTR [edx-0x4843e993]
 102e13c:	lock (bad) 
 102e13e:	sti    
 102e13f:	sbb    edx,DWORD PTR [ecx+eax*4-0x3c]
 102e143:	mov    bl,0x64
 102e145:	inc    ebp
 102e146:	test   al,0x69
 102e148:	cmp    BYTE PTR [edx+0x1dadadce],bh
 102e14e:	push   eax
 102e14f:	outs   dx,DWORD PTR ds:[esi]
 102e150:	out    0xa1,eax
 102e152:	sti    
 102e153:	mov    bl,0x87
 102e155:	out    dx,eax
 102e156:	ret    
 102e157:	leave  
 102e158:	pop    ss
 102e159:	pop    DWORD PTR [ecx]
 102e15b:	add    dh,bh
 102e15d:	out    0x87,al
 102e15f:	out    dx,eax
 102e160:	into   
 102e161:	test   ebx,0x39b27d9
 102e167:	cmp    bh,BYTE PTR [edx+edx*2-0x74aed43a]
 102e16e:	jecxz  0x102e1a7
 102e170:	or     BYTE PTR [ebx+0x1a],0xf9
 102e174:	pushf  
 102e175:	jl     0x102e175
 102e177:	sub    BYTE PTR [esi],bh
 102e179:	std    
 102e17a:	rcr    edi,1
 102e17c:	pop    es
 102e17d:	adc    BYTE PTR [ecx],dh
 102e17f:	mov    esp,0xfe31b772
 102e184:	xchg   ebp,eax
 102e185:	xchg   ebp,eax
 102e186:	push   ebp
 102e187:	sub    al,0xd
 102e189:	xchg   esi,eax
 102e18b:	clc    
 102e18c:	cmp    eax,0xc35bd736
 102e191:	loopne 0x102e20d
 102e193:	sub    al,0x27
 102e195:	push   0xffffffc8
 102e197:	in     al,0x52
 102e199:	and    ebx,ecx
 102e19b:	mov    ds:0x9ec62a07,eax
 102e1a0:	pushf  
 102e1a1:	mov    WORD PTR [edi-0x5],es
 102e1a4:	push   edi
 102e1a5:	mov    edi,0x540d90af
 102e1aa:	(bad)  
 102e1ae:	and    eax,DWORD PTR [ebx]
 102e1b0:	dec    ebx
 102e1b1:	bound  ecx,QWORD PTR [ecx-0x46]
 102e1b4:	lock cdq 
 102e1b6:	jmp    0xce81:0x4f53b49d
 102e1bd:	retf   
 102e1be:	push   edi
 102e1bf:	pop    ebp
 102e1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102e1c1:	adc    BYTE PTR [ebp+0x669ca71b],ah
 102e1c7:	mov    dl,0x1d
 102e1c9:	clc    
 102e1ca:	pop    ds
 102e1cb:	inc    esi
 102e1cd:	jg     0x102e157
 102e1cf:	push   esi
 102e1d1:	lahf   
 102e1d2:	cld    
 102e1d3:	or     bl,dh
 102e1d5:	sbb    BYTE PTR [edi-0x262361ad],dl
 102e1db:	fistp  QWORD PTR [edx-0x18]
 102e1de:	pop    ebx
 102e1df:	js     0x102e1d1
 102e1e1:	push   eax
 102e1e2:	mov    bl,0x1d
 102e1e4:	js     0x102e1cd
 102e1e6:	mov    ?,WORD PTR ds:0xe6eefbd8
 102e1ec:	sub    eax,0xbfaf24c0
 102e1f1:	fisub  WORD PTR [ecx-0x6127baf4]
 102e1f7:	outs   dx,BYTE PTR ds:[esi]
 102e1f8:	dec    esi
 102e1f9:	or     bl,bh
 102e1fb:	push   ebx
 102e1fc:	sbb    DWORD PTR [eax+0x4c222107],edx
 102e202:	adc    al,0x20
 102e204:	cmc    
 102e205:	jae    0x102e1bb
 102e207:	mov    al,ds:0xa9cce3ae
 102e20c:	xchg   edi,eax
 102e20d:	lock hlt 
 102e20f:	ja     0x102e20f
 102e211:	pop    es
 102e212:	add    BYTE PTR [eax-0x21],ah
 102e215:	fnstsw WORD PTR [edi]
 102e217:	test   ecx,edi
 102e219:	lds    esp,FWORD PTR [ebp-0x10562e1a]
 102e21f:	and    dh,ah
 102e221:	push   ss
 102e222:	test   al,0x60
 102e224:	add    eax,0xb8e40004
 102e229:	js     0x102e2a7
 102e22b:	push   ds
 102e22c:	pop    eax
 102e22d:	ins    DWORD PTR es:[edi],dx
 102e22e:	or     DWORD PTR ds:[esi-0xe],esi
 102e232:	stc    
 102e233:	arpl   ax,di
 102e235:	mov    ebp,0x88067e8f
 102e23a:	shl    BYTE PTR [eax-0x25],0x1e
 102e23e:	ins    BYTE PTR es:[edi],dx
 102e23f:	fnsave [ebx+0x77]
 102e242:	arpl   sp,di
 102e244:	mov    ds:0x3dabf695,eax
 102e249:	inc    ebx
 102e24a:	int3   
 102e24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102e24c:	dec    edi
 102e24d:	jbe    0x102e210
 102e24f:	inc    esi
 102e250:	and    al,0x48
 102e252:	mov    esp,0xcd4a7790
 102e257:	push   esp
 102e258:	and    ch,dl
 102e25a:	out    dx,al
 102e25b:	and    dl,BYTE PTR [eax+0x358b91b1]
 102e261:	jb     0x102e24c
 102e263:	les    esp,FWORD PTR [esi+0x26]
 102e266:	enter  0xa30a,0x8d
 102e26a:	push   edx
 102e26b:	scas   eax,DWORD PTR es:[edi]
 102e26c:	add    BYTE PTR ds:0xf00722a8,0x8d
 102e273:	mov    eax,gs
 102e275:	mov    esi,0x754a051b
 102e27a:	sahf   
 102e27b:	xlat   BYTE PTR ds:[ebx]
 102e27c:	jo     0x102e23b
 102e27e:	cmp    al,0x3
 102e280:	(bad)  
 102e281:	cmp    dl,BYTE PTR [eax]
 102e283:	sub    ah,BYTE PTR [edi-0x3bef0c8b]
 102e289:	or     al,0x59
 102e28b:	test   dh,ah
 102e28d:	imul   esp,DWORD PTR [ecx+ebx*4-0xa11fad3],0xd300b99b
 102e298:	loope  0x102e2c7
 102e29a:	repz leave 
 102e29c:	cmp    edi,DWORD PTR [edi+ebp*8+0x7fd8fd8e]
 102e2a3:	(bad)  
 102e2a4:	(bad)  
 102e2a5:	cmp    al,0x5e
 102e2a7:	outs   dx,WORD PTR ds:[esi]
 102e2a9:	xchg   edx,eax
 102e2aa:	cmp    ecx,DWORD PTR [edx+0x75308d]
 102e2b0:	mov    ds:0xd20807b8,eax
 102e2b5:	jecxz  0x102e2ec
 102e2b7:	in     eax,0x36
 102e2b9:	mov    DWORD PTR [ebx+edx*4-0x6e1bfc57],edi
 102e2c0:	cmp    BYTE PTR [edi-0x16],ch
 102e2c3:	push   0x191b87e2
 102e2c8:	(bad)  
 102e2c9:	mov    BYTE PTR [ebx],ah
 102e2cb:	idiv   DWORD PTR [edi+0xa]
 102e2ce:	outs   dx,DWORD PTR ds:[esi]
 102e2cf:	pushf  
 102e2d0:	aas    
 102e2d1:	mov    ecx,ebx
 102e2d3:	scas   eax,DWORD PTR es:[edi]
 102e2d4:	mov    edx,0xbed96f1a
 102e2d9:	mov    ds:0x2bc2ffa9,eax
 102e2de:	or     BYTE PTR [ecx],ah
 102e2e0:	lods   eax,DWORD PTR ds:[esi]
 102e2e1:	div    bl
 102e2e3:	mov    ah,0x41
 102e2e5:	sub    BYTE PTR ds:0x68ff3c68,cl
 102e2eb:	aaa    
 102e2ec:	add    al,ah
 102e2ee:	in     al,0xb
 102e2f0:	(bad)  
 102e2f1:	icebp  
 102e2f2:	cdq    
 102e2f3:	(bad)  
 102e2f5:	or     al,0x0
 102e2f7:	pusha  
 102e2f8:	jo     0x102e2df
 102e2fa:	outs   dx,BYTE PTR ds:[esi]
 102e2fb:	ins    BYTE PTR es:[edi],dx
 102e2fc:	fnstsw WORD PTR [ebp+0x77]
 102e2ff:	out    0xf9,eax
 102e301:	inc    edi
 102e302:	in     eax,dx
 102e303:	daa    
 102e304:	mov    ebx,0xf6af9ae6
 102e309:	cwde   
 102e30a:	cmp    eax,0x125649fd
 102e30f:	push   esi
 102e310:	fwait
 102e311:	xor    BYTE PTR [esi],dl
 102e313:	popf   
 102e314:	pop    ss
 102e315:	aaa    
 102e316:	pop    eax
 102e317:	push   ss
 102e318:	mov    ebx,0xbe2f66fb
 102e31d:	sbb    bh,BYTE PTR [ebx+ebx*1]
 102e320:	dec    ecx
 102e321:	in     al,dx
 102e322:	and    BYTE PTR [edi],0x68
 102e325:	push   DWORD PTR [ecx-0x23]
 102e328:	mov    al,BYTE PTR [ecx-0x40ab8794]
 102e32e:	fstp   TBYTE PTR [edi-0x26]
 102e331:	push   edi
 102e332:	adc    eax,0xdb8c2fe3
 102e337:	mov    eax,ds:0xba60e55d
 102e33c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102e33d:	jmp    0x9d60:0x528c4a91
 102e344:	cmp    al,0x89
 102e346:	mov    al,0xf1
 102e348:	imul   esp,DWORD PTR [esi+0x8e181db],0xf458d54
 102e352:	std    
 102e353:	hlt    
 102e354:	or     al,0x59
 102e356:	push   ecx
 102e357:	fpatan 
 102e359:	or     BYTE PTR [ebp-0x28edf7f2],al
 102e35f:	in     al,0x6e
 102e361:	retf   0xbd73
 102e364:	dec    ecx
 102e365:	jmp    0x744f8791
 102e36a:	in     al,dx
 102e36b:	clc    
 102e36c:	dec    edx
 102e36d:	popf   
 102e36e:	(bad)  
 102e36f:	std    
 102e370:	(bad)  
 102e371:	dec    BYTE PTR [edi+ebp*4]
 102e374:	mov    esi,0xc4401c70
 102e379:	sti    
 102e37a:	ds cld 
 102e37c:	shr    DWORD PTR [esi+0x534febcc],0xe8
 102e383:	pop    ds
 102e384:	dec    eax
 102e385:	shl    DWORD PTR [eax+edx*8],1
 102e388:	ins    BYTE PTR es:[edi],dx
 102e389:	sar    eax,cl
 102e38b:	sbb    al,0xb0
 102e38d:	mov    esp,0x710de80b
 102e392:	out    0xc4,al
 102e394:	div    eax
 102e396:	cdq    
 102e397:	(bad)  
 102e399:	cmp    eax,0x6d831100
 102e39e:	mov    ebx,0xfeec571
 102e3a3:	bound  esi,QWORD PTR [eax]
 102e3a5:	pop    esp
 102e3a6:	(bad)  
 102e3a7:	jo     0x102e34e
 102e3a9:	icebp  
 102e3aa:	cld    
 102e3ab:	ret    
 102e3ac:	in     eax,0x65
 102e3ae:	int3   
 102e3af:	int    0xb5
 102e3b1:	lahf   
 102e3b2:	jmp    0x1cd569a5
 102e3b7:	stos   BYTE PTR es:[edi],al
 102e3b8:	xor    dl,BYTE PTR [edx+0x35fb33ec]
 102e3be:	and    esp,DWORD PTR [edx+0x57]
 102e3c1:	stos   BYTE PTR es:[edi],al
 102e3c2:	mov    dl,0xe2
 102e3c4:	mov    WORD PTR [edi+esi*1-0x49],ds
 102e3c8:	fwait
 102e3c9:	jmp    0xf583:0xecd6f368
 102e3d0:	ret    0xca69
 102e3d3:	fmul   QWORD PTR [eax+0x7496bf94]
 102e3d9:	sbb    bh,al
 102e3db:	adc    ecx,DWORD PTR [ecx-0x271da912]
 102e3e1:	adc    DWORD PTR [edx+0x6957bd79],0xd8ba6bcb
 102e3eb:	pop    ss
 102e3ec:	xor    bl,al
 102e3ee:	xor    al,0xa3
 102e3f0:	or     BYTE PTR [eax+0x2bd8dae1],ah
 102e3f6:	jnp    0x102e37f
 102e3f8:	xchg   esp,eax
 102e3f9:	lods   eax,DWORD PTR ds:[esi]
 102e3fa:	std    
 102e3fb:	das    
 102e3fc:	add    bl,ch
 102e3fe:	xchg   DWORD PTR [esi+0x1a],ebp
 102e401:	mov    dl,0x56
 102e403:	and    BYTE PTR [eax+0x748a5c98],0x2d
 102e40a:	jns    0x102e3c5
 102e40c:	and    esi,esi
 102e40e:	push   cs
 102e40f:	cmp    ch,BYTE PTR [esi+0x2b]
 102e412:	mov    esp,0x2e2e0256
 102e417:	dec    edi
 102e418:	push   ds
 102e419:	in     eax,0xd5
 102e41b:	push   edi
 102e41c:	sahf   
 102e41d:	lds    edx,FWORD PTR [ebx+0xf]
 102e420:	fld    QWORD PTR [ebx-0x6010a71a]
 102e426:	(bad)  
 102e427:	cld    
 102e428:	loop   0x102e48c
 102e42a:	push   ebx
 102e42b:	out    dx,al
 102e42c:	aam    0x77
 102e42e:	adc    DWORD PTR [edx-0x75],edi
 102e431:	in     al,0xf2
 102e433:	sub    al,BYTE PTR [esi-0x61]
 102e436:	sar    al,cl
 102e438:	sbb    al,0x30
 102e43a:	(bad)  
 102e43c:	jl     0x102e3f3
 102e43e:	out    0xdc,eax
 102e440:	dec    ecx
 102e441:	jl     0x102e431
 102e443:	ja     0x102e483
 102e445:	or     eax,DWORD PTR [eax]
 102e447:	pop    eax
 102e448:	mov    esp,0xfc63477c
 102e44d:	xor    DWORD PTR [esi],0xffffffec
 102e450:	pop    ds
 102e451:	xor    eax,0xc6cbebdf
 102e456:	das    
 102e457:	pop    edi
 102e458:	in     eax,dx
 102e459:	sub    DWORD PTR [esp+eax*8+0x470a8dd1],eax
 102e460:	repnz and eax,0x4226d7d9
 102e466:	aad    0x83
 102e468:	es dec edi
 102e46a:	aas    
 102e46b:	adc    DWORD PTR [ebx+edx*4-0x6bfc9fcd],ebp
 102e472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102e473:	std    
 102e474:	xchg   esi,eax
 102e475:	and    eax,DWORD PTR [edx]
 102e477:	mov    ds:0x9618f4a9,al
 102e47c:	cs (bad) 
 102e47e:	xor    eax,0x47543f30
 102e483:	xlat   BYTE PTR es:[ebx]
 102e485:	add    DWORD PTR [ebx],ebp
 102e487:	in     eax,0xb5
 102e489:	test   al,0x53
 102e48b:	sbb    esi,DWORD PTR [eax-0x80]
 102e48e:	xor    dl,bl
 102e490:	hlt    
 102e491:	inc    DWORD PTR [ebx+0x4]
 102e494:	pusha  
 102e495:	je     0x102e4e0
 102e497:	mov    eax,ds:0x74bbc29e
 102e49c:	pop    edi
 102e49d:	mov    DWORD PTR [ebx-0x1dabebe7],0x208a582a
 102e4a7:	fsubr  QWORD PTR [eax+0x3a]
 102e4aa:	pop    edx
 102e4ab:	add    eax,0x1eef6f52
 102e4b0:	sbb    BYTE PTR [ecx+0x53804386],ah
 102e4b6:	fstp   QWORD PTR [edx+edx*4-0x6c]
 102e4ba:	xor    eax,0xd1ffa136
 102e4bf:	pop    es
 102e4c0:	jle    0x102e4d9
 102e4c2:	adc    eax,eax
 102e4c4:	mov    ch,0x37
 102e4c6:	in     al,dx
 102e4c7:	shl    BYTE PTR ds:0x5937b7db,0xce
 102e4ce:	cmp    eax,0xbf6fd087
 102e4d3:	lds    esp,FWORD PTR [edi-0x2c]
 102e4d6:	mov    bl,0xfd
 102e4d8:	stos   DWORD PTR es:[edi],eax
 102e4d9:	hlt    
 102e4da:	scas   eax,DWORD PTR es:[edi]
 102e4db:	popf   
 102e4dc:	add    eax,DWORD PTR [esi+0x3fe31b3b]
 102e4e2:	jmp    FWORD PTR [edx]
 102e4e4:	ds sti 
 102e4e6:	mov    cl,0x8f
 102e4e8:	jecxz  0x102e4be
 102e4ea:	mov    edi,edx
 102e4ec:	xor    BYTE PTR [edi],dh
 102e4ee:	fmul   QWORD PTR [edx+0x1dfd76cb]
 102e4f4:	sub    al,0xd
 102e4f6:	xchg   BYTE PTR [ebp-0x32a2a019],cl
 102e4fc:	lahf   
 102e4fd:	jmp    0xeaa29af0
 102e502:	into   
 102e503:	mov    ds:0xc26a4f24,al
 102e508:	jbe    0x102e500
 102e50a:	cli    
 102e50b:	push   cs
 102e50c:	pop    edi
 102e50d:	mov    edx,0x18b33282
 102e512:	mov    ebx,0xc9e43afc
 102e517:	adc    DWORD PTR [esi+0x28],ebx
 102e51a:	gs pop es
 102e51c:	fwait
 102e51d:	(bad)
 102e520:	push   ebx
 102e521:	mov    esi,0xdb6ccb62
 102e526:	mov    esi,0x4af79002
 102e52b:	xlat   BYTE PTR ds:[ebx]
 102e52c:	test   al,0x0
 102e52e:	in     eax,0x29
 102e530:	cmp    al,0x3f
 102e532:	repz inc ebp
 102e534:	in     eax,0xd8
 102e536:	push   ecx
 102e537:	cdq    
 102e538:	inc    ebp
 102e539:	push   eax
 102e53a:	add    al,BYTE PTR [ecx+ecx*8-0x57]
 102e53e:	cwde   
 102e53f:	sbb    eax,0x5dd7947e
 102e544:	scas   al,BYTE PTR es:[edi]
 102e545:	dec    esi
 102e546:	dec    ecx
 102e547:	pop    edi
 102e548:	jno    0x102e5b9
 102e54a:	je     0x102e4e6
 102e54c:	fstp   DWORD PTR [esi+0x0]
 102e54f:	imul   BYTE PTR [eax+0x357f2ded]
 102e555:	pop    ss
 102e556:	or     ebp,DWORD PTR [ebx]
 102e558:	or     DWORD PTR [ebp-0x5c4b6e1a],esi
 102e55e:	inc    ecx
 102e55f:	or     ah,BYTE PTR [edx]
 102e561:	jne    0x102e578
 102e563:	test   al,0xf
 102e565:	pop    edi
 102e566:	inc    ecx
 102e567:	jb     0x102e524
 102e569:	mov    ds:0xf1769920,al
 102e56e:	adc    bl,BYTE PTR [ecx+eiz*4+0x21]
 102e572:	mov    ebp,0xbfa7fe35
 102e577:	std    
 102e578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102e579:	cmp    bl,dh
 102e57b:	mov    ds:0xb81103ef,eax
 102e580:	cmc    
 102e581:	add    edi,DWORD PTR [edi]
 102e583:	fidivr WORD PTR ds:0xf362f0bf
 102e589:	sbb    eax,0x3738ae3e
 102e58e:	sub    BYTE PTR [edx+0x31],bl
 102e591:	ds (bad) 
 102e594:	outs   dx,DWORD PTR ds:[esi]
 102e595:	push   0x3e14ff8d
 102e59a:	sti    
 102e59b:	mov    cl,0x4f
 102e59d:	loopne 0x102e573
 102e59f:	mov    ebx,edx
 102e5a1:	call   0xae8444d5
 102e5a6:	out    dx,eax
 102e5a7:	cli    
 102e5a8:	add    eax,0x34b6570c
 102e5ad:	pop    edi
 102e5ae:	jmp    0x8cb8:0x7960ad1d
 102e5b5:	cmp    edi,ecx
 102e5b7:	clc    
 102e5b8:	push   ebp
 102e5b9:	push   es
 102e5ba:	les    esp,FWORD PTR [ebx-0x5e6dc036]
 102e5c0:	push   0x248854d4
 102e5c5:	cmp    eax,0x7354160b
 102e5ca:	push   ds
 102e5cb:	in     eax,dx
 102e5cc:	pop    edi
 102e5cd:	jle    0x102e57d
 102e5cf:	into   
 102e5d0:	or     dl,0x5
 102e5d3:	mov    al,ds:0x65e77d7c
 102e5d8:	pop    ss
 102e5d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102e5da:	push   eax
 102e5db:	test   eax,0xec5030d2
 102e5e0:	outs   dx,DWORD PTR ds:[esi]
 102e5e1:	sub    BYTE PTR [ebx+0x59487ad8],dh
 102e5e7:	xor    al,0x6f
 102e5e9:	test   BYTE PTR [ebx+0x3f],dh
 102e5ec:	add    DWORD PTR [ebx+0x383111ea],esp
 102e5f2:	in     eax,dx
 102e5f3:	adc    eax,0x2ecd2980
 102e5f8:	add    dl,BYTE PTR [eax]
 102e5fa:	test   BYTE PTR [esi-0x7],al
 102e5fd:	mov    bl,0xfb
 102e5ff:	ror    DWORD PTR [eax],0xaa
 102e602:	iret   
 102e603:	popf   
 102e604:	mov    esp,0x52a9bbc9
 102e609:	out    0x90,al
 102e60b:	aad    0xb3
 102e60d:	(bad)  
 102e60e:	idiv   BYTE PTR [ecx-0x67594509]
 102e614:	and    al,0xc
 102e616:	neg    BYTE PTR [ecx-0x73]
 102e619:	sub    BYTE PTR [ebx+0x20],ah
 102e61c:	add    DWORD PTR [eax+0x4707e231],ecx
 102e622:	mov    edi,0xaee2200a
 102e627:	lahf   
 102e628:	std    
 102e629:	jo     0x102e69e
 102e62b:	retf   0xd00e
 102e62e:	lods   al,BYTE PTR ds:[esi]
 102e62f:	imul   bl
 102e631:	xchg   ebx,eax
 102e632:	icebp  
 102e633:	fwait
 102e634:	jae    0x102e5f7
 102e636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102e637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102e638:	icebp  
 102e639:	cmp    DWORD PTR [eax-0x50],esp
 102e63c:	cmp    eax,0x7e1fff1b
 102e641:	in     al,dx
 102e642:	jecxz  0x102e67c
 102e644:	jge    0x102e628
 102e646:	adc    al,0xe6
 102e648:	xchg   esi,eax
 102e649:	scas   eax,DWORD PTR es:[edi]
 102e64a:	shl    ch,0x37
 102e64d:	std    
 102e64e:	cmp    al,0x96
 102e650:	xchg   esi,eax
 102e651:	das    
 102e652:	(bad)
 102e655:	test   al,0x59
 102e657:	loope  0x102e610
 102e659:	pop    esp
 102e65a:	sbb    bh,BYTE PTR [edi-0x1e]
 102e65d:	aaa    
 102e65e:	jns    0x102e6d2
 102e660:	ss je  0x102e69a
 102e663:	je     0x102e6ca
 102e665:	sub    al,0x8a
 102e667:	inc    esp
 102e668:	sahf   
 102e669:	jp     0x102e6ea
 102e66b:	out    0x5a,eax
 102e66d:	stos   DWORD PTR es:[edi],eax
 102e66e:	push   ecx
 102e66f:	mov    ds:0xff04cb74,eax
 102e674:	cdq    
 102e675:	add    DWORD PTR [edx+eax*8],esp
 102e678:	(bad)  
 102e679:	in     al,dx
 102e67a:	xor    al,0xb4
 102e67c:	out    dx,eax
 102e67d:	call   0xa1bcdb5c
 102e682:	xchg   esi,eax
 102e683:	mov    ebx,0xc77f8721
 102e688:	retf   0xa973
 102e68b:	fild   WORD PTR [ebx+edx*1-0x80]
 102e68f:	jns    0x102e616
 102e691:	cmp    dh,cl
 102e693:	push   0xba29a23b
 102e698:	getsec 
 102e69a:	ss int 0xec
 102e69d:	sub    eax,0x3f21140
 102e6a2:	lds    edi,FWORD PTR [eax+0x389eb00e]
 102e6a8:	pop    edi
 102e6a9:	sar    BYTE PTR ds:0xdf7c0f83,cl
 102e6af:	or     DWORD PTR [ebx+0x6b],edx
 102e6b2:	ret    0xf75
 102e6b5:	sbb    ah,BYTE PTR [ecx-0x237dd98]
 102e6bb:	(bad)  
 102e6bc:	enter  0x81e1,0x6
 102e6c0:	cmp    ah,al
 102e6c2:	dec    ecx
 102e6c3:	je     0x102e662
 102e6c5:	js     0x102e6c5
 102e6c7:	sub    dh,dl
 102e6c9:	cs pushf 
 102e6cb:	inc    ebp
 102e6cc:	add    al,0xb0
 102e6ce:	cmc    
 102e6cf:	call   0xb073:0x7b9974b7
 102e6d6:	xchg   esi,eax
 102e6d7:	out    0x0,al
 102e6d9:	inc    eax
 102e6da:	inc    eax
 102e6db:	adc    esi,esi
 102e6dd:	mov    bh,0xc6
 102e6df:	mov    edi,0xfe34fe76
 102e6e4:	call   0xa8056628
 102e6e9:	dec    edi
 102e6ea:	sahf   
 102e6eb:	(bad)  
 102e6ec:	fdivr  st(0),st
 102e6ee:	or     bl,BYTE PTR [esi+esi*2-0x2d]
 102e6f2:	iret   
 102e6f3:	popa   
 102e6f4:	cmp    dl,bl
 102e6f6:	xchg   edx,eax
 102e6f7:	mov    edi,0x2e1c3bd4
 102e6fc:	arpl   WORD PTR [ecx+0x3ba07e35],sp
 102e702:	les    edx,FWORD PTR [ebx-0x7e]
 102e705:	xchg   esi,eax
 102e706:	xchg   edx,eax
 102e707:	daa    
 102e708:	(bad)  
 102e709:	in     eax,dx
 102e70a:	mov    al,0x5b
 102e70c:	pop    ebp
 102e70d:	aad    0xc6
 102e70f:	jne    0x102e702
 102e711:	add    DWORD PTR [eax-0x2682420e],0xffffff8c
 102e718:	in     eax,dx
 102e719:	iret   
 102e71a:	call   0x4312:0xb81e2647
 102e721:	push   edi
 102e722:	xor    al,0x7f
 102e724:	or     al,0x70
 102e726:	cdq    
 102e727:	out    0x55,eax
 102e729:	imul   ebx,DWORD PTR [eax+eiz*2-0x15379b7d],0xffffffb0
 102e731:	int    0x19
 102e733:	add    eax,0x2def6022
 102e738:	xchg   ebx,eax
 102e739:	retf   
 102e73a:	pop    ebx
 102e73b:	es js  0x102e7b8
 102e73e:	imul   eax,edx,0x4b8db332
 102e744:	rol    DWORD PTR [ecx-0x6c43e8bd],0x10
 102e74b:	xchg   ebx,eax
 102e74c:	xor    bh,BYTE PTR [edx]
 102e74e:	popf   
 102e74f:	cwde   
 102e750:	cmp    bl,bh
 102e752:	inc    esp
 102e753:	adc    eax,0xf406fc62
 102e758:	mov    ecx,0x78aebe69
 102e75d:	icebp  
 102e75e:	outs   dx,BYTE PTR ds:[esi]
 102e75f:	jg     0x102e763
 102e761:	dec    esp
 102e762:	scas   eax,DWORD PTR es:[edi]
 102e763:	(bad)
 102e766:	test   al,0x3d
 102e768:	mov    ds:0xca4f29fb,eax
 102e76d:	pop    ds
 102e76e:	and    ecx,DWORD PTR [esi+0x3c]
 102e771:	fild   QWORD PTR [esi+eiz*2-0x26]
 102e775:	stc    
 102e776:	scas   al,BYTE PTR es:[edi]
 102e777:	ja     0x102e7ef
 102e779:	cmc    
 102e77a:	lahf   
 102e77b:	jge    0x102e797
 102e77d:	stc    
 102e77e:	xchg   ebp,eax
 102e77f:	pop    edi
 102e780:	popa   
 102e781:	cld    
 102e782:	lods   eax,DWORD PTR ds:[esi]
 102e783:	ss test eax,edx
 102e786:	mov    esp,0xdf5c1bea
 102e78b:	sbb    bh,bh
 102e78d:	sbb    esp,edi
 102e78f:	loope  0x102e800
 102e791:	jg     0x102e795
 102e793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102e794:	dec    esi
 102e795:	sahf   
 102e796:	inc    esi
 102e797:	mov    edi,0xa41fe35
 102e79c:	sti    
 102e79d:	(bad)  [ebx+0x161617fb]
 102e7a3:	shr    DWORD PTR [ebx+0x3f],1
 102e7a6:	fst    DWORD PTR [ebp+0x67f8f0aa]
 102e7ac:	pop    ecx
 102e7ad:	push   ss
 102e7ae:	add    al,cl
 102e7b0:	sahf   
 102e7b1:	aas    
 102e7b2:	cmp    eax,0x5727e897
 102e7b7:	shl    DWORD PTR [ebp-0x3f],0xb6
 102e7bb:	popa   
 102e7bc:	sbb    BYTE PTR [ecx],0xe5
 102e7bf:	pop    edi
 102e7c0:	out    dx,eax
 102e7c1:	mov    al,ds:0xf840c297
 102e7c6:	cmp    dh,BYTE PTR [ebp-0x4c377525]
 102e7cc:	gs push esi
 102e7ce:	adc    eax,0xce3cc9d
 102e7d3:	mov    ecx,0x88167a0d
 102e7d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102e7d9:	add    bh,ah
 102e7db:	test   DWORD PTR [esi-0x2d],eax
 102e7de:	cs inc edi
 102e7e0:	cwde   
 102e7e1:	mov    DWORD PTR [esi],ebp
 102e7e3:	inc    edi
 102e7e4:	aaa    
 102e7e5:	xor    ch,BYTE PTR [eax-0x5b]
 102e7e8:	jbe    0x102e7c0
 102e7ea:	jno    0x102e812
 102e7ec:	sbb    ebx,DWORD PTR [ecx-0x7bfeec9a]
 102e7f2:	sbb    BYTE PTR [eax],0x23
 102e7f5:	int3   
 102e7f6:	xor    ah,BYTE PTR [eax]
 102e7f8:	pop    es
 102e7f9:	push   esi
 102e7fa:	pop    ds
 102e7fb:	clc    
 102e7fc:	(bad)  
 102e7fd:	std    
 102e7fe:	cmp    BYTE PTR [eax-0x18],bh
 102e801:	and    BYTE PTR [esi+0x3b14713e],cl
 102e807:	mov    bh,0xef
 102e809:	les    ebp,FWORD PTR [ebp-0x13]
 102e80c:	jbe    0x102e7ee
 102e80e:	loop   0x102e7e5
 102e810:	adc    al,0xdb
 102e812:	dec    esp
 102e813:	adc    bh,BYTE PTR [esi-0x1165161a]
 102e819:	cmp    cl,BYTE PTR [edi+0x1]
 102e81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102e81d:	mov    esp,0xf9cdeb95
 102e822:	cmp    eax,0x7bcd296f
 102e827:	sub    DWORD PTR [ebp+0x70],ebp
 102e82a:	add    ah,BYTE PTR [edx]
 102e82c:	scas   al,BYTE PTR es:[edi]
 102e82d:	fnstcw WORD PTR [esi+0x5d]
 102e830:	push   edi
 102e831:	data16 jno 0x102e84f
 102e834:	lock cli 
 102e836:	mov    bl,0x64
 102e838:	cld    
 102e839:	in     al,dx
 102e83a:	cmc    
 102e83b:	xchg   ebx,eax
 102e83c:	test   BYTE PTR [ecx+edx*1-0x42f7d405],0x1
 102e844:	(bad)  
 102e845:	cs pushf 
 102e847:	lds    ebx,FWORD PTR [edi]
 102e849:	std    
 102e84a:	xchg   edi,eax
 102e84b:	ffreep st(1)
 102e84d:	jmp    0x20d38f65
 102e852:	pop    esp
 102e853:	mov    cs,ebx
 102e855:	idiv   ah
 102e857:	std    
 102e858:	(bad)  
 102e859:	repz mov bh,0x9f
 102e85c:	jmp    0x607a167f
 102e861:	jmp    0xce28:0xba7f31e5
 102e868:	inc    edx
 102e869:	sub    BYTE PTR [ecx],cl
 102e86b:	xor    eax,0x81c85f86
 102e870:	in     al,0x6a
 102e872:	in     al,0xad
 102e874:	int3   
 102e875:	mov    ecx,DWORD PTR [edx+eiz*1-0x4b764dd6]
 102e87c:	sub    DWORD PTR [ebx-0x606b7a5d],ecx
 102e882:	call   0xb8425a90
 102e887:	shl    DWORD PTR [esi-0x62a0351b],cl
 102e88d:	cmp    BYTE PTR [edx+0x67],0x21
 102e891:	cmp    ebp,ebx
 102e893:	sub    esi,esp
 102e895:	cmp    BYTE PTR [edi+edi*4+0x2f2944d3],0x47
 102e89d:	aas    
 102e89e:	mov    dl,0xc1
 102e8a0:	xchg   ebx,eax
 102e8a1:	repz lock fidiv WORD PTR [esp+ecx*2]
 102e8a6:	xor    ecx,ebp
 102e8a8:	ins    BYTE PTR es:[edi],dx
 102e8a9:	cmp    esi,eax
 102e8ab:	jae    0x102e8dc
 102e8ad:	scas   eax,DWORD PTR es:[edi]
 102e8ae:	mov    edi,0xebdaf81d
 102e8b3:	jbe    0x102e896
 102e8b5:	mov    dl,0x2b
 102e8b7:	mov    bh,0x63
 102e8b9:	fucomip st,st(3)
 102e8bb:	int    0x76
 102e8bd:	loopne 0x102e8e2
 102e8bf:	(bad)  
 102e8c0:	(bad)  
 102e8c1:	and    BYTE PTR [edx],al
 102e8c3:	fdiv   DWORD PTR [edi+0x7b]
 102e8c6:	pop    es
 102e8c7:	add    ch,BYTE PTR [esi-0x25564a1e]
 102e8cd:	pop    ecx
 102e8ce:	in     al,dx
 102e8cf:	int    0xa2
 102e8d1:	repz pushf 
 102e8d3:	outs   dx,DWORD PTR ds:[esi]
 102e8d4:	and    al,0xe5
 102e8d6:	bound  ecx,QWORD PTR [edi+0x4dc994ef]
 102e8dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102e8dd:	cmp    al,0x8c
 102e8df:	cld    
 102e8e0:	add    DWORD PTR [eax],ebx
 102e8e2:	scas   eax,DWORD PTR es:[edi]
 102e8e3:	inc    ebp
 102e8e4:	les    edi,FWORD PTR [eax]
 102e8e6:	inc    esi
 102e8e7:	add    al,0xf0
 102e8e9:	repnz repz das 
 102e8ec:	je     0x102e931
 102e8ee:	sbb    dh,0x0
 102e8f1:	sbb    BYTE PTR [edi-0x2bf80bf2],bh
 102e8f7:	es push edi
 102e8f9:	xor    BYTE PTR [esi-0x14],al
 102e8fc:	or     eax,0xc1af1611
 102e901:	js     0x102e8f0
 102e903:	add    bh,dh
 102e905:	clc    
 102e906:	mov    bh,0x3f
 102e908:	mov    ss,ebx
 102e90a:	daa    
 102e90b:	sbb    cl,bh
 102e90d:	mov    edi,0x3047f765
 102e912:	push   0xb4657f8d
 102e917:	mov    al,cl
 102e919:	test   al,0xf1
 102e91b:	cld    
 102e91c:	std    
 102e91d:	jle    0x102e8d2
 102e91f:	jnp    0x102e951
 102e921:	sbb    DWORD PTR [edx+0x20],ecx
 102e924:	cmp    cl,BYTE PTR [edx+0x1f2a4b45]
 102e92a:	loop   0x102e97b
 102e92c:	jno    0x102e95c
 102e92e:	les    edi,FWORD PTR [edx-0x74d7666f]
 102e934:	mov    WORD PTR [ebp-0x594edc73],es
 102e93a:	outs   dx,DWORD PTR ds:[esi]
 102e93b:	gs cmp al,0x2f
 102e93e:	ins    BYTE PTR es:[edi],dx
 102e93f:	push   ds
 102e940:	or     cl,BYTE PTR ds:0xa6f669a6
 102e946:	inc    edx
 102e947:	xchg   ebx,eax
 102e948:	test   eax,0xa8028bdf
 102e94d:	aas    
 102e94e:	mov    ebp,eax
 102e950:	push   edx
 102e951:	mov    ds:0xc96e5716,al
 102e956:	push   0xe6bf6d83
 102e95b:	or     BYTE PTR [edx+0x35520473],cl
 102e961:	ins    DWORD PTR es:[edi],dx
 102e962:	mov    edi,0x6c9187b8
 102e967:	jo     0x102e923
 102e969:	call   0xf941ed24
 102e96e:	lock add esp,ebp
 102e971:	fistp  QWORD PTR [ebx+0x427103af]
 102e977:	into   
 102e978:	loop   0x102e96f
 102e97a:	cmovl  ebx,DWORD PTR [edi]
 102e97d:	xchg   edi,eax
 102e97e:	test   al,0xee
 102e980:	js     0x102e99d
 102e982:	add    BYTE PTR [esi+0x62],dh
 102e985:	test   al,0xe6
 102e987:	aad    0x60
 102e989:	repz cwde 
 102e98b:	inc    edi
 102e98c:	jmp    0x5c97:0x6fada5d
 102e993:	add    eax,DWORD PTR [eax+eiz*8-0x77]
 102e997:	mov    edi,0xbf6f147c
 102e99c:	in     eax,0x96
 102e99e:	scas   al,BYTE PTR es:[edi]
 102e99f:	clc    
 102e9a0:	loop   0x102e9fd
 102e9a2:	adc    DWORD PTR [esi],ebp
 102e9a4:	mov    esp,0x5a0400
 102e9a9:	add    al,0x0
 102e9ab:	jecxz  0x102e9a0
 102e9ad:	mov    ch,bh
 102e9af:	push   ebp
 102e9b0:	test   ch,al
 102e9b2:	imul   eax,DWORD PTR [eax],0xffffff8c
 102e9b5:	icebp  
 102e9b6:	pop    ss
 102e9b7:	lahf   
 102e9b8:	mov    ebx,0x9e4ea717
 102e9bd:	inc    edx
 102e9be:	pop    eax
 102e9bf:	pop    eax
 102e9c0:	shl    DWORD PTR [ebp-0x45],0x3f
 102e9c4:	and    BYTE PTR [ebp-0x50d3e92f],0xa4
 102e9cb:	scas   eax,DWORD PTR es:[edi]
 102e9cc:	div    BYTE PTR [esi+ebx*4-0x6061b041]
 102e9d3:	call   0x5a590f38
 102e9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102e9d9:	mov    al,0x95
 102e9db:	pushf  
 102e9dc:	test   eax,0x8ebe7acb
 102e9e1:	and    ah,BYTE PTR [ebx+0x2667e560]
 102e9e7:	pusha  
 102e9e8:	and    ecx,edi
 102e9ea:	pop    eax
 102e9eb:	out    0x1e,al
 102e9ed:	mov    al,ds:0xa1315190
 102e9f2:	out    0xf5,al
 102e9f4:	stos   DWORD PTR es:[edi],eax
 102e9f5:	adc    BYTE PTR [edi+edx*8],0x67
 102e9f9:	adc    al,BYTE PTR [edi+0x2c]
 102e9fc:	dec    esi
 102e9fd:	pop    ebx
 102e9fe:	sbb    cl,BYTE PTR ds:0x9180e499
 102ea04:	(bad)  
 102ea06:	inc    ebx
 102ea07:	cld    
 102ea08:	jmp    0x18ccbb8
 102ea0d:	ret    
 102ea0e:	inc    esp
 102ea0f:	jnp    0x102e991
 102ea11:	aaa    
 102ea12:	gs add al,0xb8
 102ea15:	call   0x7c21edd0
 102ea1a:	repnz cwde 
 102ea1c:	inc    ebp
 102ea1d:	jmp    0x102ea5f
 102ea1f:	popf   
 102ea20:	sar    BYTE PTR ds:0xce0ebb10,0xe1
 102ea27:	xchg   esi,eax
 102ea28:	shl    BYTE PTR [ebx+edi*1-0x3db9d045],0x6
 102ea30:	xor    ch,BYTE PTR [ecx]
 102ea32:	mov    ebp,0x5d18d019
 102ea37:	mov    cl,0x1d
 102ea39:	adc    DWORD PTR [ecx],edx
 102ea3b:	addr16 dec esi
 102ea3d:	popf   
 102ea3e:	ret    0x93e9
 102ea41:	daa    
 102ea42:	xor    BYTE PTR [edx-0x34d92d1c],bh
 102ea48:	cld    
 102ea49:	gs dec ebp
 102ea4b:	add    al,0x70
 102ea4d:	out    0x29,al
 102ea4f:	ficom  DWORD PTR [esi]
 102ea51:	fld    DWORD PTR [edi]
 102ea53:	xchg   esi,eax
 102ea54:	fisttp WORD PTR [esi-0x1a803bec]
 102ea5a:	mov    edi,0x1ea783df
 102ea5f:	cmp    eax,DWORD PTR [esi-0x5a3fa030]
 102ea65:	mov    ebx,0xe8e2c6ee
 102ea6a:	shl    dh,cl
 102ea6c:	in     al,dx
 102ea6d:	(bad)  
 102ea6e:	out    0x63,al
 102ea70:	popf   
 102ea71:	repz or ecx,DWORD PTR [ebx+0x5f77eb98]
 102ea78:	jmp    0xb453:0x4b733135
 102ea7f:	aas    
 102ea80:	or     eax,0xb5a8ac8f
 102ea85:	arpl   bp,cx
 102ea87:	dec    ebp
 102ea88:	jle    0x102ea80
 102ea8a:	jle    0x102ea9a
 102ea8c:	call   0x9025e72b
 102ea91:	sbb    BYTE PTR [ebx-0x7ab43d98],bh
 102ea97:	daa    
 102ea98:	lods   al,BYTE PTR ds:[esi]
 102ea99:	sbb    BYTE PTR [edi+0x4275f1e7],ah
 102ea9f:	mov    bh,0x6
 102eaa1:	push   0x40437945
 102eaa6:	test   eax,0x2946591b
 102eaab:	dec    ebx
 102eaac:	sub    esp,DWORD PTR [ebx]
 102eaae:	push   es
 102eaaf:	ds mov esi,0xbbb8d40c
 102eab5:	push   edx
 102eab6:	push   eax
 102eab7:	js     0x102eb1b
 102eab9:	sbb    BYTE PTR [esi-0x48d7459a],0x3
 102eac0:	pop    ss
 102eac1:	fmulp  st(4),st
 102eac3:	push   0xfdf49766
 102eac8:	imul   ebp,DWORD PTR [esi],0xffffff80
 102eacb:	adc    dh,BYTE PTR [ebp+0x1d488fcd]
 102ead1:	cmp    BYTE PTR [ecx-0x68],ch
 102ead4:	nop
 102ead5:	cmp    dl,BYTE PTR [edi-0x68875d70]
 102eadb:	popf   
 102eadc:	jg     0x102eae5
 102eade:	int3   
 102eadf:	das    
 102eae0:	cs arpl bp,si
 102eae3:	stos   BYTE PTR es:[edi],al
 102eae4:	ja     0x102eac7
 102eae6:	in     al,0xf
 102eae8:	mov    esi,0xf97d6f8d
 102eaed:	iret   
 102eaee:	icebp  
 102eaef:	sbb    DWORD PTR [edi+0x695748fb],0xf3d7906f
 102eaf9:	imul   ebp,DWORD PTR [ebx+0x5f],0xffffffb9
 102eafd:	out    0x73,eax
 102eaff:	js     0x102eaeb
 102eb01:	mov    cl,0xe3
 102eb03:	or     ch,bh
 102eb05:	add    eax,0xeffdbcac
 102eb0a:	popa   
 102eb0b:	jo     0x102eaf6
 102eb0d:	pop    ebx
 102eb0e:	mov    cl,0xbc
 102eb10:	cmp    al,0xc2
 102eb12:	retf   0x2aea
 102eb15:	push   es
 102eb16:	retf   
 102eb17:	retf   
 102eb18:	pop    eax
 102eb19:	ins    BYTE PTR es:[edi],dx
 102eb1a:	daa    
 102eb1b:	cld    
 102eb1c:	sub    dh,0x4
 102eb1f:	pop    edi
 102eb20:	mov    BYTE PTR [edx+ebp*4-0x3f],cl
 102eb24:	mov    edi,DWORD PTR [esi]
 102eb26:	outs   dx,DWORD PTR ds:[esi]
 102eb27:	(bad)  
 102eb28:	(bad)  
 102eb29:	jge    0x102eb8a
 102eb2b:	dec    ebp
 102eb2c:	stc    
 102eb2d:	int    0x4
 102eb2f:	mov    eax,ds:0x47f99c03
 102eb34:	dec    edx
 102eb35:	add    al,0x28
 102eb37:	sbb    bh,BYTE PTR [ebp+0x10]
 102eb3a:	stos   DWORD PTR es:[edi],eax
 102eb3b:	mov    dl,BYTE PTR ss:[ebx]
 102eb3e:	arpl   si,si
 102eb40:	retf   0xebe8
 102eb43:	mov    ebp,0x8547b46a
 102eb48:	cdq    
 102eb49:	dec    edi
 102eb4a:	(bad)  
 102eb4b:	pshufw mm7,QWORD PTR ds:[eax],0x9f
 102eb50:	push   cs
 102eb51:	add    eax,0x9caeb659
 102eb56:	or     ebp,DWORD PTR [edi+0x52]
 102eb59:	jmp    0x47e1d269
 102eb5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102eb5f:	mov    ebp,DWORD PTR [esi+0x3b]
 102eb62:	lock lods eax,DWORD PTR ds:[esi]
 102eb64:	mov    bh,0xec
 102eb66:	jne    0x102eafd
 102eb68:	ret    0x70a0
 102eb6b:	and    al,0xa3
 102eb6d:	daa    
 102eb6e:	and    esi,DWORD PTR [ebp-0x69]
 102eb71:	add    DWORD PTR [ebx],edi
 102eb73:	ret    
 102eb74:	push   es
 102eb75:	test   eax,0xd8ed0dce
 102eb7a:	jecxz  0x102eb17
 102eb7c:	idiv   BYTE PTR [eax+0x21eefd10]
 102eb82:	mov    al,ds:0xdb63ebd7
 102eb87:	scas   al,BYTE PTR es:[edi]
 102eb88:	pavgb  mm2,mm4
 102eb8b:	or     ecx,DWORD PTR [edi-0x105a1d]
 102eb91:	add    bh,dh
 102eb93:	jg     0x102eb7e
 102eb95:	jg     0x102eb79
 102eb97:	mov    ebp,0xcd93fd3f
 102eb9c:	xchg   esi,eax
 102eb9d:	pop    esp
 102eb9e:	daa    
 102eb9f:	lods   eax,DWORD PTR ds:[esi]
 102eba0:	pop    ebp
 102eba1:	cmp    BYTE PTR [edi-0x68160051],al
 102eba7:	lock aam 0xe1
 102ebaa:	arpl   WORD PTR [eax+0x6f],ax
 102ebad:	add    DWORD PTR [ebx-0x7cf98145],ebp
 102ebb3:	dec    ebx
 102ebb4:	(bad)  
 102ebb6:	xchg   ch,bh
 102ebb8:	sub    ebx,DWORD PTR [eax]
 102ebba:	push   cs
 102ebbb:	xchg   edi,eax
 102ebbc:	mov    cl,0xb4
 102ebbe:	mov    eax,0x3dfb6794
 102ebc3:	and    BYTE PTR [edi],0xe9
 102ebc6:	jb     0x102ebd9
 102ebc8:	inc    ecx
 102ebc9:	cmp    esp,edi
 102ebcb:	xor    dh,BYTE PTR [eax]
 102ebcd:	add    al,ch
 102ebcf:	or     al,0x20
 102ebd1:	pop    edx
 102ebd2:	jns    0x102eb78
 102ebd4:	push   esp
 102ebd5:	mov    ecx,ss
 102ebd7:	add    DWORD PTR [ebx+0x6d462f4],ebp
 102ebdd:	push   eax
 102ebde:	fsubr  DWORD PTR [eax-0x30bdde9e]
 102ebe4:	mov    cs,WORD PTR [esp+eax*2-0x6f]
 102ebe8:	jmp    0x1666:0x6523f9c9
 102ebef:	mov    ds:0xa8794ba5,al
 102ebf4:	cmp    cl,ch
 102ebf6:	mov    es,WORD PTR [edi+0x2]
 102ebf9:	sbb    DWORD PTR [edx],0xc9b46940
 102ebff:	mov    fs,WORD PTR [edi+0x684c791a]
 102ec05:	jae    0x102ebaa
 102ec07:	ror    BYTE PTR [esi+esi*4+0x3],cl
 102ec0b:	jmp    DWORD PTR [ebx-0x1c100e81]
 102ec11:	mov    edi,0x887fb5fe
 102ec16:	cmp    BYTE PTR [esi],bl
 102ec18:	stos   DWORD PTR es:[edi],eax
 102ec19:	add    eax,DWORD PTR [ecx]
 102ec1b:	rcr    BYTE PTR [ecx],1
 102ec1d:	aam    0x37
 102ec1f:	pop    ds
 102ec20:	cld    
 102ec21:	es push ds
 102ec23:	cmp    al,0x74
 102ec25:	adc    bh,al
 102ec27:	sahf   
 102ec28:	jl     0x102ec30
 102ec2a:	cmp    esi,DWORD PTR [edi-0x10523e11]
 102ec30:	fimul  WORD PTR [ebx+0x67df6f3b]
 102ec36:	adc    eax,0xaa3853d2
 102ec3b:	add    DWORD PTR [edi+0x3b3a0506],0x1d
 102ec42:	push   ebx
 102ec43:	js     0x102ebf5
 102ec45:	pusha  
 102ec46:	cmp    eax,0x4f289bbe
 102ec4b:	xchg   ecx,eax
 102ec4c:	and    eax,0xbd01b387
 102ec51:	jle    0x102ec72
 102ec53:	retf   
 102ec54:	xchg   edi,eax
 102ec55:	ins    BYTE PTR es:[edi],dx
 102ec56:	ret    
 102ec57:	xchg   ebp,eax
 102ec58:	aas    
 102ec59:	test   bl,0x78
 102ec5c:	out    dx,al
 102ec5d:	shl    BYTE PTR [edi+0x63d1ccf1],1
 102ec63:	js     0x102ec4e
 102ec65:	mov    ecx,0xfbcb70e7
 102ec6a:	fild   WORD PTR [edi+0x5d76dfab]
 102ec70:	pop    esi
 102ec71:	sbb    BYTE PTR [esi+edi*8-0xb],dh
 102ec75:	mov    bl,0x78
 102ec77:	out    0xc8,al
 102ec79:	jecxz  0x102ec73
 102ec7b:	(bad)  
 102ec7c:	pop    ss
 102ec7d:	out    dx,eax
 102ec7e:	inc    ebx
 102ec7f:	mov    WORD PTR [ecx],ss
 102ec81:	mov    eax,ds:0x1b958f3f
 102ec86:	jg     0x102ec2e
 102ec88:	icebp  
 102ec89:	cld    
 102ec8a:	sub    esi,esp
 102ec8c:	leave  
 102ec8d:	scas   al,BYTE PTR es:[edi]
 102ec8e:	fs cld 
 102ec90:	ins    DWORD PTR es:[edi],dx
 102ec91:	and    ecx,DWORD PTR [esi]
 102ec93:	mov    ds,WORD PTR [ecx]
 102ec95:	ds adc cl,bl
 102ec98:	in     al,dx
 102ec99:	lods   eax,DWORD PTR ds:[esi]
 102ec9a:	adc    ebp,edi
 102ec9c:	adc    eax,0x40d1b8b1
 102eca1:	rcr    DWORD PTR [edi-0x18],1
 102eca4:	xchg   esp,eax
 102eca5:	sahf   
 102eca6:	aas    
 102eca7:	and    ah,ah
 102eca9:	cmc    
 102ecaa:	push   ecx
 102ecab:	icebp  
 102ecac:	fimul  DWORD PTR [ebx-0x1b]
 102ecaf:	fwait
 102ecb0:	retf   0x418b
 102ecb3:	push   es
 102ecb4:	pop    eax
 102ecb5:	ret    
 102ecb6:	xor    eax,0x10cdccfd
 102ecbb:	outs   dx,DWORD PTR ds:[esi]
 102ecbc:	sbb    DWORD PTR [eax-0x68],esi
 102ecbf:	jo     0x102ece7
 102ecc1:	xchg   edx,esi
 102ecc3:	jp     0x102ed43
 102ecc5:	and    BYTE PTR [ebx],al
 102ecc7:	push   es
 102ecc8:	shl    DWORD PTR [esp+ecx*4],cl
 102eccb:	stos   DWORD PTR es:[edi],eax
 102eccc:	mov    esi,0x8393e1e5
 102ecd1:	(bad)  
 102ecd2:	and    ebp,edx
 102ecd4:	inc    ebp
 102ecd5:	mov    edx,0xe48c7466
 102ecda:	aaa    
 102ecdb:	lods   eax,DWORD PTR ds:[esi]
 102ecdc:	xor    al,0xbb
 102ecde:	in     eax,dx
 102ecdf:	sar    BYTE PTR [ebp-0x3061bfe2],0x20
 102ece6:	daa    
 102ece7:	call   0x7d8f:0xdf6efb1f
 102ecee:	mov    bh,0xef
 102ecf0:	mov    bh,0xc2
 102ecf2:	dec    esp
 102ecf3:	xchg   ch,cl
 102ecf5:	add    eax,0xbc93fcdb
 102ecfa:	popf   
 102ecfb:	leave  
 102ecfc:	pop    edi
 102ecfd:	mov    DWORD PTR [edi-0x83b9f55],eax
 102ed03:	mov    ah,0x63
 102ed05:	sub    esp,eax
 102ed07:	push   edx
 102ed08:	test   BYTE PTR [ecx-0x50817ff],cl
 102ed0e:	pop    eax
 102ed0f:	pop    eax
 102ed10:	pop    eax
 102ed11:	les    esp,FWORD PTR [ebp+0x1bc3aedb]
 102ed17:	aaa    
 102ed18:	std    
 102ed19:	cmp    al,0x5e
 102ed1b:	cmp    al,0xfc
 102ed1d:	jns    0x102ecbb
 102ed1f:	ds stc 
 102ed21:	sub    bh,BYTE PTR [esi+0x222ff9fa]
 102ed27:	(bad)  
 102ed28:	imul   BYTE PTR ds:0x9a133b41
 102ed2e:	pop    esi
 102ed2f:	sbb    esi,esi
 102ed31:	pop    es
 102ed32:	xchg   edi,eax
 102ed33:	popa   
 102ed34:	clc    
 102ed35:	mov    dh,0xbf
 102ed37:	aad    0x18
 102ed39:	jg     0x102ed35
 102ed3b:	pop    esi
 102ed3c:	fbstp  TBYTE PTR [eax-0x7c]
 102ed3f:	shl    edx,0x12
 102ed42:	jp     0x102edc1
 102ed44:	sti    
 102ed45:	aad    0x1e
 102ed47:	aad    0x9d
 102ed49:	inc    esp
 102ed4a:	lahf   
 102ed4b:	pop    ecx
 102ed4c:	mov    ecx,DWORD PTR [esi]
 102ed4e:	mov    eax,0xfe5df67b
 102ed53:	xchg   ebx,eax
 102ed54:	xchg   edi,eax
 102ed55:	dec    ebx
 102ed56:	not    esi
 102ed58:	sbb    DWORD PTR [esi],ecx
 102ed5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102ed5b:	sbb    ebp,DWORD PTR [ecx+0x6c]
 102ed5e:	lods   al,BYTE PTR ds:[esi]
 102ed5f:	(bad)  
 102ed61:	aam    0x23
 102ed63:	adc    eax,0xf1e9fd14
 102ed68:	xchg   edx,eax
 102ed69:	and    cl,BYTE PTR [ecx]
 102ed6b:	push   es
 102ed6c:	test   DWORD PTR [ecx],0x27c818c5
 102ed72:	ins    DWORD PTR es:[edi],dx
 102ed73:	jno    0x102eddb
 102ed75:	ds clc 
 102ed77:	mov    dh,0x89
 102ed79:	push   esp
 102ed7a:	sbb    al,0xc3
 102ed7c:	xor    al,0x38
 102ed7e:	mov    BYTE PTR [ebx+0x3],0x7e
 102ed82:	cwde   
 102ed83:	or     al,0x5e
 102ed85:	pushf  
 102ed86:	push   ecx
 102ed87:	push   ecx
 102ed88:	or     edx,0x66694a61
 102ed8e:	dec    ebx
 102ed8f:	cmp    DWORD PTR ds:0xa3942c1b,0x948cdfd
 102ed99:	dec    eax
 102ed9a:	mov    DWORD PTR [edi],0x1d38d593
 102eda0:	div    DWORD PTR [eax+0x10]
 102eda3:	sbb    DWORD PTR [eax-0x910261b],esi
 102eda9:	pop    edx
 102edaa:	popf   
 102edab:	push   esi
 102edac:	xor    ebx,esp
 102edae:	pop    ebp
 102edaf:	popa   
 102edb0:	mov    ds:0x8a010d00,al
 102edb5:	out    0x5e,al
 102edb7:	rcr    ah,0xdc
 102edba:	cmp    al,0x86
 102edbc:	retf   
 102edbd:	retf   
 102edbe:	fdiv   DWORD PTR [edx-0xb]
 102edc1:	or     eax,0x82bf0b08
 102edc6:	adc    ebx,edi
 102edc8:	jnp    0x102edd2
 102edca:	addr16 jg 0x102edc5
 102edcd:	sbb    dh,dl
 102edcf:	into   
 102edd0:	mov    esp,0x46320d94
 102edd5:	mov    al,ds:0xf31aba3f
 102edda:	pop    ebx
 102eddb:	outs   dx,BYTE PTR ds:[esi]
 102eddc:	les    esp,FWORD PTR [eax-0x15]
 102eddf:	cmp    esi,DWORD PTR [eax+0x6184b0b0]
 102ede5:	jnp    0x102ee63
 102ede7:	mul    DWORD PTR [eax+0x34]
 102edea:	ret    0xd2d2
 102eded:	add    BYTE PTR [ebp-0x55a26c0a],bh
 102edf3:	inc    ebx
 102edf4:	inc    ebp
 102edf5:	bound  esp,QWORD PTR [ebx+0x27]
 102edf8:	mov    ecx,0xe8ad14d4
 102edfd:	adc    esp,esi
 102edff:	shl    ecx,cl
 102ee01:	cdq    
 102ee02:	lea    ebx,[ebx+0x44]
 102ee05:	pop    ebx
 102ee06:	xchg   bl,bh
 102ee08:	and    bh,BYTE PTR [edx]
 102ee0a:	shr    DWORD PTR [eax+0x4cf9a056],cl
 102ee10:	vpcmpgtw ymm5,ymm2,ymm2
 102ee14:	xor    esp,DWORD PTR [edi+0x7bb281c]
 102ee1a:	cs mov esp,0xa7e5973c
 102ee20:	jge    0x102edc9
 102ee22:	pop    ds
 102ee23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102ee24:	sub    eax,ecx
 102ee26:	and    eax,0xa0ce550
 102ee2b:	mov    ebx,gs
 102ee2d:	dec    ebp
 102ee2e:	and    al,BYTE PTR [edi+0x71b89d89]
 102ee34:	imul   esp,esi,0x6bd6075f
 102ee3a:	mov    ebp,0x564ac269
 102ee3f:	inc    edx
 102ee40:	sub    eax,0x56a5157
 102ee45:	cmovo  edi,DWORD PTR [eax+eiz*1]
 102ee49:	mov    edx,0x10fad3ce
 102ee4e:	pusha  
 102ee4f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
 102ee51:	mov    edi,es
 102ee53:	ja     0x102ede1
 102ee55:	lahf   
 102ee56:	inc    ebx
 102ee57:	dec    ebp
 102ee58:	dec    edi
 102ee59:	imul   edx,DWORD PTR [eax],0xc2c0619a
 102ee5f:	ret    0x4622
 102ee62:	mov    ds:0xf3010015,eax
 102ee67:	dec    ebx
 102ee68:	out    dx,eax
 102ee69:	ret    
 102ee6a:	fnstenv [edi-0x18f47524]
 102ee70:	iret   
 102ee71:	arpl   WORD PTR [ebp+0x6d],bp
 102ee74:	or     eax,0xa1095be9
 102ee79:	sbb    eax,0x2e2e2c32
 102ee7e:	bound  ebp,QWORD PTR [ecx+0x30]
 102ee81:	shl    dl,0x68
 102ee84:	test   cl,al
 102ee86:	jo     0x102eea1
 102ee88:	add    DWORD PTR [ebp+0x73fbf425],0xffffffb9
 102ee8f:	xchg   ecx,eax
 102ee90:	fs push 0x7b35acc5
 102ee96:	outs   dx,DWORD PTR ds:[esi]
 102ee97:	shl    DWORD PTR [edx-0x39],1
 102ee9a:	xchg   esi,eax
 102ee9b:	or     edi,DWORD PTR [esi+0x762cd793]
 102eea1:	not    BYTE PTR [ecx-0x14228c8e]
 102eea7:	jns    0x102ef11
 102eea9:	dec    esi
 102eeaa:	fsubp  st(3),st
 102eeac:	dec    eax
 102eead:	and    ecx,ebx
 102eeaf:	pop    edx
 102eeb0:	pop    ds
 102eeb1:	mov    ds:0x49eba752,eax
 102eeb6:	fcmove st,st(3)
 102eeb8:	call   0x60b1:0x298076e7
 102eebf:	out    dx,al
 102eec0:	cmp    DWORD PTR [eax-0x5e],ebp
 102eec3:	dec    esi
 102eec4:	ficomp WORD PTR [ebx+0x45]
 102eec7:	mov    edx,0x90473d9e
 102eecc:	push   cs
 102eecd:	dec    ebp
 102eece:	nop
 102eecf:	aad    0x46
 102eed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102eed2:	fnstcw WORD PTR [ebp+0x1c]
 102eed5:	adc    al,0xa5
 102eed7:	mov    bl,0x67
 102eed9:	popa   
 102eeda:	sbb    BYTE PTR [ebx],al
 102eedc:	ror    DWORD PTR [esi],cl
 102eede:	lods   eax,DWORD PTR ds:[esi]
 102eedf:	inc    ecx
 102eee0:	mov    esp,0x3ce47aa0
 102eee5:	push   esp
 102eee6:	mov    edi,0x9e895909
 102eeeb:	pushf  
 102eeec:	xor    eax,0x260d7ca2
 102eef1:	push   es
 102eef2:	(bad)  
 102eef3:	push   esi
 102eef4:	push   esp
 102eef5:	test   BYTE PTR [edx-0x2879662e],cl
 102eefb:	adc    al,dl
 102eefd:	out    dx,eax
 102eefe:	iret   
 102eeff:	popa   
 102ef00:	popa   
 102ef01:	popa   
 102ef02:	or     DWORD PTR [ebx-0x6067f6b],esp
 102ef08:	jns    0x102ef36
 102ef0a:	cs sub eax,0xe7ebdce1
 102ef10:	lock (bad) 
 102ef12:	ficomp DWORD PTR [ebx]
 102ef14:	sbb    BYTE PTR [edi+0x7af5a4c7],dh
 102ef1a:	cmp    eax,0x6f35cfcc
 102ef1f:	push   ecx
 102ef20:	push   ss
 102ef21:	xchg   edi,eax
 102ef22:	push   es
 102ef23:	pop    eax
 102ef24:	pop    esp
 102ef25:	pop    edx
 102ef26:	ret    0xdcc2
 102ef29:	add    bh,BYTE PTR [edx-0xe]
 102ef2c:	cdq    
 102ef2d:	outs   dx,BYTE PTR ds:[esi]
 102ef2e:	cmc    
 102ef2f:	out    dx,al
 102ef30:	lods   eax,DWORD PTR cs:[esi]
 102ef32:	dec    esp
 102ef33:	or     BYTE PTR [edx-0x66],cl
 102ef36:	or     eax,DWORD PTR [ebx-0x794406dd]
 102ef3c:	and    ch,al
 102ef3e:	xchg   edx,eax
 102ef3f:	pop    ss
 102ef40:	push   cs
 102ef41:	and    dl,BYTE PTR [ebx+0x6d]
 102ef44:	xor    edx,edi
 102ef46:	push   edi
 102ef47:	mov    DWORD PTR [edx+esi*8+0x45940a3],ebx
 102ef4e:	sub    al,0x34
 102ef50:	retf   0x1373
 102ef53:	repz inc edi
 102ef55:	cdq    
 102ef56:	add    eax,0x3a461d07
 102ef5b:	jo     0x102ef45
 102ef5d:	(bad)  
 102ef5e:	sti    
 102ef5f:	ss dec ebx
 102ef61:	in     al,dx
 102ef62:	jmp    0x808e:0xdf920c
 102ef69:	mov    dl,0x9b
 102ef6b:	and    ch,bl
 102ef6d:	adc    ebp,0xffffffd3
 102ef70:	imul   eax,DWORD PTR [ebx],0x22ccc1
 102ef76:	push   edi
 102ef77:	inc    ecx
 102ef78:	(bad)  [ebx+0x3b]
 102ef7b:	inc    esi
 102ef7c:	in     al,0x56
 102ef7e:	rcr    BYTE PTR [ebp-0x122bd8ef],0x29
 102ef85:	mov    esp,0xc62d4a7
 102ef8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102ef8b:	mov    ds:0xc03de3b4,eax
 102ef90:	dec    ecx
 102ef91:	or     ch,bl
 102ef93:	js     0x102ef20
 102ef95:	scas   al,BYTE PTR es:[edi]
 102ef96:	rol    BYTE PTR [eax-0x107bc947],cl
 102ef9c:	mul    edi
 102ef9e:	xor    BYTE PTR [edi-0x1e4a7750],bh
 102efa4:	sbb    ebx,DWORD PTR [eax+0x5b]
 102efa7:	pop    ebx
 102efa8:	ret    
 102efa9:	cmp    dh,al
 102efab:	jbe    0x102eff5
 102efad:	rol    BYTE PTR [eax+eax*1+0x73],cl
 102efb1:	repz repz pop eax
 102efb4:	cwde   
 102efb5:	fwait
 102efb6:	inc    edi
 102efb7:	scas   eax,DWORD PTR es:[edi]
 102efb8:	aas    
 102efb9:	xlat   BYTE PTR ds:[ebx]
 102efba:	sbb    eax,0xab7541e6
 102efbf:	int    0xb1
 102efc1:	inc    edi
 102efc2:	stos   BYTE PTR es:[edi],al
 102efc3:	push   ds
 102efc4:	test   al,0xe1
 102efc6:	sub    BYTE PTR [esi-0x555fcf4f],ch
 102efcc:	mov    BYTE PTR ds:0x865b50e8,al
 102efd2:	push   es
 102efd3:	shl    BYTE PTR [ebx-0x47],1
 102efd6:	push   edi
 102efd7:	xchg   ebx,eax
 102efd8:	jg     0x102f010
 102efda:	cs jle 0x102f031
 102efdd:	add    DWORD PTR [ebx],ecx
 102efdf:	(bad)  
 102efe0:	mov    esp,0xe613b9e2
 102efe5:	jae    0x102ef7c
 102efe7:	(bad)  
 102efe9:	test   ah,bl
 102efeb:	sub    eax,0xe30bc8c6
 102eff0:	out    0xbf,al
 102eff2:	and    BYTE PTR [esi],0xbc
 102eff5:	call   0x8758:0x97a5eb2f
 102effc:	pushf  
 102effd:	push   cs
 102effe:	je     0x102f002
 102f000:	xchg   esi,eax
 102f001:	or     eax,0x38fa334d
 102f006:	push   0xaa0642b4
 102f00b:	and    DWORD PTR [edi],ebx
 102f00d:	fistp  WORD PTR [ebx-0x1b60e1cc]
 102f013:	in     eax,dx
 102f014:	shl    BYTE PTR [ebp-0x13],cl
 102f017:	xor    BYTE PTR [edx],cl
 102f019:	mov    ds:0xea34ac8f,eax
 102f01e:	jb     0x102efc8
 102f020:	lods   eax,DWORD PTR ds:[esi]
 102f021:	in     al,0xf9
 102f023:	mov    esp,0xc6aa6dd3
 102f028:	xchg   ebp,eax
 102f029:	dec    eax
 102f02a:	or     al,BYTE PTR [eax+0xc]
 102f02d:	add    DWORD PTR ds:0xebdf31f4,edi
 102f033:	popa   
 102f034:	outs   dx,BYTE PTR ds:[esi]
 102f035:	outs   dx,BYTE PTR ds:[esi]
 102f036:	mov    esi,0xdb122379
 102f03b:	iret   
 102f03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102f03d:	inc    ebp
 102f03e:	add    BYTE PTR [ebp-0x161b9330],bh
 102f044:	cmc    
 102f045:	call   0x13e9:0x2842fbf3
 102f04c:	xchg   esi,eax
 102f04d:	xor    ebp,DWORD PTR [ecx]
 102f04f:	push   ecx
 102f050:	je     0x102f022
 102f052:	loope  0x102f089
 102f054:	adc    eax,0xbbae8350
 102f059:	aad    0xae
 102f05b:	mov    al,0x1a
 102f05d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102f05e:	push   ss
 102f05f:	mov    DWORD PTR [edi+ebx*1-0x35],eax
 102f063:	(bad)  
 102f064:	pop    ebx
 102f065:	(bad)  
 102f066:	loope  0x102eff0
 102f068:	(bad)  
 102f069:	retf   0x9632
 102f06c:	sahf   
 102f06d:	pop    edi
 102f06e:	(bad)  [edx+0x3f]
 102f071:	mov    al,0x91
 102f073:	and    dl,BYTE PTR [edx]
 102f075:	mov    DWORD PTR [eax+ebx*8+0x78],ecx
 102f079:	cmc    
 102f07a:	mov    BYTE PTR [ecx-0x1a],dh
 102f07d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102f07e:	sub    al,BYTE PTR [esi]
 102f080:	xor    esp,edi
 102f082:	aam    0x56
 102f084:	xchg   esi,eax
 102f085:	lea    eax,[ebx]
 102f087:	int3   
 102f088:	pop    esi
 102f089:	adc    eax,0x1666f470
 102f08e:	imul   esp,DWORD PTR [esi-0x7e71fd99],0x809b5c2e
 102f098:	cwde   
 102f099:	cmp    DWORD PTR [edx+edi*2+0x2fe2c293],esp
 102f0a0:	(bad)  
 102f0a1:	sbb    bl,ah
 102f0a3:	ja     0x102f0e5
 102f0a5:	sbb    DWORD PTR [edx-0x7e6d08cf],0x33dd0cdb
 102f0af:	lods   eax,DWORD PTR ds:[esi]
 102f0b0:	sbb    DWORD PTR es:[ecx+edi*1],ebx
 102f0b4:	ror    esi,1
 102f0b6:	or     BYTE PTR [ebp+0x59a233b8],bh
 102f0bc:	add    al,0xd5
 102f0be:	sahf   
 102f0bf:	int    0x17
 102f0c1:	sti    
 102f0c2:	jge    0x102f0fb
 102f0c4:	pop    edx
 102f0c5:	shl    bl,1
 102f0c7:	test   eax,0xca6bb1dc
 102f0cc:	inc    edi
 102f0cd:	xlat   BYTE PTR ds:[ebx]
 102f0ce:	inc    ebp
 102f0cf:	jnp    0x102f0c1
 102f0d1:	retf   
 102f0d2:	add    DWORD PTR [ebp-0x27],ebx
 102f0d5:	dec    ecx
 102f0d6:	pop    esi
 102f0d7:	fild   QWORD PTR [eax]
 102f0d9:	imul   eax,DWORD PTR [edx],0xe
 102f0dc:	xchg   ebp,eax
 102f0dd:	pop    ss
 102f0de:	push   edi
 102f0df:	out    dx,al
 102f0e0:	inc    ebp
 102f0e1:	adc    cl,BYTE PTR [esi-0x3]
 102f0e4:	jmp    0x6c59:0x2eecbd55
 102f0eb:	aam    0xea
 102f0ed:	cmp    ecx,ebx
 102f0ef:	call   0x94c5f87
 102f0f4:	push   eax
 102f0f5:	test   al,0x82
 102f0f7:	pop    es
 102f0f8:	fs xchg esp,eax
 102f0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102f0fb:	push   eax
 102f0fc:	sbb    edx,ebp
 102f0fe:	fwait
 102f0ff:	lods   al,BYTE PTR ds:[esi]
 102f100:	mov    ds:0x2e22fc64,eax
 102f105:	pop    ss
 102f106:	sub    al,0x94
 102f108:	mov    bh,0x59
 102f10a:	pusha  
 102f10b:	ror    DWORD PTR [esi+esi*4+0x3],0x23
 102f110:	(bad)  
 102f111:	shl    bl,cl
 102f113:	cmp    cl,cl
 102f115:	aad    0x1d
 102f117:	inc    ebp
 102f118:	fisttp WORD PTR [edx+0x15]
 102f11b:	scas   al,BYTE PTR es:[edi]
 102f11c:	push   edi
 102f11d:	and    ah,BYTE PTR [ebp-0x18c80b74]
 102f123:	popa   
 102f124:	jmp    0x102f0d3
 102f126:	aad    0xd7
 102f128:	sbb    BYTE PTR ss:[ecx-0x1e736ffe],al
 102f12f:	xchg   ebx,eax
 102f130:	pop    es
 102f131:	dec    ebx
 102f132:	aaa    
 102f133:	xor    ebp,DWORD PTR [ebp-0x834192f]
 102f139:	xchg   esp,eax
 102f13a:	popa   
 102f13b:	push   ecx
 102f13c:	in     al,0x82
 102f13e:	scas   eax,DWORD PTR es:[edi]
 102f13f:	or     bl,ah
 102f141:	ins    DWORD PTR es:[edi],dx
 102f142:	lea    esi,[edi+0x55]
 102f145:	jecxz  0x102f12e
 102f147:	jnp    0x102f10d
 102f149:	add    edx,ebx
 102f14b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102f14c:	inc    ebp
 102f14d:	adc    edi,DWORD PTR [ebp+0x9]
 102f150:	sbb    cl,0xcb
 102f153:	xor    DWORD PTR [ecx+0x7bc35fde],ebx
 102f159:	inc    ecx
 102f15a:	mov    eax,0xc5904e0
 102f15f:	sbb    esp,DWORD PTR [ebx+0x6b4c15db]
 102f165:	xor    BYTE PTR [edi+0x46baa58d],dh
 102f16b:	pop    ebp
 102f16c:	jmp    0xbb937ff4
 102f171:	cs jns 0x102f169
 102f174:	in     al,0xe1
 102f176:	xchg   esi,eax
 102f177:	out    0x63,al
 102f179:	inc    eax
 102f17a:	dec    edx
 102f17b:	mov    dl,0xe
 102f17d:	outs   dx,DWORD PTR ss:[esi]
 102f17f:	jbe    0x102f1cd
 102f181:	add    al,0x1e
 102f183:	or     ch,BYTE PTR [edx-0x64cb72d]
 102f189:	cmp    dh,BYTE PTR [eax]
 102f18b:	add    dh,BYTE PTR [eax]
 102f18d:	outs   dx,BYTE PTR ds:[esi]
 102f18e:	mov    dh,0x3
 102f190:	xchg   DWORD PTR [eax-0x69],esp
 102f193:	add    BYTE PTR [ebx-0x1f8fc3de],dh
 102f199:	jle    0x102f1d7
 102f19b:	hlt    
 102f19c:	enter  0x1c41,0x7b
 102f1a0:	loop   0x102f1ca
 102f1a2:	outs   dx,BYTE PTR ds:[esi]
 102f1a3:	fdivr  DWORD PTR [esi-0x4bf7a64d]
 102f1a9:	ja     0x102f20a
 102f1ab:	cmc    
 102f1ac:	add    BYTE PTR [edi],cl
 102f1ae:	push   esi
 102f1af:	and    BYTE PTR [edi],ch
 102f1b1:	ret    0x5f72
 102f1b4:	jg     0x102f167
 102f1b6:	add    DWORD PTR [edi+0x135002ba],eax
 102f1bc:	(bad)  
 102f1bd:	and    esp,DWORD PTR [esi-0x3dcc4e99]
 102f1c3:	je     0x102f22b
 102f1c5:	pop    esp
 102f1c6:	push   esi
 102f1c7:	retf   0x2a58
 102f1ca:	mov    al,BYTE PTR [edx]
 102f1cc:	inc    edi
 102f1cd:	ds pop edi
 102f1cf:	and    ch,dl
 102f1d1:	stos   DWORD PTR es:[edi],eax
 102f1d2:	inc    ebx
 102f1d3:	or     ch,BYTE PTR [edx]
 102f1d5:	int3   
 102f1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102f1d7:	loopne 0x102f23d
 102f1d9:	in     eax,0x71
 102f1db:	or     al,0xcc
 102f1dd:	cmp    BYTE PTR [ebx],bl
 102f1df:	jb     0x102f22e
 102f1e1:	xchg   ebx,eax
 102f1e2:	and    ch,BYTE PTR [ecx]
 102f1e4:	iret   
 102f1e5:	call   0x648baeb6
 102f1ea:	cld    
 102f1eb:	fnop   
 102f1ed:	add    dh,BYTE PTR [ebp+0x4e83d5e5]
 102f1f3:	inc    esi
 102f1f4:	adc    BYTE PTR [ecx-0xd],bl
 102f1f7:	and    al,0x22
 102f1f9:	out    dx,eax
 102f1fa:	es in  al,0x82
 102f1fd:	pop    ecx
 102f1fe:	xor    al,0x4a
 102f200:	jnp    0x102f20c
 102f202:	mov    ebp,0xdd02de5b
 102f207:	xlat   BYTE PTR ds:[ebx]
 102f208:	jl     0x102f223
 102f20a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102f20b:	fisttp DWORD PTR [ebx]
 102f20d:	jae    0x102f1a5
 102f20f:	and    BYTE PTR [eax+ebx*8-0xa6bd755],cl
 102f216:	rol    DWORD PTR [ebx],0xc2
 102f219:	dec    eax
 102f21a:	inc    ebx
 102f21b:	or     eax,DWORD PTR [edi-0x5d2c11ca]
 102f221:	jg     0x102f1ab
 102f223:	scas   al,BYTE PTR es:[edi]
 102f224:	imul   esp,DWORD PTR [ebp+0x7e076d99],0x6feb47f1
 102f22e:	pop    es
 102f22f:	mov    esi,0xd85dfafe
 102f234:	jp     0x102f20b
 102f236:	jbe    0x102f224
 102f238:	outs   dx,DWORD PTR ds:[esi]
 102f239:	mov    bh,0x3
 102f23b:	pop    ds
 102f23c:	cmp    eax,0x7000047e
 102f241:	out    0xde,eax
 102f243:	repnz jecxz 0x102f1e6
 102f246:	sub    DWORD PTR [ecx-0x23284492],ebp
 102f24c:	jno    0x102f217
 102f24e:	cwde   
 102f24f:	shr    BYTE PTR [ecx],1
 102f251:	add    ah,BYTE PTR [esp+ecx*2+0x1e351a56]
 102f258:	iret   
 102f259:	inc    eax
 102f25a:	xchg   ebx,eax
 102f25b:	and    DWORD PTR [ebx-0x1dc558be],esi
 102f261:	add    al,0x7a
 102f263:	fsubr  st,st(0)
 102f265:	cmp    eax,0xd9faa323
 102f26a:	repz call 0x2fb115f2
 102f270:	jns    0x102f206
 102f272:	or     al,0x44
 102f274:	inc    eax
 102f275:	adc    eax,0xff33bd3c
 102f27a:	and    BYTE PTR [ecx+0x30],bh
 102f27d:	inc    ecx
 102f27e:	push   esi
 102f27f:	test   eax,0xefb99c
 102f284:	dec    ebp
 102f285:	je     0x102f275
 102f287:	xor    ebx,DWORD PTR [ebp+0x67b1361e]
 102f28d:	je     0x102f274
 102f28f:	dec    edi
 102f290:	push   ds
 102f291:	xlat   BYTE PTR ds:[ebx]
 102f292:	sbb    eax,0x53083122
 102f297:	pop    esi
 102f298:	popa   
 102f299:	rcr    DWORD PTR ds:0xde2f31da,0x7c
 102f2a0:	inc    esp
 102f2a1:	out    0x9b,al
 102f2a3:	ror    BYTE PTR [edi-0x4dc65cd9],0xe0
 102f2aa:	sti    
 102f2ab:	add    eax,0x14e15c9f
 102f2b0:	rol    ebp,cl
 102f2b2:	mov    bh,0x1d
 102f2b4:	clc    
 102f2b5:	rol    BYTE PTR [ecx+0x8100a26],1
 102f2bb:	push   ebp
 102f2bc:	lds    edx,FWORD PTR [ebx+0x5]
 102f2bf:	xor    eax,0xc2145b5e
 102f2c4:	data16 jb 0x102f345
 102f2c7:	stos   BYTE PTR es:[edi],al
 102f2c8:	aaa    
 102f2c9:	dec    edx
 102f2ca:	ins    DWORD PTR es:[edi],dx
 102f2cb:	mov    BYTE PTR [edx-0x74],al
 102f2ce:	add    eax,0xe9758bfd
 102f2d3:	pop    edx
 102f2d4:	inc    ebp
 102f2d5:	mov    ds:0xb79e3c81,al
 102f2da:	mov    esi,0x8d603d40
 102f2df:	ds push cs
 102f2e1:	cmp    edx,DWORD PTR [ebx-0x25]
 102f2e4:	stc    
 102f2e5:	jnp    0x102f363
 102f2e7:	shl    esi,1
 102f2e9:	xor    eax,0xdf7a8611
 102f2ee:	mov    al,BYTE PTR [ebp+0xa4d6198]
 102f2f4:	imul   ebx,DWORD PTR [ecx],0x532d8210
 102f2fa:	mov    esp,0x4b3ed195
 102f2ff:	inc    eax
 102f300:	leave  
 102f301:	in     al,0x9
 102f303:	add    BYTE PTR [esi+0x53b4c748],ah
 102f309:	xchg   edx,eax
 102f30a:	mov    dh,0x2e
 102f30c:	js     0x102f2fe
 102f30e:	repz call 0x83eecaf8
 102f314:	pop    esp
 102f315:	cli    
 102f316:	push   ecx
 102f317:	rol    BYTE PTR [eax-0x6f],1
 102f31a:	test   DWORD PTR [ecx-0x52],ebx
 102f31d:	sub    al,0xc4
 102f31f:	cmp    BYTE PTR [ecx],al
 102f321:	mov    edx,esp
 102f323:	mov    ebp,0x9b1bf883
 102f328:	cs mov edx,0x9fc7c0ed
 102f32e:	cmp    al,0x66
 102f330:	xchg   ebp,eax
 102f331:	or     eax,0x3dcfdab0
 102f336:	or     al,0xea
 102f338:	push   esp
 102f339:	push   cs
 102f33a:	cmp    ebp,eax
 102f33c:	inc    ebp
 102f33d:	test   al,0x53
 102f33f:	push   ecx
 102f340:	getsec 
 102f342:	jmp    0xef0134c3
 102f347:	scas   al,BYTE PTR es:[edi]
 102f348:	adc    DWORD PTR [edi],0x32
 102f34b:	push   ebx
 102f34c:	stos   BYTE PTR es:[edi],al
 102f34d:	mov    ebp,0xc8b330d1
 102f352:	push   cs
 102f353:	mov    eax,0x331db755
 102f358:	jge    0x102f39e
 102f35a:	outs   dx,DWORD PTR ds:[esi]
 102f35b:	mov    dl,BYTE PTR [esi]
 102f35d:	mov    dh,BYTE PTR [eax+0xafcda39]
 102f363:	or     al,BYTE PTR [esi]
 102f365:	xchg   esp,eax
 102f366:	xchg   esp,eax
 102f367:	dec    eax
 102f368:	or     DWORD PTR [edi+0x29ec0a6b],ebx
 102f36e:	js     0x102f376
 102f370:	test   DWORD PTR [eax-0x5d],ebp
 102f373:	and    dh,BYTE PTR [edi-0x1db0c7f1]
 102f379:	inc    ecx
 102f37a:	sti    
 102f37b:	call   0x3950:0x13eef779
 102f382:	sub    al,0x58
 102f384:	mov    dl,0x1d
 102f386:	pusha  
 102f387:	shl    bh,cl
 102f389:	or     al,0x54
 102f38b:	jl     0x102f39d
 102f38d:	or     BYTE PTR [edi],cl
 102f38f:	std    
 102f390:	or     al,0xd3
 102f392:	stos   BYTE PTR es:[edi],al
 102f393:	xchg   DWORD PTR [eax-0x1c77f904],esi
 102f399:	mov    eax,0x5a600158
 102f39e:	fild   DWORD PTR [ecx+0x677eb86f]
 102f3a4:	shl    DWORD PTR [esi+0x61],1
 102f3a7:	fsubr  DWORD PTR [ecx]
 102f3a9:	test   eax,0x5c107607
 102f3ae:	mov    eax,DWORD PTR ds:0xca4b656
 102f3b4:	mov    cl,0xde
 102f3b6:	add    DWORD PTR [ebp-0x71448dee],0xd751b372
 102f3c0:	fldcw  WORD PTR ss:[eax-0x51dcdb3f]
 102f3c7:	adc    cl,BYTE PTR ds:0x2fcaa3ca
 102f3cd:	hlt    
 102f3ce:	sbb    esi,DWORD PTR [edx]
 102f3d0:	fdiv   DWORD PTR [ebx+0x7ee1e44a]
 102f3d6:	jecxz  0x102f358
 102f3d8:	fs loop 0x102f455
 102f3db:	iret   
 102f3dc:	push   0xd82995b2
 102f3e1:	cld    
 102f3e2:	aad    0xef
 102f3e4:	sub    BYTE PTR [eax+0x502a2e8],al
 102f3ea:	dec    eax
 102f3eb:	push   ecx
 102f3ec:	inc    ebx
 102f3ed:	cli    
 102f3ee:	and    DWORD PTR [esi],edx
 102f3f0:	scas   eax,DWORD PTR es:[edi]
 102f3f1:	loop   0x102f3cd
 102f3f3:	fiadd  WORD PTR [ecx]
 102f3f5:	ins    DWORD PTR es:[edi],dx
 102f3f6:	xchg   DWORD PTR [ebx-0x1c5c2557],ebp
 102f3fc:	adc    al,0xa2
 102f3fe:	pop    ebx
 102f3ff:	imul   eax,ecx,0xe937f756
 102f405:	sbb    bh,BYTE PTR ds:0x5ffdb29c
 102f40b:	test   bl,bl
 102f40d:	sbb    edi,0x36fd7cdd
 102f413:	cmp    cl,BYTE PTR [edx]
 102f415:	add    bh,BYTE PTR [eax]
 102f417:	dec    edx
 102f418:	push   eax
 102f419:	push   0xe733fba9
 102f41e:	in     eax,0x8e
 102f420:	loope  0x102f3ae
 102f422:	pop    edx
 102f423:	pop    ebp
 102f424:	push   es
 102f425:	adc    al,0xf6
 102f427:	sbb    BYTE PTR [edx-0x2e875606],al
 102f42d:	pop    esi
 102f42e:	je     0x102f41e
 102f430:	cmp    DWORD PTR [ecx],ebp
 102f432:	sub    esp,DWORD PTR [ecx+0x5d6b9b2a]
 102f438:	push   esp
 102f439:	cs jns 0x102f450
 102f43c:	imul   eax,DWORD PTR [edi-0x25],0xdaf46557
 102f443:	aaa    
 102f444:	mov    ah,0x4
 102f446:	sub    ebx,esp
 102f448:	pop    esp
 102f449:	dec    edi
 102f44a:	mov    edx,0xf1270fc7
 102f44f:	outs   dx,BYTE PTR ds:[esi]
 102f450:	inc    eax
 102f451:	cwde   
 102f452:	mov    eax,DWORD PTR ds:0x1d3b4998
 102f458:	(bad)  
 102f459:	in     al,0x7e
 102f45b:	stos   DWORD PTR es:[edi],eax
 102f45c:	aam    0xcf
 102f45e:	cld    
 102f45f:	sub    ebp,DWORD PTR [edi]
 102f461:	leavew 
 102f463:	cmp    edi,edi
 102f465:	popf   
 102f466:	ror    BYTE PTR [eax+0x2009f06b],0x9
 102f46d:	cld    
 102f46e:	or     eax,0xd041ec01
 102f473:	rcr    DWORD PTR [ebp+ecx*4-0x2c],1
 102f477:	ss cmp ch,cl
 102f47a:	fs cmp esi,eax
 102f47d:	aas    
 102f47e:	clc    
 102f47f:	out    0xff,eax
 102f481:	cs (bad) 
 102f483:	stos   DWORD PTR es:[edi],eax
 102f484:	pop    edi
 102f485:	std    
 102f486:	cmc    
 102f487:	mov    esp,0xb52535ec
 102f48c:	aad    0x3
 102f48e:	movd   DWORD PTR [ebx],mm2
 102f491:	(bad)  
 102f493:	jb     0x102f4a5
 102f495:	(bad)  
 102f496:	lahf   
 102f497:	jl     0x102f49f
 102f499:	aaa    
 102f49a:	pop    esp
 102f49b:	fild   QWORD PTR [edi+eax*1-0x42]
 102f49f:	and    ecx,DWORD PTR [ebp+0xdf4e1ff]
 102f4a5:	ja     0x102f453
 102f4a7:	sar    DWORD PTR [ecx],cl
 102f4a9:	stos   BYTE PTR es:[edi],al
 102f4aa:	mov    ah,0xc9
 102f4ac:	or     esi,DWORD PTR [ecx]
 102f4ae:	or     dh,bl
 102f4b0:	pop    esp
 102f4b1:	les    ebx,FWORD PTR [ebx-0x17b33573]
 102f4b7:	dec    edi
 102f4b8:	cmc    
 102f4b9:	add    ah,BYTE PTR ds:0xe578d7c2
 102f4bf:	pop    es
 102f4c0:	lds    ebx,FWORD PTR [ebx]
 102f4c2:	xor    DWORD PTR [edi+ebx*1+0x36],0x6c
 102f4c7:	cs xchg edx,eax
 102f4c9:	js     0x102f514
 102f4cb:	cmc    
 102f4cc:	bound  eax,QWORD PTR [ebp+0x5b]
 102f4cf:	ret    0x6120
 102f4d2:	pop    edx
 102f4d3:	push   ecx
 102f4d4:	jg     0x102f534
 102f4d6:	push   esp
 102f4d7:	arpl   WORD PTR [ebx-0x5cec28cd],bx
 102f4dd:	mov    ds:0x3ead492,eax
 102f4e2:	add    eax,0xe2d73c99
 102f4e7:	lock ror BYTE PTR fs:[ebp-0x74],1
 102f4ec:	push   eax
 102f4ed:	(bad)  [edx-0x27]
 102f4f0:	jmp    0xc77d4711
 102f4f5:	sub    bh,0xe9
 102f4f8:	pop    ss
 102f4f9:	and    BYTE PTR [edx],0x1a
 102f4fc:	jecxz  0x102f4df
 102f4fe:	sub    eax,DWORD PTR [ebx-0x3e852551]
 102f504:	cmp    BYTE PTR [edi+0x53],al
 102f507:	mov    esi,ebp
 102f509:	call   0x2568:0xcd28365c
 102f510:	and    al,dl
 102f512:	or     edi,DWORD PTR ds:0xc57ae7f4
 102f518:	mov    ebx,0xde774e78
 102f51d:	mov    esi,0xddee771f
 102f522:	outs   dx,DWORD PTR ds:[esi]
 102f523:	add    eax,0x78ddc133
 102f528:	mov    ebx,0x9ea574c2
 102f52d:	xor    DWORD PTR [eax],ecx
 102f52f:	jmp    0x354a:0x5a856f1d
 102f536:	inc    edi
 102f537:	adc    BYTE PTR [ebx-0x57],ah
 102f53a:	hlt    
 102f53b:	fldenv [esi+0x4d293bd8]
 102f541:	mov    al,0x7a
 102f543:	retf   
 102f544:	cmc    
 102f545:	and    eax,0x6cfbd465
 102f54a:	stos   DWORD PTR es:[edi],eax
 102f54b:	ror    ebx,0xe7
 102f54e:	add    BYTE PTR [edx+esi*4-0x7ab2e51d],bl
 102f555:	push   es
 102f556:	es xchg esi,eax
 102f558:	inc    ecx
 102f559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102f55a:	push   ss
 102f55b:	jge    0x102f5c5
 102f55d:	mov    cs,WORD PTR fs:[ecx]
 102f560:	fldenv [ebx+0x22eab3c]
 102f566:	stos   DWORD PTR es:[edi],eax
 102f567:	inc    esp
 102f568:	jbe    0x102f514
 102f56a:	or     ebx,DWORD PTR [ecx-0x2]
 102f56d:	adc    edi,edx
 102f56f:	xor    bh,bl
 102f571:	push   esi
 102f572:	cmp    BYTE PTR [esi+esi*1-0x4b235b0],0xd5
 102f57a:	lock dec ebx
 102f57c:	cdq    
 102f57d:	add    edx,DWORD PTR ds:0x7a0b9e2e
 102f583:	(bad)  
 102f584:	dec    esi
 102f585:	stos   DWORD PTR es:[edi],eax
 102f586:	call   0xd001:0x77dd9a66
 102f58d:	xor    esi,ecx
 102f58f:	popa   
 102f590:	jb     0x102f5dc
 102f592:	cmp    al,0x76
 102f594:	in     eax,0xc9
 102f596:	and    BYTE PTR [ebp+0x79],cl
 102f599:	push   ecx
 102f59a:	dec    edi
 102f59b:	sub    bl,BYTE PTR [edi]
 102f59d:	dec    eax
 102f59e:	mov    bh,0xc9
 102f5a0:	xor    ebp,DWORD PTR [ebx-0x2c]
 102f5a3:	nop
 102f5a4:	pop    esi
 102f5a5:	frstor [ebx+eax*4]
 102f5a8:	stos   BYTE PTR es:[edi],al
 102f5a9:	test   DWORD PTR [edi],ebp
 102f5ab:	ins    BYTE PTR es:[edi],dx
 102f5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 102f5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102f5ae:	lods   al,BYTE PTR ds:[esi]
 102f5af:	ficom  WORD PTR [ebx+0x679b9bf]
 102f5b5:	sbb    DWORD PTR [eax-0x25],ebx
 102f5b8:	ror    dl,cl
 102f5ba:	imul   eax,DWORD PTR [edi],0x4f
 102f5bd:	adc    al,0x80
 102f5bf:	inc    eax
 102f5c0:	stc    
 102f5c1:	sar    BYTE PTR [edi],cl
 102f5c3:	bound  esi,QWORD PTR [edi-0x8066260]
 102f5c9:	push   edx
 102f5ca:	test   al,0xfd
 102f5cc:	push   0x872c43af
 102f5d1:	aaa    
 102f5d2:	add    eax,0x34dc978
 102f5d7:	jp     0x102f57a
 102f5d9:	int3   
 102f5da:	iret   
 102f5db:	fidivr WORD PTR [eax]
 102f5dd:	scas   eax,DWORD PTR es:[edi]
 102f5de:	addr16 dec eax
 102f5e0:	enter  0x9b68,0xea
 102f5e4:	repnz cmp eax,esi
 102f5e7:	cmp    ebp,ecx
 102f5e9:	mov    ebp,0x789f29b9
 102f5ee:	jo     0x102f5ee
 102f5f0:	mov    ecx,0xf91cc00b
 102f5f5:	repz mov al,0x30
 102f5f8:	mov    esp,DWORD PTR [ebx+0x3d]
 102f5fb:	scas   eax,DWORD PTR es:[edi]
 102f5fc:	int    0xc6
 102f5fe:	dec    edi
 102f5ff:	xor    ch,BYTE PTR [esi+esi*2]
 102f602:	mov    al,ds:0xf9f8e9be
 102f607:	scas   eax,DWORD PTR es:[edi]
 102f608:	aaa    
 102f609:	int    0x4
 102f60b:	add    BYTE PTR [eax+eiz*2+0x46],dl
 102f60f:	mov    bh,0x92
 102f611:	push   edx
 102f612:	add    BYTE PTR [esi],ah
 102f614:	jl     0x102f60c
 102f616:	test   BYTE PTR [eax+ecx*4+0x159e08ce],ch
 102f61d:	mov    WORD PTR ds:0xd679ae92,ss
 102f623:	xchg   ebp,eax
 102f624:	add    DWORD PTR [ebx+0x61ba7830],esp
 102f62a:	xchg   esi,eax
 102f62b:	jge    0x102f67f
 102f62d:	fcmovnb st,st(5)
 102f62f:	jmp    0x102f64f
 102f631:	push   esi
 102f632:	sub    al,0x74
 102f634:	xlat   BYTE PTR ds:[ebx]
 102f635:	pop    esi
 102f636:	and    al,0xc1
 102f638:	or     eax,DWORD PTR [esi-0x330b0168]
 102f63e:	fcom   QWORD PTR [edx]
 102f640:	sub    ecx,DWORD PTR [edx-0x3a]
 102f643:	arpl   dx,bp
 102f645:	add    DWORD PTR [eax-0x799f47c2],edx
 102f64b:	push   ds
 102f64c:	sub    al,0x27
 102f64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102f64f:	dec    ebp
 102f650:	imul   esi,DWORD PTR [edx+0x10],0xf3378d4d
 102f657:	jmp    0x33f905f1
 102f65c:	add    DWORD PTR [ecx+ebp*2-0x6fed4ec5],ebp
 102f663:	xchg   edi,eax
 102f664:	xor    ebx,0x580ca842
 102f66a:	or     dh,BYTE PTR [esp+ebp*2-0x585b2d48]
 102f671:	push   ebx
 102f672:	mov    edx,0x8be8c7b1
 102f677:	mov    fs,WORD PTR [ebp+0x62]
 102f67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102f67b:	xor    ebp,ecx
 102f67d:	cmp    DWORD PTR [ebx],eax
 102f67f:	mov    esi,0x53ca4001
 102f684:	jae    0x102f6a4
 102f686:	cdq    
 102f687:	pop    esi
 102f688:	adc    DWORD PTR [edx-0x4f],edx
 102f68b:	repnz rol DWORD PTR [ecx],cl
 102f68e:	int3   
 102f68f:	imul   esp,DWORD PTR [esi-0x39ce567],0x90000fa
 102f699:	test   DWORD PTR [ecx+0x44],ecx
 102f69c:	inc    ecx
 102f69d:	push   esp
 102f69e:	out    dx,al
 102f69f:	add    eax,0x1d4f0a30
 102f6a4:	push   ebx
 102f6a5:	in     al,dx
 102f6a6:	enter  0xf36a,0x69
 102f6aa:	push   esi
 102f6ab:	pop    ebx
 102f6ac:	xchg   ecx,eax
 102f6ad:	movzx  esp,BYTE PTR [esi-0x5483d7ed]
 102f6b4:	shl    DWORD PTR [edx],1
 102f6b6:	sub    esp,ebx
 102f6b8:	test   DWORD PTR [edx],0xb7356d89
 102f6be:	aad    0xf0
 102f6c0:	sbb    eax,0x45a4cdc3
 102f6c5:	sub    ah,bl
 102f6c7:	push   0x2d48a171
 102f6cc:	sub    eax,0x6a11879
 102f6d1:	or     esp,DWORD PTR [ebp+eiz*8+0xd]
 102f6d5:	ins    DWORD PTR es:[edi],dx
 102f6d6:	std    
 102f6d7:	cli    
 102f6d8:	jp     0x102f6a6
 102f6da:	or     edx,DWORD PTR [ebx-0x55]
 102f6dd:	in     eax,dx
 102f6de:	xchg   esi,eax
 102f6df:	(bad)  
 102f6e0:	cmp    dh,BYTE PTR [eax+0x55]
 102f6e3:	call   0x4:0x86f59c29
 102f6ea:	mov    bh,BYTE PTR [ecx]
 102f6ec:	sbb    bh,BYTE PTR [esi+0x6d]
 102f6ef:	xchg   esi,eax
 102f6f0:	inc    ecx
 102f6f1:	fist   WORD PTR [ecx-0x736b566b]
 102f6f7:	rcl    DWORD PTR ds:0x6139445b,cl
 102f6fd:	leave  
 102f6fe:	push   ecx
 102f6ff:	sbb    cl,cl
 102f701:	daa    
 102f702:	push   0x1d
 102f704:	dec    esi
 102f705:	cwde   
 102f706:	outs   dx,BYTE PTR ds:[esi]
 102f707:	out    0x14,al
 102f709:	or     ah,dh
 102f70b:	imul   esp,DWORD PTR [edi-0x56808cf1],0x3c
 102f712:	je     0x102f73c
 102f714:	xchg   ecx,eax
 102f715:	fwait
 102f716:	cmc    
 102f717:	adc    al,0x69
 102f719:	or     ch,BYTE PTR [ecx-0xa]
 102f71c:	pop    edi
 102f71d:	pop    es
 102f71e:	push   es
 102f71f:	dec    edx
 102f720:	xchg   esp,eax
 102f721:	and    al,0x10
 102f723:	dec    eax
 102f724:	xchg   edx,eax
 102f725:	sub    eax,DWORD PTR [ecx*8+0x565c6437]
 102f72c:	repz dec eax
 102f72e:	lds    esp,FWORD PTR [esi+0x15b36890]
 102f734:	gs xchg ebx,eax
 102f736:	add    DWORD PTR [ebx+0x1f],eax
 102f739:	dec    eax
 102f73a:	jge    0x102f77d
 102f73c:	cmp    bl,BYTE PTR [edi+0x2698c92f]
 102f742:	push   ds
 102f743:	sub    edx,DWORD PTR [ebp-0x8775b40]
 102f749:	popa   
 102f74a:	xchg   ebp,eax
 102f74b:	xchg   edi,eax
 102f74c:	jmp    0x102f6e4
 102f74e:	mov    esp,0xfc925019
 102f753:	dec    eax
 102f754:	xchg   BYTE PTR ss:[esi-0x5a],al
 102f758:	push   ebx
 102f759:	push   0x3be66f5a
 102f75e:	or     DWORD PTR [esi],0xffffffcb
 102f761:	xchg   ebp,eax
 102f762:	fs push esp
 102f764:	xchg   ebp,eax
 102f765:	mov    ds:0xc8b296d3,eax
 102f76a:	mov    al,ds:0x7cc192ef
 102f76f:	push   esp
 102f770:	add    BYTE PTR [ebx+ecx*8],ch
 102f773:	jo     0x102f7b7
 102f775:	and    ecx,DWORD PTR [edx]
 102f777:	dec    esp
 102f778:	push   ecx
 102f779:	mov    bl,0x24
 102f77b:	sbb    DWORD PTR [edx+0x71],ecx
 102f77e:	ins    DWORD PTR es:[edi],dx
 102f77f:	xchg   ebx,eax
 102f780:	jmp    0xa10bd5b1
 102f785:	stos   DWORD PTR es:[edi],eax
 102f786:	and    edx,DWORD PTR [edx+0x79]
 102f789:	scas   eax,DWORD PTR es:[edi]
 102f78a:	fild   WORD PTR [eax+0x3ed3ee4e]
 102f790:	adc    esi,DWORD PTR [eax+0x36]
 102f793:	fwait
 102f794:	adc    DWORD PTR [eax+ebx*2-0x2c],0x45ecac29
 102f79c:	pop    esi
 102f79d:	push   eax
 102f79e:	inc    edi
 102f79f:	mov    cl,dl
 102f7a1:	jns    0x102f7ed
 102f7a3:	cmp    cl,BYTE PTR [si+0x15]
 102f7a7:	popf   
 102f7a8:	retf   0x1d14
 102f7ab:	dec    eax
 102f7ac:	jne    0x102f7fc
 102f7ae:	hlt    
 102f7af:	fiadd  WORD PTR [ecx+0x63c9c614]
 102f7b5:	call   0x671:0xb52db60c
 102f7bc:	add    ah,bl
 102f7be:	add    ebp,0xb2719a43
 102f7c4:	ror    ah,1
 102f7c6:	imul   edx,DWORD PTR [edi],0x22
 102f7c9:	aad    0x95
 102f7cb:	clc    
 102f7cc:	aad    0x35
 102f7ce:	jmp    0x1fb4:0xead5cc26
 102f7d5:	pusha  
 102f7d6:	in     eax,0x54
 102f7d8:	xchg   ebp,eax
 102f7d9:	jne    0x102f828
 102f7db:	add    DWORD PTR [ebx+0x17],0xbc80a891
 102f7e2:	push   0x5aba0a1
 102f7e7:	xor    al,0xb3
 102f7e9:	pop    edi
 102f7ea:	ret    0xc3c9
 102f7ed:	neg    eax
 102f7ef:	adc    BYTE PTR [ebx],dl
 102f7f1:	in     eax,dx
 102f7f2:	xor    eax,0x43a03303
 102f7f7:	mov    esp,0xb08b1cf3
 102f7fc:	arpl   ax,bp
 102f7fe:	aam    0xb6
 102f800:	add    al,bl
 102f802:	call   0xb82bfd53
 102f807:	mov    eax,0x6699a75b
 102f80c:	cmp    eax,DWORD PTR [edi]
 102f80e:	inc    eax
 102f80f:	popf   
 102f810:	cdq    
 102f811:	inc    ebx
 102f812:	popa   
 102f813:	xor    al,BYTE PTR [eax]
 102f815:	inc    ebp
 102f816:	pop    edx
 102f817:	cs int3 
 102f819:	push   0x800179ed
 102f81e:	adc    al,0x26
 102f820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102f821:	add    al,0x36
 102f823:	xchg   ecx,eax
 102f824:	xchg   esp,eax
 102f825:	push   ecx
 102f826:	or     ebp,DWORD PTR [edx+0x1d0a8731]
 102f82c:	sub    BYTE PTR [ecx+0x54],ch
 102f82f:	out    dx,eax
 102f830:	mov    ds:0x24da62c0,al
 102f835:	and    ebp,DWORD PTR [eax]
 102f837:	jmp    0x428a:0xf448f24d
 102f83e:	push   ss
 102f83f:	mov    ch,BYTE PTR [esi]
 102f841:	in     eax,dx
 102f842:	jp     0x102f838
 102f844:	and    eax,0xf31cb159
 102f849:	fdiv   DWORD PTR [esi]
 102f84b:	fnsave [edi-0x6c]
 102f84e:	mov    ah,0x48
 102f850:	leave  
 102f851:	push   0xf88a819
 102f856:	inc    ebx
 102f857:	fwait
 102f858:	ror    DWORD PTR [edi-0x5dca19a],cl
 102f85e:	std    
 102f85f:	addr16 call 0x6597:0x35c80c33
 102f867:	cmp    DWORD PTR [ecx+0x3f],esi
 102f86a:	mov    dl,0x8e
 102f86c:	xor    DWORD PTR [ebp-0xc],edi
 102f86f:	xchg   edi,eax
 102f870:	pop    edi
 102f871:	lds    ebx,FWORD PTR [ecx-0x6536bd77]
 102f877:	scas   al,BYTE PTR es:[edi]
 102f878:	imul   edx,ecx,0x49
 102f87b:	shl    BYTE PTR [edi+0x7de1af34],cl
 102f881:	xor    al,0x45
 102f883:	jmp    0x102f8e9
 102f885:	cdq    
 102f886:	adc    eax,0x34853afa
 102f88b:	mov    ebx,0xcc3a4008
 102f890:	xchg   ecx,eax
 102f891:	mov    ebx,0xc816e319
 102f896:	pop    edi
 102f897:	push   ecx
 102f898:	sbb    al,0x36
 102f89a:	jle    0x102f8eb
 102f89c:	sbb    DWORD PTR [ebp+0x7058db04],eax
 102f8a2:	sahf   
 102f8a3:	or     DWORD PTR [edx-0x15],ebx
 102f8a6:	mov    bl,0xac
 102f8a8:	xchg   ebx,eax
 102f8a9:	mov    fs,WORD PTR [ecx]
 102f8ab:	pop    ss
 102f8ac:	in     eax,dx
 102f8ad:	adc    ecx,edi
 102f8af:	mov    ecx,0x5c2612e
 102f8b4:	xchg   esp,eax
 102f8b5:	dec    ecx
 102f8b6:	inc    esi
 102f8b7:	adc    bh,BYTE PTR [ebx]
 102f8b9:	pop    esi
 102f8ba:	mov    ecx,DWORD PTR [ecx+0x43]
 102f8bd:	xchg   esi,esp
 102f8bf:	xor    DWORD PTR [edx],edi
 102f8c1:	pop    ecx
 102f8c2:	lock xchg DWORD PTR [edx+0x3d],edx
 102f8c6:	cmp    dl,BYTE PTR [edi+ecx*2-0x2a2f40dd]
 102f8cd:	xchg   ecx,eax
 102f8ce:	clc    
 102f8cf:	push   ebx
 102f8d0:	push   ds
 102f8d1:	or     bh,BYTE PTR [ebp-0x7150bad9]
 102f8d7:	xor    al,0xf4
 102f8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102f8da:	xor    ecx,esp
 102f8dc:	xor    DWORD PTR [ebp-0x1e],edi
 102f8df:	xor    DWORD PTR [ebx-0x3b85e23d],ebp
 102f8e5:	add    BYTE PTR ds:0xdfa63ae7,0xa1
 102f8ec:	jl     0x102f89a
 102f8ee:	(bad)  
 102f8ef:	outs   dx,DWORD PTR ds:[esi]
 102f8f0:	pushf  
 102f8f1:	adc    cl,BYTE PTR ds:0xf6df2b5
 102f8f7:	pop    eax
 102f8f8:	jmp    0x72fd1774
 102f8fd:	fs xor esp,ebp
 102f900:	xor    al,0x9b
 102f902:	in     eax,dx
 102f903:	sar    BYTE PTR [ebp+0x5db14a46],0xfb
 102f90a:	fwait
 102f90b:	test   DWORD PTR [esi+0x1d],ecx
 102f90e:	sbb    eax,DWORD PTR [ecx]
 102f910:	cmp    al,0x70
 102f912:	lock jle 0x102f951
 102f915:	jl     0x102f8ff
 102f917:	and    BYTE PTR [esi+0x3b14793f],cl
 102f91d:	mov    dh,0xef
 102f91f:	les    edi,FWORD PTR [ebx+0x6e]
 102f922:	fimul  WORD PTR [ebx+0x57df6e3b]
 102f928:	lea    eax,[edx+0x60d5fcb3]
 102f92e:	or     cl,ah
 102f930:	or     eax,ebx
 102f932:	mov    ?,WORD PTR [eax]
 102f934:	adc    edx,DWORD PTR [ebx-0x2b]
 102f937:	or     BYTE PTR [esi],dh
 102f939:	adc    bl,BYTE PTR [ebp+0x139cde54]
 102f93f:	out    0xd0,eax
 102f941:	xchg   ebx,eax
 102f942:	fcmove st,st(0)
 102f944:	jecxz  0x102f9b8
 102f946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102f947:	xchg   ebx,eax
 102f948:	sbb    eax,ebp
 102f94a:	add    BYTE PTR [eax+0x6895c3f7],bl
 102f950:	pop    edi
 102f951:	sbb    BYTE PTR [esi+0x286ac051],al
 102f957:	cdq    
 102f958:	sahf   
 102f959:	jmp    0x102f90b
 102f95b:	mov    esi,DWORD PTR [ebx-0x7152ff0]
 102f961:	xor    eax,0xd08c63b5
 102f966:	push   ecx
 102f967:	outs   dx,BYTE PTR ds:[esi]
 102f968:	pop    ebp
 102f969:	sbb    BYTE PTR [ebp+0x23],dl
 102f96c:	sub    bl,dh
 102f96e:	dec    ebp
 102f96f:	stc    
 102f970:	or     eax,DWORD PTR [edi+0x5f]
 102f973:	imul   eax,DWORD PTR [edi-0x233453ff],0x728015d5
 102f97d:	in     eax,0xa0
 102f97f:	xchg   esp,eax
 102f980:	dec    edi
 102f981:	sbb    DWORD PTR [ebx-0x7e08f02f],ebp
 102f987:	call   0x83a20815
 102f98c:	rol    BYTE PTR [ebx-0x1b],cl
 102f98f:	pop    ebp
 102f990:	fidiv  WORD PTR [ebx+0x21]
 102f993:	lahf   
 102f994:	(bad)  
 102f995:	imul   esp,DWORD PTR [ebp+0x7e076d99],0xd68fc4e9
 102f99f:	fisttp QWORD PTR [esi]
 102f9a1:	mov    esp,0x5c2efb63
 102f9a6:	jns    0x102f99d
 102f9a8:	jbe    0x102f946
 102f9aa:	outs   dx,BYTE PTR ds:[esi]
 102f9ab:	mov    bh,0x3
 102f9ad:	pop    ds
 102f9ae:	jnp    0x102f952
 102f9b0:	(bad)  [esi]
 102f9b2:	jl     0x102f93b
 102f9b4:	outs   dx,BYTE PTR ds:[esi]
 102f9b5:	pop    es
 102f9b6:	push   esi
 102f9b7:	das    
 102f9b8:	enter  0xa4c2,0xe
 102f9bc:	xor    BYTE PTR [edi],bh
 102f9be:	add    eax,0xb72aa9a9
 102f9c3:	outs   dx,BYTE PTR ds:[esi]
 102f9c4:	xor    edi,DWORD PTR [ecx]
 102f9c6:	pop    ss
 102f9c7:	retf   
 102f9c8:	jmp    0x7ba6:0x2288fe8d
 102f9cf:	xor    eax,0x23b3623
 102f9d4:	xchg   ebx,eax
 102f9d5:	rcl    BYTE PTR [edx],cl
 102f9d7:	or     BYTE PTR [eax-0xa],cl
 102f9da:	outs   dx,BYTE PTR ds:[esi]
 102f9db:	lods   al,BYTE PTR ds:[esi]
 102f9dc:	out    dx,eax
 102f9dd:	mov    edx,0x291f0aa3
 102f9e2:	(bad)
 102f9e6:	sub    BYTE PTR [edi+eax*2],cl
 102f9e9:	fwait
 102f9ea:	test   al,0x79
 102f9ec:	sub    DWORD PTR [ecx-0x2462bebd],esp
 102f9f2:	out    0x68,eax
 102f9f4:	lds    edx,FWORD PTR [eax+0x153c0a7]
 102f9fa:	retf   
 102f9fb:	xchg   esp,eax
 102f9fc:	xlat   BYTE PTR ds:[ebx]
 102f9fd:	mov    esp,0xf71050dd
 102fa02:	inc    eax
 102fa03:	dec    esi
 102fa04:	add    DWORD PTR [edx+0x7afcb002],esp
 102fa0a:	sar    BYTE PTR [ebx+edx*2],cl
 102fa0d:	pandn  mm2,mm2
 102fa10:	push   ecx
 102fa11:	std    
 102fa12:	inc    esi
 102fa13:	inc    ecx
 102fa14:	mov    ah,0xc5
 102fa16:	dec    esp
 102fa17:	icebp  
 102fa18:	(bad)  
 102fa1a:	mov    al,ds:0x4a0ddf26
 102fa1f:	pop    ss
 102fa20:	fnsave [esi-0x20]
 102fa23:	xchg   DWORD PTR [esi],ebx
 102fa25:	cmp    eax,edx
 102fa27:	sub    al,0x7
 102fa29:	xchg   BYTE PTR [eax+0x10],bh
 102fa2c:	inc    ebp
 102fa2d:	jo     0x102fa24
 102fa2f:	mov    al,ds:0xe8f56c2a
 102fa34:	mov    dh,0xa8
 102fa36:	inc    ecx
 102fa37:	jp     0x102fa8c
 102fa39:	jle    0x102fa58
 102fa3b:	pusha  
 102fa3c:	leave  
 102fa3d:	sahf   
 102fa3e:	mov    DWORD PTR [eax-0x30],ebp
 102fa41:	jb     0x102fa88
 102fa43:	mov    edi,0x3f28602b
 102fa48:	retf   0x285e
 102fa4b:	adc    eax,0x425e6cc9
 102fa50:	pop    ecx
 102fa51:	push   esi
 102fa52:	dec    edi
 102fa53:	in     al,dx
 102fa54:	push   ebp
 102fa55:	outs   dx,DWORD PTR ds:[esi]
 102fa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102fa57:	mov    ebx,0xccb8d913
 102fa5c:	push   edx
 102fa5d:	push   edi
 102fa5e:	scas   eax,DWORD PTR es:[edi]
 102fa5f:	out    dx,al
 102fa60:	xchg   esp,eax
 102fa61:	aas    
 102fa62:	adc    cl,BYTE PTR [edi]
 102fa64:	xchg   edx,eax
 102fa65:	cdq    
 102fa66:	mov    ebp,0x3c6db6b0
 102fa6b:	je     0x102fa7a
 102fa6d:	rol    ah,1
 102fa6f:	add    edx,DWORD PTR [edi]
 102fa71:	mov    ebx,0xcf6da8e7
 102fa76:	jecxz  0x102fa13
 102fa78:	xchg   DWORD PTR [ebx+ebx*1+0x7623ee51],esp
 102fa7f:	mov    dl,0x2a
 102fa81:	mov    ds:0x85d6f13e,al
 102fa86:	sahf   
 102fa87:	push   esp
 102fa88:	mov    edi,ss
 102fa8a:	jne    0x102faa0
 102fa8c:	push   cs
 102fa8d:	mov    edi,0x746c1e1e
 102fa92:	mov    edx,0x3f03b6e8
 102fa97:	icebp  
 102fa98:	in     al,0xb1
 102fa9a:	dec    esi
 102fa9b:	add    DWORD PTR [edx-0x3a],ebp
 102fa9e:	dec    edi
 102fa9f:	jg     0x102fa94
 102faa1:	and    ebp,esi
 102faa3:	jl     0x102faf5
 102faa5:	enter  0x21e6,0x37
 102faa9:	std    
 102faaa:	xor    ch,dl
 102faac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102faad:	cmp    bh,BYTE PTR ds:0x548ee4e3
 102fab3:	sbb    dl,BYTE PTR [edx-0x5a92874e]
 102fab9:	cld    
 102faba:	test   DWORD PTR [esi+0xd9136f8],eax
 102fac0:	xor    ecx,esi
 102fac2:	xor    DWORD PTR [ecx-0x13908a89],eax
 102fac8:	fstp   DWORD PTR [ecx+0x558dbcc6]
 102face:	push   ebx
 102facf:	dec    ebp
 102fad0:	xchg   esi,eax
 102fad1:	xchg   ebp,eax
 102fad2:	ins    BYTE PTR es:[edi],dx
 102fad3:	sub    DWORD PTR [ebp+0x42aeaded],esp
 102fad9:	mov    bh,0x40
 102fadb:	adc    esp,DWORD PTR ds:0x19b3a4cf
 102fae1:	int3   
 102fae2:	test   BYTE PTR [edx],bl
 102fae4:	cld    
 102fae5:	push   eax
 102fae6:	jnp    0x102fb25
 102fae8:	sbb    dh,BYTE PTR [ebx+0x5d]
 102faeb:	les    edi,FWORD PTR fs:[ecx+0x234f88df]
 102faf2:	cmp    cl,BYTE PTR [edx+0x1411d846]
 102faf8:	xchg   ecx,eax
 102faf9:	and    al,0xd7
 102fafb:	mov    eax,ds:0x2a1391ed
 102fb00:	and    BYTE PTR [esi*4-0x4b340927],0x8d
 102fb08:	pop    ds
 102fb09:	mov    eax,0xef03b708
 102fb0e:	fcomp  st(6)
 102fb10:	outs   dx,BYTE PTR ds:[esi]
 102fb11:	pop    es
 102fb12:	push   ss
 102fb13:	pop    DWORD PTR ds:0x6408aea0
 102fb19:	clc    
 102fb1a:	(bad)  
 102fb1b:	call   0x6dc7:0xc3b85e7c
 102fb22:	pop    ecx
 102fb23:	das    
 102fb24:	jnp    0x102fb58
 102fb26:	and    al,0x3e
 102fb28:	pop    edx
 102fb29:	mov    edx,0x12182116
 102fb2e:	sbb    DWORD PTR [eax-0x4debc15e],ecx
 102fb34:	test   eax,0x8de33e
 102fb39:	mov    ds:0x506da6b0,eax
 102fb3e:	std    
 102fb3f:	repnz pushf 
 102fb41:	repz addr16 ret 
 102fb44:	stos   DWORD PTR es:[edi],eax
 102fb45:	rcr    BYTE PTR ds:0xa9f43b01,1
 102fb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102fb4c:	mov    ah,cl
 102fb4e:	sub    cl,BYTE PTR [ecx-0x64]
 102fb51:	xor    al,0x4
 102fb53:	aaa    
 102fb54:	push   ds
 102fb55:	xchg   ebp,eax
 102fb56:	out    dx,al
 102fb57:	in     eax,0xe1
 102fb59:	pop    ss
 102fb5a:	adc    eax,0x234aa8e4
 102fb5f:	movnti DWORD PTR [edi+0x21d9bbf4],ebx
 102fb66:	sbb    DWORD PTR [eax-0x62],ecx
 102fb69:	inc    edx
 102fb6a:	jae    0x102fb7d
 102fb6c:	or     eax,0x6057dd1
 102fb71:	out    dx,eax
 102fb72:	cwde   
 102fb73:	cmp    DWORD PTR [esi],edx
 102fb75:	in     eax,0x7a
 102fb77:	daa    
 102fb78:	push   ecx
 102fb79:	jae    0x102fbf6
 102fb7b:	out    dx,al
 102fb7c:	xchg   ecx,eax
 102fb7d:	jne    0x102fb9a
 102fb7f:	pushf  
 102fb80:	cs mov edx,0xb9efc0ed
 102fb86:	jns    0x102fb37
 102fb88:	cmp    eax,0x8bd8174
 102fb8d:	sub    DWORD PTR [edx+0x49c9dc49],eax
 102fb93:	jno    0x102fbd1
 102fb95:	inc    ebx
 102fb96:	repz retf 0x3ad4
 102fb9a:	es jne 0x102fbf7
 102fb9d:	xchg   edi,eax
 102fb9e:	lods   eax,DWORD PTR ds:[esi]
 102fb9f:	cwde   
 102fba0:	jo     0x102fbf4
 102fba2:	fild   DWORD PTR [esi]
 102fba4:	cmp    dl,BYTE PTR [eax-0x66359a9d]
 102fbaa:	imul   ecx,DWORD PTR [edx+0x7b3b448],0xffffffd2
 102fbb1:	call   0x6833b2fa
 102fbb6:	sbb    dh,BYTE PTR [edx+edx*1]
 102fbb9:	adc    BYTE PTR [esi+0x4da58d27],bh
 102fbbf:	mov    ah,0x43
 102fbc1:	jns    0x102fc00
 102fbc3:	das    
 102fbc4:	enter  0xc180,0x74
 102fbc8:	(bad)  
 102fbc9:	pop    esi
 102fbca:	test   DWORD PTR [ecx],eax
 102fbcc:	xchg   esi,eax
 102fbcd:	mov    edi,0x78144702
 102fbd2:	sub    edx,DWORD PTR [ecx-0x61]
 102fbd5:	jno    0x102fb99
 102fbd7:	sub    al,0xab
 102fbd9:	inc    eax
 102fbda:	add    dl,cl
 102fbdc:	mov    dl,0x88
 102fbde:	(bad)  
 102fbdf:	fst    DWORD PTR [edi*2+0x3acb2028]
 102fbe6:	adc    BYTE PTR [edx+0x2a4e981c],dl
 102fbec:	lahf   
 102fbed:	jmp    0x102fc3a
 102fbef:	cld    
 102fbf0:	mov    bh,0x95
 102fbf2:	pop    ss
 102fbf3:	inc    ebx
 102fbf4:	scas   al,BYTE PTR es:[edi]
 102fbf5:	inc    esp
 102fbf6:	arpl   WORD PTR [ebx+ebp*8],bp
 102fbf9:	pushf  
 102fbfa:	call   0x5fe0:0x76c9
 102fc00:	(bad)  
 102fc01:	cmc    
 102fc02:	fisttp WORD PTR [edi+edi*8+0x69fe37f2]
 102fc09:	jle    0x102fc16
 102fc0b:	add    al,al
 102fc0d:	cmc    
 102fc0e:	ds pop es
 102fc10:	push   ds
 102fc11:	jl     0x102fc13
 102fc13:	(bad)  
 102fc15:	jb     0x102fc17
 102fc17:	dec    edi
 102fc18:	cmp    al,0xf9
 102fc1a:	or     al,0x76
 102fc1c:	ins    BYTE PTR es:[edi],dx
 102fc1d:	fild   WORD PTR [ebx-0x125991a5]
 102fc23:	rcl    ah,0xeb
 102fc26:	adc    esp,DWORD PTR [edx+0x14120b47]
 102fc2c:	inc    esi
 102fc2d:	jb     0x102fc61
 102fc2f:	sahf   
 102fc30:	push   eax
 102fc31:	retf   0x8e99
 102fc34:	popa   
 102fc35:	adc    BYTE PTR [ecx-0x29],al
 102fc38:	mov    DWORD PTR [esi+0x69],eax
 102fc3b:	push   0xffffffca
 102fc3d:	cdq    
 102fc3e:	adc    al,0xa9
 102fc40:	ins    DWORD PTR es:[edi],dx
 102fc41:	retf   
 102fc42:	sbb    edx,DWORD PTR [esi]
 102fc44:	mov    al,0x16
 102fc46:	adc    eax,0x9ef28664
 102fc4b:	xchg   DWORD PTR [ecx-0x67],ebx
 102fc4e:	ffreep st(2)
 102fc50:	sbb    eax,0x8c6297b6
 102fc55:	push   es
 102fc56:	mov    al,0x2a
 102fc58:	ficom  WORD PTR [ecx+ebx*4+0x61]
 102fc5c:	lds    eax,FWORD PTR [esi-0x7c058e6a]
 102fc62:	mov    DWORD PTR [ebp-0x11],esi
 102fc65:	or     ecx,DWORD PTR [eax]
 102fc67:	xor    BYTE PTR [eax-0x34ecdf46],bl
 102fc6d:	sub    dh,BYTE PTR [edx]
 102fc6f:	cmp    BYTE PTR [ebp-0x357ef1b2],al
 102fc75:	imul   esi,DWORD PTR [ebx+0x2a],0x35da241e
 102fc7c:	and    dl,BYTE PTR [edx+0x601560fe]
 102fc82:	mov    ebp,0xbc36b7e0
 102fc87:	mov    edi,0xfd49673f
 102fc8c:	inc    edx
 102fc8d:	mov    dl,0x9a
 102fc8f:	mov    ebp,eax
 102fc91:	dec    ebx
 102fc92:	call   0x3af3:0x428197e1
 102fc99:	nop
 102fc9a:	cmp    edi,DWORD PTR [edi]
 102fc9c:	lock jae 0x102fc7f
 102fc9f:	idiv   BYTE PTR [ebp-0xe66505]
 102fca5:	fsub   DWORD PTR [ecx-0x22094447]
 102fcab:	sti    
 102fcac:	lods   eax,DWORD PTR ds:[esi]
 102fcad:	(bad)  
 102fcae:	or     ebx,DWORD PTR [ebx+0x36]
 102fcb1:	jnp    0x102fce5
 102fcb3:	div    BYTE PTR [edx-0x4bac280c]
 102fcb9:	push   esp
 102fcba:	outs   dx,DWORD PTR ds:[esi]
 102fcbb:	or     eax,0xcc8e9410
 102fcc0:	call   0x2785:0x229c2ee7
 102fcc7:	dec    eax
 102fcc8:	cmp    al,0x4
 102fcca:	dec    ebx
 102fccb:	mov    eax,DWORD PTR [edi]
 102fccd:	jo     0x102fcc8
 102fccf:	mov    esi,0x30d9ede3
 102fcd4:	mov    esp,DWORD PTR [ebx-0x35]
 102fcd7:	test   BYTE PTR [edi-0x1d],dh
 102fcda:	dec    ebp
 102fcdb:	xor    eax,0x64fd38b
 102fce0:	push   eax
 102fce1:	(bad)  
 102fce2:	enter  0x69d3,0xf
 102fce6:	mov    ch,0x9
 102fce8:	mov    ebx,0x819531a2
 102fced:	arpl   WORD PTR [ebp+0x1f2e555a],sp
 102fcf3:	ins    BYTE PTR es:[edi],dx
 102fcf4:	aaa    
 102fcf5:	js     0x102fce2
 102fcf7:	adc    ebx,DWORD PTR [eax+0x55bd73f]
 102fcfd:	dec    ebx
 102fcfe:	dec    esi
 102fcff:	push   es
 102fd00:	xchg   edx,eax
 102fd01:	pusha  
 102fd02:	in     eax,0x60
 102fd04:	fisub  DWORD PTR [edi-0x5e]
 102fd07:	cmp    BYTE PTR [edi-0x556dd0ba],bl
 102fd0d:	push   cs
 102fd0e:	imul   ecx,edx,0x69
 102fd11:	inc    esi
 102fd12:	fild   WORD PTR ds:0x6aeafee8
 102fd18:	xor    DWORD PTR [ebp+0x79],ecx
 102fd1b:	ror    DWORD PTR [edx+0x2c],1
 102fd1e:	test   DWORD PTR [edi-0x6ca6636],ebx
 102fd24:	jmp    0xa5d1a298
 102fd29:	pop    eax
 102fd2a:	sub    DWORD PTR [edi+edx*8],eax
 102fd2d:	adc    BYTE PTR [ebp+ecx*1-0x42a1a55d],dl
 102fd34:	fs pop ebx
 102fd36:	push   eax
 102fd37:	or     eax,0xbe28c3c7
 102fd3c:	aaa    
 102fd3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102fd3e:	pop    es
 102fd3f:	cmp    DWORD PTR [esp+ecx*2],esp
 102fd42:	neg    DWORD PTR [edi+ecx*8]
 102fd45:	inc    ebx
 102fd46:	push   cs
 102fd47:	leave  
 102fd48:	and    BYTE PTR [esi],0xd3
 102fd4b:	lods   eax,DWORD PTR ds:[esi]
 102fd4c:	mov    al,ds:0xe82961a5
 102fd51:	scas   eax,DWORD PTR es:[edi]
 102fd52:	pop    es
 102fd53:	test   WORD PTR [ecx-0x53],sp
 102fd57:	test   DWORD PTR [edx+ecx*8-0xd],0x4969ecdf
 102fd5f:	ds pop edx
 102fd61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102fd62:	nop
 102fd63:	cdq    
 102fd64:	sbb    BYTE PTR [edi+0x4],bh
 102fd67:	mov    ch,al
 102fd69:	lods   al,BYTE PTR ds:[esi]
 102fd6a:	push   0xae26a35a
 102fd6f:	ja     0x102fd0e
 102fd71:	mov    dl,0x9e
 102fd73:	inc    ebp
 102fd74:	out    0x57,eax
 102fd76:	jnp    0x102fdbc
 102fd78:	push   ebx
 102fd79:	into   
 102fd7a:	adc    al,BYTE PTR [esi+ebx*2+0x5c0159a2]
 102fd81:	xchg   DWORD PTR [ecx+0x693a1f45],ebx
 102fd87:	fisub  DWORD PTR [eax+0x30]
 102fd8a:	mov    bl,0x95
 102fd8c:	sub    BYTE PTR [eax+ebx*8],0xda
 102fd90:	jae    0x102fd52
 102fd92:	xor    DWORD PTR [eax+edi*1],ecx
 102fd95:	enter  0x684a,0x5f
 102fd99:	or     edi,DWORD PTR [edi]
 102fd9b:	fnstenv [eax-0x2d]
 102fd9e:	and    eax,0x9027becf
 102fda3:	leave  
 102fda4:	in     eax,0xc7
 102fda6:	pop    ebp
 102fda7:	popf   
 102fda8:	jmp    0xeb91785c
 102fdad:	push   ss
 102fdae:	pop    edi
 102fdaf:	test   eax,0x564653d7
 102fdb4:	cwde   
 102fdb5:	in     al,dx
 102fdb6:	or     BYTE PTR ds:0xa2a1c0b7,bl
 102fdbc:	addr16 sub al,0x79
 102fdbf:	lahf   
 102fdc0:	mov    ebx,0x9b6d767a
 102fdc5:	stos   DWORD PTR es:[edi],eax
 102fdc6:	and    eax,0xf60ef5e0
 102fdcb:	sub    al,0x40
 102fdcd:	sub    al,bl
 102fdcf:	fbld   TBYTE PTR [esi]
 102fdd1:	(bad)  
 102fdd2:	push   ss
 102fdd3:	xchg   esi,eax
 102fdd4:	mov    esp,0xd3ad3489
 102fdd9:	aam    0x21
 102fddb:	xlat   BYTE PTR ds:[ebx]
 102fddc:	pushf  
 102fddd:	(bad)  
 102fdde:	or     eax,0xd1fa41e
 102fde3:	enter  0x9844,0x39
 102fde7:	mov    ds:0x8c28b228,al
 102fdec:	(bad)  
 102fded:	and    eax,ebp
 102fdef:	push   esp
 102fdf0:	data16 sub bl,0xe6
 102fdf4:	mov    ebx,ecx
 102fdf6:	cld    
 102fdf7:	mov    edx,0xa52001d0
 102fdfc:	xchg   ebp,eax
 102fdfd:	or     eax,0xe523a5df
 102fe02:	fwait
 102fe03:	xor    al,BYTE PTR [edx]
 102fe05:	int3   
 102fe06:	push   es
 102fe07:	add    BYTE PTR [eax],al
 102fe09:	cmp    esi,DWORD PTR [ebx+0x7c2740b]
 102fe0f:	mov    dl,0x74
 102fe11:	(bad)  
 102fe12:	pop    ebp
 102fe13:	lds    esp,FWORD PTR ds:0x2d4acce5
 102fe19:	dec    edi
 102fe1a:	mov    cl,0xb5
 102fe1c:	mov    ds:0x4a6ad144,eax
 102fe21:	enter  0x6dd0,0xea
 102fe25:	stos   DWORD PTR es:[edi],eax
 102fe26:	sub    DWORD PTR [ecx-0x13],ecx
 102fe29:	inc    edi
 102fe2a:	adc    DWORD PTR [ecx*1+0x4208664d],0x935eba74
 102fe35:	fimul  DWORD PTR [ebp+0x11]
 102fe38:	dec    esp
 102fe39:	out    0x59,al
 102fe3b:	stc    
 102fe3c:	xchg   ebx,eax
 102fe3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102fe3e:	xchg   ebp,eax
 102fe3f:	mov    edi,0x51ceb349
 102fe44:	fs test eax,0xc811b319
 102fe4a:	jo     0x102fdcc
 102fe4c:	or     esp,0xd0cafe78
 102fe52:	les    edx,FWORD PTR [eax]
 102fe54:	sub    al,0xe5
 102fe56:	je     0x102fe08
 102fe58:	out    dx,al
 102fe59:	mov    BYTE PTR [edi-0x67f9e9e5],ch
 102fe5f:	shld   DWORD PTR [eax],esi,cl
 102fe62:	popf   
 102fe63:	or     al,0xb6
 102fe65:	rcl    BYTE PTR [edi+esi*2+0x11],cl
 102fe69:	ins    BYTE PTR es:[edi],dx
 102fe6a:	adc    DWORD PTR [edi+esi*2-0x2f],0xa0a9d31e
 102fe72:	sub    esi,DWORD PTR [edi+edx*1]
 102fe75:	sub    ch,dh
 102fe77:	mov    ah,0x5f
 102fe79:	mov    esp,0x1e149e1a
 102fe7e:	ins    BYTE PTR es:[edi],dx
 102fe7f:	inc    eax
 102fe80:	call   0xac5e:0x30e0045d
 102fe87:	fist   WORD PTR [edi+0x75ad7abf]
 102fe8d:	mov    edx,0x17253c19
 102fe92:	mov    bh,0xa4
 102fe94:	cmc    
 102fe95:	inc    edi
 102fe96:	mov    DWORD PTR cs:[esi-0x61502b20],0x4c92b29
 102fea1:	and    eax,0x953d89c8
 102fea6:	rol    DWORD PTR [esi-0x3f],cl
 102fea9:	or     ch,BYTE PTR [ecx]
 102feab:	stos   DWORD PTR es:[edi],eax
 102feac:	ja     0x102fea4
 102feae:	mov    eax,ds:0x531eeaf1
 102feb3:	push   esp
 102feb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102feb5:	push   ss
 102feb6:	sub    DWORD PTR ds:0xf0c31cff,edx
 102febc:	mov    dl,0x3
 102febe:	lock aas 
 102fec0:	jmp    0x329cd013
 102fec5:	inc    BYTE PTR [edx]
 102fec7:	popf   
 102fec8:	popa   
 102fec9:	fsub   QWORD PTR [edx+ebx*4+0x28]
 102fecd:	xor    eax,0x62530aaf
 102fed2:	pop    es
 102fed3:	loope  0x102fed5
 102fed5:	nop
 102fed6:	rcl    BYTE PTR [esi+0x177922c9],cl
 102fedc:	jne    0x102fe93
 102fede:	call   DWORD PTR [ebp-0x5d]
 102fee1:	shr    BYTE PTR [esi],cl
 102fee3:	stos   DWORD PTR es:[edi],eax
 102fee4:	lods   eax,DWORD PTR ds:[esi]
 102fee5:	inc    edx
 102fee6:	in     eax,0xe4
 102fee8:	call   0x3c48345c
 102feed:	aam    0x98
 102feef:	lds    ebp,FWORD PTR [ebx-0x40]
 102fef2:	jmp    DWORD PTR [edi]
 102fef4:	dec    esi
 102fef5:	add    al,0x32
 102fef7:	sahf   
 102fef8:	and    al,al
 102fefa:	jp     0x102ff0a
 102fefc:	fdiv   st,st(1)
 102fefe:	stos   DWORD PTR es:[edi],eax
 102feff:	sub    ch,BYTE PTR [eax+0x4]
 102ff02:	mov    edx,0xa43dc50
 102ff07:	(bad)  
 102ff08:	je     0x102ff3b
 102ff0a:	mov    dh,0x2a
 102ff0c:	mov    al,0xa8
 102ff0e:	inc    ecx
 102ff0f:	retf   0x757d
 102ff12:	sbb    bl,BYTE PTR [ecx+eax*1-0x11]
 102ff16:	mul    bl
 102ff18:	mov    esp,0xa139176
 102ff1d:	adc    BYTE PTR [ebx+ecx*8-0x79],al
 102ff21:	or     edi,DWORD PTR [edx-0x57]
 102ff24:	outs   dx,BYTE PTR ds:[esi]
 102ff25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 102ff26:	scas   eax,DWORD PTR es:[edi]
 102ff27:	mov    ebp,0x7912d859
 102ff2c:	mov    eax,ds:0x458af748
 102ff31:	inc    ebx
 102ff32:	bound  edx,QWORD PTR [esi+eiz*4+0x38f11491]
 102ff39:	add    al,0x15
 102ff3b:	jb     0x102ff50
 102ff3d:	jle    0x102ff7b
 102ff3f:	mov    ecx,0x5799ad30
 102ff44:	inc    ebp
 102ff45:	and    DWORD PTR [ebx],esp
 102ff47:	mov    al,0x4a
 102ff49:	jnp    0x102ff1c
 102ff4b:	pop    bp
 102ff4d:	out    dx,eax
 102ff4e:	and    BYTE PTR ds:0x346a008d,cl
 102ff54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 102ff55:	mov    edx,0x80e7e04d
 102ff5a:	stos   DWORD PTR es:[edi],eax
 102ff5b:	sbb    DWORD PTR [edx],eax
 102ff5d:	in     al,0xff
 102ff5f:	fidivr DWORD PTR [edx+0x24143a1c]
 102ff65:	mov    ebp,0x4c760dba
 102ff6a:	sbb    DWORD PTR [ecx],eax
 102ff6c:	data16 jae 0x102ff95
 102ff6f:	pusha  
 102ff70:	or     esi,DWORD PTR [ebp+0x6a]
 102ff73:	je     0x102ff71
 102ff75:	push   edi
 102ff76:	in     eax,dx
 102ff77:	fstp   st(4)
 102ff79:	dec    ebx
 102ff7a:	retf   0x84e3
 102ff7d:	retf   0xe059
 102ff80:	in     al,dx
 102ff81:	or     DWORD PTR [ecx+0xb],0x8250ba8a
 102ff88:	dec    ebx
 102ff89:	or     ch,BYTE PTR [ebx+0x27]
 102ff8c:	inc    ebp
 102ff8d:	arpl   WORD PTR [ebp+0x39],ax
 102ff90:	jle    0x102ff78
 102ff92:	adc    eax,0xe414c64c
 102ff97:	pop    esi
 102ff98:	ja     0x102fff3
 102ff9a:	inc    ebp
 102ff9b:	and    al,0x73
 102ff9d:	mov    edx,0x9b64830d
 102ffa2:	iret   
 102ffa3:	push   esp
 102ffa4:	jmp    0x748f8fc2
 102ffa9:	mov    bl,0x4c
 102ffab:	dec    ecx
 102ffac:	xchg   BYTE PTR [esi+0x3b],ah
 102ffaf:	ss leave 
 102ffb1:	mov    ch,0xf0
 102ffb3:	jp     0x102ffbf
 102ffb5:	sbb    BYTE PTR [eax+0x8654061],ah
 102ffbb:	xchg   edx,eax
 102ffbc:	or     al,0x35
 102ffbe:	add    DWORD PTR [edi-0x4028c1fe],ebx
 102ffc4:	sahf   
 102ffc5:	(bad)  
 102ffc6:	jmp    0x102ffce
 102ffc8:	mov    al,ds:0x43a8d19a
 102ffcd:	into   
 102ffce:	cmp    dl,BYTE PTR [ecx]
 102ffd0:	les    esi,FWORD PTR [eax+0x13]
 102ffd3:	cmp    BYTE PTR [edx],0x7c
 102ffd6:	dec    ebp
 102ffd7:	sbb    dl,BYTE PTR [edx-0x1b]
 102ffda:	sti    
 102ffdb:	dec    esi
 102ffdc:	lahf   
 102ffdd:	icebp  
 102ffde:	jl     0x1030031
 102ffe0:	add    DWORD PTR [ecx+ebp*8],edi
 102ffe3:	inc    edx
 102ffe4:	je     0x1030057
 102ffe6:	fiadd  DWORD PTR [edi]
 102ffe8:	and    DWORD PTR [esp+esi*1-0x7eac4d],0xcdf9bfd9
 102fff3:	hlt    
 102fff4:	or     edx,DWORD PTR [ecx]
 102fff6:	mov    eax,ds:0xef6c5415
 102fffb:	ins    BYTE PTR es:[edi],dx
 102fffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 102fffd:	int    0xb4
 102ffff:	cdq    
 1030000:	shl    DWORD PTR ss:[esi-0x26],cl
 1030004:	dec    esp
 1030005:	fwait
 1030006:	imul   esi,DWORD PTR [ebx],0xb4cda66d
 103000c:	cdq    
 103000d:	shl    DWORD PTR ss:[esi-0x26],cl
 1030011:	dec    esp
 1030012:	fwait
 1030013:	imul   esi,DWORD PTR [ebx],0xb4cda66d
 1030019:	cdq    
 103001a:	(bad)  
 103001b:	mov    edx,0x7e05ffd2
 1030020:	sbb    ebx,edx
 1030022:	test   DWORD PTR [esi+eiz*4],esi
 1030025:	xor    ecx,DWORD PTR [ebp+0x0]
 1030028:	add    BYTE PTR [eax],al
 103002a:	add    BYTE PTR [ecx+0x45],cl
 103002d:	dec    esi
 103002e:	inc    esp
 103002f:	scas   al,BYTE PTR es:[edi]
 1030030:	inc    edx
 1030031:	pusha  
 1030032:	adc    BYTE PTR [eax+0x28],0x0
 1030036:	add    BYTE PTR [eax],al
 1030038:	inc    eax
 1030039:	add    BYTE PTR [eax],al
 103003b:	add    BYTE PTR [eax+0x1000000],al
 1030041:	add    BYTE PTR [eax],ah
 1030043:	add    BYTE PTR [eax],al
 1030045:	add    BYTE PTR [eax],al
 1030047:	add    BYTE PTR [eax],al
 1030049:	inc    edx
	...
 1030272:	add    BYTE PTR [eax],al
 1030274:	sub    BYTE PTR [ebp+0x59],0xff
 1030278:	sub    BYTE PTR [ebp+0x59],0xff
 103027c:	sub    BYTE PTR [ebp+0x59],0xff
 1030280:	sub    BYTE PTR [ebp+0x59],0xff
 1030284:	sub    BYTE PTR [ebp+0x59],0xff
 1030288:	sub    BYTE PTR [ebp+0x59],0xff
 103028c:	sub    BYTE PTR [ebp+0x59],0xff
 1030290:	sub    BYTE PTR [ebp+0x59],0xff
 1030294:	sub    BYTE PTR [ebp+0x59],0xff
 1030298:	sub    BYTE PTR [ebp+0x59],0xff
 103029c:	sub    BYTE PTR [ebp+0x59],0xff
 10302a0:	sub    BYTE PTR [ebp+0x59],0xff
 10302a4:	sub    BYTE PTR [ebp+0x59],0xff
 10302a8:	sub    BYTE PTR [ebp+0x59],0xff
 10302ac:	sub    BYTE PTR [ebp+0x59],0xff
 10302b0:	sub    BYTE PTR [ebp+0x59],0xff
 10302b4:	sub    BYTE PTR [ebp+0x59],0xff
 10302b8:	sub    BYTE PTR [ebp+0x59],0xff
 10302bc:	sub    BYTE PTR [ebp+0x59],0xff
 10302c0:	sub    BYTE PTR [ebp+0x59],0xff
 10302c4:	sub    BYTE PTR [ebp+0x59],0xff
 10302c8:	sub    BYTE PTR [ebp+0x59],0xff
 10302cc:	sub    BYTE PTR [ebp+0x59],0xff
 10302d0:	sub    BYTE PTR [ebp+0x59],0xff
 10302d4:	sub    BYTE PTR [ebp+0x59],0xff
 10302d8:	sub    BYTE PTR [ebp+0x59],0xff
 10302dc:	sub    BYTE PTR [ebp+0x59],0xff
 10302e0:	sub    BYTE PTR [ebp+0x59],0xff
 10302e4:	sub    BYTE PTR [ebp+0x59],0xff
 10302e8:	sub    BYTE PTR [ebp+0x59],0xff
 10302ec:	sub    BYTE PTR [ebp+0x59],0xff
 10302f0:	sub    BYTE PTR [ebp+0x59],0xff
 10302f4:	sub    BYTE PTR [ebp+0x59],0xff
 10302f8:	sub    BYTE PTR [ebp+0x59],0xff
 10302fc:	sub    BYTE PTR [ebp+0x59],0xff
 1030300:	sub    BYTE PTR [ebp+0x59],0xff
 1030304:	sub    BYTE PTR [ebp+0x59],0xff
 1030308:	sub    BYTE PTR [ebp+0x59],0xff
 103030c:	sub    BYTE PTR [ebp+0x59],0xff
 1030310:	sub    BYTE PTR [ebp+0x59],0xff
 1030314:	sub    BYTE PTR [ebp+0x59],0xff
 1030318:	sub    BYTE PTR [ebp+0x59],0xff
 103031c:	sub    BYTE PTR [ebp+0x59],0xff
 1030320:	sub    BYTE PTR [ebp+0x59],0xff
 1030324:	sub    BYTE PTR [ebp+0x59],0xff
 1030328:	sub    BYTE PTR [ebp+0x59],0xff
 103032c:	sub    BYTE PTR [ebp+0x59],0xff
 1030330:	sub    BYTE PTR [ebp+0x59],0xff
 1030334:	sub    BYTE PTR [ebp+0x59],0xff
 1030338:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1030374:	sub    DWORD PTR [esi+0x5a],0xf2f7ffff
 103037b:	(bad)  
 103037c:	push   esi
 103037e:	icebp  
 103037f:	(bad)  
 1030380:	push   esi
 1030382:	icebp  
 1030383:	(bad)  
 1030384:	push   ebp
 1030386:	lock (bad) 
 1030388:	push   ebp
 103038a:	out    dx,eax
 103038b:	(bad)  
 103038c:	push   ebp
 103038e:	out    dx,al
 103038f:	(bad)  
 1030390:	push   esp
 1030392:	out    dx,al
 1030393:	(bad)  
 1030394:	push   esp
 1030396:	in     eax,dx
 1030397:	(bad)  
 1030398:	push   esp
 103039a:	in     al,dx
 103039b:	(bad)  
 103039c:	push   ebx
 103039e:	in     al,dx
 103039f:	(bad)  
 10303a0:	push   edx
 10303a2:	jmp    0x10303a3
 10303a4:	push   edx
 10303a6:	jmp    0xffff:0xeaf1ffff
 10303ad:	icebp  
 10303ae:	jmp    0xe9f403b2
 10303b3:	(bad)  
 10303b4:	push   eax
 10303b6:	out    0xff,eax
 10303b8:	push   eax
 10303ba:	out    0xff,al
 10303bc:	(bad)  
 10303bd:	out    dx,eax
 10303be:	in     eax,0xff
 10303c0:	(bad)  
 10303c1:	out    dx,al
 10303c2:	in     al,0xff
 10303c4:	(bad)  
 10303c5:	out    dx,al
 10303c6:	jecxz  0x10303c7
 10303c8:	(bad)  
 10303c9:	in     eax,dx
 10303ca:	jecxz  0x10303cb
 10303cc:	(bad)  
 10303cd:	in     eax,dx
 10303ce:	loop   0x10303cf
 10303d0:	(bad)  
 10303d1:	in     eax,dx
 10303d2:	loope  0x10303d3
 10303d4:	(bad)  
 10303d5:	jmp    0x10303b8
 10303d7:	(bad)  
 10303d8:	(bad)  
 10303d9:	jmp    0x10303bb
 10303db:	(bad)  
 10303dc:	(bad)  
 10303dd:	jmp    0x10303bd
 10303df:	(bad)  
 10303e0:	(bad)  
 10303e1:	jmp    0xffdd:0xeaffffde
 10303e8:	(bad)  
 10303e9:	jmp    0xeb0303ca
 10303ee:	fdiv   st(7),st
 10303f0:	(bad)  
 10303f1:	call   0xe90303d1
 10303f6:	(bad)  
 10303f8:	(bad)  
 10303f9:	call   0xe90303d7
 10303fe:	fdivr  st,st(7)
 1030400:	jmp    edi
 1030402:	fdivr  st,st(7)
 1030404:	jmp    esi
 1030406:	xlat   BYTE PTR ds:[ebx]
 1030407:	(bad)  
 1030408:	jmp    esi
 103040a:	(bad)  
 103040b:	(bad)  
 103040c:	jmp    ebp
 103040e:	(bad)  
 103040f:	(bad)  
 1030410:	jmp    esp
 1030412:	aam    0xff
 1030414:	jmp    esp
 1030416:	sar    edi,cl
 1030418:	jmp    esp
 103041a:	sar    edi,cl
 103041c:	jmp    ebx
 103041e:	sar    bh,cl
 1030420:	jmp    ebx
 1030422:	sar    bh,cl
 1030424:	jmp    edx
 1030426:	sar    edi,1
 1030428:	jmp    edx
 103042a:	sar    bh,1
 103042c:	jmp    ecx
 103042e:	iret   
 103042f:	(bad)  
 1030430:	jmp    ecx
 1030432:	into   
 1030433:	(bad)  
 1030434:	jmp    eax
 1030436:	into   
 1030437:	inc    DWORD PTR [eax+0xff596d]
	...
 1030469:	add    BYTE PTR [eax],al
 103046b:	add    BYTE PTR [ebp-0x72005250],dh
 1030471:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1030477:	dec    DWORD PTR [ebp-0x72007e7b]
 103047d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1030483:	(bad)  
 1030484:	push   esi
 1030486:	icebp  
 1030487:	(bad)  
 1030488:	push   esi
 103048a:	lock (bad) 
 103048c:	push   ebp
 103048e:	out    dx,eax
 103048f:	(bad)  
 1030490:	push   ebp
 1030492:	out    dx,al
 1030493:	(bad)  
 1030494:	push   ebp
 1030496:	out    dx,al
 1030497:	(bad)  
 1030498:	push   ebx
 103049a:	in     eax,dx
 103049b:	(bad)  
 103049c:	push   esp
 103049e:	in     al,dx
 103049f:	(bad)  
 10304a0:	push   ebx
 10304a2:	in     al,dx
 10304a3:	(bad)  
 10304a4:	push   ebx
 10304a6:	jmp    0xffff:0xeaf2ffff
 10304ad:	bnd jmp 0xe9f504b2
 10304b3:	(bad)  
 10304b4:	push   ecx
 10304b6:	out    0xff,eax
 10304b8:	push   eax
 10304ba:	out    0xff,eax
 10304bc:	push   eax
 10304be:	out    0xff,al
 10304c0:	(bad)  
 10304c1:	out    dx,eax
 10304c2:	out    0xff,al
 10304c4:	(bad)  
 10304c5:	out    dx,eax
 10304c6:	in     al,0xff
 10304c8:	(bad)  
 10304c9:	out    dx,al
 10304ca:	in     al,0xff
 10304cc:	(bad)  
 10304cd:	out    dx,al
 10304ce:	jecxz  0x10304cf
 10304d0:	(bad)  
 10304d1:	in     eax,dx
 10304d2:	loop   0x10304d3
 10304d4:	(bad)  
 10304d5:	in     al,dx
 10304d6:	loop   0x10304d7
 10304d8:	(bad)  
 10304d9:	in     al,dx
 10304da:	loopne 0x10304db
 10304dc:	(bad)  
 10304dd:	jmp    0x10304bf
 10304df:	(bad)  
 10304e0:	(bad)  
 10304e1:	jmp    0x10304c2
 10304e3:	(bad)  
 10304e4:	(bad)  
 10304e5:	jmp    0xffdd:0xeaffffdf
 10304ec:	(bad)  
 10304ed:	jmp    0xeb0304ce
 10304f2:	fdiv   st(7),st
 10304f4:	(bad)  
 10304f5:	jmp    0xea0304d5
 10304fa:	(bad)  
 10304fc:	jmp    edi
 10304fe:	fcos   
 1030500:	jmp    edi
 1030502:	fdivr  st,st(7)
 1030504:	jmp    esi
 1030506:	fdivr  st,st(7)
 1030508:	jmp    esi
 103050a:	xlat   BYTE PTR ds:[ebx]
 103050b:	(bad)  
 103050c:	jmp    esi
 103050e:	xlat   BYTE PTR ds:[ebx]
 103050f:	(bad)  
 1030510:	jmp    ebp
 1030512:	(bad)  
 1030513:	(bad)  
 1030514:	jmp    ebp
 1030516:	aad    0xff
 1030518:	jmp    esp
 103051a:	aam    0xff
 103051c:	jmp    esp
 103051e:	aam    0xff
 1030520:	jmp    ebx
 1030522:	sar    bh,cl
 1030524:	jmp    edx
 1030526:	sar    bh,cl
 1030528:	jmp    edx
 103052a:	sar    edi,1
 103052c:	jmp    edx
 103052e:	sar    bh,1
 1030530:	jmp    edx
 1030532:	iret   
 1030533:	(bad)  
 1030534:	jmp    eax
 1030536:	iret   
 1030537:	inc    DWORD PTR [eax+0xff596d]
	...
 1030569:	add    BYTE PTR [eax],al
 103056b:	add    BYTE PTR [ebp+0x62],ch
 103056e:	pop    ebx
 103056f:	dec    ecx
 1030571:	mov    ah,0xff
 1030574:	leave  
 1030575:	mov    ah,0xff
 1030578:	(bad)  
 1030579:	(bad)  
 103057a:	(bad)  
 103057b:	jmp    esp
 103057d:	jecxz  0x1030561
 103057f:	jmp    FWORD PTR [ebp+0x62]
 1030582:	pop    ebx
 1030583:	(bad)  
 1030584:	push   edi
 1030586:	repnz (bad) 
 1030588:	push   esi
 103058a:	icebp  
 103058b:	(bad)  
 103058c:	push   esi
 103058e:	lock (bad) 
 1030590:	push   ebp
 1030592:	out    dx,eax
 1030593:	(bad)  
 1030594:	push   ebp
 1030596:	out    dx,eax
 1030597:	(bad)  
 1030598:	push   esp
 103059a:	in     eax,dx
 103059b:	(bad)  
 103059c:	push   esp
 103059e:	in     eax,dx
 103059f:	(bad)  
 10305a0:	push   ebx
 10305a2:	in     al,dx
 10305a3:	(bad)  
 10305a4:	push   ebx
 10305a6:	jmp    0x10305a7
 10305a8:	push   ebx
 10305aa:	jmp    0x10305ab
 10305ac:	push   edx
 10305ae:	jmp    0x10305af
 10305b0:	push   ecx
 10305b2:	jmp    0xe9f505b6
 10305b7:	(bad)  
 10305b8:	push   eax
 10305ba:	out    0xff,eax
 10305bc:	push   eax
 10305be:	out    0xff,eax
 10305c0:	push   eax
 10305c2:	out    0xff,al
 10305c4:	(bad)  
 10305c5:	out    dx,eax
 10305c6:	in     eax,0xff
 10305c8:	(bad)  
 10305c9:	out    dx,eax
 10305ca:	in     eax,0xff
 10305cc:	(bad)  
 10305cd:	out    dx,al
 10305ce:	in     al,0xff
 10305d0:	(bad)  
 10305d1:	in     eax,dx
 10305d2:	jecxz  0x10305d3
 10305d4:	(bad)  
 10305d5:	in     eax,dx
 10305d6:	loop   0x10305d7
 10305d8:	(bad)  
 10305d9:	in     eax,dx
 10305da:	loope  0x10305db
 10305dc:	(bad)  
 10305dd:	in     al,dx
 10305de:	loopne 0x10305df
 10305e0:	(bad)  
 10305e1:	in     al,dx
 10305e2:	loopne 0x10305e3
 10305e4:	(bad)  
 10305e5:	jmp    0x10305c6
 10305e7:	(bad)  
 10305e8:	(bad)  
 10305e9:	jmp    0xffdd:0xeaffffde
 10305f0:	(bad)  
 10305f1:	jmp    0xeb0305d2
 10305f6:	(bad)  
 10305f8:	(bad)  
 10305f9:	call   0xea0305d9
 10305fe:	(bad)  
 1030600:	jmp    edi
 1030602:	fcos   
 1030604:	jmp    edi
 1030606:	fcos   
 1030608:	jmp    edi
 103060a:	fdivr  st,st(7)
 103060c:	jmp    esi
 103060e:	xlat   BYTE PTR ds:[ebx]
 103060f:	(bad)  
 1030610:	jmp    ebp
 1030612:	(bad)  
 1030613:	(bad)  
 1030614:	jmp    ebp
 1030616:	aad    0xff
 1030618:	jmp    esp
 103061a:	aam    0xff
 103061c:	jmp    esp
 103061e:	aam    0xff
 1030620:	jmp    esp
 1030622:	sar    edi,cl
 1030624:	jmp    esp
 1030626:	sar    bh,cl
 1030628:	jmp    ebx
 103062a:	sar    bh,cl
 103062c:	jmp    edx
 103062e:	sar    edi,1
 1030630:	jmp    edx
 1030632:	sar    edi,1
 1030634:	jmp    ecx
 1030636:	iret   
 1030637:	inc    DWORD PTR [eax+0xff596d]
	...
 1030669:	add    BYTE PTR [eax],al
 103066b:	add    dh,ch
 103066d:	in     eax,dx
 103066e:	in     al,dx
 103066f:	jmp    ebp
 1030671:	jecxz  0x1030655
 1030673:	jmp    ebp
 1030675:	jecxz  0x1030659
 1030677:	jmp    ebp
 1030679:	jecxz  0x103065d
 103067b:	jmp    ebp
 103067d:	jecxz  0x1030661
 103067f:	(bad)  
 1030680:	out    dx,al
 1030681:	in     eax,dx
 1030682:	in     al,dx
 1030683:	(bad)  
 1030684:	(bad)  
 1030685:	clc    
 1030686:	repnz (bad) 
 1030688:	push   esi
 103068a:	repnz (bad) 
 103068c:	push   esi
 103068e:	icebp  
 103068f:	(bad)  
 1030690:	push   esi
 1030692:	lock (bad) 
 1030694:	push   ebp
 1030696:	out    dx,eax
 1030697:	(bad)  
 1030698:	push   ebp
 103069a:	out    dx,eax
 103069b:	(bad)  
 103069c:	push   esp
 103069e:	out    dx,al
 103069f:	(bad)  
 10306a0:	push   esp
 10306a2:	in     eax,dx
 10306a3:	(bad)  
 10306a4:	push   ebx
 10306a6:	in     al,dx
 10306a7:	(bad)  
 10306a8:	push   ebx
 10306aa:	jmp    0x10306ab
 10306ac:	push   ebx
 10306ae:	jmp    0x10306af
 10306b0:	push   edx
 10306b2:	jmp    0xffff:0xe9f1ffff
 10306b9:	icebp  
 10306ba:	call   0xe9f506be
 10306bf:	(bad)  
 10306c0:	push   eax
 10306c2:	out    0xff,eax
 10306c4:	(bad)  
 10306c5:	out    dx,eax
 10306c6:	out    0xff,al
 10306c8:	(bad)  
 10306c9:	out    dx,eax
 10306ca:	out    0xff,al
 10306cc:	(bad)  
 10306cd:	out    dx,al
 10306ce:	in     eax,0xff
 10306d0:	(bad)  
 10306d1:	out    dx,al
 10306d2:	jecxz  0x10306d3
 10306d4:	(bad)  
 10306d5:	out    dx,al
 10306d6:	jecxz  0x10306d7
 10306d8:	(bad)  
 10306d9:	in     eax,dx
 10306da:	loop   0x10306db
 10306dc:	(bad)  
 10306dd:	in     al,dx
 10306de:	loope  0x10306df
 10306e0:	(bad)  
 10306e1:	in     eax,dx
 10306e2:	loopne 0x10306e3
 10306e4:	(bad)  
 10306e5:	in     al,dx
 10306e6:	(bad)  
 10306e8:	(bad)  
 10306e9:	jmp    0x10306ca
 10306eb:	(bad)  
 10306ec:	(bad)  
 10306ed:	jmp    0xffdd:0xeaffffde
 10306f4:	(bad)  
 10306f5:	jmp    0xffdc:0xe9ffffdd
 10306fc:	(bad)  
 10306fd:	jmp    0xea0306dc
 1030702:	(bad)  
 1030704:	jmp    edi
 1030706:	(bad)  
 1030708:	jmp    edi
 103070a:	fdivr  st,st(7)
 103070c:	jmp    esi
 103070e:	fdivr  st,st(7)
 1030710:	jmp    esi
 1030712:	xlat   BYTE PTR ds:[ebx]
 1030713:	(bad)  
 1030714:	jmp    esi
 1030716:	(bad)  
 1030717:	(bad)  
 1030718:	jmp    ebp
 103071a:	aad    0xff
 103071c:	jmp    ebp
 103071e:	aad    0xff
 1030720:	jmp    esp
 1030722:	aam    0xff
 1030724:	jmp    esp
 1030726:	aam    0xff
 1030728:	jmp    esp
 103072a:	sar    edi,cl
 103072c:	jmp    ebx
 103072e:	sar    bh,cl
 1030730:	jmp    ebx
 1030732:	sar    edi,1
 1030734:	jmp    edx
 1030736:	sar    bh,1
 1030738:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1030774:	xor    DWORD PTR [eax+0x5c],0xffffffff
 1030778:	(bad)  
 1030779:	stc    
 103077a:	cmc    
 103077b:	(bad)  
 103077c:	(bad)  
 103077d:	clc    
 103077e:	hlt    
 103077f:	(bad)  
 1030780:	(bad)  
 1030781:	clc    
 1030782:	repz (bad) 
 1030784:	(bad)  
 1030785:	clc    
 1030786:	repz (bad) 
 1030788:	push   edi
 103078a:	repnz (bad) 
 103078c:	push   edi
 103078e:	icebp  
 103078f:	(bad)  
 1030790:	push   esi
 1030792:	icebp  
 1030793:	(bad)  
 1030794:	push   ebp
 1030796:	lock (bad) 
 1030798:	push   ebp
 103079a:	out    dx,eax
 103079b:	(bad)  
 103079c:	push   ebp
 103079e:	out    dx,eax
 103079f:	(bad)  
 10307a0:	push   esp
 10307a2:	out    dx,al
 10307a3:	(bad)  
 10307a4:	push   esp
 10307a6:	out    dx,al
 10307a7:	(bad)  
 10307a8:	push   esp
 10307aa:	in     al,dx
 10307ab:	(bad)  
 10307ac:	push   ebx
 10307ae:	jmp    0x10307af
 10307b0:	push   ebx
 10307b2:	jmp    0x10307b3
 10307b4:	push   edx
 10307b6:	jmp    0x10307b7
 10307b8:	push   ecx
 10307ba:	jmp    0xe9f507be
 10307bf:	(bad)  
 10307c0:	push   ecx
 10307c2:	call   0xe9f407c6
 10307c7:	(bad)  
 10307c8:	push   eax
 10307ca:	out    0xff,al
 10307cc:	(bad)  
 10307cd:	out    dx,eax
 10307ce:	in     eax,0xff
 10307d0:	(bad)  
 10307d1:	out    dx,al
 10307d2:	in     al,0xff
 10307d4:	(bad)  
 10307d5:	out    dx,al
 10307d6:	in     al,0xff
 10307d8:	(bad)  
 10307d9:	out    dx,al
 10307da:	jecxz  0x10307db
 10307dc:	(bad)  
 10307dd:	in     eax,dx
 10307de:	loop   0x10307df
 10307e0:	(bad)  
 10307e1:	in     al,dx
 10307e2:	loope  0x10307e3
 10307e4:	(bad)  
 10307e5:	in     al,dx
 10307e6:	loope  0x10307e7
 10307e8:	(bad)  
 10307e9:	in     al,dx
 10307ea:	(bad)  
 10307ec:	(bad)  
 10307ed:	jmp    0x10307ce
 10307ef:	(bad)  
 10307f0:	(bad)  
 10307f1:	jmp    0x10307d1
 10307f3:	(bad)  
 10307f4:	(bad)  
 10307f5:	jmp    0xffdd:0xe9ffffdd
 10307fc:	(bad)  
 10307fd:	jmp    0xeb0307dd
 1030802:	(bad)  
 1030804:	(bad)  
 1030805:	call   0xe90307e4
 103080a:	fcos   
 103080c:	jmp    edi
 103080e:	fcos   
 1030810:	jmp    edi
 1030812:	fdivr  st,st(7)
 1030814:	jmp    esi
 1030816:	xlat   BYTE PTR ds:[ebx]
 1030817:	(bad)  
 1030818:	jmp    ebp
 103081a:	(bad)  
 103081b:	(bad)  
 103081c:	jmp    ebp
 103081e:	aad    0xff
 1030820:	jmp    esp
 1030822:	aad    0xff
 1030824:	jmp    esp
 1030826:	aam    0xff
 1030828:	jmp    ebx
 103082a:	sar    edi,cl
 103082c:	jmp    esp
 103082e:	sar    edi,cl
 1030830:	jmp    edx
 1030832:	sar    bh,cl
 1030834:	jmp    edx
 1030836:	sar    edi,1
 1030838:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1030874:	test   BYTE PTR [eax+0x5d],dh
 1030877:	(bad)  
 1030878:	(bad)  
 1030879:	stc    
 103087a:	idiv   bh
 103087c:	(bad)  
 103087d:	stc    
 103087e:	cmc    
 103087f:	(bad)  
 1030880:	(bad)  
 1030881:	clc    
 1030882:	hlt    
 1030883:	(bad)  
 1030884:	(bad)  
 1030885:	clc    
 1030886:	hlt    
 1030887:	(bad)  
 1030888:	(bad)  
 1030889:	clc    
 103088a:	repz (bad) 
 103088c:	push   edi
 103088e:	repz (bad) 
 1030890:	push   edi
 1030892:	repnz (bad) 
 1030894:	push   edi
 1030896:	icebp  
 1030897:	(bad)  
 1030898:	push   ebp
 103089a:	lock (bad) 
 103089c:	push   esi
 103089e:	out    dx,eax
 103089f:	(bad)  
 10308a0:	push   ebp
 10308a2:	out    dx,eax
 10308a3:	(bad)  
 10308a4:	push   esp
 10308a6:	out    dx,al
 10308a7:	(bad)  
 10308a8:	push   esp
 10308aa:	out    dx,al
 10308ab:	(bad)  
 10308ac:	push   ebx
 10308ae:	in     eax,dx
 10308af:	(bad)  
 10308b0:	push   ebx
 10308b2:	in     al,dx
 10308b3:	(bad)  
 10308b4:	push   edx
 10308b6:	jmp    0x10308b7
 10308b8:	push   edx
 10308ba:	jmp    0x10308bb
 10308bc:	push   edx
 10308be:	jmp    0xffff:0xe9f1ffff
 10308c5:	icebp  
 10308c6:	call   0xe9f408ca
 10308cb:	(bad)  
 10308cc:	(bad)  
 10308cd:	out    dx,eax
 10308ce:	out    0xff,al
 10308d0:	(bad)  
 10308d1:	out    dx,eax
 10308d2:	out    0xff,al
 10308d4:	(bad)  
 10308d5:	out    dx,al
 10308d6:	in     eax,0xff
 10308d8:	(bad)  
 10308d9:	out    dx,al
 10308da:	jecxz  0x10308db
 10308dc:	(bad)  
 10308dd:	out    dx,al
 10308de:	jecxz  0x10308df
 10308e0:	(bad)  
 10308e1:	in     eax,dx
 10308e2:	jecxz  0x10308e3
 10308e4:	(bad)  
 10308e5:	in     eax,dx
 10308e6:	loop   0x10308e7
 10308e8:	(bad)  
 10308e9:	in     al,dx
 10308ea:	loope  0x10308eb
 10308ec:	(bad)  
 10308ed:	jmp    0x10308cf
 10308ef:	(bad)  
 10308f0:	(bad)  
 10308f1:	jmp    0x10308d2
 10308f3:	(bad)  
 10308f4:	(bad)  
 10308f5:	jmp    0xffde:0xeaffffde
 10308fc:	(bad)  
 10308fd:	jmp    0xeb0308de
 1030902:	fdiv   st(7),st
 1030904:	(bad)  
 1030905:	call   0xea0308e5
 103090a:	(bad)  
 103090c:	(bad)  
 103090d:	call   0xe90308eb
 1030912:	fdivr  st,st(7)
 1030914:	jmp    esi
 1030916:	fdivr  st,st(7)
 1030918:	jmp    esi
 103091a:	xlat   BYTE PTR ds:[ebx]
 103091b:	(bad)  
 103091c:	jmp    esi
 103091e:	xlat   BYTE PTR ds:[ebx]
 103091f:	(bad)  
 1030920:	jmp    ebp
 1030922:	aad    0xff
 1030924:	jmp    ebp
 1030926:	aad    0xff
 1030928:	jmp    ebp
 103092a:	aam    0xff
 103092c:	jmp    ebx
 103092e:	sar    edi,cl
 1030930:	jmp    esp
 1030932:	sar    edi,cl
 1030934:	jmp    ebx
 1030936:	sar    bh,cl
 1030938:	sub    BYTE PTR [ebp+0x59],0xff
	...
 103096c:	mov    ch,0xb0
 103096e:	lods   eax,DWORD PTR ds:[esi]
 103096f:	dec    DWORD PTR [ebp-0x72007e7b]
 1030975:	test   DWORD PTR [ecx-0x7e7a7201],eax
 103097b:	dec    DWORD PTR [ebp-0x4a007e7b]
 1030981:	mov    al,0xad
 1030983:	(bad)  
 1030984:	(bad)  
 1030985:	clc    
 1030986:	cmc    
 1030987:	(bad)  
 1030988:	(bad)  
 1030989:	clc    
 103098a:	hlt    
 103098b:	(bad)  
 103098c:	push   edi
 103098e:	repz (bad) 
 1030990:	push   edi
 1030992:	repz (bad) 
 1030994:	push   edi
 1030996:	repnz (bad) 
 1030998:	push   esi
 103099a:	icebp  
 103099b:	(bad)  
 103099c:	push   esi
 103099e:	lock (bad) 
 10309a0:	push   ebp
 10309a2:	out    dx,eax
 10309a3:	(bad)  
 10309a4:	push   ebp
 10309a6:	out    dx,eax
 10309a7:	(bad)  
 10309a8:	push   ebp
 10309aa:	out    dx,al
 10309ab:	(bad)  
 10309ac:	push   esp
 10309ae:	in     eax,dx
 10309af:	(bad)  
 10309b0:	push   esp
 10309b2:	in     eax,dx
 10309b3:	(bad)  
 10309b4:	std    
 10309b5:	icebp  
 10309b6:	jmp    0xf1ff:0xe4eaf7ff
 10309bd:	out    0xde,al
 10309bf:	push   ecx
 10309c1:	in     al,0xdd
 10309c3:	push   edi
 10309c5:	jmp    0xf00109ab
 10309ca:	out    0xff,al
 10309cc:	push   eax
 10309ce:	out    0xff,eax
 10309d0:	push   eax
 10309d2:	out    0xff,al
 10309d4:	(bad)  
 10309d5:	out    dx,eax
 10309d6:	out    0xff,al
 10309d8:	(bad)  
 10309d9:	out    dx,eax
 10309da:	in     eax,0xff
 10309dc:	(bad)  
 10309dd:	out    dx,eax
 10309de:	in     al,0xff
 10309e0:	(bad)  
 10309e1:	out    dx,al
 10309e2:	jecxz  0x10309e3
 10309e4:	(bad)  
 10309e5:	out    dx,al
 10309e6:	loop   0x10309e7
 10309e8:	(bad)  
 10309e9:	in     al,dx
 10309ea:	loope  0x10309eb
 10309ec:	(bad)  
 10309ed:	in     al,dx
 10309ee:	loope  0x10309ef
 10309f0:	(bad)  
 10309f1:	in     al,dx
 10309f2:	loopne 0x10309f3
 10309f4:	(bad)  
 10309f5:	jmp    0x10309d6
 10309f7:	(bad)  
 10309f8:	(bad)  
 10309f9:	jmp    0xffdd:0xeaffffde
 1030a00:	(bad)  
 1030a01:	jmp    0xeb0309e2
 1030a06:	fdiv   st(7),st
 1030a08:	(bad)  
 1030a09:	jmp    0xea0309e9
 1030a0e:	(bad)  
 1030a10:	(bad)  
 1030a11:	call   0xea0309f0
 1030a16:	fcos   
 1030a18:	jmp    edi
 1030a1a:	fdivr  st,st(7)
 1030a1c:	jmp    esi
 1030a1e:	fdivr  st,st(7)
 1030a20:	jmp    esi
 1030a22:	xlat   BYTE PTR ds:[ebx]
 1030a23:	(bad)  
 1030a24:	jmp    esi
 1030a26:	(bad)  
 1030a27:	(bad)  
 1030a28:	jmp    ebp
 1030a2a:	aad    0xff
 1030a2c:	jmp    esp
 1030a2e:	aam    0xff
 1030a30:	jmp    esp
 1030a32:	aam    0xff
 1030a34:	jmp    esp
 1030a36:	sar    edi,cl
 1030a38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1030a6c:	ins    DWORD PTR es:[edi],dx
 1030a6d:	bound  ebx,QWORD PTR [ebx-0x1]
 1030a70:	leave  
 1030a71:	mov    ah,0xff
 1030a74:	leave  
 1030a75:	mov    ah,0xff
 1030a78:	(bad)  
 1030a79:	(bad)  
 1030a7a:	(bad)  
 1030a7b:	jmp    esp
 1030a7d:	jecxz  0x1030a61
 1030a7f:	jmp    FWORD PTR [ebp+0x62]
 1030a82:	pop    ebx
 1030a83:	(bad)  
 1030a84:	(bad)  
 1030a85:	stc    
 1030a86:	idiv   bh
 1030a88:	(bad)  
 1030a89:	stc    
 1030a8a:	hlt    
 1030a8b:	(bad)  
 1030a8c:	(bad)  
 1030a8d:	clc    
 1030a8e:	hlt    
 1030a8f:	(bad)  
 1030a90:	(bad)  
 1030a91:	clc    
 1030a92:	repz (bad) 
 1030a94:	push   edi
 1030a96:	repz (bad) 
 1030a98:	push   edi
 1030a9a:	repnz (bad) 
 1030a9c:	push   edi
 1030a9e:	icebp  
 1030a9f:	(bad)  
 1030aa0:	push   esi
 1030aa2:	lock (bad) 
 1030aa4:	push   esi
 1030aa6:	lock (bad) 
 1030aa8:	push   ebp
 1030aaa:	out    dx,eax
 1030aab:	(bad)  
 1030aac:	push   ebp
 1030aae:	out    dx,eax
 1030aaf:	(bad)  
 1030ab0:	push   esp
 1030ab2:	out    dx,al
 1030ab3:	(bad)  
 1030ab4:	clc    
 1030ab5:	in     al,dx
 1030ab6:	out    0xff,al
 1030ab8:	in     eax,0xdb
 1030aba:	aam    0xff
 1030abc:	aam    0xca
 1030abe:	(bad)  
 1030abf:	call   esp
 1030ac1:	leave  
 1030ac2:	ret    
 1030ac3:	jmp    edx
 1030ac5:	(bad)  
 1030ac6:	iret   
 1030ac7:	push   ebx
 1030ac9:	out    0xde,al
 1030acb:	(bad)  
 1030acc:	std    
 1030acd:	out    dx,al
 1030ace:	out    0xff,al
 1030ad0:	push   eax
 1030ad2:	out    0xff,eax
 1030ad4:	(bad)  
 1030ad5:	out    dx,eax
 1030ad6:	out    0xff,al
 1030ad8:	(bad)  
 1030ad9:	out    dx,eax
 1030ada:	out    0xff,al
 1030adc:	(bad)  
 1030add:	out    dx,al
 1030ade:	in     eax,0xff
 1030ae0:	(bad)  
 1030ae1:	out    dx,al
 1030ae2:	in     al,0xff
 1030ae4:	(bad)  
 1030ae5:	in     eax,dx
 1030ae6:	in     al,0xff
 1030ae8:	(bad)  
 1030ae9:	in     eax,dx
 1030aea:	jecxz  0x1030aeb
 1030aec:	(bad)  
 1030aed:	in     eax,dx
 1030aee:	loope  0x1030aef
 1030af0:	(bad)  
 1030af1:	in     al,dx
 1030af2:	loopne 0x1030af3
 1030af4:	(bad)  
 1030af5:	in     al,dx
 1030af6:	loopne 0x1030af7
 1030af8:	(bad)  
 1030af9:	in     al,dx
 1030afa:	(bad)  
 1030afc:	(bad)  
 1030afd:	jmp    0xffde:0xeaffffdf
 1030b04:	(bad)  
 1030b05:	jmp    0xffdc:0xe9ffffdd
 1030b0c:	(bad)  
 1030b0d:	jmp    0xeb030aee
 1030b12:	(bad)  
 1030b14:	(bad)  
 1030b15:	call   0xea030af3
 1030b1a:	fdivr  st,st(7)
 1030b1c:	jmp    esi
 1030b1e:	fcos   
 1030b20:	jmp    edi
 1030b22:	xlat   BYTE PTR ds:[ebx]
 1030b23:	(bad)  
 1030b24:	jmp    esi
 1030b26:	xlat   BYTE PTR ds:[ebx]
 1030b27:	(bad)  
 1030b28:	jmp    esi
 1030b2a:	(bad)  
 1030b2b:	(bad)  
 1030b2c:	jmp    ebp
 1030b2e:	aad    0xff
 1030b30:	jmp    esp
 1030b32:	aam    0xff
 1030b34:	jmp    esp
 1030b36:	sar    edi,cl
 1030b38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1030b6c:	out    dx,al
 1030b6d:	in     eax,dx
 1030b6e:	in     al,dx
 1030b6f:	jmp    ebp
 1030b71:	jecxz  0x1030b55
 1030b73:	jmp    ebp
 1030b75:	jecxz  0x1030b59
 1030b77:	jmp    ebp
 1030b79:	jecxz  0x1030b5d
 1030b7b:	jmp    ebp
 1030b7d:	jecxz  0x1030b61
 1030b7f:	(bad)  
 1030b80:	out    dx,al
 1030b81:	in     eax,dx
 1030b82:	in     al,dx
 1030b83:	(bad)  
 1030b84:	(bad)  
 1030b85:	cli    
 1030b86:	idiv   bh
 1030b88:	(bad)  
 1030b89:	stc    
 1030b8a:	idiv   bh
 1030b8c:	(bad)  
 1030b8d:	clc    
 1030b8e:	hlt    
 1030b8f:	(bad)  
 1030b90:	(bad)  
 1030b91:	clc    
 1030b92:	hlt    
 1030b93:	(bad)  
 1030b94:	(bad)  
 1030b95:	clc    
 1030b96:	hlt    
 1030b97:	(bad)  
 1030b98:	push   edi
 1030b9a:	repnz (bad) 
 1030b9c:	push   esi
 1030b9e:	repnz (bad) 
 1030ba0:	push   esi
 1030ba2:	icebp  
 1030ba3:	(bad)  
 1030ba4:	push   esi
 1030ba6:	icebp  
 1030ba7:	(bad)  
 1030ba8:	push   esi
 1030baa:	out    dx,eax
 1030bab:	(bad)  
 1030bac:	push   ebp
 1030bae:	out    dx,eax
 1030baf:	(bad)  
 1030bb0:	push   ebp
 1030bb2:	out    dx,al
 1030bb3:	call   DWORD PTR [ebp+0x24ffb9aa]
 1030bb9:	pop    ebp
 1030bba:	cmp    edi,0x1a
 1030bbd:	push   esi
 1030bbe:	jg     0x1030bbf
 1030bc0:	jp     0x1030b51
 1030bc2:	popf   
 1030bc3:	dec    esp
 1030bc5:	ret    0xffbc
 1030bc8:	(bad)  
 1030bca:	int    0xff
 1030bcc:	repz out 0xde,al
 1030bcf:	(bad)  
 1030bd0:	std    
 1030bd1:	out    dx,eax
 1030bd2:	out    0xff,eax
 1030bd4:	push   eax
 1030bd6:	out    0xff,eax
 1030bd8:	(bad)  
 1030bd9:	out    dx,eax
 1030bda:	out    0xff,al
 1030bdc:	(bad)  
 1030bdd:	out    dx,eax
 1030bde:	out    0xff,al
 1030be0:	(bad)  
 1030be1:	out    dx,al
 1030be2:	in     eax,0xff
 1030be4:	(bad)  
 1030be5:	out    dx,eax
 1030be6:	in     al,0xff
 1030be8:	(bad)  
 1030be9:	in     eax,dx
 1030bea:	jecxz  0x1030beb
 1030bec:	(bad)  
 1030bed:	in     eax,dx
 1030bee:	loop   0x1030bef
 1030bf0:	(bad)  
 1030bf1:	in     eax,dx
 1030bf2:	loope  0x1030bf3
 1030bf4:	(bad)  
 1030bf5:	in     al,dx
 1030bf6:	loope  0x1030bf7
 1030bf8:	(bad)  
 1030bf9:	in     al,dx
 1030bfa:	loopne 0x1030bfb
 1030bfc:	(bad)  
 1030bfd:	jmp    0x1030bde
 1030bff:	(bad)  
 1030c00:	(bad)  
 1030c01:	jmp    0xffde:0xeaffffde
 1030c08:	(bad)  
 1030c09:	jmp    0xffdc:0xeaffffdd
 1030c10:	(bad)  
 1030c11:	jmp    0xeb030bf1
 1030c16:	(bad)  
 1030c18:	(bad)  
 1030c19:	call   0xe9030bf7
 1030c1e:	fcos   
 1030c20:	jmp    edi
 1030c22:	fdivr  st,st(7)
 1030c24:	jmp    esi
 1030c26:	xlat   BYTE PTR ds:[ebx]
 1030c27:	(bad)  
 1030c28:	jmp    esi
 1030c2a:	(bad)  
 1030c2b:	(bad)  
 1030c2c:	jmp    ebp
 1030c2e:	(bad)  
 1030c2f:	(bad)  
 1030c30:	jmp    ebp
 1030c32:	aad    0xff
 1030c34:	jmp    esp
 1030c36:	aam    0xff
 1030c38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1030c74:	xchg   DWORD PTR [ebx+0x5f],esi
 1030c77:	(bad)  
 1030c78:	(bad)  
 1030c79:	cli    
 1030c7a:	clc    
 1030c7b:	(bad)  
 1030c7c:	(bad)  
 1030c7d:	sti    
 1030c7e:	clc    
 1030c7f:	(bad)  
 1030c80:	(bad)  
 1030c81:	cli    
 1030c82:	idiv   edi
 1030c84:	(bad)  
 1030c85:	cli    
 1030c86:	idiv   edi
 1030c88:	(bad)  
 1030c89:	stc    
 1030c8a:	idiv   bh
 1030c8c:	(bad)  
 1030c8d:	stc    
 1030c8e:	idiv   bh
 1030c90:	(bad)  
 1030c91:	clc    
 1030c92:	cmc    
 1030c93:	(bad)  
 1030c94:	(bad)  
 1030c95:	clc    
 1030c96:	hlt    
 1030c97:	(bad)  
 1030c98:	(bad)  
 1030c99:	clc    
 1030c9a:	repz (bad) 
 1030c9c:	push   edi
 1030c9e:	repnz (bad) 
 1030ca0:	push   edi
 1030ca2:	repnz (bad) 
 1030ca4:	push   esi
 1030ca6:	repnz (bad) 
 1030ca8:	push   esi
 1030caa:	icebp  
 1030cab:	(bad)  
 1030cac:	push   ebp
 1030cae:	lock (bad) 
 1030cb0:	push   ebp
 1030cb2:	out    dx,eax
 1030cb3:	(bad)  
 1030cb4:	cmp    DWORD PTR [edi-0x6f],ebp
 1030cb7:	push   DWORD PTR [edx-0x4a00101e]
 1030cbd:	repnz sti 
 1030cbf:	(bad)  
 1030cc0:	cmp    edi,DWORD PTR [ebx-0x63]
 1030cc3:	call   FWORD PTR [ebp+0x76]
 1030cc6:	mov    edi,edi
 1030cc8:	retf   
 1030cc9:	sar    DWORD PTR [ebx-0x312a1f01],0xff
 1030cd0:	hlt    
 1030cd1:	call   0xf1010cb5
 1030cd6:	out    0xff,al
 1030cd8:	push   ecx
 1030cda:	out    0xff,eax
 1030cdc:	push   eax
 1030cde:	out    0xff,eax
 1030ce0:	(bad)  
 1030ce1:	out    dx,eax
 1030ce2:	out    0xff,al
 1030ce4:	(bad)  
 1030ce5:	out    dx,al
 1030ce6:	in     eax,0xff
 1030ce8:	(bad)  
 1030ce9:	out    dx,eax
 1030cea:	in     al,0xff
 1030cec:	(bad)  
 1030ced:	in     eax,dx
 1030cee:	in     al,0xff
 1030cf0:	(bad)  
 1030cf1:	in     eax,dx
 1030cf2:	loop   0x1030cf3
 1030cf4:	(bad)  
 1030cf5:	in     al,dx
 1030cf6:	loop   0x1030cf7
 1030cf8:	(bad)  
 1030cf9:	in     eax,dx
 1030cfa:	loope  0x1030cfb
 1030cfc:	(bad)  
 1030cfd:	in     al,dx
 1030cfe:	loopne 0x1030cff
 1030d00:	(bad)  
 1030d01:	jmp    0x1030ce3
 1030d03:	(bad)  
 1030d04:	(bad)  
 1030d05:	jmp    0x1030ce5
 1030d07:	(bad)  
 1030d08:	(bad)  
 1030d09:	jmp    0xffdd:0xeaffffde
 1030d10:	(bad)  
 1030d11:	jmp    0xffdc:0xe9ffffdc
 1030d18:	(bad)  
 1030d19:	call   0xea030cf9
 1030d1e:	(bad)  
 1030d20:	(bad)  
 1030d21:	call   0xe9030cff
 1030d26:	fdivr  st,st(7)
 1030d28:	jmp    esi
 1030d2a:	fdivr  st,st(7)
 1030d2c:	jmp    esi
 1030d2e:	xlat   BYTE PTR ds:[ebx]
 1030d2f:	(bad)  
 1030d30:	jmp    ebp
 1030d32:	(bad)  
 1030d33:	(bad)  
 1030d34:	jmp    ebp
 1030d36:	aad    0xff
 1030d38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1030d74:	xchg   DWORD PTR [eax+eiz*2-0x1],esi
 1030d78:	(bad)  
 1030d79:	sti    
 1030d7a:	stc    
 1030d7b:	(bad)  
 1030d7c:	(bad)  
 1030d7d:	sti    
 1030d7e:	clc    
 1030d7f:	(bad)  
 1030d80:	(bad)  
 1030d81:	sti    
 1030d82:	clc    
 1030d83:	(bad)  
 1030d84:	(bad)  
 1030d85:	cli    
 1030d86:	idiv   edi
 1030d88:	(bad)  
 1030d89:	stc    
 1030d8a:	idiv   edi
 1030d8c:	(bad)  
 1030d8d:	cli    
 1030d8e:	idiv   bh
 1030d90:	(bad)  
 1030d91:	stc    
 1030d92:	idiv   bh
 1030d94:	(bad)  
 1030d95:	clc    
 1030d96:	cmc    
 1030d97:	(bad)  
 1030d98:	(bad)  
 1030d99:	stc    
 1030d9a:	cmc    
 1030d9b:	(bad)  
 1030d9c:	push   edi
 1030d9e:	repz (bad) 
 1030da0:	push   edi
 1030da2:	repz (bad) 
 1030da4:	push   edi
 1030da6:	repnz (bad) 
 1030da8:	push   edi
 1030daa:	icebp  
 1030dab:	(bad)  
 1030dac:	push   esi
 1030dae:	icebp  
 1030daf:	(bad)  
 1030db0:	push   esi
 1030db2:	lock push DWORD PTR [esi]
 1030db5:	outs   dx,DWORD PTR ds:[esi]
 1030db6:	xchg   ebx,eax
 1030db7:	dec    esp
 1030db9:	idiv   edi
 1030dbb:	push   DWORD PTR [esp+esi*8-0xe550001]
 1030dc2:	cld    
 1030dc3:	(bad)  
 1030dc4:	cmp    DWORD PTR [esi-0x67],esi
 1030dc7:	push   DWORD PTR [ecx+ecx*4-0x68]
 1030dcb:	dec    esp
 1030dcd:	ret    0xffbc
 1030dd0:	loope  0x1030da7
 1030dd2:	into   
 1030dd3:	push   esp
 1030dd5:	out    0xdf,eax
 1030dd7:	(bad)  
 1030dd8:	std    
 1030dd9:	out    dx,eax
 1030dda:	out    0xff,al
 1030ddc:	push   eax
 1030dde:	call   0xe8f40de2
 1030de3:	(bad)  
 1030de4:	(bad)  
 1030de5:	out    dx,eax
 1030de6:	out    0xff,al
 1030de8:	(bad)  
 1030de9:	out    dx,eax
 1030dea:	in     eax,0xff
 1030dec:	(bad)  
 1030ded:	out    dx,eax
 1030dee:	in     eax,0xff
 1030df0:	(bad)  
 1030df1:	out    dx,al
 1030df2:	in     al,0xff
 1030df4:	(bad)  
 1030df5:	out    dx,al
 1030df6:	loop   0x1030df7
 1030df8:	(bad)  
 1030df9:	in     eax,dx
 1030dfa:	loop   0x1030dfb
 1030dfc:	(bad)  
 1030dfd:	in     al,dx
 1030dfe:	loope  0x1030dff
 1030e00:	(bad)  
 1030e01:	in     al,dx
 1030e02:	loopne 0x1030e03
 1030e04:	(bad)  
 1030e05:	in     al,dx
 1030e06:	(bad)  
 1030e08:	(bad)  
 1030e09:	jmp    0x1030dea
 1030e0b:	(bad)  
 1030e0c:	(bad)  
 1030e0d:	jmp    0xffde:0xeaffffde
 1030e14:	(bad)  
 1030e15:	jmp    0xeb030df6
 1030e1a:	fdiv   st(7),st
 1030e1c:	(bad)  
 1030e1d:	call   0xea030dfc
 1030e22:	(bad)  
 1030e24:	(bad)  
 1030e25:	call   0xe9030e03
 1030e2a:	fdivr  st,st(7)
 1030e2c:	jmp    esi
 1030e2e:	fdivr  st,st(7)
 1030e30:	jmp    esi
 1030e32:	xlat   BYTE PTR ds:[ebx]
 1030e33:	(bad)  
 1030e34:	jmp    ebp
 1030e36:	(bad)  
 1030e37:	inc    DWORD PTR [eax+0xff596d]
	...
 1030e69:	add    BYTE PTR [eax],al
 1030e6b:	add    BYTE PTR [ebp-0x72005250],dh
 1030e71:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1030e77:	dec    DWORD PTR [ebp-0x72007e7b]
 1030e7d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1030e83:	(bad)  
 1030e84:	(bad)  
 1030e85:	sti    
 1030e86:	clc    
 1030e87:	(bad)  
 1030e88:	(bad)  
 1030e89:	cli    
 1030e8a:	clc    
 1030e8b:	(bad)  
 1030e8c:	(bad)  
 1030e8d:	stc    
 1030e8e:	idiv   bh
 1030e90:	(bad)  
 1030e91:	stc    
 1030e92:	idiv   bh
 1030e94:	(bad)  
 1030e95:	stc    
 1030e96:	cmc    
 1030e97:	(bad)  
 1030e98:	(bad)  
 1030e99:	stc    
 1030e9a:	cmc    
 1030e9b:	(bad)  
 1030e9c:	(bad)  
 1030e9d:	clc    
 1030e9e:	cmc    
 1030e9f:	(bad)  
 1030ea0:	(bad)  
 1030ea1:	clc    
 1030ea2:	repz (bad) 
 1030ea4:	push   edi
 1030ea6:	repz (bad) 
 1030ea8:	push   edi
 1030eaa:	repnz (bad) 
 1030eac:	push   esi
 1030eae:	icebp  
 1030eaf:	(bad)  
 1030eb0:	push   esi
 1030eb2:	lock call FWORD PTR [edi-0x75]
 1030eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1030eb7:	(bad)  
 1030eb8:	mov    ebp,0xb6fff7e8
 1030ebd:	cmc    
 1030ebe:	(bad)  
 1030ebf:	push   DWORD PTR [esp+esi*8-0xa510001]
 1030ec6:	(bad)  
 1030ec7:	push   DWORD PTR [ebx]
 1030ec9:	jno    0x1030e60
 1030ecb:	inc    DWORD PTR [ebx-0x36005f6d]
 1030ed1:	sar    BYTE PTR [edx-0x31291e01],0xff
 1030ed8:	hlt    
 1030ed9:	call   0xf1010ebd
 1030ede:	out    0xff,al
 1030ee0:	push   ecx
 1030ee2:	out    0xff,eax
 1030ee4:	push   eax
 1030ee6:	out    0xff,eax
 1030ee8:	(bad)  
 1030ee9:	out    dx,eax
 1030eea:	out    0xff,al
 1030eec:	(bad)  
 1030eed:	out    dx,eax
 1030eee:	in     eax,0xff
 1030ef0:	(bad)  
 1030ef1:	out    dx,eax
 1030ef2:	in     al,0xff
 1030ef4:	(bad)  
 1030ef5:	out    dx,al
 1030ef6:	jecxz  0x1030ef7
 1030ef8:	(bad)  
 1030ef9:	out    dx,al
 1030efa:	jecxz  0x1030efb
 1030efc:	(bad)  
 1030efd:	in     eax,dx
 1030efe:	loop   0x1030eff
 1030f00:	(bad)  
 1030f01:	in     eax,dx
 1030f02:	loope  0x1030f03
 1030f04:	(bad)  
 1030f05:	in     al,dx
 1030f06:	loope  0x1030f07
 1030f08:	(bad)  
 1030f09:	jmp    0x1030eeb
 1030f0b:	(bad)  
 1030f0c:	(bad)  
 1030f0d:	jmp    0x1030eee
 1030f0f:	(bad)  
 1030f10:	(bad)  
 1030f11:	jmp    0xffdd:0xeaffffde
 1030f18:	(bad)  
 1030f19:	jmp    0xffdc:0xe9ffffdc
 1030f20:	(bad)  
 1030f21:	call   0xea030f01
 1030f26:	(bad)  
 1030f28:	jmp    edi
 1030f2a:	fcos   
 1030f2c:	jmp    edi
 1030f2e:	fdivr  st,st(7)
 1030f30:	jmp    esi
 1030f32:	xlat   BYTE PTR ds:[ebx]
 1030f33:	(bad)  
 1030f34:	jmp    esi
 1030f36:	xlat   BYTE PTR ds:[ebx]
 1030f37:	inc    DWORD PTR [eax+0xff596d]
	...
 1030f69:	add    BYTE PTR [eax],al
 1030f6b:	add    BYTE PTR [ebp+0x62],ch
 1030f6e:	pop    ebx
 1030f6f:	dec    ecx
 1030f71:	mov    ah,0xff
 1030f74:	leave  
 1030f75:	mov    ah,0xff
 1030f78:	(bad)  
 1030f79:	(bad)  
 1030f7a:	(bad)  
 1030f7b:	jmp    esp
 1030f7d:	jecxz  0x1030f61
 1030f7f:	jmp    FWORD PTR [ebp+0x62]
 1030f82:	pop    ebx
 1030f83:	(bad)  
 1030f84:	(bad)  
 1030f85:	sti    
 1030f86:	stc    
 1030f87:	(bad)  
 1030f88:	(bad)  
 1030f89:	sti    
 1030f8a:	clc    
 1030f8b:	(bad)  
 1030f8c:	(bad)  
 1030f8d:	cli    
 1030f8e:	idiv   edi
 1030f90:	(bad)  
 1030f91:	cli    
 1030f92:	idiv   edi
 1030f94:	(bad)  
 1030f95:	stc    
 1030f96:	idiv   bh
 1030f98:	(bad)  
 1030f99:	stc    
 1030f9a:	cmc    
 1030f9b:	(bad)  
 1030f9c:	(bad)  
 1030f9d:	stc    
 1030f9e:	cmc    
 1030f9f:	(bad)  
 1030fa0:	(bad)  
 1030fa1:	stc    
 1030fa2:	hlt    
 1030fa3:	(bad)  
 1030fa4:	(bad)  
 1030fa5:	clc    
 1030fa6:	hlt    
 1030fa7:	(bad)  
 1030fa8:	push   edi
 1030faa:	repnz (bad) 
 1030fac:	push   edi
 1030fae:	repnz (bad) 
 1030fb0:	cld    
 1030fb1:	cmc    
 1030fb2:	lock push DWORD PTR [ecx+0x5affcdc3]
 1030fb9:	cwde   
 1030fba:	mov    eax,0xfdf2c2ff
 1030fbf:	push   DWORD PTR [ebp-0x4c00000c]
 1030fc5:	hlt    
 1030fc6:	(bad)  
 1030fc7:	push   DWORD PTR [edx+0x34fffff8]
 1030fcd:	jno    0x1030f65
 1030fcf:	push   DWORD PTR [ebx-0x78]
 1030fd2:	cwde   
 1030fd3:	dec    ebp
 1030fd5:	ret    
 1030fd6:	mov    esp,0xcfd6e2ff
 1030fdb:	push   esp
 1030fdd:	call   0xf1010fc2
 1030fe2:	out    0xff,al
 1030fe4:	push   eax
 1030fe6:	out    0xff,eax
 1030fe8:	push   eax
 1030fea:	out    0xff,eax
 1030fec:	(bad)  
 1030fed:	out    dx,eax
 1030fee:	out    0xff,al
 1030ff0:	(bad)  
 1030ff1:	out    dx,eax
 1030ff2:	in     eax,0xff
 1030ff4:	(bad)  
 1030ff5:	out    dx,al
 1030ff6:	in     al,0xff
 1030ff8:	(bad)  
 1030ff9:	out    dx,al
 1030ffa:	in     al,0xff
 1030ffc:	(bad)  
 1030ffd:	in     eax,dx
 1030ffe:	jecxz  0x1030fff
 1031000:	(bad)  
 1031001:	in     eax,dx
 1031002:	loop   0x1031003
 1031004:	(bad)  
 1031005:	in     al,dx
 1031006:	loope  0x1031007
 1031008:	(bad)  
 1031009:	in     al,dx
 103100a:	loopne 0x103100b
 103100c:	(bad)  
 103100d:	jmp    0x1030fef
 103100f:	(bad)  
 1031010:	(bad)  
 1031011:	jmp    0x1030ff1
 1031013:	(bad)  
 1031014:	(bad)  
 1031015:	jmp    0xffde:0xeaffffde
 103101c:	(bad)  
 103101d:	jmp    0xeb030ffe
 1031022:	fdiv   st(7),st
 1031024:	(bad)  
 1031025:	jmp    0xea031005
 103102a:	(bad)  
 103102c:	jmp    edi
 103102e:	(bad)  
 1031030:	jmp    edi
 1031032:	fcos   
 1031034:	jmp    esi
 1031036:	fdivr  st,st(7)
 1031038:	sub    BYTE PTR [ebp+0x59],0xff
	...
 103106c:	out    dx,al
 103106d:	in     eax,dx
 103106e:	in     al,dx
 103106f:	jmp    ebp
 1031071:	jecxz  0x1031055
 1031073:	jmp    ebp
 1031075:	jecxz  0x1031059
 1031077:	jmp    ebp
 1031079:	jecxz  0x103105d
 103107b:	jmp    ebp
 103107d:	jecxz  0x1031061
 103107f:	(bad)  
 1031080:	out    dx,al
 1031081:	in     eax,dx
 1031082:	in     al,dx
 1031083:	(bad)  
 1031084:	(bad)  
 1031085:	sti    
 1031086:	stc    
 1031087:	(bad)  
 1031088:	(bad)  
 1031089:	sti    
 103108a:	stc    
 103108b:	(bad)  
 103108c:	(bad)  
 103108d:	sti    
 103108e:	clc    
 103108f:	(bad)  
 1031090:	(bad)  
 1031091:	cli    
 1031092:	idiv   edi
 1031094:	(bad)  
 1031095:	cli    
 1031096:	idiv   bh
 1031098:	(bad)  
 1031099:	cli    
 103109a:	idiv   bh
 103109c:	(bad)  
 103109d:	stc    
 103109e:	idiv   bh
 10310a0:	(bad)  
 10310a1:	stc    
 10310a2:	cmc    
 10310a3:	(bad)  
 10310a4:	(bad)  
 10310a5:	clc    
 10310a6:	cmc    
 10310a7:	(bad)  
 10310a8:	(bad)  
 10310a9:	clc    
 10310aa:	hlt    
 10310ab:	(bad)  
 10310ac:	push   edi
 10310ae:	repz (bad) 
 10310b0:	push   edi
 10310b2:	repnz push eax
 10310b5:	in     al,dx
 10310b6:	jmp    0x10310b7
 10310b8:	dec    ebp
 10310b9:	jg     0x103105b
 10310bb:	(bad)  
 10310bc:	mov    ecx,0xc0ffedde
 10310c1:	idiv   edi
 10310c3:	push   DWORD PTR [ebx-0x4c00000d]
 10310c9:	cmc    
 10310ca:	(bad)  
 10310cb:	jmp    FWORD PTR [ebp+0x3cfffbf4]
 10310d1:	ja     0x103106e
 10310d3:	(bad)  
 10310d4:	jle    0x1031062
 10310d6:	call   0xe0ff:0xbdc3cdff
 10310dd:	aad    0xce
 10310df:	push   esp
 10310e1:	out    0xdf,eax
 10310e3:	(bad)  
 10310e4:	std    
 10310e5:	out    dx,eax
 10310e6:	out    0xff,eax
 10310e8:	push   eax
 10310ea:	call   0xe7f410ee
 10310ef:	(bad)  
 10310f0:	(bad)  
 10310f1:	out    dx,eax
 10310f2:	out    0xff,al
 10310f4:	(bad)  
 10310f5:	out    dx,eax
 10310f6:	in     eax,0xff
 10310f8:	(bad)  
 10310f9:	out    dx,eax
 10310fa:	in     al,0xff
 10310fc:	(bad)  
 10310fd:	out    dx,al
 10310fe:	in     al,0xff
 1031100:	(bad)  
 1031101:	in     eax,dx
 1031102:	jecxz  0x1031103
 1031104:	(bad)  
 1031105:	in     eax,dx
 1031106:	loop   0x1031107
 1031108:	(bad)  
 1031109:	in     al,dx
 103110a:	loop   0x103110b
 103110c:	(bad)  
 103110d:	in     al,dx
 103110e:	loope  0x103110f
 1031110:	(bad)  
 1031111:	jmp    0x10310f3
 1031113:	(bad)  
 1031114:	(bad)  
 1031115:	jmp    0x10310f6
 1031117:	(bad)  
 1031118:	(bad)  
 1031119:	jmp    0xffdd:0xeaffffde
 1031120:	(bad)  
 1031121:	jmp    0xffdc:0xe9ffffdc
 1031128:	(bad)  
 1031129:	jmp    0xea031109
 103112e:	(bad)  
 1031130:	(bad)  
 1031131:	call   0xe903110f
 1031136:	fcos   
 1031138:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1031174:	mov    esi,DWORD PTR [edi+0x64]
 1031177:	(bad)  
 1031178:	(bad)  
 1031179:	cld    
 103117a:	sti    
 103117b:	(bad)  
 103117c:	(bad)  
 103117d:	cld    
 103117e:	sti    
 103117f:	(bad)  
 1031180:	(bad)  
 1031181:	cld    
 1031182:	sti    
 1031183:	(bad)  
 1031184:	(bad)  
 1031185:	cld    
 1031186:	cli    
 1031187:	(bad)  
 1031188:	(bad)  
 1031189:	sti    
 103118a:	stc    
 103118b:	(bad)  
 103118c:	(bad)  
 103118d:	cld    
 103118e:	stc    
 103118f:	(bad)  
 1031190:	(bad)  
 1031191:	cli    
 1031192:	clc    
 1031193:	(bad)  
 1031194:	(bad)  
 1031195:	cli    
 1031196:	idiv   edi
 1031198:	(bad)  
 1031199:	cli    
 103119a:	idiv   edi
 103119c:	(bad)  
 103119d:	stc    
 103119e:	idiv   bh
 10311a0:	(bad)  
 10311a1:	stc    
 10311a2:	cmc    
 10311a3:	(bad)  
 10311a4:	(bad)  
 10311a5:	stc    
 10311a6:	cmc    
 10311a7:	(bad)  
 10311a8:	(bad)  
 10311a9:	clc    
 10311aa:	hlt    
 10311ab:	(bad)  
 10311ac:	(bad)  
 10311ad:	clc    
 10311ae:	hlt    
 10311af:	(bad)  
 10311b0:	push   edi
 10311b2:	repz (bad) 
 10311b4:	push   edi
 10311b6:	repnz dec ecx
 10311b9:	rcl    edi,1
 10311bb:	jmp    FWORD PTR [ebx-0x61]
 10311be:	mov    edx,0xeee7beff
 10311c3:	(bad)  
 10311c4:	mov    ecx,0xb0fffff5
 10311c9:	repz (bad) 
 10311cb:	jmp    FWORD PTR [esi-0x5b00000d]
 10311d1:	out    dx,al
 10311d2:	stc    
 10311d3:	(bad)  
 10311d4:	cmp    al,0x79
 10311d6:	fwait
 10311d7:	jmp    FWORD PTR [ebp-0x7e]
 10311da:	xchg   esp,eax
 10311db:	dec    esp
 10311dd:	ret    0xffbc
 10311e0:	loope  0x10311b8
 10311e2:	into   
 10311e3:	push   esp
 10311e5:	call   0xf10111ca
 10311ea:	out    0xff,eax
 10311ec:	push   eax
 10311ee:	call   0xe8f411f2
 10311f3:	(bad)  
 10311f4:	(bad)  
 10311f5:	out    dx,eax
 10311f6:	out    0xff,al
 10311f8:	(bad)  
 10311f9:	out    dx,eax
 10311fa:	out    0xff,al
 10311fc:	(bad)  
 10311fd:	out    dx,al
 10311fe:	in     eax,0xff
 1031200:	(bad)  
 1031201:	out    dx,al
 1031202:	in     al,0xff
 1031204:	(bad)  
 1031205:	out    dx,al
 1031206:	in     al,0xff
 1031208:	(bad)  
 1031209:	in     eax,dx
 103120a:	loop   0x103120b
 103120c:	(bad)  
 103120d:	in     al,dx
 103120e:	loop   0x103120f
 1031210:	(bad)  
 1031211:	in     al,dx
 1031212:	loopne 0x1031213
 1031214:	(bad)  
 1031215:	jmp    0x10311f7
 1031217:	(bad)  
 1031218:	(bad)  
 1031219:	jmp    0x10311fa
 103121b:	(bad)  
 103121c:	(bad)  
 103121d:	jmp    0xffdd:0xeaffffde
 1031224:	(bad)  
 1031225:	jmp    0xffdb:0xe9ffffdd
 103122c:	(bad)  
 103122d:	jmp    0xea03120d
 1031232:	(bad)  
 1031234:	(bad)  
 1031235:	call   0x6e841213
 103123a:	pop    ecx
 103123b:	inc    DWORD PTR [eax]
	...
 1031271:	add    BYTE PTR [eax],al
 1031273:	add    BYTE PTR [eax+edi*2-0x200009b],cl
 103127a:	cld    
 103127b:	(bad)  
 103127c:	(bad)  
 103127d:	std    
 103127e:	sti    
 103127f:	(bad)  
 1031280:	(bad)  
 1031281:	cld    
 1031282:	sti    
 1031283:	(bad)  
 1031284:	(bad)  
 1031285:	cld    
 1031286:	cli    
 1031287:	(bad)  
 1031288:	(bad)  
 1031289:	cld    
 103128a:	stc    
 103128b:	(bad)  
 103128c:	(bad)  
 103128d:	cld    
 103128e:	stc    
 103128f:	(bad)  
 1031290:	(bad)  
 1031291:	sti    
 1031292:	stc    
 1031293:	(bad)  
 1031294:	(bad)  
 1031295:	cli    
 1031296:	clc    
 1031297:	(bad)  
 1031298:	(bad)  
 1031299:	cli    
 103129a:	idiv   edi
 103129c:	(bad)  
 103129d:	cli    
 103129e:	idiv   bh
 10312a0:	(bad)  
 10312a1:	stc    
 10312a2:	idiv   bh
 10312a4:	(bad)  
 10312a5:	stc    
 10312a6:	idiv   bh
 10312a8:	(bad)  
 10312a9:	stc    
 10312aa:	cmc    
 10312ab:	(bad)  
 10312ac:	(bad)  
 10312ad:	clc    
 10312ae:	hlt    
 10312af:	(bad)  
 10312b0:	(bad)  
 10312b1:	clc    
 10312b2:	repz (bad) 
 10312b4:	(bad)  
 10312b5:	clc    
 10312b6:	repz (bad) 
 10312b8:	push   edi
 10312ba:	repz inc DWORD PTR [esi+eiz*4-0x6ba00048]
 10312c2:	mov    dl,0xff
 10312c4:	sar    dl,cl
 10312c6:	(bad)  
 10312c7:	jmp    FWORD PTR [edi-0x5700000e]
 10312cd:	icebp  
 10312ce:	(bad)  
 10312cf:	jmp    DWORD PTR [ecx-0x63000011]
 10312d5:	in     eax,dx
 10312d6:	std    
 10312d7:	push   DWORD PTR [edi]
 10312d9:	je     0x1031272
 10312db:	(bad)  
 10312dc:	jg     0x1031270
 10312de:	lahf   
 10312df:	dec    ecx
 10312e1:	sar    BYTE PTR [edi+edi*8-0x31291f],0xf4
 10312e9:	call   0xf10112ce
 10312ee:	out    0xff,eax
 10312f0:	push   eax
 10312f2:	call   0xe9f412f6
 10312f7:	(bad)  
 10312f8:	(bad)  
 10312f9:	out    dx,eax
 10312fa:	out    0xff,al
 10312fc:	(bad)  
 10312fd:	out    dx,eax
 10312fe:	out    0xff,al
 1031300:	(bad)  
 1031301:	out    dx,eax
 1031302:	in     al,0xff
 1031304:	(bad)  
 1031305:	out    dx,al
 1031306:	in     al,0xff
 1031308:	(bad)  
 1031309:	out    dx,al
 103130a:	jecxz  0x103130b
 103130c:	(bad)  
 103130d:	in     eax,dx
 103130e:	loop   0x103130f
 1031310:	(bad)  
 1031311:	in     al,dx
 1031312:	loope  0x1031313
 1031314:	(bad)  
 1031315:	in     al,dx
 1031316:	loope  0x1031317
 1031318:	(bad)  
 1031319:	in     al,dx
 103131a:	loopne 0x103131b
 103131c:	(bad)  
 103131d:	jmp    0x10312fe
 103131f:	(bad)  
 1031320:	(bad)  
 1031321:	jmp    0x1031301
 1031323:	(bad)  
 1031324:	(bad)  
 1031325:	jmp    0xffdc:0xeaffffde
 103132c:	(bad)  
 103132d:	jmp    0xea03130e
 1031332:	(bad)  
 1031334:	(bad)  
 1031335:	jmp    0x6e841315
 103133a:	pop    ecx
 103133b:	inc    DWORD PTR [eax]
	...
 1031369:	add    BYTE PTR [eax],al
 103136b:	add    BYTE PTR [ebp-0x72005250],dh
 1031371:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1031377:	dec    DWORD PTR [ebp-0x72007e7b]
 103137d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1031383:	(bad)  
 1031384:	(bad)  
 1031385:	cld    
 1031386:	sti    
 1031387:	(bad)  
 1031388:	(bad)  
 1031389:	cld    
 103138a:	cli    
 103138b:	(bad)  
 103138c:	(bad)  
 103138d:	cld    
 103138e:	stc    
 103138f:	(bad)  
 1031390:	(bad)  
 1031391:	sti    
 1031392:	stc    
 1031393:	(bad)  
 1031394:	(bad)  
 1031395:	sti    
 1031396:	stc    
 1031397:	(bad)  
 1031398:	(bad)  
 1031399:	sti    
 103139a:	clc    
 103139b:	(bad)  
 103139c:	(bad)  
 103139d:	sti    
 103139e:	idiv   edi
 10313a0:	(bad)  
 10313a1:	cli    
 10313a2:	idiv   edi
 10313a4:	(bad)  
 10313a5:	stc    
 10313a6:	idiv   bh
 10313a8:	(bad)  
 10313a9:	stc    
 10313aa:	idiv   bh
 10313ac:	(bad)  
 10313ad:	stc    
 10313ae:	cmc    
 10313af:	(bad)  
 10313b0:	(bad)  
 10313b1:	stc    
 10313b2:	hlt    
 10313b3:	(bad)  
 10313b4:	(bad)  
 10313b5:	clc    
 10313b6:	hlt    
 10313b7:	(bad)  
 10313b8:	(bad)  
 10313b9:	clc    
 10313ba:	repz jmp esi
 10313bd:	out    0xe6,al
 10313bf:	dec    DWORD PTR [eax-0x5f003b4f]
 10313c5:	fcomip st,st(1)
 10313c7:	push   DWORD PTR [esi-0x5f00000b]
 10313cd:	out    dx,al
 10313ce:	(bad)  
 10313cf:	call   DWORD PTR [ecx-0x78000016]
 10313d5:	call   0xf09513d9
 10313da:	(bad)  
 10313db:	push   DWORD PTR [edi]
 10313dd:	jae    0x1031376
 10313df:	(bad)  
 10313e0:	jge    0x1031372
 10313e2:	popf   
 10313e3:	dec    esp
 10313e5:	ret    0xffbc
 10313e8:	loopne 0x10313bf
 10313ea:	into   
 10313eb:	push   ebx
 10313ed:	out    0xde,eax
 10313ef:	(bad)  
 10313f0:	std    
 10313f1:	out    dx,eax
 10313f2:	out    0xff,eax
 10313f4:	push   eax
 10313f6:	call   0xe8f513fa
 10313fb:	(bad)  
 10313fc:	push   eax
 10313fe:	out    0xff,eax
 1031400:	(bad)  
 1031401:	out    dx,eax
 1031402:	in     eax,0xff
 1031404:	(bad)  
 1031405:	out    dx,eax
 1031406:	in     eax,0xff
 1031408:	(bad)  
 1031409:	out    dx,al
 103140a:	in     al,0xff
 103140c:	(bad)  
 103140d:	out    dx,al
 103140e:	jecxz  0x103140f
 1031410:	(bad)  
 1031411:	out    dx,al
 1031412:	loop   0x1031413
 1031414:	(bad)  
 1031415:	in     eax,dx
 1031416:	loope  0x1031417
 1031418:	(bad)  
 1031419:	in     al,dx
 103141a:	loopne 0x103141b
 103141c:	(bad)  
 103141d:	in     al,dx
 103141e:	loopne 0x103141f
 1031420:	(bad)  
 1031421:	jmp    0x1031402
 1031423:	(bad)  
 1031424:	(bad)  
 1031425:	jmp    0xffde:0xeaffffde
 103142c:	(bad)  
 103142d:	jmp    0xffdc:0xe9ffffdc
 1031434:	(bad)  
 1031435:	jmp    0x6e841415
 103143a:	pop    ecx
 103143b:	inc    DWORD PTR [eax]
	...
 1031469:	add    BYTE PTR [eax],al
 103146b:	add    BYTE PTR [ebp+0x62],ch
 103146e:	pop    ebx
 103146f:	dec    ecx
 1031471:	mov    ah,0xff
 1031474:	leave  
 1031475:	mov    ah,0xff
 1031478:	(bad)  
 1031479:	(bad)  
 103147a:	(bad)  
 103147b:	jmp    esp
 103147d:	jecxz  0x1031461
 103147f:	jmp    FWORD PTR [ebp+0x62]
 1031482:	pop    ebx
 1031483:	(bad)  
 1031484:	(bad)  
 1031485:	cld    
 1031486:	sti    
 1031487:	(bad)  
 1031488:	(bad)  
 1031489:	cld    
 103148a:	sti    
 103148b:	(bad)  
 103148c:	(bad)  
 103148d:	cld    
 103148e:	sti    
 103148f:	(bad)  
 1031490:	(bad)  
 1031491:	cld    
 1031492:	cli    
 1031493:	(bad)  
 1031494:	(bad)  
 1031495:	cld    
 1031496:	stc    
 1031497:	(bad)  
 1031498:	(bad)  
 1031499:	sti    
 103149a:	stc    
 103149b:	(bad)  
 103149c:	(bad)  
 103149d:	sti    
 103149e:	clc    
 103149f:	(bad)  
 10314a0:	(bad)  
 10314a1:	sti    
 10314a2:	clc    
 10314a3:	(bad)  
 10314a4:	(bad)  
 10314a5:	cli    
 10314a6:	idiv   edi
 10314a8:	(bad)  
 10314a9:	stc    
 10314aa:	idiv   bh
 10314ac:	(bad)  
 10314ad:	stc    
 10314ae:	idiv   bh
 10314b0:	(bad)  
 10314b1:	stc    
 10314b2:	idiv   bh
 10314b4:	(bad)  
 10314b5:	stc    
 10314b6:	cmc    
 10314b7:	(bad)  
 10314b8:	(bad)  
 10314b9:	clc    
 10314ba:	repz (bad) 
 10314bc:	(bad)  
 10314bd:	clc    
 10314be:	repz (bad) 
 10314c0:	mov    edx,0x4dffd1c9
 10314c5:	xchg   BYTE PTR [esi-0x32201],ah
 10314cb:	call   DWORD PTR [esi-0x7c000014]
 10314d1:	in     eax,0xff
 10314d3:	push   DWORD PTR [edi-0x1e]
 10314d6:	(bad)  
 10314d7:	jmp    FWORD PTR [edx-0x22]
 10314da:	(bad)  
 10314db:	(bad)  
 10314dc:	jge    0x10314c5
 10314de:	(bad)  
 10314df:	(bad)  
 10314e0:	cmp    DWORD PTR [edi-0x65],esi
 10314e3:	jmp    FWORD PTR [ebp-0x7d]
 10314e6:	xchg   esp,eax
 10314e7:	dec    ebx
 10314e9:	sar    DWORD PTR [edi+edi*8-0x312b21],0xf3
 10314f1:	out    0xde,al
 10314f3:	(bad)  
 10314f4:	std    
 10314f5:	out    dx,eax
 10314f6:	out    0xff,eax
 10314f8:	push   ecx
 10314fa:	call   0xe9f414fe
 10314ff:	(bad)  
 1031500:	push   eax
 1031502:	out    0xff,eax
 1031504:	(bad)  
 1031505:	out    dx,eax
 1031506:	out    0xff,al
 1031508:	(bad)  
 1031509:	out    dx,al
 103150a:	in     eax,0xff
 103150c:	(bad)  
 103150d:	out    dx,al
 103150e:	in     al,0xff
 1031510:	(bad)  
 1031511:	out    dx,al
 1031512:	jecxz  0x1031513
 1031514:	(bad)  
 1031515:	in     eax,dx
 1031516:	loop   0x1031517
 1031518:	(bad)  
 1031519:	in     eax,dx
 103151a:	loope  0x103151b
 103151c:	(bad)  
 103151d:	in     al,dx
 103151e:	loope  0x103151f
 1031520:	(bad)  
 1031521:	in     al,dx
 1031522:	loopne 0x1031523
 1031524:	(bad)  
 1031525:	jmp    0x1031506
 1031527:	(bad)  
 1031528:	(bad)  
 1031529:	jmp    0xffde:0xeaffffde
 1031530:	(bad)  
 1031531:	jmp    0xffdc:0xeaffffdd
 1031538:	sub    BYTE PTR [ebp+0x59],0xff
	...
 103156c:	out    dx,al
 103156d:	in     eax,dx
 103156e:	in     al,dx
 103156f:	jmp    ebp
 1031571:	jecxz  0x1031555
 1031573:	jmp    ebp
 1031575:	jecxz  0x1031559
 1031577:	jmp    ebp
 1031579:	jecxz  0x103155d
 103157b:	jmp    ebp
 103157d:	jecxz  0x1031561
 103157f:	(bad)  
 1031580:	out    dx,al
 1031581:	in     eax,dx
 1031582:	in     al,dx
 1031583:	(bad)  
 1031584:	(bad)  
 1031585:	std    
 1031586:	cld    
 1031587:	(bad)  
 1031588:	(bad)  
 1031589:	std    
 103158a:	sti    
 103158b:	(bad)  
 103158c:	(bad)  
 103158d:	cld    
 103158e:	sti    
 103158f:	(bad)  
 1031590:	(bad)  
 1031591:	cld    
 1031592:	cli    
 1031593:	(bad)  
 1031594:	(bad)  
 1031595:	sti    
 1031596:	cli    
 1031597:	(bad)  
 1031598:	(bad)  
 1031599:	sti    
 103159a:	cli    
 103159b:	(bad)  
 103159c:	(bad)  
 103159d:	sti    
 103159e:	stc    
 103159f:	(bad)  
 10315a0:	(bad)  
 10315a1:	cli    
 10315a2:	clc    
 10315a3:	(bad)  
 10315a4:	(bad)  
 10315a5:	sti    
 10315a6:	clc    
 10315a7:	(bad)  
 10315a8:	(bad)  
 10315a9:	cli    
 10315aa:	idiv   edi
 10315ac:	(bad)  
 10315ad:	cli    
 10315ae:	idiv   edi
 10315b0:	(bad)  
 10315b1:	stc    
 10315b2:	idiv   bh
 10315b4:	(bad)  
 10315b5:	clc    
 10315b6:	hlt    
 10315b7:	(bad)  
 10315b8:	std    
 10315b9:	div    edx
 10315bb:	(bad)  
 10315bc:	std    
 10315bd:	div    dl
 10315bf:	push   esi
 10315c1:	lock out dx,al
 10315c3:	jmp    FWORD PTR [ebx-0x7a003340]
 10315c9:	mov    edx,0xeaa1ffd2
 10315ce:	std    
 10315cf:	(bad)  
 10315d0:	jp     0x10315b5
 10315d2:	(bad)  
 10315d3:	jmp    DWORD PTR [edi-0x23]
 10315d6:	(bad)  
 10315d7:	call   FWORD PTR [ebp-0x27]
 10315da:	(bad)  
 10315db:	call   DWORD PTR [eax-0x2a]
 10315de:	(bad)  
 10315df:	jmp    DWORD PTR [edi-0x24]
 10315e2:	sti    
 10315e3:	(bad)  
 10315e4:	cmp    eax,0x6bff9f7c
 10315e9:	adc    BYTE PTR [edx-0x433d3301],0xff
 10315f0:	loopne 0x10315c7
 10315f2:	into   
 10315f3:	push   esp
 10315f5:	call   0xf10115da
 10315fa:	out    0xff,al
 10315fc:	push   ecx
 10315fe:	call   0xe8f41602
 1031603:	(bad)  
 1031604:	(bad)  
 1031605:	out    dx,eax
 1031606:	out    0xff,al
 1031608:	push   eax
 103160a:	out    0xff,al
 103160c:	(bad)  
 103160d:	out    dx,eax
 103160e:	in     eax,0xff
 1031610:	(bad)  
 1031611:	out    dx,al
 1031612:	in     eax,0xff
 1031614:	(bad)  
 1031615:	in     eax,dx
 1031616:	jecxz  0x1031617
 1031618:	(bad)  
 1031619:	in     eax,dx
 103161a:	jecxz  0x103161b
 103161c:	(bad)  
 103161d:	in     eax,dx
 103161e:	loop   0x103161f
 1031620:	(bad)  
 1031621:	in     eax,dx
 1031622:	loope  0x1031623
 1031624:	(bad)  
 1031625:	in     al,dx
 1031626:	loopne 0x1031627
 1031628:	(bad)  
 1031629:	jmp    0x103160b
 103162b:	(bad)  
 103162c:	(bad)  
 103162d:	jmp    0x103160d
 103162f:	(bad)  
 1031630:	(bad)  
 1031631:	jmp    0x1031611
 1031633:	(bad)  
 1031634:	(bad)  
 1031635:	jmp    0xff59:0x6d80ffdd
	...
 1031674:	mov    al,ds:0xffff798b
 1031679:	(bad)  
 103167a:	(bad)  
 103167b:	(bad)  
 103167c:	(bad)  
 103167d:	(bad)  
 103167e:	(bad)  
 103167f:	(bad)  
 1031680:	(bad)  
 1031681:	(bad)  
 1031682:	std    
 1031683:	(bad)  
 1031684:	(bad)  
 1031685:	(bad)  
 1031686:	cld    
 1031687:	(bad)  
 1031688:	(bad)  
 1031689:	std    
 103168a:	cld    
 103168b:	(bad)  
 103168c:	(bad)  
 103168d:	std    
 103168e:	sti    
 103168f:	(bad)  
 1031690:	(bad)  
 1031691:	cld    
 1031692:	sti    
 1031693:	(bad)  
 1031694:	(bad)  
 1031695:	cld    
 1031696:	sti    
 1031697:	(bad)  
 1031698:	(bad)  
 1031699:	cld    
 103169a:	cli    
 103169b:	(bad)  
 103169c:	(bad)  
 103169d:	cld    
 103169e:	stc    
 103169f:	(bad)  
 10316a0:	(bad)  
 10316a1:	sti    
 10316a2:	stc    
 10316a3:	(bad)  
 10316a4:	(bad)  
 10316a5:	sti    
 10316a6:	clc    
 10316a7:	(bad)  
 10316a8:	(bad)  
 10316a9:	sti    
 10316aa:	idiv   edi
 10316ac:	std    
 10316ad:	clc    
 10316ae:	cmc    
 10316af:	push   edi
 10316b1:	icebp  
 10316b2:	out    dx,al
 10316b3:	(bad)  
 10316b4:	out    dx,eax
 10316b5:	jmp    0xe7f016a1
 10316ba:	in     al,0xff
 10316bc:	jmp    0x10316a3
 10316be:	loope  0x10316bf
 10316c0:	in     al,dx
 10316c1:	out    0xe2,al
 10316c3:	(bad)  
 10316c4:	in     al,dx
 10316c5:	out    0xe2,al
 10316c7:	dec    DWORD PTR [ecx-0x7f]
 10316ca:	mov    ds:0xf1e4b7ff,al
 10316cf:	push   DWORD PTR [ebp-0x1e]
 10316d2:	(bad)  
 10316d3:	call   FWORD PTR [edx-0x27]
 10316d6:	(bad)  
 10316d7:	call   DWORD PTR [eax-0x2a]
 10316da:	(bad)  
 10316db:	inc    DWORD PTR [edi-0x2d]
 10316de:	(bad)  
 10316df:	(bad)  
 10316e0:	aas    
 10316e1:	sar    bh,1
 10316e3:	call   FWORD PTR [eax-0x29]
 10316e6:	std    
 10316e7:	push   DWORD PTR [edi+esi*2]
 10316ea:	pushf  
 10316eb:	(bad)  
 10316ec:	jle    0x103167e
 10316ee:	pushf  
 10316ef:	dec    esp
 10316f1:	ret    0xffbc
 10316f4:	loope  0x10316cc
 10316f6:	iret   
 10316f7:	push   esp
 10316f9:	call   0xf10116dd
 10316fe:	out    0xff,eax
 1031700:	push   eax
 1031702:	call   0xe8f41706
 1031707:	(bad)  
 1031708:	push   eax
 103170a:	out    0xff,eax
 103170c:	(bad)  
 103170d:	out    dx,eax
 103170e:	out    0xff,al
 1031710:	(bad)  
 1031711:	out    dx,eax
 1031712:	in     eax,0xff
 1031714:	(bad)  
 1031715:	out    dx,eax
 1031716:	in     al,0xff
 1031718:	(bad)  
 1031719:	out    dx,al
 103171a:	jecxz  0x103171b
 103171c:	(bad)  
 103171d:	in     eax,dx
 103171e:	jecxz  0x103171f
 1031720:	(bad)  
 1031721:	in     eax,dx
 1031722:	loop   0x1031723
 1031724:	(bad)  
 1031725:	in     eax,dx
 1031726:	loope  0x1031727
 1031728:	(bad)  
 1031729:	in     al,dx
 103172a:	loopne 0x103172b
 103172c:	(bad)  
 103172d:	jmp    0x103170e
 103172f:	(bad)  
 1031730:	(bad)  
 1031731:	jmp    0x1031711
 1031733:	(bad)  
 1031734:	(bad)  
 1031735:	jmp    0xff59:0x6d80ffde
	...
 1031774:	mov    al,ds:0xffff7b8d
 1031779:	(bad)  
 103177a:	(bad)  
 103177b:	(bad)  
 103177c:	(bad)  
 103177d:	(bad)  
 103177e:	(bad)  
 103177f:	(bad)  
 1031780:	(bad)  
 1031781:	(bad)  
 1031782:	std    
 1031783:	(bad)  
 1031784:	(bad)  
 1031785:	(bad)  
 1031786:	std    
 1031787:	(bad)  
 1031788:	(bad)  
 1031789:	(bad)  
 103178a:	cld    
 103178b:	(bad)  
 103178c:	(bad)  
 103178d:	std    
 103178e:	cld    
 103178f:	(bad)  
 1031790:	(bad)  
 1031791:	std    
 1031792:	cld    
 1031793:	(bad)  
 1031794:	(bad)  
 1031795:	std    
 1031796:	sti    
 1031797:	(bad)  
 1031798:	(bad)  
 1031799:	cld    
 103179a:	sti    
 103179b:	(bad)  
 103179c:	(bad)  
 103179d:	sti    
 103179e:	cli    
 103179f:	(bad)  
 10317a0:	(bad)  
 10317a1:	sti    
 10317a2:	cli    
 10317a3:	(bad)  
 10317a4:	(bad)  
 10317a5:	sti    
 10317a6:	stc    
 10317a7:	(bad)  
 10317a8:	(bad)  
 10317a9:	cli    
 10317aa:	stc    
 10317ab:	push   edi
 10317ad:	repnz lock (bad) 
 10317b0:	fcmovnu st,st(3)
 10317b2:	(bad)  
 10317b4:	(bad)  
 10317b5:	enter  0xffc9,0xc0
 10317b9:	ret    0xffc3
 10317bc:	rol    dl,0xc2
 10317bf:	inc    ecx
 10317c1:	rol    edx,0xff
 10317c4:	mov    ecx,0x73ffbebd
 10317c9:	xchg   esp,eax
 10317ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10317cb:	dec    DWORD PTR [edx-0x6f00223a]
 10317d1:	jmp    0xd75817d4
 10317d6:	(bad)  
 10317d7:	inc    DWORD PTR [esi-0x2e]
 10317da:	(bad)  
 10317db:	(bad)  
 10317dc:	aas    
 10317dd:	sar    bh,1
 10317df:	(bad)  
 10317e0:	cmp    dh,cl
 10317e2:	(bad)  
 10317e3:	push   DWORD PTR [ebx]
 10317e5:	int3   
 10317e6:	(bad)  
 10317e7:	dec    DWORD PTR [edi-0x2a]
 10317ea:	(bad)  
 10317eb:	push   DWORD PTR [ecx]
 10317ed:	jae    0x1031786
 10317ef:	inc    DWORD PTR [esi-0x35005d69]
 10317f5:	sar    DWORD PTR [edi+edi*8-0x312a20],0xf4
 10317fd:	call   0xf10117e1
 1031802:	out    0xff,eax
 1031804:	push   ecx
 1031806:	call   0xe9f5180a
 103180b:	(bad)  
 103180c:	(bad)  
 103180d:	out    dx,eax
 103180e:	out    0xff,al
 1031810:	(bad)  
 1031811:	out    dx,eax
 1031812:	out    0xff,al
 1031814:	(bad)  
 1031815:	out    dx,al
 1031816:	in     eax,0xff
 1031818:	(bad)  
 1031819:	out    dx,al
 103181a:	in     eax,0xff
 103181c:	(bad)  
 103181d:	out    dx,al
 103181e:	jecxz  0x103181f
 1031820:	(bad)  
 1031821:	in     eax,dx
 1031822:	jecxz  0x1031823
 1031824:	(bad)  
 1031825:	in     al,dx
 1031826:	loop   0x1031827
 1031828:	(bad)  
 1031829:	in     al,dx
 103182a:	loope  0x103182b
 103182c:	(bad)  
 103182d:	jmp    0x103180f
 103182f:	(bad)  
 1031830:	(bad)  
 1031831:	jmp    0x1031813
 1031833:	(bad)  
 1031834:	(bad)  
 1031835:	jmp    0x1031815
 1031837:	inc    DWORD PTR [eax+0xff596d]
	...
 1031869:	add    BYTE PTR [eax],al
 103186b:	add    BYTE PTR [ebp-0x72005250],dh
 1031871:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1031877:	dec    DWORD PTR [ebp-0x72007e7b]
 103187d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1031883:	(bad)  
 1031884:	(bad)  
 1031885:	(bad)  
 1031886:	std    
 1031887:	(bad)  
 1031888:	(bad)  
 1031889:	(bad)  
 103188a:	std    
 103188b:	(bad)  
 103188c:	(bad)  
 103188d:	std    
 103188e:	std    
 103188f:	(bad)  
 1031890:	(bad)  
 1031891:	std    
 1031892:	cld    
 1031893:	(bad)  
 1031894:	(bad)  
 1031895:	std    
 1031896:	cld    
 1031897:	(bad)  
 1031898:	(bad)  
 1031899:	cld    
 103189a:	sti    
 103189b:	(bad)  
 103189c:	(bad)  
 103189d:	cld    
 103189e:	cli    
 103189f:	(bad)  
 10318a0:	(bad)  
 10318a1:	cld    
 10318a2:	cli    
 10318a3:	(bad)  
 10318a4:	(bad)  
 10318a5:	cld    
 10318a6:	stc    
 10318a7:	(bad)  
 10318a8:	(bad)  
 10318a9:	cld    
 10318aa:	stc    
 10318ab:	jmp    FWORD PTR [esi+0x59ffcbc3]
 10318b1:	nop
 10318b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10318b3:	dec    DWORD PTR [edi-0x71]
 10318b6:	scas   eax,DWORD PTR es:[edi]
 10318b7:	dec    DWORD PTR [edx-0x78]
 10318ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10318bb:	inc    DWORD PTR [edi-0x7d]
 10318be:	mov    ds:0x9f7b40ff,eax
 10318c3:	inc    DWORD PTR [edx+0x7d]
 10318c6:	mov    eax,ds:0xb39154ff
 10318cb:	call   DWORD PTR [ebp-0x6f]
 10318ce:	mov    ah,0xff
 10318d0:	scas   eax,DWORD PTR es:[edi]
 10318d1:	shl    bl,cl
 10318d3:	jmp    DWORD PTR [ecx-0x25]
 10318d6:	(bad)  
 10318d7:	(bad)  
 10318d8:	ds sar bh,1
 10318db:	(bad)  
 10318dc:	cmp    ecx,edi
 10318de:	(bad)  
 10318df:	inc    DWORD PTR [ecx-0x2f]
 10318e2:	(bad)  
 10318e3:	jmp    FWORD PTR [edi]
 10318e5:	retf   
 10318e6:	(bad)  
 10318e7:	jmp    FWORD PTR [edx+ecx*8]
 10318ea:	(bad)  
 10318eb:	call   DWORD PTR [ecx-0x21]
 10318ee:	(bad)  
 10318ef:	push   DWORD PTR [eax]
 10318f1:	je     0x103188d
 10318f3:	(bad)  
 10318f4:	jns    0x1031881
 10318f6:	cdq    
 10318f7:	dec    esp
 10318f9:	ret    0xffbc
 10318fc:	loope  0x10318d4
 10318fe:	into   
 10318ff:	push   esp
 1031901:	call   0xf20118e6
 1031906:	call   0xe9f5190a
 103190b:	(bad)  
 103190c:	push   ecx
 103190e:	out    0xff,eax
 1031910:	push   eax
 1031912:	out    0xff,eax
 1031914:	(bad)  
 1031915:	out    dx,eax
 1031916:	out    0xff,al
 1031918:	(bad)  
 1031919:	out    dx,eax
 103191a:	in     eax,0xff
 103191c:	(bad)  
 103191d:	out    dx,eax
 103191e:	in     al,0xff
 1031920:	(bad)  
 1031921:	in     eax,dx
 1031922:	in     al,0xff
 1031924:	(bad)  
 1031925:	in     eax,dx
 1031926:	jecxz  0x1031927
 1031928:	(bad)  
 1031929:	in     eax,dx
 103192a:	loop   0x103192b
 103192c:	(bad)  
 103192d:	in     al,dx
 103192e:	loop   0x103192f
 1031930:	(bad)  
 1031931:	in     al,dx
 1031932:	loopne 0x1031933
 1031934:	(bad)  
 1031935:	jmp    0x1031916
 1031937:	inc    DWORD PTR [eax+0xff596d]
	...
 1031969:	add    BYTE PTR [eax],al
 103196b:	add    BYTE PTR [ebp+0x62],ch
 103196e:	pop    ebx
 103196f:	dec    ecx
 1031971:	mov    ah,0xff
 1031974:	leave  
 1031975:	mov    ah,0xff
 1031978:	(bad)  
 1031979:	(bad)  
 103197a:	(bad)  
 103197b:	jmp    esp
 103197d:	jecxz  0x1031961
 103197f:	jmp    FWORD PTR [ebp+0x62]
 1031982:	pop    ebx
 1031983:	(bad)  
 1031984:	(bad)  
 1031985:	(bad)  
 1031986:	(bad)  
 1031987:	(bad)  
 1031988:	(bad)  
 1031989:	(bad)  
 103198a:	(bad)  
 103198b:	(bad)  
 103198c:	(bad)  
 103198d:	std    
 103198e:	std    
 103198f:	(bad)  
 1031990:	(bad)  
 1031991:	(bad)  
 1031992:	std    
 1031993:	(bad)  
 1031994:	(bad)  
 1031995:	std    
 1031996:	cld    
 1031997:	(bad)  
 1031998:	(bad)  
 1031999:	std    
 103199a:	cld    
 103199b:	(bad)  
 103199c:	(bad)  
 103199d:	std    
 103199e:	sti    
 103199f:	(bad)  
 10319a0:	(bad)  
 10319a1:	std    
 10319a2:	sti    
 10319a3:	(bad)  
 10319a4:	(bad)  
 10319a5:	cld    
 10319a6:	cli    
 10319a7:	(bad)  
 10319a8:	(bad)  
 10319a9:	cld    
 10319aa:	cli    
 10319ab:	call   FWORD PTR [ecx-0x70]
 10319ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10319af:	jmp    DWORD PTR [edx+ebp*8-0x155a0004]
 10319b6:	cld    
 10319b7:	jmp    DWORD PTR [edx+ebp*8-0x155b0004]
 10319be:	cld    
 10319bf:	jmp    DWORD PTR [edx+ebp*8-0x155b0004]
 10319c6:	cld    
 10319c7:	jmp    DWORD PTR [edx+ebp*8-0x155b0004]
 10319ce:	cld    
 10319cf:	jmp    DWORD PTR [edx+ebp*8-0x19690004]
 10319d6:	cld    
 10319d7:	push   DWORD PTR ds:0x2bffffcc
 10319dd:	leave  
 10319de:	(bad)  
 10319df:	jmp    FWORD PTR [edx+ecx*8]
 10319e2:	(bad)  
 10319e3:	jmp    FWORD PTR [ebx]
 10319e5:	leave  
 10319e6:	(bad)  
 10319e7:	jmp    FWORD PTR [edi]
 10319e9:	int3   
 10319ea:	(bad)  
 10319eb:	(bad)  
 10319ec:	cmp    esp,edx
 10319ee:	(bad)  
 10319ef:	(bad)  
 10319f0:	ds shl dh,1
 10319f3:	jmp    FWORD PTR [esi]
 10319f5:	ja     0x1031996
 10319f7:	(bad)  
 10319f8:	jg     0x1031987
 10319fa:	call   0xe1ff:0xbcc2ccff
 1031a01:	(bad)  
 1031a02:	iret   
 1031a03:	push   esi
 1031a05:	jmp    0xf30219ec
 1031a0a:	call   0xe9f41a0e
 1031a0f:	(bad)  
 1031a10:	push   ecx
 1031a12:	call   0xe7f41a16
 1031a17:	(bad)  
 1031a18:	(bad)  
 1031a19:	out    dx,eax
 1031a1a:	out    0xff,al
 1031a1c:	(bad)  
 1031a1d:	out    dx,eax
 1031a1e:	in     eax,0xff
 1031a20:	(bad)  
 1031a21:	out    dx,al
 1031a22:	in     eax,0xff
 1031a24:	(bad)  
 1031a25:	out    dx,al
 1031a26:	in     al,0xff
 1031a28:	(bad)  
 1031a29:	in     eax,dx
 1031a2a:	jecxz  0x1031a2b
 1031a2c:	(bad)  
 1031a2d:	in     eax,dx
 1031a2e:	loop   0x1031a2f
 1031a30:	(bad)  
 1031a31:	in     al,dx
 1031a32:	loop   0x1031a33
 1031a34:	(bad)  
 1031a35:	in     al,dx
 1031a36:	loope  0x1031a37
 1031a38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1031a6c:	out    dx,al
 1031a6d:	in     eax,dx
 1031a6e:	in     al,dx
 1031a6f:	jmp    ebp
 1031a71:	jecxz  0x1031a55
 1031a73:	jmp    ebp
 1031a75:	jecxz  0x1031a59
 1031a77:	jmp    ebp
 1031a79:	jecxz  0x1031a5d
 1031a7b:	jmp    ebp
 1031a7d:	jecxz  0x1031a61
 1031a7f:	(bad)  
 1031a80:	out    dx,al
 1031a81:	in     eax,dx
 1031a82:	in     al,dx
 1031a83:	(bad)  
 1031a84:	(bad)  
 1031a85:	(bad)  
 1031a86:	(bad)  
 1031a87:	(bad)  
 1031a88:	(bad)  
 1031a89:	(bad)  
 1031a8a:	(bad)  
 1031a8b:	(bad)  
 1031a8c:	(bad)  
 1031a8d:	(bad)  
 1031a8e:	std    
 1031a8f:	(bad)  
 1031a90:	(bad)  
 1031a91:	(bad)  
 1031a92:	std    
 1031a93:	(bad)  
 1031a94:	(bad)  
 1031a95:	std    
 1031a96:	std    
 1031a97:	(bad)  
 1031a98:	(bad)  
 1031a99:	std    
 1031a9a:	std    
 1031a9b:	(bad)  
 1031a9c:	(bad)  
 1031a9d:	std    
 1031a9e:	sti    
 1031a9f:	(bad)  
 1031aa0:	(bad)  
 1031aa1:	std    
 1031aa2:	sti    
 1031aa3:	(bad)  
 1031aa4:	(bad)  
 1031aa5:	std    
 1031aa6:	sti    
 1031aa7:	(bad)  
 1031aa8:	(bad)  
 1031aa9:	cld    
 1031aaa:	sti    
 1031aab:	push   DWORD PTR [ebx+0x77ffc7c1]
 1031ab1:	mov    cl,0xc7
 1031ab3:	dec    edi
 1031ab5:	cmc    
 1031ab6:	(bad)  
 1031ab7:	jmp    FWORD PTR [esi-0x23]
 1031aba:	sti    
 1031abb:	call   DWORD PTR [esi-0x2a]
 1031abe:	sti    
 1031abf:	call   DWORD PTR [edx-0x2a]
 1031ac2:	sti    
 1031ac3:	call   DWORD PTR [ecx-0x2b]
 1031ac6:	cld    
 1031ac7:	dec    DWORD PTR [edi-0x2c]
 1031aca:	cld    
 1031acb:	dec    DWORD PTR [esp+edx*8-0x3]
 1031acf:	dec    DWORD PTR [edx-0x2d]
 1031ad2:	std    
 1031ad3:	inc    DWORD PTR [esi-0x2e]
 1031ad6:	std    
 1031ad7:	inc    DWORD PTR [ecx+edx*8-0x3]
 1031adb:	inc    DWORD PTR [ecx-0x30]
 1031ade:	std    
 1031adf:	(bad)  
 1031ae0:	ds iret 
 1031ae2:	(bad)  
 1031ae3:	(bad)  
 1031ae4:	cmp    al,0xce
 1031ae6:	(bad)  
 1031ae7:	(bad)  
 1031ae8:	cmp    ebp,ecx
 1031aea:	(bad)  
 1031aeb:	push   DWORD PTR [esi]
 1031aed:	int    0xfe
 1031aef:	push   DWORD PTR [esp+ecx*8]
 1031af2:	(bad)  
 1031af3:	push   DWORD PTR [edx]
 1031af5:	retf   
 1031af6:	(bad)  
 1031af7:	inc    DWORD PTR [edx-0x7d]
 1031afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1031afb:	(bad)  
 1031afc:	jle    0x1031a91
 1031afe:	mov    eax,ds:0xc5c9cfff
 1031b03:	push   edx
 1031b05:	out    0xdf,al
 1031b07:	(bad)  
 1031b08:	(bad)  
 1031b09:	icebp  
 1031b0a:	jmp    0xebf61b0e
 1031b0f:	(bad)  
 1031b10:	push   ecx
 1031b12:	call   0xe9f41b16
 1031b17:	(bad)  
 1031b18:	push   eax
 1031b1a:	out    0xff,eax
 1031b1c:	(bad)  
 1031b1d:	out    dx,eax
 1031b1e:	out    0xff,al
 1031b20:	(bad)  
 1031b21:	out    dx,eax
 1031b22:	out    0xff,al
 1031b24:	(bad)  
 1031b25:	out    dx,eax
 1031b26:	in     al,0xff
 1031b28:	(bad)  
 1031b29:	out    dx,al
 1031b2a:	jecxz  0x1031b2b
 1031b2c:	(bad)  
 1031b2d:	out    dx,al
 1031b2e:	jecxz  0x1031b2f
 1031b30:	(bad)  
 1031b31:	in     eax,dx
 1031b32:	loop   0x1031b33
 1031b34:	(bad)  
 1031b35:	in     al,dx
 1031b36:	loop   0x1031b37
 1031b38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1031b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1031b75:	xchg   edx,eax
 1031b76:	cmp    bh,0xff
 1031b79:	(bad)  
 1031b7a:	(bad)  
 1031b7b:	(bad)  
 1031b7c:	(bad)  
 1031b7d:	(bad)  
 1031b7e:	(bad)  
 1031b7f:	(bad)  
 1031b80:	(bad)  
 1031b81:	(bad)  
 1031b82:	(bad)  
 1031b83:	(bad)  
 1031b84:	(bad)  
 1031b85:	(bad)  
 1031b86:	(bad)  
 1031b87:	(bad)  
 1031b88:	(bad)  
 1031b89:	(bad)  
 1031b8a:	(bad)  
 1031b8b:	(bad)  
 1031b8c:	(bad)  
 1031b8d:	(bad)  
 1031b8e:	(bad)  
 1031b8f:	(bad)  
 1031b90:	(bad)  
 1031b91:	(bad)  
 1031b92:	std    
 1031b93:	(bad)  
 1031b94:	(bad)  
 1031b95:	(bad)  
 1031b96:	std    
 1031b97:	(bad)  
 1031b98:	(bad)  
 1031b99:	(bad)  
 1031b9a:	std    
 1031b9b:	(bad)  
 1031b9c:	(bad)  
 1031b9d:	std    
 1031b9e:	cld    
 1031b9f:	(bad)  
 1031ba0:	(bad)  
 1031ba1:	std    
 1031ba2:	cld    
 1031ba3:	(bad)  
 1031ba4:	(bad)  
 1031ba5:	std    
 1031ba6:	cld    
 1031ba7:	(bad)  
 1031ba8:	(bad)  
 1031ba9:	cld    
 1031baa:	sti    
 1031bab:	(bad)  
 1031bac:	out    dx,al
 1031bad:	out    dx,eax
 1031bae:	out    dx,al
 1031baf:	dec    DWORD PTR [ebx-0x43004150]
 1031bb5:	lock std 
 1031bb7:	jmp    FWORD PTR [esp+ebp*8-0x259f0004]
 1031bbe:	clc    
 1031bbf:	call   FWORD PTR [ebx-0x27]
 1031bc2:	cli    
 1031bc3:	jmp    DWORD PTR [ecx-0x26]
 1031bc6:	cli    
 1031bc7:	jmp    DWORD PTR [edx-0x25]
 1031bca:	sti    
 1031bcb:	jmp    DWORD PTR [ebx-0x25]
 1031bce:	sti    
 1031bcf:	jmp    FWORD PTR [eax-0x23]
 1031bd2:	sti    
 1031bd3:	jmp    FWORD PTR [esi+ebx*8-0x5]
 1031bd7:	jmp    FWORD PTR [ebx-0x22]
 1031bda:	sti    
 1031bdb:	jmp    FWORD PTR [eax-0x24]
 1031bde:	sti    
 1031bdf:	jmp    FWORD PTR [eax-0x24]
 1031be2:	sti    
 1031be3:	jmp    FWORD PTR [eax-0x24]
 1031be6:	sti    
 1031be7:	jmp    FWORD PTR [eax-0x24]
 1031bea:	sti    
 1031beb:	jmp    DWORD PTR [edi-0x24]
 1031bee:	sti    
 1031bef:	jmp    DWORD PTR [edi-0x24]
 1031bf2:	sti    
 1031bf3:	jmp    DWORD PTR [edi-0x24]
 1031bf6:	sti    
 1031bf7:	jmp    FWORD PTR [esi-0x22]
 1031bfa:	sti    
 1031bfb:	jmp    FWORD PTR [edx]
 1031bfd:	arpl   WORD PTR [ecx-0x2f2e2c01],cx
 1031c03:	(bad)  
 1031c04:	clc    
 1031c05:	jmp    0x1031bed
 1031c07:	(bad)  
 1031c08:	(bad)  
 1031c09:	repnz jmp 0xffff:0xeaf2ffff
 1031c11:	icebp  
 1031c12:	jmp    0xeaf51c16
 1031c17:	(bad)  
 1031c18:	push   eax
 1031c1a:	out    0xff,eax
 1031c1c:	push   eax
 1031c1e:	out    0xff,eax
 1031c20:	push   eax
 1031c22:	out    0xff,eax
 1031c24:	(bad)  
 1031c25:	out    dx,eax
 1031c26:	in     eax,0xff
 1031c28:	(bad)  
 1031c29:	out    dx,al
 1031c2a:	in     eax,0xff
 1031c2c:	(bad)  
 1031c2d:	out    dx,al
 1031c2e:	in     al,0xff
 1031c30:	(bad)  
 1031c31:	in     eax,dx
 1031c32:	jecxz  0x1031c33
 1031c34:	(bad)  
 1031c35:	in     eax,dx
 1031c36:	loop   0x1031c37
 1031c38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1031c74:	test   al,0x93
 1031c76:	cmp    edi,0xffffffff
 1031c7c:	(bad)  
 1031c7d:	(bad)  
 1031c7e:	(bad)  
 1031c7f:	(bad)  
 1031c80:	(bad)  
 1031c81:	(bad)  
 1031c82:	(bad)  
 1031c83:	(bad)  
 1031c84:	(bad)  
 1031c85:	(bad)  
 1031c86:	(bad)  
 1031c87:	(bad)  
 1031c88:	(bad)  
 1031c89:	(bad)  
 1031c8a:	(bad)  
 1031c8b:	(bad)  
 1031c8c:	(bad)  
 1031c8d:	(bad)  
 1031c8e:	(bad)  
 1031c8f:	(bad)  
 1031c90:	(bad)  
 1031c91:	(bad)  
 1031c92:	(bad)  
 1031c93:	(bad)  
 1031c94:	(bad)  
 1031c95:	(bad)  
 1031c96:	std    
 1031c97:	(bad)  
 1031c98:	(bad)  
 1031c99:	(bad)  
 1031c9a:	std    
 1031c9b:	(bad)  
 1031c9c:	(bad)  
 1031c9d:	(bad)  
 1031c9e:	std    
 1031c9f:	(bad)  
 1031ca0:	(bad)  
 1031ca1:	std    
 1031ca2:	cld    
 1031ca3:	(bad)  
 1031ca4:	(bad)  
 1031ca5:	std    
 1031ca6:	cld    
 1031ca7:	(bad)  
 1031ca8:	(bad)  
 1031ca9:	cld    
 1031caa:	cld    
 1031cab:	(bad)  
 1031cac:	(bad)  
 1031cad:	cld    
 1031cae:	sti    
 1031caf:	call   ebx
 1031cb1:	fucom  st(1)
 1031cb3:	call   FWORD PTR [ebp-0x6e]
 1031cb6:	test   eax,0xfff6d4ff
 1031cbb:	jmp    FWORD PTR [ebp+ebx*8-0x7]
 1031cbf:	call   FWORD PTR [edx-0x28]
 1031cc2:	cli    
 1031cc3:	jmp    DWORD PTR [edx+ebx*8-0x6]
 1031cc7:	jmp    DWORD PTR [edi-0x25]
 1031cca:	sti    
 1031ccb:	jmp    DWORD PTR [edi-0x26]
 1031cce:	sti    
 1031ccf:	jmp    DWORD PTR [esi-0x25]
 1031cd2:	sti    
 1031cd3:	jmp    DWORD PTR [esi-0x25]
 1031cd6:	sti    
 1031cd7:	jmp    DWORD PTR [edi-0x26]
 1031cda:	sti    
 1031cdb:	jmp    FWORD PTR [edi-0x19]
 1031cde:	(bad)  
 1031cdf:	call   DWORD PTR [edi+eiz*4-0x39]
 1031ce3:	inc    DWORD PTR [eax+0x79]
 1031ce6:	call   0x42ff:0x9d7c41ff
 1031ced:	jg     0x1031c8f
 1031cef:	inc    DWORD PTR [edx+0x7f]
 1031cf2:	mov    ds:0xa68545ff,al
 1031cf7:	call   DWORD PTR [edx+ecx*4-0x59]
 1031cfb:	inc    edi
 1031cfd:	int3   
 1031cfe:	iret   
 1031cff:	(bad)  
 1031d00:	stc    
 1031d01:	out    dx,al
 1031d02:	out    0xff,eax
 1031d04:	(bad)  
 1031d05:	repz jmp 0x1031d07
 1031d08:	push   ebx
 1031d0a:	jmp    0x1031d0b
 1031d0c:	push   edx
 1031d0e:	jmp    0x1031d0f
 1031d10:	push   edx
 1031d12:	jmp    0xffff:0xeaf1ffff
 1031d19:	icebp  
 1031d1a:	jmp    0xe9f41d1e
 1031d1f:	(bad)  
 1031d20:	push   eax
 1031d22:	out    0xff,eax
 1031d24:	push   eax
 1031d26:	out    0xff,al
 1031d28:	(bad)  
 1031d29:	out    dx,eax
 1031d2a:	out    0xff,al
 1031d2c:	(bad)  
 1031d2d:	out    dx,eax
 1031d2e:	in     eax,0xff
 1031d30:	(bad)  
 1031d31:	out    dx,al
 1031d32:	in     al,0xff
 1031d34:	(bad)  
 1031d35:	out    dx,al
 1031d36:	jecxz  0x1031d37
 1031d38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1031d6c:	mov    ch,0xb0
 1031d6e:	lods   eax,DWORD PTR ds:[esi]
 1031d6f:	dec    DWORD PTR [ebp-0x72007e7b]
 1031d75:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1031d7b:	dec    DWORD PTR [ebp-0x4a007e7b]
 1031d81:	mov    al,0xad
 1031d83:	(bad)  
 1031d84:	(bad)  
 1031d85:	(bad)  
 1031d86:	(bad)  
 1031d87:	(bad)  
 1031d88:	(bad)  
 1031d89:	(bad)  
 1031d8a:	(bad)  
 1031d8b:	(bad)  
 1031d8c:	(bad)  
 1031d8d:	(bad)  
 1031d8e:	(bad)  
 1031d8f:	(bad)  
 1031d90:	(bad)  
 1031d91:	(bad)  
 1031d92:	(bad)  
 1031d93:	(bad)  
 1031d94:	(bad)  
 1031d95:	(bad)  
 1031d96:	std    
 1031d97:	(bad)  
 1031d98:	(bad)  
 1031d99:	(bad)  
 1031d9a:	(bad)  
 1031d9b:	(bad)  
 1031d9c:	(bad)  
 1031d9d:	(bad)  
 1031d9e:	(bad)  
 1031d9f:	(bad)  
 1031da0:	(bad)  
 1031da1:	std    
 1031da2:	std    
 1031da3:	(bad)  
 1031da4:	(bad)  
 1031da5:	std    
 1031da6:	std    
 1031da7:	(bad)  
 1031da8:	(bad)  
 1031da9:	std    
 1031daa:	cld    
 1031dab:	(bad)  
 1031dac:	(bad)  
 1031dad:	cld    
 1031dae:	sti    
 1031daf:	(bad)  
 1031db0:	(bad)  
 1031db1:	cld    
 1031db2:	sti    
 1031db3:	inc    DWORD PTR [eax-0x40004556]
 1031db9:	icebp  
 1031dba:	(bad)  
 1031dbb:	jmp    DWORD PTR [ebx+ebp*8-0x25a10004]
 1031dc2:	clc    
 1031dc3:	push   DWORD PTR [ebx-0x1d]
 1031dc6:	cld    
 1031dc7:	(bad)  
 1031dc8:	jnp    0x1031daf
 1031dca:	sti    
 1031dcb:	(bad)  
 1031dcc:	jl     0x1031db2
 1031dce:	sti    
 1031dcf:	(bad)  
 1031dd0:	jns    0x1031db6
 1031dd2:	sti    
 1031dd3:	(bad)  
 1031dd4:	jns    0x1031dba
 1031dd6:	sti    
 1031dd7:	(bad)  
 1031dd8:	jp     0x1031dbf
 1031dda:	sti    
 1031ddb:	(bad)  
 1031ddc:	jge    0x1031dc5
 1031dde:	(bad)  
 1031ddf:	(bad)  
 1031de0:	jns    0x1031dc4
 1031de2:	cmc    
 1031de3:	dec    DWORD PTR [ebp-0x6e]
 1031de6:	mov    cl,0xff
 1031de8:	sahf   
 1031de9:	test   al,0xae
 1031deb:	dec    esi
 1031ded:	enter  0xffc4,0xe0
 1031df1:	fcmovnbe st,st(6)
 1031df3:	(bad)  
 1031df4:	jmp    0xf20302df
 1031df9:	in     al,dx
 1031dfa:	jmp    0xeff81cfe
 1031dff:	(bad)  
 1031e00:	push   esp
 1031e02:	out    dx,al
 1031e03:	(bad)  
 1031e04:	push   esp
 1031e06:	in     eax,dx
 1031e07:	(bad)  
 1031e08:	push   esp
 1031e0a:	in     eax,dx
 1031e0b:	(bad)  
 1031e0c:	push   ebx
 1031e0e:	in     al,dx
 1031e0f:	(bad)  
 1031e10:	push   ebx
 1031e12:	jmp    0x1031e13
 1031e14:	push   edx
 1031e16:	jmp    0x1031e17
 1031e18:	push   edx
 1031e1a:	jmp    0xffff:0xe8f1ffff
 1031e21:	icebp  
 1031e22:	call   0xe9f41e26
 1031e27:	(bad)  
 1031e28:	(bad)  
 1031e29:	out    dx,eax
 1031e2a:	out    0xff,al
 1031e2c:	push   eax
 1031e2e:	in     eax,0xff
 1031e30:	(bad)  
 1031e31:	out    dx,eax
 1031e32:	in     eax,0xff
 1031e34:	(bad)  
 1031e35:	out    dx,al
 1031e36:	in     al,0xff
 1031e38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1031e6c:	ins    DWORD PTR es:[edi],dx
 1031e6d:	bound  ebx,QWORD PTR [ebx-0x1]
 1031e70:	leave  
 1031e71:	mov    ah,0xff
 1031e74:	leave  
 1031e75:	mov    ah,0xff
 1031e78:	(bad)  
 1031e79:	(bad)  
 1031e7a:	(bad)  
 1031e7b:	jmp    esp
 1031e7d:	jecxz  0x1031e61
 1031e7f:	jmp    FWORD PTR [ebp+0x62]
 1031e82:	pop    ebx
 1031e83:	(bad)  
 1031e84:	(bad)  
 1031e85:	(bad)  
 1031e86:	(bad)  
 1031e87:	(bad)  
 1031e88:	(bad)  
 1031e89:	(bad)  
 1031e8a:	(bad)  
 1031e8b:	(bad)  
 1031e8c:	(bad)  
 1031e8d:	(bad)  
 1031e8e:	(bad)  
 1031e8f:	(bad)  
 1031e90:	(bad)  
 1031e91:	(bad)  
 1031e92:	(bad)  
 1031e93:	(bad)  
 1031e94:	(bad)  
 1031e95:	(bad)  
 1031e96:	(bad)  
 1031e97:	(bad)  
 1031e98:	(bad)  
 1031e99:	(bad)  
 1031e9a:	(bad)  
 1031e9b:	(bad)  
 1031e9c:	(bad)  
 1031e9d:	(bad)  
 1031e9e:	(bad)  
 1031e9f:	(bad)  
 1031ea0:	(bad)  
 1031ea1:	(bad)  
 1031ea2:	std    
 1031ea3:	(bad)  
 1031ea4:	(bad)  
 1031ea5:	(bad)  
 1031ea6:	std    
 1031ea7:	(bad)  
 1031ea8:	(bad)  
 1031ea9:	(bad)  
 1031eaa:	std    
 1031eab:	(bad)  
 1031eac:	(bad)  
 1031ead:	std    
 1031eae:	cld    
 1031eaf:	(bad)  
 1031eb0:	(bad)  
 1031eb1:	cld    
 1031eb2:	cli    
 1031eb3:	(bad)  
 1031eb4:	fsub   st,st(3)
 1031eb6:	out    0xff,eax
 1031eb8:	js     0x1031e69
 1031eba:	ret    0xd4ff
 1031ebd:	idiv   bh
 1031ebf:	jmp    FWORD PTR [eax-0x24]
 1031ec2:	stc    
 1031ec3:	call   FWORD PTR [esi-0x26]
 1031ec6:	clc    
 1031ec7:	(bad)  
 1031ec8:	jp     0x1031eaf
 1031eca:	sti    
 1031ecb:	(bad)  
 1031ecc:	jl     0x1031eb3
 1031ece:	sti    
 1031ecf:	(bad)  
 1031ed0:	jnp    0x1031eb7
 1031ed2:	cli    
 1031ed3:	(bad)  
 1031ed4:	jnp    0x1031ebb
 1031ed6:	cli    
 1031ed7:	(bad)  
 1031ed8:	jnp    0x1031ec0
 1031eda:	cli    
 1031edb:	(bad)  
 1031edc:	jnp    0x1031ec3
 1031ede:	cld    
 1031edf:	(bad)  
 1031ee0:	jnp    0x1031ec7
 1031ee2:	cld    
 1031ee3:	push   DWORD PTR [ebp+ebx*8-0xa]
 1031ee7:	call   DWORD PTR [ebp-0x6a]
 1031eea:	mov    ah,0xff
 1031eec:	call   0xc4c9:0xcfffaca5
 1031ef3:	jmp    esp
 1031ef5:	fst    st(7)
 1031ef7:	push   esi
 1031ef9:	in     eax,dx
 1031efa:	call   0xeff81dfe
 1031eff:	(bad)  
 1031f00:	push   ebp
 1031f02:	out    dx,eax
 1031f03:	(bad)  
 1031f04:	push   ebp
 1031f06:	out    dx,al
 1031f07:	(bad)  
 1031f08:	push   esp
 1031f0a:	in     eax,dx
 1031f0b:	(bad)  
 1031f0c:	push   esp
 1031f0e:	in     eax,dx
 1031f0f:	(bad)  
 1031f10:	push   ebx
 1031f12:	in     al,dx
 1031f13:	(bad)  
 1031f14:	push   ebx
 1031f16:	jmp    0x1031f17
 1031f18:	push   ebx
 1031f1a:	jmp    0x1031f1b
 1031f1c:	push   ecx
 1031f1e:	jmp    0xffff:0xe9f1ffff
 1031f25:	icebp  
 1031f26:	call   0xe8f41f2a
 1031f2b:	(bad)  
 1031f2c:	(bad)  
 1031f2d:	out    dx,eax
 1031f2e:	out    0xff,eax
 1031f30:	(bad)  
 1031f31:	out    dx,eax
 1031f32:	in     eax,0xff
 1031f34:	(bad)  
 1031f35:	out    dx,al
 1031f36:	in     eax,0xff
 1031f38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1031f6c:	out    dx,al
 1031f6d:	in     eax,dx
 1031f6e:	in     al,dx
 1031f6f:	jmp    ebp
 1031f71:	jecxz  0x1031f55
 1031f73:	jmp    ebp
 1031f75:	jecxz  0x1031f59
 1031f77:	jmp    ebp
 1031f79:	jecxz  0x1031f5d
 1031f7b:	jmp    ebp
 1031f7d:	jecxz  0x1031f61
 1031f7f:	(bad)  
 1031f80:	out    dx,al
 1031f81:	in     eax,dx
 1031f82:	in     al,dx
 1031f83:	(bad)  
 1031f84:	(bad)  
 1031f85:	(bad)  
 1031f86:	(bad)  
 1031f87:	(bad)  
 1031f88:	(bad)  
 1031f89:	(bad)  
 1031f8a:	(bad)  
 1031f8b:	(bad)  
 1031f8c:	(bad)  
 1031f8d:	(bad)  
 1031f8e:	(bad)  
 1031f8f:	(bad)  
 1031f90:	(bad)  
 1031f91:	(bad)  
 1031f92:	(bad)  
 1031f93:	(bad)  
 1031f94:	(bad)  
 1031f95:	(bad)  
 1031f96:	(bad)  
 1031f97:	(bad)  
 1031f98:	(bad)  
 1031f99:	(bad)  
 1031f9a:	(bad)  
 1031f9b:	(bad)  
 1031f9c:	(bad)  
 1031f9d:	(bad)  
 1031f9e:	(bad)  
 1031f9f:	(bad)  
 1031fa0:	(bad)  
 1031fa1:	(bad)  
 1031fa2:	std    
 1031fa3:	(bad)  
 1031fa4:	(bad)  
 1031fa5:	(bad)  
 1031fa6:	std    
 1031fa7:	(bad)  
 1031fa8:	(bad)  
 1031fa9:	(bad)  
 1031faa:	cld    
 1031fab:	(bad)  
 1031fac:	(bad)  
 1031fad:	(bad)  
 1031fae:	cld    
 1031faf:	(bad)  
 1031fb0:	(bad)  
 1031fb1:	std    
 1031fb2:	cld    
 1031fb3:	(bad)  
 1031fb4:	(bad)  
 1031fb5:	std    
 1031fb6:	cld    
 1031fb7:	jmp    FWORD PTR [ecx-0x6a]
 1031fba:	test   eax,0xfef1c2ff
 1031fbf:	jmp    DWORD PTR [edi+0x5efffded]
 1031fc5:	(bad)  
 1031fc7:	push   DWORD PTR [ecx-0x1f]
 1031fca:	sti    
 1031fcb:	push   DWORD PTR [ebx-0x1e]
 1031fce:	sti    
 1031fcf:	push   DWORD PTR [ebp-0x1e]
 1031fd2:	cli    
 1031fd3:	push   DWORD PTR [edx+eiz*8-0x6]
 1031fd7:	push   DWORD PTR [edx+eiz*8-0x6]
 1031fdb:	push   DWORD PTR [edx+eiz*8-0x5]
 1031fdf:	push   DWORD PTR [ebx-0x1f]
 1031fe2:	sti    
 1031fe3:	(bad)  
 1031fe4:	jnp    0x1031fcb
 1031fe6:	cld    
 1031fe7:	jmp    DWORD PTR [ebx-0x39]
 1031fea:	in     eax,0xff
 1031fec:	dec    ebp
 1031fed:	xchg   edx,eax
 1031fee:	mov    cl,0xff
 1031ff0:	pushf  
 1031ff1:	test   al,0xaf
 1031ff3:	dec    esp
 1031ff5:	mov    bl,0xff
 1031ff8:	out    0xdf,al
 1031ffa:	fcos   
 1031ffc:	imul   esi
 1031ffe:	jmp    0xeff81f02
 1032003:	(bad)  
 1032004:	push   ebp
 1032006:	out    dx,eax
 1032007:	(bad)  
 1032008:	push   ebp
 103200a:	out    dx,al
 103200b:	(bad)  
 103200c:	push   esp
 103200e:	out    dx,al
 103200f:	(bad)  
 1032010:	push   ebx
 1032012:	in     eax,dx
 1032013:	(bad)  
 1032014:	push   ebx
 1032016:	in     al,dx
 1032017:	(bad)  
 1032018:	push   ebx
 103201a:	jmp    0x103201b
 103201c:	push   edx
 103201e:	jmp    0xffff:0xe9f2ffff
 1032025:	bnd jmp 0xe9f4202a
 103202b:	(bad)  
 103202c:	push   eax
 103202e:	out    0xff,eax
 1032030:	push   eax
 1032032:	out    0xff,al
 1032034:	(bad)  
 1032035:	out    dx,eax
 1032036:	in     eax,0xff
 1032038:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1032074:	stos   BYTE PTR es:[edi],al
 1032075:	xchg   esp,eax
 1032076:	test   bh,bh
 1032078:	(bad)  
 1032079:	(bad)  
 103207a:	(bad)  
 103207b:	(bad)  
 103207c:	(bad)  
 103207d:	(bad)  
 103207e:	(bad)  
 103207f:	(bad)  
 1032080:	(bad)  
 1032081:	(bad)  
 1032082:	(bad)  
 1032083:	(bad)  
 1032084:	(bad)  
 1032085:	(bad)  
 1032086:	(bad)  
 1032087:	(bad)  
 1032088:	(bad)  
 1032089:	(bad)  
 103208a:	(bad)  
 103208b:	(bad)  
 103208c:	(bad)  
 103208d:	(bad)  
 103208e:	(bad)  
 103208f:	(bad)  
 1032090:	(bad)  
 1032091:	(bad)  
 1032092:	(bad)  
 1032093:	(bad)  
 1032094:	(bad)  
 1032095:	(bad)  
 1032096:	(bad)  
 1032097:	(bad)  
 1032098:	(bad)  
 1032099:	(bad)  
 103209a:	(bad)  
 103209b:	(bad)  
 103209c:	(bad)  
 103209d:	(bad)  
 103209e:	(bad)  
 103209f:	(bad)  
 10320a0:	(bad)  
 10320a1:	(bad)  
 10320a2:	(bad)  
 10320a3:	(bad)  
 10320a4:	(bad)  
 10320a5:	(bad)  
 10320a6:	std    
 10320a7:	(bad)  
 10320a8:	(bad)  
 10320a9:	(bad)  
 10320aa:	(bad)  
 10320ab:	(bad)  
 10320ac:	(bad)  
 10320ad:	(bad)  
 10320ae:	std    
 10320af:	(bad)  
 10320b0:	(bad)  
 10320b1:	std    
 10320b2:	std    
 10320b3:	(bad)  
 10320b4:	(bad)  
 10320b5:	std    
 10320b6:	cld    
 10320b7:	dec    esi
 10320b9:	fsubr  st(1),st
 10320bb:	(bad)  
 10320bc:	js     0x1032060
 10320be:	mov    dh,0xff
 10320c0:	aam    0xf6
 10320c2:	(bad)  
 10320c3:	jmp    DWORD PTR [ebx+ebx*8-0x8]
 10320c7:	call   FWORD PTR [esi-0x26]
 10320ca:	clc    
 10320cb:	jmp    FWORD PTR [edi+ebx*8-0x6]
 10320cf:	push   DWORD PTR [ecx-0x20]
 10320d2:	cli    
 10320d3:	push   DWORD PTR [ecx-0x20]
 10320d6:	cli    
 10320d7:	push   DWORD PTR [ecx-0x1f]
 10320da:	cli    
 10320db:	push   DWORD PTR [eax-0x20]
 10320de:	sti    
 10320df:	push   DWORD PTR [eax-0x1f]
 10320e2:	cli    
 10320e3:	push   DWORD PTR [ecx-0x20]
 10320e6:	sti    
 10320e7:	(bad)  
 10320e8:	jnp    0x10320cf
 10320ea:	cld    
 10320eb:	(bad)  
 10320ec:	jnp    0x10320d3
 10320ee:	cld    
 10320ef:	dec    DWORD PTR [esi-0x72]
 10320f2:	scas   al,BYTE PTR es:[edi]
 10320f3:	jmp    DWORD PTR [edx-0x2d004d54]
 10320f9:	retf   
 10320fa:	(bad)  
 10320fb:	(bad)  
 10320fc:	call   0xfb02fce1
 1032101:	lock jmp 0x1032103
 1032104:	push   esi
 1032106:	lock (bad) 
 1032108:	push   ebp
 103210a:	out    dx,eax
 103210b:	(bad)  
 103210c:	push   esp
 103210e:	out    dx,al
 103210f:	(bad)  
 1032110:	push   esp
 1032112:	in     eax,dx
 1032113:	(bad)  
 1032114:	push   esp
 1032116:	in     eax,dx
 1032117:	(bad)  
 1032118:	push   ebx
 103211a:	in     al,dx
 103211b:	(bad)  
 103211c:	push   ebx
 103211e:	jmp    0x103211f
 1032120:	push   edx
 1032122:	jmp    0xffff:0xeaf2ffff
 1032129:	icebp  
 103212a:	jmp    0xe9f5212e
 103212f:	(bad)  
 1032130:	push   eax
 1032132:	out    0xff,eax
 1032134:	push   eax
 1032136:	out    0xff,al
 1032138:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1032174:	stos   DWORD PTR es:[edi],eax
 1032175:	xchg   esi,eax
 1032176:	test   edi,edi
 1032178:	(bad)  
 1032179:	(bad)  
 103217a:	(bad)  
 103217b:	(bad)  
 103217c:	(bad)  
 103217d:	(bad)  
 103217e:	(bad)  
 103217f:	(bad)  
 1032180:	(bad)  
 1032181:	(bad)  
 1032182:	(bad)  
 1032183:	(bad)  
 1032184:	(bad)  
 1032185:	(bad)  
 1032186:	(bad)  
 1032187:	(bad)  
 1032188:	(bad)  
 1032189:	(bad)  
 103218a:	(bad)  
 103218b:	(bad)  
 103218c:	(bad)  
 103218d:	(bad)  
 103218e:	(bad)  
 103218f:	(bad)  
 1032190:	(bad)  
 1032191:	(bad)  
 1032192:	(bad)  
 1032193:	(bad)  
 1032194:	(bad)  
 1032195:	(bad)  
 1032196:	(bad)  
 1032197:	(bad)  
 1032198:	(bad)  
 1032199:	(bad)  
 103219a:	(bad)  
 103219b:	(bad)  
 103219c:	(bad)  
 103219d:	(bad)  
 103219e:	(bad)  
 103219f:	(bad)  
 10321a0:	(bad)  
 10321a1:	(bad)  
 10321a2:	(bad)  
 10321a3:	(bad)  
 10321a4:	(bad)  
 10321a5:	(bad)  
 10321a6:	(bad)  
 10321a7:	(bad)  
 10321a8:	(bad)  
 10321a9:	(bad)  
 10321aa:	(bad)  
 10321ab:	(bad)  
 10321ac:	(bad)  
 10321ad:	(bad)  
 10321ae:	std    
 10321af:	(bad)  
 10321b0:	(bad)  
 10321b1:	(bad)  
 10321b2:	std    
 10321b3:	(bad)  
 10321b4:	(bad)  
 10321b5:	(bad)  
 10321b6:	std    
 10321b7:	(bad)  
 10321b8:	(bad)  
 10321b9:	std    
 10321ba:	cld    
 10321bb:	(bad)  
 10321bc:	jle    0x1032168
 10321be:	mov    edx,0xfef2c5ff
 10321c3:	call   DWORD PTR [esi+0x5efffbe7]
 10321c9:	(bad)  
 10321cb:	jmp    DWORD PTR [esi-0x23]
 10321ce:	cli    
 10321cf:	jmp    FWORD PTR [esi-0x21]
 10321d2:	cli    
 10321d3:	jmp    FWORD PTR [ebp-0x21]
 10321d6:	cli    
 10321d7:	jmp    FWORD PTR [edi+ebx*8-0x6]
 10321db:	jmp    FWORD PTR [edi+ebx*8-0x6]
 10321df:	jmp    FWORD PTR [ebp-0x21]
 10321e2:	cli    
 10321e3:	jmp    FWORD PTR [ebp-0x21]
 10321e6:	cli    
 10321e7:	jmp    FWORD PTR [esi-0x20]
 10321ea:	sti    
 10321eb:	push   DWORD PTR [ecx-0x1e]
 10321ee:	std    
 10321ef:	jmp    DWORD PTR [ebx-0x39]
 10321f2:	in     eax,0xff
 10321f4:	push   esi
 10321f5:	xchg   ecx,eax
 10321f6:	scas   al,BYTE PTR es:[edi]
 10321f7:	jmp    DWORD PTR [edi-0x2b004d52]
 10321fd:	int    0xc9
 10321ff:	(bad)  
 1032200:	jmp    0x10321e6
 1032202:	fdivp  st(7),st
 1032204:	cli    
 1032205:	icebp  
 1032206:	jmp    0x1032207
 1032208:	push   esi
 103220a:	lock (bad) 
 103220c:	push   ebp
 103220e:	out    dx,eax
 103220f:	(bad)  
 1032210:	push   ebp
 1032212:	out    dx,al
 1032213:	(bad)  
 1032214:	push   ebp
 1032216:	in     eax,dx
 1032217:	(bad)  
 1032218:	push   esp
 103221a:	in     eax,dx
 103221b:	(bad)  
 103221c:	push   ebx
 103221e:	in     al,dx
 103221f:	(bad)  
 1032220:	push   ebx
 1032222:	in     al,dx
 1032223:	(bad)  
 1032224:	push   edx
 1032226:	jmp    0x1032227
 1032228:	push   edx
 103222a:	jmp    0xffff:0xe9f1ffff
 1032231:	icebp  
 1032232:	jmp    0xe8f52236
 1032237:	inc    DWORD PTR [eax+0xff596d]
	...
 1032269:	add    BYTE PTR [eax],al
 103226b:	add    BYTE PTR [ebp-0x72005250],dh
 1032271:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1032277:	dec    DWORD PTR [ebp-0x72007e7b]
 103227d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1032283:	(bad)  
 1032284:	(bad)  
 1032285:	(bad)  
 1032286:	(bad)  
 1032287:	(bad)  
 1032288:	(bad)  
 1032289:	(bad)  
 103228a:	(bad)  
 103228b:	(bad)  
 103228c:	(bad)  
 103228d:	(bad)  
 103228e:	(bad)  
 103228f:	(bad)  
 1032290:	(bad)  
 1032291:	(bad)  
 1032292:	(bad)  
 1032293:	(bad)  
 1032294:	(bad)  
 1032295:	(bad)  
 1032296:	(bad)  
 1032297:	(bad)  
 1032298:	(bad)  
 1032299:	(bad)  
 103229a:	(bad)  
 103229b:	(bad)  
 103229c:	(bad)  
 103229d:	(bad)  
 103229e:	(bad)  
 103229f:	(bad)  
 10322a0:	(bad)  
 10322a1:	(bad)  
 10322a2:	(bad)  
 10322a3:	(bad)  
 10322a4:	(bad)  
 10322a5:	(bad)  
 10322a6:	(bad)  
 10322a7:	(bad)  
 10322a8:	(bad)  
 10322a9:	(bad)  
 10322aa:	(bad)  
 10322ab:	(bad)  
 10322ac:	(bad)  
 10322ad:	(bad)  
 10322ae:	std    
 10322af:	(bad)  
 10322b0:	(bad)  
 10322b1:	(bad)  
 10322b2:	std    
 10322b3:	(bad)  
 10322b4:	(bad)  
 10322b5:	(bad)  
 10322b6:	std    
 10322b7:	(bad)  
 10322b8:	(bad)  
 10322b9:	std    
 10322ba:	std    
 10322bb:	(bad)  
 10322bc:	mov    esi,0x7effd8d1
 10322c1:	test   al,0xbb
 10322c3:	call   ebx
 10322c5:	idiv   bh
 10322c7:	jmp    DWORD PTR [ecx-0x25]
 10322ca:	clc    
 10322cb:	call   FWORD PTR [esi-0x26]
 10322ce:	clc    
 10322cf:	jmp    DWORD PTR [ebp-0x24]
 10322d2:	stc    
 10322d3:	jmp    FWORD PTR [ebx-0x22]
 10322d6:	cli    
 10322d7:	jmp    FWORD PTR [ecx-0x22]
 10322da:	stc    
 10322db:	jmp    FWORD PTR [ecx-0x22]
 10322de:	stc    
 10322df:	jmp    FWORD PTR [edx-0x22]
 10322e2:	stc    
 10322e3:	jmp    FWORD PTR [edx-0x22]
 10322e6:	stc    
 10322e7:	jmp    FWORD PTR [edx-0x22]
 10322ea:	cli    
 10322eb:	jmp    FWORD PTR [edx-0x21]
 10322ee:	sti    
 10322ef:	jmp    FWORD PTR [esi-0x18]
 10322f2:	(bad)  
 10322f3:	jmp    DWORD PTR [ebx-0x39]
 10322f6:	in     eax,0xff
 10322f8:	pop    ecx
 10322f9:	mov    gs,WORD PTR [ecx-0x46444201]
 10322ff:	call   esi
 1032301:	iret   
 1032302:	retf   
 1032303:	(bad)  
 1032304:	in     eax,dx
 1032305:	out    0xe0,al
 1032307:	(bad)  
 1032308:	sti    
 1032309:	repnz in eax,dx
 103230b:	(bad)  
 103230c:	push   esi
 103230e:	lock (bad) 
 1032310:	push   esi
 1032312:	out    dx,eax
 1032313:	(bad)  
 1032314:	push   esp
 1032316:	out    dx,al
 1032317:	(bad)  
 1032318:	push   esp
 103231a:	in     eax,dx
 103231b:	(bad)  
 103231c:	push   esp
 103231e:	in     eax,dx
 103231f:	(bad)  
 1032320:	push   ebx
 1032322:	in     al,dx
 1032323:	(bad)  
 1032324:	push   ebx
 1032326:	jmp    0x1032327
 1032328:	push   ebx
 103232a:	jmp    0x103232b
 103232c:	push   ecx
 103232e:	jmp    0xffff:0xe9f2ffff
 1032335:	icebp  
 1032336:	call   0x5a70a43a
 103233b:	inc    DWORD PTR [eax]
	...
 1032369:	add    BYTE PTR [eax],al
 103236b:	add    BYTE PTR [ebp+0x62],ch
 103236e:	pop    ebx
 103236f:	dec    ecx
 1032371:	mov    ah,0xff
 1032374:	leave  
 1032375:	mov    ah,0xff
 1032378:	(bad)  
 1032379:	(bad)  
 103237a:	(bad)  
 103237b:	jmp    esp
 103237d:	jecxz  0x1032361
 103237f:	jmp    FWORD PTR [ebp+0x62]
 1032382:	pop    ebx
 1032383:	(bad)  
 1032384:	(bad)  
 1032385:	(bad)  
 1032386:	(bad)  
 1032387:	(bad)  
 1032388:	(bad)  
 1032389:	(bad)  
 103238a:	(bad)  
 103238b:	(bad)  
 103238c:	(bad)  
 103238d:	(bad)  
 103238e:	(bad)  
 103238f:	(bad)  
 1032390:	(bad)  
 1032391:	(bad)  
 1032392:	(bad)  
 1032393:	(bad)  
 1032394:	(bad)  
 1032395:	(bad)  
 1032396:	(bad)  
 1032397:	(bad)  
 1032398:	(bad)  
 1032399:	(bad)  
 103239a:	(bad)  
 103239b:	(bad)  
 103239c:	(bad)  
 103239d:	(bad)  
 103239e:	(bad)  
 103239f:	(bad)  
 10323a0:	(bad)  
 10323a1:	(bad)  
 10323a2:	(bad)  
 10323a3:	(bad)  
 10323a4:	(bad)  
 10323a5:	(bad)  
 10323a6:	(bad)  
 10323a7:	(bad)  
 10323a8:	(bad)  
 10323a9:	(bad)  
 10323aa:	(bad)  
 10323ab:	(bad)  
 10323ac:	(bad)  
 10323ad:	(bad)  
 10323ae:	(bad)  
 10323af:	(bad)  
 10323b0:	(bad)  
 10323b1:	(bad)  
 10323b2:	(bad)  
 10323b3:	(bad)  
 10323b4:	(bad)  
 10323b5:	(bad)  
 10323b6:	(bad)  
 10323b7:	(bad)  
 10323b8:	(bad)  
 10323b9:	std    
 10323ba:	std    
 10323bb:	(bad)  
 10323bc:	stc    
 10323bd:	cli    
 10323be:	cli    
 10323bf:	call   DWORD PTR [ecx+edi*4-0xc36003a]
 10323c6:	(bad)  
 10323c7:	dec    DWORD PTR [edi+0x5efffbe6]
 10323cd:	(bad)  
 10323cf:	call   DWORD PTR [edi-0x27]
 10323d2:	idiv   edi
 10323d4:	addr16 (bad) 
 10323d7:	jmp    DWORD PTR [esi-0x24]
 10323da:	stc    
 10323db:	jmp    DWORD PTR [esi-0x23]
 10323de:	stc    
 10323df:	jmp    DWORD PTR [esi-0x24]
 10323e2:	stc    
 10323e3:	jmp    DWORD PTR [esi-0x24]
 10323e6:	stc    
 10323e7:	jmp    DWORD PTR [edi-0x24]
 10323ea:	cli    
 10323eb:	jmp    DWORD PTR [esi-0x24]
 10323ee:	cli    
 10323ef:	jmp    DWORD PTR [esi-0x20]
 10323f2:	cld    
 10323f3:	jmp    FWORD PTR [edx-0x1c]
 10323f6:	(bad)  
 10323f7:	jmp    DWORD PTR [ebx-0x39]
 10323fa:	in     eax,0xff
 10323fc:	pop    ebx
 10323fd:	mov    WORD PTR [edi-0x44444201],fs
 1032403:	call   edi
 1032405:	ror    ah,1
 1032407:	(bad)  
 1032408:	in     eax,dx
 1032409:	out    0xe1,al
 103240b:	(bad)  
 103240c:	sti    
 103240d:	repnz in eax,dx
 103240f:	(bad)  
 1032410:	push   ebp
 1032412:	lock (bad) 
 1032414:	push   ebp
 1032416:	out    dx,eax
 1032417:	(bad)  
 1032418:	push   ebp
 103241a:	out    dx,al
 103241b:	(bad)  
 103241c:	push   esp
 103241e:	out    dx,al
 103241f:	(bad)  
 1032420:	push   esp
 1032422:	in     eax,dx
 1032423:	(bad)  
 1032424:	push   ebx
 1032426:	in     eax,dx
 1032427:	(bad)  
 1032428:	push   edx
 103242a:	jmp    0x103242b
 103242c:	push   ebx
 103242e:	jmp    0x103242f
 1032430:	push   edx
 1032432:	jmp    0x80ff:0xe9f2ffff
 1032439:	ins    DWORD PTR es:[edi],dx
 103243a:	pop    ecx
 103243b:	inc    DWORD PTR [eax]
	...
 1032469:	add    BYTE PTR [eax],al
 103246b:	add    dh,ch
 103246d:	in     eax,dx
 103246e:	in     al,dx
 103246f:	jmp    ebp
 1032471:	jecxz  0x1032455
 1032473:	jmp    ebp
 1032475:	jecxz  0x1032459
 1032477:	jmp    ebp
 1032479:	jecxz  0x103245d
 103247b:	jmp    ebp
 103247d:	jecxz  0x1032461
 103247f:	(bad)  
 1032480:	out    dx,al
 1032481:	in     eax,dx
 1032482:	in     al,dx
 1032483:	(bad)  
 1032484:	(bad)  
 1032485:	(bad)  
 1032486:	(bad)  
 1032487:	(bad)  
 1032488:	(bad)  
 1032489:	(bad)  
 103248a:	(bad)  
 103248b:	(bad)  
 103248c:	(bad)  
 103248d:	(bad)  
 103248e:	(bad)  
 103248f:	(bad)  
 1032490:	(bad)  
 1032491:	(bad)  
 1032492:	(bad)  
 1032493:	(bad)  
 1032494:	(bad)  
 1032495:	(bad)  
 1032496:	(bad)  
 1032497:	(bad)  
 1032498:	(bad)  
 1032499:	(bad)  
 103249a:	(bad)  
 103249b:	(bad)  
 103249c:	(bad)  
 103249d:	(bad)  
 103249e:	(bad)  
 103249f:	(bad)  
 10324a0:	(bad)  
 10324a1:	(bad)  
 10324a2:	(bad)  
 10324a3:	(bad)  
 10324a4:	(bad)  
 10324a5:	(bad)  
 10324a6:	(bad)  
 10324a7:	(bad)  
 10324a8:	(bad)  
 10324a9:	(bad)  
 10324aa:	(bad)  
 10324ab:	(bad)  
 10324ac:	(bad)  
 10324ad:	(bad)  
 10324ae:	(bad)  
 10324af:	(bad)  
 10324b0:	(bad)  
 10324b1:	(bad)  
 10324b2:	(bad)  
 10324b3:	(bad)  
 10324b4:	(bad)  
 10324b5:	(bad)  
 10324b6:	(bad)  
 10324b7:	(bad)  
 10324b8:	(bad)  
 10324b9:	(bad)  
 10324ba:	std    
 10324bb:	(bad)  
 10324bc:	(bad)  
 10324bd:	(bad)  
 10324be:	std    
 10324bf:	dec    edi
 10324c1:	fsubrp st(3),st
 10324c3:	dec    DWORD PTR [eax+edi*4-0xa2e0038]
 10324ca:	(bad)  
 10324cb:	call   FWORD PTR [edi-0x26]
 10324ce:	clc    
 10324cf:	call   FWORD PTR [esi-0x26]
 10324d2:	clc    
 10324d3:	call   FWORD PTR [ebp-0x26]
 10324d6:	stc    
 10324d7:	jmp    DWORD PTR [ebx-0x25]
 10324da:	stc    
 10324db:	jmp    DWORD PTR [ebx-0x25]
 10324de:	stc    
 10324df:	jmp    DWORD PTR [ebx-0x25]
 10324e2:	stc    
 10324e3:	jmp    DWORD PTR [ebx-0x25]
 10324e6:	stc    
 10324e7:	jmp    DWORD PTR [ebx-0x25]
 10324ea:	stc    
 10324eb:	jmp    DWORD PTR [ebx-0x25]
 10324ee:	stc    
 10324ef:	jmp    DWORD PTR [ebx-0x25]
 10324f2:	stc    
 10324f3:	jmp    DWORD PTR [ebp-0x1d]
 10324f6:	(bad)  
 10324f7:	jmp    DWORD PTR [ebp+ebx*8-0x5]
 10324fb:	jmp    DWORD PTR [ecx-0x40]
 10324fe:	fdivp  st(7),st
 1032500:	popa   
 1032501:	mov    fs,WORD PTR [esi-0x42403e01]
 1032507:	call   edi
 1032509:	ror    ah,1
 103250b:	(bad)  
 103250c:	in     al,dx
 103250d:	in     al,0xdf
 103250f:	(bad)  
 1032510:	cli    
 1032511:	icebp  
 1032512:	in     al,dx
 1032513:	(bad)  
 1032514:	push   esi
 1032516:	lock (bad) 
 1032518:	push   esi
 103251a:	out    dx,eax
 103251b:	(bad)  
 103251c:	push   esp
 103251e:	out    dx,eax
 103251f:	(bad)  
 1032520:	push   esp
 1032522:	out    dx,al
 1032523:	(bad)  
 1032524:	push   esp
 1032526:	in     eax,dx
 1032527:	(bad)  
 1032528:	push   ebx
 103252a:	in     eax,dx
 103252b:	(bad)  
 103252c:	push   ebx
 103252e:	in     al,dx
 103252f:	(bad)  
 1032530:	push   edx
 1032532:	jmp    0x1032533
 1032534:	push   edx
 1032536:	jmp    0xff:0x596d80ff
	...
 1032571:	add    BYTE PTR [eax],al
 1032573:	add    BYTE PTR [ecx-0x7465],dh
 1032579:	(bad)  
 103257a:	(bad)  
 103257b:	(bad)  
 103257c:	(bad)  
 103257d:	(bad)  
 103257e:	(bad)  
 103257f:	(bad)  
 1032580:	(bad)  
 1032581:	(bad)  
 1032582:	(bad)  
 1032583:	(bad)  
 1032584:	(bad)  
 1032585:	(bad)  
 1032586:	(bad)  
 1032587:	(bad)  
 1032588:	(bad)  
 1032589:	(bad)  
 103258a:	(bad)  
 103258b:	(bad)  
 103258c:	(bad)  
 103258d:	(bad)  
 103258e:	(bad)  
 103258f:	(bad)  
 1032590:	(bad)  
 1032591:	(bad)  
 1032592:	(bad)  
 1032593:	(bad)  
 1032594:	(bad)  
 1032595:	(bad)  
 1032596:	(bad)  
 1032597:	(bad)  
 1032598:	(bad)  
 1032599:	(bad)  
 103259a:	(bad)  
 103259b:	(bad)  
 103259c:	(bad)  
 103259d:	(bad)  
 103259e:	(bad)  
 103259f:	(bad)  
 10325a0:	(bad)  
 10325a1:	(bad)  
 10325a2:	(bad)  
 10325a3:	(bad)  
 10325a4:	(bad)  
 10325a5:	(bad)  
 10325a6:	(bad)  
 10325a7:	(bad)  
 10325a8:	(bad)  
 10325a9:	(bad)  
 10325aa:	(bad)  
 10325ab:	(bad)  
 10325ac:	(bad)  
 10325ad:	(bad)  
 10325ae:	(bad)  
 10325af:	(bad)  
 10325b0:	(bad)  
 10325b1:	(bad)  
 10325b2:	(bad)  
 10325b3:	(bad)  
 10325b4:	(bad)  
 10325b5:	(bad)  
 10325b6:	(bad)  
 10325b7:	(bad)  
 10325b8:	(bad)  
 10325b9:	(bad)  
 10325ba:	std    
 10325bb:	(bad)  
 10325bc:	(bad)  
 10325bd:	(bad)  
 10325be:	std    
 10325bf:	push   ecx
 10325c1:	cmc    
 10325c2:	idiv   bh
 10325c4:	cdq    
 10325c5:	mov    esp,0xf4ccffc9
 10325ca:	(bad)  
 10325cb:	dec    DWORD PTR [eax+0x61fffae4]
 10325d1:	(bad)  
 10325d3:	call   DWORD PTR [ebx-0x29]
 10325d6:	cli    
 10325d7:	jmp    DWORD PTR [ecx-0x26]
 10325da:	cli    
 10325db:	jmp    DWORD PTR [ecx-0x25]
 10325de:	cli    
 10325df:	jmp    DWORD PTR [eax-0x25]
 10325e2:	clc    
 10325e3:	jmp    DWORD PTR [eax-0x25]
 10325e6:	stc    
 10325e7:	jmp    DWORD PTR [eax-0x25]
 10325ea:	cli    
 10325eb:	jmp    DWORD PTR [ecx-0x24]
 10325ee:	clc    
 10325ef:	jmp    DWORD PTR [ecx-0x25]
 10325f2:	cli    
 10325f3:	jmp    DWORD PTR [eax-0x25]
 10325f6:	cli    
 10325f7:	jmp    DWORD PTR [edx-0x21]
 10325fa:	(bad)  
 10325fb:	jmp    DWORD PTR [edx-0x21]
 10325fe:	(bad)  
 10325ff:	call   FWORD PTR [ebp+edi*4-0x26]
 1032603:	jmp    DWORD PTR [ebp-0x71]
 1032606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1032607:	(bad)  
 1032608:	mov    ebx,0xd8ffbabc
 103260d:	ror    ebp,1
 103260f:	push   ebx
 1032611:	jmp    0xfff1:0xf6ffffe7
 1032618:	push   esi
 103261a:	lock (bad) 
 103261c:	push   ebp
 103261e:	lock (bad) 
 1032620:	push   esp
 1032622:	out    dx,eax
 1032623:	(bad)  
 1032624:	push   ebp
 1032626:	out    dx,al
 1032627:	(bad)  
 1032628:	push   esp
 103262a:	in     eax,dx
 103262b:	(bad)  
 103262c:	push   ebx
 103262e:	in     al,dx
 103262f:	(bad)  
 1032630:	push   ebx
 1032632:	in     al,dx
 1032633:	(bad)  
 1032634:	push   edx
 1032636:	jmp    0x1032637
 1032638:	sub    BYTE PTR [ebp+0x59],0xff
	...
 1032674:	mov    dl,0x9c
 1032676:	mov    edi,?
 1032678:	(bad)  
 1032679:	(bad)  
 103267a:	(bad)  
 103267b:	(bad)  
 103267c:	(bad)  
 103267d:	(bad)  
 103267e:	(bad)  
 103267f:	(bad)  
 1032680:	(bad)  
 1032681:	(bad)  
 1032682:	(bad)  
 1032683:	(bad)  
 1032684:	(bad)  
 1032685:	(bad)  
 1032686:	(bad)  
 1032687:	(bad)  
 1032688:	(bad)  
 1032689:	(bad)  
 103268a:	(bad)  
 103268b:	(bad)  
 103268c:	(bad)  
 103268d:	(bad)  
 103268e:	(bad)  
 103268f:	(bad)  
 1032690:	(bad)  
 1032691:	(bad)  
 1032692:	(bad)  
 1032693:	(bad)  
 1032694:	(bad)  
 1032695:	(bad)  
 1032696:	(bad)  
 1032697:	(bad)  
 1032698:	(bad)  
 1032699:	(bad)  
 103269a:	(bad)  
 103269b:	(bad)  
 103269c:	(bad)  
 103269d:	(bad)  
 103269e:	(bad)  
 103269f:	(bad)  
 10326a0:	(bad)  
 10326a1:	(bad)  
 10326a2:	(bad)  
 10326a3:	(bad)  
 10326a4:	(bad)  
 10326a5:	(bad)  
 10326a6:	(bad)  
 10326a7:	(bad)  
 10326a8:	(bad)  
 10326a9:	(bad)  
 10326aa:	(bad)  
 10326ab:	(bad)  
 10326ac:	(bad)  
 10326ad:	(bad)  
 10326ae:	(bad)  
 10326af:	(bad)  
 10326b0:	(bad)  
 10326b1:	(bad)  
 10326b2:	(bad)  
 10326b3:	(bad)  
 10326b4:	(bad)  
 10326b5:	(bad)  
 10326b6:	(bad)  
 10326b7:	(bad)  
 10326b8:	(bad)  
 10326b9:	(bad)  
 10326ba:	(bad)  
 10326bb:	(bad)  
 10326bc:	(bad)  
 10326bd:	(bad)  
 10326be:	(bad)  
 10326bf:	(bad)  
 10326c0:	(bad)  
 10326c1:	(bad)  
 10326c2:	std    
 10326c3:	jmp    edx
 10326c5:	jmp    0x10326b5
 10326c7:	dec    DWORD PTR [edi+edi*4-0xb310032]
 10326ce:	(bad)  
 10326cf:	call   DWORD PTR [esi-0x25]
 10326d2:	cld    
 10326d3:	call   DWORD PTR [esi-0x25]
 10326d6:	cld    
 10326d7:	call   FWORD PTR [esi-0x23]
 10326da:	cld    
 10326db:	call   FWORD PTR [edi-0x22]
 10326de:	cld    
 10326df:	call   FWORD PTR [edi-0x21]
 10326e2:	cld    
 10326e3:	call   FWORD PTR [edi-0x21]
 10326e6:	cld    
 10326e7:	call   FWORD PTR [edi-0x21]
 10326ea:	cld    
 10326eb:	jmp    DWORD PTR [eax-0x20]
 10326ee:	cld    
 10326ef:	jmp    DWORD PTR [eax-0x20]
 10326f2:	cld    
 10326f3:	jmp    DWORD PTR [eax-0x20]
 10326f6:	cld    
 10326f7:	jmp    DWORD PTR [ecx-0x1f]
 10326fa:	cld    
 10326fb:	jmp    DWORD PTR [ecx-0x1e]
 10326fe:	cld    
 10326ff:	jmp    DWORD PTR [ecx-0x1d]
 1032702:	cld    
 1032703:	call   FWORD PTR [edx-0x44]
 1032706:	(bad)  
 1032708:	push   ecx
 1032709:	mov    WORD PTR [edi-0x35322b01],gs
 103270f:	push   ecx
 1032711:	jmp    0xf90326fc
 1032716:	repnz (bad) 
 1032718:	push   edi
 103271a:	icebp  
 103271b:	(bad)  
 103271c:	push   esi
 103271e:	lock (bad) 
 1032720:	push   ebp
 1032722:	out    dx,eax
 1032723:	(bad)  
 1032724:	push   esp
 1032726:	out    dx,eax
 1032727:	(bad)  
 1032728:	push   ebp
 103272a:	out    dx,al
 103272b:	(bad)  
 103272c:	push   esp
 103272e:	in     eax,dx
 103272f:	(bad)  
 1032730:	push   ebx
 1032732:	in     eax,dx
 1032733:	(bad)  
 1032734:	push   ebx
 1032736:	in     al,dx
 1032737:	inc    DWORD PTR [eax+0xff596d]
	...
 1032769:	add    BYTE PTR [eax],al
 103276b:	add    BYTE PTR [ebp-0x72005250],dh
 1032771:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1032777:	dec    DWORD PTR [ebp-0x72007e7b]
 103277d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1032783:	(bad)  
 1032784:	(bad)  
 1032785:	(bad)  
 1032786:	(bad)  
 1032787:	(bad)  
 1032788:	(bad)  
 1032789:	(bad)  
 103278a:	(bad)  
 103278b:	(bad)  
 103278c:	(bad)  
 103278d:	(bad)  
 103278e:	(bad)  
 103278f:	(bad)  
 1032790:	(bad)  
 1032791:	(bad)  
 1032792:	(bad)  
 1032793:	(bad)  
 1032794:	(bad)  
 1032795:	(bad)  
 1032796:	(bad)  
 1032797:	(bad)  
 1032798:	(bad)  
 1032799:	(bad)  
 103279a:	(bad)  
 103279b:	(bad)  
 103279c:	(bad)  
 103279d:	(bad)  
 103279e:	(bad)  
 103279f:	(bad)  
 10327a0:	(bad)  
 10327a1:	(bad)  
 10327a2:	(bad)  
 10327a3:	(bad)  
 10327a4:	(bad)  
 10327a5:	(bad)  
 10327a6:	(bad)  
 10327a7:	(bad)  
 10327a8:	(bad)  
 10327a9:	(bad)  
 10327aa:	(bad)  
 10327ab:	(bad)  
 10327ac:	(bad)  
 10327ad:	(bad)  
 10327ae:	(bad)  
 10327af:	(bad)  
 10327b0:	(bad)  
 10327b1:	(bad)  
 10327b2:	(bad)  
 10327b3:	(bad)  
 10327b4:	(bad)  
 10327b5:	(bad)  
 10327b6:	(bad)  
 10327b7:	(bad)  
 10327b8:	(bad)  
 10327b9:	(bad)  
 10327ba:	(bad)  
 10327bb:	(bad)  
 10327bc:	(bad)  
 10327bd:	(bad)  
 10327be:	(bad)  
 10327bf:	(bad)  
 10327c0:	(bad)  
 10327c1:	(bad)  
 10327c2:	(bad)  
 10327c3:	(bad)  
 10327c4:	cld    
 10327c5:	std    
 10327c6:	std    
 10327c7:	call   DWORD PTR [ebx-0x31003a48]
 10327cd:	cmc    
 10327ce:	(bad)  
 10327cf:	jmp    DWORD PTR [ebx-0x1e]
 10327d2:	(bad)  
 10327d3:	dec    DWORD PTR [edx-0x23]
 10327d6:	(bad)  
 10327d7:	dec    DWORD PTR [edx-0x23]
 10327da:	(bad)  
 10327db:	call   FWORD PTR [ebx-0x1f]
 10327de:	(bad)  
 10327df:	call   FWORD PTR [edx+eiz*8-0x1]
 10327e3:	call   FWORD PTR [esp+eiz*8-0x1]
 10327e7:	call   FWORD PTR [esp+eiz*8-0x1]
 10327eb:	call   FWORD PTR [ebp-0x1c]
 10327ee:	(bad)  
 10327ef:	call   FWORD PTR [esi-0x1a]
 10327f2:	(bad)  
 10327f3:	call   FWORD PTR [esi-0x1a]
 10327f6:	(bad)  
 10327f7:	call   FWORD PTR [edi-0x1a]
 10327fa:	(bad)  
 10327fb:	jmp    DWORD PTR [eax-0x18]
 10327fe:	(bad)  
 10327ff:	jmp    DWORD PTR [ecx-0x16]
 1032802:	(bad)  
 1032803:	jmp    DWORD PTR [ecx-0x13]
 1032806:	(bad)  
 1032807:	call   FWORD PTR [eax-0x76]
 103280a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 103280b:	jmp    esp
 103280d:	fcompp 
 103280f:	push   edi
 1032811:	lock jmp 0x1032813
 1032814:	push   edi
 1032816:	repnz (bad) 
 1032818:	push   esi
 103281a:	repnz (bad) 
 103281c:	push   edi
 103281e:	icebp  
 103281f:	(bad)  
 1032820:	push   esi
 1032822:	lock (bad) 
 1032824:	push   esi
 1032826:	out    dx,eax
 1032827:	(bad)  
 1032828:	push   ebp
 103282a:	out    dx,eax
 103282b:	(bad)  
 103282c:	push   esp
 103282e:	out    dx,al
 103282f:	(bad)  
 1032830:	push   esp
 1032832:	in     eax,dx
 1032833:	(bad)  
 1032834:	push   esp
 1032836:	in     al,dx
 1032837:	inc    DWORD PTR [eax+0xff596d]
	...
 1032869:	add    BYTE PTR [eax],al
 103286b:	add    BYTE PTR [ebp+0x62],ch
 103286e:	pop    ebx
 103286f:	dec    ecx
 1032871:	mov    ah,0xff
 1032874:	leave  
 1032875:	mov    ah,0xff
 1032878:	(bad)  
 1032879:	(bad)  
 103287a:	(bad)  
 103287b:	jmp    esp
 103287d:	jecxz  0x1032861
 103287f:	jmp    FWORD PTR [ebp+0x62]
 1032882:	pop    ebx
 1032883:	(bad)  
 1032884:	(bad)  
 1032885:	(bad)  
 1032886:	(bad)  
 1032887:	(bad)  
 1032888:	(bad)  
 1032889:	(bad)  
 103288a:	(bad)  
 103288b:	(bad)  
 103288c:	(bad)  
 103288d:	(bad)  
 103288e:	(bad)  
 103288f:	(bad)  
 1032890:	(bad)  
 1032891:	(bad)  
 1032892:	(bad)  
 1032893:	(bad)  
 1032894:	(bad)  
 1032895:	(bad)  
 1032896:	(bad)  
 1032897:	(bad)  
 1032898:	(bad)  
 1032899:	(bad)  
 103289a:	(bad)  
 103289b:	(bad)  
 103289c:	(bad)  
 103289d:	(bad)  
 103289e:	(bad)  
 103289f:	(bad)  
 10328a0:	(bad)  
 10328a1:	(bad)  
 10328a2:	(bad)  
 10328a3:	(bad)  
 10328a4:	(bad)  
 10328a5:	(bad)  
 10328a6:	(bad)  
 10328a7:	(bad)  
 10328a8:	(bad)  
 10328a9:	(bad)  
 10328aa:	(bad)  
 10328ab:	(bad)  
 10328ac:	(bad)  
 10328ad:	(bad)  
 10328ae:	(bad)  
 10328af:	(bad)  
 10328b0:	(bad)  
 10328b1:	(bad)  
 10328b2:	(bad)  
 10328b3:	(bad)  
 10328b4:	(bad)  
 10328b5:	(bad)  
 10328b6:	(bad)  
 10328b7:	(bad)  
 10328b8:	(bad)  
 10328b9:	(bad)  
 10328ba:	(bad)  
 10328bb:	(bad)  
 10328bc:	(bad)  
 10328bd:	(bad)  
 10328be:	(bad)  
 10328bf:	(bad)  
 10328c0:	(bad)  
 10328c1:	(bad)  
 10328c2:	(bad)  
 10328c3:	(bad)  
 10328c4:	sti    
 10328c5:	std    
 10328c6:	cld    
 10328c7:	inc    ebx
 10328c9:	fsub   st,st(0)
 10328cb:	jmp    FWORD PTR [edi-0x59]
 10328ce:	mov    ebx,0xb7a46cff
 10328d3:	jmp    FWORD PTR [ebx-0x5e]
 10328d6:	mov    ch,0xff
 10328d8:	imul   esp,DWORD PTR [eax-0x6396004d],0x9966ffb1
 10328e2:	scas   al,BYTE PTR es:[edi]
 10328e3:	jmp    DWORD PTR [ecx-0x6b]
 10328e6:	lods   al,BYTE PTR ds:[esi]
 10328e7:	call   FWORD PTR [esi-0x6f]
 10328ea:	stos   BYTE PTR es:[edi],al
 10328eb:	call   FWORD PTR [edi+ecx*4-0x58]
 10328ef:	call   FWORD PTR [edx-0x73]
 10328f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10328f3:	call   DWORD PTR [edi-0x76]
 10328f6:	mov    ds:0xa08753ff,eax
 10328fb:	call   DWORD PTR [eax-0x7a]
 10328fe:	sahf   
 10328ff:	dec    DWORD PTR [esi-0x7e]
 1032902:	fwait
 1032903:	jmp    FWORD PTR [ecx-0x6c]
 1032906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1032907:	call   DWORD PTR [ebp-0x8004250]
 103290d:	lock in al,dx
 103290f:	(bad)  
 1032910:	std    
 1032911:	div    cl
 1032913:	(bad)  
 1032914:	(bad)  
 1032915:	clc    
 1032916:	hlt    
 1032917:	(bad)  
 1032918:	(bad)  
 1032919:	clc    
 103291a:	repnz (bad) 
 103291c:	push   esi
 103291e:	repnz (bad) 
 1032920:	push   esi
 1032922:	icebp  
 1032923:	(bad)  
 1032924:	push   esi
 1032926:	lock (bad) 
 1032928:	push   ebp
 103292a:	lock (bad) 
 103292c:	push   ebp
 103292e:	out    dx,eax
 103292f:	(bad)  
 1032930:	push   esp
 1032932:	out    dx,al
 1032933:	(bad)  
 1032934:	push   esp
 1032936:	in     eax,dx
 1032937:	inc    DWORD PTR [eax+0xff596d]
	...
 1032969:	add    BYTE PTR [eax],al
 103296b:	add    dh,ch
 103296d:	in     eax,dx
 103296e:	in     al,dx
 103296f:	jmp    ebp
 1032971:	jecxz  0x1032955
 1032973:	jmp    ebp
 1032975:	jecxz  0x1032959
 1032977:	jmp    ebp
 1032979:	jecxz  0x103295d
 103297b:	jmp    ebp
 103297d:	jecxz  0x1032961
 103297f:	(bad)  
 1032980:	out    dx,al
 1032981:	in     eax,dx
 1032982:	in     al,dx
 1032983:	(bad)  
 1032984:	(bad)  
 1032985:	(bad)  
 1032986:	(bad)  
 1032987:	(bad)  
 1032988:	(bad)  
 1032989:	(bad)  
 103298a:	(bad)  
 103298b:	(bad)  
 103298c:	(bad)  
 103298d:	(bad)  
 103298e:	(bad)  
 103298f:	(bad)  
 1032990:	(bad)  
 1032991:	(bad)  
 1032992:	(bad)  
 1032993:	(bad)  
 1032994:	(bad)  
 1032995:	(bad)  
 1032996:	(bad)  
 1032997:	(bad)  
 1032998:	(bad)  
 1032999:	(bad)  
 103299a:	(bad)  
 103299b:	(bad)  
 103299c:	(bad)  
 103299d:	(bad)  
 103299e:	(bad)  
 103299f:	(bad)  
 10329a0:	(bad)  
 10329a1:	(bad)  
 10329a2:	(bad)  
 10329a3:	(bad)  
 10329a4:	(bad)  
 10329a5:	(bad)  
 10329a6:	(bad)  
 10329a7:	(bad)  
 10329a8:	(bad)  
 10329a9:	(bad)  
 10329aa:	(bad)  
 10329ab:	(bad)  
 10329ac:	(bad)  
 10329ad:	(bad)  
 10329ae:	(bad)  
 10329af:	(bad)  
 10329b0:	(bad)  
 10329b1:	(bad)  
 10329b2:	(bad)  
 10329b3:	(bad)  
 10329b4:	(bad)  
 10329b5:	(bad)  
 10329b6:	(bad)  
 10329b7:	(bad)  
 10329b8:	(bad)  
 10329b9:	(bad)  
 10329ba:	(bad)  
 10329bb:	(bad)  
 10329bc:	(bad)  
 10329bd:	(bad)  
 10329be:	(bad)  
 10329bf:	(bad)  
 10329c0:	(bad)  
 10329c1:	(bad)  
 10329c2:	(bad)  
 10329c3:	(bad)  
 10329c4:	(bad)  
 10329c5:	(bad)  
 10329c6:	(bad)  
 10329c7:	(bad)  
 10329c8:	(bad)  
 10329c9:	(bad)  
 10329ca:	(bad)  
 10329cb:	(bad)  
 10329cc:	(bad)  
 10329cd:	(bad)  
 10329ce:	(bad)  
 10329cf:	(bad)  
 10329d0:	(bad)  
 10329d1:	std    
 10329d2:	std    
 10329d3:	(bad)  
 10329d4:	(bad)  
 10329d5:	(bad)  
 10329d6:	cld    
 10329d7:	(bad)  
 10329d8:	(bad)  
 10329d9:	(bad)  
 10329da:	std    
 10329db:	(bad)  
 10329dc:	(bad)  
 10329dd:	std    
 10329de:	cld    
 10329df:	(bad)  
 10329e0:	(bad)  
 10329e1:	std    
 10329e2:	cld    
 10329e3:	(bad)  
 10329e4:	(bad)  
 10329e5:	cld    
 10329e6:	sti    
 10329e7:	(bad)  
 10329e8:	(bad)  
 10329e9:	cld    
 10329ea:	cli    
 10329eb:	(bad)  
 10329ec:	(bad)  
 10329ed:	cld    
 10329ee:	cli    
 10329ef:	(bad)  
 10329f0:	(bad)  
 10329f1:	sti    
 10329f2:	cli    
 10329f3:	(bad)  
 10329f4:	(bad)  
 10329f5:	sti    
 10329f6:	clc    
 10329f7:	(bad)  
 10329f8:	(bad)  
 10329f9:	sti    
 10329fa:	clc    
 10329fb:	(bad)  
 10329fc:	(bad)  
 10329fd:	cli    
 10329fe:	idiv   edi
 1032a00:	(bad)  
 1032a01:	cli    
 1032a02:	idiv   edi
 1032a04:	(bad)  
 1032a05:	cli    
 1032a06:	idiv   bh
 1032a08:	(bad)  
 1032a09:	stc    
 1032a0a:	cmc    
 1032a0b:	(bad)  
 1032a0c:	(bad)  
 1032a0d:	stc    
 1032a0e:	cmc    
 1032a0f:	(bad)  
 1032a10:	(bad)  
 1032a11:	stc    
 1032a12:	cmc    
 1032a13:	(bad)  
 1032a14:	(bad)  
 1032a15:	clc    
 1032a16:	repz (bad) 
 1032a18:	(bad)  
 1032a19:	clc    
 1032a1a:	repz (bad) 
 1032a1c:	(bad)  
 1032a1d:	clc    
 1032a1e:	repz (bad) 
 1032a20:	push   edi
 1032a22:	repnz (bad) 
 1032a24:	push   esi
 1032a26:	icebp  
 1032a27:	(bad)  
 1032a28:	push   esi
 1032a2a:	lock (bad) 
 1032a2c:	push   ebp
 1032a2e:	lock (bad) 
 1032a30:	push   ebp
 1032a32:	out    dx,eax
 1032a33:	(bad)  
 1032a34:	push   esp
 1032a36:	out    dx,al
 1032a37:	inc    DWORD PTR [eax+0xff596d]
	...
 1032a71:	add    BYTE PTR [eax],al
 1032a73:	add    BYTE PTR [esi-0x6e5f],dh
 1032a79:	(bad)  
 1032a7a:	(bad)  
 1032a7b:	(bad)  
 1032a7c:	(bad)  
 1032a7d:	(bad)  
 1032a7e:	(bad)  
 1032a7f:	(bad)  
 1032a80:	(bad)  
 1032a81:	(bad)  
 1032a82:	(bad)  
 1032a83:	(bad)  
 1032a84:	(bad)  
 1032a85:	(bad)  
 1032a86:	(bad)  
 1032a87:	(bad)  
 1032a88:	(bad)  
 1032a89:	(bad)  
 1032a8a:	(bad)  
 1032a8b:	(bad)  
 1032a8c:	(bad)  
 1032a8d:	(bad)  
 1032a8e:	(bad)  
 1032a8f:	(bad)  
 1032a90:	(bad)  
 1032a91:	(bad)  
 1032a92:	(bad)  
 1032a93:	(bad)  
 1032a94:	(bad)  
 1032a95:	(bad)  
 1032a96:	(bad)  
 1032a97:	(bad)  
 1032a98:	(bad)  
 1032a99:	(bad)  
 1032a9a:	(bad)  
 1032a9b:	(bad)  
 1032a9c:	(bad)  
 1032a9d:	(bad)  
 1032a9e:	(bad)  
 1032a9f:	(bad)  
 1032aa0:	(bad)  
 1032aa1:	(bad)  
 1032aa2:	(bad)  
 1032aa3:	(bad)  
 1032aa4:	(bad)  
 1032aa5:	(bad)  
 1032aa6:	(bad)  
 1032aa7:	(bad)  
 1032aa8:	(bad)  
 1032aa9:	(bad)  
 1032aaa:	(bad)  
 1032aab:	(bad)  
 1032aac:	(bad)  
 1032aad:	(bad)  
 1032aae:	(bad)  
 1032aaf:	(bad)  
 1032ab0:	(bad)  
 1032ab1:	(bad)  
 1032ab2:	(bad)  
 1032ab3:	(bad)  
 1032ab4:	(bad)  
 1032ab5:	(bad)  
 1032ab6:	(bad)  
 1032ab7:	(bad)  
 1032ab8:	(bad)  
 1032ab9:	(bad)  
 1032aba:	(bad)  
 1032abb:	(bad)  
 1032abc:	(bad)  
 1032abd:	(bad)  
 1032abe:	(bad)  
 1032abf:	(bad)  
 1032ac0:	(bad)  
 1032ac1:	(bad)  
 1032ac2:	(bad)  
 1032ac3:	(bad)  
 1032ac4:	(bad)  
 1032ac5:	(bad)  
 1032ac6:	(bad)  
 1032ac7:	(bad)  
 1032ac8:	(bad)  
 1032ac9:	(bad)  
 1032aca:	(bad)  
 1032acb:	(bad)  
 1032acc:	(bad)  
 1032acd:	(bad)  
 1032ace:	(bad)  
 1032acf:	(bad)  
 1032ad0:	(bad)  
 1032ad1:	(bad)  
 1032ad2:	(bad)  
 1032ad3:	(bad)  
 1032ad4:	(bad)  
 1032ad5:	(bad)  
 1032ad6:	std    
 1032ad7:	(bad)  
 1032ad8:	(bad)  
 1032ad9:	(bad)  
 1032ada:	cld    
 1032adb:	(bad)  
 1032adc:	(bad)  
 1032add:	(bad)  
 1032ade:	std    
 1032adf:	(bad)  
 1032ae0:	(bad)  
 1032ae1:	std    
 1032ae2:	cld    
 1032ae3:	(bad)  
 1032ae4:	(bad)  
 1032ae5:	std    
 1032ae6:	sti    
 1032ae7:	(bad)  
 1032ae8:	(bad)  
 1032ae9:	std    
 1032aea:	sti    
 1032aeb:	(bad)  
 1032aec:	(bad)  
 1032aed:	cld    
 1032aee:	cli    
 1032aef:	(bad)  
 1032af0:	(bad)  
 1032af1:	cld    
 1032af2:	cli    
 1032af3:	(bad)  
 1032af4:	(bad)  
 1032af5:	sti    
 1032af6:	cli    
 1032af7:	(bad)  
 1032af8:	(bad)  
 1032af9:	sti    
 1032afa:	clc    
 1032afb:	(bad)  
 1032afc:	(bad)  
 1032afd:	sti    
 1032afe:	clc    
 1032aff:	(bad)  
 1032b00:	(bad)  
 1032b01:	cli    
 1032b02:	clc    
 1032b03:	(bad)  
 1032b04:	(bad)  
 1032b05:	cli    
 1032b06:	idiv   edi
 1032b08:	(bad)  
 1032b09:	cli    
 1032b0a:	idiv   bh
 1032b0c:	(bad)  
 1032b0d:	stc    
 1032b0e:	idiv   bh
 1032b10:	(bad)  
 1032b11:	stc    
 1032b12:	idiv   bh
 1032b14:	(bad)  
 1032b15:	clc    
 1032b16:	cmc    
 1032b17:	(bad)  
 1032b18:	(bad)  
 1032b19:	clc    
 1032b1a:	hlt    
 1032b1b:	(bad)  
 1032b1c:	(bad)  
 1032b1d:	clc    
 1032b1e:	hlt    
 1032b1f:	(bad)  
 1032b20:	push   edi
 1032b22:	repz (bad) 
 1032b24:	push   edi
 1032b26:	icebp  
 1032b27:	(bad)  
 1032b28:	push   edi
 1032b2a:	icebp  
 1032b2b:	(bad)  
 1032b2c:	push   esi
 1032b2e:	lock (bad) 
 1032b30:	push   ebp
 1032b32:	lock (bad) 
 1032b34:	push   ebp
 1032b36:	out    dx,eax
 1032b37:	inc    DWORD PTR [eax+0xff596d]
	...
 1032b71:	add    BYTE PTR [eax],al
 1032b73:	add    BYTE PTR [eax-0x6d5e],bh
 1032b79:	(bad)  
 1032b7a:	(bad)  
 1032b7b:	(bad)  
 1032b7c:	(bad)  
 1032b7d:	(bad)  
 1032b7e:	(bad)  
 1032b7f:	(bad)  
 1032b80:	(bad)  
 1032b81:	(bad)  
 1032b82:	(bad)  
 1032b83:	(bad)  
 1032b84:	(bad)  
 1032b85:	(bad)  
 1032b86:	(bad)  
 1032b87:	(bad)  
 1032b88:	(bad)  
 1032b89:	(bad)  
 1032b8a:	(bad)  
 1032b8b:	(bad)  
 1032b8c:	(bad)  
 1032b8d:	(bad)  
 1032b8e:	(bad)  
 1032b8f:	(bad)  
 1032b90:	(bad)  
 1032b91:	(bad)  
 1032b92:	(bad)  
 1032b93:	(bad)  
 1032b94:	(bad)  
 1032b95:	(bad)  
 1032b96:	(bad)  
 1032b97:	(bad)  
 1032b98:	(bad)  
 1032b99:	(bad)  
 1032b9a:	(bad)  
 1032b9b:	(bad)  
 1032b9c:	(bad)  
 1032b9d:	(bad)  
 1032b9e:	(bad)  
 1032b9f:	(bad)  
 1032ba0:	(bad)  
 1032ba1:	(bad)  
 1032ba2:	(bad)  
 1032ba3:	(bad)  
 1032ba4:	(bad)  
 1032ba5:	(bad)  
 1032ba6:	(bad)  
 1032ba7:	(bad)  
 1032ba8:	(bad)  
 1032ba9:	(bad)  
 1032baa:	(bad)  
 1032bab:	(bad)  
 1032bac:	(bad)  
 1032bad:	(bad)  
 1032bae:	(bad)  
 1032baf:	(bad)  
 1032bb0:	(bad)  
 1032bb1:	(bad)  
 1032bb2:	(bad)  
 1032bb3:	(bad)  
 1032bb4:	(bad)  
 1032bb5:	(bad)  
 1032bb6:	(bad)  
 1032bb7:	(bad)  
 1032bb8:	(bad)  
 1032bb9:	(bad)  
 1032bba:	(bad)  
 1032bbb:	(bad)  
 1032bbc:	(bad)  
 1032bbd:	(bad)  
 1032bbe:	(bad)  
 1032bbf:	(bad)  
 1032bc0:	(bad)  
 1032bc1:	(bad)  
 1032bc2:	(bad)  
 1032bc3:	(bad)  
 1032bc4:	(bad)  
 1032bc5:	(bad)  
 1032bc6:	(bad)  
 1032bc7:	(bad)  
 1032bc8:	(bad)  
 1032bc9:	(bad)  
 1032bca:	(bad)  
 1032bcb:	(bad)  
 1032bcc:	(bad)  
 1032bcd:	(bad)  
 1032bce:	(bad)  
 1032bcf:	(bad)  
 1032bd0:	(bad)  
 1032bd1:	(bad)  
 1032bd2:	(bad)  
 1032bd3:	(bad)  
 1032bd4:	(bad)  
 1032bd5:	(bad)  
 1032bd6:	(bad)  
 1032bd7:	(bad)  
 1032bd8:	(bad)  
 1032bd9:	(bad)  
 1032bda:	std    
 1032bdb:	(bad)  
 1032bdc:	(bad)  
 1032bdd:	(bad)  
 1032bde:	cld    
 1032bdf:	(bad)  
 1032be0:	(bad)  
 1032be1:	(bad)  
 1032be2:	cld    
 1032be3:	(bad)  
 1032be4:	(bad)  
 1032be5:	std    
 1032be6:	cld    
 1032be7:	(bad)  
 1032be8:	(bad)  
 1032be9:	std    
 1032bea:	cld    
 1032beb:	(bad)  
 1032bec:	(bad)  
 1032bed:	cld    
 1032bee:	sti    
 1032bef:	(bad)  
 1032bf0:	(bad)  
 1032bf1:	cld    
 1032bf2:	cli    
 1032bf3:	(bad)  
 1032bf4:	(bad)  
 1032bf5:	cld    
 1032bf6:	cli    
 1032bf7:	(bad)  
 1032bf8:	(bad)  
 1032bf9:	cld    
 1032bfa:	cli    
 1032bfb:	(bad)  
 1032bfc:	(bad)  
 1032bfd:	cld    
 1032bfe:	stc    
 1032bff:	(bad)  
 1032c00:	(bad)  
 1032c01:	cli    
 1032c02:	clc    
 1032c03:	(bad)  
 1032c04:	(bad)  
 1032c05:	sti    
 1032c06:	idiv   edi
 1032c08:	(bad)  
 1032c09:	cli    
 1032c0a:	idiv   edi
 1032c0c:	(bad)  
 1032c0d:	cli    
 1032c0e:	idiv   edi
 1032c10:	(bad)  
 1032c11:	stc    
 1032c12:	cmc    
 1032c13:	(bad)  
 1032c14:	(bad)  
 1032c15:	stc    
 1032c16:	idiv   bh
 1032c18:	(bad)  
 1032c19:	clc    
 1032c1a:	hlt    
 1032c1b:	(bad)  
 1032c1c:	(bad)  
 1032c1d:	clc    
 1032c1e:	hlt    
 1032c1f:	(bad)  
 1032c20:	(bad)  
 1032c21:	clc    
 1032c22:	repz (bad) 
 1032c24:	(bad)  
 1032c25:	clc    
 1032c26:	repz (bad) 
 1032c28:	push   edi
 1032c2a:	repnz (bad) 
 1032c2c:	push   edi
 1032c2e:	repnz (bad) 
 1032c30:	push   esi
 1032c32:	icebp  
 1032c33:	(bad)  
 1032c34:	push   esi
 1032c36:	lock inc DWORD PTR [ecx+0xff5a6e]
	...
 1032c69:	add    BYTE PTR [eax],al
 1032c6b:	add    BYTE PTR [ebp-0x72005250],dh
 1032c71:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1032c77:	dec    DWORD PTR [ebp-0x72007e7b]
 1032c7d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1032c83:	(bad)  
 1032c84:	(bad)  
 1032c85:	(bad)  
 1032c86:	(bad)  
 1032c87:	(bad)  
 1032c88:	(bad)  
 1032c89:	(bad)  
 1032c8a:	(bad)  
 1032c8b:	(bad)  
 1032c8c:	(bad)  
 1032c8d:	(bad)  
 1032c8e:	(bad)  
 1032c8f:	(bad)  
 1032c90:	(bad)  
 1032c91:	(bad)  
 1032c92:	(bad)  
 1032c93:	(bad)  
 1032c94:	(bad)  
 1032c95:	(bad)  
 1032c96:	(bad)  
 1032c97:	(bad)  
 1032c98:	(bad)  
 1032c99:	(bad)  
 1032c9a:	(bad)  
 1032c9b:	(bad)  
 1032c9c:	(bad)  
 1032c9d:	(bad)  
 1032c9e:	(bad)  
 1032c9f:	(bad)  
 1032ca0:	(bad)  
 1032ca1:	(bad)  
 1032ca2:	(bad)  
 1032ca3:	(bad)  
 1032ca4:	(bad)  
 1032ca5:	(bad)  
 1032ca6:	(bad)  
 1032ca7:	(bad)  
 1032ca8:	(bad)  
 1032ca9:	(bad)  
 1032caa:	(bad)  
 1032cab:	(bad)  
 1032cac:	(bad)  
 1032cad:	(bad)  
 1032cae:	(bad)  
 1032caf:	(bad)  
 1032cb0:	(bad)  
 1032cb1:	(bad)  
 1032cb2:	(bad)  
 1032cb3:	(bad)  
 1032cb4:	(bad)  
 1032cb5:	(bad)  
 1032cb6:	(bad)  
 1032cb7:	(bad)  
 1032cb8:	(bad)  
 1032cb9:	(bad)  
 1032cba:	(bad)  
 1032cbb:	(bad)  
 1032cbc:	(bad)  
 1032cbd:	(bad)  
 1032cbe:	(bad)  
 1032cbf:	(bad)  
 1032cc0:	(bad)  
 1032cc1:	(bad)  
 1032cc2:	(bad)  
 1032cc3:	(bad)  
 1032cc4:	(bad)  
 1032cc5:	(bad)  
 1032cc6:	(bad)  
 1032cc7:	(bad)  
 1032cc8:	(bad)  
 1032cc9:	(bad)  
 1032cca:	(bad)  
 1032ccb:	(bad)  
 1032ccc:	(bad)  
 1032ccd:	(bad)  
 1032cce:	(bad)  
 1032ccf:	(bad)  
 1032cd0:	(bad)  
 1032cd1:	(bad)  
 1032cd2:	(bad)  
 1032cd3:	(bad)  
 1032cd4:	(bad)  
 1032cd5:	(bad)  
 1032cd6:	(bad)  
 1032cd7:	(bad)  
 1032cd8:	(bad)  
 1032cd9:	(bad)  
 1032cda:	(bad)  
 1032cdb:	(bad)  
 1032cdc:	(bad)  
 1032cdd:	(bad)  
 1032cde:	(bad)  
 1032cdf:	(bad)  
 1032ce0:	(bad)  
 1032ce1:	(bad)  
 1032ce2:	std    
 1032ce3:	(bad)  
 1032ce4:	(bad)  
 1032ce5:	(bad)  
 1032ce6:	std    
 1032ce7:	(bad)  
 1032ce8:	(bad)  
 1032ce9:	std    
 1032cea:	cld    
 1032ceb:	(bad)  
 1032cec:	(bad)  
 1032ced:	std    
 1032cee:	cld    
 1032cef:	(bad)  
 1032cf0:	(bad)  
 1032cf1:	std    
 1032cf2:	sti    
 1032cf3:	(bad)  
 1032cf4:	(bad)  
 1032cf5:	cld    
 1032cf6:	cli    
 1032cf7:	(bad)  
 1032cf8:	(bad)  
 1032cf9:	cld    
 1032cfa:	cli    
 1032cfb:	(bad)  
 1032cfc:	(bad)  
 1032cfd:	cld    
 1032cfe:	cli    
 1032cff:	(bad)  
 1032d00:	(bad)  
 1032d01:	sti    
 1032d02:	stc    
 1032d03:	(bad)  
 1032d04:	(bad)  
 1032d05:	sti    
 1032d06:	clc    
 1032d07:	(bad)  
 1032d08:	(bad)  
 1032d09:	cli    
 1032d0a:	clc    
 1032d0b:	(bad)  
 1032d0c:	(bad)  
 1032d0d:	cli    
 1032d0e:	idiv   edi
 1032d10:	(bad)  
 1032d11:	cli    
 1032d12:	idiv   edi
 1032d14:	(bad)  
 1032d15:	cli    
 1032d16:	idiv   bh
 1032d18:	(bad)  
 1032d19:	stc    
 1032d1a:	cmc    
 1032d1b:	(bad)  
 1032d1c:	(bad)  
 1032d1d:	stc    
 1032d1e:	cmc    
 1032d1f:	(bad)  
 1032d20:	(bad)  
 1032d21:	clc    
 1032d22:	hlt    
 1032d23:	(bad)  
 1032d24:	(bad)  
 1032d25:	clc    
 1032d26:	hlt    
 1032d27:	(bad)  
 1032d28:	(bad)  
 1032d29:	clc    
 1032d2a:	repz (bad) 
 1032d2c:	push   edi
 1032d2e:	repnz (bad) 
 1032d30:	push   esi
 1032d32:	icebp  
 1032d33:	(bad)  
 1032d34:	push   esi
 1032d36:	icebp  
 1032d37:	inc    DWORD PTR [edx+0xff5b6f]
	...
 1032d69:	add    BYTE PTR [eax],al
 1032d6b:	add    BYTE PTR [ebp+0x62],ch
 1032d6e:	pop    ebx
 1032d6f:	dec    ecx
 1032d71:	mov    ah,0xff
 1032d74:	leave  
 1032d75:	mov    ah,0xff
 1032d78:	(bad)  
 1032d79:	(bad)  
 1032d7a:	(bad)  
 1032d7b:	jmp    esp
 1032d7d:	jecxz  0x1032d61
 1032d7f:	jmp    FWORD PTR [ebp+0x62]
 1032d82:	pop    ebx
 1032d83:	(bad)  
 1032d84:	(bad)  
 1032d85:	(bad)  
 1032d86:	(bad)  
 1032d87:	(bad)  
 1032d88:	(bad)  
 1032d89:	(bad)  
 1032d8a:	(bad)  
 1032d8b:	(bad)  
 1032d8c:	(bad)  
 1032d8d:	(bad)  
 1032d8e:	(bad)  
 1032d8f:	(bad)  
 1032d90:	(bad)  
 1032d91:	(bad)  
 1032d92:	(bad)  
 1032d93:	(bad)  
 1032d94:	(bad)  
 1032d95:	(bad)  
 1032d96:	(bad)  
 1032d97:	(bad)  
 1032d98:	(bad)  
 1032d99:	(bad)  
 1032d9a:	(bad)  
 1032d9b:	(bad)  
 1032d9c:	(bad)  
 1032d9d:	(bad)  
 1032d9e:	(bad)  
 1032d9f:	(bad)  
 1032da0:	(bad)  
 1032da1:	(bad)  
 1032da2:	(bad)  
 1032da3:	(bad)  
 1032da4:	(bad)  
 1032da5:	(bad)  
 1032da6:	(bad)  
 1032da7:	(bad)  
 1032da8:	(bad)  
 1032da9:	(bad)  
 1032daa:	(bad)  
 1032dab:	(bad)  
 1032dac:	(bad)  
 1032dad:	(bad)  
 1032dae:	(bad)  
 1032daf:	(bad)  
 1032db0:	(bad)  
 1032db1:	(bad)  
 1032db2:	(bad)  
 1032db3:	(bad)  
 1032db4:	(bad)  
 1032db5:	(bad)  
 1032db6:	(bad)  
 1032db7:	(bad)  
 1032db8:	(bad)  
 1032db9:	(bad)  
 1032dba:	(bad)  
 1032dbb:	(bad)  
 1032dbc:	(bad)  
 1032dbd:	(bad)  
 1032dbe:	(bad)  
 1032dbf:	(bad)  
 1032dc0:	(bad)  
 1032dc1:	(bad)  
 1032dc2:	(bad)  
 1032dc3:	(bad)  
 1032dc4:	(bad)  
 1032dc5:	(bad)  
 1032dc6:	(bad)  
 1032dc7:	(bad)  
 1032dc8:	(bad)  
 1032dc9:	(bad)  
 1032dca:	(bad)  
 1032dcb:	(bad)  
 1032dcc:	(bad)  
 1032dcd:	(bad)  
 1032dce:	(bad)  
 1032dcf:	(bad)  
 1032dd0:	(bad)  
 1032dd1:	(bad)  
 1032dd2:	(bad)  
 1032dd3:	(bad)  
 1032dd4:	(bad)  
 1032dd5:	(bad)  
 1032dd6:	(bad)  
 1032dd7:	(bad)  
 1032dd8:	(bad)  
 1032dd9:	(bad)  
 1032dda:	(bad)  
 1032ddb:	(bad)  
 1032ddc:	(bad)  
 1032ddd:	(bad)  
 1032dde:	std    
 1032ddf:	(bad)  
 1032de0:	(bad)  
 1032de1:	(bad)  
 1032de2:	std    
 1032de3:	(bad)  
 1032de4:	(bad)  
 1032de5:	(bad)  
 1032de6:	std    
 1032de7:	(bad)  
 1032de8:	(bad)  
 1032de9:	std    
 1032dea:	cld    
 1032deb:	(bad)  
 1032dec:	(bad)  
 1032ded:	(bad)  
 1032dee:	cld    
 1032def:	(bad)  
 1032df0:	(bad)  
 1032df1:	std    
 1032df2:	cld    
 1032df3:	(bad)  
 1032df4:	(bad)  
 1032df5:	std    
 1032df6:	sti    
 1032df7:	(bad)  
 1032df8:	(bad)  
 1032df9:	cld    
 1032dfa:	sti    
 1032dfb:	(bad)  
 1032dfc:	(bad)  
 1032dfd:	cld    
 1032dfe:	cli    
 1032dff:	(bad)  
 1032e00:	(bad)  
 1032e01:	sti    
 1032e02:	stc    
 1032e03:	(bad)  
 1032e04:	(bad)  
 1032e05:	sti    
 1032e06:	stc    
 1032e07:	(bad)  
 1032e08:	(bad)  
 1032e09:	cli    
 1032e0a:	stc    
 1032e0b:	(bad)  
 1032e0c:	(bad)  
 1032e0d:	cli    
 1032e0e:	clc    
 1032e0f:	(bad)  
 1032e10:	(bad)  
 1032e11:	sti    
 1032e12:	idiv   edi
 1032e14:	(bad)  
 1032e15:	cli    
 1032e16:	idiv   edi
 1032e18:	(bad)  
 1032e19:	cli    
 1032e1a:	idiv   bh
 1032e1c:	(bad)  
 1032e1d:	stc    
 1032e1e:	cmc    
 1032e1f:	(bad)  
 1032e20:	(bad)  
 1032e21:	stc    
 1032e22:	cmc    
 1032e23:	(bad)  
 1032e24:	(bad)  
 1032e25:	clc    
 1032e26:	hlt    
 1032e27:	(bad)  
 1032e28:	(bad)  
 1032e29:	clc    
 1032e2a:	hlt    
 1032e2b:	(bad)  
 1032e2c:	(bad)  
 1032e2d:	clc    
 1032e2e:	repz (bad) 
 1032e30:	push   edi
 1032e32:	repnz (bad) 
 1032e34:	push   esi
 1032e36:	icebp  
 1032e37:	inc    DWORD PTR [ebx+0xff5c70]
	...
 1032e69:	add    BYTE PTR [eax],al
 1032e6b:	add    dh,ch
 1032e6d:	in     eax,dx
 1032e6e:	in     al,dx
 1032e6f:	jmp    ebp
 1032e71:	jecxz  0x1032e55
 1032e73:	jmp    ebp
 1032e75:	jecxz  0x1032e59
 1032e77:	jmp    ebp
 1032e79:	jecxz  0x1032e5d
 1032e7b:	jmp    ebp
 1032e7d:	jecxz  0x1032e61
 1032e7f:	(bad)  
 1032e80:	out    dx,al
 1032e81:	in     eax,dx
 1032e82:	in     al,dx
 1032e83:	(bad)  
 1032e84:	(bad)  
 1032e85:	(bad)  
 1032e86:	(bad)  
 1032e87:	(bad)  
 1032e88:	(bad)  
 1032e89:	(bad)  
 1032e8a:	(bad)  
 1032e8b:	(bad)  
 1032e8c:	(bad)  
 1032e8d:	(bad)  
 1032e8e:	(bad)  
 1032e8f:	(bad)  
 1032e90:	(bad)  
 1032e91:	(bad)  
 1032e92:	(bad)  
 1032e93:	(bad)  
 1032e94:	(bad)  
 1032e95:	(bad)  
 1032e96:	(bad)  
 1032e97:	(bad)  
 1032e98:	(bad)  
 1032e99:	(bad)  
 1032e9a:	(bad)  
 1032e9b:	(bad)  
 1032e9c:	(bad)  
 1032e9d:	(bad)  
 1032e9e:	(bad)  
 1032e9f:	(bad)  
 1032ea0:	(bad)  
 1032ea1:	(bad)  
 1032ea2:	(bad)  
 1032ea3:	(bad)  
 1032ea4:	(bad)  
 1032ea5:	(bad)  
 1032ea6:	(bad)  
 1032ea7:	(bad)  
 1032ea8:	(bad)  
 1032ea9:	(bad)  
 1032eaa:	(bad)  
 1032eab:	(bad)  
 1032eac:	(bad)  
 1032ead:	(bad)  
 1032eae:	(bad)  
 1032eaf:	(bad)  
 1032eb0:	(bad)  
 1032eb1:	(bad)  
 1032eb2:	(bad)  
 1032eb3:	(bad)  
 1032eb4:	(bad)  
 1032eb5:	(bad)  
 1032eb6:	(bad)  
 1032eb7:	(bad)  
 1032eb8:	(bad)  
 1032eb9:	(bad)  
 1032eba:	(bad)  
 1032ebb:	(bad)  
 1032ebc:	(bad)  
 1032ebd:	(bad)  
 1032ebe:	(bad)  
 1032ebf:	(bad)  
 1032ec0:	(bad)  
 1032ec1:	(bad)  
 1032ec2:	(bad)  
 1032ec3:	(bad)  
 1032ec4:	(bad)  
 1032ec5:	(bad)  
 1032ec6:	(bad)  
 1032ec7:	(bad)  
 1032ec8:	(bad)  
 1032ec9:	(bad)  
 1032eca:	(bad)  
 1032ecb:	(bad)  
 1032ecc:	(bad)  
 1032ecd:	(bad)  
 1032ece:	(bad)  
 1032ecf:	(bad)  
 1032ed0:	(bad)  
 1032ed1:	(bad)  
 1032ed2:	(bad)  
 1032ed3:	(bad)  
 1032ed4:	(bad)  
 1032ed5:	(bad)  
 1032ed6:	(bad)  
 1032ed7:	(bad)  
 1032ed8:	(bad)  
 1032ed9:	(bad)  
 1032eda:	(bad)  
 1032edb:	(bad)  
 1032edc:	(bad)  
 1032edd:	(bad)  
 1032ede:	(bad)  
 1032edf:	(bad)  
 1032ee0:	(bad)  
 1032ee1:	(bad)  
 1032ee2:	std    
 1032ee3:	(bad)  
 1032ee4:	(bad)  
 1032ee5:	(bad)  
 1032ee6:	std    
 1032ee7:	(bad)  
 1032ee8:	(bad)  
 1032ee9:	(bad)  
 1032eea:	std    
 1032eeb:	(bad)  
 1032eec:	(bad)  
 1032eed:	std    
 1032eee:	std    
 1032eef:	(bad)  
 1032ef0:	(bad)  
 1032ef1:	std    
 1032ef2:	cld    
 1032ef3:	(bad)  
 1032ef4:	(bad)  
 1032ef5:	cld    
 1032ef6:	cld    
 1032ef7:	(bad)  
 1032ef8:	(bad)  
 1032ef9:	cld    
 1032efa:	sti    
 1032efb:	(bad)  
 1032efc:	(bad)  
 1032efd:	cld    
 1032efe:	sti    
 1032eff:	(bad)  
 1032f00:	(bad)  
 1032f01:	cld    
 1032f02:	cli    
 1032f03:	(bad)  
 1032f04:	(bad)  
 1032f05:	sti    
 1032f06:	cli    
 1032f07:	(bad)  
 1032f08:	(bad)  
 1032f09:	sti    
 1032f0a:	stc    
 1032f0b:	(bad)  
 1032f0c:	(bad)  
 1032f0d:	sti    
 1032f0e:	clc    
 1032f0f:	(bad)  
 1032f10:	(bad)  
 1032f11:	sti    
 1032f12:	clc    
 1032f13:	(bad)  
 1032f14:	(bad)  
 1032f15:	cli    
 1032f16:	idiv   edi
 1032f18:	(bad)  
 1032f19:	cli    
 1032f1a:	idiv   edi
 1032f1c:	(bad)  
 1032f1d:	cli    
 1032f1e:	idiv   bh
 1032f20:	(bad)  
 1032f21:	stc    
 1032f22:	cmc    
 1032f23:	(bad)  
 1032f24:	(bad)  
 1032f25:	stc    
 1032f26:	hlt    
 1032f27:	(bad)  
 1032f28:	(bad)  
 1032f29:	stc    
 1032f2a:	hlt    
 1032f2b:	(bad)  
 1032f2c:	(bad)  
 1032f2d:	clc    
 1032f2e:	hlt    
 1032f2f:	(bad)  
 1032f30:	push   edi
 1032f32:	repnz (bad) 
 1032f34:	push   edi
 1032f36:	repnz inc DWORD PTR [ecx+esi*2+0xff5d]
	...
 1032f72:	add    BYTE PTR [eax],al
 1032f74:	mov    esp,0xffff96a6
 1032f79:	(bad)  
 1032f7a:	(bad)  
 1032f7b:	(bad)  
 1032f7c:	(bad)  
 1032f7d:	(bad)  
 1032f7e:	(bad)  
 1032f7f:	(bad)  
 1032f80:	(bad)  
 1032f81:	(bad)  
 1032f82:	(bad)  
 1032f83:	(bad)  
 1032f84:	(bad)  
 1032f85:	(bad)  
 1032f86:	(bad)  
 1032f87:	(bad)  
 1032f88:	(bad)  
 1032f89:	(bad)  
 1032f8a:	(bad)  
 1032f8b:	(bad)  
 1032f8c:	(bad)  
 1032f8d:	(bad)  
 1032f8e:	(bad)  
 1032f8f:	(bad)  
 1032f90:	(bad)  
 1032f91:	(bad)  
 1032f92:	(bad)  
 1032f93:	(bad)  
 1032f94:	(bad)  
 1032f95:	(bad)  
 1032f96:	(bad)  
 1032f97:	(bad)  
 1032f98:	(bad)  
 1032f99:	(bad)  
 1032f9a:	(bad)  
 1032f9b:	(bad)  
 1032f9c:	(bad)  
 1032f9d:	(bad)  
 1032f9e:	(bad)  
 1032f9f:	(bad)  
 1032fa0:	(bad)  
 1032fa1:	(bad)  
 1032fa2:	(bad)  
 1032fa3:	(bad)  
 1032fa4:	(bad)  
 1032fa5:	(bad)  
 1032fa6:	(bad)  
 1032fa7:	(bad)  
 1032fa8:	(bad)  
 1032fa9:	(bad)  
 1032faa:	(bad)  
 1032fab:	(bad)  
 1032fac:	(bad)  
 1032fad:	(bad)  
 1032fae:	(bad)  
 1032faf:	(bad)  
 1032fb0:	(bad)  
 1032fb1:	(bad)  
 1032fb2:	(bad)  
 1032fb3:	(bad)  
 1032fb4:	(bad)  
 1032fb5:	(bad)  
 1032fb6:	(bad)  
 1032fb7:	(bad)  
 1032fb8:	(bad)  
 1032fb9:	(bad)  
 1032fba:	(bad)  
 1032fbb:	(bad)  
 1032fbc:	(bad)  
 1032fbd:	(bad)  
 1032fbe:	(bad)  
 1032fbf:	(bad)  
 1032fc0:	(bad)  
 1032fc1:	(bad)  
 1032fc2:	(bad)  
 1032fc3:	(bad)  
 1032fc4:	(bad)  
 1032fc5:	(bad)  
 1032fc6:	(bad)  
 1032fc7:	(bad)  
 1032fc8:	(bad)  
 1032fc9:	(bad)  
 1032fca:	(bad)  
 1032fcb:	(bad)  
 1032fcc:	(bad)  
 1032fcd:	(bad)  
 1032fce:	(bad)  
 1032fcf:	(bad)  
 1032fd0:	(bad)  
 1032fd1:	(bad)  
 1032fd2:	(bad)  
 1032fd3:	(bad)  
 1032fd4:	(bad)  
 1032fd5:	(bad)  
 1032fd6:	(bad)  
 1032fd7:	(bad)  
 1032fd8:	(bad)  
 1032fd9:	(bad)  
 1032fda:	(bad)  
 1032fdb:	(bad)  
 1032fdc:	(bad)  
 1032fdd:	(bad)  
 1032fde:	(bad)  
 1032fdf:	(bad)  
 1032fe0:	(bad)  
 1032fe1:	(bad)  
 1032fe2:	(bad)  
 1032fe3:	(bad)  
 1032fe4:	(bad)  
 1032fe5:	(bad)  
 1032fe6:	(bad)  
 1032fe7:	(bad)  
 1032fe8:	(bad)  
 1032fe9:	(bad)  
 1032fea:	std    
 1032feb:	(bad)  
 1032fec:	(bad)  
 1032fed:	(bad)  
 1032fee:	std    
 1032fef:	(bad)  
 1032ff0:	(bad)  
 1032ff1:	(bad)  
 1032ff2:	cld    
 1032ff3:	(bad)  
 1032ff4:	(bad)  
 1032ff5:	std    
 1032ff6:	cld    
 1032ff7:	(bad)  
 1032ff8:	(bad)  
 1032ff9:	std    
 1032ffa:	cld    
 1032ffb:	call   DWORD PTR [edi-0x6a00907f]
 1033001:	sub    BYTE PTR [esi-0x1],0x94
 1033005:	jg     0x1033073
 1033007:	call   DWORD PTR [ebx-0x6d009482]
 103300d:	jge    0x103307a
 103300f:	call   DWORD PTR [eax-0x6f009684]
 1033015:	jnp    0x103307f
 1033017:	dec    DWORD PTR [esi-0x71009886]
 103301d:	jns    0x1033085
 103301f:	dec    DWORD PTR [eax+edi*2+0x778bff65]
 1033026:	arpl   di,di
 1033028:	mov    dh,BYTE PTR [esi+0x63]
 103302b:	dec    DWORD PTR [ecx+0x7cff6175]
 1033031:	imul   edx,DWORD PTR [ebp-0x1],0xff35485e
 1033038:	pop    esp
 1033039:	inc    ebp
 103303a:	xor    bh,bh
	...
 1033074:	mov    esp,0xffff98a7
 1033079:	(bad)  
 103307a:	(bad)  
 103307b:	(bad)  
 103307c:	(bad)  
 103307d:	(bad)  
 103307e:	(bad)  
 103307f:	(bad)  
 1033080:	(bad)  
 1033081:	(bad)  
 1033082:	(bad)  
 1033083:	(bad)  
 1033084:	(bad)  
 1033085:	(bad)  
 1033086:	(bad)  
 1033087:	(bad)  
 1033088:	(bad)  
 1033089:	(bad)  
 103308a:	(bad)  
 103308b:	(bad)  
 103308c:	(bad)  
 103308d:	(bad)  
 103308e:	(bad)  
 103308f:	(bad)  
 1033090:	(bad)  
 1033091:	(bad)  
 1033092:	(bad)  
 1033093:	(bad)  
 1033094:	(bad)  
 1033095:	(bad)  
 1033096:	(bad)  
 1033097:	(bad)  
 1033098:	(bad)  
 1033099:	(bad)  
 103309a:	(bad)  
 103309b:	(bad)  
 103309c:	(bad)  
 103309d:	(bad)  
 103309e:	(bad)  
 103309f:	(bad)  
 10330a0:	(bad)  
 10330a1:	(bad)  
 10330a2:	(bad)  
 10330a3:	(bad)  
 10330a4:	(bad)  
 10330a5:	(bad)  
 10330a6:	(bad)  
 10330a7:	(bad)  
 10330a8:	(bad)  
 10330a9:	(bad)  
 10330aa:	(bad)  
 10330ab:	(bad)  
 10330ac:	(bad)  
 10330ad:	(bad)  
 10330ae:	(bad)  
 10330af:	(bad)  
 10330b0:	(bad)  
 10330b1:	(bad)  
 10330b2:	(bad)  
 10330b3:	(bad)  
 10330b4:	(bad)  
 10330b5:	(bad)  
 10330b6:	(bad)  
 10330b7:	(bad)  
 10330b8:	(bad)  
 10330b9:	(bad)  
 10330ba:	(bad)  
 10330bb:	(bad)  
 10330bc:	(bad)  
 10330bd:	(bad)  
 10330be:	(bad)  
 10330bf:	(bad)  
 10330c0:	(bad)  
 10330c1:	(bad)  
 10330c2:	(bad)  
 10330c3:	(bad)  
 10330c4:	(bad)  
 10330c5:	(bad)  
 10330c6:	(bad)  
 10330c7:	(bad)  
 10330c8:	(bad)  
 10330c9:	(bad)  
 10330ca:	(bad)  
 10330cb:	(bad)  
 10330cc:	(bad)  
 10330cd:	(bad)  
 10330ce:	(bad)  
 10330cf:	(bad)  
 10330d0:	(bad)  
 10330d1:	(bad)  
 10330d2:	(bad)  
 10330d3:	(bad)  
 10330d4:	(bad)  
 10330d5:	(bad)  
 10330d6:	(bad)  
 10330d7:	(bad)  
 10330d8:	(bad)  
 10330d9:	(bad)  
 10330da:	(bad)  
 10330db:	(bad)  
 10330dc:	(bad)  
 10330dd:	(bad)  
 10330de:	(bad)  
 10330df:	(bad)  
 10330e0:	(bad)  
 10330e1:	(bad)  
 10330e2:	(bad)  
 10330e3:	(bad)  
 10330e4:	(bad)  
 10330e5:	(bad)  
 10330e6:	(bad)  
 10330e7:	(bad)  
 10330e8:	(bad)  
 10330e9:	(bad)  
 10330ea:	std    
 10330eb:	(bad)  
 10330ec:	(bad)  
 10330ed:	(bad)  
 10330ee:	std    
 10330ef:	(bad)  
 10330f0:	(bad)  
 10330f1:	(bad)  
 10330f2:	std    
 10330f3:	(bad)  
 10330f4:	(bad)  
 10330f5:	(bad)  
 10330f6:	std    
 10330f7:	(bad)  
 10330f8:	(bad)  
 10330f9:	std    
 10330fa:	cld    
 10330fb:	call   FWORD PTR [eax-0x8e7d]
 1033101:	(bad)  
 1033102:	(bad)  
 1033103:	push   eax
 1033105:	(bad)  
 1033107:	(bad)  
 1033108:	out    dx,al
 1033109:	fcmovne st,st(7)
 103310b:	(bad)  
 103310c:	in     al,dx
 103310d:	fmul   st,st(3)
 103310f:	(bad)  
 1033110:	jmp    0x10330e8
 1033112:	(bad)  
 1033113:	(bad)  
 1033114:	jmp    0xc1d0:0xe9ffc4d3
 103311b:	(bad)  
 103311c:	jmp    0xea02f0f0
 1033121:	into   
 1033122:	mov    esi,0xbecee8ff
 1033127:	(bad)  
 1033128:	call   0xea02eefb
 103312d:	into   
 103312e:	mov    ebp,0xa9bad2ff
 1033133:	jmp    DWORD PTR [eax+0x49]
 1033136:	aaa    
 1033137:	(bad)  
 1033138:	jns    0x103319f
 103313a:	push   ecx
 103313b:	inc    DWORD PTR [eax]
	...
 1033169:	add    BYTE PTR [eax],al
 103316b:	add    BYTE PTR [ebp-0x72005250],dh
 1033171:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1033177:	dec    DWORD PTR [ebp-0x72007e7b]
 103317d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1033183:	(bad)  
 1033184:	(bad)  
 1033185:	(bad)  
 1033186:	(bad)  
 1033187:	(bad)  
 1033188:	(bad)  
 1033189:	(bad)  
 103318a:	(bad)  
 103318b:	(bad)  
 103318c:	(bad)  
 103318d:	(bad)  
 103318e:	(bad)  
 103318f:	(bad)  
 1033190:	(bad)  
 1033191:	(bad)  
 1033192:	(bad)  
 1033193:	(bad)  
 1033194:	(bad)  
 1033195:	(bad)  
 1033196:	(bad)  
 1033197:	(bad)  
 1033198:	(bad)  
 1033199:	(bad)  
 103319a:	(bad)  
 103319b:	(bad)  
 103319c:	(bad)  
 103319d:	(bad)  
 103319e:	(bad)  
 103319f:	(bad)  
 10331a0:	(bad)  
 10331a1:	(bad)  
 10331a2:	(bad)  
 10331a3:	(bad)  
 10331a4:	(bad)  
 10331a5:	(bad)  
 10331a6:	(bad)  
 10331a7:	(bad)  
 10331a8:	(bad)  
 10331a9:	(bad)  
 10331aa:	(bad)  
 10331ab:	(bad)  
 10331ac:	(bad)  
 10331ad:	(bad)  
 10331ae:	(bad)  
 10331af:	(bad)  
 10331b0:	(bad)  
 10331b1:	(bad)  
 10331b2:	(bad)  
 10331b3:	(bad)  
 10331b4:	(bad)  
 10331b5:	(bad)  
 10331b6:	(bad)  
 10331b7:	(bad)  
 10331b8:	(bad)  
 10331b9:	(bad)  
 10331ba:	(bad)  
 10331bb:	(bad)  
 10331bc:	(bad)  
 10331bd:	(bad)  
 10331be:	(bad)  
 10331bf:	(bad)  
 10331c0:	(bad)  
 10331c1:	(bad)  
 10331c2:	(bad)  
 10331c3:	(bad)  
 10331c4:	(bad)  
 10331c5:	(bad)  
 10331c6:	(bad)  
 10331c7:	(bad)  
 10331c8:	(bad)  
 10331c9:	(bad)  
 10331ca:	(bad)  
 10331cb:	(bad)  
 10331cc:	(bad)  
 10331cd:	(bad)  
 10331ce:	(bad)  
 10331cf:	(bad)  
 10331d0:	(bad)  
 10331d1:	(bad)  
 10331d2:	(bad)  
 10331d3:	(bad)  
 10331d4:	(bad)  
 10331d5:	(bad)  
 10331d6:	(bad)  
 10331d7:	(bad)  
 10331d8:	(bad)  
 10331d9:	(bad)  
 10331da:	(bad)  
 10331db:	(bad)  
 10331dc:	(bad)  
 10331dd:	(bad)  
 10331de:	(bad)  
 10331df:	(bad)  
 10331e0:	(bad)  
 10331e1:	(bad)  
 10331e2:	(bad)  
 10331e3:	(bad)  
 10331e4:	(bad)  
 10331e5:	(bad)  
 10331e6:	(bad)  
 10331e7:	(bad)  
 10331e8:	(bad)  
 10331e9:	(bad)  
 10331ea:	(bad)  
 10331eb:	(bad)  
 10331ec:	(bad)  
 10331ed:	(bad)  
 10331ee:	std    
 10331ef:	(bad)  
 10331f0:	(bad)  
 10331f1:	(bad)  
 10331f2:	std    
 10331f3:	(bad)  
 10331f4:	(bad)  
 10331f5:	(bad)  
 10331f6:	std    
 10331f7:	(bad)  
 10331f8:	(bad)  
 10331f9:	(bad)  
 10331fa:	std    
 10331fb:	call   FWORD PTR [ecx-0x8d7c]
 1033201:	(bad)  
 1033202:	(bad)  
 1033203:	push   esi
 1033205:	in     al,dx
 1033206:	in     al,0xff
 1033208:	hlt    
 1033209:	jmp    0xe6f831ef
 103320e:	(bad)  
 1033210:	icebp  
 1033211:	loop   0x10331ea
 1033213:	push   eax
 1033215:	(bad)  
 1033217:	(bad)  
 1033218:	out    dx,al
 1033219:	fxch   st(3)
 103321b:	(bad)  
 103321c:	jmp    0x10331f4
 103321e:	(bad)  
 103321f:	(bad)  
 1033220:	jmp    0xea02f3f6
 1033225:	into   
 1033226:	mov    esi,0xb9cce7ff
 103322b:	jmp    esi
 103322d:	retf   0xffb7
 1033230:	addr16 dec edi
 1033232:	cmp    eax,0xc1cddfff
 1033237:	inc    DWORD PTR [eax+0xff596d]
	...
 1033269:	add    BYTE PTR [eax],al
 103326b:	add    BYTE PTR [ebp+0x62],ch
 103326e:	pop    ebx
 103326f:	dec    ecx
 1033271:	mov    ah,0xff
 1033274:	leave  
 1033275:	mov    ah,0xff
 1033278:	(bad)  
 1033279:	(bad)  
 103327a:	(bad)  
 103327b:	jmp    esp
 103327d:	jecxz  0x1033261
 103327f:	jmp    FWORD PTR [ebp+0x62]
 1033282:	pop    ebx
 1033283:	(bad)  
 1033284:	(bad)  
 1033285:	(bad)  
 1033286:	(bad)  
 1033287:	(bad)  
 1033288:	(bad)  
 1033289:	(bad)  
 103328a:	(bad)  
 103328b:	(bad)  
 103328c:	(bad)  
 103328d:	(bad)  
 103328e:	(bad)  
 103328f:	(bad)  
 1033290:	(bad)  
 1033291:	(bad)  
 1033292:	(bad)  
 1033293:	(bad)  
 1033294:	(bad)  
 1033295:	(bad)  
 1033296:	(bad)  
 1033297:	(bad)  
 1033298:	(bad)  
 1033299:	(bad)  
 103329a:	(bad)  
 103329b:	(bad)  
 103329c:	(bad)  
 103329d:	(bad)  
 103329e:	(bad)  
 103329f:	(bad)  
 10332a0:	(bad)  
 10332a1:	(bad)  
 10332a2:	(bad)  
 10332a3:	(bad)  
 10332a4:	(bad)  
 10332a5:	(bad)  
 10332a6:	(bad)  
 10332a7:	(bad)  
 10332a8:	(bad)  
 10332a9:	(bad)  
 10332aa:	(bad)  
 10332ab:	(bad)  
 10332ac:	(bad)  
 10332ad:	(bad)  
 10332ae:	(bad)  
 10332af:	(bad)  
 10332b0:	(bad)  
 10332b1:	(bad)  
 10332b2:	(bad)  
 10332b3:	(bad)  
 10332b4:	(bad)  
 10332b5:	(bad)  
 10332b6:	(bad)  
 10332b7:	(bad)  
 10332b8:	(bad)  
 10332b9:	(bad)  
 10332ba:	(bad)  
 10332bb:	(bad)  
 10332bc:	(bad)  
 10332bd:	(bad)  
 10332be:	(bad)  
 10332bf:	(bad)  
 10332c0:	(bad)  
 10332c1:	(bad)  
 10332c2:	(bad)  
 10332c3:	(bad)  
 10332c4:	(bad)  
 10332c5:	(bad)  
 10332c6:	(bad)  
 10332c7:	(bad)  
 10332c8:	(bad)  
 10332c9:	(bad)  
 10332ca:	(bad)  
 10332cb:	(bad)  
 10332cc:	(bad)  
 10332cd:	(bad)  
 10332ce:	(bad)  
 10332cf:	(bad)  
 10332d0:	(bad)  
 10332d1:	(bad)  
 10332d2:	(bad)  
 10332d3:	(bad)  
 10332d4:	(bad)  
 10332d5:	(bad)  
 10332d6:	(bad)  
 10332d7:	(bad)  
 10332d8:	(bad)  
 10332d9:	(bad)  
 10332da:	(bad)  
 10332db:	(bad)  
 10332dc:	(bad)  
 10332dd:	(bad)  
 10332de:	(bad)  
 10332df:	(bad)  
 10332e0:	(bad)  
 10332e1:	(bad)  
 10332e2:	(bad)  
 10332e3:	(bad)  
 10332e4:	(bad)  
 10332e5:	(bad)  
 10332e6:	(bad)  
 10332e7:	(bad)  
 10332e8:	(bad)  
 10332e9:	(bad)  
 10332ea:	(bad)  
 10332eb:	(bad)  
 10332ec:	(bad)  
 10332ed:	(bad)  
 10332ee:	(bad)  
 10332ef:	(bad)  
 10332f0:	(bad)  
 10332f1:	(bad)  
 10332f2:	(bad)  
 10332f3:	(bad)  
 10332f4:	(bad)  
 10332f5:	(bad)  
 10332f6:	std    
 10332f7:	(bad)  
 10332f8:	(bad)  
 10332f9:	(bad)  
 10332fa:	(bad)  
 10332fb:	call   FWORD PTR [ebx-0x8b7a]
 1033301:	(bad)  
 1033302:	(bad)  
 1033303:	(bad)  
 1033304:	clc    
 1033305:	icebp  
 1033306:	in     al,dx
 1033307:	push   edi
 1033309:	out    dx,eax
 103330a:	jmp    0xe4ee290e
 103330f:	push   ebx
 1033311:	in     eax,0xdb
 1033313:	push   eax
 1033315:	loopne 0x10332ec
 1033317:	(bad)  
 1033318:	out    dx,eax
 1033319:	fmul   st(7),st
 103331b:	(bad)  
 103331c:	in     eax,dx
 103331d:	fmul   st,st(1)
 103331f:	(bad)  
 1033320:	jmp    0x10332f6
 1033322:	(bad)  
 1033325:	rol    eax,1
 1033327:	(bad)  
 1033328:	call   0x6e02effb
 103332d:	push   esi
 103332e:	inc    esp
 103332f:	jmp    ecx
 1033331:	into   
 1033332:	ret    
 1033333:	(bad)  
 1033334:	push   eax
 1033336:	call   0x5a70b43a
 103333b:	inc    DWORD PTR [eax]
	...
 1033369:	add    BYTE PTR [eax],al
 103336b:	add    dh,ch
 103336d:	in     eax,dx
 103336e:	in     al,dx
 103336f:	jmp    ebp
 1033371:	jecxz  0x1033355
 1033373:	jmp    ebp
 1033375:	jecxz  0x1033359
 1033377:	jmp    ebp
 1033379:	jecxz  0x103335d
 103337b:	jmp    ebp
 103337d:	jecxz  0x1033361
 103337f:	(bad)  
 1033380:	out    dx,al
 1033381:	in     eax,dx
 1033382:	in     al,dx
 1033383:	(bad)  
 1033384:	(bad)  
 1033385:	(bad)  
 1033386:	(bad)  
 1033387:	(bad)  
 1033388:	(bad)  
 1033389:	(bad)  
 103338a:	(bad)  
 103338b:	(bad)  
 103338c:	(bad)  
 103338d:	(bad)  
 103338e:	(bad)  
 103338f:	(bad)  
 1033390:	(bad)  
 1033391:	(bad)  
 1033392:	(bad)  
 1033393:	(bad)  
 1033394:	(bad)  
 1033395:	(bad)  
 1033396:	(bad)  
 1033397:	(bad)  
 1033398:	(bad)  
 1033399:	(bad)  
 103339a:	(bad)  
 103339b:	(bad)  
 103339c:	(bad)  
 103339d:	(bad)  
 103339e:	(bad)  
 103339f:	(bad)  
 10333a0:	(bad)  
 10333a1:	(bad)  
 10333a2:	(bad)  
 10333a3:	(bad)  
 10333a4:	(bad)  
 10333a5:	(bad)  
 10333a6:	(bad)  
 10333a7:	(bad)  
 10333a8:	(bad)  
 10333a9:	(bad)  
 10333aa:	(bad)  
 10333ab:	(bad)  
 10333ac:	(bad)  
 10333ad:	(bad)  
 10333ae:	(bad)  
 10333af:	(bad)  
 10333b0:	(bad)  
 10333b1:	(bad)  
 10333b2:	(bad)  
 10333b3:	(bad)  
 10333b4:	(bad)  
 10333b5:	(bad)  
 10333b6:	(bad)  
 10333b7:	(bad)  
 10333b8:	(bad)  
 10333b9:	(bad)  
 10333ba:	(bad)  
 10333bb:	(bad)  
 10333bc:	(bad)  
 10333bd:	(bad)  
 10333be:	(bad)  
 10333bf:	(bad)  
 10333c0:	(bad)  
 10333c1:	(bad)  
 10333c2:	(bad)  
 10333c3:	(bad)  
 10333c4:	(bad)  
 10333c5:	(bad)  
 10333c6:	(bad)  
 10333c7:	(bad)  
 10333c8:	(bad)  
 10333c9:	(bad)  
 10333ca:	(bad)  
 10333cb:	(bad)  
 10333cc:	(bad)  
 10333cd:	(bad)  
 10333ce:	(bad)  
 10333cf:	(bad)  
 10333d0:	(bad)  
 10333d1:	(bad)  
 10333d2:	(bad)  
 10333d3:	(bad)  
 10333d4:	(bad)  
 10333d5:	(bad)  
 10333d6:	(bad)  
 10333d7:	(bad)  
 10333d8:	(bad)  
 10333d9:	(bad)  
 10333da:	(bad)  
 10333db:	(bad)  
 10333dc:	(bad)  
 10333dd:	(bad)  
 10333de:	(bad)  
 10333df:	(bad)  
 10333e0:	(bad)  
 10333e1:	(bad)  
 10333e2:	(bad)  
 10333e3:	(bad)  
 10333e4:	(bad)  
 10333e5:	(bad)  
 10333e6:	(bad)  
 10333e7:	(bad)  
 10333e8:	(bad)  
 10333e9:	(bad)  
 10333ea:	(bad)  
 10333eb:	(bad)  
 10333ec:	(bad)  
 10333ed:	(bad)  
 10333ee:	(bad)  
 10333ef:	(bad)  
 10333f0:	(bad)  
 10333f1:	(bad)  
 10333f2:	(bad)  
 10333f3:	(bad)  
 10333f4:	(bad)  
 10333f5:	(bad)  
 10333f6:	(bad)  
 10333f7:	(bad)  
 10333f8:	(bad)  
 10333f9:	(bad)  
 10333fa:	std    
 10333fb:	call   FWORD PTR [ebp-0x8979]
 1033401:	(bad)  
 1033402:	(bad)  
 1033403:	(bad)  
 1033404:	sti    
 1033405:	div    ebx
 1033407:	(bad)  
 1033408:	stc    
 1033409:	repz out dx,al
 103340b:	(bad)  
 103340c:	clc    
 103340d:	in     eax,dx
 103340e:	out    0xff,eax
 1033410:	cmc    
 1033411:	jmp    0xe5f633f6
 1033416:	(bad)  
 1033418:	lock (bad) 
 103341b:	(bad)  
 103341c:	out    dx,al
 103341d:	fcmove st,st(5)
 103341f:	(bad)  
 1033420:	in     al,dx
 1033421:	(bad)  
 1033422:	enter  0xeaff,0xd2
 1033426:	ret    0x74ff
 1033429:	pop    esi
 103342a:	dec    esp
 103342b:	jmp    edx
 103342d:	rol    ch,1
 103342f:	(bad)  
 1033430:	push   eax
 1033432:	call   0xedf73436
 1033437:	inc    DWORD PTR [eax+0xff596d]
	...
 1033471:	add    BYTE PTR [eax],al
 1033473:	add    al,al
 1033475:	stos   BYTE PTR es:[edi],al
 1033476:	fwait
 1033477:	(bad)  
 1033478:	(bad)  
 1033479:	(bad)  
 103347a:	(bad)  
 103347b:	(bad)  
 103347c:	(bad)  
 103347d:	(bad)  
 103347e:	(bad)  
 103347f:	(bad)  
 1033480:	(bad)  
 1033481:	(bad)  
 1033482:	(bad)  
 1033483:	(bad)  
 1033484:	(bad)  
 1033485:	(bad)  
 1033486:	(bad)  
 1033487:	(bad)  
 1033488:	(bad)  
 1033489:	(bad)  
 103348a:	(bad)  
 103348b:	(bad)  
 103348c:	(bad)  
 103348d:	(bad)  
 103348e:	(bad)  
 103348f:	(bad)  
 1033490:	(bad)  
 1033491:	(bad)  
 1033492:	(bad)  
 1033493:	(bad)  
 1033494:	(bad)  
 1033495:	(bad)  
 1033496:	(bad)  
 1033497:	(bad)  
 1033498:	(bad)  
 1033499:	(bad)  
 103349a:	(bad)  
 103349b:	(bad)  
 103349c:	(bad)  
 103349d:	(bad)  
 103349e:	(bad)  
 103349f:	(bad)  
 10334a0:	(bad)  
 10334a1:	(bad)  
 10334a2:	(bad)  
 10334a3:	(bad)  
 10334a4:	(bad)  
 10334a5:	(bad)  
 10334a6:	(bad)  
 10334a7:	(bad)  
 10334a8:	(bad)  
 10334a9:	(bad)  
 10334aa:	(bad)  
 10334ab:	(bad)  
 10334ac:	(bad)  
 10334ad:	(bad)  
 10334ae:	(bad)  
 10334af:	(bad)  
 10334b0:	(bad)  
 10334b1:	(bad)  
 10334b2:	(bad)  
 10334b3:	(bad)  
 10334b4:	(bad)  
 10334b5:	(bad)  
 10334b6:	(bad)  
 10334b7:	(bad)  
 10334b8:	(bad)  
 10334b9:	(bad)  
 10334ba:	(bad)  
 10334bb:	(bad)  
 10334bc:	(bad)  
 10334bd:	(bad)  
 10334be:	(bad)  
 10334bf:	(bad)  
 10334c0:	(bad)  
 10334c1:	(bad)  
 10334c2:	(bad)  
 10334c3:	(bad)  
 10334c4:	(bad)  
 10334c5:	(bad)  
 10334c6:	(bad)  
 10334c7:	(bad)  
 10334c8:	(bad)  
 10334c9:	(bad)  
 10334ca:	(bad)  
 10334cb:	(bad)  
 10334cc:	(bad)  
 10334cd:	(bad)  
 10334ce:	(bad)  
 10334cf:	(bad)  
 10334d0:	(bad)  
 10334d1:	(bad)  
 10334d2:	(bad)  
 10334d3:	(bad)  
 10334d4:	(bad)  
 10334d5:	(bad)  
 10334d6:	(bad)  
 10334d7:	(bad)  
 10334d8:	(bad)  
 10334d9:	(bad)  
 10334da:	(bad)  
 10334db:	(bad)  
 10334dc:	(bad)  
 10334dd:	(bad)  
 10334de:	(bad)  
 10334df:	(bad)  
 10334e0:	(bad)  
 10334e1:	(bad)  
 10334e2:	(bad)  
 10334e3:	(bad)  
 10334e4:	(bad)  
 10334e5:	(bad)  
 10334e6:	(bad)  
 10334e7:	(bad)  
 10334e8:	(bad)  
 10334e9:	(bad)  
 10334ea:	(bad)  
 10334eb:	(bad)  
 10334ec:	(bad)  
 10334ed:	(bad)  
 10334ee:	(bad)  
 10334ef:	(bad)  
 10334f0:	(bad)  
 10334f1:	(bad)  
 10334f2:	(bad)  
 10334f3:	(bad)  
 10334f4:	(bad)  
 10334f5:	(bad)  
 10334f6:	(bad)  
 10334f7:	(bad)  
 10334f8:	(bad)  
 10334f9:	(bad)  
 10334fa:	(bad)  
 10334fb:	call   FWORD PTR [esi-0x8877]
 1033501:	(bad)  
 1033502:	(bad)  
 1033503:	(bad)  
 1033504:	cld    
 1033505:	cli    
 1033506:	clc    
 1033507:	(bad)  
 1033508:	sti    
 1033509:	cmc    
 103350a:	repnz (bad) 
 103350c:	clc    
 103350d:	lock jmp 0x103350f
 1033510:	imul   bl
 1033512:	in     al,0xff
 1033514:	repz in eax,0xdd
 1033517:	push   ecx
 1033519:	loope  0x10334f1
 103351b:	(bad)  
 103351c:	out    dx,eax
 103351d:	fmul   st(7),st
 103351f:	(bad)  
 1033520:	in     al,dx
 1033521:	xlat   BYTE PTR ds:[ebx]
 1033522:	leave  
 1033523:	(bad)  
 1033524:	jge    0x103358c
 1033526:	push   ebx
 1033527:	jmp    ebx
 1033529:	rol    dh,cl
 103352b:	(bad)  
 103352c:	push   ecx
 103352e:	jmp    0xedf73532
 1033533:	(bad)  
 1033534:	push   ebp
 1033536:	out    dx,eax
 1033537:	inc    DWORD PTR [eax+0xff596d]
	...
 1033571:	add    BYTE PTR [eax],al
 1033573:	add    al,al
 1033575:	stos   BYTE PTR es:[edi],al
 1033576:	fwait
 1033577:	(bad)  
 1033578:	(bad)  
 1033579:	(bad)  
 103357a:	(bad)  
 103357b:	(bad)  
 103357c:	(bad)  
 103357d:	(bad)  
 103357e:	(bad)  
 103357f:	(bad)  
 1033580:	(bad)  
 1033581:	(bad)  
 1033582:	(bad)  
 1033583:	(bad)  
 1033584:	(bad)  
 1033585:	(bad)  
 1033586:	(bad)  
 1033587:	(bad)  
 1033588:	(bad)  
 1033589:	(bad)  
 103358a:	(bad)  
 103358b:	(bad)  
 103358c:	(bad)  
 103358d:	(bad)  
 103358e:	(bad)  
 103358f:	(bad)  
 1033590:	(bad)  
 1033591:	(bad)  
 1033592:	(bad)  
 1033593:	(bad)  
 1033594:	(bad)  
 1033595:	(bad)  
 1033596:	(bad)  
 1033597:	(bad)  
 1033598:	(bad)  
 1033599:	(bad)  
 103359a:	(bad)  
 103359b:	(bad)  
 103359c:	(bad)  
 103359d:	(bad)  
 103359e:	(bad)  
 103359f:	(bad)  
 10335a0:	(bad)  
 10335a1:	(bad)  
 10335a2:	(bad)  
 10335a3:	(bad)  
 10335a4:	(bad)  
 10335a5:	(bad)  
 10335a6:	(bad)  
 10335a7:	(bad)  
 10335a8:	(bad)  
 10335a9:	(bad)  
 10335aa:	(bad)  
 10335ab:	(bad)  
 10335ac:	(bad)  
 10335ad:	(bad)  
 10335ae:	(bad)  
 10335af:	(bad)  
 10335b0:	(bad)  
 10335b1:	(bad)  
 10335b2:	(bad)  
 10335b3:	(bad)  
 10335b4:	(bad)  
 10335b5:	(bad)  
 10335b6:	(bad)  
 10335b7:	(bad)  
 10335b8:	(bad)  
 10335b9:	(bad)  
 10335ba:	(bad)  
 10335bb:	(bad)  
 10335bc:	(bad)  
 10335bd:	(bad)  
 10335be:	(bad)  
 10335bf:	(bad)  
 10335c0:	(bad)  
 10335c1:	(bad)  
 10335c2:	(bad)  
 10335c3:	(bad)  
 10335c4:	(bad)  
 10335c5:	(bad)  
 10335c6:	(bad)  
 10335c7:	(bad)  
 10335c8:	(bad)  
 10335c9:	(bad)  
 10335ca:	(bad)  
 10335cb:	(bad)  
 10335cc:	(bad)  
 10335cd:	(bad)  
 10335ce:	(bad)  
 10335cf:	(bad)  
 10335d0:	(bad)  
 10335d1:	(bad)  
 10335d2:	(bad)  
 10335d3:	(bad)  
 10335d4:	(bad)  
 10335d5:	(bad)  
 10335d6:	(bad)  
 10335d7:	(bad)  
 10335d8:	(bad)  
 10335d9:	(bad)  
 10335da:	(bad)  
 10335db:	(bad)  
 10335dc:	(bad)  
 10335dd:	(bad)  
 10335de:	(bad)  
 10335df:	(bad)  
 10335e0:	(bad)  
 10335e1:	(bad)  
 10335e2:	(bad)  
 10335e3:	(bad)  
 10335e4:	(bad)  
 10335e5:	(bad)  
 10335e6:	(bad)  
 10335e7:	(bad)  
 10335e8:	(bad)  
 10335e9:	(bad)  
 10335ea:	(bad)  
 10335eb:	(bad)  
 10335ec:	(bad)  
 10335ed:	(bad)  
 10335ee:	(bad)  
 10335ef:	(bad)  
 10335f0:	(bad)  
 10335f1:	(bad)  
 10335f2:	(bad)  
 10335f3:	(bad)  
 10335f4:	(bad)  
 10335f5:	(bad)  
 10335f6:	(bad)  
 10335f7:	(bad)  
 10335f8:	(bad)  
 10335f9:	(bad)  
 10335fa:	(bad)  
 10335fb:	jmp    DWORD PTR [eax-0x8776]
 1033601:	(bad)  
 1033602:	(bad)  
 1033603:	(bad)  
 1033604:	std    
 1033605:	stc    
 1033606:	idiv   edi
 1033608:	cli    
 1033609:	cmc    
 103360a:	repnz (bad) 
 103360c:	clc    
 103360d:	icebp  
 103360e:	jmp    0x103360f
 1033610:	cmc    
 1033611:	jmp    0x10335f7
 1033613:	push   ebx
 1033615:	out    0xdd,al
 1033617:	push   ecx
 1033619:	loopne 0x10335f1
 103361b:	(bad)  
 103361c:	out    dx,eax
 103361d:	fmul   st(6),st
 103361f:	inc    DWORD PTR [esi+ebp*2-0x2b1a00a4]
 1033626:	enter  0xffff,0xf1
 103362a:	jmp    0xedf7362e
 103362f:	(bad)  
 1033630:	push   ebp
 1033632:	out    dx,eax
 1033633:	(bad)  
 1033634:	push   edi
 1033636:	repz inc DWORD PTR [eax+0xff596d]
	...
 1033669:	add    BYTE PTR [eax],al
 103366b:	add    BYTE PTR [ebp-0x72005250],dh
 1033671:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1033677:	dec    DWORD PTR [ebp-0x72007e7b]
 103367d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1033683:	(bad)  
 1033684:	(bad)  
 1033685:	(bad)  
 1033686:	(bad)  
 1033687:	(bad)  
 1033688:	(bad)  
 1033689:	(bad)  
 103368a:	(bad)  
 103368b:	(bad)  
 103368c:	(bad)  
 103368d:	(bad)  
 103368e:	(bad)  
 103368f:	(bad)  
 1033690:	(bad)  
 1033691:	(bad)  
 1033692:	(bad)  
 1033693:	(bad)  
 1033694:	(bad)  
 1033695:	(bad)  
 1033696:	(bad)  
 1033697:	(bad)  
 1033698:	(bad)  
 1033699:	(bad)  
 103369a:	(bad)  
 103369b:	(bad)  
 103369c:	(bad)  
 103369d:	(bad)  
 103369e:	(bad)  
 103369f:	(bad)  
 10336a0:	(bad)  
 10336a1:	(bad)  
 10336a2:	(bad)  
 10336a3:	(bad)  
 10336a4:	(bad)  
 10336a5:	(bad)  
 10336a6:	(bad)  
 10336a7:	(bad)  
 10336a8:	(bad)  
 10336a9:	(bad)  
 10336aa:	(bad)  
 10336ab:	(bad)  
 10336ac:	(bad)  
 10336ad:	(bad)  
 10336ae:	(bad)  
 10336af:	(bad)  
 10336b0:	(bad)  
 10336b1:	(bad)  
 10336b2:	(bad)  
 10336b3:	(bad)  
 10336b4:	(bad)  
 10336b5:	(bad)  
 10336b6:	(bad)  
 10336b7:	(bad)  
 10336b8:	(bad)  
 10336b9:	(bad)  
 10336ba:	(bad)  
 10336bb:	(bad)  
 10336bc:	(bad)  
 10336bd:	(bad)  
 10336be:	(bad)  
 10336bf:	(bad)  
 10336c0:	(bad)  
 10336c1:	(bad)  
 10336c2:	(bad)  
 10336c3:	(bad)  
 10336c4:	(bad)  
 10336c5:	(bad)  
 10336c6:	(bad)  
 10336c7:	(bad)  
 10336c8:	(bad)  
 10336c9:	(bad)  
 10336ca:	(bad)  
 10336cb:	(bad)  
 10336cc:	(bad)  
 10336cd:	(bad)  
 10336ce:	(bad)  
 10336cf:	(bad)  
 10336d0:	(bad)  
 10336d1:	(bad)  
 10336d2:	(bad)  
 10336d3:	(bad)  
 10336d4:	(bad)  
 10336d5:	(bad)  
 10336d6:	(bad)  
 10336d7:	(bad)  
 10336d8:	(bad)  
 10336d9:	(bad)  
 10336da:	(bad)  
 10336db:	(bad)  
 10336dc:	(bad)  
 10336dd:	(bad)  
 10336de:	(bad)  
 10336df:	(bad)  
 10336e0:	(bad)  
 10336e1:	(bad)  
 10336e2:	(bad)  
 10336e3:	(bad)  
 10336e4:	(bad)  
 10336e5:	(bad)  
 10336e6:	(bad)  
 10336e7:	(bad)  
 10336e8:	(bad)  
 10336e9:	(bad)  
 10336ea:	(bad)  
 10336eb:	(bad)  
 10336ec:	(bad)  
 10336ed:	(bad)  
 10336ee:	(bad)  
 10336ef:	(bad)  
 10336f0:	(bad)  
 10336f1:	(bad)  
 10336f2:	(bad)  
 10336f3:	(bad)  
 10336f4:	(bad)  
 10336f5:	(bad)  
 10336f6:	(bad)  
 10336f7:	(bad)  
 10336f8:	(bad)  
 10336f9:	(bad)  
 10336fa:	(bad)  
 10336fb:	jmp    DWORD PTR [ecx-0x8575]
 1033701:	(bad)  
 1033702:	(bad)  
 1033703:	(bad)  
 1033704:	cld    
 1033705:	stc    
 1033706:	idiv   edi
 1033708:	cli    
 1033709:	cmc    
 103370a:	icebp  
 103370b:	(bad)  
 103370c:	clc    
 103370d:	lock jmp 0xf3ff:0xe4ebf6ff
 1033715:	in     eax,0xdc
 1033717:	push   eax
 1033719:	(bad)  
 103371b:	dec    DWORD PTR [edi-0x19009988]
 1033721:	aad    0xca
 1033723:	(bad)  
 1033724:	push   ecx
 1033726:	jmp    0xedf8372a
 103372b:	(bad)  
 103372c:	push   ebp
 103372e:	lock (bad) 
 1033730:	push   edi
 1033732:	repz (bad) 
 1033734:	(bad)  
 1033735:	stc    
 1033736:	idiv   bh
 1033738:	sub    BYTE PTR [ebp+0x59],0xff
	...
 103376c:	ins    DWORD PTR es:[edi],dx
 103376d:	bound  ebx,QWORD PTR [ebx-0x1]
 1033770:	leave  
 1033771:	mov    ah,0xff
 1033774:	leave  
 1033775:	mov    ah,0xff
 1033778:	(bad)  
 1033779:	(bad)  
 103377a:	(bad)  
 103377b:	jmp    esp
 103377d:	jecxz  0x1033761
 103377f:	jmp    FWORD PTR [ebp+0x62]
 1033782:	pop    ebx
 1033783:	(bad)  
 1033784:	(bad)  
 1033785:	(bad)  
 1033786:	(bad)  
 1033787:	(bad)  
 1033788:	(bad)  
 1033789:	(bad)  
 103378a:	(bad)  
 103378b:	(bad)  
 103378c:	(bad)  
 103378d:	(bad)  
 103378e:	(bad)  
 103378f:	(bad)  
 1033790:	(bad)  
 1033791:	(bad)  
 1033792:	(bad)  
 1033793:	(bad)  
 1033794:	(bad)  
 1033795:	(bad)  
 1033796:	(bad)  
 1033797:	(bad)  
 1033798:	(bad)  
 1033799:	(bad)  
 103379a:	(bad)  
 103379b:	(bad)  
 103379c:	(bad)  
 103379d:	(bad)  
 103379e:	(bad)  
 103379f:	(bad)  
 10337a0:	(bad)  
 10337a1:	(bad)  
 10337a2:	(bad)  
 10337a3:	(bad)  
 10337a4:	(bad)  
 10337a5:	(bad)  
 10337a6:	(bad)  
 10337a7:	(bad)  
 10337a8:	(bad)  
 10337a9:	(bad)  
 10337aa:	(bad)  
 10337ab:	(bad)  
 10337ac:	(bad)  
 10337ad:	(bad)  
 10337ae:	(bad)  
 10337af:	(bad)  
 10337b0:	(bad)  
 10337b1:	(bad)  
 10337b2:	(bad)  
 10337b3:	(bad)  
 10337b4:	(bad)  
 10337b5:	(bad)  
 10337b6:	(bad)  
 10337b7:	(bad)  
 10337b8:	(bad)  
 10337b9:	(bad)  
 10337ba:	(bad)  
 10337bb:	(bad)  
 10337bc:	(bad)  
 10337bd:	(bad)  
 10337be:	(bad)  
 10337bf:	(bad)  
 10337c0:	(bad)  
 10337c1:	(bad)  
 10337c2:	(bad)  
 10337c3:	(bad)  
 10337c4:	(bad)  
 10337c5:	(bad)  
 10337c6:	(bad)  
 10337c7:	(bad)  
 10337c8:	(bad)  
 10337c9:	(bad)  
 10337ca:	(bad)  
 10337cb:	(bad)  
 10337cc:	(bad)  
 10337cd:	(bad)  
 10337ce:	(bad)  
 10337cf:	(bad)  
 10337d0:	(bad)  
 10337d1:	(bad)  
 10337d2:	(bad)  
 10337d3:	(bad)  
 10337d4:	(bad)  
 10337d5:	(bad)  
 10337d6:	(bad)  
 10337d7:	(bad)  
 10337d8:	(bad)  
 10337d9:	(bad)  
 10337da:	(bad)  
 10337db:	(bad)  
 10337dc:	(bad)  
 10337dd:	(bad)  
 10337de:	(bad)  
 10337df:	(bad)  
 10337e0:	(bad)  
 10337e1:	(bad)  
 10337e2:	(bad)  
 10337e3:	(bad)  
 10337e4:	(bad)  
 10337e5:	(bad)  
 10337e6:	(bad)  
 10337e7:	(bad)  
 10337e8:	(bad)  
 10337e9:	(bad)  
 10337ea:	(bad)  
 10337eb:	(bad)  
 10337ec:	(bad)  
 10337ed:	(bad)  
 10337ee:	(bad)  
 10337ef:	(bad)  
 10337f0:	(bad)  
 10337f1:	(bad)  
 10337f2:	(bad)  
 10337f3:	(bad)  
 10337f4:	(bad)  
 10337f5:	(bad)  
 10337f6:	(bad)  
 10337f7:	(bad)  
 10337f8:	(bad)  
 10337f9:	(bad)  
 10337fa:	(bad)  
 10337fb:	jmp    DWORD PTR [ebx-0x8474]
 1033801:	(bad)  
 1033802:	(bad)  
 1033803:	(bad)  
 1033804:	cld    
 1033805:	stc    
 1033806:	idiv   bh
 1033808:	cli    
 1033809:	hlt    
 103380a:	lock (bad) 
 103380c:	clc    
 103380d:	out    dx,al
 103380e:	jmp    0xe1ec2e12
 1033813:	push   edx
 1033815:	jecxz  0x10337f0
 1033817:	call   FWORD PTR [eax-0x16008f7f]
 103381d:	fmul   st,st(4)
 103381f:	(bad)  
 1033820:	push   ecx
 1033822:	jmp    0xffff:0xedf4ffff
 1033829:	div    al
 103382b:	(bad)  
 103382c:	(bad)  
 103382d:	clc    
 103382e:	repz (bad) 
 1033830:	(bad)  
 1033831:	cli    
 1033832:	cmc    
 1033833:	(bad)  
 1033834:	(bad)  
 1033835:	sti    
 1033836:	stc    
 1033837:	inc    DWORD PTR [eax+0xff596d]
	...
 1033869:	add    BYTE PTR [eax],al
 103386b:	add    dh,ch
 103386d:	in     eax,dx
 103386e:	in     al,dx
 103386f:	jmp    ebp
 1033871:	jecxz  0x1033855
 1033873:	jmp    ebp
 1033875:	jecxz  0x1033859
 1033877:	jmp    ebp
 1033879:	jecxz  0x103385d
 103387b:	jmp    ebp
 103387d:	jecxz  0x1033861
 103387f:	(bad)  
 1033880:	out    dx,al
 1033881:	in     eax,dx
 1033882:	in     al,dx
 1033883:	(bad)  
 1033884:	(bad)  
 1033885:	(bad)  
 1033886:	(bad)  
 1033887:	(bad)  
 1033888:	(bad)  
 1033889:	(bad)  
 103388a:	(bad)  
 103388b:	(bad)  
 103388c:	(bad)  
 103388d:	(bad)  
 103388e:	(bad)  
 103388f:	(bad)  
 1033890:	(bad)  
 1033891:	(bad)  
 1033892:	(bad)  
 1033893:	(bad)  
 1033894:	(bad)  
 1033895:	(bad)  
 1033896:	(bad)  
 1033897:	(bad)  
 1033898:	(bad)  
 1033899:	(bad)  
 103389a:	(bad)  
 103389b:	(bad)  
 103389c:	(bad)  
 103389d:	(bad)  
 103389e:	(bad)  
 103389f:	(bad)  
 10338a0:	(bad)  
 10338a1:	(bad)  
 10338a2:	(bad)  
 10338a3:	(bad)  
 10338a4:	(bad)  
 10338a5:	(bad)  
 10338a6:	(bad)  
 10338a7:	(bad)  
 10338a8:	(bad)  
 10338a9:	(bad)  
 10338aa:	(bad)  
 10338ab:	(bad)  
 10338ac:	(bad)  
 10338ad:	(bad)  
 10338ae:	(bad)  
 10338af:	(bad)  
 10338b0:	(bad)  
 10338b1:	(bad)  
 10338b2:	(bad)  
 10338b3:	(bad)  
 10338b4:	(bad)  
 10338b5:	(bad)  
 10338b6:	(bad)  
 10338b7:	(bad)  
 10338b8:	(bad)  
 10338b9:	(bad)  
 10338ba:	(bad)  
 10338bb:	(bad)  
 10338bc:	(bad)  
 10338bd:	(bad)  
 10338be:	(bad)  
 10338bf:	(bad)  
 10338c0:	(bad)  
 10338c1:	(bad)  
 10338c2:	(bad)  
 10338c3:	(bad)  
 10338c4:	(bad)  
 10338c5:	(bad)  
 10338c6:	(bad)  
 10338c7:	(bad)  
 10338c8:	(bad)  
 10338c9:	(bad)  
 10338ca:	(bad)  
 10338cb:	(bad)  
 10338cc:	(bad)  
 10338cd:	(bad)  
 10338ce:	(bad)  
 10338cf:	(bad)  
 10338d0:	(bad)  
 10338d1:	(bad)  
 10338d2:	(bad)  
 10338d3:	(bad)  
 10338d4:	(bad)  
 10338d5:	(bad)  
 10338d6:	(bad)  
 10338d7:	(bad)  
 10338d8:	(bad)  
 10338d9:	(bad)  
 10338da:	(bad)  
 10338db:	(bad)  
 10338dc:	(bad)  
 10338dd:	(bad)  
 10338de:	(bad)  
 10338df:	(bad)  
 10338e0:	(bad)  
 10338e1:	(bad)  
 10338e2:	(bad)  
 10338e3:	(bad)  
 10338e4:	(bad)  
 10338e5:	(bad)  
 10338e6:	(bad)  
 10338e7:	(bad)  
 10338e8:	(bad)  
 10338e9:	(bad)  
 10338ea:	(bad)  
 10338eb:	(bad)  
 10338ec:	(bad)  
 10338ed:	(bad)  
 10338ee:	(bad)  
 10338ef:	(bad)  
 10338f0:	(bad)  
 10338f1:	(bad)  
 10338f2:	(bad)  
 10338f3:	(bad)  
 10338f4:	(bad)  
 10338f5:	(bad)  
 10338f6:	(bad)  
 10338f7:	(bad)  
 10338f8:	(bad)  
 10338f9:	(bad)  
 10338fa:	(bad)  
 10338fb:	jmp    DWORD PTR [esi+ecx*4-0x83]
 1033902:	(bad)  
 1033903:	(bad)  
 1033904:	sti    
 1033905:	div    esp
 1033907:	(bad)  
 1033908:	clc    
 1033909:	repnz in eax,dx
 103390b:	push   esi
 103390d:	in     al,dx
 103390e:	in     eax,0xff
 1033910:	repz out 0xdd,al
 1033913:	jmp    DWORD PTR [eax-0x15008676]
 1033919:	fcmove st,st(6)
 103391b:	(bad)  
 103391c:	push   edx
 103391e:	jmp    0xffff:0xedf3ffff
 1033925:	div    cl
 1033927:	(bad)  
 1033928:	(bad)  
 1033929:	clc    
 103392a:	hlt    
 103392b:	(bad)  
 103392c:	(bad)  
 103392d:	cli    
 103392e:	idiv   bh
 1033930:	(bad)  
 1033931:	sti    
 1033932:	clc    
 1033933:	(bad)  
 1033934:	(bad)  
 1033935:	std    
 1033936:	sti    
 1033937:	inc    DWORD PTR [eax+0xff596d]
	...
 1033971:	add    BYTE PTR [eax],al
 1033973:	add    dl,al
 1033975:	lods   eax,DWORD PTR ds:[esi]
 1033976:	sahf   
 1033977:	(bad)  
 1033978:	(bad)  
 1033979:	(bad)  
 103397a:	(bad)  
 103397b:	(bad)  
 103397c:	(bad)  
 103397d:	(bad)  
 103397e:	(bad)  
 103397f:	(bad)  
 1033980:	(bad)  
 1033981:	(bad)  
 1033982:	(bad)  
 1033983:	(bad)  
 1033984:	(bad)  
 1033985:	(bad)  
 1033986:	(bad)  
 1033987:	(bad)  
 1033988:	(bad)  
 1033989:	(bad)  
 103398a:	(bad)  
 103398b:	(bad)  
 103398c:	(bad)  
 103398d:	(bad)  
 103398e:	(bad)  
 103398f:	(bad)  
 1033990:	(bad)  
 1033991:	(bad)  
 1033992:	(bad)  
 1033993:	(bad)  
 1033994:	(bad)  
 1033995:	(bad)  
 1033996:	(bad)  
 1033997:	(bad)  
 1033998:	(bad)  
 1033999:	(bad)  
 103399a:	(bad)  
 103399b:	(bad)  
 103399c:	(bad)  
 103399d:	(bad)  
 103399e:	(bad)  
 103399f:	(bad)  
 10339a0:	(bad)  
 10339a1:	(bad)  
 10339a2:	(bad)  
 10339a3:	(bad)  
 10339a4:	(bad)  
 10339a5:	(bad)  
 10339a6:	(bad)  
 10339a7:	(bad)  
 10339a8:	(bad)  
 10339a9:	(bad)  
 10339aa:	(bad)  
 10339ab:	(bad)  
 10339ac:	(bad)  
 10339ad:	(bad)  
 10339ae:	(bad)  
 10339af:	(bad)  
 10339b0:	(bad)  
 10339b1:	(bad)  
 10339b2:	(bad)  
 10339b3:	(bad)  
 10339b4:	(bad)  
 10339b5:	(bad)  
 10339b6:	(bad)  
 10339b7:	(bad)  
 10339b8:	(bad)  
 10339b9:	(bad)  
 10339ba:	(bad)  
 10339bb:	(bad)  
 10339bc:	(bad)  
 10339bd:	(bad)  
 10339be:	(bad)  
 10339bf:	(bad)  
 10339c0:	(bad)  
 10339c1:	(bad)  
 10339c2:	(bad)  
 10339c3:	(bad)  
 10339c4:	(bad)  
 10339c5:	(bad)  
 10339c6:	(bad)  
 10339c7:	(bad)  
 10339c8:	(bad)  
 10339c9:	(bad)  
 10339ca:	(bad)  
 10339cb:	(bad)  
 10339cc:	(bad)  
 10339cd:	(bad)  
 10339ce:	(bad)  
 10339cf:	(bad)  
 10339d0:	(bad)  
 10339d1:	(bad)  
 10339d2:	(bad)  
 10339d3:	(bad)  
 10339d4:	(bad)  
 10339d5:	(bad)  
 10339d6:	(bad)  
 10339d7:	(bad)  
 10339d8:	(bad)  
 10339d9:	(bad)  
 10339da:	(bad)  
 10339db:	(bad)  
 10339dc:	(bad)  
 10339dd:	(bad)  
 10339de:	(bad)  
 10339df:	(bad)  
 10339e0:	(bad)  
 10339e1:	(bad)  
 10339e2:	(bad)  
 10339e3:	(bad)  
 10339e4:	(bad)  
 10339e5:	(bad)  
 10339e6:	(bad)  
 10339e7:	(bad)  
 10339e8:	(bad)  
 10339e9:	(bad)  
 10339ea:	(bad)  
 10339eb:	(bad)  
 10339ec:	(bad)  
 10339ed:	(bad)  
 10339ee:	(bad)  
 10339ef:	(bad)  
 10339f0:	(bad)  
 10339f1:	(bad)  
 10339f2:	(bad)  
 10339f3:	(bad)  
 10339f4:	(bad)  
 10339f5:	(bad)  
 10339f6:	(bad)  
 10339f7:	(bad)  
 10339f8:	(bad)  
 10339f9:	(bad)  
 10339fa:	(bad)  
 10339fb:	jmp    DWORD PTR [esi-0x8171]
 1033a01:	(bad)  
 1033a02:	(bad)  
 1033a03:	(bad)  
 1033a04:	stc    
 1033a05:	repz out dx,al
 1033a07:	push   edi
 1033a09:	out    dx,al
 1033a0a:	call   0xe1ec2f0e
 1033a0f:	jmp    DWORD PTR [edi-0x13008070]
 1033a15:	(bad)  
 1033a17:	(bad)  
 1033a18:	push   edx
 1033a1a:	jmp    0x1033a1b
 1033a1c:	push   esp
 1033a1e:	out    dx,al
 1033a1f:	(bad)  
 1033a20:	push   esi
 1033a22:	icebp  
 1033a23:	(bad)  
 1033a24:	(bad)  
 1033a25:	clc    
 1033a26:	hlt    
 1033a27:	(bad)  
 1033a28:	(bad)  
 1033a29:	cli    
 1033a2a:	idiv   edi
 1033a2c:	(bad)  
 1033a2d:	sti    
 1033a2e:	stc    
 1033a2f:	(bad)  
 1033a30:	(bad)  
 1033a31:	cld    
 1033a32:	sti    
 1033a33:	(bad)  
 1033a34:	(bad)  
 1033a35:	(bad)  
 1033a36:	std    
 1033a37:	inc    DWORD PTR [eax+0xff596d]
	...
 1033a71:	add    BYTE PTR [eax],al
 1033a73:	add    bl,al
 1033a75:	scas   al,BYTE PTR es:[edi]
 1033a76:	lahf   
 1033a77:	(bad)  
 1033a78:	(bad)  
 1033a79:	(bad)  
 1033a7a:	(bad)  
 1033a7b:	(bad)  
 1033a7c:	(bad)  
 1033a7d:	(bad)  
 1033a7e:	(bad)  
 1033a7f:	(bad)  
 1033a80:	(bad)  
 1033a81:	(bad)  
 1033a82:	(bad)  
 1033a83:	(bad)  
 1033a84:	(bad)  
 1033a85:	(bad)  
 1033a86:	(bad)  
 1033a87:	(bad)  
 1033a88:	(bad)  
 1033a89:	(bad)  
 1033a8a:	(bad)  
 1033a8b:	(bad)  
 1033a8c:	(bad)  
 1033a8d:	(bad)  
 1033a8e:	(bad)  
 1033a8f:	(bad)  
 1033a90:	(bad)  
 1033a91:	(bad)  
 1033a92:	(bad)  
 1033a93:	(bad)  
 1033a94:	(bad)  
 1033a95:	(bad)  
 1033a96:	(bad)  
 1033a97:	(bad)  
 1033a98:	(bad)  
 1033a99:	(bad)  
 1033a9a:	(bad)  
 1033a9b:	(bad)  
 1033a9c:	(bad)  
 1033a9d:	(bad)  
 1033a9e:	(bad)  
 1033a9f:	(bad)  
 1033aa0:	(bad)  
 1033aa1:	(bad)  
 1033aa2:	(bad)  
 1033aa3:	(bad)  
 1033aa4:	(bad)  
 1033aa5:	(bad)  
 1033aa6:	(bad)  
 1033aa7:	(bad)  
 1033aa8:	(bad)  
 1033aa9:	(bad)  
 1033aaa:	(bad)  
 1033aab:	(bad)  
 1033aac:	(bad)  
 1033aad:	(bad)  
 1033aae:	(bad)  
 1033aaf:	(bad)  
 1033ab0:	(bad)  
 1033ab1:	(bad)  
 1033ab2:	(bad)  
 1033ab3:	(bad)  
 1033ab4:	(bad)  
 1033ab5:	(bad)  
 1033ab6:	(bad)  
 1033ab7:	(bad)  
 1033ab8:	(bad)  
 1033ab9:	(bad)  
 1033aba:	(bad)  
 1033abb:	(bad)  
 1033abc:	(bad)  
 1033abd:	(bad)  
 1033abe:	(bad)  
 1033abf:	(bad)  
 1033ac0:	(bad)  
 1033ac1:	(bad)  
 1033ac2:	(bad)  
 1033ac3:	(bad)  
 1033ac4:	(bad)  
 1033ac5:	(bad)  
 1033ac6:	(bad)  
 1033ac7:	(bad)  
 1033ac8:	(bad)  
 1033ac9:	(bad)  
 1033aca:	(bad)  
 1033acb:	(bad)  
 1033acc:	(bad)  
 1033acd:	(bad)  
 1033ace:	(bad)  
 1033acf:	(bad)  
 1033ad0:	(bad)  
 1033ad1:	(bad)  
 1033ad2:	(bad)  
 1033ad3:	(bad)  
 1033ad4:	(bad)  
 1033ad5:	(bad)  
 1033ad6:	(bad)  
 1033ad7:	(bad)  
 1033ad8:	(bad)  
 1033ad9:	(bad)  
 1033ada:	(bad)  
 1033adb:	(bad)  
 1033adc:	(bad)  
 1033add:	(bad)  
 1033ade:	(bad)  
 1033adf:	(bad)  
 1033ae0:	(bad)  
 1033ae1:	(bad)  
 1033ae2:	(bad)  
 1033ae3:	(bad)  
 1033ae4:	(bad)  
 1033ae5:	(bad)  
 1033ae6:	(bad)  
 1033ae7:	(bad)  
 1033ae8:	(bad)  
 1033ae9:	(bad)  
 1033aea:	(bad)  
 1033aeb:	(bad)  
 1033aec:	(bad)  
 1033aed:	(bad)  
 1033aee:	(bad)  
 1033aef:	(bad)  
 1033af0:	(bad)  
 1033af1:	(bad)  
 1033af2:	(bad)  
 1033af3:	(bad)  
 1033af4:	(bad)  
 1033af5:	(bad)  
 1033af6:	(bad)  
 1033af7:	(bad)  
 1033af8:	(bad)  
 1033af9:	(bad)  
 1033afa:	(bad)  
 1033afb:	jmp    DWORD PTR [edi-0x7f6f]
 1033b01:	(bad)  
 1033b02:	(bad)  
 1033b03:	push   edi
 1033b05:	out    dx,al
 1033b06:	out    0xff,eax
 1033b08:	cmc    
 1033b09:	jmp    0x95af3aef
 1033b0e:	test   bh,bh
 1033b10:	in     eax,dx
 1033b11:	fst    st(2)
 1033b13:	(bad)  
 1033b14:	push   edx
 1033b16:	jmp    0x1033b17
 1033b18:	push   esp
 1033b1a:	in     eax,dx
 1033b1b:	(bad)  
 1033b1c:	push   edi
 1033b1e:	icebp  
 1033b1f:	(bad)  
 1033b20:	(bad)  
 1033b21:	clc    
 1033b22:	hlt    
 1033b23:	(bad)  
 1033b24:	(bad)  
 1033b25:	stc    
 1033b26:	idiv   bh
 1033b28:	(bad)  
 1033b29:	cld    
 1033b2a:	stc    
 1033b2b:	(bad)  
 1033b2c:	(bad)  
 1033b2d:	cld    
 1033b2e:	sti    
 1033b2f:	(bad)  
 1033b30:	(bad)  
 1033b31:	(bad)  
 1033b32:	std    
 1033b33:	(bad)  
 1033b34:	(bad)  
 1033b35:	(bad)  
 1033b36:	(bad)  
 1033b37:	inc    DWORD PTR [eax+0xff596d]
	...
 1033b69:	add    BYTE PTR [eax],al
 1033b6b:	add    BYTE PTR [ebp-0x72005250],dh
 1033b71:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1033b77:	dec    DWORD PTR [ebp-0x72007e7b]
 1033b7d:	test   DWORD PTR [ecx-0x524f4a01],eax
 1033b83:	(bad)  
 1033b84:	(bad)  
 1033b85:	(bad)  
 1033b86:	(bad)  
 1033b87:	(bad)  
 1033b88:	(bad)  
 1033b89:	(bad)  
 1033b8a:	(bad)  
 1033b8b:	(bad)  
 1033b8c:	(bad)  
 1033b8d:	(bad)  
 1033b8e:	(bad)  
 1033b8f:	(bad)  
 1033b90:	(bad)  
 1033b91:	(bad)  
 1033b92:	(bad)  
 1033b93:	(bad)  
 1033b94:	(bad)  
 1033b95:	(bad)  
 1033b96:	(bad)  
 1033b97:	(bad)  
 1033b98:	(bad)  
 1033b99:	(bad)  
 1033b9a:	(bad)  
 1033b9b:	(bad)  
 1033b9c:	(bad)  
 1033b9d:	(bad)  
 1033b9e:	(bad)  
 1033b9f:	(bad)  
 1033ba0:	(bad)  
 1033ba1:	(bad)  
 1033ba2:	(bad)  
 1033ba3:	(bad)  
 1033ba4:	(bad)  
 1033ba5:	(bad)  
 1033ba6:	(bad)  
 1033ba7:	(bad)  
 1033ba8:	(bad)  
 1033ba9:	(bad)  
 1033baa:	(bad)  
 1033bab:	(bad)  
 1033bac:	(bad)  
 1033bad:	(bad)  
 1033bae:	(bad)  
 1033baf:	(bad)  
 1033bb0:	(bad)  
 1033bb1:	(bad)  
 1033bb2:	(bad)  
 1033bb3:	(bad)  
 1033bb4:	(bad)  
 1033bb5:	(bad)  
 1033bb6:	(bad)  
 1033bb7:	(bad)  
 1033bb8:	(bad)  
 1033bb9:	(bad)  
 1033bba:	(bad)  
 1033bbb:	(bad)  
 1033bbc:	(bad)  
 1033bbd:	(bad)  
 1033bbe:	(bad)  
 1033bbf:	(bad)  
 1033bc0:	(bad)  
 1033bc1:	(bad)  
 1033bc2:	(bad)  
 1033bc3:	(bad)  
 1033bc4:	(bad)  
 1033bc5:	(bad)  
 1033bc6:	(bad)  
 1033bc7:	(bad)  
 1033bc8:	(bad)  
 1033bc9:	(bad)  
 1033bca:	(bad)  
 1033bcb:	(bad)  
 1033bcc:	(bad)  
 1033bcd:	(bad)  
 1033bce:	(bad)  
 1033bcf:	(bad)  
 1033bd0:	(bad)  
 1033bd1:	(bad)  
 1033bd2:	(bad)  
 1033bd3:	(bad)  
 1033bd4:	(bad)  
 1033bd5:	(bad)  
 1033bd6:	(bad)  
 1033bd7:	(bad)  
 1033bd8:	(bad)  
 1033bd9:	(bad)  
 1033bda:	(bad)  
 1033bdb:	(bad)  
 1033bdc:	(bad)  
 1033bdd:	(bad)  
 1033bde:	(bad)  
 1033bdf:	(bad)  
 1033be0:	(bad)  
 1033be1:	(bad)  
 1033be2:	(bad)  
 1033be3:	(bad)  
 1033be4:	(bad)  
 1033be5:	(bad)  
 1033be6:	(bad)  
 1033be7:	(bad)  
 1033be8:	(bad)  
 1033be9:	(bad)  
 1033bea:	(bad)  
 1033beb:	(bad)  
 1033bec:	(bad)  
 1033bed:	(bad)  
 1033bee:	(bad)  
 1033bef:	(bad)  
 1033bf0:	(bad)  
 1033bf1:	(bad)  
 1033bf2:	(bad)  
 1033bf3:	(bad)  
 1033bf4:	(bad)  
 1033bf5:	(bad)  
 1033bf6:	(bad)  
 1033bf7:	(bad)  
 1033bf8:	(bad)  
 1033bf9:	(bad)  
 1033bfa:	(bad)  
 1033bfb:	jmp    FWORD PTR [ecx-0x7d6d]
 1033c01:	(bad)  
 1033c02:	(bad)  
 1033c03:	push   esp
 1033c05:	jmp    0x98b33bea
 1033c0a:	xchg   edi,edi
 1033c0c:	out    dx,al
 1033c0d:	(bad)  
 1033c0f:	(bad)  
 1033c10:	push   edx
 1033c12:	jmp    0x1033c13
 1033c14:	push   esp
 1033c16:	out    dx,al
 1033c17:	(bad)  
 1033c18:	push   edi
 1033c1a:	repnz (bad) 
 1033c1c:	(bad)  
 1033c1d:	clc    
 1033c1e:	hlt    
 1033c1f:	(bad)  
 1033c20:	(bad)  
 1033c21:	cli    
 1033c22:	idiv   edi
 1033c24:	(bad)  
 1033c25:	sti    
 1033c26:	stc    
 1033c27:	(bad)  
 1033c28:	(bad)  
 1033c29:	std    
 1033c2a:	cld    
 1033c2b:	(bad)  
 1033c2c:	(bad)  
 1033c2d:	(bad)  
 1033c2e:	std    
 1033c2f:	(bad)  
 1033c30:	(bad)  
 1033c31:	(bad)  
 1033c32:	(bad)  
 1033c33:	(bad)  
 1033c34:	(bad)  
 1033c35:	(bad)  
 1033c36:	(bad)  
 1033c37:	inc    DWORD PTR [eax+0xff596d]
	...
 1033c69:	add    BYTE PTR [eax],al
 1033c6b:	add    BYTE PTR [ebp+0x62],ch
 1033c6e:	pop    ebx
 1033c6f:	dec    ecx
 1033c71:	mov    ah,0xff
 1033c74:	leave  
 1033c75:	mov    ah,0xff
 1033c78:	(bad)  
 1033c79:	(bad)  
 1033c7a:	(bad)  
 1033c7b:	jmp    esp
 1033c7d:	jecxz  0x1033c61
 1033c7f:	jmp    FWORD PTR [ebp+0x62]
 1033c82:	pop    ebx
 1033c83:	(bad)  
 1033c84:	(bad)  
 1033c85:	(bad)  
 1033c86:	(bad)  
 1033c87:	(bad)  
 1033c88:	(bad)  
 1033c89:	(bad)  
 1033c8a:	(bad)  
 1033c8b:	(bad)  
 1033c8c:	(bad)  
 1033c8d:	(bad)  
 1033c8e:	(bad)  
 1033c8f:	(bad)  
 1033c90:	(bad)  
 1033c91:	(bad)  
 1033c92:	(bad)  
 1033c93:	(bad)  
 1033c94:	(bad)  
 1033c95:	(bad)  
 1033c96:	(bad)  
 1033c97:	(bad)  
 1033c98:	(bad)  
 1033c99:	(bad)  
 1033c9a:	(bad)  
 1033c9b:	(bad)  
 1033c9c:	(bad)  
 1033c9d:	(bad)  
 1033c9e:	(bad)  
 1033c9f:	(bad)  
 1033ca0:	(bad)  
 1033ca1:	(bad)  
 1033ca2:	(bad)  
 1033ca3:	(bad)  
 1033ca4:	(bad)  
 1033ca5:	(bad)  
 1033ca6:	(bad)  
 1033ca7:	(bad)  
 1033ca8:	(bad)  
 1033ca9:	(bad)  
 1033caa:	(bad)  
 1033cab:	(bad)  
 1033cac:	(bad)  
 1033cad:	(bad)  
 1033cae:	(bad)  
 1033caf:	(bad)  
 1033cb0:	(bad)  
 1033cb1:	(bad)  
 1033cb2:	(bad)  
 1033cb3:	(bad)  
 1033cb4:	(bad)  
 1033cb5:	(bad)  
 1033cb6:	(bad)  
 1033cb7:	(bad)  
 1033cb8:	(bad)  
 1033cb9:	(bad)  
 1033cba:	(bad)  
 1033cbb:	(bad)  
 1033cbc:	(bad)  
 1033cbd:	(bad)  
 1033cbe:	(bad)  
 1033cbf:	(bad)  
 1033cc0:	(bad)  
 1033cc1:	(bad)  
 1033cc2:	(bad)  
 1033cc3:	(bad)  
 1033cc4:	(bad)  
 1033cc5:	(bad)  
 1033cc6:	(bad)  
 1033cc7:	(bad)  
 1033cc8:	(bad)  
 1033cc9:	(bad)  
 1033cca:	(bad)  
 1033ccb:	(bad)  
 1033ccc:	(bad)  
 1033ccd:	(bad)  
 1033cce:	(bad)  
 1033ccf:	(bad)  
 1033cd0:	(bad)  
 1033cd1:	(bad)  
 1033cd2:	(bad)  
 1033cd3:	(bad)  
 1033cd4:	(bad)  
 1033cd5:	(bad)  
 1033cd6:	(bad)  
 1033cd7:	(bad)  
 1033cd8:	(bad)  
 1033cd9:	(bad)  
 1033cda:	(bad)  
 1033cdb:	(bad)  
 1033cdc:	(bad)  
 1033cdd:	(bad)  
 1033cde:	(bad)  
 1033cdf:	(bad)  
 1033ce0:	(bad)  
 1033ce1:	(bad)  
 1033ce2:	(bad)  
 1033ce3:	(bad)  
 1033ce4:	(bad)  
 1033ce5:	(bad)  
 1033ce6:	(bad)  
 1033ce7:	(bad)  
 1033ce8:	(bad)  
 1033ce9:	(bad)  
 1033cea:	(bad)  
 1033ceb:	(bad)  
 1033cec:	(bad)  
 1033ced:	(bad)  
 1033cee:	(bad)  
 1033cef:	(bad)  
 1033cf0:	(bad)  
 1033cf1:	(bad)  
 1033cf2:	(bad)  
 1033cf3:	(bad)  
 1033cf4:	(bad)  
 1033cf5:	(bad)  
 1033cf6:	(bad)  
 1033cf7:	(bad)  
 1033cf8:	(bad)  
 1033cf9:	(bad)  
 1033cfa:	(bad)  
 1033cfb:	push   DWORD PTR [eax-0xa007667]
 1033d01:	call   0x9ab53ce6
 1033d06:	mov    edi,edi
 1033d08:	out    dx,eax
 1033d09:	(bad)  
 1033d0b:	(bad)  
 1033d0c:	push   edx
 1033d0e:	in     al,dx
 1033d0f:	(bad)  
 1033d10:	push   esp
 1033d12:	out    dx,al
 1033d13:	(bad)  
 1033d14:	push   edi
 1033d16:	icebp  
 1033d17:	(bad)  
 1033d18:	(bad)  
 1033d19:	clc    
 1033d1a:	hlt    
 1033d1b:	(bad)  
 1033d1c:	(bad)  
 1033d1d:	cli    
 1033d1e:	idiv   edi
 1033d20:	(bad)  
 1033d21:	cld    
 1033d22:	stc    
 1033d23:	(bad)  
 1033d24:	(bad)  
 1033d25:	std    
 1033d26:	cld    
 1033d27:	(bad)  
 1033d28:	(bad)  
 1033d29:	(bad)  
 1033d2a:	(bad)  
 1033d2b:	(bad)  
 1033d2c:	(bad)  
 1033d2d:	(bad)  
 1033d2e:	(bad)  
 1033d2f:	(bad)  
 1033d30:	(bad)  
 1033d31:	(bad)  
 1033d32:	(bad)  
 1033d33:	(bad)  
 1033d34:	(bad)  
 1033d35:	(bad)  
 1033d36:	(bad)  
 1033d37:	inc    DWORD PTR [eax+0xff596d]
	...
 1033d69:	add    BYTE PTR [eax],al
 1033d6b:	add    dh,ch
 1033d6d:	in     eax,dx
 1033d6e:	in     al,dx
 1033d6f:	jmp    ebp
 1033d71:	jecxz  0x1033d55
 1033d73:	jmp    ebp
 1033d75:	jecxz  0x1033d59
 1033d77:	jmp    ebp
 1033d79:	jecxz  0x1033d5d
 1033d7b:	jmp    ebp
 1033d7d:	jecxz  0x1033d61
 1033d7f:	(bad)  
 1033d80:	out    dx,al
 1033d81:	in     eax,dx
 1033d82:	in     al,dx
 1033d83:	(bad)  
 1033d84:	(bad)  
 1033d85:	(bad)  
 1033d86:	(bad)  
 1033d87:	(bad)  
 1033d88:	(bad)  
 1033d89:	(bad)  
 1033d8a:	(bad)  
 1033d8b:	(bad)  
 1033d8c:	(bad)  
 1033d8d:	(bad)  
 1033d8e:	(bad)  
 1033d8f:	(bad)  
 1033d90:	(bad)  
 1033d91:	(bad)  
 1033d92:	(bad)  
 1033d93:	(bad)  
 1033d94:	(bad)  
 1033d95:	(bad)  
 1033d96:	(bad)  
 1033d97:	(bad)  
 1033d98:	(bad)  
 1033d99:	(bad)  
 1033d9a:	(bad)  
 1033d9b:	(bad)  
 1033d9c:	(bad)  
 1033d9d:	(bad)  
 1033d9e:	(bad)  
 1033d9f:	(bad)  
 1033da0:	(bad)  
 1033da1:	(bad)  
 1033da2:	(bad)  
 1033da3:	(bad)  
 1033da4:	(bad)  
 1033da5:	(bad)  
 1033da6:	(bad)  
 1033da7:	(bad)  
 1033da8:	(bad)  
 1033da9:	(bad)  
 1033daa:	(bad)  
 1033dab:	(bad)  
 1033dac:	(bad)  
 1033dad:	(bad)  
 1033dae:	(bad)  
 1033daf:	(bad)  
 1033db0:	(bad)  
 1033db1:	(bad)  
 1033db2:	(bad)  
 1033db3:	(bad)  
 1033db4:	(bad)  
 1033db5:	(bad)  
 1033db6:	(bad)  
 1033db7:	(bad)  
 1033db8:	(bad)  
 1033db9:	(bad)  
 1033dba:	(bad)  
 1033dbb:	(bad)  
 1033dbc:	(bad)  
 1033dbd:	(bad)  
 1033dbe:	(bad)  
 1033dbf:	(bad)  
 1033dc0:	(bad)  
 1033dc1:	(bad)  
 1033dc2:	(bad)  
 1033dc3:	(bad)  
 1033dc4:	(bad)  
 1033dc5:	(bad)  
 1033dc6:	(bad)  
 1033dc7:	(bad)  
 1033dc8:	(bad)  
 1033dc9:	(bad)  
 1033dca:	(bad)  
 1033dcb:	(bad)  
 1033dcc:	(bad)  
 1033dcd:	(bad)  
 1033dce:	(bad)  
 1033dcf:	(bad)  
 1033dd0:	(bad)  
 1033dd1:	(bad)  
 1033dd2:	(bad)  
 1033dd3:	(bad)  
 1033dd4:	(bad)  
 1033dd5:	(bad)  
 1033dd6:	(bad)  
 1033dd7:	(bad)  
 1033dd8:	(bad)  
 1033dd9:	(bad)  
 1033dda:	(bad)  
 1033ddb:	(bad)  
 1033ddc:	(bad)  
 1033ddd:	(bad)  
 1033dde:	(bad)  
 1033ddf:	(bad)  
 1033de0:	(bad)  
 1033de1:	(bad)  
 1033de2:	(bad)  
 1033de3:	(bad)  
 1033de4:	(bad)  
 1033de5:	(bad)  
 1033de6:	(bad)  
 1033de7:	(bad)  
 1033de8:	(bad)  
 1033de9:	(bad)  
 1033dea:	(bad)  
 1033deb:	(bad)  
 1033dec:	(bad)  
 1033ded:	(bad)  
 1033dee:	(bad)  
 1033def:	(bad)  
 1033df0:	(bad)  
 1033df1:	(bad)  
 1033df2:	(bad)  
 1033df3:	(bad)  
 1033df4:	(bad)  
 1033df5:	(bad)  
 1033df6:	(bad)  
 1033df7:	(bad)  
 1033df8:	(bad)  
 1033df9:	(bad)  
 1033dfa:	(bad)  
 1033dfb:	push   DWORD PTR [ebx-0x4c007465]
 1033e01:	fwait
 1033e02:	mov    edi,edi
 1033e04:	out    dx,eax
 1033e05:	(bad)  
 1033e07:	(bad)  
 1033e08:	push   ebx
 1033e0a:	jmp    0x1033e0b
 1033e0c:	push   ebp
 1033e0e:	out    dx,eax
 1033e0f:	(bad)  
 1033e10:	push   edi
 1033e12:	icebp  
 1033e13:	(bad)  
 1033e14:	(bad)  
 1033e15:	stc    
 1033e16:	cmc    
 1033e17:	(bad)  
 1033e18:	(bad)  
 1033e19:	cli    
 1033e1a:	idiv   edi
 1033e1c:	(bad)  
 1033e1d:	cld    
 1033e1e:	cli    
 1033e1f:	(bad)  
 1033e20:	(bad)  
 1033e21:	std    
 1033e22:	cld    
 1033e23:	(bad)  
 1033e24:	(bad)  
 1033e25:	(bad)  
 1033e26:	(bad)  
 1033e27:	(bad)  
 1033e28:	(bad)  
 1033e29:	(bad)  
 1033e2a:	(bad)  
 1033e2b:	(bad)  
 1033e2c:	(bad)  
 1033e2d:	(bad)  
 1033e2e:	(bad)  
 1033e2f:	(bad)  
 1033e30:	(bad)  
 1033e31:	(bad)  
 1033e32:	(bad)  
 1033e33:	(bad)  
 1033e34:	(bad)  
 1033e35:	(bad)  
 1033e36:	(bad)  
 1033e37:	inc    DWORD PTR [eax+0xff596d]
	...
 1033e71:	add    BYTE PTR [eax],al
 1033e73:	add    ch,al
 1033e75:	mov    al,0xa1
 1033e77:	inc    ebp
 1033e79:	mov    al,0xa1
 1033e7b:	inc    esp
 1033e7d:	scas   eax,DWORD PTR es:[edi]
 1033e7e:	mov    al,ds:0xa0afc4ff
 1033e83:	inc    ebx
 1033e85:	scas   al,BYTE PTR es:[edi]
 1033e86:	lahf   
 1033e87:	inc    ebx
 1033e89:	lods   eax,DWORD PTR ds:[esi]
 1033e8a:	sahf   
 1033e8b:	inc    ebx
 1033e8d:	lods   eax,DWORD PTR ds:[esi]
 1033e8e:	sahf   
 1033e8f:	inc    edx
 1033e91:	lods   al,BYTE PTR ds:[esi]
 1033e92:	popf   
 1033e93:	inc    ecx
 1033e95:	stos   DWORD PTR es:[edi],eax
 1033e96:	pushf  
 1033e97:	inc    ecx
 1033e99:	stos   DWORD PTR es:[edi],eax
 1033e9a:	pushf  
 1033e9b:	inc    eax
 1033e9d:	stos   DWORD PTR es:[edi],eax
 1033e9e:	fwait
 1033e9f:	inc    eax
 1033ea1:	stos   BYTE PTR es:[edi],al
 1033ea2:	fwait
 1033ea3:	inc    eax
 1033ea5:	stos   BYTE PTR es:[edi],al
 1033ea6:	fwait
 1033ea7:	(bad)  
 1033ea8:	mov    edi,0xbeff99a9
 1033ead:	test   al,0x99
 1033eaf:	(bad)  
 1033eb0:	mov    esi,0xbdff98a8
 1033eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1033eb6:	xchg   edi,eax
 1033eb7:	(bad)  
 1033eb8:	mov    esp,0xbcff97a7
 1033ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1033ebe:	xchg   esi,eax
 1033ebf:	(bad)  
 1033ec0:	mov    ebx,0xbbff96a5
 1033ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1033ec6:	xchg   ebp,eax
 1033ec7:	(bad)  
 1033ec8:	mov    esp,0xbbff96a5
 1033ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1033ece:	xchg   ebp,eax
 1033ecf:	(bad)  
 1033ed0:	mov    edx,0xbaff94a5
 1033ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1033ed6:	xchg   esp,eax
 1033ed7:	(bad)  
 1033ed8:	mov    ecx,0xb9ff94a3
 1033edd:	mov    ds:0xa2b9ff93,al
 1033ee2:	xchg   edx,eax
 1033ee3:	push   DWORD PTR [edi-0x48006e5e]
 1033ee9:	mov    eax,ds:0xa0b6ff91
 1033eee:	nop
 1033eef:	jmp    FWORD PTR [esi-0x5200796a]
 1033ef5:	xchg   esi,eax
 1033ef6:	test   edi,edi
 1033ef8:	lods   eax,DWORD PTR ds:[esi]
 1033ef9:	xchg   ebp,eax
 1033efa:	test   edi,edi
 1033efc:	mov    ah,0x9c
 1033efe:	mov    edi,?
 1033f00:	mov    cl,0x99
 1033f02:	mov    edi,edi
 1033f04:	mov    dl,0x9a
 1033f06:	mov    bh,bh
 1033f08:	mov    cl,0x9a
 1033f0a:	mov    edi,edi
 1033f0c:	mov    cl,0x9a
 1033f0e:	mov    edi,edi
 1033f10:	mov    cl,0x99
 1033f12:	mov    edi,edi
 1033f14:	mov    al,0x99
 1033f16:	mov    edi,edi
 1033f18:	mov    al,0x98
 1033f1a:	mov    bh,bh
 1033f1c:	mov    al,0x98
 1033f1e:	mov    bh,bh
 1033f20:	scas   al,BYTE PTR es:[edi]
 1033f21:	cwde   
 1033f22:	xchg   edi,edi
 1033f24:	scas   eax,DWORD PTR es:[edi]
 1033f25:	xchg   edi,eax
 1033f26:	xchg   edi,edi
 1033f28:	scas   al,BYTE PTR es:[edi]
 1033f29:	xchg   edi,eax
 1033f2a:	xchg   bh,bh
 1033f2c:	scas   al,BYTE PTR es:[edi]
 1033f2d:	xchg   esi,eax
 1033f2e:	xchg   bh,bh
 1033f30:	lods   eax,DWORD PTR ds:[esi]
 1033f31:	xchg   esi,eax
 1033f32:	test   edi,edi
 1033f34:	lods   eax,DWORD PTR ds:[esi]
 1033f35:	xchg   ebp,eax
 1033f36:	test   edi,edi
 1033f38:	sub    BYTE PTR [ebp+0x59],0xff
	...
 103405c:	(bad)  
 103405d:	(bad)  
 103405e:	(bad)  
 103405f:	(bad)  
 1034060:	(bad)  
 1034061:	(bad)  
 1034062:	(bad)  
 1034063:	(bad)  
 1034064:	(bad)  
 1034065:	(bad)  
 1034066:	(bad)  
 1034067:	(bad)  
 1034068:	(bad)  
 1034069:	(bad)  
 103406a:	(bad)  
 103406b:	(bad)  
 103406c:	cld    
 103406d:	add    BYTE PTR [eax],al
 103406f:	add    BYTE PTR [eax],al
 1034071:	add    BYTE PTR [eax],al
 1034073:	(bad)  
 1034074:	cld    
 1034075:	add    BYTE PTR [eax],al
 1034077:	add    BYTE PTR [eax],al
 1034079:	add    BYTE PTR [eax],al
 103407b:	push   eax
 103407d:	add    BYTE PTR [eax],al
 103407f:	add    BYTE PTR [eax],al
 1034081:	add    BYTE PTR [eax],al
 1034083:	push   eax
 1034085:	add    BYTE PTR [eax],al
 1034087:	add    BYTE PTR [eax],al
 1034089:	add    BYTE PTR [eax],al
 103408b:	push   eax
 103408d:	add    BYTE PTR [eax],al
 103408f:	add    BYTE PTR [eax],al
 1034091:	add    BYTE PTR [eax],al
 1034093:	(bad)  
 1034094:	cld    
 1034095:	add    BYTE PTR [eax],al
 1034097:	add    BYTE PTR [eax],al
 1034099:	add    BYTE PTR [eax],al
 103409b:	(bad)  
 103409c:	cld    
 103409d:	add    BYTE PTR [eax],al
 103409f:	add    BYTE PTR [eax],al
 10340a1:	add    BYTE PTR [eax],al
 10340a3:	push   eax
 10340a5:	add    BYTE PTR [eax],al
 10340a7:	add    BYTE PTR [eax],al
 10340a9:	add    BYTE PTR [eax],al
 10340ab:	push   eax
 10340ad:	add    BYTE PTR [eax],al
 10340af:	add    BYTE PTR [eax],al
 10340b1:	add    BYTE PTR [eax],al
 10340b3:	push   eax
 10340b5:	add    BYTE PTR [eax],al
 10340b7:	add    BYTE PTR [eax],al
 10340b9:	add    BYTE PTR [eax],al
 10340bb:	(bad)  
 10340bc:	cld    
 10340bd:	add    BYTE PTR [eax],al
 10340bf:	add    BYTE PTR [eax],al
 10340c1:	add    BYTE PTR [eax],al
 10340c3:	(bad)  
 10340c4:	cld    
 10340c5:	add    BYTE PTR [eax],al
 10340c7:	add    BYTE PTR [eax],al
 10340c9:	add    BYTE PTR [eax],al
 10340cb:	push   eax
 10340cd:	add    BYTE PTR [eax],al
 10340cf:	add    BYTE PTR [eax],al
 10340d1:	add    BYTE PTR [eax],al
 10340d3:	push   eax
 10340d5:	add    BYTE PTR [eax],al
 10340d7:	add    BYTE PTR [eax],al
 10340d9:	add    BYTE PTR [eax],al
 10340db:	push   eax
 10340dd:	add    BYTE PTR [eax],al
 10340df:	add    BYTE PTR [eax],al
 10340e1:	add    BYTE PTR [eax],al
 10340e3:	(bad)  
 10340e4:	cld    
 10340e5:	add    BYTE PTR [eax],al
 10340e7:	add    BYTE PTR [eax],al
 10340e9:	add    BYTE PTR [eax],al
 10340eb:	(bad)  
 10340ec:	cld    
 10340ed:	add    BYTE PTR [eax],al
 10340ef:	add    BYTE PTR [eax],al
 10340f1:	add    BYTE PTR [eax],al
 10340f3:	push   eax
 10340f5:	add    BYTE PTR [eax],al
 10340f7:	add    BYTE PTR [eax],al
 10340f9:	add    BYTE PTR [eax],al
 10340fb:	push   eax
 10340fd:	add    BYTE PTR [eax],al
 10340ff:	add    BYTE PTR [eax],al
 1034101:	add    BYTE PTR [eax],al
 1034103:	push   eax
 1034105:	add    BYTE PTR [eax],al
 1034107:	add    BYTE PTR [eax],al
 1034109:	add    BYTE PTR [eax],al
 103410b:	(bad)  
 103410c:	cld    
 103410d:	add    BYTE PTR [eax],al
 103410f:	add    BYTE PTR [eax],al
 1034111:	add    BYTE PTR [eax],al
 1034113:	(bad)  
 1034114:	cld    
 1034115:	add    BYTE PTR [eax],al
 1034117:	add    BYTE PTR [eax],al
 1034119:	add    BYTE PTR [eax],al
 103411b:	push   eax
 103411d:	add    BYTE PTR [eax],al
 103411f:	add    BYTE PTR [eax],al
 1034121:	add    BYTE PTR [eax],al
 1034123:	push   eax
 1034125:	add    BYTE PTR [eax],al
 1034127:	add    BYTE PTR [eax],al
 1034129:	add    BYTE PTR [eax],al
 103412b:	push   eax
 103412d:	add    BYTE PTR [eax],al
 103412f:	add    BYTE PTR [eax],al
 1034131:	add    BYTE PTR [eax],al
 1034133:	(bad)  
 1034134:	cld    
 1034135:	add    BYTE PTR [eax],al
 1034137:	add    BYTE PTR [eax],al
 1034139:	add    BYTE PTR [eax],al
 103413b:	(bad)  
 103413c:	cld    
 103413d:	add    BYTE PTR [eax],al
 103413f:	add    BYTE PTR [eax],al
 1034141:	add    BYTE PTR [eax],al
 1034143:	push   eax
 1034145:	add    BYTE PTR [eax],al
 1034147:	add    BYTE PTR [eax],al
 1034149:	add    BYTE PTR [eax],al
 103414b:	push   eax
 103414d:	add    BYTE PTR [eax],al
 103414f:	add    BYTE PTR [eax],al
 1034151:	add    BYTE PTR [eax],al
 1034153:	push   eax
 1034155:	add    BYTE PTR [eax],al
 1034157:	add    BYTE PTR [eax],al
 1034159:	add    BYTE PTR [eax],al
 103415b:	(bad)  
 103415c:	cld    
 103415d:	add    BYTE PTR [eax],al
 103415f:	add    BYTE PTR [eax],al
 1034161:	add    BYTE PTR [eax],al
 1034163:	(bad)  
 1034164:	cld    
 1034165:	add    BYTE PTR [eax],al
 1034167:	add    BYTE PTR [eax],al
 1034169:	add    BYTE PTR [eax],al
 103416b:	push   eax
 103416d:	add    BYTE PTR [eax],al
 103416f:	add    BYTE PTR [eax],al
 1034171:	add    BYTE PTR [eax],al
 1034173:	push   eax
 1034175:	add    BYTE PTR [eax],al
 1034177:	add    BYTE PTR [eax],al
 1034179:	add    BYTE PTR [eax],al
 103417b:	push   eax
 103417d:	add    BYTE PTR [eax],al
 103417f:	add    BYTE PTR [eax],al
 1034181:	add    BYTE PTR [eax],al
 1034183:	(bad)  
 1034184:	cld    
 1034185:	add    BYTE PTR [eax],al
 1034187:	add    BYTE PTR [eax],al
 1034189:	add    BYTE PTR [eax],al
 103418b:	(bad)  
 103418c:	cld    
 103418d:	add    BYTE PTR [eax],al
 103418f:	add    BYTE PTR [eax],al
 1034191:	add    BYTE PTR [eax],al
 1034193:	push   eax
 1034195:	add    BYTE PTR [eax],al
 1034197:	add    BYTE PTR [eax],al
 1034199:	add    BYTE PTR [eax],al
 103419b:	push   eax
 103419d:	add    BYTE PTR [eax],al
 103419f:	add    BYTE PTR [eax],al
 10341a1:	add    BYTE PTR [eax],al
 10341a3:	push   eax
 10341a5:	add    BYTE PTR [eax],al
 10341a7:	add    BYTE PTR [eax],al
 10341a9:	add    BYTE PTR [eax],al
 10341ab:	(bad)  
 10341ac:	cld    
 10341ad:	add    BYTE PTR [eax],al
 10341af:	add    BYTE PTR [eax],al
 10341b1:	add    BYTE PTR [eax],al
 10341b3:	(bad)  
 10341b4:	cld    
 10341b5:	add    BYTE PTR [eax],al
 10341b7:	add    BYTE PTR [eax],al
 10341b9:	add    BYTE PTR [eax],al
 10341bb:	push   eax
 10341bd:	add    BYTE PTR [eax],al
 10341bf:	add    BYTE PTR [eax],al
 10341c1:	add    BYTE PTR [eax],al
 10341c3:	push   eax
 10341c5:	add    BYTE PTR [eax],al
 10341c7:	add    BYTE PTR [eax],al
 10341c9:	add    BYTE PTR [eax],al
 10341cb:	push   eax
 10341cd:	add    BYTE PTR [eax],al
 10341cf:	add    BYTE PTR [eax],al
 10341d1:	add    BYTE PTR [eax],al
 10341d3:	(bad)  
 10341d4:	cld    
 10341d5:	add    BYTE PTR [eax],al
 10341d7:	add    BYTE PTR [eax],al
 10341d9:	add    BYTE PTR [eax],al
 10341db:	(bad)  
 10341dc:	cld    
 10341dd:	add    BYTE PTR [eax],al
 10341df:	add    BYTE PTR [eax],al
 10341e1:	add    BYTE PTR [eax],al
 10341e3:	push   eax
 10341e5:	add    BYTE PTR [eax],al
 10341e7:	add    BYTE PTR [eax],al
 10341e9:	add    BYTE PTR [eax],al
 10341eb:	push   eax
 10341ed:	add    BYTE PTR [eax],al
 10341ef:	add    BYTE PTR [eax],al
 10341f1:	add    BYTE PTR [eax],al
 10341f3:	push   eax
 10341f5:	add    BYTE PTR [eax],al
 10341f7:	add    BYTE PTR [eax],al
 10341f9:	add    BYTE PTR [eax],al
 10341fb:	(bad)  
 10341fc:	cld    
 10341fd:	add    BYTE PTR [eax],al
 10341ff:	add    BYTE PTR [eax],al
 1034201:	add    BYTE PTR [eax],al
 1034203:	(bad)  
 1034204:	cld    
 1034205:	add    BYTE PTR [eax],al
 1034207:	add    BYTE PTR [eax],al
 1034209:	add    BYTE PTR [eax],al
 103420b:	push   eax
 103420d:	add    BYTE PTR [eax],al
 103420f:	add    BYTE PTR [eax],al
 1034211:	add    BYTE PTR [eax],al
 1034213:	push   eax
 1034215:	add    BYTE PTR [eax],al
 1034217:	add    BYTE PTR [eax],al
 1034219:	add    BYTE PTR [eax],al
 103421b:	push   eax
 103421d:	add    BYTE PTR [eax],al
 103421f:	add    BYTE PTR [eax],al
 1034221:	add    BYTE PTR [eax],al
 1034223:	(bad)  
 1034224:	cld    
 1034225:	add    BYTE PTR [eax],al
 1034227:	add    BYTE PTR [eax],al
 1034229:	add    BYTE PTR [eax],al
 103422b:	(bad)  
 103422c:	cld    
 103422d:	add    BYTE PTR [eax],al
 103422f:	add    BYTE PTR [eax],al
 1034231:	add    BYTE PTR [eax],al
 1034233:	push   eax
 1034235:	add    BYTE PTR [eax],al
 1034237:	add    BYTE PTR [eax],al
 1034239:	add    BYTE PTR [eax],al
 103423b:	push   eax
 103423d:	add    BYTE PTR [eax],al
 103423f:	add    BYTE PTR [eax],al
 1034241:	add    BYTE PTR [eax],al
 1034243:	push   eax
 1034245:	add    BYTE PTR [eax],al
 1034247:	add    BYTE PTR [eax],al
 1034249:	add    BYTE PTR [eax],al
 103424b:	(bad)  
 103424c:	cld    
 103424d:	add    BYTE PTR [eax],al
 103424f:	add    BYTE PTR [eax],al
 1034251:	add    BYTE PTR [eax],al
 1034253:	(bad)  
 1034254:	(bad)  
 1034255:	(bad)  
 1034256:	(bad)  
 1034257:	(bad)  
 1034258:	(bad)  
 1034259:	(bad)  
 103425a:	(bad)  
 103425b:	jmp    FWORD PTR [eax]
 103425d:	add    BYTE PTR [eax],al
 103425f:	add    BYTE PTR [eax],dh
 1034261:	add    BYTE PTR [eax],al
 1034263:	add    BYTE PTR [eax+0x0],ah
 1034266:	add    BYTE PTR [eax],al
 1034268:	add    DWORD PTR [eax],eax
 103426a:	and    BYTE PTR [eax],al
 103426c:	add    BYTE PTR [eax],al
 103426e:	add    BYTE PTR [eax],al
 1034270:	and    BYTE PTR ds:0x0,0x0
	...
 103429b:	add    BYTE PTR [eax-0x69018f7d],bl
 10342a1:	sub    DWORD PTR [esi-0x1],0xff6b7e94
 10342a8:	xchg   edx,eax
 10342a9:	jl     0x1034314
 10342ab:	call   DWORD PTR [eax-0x71009986]
 10342b1:	js     0x1034317
 10342b3:	dec    DWORD PTR [esi+esi*2+0x738aff62]
 10342ba:	pop    edi
 10342bb:	dec    DWORD PTR [eax-0x7a00a28f]
 10342c1:	outs   dx,DWORD PTR ds:[esi]
 10342c2:	pop    edx
 10342c3:	inc    DWORD PTR [ebx-0x7e00a793]
 10342c9:	imul   edx,DWORD PTR [esi-0x1],0x7f
 10342cd:	imul   edx,DWORD PTR [edi+edi*8+0x7e],0x7cff5167
 10342d5:	gs dec edi
 10342d7:	(bad)  
 10342d8:	jp     0x103433d
 10342da:	dec    ebp
 10342db:	(bad)  
 10342dc:	js     0x103433f
 10342de:	dec    ebx
 10342df:	push   DWORD PTR [esi+0x5f]
 10342e2:	dec    ecx
 10342e3:	push   DWORD PTR [ebp+ebx*2+0x47]
 10342e7:	push   DWORD PTR [ebx+0x5b]
 10342ea:	inc    ebp
 10342eb:	push   DWORD PTR [ecx+0x5a]
 10342ee:	inc    ebx
 10342ef:	jmp    FWORD PTR [edi+0x58]
 10342f2:	inc    ecx
 10342f3:	jmp    FWORD PTR [esi+0x56]
 10342f6:	aas    
 10342f7:	jmp    FWORD PTR [ebp+edx*2+0x3e]
 10342fb:	jmp    FWORD PTR [ebx+0x53]
 10342fe:	cmp    al,0xff
 1034300:	imul   edx,DWORD PTR [edx+0x3a],0x395068ff
 1034307:	jmp    DWORD PTR [esi+0x4f]
 103430a:	aaa    
 103430b:	jmp    DWORD PTR [ebp+0x4d]
 103430e:	jmp    DWORD PTR ss:[esp+ecx*2+0x35]
 1034313:	jmp    DWORD PTR [ebx+0x4b]
 1034316:	xor    edi,edi
 1034318:	bound  ecx,QWORD PTR [edx+0x32]
 103431b:	jmp    DWORD PTR [ecx+0x49]
 103431e:	xor    edi,edi
 1034320:	pusha  
 1034321:	dec    eax
 1034322:	xor    bh,bh
 1034324:	pusha  
 1034325:	dec    eax
 1034326:	xor    bh,bh
 1034328:	pusha  
 1034329:	dec    eax
 103432a:	xor    bh,bh
 103432c:	pusha  
 103432d:	dec    eax
 103432e:	xor    bh,bh
 1034330:	pusha  
 1034331:	dec    eax
 1034332:	xor    bh,bh
 1034334:	pusha  
 1034335:	dec    eax
 1034336:	xor    bh,bh
	...
 1034354:	lea    eax,[ebp-0x7a72007f]
 103435a:	cmp    edi,0xff81858d
 1034360:	ins    DWORD PTR es:[edi],dx
 1034361:	bound  ebx,QWORD PTR [ebx-0x1]
 1034364:	push   ecx
 1034366:	call   0xe8f4436a
 103436b:	(bad)  
 103436c:	(bad)  
 103436d:	out    dx,eax
 103436e:	out    0xff,al
 1034370:	(bad)  
 1034371:	out    dx,al
 1034372:	in     al,0xff
 1034374:	(bad)  
 1034375:	out    dx,al
 1034376:	jecxz  0x1034377
 1034378:	(bad)  
 1034379:	in     eax,dx
 103437a:	loop   0x103437b
 103437c:	(bad)  
 103437d:	in     al,dx
 103437e:	loope  0x103437f
 1034380:	(bad)  
 1034381:	jmp    0x1034363
 1034383:	(bad)  
 1034384:	(bad)  
 1034385:	jmp    0xffdd:0xeaffffde
 103438c:	(bad)  
 103438d:	jmp    0xea03436e
 1034392:	(bad)  
 1034394:	jmp    edi
 1034396:	fcos   
 1034398:	jmp    esi
 103439a:	fdivr  st,st(7)
 103439c:	jmp    esi
 103439e:	xlat   BYTE PTR ds:[ebx]
 103439f:	(bad)  
 10343a0:	jmp    ebp
 10343a2:	(bad)  
 10343a3:	(bad)  
 10343a4:	jmp    esp
 10343a6:	aam    0xff
 10343a8:	jmp    ebx
 10343aa:	sar    edi,cl
 10343ac:	jmp    edx
 10343ae:	sar    bh,cl
 10343b0:	jmp    edx
 10343b2:	sar    bh,1
 10343b4:	jmp    ecx
 10343b6:	iret   
 10343b7:	(bad)  
 10343b8:	jmp    eax
 10343ba:	into   
 10343bb:	(bad)  
 10343bc:	(bad)  
 10343bd:	(bad)  
 10343bf:	(bad)  
 10343c0:	(bad)  
 10343c1:	(bad)  
 10343c3:	(bad)  
 10343c4:	(bad)  
 10343c5:	fmulp  st(2),st
 10343c7:	(bad)  
 10343c8:	(bad)  
 10343c9:	(bad)  
 10343cb:	(bad)  
 10343cc:	(bad)  
 10343cd:	fmul   st(0),st
 10343cf:	(bad)  
 10343d0:	(bad)  
 10343d1:	fadd   st(7),st
 10343d3:	(bad)  
 10343d4:	(bad)  
 10343d5:	fcmovnb st,st(5)
 10343d7:	(bad)  
 10343d8:	(bad)  
 10343d9:	fcmovb st,st(4)
 10343db:	(bad)  
 10343dc:	(bad)  
 10343dd:	fld    st(3)
 10343df:	(bad)  
 10343e0:	(bad)  
 10343e1:	fld    st(2)
 10343e3:	(bad)  
 10343e4:	(bad)  
 10343e5:	fadd   st,st(1)
 10343e7:	(bad)  
 10343e8:	call   edi
 10343ea:	sar    bh,0xff
 10343ed:	(bad)  
 10343ee:	mov    edi,0xbed6ffff
 10343f3:	push   DWORD PTR [ebx+0x59]
 10343f6:	inc    ecx
 10343f7:	inc    DWORD PTR [eax]
	...
 1034411:	add    BYTE PTR [eax],al
 1034413:	add    BYTE PTR [ebp-0x36007e7b],cl
 1034419:	mov    ah,0xff
 103441c:	(bad)  
 103441d:	(bad)  
 103441e:	(bad)  
 103441f:	jmp    DWORD PTR [ebx+ebx*4-0xe00006a]
 1034426:	jmp    0xe9f5442a
 103442b:	(bad)  
 103442c:	push   eax
 103442e:	out    0xff,eax
 1034430:	(bad)  
 1034431:	out    dx,eax
 1034432:	out    0xff,al
 1034434:	(bad)  
 1034435:	out    dx,al
 1034436:	in     al,0xff
 1034438:	(bad)  
 1034439:	out    dx,al
 103443a:	jecxz  0x103443b
 103443c:	(bad)  
 103443d:	in     eax,dx
 103443e:	loop   0x103443f
 1034440:	(bad)  
 1034441:	in     al,dx
 1034442:	loope  0x1034443
 1034444:	(bad)  
 1034445:	jmp    0x1034427
 1034447:	(bad)  
 1034448:	(bad)  
 1034449:	jmp    0xffdd:0xeaffffde
 1034450:	(bad)  
 1034451:	jmp    0xea034432
 1034456:	(bad)  
 1034458:	jmp    edi
 103445a:	fcos   
 103445c:	jmp    esi
 103445e:	fdivr  st,st(7)
 1034460:	jmp    esi
 1034462:	xlat   BYTE PTR ds:[ebx]
 1034463:	(bad)  
 1034464:	jmp    ebp
 1034466:	(bad)  
 1034467:	(bad)  
 1034468:	jmp    esp
 103446a:	aam    0xff
 103446c:	jmp    ebx
 103446e:	sar    edi,cl
 1034470:	jmp    ebx
 1034472:	sar    bh,cl
 1034474:	jmp    edx
 1034476:	sar    edi,1
 1034478:	jmp    ecx
 103447a:	iret   
 103447b:	(bad)  
 103447c:	jmp    eax
 103447e:	into   
 103447f:	(bad)  
 1034480:	(bad)  
 1034481:	(bad)  
 1034483:	(bad)  
 1034484:	(bad)  
 1034485:	(bad)  
 1034487:	(bad)  
 1034488:	(bad)  
 1034489:	fmulp  st(2),st
 103448b:	(bad)  
 103448c:	(bad)  
 103448d:	(bad)  
 103448f:	(bad)  
 1034490:	(bad)  
 1034491:	fmul   st(0),st
 1034493:	(bad)  
 1034494:	(bad)  
 1034495:	fadd   st(7),st
 1034497:	(bad)  
 1034498:	(bad)  
 1034499:	fcmovnb st,st(6)
 103449b:	(bad)  
 103449c:	(bad)  
 103449d:	fcmovb st,st(4)
 103449f:	(bad)  
 10344a0:	(bad)  
 10344a1:	fld    st(3)
 10344a3:	(bad)  
 10344a4:	(bad)  
 10344a5:	fld    st(2)
 10344a7:	(bad)  
 10344a8:	(bad)  
 10344a9:	fadd   st,st(1)
 10344ab:	(bad)  
 10344ac:	call   edi
 10344ae:	sar    bh,0xff
 10344b1:	xlat   BYTE PTR ds:[ebx]
 10344b2:	mov    edi,0x415973ff
 10344b7:	inc    DWORD PTR [eax]
	...
 10344d9:	add    BYTE PTR [eax],al
 10344db:	add    BYTE PTR [edx-0x60f8473],ah
 10344e1:	in     eax,dx
 10344e2:	in     eax,0xff
 10344e4:	push   edx
 10344e6:	jmp    0xffff:0xe9f1ffff
 10344ed:	icebp  
 10344ee:	call   0xe8f444f2
 10344f3:	(bad)  
 10344f4:	(bad)  
 10344f5:	out    dx,eax
 10344f6:	out    0xff,al
 10344f8:	(bad)  
 10344f9:	out    dx,al
 10344fa:	in     eax,0xff
 10344fc:	(bad)  
 10344fd:	out    dx,al
 10344fe:	jecxz  0x10344ff
 1034500:	(bad)  
 1034501:	in     eax,dx
 1034502:	loop   0x1034503
 1034504:	(bad)  
 1034505:	in     al,dx
 1034506:	loope  0x1034507
 1034508:	(bad)  
 1034509:	jmp    0x10344eb
 103450b:	(bad)  
 103450c:	(bad)  
 103450d:	jmp    0xffdd:0xeaffffde
 1034514:	(bad)  
 1034515:	jmp    0xea0344f6
 103451a:	(bad)  
 103451c:	jmp    edi
 103451e:	fcos   
 1034520:	jmp    edi
 1034522:	fdivr  st,st(7)
 1034524:	jmp    esi
 1034526:	xlat   BYTE PTR ds:[ebx]
 1034527:	(bad)  
 1034528:	jmp    ebp
 103452a:	(bad)  
 103452b:	(bad)  
 103452c:	jmp    esp
 103452e:	aam    0xff
 1034530:	jmp    ebx
 1034532:	sar    edi,cl
 1034534:	jmp    ebx
 1034536:	sar    bh,cl
 1034538:	jmp    edx
 103453a:	sar    edi,1
 103453c:	jmp    ecx
 103453e:	iret   
 103453f:	(bad)  
 1034540:	jmp    eax
 1034542:	into   
 1034543:	(bad)  
 1034544:	(bad)  
 1034545:	(bad)  
 1034547:	(bad)  
 1034548:	(bad)  
 1034549:	(bad)  
 103454b:	(bad)  
 103454c:	(bad)  
 103454d:	fmulp  st(2),st
 103454f:	(bad)  
 1034550:	(bad)  
 1034551:	(bad)  
 1034553:	(bad)  
 1034554:	(bad)  
 1034555:	fmul   st(0),st
 1034557:	(bad)  
 1034558:	(bad)  
 1034559:	fadd   st(7),st
 103455b:	(bad)  
 103455c:	(bad)  
 103455d:	fcmovnb st,st(6)
 103455f:	(bad)  
 1034560:	(bad)  
 1034561:	fcmovb st,st(4)
 1034563:	(bad)  
 1034564:	(bad)  
 1034565:	fld    st(3)
 1034567:	(bad)  
 1034568:	(bad)  
 1034569:	fld    st(2)
 103456b:	(bad)  
 103456c:	(bad)  
 103456d:	fadd   st,st(1)
 103456f:	(bad)  
 1034570:	call   edi
 1034572:	sar    bh,0x73
 1034575:	pop    ecx
 1034576:	inc    ecx
 1034577:	inc    DWORD PTR [eax]
	...
 1034599:	add    BYTE PTR [eax],al
 103459b:	add    BYTE PTR [edi+ecx*4-0x12050f83],ah
 10345a2:	out    0xff,al
 10345a4:	push   ebx
 10345a6:	in     al,dx
 10345a7:	(bad)  
 10345a8:	push   edx
 10345aa:	jmp    0xffff:0xe9f1ffff
 10345b1:	icebp  
 10345b2:	call   0xe8f445b6
 10345b7:	(bad)  
 10345b8:	(bad)  
 10345b9:	out    dx,eax
 10345ba:	out    0xff,al
 10345bc:	(bad)  
 10345bd:	out    dx,al
 10345be:	in     eax,0xff
 10345c0:	(bad)  
 10345c1:	out    dx,al
 10345c2:	jecxz  0x10345c3
 10345c4:	(bad)  
 10345c5:	in     eax,dx
 10345c6:	loop   0x10345c7
 10345c8:	(bad)  
 10345c9:	in     al,dx
 10345ca:	loope  0x10345cb
 10345cc:	(bad)  
 10345cd:	jmp    0x10345af
 10345cf:	(bad)  
 10345d0:	(bad)  
 10345d1:	jmp    0xffdd:0xeaffffde
 10345d8:	(bad)  
 10345d9:	jmp    0xea0345ba
 10345de:	(bad)  
 10345e0:	jmp    edi
 10345e2:	fcos   
 10345e4:	jmp    edi
 10345e6:	fdivr  st,st(7)
 10345e8:	jmp    esi
 10345ea:	xlat   BYTE PTR ds:[ebx]
 10345eb:	(bad)  
 10345ec:	jmp    ebp
 10345ee:	(bad)  
 10345ef:	(bad)  
 10345f0:	jmp    esp
 10345f2:	aam    0xff
 10345f4:	jmp    ebx
 10345f6:	sar    edi,cl
 10345f8:	jmp    ebx
 10345fa:	sar    bh,cl
 10345fc:	jmp    edx
 10345fe:	sar    edi,1
 1034600:	jmp    ecx
 1034602:	iret   
 1034603:	(bad)  
 1034604:	jmp    eax
 1034606:	into   
 1034607:	(bad)  
 1034608:	(bad)  
 1034609:	(bad)  
 103460b:	(bad)  
 103460c:	(bad)  
 103460d:	(bad)  
 103460f:	(bad)  
 1034610:	(bad)  
 1034611:	fmulp  st(2),st
 1034613:	(bad)  
 1034614:	(bad)  
 1034615:	(bad)  
 1034617:	(bad)  
 1034618:	(bad)  
 1034619:	fmul   st(0),st
 103461b:	(bad)  
 103461c:	(bad)  
 103461d:	fadd   st(7),st
 103461f:	(bad)  
 1034620:	(bad)  
 1034621:	fcmovnb st,st(6)
 1034623:	(bad)  
 1034624:	(bad)  
 1034625:	fcmovb st,st(4)
 1034627:	(bad)  
 1034628:	(bad)  
 1034629:	fld    st(3)
 103462b:	(bad)  
 103462c:	(bad)  
 103462d:	fld    st(2)
 103462f:	(bad)  
 1034630:	(bad)  
 1034631:	fadd   st,st(1)
 1034633:	push   DWORD PTR [ebx+0x59]
 1034636:	inc    ecx
 1034637:	inc    DWORD PTR [eax]
	...
 1034651:	add    BYTE PTR [eax],al
 1034653:	add    BYTE PTR [ebp-0x72007e7b],cl
 1034659:	test   DWORD PTR [ecx-0x7e7a7201],eax
 103465f:	jmp    FWORD PTR [ebp+0x62]
 1034662:	pop    ebx
 1034663:	(bad)  
 1034664:	push   ebx
 1034666:	in     eax,dx
 1034667:	(bad)  
 1034668:	push   ebx
 103466a:	in     al,dx
 103466b:	(bad)  
 103466c:	push   edx
 103466e:	jmp    0xffff:0xe9f1ffff
 1034675:	icebp  
 1034676:	call   0xe8f4467a
 103467b:	(bad)  
 103467c:	(bad)  
 103467d:	out    dx,eax
 103467e:	out    0xff,al
 1034680:	(bad)  
 1034681:	out    dx,al
 1034682:	in     eax,0xff
 1034684:	(bad)  
 1034685:	out    dx,al
 1034686:	jecxz  0x1034687
 1034688:	(bad)  
 1034689:	in     eax,dx
 103468a:	loop   0x103468b
 103468c:	(bad)  
 103468d:	in     al,dx
 103468e:	loope  0x103468f
 1034690:	(bad)  
 1034691:	jmp    0x1034673
 1034693:	(bad)  
 1034694:	(bad)  
 1034695:	jmp    0x1034675
 1034697:	(bad)  
 1034698:	(bad)  
 1034699:	jmp    0xffdc:0xe9ffffdd
 10346a0:	(bad)  
 10346a1:	call   0xe9034681
 10346a6:	fcos   
 10346a8:	jmp    edi
 10346aa:	fdivr  st,st(7)
 10346ac:	jmp    esi
 10346ae:	xlat   BYTE PTR ds:[ebx]
 10346af:	(bad)  
 10346b0:	jmp    ebp
 10346b2:	(bad)  
 10346b3:	(bad)  
 10346b4:	jmp    esp
 10346b6:	aam    0xff
 10346b8:	jmp    ebx
 10346ba:	sar    edi,cl
 10346bc:	jmp    ebx
 10346be:	sar    bh,cl
 10346c0:	jmp    edx
 10346c2:	sar    edi,1
 10346c4:	jmp    ecx
 10346c6:	iret   
 10346c7:	(bad)  
 10346c8:	jmp    eax
 10346ca:	into   
 10346cb:	(bad)  
 10346cc:	(bad)  
 10346cd:	(bad)  
 10346cf:	(bad)  
 10346d0:	(bad)  
 10346d1:	(bad)  
 10346d3:	(bad)  
 10346d4:	(bad)  
 10346d5:	fmulp  st(2),st
 10346d7:	(bad)  
 10346d8:	(bad)  
 10346d9:	(bad)  
 10346db:	(bad)  
 10346dc:	(bad)  
 10346dd:	fmul   st(0),st
 10346df:	(bad)  
 10346e0:	(bad)  
 10346e1:	fadd   st(7),st
 10346e3:	(bad)  
 10346e4:	(bad)  
 10346e5:	fcmovnb st,st(6)
 10346e7:	(bad)  
 10346e8:	(bad)  
 10346e9:	fcmovb st,st(4)
 10346eb:	(bad)  
 10346ec:	(bad)  
 10346ed:	fld    st(3)
 10346ef:	(bad)  
 10346f0:	(bad)  
 10346f1:	fld    st(2)
 10346f3:	push   DWORD PTR [edx+ebx*2+0x42]
 10346f7:	inc    DWORD PTR [eax]
	...
 1034711:	add    BYTE PTR [eax],al
 1034713:	add    BYTE PTR [ebp-0x36007e7b],cl
 1034719:	mov    ah,0xff
 103471c:	(bad)  
 103471d:	(bad)  
 103471e:	(bad)  
 103471f:	jmp    DWORD PTR [ebx+ebx*4-0xb00006a]
 1034726:	out    dx,al
 1034727:	(bad)  
 1034728:	push   ebx
 103472a:	in     eax,dx
 103472b:	(bad)  
 103472c:	push   ebx
 103472e:	in     al,dx
 103472f:	(bad)  
 1034730:	push   edx
 1034732:	jmp    0xffff:0xe9f1ffff
 1034739:	icebp  
 103473a:	call   0xe8f4473e
 103473f:	(bad)  
 1034740:	(bad)  
 1034741:	out    dx,eax
 1034742:	out    0xff,al
 1034744:	(bad)  
 1034745:	out    dx,al
 1034746:	in     eax,0xff
 1034748:	(bad)  
 1034749:	out    dx,al
 103474a:	jecxz  0x103474b
 103474c:	std    
 103474d:	jmp    0x103472f
 103474f:	push   edi
 1034751:	in     eax,0xda
 1034753:	push   eax
 1034755:	fst    st(3)
 1034757:	push   ecx
 1034759:	(bad)  
 103475b:	(bad)  
 103475c:	cli    
 103475d:	in     eax,0xd9
 103475f:	(bad)  
 1034760:	(bad)  
 1034761:	jmp    0xea034742
 1034766:	(bad)  
 1034768:	jmp    edi
 103476a:	fcos   
 103476c:	jmp    edi
 103476e:	fdivr  st,st(7)
 1034770:	jmp    esi
 1034772:	xlat   BYTE PTR ds:[ebx]
 1034773:	(bad)  
 1034774:	jmp    ebp
 1034776:	(bad)  
 1034777:	(bad)  
 1034778:	jmp    esp
 103477a:	aam    0xff
 103477c:	jmp    ebx
 103477e:	sar    edi,cl
 1034780:	jmp    ebx
 1034782:	sar    bh,cl
 1034784:	jmp    edx
 1034786:	sar    edi,1
 1034788:	jmp    ecx
 103478a:	iret   
 103478b:	(bad)  
 103478c:	jmp    eax
 103478e:	into   
 103478f:	(bad)  
 1034790:	(bad)  
 1034791:	(bad)  
 1034793:	(bad)  
 1034794:	(bad)  
 1034795:	(bad)  
 1034797:	(bad)  
 1034798:	(bad)  
 1034799:	fmulp  st(2),st
 103479b:	(bad)  
 103479c:	(bad)  
 103479d:	(bad)  
 103479f:	(bad)  
 10347a0:	(bad)  
 10347a1:	fmul   st(0),st
 10347a3:	(bad)  
 10347a4:	(bad)  
 10347a5:	fadd   st(7),st
 10347a7:	(bad)  
 10347a8:	(bad)  
 10347a9:	fcmovnb st,st(6)
 10347ab:	(bad)  
 10347ac:	(bad)  
 10347ad:	fcmovb st,st(4)
 10347af:	(bad)  
 10347b0:	(bad)  
 10347b1:	fld    st(3)
 10347b3:	push   DWORD PTR [ebx+ebx*2+0x43]
 10347b7:	inc    DWORD PTR [eax]
	...
 10347d9:	add    BYTE PTR [eax],al
 10347db:	add    BYTE PTR [ecx-0x50f7c6c],ch
 10347e1:	lock jmp 0xf0f947e6
 10347e7:	(bad)  
 10347e8:	push   esp
 10347ea:	out    dx,al
 10347eb:	(bad)  
 10347ec:	push   esp
 10347ee:	in     eax,dx
 10347ef:	(bad)  
 10347f0:	push   ebx
 10347f2:	in     al,dx
 10347f3:	(bad)  
 10347f4:	push   edx
 10347f6:	jmp    0x10347f7
 10347f8:	push   ecx
 10347fa:	jmp    0xe9f547fe
 10347ff:	(bad)  
 1034800:	push   eax
 1034802:	out    0xff,eax
 1034804:	(bad)  
 1034805:	out    dx,eax
 1034806:	out    0xff,al
 1034808:	(bad)  
 1034809:	out    dx,al
 103480a:	in     eax,0xff
 103480c:	mul    edi
 103480e:	fdiv   st(7),st
 1034810:	loope  0x10347e3
 1034812:	(bad)  
 1034813:	dec    ebp
 1034815:	mov    esi,0xc0d0ffb5
 103481a:	mov    bh,0xff
 103481c:	out    0xd5,eax
 103481e:	retf   0xfaff
 1034821:	in     eax,0xd9
 1034823:	(bad)  
 1034824:	(bad)  
 1034825:	jmp    0xea034806
 103482a:	(bad)  
 103482c:	jmp    edi
 103482e:	fcos   
 1034830:	jmp    edi
 1034832:	fdivr  st,st(7)
 1034834:	jmp    esi
 1034836:	xlat   BYTE PTR ds:[ebx]
 1034837:	(bad)  
 1034838:	jmp    ebp
 103483a:	(bad)  
 103483b:	(bad)  
 103483c:	jmp    esp
 103483e:	aam    0xff
 1034840:	jmp    ebx
 1034842:	sar    edi,cl
 1034844:	jmp    ebx
 1034846:	sar    bh,cl
 1034848:	jmp    edx
 103484a:	sar    edi,1
 103484c:	jmp    ecx
 103484e:	iret   
 103484f:	(bad)  
 1034850:	jmp    eax
 1034852:	into   
 1034853:	(bad)  
 1034854:	(bad)  
 1034855:	(bad)  
 1034857:	(bad)  
 1034858:	(bad)  
 1034859:	(bad)  
 103485b:	(bad)  
 103485c:	(bad)  
 103485d:	fmulp  st(2),st
 103485f:	(bad)  
 1034860:	(bad)  
 1034861:	(bad)  
 1034863:	(bad)  
 1034864:	(bad)  
 1034865:	fmul   st(0),st
 1034867:	(bad)  
 1034868:	(bad)  
 1034869:	fadd   st(7),st
 103486b:	(bad)  
 103486c:	(bad)  
 103486d:	fcmovnb st,st(6)
 103486f:	(bad)  
 1034870:	(bad)  
 1034871:	fcmovb st,st(4)
 1034873:	push   DWORD PTR [ebp+0x5c]
 1034876:	inc    esp
 1034877:	inc    DWORD PTR [eax]
	...
 1034899:	add    BYTE PTR [eax],al
 103489b:	add    BYTE PTR [ebx-0x50f7b6a],ch
 10348a1:	lock jmp 0xffff:0xf0f6ffff
 10348a9:	cmc    
 10348aa:	out    dx,eax
 10348ab:	(bad)  
 10348ac:	push   esp
 10348ae:	out    dx,al
 10348af:	(bad)  
 10348b0:	push   esp
 10348b2:	in     eax,dx
 10348b3:	(bad)  
 10348b4:	push   ebx
 10348b6:	in     al,dx
 10348b7:	(bad)  
 10348b8:	push   edx
 10348ba:	jmp    0x10348bb
 10348bc:	push   ecx
 10348be:	jmp    0xe9f548c2
 10348c3:	(bad)  
 10348c4:	push   eax
 10348c6:	out    0xff,eax
 10348c8:	(bad)  
 10348c9:	out    dx,eax
 10348ca:	out    0xff,al
 10348cc:	test   al,0xb3
 10348ce:	mov    ebx,0x8a6732ff
 10348d3:	jmp    DWORD PTR [edi]
 10348d5:	pusha  
 10348d6:	test   edi,edi
 10348d8:	mov    ah,0xa8
 10348da:	mov    eax,ds:0xb1bacaff
 10348df:	jmp    edi
 10348e1:	aad    0xca
 10348e3:	(bad)  
 10348e4:	cli    
 10348e5:	in     eax,0xd9
 10348e7:	(bad)  
 10348e8:	(bad)  
 10348e9:	jmp    0xea0348ca
 10348ee:	(bad)  
 10348f0:	jmp    edi
 10348f2:	(bad)  
 10348f4:	jmp    edi
 10348f6:	fdivr  st,st(7)
 10348f8:	jmp    esi
 10348fa:	xlat   BYTE PTR ds:[ebx]
 10348fb:	(bad)  
 10348fc:	jmp    ebp
 10348fe:	(bad)  
 10348ff:	(bad)  
 1034900:	jmp    esp
 1034902:	aam    0xff
 1034904:	jmp    ebx
 1034906:	sar    edi,cl
 1034908:	jmp    ebx
 103490a:	sar    bh,cl
 103490c:	jmp    edx
 103490e:	sar    edi,1
 1034910:	jmp    ecx
 1034912:	iret   
 1034913:	(bad)  
 1034914:	jmp    eax
 1034916:	into   
 1034917:	(bad)  
 1034918:	(bad)  
 1034919:	(bad)  
 103491b:	(bad)  
 103491c:	(bad)  
 103491d:	(bad)  
 103491f:	(bad)  
 1034920:	(bad)  
 1034921:	fmulp  st(2),st
 1034923:	(bad)  
 1034924:	(bad)  
 1034925:	(bad)  
 1034927:	(bad)  
 1034928:	(bad)  
 1034929:	fmul   st(0),st
 103492b:	(bad)  
 103492c:	(bad)  
 103492d:	fadd   st(7),st
 103492f:	(bad)  
 1034930:	(bad)  
 1034931:	fcmovnb st,st(6)
 1034933:	push   DWORD PTR [esi+0x5d]
 1034936:	inc    ebp
 1034937:	inc    DWORD PTR [eax]
	...
 1034951:	add    BYTE PTR [eax],al
 1034953:	add    BYTE PTR [ebp-0x72007e7b],cl
 1034959:	test   DWORD PTR [ecx-0x7e7a7201],eax
 103495f:	jmp    FWORD PTR [ebp+0x62]
 1034962:	pop    ebx
 1034963:	(bad)  
 1034964:	push   esi
 1034966:	icebp  
 1034967:	(bad)  
 1034968:	push   esi
 103496a:	lock (bad) 
 103496c:	push   ebp
 103496e:	out    dx,eax
 103496f:	(bad)  
 1034970:	push   esp
 1034972:	out    dx,al
 1034973:	(bad)  
 1034974:	push   esp
 1034976:	in     eax,dx
 1034977:	(bad)  
 1034978:	push   ebx
 103497a:	in     al,dx
 103497b:	(bad)  
 103497c:	push   edx
 103497e:	jmp    0x103497f
 1034980:	push   ecx
 1034982:	jmp    0xe9f54986
 1034987:	(bad)  
 1034988:	push   eax
 103498a:	out    0xff,eax
 103498c:	ss ins BYTE PTR es:[edi],dx
 103498e:	nop
 103498f:	jmp    ebx
 1034991:	sti    
 1034992:	(bad)  
 1034993:	jmp    DWORD PTR [ebx+0x2efffff1]
 1034999:	imul   ecx,DWORD PTR [edi+edi*8-0x5f584d],0xffb1baca
 10349a4:	out    0xd5,eax
 10349a6:	retf   0xfaff
 10349a9:	in     eax,0xd9
 10349ab:	(bad)  
 10349ac:	(bad)  
 10349ad:	jmp    0xea03498e
 10349b2:	(bad)  
 10349b4:	jmp    edi
 10349b6:	(bad)  
 10349b8:	jmp    edi
 10349ba:	fdivr  st,st(7)
 10349bc:	jmp    esi
 10349be:	xlat   BYTE PTR ds:[ebx]
 10349bf:	(bad)  
 10349c0:	jmp    ebp
 10349c2:	(bad)  
 10349c3:	(bad)  
 10349c4:	jmp    esp
 10349c6:	aam    0xff
 10349c8:	jmp    ebx
 10349ca:	sar    edi,cl
 10349cc:	jmp    ebx
 10349ce:	sar    bh,cl
 10349d0:	jmp    edx
 10349d2:	sar    edi,1
 10349d4:	jmp    ecx
 10349d6:	iret   
 10349d7:	(bad)  
 10349d8:	jmp    eax
 10349da:	into   
 10349db:	(bad)  
 10349dc:	(bad)  
 10349dd:	(bad)  
 10349df:	(bad)  
 10349e0:	(bad)  
 10349e1:	(bad)  
 10349e3:	(bad)  
 10349e4:	(bad)  
 10349e5:	fmulp  st(3),st
 10349e7:	(bad)  
 10349e8:	(bad)  
 10349e9:	(bad)  
 10349eb:	(bad)  
 10349ec:	(bad)  
 10349ed:	fmul   st(0),st
 10349ef:	(bad)  
 10349f0:	(bad)  
 10349f1:	fadd   st(7),st
 10349f3:	push   DWORD PTR [esi+0x5e]
 10349f6:	inc    esi
 10349f7:	inc    DWORD PTR [eax]
	...
 1034a11:	add    BYTE PTR [eax],al
 1034a13:	add    BYTE PTR [ebp-0x36007e7b],cl
 1034a19:	mov    ah,0xff
 1034a1c:	(bad)  
 1034a1d:	(bad)  
 1034a1e:	(bad)  
 1034a1f:	jmp    DWORD PTR [ebx+ebx*4-0x800006a]
 1034a26:	repnz (bad) 
 1034a28:	push   esi
 1034a2a:	icebp  
 1034a2b:	(bad)  
 1034a2c:	push   esi
 1034a2e:	lock (bad) 
 1034a30:	push   ebp
 1034a32:	out    dx,eax
 1034a33:	(bad)  
 1034a34:	push   esp
 1034a36:	out    dx,al
 1034a37:	(bad)  
 1034a38:	push   esp
 1034a3a:	in     eax,dx
 1034a3b:	(bad)  
 1034a3c:	push   ebx
 1034a3e:	in     al,dx
 1034a3f:	(bad)  
 1034a40:	push   edx
 1034a42:	jmp    0x1034a43
 1034a44:	push   ecx
 1034a46:	jmp    0xe9f54a4a
 1034a4b:	call   FWORD PTR [esi-0x79]
 1034a4e:	mov    ds:0xfff5ceff,al
 1034a53:	push   DWORD PTR [esp+esi*8-0xe5c0001]
 1034a5a:	(bad)  
 1034a5b:	jmp    FWORD PTR [esi]
 1034a5d:	push   0xffffff8f
 1034a5f:	push   DWORD PTR [ebx-0x34005f59]
 1034a65:	mov    ebx,0xd5e7ffb2
 1034a6a:	retf   0xfaff
 1034a6d:	in     eax,0xd9
 1034a6f:	(bad)  
 1034a70:	(bad)  
 1034a71:	jmp    0xea034a52
 1034a76:	(bad)  
 1034a78:	jmp    edi
 1034a7a:	(bad)  
 1034a7c:	jmp    edi
 1034a7e:	fdivr  st,st(7)
 1034a80:	jmp    esi
 1034a82:	xlat   BYTE PTR ds:[ebx]
 1034a83:	(bad)  
 1034a84:	jmp    ebp
 1034a86:	(bad)  
 1034a87:	(bad)  
 1034a88:	jmp    esp
 1034a8a:	aad    0xff
 1034a8c:	jmp    ebx
 1034a8e:	sar    edi,cl
 1034a90:	jmp    ebx
 1034a92:	sar    bh,cl
 1034a94:	jmp    edx
 1034a96:	sar    edi,1
 1034a98:	jmp    ecx
 1034a9a:	iret   
 1034a9b:	(bad)  
 1034a9c:	jmp    eax
 1034a9e:	into   
 1034a9f:	(bad)  
 1034aa0:	jmp    eax
 1034aa2:	int    0xff
 1034aa4:	(bad)  
 1034aa5:	(bad)  
 1034aa7:	(bad)  
 1034aa8:	(bad)  
 1034aa9:	fmulp  st(3),st
 1034aab:	(bad)  
 1034aac:	(bad)  
 1034aad:	(bad)  
 1034aaf:	(bad)  
 1034ab0:	(bad)  
 1034ab1:	fmul   st(0),st
 1034ab3:	push   DWORD PTR [edi+0x5f]
 1034ab6:	inc    edi
 1034ab7:	inc    DWORD PTR [eax]
	...
 1034ad9:	add    BYTE PTR [eax],al
 1034adb:	add    BYTE PTR [edi-0x50f7565],ch
 1034ae1:	repnz out dx,al
 1034ae3:	(bad)  
 1034ae4:	(bad)  
 1034ae5:	clc    
 1034ae6:	repz (bad) 
 1034ae8:	push   edi
 1034aea:	repnz (bad) 
 1034aec:	push   esi
 1034aee:	icebp  
 1034aef:	(bad)  
 1034af0:	push   esi
 1034af2:	lock (bad) 
 1034af4:	push   ebp
 1034af6:	out    dx,eax
 1034af7:	(bad)  
 1034af8:	push   esp
 1034afa:	out    dx,al
 1034afb:	(bad)  
 1034afc:	push   esp
 1034afe:	in     eax,dx
 1034aff:	(bad)  
 1034b00:	push   ebx
 1034b02:	in     al,dx
 1034b03:	(bad)  
 1034b04:	push   edx
 1034b06:	jmp    0x1034b07
 1034b08:	push   ecx
 1034b0a:	jmp    0xcdcb0b0e
 1034b0f:	inc    DWORD PTR [eax-0x2c002842]
 1034b15:	stc    
 1034b16:	(bad)  
 1034b17:	jmp    DWORD PTR [ebx-0x5d00000f]
 1034b1d:	icebp  
 1034b1e:	(bad)  
 1034b1f:	push   DWORD PTR [ecx]
 1034b21:	ins    BYTE PTR es:[edi],dx
 1034b22:	nop
 1034b23:	push   DWORD PTR [ebx-0x34005f59]
 1034b29:	mov    ebx,0xd5e7ffb2
 1034b2e:	retf   0xfaff
 1034b31:	in     eax,0xd9
 1034b33:	(bad)  
 1034b34:	(bad)  
 1034b35:	jmp    0xea034b16
 1034b3a:	(bad)  
 1034b3c:	jmp    edi
 1034b3e:	(bad)  
 1034b40:	jmp    edi
 1034b42:	fdivr  st,st(7)
 1034b44:	jmp    esi
 1034b46:	xlat   BYTE PTR ds:[ebx]
 1034b47:	(bad)  
 1034b48:	jmp    ebp
 1034b4a:	(bad)  
 1034b4b:	(bad)  
 1034b4c:	jmp    esp
 1034b4e:	aad    0xff
 1034b50:	jmp    ebx
 1034b52:	sar    edi,cl
 1034b54:	jmp    ebx
 1034b56:	sar    bh,cl
 1034b58:	jmp    edx
 1034b5a:	sar    edi,1
 1034b5c:	jmp    ecx
 1034b5e:	sar    bh,1
 1034b60:	jmp    eax
 1034b62:	into   
 1034b63:	(bad)  
 1034b64:	jmp    eax
 1034b66:	int    0xff
 1034b68:	(bad)  
 1034b69:	(bad)  
 1034b6b:	(bad)  
 1034b6c:	(bad)  
 1034b6d:	fmulp  st(3),st
 1034b6f:	(bad)  
 1034b70:	(bad)  
 1034b71:	(bad)  
 1034b73:	(bad)  
 1034b74:	js     0x1034bd6
 1034b76:	dec    eax
 1034b77:	inc    DWORD PTR [eax]
	...
 1034b99:	add    BYTE PTR [eax],al
 1034b9b:	add    BYTE PTR [ecx-0x50f7364],dh
 1034ba1:	repz out dx,eax
 1034ba3:	(bad)  
 1034ba4:	(bad)  
 1034ba5:	clc    
 1034ba6:	hlt    
 1034ba7:	(bad)  
 1034ba8:	(bad)  
 1034ba9:	clc    
 1034baa:	repz (bad) 
 1034bac:	push   edi
 1034bae:	repnz (bad) 
 1034bb0:	push   esi
 1034bb2:	icebp  
 1034bb3:	(bad)  
 1034bb4:	push   esi
 1034bb6:	lock (bad) 
 1034bb8:	push   ebp
 1034bba:	out    dx,eax
 1034bbb:	(bad)  
 1034bbc:	push   esp
 1034bbe:	out    dx,al
 1034bbf:	(bad)  
 1034bc0:	push   esp
 1034bc2:	in     eax,dx
 1034bc3:	(bad)  
 1034bc4:	push   ebx
 1034bc6:	in     al,dx
 1034bc7:	(bad)  
 1034bc8:	push   edx
 1034bca:	jmp    0x1034bcb
 1034bcc:	push   ecx
 1034bce:	jmp    0xcbff:0xa88f68ff
 1034bd5:	hlt    
 1034bd6:	(bad)  
 1034bd7:	push   DWORD PTR [esi-0x5900000c]
 1034bdd:	icebp  
 1034bde:	(bad)  
 1034bdf:	jmp    DWORD PTR [edx+0x32fffff1]
 1034be5:	imul   ecx,DWORD PTR [edi-0x5f584c01],0xffffffff
 1034bec:	retf   
 1034bed:	mov    ebx,0xd5e7ffb2
 1034bf2:	retf   0xfaff
 1034bf5:	in     eax,0xd9
 1034bf7:	(bad)  
 1034bf8:	(bad)  
 1034bf9:	jmp    0xea034bda
 1034bfe:	(bad)  
 1034c00:	jmp    edi
 1034c02:	(bad)  
 1034c04:	jmp    edi
 1034c06:	fdivr  st,st(7)
 1034c08:	jmp    esi
 1034c0a:	xlat   BYTE PTR ds:[ebx]
 1034c0b:	(bad)  
 1034c0c:	jmp    ebp
 1034c0e:	(bad)  
 1034c0f:	(bad)  
 1034c10:	jmp    esp
 1034c12:	aad    0xff
 1034c14:	jmp    esp
 1034c16:	sar    edi,cl
 1034c18:	jmp    ebx
 1034c1a:	sar    bh,cl
 1034c1c:	jmp    edx
 1034c1e:	sar    edi,1
 1034c20:	jmp    ecx
 1034c22:	sar    bh,1
 1034c24:	jmp    eax
 1034c26:	into   
 1034c27:	(bad)  
 1034c28:	jmp    eax
 1034c2a:	int    0xff
 1034c2c:	(bad)  
 1034c2d:	(bad)  
 1034c2f:	(bad)  
 1034c30:	(bad)  
 1034c31:	fmulp  st(3),st
 1034c33:	(bad)  
 1034c34:	jns    0x1034c97
 1034c36:	dec    ecx
 1034c37:	inc    DWORD PTR [eax]
	...
 1034c51:	add    BYTE PTR [eax],al
 1034c53:	add    BYTE PTR [ebp-0x72007e7b],cl
 1034c59:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1034c5f:	jmp    FWORD PTR [ebp+0x62]
 1034c62:	pop    ebx
 1034c63:	(bad)  
 1034c64:	(bad)  
 1034c65:	stc    
 1034c66:	cmc    
 1034c67:	(bad)  
 1034c68:	(bad)  
 1034c69:	clc    
 1034c6a:	hlt    
 1034c6b:	(bad)  
 1034c6c:	(bad)  
 1034c6d:	clc    
 1034c6e:	repz (bad) 
 1034c70:	push   edi
 1034c72:	repnz (bad) 
 1034c74:	push   esi
 1034c76:	icebp  
 1034c77:	(bad)  
 1034c78:	push   esi
 1034c7a:	lock (bad) 
 1034c7c:	push   ebp
 1034c7e:	out    dx,eax
 1034c7f:	(bad)  
 1034c80:	push   esp
 1034c82:	out    dx,al
 1034c83:	(bad)  
 1034c84:	push   esp
 1034c86:	in     eax,dx
 1034c87:	(bad)  
 1034c88:	push   ebx
 1034c8a:	in     al,dx
 1034c8b:	(bad)  
 1034c8c:	push   edx
 1034c8e:	jmp    0x1034c8f
 1034c90:	out    dx,eax
 1034c91:	out    0xe3,eax
 1034c93:	call   DWORD PTR [ecx-0x73]
 1034c96:	lods   al,BYTE PTR ds:[esi]
 1034c97:	jmp    edx
 1034c99:	sti    
 1034c9a:	(bad)  
 1034c9b:	jmp    DWORD PTR [ebp-0x5c00000f]
 1034ca1:	icebp  
 1034ca2:	(bad)  
 1034ca3:	jmp    DWORD PTR [edx+0x33fffff1]
 1034ca9:	ins    DWORD PTR es:[edi],dx
 1034caa:	(bad)  
 1034cab:	push   DWORD PTR [ecx-0x34005f5a]
 1034cb1:	mov    ebx,0xd5e7ffb2
 1034cb6:	retf   0xfaff
 1034cb9:	in     eax,0xd9
 1034cbb:	(bad)  
 1034cbc:	(bad)  
 1034cbd:	jmp    0xea034c9e
 1034cc2:	(bad)  
 1034cc4:	(bad)  
 1034cc5:	call   0xe9034ca4
 1034cca:	fdivr  st,st(7)
 1034ccc:	jmp    esi
 1034cce:	xlat   BYTE PTR ds:[ebx]
 1034ccf:	(bad)  
 1034cd0:	jmp    ebp
 1034cd2:	(bad)  
 1034cd3:	(bad)  
 1034cd4:	jmp    esp
 1034cd6:	aad    0xff
 1034cd8:	jmp    esp
 1034cda:	sar    edi,cl
 1034cdc:	jmp    ebx
 1034cde:	sar    bh,cl
 1034ce0:	jmp    edx
 1034ce2:	sar    edi,1
 1034ce4:	jmp    ecx
 1034ce6:	sar    bh,1
 1034ce8:	jmp    eax
 1034cea:	into   
 1034ceb:	(bad)  
 1034cec:	jmp    eax
 1034cee:	int    0xff
 1034cf0:	(bad)  
 1034cf1:	(bad)  
 1034cf3:	(bad)  
 1034cf4:	jp     0x1034d58
 1034cf6:	dec    ebx
 1034cf7:	inc    DWORD PTR [eax]
	...
 1034d11:	add    BYTE PTR [eax],al
 1034d13:	add    BYTE PTR [ebp-0x36007e7b],cl
 1034d19:	mov    ah,0xff
 1034d1c:	(bad)  
 1034d1d:	(bad)  
 1034d1e:	(bad)  
 1034d1f:	jmp    DWORD PTR [ebx+ebx*4-0x600006a]
 1034d26:	idiv   bh
 1034d28:	(bad)  
 1034d29:	stc    
 1034d2a:	cmc    
 1034d2b:	(bad)  
 1034d2c:	(bad)  
 1034d2d:	clc    
 1034d2e:	hlt    
 1034d2f:	(bad)  
 1034d30:	(bad)  
 1034d31:	clc    
 1034d32:	repz (bad) 
 1034d34:	push   edi
 1034d36:	repnz (bad) 
 1034d38:	push   esi
 1034d3a:	icebp  
 1034d3b:	(bad)  
 1034d3c:	push   esi
 1034d3e:	lock (bad) 
 1034d40:	push   ebp
 1034d42:	out    dx,eax
 1034d43:	(bad)  
 1034d44:	push   esp
 1034d46:	out    dx,al
 1034d47:	(bad)  
 1034d48:	push   esp
 1034d4a:	in     eax,dx
 1034d4b:	(bad)  
 1034d4c:	push   ebx
 1034d4e:	in     al,dx
 1034d4f:	(bad)  
 1034d50:	push   edx
 1034d52:	jmp    0x1034d53
 1034d54:	scas   al,BYTE PTR es:[edi]
 1034d55:	mov    edi,0xd193ffc8
 1034d5a:	in     eax,0xff
 1034d5c:	retf   0xfff7
 1034d5f:	jmp    DWORD PTR [eax-0x5b000010]
 1034d65:	icebp  
 1034d66:	(bad)  
 1034d67:	jmp    DWORD PTR [eax+0x37fffff0]
 1034d6d:	jo     0x1034d02
 1034d6f:	push   DWORD PTR [ecx-0x34005f5a]
 1034d75:	mov    ebx,0xd5e7ffb2
 1034d7a:	retf   0xfaff
 1034d7d:	in     eax,0xd9
 1034d7f:	(bad)  
 1034d80:	(bad)  
 1034d81:	jmp    0xea034d62
 1034d86:	(bad)  
 1034d88:	(bad)  
 1034d89:	call   0xe9034d68
 1034d8e:	fdivr  st,st(7)
 1034d90:	jmp    esi
 1034d92:	xlat   BYTE PTR ds:[ebx]
 1034d93:	(bad)  
 1034d94:	jmp    ebp
 1034d96:	(bad)  
 1034d97:	(bad)  
 1034d98:	jmp    esp
 1034d9a:	aad    0xff
 1034d9c:	jmp    esp
 1034d9e:	sar    edi,cl
 1034da0:	jmp    ebx
 1034da2:	sar    bh,cl
 1034da4:	jmp    edx
 1034da6:	sar    edi,1
 1034da8:	jmp    ecx
 1034daa:	sar    bh,1
 1034dac:	jmp    eax
 1034dae:	into   
 1034daf:	(bad)  
 1034db0:	jmp    eax
 1034db2:	int    0xff
 1034db4:	jnp    0x1034e19
 1034db6:	dec    esp
 1034db7:	inc    DWORD PTR [eax]
	...
 1034dd9:	add    BYTE PTR [eax],al
 1034ddb:	add    BYTE PTR [ebp-0x40f6e5f],dh
 1034de1:	cmc    
 1034de2:	repnz (bad) 
 1034de4:	(bad)  
 1034de5:	cli    
 1034de6:	idiv   edi
 1034de8:	(bad)  
 1034de9:	stc    
 1034dea:	idiv   bh
 1034dec:	(bad)  
 1034ded:	stc    
 1034dee:	cmc    
 1034def:	(bad)  
 1034df0:	(bad)  
 1034df1:	clc    
 1034df2:	hlt    
 1034df3:	(bad)  
 1034df4:	(bad)  
 1034df5:	clc    
 1034df6:	repz (bad) 
 1034df8:	push   edi
 1034dfa:	repnz (bad) 
 1034dfc:	push   esi
 1034dfe:	icebp  
 1034dff:	(bad)  
 1034e00:	push   esi
 1034e02:	lock (bad) 
 1034e04:	push   ebp
 1034e06:	out    dx,eax
 1034e07:	(bad)  
 1034e08:	push   esp
 1034e0a:	out    dx,al
 1034e0b:	(bad)  
 1034e0c:	push   esp
 1034e0e:	in     eax,dx
 1034e0f:	(bad)  
 1034e10:	push   ebx
 1034e12:	in     al,dx
 1034e13:	(bad)  
 1034e14:	push   edx
 1034e16:	jmp    0x1034e17
 1034e18:	pop    ecx
 1034e19:	mov    ah,BYTE PTR [ebp-0x92e01]
 1034e1f:	call   FWORD PTR [ebp-0x6d000013]
 1034e25:	jmp    0x1034e26
 1034e27:	call   DWORD PTR [ecx-0x6e000015]
 1034e2d:	jmp    0x1034e2e
 1034e2f:	push   DWORD PTR [edi]
 1034e31:	jb     0x1034dc9
 1034e33:	push   DWORD PTR [ecx-0x34005f5a]
 1034e39:	mov    ebx,0xd5e7ffb2
 1034e3e:	retf   0xfaff
 1034e41:	in     eax,0xda
 1034e43:	(bad)  
 1034e44:	(bad)  
 1034e45:	jmp    0xea034e26
 1034e4a:	(bad)  
 1034e4c:	(bad)  
 1034e4d:	call   0xe9034e2c
 1034e52:	fdivr  st,st(7)
 1034e54:	jmp    esi
 1034e56:	xlat   BYTE PTR ds:[ebx]
 1034e57:	(bad)  
 1034e58:	jmp    ebp
 1034e5a:	(bad)  
 1034e5b:	(bad)  
 1034e5c:	jmp    esp
 1034e5e:	aad    0xff
 1034e60:	jmp    esp
 1034e62:	sar    edi,cl
 1034e64:	jmp    ebx
 1034e66:	sar    bh,cl
 1034e68:	jmp    edx
 1034e6a:	sar    edi,1
 1034e6c:	jmp    ecx
 1034e6e:	sar    bh,1
 1034e70:	jmp    eax
 1034e72:	into   
 1034e73:	(bad)  
 1034e74:	jl     0x1034eda
 1034e76:	dec    ebp
 1034e77:	inc    DWORD PTR [eax]
	...
 1034e99:	add    BYTE PTR [eax],al
 1034e9b:	add    BYTE PTR [edi-0x40f6d5d],dh
 1034ea1:	div    bl
 1034ea3:	(bad)  
 1034ea4:	(bad)  
 1034ea5:	cli    
 1034ea6:	clc    
 1034ea7:	(bad)  
 1034ea8:	(bad)  
 1034ea9:	cli    
 1034eaa:	idiv   edi
 1034eac:	(bad)  
 1034ead:	stc    
 1034eae:	idiv   bh
 1034eb0:	(bad)  
 1034eb1:	stc    
 1034eb2:	cmc    
 1034eb3:	(bad)  
 1034eb4:	(bad)  
 1034eb5:	clc    
 1034eb6:	hlt    
 1034eb7:	(bad)  
 1034eb8:	(bad)  
 1034eb9:	clc    
 1034eba:	repz (bad) 
 1034ebc:	push   edi
 1034ebe:	repnz (bad) 
 1034ec0:	push   esi
 1034ec2:	icebp  
 1034ec3:	(bad)  
 1034ec4:	push   esi
 1034ec6:	lock (bad) 
 1034ec8:	std    
 1034ec9:	repz in eax,dx
 1034ecb:	push   esi
 1034ecd:	jmp    0x1034eb5
 1034ecf:	(bad)  
 1034ed0:	out    dx,eax
 1034ed1:	in     eax,0xde
 1034ed3:	(bad)  
 1034ed4:	in     al,dx
 1034ed5:	loope  0x1034eb1
 1034ed7:	call   esi
 1034ed9:	rcl    edx,cl
 1034edb:	call   FWORD PTR [ecx+ebx*4-0x49]
 1034edf:	dec    eax
 1034ee1:	repz (bad) 
 1034ee3:	(bad)  
 1034ee4:	jnp    0x1034eca
 1034ee6:	(bad)  
 1034ee7:	(bad)  
 1034ee8:	jp     0x1034ecf
 1034eea:	(bad)  
 1034eeb:	(bad)  
 1034eec:	jp     0x1034ed3
 1034eee:	(bad)  
 1034eef:	(bad)  
 1034ef0:	jl     0x1034ed6
 1034ef2:	(bad)  
 1034ef3:	push   DWORD PTR [edi]
 1034ef5:	jae    0x1034e8d
 1034ef7:	push   DWORD PTR [ecx-0x34005f5a]
 1034efd:	mov    esp,0xd5e7ffb2
 1034f02:	retf   0xfaff
 1034f05:	in     eax,0xda
 1034f07:	(bad)  
 1034f08:	(bad)  
 1034f09:	jmp    0xea034eea
 1034f0e:	(bad)  
 1034f10:	(bad)  
 1034f11:	call   0xe9034ef0
 1034f16:	fcos   
 1034f18:	jmp    esi
 1034f1a:	xlat   BYTE PTR ds:[ebx]
 1034f1b:	(bad)  
 1034f1c:	jmp    ebp
 1034f1e:	(bad)  
 1034f1f:	(bad)  
 1034f20:	jmp    esp
 1034f22:	aad    0xff
 1034f24:	jmp    esp
 1034f26:	sar    edi,cl
 1034f28:	jmp    ebx
 1034f2a:	sar    bh,cl
 1034f2c:	jmp    edx
 1034f2e:	sar    edi,1
 1034f30:	jmp    ecx
 1034f32:	sar    bh,1
 1034f34:	jge    0x1034f9a
 1034f36:	dec    esi
 1034f37:	inc    DWORD PTR [eax]
	...
 1034f51:	add    BYTE PTR [eax],al
 1034f53:	add    BYTE PTR [ebp-0x72007e7b],cl
 1034f59:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1034f5f:	jmp    FWORD PTR [ebp+0x62]
 1034f62:	pop    ebx
 1034f63:	(bad)  
 1034f64:	(bad)  
 1034f65:	sti    
 1034f66:	stc    
 1034f67:	(bad)  
 1034f68:	(bad)  
 1034f69:	sti    
 1034f6a:	clc    
 1034f6b:	(bad)  
 1034f6c:	(bad)  
 1034f6d:	cli    
 1034f6e:	idiv   edi
 1034f70:	(bad)  
 1034f71:	stc    
 1034f72:	idiv   bh
 1034f74:	(bad)  
 1034f75:	stc    
 1034f76:	cmc    
 1034f77:	(bad)  
 1034f78:	(bad)  
 1034f79:	clc    
 1034f7a:	hlt    
 1034f7b:	(bad)  
 1034f7c:	(bad)  
 1034f7d:	clc    
 1034f7e:	repz (bad) 
 1034f80:	push   edi
 1034f82:	repnz (bad) 
 1034f84:	push   esi
 1034f86:	icebp  
 1034f87:	push   esi
 1034f89:	in     eax,dx
 1034f8a:	call   0xd2da2f8e
 1034f8f:	dec    ebx
 1034f91:	ret    0xffbd
 1034f94:	lds    edi,FWORD PTR [ebp-0x433a0049]
 1034f9a:	mov    dh,0xff
 1034f9c:	jae    0x1034f32
 1034f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1034f9f:	jmp    DWORD PTR [esi-0x76000419]
 1034fa5:	in     al,0xff
 1034fa7:	jmp    DWORD PTR [eax-0x25]
 1034faa:	(bad)  
 1034fab:	jmp    DWORD PTR [eax-0x25]
 1034fae:	(bad)  
 1034faf:	jmp    DWORD PTR [ecx-0x25]
 1034fb2:	(bad)  
 1034fb3:	jmp    DWORD PTR [ebx-0x24]
 1034fb6:	(bad)  
 1034fb7:	push   DWORD PTR [edi]
 1034fb9:	je     0x1034f50
 1034fbb:	push   DWORD PTR [ecx-0x35005f5a]
 1034fc1:	mov    ebx,0xd4e6ffb1
 1034fc6:	leave  
 1034fc7:	(bad)  
 1034fc8:	stc    
 1034fc9:	in     al,0xd9
 1034fcb:	(bad)  
 1034fcc:	(bad)  
 1034fcd:	call   0xea034fad
 1034fd2:	(bad)  
 1034fd4:	(bad)  
 1034fd5:	call   0xe9034fb4
 1034fda:	fcos   
 1034fdc:	jmp    esi
 1034fde:	xlat   BYTE PTR ds:[ebx]
 1034fdf:	(bad)  
 1034fe0:	jmp    ebp
 1034fe2:	(bad)  
 1034fe3:	(bad)  
 1034fe4:	jmp    esp
 1034fe6:	aad    0xff
 1034fe8:	jmp    esp
 1034fea:	aam    0xff
 1034fec:	jmp    ebx
 1034fee:	sar    bh,cl
 1034ff0:	jmp    edx
 1034ff2:	sar    edi,1
 1034ff4:	jle    0x103505c
 1034ff6:	push   eax
 1034ff7:	inc    DWORD PTR [eax]
	...
 1035011:	add    BYTE PTR [eax],al
 1035013:	add    BYTE PTR [ebp-0x36007e7b],cl
 1035019:	mov    ah,0xff
 103501c:	(bad)  
 103501d:	(bad)  
 103501e:	(bad)  
 103501f:	jmp    DWORD PTR [ebx+ebx*4-0x300006a]
 1035026:	cli    
 1035027:	(bad)  
 1035028:	(bad)  
 1035029:	sti    
 103502a:	stc    
 103502b:	(bad)  
 103502c:	(bad)  
 103502d:	sti    
 103502e:	clc    
 103502f:	(bad)  
 1035030:	(bad)  
 1035031:	cli    
 1035032:	idiv   edi
 1035034:	(bad)  
 1035035:	stc    
 1035036:	idiv   bh
 1035038:	(bad)  
 1035039:	stc    
 103503a:	cmc    
 103503b:	(bad)  
 103503c:	(bad)  
 103503d:	clc    
 103503e:	hlt    
 103503f:	(bad)  
 1035040:	(bad)  
 1035041:	clc    
 1035042:	repz (bad) 
 1035044:	sti    
 1035045:	hlt    
 1035046:	out    dx,eax
 1035047:	jmp    FWORD PTR [esi+0x56ffc8c0]
 103504d:	xchg   esp,eax
 103504e:	mov    bl,0xff
 1035050:	push   edx
 1035051:	nop
 1035052:	scas   al,BYTE PTR es:[edi]
 1035053:	dec    DWORD PTR [esi-0x76]
 1035056:	stos   DWORD PTR es:[edi],eax
 1035057:	dec    DWORD PTR [edx-0x7a]
 103505a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 103505b:	call   FWORD PTR [esi-0x65]
 103505e:	mov    edx,0xc5a66bff
 1035063:	(bad)  
 1035064:	mov    ebp,0x48ffffef
 1035069:	sar    bh,cl
 103506b:	inc    DWORD PTR [edi-0x2c]
 103506e:	(bad)  
 103506f:	inc    DWORD PTR [edi-0x2c]
 1035072:	(bad)  
 1035073:	dec    DWORD PTR [edx-0x2d]
 1035076:	(bad)  
 1035077:	dec    DWORD PTR [esp+edx*8-0x1]
 103507b:	push   DWORD PTR [esi]
 103507d:	je     0x1035016
 103507f:	push   DWORD PTR [ecx-0x36005f5a]
 1035085:	mov    edx,0xd3e5ffb1
 103508a:	enter  0xf9ff,0xe4
 103508e:	fcos   
 1035090:	(bad)  
 1035091:	jmp    0xea035072
 1035096:	(bad)  
 1035098:	(bad)  
 1035099:	call   0xe9035078
 103509e:	fcos   
 10350a0:	jmp    esi
 10350a2:	xlat   BYTE PTR ds:[ebx]
 10350a3:	(bad)  
 10350a4:	jmp    ebp
 10350a6:	(bad)  
 10350a7:	(bad)  
 10350a8:	jmp    esp
 10350aa:	aad    0xff
 10350ac:	jmp    esp
 10350ae:	aam    0xff
 10350b0:	jmp    ebx
 10350b2:	sar    bh,cl
 10350b4:	jg     0x103511d
 10350b6:	push   ecx
 10350b7:	inc    DWORD PTR [eax]
	...
 10350d9:	add    BYTE PTR [eax],al
 10350db:	add    BYTE PTR [ebx-0x40f6859],bh
 10350e1:	clc    
 10350e2:	cmc    
 10350e3:	(bad)  
 10350e4:	(bad)  
 10350e5:	cld    
 10350e6:	cli    
 10350e7:	(bad)  
 10350e8:	(bad)  
 10350e9:	cld    
 10350ea:	cli    
 10350eb:	(bad)  
 10350ec:	(bad)  
 10350ed:	sti    
 10350ee:	stc    
 10350ef:	(bad)  
 10350f0:	(bad)  
 10350f1:	sti    
 10350f2:	clc    
 10350f3:	(bad)  
 10350f4:	(bad)  
 10350f5:	cli    
 10350f6:	idiv   edi
 10350f8:	(bad)  
 10350f9:	stc    
 10350fa:	idiv   bh
 10350fc:	(bad)  
 10350fd:	stc    
 10350fe:	cmc    
 10350ff:	(bad)  
 1035100:	(bad)  
 1035101:	clc    
 1035102:	hlt    
 1035103:	(bad)  
 1035104:	(bad)  
 1035105:	clc    
 1035106:	repz call FWORD PTR [ecx-0x70]
 103510a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 103510b:	push   DWORD PTR [edx-0x4c000013]
 1035111:	in     eax,dx
 1035112:	(bad)  
 1035113:	push   DWORD PTR [ebx-0x4b000013]
 1035119:	in     eax,dx
 103511a:	(bad)  
 103511b:	push   DWORD PTR [ebx-0x4c000013]
 1035121:	in     eax,dx
 1035122:	(bad)  
 1035123:	push   DWORD PTR [esi]
 1035125:	int3   
 1035126:	(bad)  
 1035127:	push   DWORD PTR ds:0x35ffffcc
 103512d:	int3   
 103512e:	(bad)  
 103512f:	push   DWORD PTR ds:0x36ffffcc
 1035135:	int3   
 1035136:	(bad)  
 1035137:	(bad)  
 1035138:	cmp    eax,0x46ffffcd
 103513d:	sar    edi,1
 103513f:	push   DWORD PTR [edx]
 1035141:	jb     0x10350db
 1035143:	jmp    FWORD PTR [ebx-0x2b005e5c]
 1035149:	les    edi,FWORD PTR [edx-0x2a1f0c01]
 103514f:	(bad)  
 1035150:	(bad)  
 1035151:	jmp    0xffdc:0xe9ffffde
 1035158:	(bad)  
 1035159:	call   0xea035139
 103515e:	(bad)  
 1035160:	jmp    edi
 1035162:	fcos   
 1035164:	jmp    esi
 1035166:	xlat   BYTE PTR ds:[ebx]
 1035167:	(bad)  
 1035168:	jmp    ebp
 103516a:	(bad)  
 103516b:	(bad)  
 103516c:	jmp    esp
 103516e:	aad    0xff
 1035170:	jmp    esp
 1035172:	aam    0xff
 1035174:	sub    BYTE PTR [eax+0x52],0xff
	...
 103519c:	mov    ebp,0xfbf099a9
 10351a1:	clc    
 10351a2:	idiv   bh
 10351a4:	(bad)  
 10351a5:	std    
 10351a6:	sti    
 10351a7:	(bad)  
 10351a8:	(bad)  
 10351a9:	cld    
 10351aa:	cli    
 10351ab:	(bad)  
 10351ac:	(bad)  
 10351ad:	cld    
 10351ae:	cli    
 10351af:	(bad)  
 10351b0:	(bad)  
 10351b1:	sti    
 10351b2:	stc    
 10351b3:	(bad)  
 10351b4:	(bad)  
 10351b5:	sti    
 10351b6:	clc    
 10351b7:	(bad)  
 10351b8:	(bad)  
 10351b9:	cli    
 10351ba:	idiv   edi
 10351bc:	(bad)  
 10351bd:	stc    
 10351be:	idiv   bh
 10351c0:	(bad)  
 10351c1:	stc    
 10351c2:	cmc    
 10351c3:	(bad)  
 10351c4:	sti    
 10351c5:	cmc    
 10351c6:	icebp  
 10351c7:	inc    DWORD PTR [ebp-0x5600505c]
 10351cd:	jmp    0xe58c51cc
 10351d2:	(bad)  
 10351d3:	jmp    FWORD PTR [edi-0x22]
 10351d6:	sti    
 10351d7:	jmp    FWORD PTR [esi-0x22]
 10351da:	sti    
 10351db:	jmp    FWORD PTR [esi-0x22]
 10351de:	sti    
 10351df:	jmp    FWORD PTR [esi-0x22]
 10351e2:	sti    
 10351e3:	jmp    FWORD PTR [esi-0x22]
 10351e6:	sti    
 10351e7:	jmp    FWORD PTR [esi-0x21]
 10351ea:	sti    
 10351eb:	jmp    FWORD PTR [esi-0x22]
 10351ee:	sti    
 10351ef:	jmp    FWORD PTR [esi-0x22]
 10351f2:	sti    
 10351f3:	jmp    FWORD PTR [esi-0x22]
 10351f6:	sti    
 10351f7:	jmp    FWORD PTR [esi-0x22]
 10351fa:	cld    
 10351fb:	jmp    FWORD PTR [esi-0x22]
 10351fe:	sti    
 10351ff:	inc    DWORD PTR [ebp+0x2ffffce9]
 1035205:	ins    DWORD PTR es:[edi],dx
 1035206:	xchg   ecx,eax
 1035207:	jmp    ecx
 1035209:	rol    bh,1
 103520b:	push   edi
 103520d:	in     eax,0xd9
 103520f:	(bad)  
 1035210:	(bad)  
 1035211:	jmp    0x10351f2
 1035213:	(bad)  
 1035214:	(bad)  
 1035215:	jmp    0xffdc:0xe9ffffde
 103521c:	(bad)  
 103521d:	call   0xea0351fd
 1035222:	(bad)  
 1035224:	jmp    edi
 1035226:	fcos   
 1035228:	jmp    esi
 103522a:	xlat   BYTE PTR ds:[ebx]
 103522b:	(bad)  
 103522c:	jmp    ebp
 103522e:	(bad)  
 103522f:	(bad)  
 1035230:	jmp    esp
 1035232:	aad    0xff
 1035234:	sub    BYTE PTR [ecx+0x54],0xff
	...
 1035254:	lea    eax,[ebp-0x7a72007f]
 103525a:	cmp    edi,0xff81858d
 1035260:	ins    DWORD PTR es:[edi],dx
 1035261:	bound  ebx,QWORD PTR [ebx-0x1]
 1035264:	(bad)  
 1035265:	std    
 1035266:	cld    
 1035267:	(bad)  
 1035268:	(bad)  
 1035269:	std    
 103526a:	sti    
 103526b:	(bad)  
 103526c:	(bad)  
 103526d:	cld    
 103526e:	cli    
 103526f:	(bad)  
 1035270:	(bad)  
 1035271:	cld    
 1035272:	cli    
 1035273:	(bad)  
 1035274:	(bad)  
 1035275:	sti    
 1035276:	stc    
 1035277:	(bad)  
 1035278:	(bad)  
 1035279:	sti    
 103527a:	clc    
 103527b:	(bad)  
 103527c:	(bad)  
 103527d:	cli    
 103527e:	idiv   edi
 1035280:	(bad)  
 1035281:	stc    
 1035282:	idiv   bh
 1035284:	(bad)  
 1035285:	stc    
 1035286:	cmc    
 1035287:	(bad)  
 1035288:	std    
 1035289:	div    ebx
 103528b:	call   FWORD PTR [ecx-0x70]
 103528e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 103528f:	push   DWORD PTR [esi+ebp*8-0x24960002]
 1035296:	sti    
 1035297:	jmp    DWORD PTR [edi-0x25]
 103529a:	cli    
 103529b:	jmp    FWORD PTR [eax-0x24]
 103529e:	sti    
 103529f:	jmp    FWORD PTR [eax-0x25]
 10352a2:	sti    
 10352a3:	jmp    DWORD PTR [edi-0x24]
 10352a6:	sti    
 10352a7:	jmp    DWORD PTR [edi-0x25]
 10352aa:	sti    
 10352ab:	jmp    FWORD PTR [ebx-0x23]
 10352ae:	sti    
 10352af:	dec    DWORD PTR [ebx-0x6e]
 10352b2:	mov    bl,0xff
 10352b4:	inc    edi
 10352b5:	mov    ch,BYTE PTR [ebx-0x5475b801]
 10352bb:	inc    DWORD PTR [edi-0x76]
 10352be:	stos   DWORD PTR es:[edi],eax
 10352bf:	inc    DWORD PTR [edi-0x76]
 10352c2:	stos   DWORD PTR es:[edi],eax
 10352c3:	push   DWORD PTR [ecx-0x8003f47]
 10352c9:	out    0xdc,al
 10352cb:	(bad)  
 10352cc:	std    
 10352cd:	jmp    0xffe0:0xecffffdf
 10352d4:	(bad)  
 10352d5:	jmp    0x10352b6
 10352d7:	(bad)  
 10352d8:	(bad)  
 10352d9:	jmp    0xffdc:0xe9ffffde
 10352e0:	(bad)  
 10352e1:	call   0xea0352c1
 10352e6:	(bad)  
 10352e8:	jmp    edi
 10352ea:	fcos   
 10352ec:	jmp    esi
 10352ee:	xlat   BYTE PTR ds:[ebx]
 10352ef:	(bad)  
 10352f0:	jmp    ebp
 10352f2:	(bad)  
 10352f3:	inc    DWORD PTR [ebx+0xff556b]
	...
 1035311:	add    BYTE PTR [eax],al
 1035313:	add    BYTE PTR [ebp-0x36007e7b],cl
 1035319:	mov    ah,0xff
 103531c:	(bad)  
 103531d:	(bad)  
 103531e:	(bad)  
 103531f:	jmp    DWORD PTR [ebx+ebx*4-0x200006a]
 1035326:	std    
 1035327:	(bad)  
 1035328:	(bad)  
 1035329:	std    
 103532a:	cld    
 103532b:	(bad)  
 103532c:	(bad)  
 103532d:	std    
 103532e:	sti    
 103532f:	(bad)  
 1035330:	(bad)  
 1035331:	cld    
 1035332:	cli    
 1035333:	(bad)  
 1035334:	(bad)  
 1035335:	cld    
 1035336:	cli    
 1035337:	(bad)  
 1035338:	(bad)  
 1035339:	sti    
 103533a:	stc    
 103533b:	(bad)  
 103533c:	(bad)  
 103533d:	sti    
 103533e:	clc    
 103533f:	(bad)  
 1035340:	(bad)  
 1035341:	cli    
 1035342:	idiv   edi
 1035344:	(bad)  
 1035345:	stc    
 1035346:	idiv   bh
 1035348:	(bad)  
 1035349:	stc    
 103534a:	cmc    
 103534b:	jmp    DWORD PTR [eax-0x4c003844]
 1035351:	jmp    0xfffd:0xeea7fff6
 1035358:	jnp    0x103533f
 103535a:	cld    
 103535b:	(bad)  
 103535c:	jl     0x1035343
 103535e:	sti    
 103535f:	(bad)  
 1035360:	jl     0x1035346
 1035362:	sti    
 1035363:	(bad)  
 1035364:	jnp    0x103534a
 1035366:	sti    
 1035367:	(bad)  
 1035368:	jl     0x103534f
 103536a:	sti    
 103536b:	(bad)  
 103536c:	jge    0x1035353
 103536e:	sti    
 103536f:	(bad)  
 1035370:	jle    0x1035357
 1035372:	sti    
 1035373:	call   DWORD PTR [edi+ecx*4-0x53]
 1035377:	push   DWORD PTR [ebp-0x2f005652]
 103537d:	les    edi,FWORD PTR [edi+edi*8-0x2a2214]
 1035384:	cld    
 1035385:	in     al,dx
 1035386:	loop   0x1035387
 1035388:	(bad)  
 1035389:	out    dx,al
 103538a:	in     al,0xff
 103538c:	(bad)  
 103538d:	in     eax,dx
 103538e:	jecxz  0x103538f
 1035390:	(bad)  
 1035391:	in     al,dx
 1035392:	loope  0x1035393
 1035394:	(bad)  
 1035395:	in     al,dx
 1035396:	loopne 0x1035397
 1035398:	(bad)  
 1035399:	jmp    0x103537a
 103539b:	(bad)  
 103539c:	(bad)  
 103539d:	jmp    0xffdc:0xe9ffffde
 10353a4:	(bad)  
 10353a5:	call   0xea035385
 10353aa:	(bad)  
 10353ac:	jmp    edi
 10353ae:	fcos   
 10353b0:	jmp    esi
 10353b2:	xlat   BYTE PTR ds:[ebx]
 10353b3:	inc    DWORD PTR [ebx+0xff576c]
	...
 10353d9:	add    BYTE PTR [eax],al
 10353db:	add    cl,al
 10353dd:	lods   eax,DWORD PTR ds:[esi]
 10353de:	popf   
 10353df:	lock sti 
 10353e1:	stc    
 10353e2:	clc    
 10353e3:	(bad)  
 10353e4:	(bad)  
 10353e5:	(bad)  
 10353e6:	std    
 10353e7:	(bad)  
 10353e8:	(bad)  
 10353e9:	std    
 10353ea:	std    
 10353eb:	(bad)  
 10353ec:	(bad)  
 10353ed:	std    
 10353ee:	cld    
 10353ef:	(bad)  
 10353f0:	(bad)  
 10353f1:	std    
 10353f2:	sti    
 10353f3:	(bad)  
 10353f4:	(bad)  
 10353f5:	cld    
 10353f6:	cli    
 10353f7:	(bad)  
 10353f8:	(bad)  
 10353f9:	cld    
 10353fa:	cli    
 10353fb:	(bad)  
 10353fc:	(bad)  
 10353fd:	sti    
 10353fe:	stc    
 10353ff:	(bad)  
 1035400:	(bad)  
 1035401:	sti    
 1035402:	clc    
 1035403:	(bad)  
 1035404:	(bad)  
 1035405:	cli    
 1035406:	idiv   edi
 1035408:	(bad)  
 1035409:	stc    
 103540a:	idiv   bh
 103540c:	std    
 103540d:	clc    
 103540e:	hlt    
 103540f:	jmp    DWORD PTR [ecx-0x69]
 1035412:	lods   eax,DWORD PTR ds:[esi]
 1035413:	(bad)  
 1035414:	fdiv   st(2),st
 1035416:	(bad)  
 1035417:	(bad)  
 1035418:	jns    0x10353fd
 103541a:	sti    
 103541b:	push   DWORD PTR [esi-0x1d]
 103541e:	sti    
 103541f:	push   DWORD PTR [edi-0x1d]
 1035422:	sti    
 1035423:	push   DWORD PTR [esi-0x1d]
 1035426:	cli    
 1035427:	push   DWORD PTR [esi-0x1d]
 103542a:	cli    
 103542b:	push   DWORD PTR [esi-0x1d]
 103542e:	sti    
 103542f:	push   DWORD PTR [edi-0x1d]
 1035432:	sti    
 1035433:	(bad)  
 1035434:	jns    0x1035418
 1035436:	sti    
 1035437:	call   FWORD PTR [ebp-0x73]
 103543a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 103543b:	(bad)  
 103543c:	mov    ebx,0xd4ffacb1
 1035441:	enter  0xffc1,0xef
 1035445:	loopne 0x103541f
 1035447:	(bad)  
 1035448:	std    
 1035449:	in     eax,dx
 103544a:	jecxz  0x103544b
 103544c:	(bad)  
 103544d:	out    dx,al
 103544e:	in     al,0xff
 1035450:	(bad)  
 1035451:	in     eax,dx
 1035452:	jecxz  0x1035453
 1035454:	(bad)  
 1035455:	in     al,dx
 1035456:	loope  0x1035457
 1035458:	(bad)  
 1035459:	in     al,dx
 103545a:	loopne 0x103545b
 103545c:	(bad)  
 103545d:	jmp    0x103543e
 103545f:	(bad)  
 1035460:	(bad)  
 1035461:	jmp    0xffdd:0xe9ffffde
 1035468:	(bad)  
 1035469:	jmp    0xea035449
 103546e:	(bad)  
 1035470:	jmp    edi
 1035472:	fcos   
 1035474:	test   DWORD PTR [esi+0x59],ebp
 1035477:	inc    DWORD PTR [eax]
	...
 1035499:	add    BYTE PTR [eax],al
 103549b:	add    dl,al
 103549d:	scas   al,BYTE PTR es:[edi]
 103549e:	lahf   
 103549f:	lock sti 
 10354a1:	cli    
 10354a2:	clc    
 10354a3:	(bad)  
 10354a4:	(bad)  
 10354a5:	(bad)  
 10354a6:	(bad)  
 10354a7:	(bad)  
 10354a8:	(bad)  
 10354a9:	(bad)  
 10354aa:	std    
 10354ab:	(bad)  
 10354ac:	(bad)  
 10354ad:	std    
 10354ae:	std    
 10354af:	(bad)  
 10354b0:	(bad)  
 10354b1:	std    
 10354b2:	cld    
 10354b3:	(bad)  
 10354b4:	(bad)  
 10354b5:	std    
 10354b6:	sti    
 10354b7:	(bad)  
 10354b8:	(bad)  
 10354b9:	cld    
 10354ba:	cli    
 10354bb:	(bad)  
 10354bc:	(bad)  
 10354bd:	cld    
 10354be:	cli    
 10354bf:	(bad)  
 10354c0:	(bad)  
 10354c1:	sti    
 10354c2:	stc    
 10354c3:	(bad)  
 10354c4:	(bad)  
 10354c5:	sti    
 10354c6:	clc    
 10354c7:	(bad)  
 10354c8:	(bad)  
 10354c9:	cli    
 10354ca:	idiv   edi
 10354cc:	(bad)  
 10354cd:	cli    
 10354ce:	idiv   bh
 10354d0:	scas   al,BYTE PTR es:[edi]
 10354d1:	(bad)  
 10354d2:	iret   
 10354d3:	jmp    FWORD PTR [ebp-0x57000d1c]
 10354d9:	in     eax,dx
 10354da:	std    
 10354db:	push   DWORD PTR [ecx-0x1f]
 10354de:	cli    
 10354df:	push   DWORD PTR [edx-0x1f]
 10354e2:	cli    
 10354e3:	push   DWORD PTR [edx-0x20]
 10354e6:	cli    
 10354e7:	push   DWORD PTR [edx-0x1f]
 10354ea:	cli    
 10354eb:	push   DWORD PTR [ecx-0x20]
 10354ee:	sti    
 10354ef:	push   DWORD PTR [ecx-0x1f]
 10354f2:	cli    
 10354f3:	push   DWORD PTR [ebx-0x20]
 10354f6:	cli    
 10354f7:	push   DWORD PTR [edx-0x21]
 10354fa:	cli    
 10354fb:	jmp    FWORD PTR [ebp-0x70]
 10354fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10354ff:	(bad)  
 1035500:	mov    edi,0xd9ffafb5
 1035505:	int3   
 1035506:	(bad)  
 1035509:	in     al,0xdb
 103550b:	(bad)  
 103550c:	std    
 103550d:	in     eax,dx
 103550e:	jecxz  0x103550f
 1035510:	(bad)  
 1035511:	out    dx,al
 1035512:	in     al,0xff
 1035514:	(bad)  
 1035515:	in     eax,dx
 1035516:	jecxz  0x1035517
 1035518:	(bad)  
 1035519:	in     al,dx
 103551a:	loop   0x103551b
 103551c:	(bad)  
 103551d:	in     al,dx
 103551e:	loopne 0x103551f
 1035520:	(bad)  
 1035521:	jmp    0x1035502
 1035523:	(bad)  
 1035524:	(bad)  
 1035525:	jmp    0xffdd:0xe9ffffde
 103552c:	(bad)  
 103552d:	jmp    0xea03550d
 1035532:	(bad)  
 1035534:	xchg   BYTE PTR [edi+0x5a],ch
 1035537:	inc    DWORD PTR [eax]
	...
 1035551:	add    BYTE PTR [eax],al
 1035553:	add    BYTE PTR [ebp-0x72007e7b],cl
 1035559:	test   DWORD PTR [ecx-0x7e7a7201],eax
 103555f:	jmp    FWORD PTR [ebp+0x62]
 1035562:	pop    ebx
 1035563:	(bad)  
 1035564:	(bad)  
 1035565:	(bad)  
 1035566:	(bad)  
 1035567:	(bad)  
 1035568:	(bad)  
 1035569:	(bad)  
 103556a:	(bad)  
 103556b:	(bad)  
 103556c:	(bad)  
 103556d:	(bad)  
 103556e:	std    
 103556f:	(bad)  
 1035570:	(bad)  
 1035571:	std    
 1035572:	std    
 1035573:	(bad)  
 1035574:	(bad)  
 1035575:	std    
 1035576:	cld    
 1035577:	(bad)  
 1035578:	(bad)  
 1035579:	std    
 103557a:	sti    
 103557b:	(bad)  
 103557c:	(bad)  
 103557d:	cld    
 103557e:	cli    
 103557f:	(bad)  
 1035580:	(bad)  
 1035581:	cld    
 1035582:	cli    
 1035583:	(bad)  
 1035584:	(bad)  
 1035585:	sti    
 1035586:	stc    
 1035587:	(bad)  
 1035588:	(bad)  
 1035589:	sti    
 103558a:	clc    
 103558b:	(bad)  
 103558c:	(bad)  
 103558d:	cli    
 103558e:	idiv   edi
 1035590:	std    
 1035591:	stc    
 1035592:	cmc    
 1035593:	jmp    DWORD PTR [esi-0x62]
 1035596:	mov    bl,0xff
 1035598:	fyl2xp1 
 103559a:	(bad)  
 103559b:	push   DWORD PTR [ecx-0x20]
 103559e:	stc    
 103559f:	jmp    FWORD PTR [ebp-0x21]
 10355a2:	cli    
 10355a3:	jmp    FWORD PTR [ebp-0x21]
 10355a6:	cli    
 10355a7:	jmp    FWORD PTR [edi+ebx*8-0x6]
 10355ab:	jmp    FWORD PTR [edi+ebx*8-0x6]
 10355af:	jmp    FWORD PTR [ebp-0x21]
 10355b2:	cli    
 10355b3:	jmp    FWORD PTR [ebp-0x21]
 10355b6:	cli    
 10355b7:	jmp    FWORD PTR [esi-0x21]
 10355ba:	cli    
 10355bb:	jmp    FWORD PTR [edx-0x2d]
 10355be:	icebp  
 10355bf:	inc    DWORD PTR [ecx-0x3c005967]
 10355c5:	mov    eax,0xd1deffb2
 10355ca:	retf   0xf5ff
 10355cd:	out    0xdd,eax
 10355cf:	(bad)  
 10355d0:	(bad)  
 10355d1:	out    dx,al
 10355d2:	in     al,0xff
 10355d4:	(bad)  
 10355d5:	out    dx,al
 10355d6:	in     al,0xff
 10355d8:	(bad)  
 10355d9:	in     eax,dx
 10355da:	jecxz  0x10355db
 10355dc:	(bad)  
 10355dd:	in     al,dx
 10355de:	loop   0x10355df
 10355e0:	(bad)  
 10355e1:	in     al,dx
 10355e2:	loopne 0x10355e3
 10355e4:	(bad)  
 10355e5:	jmp    0x10355c6
 10355e7:	(bad)  
 10355e8:	(bad)  
 10355e9:	jmp    0xffdd:0xe9ffffde
 10355f0:	(bad)  
 10355f1:	jmp    0x728c55d1
 10355f6:	pop    esp
 10355f7:	inc    DWORD PTR [eax]
	...
 1035611:	add    BYTE PTR [eax],al
 1035613:	add    BYTE PTR [ebp-0x36007e7b],cl
 1035619:	mov    ah,0xff
 103561c:	(bad)  
 103561d:	(bad)  
 103561e:	(bad)  
 103561f:	jmp    DWORD PTR [ebx+ebx*4-0x6a]
 1035626:	(bad)  
 1035627:	(bad)  
 1035628:	(bad)  
 1035629:	(bad)  
 103562a:	(bad)  
 103562b:	(bad)  
 103562c:	(bad)  
 103562d:	(bad)  
 103562e:	(bad)  
 103562f:	(bad)  
 1035630:	(bad)  
 1035631:	(bad)  
 1035632:	std    
 1035633:	(bad)  
 1035634:	(bad)  
 1035635:	std    
 1035636:	std    
 1035637:	(bad)  
 1035638:	(bad)  
 1035639:	std    
 103563a:	cld    
 103563b:	(bad)  
 103563c:	(bad)  
 103563d:	std    
 103563e:	sti    
 103563f:	(bad)  
 1035640:	(bad)  
 1035641:	cld    
 1035642:	cli    
 1035643:	(bad)  
 1035644:	(bad)  
 1035645:	cld    
 1035646:	cli    
 1035647:	(bad)  
 1035648:	(bad)  
 1035649:	sti    
 103564a:	stc    
 103564b:	(bad)  
 103564c:	(bad)  
 103564d:	sti    
 103564e:	clc    
 103564f:	(bad)  
 1035650:	(bad)  
 1035651:	cli    
 1035652:	idiv   edi
 1035654:	mov    dh,0xcd
 1035656:	aam    0xff
 1035658:	test   al,0xe3
 103565a:	lock jmp DWORD PTR [esi+0x6afffcec]
 1035661:	(bad)  
 1035663:	jmp    FWORD PTR [ecx-0x23]
 1035666:	cli    
 1035667:	jmp    FWORD PTR [eax-0x23]
 103566a:	stc    
 103566b:	jmp    FWORD PTR [eax-0x23]
 103566e:	stc    
 103566f:	jmp    FWORD PTR [eax-0x23]
 1035672:	stc    
 1035673:	jmp    FWORD PTR [ecx-0x23]
 1035676:	cli    
 1035677:	jmp    FWORD PTR [eax-0x23]
 103567a:	cli    
 103567b:	jmp    FWORD PTR [eax-0x23]
 103567e:	stc    
 103567f:	jmp    DWORD PTR [edx-0x3f]
 1035682:	(bad)  
 1035684:	xchg   esp,eax
 1035685:	mov    al,ds:0xbac5ffa6
 103568a:	mov    ah,0xff
 103568c:	loope  0x1035662
 103568e:	int    0xff
 1035690:	imul   eax
 1035692:	(bad)  
 1035694:	(bad)  
 1035695:	out    dx,al
 1035696:	in     al,0xff
 1035698:	(bad)  
 1035699:	out    dx,al
 103569a:	in     al,0xff
 103569c:	(bad)  
 103569d:	in     eax,dx
 103569e:	jecxz  0x103569f
 10356a0:	(bad)  
 10356a1:	in     al,dx
 10356a2:	loop   0x10356a3
 10356a4:	(bad)  
 10356a5:	in     al,dx
 10356a6:	loopne 0x10356a7
 10356a8:	(bad)  
 10356a9:	jmp    0x103568a
 10356ab:	(bad)  
 10356ac:	(bad)  
 10356ad:	jmp    0xffdd:0xe9ffffde
 10356b4:	mov    DWORD PTR [edx+0x5d],esi
 10356b7:	inc    DWORD PTR [eax]
	...
 10356d9:	add    BYTE PTR [eax],al
 10356db:	add    dh,al
 10356dd:	mov    dl,0xa3
 10356df:	lock cld 
 10356e1:	cli    
 10356e2:	stc    
 10356e3:	(bad)  
 10356e4:	(bad)  
 10356e5:	(bad)  
 10356e6:	(bad)  
 10356e7:	(bad)  
 10356e8:	(bad)  
 10356e9:	(bad)  
 10356ea:	(bad)  
 10356eb:	(bad)  
 10356ec:	(bad)  
 10356ed:	(bad)  
 10356ee:	(bad)  
 10356ef:	(bad)  
 10356f0:	(bad)  
 10356f1:	(bad)  
 10356f2:	(bad)  
 10356f3:	(bad)  
 10356f4:	(bad)  
 10356f5:	(bad)  
 10356f6:	std    
 10356f7:	(bad)  
 10356f8:	(bad)  
 10356f9:	std    
 10356fa:	std    
 10356fb:	(bad)  
 10356fc:	(bad)  
 10356fd:	std    
 10356fe:	cld    
 10356ff:	(bad)  
 1035700:	(bad)  
 1035701:	std    
 1035702:	sti    
 1035703:	(bad)  
 1035704:	(bad)  
 1035705:	cld    
 1035706:	cli    
 1035707:	(bad)  
 1035708:	(bad)  
 1035709:	cld    
 103570a:	cli    
 103570b:	(bad)  
 103570c:	(bad)  
 103570d:	sti    
 103570e:	stc    
 103570f:	(bad)  
 1035710:	(bad)  
 1035711:	sti    
 1035712:	clc    
 1035713:	(bad)  
 1035714:	(bad)  
 1035715:	cli    
 1035716:	idiv   edi
 1035718:	ins    DWORD PTR es:[edi],dx
 1035719:	mov    ds:0xf7d8ffb6,eax
 103571e:	(bad)  
 103571f:	jmp    FWORD PTR [ebx-0x24]
 1035722:	stc    
 1035723:	jmp    DWORD PTR [esp+ebx*8-0x7]
 1035727:	jmp    DWORD PTR [ebx+ebx*8-0x7]
 103572b:	jmp    DWORD PTR [esp+ebx*8-0x7]
 103572f:	jmp    DWORD PTR [ebx+ebx*8-0x7]
 1035733:	jmp    DWORD PTR [ebx+ebx*8-0x7]
 1035737:	jmp    DWORD PTR [ebx+ebx*8-0x7]
 103573b:	jmp    DWORD PTR [esp+ebx*8-0x7]
 103573f:	jmp    DWORD PTR [esp+ebx*8-0x7]
 1035743:	call   FWORD PTR [ebp-0x4e]
 1035746:	sar    bh,1
 1035748:	mov    al,ds:0xc7ffa7a5
 103574d:	mov    esp,0xd7e4ffb6
 1035752:	iret   
 1035753:	(bad)  
 1035754:	stc    
 1035755:	jmp    0xffe5:0xefffffe1
 103575c:	(bad)  
 103575d:	out    dx,al
 103575e:	in     al,0xff
 1035760:	(bad)  
 1035761:	in     eax,dx
 1035762:	jecxz  0x1035763
 1035764:	(bad)  
 1035765:	in     eax,dx
 1035766:	loop   0x1035767
 1035768:	(bad)  
 1035769:	in     al,dx
 103576a:	loopne 0x103576b
 103576c:	(bad)  
 103576d:	jmp    0x103574e
 103576f:	(bad)  
 1035770:	(bad)  
 1035771:	jmp    0xff5f:0x748affde
	...
 103579c:	(bad)  
 103579d:	mov    bl,0xa4
 103579f:	lock cld 
 10357a1:	cli    
 10357a2:	cli    
 10357a3:	(bad)  
 10357a4:	(bad)  
 10357a5:	(bad)  
 10357a6:	(bad)  
 10357a7:	(bad)  
 10357a8:	(bad)  
 10357a9:	(bad)  
 10357aa:	(bad)  
 10357ab:	(bad)  
 10357ac:	(bad)  
 10357ad:	(bad)  
 10357ae:	(bad)  
 10357af:	(bad)  
 10357b0:	(bad)  
 10357b1:	(bad)  
 10357b2:	(bad)  
 10357b3:	(bad)  
 10357b4:	(bad)  
 10357b5:	(bad)  
 10357b6:	(bad)  
 10357b7:	(bad)  
 10357b8:	(bad)  
 10357b9:	(bad)  
 10357ba:	std    
 10357bb:	(bad)  
 10357bc:	(bad)  
 10357bd:	std    
 10357be:	std    
 10357bf:	(bad)  
 10357c0:	(bad)  
 10357c1:	std    
 10357c2:	cld    
 10357c3:	(bad)  
 10357c4:	(bad)  
 10357c5:	std    
 10357c6:	sti    
 10357c7:	(bad)  
 10357c8:	(bad)  
 10357c9:	cld    
 10357ca:	cli    
 10357cb:	(bad)  
 10357cc:	(bad)  
 10357cd:	cld    
 10357ce:	cli    
 10357cf:	(bad)  
 10357d0:	(bad)  
 10357d1:	sti    
 10357d2:	stc    
 10357d3:	(bad)  
 10357d4:	(bad)  
 10357d5:	sti    
 10357d6:	clc    
 10357d7:	(bad)  
 10357d8:	mov    esp,0xa7ffd8d1
 10357dd:	loop   0x10357cf
 10357df:	jmp    DWORD PTR [edx+ebp*8-0x259f0004]
 10357e6:	stc    
 10357e7:	jmp    DWORD PTR [ecx-0x26]
 10357ea:	stc    
 10357eb:	jmp    DWORD PTR [ecx-0x26]
 10357ee:	stc    
 10357ef:	jmp    DWORD PTR [eax-0x26]
 10357f2:	clc    
 10357f3:	jmp    DWORD PTR [eax-0x26]
 10357f6:	stc    
 10357f7:	jmp    DWORD PTR [ecx-0x25]
 10357fa:	clc    
 10357fb:	jmp    DWORD PTR [ecx-0x26]
 10357fe:	stc    
 10357ff:	jmp    DWORD PTR [eax-0x26]
 1035802:	clc    
 1035803:	jmp    DWORD PTR [ecx-0x26]
 1035806:	stc    
 1035807:	call   DWORD PTR [esi-0x60]
 103580a:	mov    edi,0xaaacaeff
 103580f:	call   ebx
 1035811:	mov    ecx,0xdce4f2ff
 1035817:	(bad)  
 1035818:	push   eax
 103581a:	out    0xff,al
 103581c:	(bad)  
 103581d:	out    dx,eax
 103581e:	in     eax,0xff
 1035820:	(bad)  
 1035821:	out    dx,al
 1035822:	in     al,0xff
 1035824:	(bad)  
 1035825:	in     eax,dx
 1035826:	jecxz  0x1035827
 1035828:	(bad)  
 1035829:	in     eax,dx
 103582a:	loop   0x103582b
 103582c:	(bad)  
 103582d:	in     al,dx
 103582e:	loopne 0x103582f
 1035830:	(bad)  
 1035831:	jmp    0x1035812
 1035833:	dec    DWORD PTR [ebx+0xff6175]
	...
 1035851:	add    BYTE PTR [eax],al
 1035853:	add    BYTE PTR [ebp-0x72007e7b],cl
 1035859:	test   DWORD PTR [ecx-0x7e7a7201],eax
 103585f:	jmp    FWORD PTR [ebp+0x62]
 1035862:	pop    ebx
 1035863:	(bad)  
 1035864:	(bad)  
 1035865:	(bad)  
 1035866:	(bad)  
 1035867:	(bad)  
 1035868:	(bad)  
 1035869:	(bad)  
 103586a:	(bad)  
 103586b:	(bad)  
 103586c:	(bad)  
 103586d:	(bad)  
 103586e:	(bad)  
 103586f:	(bad)  
 1035870:	(bad)  
 1035871:	(bad)  
 1035872:	(bad)  
 1035873:	(bad)  
 1035874:	(bad)  
 1035875:	(bad)  
 1035876:	(bad)  
 1035877:	(bad)  
 1035878:	(bad)  
 1035879:	(bad)  
 103587a:	(bad)  
 103587b:	(bad)  
 103587c:	(bad)  
 103587d:	(bad)  
 103587e:	std    
 103587f:	(bad)  
 1035880:	(bad)  
 1035881:	(bad)  
 1035882:	std    
 1035883:	(bad)  
 1035884:	(bad)  
 1035885:	std    
 1035886:	cld    
 1035887:	(bad)  
 1035888:	(bad)  
 1035889:	std    
 103588a:	sti    
 103588b:	(bad)  
 103588c:	(bad)  
 103588d:	cld    
 103588e:	sti    
 103588f:	(bad)  
 1035890:	(bad)  
 1035891:	cld    
 1035892:	cli    
 1035893:	(bad)  
 1035894:	(bad)  
 1035895:	sti    
 1035896:	stc    
 1035897:	(bad)  
 1035898:	(bad)  
 1035899:	sti    
 103589a:	clc    
 103589b:	push   DWORD PTR [eax+ebp*4-0x46]
 103589f:	call   ebp
 10358a1:	idiv   edi
 10358a3:	jmp    DWORD PTR [eax-0x26]
 10358a6:	stc    
 10358a7:	call   FWORD PTR [esi-0x28]
 10358aa:	clc    
 10358ab:	call   FWORD PTR [ebp-0x28]
 10358ae:	clc    
 10358af:	call   FWORD PTR [ebp-0x27]
 10358b2:	stc    
 10358b3:	call   FWORD PTR [ebp-0x28]
 10358b6:	stc    
 10358b7:	call   FWORD PTR [ebp-0x27]
 10358ba:	clc    
 10358bb:	call   FWORD PTR [ebp-0x27]
 10358be:	clc    
 10358bf:	call   FWORD PTR [esi-0x27]
 10358c2:	clc    
 10358c3:	call   FWORD PTR [esi-0x27]
 10358c6:	clc    
 10358c7:	call   FWORD PTR [ebp-0x27]
 10358ca:	stc    
 10358cb:	call   DWORD PTR [ecx-0x73]
 10358ce:	scas   al,BYTE PTR es:[edi]
 10358cf:	(bad)  
 10358d0:	fst    st(2)
 10358d2:	retf   
 10358d3:	push   ebp
 10358d5:	call   0xf20358ba
 10358da:	call   0xe8f458de
 10358df:	(bad)  
 10358e0:	(bad)  
 10358e1:	out    dx,eax
 10358e2:	in     eax,0xff
 10358e4:	(bad)  
 10358e5:	out    dx,al
 10358e6:	in     al,0xff
 10358e8:	(bad)  
 10358e9:	in     eax,dx
 10358ea:	jecxz  0x10358eb
 10358ec:	(bad)  
 10358ed:	in     eax,dx
 10358ee:	loop   0x10358ef
 10358f0:	(bad)  
 10358f1:	in     al,dx
 10358f2:	loopne 0x10358f3
 10358f4:	mov    WORD PTR [edi+0x62],?
 10358f7:	inc    DWORD PTR [eax]
	...
 1035911:	add    BYTE PTR [eax],al
 1035913:	add    BYTE PTR [ebp-0x36007e7b],cl
 1035919:	mov    ah,0xff
 103591c:	(bad)  
 103591d:	(bad)  
 103591e:	(bad)  
 103591f:	jmp    DWORD PTR [ebx+ebx*4-0x6a]
 1035926:	(bad)  
 1035927:	(bad)  
 1035928:	(bad)  
 1035929:	(bad)  
 103592a:	(bad)  
 103592b:	(bad)  
 103592c:	(bad)  
 103592d:	(bad)  
 103592e:	(bad)  
 103592f:	(bad)  
 1035930:	(bad)  
 1035931:	(bad)  
 1035932:	(bad)  
 1035933:	(bad)  
 1035934:	(bad)  
 1035935:	(bad)  
 1035936:	(bad)  
 1035937:	(bad)  
 1035938:	(bad)  
 1035939:	(bad)  
 103593a:	(bad)  
 103593b:	(bad)  
 103593c:	(bad)  
 103593d:	(bad)  
 103593e:	(bad)  
 103593f:	(bad)  
 1035940:	(bad)  
 1035941:	(bad)  
 1035942:	std    
 1035943:	(bad)  
 1035944:	(bad)  
 1035945:	(bad)  
 1035946:	std    
 1035947:	(bad)  
 1035948:	(bad)  
 1035949:	std    
 103594a:	cld    
 103594b:	(bad)  
 103594c:	(bad)  
 103594d:	std    
 103594e:	sti    
 103594f:	(bad)  
 1035950:	(bad)  
 1035951:	cld    
 1035952:	sti    
 1035953:	(bad)  
 1035954:	(bad)  
 1035955:	cld    
 1035956:	cli    
 1035957:	(bad)  
 1035958:	(bad)  
 1035959:	sti    
 103595a:	stc    
 103595b:	inc    ebx
 103595d:	xlat   BYTE PTR ds:[ebx]
 103595e:	(bad)  
 1035960:	ins    DWORD PTR es:[edi],dx
 1035961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1035962:	mov    ebx,0xb9a66cff
 1035967:	jmp    FWORD PTR [ecx-0x5d]
 103596a:	mov    bh,0xff
 103596c:	addr16 sahf 
 103596e:	mov    ah,0xff
 1035970:	arpl   WORD PTR [ebx-0x69a0004f],bx
 1035976:	scas   eax,DWORD PTR es:[edi]
 1035977:	call   FWORD PTR [ebx+edx*4-0x54]
 103597b:	call   FWORD PTR [ecx-0x70]
 103597e:	test   eax,0xa58c55ff
 1035983:	call   DWORD PTR [ecx-0x76]
 1035986:	mov    ds:0x9e854eff,al
 103598b:	call   FWORD PTR [ebx-0xa00444e]
 1035991:	jmp    0xf2015978
 1035996:	call   0xeaf5599a
 103599b:	(bad)  
 103599c:	push   eax
 103599e:	call   0xe8f459a2
 10359a3:	(bad)  
 10359a4:	(bad)  
 10359a5:	out    dx,eax
 10359a6:	in     eax,0xff
 10359a8:	(bad)  
 10359a9:	out    dx,al
 10359aa:	in     al,0xff
 10359ac:	(bad)  
 10359ad:	in     eax,dx
 10359ae:	jecxz  0x10359af
 10359b0:	(bad)  
 10359b1:	in     eax,dx
 10359b2:	loop   0x10359b3
 10359b4:	mov    ?,WORD PTR [eax+0x64]
 10359b7:	inc    DWORD PTR [eax]
	...
 10359d9:	add    BYTE PTR [eax],al
 10359db:	add    dl,cl
 10359dd:	mov    bh,0xa8
 10359df:	lock cld 
 10359e1:	sti    
 10359e2:	cli    
 10359e3:	(bad)  
 10359e4:	(bad)  
 10359e5:	(bad)  
 10359e6:	(bad)  
 10359e7:	(bad)  
 10359e8:	(bad)  
 10359e9:	(bad)  
 10359ea:	(bad)  
 10359eb:	(bad)  
 10359ec:	(bad)  
 10359ed:	(bad)  
 10359ee:	(bad)  
 10359ef:	(bad)  
 10359f0:	(bad)  
 10359f1:	(bad)  
 10359f2:	(bad)  
 10359f3:	(bad)  
 10359f4:	(bad)  
 10359f5:	(bad)  
 10359f6:	(bad)  
 10359f7:	(bad)  
 10359f8:	(bad)  
 10359f9:	(bad)  
 10359fa:	(bad)  
 10359fb:	(bad)  
 10359fc:	(bad)  
 10359fd:	(bad)  
 10359fe:	(bad)  
 10359ff:	(bad)  
 1035a00:	(bad)  
 1035a01:	(bad)  
 1035a02:	(bad)  
 1035a03:	(bad)  
 1035a04:	(bad)  
 1035a05:	(bad)  
 1035a06:	std    
 1035a07:	(bad)  
 1035a08:	(bad)  
 1035a09:	(bad)  
 1035a0a:	std    
 1035a0b:	(bad)  
 1035a0c:	(bad)  
 1035a0d:	std    
 1035a0e:	cld    
 1035a0f:	(bad)  
 1035a10:	(bad)  
 1035a11:	std    
 1035a12:	sti    
 1035a13:	(bad)  
 1035a14:	(bad)  
 1035a15:	cld    
 1035a16:	sti    
 1035a17:	(bad)  
 1035a18:	(bad)  
 1035a19:	cld    
 1035a1a:	cli    
 1035a1b:	(bad)  
 1035a1c:	(bad)  
 1035a1d:	sti    
 1035a1e:	stc    
 1035a1f:	(bad)  
 1035a20:	(bad)  
 1035a21:	sti    
 1035a22:	clc    
 1035a23:	(bad)  
 1035a24:	(bad)  
 1035a25:	cli    
 1035a26:	idiv   edi
 1035a28:	(bad)  
 1035a29:	cli    
 1035a2a:	idiv   bh
 1035a2c:	(bad)  
 1035a2d:	stc    
 1035a2e:	idiv   bh
 1035a30:	(bad)  
 1035a31:	clc    
 1035a32:	cmc    
 1035a33:	(bad)  
 1035a34:	(bad)  
 1035a35:	clc    
 1035a36:	hlt    
 1035a37:	(bad)  
 1035a38:	push   edi
 1035a3a:	repz (bad) 
 1035a3c:	push   edi
 1035a3e:	repnz (bad) 
 1035a40:	push   esi
 1035a42:	icebp  
 1035a43:	(bad)  
 1035a44:	push   ebp
 1035a46:	lock (bad) 
 1035a48:	push   ebp
 1035a4a:	out    dx,eax
 1035a4b:	(bad)  
 1035a4c:	push   esp
 1035a4e:	in     eax,dx
 1035a4f:	(bad)  
 1035a50:	push   ebx
 1035a52:	in     al,dx
 1035a53:	(bad)  
 1035a54:	push   ebx
 1035a56:	jmp    0x1035a57
 1035a58:	push   edx
 1035a5a:	jmp    0xffff:0xe9f1ffff
 1035a61:	lock call 0xe8f45a66
 1035a67:	(bad)  
 1035a68:	(bad)  
 1035a69:	out    dx,eax
 1035a6a:	in     eax,0xff
 1035a6c:	(bad)  
 1035a6d:	out    dx,al
 1035a6e:	in     al,0xff
 1035a70:	(bad)  
 1035a71:	in     eax,dx
 1035a72:	jecxz  0x1035a73
 1035a74:	nop
 1035a75:	jns    0x1035add
 1035a77:	inc    DWORD PTR [eax]
	...
 1035a99:	add    BYTE PTR [eax],al
 1035a9b:	add    bl,cl
 1035a9d:	mov    eax,0xfbfcf0a9
 1035aa2:	cli    
 1035aa3:	(bad)  
 1035aa4:	(bad)  
 1035aa5:	(bad)  
 1035aa6:	(bad)  
 1035aa7:	(bad)  
 1035aa8:	(bad)  
 1035aa9:	(bad)  
 1035aaa:	(bad)  
 1035aab:	(bad)  
 1035aac:	(bad)  
 1035aad:	(bad)  
 1035aae:	(bad)  
 1035aaf:	(bad)  
 1035ab0:	(bad)  
 1035ab1:	(bad)  
 1035ab2:	(bad)  
 1035ab3:	(bad)  
 1035ab4:	(bad)  
 1035ab5:	(bad)  
 1035ab6:	(bad)  
 1035ab7:	(bad)  
 1035ab8:	(bad)  
 1035ab9:	(bad)  
 1035aba:	(bad)  
 1035abb:	(bad)  
 1035abc:	(bad)  
 1035abd:	(bad)  
 1035abe:	(bad)  
 1035abf:	(bad)  
 1035ac0:	(bad)  
 1035ac1:	(bad)  
 1035ac2:	(bad)  
 1035ac3:	(bad)  
 1035ac4:	(bad)  
 1035ac5:	(bad)  
 1035ac6:	(bad)  
 1035ac7:	(bad)  
 1035ac8:	(bad)  
 1035ac9:	(bad)  
 1035aca:	std    
 1035acb:	(bad)  
 1035acc:	(bad)  
 1035acd:	(bad)  
 1035ace:	std    
 1035acf:	(bad)  
 1035ad0:	(bad)  
 1035ad1:	std    
 1035ad2:	cld    
 1035ad3:	(bad)  
 1035ad4:	(bad)  
 1035ad5:	std    
 1035ad6:	sti    
 1035ad7:	(bad)  
 1035ad8:	(bad)  
 1035ad9:	cld    
 1035ada:	sti    
 1035adb:	(bad)  
 1035adc:	(bad)  
 1035add:	cld    
 1035ade:	cli    
 1035adf:	(bad)  
 1035ae0:	(bad)  
 1035ae1:	sti    
 1035ae2:	stc    
 1035ae3:	(bad)  
 1035ae4:	(bad)  
 1035ae5:	sti    
 1035ae6:	clc    
 1035ae7:	(bad)  
 1035ae8:	(bad)  
 1035ae9:	cli    
 1035aea:	idiv   edi
 1035aec:	(bad)  
 1035aed:	cli    
 1035aee:	idiv   bh
 1035af0:	(bad)  
 1035af1:	stc    
 1035af2:	idiv   bh
 1035af4:	(bad)  
 1035af5:	clc    
 1035af6:	cmc    
 1035af7:	(bad)  
 1035af8:	(bad)  
 1035af9:	clc    
 1035afa:	hlt    
 1035afb:	(bad)  
 1035afc:	push   edi
 1035afe:	repz (bad) 
 1035b00:	push   edi
 1035b02:	repnz (bad) 
 1035b04:	push   esi
 1035b06:	icebp  
 1035b07:	(bad)  
 1035b08:	push   ebp
 1035b0a:	lock (bad) 
 1035b0c:	push   ebp
 1035b0e:	out    dx,eax
 1035b0f:	(bad)  
 1035b10:	push   esp
 1035b12:	in     eax,dx
 1035b13:	(bad)  
 1035b14:	push   ebx
 1035b16:	in     al,dx
 1035b17:	(bad)  
 1035b18:	push   ebx
 1035b1a:	jmp    0x1035b1b
 1035b1c:	push   edx
 1035b1e:	jmp    0xffff:0xe9f1ffff
 1035b25:	lock call 0xe8f45b2a
 1035b2b:	(bad)  
 1035b2c:	(bad)  
 1035b2d:	out    dx,eax
 1035b2e:	in     eax,0xff
 1035b30:	(bad)  
 1035b31:	out    dx,al
 1035b32:	in     al,0xff
 1035b34:	xchg   ecx,eax
 1035b35:	jnp    0x1035b9e
 1035b37:	inc    DWORD PTR [eax]
	...
 1035b51:	add    BYTE PTR [eax],al
 1035b53:	add    BYTE PTR [ebp-0x72007e7b],cl
 1035b59:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1035b5f:	jmp    FWORD PTR [ebp+0x62]
 1035b62:	pop    ebx
 1035b63:	(bad)  
 1035b64:	(bad)  
 1035b65:	(bad)  
 1035b66:	(bad)  
 1035b67:	(bad)  
 1035b68:	(bad)  
 1035b69:	(bad)  
 1035b6a:	(bad)  
 1035b6b:	(bad)  
 1035b6c:	(bad)  
 1035b6d:	(bad)  
 1035b6e:	(bad)  
 1035b6f:	(bad)  
 1035b70:	(bad)  
 1035b71:	(bad)  
 1035b72:	(bad)  
 1035b73:	(bad)  
 1035b74:	(bad)  
 1035b75:	(bad)  
 1035b76:	(bad)  
 1035b77:	(bad)  
 1035b78:	(bad)  
 1035b79:	(bad)  
 1035b7a:	(bad)  
 1035b7b:	(bad)  
 1035b7c:	(bad)  
 1035b7d:	(bad)  
 1035b7e:	(bad)  
 1035b7f:	(bad)  
 1035b80:	(bad)  
 1035b81:	(bad)  
 1035b82:	(bad)  
 1035b83:	(bad)  
 1035b84:	(bad)  
 1035b85:	(bad)  
 1035b86:	(bad)  
 1035b87:	(bad)  
 1035b88:	(bad)  
 1035b89:	(bad)  
 1035b8a:	(bad)  
 1035b8b:	(bad)  
 1035b8c:	(bad)  
 1035b8d:	(bad)  
 1035b8e:	std    
 1035b8f:	(bad)  
 1035b90:	(bad)  
 1035b91:	(bad)  
 1035b92:	std    
 1035b93:	(bad)  
 1035b94:	(bad)  
 1035b95:	std    
 1035b96:	cld    
 1035b97:	(bad)  
 1035b98:	(bad)  
 1035b99:	std    
 1035b9a:	sti    
 1035b9b:	(bad)  
 1035b9c:	(bad)  
 1035b9d:	cld    
 1035b9e:	sti    
 1035b9f:	(bad)  
 1035ba0:	(bad)  
 1035ba1:	cld    
 1035ba2:	cli    
 1035ba3:	(bad)  
 1035ba4:	(bad)  
 1035ba5:	sti    
 1035ba6:	stc    
 1035ba7:	(bad)  
 1035ba8:	(bad)  
 1035ba9:	sti    
 1035baa:	clc    
 1035bab:	(bad)  
 1035bac:	(bad)  
 1035bad:	cli    
 1035bae:	idiv   edi
 1035bb0:	(bad)  
 1035bb1:	cli    
 1035bb2:	idiv   bh
 1035bb4:	(bad)  
 1035bb5:	stc    
 1035bb6:	idiv   bh
 1035bb8:	(bad)  
 1035bb9:	clc    
 1035bba:	cmc    
 1035bbb:	(bad)  
 1035bbc:	(bad)  
 1035bbd:	clc    
 1035bbe:	hlt    
 1035bbf:	(bad)  
 1035bc0:	push   edi
 1035bc2:	repz (bad) 
 1035bc4:	push   edi
 1035bc6:	repnz (bad) 
 1035bc8:	push   esi
 1035bca:	icebp  
 1035bcb:	(bad)  
 1035bcc:	push   ebp
 1035bce:	lock (bad) 
 1035bd0:	push   ebp
 1035bd2:	out    dx,eax
 1035bd3:	(bad)  
 1035bd4:	push   esp
 1035bd6:	in     eax,dx
 1035bd7:	(bad)  
 1035bd8:	push   ebx
 1035bda:	in     al,dx
 1035bdb:	(bad)  
 1035bdc:	push   ebx
 1035bde:	jmp    0x1035bdf
 1035be0:	push   edx
 1035be2:	jmp    0xffff:0xe9f1ffff
 1035be9:	lock call 0xe8f45bee
 1035bef:	(bad)  
 1035bf0:	(bad)  
 1035bf1:	out    dx,eax
 1035bf2:	in     eax,0xff
 1035bf4:	xchg   edx,eax
 1035bf5:	jl     0x1035c5f
 1035bf7:	inc    DWORD PTR [eax]
	...
 1035c11:	add    BYTE PTR [eax],al
 1035c13:	add    BYTE PTR [ebp-0x36007e7b],cl
 1035c19:	mov    ah,0xff
 1035c1c:	(bad)  
 1035c1d:	(bad)  
 1035c1e:	(bad)  
 1035c1f:	jmp    DWORD PTR [ebx+ebx*4-0x6a]
 1035c26:	(bad)  
 1035c27:	(bad)  
 1035c28:	(bad)  
 1035c29:	(bad)  
 1035c2a:	(bad)  
 1035c2b:	(bad)  
 1035c2c:	(bad)  
 1035c2d:	(bad)  
 1035c2e:	(bad)  
 1035c2f:	(bad)  
 1035c30:	(bad)  
 1035c31:	(bad)  
 1035c32:	(bad)  
 1035c33:	(bad)  
 1035c34:	(bad)  
 1035c35:	(bad)  
 1035c36:	(bad)  
 1035c37:	(bad)  
 1035c38:	(bad)  
 1035c39:	(bad)  
 1035c3a:	(bad)  
 1035c3b:	(bad)  
 1035c3c:	(bad)  
 1035c3d:	(bad)  
 1035c3e:	(bad)  
 1035c3f:	(bad)  
 1035c40:	(bad)  
 1035c41:	(bad)  
 1035c42:	(bad)  
 1035c43:	(bad)  
 1035c44:	(bad)  
 1035c45:	(bad)  
 1035c46:	(bad)  
 1035c47:	(bad)  
 1035c48:	(bad)  
 1035c49:	(bad)  
 1035c4a:	(bad)  
 1035c4b:	(bad)  
 1035c4c:	(bad)  
 1035c4d:	(bad)  
 1035c4e:	(bad)  
 1035c4f:	(bad)  
 1035c50:	(bad)  
 1035c51:	(bad)  
 1035c52:	std    
 1035c53:	(bad)  
 1035c54:	(bad)  
 1035c55:	(bad)  
 1035c56:	std    
 1035c57:	(bad)  
 1035c58:	(bad)  
 1035c59:	std    
 1035c5a:	cld    
 1035c5b:	(bad)  
 1035c5c:	(bad)  
 1035c5d:	std    
 1035c5e:	sti    
 1035c5f:	(bad)  
 1035c60:	(bad)  
 1035c61:	cld    
 1035c62:	sti    
 1035c63:	(bad)  
 1035c64:	(bad)  
 1035c65:	cld    
 1035c66:	cli    
 1035c67:	(bad)  
 1035c68:	(bad)  
 1035c69:	sti    
 1035c6a:	stc    
 1035c6b:	(bad)  
 1035c6c:	(bad)  
 1035c6d:	sti    
 1035c6e:	clc    
 1035c6f:	(bad)  
 1035c70:	(bad)  
 1035c71:	cli    
 1035c72:	idiv   edi
 1035c74:	(bad)  
 1035c75:	cli    
 1035c76:	idiv   edi
 1035c78:	(bad)  
 1035c79:	stc    
 1035c7a:	idiv   bh
 1035c7c:	(bad)  
 1035c7d:	clc    
 1035c7e:	cmc    
 1035c7f:	(bad)  
 1035c80:	(bad)  
 1035c81:	clc    
 1035c82:	hlt    
 1035c83:	(bad)  
 1035c84:	push   edi
 1035c86:	repz (bad) 
 1035c88:	push   edi
 1035c8a:	repnz (bad) 
 1035c8c:	push   esi
 1035c8e:	icebp  
 1035c8f:	(bad)  
 1035c90:	push   ebp
 1035c92:	lock (bad) 
 1035c94:	push   ebp
 1035c96:	out    dx,eax
 1035c97:	(bad)  
 1035c98:	push   esp
 1035c9a:	out    dx,al
 1035c9b:	(bad)  
 1035c9c:	push   ebx
 1035c9e:	in     al,dx
 1035c9f:	(bad)  
 1035ca0:	push   ebx
 1035ca2:	jmp    0x1035ca3
 1035ca4:	push   edx
 1035ca6:	jmp    0xffff:0xe9f1ffff
 1035cad:	lock call 0xe8f45cb2
 1035cb3:	call   DWORD PTR [ebx+0xff6a7e]
	...
 1035cd9:	add    BYTE PTR [eax],al
 1035cdb:	add    dh,cl
 1035cdd:	mov    ebx,0xfbfcf0ac
 1035ce2:	cli    
 1035ce3:	(bad)  
 1035ce4:	(bad)  
 1035ce5:	(bad)  
 1035ce6:	(bad)  
 1035ce7:	(bad)  
 1035ce8:	(bad)  
 1035ce9:	(bad)  
 1035cea:	(bad)  
 1035ceb:	(bad)  
 1035cec:	(bad)  
 1035ced:	(bad)  
 1035cee:	(bad)  
 1035cef:	(bad)  
 1035cf0:	(bad)  
 1035cf1:	(bad)  
 1035cf2:	(bad)  
 1035cf3:	(bad)  
 1035cf4:	(bad)  
 1035cf5:	(bad)  
 1035cf6:	(bad)  
 1035cf7:	(bad)  
 1035cf8:	(bad)  
 1035cf9:	(bad)  
 1035cfa:	(bad)  
 1035cfb:	(bad)  
 1035cfc:	(bad)  
 1035cfd:	(bad)  
 1035cfe:	(bad)  
 1035cff:	(bad)  
 1035d00:	(bad)  
 1035d01:	(bad)  
 1035d02:	(bad)  
 1035d03:	(bad)  
 1035d04:	(bad)  
 1035d05:	(bad)  
 1035d06:	(bad)  
 1035d07:	(bad)  
 1035d08:	(bad)  
 1035d09:	(bad)  
 1035d0a:	(bad)  
 1035d0b:	(bad)  
 1035d0c:	(bad)  
 1035d0d:	(bad)  
 1035d0e:	(bad)  
 1035d0f:	(bad)  
 1035d10:	(bad)  
 1035d11:	(bad)  
 1035d12:	(bad)  
 1035d13:	(bad)  
 1035d14:	(bad)  
 1035d15:	(bad)  
 1035d16:	std    
 1035d17:	(bad)  
 1035d18:	(bad)  
 1035d19:	(bad)  
 1035d1a:	std    
 1035d1b:	(bad)  
 1035d1c:	(bad)  
 1035d1d:	std    
 1035d1e:	cld    
 1035d1f:	(bad)  
 1035d20:	(bad)  
 1035d21:	std    
 1035d22:	sti    
 1035d23:	(bad)  
 1035d24:	(bad)  
 1035d25:	cld    
 1035d26:	sti    
 1035d27:	(bad)  
 1035d28:	(bad)  
 1035d29:	cld    
 1035d2a:	cli    
 1035d2b:	(bad)  
 1035d2c:	(bad)  
 1035d2d:	sti    
 1035d2e:	stc    
 1035d2f:	(bad)  
 1035d30:	(bad)  
 1035d31:	sti    
 1035d32:	clc    
 1035d33:	(bad)  
 1035d34:	(bad)  
 1035d35:	cli    
 1035d36:	idiv   edi
 1035d38:	(bad)  
 1035d39:	cli    
 1035d3a:	idiv   edi
 1035d3c:	(bad)  
 1035d3d:	stc    
 1035d3e:	idiv   bh
 1035d40:	(bad)  
 1035d41:	stc    
 1035d42:	cmc    
 1035d43:	(bad)  
 1035d44:	(bad)  
 1035d45:	clc    
 1035d46:	hlt    
 1035d47:	(bad)  
 1035d48:	push   edi
 1035d4a:	repz (bad) 
 1035d4c:	push   edi
 1035d4e:	repnz (bad) 
 1035d50:	push   esi
 1035d52:	icebp  
 1035d53:	(bad)  
 1035d54:	push   ebp
 1035d56:	lock (bad) 
 1035d58:	push   ebp
 1035d5a:	out    dx,eax
 1035d5b:	(bad)  
 1035d5c:	push   esp
 1035d5e:	out    dx,al
 1035d5f:	(bad)  
 1035d60:	push   ebx
 1035d62:	in     al,dx
 1035d63:	(bad)  
 1035d64:	push   ebx
 1035d66:	jmp    0x1035d67
 1035d68:	push   edx
 1035d6a:	jmp    0xf8ff:0xe9f1ffff
 1035d71:	jmp    0x81995d56
 1035d76:	ins    BYTE PTR es:[edi],dx
 1035d77:	inc    DWORD PTR [eax]
	...
 1035d99:	add    BYTE PTR [eax],al
 1035d9b:	add    bh,cl
 1035d9d:	mov    ebx,0xfbfcf0ad
 1035da2:	cli    
 1035da3:	(bad)  
 1035da4:	(bad)  
 1035da5:	(bad)  
 1035da6:	(bad)  
 1035da7:	(bad)  
 1035da8:	(bad)  
 1035da9:	(bad)  
 1035daa:	(bad)  
 1035dab:	(bad)  
 1035dac:	(bad)  
 1035dad:	(bad)  
 1035dae:	(bad)  
 1035daf:	(bad)  
 1035db0:	(bad)  
 1035db1:	(bad)  
 1035db2:	(bad)  
 1035db3:	(bad)  
 1035db4:	(bad)  
 1035db5:	(bad)  
 1035db6:	(bad)  
 1035db7:	(bad)  
 1035db8:	(bad)  
 1035db9:	(bad)  
 1035dba:	(bad)  
 1035dbb:	(bad)  
 1035dbc:	(bad)  
 1035dbd:	(bad)  
 1035dbe:	(bad)  
 1035dbf:	(bad)  
 1035dc0:	(bad)  
 1035dc1:	(bad)  
 1035dc2:	(bad)  
 1035dc3:	(bad)  
 1035dc4:	(bad)  
 1035dc5:	(bad)  
 1035dc6:	(bad)  
 1035dc7:	(bad)  
 1035dc8:	(bad)  
 1035dc9:	(bad)  
 1035dca:	(bad)  
 1035dcb:	(bad)  
 1035dcc:	(bad)  
 1035dcd:	(bad)  
 1035dce:	(bad)  
 1035dcf:	(bad)  
 1035dd0:	(bad)  
 1035dd1:	(bad)  
 1035dd2:	(bad)  
 1035dd3:	(bad)  
 1035dd4:	(bad)  
 1035dd5:	(bad)  
 1035dd6:	(bad)  
 1035dd7:	(bad)  
 1035dd8:	(bad)  
 1035dd9:	(bad)  
 1035dda:	std    
 1035ddb:	(bad)  
 1035ddc:	(bad)  
 1035ddd:	(bad)  
 1035dde:	std    
 1035ddf:	(bad)  
 1035de0:	(bad)  
 1035de1:	std    
 1035de2:	cld    
 1035de3:	(bad)  
 1035de4:	(bad)  
 1035de5:	std    
 1035de6:	sti    
 1035de7:	(bad)  
 1035de8:	(bad)  
 1035de9:	cld    
 1035dea:	sti    
 1035deb:	(bad)  
 1035dec:	(bad)  
 1035ded:	cld    
 1035dee:	cli    
 1035def:	(bad)  
 1035df0:	(bad)  
 1035df1:	sti    
 1035df2:	stc    
 1035df3:	(bad)  
 1035df4:	(bad)  
 1035df5:	sti    
 1035df6:	clc    
 1035df7:	(bad)  
 1035df8:	(bad)  
 1035df9:	cli    
 1035dfa:	idiv   edi
 1035dfc:	(bad)  
 1035dfd:	cli    
 1035dfe:	idiv   edi
 1035e00:	(bad)  
 1035e01:	stc    
 1035e02:	idiv   bh
 1035e04:	(bad)  
 1035e05:	stc    
 1035e06:	cmc    
 1035e07:	jmp    FWORD PTR [esi-0x62007566]
 1035e0d:	xchg   DWORD PTR [ebp-0x1],esi
 1035e10:	xchg   esi,eax
 1035e11:	sub    DWORD PTR [esi-0x1],0xff677a90
 1035e18:	mov    dh,BYTE PTR [eax+eiz*2-0x1]
 1035e1c:	test   BYTE PTR [esi+0x59],ch
 1035e1f:	(bad)  
 1035e20:	jle    0x1035e8a
 1035e22:	push   edx
 1035e23:	(bad)  
 1035e24:	jns    0x1035e88
 1035e26:	dec    esp
 1035e27:	push   DWORD PTR [esp+ebx*2+0x46]
 1035e2b:	jmp    FWORD PTR [edi+0x57]
 1035e2e:	inc    ecx
 1035e2f:	jmp    FWORD PTR [edx+0x53]
 1035e32:	cmp    al,0xff
 1035e34:	jae    0x1035e93
 1035e36:	inc    esi
 1035e37:	inc    DWORD PTR [eax]
	...
 1035e51:	add    BYTE PTR [eax],al
 1035e53:	add    BYTE PTR [ebp-0x72007e7b],cl
 1035e59:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1035e5f:	jmp    FWORD PTR [ebp+0x62]
 1035e62:	pop    ebx
 1035e63:	(bad)  
 1035e64:	(bad)  
 1035e65:	(bad)  
 1035e66:	(bad)  
 1035e67:	(bad)  
 1035e68:	(bad)  
 1035e69:	(bad)  
 1035e6a:	(bad)  
 1035e6b:	(bad)  
 1035e6c:	(bad)  
 1035e6d:	(bad)  
 1035e6e:	(bad)  
 1035e6f:	(bad)  
 1035e70:	(bad)  
 1035e71:	(bad)  
 1035e72:	(bad)  
 1035e73:	(bad)  
 1035e74:	(bad)  
 1035e75:	(bad)  
 1035e76:	(bad)  
 1035e77:	(bad)  
 1035e78:	(bad)  
 1035e79:	(bad)  
 1035e7a:	(bad)  
 1035e7b:	(bad)  
 1035e7c:	(bad)  
 1035e7d:	(bad)  
 1035e7e:	(bad)  
 1035e7f:	(bad)  
 1035e80:	(bad)  
 1035e81:	(bad)  
 1035e82:	(bad)  
 1035e83:	(bad)  
 1035e84:	(bad)  
 1035e85:	(bad)  
 1035e86:	(bad)  
 1035e87:	(bad)  
 1035e88:	(bad)  
 1035e89:	(bad)  
 1035e8a:	(bad)  
 1035e8b:	(bad)  
 1035e8c:	(bad)  
 1035e8d:	(bad)  
 1035e8e:	(bad)  
 1035e8f:	(bad)  
 1035e90:	(bad)  
 1035e91:	(bad)  
 1035e92:	(bad)  
 1035e93:	(bad)  
 1035e94:	(bad)  
 1035e95:	(bad)  
 1035e96:	(bad)  
 1035e97:	(bad)  
 1035e98:	(bad)  
 1035e99:	(bad)  
 1035e9a:	(bad)  
 1035e9b:	(bad)  
 1035e9c:	(bad)  
 1035e9d:	(bad)  
 1035e9e:	std    
 1035e9f:	(bad)  
 1035ea0:	(bad)  
 1035ea1:	(bad)  
 1035ea2:	std    
 1035ea3:	(bad)  
 1035ea4:	(bad)  
 1035ea5:	std    
 1035ea6:	cld    
 1035ea7:	(bad)  
 1035ea8:	(bad)  
 1035ea9:	std    
 1035eaa:	sti    
 1035eab:	(bad)  
 1035eac:	(bad)  
 1035ead:	cld    
 1035eae:	sti    
 1035eaf:	(bad)  
 1035eb0:	(bad)  
 1035eb1:	cld    
 1035eb2:	cli    
 1035eb3:	(bad)  
 1035eb4:	(bad)  
 1035eb5:	sti    
 1035eb6:	stc    
 1035eb7:	(bad)  
 1035eb8:	(bad)  
 1035eb9:	sti    
 1035eba:	clc    
 1035ebb:	(bad)  
 1035ebc:	(bad)  
 1035ebd:	cli    
 1035ebe:	idiv   edi
 1035ec0:	(bad)  
 1035ec1:	cli    
 1035ec2:	idiv   edi
 1035ec4:	(bad)  
 1035ec5:	stc    
 1035ec6:	idiv   bh
 1035ec8:	mov    dl,0x9f
 1035eca:	(bad)  
 1035ecb:	push   eax
 1035ecd:	loopne 0x1035ea3
 1035ecf:	(bad)  
 1035ed0:	stc    
 1035ed1:	call   0xe6fc5eb2
 1035ed6:	fdivr  st,st(7)
 1035ed8:	mul    edx
 1035eda:	aam    0xff
 1035edc:	mul    eax
 1035ede:	iret   
 1035edf:	push   esi
 1035ee1:	(bad)  
 1035ee3:	push   ebp
 1035ee5:	fcmovb st,st(6)
 1035ee7:	push   esp
 1035ee9:	xlat   BYTE PTR ds:[ebx]
 1035eea:	ret    0xa8ff
 1035eed:	lea    esi,[edi-0x1]
 1035ef0:	lea    esi,[edi+0x63]
 1035ef3:	dec    DWORD PTR [eax+0xff6275]
	...
 1035f11:	add    BYTE PTR [eax],al
 1035f13:	add    BYTE PTR [ebp-0x36007e7b],cl
 1035f19:	mov    ah,0xff
 1035f1c:	(bad)  
 1035f1d:	(bad)  
 1035f1e:	(bad)  
 1035f1f:	jmp    DWORD PTR [ebx+ebx*4-0x6a]
 1035f26:	(bad)  
 1035f27:	(bad)  
 1035f28:	(bad)  
 1035f29:	(bad)  
 1035f2a:	(bad)  
 1035f2b:	(bad)  
 1035f2c:	(bad)  
 1035f2d:	(bad)  
 1035f2e:	(bad)  
 1035f2f:	(bad)  
 1035f30:	(bad)  
 1035f31:	(bad)  
 1035f32:	(bad)  
 1035f33:	(bad)  
 1035f34:	(bad)  
 1035f35:	(bad)  
 1035f36:	(bad)  
 1035f37:	(bad)  
 1035f38:	(bad)  
 1035f39:	(bad)  
 1035f3a:	(bad)  
 1035f3b:	(bad)  
 1035f3c:	(bad)  
 1035f3d:	(bad)  
 1035f3e:	(bad)  
 1035f3f:	(bad)  
 1035f40:	(bad)  
 1035f41:	(bad)  
 1035f42:	(bad)  
 1035f43:	(bad)  
 1035f44:	(bad)  
 1035f45:	(bad)  
 1035f46:	(bad)  
 1035f47:	(bad)  
 1035f48:	(bad)  
 1035f49:	(bad)  
 1035f4a:	(bad)  
 1035f4b:	(bad)  
 1035f4c:	(bad)  
 1035f4d:	(bad)  
 1035f4e:	(bad)  
 1035f4f:	(bad)  
 1035f50:	(bad)  
 1035f51:	(bad)  
 1035f52:	(bad)  
 1035f53:	(bad)  
 1035f54:	(bad)  
 1035f55:	(bad)  
 1035f56:	(bad)  
 1035f57:	(bad)  
 1035f58:	(bad)  
 1035f59:	(bad)  
 1035f5a:	(bad)  
 1035f5b:	(bad)  
 1035f5c:	(bad)  
 1035f5d:	(bad)  
 1035f5e:	(bad)  
 1035f5f:	(bad)  
 1035f60:	(bad)  
 1035f61:	(bad)  
 1035f62:	std    
 1035f63:	(bad)  
 1035f64:	(bad)  
 1035f65:	(bad)  
 1035f66:	std    
 1035f67:	(bad)  
 1035f68:	(bad)  
 1035f69:	std    
 1035f6a:	cld    
 1035f6b:	(bad)  
 1035f6c:	(bad)  
 1035f6d:	std    
 1035f6e:	sti    
 1035f6f:	(bad)  
 1035f70:	(bad)  
 1035f71:	cld    
 1035f72:	sti    
 1035f73:	(bad)  
 1035f74:	(bad)  
 1035f75:	cld    
 1035f76:	cli    
 1035f77:	(bad)  
 1035f78:	(bad)  
 1035f79:	sti    
 1035f7a:	stc    
 1035f7b:	(bad)  
 1035f7c:	(bad)  
 1035f7d:	sti    
 1035f7e:	clc    
 1035f7f:	(bad)  
 1035f80:	(bad)  
 1035f81:	cli    
 1035f82:	idiv   edi
 1035f84:	(bad)  
 1035f85:	cli    
 1035f86:	idiv   edi
 1035f88:	mov    dh,0xa3
 1035f8a:	xchg   esp,eax
 1035f8b:	push   ecx
 1035f8d:	in     al,0xdb
 1035f8f:	(bad)  
 1035f90:	cli    
 1035f91:	in     eax,dx
 1035f92:	jecxz  0x1035f93
 1035f94:	stc    
 1035f95:	jmp    0xffdb:0xe7f9ffdf
 1035f9c:	clc    
 1035f9d:	in     al,0xd7
 1035f9f:	push   edi
 1035fa1:	loop   0x1035f75
 1035fa3:	push   esi
 1035fa5:	(bad)  
 1035fa7:	jmp    FWORD PTR [esi-0x6c007d6a]
 1035fad:	jle    0x1036018
 1035faf:	(bad)  
 1035fb0:	(bad)  
 1035fb1:	out    dx,al
 1035fb2:	jecxz  0x1035fb3
 1035fb4:	mov    BYTE PTR [ebp+0x62],dh
 1035fb7:	inc    DWORD PTR [eax]
	...
 1035fd9:	add    BYTE PTR [eax],al
 1035fdb:	add    cl,dl
 1035fdd:	mov    esi,0xfbfcf0b0
 1035fe2:	cli    
 1035fe3:	(bad)  
 1035fe4:	(bad)  
 1035fe5:	(bad)  
 1035fe6:	(bad)  
 1035fe7:	(bad)  
 1035fe8:	(bad)  
 1035fe9:	(bad)  
 1035fea:	(bad)  
 1035feb:	(bad)  
 1035fec:	(bad)  
 1035fed:	(bad)  
 1035fee:	(bad)  
 1035fef:	(bad)  
 1035ff0:	(bad)  
 1035ff1:	(bad)  
 1035ff2:	(bad)  
 1035ff3:	(bad)  
 1035ff4:	(bad)  
 1035ff5:	(bad)  
 1035ff6:	(bad)  
 1035ff7:	(bad)  
 1035ff8:	(bad)  
 1035ff9:	(bad)  
 1035ffa:	(bad)  
 1035ffb:	(bad)  
 1035ffc:	(bad)  
 1035ffd:	(bad)  
 1035ffe:	(bad)  
 1035fff:	(bad)  
 1036000:	(bad)  
 1036001:	(bad)  
 1036002:	(bad)  
 1036003:	(bad)  
 1036004:	(bad)  
 1036005:	(bad)  
 1036006:	(bad)  
 1036007:	(bad)  
 1036008:	(bad)  
 1036009:	(bad)  
 103600a:	(bad)  
 103600b:	(bad)  
 103600c:	(bad)  
 103600d:	(bad)  
 103600e:	(bad)  
 103600f:	(bad)  
 1036010:	(bad)  
 1036011:	(bad)  
 1036012:	(bad)  
 1036013:	(bad)  
 1036014:	(bad)  
 1036015:	(bad)  
 1036016:	(bad)  
 1036017:	(bad)  
 1036018:	(bad)  
 1036019:	(bad)  
 103601a:	(bad)  
 103601b:	(bad)  
 103601c:	(bad)  
 103601d:	(bad)  
 103601e:	(bad)  
 103601f:	(bad)  
 1036020:	(bad)  
 1036021:	(bad)  
 1036022:	(bad)  
 1036023:	(bad)  
 1036024:	(bad)  
 1036025:	(bad)  
 1036026:	std    
 1036027:	(bad)  
 1036028:	(bad)  
 1036029:	(bad)  
 103602a:	std    
 103602b:	(bad)  
 103602c:	(bad)  
 103602d:	std    
 103602e:	cld    
 103602f:	(bad)  
 1036030:	(bad)  
 1036031:	std    
 1036032:	sti    
 1036033:	(bad)  
 1036034:	(bad)  
 1036035:	cld    
 1036036:	sti    
 1036037:	(bad)  
 1036038:	(bad)  
 1036039:	cld    
 103603a:	cli    
 103603b:	(bad)  
 103603c:	(bad)  
 103603d:	sti    
 103603e:	stc    
 103603f:	(bad)  
 1036040:	(bad)  
 1036041:	sti    
 1036042:	clc    
 1036043:	(bad)  
 1036044:	(bad)  
 1036045:	cli    
 1036046:	idiv   edi
 1036048:	mov    edx,0xf2ff99a8
 103604d:	jmp    0xf2ff6034
 1036052:	jmp    0xfaff:0xe6effbff
 1036059:	in     al,dx
 103605a:	loop   0x103605b
 103605c:	stc    
 103605d:	jmp    0xe7fc6040
 1036062:	(bad)  
 1036064:	mov    ch,0xa0
 1036066:	(bad)  
 1036067:	call   FWORD PTR [ebx-0x8d7b]
 103606d:	out    dx,al
 103606e:	in     al,0xff
 1036070:	push   eax
 1036072:	call   0x6378e976
 1036077:	inc    DWORD PTR [eax]
	...
 1036099:	add    BYTE PTR [eax],al
 103609b:	add    cl,dl
 103609d:	mov    esi,0xfbfcf0b0
 10360a2:	cli    
 10360a3:	(bad)  
 10360a4:	(bad)  
 10360a5:	(bad)  
 10360a6:	(bad)  
 10360a7:	(bad)  
 10360a8:	(bad)  
 10360a9:	(bad)  
 10360aa:	(bad)  
 10360ab:	(bad)  
 10360ac:	(bad)  
 10360ad:	(bad)  
 10360ae:	(bad)  
 10360af:	(bad)  
 10360b0:	(bad)  
 10360b1:	(bad)  
 10360b2:	(bad)  
 10360b3:	(bad)  
 10360b4:	(bad)  
 10360b5:	(bad)  
 10360b6:	(bad)  
 10360b7:	(bad)  
 10360b8:	(bad)  
 10360b9:	(bad)  
 10360ba:	(bad)  
 10360bb:	(bad)  
 10360bc:	(bad)  
 10360bd:	(bad)  
 10360be:	(bad)  
 10360bf:	(bad)  
 10360c0:	(bad)  
 10360c1:	(bad)  
 10360c2:	(bad)  
 10360c3:	(bad)  
 10360c4:	(bad)  
 10360c5:	(bad)  
 10360c6:	(bad)  
 10360c7:	(bad)  
 10360c8:	(bad)  
 10360c9:	(bad)  
 10360ca:	(bad)  
 10360cb:	(bad)  
 10360cc:	(bad)  
 10360cd:	(bad)  
 10360ce:	(bad)  
 10360cf:	(bad)  
 10360d0:	(bad)  
 10360d1:	(bad)  
 10360d2:	(bad)  
 10360d3:	(bad)  
 10360d4:	(bad)  
 10360d5:	(bad)  
 10360d6:	(bad)  
 10360d7:	(bad)  
 10360d8:	(bad)  
 10360d9:	(bad)  
 10360da:	(bad)  
 10360db:	(bad)  
 10360dc:	(bad)  
 10360dd:	(bad)  
 10360de:	(bad)  
 10360df:	(bad)  
 10360e0:	(bad)  
 10360e1:	(bad)  
 10360e2:	(bad)  
 10360e3:	(bad)  
 10360e4:	(bad)  
 10360e5:	(bad)  
 10360e6:	(bad)  
 10360e7:	(bad)  
 10360e8:	(bad)  
 10360e9:	(bad)  
 10360ea:	std    
 10360eb:	(bad)  
 10360ec:	(bad)  
 10360ed:	(bad)  
 10360ee:	std    
 10360ef:	(bad)  
 10360f0:	(bad)  
 10360f1:	std    
 10360f2:	cld    
 10360f3:	(bad)  
 10360f4:	(bad)  
 10360f5:	std    
 10360f6:	sti    
 10360f7:	(bad)  
 10360f8:	(bad)  
 10360f9:	cld    
 10360fa:	sti    
 10360fb:	(bad)  
 10360fc:	(bad)  
 10360fd:	cld    
 10360fe:	cli    
 10360ff:	(bad)  
 1036100:	(bad)  
 1036101:	sti    
 1036102:	stc    
 1036103:	(bad)  
 1036104:	(bad)  
 1036105:	sti    
 1036106:	clc    
 1036107:	(bad)  
 1036108:	mov    esi,0xf4ff9dab
 103610d:	in     al,dx
 103610e:	out    0xff,eax
 1036110:	cld    
 1036111:	cmc    
 1036112:	lock (bad) 
 1036114:	cld    
 1036115:	repz in eax,dx
 1036117:	(bad)  
 1036118:	sti    
 1036119:	lock jmp 0xe6f25c1e
 103611f:	(bad)  
 1036120:	mov    esp,0xa2ff9aa9
 1036125:	lea    edi,[edx-0x1]
 1036128:	(bad)  
 1036129:	out    dx,eax
 103612a:	in     eax,0xff
 103612c:	push   ecx
 103612e:	jmp    0xedf76132
 1036133:	dec    DWORD PTR [eax+0xff6275]
	...
 1036151:	add    BYTE PTR [eax],al
 1036153:	add    BYTE PTR [ebp-0x72007e7b],cl
 1036159:	test   DWORD PTR [ecx-0x7e7a7201],eax
 103615f:	jmp    FWORD PTR [ebp+0x62]
 1036162:	pop    ebx
 1036163:	(bad)  
 1036164:	(bad)  
 1036165:	(bad)  
 1036166:	(bad)  
 1036167:	(bad)  
 1036168:	(bad)  
 1036169:	(bad)  
 103616a:	(bad)  
 103616b:	(bad)  
 103616c:	(bad)  
 103616d:	(bad)  
 103616e:	(bad)  
 103616f:	(bad)  
 1036170:	(bad)  
 1036171:	(bad)  
 1036172:	(bad)  
 1036173:	(bad)  
 1036174:	(bad)  
 1036175:	(bad)  
 1036176:	(bad)  
 1036177:	(bad)  
 1036178:	(bad)  
 1036179:	(bad)  
 103617a:	(bad)  
 103617b:	(bad)  
 103617c:	(bad)  
 103617d:	(bad)  
 103617e:	(bad)  
 103617f:	(bad)  
 1036180:	(bad)  
 1036181:	(bad)  
 1036182:	(bad)  
 1036183:	(bad)  
 1036184:	(bad)  
 1036185:	(bad)  
 1036186:	(bad)  
 1036187:	(bad)  
 1036188:	(bad)  
 1036189:	(bad)  
 103618a:	(bad)  
 103618b:	(bad)  
 103618c:	(bad)  
 103618d:	(bad)  
 103618e:	(bad)  
 103618f:	(bad)  
 1036190:	(bad)  
 1036191:	(bad)  
 1036192:	(bad)  
 1036193:	(bad)  
 1036194:	(bad)  
 1036195:	(bad)  
 1036196:	(bad)  
 1036197:	(bad)  
 1036198:	(bad)  
 1036199:	(bad)  
 103619a:	(bad)  
 103619b:	(bad)  
 103619c:	(bad)  
 103619d:	(bad)  
 103619e:	(bad)  
 103619f:	(bad)  
 10361a0:	(bad)  
 10361a1:	(bad)  
 10361a2:	(bad)  
 10361a3:	(bad)  
 10361a4:	(bad)  
 10361a5:	(bad)  
 10361a6:	(bad)  
 10361a7:	(bad)  
 10361a8:	(bad)  
 10361a9:	(bad)  
 10361aa:	(bad)  
 10361ab:	(bad)  
 10361ac:	(bad)  
 10361ad:	(bad)  
 10361ae:	std    
 10361af:	(bad)  
 10361b0:	(bad)  
 10361b1:	(bad)  
 10361b2:	std    
 10361b3:	(bad)  
 10361b4:	(bad)  
 10361b5:	std    
 10361b6:	cld    
 10361b7:	(bad)  
 10361b8:	(bad)  
 10361b9:	std    
 10361ba:	sti    
 10361bb:	(bad)  
 10361bc:	(bad)  
 10361bd:	cld    
 10361be:	sti    
 10361bf:	(bad)  
 10361c0:	(bad)  
 10361c1:	cld    
 10361c2:	cli    
 10361c3:	(bad)  
 10361c4:	(bad)  
 10361c5:	sti    
 10361c6:	stc    
 10361c7:	inc    edx
 10361c9:	mov    al,0xa2
 10361cb:	push   ebp
 10361cd:	lock in eax,dx
 10361cf:	(bad)  
 10361d0:	std    
 10361d1:	stc    
 10361d2:	idiv   bh
 10361d4:	std    
 10361d5:	div    ebx
 10361d7:	(bad)  
 10361d8:	cld    
 10361d9:	cmc    
 10361da:	out    dx,eax
 10361db:	inc    esp
 10361dd:	mov    bl,0xa5
 10361df:	jmp    FWORD PTR [ecx-0x7d6c]
 10361e5:	out    dx,eax
 10361e6:	in     eax,0xff
 10361e8:	push   edx
 10361ea:	jmp    0xeef861ee
 10361ef:	(bad)  
 10361f0:	push   esi
 10361f2:	lock dec DWORD PTR [eax+0xff6275]
	...
 1036211:	add    BYTE PTR [eax],al
 1036213:	add    BYTE PTR [ebp-0x36007e7b],cl
 1036219:	mov    ah,0xff
 103621c:	(bad)  
 103621d:	(bad)  
 103621e:	(bad)  
 103621f:	jmp    DWORD PTR [ebx+ebx*4-0x6a]
 1036226:	(bad)  
 1036227:	(bad)  
 1036228:	(bad)  
 1036229:	(bad)  
 103622a:	(bad)  
 103622b:	(bad)  
 103622c:	(bad)  
 103622d:	(bad)  
 103622e:	(bad)  
 103622f:	(bad)  
 1036230:	(bad)  
 1036231:	(bad)  
 1036232:	(bad)  
 1036233:	(bad)  
 1036234:	(bad)  
 1036235:	(bad)  
 1036236:	(bad)  
 1036237:	(bad)  
 1036238:	(bad)  
 1036239:	(bad)  
 103623a:	(bad)  
 103623b:	(bad)  
 103623c:	(bad)  
 103623d:	(bad)  
 103623e:	(bad)  
 103623f:	(bad)  
 1036240:	(bad)  
 1036241:	(bad)  
 1036242:	(bad)  
 1036243:	(bad)  
 1036244:	(bad)  
 1036245:	(bad)  
 1036246:	(bad)  
 1036247:	(bad)  
 1036248:	(bad)  
 1036249:	(bad)  
 103624a:	(bad)  
 103624b:	(bad)  
 103624c:	(bad)  
 103624d:	(bad)  
 103624e:	(bad)  
 103624f:	(bad)  
 1036250:	(bad)  
 1036251:	(bad)  
 1036252:	(bad)  
 1036253:	(bad)  
 1036254:	(bad)  
 1036255:	(bad)  
 1036256:	(bad)  
 1036257:	(bad)  
 1036258:	(bad)  
 1036259:	(bad)  
 103625a:	(bad)  
 103625b:	(bad)  
 103625c:	(bad)  
 103625d:	(bad)  
 103625e:	(bad)  
 103625f:	(bad)  
 1036260:	(bad)  
 1036261:	(bad)  
 1036262:	(bad)  
 1036263:	(bad)  
 1036264:	(bad)  
 1036265:	(bad)  
 1036266:	(bad)  
 1036267:	(bad)  
 1036268:	(bad)  
 1036269:	(bad)  
 103626a:	(bad)  
 103626b:	(bad)  
 103626c:	(bad)  
 103626d:	(bad)  
 103626e:	(bad)  
 103626f:	(bad)  
 1036270:	(bad)  
 1036271:	(bad)  
 1036272:	std    
 1036273:	(bad)  
 1036274:	(bad)  
 1036275:	(bad)  
 1036276:	std    
 1036277:	(bad)  
 1036278:	(bad)  
 1036279:	std    
 103627a:	cld    
 103627b:	(bad)  
 103627c:	(bad)  
 103627d:	std    
 103627e:	sti    
 103627f:	(bad)  
 1036280:	(bad)  
 1036281:	cld    
 1036282:	sti    
 1036283:	(bad)  
 1036284:	(bad)  
 1036285:	cld    
 1036286:	cli    
 1036287:	inc    esi
 1036289:	mov    ah,0xa5
 103628b:	push   edi
 103628d:	hlt    
 103628e:	icebp  
 103628f:	(bad)  
 1036290:	(bad)  
 1036291:	cld    
 1036292:	cli    
 1036293:	(bad)  
 1036294:	(bad)  
 1036295:	cli    
 1036296:	clc    
 1036297:	dec    edx
 1036299:	mov    esp,0x9db2ffb1
 103629e:	(bad)  
 103629f:	(bad)  
 10362a0:	push   eax
 10362a2:	out    0xff,al
 10362a4:	push   edx
 10362a6:	jmp    0xffff:0xedf4ffff
 10362ad:	div    cl
 10362af:	(bad)  
 10362b0:	(bad)  
 10362b1:	clc    
 10362b2:	hlt    
 10362b3:	dec    DWORD PTR [eax+0xff6275]
	...
 10362d9:	add    BYTE PTR [eax],al
 10362db:	add    cl,dl
 10362dd:	mov    esi,0xfbfcf0b0
 10362e2:	cli    
 10362e3:	(bad)  
 10362e4:	(bad)  
 10362e5:	(bad)  
 10362e6:	(bad)  
 10362e7:	(bad)  
 10362e8:	(bad)  
 10362e9:	(bad)  
 10362ea:	(bad)  
 10362eb:	(bad)  
 10362ec:	(bad)  
 10362ed:	(bad)  
 10362ee:	(bad)  
 10362ef:	(bad)  
 10362f0:	(bad)  
 10362f1:	(bad)  
 10362f2:	(bad)  
 10362f3:	(bad)  
 10362f4:	(bad)  
 10362f5:	(bad)  
 10362f6:	(bad)  
 10362f7:	(bad)  
 10362f8:	(bad)  
 10362f9:	(bad)  
 10362fa:	(bad)  
 10362fb:	(bad)  
 10362fc:	(bad)  
 10362fd:	(bad)  
 10362fe:	(bad)  
 10362ff:	(bad)  
 1036300:	(bad)  
 1036301:	(bad)  
 1036302:	(bad)  
 1036303:	(bad)  
 1036304:	(bad)  
 1036305:	(bad)  
 1036306:	(bad)  
 1036307:	(bad)  
 1036308:	(bad)  
 1036309:	(bad)  
 103630a:	(bad)  
 103630b:	(bad)  
 103630c:	(bad)  
 103630d:	(bad)  
 103630e:	(bad)  
 103630f:	(bad)  
 1036310:	(bad)  
 1036311:	(bad)  
 1036312:	(bad)  
 1036313:	(bad)  
 1036314:	(bad)  
 1036315:	(bad)  
 1036316:	(bad)  
 1036317:	(bad)  
 1036318:	(bad)  
 1036319:	(bad)  
 103631a:	(bad)  
 103631b:	(bad)  
 103631c:	(bad)  
 103631d:	(bad)  
 103631e:	(bad)  
 103631f:	(bad)  
 1036320:	(bad)  
 1036321:	(bad)  
 1036322:	(bad)  
 1036323:	(bad)  
 1036324:	(bad)  
 1036325:	(bad)  
 1036326:	(bad)  
 1036327:	(bad)  
 1036328:	(bad)  
 1036329:	(bad)  
 103632a:	(bad)  
 103632b:	(bad)  
 103632c:	(bad)  
 103632d:	(bad)  
 103632e:	(bad)  
 103632f:	(bad)  
 1036330:	(bad)  
 1036331:	(bad)  
 1036332:	(bad)  
 1036333:	(bad)  
 1036334:	(bad)  
 1036335:	(bad)  
 1036336:	std    
 1036337:	(bad)  
 1036338:	(bad)  
 1036339:	(bad)  
 103633a:	std    
 103633b:	(bad)  
 103633c:	(bad)  
 103633d:	std    
 103633e:	cld    
 103633f:	(bad)  
 1036340:	(bad)  
 1036341:	std    
 1036342:	cld    
 1036343:	(bad)  
 1036344:	(bad)  
 1036345:	cld    
 1036346:	sti    
 1036347:	dec    ecx
 1036349:	mov    bh,0xaa
 103634b:	push   edi
 103634d:	cmc    
 103634e:	repz (bad) 
 1036350:	(bad)  
 1036351:	(bad)  
 1036352:	(bad)  
 1036353:	call   ecx
 1036355:	lds    edi,FWORD PTR [ebx-0x6a5a4601]
 103635b:	(bad)  
 103635c:	push   eax
 103635e:	out    0xff,eax
 1036360:	push   edx
 1036362:	jmp    0xffff:0xeef4ffff
 1036369:	div    cl
 103636b:	(bad)  
 103636c:	(bad)  
 103636d:	clc    
 103636e:	cmc    
 103636f:	(bad)  
 1036370:	(bad)  
 1036371:	cli    
 1036372:	idiv   edi
 1036374:	mov    BYTE PTR [ebp+0x62],dh
 1036377:	inc    DWORD PTR [eax]
	...
 1036399:	add    BYTE PTR [eax],al
 103639b:	add    cl,dl
 103639d:	mov    esi,0xfbfcf0b0
 10363a2:	cli    
 10363a3:	(bad)  
 10363a4:	(bad)  
 10363a5:	(bad)  
 10363a6:	(bad)  
 10363a7:	(bad)  
 10363a8:	(bad)  
 10363a9:	(bad)  
 10363aa:	(bad)  
 10363ab:	(bad)  
 10363ac:	(bad)  
 10363ad:	(bad)  
 10363ae:	(bad)  
 10363af:	(bad)  
 10363b0:	(bad)  
 10363b1:	(bad)  
 10363b2:	(bad)  
 10363b3:	(bad)  
 10363b4:	(bad)  
 10363b5:	(bad)  
 10363b6:	(bad)  
 10363b7:	(bad)  
 10363b8:	(bad)  
 10363b9:	(bad)  
 10363ba:	(bad)  
 10363bb:	(bad)  
 10363bc:	(bad)  
 10363bd:	(bad)  
 10363be:	(bad)  
 10363bf:	(bad)  
 10363c0:	(bad)  
 10363c1:	(bad)  
 10363c2:	(bad)  
 10363c3:	(bad)  
 10363c4:	(bad)  
 10363c5:	(bad)  
 10363c6:	(bad)  
 10363c7:	(bad)  
 10363c8:	(bad)  
 10363c9:	(bad)  
 10363ca:	(bad)  
 10363cb:	(bad)  
 10363cc:	(bad)  
 10363cd:	(bad)  
 10363ce:	(bad)  
 10363cf:	(bad)  
 10363d0:	(bad)  
 10363d1:	(bad)  
 10363d2:	(bad)  
 10363d3:	(bad)  
 10363d4:	(bad)  
 10363d5:	(bad)  
 10363d6:	(bad)  
 10363d7:	(bad)  
 10363d8:	(bad)  
 10363d9:	(bad)  
 10363da:	(bad)  
 10363db:	(bad)  
 10363dc:	(bad)  
 10363dd:	(bad)  
 10363de:	(bad)  
 10363df:	(bad)  
 10363e0:	(bad)  
 10363e1:	(bad)  
 10363e2:	(bad)  
 10363e3:	(bad)  
 10363e4:	(bad)  
 10363e5:	(bad)  
 10363e6:	(bad)  
 10363e7:	(bad)  
 10363e8:	(bad)  
 10363e9:	(bad)  
 10363ea:	(bad)  
 10363eb:	(bad)  
 10363ec:	(bad)  
 10363ed:	(bad)  
 10363ee:	(bad)  
 10363ef:	(bad)  
 10363f0:	(bad)  
 10363f1:	(bad)  
 10363f2:	(bad)  
 10363f3:	(bad)  
 10363f4:	(bad)  
 10363f5:	(bad)  
 10363f6:	(bad)  
 10363f7:	(bad)  
 10363f8:	(bad)  
 10363f9:	(bad)  
 10363fa:	(bad)  
 10363fb:	(bad)  
 10363fc:	(bad)  
 10363fd:	(bad)  
 10363fe:	std    
 10363ff:	(bad)  
 1036400:	(bad)  
 1036401:	std    
 1036402:	cld    
 1036403:	(bad)  
 1036404:	(bad)  
 1036405:	std    
 1036406:	cld    
 1036407:	dec    esp
 1036409:	mov    ebx,0xf5f8ffad
 103640e:	repz (bad) 
 1036410:	fmul   st,st(4)
 1036412:	ret    0xc0ff
 1036415:	lods   al,BYTE PTR ds:[esi]
 1036416:	popf   
 1036417:	(bad)  
 1036418:	push   ecx
 103641a:	out    0xff,eax
 103641c:	push   edx
 103641e:	jmp    0xffff:0xeff5ffff
 1036425:	div    dl
 1036427:	(bad)  
 1036428:	(bad)  
 1036429:	stc    
 103642a:	cmc    
 103642b:	(bad)  
 103642c:	(bad)  
 103642d:	cli    
 103642e:	clc    
 103642f:	(bad)  
 1036430:	(bad)  
 1036431:	cld    
 1036432:	cli    
 1036433:	dec    DWORD PTR [eax+0xff6275]
	...
 1036451:	add    BYTE PTR [eax],al
 1036453:	add    BYTE PTR [ebp-0x72007e7b],cl
 1036459:	test   DWORD PTR [ecx-0x7e7a7201],eax
 103645f:	jmp    FWORD PTR [ebp+0x62]
 1036462:	pop    ebx
 1036463:	(bad)  
 1036464:	(bad)  
 1036465:	(bad)  
 1036466:	(bad)  
 1036467:	(bad)  
 1036468:	(bad)  
 1036469:	(bad)  
 103646a:	(bad)  
 103646b:	(bad)  
 103646c:	(bad)  
 103646d:	(bad)  
 103646e:	(bad)  
 103646f:	(bad)  
 1036470:	(bad)  
 1036471:	(bad)  
 1036472:	(bad)  
 1036473:	(bad)  
 1036474:	(bad)  
 1036475:	(bad)  
 1036476:	(bad)  
 1036477:	(bad)  
 1036478:	(bad)  
 1036479:	(bad)  
 103647a:	(bad)  
 103647b:	(bad)  
 103647c:	(bad)  
 103647d:	(bad)  
 103647e:	(bad)  
 103647f:	(bad)  
 1036480:	(bad)  
 1036481:	(bad)  
 1036482:	(bad)  
 1036483:	(bad)  
 1036484:	(bad)  
 1036485:	(bad)  
 1036486:	(bad)  
 1036487:	(bad)  
 1036488:	(bad)  
 1036489:	(bad)  
 103648a:	(bad)  
 103648b:	(bad)  
 103648c:	(bad)  
 103648d:	(bad)  
 103648e:	(bad)  
 103648f:	(bad)  
 1036490:	(bad)  
 1036491:	(bad)  
 1036492:	(bad)  
 1036493:	(bad)  
 1036494:	(bad)  
 1036495:	(bad)  
 1036496:	(bad)  
 1036497:	(bad)  
 1036498:	(bad)  
 1036499:	(bad)  
 103649a:	(bad)  
 103649b:	(bad)  
 103649c:	(bad)  
 103649d:	(bad)  
 103649e:	(bad)  
 103649f:	(bad)  
 10364a0:	(bad)  
 10364a1:	(bad)  
 10364a2:	(bad)  
 10364a3:	(bad)  
 10364a4:	(bad)  
 10364a5:	(bad)  
 10364a6:	(bad)  
 10364a7:	(bad)  
 10364a8:	(bad)  
 10364a9:	(bad)  
 10364aa:	(bad)  
 10364ab:	(bad)  
 10364ac:	(bad)  
 10364ad:	(bad)  
 10364ae:	(bad)  
 10364af:	(bad)  
 10364b0:	(bad)  
 10364b1:	(bad)  
 10364b2:	(bad)  
 10364b3:	(bad)  
 10364b4:	(bad)  
 10364b5:	(bad)  
 10364b6:	(bad)  
 10364b7:	(bad)  
 10364b8:	(bad)  
 10364b9:	(bad)  
 10364ba:	(bad)  
 10364bb:	(bad)  
 10364bc:	(bad)  
 10364bd:	(bad)  
 10364be:	(bad)  
 10364bf:	(bad)  
 10364c0:	(bad)  
 10364c1:	(bad)  
 10364c2:	std    
 10364c3:	(bad)  
 10364c4:	(bad)  
 10364c5:	std    
 10364c6:	cld    
 10364c7:	dec    edi
 10364c9:	mov    ebp,0xd1dcffaf
 10364ce:	enter  0xc7ff,0xb4
 10364d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10364d3:	(bad)  
 10364d4:	push   ecx
 10364d6:	out    0xff,eax
 10364d8:	push   ebx
 10364da:	in     al,dx
 10364db:	(bad)  
 10364dc:	push   ebp
 10364de:	out    dx,eax
 10364df:	(bad)  
 10364e0:	push   edi
 10364e2:	repnz (bad) 
 10364e4:	(bad)  
 10364e5:	stc    
 10364e6:	cmc    
 10364e7:	(bad)  
 10364e8:	(bad)  
 10364e9:	sti    
 10364ea:	clc    
 10364eb:	(bad)  
 10364ec:	(bad)  
 10364ed:	cld    
 10364ee:	cli    
 10364ef:	(bad)  
 10364f0:	(bad)  
 10364f1:	std    
 10364f2:	cld    
 10364f3:	dec    DWORD PTR [eax+0xff6275]
	...
 1036511:	add    BYTE PTR [eax],al
 1036513:	add    BYTE PTR [ebp-0x36007e7b],cl
 1036519:	mov    ah,0xff
 103651c:	(bad)  
 103651d:	(bad)  
 103651e:	(bad)  
 103651f:	jmp    DWORD PTR [ebx+ebx*4-0x6a]
 1036526:	(bad)  
 1036527:	(bad)  
 1036528:	(bad)  
 1036529:	(bad)  
 103652a:	(bad)  
 103652b:	(bad)  
 103652c:	(bad)  
 103652d:	(bad)  
 103652e:	(bad)  
 103652f:	(bad)  
 1036530:	(bad)  
 1036531:	(bad)  
 1036532:	(bad)  
 1036533:	(bad)  
 1036534:	(bad)  
 1036535:	(bad)  
 1036536:	(bad)  
 1036537:	(bad)  
 1036538:	(bad)  
 1036539:	(bad)  
 103653a:	(bad)  
 103653b:	(bad)  
 103653c:	(bad)  
 103653d:	(bad)  
 103653e:	(bad)  
 103653f:	(bad)  
 1036540:	(bad)  
 1036541:	(bad)  
 1036542:	(bad)  
 1036543:	(bad)  
 1036544:	(bad)  
 1036545:	(bad)  
 1036546:	(bad)  
 1036547:	(bad)  
 1036548:	(bad)  
 1036549:	(bad)  
 103654a:	(bad)  
 103654b:	(bad)  
 103654c:	(bad)  
 103654d:	(bad)  
 103654e:	(bad)  
 103654f:	(bad)  
 1036550:	(bad)  
 1036551:	(bad)  
 1036552:	(bad)  
 1036553:	(bad)  
 1036554:	(bad)  
 1036555:	(bad)  
 1036556:	(bad)  
 1036557:	(bad)  
 1036558:	(bad)  
 1036559:	(bad)  
 103655a:	(bad)  
 103655b:	(bad)  
 103655c:	(bad)  
 103655d:	(bad)  
 103655e:	(bad)  
 103655f:	(bad)  
 1036560:	(bad)  
 1036561:	(bad)  
 1036562:	(bad)  
 1036563:	(bad)  
 1036564:	(bad)  
 1036565:	(bad)  
 1036566:	(bad)  
 1036567:	(bad)  
 1036568:	(bad)  
 1036569:	(bad)  
 103656a:	(bad)  
 103656b:	(bad)  
 103656c:	(bad)  
 103656d:	(bad)  
 103656e:	(bad)  
 103656f:	(bad)  
 1036570:	(bad)  
 1036571:	(bad)  
 1036572:	(bad)  
 1036573:	(bad)  
 1036574:	(bad)  
 1036575:	(bad)  
 1036576:	(bad)  
 1036577:	(bad)  
 1036578:	(bad)  
 1036579:	(bad)  
 103657a:	(bad)  
 103657b:	(bad)  
 103657c:	(bad)  
 103657d:	(bad)  
 103657e:	(bad)  
 103657f:	(bad)  
 1036580:	(bad)  
 1036581:	(bad)  
 1036582:	(bad)  
 1036583:	(bad)  
 1036584:	cli    
 1036585:	clc    
 1036586:	idiv   bh
 1036588:	int    0xb9
 103658a:	lods   al,BYTE PTR ds:[esi]
 103658b:	dec    ebp
 103658d:	mov    ecx,0xf1ffffab
 1036592:	call   0xedf76596
 1036597:	(bad)  
 1036598:	push   ebp
 103659a:	out    dx,eax
 103659b:	(bad)  
 103659c:	(bad)  
 103659d:	clc    
 103659e:	repnz (bad) 
 10365a0:	(bad)  
 10365a1:	stc    
 10365a2:	idiv   bh
 10365a4:	(bad)  
 10365a5:	sti    
 10365a6:	clc    
 10365a7:	(bad)  
 10365a8:	(bad)  
 10365a9:	cld    
 10365aa:	sti    
 10365ab:	(bad)  
 10365ac:	(bad)  
 10365ad:	std    
 10365ae:	cld    
 10365af:	(bad)  
 10365b0:	(bad)  
 10365b1:	std    
 10365b2:	cld    
 10365b3:	dec    DWORD PTR [eax+0xff6275]
	...
 10365d9:	add    BYTE PTR [eax],al
 10365db:	add    cl,dl
 10365dd:	mov    esi,0xbed1f0b0
 10365e2:	mov    al,0xff
 10365e4:	sar    DWORD PTR [esi-0x412e0050],1
 10365ea:	mov    al,0xff
 10365ec:	sar    DWORD PTR [esi-0x412e0050],1
 10365f2:	mov    al,0xff
 10365f4:	sar    DWORD PTR [esi-0x422f0050],1
 10365fa:	scas   eax,DWORD PTR es:[edi]
 10365fb:	dec    edi
 10365fd:	mov    esp,0xbbceffae
 1036602:	lods   eax,DWORD PTR ds:[esi]
 1036603:	dec    ebp
 1036605:	mov    edx,0xb9ccffab
 103660a:	stos   BYTE PTR es:[edi],al
 103660b:	dec    ebx
 103660d:	mov    bh,0xa9
 103660f:	dec    ecx
 1036611:	mov    dh,0xa7
 1036613:	dec    eax
 1036615:	mov    ah,0xa6
 1036617:	inc    esi
 1036619:	mov    bl,0xa4
 103661b:	inc    ebp
 103661d:	mov    cl,0xa2
 103661f:	inc    ebx
 1036621:	mov    al,0xa1
 1036623:	inc    edx
 1036625:	scas   al,BYTE PTR es:[edi]
 1036626:	lahf   
 1036627:	inc    eax
 1036629:	lods   al,BYTE PTR ds:[esi]
 103662a:	popf   
 103662b:	(bad)  
 103662c:	mov    esi,0xbdff9bab
 1036631:	test   eax,0xa7bbff99
 1036636:	xchg   edi,eax
 1036637:	(bad)  
 1036638:	mov    ecx,0xb7ff95a5
 103663d:	mov    ds:0xa1b5ff93,eax
 1036642:	xchg   ecx,eax
 1036643:	push   DWORD PTR [ebx-0x3b007061]
 1036649:	mov    cl,0xa2
 103664b:	inc    ebp
 103664d:	mov    cl,0xa2
 103664f:	inc    ebx
 1036651:	mov    al,0xa1
 1036653:	inc    edx
 1036655:	scas   al,BYTE PTR es:[edi]
 1036656:	lahf   
 1036657:	inc    eax
 1036659:	lods   al,BYTE PTR ds:[esi]
 103665a:	popf   
 103665b:	(bad)  
 103665c:	mov    esi,0xbdff9bab
 1036661:	test   eax,0xa7bbff99
 1036666:	xchg   edi,eax
 1036667:	(bad)  
 1036668:	mov    ecx,0xb7ff95a5
 103666d:	mov    ds:0xa1b5ff93,eax
 1036672:	xchg   ecx,eax
 1036673:	dec    DWORD PTR [eax+0xff6275]
	...
 1036681:	add    BYTE PTR [eax],al
 1036683:	add    ah,bh
 1036685:	add    BYTE PTR [eax],al
 1036687:	add    BYTE PTR [eax],al
 1036689:	pop    es
 103668a:	add    BYTE PTR [eax],al
 103668c:	lock add BYTE PTR [eax],al
 103668f:	add    BYTE PTR [eax],al
 1036691:	pop    es
 1036692:	add    BYTE PTR [eax],al
 1036694:	lock add BYTE PTR [eax],al
 1036697:	add    BYTE PTR [eax],al
 1036699:	pop    es
 103669a:	add    BYTE PTR [eax],al
 103669c:	cld    
 103669d:	add    BYTE PTR [eax],al
 103669f:	add    BYTE PTR [eax],al
 10366a1:	pop    es
 10366a2:	add    BYTE PTR [eax],al
 10366a4:	cld    
 10366a5:	add    BYTE PTR [eax],al
 10366a7:	add    BYTE PTR [eax],al
 10366a9:	pop    es
 10366aa:	add    BYTE PTR [eax],al
 10366ac:	lock add BYTE PTR [eax],al
 10366af:	add    BYTE PTR [eax],al
 10366b1:	pop    es
 10366b2:	add    BYTE PTR [eax],al
 10366b4:	lock add BYTE PTR [eax],al
 10366b7:	add    BYTE PTR [eax],al
 10366b9:	pop    es
 10366ba:	add    BYTE PTR [eax],al
 10366bc:	cld    
 10366bd:	add    BYTE PTR [eax],al
 10366bf:	add    BYTE PTR [eax],al
 10366c1:	pop    es
 10366c2:	add    BYTE PTR [eax],al
 10366c4:	cld    
 10366c5:	add    BYTE PTR [eax],al
 10366c7:	add    BYTE PTR [eax],al
 10366c9:	pop    es
 10366ca:	add    BYTE PTR [eax],al
 10366cc:	lock add BYTE PTR [eax],al
 10366cf:	add    BYTE PTR [eax],al
 10366d1:	pop    es
 10366d2:	add    BYTE PTR [eax],al
 10366d4:	lock add BYTE PTR [eax],al
 10366d7:	add    BYTE PTR [eax],al
 10366d9:	pop    es
 10366da:	add    BYTE PTR [eax],al
 10366dc:	cld    
 10366dd:	add    BYTE PTR [eax],al
 10366df:	add    BYTE PTR [eax],al
 10366e1:	pop    es
 10366e2:	add    BYTE PTR [eax],al
 10366e4:	cld    
 10366e5:	add    BYTE PTR [eax],al
 10366e7:	add    BYTE PTR [eax],al
 10366e9:	pop    es
 10366ea:	add    BYTE PTR [eax],al
 10366ec:	lock add BYTE PTR [eax],al
 10366ef:	add    BYTE PTR [eax],al
 10366f1:	pop    es
 10366f2:	add    BYTE PTR [eax],al
 10366f4:	lock add BYTE PTR [eax],al
 10366f7:	add    BYTE PTR [eax],al
 10366f9:	pop    es
 10366fa:	add    BYTE PTR [eax],al
 10366fc:	cld    
 10366fd:	add    BYTE PTR [eax],al
 10366ff:	add    BYTE PTR [eax],al
 1036701:	pop    es
 1036702:	add    BYTE PTR [eax],al
 1036704:	cld    
 1036705:	add    BYTE PTR [eax],al
 1036707:	add    BYTE PTR [eax],al
 1036709:	pop    es
 103670a:	add    BYTE PTR [eax],al
 103670c:	lock add BYTE PTR [eax],al
 103670f:	add    BYTE PTR [eax],al
 1036711:	pop    es
 1036712:	add    BYTE PTR [eax],al
 1036714:	lock add BYTE PTR [eax],al
 1036717:	add    BYTE PTR [eax],al
 1036719:	pop    es
 103671a:	add    BYTE PTR [eax],al
 103671c:	cld    
 103671d:	add    BYTE PTR [eax],al
 103671f:	add    BYTE PTR [eax],al
 1036721:	pop    es
 1036722:	add    BYTE PTR [eax],al
 1036724:	cld    
 1036725:	add    BYTE PTR [eax],al
 1036727:	add    BYTE PTR [eax],al
 1036729:	pop    es
 103672a:	add    BYTE PTR [eax],al
 103672c:	lock add BYTE PTR [eax],al
 103672f:	add    BYTE PTR [eax],al
 1036731:	pop    es
 1036732:	add    BYTE PTR [eax],al
 1036734:	lock add BYTE PTR [eax],al
 1036737:	add    BYTE PTR [eax],al
 1036739:	pop    es
 103673a:	add    BYTE PTR [eax],al
 103673c:	cld    
 103673d:	add    BYTE PTR [eax],al
 103673f:	add    BYTE PTR [eax],al
 1036741:	pop    es
 1036742:	add    BYTE PTR [eax],al
 1036744:	cld    
 1036745:	add    BYTE PTR [eax],al
 1036747:	add    BYTE PTR [eax],al
 1036749:	pop    es
 103674a:	add    BYTE PTR [eax],al
 103674c:	lock add BYTE PTR [eax],al
 103674f:	add    BYTE PTR [eax],al
 1036751:	pop    es
 1036752:	add    BYTE PTR [eax],al
 1036754:	lock add BYTE PTR [eax],al
 1036757:	add    BYTE PTR [eax],al
 1036759:	pop    es
 103675a:	add    BYTE PTR [eax],al
 103675c:	cld    
 103675d:	add    BYTE PTR [eax],al
 103675f:	add    BYTE PTR [eax],al
 1036761:	pop    es
 1036762:	add    BYTE PTR [eax],al
 1036764:	cld    
 1036765:	add    BYTE PTR [eax],al
 1036767:	add    BYTE PTR [eax],al
 1036769:	pop    es
 103676a:	add    BYTE PTR [eax],al
 103676c:	lock add BYTE PTR [eax],al
 103676f:	add    BYTE PTR [eax],al
 1036771:	pop    es
 1036772:	add    BYTE PTR [eax],al
 1036774:	lock add BYTE PTR [eax],al
 1036777:	add    BYTE PTR [eax],al
 1036779:	pop    es
 103677a:	add    BYTE PTR [eax],al
 103677c:	cld    
 103677d:	add    BYTE PTR [eax],al
 103677f:	add    BYTE PTR [eax],al
 1036781:	pop    es
 1036782:	add    BYTE PTR [eax],al
 1036784:	cld    
 1036785:	add    BYTE PTR [eax],al
 1036787:	add    BYTE PTR [eax],al
 1036789:	pop    es
 103678a:	add    BYTE PTR [eax],al
 103678c:	lock add BYTE PTR [eax],al
 103678f:	add    BYTE PTR [eax],al
 1036791:	pop    es
 1036792:	add    BYTE PTR [eax],al
 1036794:	lock add BYTE PTR [eax],al
 1036797:	add    BYTE PTR [eax],al
 1036799:	pop    es
 103679a:	add    BYTE PTR [eax],al
 103679c:	cld    
 103679d:	add    BYTE PTR [eax],al
 103679f:	add    BYTE PTR [eax],al
 10367a1:	pop    es
 10367a2:	add    BYTE PTR [eax],al
 10367a4:	cld    
 10367a5:	add    BYTE PTR [eax],al
 10367a7:	add    BYTE PTR [eax],al
 10367a9:	pop    es
 10367aa:	add    BYTE PTR [eax],al
 10367ac:	lock add BYTE PTR [eax],al
 10367af:	add    BYTE PTR [eax],al
 10367b1:	pop    es
 10367b2:	add    BYTE PTR [eax],al
 10367b4:	lock add BYTE PTR [eax],al
 10367b7:	add    BYTE PTR [eax],al
 10367b9:	pop    es
 10367ba:	add    BYTE PTR [eax],al
 10367bc:	cld    
 10367bd:	add    BYTE PTR [eax],al
 10367bf:	add    BYTE PTR [eax],al
 10367c1:	pop    es
 10367c2:	add    BYTE PTR [eax],al
 10367c4:	cld    
 10367c5:	add    BYTE PTR [eax],al
 10367c7:	add    BYTE PTR [eax],al
 10367c9:	pop    es
 10367ca:	add    BYTE PTR [eax],al
 10367cc:	lock add BYTE PTR [eax],al
 10367cf:	add    BYTE PTR [eax],al
 10367d1:	pop    es
 10367d2:	add    BYTE PTR [eax],al
 10367d4:	lock add BYTE PTR [eax],al
 10367d7:	add    BYTE PTR [eax],al
 10367d9:	pop    es
 10367da:	add    BYTE PTR [eax],al
 10367dc:	cld    
 10367dd:	add    BYTE PTR [eax],al
 10367df:	add    BYTE PTR [eax],al
 10367e1:	pop    es
 10367e2:	add    BYTE PTR [eax],al
 10367e4:	cld    
 10367e5:	add    BYTE PTR [eax],al
 10367e7:	add    BYTE PTR [eax],al
 10367e9:	pop    es
 10367ea:	add    BYTE PTR [eax],al
 10367ec:	lock add BYTE PTR [eax],al
 10367ef:	add    BYTE PTR [eax],al
 10367f1:	pop    es
 10367f2:	add    BYTE PTR [eax],al
 10367f4:	lock add BYTE PTR [eax],al
 10367f7:	add    BYTE PTR [eax],al
 10367f9:	pop    es
 10367fa:	add    BYTE PTR [eax],al
 10367fc:	cld    
 10367fd:	add    BYTE PTR [eax],al
 10367ff:	add    BYTE PTR [eax],al
 1036801:	pop    es
 1036802:	add    BYTE PTR [eax],al
 1036804:	sub    BYTE PTR [eax],al
 1036806:	add    BYTE PTR [eax],al
 1036808:	and    BYTE PTR [eax],al
 103680a:	add    BYTE PTR [eax],al
 103680c:	inc    eax
 103680d:	add    BYTE PTR [eax],al
 103680f:	add    BYTE PTR [ecx],al
 1036811:	add    BYTE PTR [eax],ah
 1036813:	add    BYTE PTR [eax],al
 1036815:	add    BYTE PTR [eax],al
 1036817:	add    BYTE PTR [eax+0x10],al
	...
 1036839:	add    BYTE PTR [eax],al
 103683b:	add    BYTE PTR [edi-0x7e00907e],dl
 1036841:	imul   edx,DWORD PTR [esi-0x1],0x7f
 1036845:	imul   edx,DWORD PTR [edi+edi*8+0x7e],0x7cff5167
 103684d:	gs dec edi
 103684f:	(bad)  
 1036850:	jp     0x10368b5
 1036852:	dec    ebp
 1036853:	(bad)  
 1036854:	js     0x10368b7
 1036856:	dec    ebx
 1036857:	push   DWORD PTR [esi+0x5f]
 103685a:	dec    ecx
 103685b:	push   DWORD PTR [ebp+ebx*2+0x47]
 103685f:	push   DWORD PTR [ebx+0x5b]
 1036862:	inc    ebp
 1036863:	push   DWORD PTR [ecx+0x5a]
 1036866:	inc    ebx
 1036867:	jmp    FWORD PTR [edi+0x58]
 103686a:	inc    ecx
 103686b:	jmp    FWORD PTR [esi+0x56]
 103686e:	aas    
 103686f:	jmp    FWORD PTR [ebp+edx*2+0x3e]
 1036873:	jmp    FWORD PTR [ebx+0x53]
 1036876:	cmp    al,0xff
 1036878:	imul   edx,DWORD PTR [edx+0x3a],0x395068ff
 103687f:	jmp    DWORD PTR [esi+0x4f]
 1036882:	aaa    
 1036883:	jmp    DWORD PTR [ebp+0x4d]
 1036886:	jmp    DWORD PTR ss:[esp+ecx*2+0x35]
 103688b:	jmp    DWORD PTR [ebx+0x4b]
 103688e:	xor    edi,edi
 1036890:	bound  ecx,QWORD PTR [edx+0x32]
 1036893:	jmp    DWORD PTR [ecx+0x49]
 1036896:	xor    edi,edi
 1036898:	pusha  
 1036899:	dec    eax
 103689a:	xor    bh,bh
 103689c:	pusha  
 103689d:	dec    eax
 103689e:	xor    bh,bh
 10368a0:	pusha  
 10368a1:	dec    eax
 10368a2:	xor    bh,bh
	...
 10368b4:	lea    eax,[ebp-0x7a72007f]
 10368ba:	cmp    edi,0xff81858d
 10368c0:	ins    DWORD PTR es:[edi],dx
 10368c1:	bound  ebx,QWORD PTR [ebx-0x1]
 10368c4:	(bad)  
 10368c5:	out    dx,al
 10368c6:	jecxz  0x10368c7
 10368c8:	(bad)  
 10368c9:	in     eax,dx
 10368ca:	loop   0x10368cb
 10368cc:	(bad)  
 10368cd:	in     al,dx
 10368ce:	loope  0x10368cf
 10368d0:	(bad)  
 10368d1:	jmp    0x10368b3
 10368d3:	(bad)  
 10368d4:	(bad)  
 10368d5:	jmp    0x10368b6
 10368d7:	(bad)  
 10368d8:	(bad)  
 10368d9:	jmp    0xffdc:0xe9ffffdd
 10368e0:	(bad)  
 10368e1:	call   0xe90368c1
 10368e6:	fcos   
 10368e8:	jmp    edi
 10368ea:	fdivr  st,st(7)
 10368ec:	jmp    esi
 10368ee:	xlat   BYTE PTR ds:[ebx]
 10368ef:	(bad)  
 10368f0:	jmp    ebp
 10368f2:	(bad)  
 10368f3:	(bad)  
 10368f4:	jmp    esp
 10368f6:	aam    0xff
 10368f8:	jmp    ebx
 10368fa:	sar    edi,cl
 10368fc:	jmp    ebx
 10368fe:	sar    bh,cl
 1036900:	jmp    edx
 1036902:	sar    edi,1
 1036904:	jmp    ecx
 1036906:	iret   
 1036907:	(bad)  
 1036908:	jmp    eax
 103690a:	into   
 103690b:	(bad)  
 103690c:	(bad)  
 103690d:	(bad)  
 103690f:	(bad)  
 1036910:	(bad)  
 1036911:	(bad)  
 1036913:	(bad)  
 1036914:	(bad)  
 1036915:	fmulp  st(2),st
 1036917:	(bad)  
 1036918:	(bad)  
 1036919:	(bad)  
 103691b:	(bad)  
 103691c:	(bad)  
 103691d:	fmul   st(0),st
 103691f:	push   DWORD PTR [ebp+0x5c]
 1036922:	inc    esp
 1036923:	inc    DWORD PTR [eax]
	...
 1036931:	add    BYTE PTR [eax],al
 1036933:	add    BYTE PTR [ebp-0x36007e7b],cl
 1036939:	mov    ah,0xff
 103693c:	(bad)  
 103693d:	(bad)  
 103693e:	(bad)  
 103693f:	jmp    DWORD PTR [ebx+ebx*4-0x1100006a]
 1036946:	in     eax,0xff
 1036948:	(bad)  
 1036949:	out    dx,al
 103694a:	jecxz  0x103694b
 103694c:	(bad)  
 103694d:	in     eax,dx
 103694e:	loop   0x103694f
 1036950:	(bad)  
 1036951:	in     al,dx
 1036952:	loope  0x1036953
 1036954:	(bad)  
 1036955:	jmp    0x1036937
 1036957:	(bad)  
 1036958:	(bad)  
 1036959:	jmp    0x103693a
 103695b:	(bad)  
 103695c:	(bad)  
 103695d:	jmp    0xe5fe693e
 1036962:	fdivr  st,st(7)
 1036964:	mul    ecx
 1036966:	aam    0xff
 1036968:	cli    
 1036969:	loop   0x1036941
 103696b:	(bad)  
 103696c:	(bad)  
 103696d:	out    0xd7,al
 103696f:	(bad)  
 1036970:	jmp    esi
 1036972:	xlat   BYTE PTR ds:[ebx]
 1036973:	(bad)  
 1036974:	jmp    ebp
 1036976:	(bad)  
 1036977:	(bad)  
 1036978:	jmp    esp
 103697a:	aam    0xff
 103697c:	jmp    ebx
 103697e:	sar    edi,cl
 1036980:	jmp    ebx
 1036982:	sar    bh,cl
 1036984:	jmp    edx
 1036986:	sar    edi,1
 1036988:	jmp    ecx
 103698a:	iret   
 103698b:	(bad)  
 103698c:	jmp    eax
 103698e:	into   
 103698f:	(bad)  
 1036990:	(bad)  
 1036991:	(bad)  
 1036993:	(bad)  
 1036994:	(bad)  
 1036995:	(bad)  
 1036997:	(bad)  
 1036998:	(bad)  
 1036999:	fmulp  st(2),st
 103699b:	(bad)  
 103699c:	(bad)  
 103699d:	(bad)  
 103699f:	push   DWORD PTR [esi+0x5d]
 10369a2:	inc    ebp
 10369a3:	inc    DWORD PTR [eax]
	...
 10369b9:	add    BYTE PTR [eax],al
 10369bb:	add    BYTE PTR [ecx-0x7363],dh
 10369c1:	lock out 0xff,eax
 10369c4:	(bad)  
 10369c5:	out    dx,eax
 10369c6:	out    0xff,al
 10369c8:	(bad)  
 10369c9:	out    dx,al
 10369ca:	in     eax,0xff
 10369cc:	(bad)  
 10369cd:	out    dx,al
 10369ce:	jecxz  0x10369cf
 10369d0:	(bad)  
 10369d1:	in     eax,dx
 10369d2:	loop   0x10369d3
 10369d4:	(bad)  
 10369d5:	in     al,dx
 10369d6:	loope  0x10369d7
 10369d8:	(bad)  
 10369d9:	jmp    0x10369bb
 10369db:	(bad)  
 10369dc:	cli    
 10369dd:	out    0xdb,al
 10369df:	(bad)  
 10369e0:	jmp    0x10369ba
 10369e2:	int3   
 10369e3:	jmp    edx
 10369e5:	iret   
 10369e6:	ret    
 10369e7:	(bad)  
 10369e8:	jmp    0xd4e1:0xf8ffc9d5
 10369ef:	(bad)  
 10369f0:	(bad)  
 10369f1:	out    0xd7,al
 10369f3:	(bad)  
 10369f4:	jmp    esi
 10369f6:	xlat   BYTE PTR ds:[ebx]
 10369f7:	(bad)  
 10369f8:	jmp    ebp
 10369fa:	(bad)  
 10369fb:	(bad)  
 10369fc:	jmp    esp
 10369fe:	aam    0xff
 1036a00:	jmp    ebx
 1036a02:	sar    edi,cl
 1036a04:	jmp    ebx
 1036a06:	sar    bh,cl
 1036a08:	jmp    edx
 1036a0a:	sar    edi,1
 1036a0c:	jmp    ecx
 1036a0e:	iret   
 1036a0f:	(bad)  
 1036a10:	jmp    eax
 1036a12:	into   
 1036a13:	(bad)  
 1036a14:	(bad)  
 1036a15:	(bad)  
 1036a17:	(bad)  
 1036a18:	(bad)  
 1036a19:	(bad)  
 1036a1b:	(bad)  
 1036a1c:	(bad)  
 1036a1d:	fmulp  st(3),st
 1036a1f:	push   DWORD PTR [esi+0x5e]
 1036a22:	inc    esi
 1036a23:	inc    DWORD PTR [eax]
	...
 1036a39:	add    BYTE PTR [eax],al
 1036a3b:	add    BYTE PTR [ebx-0x7162],dh
 1036a41:	icebp  
 1036a42:	call   0xe8f46a46
 1036a47:	(bad)  
 1036a48:	(bad)  
 1036a49:	out    dx,eax
 1036a4a:	out    0xff,al
 1036a4c:	(bad)  
 1036a4d:	out    dx,al
 1036a4e:	in     eax,0xff
 1036a50:	(bad)  
 1036a51:	out    dx,al
 1036a52:	in     al,0xff
 1036a54:	(bad)  
 1036a55:	in     eax,dx
 1036a56:	loop   0x1036a57
 1036a58:	(bad)  
 1036a59:	in     al,dx
 1036a5a:	loope  0x1036a5b
 1036a5c:	mov    dh,0xba
 1036a5e:	mov    esi,0x916c2eff
 1036a63:	jmp    DWORD PTR [eax-0x27005458]
 1036a69:	lds    edi,FWORD PTR [edx-0x372b1601]
 1036a6f:	(bad)  
 1036a70:	clc    
 1036a71:	loope  0x1036a47
 1036a73:	(bad)  
 1036a74:	(bad)  
 1036a75:	out    0xd7,al
 1036a77:	(bad)  
 1036a78:	jmp    esi
 1036a7a:	xlat   BYTE PTR ds:[ebx]
 1036a7b:	(bad)  
 1036a7c:	jmp    ebp
 1036a7e:	(bad)  
 1036a7f:	(bad)  
 1036a80:	jmp    esp
 1036a82:	aad    0xff
 1036a84:	jmp    ebx
 1036a86:	sar    edi,cl
 1036a88:	jmp    ebx
 1036a8a:	sar    bh,cl
 1036a8c:	jmp    edx
 1036a8e:	sar    edi,1
 1036a90:	jmp    ecx
 1036a92:	iret   
 1036a93:	(bad)  
 1036a94:	jmp    eax
 1036a96:	into   
 1036a97:	(bad)  
 1036a98:	jmp    eax
 1036a9a:	int    0xff
 1036a9c:	(bad)  
 1036a9d:	(bad)  
 1036a9f:	push   DWORD PTR [edi+0x5f]
 1036aa2:	inc    edi
 1036aa3:	inc    DWORD PTR [eax]
	...
 1036ab1:	add    BYTE PTR [eax],al
 1036ab3:	add    BYTE PTR [ebp-0x72007e7b],cl
 1036ab9:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1036abf:	jmp    FWORD PTR [ebp+0x62]
 1036ac2:	pop    ebx
 1036ac3:	(bad)  
 1036ac4:	push   ecx
 1036ac6:	call   0xe8f46aca
 1036acb:	(bad)  
 1036acc:	(bad)  
 1036acd:	out    dx,eax
 1036ace:	out    0xff,al
 1036ad0:	(bad)  
 1036ad1:	out    dx,al
 1036ad2:	in     eax,0xff
 1036ad4:	(bad)  
 1036ad5:	out    dx,al
 1036ad6:	in     al,0xff
 1036ad8:	(bad)  
 1036ad9:	in     eax,dx
 1036ada:	loop   0x1036adb
 1036adc:	pop    ecx
 1036add:	nop
 1036ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1036adf:	jmp    DWORD PTR [ebx]
 1036ae1:	(bad)  
 1036ae2:	(bad)  
 1036ae3:	jmp    FWORD PTR [esi]
 1036ae5:	ins    BYTE PTR es:[edi],dx
 1036ae6:	xchg   ecx,eax
 1036ae7:	call   DWORD PTR [esi-0x27005b62]
 1036aed:	lds    edi,FWORD PTR [edx-0x372b1601]
 1036af3:	(bad)  
 1036af4:	clc    
 1036af5:	loope  0x1036acb
 1036af7:	(bad)  
 1036af8:	(bad)  
 1036af9:	out    0xd7,al
 1036afb:	(bad)  
 1036afc:	jmp    esi
 1036afe:	xlat   BYTE PTR ds:[ebx]
 1036aff:	(bad)  
 1036b00:	jmp    ebp
 1036b02:	(bad)  
 1036b03:	(bad)  
 1036b04:	jmp    esp
 1036b06:	aad    0xff
 1036b08:	jmp    ebx
 1036b0a:	sar    edi,cl
 1036b0c:	jmp    ebx
 1036b0e:	sar    bh,cl
 1036b10:	jmp    edx
 1036b12:	sar    edi,1
 1036b14:	jmp    ecx
 1036b16:	sar    bh,1
 1036b18:	jmp    eax
 1036b1a:	into   
 1036b1b:	(bad)  
 1036b1c:	jmp    eax
 1036b1e:	int    0xff
 1036b20:	js     0x1036b82
 1036b22:	dec    eax
 1036b23:	inc    DWORD PTR [eax]
	...
 1036b31:	add    BYTE PTR [eax],al
 1036b33:	add    BYTE PTR [ebp-0x36007e7b],cl
 1036b39:	mov    ah,0xff
 1036b3c:	(bad)  
 1036b3d:	(bad)  
 1036b3e:	(bad)  
 1036b3f:	jmp    DWORD PTR [ebx+ebx*4-0xe00006a]
 1036b46:	jmp    0xffff:0xe8f1ffff
 1036b4d:	lock out 0xff,eax
 1036b50:	(bad)  
 1036b51:	out    dx,eax
 1036b52:	out    0xff,al
 1036b54:	(bad)  
 1036b55:	out    dx,eax
 1036b56:	in     eax,0xff
 1036b58:	(bad)  
 1036b59:	out    dx,al
 1036b5a:	in     al,0xff
 1036b5c:	(bad)  
 1036b5d:	lods   al,BYTE PTR ds:[esi]
 1036b5e:	mov    eax,0xd3c89fff
 1036b63:	jmp    DWORD PTR [ebx]
 1036b65:	(bad)  
 1036b66:	(bad)  
 1036b67:	jmp    FWORD PTR [esi]
 1036b69:	ins    BYTE PTR es:[edi],dx
 1036b6a:	xchg   ecx,eax
 1036b6b:	call   FWORD PTR [eax-0x27005a62]
 1036b71:	lds    edi,FWORD PTR [edx-0x372b1601]
 1036b77:	(bad)  
 1036b78:	clc    
 1036b79:	loope  0x1036b4f
 1036b7b:	(bad)  
 1036b7c:	(bad)  
 1036b7d:	out    0xd7,al
 1036b7f:	(bad)  
 1036b80:	jmp    esi
 1036b82:	xlat   BYTE PTR ds:[ebx]
 1036b83:	(bad)  
 1036b84:	jmp    ebp
 1036b86:	(bad)  
 1036b87:	(bad)  
 1036b88:	jmp    esp
 1036b8a:	aad    0xff
 1036b8c:	jmp    esp
 1036b8e:	sar    edi,cl
 1036b90:	jmp    ebx
 1036b92:	sar    bh,cl
 1036b94:	jmp    edx
 1036b96:	sar    edi,1
 1036b98:	jmp    ecx
 1036b9a:	sar    bh,1
 1036b9c:	jmp    eax
 1036b9e:	into   
 1036b9f:	(bad)  
 1036ba0:	jns    0x1036c03
 1036ba2:	dec    ecx
 1036ba3:	inc    DWORD PTR [eax]
	...
 1036bb9:	add    BYTE PTR [eax],al
 1036bbb:	add    BYTE PTR [edi-0x6c5d],dh
 1036bc1:	repz in al,dx
 1036bc3:	(bad)  
 1036bc4:	push   edx
 1036bc6:	jmp    0x1036bc7
 1036bc8:	push   ecx
 1036bca:	jmp    0xffff:0xe8f1ffff
 1036bd1:	lock out 0xff,eax
 1036bd4:	(bad)  
 1036bd5:	out    dx,eax
 1036bd6:	out    0xff,al
 1036bd8:	(bad)  
 1036bd9:	out    dx,eax
 1036bda:	in     eax,0xff
 1036bdc:	(bad)  
 1036bdd:	out    dx,al
 1036bde:	in     al,0xff
 1036be0:	pop    ecx
 1036be1:	nop
 1036be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1036be3:	call   eax
 1036be5:	(bad)  
 1036be6:	(bad)  
 1036be7:	jmp    DWORD PTR [ebx]
 1036be9:	(bad)  
 1036bea:	(bad)  
 1036beb:	jmp    FWORD PTR [esi]
 1036bed:	ins    BYTE PTR es:[edi],dx
 1036bee:	xchg   ecx,eax
 1036bef:	call   FWORD PTR [eax+eiz*4-0x3a27005b]
 1036bf6:	mov    edx,0xc9d5eaff
 1036bfb:	(bad)  
 1036bfc:	clc    
 1036bfd:	loop   0x1036bd3
 1036bff:	(bad)  
 1036c00:	(bad)  
 1036c01:	out    0xd7,al
 1036c03:	(bad)  
 1036c04:	jmp    esi
 1036c06:	xlat   BYTE PTR ds:[ebx]
 1036c07:	(bad)  
 1036c08:	jmp    ebp
 1036c0a:	(bad)  
 1036c0b:	(bad)  
 1036c0c:	jmp    esp
 1036c0e:	aad    0xff
 1036c10:	jmp    esp
 1036c12:	sar    edi,cl
 1036c14:	jmp    ebx
 1036c16:	sar    bh,cl
 1036c18:	jmp    edx
 1036c1a:	sar    edi,1
 1036c1c:	jmp    ecx
 1036c1e:	sar    bh,1
 1036c20:	jp     0x1036c84
 1036c22:	dec    ebx
 1036c23:	inc    DWORD PTR [eax]
	...
 1036c39:	add    BYTE PTR [eax],al
 1036c3b:	add    BYTE PTR [eax-0x6a5b],bh
 1036c41:	hlt    
 1036c42:	in     eax,dx
 1036c43:	(bad)  
 1036c44:	push   ebx
 1036c46:	in     al,dx
 1036c47:	(bad)  
 1036c48:	push   edx
 1036c4a:	jmp    0x1036c4b
 1036c4c:	push   edx
 1036c4e:	jmp    0xffff:0xe8f1ffff
 1036c55:	lock out 0xff,eax
 1036c58:	(bad)  
 1036c59:	out    dx,eax
 1036c5a:	out    0xff,al
 1036c5c:	(bad)  
 1036c5d:	out    dx,eax
 1036c5e:	in     eax,0xff
 1036c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1036c61:	mov    edx,0xc89fffc2
 1036c66:	sar    edi,cl
 1036c68:	aad    0xff
 1036c6a:	(bad)  
 1036c6b:	jmp    DWORD PTR [ebx]
 1036c6d:	(bad)  
 1036c6e:	(bad)  
 1036c6f:	jmp    FWORD PTR [esi]
 1036c71:	ins    BYTE PTR es:[edi],dx
 1036c72:	xchg   ecx,eax
 1036c73:	jmp    DWORD PTR [eax-0x2700585d]
 1036c79:	lds    edi,FWORD PTR [edx-0x372b1601]
 1036c7f:	(bad)  
 1036c80:	clc    
 1036c81:	loop   0x1036c57
 1036c83:	(bad)  
 1036c84:	(bad)  
 1036c85:	out    0xd7,al
 1036c87:	(bad)  
 1036c88:	jmp    esi
 1036c8a:	xlat   BYTE PTR ds:[ebx]
 1036c8b:	(bad)  
 1036c8c:	jmp    ebp
 1036c8e:	(bad)  
 1036c8f:	(bad)  
 1036c90:	jmp    esp
 1036c92:	aad    0xff
 1036c94:	jmp    esp
 1036c96:	sar    edi,cl
 1036c98:	jmp    ebx
 1036c9a:	sar    bh,cl
 1036c9c:	jmp    edx
 1036c9e:	sar    edi,1
 1036ca0:	jnp    0x1036d05
 1036ca2:	dec    esp
 1036ca3:	inc    DWORD PTR [eax]
	...
 1036cb1:	add    BYTE PTR [eax],al
 1036cb3:	add    BYTE PTR [ebp-0x72007e7b],cl
 1036cb9:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1036cbf:	jmp    FWORD PTR [ebp+0x62]
 1036cc2:	pop    ebx
 1036cc3:	(bad)  
 1036cc4:	push   esp
 1036cc6:	in     eax,dx
 1036cc7:	(bad)  
 1036cc8:	push   ebx
 1036cca:	in     al,dx
 1036ccb:	(bad)  
 1036ccc:	push   edx
 1036cce:	jmp    0x1036ccf
 1036cd0:	push   edx
 1036cd2:	jmp    0xfeff:0xe8f1ffff
 1036cd9:	out    dx,eax
 1036cda:	out    0xff,al
 1036cdc:	stc    
 1036cdd:	jmp    0xe6f86cc3
 1036ce2:	(bad)  
 1036ce4:	pop    ecx
 1036ce5:	nop
 1036ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1036ce7:	jmp    FWORD PTR [esi+edx*8-0x4f001d]
 1036cee:	(bad)  
 1036cef:	jmp    DWORD PTR [ebx]
 1036cf1:	(bad)  
 1036cf2:	(bad)  
 1036cf3:	jmp    FWORD PTR [esi]
 1036cf5:	ins    BYTE PTR es:[edi],dx
 1036cf6:	xchg   ecx,eax
 1036cf7:	call   FWORD PTR [ecx+eiz*4-0x3a27005a]
 1036cfe:	mov    edx,0xc8d4e9ff
 1036d03:	(bad)  
 1036d04:	clc    
 1036d05:	loop   0x1036cdb
 1036d07:	(bad)  
 1036d08:	(bad)  
 1036d09:	out    0xd7,al
 1036d0b:	(bad)  
 1036d0c:	jmp    esi
 1036d0e:	xlat   BYTE PTR ds:[ebx]
 1036d0f:	(bad)  
 1036d10:	jmp    ebp
 1036d12:	(bad)  
 1036d13:	(bad)  
 1036d14:	jmp    esp
 1036d16:	aad    0xff
 1036d18:	jmp    esp
 1036d1a:	sar    edi,cl
 1036d1c:	jmp    ebx
 1036d1e:	sar    bh,cl
 1036d20:	jl     0x1036d86
 1036d22:	dec    ebp
 1036d23:	inc    DWORD PTR [eax]
	...
 1036d31:	add    BYTE PTR [eax],al
 1036d33:	add    BYTE PTR [ebp-0x36007e7b],cl
 1036d39:	mov    ah,0xff
 1036d3c:	(bad)  
 1036d3d:	(bad)  
 1036d3e:	(bad)  
 1036d3f:	jmp    DWORD PTR [ebx+ebx*4-0xb00006a]
 1036d46:	out    dx,al
 1036d47:	(bad)  
 1036d48:	push   esp
 1036d4a:	in     eax,dx
 1036d4b:	(bad)  
 1036d4c:	push   ebx
 1036d4e:	in     al,dx
 1036d4f:	(bad)  
 1036d50:	push   edx
 1036d52:	jmp    0x1036d53
 1036d54:	push   edx
 1036d56:	jmp    0xebff:0xe3ecfaff
 1036d5d:	fst    st(5)
 1036d5f:	(bad)  
 1036d60:	(bad)  
 1036d62:	(bad)  
 1036d63:	(bad)  
 1036d64:	fxch   st(3)
 1036d66:	ret    
 1036d67:	call   FWORD PTR [ecx-0x70]
 1036d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1036d6b:	(bad)  
 1036d6c:	mov    edi,0x77fffffe
 1036d71:	in     al,dx
 1036d72:	(bad)  
 1036d73:	jmp    DWORD PTR [ebx]
 1036d75:	(bad)  
 1036d76:	(bad)  
 1036d77:	call   FWORD PTR [edx]
 1036d79:	push   esi
 1036d7a:	jg     0x1036d7b
 1036d7c:	fwait
 1036d7d:	mov    eax,ds:0xc5d8ffa5
 1036d82:	mov    edx,0xc9d5eaff
 1036d87:	(bad)  
 1036d88:	stc    
 1036d89:	jecxz  0x1036d60
 1036d8b:	(bad)  
 1036d8c:	(bad)  
 1036d8d:	out    0xd8,al
 1036d8f:	(bad)  
 1036d90:	jmp    esi
 1036d92:	xlat   BYTE PTR ds:[ebx]
 1036d93:	(bad)  
 1036d94:	jmp    ebp
 1036d96:	(bad)  
 1036d97:	(bad)  
 1036d98:	jmp    esp
 1036d9a:	aad    0xff
 1036d9c:	jmp    esp
 1036d9e:	sar    edi,cl
 1036da0:	jge    0x1036e06
 1036da2:	dec    esi
 1036da3:	inc    DWORD PTR [eax]
	...
 1036db9:	add    BYTE PTR [eax],al
 1036dbb:	add    BYTE PTR [ecx+ebp*4-0x9000067],bh
 1036dc2:	lock (bad) 
 1036dc4:	push   ebp
 1036dc6:	out    dx,eax
 1036dc7:	(bad)  
 1036dc8:	push   esp
 1036dca:	out    dx,al
 1036dcb:	(bad)  
 1036dcc:	push   esp
 1036dce:	in     eax,dx
 1036dcf:	(bad)  
 1036dd0:	push   ebx
 1036dd2:	in     al,dx
 1036dd3:	(bad)  
 1036dd4:	push   edx
 1036dd6:	jmp    0x1036dd7
 1036dd8:	mov    cl,0xc1
 1036dda:	enter  0x5aff,0x8e
 1036dde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1036ddf:	call   DWORD PTR [ebp-0x78]
 1036de2:	popf   
 1036de3:	call   DWORD PTR [edx-0x7e]
 1036de6:	xchg   esi,eax
 1036de7:	dec    DWORD PTR [edi+0x7b]
 1036dea:	mov    ?,edi
 1036dec:	dec    ebx
 1036ded:	je     0x1036d75
 1036def:	call   DWORD PTR [edi+0x39fffff1]
 1036df5:	aam    0xff
 1036df7:	jmp    DWORD PTR [ebx]
 1036df9:	(bad)  
 1036dfa:	(bad)  
 1036dfb:	call   FWORD PTR [edx]
 1036dfd:	push   esi
 1036dfe:	jg     0x1036dff
 1036e00:	call   0xbdc8:0xdbffa7a2
 1036e07:	push   ecx
 1036e09:	fcmovne st,st(7)
 1036e0b:	(bad)  
 1036e0c:	std    
 1036e0d:	out    0xd8,al
 1036e0f:	(bad)  
 1036e10:	jmp    edi
 1036e12:	fcos   
 1036e14:	jmp    esi
 1036e16:	xlat   BYTE PTR ds:[ebx]
 1036e17:	(bad)  
 1036e18:	jmp    ebp
 1036e1a:	(bad)  
 1036e1b:	(bad)  
 1036e1c:	jmp    esp
 1036e1e:	aad    0xff
 1036e20:	jle    0x1036e88
 1036e22:	push   eax
 1036e23:	inc    DWORD PTR [eax]
	...
 1036e39:	add    BYTE PTR [eax],al
 1036e3b:	add    BYTE PTR [esi-0x6455],bh
 1036e41:	div    cl
 1036e43:	(bad)  
 1036e44:	push   esi
 1036e46:	lock (bad) 
 1036e48:	push   ebp
 1036e4a:	out    dx,eax
 1036e4b:	(bad)  
 1036e4c:	push   esp
 1036e4e:	out    dx,al
 1036e4f:	(bad)  
 1036e50:	push   esp
 1036e52:	in     eax,dx
 1036e53:	(bad)  
 1036e54:	push   ebx
 1036e56:	in     al,dx
 1036e57:	inc    DWORD PTR [edx-0x4000495a]
 1036e5d:	(bad)  
 1036e5e:	(bad)  
 1036e5f:	(bad)  
 1036e60:	mov    edi,0xbffffffe
 1036e65:	(bad)  
 1036e66:	(bad)  
 1036e67:	(bad)  
 1036e68:	mov    edi,0xbffffffe
 1036e6d:	(bad)  
 1036e6e:	(bad)  
 1036e6f:	(bad)  
 1036e70:	jl     0x1036e5b
 1036e72:	(bad)  
 1036e73:	inc    DWORD PTR [edi-0x2b]
 1036e76:	(bad)  
 1036e77:	dec    DWORD PTR [esi-0x21]
 1036e7a:	(bad)  
 1036e7b:	jmp    DWORD PTR [ebx]
 1036e7d:	(bad)  
 1036e7e:	(bad)  
 1036e7f:	call   FWORD PTR [edx]
 1036e81:	push   esi
 1036e82:	jg     0x1036e83
 1036e84:	lds    edi,FWORD PTR [edi-0x230e0045]
 1036e8a:	sar    bh,1
 1036e8c:	std    
 1036e8d:	out    0xd9,al
 1036e8f:	(bad)  
 1036e90:	(bad)  
 1036e91:	call   0xe9036e70
 1036e96:	fcos   
 1036e98:	jmp    esi
 1036e9a:	xlat   BYTE PTR ds:[ebx]
 1036e9b:	(bad)  
 1036e9c:	jmp    ebp
 1036e9e:	(bad)  
 1036e9f:	(bad)  
 1036ea0:	jg     0x1036f09
 1036ea2:	push   ecx
 1036ea3:	inc    DWORD PTR [eax]
	...
 1036eb1:	add    BYTE PTR [eax],al
 1036eb3:	add    BYTE PTR [ebp-0x72007e7b],cl
 1036eb9:	test   DWORD PTR [ecx-0x7e7a7201],eax
 1036ebf:	jmp    FWORD PTR [ebp+0x62]
 1036ec2:	pop    ebx
 1036ec3:	(bad)  
 1036ec4:	push   esi
 1036ec6:	icebp  
 1036ec7:	(bad)  
 1036ec8:	push   esi
 1036eca:	lock (bad) 
 1036ecc:	push   ebp
 1036ece:	out    dx,eax
 1036ecf:	(bad)  
 1036ed0:	push   esp
 1036ed2:	out    dx,al
 1036ed3:	(bad)  
 1036ed4:	push   esp
 1036ed6:	in     eax,dx
 1036ed7:	(bad)  
 1036ed8:	cld    
 1036ed9:	icebp  
 1036eda:	jmp    0xb3ff:0xd7c99fff
 1036ee1:	lock std 
 1036ee3:	jmp    FWORD PTR [edx-0x1f]
 1036ee6:	sti    
 1036ee7:	jmp    DWORD PTR [ebp-0x23]
 1036eea:	sti    
 1036eeb:	jmp    FWORD PTR [ecx-0x23]
 1036eee:	sti    
 1036eef:	push   DWORD PTR [edx-0x1d]
 1036ef2:	(bad)  
 1036ef3:	inc    DWORD PTR [ebp-0x7b]
 1036ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1036ef7:	inc    DWORD PTR [ebp-0x7b]
 1036efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1036efb:	inc    DWORD PTR [ebp-0x7b]
 1036efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1036eff:	inc    DWORD PTR [ebp-0x7b]
 1036f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1036f03:	inc    ecx
 1036f05:	rol    edx,0xff
 1036f08:	cli    
 1036f09:	in     eax,0xda
 1036f0b:	(bad)  
 1036f0c:	(bad)  
 1036f0d:	call   0xea036eed
 1036f12:	(bad)  
 1036f14:	(bad)  
 1036f15:	call   0xe9036ef4
 1036f1a:	fcos   
 1036f1c:	jmp    esi
 1036f1e:	xlat   BYTE PTR ds:[ebx]
 1036f1f:	inc    DWORD PTR [eax+0xff5268]
	...
 1036f31:	add    BYTE PTR [eax],al
 1036f33:	add    BYTE PTR [ebp-0x36007e7b],cl
 1036f39:	mov    ah,0xff
 1036f3c:	(bad)  
 1036f3d:	(bad)  
 1036f3e:	(bad)  
 1036f3f:	jmp    DWORD PTR [ebx+ebx*4-0x800006a]
 1036f46:	repnz (bad) 
 1036f48:	push   esi
 1036f4a:	icebp  
 1036f4b:	(bad)  
 1036f4c:	push   esi
 1036f4e:	lock (bad) 
 1036f50:	push   ebp
 1036f52:	out    dx,eax
 1036f53:	(bad)  
 1036f54:	push   esp
 1036f56:	out    dx,al
 1036f57:	(bad)  
 1036f58:	push   esp
 1036f5a:	in     eax,dx
 1036f5b:	inc    DWORD PTR [ebp-0x2c004454]
 1036f61:	idiv   ch
 1036f63:	dec    DWORD PTR [ebp+0x6ffffcea]
 1036f69:	loope  0x1036f66
 1036f6b:	push   DWORD PTR [esi-0x1e]
 1036f6e:	cli    
 1036f6f:	(bad)  
 1036f70:	jp     0x1036f58
 1036f72:	cld    
 1036f73:	jmp    DWORD PTR [ebx]
 1036f75:	(bad)  
 1036f76:	(bad)  
 1036f77:	inc    DWORD PTR [ebp-0x7b]
 1036f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1036f7b:	push   DWORD PTR [edi-0x25004e4e]
 1036f81:	retf   0xffc0
 1036f84:	in     eax,dx
 1036f85:	fcmovnbe st,st(0)
 1036f87:	(bad)  
 1036f88:	sti    
 1036f89:	out    0xdc,eax
 1036f8b:	(bad)  
 1036f8c:	(bad)  
 1036f8d:	jmp    0xffdc:0xe9ffffde
 1036f94:	(bad)  
 1036f95:	call   0xea036f75
 1036f9a:	(bad)  
 1036f9c:	jmp    edi
 1036f9e:	fcos   
 1036fa0:	sub    BYTE PTR [ecx+0x54],0xff
	...
 1036fbc:	ret    0x9faf
 1036fbf:	(bad)  
 1036fc0:	(bad)  
 1036fc1:	clc    
 1036fc2:	hlt    
 1036fc3:	(bad)  
 1036fc4:	(bad)  
 1036fc5:	clc    
 1036fc6:	repz (bad) 
 1036fc8:	push   edi
 1036fca:	repnz (bad) 
 1036fcc:	push   esi
 1036fce:	icebp  
 1036fcf:	(bad)  
 1036fd0:	push   esi
 1036fd2:	lock (bad) 
 1036fd4:	push   ebp
 1036fd6:	out    dx,eax
 1036fd7:	(bad)  
 1036fd8:	push   esp
 1036fda:	out    dx,al
 1036fdb:	(bad)  
 1036fdc:	push   esp
 1036fde:	in     eax,dx
 1036fdf:	call   DWORD PTR [ebx-0x3e003141]
 1036fe5:	repz (bad) 
 1036fe7:	push   DWORD PTR [edx-0x1e]
 1036fea:	cld    
 1036feb:	jmp    FWORD PTR [esi-0x22]
 1036fee:	stc    
 1036fef:	push   DWORD PTR [edx+eiz*8-0x6]
 1036ff3:	push   DWORD PTR [ebp-0x1a]
 1036ff6:	(bad)  
 1036ff7:	jmp    DWORD PTR [ebx]
 1036ff9:	(bad)  
 1036ffa:	(bad)  
 1036ffb:	inc    DWORD PTR [ebp-0x7b]
 1036ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1036fff:	inc    edx
 1037001:	mov    ecx,0xcbdbffb4
 1037006:	sar    edi,0xee
 1037009:	(bad)  
 103700b:	(bad)  
 103700c:	cld    
 103700d:	call   0xec036fee
 1037012:	fdivp  st(7),st
 1037014:	(bad)  
 1037015:	jmp    0xea036ff6
 103701a:	(bad)  
 103701c:	(bad)  
 103701d:	call   0x6c876ffc
 1037022:	push   ebp
 1037023:	inc    DWORD PTR [eax]
	...
 1037039:	add    BYTE PTR [eax],al
 103703b:	add    bl,al
 103703d:	mov    cl,0xa1
 103703f:	(bad)  
 1037040:	(bad)  
 1037041:	stc    
 1037042:	cmc    
 1037043:	(bad)  
 1037044:	(bad)  
 1037045:	clc    
 1037046:	hlt    
 1037047:	(bad)  
 1037048:	(bad)  
 1037049:	clc    
 103704a:	repz (bad) 
 103704c:	push   edi
 103704e:	repnz (bad) 
 1037050:	push   esi
 1037052:	icebp  
 1037053:	(bad)  
 1037054:	push   esi
 1037056:	lock (bad) 
 1037058:	push   ebp
 103705a:	out    dx,eax
 103705b:	(bad)  
 103705c:	push   esp
 103705e:	out    dx,al
 103705f:	inc    DWORD PTR [edx+ebp*4-0xb300046]
 1037066:	cld    
 1037067:	call   DWORD PTR [edx+0x66fffcea]
 103706d:	(bad)  
 103706f:	jmp    FWORD PTR [ebx-0x21]
 1037072:	cli    
 1037073:	jmp    FWORD PTR [ebx-0x23]
 1037076:	sti    
 1037077:	push   DWORD PTR [eax-0x1c]
 103707a:	(bad)  
 103707b:	jmp    DWORD PTR [ebx]
 103707d:	(bad)  
 103707e:	(bad)  
 103707f:	inc    DWORD PTR [ebp-0x7b]
 1037082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1037083:	dec    ecx
 1037085:	mov    esp,0xccdcffb5
 103708a:	ret    0xefff
 103708d:	fst    st(2)
 103708f:	(bad)  
 1037090:	cld    
 1037091:	call   0xec037072
 1037096:	fdivp  st(7),st
 1037098:	(bad)  
 1037099:	jmp    0xea03707a
 103709e:	(bad)  
 10370a0:	sub    DWORD PTR [edi+edx*2-0x1],0x0
	...
 10370b1:	add    BYTE PTR [eax],al
 10370b3:	add    BYTE PTR [ebp-0x72007e7b],cl
 10370b9:	test   DWORD PTR [ecx-0x7e7a7201],eax
 10370bf:	jmp    FWORD PTR [ebp+0x62]
 10370c2:	pop    ebx
 10370c3:	(bad)  
 10370c4:	(bad)  
 10370c5:	stc    
 10370c6:	cmc    
 10370c7:	(bad)  
 10370c8:	(bad)  
 10370c9:	clc    
 10370ca:	hlt    
 10370cb:	(bad)  
 10370cc:	(bad)  
 10370cd:	clc    
 10370ce:	repz (bad) 
 10370d0:	push   edi
 10370d2:	repnz (bad) 
 10370d4:	push   esi
 10370d6:	icebp  
 10370d7:	(bad)  
 10370d8:	push   esi
 10370da:	lock (bad) 
 10370dc:	push   ebp
 10370de:	out    dx,eax
 10370df:	(bad)  
 10370e0:	push   esp
 10370e2:	out    dx,al
 10370e3:	inc    DWORD PTR [edi-0x3700394b]
 10370e9:	cmc    
 10370ea:	(bad)  
 10370eb:	jmp    FWORD PTR [eax+eiz*8-0x4]
 10370ef:	jmp    DWORD PTR [edx-0x26]
 10370f2:	clc    
 10370f3:	jmp    DWORD PTR [edi-0x24]
 10370f6:	clc    
 10370f7:	jmp    DWORD PTR [edi-0x24]
 10370fa:	stc    
 10370fb:	jmp    FWORD PTR [edx-0x19]
 10370fe:	(bad)  
 10370ff:	jmp    DWORD PTR [ebx]
 1037101:	(bad)  
 1037102:	(bad)  
 1037103:	inc    DWORD PTR [ebp-0x7b]
 1037106:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1037107:	call   eax
 1037109:	sar    DWORD PTR [ecx-0x382f1e01],0xff
 1037110:	mul    ah
 1037112:	fdivr  st,st(7)
 1037114:	(bad)  
 1037115:	jmp    0x10370f6
 1037117:	(bad)  
 1037118:	(bad)  
 1037119:	jmp    0xffdd:0xe9ffffde
 1037120:	test   DWORD PTR [esi+0x59],ebp
 1037123:	inc    DWORD PTR [eax]
	...
 1037131:	add    BYTE PTR [eax],al
 1037133:	add    BYTE PTR [ebp-0x36007e7b],cl
 1037139:	mov    ah,0xff
 103713c:	(bad)  
 103713d:	(bad)  
 103713e:	(bad)  
 103713f:	jmp    DWORD PTR [ebx+ebx*4-0x500006a]
 1037146:	idiv   bh
 1037148:	(bad)  
 1037149:	stc    
 103714a:	cmc    
 103714b:	(bad)  
 103714c:	(bad)  
 103714d:	clc    
 103714e:	hlt    
 103714f:	(bad)  
 1037150:	(bad)  
 1037151:	clc    
 1037152:	repz (bad) 
 1037154:	push   edi
 1037156:	repnz (bad) 
 1037158:	push   esi
 103715a:	icebp  
 103715b:	(bad)  
 103715c:	push   esi
 103715e:	lock (bad) 
 1037160:	push   ebp
 1037162:	out    dx,eax
 1037163:	inc    DWORD PTR [ebx-0x33004657]
 1037169:	repz sti 
 103716b:	call   FWORD PTR [esi+ebp*8-0x1fa10003]
 1037172:	std    
 1037173:	jmp    DWORD PTR [eax-0x1f]
 1037176:	(bad)  
 1037177:	call   FWORD PTR [edi-0x1c]
 103717a:	(bad)  
 103717b:	jmp    DWORD PTR [eax-0x1b]
 103717e:	(bad)  
 103717f:	jmp    DWORD PTR [ebp-0xd]
 1037182:	(bad)  
 1037183:	jmp    DWORD PTR [ebx]
 1037185:	(bad)  
 1037186:	(bad)  
 1037187:	inc    DWORD PTR [ebp-0x7b]
 103718a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 103718b:	jmp    esi
 103718d:	(bad)  
 103718e:	int    0xff
 1037190:	mul    ebp
 1037192:	(bad)  
 1037194:	(bad)  
 1037195:	in     al,dx
 1037196:	loopne 0x1037197
 1037198:	(bad)  
 1037199:	jmp    0x103717a
 103719b:	(bad)  
 103719c:	(bad)  
 103719d:	jmp    0xff5a:0x6f86ffde
	...
 10371bc:	(bad)  
 10371bd:	mov    ah,0xa5
 10371bf:	(bad)  
 10371c0:	(bad)  
 10371c1:	sti    
 10371c2:	clc    
 10371c3:	(bad)  
 10371c4:	(bad)  
 10371c5:	cli    
 10371c6:	idiv   edi
 10371c8:	(bad)  
 10371c9:	cli    
 10371ca:	idiv   bh
 10371cc:	(bad)  
 10371cd:	stc    
 10371ce:	cmc    
 10371cf:	(bad)  
 10371d0:	(bad)  
 10371d1:	clc    
 10371d2:	hlt    
 10371d3:	(bad)  
 10371d4:	(bad)  
 10371d5:	clc    
 10371d6:	repz (bad) 
 10371d8:	push   edi
 10371da:	repz (bad) 
 10371dc:	push   edi
 10371de:	repnz (bad) 
 10371e0:	push   esi
 10371e2:	lock (bad) 
 10371e4:	push   ebp
 10371e6:	out    dx,eax
 10371e7:	inc    DWORD PTR [ecx+0x47ffbfac]
 10371ed:	xchg   BYTE PTR [edi-0x597aba01],ah
 10371f3:	inc    DWORD PTR [ebp-0x7b]
 10371f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10371f7:	inc    DWORD PTR [ebp-0x7b]
 10371fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10371fb:	inc    DWORD PTR [ebp-0x7b]
 10371fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 10371ff:	inc    DWORD PTR [ebp-0x7b]
 1037202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1037203:	inc    DWORD PTR [ebp-0x7b]
 1037206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1037207:	inc    DWORD PTR [ebx-0x8003b50]
 103720d:	out    0xdd,eax
 103720f:	(bad)  
 1037210:	std    
 1037211:	jmp    0x10371f4
 1037213:	(bad)  
 1037214:	(bad)  
 1037215:	in     al,dx
 1037216:	loop   0x1037217
 1037218:	(bad)  
 1037219:	in     al,dx
 103721a:	loopne 0x103721b
 103721c:	(bad)  
 103721d:	jmp    0x10371fe
 103721f:	dec    DWORD PTR [eax+0xff5c71]
	...
 1037239:	add    BYTE PTR [eax],al
 103723b:	add    bh,al
 103723d:	mov    ch,0xa7
 103723f:	(bad)  
 1037240:	(bad)  
 1037241:	sti    
 1037242:	stc    
 1037243:	(bad)  
 1037244:	(bad)  
 1037245:	sti    
 1037246:	clc    
 1037247:	(bad)  
 1037248:	(bad)  
 1037249:	cli    
 103724a:	idiv   edi
 103724c:	(bad)  
 103724d:	cli    
 103724e:	idiv   bh
 1037250:	(bad)  
 1037251:	stc    
 1037252:	cmc    
 1037253:	(bad)  
 1037254:	(bad)  
 1037255:	clc    
 1037256:	hlt    
 1037257:	(bad)  
 1037258:	(bad)  
 1037259:	clc    
 103725a:	hlt    
 103725b:	(bad)  
 103725c:	push   edi
 103725e:	repz (bad) 
 1037260:	push   edi
 1037262:	repnz (bad) 
 1037264:	push   esi
 1037266:	icebp  
 1037267:	(bad)  
 1037268:	push   ebp
 103726a:	out    dx,eax
 103726b:	(bad)  
 103726c:	push   ebp
 103726e:	out    dx,al
 103726f:	(bad)  
 1037270:	push   esp
 1037272:	in     eax,dx
 1037273:	(bad)  
 1037274:	push   ebx
 1037276:	in     al,dx
 1037277:	(bad)  
 1037278:	push   edx
 103727a:	jmp    0x103727b
 103727c:	push   edx
 103727e:	jmp    0xffff:0xe9f1ffff
 1037285:	lock call 0xe7f4728a
 103728b:	(bad)  
 103728c:	(bad)  
 103728d:	out    dx,eax
 103728e:	in     eax,0xff
 1037290:	(bad)  
 1037291:	out    dx,al
 1037292:	in     al,0xff
 1037294:	(bad)  
 1037295:	in     eax,dx
 1037296:	jecxz  0x1037297
 1037298:	(bad)  
 1037299:	in     al,dx
 103729a:	loop   0x103729b
 103729c:	(bad)  
 103729d:	in     al,dx
 103729e:	loopne 0x103729f
 10372a0:	mov    DWORD PTR [edx+0x5d],esi
 10372a3:	inc    DWORD PTR [eax]
	...
 10372b1:	add    BYTE PTR [eax],al
 10372b3:	add    BYTE PTR [ebp-0x72007e7b],cl
 10372b9:	test   DWORD PTR [ecx-0x7e7a7201],eax
 10372bf:	jmp    FWORD PTR [ebp+0x62]
 10372c2:	pop    ebx
 10372c3:	(bad)  
 10372c4:	(bad)  
 10372c5:	sti    
 10372c6:	stc    
 10372c7:	(bad)  
 10372c8:	(bad)  
 10372c9:	sti    
 10372ca:	clc    
 10372cb:	(bad)  
 10372cc:	(bad)  
 10372cd:	cli    
 10372ce:	idiv   edi
 10372d0:	(bad)  
 10372d1:	cli    
 10372d2:	idiv   bh
 10372d4:	(bad)  
 10372d5:	stc    
 10372d6:	cmc    
 10372d7:	(bad)  
 10372d8:	(bad)  
 10372d9:	clc    
 10372da:	cmc    
 10372db:	(bad)  
 10372dc:	(bad)  
 10372dd:	clc    
 10372de:	hlt    
 10372df:	(bad)  
 10372e0:	push   edi
 10372e2:	repz (bad) 
 10372e4:	push   edi
 10372e6:	repnz (bad) 
 10372e8:	push   esi
 10372ea:	icebp  
 10372eb:	(bad)  
 10372ec:	push   ebp
 10372ee:	out    dx,eax
 10372ef:	(bad)  
 10372f0:	push   ebp
 10372f2:	out    dx,al
 10372f3:	(bad)  
 10372f4:	push   esp
 10372f6:	in     eax,dx
 10372f7:	(bad)  
 10372f8:	push   ebx
 10372fa:	in     al,dx
 10372fb:	(bad)  
 10372fc:	push   edx
 10372fe:	jmp    0x10372ff
 1037300:	push   edx
 1037302:	jmp    0xffff:0xe9f1ffff
 1037309:	lock call 0xe7f4730e
 103730f:	(bad)  
 1037310:	(bad)  
 1037311:	out    dx,eax
 1037312:	in     eax,0xff
 1037314:	(bad)  
 1037315:	out    dx,al
 1037316:	in     al,0xff
 1037318:	(bad)  
 1037319:	in     eax,dx
 103731a:	jecxz  0x103731b
 103731c:	(bad)  
 103731d:	in     eax,dx
 103731e:	loop   0x103731f
 1037320:	mov    dh,BYTE PTR [edi+ebx*2-0x1]
	...
 1037334:	lea    eax,[ebp-0x3936007f]
 103733a:	(bad)  
 103733b:	(bad)  
 103733c:	(bad)  
 103733d:	(bad)  
 103733e:	(bad)  
 103733f:	jmp    DWORD PTR [ebx+ebx*4-0x300006a]
 1037346:	cli    
 1037347:	(bad)  
 1037348:	(bad)  
 1037349:	sti    
 103734a:	stc    
 103734b:	(bad)  
 103734c:	(bad)  
 103734d:	sti    
 103734e:	clc    
 103734f:	(bad)  
 1037350:	(bad)  
 1037351:	cli    
 1037352:	idiv   edi
 1037354:	(bad)  
 1037355:	cli    
 1037356:	idiv   bh
 1037358:	(bad)  
 1037359:	stc    
 103735a:	cmc    
 103735b:	(bad)  
 103735c:	(bad)  
 103735d:	clc    
 103735e:	cmc    
 103735f:	(bad)  
 1037360:	(bad)  
 1037361:	clc    
 1037362:	hlt    
 1037363:	(bad)  
 1037364:	push   edi
 1037366:	repz (bad) 
 1037368:	push   edi
 103736a:	repnz (bad) 
 103736c:	push   esi
 103736e:	icebp  
 103736f:	(bad)  
 1037370:	push   ebp
 1037372:	lock (bad) 
 1037374:	push   ebp
 1037376:	out    dx,al
 1037377:	(bad)  
 1037378:	push   esp
 103737a:	in     eax,dx
 103737b:	(bad)  
 103737c:	push   ebx
 103737e:	in     al,dx
 103737f:	(bad)  
 1037380:	push   edx
 1037382:	jmp    0x1037383
 1037384:	push   edx
 1037386:	jmp    0xffff:0xe9f1ffff
 103738d:	lock call 0xe7f47392
 1037393:	(bad)  
 1037394:	(bad)  
 1037395:	out    dx,eax
 1037396:	in     eax,0xff
 1037398:	(bad)  
 1037399:	out    dx,al
 103739a:	in     al,0xff
 103739c:	(bad)  
 103739d:	in     eax,dx
 103739e:	jecxz  0x103739f
 10373a0:	mov    esi,DWORD PTR [ebp+0x61]
 10373a3:	inc    DWORD PTR [eax]
	...
 10373b9:	add    BYTE PTR [eax],al
 10373bb:	add    bl,cl
 10373bd:	mov    eax,0xfdffffab
 10373c2:	sti    
 10373c3:	(bad)  
 10373c4:	(bad)  
 10373c5:	cld    
 10373c6:	sti    
 10373c7:	(bad)  
 10373c8:	(bad)  
 10373c9:	cld    
 10373ca:	cli    
 10373cb:	(bad)  
 10373cc:	(bad)  
 10373cd:	sti    
 10373ce:	stc    
 10373cf:	(bad)  
 10373d0:	(bad)  
 10373d1:	sti    
 10373d2:	clc    
 10373d3:	(bad)  
 10373d4:	(bad)  
 10373d5:	cli    
 10373d6:	idiv   edi
 10373d8:	(bad)  
 10373d9:	cli    
 10373da:	idiv   bh
 10373dc:	(bad)  
 10373dd:	stc    
 10373de:	cmc    
 10373df:	(bad)  
 10373e0:	(bad)  
 10373e1:	clc    
 10373e2:	cmc    
 10373e3:	(bad)  
 10373e4:	(bad)  
 10373e5:	clc    
 10373e6:	hlt    
 10373e7:	(bad)  
 10373e8:	push   edi
 10373ea:	repz (bad) 
 10373ec:	push   edi
 10373ee:	repnz (bad) 
 10373f0:	push   esi
 10373f2:	icebp  
 10373f3:	(bad)  
 10373f4:	push   ebp
 10373f6:	lock (bad) 
 10373f8:	push   ebp
 10373fa:	out    dx,al
 10373fb:	(bad)  
 10373fc:	push   esp
 10373fe:	in     eax,dx
 10373ff:	jmp    FWORD PTR [esi-0x69007566]
 1037405:	sub    DWORD PTR [esi-0x1],0xff677a90
 103740c:	mov    dh,BYTE PTR [eax+eiz*2-0x1]
 1037410:	test   BYTE PTR [esi+0x59],ch
 1037413:	(bad)  
 1037414:	jle    0x103747e
 1037416:	push   edx
 1037417:	(bad)  
 1037418:	jns    0x103747c
 103741a:	dec    esp
 103741b:	push   DWORD PTR [esp+ebx*2+0x46]
 103741f:	jmp    FWORD PTR [edi+0x57]
 1037422:	inc    ecx
 1037423:	inc    DWORD PTR [eax]
	...
 1037439:	add    BYTE PTR [eax],al
 103743b:	add    ah,cl
 103743d:	mov    edx,0xfdffffac
 1037442:	cld    
 1037443:	(bad)  
 1037444:	(bad)  
 1037445:	std    
 1037446:	sti    
 1037447:	(bad)  
 1037448:	(bad)  
 1037449:	cld    
 103744a:	sti    
 103744b:	(bad)  
 103744c:	(bad)  
 103744d:	cld    
 103744e:	cli    
 103744f:	(bad)  
 1037450:	(bad)  
 1037451:	sti    
 1037452:	stc    
 1037453:	(bad)  
 1037454:	(bad)  
 1037455:	sti    
 1037456:	clc    
 1037457:	(bad)  
 1037458:	(bad)  
 1037459:	cli    
 103745a:	idiv   edi
 103745c:	(bad)  
 103745d:	cli    
 103745e:	idiv   bh
 1037460:	(bad)  
 1037461:	stc    
 1037462:	idiv   bh
 1037464:	(bad)  
 1037465:	clc    
 1037466:	cmc    
 1037467:	(bad)  
 1037468:	(bad)  
 1037469:	clc    
 103746a:	hlt    
 103746b:	(bad)  
 103746c:	push   edi
 103746e:	repz (bad) 
 1037470:	push   edi
 1037472:	repnz (bad) 
 1037474:	push   esi
 1037476:	icebp  
 1037477:	(bad)  
 1037478:	push   ebp
 103747a:	lock (bad) 
 103747c:	push   ebp
 103747e:	out    dx,eax
 103747f:	(bad)  
 1037480:	mov    edx,0xfbff99a8
 1037485:	icebp  
 1037486:	jmp    0xfaff:0xe6effbff
 103748d:	in     al,dx
 103748e:	loop   0x103748f
 1037490:	stc    
 1037491:	jmp    0xe7fc7474
 1037496:	(bad)  
 1037498:	mov    ch,0xa0
 103749a:	(bad)  
 103749b:	call   FWORD PTR [ebx-0x74008d7b]
 10374a1:	jne    0x1037504
 10374a3:	inc    DWORD PTR [eax]
	...
 10374b1:	add    BYTE PTR [eax],al
 10374b3:	add    BYTE PTR [ebp-0x72007e7b],cl
 10374b9:	test   DWORD PTR [ecx-0x7e7a7201],eax
 10374bf:	jmp    FWORD PTR [ebp+0x62]
 10374c2:	pop    ebx
 10374c3:	(bad)  
 10374c4:	(bad)  
 10374c5:	std    
 10374c6:	cld    
 10374c7:	(bad)  
 10374c8:	(bad)  
 10374c9:	std    
 10374ca:	sti    
 10374cb:	(bad)  
 10374cc:	(bad)  
 10374cd:	cld    
 10374ce:	sti    
 10374cf:	(bad)  
 10374d0:	(bad)  
 10374d1:	cld    
 10374d2:	cli    
 10374d3:	(bad)  
 10374d4:	(bad)  
 10374d5:	sti    
 10374d6:	stc    
 10374d7:	(bad)  
 10374d8:	(bad)  
 10374d9:	sti    
 10374da:	clc    
 10374db:	(bad)  
 10374dc:	(bad)  
 10374dd:	cli    
 10374de:	idiv   edi
 10374e0:	(bad)  
 10374e1:	cli    
 10374e2:	idiv   bh
 10374e4:	(bad)  
 10374e5:	stc    
 10374e6:	idiv   bh
 10374e8:	(bad)  
 10374e9:	clc    
 10374ea:	cmc    
 10374eb:	(bad)  
 10374ec:	(bad)  
 10374ed:	clc    
 10374ee:	hlt    
 10374ef:	(bad)  
 10374f0:	push   edi
 10374f2:	repz (bad) 
 10374f4:	push   edi
 10374f6:	repnz (bad) 
 10374f8:	push   esi
 10374fa:	icebp  
 10374fb:	(bad)  
 10374fc:	push   ebp
 10374fe:	lock (bad) 
 1037500:	mov    esi,0xfcff9dab
 1037505:	cmc    
 1037506:	lock (bad) 
 1037508:	cld    
 1037509:	repz in eax,dx
 103750b:	(bad)  
 103750c:	sti    
 103750d:	lock jmp 0xe6f27012
 1037513:	(bad)  
 1037514:	mov    esp,0xa2ff9aa9
 1037519:	lea    edi,[edx-0x1]
 103751c:	push   edx
 103751e:	jmp    0xff:0x61758bff
	...
 1037531:	add    BYTE PTR [eax],al
 1037533:	add    BYTE PTR [ebp-0x36007e7b],cl
 1037539:	mov    ah,0xff
 103753c:	(bad)  
 103753d:	(bad)  
 103753e:	(bad)  
 103753f:	jmp    DWORD PTR [ebx+ebx*4-0x100006a]
 1037546:	std    
 1037547:	(bad)  
 1037548:	(bad)  
 1037549:	std    
 103754a:	cld    
 103754b:	(bad)  
 103754c:	(bad)  
 103754d:	std    
 103754e:	sti    
 103754f:	(bad)  
 1037550:	(bad)  
 1037551:	cld    
 1037552:	sti    
 1037553:	(bad)  
 1037554:	(bad)  
 1037555:	cld    
 1037556:	cli    
 1037557:	(bad)  
 1037558:	(bad)  
 1037559:	sti    
 103755a:	stc    
 103755b:	(bad)  
 103755c:	(bad)  
 103755d:	sti    
 103755e:	clc    
 103755f:	(bad)  
 1037560:	(bad)  
 1037561:	cli    
 1037562:	idiv   edi
 1037564:	(bad)  
 1037565:	cli    
 1037566:	idiv   bh
 1037568:	(bad)  
 1037569:	stc    
 103756a:	idiv   bh
 103756c:	(bad)  
 103756d:	clc    
 103756e:	cmc    
 103756f:	(bad)  
 1037570:	(bad)  
 1037571:	clc    
 1037572:	hlt    
 1037573:	(bad)  
 1037574:	push   edi
 1037576:	repz (bad) 
 1037578:	push   edi
 103757a:	repnz (bad) 
 103757c:	push   esi
 103757e:	icebp  
 103757f:	inc    edx
 1037581:	mov    al,0xa2
 1037583:	(bad)  
 1037584:	std    
 1037585:	stc    
 1037586:	idiv   bh
 1037588:	std    
 1037589:	div    ebx
 103758b:	(bad)  
 103758c:	cld    
 103758d:	cmc    
 103758e:	out    dx,eax
 103758f:	inc    esp
 1037591:	mov    bl,0xa5
 1037593:	jmp    FWORD PTR [ecx-0x7d6c]
 1037599:	lock call 0xf0f9759e
 103759f:	dec    DWORD PTR [ebx+0xff6175]
	...
 10375b9:	add    BYTE PTR [eax],al
 10375bb:	add    bh,cl
 10375bd:	mov    ebp,0xfeffffaf
 10375c2:	(bad)  
 10375c3:	(bad)  
 10375c4:	(bad)  
 10375c5:	(bad)  
 10375c6:	std    
 10375c7:	(bad)  
 10375c8:	(bad)  
 10375c9:	(bad)  
 10375ca:	std    
 10375cb:	(bad)  
 10375cc:	(bad)  
 10375cd:	std    
 10375ce:	cld    
 10375cf:	(bad)  
 10375d0:	(bad)  
 10375d1:	std    
 10375d2:	sti    
 10375d3:	(bad)  
 10375d4:	(bad)  
 10375d5:	cld    
 10375d6:	sti    
 10375d7:	(bad)  
 10375d8:	(bad)  
 10375d9:	cld    
 10375da:	cli    
 10375db:	(bad)  
 10375dc:	(bad)  
 10375dd:	sti    
 10375de:	stc    
 10375df:	(bad)  
 10375e0:	(bad)  
 10375e1:	sti    
 10375e2:	clc    
 10375e3:	(bad)  
 10375e4:	(bad)  
 10375e5:	cli    
 10375e6:	idiv   edi
 10375e8:	(bad)  
 10375e9:	cli    
 10375ea:	idiv   bh
 10375ec:	(bad)  
 10375ed:	stc    
 10375ee:	idiv   bh
 10375f0:	(bad)  
 10375f1:	clc    
 10375f2:	cmc    
 10375f3:	(bad)  
 10375f4:	(bad)  
 10375f5:	clc    
 10375f6:	hlt    
 10375f7:	(bad)  
 10375f8:	push   edi
 10375fa:	repz (bad) 
 10375fc:	push   edi
 10375fe:	repnz inc esi
 1037601:	mov    ah,0xa5
 1037603:	(bad)  
 1037604:	(bad)  
 1037605:	cld    
 1037606:	cli    
 1037607:	(bad)  
 1037608:	(bad)  
 1037609:	cli    
 103760a:	clc    
 103760b:	dec    edx
 103760d:	mov    esp,0x9db2ffb1
 1037612:	mov    edi,?
 1037614:	push   eax
 1037616:	out    0xff,al
 1037618:	push   ebp
 103761a:	out    dx,al
 103761b:	(bad)  
 103761c:	(bad)  
 103761d:	clc    
 103761e:	hlt    
 103761f:	dec    DWORD PTR [ebx+0xff6175]
	...
 1037639:	add    BYTE PTR [eax],al
 103763b:	add    al,dl
 103763d:	mov    esi,0xffffffb0
 1037642:	(bad)  
 1037643:	(bad)  
 1037644:	(bad)  
 1037645:	(bad)  
 1037646:	(bad)  
 1037647:	(bad)  
 1037648:	(bad)  
 1037649:	(bad)  
 103764a:	std    
 103764b:	(bad)  
 103764c:	(bad)  
 103764d:	(bad)  
 103764e:	std    
 103764f:	(bad)  
 1037650:	(bad)  
 1037651:	std    
 1037652:	cld    
 1037653:	(bad)  
 1037654:	(bad)  
 1037655:	std    
 1037656:	sti    
 1037657:	(bad)  
 1037658:	(bad)  
 1037659:	cld    
 103765a:	sti    
 103765b:	(bad)  
 103765c:	(bad)  
 103765d:	cld    
 103765e:	cli    
 103765f:	(bad)  
 1037660:	(bad)  
 1037661:	sti    
 1037662:	stc    
 1037663:	(bad)  
 1037664:	(bad)  
 1037665:	sti    
 1037666:	clc    
 1037667:	(bad)  
 1037668:	(bad)  
 1037669:	cli    
 103766a:	idiv   edi
 103766c:	(bad)  
 103766d:	cli    
 103766e:	idiv   edi
 1037670:	(bad)  
 1037671:	stc    
 1037672:	idiv   bh
 1037674:	(bad)  
 1037675:	clc    
 1037676:	cmc    
 1037677:	(bad)  
 1037678:	(bad)  
 1037679:	clc    
 103767a:	hlt    
 103767b:	(bad)  
 103767c:	push   edi
 103767e:	repz dec ecx
 1037681:	mov    bh,0xaa
 1037683:	(bad)  
 1037684:	(bad)  
 1037685:	(bad)  
 1037686:	(bad)  
 1037687:	call   ecx
 1037689:	lds    edi,FWORD PTR [ebx-0x6b5b4601]
 103768f:	(bad)  
 1037690:	(bad)  
 1037691:	out    dx,eax
 1037692:	in     eax,0xff
 1037694:	push   ebx
 1037696:	in     eax,dx
 1037697:	(bad)  
 1037698:	(bad)  
 1037699:	clc    
 103769a:	hlt    
 103769b:	(bad)  
 103769c:	(bad)  
 103769d:	cld    
 103769e:	stc    
 103769f:	dec    DWORD PTR [ebx+0xff6175]
	...
 10376b1:	add    BYTE PTR [eax],al
 10376b3:	add    BYTE PTR [ebp-0x72007e7b],cl
 10376b9:	test   DWORD PTR [ecx-0x7e7a7201],eax
 10376bf:	jmp    FWORD PTR [ebp+0x62]
 10376c2:	pop    ebx
 10376c3:	(bad)  
 10376c4:	(bad)  
 10376c5:	(bad)  
 10376c6:	(bad)  
 10376c7:	(bad)  
 10376c8:	(bad)  
 10376c9:	(bad)  
 10376ca:	(bad)  
 10376cb:	(bad)  
 10376cc:	(bad)  
 10376cd:	(bad)  
 10376ce:	std    
 10376cf:	(bad)  
 10376d0:	(bad)  
 10376d1:	(bad)  
 10376d2:	std    
 10376d3:	(bad)  
 10376d4:	(bad)  
 10376d5:	std    
 10376d6:	cld    
 10376d7:	(bad)  
 10376d8:	(bad)  
 10376d9:	std    
 10376da:	sti    
 10376db:	(bad)  
 10376dc:	(bad)  
 10376dd:	cld    
 10376de:	sti    
 10376df:	(bad)  
 10376e0:	(bad)  
 10376e1:	cld    
 10376e2:	cli    
 10376e3:	(bad)  
 10376e4:	(bad)  
 10376e5:	sti    
 10376e6:	stc    
 10376e7:	(bad)  
 10376e8:	(bad)  
 10376e9:	sti    
 10376ea:	clc    
 10376eb:	(bad)  
 10376ec:	(bad)  
 10376ed:	cli    
 10376ee:	idiv   edi
 10376f0:	(bad)  
 10376f1:	cli    
 10376f2:	idiv   edi
 10376f4:	(bad)  
 10376f5:	stc    
 10376f6:	idiv   bh
 10376f8:	(bad)  
 10376f9:	stc    
 10376fa:	cmc    
 10376fb:	(bad)  
 10376fc:	(bad)  
 10376fd:	clc    
 10376fe:	hlt    
 10376ff:	dec    esp
 1037701:	mov    ebx,0xccd8ffad
 1037706:	ret    0xc0ff
 1037709:	stos   DWORD PTR es:[edi],eax
 103770a:	pushf  
 103770b:	(bad)  
 103770c:	(bad)  
 103770d:	out    dx,al
 103770e:	in     al,0xff
 1037710:	push   edx
 1037712:	jmp    0x1037713
 1037714:	push   edi
 1037716:	repnz (bad) 
 1037718:	(bad)  
 1037719:	cli    
 103771a:	clc    
 103771b:	(bad)  
 103771c:	(bad)  
 103771d:	std    
 103771e:	cld    
 103771f:	dec    DWORD PTR [ebx+0xff6175]
	...
 1037731:	add    BYTE PTR [eax],al
 1037733:	add    BYTE PTR [ebp-0x36007e7b],cl
 1037739:	mov    ah,0xff
 103773c:	(bad)  
 103773d:	(bad)  
 103773e:	(bad)  
 103773f:	jmp    DWORD PTR [ebx+ebx*4-0x6a]
 1037746:	(bad)  
 1037747:	(bad)  
 1037748:	(bad)  
 1037749:	(bad)  
 103774a:	(bad)  
 103774b:	(bad)  
 103774c:	(bad)  
 103774d:	(bad)  
 103774e:	(bad)  
 103774f:	(bad)  
 1037750:	(bad)  
 1037751:	(bad)  
 1037752:	std    
 1037753:	(bad)  
 1037754:	(bad)  
 1037755:	(bad)  
 1037756:	std    
 1037757:	(bad)  
 1037758:	(bad)  
 1037759:	std    
 103775a:	cld    
 103775b:	(bad)  
 103775c:	(bad)  
 103775d:	std    
 103775e:	sti    
 103775f:	(bad)  
 1037760:	(bad)  
 1037761:	cld    
 1037762:	sti    
 1037763:	(bad)  
 1037764:	(bad)  
 1037765:	cld    
 1037766:	cli    
 1037767:	(bad)  
 1037768:	(bad)  
 1037769:	sti    
 103776a:	stc    
 103776b:	(bad)  
 103776c:	(bad)  
 103776d:	sti    
 103776e:	clc    
 103776f:	(bad)  
 1037770:	(bad)  
 1037771:	cli    
 1037772:	idiv   edi
 1037774:	(bad)  
 1037775:	cli    
 1037776:	idiv   edi
 1037778:	(bad)  
 1037779:	stc    
 103777a:	idiv   bh
 103777c:	(bad)  
 103777d:	stc    
 103777e:	cmc    
 103777f:	dec    edi
 1037781:	mov    ebp,0xb2c7ffaf
 1037786:	mov    ds:0xe2edffff,al
 103778b:	(bad)  
 103778c:	push   edx
 103778e:	jmp    0xffff:0xf1f6ffff
 1037795:	cli    
 1037796:	idiv   edi
 1037798:	(bad)  
 1037799:	cld    
 103779a:	sti    
 103779b:	(bad)  
 103779c:	(bad)  
 103779d:	std    
 103779e:	cld    
 103779f:	dec    DWORD PTR [ebx+0xff6175]
	...
 10377b9:	add    BYTE PTR [eax],al
 10377bb:	add    cl,dl
 10377bd:	mov    esi,0xb9ccffb0
 10377c2:	stos   BYTE PTR es:[edi],al
 10377c3:	dec    ebx
 10377c5:	mov    bh,0xa9
 10377c7:	dec    ecx
 10377c9:	mov    dh,0xa7
 10377cb:	dec    eax
 10377cd:	mov    ah,0xa6
 10377cf:	inc    esi
 10377d1:	mov    bl,0xa4
 10377d3:	inc    ebp
 10377d5:	mov    cl,0xa2
 10377d7:	inc    ebx
 10377d9:	mov    al,0xa1
 10377db:	inc    edx
 10377dd:	scas   al,BYTE PTR es:[edi]
 10377de:	lahf   
 10377df:	inc    eax
 10377e1:	lods   al,BYTE PTR ds:[esi]
 10377e2:	popf   
 10377e3:	(bad)  
 10377e4:	mov    esi,0xbdff9bab
 10377e9:	test   eax,0xa7bbff99
 10377ee:	xchg   edi,eax
 10377ef:	(bad)  
 10377f0:	mov    ecx,0xb7ff95a5
 10377f5:	mov    ds:0xa1b5ff93,eax
 10377fa:	xchg   ecx,eax
 10377fb:	push   DWORD PTR [ebx-0x3f007061]
 1037801:	lods   eax,DWORD PTR ds:[esi]
 1037802:	sahf   
 1037803:	(bad)  
 1037804:	mov    esi,0xbdff9bab
 1037809:	test   eax,0xa7bbff99
 103780e:	xchg   edi,eax
 103780f:	(bad)  
 1037810:	mov    ecx,0xb7ff95a5
 1037815:	mov    ds:0xa1b5ff93,eax
 103781a:	xchg   ecx,eax
 103781b:	push   DWORD PTR [ebx-0x74007061]
 1037821:	jne    0x1037884
 1037823:	inc    DWORD PTR [eax]
 1037825:	add    BYTE PTR [eax],al
 1037827:	add    BYTE PTR [eax],al
 1037829:	add    BYTE PTR [eax],al
 103782b:	add    al,dh
 103782d:	add    BYTE PTR [eax],al
 103782f:	add    eax,eax
 1037831:	add    BYTE PTR [eax],al
 1037833:	add    eax,eax
 1037835:	add    BYTE PTR [eax],al
 1037837:	add    esi,eax
 1037839:	add    BYTE PTR [eax],al
 103783b:	add    esi,eax
 103783d:	add    BYTE PTR [eax],al
 103783f:	add    eax,eax
 1037841:	add    BYTE PTR [eax],al
 1037843:	add    eax,eax
 1037845:	add    BYTE PTR [eax],al
 1037847:	add    esi,eax
 1037849:	add    BYTE PTR [eax],al
 103784b:	add    esi,eax
 103784d:	add    BYTE PTR [eax],al
 103784f:	add    eax,eax
 1037851:	add    BYTE PTR [eax],al
 1037853:	add    eax,eax
 1037855:	add    BYTE PTR [eax],al
 1037857:	add    esi,eax
 1037859:	add    BYTE PTR [eax],al
 103785b:	add    esi,eax
 103785d:	add    BYTE PTR [eax],al
 103785f:	add    eax,eax
 1037861:	add    BYTE PTR [eax],al
 1037863:	add    eax,eax
 1037865:	add    BYTE PTR [eax],al
 1037867:	add    esi,eax
 1037869:	add    BYTE PTR [eax],al
 103786b:	add    esi,eax
 103786d:	add    BYTE PTR [eax],al
 103786f:	add    eax,eax
 1037871:	add    BYTE PTR [eax],al
 1037873:	add    eax,eax
 1037875:	add    BYTE PTR [eax],al
 1037877:	add    esi,eax
 1037879:	add    BYTE PTR [eax],al
 103787b:	add    esi,eax
 103787d:	add    BYTE PTR [eax],al
 103787f:	add    eax,eax
 1037881:	add    BYTE PTR [eax],al
 1037883:	add    eax,eax
 1037885:	add    BYTE PTR [eax],al
 1037887:	add    esi,eax
 1037889:	add    BYTE PTR [eax],al
 103788b:	add    esi,eax
 103788d:	add    BYTE PTR [eax],al
 103788f:	add    eax,eax
 1037891:	add    BYTE PTR [eax],al
 1037893:	add    eax,eax
 1037895:	add    BYTE PTR [eax],al
 1037897:	add    esi,eax
 1037899:	add    BYTE PTR [eax],al
 103789b:	add    esi,eax
 103789d:	add    BYTE PTR [eax],al
 103789f:	add    eax,eax
 10378a1:	add    BYTE PTR [eax],al
 10378a3:	add    eax,eax
 10378a5:	add    BYTE PTR [eax],al
 10378a7:	add    esi,eax
 10378a9:	add    BYTE PTR [eax],al
 10378ab:	add    ebp,DWORD PTR [eax]
 10378ad:	add    BYTE PTR [eax],al
 10378af:	add    BYTE PTR [eax],dl
 10378b1:	add    BYTE PTR [eax],al
 10378b3:	add    BYTE PTR [eax],ah
 10378b5:	add    BYTE PTR [eax],al
 10378b7:	add    BYTE PTR [ecx],al
 10378b9:	add    BYTE PTR [eax],ah
 10378bb:	add    BYTE PTR [eax],al
 10378bd:	add    BYTE PTR [eax],al
 10378bf:	add    BYTE PTR [eax+0x4],al
	...
 10378d6:	add    BYTE PTR [eax],al
 10378d8:	push   0xa4ff6767
 10378dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10378de:	mov    ds:0x96a3b7ff,eax
 10378e3:	call   DWORD PTR [edi-0x7e008f7e]
 10378e9:	imul   edx,DWORD PTR [edi-0x1],0x6d
 10378ed:	push   esi
 10378ee:	aas    
 10378ef:	jmp    DWORD PTR [eax+0x48]
 10378f2:	xor    bh,bh
 10378f4:	pusha  
 10378f5:	dec    eax
 10378f6:	xor    bh,bh
 10378f8:	pusha  
 10378f9:	dec    eax
 10378fa:	xor    bh,bh
 10378fc:	pusha  
 10378fd:	dec    eax
 10378fe:	xor    bh,bh
 1037900:	pusha  
 1037901:	dec    eax
 1037902:	xor    bh,bh
 1037904:	pusha  
 1037905:	dec    eax
 1037906:	xor    bh,bh
 1037908:	pusha  
 1037909:	dec    eax
 103790a:	xor    bh,bh
 103790c:	pusha  
 103790d:	dec    eax
 103790e:	xor    bh,bh
 1037910:	pusha  
 1037911:	dec    eax
 1037912:	xor    bh,bh
 1037914:	add    BYTE PTR [eax],al
 1037916:	add    BYTE PTR [eax],al
 1037918:	mov    ecx,DWORD PTR [edx+0x7e7fff8a]
 103791e:	jge    0x103791f
 1037920:	mov    esp,0xfeff99a7
 1037925:	cli    
 1037926:	clc    
 1037927:	push   eax
 1037929:	fxch   st(2)
 103792b:	push   ecx
 103792d:	xlat   BYTE PTR ds:[ebx]
 103792e:	(bad)  
 1037931:	aam    0xc0
 1037933:	push   ebx
 1037935:	sar    DWORD PTR [edx-0x4a310b01],1
 103793b:	push   ebx
 103793d:	sar    DWORD PTR [edx-0x4a310b01],1
 1037943:	push   esp
 1037945:	into   
 1037946:	mov    ch,0xff
 1037948:	test   eax,0xc4f8ffaa
 103794e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 103794f:	jmp    DWORD PTR [eax+0x48]
 1037952:	xor    bh,bh
 1037954:	add    BYTE PTR [eax],al
 1037956:	add    BYTE PTR [eax],al
 1037958:	es and al,0x23
 103795b:	(bad)  
 103795c:	(bad)  
 103795d:	(bad)  
 103795e:	(bad)  
 103795f:	(bad)  
 1037960:	mov    esi,0xfeff9ba9
 1037965:	cld    
 1037966:	stc    
 1037967:	(bad)  
 1037968:	(bad)  
 1037969:	clc    
 103796a:	cmc    
 103796b:	push   DWORD PTR [eax-0x7d]
 103796e:	mov    bh,bh
 1037970:	jb     0x1037903
 1037972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1037973:	push   eax
 1037975:	jmp    0xf6027960
 103797a:	out    dx,al
 103797b:	(bad)  
 103797c:	(bad)  
 103797d:	cmc    
 103797e:	lock (bad) 
 1037980:	(bad)  
 1037981:	hlt    
 1037982:	out    dx,al
 1037983:	(bad)  
 1037984:	(bad)  
 1037985:	repz in eax,dx
 1037987:	(bad)  
 1037988:	(bad)  
 1037989:	repnz in al,dx
 103798b:	push   edi
 103798d:	(bad)  
 103798e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 103798f:	jmp    DWORD PTR [eax+0x48]
 1037992:	xor    bh,bh
 1037994:	add    BYTE PTR [eax],al
 1037996:	add    BYTE PTR [eax],al
 1037998:	mov    ecx,DWORD PTR [edx+0x7e7fff8a]
 103799e:	jge    0x103799f
 10379a0:	shr    BYTE PTR [ebx-0x3010062],0xfa
 10379a7:	(bad)  
 10379a8:	(bad)  
 10379a9:	stc    
 10379aa:	idiv   bh
 10379ac:	pop    edx
 10379ad:	xchg   esi,eax
 10379ae:	scas   eax,DWORD PTR es:[edi]
 10379af:	(bad)  
 10379b0:	cmp    ebx,eax
 10379b2:	(bad)  
 10379b3:	call   DWORD PTR [ebp-0x70]
 10379b6:	lods   al,BYTE PTR ds:[esi]
 10379b7:	jmp    eax
 10379b9:	fcmovu st,st(1)
 10379bb:	(bad)  
 10379bc:	(bad)  
 10379bd:	div    dl
 10379bf:	(bad)  
 10379c0:	(bad)  
 10379c1:	cmc    
 10379c2:	lock (bad) 
 10379c4:	(bad)  
 10379c5:	hlt    
 10379c6:	out    dx,al
 10379c7:	(bad)  
 10379c8:	std    
 10379c9:	repz out dx,al
 10379cb:	push   esi
 10379cd:	retf   
 10379ce:	mov    al,0xff
 10379d0:	pusha  
 10379d1:	dec    eax
 10379d2:	xor    bh,bh
 10379d4:	add    BYTE PTR [eax],al
 10379d6:	add    BYTE PTR [eax],al
 10379d8:	sbb    al,0x20
 10379da:	sbb    al,0xff
 10379dc:	(bad)  
 10379dd:	(bad)  
 10379de:	(bad)  
 10379df:	inc    eax
 10379e1:	stos   DWORD PTR es:[edi],eax
 10379e2:	sahf   
 10379e3:	(bad)  
 10379e4:	(bad)  
 10379e5:	cld    
 10379e6:	cli    
 10379e7:	(bad)  
 10379e8:	(bad)  
 10379e9:	stc    
 10379ea:	idiv   bh
 10379ec:	nop
 10379ed:	mov    bl,0xc4
 10379ef:	(bad)  
 10379f0:	jle    0x10379d6
 10379f2:	(bad)  
 10379f3:	(bad)  
 10379f4:	jle    0x10379da
 10379f6:	(bad)  
 10379f7:	call   FWORD PTR [edi+eiz*2]
 10379fa:	mov    ?,edi
 10379fc:	out    0xe1,al
 10379fe:	loopne 0x10379ff
 1037a00:	(bad)  
 1037a01:	cmc    
 1037a02:	lock (bad) 
 1037a04:	(bad)  
 1037a05:	hlt    
 1037a06:	out    dx,al
 1037a07:	(bad)  
 1037a08:	std    
 1037a09:	repz out dx,al
 1037a0b:	push   esi
 1037a0d:	retf   
 1037a0e:	mov    al,0xff
 1037a10:	pusha  
 1037a11:	dec    eax
 1037a12:	xor    bh,bh
 1037a14:	add    BYTE PTR [eax],al
 1037a16:	add    BYTE PTR [eax],al
 1037a18:	mov    ecx,DWORD PTR [edx+0x7e7fff8a]
 1037a1e:	jge    0x1037a1f
 1037a20:	mov    esi,0xfeff9ba9
 1037a25:	cld    
 1037a26:	stc    
 1037a27:	call   DWORD PTR [edx+eiz*2+0x6b]
 1037a2b:	inc    DWORD PTR [ebp+0x58]
 1037a2e:	arpl   di,di
 1037a30:	cmp    eax,DWORD PTR cs:[edx-0x1]
 1037a34:	retf   
 1037a35:	std    
 1037a36:	(bad)  
 1037a37:	call   DWORD PTR [ebp-0x27]
 1037a3a:	(bad)  
 1037a3b:	jmp    FWORD PTR [edx]
 1037a3d:	push   eax
 1037a3e:	ins    BYTE PTR es:[edi],dx
 1037a3f:	jmp    eax
 1037a41:	fcmovu st,st(1)
 1037a43:	(bad)  
 1037a44:	(bad)  
 1037a45:	repz in eax,dx
 1037a47:	(bad)  
 1037a48:	(bad)  
 1037a49:	repnz in al,dx
 1037a4b:	push   edi
 1037a4d:	(bad)  
 1037a4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1037a4f:	jmp    DWORD PTR [eax+0x48]
 1037a52:	xor    bh,bh
 1037a54:	add    BYTE PTR [eax],al
 1037a56:	add    BYTE PTR [eax],al
 1037a58:	sbb    al,0x20
 1037a5a:	sbb    al,0xff
 1037a5c:	(bad)  
 1037a5d:	(bad)  
 1037a5e:	(bad)  
 1037a5f:	inc    eax
 1037a61:	stos   DWORD PTR es:[edi],eax
 1037a62:	sahf   
 1037a63:	(bad)  
 1037a64:	(bad)  
 1037a65:	cld    
 1037a66:	cli    
 1037a67:	call   FWORD PTR [ebx-0x60]
 1037a6a:	mov    bh,0xff
 1037a6c:	mov    edi,0xbffffffe
 1037a71:	(bad)  
 1037a72:	(bad)  
 1037a73:	inc    eax
 1037a75:	(bad)  
 1037a76:	(bad)  
 1037a77:	(bad)  
 1037a78:	js     0x1037a5f
 1037a7a:	(bad)  
 1037a7b:	jmp    FWORD PTR [ebx-0x20]
 1037a7e:	sti    
 1037a7f:	push   DWORD PTR [esi]
 1037a81:	dec    edx
 1037a82:	pusha  
 1037a83:	(bad)  
 1037a84:	cld    
 1037a85:	repnz in eax,dx
 1037a87:	(bad)  
 1037a88:	std    
 1037a89:	repz out dx,al
 1037a8b:	push   esi
 1037a8d:	retf   
 1037a8e:	mov    al,0xff
 1037a90:	pusha  
 1037a91:	dec    eax
 1037a92:	xor    bh,bh
 1037a94:	add    BYTE PTR [eax],al
 1037a96:	add    BYTE PTR [eax],al
 1037a98:	mov    ecx,DWORD PTR [edx+0x7e7fff8a]
 1037a9e:	jge    0x1037a9f
 1037aa0:	ret    0x9fae
 1037aa3:	(bad)  
 1037aa4:	(bad)  
 1037aa5:	std    
 1037aa6:	cld    
 1037aa7:	dec    esi
 1037aa9:	in     eax,0xee
 1037aab:	call   FWORD PTR [esi-0x4e]
 1037aae:	into   
 1037aaf:	inc    ecx
 1037ab1:	(bad)  
 1037ab2:	(bad)  
 1037ab3:	(bad)  
 1037ab4:	cmp    al,0xd0
 1037ab6:	(bad)  
 1037ab7:	push   DWORD PTR ds:0xb6ffc59f
 1037abd:	mov    ah,0xb3
 1037abf:	(bad)  
 1037ac0:	std    
 1037ac1:	div    edx
 1037ac3:	(bad)  
 1037ac4:	(bad)  
 1037ac5:	cmc    
 1037ac6:	icebp  
 1037ac7:	(bad)  
 1037ac8:	(bad)  
 1037ac9:	hlt    
 1037aca:	out    dx,eax
 1037acb:	push   esi
 1037acd:	retf   
 1037ace:	mov    al,0xff
 1037ad0:	pusha  
 1037ad1:	dec    eax
 1037ad2:	xor    bh,bh
 1037ad4:	add    BYTE PTR [eax],al
 1037ad6:	add    BYTE PTR [eax],al
 1037ad8:	sbb    al,0x20
 1037ada:	sbb    al,0xff
 1037adc:	(bad)  
 1037add:	(bad)  
 1037ade:	(bad)  
 1037adf:	inc    esp
 1037ae1:	mov    al,0xa2
 1037ae3:	(bad)  
 1037ae4:	(bad)  
 1037ae5:	(bad)  
 1037ae6:	std    
 1037ae7:	(bad)  
 1037ae8:	(bad)  
 1037ae9:	cld    
 1037aea:	cli    
 1037aeb:	jmp    FWORD PTR [eax-0x53]
 1037aee:	mov    esi,0xffffe1ff
 1037af3:	inc    ecx
 1037af5:	(bad)  
 1037af6:	(bad)  
 1037af7:	jmp    DWORD PTR [ebx]
 1037af9:	(bad)  
 1037afa:	(bad)  
 1037afb:	jmp    FWORD PTR [edx+edx*4]
 1037afe:	mov    dh,0xff
 1037b00:	mov    dh,0xb5
 1037b02:	mov    bl,0xff
 1037b04:	(bad)  
 1037b05:	div    dl
 1037b07:	(bad)  
 1037b08:	std    
 1037b09:	cmc    
 1037b0a:	lock push ebp
 1037b0d:	int    0xb5
 1037b0f:	jmp    DWORD PTR [eax+0x48]
 1037b12:	xor    bh,bh
 1037b14:	add    BYTE PTR [eax],al
 1037b16:	add    BYTE PTR [eax],al
 1037b18:	jne    0x1037b90
 1037b1a:	jne    0x1037b1b
 1037b1c:	js     0x1037b96
 1037b1e:	js     0x1037b1f
 1037b20:	(bad)  
 1037b21:	mov    bl,0xa5
 1037b23:	(bad)  
 1037b24:	(bad)  
 1037b25:	(bad)  
 1037b26:	std    
 1037b27:	(bad)  
 1037b28:	(bad)  
 1037b29:	std    
 1037b2a:	sti    
 1037b2b:	(bad)  
 1037b2c:	(bad)  
 1037b2d:	sti    
 1037b2e:	cli    
 1037b2f:	jmp    FWORD PTR [eax-0x46]
 1037b32:	aad    0xff
 1037b34:	dec    ebx
 1037b35:	stos   BYTE PTR es:[edi],al
 1037b36:	sar    edi,1
 1037b38:	dec    edx
 1037b39:	test   al,0xcf
 1037b3b:	inc    DWORD PTR [edx-0x68]
 1037b3e:	sar    bh,0x38
 1037b41:	jl     0x1037ae0
 1037b43:	jmp    FWORD PTR [ecx+ebx*2]
 1037b46:	je     0x1037b47
 1037b48:	(bad)  
 1037b49:	div    edx
 1037b4b:	push   esp
 1037b4d:	sar    BYTE PTR [edx+0x304860ff],1
 1037b53:	inc    DWORD PTR [eax]
 1037b55:	add    BYTE PTR [eax],al
 1037b57:	add    BYTE PTR [eax+eiz*1],bl
 1037b5a:	sbb    al,0xff
 1037b5c:	(bad)  
 1037b5d:	(bad)  
 1037b5e:	(bad)  
 1037b5f:	dec    ecx
 1037b61:	mov    ch,0xa7
 1037b63:	(bad)  
 1037b64:	(bad)  
 1037b65:	(bad)  
 1037b66:	(bad)  
 1037b67:	(bad)  
 1037b68:	(bad)  
 1037b69:	(bad)  
 1037b6a:	std    
 1037b6b:	(bad)  
 1037b6c:	(bad)  
 1037b6d:	std    
 1037b6e:	cld    
 1037b6f:	(bad)  
 1037b70:	(bad)  
 1037b71:	cld    
 1037b72:	sti    
 1037b73:	(bad)  
 1037b74:	(bad)  
 1037b75:	sti    
 1037b76:	stc    
 1037b77:	(bad)  
 1037b78:	(bad)  
 1037b79:	cli    
 1037b7a:	clc    
 1037b7b:	(bad)  
 1037b7c:	(bad)  
 1037b7d:	sti    
 1037b7e:	stc    
 1037b7f:	(bad)  
 1037b80:	(bad)  
 1037b81:	cli    
 1037b82:	clc    
 1037b83:	(bad)  
 1037b84:	cld    
 1037b85:	div    esp
 1037b87:	(bad)  
 1037b88:	jmp    0xc8d3:0xe3ffd2db
 1037b8f:	jmp    DWORD PTR [edx+ecx*2+0x36]
 1037b93:	inc    DWORD PTR [eax]
 1037b95:	add    BYTE PTR [eax],al
 1037b97:	add    BYTE PTR [ebp+0x76],dh
 1037b9a:	jne    0x1037b9b
 1037b9c:	add    BYTE PTR [eax-0x47340080],0xaa
 1037ba3:	(bad)  
 1037ba4:	(bad)  
 1037ba5:	(bad)  
 1037ba6:	(bad)  
 1037ba7:	(bad)  
 1037ba8:	(bad)  
 1037ba9:	(bad)  
 1037baa:	(bad)  
 1037bab:	(bad)  
 1037bac:	(bad)  
 1037bad:	(bad)  
 1037bae:	std    
 1037baf:	(bad)  
 1037bb0:	(bad)  
 1037bb1:	std    
 1037bb2:	cld    
 1037bb3:	(bad)  
 1037bb4:	(bad)  
 1037bb5:	cld    
 1037bb6:	sti    
 1037bb7:	(bad)  
 1037bb8:	(bad)  
 1037bb9:	sti    
 1037bba:	stc    
 1037bbb:	(bad)  
 1037bbc:	(bad)  
 1037bbd:	cld    
 1037bbe:	sti    
 1037bbf:	(bad)  
 1037bc0:	(bad)  
 1037bc1:	sti    
 1037bc2:	stc    
 1037bc3:	(bad)  
 1037bc4:	mov    ebx,0x73ff96a5
 1037bc9:	pop    eax
 1037bca:	inc    esp
 1037bcb:	(bad)  
 1037bcc:	jl     0x1037c2e
 1037bce:	dec    esp
 1037bcf:	jmp    DWORD PTR [edx+ecx*2+0x36]
 1037bd3:	inc    DWORD PTR [eax]
 1037bd5:	add    BYTE PTR [eax],al
 1037bd7:	add    BYTE PTR [eax],ah
 1037bd9:	and    eax,0xffffff20
 1037bde:	(bad)  
 1037bdf:	dec    esi
 1037be1:	mov    ebx,0xffffffac
 1037be6:	(bad)  
 1037be7:	(bad)  
 1037be8:	(bad)  
 1037be9:	(bad)  
 1037bea:	(bad)  
 1037beb:	(bad)  
 1037bec:	(bad)  
 1037bed:	(bad)  
 1037bee:	(bad)  
 1037bef:	(bad)  
 1037bf0:	(bad)  
 1037bf1:	(bad)  
 1037bf2:	std    
 1037bf3:	(bad)  
 1037bf4:	(bad)  
 1037bf5:	std    
 1037bf6:	cld    
 1037bf7:	(bad)  
 1037bf8:	(bad)  
 1037bf9:	cld    
 1037bfa:	cli    
 1037bfb:	(bad)  
 1037bfc:	(bad)  
 1037bfd:	std    
 1037bfe:	cld    
 1037bff:	(bad)  
 1037c00:	(bad)  
 1037c01:	cld    
 1037c02:	cli    
 1037c03:	(bad)  
 1037c04:	mov    ebx,0xd7ff96a5
 1037c09:	(bad)  
 1037c0a:	mov    edx,0x445874ff
 1037c0f:	jmp    DWORD PTR [eax+0xff7689]
 1037c15:	add    BYTE PTR [eax],al
 1037c17:	add    BYTE PTR [esi+0x67],ah
 1037c1a:	inc    WORD PTR [eax-0x2f007f80]
 1037c21:	mov    ebp,0xffffffaf
 1037c26:	(bad)  
 1037c27:	(bad)  
 1037c28:	(bad)  
 1037c29:	(bad)  
 1037c2a:	(bad)  
 1037c2b:	(bad)  
 1037c2c:	(bad)  
 1037c2d:	(bad)  
 1037c2e:	(bad)  
 1037c2f:	(bad)  
 1037c30:	(bad)  
 1037c31:	(bad)  
 1037c32:	(bad)  
 1037c33:	(bad)  
 1037c34:	(bad)  
 1037c35:	std    
 1037c36:	std    
 1037c37:	(bad)  
 1037c38:	(bad)  
 1037c39:	std    
 1037c3a:	cld    
 1037c3b:	(bad)  
 1037c3c:	(bad)  
 1037c3d:	std    
 1037c3e:	std    
 1037c3f:	(bad)  
 1037c40:	(bad)  
 1037c41:	std    
 1037c42:	cld    
 1037c43:	inc    eax
 1037c45:	stos   DWORD PTR es:[edi],eax
 1037c46:	pushf  
 1037c47:	jmp    FWORD PTR [eax+0x4e]
 1037c4a:	cmp    bh,bh
 1037c4c:	ffree  st(6)
 1037c4e:	mov    bh,0xff
 1037c50:	sub    DWORD PTR [ebx+0x57],0xff
 1037c57:	add    BYTE PTR [eax],ah
 1037c59:	and    eax,0xffffff20
 1037c5e:	(bad)  
 1037c5f:	call   ecx
 1037c61:	mov    edi,0xffffffb1
 1037c66:	(bad)  
 1037c67:	(bad)  
 1037c68:	(bad)  
 1037c69:	(bad)  
 1037c6a:	(bad)  
 1037c6b:	(bad)  
 1037c6c:	(bad)  
 1037c6d:	(bad)  
 1037c6e:	(bad)  
 1037c6f:	(bad)  
 1037c70:	(bad)  
 1037c71:	(bad)  
 1037c72:	(bad)  
 1037c73:	(bad)  
 1037c74:	(bad)  
 1037c75:	(bad)  
 1037c76:	(bad)  
 1037c77:	(bad)  
 1037c78:	(bad)  
 1037c79:	(bad)  
 1037c7a:	(bad)  
 1037c7b:	(bad)  
 1037c7c:	(bad)  
 1037c7d:	(bad)  
 1037c7e:	(bad)  
 1037c7f:	(bad)  
 1037c80:	(bad)  
 1037c81:	(bad)  
 1037c82:	(bad)  
 1037c83:	dec    ecx
 1037c85:	mov    bl,0xa4
 1037c87:	jmp    ecx
 1037c89:	aad    0xcc
 1037c8b:	(bad)  
 1037c8c:	(bad)  
 1037c8d:	cld    
 1037c8e:	cld    
 1037c8f:	call   DWORD PTR [edi+0xff7082]
 1037c95:	add    BYTE PTR [eax],al
 1037c97:	add    BYTE PTR [eax],al
 1037c99:	add    BYTE PTR [eax],al
 1037c9b:	add    BYTE PTR [edx-0x2d007d7e],al
 1037ca1:	shl    BYTE PTR [edx-0x4f412f01],0xff
 1037ca8:	iret   
 1037ca9:	mov    esp,0xb9ccffae
 1037cae:	stos   DWORD PTR es:[edi],eax
 1037caf:	dec    ecx
 1037cb1:	mov    dh,0xa8
 1037cb3:	inc    edi
 1037cb5:	mov    bl,0xa5
 1037cb7:	inc    esp
 1037cb9:	mov    al,0xa2
 1037cbb:	inc    edi
 1037cbd:	mov    bl,0xa5
 1037cbf:	inc    esp
 1037cc1:	mov    al,0xa2
 1037cc3:	inc    ecx
 1037cc5:	lods   eax,DWORD PTR ds:[esi]
 1037cc6:	lahf   
 1037cc7:	(bad)  
 1037cc8:	mov    esi,0xbdff9caa
 1037ccd:	test   al,0x9a
 1037ccf:	(bad)  
 1037cd0:	mov    ebx,0x80ff98a6
 1037cd5:	add    BYTE PTR [eax],al
 1037cd7:	add    BYTE PTR [eax-0x80000000],al
 1037cdd:	add    BYTE PTR [eax],al
 1037cdf:	add    BYTE PTR [eax-0x80000000],al
 1037ce5:	add    BYTE PTR [eax],al
 1037ce7:	add    BYTE PTR [eax-0x80000000],al
 1037ced:	add    BYTE PTR [eax],al
 1037cef:	add    BYTE PTR [eax-0x80000000],al
 1037cf5:	add    BYTE PTR [eax],al
 1037cf7:	add    BYTE PTR [eax-0x80000000],al
 1037cfd:	add    BYTE PTR [eax],al
 1037cff:	add    BYTE PTR [eax-0x80000000],al
 1037d05:	add    BYTE PTR [eax],al
 1037d07:	add    BYTE PTR [eax-0x80000000],al
 1037d0d:	add    BYTE PTR [eax],al
 1037d0f:	add    al,al
	...
 1037d21:	add    BYTE PTR [esi],ah
 1037d23:	add    BYTE PTR [ebp+0x0],cl
 1037d26:	imul   eax,DWORD PTR [eax],0x720063
 1037d2c:	outs   dx,DWORD PTR ds:[esi]
 1037d2d:	add    BYTE PTR [ebx+0x0],dh
 1037d30:	outs   dx,DWORD PTR ds:[esi]
 1037d31:	add    BYTE PTR [esi+0x0],ah
 1037d34:	je     0x1037d36
 1037d36:	and    BYTE PTR [eax],al
 1037d38:	push   ebx
 1037d39:	add    BYTE PTR [ecx+0x0],dl
 1037d3c:	dec    esp
 1037d3d:	add    BYTE PTR [eax],ah
 1037d3f:	add    BYTE PTR [ebx+0x0],dl
 1037d42:	add    BYTE PTR gs:[edx+0x0],dh
 1037d46:	jbe    0x1037d48
 1037d48:	add    BYTE PTR gs:[edx+0x0],dh
 1037d4c:	and    BYTE PTR [eax],al
 1037d4e:	dec    ebp
 1037d4f:	add    BYTE PTR [ecx+0x0],ah
 1037d52:	outs   dx,BYTE PTR ds:[esi]
 1037d53:	add    BYTE PTR [ecx+0x0],ah
 1037d56:	add    BYTE PTR [di+0x0],ah
 1037d5a:	ins    DWORD PTR es:[edi],dx
 1037d5b:	add    BYTE PTR [ebp+0x0],ah
 1037d5e:	outs   dx,BYTE PTR ds:[esi]
 1037d5f:	add    BYTE PTR [eax+eax*1+0x20],dh
 1037d63:	add    BYTE PTR [ebx+0x0],dl
 1037d66:	je     0x1037d68
 1037d68:	jne    0x1037d6a
 1037d6a:	add    BYTE PTR fs:[ecx+0x0],ch
 1037d6e:	outs   dx,DWORD PTR ds:[esi]
 1037d6f:	add    BYTE PTR [ebp+0x0],al
 1037d72:	inc    ebx
 1037d73:	add    BYTE PTR [ecx+0x0],ah
 1037d76:	outs   dx,BYTE PTR ds:[esi]
 1037d77:	add    BYTE PTR [esi+0x0],ch
 1037d7a:	outs   dx,DWORD PTR ds:[esi]
 1037d7b:	add    BYTE PTR [eax+eax*1+0x20],dh
 1037d7f:	add    BYTE PTR [esi+0x0],ah
 1037d82:	imul   eax,DWORD PTR [eax],0x64006e
 1037d88:	and    BYTE PTR [eax],al
 1037d8a:	outs   dx,DWORD PTR ds:[esi]
 1037d8b:	add    BYTE PTR [esi+0x0],ch
 1037d8e:	add    BYTE PTR gs:[eax],ah
 1037d91:	add    BYTE PTR [edi+0x0],ch
 1037d94:	jb     0x1037d96
 1037d96:	and    BYTE PTR [eax],al
 1037d98:	ins    DWORD PTR es:[edi],dx
 1037d99:	add    BYTE PTR [edi+0x0],ch
 1037d9c:	jb     0x1037d9e
 1037d9e:	add    BYTE PTR gs:[eax],ah
 1037da1:	add    BYTE PTR [ebx+0x0],ah
 1037da4:	outs   dx,DWORD PTR ds:[esi]
 1037da5:	add    BYTE PTR [ebp+0x0],ch
 1037da8:	jo     0x1037daa
 1037daa:	outs   dx,DWORD PTR ds:[esi]
 1037dab:	add    BYTE PTR [esi+0x0],ch
 1037dae:	add    BYTE PTR gs:[esi+0x0],ch
 1037db2:	je     0x1037db4
 1037db4:	jae    0x1037db6
 1037db6:	add    BYTE PTR cs:[eax],ah
 1037db9:	add    BYTE PTR [eax+0x0],dl
 1037dbc:	ins    BYTE PTR es:[edi],dx
 1037dbd:	add    BYTE PTR [ebp+0x0],ah
 1037dc0:	popa   
 1037dc1:	add    BYTE PTR [ebx+0x0],dh
 1037dc4:	add    BYTE PTR gs:[eax],ah
 1037dc7:	add    BYTE PTR [edx+0x0],dh
 1037dca:	add    BYTE PTR gs:[ecx+0x0],ch
 1037dce:	outs   dx,BYTE PTR ds:[esi]
 1037dcf:	add    BYTE PTR [ebx+0x0],dh
 1037dd2:	je     0x1037dd4
 1037dd4:	popa   
 1037dd5:	add    BYTE PTR [eax+eax*1+0x6c],ch
 1037dd9:	add    BYTE PTR [eax],ah
 1037ddb:	add    BYTE PTR [eax+eax*1+0x68],dh
 1037ddf:	add    BYTE PTR [ebp+0x0],ah
 1037de2:	and    BYTE PTR [eax],al
 1037de4:	popa   
 1037de5:	add    BYTE PTR [eax+0x0],dh
 1037de8:	jo     0x1037dea
 1037dea:	ins    BYTE PTR es:[edi],dx
 1037deb:	add    BYTE PTR [ecx+0x0],ch
 1037dee:	arpl   WORD PTR [eax],ax
 1037df0:	popa   
 1037df1:	add    BYTE PTR [eax+eax*1+0x69],dh
 1037df5:	add    BYTE PTR [edi+0x0],ch
 1037df8:	outs   dx,BYTE PTR ds:[esi]
 1037df9:	add    BYTE PTR [esi],ch
	...
 1037e03:	add    BYTE PTR [esi],ah
 1037e05:	add    BYTE PTR [ebp+0x0],cl
 1037e08:	imul   eax,DWORD PTR [eax],0x720063
 1037e0e:	outs   dx,DWORD PTR ds:[esi]
 1037e0f:	add    BYTE PTR [ebx+0x0],dh
 1037e12:	outs   dx,DWORD PTR ds:[esi]
 1037e13:	add    BYTE PTR [esi+0x0],ah
 1037e16:	je     0x1037e18
 1037e18:	and    BYTE PTR [eax],al
 1037e1a:	push   ebx
 1037e1b:	add    BYTE PTR [ecx+0x0],dl
 1037e1e:	dec    esp
 1037e1f:	add    BYTE PTR [eax],ah
 1037e21:	add    BYTE PTR [ebx+0x0],dl
 1037e24:	add    BYTE PTR gs:[edx+0x0],dh
 1037e28:	jbe    0x1037e2a
 1037e2a:	add    BYTE PTR gs:[edx+0x0],dh
 1037e2e:	and    BYTE PTR [eax],al
 1037e30:	dec    ebp
 1037e31:	add    BYTE PTR [ecx+0x0],ah
 1037e34:	outs   dx,BYTE PTR ds:[esi]
 1037e35:	add    BYTE PTR [ecx+0x0],ah
 1037e38:	add    BYTE PTR [di+0x0],ah
 1037e3c:	ins    DWORD PTR es:[edi],dx
 1037e3d:	add    BYTE PTR [ebp+0x0],ah
 1037e40:	outs   dx,BYTE PTR ds:[esi]
 1037e41:	add    BYTE PTR [eax+eax*1+0x20],dh
 1037e45:	add    BYTE PTR [ebx+0x0],dl
 1037e48:	je     0x1037e4a
 1037e4a:	jne    0x1037e4c
 1037e4c:	add    BYTE PTR fs:[ecx+0x0],ch
 1037e50:	outs   dx,DWORD PTR ds:[esi]
 1037e51:	add    BYTE PTR [eax],al
 1037e53:	add    BYTE PTR [eax],al
 1037e55:	add    BYTE PTR [eax+0x41],dl
 1037e58:	adc    BYTE PTR [eax],al
 1037e5a:	aas    
 1037e5b:	add    BYTE PTR [eax+0x0],ch
 1037e5e:	add    BYTE PTR [eax],al
 1037e60:	nop
 1037e61:	add    BYTE PTR [edi],ch
 1037e63:	add    BYTE PTR [eax+0x0],ch
 1037e66:	add    BYTE PTR [eax],al
 1037e68:	add    BYTE PTR [eax],al
 1037e6a:	add    DWORD PTR [eax],eax
 1037e6c:	add    al,0x0
 1037e6e:	adc    BYTE PTR [eax],dl
 1037e70:	add    BYTE PTR [eax],al
 1037e72:	add    DWORD PTR [eax],eax
 1037e74:	or     BYTE PTR [eax],al
 1037e76:	push   0x1000005
 1037e7b:	add    BYTE PTR [eax],dl
 1037e7d:	adc    BYTE PTR [eax],al
 1037e7f:	add    BYTE PTR [ecx],al
 1037e81:	add    BYTE PTR [eax],ah
 1037e83:	add    BYTE PTR [eax+0x4],ch
 1037e86:	add    BYTE PTR [eax],al
 1037e88:	add    al,BYTE PTR [eax]
 1037e8a:	and    BYTE PTR [eax],ah
 1037e8c:	add    BYTE PTR [eax],al
 1037e8e:	add    DWORD PTR [eax],eax
 1037e90:	or     BYTE PTR [eax],al
 1037e92:	test   al,0x8
 1037e94:	add    BYTE PTR [eax],al
 1037e96:	add    eax,DWORD PTR [eax]
 1037e98:	and    BYTE PTR [eax],ah
 1037e9a:	add    BYTE PTR [eax],al
 1037e9c:	add    DWORD PTR [eax],eax
 1037e9e:	and    BYTE PTR [eax],al
 1037ea0:	test   al,0x10
 1037ea2:	add    BYTE PTR [eax],al
 1037ea4:	add    al,0x0
 1037ea6:	push   eax
 1037ea7:	inc    ecx
 1037ea8:	add    BYTE PTR [eax],al
 1037eaa:	add    DWORD PTR [eax],eax
 1037eac:	add    al,0x0
 1037eae:	adc    BYTE PTR [eax],dl
 1037eb0:	add    BYTE PTR [eax],al
 1037eb2:	add    DWORD PTR [eax],eax
 1037eb4:	or     BYTE PTR [eax],al
 1037eb6:	push   0x5000005
 1037ebb:	add    BYTE PTR [eax],dl
 1037ebd:	adc    BYTE PTR [eax],al
 1037ebf:	add    BYTE PTR [ecx],al
 1037ec1:	add    BYTE PTR [eax],ah
 1037ec3:	add    BYTE PTR [eax+0x4],ch
 1037ec6:	add    BYTE PTR [eax],al
 1037ec8:	push   es
 1037ec9:	add    BYTE PTR [eax],ah
 1037ecb:	and    BYTE PTR [eax],al
 1037ecd:	add    BYTE PTR [ecx],al
 1037ecf:	add    BYTE PTR [eax],cl
 1037ed1:	add    BYTE PTR [eax+0x7000008],ch
 1037ed7:	add    BYTE PTR [eax],ah
 1037ed9:	and    BYTE PTR [eax],al
 1037edb:	add    BYTE PTR [ecx],al
 1037edd:	add    BYTE PTR [eax],ah
 1037edf:	add    BYTE PTR [eax+0x8000010],ch
 1037ee5:	add    BYTE PTR [eax+0x41],dl
 1037ee8:	add    BYTE PTR [eax],al
 1037eea:	add    DWORD PTR [eax],eax
 1037eec:	add    al,0x0
 1037eee:	and    BYTE PTR [eax],ah
 1037ef0:	add    BYTE PTR [eax],al
 1037ef2:	add    DWORD PTR [eax],eax
 1037ef4:	or     BYTE PTR [eax],al
 1037ef6:	test   al,0x8
 1037ef8:	add    BYTE PTR [eax],al
 1037efa:	or     DWORD PTR [eax],eax
 1037efc:	adc    BYTE PTR [eax],dl
 1037efe:	add    BYTE PTR [eax],al
 1037f00:	add    DWORD PTR [eax],eax
 1037f02:	or     BYTE PTR [eax],al
 1037f04:	push   0xa000005
 1037f09:	add    BYTE PTR [eax],ah
 1037f0b:	and    BYTE PTR [eax],al
 1037f0d:	add    BYTE PTR [ecx],al
 1037f0f:	add    BYTE PTR [eax],ah
 1037f11:	add    BYTE PTR [eax+0xb000010],ch
 1037f17:	add    BYTE PTR [eax],dl
 1037f19:	adc    BYTE PTR [eax],al
 1037f1b:	add    BYTE PTR [ecx],al
 1037f1d:	add    BYTE PTR [eax],ah
 1037f1f:	add    BYTE PTR [eax+0x4],ch
 1037f22:	add    BYTE PTR [eax],al
 1037f24:	or     al,0x0
 1037f26:	push   eax
 1037f27:	inc    ecx
 1037f28:	add    BYTE PTR [eax],al
 1037f2a:	add    DWORD PTR [eax],eax
 1037f2c:	add    al,0x0
 1037f2e:	and    BYTE PTR [eax],ah
 1037f30:	add    BYTE PTR [eax],al
 1037f32:	add    DWORD PTR [eax],eax
 1037f34:	or     BYTE PTR [eax],al
 1037f36:	test   al,0x8
 1037f38:	add    BYTE PTR [eax],al
 1037f3a:	or     eax,0x101000
 1037f3f:	add    BYTE PTR [ecx],al
 1037f41:	add    BYTE PTR [eax],cl
 1037f43:	add    BYTE PTR [eax+0x5],ch
 1037f46:	add    BYTE PTR [eax],al
 1037f48:	push   cs
 1037f49:	add    BYTE PTR [eax],ah
 1037f4b:	and    BYTE PTR [eax],al
 1037f4d:	add    BYTE PTR [ecx],al
 1037f4f:	add    BYTE PTR [eax],ah
 1037f51:	add    BYTE PTR [eax+0xf000010],ch
 1037f57:	add    BYTE PTR [eax],dl
 1037f59:	adc    BYTE PTR [eax],al
 1037f5b:	add    BYTE PTR [ecx],al
 1037f5d:	add    BYTE PTR [eax],ah
 1037f5f:	add    BYTE PTR [eax+0x4],ch
 1037f62:	add    BYTE PTR [eax],al
 1037f64:	adc    BYTE PTR [eax],al
 1037f66:	push   eax
 1037f67:	inc    ecx
 1037f68:	add    BYTE PTR [eax],al
 1037f6a:	add    DWORD PTR [eax],eax
 1037f6c:	add    al,0x0
 1037f6e:	and    BYTE PTR [eax],ah
 1037f70:	add    BYTE PTR [eax],al
 1037f72:	add    DWORD PTR [eax],eax
 1037f74:	or     BYTE PTR [eax],al
 1037f76:	test   al,0x8
 1037f78:	add    BYTE PTR [eax],al
 1037f7a:	adc    DWORD PTR [eax],eax
 1037f7c:	adc    BYTE PTR [eax],dl
 1037f7e:	add    BYTE PTR [eax],al
 1037f80:	add    DWORD PTR [eax],eax
 1037f82:	or     BYTE PTR [eax],al
 1037f84:	push   0x12000005
 1037f89:	add    BYTE PTR [eax],ah
 1037f8b:	and    BYTE PTR [eax],al
 1037f8d:	add    BYTE PTR [ecx],al
 1037f8f:	add    BYTE PTR [eax],ah
 1037f91:	add    BYTE PTR [eax+0x13000010],ch
 1037f97:	add    BYTE PTR [eax],dl
 1037f99:	adc    BYTE PTR [eax],al
 1037f9b:	add    BYTE PTR [ecx],al
 1037f9d:	add    BYTE PTR [eax],ah
 1037f9f:	add    BYTE PTR [eax+0x4],ch
 1037fa2:	add    BYTE PTR [eax],al
 1037fa4:	adc    al,0x0
 1037fa6:	push   eax
 1037fa7:	inc    ecx
 1037fa8:	add    BYTE PTR [eax],al
 1037faa:	add    DWORD PTR [eax],eax
 1037fac:	add    al,0x0
 1037fae:	and    BYTE PTR [eax],ah
 1037fb0:	add    BYTE PTR [eax],al
 1037fb2:	add    DWORD PTR [eax],eax
 1037fb4:	or     BYTE PTR [eax],al
 1037fb6:	test   al,0x8
 1037fb8:	add    BYTE PTR [eax],al
 1037fba:	adc    eax,0x101000
 1037fbf:	add    BYTE PTR [ecx],al
 1037fc1:	add    BYTE PTR [eax],cl
 1037fc3:	add    BYTE PTR [eax+0x5],ch
 1037fc6:	add    BYTE PTR [eax],al
 1037fc8:	push   ss
 1037fc9:	add    BYTE PTR [eax],ah
 1037fcb:	and    BYTE PTR [eax],al
 1037fcd:	add    BYTE PTR [ecx],al
 1037fcf:	add    BYTE PTR [eax],ah
 1037fd1:	add    BYTE PTR [eax+0x17000010],ch
 1037fd7:	add    BYTE PTR [eax],dl
 1037fd9:	adc    BYTE PTR [eax],al
 1037fdb:	add    BYTE PTR [ecx],al
 1037fdd:	add    BYTE PTR [eax],ah
 1037fdf:	add    BYTE PTR [eax+0x4],ch
 1037fe2:	add    BYTE PTR [eax],al
 1037fe4:	sbb    BYTE PTR [eax],al
 1037fe6:	push   eax
 1037fe7:	inc    ecx
 1037fe8:	add    BYTE PTR [eax],al
 1037fea:	add    DWORD PTR [eax],eax
 1037fec:	add    al,0x0
 1037fee:	and    BYTE PTR [eax],ah
 1037ff0:	add    BYTE PTR [eax],al
 1037ff2:	add    DWORD PTR [eax],eax
 1037ff4:	or     BYTE PTR [eax],al
 1037ff6:	test   al,0x8
 1037ff8:	add    BYTE PTR [eax],al
 1037ffa:	sbb    DWORD PTR [eax],eax
 1037ffc:	adc    BYTE PTR [eax],dl
 1037ffe:	add    BYTE PTR [eax],al
 1038000:	add    DWORD PTR [eax],eax
 1038002:	or     BYTE PTR [eax],al
 1038004:	push   0x1a000005
 1038009:	add    BYTE PTR [eax],ah
 103800b:	and    BYTE PTR [eax],al
 103800d:	add    BYTE PTR [ecx],al
 103800f:	add    BYTE PTR [eax],ah
 1038011:	add    BYTE PTR [eax+0x1b000010],ch
 1038017:	add    BYTE PTR [eax],dl
 1038019:	adc    BYTE PTR [eax],al
 103801b:	add    BYTE PTR [ecx],al
 103801d:	add    BYTE PTR [eax],ah
 103801f:	add    BYTE PTR [eax+0x4],ch
 1038022:	add    BYTE PTR [eax],al
 1038024:	sbb    al,0x0
 1038026:	push   eax
 1038027:	inc    ecx
 1038028:	add    BYTE PTR [eax],al
 103802a:	add    DWORD PTR [eax],eax
 103802c:	add    al,0x0
 103802e:	and    BYTE PTR [eax],ah
 1038030:	add    BYTE PTR [eax],al
 1038032:	add    DWORD PTR [eax],eax
 1038034:	or     BYTE PTR [eax],al
 1038036:	test   al,0x8
 1038038:	add    BYTE PTR [eax],al
 103803a:	sbb    eax,0x101000
 103803f:	add    BYTE PTR [ecx],al
 1038041:	add    BYTE PTR [eax],cl
 1038043:	add    BYTE PTR [eax+0x5],ch
 1038046:	add    BYTE PTR [eax],al
 1038048:	push   ds
 1038049:	add    BYTE PTR [eax],ah
 103804b:	and    BYTE PTR [eax],al
 103804d:	add    BYTE PTR [ecx],al
 103804f:	add    BYTE PTR [eax],ah
 1038051:	add    BYTE PTR [eax+0x1f000010],ch
 1038057:	add    BYTE PTR [eax],dl
 1038059:	adc    BYTE PTR [eax],al
 103805b:	add    BYTE PTR [ecx],al
 103805d:	add    BYTE PTR [eax],ah
 103805f:	add    BYTE PTR [eax+0x4],ch
 1038062:	add    BYTE PTR [eax],al
 1038064:	and    BYTE PTR [eax],al
 1038066:	push   eax
 1038067:	inc    ecx
 1038068:	add    BYTE PTR [eax],al
 103806a:	add    DWORD PTR [eax],eax
 103806c:	add    al,0x0
 103806e:	and    BYTE PTR [eax],ah
 1038070:	add    BYTE PTR [eax],al
 1038072:	add    DWORD PTR [eax],eax
 1038074:	or     BYTE PTR [eax],al
 1038076:	test   al,0x8
 1038078:	add    BYTE PTR [eax],al
 103807a:	and    eax,0x101000
 103807f:	add    BYTE PTR [ecx],al
 1038081:	add    BYTE PTR [eax],cl
 1038083:	add    BYTE PTR [eax+0x5],ch
 1038086:	add    BYTE PTR [eax],al
 1038088:	add    BYTE PTR es:[eax],ah
 103808b:	and    BYTE PTR [eax],al
 103808d:	add    BYTE PTR [ecx],al
 103808f:	add    BYTE PTR [eax],ah
 1038091:	add    BYTE PTR [eax+0x27000010],ch
 1038097:	add    BYTE PTR [eax],dl
 1038099:	adc    BYTE PTR [eax],al
 103809b:	add    BYTE PTR [ecx],al
 103809d:	add    BYTE PTR [eax],ah
 103809f:	add    BYTE PTR [eax+0x4],ch
 10380a2:	add    BYTE PTR [eax],al
 10380a4:	sub    BYTE PTR [eax],al
 10380a6:	push   eax
 10380a7:	inc    ecx
 10380a8:	add    BYTE PTR [eax],al
 10380aa:	add    DWORD PTR [eax],eax
 10380ac:	add    al,0x0
 10380ae:	and    BYTE PTR [eax],ah
 10380b0:	add    BYTE PTR [eax],al
 10380b2:	add    DWORD PTR [eax],eax
 10380b4:	or     BYTE PTR [eax],al
 10380b6:	test   al,0x8
 10380b8:	add    BYTE PTR [eax],al
 10380ba:	sub    DWORD PTR [eax],eax
 10380bc:	adc    BYTE PTR [eax],dl
 10380be:	add    BYTE PTR [eax],al
 10380c0:	add    DWORD PTR [eax],eax
 10380c2:	or     BYTE PTR [eax],al
 10380c4:	push   0x2a000005
 10380c9:	add    BYTE PTR [eax],ah
 10380cb:	and    BYTE PTR [eax],al
 10380cd:	add    BYTE PTR [ecx],al
 10380cf:	add    BYTE PTR [eax],cl
 10380d1:	add    BYTE PTR [eax+0x2b000008],ch
 10380d7:	add    BYTE PTR [eax],dl
 10380d9:	adc    BYTE PTR [eax],al
 10380db:	add    BYTE PTR [ecx],al
 10380dd:	add    BYTE PTR [eax],cl
 10380df:	add    BYTE PTR [eax+0x5],ch
 10380e2:	add    BYTE PTR [eax],al
 10380e4:	sub    al,0x0
 10380e6:	push   eax
 10380e7:	inc    ecx
 10380e8:	add    BYTE PTR [eax],al
 10380ea:	add    DWORD PTR [eax],eax
 10380ec:	add    al,BYTE PTR [eax]
 10380ee:	adc    BYTE PTR [eax],dl
 10380f0:	add    BYTE PTR [eax],al
 10380f2:	add    DWORD PTR [eax],eax
 10380f4:	or     BYTE PTR [eax],al
 10380f6:	push   0x2d000005
 10380fb:	add    BYTE PTR [eax],dl
 10380fd:	adc    BYTE PTR [eax],al
 10380ff:	add    BYTE PTR [ecx],al
 1038101:	add    BYTE PTR [eax],ah
 1038103:	add    BYTE PTR [eax+0x4],ch
 1038106:	add    BYTE PTR [eax],al
 1038108:	add    BYTE PTR cs:[eax+0x41],dl
 103810c:	add    BYTE PTR [eax],al
 103810e:	add    DWORD PTR [eax],eax
 1038110:	add    al,0x0
 1038112:	and    BYTE PTR [eax],ah
 1038114:	add    BYTE PTR [eax],al
 1038116:	add    DWORD PTR [eax],eax
 1038118:	or     BYTE PTR [eax],al
 103811a:	test   al,0x8
 103811c:	add    BYTE PTR [eax],al
 103811e:	and    DWORD PTR [eax],eax
 1038120:	adc    BYTE PTR [eax],dl
 1038122:	add    BYTE PTR [eax],al
 1038124:	add    DWORD PTR [eax],eax
 1038126:	or     BYTE PTR [eax],al
 1038128:	push   0x22000005
 103812d:	add    BYTE PTR [eax],ah
 103812f:	and    BYTE PTR [eax],al
 1038131:	add    BYTE PTR [ecx],al
 1038133:	add    BYTE PTR [eax],ah
 1038135:	add    BYTE PTR [eax+0x23000010],ch
 103813b:	add    BYTE PTR [eax],dl
 103813d:	adc    BYTE PTR [eax],al
 103813f:	add    BYTE PTR [ecx],al
 1038141:	add    BYTE PTR [eax],ah
 1038143:	add    BYTE PTR [eax+0x4],ch
 1038146:	add    BYTE PTR [eax],al
 1038148:	and    al,0x0
 103814a:	push   eax
 103814b:	inc    ecx
 103814c:	add    BYTE PTR [eax],al
 103814e:	add    DWORD PTR [eax],eax
 1038150:	or     DWORD PTR [eax],eax
 1038152:	inc    eax
 1038153:	inc    eax
 1038154:	add    BYTE PTR [eax],al
 1038156:	add    DWORD PTR [eax],eax
 1038158:	or     BYTE PTR [eax],al
 103815a:	sub    BYTE PTR [esi],dl
 103815c:	add    BYTE PTR [eax],al
 103815e:	das    
 103815f:	add    BYTE PTR [eax],dh
 1038161:	xor    BYTE PTR [eax],al
 1038163:	add    BYTE PTR [ecx],al
 1038165:	add    BYTE PTR [eax],cl
 1038167:	add    BYTE PTR [eax+0x3000000e],ch
 103816d:	add    BYTE PTR [eax],ah
 103816f:	and    BYTE PTR [eax],al
 1038171:	add    BYTE PTR [ecx],al
 1038173:	add    BYTE PTR [eax],cl
 1038175:	add    BYTE PTR [eax+0x31000008],ch
 103817b:	add    BYTE PTR [eax],dl
 103817d:	adc    BYTE PTR [eax],al
 103817f:	add    BYTE PTR [ecx],al
 1038181:	add    BYTE PTR [eax],cl
 1038183:	add    BYTE PTR [eax+0x5],ch
 1038186:	add    BYTE PTR [eax],al
 1038188:	xor    al,BYTE PTR [eax]
 103818a:	add    BYTE PTR [eax],al
 103818c:	add    BYTE PTR [eax],al
 103818e:	add    DWORD PTR [eax],eax
 1038190:	and    BYTE PTR [eax],al
 1038192:	add    ecx,DWORD PTR [edx+0x330000]
 1038198:	inc    eax
 1038199:	inc    eax
 103819a:	add    BYTE PTR [eax],al
 103819c:	add    DWORD PTR [eax],eax
 103819e:	and    BYTE PTR [eax],al
 10381a0:	sub    BYTE PTR [edx+0x0],al
 10381a3:	add    BYTE PTR [eax+eax*1],dh
 10381a6:	xor    BYTE PTR [eax],dh
 10381a8:	add    BYTE PTR [eax],al
 10381aa:	add    DWORD PTR [eax],eax
 10381ac:	and    BYTE PTR [eax],al
 10381ae:	test   al,0x25
 10381b0:	add    BYTE PTR [eax],al
 10381b2:	xor    eax,0x202000
 10381b7:	add    BYTE PTR [ecx],al
 10381b9:	add    BYTE PTR [eax],ah
 10381bb:	add    BYTE PTR [eax+0x36000010],ch
 10381c1:	add    BYTE PTR [eax],dl
 10381c3:	adc    BYTE PTR [eax],al
 10381c5:	add    BYTE PTR [ecx],al
 10381c7:	add    BYTE PTR [eax],ah
 10381c9:	add    BYTE PTR [eax+0x4],ch
 10381cc:	add    BYTE PTR [eax],al
 10381ce:	aaa    
 10381cf:	add    BYTE PTR [eax],bh
 10381d1:	add    esi,DWORD PTR [eax+eax*1]
 10381d4:	add    BYTE PTR [eax],al
 10381d6:	push   esi
 10381d7:	add    BYTE PTR [ebx+0x0],dl
 10381da:	pop    edi
 10381db:	add    BYTE PTR [esi+0x0],dl
 10381de:	inc    ebp
 10381df:	add    BYTE PTR [edx+0x0],dl
 10381e2:	push   ebx
 10381e3:	add    BYTE PTR [ecx+0x0],cl
 10381e6:	dec    edi
 10381e7:	add    BYTE PTR [esi+0x0],cl
 10381ea:	pop    edi
 10381eb:	add    BYTE PTR [ecx+0x0],cl
 10381ee:	dec    esi
 10381ef:	add    BYTE PTR [esi+0x0],al
 10381f2:	dec    edi
 10381f3:	add    BYTE PTR [eax],al
 10381f5:	add    BYTE PTR [eax],al
 10381f7:	add    BYTE PTR [ebp+0xfeef04],bh
 10381fd:	add    BYTE PTR [ecx],al
 10381ff:	add    BYTE PTR [esi+0x0],ch
 1038202:	fild   DWORD PTR [edi]
 1038204:	cmp    al,0x0
 1038206:	xor    al,0x8
 1038208:	add    BYTE PTR [eax],al
 103820a:	or     eax,DWORD PTR [eax]
 103820c:	cmp    al,0x0
 103820e:	xor    al,0x8
 1038210:	aas    
 1038211:	add    BYTE PTR [eax],al
 1038213:	add    BYTE PTR [eax],al
 1038215:	add    BYTE PTR [eax],al
 1038217:	add    BYTE PTR [eax+eax*1],al
 103821a:	add    al,0x0
 103821c:	add    DWORD PTR [eax],eax
	...
 103822a:	add    BYTE PTR [eax],al
 103822c:	xchg   esi,eax
 103822d:	add    al,BYTE PTR [eax]
 103822f:	add    BYTE PTR [ecx],al
 1038231:	add    BYTE PTR [ebx+0x0],dl
 1038234:	je     0x1038236
 1038236:	jb     0x1038238
 1038238:	imul   eax,DWORD PTR [eax],0x67006e
 103823e:	inc    esi
 103823f:	add    BYTE PTR [ecx+0x0],ch
 1038242:	ins    BYTE PTR es:[edi],dx
 1038243:	add    BYTE PTR [ebp+0x0],ah
 1038246:	dec    ecx
 1038247:	add    BYTE PTR [esi+0x0],ch
 103824a:	data16 add BYTE PTR [edi+0x0],ch
 103824e:	add    BYTE PTR [eax],al
 1038250:	jb     0x1038254
 1038252:	add    BYTE PTR [eax],al
 1038254:	add    DWORD PTR [eax],eax
 1038256:	xor    BYTE PTR [eax],al
 1038258:	xor    al,0x0
 103825a:	xor    BYTE PTR [eax],al
 103825c:	cmp    DWORD PTR [eax],eax
 103825e:	xor    BYTE PTR [eax],al
 1038260:	xor    al,0x0
 1038262:	bound  eax,QWORD PTR [eax]
 1038264:	xor    BYTE PTR [eax],al
 1038266:	add    BYTE PTR [eax],al
 1038268:	dec    esp
 1038269:	add    BYTE PTR [esi],dl
 103826b:	add    BYTE PTR [ecx],al
 103826d:	add    BYTE PTR [ebx+0x0],al
 1038270:	outs   dx,DWORD PTR ds:[esi]
 1038271:	add    BYTE PTR [ebp+0x0],ch
 1038274:	jo     0x1038276
 1038276:	popa   
 1038277:	add    BYTE PTR [esi+0x0],ch
 103827a:	jns    0x103827c
 103827c:	dec    esi
 103827d:	add    BYTE PTR [ecx+0x0],ah
 1038280:	ins    DWORD PTR es:[edi],dx
 1038281:	add    BYTE PTR [ebp+0x0],ah
 1038284:	add    BYTE PTR [eax],al
 1038286:	add    BYTE PTR [eax],al
 1038288:	dec    ebp
 1038289:	add    BYTE PTR [ecx+0x0],ch
 103828c:	arpl   WORD PTR [eax],ax
 103828e:	jb     0x1038290
 1038290:	outs   dx,DWORD PTR ds:[esi]
 1038291:	add    BYTE PTR [ebx+0x0],dh
 1038294:	outs   dx,DWORD PTR ds:[esi]
 1038295:	add    BYTE PTR [esi+0x0],ah
 1038298:	je     0x103829a
 103829a:	and    BYTE PTR [eax],al
 103829c:	inc    ebx
 103829d:	add    BYTE PTR [edi+0x0],ch
 10382a0:	jb     0x10382a2
 10382a2:	jo     0x10382a4
 10382a4:	outs   dx,DWORD PTR ds:[esi]
 10382a5:	add    BYTE PTR [edx+0x0],dh
 10382a8:	popa   
 10382a9:	add    BYTE PTR [eax+eax*1+0x69],dh
 10382ad:	add    BYTE PTR [edi+0x0],ch
 10382b0:	outs   dx,BYTE PTR ds:[esi]
 10382b1:	add    BYTE PTR [eax],al
 10382b3:	add    BYTE PTR [edx+0x0],ah
 10382b6:	sbb    eax,0x46000100
 10382bb:	add    BYTE PTR [ecx+0x0],ch
 10382be:	ins    BYTE PTR es:[edi],dx
 10382bf:	add    BYTE PTR [ebp+0x0],ah
 10382c2:	inc    esp
 10382c3:	add    BYTE PTR [ebp+0x0],ah
 10382c6:	jae    0x10382c8
 10382c8:	arpl   WORD PTR [eax],ax
 10382ca:	jb     0x10382cc
 10382cc:	imul   eax,DWORD PTR [eax],0x740070
 10382d2:	imul   eax,DWORD PTR [eax],0x6e006f
 10382d8:	add    BYTE PTR [eax],al
 10382da:	add    BYTE PTR [eax],al
 10382dc:	push   ebx
 10382dd:	add    BYTE PTR [ecx+0x0],dl
 10382e0:	dec    esp
 10382e1:	add    BYTE PTR [eax],ah
 10382e3:	add    BYTE PTR [ebx+0x0],dl
 10382e6:	add    BYTE PTR gs:[edx+0x0],dh
 10382ea:	jbe    0x10382ec
 10382ec:	add    BYTE PTR gs:[edx+0x0],dh
 10382f0:	and    BYTE PTR [eax],al
 10382f2:	dec    ebp
 10382f3:	add    BYTE PTR [ecx+0x0],ah
 10382f6:	outs   dx,BYTE PTR ds:[esi]
 10382f7:	add    BYTE PTR [ecx+0x0],ah
 10382fa:	add    BYTE PTR [di+0x0],ah
 10382fe:	ins    DWORD PTR es:[edi],dx
 10382ff:	add    BYTE PTR [ebp+0x0],ah
 1038302:	outs   dx,BYTE PTR ds:[esi]
 1038303:	add    BYTE PTR [eax+eax*1+0x20],dh
 1038307:	add    BYTE PTR [ebx+0x0],dl
 103830a:	je     0x103830c
 103830c:	jne    0x103830e
 103830e:	add    BYTE PTR fs:[ecx+0x0],ch
 1038312:	outs   dx,DWORD PTR ds:[esi]
 1038313:	add    BYTE PTR [eax],al
 1038315:	add    BYTE PTR [eax],al
 1038317:	add    BYTE PTR [esi+0x0],al
 103831a:	adc    eax,DWORD PTR [eax]
 103831c:	add    DWORD PTR [eax],eax
 103831e:	inc    esi
 103831f:	add    BYTE PTR [ecx+0x0],ch
 1038322:	ins    BYTE PTR es:[edi],dx
 1038323:	add    BYTE PTR [ebp+0x0],ah
 1038326:	push   esi
 1038327:	add    BYTE PTR [ebp+0x0],ah
 103832a:	jb     0x103832c
 103832c:	jae    0x103832e
 103832e:	imul   eax,DWORD PTR [eax],0x6e006f
 1038334:	add    BYTE PTR [eax],al
 1038336:	add    BYTE PTR [eax],al
 1038338:	xor    al,BYTE PTR [eax]
 103833a:	xor    BYTE PTR [eax],al
 103833c:	xor    DWORD PTR [eax],eax
 103833e:	xor    DWORD PTR [eax],eax
 1038340:	add    BYTE PTR cs:[eax],dh
 1038343:	add    BYTE PTR [ecx],dh
 1038345:	add    BYTE PTR [ecx],dh
 1038347:	add    BYTE PTR [eax],dh
 1038349:	add    BYTE PTR [esi],ch
 103834b:	add    BYTE PTR [edx],dh
 103834d:	add    BYTE PTR [ecx],dh
 103834f:	add    BYTE PTR [eax],dh
 1038351:	add    BYTE PTR [eax],dh
 1038353:	add    BYTE PTR [esi],ch
 1038355:	add    BYTE PTR [eax],dh
 1038357:	add    BYTE PTR [esi],dh
 1038359:	add    BYTE PTR [eax],dh
 103835b:	add    BYTE PTR [eax],al
 103835d:	add    BYTE PTR [eax],al
 103835f:	add    BYTE PTR [edx],ch
 1038361:	add    BYTE PTR ds:0x49000100,al
 1038367:	add    BYTE PTR [esi+0x0],ch
 103836a:	je     0x103836c
 103836c:	add    BYTE PTR gs:[edx+0x0],dh
 1038370:	outs   dx,BYTE PTR ds:[esi]
 1038371:	add    BYTE PTR [ecx+0x0],ah
 1038374:	ins    BYTE PTR es:[edi],dx
 1038375:	add    BYTE PTR [esi+0x0],cl
 1038378:	popa   
 1038379:	add    BYTE PTR [ebp+0x0],ch
 103837c:	add    BYTE PTR gs:[eax],al
 103837f:	add    BYTE PTR [ebx+0x0],dh
 1038382:	jae    0x1038384
 1038384:	ins    DWORD PTR es:[edi],dx
 1038385:	add    BYTE PTR [ebx+0x0],dh
 1038388:	add    BYTE PTR [eax],al
 103838a:	add    BYTE PTR [eax],al
 103838c:	outs   dx,BYTE PTR ds:[esi]
 103838d:	add    BYTE PTR ds:0x4c000100,ah
 1038393:	add    BYTE PTR [ebp+0x0],ah
 1038396:	add    BYTE PTR [bx+di+0x0],ah
 103839a:	ins    BYTE PTR es:[edi],dx
 103839b:	add    BYTE PTR [ebx+0x0],al
 103839e:	outs   dx,DWORD PTR ds:[esi]
 103839f:	add    BYTE PTR [eax+0x0],dh
 10383a2:	jns    0x10383a4
 10383a4:	jb     0x10383a6
 10383a6:	imul   eax,DWORD PTR [eax],0x680067
 10383ac:	je     0x10383ae
 10383ae:	add    BYTE PTR [eax],al
 10383b0:	dec    ebp
 10383b1:	add    BYTE PTR [ecx+0x0],ch
 10383b4:	arpl   WORD PTR [eax],ax
 10383b6:	jb     0x10383b8
 10383b8:	outs   dx,DWORD PTR ds:[esi]
 10383b9:	add    BYTE PTR [ebx+0x0],dh
 10383bc:	outs   dx,DWORD PTR ds:[esi]
 10383bd:	add    BYTE PTR [esi+0x0],ah
 10383c0:	je     0x10383c2
 10383c2:	and    BYTE PTR [eax],al
 10383c4:	inc    ebx
 10383c5:	add    BYTE PTR [edi+0x0],ch
 10383c8:	jb     0x10383ca
 10383ca:	jo     0x10383cc
 10383cc:	add    BYTE PTR cs:[eax],ah
 10383cf:	add    BYTE PTR [ecx+0x0],al
 10383d2:	ins    BYTE PTR es:[edi],dx
 10383d3:	add    BYTE PTR [eax+eax*1+0x20],ch
 10383d7:	add    BYTE PTR [edx+0x0],dh
 10383da:	imul   eax,DWORD PTR [eax],0x680067
 10383e0:	je     0x10383e2
 10383e2:	jae    0x10383e4
 10383e4:	and    BYTE PTR [eax],al
 10383e6:	jb     0x10383e8
 10383e8:	add    BYTE PTR gs:[ebx+0x0],dh
 10383ec:	add    BYTE PTR gs:[edx+0x0],dh
 10383f0:	jbe    0x10383f2
 10383f2:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
 10383f7:	add    BYTE PTR [eax],al
 10383f9:	add    BYTE PTR [eax],al
 10383fb:	add    BYTE PTR [edx],bh
 10383fd:	add    BYTE PTR [ecx],cl
 10383ff:	add    BYTE PTR [ecx],al
 1038401:	add    BYTE PTR [edi+0x0],cl
 1038404:	jb     0x1038406
 1038406:	imul   eax,DWORD PTR [eax],0x690067
 103840c:	outs   dx,BYTE PTR ds:[esi]
 103840d:	add    BYTE PTR [ecx+0x0],ah
 1038410:	ins    BYTE PTR es:[edi],dx
 1038411:	add    BYTE PTR [esi+0x0],al
 1038414:	imul   eax,DWORD PTR [eax],0x65006c
 103841a:	outs   dx,BYTE PTR ds:[esi]
 103841b:	add    BYTE PTR [ecx+0x0],ah
 103841e:	ins    DWORD PTR es:[edi],dx
 103841f:	add    BYTE PTR [ebp+0x0],ah
 1038422:	add    BYTE PTR [eax],al
 1038424:	jae    0x1038426
 1038426:	jae    0x1038428
 1038428:	ins    DWORD PTR es:[edi],dx
 1038429:	add    BYTE PTR [ebx+0x0],dh
 103842c:	add    BYTE PTR cs:[ebp+0x0],ah
 1038430:	js     0x1038432
 1038432:	add    BYTE PTR gs:[eax],al
 1038435:	add    BYTE PTR [eax],al
 1038437:	add    BYTE PTR [edx+0x0],cl
 103843a:	adc    eax,0x50000100
 103843f:	add    BYTE PTR [edx+0x0],dh
 1038442:	outs   dx,DWORD PTR ds:[esi]
 1038443:	add    BYTE PTR [eax+eax*1+0x75],ah
 1038447:	add    BYTE PTR [ebx+0x0],ah
 103844a:	je     0x103844c
 103844c:	dec    esi
 103844d:	add    BYTE PTR [ecx+0x0],ah
 1038450:	ins    DWORD PTR es:[edi],dx
 1038451:	add    BYTE PTR [ebp+0x0],ah
 1038454:	add    BYTE PTR [eax],al
 1038456:	add    BYTE PTR [eax],al
 1038458:	dec    ebp
 1038459:	add    BYTE PTR [ecx+0x0],ch
 103845c:	arpl   WORD PTR [eax],ax
 103845e:	jb     0x1038460
 1038460:	outs   dx,DWORD PTR ds:[esi]
 1038461:	add    BYTE PTR [ebx+0x0],dh
 1038464:	outs   dx,DWORD PTR ds:[esi]
 1038465:	add    BYTE PTR [esi+0x0],ah
 1038468:	je     0x103846a
 103846a:	and    BYTE PTR [eax],al
 103846c:	push   ebx
 103846d:	add    BYTE PTR [ecx+0x0],dl
 1038470:	dec    esp
 1038471:	add    BYTE PTR [eax],ah
 1038473:	add    BYTE PTR [ebx+0x0],dl
 1038476:	add    BYTE PTR gs:[edx+0x0],dh
 103847a:	jbe    0x103847c
 103847c:	add    BYTE PTR gs:[edx+0x0],dh
 1038480:	add    BYTE PTR [eax],al
 1038482:	add    BYTE PTR [eax],al
 1038484:	add    BYTE PTR ds:0x50000100,cl
 103848b:	add    BYTE PTR [edx+0x0],dh
 103848e:	outs   dx,DWORD PTR ds:[esi]
 103848f:	add    BYTE PTR [eax+eax*1+0x75],ah
 1038493:	add    BYTE PTR [ebx+0x0],ah
 1038496:	je     0x1038498
 1038498:	push   esi
 1038499:	add    BYTE PTR [ebp+0x0],ah
 103849c:	jb     0x103849e
 103849e:	jae    0x10384a0
 10384a0:	imul   eax,DWORD PTR [eax],0x6e006f
 10384a6:	add    BYTE PTR [eax],al
 10384a8:	xor    DWORD PTR [eax],eax
 10384aa:	xor    DWORD PTR [eax],eax
 10384ac:	add    BYTE PTR cs:[eax],dh
 10384af:	add    BYTE PTR [esi],ch
 10384b1:	add    BYTE PTR [edx],dh
 10384b3:	add    BYTE PTR [ecx],dh
 10384b5:	add    BYTE PTR [eax],dh
 10384b7:	add    BYTE PTR [eax],dh
 10384b9:	add    BYTE PTR [esi],ch
 10384bb:	add    BYTE PTR [esi],dh
 10384bd:	add    BYTE PTR [eax],dh
 10384bf:	add    BYTE PTR [eax],al
 10384c1:	add    BYTE PTR [eax],al
 10384c3:	add    BYTE PTR [eax+eax*1+0x0],al
 10384c7:	add    BYTE PTR [ecx],al
 10384c9:	add    BYTE PTR [esi+0x0],dl
 10384cc:	popa   
 10384cd:	add    BYTE PTR [edx+0x0],dh
 10384d0:	inc    esi
 10384d1:	add    BYTE PTR [ecx+0x0],ch
 10384d4:	ins    BYTE PTR es:[edi],dx
 10384d5:	add    BYTE PTR [ebp+0x0],ah
 10384d8:	dec    ecx
 10384d9:	add    BYTE PTR [esi+0x0],ch
 10384dc:	data16 add BYTE PTR [edi+0x0],ch
 10384e0:	add    BYTE PTR [eax],al
 10384e2:	add    BYTE PTR [eax],al
 10384e4:	and    al,0x0
 10384e6:	add    al,0x0
 10384e8:	add    BYTE PTR [eax],al
 10384ea:	push   esp
 10384eb:	add    BYTE PTR [edx+0x0],dh
 10384ee:	popa   
 10384ef:	add    BYTE PTR [esi+0x0],ch
 10384f2:	jae    0x10384f4
 10384f4:	ins    BYTE PTR es:[edi],dx
 10384f5:	add    BYTE PTR [ecx+0x0],ah
 10384f8:	je     0x10384fa
 10384fa:	imul   eax,DWORD PTR [eax],0x6e006f
 1038500:	add    BYTE PTR [eax],al
 1038502:	add    BYTE PTR [eax],al
 1038504:	or     DWORD PTR [eax+esi*4],eax
 1038507:	add    al,0x3c
 1038509:	popa   
 103850a:	jae    0x103857f
 103850c:	gs ins DWORD PTR es:[edi],dx
 103850e:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
 1038512:	js     0x1038581
 1038514:	ins    BYTE PTR es:[edi],dx
 1038515:	outs   dx,BYTE PTR ds:[esi]
 1038516:	jae    0x1038555
 1038518:	and    dh,BYTE PTR [ebp+0x72]
 103851b:	outs   dx,BYTE PTR ds:[esi]
 103851c:	cmp    dh,BYTE PTR [ebx+0x63]
 103851f:	push   0x73616d65
 1038524:	sub    eax,0x7263696d
 1038529:	outs   dx,DWORD PTR ds:[esi]
 103852a:	jae    0x103859b
 103852c:	data16 je 0x103855c
 103852f:	arpl   WORD PTR [edi+0x6d],bp
 1038532:	cmp    ah,BYTE PTR [ecx+0x73]
 1038535:	ins    DWORD PTR es:[edi],dx
 1038536:	cs jbe 0x103856a
 1038539:	and    ah,BYTE PTR [eax]
 103853b:	ins    DWORD PTR es:[edi],dx
 103853c:	popa   
 103853d:	outs   dx,BYTE PTR ds:[esi]
 103853e:	imul   esp,DWORD PTR [esi+0x65],0x65567473
 1038545:	jb     0x10385ba
 1038547:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
 103854e:	xor    BYTE PTR [edx],ah
 1038550:	and    BYTE PTR [eax+0x6d],bh
 1038553:	ins    BYTE PTR es:[edi],dx
 1038554:	outs   dx,BYTE PTR ds:[esi]
 1038555:	jae    0x1038591
 1038557:	popa   
 1038558:	jae    0x10385c7
 103855a:	jbe    0x103858f
 103855c:	cmp    eax,0x6e727522
 1038561:	cmp    dh,BYTE PTR [ebx+0x63]
 1038564:	push   0x73616d65
 1038569:	sub    eax,0x7263696d
 103856e:	outs   dx,DWORD PTR ds:[esi]
 103856f:	jae    0x10385e0
 1038571:	data16 je 0x10385a1
 1038574:	arpl   WORD PTR [edi+0x6d],bp
 1038577:	cmp    ah,BYTE PTR [ecx+0x73]
 103857a:	ins    DWORD PTR es:[edi],dx
 103857b:	cs jbe 0x10385b1
 103857e:	and    bh,BYTE PTR [esi]
 1038580:	cmp    al,0x64
 1038582:	gs jo  0x10385ea
 1038585:	outs   dx,BYTE PTR ds:[esi]
 1038586:	fs outs dx,BYTE PTR gs:[esi]
 1038589:	arpl   WORD PTR [ecx+0x3e],di
 103858c:	cmp    al,0x64
 103858e:	gs jo  0x10385f6
 1038591:	outs   dx,BYTE PTR ds:[esi]
 1038592:	fs outs dx,BYTE PTR gs:[esi]
 1038595:	je     0x10385d8
 1038597:	jae    0x103860c
 1038599:	gs ins DWORD PTR es:[edi],dx
 103859b:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
 103859f:	cmp    al,0x61
 10385a1:	jae    0x1038616
 10385a3:	gs ins DWORD PTR es:[edi],dx
 10385a5:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
 10385a9:	fs outs dx,BYTE PTR gs:[esi]
 10385ac:	je     0x1038617
 10385ae:	je     0x1038629
 10385b0:	and    BYTE PTR [ecx+edi*2+0x70],dh
 10385b4:	gs cmp eax,0x6e697722
 10385ba:	xor    esi,DWORD PTR [edx]
 10385bc:	and    ah,BYTE PTR [eax]
 10385be:	outs   dx,BYTE PTR ds:[esi]
 10385bf:	popa   
 10385c0:	ins    DWORD PTR es:[edi],dx
 10385c1:	gs cmp eax,0x63694d22
 10385c7:	jb     0x1038638
 10385c9:	jae    0x103863a
 10385cb:	data16 je 0x10385fc
 10385ce:	push   edi
 10385cf:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
 10385d6:	inc    ebx
 10385d7:	outs   dx,DWORD PTR ds:[esi]
 10385d8:	ins    DWORD PTR es:[edi],dx
 10385d9:	ins    DWORD PTR es:[edi],dx
 10385da:	outs   dx,DWORD PTR ds:[esi]
 10385db:	outs   dx,BYTE PTR ds:[esi]
 10385dc:	sub    eax,0x746e6f43
 10385e1:	jb     0x1038652
 10385e3:	ins    BYTE PTR es:[edi],dx
 10385e4:	jae    0x1038608
 10385e6:	and    BYTE PTR [esi+0x65],dh
 10385e9:	jb     0x103865e
 10385eb:	imul   ebp,DWORD PTR [edi+0x6e],0x2e36223d
 10385f2:	xor    BYTE PTR [esi],ch
 10385f4:	xor    BYTE PTR [esi],ch
 10385f6:	xor    BYTE PTR [edx],ah
 10385f8:	and    BYTE PTR [eax+0x72],dh
 10385fb:	outs   dx,DWORD PTR ds:[esi]
 10385fc:	arpl   WORD PTR [ebp+0x73],sp
 10385ff:	jae    0x1038670
 1038601:	jb     0x1038644
 1038603:	jb     0x1038668
 1038605:	push   0x63657469
 103860a:	je     0x1038681
 103860c:	jb     0x1038673
 103860e:	cmp    eax,0x36385822
 1038613:	and    ah,BYTE PTR [eax]
 1038615:	jo     0x103868c
 1038617:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
 103861b:	dec    ebx
 103861c:	gs jns 0x1038673
 103861f:	outs   dx,DWORD PTR ds:[esi]
 1038620:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
 1038624:	and    dh,BYTE PTR [esi]
 1038626:	xor    eax,0x36623539
 103862b:	xor    al,0x31
 103862d:	xor    al,0x34
 103862f:	arpl   WORD PTR [ebx+0x66],sp
 1038632:	xor    DWORD PTR [esi+eiz*2+0x22],esp
 1038636:	and    BYTE PTR [ecx+eiz*2+0x6e],ch
 103863a:	addr16 jne 0x103869e
 103863d:	addr16 gs cmp eax,0x3e222a22
 1038644:	cmp    al,0x2f
 1038646:	popa   
 1038647:	jae    0x10386bc
 1038649:	gs ins DWORD PTR es:[edi],dx
 103864b:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
 103864f:	fs outs dx,BYTE PTR gs:[esi]
 1038652:	je     0x10386bd
 1038654:	je     0x10386cf
 1038656:	ds cmp al,0x2f
 1038659:	fs gs jo 0x10386c2
 103865d:	outs   dx,BYTE PTR ds:[esi]
 103865e:	fs outs dx,BYTE PTR gs:[esi]
 1038661:	je     0x10386a4
 1038663:	jae    0x10386d8
 1038665:	gs ins DWORD PTR es:[edi],dx
 1038667:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
 103866b:	cmp    al,0x2f
 103866d:	fs gs jo 0x10386d6
 1038671:	outs   dx,BYTE PTR ds:[esi]
 1038672:	fs outs dx,BYTE PTR gs:[esi]
 1038675:	arpl   WORD PTR [ecx+0x3e],di
 1038678:	cmp    al,0x64
 103867a:	gs jo  0x10386e2
 103867d:	outs   dx,BYTE PTR ds:[esi]
 103867e:	fs outs dx,BYTE PTR gs:[esi]
 1038681:	arpl   WORD PTR [ecx+0x3e],di
 1038684:	cmp    al,0x64
 1038686:	gs jo  0x10386ee
 1038689:	outs   dx,BYTE PTR ds:[esi]
 103868a:	fs outs dx,BYTE PTR gs:[esi]
 103868d:	je     0x10386d0
 103868f:	jae    0x1038704
 1038691:	gs ins DWORD PTR es:[edi],dx
 1038693:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
 1038697:	cmp    al,0x61
 1038699:	jae    0x103870e
 103869b:	gs ins DWORD PTR es:[edi],dx
 103869d:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
 10386a1:	fs outs dx,BYTE PTR gs:[esi]
 10386a4:	je     0x103870f
 10386a6:	je     0x1038721
 10386a8:	and    BYTE PTR [ecx+edi*2+0x70],dh
 10386ac:	gs cmp eax,0x6e697722
 10386b2:	xor    esi,DWORD PTR [edx]
 10386b4:	and    ah,BYTE PTR [eax]
 10386b6:	outs   dx,BYTE PTR ds:[esi]
 10386b7:	popa   
 10386b8:	ins    DWORD PTR es:[edi],dx
 10386b9:	gs cmp eax,0x62656422
 10386bf:	jne    0x1038728
 10386c1:	addr16 gs jb 0x1038735
 10386c5:	jb     0x1038736
 10386c7:	js     0x1038742
 10386c9:	cs fs ins BYTE PTR es:[edi],dx
 10386cc:	ins    BYTE PTR es:[edi],dx
 10386cd:	and    ah,BYTE PTR [eax]
 10386cf:	jo     0x1038743
 10386d1:	outs   dx,DWORD PTR ds:[esi]
 10386d2:	arpl   WORD PTR [ebp+0x73],sp
 10386d5:	jae    0x1038746
 10386d7:	jb     0x103871a
 10386d9:	jb     0x103873e
 10386db:	push   0x63657469
 10386e0:	je     0x1038757
 10386e2:	jb     0x1038749
 10386e4:	cmp    eax,0x36385822
 10386e9:	and    ah,BYTE PTR [eax]
 10386eb:	jbe    0x1038752
 10386ed:	jb     0x1038762
 10386ef:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
 10386f6:	xor    BYTE PTR [esi],ch
 10386f8:	xor    BYTE PTR [esi],ch
 10386fa:	xor    BYTE PTR [edx],ah
 10386fc:	ds cmp al,0x2f
 10386ff:	popa   
 1038700:	jae    0x1038775
 1038702:	gs ins DWORD PTR es:[edi],dx
 1038704:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
 1038708:	fs outs dx,BYTE PTR gs:[esi]
 103870b:	je     0x1038776
 103870d:	je     0x1038788
 103870f:	ds cmp al,0x2f
 1038712:	fs gs jo 0x103877b
 1038716:	outs   dx,BYTE PTR ds:[esi]
 1038717:	fs outs dx,BYTE PTR gs:[esi]
 103871a:	je     0x103875d
 103871c:	jae    0x1038791
 103871e:	gs ins DWORD PTR es:[edi],dx
 1038720:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
 1038724:	cmp    al,0x2f
 1038726:	fs gs jo 0x103878f
 103872a:	outs   dx,BYTE PTR ds:[esi]
 103872b:	fs outs dx,BYTE PTR gs:[esi]
 103872e:	arpl   WORD PTR [ecx+0x3e],di
 1038731:	cmp    al,0x74
 1038733:	jb     0x10387aa
 1038735:	jae    0x10387ab
 1038737:	dec    ecx
 1038738:	outs   dx,BYTE PTR ds:[esi]
 1038739:	outs   dx,WORD PTR ds:[esi]
 103873b:	and    BYTE PTR [eax+0x6d],bh
 103873e:	ins    BYTE PTR es:[edi],dx
 103873f:	outs   dx,BYTE PTR ds:[esi]
 1038740:	jae    0x103877f
 1038742:	and    dh,BYTE PTR [ebp+0x72]
 1038745:	outs   dx,BYTE PTR ds:[esi]
 1038746:	cmp    dh,BYTE PTR [ebx+0x63]
 1038749:	push   0x73616d65
 103874e:	sub    eax,0x7263696d
 1038753:	outs   dx,DWORD PTR ds:[esi]
 1038754:	jae    0x10387c5
 1038756:	data16 je 0x1038786
 1038759:	arpl   WORD PTR [edi+0x6d],bp
 103875c:	cmp    ah,BYTE PTR [ecx+0x73]
 103875f:	ins    DWORD PTR es:[edi],dx
 1038760:	cs jbe 0x1038796
 1038763:	and    bh,BYTE PTR [esi]
 1038765:	cmp    al,0x73
 1038767:	arpl   WORD PTR gs:[ebp+0x72],si
 103876b:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x7165723c
 1038773:	jne    0x10387da
 1038775:	jae    0x10387eb
 1038777:	gs fs push eax
 103877a:	jb     0x10387e5
 103877c:	jbe    0x10387e7
 103877e:	ins    BYTE PTR es:[edi],dx
 103877f:	gs addr16 gs jae 0x10387c2
 1038784:	cmp    al,0x72
 1038786:	gs jno 0x10387fe
 1038789:	gs jae 0x1038800
 103878c:	gs fs inc ebp
 103878f:	js     0x10387f6
 1038791:	arpl   WORD PTR [ebp+0x74],si
 1038794:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
 103879b:	ins    BYTE PTR es:[edi],dx
 103879c:	and    BYTE PTR [ebp+eiz*2+0x76],ch
 10387a0:	gs ins BYTE PTR es:[edi],dx
 10387a2:	cmp    eax,0x49736122
 10387a7:	outs   dx,BYTE PTR ds:[esi]
 10387a8:	jbe    0x1038819
 10387aa:	imul   esp,DWORD PTR [ebp+0x72],0x22
 10387ae:	and    BYTE PTR [ebp+0x69],dh
 10387b1:	inc    ecx
 10387b2:	arpl   WORD PTR [ebx+0x65],sp
 10387b5:	jae    0x103882a
 10387b7:	cmp    eax,0x6c616622
 10387bc:	jae    0x1038823
 10387be:	and    bh,BYTE PTR [esi]
 10387c0:	cmp    al,0x2f
 10387c2:	jb     0x1038829
 10387c4:	jno    0x103883b
 10387c6:	gs jae 0x103883d
 10387c9:	gs fs inc ebp
 10387cc:	js     0x1038833
 10387ce:	arpl   WORD PTR [ebp+0x74],si
 10387d1:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
 10387d8:	ins    BYTE PTR es:[edi],dx
 10387d9:	ds cmp al,0x2f
 10387dc:	jb     0x1038843
 10387de:	jno    0x1038855
 10387e0:	gs jae 0x1038857
 10387e3:	gs fs push eax
 10387e6:	jb     0x1038851
 10387e8:	jbe    0x1038853
 10387ea:	ins    BYTE PTR es:[edi],dx
 10387eb:	gs addr16 gs jae 0x103882e
 10387f0:	cmp    al,0x2f
 10387f2:	jae    0x1038859
 10387f4:	arpl   WORD PTR [ebp+0x72],si
 10387f7:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x72742f3c
 10387ff:	jne    0x1038874
 1038801:	je     0x103884c
 1038803:	outs   dx,BYTE PTR ds:[esi]
 1038804:	outs   dx,WORD PTR ds:[esi]
 1038806:	ds cmp al,0x61
 1038809:	jae    0x1038878
 103880b:	jbe    0x1038840
 103880d:	cmp    ah,BYTE PTR [ecx+0x70]
 1038810:	jo     0x103887e
 1038812:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
 1038819:	ds or  eax,0x2020200a
 103881f:	and    BYTE PTR [ecx+eiz*2],bh
 1038822:	jae    0x1038891
 1038824:	jbe    0x1038859
 1038826:	cmp    dh,BYTE PTR [edi+0x69]
 1038829:	outs   dx,BYTE PTR ds:[esi]
 103882a:	outs   dx,DWORD PTR fs:[esi]
 103882c:	ja     0x10388a1
 103882e:	push   ebx
 103882f:	gs je  0x10388a6
 1038832:	imul   ebp,DWORD PTR [esi+0x67],0x6d782073
 1038839:	ins    BYTE PTR es:[edi],dx
 103883a:	outs   dx,BYTE PTR ds:[esi]
 103883b:	jae    0x103887a
 103883d:	and    ch,BYTE PTR [eax+0x74]
 1038840:	je     0x10388b2
 1038842:	cmp    ch,BYTE PTR [edi]
 1038844:	das    
 1038845:	jae    0x10388aa
 1038847:	push   0x73616d65
 103884c:	cs ins DWORD PTR es:[edi],dx
 103884e:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
 1038855:	je     0x1038885
 1038857:	arpl   WORD PTR [edi+0x6d],bp
 103885a:	das    
 103885b:	push   ebx
 103885c:	dec    ebp
 103885d:	dec    ecx
 103885e:	das    
 103885f:	xor    dh,BYTE PTR [eax]
 1038861:	xor    BYTE PTR ds:0x6e69572f,dh
 1038867:	outs   dx,DWORD PTR fs:[esi]
 1038869:	ja     0x10388de
 103886b:	push   ebx
 103886c:	gs je  0x10388e3
 103886f:	imul   ebp,DWORD PTR [esi+0x67],0xd3e2273
 1038876:	or     ah,BYTE PTR [eax]
 1038878:	and    BYTE PTR [eax],ah
 103887a:	and    BYTE PTR [eax],ah
 103887c:	and    BYTE PTR [esp+eiz*2],bh
 103887f:	jo     0x10388ea
 1038881:	inc    ecx
 1038882:	ja     0x10388e5
 1038884:	jb     0x10388eb
 1038886:	ds je  0x10388fb
 1038889:	jne    0x10388f0
 103888b:	cmp    al,0x2f
 103888d:	fs jo  0x10388f9
 1038890:	inc    ecx
 1038891:	ja     0x10388f4
 1038893:	jb     0x10388fa
 1038895:	ds or  eax,0x2020200a
 103889b:	and    BYTE PTR [edi+ebp*1],bh
 103889e:	popa   
 103889f:	jae    0x103890e
 10388a1:	jbe    0x10388d6
 10388a3:	cmp    dh,BYTE PTR [edi+0x69]
 10388a6:	outs   dx,BYTE PTR ds:[esi]
 10388a7:	outs   dx,DWORD PTR fs:[esi]
 10388a9:	ja     0x103891e
 10388ab:	push   ebx
 10388ac:	gs je  0x1038923
 10388af:	imul   ebp,DWORD PTR [esi+0x67],0xa0d3e73
 10388b6:	and    BYTE PTR [eax],ah
 10388b8:	cmp    al,0x2f
 10388ba:	popa   
 10388bb:	jae    0x103892a
 10388bd:	jbe    0x10388f2
 10388bf:	cmp    ah,BYTE PTR [ecx+0x70]
 10388c2:	jo     0x1038930
 10388c4:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
 10388cb:	ds cmp al,0x2f
 10388ce:	popa   
 10388cf:	jae    0x1038944
 10388d1:	gs ins DWORD PTR es:[edi],dx
 10388d3:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
 10388d7:	push   eax

Disassembly of section .reloc:

01039000 <.reloc>:
 1039000:	add    BYTE PTR [eax],dl
 1039002:	add    BYTE PTR [eax],al
 1039004:	pop    esp
 1039005:	add    BYTE PTR [eax],al
 1039007:	add    al,bh
 1039009:	xor    esp,edi
 103900b:	xor    DWORD PTR [eax],eax
 103900d:	xor    al,BYTE PTR [edx+esi*1]
 1039010:	or     BYTE PTR [edx],dh
 1039012:	adc    al,0x32
 1039014:	sbb    BYTE PTR [edx],dh
 1039016:	cmp    al,0x32
 1039018:	inc    eax
 1039019:	xor    al,BYTE PTR [edx+esi*1+0x48]
 103901d:	xor    cl,BYTE PTR [edx+esi*1+0x50]
 1039021:	xor    dl,BYTE PTR [edx+esi*1+0x58]
 1039025:	xor    bh,BYTE PTR [ecx+edi*1+0x39c439c0]
 103902c:	sar    BYTE PTR [edx],0xc4
 103902f:	cmp    cl,al
 1039031:	cmp    cl,ah
 1039033:	cmp    al,BYTE PTR [eax]
 1039035:	cmp    eax,DWORD PTR [ebx+edi*1]
 1039038:	or     BYTE PTR [ebx],bh
 103903a:	or     al,0x3b
 103903c:	adc    BYTE PTR [ebx],bh
 103903e:	adc    al,0x3b
 1039040:	sbb    BYTE PTR [ebx],bh
 1039042:	sbb    al,0x3b
 1039044:	and    BYTE PTR [ebx],bh
 1039046:	and    al,0x3b
 1039048:	sub    BYTE PTR [ebx],bh
 103904a:	lods   al,BYTE PTR ds:[esi]
 103904b:	ds mov al,0x3e
 103904e:	sub    BYTE PTR [edi],bh
 1039050:	sub    al,0x3f
 1039052:	cmp    al,0x3f
 1039054:	inc    eax
 1039055:	aas    
 1039056:	dec    eax
 1039057:	aas    
 1039058:	pusha  
 1039059:	aas    
 103905a:	jmp    0x103909b
 103905c:	add    BYTE PTR [eax],ah
 103905e:	add    BYTE PTR [eax],al
 1039060:	mov    WORD PTR [eax],es
 1039062:	add    BYTE PTR [eax],al
 1039064:	into   
 1039065:	xor    ah,ah
 1039067:	xor    dl,bh
 1039069:	xor    BYTE PTR [eax],dl
 103906b:	xor    DWORD PTR [esi],esp
 103906d:	xor    DWORD PTR [ecx+esi*1],edi
 1039070:	push   edx
 1039071:	xor    DWORD PTR [eax+0x31],ebp
 1039074:	jle    0x10390a7
 1039076:	xchg   esp,eax
 1039077:	xor    DWORD PTR [edx-0x2cce3fcf],ebp
 103907d:	xor    DWORD PTR [ecx],ebx
 103907f:	xor    ah,BYTE PTR [esi]
 1039081:	xor    dh,BYTE PTR [ebx]
 1039083:	xor    al,BYTE PTR [eax+0x32]
 1039086:	dec    ebp
 1039087:	xor    dh,BYTE PTR [edi-0x25cd2cce]
 103908d:	xor    bl,bh
 103908f:	xor    ah,ch
 1039091:	xor    bl,BYTE PTR [esp+esi*1]
 1039094:	dec    ecx
 1039095:	xor    al,0xce
 1039097:	xor    al,0xdc
 1039099:	xor    al,0xee
 103909b:	xor    al,0x3d
 103909d:	xor    eax,0x35a03577
 10390a2:	(bad)  
 10390a3:	cmp    ch,ch
 10390a5:	cmp    BYTE PTR [ecx],dl
 10390a7:	cmp    esp,DWORD PTR [eax]
 10390a9:	cmp    esp,DWORD PTR [ebp+0x3b]
 10390ac:	leave  
 10390ad:	cmp    ecx,esi
 10390af:	cmp    edx,DWORD PTR [ebx-0x3dc24ec3]
 10390b5:	cmp    eax,0x3df73de1
 10390ba:	add    edi,DWORD PTR [esi]
 10390bc:	adc    BYTE PTR [esi],bh
 10390be:	sub    BYTE PTR [esi],bh
 10390c0:	aaa    
 10390c1:	ds inc esp
 10390c3:	ds pop ecx
 10390c5:	imul   edi,DWORD PTR ds:[esi],0x3ea83e7b
 10390cc:	mov    ah,0x3e
 10390ce:	mov    edi,0xf63ec73e
 10390d3:	ds push ss
 10390d5:	aas    
 10390d6:	daa    
 10390d7:	aas    
 10390d8:	aas    
 10390d9:	aas    
 10390da:	jae    0x103911b
 10390dc:	mov    esp,0xea3fcc3f
 10390e1:	aas    
 10390e2:	cmc    
 10390e3:	aas    
 10390e4:	cld    
 10390e5:	aas    
 10390e6:	add    BYTE PTR [eax],al
 10390e8:	add    BYTE PTR [eax],dh
 10390ea:	add    BYTE PTR [eax],al
 10390ec:	lods   al,BYTE PTR ds:[esi]
 10390ed:	add    BYTE PTR [eax],al
 10390ef:	add    BYTE PTR [eax+esi*1],dh
 10390f2:	pop    edi
 10390f3:	xor    BYTE PTR [esi+0x30],ch
 10390f6:	jg     0x1039128
 10390f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10390f9:	xor    bh,cl
 10390fb:	xor    BYTE PTR [ecx+esi*1],al
 10390fe:	sbb    BYTE PTR [ecx],dh
 1039100:	xor    BYTE PTR [ecx],0x9a
 1039103:	xor    DWORD PTR [eax-0x4fce56cf],esp
 1039109:	xor    ecx,ebx
 103910b:	xor    DWORD PTR ds:0xd7325e32,edx
 1039111:	xor    cl,BYTE PTR [edx]
 1039113:	xor    eax,DWORD PTR [ebx]
 1039115:	xor    al,0x2b
 1039117:	xor    al,0x48
 1039119:	xor    al,0xa5
 103911b:	xor    al,0xb3
 103911d:	xor    al,0xbd
 103911f:	xor    al,0xcf
 1039121:	xor    al,0xe2
 1039123:	xor    al,0xec
 1039125:	xor    al,0x6
 1039127:	xor    eax,0x35203516
 103912c:	inc    ebx
 103912d:	xor    eax,0x355d3555
 1039132:	je     0x1039169
 1039134:	mov    ah,0x35
 1039136:	les    esi,FWORD PTR ds:0x362435de
 103913c:	bound  esi,QWORD PTR [esi]
 103913e:	jl     0x1039176
 1039140:	mov    ?,WORD PTR [esi]
 1039142:	mov    dh,0x36
 1039144:	loop   0x103917c
 1039146:	hlt    
 1039147:	ss push eax
 1039149:	aaa    
 103914a:	fwait
 103914b:	aaa    
 103914c:	mov    ch,0x37
 103914e:	retf   0xd337
 1039151:	aaa    
 1039152:	sub    edi,DWORD PTR [ecx]
 1039154:	arpl   WORD PTR [ecx],di
 1039156:	mov    bh,BYTE PTR [ecx]
 1039158:	ret    
 1039159:	cmp    edi,edx
 103915b:	cmp    edx,esi
 103915d:	cmp    DWORD PTR [esi+0x3a],esp
 1039160:	jne    0x103919c
 1039162:	mov    ah,0x3a
 1039164:	mov    ebp,0xea3ada3a
 1039169:	cmp    cl,BYTE PTR [ebx+edi*1]
 103916c:	and    bh,BYTE PTR [ebx]
 103916e:	dec    edi
 103916f:	cmp    ebp,DWORD PTR [ecx+0x3b]
 1039172:	jge    0x10391af
 1039174:	xchg   edx,eax
 1039175:	cmp    esi,edx
 1039177:	cmp    eax,DWORD PTR [esp+edi*1+0x56]
 103917b:	cmp    al,0x6d
 103917d:	cmp    al,0x9b
 103917f:	cmp    al,0xb9
 1039181:	cmp    al,0x3d
 1039183:	cmp    eax,0x3df13d85
 1039188:	dec    eax
 1039189:	fnstsw WORD PTR ds:[esi]
 103918c:	hlt    
 103918d:	ds cli 
 103918f:	ds dec edx
 1039191:	aas    
 1039192:	add    BYTE PTR [eax],al
 1039194:	add    BYTE PTR [eax+0x0],al
 1039197:	add    BYTE PTR [eax],dl
 1039199:	add    DWORD PTR [eax],eax
 103919b:	add    BYTE PTR [ebx],dh
 103919d:	xor    BYTE PTR [ecx],bh
 103919f:	xor    BYTE PTR [edx+0x30],dh
 10391a2:	mov    ah,0x30
 10391a4:	jmp    0x1b30:0xfe30f530
 10391ab:	xor    DWORD PTR [ebp+0x31],esp
 10391ae:	jns    0x10391e1
 10391b0:	nop
 10391b1:	xor    al,bl
 10391b3:	xor    ah,BYTE PTR [esi+0x2833fd33]
 10391b9:	xor    al,0x30
 10391bb:	xor    al,0x88
 10391bd:	xor    al,0x65
 10391bf:	xor    eax,0x3588357a
 10391c4:	xchg   esi,eax
 10391c5:	xor    eax,0x35cb35b9
 10391ca:	shl    DWORD PTR ds:0x35e135da,1
 10391d0:	cld    
 10391d1:	xor    eax,0x36a63615
 10391d6:	xor    al,0x38
 10391d8:	cmp    BYTE PTR ds:[ebp+0x38],al
 10391dc:	dec    ebx
 10391dd:	cmp    BYTE PTR [eax+0x38],dl
 10391e0:	push   ebp
 10391e1:	cmp    BYTE PTR [edx+0x38],bl
 10391e4:	pop    edi
 10391e5:	cmp    BYTE PTR [ebp+0x38],ah
 10391e8:	ins    DWORD PTR es:[edi],dx
 10391e9:	cmp    BYTE PTR [esi-0x5fc765c8],al
 10391ef:	cmp    BYTE PTR [ebp-0x35c73ec8],ch
 10391f5:	cmp    ch,ah
 10391f7:	cmp    bh,ch
 10391f9:	cmp    BYTE PTR [edx],al
 10391fb:	cmp    DWORD PTR [ecx+edi*1],ecx
 10391fe:	adc    DWORD PTR [ecx],edi
 1039200:	push   ss
 1039201:	cmp    DWORD PTR [eax],edi
 1039203:	cmp    DWORD PTR ds:0x4b394639,edi
 1039209:	cmp    DWORD PTR [eax+0x39],ebx
 103920c:	imul   edi,DWORD PTR [ecx],0x3976396f
 1039212:	mov    bh,BYTE PTR [ecx]
 1039214:	(bad)  
 1039215:	cmp    edx,ecx
 1039217:	cmp    esp,edx
 1039219:	cmp    edx,ebx
 103921b:	cmp    ebx,esp
 103921d:	cmp    esp,edi
 103921f:	cmp    DWORD PTR [edi],esp
 1039221:	cmp    ch,BYTE PTR [edi]
 1039223:	cmp    bh,BYTE PTR [eax]
 1039225:	cmp    bh,BYTE PTR [esi]
 1039227:	cmp    al,BYTE PTR [esi+0x3a]
 103922a:	push   edx
 103922b:	cmp    ch,BYTE PTR [ecx+0x3a]
 103922e:	je     0x103926a
 1039230:	jp     0x103926c
 1039232:	mov    WORD PTR [edx],?
 1039234:	xchg   esp,eax
 1039235:	cmp    bl,BYTE PTR [edi-0x4ec554c6]
 103923b:	cmp    bh,BYTE PTR [edx-0x3ac53fc6]
 1039241:	cmp    cl,dl
 1039243:	cmp    cl,bh
 1039245:	cmp    dl,dh
 1039247:	cmp    bl,ah
 1039249:	cmp    ch,dh
 103924b:	cmp    dh,dh
 103924d:	cmp    bh,ah
 103924f:	cmp    cl,BYTE PTR [eax]
 1039251:	cmp    edx,DWORD PTR [ebx]
 1039253:	cmp    esi,DWORD PTR [edx]
 1039255:	cmp    edi,DWORD PTR [esi]
 1039257:	cmp    ecx,DWORD PTR [edx+0x3b]
 103925a:	push   esi
 103925b:	cmp    esp,DWORD PTR [edx+0x3b]
 103925e:	ins    DWORD PTR es:[edi],dx
 103925f:	cmp    eax,DWORD PTR [edx-0x24c45cc5]
 1039265:	cmp    edx,DWORD PTR [esi]
 1039267:	cmp    al,0x51
 1039269:	cmp    al,0xba
 103926b:	cmp    al,0xc6
 103926d:	cmp    al,0xdf
 103926f:	cmp    al,0x22
 1039271:	cmp    eax,0x3d723d2e
 1039276:	ret    
 1039277:	cmp    eax,0x3dd83dc9
 103927c:	in     al,0x3d
 103927e:	out    dx,eax
 103927f:	cmp    eax,0x3e083df5
 1039284:	sbb    eax,0x3e3e283e
 1039289:	ds push esi
 103928b:	ds pusha 
 103928d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 103928f:	lods   al,BYTE PTR ds:[esi]
 1039291:	sar    BYTE PTR ds:[esi],cl
 1039294:	xlat   BYTE PTR ds:[ebx]
 1039295:	ds cld 
 1039297:	ds test al,0x3f
 103929a:	lods   eax,DWORD PTR ds:[esi]
 103929b:	aas    
 103929c:	mov    edi,0xf13fdd3f
 10392a1:	aas    
 10392a2:	idiv   DWORD PTR [edi]
 10392a4:	add    BYTE PTR [eax+0x0],dl
 10392a7:	add    BYTE PTR [eax],al
 10392a9:	add    DWORD PTR [eax],eax
 10392ab:	add    BYTE PTR [eax+esi*1+0x70],ah
 10392af:	xor    BYTE PTR [ecx-0xfcf61d0],al
 10392b5:	xor    ch,dh
 10392b7:	xor    BYTE PTR [esi+0x31],cl
 10392ba:	jno    0x10392ed
 10392bc:	jle    0x10392ef
 10392be:	mov    dh,BYTE PTR [ecx]
 10392c0:	xchg   edx,eax
 10392c1:	xor    DWORD PTR [edx-0x30ce59cf],ebx
 10392c7:	xor    edi,edx
 10392c9:	xor    ecx,esi
 10392cb:	xor    edi,esi
 10392cd:	xor    ebp,edi
 10392cf:	xor    DWORD PTR [ebx],eax
 10392d1:	xor    cl,BYTE PTR [ecx]
 10392d3:	xor    cl,BYTE PTR [edi]
 10392d5:	xor    dl,BYTE PTR [esi]
 10392d7:	xor    bl,BYTE PTR ds:0x2b322432
 10392dd:	xor    dh,BYTE PTR [edx]
 10392df:	xor    bh,BYTE PTR [ecx]
 10392e1:	xor    al,BYTE PTR [eax+0x32]
 10392e4:	dec    eax
 10392e5:	xor    dl,BYTE PTR [eax+0x32]
 10392e8:	pop    eax
 10392e9:	xor    ah,BYTE PTR [edx+esi*1+0x6d]
 10392ed:	xor    dh,BYTE PTR [edx+0x32]
 10392f0:	js     0x1039324
 10392f2:	xor    BYTE PTR [edx],0x8b
 10392f5:	xor    dl,BYTE PTR [esi-0x58cd5dce]
 10392fb:	xor    dh,BYTE PTR [edi-0x3dcd43ce]
 1039301:	xor    cl,al
 1039303:	xor    bl,dh
 1039305:	xor    ah,ch
 1039307:	xor    dh,bl
 1039309:	xor    dl,BYTE PTR [esi+0x33]
 103930c:	mov    esi,0xd633ca33
 1039311:	xor    esp,edx
 1039313:	xor    ebp,esi
 1039315:	xor    edi,edx
 1039317:	xor    eax,DWORD PTR [esi]
 1039319:	xor    al,0x12
 103931b:	xor    al,0x1e
 103931d:	xor    al,0x30
 103931f:	xor    al,0x3a
 1039321:	xor    al,0xb2
 1039323:	xor    al,0xcf
 1039325:	xor    al,0xde
 1039327:	xor    al,0xf7
 1039329:	xor    al,0x19
 103932b:	xor    eax,0x35533534
 1039330:	pop    edx
 1039331:	xor    eax,0x362b361a
 1039336:	inc    esp
 1039337:	ss mov ss:0x336bf36,ax
 103933f:	cmp    BYTE PTR [eax],bl
 1039341:	cmp    BYTE PTR ds:0x58383938,ah
 1039347:	cmp    BYTE PTR [ebp+0x38],bl
 103934a:	outs   dx,DWORD PTR ds:[esi]
 103934b:	cmp    BYTE PTR [edx],al
 103934d:	cmp    DWORD PTR [edi],esi
 103934f:	cmp    DWORD PTR [ecx+edi*1+0x61],ebx
 1039353:	cmp    DWORD PTR [edi+0x39],esp
 1039356:	outs   dx,BYTE PTR ds:[esi]
 1039357:	cmp    DWORD PTR [ecx+0x39],edi
 103935a:	jle    0x1039395
 103935c:	test   BYTE PTR [ecx],bh
 103935e:	mov    edi,DWORD PTR [ecx]
 1039360:	fstp   TBYTE PTR [ecx]
 1039362:	push   ss
 1039363:	cmp    bl,BYTE PTR ds:0x423a3b3a
 1039369:	cmp    ch,BYTE PTR [ebp+0x3a]
 103936c:	je     0x10393a8
 103936e:	pop    ss
 103936f:	cmp    esi,DWORD PTR ds:0x683b3c3b
 1039375:	cmp    ebp,DWORD PTR [esi+0x3b]
 1039378:	xchg   ebp,eax
 1039379:	cmp    ebx,DWORD PTR [ebx-0xcc42ec5]
 103937f:	cmp    ebp,DWORD PTR [esi]
 1039381:	cmp    al,0x35
 1039383:	cmp    al,0x53
 1039385:	cmp    al,0x5a
 1039387:	cmp    al,0x85
 1039389:	cmp    al,0x8c
 103938b:	cmp    al,0xae
 103938d:	cmp    al,0xb4
 103938f:	cmp    al,0x1a
 1039391:	and    DWORD PTR ds:[esi],edi
 1039394:	pop    eax
 1039395:	ds xchg ecx,eax
 1039397:	ds xchg edi,eax
 1039399:	ds ret 
 103939b:	ds retf 0xec3e
 103939f:	ds repz add BYTE PTR ds:[eax],al
 10393a4:	add    BYTE PTR [eax+0x0],ah
 10393a7:	add    BYTE PTR [eax],bl
 10393a9:	add    DWORD PTR [eax],eax
 10393ab:	add    dh,bl
 10393ad:	xor    edx,edi
 10393af:	xor    DWORD PTR [esi],edx
 10393b1:	xor    ch,BYTE PTR [ecx]
 10393b3:	xor    cl,BYTE PTR [ebp+0x32]
 10393b6:	ja     0x10393ea
 10393b8:	mov    eax,ds:0xda32bc32
 10393bd:	xor    al,BYTE PTR [ecx+0x33]
 10393c0:	mov    dh,BYTE PTR [ebx]
 10393c2:	ss xor al,0x3d
 10393c5:	xor    al,0x69
 10393c7:	xor    al,0x80
 10393c9:	xor    al,0x98
 10393cb:	xor    al,0xdb
 10393cd:	xor    al,0xe7
 10393cf:	xor    al,0xf8
 10393d1:	xor    al,0xf
 10393d3:	xor    eax,0x3567355b
 10393d8:	ins    DWORD PTR es:[edi],dx
 10393d9:	xor    eax,0x359a3584
 10393de:	mov    eax,ds:0xd935af35
 10393e3:	xor    eax,0x35fd35df
 10393e8:	pop    es
 10393e9:	adc    DWORD PTR ss:[esi],esi
 10393ec:	xor    esi,DWORD PTR [esi]
 10393ee:	cmp    BYTE PTR [esi],dh
 10393f0:	aas    
 10393f1:	ss dec esi
 10393f3:	ss pop ecx
 10393f5:	ss jl  0x103942e
 10393f8:	xor    BYTE PTR [esi],0xa1
 10393fb:	shl    DWORD PTR ss:[esi],0xca
 10393ff:	fnstenv ss:[esi]
 1039402:	out    0x36,eax
 1039404:	cmc    
 1039405:	add    esi,DWORD PTR ss:[edi]
 1039408:	adc    DWORD PTR [edi],esi
 103940a:	pop    ds
 103940b:	aaa    
 103940c:	sub    eax,0x8e378737
 1039411:	aaa    
 1039412:	or     edi,DWORD PTR [eax]
 1039414:	adc    al,0x38
 1039416:	daa    
 1039417:	cmp    BYTE PTR ds:0x5e384b38,dh
 103941d:	cmp    BYTE PTR [edx+0x38],dh
 1039420:	cmp    DWORD PTR [eax],0x38b538ae
 1039426:	sar    DWORD PTR [eax],1
 1039428:	fdivr  DWORD PTR [eax]
 103942a:	in     al,0x38
 103942c:	add    al,0x39
 103942e:	or     edi,DWORD PTR [ecx]
 1039430:	pop    ss
 1039431:	cmp    DWORD PTR [esi],esi
 1039433:	cmp    DWORD PTR [ebx+0x39],eax
 1039436:	push   edx
 1039437:	cmp    DWORD PTR [edx+0x2b39e439],esi
 103943d:	cmp    dh,BYTE PTR [edx]
 103943f:	cmp    al,BYTE PTR [esi+0x3a]
 1039442:	cmp    DWORD PTR [edx],0x3a8e3a88
 1039448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1039449:	cmp    ch,BYTE PTR [esi+0x53ac53a]
 103944f:	cmp    ecx,DWORD PTR [ebx+edi*1]
 1039452:	adc    al,0x3b
 1039454:	and    DWORD PTR [ebx],edi
 1039456:	sahf   
 1039457:	cmp    esp,DWORD PTR [ebp-0x28c44cc5]
 103945d:	cmp    esi,eax
 103945f:	cmp    ebx,DWORD PTR [esi]
 1039461:	cmp    al,0x4b
 1039463:	cmp    al,0x52
 1039465:	cmp    al,0x64
 1039467:	cmp    al,0x6b
 1039469:	cmp    al,0x91
 103946b:	cmp    al,0x9b
 103946d:	cmp    al,0xa2
 103946f:	cmp    al,0xab
 1039471:	cmp    al,0xb1
 1039473:	cmp    al,0xbb
 1039475:	cmp    al,0xc2
 1039477:	cmp    al,0xc8
 1039479:	cmp    al,0xd0
 103947b:	cmp    al,0xd7
 103947d:	cmp    al,0xe1
 103947f:	cmp    al,0xe8
 1039481:	cmp    al,0xee
 1039483:	cmp    al,0xf6
 1039485:	cmp    al,0xfd
 1039487:	cmp    al,0x7
 1039489:	cmp    eax,0x3d243d13
 103948e:	das    
 103948f:	cmp    eax,0x3d3b3d36
 1039494:	inc    eax
 1039495:	cmp    eax,0x3e0c3dcd
 103949a:	jge    0x10394da
 103949c:	scas   al,BYTE PTR es:[edi]
 103949d:	ds mov ebx,0xfa3edf3e
 10394a3:	ds push es
 10394a5:	aas    
 10394a6:	push   cs
 10394a7:	aas    
 10394a8:	cmp    DWORD PTR [edi],edi
 10394aa:	dec    ebx
 10394ab:	aas    
 10394ac:	pop    edi
 10394ad:	aas    
 10394ae:	ins    BYTE PTR es:[edi],dx
 10394af:	aas    
 10394b0:	jae    0x10394f1
 10394b2:	jl     0x10394f3
 10394b4:	cmp    DWORD PTR [edi],0x3fdd3fd1
 10394ba:	in     eax,0x3f
 10394bc:	add    BYTE PTR [eax+0x0],dh
 10394bf:	add    BYTE PTR [eax+0x1],ch
 10394c2:	add    BYTE PTR [eax],al
 10394c4:	wrmsr  
 10394c6:	sbb    al,0x30
 10394c8:	inc    esi
 10394c9:	xor    BYTE PTR [edx+0x30],dl
 10394cc:	pop    esi
 10394cd:	xor    BYTE PTR [ebx-0x1ccf44d0],dl
 10394d3:	xor    BYTE PTR [ebx+0x31],bl
 10394d6:	pushf  
 10394d7:	xor    DWORD PTR [edi-0x27ce3acf],ebp
 10394dd:	xor    esi,ebp
 10394df:	xor    DWORD PTR [ecx],eax
 10394e1:	xor    dl,BYTE PTR [edi]
 10394e3:	xor    bl,BYTE PTR [ebp+0x32]
 10394e6:	mov    ds:0xfb32c332,eax
 10394eb:	xor    cl,BYTE PTR [ebx+0x33]
 10394ee:	jae    0x1039523
 10394f0:	loop   0x1039525
 10394f2:	sbb    dh,BYTE PTR [edx+ebp*2]
 10394f5:	xor    al,0xc3
 10394f7:	xor    al,0xf1
 10394f9:	xor    al,0x11
 10394fb:	xor    eax,0x353a3524
 1039500:	push   0xa5359635
 1039505:	xor    eax,0x35c135af
 103950a:	(bad)  
 103950b:	xor    eax,0x35d035cc
 1039510:	aad    0x35
 1039512:	(bad)  ds:0x360335ed
 1039518:	push   cs
 1039519:	ss sbb eax,0x31362d36
 103951f:	ss cmp al,0x36
 1039522:	dec    eax
 1039523:	ss push 0x94367436
 1039529:	mov    al,ss:0xdc36c836
 103952f:	ss call 0x113a856b
 1039535:	aaa    
 1039536:	sbb    BYTE PTR [edi],dh
 1039538:	and    BYTE PTR [edi],dh
 103953a:	sub    BYTE PTR [edi],dh
 103953c:	xor    BYTE PTR [edi],dh
 103953e:	cmp    BYTE PTR [edi],dh
 1039540:	inc    eax
 1039541:	aaa    
 1039542:	dec    eax
 1039543:	aaa    
 1039544:	push   eax
 1039545:	aaa    
 1039546:	pop    eax
 1039547:	aaa    
 1039548:	pusha  
 1039549:	aaa    
 103954a:	js     0x1039583
 103954c:	xor    BYTE PTR [edi],0x88
 103954f:	aaa    
 1039550:	lods   al,BYTE PTR ds:[esi]
 1039551:	aaa    
 1039552:	mov    ah,0x37
 1039554:	mov    esp,0xe037d837
 1039559:	aaa    
 103955a:	in     al,dx
 103955b:	aaa    
 103955c:	or     al,0x38
 103955e:	sbb    BYTE PTR [eax],bh
 1039560:	cmp    BYTE PTR [eax],bh
 1039562:	inc    esp
 1039563:	cmp    BYTE PTR [eax+edi*1+0x70],ah
 1039567:	cmp    BYTE PTR [eax-0x5fc767c8],dl
 103956d:	cmp    BYTE PTR [eax-0x2bc74bc8],ch
 1039573:	cmp    ah,bl
 1039575:	cmp    ah,ah
 1039577:	cmp    ah,ch
 1039579:	cmp    al,bh
 103957b:	cmp    BYTE PTR [eax],ah
 103957d:	cmp    DWORD PTR [ecx+edi*1+0x50],eax
 1039581:	cmp    DWORD PTR [eax+0x39],ebx
 1039584:	jo     0x10395bf
 1039586:	js     0x10395c1
 1039588:	cmp    BYTE PTR [ecx],0x8c
 103958b:	cmp    DWORD PTR [ecx+edi*1+0x39d439c8],esi
 1039592:	fdivr  QWORD PTR [ecx]
 1039594:	cld    
 1039595:	cmp    DWORD PTR [edx+edi*1],eax
 1039598:	or     al,0x3a
 103959a:	adc    al,0x3a
 103959c:	sbb    al,0x3a
 103959e:	and    al,0x3a
 10395a0:	xor    al,0x3a
 10395a2:	inc    eax
 10395a3:	cmp    ch,BYTE PTR [eax+0x3a]
 10395a6:	jl     0x10395e2
 10395a8:	mov    BYTE PTR [edx],bh
 10395aa:	nop
 10395ab:	cmp    dh,BYTE PTR [eax-0x3fc547c6]
 10395b1:	cmp    cl,al
 10395b3:	cmp    dl,al
 10395b5:	cmp    bl,al
 10395b7:	cmp    dh,al
 10395b9:	cmp    al,BYTE PTR [ebx+edi*1]
 10395bc:	adc    BYTE PTR [ebx],bh
 10395be:	sbb    BYTE PTR [ebx],bh
 10395c0:	cmp    BYTE PTR [ebx],bh
 10395c2:	inc    eax
 10395c3:	cmp    ecx,DWORD PTR [eax+0x3b]
 10395c6:	pusha  
 10395c7:	cmp    esi,DWORD PTR [ebx+edi*1-0x80]
 10395cb:	cmp    ecx,DWORD PTR [eax-0x4fc457c5]
 10395d1:	cmp    edi,DWORD PTR [eax-0x37c43fc5]
 10395d7:	cmp    edx,eax
 10395d9:	cmp    ebp,eax
 10395db:	cmp    edi,esp
 10395dd:	cmp    ecx,DWORD PTR [eax]
 10395df:	cmp    al,0x10
 10395e1:	cmp    al,0x30
 10395e3:	cmp    al,0x38
 10395e5:	cmp    al,0x40
 10395e7:	cmp    al,0x48
 10395e9:	cmp    al,0x58
 10395eb:	cmp    al,0x64
 10395ed:	cmp    al,0x8c
 10395ef:	cmp    al,0xb0
 10395f1:	cmp    al,0xbc
 10395f3:	cmp    al,0xc4
 10395f5:	cmp    al,0xdc
 10395f7:	cmp    al,0xe8
 10395f9:	cmp    al,0x8
 10395fb:	cmp    eax,0x3d343d14
 1039600:	inc    eax
 1039601:	cmp    eax,0x3d683d60
 1039606:	jo     0x1039645
 1039608:	je     0x1039647
 103960a:	jl     0x1039649
 103960c:	nop
 103960d:	cmp    eax,0x3dac3d98
 1039612:	les    edi,FWORD PTR ds:0x3de83dc8
 1039618:	add    al,0x3e
 103961a:	or     BYTE PTR [esi],bh
 103961c:	and    al,0x3e
 103961e:	sub    BYTE PTR [esi],bh
 1039620:	dec    eax
 1039621:	ds push 0x90003e
 1039627:	add    BYTE PTR [eax],ah
 1039629:	add    BYTE PTR [eax],al
 103962b:	add    BYTE PTR [eax],al
 103962d:	xor    BYTE PTR [eax],ah
 103962f:	xor    BYTE PTR [eax+esi*1],ch
 1039632:	dec    eax
 1039633:	xor    BYTE PTR [eax+esi*1-0x58],ah
 1039637:	xor    BYTE PTR [eax+esi*1+0x30c430b0],ch
 103963e:	int3   
 103963f:	xor    ah,dl
 1039641:	xor    ah,bl
 1039643:	xor    BYTE PTR [eax],al
	...
