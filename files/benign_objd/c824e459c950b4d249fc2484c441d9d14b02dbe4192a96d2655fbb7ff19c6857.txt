
c824e459c950b4d249fc2484c441d9d14b02dbe4192a96d2655fbb7ff19c6857.exe:     file format pei-i386


Disassembly of section .text:

01001000 <.text>:
 1001000:	dec    eax
 1001001:	add    DWORD PTR [eax],0x815600
 1001007:	add    BYTE PTR [esi-0x7f],ah
 100100a:	add    BYTE PTR [eax],al
 100100c:	mov    edx,0xc8000086
 1001011:	xchg   BYTE PTR [eax],al
 1001013:	add    BYTE PTR [eax],al
 1001015:	add    BYTE PTR [eax],al
 1001017:	add    BYTE PTR [esi],ch
 1001019:	mov    DWORD PTR [eax],eax
 100101b:	add    BYTE PTR [ecx+ecx*4],bl
 100101e:	add    BYTE PTR [eax],al
 1001020:	fimul  DWORD PTR [ecx-0x76f00000]
 1001026:	add    BYTE PTR [eax],al
 1001028:	add    al,0x89
 100102a:	add    BYTE PTR [eax],al
 100102c:	test   BYTE PTR [eax-0x77160000],0x0
 1001033:	add    ah,bl
 1001035:	mov    BYTE PTR [eax],al
 1001037:	add    ah,al
 1001039:	mov    BYTE PTR [eax],al
 100103b:	add    BYTE PTR [eax+ecx*4-0x777c0000],bl
 1001042:	add    BYTE PTR [eax],al
 1001044:	ins    BYTE PTR es:[edi],dx
 1001045:	mov    BYTE PTR [eax],al
 1001047:	add    BYTE PTR [eax+ecx*4+0x0],bl
 100104b:	add    BYTE PTR [esi],dh
 100104d:	mov    BYTE PTR [eax],al
 100104f:	add    BYTE PTR [edx],bl
 1001051:	mov    BYTE PTR [eax],al
 1001053:	add    BYTE PTR [esi],al
 1001055:	mov    BYTE PTR [eax],al
 1001057:	add    dl,dh
 1001059:	xchg   DWORD PTR [eax],eax
 100105b:	add    al,bl
 100105d:	xchg   DWORD PTR [eax],eax
 100105f:	add    dl,al
 1001061:	xchg   DWORD PTR [eax],eax
 1001063:	add    BYTE PTR [edi+eax*4-0x78640000],ch
 100106a:	add    BYTE PTR [eax],al
 100106c:	add    BYTE PTR [edi-0x788e0000],0x0
 1001073:	add    BYTE PTR [edi+eax*4+0x0],dl
 1001077:	add    BYTE PTR [edi+eax*4+0x0],al
 100107b:	add    BYTE PTR [edx],dh
 100107d:	xchg   DWORD PTR [eax],eax
 100107f:	add    BYTE PTR [edi+eax*4],bl
 1001082:	add    BYTE PTR [eax],al
 1001084:	inc    BYTE PTR [esi-0x790a0000]
 100108a:	add    BYTE PTR [eax],al
 100108c:	loopne 0x1001014
 100108e:	add    BYTE PTR [eax],al
 1001090:	out    0x82,al
 1001092:	add    BYTE PTR [eax],al
 1001094:	(bad)  
 1001095:	add    BYTE PTR [eax],0x0
 1001098:	ret    0x82
 100109b:	add    BYTE PTR [edx+eax*4-0x7d6c0000],ch
 10010a2:	add    BYTE PTR [eax],al
 10010a4:	test   BYTE PTR [edx-0x7d8e0000],al
 10010aa:	add    BYTE PTR [eax],al
 10010ac:	pop    esi
 10010ad:	add    BYTE PTR [eax],0x0
 10010b0:	push   edx
 10010b1:	add    BYTE PTR [eax],0x0
 10010b4:	cmp    al,0x82
 10010b6:	add    BYTE PTR [eax],al
 10010b8:	sub    al,BYTE PTR [edx-0x7de60000]
 10010be:	add    BYTE PTR [eax],al
 10010c0:	add    BYTE PTR [edx-0x76b80000],al
 10010c6:	add    BYTE PTR [eax],al
 10010c8:	jmp    0x81:0xda000081
 10010cf:	add    al,cl
 10010d1:	add    DWORD PTR [eax],0x81b800
 10010d7:	add    BYTE PTR [esi-0x67ffff7f],ah
 10010dd:	add    DWORD PTR [eax],0x818800
 10010e3:	add    BYTE PTR [edx-0x78],cl
 10010e6:	add    BYTE PTR [eax],al
 10010e8:	pop    edx
 10010e9:	mov    DWORD PTR [eax],eax
 10010eb:	add    BYTE PTR [esi-0x77],ah
 10010ee:	add    BYTE PTR [eax],al
 10010f0:	jbe    0x100107b
 10010f2:	add    BYTE PTR [eax],al
 10010f4:	xchg   BYTE PTR [ecx-0x76340000],cl
 10010fa:	add    BYTE PTR [eax],al
 10010fc:	mov    al,0x89
 10010fe:	add    BYTE PTR [eax],al
 1001100:	xchg   esp,eax
 1001101:	mov    DWORD PTR [eax],eax
 1001103:	add    BYTE PTR [eax],al
 1001105:	add    BYTE PTR [eax],al
 1001107:	add    BYTE PTR [esi+eax*4-0x79a00000],cl
 100110e:	add    BYTE PTR [eax],al
 1001110:	add    BYTE PTR [eax],al
 1001112:	add    BYTE PTR [eax],al
 1001114:	sub    al,BYTE PTR [esi-0x79ec0000]
 100111a:	add    BYTE PTR [eax],al
 100111c:	add    al,0x86
 100111e:	add    BYTE PTR [eax],al
 1001120:	repnz test DWORD PTR [eax],eax
 1001123:	add    al,bl
 1001125:	test   DWORD PTR [eax],eax
 1001127:	add    dh,cl
 1001129:	test   DWORD PTR [eax],eax
 100112b:	add    dh,al
 100112d:	test   DWORD PTR [eax],eax
 100112f:	add    BYTE PTR [eax-0x65ffff7b],bh
 1001135:	test   DWORD PTR [eax],eax
 1001137:	add    BYTE PTR [edx-0x7b],bh
 100113a:	add    BYTE PTR [eax],al
 100113c:	jo     0x10010c3
 100113e:	add    BYTE PTR [eax],al
 1001140:	test   DWORD PTR fs:[eax],eax
 1001143:	add    BYTE PTR [eax-0x7b],dl
 1001146:	add    BYTE PTR [eax],al
 1001148:	cmp    al,BYTE PTR [ebp-0x7ad40000]
 100114e:	add    BYTE PTR [eax],al
 1001150:	and    BYTE PTR [ebp-0x7aea0000],al
 1001156:	add    BYTE PTR [eax],al
 1001158:	push   cs
 1001159:	test   DWORD PTR [eax],eax
 100115b:	add    BYTE PTR [eax],al
 100115d:	test   DWORD PTR [eax],eax
 100115f:	add    dl,dh
 1001161:	test   BYTE PTR [eax],al
 1001163:	add    dl,ch
 1001165:	test   BYTE PTR [eax],al
 1001167:	add    al,ah
 1001169:	test   BYTE PTR [eax],al
 100116b:	add    al,dl
 100116d:	test   BYTE PTR [eax],al
 100116f:	add    dl,al
 1001171:	test   BYTE PTR [eax],al
 1001173:	add    BYTE PTR [eax-0x4fffff7c],bh
 1001179:	test   BYTE PTR [eax],al
 100117b:	add    BYTE PTR [esp+eax*4-0x7b660000],ah
 1001182:	add    BYTE PTR [eax],al
 1001184:	jp     0x100110a
 1001186:	add    BYTE PTR [eax],al
 1001188:	pop    esi
 1001189:	test   BYTE PTR [eax],al
 100118b:	add    BYTE PTR [esp+eax*4],bh
 100118e:	add    BYTE PTR [eax],al
 1001190:	sbb    al,0x84
 1001192:	add    BYTE PTR [eax],al
 1001194:	push   cs
 1001195:	test   BYTE PTR [eax],al
 1001197:	add    BYTE PTR [eax],al
 1001199:	test   BYTE PTR [eax],al
 100119b:	add    al,bh
 100119d:	add    DWORD PTR [eax],0x0
 10011a0:	out    dx,al
 10011a1:	add    DWORD PTR [eax],0x0
 10011a4:	in     al,0x83
 10011a6:	add    BYTE PTR [eax],al
 10011a8:	into   
 10011a9:	add    DWORD PTR [eax],0x0
 10011ac:	mov    eax,0xa8000083
 10011b1:	add    DWORD PTR [eax],0x0
 10011b4:	cwde   
 10011b5:	add    DWORD PTR [eax],0x0
 10011b8:	mov    WORD PTR [ebx-0x7c7e0000],es
 10011be:	add    BYTE PTR [eax],al
 10011c0:	jbe    0x1001145
 10011c2:	add    BYTE PTR [eax],al
 10011c4:	push   0xffffff83
 10011c6:	add    BYTE PTR [eax],al
 10011c8:	pop    esi
 10011c9:	add    DWORD PTR [eax],0x0
 10011cc:	dec    esi
 10011cd:	add    DWORD PTR [eax],0x0
 10011d0:	add    DWORD PTR ds:[eax],0x0
 10011d4:	jmp    0x85:0xae000089
 10011db:	add    dl,bh
 10011dd:	mov    DWORD PTR [eax],eax
 10011df:	add    BYTE PTR [eax],al
 10011e1:	add    BYTE PTR [eax],al
 10011e3:	add    BYTE PTR [eax],bl
 10011e5:	add    DWORD PTR [eax],0x0
 10011e8:	or     al,BYTE PTR [ebx-0x7cda0000]
	...
 10011f6:	add    BYTE PTR [eax],al
 10011f8:	xor    ecx,DWORD PTR [eax+0x0]
 10011fb:	add    DWORD PTR [ebp+esi*2+0x75bf0100],esp
 1001202:	add    BYTE PTR [ecx],al
 1001204:	in     al,dx
 1001205:	jne    0x1001207
 1001207:	add    ebp,edi
 1001209:	jne    0x100120b
 100120b:	add    DWORD PTR [eax],eax
 100120d:	add    BYTE PTR [eax],al
 100120f:	add    BYTE PTR [eax],al
 1001211:	add    BYTE PTR [eax],al
 1001213:	add    BYTE PTR [ecx+0x4a],ah
 1001216:	add    BYTE PTR [ecx],al
 1001218:	ret    0x4d
 100121b:	add    DWORD PTR [eax],eax
 100121d:	add    BYTE PTR [eax],al
 100121f:	add    BYTE PTR [eax],al
 1001221:	add    BYTE PTR [eax],al
 1001223:	add    cl,bl
 1001225:	loop   0x100125c
 1001227:	dec    edi
 1001228:	add    BYTE PTR [eax],al
 100122a:	add    BYTE PTR [eax],al
 100122c:	add    al,BYTE PTR [eax]
 100122e:	add    BYTE PTR [eax],al
 1001230:	and    DWORD PTR [eax],eax
 1001232:	add    BYTE PTR [eax],al
 1001234:	mov    eax,0xb800001e
 1001239:	adc    al,BYTE PTR [eax]
 100123b:	add    BYTE PTR [edx+edx*1+0x0],bl
 100123f:	add    DWORD PTR [eax+0x12],esp
 1001242:	add    BYTE PTR [ecx],al
 1001244:	adc    al,BYTE PTR fs:[eax]
 1001247:	add    DWORD PTR [eax+0x12],ebp
 100124a:	add    BYTE PTR [ecx],al
 100124c:	ins    BYTE PTR es:[edi],dx
 100124d:	adc    al,BYTE PTR [eax]
 100124f:	add    DWORD PTR [edx+edx*1+0x0],esi
 1001253:	add    DWORD PTR [edx+edx*1+0x12a00100],ecx
 100125a:	add    BYTE PTR [ecx],al
 100125c:	push   ebx
 100125d:	add    BYTE PTR [eax],al
 100125f:	add    BYTE PTR [ebp+0x0],cl
 1001262:	add    BYTE PTR [eax],al
 1001264:	inc    esp
 1001265:	add    BYTE PTR [eax],al
 1001267:	add    BYTE PTR [edx+0x0],al
 100126a:	add    BYTE PTR [eax],al
 100126c:	push   esi
 100126d:	add    BYTE PTR [ecx+0x0],ah
 1001270:	ins    BYTE PTR es:[edi],dx
 1001271:	add    BYTE PTR [eax],al
 1001273:	add    BYTE PTR [esi+0x0],al
 1001276:	outs   dx,DWORD PTR ds:[esi]
 1001277:	add    BYTE PTR [edx+0x0],dh
 100127a:	arpl   WORD PTR [eax],ax
 100127c:	add    BYTE PTR gs:[edx+0x0],dl
 1001280:	add    BYTE PTR gs:[ebp+0x0],ch
 1001284:	outs   dx,DWORD PTR ds:[esi]
 1001285:	add    BYTE PTR [esi+0x0],dh
 1001288:	add    BYTE PTR gs:[eax],al
 100128b:	add    BYTE PTR [esi+0x0],cl
 100128e:	outs   dx,DWORD PTR ds:[esi]
 100128f:	add    BYTE PTR [edx+0x0],dl
 1001292:	add    BYTE PTR gs:[ebp+0x0],ch
 1001296:	outs   dx,DWORD PTR ds:[esi]
 1001297:	add    BYTE PTR [esi+0x0],dh
 100129a:	add    BYTE PTR gs:[eax],al
 100129d:	add    BYTE PTR [eax],al
 100129f:	add    BYTE PTR [eax+eax*1+0x65],al
 10012a3:	add    BYTE PTR [eax+eax*1+0x65],ch
 10012a7:	add    BYTE PTR [eax+eax*1+0x65],dh
 10012ab:	add    BYTE PTR [eax],al
 10012ad:	add    BYTE PTR [eax],al
 10012af:	add    bl,dh
 10012b1:	pop    ds
 10012b2:	inc    eax
 10012b3:	add    al,0xf
 10012b5:	mov    ebp,DWORD PTR ds:0x2aeb854d
 10012bb:	xor    eax,0x8b7a8642
 10012c0:	sub    BYTE PTR [esi-0x6e99e77a],ch
 10012c6:	pop    ecx
 10012c7:	inc    edi
 10012c8:	mov    ds,WORD PTR [esi]
 10012ca:	or     ch,al
 10012cc:	dec    ebp
 10012cd:	out    dx,al
 10012ce:	outs   dx,BYTE PTR ds:[esi]
 10012cf:	jl     0x100126a
 10012d1:	pushf  
 10012d2:	sbb    al,0x3e
 10012d4:	dec    esp
 10012d5:	adc    al,0xb6
 10012d7:	dec    esp
 10012d8:	mov    eax,0x48585dcd
 10012dd:	mov    ds:0x755a2249,al
 10012e2:	pop    eax
 10012e3:	inc    eax
 10012e4:	mov    esi,0xbc41c78f
 10012e9:	cdq    
 10012ea:	cmp    eax,0xba745cbf
 10012ef:	(bad)
 10012f4:	add    eax,0xa0435ffd
 10012f9:	fsubr  DWORD PTR ds:0xe5e1c8d5
 10012ff:	pop    edi
 1001300:	test   al,0xff
 1001302:	lods   al,BYTE PTR ds:[esi]
 1001303:	dec    edx
 1001304:	ins    DWORD PTR es:[edi],dx
 1001305:	pop    ss
 1001306:	lods   al,BYTE PTR ds:[esi]
 1001307:	dec    esi
 1001308:	mov    dl,0x42
 100130a:	inc    ebx
 100130b:	adc    ah,BYTE PTR [eax]
 100130d:	repnz imul edi,DWORD PTR [eax+eiz*4],0xfd51f03c
 1001315:	pop    ss
 1001316:	ror    DWORD PTR [eax-0x6f],0xdc
 100131a:	inc    esp
 100131b:	pop    ebx
 100131c:	(bad)  
 100131d:	imul   DWORD PTR [eax]
 100131f:	push   eax
 1001320:	push   ecx
 1001321:	sub    al,0xb8
 1001323:	pop    ebp
 1001324:	add    eax,0x9a3c258a
 1001329:	push   0xffffffdc
 100132b:	inc    esi
 100132c:	mov    dh,0x6a
 100132e:	and    eax,0x7b26ef82
 1001333:	push   0x4f2dc096
 1001338:	lahf   
 1001339:	mov    WORD PTR [edx+0x21a3adaf],gs
 100133f:	lods   al,BYTE PTR ds:[esi]
 1001340:	xchg   esp,eax
 1001341:	sbb    al,0xc
 1001343:	ins    DWORD PTR es:[edi],dx
 1001344:	dec    ecx
 1001345:	mov    bl,0x61
 1001347:	inc    edx
 1001348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1001349:	in     al,dx
 100134a:	mov    DWORD PTR ds:0x928709e4,eax
 1001350:	fs ins DWORD PTR es:[edi],dx
 1001352:	stos   BYTE PTR es:[edi],al
 1001353:	jo     0x10013ac
 1001355:	adc    edx,DWORD PTR [edx+0x46]
 1001358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1001359:	sbb    eax,0xb280d62b
 100135e:	imul   eax,DWORD PTR [esi-0x3a],0xf6744d9c
 1001365:	inc    edi
 1001366:	ror    BYTE PTR [ebx-0x80],cl
 1001369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 100136a:	xchg   esp,eax
 100136b:	es iret 
 100136d:	jmp    0x88e2:0x5ae9996d
 1001374:	push   ebp
 1001375:	jmp    0xb9945c44
 100137a:	or     BYTE PTR [ecx-0x429d7004],ah
 1001380:	inc    edi
 1001381:	jmp    0x1001322
 1001383:	mov    esi,DWORD PTR [ebx-0x6abb99ba]
 1001389:	cmp    edx,DWORD PTR [esi-0x7b]
 100138c:	mov    al,ds:0xb295b24e
 1001391:	jle    0x10013e3
 1001393:	ret    
 1001394:	adc    eax,0xbc4870b6
 1001399:	fist   DWORD PTR [eax]
 100139b:	cdq    
 100139c:	push   cs
 100139d:	in     eax,dx
 100139e:	or     al,0xc4
 10013a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10013a1:	cwde   
 10013a2:	int3   
 10013a3:	mov    al,0x4d
 10013a5:	into   
 10013a6:	aad    0x4b
 10013a8:	test   eax,0x6bd2ba22
 10013ad:	add    ecx,DWORD PTR [ecx+0xc6509bd]
 10013b3:	dec    edx
 10013b4:	nop
 10013b5:	mov    edi,0xeeab43da
 10013ba:	or     bh,BYTE PTR [edx-0xed87ac6]
 10013c0:	imul   bx,WORD PTR [edx-0x33],0xff89
 10013c5:	or     eax,0x56b34949
 10013ca:	ss sbb al,0xf0
 10013cd:	xlat   BYTE PTR ds:[ebx]
 10013ce:	inc    ebx
 10013cf:	jb     0x10013b4
 10013d1:	push   edi
 10013d2:	mov    al,ah
 10013d4:	jb     0x1001451
 10013d6:	push   ebp
 10013d7:	dec    ecx
 10013d8:	mov    ebx,0x567ce6c0
 10013dd:	fisttp WORD PTR [edx+0x44c1dd45]
 10013e3:	in     al,0x8e
 10013e5:	jl     0x100140d
 10013e7:	inc    ecx
 10013e8:	or     eax,0xbf632c39
 10013ee:	jmp    0x10013d3
 10013f0:	repz cdq 
 10013f2:	mov    edx,0x57341ea
 10013f7:	inc    ecx
 10013f8:	mov    bh,BYTE PTR [edi]
 10013fa:	sbb    al,0x4f
 10013fc:	cmp    DWORD PTR [ebp-0x3c],edx
 10013ff:	cld    
 1001400:	rol    BYTE PTR [eax-0x71c00a4f],0xce
 1001407:	inc    ebx
 1001408:	mov    ch,0xc1
 100140a:	es jnp 0x1001397
 100140d:	mov    bl,dl
 100140f:	int3   
 1001410:	call   0x3d17:0x22fe6969
 1001417:	dec    edx
 1001418:	xchg   ecx,eax
 1001419:	stos   DWORD PTR es:[edi],eax
 100141a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 100141b:	dec    eax
 100141c:	int    0xae
 100141e:	mov    dh,0x2a
 1001420:	lahf   
 1001421:	inc    ecx
 1001422:	or     DWORD PTR [ebp-0x1],esi
 1001425:	jl     0x1001427
 1001427:	inc    eax
 1001428:	and    BYTE PTR [ebp+0x1042e504],0x2f
 100142f:	push   edx
 1001430:	push   edi
 1001431:	pop    es
 1001432:	push   0x312c290b
 1001437:	inc    ebp
 1001438:	cmp    dl,0x53
 100143b:	pop    edx
 100143c:	push   ecx
 100143d:	js     0x10013e9
 100143f:	cwde   
 1001440:	loopne 0x10013f4
 1001442:	jbe    0x1001461
 1001444:	sbb    esi,ecx
 1001446:	rcl    BYTE PTR [ecx],cl
 1001448:	scas   eax,DWORD PTR es:[edi]
 1001449:	ret    
 100144a:	add    BYTE PTR [eax],dl
 100144c:	pop    edx
 100144d:	cdq    
 100144e:	xchg   ecx,eax
 100144f:	out    dx,eax
 1001450:	xor    eax,0xda2c298b
 1001455:	pop    es
 1001456:	icebp  
 1001457:	inc    ebp
 1001458:	xchg   esi,eax
 1001459:	mov    ds:0x1cd955be,eax
 100145e:	lea    edi,[edx+0x29]
 1001461:	xchg   ebp,eax
 1001462:	xor    DWORD PTR [esi],0xfffffff3
 1001465:	cmp    bh,dl
 1001467:	inc    edi
 1001468:	adc    DWORD PTR [esp+esi*8+0xe9ffaa3],0x3d9528d7
 1001473:	aas    
 1001474:	les    edi,FWORD PTR [edx+0x4781420e]
 100147a:	sub    DWORD PTR [ecx-0x3f3aff9d],ecx
 1001480:	add    bh,BYTE PTR [ebx-0x20]
 1001483:	inc    esp
 1001484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001485:	sub    ebx,edx
 1001487:	adc    DWORD PTR [eax+0x4fc00082],edi
 100148d:	jns    0x1001487
 100148f:	add    dh,BYTE PTR [edx+0x20]
 1001492:	ror    DWORD PTR [ecx-0x75],1
 1001495:	aaa    
 1001496:	cli    
 1001497:	dec    edi
 1001498:	mov    al,ds:0xb5e0409e
 100149d:	rcl    BYTE PTR [edi+0x5079c1cc],1
 10014a3:	dec    edx
 10014a4:	push   ecx
 10014a5:	test   DWORD PTR [esi],ebx
 10014a7:	dec    ebp
 10014a8:	xchg   edx,eax
 10014a9:	(bad)  
 10014aa:	cli    
 10014ab:	mov    bl,0x48
 10014ad:	adc    eax,0x1146bba9
 10014b2:	jns    0x10014fe
 10014b4:	in     al,0x19
 10014b6:	rcl    DWORD PTR [ecx],cl
 10014b8:	mov    eax,0x4fc0006b
 10014bd:	jns    0x10014b7
 10014bf:	add    dl,BYTE PTR [eax+0x7e]
 10014c2:	fwait
 10014c3:	dec    edx
 10014c4:	push   ss
 10014c5:	stos   BYTE PTR es:[edi],al
 10014c6:	rcl    BYTE PTR [ecx],1
 10014c8:	test   al,0xc5
 10014ca:	add    BYTE PTR [eax-0x2d5bde37],ah
 10014d0:	das    
 10014d1:	lds    edx,FWORD PTR [eax]
 10014d3:	push   eax
 10014d4:	stos   DWORD PTR es:[edi],eax
 10014d5:	inc    esp
 10014d6:	push   ecx
 10014d7:	inc    eax
 10014d8:	mov    ecx,fs
 10014da:	shr    DWORD PTR [eax+eiz*1-0x27],cl
 10014de:	mov    DWORD PTR [ebp+ecx*2+0x3d53544c],esi
 10014e5:	mov    al,0x9
 10014e7:	inc    edx
 10014e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10014e9:	rcr    cl,1
 10014eb:	fst    QWORD PTR [ebx]
 10014ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10014ee:	add    DWORD PTR [ebx+0x53544c4d],ebx
 10014f4:	clc    
 10014f5:	jecxz  0x1001497
 10014f7:	dec    edx
 10014f8:	adc    DWORD PTR [ebp+0x1168d8a],0x5e02394
 1001502:	sbb    BYTE PTR [eax-0x20],0x66
 1001506:	rcl    DWORD PTR [ecx],cl
 1001508:	xchg   BYTE PTR [eax],al
 100150a:	add    al,al
 100150c:	dec    edi
 100150d:	popa   
 100150e:	and    esi,DWORD PTR [ebx+0x5cb51d20]
 1001514:	push   ds
 1001515:	retf   0x4b7e
 1001518:	xchg   esp,eax
 1001519:	fxch   st(4)
 100151b:	ds ja  0x1001537
 100151e:	mov    ?,WORD PTR [edx-0x25]
 1001521:	mov    bl,0x56
 1001523:	pop    esi
 1001524:	fs jns 0x10014af
 1001527:	inc    ebp
 1001528:	lea    ecx,[ecx-0x2d]
 100152b:	push   edx
 100152c:	cmp    dh,BYTE PTR [edi-0x6df34643]
 1001532:	jg     0x1001598
 1001534:	xor    BYTE PTR [edx+0x5b],al
 1001537:	dec    esp
 1001538:	or     DWORD PTR ds:0x62795fb6,0xa
 100153f:	call   0x6993a599
 1001544:	loopne 0x100157e
 1001546:	pop    ss
 1001547:	dec    ebp
 1001548:	xchg   edx,eax
 1001549:	retf   
 100154a:	mov    DWORD PTR [ecx],ecx
 100154c:	jno    0x100155b
 100154e:	cmp    DWORD PTR [eax-0x53],0x56e87cf
 1001555:	ins    BYTE PTR es:[edi],dx
 1001556:	fisttp WORD PTR [edx-0x64]
 1001559:	xlat   BYTE PTR ds:[ebx]
 100155a:	cmp    edi,DWORD PTR [ecx+0x43]
 100155d:	xchg   DWORD PTR [ebx+0x7c],ebx
 1001560:	sub    ebp,DWORD PTR [eax-0x6c]
 1001563:	je     0x1001505
 1001565:	aaa    
 1001566:	rcl    BYTE PTR [ecx],cl
 1001568:	mov    ds:0x4fc00073,al
 100156d:	mov    ?,esp
 100156f:	(bad)  
 1001570:	jnp    0x10015b6
 1001572:	pop    ebp
 1001573:	jnp    0x1001587
 1001575:	or     ebp,edx
 1001577:	inc    ecx
 1001578:	test   al,0x4e
 100157a:	enter  0x322,0x44
 100157e:	and    dl,ah
 1001580:	or     BYTE PTR [ebx+0x48138756],dl
 1001586:	mov    al,ds:0xd7d09c40
 100158b:	mov    ds:0x3fca3808,eax
 1001590:	(bad)  
 1001591:	call   0x42e1:0x6b91a160
 1001598:	mov    edx,DWORD PTR [edx-0x346c7a94]
 100159e:	dec    edx
 100159f:	(bad)  
 10015a0:	int    0xb8
 10015a2:	mov    gs,WORD PTR [edx+0x11d07a51]
 10015a8:	xchg   edx,eax
 10015a9:	ret    
 10015aa:	add    BYTE PTR [eax+0x458c13c9],ah
 10015b0:	mov    bl,0xa0
 10015b2:	pushf  
 10015b3:	mov    esp,0x449abb4f
 10015b8:	xchg   esi,eax
 10015b9:	jl     0x10015e4
 10015bb:	test   al,0xfa
 10015bd:	jecxz  0x10015df
 10015bf:	xchg   bh,bl
 10015c1:	sbb    eax,0x9d2bbeb0
 10015c6:	pop    ebx
 10015c7:	inc    ebx
 10015c8:	test   eax,0x7e5576e7
 10015cd:	sub    ebp,DWORD PTR [ebx+0x52]
 10015d0:	push   edi
 10015d1:	dec    edx
 10015d2:	(bad)  
 10015d4:	sti    
 10015d5:	inc    edi
 10015d6:	rcl    BYTE PTR [ecx],cl
 10015d8:	and    edi,0x0
 10015db:	ror    BYTE PTR [edi-0x67],0x2
 10015df:	ror    DWORD PTR [esi],0xee
 10015e2:	and    cl,bl
 10015e4:	jb     0x1001626
 10015e6:	out    0x4a,eax
 10015e8:	xchg   esi,eax
 10015e9:	loop   0x100157b
 10015eb:	cld    
 10015ec:	iret   
 10015ed:	xchg   DWORD PTR [ebp+0x77dc8a44],edx
 10015f3:	rcr    BYTE PTR [esi],cl
 10015f5:	stos   BYTE PTR es:[edi],al
 10015f6:	add    eax,DWORD PTR [ebx-0x74]
 10015f9:	add    ebx,DWORD PTR [eax+ebx*2]
 10015fc:	fistp  DWORD PTR [eax]
 10015fe:	jmp    0xa0b5678e
 1001603:	fisub  DWORD PTR [edi+eax*8]
 1001606:	rcl    BYTE PTR [ecx],1
 1001608:	scas   al,BYTE PTR es:[edi]
 1001609:	pop    ds
 100160a:	add    BYTE PTR [eax-0x3c00f037],ah
 1001610:	xchg   esp,eax
 1001611:	mov    ecx,0xef71e269
 1001616:	loopne 0x1001664
 1001618:	mov    ecx,ebp
 100161a:	pop    eax
 100161b:	sbb    al,0x21
 100161d:	jae    0x1001691
 100161f:	call   0xe8578229
 1001624:	je     0x100163e
 1001626:	or     al,0x45
 1001628:	sahf   
 1001629:	cwde   
 100162a:	iret   
 100162b:	cmp    cl,BYTE PTR [eax]
 100162d:	xchg   edi,eax
 100162e:	mov    al,ds:0xb06f4169
 1001633:	call   0x12d28339
 1001638:	stos   BYTE PTR es:[edi],al
 1001639:	jge    0x100163b
 100163b:	ror    BYTE PTR [edi-0x67],0x3
 100163f:	inc    ebx
 1001640:	mov    esp,0x2fed8979
 1001645:	mov    al,0xa9
 1001647:	dec    ebp
 1001648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 1001649:	shl    DWORD PTR [di],cl
 100164c:	ins    BYTE PTR es:[edi],dx
 100164d:	and    cl,BYTE PTR ss:[edx]
 1001650:	ss mov dl,0x84
 1001653:	repz test eax,0xbc401bb4
 1001659:	pop    eax
 100165a:	xor    DWORD PTR [esi],eax
 100165c:	jecxz  0x100160a
 100165e:	mov    ds:0xe7e720ec,eax
 1001663:	cmc    
 1001664:	add    DWORD PTR [ecx+edx*8],edx
 1001667:	adc    DWORD PTR [eax-0x7ffffc5],ecx
 100166d:	jne    0x10016e8
 100166f:	shl    BYTE PTR [edi+0x50],cl
 1001672:	dec    esp
 1001673:	test   DWORD PTR [eax-0x28],0xc9804630
 100167a:	mov    al,0xe
 100167c:	push   0x8c0ccaa1
 1001681:	cmp    edi,DWORD PTR [edi]
 1001683:	loop   0x10016d1
 1001685:	sahf   
 1001686:	or     DWORD PTR [edi-0x5f],0x5c
 100168a:	jle    0x1001695
 100168c:	add    eax,0xa8280aeb
 1001691:	ret    0x8ff5
 1001694:	mov    edx,0x8e47175e
 1001699:	loope  0x10016e1
 100169b:	mov    dh,0x42
 100169d:	jge    0x100162e
 100169f:	repz xchg ebx,eax
 10016a1:	outs   dx,BYTE PTR ds:[esi]
 10016a2:	mov    bl,0x96
 10016a4:	sbb    al,0xf7
 10016a6:	pusha  
 10016a7:	inc    ecx
 10016a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10016a9:	jmp    0x632f:0x1d80ae26
	...
 10016c0:	ins    DWORD PTR es:[edi],dx
 10016c1:	add    BYTE PTR [eax+eax*1+0x69],ah
 10016c5:	add    BYTE PTR [eax],al
 10016c7:	add    BYTE PTR [ebp+0x0],ch
 10016ca:	add    BYTE PTR fs:[ecx+0x0],ch
 10016ce:	je     0x10016d0
 10016d0:	popa   
 10016d1:	add    BYTE PTR [edx+0x0],ah
 10016d4:	jae    0x10016d6
 10016d6:	add    BYTE PTR [eax],al
 10016d8:	jae    0x10016da
 10016da:	add    BYTE PTR gs:[eax+eax*1+0x75],dh
 10016df:	add    BYTE PTR [eax+0x0],dh
 10016e2:	add    BYTE PTR [eax],al
 10016e4:	add    BYTE PTR fs:[eax+eax*1+0x65],ah
 10016e9:	add    BYTE PTR [eax],al
 10016eb:	add    BYTE PTR [ebx+0x0],dh
 10016ee:	add    BYTE PTR gs:[eax+eax*1+0x66],ch
 10016f3:	add    BYTE PTR [edx+0x0],dh
 10016f6:	add    BYTE PTR gs:[edi+0x0],ah
 10016fa:	add    BYTE PTR [eax],al
 10016fc:	jb     0x10016fe
 10016fe:	add    BYTE PTR gs:[edi+0x0],ah
 1001702:	jae    0x1001704
 1001704:	add    BYTE PTR gs:[edx+0x0],dh
 1001708:	jbe    0x100170a
 100170a:	add    BYTE PTR gs:[edx+0x0],dh
 100170e:	add    BYTE PTR [eax],al
 1001710:	jne    0x1001712
 1001712:	outs   dx,BYTE PTR ds:[esi]
 1001713:	add    BYTE PTR [edx+0x0],dh
 1001716:	add    BYTE PTR gs:[edi+0x0],ah
 100171a:	jae    0x100171c
 100171c:	add    BYTE PTR gs:[edx+0x0],dh
 1001720:	jbe    0x1001722
 1001722:	add    BYTE PTR gs:[edx+0x0],dh
 1001726:	add    BYTE PTR [eax],al
 1001728:	add    BYTE PTR gs:[ebp+0x0],ch
 100172c:	bound  eax,QWORD PTR [eax]
 100172e:	add    BYTE PTR gs:[eax+eax*1+0x64],ah
 1001733:	add    BYTE PTR [ecx+0x0],ch
 1001736:	outs   dx,BYTE PTR ds:[esi]
 1001737:	add    BYTE PTR [edi+0x0],ah
 100173a:	add    BYTE PTR [eax],al
 100173c:	dec    esp
 100173d:	add    BYTE PTR [ebx+0x0],al
 1001740:	dec    ecx
 1001741:	add    BYTE PTR [eax+eax*1+0x0],al
 1001745:	add    BYTE PTR [eax],al
 1001747:	add    BYTE PTR [eax+eax*1+0x0],ch
 100174b:	add    BYTE PTR [edi],bh
 100174d:	add    BYTE PTR [eax],al
 100174f:	add    BYTE PTR [edx+0x0],dh
 1001752:	je     0x1001754
 1001754:	add    BYTE PTR [eax],al
 1001756:	add    BYTE PTR [eax],al
 1001758:	outs   dx,BYTE PTR ds:[esi]
 1001759:	add    BYTE PTR [edi+0x0],ch
 100175c:	jae    0x100175e
 100175e:	jo     0x1001760
 1001760:	ins    BYTE PTR es:[edi],dx
 1001761:	add    BYTE PTR [ecx+0x0],ah
 1001764:	jae    0x1001766
 1001766:	push   0x0
 100176b:	add    BYTE PTR [eax+eax*1+0x0],ah
 100176f:	add    BYTE PTR [ebp+0x0],al
 1001772:	add    BYTE PTR [eax],al
 1001774:	push   ebp
 1001775:	add    BYTE PTR [eax],al
 1001777:	add    BYTE PTR [eax+0x0],dl
 100177a:	add    BYTE PTR [eax],al
 100177c:	add    BYTE PTR [eax],al
 100177e:	add    BYTE PTR [eax],al
 1001780:	push   ebx
 1001781:	add    BYTE PTR [edi+0x0],ch
 1001784:	data16 add BYTE PTR [eax+eax*1+0x77],dh
 1001789:	add    BYTE PTR [ecx+0x0],ah
 100178c:	jb     0x100178e
 100178e:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
 1001793:	add    BYTE PTR [ecx+0x0],ch
 1001796:	arpl   WORD PTR [eax],ax
 1001798:	jb     0x100179a
 100179a:	outs   dx,DWORD PTR ds:[esi]
 100179b:	add    BYTE PTR [ebx+0x0],dh
 100179e:	outs   dx,DWORD PTR ds:[esi]
 100179f:	add    BYTE PTR [esi+0x0],ah
 10017a2:	je     0x10017a4
 10017a4:	pop    esp
 10017a5:	add    BYTE PTR [ebx+0x0],dl
 10017a8:	push   ecx
 10017a9:	add    BYTE PTR [eax+eax*1+0x20],cl
 10017ad:	add    BYTE PTR [ebx+0x0],dl
 10017b0:	add    BYTE PTR gs:[edx+0x0],dh
 10017b4:	jbe    0x10017b6
 10017b6:	add    BYTE PTR gs:[edx+0x0],dh
 10017ba:	and    BYTE PTR [eax],al
 10017bc:	dec    ebp
 10017bd:	add    BYTE PTR [ecx+0x0],ah
 10017c0:	outs   dx,BYTE PTR ds:[esi]
 10017c1:	add    BYTE PTR [ecx+0x0],ah
 10017c4:	add    BYTE PTR [di+0x0],ah
 10017c8:	ins    DWORD PTR es:[edi],dx
 10017c9:	add    BYTE PTR [ebp+0x0],ah
 10017cc:	outs   dx,BYTE PTR ds:[esi]
 10017cd:	add    BYTE PTR [eax+eax*1+0x20],dh
 10017d1:	add    BYTE PTR [ebx+0x0],dl
 10017d4:	je     0x10017d6
 10017d6:	jne    0x10017d8
 10017d8:	add    BYTE PTR fs:[ecx+0x0],ch
 10017dc:	outs   dx,DWORD PTR ds:[esi]
 10017dd:	add    BYTE PTR [eax+eax*1+0x31],bl
 10017e1:	add    BYTE PTR [ecx],dh
 10017e3:	add    BYTE PTR [esi],ch
 10017e5:	add    BYTE PTR [eax],dh
 10017e7:	add    BYTE PTR [eax],al
 10017e9:	add    BYTE PTR [eax],al
 10017eb:	add    BYTE PTR [eax+eax*1+0x72],dh
 10017ef:	add    BYTE PTR [ebp+0x0],dh
 10017f2:	add    BYTE PTR gs:[eax],al
 10017f5:	add    BYTE PTR [eax],al
 10017f7:	add    BYTE PTR [edi+0x0],bl
 10017fa:	pop    edi
 10017fb:	add    BYTE PTR [ebx+0x0],dl
 10017fe:	push   ebx
 10017ff:	add    BYTE PTR [ebp+0x0],cl
 1001802:	push   ebx
 1001803:	add    BYTE PTR [edi+0x0],bl
 1001806:	inc    ebx
 1001807:	add    BYTE PTR [edi+0x0],cl
 100180a:	dec    ebp
 100180b:	add    BYTE PTR [ebp+0x0],cl
 100180e:	inc    ecx
 100180f:	add    BYTE PTR [esi+0x0],cl
 1001812:	inc    esp
 1001813:	add    BYTE PTR [eax+eax*1+0x49],cl
 1001817:	add    BYTE PTR [esi+0x0],cl
 100181a:	inc    ebp
 100181b:	add    BYTE PTR [edi+0x0],bl
 100181e:	push   esi
 100181f:	add    BYTE PTR [ecx+0x0],al
 1001822:	push   edx
 1001823:	add    BYTE PTR [ecx+0x0],cl
 1001826:	inc    ecx
 1001827:	add    BYTE PTR [edx+0x0],al
 100182a:	dec    esp
 100182b:	add    BYTE PTR [ebp+0x0],al
 100182e:	pop    edi
 100182f:	add    BYTE PTR [esi+0x0],al
 1001832:	dec    ecx
 1001833:	add    BYTE PTR [eax+eax*1+0x45],cl
 1001837:	add    BYTE PTR [eax],al
 1001839:	add    BYTE PTR [eax],al
 100183b:	add    BYTE PTR [esi+0x0],ah
 100183e:	popa   
 100183f:	add    BYTE PTR [eax+eax*1+0x73],ch
 1001843:	add    BYTE PTR [ebp+0x0],ah
 1001846:	add    BYTE PTR [eax],al
 1001848:	push   ebx
 1001849:	add    BYTE PTR [eax+0x0],ch
 100184c:	popa   
 100184d:	add    BYTE PTR [edx+0x0],dh
 1001850:	add    BYTE PTR gs:[eax+eax*1+0x43],ah
 1001855:	add    BYTE PTR [edi+0x0],ch
 1001858:	add    BYTE PTR fs:[ebp+0x0],ah
 100185c:	add    BYTE PTR [eax],al
 100185e:	add    BYTE PTR [eax],al
 1001860:	pop    esp
 1001861:	add    BYTE PTR [ebx+0x0],dh
 1001864:	jno    0x1001866
 1001866:	ins    BYTE PTR es:[edi],dx
 1001867:	add    BYTE PTR [edx+0x0],ah
 100186a:	outs   dx,DWORD PTR ds:[esi]
 100186b:	add    BYTE PTR [edi+0x0],ch
 100186e:	je     0x1001870
 1001870:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 1001875:	add    BYTE PTR [eax+eax*1+0x0],ch
 1001879:	add    BYTE PTR [eax],al
 100187b:	add    BYTE PTR [ecx+0x75],dl
 100187e:	gs jb  0x10018fa
 1001881:	push   esp
 1001882:	outs   dx,DWORD PTR ds:[esi]
 1001883:	outs   dx,DWORD PTR ds:[esi]
 1001884:	ins    BYTE PTR es:[edi],dx
 1001885:	jae    0x10018dd
 1001887:	popa   
 1001888:	ins    BYTE PTR es:[edi],dx
 1001889:	jne    0x10018f0
 100188b:	add    BYTE PTR [ebx+0x0],dl
 100188e:	outs   dx,DWORD PTR ds:[esi]
 100188f:	add    BYTE PTR [esi+0x0],ah
 1001892:	je     0x1001894
 1001894:	ja     0x1001896
 1001896:	popa   
 1001897:	add    BYTE PTR [edx+0x0],dh
 100189a:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
 100189f:	add    BYTE PTR [ecx+0x0],ch
 10018a2:	arpl   WORD PTR [eax],ax
 10018a4:	jb     0x10018a6
 10018a6:	outs   dx,DWORD PTR ds:[esi]
 10018a7:	add    BYTE PTR [ebx+0x0],dh
 10018aa:	outs   dx,DWORD PTR ds:[esi]
 10018ab:	add    BYTE PTR [esi+0x0],ah
 10018ae:	je     0x10018b0
 10018b0:	pop    esp
 10018b1:	add    BYTE PTR [ecx+0x0],al
 10018b4:	jo     0x10018b6
 10018b6:	jo     0x10018b8
 10018b8:	inc    ebp
 10018b9:	add    BYTE PTR [esi+0x0],ch
 10018bc:	jbe    0x10018be
 10018be:	pop    esp
 10018bf:	add    BYTE PTR [ecx],dh
 10018c1:	add    BYTE PTR [eax],dh
 10018c3:	add    BYTE PTR [esi],ch
 10018c5:	add    BYTE PTR [eax],dh
 10018c7:	add    BYTE PTR [eax],al
 10018c9:	add    BYTE PTR [eax],al
 10018cb:	add    BYTE PTR [ecx+0x0],al
 10018ce:	jo     0x10018d0
 10018d0:	jo     0x10018d2
 10018d2:	add    BYTE PTR gs:[esi+0x0],ch
 10018d6:	jbe    0x10018d8
 10018d8:	push   ebx
 10018d9:	add    BYTE PTR [eax+eax*1+0x75],dh
 10018dd:	add    BYTE PTR [edx+0x0],ah
 10018e0:	inc    esp
 10018e1:	add    BYTE PTR [eax+eax*1+0x4c],cl
 10018e5:	add    BYTE PTR [ecx+0x0],cl
 10018e8:	outs   dx,BYTE PTR ds:[esi]
 10018e9:	add    BYTE PTR [ebx+0x0],dh
 10018ec:	je     0x10018ee
 10018ee:	popa   
 10018ef:	add    BYTE PTR [eax+eax*1+0x6c],ch
 10018f3:	add    BYTE PTR [eax+0x0],dl
 10018f6:	popa   
 10018f7:	add    BYTE PTR [eax+eax*1+0x68],dh
 10018fb:	add    BYTE PTR [eax],al
 10018fd:	add    BYTE PTR [eax],al
 10018ff:	add    BYTE PTR [eax+eax*1+0x61],bl
 1001903:	add    BYTE PTR [eax+0x0],dh
 1001906:	jo     0x1001908
 1001908:	add    BYTE PTR gs:[esi+0x0],ch
 100190c:	jbe    0x100190e
 100190e:	jae    0x1001910
 1001910:	je     0x1001912
 1001912:	jne    0x1001914
 1001914:	bound  eax,QWORD PTR [eax]
 1001916:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 100191b:	add    BYTE PTR [eax+eax*1+0x0],ch
 100191f:	add    BYTE PTR [ebx+0x74],dl
 1001922:	popa   
 1001923:	jb     0x1001999
 1001925:	add    BYTE PTR [eax],al
 1001927:	add    BYTE PTR [ebx+0x0],dh
 100192a:	jae    0x100192c
 100192c:	ins    DWORD PTR es:[edi],dx
 100192d:	add    BYTE PTR [ebx+0x0],dh
	...
 1001938:	jnp    0x100193a
 100193a:	bound  eax,QWORD PTR [eax]
 100193c:	xor    BYTE PTR [eax],al
 100193e:	arpl   WORD PTR [eax],ax
 1001940:	arpl   WORD PTR [eax],ax
 1001942:	cmp    DWORD PTR [eax],eax
 1001944:	cmp    BYTE PTR [eax],al
 1001946:	popa   
 1001947:	add    BYTE PTR ds:0x63002d00,dh
 100194d:	add    BYTE PTR [ebp+0x0],ah
 1001950:	xor    al,0x0
 1001952:	add    BYTE PTR fs:0x62003400,ch
 1001959:	add    BYTE PTR [eax+eax*1+0x35],ah
 100195d:	add    BYTE PTR ds:0x39006100,ch
 1001963:	add    BYTE PTR [edx],dh
 1001965:	add    BYTE PTR [edx],dh
 1001967:	add    BYTE PTR ds:0x61006200,ch
 100196d:	add    BYTE PTR [eax+eax*1+0x32],ah
 1001971:	add    BYTE PTR [esi],dh
 1001973:	add    BYTE PTR [edx+0x0],ah
 1001976:	xor    BYTE PTR [eax],al
 1001978:	xor    eax,DWORD PTR [eax]
 100197a:	cmp    BYTE PTR [eax],al
 100197c:	cmp    DWORD PTR [eax],eax
 100197e:	bound  eax,QWORD PTR [eax]
 1001980:	add    BYTE PTR fs:[ebp+0x0],bh
 1001984:	add    BYTE PTR [eax],al
 1001986:	add    BYTE PTR [eax],al
 1001988:	inc    ecx
 1001989:	add    BYTE PTR [eax+eax*1+0x76],ah
 100198d:	add    BYTE PTR [ecx+0x0],ah
 1001990:	jo     0x1001992
 1001992:	imul   eax,DWORD PTR [eax],0x320033
 1001998:	add    BYTE PTR cs:[eax+eax*1+0x6c],ah
 100199d:	add    BYTE PTR [eax+eax*1+0x0],ch
 10019a1:	add    BYTE PTR [eax],al
 10019a3:	add    BYTE PTR [edx+0x65],dl
 10019a6:	addr16 dec edi
 10019a8:	jo     0x1001a0f
 10019aa:	outs   dx,BYTE PTR ds:[esi]
 10019ab:	dec    ebx
 10019ac:	gs jns 0x1001a03
 10019af:	jb     0x1001a12
 10019b1:	outs   dx,BYTE PTR ds:[esi]
 10019b2:	jae    0x1001a15
 10019b4:	arpl   WORD PTR [ebp+eiz*2+0x64],si
 10019b8:	push   edi
 10019b9:	add    BYTE PTR [eax],al
 10019bb:	add    BYTE PTR [ebx],al
 10019bd:	xor    eax,0x4d2c0100
 10019c2:	add    BYTE PTR [ecx],al
 10019c4:	pop    ds
 10019c5:	add    BYTE PTR ds:[ecx],al
 10019c8:	and    eax,0x5c007300
 10019cd:	add    BYTE PTR ds:0x5c006400,ah
 10019d3:	add    BYTE PTR ds:0x7300,ah
 10019d9:	add    BYTE PTR [eax],al
 10019db:	add    BYTE PTR [eax+eax*1+0x2a],bl
 10019df:	add    BYTE PTR [esi],ch
 10019e1:	add    BYTE PTR [edx],ch
 10019e3:	add    BYTE PTR [eax],al
 10019e5:	add    BYTE PTR [eax],al
 10019e7:	add    BYTE PTR [esi],ch
 10019e9:	add    BYTE PTR [eax],al
 10019eb:	add    BYTE PTR [esi],ch
 10019ed:	add    BYTE PTR [esi],ch
 10019ef:	add    BYTE PTR [eax],al
 10019f1:	add    BYTE PTR [eax],al
 10019f3:	add    BYTE PTR [eax+eax*1+0x47],bl
 10019f7:	add    BYTE PTR [ebp+0x0],ah
 10019fa:	outs   dx,BYTE PTR ds:[esi]
 10019fb:	add    BYTE PTR [ebp+0x0],ah
 10019fe:	jb     0x1001a00
 1001a00:	popa   
 1001a01:	add    BYTE PTR [eax+eax*1+0x0],ch
 1001a05:	add    BYTE PTR [eax],al
 1001a07:	add    BYTE PTR [ebp+0x0],dl
 1001a0a:	dec    ecx
 1001a0b:	add    BYTE PTR [eax+eax*1+0x61],cl
 1001a0f:	add    BYTE PTR [esi+0x0],ch
 1001a12:	add    BYTE PTR [di+0x0],dh
 1001a16:	popa   
 1001a17:	add    BYTE PTR [edi+0x0],ah
 1001a1a:	add    BYTE PTR gs:[eax],al
 1001a1d:	add    BYTE PTR [eax],al
 1001a1f:	add    BYTE PTR ds:0x5f007300,ah
 1001a25:	add    BYTE PTR [ebx+0x0],al
 1001a28:	outs   dx,DWORD PTR ds:[esi]
 1001a29:	add    BYTE PTR [esi+0x0],ch
 1001a2c:	data16 add BYTE PTR [ecx+0x0],ch
 1001a30:	add    BYTE PTR [si+0x0],bl
 1001a34:	push   eax
 1001a35:	add    BYTE PTR [ecx+0x0],ah
 1001a38:	arpl   WORD PTR [eax],ax
 1001a3a:	imul   eax,DWORD PTR [eax],0x61
 1001a3d:	add    BYTE PTR [edi+0x0],ah
 1001a40:	add    BYTE PTR gs:[ebx+0x0],dh
 1001a44:	pop    esp
 1001a45:	add    BYTE PTR ds:0x5c007300,ah
 1001a4b:	add    BYTE PTR [ebx+0x0],dl
 1001a4e:	popa   
 1001a4f:	add    BYTE PTR [eax+eax*1+0x65],dh
 1001a53:	add    BYTE PTR [eax+eax*1+0x6c],ch
 1001a57:	add    BYTE PTR [ecx+0x0],ch
 1001a5a:	je     0x1001a5c
 1001a5c:	add    BYTE PTR gs:[eax+eax*1+0x6c],al
 1001a61:	add    BYTE PTR [eax+eax*1+0x0],ch
 1001a65:	add    BYTE PTR [eax],al
 1001a67:	add    BYTE PTR [eax+eax*1+0x6c],al
 1001a6b:	add    BYTE PTR [eax+eax*1+0x4e],ch
 1001a6f:	add    BYTE PTR [ecx+0x0],ah
 1001a72:	ins    DWORD PTR es:[edi],dx
 1001a73:	add    BYTE PTR [ebp+0x0],ah
 1001a76:	add    BYTE PTR [eax],al
 1001a78:	push   eax
 1001a79:	add    BYTE PTR [ecx+0x0],ah
 1001a7c:	je     0x1001a7e
 1001a7e:	push   0x0
 1001a83:	add    BYTE PTR [esi+0x65],dh
 1001a86:	arpl   WORD PTR [edi+ebp*2+0x72],si
 1001a8a:	cmp    al,0x54
 1001a8c:	and    BYTE PTR ds:[edi+ebp*2+0x6f],dh
 1001a91:	and    BYTE PTR [edi+ebp*2+0x6e],ch
 1001a95:	add    BYTE PTR [bx+si],al
 1001a98:	imul   esp,DWORD PTR [ebp+0x72],0x6e
 1001a9c:	gs ins BYTE PTR es:[edi],dx
 1001a9e:	xor    esi,DWORD PTR [edx]
 1001aa0:	cs fs ins BYTE PTR es:[edi],dx
 1001aa3:	ins    BYTE PTR es:[edi],dx
 1001aa4:	add    BYTE PTR [eax],al
 1001aa6:	add    BYTE PTR [eax],al
 1001aa8:	inc    edi
 1001aa9:	gs je  0x1001aef
 1001aac:	outs   dx,DWORD PTR ds:[esi]
 1001aad:	ins    DWORD PTR es:[edi],dx
 1001aae:	ins    DWORD PTR es:[edi],dx
 1001aaf:	popa   
 1001ab0:	outs   dx,BYTE PTR ds:[esi]
 1001ab1:	fs dec esp
 1001ab3:	imul   ebp,DWORD PTR [esi+0x65],0x57
 1001aba:	add    BYTE PTR [eax],al
 1001abc:	add    BYTE PTR [eax],al
 1001abe:	add    BYTE PTR [eax],al
 1001ac0:	sbb    al,0x1f
 1001ac2:	add    BYTE PTR [ecx],al
 1001ac4:	iret   
 1001ac5:	dec    esp
 1001ac6:	add    BYTE PTR [ecx],al
 1001ac8:	shl    BYTE PTR [eax-0x5ee7ff00],0x0
 1001acf:	add    DWORD PTR [eax],edx
 1001ad1:	pop    ecx
 1001ad2:	das    
 1001ad3:	mov    dh,0x28
 1001ad5:	rcl    DWORD PTR gs:[ecx],1
 1001ad8:	xchg   esi,eax
 1001ad9:	adc    DWORD PTR [eax],eax
 1001adb:	add    al,bh
 1001add:	push   ds
 1001ade:	or     eax,0x4c3de00d
 1001ae3:	cmp    DWORD PTR [edi+0x3c],ebp
 1001ae6:	rcl    BYTE PTR [ecx],cl
 1001ae8:	cmp    DWORD PTR [ebx+0x0],0x7a794fc0
 1001aef:	mov    bh,0xca
 1001af1:	test   eax,0x92a25dc0
 1001af6:	add    al,0x42
 1001af8:	nop
 1001af9:	add    esp,esp
 1001afb:	into   
 1001afc:	pop    edi
 1001afd:	adc    ecx,esp
 1001aff:	test   al,0x35
 1001b01:	push   esi
 1001b02:	add    BYTE PTR [ecx],al
 1001b04:	push   ecx
 1001b05:	push   esi
 1001b06:	add    BYTE PTR [ecx],al
 1001b08:	jae    0x1001b60
 1001b0a:	add    BYTE PTR [ecx],al
 1001b0c:	mov    al,0x56
 1001b0e:	add    BYTE PTR [ecx],al
 1001b10:	int3   
 1001b11:	push   esi
 1001b12:	add    BYTE PTR [ecx],al
 1001b14:	repnz push esi
 1001b16:	add    BYTE PTR [ecx],al
 1001b18:	popa   
 1001b19:	push   edi
 1001b1a:	add    BYTE PTR [ecx],al
 1001b1c:	je     0x1001b75
 1001b1e:	add    BYTE PTR [ecx],al
 1001b20:	ficom  DWORD PTR [edi+0x0]
 1001b23:	add    ebp,ebp
 1001b25:	push   edi
 1001b26:	add    BYTE PTR [ecx],al
 1001b28:	cmc    
 1001b29:	push   edi
 1001b2a:	add    BYTE PTR [ecx],al
 1001b2c:	add    BYTE PTR [eax],al
 1001b2e:	add    BYTE PTR [eax],al
 1001b30:	imul   ebp,DWORD PTR [esi+0x73],0x69706174
 1001b37:	xor    DWORD PTR [ecx],esi
 1001b39:	xor    BYTE PTR [esi],ch
 1001b3b:	fs ins BYTE PTR es:[edi],dx
 1001b3d:	ins    BYTE PTR es:[edi],dx
 1001b3e:	add    BYTE PTR [eax],al
 1001b40:	cmp    eax,DWORD PTR [eax]
 1001b42:	add    BYTE PTR [eax],al
 1001b44:	inc    edi
 1001b45:	gs je  0x1001b8c
 1001b48:	ins    BYTE PTR es:[edi],dx
 1001b49:	ins    BYTE PTR es:[edi],dx
 1001b4a:	inc    esp
 1001b4b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 1001b52:	jns    0x1001bab
 1001b54:	add    BYTE PTR [eax],al
 1001b56:	add    BYTE PTR [eax],al
 1001b58:	imul   eax,DWORD PTR [eax],0x65
 1001b5b:	add    BYTE PTR [edx+0x0],dh
 1001b5e:	outs   dx,BYTE PTR ds:[esi]
 1001b5f:	add    BYTE PTR [ebp+0x0],ah
 1001b62:	ins    BYTE PTR es:[edi],dx
 1001b63:	add    BYTE PTR [ebx],dh
 1001b65:	add    BYTE PTR [edx],dh
 1001b67:	add    BYTE PTR [esi],ch
 1001b69:	add    BYTE PTR [eax+eax*1+0x6c],ah
 1001b6d:	add    BYTE PTR [eax+eax*1+0x0],ch
 1001b71:	add    BYTE PTR [eax],al
 1001b73:	add    BYTE PTR [ebx+0x65],dl
 1001b76:	je     0x1001bbc
 1001b78:	ins    BYTE PTR es:[edi],dx
 1001b79:	ins    BYTE PTR es:[edi],dx
 1001b7a:	inc    esp
 1001b7b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
 1001b82:	jns    0x1001bdb
 1001b84:	add    BYTE PTR [eax],al
 1001b86:	add    BYTE PTR [eax],al
 1001b88:	push   ebx
 1001b89:	add    BYTE PTR [edi+0x0],ch
 1001b8c:	data16 add BYTE PTR [eax+eax*1+0x77],dh
 1001b91:	add    BYTE PTR [ecx+0x0],ah
 1001b94:	jb     0x1001b96
 1001b96:	add    BYTE PTR gs:[eax+eax*1+0x4d],bl
 1001b9b:	add    BYTE PTR [ecx+0x0],ch
 1001b9e:	arpl   WORD PTR [eax],ax
 1001ba0:	jb     0x1001ba2
 1001ba2:	outs   dx,DWORD PTR ds:[esi]
 1001ba3:	add    BYTE PTR [ebx+0x0],dh
 1001ba6:	outs   dx,DWORD PTR ds:[esi]
 1001ba7:	add    BYTE PTR [esi+0x0],ah
 1001baa:	je     0x1001bac
 1001bac:	pop    esp
 1001bad:	add    BYTE PTR [ebp+0x0],cl
 1001bb0:	imul   eax,DWORD PTR [eax],0x720063
 1001bb6:	outs   dx,DWORD PTR ds:[esi]
 1001bb7:	add    BYTE PTR [ebx+0x0],dh
 1001bba:	outs   dx,DWORD PTR ds:[esi]
 1001bbb:	add    BYTE PTR [esi+0x0],ah
 1001bbe:	je     0x1001bc0
 1001bc0:	and    BYTE PTR [eax],al
 1001bc2:	push   ebx
 1001bc3:	add    BYTE PTR [ecx+0x0],dl
 1001bc6:	dec    esp
 1001bc7:	add    BYTE PTR [eax],ah
 1001bc9:	add    BYTE PTR [ebx+0x0],dl
 1001bcc:	add    BYTE PTR gs:[edx+0x0],dh
 1001bd0:	jbe    0x1001bd2
 1001bd2:	add    BYTE PTR gs:[edx+0x0],dh
 1001bd6:	pop    esp
 1001bd7:	add    BYTE PTR [ecx],dh
 1001bd9:	add    BYTE PTR [ecx],dh
 1001bdb:	add    BYTE PTR [eax],dh
 1001bdd:	add    BYTE PTR [eax],al
 1001bdf:	add    BYTE PTR ds:0x64007e00,ah
 1001be5:	add    BYTE PTR [eax+0x0],dh
 1001be8:	and    eax,0x2e000000
 1001bed:	add    BYTE PTR [ebp+0x0],ah
 1001bf0:	js     0x1001bf2
 1001bf2:	je     0x1001bf4
 1001bf4:	add    BYTE PTR [eax],al
 1001bf6:	add    BYTE PTR [eax],al
 1001bf8:	(bad)  
 1001bf9:	inc    DWORD PTR [eax]
 1001bfb:	add    BYTE PTR [ebp+0x0],ch
 1001bfe:	jae    0x1001c00
 1001c00:	ins    DWORD PTR es:[edi],dx
 1001c01:	add    BYTE PTR [eax+eax*1+0x73],ah
 1001c05:	add    BYTE PTR [edx+0x0],dh
 1001c08:	jbe    0x1001c0a
 1001c0a:	add    BYTE PTR cs:[ebp+0x0],ah
 1001c0e:	js     0x1001c10
 1001c10:	add    BYTE PTR gs:[eax],al
 1001c13:	add    BYTE PTR [eax],al
 1001c15:	add    BYTE PTR [eax],al
 1001c17:	add    BYTE PTR [eax+0x0],cl
 1001c1a:	dec    ebx
 1001c1b:	add    BYTE PTR [ebp+0x0],al
 1001c1e:	pop    ecx
 1001c1f:	add    BYTE PTR [edi+0x0],bl
 1001c22:	dec    esp
 1001c23:	add    BYTE PTR [edi+0x0],cl
 1001c26:	inc    ebx
 1001c27:	add    BYTE PTR [ecx+0x0],al
 1001c2a:	dec    esp
 1001c2b:	add    BYTE PTR [edi+0x0],bl
 1001c2e:	dec    ebp
 1001c2f:	add    BYTE PTR [ecx+0x0],al
 1001c32:	inc    ebx
 1001c33:	add    BYTE PTR [eax+0x0],cl
 1001c36:	dec    ecx
 1001c37:	add    BYTE PTR [esi+0x0],cl
 1001c3a:	inc    ebp
 1001c3b:	add    BYTE PTR [eax+eax*1+0x53],bl
 1001c3f:	add    BYTE PTR [edi+0x0],cl
 1001c42:	inc    esi
 1001c43:	add    BYTE PTR [eax+eax*1+0x57],dl
 1001c47:	add    BYTE PTR [ecx+0x0],al
 1001c4a:	push   edx
 1001c4b:	add    BYTE PTR [ebp+0x0],al
 1001c4e:	pop    esp
 1001c4f:	add    BYTE PTR [ebp+0x0],cl
 1001c52:	imul   eax,DWORD PTR [eax],0x720063
 1001c58:	outs   dx,DWORD PTR ds:[esi]
 1001c59:	add    BYTE PTR [ebx+0x0],dh
 1001c5c:	outs   dx,DWORD PTR ds:[esi]
 1001c5d:	add    BYTE PTR [esi+0x0],ah
 1001c60:	je     0x1001c62
 1001c62:	pop    esp
 1001c63:	add    BYTE PTR [ebp+0x0],cl
 1001c66:	imul   eax,DWORD PTR [eax],0x720063
 1001c6c:	outs   dx,DWORD PTR ds:[esi]
 1001c6d:	add    BYTE PTR [ebx+0x0],dh
 1001c70:	outs   dx,DWORD PTR ds:[esi]
 1001c71:	add    BYTE PTR [esi+0x0],ah
 1001c74:	je     0x1001c76
 1001c76:	and    BYTE PTR [eax],al
 1001c78:	push   ebx
 1001c79:	add    BYTE PTR [ecx+0x0],dl
 1001c7c:	dec    esp
 1001c7d:	add    BYTE PTR [eax],ah
 1001c7f:	add    BYTE PTR [ebx+0x0],dl
 1001c82:	add    BYTE PTR gs:[edx+0x0],dh
 1001c86:	jbe    0x1001c88
 1001c88:	add    BYTE PTR gs:[edx+0x0],dh
 1001c8c:	pop    esp
 1001c8d:	add    BYTE PTR [ecx+0x0],cl
 1001c90:	outs   dx,BYTE PTR ds:[esi]
 1001c91:	add    BYTE PTR [ebx+0x0],dh
 1001c94:	je     0x1001c96
 1001c96:	popa   
 1001c97:	add    BYTE PTR [esi+0x0],ch
 1001c9a:	arpl   WORD PTR [eax],ax
 1001c9c:	add    BYTE PTR gs:[eax],ah
 1001c9f:	add    BYTE PTR [esi+0x0],cl
 1001ca2:	popa   
 1001ca3:	add    BYTE PTR [ebp+0x0],ch
 1001ca6:	add    BYTE PTR gs:[ebx+0x0],dh
 1001caa:	pop    esp
 1001cab:	add    BYTE PTR [ebx+0x0],dl
 1001cae:	push   ecx
 1001caf:	add    BYTE PTR [eax+eax*1+0x0],cl
 1001cb3:	add    BYTE PTR ds:0x51005300,ah
 1001cb9:	add    BYTE PTR [eax+eax*1+0x53],cl
 1001cbd:	add    BYTE PTR [ebp+0x0],al
 1001cc0:	push   edx
 1001cc1:	add    BYTE PTR [esi+0x0],dl
 1001cc4:	push   edx
 1001cc5:	add    BYTE PTR [edi+0x0],bl
 1001cc8:	dec    ecx
 1001cc9:	add    BYTE PTR [esi+0x0],cl
 1001ccc:	push   ebx
 1001ccd:	add    BYTE PTR [eax+eax*1+0x4e],dl
 1001cd1:	add    BYTE PTR [ecx+0x0],al
 1001cd4:	dec    ebp
 1001cd5:	add    BYTE PTR [ebp+0x0],al
 1001cd8:	and    eax,0x69000000
 1001cdd:	add    BYTE PTR [esi+0x0],ch
 1001ce0:	imul   eax,DWORD PTR [eax],0x730000
 1001ce6:	jno    0x1001ce8
 1001ce8:	ins    BYTE PTR es:[edi],dx
 1001ce9:	add    BYTE PTR [ebx+0x0],dh
 1001cec:	add    BYTE PTR gs:[edx+0x0],dh
 1001cf0:	jbe    0x1001cf2
 1001cf2:	jb     0x1001cf4
 1001cf4:	add    BYTE PTR cs:[ecx+0x0],ch
 1001cf8:	outs   dx,BYTE PTR ds:[esi]
 1001cf9:	add    BYTE PTR [ecx+0x0],ch
 1001cfc:	add    BYTE PTR [eax],al
 1001cfe:	add    BYTE PTR [eax],al
 1001d00:	dec    eax
 1001d01:	add    BYTE PTR [ebx+0x0],cl
 1001d04:	inc    ebp
 1001d05:	add    BYTE PTR [ecx+0x0],bl
 1001d08:	pop    edi
 1001d09:	add    BYTE PTR [ebx+0x0],al
 1001d0c:	dec    esp
 1001d0d:	add    BYTE PTR [ecx+0x0],al
 1001d10:	push   ebx
 1001d11:	add    BYTE PTR [ebx+0x0],dl
 1001d14:	inc    ebp
 1001d15:	add    BYTE PTR [ebx+0x0],dl
 1001d18:	pop    edi
 1001d19:	add    BYTE PTR [edx+0x0],dl
 1001d1c:	dec    edi
 1001d1d:	add    BYTE PTR [edi+0x0],cl
 1001d20:	push   esp
 1001d21:	add    BYTE PTR [eax],al
 1001d23:	add    BYTE PTR [eax+0x0],cl
 1001d26:	dec    ebx
 1001d27:	add    BYTE PTR [ebp+0x0],al
 1001d2a:	pop    ecx
 1001d2b:	add    BYTE PTR [edi+0x0],bl
 1001d2e:	inc    ebx
 1001d2f:	add    BYTE PTR [ebp+0x0],dl
 1001d32:	push   edx
 1001d33:	add    BYTE PTR [edx+0x0],dl
 1001d36:	inc    ebp
 1001d37:	add    BYTE PTR [esi+0x0],cl
 1001d3a:	push   esp
 1001d3b:	add    BYTE PTR [edi+0x0],bl
 1001d3e:	push   ebp
 1001d3f:	add    BYTE PTR [ebx+0x0],dl
 1001d42:	inc    ebp
 1001d43:	add    BYTE PTR [edx+0x0],dl
 1001d46:	add    BYTE PTR [eax],al
 1001d48:	dec    eax
 1001d49:	add    BYTE PTR [ebx+0x0],cl
 1001d4c:	inc    ebp
 1001d4d:	add    BYTE PTR [ecx+0x0],bl
 1001d50:	pop    edi
 1001d51:	add    BYTE PTR [eax+eax*1+0x4f],cl
 1001d55:	add    BYTE PTR [ebx+0x0],al
 1001d58:	inc    ecx
 1001d59:	add    BYTE PTR [eax+eax*1+0x5f],cl
 1001d5d:	add    BYTE PTR [ebp+0x0],cl
 1001d60:	inc    ecx
 1001d61:	add    BYTE PTR [ebx+0x0],al
 1001d64:	dec    eax
 1001d65:	add    BYTE PTR [ecx+0x0],cl
 1001d68:	dec    esi
 1001d69:	add    BYTE PTR [ebp+0x0],al
 1001d6c:	add    BYTE PTR [eax],al
 1001d6e:	add    BYTE PTR [eax],al
 1001d70:	dec    eax
 1001d71:	add    BYTE PTR [ebx+0x0],cl
 1001d74:	inc    ebp
 1001d75:	add    BYTE PTR [ecx+0x0],bl
 1001d78:	pop    edi
 1001d79:	add    BYTE PTR [ebp+0x0],dl
 1001d7c:	push   ebx
 1001d7d:	add    BYTE PTR [ebp+0x0],al
 1001d80:	push   edx
 1001d81:	add    BYTE PTR [ebx+0x0],dl
 1001d84:	add    BYTE PTR [eax],al
 1001d86:	add    BYTE PTR [eax],al
 1001d88:	dec    eax
 1001d89:	add    BYTE PTR [ebx+0x0],cl
 1001d8c:	inc    ebp
 1001d8d:	add    BYTE PTR [ecx+0x0],bl
 1001d90:	pop    edi
 1001d91:	add    BYTE PTR [eax+0x0],dl
 1001d94:	inc    ebp
 1001d95:	add    BYTE PTR [edx+0x0],dl
 1001d98:	inc    esi
 1001d99:	add    BYTE PTR [edi+0x0],cl
 1001d9c:	push   edx
 1001d9d:	add    BYTE PTR [ebp+0x0],cl
 1001da0:	inc    ecx
 1001da1:	add    BYTE PTR [esi+0x0],cl
 1001da4:	inc    ebx
 1001da5:	add    BYTE PTR [ebp+0x0],al
 1001da8:	pop    edi
 1001da9:	add    BYTE PTR [eax+eax*1+0x41],al
 1001dad:	add    BYTE PTR [eax+eax*1+0x41],dl
 1001db1:	add    BYTE PTR [eax],al
 1001db3:	add    BYTE PTR [eax+0x0],cl
 1001db6:	dec    ebx
 1001db7:	add    BYTE PTR [ebp+0x0],al
 1001dba:	pop    ecx
 1001dbb:	add    BYTE PTR [edi+0x0],bl
 1001dbe:	inc    ebx
 1001dbf:	add    BYTE PTR [ebp+0x0],dl
 1001dc2:	push   edx
 1001dc3:	add    BYTE PTR [edx+0x0],dl
 1001dc6:	inc    ebp
 1001dc7:	add    BYTE PTR [esi+0x0],cl
 1001dca:	push   esp
 1001dcb:	add    BYTE PTR [edi+0x0],bl
 1001dce:	inc    ebx
 1001dcf:	add    BYTE PTR [edi+0x0],cl
 1001dd2:	dec    esi
 1001dd3:	add    BYTE PTR [esi+0x0],al
 1001dd6:	dec    ecx
 1001dd7:	add    BYTE PTR [edi+0x0],al
 1001dda:	add    BYTE PTR [eax],al
 1001ddc:	dec    eax
 1001ddd:	add    BYTE PTR [ebx+0x0],cl
 1001de0:	inc    ebp
 1001de1:	add    BYTE PTR [ecx+0x0],bl
 1001de4:	pop    edi
 1001de5:	add    BYTE PTR [eax+eax*1+0x59],al
 1001de9:	add    BYTE PTR [esi+0x0],cl
 1001dec:	pop    edi
 1001ded:	add    BYTE PTR [eax+eax*1+0x41],al
 1001df1:	add    BYTE PTR [eax+eax*1+0x41],dl
 1001df5:	add    BYTE PTR [eax],al
 1001df7:	add    BYTE PTR [eax+0x0],al
 1001dfa:	add    BYTE PTR [eax],al
 1001dfc:	add    BYTE PTR fs:[edi+0x0],dh
 1001e00:	outs   dx,DWORD PTR ds:[esi]
 1001e01:	add    BYTE PTR [edx+0x0],dh
 1001e04:	add    BYTE PTR fs:[edx],bh
 1001e07:	add    BYTE PTR ds:0x38003000,ah
 1001e0d:	add    BYTE PTR [eax+0x0],bh
 1001e10:	add    BYTE PTR [eax],al
 1001e12:	add    BYTE PTR [eax],al
 1001e14:	push   0x78006500
 1001e19:	add    BYTE PTR [edx],bh
 1001e1b:	add    BYTE PTR [eax],al
 1001e1d:	add    BYTE PTR [eax],al
 1001e1f:	add    BYTE PTR [eax+0x0],ch
 1001e22:	add    BYTE PTR gs:[eax+0x0],bh
 1001e26:	sub    BYTE PTR [eax],al
 1001e28:	add    BYTE PTR [eax],al
 1001e2a:	add    BYTE PTR [eax],al
 1001e2c:	and    eax,0x29006400
 1001e31:	add    BYTE PTR [edx],bh
 1001e33:	add    BYTE PTR [eax],al
 1001e35:	add    BYTE PTR [eax],al
 1001e37:	add    BYTE PTR ds:0x38003000,ah
 1001e3d:	add    BYTE PTR [eax+0x0],bh
 1001e40:	add    BYTE PTR [eax],al
 1001e42:	add    BYTE PTR [eax],al
 1001e44:	push   ebx
 1001e45:	jns    0x1001eba
 1001e47:	je     0x1001eae
 1001e49:	ins    DWORD PTR es:[edi],dx
 1001e4a:	inc    esi
 1001e4b:	jne    0x1001ebb
 1001e4d:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 1001e51:	outs   dx,BYTE PTR ds:[esi]
 1001e52:	xor    BYTE PTR [eax+esi*1],dh
 1001e55:	add    BYTE PTR [eax],al
 1001e57:	add    BYTE PTR [ebx+0x79],dl
 1001e5a:	jae    0x1001ed0
 1001e5c:	gs ins DWORD PTR es:[edi],dx
 1001e5e:	inc    esi
 1001e5f:	jne    0x1001ecf
 1001e61:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 1001e65:	outs   dx,BYTE PTR ds:[esi]
 1001e66:	xor    BYTE PTR [ecx+esi*1],dh
 1001e69:	add    BYTE PTR [eax],al
 1001e6b:	add    BYTE PTR [eax],al
 1001e6d:	add    BYTE PTR [eax],al
 1001e6f:	add    BYTE PTR [eax+0x0],cl
	...
 1001eaa:	add    BYTE PTR [eax],al
 1001eac:	jl     0x1001e3e
 1001eae:	add    BYTE PTR [ecx],al
 1001eb0:	jo     0x1001ed1
 1001eb2:	add    BYTE PTR [ecx],al
 1001eb4:	sbb    BYTE PTR [eax],al
 1001eb6:	add    BYTE PTR [eax],al
 1001eb8:	push   edx
 1001eb9:	push   ebx
 1001eba:	inc    esp
 1001ebb:	push   ebx
 1001ebc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1001ebd:	sbb    esp,edi
 1001ebf:	jge    0x1001eaa
 1001ec1:	pop    esp
 1001ec2:	mov    cs,WORD PTR [esi-0x7e]
 1001ec5:	imul   esp,DWORD PTR ds:0xda53c75e,0xffffffab
 1001ecc:	add    DWORD PTR [eax],eax
 1001ece:	add    BYTE PTR [eax],al
 1001ed0:	jae    0x1001f45
 1001ed2:	ins    DWORD PTR es:[edi],dx
 1001ed3:	jae    0x1001f03
 1001ed5:	jo     0x1001f3b
 1001ed7:	bound  eax,QWORD PTR [eax]
	...
 1001f25:	add    BYTE PTR [eax],al
 1001f27:	add    BYTE PTR [eax+edx*4+0x0],ah
 1001f2b:	add    DWORD PTR [eax],esi
 1001f2d:	pop    ds
 1001f2e:	add    BYTE PTR [ecx],al
	...
 1001f38:	add    DWORD PTR [eax],eax
 1001f3a:	add    BYTE PTR [eax],al
 1001f3c:	inc    eax
 1001f3d:	pop    ds
 1001f3e:	add    BYTE PTR [ecx],al
 1001f40:	dec    eax
 1001f41:	pop    ds
 1001f42:	add    BYTE PTR [ecx],al
 1001f44:	add    BYTE PTR [eax],al
 1001f46:	add    BYTE PTR [eax],al
 1001f48:	fs nop
 1001f4a:	add    BYTE PTR [ecx],al
	...
 1001f54:	(bad)  
 1001f55:	(bad)  
 1001f56:	(bad)  
 1001f57:	inc    DWORD PTR [eax]
 1001f59:	add    BYTE PTR [eax],al
 1001f5b:	add    BYTE PTR [eax+0x0],al
 1001f5e:	add    BYTE PTR [eax],al
 1001f60:	xor    BYTE PTR [edi],bl
 1001f62:	add    BYTE PTR [ecx],al
	...
 1001f70:	ficom  WORD PTR [eax+0x0]
 1001f73:	add    BYTE PTR [eax+esi*2+0x0],dh
 1001f77:	add    BYTE PTR [ecx-0x2effff90],ch
 1001f7d:	jo     0x1001f7f
 1001f7f:	add    BYTE PTR [ecx+0x71],cl
 1001f82:	add    BYTE PTR [eax],al
 1001f84:	mov    dh,BYTE PTR [ecx+0x0]
 1001f87:	add    BYTE PTR [ebx-0x23ffff8f],dh
 1001f8d:	jno    0x1001f8f
 1001f8f:	add    BYTE PTR ds:0x4b000072,al
 1001f95:	jb     0x1001f97
 1001f97:	add    BYTE PTR [ecx-0x4effff8e],dl
 1001f9d:	jb     0x1001f9f
 1001f9f:	add    cl,ch
 1001fa1:	jb     0x1001fa3
 1001fa3:	add    BYTE PTR [ecx],bh
 1001fa5:	jae    0x1001fa7
 1001fa7:	add    BYTE PTR [ecx+0x73],ah
 1001faa:	add    BYTE PTR [eax],al
 1001fac:	ret    
 1001fad:	jae    0x1001faf
 1001faf:	add    BYTE PTR [eax],cl
 1001fb1:	je     0x1001fb3
 1001fb3:	add    BYTE PTR [eax+0x74],bl
 1001fb6:	add    BYTE PTR [eax],al
 1001fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1001fb9:	je     0x1001fbb
 1001fbb:	add    bh,bl
 1001fbd:	je     0x1001fbf
 1001fbf:	add    bh,bh
 1001fc1:	je     0x1001fc3
 1001fc3:	add    BYTE PTR [eax],ch
 1001fc5:	jne    0x1001fc7
 1001fc7:	add    BYTE PTR [esi+0x75],dl
 1001fca:	add    BYTE PTR [eax],al
 1001fcc:	test   BYTE PTR [ebp+0x0],dh
	...
 1001fe3:	add    BYTE PTR [eax],al
 1001fe5:	push   0x26c
 1001fea:	mov    eax,0x1007074
 1001fef:	call   0x1004bfe
 1001ff4:	mov    eax,DWORD PTR [ebp+0x10]
 1001ff7:	mov    ebx,DWORD PTR [ebp+0x8]
 1001ffa:	mov    DWORD PTR [ebp-0x23c],eax
 1002000:	xor    eax,eax
 1002002:	push   0xec
 1002007:	push   eax
 1002008:	mov    DWORD PTR [ebp-0x238],eax
 100200e:	mov    DWORD PTR [ebp-0x230],eax
 1002014:	lea    eax,[ebp-0x22c]
 100201a:	push   eax
 100201b:	or     esi,0xffffffff
 100201e:	call   0x1004cc4
 1002023:	xor    edx,edx
 1002025:	xor    eax,eax
 1002027:	push   0x9
 1002029:	pop    ecx
 100202a:	lea    edi,[ebp-0x260]
 1002030:	mov    DWORD PTR [ebp-0x264],edx
 1002036:	rep stos DWORD PTR es:[edi],eax
 1002038:	lea    eax,[ebp-0x1f0]
 100203e:	mov    DWORD PTR [ebp-0x13c],eax
 1002044:	lea    eax,[ebp-0x1e8]
 100204a:	mov    DWORD PTR [ebp-0x12c],eax
 1002050:	lea    eax,[ebp-0x1c0]
 1002056:	mov    DWORD PTR [ebp-0x11c],eax
 100205c:	lea    eax,[ebp-0x1b0]
 1002062:	mov    DWORD PTR [ebp-0x10c],eax
 1002068:	lea    eax,[ebp-0x270]
 100206e:	mov    DWORD PTR [ebp-0xfc],eax
 1002074:	lea    eax,[ebp-0x1c0]
 100207a:	mov    DWORD PTR [ebp-0xec],eax
 1002080:	lea    eax,[ebp-0x1bc]
 1002086:	mov    DWORD PTR [ebp-0xdc],eax
 100208c:	lea    eax,[ebp-0x1b8]
 1002092:	mov    DWORD PTR [ebp-0xcc],eax
 1002098:	lea    eax,[ebp-0x1dc]
 100209e:	mov    DWORD PTR [ebp-0xb4],eax
 10020a4:	mov    DWORD PTR [ebp-0xa4],eax
 10020aa:	lea    eax,[ebp-0x248]
 10020b0:	mov    DWORD PTR [ebp-0x9c],eax
 10020b6:	lea    eax,[ebp-0x24c]
 10020bc:	mov    DWORD PTR [ebp-0x84],eax
 10020c2:	mov    DWORD PTR [ebp-0x270],edx
 10020c8:	mov    DWORD PTR [ebp-0x140],0x10016c0
 10020d2:	mov    DWORD PTR [ebp-0x138],edx
 10020d8:	mov    DWORD PTR [ebp-0x134],edx
 10020de:	mov    DWORD PTR [ebp-0x130],0x10016c8
 10020e8:	mov    DWORD PTR [ebp-0x128],edx
 10020ee:	mov    DWORD PTR [ebp-0x124],edx
 10020f4:	mov    DWORD PTR [ebp-0x120],0x10016d8
 10020fe:	mov    DWORD PTR [ebp-0x118],edx
 1002104:	mov    DWORD PTR [ebp-0x114],edx
 100210a:	mov    DWORD PTR [ebp-0x110],0x10016e4
 1002114:	mov    DWORD PTR [ebp-0x108],edx
 100211a:	mov    DWORD PTR [ebp-0x104],edx
 1002120:	mov    DWORD PTR [ebp-0x100],0x10016ec
 100212a:	mov    DWORD PTR [ebp-0xf8],edx
 1002130:	mov    DWORD PTR [ebp-0xf4],edx
 1002136:	mov    DWORD PTR [ebp-0xf0],0x10016fc
 1002140:	mov    DWORD PTR [ebp-0xe8],edx
 1002146:	mov    DWORD PTR [ebp-0xe4],edx
 100214c:	mov    DWORD PTR [ebp-0xe0],0x1001710
 1002156:	mov    DWORD PTR [ebp-0xd8],edx
 100215c:	mov    DWORD PTR [ebp-0xd4],edx
 1002162:	mov    DWORD PTR [ebp-0xd0],0x1001728
 100216c:	mov    DWORD PTR [ebp-0xc8],edx
 1002172:	mov    DWORD PTR [ebp-0xc4],edx
 1002178:	mov    DWORD PTR [ebp-0xc0],0x100173c
 1002182:	mov    DWORD PTR [ebp-0xbc],edx
 1002188:	mov    DWORD PTR [ebp-0xb8],edx
 100218e:	mov    DWORD PTR [ebp-0xb0],0x1001748
 1002198:	mov    DWORD PTR [ebp-0xac],edx
 100219e:	mov    DWORD PTR [ebp-0xa8],edx
 10021a4:	mov    DWORD PTR [ebp-0xa0],0x100174c
 10021ae:	mov    DWORD PTR [ebp-0x98],edx
 10021b4:	mov    DWORD PTR [ebp-0x94],edx
 10021ba:	mov    DWORD PTR [ebp-0x90],0x1001750
 10021c4:	mov    DWORD PTR [ebp-0x8c],edx
 10021ca:	mov    DWORD PTR [ebp-0x88],edx
 10021d0:	mov    DWORD PTR [ebp-0x80],0x1001758
 10021d7:	lea    eax,[ebp-0x244]
 10021dd:	push   DWORD PTR [ebp-0x23c]
 10021e3:	mov    DWORD PTR [ebp-0x7c],eax
 10021e6:	lea    eax,[ebp-0x264]
 10021ec:	mov    DWORD PTR [ebp-0x64],eax
 10021ef:	lea    eax,[ebp-0x25c]
 10021f5:	mov    DWORD PTR [ebp-0x54],eax
 10021f8:	lea    eax,[ebp-0x258]
 10021fe:	mov    DWORD PTR [ebp-0x4c],eax
 1002201:	lea    eax,[ebp-0x254]
 1002207:	mov    DWORD PTR [ebp-0x34],eax
 100220a:	lea    eax,[ebp-0x250]
 1002210:	mov    DWORD PTR [ebp-0x78],edx
 1002213:	mov    DWORD PTR [ebp-0x74],edx
 1002216:	mov    DWORD PTR [ebp-0x70],0x100125c
 100221d:	mov    DWORD PTR [ebp-0x6c],edx
 1002220:	mov    DWORD PTR [ebp-0x68],edx
 1002223:	mov    DWORD PTR [ebp-0x60],0x100176c
 100222a:	mov    DWORD PTR [ebp-0x5c],edx
 100222d:	mov    DWORD PTR [ebp-0x58],edx
 1002230:	mov    DWORD PTR [ebp-0x50],0x1001770
 1002237:	mov    DWORD PTR [ebp-0x48],edx
 100223a:	mov    DWORD PTR [ebp-0x44],edx
 100223d:	mov    DWORD PTR [ebp-0x40],0x1001774
 1002244:	mov    DWORD PTR [ebp-0x3c],edx
 1002247:	mov    DWORD PTR [ebp-0x38],edx
 100224a:	mov    DWORD PTR [ebp-0x30],0x1001778
 1002251:	mov    DWORD PTR [ebp-0x2c],edx
 1002254:	mov    DWORD PTR [ebp-0x28],edx
 1002257:	mov    DWORD PTR [ebp-0x24],eax
 100225a:	mov    DWORD PTR [ebp-0x20],edx
 100225d:	mov    DWORD PTR [ebp-0x1c],edx
 1002260:	mov    DWORD PTR [ebp-0x18],edx
 1002263:	mov    DWORD PTR [ebp-0x14],edx
 1002266:	mov    DWORD PTR [ebp-0x26c],edx
 100226c:	call   0x1004559
 1002271:	push   DWORD PTR [ebp+0x14]
 1002274:	mov    edi,eax
 1002276:	lea    eax,[ebp-0x230]
 100227c:	push   edi
 100227d:	push   eax
 100227e:	call   0x1004243
 1002283:	add    esp,0x1c
 1002286:	test   eax,eax
 1002288:	js     0x100242e
 100228e:	lea    eax,[ebp-0x26c]
 1002294:	push   eax
 1002295:	lea    eax,[ebp-0x278]
 100229b:	push   eax
 100229c:	lea    eax,[ebp-0x20c]
 10022a2:	push   eax
 10022a3:	lea    eax,[ebp-0x140]
 10022a9:	push   eax
 10022aa:	push   DWORD PTR [ebp-0x210]
 10022b0:	mov    DWORD PTR [ebp-0x258],esi
 10022b6:	push   0x1001780
 10022bb:	call   0x10042de
 10022c0:	add    esp,0x18
 10022c3:	cmp    DWORD PTR [ebp-0x20c],0x0
 10022ca:	mov    DWORD PTR [ebp-0x268],eax
 10022d0:	je     0x10022d9
 10022d2:	push   0x10017ec
 10022d7:	jmp    0x10022de
 10022d9:	push   0x100183c
 10022de:	push   0x10017f8
 10022e3:	call   DWORD PTR ds:0x10010c0
 10022e9:	cmp    DWORD PTR [ebp-0x250],0x0
 10022f0:	je     0x100238d
 10022f6:	call   0x1006c9a
 10022fb:	and    DWORD PTR [ebp-0x234],0x0
 1002302:	lea    eax,[ebp-0x234]
 1002308:	push   eax
 1002309:	push   0xfffffffe
 100230b:	push   DWORD PTR [ebp-0x250]
 1002311:	mov    DWORD PTR [ebp-0x238],0x1
 100231b:	call   0x10026b4
 1002320:	test   eax,eax
 1002322:	jne    0x100238d
 1002324:	push   0x8
 1002326:	call   0x1004b3c
 100232b:	pop    ecx
 100232c:	mov    ecx,eax
 100232e:	mov    DWORD PTR [ebp-0x274],ecx
 1002334:	and    DWORD PTR [ebp-0x4],0x0
 1002338:	test   ecx,ecx
 100233a:	je     0x100234f
 100233c:	mov    eax,DWORD PTR [ebp-0x250]
 1002342:	and    DWORD PTR [ecx],0x0
 1002345:	and    DWORD PTR [ecx+0x4],0x0
 1002349:	push   eax
 100234a:	call   0x1002d2b
 100234f:	mov    DWORD PTR [ebp-0x4],esi
 1002352:	mov    ecx,DWORD PTR [ebp-0x234]
 1002358:	mov    eax,DWORD PTR [ebp-0x250]
 100235e:	test   ecx,ecx
 1002360:	je     0x1002369
 1002362:	mov    BYTE PTR [eax],0x0
 1002365:	inc    eax
 1002366:	dec    ecx
 1002367:	jne    0x1002362
 1002369:	lea    eax,[ebp-0x234]
 100236f:	push   eax
 1002370:	push   0xfffffffe
 1002372:	push   edi
 1002373:	call   0x10026b4
 1002378:	test   eax,eax
 100237a:	jne    0x100238d
 100237c:	mov    eax,DWORD PTR [ebp-0x234]
 1002382:	test   eax,eax
 1002384:	je     0x100238d
 1002386:	mov    BYTE PTR [edi],0x0
 1002389:	inc    edi
 100238a:	dec    eax
 100238b:	jne    0x1002386
 100238d:	cmp    DWORD PTR [ebp-0x268],0x0
 1002394:	jge    0x10023c2
 1002396:	and    DWORD PTR [ebp-0x264],0x0
 100239d:	and    DWORD PTR [ebp-0x25c],0x0
 10023a4:	and    DWORD PTR [ebp-0x254],0x0
 10023ab:	and    DWORD PTR [ebp-0x260],0x0
 10023b2:	mov    DWORD PTR [ebp-0x258],esi
 10023b8:	mov    DWORD PTR [ebp-0x248],0x1
 10023c2:	lea    eax,[ebp-0x230]
 10023c8:	push   eax
 10023c9:	call   0x100450e
 10023ce:	pop    ecx
 10023cf:	test   eax,eax
 10023d1:	js     0x1002420
 10023d3:	cmp    DWORD PTR [ebp-0x248],0x0
 10023da:	je     0x10023e5
 10023dc:	call   0x1002f56
 10023e1:	xor    esi,esi
 10023e3:	jmp    0x1002420
 10023e5:	call   0x1005850
 10023ea:	test   eax,eax
 10023ec:	je     0x10023e1
 10023ee:	call   0x1002f67
 10023f3:	test   al,al
 10023f5:	je     0x10023e1
 10023f7:	push   ebx
 10023f8:	call   0x1002d87
 10023fd:	mov    edi,eax
 10023ff:	pop    ecx
 1002400:	test   edi,edi
 1002402:	je     0x1002420
 1002404:	push   DWORD PTR [ebp+0x14]
 1002407:	push   DWORD PTR [ebp-0x23c]
 100240d:	push   ebx
 100240e:	push   edi
 100240f:	call   0x1002ea1
 1002414:	add    esp,0x10
 1002417:	push   edi
 1002418:	mov    esi,eax
 100241a:	call   DWORD PTR ds:0x10010dc
 1002420:	cmp    DWORD PTR [ebp-0x238],0x0
 1002427:	je     0x100242e
 1002429:	call   0x1006d23
 100242e:	mov    eax,esi
 1002430:	call   0x1004c90
 1002435:	ret    0x10
 1002438:	int3   
 1002439:	int3   
 100243a:	int3   
 100243b:	int3   
 100243c:	int3   
 100243d:	mov    edi,edi
 100243f:	push   ebp
 1002440:	mov    ebp,esp
 1002442:	mov    eax,DWORD PTR [ebp+0x8]
 1002445:	mov    DWORD PTR [ebp+0x8],eax
 1002448:	push   0x100776c
 100244d:	lea    eax,[ebp+0x8]
 1002450:	push   eax
 1002451:	call   0x1004b80
 1002456:	int3   
 1002457:	int3   
 1002458:	int3   
 1002459:	int3   
 100245a:	int3   
 100245b:	int3   
 100245c:	mov    edi,edi
 100245e:	push   ebp
 100245f:	mov    ebp,esp
 1002461:	mov    eax,DWORD PTR [ebp+0x8]
 1002464:	test   eax,eax
 1002466:	je     0x1002494
 1002468:	cmp    eax,0xc
 100246b:	je     0x100248d
 100246d:	cmp    eax,0x16
 1002470:	je     0x1002486
 1002472:	cmp    eax,0x22
 1002475:	je     0x1002486
 1002477:	cmp    eax,0x50
 100247a:	je     0x1002494
 100247c:	push   0x80004005
 1002481:	call   0x100243d
 1002486:	push   0x80070057
 100248b:	jmp    0x1002481
 100248d:	push   0x8007000e
 1002492:	jmp    0x1002481
 1002494:	pop    ebp
 1002495:	ret    
 1002496:	int3   
 1002497:	int3   
 1002498:	int3   
 1002499:	int3   
 100249a:	int3   
 100249b:	mov    edi,edi
 100249d:	push   ebp
 100249e:	mov    ebp,esp
 10024a0:	push   DWORD PTR [ebp+0x14]
 10024a3:	push   DWORD PTR [ebp+0x10]
 10024a6:	push   DWORD PTR [ebp+0xc]
 10024a9:	push   DWORD PTR [ebp+0x8]
 10024ac:	call   0x1004b48
 10024b1:	push   eax
 10024b2:	call   0x100245c
 10024b7:	add    esp,0x14
 10024ba:	pop    ebp
 10024bb:	ret    
 10024bc:	int3   
 10024bd:	int3   
 10024be:	int3   
 10024bf:	int3   
 10024c0:	int3   
 10024c1:	mov    edi,edi
 10024c3:	push   ebp
 10024c4:	mov    ebp,esp
 10024c6:	push   DWORD PTR [ebp+0xc]
 10024c9:	push   DWORD PTR [ebp+0x8]
 10024cc:	call   DWORD PTR ds:0x10010d4
 10024d2:	test   eax,eax
 10024d4:	jne    0x10024d8
 10024d6:	pop    ebp
 10024d7:	ret    
 10024d8:	push   esi
 10024d9:	push   eax
 10024da:	call   DWORD PTR ds:0x10010e0
 10024e0:	mov    esi,eax
 10024e2:	test   esi,esi
 10024e4:	je     0x1002511
 10024e6:	push   DWORD PTR [ebp+0xc]
 10024e9:	push   DWORD PTR [ebp+0x8]
 10024ec:	call   DWORD PTR ds:0x10010d0
 10024f2:	mov    edx,DWORD PTR [ebp+0x10]
 10024f5:	lea    ecx,[esi+eax*1]
 10024f8:	and    edx,0xf
 10024fb:	jbe    0x100250d
 10024fd:	cmp    esi,ecx
 10024ff:	jae    0x1002511
 1002501:	movzx  eax,WORD PTR [esi]
 1002504:	lea    esi,[esi+eax*2]
 1002507:	add    esi,0x2
 100250a:	dec    edx
 100250b:	jne    0x10024fd
 100250d:	cmp    esi,ecx
 100250f:	jb     0x1002515
 1002511:	xor    eax,eax
 1002513:	jmp    0x100251e
 1002515:	movzx  eax,WORD PTR [esi]
 1002518:	neg    eax
 100251a:	sbb    eax,eax
 100251c:	and    eax,esi
 100251e:	pop    esi
 100251f:	pop    ebp
 1002520:	ret    
 1002521:	int3   
 1002522:	int3   
 1002523:	int3   
 1002524:	int3   
 1002525:	int3   
 1002526:	mov    edi,edi
 1002528:	push   ebp
 1002529:	mov    ebp,esp
 100252b:	mov    eax,DWORD PTR [ebp+0xc]
 100252e:	shr    eax,0x4
 1002531:	inc    eax
 1002532:	movzx  eax,ax
 1002535:	push   0x6
 1002537:	push   eax
 1002538:	push   DWORD PTR [ebp+0x8]
 100253b:	call   DWORD PTR ds:0x10010bc
 1002541:	test   eax,eax
 1002543:	jne    0x1002547
 1002545:	pop    ebp
 1002546:	ret    
 1002547:	push   DWORD PTR [ebp+0xc]
 100254a:	push   eax
 100254b:	push   DWORD PTR [ebp+0x8]
 100254e:	call   0x10024c1
 1002553:	add    esp,0xc
 1002556:	pop    ebp
 1002557:	ret    
 1002558:	int3   
 1002559:	int3   
 100255a:	int3   
 100255b:	int3   
 100255c:	int3   
 100255d:	mov    edi,edi
 100255f:	push   ebp
 1002560:	mov    ebp,esp
 1002562:	mov    eax,DWORD PTR [ebp+0xc]
 1002565:	push   DWORD PTR [ebp+0x10]
 1002568:	shr    eax,0x4
 100256b:	inc    eax
 100256c:	movzx  eax,ax
 100256f:	push   eax
 1002570:	push   0x6
 1002572:	push   DWORD PTR [ebp+0x8]
 1002575:	call   DWORD PTR ds:0x10010b8
 100257b:	test   eax,eax
 100257d:	jne    0x1002581
 100257f:	pop    ebp
 1002580:	ret    
 1002581:	push   DWORD PTR [ebp+0xc]
 1002584:	push   eax
 1002585:	push   DWORD PTR [ebp+0x8]
 1002588:	call   0x10024c1
 100258d:	add    esp,0xc
 1002590:	pop    ebp
 1002591:	ret    
 1002592:	int3   
 1002593:	int3   
 1002594:	int3   
 1002595:	int3   
 1002596:	int3   
 1002597:	mov    edi,edi
 1002599:	push   ebp
 100259a:	mov    ebp,esp
 100259c:	push   ebx
 100259d:	push   esi
 100259e:	push   edi
 100259f:	mov    ebx,0x100a3e4
 10025a4:	push   0x0
 10025a6:	mov    ecx,ebx
 10025a8:	call   0x1005509
 10025ad:	xor    edi,edi
 10025af:	inc    edi
 10025b0:	jmp    0x10025ce
 10025b2:	push   DWORD PTR [ebp+0xc]
 10025b5:	push   DWORD PTR [ebp+0x8]
 10025b8:	push   esi
 10025b9:	call   0x100255d
 10025be:	add    esp,0xc
 10025c1:	test   eax,eax
 10025c3:	jne    0x10025d9
 10025c5:	push   edi
 10025c6:	mov    ecx,ebx
 10025c8:	call   0x1005509
 10025cd:	inc    edi
 10025ce:	mov    esi,eax
 10025d0:	test   esi,esi
 10025d2:	jne    0x10025b2
 10025d4:	pop    edi
 10025d5:	pop    esi
 10025d6:	pop    ebx
 10025d7:	pop    ebp
 10025d8:	ret    
 10025d9:	mov    eax,esi
 10025db:	jmp    0x10025d4
 10025dd:	int3   
 10025de:	int3   
 10025df:	int3   
 10025e0:	int3   
 10025e1:	int3   
 10025e2:	mov    edi,edi
 10025e4:	push   ebx
 10025e5:	push   esi
 10025e6:	xor    ebx,ebx
 10025e8:	push   edi
 10025e9:	mov    esi,ecx
 10025eb:	mov    ecx,ebx
 10025ed:	mov    edi,eax
 10025ef:	test   eax,eax
 10025f1:	je     0x1002602
 10025f3:	cmp    WORD PTR [esi],bx
 10025f6:	je     0x10025fe
 10025f8:	add    esi,0x2
 10025fb:	dec    eax
 10025fc:	jne    0x10025f3
 10025fe:	test   eax,eax
 1002600:	jne    0x1002607
 1002602:	mov    ecx,0x80070057
 1002607:	test   edx,edx
 1002609:	je     0x1002617
 100260b:	test   ecx,ecx
 100260d:	js     0x1002615
 100260f:	sub    edi,eax
 1002611:	mov    DWORD PTR [edx],edi
 1002613:	jmp    0x1002617
 1002615:	mov    DWORD PTR [edx],ebx
 1002617:	pop    edi
 1002618:	pop    esi
 1002619:	mov    eax,ecx
 100261b:	pop    ebx
 100261c:	ret    
 100261d:	int3   
 100261e:	int3   
 100261f:	int3   
 1002620:	int3   
 1002621:	int3   
 1002622:	mov    edi,edi
 1002624:	push   ebp
 1002625:	mov    ebp,esp
 1002627:	push   ebx
 1002628:	push   edi
 1002629:	mov    edi,DWORD PTR [ebp+0xc]
 100262c:	xor    edx,edx
 100262e:	test   edi,edi
 1002630:	je     0x100263a
 1002632:	cmp    edi,0x7fffffff
 1002638:	jbe    0x100263f
 100263a:	mov    edx,0x80070057
 100263f:	test   edx,edx
 1002641:	js     0x1002657
 1002643:	mov    ecx,DWORD PTR [ebp+0x8]
 1002646:	lea    edx,[ebp+0xc]
 1002649:	mov    eax,edi
 100264b:	call   0x10025e2
 1002650:	mov    ebx,DWORD PTR [ebp+0xc]
 1002653:	mov    edx,eax
 1002655:	jmp    0x1002659
 1002657:	xor    ebx,ebx
 1002659:	test   edx,edx
 100265b:	js     0x10026a7
 100265d:	mov    eax,DWORD PTR [ebp+0x8]
 1002660:	push   esi
 1002661:	mov    esi,edi
 1002663:	push   0x0
 1002665:	lea    ecx,[eax+ebx*2]
 1002668:	pop    edx
 1002669:	sub    esi,ebx
 100266b:	je     0x1002699
 100266d:	mov    eax,esi
 100266f:	add    ebx,0x7fffffff
 1002675:	sub    eax,edi
 1002677:	add    eax,ebx
 1002679:	mov    ebx,DWORD PTR [ebp+0x10]
 100267c:	sub    ebx,ecx
 100267e:	test   eax,eax
 1002680:	je     0x1002695
 1002682:	movzx  edi,WORD PTR [ebx+ecx*1]
 1002686:	test   di,di
 1002689:	je     0x1002695
 100268b:	mov    WORD PTR [ecx],di
 100268e:	add    ecx,0x2
 1002691:	dec    eax
 1002692:	dec    esi
 1002693:	jne    0x100267e
 1002695:	test   esi,esi
 1002697:	jne    0x10026a1
 1002699:	sub    ecx,0x2
 100269c:	mov    edx,0x8007007a
 10026a1:	xor    eax,eax
 10026a3:	mov    WORD PTR [ecx],ax
 10026a6:	pop    esi
 10026a7:	pop    edi
 10026a8:	mov    eax,edx
 10026aa:	pop    ebx
 10026ab:	pop    ebp
 10026ac:	ret    0xc
 10026af:	int3   
 10026b0:	int3   
 10026b1:	int3   
 10026b2:	int3   
 10026b3:	int3   
 10026b4:	mov    edi,edi
 10026b6:	push   ebp
 10026b7:	mov    ebp,esp
 10026b9:	mov    eax,DWORD PTR [ebp+0xc]
 10026bc:	mov    ecx,DWORD PTR [ebp+0x8]
 10026bf:	push   esi
 10026c0:	xor    esi,esi
 10026c2:	shr    eax,1
 10026c4:	mov    DWORD PTR [ebp+0xc],esi
 10026c7:	test   ecx,ecx
 10026c9:	je     0x10026e1
 10026cb:	cmp    eax,0x7fffffff
 10026d0:	ja     0x10026e1
 10026d2:	lea    edx,[ebp+0xc]
 10026d5:	call   0x10025e2
 10026da:	mov    esi,DWORD PTR [ebp+0xc]
 10026dd:	mov    edx,eax
 10026df:	jmp    0x10026e6
 10026e1:	mov    edx,0x80070057
 10026e6:	mov    ecx,DWORD PTR [ebp+0x10]
 10026e9:	test   ecx,ecx
 10026eb:	je     0x10026fb
 10026ed:	test   edx,edx
 10026ef:	js     0x10026f8
 10026f1:	lea    eax,[esi+esi*1]
 10026f4:	mov    DWORD PTR [ecx],eax
 10026f6:	jmp    0x10026fb
 10026f8:	and    DWORD PTR [ecx],0x0
 10026fb:	mov    eax,edx
 10026fd:	pop    esi
 10026fe:	pop    ebp
 10026ff:	ret    0xc
 1002702:	int3   
 1002703:	int3   
 1002704:	int3   
 1002705:	int3   
 1002706:	int3   
 1002707:	mov    edi,edi
 1002709:	push   esi
 100270a:	mov    esi,ecx
 100270c:	lea    eax,[esi+0xc]
 100270f:	or     edx,0xffffffff
 1002712:	lock xadd DWORD PTR [eax],edx
 1002716:	dec    edx
 1002717:	test   edx,edx
 1002719:	jg     0x1002723
 100271b:	mov    ecx,DWORD PTR [esi]
 100271d:	mov    eax,DWORD PTR [ecx]
 100271f:	push   esi
 1002720:	call   DWORD PTR [eax+0x4]
 1002723:	pop    esi
 1002724:	ret    
 1002725:	int3   
 1002726:	int3   
 1002727:	int3   
 1002728:	int3   
 1002729:	int3   
 100272a:	mov    edi,edi
 100272c:	push   ebp
 100272d:	mov    ebp,esp
 100272f:	mov    ecx,DWORD PTR [ebp+0xc]
 1002732:	mov    eax,DWORD PTR [ebp+0x8]
 1002735:	mov    dx,WORD PTR [eax]
 1002738:	cmp    dx,WORD PTR [ecx]
 100273b:	jne    0x100275b
 100273d:	test   dx,dx
 1002740:	je     0x1002757
 1002742:	mov    dx,WORD PTR [eax+0x2]
 1002746:	cmp    dx,WORD PTR [ecx+0x2]
 100274a:	jne    0x100275b
 100274c:	add    eax,0x4
 100274f:	add    ecx,0x4
 1002752:	test   dx,dx
 1002755:	jne    0x1002735
 1002757:	xor    eax,eax
 1002759:	pop    ebp
 100275a:	ret    
 100275b:	sbb    eax,eax
 100275d:	sbb    eax,0xffffffff
 1002760:	pop    ebp
 1002761:	ret    
 1002762:	int3   
 1002763:	int3   
 1002764:	int3   
 1002765:	int3   
 1002766:	int3   
 1002767:	mov    edi,edi
 1002769:	push   ebp
 100276a:	mov    ebp,esp
 100276c:	mov    ecx,DWORD PTR [ebp+0x14]
 100276f:	cmp    ecx,0xffffffff
 1002772:	jne    0x100278a
 1002774:	mov    ecx,DWORD PTR [ebp+0x10]
 1002777:	lea    edx,[ecx+0x2]
 100277a:	mov    ax,WORD PTR [ecx]
 100277d:	add    ecx,0x2
 1002780:	test   ax,ax
 1002783:	jne    0x100277a
 1002785:	sub    ecx,edx
 1002787:	sar    ecx,1
 1002789:	inc    ecx
 100278a:	push   ecx
 100278b:	push   DWORD PTR [ebp+0x10]
 100278e:	push   DWORD PTR [ebp+0xc]
 1002791:	push   DWORD PTR [ebp+0x8]
 1002794:	call   0x100249b
 1002799:	add    esp,0x10
 100279c:	pop    ebp
 100279d:	ret    
 100279e:	int3   
 100279f:	int3   
 10027a0:	int3   
 10027a1:	int3   
 10027a2:	int3   
 10027a3:	mov    edi,edi
 10027a5:	push   ebp
 10027a6:	mov    ebp,esp
 10027a8:	push   esi
 10027a9:	mov    esi,ecx
 10027ab:	mov    ecx,DWORD PTR [ebp+0x8]
 10027ae:	test   ecx,ecx
 10027b0:	jne    0x10027bc
 10027b2:	push   0x80004005
 10027b7:	call   0x100243d
 10027bc:	mov    eax,DWORD PTR [ecx]
 10027be:	call   DWORD PTR [eax+0xc]
 10027c1:	add    eax,0x10
 10027c4:	mov    DWORD PTR [esi],eax
 10027c6:	mov    eax,esi
 10027c8:	pop    esi
 10027c9:	pop    ebp
 10027ca:	ret    0x4
 10027cd:	int3   
 10027ce:	int3   
 10027cf:	int3   
 10027d0:	int3   
 10027d1:	int3   
 10027d2:	mov    ecx,DWORD PTR [ecx]
 10027d4:	sub    ecx,0x10
 10027d7:	jmp    0x1002707
 10027dc:	int3   
 10027dd:	int3   
 10027de:	int3   
 10027df:	int3   
 10027e0:	int3   
 10027e1:	mov    edi,edi
 10027e3:	push   esi
 10027e4:	mov    esi,ecx
 10027e6:	mov    eax,DWORD PTR [esi]
 10027e8:	lea    ecx,[eax-0x10]
 10027eb:	xor    edx,edx
 10027ed:	push   edi
 10027ee:	mov    edi,DWORD PTR [ecx]
 10027f0:	cmp    DWORD PTR [ecx+0x4],edx
 10027f3:	je     0x1002826
 10027f5:	cmp    DWORD PTR [ecx+0xc],edx
 10027f8:	jge    0x1002815
 10027fa:	cmp    DWORD PTR [eax-0x8],edx
 10027fd:	jge    0x1002809
 10027ff:	push   0x80070057
 1002804:	call   0x100243d
 1002809:	mov    DWORD PTR [eax-0xc],edx
 100280c:	mov    eax,DWORD PTR [esi]
 100280e:	xor    ecx,ecx
 1002810:	mov    WORD PTR [eax],cx
 1002813:	jmp    0x1002826
 1002815:	call   0x1002707
 100281a:	mov    eax,DWORD PTR [edi]
 100281c:	mov    ecx,edi
 100281e:	call   DWORD PTR [eax+0xc]
 1002821:	add    eax,0x10
 1002824:	mov    DWORD PTR [esi],eax
 1002826:	pop    edi
 1002827:	pop    esi
 1002828:	ret    
 1002829:	int3   
 100282a:	int3   
 100282b:	int3   
 100282c:	int3   
 100282d:	int3   
 100282e:	mov    edi,edi
 1002830:	push   ebp
 1002831:	mov    ebp,esp
 1002833:	push   ebx
 1002834:	mov    ebx,DWORD PTR [ebp+0xc]
 1002837:	push   edi
 1002838:	mov    edi,ecx
 100283a:	test   ebx,ebx
 100283c:	jne    0x1002845
 100283e:	call   0x10027e1
 1002843:	jmp    0x10028a2
 1002845:	cmp    DWORD PTR [ebp+0x8],0x0
 1002849:	jne    0x1002855
 100284b:	push   0x80070057
 1002850:	call   0x100243d
 1002855:	mov    eax,DWORD PTR [edi]
 1002857:	mov    ecx,DWORD PTR [ebp+0x8]
 100285a:	sub    ecx,eax
 100285c:	sar    ecx,1
 100285e:	push   esi
 100285f:	mov    esi,DWORD PTR [eax-0xc]
 1002862:	mov    DWORD PTR [ebp+0xc],ecx
 1002865:	push   ebx
 1002866:	mov    ecx,edi
 1002868:	call   0x100299c
 100286d:	mov    ecx,DWORD PTR [ebp+0xc]
 1002870:	cmp    ecx,esi
 1002872:	pop    esi
 1002873:	mov    edx,eax
 1002875:	push   ebx
 1002876:	ja     0x1002889
 1002878:	lea    ecx,[edx+ecx*2]
 100287b:	push   ecx
 100287c:	mov    ecx,DWORD PTR [edi]
 100287e:	push   DWORD PTR [ecx-0x8]
 1002881:	push   edx
 1002882:	call   0x10028d4
 1002887:	jmp    0x1002897
 1002889:	push   DWORD PTR [ebp+0x8]
 100288c:	mov    eax,DWORD PTR [edi]
 100288e:	push   DWORD PTR [eax-0x8]
 1002891:	push   edx
 1002892:	call   0x10028ad
 1002897:	add    esp,0x10
 100289a:	push   ebx
 100289b:	mov    ecx,edi
 100289d:	call   0x1002a77
 10028a2:	pop    edi
 10028a3:	pop    ebx
 10028a4:	pop    ebp
 10028a5:	ret    0x8
 10028a8:	int3   
 10028a9:	int3   
 10028aa:	int3   
 10028ab:	int3   
 10028ac:	int3   
 10028ad:	mov    edi,edi
 10028af:	push   ebp
 10028b0:	mov    ebp,esp
 10028b2:	mov    eax,DWORD PTR [ebp+0x14]
 10028b5:	add    eax,eax
 10028b7:	push   eax
 10028b8:	push   DWORD PTR [ebp+0x10]
 10028bb:	mov    eax,DWORD PTR [ebp+0xc]
 10028be:	add    eax,eax
 10028c0:	push   eax
 10028c1:	push   DWORD PTR [ebp+0x8]
 10028c4:	call   DWORD PTR ds:0x10011c8
 10028ca:	add    esp,0x10
 10028cd:	pop    ebp
 10028ce:	ret    
 10028cf:	int3   
 10028d0:	int3   
 10028d1:	int3   
 10028d2:	int3   
 10028d3:	int3   
 10028d4:	mov    edi,edi
 10028d6:	push   ebp
 10028d7:	mov    ebp,esp
 10028d9:	mov    eax,DWORD PTR [ebp+0x14]
 10028dc:	add    eax,eax
 10028de:	push   eax
 10028df:	push   DWORD PTR [ebp+0x10]
 10028e2:	mov    eax,DWORD PTR [ebp+0xc]
 10028e5:	add    eax,eax
 10028e7:	push   eax
 10028e8:	push   DWORD PTR [ebp+0x8]
 10028eb:	call   DWORD PTR ds:0x10011c4
 10028f1:	add    esp,0x10
 10028f4:	pop    ebp
 10028f5:	ret    
 10028f6:	int3   
 10028f7:	int3   
 10028f8:	int3   
 10028f9:	int3   
 10028fa:	int3   
 10028fb:	mov    edi,edi
 10028fd:	push   ebp
 10028fe:	mov    ebp,esp
 1002900:	mov    eax,DWORD PTR [ebp+0x8]
 1002903:	test   eax,eax
 1002905:	jne    0x1002909
 1002907:	pop    ebp
 1002908:	ret    
 1002909:	lea    edx,[eax+0x2]
 100290c:	mov    cx,WORD PTR [eax]
 100290f:	add    eax,0x2
 1002912:	test   cx,cx
 1002915:	jne    0x100290c
 1002917:	sub    eax,edx
 1002919:	sar    eax,1
 100291b:	pop    ebp
 100291c:	ret    
 100291d:	int3   
 100291e:	int3   
 100291f:	int3   
 1002920:	int3   
 1002921:	int3   
 1002922:	push   0x8007000e
 1002927:	call   0x100243d
 100292c:	int3   
 100292d:	int3   
 100292e:	int3   
 100292f:	int3   
 1002930:	int3   
 1002931:	int3   
 1002932:	mov    edi,edi
 1002934:	push   ebp
 1002935:	mov    ebp,esp
 1002937:	push   ecx
 1002938:	mov    eax,ecx
 100293a:	push   ebx
 100293b:	mov    ebx,DWORD PTR [eax]
 100293d:	mov    ecx,DWORD PTR [ebx-0x10]
 1002940:	push   esi
 1002941:	mov    DWORD PTR [ebp-0x4],eax
 1002944:	mov    eax,DWORD PTR [ecx]
 1002946:	push   edi
 1002947:	mov    edi,DWORD PTR [ebx-0xc]
 100294a:	call   DWORD PTR [eax+0x10]
 100294d:	mov    esi,DWORD PTR [ebp+0x8]
 1002950:	mov    edx,DWORD PTR [eax]
 1002952:	push   0x2
 1002954:	push   esi
 1002955:	mov    ecx,eax
 1002957:	call   DWORD PTR [edx]
 1002959:	mov    DWORD PTR [ebp+0x8],eax
 100295c:	test   eax,eax
 100295e:	jne    0x1002965
 1002960:	call   0x1002922
 1002965:	cmp    edi,esi
 1002967:	jge    0x100296b
 1002969:	mov    esi,edi
 100296b:	lea    edx,[esi+0x1]
 100296e:	push   edx
 100296f:	push   ebx
 1002970:	lea    esi,[eax+0x10]
 1002973:	push   edx
 1002974:	push   esi
 1002975:	call   0x10028ad
 100297a:	mov    eax,DWORD PTR [ebp+0x8]
 100297d:	add    esp,0x10
 1002980:	lea    ecx,[ebx-0x10]
 1002983:	mov    DWORD PTR [eax+0x4],edi
 1002986:	call   0x1002707
 100298b:	mov    eax,DWORD PTR [ebp-0x4]
 100298e:	pop    edi
 100298f:	mov    DWORD PTR [eax],esi
 1002991:	pop    esi
 1002992:	pop    ebx
 1002993:	leave  
 1002994:	ret    0x4
 1002997:	int3   
 1002998:	int3   
 1002999:	int3   
 100299a:	int3   
 100299b:	int3   
 100299c:	mov    edi,edi
 100299e:	push   ebp
 100299f:	mov    ebp,esp
 10029a1:	mov    edx,DWORD PTR [ebp+0x8]
 10029a4:	push   esi
 10029a5:	mov    esi,ecx
 10029a7:	test   edx,edx
 10029a9:	jns    0x10029b5
 10029ab:	push   0x80070057
 10029b0:	call   0x100243d
 10029b5:	mov    eax,DWORD PTR [esi]
 10029b7:	xor    ecx,ecx
 10029b9:	inc    ecx
 10029ba:	sub    ecx,DWORD PTR [eax-0x4]
 10029bd:	mov    eax,DWORD PTR [eax-0x8]
 10029c0:	sub    eax,edx
 10029c2:	or     ecx,eax
 10029c4:	jge    0x10029ce
 10029c6:	push   edx
 10029c7:	mov    ecx,esi
 10029c9:	call   0x10029da
 10029ce:	mov    eax,DWORD PTR [esi]
 10029d0:	pop    esi
 10029d1:	pop    ebp
 10029d2:	ret    0x4
 10029d5:	int3   
 10029d6:	int3   
 10029d7:	int3   
 10029d8:	int3   
 10029d9:	int3   
 10029da:	mov    edi,edi
 10029dc:	push   ebp
 10029dd:	mov    ebp,esp
 10029df:	push   esi
 10029e0:	mov    esi,DWORD PTR [ebp+0x8]
 10029e3:	push   edi
 10029e4:	mov    edi,ecx
 10029e6:	mov    ecx,DWORD PTR [edi]
 10029e8:	cmp    DWORD PTR [ecx-0xc],esi
 10029eb:	jle    0x10029f0
 10029ed:	mov    esi,DWORD PTR [ecx-0xc]
 10029f0:	cmp    DWORD PTR [ecx-0x4],0x1
 10029f4:	jle    0x1002a00
 10029f6:	push   esi
 10029f7:	mov    ecx,edi
 10029f9:	call   0x1002932
 10029fe:	jmp    0x1002a2e
 1002a00:	mov    ecx,DWORD PTR [ecx-0x8]
 1002a03:	cmp    ecx,esi
 1002a05:	jge    0x1002a2e
 1002a07:	cmp    ecx,0x40000000
 1002a0d:	jle    0x1002a17
 1002a0f:	add    ecx,0x100000
 1002a15:	jmp    0x1002a20
 1002a17:	mov    eax,ecx
 1002a19:	cdq    
 1002a1a:	sub    eax,edx
 1002a1c:	sar    eax,1
 1002a1e:	add    ecx,eax
 1002a20:	cmp    ecx,esi
 1002a22:	jge    0x1002a26
 1002a24:	mov    ecx,esi
 1002a26:	push   ecx
 1002a27:	mov    ecx,edi
 1002a29:	call   0x1002a39
 1002a2e:	pop    edi
 1002a2f:	pop    esi
 1002a30:	pop    ebp
 1002a31:	ret    0x4
 1002a34:	int3   
 1002a35:	int3   
 1002a36:	int3   
 1002a37:	int3   
 1002a38:	int3   
 1002a39:	mov    edi,edi
 1002a3b:	push   ebp
 1002a3c:	mov    ebp,esp
 1002a3e:	push   esi
 1002a3f:	mov    esi,DWORD PTR [ebp+0x8]
 1002a42:	push   edi
 1002a43:	mov    edi,ecx
 1002a45:	mov    edx,DWORD PTR [edi]
 1002a47:	sub    edx,0x10
 1002a4a:	mov    ecx,DWORD PTR [edx]
 1002a4c:	cmp    DWORD PTR [edx+0x8],esi
 1002a4f:	jge    0x1002a62
 1002a51:	test   esi,esi
 1002a53:	jle    0x1002a62
 1002a55:	mov    eax,DWORD PTR [ecx]
 1002a57:	push   0x2
 1002a59:	push   esi
 1002a5a:	push   edx
 1002a5b:	call   DWORD PTR [eax+0x8]
 1002a5e:	test   eax,eax
 1002a60:	jne    0x1002a67
 1002a62:	call   0x1002922
 1002a67:	add    eax,0x10
 1002a6a:	mov    DWORD PTR [edi],eax
 1002a6c:	pop    edi
 1002a6d:	pop    esi
 1002a6e:	pop    ebp
 1002a6f:	ret    0x4
 1002a72:	int3   
 1002a73:	int3   
 1002a74:	int3   
 1002a75:	int3   
 1002a76:	int3   
 1002a77:	mov    edi,edi
 1002a79:	push   ebp
 1002a7a:	mov    ebp,esp
 1002a7c:	mov    edx,DWORD PTR [ebp+0x8]
 1002a7f:	test   edx,edx
 1002a81:	js     0x1002a99
 1002a83:	mov    eax,DWORD PTR [ecx]
 1002a85:	cmp    edx,DWORD PTR [eax-0x8]
 1002a88:	jg     0x1002a99
 1002a8a:	mov    DWORD PTR [eax-0xc],edx
 1002a8d:	mov    eax,DWORD PTR [ecx]
 1002a8f:	xor    ecx,ecx
 1002a91:	mov    WORD PTR [eax+edx*2],cx
 1002a95:	pop    ebp
 1002a96:	ret    0x4
 1002a99:	push   0x80070057
 1002a9e:	call   0x100243d
 1002aa3:	int3   
 1002aa4:	int3   
 1002aa5:	int3   
 1002aa6:	int3   
 1002aa7:	int3   
 1002aa8:	int3   
 1002aa9:	mov    edi,edi
 1002aab:	push   ebp
 1002aac:	mov    ebp,esp
 1002aae:	push   esi
 1002aaf:	mov    esi,DWORD PTR [ebp+0x8]
 1002ab2:	mov    ecx,DWORD PTR [esi]
 1002ab4:	mov    eax,DWORD PTR [ecx]
 1002ab6:	push   edi
 1002ab7:	call   DWORD PTR [eax+0x10]
 1002aba:	lea    edx,[esi+0xc]
 1002abd:	cmp    DWORD PTR [edx],0x0
 1002ac0:	mov    ecx,eax
 1002ac2:	jl     0x1002ad3
 1002ac4:	cmp    ecx,DWORD PTR [esi]
 1002ac6:	jne    0x1002ad3
 1002ac8:	xor    eax,eax
 1002aca:	mov    edi,esi
 1002acc:	inc    eax
 1002acd:	lock xadd DWORD PTR [edx],eax
 1002ad1:	jmp    0x1002b03
 1002ad3:	mov    eax,DWORD PTR [ecx]
 1002ad5:	push   0x2
 1002ad7:	push   DWORD PTR [esi+0x4]
 1002ada:	call   DWORD PTR [eax]
 1002adc:	mov    edi,eax
 1002ade:	test   edi,edi
 1002ae0:	jne    0x1002ae7
 1002ae2:	call   0x1002922
 1002ae7:	mov    eax,DWORD PTR [esi+0x4]
 1002aea:	mov    DWORD PTR [edi+0x4],eax
 1002aed:	mov    ecx,DWORD PTR [esi+0x4]
 1002af0:	inc    ecx
 1002af1:	push   ecx
 1002af2:	lea    eax,[esi+0x10]
 1002af5:	push   eax
 1002af6:	push   ecx
 1002af7:	lea    eax,[edi+0x10]
 1002afa:	push   eax
 1002afb:	call   0x10028ad
 1002b00:	add    esp,0x10
 1002b03:	mov    eax,edi
 1002b05:	pop    edi
 1002b06:	pop    esi
 1002b07:	pop    ebp
 1002b08:	ret    
 1002b09:	int3   
 1002b0a:	int3   
 1002b0b:	int3   
 1002b0c:	int3   
 1002b0d:	int3   
 1002b0e:	push   0x4
 1002b10:	mov    eax,0x10070a9
 1002b15:	call   0x1004b8b
 1002b1a:	mov    esi,ecx
 1002b1c:	mov    DWORD PTR [ebp-0x10],esi
 1002b1f:	push   0x10090a8
 1002b24:	call   0x10027a3
 1002b29:	and    DWORD PTR [ebp-0x4],0x0
 1002b2d:	push   DWORD PTR [ebp+0x8]
 1002b30:	mov    ecx,esi
 1002b32:	call   0x1002c83
 1002b37:	test   al,al
 1002b39:	jne    0x1002b4f
 1002b3b:	push   DWORD PTR [ebp+0x8]
 1002b3e:	call   0x10028fb
 1002b43:	pop    ecx
 1002b44:	push   eax
 1002b45:	push   DWORD PTR [ebp+0x8]
 1002b48:	mov    ecx,esi
 1002b4a:	call   0x100282e
 1002b4f:	or     DWORD PTR [ebp-0x4],0xffffffff
 1002b53:	mov    eax,esi
 1002b55:	call   0x1004c77
 1002b5a:	ret    0x4
 1002b5d:	int3   
 1002b5e:	int3   
 1002b5f:	int3   
 1002b60:	int3   
 1002b61:	int3   
 1002b62:	push   0x4
 1002b64:	mov    eax,0x10070d1
 1002b69:	call   0x1004b8b
 1002b6e:	mov    DWORD PTR [ebp-0x10],ecx
 1002b71:	or     DWORD PTR [ebp-0x4],0xffffffff
 1002b75:	mov    ecx,DWORD PTR [ecx]
 1002b77:	sub    ecx,0x10
 1002b7a:	call   0x1002707
 1002b7f:	call   0x1004c77
 1002b84:	ret    
 1002b85:	int3   
 1002b86:	int3   
 1002b87:	int3   
 1002b88:	int3   
 1002b89:	int3   
 1002b8a:	mov    edi,edi
 1002b8c:	push   ebp
 1002b8d:	mov    ebp,esp
 1002b8f:	push   esi
 1002b90:	push   DWORD PTR [ebp+0x8]
 1002b93:	mov    esi,ecx
 1002b95:	call   0x10028fb
 1002b9a:	pop    ecx
 1002b9b:	push   eax
 1002b9c:	push   DWORD PTR [ebp+0x8]
 1002b9f:	mov    ecx,esi
 1002ba1:	call   0x100282e
 1002ba6:	mov    eax,esi
 1002ba8:	pop    esi
 1002ba9:	pop    ebp
 1002baa:	ret    0x4
 1002bad:	int3   
 1002bae:	int3   
 1002baf:	int3   
 1002bb0:	int3   
 1002bb1:	int3   
 1002bb2:	mov    eax,DWORD PTR [ecx]
 1002bb4:	mov    ecx,DWORD PTR [eax-0x10]
 1002bb7:	test   ecx,ecx
 1002bb9:	je     0x1002bc2
 1002bbb:	mov    eax,DWORD PTR [ecx]
 1002bbd:	call   DWORD PTR [eax+0x10]
 1002bc0:	jmp    0x1002bc4
 1002bc2:	xor    eax,eax
 1002bc4:	test   eax,eax
 1002bc6:	jne    0x1002bd5
 1002bc8:	mov    ecx,0x10090a8
 1002bcd:	mov    eax,ds:0x10090a8
 1002bd2:	jmp    DWORD PTR [eax+0x10]
 1002bd5:	ret    
 1002bd6:	int3   
 1002bd7:	int3   
 1002bd8:	int3   
 1002bd9:	int3   
 1002bda:	int3   
 1002bdb:	mov    edi,edi
 1002bdd:	push   ebp
 1002bde:	mov    ebp,esp
 1002be0:	cmp    DWORD PTR [ebp+0x8],0x0
 1002be4:	jne    0x1002bf0
 1002be6:	push   0x80004005
 1002beb:	call   0x100243d
 1002bf0:	push   DWORD PTR [ebp+0x8]
 1002bf3:	push   DWORD PTR [ecx]
 1002bf5:	call   0x100272a
 1002bfa:	pop    ecx
 1002bfb:	pop    ecx
 1002bfc:	pop    ebp
 1002bfd:	ret    0x4
 1002c00:	int3   
 1002c01:	int3   
 1002c02:	int3   
 1002c03:	int3   
 1002c04:	int3   
 1002c05:	mov    edi,edi
 1002c07:	push   ebp
 1002c08:	mov    ebp,esp
 1002c0a:	push   esi
 1002c0b:	push   0x0
 1002c0d:	push   DWORD PTR [ebp+0x8]
 1002c10:	mov    esi,ecx
 1002c12:	call   0x1002597
 1002c17:	pop    ecx
 1002c18:	pop    ecx
 1002c19:	test   eax,eax
 1002c1b:	je     0x1002c28
 1002c1d:	push   DWORD PTR [ebp+0x8]
 1002c20:	mov    ecx,esi
 1002c22:	push   eax
 1002c23:	call   0x1002c32
 1002c28:	pop    esi
 1002c29:	pop    ebp
 1002c2a:	ret    0x4
 1002c2d:	int3   
 1002c2e:	int3   
 1002c2f:	int3   
 1002c30:	int3   
 1002c31:	int3   
 1002c32:	mov    edi,edi
 1002c34:	push   ebp
 1002c35:	mov    ebp,esp
 1002c37:	push   ebx
 1002c38:	push   edi
 1002c39:	push   DWORD PTR [ebp+0xc]
 1002c3c:	mov    ebx,ecx
 1002c3e:	push   DWORD PTR [ebp+0x8]
 1002c41:	call   0x1002526
 1002c46:	mov    edi,eax
 1002c48:	pop    ecx
 1002c49:	pop    ecx
 1002c4a:	test   edi,edi
 1002c4c:	je     0x1002c78
 1002c4e:	push   esi
 1002c4f:	movzx  esi,WORD PTR [edi]
 1002c52:	push   esi
 1002c53:	mov    ecx,ebx
 1002c55:	call   0x100299c
 1002c5a:	movzx  ecx,WORD PTR [edi]
 1002c5d:	push   ecx
 1002c5e:	lea    ecx,[edi+0x2]
 1002c61:	push   ecx
 1002c62:	push   esi
 1002c63:	push   eax
 1002c64:	call   0x1002767
 1002c69:	add    esp,0x10
 1002c6c:	push   esi
 1002c6d:	mov    ecx,ebx
 1002c6f:	call   0x1002a77
 1002c74:	xor    eax,eax
 1002c76:	inc    eax
 1002c77:	pop    esi
 1002c78:	pop    edi
 1002c79:	pop    ebx
 1002c7a:	pop    ebp
 1002c7b:	ret    0x8
 1002c7e:	int3   
 1002c7f:	int3   
 1002c80:	int3   
 1002c81:	int3   
 1002c82:	int3   
 1002c83:	mov    edi,edi
 1002c85:	push   ebp
 1002c86:	mov    ebp,esp
 1002c88:	mov    eax,DWORD PTR [ebp+0x8]
 1002c8b:	xor    dl,dl
 1002c8d:	test   eax,eax
 1002c8f:	je     0x1002ca3
 1002c91:	test   eax,0xffff0000
 1002c96:	jne    0x1002ca3
 1002c98:	movzx  eax,ax
 1002c9b:	push   eax
 1002c9c:	call   0x1002c05
 1002ca1:	mov    dl,0x1
 1002ca3:	mov    al,dl
 1002ca5:	pop    ebp
 1002ca6:	ret    0x4
 1002ca9:	int3   
 1002caa:	int3   
 1002cab:	int3   
 1002cac:	int3   
 1002cad:	int3   
 1002cae:	mov    edi,edi
 1002cb0:	push   esi
 1002cb1:	mov    esi,ecx
 1002cb3:	mov    eax,DWORD PTR [esi]
 1002cb5:	test   eax,eax
 1002cb7:	je     0x1002cd6
 1002cb9:	mov    ecx,DWORD PTR [esi+0x4]
 1002cbc:	test   ecx,ecx
 1002cbe:	je     0x1002cc7
 1002cc0:	mov    BYTE PTR [eax],0x0
 1002cc3:	inc    eax
 1002cc4:	dec    ecx
 1002cc5:	jne    0x1002cc0
 1002cc7:	push   DWORD PTR [esi]
 1002cc9:	call   0x1004b60
 1002cce:	and    DWORD PTR [esi],0x0
 1002cd1:	and    DWORD PTR [esi+0x4],0x0
 1002cd5:	pop    ecx
 1002cd6:	pop    esi
 1002cd7:	ret    
 1002cd8:	int3   
 1002cd9:	int3   
 1002cda:	int3   
 1002cdb:	int3   
 1002cdc:	int3   
 1002cdd:	mov    edi,edi
 1002cdf:	push   ebp
 1002ce0:	mov    ebp,esp
 1002ce2:	push   esi
 1002ce3:	mov    esi,ecx
 1002ce5:	call   0x1002cae
 1002cea:	mov    eax,DWORD PTR [ebp+0x8]
 1002ced:	and    eax,0xfffffff8
 1002cf0:	test   DWORD PTR [ebp+0x8],0x7
 1002cf7:	mov    DWORD PTR [esi+0x4],eax
 1002cfa:	jne    0x1002d00
 1002cfc:	test   eax,eax
 1002cfe:	jne    0x1002d06
 1002d00:	add    eax,0x8
 1002d03:	mov    DWORD PTR [esi+0x4],eax
 1002d06:	push   DWORD PTR [esi+0x4]
 1002d09:	call   0x1004b54
 1002d0e:	pop    ecx
 1002d0f:	mov    ecx,eax
 1002d11:	mov    DWORD PTR [esi],ecx
 1002d13:	test   ecx,ecx
 1002d15:	jne    0x1002d1a
 1002d17:	and    DWORD PTR [esi+0x4],eax
 1002d1a:	xor    eax,eax
 1002d1c:	test   ecx,ecx
 1002d1e:	setne  al
 1002d21:	pop    esi
 1002d22:	pop    ebp
 1002d23:	ret    0x4
 1002d26:	int3   
 1002d27:	int3   
 1002d28:	int3   
 1002d29:	int3   
 1002d2a:	int3   
 1002d2b:	mov    edi,edi
 1002d2d:	push   ebp
 1002d2e:	mov    ebp,esp
 1002d30:	push   esi
 1002d31:	mov    esi,ecx
 1002d33:	call   0x1002cae
 1002d38:	cmp    DWORD PTR [ebp+0x8],0x0
 1002d3c:	je     0x1002d7b
 1002d3e:	mov    edx,DWORD PTR [ebp+0x8]
 1002d41:	lea    ecx,[edx+0x2]
 1002d44:	mov    ax,WORD PTR [edx]
 1002d47:	add    edx,0x2
 1002d4a:	test   ax,ax
 1002d4d:	jne    0x1002d44
 1002d4f:	sub    edx,ecx
 1002d51:	sar    edx,1
 1002d53:	push   ebx
 1002d54:	lea    ebx,[edx+0x1]
 1002d57:	cmp    ebx,0x1
 1002d5a:	jbe    0x1002d7a
 1002d5c:	lea    eax,[ebx+ebx*1]
 1002d5f:	push   eax
 1002d60:	mov    ecx,esi
 1002d62:	call   0x1002cdd
 1002d67:	test   al,al
 1002d69:	je     0x1002d7a
 1002d6b:	lea    eax,[esi+0x4]
 1002d6e:	push   eax
 1002d6f:	push   DWORD PTR [esi]
 1002d71:	push   ebx
 1002d72:	push   DWORD PTR [ebp+0x8]
 1002d75:	call   0x1006d4a
 1002d7a:	pop    ebx
 1002d7b:	mov    eax,esi
 1002d7d:	pop    esi
 1002d7e:	pop    ebp
 1002d7f:	ret    0x4
 1002d82:	int3   
 1002d83:	int3   
 1002d84:	int3   
 1002d85:	int3   
 1002d86:	int3   
 1002d87:	mov    edi,edi
 1002d89:	push   ebp
 1002d8a:	mov    ebp,esp
 1002d8c:	sub    esp,0x218
 1002d92:	mov    eax,ds:0x100907c
 1002d97:	xor    eax,ebp
 1002d99:	mov    DWORD PTR [ebp-0x4],eax
 1002d9c:	push   esi
 1002d9d:	push   edi
 1002d9e:	mov    edi,DWORD PTR [ebp+0x8]
 1002da1:	lea    eax,[ebp-0x210]
 1002da7:	push   eax
 1002da8:	push   0x20019
 1002dad:	xor    esi,esi
 1002daf:	push   esi
 1002db0:	push   0x100188c
 1002db5:	push   0x80000002
 1002dba:	mov    DWORD PTR [ebp-0x210],esi
 1002dc0:	call   DWORD PTR ds:0x1001004
 1002dc6:	test   eax,eax
 1002dc8:	jne    0x1002e07
 1002dca:	lea    eax,[ebp-0x214]
 1002dd0:	push   eax
 1002dd1:	lea    eax,[ebp-0x20c]
 1002dd7:	push   eax
 1002dd8:	lea    eax,[ebp-0x218]
 1002dde:	push   eax
 1002ddf:	push   esi
 1002de0:	push   0x10018cc
 1002de5:	push   DWORD PTR [ebp-0x210]
 1002deb:	mov    DWORD PTR [ebp-0x214],0x104
 1002df5:	call   DWORD PTR ds:0x1001008
 1002dfb:	push   DWORD PTR [ebp-0x210]
 1002e01:	call   DWORD PTR ds:0x1001000
 1002e07:	lea    eax,[ebp-0x20c]
 1002e0d:	push   eax
 1002e0e:	call   DWORD PTR ds:0x10010b4
 1002e14:	cmp    eax,0xffffffff
 1002e17:	jne    0x1002e72
 1002e19:	push   0x104
 1002e1e:	lea    eax,[ebp-0x20c]
 1002e24:	push   eax
 1002e25:	push   esi
 1002e26:	call   DWORD PTR ds:0x10010c8
 1002e2c:	lea    eax,[ebp-0x20c]
 1002e32:	push   0x5c
 1002e34:	push   eax
 1002e35:	call   DWORD PTR ds:0x10011bc
 1002e3b:	pop    ecx
 1002e3c:	pop    ecx
 1002e3d:	test   eax,eax
 1002e3f:	je     0x1002e85
 1002e41:	xor    ecx,ecx
 1002e43:	push   0x1001900
 1002e48:	mov    WORD PTR [eax],cx
 1002e4b:	lea    eax,[ebp-0x20c]
 1002e51:	push   0x104
 1002e56:	push   eax
 1002e57:	call   DWORD PTR ds:0x10011c0
 1002e5d:	add    esp,0xc
 1002e60:	lea    eax,[ebp-0x20c]
 1002e66:	push   eax
 1002e67:	call   DWORD PTR ds:0x10010b4
 1002e6d:	cmp    eax,0xffffffff
 1002e70:	je     0x1002e85
 1002e72:	lea    eax,[ebp-0x20c]
 1002e78:	push   eax
 1002e79:	call   DWORD PTR ds:0x10010cc
 1002e7f:	mov    esi,eax
 1002e81:	test   esi,esi
 1002e83:	jne    0x1002e8c
 1002e85:	push   edi
 1002e86:	call   0x1002eea
 1002e8b:	pop    ecx
 1002e8c:	mov    ecx,DWORD PTR [ebp-0x4]
 1002e8f:	pop    edi
 1002e90:	mov    eax,esi
 1002e92:	xor    ecx,ebp
 1002e94:	pop    esi
 1002e95:	call   0x1004b6b
 1002e9a:	leave  
 1002e9b:	ret    
 1002e9c:	int3   
 1002e9d:	int3   
 1002e9e:	int3   
 1002e9f:	int3   
 1002ea0:	int3   
 1002ea1:	mov    edi,edi
 1002ea3:	push   ebp
 1002ea4:	mov    ebp,esp
 1002ea6:	push   esi
 1002ea7:	push   0x1001920
 1002eac:	push   DWORD PTR [ebp+0x8]
 1002eaf:	or     esi,0xffffffff
 1002eb2:	call   DWORD PTR ds:0x10010d8
 1002eb8:	test   eax,eax
 1002eba:	je     0x1002ed7
 1002ebc:	push   0x0
 1002ebe:	push   0x10012b0
 1002ec3:	push   DWORD PTR [ebp+0x14]
 1002ec6:	push   0x1001928
 1002ecb:	push   DWORD PTR [ebp+0x10]
 1002ece:	call   eax
 1002ed0:	add    esp,0x14
 1002ed3:	mov    esi,eax
 1002ed5:	jmp    0x1002ee0
 1002ed7:	push   DWORD PTR [ebp+0xc]
 1002eda:	call   0x1002eea
 1002edf:	pop    ecx
 1002ee0:	mov    eax,esi
 1002ee2:	pop    esi
 1002ee3:	pop    ebp
 1002ee4:	ret    
 1002ee5:	int3   
 1002ee6:	int3   
 1002ee7:	int3   
 1002ee8:	int3   
 1002ee9:	int3   
 1002eea:	mov    edi,edi
 1002eec:	push   ebp
 1002eed:	mov    ebp,esp
 1002eef:	sub    esp,0xfa4
 1002ef5:	mov    eax,ds:0x100907c
 1002efa:	xor    eax,ebp
 1002efc:	mov    DWORD PTR [ebp-0x4],eax
 1002eff:	push   ebx
 1002f00:	push   edi
 1002f01:	mov    edi,DWORD PTR [ebp+0x8]
 1002f04:	mov    ebx,0x3e8
 1002f09:	push   ebx
 1002f0a:	lea    eax,[ebp-0xfa4]
 1002f10:	push   eax
 1002f11:	push   0x68
 1002f13:	push   edi
 1002f14:	call   DWORD PTR ds:0x10011e4
 1002f1a:	push   ebx
 1002f1b:	lea    eax,[ebp-0x7d4]
 1002f21:	push   eax
 1002f22:	push   0x6d
 1002f24:	push   edi
 1002f25:	call   DWORD PTR ds:0x10011e4
 1002f2b:	push   0x10
 1002f2d:	lea    eax,[ebp-0x7d4]
 1002f33:	push   eax
 1002f34:	lea    eax,[ebp-0xfa4]
 1002f3a:	push   eax
 1002f3b:	push   0x0
 1002f3d:	call   DWORD PTR ds:0x10011e8
 1002f43:	mov    ecx,DWORD PTR [ebp-0x4]
 1002f46:	pop    edi
 1002f47:	xor    ecx,ebp
 1002f49:	pop    ebx
 1002f4a:	call   0x1004b6b
 1002f4f:	leave  
 1002f50:	ret    
 1002f51:	int3   
 1002f52:	int3   
 1002f53:	int3   
 1002f54:	int3   
 1002f55:	int3   
 1002f56:	push   0x40
 1002f58:	push   0x66
 1002f5a:	call   0x100305c
 1002f5f:	pop    ecx
 1002f60:	pop    ecx
 1002f61:	ret    
 1002f62:	int3   
 1002f63:	int3   
 1002f64:	int3   
 1002f65:	int3   
 1002f66:	int3   
 1002f67:	mov    edi,edi
 1002f69:	push   ebp
 1002f6a:	mov    ebp,esp
 1002f6c:	sub    esp,0x210
 1002f72:	mov    eax,ds:0x100907c
 1002f77:	xor    eax,ebp
 1002f79:	mov    DWORD PTR [ebp-0x4],eax
 1002f7c:	push   ebx
 1002f7d:	push   esi
 1002f7e:	push   edi
 1002f7f:	push   0x69
 1002f81:	pop    edi
 1002f82:	xor    eax,eax
 1002f84:	push   0x206
 1002f89:	push   eax
 1002f8a:	mov    WORD PTR [ebp-0x20c],ax
 1002f91:	lea    eax,[ebp-0x20a]
 1002f97:	mov    esi,0x104
 1002f9c:	push   eax
 1002f9d:	xor    bl,bl
 1002f9f:	mov    DWORD PTR [ebp-0x210],esi
 1002fa5:	call   0x1004cc4
 1002faa:	add    esp,0xc
 1002fad:	lea    eax,[ebp-0x210]
 1002fb3:	push   eax
 1002fb4:	lea    eax,[ebp-0x20c]
 1002fba:	push   eax
 1002fbb:	push   0x1001848
 1002fc0:	push   0x0
 1002fc2:	call   0x1005837
 1002fc7:	test   eax,eax
 1002fc9:	je     0x1003027
 1002fcb:	push   0x1001860
 1002fd0:	push   esi
 1002fd1:	lea    eax,[ebp-0x20c]
 1002fd7:	push   eax
 1002fd8:	call   0x1002622
 1002fdd:	test   eax,eax
 1002fdf:	js     0x1003027
 1002fe1:	lea    eax,[ebp-0x20c]
 1002fe7:	push   eax
 1002fe8:	call   DWORD PTR ds:0x10010cc
 1002fee:	mov    esi,eax
 1002ff0:	test   esi,esi
 1002ff2:	je     0x100303c
 1002ff4:	push   0x100187c
 1002ff9:	push   esi
 1002ffa:	call   DWORD PTR ds:0x10010d8
 1003000:	test   eax,eax
 1003002:	je     0x100302d
 1003004:	push   0xa1d58f2b
 1003009:	call   eax
 100300b:	cmp    eax,0xffffffff
 100300e:	je     0x100302d
 1003010:	cmp    eax,0xfffffffe
 1003013:	je     0x100302d
 1003015:	cmp    eax,0xffffff00
 100301a:	jne    0x1003021
 100301c:	push   0x6a
 100301e:	pop    edi
 100301f:	jmp    0x100302d
 1003021:	mov    bl,0x1
 1003023:	xor    edi,edi
 1003025:	jmp    0x100302d
 1003027:	mov    esi,DWORD PTR [ebp-0x210]
 100302d:	test   esi,esi
 100302f:	je     0x1003038
 1003031:	push   esi
 1003032:	call   DWORD PTR ds:0x10010dc
 1003038:	test   bl,bl
 100303a:	jne    0x1003046
 100303c:	push   0x10
 100303e:	push   edi
 100303f:	call   0x100305c
 1003044:	pop    ecx
 1003045:	pop    ecx
 1003046:	mov    ecx,DWORD PTR [ebp-0x4]
 1003049:	pop    edi
 100304a:	pop    esi
 100304b:	mov    al,bl
 100304d:	xor    ecx,ebp
 100304f:	pop    ebx
 1003050:	call   0x1004b6b
 1003055:	leave  
 1003056:	ret    
 1003057:	int3   
 1003058:	int3   
 1003059:	int3   
 100305a:	int3   
 100305b:	int3   
 100305c:	push   0x28
 100305e:	mov    eax,0x1007149
 1003063:	call   0x1004bc3
 1003068:	xor    ebx,ebx
 100306a:	mov    DWORD PTR [ebp-0x4],ebx
 100306d:	push   0x1001780
 1003072:	lea    ecx,[ebp-0x24]
 1003075:	call   0x1002b0e
 100307a:	mov    BYTE PTR [ebp-0x4],0x1
 100307e:	push   0x1001938
 1003083:	lea    ecx,[ebp-0x20]
 1003086:	call   0x1002b0e
 100308b:	mov    BYTE PTR [ebp-0x4],0x2
 100308f:	lea    eax,[ebp-0x20]
 1003092:	push   eax
 1003093:	lea    eax,[ebp-0x24]
 1003096:	push   eax
 1003097:	lea    ecx,[ebp-0x34]
 100309a:	call   0x1003540
 100309f:	mov    BYTE PTR [ebp-0x4],0x3
 10030a3:	mov    esi,0x10090a8
 10030a8:	push   esi
 10030a9:	lea    ecx,[ebp-0x1c]
 10030ac:	call   0x10027a3
 10030b1:	mov    BYTE PTR [ebp-0x4],0x4
 10030b5:	mov    BYTE PTR [ebp-0x4],0x5
 10030b9:	lea    eax,[ebp-0x1c]
 10030bc:	push   eax
 10030bd:	push   0x65
 10030bf:	lea    ecx,[ebp-0x34]
 10030c2:	call   0x1003621
 10030c7:	test   al,al
 10030c9:	jne    0x10030dc
 10030cb:	mov    BYTE PTR [ebp-0x11],bl
 10030ce:	push   0x10077a0
 10030d3:	lea    eax,[ebp-0x11]
 10030d6:	push   eax
 10030d7:	call   0x1004b80
 10030dc:	push   esi
 10030dd:	lea    ecx,[ebp-0x18]
 10030e0:	call   0x10027a3
 10030e5:	mov    BYTE PTR [ebp-0x4],0x6
 10030e9:	mov    BYTE PTR [ebp-0x4],0x7
 10030ed:	lea    eax,[ebp-0x18]
 10030f0:	push   eax
 10030f1:	push   DWORD PTR [ebp+0x8]
 10030f4:	lea    ecx,[ebp-0x34]
 10030f7:	call   0x1003621
 10030fc:	test   al,al
 10030fe:	jne    0x100310d
 1003100:	mov    BYTE PTR [ebp-0x12],bl
 1003103:	push   0x10077a0
 1003108:	lea    eax,[ebp-0x12]
 100310b:	jmp    0x10030d6
 100310d:	push   0x40
 100310f:	push   DWORD PTR [ebp-0x1c]
 1003112:	push   DWORD PTR [ebp-0x18]
 1003115:	push   ebx
 1003116:	call   DWORD PTR ds:0x10011e8
 100311c:	mov    BYTE PTR [ebp-0x4],0x8
 1003120:	mov    BYTE PTR [ebp-0x4],0x5
 1003124:	mov    ecx,DWORD PTR [ebp-0x18]
 1003127:	lea    ecx,[ecx-0x10]
 100312a:	call   0x1002707
 100312f:	mov    BYTE PTR [ebp-0x4],0x9
 1003133:	mov    BYTE PTR [ebp-0x4],0x3
 1003137:	mov    ecx,DWORD PTR [ebp-0x1c]
 100313a:	lea    ecx,[ecx-0x10]
 100313d:	call   0x1002707
 1003142:	mov    BYTE PTR [ebp-0x4],0x2
 1003146:	lea    ecx,[ebp-0x34]
 1003149:	call   0x10035b1
 100314e:	mov    BYTE PTR [ebp-0x4],0xa
 1003152:	mov    BYTE PTR [ebp-0x4],0x1
 1003156:	mov    ecx,DWORD PTR [ebp-0x20]
 1003159:	lea    ecx,[ecx-0x10]
 100315c:	call   0x1002707
 1003161:	mov    BYTE PTR [ebp-0x4],0xb
 1003165:	mov    BYTE PTR [ebp-0x4],bl
 1003168:	mov    ecx,DWORD PTR [ebp-0x24]
 100316b:	lea    ecx,[ecx-0x10]
 100316e:	call   0x1002707
 1003173:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003177:	call   0x1004c77
 100317c:	ret    
 100317d:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003181:	mov    eax,0x1003177
 1003186:	ret    
 1003187:	int3   
 1003188:	int3   
 1003189:	int3   
 100318a:	int3   
 100318b:	int3   
 100318c:	mov    edi,edi
 100318e:	push   ebp
 100318f:	mov    ebp,esp
 1003191:	push   esi
 1003192:	mov    esi,ecx
 1003194:	cmp    DWORD PTR [esi],0x0
 1003197:	je     0x10031cf
 1003199:	push   0x1001988
 100319e:	call   DWORD PTR ds:0x10010ac
 10031a4:	test   eax,eax
 10031a6:	je     0x10031dd
 10031a8:	push   0x10019a4
 10031ad:	push   eax
 10031ae:	call   DWORD PTR ds:0x10010d8
 10031b4:	test   eax,eax
 10031b6:	je     0x10031dd
 10031b8:	push   0x0
 10031ba:	push   DWORD PTR [esi]
 10031bc:	push   DWORD PTR [ebp+0x18]
 10031bf:	push   DWORD PTR [ebp+0x14]
 10031c2:	push   DWORD PTR [ebp+0x10]
 10031c5:	push   DWORD PTR [ebp+0xc]
 10031c8:	push   DWORD PTR [ebp+0x8]
 10031cb:	call   eax
 10031cd:	jmp    0x10031e0
 10031cf:	cmp    DWORD PTR [esi+0x4],0x0
 10031d3:	je     0x10031dd
 10031d5:	pop    esi
 10031d6:	pop    ebp
 10031d7:	jmp    DWORD PTR ds:0x1001004
 10031dd:	xor    eax,eax
 10031df:	inc    eax
 10031e0:	pop    esi
 10031e1:	pop    ebp
 10031e2:	ret    0x14
 10031e5:	int3   
 10031e6:	int3   
 10031e7:	int3   
 10031e8:	int3   
 10031e9:	int3   
 10031ea:	jmp    0x10032fb
 10031ef:	int3   
 10031f0:	int3   
 10031f1:	int3   
 10031f2:	int3   
 10031f3:	int3   
 10031f4:	mov    edi,edi
 10031f6:	push   ebp
 10031f7:	mov    ebp,esp
 10031f9:	push   ecx
 10031fa:	lea    eax,[ebp-0x4]
 10031fd:	push   eax
 10031fe:	push   DWORD PTR [ebp+0xc]
 1003201:	lea    eax,[ebp+0xc]
 1003204:	push   eax
 1003205:	push   0x0
 1003207:	push   DWORD PTR [ebp+0x8]
 100320a:	mov    DWORD PTR [ebp-0x4],0x4
 1003211:	push   DWORD PTR [ecx]
 1003213:	call   DWORD PTR ds:0x1001008
 1003219:	test   eax,eax
 100321b:	jne    0x100322a
 100321d:	mov    eax,DWORD PTR [ebp+0xc]
 1003220:	sub    eax,0x4
 1003223:	neg    eax
 1003225:	sbb    eax,eax
 1003227:	and    eax,0xd
 100322a:	leave  
 100322b:	ret    0x8
 100322e:	int3   
 100322f:	int3   
 1003230:	int3   
 1003231:	int3   
 1003232:	int3   
 1003233:	mov    edi,edi
 1003235:	push   ebp
 1003236:	mov    ebp,esp
 1003238:	push   ecx
 1003239:	push   ebx
 100323a:	push   esi
 100323b:	mov    esi,DWORD PTR [ebp+0xc]
 100323e:	push   edi
 100323f:	mov    edi,DWORD PTR [ebp+0x10]
 1003242:	mov    eax,DWORD PTR [edi]
 1003244:	add    eax,eax
 1003246:	mov    DWORD PTR [ebp-0x4],eax
 1003249:	lea    eax,[ebp-0x4]
 100324c:	push   eax
 100324d:	push   esi
 100324e:	lea    eax,[ebp+0x10]
 1003251:	push   eax
 1003252:	xor    ebx,ebx
 1003254:	push   ebx
 1003255:	push   DWORD PTR [ebp+0x8]
 1003258:	mov    DWORD PTR [edi],ebx
 100325a:	push   DWORD PTR [ecx]
 100325c:	call   DWORD PTR ds:0x1001008
 1003262:	test   eax,eax
 1003264:	jne    0x100329f
 1003266:	cmp    DWORD PTR [ebp+0x10],0x1
 100326a:	je     0x1003277
 100326c:	cmp    DWORD PTR [ebp+0x10],0x2
 1003270:	je     0x1003277
 1003272:	push   0xd
 1003274:	pop    eax
 1003275:	jmp    0x100329f
 1003277:	mov    ecx,DWORD PTR [ebp-0x4]
 100327a:	test   esi,esi
 100327c:	je     0x1003299
 100327e:	test   ecx,ecx
 1003280:	je     0x1003294
 1003282:	test   cl,0x1
 1003285:	jne    0x1003272
 1003287:	mov    eax,ecx
 1003289:	shr    eax,1
 100328b:	cmp    WORD PTR [esi+eax*2-0x2],bx
 1003290:	je     0x1003299
 1003292:	jmp    0x1003272
 1003294:	xor    eax,eax
 1003296:	mov    WORD PTR [esi],ax
 1003299:	shr    ecx,1
 100329b:	mov    DWORD PTR [edi],ecx
 100329d:	xor    eax,eax
 100329f:	pop    edi
 10032a0:	pop    esi
 10032a1:	pop    ebx
 10032a2:	leave  
 10032a3:	ret    0xc
 10032a6:	int3   
 10032a7:	int3   
 10032a8:	int3   
 10032a9:	int3   
 10032aa:	int3   
 10032ab:	mov    edi,edi
 10032ad:	push   ebp
 10032ae:	mov    ebp,esp
 10032b0:	push   ecx
 10032b1:	push   esi
 10032b2:	lea    eax,[ebp-0x4]
 10032b5:	push   eax
 10032b6:	push   DWORD PTR [ebp+0x10]
 10032b9:	xor    edx,edx
 10032bb:	push   edx
 10032bc:	push   DWORD PTR [ebp+0xc]
 10032bf:	mov    esi,ecx
 10032c1:	mov    ecx,DWORD PTR [esi+0x8]
 10032c4:	push   DWORD PTR [ebp+0x8]
 10032c7:	mov    DWORD PTR [ebp-0x4],edx
 10032ca:	test   ecx,ecx
 10032cc:	je     0x10032d5
 10032ce:	call   0x100318c
 10032d3:	jmp    0x10032db
 10032d5:	call   DWORD PTR ds:0x1001004
 10032db:	mov    ecx,eax
 10032dd:	test   ecx,ecx
 10032df:	jne    0x10032ef
 10032e1:	mov    ecx,esi
 10032e3:	call   0x10032fb
 10032e8:	mov    ecx,eax
 10032ea:	mov    eax,DWORD PTR [ebp-0x4]
 10032ed:	mov    DWORD PTR [esi],eax
 10032ef:	mov    eax,ecx
 10032f1:	pop    esi
 10032f2:	leave  
 10032f3:	ret    0xc
 10032f6:	int3   
 10032f7:	int3   
 10032f8:	int3   
 10032f9:	int3   
 10032fa:	int3   
 10032fb:	mov    edi,edi
 10032fd:	push   esi
 10032fe:	mov    esi,ecx
 1003300:	xor    eax,eax
 1003302:	cmp    DWORD PTR [esi],eax
 1003304:	je     0x1003311
 1003306:	push   DWORD PTR [esi]
 1003308:	call   DWORD PTR ds:0x1001000
 100330e:	and    DWORD PTR [esi],0x0
 1003311:	and    DWORD PTR [esi+0x4],0x0
 1003315:	pop    esi
 1003316:	ret    
 1003317:	int3   
 1003318:	int3   
 1003319:	int3   
 100331a:	int3   
 100331b:	int3   
 100331c:	ret    
 100331d:	int3   
 100331e:	int3   
 100331f:	int3   
 1003320:	int3   
 1003321:	int3   
 1003322:	mov    edi,edi
 1003324:	push   ebp
 1003325:	mov    ebp,esp
 1003327:	mov    eax,DWORD PTR [ebp+0x8]
 100332a:	push   ebx
 100332b:	mov    ebx,ecx
 100332d:	mov    ecx,DWORD PTR [eax]
 100332f:	push   edi
 1003330:	mov    edi,DWORD PTR [ebx]
 1003332:	lea    edx,[ecx-0x10]
 1003335:	sub    edi,0x10
 1003338:	cmp    edx,edi
 100333a:	je     0x100336c
 100333c:	cmp    DWORD PTR [edi+0xc],0x0
 1003340:	jl     0x1003361
 1003342:	mov    eax,DWORD PTR [edx]
 1003344:	cmp    eax,DWORD PTR [edi]
 1003346:	jne    0x1003361
 1003348:	push   esi
 1003349:	push   edx
 100334a:	call   0x1002aa9
 100334f:	pop    ecx
 1003350:	mov    ecx,edi
 1003352:	mov    esi,eax
 1003354:	call   0x1002707
 1003359:	lea    eax,[esi+0x10]
 100335c:	mov    DWORD PTR [ebx],eax
 100335e:	pop    esi
 100335f:	jmp    0x100336c
 1003361:	push   DWORD PTR [ecx-0xc]
 1003364:	push   ecx
 1003365:	mov    ecx,ebx
 1003367:	call   0x100282e
 100336c:	pop    edi
 100336d:	mov    eax,ebx
 100336f:	pop    ebx
 1003370:	pop    ebp
 1003371:	ret    0x4
 1003374:	int3   
 1003375:	int3   
 1003376:	int3   
 1003377:	int3   
 1003378:	int3   
 1003379:	mov    edi,edi
 100337b:	push   ebp
 100337c:	mov    ebp,esp
 100337e:	mov    ecx,DWORD PTR [ebp+0x8]
 1003381:	push   ebx
 1003382:	mov    ebx,DWORD PTR [ebp+0x10]
 1003385:	push   esi
 1003386:	push   edi
 1003387:	mov    edi,DWORD PTR [ebp+0x18]
 100338a:	lea    eax,[ebx+edi*1]
 100338d:	push   eax
 100338e:	call   0x100299c
 1003393:	push   ebx
 1003394:	push   DWORD PTR [ebp+0xc]
 1003397:	mov    esi,eax
 1003399:	push   ebx
 100339a:	push   esi
 100339b:	call   0x10028ad
 10033a0:	push   edi
 10033a1:	push   DWORD PTR [ebp+0x14]
 10033a4:	lea    eax,[esi+ebx*2]
 10033a7:	push   edi
 10033a8:	push   eax
 10033a9:	call   0x10028ad
 10033ae:	mov    ecx,DWORD PTR [ebp+0x8]
 10033b1:	add    esp,0x20
 10033b4:	lea    eax,[ebx+edi*1]
 10033b7:	push   eax
 10033b8:	call   0x1002a77
 10033bd:	pop    edi
 10033be:	pop    esi
 10033bf:	pop    ebx
 10033c0:	pop    ebp
 10033c1:	ret    
 10033c2:	int3   
 10033c3:	int3   
 10033c4:	int3   
 10033c5:	int3   
 10033c6:	int3   
 10033c7:	mov    edi,edi
 10033c9:	push   ebp
 10033ca:	mov    ebp,esp
 10033cc:	mov    ecx,DWORD PTR [ebp+0x8]
 10033cf:	lea    eax,[ebp+0x10]
 10033d2:	push   eax
 10033d3:	push   DWORD PTR [ebp+0xc]
 10033d6:	call   0x10033e2
 10033db:	pop    ebp
 10033dc:	ret    
 10033dd:	int3   
 10033de:	int3   
 10033df:	int3   
 10033e0:	int3   
 10033e1:	int3   
 10033e2:	mov    edi,edi
 10033e4:	push   ebp
 10033e5:	mov    ebp,esp
 10033e7:	cmp    DWORD PTR [ebp+0x8],0x0
 10033eb:	push   ebx
 10033ec:	push   edi
 10033ed:	mov    ebx,ecx
 10033ef:	jne    0x10033fb
 10033f1:	push   0x80070057
 10033f6:	call   0x100243d
 10033fb:	push   DWORD PTR [ebp+0xc]
 10033fe:	push   DWORD PTR [ebp+0x8]
 1003401:	call   DWORD PTR ds:0x1001194
 1003407:	mov    edi,eax
 1003409:	pop    ecx
 100340a:	pop    ecx
 100340b:	test   edi,edi
 100340d:	jns    0x1003416
 100340f:	push   0x80004005
 1003414:	jmp    0x10033f6
 1003416:	push   edi
 1003417:	mov    ecx,ebx
 1003419:	call   0x100299c
 100341e:	push   DWORD PTR [ebp+0xc]
 1003421:	lea    ecx,[edi+0x1]
 1003424:	push   DWORD PTR [ebp+0x8]
 1003427:	push   ecx
 1003428:	push   eax
 1003429:	call   DWORD PTR ds:0x1001198
 100342f:	add    esp,0x10
 1003432:	push   edi
 1003433:	mov    ecx,ebx
 1003435:	call   0x1002a77
 100343a:	pop    edi
 100343b:	pop    ebx
 100343c:	pop    ebp
 100343d:	ret    0x8
 1003440:	int3   
 1003441:	int3   
 1003442:	int3   
 1003443:	int3   
 1003444:	int3   
 1003445:	push   0x4
 1003447:	mov    eax,0x100718a
 100344c:	call   0x1004b8b
 1003451:	and    DWORD PTR [ebp-0x4],0x0
 1003455:	mov    esi,DWORD PTR [ebp+0xc]
 1003458:	and    DWORD PTR [ebp-0x10],0x0
 100345c:	mov    ecx,esi
 100345e:	call   0x1002bb2
 1003463:	mov    ecx,DWORD PTR [ebp+0x8]
 1003466:	push   eax
 1003467:	call   0x10027a3
 100346c:	and    DWORD PTR [ebp-0x4],0x0
 1003470:	push   DWORD PTR [ebp+0x10]
 1003473:	mov    esi,DWORD PTR [esi]
 1003475:	mov    DWORD PTR [ebp-0x10],0x1
 100347c:	call   0x10028fb
 1003481:	push   eax
 1003482:	push   DWORD PTR [ebp+0x10]
 1003485:	push   DWORD PTR [esi-0xc]
 1003488:	push   esi
 1003489:	push   DWORD PTR [ebp+0x8]
 100348c:	call   0x1003379
 1003491:	mov    eax,DWORD PTR [ebp+0x8]
 1003494:	add    esp,0x18
 1003497:	call   0x1004c77
 100349c:	ret    
 100349d:	int3   
 100349e:	int3   
 100349f:	int3   
 10034a0:	int3   
 10034a1:	int3   
 10034a2:	push   0x4
 10034a4:	mov    eax,0x10071b3
 10034a9:	call   0x1004b8b
 10034ae:	mov    DWORD PTR [ebp-0x10],ecx
 10034b1:	mov    DWORD PTR [ecx],0x10019bc
 10034b7:	or     DWORD PTR [ebp-0x4],0xffffffff
 10034bb:	call   DWORD PTR ds:0x1001188
 10034c1:	call   0x1004c77
 10034c6:	ret    
 10034c7:	int3   
 10034c8:	int3   
 10034c9:	int3   
 10034ca:	int3   
 10034cb:	int3   
 10034cc:	push   0x4
 10034ce:	mov    eax,0x10071dc
 10034d3:	call   0x1004b8b
 10034d8:	mov    esi,ecx
 10034da:	mov    DWORD PTR [ebp-0x10],esi
 10034dd:	push   DWORD PTR [ebp+0x8]
 10034e0:	call   DWORD PTR ds:0x100118c
 10034e6:	and    DWORD PTR [ebp-0x4],0x0
 10034ea:	mov    DWORD PTR [esi],0x10019bc
 10034f0:	or     DWORD PTR [ebp-0x4],0xffffffff
 10034f4:	mov    eax,esi
 10034f6:	call   0x1004c77
 10034fb:	ret    0x4
 10034fe:	int3   
 10034ff:	int3   
 1003500:	int3   
 1003501:	int3   
 1003502:	int3   
 1003503:	push   0x4
 1003505:	mov    eax,0x1007205
 100350a:	call   0x1004b8b
 100350f:	mov    esi,ecx
 1003511:	mov    DWORD PTR [ebp-0x10],esi
 1003514:	mov    DWORD PTR [esi],0x10019bc
 100351a:	or     DWORD PTR [ebp-0x4],0xffffffff
 100351e:	call   DWORD PTR ds:0x1001188
 1003524:	test   BYTE PTR [ebp+0x8],0x1
 1003528:	je     0x1003531
 100352a:	push   esi
 100352b:	call   0x1004b30
 1003530:	pop    ecx
 1003531:	mov    eax,esi
 1003533:	call   0x1004c77
 1003538:	ret    0x4
 100353b:	int3   
 100353c:	int3   
 100353d:	int3   
 100353e:	int3   
 100353f:	int3   
 1003540:	push   0x8
 1003542:	mov    eax,0x100724b
 1003547:	call   0x1004b8b
 100354c:	mov    ebx,ecx
 100354e:	mov    DWORD PTR [ebp-0x10],ebx
 1003551:	lea    edi,[ebx+0x8]
 1003554:	push   0x10090a8
 1003559:	mov    ecx,edi
 100355b:	mov    DWORD PTR [ebx],0x10019c4
 1003561:	mov    DWORD PTR [ebp-0x14],edi
 1003564:	call   0x10027a3
 1003569:	mov    DWORD PTR [ebp-0x4],0x1
 1003570:	lea    esi,[ebx+0xc]
 1003573:	push   0x10090a8
 1003578:	mov    ecx,esi
 100357a:	mov    DWORD PTR [ebp-0x14],esi
 100357d:	call   0x10027a3
 1003582:	mov    BYTE PTR [ebp-0x4],0x3
 1003586:	push   DWORD PTR [ebp+0x8]
 1003589:	and    DWORD PTR [ebx+0x4],0x0
 100358d:	mov    ecx,edi
 100358f:	call   0x1003322
 1003594:	push   DWORD PTR [ebp+0xc]
 1003597:	mov    ecx,esi
 1003599:	call   0x1003322
 100359e:	or     DWORD PTR [ebp-0x4],0xffffffff
 10035a2:	mov    eax,ebx
 10035a4:	call   0x1004c77
 10035a9:	ret    0x8
 10035ac:	int3   
 10035ad:	int3   
 10035ae:	int3   
 10035af:	int3   
 10035b0:	int3   
 10035b1:	push   0x8
 10035b3:	mov    eax,0x1007291
 10035b8:	call   0x1004b8b
 10035bd:	mov    esi,ecx
 10035bf:	mov    DWORD PTR [ebp-0x10],esi
 10035c2:	mov    DWORD PTR [esi],0x10019c4
 10035c8:	mov    DWORD PTR [ebp-0x4],0x1
 10035cf:	mov    eax,DWORD PTR [esi+0x4]
 10035d2:	test   eax,eax
 10035d4:	je     0x10035e6
 10035d6:	cmp    eax,0xffffffff
 10035d9:	je     0x10035e6
 10035db:	push   eax
 10035dc:	call   DWORD PTR ds:0x10010dc
 10035e2:	and    DWORD PTR [esi+0x4],0x0
 10035e6:	mov    BYTE PTR [ebp-0x4],0x0
 10035ea:	lea    ecx,[esi+0xc]
 10035ed:	mov    DWORD PTR [ebp-0x14],ecx
 10035f0:	mov    BYTE PTR [ebp-0x4],0x0
 10035f4:	mov    ecx,DWORD PTR [ecx]
 10035f6:	sub    ecx,0x10
 10035f9:	call   0x1002707
 10035fe:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003602:	lea    ecx,[esi+0x8]
 1003605:	mov    DWORD PTR [ebp-0x14],ecx
 1003608:	or     DWORD PTR [ebp-0x4],0xffffffff
 100360c:	mov    ecx,DWORD PTR [ecx]
 100360e:	sub    ecx,0x10
 1003611:	call   0x1002707
 1003616:	call   0x1004c77
 100361b:	ret    
 100361c:	int3   
 100361d:	int3   
 100361e:	int3   
 100361f:	int3   
 1003620:	int3   
 1003621:	push   0x8
 1003623:	mov    eax,0x10072b1
 1003628:	call   0x1004bc3
 100362d:	xor    ebx,ebx
 100362f:	call   0x1003679
 1003634:	mov    DWORD PTR [ebp-0x4],ebx
 1003637:	cmp    eax,0xffffffff
 100363a:	je     0x1003653
 100363c:	push   DWORD PTR [ebp+0x8]
 100363f:	push   eax
 1003640:	mov    ecx,DWORD PTR [ebp+0xc]
 1003643:	call   0x1002c32
 1003648:	dec    eax
 1003649:	neg    eax
 100364b:	sbb    eax,eax
 100364d:	lea    ebx,[eax+0x1]
 1003650:	mov    BYTE PTR [ebp-0x11],bl
 1003653:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003657:	jmp    0x100366a
 1003659:	mov    BYTE PTR [ebp-0x11],0x0
 100365d:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003661:	mov    eax,0x1003667
 1003666:	ret    
 1003667:	mov    bl,BYTE PTR [ebp-0x11]
 100366a:	mov    al,bl
 100366c:	call   0x1004c77
 1003671:	ret    0x8
 1003674:	int3   
 1003675:	int3   
 1003676:	int3   
 1003677:	int3   
 1003678:	int3   
 1003679:	push   0x4
 100367b:	mov    eax,0x10072e9
 1003680:	call   0x1004b8b
 1003685:	mov    edi,ecx
 1003687:	cmp    DWORD PTR [edi+0x4],0x0
 100368b:	jne    0x10036d1
 100368d:	push   0x10090a8
 1003692:	lea    ecx,[ebp-0x10]
 1003695:	call   0x10027a3
 100369a:	mov    DWORD PTR [ebp-0x4],0x1
 10036a1:	lea    eax,[ebp-0x10]
 10036a4:	push   eax
 10036a5:	mov    ecx,edi
 10036a7:	call   0x10036df
 10036ac:	mov    esi,DWORD PTR [ebp-0x10]
 10036af:	test   al,al
 10036b1:	je     0x10036c5
 10036b3:	push   esi
 10036b4:	call   DWORD PTR ds:0x10010cc
 10036ba:	mov    DWORD PTR [edi+0x4],eax
 10036bd:	test   eax,eax
 10036bf:	jne    0x10036c5
 10036c1:	or     DWORD PTR [edi+0x4],0xffffffff
 10036c5:	or     DWORD PTR [ebp-0x4],0xffffffff
 10036c9:	lea    ecx,[esi-0x10]
 10036cc:	call   0x1002707
 10036d1:	mov    eax,DWORD PTR [edi+0x4]
 10036d4:	call   0x1004c77
 10036d9:	ret    
 10036da:	int3   
 10036db:	int3   
 10036dc:	int3   
 10036dd:	int3   
 10036de:	int3   
 10036df:	push   0x14
 10036e1:	mov    eax,0x1007339
 10036e6:	call   0x1004bc3
 10036eb:	mov    esi,ecx
 10036ed:	xor    bl,bl
 10036ef:	and    DWORD PTR [ebp-0x4],0x0
 10036f3:	mov    edi,0x10090a8
 10036f8:	push   edi
 10036f9:	lea    ecx,[ebp-0x18]
 10036fc:	call   0x10027a3
 1003701:	mov    BYTE PTR [ebp-0x4],0x1
 1003705:	mov    BYTE PTR [ebp-0x4],0x2
 1003709:	push   edi
 100370a:	lea    ecx,[ebp-0x1c]
 100370d:	call   0x10027a3
 1003712:	mov    BYTE PTR [ebp-0x4],0x3
 1003716:	mov    BYTE PTR [ebp-0x4],0x4
 100371a:	lea    eax,[ebp-0x1c]
 100371d:	push   eax
 100371e:	lea    eax,[ebp-0x18]
 1003721:	push   eax
 1003722:	mov    ecx,esi
 1003724:	call   0x1003c4e
 1003729:	test   al,al
 100372b:	je     0x1003766
 100372d:	lea    eax,[ebp-0x20]
 1003730:	push   eax
 1003731:	lea    eax,[ebp-0x1c]
 1003734:	push   eax
 1003735:	lea    eax,[ebp-0x18]
 1003738:	push   eax
 1003739:	mov    ecx,esi
 100373b:	call   0x10037b2
 1003740:	test   al,al
 1003742:	je     0x1003766
 1003744:	mov    edi,DWORD PTR [ebp-0x1c]
 1003747:	push   edi
 1003748:	push   DWORD PTR [ebp-0x20]
 100374b:	mov    esi,DWORD PTR [ebp-0x18]
 100374e:	push   esi
 100374f:	push   0x10019c8
 1003754:	push   DWORD PTR [ebp+0x8]
 1003757:	call   0x10033c7
 100375c:	add    esp,0x14
 100375f:	inc    bl
 1003761:	mov    BYTE PTR [ebp-0x11],bl
 1003764:	jmp    0x100376c
 1003766:	mov    esi,DWORD PTR [ebp-0x18]
 1003769:	mov    edi,DWORD PTR [ebp-0x1c]
 100376c:	mov    BYTE PTR [ebp-0x4],0x5
 1003770:	mov    BYTE PTR [ebp-0x4],0x2
 1003774:	lea    ecx,[edi-0x10]
 1003777:	call   0x1002707
 100377c:	mov    BYTE PTR [ebp-0x4],0x6
 1003780:	mov    BYTE PTR [ebp-0x4],0x0
 1003784:	lea    ecx,[esi-0x10]
 1003787:	call   0x1002707
 100378c:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003790:	jmp    0x10037a3
 1003792:	mov    BYTE PTR [ebp-0x11],0x0
 1003796:	or     DWORD PTR [ebp-0x4],0xffffffff
 100379a:	mov    eax,0x10037a0
 100379f:	ret    
 10037a0:	mov    bl,BYTE PTR [ebp-0x11]
 10037a3:	mov    al,bl
 10037a5:	call   0x1004c77
 10037aa:	ret    0x4
 10037ad:	int3   
 10037ae:	int3   
 10037af:	int3   
 10037b0:	int3   
 10037b1:	int3   
 10037b2:	push   0x1c
 10037b4:	mov    eax,0x1007361
 10037b9:	call   0x1004b8b
 10037be:	mov    edi,ecx
 10037c0:	call   0x1003b66
 10037c5:	mov    DWORD PTR [ebp-0x10],eax
 10037c8:	call   DWORD PTR ds:0x100109c
 10037ce:	mov    DWORD PTR [ebp-0x14],eax
 10037d1:	call   DWORD PTR ds:0x10010a0
 10037d7:	mov    DWORD PTR [ebp-0x18],eax
 10037da:	xor    eax,eax
 10037dc:	mov    DWORD PTR [ebp-0x28],eax
 10037df:	mov    DWORD PTR [ebp-0x24],eax
 10037e2:	mov    DWORD PTR [ebp-0x20],eax
 10037e5:	mov    DWORD PTR [ebp-0x4],eax
 10037e8:	lea    eax,[ebp-0x10]
 10037eb:	push   eax
 10037ec:	lea    ecx,[ebp-0x28]
 10037ef:	call   0x1003f7f
 10037f4:	mov    edx,DWORD PTR [ebp-0x10]
 10037f7:	mov    ecx,edx
 10037f9:	shr    ecx,0x10
 10037fc:	and    ecx,0xf
 10037ff:	mov    eax,edx
 1003801:	shl    ecx,0x10
 1003804:	mov    ebx,0x3ff
 1003809:	and    eax,ebx
 100380b:	or     ecx,eax
 100380d:	lea    esi,[ebx+0x1]
 1003810:	or     ecx,esi
 1003812:	neg    edx
 1003814:	sbb    edx,edx
 1003816:	and    edx,ecx
 1003818:	lea    eax,[ebp-0x10]
 100381b:	push   eax
 100381c:	lea    ecx,[ebp-0x28]
 100381f:	mov    DWORD PTR [ebp-0x10],edx
 1003822:	call   0x1003e77
 1003827:	lea    eax,[ebp-0x14]
 100382a:	push   eax
 100382b:	lea    ecx,[ebp-0x28]
 100382e:	call   0x1003f7f
 1003833:	mov    eax,DWORD PTR [ebp-0x14]
 1003836:	mov    ecx,eax
 1003838:	shr    ecx,0x10
 100383b:	and    ecx,0xf
 100383e:	shl    ecx,0x10
 1003841:	and    eax,ebx
 1003843:	or     ecx,eax
 1003845:	or     ecx,esi
 1003847:	lea    eax,[ebp-0x14]
 100384a:	mov    DWORD PTR [ebp-0x14],ecx
 100384d:	push   eax
 100384e:	lea    ecx,[ebp-0x28]
 1003851:	call   0x1003e77
 1003856:	lea    eax,[ebp-0x18]
 1003859:	push   eax
 100385a:	lea    ecx,[ebp-0x28]
 100385d:	call   0x1003f7f
 1003862:	mov    eax,DWORD PTR [ebp-0x18]
 1003865:	mov    ecx,eax
 1003867:	shr    ecx,0x10
 100386a:	and    ecx,0xf
 100386d:	shl    ecx,0x10
 1003870:	and    eax,ebx
 1003872:	or     ecx,eax
 1003874:	or     ecx,esi
 1003876:	lea    eax,[ebp-0x18]
 1003879:	mov    DWORD PTR [ebp-0x18],ecx
 100387c:	push   eax
 100387d:	lea    ecx,[ebp-0x28]
 1003880:	call   0x1003e77
 1003885:	lea    eax,[ebp-0x18]
 1003888:	push   eax
 1003889:	lea    ecx,[ebp-0x28]
 100388c:	mov    DWORD PTR [ebp-0x18],0x409
 1003893:	call   0x1003e77
 1003898:	mov    esi,DWORD PTR [ebp-0x28]
 100389b:	mov    edx,DWORD PTR [ebp-0x24]
 100389e:	cmp    esi,edx
 10038a0:	je     0x10038ed
 10038a2:	cmp    DWORD PTR [esi],0x0
 10038a5:	je     0x10038bf
 10038a7:	lea    eax,[esi+0x4]
 10038aa:	jmp    0x10038bb
 10038ac:	mov    ecx,DWORD PTR [esi]
 10038ae:	cmp    ecx,DWORD PTR [eax]
 10038b0:	jne    0x10038b8
 10038b2:	and    DWORD PTR [eax],0x0
 10038b5:	mov    edx,DWORD PTR [ebp-0x24]
 10038b8:	add    eax,0x4
 10038bb:	cmp    eax,edx
 10038bd:	jne    0x10038ac
 10038bf:	add    esi,0x4
 10038c2:	cmp    esi,edx
 10038c4:	jne    0x10038a2
 10038c6:	mov    esi,DWORD PTR [ebp-0x28]
 10038c9:	jmp    0x10038e9
 10038cb:	cmp    DWORD PTR [esi],0x0
 10038ce:	je     0x10038e6
 10038d0:	push   DWORD PTR [esi]
 10038d2:	mov    ecx,edi
 10038d4:	push   DWORD PTR [ebp+0xc]
 10038d7:	push   DWORD PTR [ebp+0x8]
 10038da:	call   0x1003ad7
 10038df:	test   al,al
 10038e1:	jne    0x1003915
 10038e3:	mov    edx,DWORD PTR [ebp-0x24]
 10038e6:	add    esi,0x4
 10038e9:	cmp    esi,edx
 10038eb:	jne    0x10038cb
 10038ed:	push   DWORD PTR [ebp+0x10]
 10038f0:	mov    ecx,edi
 10038f2:	push   DWORD PTR [ebp+0xc]
 10038f5:	push   DWORD PTR [ebp+0x8]
 10038f8:	call   0x1003925
 10038fd:	mov    bl,al
 10038ff:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003903:	lea    ecx,[ebp-0x28]
 1003906:	call   0x1004064
 100390b:	mov    al,bl
 100390d:	call   0x1004c77
 1003912:	ret    0xc
 1003915:	mov    ecx,DWORD PTR [esi]
 1003917:	mov    eax,DWORD PTR [ebp+0x10]
 100391a:	mov    DWORD PTR [eax],ecx
 100391c:	mov    bl,0x1
 100391e:	jmp    0x10038ff
 1003920:	int3   
 1003921:	int3   
 1003922:	int3   
 1003923:	int3   
 1003924:	int3   
 1003925:	push   0x278
 100392a:	mov    eax,0x10073c3
 100392f:	call   0x1004c39
 1003934:	mov    DWORD PTR [ebp-0x280],ecx
 100393a:	mov    eax,DWORD PTR [ebp+0x8]
 100393d:	mov    DWORD PTR [ebp-0x284],eax
 1003943:	mov    ecx,DWORD PTR [ebp+0xc]
 1003946:	mov    DWORD PTR [ebp-0x278],ecx
 100394c:	mov    ecx,DWORD PTR [ebp+0x10]
 100394f:	mov    DWORD PTR [ebp-0x27c],ecx
 1003955:	xor    bl,bl
 1003957:	and    DWORD PTR [ebp-0x270],0x0
 100395e:	and    DWORD PTR [ebp-0x4],0x0
 1003962:	push   0x10019dc
 1003967:	push   eax
 1003968:	lea    eax,[ebp-0x274]
 100396e:	push   eax
 100396f:	call   0x1003445
 1003974:	add    esp,0xc
 1003977:	mov    BYTE PTR [ebp-0x4],0x1
 100397b:	lea    eax,[ebp-0x264]
 1003981:	push   eax
 1003982:	push   DWORD PTR [ebp-0x274]
 1003988:	call   DWORD PTR ds:0x10010a8
 100398e:	mov    edi,eax
 1003990:	mov    DWORD PTR [ebp-0x270],edi
 1003996:	cmp    edi,0xffffffff
 1003999:	je     0x1003a80
 100399f:	test   BYTE PTR [ebp-0x264],0x10
 10039a6:	je     0x1003a5c
 10039ac:	lea    eax,[ebp-0x238]
 10039b2:	push   eax
 10039b3:	lea    ecx,[ebp-0x26c]
 10039b9:	call   0x1002b0e
 10039be:	mov    BYTE PTR [ebp-0x4],0x2
 10039c2:	push   0x10019e8
 10039c7:	lea    ecx,[ebp-0x26c]
 10039cd:	call   0x1002bdb
 10039d2:	test   eax,eax
 10039d4:	je     0x1003a46
 10039d6:	push   0x10019ec
 10039db:	lea    ecx,[ebp-0x26c]
 10039e1:	call   0x1002bdb
 10039e6:	test   eax,eax
 10039e8:	je     0x1003a46
 10039ea:	push   DWORD PTR [ebp-0x26c]
 10039f0:	call   DWORD PTR ds:0x100119c
 10039f6:	pop    ecx
 10039f7:	mov    esi,eax
 10039f9:	test   esi,esi
 10039fb:	je     0x1003a40
 10039fd:	push   esi
 10039fe:	push   DWORD PTR [ebp-0x278]
 1003a04:	push   DWORD PTR [ebp-0x284]
 1003a0a:	mov    ecx,DWORD PTR [ebp-0x280]
 1003a10:	call   0x1003ad7
 1003a15:	test   al,al
 1003a17:	je     0x1003a40
 1003a19:	mov    eax,DWORD PTR [ebp-0x27c]
 1003a1f:	mov    DWORD PTR [eax],esi
 1003a21:	mov    bl,0x1
 1003a23:	mov    BYTE PTR [ebp-0x265],bl
 1003a29:	mov    BYTE PTR [ebp-0x4],0x4
 1003a2d:	mov    BYTE PTR [ebp-0x4],bl
 1003a30:	mov    ecx,DWORD PTR [ebp-0x26c]
 1003a36:	lea    ecx,[ecx-0x10]
 1003a39:	call   0x1002707
 1003a3e:	jmp    0x1003a72
 1003a40:	mov    BYTE PTR [ebp-0x4],0x5
 1003a44:	jmp    0x1003a4a
 1003a46:	mov    BYTE PTR [ebp-0x4],0x3
 1003a4a:	mov    BYTE PTR [ebp-0x4],0x1
 1003a4e:	mov    ecx,DWORD PTR [ebp-0x26c]
 1003a54:	lea    ecx,[ecx-0x10]
 1003a57:	call   0x1002707
 1003a5c:	lea    eax,[ebp-0x264]
 1003a62:	push   eax
 1003a63:	push   edi
 1003a64:	call   DWORD PTR ds:0x10010a4
 1003a6a:	test   eax,eax
 1003a6c:	jne    0x100399f
 1003a72:	push   edi
 1003a73:	call   DWORD PTR ds:0x10010b0
 1003a79:	and    DWORD PTR [ebp-0x270],0x0
 1003a80:	mov    BYTE PTR [ebp-0x4],0x6
 1003a84:	mov    BYTE PTR [ebp-0x4],0x0
 1003a88:	mov    ecx,DWORD PTR [ebp-0x274]
 1003a8e:	lea    ecx,[ecx-0x10]
 1003a91:	call   0x1002707
 1003a96:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003a9a:	jmp    0x1003ac8
 1003a9c:	mov    BYTE PTR [ebp-0x265],0x0
 1003aa3:	cmp    DWORD PTR [ebp-0x270],0x0
 1003aaa:	je     0x1003ab8
 1003aac:	push   DWORD PTR [ebp-0x270]
 1003ab2:	call   DWORD PTR ds:0x10010b0
 1003ab8:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003abc:	mov    eax,0x1003ac2
 1003ac1:	ret    
 1003ac2:	mov    bl,BYTE PTR [ebp-0x265]
 1003ac8:	mov    al,bl
 1003aca:	call   0x1004ca4
 1003acf:	ret    0xc
 1003ad2:	int3   
 1003ad3:	int3   
 1003ad4:	int3   
 1003ad5:	int3   
 1003ad6:	int3   
 1003ad7:	push   0xc
 1003ad9:	mov    eax,0x1007408
 1003ade:	call   0x1004bc3
 1003ae3:	xor    bl,bl
 1003ae5:	and    DWORD PTR [ebp-0x4],0x0
 1003ae9:	push   0x10090a8
 1003aee:	lea    ecx,[ebp-0x18]
 1003af1:	call   0x10027a3
 1003af6:	mov    BYTE PTR [ebp-0x4],0x1
 1003afa:	mov    BYTE PTR [ebp-0x4],0x2
 1003afe:	mov    eax,DWORD PTR [ebp+0xc]
 1003b01:	push   DWORD PTR [eax]
 1003b03:	push   DWORD PTR [ebp+0x10]
 1003b06:	mov    eax,DWORD PTR [ebp+0x8]
 1003b09:	push   DWORD PTR [eax]
 1003b0b:	push   0x10019c8
 1003b10:	lea    eax,[ebp-0x18]
 1003b13:	push   eax
 1003b14:	call   0x10033c7
 1003b19:	add    esp,0x14
 1003b1c:	mov    esi,DWORD PTR [ebp-0x18]
 1003b1f:	push   esi
 1003b20:	call   DWORD PTR ds:0x10010b4
 1003b26:	cmp    eax,0xffffffff
 1003b29:	je     0x1003b30
 1003b2b:	inc    bl
 1003b2d:	mov    BYTE PTR [ebp-0x11],bl
 1003b30:	mov    BYTE PTR [ebp-0x4],0x3
 1003b34:	mov    BYTE PTR [ebp-0x4],0x0
 1003b38:	lea    ecx,[esi-0x10]
 1003b3b:	call   0x1002707
 1003b40:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003b44:	jmp    0x1003b57
 1003b46:	mov    BYTE PTR [ebp-0x11],0x0
 1003b4a:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003b4e:	mov    eax,0x1003b54
 1003b53:	ret    
 1003b54:	mov    bl,BYTE PTR [ebp-0x11]
 1003b57:	mov    al,bl
 1003b59:	call   0x1004c77
 1003b5e:	ret    0xc
 1003b61:	int3   
 1003b62:	int3   
 1003b63:	int3   
 1003b64:	int3   
 1003b65:	int3   
 1003b66:	push   0x1c
 1003b68:	mov    eax,0x1007458
 1003b6d:	call   0x1004bc3
 1003b72:	mov    esi,ecx
 1003b74:	xor    ebx,ebx
 1003b76:	mov    DWORD PTR [ebp-0x14],ebx
 1003b79:	mov    DWORD PTR [ebp-0x4],ebx
 1003b7c:	push   0x10090a8
 1003b81:	lea    ecx,[ebp-0x18]
 1003b84:	call   0x10027a3
 1003b89:	mov    BYTE PTR [ebp-0x4],0x1
 1003b8d:	mov    BYTE PTR [ebp-0x4],0x2
 1003b91:	push   0x10019f4
 1003b96:	lea    eax,[esi+0x8]
 1003b99:	push   eax
 1003b9a:	lea    eax,[ebp-0x1c]
 1003b9d:	push   eax
 1003b9e:	call   0x1003445
 1003ba3:	add    esp,0xc
 1003ba6:	mov    BYTE PTR [ebp-0x4],0x3
 1003baa:	push   eax
 1003bab:	lea    ecx,[ebp-0x18]
 1003bae:	call   0x1003322
 1003bb3:	mov    BYTE PTR [ebp-0x4],0x4
 1003bb7:	mov    BYTE PTR [ebp-0x4],0x2
 1003bbb:	mov    ecx,DWORD PTR [ebp-0x1c]
 1003bbe:	lea    ecx,[ecx-0x10]
 1003bc1:	call   0x1002707
 1003bc6:	mov    DWORD PTR [ebp-0x28],ebx
 1003bc9:	mov    DWORD PTR [ebp-0x24],ebx
 1003bcc:	mov    DWORD PTR [ebp-0x20],ebx
 1003bcf:	mov    BYTE PTR [ebp-0x4],0x5
 1003bd3:	push   0x20019
 1003bd8:	mov    esi,DWORD PTR [ebp-0x18]
 1003bdb:	push   esi
 1003bdc:	push   0x80000001
 1003be1:	lea    ecx,[ebp-0x28]
 1003be4:	call   0x10032ab
 1003be9:	test   eax,eax
 1003beb:	jne    0x1003c13
 1003bed:	lea    eax,[ebp-0x14]
 1003bf0:	push   eax
 1003bf1:	push   0x1001a08
 1003bf6:	lea    ecx,[ebp-0x28]
 1003bf9:	call   0x10031f4
 1003bfe:	test   eax,eax
 1003c00:	jne    0x1003c08
 1003c02:	cmp    DWORD PTR [ebp-0x14],0xffffffff
 1003c06:	jne    0x1003c0b
 1003c08:	mov    DWORD PTR [ebp-0x14],ebx
 1003c0b:	lea    ecx,[ebp-0x28]
 1003c0e:	call   0x10032fb
 1003c13:	mov    BYTE PTR [ebp-0x4],0x2
 1003c17:	lea    ecx,[ebp-0x28]
 1003c1a:	call   0x10032fb
 1003c1f:	mov    BYTE PTR [ebp-0x4],0x6
 1003c23:	mov    BYTE PTR [ebp-0x4],bl
 1003c26:	lea    ecx,[esi-0x10]
 1003c29:	call   0x1002707
 1003c2e:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003c32:	mov    eax,DWORD PTR [ebp-0x14]
 1003c35:	call   0x1004c77
 1003c3a:	ret    
 1003c3b:	and    DWORD PTR [ebp-0x14],0x0
 1003c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003c43:	mov    eax,0x1003c32
 1003c48:	ret    
 1003c49:	int3   
 1003c4a:	int3   
 1003c4b:	int3   
 1003c4c:	int3   
 1003c4d:	int3   
 1003c4e:	mov    edi,edi
 1003c50:	push   ebp
 1003c51:	mov    ebp,esp
 1003c53:	push   0xffffffff
 1003c55:	push   0x10074a4
 1003c5a:	mov    eax,fs:0x0
 1003c60:	push   eax
 1003c61:	push   ecx
 1003c62:	mov    eax,0x1024
 1003c67:	call   0x1004d40
 1003c6c:	mov    eax,ds:0x100907c
 1003c71:	xor    eax,ebp
 1003c73:	mov    DWORD PTR [ebp-0x14],eax
 1003c76:	push   ebx
 1003c77:	push   esi
 1003c78:	push   edi
 1003c79:	push   eax
 1003c7a:	lea    eax,[ebp-0xc]
 1003c7d:	mov    fs:0x0,eax
 1003c83:	mov    DWORD PTR [ebp-0x10],esp
 1003c86:	mov    esi,ecx
 1003c88:	mov    edi,DWORD PTR [ebp+0x8]
 1003c8b:	mov    eax,DWORD PTR [ebp+0xc]
 1003c8e:	mov    DWORD PTR [ebp-0x1030],eax
 1003c94:	xor    bl,bl
 1003c96:	and    DWORD PTR [ebp-0x4],0x0
 1003c9a:	push   0x10090a8
 1003c9f:	lea    ecx,[ebp-0x101c]
 1003ca5:	call   0x10027a3
 1003caa:	mov    BYTE PTR [ebp-0x4],0x1
 1003cae:	mov    BYTE PTR [ebp-0x4],0x2
 1003cb2:	push   DWORD PTR [esi+0xc]
 1003cb5:	push   DWORD PTR [esi+0x8]
 1003cb8:	push   0x1001a20
 1003cbd:	lea    eax,[ebp-0x101c]
 1003cc3:	push   eax
 1003cc4:	call   0x10033c7
 1003cc9:	add    esp,0x10
 1003ccc:	xor    eax,eax
 1003cce:	mov    DWORD PTR [ebp-0x1028],eax
 1003cd4:	mov    DWORD PTR [ebp-0x1024],eax
 1003cda:	mov    DWORD PTR [ebp-0x1020],eax
 1003ce0:	mov    BYTE PTR [ebp-0x4],0x3
 1003ce4:	push   0x20019
 1003ce9:	mov    esi,DWORD PTR [ebp-0x101c]
 1003cef:	push   esi
 1003cf0:	push   0x80000001
 1003cf5:	lea    ecx,[ebp-0x1028]
 1003cfb:	call   0x10032ab
 1003d00:	test   eax,eax
 1003d02:	jne    0x1003dc0
 1003d08:	mov    WORD PTR [ebp-0x814],ax
 1003d0f:	push   0x7fe
 1003d14:	push   eax
 1003d15:	lea    eax,[ebp-0x812]
 1003d1b:	push   eax
 1003d1c:	call   0x1004cc4
 1003d21:	add    esp,0xc
 1003d24:	mov    DWORD PTR [ebp-0x1034],0x400
 1003d2e:	lea    eax,[ebp-0x1034]
 1003d34:	push   eax
 1003d35:	lea    eax,[ebp-0x814]
 1003d3b:	push   eax
 1003d3c:	push   0x1001a68
 1003d41:	lea    ecx,[ebp-0x1028]
 1003d47:	call   0x1003233
 1003d4c:	test   eax,eax
 1003d4e:	jne    0x1003dc0
 1003d50:	mov    WORD PTR [ebp-0x1014],ax
 1003d57:	push   0x7fe
 1003d5c:	push   eax
 1003d5d:	lea    eax,[ebp-0x1012]
 1003d63:	push   eax
 1003d64:	call   0x1004cc4
 1003d69:	add    esp,0xc
 1003d6c:	mov    DWORD PTR [ebp-0x102c],0x400
 1003d76:	lea    eax,[ebp-0x102c]
 1003d7c:	push   eax
 1003d7d:	lea    eax,[ebp-0x1014]
 1003d83:	push   eax
 1003d84:	push   0x1001a78
 1003d89:	lea    ecx,[ebp-0x1028]
 1003d8f:	call   0x1003233
 1003d94:	test   eax,eax
 1003d96:	jne    0x1003dc0
 1003d98:	lea    eax,[ebp-0x814]
 1003d9e:	push   eax
 1003d9f:	mov    ecx,DWORD PTR [ebp-0x1030]
 1003da5:	call   0x1002b8a
 1003daa:	lea    eax,[ebp-0x1014]
 1003db0:	push   eax
 1003db1:	mov    ecx,edi
 1003db3:	call   0x1002b8a
 1003db8:	inc    bl
 1003dba:	mov    BYTE PTR [ebp-0x1015],bl
 1003dc0:	mov    BYTE PTR [ebp-0x4],0x2
 1003dc4:	lea    ecx,[ebp-0x1028]
 1003dca:	call   0x10032fb
 1003dcf:	mov    BYTE PTR [ebp-0x4],0x4
 1003dd3:	mov    BYTE PTR [ebp-0x4],0x0
 1003dd7:	lea    ecx,[esi-0x10]
 1003dda:	call   0x1002707
 1003ddf:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003de3:	jmp    0x1003dfc
 1003de5:	mov    BYTE PTR [ebp-0x1015],0x0
 1003dec:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003df0:	mov    eax,0x1003df6
 1003df5:	ret    
 1003df6:	mov    bl,BYTE PTR [ebp-0x1015]
 1003dfc:	mov    al,bl
 1003dfe:	mov    ecx,DWORD PTR [ebp-0xc]
 1003e01:	mov    DWORD PTR fs:0x0,ecx
 1003e08:	pop    ecx
 1003e09:	pop    edi
 1003e0a:	pop    esi
 1003e0b:	pop    ebx
 1003e0c:	mov    ecx,DWORD PTR [ebp-0x14]
 1003e0f:	xor    ecx,ebp
 1003e11:	call   0x1004b6b
 1003e16:	leave  
 1003e17:	ret    0x8
 1003e1a:	int3   
 1003e1b:	int3   
 1003e1c:	int3   
 1003e1d:	int3   
 1003e1e:	int3   
 1003e1f:	mov    edi,edi
 1003e21:	push   ebp
 1003e22:	mov    ebp,esp
 1003e24:	push   esi
 1003e25:	mov    esi,ecx
 1003e27:	call   0x10035b1
 1003e2c:	test   BYTE PTR [ebp+0x8],0x1
 1003e30:	je     0x1003e39
 1003e32:	push   esi
 1003e33:	call   0x1004b30
 1003e38:	pop    ecx
 1003e39:	mov    eax,esi
 1003e3b:	pop    esi
 1003e3c:	pop    ebp
 1003e3d:	ret    0x4
 1003e40:	int3   
 1003e41:	int3   
 1003e42:	int3   
 1003e43:	int3   
 1003e44:	int3   
 1003e45:	push   0x4
 1003e47:	mov    eax,0x10074df
 1003e4c:	call   0x1004b8b
 1003e51:	mov    ecx,DWORD PTR [ebp+0x8]
 1003e54:	mov    DWORD PTR [ebp-0x10],ecx
 1003e57:	and    DWORD PTR [ebp-0x4],0x0
 1003e5b:	test   ecx,ecx
 1003e5d:	je     0x1003e66
 1003e5f:	mov    eax,DWORD PTR [ebp+0xc]
 1003e62:	mov    eax,DWORD PTR [eax]
 1003e64:	mov    DWORD PTR [ecx],eax
 1003e66:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003e6a:	call   0x1004c77
 1003e6f:	ret    0x8
 1003e72:	int3   
 1003e73:	int3   
 1003e74:	int3   
 1003e75:	int3   
 1003e76:	int3   
 1003e77:	mov    edi,edi
 1003e79:	push   ebp
 1003e7a:	mov    ebp,esp
 1003e7c:	push   ebx
 1003e7d:	push   esi
 1003e7e:	mov    esi,ecx
 1003e80:	lea    ebx,[esi+0x4]
 1003e83:	mov    eax,DWORD PTR [ebx]
 1003e85:	push   edi
 1003e86:	mov    edi,DWORD PTR [ebp+0x8]
 1003e89:	cmp    edi,eax
 1003e8b:	jae    0x1003eaa
 1003e8d:	cmp    DWORD PTR [esi],edi
 1003e8f:	ja     0x1003eaa
 1003e91:	sub    edi,DWORD PTR [esi]
 1003e93:	sar    edi,0x2
 1003e96:	cmp    eax,DWORD PTR [esi+0x8]
 1003e99:	jne    0x1003ea2
 1003e9b:	push   0x1
 1003e9d:	call   0x1004016
 1003ea2:	mov    eax,DWORD PTR [esi]
 1003ea4:	lea    eax,[eax+edi*4]
 1003ea7:	push   eax
 1003ea8:	jmp    0x1003eb7
 1003eaa:	cmp    eax,DWORD PTR [esi+0x8]
 1003ead:	jne    0x1003eb6
 1003eaf:	push   0x1
 1003eb1:	call   0x1004016
 1003eb6:	push   edi
 1003eb7:	push   DWORD PTR [ebx]
 1003eb9:	lea    ecx,[esi+0xc]
 1003ebc:	call   0x1003e45
 1003ec1:	add    DWORD PTR [ebx],0x4
 1003ec4:	pop    edi
 1003ec5:	pop    esi
 1003ec6:	pop    ebx
 1003ec7:	pop    ebp
 1003ec8:	ret    0x4
 1003ecb:	int3   
 1003ecc:	int3   
 1003ecd:	int3   
 1003ece:	int3   
 1003ecf:	int3   
 1003ed0:	jmp    0x1004064
 1003ed5:	int3   
 1003ed6:	int3   
 1003ed7:	int3   
 1003ed8:	int3   
 1003ed9:	int3   
 1003eda:	push   0x4
 1003edc:	mov    eax,0x10074ff
 1003ee1:	call   0x1004bc3
 1003ee6:	mov    esi,ecx
 1003ee8:	mov    edi,DWORD PTR [ebp+0x8]
 1003eeb:	cmp    edi,0x3fffffff
 1003ef1:	jbe    0x1003efe
 1003ef3:	push   0x1001a84
 1003ef8:	call   DWORD PTR ds:0x1001108
 1003efe:	mov    eax,DWORD PTR [esi+0x8]
 1003f01:	sub    eax,DWORD PTR [esi]
 1003f03:	sar    eax,0x2
 1003f06:	cmp    eax,edi
 1003f08:	jae    0x1003f5f
 1003f0a:	push   0x0
 1003f0c:	push   edi
 1003f0d:	call   0x10040b1
 1003f12:	pop    ecx
 1003f13:	pop    ecx
 1003f14:	mov    ebx,eax
 1003f16:	mov    DWORD PTR [ebp+0x8],ebx
 1003f19:	and    DWORD PTR [ebp-0x4],0x0
 1003f1d:	push   ebx
 1003f1e:	push   DWORD PTR [esi+0x4]
 1003f21:	push   DWORD PTR [esi]
 1003f23:	mov    ecx,esi
 1003f25:	call   0x100408e
 1003f2a:	or     DWORD PTR [ebp-0x4],0xffffffff
 1003f2e:	mov    eax,DWORD PTR [esi+0x4]
 1003f31:	sub    eax,DWORD PTR [esi]
 1003f33:	sar    eax,0x2
 1003f36:	mov    DWORD PTR [ebp+0x8],eax
 1003f39:	cmp    DWORD PTR [esi],0x0
 1003f3c:	je     0x1003f46
 1003f3e:	push   DWORD PTR [esi]
 1003f40:	call   0x1004b30
 1003f45:	pop    ecx
 1003f46:	mov    ecx,esi
 1003f48:	call   DWORD PTR ds:0x100110c
 1003f4e:	lea    eax,[ebx+edi*4]
 1003f51:	mov    DWORD PTR [esi+0x8],eax
 1003f54:	mov    eax,DWORD PTR [ebp+0x8]
 1003f57:	lea    eax,[ebx+eax*4]
 1003f5a:	mov    DWORD PTR [esi+0x4],eax
 1003f5d:	mov    DWORD PTR [esi],ebx
 1003f5f:	call   0x1004c77
 1003f64:	ret    0x4
 1003f67:	push   DWORD PTR [ebp+0x8]
 1003f6a:	call   0x1004b30
 1003f6f:	pop    ecx
 1003f70:	push   0x0
 1003f72:	push   0x0
 1003f74:	call   0x1004b80
 1003f79:	int3   
 1003f7a:	int3   
 1003f7b:	int3   
 1003f7c:	int3   
 1003f7d:	int3   
 1003f7e:	int3   
 1003f7f:	mov    edi,edi
 1003f81:	push   ebp
 1003f82:	mov    ebp,esp
 1003f84:	push   ebx
 1003f85:	mov    ebx,DWORD PTR [ebp+0x8]
 1003f88:	push   esi
 1003f89:	mov    esi,ecx
 1003f8b:	push   edi
 1003f8c:	lea    edi,[esi+0x4]
 1003f8f:	mov    eax,DWORD PTR [edi]
 1003f91:	cmp    ebx,eax
 1003f93:	jae    0x1003fbc
 1003f95:	cmp    DWORD PTR [esi],ebx
 1003f97:	ja     0x1003fbc
 1003f99:	sub    ebx,DWORD PTR [esi]
 1003f9b:	sar    ebx,0x2
 1003f9e:	cmp    eax,DWORD PTR [esi+0x8]
 1003fa1:	jne    0x1003faa
 1003fa3:	push   0x1
 1003fa5:	call   0x1004016
 1003faa:	mov    eax,DWORD PTR [esi]
 1003fac:	lea    eax,[eax+ebx*4]
 1003faf:	push   eax
 1003fb0:	push   DWORD PTR [edi]
 1003fb2:	lea    ecx,[esi+0xc]
 1003fb5:	call   0x1004118
 1003fba:	jmp    0x1003fd2
 1003fbc:	cmp    eax,DWORD PTR [esi+0x8]
 1003fbf:	jne    0x1003fc8
 1003fc1:	push   0x1
 1003fc3:	call   0x1004016
 1003fc8:	push   ebx
 1003fc9:	push   DWORD PTR [edi]
 1003fcb:	call   0x1004176
 1003fd0:	pop    ecx
 1003fd1:	pop    ecx
 1003fd2:	add    DWORD PTR [edi],0x4
 1003fd5:	pop    edi
 1003fd6:	pop    esi
 1003fd7:	pop    ebx
 1003fd8:	pop    ebp
 1003fd9:	ret    0x4
 1003fdc:	int3   
 1003fdd:	int3   
 1003fde:	int3   
 1003fdf:	int3   
 1003fe0:	int3   
 1003fe1:	mov    edi,edi
 1003fe3:	push   ebp
 1003fe4:	mov    ebp,esp
 1003fe6:	mov    edx,DWORD PTR [ecx+0x8]
 1003fe9:	sub    edx,DWORD PTR [ecx]
 1003feb:	mov    eax,0x3fffffff
 1003ff0:	sar    edx,0x2
 1003ff3:	mov    ecx,edx
 1003ff5:	shr    ecx,1
 1003ff7:	sub    eax,ecx
 1003ff9:	cmp    eax,edx
 1003ffb:	jae    0x1004001
 1003ffd:	xor    edx,edx
 1003fff:	jmp    0x1004003
 1004001:	add    edx,ecx
 1004003:	cmp    edx,DWORD PTR [ebp+0x8]
 1004006:	jae    0x100400b
 1004008:	mov    edx,DWORD PTR [ebp+0x8]
 100400b:	mov    eax,edx
 100400d:	pop    ebp
 100400e:	ret    0x4
 1004011:	int3   
 1004012:	int3   
 1004013:	int3   
 1004014:	int3   
 1004015:	int3   
 1004016:	mov    edi,edi
 1004018:	push   ebp
 1004019:	mov    ebp,esp
 100401b:	push   esi
 100401c:	mov    esi,ecx
 100401e:	mov    edx,DWORD PTR [esi+0x4]
 1004021:	sub    edx,DWORD PTR [esi]
 1004023:	mov    eax,0x3fffffff
 1004028:	sub    eax,DWORD PTR [ebp+0x8]
 100402b:	sar    edx,0x2
 100402e:	cmp    eax,edx
 1004030:	jae    0x100403d
 1004032:	push   0x1001a84
 1004037:	call   DWORD PTR ds:0x1001108
 100403d:	mov    eax,DWORD PTR [esi+0x8]
 1004040:	sub    eax,DWORD PTR [esi]
 1004042:	add    edx,DWORD PTR [ebp+0x8]
 1004045:	sar    eax,0x2
 1004048:	cmp    edx,eax
 100404a:	jbe    0x100405a
 100404c:	push   edx
 100404d:	call   0x1003fe1
 1004052:	push   eax
 1004053:	mov    ecx,esi
 1004055:	call   0x1003eda
 100405a:	pop    esi
 100405b:	pop    ebp
 100405c:	ret    0x4
 100405f:	int3   
 1004060:	int3   
 1004061:	int3   
 1004062:	int3   
 1004063:	int3   
 1004064:	mov    edi,edi
 1004066:	push   esi
 1004067:	push   edi
 1004068:	mov    esi,ecx
 100406a:	xor    edi,edi
 100406c:	cmp    DWORD PTR [esi],edi
 100406e:	je     0x100407e
 1004070:	call   DWORD PTR ds:0x100110c
 1004076:	push   DWORD PTR [esi]
 1004078:	call   0x1004b30
 100407d:	pop    ecx
 100407e:	mov    DWORD PTR [esi],edi
 1004080:	mov    DWORD PTR [esi+0x4],edi
 1004083:	mov    DWORD PTR [esi+0x8],edi
 1004086:	pop    edi
 1004087:	pop    esi
 1004088:	ret    
 1004089:	int3   
 100408a:	int3   
 100408b:	int3   
 100408c:	int3   
 100408d:	int3   
 100408e:	mov    edi,edi
 1004090:	push   ebp
 1004091:	mov    ebp,esp
 1004093:	lea    eax,[ecx+0xc]
 1004096:	push   eax
 1004097:	push   DWORD PTR [ebp+0x10]
 100409a:	push   DWORD PTR [ebp+0xc]
 100409d:	push   DWORD PTR [ebp+0x8]
 10040a0:	call   0x100414a
 10040a5:	add    esp,0x10
 10040a8:	pop    ebp
 10040a9:	ret    0xc
 10040ac:	int3   
 10040ad:	int3   
 10040ae:	int3   
 10040af:	int3   
 10040b0:	int3   
 10040b1:	push   0xc
 10040b3:	mov    eax,0x1007528
 10040b8:	call   0x1004b8b
 10040bd:	mov    eax,DWORD PTR [ebp+0x8]
 10040c0:	xor    ecx,ecx
 10040c2:	test   eax,eax
 10040c4:	je     0x100410b
 10040c6:	cmp    eax,0x3fffffff
 10040cb:	ja     0x10040dd
 10040cd:	shl    eax,0x2
 10040d0:	push   eax
 10040d1:	call   0x1004b3c
 10040d6:	pop    ecx
 10040d7:	mov    ecx,eax
 10040d9:	test   ecx,ecx
 10040db:	jne    0x100410b
 10040dd:	and    DWORD PTR [ebp+0x8],0x0
 10040e1:	lea    eax,[ebp+0x8]
 10040e4:	push   eax
 10040e5:	lea    ecx,[ebp-0x18]
 10040e8:	call   DWORD PTR ds:0x1001190
 10040ee:	and    DWORD PTR [ebp-0x4],0x0
 10040f2:	mov    DWORD PTR [ebp-0x18],0x10019bc
 10040f9:	or     DWORD PTR [ebp-0x4],0xffffffff
 10040fd:	push   0x1007d5c
 1004102:	lea    eax,[ebp-0x18]
 1004105:	push   eax
 1004106:	call   0x1004b80
 100410b:	mov    eax,ecx
 100410d:	call   0x1004c77
 1004112:	ret    
 1004113:	int3   
 1004114:	int3   
 1004115:	int3   
 1004116:	int3   
 1004117:	int3   
 1004118:	push   0x4
 100411a:	mov    eax,0x1007556
 100411f:	call   0x1004b8b
 1004124:	mov    ecx,DWORD PTR [ebp+0x8]
 1004127:	mov    DWORD PTR [ebp-0x10],ecx
 100412a:	and    DWORD PTR [ebp-0x4],0x0
 100412e:	test   ecx,ecx
 1004130:	je     0x1004139
 1004132:	mov    eax,DWORD PTR [ebp+0xc]
 1004135:	mov    eax,DWORD PTR [eax]
 1004137:	mov    DWORD PTR [ecx],eax
 1004139:	or     DWORD PTR [ebp-0x4],0xffffffff
 100413d:	call   0x1004c77
 1004142:	ret    0x8
 1004145:	int3   
 1004146:	int3   
 1004147:	int3   
 1004148:	int3   
 1004149:	int3   
 100414a:	mov    edi,edi
 100414c:	push   ebp
 100414d:	mov    ebp,esp
 100414f:	push   esi
 1004150:	mov    esi,DWORD PTR [ebp+0xc]
 1004153:	sub    esi,DWORD PTR [ebp+0x8]
 1004156:	sar    esi,0x2
 1004159:	shl    esi,0x2
 100415c:	push   esi
 100415d:	push   DWORD PTR [ebp+0x8]
 1004160:	push   DWORD PTR [ebp+0x10]
 1004163:	call   DWORD PTR ds:0x10011a0
 1004169:	add    esp,0xc
 100416c:	add    eax,esi
 100416e:	pop    esi
 100416f:	pop    ebp
 1004170:	ret    
 1004171:	int3   
 1004172:	int3   
 1004173:	int3   
 1004174:	int3   
 1004175:	int3   
 1004176:	push   0x4
 1004178:	mov    eax,0x1007584
 100417d:	call   0x1004b8b
 1004182:	mov    ecx,DWORD PTR [ebp+0x8]
 1004185:	mov    DWORD PTR [ebp+0x8],ecx
 1004188:	mov    DWORD PTR [ebp-0x10],ecx
 100418b:	and    DWORD PTR [ebp-0x4],0x0
 100418f:	test   ecx,ecx
 1004191:	je     0x100419a
 1004193:	mov    eax,DWORD PTR [ebp+0xc]
 1004196:	mov    eax,DWORD PTR [eax]
 1004198:	mov    DWORD PTR [ecx],eax
 100419a:	or     DWORD PTR [ebp-0x4],0xffffffff
 100419e:	call   0x1004c77
 10041a3:	ret    
 10041a4:	int3   
 10041a5:	int3   
 10041a6:	int3   
 10041a7:	int3   
 10041a8:	int3   
 10041a9:	mov    edi,edi
 10041ab:	push   ebp
 10041ac:	mov    ebp,esp
 10041ae:	push   ebx
 10041af:	push   esi
 10041b0:	xor    esi,esi
 10041b2:	push   edi
 10041b3:	mov    edi,DWORD PTR [ebp+0x8]
 10041b6:	mov    ebx,edx
 10041b8:	mov    edx,esi
 10041ba:	test   eax,eax
 10041bc:	je     0x10041e5
 10041be:	mov    esi,DWORD PTR [ebp+0xc]
 10041c1:	sub    esi,ecx
 10041c3:	test   ebx,ebx
 10041c5:	je     0x10041db
 10041c7:	movzx  edi,WORD PTR [esi+ecx*1]
 10041cb:	test   di,di
 10041ce:	je     0x10041db
 10041d0:	mov    WORD PTR [ecx],di
 10041d3:	add    ecx,0x2
 10041d6:	dec    ebx
 10041d7:	inc    edx
 10041d8:	dec    eax
 10041d9:	jne    0x10041c3
 10041db:	mov    edi,DWORD PTR [ebp+0x8]
 10041de:	push   0x0
 10041e0:	pop    esi
 10041e1:	test   eax,eax
 10041e3:	jne    0x10041ee
 10041e5:	sub    ecx,0x2
 10041e8:	dec    edx
 10041e9:	mov    esi,0x8007007a
 10041ee:	xor    eax,eax
 10041f0:	mov    WORD PTR [ecx],ax
 10041f3:	test   edi,edi
 10041f5:	je     0x10041f9
 10041f7:	mov    DWORD PTR [edi],edx
 10041f9:	pop    edi
 10041fa:	mov    eax,esi
 10041fc:	pop    esi
 10041fd:	pop    ebx
 10041fe:	pop    ebp
 10041ff:	ret    0x8
 1004202:	int3   
 1004203:	int3   
 1004204:	int3   
 1004205:	int3   
 1004206:	int3   
 1004207:	mov    edi,edi
 1004209:	push   ebp
 100420a:	mov    ebp,esp
 100420c:	mov    ecx,DWORD PTR [ebp+0xc]
 100420f:	xor    eax,eax
 1004211:	test   ecx,ecx
 1004213:	je     0x100421d
 1004215:	cmp    ecx,0x7fffffff
 100421b:	jbe    0x1004222
 100421d:	mov    eax,0x80070057
 1004222:	test   eax,eax
 1004224:	js     0x100423a
 1004226:	push   DWORD PTR [ebp+0x10]
 1004229:	mov    eax,ecx
 100422b:	mov    ecx,DWORD PTR [ebp+0x8]
 100422e:	push   0x0
 1004230:	mov    edx,0x7ffffffe
 1004235:	call   0x10041a9
 100423a:	pop    ebp
 100423b:	ret    0xc
 100423e:	int3   
 100423f:	int3   
 1004240:	int3   
 1004241:	int3   
 1004242:	int3   
 1004243:	mov    edi,edi
 1004245:	push   ebp
 1004246:	mov    ebp,esp
 1004248:	push   esi
 1004249:	mov    esi,DWORD PTR [ebp+0x8]
 100424c:	test   esi,esi
 100424e:	jne    0x1004257
 1004250:	mov    eax,0x80004003
 1004255:	jmp    0x10042d6
 1004257:	push   ebx
 1004258:	push   edi
 1004259:	mov    edi,0xf0
 100425e:	push   edi
 100425f:	xor    ebx,ebx
 1004261:	push   ebx
 1004262:	push   esi
 1004263:	call   0x1004cc4
 1004268:	mov    DWORD PTR [esi],edi
 100426a:	mov    edi,DWORD PTR [ebp+0xc]
 100426d:	mov    ecx,edi
 100426f:	add    esp,0xc
 1004272:	mov    DWORD PTR [esi+0x8],edi
 1004275:	lea    edx,[ecx+0x2]
 1004278:	mov    ax,WORD PTR [ecx]
 100427b:	add    ecx,0x2
 100427e:	cmp    ax,bx
 1004281:	jne    0x1004278
 1004283:	sub    ecx,edx
 1004285:	sar    ecx,1
 1004287:	lea    ebx,[ecx+0x1]
 100428a:	lea    eax,[ebx+ebx*1]
 100428d:	push   eax
 100428e:	call   DWORD PTR ds:0x1001174
 1004294:	pop    ecx
 1004295:	mov    DWORD PTR [esi+0x20],eax
 1004298:	test   eax,eax
 100429a:	jne    0x10042a3
 100429c:	mov    eax,0x8007000e
 10042a1:	jmp    0x10042d4
 10042a3:	push   edi
 10042a4:	push   ebx
 10042a5:	push   eax
 10042a6:	call   0x1004207
 10042ab:	mov    edi,eax
 10042ad:	cmp    edi,0x8007007a
 10042b3:	jne    0x10042ba
 10042b5:	xor    edi,edi
 10042b7:	inc    edi
 10042b8:	jmp    0x10042cc
 10042ba:	test   edi,edi
 10042bc:	jns    0x10042cc
 10042be:	push   DWORD PTR [esi+0x20]
 10042c1:	call   DWORD PTR ds:0x1001178
 10042c7:	and    DWORD PTR [esi+0x20],0x0
 10042cb:	pop    ecx
 10042cc:	mov    eax,DWORD PTR [ebp+0x10]
 10042cf:	mov    DWORD PTR [esi+0xc],eax
 10042d2:	mov    eax,edi
 10042d4:	pop    edi
 10042d5:	pop    ebx
 10042d6:	pop    esi
 10042d7:	pop    ebp
 10042d8:	ret    
 10042d9:	int3   
 10042da:	int3   
 10042db:	int3   
 10042dc:	int3   
 10042dd:	int3   
 10042de:	mov    edi,edi
 10042e0:	push   ebp
 10042e1:	mov    ebp,esp
 10042e3:	sub    esp,0x18
 10042e6:	push   edi
 10042e7:	mov    edi,DWORD PTR [ebp+0xc]
 10042ea:	test   edi,edi
 10042ec:	jne    0x10042f5
 10042ee:	xor    eax,eax
 10042f0:	jmp    0x1004506
 10042f5:	push   ebx
 10042f6:	mov    ebx,DWORD PTR [ebp+0x10]
 10042f9:	test   ebx,ebx
 10042fb:	je     0x1004500
 1004301:	mov    edx,DWORD PTR [ebp+0x14]
 1004304:	test   edx,edx
 1004306:	je     0x1004500
 100430c:	mov    ecx,DWORD PTR [ebp+0x18]
 100430f:	test   ecx,ecx
 1004311:	je     0x1004500
 1004317:	push   esi
 1004318:	xor    esi,esi
 100431a:	cmp    DWORD PTR [ebx],esi
 100431c:	je     0x100433d
 100431e:	lea    eax,[ebx+0xc]
 1004321:	mov    edx,DWORD PTR [eax-0x8]
 1004324:	test   edx,edx
 1004326:	je     0x100432a
 1004328:	mov    DWORD PTR [edx],esi
 100432a:	mov    edx,DWORD PTR [eax]
 100432c:	test   edx,edx
 100432e:	je     0x1004332
 1004330:	mov    DWORD PTR [edx],esi
 1004332:	add    eax,0x10
 1004335:	cmp    DWORD PTR [eax-0xc],esi
 1004338:	jne    0x1004321
 100433a:	mov    edx,DWORD PTR [ebp+0x14]
 100433d:	mov    eax,DWORD PTR [ebp+0x1c]
 1004340:	mov    DWORD PTR [ecx],esi
 1004342:	test   eax,eax
 1004344:	je     0x1004348
 1004346:	mov    DWORD PTR [eax],esi
 1004348:	mov    eax,DWORD PTR [edx]
 100434a:	mov    DWORD PTR [ebp-0x14],edi
 100434d:	mov    DWORD PTR [ebp-0x8],esi
 1004350:	mov    DWORD PTR [ebp+0xc],esi
 1004353:	mov    DWORD PTR [ebp-0x4],esi
 1004356:	mov    edi,esi
 1004358:	mov    DWORD PTR [ebp-0xc],eax
 100435b:	push   esi
 100435c:	jmp    0x10044d5
 1004361:	mov    eax,DWORD PTR [ebp-0x8]
 1004364:	mov    DWORD PTR [ebp-0x10],esi
 1004367:	dec    eax
 1004368:	je     0x100441a
 100436e:	dec    eax
 100436f:	je     0x10043ec
 1004371:	dec    eax
 1004372:	je     0x1004393
 1004374:	dec    eax
 1004375:	jne    0x10044d2
 100437b:	mov    ecx,DWORD PTR [ebp-0x4]
 100437e:	test   ecx,ecx
 1004380:	je     0x100441a
 1004386:	mov    eax,DWORD PTR [ebp+0xc]
 1004389:	mov    DWORD PTR [ecx],eax
 100438b:	mov    DWORD PTR [ebp-0x4],esi
 100438e:	jmp    0x10044d2
 1004393:	mov    ecx,DWORD PTR [ebp-0x4]
 1004396:	test   ecx,ecx
 1004398:	jne    0x1004386
 100439a:	test   edi,edi
 100439c:	je     0x10043a2
 100439e:	cmp    DWORD PTR [edi],esi
 10043a0:	je     0x10043cc
 10043a2:	push   0x1c
 10043a4:	call   DWORD PTR ds:0x1001174
 10043aa:	mov    edi,eax
 10043ac:	pop    ecx
 10043ad:	test   edi,edi
 10043af:	je     0x10044f6
 10043b5:	or     DWORD PTR [edi+0xc],0xffffffff
 10043b9:	mov    DWORD PTR [edi+0x4],0x1
 10043c0:	mov    DWORD PTR [edi+0x8],esi
 10043c3:	mov    DWORD PTR [edi+0x10],esi
 10043c6:	mov    DWORD PTR [edi+0x14],esi
 10043c9:	mov    DWORD PTR [edi+0x18],esi
 10043cc:	mov    eax,DWORD PTR [ebp+0x14]
 10043cf:	cmp    DWORD PTR [eax],esi
 10043d1:	jne    0x10043d5
 10043d3:	mov    DWORD PTR [eax],edi
 10043d5:	mov    eax,DWORD PTR [ebp-0xc]
 10043d8:	test   eax,eax
 10043da:	je     0x10043df
 10043dc:	mov    DWORD PTR [eax+0x18],edi
 10043df:	mov    eax,DWORD PTR [ebp+0xc]
 10043e2:	mov    DWORD PTR [edi],eax
 10043e4:	mov    DWORD PTR [ebp-0xc],edi
 10043e7:	jmp    0x10044d2
 10043ec:	mov    eax,DWORD PTR [ebp+0x10]
 10043ef:	mov    DWORD PTR [ebp-0x4],esi
 10043f2:	cmp    DWORD PTR [eax],esi
 10043f4:	je     0x100440e
 10043f6:	push   DWORD PTR [ebx]
 10043f8:	push   DWORD PTR [ebp+0xc]
 10043fb:	call   DWORD PTR ds:0x100117c
 1004401:	pop    ecx
 1004402:	pop    ecx
 1004403:	test   eax,eax
 1004405:	je     0x1004427
 1004407:	add    ebx,0x10
 100440a:	cmp    DWORD PTR [ebx],esi
 100440c:	jne    0x10043f6
 100440e:	mov    ecx,DWORD PTR [ebp+0x1c]
 1004411:	test   ecx,ecx
 1004413:	je     0x100441a
 1004415:	mov    eax,DWORD PTR [ebp+0xc]
 1004418:	mov    DWORD PTR [ecx],eax
 100441a:	mov    esi,0x80070057
 100441f:	mov    eax,esi
 1004421:	pop    esi
 1004422:	jmp    0x1004505
 1004427:	push   0x1001750
 100442c:	push   DWORD PTR [ebx]
 100442e:	call   DWORD PTR ds:0x100117c
 1004434:	mov    eax,DWORD PTR [ebx+0x4]
 1004437:	pop    ecx
 1004438:	pop    ecx
 1004439:	test   eax,eax
 100443b:	je     0x1004443
 100443d:	mov    DWORD PTR [eax],0x1
 1004443:	mov    ecx,DWORD PTR [ebx+0x8]
 1004446:	mov    DWORD PTR [ebp-0x18],ecx
 1004449:	cmp    DWORD PTR [ebx+0xc],esi
 100444c:	je     0x1004462
 100444e:	mov    eax,DWORD PTR [ebx+0xc]
 1004451:	mov    DWORD PTR [ebp-0x4],eax
 1004454:	xor    eax,eax
 1004456:	cmp    ecx,0x8
 1004459:	sete   al
 100445c:	add    eax,0x3
 100445f:	mov    DWORD PTR [ebp-0x10],eax
 1004462:	test   ecx,ecx
 1004464:	je     0x10044cf
 1004466:	cmp    ecx,0x8
 1004469:	je     0x10044cf
 100446b:	test   edi,edi
 100446d:	je     0x1004484
 100446f:	lea    eax,[ecx-0x6]
 1004472:	cmp    eax,0x1
 1004475:	ja     0x100447d
 1004477:	cmp    DWORD PTR [edi+0xc],0xffffffff
 100447b:	jmp    0x1004480
 100447d:	cmp    DWORD PTR [edi+0x8],esi
 1004480:	jne    0x100441a
 1004482:	jmp    0x10044ab
 1004484:	push   0x1c
 1004486:	call   DWORD PTR ds:0x1001174
 100448c:	mov    edi,eax
 100448e:	pop    ecx
 100448f:	test   edi,edi
 1004491:	je     0x10044f6
 1004493:	or     DWORD PTR [edi+0xc],0xffffffff
 1004497:	mov    ecx,DWORD PTR [ebp-0x18]
 100449a:	mov    DWORD PTR [edi],esi
 100449c:	mov    DWORD PTR [edi+0x4],esi
 100449f:	mov    DWORD PTR [edi+0x8],esi
 10044a2:	mov    DWORD PTR [edi+0x10],esi
 10044a5:	mov    DWORD PTR [edi+0x14],esi
 10044a8:	mov    DWORD PTR [edi+0x18],esi
 10044ab:	mov    ebx,DWORD PTR [ebp+0x10]
 10044ae:	lea    eax,[ecx-0x6]
 10044b1:	cmp    eax,0x1
 10044b4:	ja     0x10044c3
 10044b6:	xor    eax,eax
 10044b8:	cmp    ecx,0x6
 10044bb:	sete   al
 10044be:	mov    DWORD PTR [edi+0xc],eax
 10044c1:	jmp    0x10044d2
 10044c3:	mov    DWORD PTR [edi+0x4],ecx
 10044c6:	mov    DWORD PTR [edi+0x8],0x1
 10044cd:	jmp    0x10044d2
 10044cf:	mov    ebx,DWORD PTR [ebp+0x10]
 10044d2:	push   DWORD PTR [ebp-0x10]
 10044d5:	lea    eax,[ebp-0x8]
 10044d8:	push   eax
 10044d9:	lea    eax,[ebp+0xc]
 10044dc:	push   eax
 10044dd:	lea    eax,[ebp-0x14]
 10044e0:	push   eax
 10044e1:	call   0x100466e
 10044e6:	add    esp,0x10
 10044e9:	test   eax,eax
 10044eb:	jne    0x1004361
 10044f1:	jmp    0x100441f
 10044f6:	mov    esi,0x8007000e
 10044fb:	jmp    0x100441f
 1004500:	mov    eax,0x80004003
 1004505:	pop    ebx
 1004506:	pop    edi
 1004507:	leave  
 1004508:	ret    
 1004509:	int3   
 100450a:	int3   
 100450b:	int3   
 100450c:	int3   
 100450d:	int3   
 100450e:	mov    edi,edi
 1004510:	push   ebp
 1004511:	mov    ebp,esp
 1004513:	mov    eax,DWORD PTR [ebp+0x8]
 1004516:	test   eax,eax
 1004518:	jne    0x1004521
 100451a:	mov    eax,0x80004003
 100451f:	pop    ebp
 1004520:	ret    
 1004521:	mov    ecx,DWORD PTR [eax+0x24]
 1004524:	xor    edx,edx
 1004526:	test   ecx,ecx
 1004528:	jne    0x1004545
 100452a:	cmp    DWORD PTR [eax+0x28],edx
 100452d:	jne    0x100453e
 100452f:	cmp    DWORD PTR [eax+0x38],edx
 1004532:	jne    0x100453e
 1004534:	cmp    DWORD PTR [eax+0x4c],edx
 1004537:	jne    0x100453e
 1004539:	cmp    DWORD PTR [eax+0x50],edx
 100453c:	je     0x100454c
 100453e:	mov    eax,0x80070057
 1004543:	pop    ebp
 1004544:	ret    
 1004545:	cmp    DWORD PTR [ecx],edx
 1004547:	je     0x100453e
 1004549:	mov    ecx,DWORD PTR [ecx+0x18]
 100454c:	test   ecx,ecx
 100454e:	jne    0x1004545
 1004550:	xor    eax,eax
 1004552:	pop    ebp
 1004553:	ret    
 1004554:	int3   
 1004555:	int3   
 1004556:	int3   
 1004557:	int3   
 1004558:	int3   
 1004559:	mov    edi,edi
 100455b:	push   ebp
 100455c:	mov    ebp,esp
 100455e:	sub    esp,0x118
 1004564:	mov    eax,ds:0x100907c
 1004569:	xor    eax,ebp
 100456b:	mov    DWORD PTR [ebp-0x4],eax
 100456e:	mov    eax,DWORD PTR [ebp+0x8]
 1004571:	push   ebx
 1004572:	push   esi
 1004573:	push   edi
 1004574:	push   0x7d0
 1004579:	mov    ebx,0x10090f0
 100457e:	push   ebx
 100457f:	push   0xffffffff
 1004581:	push   eax
 1004582:	xor    edi,edi
 1004584:	push   edi
 1004585:	push   edi
 1004586:	call   DWORD PTR ds:0x1001090
 100458c:	xor    eax,eax
 100458e:	mov    esi,0x114
 1004593:	push   esi
 1004594:	mov    ds:0x100a08e,ax
 100459a:	lea    eax,[ebp-0x118]
 10045a0:	push   edi
 10045a1:	push   eax
 10045a2:	call   0x1004cc4
 10045a7:	add    esp,0xc
 10045aa:	lea    eax,[ebp-0x118]
 10045b0:	push   eax
 10045b1:	mov    DWORD PTR [ebp-0x118],esi
 10045b7:	call   DWORD PTR ds:0x1001094
 10045bd:	cmp    DWORD PTR [ebp-0x108],0x2
 10045c4:	jne    0x1004658
 10045ca:	push   0x1001a98
 10045cf:	call   DWORD PTR ds:0x1001098
 10045d5:	test   eax,eax
 10045d7:	je     0x1004658
 10045d9:	push   0x1001aa8
 10045de:	push   eax
 10045df:	call   DWORD PTR ds:0x10010d8
 10045e5:	test   eax,eax
 10045e7:	je     0x1004658
 10045e9:	call   eax
 10045eb:	mov    edi,eax
 10045ed:	push   0x22
 10045ef:	pop    eax
 10045f0:	cmp    WORD PTR [edi],ax
 10045f3:	jne    0x100460d
 10045f5:	push   eax
 10045f6:	lea    eax,[edi+0x2]
 10045f9:	push   eax
 10045fa:	call   DWORD PTR ds:0x1001180
 1004600:	mov    esi,eax
 1004602:	pop    ecx
 1004603:	pop    ecx
 1004604:	test   esi,esi
 1004606:	je     0x1004621
 1004608:	add    esi,0x2
 100460b:	jmp    0x100461d
 100460d:	lea    eax,[edi+0x2]
 1004610:	push   0x20
 1004612:	push   eax
 1004613:	call   DWORD PTR ds:0x1001180
 1004619:	pop    ecx
 100461a:	pop    ecx
 100461b:	mov    esi,eax
 100461d:	test   esi,esi
 100461f:	jne    0x100463f
 1004621:	mov    ecx,edi
 1004623:	lea    edx,[ecx+0x2]
 1004626:	xor    esi,esi
 1004628:	mov    ax,WORD PTR [ecx]
 100462b:	add    ecx,0x2
 100462e:	cmp    ax,si
 1004631:	jne    0x1004628
 1004633:	sub    ecx,edx
 1004635:	sar    ecx,1
 1004637:	lea    esi,[edi+ecx*2]
 100463a:	jmp    0x100463f
 100463c:	add    esi,0x2
 100463f:	movzx  eax,WORD PTR [esi]
 1004642:	push   eax
 1004643:	call   0x10047a8
 1004648:	test   eax,eax
 100464a:	jne    0x100463c
 100464c:	push   esi
 100464d:	push   0x7d0
 1004652:	push   ebx
 1004653:	call   0x1004207
 1004658:	mov    ecx,DWORD PTR [ebp-0x4]
 100465b:	pop    edi
 100465c:	pop    esi
 100465d:	mov    eax,ebx
 100465f:	xor    ecx,ebp
 1004661:	pop    ebx
 1004662:	call   0x1004b6b
 1004667:	leave  
 1004668:	ret    
 1004669:	int3   
 100466a:	int3   
 100466b:	int3   
 100466c:	int3   
 100466d:	int3   
 100466e:	mov    edi,edi
 1004670:	push   ebp
 1004671:	mov    ebp,esp
 1004673:	mov    eax,DWORD PTR [ebp+0x8]
 1004676:	push   ebx
 1004677:	push   esi
 1004678:	push   edi
 1004679:	mov    edi,DWORD PTR [ebp+0x10]
 100467c:	test   eax,eax
 100467e:	je     0x100479c
 1004684:	cmp    DWORD PTR [ebp+0xc],0x0
 1004688:	je     0x100479c
 100468e:	test   edi,edi
 1004690:	je     0x100479c
 1004696:	mov    esi,DWORD PTR [eax]
 1004698:	movzx  eax,WORD PTR [esi]
 100469b:	test   ax,ax
 100469e:	je     0x100479c
 10046a4:	mov    ebx,DWORD PTR ds:0x10011ec
 10046aa:	push   0x20
 10046ac:	pop    edi
 10046ad:	push   0x9
 10046af:	pop    ecx
 10046b0:	cmp    ax,di
 10046b3:	je     0x10046ba
 10046b5:	cmp    ax,cx
 10046b8:	jne    0x10046ca
 10046ba:	push   esi
 10046bb:	call   ebx
 10046bd:	mov    esi,eax
 10046bf:	movzx  eax,WORD PTR [esi]
 10046c2:	push   0x9
 10046c4:	pop    ecx
 10046c5:	test   ax,ax
 10046c8:	jne    0x10046b0
 10046ca:	movzx  eax,WORD PTR [esi]
 10046cd:	mov    edi,DWORD PTR [ebp+0x10]
 10046d0:	test   ax,ax
 10046d3:	je     0x100479c
 10046d9:	cmp    DWORD PTR [ebp+0x14],0x4
 10046dd:	jne    0x100470d
 10046df:	mov    eax,DWORD PTR [ebp+0xc]
 10046e2:	mov    DWORD PTR [eax],esi
 10046e4:	xor    eax,eax
 10046e6:	cmp    WORD PTR [esi],ax
 10046e9:	je     0x10046fa
 10046eb:	xor    edi,edi
 10046ed:	push   esi
 10046ee:	call   ebx
 10046f0:	mov    esi,eax
 10046f2:	cmp    WORD PTR [esi],di
 10046f5:	jne    0x10046ed
 10046f7:	mov    edi,DWORD PTR [ebp+0x10]
 10046fa:	mov    ecx,DWORD PTR [ebp+0x8]
 10046fd:	mov    DWORD PTR [ecx],esi
 10046ff:	mov    DWORD PTR [edi],0x4
 1004705:	xor    eax,eax
 1004707:	inc    eax
 1004708:	jmp    0x100479e
 100470d:	cmp    eax,0x2d
 1004710:	je     0x100471f
 1004712:	cmp    eax,0x2f
 1004715:	je     0x100471f
 1004717:	mov    DWORD PTR [edi],0x3
 100471d:	jmp    0x100472a
 100471f:	push   esi
 1004720:	mov    DWORD PTR [edi],0x2
 1004726:	call   ebx
 1004728:	mov    esi,eax
 100472a:	mov    eax,DWORD PTR [ebp+0x14]
 100472d:	cmp    DWORD PTR [edi],eax
 100472f:	je     0x100473b
 1004731:	test   eax,eax
 1004733:	je     0x100473b
 1004735:	mov    DWORD PTR [edi],0x1
 100473b:	mov    eax,DWORD PTR [ebp+0xc]
 100473e:	mov    DWORD PTR [eax],esi
 1004740:	xor    edi,edi
 1004742:	push   0x22
 1004744:	pop    eax
 1004745:	cmp    ax,WORD PTR [esi]
 1004748:	jne    0x1004767
 100474a:	test   edi,edi
 100474c:	jne    0x1004758
 100474e:	push   esi
 100474f:	call   ebx
 1004751:	mov    ecx,DWORD PTR [ebp+0xc]
 1004754:	mov    DWORD PTR [ecx],eax
 1004756:	jmp    0x100475e
 1004758:	push   0x20
 100475a:	pop    eax
 100475b:	mov    WORD PTR [esi],ax
 100475e:	xor    eax,eax
 1004760:	test   edi,edi
 1004762:	sete   al
 1004765:	mov    edi,eax
 1004767:	movzx  eax,WORD PTR [esi]
 100476a:	test   ax,ax
 100476d:	je     0x100478a
 100476f:	test   edi,edi
 1004771:	jne    0x1004783
 1004773:	push   0x20
 1004775:	pop    ecx
 1004776:	cmp    ax,cx
 1004779:	je     0x100478a
 100477b:	push   0x9
 100477d:	pop    ecx
 100477e:	cmp    ax,cx
 1004781:	je     0x100478a
 1004783:	push   esi
 1004784:	call   ebx
 1004786:	mov    esi,eax
 1004788:	jmp    0x1004742
 100478a:	push   esi
 100478b:	call   ebx
 100478d:	mov    ecx,DWORD PTR [ebp+0x8]
 1004790:	mov    DWORD PTR [ecx],eax
 1004792:	xor    ecx,ecx
 1004794:	mov    WORD PTR [esi],cx
 1004797:	jmp    0x1004705
 100479c:	xor    eax,eax
 100479e:	pop    edi
 100479f:	pop    esi
 10047a0:	pop    ebx
 10047a1:	pop    ebp
 10047a2:	ret    
 10047a3:	int3   
 10047a4:	int3   
 10047a5:	int3   
 10047a6:	int3   
 10047a7:	int3   
 10047a8:	mov    edi,edi
 10047aa:	push   ebp
 10047ab:	mov    ebp,esp
 10047ad:	mov    eax,DWORD PTR [ebp+0x8]
 10047b0:	push   0x20
 10047b2:	pop    edx
 10047b3:	xor    cl,cl
 10047b5:	cmp    dx,ax
 10047b8:	jne    0x10047be
 10047ba:	inc    cl
 10047bc:	jmp    0x1004827
 10047be:	push   esi
 10047bf:	mov    esi,0xa0
 10047c4:	cmp    ax,si
 10047c7:	jae    0x10047d6
 10047c9:	add    eax,0xfffffff7
 10047cc:	cmp    ax,0x4
 10047d0:	ja     0x1004826
 10047d2:	mov    cl,0x1
 10047d4:	jmp    0x1004826
 10047d6:	push   edi
 10047d7:	mov    edi,0x303f
 10047dc:	cmp    ax,di
 10047df:	ja     0x1004825
 10047e1:	mov    edx,0x200b
 10047e6:	cmp    ax,dx
 10047e9:	ja     0x10047fa
 10047eb:	cmp    si,ax
 10047ee:	je     0x1004823
 10047f0:	add    edx,0xfffffff5
 10047f3:	cmp    ax,dx
 10047f6:	jb     0x1004825
 10047f8:	jmp    0x1004823
 10047fa:	mov    edx,0x2028
 10047ff:	cmp    dx,ax
 1004802:	je     0x1004823
 1004804:	inc    edx
 1004805:	cmp    dx,ax
 1004808:	je     0x1004823
 100480a:	mov    edx,0x202f
 100480f:	cmp    dx,ax
 1004812:	je     0x1004823
 1004814:	mov    edx,0x3000
 1004819:	cmp    dx,ax
 100481c:	je     0x1004823
 100481e:	cmp    di,ax
 1004821:	jne    0x1004825
 1004823:	mov    cl,0x1
 1004825:	pop    edi
 1004826:	pop    esi
 1004827:	movsx  eax,cl
 100482a:	pop    ebp
 100482b:	ret    0x4
 100482e:	int3   
 100482f:	int3   
 1004830:	int3   
 1004831:	int3   
 1004832:	int3   
 1004833:	push   0x1004ece
 1004838:	call   0x1004e87
 100483d:	mov    eax,ds:0x100a0b4
 1004842:	mov    DWORD PTR [esp],0x100a0a4
 1004849:	push   DWORD PTR ds:0x100a0b0
 100484f:	mov    ds:0x100a0a4,eax
 1004854:	push   0x100a094
 1004859:	push   0x100a098
 100485e:	push   0x100a090
 1004863:	call   DWORD PTR ds:0x100116c
 1004869:	add    esp,0x14
 100486c:	mov    ds:0x100a0a0,eax
 1004871:	test   eax,eax
 1004873:	jns    0x100487d
 1004875:	push   0x8
 1004877:	call   0x1004dd6
 100487c:	pop    ecx
 100487d:	ret    
 100487e:	int3   
 100487f:	int3   
 1004880:	int3   
 1004881:	int3   
 1004882:	int3   
 1004883:	push   0x5c
 1004885:	push   0x1007db0
 100488a:	call   0x1005080
 100488f:	xor    ebx,ebx
 1004891:	mov    DWORD PTR [ebp-0x1c],ebx
 1004894:	lea    eax,[ebp-0x6c]
 1004897:	push   eax
 1004898:	call   DWORD PTR ds:0x100107c
 100489e:	cmp    DWORD PTR ds:0x100aa80,ebx
 10048a4:	jne    0x10048b1
 10048a6:	push   ebx
 10048a7:	push   ebx
 10048a8:	push   0x1
 10048aa:	push   ebx
 10048ab:	call   DWORD PTR ds:0x1001080
 10048b1:	mov    DWORD PTR [ebp-0x4],ebx
 10048b4:	mov    eax,fs:0x18
 10048ba:	mov    esi,DWORD PTR [eax+0x4]
 10048bd:	mov    DWORD PTR [ebp-0x24],ebx
 10048c0:	mov    edi,0x100aa74
 10048c5:	push   ebx
 10048c6:	push   esi
 10048c7:	push   edi
 10048c8:	call   DWORD PTR ds:0x1001084
 10048ce:	cmp    eax,ebx
 10048d0:	je     0x10048eb
 10048d2:	cmp    eax,esi
 10048d4:	jne    0x10048de
 10048d6:	xor    esi,esi
 10048d8:	inc    esi
 10048d9:	mov    DWORD PTR [ebp-0x24],esi
 10048dc:	jmp    0x10048ee
 10048de:	push   0x3e8
 10048e3:	call   DWORD PTR ds:0x1001088
 10048e9:	jmp    0x10048c5
 10048eb:	xor    esi,esi
 10048ed:	inc    esi
 10048ee:	mov    eax,ds:0x100aa70
 10048f3:	cmp    eax,esi
 10048f5:	jne    0x1004901
 10048f7:	push   0x1f
 10048f9:	call   0x1004dd6
 10048fe:	pop    ecx
 10048ff:	jmp    0x100493c
 1004901:	mov    eax,ds:0x100aa70
 1004906:	test   eax,eax
 1004908:	jne    0x1004936
 100490a:	mov    DWORD PTR ds:0x100aa70,esi
 1004910:	push   0x100121c
 1004915:	push   0x1001210
 100491a:	call   0x100506e
 100491f:	pop    ecx
 1004920:	pop    ecx
 1004921:	test   eax,eax
 1004923:	je     0x100493c
 1004925:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 100492c:	mov    eax,0xff
 1004931:	jmp    0x1004a56
 1004936:	mov    DWORD PTR ds:0x100a0ac,esi
 100493c:	mov    eax,ds:0x100aa70
 1004941:	cmp    eax,esi
 1004943:	jne    0x1004960
 1004945:	push   0x100120c
 100494a:	push   0x10011f4
 100494f:	call   0x1005062
 1004954:	pop    ecx
 1004955:	pop    ecx
 1004956:	mov    DWORD PTR ds:0x100aa70,0x2
 1004960:	cmp    DWORD PTR [ebp-0x24],ebx
 1004963:	jne    0x100496d
 1004965:	push   ebx
 1004966:	push   edi
 1004967:	call   DWORD PTR ds:0x100108c
 100496d:	cmp    DWORD PTR ds:0x100aa84,ebx
 1004973:	je     0x100498e
 1004975:	push   0x100aa84
 100497a:	call   0x1004fa0
 100497f:	pop    ecx
 1004980:	test   eax,eax
 1004982:	je     0x100498e
 1004984:	push   ebx
 1004985:	push   0x2
 1004987:	push   ebx
 1004988:	call   DWORD PTR ds:0x100aa84
 100498e:	mov    eax,ds:0x1001154
 1004993:	mov    esi,DWORD PTR [eax]
 1004995:	mov    DWORD PTR [ebp-0x20],esi
 1004998:	mov    al,BYTE PTR [esi]
 100499a:	cmp    al,0x20
 100499c:	ja     0x10049e7
 100499e:	cmp    al,bl
 10049a0:	je     0x10049a7
 10049a2:	cmp    DWORD PTR [ebp-0x1c],ebx
 10049a5:	jne    0x10049e7
 10049a7:	mov    al,BYTE PTR [esi]
 10049a9:	cmp    al,bl
 10049ab:	je     0x10049b7
 10049ad:	cmp    al,0x20
 10049af:	ja     0x10049b7
 10049b1:	inc    esi
 10049b2:	mov    DWORD PTR [ebp-0x20],esi
 10049b5:	jmp    0x10049a7
 10049b7:	test   BYTE PTR [ebp-0x40],0x1
 10049bb:	je     0x10049c3
 10049bd:	movzx  eax,WORD PTR [ebp-0x3c]
 10049c1:	jmp    0x10049c6
 10049c3:	push   0xa
 10049c5:	pop    eax
 10049c6:	push   eax
 10049c7:	push   esi
 10049c8:	push   ebx
 10049c9:	push   0x1000000
 10049ce:	call   0x1001fe5
 10049d3:	mov    ds:0x100a0a8,eax
 10049d8:	cmp    DWORD PTR ds:0x100a09c,ebx
 10049de:	jne    0x1004a3c
 10049e0:	push   eax
 10049e1:	call   DWORD PTR ds:0x1001158
 10049e7:	cmp    al,0x22
 10049e9:	jne    0x10049f6
 10049eb:	xor    ecx,ecx
 10049ed:	cmp    DWORD PTR [ebp-0x1c],ebx
 10049f0:	sete   cl
 10049f3:	mov    DWORD PTR [ebp-0x1c],ecx
 10049f6:	movzx  eax,al
 10049f9:	push   eax
 10049fa:	call   DWORD PTR ds:0x100115c
 1004a00:	pop    ecx
 1004a01:	test   eax,eax
 1004a03:	je     0x1004a09
 1004a05:	inc    esi
 1004a06:	mov    DWORD PTR [ebp-0x20],esi
 1004a09:	inc    esi
 1004a0a:	jmp    0x1004995
 1004a0c:	mov    eax,DWORD PTR [ebp-0x14]
 1004a0f:	mov    ecx,DWORD PTR [eax]
 1004a11:	mov    ecx,DWORD PTR [ecx]
 1004a13:	mov    DWORD PTR [ebp-0x28],ecx
 1004a16:	push   eax
 1004a17:	push   ecx
 1004a18:	call   0x1004efa
 1004a1d:	pop    ecx
 1004a1e:	pop    ecx
 1004a1f:	ret    
 1004a20:	mov    esp,DWORD PTR [ebp-0x18]
 1004a23:	mov    eax,DWORD PTR [ebp-0x28]
 1004a26:	mov    ds:0x100a0a8,eax
 1004a2b:	xor    ebx,ebx
 1004a2d:	cmp    DWORD PTR ds:0x100a09c,ebx
 1004a33:	jne    0x1004a3c
 1004a35:	push   eax
 1004a36:	call   DWORD PTR ds:0x1001164
 1004a3c:	cmp    DWORD PTR ds:0x100a0ac,ebx
 1004a42:	jne    0x1004a4a
 1004a44:	call   DWORD PTR ds:0x1001168
 1004a4a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1004a51:	mov    eax,ds:0x100a0a8
 1004a56:	call   0x10050c5
 1004a5b:	ret    
 1004a5c:	int3   
 1004a5d:	int3   
 1004a5e:	int3   
 1004a5f:	int3   
 1004a60:	int3   
 1004a61:	mov    eax,0x5a4d
 1004a66:	cmp    WORD PTR ds:0x1000000,ax
 1004a6d:	je     0x1004a73
 1004a6f:	xor    eax,eax
 1004a71:	jmp    0x1004aa8
 1004a73:	mov    eax,ds:0x100003c
 1004a78:	cmp    DWORD PTR [eax+0x1000000],0x4550
 1004a82:	jne    0x1004a6f
 1004a84:	mov    ecx,0x10b
 1004a89:	cmp    WORD PTR [eax+0x1000018],cx
 1004a90:	jne    0x1004a6f
 1004a92:	cmp    DWORD PTR [eax+0x1000074],0xe
 1004a99:	jbe    0x1004a6f
 1004a9b:	xor    ecx,ecx
 1004a9d:	cmp    DWORD PTR [eax+0x10000e8],ecx
 1004aa3:	setne  cl
 1004aa6:	mov    eax,ecx
 1004aa8:	push   0x2
 1004aaa:	mov    ds:0x100a09c,eax
 1004aaf:	call   DWORD PTR ds:0x1001138
 1004ab5:	pop    ecx
 1004ab6:	push   0xffffffff
 1004ab8:	call   DWORD PTR ds:0x1001078
 1004abe:	mov    ecx,DWORD PTR ds:0x100a0bc
 1004ac4:	mov    ds:0x100aa78,eax
 1004ac9:	mov    ds:0x100aa7c,eax
 1004ace:	mov    eax,ds:0x100113c
 1004ad3:	mov    DWORD PTR [eax],ecx
 1004ad5:	mov    eax,ds:0x1001140
 1004ada:	mov    ecx,DWORD PTR ds:0x100a0b8
 1004ae0:	mov    DWORD PTR [eax],ecx
 1004ae2:	call   0x1004ea3
 1004ae7:	call   0x100513d
 1004aec:	cmp    DWORD PTR ds:0x10090a4,0x0
 1004af3:	jne    0x1004b01
 1004af5:	push   0x1005135
 1004afa:	call   DWORD PTR ds:0x1001144
 1004b00:	pop    ecx
 1004b01:	call   0x1005108
 1004b06:	cmp    DWORD PTR ds:0x10090a0,0xffffffff
 1004b0d:	jne    0x1004b18
 1004b0f:	push   0xffffffff
 1004b11:	call   DWORD PTR ds:0x1001148
 1004b17:	pop    ecx
 1004b18:	xor    eax,eax
 1004b1a:	ret    
 1004b1b:	int3   
 1004b1c:	int3   
 1004b1d:	int3   
 1004b1e:	int3   
 1004b1f:	int3   
 1004b20:	call   0x1005145
 1004b25:	jmp    0x1004883
 1004b2a:	int3   
 1004b2b:	int3   
 1004b2c:	int3   
 1004b2d:	int3   
 1004b2e:	int3   
 1004b2f:	int3   
 1004b30:	jmp    DWORD PTR ds:0x10011d0
 1004b36:	int3   
 1004b37:	int3   
 1004b38:	int3   
 1004b39:	int3   
 1004b3a:	int3   
 1004b3b:	int3   
 1004b3c:	jmp    DWORD PTR ds:0x10011cc
 1004b42:	int3   
 1004b43:	int3   
 1004b44:	int3   
 1004b45:	int3   
 1004b46:	int3   
 1004b47:	int3   
 1004b48:	jmp    DWORD PTR ds:0x10011b8
 1004b4e:	int3   
 1004b4f:	int3   
 1004b50:	int3   
 1004b51:	int3   
 1004b52:	int3   
 1004b53:	int3   
 1004b54:	jmp    DWORD PTR ds:0x10011b4
 1004b5a:	int3   
 1004b5b:	int3   
 1004b5c:	int3   
 1004b5d:	int3   
 1004b5e:	int3   
 1004b5f:	int3   
 1004b60:	jmp    DWORD PTR ds:0x10011b0
 1004b66:	int3   
 1004b67:	int3   
 1004b68:	int3   
 1004b69:	int3   
 1004b6a:	int3   
 1004b6b:	cmp    ecx,DWORD PTR ds:0x100907c
 1004b71:	jne    0x1004b75
 1004b73:	repz ret 
 1004b75:	jmp    0x10051e5
 1004b7a:	int3   
 1004b7b:	int3   
 1004b7c:	int3   
 1004b7d:	int3   
 1004b7e:	int3   
 1004b7f:	int3   
 1004b80:	jmp    DWORD PTR ds:0x10011ac
 1004b86:	int3   
 1004b87:	int3   
 1004b88:	int3   
 1004b89:	int3   
 1004b8a:	int3   
 1004b8b:	push   eax
 1004b8c:	push   DWORD PTR fs:0x0
 1004b93:	lea    eax,[esp+0xc]
 1004b97:	sub    esp,DWORD PTR [esp+0xc]
 1004b9b:	push   ebx
 1004b9c:	push   esi
 1004b9d:	push   edi
 1004b9e:	mov    DWORD PTR [eax],ebp
 1004ba0:	mov    ebp,eax
 1004ba2:	mov    eax,ds:0x100907c
 1004ba7:	xor    eax,ebp
 1004ba9:	push   eax
 1004baa:	push   DWORD PTR [ebp-0x4]
 1004bad:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1004bb4:	lea    eax,[ebp-0xc]
 1004bb7:	mov    fs:0x0,eax
 1004bbd:	ret    
 1004bbe:	int3   
 1004bbf:	int3   
 1004bc0:	int3   
 1004bc1:	int3   
 1004bc2:	int3   
 1004bc3:	push   eax
 1004bc4:	push   DWORD PTR fs:0x0
 1004bcb:	lea    eax,[esp+0xc]
 1004bcf:	sub    esp,DWORD PTR [esp+0xc]
 1004bd3:	push   ebx
 1004bd4:	push   esi
 1004bd5:	push   edi
 1004bd6:	mov    DWORD PTR [eax],ebp
 1004bd8:	mov    ebp,eax
 1004bda:	mov    eax,ds:0x100907c
 1004bdf:	xor    eax,ebp
 1004be1:	push   eax
 1004be2:	mov    DWORD PTR [ebp-0x10],esp
 1004be5:	push   DWORD PTR [ebp-0x4]
 1004be8:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1004bef:	lea    eax,[ebp-0xc]
 1004bf2:	mov    fs:0x0,eax
 1004bf8:	ret    
 1004bf9:	int3   
 1004bfa:	int3   
 1004bfb:	int3   
 1004bfc:	int3   
 1004bfd:	int3   
 1004bfe:	push   eax
 1004bff:	push   DWORD PTR fs:0x0
 1004c06:	lea    eax,[esp+0xc]
 1004c0a:	sub    esp,DWORD PTR [esp+0xc]
 1004c0e:	push   ebx
 1004c0f:	push   esi
 1004c10:	push   edi
 1004c11:	mov    DWORD PTR [eax],ebp
 1004c13:	mov    ebp,eax
 1004c15:	mov    eax,ds:0x100907c
 1004c1a:	xor    eax,ebp
 1004c1c:	push   eax
 1004c1d:	mov    DWORD PTR [ebp-0x10],eax
 1004c20:	push   DWORD PTR [ebp-0x4]
 1004c23:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1004c2a:	lea    eax,[ebp-0xc]
 1004c2d:	mov    fs:0x0,eax
 1004c33:	ret    
 1004c34:	int3   
 1004c35:	int3   
 1004c36:	int3   
 1004c37:	int3   
 1004c38:	int3   
 1004c39:	push   eax
 1004c3a:	push   DWORD PTR fs:0x0
 1004c41:	lea    eax,[esp+0xc]
 1004c45:	sub    esp,DWORD PTR [esp+0xc]
 1004c49:	push   ebx
 1004c4a:	push   esi
 1004c4b:	push   edi
 1004c4c:	mov    DWORD PTR [eax],ebp
 1004c4e:	mov    ebp,eax
 1004c50:	mov    eax,ds:0x100907c
 1004c55:	xor    eax,ebp
 1004c57:	push   eax
 1004c58:	mov    DWORD PTR [ebp-0x14],eax
 1004c5b:	mov    DWORD PTR [ebp-0x10],esp
 1004c5e:	push   DWORD PTR [ebp-0x4]
 1004c61:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1004c68:	lea    eax,[ebp-0xc]
 1004c6b:	mov    fs:0x0,eax
 1004c71:	ret    
 1004c72:	int3   
 1004c73:	int3   
 1004c74:	int3   
 1004c75:	int3   
 1004c76:	int3   
 1004c77:	mov    ecx,DWORD PTR [ebp-0xc]
 1004c7a:	mov    DWORD PTR fs:0x0,ecx
 1004c81:	pop    ecx
 1004c82:	pop    edi
 1004c83:	pop    edi
 1004c84:	pop    esi
 1004c85:	pop    ebx
 1004c86:	mov    esp,ebp
 1004c88:	pop    ebp
 1004c89:	push   ecx
 1004c8a:	ret    
 1004c8b:	int3   
 1004c8c:	int3   
 1004c8d:	int3   
 1004c8e:	int3   
 1004c8f:	int3   
 1004c90:	mov    ecx,DWORD PTR [ebp-0x10]
 1004c93:	xor    ecx,ebp
 1004c95:	call   0x1004b6b
 1004c9a:	jmp    0x1004c77
 1004c9f:	int3   
 1004ca0:	int3   
 1004ca1:	int3   
 1004ca2:	int3   
 1004ca3:	int3   
 1004ca4:	mov    ecx,DWORD PTR [ebp-0x14]
 1004ca7:	xor    ecx,ebp
 1004ca9:	call   0x1004b6b
 1004cae:	jmp    0x1004c77
 1004cb3:	int3   
 1004cb4:	int3   
 1004cb5:	int3   
 1004cb6:	int3   
 1004cb7:	int3   
 1004cb8:	jmp    DWORD PTR ds:0x10011a8
 1004cbe:	int3   
 1004cbf:	int3   
 1004cc0:	int3   
 1004cc1:	int3   
 1004cc2:	int3   
 1004cc3:	int3   
 1004cc4:	jmp    DWORD PTR ds:0x10011a4
 1004cca:	int3   
 1004ccb:	int3   
 1004ccc:	int3   
 1004ccd:	int3   
 1004cce:	int3   
 1004ccf:	mov    edi,edi
 1004cd1:	push   ebp
 1004cd2:	mov    ebp,esp
 1004cd4:	test   BYTE PTR [ebp+0x8],0x2
 1004cd8:	push   edi
 1004cd9:	mov    edi,ecx
 1004cdb:	je     0x1004d02
 1004cdd:	push   esi
 1004cde:	push   0x100541c
 1004ce3:	lea    esi,[edi-0x4]
 1004ce6:	push   DWORD PTR [esi]
 1004ce8:	push   0xc
 1004cea:	push   edi
 1004ceb:	call   0x1005353
 1004cf0:	test   BYTE PTR [ebp+0x8],0x1
 1004cf4:	je     0x1004cfd
 1004cf6:	push   esi
 1004cf7:	call   0x1004b30
 1004cfc:	pop    ecx
 1004cfd:	mov    eax,esi
 1004cff:	pop    esi
 1004d00:	jmp    0x1004d16
 1004d02:	call   0x100541c
 1004d07:	test   BYTE PTR [ebp+0x8],0x1
 1004d0b:	je     0x1004d14
 1004d0d:	push   edi
 1004d0e:	call   0x1004b30
 1004d13:	pop    ecx
 1004d14:	mov    eax,edi
 1004d16:	pop    edi
 1004d17:	pop    ebp
 1004d18:	ret    0x4
 1004d1b:	int3   
 1004d1c:	int3   
 1004d1d:	int3   
 1004d1e:	int3   
 1004d1f:	int3   
 1004d20:	jmp    DWORD PTR ds:0x100118c
 1004d26:	int3   
 1004d27:	int3   
 1004d28:	int3   
 1004d29:	int3   
 1004d2a:	int3   
 1004d2b:	int3   
 1004d2c:	jmp    DWORD PTR ds:0x1001184
 1004d32:	int3   
 1004d33:	int3   
 1004d34:	int3   
 1004d35:	int3   
 1004d36:	int3   
 1004d37:	int3   
 1004d38:	int3   
 1004d39:	int3   
 1004d3a:	int3   
 1004d3b:	int3   
 1004d3c:	int3   
 1004d3d:	int3   
 1004d3e:	int3   
 1004d3f:	int3   
 1004d40:	push   ecx
 1004d41:	lea    ecx,[esp+0x4]
 1004d45:	sub    ecx,eax
 1004d47:	sbb    eax,eax
 1004d49:	not    eax
 1004d4b:	and    ecx,eax
 1004d4d:	mov    eax,esp
 1004d4f:	and    eax,0xfffff000
 1004d54:	cmp    ecx,eax
 1004d56:	jb     0x1004d62
 1004d58:	mov    eax,ecx
 1004d5a:	pop    ecx
 1004d5b:	xchg   esp,eax
 1004d5c:	mov    eax,DWORD PTR [eax]
 1004d5e:	mov    DWORD PTR [esp],eax
 1004d61:	ret    
 1004d62:	sub    eax,0x1000
 1004d67:	test   DWORD PTR [eax],eax
 1004d69:	jmp    0x1004d54
 1004d6b:	int3   
 1004d6c:	int3   
 1004d6d:	int3   
 1004d6e:	int3   
 1004d6f:	int3   
 1004d70:	jmp    DWORD PTR ds:0x1001178
 1004d76:	int3   
 1004d77:	int3   
 1004d78:	int3   
 1004d79:	int3   
 1004d7a:	int3   
 1004d7b:	mov    edi,edi
 1004d7d:	push   ebp
 1004d7e:	mov    ebp,esp
 1004d80:	mov    eax,DWORD PTR [ebp+0x8]
 1004d83:	mov    eax,DWORD PTR [eax]
 1004d85:	cmp    DWORD PTR [eax],0xe06d7363
 1004d8b:	jne    0x1004db7
 1004d8d:	cmp    DWORD PTR [eax+0x10],0x3
 1004d91:	jne    0x1004db7
 1004d93:	mov    eax,DWORD PTR [eax+0x14]
 1004d96:	cmp    eax,0x19930520
 1004d9b:	je     0x1004db2
 1004d9d:	cmp    eax,0x19930521
 1004da2:	je     0x1004db2
 1004da4:	cmp    eax,0x19930522
 1004da9:	je     0x1004db2
 1004dab:	cmp    eax,0x1994000
 1004db0:	jne    0x1004db7
 1004db2:	call   0x10053bc
 1004db7:	xor    eax,eax
 1004db9:	pop    ebp
 1004dba:	ret    0x4
 1004dbd:	int3   
 1004dbe:	int3   
 1004dbf:	int3   
 1004dc0:	int3   
 1004dc1:	int3   
 1004dc2:	push   0x1004d7b
 1004dc7:	call   DWORD PTR ds:0x1001074
 1004dcd:	xor    eax,eax
 1004dcf:	ret    
 1004dd0:	int3   
 1004dd1:	int3   
 1004dd2:	int3   
 1004dd3:	int3   
 1004dd4:	int3   
 1004dd5:	int3   
 1004dd6:	jmp    DWORD PTR ds:0x1001170
 1004ddc:	int3   
 1004ddd:	int3   
 1004dde:	int3   
 1004ddf:	int3   
 1004de0:	int3   
 1004de1:	push   0x14
 1004de3:	push   0x1007dd0
 1004de8:	call   0x1005080
 1004ded:	push   DWORD PTR ds:0x100aa7c
 1004df3:	mov    esi,DWORD PTR ds:0x1001070
 1004df9:	call   esi
 1004dfb:	mov    DWORD PTR [ebp-0x1c],eax
 1004dfe:	cmp    eax,0xffffffff
 1004e01:	jne    0x1004e0f
 1004e03:	push   DWORD PTR [ebp+0x8]
 1004e06:	call   DWORD PTR ds:0x1001128
 1004e0c:	pop    ecx
 1004e0d:	jmp    0x1004e73
 1004e0f:	push   0x8
 1004e11:	call   0x10053e0
 1004e16:	pop    ecx
 1004e17:	and    DWORD PTR [ebp-0x4],0x0
 1004e1b:	push   DWORD PTR ds:0x100aa7c
 1004e21:	call   esi
 1004e23:	mov    DWORD PTR [ebp-0x1c],eax
 1004e26:	push   DWORD PTR ds:0x100aa78
 1004e2c:	call   esi
 1004e2e:	mov    DWORD PTR [ebp-0x20],eax
 1004e31:	lea    eax,[ebp-0x20]
 1004e34:	push   eax
 1004e35:	lea    eax,[ebp-0x1c]
 1004e38:	push   eax
 1004e39:	push   DWORD PTR [ebp+0x8]
 1004e3c:	mov    esi,DWORD PTR ds:0x1001078
 1004e42:	call   esi
 1004e44:	push   eax
 1004e45:	call   0x10053d4
 1004e4a:	add    esp,0xc
 1004e4d:	mov    DWORD PTR [ebp-0x24],eax
 1004e50:	push   DWORD PTR [ebp-0x1c]
 1004e53:	call   esi
 1004e55:	mov    ds:0x100aa7c,eax
 1004e5a:	push   DWORD PTR [ebp-0x20]
 1004e5d:	call   esi
 1004e5f:	mov    ds:0x100aa78,eax
 1004e64:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1004e6b:	call   0x1004e79
 1004e70:	mov    eax,DWORD PTR [ebp-0x24]
 1004e73:	call   0x10050c5
 1004e78:	ret    
 1004e79:	push   0x8
 1004e7b:	call   0x10053c8
 1004e80:	pop    ecx
 1004e81:	ret    
 1004e82:	int3   
 1004e83:	int3   
 1004e84:	int3   
 1004e85:	int3   
 1004e86:	int3   
 1004e87:	mov    edi,edi
 1004e89:	push   ebp
 1004e8a:	mov    ebp,esp
 1004e8c:	push   DWORD PTR [ebp+0x8]
 1004e8f:	call   0x1004de1
 1004e94:	neg    eax
 1004e96:	sbb    eax,eax
 1004e98:	neg    eax
 1004e9a:	pop    ecx
 1004e9b:	dec    eax
 1004e9c:	pop    ebp
 1004e9d:	ret    
 1004e9e:	int3   
 1004e9f:	int3   
 1004ea0:	int3   
 1004ea1:	int3   
 1004ea2:	int3   
 1004ea3:	mov    edi,edi
 1004ea5:	push   esi
 1004ea6:	mov    eax,0x1001fd4
 1004eab:	mov    esi,0x1001fd4
 1004eb0:	push   edi
 1004eb1:	mov    edi,eax
 1004eb3:	cmp    eax,esi
 1004eb5:	jae    0x1004ec6
 1004eb7:	mov    eax,DWORD PTR [edi]
 1004eb9:	test   eax,eax
 1004ebb:	je     0x1004ebf
 1004ebd:	call   eax
 1004ebf:	add    edi,0x4
 1004ec2:	cmp    edi,esi
 1004ec4:	jb     0x1004eb7
 1004ec6:	pop    edi
 1004ec7:	pop    esi
 1004ec8:	ret    
 1004ec9:	int3   
 1004eca:	int3   
 1004ecb:	int3   
 1004ecc:	int3   
 1004ecd:	int3   
 1004ece:	mov    edi,edi
 1004ed0:	push   esi
 1004ed1:	mov    eax,0x1001fdc
 1004ed6:	mov    esi,0x1001fdc
 1004edb:	push   edi
 1004edc:	mov    edi,eax
 1004ede:	cmp    eax,esi
 1004ee0:	jae    0x1004ef1
 1004ee2:	mov    eax,DWORD PTR [edi]
 1004ee4:	test   eax,eax
 1004ee6:	je     0x1004eea
 1004ee8:	call   eax
 1004eea:	add    edi,0x4
 1004eed:	cmp    edi,esi
 1004eef:	jb     0x1004ee2
 1004ef1:	pop    edi
 1004ef2:	pop    esi
 1004ef3:	ret    
 1004ef4:	int3   
 1004ef5:	int3   
 1004ef6:	int3   
 1004ef7:	int3   
 1004ef8:	int3   
 1004ef9:	int3   
 1004efa:	jmp    DWORD PTR ds:0x1001160
 1004f00:	int3   
 1004f01:	int3   
 1004f02:	int3   
 1004f03:	int3   
 1004f04:	int3   
 1004f05:	int3   
 1004f06:	int3   
 1004f07:	int3   
 1004f08:	int3   
 1004f09:	int3   
 1004f0a:	int3   
 1004f0b:	int3   
 1004f0c:	int3   
 1004f0d:	int3   
 1004f0e:	int3   
 1004f0f:	int3   
 1004f10:	mov    edi,edi
 1004f12:	push   ebp
 1004f13:	mov    ebp,esp
 1004f15:	mov    ecx,DWORD PTR [ebp+0x8]
 1004f18:	mov    eax,0x5a4d
 1004f1d:	cmp    WORD PTR [ecx],ax
 1004f20:	je     0x1004f26
 1004f22:	xor    eax,eax
 1004f24:	pop    ebp
 1004f25:	ret    
 1004f26:	mov    eax,DWORD PTR [ecx+0x3c]
 1004f29:	add    eax,ecx
 1004f2b:	cmp    DWORD PTR [eax],0x4550
 1004f31:	jne    0x1004f22
 1004f33:	xor    edx,edx
 1004f35:	mov    ecx,0x10b
 1004f3a:	cmp    WORD PTR [eax+0x18],cx
 1004f3e:	sete   dl
 1004f41:	mov    eax,edx
 1004f43:	pop    ebp
 1004f44:	ret    
 1004f45:	int3   
 1004f46:	int3   
 1004f47:	int3   
 1004f48:	int3   
 1004f49:	int3   
 1004f4a:	int3   
 1004f4b:	int3   
 1004f4c:	int3   
 1004f4d:	int3   
 1004f4e:	int3   
 1004f4f:	int3   
 1004f50:	mov    edi,edi
 1004f52:	push   ebp
 1004f53:	mov    ebp,esp
 1004f55:	mov    eax,DWORD PTR [ebp+0x8]
 1004f58:	mov    ecx,DWORD PTR [eax+0x3c]
 1004f5b:	add    ecx,eax
 1004f5d:	movzx  eax,WORD PTR [ecx+0x14]
 1004f61:	push   ebx
 1004f62:	push   esi
 1004f63:	movzx  esi,WORD PTR [ecx+0x6]
 1004f67:	xor    edx,edx
 1004f69:	push   edi
 1004f6a:	lea    eax,[eax+ecx*1+0x18]
 1004f6e:	test   esi,esi
 1004f70:	je     0x1004f8d
 1004f72:	mov    edi,DWORD PTR [ebp+0xc]
 1004f75:	mov    ecx,DWORD PTR [eax+0xc]
 1004f78:	cmp    edi,ecx
 1004f7a:	jb     0x1004f85
 1004f7c:	mov    ebx,DWORD PTR [eax+0x8]
 1004f7f:	add    ebx,ecx
 1004f81:	cmp    edi,ebx
 1004f83:	jb     0x1004f8f
 1004f85:	inc    edx
 1004f86:	add    eax,0x28
 1004f89:	cmp    edx,esi
 1004f8b:	jb     0x1004f75
 1004f8d:	xor    eax,eax
 1004f8f:	pop    edi
 1004f90:	pop    esi
 1004f91:	pop    ebx
 1004f92:	pop    ebp
 1004f93:	ret    
 1004f94:	int3   
 1004f95:	int3   
 1004f96:	int3   
 1004f97:	int3   
 1004f98:	int3   
 1004f99:	int3   
 1004f9a:	int3   
 1004f9b:	int3   
 1004f9c:	int3   
 1004f9d:	int3   
 1004f9e:	int3   
 1004f9f:	int3   
 1004fa0:	mov    edi,edi
 1004fa2:	push   ebp
 1004fa3:	mov    ebp,esp
 1004fa5:	push   0xfffffffe
 1004fa7:	push   0x1007df0
 1004fac:	push   0x10050de
 1004fb1:	mov    eax,fs:0x0
 1004fb7:	push   eax
 1004fb8:	sub    esp,0x8
 1004fbb:	push   ebx
 1004fbc:	push   esi
 1004fbd:	push   edi
 1004fbe:	mov    eax,ds:0x100907c
 1004fc3:	xor    DWORD PTR [ebp-0x8],eax
 1004fc6:	xor    eax,ebp
 1004fc8:	push   eax
 1004fc9:	lea    eax,[ebp-0x10]
 1004fcc:	mov    fs:0x0,eax
 1004fd2:	mov    DWORD PTR [ebp-0x18],esp
 1004fd5:	mov    DWORD PTR [ebp-0x4],0x0
 1004fdc:	push   0x1000000
 1004fe1:	call   0x1004f10
 1004fe6:	add    esp,0x4
 1004fe9:	test   eax,eax
 1004feb:	je     0x1005041
 1004fed:	mov    eax,DWORD PTR [ebp+0x8]
 1004ff0:	sub    eax,0x1000000
 1004ff5:	push   eax
 1004ff6:	push   0x1000000
 1004ffb:	call   0x1004f50
 1005000:	add    esp,0x8
 1005003:	test   eax,eax
 1005005:	je     0x1005041
 1005007:	mov    eax,DWORD PTR [eax+0x24]
 100500a:	shr    eax,0x1f
 100500d:	not    eax
 100500f:	and    eax,0x1
 1005012:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005019:	mov    ecx,DWORD PTR [ebp-0x10]
 100501c:	mov    DWORD PTR fs:0x0,ecx
 1005023:	pop    ecx
 1005024:	pop    edi
 1005025:	pop    esi
 1005026:	pop    ebx
 1005027:	mov    esp,ebp
 1005029:	pop    ebp
 100502a:	ret    
 100502b:	mov    eax,DWORD PTR [ebp-0x14]
 100502e:	mov    ecx,DWORD PTR [eax]
 1005030:	xor    edx,edx
 1005032:	cmp    DWORD PTR [ecx],0xc0000005
 1005038:	sete   dl
 100503b:	mov    eax,edx
 100503d:	ret    
 100503e:	mov    esp,DWORD PTR [ebp-0x18]
 1005041:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005048:	xor    eax,eax
 100504a:	mov    ecx,DWORD PTR [ebp-0x10]
 100504d:	mov    DWORD PTR fs:0x0,ecx
 1005054:	pop    ecx
 1005055:	pop    edi
 1005056:	pop    esi
 1005057:	pop    ebx
 1005058:	mov    esp,ebp
 100505a:	pop    ebp
 100505b:	ret    
 100505c:	int3   
 100505d:	int3   
 100505e:	int3   
 100505f:	int3   
 1005060:	int3   
 1005061:	int3   
 1005062:	jmp    DWORD PTR ds:0x1001150
 1005068:	int3   
 1005069:	int3   
 100506a:	int3   
 100506b:	int3   
 100506c:	int3   
 100506d:	int3   
 100506e:	jmp    DWORD PTR ds:0x100114c
 1005074:	int3   
 1005075:	int3   
 1005076:	int3   
 1005077:	int3   
 1005078:	int3   
 1005079:	int3   
 100507a:	int3   
 100507b:	int3   
 100507c:	int3   
 100507d:	int3   
 100507e:	int3   
 100507f:	int3   
 1005080:	push   0x10050de
 1005085:	push   DWORD PTR fs:0x0
 100508c:	mov    eax,DWORD PTR [esp+0x10]
 1005090:	mov    DWORD PTR [esp+0x10],ebp
 1005094:	lea    ebp,[esp+0x10]
 1005098:	sub    esp,eax
 100509a:	push   ebx
 100509b:	push   esi
 100509c:	push   edi
 100509d:	mov    eax,ds:0x100907c
 10050a2:	xor    DWORD PTR [ebp-0x4],eax
 10050a5:	xor    eax,ebp
 10050a7:	push   eax
 10050a8:	mov    DWORD PTR [ebp-0x18],esp
 10050ab:	push   DWORD PTR [ebp-0x8]
 10050ae:	mov    eax,DWORD PTR [ebp-0x4]
 10050b1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 10050b8:	mov    DWORD PTR [ebp-0x8],eax
 10050bb:	lea    eax,[ebp-0x10]
 10050be:	mov    fs:0x0,eax
 10050c4:	ret    
 10050c5:	mov    ecx,DWORD PTR [ebp-0x10]
 10050c8:	mov    DWORD PTR fs:0x0,ecx
 10050cf:	pop    ecx
 10050d0:	pop    edi
 10050d1:	pop    edi
 10050d2:	pop    esi
 10050d3:	pop    ebx
 10050d4:	mov    esp,ebp
 10050d6:	pop    ebp
 10050d7:	push   ecx
 10050d8:	ret    
 10050d9:	int3   
 10050da:	int3   
 10050db:	int3   
 10050dc:	int3   
 10050dd:	int3   
 10050de:	mov    edi,edi
 10050e0:	push   ebp
 10050e1:	mov    ebp,esp
 10050e3:	push   DWORD PTR [ebp+0x14]
 10050e6:	push   DWORD PTR [ebp+0x10]
 10050e9:	push   DWORD PTR [ebp+0xc]
 10050ec:	push   DWORD PTR [ebp+0x8]
 10050ef:	push   0x1004b6b
 10050f4:	push   0x100907c
 10050f9:	call   0x10053ec
 10050fe:	add    esp,0x18
 1005101:	pop    ebp
 1005102:	ret    
 1005103:	int3   
 1005104:	int3   
 1005105:	int3   
 1005106:	int3   
 1005107:	int3   
 1005108:	mov    edi,edi
 100510a:	push   esi
 100510b:	push   0x30000
 1005110:	push   0x10000
 1005115:	xor    esi,esi
 1005117:	push   esi
 1005118:	call   0x1005404
 100511d:	add    esp,0xc
 1005120:	test   eax,eax
 1005122:	je     0x100512e
 1005124:	push   esi
 1005125:	push   esi
 1005126:	push   esi
 1005127:	push   esi
 1005128:	push   esi
 1005129:	call   0x10053f8
 100512e:	pop    esi
 100512f:	ret    
 1005130:	int3   
 1005131:	int3   
 1005132:	int3   
 1005133:	int3   
 1005134:	int3   
 1005135:	xor    eax,eax
 1005137:	ret    
 1005138:	int3   
 1005139:	int3   
 100513a:	int3   
 100513b:	int3   
 100513c:	int3   
 100513d:	xor    eax,eax
 100513f:	ret    
 1005140:	int3   
 1005141:	int3   
 1005142:	int3   
 1005143:	int3   
 1005144:	int3   
 1005145:	mov    edi,edi
 1005147:	push   ebp
 1005148:	mov    ebp,esp
 100514a:	sub    esp,0x10
 100514d:	mov    eax,ds:0x100907c
 1005152:	and    DWORD PTR [ebp-0x8],0x0
 1005156:	and    DWORD PTR [ebp-0x4],0x0
 100515a:	push   ebx
 100515b:	push   edi
 100515c:	mov    edi,0xbb40e64e
 1005161:	mov    ebx,0xffff0000
 1005166:	cmp    eax,edi
 1005168:	je     0x1005177
 100516a:	test   ebx,eax
 100516c:	je     0x1005177
 100516e:	not    eax
 1005170:	mov    ds:0x1009080,eax
 1005175:	jmp    0x10051dc
 1005177:	push   esi
 1005178:	lea    eax,[ebp-0x8]
 100517b:	push   eax
 100517c:	call   DWORD PTR ds:0x100105c
 1005182:	mov    esi,DWORD PTR [ebp-0x4]
 1005185:	xor    esi,DWORD PTR [ebp-0x8]
 1005188:	call   DWORD PTR ds:0x1001060
 100518e:	xor    esi,eax
 1005190:	call   DWORD PTR ds:0x1001064
 1005196:	xor    esi,eax
 1005198:	call   DWORD PTR ds:0x1001068
 100519e:	xor    esi,eax
 10051a0:	lea    eax,[ebp-0x10]
 10051a3:	push   eax
 10051a4:	call   DWORD PTR ds:0x100106c
 10051aa:	mov    eax,DWORD PTR [ebp-0xc]
 10051ad:	xor    eax,DWORD PTR [ebp-0x10]
 10051b0:	xor    esi,eax
 10051b2:	cmp    esi,edi
 10051b4:	jne    0x10051bd
 10051b6:	mov    esi,0xbb40e64f
 10051bb:	jmp    0x10051cd
 10051bd:	test   ebx,esi
 10051bf:	jne    0x10051cd
 10051c1:	mov    eax,esi
 10051c3:	or     eax,0x4711
 10051c8:	shl    eax,0x10
 10051cb:	or     esi,eax
 10051cd:	mov    DWORD PTR ds:0x100907c,esi
 10051d3:	not    esi
 10051d5:	mov    DWORD PTR ds:0x1009080,esi
 10051db:	pop    esi
 10051dc:	pop    edi
 10051dd:	pop    ebx
 10051de:	leave  
 10051df:	ret    
 10051e0:	int3   
 10051e1:	int3   
 10051e2:	int3   
 10051e3:	int3   
 10051e4:	int3   
 10051e5:	mov    edi,edi
 10051e7:	push   ebp
 10051e8:	mov    ebp,esp
 10051ea:	sub    esp,0x328
 10051f0:	mov    ds:0x100a1c8,eax
 10051f5:	mov    DWORD PTR ds:0x100a1c4,ecx
 10051fb:	mov    DWORD PTR ds:0x100a1c0,edx
 1005201:	mov    DWORD PTR ds:0x100a1bc,ebx
 1005207:	mov    DWORD PTR ds:0x100a1b8,esi
 100520d:	mov    DWORD PTR ds:0x100a1b4,edi
 1005213:	data16 mov WORD PTR ds:0x100a1e0,ss
 100521a:	data16 mov WORD PTR ds:0x100a1d4,cs
 1005221:	data16 mov WORD PTR ds:0x100a1b0,ds
 1005228:	data16 mov WORD PTR ds:0x100a1ac,es
 100522f:	data16 mov WORD PTR ds:0x100a1a8,fs
 1005236:	data16 mov WORD PTR ds:0x100a1a4,gs
 100523d:	pushf  
 100523e:	pop    DWORD PTR ds:0x100a1d8
 1005244:	mov    eax,DWORD PTR [ebp+0x0]
 1005247:	mov    ds:0x100a1cc,eax
 100524c:	mov    eax,DWORD PTR [ebp+0x4]
 100524f:	mov    ds:0x100a1d0,eax
 1005254:	lea    eax,[ebp+0x8]
 1005257:	mov    ds:0x100a1dc,eax
 100525c:	mov    eax,DWORD PTR [ebp-0x320]
 1005262:	mov    DWORD PTR ds:0x100a118,0x10001
 100526c:	mov    eax,ds:0x100a1d0
 1005271:	mov    ds:0x100a0cc,eax
 1005276:	mov    DWORD PTR ds:0x100a0c0,0xc0000409
 1005280:	mov    DWORD PTR ds:0x100a0c4,0x1
 100528a:	mov    eax,ds:0x100907c
 100528f:	mov    DWORD PTR [ebp-0x328],eax
 1005295:	mov    eax,ds:0x1009080
 100529a:	mov    DWORD PTR [ebp-0x324],eax
 10052a0:	call   DWORD PTR ds:0x100104c
 10052a6:	mov    ds:0x100a110,eax
 10052ab:	push   0x1
 10052ad:	call   0x1005410
 10052b2:	pop    ecx
 10052b3:	push   0x0
 10052b5:	call   DWORD PTR ds:0x1001074
 10052bb:	push   0x1001ac8
 10052c0:	call   DWORD PTR ds:0x1001050
 10052c6:	cmp    DWORD PTR ds:0x100a110,0x0
 10052cd:	jne    0x10052d7
 10052cf:	push   0x1
 10052d1:	call   0x1005410
 10052d6:	pop    ecx
 10052d7:	push   0xc0000409
 10052dc:	call   DWORD PTR ds:0x1001054
 10052e2:	push   eax
 10052e3:	call   DWORD PTR ds:0x1001058
 10052e9:	leave  
 10052ea:	ret    
 10052eb:	int3   
 10052ec:	int3   
 10052ed:	int3   
 10052ee:	int3   
 10052ef:	int3   
 10052f0:	push   0x14
 10052f2:	push   0x1007e10
 10052f7:	call   0x1005080
 10052fc:	and    DWORD PTR [ebp-0x4],0x0
 1005300:	dec    DWORD PTR [ebp+0x10]
 1005303:	js     0x100533f
 1005305:	mov    ecx,DWORD PTR [ebp+0x8]
 1005308:	sub    ecx,DWORD PTR [ebp+0xc]
 100530b:	mov    DWORD PTR [ebp+0x8],ecx
 100530e:	call   DWORD PTR [ebp+0x14]
 1005311:	jmp    0x1005300
 1005313:	mov    eax,DWORD PTR [ebp-0x14]
 1005316:	mov    DWORD PTR [ebp-0x1c],eax
 1005319:	mov    eax,DWORD PTR [ebp-0x1c]
 100531c:	mov    eax,DWORD PTR [eax]
 100531e:	mov    DWORD PTR [ebp-0x20],eax
 1005321:	mov    eax,DWORD PTR [ebp-0x20]
 1005324:	cmp    DWORD PTR [eax],0xe06d7363
 100532a:	je     0x1005337
 100532c:	mov    DWORD PTR [ebp-0x24],0x0
 1005333:	mov    eax,DWORD PTR [ebp-0x24]
 1005336:	ret    
 1005337:	call   0x10053bc
 100533c:	mov    esp,DWORD PTR [ebp-0x18]
 100533f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005346:	call   0x10050c5
 100534b:	ret    0x10
 100534e:	int3   
 100534f:	int3   
 1005350:	int3   
 1005351:	int3   
 1005352:	int3   
 1005353:	push   0xc
 1005355:	push   0x1007e30
 100535a:	call   0x1005080
 100535f:	and    DWORD PTR [ebp-0x1c],0x0
 1005363:	mov    esi,DWORD PTR [ebp+0xc]
 1005366:	mov    eax,esi
 1005368:	imul   eax,DWORD PTR [ebp+0x10]
 100536c:	add    DWORD PTR [ebp+0x8],eax
 100536f:	and    DWORD PTR [ebp-0x4],0x0
 1005373:	dec    DWORD PTR [ebp+0x10]
 1005376:	js     0x1005383
 1005378:	sub    DWORD PTR [ebp+0x8],esi
 100537b:	mov    ecx,DWORD PTR [ebp+0x8]
 100537e:	call   DWORD PTR [ebp+0x14]
 1005381:	jmp    0x1005373
 1005383:	mov    DWORD PTR [ebp-0x1c],0x1
 100538a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005391:	call   0x100539e
 1005396:	call   0x10050c5
 100539b:	ret    0x10
 100539e:	cmp    DWORD PTR [ebp-0x1c],0x0
 10053a2:	jne    0x10053b5
 10053a4:	push   DWORD PTR [ebp+0x14]
 10053a7:	push   DWORD PTR [ebp+0x10]
 10053aa:	push   DWORD PTR [ebp+0xc]
 10053ad:	push   DWORD PTR [ebp+0x8]
 10053b0:	call   0x10052f0
 10053b5:	ret    
 10053b6:	int3   
 10053b7:	int3   
 10053b8:	int3   
 10053b9:	int3   
 10053ba:	int3   
 10053bb:	int3   
 10053bc:	jmp    DWORD PTR ds:0x1001134
 10053c2:	int3   
 10053c3:	int3   
 10053c4:	int3   
 10053c5:	int3   
 10053c6:	int3   
 10053c7:	int3   
 10053c8:	jmp    DWORD PTR ds:0x10011d8
 10053ce:	int3   
 10053cf:	int3   
 10053d0:	int3   
 10053d1:	int3   
 10053d2:	int3   
 10053d3:	int3   
 10053d4:	jmp    DWORD PTR ds:0x1001130
 10053da:	int3   
 10053db:	int3   
 10053dc:	int3   
 10053dd:	int3   
 10053de:	int3   
 10053df:	int3   
 10053e0:	jmp    DWORD PTR ds:0x100112c
 10053e6:	int3   
 10053e7:	int3   
 10053e8:	int3   
 10053e9:	int3   
 10053ea:	int3   
 10053eb:	int3   
 10053ec:	jmp    DWORD PTR ds:0x1001124
 10053f2:	int3   
 10053f3:	int3   
 10053f4:	int3   
 10053f5:	int3   
 10053f6:	int3   
 10053f7:	int3   
 10053f8:	jmp    DWORD PTR ds:0x1001120
 10053fe:	int3   
 10053ff:	int3   
 1005400:	int3   
 1005401:	int3   
 1005402:	int3   
 1005403:	int3   
 1005404:	jmp    DWORD PTR ds:0x100111c
 100540a:	int3   
 100540b:	int3   
 100540c:	int3   
 100540d:	int3   
 100540e:	int3   
 100540f:	int3   
 1005410:	jmp    DWORD PTR ds:0x1001118
 1005416:	int3   
 1005417:	int3   
 1005418:	int3   
 1005419:	int3   
 100541a:	int3   
 100541b:	int3   
 100541c:	jmp    DWORD PTR ds:0x1001114
 1005422:	int3   
 1005423:	int3   
 1005424:	int3   
 1005425:	int3   
 1005426:	int3   
 1005427:	mov    edi,edi
 1005429:	push   esi
 100542a:	xor    esi,esi
 100542c:	push   esi
 100542d:	push   ecx
 100542e:	call   DWORD PTR ds:0x100103c
 1005434:	test   eax,eax
 1005436:	jne    0x1005450
 1005438:	call   DWORD PTR ds:0x1001048
 100543e:	mov    esi,eax
 1005440:	test   esi,esi
 1005442:	jle    0x1005450
 1005444:	and    esi,0xffff
 100544a:	or     esi,0x80070000
 1005450:	mov    eax,esi
 1005452:	pop    esi
 1005453:	ret    
 1005454:	int3   
 1005455:	int3   
 1005456:	int3   
 1005457:	int3   
 1005458:	int3   
 1005459:	mov    edi,edi
 100545b:	push   esi
 100545c:	mov    esi,ecx
 100545e:	cmp    DWORD PTR [esi],0x0
 1005461:	je     0x100546e
 1005463:	push   DWORD PTR [esi]
 1005465:	call   0x1004d70
 100546a:	and    DWORD PTR [esi],0x0
 100546d:	pop    ecx
 100546e:	and    DWORD PTR [esi+0x4],0x0
 1005472:	and    DWORD PTR [esi+0x8],0x0
 1005476:	pop    esi
 1005477:	ret    
 1005478:	int3   
 1005479:	int3   
 100547a:	int3   
 100547b:	int3   
 100547c:	int3   
 100547d:	mov    edi,edi
 100547f:	push   esi
 1005480:	push   edi
 1005481:	mov    esi,ecx
 1005483:	push   0x18
 1005485:	xor    edi,edi
 1005487:	lea    eax,[esi+0x14]
 100548a:	push   edi
 100548b:	push   eax
 100548c:	call   0x1004cc4
 1005491:	add    esp,0xc
 1005494:	mov    DWORD PTR [esi+0x2c],edi
 1005497:	mov    DWORD PTR [esi+0x30],edi
 100549a:	mov    DWORD PTR [esi+0x34],edi
 100549d:	pop    edi
 100549e:	mov    eax,esi
 10054a0:	pop    esi
 10054a1:	ret    
 10054a2:	int3   
 10054a3:	int3   
 10054a4:	int3   
 10054a5:	int3   
 10054a6:	int3   
 10054a7:	mov    edi,edi
 10054a9:	push   esi
 10054aa:	mov    esi,ecx
 10054ac:	call   0x100547d
 10054b1:	mov    eax,0x1000000
 10054b6:	lea    ecx,[esi+0x14]
 10054b9:	mov    DWORD PTR [esi],0x38
 10054bf:	mov    DWORD PTR [esi+0x8],eax
 10054c2:	mov    DWORD PTR [esi+0x4],eax
 10054c5:	mov    DWORD PTR [esi+0xc],0xa00
 10054cc:	mov    DWORD PTR [esi+0x10],0x1001af0
 10054d3:	call   0x1005427
 10054d8:	test   eax,eax
 10054da:	jns    0x10054e3
 10054dc:	mov    BYTE PTR ds:0x10090e8,0x1
 10054e3:	mov    eax,esi
 10054e5:	pop    esi
 10054e6:	ret    
 10054e7:	int3   
 10054e8:	int3   
 10054e9:	int3   
 10054ea:	int3   
 10054eb:	int3   
 10054ec:	mov    edi,edi
 10054ee:	push   esi
 10054ef:	mov    esi,ecx
 10054f1:	lea    eax,[esi+0x14]
 10054f4:	push   eax
 10054f5:	call   DWORD PTR ds:0x1001038
 10054fb:	lea    ecx,[esi+0x2c]
 10054fe:	pop    esi
 10054ff:	jmp    0x1005459
 1005504:	int3   
 1005505:	int3   
 1005506:	int3   
 1005507:	int3   
 1005508:	int3   
 1005509:	mov    edi,edi
 100550b:	push   ebp
 100550c:	mov    ebp,esp
 100550e:	push   ebx
 100550f:	push   esi
 1005510:	push   edi
 1005511:	mov    edi,ecx
 1005513:	lea    ebx,[edi+0x14]
 1005516:	push   ebx
 1005517:	call   DWORD PTR ds:0x1001044
 100551d:	mov    esi,DWORD PTR [ebp+0x8]
 1005520:	cmp    esi,DWORD PTR [edi+0x30]
 1005523:	jg     0x1005557
 1005525:	test   esi,esi
 1005527:	js     0x1005557
 1005529:	cmp    esi,DWORD PTR [edi+0x30]
 100552c:	jne    0x100553c
 100552e:	mov    esi,DWORD PTR [edi+0x8]
 1005531:	push   ebx
 1005532:	call   DWORD PTR ds:0x1001040
 1005538:	mov    eax,esi
 100553a:	jmp    0x1005560
 100553c:	jge    0x1005546
 100553e:	mov    eax,DWORD PTR [edi+0x2c]
 1005541:	mov    esi,DWORD PTR [eax+esi*4]
 1005544:	jmp    0x1005531
 1005546:	push   0x0
 1005548:	push   0x0
 100554a:	push   0x1
 100554c:	push   0xc000008c
 1005551:	call   DWORD PTR ds:0x10010e4
 1005557:	push   ebx
 1005558:	call   DWORD PTR ds:0x1001040
 100555e:	xor    eax,eax
 1005560:	pop    edi
 1005561:	pop    esi
 1005562:	pop    ebx
 1005563:	pop    ebp
 1005564:	ret    0x4
 1005567:	int3   
 1005568:	int3   
 1005569:	int3   
 100556a:	int3   
 100556b:	int3   
 100556c:	mov    edi,edi
 100556e:	push   ebp
 100556f:	mov    ebp,esp
 1005571:	mov    eax,DWORD PTR [ebp+0xc]
 1005574:	mul    DWORD PTR [ebp+0x10]
 1005577:	test   edx,edx
 1005579:	jne    0x1005589
 100557b:	cmp    eax,0xffffffff
 100557e:	ja     0x1005589
 1005580:	mov    ecx,DWORD PTR [ebp+0x8]
 1005583:	mov    DWORD PTR [ecx],eax
 1005585:	xor    eax,eax
 1005587:	pop    ebp
 1005588:	ret    
 1005589:	mov    eax,0x80070216
 100558e:	pop    ebp
 100558f:	ret    
 1005590:	int3   
 1005591:	int3   
 1005592:	int3   
 1005593:	int3   
 1005594:	int3   
 1005595:	mov    edi,edi
 1005597:	push   ebp
 1005598:	mov    ebp,esp
 100559a:	mov    eax,DWORD PTR [ebp+0xc]
 100559d:	mul    DWORD PTR [ebp+0x10]
 10055a0:	test   edx,edx
 10055a2:	jne    0x10055b2
 10055a4:	cmp    eax,0xffffffff
 10055a7:	ja     0x10055b2
 10055a9:	mov    ecx,DWORD PTR [ebp+0x8]
 10055ac:	mov    DWORD PTR [ecx],eax
 10055ae:	xor    eax,eax
 10055b0:	pop    ebp
 10055b1:	ret    
 10055b2:	mov    eax,0x80070216
 10055b7:	pop    ebp
 10055b8:	ret    
 10055b9:	int3   
 10055ba:	int3   
 10055bb:	int3   
 10055bc:	int3   
 10055bd:	int3   
 10055be:	mov    edi,edi
 10055c0:	push   ebp
 10055c1:	mov    ebp,esp
 10055c3:	mov    ecx,DWORD PTR [ebp+0xc]
 10055c6:	mov    edx,DWORD PTR [ebp+0x10]
 10055c9:	or     eax,0xffffffff
 10055cc:	sub    eax,ecx
 10055ce:	cmp    eax,edx
 10055d0:	jae    0x10055d9
 10055d2:	mov    eax,0x80070216
 10055d7:	pop    ebp
 10055d8:	ret    
 10055d9:	mov    eax,DWORD PTR [ebp+0x8]
 10055dc:	add    ecx,edx
 10055de:	mov    DWORD PTR [eax],ecx
 10055e0:	xor    eax,eax
 10055e2:	pop    ebp
 10055e3:	ret    
 10055e4:	int3   
 10055e5:	int3   
 10055e6:	int3   
 10055e7:	int3   
 10055e8:	int3   
 10055e9:	mov    edi,edi
 10055eb:	push   ebp
 10055ec:	mov    ebp,esp
 10055ee:	mov    ecx,DWORD PTR [ebp+0xc]
 10055f1:	mov    edx,DWORD PTR [ebp+0x10]
 10055f4:	or     eax,0xffffffff
 10055f7:	sub    eax,ecx
 10055f9:	cmp    eax,edx
 10055fb:	jae    0x1005604
 10055fd:	mov    eax,0x80070216
 1005602:	pop    ebp
 1005603:	ret    
 1005604:	mov    eax,DWORD PTR [ebp+0x8]
 1005607:	add    ecx,edx
 1005609:	mov    DWORD PTR [eax],ecx
 100560b:	xor    eax,eax
 100560d:	pop    ebp
 100560e:	ret    
 100560f:	int3   
 1005610:	int3   
 1005611:	int3   
 1005612:	int3   
 1005613:	int3   
 1005614:	cmp    BYTE PTR [ecx+0x8],0x0
 1005618:	mov    DWORD PTR [ecx],0x1001b00
 100561e:	je     0x100562f
 1005620:	cmp    DWORD PTR [ecx+0x4],0x0
 1005624:	je     0x100562f
 1005626:	push   DWORD PTR [ecx+0x4]
 1005629:	call   DWORD PTR ds:0x1001034
 100562f:	ret    
 1005630:	int3   
 1005631:	int3   
 1005632:	int3   
 1005633:	int3   
 1005634:	int3   
 1005635:	mov    edi,edi
 1005637:	push   ebp
 1005638:	mov    ebp,esp
 100563a:	push   DWORD PTR [ebp+0x8]
 100563d:	push   0x0
 100563f:	push   DWORD PTR [ecx+0x4]
 1005642:	call   DWORD PTR ds:0x1001030
 1005648:	pop    ebp
 1005649:	ret    0x4
 100564c:	int3   
 100564d:	int3   
 100564e:	int3   
 100564f:	int3   
 1005650:	int3   
 1005651:	mov    edi,edi
 1005653:	push   ebp
 1005654:	mov    ebp,esp
 1005656:	cmp    DWORD PTR [ebp+0x8],0x0
 100565a:	je     0x100566a
 100565c:	push   DWORD PTR [ebp+0x8]
 100565f:	push   0x0
 1005661:	push   DWORD PTR [ecx+0x4]
 1005664:	call   DWORD PTR ds:0x1001028
 100566a:	pop    ebp
 100566b:	ret    0x4
 100566e:	int3   
 100566f:	int3   
 1005670:	int3   
 1005671:	int3   
 1005672:	int3   
 1005673:	mov    edi,edi
 1005675:	push   ebp
 1005676:	mov    ebp,esp
 1005678:	mov    edx,DWORD PTR [ebp+0x8]
 100567b:	test   edx,edx
 100567d:	jne    0x1005688
 100567f:	push   DWORD PTR [ebp+0xc]
 1005682:	mov    eax,DWORD PTR [ecx]
 1005684:	call   DWORD PTR [eax]
 1005686:	jmp    0x10056a7
 1005688:	cmp    DWORD PTR [ebp+0xc],0x0
 100568c:	jne    0x1005698
 100568e:	mov    eax,DWORD PTR [ecx]
 1005690:	push   edx
 1005691:	call   DWORD PTR [eax+0x4]
 1005694:	xor    eax,eax
 1005696:	jmp    0x10056a7
 1005698:	push   DWORD PTR [ebp+0xc]
 100569b:	push   edx
 100569c:	push   0x0
 100569e:	push   DWORD PTR [ecx+0x4]
 10056a1:	call   DWORD PTR ds:0x100102c
 10056a7:	pop    ebp
 10056a8:	ret    0x8
 10056ab:	int3   
 10056ac:	int3   
 10056ad:	int3   
 10056ae:	int3   
 10056af:	int3   
 10056b0:	mov    edi,edi
 10056b2:	push   ebp
 10056b3:	mov    ebp,esp
 10056b5:	push   DWORD PTR [ebp+0x8]
 10056b8:	push   0x0
 10056ba:	push   DWORD PTR [ecx+0x4]
 10056bd:	call   DWORD PTR ds:0x1001024
 10056c3:	pop    ebp
 10056c4:	ret    0x4
 10056c7:	int3   
 10056c8:	int3   
 10056c9:	int3   
 10056ca:	int3   
 10056cb:	int3   
 10056cc:	mov    edi,edi
 10056ce:	push   ebp
 10056cf:	mov    ebp,esp
 10056d1:	push   esi
 10056d2:	mov    esi,ecx
 10056d4:	call   0x1005614
 10056d9:	test   BYTE PTR [ebp+0x8],0x1
 10056dd:	je     0x10056e6
 10056df:	push   esi
 10056e0:	call   0x1004b30
 10056e5:	pop    ecx
 10056e6:	mov    eax,esi
 10056e8:	pop    esi
 10056e9:	pop    ebp
 10056ea:	ret    0x4
 10056ed:	int3   
 10056ee:	int3   
 10056ef:	int3   
 10056f0:	int3   
 10056f1:	int3   
 10056f2:	mov    edi,edi
 10056f4:	push   ebp
 10056f5:	mov    ebp,esp
 10056f7:	push   esi
 10056f8:	mov    esi,DWORD PTR [ebp+0x8]
 10056fb:	push   edi
 10056fc:	push   DWORD PTR [ebp+0xc]
 10056ff:	add    esi,0x8
 1005702:	and    esi,0xfffffff8
 1005705:	lea    eax,[ebp+0x8]
 1005708:	push   esi
 1005709:	push   eax
 100570a:	mov    edi,ecx
 100570c:	call   0x100556c
 1005711:	add    esp,0xc
 1005714:	test   eax,eax
 1005716:	js     0x1005754
 1005718:	push   DWORD PTR [ebp+0x8]
 100571b:	lea    eax,[ebp+0x8]
 100571e:	push   0x10
 1005720:	push   eax
 1005721:	call   0x10055e9
 1005726:	add    esp,0xc
 1005729:	test   eax,eax
 100572b:	js     0x1005754
 100572d:	mov    ecx,DWORD PTR [edi+0x4]
 1005730:	push   DWORD PTR [ebp+0x8]
 1005733:	mov    eax,DWORD PTR [ecx]
 1005735:	call   DWORD PTR [eax]
 1005737:	mov    ecx,eax
 1005739:	test   ecx,ecx
 100573b:	je     0x1005754
 100573d:	and    DWORD PTR [ecx+0x4],0x0
 1005741:	lea    eax,[esi-0x1]
 1005744:	mov    DWORD PTR [ecx+0x8],eax
 1005747:	mov    DWORD PTR [ecx],edi
 1005749:	mov    DWORD PTR [ecx+0xc],0x1
 1005750:	mov    eax,ecx
 1005752:	jmp    0x1005756
 1005754:	xor    eax,eax
 1005756:	pop    edi
 1005757:	pop    esi
 1005758:	pop    ebp
 1005759:	ret    0x8
 100575c:	int3   
 100575d:	int3   
 100575e:	int3   
 100575f:	int3   
 1005760:	int3   
 1005761:	mov    edi,edi
 1005763:	push   ebp
 1005764:	mov    ebp,esp
 1005766:	mov    ecx,DWORD PTR [ecx+0x4]
 1005769:	mov    eax,DWORD PTR [ecx]
 100576b:	pop    ebp
 100576c:	jmp    DWORD PTR [eax+0x4]
 100576f:	int3   
 1005770:	int3   
 1005771:	int3   
 1005772:	int3   
 1005773:	int3   
 1005774:	mov    edi,edi
 1005776:	push   ebp
 1005777:	mov    ebp,esp
 1005779:	push   esi
 100577a:	mov    esi,DWORD PTR [ebp+0xc]
 100577d:	push   edi
 100577e:	push   DWORD PTR [ebp+0x10]
 1005781:	add    esi,0x8
 1005784:	and    esi,0xfffffff8
 1005787:	lea    eax,[ebp+0xc]
 100578a:	push   esi
 100578b:	push   eax
 100578c:	mov    edi,ecx
 100578e:	call   0x1005595
 1005793:	add    esp,0xc
 1005796:	test   eax,eax
 1005798:	js     0x10057cd
 100579a:	push   DWORD PTR [ebp+0xc]
 100579d:	lea    eax,[ebp+0xc]
 10057a0:	push   0x10
 10057a2:	push   eax
 10057a3:	call   0x10055be
 10057a8:	add    esp,0xc
 10057ab:	test   eax,eax
 10057ad:	js     0x10057cd
 10057af:	push   DWORD PTR [ebp+0xc]
 10057b2:	mov    ecx,DWORD PTR [edi+0x4]
 10057b5:	push   DWORD PTR [ebp+0x8]
 10057b8:	mov    eax,DWORD PTR [ecx]
 10057ba:	call   DWORD PTR [eax+0x8]
 10057bd:	mov    ecx,eax
 10057bf:	test   ecx,ecx
 10057c1:	je     0x10057cd
 10057c3:	lea    eax,[esi-0x1]
 10057c6:	mov    DWORD PTR [ecx+0x8],eax
 10057c9:	mov    eax,ecx
 10057cb:	jmp    0x10057cf
 10057cd:	xor    eax,eax
 10057cf:	pop    edi
 10057d0:	pop    esi
 10057d1:	pop    ebp
 10057d2:	ret    0xc
 10057d5:	int3   
 10057d6:	int3   
 10057d7:	int3   
 10057d8:	int3   
 10057d9:	int3   
 10057da:	xor    edx,edx
 10057dc:	lea    eax,[ecx+0x14]
 10057df:	inc    edx
 10057e0:	lock xadd DWORD PTR [eax],edx
 10057e4:	lea    eax,[ecx+0x8]
 10057e7:	ret    
 10057e8:	int3   
 10057e9:	int3   
 10057ea:	int3   
 10057eb:	int3   
 10057ec:	int3   
 10057ed:	mov    eax,ecx
 10057ef:	ret    
 10057f0:	int3   
 10057f1:	int3   
 10057f2:	int3   
 10057f3:	int3   
 10057f4:	int3   
 10057f5:	mov    edi,edi
 10057f7:	push   ebp
 10057f8:	mov    ebp,esp
 10057fa:	test   BYTE PTR [ebp+0x8],0x1
 10057fe:	push   esi
 10057ff:	mov    esi,ecx
 1005801:	mov    DWORD PTR [esi],0x1001b14
 1005807:	je     0x1005810
 1005809:	push   esi
 100580a:	call   0x1004b30
 100580f:	pop    ecx
 1005810:	mov    eax,esi
 1005812:	pop    esi
 1005813:	pop    ebp
 1005814:	ret    0x4
 1005817:	mov    eax,0x10090dc
 100581c:	jmp    0x1005821
 1005821:	push   ecx
 1005822:	push   edx
 1005823:	push   eax
 1005824:	push   0x1007e6c
 1005829:	call   0x1006e02
 100582e:	pop    edx
 100582f:	pop    ecx
 1005830:	jmp    eax
 1005832:	int3   
 1005833:	int3   
 1005834:	int3   
 1005835:	int3   
 1005836:	int3   
 1005837:	jmp    DWORD PTR ds:0x10090dc
 100583d:	int3   
 100583e:	int3   
 100583f:	int3   
 1005840:	int3   
 1005841:	int3   
 1005842:	int3   
 1005843:	int3   
 1005844:	int3   
 1005845:	int3   
 1005846:	int3   
 1005847:	int3   
 1005848:	int3   
 1005849:	int3   
 100584a:	int3   
 100584b:	int3   
 100584c:	int3   
 100584d:	int3   
 100584e:	int3   
 100584f:	int3   
 1005850:	mov    edi,edi
 1005852:	push   ebp
 1005853:	mov    ebp,esp
 1005855:	push   0xfffffffe
 1005857:	push   0x1007e50
 100585c:	push   0x10050de
 1005861:	mov    eax,fs:0x0
 1005867:	push   eax
 1005868:	add    esp,0xfffffd98
 100586e:	mov    eax,ds:0x100907c
 1005873:	xor    DWORD PTR [ebp-0x8],eax
 1005876:	xor    eax,ebp
 1005878:	mov    DWORD PTR [ebp-0x1c],eax
 100587b:	push   ebx
 100587c:	push   esi
 100587d:	push   edi
 100587e:	push   eax
 100587f:	lea    eax,[ebp-0x10]
 1005882:	mov    fs:0x0,eax
 1005888:	mov    DWORD PTR [ebp-0x250],0x0
 1005892:	mov    DWORD PTR [ebp-0x22c],0x104
 100589c:	mov    DWORD PTR [ebp-0x238],0x0
 10058a6:	mov    DWORD PTR [ebp-0x24c],0x0
 10058b0:	mov    DWORD PTR [ebp-0x23c],0x0
 10058ba:	mov    DWORD PTR [ebp-0x240],0x0
 10058c4:	mov    DWORD PTR [ebp-0x254],0x0
 10058ce:	mov    DWORD PTR [ebp-0x234],0x0
 10058d8:	mov    DWORD PTR [ebp-0x248],0x0
 10058e2:	mov    DWORD PTR [ebp-0x230],0x409
 10058ec:	mov    DWORD PTR [ebp-0x4],0x0
 10058f3:	lea    eax,[ebp-0x250]
 10058f9:	push   eax
 10058fa:	push   0x20019
 10058ff:	push   0x0
 1005901:	push   0x1001b88
 1005906:	push   0x80000002
 100590b:	call   0x10061f3
 1005910:	mov    DWORD PTR [ebp-0x244],eax
 1005916:	cmp    DWORD PTR [ebp-0x244],0x0
 100591d:	je     0x1005924
 100591f:	jmp    0x1005ea1
 1005924:	lea    ecx,[ebp-0x22c]
 100592a:	push   ecx
 100592b:	lea    edx,[ebp-0x228]
 1005931:	push   edx
 1005932:	push   0x0
 1005934:	push   0x0
 1005936:	push   0x1001848
 100593b:	mov    eax,DWORD PTR [ebp-0x250]
 1005941:	push   eax
 1005942:	call   0x100621f
 1005947:	mov    DWORD PTR [ebp-0x244],eax
 100594d:	cmp    DWORD PTR [ebp-0x244],0x0
 1005954:	je     0x100595b
 1005956:	jmp    0x1005ea1
 100595b:	push   0x1001b74
 1005960:	push   0x1001b58
 1005965:	call   DWORD PTR ds:0x10010ac
 100596b:	push   eax
 100596c:	call   DWORD PTR ds:0x10010d8
 1005972:	mov    DWORD PTR [ebp-0x240],eax
 1005978:	push   0x1001b44
 100597d:	push   0x1001b58
 1005982:	call   DWORD PTR ds:0x10010ac
 1005988:	push   eax
 1005989:	call   DWORD PTR ds:0x10010d8
 100598f:	mov    DWORD PTR [ebp-0x254],eax
 1005995:	cmp    DWORD PTR [ebp-0x240],0x0
 100599c:	je     0x10059a7
 100599e:	cmp    DWORD PTR [ebp-0x254],0x0
 10059a5:	jne    0x10059b6
 10059a7:	mov    DWORD PTR [ebp-0x248],0x1
 10059b1:	jmp    0x1005b56
 10059b6:	push   0x0
 10059b8:	push   0x0
 10059ba:	call   DWORD PTR [ebp-0x254]
 10059c0:	mov    DWORD PTR [ebp-0x238],eax
 10059c6:	mov    ecx,DWORD PTR [ebp-0x238]
 10059cc:	mov    DWORD PTR [ebp-0x22c],ecx
 10059d2:	lea    edx,[ebp-0x228]
 10059d8:	push   edx
 10059d9:	call   DWORD PTR ds:0x10010e8
 10059df:	mov    ecx,DWORD PTR [ebp-0x22c]
 10059e5:	lea    edx,[ecx+eax*1+0x2]
 10059e9:	mov    DWORD PTR [ebp-0x22c],edx
 10059ef:	cmp    DWORD PTR [ebp-0x24c],0x0
 10059f6:	je     0x1005a60
 10059f8:	mov    DWORD PTR [ebp-0x258],0x0
 1005a02:	mov    eax,DWORD PTR [ebp-0x22c]
 1005a08:	shl    eax,1
 1005a0a:	push   eax
 1005a0b:	mov    ecx,DWORD PTR [ebp-0x24c]
 1005a11:	push   ecx
 1005a12:	push   0x8
 1005a14:	call   DWORD PTR ds:0x100101c
 1005a1a:	push   eax
 1005a1b:	call   DWORD PTR ds:0x100102c
 1005a21:	mov    DWORD PTR [ebp-0x258],eax
 1005a27:	cmp    DWORD PTR [ebp-0x258],0x0
 1005a2e:	jne    0x1005a52
 1005a30:	mov    edx,DWORD PTR [ebp-0x24c]
 1005a36:	push   edx
 1005a37:	push   0x0
 1005a39:	call   DWORD PTR ds:0x100101c
 1005a3f:	push   eax
 1005a40:	call   DWORD PTR ds:0x1001028
 1005a46:	mov    DWORD PTR [ebp-0x24c],0x0
 1005a50:	jmp    0x1005a5e
 1005a52:	mov    eax,DWORD PTR [ebp-0x258]
 1005a58:	mov    DWORD PTR [ebp-0x24c],eax
 1005a5e:	jmp    0x1005a7e
 1005a60:	mov    ecx,DWORD PTR [ebp-0x22c]
 1005a66:	shl    ecx,1
 1005a68:	push   ecx
 1005a69:	push   0x8
 1005a6b:	call   DWORD PTR ds:0x100101c
 1005a71:	push   eax
 1005a72:	call   DWORD PTR ds:0x1001030
 1005a78:	mov    DWORD PTR [ebp-0x24c],eax
 1005a7e:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005a85:	je     0x1005aa1
 1005a87:	mov    edx,DWORD PTR [ebp-0x24c]
 1005a8d:	push   edx
 1005a8e:	mov    eax,DWORD PTR [ebp-0x22c]
 1005a94:	push   eax
 1005a95:	call   DWORD PTR [ebp-0x254]
 1005a9b:	mov    DWORD PTR [ebp-0x238],eax
 1005aa1:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005aa8:	je     0x1005abc
 1005aaa:	mov    ecx,DWORD PTR [ebp-0x238]
 1005ab0:	cmp    ecx,DWORD PTR [ebp-0x22c]
 1005ab6:	jae    0x10059b6
 1005abc:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005ac3:	je     0x1005ad2
 1005ac5:	mov    edx,DWORD PTR [ebp-0x24c]
 1005acb:	movzx  eax,WORD PTR [edx]
 1005ace:	test   eax,eax
 1005ad0:	jne    0x1005afa
 1005ad2:	lea    ecx,[ebp-0x228]
 1005ad8:	push   ecx
 1005ad9:	call   DWORD PTR [ebp-0x240]
 1005adf:	mov    DWORD PTR [ebp-0x234],eax
 1005ae5:	cmp    DWORD PTR [ebp-0x234],0x0
 1005aec:	jne    0x1005af8
 1005aee:	mov    DWORD PTR [ebp-0x248],0x1
 1005af8:	jmp    0x1005b56
 1005afa:	push   0xffffffff
 1005afc:	lea    edx,[ebp-0x228]
 1005b02:	push   edx
 1005b03:	push   0xffffffff
 1005b05:	mov    eax,DWORD PTR [ebp-0x24c]
 1005b0b:	push   eax
 1005b0c:	push   0x1
 1005b0e:	mov    ecx,DWORD PTR [ebp-0x230]
 1005b14:	push   ecx
 1005b15:	call   DWORD PTR ds:0x10010c4
 1005b1b:	cmp    eax,0x2
 1005b1e:	je     0x1005b4c
 1005b20:	mov    DWORD PTR [ebp-0x248],0x1
 1005b2a:	mov    edx,DWORD PTR [ebp-0x24c]
 1005b30:	push   edx
 1005b31:	push   0x0
 1005b33:	call   DWORD PTR ds:0x100101c
 1005b39:	push   eax
 1005b3a:	call   DWORD PTR ds:0x1001028
 1005b40:	mov    DWORD PTR [ebp-0x24c],0x0
 1005b4a:	jmp    0x1005b56
 1005b4c:	mov    DWORD PTR [ebp-0x234],0x1
 1005b56:	cmp    DWORD PTR [ebp-0x248],0x0
 1005b5d:	je     0x1005ea1
 1005b63:	push   0x0
 1005b65:	push   0x0
 1005b67:	push   0x1001a78
 1005b6c:	call   DWORD PTR ds:0x1001018
 1005b72:	mov    DWORD PTR [ebp-0x238],eax
 1005b78:	mov    eax,DWORD PTR [ebp-0x238]
 1005b7e:	mov    DWORD PTR [ebp-0x22c],eax
 1005b84:	cmp    DWORD PTR [ebp-0x22c],0x0
 1005b8b:	jne    0x1005baa
 1005b8d:	lea    ecx,[ebp-0x228]
 1005b93:	push   ecx
 1005b94:	push   0x1001a78
 1005b99:	call   DWORD PTR ds:0x10010c0
 1005b9f:	mov    DWORD PTR [ebp-0x234],eax
 1005ba5:	jmp    0x1005ea1
 1005baa:	mov    DWORD PTR [ebp-0x268],0x0
 1005bb4:	mov    DWORD PTR [ebp-0x264],0x0
 1005bbe:	mov    DWORD PTR [ebp-0x25c],0x0
 1005bc8:	lea    edx,[ebp-0x228]
 1005bce:	push   edx
 1005bcf:	call   DWORD PTR ds:0x10010e8
 1005bd5:	add    eax,0x1
 1005bd8:	mov    DWORD PTR [ebp-0x260],eax
 1005bde:	mov    eax,DWORD PTR [ebp-0x238]
 1005be4:	mov    DWORD PTR [ebp-0x22c],eax
 1005bea:	lea    ecx,[ebp-0x228]
 1005bf0:	push   ecx
 1005bf1:	call   DWORD PTR ds:0x10010e8
 1005bf7:	mov    edx,DWORD PTR [ebp-0x22c]
 1005bfd:	lea    eax,[edx+eax*1+0x2]
 1005c01:	mov    DWORD PTR [ebp-0x22c],eax
 1005c07:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005c0e:	je     0x1005c78
 1005c10:	mov    DWORD PTR [ebp-0x26c],0x0
 1005c1a:	mov    ecx,DWORD PTR [ebp-0x22c]
 1005c20:	shl    ecx,1
 1005c22:	push   ecx
 1005c23:	mov    edx,DWORD PTR [ebp-0x24c]
 1005c29:	push   edx
 1005c2a:	push   0x8
 1005c2c:	call   DWORD PTR ds:0x100101c
 1005c32:	push   eax
 1005c33:	call   DWORD PTR ds:0x100102c
 1005c39:	mov    DWORD PTR [ebp-0x26c],eax
 1005c3f:	cmp    DWORD PTR [ebp-0x26c],0x0
 1005c46:	jne    0x1005c6a
 1005c48:	mov    eax,DWORD PTR [ebp-0x24c]
 1005c4e:	push   eax
 1005c4f:	push   0x0
 1005c51:	call   DWORD PTR ds:0x100101c
 1005c57:	push   eax
 1005c58:	call   DWORD PTR ds:0x1001028
 1005c5e:	mov    DWORD PTR [ebp-0x24c],0x0
 1005c68:	jmp    0x1005c76
 1005c6a:	mov    ecx,DWORD PTR [ebp-0x26c]
 1005c70:	mov    DWORD PTR [ebp-0x24c],ecx
 1005c76:	jmp    0x1005c96
 1005c78:	mov    edx,DWORD PTR [ebp-0x22c]
 1005c7e:	shl    edx,1
 1005c80:	push   edx
 1005c81:	push   0x8
 1005c83:	call   DWORD PTR ds:0x100101c
 1005c89:	push   eax
 1005c8a:	call   DWORD PTR ds:0x1001030
 1005c90:	mov    DWORD PTR [ebp-0x24c],eax
 1005c96:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005c9d:	je     0x1005cbe
 1005c9f:	mov    eax,DWORD PTR [ebp-0x22c]
 1005ca5:	push   eax
 1005ca6:	mov    ecx,DWORD PTR [ebp-0x24c]
 1005cac:	push   ecx
 1005cad:	push   0x1001a78
 1005cb2:	call   DWORD PTR ds:0x1001018
 1005cb8:	mov    DWORD PTR [ebp-0x238],eax
 1005cbe:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005cc5:	je     0x1005cd9
 1005cc7:	mov    edx,DWORD PTR [ebp-0x238]
 1005ccd:	cmp    edx,DWORD PTR [ebp-0x22c]
 1005cd3:	jae    0x1005bde
 1005cd9:	mov    eax,DWORD PTR [ebp-0x24c]
 1005cdf:	mov    DWORD PTR [ebp-0x264],eax
 1005ce5:	mov    ecx,DWORD PTR [ebp-0x238]
 1005ceb:	add    ecx,0x1
 1005cee:	mov    DWORD PTR [ebp-0x25c],ecx
 1005cf4:	cmp    DWORD PTR [ebp-0x268],0x0
 1005cfb:	jne    0x1005df5
 1005d01:	mov    edx,DWORD PTR [ebp-0x25c]
 1005d07:	cmp    edx,DWORD PTR [ebp-0x260]
 1005d0d:	jb     0x1005df5
 1005d13:	mov    DWORD PTR [ebp-0x274],0x0
 1005d1d:	mov    DWORD PTR [ebp-0x270],0x0
 1005d27:	mov    WORD PTR [ebp-0x278],0x0
 1005d30:	mov    eax,DWORD PTR [ebp-0x274]
 1005d36:	mov    ecx,DWORD PTR [ebp-0x264]
 1005d3c:	mov    dx,WORD PTR [ecx+eax*2]
 1005d40:	mov    WORD PTR [ebp-0x278],dx
 1005d47:	movzx  eax,WORD PTR [ebp-0x278]
 1005d4e:	mov    ecx,DWORD PTR [ebp-0x274]
 1005d54:	movzx  edx,WORD PTR [ebp+ecx*2-0x228]
 1005d5c:	xor    ecx,ecx
 1005d5e:	cmp    eax,edx
 1005d60:	sete   cl
 1005d63:	mov    DWORD PTR [ebp-0x270],ecx
 1005d69:	cmp    DWORD PTR [ebp-0x270],0x0
 1005d70:	je     0x1005d96
 1005d72:	mov    edx,DWORD PTR [ebp-0x260]
 1005d78:	sub    edx,0x1
 1005d7b:	cmp    DWORD PTR [ebp-0x274],edx
 1005d81:	jne    0x1005d85
 1005d83:	jmp    0x1005d96
 1005d85:	mov    eax,DWORD PTR [ebp-0x274]
 1005d8b:	add    eax,0x1
 1005d8e:	mov    DWORD PTR [ebp-0x274],eax
 1005d94:	jmp    0x1005d30
 1005d96:	cmp    DWORD PTR [ebp-0x270],0x0
 1005d9d:	je     0x1005dab
 1005d9f:	mov    DWORD PTR [ebp-0x268],0x1
 1005da9:	jmp    0x1005dd2
 1005dab:	mov    ecx,DWORD PTR [ebp-0x260]
 1005db1:	sub    ecx,0x1
 1005db4:	cmp    DWORD PTR [ebp-0x274],ecx
 1005dba:	jne    0x1005dd2
 1005dbc:	movzx  edx,WORD PTR [ebp-0x278]
 1005dc3:	cmp    edx,0x3b
 1005dc6:	jne    0x1005dd2
 1005dc8:	mov    DWORD PTR [ebp-0x268],0x1
 1005dd2:	mov    eax,DWORD PTR [ebp-0x264]
 1005dd8:	add    eax,0x2
 1005ddb:	mov    DWORD PTR [ebp-0x264],eax
 1005de1:	mov    ecx,DWORD PTR [ebp-0x25c]
 1005de7:	sub    ecx,0x1
 1005dea:	mov    DWORD PTR [ebp-0x25c],ecx
 1005df0:	jmp    0x1005cf4
 1005df5:	cmp    DWORD PTR [ebp-0x268],0x0
 1005dfc:	je     0x1005e0d
 1005dfe:	mov    DWORD PTR [ebp-0x234],0x1
 1005e08:	jmp    0x1005ea1
 1005e0d:	mov    edx,DWORD PTR [ebp-0x22c]
 1005e13:	shl    edx,1
 1005e15:	push   edx
 1005e16:	push   0x8
 1005e18:	call   DWORD PTR ds:0x100101c
 1005e1e:	push   eax
 1005e1f:	call   DWORD PTR ds:0x1001030
 1005e25:	mov    DWORD PTR [ebp-0x23c],eax
 1005e2b:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005e32:	je     0x1005ea1
 1005e34:	cmp    DWORD PTR [ebp-0x23c],0x0
 1005e3b:	je     0x1005ea1
 1005e3d:	lea    eax,[ebp-0x228]
 1005e43:	push   eax
 1005e44:	mov    ecx,DWORD PTR [ebp-0x22c]
 1005e4a:	push   ecx
 1005e4b:	mov    edx,DWORD PTR [ebp-0x23c]
 1005e51:	push   edx
 1005e52:	call   0x1005f40
 1005e57:	push   0x1001b40
 1005e5c:	mov    eax,DWORD PTR [ebp-0x22c]
 1005e62:	push   eax
 1005e63:	mov    ecx,DWORD PTR [ebp-0x23c]
 1005e69:	push   ecx
 1005e6a:	call   0x1005f90
 1005e6f:	mov    edx,DWORD PTR [ebp-0x24c]
 1005e75:	push   edx
 1005e76:	mov    eax,DWORD PTR [ebp-0x22c]
 1005e7c:	push   eax
 1005e7d:	mov    ecx,DWORD PTR [ebp-0x23c]
 1005e83:	push   ecx
 1005e84:	call   0x1005f90
 1005e89:	mov    edx,DWORD PTR [ebp-0x23c]
 1005e8f:	push   edx
 1005e90:	push   0x1001a78
 1005e95:	call   DWORD PTR ds:0x10010c0
 1005e9b:	mov    DWORD PTR [ebp-0x234],eax
 1005ea1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
 1005ea8:	call   0x1005eaf
 1005ead:	jmp    0x1005f17
 1005eaf:	cmp    DWORD PTR [ebp-0x24c],0x0
 1005eb6:	je     0x1005ed8
 1005eb8:	mov    eax,DWORD PTR [ebp-0x24c]
 1005ebe:	push   eax
 1005ebf:	push   0x0
 1005ec1:	call   DWORD PTR ds:0x100101c
 1005ec7:	push   eax
 1005ec8:	call   DWORD PTR ds:0x1001028
 1005ece:	mov    DWORD PTR [ebp-0x24c],0x0
 1005ed8:	cmp    DWORD PTR [ebp-0x23c],0x0
 1005edf:	je     0x1005f01
 1005ee1:	mov    ecx,DWORD PTR [ebp-0x23c]
 1005ee7:	push   ecx
 1005ee8:	push   0x0
 1005eea:	call   DWORD PTR ds:0x100101c
 1005ef0:	push   eax
 1005ef1:	call   DWORD PTR ds:0x1001028
 1005ef7:	mov    DWORD PTR [ebp-0x23c],0x0
 1005f01:	cmp    DWORD PTR [ebp-0x250],0x0
 1005f08:	je     0x1005f16
 1005f0a:	mov    edx,DWORD PTR [ebp-0x250]
 1005f10:	push   edx
 1005f11:	call   0x1006abe
 1005f16:	ret    
 1005f17:	mov    eax,DWORD PTR [ebp-0x234]
 1005f1d:	mov    ecx,DWORD PTR [ebp-0x10]
 1005f20:	mov    DWORD PTR fs:0x0,ecx
 1005f27:	pop    ecx
 1005f28:	pop    edi
 1005f29:	pop    esi
 1005f2a:	pop    ebx
 1005f2b:	mov    ecx,DWORD PTR [ebp-0x1c]
 1005f2e:	xor    ecx,ebp
 1005f30:	call   0x1004b6b
 1005f35:	mov    esp,ebp
 1005f37:	pop    ebp
 1005f38:	ret    
 1005f39:	int3   
 1005f3a:	int3   
 1005f3b:	int3   
 1005f3c:	int3   
 1005f3d:	int3   
 1005f3e:	int3   
 1005f3f:	int3   
 1005f40:	mov    edi,edi
 1005f42:	push   ebp
 1005f43:	mov    ebp,esp
 1005f45:	push   ecx
 1005f46:	push   0x7fffffff
 1005f4b:	mov    eax,DWORD PTR [ebp+0xc]
 1005f4e:	push   eax
 1005f4f:	mov    ecx,DWORD PTR [ebp+0x8]
 1005f52:	push   ecx
 1005f53:	call   0x1005ff0
 1005f58:	mov    DWORD PTR [ebp-0x4],eax
 1005f5b:	cmp    DWORD PTR [ebp-0x4],0x0
 1005f5f:	jl     0x1005f7c
 1005f61:	push   0x7ffffffe
 1005f66:	mov    edx,DWORD PTR [ebp+0x10]
 1005f69:	push   edx
 1005f6a:	push   0x0
 1005f6c:	mov    eax,DWORD PTR [ebp+0xc]
 1005f6f:	push   eax
 1005f70:	mov    ecx,DWORD PTR [ebp+0x8]
 1005f73:	push   ecx
 1005f74:	call   0x10060f0
 1005f79:	mov    DWORD PTR [ebp-0x4],eax
 1005f7c:	mov    eax,DWORD PTR [ebp-0x4]
 1005f7f:	mov    esp,ebp
 1005f81:	pop    ebp
 1005f82:	ret    0xc
 1005f85:	int3   
 1005f86:	int3   
 1005f87:	int3   
 1005f88:	int3   
 1005f89:	int3   
 1005f8a:	int3   
 1005f8b:	int3   
 1005f8c:	int3   
 1005f8d:	int3   
 1005f8e:	int3   
 1005f8f:	int3   
 1005f90:	mov    edi,edi
 1005f92:	push   ebp
 1005f93:	mov    ebp,esp
 1005f95:	sub    esp,0x8
 1005f98:	push   0x7fffffff
 1005f9d:	lea    eax,[ebp-0x8]
 1005fa0:	push   eax
 1005fa1:	mov    ecx,DWORD PTR [ebp+0xc]
 1005fa4:	push   ecx
 1005fa5:	mov    edx,DWORD PTR [ebp+0x8]
 1005fa8:	push   edx
 1005fa9:	call   0x1006020
 1005fae:	mov    DWORD PTR [ebp-0x4],eax
 1005fb1:	cmp    DWORD PTR [ebp-0x4],0x0
 1005fb5:	jl     0x1005fdb
 1005fb7:	push   0x7fffffff
 1005fbc:	mov    eax,DWORD PTR [ebp+0x10]
 1005fbf:	push   eax
 1005fc0:	push   0x0
 1005fc2:	mov    ecx,DWORD PTR [ebp+0xc]
 1005fc5:	sub    ecx,DWORD PTR [ebp-0x8]
 1005fc8:	push   ecx
 1005fc9:	mov    edx,DWORD PTR [ebp-0x8]
 1005fcc:	mov    eax,DWORD PTR [ebp+0x8]
 1005fcf:	lea    ecx,[eax+edx*2]
 1005fd2:	push   ecx
 1005fd3:	call   0x10060f0
 1005fd8:	mov    DWORD PTR [ebp-0x4],eax
 1005fdb:	mov    eax,DWORD PTR [ebp-0x4]
 1005fde:	mov    esp,ebp
 1005fe0:	pop    ebp
 1005fe1:	ret    0xc
 1005fe4:	int3   
 1005fe5:	int3   
 1005fe6:	int3   
 1005fe7:	int3   
 1005fe8:	int3   
 1005fe9:	int3   
 1005fea:	int3   
 1005feb:	int3   
 1005fec:	int3   
 1005fed:	int3   
 1005fee:	int3   
 1005fef:	int3   
 1005ff0:	mov    edi,edi
 1005ff2:	push   ebp
 1005ff3:	mov    ebp,esp
 1005ff5:	push   ecx
 1005ff6:	mov    DWORD PTR [ebp-0x4],0x0
 1005ffd:	cmp    DWORD PTR [ebp+0xc],0x0
 1006001:	je     0x100600b
 1006003:	mov    eax,DWORD PTR [ebp+0xc]
 1006006:	cmp    eax,DWORD PTR [ebp+0x10]
 1006009:	jbe    0x1006012
 100600b:	mov    DWORD PTR [ebp-0x4],0x80070057
 1006012:	mov    eax,DWORD PTR [ebp-0x4]
 1006015:	mov    esp,ebp
 1006017:	pop    ebp
 1006018:	ret    0xc
 100601b:	int3   
 100601c:	int3   
 100601d:	int3   
 100601e:	int3   
 100601f:	int3   
 1006020:	mov    edi,edi
 1006022:	push   ebp
 1006023:	mov    ebp,esp
 1006025:	push   ecx
 1006026:	mov    eax,DWORD PTR [ebp+0x14]
 1006029:	push   eax
 100602a:	mov    ecx,DWORD PTR [ebp+0xc]
 100602d:	push   ecx
 100602e:	mov    edx,DWORD PTR [ebp+0x8]
 1006031:	push   edx
 1006032:	call   0x1005ff0
 1006037:	mov    DWORD PTR [ebp-0x4],eax
 100603a:	cmp    DWORD PTR [ebp-0x4],0x0
 100603e:	jl     0x1006056
 1006040:	mov    eax,DWORD PTR [ebp+0x10]
 1006043:	push   eax
 1006044:	mov    ecx,DWORD PTR [ebp+0xc]
 1006047:	push   ecx
 1006048:	mov    edx,DWORD PTR [ebp+0x8]
 100604b:	push   edx
 100604c:	call   0x1006070
 1006051:	mov    DWORD PTR [ebp-0x4],eax
 1006054:	jmp    0x100605f
 1006056:	mov    eax,DWORD PTR [ebp+0x10]
 1006059:	mov    DWORD PTR [eax],0x0
 100605f:	mov    eax,DWORD PTR [ebp-0x4]
 1006062:	mov    esp,ebp
 1006064:	pop    ebp
 1006065:	ret    0x10
 1006068:	int3   
 1006069:	int3   
 100606a:	int3   
 100606b:	int3   
 100606c:	int3   
 100606d:	int3   
 100606e:	int3   
 100606f:	int3   
 1006070:	mov    edi,edi
 1006072:	push   ebp
 1006073:	mov    ebp,esp
 1006075:	sub    esp,0x8
 1006078:	mov    DWORD PTR [ebp-0x8],0x0
 100607f:	mov    eax,DWORD PTR [ebp+0xc]
 1006082:	mov    DWORD PTR [ebp-0x4],eax
 1006085:	cmp    DWORD PTR [ebp+0xc],0x0
 1006089:	je     0x10060a9
 100608b:	mov    ecx,DWORD PTR [ebp+0x8]
 100608e:	movzx  edx,WORD PTR [ecx]
 1006091:	test   edx,edx
 1006093:	je     0x10060a9
 1006095:	mov    eax,DWORD PTR [ebp+0x8]
 1006098:	add    eax,0x2
 100609b:	mov    DWORD PTR [ebp+0x8],eax
 100609e:	mov    ecx,DWORD PTR [ebp+0xc]
 10060a1:	sub    ecx,0x1
 10060a4:	mov    DWORD PTR [ebp+0xc],ecx
 10060a7:	jmp    0x1006085
 10060a9:	cmp    DWORD PTR [ebp+0xc],0x0
 10060ad:	jne    0x10060b6
 10060af:	mov    DWORD PTR [ebp-0x8],0x80070057
 10060b6:	cmp    DWORD PTR [ebp+0x10],0x0
 10060ba:	je     0x10060d8
 10060bc:	cmp    DWORD PTR [ebp-0x8],0x0
 10060c0:	jl     0x10060cf
 10060c2:	mov    edx,DWORD PTR [ebp-0x4]
 10060c5:	sub    edx,DWORD PTR [ebp+0xc]
 10060c8:	mov    eax,DWORD PTR [ebp+0x10]
 10060cb:	mov    DWORD PTR [eax],edx
 10060cd:	jmp    0x10060d8
 10060cf:	mov    ecx,DWORD PTR [ebp+0x10]
 10060d2:	mov    DWORD PTR [ecx],0x0
 10060d8:	mov    eax,DWORD PTR [ebp-0x8]
 10060db:	mov    esp,ebp
 10060dd:	pop    ebp
 10060de:	ret    0xc
 10060e1:	int3   
 10060e2:	int3   
 10060e3:	int3   
 10060e4:	int3   
 10060e5:	int3   
 10060e6:	int3   
 10060e7:	int3   
 10060e8:	int3   
 10060e9:	int3   
 10060ea:	int3   
 10060eb:	int3   
 10060ec:	int3   
 10060ed:	int3   
 10060ee:	int3   
 10060ef:	int3   
 10060f0:	mov    edi,edi
 10060f2:	push   ebp
 10060f3:	mov    ebp,esp
 10060f5:	sub    esp,0x8
 10060f8:	mov    DWORD PTR [ebp-0x8],0x0
 10060ff:	mov    DWORD PTR [ebp-0x4],0x0
 1006106:	cmp    DWORD PTR [ebp+0xc],0x0
 100610a:	je     0x1006157
 100610c:	cmp    DWORD PTR [ebp+0x18],0x0
 1006110:	je     0x1006157
 1006112:	mov    eax,DWORD PTR [ebp+0x14]
 1006115:	movzx  ecx,WORD PTR [eax]
 1006118:	test   ecx,ecx
 100611a:	je     0x1006157
 100611c:	mov    edx,DWORD PTR [ebp+0x8]
 100611f:	mov    eax,DWORD PTR [ebp+0x14]
 1006122:	mov    cx,WORD PTR [eax]
 1006125:	mov    WORD PTR [edx],cx
 1006128:	mov    edx,DWORD PTR [ebp+0x8]
 100612b:	add    edx,0x2
 100612e:	mov    DWORD PTR [ebp+0x8],edx
 1006131:	mov    eax,DWORD PTR [ebp+0x14]
 1006134:	add    eax,0x2
 1006137:	mov    DWORD PTR [ebp+0x14],eax
 100613a:	mov    ecx,DWORD PTR [ebp+0xc]
 100613d:	sub    ecx,0x1
 1006140:	mov    DWORD PTR [ebp+0xc],ecx
 1006143:	mov    edx,DWORD PTR [ebp+0x18]
 1006146:	sub    edx,0x1
 1006149:	mov    DWORD PTR [ebp+0x18],edx
 100614c:	mov    eax,DWORD PTR [ebp-0x4]
 100614f:	add    eax,0x1
 1006152:	mov    DWORD PTR [ebp-0x4],eax
 1006155:	jmp    0x1006106
 1006157:	cmp    DWORD PTR [ebp+0xc],0x0
 100615b:	jne    0x1006176
 100615d:	mov    ecx,DWORD PTR [ebp+0x8]
 1006160:	sub    ecx,0x2
 1006163:	mov    DWORD PTR [ebp+0x8],ecx
 1006166:	mov    edx,DWORD PTR [ebp-0x4]
 1006169:	sub    edx,0x1
 100616c:	mov    DWORD PTR [ebp-0x4],edx
 100616f:	mov    DWORD PTR [ebp-0x8],0x8007007a
 1006176:	mov    eax,DWORD PTR [ebp+0x8]
 1006179:	mov    WORD PTR [eax],0x0
 100617e:	cmp    DWORD PTR [ebp+0x10],0x0
 1006182:	je     0x100618c
 1006184:	mov    ecx,DWORD PTR [ebp+0x10]
 1006187:	mov    edx,DWORD PTR [ebp-0x4]
 100618a:	mov    DWORD PTR [ecx],edx
 100618c:	mov    eax,DWORD PTR [ebp-0x8]
 100618f:	mov    esp,ebp
 1006191:	pop    ebp
 1006192:	ret    0x14
 1006195:	int3   
 1006196:	int3   
 1006197:	int3   
 1006198:	int3   
 1006199:	int3   
 100619a:	mov    edi,edi
 100619c:	push   ebp
 100619d:	mov    ebp,esp
 100619f:	mov    ecx,DWORD PTR [ebp+0x8]
 10061a2:	mov    edx,0xffff
 10061a7:	xor    eax,eax
 10061a9:	cmp    WORD PTR [ecx],dx
 10061ac:	jne    0x10061b5
 10061ae:	cmp    WORD PTR [ecx+0x2],ax
 10061b2:	jne    0x10061b5
 10061b4:	inc    eax
 10061b5:	pop    ebp
 10061b6:	ret    0x4
 10061b9:	int3   
 10061ba:	int3   
 10061bb:	int3   
 10061bc:	int3   
 10061bd:	int3   
 10061be:	ret    
 10061bf:	int3   
 10061c0:	int3   
 10061c1:	int3   
 10061c2:	int3   
 10061c3:	int3   
 10061c4:	mov    edi,edi
 10061c6:	push   ebp
 10061c7:	mov    ebp,esp
 10061c9:	push   DWORD PTR [ebp+0x14]
 10061cc:	push   DWORD PTR [ebp+0x10]
 10061cf:	push   DWORD PTR [ebp+0xc]
 10061d2:	push   DWORD PTR [ebp+0x8]
 10061d5:	push   0x1
 10061d7:	push   0x400
 10061dc:	call   DWORD PTR ds:0x10010c4
 10061e2:	sub    eax,0x2
 10061e5:	neg    eax
 10061e7:	sbb    eax,eax
 10061e9:	inc    eax
 10061ea:	pop    ebp
 10061eb:	ret    0x10
 10061ee:	int3   
 10061ef:	int3   
 10061f0:	int3   
 10061f1:	int3   
 10061f2:	int3   
 10061f3:	mov    edi,edi
 10061f5:	push   ebp
 10061f6:	mov    ebp,esp
 10061f8:	cmp    DWORD PTR ds:0x100a430,0x0
 10061ff:	je     0x1006213
 1006201:	push   DWORD PTR [ebp+0x18]
 1006204:	push   DWORD PTR [ebp+0xc]
 1006207:	push   DWORD PTR [ebp+0x8]
 100620a:	call   0x1006be9
 100620f:	pop    ebp
 1006210:	ret    0x14
 1006213:	pop    ebp
 1006214:	jmp    DWORD PTR ds:0x1001004
 100621a:	int3   
 100621b:	int3   
 100621c:	int3   
 100621d:	int3   
 100621e:	int3   
 100621f:	mov    edi,edi
 1006221:	push   ebp
 1006222:	mov    ebp,esp
 1006224:	sub    esp,0xc
 1006227:	cmp    DWORD PTR ds:0x100a430,0x0
 100622e:	je     0x1006455
 1006234:	push   ebx
 1006235:	push   esi
 1006236:	push   DWORD PTR [ebp+0x8]
 1006239:	call   0x10066ba
 100623e:	mov    ecx,DWORD PTR [ebp+0xc]
 1006241:	xor    ebx,ebx
 1006243:	test   ecx,ecx
 1006245:	je     0x100624c
 1006247:	cmp    WORD PTR [ecx],bx
 100624a:	jne    0x1006251
 100624c:	mov    ecx,0x1001df8
 1006251:	push   ecx
 1006252:	push   eax
 1006253:	call   0x100696e
 1006258:	mov    esi,eax
 100625a:	test   esi,esi
 100625c:	je     0x1006448
 1006262:	push   esi
 1006263:	call   0x100619a
 1006268:	test   eax,eax
 100626a:	jne    0x1006443
 1006270:	push   edi
 1006271:	lea    eax,[ebp+0x8]
 1006274:	push   eax
 1006275:	push   ebx
 1006276:	push   0x1001dfc
 100627b:	xor    edi,edi
 100627d:	push   esi
 100627e:	mov    DWORD PTR [ebp+0x8],ebx
 1006281:	inc    edi
 1006282:	mov    DWORD PTR [ebp-0x4],ebx
 1006285:	call   0x1007050
 100628a:	add    esp,0x10
 100628d:	push   0x4
 100628f:	pop    ebx
 1006290:	cmp    eax,edi
 1006292:	jne    0x100629f
 1006294:	mov    DWORD PTR [ebp+0xc],ebx
 1006297:	lea    eax,[ebp+0x8]
 100629a:	jmp    0x10063ce
 100629f:	push   ebx
 10062a0:	push   0x1001e14
 10062a5:	push   ebx
 10062a6:	push   esi
 10062a7:	call   0x10061c4
 10062ac:	push   0x3
 10062ae:	pop    edx
 10062af:	test   al,al
 10062b1:	je     0x10062ba
 10062b3:	mov    ecx,ebx
 10062b5:	mov    DWORD PTR [ebp+0xc],edx
 10062b8:	jmp    0x100630f
 10062ba:	push   ebx
 10062bb:	push   0x1001e20
 10062c0:	push   ebx
 10062c1:	push   esi
 10062c2:	call   0x10061c4
 10062c7:	test   al,al
 10062c9:	je     0x10063f5
 10062cf:	lea    ecx,[ebp-0x8]
 10062d2:	push   ecx
 10062d3:	xor    ecx,ecx
 10062d5:	push   ecx
 10062d6:	lea    eax,[esi+0x8]
 10062d9:	push   0x1001e2c
 10062de:	push   eax
 10062df:	call   0x1007050
 10062e4:	add    esp,0x10
 10062e7:	cmp    eax,0x1
 10062ea:	jne    0x10063f5
 10062f0:	push   0x3a
 10062f2:	pop    eax
 10062f3:	mov    ecx,ebx
 10062f5:	cmp    WORD PTR [esi+0x8],ax
 10062f9:	je     0x1006302
 10062fb:	inc    ecx
 10062fc:	cmp    WORD PTR [esi+ecx*2],ax
 1006300:	jne    0x10062fb
 1006302:	mov    edi,DWORD PTR [ebp-0x8]
 1006305:	mov    DWORD PTR [ebp+0xc],edi
 1006308:	inc    ecx
 1006309:	je     0x10063f5
 100630f:	mov    edx,esi
 1006311:	lea    edi,[edx+0x2]
 1006314:	xor    ebx,ebx
 1006316:	mov    ax,WORD PTR [edx]
 1006319:	add    edx,0x2
 100631c:	cmp    ax,bx
 100631f:	jne    0x1006316
 1006321:	sub    edx,edi
 1006323:	sar    edx,1
 1006325:	sub    edx,ecx
 1006327:	push   0x3
 1006329:	pop    edi
 100632a:	mov    eax,edx
 100632c:	xor    edx,edx
 100632e:	div    edi
 1006330:	lea    edi,[esi+ecx*2]
 1006333:	xor    ecx,ecx
 1006335:	mov    DWORD PTR [ebp+0x10],ecx
 1006338:	lea    ebx,[eax+0x1]
 100633b:	lea    eax,[ebp+0x8]
 100633e:	push   eax
 100633f:	push   ecx
 1006340:	push   0x1001e38
 1006345:	push   edi
 1006346:	mov    DWORD PTR [ebp-0xc],ebx
 1006349:	call   0x1007050
 100634e:	add    esp,0x10
 1006351:	cmp    eax,0x1
 1006354:	jne    0x10063a5
 1006356:	mov    ebx,DWORD PTR [ebp+0x10]
 1006359:	push   0x2c
 100635b:	pop    ecx
 100635c:	jmp    0x1006366
 100635e:	test   ax,ax
 1006361:	je     0x100636e
 1006363:	add    edi,0x2
 1006366:	movzx  eax,WORD PTR [edi]
 1006369:	cmp    ax,cx
 100636c:	jne    0x100635e
 100636e:	mov    al,BYTE PTR [ebp+0x8]
 1006371:	mov    BYTE PTR [ebx+esi*1],al
 1006374:	inc    ebx
 1006375:	cmp    WORD PTR [edi],cx
 1006378:	jne    0x100637d
 100637a:	add    edi,0x2
 100637d:	xor    ecx,ecx
 100637f:	cmp    WORD PTR [edi],cx
 1006382:	je     0x100639f
 1006384:	lea    eax,[ebp+0x8]
 1006387:	push   eax
 1006388:	push   ecx
 1006389:	push   0x1001e38
 100638e:	push   edi
 100638f:	call   0x1007050
 1006394:	add    esp,0x10
 1006397:	push   0x2c
 1006399:	pop    ecx
 100639a:	cmp    eax,0x1
 100639d:	je     0x1006366
 100639f:	mov    DWORD PTR [ebp+0x10],ebx
 10063a2:	mov    ebx,DWORD PTR [ebp-0xc]
 10063a5:	mov    eax,DWORD PTR [ebp+0x10]
 10063a8:	cmp    ebx,eax
 10063aa:	jne    0x10063f0
 10063ac:	mov    edx,DWORD PTR [ebp+0xc]
 10063af:	cmp    edx,0x1
 10063b2:	je     0x10063be
 10063b4:	cmp    edx,0x7
 10063b7:	je     0x10063be
 10063b9:	cmp    edx,0x2
 10063bc:	jne    0x10063cc
 10063be:	test   bl,0x1
 10063c1:	jne    0x10063f0
 10063c3:	add    ebx,0x2
 10063c6:	xor    ecx,ecx
 10063c8:	mov    WORD PTR [eax+esi*1],cx
 10063cc:	mov    eax,esi
 10063ce:	mov    edi,DWORD PTR [ebp+0xc]
 10063d1:	cmp    DWORD PTR [ebp+0x18],0x0
 10063d5:	mov    ecx,DWORD PTR [ebp+0x1c]
 10063d8:	je     0x100641d
 10063da:	cmp    DWORD PTR [ecx],ebx
 10063dc:	jb     0x1006416
 10063de:	push   ebx
 10063df:	push   eax
 10063e0:	push   DWORD PTR [ebp+0x18]
 10063e3:	call   0x100705c
 10063e8:	mov    ecx,DWORD PTR [ebp+0x1c]
 10063eb:	add    esp,0xc
 10063ee:	jmp    0x100641d
 10063f0:	push   0xd
 10063f2:	pop    ebx
 10063f3:	jmp    0x100642f
 10063f5:	mov    ebx,esi
 10063f7:	lea    ecx,[ebx+0x2]
 10063fa:	xor    edx,edx
 10063fc:	mov    ax,WORD PTR [ebx]
 10063ff:	add    ebx,0x2
 1006402:	cmp    ax,dx
 1006405:	jne    0x10063fc
 1006407:	sub    ebx,ecx
 1006409:	sar    ebx,1
 100640b:	lea    ebx,[ebx*2+0x2]
 1006412:	mov    eax,esi
 1006414:	jmp    0x10063d1
 1006416:	mov    DWORD PTR [ebp-0x4],0xea
 100641d:	mov    eax,DWORD PTR [ebp+0x14]
 1006420:	test   eax,eax
 1006422:	je     0x1006426
 1006424:	mov    DWORD PTR [eax],edi
 1006426:	test   ecx,ecx
 1006428:	je     0x100642c
 100642a:	mov    DWORD PTR [ecx],ebx
 100642c:	mov    ebx,DWORD PTR [ebp-0x4]
 100642f:	pop    edi
 1006430:	push   esi
 1006431:	xor    eax,eax
 1006433:	push   eax
 1006434:	call   DWORD PTR ds:0x100101c
 100643a:	push   eax
 100643b:	call   DWORD PTR ds:0x1001028
 1006441:	jmp    0x100644b
 1006443:	push   0x2
 1006445:	pop    ebx
 1006446:	jmp    0x1006430
 1006448:	push   0x8
 100644a:	pop    ebx
 100644b:	push   ebx
 100644c:	call   0x1006476
 1006451:	pop    esi
 1006452:	pop    ebx
 1006453:	jmp    0x100646d
 1006455:	push   DWORD PTR [ebp+0x1c]
 1006458:	push   DWORD PTR [ebp+0x18]
 100645b:	push   DWORD PTR [ebp+0x14]
 100645e:	push   DWORD PTR [ebp+0x10]
 1006461:	push   DWORD PTR [ebp+0xc]
 1006464:	push   DWORD PTR [ebp+0x8]
 1006467:	call   DWORD PTR ds:0x1001008
 100646d:	leave  
 100646e:	ret    0x18
 1006471:	int3   
 1006472:	int3   
 1006473:	int3   
 1006474:	int3   
 1006475:	int3   
 1006476:	mov    edi,edi
 1006478:	push   ebp
 1006479:	mov    ebp,esp
 100647b:	push   DWORD PTR [ebp+0x8]
 100647e:	call   DWORD PTR ds:0x10010f0
 1006484:	mov    eax,DWORD PTR [ebp+0x8]
 1006487:	pop    ebp
 1006488:	ret    0x4
 100648b:	int3   
 100648c:	int3   
 100648d:	int3   
 100648e:	int3   
 100648f:	int3   
 1006490:	mov    edi,edi
 1006492:	push   ebp
 1006493:	mov    ebp,esp
 1006495:	push   ecx
 1006496:	cmp    DWORD PTR ds:0x100a430,0x0
 100649d:	push   esi
 100649e:	mov    esi,DWORD PTR [ebp+0xc]
 10064a1:	je     0x10064ab
 10064a3:	xor    eax,eax
 10064a5:	inc    eax
 10064a6:	jmp    0x1006663
 10064ab:	push   edi
 10064ac:	call   0x10061be
 10064b1:	xor    edi,edi
 10064b3:	test   esi,esi
 10064b5:	je     0x10064cd
 10064b7:	mov    ecx,esi
 10064b9:	lea    edx,[ecx+0x2]
 10064bc:	mov    ax,WORD PTR [ecx]
 10064bf:	add    ecx,0x2
 10064c2:	cmp    ax,di
 10064c5:	jne    0x10064bc
 10064c7:	sub    ecx,edx
 10064c9:	sar    ecx,1
 10064cb:	jmp    0x10064d0
 10064cd:	push   0x3
 10064cf:	pop    ecx
 10064d0:	inc    ecx
 10064d1:	push   ebx
 10064d2:	mov    eax,0x104
 10064d7:	sub    eax,ecx
 10064d9:	push   eax
 10064da:	push   0x100a448
 10064df:	push   DWORD PTR [ebp+0x8]
 10064e2:	mov    DWORD PTR [ebp-0x4],ecx
 10064e5:	call   DWORD PTR ds:0x10010c8
 10064eb:	mov    edx,eax
 10064ed:	test   edx,edx
 10064ef:	je     0x100665f
 10064f5:	lea    eax,[edx*2+0x100a446]
 10064fc:	push   eax
 10064fd:	call   0x10061be
 1006502:	add    esp,0x4
 1006505:	push   0x5c
 1006507:	mov    ecx,edi
 1006509:	mov    ebx,edi
 100650b:	xor    edi,edi
 100650d:	pop    esi
 100650e:	cmp    eax,0x100a448
 1006513:	jbe    0x1006531
 1006515:	test   ebx,ebx
 1006517:	jne    0x1006523
 1006519:	cmp    WORD PTR [eax],0x2e
 100651d:	jne    0x100652a
 100651f:	mov    ebx,eax
 1006521:	jmp    0x100652a
 1006523:	cmp    WORD PTR [eax],si
 1006526:	jne    0x100652a
 1006528:	mov    ecx,eax
 100652a:	sub    eax,0x2
 100652d:	test   ecx,ecx
 100652f:	je     0x100650e
 1006531:	mov    esi,DWORD PTR [ebp+0xc]
 1006534:	test   ecx,ecx
 1006536:	je     0x100665f
 100653c:	add    ecx,0x2
 100653f:	add    ebx,0x2
 1006542:	test   esi,esi
 1006544:	je     0x1006558
 1006546:	mov    eax,DWORD PTR [ebp-0x4]
 1006549:	add    eax,eax
 100654b:	push   eax
 100654c:	push   esi
 100654d:	push   ecx
 100654e:	call   0x100705c
 1006553:	add    esp,0xc
 1006556:	jmp    0x1006599
 1006558:	mov    eax,ecx
 100655a:	sub    eax,0x100a448
 100655f:	sar    eax,1
 1006561:	sub    edx,eax
 1006563:	push   edx
 1006564:	push   ecx
 1006565:	push   DWORD PTR ds:0x10090c8
 100656b:	push   DWORD PTR ds:0x10090c4
 1006571:	call   0x10061c4
 1006576:	test   al,al
 1006578:	je     0x100657d
 100657a:	xor    edi,edi
 100657c:	inc    edi
 100657d:	mov    eax,DWORD PTR [ebp-0x4]
 1006580:	add    eax,eax
 1006582:	push   eax
 1006583:	push   0x1001cdc
 1006588:	push   ebx
 1006589:	call   0x100705c
 100658e:	add    esp,0xc
 1006591:	test   edi,edi
 1006593:	jne    0x100665f
 1006599:	mov    ebx,0x100a448
 100659e:	push   ebx
 100659f:	call   DWORD PTR ds:0x10010b4
 10065a5:	cmp    eax,0xffffffff
 10065a8:	je     0x100665f
 10065ae:	mov    eax,0x100a858
 10065b3:	mov    esi,ebx
 10065b5:	mov    ecx,0x82
 10065ba:	mov    edi,eax
 10065bc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 10065be:	mov    ecx,eax
 10065c0:	lea    edx,[ecx+0x2]
 10065c3:	xor    ebx,ebx
 10065c5:	mov    ax,WORD PTR [ecx]
 10065c8:	add    ecx,0x2
 10065cb:	cmp    ax,bx
 10065ce:	jne    0x10065c5
 10065d0:	sub    ecx,edx
 10065d2:	sar    ecx,1
 10065d4:	push   0x5c
 10065d6:	lea    eax,[ecx*2+0x100a856]
 10065dd:	pop    ecx
 10065de:	mov    esi,0x100a858
 10065e3:	cmp    WORD PTR [eax],cx
 10065e6:	je     0x10065f1
 10065e8:	cmp    eax,esi
 10065ea:	jbe    0x10065f1
 10065ec:	sub    eax,0x2
 10065ef:	jmp    0x10065e3
 10065f1:	xor    edx,edx
 10065f3:	mov    WORD PTR [eax],dx
 10065f6:	sub    eax,esi
 10065f8:	sar    eax,1
 10065fa:	inc    eax
 10065fb:	push   esi
 10065fc:	mov    ds:0x100a434,eax
 1006601:	call   0x10061be
 1006606:	mov    eax,0x100a650
 100660b:	mov    ecx,0x82
 1006610:	mov    esi,0x100a448
 1006615:	mov    edi,eax
 1006617:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
 1006619:	mov    ecx,eax
 100661b:	add    esp,0x4
 100661e:	lea    edx,[ecx+0x2]
 1006621:	mov    ax,WORD PTR [ecx]
 1006624:	add    ecx,0x2
 1006627:	cmp    ax,bx
 100662a:	jne    0x1006621
 100662c:	sub    ecx,edx
 100662e:	sar    ecx,1
 1006630:	lea    edi,[ecx*2+0x100a650]
 1006637:	mov    esi,0x1001bec
 100663c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100663d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 100663e:	push   0x100a650
 1006643:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
 1006645:	call   0x10061be
 100664a:	mov    eax,DWORD PTR [ebp+0x10]
 100664d:	mov    ds:0x100a43c,eax
 1006652:	xor    eax,eax
 1006654:	add    esp,0x4
 1006657:	inc    eax
 1006658:	mov    ds:0x100a430,eax
 100665d:	jmp    0x1006661
 100665f:	xor    eax,eax
 1006661:	pop    ebx
 1006662:	pop    edi
 1006663:	pop    esi
 1006664:	leave  
 1006665:	ret    0xc
 1006668:	int3   
 1006669:	int3   
 100666a:	int3   
 100666b:	int3   
 100666c:	int3   
 100666d:	mov    edi,edi
 100666f:	push   ebp
 1006670:	mov    ebp,esp
 1006672:	sub    esp,0x1c
 1006675:	push   0x1c
 1006677:	lea    eax,[ebp-0x1c]
 100667a:	push   eax
 100667b:	push   0x100666d
 1006680:	call   DWORD PTR ds:0x10010ec
 1006686:	test   eax,eax
 1006688:	jne    0x100668c
 100668a:	leave  
 100668b:	ret    
 100668c:	push   esi
 100668d:	mov    esi,DWORD PTR [ebp-0x18]
 1006690:	push   0x0
 1006692:	push   0x0
 1006694:	push   esi
 1006695:	call   0x1006490
 100669a:	test   eax,eax
 100669c:	jne    0x10066af
 100669e:	push   0x1
 10066a0:	push   0x1001ce4
 10066a5:	push   esi
 10066a6:	call   0x1006490
 10066ab:	test   eax,eax
 10066ad:	je     0x10066b2
 10066af:	xor    eax,eax
 10066b1:	inc    eax
 10066b2:	pop    esi
 10066b3:	leave  
 10066b4:	ret    
 10066b5:	int3   
 10066b6:	int3   
 10066b7:	int3   
 10066b8:	int3   
 10066b9:	int3   
 10066ba:	mov    edi,edi
 10066bc:	push   ebp
 10066bd:	mov    ebp,esp
 10066bf:	cmp    DWORD PTR ds:0x100a430,0x0
 10066c6:	jne    0x10066ce
 10066c8:	call   DWORD PTR ds:0x10010f4
 10066ce:	mov    eax,DWORD PTR [ebp+0x8]
 10066d1:	cmp    eax,0x80000000
 10066d6:	jne    0x10066df
 10066d8:	mov    eax,0x1001d00
 10066dd:	jmp    0x1006731
 10066df:	cmp    eax,0x80000001
 10066e4:	jne    0x10066ed
 10066e6:	mov    eax,0x1001d24
 10066eb:	jmp    0x1006731
 10066ed:	cmp    eax,0x80000002
 10066f2:	jne    0x10066fb
 10066f4:	mov    eax,0x1001d48
 10066f9:	jmp    0x1006731
 10066fb:	cmp    eax,0x80000003
 1006700:	jne    0x1006709
 1006702:	mov    eax,0x1001d70
 1006707:	jmp    0x1006731
 1006709:	cmp    eax,0x80000004
 100670e:	jne    0x1006717
 1006710:	mov    eax,0x1001d88
 1006715:	jmp    0x1006731
 1006717:	cmp    eax,0x80000005
 100671c:	jne    0x1006725
 100671e:	mov    eax,0x1001db4
 1006723:	jmp    0x1006731
 1006725:	cmp    eax,0x80000006
 100672a:	jne    0x1006731
 100672c:	mov    eax,0x1001ddc
 1006731:	pop    ebp
 1006732:	ret    0x4
 1006735:	int3   
 1006736:	int3   
 1006737:	int3   
 1006738:	int3   
 1006739:	int3   
 100673a:	mov    edi,edi
 100673c:	push   ebp
 100673d:	mov    ebp,esp
 100673f:	push   ebx
 1006740:	push   esi
 1006741:	push   edi
 1006742:	push   DWORD PTR [ebp+0x8]
 1006745:	call   0x10066ba
 100674a:	mov    ecx,eax
 100674c:	mov    DWORD PTR [ebp+0x8],eax
 100674f:	lea    edx,[ecx+0x2]
 1006752:	xor    ebx,ebx
 1006754:	mov    ax,WORD PTR [ecx]
 1006757:	add    ecx,0x2
 100675a:	cmp    ax,bx
 100675d:	jne    0x1006754
 100675f:	sub    ecx,edx
 1006761:	sar    ecx,1
 1006763:	lea    esi,[ecx+ecx*1]
 1006766:	mov    ecx,DWORD PTR [ebp+0xc]
 1006769:	lea    edx,[ecx+0x2]
 100676c:	mov    ax,WORD PTR [ecx]
 100676f:	add    ecx,0x2
 1006772:	cmp    ax,bx
 1006775:	jne    0x100676c
 1006777:	sub    ecx,edx
 1006779:	sar    ecx,1
 100677b:	lea    edi,[ecx+ecx*1]
 100677e:	lea    eax,[esi+0x4]
 1006781:	add    eax,edi
 1006783:	push   eax
 1006784:	push   ebx
 1006785:	call   DWORD PTR ds:0x100101c
 100678b:	push   eax
 100678c:	call   DWORD PTR ds:0x1001030
 1006792:	mov    ebx,eax
 1006794:	test   ebx,ebx
 1006796:	je     0x10067c7
 1006798:	push   esi
 1006799:	push   DWORD PTR [ebp+0x8]
 100679c:	push   ebx
 100679d:	call   0x100705c
 10067a2:	push   0x5c
 10067a4:	pop    eax
 10067a5:	shr    esi,1
 10067a7:	lea    esi,[ebx+esi*2]
 10067aa:	push   edi
 10067ab:	push   DWORD PTR [ebp+0xc]
 10067ae:	mov    WORD PTR [esi],ax
 10067b1:	add    esi,0x2
 10067b4:	push   esi
 10067b5:	call   0x100705c
 10067ba:	shr    edi,1
 10067bc:	add    esp,0x18
 10067bf:	xor    eax,eax
 10067c1:	mov    WORD PTR [esi+edi*2],ax
 10067c5:	mov    eax,ebx
 10067c7:	pop    edi
 10067c8:	pop    esi
 10067c9:	pop    ebx
 10067ca:	pop    ebp
 10067cb:	ret    0x8
 10067ce:	int3   
 10067cf:	int3   
 10067d0:	int3   
 10067d1:	int3   
 10067d2:	int3   
 10067d3:	mov    edi,edi
 10067d5:	push   ebp
 10067d6:	mov    ebp,esp
 10067d8:	push   ecx
 10067d9:	push   ecx
 10067da:	push   ebx
 10067db:	push   esi
 10067dc:	mov    esi,DWORD PTR [ebp+0x8]
 10067df:	push   edi
 10067e0:	mov    DWORD PTR [ebp-0x8],0x80
 10067e7:	lea    ecx,[esi+0x2]
 10067ea:	xor    edx,edx
 10067ec:	mov    ax,WORD PTR [esi]
 10067ef:	add    esi,0x2
 10067f2:	cmp    ax,dx
 10067f5:	jne    0x10067ec
 10067f7:	sub    esi,ecx
 10067f9:	sar    esi,1
 10067fb:	lea    ebx,[esi+0x80]
 1006801:	lea    eax,[ebx+ebx*1]
 1006804:	push   eax
 1006805:	push   edx
 1006806:	mov    DWORD PTR [ebp-0x4],ebx
 1006809:	call   DWORD PTR ds:0x100101c
 100680f:	jmp    0x100687e
 1006811:	push   0x5
 1006813:	push   0x1001be0
 1006818:	push   esi
 1006819:	push   DWORD PTR [ebp+0x8]
 100681c:	call   0x10061c4
 1006821:	test   al,al
 1006823:	je     0x1006844
 1006825:	mov    ebx,DWORD PTR ds:0x100a434
 100682b:	cmp    ebx,DWORD PTR [ebp-0x4]
 100682e:	ja     0x1006854
 1006830:	lea    eax,[ebx+ebx*1]
 1006833:	push   eax
 1006834:	push   0x100a858
 1006839:	push   edi
 100683a:	call   0x100705c
 100683f:	add    esp,0xc
 1006842:	jmp    0x1006851
 1006844:	push   ebx
 1006845:	push   edi
 1006846:	push   DWORD PTR [ebp+0x8]
 1006849:	call   DWORD PTR ds:0x1001100
 100684f:	mov    ebx,eax
 1006851:	cmp    ebx,DWORD PTR [ebp-0x4]
 1006854:	jle    0x100688b
 1006856:	mov    eax,DWORD PTR [ebp-0x8]
 1006859:	add    eax,eax
 100685b:	push   edi
 100685c:	mov    edi,DWORD PTR ds:0x100101c
 1006862:	lea    ebx,[esi+eax*1]
 1006865:	push   0x0
 1006867:	mov    DWORD PTR [ebp-0x8],eax
 100686a:	mov    DWORD PTR [ebp-0x4],ebx
 100686d:	call   edi
 100686f:	push   eax
 1006870:	call   DWORD PTR ds:0x1001028
 1006876:	lea    eax,[ebx+ebx*1]
 1006879:	push   eax
 100687a:	push   0x0
 100687c:	call   edi
 100687e:	push   eax
 100687f:	call   DWORD PTR ds:0x1001030
 1006885:	mov    edi,eax
 1006887:	test   edi,edi
 1006889:	jne    0x1006811
 100688b:	mov    eax,edi
 100688d:	pop    edi
 100688e:	pop    esi
 100688f:	pop    ebx
 1006890:	leave  
 1006891:	ret    0x4
 1006894:	int3   
 1006895:	int3   
 1006896:	int3   
 1006897:	int3   
 1006898:	int3   
 1006899:	mov    edi,edi
 100689b:	push   ebp
 100689c:	mov    ebp,esp
 100689e:	push   ebx
 100689f:	push   esi
 10068a0:	push   0x100
 10068a5:	push   0x0
 10068a7:	mov    ebx,0x80
 10068ac:	call   DWORD PTR ds:0x100101c
 10068b2:	push   eax
 10068b3:	call   DWORD PTR ds:0x1001030
 10068b9:	mov    esi,eax
 10068bb:	test   esi,esi
 10068bd:	je     0x1006961
 10068c3:	push   edi
 10068c4:	cmp    DWORD PTR [ebp+0x8],0x0
 10068c8:	je     0x1006903
 10068ca:	cmp    DWORD PTR [ebp+0xc],0x0
 10068ce:	je     0x1006903
 10068d0:	push   0x100a650
 10068d5:	push   ebx
 10068d6:	push   esi
 10068d7:	push   0x1001bf8
 10068dc:	push   DWORD PTR [ebp+0xc]
 10068df:	push   DWORD PTR [ebp+0x8]
 10068e2:	call   DWORD PTR ds:0x10010fc
 10068e8:	mov    edi,eax
 10068ea:	lea    ecx,[ebx-0x1]
 10068ed:	cmp    edi,ecx
 10068ef:	je     0x10068fe
 10068f1:	push   esi
 10068f2:	call   0x100619a
 10068f7:	test   eax,eax
 10068f9:	je     0x10068fe
 10068fb:	or     edi,0xffffffff
 10068fe:	cmp    edi,0xffffffff
 1006901:	jne    0x100691d
 1006903:	push   0x100a448
 1006908:	push   ebx
 1006909:	push   esi
 100690a:	push   0x1001bf8
 100690f:	push   DWORD PTR [ebp+0xc]
 1006912:	push   DWORD PTR [ebp+0x8]
 1006915:	call   DWORD PTR ds:0x10010fc
 100691b:	mov    edi,eax
 100691d:	cmp    DWORD PTR [ebp+0x8],0x0
 1006921:	je     0x100692c
 1006923:	cmp    DWORD PTR [ebp+0xc],0x0
 1006927:	lea    eax,[ebx-0x1]
 100692a:	jne    0x100692f
 100692c:	lea    eax,[ebx-0x2]
 100692f:	cmp    edi,eax
 1006931:	jne    0x1006960
 1006933:	push   esi
 1006934:	mov    esi,DWORD PTR ds:0x100101c
 100693a:	push   0x0
 100693c:	add    ebx,ebx
 100693e:	call   esi
 1006940:	push   eax
 1006941:	call   DWORD PTR ds:0x1001028
 1006947:	lea    eax,[ebx+ebx*1]
 100694a:	push   eax
 100694b:	push   0x0
 100694d:	call   esi
 100694f:	push   eax
 1006950:	call   DWORD PTR ds:0x1001030
 1006956:	mov    esi,eax
 1006958:	test   esi,esi
 100695a:	jne    0x10068c4
 1006960:	pop    edi
 1006961:	mov    eax,esi
 1006963:	pop    esi
 1006964:	pop    ebx
 1006965:	pop    ebp
 1006966:	ret    0x8
 1006969:	int3   
 100696a:	int3   
 100696b:	int3   
 100696c:	int3   
 100696d:	int3   
 100696e:	mov    edi,edi
 1006970:	push   ebp
 1006971:	mov    ebp,esp
 1006973:	sub    esp,0xc
 1006976:	push   ebx
 1006977:	mov    ebx,DWORD PTR [ebp+0x8]
 100697a:	push   edi
 100697b:	push   DWORD PTR [ebp+0xc]
 100697e:	push   ebx
 100697f:	call   0x1006899
 1006984:	mov    edi,eax
 1006986:	test   edi,edi
 1006988:	je     0x1006a3b
 100698e:	cmp    DWORD PTR [ebp+0xc],0x0
 1006992:	je     0x1006a3b
 1006998:	test   ebx,ebx
 100699a:	je     0x1006a3b
 10069a0:	push   esi
 10069a1:	push   edi
 10069a2:	call   0x100619a
 10069a7:	xor    edx,edx
 10069a9:	mov    DWORD PTR [ebp-0x8],edx
 10069ac:	test   eax,eax
 10069ae:	je     0x1006a0f
 10069b0:	cmp    DWORD PTR ds:0x100a43c,edx
 10069b6:	je     0x1006a0f
 10069b8:	mov    esi,ebx
 10069ba:	lea    ecx,[esi+0x2]
 10069bd:	mov    ax,WORD PTR [esi]
 10069c0:	add    esi,0x2
 10069c3:	cmp    ax,dx
 10069c6:	jne    0x10069bd
 10069c8:	sub    esi,ecx
 10069ca:	mov    ecx,DWORD PTR [ebp+0xc]
 10069cd:	sar    esi,1
 10069cf:	lea    edx,[ecx+0x2]
 10069d2:	xor    ebx,ebx
 10069d4:	mov    ax,WORD PTR [ecx]
 10069d7:	add    ecx,0x2
 10069da:	cmp    ax,bx
 10069dd:	jne    0x10069d4
 10069df:	sub    ecx,edx
 10069e1:	sar    ecx,1
 10069e3:	mov    eax,0x10090cc
 10069e8:	mov    DWORD PTR [ebp-0xc],ecx
 10069eb:	mov    DWORD PTR [ebp-0x4],eax
 10069ee:	push   DWORD PTR [eax+0x4]
 10069f1:	push   DWORD PTR [eax]
 10069f3:	push   esi
 10069f4:	push   DWORD PTR [ebp+0x8]
 10069f7:	call   0x10061c4
 10069fc:	test   al,al
 10069fe:	jne    0x1006a41
 1006a00:	mov    eax,DWORD PTR [ebp-0x4]
 1006a03:	inc    ebx
 1006a04:	add    eax,0x10
 1006a07:	mov    DWORD PTR [ebp-0x4],eax
 1006a0a:	cmp    ebx,0x1
 1006a0d:	jb     0x10069ee
 1006a0f:	xor    ebx,ebx
 1006a11:	test   edi,edi
 1006a13:	je     0x1006a38
 1006a15:	push   edi
 1006a16:	call   0x100619a
 1006a1b:	test   eax,eax
 1006a1d:	jne    0x1006a38
 1006a1f:	push   edi
 1006a20:	call   0x10067d3
 1006a25:	push   edi
 1006a26:	push   ebx
 1006a27:	mov    esi,eax
 1006a29:	call   DWORD PTR ds:0x100101c
 1006a2f:	push   eax
 1006a30:	call   DWORD PTR ds:0x1001028
 1006a36:	mov    edi,esi
 1006a38:	mov    eax,edi
 1006a3a:	pop    esi
 1006a3b:	pop    edi
 1006a3c:	pop    ebx
 1006a3d:	leave  
 1006a3e:	ret    0x8
 1006a41:	shl    ebx,0x4
 1006a44:	push   DWORD PTR [ebx+0x10090d4]
 1006a4a:	call   0x10067d3
 1006a4f:	mov    edx,eax
 1006a51:	test   edx,edx
 1006a53:	je     0x1006aa1
 1006a55:	mov    ecx,edx
 1006a57:	lea    esi,[ecx+0x2]
 1006a5a:	mov    ax,WORD PTR [ecx]
 1006a5d:	add    ecx,0x2
 1006a60:	cmp    ax,WORD PTR [ebp-0x8]
 1006a64:	jne    0x1006a5a
 1006a66:	push   DWORD PTR [ebp-0xc]
 1006a69:	sub    ecx,esi
 1006a6b:	push   DWORD PTR [ebp+0xc]
 1006a6e:	sar    ecx,1
 1006a70:	push   ecx
 1006a71:	push   edx
 1006a72:	call   0x10061c4
 1006a77:	test   al,al
 1006a79:	je     0x1006a0f
 1006a7b:	push   edi
 1006a7c:	xor    eax,eax
 1006a7e:	push   eax
 1006a7f:	call   DWORD PTR ds:0x100101c
 1006a85:	push   eax
 1006a86:	call   DWORD PTR ds:0x1001028
 1006a8c:	push   DWORD PTR [ebx+0x10090d4]
 1006a92:	push   DWORD PTR [ebp+0x8]
 1006a95:	call   0x1006899
 1006a9a:	mov    edi,eax
 1006a9c:	jmp    0x1006a0f
 1006aa1:	push   edi
 1006aa2:	xor    ebx,ebx
 1006aa4:	push   ebx
 1006aa5:	call   DWORD PTR ds:0x100101c
 1006aab:	push   eax
 1006aac:	call   DWORD PTR ds:0x1001028
 1006ab2:	mov    edi,ebx
 1006ab4:	jmp    0x1006a11
 1006ab9:	int3   
 1006aba:	int3   
 1006abb:	int3   
 1006abc:	int3   
 1006abd:	int3   
 1006abe:	mov    edi,edi
 1006ac0:	push   ebp
 1006ac1:	mov    ebp,esp
 1006ac3:	cmp    DWORD PTR ds:0x100a430,0x0
 1006aca:	je     0x1006b1e
 1006acc:	mov    eax,DWORD PTR [ebp+0x8]
 1006acf:	cmp    eax,0x80000000
 1006ad4:	je     0x1006b10
 1006ad6:	cmp    eax,0x80000001
 1006adb:	je     0x1006b10
 1006add:	cmp    eax,0x80000002
 1006ae2:	je     0x1006b10
 1006ae4:	cmp    eax,0x80000003
 1006ae9:	je     0x1006b10
 1006aeb:	cmp    eax,0x80000004
 1006af0:	je     0x1006b10
 1006af2:	cmp    eax,0x80000005
 1006af7:	je     0x1006b10
 1006af9:	cmp    eax,0x80000006
 1006afe:	je     0x1006b10
 1006b00:	push   eax
 1006b01:	push   0x0
 1006b03:	call   DWORD PTR ds:0x100101c
 1006b09:	push   eax
 1006b0a:	call   DWORD PTR ds:0x1001028
 1006b10:	push   0x0
 1006b12:	call   DWORD PTR ds:0x10010f0
 1006b18:	xor    eax,eax
 1006b1a:	pop    ebp
 1006b1b:	ret    0x4
 1006b1e:	pop    ebp
 1006b1f:	jmp    DWORD PTR ds:0x1001000
 1006b25:	int3   
 1006b26:	int3   
 1006b27:	int3   
 1006b28:	int3   
 1006b29:	int3   
 1006b2a:	mov    edi,edi
 1006b2c:	push   ebp
 1006b2d:	mov    ebp,esp
 1006b2f:	mov    ecx,DWORD PTR [ebp+0x8]
 1006b32:	push   ebx
 1006b33:	push   esi
 1006b34:	push   edi
 1006b35:	cmp    ecx,0x80000000
 1006b3b:	je     0x1006bce
 1006b41:	cmp    ecx,0x80000001
 1006b47:	je     0x1006bce
 1006b4d:	cmp    ecx,0x80000002
 1006b53:	je     0x1006bce
 1006b55:	cmp    ecx,0x80000003
 1006b5b:	je     0x1006bce
 1006b5d:	cmp    ecx,0x80000004
 1006b63:	je     0x1006bce
 1006b65:	cmp    ecx,0x80000005
 1006b6b:	je     0x1006bce
 1006b6d:	cmp    ecx,0x80000006
 1006b73:	je     0x1006bce
 1006b75:	push   ecx
 1006b76:	call   0x10066ba
 1006b7b:	mov    edi,eax
 1006b7d:	mov    ecx,edi
 1006b7f:	lea    edx,[ecx+0x2]
 1006b82:	xor    esi,esi
 1006b84:	mov    ax,WORD PTR [ecx]
 1006b87:	add    ecx,0x2
 1006b8a:	cmp    ax,si
 1006b8d:	jne    0x1006b84
 1006b8f:	sub    ecx,edx
 1006b91:	sar    ecx,1
 1006b93:	lea    ebx,[ecx*2+0x2]
 1006b9a:	push   ebx
 1006b9b:	push   esi
 1006b9c:	call   DWORD PTR ds:0x100101c
 1006ba2:	push   eax
 1006ba3:	call   DWORD PTR ds:0x1001030
 1006ba9:	mov    esi,eax
 1006bab:	test   esi,esi
 1006bad:	jne    0x1006bbc
 1006baf:	push   0x8
 1006bb1:	call   DWORD PTR ds:0x10010f0
 1006bb7:	push   0x8
 1006bb9:	pop    eax
 1006bba:	jmp    0x1006bdd
 1006bbc:	push   ebx
 1006bbd:	push   edi
 1006bbe:	push   esi
 1006bbf:	call   0x100705c
 1006bc4:	mov    eax,DWORD PTR [ebp+0xc]
 1006bc7:	add    esp,0xc
 1006bca:	mov    DWORD PTR [eax],esi
 1006bcc:	jmp    0x1006bd3
 1006bce:	mov    eax,DWORD PTR [ebp+0xc]
 1006bd1:	mov    DWORD PTR [eax],ecx
 1006bd3:	push   0x0
 1006bd5:	call   DWORD PTR ds:0x10010f0
 1006bdb:	xor    eax,eax
 1006bdd:	pop    edi
 1006bde:	pop    esi
 1006bdf:	pop    ebx
 1006be0:	pop    ebp
 1006be1:	ret    0x8
 1006be4:	int3   
 1006be5:	int3   
 1006be6:	int3   
 1006be7:	int3   
 1006be8:	int3   
 1006be9:	mov    edi,edi
 1006beb:	push   ebp
 1006bec:	mov    ebp,esp
 1006bee:	cmp    DWORD PTR ds:0x100a430,0x0
 1006bf5:	push   ebx
 1006bf6:	push   edi
 1006bf7:	je     0x1006c8c
 1006bfd:	mov    eax,DWORD PTR [ebp+0xc]
 1006c00:	test   eax,eax
 1006c02:	je     0x1006c7f
 1006c04:	xor    ebx,ebx
 1006c06:	cmp    WORD PTR [eax],bx
 1006c09:	je     0x1006c7f
 1006c0b:	push   eax
 1006c0c:	push   DWORD PTR [ebp+0x8]
 1006c0f:	call   0x100673a
 1006c14:	mov    edi,eax
 1006c16:	test   edi,edi
 1006c18:	jne    0x1006c2b
 1006c1a:	push   0x8
 1006c1c:	call   DWORD PTR ds:0x10010f0
 1006c22:	push   0x8
 1006c24:	pop    eax
 1006c25:	pop    edi
 1006c26:	pop    ebx
 1006c27:	pop    ebp
 1006c28:	ret    0xc
 1006c2b:	push   esi
 1006c2c:	push   ebx
 1006c2d:	push   edi
 1006c2e:	call   0x1006899
 1006c33:	mov    ebx,eax
 1006c35:	test   ebx,ebx
 1006c37:	je     0x1006c58
 1006c39:	push   ebx
 1006c3a:	call   0x100619a
 1006c3f:	neg    eax
 1006c41:	push   ebx
 1006c42:	sbb    esi,esi
 1006c44:	push   0x0
 1006c46:	and    esi,0x2
 1006c49:	call   DWORD PTR ds:0x100101c
 1006c4f:	push   eax
 1006c50:	call   DWORD PTR ds:0x1001028
 1006c56:	jmp    0x1006c5b
 1006c58:	push   0x8
 1006c5a:	pop    esi
 1006c5b:	test   esi,esi
 1006c5d:	je     0x1006c71
 1006c5f:	push   edi
 1006c60:	push   0x0
 1006c62:	call   DWORD PTR ds:0x100101c
 1006c68:	push   eax
 1006c69:	call   DWORD PTR ds:0x1001028
 1006c6f:	jmp    0x1006c76
 1006c71:	mov    eax,DWORD PTR [ebp+0x10]
 1006c74:	mov    DWORD PTR [eax],edi
 1006c76:	push   esi
 1006c77:	call   0x1006476
 1006c7c:	pop    esi
 1006c7d:	jmp    0x1006c25
 1006c7f:	push   DWORD PTR [ebp+0x10]
 1006c82:	push   DWORD PTR [ebp+0x8]
 1006c85:	call   0x1006b2a
 1006c8a:	jmp    0x1006c25
 1006c8c:	pop    edi
 1006c8d:	pop    ebx
 1006c8e:	pop    ebp
 1006c8f:	jmp    DWORD PTR ds:0x100100c
 1006c95:	int3   
 1006c96:	int3   
 1006c97:	int3   
 1006c98:	int3   
 1006c99:	int3   
 1006c9a:	mov    eax,ds:0x100aa60
 1006c9f:	push   esi
 1006ca0:	mov    esi,DWORD PTR ds:0x100108c
 1006ca6:	test   eax,eax
 1006ca8:	jne    0x1006cc6
 1006caa:	push   0x1001988
 1006caf:	call   DWORD PTR ds:0x10010cc
 1006cb5:	test   eax,eax
 1006cb7:	je     0x1006d11
 1006cb9:	push   eax
 1006cba:	push   0x100aa60
 1006cbf:	call   esi
 1006cc1:	mov    eax,ds:0x100aa60
 1006cc6:	cmp    DWORD PTR ds:0x100aa64,0x0
 1006ccd:	jne    0x1006cec
 1006ccf:	push   0x1001e44
 1006cd4:	push   eax
 1006cd5:	call   DWORD PTR ds:0x10010d8
 1006cdb:	test   eax,eax
 1006cdd:	je     0x1006d11
 1006cdf:	push   eax
 1006ce0:	push   0x100aa64
 1006ce5:	call   esi
 1006ce7:	mov    eax,ds:0x100aa60
 1006cec:	cmp    DWORD PTR ds:0x100aa68,0x0
 1006cf3:	jne    0x1006d0d
 1006cf5:	push   0x1001e58
 1006cfa:	push   eax
 1006cfb:	call   DWORD PTR ds:0x10010d8
 1006d01:	test   eax,eax
 1006d03:	je     0x1006d11
 1006d05:	push   eax
 1006d06:	push   0x100aa68
 1006d0b:	call   esi
 1006d0d:	xor    eax,eax
 1006d0f:	pop    esi
 1006d10:	ret    
 1006d11:	call   DWORD PTR ds:0x1001048
 1006d17:	or     eax,0x80070000
 1006d1c:	pop    esi
 1006d1d:	ret    
 1006d1e:	int3   
 1006d1f:	int3   
 1006d20:	int3   
 1006d21:	int3   
 1006d22:	int3   
 1006d23:	mov    eax,ds:0x100aa60
 1006d28:	test   eax,eax
 1006d2a:	je     0x1006d44
 1006d2c:	push   eax
 1006d2d:	call   DWORD PTR ds:0x10010dc
 1006d33:	xor    eax,eax
 1006d35:	mov    ds:0x100aa60,eax
 1006d3a:	mov    ds:0x100aa64,eax
 1006d3f:	mov    ds:0x100aa68,eax
 1006d44:	ret    
 1006d45:	int3   
 1006d46:	int3   
 1006d47:	int3   
 1006d48:	int3   
 1006d49:	int3   
 1006d4a:	mov    edi,edi
 1006d4c:	push   ebp
 1006d4d:	mov    ebp,esp
 1006d4f:	mov    eax,DWORD PTR [ebp+0xc]
 1006d52:	push   edi
 1006d53:	push   DWORD PTR [ebp+0x8]
 1006d56:	mov    edi,DWORD PTR [ebp+0x14]
 1006d59:	lea    ecx,[eax+eax*1]
 1006d5c:	mov    eax,DWORD PTR [ebp+0x10]
 1006d5f:	call   0x1006d6f
 1006d64:	pop    ecx
 1006d65:	pop    edi
 1006d66:	pop    ebp
 1006d67:	ret    0x10
 1006d6a:	int3   
 1006d6b:	int3   
 1006d6c:	int3   
 1006d6d:	int3   
 1006d6e:	int3   
 1006d6f:	mov    edi,edi
 1006d71:	push   ebp
 1006d72:	mov    ebp,esp
 1006d74:	push   esi
 1006d75:	mov    esi,eax
 1006d77:	mov    eax,0x80004005
 1006d7c:	test   edi,edi
 1006d7e:	je     0x1006df5
 1006d80:	cmp    DWORD PTR [ebp+0x8],0x0
 1006d84:	je     0x1006df5
 1006d86:	test   esi,esi
 1006d88:	jne    0x1006da6
 1006d8a:	cmp    DWORD PTR [edi],esi
 1006d8c:	jne    0x1006dfa
 1006d8e:	mov    eax,ecx
 1006d90:	and    eax,0xfffffff8
 1006d93:	test   ecx,0x7
 1006d99:	jne    0x1006d9f
 1006d9b:	test   eax,eax
 1006d9d:	jne    0x1006da2
 1006d9f:	add    eax,0x8
 1006da2:	mov    DWORD PTR [edi],eax
 1006da4:	jmp    0x1006dd7
 1006da6:	mov    edx,DWORD PTR [edi]
 1006da8:	cmp    ecx,edx
 1006daa:	ja     0x1006dfa
 1006dac:	mov    eax,esi
 1006dae:	test   edx,edx
 1006db0:	je     0x1006db9
 1006db2:	mov    BYTE PTR [eax],0x0
 1006db5:	inc    eax
 1006db6:	dec    edx
 1006db7:	jne    0x1006db2
 1006db9:	push   ecx
 1006dba:	push   DWORD PTR [ebp+0x8]
 1006dbd:	push   esi
 1006dbe:	call   0x100705c
 1006dc3:	add    esp,0xc
 1006dc6:	push   0x0
 1006dc8:	push   DWORD PTR [edi]
 1006dca:	push   esi
 1006dcb:	call   DWORD PTR ds:0x100aa64
 1006dd1:	mov    ecx,eax
 1006dd3:	test   ecx,ecx
 1006dd5:	jne    0x1006ddb
 1006dd7:	xor    eax,eax
 1006dd9:	jmp    0x1006dfa
 1006ddb:	mov    eax,DWORD PTR [edi]
 1006ddd:	test   eax,eax
 1006ddf:	je     0x1006de8
 1006de1:	mov    BYTE PTR [esi],0x0
 1006de4:	inc    esi
 1006de5:	dec    eax
 1006de6:	jne    0x1006de1
 1006de8:	push   ecx
 1006de9:	call   0x1007044
 1006dee:	or     eax,0x80070000
 1006df3:	jmp    0x1006dfa
 1006df5:	mov    eax,0x80070057
 1006dfa:	pop    esi
 1006dfb:	pop    ebp
 1006dfc:	ret    
 1006dfd:	int3   
 1006dfe:	int3   
 1006dff:	int3   
 1006e00:	int3   
 1006e01:	int3   
 1006e02:	mov    edi,edi
 1006e04:	push   ebp
 1006e05:	mov    ebp,esp
 1006e07:	sub    esp,0x44
 1006e0a:	push   ebx
 1006e0b:	mov    eax,0x1000000
 1006e10:	push   esi
 1006e11:	mov    esi,DWORD PTR [ebp+0x8]
 1006e14:	mov    edx,DWORD PTR [esi+0x8]
 1006e17:	mov    ecx,DWORD PTR [esi+0x4]
 1006e1a:	mov    ebx,DWORD PTR [esi+0xc]
 1006e1d:	add    edx,eax
 1006e1f:	push   edi
 1006e20:	mov    edi,DWORD PTR [esi+0x14]
 1006e23:	add    edi,eax
 1006e25:	add    ecx,eax
 1006e27:	mov    DWORD PTR [ebp-0x18],edx
 1006e2a:	mov    edx,DWORD PTR [esi+0x10]
 1006e2d:	add    ebx,eax
 1006e2f:	add    edx,eax
 1006e31:	mov    eax,DWORD PTR [esi+0x1c]
 1006e34:	mov    DWORD PTR [ebp-0x4],eax
 1006e37:	mov    eax,DWORD PTR [ebp+0xc]
 1006e3a:	mov    DWORD PTR [ebp-0x38],ecx
 1006e3d:	xor    ecx,ecx
 1006e3f:	mov    DWORD PTR [ebp-0xc],edi
 1006e42:	mov    DWORD PTR [ebp-0x3c],eax
 1006e45:	xor    eax,eax
 1006e47:	test   DWORD PTR [esi],0x1
 1006e4d:	lea    edi,[ebp-0x30]
 1006e50:	mov    DWORD PTR [ebp-0x44],0x24
 1006e57:	mov    DWORD PTR [ebp-0x40],esi
 1006e5a:	mov    DWORD PTR [ebp-0x34],ecx
 1006e5d:	stos   DWORD PTR es:[edi],eax
 1006e5e:	mov    DWORD PTR [ebp-0x2c],ecx
 1006e61:	mov    DWORD PTR [ebp-0x28],ecx
 1006e64:	mov    DWORD PTR [ebp-0x24],ecx
 1006e67:	jne    0x1006e88
 1006e69:	lea    eax,[ebp-0x44]
 1006e6c:	mov    DWORD PTR [ebp+0xc],eax
 1006e6f:	lea    eax,[ebp+0xc]
 1006e72:	push   eax
 1006e73:	push   0x1
 1006e75:	push   ecx
 1006e76:	push   0xc06d0057
 1006e7b:	call   DWORD PTR ds:0x10010e4
 1006e81:	xor    eax,eax
 1006e83:	jmp    0x1007038
 1006e88:	mov    eax,DWORD PTR [ebp-0x18]
 1006e8b:	mov    edi,DWORD PTR [eax]
 1006e8d:	mov    eax,DWORD PTR [ebp+0xc]
 1006e90:	sub    eax,ebx
 1006e92:	sar    eax,0x2
 1006e95:	shl    eax,0x2
 1006e98:	add    edx,eax
 1006e9a:	mov    edx,DWORD PTR [edx]
 1006e9c:	mov    DWORD PTR [ebp+0x8],eax
 1006e9f:	mov    eax,edx
 1006ea1:	shr    eax,0x1f
 1006ea4:	not    eax
 1006ea6:	and    eax,0x1
 1006ea9:	mov    DWORD PTR [ebp-0x34],eax
 1006eac:	lea    eax,[edx+0x1000002]
 1006eb2:	jne    0x1006eb7
 1006eb4:	movzx  eax,dx
 1006eb7:	mov    DWORD PTR [ebp-0x30],eax
 1006eba:	mov    eax,ds:0x1001ab8
 1006ebf:	xor    ebx,ebx
 1006ec1:	cmp    eax,ecx
 1006ec3:	je     0x1006ed6
 1006ec5:	lea    edx,[ebp-0x44]
 1006ec8:	push   edx
 1006ec9:	push   ecx
 1006eca:	call   eax
 1006ecc:	mov    ebx,eax
 1006ece:	test   ebx,ebx
 1006ed0:	jne    0x100701b
 1006ed6:	test   edi,edi
 1006ed8:	jne    0x1006f80
 1006ede:	mov    eax,ds:0x1001ab8
 1006ee3:	test   eax,eax
 1006ee5:	je     0x1006ef5
 1006ee7:	lea    ecx,[ebp-0x44]
 1006eea:	push   ecx
 1006eeb:	push   0x1
 1006eed:	call   eax
 1006eef:	mov    edi,eax
 1006ef1:	test   edi,edi
 1006ef3:	jne    0x1006f45
 1006ef5:	push   DWORD PTR [ebp-0x38]
 1006ef8:	call   DWORD PTR ds:0x1001020
 1006efe:	mov    edi,eax
 1006f00:	test   edi,edi
 1006f02:	jne    0x1006f45
 1006f04:	call   DWORD PTR ds:0x1001048
 1006f0a:	mov    DWORD PTR [ebp-0x24],eax
 1006f0d:	mov    eax,ds:0x1001abc
 1006f12:	test   eax,eax
 1006f14:	je     0x1006f24
 1006f16:	lea    ecx,[ebp-0x44]
 1006f19:	push   ecx
 1006f1a:	push   0x3
 1006f1c:	call   eax
 1006f1e:	mov    edi,eax
 1006f20:	test   edi,edi
 1006f22:	jne    0x1006f45
 1006f24:	lea    eax,[ebp-0x44]
 1006f27:	mov    DWORD PTR [ebp+0xc],eax
 1006f2a:	lea    eax,[ebp+0xc]
 1006f2d:	push   eax
 1006f2e:	push   0x1
 1006f30:	push   0x0
 1006f32:	push   0xc06d007e
 1006f37:	call   DWORD PTR ds:0x10010e4
 1006f3d:	mov    eax,DWORD PTR [ebp-0x28]
 1006f40:	jmp    0x1007038
 1006f45:	push   edi
 1006f46:	push   DWORD PTR [ebp-0x18]
 1006f49:	call   DWORD PTR ds:0x100108c
 1006f4f:	cmp    eax,edi
 1006f51:	je     0x1006f79
 1006f53:	cmp    DWORD PTR [esi+0x18],0x0
 1006f57:	je     0x1006f80
 1006f59:	push   0x8
 1006f5b:	push   0x40
 1006f5d:	call   DWORD PTR ds:0x10010f8
 1006f63:	test   eax,eax
 1006f65:	je     0x1006f80
 1006f67:	mov    DWORD PTR [eax+0x4],esi
 1006f6a:	mov    ecx,DWORD PTR ds:0x100aa6c
 1006f70:	mov    DWORD PTR [eax],ecx
 1006f72:	mov    ds:0x100aa6c,eax
 1006f77:	jmp    0x1006f80
 1006f79:	push   edi
 1006f7a:	call   DWORD PTR ds:0x10010dc
 1006f80:	mov    eax,ds:0x1001ab8
 1006f85:	mov    DWORD PTR [ebp-0x2c],edi
 1006f88:	test   eax,eax
 1006f8a:	je     0x1006f96
 1006f8c:	lea    ecx,[ebp-0x44]
 1006f8f:	push   ecx
 1006f90:	push   0x2
 1006f92:	call   eax
 1006f94:	mov    ebx,eax
 1006f96:	test   ebx,ebx
 1006f98:	jne    0x1007016
 1006f9a:	cmp    DWORD PTR [esi+0x14],ebx
 1006f9d:	je     0x1006fcb
 1006f9f:	cmp    DWORD PTR [esi+0x1c],ebx
 1006fa2:	je     0x1006fcb
 1006fa4:	mov    eax,DWORD PTR [edi+0x3c]
 1006fa7:	add    eax,edi
 1006fa9:	cmp    DWORD PTR [eax],0x4550
 1006faf:	jne    0x1006fcb
 1006fb1:	mov    ecx,DWORD PTR [ebp-0x4]
 1006fb4:	cmp    DWORD PTR [eax+0x8],ecx
 1006fb7:	jne    0x1006fcb
 1006fb9:	cmp    edi,DWORD PTR [eax+0x34]
 1006fbc:	jne    0x1006fcb
 1006fbe:	mov    eax,DWORD PTR [ebp-0xc]
 1006fc1:	mov    ecx,DWORD PTR [ebp+0x8]
 1006fc4:	mov    ebx,DWORD PTR [ecx+eax*1]
 1006fc7:	test   ebx,ebx
 1006fc9:	jne    0x1007016
 1006fcb:	push   DWORD PTR [ebp-0x30]
 1006fce:	push   edi
 1006fcf:	call   DWORD PTR ds:0x10010d8
 1006fd5:	mov    ebx,eax
 1006fd7:	test   ebx,ebx
 1006fd9:	jne    0x1007016
 1006fdb:	call   DWORD PTR ds:0x1001048
 1006fe1:	mov    DWORD PTR [ebp-0x24],eax
 1006fe4:	mov    eax,ds:0x1001abc
 1006fe9:	test   eax,eax
 1006feb:	je     0x1006ff7
 1006fed:	lea    ecx,[ebp-0x44]
 1006ff0:	push   ecx
 1006ff1:	push   0x4
 1006ff3:	call   eax
 1006ff5:	mov    ebx,eax
 1006ff7:	test   ebx,ebx
 1006ff9:	jne    0x1007016
 1006ffb:	lea    eax,[ebp-0x44]
 1006ffe:	mov    DWORD PTR [ebp+0x8],eax
 1007001:	lea    eax,[ebp+0x8]
 1007004:	push   eax
 1007005:	push   0x1
 1007007:	push   ebx
 1007008:	push   0xc06d007f
 100700d:	call   DWORD PTR ds:0x10010e4
 1007013:	mov    ebx,DWORD PTR [ebp-0x28]
 1007016:	mov    eax,DWORD PTR [ebp+0xc]
 1007019:	mov    DWORD PTR [eax],ebx
 100701b:	mov    eax,ds:0x1001ab8
 1007020:	test   eax,eax
 1007022:	je     0x1007036
 1007024:	and    DWORD PTR [ebp-0x24],0x0
 1007028:	lea    ecx,[ebp-0x44]
 100702b:	push   ecx
 100702c:	push   0x5
 100702e:	mov    DWORD PTR [ebp-0x2c],edi
 1007031:	mov    DWORD PTR [ebp-0x28],ebx
 1007034:	call   eax
 1007036:	mov    eax,ebx
 1007038:	pop    edi
 1007039:	pop    esi
 100703a:	pop    ebx
 100703b:	leave  
 100703c:	ret    0x8
 100703f:	int3   
 1007040:	int3   
 1007041:	int3   
 1007042:	int3   
 1007043:	int3   
 1007044:	jmp    DWORD PTR ds:0x1001010
 100704a:	int3   
 100704b:	int3   
 100704c:	int3   
 100704d:	int3   
 100704e:	int3   
 100704f:	int3   
 1007050:	jmp    DWORD PTR ds:0x10011d4
 1007056:	int3   
 1007057:	int3   
 1007058:	int3   
 1007059:	int3   
 100705a:	int3   
 100705b:	int3   
 100705c:	jmp    DWORD PTR ds:0x10011dc
 1007062:	int3   
 1007063:	int3   
 1007064:	int3   
 1007065:	int3   
 1007066:	int3   
 1007067:	push   DWORD PTR [ebp-0x274]
 100706d:	call   0x1004b30
 1007072:	pop    ecx
 1007073:	ret    
 1007074:	mov    edx,DWORD PTR [esp+0x8]
 1007078:	lea    eax,[edx+0xc]
 100707b:	mov    ecx,DWORD PTR [edx-0x27c]
 1007081:	xor    ecx,eax
 1007083:	call   0x1004b6b
 1007088:	mov    ecx,DWORD PTR [edx-0x4]
 100708b:	xor    ecx,eax
 100708d:	call   0x1004b6b
 1007092:	mov    eax,0x1007640
 1007097:	jmp    0x1004cb8
 100709c:	int3   
 100709d:	int3   
 100709e:	int3   
 100709f:	int3   
 10070a0:	int3   
 10070a1:	mov    ecx,DWORD PTR [ebp-0x10]
 10070a4:	jmp    0x10027d2
 10070a9:	mov    edx,DWORD PTR [esp+0x8]
 10070ad:	lea    eax,[edx+0xc]
 10070b0:	mov    ecx,DWORD PTR [edx-0x14]
 10070b3:	xor    ecx,eax
 10070b5:	call   0x1004b6b
 10070ba:	mov    eax,0x100766c
 10070bf:	jmp    0x1004cb8
 10070c4:	int3   
 10070c5:	int3   
 10070c6:	int3   
 10070c7:	int3   
 10070c8:	int3   
 10070c9:	mov    ecx,DWORD PTR [ebp-0x10]
 10070cc:	jmp    0x10027d2
 10070d1:	mov    edx,DWORD PTR [esp+0x8]
 10070d5:	lea    eax,[edx+0xc]
 10070d8:	mov    ecx,DWORD PTR [edx-0x14]
 10070db:	xor    ecx,eax
 10070dd:	call   0x1004b6b
 10070e2:	mov    eax,0x1007698
 10070e7:	jmp    0x1004cb8
 10070ec:	int3   
 10070ed:	int3   
 10070ee:	int3   
 10070ef:	int3   
 10070f0:	int3   
 10070f1:	lea    ecx,[ebp-0x24]
 10070f4:	jmp    0x1002b62
 10070f9:	lea    ecx,[ebp-0x20]
 10070fc:	jmp    0x1002b62
 1007101:	lea    ecx,[ebp-0x34]
 1007104:	jmp    0x10035b1
 1007109:	lea    ecx,[ebp-0x1c]
 100710c:	jmp    0x10027d2
 1007111:	lea    ecx,[ebp-0x1c]
 1007114:	jmp    0x1002b62
 1007119:	lea    ecx,[ebp-0x18]
 100711c:	jmp    0x10027d2
 1007121:	lea    ecx,[ebp-0x18]
 1007124:	jmp    0x1002b62
 1007129:	lea    ecx,[ebp-0x18]
 100712c:	jmp    0x10027d2
 1007131:	lea    ecx,[ebp-0x1c]
 1007134:	jmp    0x10027d2
 1007139:	lea    ecx,[ebp-0x20]
 100713c:	jmp    0x10027d2
 1007141:	lea    ecx,[ebp-0x24]
 1007144:	jmp    0x10027d2
 1007149:	mov    edx,DWORD PTR [esp+0x8]
 100714d:	lea    eax,[edx+0xc]
 1007150:	mov    ecx,DWORD PTR [edx-0x38]
 1007153:	xor    ecx,eax
 1007155:	call   0x1004b6b
 100715a:	mov    eax,0x10076e0
 100715f:	jmp    0x1004cb8
 1007164:	int3   
 1007165:	int3   
 1007166:	int3   
 1007167:	int3   
 1007168:	int3   
 1007169:	mov    ecx,DWORD PTR [ebp+0x8]
 100716c:	jmp    0x10027d2
 1007171:	mov    eax,DWORD PTR [ebp-0x10]
 1007174:	and    eax,0x1
 1007177:	je     0x1007189
 100717d:	and    DWORD PTR [ebp-0x10],0xfffffffe
 1007181:	mov    ecx,DWORD PTR [ebp+0x8]
 1007184:	jmp    0x1002b62
 1007189:	ret    
 100718a:	mov    edx,DWORD PTR [esp+0x8]
 100718e:	lea    eax,[edx+0xc]
 1007191:	mov    ecx,DWORD PTR [edx-0x14]
 1007194:	xor    ecx,eax
 1007196:	call   0x1004b6b
 100719b:	mov    eax,0x10077e4
 10071a0:	jmp    0x1004cb8
 10071a5:	int3   
 10071a6:	int3   
 10071a7:	int3   
 10071a8:	int3   
 10071a9:	int3   
 10071aa:	mov    ecx,DWORD PTR [ebp-0x10]
 10071ad:	jmp    DWORD PTR ds:0x1001188
 10071b3:	mov    edx,DWORD PTR [esp+0x8]
 10071b7:	lea    eax,[edx+0xc]
 10071ba:	mov    ecx,DWORD PTR [edx-0x14]
 10071bd:	xor    ecx,eax
 10071bf:	call   0x1004b6b
 10071c4:	mov    eax,0x1007810
 10071c9:	jmp    0x1004cb8
 10071ce:	int3   
 10071cf:	int3   
 10071d0:	int3   
 10071d1:	int3   
 10071d2:	int3   
 10071d3:	mov    ecx,DWORD PTR [ebp-0x10]
 10071d6:	jmp    DWORD PTR ds:0x1001188
 10071dc:	mov    edx,DWORD PTR [esp+0x8]
 10071e0:	lea    eax,[edx+0xc]
 10071e3:	mov    ecx,DWORD PTR [edx-0x14]
 10071e6:	xor    ecx,eax
 10071e8:	call   0x1004b6b
 10071ed:	mov    eax,0x100783c
 10071f2:	jmp    0x1004cb8
 10071f7:	int3   
 10071f8:	int3   
 10071f9:	int3   
 10071fa:	int3   
 10071fb:	int3   
 10071fc:	mov    ecx,DWORD PTR [ebp-0x10]
 10071ff:	jmp    DWORD PTR ds:0x1001188
 1007205:	mov    edx,DWORD PTR [esp+0x8]
 1007209:	lea    eax,[edx+0xc]
 100720c:	mov    ecx,DWORD PTR [edx-0x14]
 100720f:	xor    ecx,eax
 1007211:	call   0x1004b6b
 1007216:	mov    eax,0x1007868
 100721b:	jmp    0x1004cb8
 1007220:	int3   
 1007221:	int3   
 1007222:	int3   
 1007223:	int3   
 1007224:	int3   
 1007225:	mov    ecx,DWORD PTR [ebp-0x14]
 1007228:	jmp    0x10027d2
 100722d:	mov    ecx,DWORD PTR [ebp-0x10]
 1007230:	add    ecx,0x8
 1007233:	jmp    0x1002b62
 1007238:	mov    ecx,DWORD PTR [ebp-0x14]
 100723b:	jmp    0x10027d2
 1007240:	mov    ecx,DWORD PTR [ebp-0x10]
 1007243:	add    ecx,0xc
 1007246:	jmp    0x1002b62
 100724b:	mov    edx,DWORD PTR [esp+0x8]
 100724f:	lea    eax,[edx+0xc]
 1007252:	mov    ecx,DWORD PTR [edx-0x18]
 1007255:	xor    ecx,eax
 1007257:	call   0x1004b6b
 100725c:	mov    eax,0x10078ac
 1007261:	jmp    0x1004cb8
 1007266:	int3   
 1007267:	int3   
 1007268:	int3   
 1007269:	int3   
 100726a:	int3   
 100726b:	mov    ecx,DWORD PTR [ebp-0x10]
 100726e:	add    ecx,0x8
 1007271:	jmp    0x1002b62
 1007276:	mov    ecx,DWORD PTR [ebp-0x10]
 1007279:	add    ecx,0xc
 100727c:	jmp    0x1002b62
 1007281:	mov    ecx,DWORD PTR [ebp-0x14]
 1007284:	jmp    0x10027d2
 1007289:	mov    ecx,DWORD PTR [ebp-0x14]
 100728c:	jmp    0x10027d2
 1007291:	mov    edx,DWORD PTR [esp+0x8]
 1007295:	lea    eax,[edx+0xc]
 1007298:	mov    ecx,DWORD PTR [edx-0x18]
 100729b:	xor    ecx,eax
 100729d:	call   0x1004b6b
 10072a2:	mov    eax,0x10078f0
 10072a7:	jmp    0x1004cb8
 10072ac:	int3   
 10072ad:	int3   
 10072ae:	int3   
 10072af:	int3   
 10072b0:	int3   
 10072b1:	mov    edx,DWORD PTR [esp+0x8]
 10072b5:	lea    eax,[edx+0xc]
 10072b8:	mov    ecx,DWORD PTR [edx-0x18]
 10072bb:	xor    ecx,eax
 10072bd:	call   0x1004b6b
 10072c2:	mov    eax,0x1007948
 10072c7:	jmp    0x1004cb8
 10072cc:	int3   
 10072cd:	int3   
 10072ce:	int3   
 10072cf:	int3   
 10072d0:	int3   
 10072d1:	lea    ecx,[ebp-0x10]
 10072d4:	jmp    0x10027d2
 10072d9:	lea    ecx,[ebp-0x10]
 10072dc:	jmp    0x1002b62
 10072e1:	lea    ecx,[ebp-0x10]
 10072e4:	jmp    0x10027d2
 10072e9:	mov    edx,DWORD PTR [esp+0x8]
 10072ed:	lea    eax,[edx+0xc]
 10072f0:	mov    ecx,DWORD PTR [edx-0x14]
 10072f3:	xor    ecx,eax
 10072f5:	call   0x1004b6b
 10072fa:	mov    eax,0x1007984
 10072ff:	jmp    0x1004cb8
 1007304:	int3   
 1007305:	int3   
 1007306:	int3   
 1007307:	int3   
 1007308:	int3   
 1007309:	lea    ecx,[ebp-0x18]
 100730c:	jmp    0x10027d2
 1007311:	lea    ecx,[ebp-0x18]
 1007314:	jmp    0x1002b62
 1007319:	lea    ecx,[ebp-0x1c]
 100731c:	jmp    0x10027d2
 1007321:	lea    ecx,[ebp-0x1c]
 1007324:	jmp    0x1002b62
 1007329:	lea    ecx,[ebp-0x1c]
 100732c:	jmp    0x10027d2
 1007331:	lea    ecx,[ebp-0x18]
 1007334:	jmp    0x10027d2
 1007339:	mov    edx,DWORD PTR [esp+0x8]
 100733d:	lea    eax,[edx+0xc]
 1007340:	mov    ecx,DWORD PTR [edx-0x24]
 1007343:	xor    ecx,eax
 1007345:	call   0x1004b6b
 100734a:	mov    eax,0x10079cc
 100734f:	jmp    0x1004cb8
 1007354:	int3   
 1007355:	int3   
 1007356:	int3   
 1007357:	int3   
 1007358:	int3   
 1007359:	lea    ecx,[ebp-0x28]
 100735c:	jmp    0x1003ed0
 1007361:	mov    edx,DWORD PTR [esp+0x8]
 1007365:	lea    eax,[edx+0xc]
 1007368:	mov    ecx,DWORD PTR [edx-0x2c]
 100736b:	xor    ecx,eax
 100736d:	call   0x1004b6b
 1007372:	mov    eax,0x1007a38
 1007377:	jmp    0x1004cb8
 100737c:	int3   
 100737d:	int3   
 100737e:	int3   
 100737f:	int3   
 1007380:	int3   
 1007381:	lea    ecx,[ebp-0x274]
 1007387:	jmp    0x1002b62
 100738c:	lea    ecx,[ebp-0x26c]
 1007392:	jmp    0x1002b62
 1007397:	lea    ecx,[ebp-0x26c]
 100739d:	jmp    0x10027d2
 10073a2:	lea    ecx,[ebp-0x26c]
 10073a8:	jmp    0x10027d2
 10073ad:	lea    ecx,[ebp-0x26c]
 10073b3:	jmp    0x10027d2
 10073b8:	lea    ecx,[ebp-0x274]
 10073be:	jmp    0x10027d2
 10073c3:	mov    edx,DWORD PTR [esp+0x8]
 10073c7:	lea    eax,[edx+0xc]
 10073ca:	mov    ecx,DWORD PTR [edx-0x288]
 10073d0:	xor    ecx,eax
 10073d2:	call   0x1004b6b
 10073d7:	mov    ecx,DWORD PTR [edx-0x8]
 10073da:	xor    ecx,eax
 10073dc:	call   0x1004b6b
 10073e1:	mov    eax,0x1007a80
 10073e6:	jmp    0x1004cb8
 10073eb:	int3   
 10073ec:	int3   
 10073ed:	int3   
 10073ee:	int3   
 10073ef:	int3   
 10073f0:	lea    ecx,[ebp-0x18]
 10073f3:	jmp    0x10027d2
 10073f8:	lea    ecx,[ebp-0x18]
 10073fb:	jmp    0x1002b62
 1007400:	lea    ecx,[ebp-0x18]
 1007403:	jmp    0x10027d2
 1007408:	mov    edx,DWORD PTR [esp+0x8]
 100740c:	lea    eax,[edx+0xc]
 100740f:	mov    ecx,DWORD PTR [edx-0x1c]
 1007412:	xor    ecx,eax
 1007414:	call   0x1004b6b
 1007419:	mov    eax,0x1007b08
 100741e:	jmp    0x1004cb8
 1007423:	int3   
 1007424:	int3   
 1007425:	int3   
 1007426:	int3   
 1007427:	int3   
 1007428:	lea    ecx,[ebp-0x18]
 100742b:	jmp    0x10027d2
 1007430:	lea    ecx,[ebp-0x18]
 1007433:	jmp    0x1002b62
 1007438:	lea    ecx,[ebp-0x1c]
 100743b:	jmp    0x1002b62
 1007440:	lea    ecx,[ebp-0x1c]
 1007443:	jmp    0x10027d2
 1007448:	lea    ecx,[ebp-0x28]
 100744b:	jmp    0x10031ea
 1007450:	lea    ecx,[ebp-0x18]
 1007453:	jmp    0x10027d2
 1007458:	mov    edx,DWORD PTR [esp+0x8]
 100745c:	lea    eax,[edx+0xc]
 100745f:	mov    ecx,DWORD PTR [edx-0x2c]
 1007462:	xor    ecx,eax
 1007464:	call   0x1004b6b
 1007469:	mov    eax,0x1007b78
 100746e:	jmp    0x1004cb8
 1007473:	int3   
 1007474:	int3   
 1007475:	int3   
 1007476:	int3   
 1007477:	int3   
 1007478:	lea    ecx,[ebp-0x101c]
 100747e:	jmp    0x10027d2
 1007483:	lea    ecx,[ebp-0x101c]
 1007489:	jmp    0x1002b62
 100748e:	lea    ecx,[ebp-0x1028]
 1007494:	jmp    0x10031ea
 1007499:	lea    ecx,[ebp-0x101c]
 100749f:	jmp    0x10027d2
 10074a4:	mov    edx,DWORD PTR [esp+0x8]
 10074a8:	lea    eax,[edx+0xc]
 10074ab:	mov    ecx,DWORD PTR [edx-0x1038]
 10074b1:	xor    ecx,eax
 10074b3:	call   0x1004b6b
 10074b8:	mov    ecx,DWORD PTR [edx-0x8]
 10074bb:	xor    ecx,eax
 10074bd:	call   0x1004b6b
 10074c2:	mov    eax,0x1007c00
 10074c7:	jmp    0x1004cb8
 10074cc:	int3   
 10074cd:	int3   
 10074ce:	int3   
 10074cf:	int3   
 10074d0:	int3   
 10074d1:	push   DWORD PTR [ebp+0x8]
 10074d4:	push   DWORD PTR [ebp-0x10]
 10074d7:	call   0x100331c
 10074dc:	pop    ecx
 10074dd:	pop    ecx
 10074de:	ret    
 10074df:	mov    edx,DWORD PTR [esp+0x8]
 10074e3:	lea    eax,[edx+0xc]
 10074e6:	mov    ecx,DWORD PTR [edx-0x14]
 10074e9:	xor    ecx,eax
 10074eb:	call   0x1004b6b
 10074f0:	mov    eax,0x1007c5c
 10074f5:	jmp    0x1004cb8
 10074fa:	int3   
 10074fb:	int3   
 10074fc:	int3   
 10074fd:	int3   
 10074fe:	int3   
 10074ff:	mov    edx,DWORD PTR [esp+0x8]
 1007503:	lea    eax,[edx+0xc]
 1007506:	mov    ecx,DWORD PTR [edx-0x14]
 1007509:	xor    ecx,eax
 100750b:	call   0x1004b6b
 1007510:	mov    eax,0x1007cb4
 1007515:	jmp    0x1004cb8
 100751a:	int3   
 100751b:	int3   
 100751c:	int3   
 100751d:	int3   
 100751e:	int3   
 100751f:	lea    ecx,[ebp-0x18]
 1007522:	jmp    DWORD PTR ds:0x1001188
 1007528:	mov    edx,DWORD PTR [esp+0x8]
 100752c:	lea    eax,[edx+0xc]
 100752f:	mov    ecx,DWORD PTR [edx-0x1c]
 1007532:	xor    ecx,eax
 1007534:	call   0x1004b6b
 1007539:	mov    eax,0x1007ce0
 100753e:	jmp    0x1004cb8
 1007543:	int3   
 1007544:	int3   
 1007545:	int3   
 1007546:	int3   
 1007547:	int3   
 1007548:	push   DWORD PTR [ebp+0x8]
 100754b:	push   DWORD PTR [ebp-0x10]
 100754e:	call   0x100331c
 1007553:	pop    ecx
 1007554:	pop    ecx
 1007555:	ret    
 1007556:	mov    edx,DWORD PTR [esp+0x8]
 100755a:	lea    eax,[edx+0xc]
 100755d:	mov    ecx,DWORD PTR [edx-0x14]
 1007560:	xor    ecx,eax
 1007562:	call   0x1004b6b
 1007567:	mov    eax,0x1007d0c
 100756c:	jmp    0x1004cb8
 1007571:	int3   
 1007572:	int3   
 1007573:	int3   
 1007574:	int3   
 1007575:	int3   
 1007576:	push   DWORD PTR [ebp+0x8]
 1007579:	push   DWORD PTR [ebp-0x10]
 100757c:	call   0x100331c
 1007581:	pop    ecx
 1007582:	pop    ecx
 1007583:	ret    
 1007584:	mov    edx,DWORD PTR [esp+0x8]
 1007588:	lea    eax,[edx+0xc]
 100758b:	mov    ecx,DWORD PTR [edx-0x14]
 100758e:	xor    ecx,eax
 1007590:	call   0x1004b6b
 1007595:	mov    eax,0x1007d38
 100759a:	jmp    0x1004cb8
 100759f:	int3   
 10075a0:	int3   
 10075a1:	int3   
 10075a2:	int3   
 10075a3:	int3   
 10075a4:	mov    ecx,0x100a3e4
 10075a9:	call   0x10054a7
 10075ae:	push   0x100760d
 10075b3:	call   0x1004e87
 10075b8:	pop    ecx
 10075b9:	ret    
 10075ba:	int3   
 10075bb:	int3   
 10075bc:	int3   
 10075bd:	int3   
 10075be:	int3   
 10075bf:	call   DWORD PTR ds:0x100101c
 10075c5:	push   0x100761c
 10075ca:	mov    DWORD PTR ds:0x100a41c,0x1001b00
 10075d4:	mov    ds:0x100a420,eax
 10075d9:	mov    BYTE PTR ds:0x100a424,0x0
 10075e0:	call   0x1004e87
 10075e5:	pop    ecx
 10075e6:	ret    
 10075e7:	int3   
 10075e8:	int3   
 10075e9:	int3   
 10075ea:	int3   
 10075eb:	int3   
 10075ec:	push   0x100762b
 10075f1:	call   0x1004e87
 10075f6:	pop    ecx
 10075f7:	ret    
 10075f8:	int3   
 10075f9:	int3   
 10075fa:	int3   
 10075fb:	int3   
 10075fc:	int3   
 10075fd:	call   0x100666d
 1007602:	mov    ds:0x100a440,eax
 1007607:	ret    
 1007608:	int3   
 1007609:	int3   
 100760a:	int3   
 100760b:	int3   
 100760c:	int3   
 100760d:	mov    ecx,0x100a3e4
 1007612:	jmp    0x10054ec
 1007617:	int3   
 1007618:	int3   
 1007619:	int3   
 100761a:	int3   
 100761b:	int3   
 100761c:	mov    ecx,0x100a41c
 1007621:	jmp    0x1005614
 1007626:	int3   
 1007627:	int3   
 1007628:	int3   
 1007629:	int3   
 100762a:	int3   
 100762b:	mov    DWORD PTR ds:0x10090a8,0x1001b14
 1007635:	ret    
 1007636:	int3   
 1007637:	int3   
 1007638:	(bad)  
 1007639:	(bad)  
 100763a:	(bad)  
 100763b:	jmp    DWORD PTR [edi+0x70]
 100763e:	add    BYTE PTR [ecx],al
 1007640:	and    al,BYTE PTR ds:0x11993
 1007646:	add    BYTE PTR [eax],al
 1007648:	cmp    BYTE PTR [esi+0x0],dh
 100764b:	add    DWORD PTR [eax],eax
	...
 1007661:	add    BYTE PTR [eax],al
 1007663:	add    bh,bh
 1007665:	(bad)  
 1007666:	(bad)  
 1007667:	jmp    DWORD PTR [ecx+0x22010070]
 100766d:	add    eax,0x11993
 1007672:	add    BYTE PTR [eax],al
 1007674:	fs jbe 0x1007677
 1007677:	add    DWORD PTR [eax],eax
	...
 100768d:	add    BYTE PTR [eax],al
 100768f:	add    bh,bh
 1007691:	(bad)  
 1007692:	(bad)  
 1007693:	dec    ecx
 1007695:	jo     0x1007697
 1007697:	add    DWORD PTR [edx],esp
 1007699:	add    eax,0x11993
 100769e:	add    BYTE PTR [eax],al
 10076a0:	nop
 10076a1:	jbe    0x10076a3
 10076a3:	add    DWORD PTR [eax],eax
	...
 10076c5:	add    BYTE PTR [eax],al
 10076c7:	add    BYTE PTR [ebp+0x31],bh
 10076ca:	add    BYTE PTR [ecx],al
 10076cc:	add    BYTE PTR [eax],al
 10076ce:	add    BYTE PTR [eax],al
 10076d0:	or     eax,DWORD PTR [eax]
 10076d2:	add    BYTE PTR [eax],al
 10076d4:	or     al,0x0
 10076d6:	add    BYTE PTR [eax],al
 10076d8:	add    DWORD PTR [eax],eax
 10076da:	add    BYTE PTR [eax],al
 10076dc:	mov    esp,0x22010076
 10076e1:	add    eax,0xd1993
 10076e6:	add    BYTE PTR [eax],al
 10076e8:	add    al,0x77
 10076ea:	add    BYTE PTR [ecx],al
 10076ec:	add    DWORD PTR [eax],eax
 10076ee:	add    BYTE PTR [eax],al
 10076f0:	int3   
 10076f1:	jbe    0x10076f3
 10076f3:	add    DWORD PTR [eax],eax
	...
 1007701:	add    BYTE PTR [eax],al
 1007703:	add    bh,bh
 1007705:	(bad)  
 1007706:	(bad)  
 1007707:	inc    DWORD PTR [eax]
 1007709:	add    BYTE PTR [eax],al
 100770b:	add    BYTE PTR [eax],al
 100770d:	add    BYTE PTR [eax],al
 100770f:	add    cl,dh
 1007711:	jo     0x1007713
 1007713:	add    DWORD PTR [ecx],eax
 1007715:	add    BYTE PTR [eax],al
 1007717:	add    cl,bh
 1007719:	jo     0x100771b
 100771b:	add    DWORD PTR [edx],eax
 100771d:	add    BYTE PTR [eax],al
 100771f:	add    BYTE PTR [ecx],al
 1007721:	jno    0x1007723
 1007723:	add    DWORD PTR [ebx],eax
 1007725:	add    BYTE PTR [eax],al
 1007727:	add    BYTE PTR [ecx],cl
 1007729:	jno    0x100772b
 100772b:	add    DWORD PTR [ebx],eax
 100772d:	add    BYTE PTR [eax],al
 100772f:	add    BYTE PTR [ecx],dl
 1007731:	jno    0x1007733
 1007733:	add    DWORD PTR ds:0x19000000,eax
 1007739:	jno    0x100773b
 100773b:	add    DWORD PTR ds:0x21000000,eax
 1007741:	jno    0x1007743
 1007743:	add    DWORD PTR ds:0x29000000,eax
 1007749:	jno    0x100774b
 100774b:	add    DWORD PTR [ebx],eax
 100774d:	add    BYTE PTR [eax],al
 100774f:	add    BYTE PTR [ecx],dh
 1007751:	jno    0x1007753
 1007753:	add    DWORD PTR [ecx],eax
 1007755:	add    BYTE PTR [eax],al
 1007757:	add    BYTE PTR [ecx],bh
 1007759:	jno    0x100775b
 100775b:	add    DWORD PTR [eax],eax
 100775d:	add    BYTE PTR [eax],al
 100775f:	add    BYTE PTR [ecx+0x71],al
 1007762:	add    BYTE PTR [ecx],al
 1007764:	(bad)  
 1007765:	(bad)  
 1007766:	(bad)  
 1007767:	inc    DWORD PTR [eax]
	...
 1007775:	add    BYTE PTR [eax],al
 1007777:	add    BYTE PTR [edi+esi*2+0x0],bh
 100777b:	add    DWORD PTR [ecx],eax
 100777d:	add    BYTE PTR [eax],al
 100777f:	add    BYTE PTR [edi+esi*2+0x100],al
 1007786:	add    BYTE PTR [eax],al
 1007788:	add    BYTE PTR [eax+0x100],dl
 100778e:	add    BYTE PTR [eax],al
 1007790:	(bad)  
 1007791:	(bad)  
 1007792:	(bad)  
 1007793:	inc    DWORD PTR [eax]
 1007795:	add    BYTE PTR [eax],al
 1007797:	add    BYTE PTR [eax+eax*1],al
	...
 10077aa:	add    BYTE PTR [eax],al
 10077ac:	mov    al,0x77
 10077ae:	add    BYTE PTR [ecx],al
 10077b0:	add    DWORD PTR [eax],eax
 10077b2:	add    BYTE PTR [eax],al
 10077b4:	mov    eax,0x1010077
 10077b9:	add    BYTE PTR [eax],al
 10077bb:	add    BYTE PTR [eax],ah
 10077bd:	nop
 10077be:	add    BYTE PTR [ecx],al
 10077c0:	add    BYTE PTR [eax],al
 10077c2:	add    BYTE PTR [eax],al
 10077c4:	(bad)  
 10077c5:	(bad)  
 10077c6:	(bad)  
 10077c7:	inc    DWORD PTR [eax]
 10077c9:	add    BYTE PTR [eax],al
 10077cb:	add    BYTE PTR [ecx],al
 10077cd:	add    BYTE PTR [eax],al
 10077cf:	add    BYTE PTR [eax],al
 10077d1:	add    BYTE PTR [eax],al
 10077d3:	add    bh,bh
 10077d5:	(bad)  
 10077d6:	(bad)  
 10077d7:	push   DWORD PTR [ecx+0x71]
 10077da:	add    BYTE PTR [ecx],al
 10077dc:	add    BYTE PTR [eax],al
 10077de:	add    BYTE PTR [eax],al
 10077e0:	imul   esi,DWORD PTR [ecx+0x0],0x93052201
 10077e7:	sbb    DWORD PTR [edx],eax
 10077e9:	add    BYTE PTR [eax],al
 10077eb:	add    ah,dl
 10077ed:	ja     0x10077ef
 10077ef:	add    DWORD PTR [eax],eax
	...
 1007805:	add    BYTE PTR [eax],al
 1007807:	add    bh,bh
 1007809:	(bad)  
 100780a:	(bad)  
 100780b:	jmp    FWORD PTR [edx+0x22010071]
 1007811:	add    eax,0x11993
 1007816:	add    BYTE PTR [eax],al
 1007818:	or     BYTE PTR [eax+0x0],bh
 100781b:	add    DWORD PTR [eax],eax
	...
 1007831:	add    BYTE PTR [eax],al
 1007833:	add    bh,bh
 1007835:	(bad)  
 1007836:	(bad)  
 1007837:	call   ebx
 1007839:	jno    0x100783b
 100783b:	add    DWORD PTR [edx],esp
 100783d:	add    eax,0x11993
 1007842:	add    BYTE PTR [eax],al
 1007844:	xor    al,0x78
 1007846:	add    BYTE PTR [ecx],al
	...
 1007860:	(bad)  
 1007861:	(bad)  
 1007862:	(bad)  
 1007863:	(bad)  
 1007864:	cld    
 1007865:	jno    0x1007867
 1007867:	add    DWORD PTR [edx],esp
 1007869:	add    eax,0x11993
 100786e:	add    BYTE PTR [eax],al
 1007870:	pusha  
 1007871:	js     0x1007873
 1007873:	add    DWORD PTR [eax],eax
	...
 1007889:	add    BYTE PTR [eax],al
 100788b:	add    bh,bh
 100788d:	(bad)  
 100788e:	(bad)  
 100788f:	jmp    DWORD PTR ds:0xff010072
 1007895:	(bad)  
 1007896:	(bad)  
 1007897:	jmp    FWORD PTR ds:0x1010072
 100789d:	add    BYTE PTR [eax],al
 100789f:	add    BYTE PTR [eax],bh
 10078a1:	jb     0x10078a3
 10078a3:	add    DWORD PTR [ecx],eax
 10078a5:	add    BYTE PTR [eax],al
 10078a7:	add    BYTE PTR [eax+0x72],al
 10078aa:	add    BYTE PTR [ecx],al
 10078ac:	and    al,BYTE PTR ds:0x41993
 10078b2:	add    BYTE PTR [eax],al
 10078b4:	mov    WORD PTR [eax+0x0],?
 10078b7:	add    DWORD PTR [eax],eax
	...
 10078cd:	add    BYTE PTR [eax],al
 10078cf:	add    bh,bh
 10078d1:	(bad)  
 10078d2:	(bad)  
 10078d3:	jmp    FWORD PTR [ebx+0x72]
 10078d6:	add    BYTE PTR [ecx],al
 10078d8:	add    BYTE PTR [eax],al
 10078da:	add    BYTE PTR [eax],al
 10078dc:	jbe    0x1007950
 10078de:	add    BYTE PTR [ecx],al
 10078e0:	add    BYTE PTR [eax],al
 10078e2:	add    BYTE PTR [eax],al
 10078e4:	xor    DWORD PTR [edx+0x0],0xffffff01
 10078eb:	dec    DWORD PTR [ecx+0x22010072]
 10078f1:	add    eax,0x41993
 10078f6:	add    BYTE PTR [eax],al
 10078f8:	sar    BYTE PTR [eax+0x0],1
 10078fb:	add    DWORD PTR [eax],eax
	...
 100791d:	add    BYTE PTR [eax],al
 100791f:	add    BYTE PTR [ecx+0x36],bl
 1007922:	add    BYTE PTR [ecx],al
 1007924:	(bad)  
 1007925:	(bad)  
 1007926:	(bad)  
 1007927:	inc    DWORD PTR [eax]
 1007929:	add    BYTE PTR [eax],al
 100792b:	add    bh,bh
 100792d:	(bad)  
 100792e:	(bad)  
 100792f:	inc    DWORD PTR [eax]
	...
 1007939:	add    BYTE PTR [eax],al
 100793b:	add    BYTE PTR [ecx],al
 100793d:	add    BYTE PTR [eax],al
 100793f:	add    BYTE PTR [ecx],al
 1007941:	add    BYTE PTR [eax],al
 1007943:	add    BYTE PTR [ecx+edi*2],dl
 1007946:	add    BYTE PTR [ecx],al
 1007948:	and    al,BYTE PTR ds:0x21993
 100794e:	add    BYTE PTR [eax],al
 1007950:	and    al,0x79
 1007952:	add    BYTE PTR [ecx],al
 1007954:	add    DWORD PTR [eax],eax
 1007956:	add    BYTE PTR [eax],al
 1007958:	xor    al,0x79
 100795a:	add    BYTE PTR [ecx],al
	...
 100796c:	(bad)  
 100796d:	(bad)  
 100796e:	(bad)  
 100796f:	call   ecx
 1007971:	jb     0x1007973
 1007973:	add    edi,edi
 1007975:	(bad)  
 1007976:	(bad)  
 1007977:	(bad)  
 1007978:	fnstenv [edx+0x0]
 100797b:	add    edi,edi
 100797d:	(bad)  
 100797e:	(bad)  
 100797f:	jmp    ecx
 1007981:	jb     0x1007983
 1007983:	add    DWORD PTR [edx],esp
 1007985:	add    eax,0x31993
 100798a:	add    BYTE PTR [eax],al
 100798c:	ins    BYTE PTR es:[edi],dx
 100798d:	jns    0x100798f
 100798f:	add    DWORD PTR [eax],eax
	...
 10079b1:	add    BYTE PTR [eax],al
 10079b3:	add    BYTE PTR [edx+0x10037],dl
 10079b9:	add    BYTE PTR [eax],al
 10079bb:	add    BYTE PTR [esi],al
 10079bd:	add    BYTE PTR [eax],al
 10079bf:	add    BYTE PTR [edi],al
 10079c1:	add    BYTE PTR [eax],al
 10079c3:	add    BYTE PTR [ecx],al
 10079c5:	add    BYTE PTR [eax],al
 10079c7:	add    BYTE PTR [eax+0x22010079],ch
 10079cd:	add    eax,0x81993
 10079d2:	add    BYTE PTR [eax],al
 10079d4:	lock jns 0x10079d7
 10079d7:	add    DWORD PTR [ecx],eax
 10079d9:	add    BYTE PTR [eax],al
 10079db:	add    BYTE PTR [eax+0x10079],bh
	...
 10079ed:	add    BYTE PTR [eax],al
 10079ef:	add    bh,bh
 10079f1:	(bad)  
 10079f2:	(bad)  
 10079f3:	inc    DWORD PTR [eax]
 10079f5:	add    BYTE PTR [eax],al
 10079f7:	add    BYTE PTR [eax],al
 10079f9:	add    BYTE PTR [eax],al
 10079fb:	add    BYTE PTR [ecx],cl
 10079fd:	jae    0x10079ff
 10079ff:	add    DWORD PTR [eax],eax
 1007a01:	add    BYTE PTR [eax],al
 1007a03:	add    BYTE PTR [ecx],dl
 1007a05:	jae    0x1007a07
 1007a07:	add    DWORD PTR [edx],eax
 1007a09:	add    BYTE PTR [eax],al
 1007a0b:	add    BYTE PTR [ecx],bl
 1007a0d:	jae    0x1007a0f
 1007a0f:	add    DWORD PTR [edx],eax
 1007a11:	add    BYTE PTR [eax],al
 1007a13:	add    BYTE PTR [ecx],ah
 1007a15:	jae    0x1007a17
 1007a17:	add    DWORD PTR [edx],eax
 1007a19:	add    BYTE PTR [eax],al
 1007a1b:	add    BYTE PTR [ecx],ch
 1007a1d:	jae    0x1007a1f
 1007a1f:	add    DWORD PTR [eax],eax
 1007a21:	add    BYTE PTR [eax],al
 1007a23:	add    BYTE PTR [ecx],dh
 1007a25:	jae    0x1007a27
 1007a27:	add    edi,edi
 1007a29:	(bad)  
 1007a2a:	(bad)  
 1007a2b:	inc    DWORD PTR [eax]
 1007a2d:	add    BYTE PTR [eax],al
 1007a2f:	add    bh,bh
 1007a31:	(bad)  
 1007a32:	(bad)  
 1007a33:	call   FWORD PTR [ecx+0x73]
 1007a36:	add    BYTE PTR [ecx],al
 1007a38:	and    al,BYTE PTR ds:0x11993
 1007a3e:	add    BYTE PTR [eax],al
 1007a40:	xor    BYTE PTR [edx+0x0],bh
 1007a43:	add    DWORD PTR [eax],eax
	...
 1007a65:	add    BYTE PTR [eax],al
 1007a67:	add    BYTE PTR [edx+edi*1+0x100],bl
 1007a6e:	add    BYTE PTR [eax],al
 1007a70:	push   es
 1007a71:	add    BYTE PTR [eax],al
 1007a73:	add    BYTE PTR [edi],al
 1007a75:	add    BYTE PTR [eax],al
 1007a77:	add    BYTE PTR [ecx],al
 1007a79:	add    BYTE PTR [eax],al
 1007a7b:	add    BYTE PTR [edx+edi*2+0x0],bl
 1007a7f:	add    DWORD PTR [edx],esp
 1007a81:	add    eax,0x81993
 1007a86:	add    BYTE PTR [eax],al
 1007a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1007a89:	jp     0x1007a8b
 1007a8b:	add    DWORD PTR [ecx],eax
 1007a8d:	add    BYTE PTR [eax],al
 1007a8f:	add    BYTE PTR [edx+edi*2+0x0],ch
 1007a93:	add    DWORD PTR [eax],eax
	...
 1007aa1:	add    BYTE PTR [eax],al
 1007aa3:	add    bh,bh
 1007aa5:	(bad)  
 1007aa6:	(bad)  
 1007aa7:	inc    DWORD PTR [eax]
 1007aa9:	add    BYTE PTR [eax],al
 1007aab:	add    BYTE PTR [eax],al
 1007aad:	add    BYTE PTR [eax],al
 1007aaf:	add    BYTE PTR [ecx+0x1010073],al
 1007ab5:	add    BYTE PTR [eax],al
 1007ab7:	add    BYTE PTR [ebx+esi*2+0x10100],cl
 1007abe:	add    BYTE PTR [eax],al
 1007ac0:	lods   eax,DWORD PTR ds:[esi]
 1007ac1:	jae    0x1007ac3
 1007ac3:	add    DWORD PTR [ecx],eax
 1007ac5:	add    BYTE PTR [eax],al
 1007ac7:	add    BYTE PTR [edi+0x1010073],dl
 1007acd:	add    BYTE PTR [eax],al
 1007acf:	add    BYTE PTR [edx+0x10073],ah
 1007ad5:	add    BYTE PTR [eax],al
 1007ad7:	add    BYTE PTR [eax-0xfeff8d],bh
 1007add:	(bad)  
 1007ade:	(bad)  
 1007adf:	inc    DWORD PTR [eax]
	...
 1007aed:	add    BYTE PTR [eax],al
 1007aef:	add    BYTE PTR [esi+0x3b],al
 1007af2:	add    BYTE PTR [ecx],al
 1007af4:	add    BYTE PTR [eax],al
 1007af6:	add    BYTE PTR [eax],al
 1007af8:	add    eax,DWORD PTR [eax]
 1007afa:	add    BYTE PTR [eax],al
 1007afc:	add    al,0x0
 1007afe:	add    BYTE PTR [eax],al
 1007b00:	add    DWORD PTR [eax],eax
 1007b02:	add    BYTE PTR [eax],al
 1007b04:	in     al,0x7a
 1007b06:	add    BYTE PTR [ecx],al
 1007b08:	and    al,BYTE PTR ds:0x51993
 1007b0e:	add    BYTE PTR [eax],al
 1007b10:	sub    al,0x7b
 1007b12:	add    BYTE PTR [ecx],al
 1007b14:	add    DWORD PTR [eax],eax
 1007b16:	add    BYTE PTR [eax],al
 1007b18:	hlt    
 1007b19:	jp     0x1007b1b
 1007b1b:	add    DWORD PTR [eax],eax
	...
 1007b29:	add    BYTE PTR [eax],al
 1007b2b:	add    bh,bh
 1007b2d:	(bad)  
 1007b2e:	(bad)  
 1007b2f:	inc    DWORD PTR [eax]
 1007b31:	add    BYTE PTR [eax],al
 1007b33:	add    BYTE PTR [eax],al
 1007b35:	add    BYTE PTR [eax],al
 1007b37:	add    al,dh
 1007b39:	jae    0x1007b3b
 1007b3b:	add    DWORD PTR [eax],eax
 1007b3d:	add    BYTE PTR [eax],al
 1007b3f:	add    al,bh
 1007b41:	jae    0x1007b43
 1007b43:	add    DWORD PTR [eax],eax
 1007b45:	add    BYTE PTR [eax],al
 1007b47:	add    BYTE PTR [eax],al
 1007b49:	je     0x1007b4b
 1007b4b:	add    edi,edi
 1007b4d:	(bad)  
 1007b4e:	(bad)  
 1007b4f:	inc    DWORD PTR [eax]
	...
 1007b5d:	add    BYTE PTR [eax],al
 1007b5f:	add    BYTE PTR [ebx],bh
 1007b61:	cmp    al,0x0
 1007b63:	add    DWORD PTR [eax],eax
 1007b65:	add    BYTE PTR [eax],al
 1007b67:	add    BYTE PTR [esi],al
 1007b69:	add    BYTE PTR [eax],al
 1007b6b:	add    BYTE PTR [edi],al
 1007b6d:	add    BYTE PTR [eax],al
 1007b6f:	add    BYTE PTR [ecx],al
 1007b71:	add    BYTE PTR [eax],al
 1007b73:	add    BYTE PTR [ebx+edi*2+0x0],dl
 1007b77:	add    DWORD PTR [edx],esp
 1007b79:	add    eax,0x81993
 1007b7e:	add    BYTE PTR [eax],al
 1007b80:	pushf  
 1007b81:	jnp    0x1007b83
 1007b83:	add    DWORD PTR [ecx],eax
 1007b85:	add    BYTE PTR [eax],al
 1007b87:	add    BYTE PTR [ebx+edi*2+0x0],ah
 1007b8b:	add    DWORD PTR [eax],eax
	...
 1007b99:	add    BYTE PTR [eax],al
 1007b9b:	add    bh,bh
 1007b9d:	(bad)  
 1007b9e:	(bad)  
 1007b9f:	inc    DWORD PTR [eax]
 1007ba1:	add    BYTE PTR [eax],al
 1007ba3:	add    BYTE PTR [eax],al
 1007ba5:	add    BYTE PTR [eax],al
 1007ba7:	add    BYTE PTR [eax],ch
 1007ba9:	je     0x1007bab
 1007bab:	add    DWORD PTR [eax],eax
 1007bad:	add    BYTE PTR [eax],al
 1007baf:	add    BYTE PTR [eax],dh
 1007bb1:	je     0x1007bb3
 1007bb3:	add    DWORD PTR [edx],eax
 1007bb5:	add    BYTE PTR [eax],al
 1007bb7:	add    BYTE PTR [eax],bh
 1007bb9:	je     0x1007bbb
 1007bbb:	add    DWORD PTR [edx],eax
 1007bbd:	add    BYTE PTR [eax],al
 1007bbf:	add    BYTE PTR [eax+0x74],al
 1007bc2:	add    BYTE PTR [ecx],al
 1007bc4:	add    al,BYTE PTR [eax]
 1007bc6:	add    BYTE PTR [eax],al
 1007bc8:	dec    eax
 1007bc9:	je     0x1007bcb
 1007bcb:	add    DWORD PTR [eax],eax
 1007bcd:	add    BYTE PTR [eax],al
 1007bcf:	add    BYTE PTR [eax+0x74],dl
 1007bd2:	add    BYTE PTR [ecx],al
 1007bd4:	(bad)  
 1007bd5:	(bad)  
 1007bd6:	(bad)  
 1007bd7:	inc    DWORD PTR [eax]
	...
 1007be5:	add    BYTE PTR [eax],al
 1007be7:	add    ch,ah
 1007be9:	cmp    eax,0x100
 1007bee:	add    BYTE PTR [eax],al
 1007bf0:	add    al,0x0
 1007bf2:	add    BYTE PTR [eax],al
 1007bf4:	add    eax,0x1000000
 1007bf9:	add    BYTE PTR [eax],al
 1007bfb:	add    ah,bl
 1007bfd:	jnp    0x1007bff
 1007bff:	add    DWORD PTR [edx],esp
 1007c01:	add    eax,0x61993
 1007c06:	add    BYTE PTR [eax],al
 1007c08:	and    al,0x7c
 1007c0a:	add    BYTE PTR [ecx],al
 1007c0c:	add    DWORD PTR [eax],eax
 1007c0e:	add    BYTE PTR [eax],al
 1007c10:	in     al,dx
 1007c11:	jnp    0x1007c13
 1007c13:	add    DWORD PTR [eax],eax
	...
 1007c21:	add    BYTE PTR [eax],al
 1007c23:	add    bh,bh
 1007c25:	(bad)  
 1007c26:	(bad)  
 1007c27:	inc    DWORD PTR [eax]
 1007c29:	add    BYTE PTR [eax],al
 1007c2b:	add    BYTE PTR [eax],al
 1007c2d:	add    BYTE PTR [eax],al
 1007c2f:	add    BYTE PTR [eax+0x74],bh
 1007c32:	add    BYTE PTR [ecx],al
 1007c34:	add    BYTE PTR [eax],al
 1007c36:	add    BYTE PTR [eax],al
 1007c38:	xor    DWORD PTR [eax+eax*1+0x1],0x2
 1007c3d:	add    BYTE PTR [eax],al
 1007c3f:	add    BYTE PTR [esi+0x10074],cl
 1007c45:	add    BYTE PTR [eax],al
 1007c47:	add    BYTE PTR [ecx-0xfeff8c],bl
 1007c4d:	(bad)  
 1007c4e:	(bad)  
 1007c4f:	inc    DWORD PTR [eax]
 1007c51:	add    BYTE PTR [eax],al
 1007c53:	add    bh,bh
 1007c55:	(bad)  
 1007c56:	(bad)  
 1007c57:	call   ecx
 1007c59:	je     0x1007c5b
 1007c5b:	add    DWORD PTR [edx],esp
 1007c5d:	add    eax,0x11993
 1007c62:	add    BYTE PTR [eax],al
 1007c64:	push   esp
 1007c65:	jl     0x1007c67
 1007c67:	add    DWORD PTR [eax],eax
	...
 1007c89:	add    BYTE PTR [eax],al
 1007c8b:	add    BYTE PTR [edi+0x3f],ah
 1007c8e:	add    BYTE PTR [ecx],al
 1007c90:	(bad)  
 1007c91:	(bad)  
 1007c92:	(bad)  
 1007c93:	inc    DWORD PTR [eax]
 1007c95:	add    BYTE PTR [eax],al
 1007c97:	add    bh,bh
 1007c99:	(bad)  
 1007c9a:	(bad)  
 1007c9b:	inc    DWORD PTR [eax]
	...
 1007ca5:	add    BYTE PTR [eax],al
 1007ca7:	add    BYTE PTR [ecx],al
 1007ca9:	add    BYTE PTR [eax],al
 1007cab:	add    BYTE PTR [ecx],al
 1007cad:	add    BYTE PTR [eax],al
 1007caf:	add    BYTE PTR [eax+0x2201007c],al
 1007cb5:	add    eax,0x21993
 1007cba:	add    BYTE PTR [eax],al
 1007cbc:	nop
 1007cbd:	jl     0x1007cbf
 1007cbf:	add    DWORD PTR [ecx],eax
 1007cc1:	add    BYTE PTR [eax],al
 1007cc3:	add    BYTE PTR [eax+0x1007c],ah
	...
 1007cd5:	add    BYTE PTR [eax],al
 1007cd7:	add    bh,bh
 1007cd9:	(bad)  
 1007cda:	(bad)  
 1007cdb:	call   FWORD PTR [edi]
 1007cdd:	jne    0x1007cdf
 1007cdf:	add    DWORD PTR [edx],esp
 1007ce1:	add    eax,0x11993
 1007ce6:	add    BYTE PTR [eax],al
 1007ce8:	fdivr  DWORD PTR [eax+eax*1+0x1]
	...
 1007d04:	(bad)  
 1007d05:	(bad)  
 1007d06:	(bad)  
 1007d07:	dec    DWORD PTR [eax+0x75]
 1007d0a:	add    BYTE PTR [ecx],al
 1007d0c:	and    al,BYTE PTR ds:0x11993
 1007d12:	add    BYTE PTR [eax],al
 1007d14:	add    al,0x7d
 1007d16:	add    BYTE PTR [ecx],al
	...
 1007d30:	(bad)  
 1007d31:	(bad)  
 1007d32:	(bad)  
 1007d33:	push   DWORD PTR [esi+0x75]
 1007d36:	add    BYTE PTR [ecx],al
 1007d38:	and    al,BYTE PTR ds:0x11993
 1007d3e:	add    BYTE PTR [eax],al
 1007d40:	xor    BYTE PTR [ebp+0x0],bh
 1007d43:	add    DWORD PTR [eax],eax
	...
 1007d5d:	add    BYTE PTR [eax],al
 1007d5f:	add    BYTE PTR [edx+0x10034],ah
 1007d65:	add    BYTE PTR [eax],al
 1007d67:	add    BYTE PTR [ebp+edi*2+0x0],ch
 1007d6b:	add    DWORD PTR [edx],eax
 1007d6d:	add    BYTE PTR [eax],al
 1007d6f:	add    BYTE PTR [eax+0x7d],bh
 1007d72:	add    BYTE PTR [ecx],al
 1007d74:	xchg   esp,eax
 1007d75:	jge    0x1007d77
 1007d77:	add    DWORD PTR [eax],eax
 1007d79:	add    BYTE PTR [eax],al
 1007d7b:	add    BYTE PTR [eax+edx*4],ch
 1007d7e:	add    BYTE PTR [ecx],al
 1007d80:	add    BYTE PTR [eax],al
 1007d82:	add    BYTE PTR [eax],al
 1007d84:	(bad)  
 1007d85:	(bad)  
 1007d86:	(bad)  
 1007d87:	inc    DWORD PTR [eax]
 1007d89:	add    BYTE PTR [eax],al
 1007d8b:	add    BYTE PTR [eax+eax*1],cl
 1007d8e:	add    BYTE PTR [eax],al
 1007d90:	int3   
 1007d91:	xor    al,0x0
 1007d93:	add    DWORD PTR [eax],eax
 1007d95:	add    BYTE PTR [eax],al
 1007d97:	add    BYTE PTR [eax-0x70],cl
 1007d9a:	add    BYTE PTR [ecx],al
 1007d9c:	add    BYTE PTR [eax],al
 1007d9e:	add    BYTE PTR [eax],al
 1007da0:	(bad)  
 1007da1:	(bad)  
 1007da2:	(bad)  
 1007da3:	inc    DWORD PTR [eax]
 1007da5:	add    BYTE PTR [eax],al
 1007da7:	add    BYTE PTR [eax+eax*1],cl
 1007daa:	add    BYTE PTR [eax],al
 1007dac:	and    BYTE PTR [ebp+0x0],cl
 1007daf:	add    esi,edi
 1007db1:	(bad)  
 1007db2:	(bad)  
 1007db3:	inc    DWORD PTR [eax]
 1007db5:	add    BYTE PTR [eax],al
 1007db7:	add    BYTE PTR [edi+edi*8+0xffff],al
 1007dbe:	add    BYTE PTR [eax],al
 1007dc0:	(bad)  
 1007dc1:	(bad)  
 1007dc2:	(bad)  
 1007dc3:	dec    DWORD PTR [edx+ecx*2]
 1007dc6:	add    BYTE PTR [ecx],al
 1007dc8:	and    BYTE PTR [edx+0x0],cl
 1007dcb:	add    DWORD PTR [eax],eax
 1007dcd:	add    BYTE PTR [eax],al
 1007dcf:	add    dh,bh
 1007dd1:	(bad)  
 1007dd2:	(bad)  
 1007dd3:	inc    DWORD PTR [eax]
 1007dd5:	add    BYTE PTR [eax],al
 1007dd7:	add    ah,cl
 1007dd9:	(bad)  
 1007dda:	(bad)  
 1007ddb:	inc    DWORD PTR [eax]
 1007ddd:	add    BYTE PTR [eax],al
 1007ddf:	add    dh,bh
 1007de1:	(bad)  
 1007de2:	(bad)  
 1007de3:	inc    DWORD PTR [eax]
 1007de5:	add    BYTE PTR [eax],al
 1007de7:	add    BYTE PTR [ecx+0x4e],bh
 1007dea:	add    BYTE PTR [ecx],al
 1007dec:	add    BYTE PTR [eax],al
 1007dee:	add    BYTE PTR [eax],al
 1007df0:	(bad)  
 1007df1:	(bad)  
 1007df2:	(bad)  
 1007df3:	inc    DWORD PTR [eax]
 1007df5:	add    BYTE PTR [eax],al
 1007df7:	add    al,bl
 1007df9:	(bad)  
 1007dfa:	(bad)  
 1007dfb:	inc    DWORD PTR [eax]
 1007dfd:	add    BYTE PTR [eax],al
 1007dff:	add    dh,bh
 1007e01:	(bad)  
 1007e02:	(bad)  
 1007e03:	jmp    FWORD PTR [ebx]
 1007e05:	push   eax
 1007e06:	add    BYTE PTR [ecx],al
 1007e08:	ds push eax
 1007e0a:	add    BYTE PTR [ecx],al
 1007e0c:	add    BYTE PTR [eax],al
 1007e0e:	add    BYTE PTR [eax],al
 1007e10:	(bad)  
 1007e11:	(bad)  
 1007e12:	(bad)  
 1007e13:	inc    DWORD PTR [eax]
 1007e15:	add    BYTE PTR [eax],al
 1007e17:	add    ah,cl
 1007e19:	(bad)  
 1007e1a:	(bad)  
 1007e1b:	inc    DWORD PTR [eax]
 1007e1d:	add    BYTE PTR [eax],al
 1007e1f:	add    dh,bh
 1007e21:	(bad)  
 1007e22:	(bad)  
 1007e23:	call   DWORD PTR [ebx]
 1007e25:	push   ebx
 1007e26:	add    BYTE PTR [ecx],al
 1007e28:	cmp    al,0x53
 1007e2a:	add    BYTE PTR [ecx],al
 1007e2c:	add    BYTE PTR [eax],al
 1007e2e:	add    BYTE PTR [eax],al
 1007e30:	(bad)  
 1007e31:	(bad)  
 1007e32:	(bad)  
 1007e33:	inc    DWORD PTR [eax]
 1007e35:	add    BYTE PTR [eax],al
 1007e37:	add    ah,dl
 1007e39:	(bad)  
 1007e3a:	(bad)  
 1007e3b:	inc    DWORD PTR [eax]
 1007e3d:	add    BYTE PTR [eax],al
 1007e3f:	add    dh,bh
 1007e41:	(bad)  
 1007e42:	(bad)  
 1007e43:	inc    DWORD PTR [eax]
 1007e45:	add    BYTE PTR [eax],al
 1007e47:	add    BYTE PTR [esi+0x10053],bl
 1007e4d:	add    BYTE PTR [eax],al
 1007e4f:	add    ah,ah
 1007e51:	(bad)  
 1007e52:	(bad)  
 1007e53:	inc    DWORD PTR [eax]
 1007e55:	add    BYTE PTR [eax],al
 1007e57:	add    BYTE PTR [eax-0x3],bh
 1007e5a:	(bad)  
 1007e5b:	inc    DWORD PTR [eax]
 1007e5d:	add    BYTE PTR [eax],al
 1007e5f:	add    dh,bh
 1007e61:	(bad)  
 1007e62:	(bad)  
 1007e63:	inc    DWORD PTR [eax]
 1007e65:	add    BYTE PTR [eax],al
 1007e67:	add    BYTE PTR [edi+0x101005e],ch
 1007e6d:	add    BYTE PTR [eax],al
 1007e6f:	add    BYTE PTR [eax],dh
 1007e71:	sbb    eax,DWORD PTR [eax]
 1007e73:	add    BYTE PTR [eax],ch
 1007e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 1007e76:	add    BYTE PTR [eax],al
 1007e78:	fcom   QWORD PTR [eax+0x7eac0000]
 1007e7e:	add    BYTE PTR [eax],al
 1007e80:	aam    0x7e
	...
 1007eaa:	add    BYTE PTR [eax],al
 1007eac:	mov    ah,0x7e
	...
 1007eb6:	inc    edi
 1007eb7:	gs je  0x1007f0d
 1007eba:	push   ecx
 1007ebb:	dec    esp
 1007ebc:	push   esi
 1007ebd:	gs jb  0x1007f13
 1007ec0:	jo     0x1007f27
 1007ec2:	arpl   WORD PTR [ecx+0x66],bp
 1007ec5:	imul   esp,DWORD PTR [ebx+0x52],0x74536765
 1007ecc:	jb     0x1007f37
 1007ece:	outs   dx,BYTE PTR ds:[esi]
 1007ecf:	add    BYTE PTR [bx+si],dh
	...
 1007eda:	add    BYTE PTR [eax],al
 1007edc:	push   esp
 1007edd:	jg     0x1007edf
	...
 1007ee7:	add    BYTE PTR [edx-0x7f],bh
 1007eea:	add    BYTE PTR [eax],al
 1007eec:	add    BYTE PTR [eax],dl
 1007eee:	add    BYTE PTR [eax],al
 1007ef0:	ins    BYTE PTR es:[edi],dx
 1007ef1:	jg     0x1007ef3
	...
 1007efb:	add    ah,bh
 1007efd:	add    BYTE PTR [eax],0x0
 1007f00:	sbb    BYTE PTR [eax],dl
 1007f02:	add    BYTE PTR [eax],al
 1007f04:	cmp    BYTE PTR [ecx+0x0],al
 1007f0a:	add    BYTE PTR [eax],al
 1007f0c:	add    BYTE PTR [eax],al
 1007f0e:	add    BYTE PTR [eax],al
 1007f10:	xor    al,BYTE PTR [ebx+0x11e40000]
 1007f16:	add    BYTE PTR [eax],al
 1007f18:	push   0x80
 1007f1d:	add    BYTE PTR [eax],al
 1007f1f:	add    BYTE PTR [eax],al
 1007f21:	add    BYTE PTR [eax],al
 1007f23:	add    BYTE PTR [ebp+eax*4+0x11140000],cl
 1007f2a:	add    BYTE PTR [eax],al
 1007f2c:	pop    esp
 1007f2d:	add    BYTE PTR [eax],0x0
	...
 1007f38:	lods   al,BYTE PTR ds:[esi]
 1007f39:	xchg   BYTE PTR [eax],al
 1007f3b:	add    BYTE PTR [eax],cl
 1007f3d:	adc    DWORD PTR [eax],eax
	...
 1007f53:	add    BYTE PTR [eax-0x7f],cl
 1007f56:	add    BYTE PTR [eax],al
 1007f58:	push   esi
 1007f59:	add    DWORD PTR [eax],0x816600
 1007f5f:	add    BYTE PTR [edx-0x37ffff7a],bh
 1007f65:	xchg   BYTE PTR [eax],al
 1007f67:	add    BYTE PTR [eax],al
 1007f69:	add    BYTE PTR [eax],al
 1007f6b:	add    BYTE PTR [esi],ch
 1007f6d:	mov    DWORD PTR [eax],eax
 1007f6f:	add    BYTE PTR [ecx+ecx*4],bl
 1007f72:	add    BYTE PTR [eax],al
 1007f74:	fimul  DWORD PTR [ecx-0x76f00000]
 1007f7a:	add    BYTE PTR [eax],al
 1007f7c:	add    al,0x89
 1007f7e:	add    BYTE PTR [eax],al
 1007f80:	test   BYTE PTR [eax-0x77160000],0x0
 1007f87:	add    ah,bl
 1007f89:	mov    BYTE PTR [eax],al
 1007f8b:	add    ah,al
 1007f8d:	mov    BYTE PTR [eax],al
 1007f8f:	add    BYTE PTR [eax+ecx*4-0x777c0000],bl
 1007f96:	add    BYTE PTR [eax],al
 1007f98:	ins    BYTE PTR es:[edi],dx
 1007f99:	mov    BYTE PTR [eax],al
 1007f9b:	add    BYTE PTR [eax+ecx*4+0x0],bl
 1007f9f:	add    BYTE PTR [esi],dh
 1007fa1:	mov    BYTE PTR [eax],al
 1007fa3:	add    BYTE PTR [edx],bl
 1007fa5:	mov    BYTE PTR [eax],al
 1007fa7:	add    BYTE PTR [esi],al
 1007fa9:	mov    BYTE PTR [eax],al
 1007fab:	add    dl,dh
 1007fad:	xchg   DWORD PTR [eax],eax
 1007faf:	add    al,bl
 1007fb1:	xchg   DWORD PTR [eax],eax
 1007fb3:	add    dl,al
 1007fb5:	xchg   DWORD PTR [eax],eax
 1007fb7:	add    BYTE PTR [edi+eax*4-0x78640000],ch
 1007fbe:	add    BYTE PTR [eax],al
 1007fc0:	add    BYTE PTR [edi-0x788e0000],0x0
 1007fc7:	add    BYTE PTR [edi+eax*4+0x0],dl
 1007fcb:	add    BYTE PTR [edi+eax*4+0x0],al
 1007fcf:	add    BYTE PTR [edx],dh
 1007fd1:	xchg   DWORD PTR [eax],eax
 1007fd3:	add    BYTE PTR [edi+eax*4],bl
 1007fd6:	add    BYTE PTR [eax],al
 1007fd8:	inc    BYTE PTR [esi-0x790a0000]
 1007fde:	add    BYTE PTR [eax],al
 1007fe0:	loopne 0x1007f68
 1007fe2:	add    BYTE PTR [eax],al
 1007fe4:	out    0x82,al
 1007fe6:	add    BYTE PTR [eax],al
 1007fe8:	(bad)  
 1007fe9:	add    BYTE PTR [eax],0x0
 1007fec:	ret    0x82
 1007fef:	add    BYTE PTR [edx+eax*4-0x7d6c0000],ch
 1007ff6:	add    BYTE PTR [eax],al
 1007ff8:	test   BYTE PTR [edx-0x7d8e0000],al
 1007ffe:	add    BYTE PTR [eax],al
 1008000:	pop    esi
 1008001:	add    BYTE PTR [eax],0x0
 1008004:	push   edx
 1008005:	add    BYTE PTR [eax],0x0
 1008008:	cmp    al,0x82
 100800a:	add    BYTE PTR [eax],al
 100800c:	sub    al,BYTE PTR [edx-0x7de60000]
 1008012:	add    BYTE PTR [eax],al
 1008014:	add    BYTE PTR [edx-0x76b80000],al
 100801a:	add    BYTE PTR [eax],al
 100801c:	jmp    0x81:0xda000081
 1008023:	add    al,cl
 1008025:	add    DWORD PTR [eax],0x81b800
 100802b:	add    BYTE PTR [esi-0x67ffff7f],ah
 1008031:	add    DWORD PTR [eax],0x818800
 1008037:	add    BYTE PTR [edx-0x78],cl
 100803a:	add    BYTE PTR [eax],al
 100803c:	pop    edx
 100803d:	mov    DWORD PTR [eax],eax
 100803f:	add    BYTE PTR [esi-0x77],ah
 1008042:	add    BYTE PTR [eax],al
 1008044:	jbe    0x1007fcf
 1008046:	add    BYTE PTR [eax],al
 1008048:	xchg   BYTE PTR [ecx-0x76340000],cl
 100804e:	add    BYTE PTR [eax],al
 1008050:	mov    al,0x89
 1008052:	add    BYTE PTR [eax],al
 1008054:	xchg   esp,eax
 1008055:	mov    DWORD PTR [eax],eax
 1008057:	add    BYTE PTR [eax],al
 1008059:	add    BYTE PTR [eax],al
 100805b:	add    BYTE PTR [esi+eax*4-0x79a00000],cl
 1008062:	add    BYTE PTR [eax],al
 1008064:	add    BYTE PTR [eax],al
 1008066:	add    BYTE PTR [eax],al
 1008068:	sub    al,BYTE PTR [esi-0x79ec0000]
 100806e:	add    BYTE PTR [eax],al
 1008070:	add    al,0x86
 1008072:	add    BYTE PTR [eax],al
 1008074:	repnz test DWORD PTR [eax],eax
 1008077:	add    al,bl
 1008079:	test   DWORD PTR [eax],eax
 100807b:	add    dh,cl
 100807d:	test   DWORD PTR [eax],eax
 100807f:	add    dh,al
 1008081:	test   DWORD PTR [eax],eax
 1008083:	add    BYTE PTR [eax-0x65ffff7b],bh
 1008089:	test   DWORD PTR [eax],eax
 100808b:	add    BYTE PTR [edx-0x7b],bh
 100808e:	add    BYTE PTR [eax],al
 1008090:	jo     0x1008017
 1008092:	add    BYTE PTR [eax],al
 1008094:	test   DWORD PTR fs:[eax],eax
 1008097:	add    BYTE PTR [eax-0x7b],dl
 100809a:	add    BYTE PTR [eax],al
 100809c:	cmp    al,BYTE PTR [ebp-0x7ad40000]
 10080a2:	add    BYTE PTR [eax],al
 10080a4:	and    BYTE PTR [ebp-0x7aea0000],al
 10080aa:	add    BYTE PTR [eax],al
 10080ac:	push   cs
 10080ad:	test   DWORD PTR [eax],eax
 10080af:	add    BYTE PTR [eax],al
 10080b1:	test   DWORD PTR [eax],eax
 10080b3:	add    dl,dh
 10080b5:	test   BYTE PTR [eax],al
 10080b7:	add    dl,ch
 10080b9:	test   BYTE PTR [eax],al
 10080bb:	add    al,ah
 10080bd:	test   BYTE PTR [eax],al
 10080bf:	add    al,dl
 10080c1:	test   BYTE PTR [eax],al
 10080c3:	add    dl,al
 10080c5:	test   BYTE PTR [eax],al
 10080c7:	add    BYTE PTR [eax-0x4fffff7c],bh
 10080cd:	test   BYTE PTR [eax],al
 10080cf:	add    BYTE PTR [esp+eax*4-0x7b660000],ah
 10080d6:	add    BYTE PTR [eax],al
 10080d8:	jp     0x100805e
 10080da:	add    BYTE PTR [eax],al
 10080dc:	pop    esi
 10080dd:	test   BYTE PTR [eax],al
 10080df:	add    BYTE PTR [esp+eax*4],bh
 10080e2:	add    BYTE PTR [eax],al
 10080e4:	sbb    al,0x84
 10080e6:	add    BYTE PTR [eax],al
 10080e8:	push   cs
 10080e9:	test   BYTE PTR [eax],al
 10080eb:	add    BYTE PTR [eax],al
 10080ed:	test   BYTE PTR [eax],al
 10080ef:	add    al,bh
 10080f1:	add    DWORD PTR [eax],0x0
 10080f4:	out    dx,al
 10080f5:	add    DWORD PTR [eax],0x0
 10080f8:	in     al,0x83
 10080fa:	add    BYTE PTR [eax],al
 10080fc:	into   
 10080fd:	add    DWORD PTR [eax],0x0
 1008100:	mov    eax,0xa8000083
 1008105:	add    DWORD PTR [eax],0x0
 1008108:	cwde   
 1008109:	add    DWORD PTR [eax],0x0
 100810c:	mov    WORD PTR [ebx-0x7c7e0000],es
 1008112:	add    BYTE PTR [eax],al
 1008114:	jbe    0x1008099
 1008116:	add    BYTE PTR [eax],al
 1008118:	push   0xffffff83
 100811a:	add    BYTE PTR [eax],al
 100811c:	pop    esi
 100811d:	add    DWORD PTR [eax],0x0
 1008120:	dec    esi
 1008121:	add    DWORD PTR [eax],0x0
 1008124:	add    DWORD PTR ds:[eax],0x0
 1008128:	jmp    0x85:0xae000089
 100812f:	add    dl,bh
 1008131:	mov    DWORD PTR [eax],eax
 1008133:	add    BYTE PTR [eax],al
 1008135:	add    BYTE PTR [eax],al
 1008137:	add    BYTE PTR [eax],bl
 1008139:	add    DWORD PTR [eax],0x0
 100813c:	or     al,BYTE PTR [ebx-0x7cda0000]
 1008142:	add    BYTE PTR [eax],al
 1008144:	add    BYTE PTR [eax],al
 1008146:	add    BYTE PTR [eax],al
 1008148:	xor    BYTE PTR [edx],al
 100814a:	push   edx
 100814b:	gs addr16 inc ebx
 100814e:	ins    BYTE PTR es:[edi],dx
 100814f:	outs   dx,DWORD PTR ds:[esi]
 1008150:	jae    0x10081b7
 1008152:	dec    ebx
 1008153:	gs jns 0x1008156
 1008156:	popa   
 1008157:	add    dl,BYTE PTR [edx+0x65]
 100815a:	addr16 dec edi
 100815c:	jo     0x10081c3
 100815e:	outs   dx,BYTE PTR ds:[esi]
 100815f:	dec    ebx
 1008160:	gs jns 0x10081a8
 1008163:	js     0x10081bc
 1008165:	add    BYTE PTR [esi+0x2],ch
 1008168:	push   edx
 1008169:	gs addr16 push ecx
 100816c:	jne    0x10081d3
 100816e:	jb     0x10081e9
 1008170:	push   esi
 1008171:	popa   
 1008172:	ins    BYTE PTR es:[edi],dx
 1008173:	jne    0x10081da
 1008175:	inc    ebp
 1008176:	js     0x10081cf
 1008178:	add    BYTE PTR [eax],al
 100817a:	inc    ecx
 100817b:	inc    esp
 100817c:	push   esi
 100817d:	inc    ecx
 100817e:	push   eax
 100817f:	dec    ecx
 1008180:	xor    esi,DWORD PTR [edx]
 1008182:	cs fs ins BYTE PTR es:[edi],dx
 1008185:	ins    BYTE PTR es:[edi],dx
 1008186:	add    BYTE PTR [eax],al
 1008188:	push   esp
 1008189:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
 100818d:	imul   edx,DWORD PTR [edx+0x65],0x73
 1008191:	outs   dx,DWORD PTR ds:[esi]
 1008192:	jne    0x1008206
 1008194:	arpl   WORD PTR [ebp+0x0],sp
 1008197:	add    BYTE PTR [edx+0x1],ah
 100819a:	inc    esi
 100819b:	jb     0x1008202
 100819d:	gs dec esp
 100819f:	imul   esp,DWORD PTR [edx+0x72],0x797261
 10081a6:	inc    ebp
 10081a7:	add    al,BYTE PTR [edi+0x65]
 10081aa:	je     0x10081fc
 10081ac:	jb     0x100821d
 10081ae:	arpl   WORD PTR [ecx+0x64],ax
 10081b1:	fs jb  0x1008219
 10081b4:	jae    0x1008229
 10081b6:	add    BYTE PTR [eax],al
 10081b8:	inc    ecx
 10081b9:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
 10081bd:	fs push edx
 10081bf:	gs jae 0x1008231
 10081c2:	jne    0x1008236
 10081c4:	arpl   WORD PTR [ebp+0x0],sp
 10081c7:	add    BYTE PTR [ecx+0x7a695304],dh
 10081cd:	outs   dx,DWORD PTR gs:[esi]
 10081cf:	push   dx
 10081d1:	gs jae 0x1008243
 10081d4:	jne    0x1008248
 10081d6:	arpl   WORD PTR [ebp+0x0],sp
 10081d9:	add    BYTE PTR [edi],bh
 10081db:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
 10081df:	fs dec esp
 10081e1:	imul   esp,DWORD PTR [edx+0x72],0x57797261
 10081e8:	add    BYTE PTR [eax],al
 10081ea:	adc    al,0x2
 10081ec:	inc    edi
 10081ed:	gs je  0x100823d
 10081f0:	outs   dx,DWORD PTR ds:[esi]
 10081f1:	fs jne 0x1008260
 10081f4:	gs inc esi
 10081f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
 10081fe:	add    BYTE PTR [eax],al
 1008200:	push   edi
 1008201:	add    al,0x53
 1008203:	gs je  0x100824b
 1008206:	outs   dx,BYTE PTR ds:[esi]
 1008207:	jbe    0x1008272
 1008209:	jb     0x100827a
 100820b:	outs   dx,BYTE PTR ds:[esi]
 100820c:	ins    DWORD PTR es:[edi],dx
 100820d:	outs   dx,BYTE PTR gs:[esi]
 100820f:	je     0x1008267
 1008211:	popa   
 1008212:	jb     0x100827d
 1008214:	popa   
 1008215:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
 1008219:	add    BYTE PTR [esi+0x1],cl
 100821c:	inc    esi
 100821d:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
 1008224:	jne    0x1008298
 1008226:	arpl   WORD PTR [ebp+0x57],sp
 1008229:	add    BYTE PTR [ebp+0x1],cl
 100822c:	inc    esi
 100822d:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
 1008234:	jne    0x10082a8
 1008236:	arpl   WORD PTR [ebp+0x45],sp
 1008239:	js     0x1008292
 100823b:	add    dl,ch
 100823d:	add    DWORD PTR [edi+0x65],eax
 1008240:	je     0x1008288
 1008242:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
 100824a:	bound  esi,QWORD PTR [ebp+0x74]
 100824d:	gs jae 0x10082a7
 1008250:	add    BYTE PTR [eax],al
 1008252:	add    DWORD PTR cs:[esi+0x69],eax
 1008256:	outs   dx,BYTE PTR ds:[esi]
 1008257:	fs inc ebx
 1008259:	ins    BYTE PTR es:[edi],dx
 100825a:	outs   dx,DWORD PTR ds:[esi]
 100825b:	jae    0x10082c2
 100825d:	add    BYTE PTR [eax],bl
 100825f:	add    al,BYTE PTR [edi+0x65]
 1008262:	je     0x10082b1
 1008264:	outs   dx,DWORD PTR ds:[esi]
 1008265:	fs jne 0x10082d4
 1008268:	gs dec eax
 100826a:	popa   
 100826b:	outs   dx,BYTE PTR ds:[esi]
 100826c:	fs ins BYTE PTR es:[edi],dx
 100826e:	gs push edi
 1008270:	add    BYTE PTR [eax],al
 1008272:	cmp    DWORD PTR [ecx],eax
 1008274:	inc    esi
 1008275:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
 100827c:	je     0x10082c4
 100827e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x1450000
 1008286:	inc    esi
 1008287:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
 100828e:	inc    esi
 100828f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x47026b00
 1008297:	gs je  0x10082ed
 100829a:	jns    0x100830f
 100829c:	je     0x1008303
 100829e:	ins    DWORD PTR es:[edi],dx
 100829f:	inc    esp
 10082a0:	gs popaw 
 10082a3:	jne    0x1008311
 10082a5:	je     0x10082f3
 10082a7:	inc    ebx
 10082a8:	dec    ecx
 10082a9:	inc    esp
 10082aa:	add    BYTE PTR [eax],al
 10082ac:	fwait
 10082ad:	add    al,BYTE PTR [edi+0x65]
 10082b0:	je     0x1008307
 10082b2:	jae    0x1008319
 10082b4:	jb     0x10082fa
 10082b6:	gs popaw 
 10082b9:	jne    0x1008327
 10082bb:	je     0x1008309
 10082bd:	inc    ebx
 10082be:	dec    ecx
 10082bf:	inc    esp
 10082c0:	add    BYTE PTR [eax],al
 10082c2:	adc    eax,0x74654702
 10082c7:	dec    ebp
 10082c8:	outs   dx,DWORD PTR ds:[esi]
 10082c9:	fs jne 0x1008338
 10082cc:	gs dec eax
 10082ce:	popa   
 10082cf:	outs   dx,BYTE PTR ds:[esi]
 10082d0:	fs ins BYTE PTR es:[edi],dx
 10082d2:	gs inc ecx
 10082d4:	add    BYTE PTR [eax],al
 10082d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 10082d7:	add    al,BYTE PTR [edi+0x65]
 10082da:	je     0x1008332
 10082dc:	gs jb  0x1008352
 10082df:	imul   ebp,DWORD PTR [edi+0x6e],0x577845
 10082e6:	add    ecx,DWORD PTR [di+0x75]
 10082ea:	ins    BYTE PTR es:[edi],dx
 10082eb:	je     0x1008356
 10082ed:	inc    edx
 10082ee:	jns    0x1008364
 10082f0:	gs push esp
 10082f2:	outs   dx,DWORD PTR ds:[esi]
 10082f3:	push   edi
 10082f4:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x726168
 10082fc:	dec    ebx
 10082fd:	inc    ebp
 10082fe:	push   edx
 10082ff:	dec    esi
 1008300:	inc    ebp
 1008301:	dec    esp
 1008302:	xor    esi,DWORD PTR [edx]
 1008304:	cs fs ins BYTE PTR es:[edi],dx
 1008307:	ins    BYTE PTR es:[edi],dx
 1008308:	add    BYTE PTR [eax],al
 100830a:	pop    ss
 100830b:	add    cl,BYTE PTR [ebp+0x65]
 100830e:	jae    0x1008383
 1008310:	popa   
 1008311:	addr16 gs inc edx
 1008314:	outs   dx,DWORD PTR ds:[esi]
 1008315:	js     0x100836e
 1008317:	add    ah,bh
 1008319:	add    DWORD PTR [edi+ebp*2+0x61],ecx
 100831d:	fs push ebx
 100831f:	je     0x1008393
 1008321:	imul   ebp,DWORD PTR [esi+0x67],0x310057
 1008328:	inc    ebx
 1008329:	push   0x654e7261
 100832e:	js     0x10083a4
 1008330:	push   edi
 1008331:	add    BYTE PTR [ebp+0x53],dl
 1008334:	inc    ebp
 1008335:	push   edx
 1008336:	xor    esi,DWORD PTR [edx]
 1008338:	cs fs ins BYTE PTR es:[edi],dx
 100833b:	ins    BYTE PTR es:[edi],dx
 100833c:	add    BYTE PTR [eax],al
 100833e:	add    BYTE PTR gs:[edi],bh
 1008341:	aas    
 1008342:	xor    eax,DWORD PTR [eax+0x59]
 1008345:	inc    ecx
 1008346:	pop    eax
 1008347:	push   eax
 1008348:	inc    ecx
 1008349:	pop    eax
 100834a:	inc    eax
 100834b:	pop    edx
 100834c:	add    BYTE PTR [eax],al
 100834e:	arpl   WORD PTR [eax],ax
 1008350:	aas    
 1008351:	aas    
 1008352:	xor    al,BYTE PTR [eax+0x59]
 1008355:	inc    ecx
 1008356:	push   eax
 1008357:	inc    ecx
 1008358:	pop    eax
 1008359:	dec    ecx
 100835a:	inc    eax
 100835b:	pop    edx
 100835c:	add    BYTE PTR [eax],al
 100835e:	rol    BYTE PTR ds:0x636d656d,1
 1008364:	jo     0x10083df
 1008366:	pop    edi
 1008367:	jae    0x1008369
 1008369:	add    dl,dl
 100836b:	add    eax,0x6d6d656d
 1008370:	outs   dx,DWORD PTR ds:[esi]
 1008371:	jbe    0x10083d8
 1008373:	pop    edi
 1008374:	jae    0x1008376
 1008376:	das    
 1008377:	push   es
 1008378:	ja     0x10083dd
 100837a:	jae    0x10083df
 100837c:	popa   
 100837d:	je     0x10083de
 100837f:	jae    0x1008381
 1008381:	add    BYTE PTR [edi],bh
 1008383:	push   es
 1008384:	ja     0x10083e9
 1008386:	jae    0x10083fa
 1008388:	arpl   WORD PTR [eax+0x72],bp
 100838b:	add    BYTE PTR [edi+0x6],cl
 100838e:	ja     0x10083fd
 1008390:	gs ins DWORD PTR es:[edi],dx
 1008392:	arpl   WORD PTR [eax+0x79],si
 1008395:	pop    edi
 1008396:	jae    0x1008398
 1008398:	js     0x100839a
 100839a:	aas    
 100839b:	aas    
 100839c:	pop    edi
 100839d:	push   ebp
 100839e:	inc    eax
 100839f:	pop    ecx
 10083a0:	inc    ecx
 10083a1:	push   eax
 10083a2:	inc    ecx
 10083a3:	pop    eax
 10083a4:	dec    ecx
 10083a5:	inc    eax
 10083a6:	pop    edx
 10083a7:	add    BYTE PTR [edx+0x0],bh
 10083aa:	aas    
 10083ab:	aas    
 10083ac:	pop    edi
 10083ad:	push   esi
 10083ae:	inc    eax
 10083af:	pop    ecx
 10083b0:	inc    ecx
 10083b1:	pop    eax
 10083b2:	push   eax
 10083b3:	inc    ecx
 10083b4:	pop    eax
 10083b5:	inc    eax
 10083b6:	pop    edx
 10083b7:	add    BYTE PTR [ecx],ah
 10083b9:	add    DWORD PTR [edi+0x43],ebx
 10083bc:	js     0x1008436
 10083be:	push   esp
 10083bf:	push   0x45776f72
 10083c4:	js     0x1008429
 10083c6:	gs jo  0x100843d
 10083c9:	imul   ebp,DWORD PTR [edi+0x6e],0x13a0000
 10083d0:	pop    edi
 10083d1:	pop    edi
 10083d2:	inc    ebx
 10083d3:	js     0x100844d
 10083d5:	inc    esi
 10083d6:	jb     0x1008439
 10083d8:	ins    DWORD PTR es:[edi],dx
 10083d9:	gs dec eax
 10083db:	popa   
 10083dc:	outs   dx,BYTE PTR ds:[esi]
 10083dd:	fs ins BYTE PTR es:[edi],dx
 10083df:	gs jb  0x1008415
 10083e2:	add    BYTE PTR [eax],al
 10083e4:	rol    DWORD PTR ds:0x736d656d,cl
 10083ea:	gs je  0x10083ed
 10083ed:	add    cl,dl
 10083ef:	add    eax,0x6d6d656d
 10083f4:	outs   dx,DWORD PTR ds:[esi]
 10083f5:	jbe    0x100845c
 10083f7:	add    BYTE PTR [ebp+eax*1+0x5f],dl
 10083fb:	ja     0x1008471
 10083fd:	outs   dx,DWORD PTR ds:[esi]
 10083fe:	ins    BYTE PTR es:[edi],dx
 10083ff:	add    BYTE PTR [ecx],ch
 1008401:	push   es
 1008402:	jbe    0x1008477
 1008404:	ja     0x1008476
 1008406:	jb     0x1008471
 1008408:	outs   dx,BYTE PTR ds:[esi]
 1008409:	je     0x1008471
 100840b:	pop    edi
 100840c:	jae    0x100840e
 100840e:	lods   eax,DWORD PTR ds:[esi]
 100840f:	add    al,0x5f
 1008411:	jbe    0x1008486
 1008413:	arpl   WORD PTR [edi+0x70],si
 1008416:	jb     0x1008481
 1008418:	outs   dx,BYTE PTR ds:[esi]
 1008419:	je     0x1008481
 100841b:	add    BYTE PTR [edx],ah
 100841d:	add    BYTE PTR [edi],bh
 100841f:	aas    
 1008420:	xor    BYTE PTR [ebp+0x78],ah
 1008423:	arpl   WORD PTR [ebp+0x70],sp
 1008426:	je     0x1008491
 1008428:	outs   dx,DWORD PTR ds:[esi]
 1008429:	outs   dx,BYTE PTR ds:[esi]
 100842a:	inc    eax
 100842b:	jae    0x10084a1
 100842d:	fs inc eax
 100842f:	inc    eax
 1008430:	push   ecx
 1008431:	inc    ecx
 1008432:	inc    ebp
 1008433:	inc    eax
 1008434:	inc    ecx
 1008435:	inc    edx
 1008436:	push   ecx
 1008437:	inc    edx
 1008438:	inc    esp
 1008439:	inc    eax
 100843a:	pop    edx
 100843b:	add    BYTE PTR [eax+eax*1],ah
 100843e:	aas    
 100843f:	aas    
 1008440:	xor    BYTE PTR [ebp+0x78],ah
 1008443:	arpl   WORD PTR [ebp+0x70],sp
 1008446:	je     0x10084b1
 1008448:	outs   dx,DWORD PTR ds:[esi]
 1008449:	outs   dx,BYTE PTR ds:[esi]
 100844a:	inc    eax
 100844b:	jae    0x10084c1
 100844d:	fs inc eax
 100844f:	inc    eax
 1008450:	push   ecx
 1008451:	inc    ecx
 1008452:	inc    ebp
 1008453:	inc    eax
 1008454:	inc    ecx
 1008455:	inc    edx
 1008456:	push   esi
 1008457:	xor    BYTE PTR [ecx],dh
 1008459:	inc    eax
 100845a:	inc    eax
 100845b:	pop    edx
 100845c:	add    BYTE PTR [eax],al
 100845e:	pop    ebp
 100845f:	add    BYTE PTR [edi],bh
 1008461:	aas    
 1008462:	xor    DWORD PTR [ebp+0x78],esp
 1008465:	arpl   WORD PTR [ebp+0x70],sp
 1008468:	je     0x10084d3
 100846a:	outs   dx,DWORD PTR ds:[esi]
 100846b:	outs   dx,BYTE PTR ds:[esi]
 100846c:	inc    eax
 100846d:	jae    0x10084e3
 100846f:	fs inc eax
 1008471:	inc    eax
 1008472:	push   ebp
 1008473:	inc    ecx
 1008474:	inc    ebp
 1008475:	inc    eax
 1008476:	pop    eax
 1008477:	pop    edx
 1008478:	add    BYTE PTR [eax],al
 100847a:	or     eax,0x68773f01
 100847f:	popa   
 1008480:	je     0x10084c2
 1008482:	gs js  0x10084e8
 1008485:	gs jo  0x10084fc
 1008488:	imul   ebp,DWORD PTR [edi+0x6e],0x64747340
 100848f:	inc    eax
 1008490:	inc    eax
 1008491:	push   ebp
 1008492:	inc    edx
 1008493:	inc    ebp
 1008494:	push   eax
 1008495:	inc    edx
 1008496:	inc    esp
 1008497:	pop    eax
 1008498:	pop    edx
 1008499:	add    BYTE PTR [eax],dh
 100849b:	push   es
 100849c:	ja     0x1008501
 100849e:	jae    0x1008503
 10084a0:	push   0xd8000072
 10084a5:	add    al,0x5f
 10084a7:	ja     0x100850c
 10084a9:	jae    0x1008514
 10084ab:	arpl   WORD PTR [ebp+0x70],bp
 10084ae:	add    BYTE PTR [eax],al
 10084b0:	mov    eax,DWORD PTR ds:0x65657266
 10084b6:	add    BYTE PTR [eax],al
 10084b8:	les    eax,FWORD PTR ds:0x6c6c616d
 10084be:	outs   dx,DWORD PTR ds:[esi]
 10084bf:	arpl   WORD PTR [eax],ax
 10084c1:	add    ch,al
 10084c3:	add    DWORD PTR [edi+0x61],ebx
 10084c6:	ins    DWORD PTR es:[edi],dx
 10084c7:	jae    0x1008530
 10084c9:	pop    edi
 10084ca:	gs js  0x1008536
 10084cd:	je     0x10084cf
 10084cf:	add    BYTE PTR [ebx+0x1],ah
 10084d2:	pop    edi
 10084d3:	pop    edi
 10084d4:	addr16 gs je 0x1008545
 10084d8:	popa   
 10084d9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
 10084e0:	fadd   QWORD PTR [ecx]
 10084e2:	pop    edi
 10084e3:	arpl   WORD PTR [ebp+0x78],sp
 10084e6:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x655f022a
 10084ee:	js     0x1008559
 10084f0:	je     0x10084f2
 10084f2:	sub    eax,0x63585f01
 10084f7:	jo     0x100856d
 10084f9:	inc    esi
 10084fa:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x2d20072
 1008502:	pop    edi
 1008503:	imul   esi,DWORD PTR [ebx+0x6d],0x656c6262
 100850a:	popa   
 100850b:	add    BYTE PTR fs:[eax],al
 100850e:	jae    0x1008515
 1008510:	gs js  0x100857c
 1008513:	je     0x1008515
 1008515:	add    BYTE PTR [ecx+eax*1+0x6d63615f],bh
 100851c:	fs ins BYTE PTR es:[edi],dx
 100851e:	outs   dx,BYTE PTR ds:[esi]
 100851f:	add    BYTE PTR [eax+0x6e695f02],dh
 1008525:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xb1006d72
 100852d:	add    bl,BYTE PTR [edi+0x69]
 1008530:	outs   dx,BYTE PTR ds:[esi]
 1008531:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x655f6d72
 1008539:	add    ah,ch
 100853b:	add    DWORD PTR [edi+0x63],ebx
 100853e:	outs   dx,DWORD PTR ds:[esi]
 100853f:	outs   dx,BYTE PTR ds:[esi]
 1008540:	imul   sp,WORD PTR [edi+0x74],0x7268
 1008546:	gs popa 
 1008548:	fs ins BYTE PTR es:[edi],dx
 100854a:	outs   dx,DWORD PTR ds:[esi]
 100854b:	arpl   WORD PTR [ecx+0x6c],sp
 100854e:	add    BYTE PTR gs:[edx+0x735f5f01],ah
 1008555:	gs je  0x10085cd
 1008558:	jae    0x10085bf
 100855a:	jb     0x10085c9
 100855c:	popa   
 100855d:	je     0x10085c7
 100855f:	gs jb  0x10085d4
 1008562:	add    BYTE PTR [eax],al
 1008564:	jmp    0x1008567
 1008566:	pop    edi
 1008567:	arpl   WORD PTR [edi+0x6d],bp
 100856a:	ins    DWORD PTR es:[edi],dx
 100856b:	outs   dx,DWORD PTR ds:[esi]
 100856c:	fs add BYTE PTR gs:[eax],al
 1008570:	inc    ebp
 1008571:	add    bl,BYTE PTR [edi+0x66]
 1008574:	ins    DWORD PTR es:[edi],dx
 1008575:	outs   dx,DWORD PTR ds:[esi]
 1008576:	fs add BYTE PTR gs:[eax],al
 100857a:	lahf   
 100857b:	add    DWORD PTR [edi+0x5f],ebx
 100857e:	jae    0x10085e5
 1008580:	je     0x10085e1
 1008582:	popa   
 1008583:	jo     0x10085f5
 1008585:	pop    edi
 1008586:	je     0x1008601
 1008588:	jo     0x10085ef
 100858a:	add    BYTE PTR [eax],al
 100858c:	dec    ebp
 100858d:	push   ebx
 100858e:	push   esi
 100858f:	inc    ebx
 1008590:	push   edx
 1008591:	xor    DWORD PTR [eax],esi
 1008593:	xor    BYTE PTR [esi],ch
 1008595:	fs ins BYTE PTR es:[edi],dx
 1008597:	ins    BYTE PTR es:[edi],dx
 1008598:	add    BYTE PTR [eax],al
 100859a:	add    al,BYTE PTR [ecx]
 100859c:	aas    
 100859d:	je     0x1008604
 100859f:	jb     0x100860e
 10085a1:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
 10085a8:	pop    ecx
 10085a9:	inc    ecx
 10085aa:	pop    eax
 10085ab:	pop    eax
 10085ac:	pop    edx
 10085ad:	add    BYTE PTR [ebp+0x6e755f04],cl
 10085b3:	ins    BYTE PTR es:[edi],dx
 10085b4:	outs   dx,DWORD PTR ds:[esi]
 10085b5:	arpl   WORD PTR [ebx+0x0],bp
 10085b8:	pop    ebx
 10085b9:	add    DWORD PTR [edi+0x5f],ebx
 10085bc:	fs ins BYTE PTR es:[edi],dx
 10085be:	ins    BYTE PTR es:[edi],dx
 10085bf:	outs   dx,DWORD PTR ds:[esi]
 10085c0:	outs   dx,BYTE PTR ds:[esi]
 10085c1:	gs js  0x100862d
 10085c4:	je     0x10085c6
 10085c6:	and    eax,DWORD PTR [ebx]
 10085c8:	pop    edi
 10085c9:	ins    BYTE PTR es:[edi],dx
 10085ca:	outs   dx,DWORD PTR ds:[esi]
 10085cb:	arpl   WORD PTR [ebx+0x0],bp
 10085ce:	leave  
 10085cf:	add    ebx,DWORD PTR [edi+0x6f]
 10085d2:	outs   dx,BYTE PTR ds:[esi]
 10085d3:	gs js  0x100863f
 10085d6:	je     0x10085d8
 10085d8:	and    DWORD PTR [edx],eax
 10085da:	pop    edi
 10085db:	gs js  0x1008641
 10085de:	gs jo  0x1008655
 10085e1:	pop    edi
 10085e2:	push   0x6c646e61
 10085e7:	gs jb  0x100861e
 10085ea:	pop    edi
 10085eb:	arpl   WORD PTR [edi+0x6d],bp
 10085ee:	ins    DWORD PTR es:[edi],dx
 10085ef:	outs   dx,DWORD PTR ds:[esi]
 10085f0:	outs   dx,BYTE PTR ds:[esi]
 10085f1:	add    BYTE PTR [eax+0x6e695f02],bh
 10085f7:	jbe    0x1008668
 10085f9:	imul   esp,DWORD PTR [ebp+0x5f],0x77
 10085fd:	popa   
 10085fe:	je     0x1008673
 1008600:	outs   dx,DWORD PTR ds:[esi]
 1008601:	outs   dx,BYTE PTR ds:[esi]
 1008602:	add    BYTE PTR [eax],al
 1008604:	out    dx,eax
 1008605:	add    DWORD PTR [edi+0x63],ebx
 1008608:	outs   dx,DWORD PTR ds:[esi]
 1008609:	outs   dx,BYTE PTR ds:[esi]
 100860a:	je     0x100867e
 100860c:	outs   dx,DWORD PTR ds:[esi]
 100860d:	ins    BYTE PTR es:[edi],dx
 100860e:	data16 jo 0x1008670
 1008611:	jae    0x1008613
 1008613:	add    bl,bh
 1008615:	add    DWORD PTR [edi+0x63],ebx
 1008618:	jb     0x100868e
 100861a:	pop    edi
 100861b:	fs bound esi,QWORD PTR gs:[ebp+0x67]
 1008620:	addr16 gs jb 0x1008683
 1008624:	push   0x6b6f6f
 1008629:	add    dh,ch
 100862b:	add    BYTE PTR [edi],bh
 100862d:	pop    edi
 100862e:	je     0x10086a9
 1008630:	jo     0x1008697
 1008632:	pop    edi
 1008633:	imul   ebp,DWORD PTR [esi+0x66],0x74645f6f
 100863a:	outs   dx,DWORD PTR ds:[esi]
 100863b:	jb     0x100869c
 100863d:	imul   ebp,DWORD PTR [esi+0x74],0x616e7265
 1008644:	ins    BYTE PTR es:[edi],dx
 1008645:	pop    edi
 1008646:	ins    DWORD PTR es:[edi],dx
 1008647:	gs je  0x10086b2
 100864a:	outs   dx,DWORD PTR ds:[esi]
 100864b:	fs inc eax
 100864d:	je     0x10086c8
 100864f:	jo     0x10086b6
 1008651:	pop    edi
 1008652:	imul   ebp,DWORD PTR [esi+0x66],0x5140406f
 1008659:	inc    ecx
 100865a:	inc    ebp
 100865b:	pop    eax
 100865c:	pop    eax
 100865d:	pop    edx
 100865e:	add    BYTE PTR [eax],al
 1008660:	push   ecx
 1008661:	add    bh,BYTE PTR [edi]
 1008663:	pop    edi
 1008664:	dec    edi
 1008665:	jb     0x10086d7
 1008667:	push   0x615f6e61
 100866c:	ins    BYTE PTR es:[edi],dx
 100866d:	ins    BYTE PTR es:[edi],dx
 100866e:	inc    eax
 100866f:	pop    edi
 1008670:	inc    ebx
 1008671:	outs   dx,DWORD PTR ds:[esi]
 1008672:	outs   dx,BYTE PTR ds:[esi]
 1008673:	je     0x10086d6
 1008675:	imul   ebp,DWORD PTR [esi+0x65],0x61625f72
 100867c:	jae    0x10086e3
 100867e:	xor    BYTE PTR [eax+0x73],al
 1008681:	je     0x10086e7
 1008683:	inc    eax
 1008684:	inc    eax
 1008685:	push   ecx
 1008686:	inc    ecx
 1008687:	inc    ebp
 1008688:	pop    eax
 1008689:	pop    eax
 100868a:	pop    edx
 100868b:	add    BYTE PTR [edx+eax*1+0x6c585f3f],cl
 1008692:	outs   dx,BYTE PTR gs:[esi]
 1008694:	addr16 je 0x10086ff
 1008697:	pop    edi
 1008698:	gs jb  0x100870d
 100869b:	outs   dx,DWORD PTR ds:[esi]
 100869c:	jb     0x10086de
 100869e:	jae    0x1008714
 10086a0:	fs inc eax
 10086a2:	inc    eax
 10086a3:	pop    ecx
 10086a4:	inc    ecx
 10086a5:	pop    eax
 10086a6:	push   eax
 10086a7:	inc    edx
 10086a8:	inc    esp
 10086a9:	inc    eax
 10086aa:	pop    edx
 10086ab:	add    BYTE PTR [ebp+0x53],cl
 10086ae:	push   esi
 10086af:	inc    ebx
 10086b0:	push   eax
 10086b1:	xor    DWORD PTR [eax],esi
 10086b3:	xor    BYTE PTR [esi],ch
 10086b5:	fs ins BYTE PTR es:[edi],dx
 10086b7:	ins    BYTE PTR es:[edi],dx
 10086b8:	add    BYTE PTR [eax],al
 10086ba:	add    dl,BYTE PTR fs:[edx+0x65]
 10086be:	addr16 dec edi
 10086c0:	jo     0x1008727
 10086c2:	outs   dx,BYTE PTR ds:[esi]
 10086c3:	dec    ebx
 10086c4:	gs jns 0x100871e
 10086c7:	add    BYTE PTR [ebx+0x61734c01],bh
 10086cd:	dec    esi
 10086ce:	je     0x1008723
 10086d0:	je     0x1008733
 10086d2:	je     0x1008749
 10086d4:	jae    0x100872a
 10086d6:	outs   dx,DWORD PTR ds:[esi]
 10086d7:	push   edi
 10086d8:	imul   ebp,DWORD PTR [esi+0x45],0x726f7272
 10086df:	add    ah,ch
 10086e1:	add    cl,BYTE PTR [ecx+0x6e]
 10086e4:	je     0x100874b
 10086e6:	jb     0x1008754
 10086e8:	outs   dx,DWORD PTR ds:[esi]
 10086e9:	arpl   WORD PTR [ebx+0x65],bp
 10086ec:	fs inc ebp
 10086ee:	js     0x1008753
 10086f0:	push   0x65676e61
 10086f5:	add    BYTE PTR [edx+0x656c5304],dh
 10086fb:	gs jo  0x10086fe
 10086fe:	jmp    0x756ed005
 1008703:	gs jb  0x1008772
 1008706:	outs   dx,DWORD PTR ds:[esi]
 1008707:	arpl   WORD PTR [ebx+0x65],bp
 100870a:	fs inc ebx
 100870c:	outs   dx,DWORD PTR ds:[esi]
 100870d:	ins    DWORD PTR es:[edi],dx
 100870e:	jo     0x1008771
 1008710:	jb     0x1008777
 1008712:	inc    ebp
 1008713:	js     0x1008778
 1008715:	push   0x65676e61
 100871a:	add    BYTE PTR [eax],al
 100871c:	rol    DWORD PTR [edx],cl
 100871e:	dec    eax
 100871f:	gs popa 
 1008721:	jo     0x1008776
 1008723:	gs je  0x100876f
 1008726:	outs   dx,BYTE PTR ds:[esi]
 1008727:	outs   dx,WORD PTR ds:[esi]
 1008729:	jb     0x1008798
 100872b:	popa   
 100872c:	je     0x1008797
 100872e:	outs   dx,DWORD PTR ds:[esi]
 100872f:	outs   dx,BYTE PTR ds:[esi]
 1008730:	add    BYTE PTR [eax],al
 1008732:	arpl   WORD PTR [edx],ax
 1008734:	inc    edi
 1008735:	gs je  0x100878b
 1008738:	je     0x100879b
 100873a:	jb     0x10087b0
 100873c:	jne    0x10087ae
 100873e:	dec    ecx
 100873f:	outs   dx,BYTE PTR ds:[esi]
 1008740:	outs   dx,WORD PTR ds:[esi]
 1008742:	push   edi
 1008743:	add    dl,ch
 1008745:	add    BYTE PTR [ebp+0x6e],al
 1008748:	arpl   WORD PTR [edi+0x64],bp
 100874b:	gs push eax
 100874d:	outs   dx,DWORD PTR ds:[esi]
 100874e:	imul   ebp,DWORD PTR [esi+0x74],0xa5007265
 1008755:	add    al,0x53
 1008757:	gs je  0x10087af
 100875a:	outs   dx,BYTE PTR ds:[esi]
 100875b:	push   0x6c646e61
 1008760:	gs fs inc ebp
 1008763:	js     0x10087c8
 1008765:	gs jo  0x10087dc
 1008768:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 100876f:	gs jb  0x1008772
 1008772:	retf   0x4400
 1008775:	arpl   WORD PTR gs:[edi+0x64],bp
 1008779:	gs push eax
 100877b:	outs   dx,DWORD PTR ds:[esi]
 100877c:	imul   ebp,DWORD PTR [esi+0x74],0xa7007265
 1008783:	add    edx,DWORD PTR [ecx+0x75]
 1008786:	gs jb  0x1008802
 1008789:	push   eax
 100878a:	gs jb  0x10087f3
 100878d:	outs   dx,DWORD PTR ds:[esi]
 100878e:	jb     0x10087fd
 1008790:	popa   
 1008791:	outs   dx,BYTE PTR ds:[esi]
 1008792:	arpl   WORD PTR [ebp+0x43],sp
 1008795:	outs   dx,DWORD PTR ds:[esi]
 1008796:	jne    0x1008806
 1008798:	je     0x10087ff
 100879a:	jb     0x100879c
 100879c:	xchg   ebx,eax
 100879d:	add    al,BYTE PTR [edi+0x65]
 10087a0:	je     0x10087f6
 10087a2:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
 10087a9:	je     0x10087ab
 10087ab:	add    ch,al
 10087ad:	add    DWORD PTR [edi+0x65],eax
 10087b0:	je     0x10087f5
 10087b2:	jne    0x1008826
 10087b4:	jb     0x100881b
 10087b6:	outs   dx,BYTE PTR ds:[esi]
 10087b7:	je     0x100880d
 10087b9:	push   0x64616572
 10087be:	dec    ecx
 10087bf:	add    BYTE PTR fs:[eax],al
 10087c2:	rol    DWORD PTR [ecx],0x47
 10087c5:	gs je  0x100880b
 10087c8:	jne    0x100883c
 10087ca:	jb     0x1008831
 10087cc:	outs   dx,BYTE PTR ds:[esi]
 10087cd:	je     0x100881f
 10087cf:	jb     0x1008840
 10087d1:	arpl   WORD PTR [ebp+0x73],sp
 10087d4:	jae    0x100881f
 10087d6:	add    BYTE PTR fs:[ecx+0x2],bh
 10087da:	inc    edi
 10087db:	gs je  0x1008831
 10087de:	jns    0x1008853
 10087e0:	je     0x1008847
 10087e2:	ins    DWORD PTR es:[edi],dx
 10087e3:	push   esp
 10087e4:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
 10087eb:	ins    BYTE PTR es:[edi],dx
 10087ec:	gs push esp
 10087ee:	imul   ebp,DWORD PTR [ebp+0x65],0x5404c000
 10087f5:	gs jb  0x1008865
 10087f8:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
 10087ff:	outs   dx,DWORD PTR ds:[esi]
 1008800:	arpl   WORD PTR [ebp+0x73],sp
 1008803:	jae    0x1008805
 1008805:	add    al,al
 1008807:	add    DWORD PTR [edi+0x65],eax
 100880a:	je     0x100884f
 100880c:	jne    0x1008880
 100880e:	jb     0x1008875
 1008810:	outs   dx,BYTE PTR ds:[esi]
 1008811:	je     0x1008863
 1008813:	jb     0x1008884
 1008815:	arpl   WORD PTR [ebp+0x73],sp
 1008818:	jae    0x100881a
 100881a:	rol    DWORD PTR [edx*2+0x6e61686e],cl
 1008821:	fs ins BYTE PTR es:[edi],dx
 1008823:	gs fs inc ebp
 1008826:	js     0x100888b
 1008828:	gs jo  0x100889f
 100882b:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 1008832:	gs jb  0x1008835
 1008835:	add    BYTE PTR [eax],al
 1008837:	add    ecx,DWORD PTR [ecx+0x73]
 100883a:	inc    esp
 100883b:	bound  esi,QWORD PTR gs:[ebp+0x67]
 100883f:	addr16 gs jb 0x1008893
 1008843:	jb     0x10088aa
 1008845:	jae    0x10088ac
 1008847:	outs   dx,BYTE PTR ds:[esi]
 1008848:	je     0x100884a
 100884a:	mov    cl,0x3
 100884c:	push   edx
 100884d:	popa   
 100884e:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
 1008855:	jo     0x10088cb
 1008857:	imul   ebp,DWORD PTR [edi+0x6e],0x2020000
 100885e:	inc    edi
 100885f:	gs je  0x10088ae
 1008862:	popa   
 1008863:	jae    0x10088d9
 1008865:	inc    ebp
 1008866:	jb     0x10088da
 1008868:	outs   dx,DWORD PTR ds:[esi]
 1008869:	jb     0x100886b
 100886b:	add    dh,ch
 100886d:	add    BYTE PTR [ebp+0x6e],al
 1008870:	je     0x10088d7
 1008872:	jb     0x10088b7
 1008874:	jb     0x10088df
 1008876:	je     0x10088e1
 1008878:	arpl   WORD PTR [ecx+0x6c],sp
 100887b:	push   ebx
 100887c:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1008881:	outs   dx,BYTE PTR ds:[esi]
 1008882:	add    BYTE PTR [eax],al
 1008884:	cmp    DWORD PTR [ebx],eax
 1008886:	dec    esp
 1008887:	gs popa 
 1008889:	jbe    0x10088f0
 100888b:	inc    ebx
 100888c:	jb     0x10088f7
 100888e:	je     0x10088f9
 1008890:	arpl   WORD PTR [ecx+0x6c],sp
 1008893:	push   ebx
 1008894:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 1008899:	outs   dx,BYTE PTR ds:[esi]
 100889a:	add    BYTE PTR [eax],al
 100889c:	jecxz  0x10088a0
 100889e:	dec    ecx
 100889f:	outs   dx,BYTE PTR ds:[esi]
 10088a0:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
 10088a8:	inc    ebx
 10088a9:	jb     0x1008914
 10088ab:	je     0x1008916
 10088ad:	arpl   WORD PTR [ecx+0x6c],sp
 10088b0:	push   ebx
 10088b1:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 10088b6:	outs   dx,BYTE PTR ds:[esi]
 10088b7:	inc    ecx
 10088b8:	outs   dx,BYTE PTR ds:[esi]
 10088b9:	fs push ebx
 10088bb:	jo     0x1008926
 10088bd:	outs   dx,BYTE PTR ds:[esi]
 10088be:	inc    ebx
 10088bf:	outs   dx,DWORD PTR ds:[esi]
 10088c0:	jne    0x1008930
 10088c2:	je     0x10088c4
 10088c4:	rol    DWORD PTR [eax],1
 10088c6:	inc    esp
 10088c7:	gs ins BYTE PTR es:[edi],dx
 10088c9:	gs je  0x1008931
 10088cc:	inc    ebx
 10088cd:	jb     0x1008938
 10088cf:	je     0x100893a
 10088d1:	arpl   WORD PTR [ecx+0x6c],sp
 10088d4:	push   ebx
 10088d5:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
 10088da:	outs   dx,BYTE PTR ds:[esi]
 10088db:	add    dh,cl
 10088dd:	add    cl,BYTE PTR [eax+0x65]
 10088e0:	popa   
 10088e1:	jo     0x1008927
 10088e3:	gs jae 0x100895a
 10088e6:	jb     0x1008957
 10088e8:	jns    0x10088ea
 10088ea:	retf   
 10088eb:	add    cl,BYTE PTR [eax+0x65]
 10088ee:	popa   
 10088ef:	jo     0x1008932
 10088f1:	ins    BYTE PTR es:[edi],dx
 10088f2:	ins    BYTE PTR es:[edi],dx
 10088f3:	outs   dx,DWORD PTR ds:[esi]
 10088f4:	arpl   WORD PTR [eax],ax
 10088f6:	rol    BYTE PTR [edx],cl
 10088f8:	dec    eax
 10088f9:	gs popa 
 10088fb:	jo     0x100894f
 10088fd:	gs inc ecx
 10088ff:	ins    BYTE PTR es:[edi],dx
 1008900:	ins    BYTE PTR es:[edi],dx
 1008901:	outs   dx,DWORD PTR ds:[esi]
 1008902:	arpl   WORD PTR [eax],ax
 1008904:	iret   
 1008905:	add    cl,BYTE PTR [eax+0x65]
 1008908:	popa   
 1008909:	jo     0x1008951
 100890b:	jb     0x1008972
 100890d:	add    BYTE PTR gs:[eax],al
 1008910:	aam    0x2
 1008912:	dec    eax
 1008913:	gs popa 
 1008915:	jo     0x100896a
 1008917:	imul   edi,DWORD PTR [edx+0x65],0x24a0000
 100891e:	inc    edi
 100891f:	gs je  0x1008972
 1008922:	jb     0x1008993
 1008924:	arpl   WORD PTR [ebp+0x73],sp
 1008927:	jae    0x1008971
 1008929:	gs popa 
 100892b:	jo     0x100892d
 100892d:	add    ah,bl
 100892f:	add    DWORD PTR [edi+0x65],eax
 1008932:	je     0x1008979
 1008934:	outs   dx,BYTE PTR ds:[esi]
 1008935:	jbe    0x10089a0
 1008937:	jb     0x10089a8
 1008939:	outs   dx,BYTE PTR ds:[esi]
 100893a:	ins    DWORD PTR es:[edi],dx
 100893b:	outs   dx,BYTE PTR gs:[esi]
 100893d:	je     0x1008995
 100893f:	popa   
 1008940:	jb     0x10089ab
 1008942:	popa   
 1008943:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
 1008947:	add    BYTE PTR [eax+eax*1+0x43],ah
 100894b:	outs   dx,DWORD PTR ds:[esi]
 100894c:	ins    DWORD PTR es:[edi],dx
 100894d:	jo     0x10089b0
 100894f:	jb     0x10089b6
 1008951:	push   ebx
 1008952:	je     0x10089c6
 1008954:	imul   ebp,DWORD PTR [esi+0x67],0x4e000057
 100895b:	add    eax,0x7274736c
 1008960:	ins    BYTE PTR es:[edi],dx
 1008961:	outs   dx,BYTE PTR gs:[esi]
 1008963:	push   edi
 1008964:	add    BYTE PTR [eax],al
 1008966:	icebp  
 1008967:	add    al,0x56
 1008969:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
 1008970:	jne    0x10089d7
 1008972:	jb     0x10089ed
 1008974:	add    BYTE PTR [eax],al
 1008976:	jae    0x100897c
 1008978:	push   ebx
 1008979:	gs je  0x10089c8
 100897c:	popa   
 100897d:	jae    0x10089f3
 100897f:	inc    ebp
 1008980:	jb     0x10089f4
 1008982:	outs   dx,DWORD PTR ds:[esi]
 1008983:	jb     0x1008985
 1008985:	add    bh,al
 1008987:	add    BYTE PTR [ebp+eiz*2+0x62],al
 100898b:	jne    0x10089f4
 100898d:	inc    edx
 100898e:	jb     0x10089f5
 1008990:	popa   
 1008991:	imul   eax,DWORD PTR [eax],0x0
 1008994:	sbb    eax,0x70784501
 1008999:	popa   
 100899a:	outs   dx,BYTE PTR ds:[esi]
 100899b:	fs inc ebp
 100899d:	outs   dx,BYTE PTR ds:[esi]
 100899e:	jbe    0x1008a09
 10089a0:	jb     0x1008a11
 10089a2:	outs   dx,BYTE PTR ds:[esi]
 10089a3:	ins    DWORD PTR es:[edi],dx
 10089a4:	outs   dx,BYTE PTR gs:[esi]
 10089a6:	je     0x10089fb
 10089a8:	je     0x1008a1c
 10089aa:	imul   ebp,DWORD PTR [esi+0x67],0x42005773
 10089b1:	add    al,BYTE PTR [edi+0x65]
 10089b4:	je     0x1008a06
 10089b6:	jb     0x1008a21
 10089b8:	jbe    0x1008a1b
 10089ba:	je     0x1008a21
 10089bc:	push   eax
 10089bd:	jb     0x1008a2e
 10089bf:	imul   bp,WORD PTR [ebp+eiz*2+0x53],0x7274
 10089c6:	imul   ebp,DWORD PTR [esi+0x67],0x44000057
 10089cd:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
 10089d1:	popa   
 10089d2:	ins    BYTE PTR es:[edi],dx
 10089d3:	inc    ecx
 10089d4:	ins    BYTE PTR es:[edi],dx
 10089d5:	ins    BYTE PTR es:[edi],dx
 10089d6:	outs   dx,DWORD PTR ds:[esi]
 10089d7:	arpl   WORD PTR [eax],ax
 10089d9:	add    BYTE PTR [ebx+eax*1],bh
 10089dc:	dec    esp
 10089dd:	outs   dx,DWORD PTR ds:[esi]
 10089de:	popa   
 10089df:	fs dec esp
 10089e1:	imul   esp,DWORD PTR [edx+0x72],0x41797261
 10089e8:	add    BYTE PTR [eax],al
 10089ea:	push   0x4
 10089ec:	pop    edi
 10089ed:	jae    0x1008a66
 10089ef:	jae    0x1008a54
 10089f1:	popa   
 10089f2:	outs   dx,BYTE PTR ds:[esi]
 10089f3:	pop    di
 10089f5:	jae    0x1008a56
 10089f7:	ins    BYTE PTR es:[edi],dx
 10089f8:	add    BYTE PTR [eax],al
 10089fa:	iret   
 10089fb:	add    eax,0x636d656d
 1008a00:	jo     0x1008a7b
	...
