
c0975115208399a8e9fbec2d9dee70af458b44471c8d8ac1b09c21631f9dbc4a.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x8df5]        # 0x409e10
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x8df6]        # 0x409e20
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x8df9]        # 0x409e30
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x8dbc]        # 0x409e00
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x8c4f]        # 0x409ca0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x8d91]        # 0x409df0
  40105f:	mov    DWORD PTR [rip+0xbfa3],edx        # 0x40d008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402de8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401d80
  401081:	mov    rdx,QWORD PTR [rip+0x8ca8]        # 0x409d30
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x8c8e]        # 0x409d20
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x8cf4]        # 0x409d90
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x8c2b]        # 0x409cd0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401960
  4010af:	mov    rax,QWORD PTR [rip+0x8b9a]        # 0x409c50
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402de8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xb39]        # 0x401c60
  401127:	call   0x401c50
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x8c55]        # 0x409dc0
  40116b:	lea    r8,[rip+0xbea6]        # 0x40d018
  401172:	lea    rdx,[rip+0xbea7]        # 0x40d020
  401179:	lea    rcx,[rip+0xbea8]        # 0x40d028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xbe78],eax        # 0x40d000
  401188:	lea    rax,[rip+0xbe71]        # 0x40d000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x8be5]        # 0x409d80
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402e00
  4011a3:	mov    DWORD PTR [rip+0xbe67],eax        # 0x40d010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x8c2a]        # 0x409df0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x8b0b]        # 0x409d00
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xd29e]        # 0x40e4a0
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x8ae7]        # 0x409d10
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xbdba],0x1        # 0x40d004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x8a2c]        # 0x409c90
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401f70
  40127d:	lea    rcx,[rip+0x128c]        # 0x402510
  401284:	call   QWORD PTR [rip+0xd20e]        # 0x40e498
  40128a:	mov    rdx,QWORD PTR [rip+0x8a5f]        # 0x409cf0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402420
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402e30
  4012a5:	call   0x401d60
  4012aa:	mov    rax,QWORD PTR [rip+0x89ef]        # 0x409ca0
  4012b1:	mov    QWORD PTR [rip+0xc790],rax        # 0x40da48
  4012b8:	mov    rax,QWORD PTR [rip+0x8a01]        # 0x409cc0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xc729],rax        # 0x40da40
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x4cca],eax        # 0x406000
  401336:	mov    r12d,DWORD PTR [rip+0xbceb]        # 0x40d028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402d68
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xbcc2]        # 0x40d020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402d40
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402d68
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402d60
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xbc6a],rbp        # 0x40d020
  4013b6:	call   0x401930
  4013bb:	mov    rax,QWORD PTR [rip+0x88ee]        # 0x409cb0
  4013c2:	mov    rdx,QWORD PTR [rip+0xbc4f]        # 0x40d018
  4013c9:	mov    ecx,DWORD PTR [rip+0xbc59]        # 0x40d028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xbc3c]        # 0x40d018
  4013dc:	mov    rdx,QWORD PTR [rip+0xbc3d]        # 0x40d020
  4013e3:	call   0x402f00
  4013e8:	mov    ecx,DWORD PTR [rip+0xbc1a]        # 0x40d008
  4013ee:	mov    DWORD PTR [rip+0xbc18],eax        # 0x40d00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xbc02]        # 0x40d004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402dd0
  40140b:	mov    eax,DWORD PTR [rip+0xbbfb]        # 0x40d00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x88d9]        # 0x409d10
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402dd8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x88ed]        # 0x409d50
  401463:	mov    rcx,QWORD PTR [rip+0x88d6]        # 0x409d40
  40146a:	call   0x402dc0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xcfaf]        # 0x40e448
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x88c9]        # 0x409d70
  4014a7:	mov    rcx,QWORD PTR [rip+0x88b2]        # 0x409d60
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402dc0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402d90
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x8915]        # 0x409df0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401970
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x88e5]        # 0x409df0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401970
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x28
  401534:	call   0x4017b0
  401539:	mov    eax,0x1
  40153e:	add    rsp,0x28
  401542:	ret    
  401543:	nop    DWORD PTR [rax]
  401546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401550:	push   rbx
  401551:	sub    rsp,0x20
  401555:	mov    ebx,ecx
  401557:	cmp    DWORD PTR [rip+0xbadb],ebx        # 0x40d038
  40155d:	jbe    0x401580
  40155f:	mov    r9,QWORD PTR [rip+0xbaca]        # 0x40d030
  401566:	mov    r8,rbx
  401569:	mov    edx,0x20
  40156e:	mov    rcx,r9
  401571:	call   0x402d58
  401576:	mov    BYTE PTR [rax+rbx*1],0x0
  40157a:	add    rsp,0x20
  40157e:	pop    rbx
  40157f:	ret    
  401580:	mov    rcx,QWORD PTR [rip+0xbaa9]        # 0x40d030
  401587:	lea    eax,[rbx+0x1]
  40158a:	mov    DWORD PTR [rip+0xbaa8],eax        # 0x40d038
  401590:	call   0x4017b0
  401595:	mov    ecx,DWORD PTR [rip+0xba9d]        # 0x40d038
  40159b:	call   0x401760
  4015a0:	mov    QWORD PTR [rip+0xba89],rax        # 0x40d030
  4015a7:	mov    r9,rax
  4015aa:	jmp    0x401566
  4015ac:	nop    DWORD PTR [rax+0x0]
  4015b0:	push   rsi
  4015b1:	push   rbx
  4015b2:	sub    rsp,0x28
  4015b6:	test   rcx,rcx
  4015b9:	mov    rbx,rcx
  4015bc:	je     0x401690
  4015c2:	mov    rsi,QWORD PTR [rip+0xba77]        # 0x40d040
  4015c9:	test   rsi,rsi
  4015cc:	je     0x4016b3
  4015d2:	mov    rcx,rbx
  4015d5:	call   0x402d40
  4015da:	cmp    rax,0xb
  4015de:	mov    r8,rsi
  4015e1:	lea    rdx,[rsi+0xc]
  4015e5:	jbe    0x401600
  4015e7:	jmp    0x401630
  4015e9:	nop    DWORD PTR [rax+0x0]
  4015f0:	mov    BYTE PTR [r8],r9b
  4015f3:	add    r8,0x1
  4015f7:	add    rbx,0x1
  4015fb:	cmp    r8,rdx
  4015fe:	je     0x40161c
  401600:	movzx  r9d,BYTE PTR [rbx]
  401604:	test   r9b,r9b
  401607:	jne    0x4015f0
  401609:	mov    r9d,0x20
  40160f:	add    r8,0x1
  401613:	mov    BYTE PTR [r8-0x1],r9b
  401617:	cmp    r8,rdx
  40161a:	jne    0x401600
  40161c:	mov    rax,rsi
  40161f:	mov    BYTE PTR [rsi+0xc],0x0
  401623:	add    rsp,0x28
  401627:	pop    rbx
  401628:	pop    rsi
  401629:	ret    
  40162a:	nop    WORD PTR [rax+rax*1+0x0]
  401630:	mov    rcx,rsi
  401633:	call   0x4017b0
  401638:	lea    rcx,[rip+0x59c1]        # 0x407000
  40163f:	mov    rdx,rbx
  401642:	call   0x4016d8
  401647:	mov    rcx,rbx
  40164a:	mov    QWORD PTR [rip+0xb9ef],rax        # 0x40d040
  401651:	call   0x402d40
  401656:	lea    r8,[rip+0x59ab]        # 0x407008
  40165d:	lea    rcx,[rip+0x59cc]        # 0x407030
  401664:	mov    r9d,eax
  401667:	mov    edx,0x10
  40166c:	call   0x401770
  401671:	or     DWORD PTR [rip+0xb9d0],0x2        # 0x40d048
  401678:	mov    rax,QWORD PTR [rip+0xb9c1]        # 0x40d040
  40167f:	add    rsp,0x28
  401683:	pop    rbx
  401684:	pop    rsi
  401685:	ret    
  401686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401690:	lea    r8,[rip+0x59a9]        # 0x407040
  401697:	lea    rdx,[rip+0x7477]        # 0x408b15
  40169e:	lea    rcx,[rip+0x598b]        # 0x407030
  4016a5:	call   0x401748
  4016aa:	xor    eax,eax
  4016ac:	add    rsp,0x28
  4016b0:	pop    rbx
  4016b1:	pop    rsi
  4016b2:	ret    
  4016b3:	mov    ecx,0xd
  4016b8:	call   0x401760
  4016bd:	mov    QWORD PTR [rip+0xb97c],rax        # 0x40d040
  4016c4:	mov    rsi,rax
  4016c7:	jmp    0x4015d2
  4016cc:	nop
  4016cd:	nop
  4016ce:	nop
  4016cf:	nop
  4016d0:	jmp    QWORD PTR [rip+0xcd32]        # 0x40e408
  4016d6:	nop
  4016d7:	nop
  4016d8:	jmp    QWORD PTR [rip+0xcd22]        # 0x40e400
  4016de:	nop
  4016df:	nop
  4016e0:	jmp    QWORD PTR [rip+0xcd12]        # 0x40e3f8
  4016e6:	nop
  4016e7:	nop
  4016e8:	jmp    QWORD PTR [rip+0xcd02]        # 0x40e3f0
  4016ee:	nop
  4016ef:	nop
  4016f0:	jmp    QWORD PTR [rip+0xccf2]        # 0x40e3e8
  4016f6:	nop
  4016f7:	nop
  4016f8:	jmp    QWORD PTR [rip+0xcce2]        # 0x40e3e0
  4016fe:	nop
  4016ff:	nop
  401700:	jmp    QWORD PTR [rip+0xccd2]        # 0x40e3d8
  401706:	nop
  401707:	nop
  401708:	jmp    QWORD PTR [rip+0xccc2]        # 0x40e3d0
  40170e:	nop
  40170f:	nop
  401710:	jmp    QWORD PTR [rip+0xccb2]        # 0x40e3c8
  401716:	nop
  401717:	nop
  401718:	jmp    QWORD PTR [rip+0xcca2]        # 0x40e3c0
  40171e:	nop
  40171f:	nop
  401720:	jmp    QWORD PTR [rip+0xcc92]        # 0x40e3b8
  401726:	nop
  401727:	nop
  401728:	jmp    QWORD PTR [rip+0xcc82]        # 0x40e3b0
  40172e:	nop
  40172f:	nop
  401730:	jmp    QWORD PTR [rip+0xcc72]        # 0x40e3a8
  401736:	nop
  401737:	nop
  401738:	jmp    QWORD PTR [rip+0xcc62]        # 0x40e3a0
  40173e:	nop
  40173f:	nop
  401740:	jmp    QWORD PTR [rip+0xcc52]        # 0x40e398
  401746:	nop
  401747:	nop
  401748:	jmp    QWORD PTR [rip+0xcc42]        # 0x40e390
  40174e:	nop
  40174f:	nop
  401750:	jmp    QWORD PTR [rip+0xcc32]        # 0x40e388
  401756:	nop
  401757:	nop
  401758:	jmp    QWORD PTR [rip+0xcc22]        # 0x40e380
  40175e:	nop
  40175f:	nop
  401760:	jmp    QWORD PTR [rip+0xcc12]        # 0x40e378
  401766:	nop
  401767:	nop
  401768:	jmp    QWORD PTR [rip+0xcc02]        # 0x40e370
  40176e:	nop
  40176f:	nop
  401770:	jmp    QWORD PTR [rip+0xcbf2]        # 0x40e368
  401776:	nop
  401777:	nop
  401778:	jmp    QWORD PTR [rip+0xcbe2]        # 0x40e360
  40177e:	nop
  40177f:	nop
  401780:	jmp    QWORD PTR [rip+0xcbd2]        # 0x40e358
  401786:	nop
  401787:	nop
  401788:	jmp    QWORD PTR [rip+0xcbc2]        # 0x40e350
  40178e:	nop
  40178f:	nop
  401790:	jmp    QWORD PTR [rip+0xcbb2]        # 0x40e348
  401796:	nop
  401797:	nop
  401798:	jmp    QWORD PTR [rip+0xcba2]        # 0x40e340
  40179e:	nop
  40179f:	nop
  4017a0:	jmp    QWORD PTR [rip+0xcb92]        # 0x40e338
  4017a6:	nop
  4017a7:	nop
  4017a8:	jmp    QWORD PTR [rip+0xcb82]        # 0x40e330
  4017ae:	nop
  4017af:	nop
  4017b0:	jmp    QWORD PTR [rip+0xcb72]        # 0x40e328
  4017b6:	nop
  4017b7:	nop
  4017b8:	jmp    QWORD PTR [rip+0xcb62]        # 0x40e320
  4017be:	nop
  4017bf:	nop
  4017c0:	push   rbx
  4017c1:	sub    rsp,0x30
  4017c5:	mov    rbx,rcx
  4017c8:	mov    rcx,QWORD PTR [rip+0xc281]        # 0x40da50
  4017cf:	call   0x401d70
  4017d4:	cmp    rax,0xffffffffffffffff
  4017d8:	mov    QWORD PTR [rsp+0x20],rax
  4017dd:	je     0x401855
  4017df:	mov    ecx,0x8
  4017e4:	call   0x402db8
  4017e9:	mov    rcx,QWORD PTR [rip+0xc260]        # 0x40da50
  4017f0:	call   0x401d70
  4017f5:	mov    rcx,QWORD PTR [rip+0xc25c]        # 0x40da58
  4017fc:	mov    QWORD PTR [rsp+0x20],rax
  401801:	call   0x401d70
  401806:	lea    rdx,[rsp+0x20]
  40180b:	lea    r8,[rsp+0x28]
  401810:	mov    rcx,rbx
  401813:	mov    QWORD PTR [rsp+0x28],rax
  401818:	call   0x402e08
  40181d:	mov    rcx,QWORD PTR [rsp+0x20]
  401822:	mov    rbx,rax
  401825:	call   0x401d80
  40182a:	mov    rcx,QWORD PTR [rsp+0x28]
  40182f:	mov    QWORD PTR [rip+0xc21a],rax        # 0x40da50
  401836:	call   0x401d80
  40183b:	mov    ecx,0x8
  401840:	mov    QWORD PTR [rip+0xc211],rax        # 0x40da58
  401847:	call   0x402da8
  40184c:	mov    rax,rbx
  40184f:	add    rsp,0x30
  401853:	pop    rbx
  401854:	ret    
  401855:	mov    rax,QWORD PTR [rip+0x8484]        # 0x409ce0
  40185c:	mov    rcx,rbx
  40185f:	call   QWORD PTR [rax]
  401861:	add    rsp,0x30
  401865:	pop    rbx
  401866:	ret    
  401867:	nop    WORD PTR [rax+rax*1+0x0]
  401870:	sub    rsp,0x28
  401874:	call   0x4017c0
  401879:	test   rax,rax
  40187c:	sete   al
  40187f:	movzx  eax,al
  401882:	neg    eax
  401884:	add    rsp,0x28
  401888:	ret    
  401889:	nop
  40188a:	nop
  40188b:	nop
  40188c:	nop
  40188d:	nop
  40188e:	nop
  40188f:	nop
  401890:	sub    rsp,0x28
  401894:	mov    rax,QWORD PTR [rip+0x4865]        # 0x406100
  40189b:	mov    rax,QWORD PTR [rax]
  40189e:	test   rax,rax
  4018a1:	je     0x4018c0
  4018a3:	call   rax
  4018a5:	mov    rax,QWORD PTR [rip+0x4854]        # 0x406100
  4018ac:	lea    rdx,[rax+0x8]
  4018b0:	mov    rax,QWORD PTR [rax+0x8]
  4018b4:	mov    QWORD PTR [rip+0x4845],rdx        # 0x406100
  4018bb:	test   rax,rax
  4018be:	jne    0x4018a3
  4018c0:	add    rsp,0x28
  4018c4:	ret    
  4018c5:	nop
  4018c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018d0:	push   rsi
  4018d1:	push   rbx
  4018d2:	sub    rsp,0x28
  4018d6:	mov    rsi,QWORD PTR [rip+0x8383]        # 0x409c60
  4018dd:	mov    rax,QWORD PTR [rsi]
  4018e0:	cmp    eax,0xffffffff
  4018e3:	mov    ebx,eax
  4018e5:	je     0x401910
  4018e7:	test   ebx,ebx
  4018e9:	je     0x4018fa
  4018eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4018f0:	mov    eax,ebx
  4018f2:	call   QWORD PTR [rsi+rax*8]
  4018f5:	sub    ebx,0x1
  4018f8:	jne    0x4018f0
  4018fa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401890
  401901:	add    rsp,0x28
  401905:	pop    rbx
  401906:	pop    rsi
  401907:	jmp    0x401870
  40190c:	nop    DWORD PTR [rax+0x0]
  401910:	xor    ebx,ebx
  401912:	jmp    0x401916
  401914:	mov    ebx,eax
  401916:	lea    edx,[rbx+0x1]
  401919:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40191e:	mov    rax,rdx
  401921:	jne    0x401914
  401923:	jmp    0x4018e7
  401925:	nop
  401926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401930:	mov    eax,DWORD PTR [rip+0xb73a]        # 0x40d070
  401936:	test   eax,eax
  401938:	je     0x401940
  40193a:	repz ret 
  40193c:	nop    DWORD PTR [rax+0x0]
  401940:	mov    DWORD PTR [rip+0xb726],0x1        # 0x40d070
  40194a:	jmp    0x4018d0
  40194c:	nop
  40194d:	nop
  40194e:	nop
  40194f:	nop
  401950:	mov    rax,QWORD PTR [rip+0xcba9]        # 0x40e500
  401957:	rex.W jmp rax
  40195a:	nop
  40195b:	nop
  40195c:	nop
  40195d:	nop
  40195e:	nop
  40195f:	nop
  401960:	xor    eax,eax
  401962:	ret    
  401963:	nop
  401964:	nop
  401965:	nop
  401966:	nop
  401967:	nop
  401968:	nop
  401969:	nop
  40196a:	nop
  40196b:	nop
  40196c:	nop
  40196d:	nop
  40196e:	nop
  40196f:	nop
  401970:	push   r12
  401972:	push   rbp
  401973:	push   rdi
  401974:	push   rsi
  401975:	push   rbx
  401976:	sub    rsp,0x40
  40197a:	mov    rbx,QWORD PTR [rip+0x47df]        # 0x406160
  401981:	movabs rax,0x2b992ddfa232
  40198b:	mov    QWORD PTR [rsp+0x20],0x0
  401994:	cmp    rbx,rax
  401997:	je     0x4019b0
  401999:	not    rbx
  40199c:	mov    QWORD PTR [rip+0x47cd],rbx        # 0x406170
  4019a3:	add    rsp,0x40
  4019a7:	pop    rbx
  4019a8:	pop    rsi
  4019a9:	pop    rdi
  4019aa:	pop    rbp
  4019ab:	pop    r12
  4019ad:	ret    
  4019ae:	xchg   ax,ax
  4019b0:	lea    rcx,[rsp+0x20]
  4019b5:	call   QWORD PTR [rip+0xca95]        # 0x40e450
  4019bb:	mov    r12,QWORD PTR [rsp+0x20]
  4019c0:	call   QWORD PTR [rip+0xca6a]        # 0x40e430
  4019c6:	mov    ebp,eax
  4019c8:	call   QWORD PTR [rip+0xca6a]        # 0x40e438
  4019ce:	mov    edi,eax
  4019d0:	call   QWORD PTR [rip+0xca82]        # 0x40e458
  4019d6:	lea    rcx,[rsp+0x30]
  4019db:	mov    esi,eax
  4019dd:	call   QWORD PTR [rip+0xca8d]        # 0x40e470
  4019e3:	xor    r12,QWORD PTR [rsp+0x30]
  4019e8:	mov    edx,edi
  4019ea:	movabs rax,0xffffffffffff
  4019f4:	xor    rbp,r12
  4019f7:	mov    rdi,rbp
  4019fa:	xor    rdi,rdx
  4019fd:	mov    edx,esi
  4019ff:	xor    rdi,rdx
  401a02:	mov    rsi,rdi
  401a05:	and    rsi,rax
  401a08:	cmp    rsi,rbx
  401a0b:	je     0x401a30
  401a0d:	mov    rax,rsi
  401a10:	not    rax
  401a13:	mov    QWORD PTR [rip+0x4746],rsi        # 0x406160
  401a1a:	mov    QWORD PTR [rip+0x474f],rax        # 0x406170
  401a21:	add    rsp,0x40
  401a25:	pop    rbx
  401a26:	pop    rsi
  401a27:	pop    rdi
  401a28:	pop    rbp
  401a29:	pop    r12
  401a2b:	ret    
  401a2c:	nop    DWORD PTR [rax+0x0]
  401a30:	movabs rax,0xffffd466d2205dcc
  401a3a:	movabs rsi,0x2b992ddfa233
  401a44:	jmp    0x401a13
  401a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a50:	push   rbp
  401a51:	push   rsi
  401a52:	push   rbx
  401a53:	mov    rbp,rsp
  401a56:	sub    rsp,0x70
  401a5a:	mov    rsi,rcx
  401a5d:	lea    rcx,[rip+0xb65c]        # 0x40d0c0
  401a64:	call   QWORD PTR [rip+0xca16]        # 0x40e480
  401a6a:	mov    rbx,QWORD PTR [rip+0xb747]        # 0x40d1b8
  401a71:	xor    r8d,r8d
  401a74:	lea    rdx,[rbp-0x28]
  401a78:	mov    rcx,rbx
  401a7b:	call   QWORD PTR [rip+0xca07]        # 0x40e488
  401a81:	test   rax,rax
  401a84:	mov    r9,rax
  401a87:	je     0x401b30
  401a8d:	lea    rax,[rbp-0x20]
  401a91:	mov    QWORD PTR [rsp+0x38],0x0
  401a9a:	mov    r8,rbx
  401a9d:	mov    rdx,QWORD PTR [rbp-0x28]
  401aa1:	xor    ecx,ecx
  401aa3:	mov    QWORD PTR [rsp+0x30],rax
  401aa8:	lea    rax,[rbp-0x18]
  401aac:	mov    QWORD PTR [rsp+0x28],rax
  401ab1:	lea    rax,[rip+0xb608]        # 0x40d0c0
  401ab8:	mov    QWORD PTR [rsp+0x20],rax
  401abd:	call   QWORD PTR [rip+0xc9cd]        # 0x40e490
  401ac3:	mov    rax,QWORD PTR [rip+0xb6ee]        # 0x40d1b8
  401aca:	xor    ecx,ecx
  401acc:	mov    QWORD PTR [rip+0xb66d],rsi        # 0x40d140
  401ad3:	mov    DWORD PTR [rip+0xbae3],0xc0000409        # 0x40d5c0
  401add:	mov    DWORD PTR [rip+0xbadd],0x1        # 0x40d5c4
  401ae7:	mov    QWORD PTR [rip+0xbae2],rax        # 0x40d5d0
  401aee:	mov    rax,QWORD PTR [rip+0x466b]        # 0x406160
  401af5:	mov    QWORD PTR [rbp-0x10],rax
  401af9:	mov    rax,QWORD PTR [rip+0x4670]        # 0x406170
  401b00:	mov    QWORD PTR [rbp-0x8],rax
  401b04:	call   QWORD PTR [rip+0xc98e]        # 0x40e498
  401b0a:	lea    rcx,[rip+0x7eaf]        # 0x4099c0
  401b11:	call   QWORD PTR [rip+0xc9a1]        # 0x40e4b8
  401b17:	call   QWORD PTR [rip+0xc90b]        # 0x40e428
  401b1d:	mov    edx,0xc0000409
  401b22:	mov    rcx,rax
  401b25:	call   QWORD PTR [rip+0xc97d]        # 0x40e4a8
  401b2b:	call   0x402da0
  401b30:	mov    rax,QWORD PTR [rbp+0x18]
  401b34:	mov    QWORD PTR [rip+0xb67d],rax        # 0x40d1b8
  401b3b:	lea    rax,[rbp+0x8]
  401b3f:	mov    QWORD PTR [rip+0xb612],rax        # 0x40d158
  401b46:	jmp    0x401ac3
  401b4b:	nop
  401b4c:	nop
  401b4d:	nop
  401b4e:	nop
  401b4f:	nop
  401b50:	sub    rsp,0x28
  401b54:	test   edx,edx
  401b56:	je     0x401b70
  401b58:	cmp    edx,0x3
  401b5b:	je     0x401b70
  401b5d:	mov    eax,0x1
  401b62:	add    rsp,0x28
  401b66:	ret    
  401b67:	nop    WORD PTR [rax+rax*1+0x0]
  401b70:	call   0x402860
  401b75:	mov    eax,0x1
  401b7a:	add    rsp,0x28
  401b7e:	ret    
  401b7f:	nop
  401b80:	push   rsi
  401b81:	push   rbx
  401b82:	sub    rsp,0x28
  401b86:	mov    rax,QWORD PTR [rip+0x80b3]        # 0x409c40
  401b8d:	cmp    DWORD PTR [rax],0x2
  401b90:	je     0x401b98
  401b92:	mov    DWORD PTR [rax],0x2
  401b98:	cmp    edx,0x2
  401b9b:	je     0x401bb0
  401b9d:	cmp    edx,0x1
  401ba0:	je     0x401be2
  401ba2:	mov    eax,0x1
  401ba7:	add    rsp,0x28
  401bab:	pop    rbx
  401bac:	pop    rsi
  401bad:	ret    
  401bae:	xchg   ax,ax
  401bb0:	lea    rbx,[rip+0xd4a9]        # 0x40f060
  401bb7:	lea    rsi,[rip+0xd4a2]        # 0x40f060
  401bbe:	cmp    rbx,rsi
  401bc1:	je     0x401ba2
  401bc3:	mov    rax,QWORD PTR [rbx]
  401bc6:	test   rax,rax
  401bc9:	je     0x401bcd
  401bcb:	call   rax
  401bcd:	add    rbx,0x8
  401bd1:	cmp    rbx,rsi
  401bd4:	jne    0x401bc3
  401bd6:	mov    eax,0x1
  401bdb:	add    rsp,0x28
  401bdf:	pop    rbx
  401be0:	pop    rsi
  401be1:	ret    
  401be2:	call   0x402860
  401be7:	jmp    0x401ba2
  401be9:	nop    DWORD PTR [rax+0x0]
  401bf0:	xor    eax,eax
  401bf2:	ret    
  401bf3:	nop
  401bf4:	nop
  401bf5:	nop
  401bf6:	nop
  401bf7:	nop
  401bf8:	nop
  401bf9:	nop
  401bfa:	nop
  401bfb:	nop
  401bfc:	nop
  401bfd:	nop
  401bfe:	nop
  401bff:	nop
  401c00:	sub    rsp,0x58
  401c04:	mov    rax,QWORD PTR [rip+0xba95]        # 0x40d6a0
  401c0b:	test   rax,rax
  401c0e:	je     0x401c3c
  401c10:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401c19:	mov    DWORD PTR [rsp+0x20],ecx
  401c1d:	lea    rcx,[rsp+0x20]
  401c22:	mov    QWORD PTR [rsp+0x28],rdx
  401c27:	movsd  QWORD PTR [rsp+0x30],xmm2
  401c2d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401c33:	movsd  QWORD PTR [rsp+0x40],xmm0
  401c39:	call   rax
  401c3b:	nop
  401c3c:	add    rsp,0x58
  401c40:	ret    
  401c41:	nop    DWORD PTR [rax+rax*1+0x0]
  401c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c50:	mov    QWORD PTR [rip+0xba49],rcx        # 0x40d6a0
  401c57:	jmp    0x402de0
  401c5c:	nop    DWORD PTR [rax+0x0]
  401c60:	push   rsi
  401c61:	push   rbx
  401c62:	sub    rsp,0x78
  401c66:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401c6b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401c70:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401c76:	cmp    DWORD PTR [rcx],0x6
  401c79:	ja     0x401d50
  401c7f:	mov    edx,DWORD PTR [rcx]
  401c81:	lea    rax,[rip+0x7e7c]        # 0x409b04
  401c88:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401c8c:	add    rax,rdx
  401c8f:	jmp    rax
  401c91:	lea    rbx,[rip+0x7d48]        # 0x4099e0
  401c98:	nop    DWORD PTR [rax+rax*1+0x0]
  401ca0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401ca6:	mov    rsi,QWORD PTR [rcx+0x8]
  401caa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401caf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401cb4:	call   0x402df8
  401cb9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401cc0:	lea    rcx,[rax+0x60]
  401cc4:	lea    rdx,[rip+0x7e0d]        # 0x409ad8
  401ccb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401cd1:	mov    r9,rsi
  401cd4:	mov    r8,rbx
  401cd7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401cdd:	call   0x402d88
  401ce2:	nop
  401ce3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401ce8:	xor    eax,eax
  401cea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401cef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401cf5:	add    rsp,0x78
  401cf9:	pop    rbx
  401cfa:	pop    rsi
  401cfb:	ret    
  401cfc:	nop    DWORD PTR [rax+0x0]
  401d00:	lea    rbx,[rip+0x7cf8]        # 0x4099ff
  401d07:	jmp    0x401ca0
  401d09:	nop    DWORD PTR [rax+0x0]
  401d10:	lea    rbx,[rip+0x7d09]        # 0x409a20
  401d17:	jmp    0x401ca0
  401d19:	nop    DWORD PTR [rax+0x0]
  401d20:	lea    rbx,[rip+0x7d69]        # 0x409a90
  401d27:	jmp    0x401ca0
  401d2c:	nop    DWORD PTR [rax+0x0]
  401d30:	lea    rbx,[rip+0x7d31]        # 0x409a68
  401d37:	jmp    0x401ca0
  401d3c:	nop    DWORD PTR [rax+0x0]
  401d40:	lea    rbx,[rip+0x7cf9]        # 0x409a40
  401d47:	jmp    0x401ca0
  401d4c:	nop    DWORD PTR [rax+0x0]
  401d50:	lea    rbx,[rip+0x7d6f]        # 0x409ac6
  401d57:	jmp    0x401ca0
  401d5c:	nop
  401d5d:	nop
  401d5e:	nop
  401d5f:	nop
  401d60:	fninit 
  401d62:	ret    
  401d63:	nop
  401d64:	nop
  401d65:	nop
  401d66:	nop
  401d67:	nop
  401d68:	nop
  401d69:	nop
  401d6a:	nop
  401d6b:	nop
  401d6c:	nop
  401d6d:	nop
  401d6e:	nop
  401d6f:	nop
  401d70:	mov    rax,rcx
  401d73:	ret    
  401d74:	xchg   ax,ax
  401d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d80:	mov    rax,rcx
  401d83:	ret    
  401d84:	nop
  401d85:	nop
  401d86:	nop
  401d87:	nop
  401d88:	nop
  401d89:	nop
  401d8a:	nop
  401d8b:	nop
  401d8c:	nop
  401d8d:	nop
  401d8e:	nop
  401d8f:	nop
  401d90:	push   rsi
  401d91:	push   rbx
  401d92:	sub    rsp,0x38
  401d96:	lea    rax,[rsp+0x58]
  401d9b:	mov    rbx,rcx
  401d9e:	mov    QWORD PTR [rsp+0x58],rdx
  401da3:	mov    QWORD PTR [rsp+0x60],r8
  401da8:	mov    QWORD PTR [rsp+0x68],r9
  401dad:	mov    QWORD PTR [rsp+0x28],rax
  401db2:	call   0x402df8
  401db7:	lea    rcx,[rip+0x7d62]        # 0x409b20
  401dbe:	lea    r9,[rax+0x60]
  401dc2:	mov    r8d,0x1b
  401dc8:	mov    edx,0x1
  401dcd:	call   0x402d70
  401dd2:	mov    rsi,QWORD PTR [rsp+0x28]
  401dd7:	call   0x402df8
  401ddc:	lea    rcx,[rax+0x60]
  401de0:	mov    rdx,rbx
  401de3:	mov    r8,rsi
  401de6:	call   0x402d30
  401deb:	call   0x402da0
  401df0:	nop
  401df1:	nop    DWORD PTR [rax+rax*1+0x0]
  401df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e00:	push   r13
  401e02:	push   r12
  401e04:	push   rbp
  401e05:	push   rdi
  401e06:	push   rsi
  401e07:	push   rbx
  401e08:	sub    rsp,0x58
  401e0c:	movsxd rbp,DWORD PTR [rip+0xb8b1]        # 0x40d6c4
  401e13:	mov    rbx,rcx
  401e16:	mov    rsi,rdx
  401e19:	mov    rdi,r8
  401e1c:	test   ebp,ebp
  401e1e:	jle    0x401f1a
  401e24:	mov    rax,QWORD PTR [rip+0xb89d]        # 0x40d6c8
  401e2b:	xor    r9d,r9d
  401e2e:	add    rax,0x8
  401e32:	mov    r10,QWORD PTR [rax]
  401e35:	cmp    rbx,r10
  401e38:	jb     0x401e4e
  401e3a:	mov    rdx,QWORD PTR [rax+0x8]
  401e3e:	mov    r11d,DWORD PTR [rdx+0x8]
  401e42:	add    r10,r11
  401e45:	cmp    rbx,r10
  401e48:	jb     0x401f00
  401e4e:	add    r9d,0x1
  401e52:	add    rax,0x18
  401e56:	cmp    r9d,ebp
  401e59:	jne    0x401e32
  401e5b:	mov    rcx,rbx
  401e5e:	call   0x402a70
  401e63:	test   rax,rax
  401e66:	mov    r12,rax
  401e69:	je     0x401f52
  401e6f:	lea    rbp,[rbp+rbp*2+0x0]
  401e74:	shl    rbp,0x3
  401e78:	mov    r13,rbp
  401e7b:	add    r13,QWORD PTR [rip+0xb846]        # 0x40d6c8
  401e82:	mov    QWORD PTR [r13+0x10],rax
  401e86:	mov    DWORD PTR [r13+0x0],0x0
  401e8e:	call   0x402b90
  401e93:	mov    edx,DWORD PTR [r12+0xc]
  401e98:	mov    r8d,0x30
  401e9e:	add    rax,rdx
  401ea1:	lea    rdx,[rsp+0x20]
  401ea6:	mov    QWORD PTR [r13+0x8],rax
  401eaa:	mov    rax,QWORD PTR [rip+0xb817]        # 0x40d6c8
  401eb1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401eb6:	call   QWORD PTR [rip+0xc60c]        # 0x40e4c8
  401ebc:	test   rax,rax
  401ebf:	je     0x401f35
  401ec1:	mov    eax,DWORD PTR [rsp+0x44]
  401ec5:	lea    edx,[rax-0x4]
  401ec8:	and    edx,0xfffffffb
  401ecb:	je     0x401ef9
  401ecd:	sub    eax,0x40
  401ed0:	and    eax,0xffffffbf
  401ed3:	je     0x401ef9
  401ed5:	mov    r9,rbp
  401ed8:	add    r9,QWORD PTR [rip+0xb7e9]        # 0x40d6c8
  401edf:	mov    r8d,0x40
  401ee5:	mov    rdx,QWORD PTR [rsp+0x38]
  401eea:	mov    rcx,QWORD PTR [rsp+0x20]
  401eef:	call   QWORD PTR [rip+0xc5cb]        # 0x40e4c0
  401ef5:	test   eax,eax
  401ef7:	je     0x401f21
  401ef9:	add    DWORD PTR [rip+0xb7c4],0x1        # 0x40d6c4
  401f00:	mov    r8,rdi
  401f03:	mov    rdx,rsi
  401f06:	mov    rcx,rbx
  401f09:	add    rsp,0x58
  401f0d:	pop    rbx
  401f0e:	pop    rsi
  401f0f:	pop    rdi
  401f10:	pop    rbp
  401f11:	pop    r12
  401f13:	pop    r13
  401f15:	jmp    0x402d60
  401f1a:	xor    ebp,ebp
  401f1c:	jmp    0x401e5b
  401f21:	call   QWORD PTR [rip+0xc519]        # 0x40e440
  401f27:	lea    rcx,[rip+0x7c6a]        # 0x409b98
  401f2e:	mov    edx,eax
  401f30:	call   0x401d90
  401f35:	mov    rax,QWORD PTR [rip+0xb78c]        # 0x40d6c8
  401f3c:	mov    edx,DWORD PTR [r12+0x8]
  401f41:	lea    rcx,[rip+0x7c18]        # 0x409b60
  401f48:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401f4d:	call   0x401d90
  401f52:	lea    rcx,[rip+0x7be7]        # 0x409b40
  401f59:	mov    rdx,rbx
  401f5c:	call   0x401d90
  401f61:	nop
  401f62:	nop    DWORD PTR [rax+0x0]
  401f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f70:	push   rbp
  401f71:	push   r14
  401f73:	push   r13
  401f75:	push   r12
  401f77:	push   rdi
  401f78:	push   rsi
  401f79:	push   rbx
  401f7a:	mov    rbp,rsp
  401f7d:	sub    rsp,0x60
  401f81:	mov    ebx,DWORD PTR [rip+0xb739]        # 0x40d6c0
  401f87:	test   ebx,ebx
  401f89:	je     0x401fa0
  401f8b:	mov    rsp,rbp
  401f8e:	pop    rbx
  401f8f:	pop    rsi
  401f90:	pop    rdi
  401f91:	pop    r12
  401f93:	pop    r13
  401f95:	pop    r14
  401f97:	pop    rbp
  401f98:	ret    
  401f99:	nop    DWORD PTR [rax+0x0]
  401fa0:	mov    DWORD PTR [rip+0xb716],0x1        # 0x40d6c0
  401faa:	call   0x402ac0
  401faf:	cdqe   
  401fb1:	lea    rax,[rax+rax*2]
  401fb5:	lea    rax,[rax*8+0x1e]
  401fbd:	and    rax,0xfffffffffffffff0
  401fc1:	call   0x402ce0
  401fc6:	mov    rsi,QWORD PTR [rip+0x7ca3]        # 0x409c70
  401fcd:	mov    rbx,QWORD PTR [rip+0x7cac]        # 0x409c80
  401fd4:	sub    rsp,rax
  401fd7:	mov    DWORD PTR [rip+0xb6e3],0x0        # 0x40d6c4
  401fe1:	lea    rax,[rsp+0x20]
  401fe6:	mov    QWORD PTR [rip+0xb6db],rax        # 0x40d6c8
  401fed:	mov    rax,rsi
  401ff0:	sub    rax,rbx
  401ff3:	cmp    rax,0x7
  401ff7:	jle    0x401f8b
  401ff9:	cmp    rax,0xb
  401ffd:	jle    0x402025
  401fff:	mov    r11d,DWORD PTR [rbx]
  402002:	test   r11d,r11d
  402005:	jne    0x402150
  40200b:	mov    r10d,DWORD PTR [rbx+0x4]
  40200f:	test   r10d,r10d
  402012:	jne    0x402150
  402018:	mov    r9d,DWORD PTR [rbx+0x8]
  40201c:	test   r9d,r9d
  40201f:	jne    0x40203c
  402021:	add    rbx,0xc
  402025:	mov    r8d,DWORD PTR [rbx]
  402028:	test   r8d,r8d
  40202b:	jne    0x402150
  402031:	mov    ecx,DWORD PTR [rbx+0x4]
  402034:	test   ecx,ecx
  402036:	jne    0x402150
  40203c:	mov    edx,DWORD PTR [rbx+0x8]
  40203f:	cmp    edx,0x1
  402042:	jne    0x40225c
  402048:	add    rbx,0xc
  40204c:	cmp    rbx,rsi
  40204f:	jae    0x401f8b
  402055:	mov    r12,QWORD PTR [rip+0x7c44]        # 0x409ca0
  40205c:	lea    r13,[rbp-0x30]
  402060:	movabs r14,0xffffffff00000000
  40206a:	mov    ecx,DWORD PTR [rbx+0x4]
  40206d:	mov    eax,DWORD PTR [rbx]
  40206f:	movzx  edx,BYTE PTR [rbx+0x8]
  402073:	add    rax,r12
  402076:	add    rcx,r12
  402079:	cmp    edx,0x10
  40207c:	mov    r8,QWORD PTR [rax]
  40207f:	je     0x4021c6
  402085:	jbe    0x40218d
  40208b:	cmp    edx,0x20
  40208e:	je     0x40220f
  402094:	cmp    edx,0x40
  402097:	jne    0x4021fb
  40209d:	sub    r8,rax
  4020a0:	mov    rdx,r13
  4020a3:	mov    rdi,r13
  4020a6:	mov    rax,r8
  4020a9:	add    rax,QWORD PTR [rcx]
  4020ac:	mov    r8d,0x8
  4020b2:	mov    QWORD PTR [rbp-0x30],rax
  4020b6:	call   0x401e00
  4020bb:	add    rbx,0xc
  4020bf:	cmp    rbx,rsi
  4020c2:	jb     0x40206a
  4020c4:	mov    eax,DWORD PTR [rip+0xb5fa]        # 0x40d6c4
  4020ca:	xor    ebx,ebx
  4020cc:	xor    esi,esi
  4020ce:	test   eax,eax
  4020d0:	jle    0x401f8b
  4020d6:	mov    r14,QWORD PTR [rip+0xc3eb]        # 0x40e4c8
  4020dd:	lea    r13,[rbp-0x34]
  4020e1:	mov    r12,QWORD PTR [rip+0xc3d8]        # 0x40e4c0
  4020e8:	jmp    0x402103
  4020ea:	nop    WORD PTR [rax+rax*1+0x0]
  4020f0:	add    esi,0x1
  4020f3:	add    rbx,0x18
  4020f7:	cmp    esi,DWORD PTR [rip+0xb5c7]        # 0x40d6c4
  4020fd:	jge    0x401f8b
  402103:	mov    rax,rbx
  402106:	add    rax,QWORD PTR [rip+0xb5bb]        # 0x40d6c8
  40210d:	mov    edx,DWORD PTR [rax]
  40210f:	test   edx,edx
  402111:	je     0x4020f0
  402113:	mov    rcx,QWORD PTR [rax+0x8]
  402117:	mov    r8d,0x30
  40211d:	mov    rdx,rdi
  402120:	call   r14
  402123:	test   rax,rax
  402126:	je     0x40223e
  40212c:	mov    rax,QWORD PTR [rip+0xb595]        # 0x40d6c8
  402133:	mov    r9,r13
  402136:	mov    rdx,QWORD PTR [rbp-0x18]
  40213a:	mov    rcx,QWORD PTR [rbp-0x30]
  40213e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402142:	call   r12
  402145:	jmp    0x4020f0
  402147:	nop    WORD PTR [rax+rax*1+0x0]
  402150:	cmp    rbx,rsi
  402153:	jae    0x401f8b
  402159:	mov    r12,QWORD PTR [rip+0x7b40]        # 0x409ca0
  402160:	lea    rdi,[rbp-0x30]
  402164:	mov    ecx,DWORD PTR [rbx+0x4]
  402167:	mov    eax,DWORD PTR [rbx]
  402169:	mov    r8d,0x4
  40216f:	mov    rdx,rdi
  402172:	add    rbx,0x8
  402176:	add    rcx,r12
  402179:	add    eax,DWORD PTR [rcx]
  40217b:	mov    DWORD PTR [rbp-0x30],eax
  40217e:	call   0x401e00
  402183:	cmp    rbx,rsi
  402186:	jb     0x402164
  402188:	jmp    0x4020c4
  40218d:	cmp    edx,0x8
  402190:	jne    0x4021fb
  402192:	movzx  edx,BYTE PTR [rcx]
  402195:	mov    rdi,r13
  402198:	mov    r10,rdx
  40219b:	or     r10,0xffffffffffffff00
  4021a2:	test   dl,dl
  4021a4:	cmovs  rdx,r10
  4021a8:	sub    rdx,rax
  4021ab:	lea    rax,[r8+rdx*1]
  4021af:	mov    r8d,0x1
  4021b5:	mov    rdx,r13
  4021b8:	mov    QWORD PTR [rbp-0x30],rax
  4021bc:	call   0x401e00
  4021c1:	jmp    0x4020bb
  4021c6:	movzx  edx,WORD PTR [rcx]
  4021c9:	mov    rdi,r13
  4021cc:	mov    r10,rdx
  4021cf:	or     r10,0xffffffffffff0000
  4021d6:	test   dx,dx
  4021d9:	cmovs  rdx,r10
  4021dd:	sub    rdx,rax
  4021e0:	lea    rax,[r8+rdx*1]
  4021e4:	mov    r8d,0x2
  4021ea:	mov    rdx,r13
  4021ed:	mov    QWORD PTR [rbp-0x30],rax
  4021f1:	call   0x401e00
  4021f6:	jmp    0x4020bb
  4021fb:	lea    rcx,[rip+0x79f6]        # 0x409bf8
  402202:	mov    QWORD PTR [rbp-0x30],0x0
  40220a:	call   0x401d90
  40220f:	mov    edx,DWORD PTR [rcx]
  402211:	mov    rdi,r13
  402214:	mov    r10,rdx
  402217:	or     r10,r14
  40221a:	test   edx,edx
  40221c:	cmovs  rdx,r10
  402220:	sub    rdx,rax
  402223:	lea    rax,[r8+rdx*1]
  402227:	mov    r8d,0x4
  40222d:	mov    rdx,r13
  402230:	mov    QWORD PTR [rbp-0x30],rax
  402234:	call   0x401e00
  402239:	jmp    0x4020bb
  40223e:	add    rbx,QWORD PTR [rip+0xb483]        # 0x40d6c8
  402245:	lea    rcx,[rip+0x7914]        # 0x409b60
  40224c:	mov    rax,QWORD PTR [rbx+0x10]
  402250:	mov    r8,QWORD PTR [rbx+0x8]
  402254:	mov    edx,DWORD PTR [rax+0x8]
  402257:	call   0x401d90
  40225c:	lea    rcx,[rip+0x795d]        # 0x409bc0
  402263:	call   0x401d90
  402268:	nop
  402269:	nop
  40226a:	nop
  40226b:	nop
  40226c:	nop
  40226d:	nop
  40226e:	nop
  40226f:	nop
  402270:	sub    rsp,0x28
  402274:	mov    eax,DWORD PTR [rcx]
  402276:	cmp    eax,0xc0000091
  40227b:	ja     0x4022e0
  40227d:	cmp    eax,0xc000008d
  402282:	jae    0x4022ff
  402284:	cmp    eax,0xc0000008
  402289:	je     0x4023a0
  40228f:	ja     0x402370
  402295:	cmp    eax,0x80000002
  40229a:	je     0x4023a0
  4022a0:	cmp    eax,0xc0000005
  4022a5:	jne    0x40237e
  4022ab:	xor    edx,edx
  4022ad:	mov    ecx,0xb
  4022b2:	call   0x402d50
  4022b7:	cmp    rax,0x1
  4022bb:	je     0x402400
  4022c1:	test   rax,rax
  4022c4:	je     0x4023e0
  4022ca:	mov    ecx,0xb
  4022cf:	call   rax
  4022d1:	xor    eax,eax
  4022d3:	add    rsp,0x28
  4022d7:	ret    
  4022d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022e0:	cmp    eax,0xc0000094
  4022e5:	je     0x4023b0
  4022eb:	ja     0x402330
  4022ed:	cmp    eax,0xc0000092
  4022f2:	je     0x4023a0
  4022f8:	cmp    eax,0xc0000093
  4022fd:	jne    0x40237e
  4022ff:	xor    edx,edx
  402301:	mov    ecx,0x8
  402306:	call   0x402d50
  40230b:	cmp    rax,0x1
  40230f:	mov    rdx,rax
  402312:	je     0x402388
  402314:	test   rdx,rdx
  402317:	mov    eax,0x1
  40231c:	je     0x4022d3
  40231e:	mov    ecx,0x8
  402323:	call   rdx
  402325:	xor    eax,eax
  402327:	add    rsp,0x28
  40232b:	ret    
  40232c:	nop    DWORD PTR [rax+0x0]
  402330:	cmp    eax,0xc0000095
  402335:	je     0x4023a0
  402337:	cmp    eax,0xc0000096
  40233c:	jne    0x40237e
  40233e:	xor    edx,edx
  402340:	mov    ecx,0x4
  402345:	call   0x402d50
  40234a:	cmp    rax,0x1
  40234e:	je     0x4023ea
  402354:	test   rax,rax
  402357:	je     0x4023e0
  40235d:	mov    ecx,0x4
  402362:	call   rax
  402364:	xor    eax,eax
  402366:	jmp    0x4022d3
  40236b:	nop    DWORD PTR [rax+rax*1+0x0]
  402370:	cmp    eax,0xc000001d
  402375:	je     0x40233e
  402377:	cmp    eax,0xc000008c
  40237c:	je     0x4023a0
  40237e:	mov    eax,0x1
  402383:	add    rsp,0x28
  402387:	ret    
  402388:	mov    edx,0x1
  40238d:	mov    ecx,0x8
  402392:	call   0x402d50
  402397:	call   0x401d60
  40239c:	nop    DWORD PTR [rax+0x0]
  4023a0:	xor    eax,eax
  4023a2:	add    rsp,0x28
  4023a6:	ret    
  4023a7:	nop    WORD PTR [rax+rax*1+0x0]
  4023b0:	xor    edx,edx
  4023b2:	mov    ecx,0x8
  4023b7:	call   0x402d50
  4023bc:	cmp    rax,0x1
  4023c0:	mov    rdx,rax
  4023c3:	jne    0x402314
  4023c9:	mov    edx,0x1
  4023ce:	mov    ecx,0x8
  4023d3:	call   0x402d50
  4023d8:	xor    eax,eax
  4023da:	jmp    0x4022d3
  4023df:	nop
  4023e0:	mov    eax,0x4
  4023e5:	add    rsp,0x28
  4023e9:	ret    
  4023ea:	mov    edx,0x1
  4023ef:	mov    ecx,0x4
  4023f4:	call   0x402d50
  4023f9:	xor    eax,eax
  4023fb:	jmp    0x4022d3
  402400:	mov    edx,0x1
  402405:	mov    ecx,0xb
  40240a:	call   0x402d50
  40240f:	xor    eax,eax
  402411:	jmp    0x4022d3
  402416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402420:	push   r12
  402422:	push   rbp
  402423:	push   rdi
  402424:	push   rsi
  402425:	push   rbx
  402426:	sub    rsp,0x20
  40242a:	call   0x402b90
  40242f:	mov    rbp,rax
  402432:	mov    eax,DWORD PTR [rip+0xb2d0]        # 0x40d708
  402438:	test   eax,eax
  40243a:	jne    0x402461
  40243c:	test   rbp,rbp
  40243f:	je     0x402461
  402441:	lea    rcx,[rip+0x77e8]        # 0x409c30
  402448:	mov    DWORD PTR [rip+0xb2b6],0x1        # 0x40d708
  402452:	call   0x4029d0
  402457:	test   rax,rax
  40245a:	je     0x402470
  40245c:	mov    eax,0x1
  402461:	add    rsp,0x20
  402465:	pop    rbx
  402466:	pop    rsi
  402467:	pop    rdi
  402468:	pop    rbp
  402469:	pop    r12
  40246b:	ret    
  40246c:	nop    DWORD PTR [rax+0x0]
  402470:	lea    rbx,[rip+0xb3c9]        # 0x40d840
  402477:	mov    ecx,0x30
  40247c:	lea    rdx,[rip+0xb2bd]        # 0x40d740
  402483:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402270
  40248a:	xor    esi,esi
  40248c:	mov    rdi,rbx
  40248f:	rep stos QWORD PTR es:[rdi],rax
  402492:	mov    rdi,rdx
  402495:	sub    r12,rbp
  402498:	mov    cl,0x20
  40249a:	rep stos QWORD PTR es:[rdi],rax
  40249d:	mov    rdi,rdx
  4024a0:	jmp    0x4024d0
  4024a2:	mov    BYTE PTR [rdi],0x9
  4024a5:	mov    DWORD PTR [rdi+0x4],r12d
  4024a9:	add    rsi,0x1
  4024ad:	mov    edx,DWORD PTR [rax+0xc]
  4024b0:	add    rbx,0xc
  4024b4:	mov    DWORD PTR [rbx-0xc],edx
  4024b7:	add    edx,DWORD PTR [rax+0x8]
  4024ba:	mov    rax,rdi
  4024bd:	sub    rax,rbp
  4024c0:	add    rdi,0x8
  4024c4:	mov    DWORD PTR [rbx-0x4],eax
  4024c7:	mov    DWORD PTR [rbx-0x8],edx
  4024ca:	cmp    rsi,0x20
  4024ce:	je     0x402505
  4024d0:	mov    rcx,rsi
  4024d3:	call   0x402b00
  4024d8:	test   rax,rax
  4024db:	jne    0x4024a2
  4024dd:	test   rsi,rsi
  4024e0:	je     0x40245c
  4024e6:	mov    edx,esi
  4024e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4024f0:	mov    r8,rbp
  4024f3:	lea    rcx,[rip+0xb346]        # 0x40d840
  4024fa:	call   QWORD PTR [rip+0xbf78]        # 0x40e478
  402500:	jmp    0x40245c
  402505:	mov    edx,0x20
  40250a:	jmp    0x4024f0
  40250c:	nop    DWORD PTR [rax+0x0]
  402510:	push   rbx
  402511:	sub    rsp,0x20
  402515:	mov    rdx,QWORD PTR [rcx]
  402518:	mov    eax,DWORD PTR [rdx]
  40251a:	mov    r8d,eax
  40251d:	and    r8d,0x20ffffff
  402524:	cmp    r8d,0x20474343
  40252b:	je     0x402630
  402531:	cmp    eax,0xc0000091
  402536:	mov    rbx,rcx
  402539:	ja     0x4025c0
  40253f:	cmp    eax,0xc000008d
  402544:	jae    0x4025d7
  40254a:	cmp    eax,0xc0000008
  40254f:	je     0x402583
  402551:	ja     0x402590
  402553:	cmp    eax,0x80000002
  402558:	je     0x402583
  40255a:	cmp    eax,0xc0000005
  40255f:	jne    0x4025a2
  402561:	xor    edx,edx
  402563:	mov    ecx,0xb
  402568:	call   0x402d50
  40256d:	cmp    rax,0x1
  402571:	je     0x4026a0
  402577:	test   rax,rax
  40257a:	je     0x4025a2
  40257c:	mov    ecx,0xb
  402581:	call   rax
  402583:	mov    eax,0xffffffff
  402588:	add    rsp,0x20
  40258c:	pop    rbx
  40258d:	ret    
  40258e:	xchg   ax,ax
  402590:	cmp    eax,0xc000001d
  402595:	je     0x402656
  40259b:	cmp    eax,0xc000008c
  4025a0:	je     0x402583
  4025a2:	mov    rax,QWORD PTR [rip+0xb157]        # 0x40d700
  4025a9:	test   rax,rax
  4025ac:	je     0x402588
  4025ae:	mov    rcx,rbx
  4025b1:	add    rsp,0x20
  4025b5:	pop    rbx
  4025b6:	rex.W jmp rax
  4025b9:	nop    DWORD PTR [rax+0x0]
  4025c0:	cmp    eax,0xc0000094
  4025c5:	je     0x402602
  4025c7:	ja     0x402640
  4025c9:	cmp    eax,0xc0000092
  4025ce:	je     0x402583
  4025d0:	cmp    eax,0xc0000093
  4025d5:	jne    0x4025a2
  4025d7:	xor    edx,edx
  4025d9:	mov    ecx,0x8
  4025de:	call   0x402d50
  4025e3:	cmp    rax,0x1
  4025e7:	jne    0x402614
  4025e9:	mov    edx,0x1
  4025ee:	mov    ecx,0x8
  4025f3:	call   0x402d50
  4025f8:	call   0x401d60
  4025fd:	jmp    0x402583
  402602:	xor    edx,edx
  402604:	mov    ecx,0x8
  402609:	call   0x402d50
  40260e:	cmp    rax,0x1
  402612:	je     0x402682
  402614:	test   rax,rax
  402617:	je     0x4025a2
  402619:	mov    ecx,0x8
  40261e:	call   rax
  402620:	mov    eax,0xffffffff
  402625:	jmp    0x402588
  40262a:	nop    WORD PTR [rax+rax*1+0x0]
  402630:	test   BYTE PTR [rdx+0x4],0x1
  402634:	jne    0x402531
  40263a:	jmp    0x402583
  40263f:	nop
  402640:	cmp    eax,0xc0000095
  402645:	je     0x402583
  40264b:	cmp    eax,0xc0000096
  402650:	jne    0x4025a2
  402656:	xor    edx,edx
  402658:	mov    ecx,0x4
  40265d:	call   0x402d50
  402662:	cmp    rax,0x1
  402666:	je     0x4026b4
  402668:	test   rax,rax
  40266b:	je     0x4025a2
  402671:	mov    ecx,0x4
  402676:	call   rax
  402678:	mov    eax,0xffffffff
  40267d:	jmp    0x402588
  402682:	mov    edx,0x1
  402687:	mov    ecx,0x8
  40268c:	call   0x402d50
  402691:	jmp    0x402583
  402696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026a0:	mov    edx,0x1
  4026a5:	mov    ecx,0xb
  4026aa:	call   0x402d50
  4026af:	jmp    0x402583
  4026b4:	mov    edx,0x1
  4026b9:	mov    ecx,0x4
  4026be:	call   0x402d50
  4026c3:	jmp    0x402583
  4026c8:	nop
  4026c9:	nop
  4026ca:	nop
  4026cb:	nop
  4026cc:	nop
  4026cd:	nop
  4026ce:	nop
  4026cf:	nop
  4026d0:	push   rbp
  4026d1:	push   rdi
  4026d2:	push   rsi
  4026d3:	push   rbx
  4026d4:	sub    rsp,0x28
  4026d8:	lea    rcx,[rip+0xb301]        # 0x40d9e0
  4026df:	call   QWORD PTR [rip+0xbd3b]        # 0x40e420
  4026e5:	mov    rbx,QWORD PTR [rip+0xb2d4]        # 0x40d9c0
  4026ec:	test   rbx,rbx
  4026ef:	je     0x402724
  4026f1:	mov    rbp,QWORD PTR [rip+0xbdb8]        # 0x40e4b0
  4026f8:	mov    rdi,QWORD PTR [rip+0xbd41]        # 0x40e440
  4026ff:	nop
  402700:	mov    ecx,DWORD PTR [rbx]
  402702:	call   rbp
  402704:	mov    rsi,rax
  402707:	call   rdi
  402709:	test   eax,eax
  40270b:	jne    0x40271b
  40270d:	test   rsi,rsi
  402710:	je     0x40271b
  402712:	mov    rax,QWORD PTR [rbx+0x8]
  402716:	mov    rcx,rsi
  402719:	call   rax
  40271b:	mov    rbx,QWORD PTR [rbx+0x10]
  40271f:	test   rbx,rbx
  402722:	jne    0x402700
  402724:	mov    rax,QWORD PTR [rip+0xbd3d]        # 0x40e468
  40272b:	lea    rcx,[rip+0xb2ae]        # 0x40d9e0
  402732:	add    rsp,0x28
  402736:	pop    rbx
  402737:	pop    rsi
  402738:	pop    rdi
  402739:	pop    rbp
  40273a:	rex.W jmp rax
  40273d:	nop    DWORD PTR [rax]
  402740:	push   rdi
  402741:	push   rsi
  402742:	push   rbx
  402743:	sub    rsp,0x20
  402747:	mov    eax,DWORD PTR [rip+0xb27b]        # 0x40d9c8
  40274d:	test   eax,eax
  40274f:	jne    0x402760
  402751:	add    rsp,0x20
  402755:	pop    rbx
  402756:	pop    rsi
  402757:	pop    rdi
  402758:	ret    
  402759:	nop    DWORD PTR [rax+0x0]
  402760:	mov    rsi,rdx
  402763:	mov    edi,ecx
  402765:	mov    edx,0x18
  40276a:	mov    ecx,0x1
  40276f:	call   0x402d98
  402774:	test   rax,rax
  402777:	mov    rbx,rax
  40277a:	je     0x4027b8
  40277c:	mov    DWORD PTR [rax],edi
  40277e:	mov    QWORD PTR [rax+0x8],rsi
  402782:	lea    rcx,[rip+0xb257]        # 0x40d9e0
  402789:	call   QWORD PTR [rip+0xbc91]        # 0x40e420
  40278f:	mov    rax,QWORD PTR [rip+0xb22a]        # 0x40d9c0
  402796:	lea    rcx,[rip+0xb243]        # 0x40d9e0
  40279d:	mov    QWORD PTR [rip+0xb21c],rbx        # 0x40d9c0
  4027a4:	mov    QWORD PTR [rbx+0x10],rax
  4027a8:	call   QWORD PTR [rip+0xbcba]        # 0x40e468
  4027ae:	xor    eax,eax
  4027b0:	add    rsp,0x20
  4027b4:	pop    rbx
  4027b5:	pop    rsi
  4027b6:	pop    rdi
  4027b7:	ret    
  4027b8:	mov    eax,0xffffffff
  4027bd:	jmp    0x402751
  4027bf:	nop
  4027c0:	push   rbx
  4027c1:	sub    rsp,0x20
  4027c5:	mov    eax,DWORD PTR [rip+0xb1fd]        # 0x40d9c8
  4027cb:	test   eax,eax
  4027cd:	jne    0x4027e0
  4027cf:	xor    eax,eax
  4027d1:	add    rsp,0x20
  4027d5:	pop    rbx
  4027d6:	ret    
  4027d7:	nop    WORD PTR [rax+rax*1+0x0]
  4027e0:	mov    ebx,ecx
  4027e2:	lea    rcx,[rip+0xb1f7]        # 0x40d9e0
  4027e9:	call   QWORD PTR [rip+0xbc31]        # 0x40e420
  4027ef:	mov    rdx,QWORD PTR [rip+0xb1ca]        # 0x40d9c0
  4027f6:	test   rdx,rdx
  4027f9:	je     0x402817
  4027fb:	mov    eax,DWORD PTR [rdx]
  4027fd:	cmp    eax,ebx
  4027ff:	jne    0x40280e
  402801:	jmp    0x40284f
  402803:	mov    r8d,DWORD PTR [rax]
  402806:	cmp    r8d,ebx
  402809:	je     0x402830
  40280b:	mov    rdx,rax
  40280e:	mov    rax,QWORD PTR [rdx+0x10]
  402812:	test   rax,rax
  402815:	jne    0x402803
  402817:	lea    rcx,[rip+0xb1c2]        # 0x40d9e0
  40281e:	call   QWORD PTR [rip+0xbc44]        # 0x40e468
  402824:	xor    eax,eax
  402826:	add    rsp,0x20
  40282a:	pop    rbx
  40282b:	ret    
  40282c:	nop    DWORD PTR [rax+0x0]
  402830:	mov    rcx,rax
  402833:	mov    rax,QWORD PTR [rax+0x10]
  402837:	mov    QWORD PTR [rdx+0x10],rax
  40283b:	call   0x402d78
  402840:	lea    rcx,[rip+0xb199]        # 0x40d9e0
  402847:	call   QWORD PTR [rip+0xbc1b]        # 0x40e468
  40284d:	jmp    0x402824
  40284f:	mov    rax,QWORD PTR [rdx+0x10]
  402853:	mov    rcx,rdx
  402856:	mov    QWORD PTR [rip+0xb163],rax        # 0x40d9c0
  40285d:	jmp    0x40283b
  40285f:	nop
  402860:	push   rbx
  402861:	sub    rsp,0x20
  402865:	cmp    edx,0x1
  402868:	je     0x402900
  40286e:	jb     0x4028a0
  402870:	cmp    edx,0x2
  402873:	je     0x402890
  402875:	cmp    edx,0x3
  402878:	jne    0x402895
  40287a:	mov    eax,DWORD PTR [rip+0xb148]        # 0x40d9c8
  402880:	test   eax,eax
  402882:	je     0x402895
  402884:	call   0x4026d0
  402889:	jmp    0x402895
  40288b:	nop    DWORD PTR [rax+rax*1+0x0]
  402890:	call   0x401d60
  402895:	mov    eax,0x1
  40289a:	add    rsp,0x20
  40289e:	pop    rbx
  40289f:	ret    
  4028a0:	mov    eax,DWORD PTR [rip+0xb122]        # 0x40d9c8
  4028a6:	test   eax,eax
  4028a8:	jne    0x402930
  4028ae:	mov    eax,DWORD PTR [rip+0xb114]        # 0x40d9c8
  4028b4:	cmp    eax,0x1
  4028b7:	jne    0x402895
  4028b9:	mov    rcx,QWORD PTR [rip+0xb100]        # 0x40d9c0
  4028c0:	test   rcx,rcx
  4028c3:	je     0x4028d6
  4028c5:	mov    rbx,QWORD PTR [rcx+0x10]
  4028c9:	call   0x402d78
  4028ce:	test   rbx,rbx
  4028d1:	mov    rcx,rbx
  4028d4:	jne    0x4028c5
  4028d6:	lea    rcx,[rip+0xb103]        # 0x40d9e0
  4028dd:	mov    QWORD PTR [rip+0xb0d8],0x0        # 0x40d9c0
  4028e8:	mov    DWORD PTR [rip+0xb0d6],0x0        # 0x40d9c8
  4028f2:	call   QWORD PTR [rip+0xbb20]        # 0x40e418
  4028f8:	jmp    0x402895
  4028fa:	nop    WORD PTR [rax+rax*1+0x0]
  402900:	mov    eax,DWORD PTR [rip+0xb0c2]        # 0x40d9c8
  402906:	test   eax,eax
  402908:	je     0x402920
  40290a:	mov    eax,0x1
  40290f:	mov    DWORD PTR [rip+0xb0af],0x1        # 0x40d9c8
  402919:	add    rsp,0x20
  40291d:	pop    rbx
  40291e:	ret    
  40291f:	nop
  402920:	lea    rcx,[rip+0xb0b9]        # 0x40d9e0
  402927:	call   QWORD PTR [rip+0xbb33]        # 0x40e460
  40292d:	jmp    0x40290a
  40292f:	nop
  402930:	call   0x4026d0
  402935:	jmp    0x4028ae
  40293a:	nop
  40293b:	nop
  40293c:	nop
  40293d:	nop
  40293e:	nop
  40293f:	nop
  402940:	movsxd rax,DWORD PTR [rcx+0x3c]
  402944:	add    rcx,rax
  402947:	xor    eax,eax
  402949:	cmp    DWORD PTR [rcx],0x4550
  40294f:	je     0x402953
  402951:	repz ret 
  402953:	xor    eax,eax
  402955:	cmp    WORD PTR [rcx+0x18],0x20b
  40295b:	sete   al
  40295e:	ret    
  40295f:	nop
  402960:	cmp    WORD PTR [rcx],0x5a4d
  402965:	je     0x402970
  402967:	xor    eax,eax
  402969:	ret    
  40296a:	nop    WORD PTR [rax+rax*1+0x0]
  402970:	jmp    0x402940
  402972:	nop    DWORD PTR [rax+0x0]
  402976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402980:	movsxd rax,DWORD PTR [rcx+0x3c]
  402984:	add    rcx,rax
  402987:	movzx  eax,WORD PTR [rcx+0x14]
  40298b:	lea    rax,[rcx+rax*1+0x18]
  402990:	movzx  ecx,WORD PTR [rcx+0x6]
  402994:	test   ecx,ecx
  402996:	je     0x4029c1
  402998:	sub    ecx,0x1
  40299b:	lea    rcx,[rcx+rcx*4]
  40299f:	lea    r9,[rax+rcx*8+0x28]
  4029a4:	mov    r8d,DWORD PTR [rax+0xc]
  4029a8:	cmp    r8,rdx
  4029ab:	mov    rcx,r8
  4029ae:	ja     0x4029b8
  4029b0:	add    ecx,DWORD PTR [rax+0x8]
  4029b3:	cmp    rdx,rcx
  4029b6:	jb     0x4029c3
  4029b8:	add    rax,0x28
  4029bc:	cmp    rax,r9
  4029bf:	jne    0x4029a4
  4029c1:	xor    eax,eax
  4029c3:	repz ret 
  4029c5:	nop
  4029c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029d0:	push   rdi
  4029d1:	push   rsi
  4029d2:	push   rbx
  4029d3:	sub    rsp,0x20
  4029d7:	mov    rsi,rcx
  4029da:	call   0x402d40
  4029df:	cmp    rax,0x8
  4029e3:	ja     0x402a00
  4029e5:	mov    rbx,QWORD PTR [rip+0x72b4]        # 0x409ca0
  4029ec:	xor    edi,edi
  4029ee:	cmp    WORD PTR [rbx],0x5a4d
  4029f3:	je     0x402a10
  4029f5:	mov    rax,rdi
  4029f8:	add    rsp,0x20
  4029fc:	pop    rbx
  4029fd:	pop    rsi
  4029fe:	pop    rdi
  4029ff:	ret    
  402a00:	xor    edi,edi
  402a02:	mov    rax,rdi
  402a05:	add    rsp,0x20
  402a09:	pop    rbx
  402a0a:	pop    rsi
  402a0b:	pop    rdi
  402a0c:	ret    
  402a0d:	nop    DWORD PTR [rax]
  402a10:	mov    rcx,rbx
  402a13:	call   0x402940
  402a18:	test   eax,eax
  402a1a:	je     0x4029f5
  402a1c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402a20:	add    rdx,rbx
  402a23:	movzx  eax,WORD PTR [rdx+0x14]
  402a27:	lea    rbx,[rdx+rax*1+0x18]
  402a2c:	movzx  eax,WORD PTR [rdx+0x6]
  402a30:	test   eax,eax
  402a32:	je     0x4029f5
  402a34:	sub    eax,0x1
  402a37:	lea    rax,[rax+rax*4]
  402a3b:	lea    rdi,[rbx+rax*8+0x28]
  402a40:	jmp    0x402a4b
  402a42:	add    rbx,0x28
  402a46:	cmp    rbx,rdi
  402a49:	je     0x402a00
  402a4b:	mov    r8d,0x8
  402a51:	mov    rdx,rsi
  402a54:	mov    rcx,rbx
  402a57:	call   0x402d38
  402a5c:	test   eax,eax
  402a5e:	jne    0x402a42
  402a60:	mov    rdi,rbx
  402a63:	mov    rax,rdi
  402a66:	add    rsp,0x20
  402a6a:	pop    rbx
  402a6b:	pop    rsi
  402a6c:	pop    rdi
  402a6d:	ret    
  402a6e:	xchg   ax,ax
  402a70:	push   rsi
  402a71:	push   rbx
  402a72:	sub    rsp,0x28
  402a76:	mov    rbx,QWORD PTR [rip+0x7223]        # 0x409ca0
  402a7d:	cmp    WORD PTR [rbx],0x5a4d
  402a82:	je     0x402a90
  402a84:	xor    eax,eax
  402a86:	add    rsp,0x28
  402a8a:	pop    rbx
  402a8b:	pop    rsi
  402a8c:	ret    
  402a8d:	nop    DWORD PTR [rax]
  402a90:	mov    rsi,rcx
  402a93:	mov    rcx,rbx
  402a96:	call   0x402940
  402a9b:	test   eax,eax
  402a9d:	je     0x402a84
  402a9f:	sub    rsi,rbx
  402aa2:	mov    rcx,rbx
  402aa5:	mov    rdx,rsi
  402aa8:	add    rsp,0x28
  402aac:	pop    rbx
  402aad:	pop    rsi
  402aae:	jmp    0x402980
  402ab3:	nop    DWORD PTR [rax]
  402ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ac0:	push   rbx
  402ac1:	sub    rsp,0x20
  402ac5:	mov    rbx,QWORD PTR [rip+0x71d4]        # 0x409ca0
  402acc:	xor    eax,eax
  402ace:	cmp    WORD PTR [rbx],0x5a4d
  402ad3:	je     0x402ae0
  402ad5:	add    rsp,0x20
  402ad9:	pop    rbx
  402ada:	ret    
  402adb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ae0:	mov    rcx,rbx
  402ae3:	call   0x402940
  402ae8:	test   eax,eax
  402aea:	je     0x402ad5
  402aec:	movsxd rax,DWORD PTR [rbx+0x3c]
  402af0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402af5:	add    rsp,0x20
  402af9:	pop    rbx
  402afa:	ret    
  402afb:	nop    DWORD PTR [rax+rax*1+0x0]
  402b00:	push   rdi
  402b01:	push   rsi
  402b02:	push   rbx
  402b03:	sub    rsp,0x20
  402b07:	mov    rsi,QWORD PTR [rip+0x7192]        # 0x409ca0
  402b0e:	xor    edi,edi
  402b10:	mov    rbx,rcx
  402b13:	cmp    WORD PTR [rsi],0x5a4d
  402b18:	je     0x402b25
  402b1a:	mov    rax,rdi
  402b1d:	add    rsp,0x20
  402b21:	pop    rbx
  402b22:	pop    rsi
  402b23:	pop    rdi
  402b24:	ret    
  402b25:	mov    rcx,rsi
  402b28:	call   0x402940
  402b2d:	test   eax,eax
  402b2f:	je     0x402b1a
  402b31:	movsxd rax,DWORD PTR [rsi+0x3c]
  402b35:	add    rsi,rax
  402b38:	movzx  eax,WORD PTR [rsi+0x14]
  402b3c:	lea    rdx,[rsi+rax*1+0x18]
  402b41:	movzx  eax,WORD PTR [rsi+0x6]
  402b45:	test   eax,eax
  402b47:	je     0x402b1a
  402b49:	sub    eax,0x1
  402b4c:	lea    rax,[rax+rax*4]
  402b50:	lea    rax,[rdx+rax*8+0x28]
  402b55:	test   BYTE PTR [rdx+0x27],0x20
  402b59:	je     0x402b64
  402b5b:	test   rbx,rbx
  402b5e:	je     0x402b80
  402b60:	sub    rbx,0x1
  402b64:	add    rdx,0x28
  402b68:	cmp    rdx,rax
  402b6b:	jne    0x402b55
  402b6d:	xor    edi,edi
  402b6f:	mov    rax,rdi
  402b72:	add    rsp,0x20
  402b76:	pop    rbx
  402b77:	pop    rsi
  402b78:	pop    rdi
  402b79:	ret    
  402b7a:	nop    WORD PTR [rax+rax*1+0x0]
  402b80:	mov    rdi,rdx
  402b83:	mov    rax,rdi
  402b86:	add    rsp,0x20
  402b8a:	pop    rbx
  402b8b:	pop    rsi
  402b8c:	pop    rdi
  402b8d:	ret    
  402b8e:	xchg   ax,ax
  402b90:	push   rsi
  402b91:	push   rbx
  402b92:	sub    rsp,0x28
  402b96:	mov    rsi,QWORD PTR [rip+0x7103]        # 0x409ca0
  402b9d:	xor    ebx,ebx
  402b9f:	cmp    WORD PTR [rsi],0x5a4d
  402ba4:	je     0x402bb0
  402ba6:	mov    rax,rbx
  402ba9:	add    rsp,0x28
  402bad:	pop    rbx
  402bae:	pop    rsi
  402baf:	ret    
  402bb0:	mov    rcx,rsi
  402bb3:	call   0x402940
  402bb8:	test   eax,eax
  402bba:	cmovne rbx,rsi
  402bbe:	mov    rax,rbx
  402bc1:	add    rsp,0x28
  402bc5:	pop    rbx
  402bc6:	pop    rsi
  402bc7:	ret    
  402bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd0:	push   rsi
  402bd1:	push   rbx
  402bd2:	sub    rsp,0x28
  402bd6:	mov    rbx,QWORD PTR [rip+0x70c3]        # 0x409ca0
  402bdd:	xor    eax,eax
  402bdf:	cmp    WORD PTR [rbx],0x5a4d
  402be4:	je     0x402bf0
  402be6:	add    rsp,0x28
  402bea:	pop    rbx
  402beb:	pop    rsi
  402bec:	ret    
  402bed:	nop    DWORD PTR [rax]
  402bf0:	mov    rsi,rcx
  402bf3:	mov    rcx,rbx
  402bf6:	call   0x402940
  402bfb:	test   eax,eax
  402bfd:	je     0x402be6
  402bff:	sub    rsi,rbx
  402c02:	mov    rcx,rbx
  402c05:	mov    rdx,rsi
  402c08:	call   0x402980
  402c0d:	test   rax,rax
  402c10:	je     0x402c21
  402c12:	mov    eax,DWORD PTR [rax+0x24]
  402c15:	not    eax
  402c17:	shr    eax,0x1f
  402c1a:	add    rsp,0x28
  402c1e:	pop    rbx
  402c1f:	pop    rsi
  402c20:	ret    
  402c21:	xor    eax,eax
  402c23:	jmp    0x402be6
  402c25:	nop
  402c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c30:	push   rbp
  402c31:	push   rdi
  402c32:	push   rsi
  402c33:	push   rbx
  402c34:	sub    rsp,0x28
  402c38:	mov    rdi,QWORD PTR [rip+0x7061]        # 0x409ca0
  402c3f:	xor    ebp,ebp
  402c41:	mov    esi,ecx
  402c43:	cmp    WORD PTR [rdi],0x5a4d
  402c48:	je     0x402c60
  402c4a:	mov    rax,rbp
  402c4d:	add    rsp,0x28
  402c51:	pop    rbx
  402c52:	pop    rsi
  402c53:	pop    rdi
  402c54:	pop    rbp
  402c55:	ret    
  402c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c60:	mov    rcx,rdi
  402c63:	call   0x402940
  402c68:	test   eax,eax
  402c6a:	je     0x402c4a
  402c6c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402c70:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402c77:	test   edx,edx
  402c79:	je     0x402c4a
  402c7b:	mov    ebx,edx
  402c7d:	mov    rcx,rdi
  402c80:	mov    rdx,rbx
  402c83:	call   0x402980
  402c88:	test   rax,rax
  402c8b:	je     0x402c4a
  402c8d:	add    rbx,rdi
  402c90:	mov    rdx,rbx
  402c93:	jne    0x402ca7
  402c95:	jmp    0x402c4a
  402c97:	nop    WORD PTR [rax+rax*1+0x0]
  402ca0:	sub    esi,0x1
  402ca3:	add    rdx,0x14
  402ca7:	mov    ecx,DWORD PTR [rdx+0x4]
  402caa:	test   ecx,ecx
  402cac:	jne    0x402cb5
  402cae:	mov    eax,DWORD PTR [rdx+0xc]
  402cb1:	test   eax,eax
  402cb3:	je     0x402cd0
  402cb5:	test   esi,esi
  402cb7:	jg     0x402ca0
  402cb9:	mov    ebp,DWORD PTR [rdx+0xc]
  402cbc:	add    rbp,rdi
  402cbf:	mov    rax,rbp
  402cc2:	add    rsp,0x28
  402cc6:	pop    rbx
  402cc7:	pop    rsi
  402cc8:	pop    rdi
  402cc9:	pop    rbp
  402cca:	ret    
  402ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  402cd0:	xor    ebp,ebp
  402cd2:	mov    rax,rbp
  402cd5:	add    rsp,0x28
  402cd9:	pop    rbx
  402cda:	pop    rsi
  402cdb:	pop    rdi
  402cdc:	pop    rbp
  402cdd:	ret    
  402cde:	nop
  402cdf:	nop
  402ce0:	push   rcx
  402ce1:	push   rax
  402ce2:	cmp    rax,0x1000
  402ce8:	lea    rcx,[rsp+0x18]
  402ced:	jb     0x402d08
  402cef:	sub    rcx,0x1000
  402cf6:	or     QWORD PTR [rcx],0x0
  402cfa:	sub    rax,0x1000
  402d00:	cmp    rax,0x1000
  402d06:	ja     0x402cef
  402d08:	sub    rcx,rax
  402d0b:	or     QWORD PTR [rcx],0x0
  402d0f:	pop    rax
  402d10:	pop    rcx
  402d11:	ret    
  402d12:	nop
  402d13:	nop
  402d14:	nop
  402d15:	nop
  402d16:	nop
  402d17:	nop
  402d18:	nop
  402d19:	nop
  402d1a:	nop
  402d1b:	nop
  402d1c:	nop
  402d1d:	nop
  402d1e:	nop
  402d1f:	nop
  402d20:	jmp    QWORD PTR [rip+0xb8ba]        # 0x40e5e0
  402d26:	nop
  402d27:	nop
  402d28:	jmp    QWORD PTR [rip+0xb8aa]        # 0x40e5d8
  402d2e:	nop
  402d2f:	nop
  402d30:	jmp    QWORD PTR [rip+0xb89a]        # 0x40e5d0
  402d36:	nop
  402d37:	nop
  402d38:	jmp    QWORD PTR [rip+0xb88a]        # 0x40e5c8
  402d3e:	nop
  402d3f:	nop
  402d40:	jmp    QWORD PTR [rip+0xb87a]        # 0x40e5c0
  402d46:	nop
  402d47:	nop
  402d48:	jmp    QWORD PTR [rip+0xb86a]        # 0x40e5b8
  402d4e:	nop
  402d4f:	nop
  402d50:	jmp    QWORD PTR [rip+0xb85a]        # 0x40e5b0
  402d56:	nop
  402d57:	nop
  402d58:	jmp    QWORD PTR [rip+0xb84a]        # 0x40e5a8
  402d5e:	nop
  402d5f:	nop
  402d60:	jmp    QWORD PTR [rip+0xb83a]        # 0x40e5a0
  402d66:	nop
  402d67:	nop
  402d68:	jmp    QWORD PTR [rip+0xb82a]        # 0x40e598
  402d6e:	nop
  402d6f:	nop
  402d70:	jmp    QWORD PTR [rip+0xb81a]        # 0x40e590
  402d76:	nop
  402d77:	nop
  402d78:	jmp    QWORD PTR [rip+0xb80a]        # 0x40e588
  402d7e:	nop
  402d7f:	nop
  402d80:	jmp    QWORD PTR [rip+0xb7fa]        # 0x40e580
  402d86:	nop
  402d87:	nop
  402d88:	jmp    QWORD PTR [rip+0xb7ea]        # 0x40e578
  402d8e:	nop
  402d8f:	nop
  402d90:	jmp    QWORD PTR [rip+0xb7da]        # 0x40e570
  402d96:	nop
  402d97:	nop
  402d98:	jmp    QWORD PTR [rip+0xb7ca]        # 0x40e568
  402d9e:	nop
  402d9f:	nop
  402da0:	jmp    QWORD PTR [rip+0xb7ba]        # 0x40e560
  402da6:	nop
  402da7:	nop
  402da8:	jmp    QWORD PTR [rip+0xb7aa]        # 0x40e558
  402dae:	nop
  402daf:	nop
  402db0:	jmp    QWORD PTR [rip+0xb79a]        # 0x40e550
  402db6:	nop
  402db7:	nop
  402db8:	jmp    QWORD PTR [rip+0xb78a]        # 0x40e548
  402dbe:	nop
  402dbf:	nop
  402dc0:	jmp    QWORD PTR [rip+0xb77a]        # 0x40e540
  402dc6:	nop
  402dc7:	nop
  402dc8:	jmp    QWORD PTR [rip+0xb762]        # 0x40e530
  402dce:	nop
  402dcf:	nop
  402dd0:	jmp    QWORD PTR [rip+0xb752]        # 0x40e528
  402dd6:	nop
  402dd7:	nop
  402dd8:	jmp    QWORD PTR [rip+0xb742]        # 0x40e520
  402dde:	nop
  402ddf:	nop
  402de0:	jmp    QWORD PTR [rip+0xb72a]        # 0x40e510
  402de6:	nop
  402de7:	nop
  402de8:	jmp    QWORD PTR [rip+0xb71a]        # 0x40e508
  402dee:	nop
  402def:	nop
  402df0:	jmp    QWORD PTR [rip+0xb70a]        # 0x40e500
  402df6:	nop
  402df7:	nop
  402df8:	jmp    QWORD PTR [rip+0xb6fa]        # 0x40e4f8
  402dfe:	nop
  402dff:	nop
  402e00:	jmp    QWORD PTR [rip+0xb6e2]        # 0x40e4e8
  402e06:	nop
  402e07:	nop
  402e08:	jmp    QWORD PTR [rip+0xb6d2]        # 0x40e4e0
  402e0e:	nop
  402e0f:	nop
  402e10:	jmp    QWORD PTR [rip+0xb6c2]        # 0x40e4d8
  402e16:	nop
  402e17:	nop
  402e18:	nop    DWORD PTR [rax+rax*1+0x0]
  402e20:	mov    rax,QWORD PTR [rip+0xac09]        # 0x40da30
  402e27:	ret    
  402e28:	nop    DWORD PTR [rax+rax*1+0x0]
  402e30:	mov    rax,rcx
  402e33:	xchg   QWORD PTR [rip+0xabf6],rax        # 0x40da30
  402e3a:	ret    
  402e3b:	nop
  402e3c:	nop
  402e3d:	nop
  402e3e:	nop
  402e3f:	nop
  402e40:	jmp    QWORD PTR [rip+0xb682]        # 0x40e4c8
  402e46:	nop
  402e47:	nop
  402e48:	jmp    QWORD PTR [rip+0xb672]        # 0x40e4c0
  402e4e:	nop
  402e4f:	nop
  402e50:	jmp    QWORD PTR [rip+0xb662]        # 0x40e4b8
  402e56:	nop
  402e57:	nop
  402e58:	jmp    QWORD PTR [rip+0xb652]        # 0x40e4b0
  402e5e:	nop
  402e5f:	nop
  402e60:	jmp    QWORD PTR [rip+0xb642]        # 0x40e4a8
  402e66:	nop
  402e67:	nop
  402e68:	jmp    QWORD PTR [rip+0xb632]        # 0x40e4a0
  402e6e:	nop
  402e6f:	nop
  402e70:	jmp    QWORD PTR [rip+0xb622]        # 0x40e498
  402e76:	nop
  402e77:	nop
  402e78:	jmp    QWORD PTR [rip+0xb612]        # 0x40e490
  402e7e:	nop
  402e7f:	nop
  402e80:	jmp    QWORD PTR [rip+0xb602]        # 0x40e488
  402e86:	nop
  402e87:	nop
  402e88:	jmp    QWORD PTR [rip+0xb5f2]        # 0x40e480
  402e8e:	nop
  402e8f:	nop
  402e90:	jmp    QWORD PTR [rip+0xb5e2]        # 0x40e478
  402e96:	nop
  402e97:	nop
  402e98:	jmp    QWORD PTR [rip+0xb5d2]        # 0x40e470
  402e9e:	nop
  402e9f:	nop
  402ea0:	jmp    QWORD PTR [rip+0xb5c2]        # 0x40e468
  402ea6:	nop
  402ea7:	nop
  402ea8:	jmp    QWORD PTR [rip+0xb5b2]        # 0x40e460
  402eae:	nop
  402eaf:	nop
  402eb0:	jmp    QWORD PTR [rip+0xb5a2]        # 0x40e458
  402eb6:	nop
  402eb7:	nop
  402eb8:	jmp    QWORD PTR [rip+0xb592]        # 0x40e450
  402ebe:	nop
  402ebf:	nop
  402ec0:	jmp    QWORD PTR [rip+0xb582]        # 0x40e448
  402ec6:	nop
  402ec7:	nop
  402ec8:	jmp    QWORD PTR [rip+0xb572]        # 0x40e440
  402ece:	nop
  402ecf:	nop
  402ed0:	jmp    QWORD PTR [rip+0xb562]        # 0x40e438
  402ed6:	nop
  402ed7:	nop
  402ed8:	jmp    QWORD PTR [rip+0xb552]        # 0x40e430
  402ede:	nop
  402edf:	nop
  402ee0:	jmp    QWORD PTR [rip+0xb542]        # 0x40e428
  402ee6:	nop
  402ee7:	nop
  402ee8:	jmp    QWORD PTR [rip+0xb532]        # 0x40e420
  402eee:	nop
  402eef:	nop
  402ef0:	jmp    QWORD PTR [rip+0xb522]        # 0x40e418
  402ef6:	nop
  402ef7:	nop
  402ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  402f00:	push   r15
  402f02:	push   r14
  402f04:	push   r13
  402f06:	push   r12
  402f08:	push   rbp
  402f09:	push   rdi
  402f0a:	push   rsi
  402f0b:	push   rbx
  402f0c:	sub    rsp,0x138
  402f13:	lea    rsi,[rip+0x3126]        # 0x406040
  402f1a:	mov    r14d,ecx
  402f1d:	lea    rdi,[rsp+0x80]
  402f25:	mov    r15,rdx
  402f28:	call   0x401930
  402f2d:	cmp    r14d,0x1
  402f31:	mov    QWORD PTR [rsp+0x40],rdi
  402f36:	mov    ecx,0x16
  402f3b:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  402f3e:	jbe    0x40482a
  402f44:	mov    ebp,0x1
  402f49:	lea    r10,[rip+0x4125]        # 0x407075
  402f50:	mov    r9d,0x9
  402f56:	mov    r11d,0x7
  402f5c:	jmp    0x402f7c
  402f5e:	xchg   ax,ax
  402f60:	lea    ebx,[rbp+0x1]
  402f63:	mov    DWORD PTR [rip+0xa0ef],0x1        # 0x40d05c
  402f6d:	mov    QWORD PTR [r13+0x0],0x0
  402f75:	cmp    r14d,ebx
  402f78:	mov    ebp,ebx
  402f7a:	jbe    0x402fc5
  402f7c:	mov    r12d,ebp
  402f7f:	mov    rsi,r10
  402f82:	mov    rcx,r9
  402f85:	lea    r13,[r15+r12*8]
  402f89:	mov    rbx,QWORD PTR [r13+0x0]
  402f8d:	mov    rdi,rbx
  402f90:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402f92:	je     0x402f60
  402f94:	lea    rsi,[rip+0x40e3]        # 0x40707e
  402f9b:	mov    rdi,rbx
  402f9e:	mov    rcx,r11
  402fa1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402fa3:	jne    0x4031a3
  402fa9:	lea    ebx,[rbp+0x1]
  402fac:	mov    DWORD PTR [rip+0xa0a2],0x1        # 0x40d058
  402fb6:	mov    QWORD PTR [r13+0x0],0x0
  402fbe:	cmp    r14d,ebx
  402fc1:	mov    ebp,ebx
  402fc3:	ja     0x402f7c
  402fc5:	lea    rbx,[r15+0x8]
  402fc9:	mov    eax,0x1
  402fce:	xor    edx,edx
  402fd0:	mov    rcx,rbx
  402fd3:	jmp    0x402ffa
  402fd5:	mov    r8,QWORD PTR [rcx]
  402fd8:	test   r8,r8
  402fdb:	je     0x402fee
  402fdd:	mov    r9d,edx
  402fe0:	add    edx,0x1
  402fe3:	mov    QWORD PTR [r15+r9*8],r8
  402fe7:	mov    QWORD PTR [rcx],0x0
  402fee:	add    eax,0x1
  402ff1:	add    rcx,0x8
  402ff5:	cmp    r14d,eax
  402ff8:	je     0x403011
  402ffa:	test   edx,edx
  402ffc:	jne    0x402fd5
  402ffe:	cmp    QWORD PTR [rcx],0x0
  403002:	cmove  edx,eax
  403005:	add    eax,0x1
  403008:	add    rcx,0x8
  40300c:	cmp    r14d,eax
  40300f:	jne    0x402ffa
  403011:	test   edx,edx
  403013:	cmovne r14d,edx
  403017:	cmp    r14d,0x1
  40301b:	jle    0x40482a
  403021:	lea    eax,[r14-0x2]
  403025:	xor    ecx,ecx
  403027:	lea    rsi,[r15+rax*8+0x10]
  40302c:	nop    DWORD PTR [rax+0x0]
  403030:	mov    rdx,QWORD PTR [rbx]
  403033:	add    rbx,0x8
  403037:	call   0x401708
  40303c:	cmp    rbx,rsi
  40303f:	mov    rcx,rax
  403042:	jne    0x403030
  403044:	test   rax,rax
  403047:	je     0x40482a
  40304d:	call   0x401700
  403052:	mov    QWORD PTR [rsp+0x60],rax
  403057:	lea    rcx,[rip+0x6902]        # 0x409960
  40305e:	call   0x401728
  403063:	mov    r15,rax
  403066:	call   QWORD PTR [rip+0xb48c]        # 0x40e4f8
  40306c:	lea    rdx,[rip+0xffffffffffffe685]        # 0x4016f8
  403073:	lea    rcx,[rip+0xffffffffffffe676]        # 0x4016f0
  40307a:	add    rax,0x30
  40307e:	mov    QWORD PTR [rip+0x9fdb],rax        # 0x40d060
  403085:	call   0x401788
  40308a:	mov    QWORD PTR [rip+0x9fd7],rax        # 0x40d068
  403091:	mov    eax,DWORD PTR [rip+0x3059]        # 0x4060f0
  403097:	test   eax,eax
  403099:	je     0x4030d3
  40309b:	mov    rbx,QWORD PTR [rsp+0x40]
  4030a0:	lea    rsi,[rsp+0x130]
  4030a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4030b0:	mov    rcx,QWORD PTR [rbx]
  4030b3:	add    rbx,0x8
  4030b7:	call   0x4016e0
  4030bc:	mov    rcx,QWORD PTR [rip+0x9fa5]        # 0x40d068
  4030c3:	mov    r8,rax
  4030c6:	mov    rdx,rax
  4030c9:	call   0x401798
  4030ce:	cmp    rbx,rsi
  4030d1:	jne    0x4030b0
  4030d3:	mov    rcx,QWORD PTR [rip+0x9f86]        # 0x40d060
  4030da:	lea    rdx,[rip+0x42d3]        # 0x4073b4
  4030e1:	call   0x4017b8
  4030e6:	mov    ebx,DWORD PTR [rip+0x9f70]        # 0x40d05c
  4030ec:	test   ebx,ebx
  4030ee:	jne    0x4037b7
  4030f4:	cmp    DWORD PTR [rip+0x9f5d],0x0        # 0x40d058
  4030fb:	jne    0x4037f6
  403101:	mov    r11d,DWORD PTR [rip+0x9f50]        # 0x40d058
  403108:	test   r11d,r11d
  40310b:	jne    0x40389c
  403111:	mov    rax,QWORD PTR [rsp+0x60]
  403116:	test   rax,rax
  403119:	mov    QWORD PTR [rsp+0x50],rax
  40311e:	je     0x403335
  403124:	mov    rax,QWORD PTR [rsp+0x50]
  403129:	lea    rdi,[rip+0x43ae]        # 0x4074de
  403130:	mov    ecx,0xb
  403135:	mov    rbx,QWORD PTR [rax]
  403138:	mov    rsi,rbx
  40313b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40313d:	jne    0x4035d0
  403143:	xor    ecx,ecx
  403145:	call   0x402d28
  40314a:	mov    DWORD PTR [rsp+0x48],eax
  40314e:	mov    r9d,DWORD PTR [rsp+0x48]
  403153:	test   r9d,r9d
  403156:	js     0x4035ef
  40315c:	mov    edx,DWORD PTR [rsp+0x48]
  403160:	mov    QWORD PTR [r15+0x10],rbx
  403164:	mov    rcx,r15
  403167:	call   0x401730
  40316c:	jmp    0x40318d
  40316e:	xchg   ax,ax
  403170:	cmp    eax,0xa
  403173:	mov    rcx,r15
  403176:	jne    0x403260
  40317c:	call   0x401738
  403181:	mov    edx,DWORD PTR [r15+0x40]
  403185:	test   edx,edx
  403187:	je     0x403315
  40318d:	mov    rcx,r15
  403190:	call   0x401720
  403195:	test   eax,eax
  403197:	jne    0x403170
  403199:	mov    rcx,r15
  40319c:	call   0x401720
  4031a1:	jmp    0x403181
  4031a3:	lea    rsi,[rip+0x3edb]        # 0x407085
  4031aa:	mov    rdi,rbx
  4031ad:	mov    ecx,0xe
  4031b2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4031b4:	jne    0x4031d0
  4031b6:	mov    DWORD PTR [rip+0x9e8c],0x1        # 0x40d04c
  4031c0:	mov    QWORD PTR [r13+0x0],0x0
  4031c8:	lea    ebx,[rbp+0x1]
  4031cb:	jmp    0x402f75
  4031d0:	lea    rsi,[rip+0x3ebc]        # 0x407093
  4031d7:	mov    ecx,0xb
  4031dc:	mov    rdi,rbx
  4031df:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4031e1:	jne    0x4031fd
  4031e3:	mov    DWORD PTR [rip+0x2f03],0x0        # 0x4060f0
  4031ed:	mov    QWORD PTR [r13+0x0],0x0
  4031f5:	lea    ebx,[rbp+0x1]
  4031f8:	jmp    0x402f75
  4031fd:	lea    rsi,[rip+0x3e9a]        # 0x40709e
  403204:	mov    rdi,rbx
  403207:	mov    rcx,r9
  40320a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40320c:	jne    0x403228
  40320e:	mov    DWORD PTR [rip+0x2ed8],0x1        # 0x4060f0
  403218:	mov    QWORD PTR [r13+0x0],0x0
  403220:	lea    ebx,[rbp+0x1]
  403223:	jmp    0x402f75
  403228:	lea    rsi,[rip+0x3e78]        # 0x4070a7
  40322f:	mov    ecx,0xb
  403234:	mov    rdi,rbx
  403237:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403239:	jne    0x403628
  40323f:	mov    DWORD PTR [rip+0x9e0b],0x1        # 0x40d054
  403249:	mov    QWORD PTR [r13+0x0],0x0
  403251:	lea    ebx,[rbp+0x1]
  403254:	jmp    0x402f75
  403259:	nop    DWORD PTR [rax+0x0]
  403260:	call   0x401738
  403265:	cmp    eax,0x10a
  40326a:	je     0x403460
  403270:	xor    edi,edi
  403272:	xor    r12d,r12d
  403275:	mov    QWORD PTR [rsp+0x40],0x0
  40327e:	mov    ebp,0x10a
  403283:	mov    rcx,QWORD PTR [rsp+0x40]
  403288:	call   0x4017b0
  40328d:	test   r12,r12
  403290:	jne    0x403452
  403296:	mov    rcx,r12
  403299:	mov    rbx,rdi
  40329c:	call   0x4017b0
  4032a1:	test   rdi,rdi
  4032a4:	je     0x4032cc
  4032a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032b0:	mov    rsi,QWORD PTR [rbx]
  4032b3:	mov    rcx,QWORD PTR [rsi]
  4032b6:	call   0x4017b0
  4032bb:	mov    rcx,rsi
  4032be:	call   0x4017b0
  4032c3:	mov    rbx,QWORD PTR [rbx+0x8]
  4032c7:	test   rbx,rbx
  4032ca:	jne    0x4032b0
  4032cc:	mov    rcx,rdi
  4032cf:	call   0x401778
  4032d4:	cmp    ebp,0x100
  4032da:	je     0x403199
  4032e0:	lea    r8,[rip+0x54ea]        # 0x4087d1
  4032e7:	mov    DWORD PTR [rsp+0x30],0x1
  4032ef:	mov    QWORD PTR [rsp+0x28],0x0
  4032f8:	mov    QWORD PTR [rsp+0x20],0x0
  403301:	xor    r9d,r9d
  403304:	mov    edx,ebp
  403306:	mov    rcx,r15
  403309:	call   0x401718
  40330e:	or     DWORD PTR [rip+0x9d33],0x1        # 0x40d048
  403315:	mov    ecx,DWORD PTR [rsp+0x48]
  403319:	call   0x402d20
  40331e:	mov    rax,QWORD PTR [rsp+0x50]
  403323:	mov    rax,QWORD PTR [rax+0x8]
  403327:	test   rax,rax
  40332a:	mov    QWORD PTR [rsp+0x50],rax
  40332f:	jne    0x403124
  403335:	mov    r10d,DWORD PTR [rip+0x9d20]        # 0x40d05c
  40333c:	test   r10d,r10d
  40333f:	jne    0x40385d
  403345:	mov    rcx,QWORD PTR [rip+0x9d14]        # 0x40d060
  40334c:	lea    rdx,[rip+0x4061]        # 0x4073b4
  403353:	call   0x4017b8
  403358:	mov    rcx,QWORD PTR [rsp+0x60]
  40335d:	call   0x401710
  403362:	mov    rcx,r15
  403365:	call   0x401740
  40336a:	mov    rcx,QWORD PTR [rip+0x9cf7]        # 0x40d068
  403371:	lea    rdx,[rip+0xffffffffffffe1b8]        # 0x401530
  403378:	xor    r8d,r8d
  40337b:	call   0x4017a0
  403380:	mov    rcx,QWORD PTR [rip+0x9ce1]        # 0x40d068
  403387:	call   0x4017a8
  40338c:	mov    eax,DWORD PTR [rip+0x9cb6]        # 0x40d048
  403392:	add    rsp,0x138
  403399:	pop    rbx
  40339a:	pop    rsi
  40339b:	pop    rdi
  40339c:	pop    rbp
  40339d:	pop    r12
  40339f:	pop    r13
  4033a1:	pop    r14
  4033a3:	pop    r15
  4033a5:	ret    
  4033a6:	lea    rdx,[rip+0x6253]        # 0x409600
  4033ad:	mov    eax,ebx
  4033af:	shl    rax,0x5
  4033b3:	add    rax,rdx
  4033b6:	test   rdi,rdi
  4033b9:	mov    rdx,QWORD PTR [rax+0x8]
  4033bd:	mov    QWORD PTR [r12+0x8],rdx
  4033c2:	mov    rdx,QWORD PTR [rax+0x10]
  4033c6:	mov    rax,QWORD PTR [rax+0x18]
  4033ca:	mov    QWORD PTR [r12+0x10],rdx
  4033cf:	mov    QWORD PTR [r12+0x18],rax
  4033d4:	je     0x4048ef
  4033da:	mov    rsi,QWORD PTR [rdi]
  4033dd:	test   rsi,rsi
  4033e0:	je     0x403ec4
  4033e6:	mov    rbp,rdi
  4033e9:	nop    DWORD PTR [rax+0x0]
  4033f0:	mov    rbx,QWORD PTR [rsi]
  4033f3:	lea    r14,[rip+0x5ac6]        # 0x408ec0
  4033fa:	xor    r13d,r13d
  4033fd:	nop    DWORD PTR [rax]
  403400:	mov    rcx,QWORD PTR [r14]
  403403:	mov    rdx,rbx
  403406:	call   0x402d48
  40340b:	test   eax,eax
  40340d:	je     0x403e60
  403413:	add    r13d,0x1
  403417:	add    r14,0x40
  40341b:	cmp    r13d,0x16
  40341f:	jne    0x403400
  403421:	lea    r8,[rip+0x53e8]        # 0x408810
  403428:	lea    rcx,[rip+0x3c01]        # 0x407030
  40342f:	mov    r9,rbx
  403432:	mov    edx,0x10
  403437:	call   0x401770
  40343c:	or     DWORD PTR [rip+0x9c05],0x1        # 0x40d048
  403443:	mov    rcx,QWORD PTR [rsp+0x40]
  403448:	mov    ebp,0x100
  40344d:	call   0x4017b0
  403452:	mov    rcx,QWORD PTR [r12]
  403456:	call   0x4017b0
  40345b:	jmp    0x403296
  403460:	mov    rbx,QWORD PTR [r15+0x30]
  403464:	mov    ecx,0x20
  403469:	xor    edi,edi
  40346b:	call   0x401758
  403470:	mov    r12,rax
  403473:	mov    ebp,0x3a
  403478:	mov    rcx,rbx
  40347b:	call   0x4016e0
  403480:	mov    rdx,QWORD PTR [r15+0x10]
  403484:	mov    r8d,DWORD PTR [r15+0x38]
  403488:	lea    rcx,[rip+0x4bd8]        # 0x408067
  40348f:	mov    QWORD PTR [r12],rax
  403493:	call   0x4016d8
  403498:	mov    rcx,r15
  40349b:	mov    QWORD PTR [rsp+0x40],rax
  4034a0:	call   0x401738
  4034a5:	cmp    eax,0x3a
  4034a8:	jne    0x403283
  4034ae:	mov    rcx,r15
  4034b1:	mov    bp,0x10a
  4034b5:	call   0x401738
  4034ba:	cmp    eax,0x10a
  4034bf:	jne    0x403283
  4034c5:	mov    rsi,QWORD PTR [r15+0x30]
  4034c9:	mov    ecx,0x40
  4034ce:	call   0x401758
  4034d3:	mov    rbx,rax
  4034d6:	mov    rcx,rsi
  4034d9:	call   0x4016e0
  4034de:	mov    rdx,rbx
  4034e1:	mov    QWORD PTR [rbx],rax
  4034e4:	xor    ecx,ecx
  4034e6:	call   0x401780
  4034eb:	mov    rdi,rax
  4034ee:	jmp    0x403532
  4034f0:	call   0x401738
  4034f5:	mov    rcx,r15
  4034f8:	call   0x401738
  4034fd:	cmp    eax,0x10a
  403502:	jne    0x40485a
  403508:	mov    rsi,QWORD PTR [r15+0x30]
  40350c:	mov    ecx,0x40
  403511:	call   0x401758
  403516:	mov    rbx,rax
  403519:	mov    rcx,rsi
  40351c:	call   0x4016e0
  403521:	mov    rcx,rdi
  403524:	mov    QWORD PTR [rbx],rax
  403527:	mov    rdx,rbx
  40352a:	call   0x401780
  40352f:	mov    rdi,rax
  403532:	mov    rcx,r15
  403535:	call   0x401720
  40353a:	cmp    eax,0x2c
  40353d:	mov    rcx,r15
  403540:	je     0x4034f0
  403542:	call   0x401738
  403547:	cmp    eax,0xa
  40354a:	mov    ebp,0xa
  40354f:	jne    0x403283
  403555:	mov    rax,QWORD PTR [r12]
  403559:	lea    rsi,[rip+0x60a0]        # 0x409600
  403560:	xor    ebx,ebx
  403562:	mov    QWORD PTR [rsp+0x58],rax
  403567:	mov    rbp,rax
  40356a:	nop    WORD PTR [rax+rax*1+0x0]
  403570:	mov    rcx,QWORD PTR [rsi]
  403573:	mov    rdx,rbp
  403576:	call   0x402d48
  40357b:	test   eax,eax
  40357d:	je     0x4033a6
  403583:	add    ebx,0x1
  403586:	add    rsi,0x20
  40358a:	cmp    ebx,0x16
  40358d:	jne    0x403570
  40358f:	mov    r9,QWORD PTR [rsp+0x58]
  403594:	lea    r8,[rip+0x5275]        # 0x408810
  40359b:	lea    rcx,[rip+0x3a8e]        # 0x407030
  4035a2:	mov    edx,0x10
  4035a7:	mov    ebp,0x100
  4035ac:	call   0x401770
  4035b1:	mov    rcx,QWORD PTR [rsp+0x40]
  4035b6:	or     DWORD PTR [rip+0x9a8b],0x1        # 0x40d048
  4035bd:	call   0x4017b0
  4035c2:	mov    rcx,QWORD PTR [r12]
  4035c6:	call   0x4017b0
  4035cb:	jmp    0x403296
  4035d0:	xor    r8d,r8d
  4035d3:	xor    edx,edx
  4035d5:	mov    rcx,rbx
  4035d8:	call   0x401750
  4035dd:	mov    DWORD PTR [rsp+0x48],eax
  4035e1:	mov    r9d,DWORD PTR [rsp+0x48]
  4035e6:	test   r9d,r9d
  4035e9:	jns    0x40315c
  4035ef:	call   QWORD PTR [rip+0xaf3b]        # 0x40e530
  4035f5:	mov    ecx,DWORD PTR [rax]
  4035f7:	call   0x4016d0
  4035fc:	lea    r8,[rip+0x4a4c]        # 0x40804f
  403603:	lea    rcx,[rip+0x3a26]        # 0x407030
  40360a:	mov    QWORD PTR [rsp+0x20],rax
  40360f:	mov    r9,rbx
  403612:	mov    edx,0x10
  403617:	call   0x401770
  40361c:	or     DWORD PTR [rip+0x9a25],0x1        # 0x40d048
  403623:	jmp    0x40331e
  403628:	lea    rsi,[rip+0x3a83]        # 0x4070b2
  40362f:	mov    ecx,0x15
  403634:	mov    rdi,rbx
  403637:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403639:	je     0x4037dc
  40363f:	lea    rcx,[rip+0x3a81]        # 0x4070c7
  403646:	mov    rdx,rbx
  403649:	mov    QWORD PTR [rsp+0x58],r11
  40364e:	mov    QWORD PTR [rsp+0x50],r9
  403653:	mov    QWORD PTR [rsp+0x48],r10
  403658:	call   0x402d48
  40365d:	test   eax,eax
  40365f:	mov    r10,QWORD PTR [rsp+0x48]
  403664:	mov    r9,QWORD PTR [rsp+0x50]
  403669:	mov    r11,QWORD PTR [rsp+0x58]
  40366e:	je     0x403825
  403674:	lea    rcx,[rip+0x3a55]        # 0x4070d0
  40367b:	mov    r8d,0x9
  403681:	mov    rdx,rbx
  403684:	call   0x402d38
  403689:	test   eax,eax
  40368b:	mov    r10,QWORD PTR [rsp+0x48]
  403690:	mov    r9,QWORD PTR [rsp+0x50]
  403695:	mov    r11,QWORD PTR [rsp+0x58]
  40369a:	je     0x403825
  4036a0:	lea    rcx,[rip+0x3a33]        # 0x4070da
  4036a7:	mov    rdx,rbx
  4036aa:	mov    QWORD PTR [rsp+0x58],r11
  4036af:	mov    QWORD PTR [rsp+0x50],r9
  4036b4:	mov    QWORD PTR [rsp+0x48],r10
  4036b9:	call   0x402d48
  4036be:	test   eax,eax
  4036c0:	mov    r10,QWORD PTR [rsp+0x48]
  4036c5:	mov    r9,QWORD PTR [rsp+0x50]
  4036ca:	mov    r11,QWORD PTR [rsp+0x58]
  4036cf:	je     0x404ea1
  4036d5:	lea    rcx,[rip+0x3cb6]        # 0x407392
  4036dc:	mov    rdx,rbx
  4036df:	mov    QWORD PTR [rsp+0x58],r11
  4036e4:	mov    QWORD PTR [rsp+0x50],r9
  4036e9:	mov    QWORD PTR [rsp+0x48],r10
  4036ee:	call   0x402d48
  4036f3:	test   eax,eax
  4036f5:	je     0x404ea1
  4036fb:	lea    rcx,[rip+0x3c93]        # 0x407395
  403702:	mov    rdx,rbx
  403705:	call   0x402d48
  40370a:	test   eax,eax
  40370c:	je     0x404ea1
  403712:	lea    rcx,[rip+0x3c83]        # 0x40739c
  403719:	mov    rdx,rbx
  40371c:	call   0x402d48
  403721:	test   eax,eax
  403723:	mov    r10,QWORD PTR [rsp+0x48]
  403728:	mov    r9,QWORD PTR [rsp+0x50]
  40372d:	mov    r11,QWORD PTR [rsp+0x58]
  403732:	je     0x4051fe
  403738:	lea    rcx,[rip+0x3d82]        # 0x4074c1
  40373f:	mov    rdx,rbx
  403742:	mov    QWORD PTR [rsp+0x58],r11
  403747:	mov    QWORD PTR [rsp+0x50],r9
  40374c:	mov    QWORD PTR [rsp+0x48],r10
  403751:	call   0x402d48
  403756:	test   eax,eax
  403758:	je     0x4051fe
  40375e:	lea    rdx,[rip+0x3d66]        # 0x4074cb
  403765:	mov    rcx,rbx
  403768:	lea    ebx,[rbp+0x1]
  40376b:	call   0x402d48
  403770:	test   eax,eax
  403772:	mov    r10,QWORD PTR [rsp+0x48]
  403777:	mov    r9,QWORD PTR [rsp+0x50]
  40377c:	mov    r11,QWORD PTR [rsp+0x58]
  403781:	jne    0x402f75
  403787:	mov    ecx,0x5
  40378c:	call   0x401768
  403791:	or     eax,0x18
  403794:	mov    ecx,eax
  403796:	call   0x401768
  40379b:	mov    QWORD PTR [r13+0x0],0x0
  4037a3:	mov    r11,QWORD PTR [rsp+0x58]
  4037a8:	mov    r9,QWORD PTR [rsp+0x50]
  4037ad:	mov    r10,QWORD PTR [rsp+0x48]
  4037b2:	jmp    0x402f75
  4037b7:	cmp    DWORD PTR [rip+0x2932],0x0        # 0x4060f0
  4037be:	jne    0x403e09
  4037c4:	mov    rcx,QWORD PTR [rip+0x9895]        # 0x40d060
  4037cb:	lea    rdx,[rip+0x3d67]        # 0x407539
  4037d2:	call   0x4017b8
  4037d7:	jmp    0x403101
  4037dc:	mov    DWORD PTR [rip+0x986a],0x1        # 0x40d050
  4037e6:	mov    QWORD PTR [r13+0x0],0x0
  4037ee:	lea    ebx,[rbp+0x1]
  4037f1:	jmp    0x402f75
  4037f6:	cmp    DWORD PTR [rip+0x28f3],0x0        # 0x4060f0
  4037fd:	je     0x403101
  403803:	mov    rcx,QWORD PTR [rip+0x9856]        # 0x40d060
  40380a:	lea    rdx,[rip+0x3d0d]        # 0x40751e
  403811:	call   0x4017b8
  403816:	cmp    DWORD PTR [rip+0x983f],0x0        # 0x40d05c
  40381d:	je     0x403101
  403823:	jmp    0x4037c4
  403825:	cmp    BYTE PTR [rbx+0x8],0x3d
  403829:	je     0x404939
  40382f:	lea    ebx,[rbp+0x1]
  403832:	cmp    r14d,ebx
  403835:	jbe    0x403850
  403837:	mov    rax,QWORD PTR [r15+rbx*8]
  40383b:	mov    r12,rbx
  40383e:	lea    ebx,[rbp+0x2]
  403841:	mov    QWORD PTR [r13+0x0],0x0
  403849:	mov    QWORD PTR [rip+0x28a8],rax        # 0x4060f8
  403850:	mov    QWORD PTR [r15+r12*8],0x0
  403858:	jmp    0x402f75
  40385d:	mov    rcx,QWORD PTR [rip+0x97fc]        # 0x40d060
  403864:	lea    rdx,[rip+0x4f70]        # 0x4087db
  40386b:	call   0x4017b8
  403870:	cmp    DWORD PTR [rip+0x2879],0x0        # 0x4060f0
  403877:	je     0x403345
  40387d:	mov    r8,QWORD PTR [rip+0x2874]        # 0x4060f8
  403884:	mov    rcx,QWORD PTR [rip+0x97d5]        # 0x40d060
  40388b:	lea    rdx,[rip+0x4f5e]        # 0x4087f0
  403892:	call   0x4017b8
  403897:	jmp    0x403345
  40389c:	mov    rdx,QWORD PTR [rip+0x97bd]        # 0x40d060
  4038a3:	mov    ecx,0xa
  4038a8:	call   0x402d80
  4038ad:	mov    r9,QWORD PTR [rip+0x97ac]        # 0x40d060
  4038b4:	lea    rcx,[rip+0x3c8d]        # 0x407548
  4038bb:	mov    r8d,0x16
  4038c1:	mov    edx,0x1
  4038c6:	call   0x402d70
  4038cb:	mov    r9,QWORD PTR [rip+0x978e]        # 0x40d060
  4038d2:	lea    rcx,[rip+0x3c87]        # 0x407560
  4038d9:	mov    r8d,0x41
  4038df:	mov    edx,0x1
  4038e4:	call   0x402d70
  4038e9:	mov    r9,QWORD PTR [rip+0x9770]        # 0x40d060
  4038f0:	lea    rcx,[rip+0x3cb1]        # 0x4075a8
  4038f7:	mov    r8d,0x3f
  4038fd:	mov    edx,0x1
  403902:	call   0x402d70
  403907:	mov    r9,QWORD PTR [rip+0x9752]        # 0x40d060
  40390e:	lea    rcx,[rip+0x3cd3]        # 0x4075e8
  403915:	mov    r8d,0x3f
  40391b:	mov    edx,0x1
  403920:	call   0x402d70
  403925:	mov    r9,QWORD PTR [rip+0x9734]        # 0x40d060
  40392c:	lea    rcx,[rip+0x3cf5]        # 0x407628
  403933:	mov    r8d,0x3d
  403939:	mov    edx,0x1
  40393e:	call   0x402d70
  403943:	mov    r9,QWORD PTR [rip+0x9716]        # 0x40d060
  40394a:	lea    rcx,[rip+0x3d17]        # 0x407668
  403951:	mov    r8d,0x3e
  403957:	mov    edx,0x1
  40395c:	call   0x402d70
  403961:	mov    r9,QWORD PTR [rip+0x96f8]        # 0x40d060
  403968:	lea    rcx,[rip+0x3d39]        # 0x4076a8
  40396f:	mov    r8d,0x3e
  403975:	mov    edx,0x1
  40397a:	call   0x402d70
  40397f:	mov    r9,QWORD PTR [rip+0x96da]        # 0x40d060
  403986:	lea    rcx,[rip+0x3d5b]        # 0x4076e8
  40398d:	mov    r8d,0x3f
  403993:	mov    edx,0x1
  403998:	call   0x402d70
  40399d:	mov    r9,QWORD PTR [rip+0x96bc]        # 0x40d060
  4039a4:	lea    rcx,[rip+0x3d7d]        # 0x407728
  4039ab:	mov    r8d,0x3f
  4039b1:	mov    edx,0x1
  4039b6:	call   0x402d70
  4039bb:	mov    r9,QWORD PTR [rip+0x969e]        # 0x40d060
  4039c2:	lea    rcx,[rip+0x3d9f]        # 0x407768
  4039c9:	mov    r8d,0x40
  4039cf:	mov    edx,0x1
  4039d4:	call   0x402d70
  4039d9:	mov    r9,QWORD PTR [rip+0x9680]        # 0x40d060
  4039e0:	lea    rcx,[rip+0x3dc9]        # 0x4077b0
  4039e7:	mov    r8d,0x3e
  4039ed:	mov    edx,0x1
  4039f2:	call   0x402d70
  4039f7:	mov    r9,QWORD PTR [rip+0x9662]        # 0x40d060
  4039fe:	lea    rcx,[rip+0x3deb]        # 0x4077f0
  403a05:	mov    r8d,0x3f
  403a0b:	mov    edx,0x1
  403a10:	call   0x402d70
  403a15:	mov    r9,QWORD PTR [rip+0x9644]        # 0x40d060
  403a1c:	lea    rcx,[rip+0x3e0d]        # 0x407830
  403a23:	mov    r8d,0x3f
  403a29:	mov    edx,0x1
  403a2e:	call   0x402d70
  403a33:	mov    r9,QWORD PTR [rip+0x9626]        # 0x40d060
  403a3a:	lea    rcx,[rip+0x3e2f]        # 0x407870
  403a41:	mov    r8d,0x40
  403a47:	mov    edx,0x1
  403a4c:	call   0x402d70
  403a51:	mov    r9,QWORD PTR [rip+0x9608]        # 0x40d060
  403a58:	lea    rcx,[rip+0x3e59]        # 0x4078b8
  403a5f:	mov    r8d,0x48
  403a65:	mov    edx,0x1
  403a6a:	call   0x402d70
  403a6f:	mov    r9,QWORD PTR [rip+0x95ea]        # 0x40d060
  403a76:	lea    rcx,[rip+0x3e8b]        # 0x407908
  403a7d:	mov    r8d,0x3f
  403a83:	mov    edx,0x1
  403a88:	call   0x402d70
  403a8d:	mov    r9,QWORD PTR [rip+0x95cc]        # 0x40d060
  403a94:	lea    rcx,[rip+0x3ead]        # 0x407948
  403a9b:	mov    r8d,0x3f
  403aa1:	mov    edx,0x1
  403aa6:	call   0x402d70
  403aab:	mov    r9,QWORD PTR [rip+0x95ae]        # 0x40d060
  403ab2:	lea    rcx,[rip+0x3ecf]        # 0x407988
  403ab9:	mov    r8d,0x41
  403abf:	mov    edx,0x1
  403ac4:	call   0x402d70
  403ac9:	mov    r9,QWORD PTR [rip+0x9590]        # 0x40d060
  403ad0:	lea    rcx,[rip+0x3ef9]        # 0x4079d0
  403ad7:	mov    r8d,0x40
  403add:	mov    edx,0x1
  403ae2:	call   0x402d70
  403ae7:	mov    r9,QWORD PTR [rip+0x9572]        # 0x40d060
  403aee:	lea    rcx,[rip+0x3f23]        # 0x407a18
  403af5:	mov    r8d,0x41
  403afb:	mov    edx,0x1
  403b00:	call   0x402d70
  403b05:	mov    r9,QWORD PTR [rip+0x9554]        # 0x40d060
  403b0c:	lea    rcx,[rip+0x3f47]        # 0x407a5a
  403b13:	mov    r8d,0x1c
  403b19:	mov    edx,0x1
  403b1e:	call   0x402d70
  403b23:	mov    r9,QWORD PTR [rip+0x9536]        # 0x40d060
  403b2a:	lea    rcx,[rip+0x3f47]        # 0x407a78
  403b31:	mov    r8d,0x4b
  403b37:	mov    edx,0x1
  403b3c:	call   0x402d70
  403b41:	mov    r9,QWORD PTR [rip+0x9518]        # 0x40d060
  403b48:	lea    rcx,[rip+0x3f79]        # 0x407ac8
  403b4f:	mov    r8d,0x4a
  403b55:	mov    edx,0x1
  403b5a:	call   0x402d70
  403b5f:	mov    r9,QWORD PTR [rip+0x94fa]        # 0x40d060
  403b66:	lea    rcx,[rip+0x3fab]        # 0x407b18
  403b6d:	mov    r8d,0x26
  403b73:	mov    edx,0x1
  403b78:	call   0x402d70
  403b7d:	mov    r9,QWORD PTR [rip+0x94dc]        # 0x40d060
  403b84:	lea    rcx,[rip+0x3fb4]        # 0x407b3f
  403b8b:	mov    r8d,0x4
  403b91:	mov    edx,0x1
  403b96:	call   0x402d70
  403b9b:	mov    r9,QWORD PTR [rip+0x94be]        # 0x40d060
  403ba2:	lea    rcx,[rip+0x3f9f]        # 0x407b48
  403ba9:	mov    r8d,0x3c
  403baf:	mov    edx,0x1
  403bb4:	call   0x402d70
  403bb9:	mov    r9,QWORD PTR [rip+0x94a0]        # 0x40d060
  403bc0:	lea    rcx,[rip+0x3fc1]        # 0x407b88
  403bc7:	mov    r8d,0x3c
  403bcd:	mov    edx,0x1
  403bd2:	call   0x402d70
  403bd7:	mov    r9,QWORD PTR [rip+0x9482]        # 0x40d060
  403bde:	lea    rcx,[rip+0x3fe3]        # 0x407bc8
  403be5:	mov    r8d,0x3d
  403beb:	mov    edx,0x1
  403bf0:	call   0x402d70
  403bf5:	mov    r9,QWORD PTR [rip+0x9464]        # 0x40d060
  403bfc:	lea    rcx,[rip+0x4005]        # 0x407c08
  403c03:	mov    r8d,0x3c
  403c09:	mov    edx,0x1
  403c0e:	call   0x402d70
  403c13:	mov    r9,QWORD PTR [rip+0x9446]        # 0x40d060
  403c1a:	lea    rcx,[rip+0x4027]        # 0x407c48
  403c21:	mov    r8d,0x3d
  403c27:	mov    edx,0x1
  403c2c:	call   0x402d70
  403c31:	mov    r9,QWORD PTR [rip+0x9428]        # 0x40d060
  403c38:	lea    rcx,[rip+0x4049]        # 0x407c88
  403c3f:	mov    r8d,0x3d
  403c45:	mov    edx,0x1
  403c4a:	call   0x402d70
  403c4f:	mov    r9,QWORD PTR [rip+0x940a]        # 0x40d060
  403c56:	lea    rcx,[rip+0x406b]        # 0x407cc8
  403c5d:	mov    r8d,0x3e
  403c63:	mov    edx,0x1
  403c68:	call   0x402d70
  403c6d:	mov    r9,QWORD PTR [rip+0x93ec]        # 0x40d060
  403c74:	lea    rcx,[rip+0x408d]        # 0x407d08
  403c7b:	mov    r8d,0x3e
  403c81:	mov    edx,0x1
  403c86:	call   0x402d70
  403c8b:	mov    r9,QWORD PTR [rip+0x93ce]        # 0x40d060
  403c92:	lea    rcx,[rip+0x40af]        # 0x407d48
  403c99:	mov    r8d,0x3f
  403c9f:	mov    edx,0x1
  403ca4:	call   0x402d70
  403ca9:	mov    r9,QWORD PTR [rip+0x93b0]        # 0x40d060
  403cb0:	lea    rcx,[rip+0x40d1]        # 0x407d88
  403cb7:	mov    r8d,0x3d
  403cbd:	mov    edx,0x1
  403cc2:	call   0x402d70
  403cc7:	mov    r9,QWORD PTR [rip+0x9392]        # 0x40d060
  403cce:	lea    rcx,[rip+0x40f3]        # 0x407dc8
  403cd5:	mov    r8d,0x3e
  403cdb:	mov    edx,0x1
  403ce0:	call   0x402d70
  403ce5:	mov    r9,QWORD PTR [rip+0x9374]        # 0x40d060
  403cec:	lea    rcx,[rip+0x4115]        # 0x407e08
  403cf3:	mov    r8d,0x3e
  403cf9:	mov    edx,0x1
  403cfe:	call   0x402d70
  403d03:	mov    r9,QWORD PTR [rip+0x9356]        # 0x40d060
  403d0a:	lea    rcx,[rip+0x4137]        # 0x407e48
  403d11:	mov    r8d,0x3f
  403d17:	mov    edx,0x1
  403d1c:	call   0x402d70
  403d21:	mov    r9,QWORD PTR [rip+0x9338]        # 0x40d060
  403d28:	lea    rcx,[rip+0x4159]        # 0x407e88
  403d2f:	mov    r8d,0x40
  403d35:	mov    edx,0x1
  403d3a:	call   0x402d70
  403d3f:	mov    r9,QWORD PTR [rip+0x931a]        # 0x40d060
  403d46:	lea    rcx,[rip+0x4183]        # 0x407ed0
  403d4d:	mov    r8d,0x40
  403d53:	mov    edx,0x1
  403d58:	call   0x402d70
  403d5d:	mov    r9,QWORD PTR [rip+0x92fc]        # 0x40d060
  403d64:	lea    rcx,[rip+0x41ad]        # 0x407f18
  403d6b:	mov    r8d,0x40
  403d71:	mov    edx,0x1
  403d76:	call   0x402d70
  403d7b:	mov    r9,QWORD PTR [rip+0x92de]        # 0x40d060
  403d82:	lea    rcx,[rip+0x41d7]        # 0x407f60
  403d89:	mov    r8d,0x40
  403d8f:	mov    edx,0x1
  403d94:	call   0x402d70
  403d99:	mov    r9,QWORD PTR [rip+0x92c0]        # 0x40d060
  403da0:	lea    rcx,[rip+0x4201]        # 0x407fa8
  403da7:	mov    r8d,0x40
  403dad:	mov    edx,0x1
  403db2:	call   0x402d70
  403db7:	mov    r9,QWORD PTR [rip+0x92a2]        # 0x40d060
  403dbe:	lea    rcx,[rip+0x422b]        # 0x407ff0
  403dc5:	mov    r8d,0x40
  403dcb:	mov    edx,0x1
  403dd0:	call   0x402d70
  403dd5:	mov    r9,QWORD PTR [rip+0x9284]        # 0x40d060
  403ddc:	lea    rcx,[rip+0x424e]        # 0x408031
  403de3:	mov    r8d,0x1d
  403de9:	mov    edx,0x1
  403dee:	call   0x402d70
  403df3:	mov    rdx,QWORD PTR [rip+0x9266]        # 0x40d060
  403dfa:	mov    ecx,0xa
  403dff:	call   0x402d80
  403e04:	jmp    0x403111
  403e09:	mov    r8,QWORD PTR [rip+0x22e8]        # 0x4060f8
  403e10:	mov    rcx,QWORD PTR [rip+0x9249]        # 0x40d060
  403e17:	lea    rdx,[rip+0x36cb]        # 0x4074e9
  403e1e:	call   0x4017b8
  403e23:	mov    r8,QWORD PTR [rip+0x22ce]        # 0x4060f8
  403e2a:	mov    rcx,QWORD PTR [rip+0x922f]        # 0x40d060
  403e31:	lea    rdx,[rip+0x36cb]        # 0x407503
  403e38:	call   0x4017b8
  403e3d:	cmp    DWORD PTR [rip+0x9218],0x0        # 0x40d05c
  403e44:	je     0x4030f4
  403e4a:	cmp    DWORD PTR [rip+0x229f],0x0        # 0x4060f0
  403e51:	je     0x4037c4
  403e57:	jmp    0x403803
  403e5c:	nop    DWORD PTR [rax+0x0]
  403e60:	lea    rax,[rip+0x5059]        # 0x408ec0
  403e67:	shl    r13,0x6
  403e6b:	mov    rbp,QWORD PTR [rbp+0x8]
  403e6f:	add    rax,r13
  403e72:	mov    rdx,QWORD PTR [rax+0x8]
  403e76:	test   rbp,rbp
  403e79:	mov    QWORD PTR [rsi+0x8],rdx
  403e7d:	mov    rdx,QWORD PTR [rax+0x10]
  403e81:	mov    QWORD PTR [rsi+0x10],rdx
  403e85:	mov    rdx,QWORD PTR [rax+0x18]
  403e89:	mov    QWORD PTR [rsi+0x18],rdx
  403e8d:	mov    rdx,QWORD PTR [rax+0x20]
  403e91:	mov    QWORD PTR [rsi+0x20],rdx
  403e95:	mov    rdx,QWORD PTR [rax+0x28]
  403e99:	mov    QWORD PTR [rsi+0x28],rdx
  403e9d:	lea    rdx,[rax+0x30]
  403ea1:	mov    rax,QWORD PTR [rax+0x30]
  403ea5:	mov    QWORD PTR [rsi+0x30],rax
  403ea9:	mov    eax,DWORD PTR [rdx+0x8]
  403eac:	mov    DWORD PTR [rsi+0x38],eax
  403eaf:	mov    eax,DWORD PTR [rdx+0xc]
  403eb2:	mov    DWORD PTR [rsi+0x3c],eax
  403eb5:	je     0x403ee8
  403eb7:	mov    rsi,QWORD PTR [rbp+0x0]
  403ebb:	test   rsi,rsi
  403ebe:	jne    0x4033f0
  403ec4:	lea    r8,[rip+0x4956]        # 0x408821
  403ecb:	lea    rdx,[rip+0x556e]        # 0x409440
  403ed2:	lea    rcx,[rip+0x3157]        # 0x407030
  403ed9:	call   0x401748
  403ede:	mov    rax,QWORD PTR ds:0x0
  403ee6:	ud2    
  403ee8:	mov    rcx,QWORD PTR [rsp+0x58]
  403eed:	lea    rdx,[rip+0x4179]        # 0x40806d
  403ef4:	xor    r8d,r8d
  403ef7:	mov    rbp,rdi
  403efa:	call   0x4016e8
  403eff:	mov    rcx,QWORD PTR [r12+0x8]
  403f04:	lea    rdx,[rip+0x4162]        # 0x40806d
  403f0b:	xor    r8d,r8d
  403f0e:	mov    r13,rax
  403f11:	call   0x4016e8
  403f16:	mov    r14,rax
  403f19:	nop    DWORD PTR [rax+0x0]
  403f20:	mov    rsi,QWORD PTR [rbp+0x0]
  403f24:	lea    rdx,[rip+0x4142]        # 0x40806d
  403f2b:	xor    r9d,r9d
  403f2e:	mov    rcx,r14
  403f31:	mov    r8,QWORD PTR [rsi+0x8]
  403f35:	call   0x4016e8
  403f3a:	mov    rcx,r14
  403f3d:	mov    rbx,rax
  403f40:	call   0x4017b0
  403f45:	mov    r8,QWORD PTR [rsi]
  403f48:	lea    rdx,[rip+0x411e]        # 0x40806d
  403f4f:	xor    r9d,r9d
  403f52:	mov    rcx,r13
  403f55:	mov    r14,rbx
  403f58:	call   0x4016e8
  403f5d:	mov    rcx,r13
  403f60:	mov    rsi,rax
  403f63:	call   0x4017b0
  403f68:	mov    rbp,QWORD PTR [rbp+0x8]
  403f6c:	mov    r13,rsi
  403f6f:	test   rbp,rbp
  403f72:	jne    0x403f20
  403f74:	mov    r8,QWORD PTR [r12]
  403f78:	mov    rcx,QWORD PTR [rip+0x90e1]        # 0x40d060
  403f7f:	lea    rdx,[rip+0x40e9]        # 0x40806f
  403f86:	mov    rbp,rdi
  403f89:	call   0x4017b8
  403f8e:	xchg   ax,ax
  403f90:	cmp    QWORD PTR [rbp+0x10],0x1
  403f95:	mov    rdx,QWORD PTR [rbp+0x0]
  403f99:	mov    rcx,QWORD PTR [rip+0x90c0]        # 0x40d060
  403fa0:	mov    r9,QWORD PTR [rdx]
  403fa3:	lea    rdx,[rip+0x40cc]        # 0x408076
  403faa:	sbb    eax,eax
  403fac:	and    eax,0xe
  403faf:	lea    r8d,[rax+0x2c]
  403fb3:	call   0x4017b8
  403fb8:	mov    rbp,QWORD PTR [rbp+0x8]
  403fbc:	test   rbp,rbp
  403fbf:	jne    0x403f90
  403fc1:	mov    r8d,DWORD PTR [rip+0x9084]        # 0x40d04c
  403fc8:	test   r8d,r8d
  403fcb:	je     0x40407b
  403fd1:	mov    rcx,QWORD PTR [rip+0x9088]        # 0x40d060
  403fd8:	lea    rdx,[rip+0x3b60]        # 0x407b3f
  403fdf:	call   0x4017b8
  403fe4:	mov    rcx,QWORD PTR [rip+0x210d]        # 0x4060f8
  403feb:	lea    rdx,[rip+0x407b]        # 0x40806d
  403ff2:	xor    r9d,r9d
  403ff5:	mov    r8,rbx
  403ff8:	call   0x4016e8
  403ffd:	mov    rcx,QWORD PTR [rip+0x9064]        # 0x40d068
  404004:	mov    rdx,rax
  404007:	mov    rbp,rax
  40400a:	call   0x401790
  40400f:	test   rax,rax
  404012:	je     0x404098
  404018:	mov    rcx,rbp
  40401b:	call   0x4017b0
  404020:	mov    rcx,QWORD PTR [rip+0x20d1]        # 0x4060f8
  404027:	lea    rdx,[rip+0x403f]        # 0x40806d
  40402e:	xor    r9d,r9d
  404031:	mov    r8,rsi
  404034:	call   0x4016e8
  404039:	mov    ecx,DWORD PTR [rip+0x901d]        # 0x40d05c
  40403f:	mov    rbp,rax
  404042:	test   ecx,ecx
  404044:	je     0x40405e
  404046:	mov    rcx,QWORD PTR [rip+0x901b]        # 0x40d068
  40404d:	mov    rdx,rax
  404050:	call   0x401790
  404055:	test   rax,rax
  404058:	je     0x40494c
  40405e:	mov    rcx,rbp
  404061:	call   0x4017b0
  404066:	mov    rcx,rsi
  404069:	call   0x4017b0
  40406e:	mov    rcx,rbx
  404071:	call   0x4017b0
  404076:	jmp    0x403443
  40407b:	mov    r8,QWORD PTR [rsp+0x40]
  404080:	mov    rcx,QWORD PTR [rip+0x8fd9]        # 0x40d060
  404087:	lea    rdx,[rip+0x3fed]        # 0x40807b
  40408e:	call   0x4017b8
  404093:	jmp    0x403fd1
  404098:	mov    rcx,QWORD PTR [rip+0x8fc9]        # 0x40d068
  40409f:	mov    r8,rbp
  4040a2:	mov    rdx,rbp
  4040a5:	call   0x401798
  4040aa:	cmp    DWORD PTR [rip+0x203f],0x0        # 0x4060f0
  4040b1:	mov    DWORD PTR [rsp+0x58],0x0
  4040b9:	jne    0x404864
  4040bf:	mov    r13d,DWORD PTR [rsp+0x58]
  4040c4:	xor    r13d,0x1
  4040c8:	and    r13b,0x1
  4040cc:	je     0x4041f0
  4040d2:	cmp    DWORD PTR [rip+0x8f83],0x0        # 0x40d05c
  4040d9:	je     0x4041de
  4040df:	cmp    DWORD PTR [rip+0x8f6e],0x0        # 0x40d054
  4040e6:	lea    rax,[rip+0x2f62]        # 0x40704f
  4040ed:	mov    rcx,QWORD PTR [rip+0x8f6c]        # 0x40d060
  4040f4:	lea    rdx,[rip+0x2f65]        # 0x407060
  4040fb:	cmovne rdx,rax
  4040ff:	call   0x4017b8
  404104:	mov    rcx,QWORD PTR [rip+0x8f55]        # 0x40d060
  40410b:	lea    rdx,[rip+0x3f97]        # 0x4080a9
  404112:	mov    ebp,eax
  404114:	call   0x4017b8
  404119:	mov    r8,QWORD PTR [rip+0x1fd8]        # 0x4060f8
  404120:	mov    rcx,QWORD PTR [rip+0x8f39]        # 0x40d060
  404127:	lea    rdx,[rip+0x3f81]        # 0x4080af
  40412e:	mov    r9,rbx
  404131:	add    ebp,eax
  404133:	call   0x4017b8
  404138:	mov    rcx,QWORD PTR [rip+0x8f21]        # 0x40d060
  40413f:	lea    rdx,[rip+0x3f71]        # 0x4080b7
  404146:	add    ebp,eax
  404148:	call   0x4017b8
  40414d:	mov    ecx,ebp
  40414f:	call   0x401550
  404154:	mov    rcx,QWORD PTR [rip+0x8f05]        # 0x40d060
  40415b:	lea    rdx,[rip+0x3f6e]        # 0x4080d0
  404162:	mov    r8,rax
  404165:	call   0x4017b8
  40416a:	mov    ecx,ebp
  40416c:	call   0x401550
  404171:	mov    rcx,QWORD PTR [rip+0x8ee8]        # 0x40d060
  404178:	lea    rdx,[rip+0x3f71]        # 0x4080f0
  40417f:	mov    r8,rax
  404182:	call   0x4017b8
  404187:	mov    ecx,ebp
  404189:	call   0x401550
  40418e:	mov    rcx,QWORD PTR [rip+0x8ecb]        # 0x40d060
  404195:	lea    rdx,[rip+0x3f7c]        # 0x408118
  40419c:	mov    r8,rax
  40419f:	call   0x4017b8
  4041a4:	mov    ecx,ebp
  4041a6:	call   0x401550
  4041ab:	mov    rcx,QWORD PTR [rip+0x8eae]        # 0x40d060
  4041b2:	lea    rdx,[rip+0x3f7f]        # 0x408138
  4041b9:	mov    r8,rax
  4041bc:	call   0x4017b8
  4041c1:	mov    ecx,ebp
  4041c3:	call   0x401550
  4041c8:	mov    rcx,QWORD PTR [rip+0x8e91]        # 0x40d060
  4041cf:	lea    rdx,[rip+0x3f8a]        # 0x408160
  4041d6:	mov    r8,rax
  4041d9:	call   0x4017b8
  4041de:	test   r13b,r13b
  4041e1:	je     0x4041f0
  4041e3:	cmp    DWORD PTR [rip+0x8e6e],0x0        # 0x40d058
  4041ea:	jne    0x4049f2
  4041f0:	cmp    DWORD PTR [rip+0x8e65],0x0        # 0x40d05c
  4041f7:	je     0x404343
  4041fd:	cmp    DWORD PTR [rsp+0x58],0x0
  404202:	je     0x404211
  404204:	cmp    DWORD PTR [rip+0x8e45],0x0        # 0x40d050
  40420b:	jne    0x404e61
  404211:	test   r13b,r13b
  404214:	je     0x404020
  40421a:	cmp    DWORD PTR [rip+0x8e2f],0x0        # 0x40d050
  404221:	je     0x404020
  404227:	cmp    DWORD PTR [rip+0x8e26],0x0        # 0x40d054
  40422e:	lea    rax,[rip+0x2e1a]        # 0x40704f
  404235:	mov    rcx,QWORD PTR [rip+0x8e24]        # 0x40d060
  40423c:	lea    rdx,[rip+0x2e1d]        # 0x407060
  404243:	cmovne rdx,rax
  404247:	call   0x4017b8
  40424c:	mov    rcx,QWORD PTR [rip+0x8e0d]        # 0x40d060
  404253:	lea    rdx,[rip+0x3e4f]        # 0x4080a9
  40425a:	mov    ebp,eax
  40425c:	call   0x4017b8
  404261:	mov    r8,QWORD PTR [rip+0x1e90]        # 0x4060f8
  404268:	mov    rcx,QWORD PTR [rip+0x8df1]        # 0x40d060
  40426f:	lea    rdx,[rip+0x4284]        # 0x4084fa
  404276:	mov    r9,rbx
  404279:	add    ebp,eax
  40427b:	call   0x4017b8
  404280:	mov    rcx,QWORD PTR [rip+0x8dd9]        # 0x40d060
  404287:	lea    rdx,[rip+0x3e29]        # 0x4080b7
  40428e:	add    ebp,eax
  404290:	call   0x4017b8
  404295:	mov    ecx,ebp
  404297:	call   0x401550
  40429c:	mov    rcx,QWORD PTR [rip+0x8dbd]        # 0x40d060
  4042a3:	lea    rdx,[rip+0x3e26]        # 0x4080d0
  4042aa:	mov    r8,rax
  4042ad:	call   0x4017b8
  4042b2:	mov    ecx,ebp
  4042b4:	call   0x401550
  4042b9:	mov    rcx,QWORD PTR [rip+0x8da0]        # 0x40d060
  4042c0:	lea    rdx,[rip+0x423c]        # 0x408503
  4042c7:	mov    r8,rax
  4042ca:	call   0x4017b8
  4042cf:	mov    ecx,ebp
  4042d1:	call   0x401550
  4042d6:	mov    rcx,QWORD PTR [rip+0x8d83]        # 0x40d060
  4042dd:	lea    rdx,[rip+0x423a]        # 0x40851e
  4042e4:	mov    r8,rax
  4042e7:	call   0x4017b8
  4042ec:	mov    ecx,ebp
  4042ee:	call   0x401550
  4042f3:	mov    rcx,QWORD PTR [rip+0x8d66]        # 0x40d060
  4042fa:	lea    rdx,[rip+0x4237]        # 0x408538
  404301:	mov    r8,rax
  404304:	call   0x4017b8
  404309:	mov    ecx,ebp
  40430b:	call   0x401550
  404310:	mov    rcx,QWORD PTR [rip+0x8d49]        # 0x40d060
  404317:	lea    rdx,[rip+0x4239]        # 0x408557
  40431e:	mov    r8,rax
  404321:	call   0x4017b8
  404326:	mov    ecx,ebp
  404328:	call   0x401550
  40432d:	mov    rcx,QWORD PTR [rip+0x8d2c]        # 0x40d060
  404334:	lea    rdx,[rip+0x423d]        # 0x408578
  40433b:	mov    r8,rax
  40433e:	call   0x4017b8
  404343:	cmp    DWORD PTR [rip+0x8d0e],0x0        # 0x40d058
  40434a:	je     0x404020
  404350:	cmp    DWORD PTR [rip+0x8cf9],0x0        # 0x40d050
  404357:	je     0x404020
  40435d:	test   r13b,r13b
  404360:	je     0x404020
  404366:	mov    rcx,QWORD PTR [rip+0x8cf3]        # 0x40d060
  40436d:	lea    rdx,[rip+0x3e0c]        # 0x408180
  404374:	call   0x4017b8
  404379:	mov    r8,QWORD PTR [rip+0x1d78]        # 0x4060f8
  404380:	mov    rcx,QWORD PTR [rip+0x8cd9]        # 0x40d060
  404387:	lea    rdx,[rip+0x416c]        # 0x4084fa
  40438e:	mov    r9,rbx
  404391:	call   0x4017b8
  404396:	mov    rcx,QWORD PTR [rip+0x8cc3]        # 0x40d060
  40439d:	lea    rdx,[rip+0x3d13]        # 0x4080b7
  4043a4:	mov    ebp,eax
  4043a6:	call   0x4017b8
  4043ab:	mov    ecx,ebp
  4043ad:	call   0x401550
  4043b2:	mov    rcx,QWORD PTR [rip+0x8ca7]        # 0x40d060
  4043b9:	lea    rdx,[rip+0x3d10]        # 0x4080d0
  4043c0:	mov    r8,rax
  4043c3:	call   0x4017b8
  4043c8:	mov    ecx,ebp
  4043ca:	call   0x401550
  4043cf:	mov    rcx,QWORD PTR [rip+0x8c8a]        # 0x40d060
  4043d6:	lea    rdx,[rip+0x4126]        # 0x408503
  4043dd:	mov    r8,rax
  4043e0:	call   0x4017b8
  4043e5:	mov    ecx,ebp
  4043e7:	call   0x401550
  4043ec:	mov    rcx,QWORD PTR [rip+0x8c6d]        # 0x40d060
  4043f3:	lea    rdx,[rip+0x4124]        # 0x40851e
  4043fa:	mov    r8,rax
  4043fd:	call   0x4017b8
  404402:	mov    ecx,ebp
  404404:	call   0x401550
  404409:	mov    rcx,QWORD PTR [rip+0x8c50]        # 0x40d060
  404410:	lea    rdx,[rip+0x4121]        # 0x408538
  404417:	mov    r8,rax
  40441a:	call   0x4017b8
  40441f:	mov    ecx,ebp
  404421:	call   0x401550
  404426:	mov    rcx,QWORD PTR [rip+0x8c33]        # 0x40d060
  40442d:	lea    rdx,[rip+0x4123]        # 0x408557
  404434:	mov    r8,rax
  404437:	call   0x4017b8
  40443c:	mov    ecx,ebp
  40443e:	call   0x401550
  404443:	mov    rcx,QWORD PTR [rip+0x8c16]        # 0x40d060
  40444a:	lea    rdx,[rip+0x4146]        # 0x408597
  404451:	mov    r8,rax
  404454:	call   0x4017b8
  404459:	mov    rcx,QWORD PTR [rip+0x8c00]        # 0x40d060
  404460:	lea    rdx,[rip+0x3da0]        # 0x408207
  404467:	call   0x4017b8
  40446c:	mov    r8,QWORD PTR [r12+0x10]
  404471:	mov    rcx,QWORD PTR [rip+0x8be8]        # 0x40d060
  404478:	lea    rdx,[rip+0x3d91]        # 0x408210
  40447f:	mov    r9,rbx
  404482:	call   0x4017b8
  404487:	lea    rcx,[rip+0x3da4]        # 0x408232
  40448e:	mov    ebp,eax
  404490:	call   0x4015b0
  404495:	mov    rcx,QWORD PTR [rip+0x8bc4]        # 0x40d060
  40449c:	lea    rdx,[rip+0x4112]        # 0x4085b5
  4044a3:	mov    r8,rax
  4044a6:	call   0x4017b8
  4044ab:	test   rdi,rdi
  4044ae:	je     0x40518c
  4044b4:	mov    rax,rsi
  4044b7:	xor    r13d,r13d
  4044ba:	mov    rsi,rbx
  4044bd:	mov    r14,rdi
  4044c0:	mov    rbx,rax
  4044c3:	mov    rax,QWORD PTR [r14]
  4044c6:	cmp    QWORD PTR [rax+0x20],0x0
  4044cb:	je     0x40450f
  4044cd:	mov    rcx,QWORD PTR [rax+0x10]
  4044d1:	lea    edx,[r13+0x1]
  4044d5:	mov    DWORD PTR [rsp+0x58],edx
  4044d9:	call   0x4015b0
  4044de:	mov    ecx,ebp
  4044e0:	mov    QWORD PTR [rsp+0x68],rax
  4044e5:	call   0x401550
  4044ea:	mov    r9,QWORD PTR [rsp+0x68]
  4044ef:	mov    rcx,QWORD PTR [rip+0x8b6a]        # 0x40d060
  4044f6:	lea    rdx,[rip+0x40c4]        # 0x4085c1
  4044fd:	mov    DWORD PTR [rsp+0x20],r13d
  404502:	mov    r8,rax
  404505:	call   0x4017b8
  40450a:	mov    r13d,DWORD PTR [rsp+0x58]
  40450f:	mov    r14,QWORD PTR [r14+0x8]
  404513:	test   r14,r14
  404516:	jne    0x4044c3
  404518:	lea    rcx,[rip+0x3d13]        # 0x408232
  40451f:	mov    rax,rbx
  404522:	mov    rbx,rsi
  404525:	mov    rsi,rax
  404528:	call   0x4015b0
  40452d:	mov    ecx,ebp
  40452f:	mov    r13,rax
  404532:	xor    ebp,ebp
  404534:	call   0x401550
  404539:	mov    rcx,QWORD PTR [rip+0x8b20]        # 0x40d060
  404540:	lea    rdx,[rip+0x4088]        # 0x4085cf
  404547:	mov    r9,r13
  40454a:	mov    r8,rax
  40454d:	mov    r13,rdi
  404550:	call   0x4017b8
  404555:	mov    rcx,QWORD PTR [rip+0x8b04]        # 0x40d060
  40455c:	lea    rdx,[rip+0x3d15]        # 0x408278
  404563:	call   0x4017b8
  404568:	mov    rcx,QWORD PTR [rip+0x8af1]        # 0x40d060
  40456f:	lea    rdx,[rip+0x3d2b]        # 0x4082a1
  404576:	call   0x4017b8
  40457b:	mov    rcx,QWORD PTR [rip+0x8ade]        # 0x40d060
  404582:	lea    rdx,[rip+0x3ccb]        # 0x408254
  404589:	mov    r8,rbx
  40458c:	call   0x4017b8
  404591:	xor    r9d,r9d
  404594:	mov    rax,QWORD PTR [r13+0x0]
  404598:	cmp    QWORD PTR [rax+0x20],0x0
  40459d:	je     0x4045c2
  40459f:	mov    r8,QWORD PTR [rax+0x10]
  4045a3:	mov    rcx,QWORD PTR [rip+0x8ab6]        # 0x40d060
  4045aa:	lea    ebp,[r9+0x1]
  4045ae:	lea    rdx,[rip+0x4029]        # 0x4085de
  4045b5:	call   0x4017b8
  4045ba:	mov    r9d,ebp
  4045bd:	mov    ebp,0x1
  4045c2:	mov    r13,QWORD PTR [r13+0x8]
  4045c6:	test   r13,r13
  4045c9:	jne    0x404594
  4045cb:	test   ebp,ebp
  4045cd:	jne    0x40516f
  4045d3:	cmp    QWORD PTR [r12+0x18],0x0
  4045d9:	je     0x404621
  4045db:	mov    r8,QWORD PTR [r12+0x10]
  4045e0:	mov    rcx,QWORD PTR [rip+0x8a79]        # 0x40d060
  4045e7:	lea    rdx,[rip+0x4013]        # 0x408601
  4045ee:	call   0x4017b8
  4045f3:	cmp    QWORD PTR [r12+0x18],0x0
  4045f9:	je     0x404621
  4045fb:	mov    rcx,QWORD PTR [rip+0x8a5e]        # 0x40d060
  404602:	lea    rdx,[rip+0x2dab]        # 0x4073b4
  404609:	call   0x4017b8
  40460e:	mov    rcx,QWORD PTR [rip+0x8a4b]        # 0x40d060
  404615:	lea    rdx,[rip+0x3cb4]        # 0x4082d0
  40461c:	call   0x4017b8
  404621:	test   ebp,ebp
  404623:	jne    0x405054
  404629:	mov    rcx,QWORD PTR [rip+0x8a30]        # 0x40d060
  404630:	lea    rdx,[rip+0x2d7d]        # 0x4073b4
  404637:	call   0x4017b8
  40463c:	mov    rcx,QWORD PTR [rip+0x8a1d]        # 0x40d060
  404643:	lea    rdx,[rip+0x3ce6]        # 0x408330
  40464a:	call   0x4017b8
  40464f:	mov    rcx,QWORD PTR [rip+0x8a0a]        # 0x40d060
  404656:	lea    rdx,[rip+0x3d00]        # 0x40835d
  40465d:	call   0x4017b8
  404662:	mov    rcx,QWORD PTR [rip+0x89f7]        # 0x40d060
  404669:	lea    rdx,[rip+0x40bc]        # 0x40872c
  404670:	call   0x4017b8
  404675:	mov    rcx,QWORD PTR [rip+0x89e4]        # 0x40d060
  40467c:	lea    rdx,[rip+0x3d35]        # 0x4083b8
  404683:	call   0x4017b8
  404688:	mov    rcx,QWORD PTR [rip+0x89d1]        # 0x40d060
  40468f:	lea    rdx,[rip+0x40af]        # 0x408745
  404696:	call   0x4017b8
  40469b:	mov    rcx,QWORD PTR [rip+0x89be]        # 0x40d060
  4046a2:	lea    rdx,[rip+0x3d5f]        # 0x408408
  4046a9:	call   0x4017b8
  4046ae:	mov    rcx,QWORD PTR [rip+0x89ab]        # 0x40d060
  4046b5:	lea    rdx,[rip+0x3d6a]        # 0x408426
  4046bc:	call   0x4017b8
  4046c1:	mov    rcx,QWORD PTR [rip+0x8998]        # 0x40d060
  4046c8:	lea    rdx,[rip+0x3d61]        # 0x408430
  4046cf:	mov    r8,rbx
  4046d2:	call   0x4017b8
  4046d7:	mov    rcx,QWORD PTR [rip+0x8982]        # 0x40d060
  4046de:	lea    rdx,[rip+0x2ccf]        # 0x4073b4
  4046e5:	call   0x4017b8
  4046ea:	cmp    QWORD PTR [r12+0x18],0x0
  4046f0:	lea    rax,[rip+0x2971]        # 0x407068
  4046f7:	mov    rcx,QWORD PTR [rip+0x8962]        # 0x40d060
  4046fe:	lea    r8,[rip+0x296f]        # 0x407074
  404705:	lea    rdx,[rip+0x3d72]        # 0x40847e
  40470c:	cmovne r8,rax
  404710:	call   0x4017b8
  404715:	mov    rcx,QWORD PTR [rip+0x8944]        # 0x40d060
  40471c:	lea    rdx,[rip+0x403b]        # 0x40875e
  404723:	mov    ebp,eax
  404725:	call   0x4017b8
  40472a:	test   rdi,rdi
  40472d:	je     0x40498a
  404733:	mov    r13,rdi
  404736:	xor    r9d,r9d
  404739:	mov    rax,QWORD PTR [r13+0x0]
  40473d:	cmp    QWORD PTR [rax+0x20],0x0
  404742:	je     0x404772
  404744:	mov    ecx,ebp
  404746:	lea    r14d,[r9+0x1]
  40474a:	mov    DWORD PTR [rsp+0x58],r9d
  40474f:	call   0x401550
  404754:	mov    r9d,DWORD PTR [rsp+0x58]
  404759:	mov    rcx,QWORD PTR [rip+0x8900]        # 0x40d060
  404760:	lea    rdx,[rip+0x3ffd]        # 0x408764
  404767:	mov    r8,rax
  40476a:	call   0x4017b8
  40476f:	mov    r9d,r14d
  404772:	mov    r13,QWORD PTR [r13+0x8]
  404776:	test   r13,r13
  404779:	jne    0x404739
  40477b:	mov    ecx,ebp
  40477d:	mov    r14,rdi
  404780:	xor    ebp,ebp
  404782:	call   0x401550
  404787:	mov    rcx,QWORD PTR [rip+0x88d2]        # 0x40d060
  40478e:	lea    rdx,[rip+0x3fd9]        # 0x40876e
  404795:	mov    r8,rax
  404798:	call   0x4017b8
  40479d:	jmp    0x4047cd
  40479f:	mov    r8,QWORD PTR [r13+0x30]
  4047a3:	mov    rcx,QWORD PTR [rip+0x88b6]        # 0x40d060
  4047aa:	lea    rdx,[rip+0x3fcf]        # 0x408780
  4047b1:	mov    DWORD PTR [rsp+0x20],ebp
  4047b5:	mov    r9d,ebp
  4047b8:	call   0x4017b8
  4047bd:	mov    r14,QWORD PTR [r14+0x8]
  4047c1:	add    ebp,0x1
  4047c4:	test   r14,r14
  4047c7:	je     0x4049a7
  4047cd:	mov    r13,QWORD PTR [r14]
  4047d0:	cmp    QWORD PTR [r13+0x30],0x0
  4047d5:	je     0x4047bd
  4047d7:	mov    rcx,QWORD PTR [rip+0x8882]        # 0x40d060
  4047de:	lea    rdx,[rip+0x3e7b]        # 0x408660
  4047e5:	call   0x4017b8
  4047ea:	cmp    DWORD PTR [r13+0x38],0x0
  4047ef:	je     0x404842
  4047f1:	mov    rcx,QWORD PTR [rip+0x8868]        # 0x40d060
  4047f8:	lea    rdx,[rip+0x3ea1]        # 0x4086a0
  4047ff:	mov    r8d,ebp
  404802:	call   0x4017b8
  404807:	cmp    DWORD PTR [r13+0x3c],0x0
  40480c:	jne    0x40479f
  40480e:	mov    r8,QWORD PTR [r13+0x30]
  404812:	mov    rcx,QWORD PTR [rip+0x8847]        # 0x40d060
  404819:	lea    rdx,[rip+0x3f9e]        # 0x4087be
  404820:	mov    r9d,ebp
  404823:	call   0x4017b8
  404828:	jmp    0x4047bd
  40482a:	lea    rdx,[rip+0x2cad]        # 0x4074de
  404831:	xor    ecx,ecx
  404833:	call   0x401708
  404838:	mov    QWORD PTR [rsp+0x60],rax
  40483d:	jmp    0x403057
  404842:	mov    rcx,QWORD PTR [rip+0x8817]        # 0x40d060
  404849:	lea    rdx,[rip+0x3e18]        # 0x408668
  404850:	mov    r8d,ebp
  404853:	call   0x4017b8
  404858:	jmp    0x4047f1
  40485a:	mov    ebp,0x10a
  40485f:	jmp    0x403283
  404864:	lea    rdx,[rip+0x3802]        # 0x40806d
  40486b:	lea    rcx,[rip+0x380f]        # 0x408081
  404872:	xor    r9d,r9d
  404875:	mov    r8,rbx
  404878:	call   0x4016e8
  40487d:	mov    rcx,QWORD PTR [rip+0x87e4]        # 0x40d068
  404884:	mov    rdx,rax
  404887:	mov    r13,rax
  40488a:	call   0x401790
  40488f:	test   rax,rax
  404892:	mov    rcx,r13
  404895:	setne  bpl
  404899:	movzx  eax,bpl
  40489d:	mov    DWORD PTR [rsp+0x58],eax
  4048a1:	call   0x4017b0
  4048a6:	test   bpl,bpl
  4048a9:	je     0x4040bf
  4048af:	cmp    DWORD PTR [rip+0x87a6],0x0        # 0x40d05c
  4048b6:	je     0x4040bf
  4048bc:	lea    rax,[rip+0x37be]        # 0x408081
  4048c3:	mov    r8,QWORD PTR [rip+0x182e]        # 0x4060f8
  4048ca:	mov    rcx,QWORD PTR [rip+0x878f]        # 0x40d060
  4048d1:	lea    rdx,[rip+0x37bc]        # 0x408094
  4048d8:	mov    QWORD PTR [rsp+0x28],rbx
  4048dd:	mov    r9,rbx
  4048e0:	mov    QWORD PTR [rsp+0x20],rax
  4048e5:	call   0x4017b8
  4048ea:	jmp    0x4040bf
  4048ef:	mov    rcx,QWORD PTR [rsp+0x58]
  4048f4:	lea    rdx,[rip+0x3772]        # 0x40806d
  4048fb:	xor    r8d,r8d
  4048fe:	call   0x4016e8
  404903:	mov    rcx,QWORD PTR [r12+0x8]
  404908:	lea    rdx,[rip+0x375e]        # 0x40806d
  40490f:	xor    r8d,r8d
  404912:	mov    rsi,rax
  404915:	call   0x4016e8
  40491a:	mov    r8,QWORD PTR [r12]
  40491e:	mov    rcx,QWORD PTR [rip+0x873b]        # 0x40d060
  404925:	lea    rdx,[rip+0x3743]        # 0x40806f
  40492c:	mov    rbx,rax
  40492f:	call   0x4017b8
  404934:	jmp    0x403fc1
  404939:	add    rbx,0x9
  40493d:	mov    QWORD PTR [rip+0x17b4],rbx        # 0x4060f8
  404944:	lea    ebx,[rbp+0x1]
  404947:	jmp    0x403850
  40494c:	mov    r8,QWORD PTR [rip+0x17a5]        # 0x4060f8
  404953:	mov    rcx,QWORD PTR [rip+0x8706]        # 0x40d060
  40495a:	lea    rdx,[rip+0x3733]        # 0x408094
  404961:	mov    QWORD PTR [rsp+0x28],rbx
  404966:	mov    r9,rsi
  404969:	mov    QWORD PTR [rsp+0x20],r8
  40496e:	call   0x4017b8
  404973:	mov    rcx,QWORD PTR [rip+0x86ee]        # 0x40d068
  40497a:	mov    r8,rbp
  40497d:	mov    rdx,rbp
  404980:	call   0x401798
  404985:	jmp    0x404066
  40498a:	mov    ecx,ebp
  40498c:	call   0x401550
  404991:	mov    rcx,QWORD PTR [rip+0x86c8]        # 0x40d060
  404998:	lea    rdx,[rip+0x3dcf]        # 0x40876e
  40499f:	mov    r8,rax
  4049a2:	call   0x4017b8
  4049a7:	cmp    QWORD PTR [r12+0x18],0x0
  4049ad:	je     0x4049da
  4049af:	mov    rcx,QWORD PTR [rip+0x86aa]        # 0x40d060
  4049b6:	lea    rdx,[rip+0x29f7]        # 0x4073b4
  4049bd:	call   0x4017b8
  4049c2:	mov    r8,QWORD PTR [r12+0x18]
  4049c7:	mov    rcx,QWORD PTR [rip+0x8692]        # 0x40d060
  4049ce:	lea    rdx,[rip+0x3aeb]        # 0x4084c0
  4049d5:	call   0x4017b8
  4049da:	mov    rcx,QWORD PTR [rip+0x867f]        # 0x40d060
  4049e1:	lea    rdx,[rip+0x3de5]        # 0x4087cd
  4049e8:	call   0x4017b8
  4049ed:	jmp    0x404020
  4049f2:	mov    rcx,QWORD PTR [rip+0x8667]        # 0x40d060
  4049f9:	lea    rdx,[rip+0x3780]        # 0x408180
  404a00:	call   0x4017b8
  404a05:	mov    r8,QWORD PTR [rip+0x16ec]        # 0x4060f8
  404a0c:	mov    rcx,QWORD PTR [rip+0x864d]        # 0x40d060
  404a13:	lea    rdx,[rip+0x3695]        # 0x4080af
  404a1a:	mov    r9,rbx
  404a1d:	call   0x4017b8
  404a22:	mov    rcx,QWORD PTR [rip+0x8637]        # 0x40d060
  404a29:	lea    rdx,[rip+0x3687]        # 0x4080b7
  404a30:	mov    ebp,eax
  404a32:	call   0x4017b8
  404a37:	mov    ecx,ebp
  404a39:	call   0x401550
  404a3e:	mov    rcx,QWORD PTR [rip+0x861b]        # 0x40d060
  404a45:	lea    rdx,[rip+0x373c]        # 0x408188
  404a4c:	mov    r8,rax
  404a4f:	call   0x4017b8
  404a54:	mov    ecx,ebp
  404a56:	call   0x401550
  404a5b:	mov    rcx,QWORD PTR [rip+0x85fe]        # 0x40d060
  404a62:	lea    rdx,[rip+0x3687]        # 0x4080f0
  404a69:	mov    r8,rax
  404a6c:	call   0x4017b8
  404a71:	mov    ecx,ebp
  404a73:	call   0x401550
  404a78:	mov    rcx,QWORD PTR [rip+0x85e1]        # 0x40d060
  404a7f:	lea    rdx,[rip+0x3692]        # 0x408118
  404a86:	mov    r8,rax
  404a89:	call   0x4017b8
  404a8e:	mov    ecx,ebp
  404a90:	call   0x401550
  404a95:	mov    rcx,QWORD PTR [rip+0x85c4]        # 0x40d060
  404a9c:	lea    rdx,[rip+0x3715]        # 0x4081b8
  404aa3:	mov    r8,rax
  404aa6:	call   0x4017b8
  404aab:	mov    ecx,ebp
  404aad:	mov    ebp,0x1
  404ab2:	call   0x401550
  404ab7:	mov    rcx,QWORD PTR [rip+0x85a2]        # 0x40d060
  404abe:	lea    rdx,[rip+0x3723]        # 0x4081e8
  404ac5:	mov    r8,rax
  404ac8:	call   0x4017b8
  404acd:	mov    rcx,QWORD PTR [rip+0x858c]        # 0x40d060
  404ad4:	lea    rdx,[rip+0x372c]        # 0x408207
  404adb:	call   0x4017b8
  404ae0:	mov    r8,QWORD PTR [r12+0x10]
  404ae5:	mov    rcx,QWORD PTR [rip+0x8574]        # 0x40d060
  404aec:	lea    rdx,[rip+0x371d]        # 0x408210
  404af3:	mov    r9,rbx
  404af6:	call   0x4017b8
  404afb:	lea    rcx,[rip+0x3730]        # 0x408232
  404b02:	mov    DWORD PTR [rsp+0x68],eax
  404b06:	call   0x4015b0
  404b0b:	mov    rcx,QWORD PTR [rip+0x854e]        # 0x40d060
  404b12:	lea    rdx,[rip+0x3722]        # 0x40823b
  404b19:	mov    r8,rax
  404b1c:	call   0x4017b8
  404b21:	test   rdi,rdi
  404b24:	je     0x404f93
  404b2a:	mov    eax,r13d
  404b2d:	mov    r14,rdi
  404b30:	mov    r13,rsi
  404b33:	mov    rsi,rbx
  404b36:	mov    ebx,eax
  404b38:	mov    rax,QWORD PTR [r14]
  404b3b:	cmp    QWORD PTR [rax+0x20],0x0
  404b40:	je     0x404b83
  404b42:	mov    rcx,QWORD PTR [rax+0x10]
  404b46:	lea    edx,[rbp+0x1]
  404b49:	mov    DWORD PTR [rsp+0x74],edx
  404b4d:	call   0x4015b0
  404b52:	mov    ecx,DWORD PTR [rsp+0x68]
  404b56:	mov    QWORD PTR [rsp+0x78],rax
  404b5b:	call   0x401550
  404b60:	mov    r9,QWORD PTR [rsp+0x78]
  404b65:	mov    rcx,QWORD PTR [rip+0x84f4]        # 0x40d060
  404b6c:	lea    rdx,[rip+0x3748]        # 0x4082bb
  404b73:	mov    DWORD PTR [rsp+0x20],ebp
  404b77:	mov    r8,rax
  404b7a:	call   0x4017b8
  404b7f:	mov    ebp,DWORD PTR [rsp+0x74]
  404b83:	mov    r14,QWORD PTR [r14+0x8]
  404b87:	test   r14,r14
  404b8a:	jne    0x404b38
  404b8c:	lea    rcx,[rip+0x369f]        # 0x408232
  404b93:	mov    eax,ebx
  404b95:	mov    rbx,rsi
  404b98:	mov    rsi,r13
  404b9b:	mov    r13d,eax
  404b9e:	call   0x4015b0
  404ba3:	mov    ecx,DWORD PTR [rsp+0x68]
  404ba7:	mov    rbp,rax
  404baa:	call   0x401550
  404baf:	mov    rcx,QWORD PTR [rip+0x84aa]        # 0x40d060
  404bb6:	lea    rdx,[rip+0x3689]        # 0x408246
  404bbd:	mov    r9,rbp
  404bc0:	mov    r8,rax
  404bc3:	call   0x4017b8
  404bc8:	mov    rcx,QWORD PTR [rip+0x8491]        # 0x40d060
  404bcf:	lea    rdx,[rip+0x367e]        # 0x408254
  404bd6:	mov    r8,rbx
  404bd9:	call   0x4017b8
  404bde:	mov    rcx,QWORD PTR [rip+0x847b]        # 0x40d060
  404be5:	lea    rdx,[rip+0x368c]        # 0x408278
  404bec:	call   0x4017b8
  404bf1:	mov    rcx,QWORD PTR [rip+0x8468]        # 0x40d060
  404bf8:	lea    rdx,[rip+0x36a2]        # 0x4082a1
  404bff:	call   0x4017b8
  404c04:	cmp    QWORD PTR [r12+0x18],0x0
  404c0a:	je     0x404c24
  404c0c:	mov    r8,QWORD PTR [r12+0x10]
  404c11:	mov    rcx,QWORD PTR [rip+0x8448]        # 0x40d060
  404c18:	lea    rdx,[rip+0x39e2]        # 0x408601
  404c1f:	call   0x4017b8
  404c24:	mov    rcx,QWORD PTR [rip+0x8435]        # 0x40d060
  404c2b:	lea    rdx,[rip+0x2782]        # 0x4073b4
  404c32:	call   0x4017b8
  404c37:	cmp    QWORD PTR [r12+0x18],0x0
  404c3d:	je     0x404c52
  404c3f:	mov    rcx,QWORD PTR [rip+0x841a]        # 0x40d060
  404c46:	lea    rdx,[rip+0x3683]        # 0x4082d0
  404c4d:	call   0x4017b8
  404c52:	test   rdi,rdi
  404c55:	je     0x404c87
  404c57:	mov    rax,rdi
  404c5a:	xor    edx,edx
  404c5c:	mov    rcx,QWORD PTR [rax]
  404c5f:	mov    rax,QWORD PTR [rax+0x8]
  404c63:	cmp    QWORD PTR [rcx+0x20],0x1
  404c68:	sbb    edx,0xffffffff
  404c6b:	test   rax,rax
  404c6e:	jne    0x404c5c
  404c70:	mov    rcx,QWORD PTR [rip+0x83e9]        # 0x40d060
  404c77:	lea    r8d,[rdx+0x1]
  404c7b:	lea    rdx,[rip+0x367e]        # 0x408300
  404c82:	call   0x4017b8
  404c87:	mov    rcx,QWORD PTR [rip+0x83d2]        # 0x40d060
  404c8e:	lea    rdx,[rip+0x271f]        # 0x4073b4
  404c95:	call   0x4017b8
  404c9a:	mov    rcx,QWORD PTR [rip+0x83bf]        # 0x40d060
  404ca1:	lea    rdx,[rip+0x3688]        # 0x408330
  404ca8:	call   0x4017b8
  404cad:	mov    rcx,QWORD PTR [rip+0x83ac]        # 0x40d060
  404cb4:	lea    rdx,[rip+0x36a2]        # 0x40835d
  404cbb:	call   0x4017b8
  404cc0:	mov    rcx,QWORD PTR [rip+0x8399]        # 0x40d060
  404cc7:	lea    rdx,[rip+0x36b2]        # 0x408380
  404cce:	call   0x4017b8
  404cd3:	mov    rcx,QWORD PTR [rip+0x8386]        # 0x40d060
  404cda:	lea    rdx,[rip+0x36d7]        # 0x4083b8
  404ce1:	call   0x4017b8
  404ce6:	mov    rcx,QWORD PTR [rip+0x8373]        # 0x40d060
  404ced:	lea    rdx,[rip+0x36dc]        # 0x4083d0
  404cf4:	call   0x4017b8
  404cf9:	mov    rcx,QWORD PTR [rip+0x8360]        # 0x40d060
  404d00:	lea    rdx,[rip+0x3701]        # 0x408408
  404d07:	call   0x4017b8
  404d0c:	mov    rcx,QWORD PTR [rip+0x834d]        # 0x40d060
  404d13:	lea    rdx,[rip+0x370c]        # 0x408426
  404d1a:	call   0x4017b8
  404d1f:	mov    rcx,QWORD PTR [rip+0x833a]        # 0x40d060
  404d26:	lea    rdx,[rip+0x3703]        # 0x408430
  404d2d:	mov    r8,rbx
  404d30:	call   0x4017b8
  404d35:	mov    rcx,QWORD PTR [rip+0x8324]        # 0x40d060
  404d3c:	lea    rdx,[rip+0x2671]        # 0x4073b4
  404d43:	call   0x4017b8
  404d48:	cmp    QWORD PTR [r12+0x18],0x0
  404d4e:	lea    rax,[rip+0x2313]        # 0x407068
  404d55:	mov    rcx,QWORD PTR [rip+0x8304]        # 0x40d060
  404d5c:	lea    r8,[rip+0x2311]        # 0x407074
  404d63:	lea    rdx,[rip+0x3714]        # 0x40847e
  404d6a:	cmovne r8,rax
  404d6e:	call   0x4017b8
  404d73:	mov    rcx,QWORD PTR [rip+0x82e6]        # 0x40d060
  404d7a:	lea    rdx,[rip+0x370c]        # 0x40848d
  404d81:	mov    ebp,eax
  404d83:	call   0x4017b8
  404d88:	test   rdi,rdi
  404d8b:	mov    edx,0x1
  404d90:	je     0x404df9
  404d92:	mov    BYTE PTR [rsp+0x74],r13b
  404d97:	mov    r14,rdi
  404d9a:	mov    r13,rsi
  404d9d:	mov    rsi,rbx
  404da0:	mov    ebx,edx
  404da2:	mov    rax,QWORD PTR [r14]
  404da5:	mov    r9,QWORD PTR [rax+0x20]
  404da9:	test   r9,r9
  404dac:	mov    QWORD PTR [rsp+0x78],r9
  404db1:	je     0x404de4
  404db3:	lea    eax,[rbx+0x1]
  404db6:	mov    ecx,ebp
  404db8:	mov    DWORD PTR [rsp+0x68],eax
  404dbc:	call   0x401550
  404dc1:	mov    r9,QWORD PTR [rsp+0x78]
  404dc6:	mov    rcx,QWORD PTR [rip+0x8293]        # 0x40d060
  404dcd:	lea    rdx,[rip+0x36cc]        # 0x4084a0
  404dd4:	mov    DWORD PTR [rsp+0x20],ebx
  404dd8:	mov    r8,rax
  404ddb:	call   0x4017b8
  404de0:	mov    ebx,DWORD PTR [rsp+0x68]
  404de4:	mov    r14,QWORD PTR [r14+0x8]
  404de8:	test   r14,r14
  404deb:	jne    0x404da2
  404ded:	mov    rbx,rsi
  404df0:	mov    rsi,r13
  404df3:	movzx  r13d,BYTE PTR [rsp+0x74]
  404df9:	mov    ecx,ebp
  404dfb:	call   0x401550
  404e00:	mov    rcx,QWORD PTR [rip+0x8259]        # 0x40d060
  404e07:	lea    rdx,[rip+0x3687]        # 0x408495
  404e0e:	mov    r8,rax
  404e11:	call   0x4017b8
  404e16:	cmp    QWORD PTR [r12+0x18],0x0
  404e1c:	je     0x404e49
  404e1e:	mov    rcx,QWORD PTR [rip+0x823b]        # 0x40d060
  404e25:	lea    rdx,[rip+0x2588]        # 0x4073b4
  404e2c:	call   0x4017b8
  404e31:	mov    r8,QWORD PTR [r12+0x18]
  404e36:	mov    rcx,QWORD PTR [rip+0x8223]        # 0x40d060
  404e3d:	lea    rdx,[rip+0x367c]        # 0x4084c0
  404e44:	call   0x4017b8
  404e49:	mov    rcx,QWORD PTR [rip+0x8210]        # 0x40d060
  404e50:	lea    rdx,[rip+0x3689]        # 0x4084e0
  404e57:	call   0x4017b8
  404e5c:	jmp    0x4041f0
  404e61:	lea    rax,[rip+0x3219]        # 0x408081
  404e68:	mov    r8,QWORD PTR [rip+0x1289]        # 0x4060f8
  404e6f:	mov    rcx,QWORD PTR [rip+0x81ea]        # 0x40d060
  404e76:	lea    rdx,[rip+0x3666]        # 0x4084e3
  404e7d:	mov    QWORD PTR [rsp+0x28],rbx
  404e82:	mov    r9,rbx
  404e85:	mov    QWORD PTR [rsp+0x20],rax
  404e8a:	call   0x4017b8
  404e8f:	cmp    DWORD PTR [rip+0x81c6],0x0        # 0x40d05c
  404e96:	jne    0x404211
  404e9c:	jmp    0x404343
  404ea1:	call   QWORD PTR [rip+0x9651]        # 0x40e4f8
  404ea7:	lea    rbx,[rax+0x60]
  404eab:	lea    rdx,[rip+0x222b]        # 0x4070dd
  404eb2:	mov    rcx,rbx
  404eb5:	call   0x4017b8
  404eba:	lea    r8,[rip+0x2224]        # 0x4070e5
  404ec1:	lea    rdx,[rip+0x222d]        # 0x4070f5
  404ec8:	mov    rcx,rbx
  404ecb:	call   0x4017b8
  404ed0:	lea    rdx,[rip+0x223c]        # 0x407113
  404ed7:	mov    rcx,rbx
  404eda:	call   0x4017b8
  404edf:	lea    rdx,[rip+0x2242]        # 0x407128
  404ee6:	mov    rcx,rbx
  404ee9:	call   0x4017b8
  404eee:	lea    rdx,[rip+0x2269]        # 0x40715e
  404ef5:	mov    rcx,rbx
  404ef8:	call   0x4017b8
  404efd:	lea    rdx,[rip+0x226c]        # 0x407170
  404f04:	mov    rcx,rbx
  404f07:	call   0x4017b8
  404f0c:	lea    rdx,[rip+0x2295]        # 0x4071a8
  404f13:	mov    rcx,rbx
  404f16:	call   0x4017b8
  404f1b:	lea    rdx,[rip+0x22b6]        # 0x4071d8
  404f22:	mov    rcx,rbx
  404f25:	call   0x4017b8
  404f2a:	lea    rdx,[rip+0x22df]        # 0x407210
  404f31:	mov    rcx,rbx
  404f34:	call   0x4017b8
  404f39:	lea    rdx,[rip+0x2310]        # 0x407250
  404f40:	mov    rcx,rbx
  404f43:	call   0x4017b8
  404f48:	lea    rdx,[rip+0x2341]        # 0x407290
  404f4f:	mov    rcx,rbx
  404f52:	call   0x4017b8
  404f57:	lea    rdx,[rip+0x237a]        # 0x4072d8
  404f5e:	mov    rcx,rbx
  404f61:	call   0x4017b8
  404f66:	lea    rdx,[rip+0x23ab]        # 0x407318
  404f6d:	mov    rcx,rbx
  404f70:	call   0x4017b8
  404f75:	lea    rdx,[rip+0x23dc]        # 0x407358
  404f7c:	mov    rcx,rbx
  404f7f:	call   0x4017b8
  404f84:	mov    QWORD PTR [r13+0x0],0x0
  404f8c:	xor    ecx,ecx
  404f8e:	call   0x402d90
  404f93:	lea    rcx,[rip+0x3298]        # 0x408232
  404f9a:	call   0x4015b0
  404f9f:	mov    ecx,DWORD PTR [rsp+0x68]
  404fa3:	mov    rbp,rax
  404fa6:	call   0x401550
  404fab:	mov    rcx,QWORD PTR [rip+0x80ae]        # 0x40d060
  404fb2:	lea    rdx,[rip+0x328d]        # 0x408246
  404fb9:	mov    r9,rbp
  404fbc:	mov    r8,rax
  404fbf:	call   0x4017b8
  404fc4:	mov    rcx,QWORD PTR [rip+0x8095]        # 0x40d060
  404fcb:	lea    rdx,[rip+0x3282]        # 0x408254
  404fd2:	mov    r8,rbx
  404fd5:	call   0x4017b8
  404fda:	mov    rcx,QWORD PTR [rip+0x807f]        # 0x40d060
  404fe1:	lea    rdx,[rip+0x3290]        # 0x408278
  404fe8:	call   0x4017b8
  404fed:	mov    rcx,QWORD PTR [rip+0x806c]        # 0x40d060
  404ff4:	lea    rdx,[rip+0x32a6]        # 0x4082a1
  404ffb:	call   0x4017b8
  405000:	cmp    QWORD PTR [r12+0x18],0x0
  405006:	je     0x404c87
  40500c:	mov    r8,QWORD PTR [r12+0x10]
  405011:	mov    rcx,QWORD PTR [rip+0x8048]        # 0x40d060
  405018:	lea    rdx,[rip+0x35e2]        # 0x408601
  40501f:	call   0x4017b8
  405024:	cmp    QWORD PTR [r12+0x18],0x0
  40502a:	je     0x404c87
  405030:	mov    rcx,QWORD PTR [rip+0x8029]        # 0x40d060
  405037:	lea    rdx,[rip+0x2376]        # 0x4073b4
  40503e:	call   0x4017b8
  405043:	cmp    QWORD PTR [r12+0x18],0x0
  405049:	jne    0x404c3f
  40504f:	jmp    0x404c87
  405054:	mov    rcx,QWORD PTR [rip+0x8005]        # 0x40d060
  40505b:	lea    rdx,[rip+0x2352]        # 0x4073b4
  405062:	mov    r14,rdi
  405065:	xor    ebp,ebp
  405067:	call   0x4017b8
  40506c:	mov    rcx,QWORD PTR [rip+0x7fed]        # 0x40d060
  405073:	lea    rdx,[rip+0x359e]        # 0x408618
  40507a:	call   0x4017b8
  40507f:	test   r14,r14
  405082:	je     0x405157
  405088:	mov    r13,QWORD PTR [r14]
  40508b:	cmp    QWORD PTR [r13+0x20],0x0
  405090:	je     0x40512f
  405096:	mov    rax,QWORD PTR [r13+0x18]
  40509a:	mov    r9,QWORD PTR [r13+0x10]
  40509e:	lea    rdx,[rip+0x3593]        # 0x408638
  4050a5:	mov    rcx,QWORD PTR [rip+0x7fb4]        # 0x40d060
  4050ac:	mov    r8d,ebp
  4050af:	mov    QWORD PTR [rsp+0x20],rax
  4050b4:	call   0x4017b8
  4050b9:	cmp    QWORD PTR [r13+0x28],0x0
  4050be:	je     0x40512f
  4050c0:	mov    rcx,QWORD PTR [rip+0x7f99]        # 0x40d060
  4050c7:	lea    rdx,[rip+0x3592]        # 0x408660
  4050ce:	call   0x4017b8
  4050d3:	cmp    DWORD PTR [r13+0x38],0x0
  4050d8:	jne    0x4050f0
  4050da:	mov    rcx,QWORD PTR [rip+0x7f7f]        # 0x40d060
  4050e1:	lea    rdx,[rip+0x3580]        # 0x408668
  4050e8:	mov    r8d,ebp
  4050eb:	call   0x4017b8
  4050f0:	mov    rcx,QWORD PTR [rip+0x7f69]        # 0x40d060
  4050f7:	lea    rdx,[rip+0x35a2]        # 0x4086a0
  4050fe:	mov    r8d,ebp
  405101:	call   0x4017b8
  405106:	cmp    DWORD PTR [r13+0x3c],0x0
  40510b:	mov    r9,QWORD PTR [r13+0x28]
  40510f:	je     0x40513b
  405111:	mov    rcx,QWORD PTR [rip+0x7f48]        # 0x40d060
  405118:	lea    rdx,[rip+0x3599]        # 0x4086b8
  40511f:	mov    DWORD PTR [rsp+0x28],ebp
  405123:	mov    DWORD PTR [rsp+0x20],ebp
  405127:	mov    r8d,ebp
  40512a:	call   0x4017b8
  40512f:	add    ebp,0x1
  405132:	mov    r14,QWORD PTR [r14+0x8]
  405136:	jmp    0x40507f
  40513b:	mov    rcx,QWORD PTR [rip+0x7f1e]        # 0x40d060
  405142:	lea    rdx,[rip+0x35b5]        # 0x4086fe
  405149:	mov    DWORD PTR [rsp+0x20],ebp
  40514d:	mov    r8d,ebp
  405150:	call   0x4017b8
  405155:	jmp    0x40512f
  405157:	mov    rcx,QWORD PTR [rip+0x7f02]        # 0x40d060
  40515e:	lea    rdx,[rip+0x35b0]        # 0x408715
  405165:	call   0x4017b8
  40516a:	jmp    0x404629
  40516f:	mov    rcx,QWORD PTR [rip+0x7eea]        # 0x40d060
  405176:	lea    rdx,[rip+0x346e]        # 0x4085eb
  40517d:	mov    ebp,0x1
  405182:	call   0x4017b8
  405187:	jmp    0x4045d3
  40518c:	lea    rcx,[rip+0x309f]        # 0x408232
  405193:	call   0x4015b0
  405198:	mov    ecx,ebp
  40519a:	mov    r13,rax
  40519d:	xor    ebp,ebp
  40519f:	call   0x401550
  4051a4:	mov    rcx,QWORD PTR [rip+0x7eb5]        # 0x40d060
  4051ab:	lea    rdx,[rip+0x341d]        # 0x4085cf
  4051b2:	mov    r8,rax
  4051b5:	mov    r9,r13
  4051b8:	call   0x4017b8
  4051bd:	mov    rcx,QWORD PTR [rip+0x7e9c]        # 0x40d060
  4051c4:	lea    rdx,[rip+0x30ad]        # 0x408278
  4051cb:	call   0x4017b8
  4051d0:	mov    rcx,QWORD PTR [rip+0x7e89]        # 0x40d060
  4051d7:	lea    rdx,[rip+0x30c3]        # 0x4082a1
  4051de:	call   0x4017b8
  4051e3:	mov    rcx,QWORD PTR [rip+0x7e76]        # 0x40d060
  4051ea:	lea    rdx,[rip+0x3063]        # 0x408254
  4051f1:	mov    r8,rbx
  4051f4:	call   0x4017b8
  4051f9:	jmp    0x4045d3
  4051fe:	call   QWORD PTR [rip+0x92f4]        # 0x40e4f8
  405204:	lea    rbx,[rax+0x60]
  405208:	lea    r8,[rip+0x1ed6]        # 0x4070e5
  40520f:	lea    rdx,[rip+0x2189]        # 0x40739f
  405216:	mov    rcx,rbx
  405219:	call   0x4017b8
  40521e:	lea    rdx,[rip+0x2186]        # 0x4073ab
  405225:	mov    r9d,0x30
  40522b:	mov    r8d,0x2
  405231:	mov    rcx,rbx
  405234:	mov    DWORD PTR [rsp+0x20],0x1
  40523c:	call   0x4017b8
  405241:	lea    rdx,[rip+0x216c]        # 0x4073b4
  405248:	mov    rcx,rbx
  40524b:	call   0x4017b8
  405250:	lea    r8,[rip+0x1e8e]        # 0x4070e5
  405257:	lea    rdx,[rip+0x215a]        # 0x4073b8
  40525e:	mov    rcx,rbx
  405261:	call   0x4017b8
  405266:	lea    r8,[rip+0x1e78]        # 0x4070e5
  40526d:	lea    rdx,[rip+0x216c]        # 0x4073e0
  405274:	mov    rcx,rbx
  405277:	call   0x4017b8
  40527c:	lea    rdx,[rip+0x2195]        # 0x407418
  405283:	mov    rcx,rbx
  405286:	call   0x4017b8
  40528b:	lea    r8,[rip+0x21c0]        # 0x407452
  405292:	lea    rdx,[rip+0x21bf]        # 0x407458
  405299:	mov    rcx,rbx
  40529c:	call   0x4017b8
  4052a1:	lea    r8,[rip+0x21e2]        # 0x40748a
  4052a8:	lea    rdx,[rip+0x21f1]        # 0x4074a0
  4052af:	mov    rcx,rbx
  4052b2:	call   0x4017b8
  4052b7:	mov    QWORD PTR [r13+0x0],0x0
  4052bf:	xor    ecx,ecx
  4052c1:	call   0x402d90
  4052c6:	nop
  4052c7:	nop
  4052c8:	nop
  4052c9:	nop
  4052ca:	nop
  4052cb:	nop
  4052cc:	nop
  4052cd:	nop
  4052ce:	nop
  4052cf:	nop
  4052d0:	(bad)  
  4052d1:	(bad)  
  4052d2:	(bad)  
  4052d3:	(bad)  
  4052d4:	(bad)  
  4052d5:	(bad)  
  4052d6:	(bad)  
  4052d7:	inc    DWORD PTR [rax]
  4052d9:	add    BYTE PTR [rax],al
  4052db:	add    BYTE PTR [rax],al
  4052dd:	add    BYTE PTR [rax],al
  4052df:	add    bh,bh
  4052e1:	(bad)  
  4052e2:	(bad)  
  4052e3:	(bad)  
  4052e4:	(bad)  
  4052e5:	(bad)  
  4052e6:	(bad)  
  4052e7:	inc    DWORD PTR [rax]
  4052e9:	add    BYTE PTR [rax],al
  4052eb:	add    BYTE PTR [rax],al
  4052ed:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000406000 <.data>:
  406000:	or     al,BYTE PTR [rax]
	...
  40603e:	add    BYTE PTR [rax],al
  406040:	mov    BYTE PTR cs:[rax+0x0],al
  406044:	add    BYTE PTR [rax],al
  406046:	add    BYTE PTR [rax],al
  406048:	push   rax
  406049:	mov    BYTE PTR [rax+0x0],al
  40604c:	add    BYTE PTR [rax],al
  40604e:	add    BYTE PTR [rax],al
  406050:	jno    0x405fda
  406052:	add    BYTE PTR [rax],al
  406055:	add    BYTE PTR [rax],al
  406057:	add    BYTE PTR [rax+0x4088],dl
  40605d:	add    BYTE PTR [rax],al
  40605f:	add    BYTE PTR [rdi+0x4088],ch
  406065:	add    BYTE PTR [rax],al
  406067:	add    ah,cl
  406069:	mov    BYTE PTR [rax+0x0],al
  40606c:	add    BYTE PTR [rax],al
  40606e:	add    BYTE PTR [rax],al
  406070:	(bad)  
  406071:	mov    BYTE PTR [rax+0x0],al
  406074:	add    BYTE PTR [rax],al
  406076:	add    BYTE PTR [rax],al
  406078:	or     BYTE PTR [rcx+0x40],cl
  40607e:	add    BYTE PTR [rax],al
  406080:	(bad)  
  406081:	mov    DWORD PTR [rax+0x0],eax
  406084:	add    BYTE PTR [rax],al
  406086:	add    BYTE PTR [rax],al
  406088:	mov    QWORD PTR [rax+0x0],rax
  40608c:	add    BYTE PTR [rax],al
  40608e:	add    BYTE PTR [rax],al
  406090:	push   0x4089
  406095:	add    BYTE PTR [rax],al
  406097:	add    BYTE PTR [rax+0x4089],cl
  40609d:	add    BYTE PTR [rax],al
  40609f:	add    BYTE PTR [rax+0x4089],ch
  4060a5:	add    BYTE PTR [rax],al
  4060a7:	add    al,cl
  4060a9:	mov    DWORD PTR [rax+0x0],eax
  4060ac:	add    BYTE PTR [rax],al
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	call   0x40a13e
  4060b5:	add    BYTE PTR [rax],al
  4060b7:	add    BYTE PTR [rax],cl
  4060b9:	mov    al,BYTE PTR [rax+0x0]
  4060bc:	add    BYTE PTR [rax],al
  4060be:	add    BYTE PTR [rax],al
  4060c0:	xor    BYTE PTR [rdx+0x40],cl
  4060c6:	add    BYTE PTR [rax],al
  4060c8:	push   rax
  4060c9:	mov    al,BYTE PTR [rax+0x0]
  4060cc:	add    BYTE PTR [rax],al
  4060ce:	add    BYTE PTR [rax],al
  4060d0:	js     0x40605c
  4060d2:	add    BYTE PTR [rax],al
  4060d5:	add    BYTE PTR [rax],al
  4060d7:	add    BYTE PTR [rax+0x408a],ah
  4060dd:	add    BYTE PTR [rax],al
  4060df:	add    al,al
  4060e1:	mov    al,BYTE PTR [rax+0x0]
  4060e4:	add    BYTE PTR [rax],al
  4060e6:	add    BYTE PTR [rax],al
  4060e8:	lock mov al,BYTE PTR [rax+0x0]
  4060ec:	add    BYTE PTR [rax],al
  4060ee:	add    BYTE PTR [rax],al
  4060f0:	add    DWORD PTR [rax],eax
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	add    BYTE PTR [rax],al
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	rcr    BYTE PTR [rax+0x40],0x0
  4060ff:	add    al,ch
  406101:	push   rdx
  406102:	add    BYTE PTR [rax],al
	...
  40610d:	add    BYTE PTR [rax],al
  40610f:	add    bh,bh
  406111:	(bad)  
  406112:	(bad)  
  406113:	(bad)  
  406114:	(bad)  
  406115:	(bad)  
  406116:	(bad)  
  406117:	inc    DWORD PTR [rax]
  406119:	add    BYTE PTR [rax],al
  40611b:	add    BYTE PTR [rax],al
  40611d:	add    BYTE PTR [rax],al
  40611f:	add    bh,bh
	...
  40612d:	add    BYTE PTR [rax],al
  40612f:	add    BYTE PTR [rdx],al
	...
  40613d:	add    BYTE PTR [rax],al
  40613f:	add    bh,bh
  406141:	(bad)  
  406142:	(bad)  
  406143:	inc    DWORD PTR [rax]
	...
  40614d:	add    BYTE PTR [rax],al
  40614f:	add    BYTE PTR [rax],ah
  406151:	add    BYTE PTR cs:[rax],al
  406155:	add    BYTE PTR [rax],al
  406157:	add    BYTE PTR [rax],dh
  406159:	add    BYTE PTR cs:[rax],al
  40615d:	add    BYTE PTR [rax],al
  40615f:	add    BYTE PTR [rdx],dh
  406161:	movabs ds:0x2b992ddf,al
  40616a:	add    BYTE PTR [rax],al
  40616c:	add    BYTE PTR [rax],al
  40616e:	add    BYTE PTR [rax],al
  406170:	int    0x5d
  406172:	and    dl,dl
  406174:	data16 (bad) 
  406176:	(bad)  
  406177:	inc    DWORD PTR [rax]
  406179:	add    BYTE PTR [rax],al
  40617b:	add    BYTE PTR [rax],al
  40617d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000407000 <.rdata>:
  407000:	and    eax,0x2073
  407005:	add    BYTE PTR [rax],al
  407007:	add    BYTE PTR [rdi+0x76],ch
  40700a:	gs jb  0x407073
  40700d:	jne    0x40707b
  40700f:	ins    BYTE PTR es:[rdi],dx
  407010:	and    BYTE PTR [rbx+0x74],dh
  407013:	jb     0x40707e
  407015:	outs   dx,BYTE PTR ds:[rsi]
  407016:	and    BYTE PTR [eax],ch
  407019:	and    eax,0x79622075
  40701e:	je     0x407085
  407020:	jae    0x40704b
  407022:	and    BYTE PTR [rsi+0x6f],ah
  407025:	jb     0x407047
  407027:	jo     0x40708a
  407029:	fs jae 0x40709c
  40702c:	(bad)  
  40702d:	movsxd esp,DWORD PTR [rbp+0x0]
  407030:	rex.RXB
  407031:	imul   r12,QWORD PTR [rdx+0x2d],0x6d6e6547
  407039:	(bad)  
  40703a:	jb     0x4070af
  40703c:	push   0x73006c61
  407041:	je     0x4070b5
  407043:	imul   ebp,DWORD PTR [rsi+0x67],0x203d2120
  40704a:	rex.WRX push rbp
  40704c:	rex.WR
  40704d:	rex.WR add BYTE PTR [rdi+0x5f],r8b
  407051:	rex.RXB
  407052:	rex.WRX push rbp
  407054:	rex.XB pop r15
  407056:	rex.WB
  407057:	rex.WRX push rsp
  407059:	rex.RB push r10
  40705b:	rex.WRX
  40705c:	rex.B
  40705d:	rex.WR and BYTE PTR [rax],r8b
  407060:	gs js  0x4070d7
  407063:	gs jb  0x4070d4
  407066:	and    BYTE PTR [rax],al
  407068:	and    BYTE PTR [rsi+0x5f],dh
  40706b:	jb     0x4070d2
  40706d:	je     0x4070e4
  40706f:	jb     0x4070df
  407071:	and    BYTE PTR [rip+0x2d2d0000],bh        # 0x2d6d7077
  407077:	push   0x65646165
  40707c:	jb     0x40707e
  40707e:	sub    eax,0x646f622d
  407083:	jns    0x407085
  407085:	sub    eax,0x696b732d
  40708a:	jo     0x4070b9
  40708c:	jae    0x4070fd
  40708e:	jne    0x407102
  407090:	movsxd esp,DWORD PTR [rbp+0x0]
  407093:	sub    eax,0x736f6e2d
  407098:	je     0x4070fe
  40709a:	imul   ebp,DWORD PTR [rsi+0x63],0x732d2d00
  4070a1:	je     0x407107
  4070a3:	imul   ebp,DWORD PTR [rsi+0x63],0x692d2d00
  4070aa:	outs   dx,BYTE PTR ds:[rsi]
  4070ab:	je     0x407112
  4070ad:	jb     0x40711d
  4070af:	(bad)  
  4070b0:	ins    BYTE PTR es:[rdi],dx
  4070b1:	add    BYTE PTR [rip+0x6c61762d],ch        # 0x6ca1e6e4
  4070b7:	imul   esi,DWORD PTR [rbx+0x74],0x72616d2d
  4070be:	jae    0x407128
  4070c0:	(bad)  
  4070c1:	ins    BYTE PTR es:[rdi],dx
  4070c2:	ins    BYTE PTR es:[rdi],dx
  4070c3:	gs jb  0x407139
  4070c6:	add    BYTE PTR [rip+0x6572702d],ch        # 0x65b2e0f9
  4070cc:	imul   di,WORD PTR [rax+0x0],0x2d2d
  4070d2:	jo     0x407146
  4070d4:	imul   di,WORD PTR gs:[rax+0x3d],0x2d00
  4070db:	push   0x61735500
  4070e0:	cmp    cl,BYTE PTR gs:[edx]
  4070e4:	add    BYTE PTR [rdi+0x6c],ah
  4070e7:	imul   esp,DWORD PTR [rdx+0x2d],0x6d6e6567
  4070ee:	(bad)  
  4070ef:	jb     0x407164
  4070f1:	push   0x20006c61
  4070f6:	and    BYTE PTR [rip+0x4f5b2073],ah        # 0x4f9b916f
  4070fc:	push   rax
  4070fd:	push   rsp
  4070fe:	rex.WB
  4070ff:	rex.WRXB
  407100:	rex.WRX
  407101:	cs cs cs pop rbp
  407105:	and    BYTE PTR [rbx+0x46],bl
  407108:	rex.WB
  407109:	rex.WR
  40710a:	rex.RB push r11
  40710c:	cs cs cs pop rbp
  407110:	or     cl,BYTE PTR [rdx]
  407112:	add    BYTE PTR [rax+0x65],cl
  407115:	ins    BYTE PTR es:[rdi],dx
  407116:	jo     0x407138
  407118:	rex.WRXB jo 0x40718f
  40711b:	imul   ebp,DWORD PTR [rdi+0x6e],0xa3a73
  407122:	add    BYTE PTR [rax],al
  407124:	add    BYTE PTR [rax],al
  407126:	add    BYTE PTR [rax],al
  407128:	and    BYTE PTR [rax],ah
  40712a:	sub    eax,0x2d202c68
  40712f:	sub    eax,0x706c6568
  407134:	and    BYTE PTR [rax],ah
  407136:	and    BYTE PTR [rax],ah
  407138:	and    BYTE PTR [rax],ah
  40713a:	and    BYTE PTR [rax],ah
  40713c:	and    BYTE PTR [rax],ah
  40713e:	and    BYTE PTR [rax],ah
  407140:	and    BYTE PTR [rax],ah
  407142:	and    BYTE PTR [rax],ah
  407144:	and    BYTE PTR [rbx+0x68],dl
  407147:	outs   dx,DWORD PTR ds:[rsi]
  407148:	ja     0x40716a
  40714a:	je     0x4071b4
  40714c:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  407153:	and    BYTE PTR [rbp+0x65],ch
  407156:	jae    0x4071cb
  407158:	(bad)  
  407159:	or     cl,BYTE PTR gs:[edx]
  40715d:	add    BYTE PTR [rbp+0x74],dl
  407160:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x704f2079
  407168:	je     0x4071d3
  40716a:	outs   dx,DWORD PTR ds:[rsi]
  40716b:	outs   dx,BYTE PTR ds:[rsi]
  40716c:	jae    0x4071a8
  40716e:	or     al,BYTE PTR [rax]
  407170:	and    BYTE PTR [rax],ah
  407172:	sub    eax,0x6165682d
  407177:	fs gs jb 0x40719b
  40717b:	and    BYTE PTR [rax],ah
  40717d:	and    BYTE PTR [rax],ah
  40717f:	and    BYTE PTR [rax],ah
  407181:	and    BYTE PTR [rax],ah
  407183:	and    BYTE PTR [rax],ah
  407185:	and    BYTE PTR [rax],ah
  407187:	and    BYTE PTR [rax],ah
  407189:	and    BYTE PTR [rax],ah
  40718b:	and    BYTE PTR [rax],ah
  40718d:	rex.RXB
  40718e:	outs   dx,BYTE PTR gs:[rsi]
  407190:	gs jb  0x4071f4
  407193:	je     0x4071fa
  407195:	and    BYTE PTR [rbx+0x20],al
  407198:	push   0x65646165
  40719d:	jb     0x407212
  40719f:	or     al,BYTE PTR [rax]
  4071a1:	add    BYTE PTR [rax],al
  4071a3:	add    BYTE PTR [rax],al
  4071a5:	add    BYTE PTR [rax],al
  4071a7:	add    BYTE PTR [rax],ah
  4071a9:	and    BYTE PTR [rip+0x646f622d],ch        # 0x64afd3dc
  4071af:	jns    0x4071d1
  4071b1:	and    BYTE PTR [rax],ah
  4071b3:	and    BYTE PTR [rax],ah
  4071b5:	and    BYTE PTR [rax],ah
  4071b7:	and    BYTE PTR [rax],ah
  4071b9:	and    BYTE PTR [rax],ah
  4071bb:	and    BYTE PTR [rax],ah
  4071bd:	and    BYTE PTR [rax],ah
  4071bf:	and    BYTE PTR [rax],ah
  4071c1:	and    BYTE PTR [rax],ah
  4071c3:	and    BYTE PTR [rax],ah
  4071c5:	rex.RXB
  4071c6:	outs   dx,BYTE PTR gs:[rsi]
  4071c8:	gs jb  0x40722c
  4071cb:	je     0x407232
  4071cd:	and    BYTE PTR [rbx+0x20],al
  4071d0:	movsxd ebp,DWORD PTR [rdi+0x64]
  4071d3:	or     al,BYTE PTR gs:[rax]
  4071d6:	add    BYTE PTR [rax],al
  4071d8:	and    BYTE PTR [rax],ah
  4071da:	sub    eax,0x6572702d
  4071df:	imul   di,WORD PTR [rax+0x3d],0x7473
  4071e5:	jb     0x407250
  4071e7:	outs   dx,BYTE PTR ds:[rsi]
  4071e8:	and    BYTE PTR [eax],ah
  4071eb:	and    BYTE PTR [rax],ah
  4071ed:	and    BYTE PTR [rax],ah
  4071ef:	and    BYTE PTR [rax],ah
  4071f1:	and    BYTE PTR [rax],ah
  4071f3:	and    BYTE PTR [rax],ah
  4071f5:	push   rbx
  4071f6:	jo     0x40725d
  4071f8:	movsxd ebp,DWORD PTR [rcx+0x66]
  4071fb:	jns    0x40721d
  4071fd:	ins    DWORD PTR es:[rdi],dx
  4071fe:	(bad)  
  4071ff:	jb     0x407274
  407201:	push   0x656c6c61
  407206:	jb     0x407228
  407208:	jo     0x40727c
  40720a:	imul   di,WORD PTR gs:[rax+0xa],0x2000
  407211:	and    BYTE PTR [rip+0x696b732d],ch        # 0x69abe544
  407217:	jo     0x407246
  407219:	jae    0x40728a
  40721b:	jne    0x40728f
  40721d:	movsxd esp,DWORD PTR [rbp+0x20]
  407220:	and    BYTE PTR [rax],ah
  407222:	and    BYTE PTR [rax],ah
  407224:	and    BYTE PTR [rax],ah
  407226:	and    BYTE PTR [rax],ah
  407228:	and    BYTE PTR [rax],ah
  40722a:	and    BYTE PTR [rax],ah
  40722c:	and    BYTE PTR [rbx+0x6b],dl
  40722f:	imul   esi,DWORD PTR [rax+0x20],0x72756f73
  407236:	movsxd esp,DWORD PTR [rbp+0x20]
  407239:	ins    BYTE PTR es:[rdi],dx
  40723a:	outs   dx,DWORD PTR ds:[rsi]
  40723b:	movsxd esp,DWORD PTR [rcx+0x74]
  40723e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f6320
  407245:	ins    DWORD PTR es:[rdi],dx
  407246:	outs   dx,BYTE PTR gs:[rsi]
  407248:	je     0x4072bd
  40724a:	or     al,BYTE PTR [rax]
  40724c:	add    BYTE PTR [rax],al
  40724e:	add    BYTE PTR [rax],al
  407250:	and    BYTE PTR [rax],ah
  407252:	sub    eax,0x6474732d
  407257:	imul   ebp,DWORD PTR [rsi+0x63],0x2d2d202c
  40725e:	outs   dx,BYTE PTR ds:[rsi]
  40725f:	outs   dx,DWORD PTR ds:[rsi]
  407260:	jae    0x4072d6
  407262:	imul   ebp,DWORD PTR fs:[rsi+0x63],0x20202020
  40726a:	and    BYTE PTR [rax],ah
  40726c:	and    BYTE PTR [rcx+0x6e],cl
  40726f:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  407273:	gs (bad) 
  407275:	jne    0x4072ea
  407277:	and    BYTE PTR gs:[rbx+0x74],dh
  40727b:	(bad)  
  40727c:	outs   dx,BYTE PTR ds:[rsi]
  40727d:	fs (bad) 
  40727f:	jb     0x4072e5
  407281:	and    BYTE PTR [rbp+0x61],ch
  407284:	jb     0x4072f9
  407286:	push   0x656c6c61
  40728b:	jb     0x407300
  40728d:	or     al,BYTE PTR [rax]
  40728f:	add    BYTE PTR [rax],ah
  407291:	and    BYTE PTR [rip+0x746e692d],ch        # 0x74aedbc4
  407297:	gs jb  0x407308
  40729a:	(bad)  
  40729b:	ins    BYTE PTR es:[rdi],dx
  40729c:	and    BYTE PTR [rax],ah
  40729e:	and    BYTE PTR [rax],ah
  4072a0:	and    BYTE PTR [rax],ah
  4072a2:	and    BYTE PTR [rax],ah
  4072a4:	and    BYTE PTR [rax],ah
  4072a6:	and    BYTE PTR [rax],ah
  4072a8:	and    BYTE PTR [rax],ah
  4072aa:	and    BYTE PTR [rax],ah
  4072ac:	and    BYTE PTR [rbp+0x61],cl
  4072af:	jb     0x40731c
  4072b1:	and    BYTE PTR [rdi+0x65],ah
  4072b4:	outs   dx,BYTE PTR ds:[rsi]
  4072b5:	gs jb  0x407319
  4072b8:	je     0x40731f
  4072ba:	and    BYTE PTR fs:[rsi+0x75],ah
  4072be:	outs   dx,BYTE PTR ds:[rsi]
  4072bf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4072c3:	outs   dx,BYTE PTR ds:[rsi]
  4072c4:	jae    0x4072e6
  4072c6:	(bad)  
  4072c7:	jae    0x4072e9
  4072c9:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
  4072d0:	ins    BYTE PTR es:[rdi],dx
  4072d1:	or     al,BYTE PTR [rax]
  4072d3:	add    BYTE PTR [rax],al
  4072d5:	add    BYTE PTR [rax],al
  4072d7:	add    BYTE PTR [rax],ah
  4072d9:	and    BYTE PTR [rip+0x6c61762d],ch        # 0x6ca1e90c
  4072df:	imul   esi,DWORD PTR [rbx+0x74],0x72616d2d
  4072e6:	jae    0x407350
  4072e8:	(bad)  
  4072e9:	ins    BYTE PTR es:[rdi],dx
  4072ea:	ins    BYTE PTR es:[rdi],dx
  4072eb:	gs jb  0x407361
  4072ee:	and    BYTE PTR [rax],ah
  4072f0:	and    BYTE PTR [rax],ah
  4072f2:	and    BYTE PTR [rax],ah
  4072f4:	and    BYTE PTR [rdi+0x65],al
  4072f7:	outs   dx,BYTE PTR ds:[rsi]
  4072f8:	gs jb  0x40735c
  4072fb:	je     0x407362
  4072fd:	and    BYTE PTR [rsi+0x61],dh
  407300:	pop    rdi
  407301:	ins    BYTE PTR es:[rdi],dx
  407302:	imul   esi,DWORD PTR [rbx+0x74],0x72616d20
  407309:	jae    0x407373
  40730b:	(bad)  
  40730c:	ins    BYTE PTR es:[rdi],dx
  40730d:	ins    BYTE PTR es:[rdi],dx
  40730e:	gs jb  0x407384
  407311:	or     al,BYTE PTR [rax]
  407313:	add    BYTE PTR [rax],al
  407315:	add    BYTE PTR [rax],al
  407317:	add    BYTE PTR [rax],ah
  407319:	and    BYTE PTR [rip+0x2d202c76],ch        # 0x2d609f95
  40731f:	sub    eax,0x73726576
  407324:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  40732b:	and    BYTE PTR [rax],ah
  40732d:	and    BYTE PTR [rax],ah
  40732f:	and    BYTE PTR [rax],ah
  407331:	and    BYTE PTR [rax],ah
  407333:	and    BYTE PTR [rax],ah
  407335:	push   rax
  407336:	jb     0x4073a1
  407338:	outs   dx,BYTE PTR ds:[rsi]
  407339:	je     0x40735b
  40733b:	jbe    0x4073a2
  40733d:	jb     0x4073b2
  40733f:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  407346:	outs   dx,DWORD PTR ds:[rsi]
  407347:	jb     0x4073b6
  407349:	(bad)  
  40734a:	je     0x4073b5
  40734c:	outs   dx,DWORD PTR ds:[rsi]
  40734d:	outs   dx,BYTE PTR ds:[rsi]
  40734e:	jae    0x40735a
	...
  407358:	and    BYTE PTR [rax],ah
  40735a:	sub    eax,0x662d672d
  40735f:	(bad)  
  407360:	je     0x4073c3
  407362:	ins    BYTE PTR es:[rdi],dx
  407363:	sub    eax,0x6e726177
  407368:	imul   ebp,DWORD PTR [rsi+0x67],0x20202073
  40736f:	and    BYTE PTR [rax],ah
  407371:	and    BYTE PTR [rax],ah
  407373:	and    BYTE PTR [rax],ah
  407375:	rex.WRB (bad) 
  407377:	imul   esp,DWORD PTR [rbp+0x20],0x77
  40737b:	(bad)  
  40737c:	jb     0x4073ec
  40737e:	imul   ebp,DWORD PTR [rsi+0x67],0x61662073
  407385:	je     0x4073e8
  407387:	ins    BYTE PTR es:[rdi],dx
  407388:	and    BYTE PTR [rax],ch
  40738a:	(bad)  
  40738b:	(bad)  
  40738c:	outs   dx,DWORD PTR ds:[rsi]
  40738d:	jb     0x407403
  40738f:	sub    DWORD PTR [rdx],ecx
  407391:	add    BYTE PTR [rip+0x2d2d003f],ch        # 0x2d6d73d6
  407397:	push   0x706c65
  40739c:	sub    eax,0x73250076
  4073a1:	and    BYTE PTR [rsi+0x65],dh
  4073a4:	jb     0x407419
  4073a6:	imul   ebp,DWORD PTR [rdi+0x6e],0x75250020
  4073ad:	cs and eax,0x75252e75
  4073b3:	add    BYTE PTR [rdx],cl
  4073b5:	add    BYTE PTR [rax],al
  4073b7:	add    BYTE PTR [rip+0x6f632073],ah        # 0x6fa39430
  4073bd:	ins    DWORD PTR es:[rdi],dx
  4073be:	gs jae 0x4073e1
  4073c1:	ja     0x40742c
  4073c3:	je     0x40742d
  4073c5:	and    BYTE PTR [rcx+0x42],al
  4073c8:	push   rbx
  4073c9:	rex.WRXB
  4073ca:	rex.WR push rbp
  4073cc:	push   rsp
  4073cd:	rex.RB
  4073ce:	rex.WR pop rcx
  4073d0:	and    BYTE PTR [rsi+0x4f],cl
  4073d3:	and    BYTE PTR [rdi+0x41],dl
  4073d6:	push   rdx
  4073d7:	push   rdx
  4073d8:	rex.B
  4073d9:	rex.WRX push rsp
  4073db:	pop    rcx
  4073dc:	or     al,BYTE PTR cs:[rax]
  4073df:	add    BYTE PTR [rcx+0x6f],bl
  4073e2:	jne    0x407404
  4073e4:	ins    DWORD PTR es:[rdi],dx
  4073e5:	(bad)  
  4073e6:	jns    0x407408
  4073e8:	jb     0x40744f
  4073ea:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  4073f2:	je     0x407459
  4073f4:	and    BYTE PTR [rbx+0x6f],ah
  4073f7:	jo     0x407462
  4073f9:	gs jae 0x40741c
  4073fc:	outs   dx,DWORD PTR ds:[rsi]
  4073fd:	data16 and BYTE PTR [rip+0x6e752073],ah        # 0x6eb59477
  407404:	fs gs jb 0x407428
  407408:	je     0x407472
  40740a:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  40740f:	ins    DWORD PTR es:[rdi],dx
  407410:	jae    0x407432
  407412:	outs   dx,DWORD PTR ds:[rsi]
  407413:	data16 or al,BYTE PTR [rax]
  407416:	add    BYTE PTR [rax],al
  407418:	je     0x407482
  40741a:	and    BYTE PTR gs:[rdi+0x4e],al
  40741e:	push   rbp
  40741f:	and    BYTE PTR [rdi+0x65],al
  407422:	outs   dx,BYTE PTR ds:[rsi]
  407423:	gs jb  0x407487
  407426:	ins    BYTE PTR es:[rdi],dx
  407427:	and    BYTE PTR [rax+0x75],dl
  40742a:	(bad)  
  40742b:	ins    BYTE PTR es:[rdi],dx
  40742c:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  407433:	outs   dx,BYTE PTR ds:[rsi]
  407434:	jae    0x40749b
  407436:	and    BYTE PTR [rdi+0x68],dh
  407439:	imul   esp,DWORD PTR [rbx+0x68],0x6e616320
  407440:	and    BYTE PTR [rdx+0x65],ah
  407443:	and    BYTE PTR [rsi+0x6f],ah
  407446:	jne    0x4074b6
  407448:	and    BYTE PTR fs:[rcx+0x6e],ch
  40744c:	and    BYTE PTR [rax+rbp*2+0x65],dh
  407450:	or     al,BYTE PTR [rax]
  407452:	rex.RXB
  407453:	imul   r12,QWORD PTR [rdx+0x0],0x20732500
  40745b:	jae    0x4074cc
  40745d:	jne    0x4074d1
  40745f:	movsxd esp,DWORD PTR [rbp+0x20]
  407462:	jo     0x4074c5
  407464:	movsxd ebp,DWORD PTR [rbx+0x61]
  407467:	gs and BYTE PTR cs:[ebx+0x6f],dl
  40746d:	jne    0x4074e1
  40746f:	movsxd esp,DWORD PTR [rbp+0x73]
  407472:	sub    al,0x20
  407474:	gs js  0x4074d8
  407477:	ins    DWORD PTR es:[rdi],dx
  407478:	jo     0x4074e6
  40747a:	gs jae 0x40749d
  40747d:	(bad)  
  40747e:	outs   dx,BYTE PTR ds:[rsi]
  40747f:	and    BYTE PTR fs:[rbx+0x6f],ah
  407483:	outs   dx,BYTE PTR ds:[rsi]
  407484:	je     0x4074e7
  407486:	movsxd esi,DWORD PTR [rdx+rcx*1+0x0]
  40748a:	push   0x3a707474
  40748f:	(bad)  
  407490:	(bad)  
  407491:	ja     0x40750a
  407493:	ja     0x4074c3
  407495:	addr32 je 0x407503
  407498:	outs   dx,DWORD PTR cs:[rsi]
  40749a:	jb     0x407503
  40749c:	add    BYTE PTR [rax],al
  40749e:	add    BYTE PTR [rax],al
  4074a0:	imul   ebp,DWORD PTR [rsi+0x66],0x616d726f
  4074a7:	je     0x407512
  4074a9:	outs   dx,DWORD PTR ds:[rsi]
  4074aa:	outs   dx,BYTE PTR ds:[rsi]
  4074ab:	and    BYTE PTR [rcx+0x72],ah
  4074ae:	and    BYTE PTR gs:[rcx+0x76],ah
  4074b2:	(bad)  
  4074b3:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6120656c
  4074bb:	je     0x4074dd
  4074bd:	and    eax,0x2d000a73
  4074c2:	sub    eax,0x73726576
  4074c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x672d2d00
  4074ce:	sub    eax,0x61746166
  4074d3:	ins    BYTE PTR es:[rdi],dx
  4074d4:	sub    eax,0x6e726177
  4074d9:	imul   ebp,DWORD PTR [rsi+0x67],0x642f0073
  4074e0:	gs jbe 0x407512
  4074e3:	jae    0x407559
  4074e5:	imul   ebp,DWORD PTR fs:[rsi+0x0],0x6e666923
  4074ed:	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
  4074f3:	and    eax,0x414d5f73
  4074f8:	push   rdx
  4074f9:	push   rbx
  4074fa:	rex.W
  4074fb:	rex.B
  4074fc:	rex.WR pop rdi
  4074fe:	rex.W pop rdi
  407500:	pop    rdi
  407501:	or     al,BYTE PTR [rax]
  407503:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  407507:	imul   ebp,DWORD PTR [rsi+0x65],0x255f5f20
  40750e:	jae    0x40756f
  407510:	rex.WRB
  407511:	push   r10
  407513:	push   rbx
  407514:	rex.W
  407515:	rex.B
  407516:	rex.WR pop rdi
  407518:	rex.W pop rdi
  40751a:	pop    rdi
  40751b:	or     cl,BYTE PTR [rdx]
  40751d:	add    BYTE PTR [rbx],ah
  40751f:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  407526:	or     DWORD PTR [rdi+riz*2],edi
  407529:	ins    BYTE PTR es:[rdi],dx
  40752a:	imul   esp,DWORD PTR [rdx+0x2d],0x656a626f
  407531:	movsxd esi,DWORD PTR [rsi+rbp*1+0x68]
  407535:	or     cl,BYTE PTR ds:[rdx]
  407538:	add    BYTE PTR [rdi+0x5f],al
  40753b:	rex.X
  40753c:	rex.RB
  40753d:	rex.RXB
  40753e:	rex.WB
  40753f:	rex.WRX pop rdi
  407541:	rex.R
  407542:	rex.RB
  407543:	rex.XB
  407544:	rex.WR push rbx
  407546:	or     al,BYTE PTR [rax]
  407548:	and    ebp,DWORD PTR [rcx+0x66]
  40754b:	fs data16 and BYTE PTR gs:[rdi+0x5f],al
  407551:	rex.RB
  407552:	rex.WRX
  407553:	rex.B
  407554:	rex.X
  407555:	rex.WR
  407556:	rex.RB pop r15
  407558:	rex.R
  407559:	rex.RB
  40755a:	rex.X push rbp
  40755c:	rex.RXB or r8b,BYTE PTR [r8]
  40755f:	add    BYTE PTR [rbx],ah
  407561:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407569:	pop    rdi
  40756a:	ins    DWORD PTR es:[rdi],dx
  40756b:	(bad)  
  40756c:	jb     0x4075e1
  40756e:	push   0x765f6c61
  407573:	(bad)  
  407574:	ins    BYTE PTR es:[rdi],dx
  407575:	jne    0x4075dc
  407577:	pop    rdi
  407578:	jo     0x4075df
  40757a:	imul   ebx,DWORD PTR gs:[rdi+0x62],0x6f
  40757f:	outs   dx,DWORD PTR ds:[rsi]
  407580:	ins    BYTE PTR es:[rdi],dx
  407581:	gs (bad) 
  407583:	outs   dx,BYTE PTR ds:[rsi]
  407584:	sub    BYTE PTR [rsi+0x29],dh
  407587:	and    BYTE PTR [rax],ah
  407589:	addr32 pop rdi
  40758b:	jbe    0x4075ee
  40758d:	ins    BYTE PTR es:[rdi],dx
  40758e:	jne    0x4075f5
  407590:	pop    rdi
  407591:	addr32 gs je 0x4075f4
  407595:	(bad)  
  407596:	outs   dx,DWORD PTR ds:[rsi]
  407597:	outs   dx,DWORD PTR ds:[rsi]
  407598:	ins    BYTE PTR es:[rdi],dx
  407599:	gs (bad) 
  40759b:	outs   dx,BYTE PTR ds:[rsi]
  40759c:	and    BYTE PTR [rax],ch
  40759e:	jbe    0x4075c9
  4075a0:	or     al,BYTE PTR [rax]
  4075a2:	add    BYTE PTR [rax],al
  4075a4:	add    BYTE PTR [rax],al
  4075a6:	add    BYTE PTR [rax],al
  4075a8:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4075ac:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  4075b3:	(bad)  
  4075b4:	jb     0x407629
  4075b6:	push   0x765f6c61
  4075bb:	(bad)  
  4075bc:	ins    BYTE PTR es:[rdi],dx
  4075bd:	jne    0x407624
  4075bf:	pop    rdi
  4075c0:	jo     0x407627
  4075c2:	imul   ebx,DWORD PTR gs:[rdi+0x63],0x68
  4075c7:	(bad)  
  4075c8:	jb     0x4075f2
  4075ca:	jbe    0x4075f5
  4075cc:	and    BYTE PTR [rax],ah
  4075ce:	and    BYTE PTR [rax],ah
  4075d0:	and    BYTE PTR [rdi+0x5f],ah
  4075d3:	jbe    0x407636
  4075d5:	ins    BYTE PTR es:[rdi],dx
  4075d6:	jne    0x40763d
  4075d8:	pop    rdi
  4075d9:	addr32 gs je 0x40763c
  4075dd:	jae    0x407642
  4075df:	push   0x28207261
  4075e4:	jbe    0x40760f
  4075e6:	or     al,BYTE PTR [rax]
  4075e8:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4075ec:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  4075f3:	(bad)  
  4075f4:	jb     0x407669
  4075f6:	push   0x765f6c61
  4075fb:	(bad)  
  4075fc:	ins    BYTE PTR es:[rdi],dx
  4075fd:	jne    0x407664
  4075ff:	pop    rdi
  407600:	jo     0x407667
  407602:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x63
  407607:	push   0x76287261
  40760c:	sub    DWORD PTR [rax],esp
  40760e:	and    BYTE PTR [rax],ah
  407610:	and    BYTE PTR [rdi+0x5f],ah
  407613:	jbe    0x407676
  407615:	ins    BYTE PTR es:[rdi],dx
  407616:	jne    0x40767d
  407618:	pop    rdi
  407619:	addr32 gs je 0x40767c
  40761d:	jne    0x407682
  40761f:	push   0x28207261
  407624:	jbe    0x40764f
  407626:	or     al,BYTE PTR [rax]
  407628:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  40762c:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407633:	(bad)  
  407634:	jb     0x4076a9
  407636:	push   0x765f6c61
  40763b:	(bad)  
  40763c:	ins    BYTE PTR es:[rdi],dx
  40763d:	jne    0x4076a4
  40763f:	pop    rdi
  407640:	jo     0x4076a7
  407642:	imul   ebx,DWORD PTR gs:[rdi+0x69],0x6e
  407647:	je     0x407671
  407649:	jbe    0x407674
  40764b:	and    BYTE PTR [rax],ah
  40764d:	and    BYTE PTR [rax],ah
  40764f:	and    BYTE PTR [rax],ah
  407651:	addr32 pop rdi
  407653:	jbe    0x4076b6
  407655:	ins    BYTE PTR es:[rdi],dx
  407656:	jne    0x4076bd
  407658:	pop    rdi
  407659:	addr32 gs je 0x4076bc
  40765d:	imul   ebp,DWORD PTR [rsi+0x74],0x29762820
  407664:	or     al,BYTE PTR [rax]
  407666:	add    BYTE PTR [rax],al
  407668:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  40766c:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407673:	(bad)  
  407674:	jb     0x4076e9
  407676:	push   0x765f6c61
  40767b:	(bad)  
  40767c:	ins    BYTE PTR es:[rdi],dx
  40767d:	jne    0x4076e4
  40767f:	pop    rdi
  407680:	jo     0x4076e7
  407682:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x69
  407687:	outs   dx,BYTE PTR ds:[rsi]
  407688:	je     0x4076b2
  40768a:	jbe    0x4076b5
  40768c:	and    BYTE PTR [rax],ah
  40768e:	and    BYTE PTR [rax],ah
  407690:	and    BYTE PTR [rdi+0x5f],ah
  407693:	jbe    0x4076f6
  407695:	ins    BYTE PTR es:[rdi],dx
  407696:	jne    0x4076fd
  407698:	pop    rdi
  407699:	addr32 gs je 0x4076fc
  40769d:	jne    0x407708
  40769f:	outs   dx,BYTE PTR ds:[rsi]
  4076a0:	je     0x4076c2
  4076a2:	sub    BYTE PTR [rsi+0x29],dh
  4076a5:	or     al,BYTE PTR [rax]
  4076a7:	add    BYTE PTR [rbx],ah
  4076a9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  4076b1:	pop    rdi
  4076b2:	ins    DWORD PTR es:[rdi],dx
  4076b3:	(bad)  
  4076b4:	jb     0x407729
  4076b6:	push   0x765f6c61
  4076bb:	(bad)  
  4076bc:	ins    BYTE PTR es:[rdi],dx
  4076bd:	jne    0x407724
  4076bf:	pop    rdi
  4076c0:	jo     0x407727
  4076c2:	imul   ebx,DWORD PTR gs:[rdi+0x6c],0x6f
  4076c7:	outs   dx,BYTE PTR ds:[rsi]
  4076c8:	sub    BYTE PTR [esi+0x29],dh
  4076cc:	and    BYTE PTR [rax],ah
  4076ce:	and    BYTE PTR [rax],ah
  4076d0:	and    BYTE PTR [rdi+0x5f],ah
  4076d3:	jbe    0x407736
  4076d5:	ins    BYTE PTR es:[rdi],dx
  4076d6:	jne    0x40773d
  4076d8:	pop    rdi
  4076d9:	addr32 gs je 0x40773c
  4076dd:	ins    BYTE PTR es:[rdi],dx
  4076de:	outs   dx,DWORD PTR ds:[rsi]
  4076df:	outs   dx,BYTE PTR ds:[rsi]
  4076e0:	and    BYTE PTR [eax],ch
  4076e3:	jbe    0x40770e
  4076e5:	or     al,BYTE PTR [rax]
  4076e7:	add    BYTE PTR [rbx],ah
  4076e9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  4076f1:	pop    rdi
  4076f2:	ins    DWORD PTR es:[rdi],dx
  4076f3:	(bad)  
  4076f4:	jb     0x407769
  4076f6:	push   0x765f6c61
  4076fb:	(bad)  
  4076fc:	ins    BYTE PTR es:[rdi],dx
  4076fd:	jne    0x407764
  4076ff:	pop    rdi
  407700:	jo     0x407767
  407702:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x6c
  407707:	outs   dx,DWORD PTR ds:[rsi]
  407708:	outs   dx,BYTE PTR ds:[rsi]
  407709:	sub    BYTE PTR [esi+0x29],dh
  40770d:	and    BYTE PTR [rax],ah
  40770f:	and    BYTE PTR [rax],ah
  407711:	addr32 pop rdi
  407713:	jbe    0x407776
  407715:	ins    BYTE PTR es:[rdi],dx
  407716:	jne    0x40777d
  407718:	pop    rdi
  407719:	addr32 gs je 0x40777c
  40771d:	jne    0x40778b
  40771f:	outs   dx,DWORD PTR ds:[rsi]
  407720:	outs   dx,BYTE PTR ds:[rsi]
  407721:	and    BYTE PTR [eax],ch
  407724:	jbe    0x40774f
  407726:	or     al,BYTE PTR [rax]
  407728:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  40772c:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407733:	(bad)  
  407734:	jb     0x4077a9
  407736:	push   0x765f6c61
  40773b:	(bad)  
  40773c:	ins    BYTE PTR es:[rdi],dx
  40773d:	jne    0x4077a4
  40773f:	pop    rdi
  407740:	jo     0x4077a7
  407742:	imul   ebx,DWORD PTR gs:[rdi+0x69],0x6e
  407747:	je     0x40777f
  407749:	xor    al,0x28
  40774b:	jbe    0x407776
  40774d:	and    BYTE PTR [rax],ah
  40774f:	and    BYTE PTR [rax],ah
  407751:	addr32 pop rdi
  407753:	jbe    0x4077b6
  407755:	ins    BYTE PTR es:[rdi],dx
  407756:	jne    0x4077bd
  407758:	pop    rdi
  407759:	addr32 gs je 0x4077bc
  40775d:	imul   ebp,DWORD PTR [rsi+0x74],0x28203436
  407764:	jbe    0x40778f
  407766:	or     al,BYTE PTR [rax]
  407768:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  40776c:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407773:	(bad)  
  407774:	jb     0x4077e9
  407776:	push   0x765f6c61
  40777b:	(bad)  
  40777c:	ins    BYTE PTR es:[rdi],dx
  40777d:	jne    0x4077e4
  40777f:	pop    rdi
  407780:	jo     0x4077e7
  407782:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x69
  407787:	outs   dx,BYTE PTR ds:[rsi]
  407788:	je     0x4077c0
  40778a:	xor    al,0x28
  40778c:	jbe    0x4077b7
  40778e:	and    BYTE PTR [rax],ah
  407790:	and    BYTE PTR [rdi+0x5f],ah
  407793:	jbe    0x4077f6
  407795:	ins    BYTE PTR es:[rdi],dx
  407796:	jne    0x4077fd
  407798:	pop    rdi
  407799:	addr32 gs je 0x4077fc
  40779d:	jne    0x407808
  40779f:	outs   dx,BYTE PTR ds:[rsi]
  4077a0:	je     0x4077d8
  4077a2:	xor    al,0x20
  4077a4:	sub    BYTE PTR [rsi+0x29],dh
  4077a7:	or     al,BYTE PTR [rax]
  4077a9:	add    BYTE PTR [rax],al
  4077ab:	add    BYTE PTR [rax],al
  4077ad:	add    BYTE PTR [rax],al
  4077af:	add    BYTE PTR [rbx],ah
  4077b1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  4077b9:	pop    rdi
  4077ba:	ins    DWORD PTR es:[rdi],dx
  4077bb:	(bad)  
  4077bc:	jb     0x407831
  4077be:	push   0x765f6c61
  4077c3:	(bad)  
  4077c4:	ins    BYTE PTR es:[rdi],dx
  4077c5:	jne    0x40782c
  4077c7:	pop    rdi
  4077c8:	jo     0x40782f
  4077ca:	imul   ebx,DWORD PTR gs:[rdi+0x65],0x6e
  4077cf:	jne    0x40783e
  4077d1:	sub    BYTE PTR [rsi+0x29],dh
  4077d4:	and    BYTE PTR [rax],ah
  4077d6:	and    BYTE PTR [rax],ah
  4077d8:	and    BYTE PTR [rdi+0x5f],ah
  4077db:	jbe    0x40783e
  4077dd:	ins    BYTE PTR es:[rdi],dx
  4077de:	jne    0x407845
  4077e0:	pop    rdi
  4077e1:	addr32 gs je 0x407844
  4077e5:	outs   dx,BYTE PTR gs:[rsi]
  4077e7:	jne    0x407856
  4077e9:	and    BYTE PTR [rax],ch
  4077eb:	jbe    0x407816
  4077ed:	or     al,BYTE PTR [rax]
  4077ef:	add    BYTE PTR [rbx],ah
  4077f1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  4077f9:	pop    rdi
  4077fa:	ins    DWORD PTR es:[rdi],dx
  4077fb:	(bad)  
  4077fc:	jb     0x407871
  4077fe:	push   0x765f6c61
  407803:	(bad)  
  407804:	ins    BYTE PTR es:[rdi],dx
  407805:	jne    0x40786c
  407807:	pop    rdi
  407808:	jo     0x40786f
  40780a:	imul   ebx,DWORD PTR gs:[rdi+0x66],0x6c
  40780f:	(bad)  
  407810:	addr32 jae 0x40783b
  407813:	jbe    0x40783e
  407815:	and    BYTE PTR [rax],ah
  407817:	and    BYTE PTR [rax],ah
  407819:	addr32 pop rdi
  40781b:	jbe    0x40787e
  40781d:	ins    BYTE PTR es:[rdi],dx
  40781e:	jne    0x407885
  407820:	pop    rdi
  407821:	addr32 gs je 0x407884
  407825:	data16 ins BYTE PTR es:[rdi],dx
  407827:	(bad)  
  407828:	addr32 jae 0x40784b
  40782b:	sub    BYTE PTR [rsi+0x29],dh
  40782e:	or     al,BYTE PTR [rax]
  407830:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  407834:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  40783b:	(bad)  
  40783c:	jb     0x4078b1
  40783e:	push   0x765f6c61
  407843:	(bad)  
  407844:	ins    BYTE PTR es:[rdi],dx
  407845:	jne    0x4078ac
  407847:	pop    rdi
  407848:	jo     0x4078af
  40784a:	imul   ebx,DWORD PTR gs:[rdi+0x66],0x6c
  40784f:	outs   dx,DWORD PTR ds:[rsi]
  407850:	(bad)  
  407851:	je     0x40787b
  407853:	jbe    0x40787e
  407855:	and    BYTE PTR [rax],ah
  407857:	and    BYTE PTR [rax],ah
  407859:	addr32 pop rdi
  40785b:	jbe    0x4078be
  40785d:	ins    BYTE PTR es:[rdi],dx
  40785e:	jne    0x4078c5
  407860:	pop    rdi
  407861:	addr32 gs je 0x4078c4
  407865:	data16 ins BYTE PTR es:[rdi],dx
  407867:	outs   dx,DWORD PTR ds:[rsi]
  407868:	(bad)  
  407869:	je     0x40788b
  40786b:	sub    BYTE PTR [rsi+0x29],dh
  40786e:	or     al,BYTE PTR [rax]
  407870:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  407874:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  40787b:	(bad)  
  40787c:	jb     0x4078f1
  40787e:	push   0x765f6c61
  407883:	(bad)  
  407884:	ins    BYTE PTR es:[rdi],dx
  407885:	jne    0x4078ec
  407887:	pop    rdi
  407888:	jo     0x4078ef
  40788a:	imul   ebx,DWORD PTR gs:[rdi+0x64],0x6f
  40788f:	jne    0x4078f3
  407891:	ins    BYTE PTR es:[rdi],dx
  407892:	sub    BYTE PTR gs:[rsi+0x29],dh
  407896:	and    BYTE PTR [rax],ah
  407898:	and    BYTE PTR [rdi+0x5f],ah
  40789b:	jbe    0x4078fe
  40789d:	ins    BYTE PTR es:[rdi],dx
  40789e:	jne    0x407905
  4078a0:	pop    rdi
  4078a1:	addr32 gs je 0x407904
  4078a5:	outs   dx,DWORD PTR fs:[rsi]
  4078a7:	jne    0x40790b
  4078a9:	ins    BYTE PTR es:[rdi],dx
  4078aa:	and    BYTE PTR gs:[rax],ch
  4078ad:	jbe    0x4078d8
  4078af:	or     al,BYTE PTR [rax]
  4078b1:	add    BYTE PTR [rax],al
  4078b3:	add    BYTE PTR [rax],al
  4078b5:	add    BYTE PTR [rax],al
  4078b7:	add    BYTE PTR [rbx],ah
  4078b9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  4078c1:	pop    rdi
  4078c2:	ins    DWORD PTR es:[rdi],dx
  4078c3:	(bad)  
  4078c4:	jb     0x407939
  4078c6:	push   0x765f6c61
  4078cb:	(bad)  
  4078cc:	ins    BYTE PTR es:[rdi],dx
  4078cd:	jne    0x407934
  4078cf:	pop    rdi
  4078d0:	jo     0x407937
  4078d2:	imul   ebx,DWORD PTR gs:[rdi+0x73],0x74
  4078d7:	jb     0x407942
  4078d9:	outs   dx,BYTE PTR ds:[rsi]
  4078da:	sub    BYTE PTR [esi+0x29],dh
  4078de:	and    BYTE PTR [rax],ah
  4078e0:	and    BYTE PTR [rax],ch
  4078e2:	movsxd ebp,DWORD PTR [rax+0x61]
  4078e5:	jb     0x407911
  4078e7:	sub    DWORD PTR [rax],esp
  4078e9:	addr32 pop rdi
  4078eb:	jbe    0x40794e
  4078ed:	ins    BYTE PTR es:[rdi],dx
  4078ee:	jne    0x407955
  4078f0:	pop    rdi
  4078f1:	addr32 gs je 0x407954
  4078f5:	jae    0x40796b
  4078f7:	jb     0x407962
  4078f9:	outs   dx,BYTE PTR ds:[rsi]
  4078fa:	and    BYTE PTR [eax],ch
  4078fd:	jbe    0x407928
  4078ff:	or     al,BYTE PTR [rax]
  407901:	add    BYTE PTR [rax],al
  407903:	add    BYTE PTR [rax],al
  407905:	add    BYTE PTR [rax],al
  407907:	add    BYTE PTR [rbx],ah
  407909:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407911:	pop    rdi
  407912:	ins    DWORD PTR es:[rdi],dx
  407913:	(bad)  
  407914:	jb     0x407989
  407916:	push   0x765f6c61
  40791b:	(bad)  
  40791c:	ins    BYTE PTR es:[rdi],dx
  40791d:	jne    0x407984
  40791f:	pop    rdi
  407920:	jo     0x407987
  407922:	imul   ebx,DWORD PTR gs:[rdi+0x70],0x61
  407927:	jb     0x40798a
  407929:	ins    DWORD PTR es:[rdi],dx
  40792a:	sub    BYTE PTR [rsi+0x29],dh
  40792d:	and    BYTE PTR [rax],ah
  40792f:	and    BYTE PTR [rax],ah
  407931:	addr32 pop rdi
  407933:	jbe    0x407996
  407935:	ins    BYTE PTR es:[rdi],dx
  407936:	jne    0x40799d
  407938:	pop    rdi
  407939:	addr32 gs je 0x40799c
  40793d:	jo     0x4079a0
  40793f:	jb     0x4079a2
  407941:	ins    DWORD PTR es:[rdi],dx
  407942:	and    BYTE PTR [rax],ch
  407944:	jbe    0x40796f
  407946:	or     al,BYTE PTR [rax]
  407948:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  40794c:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407953:	(bad)  
  407954:	jb     0x4079c9
  407956:	push   0x765f6c61
  40795b:	(bad)  
  40795c:	ins    BYTE PTR es:[rdi],dx
  40795d:	jne    0x4079c4
  40795f:	pop    rdi
  407960:	jo     0x4079c7
  407962:	imul   ebx,DWORD PTR gs:[rdi+0x62],0x6f
  407967:	js     0x4079ce
  407969:	sub    BYTE PTR fs:[rsi+0x29],dh
  40796d:	and    BYTE PTR [rax],ah
  40796f:	and    BYTE PTR [rax],ah
  407971:	addr32 pop rdi
  407973:	jbe    0x4079d6
  407975:	ins    BYTE PTR es:[rdi],dx
  407976:	jne    0x4079dd
  407978:	pop    rdi
  407979:	addr32 gs je 0x4079dc
  40797d:	(bad)  
  40797e:	outs   dx,DWORD PTR ds:[rsi]
  40797f:	js     0x4079e6
  407981:	and    BYTE PTR fs:[rax],ch
  407984:	jbe    0x4079af
  407986:	or     al,BYTE PTR [rax]
  407988:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  40798c:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407993:	(bad)  
  407994:	jb     0x407a09
  407996:	push   0x765f6c61
  40799b:	(bad)  
  40799c:	ins    BYTE PTR es:[rdi],dx
  40799d:	jne    0x407a04
  40799f:	pop    rdi
  4079a0:	jo     0x407a07
  4079a2:	imul   ebx,DWORD PTR gs:[rdi+0x70],0x6f
  4079a7:	imul   ebp,DWORD PTR [rsi+0x74],0x76287265
  4079ae:	sub    DWORD PTR [rax],esp
  4079b0:	and    BYTE PTR [rdi+0x5f],ah
  4079b3:	jbe    0x407a16
  4079b5:	ins    BYTE PTR es:[rdi],dx
  4079b6:	jne    0x407a1d
  4079b8:	pop    rdi
  4079b9:	addr32 gs je 0x407a1c
  4079bd:	jo     0x407a2e
  4079bf:	imul   ebp,DWORD PTR [rsi+0x74],0x28207265
  4079c6:	jbe    0x4079f1
  4079c8:	or     al,BYTE PTR [rax]
  4079ca:	add    BYTE PTR [rax],al
  4079cc:	add    BYTE PTR [rax],al
  4079ce:	add    BYTE PTR [rax],al
  4079d0:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  4079d4:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  4079db:	(bad)  
  4079dc:	jb     0x407a51
  4079de:	push   0x765f6c61
  4079e3:	(bad)  
  4079e4:	ins    BYTE PTR es:[rdi],dx
  4079e5:	jne    0x407a4c
  4079e7:	pop    rdi
  4079e8:	jo     0x407a4f
  4079ea:	imul   ebx,DWORD PTR gs:[rdi+0x6f],0x62
  4079ef:	push   0x65
  4079f1:	movsxd esi,DWORD PTR [rax+rbp*1+0x76]
  4079f5:	sub    DWORD PTR [rax],esp
  4079f7:	and    BYTE PTR [rax],ah
  4079f9:	addr32 pop rdi
  4079fb:	jbe    0x407a5e
  4079fd:	ins    BYTE PTR es:[rdi],dx
  4079fe:	jne    0x407a65
  407a00:	pop    rdi
  407a01:	addr32 gs je 0x407a64
  407a05:	outs   dx,DWORD PTR ds:[rsi]
  407a06:	(bad)  
  407a07:	push   0x65
  407a09:	movsxd esi,DWORD PTR [rax+riz*1+0x28]
  407a0d:	jbe    0x407a38
  407a0f:	or     al,BYTE PTR [rax]
  407a11:	add    BYTE PTR [rax],al
  407a13:	add    BYTE PTR [rax],al
  407a15:	add    BYTE PTR [rax],al
  407a17:	add    BYTE PTR [rbx],ah
  407a19:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407a21:	pop    rdi
  407a22:	ins    DWORD PTR es:[rdi],dx
  407a23:	(bad)  
  407a24:	jb     0x407a99
  407a26:	push   0x765f6c61
  407a2b:	(bad)  
  407a2c:	ins    BYTE PTR es:[rdi],dx
  407a2d:	jne    0x407a94
  407a2f:	pop    rdi
  407a30:	jo     0x407a97
  407a32:	imul   ebx,DWORD PTR gs:[rdi+0x76],0x61
  407a37:	jb     0x407aa2
  407a39:	(bad)  
  407a3a:	outs   dx,BYTE PTR ds:[rsi]
  407a3b:	je     0x407a65
  407a3d:	jbe    0x407a68
  407a3f:	and    BYTE PTR [rax],ah
  407a41:	addr32 pop rdi
  407a43:	jbe    0x407aa6
  407a45:	ins    BYTE PTR es:[rdi],dx
  407a46:	jne    0x407aad
  407a48:	pop    rdi
  407a49:	addr32 gs je 0x407aac
  407a4d:	jbe    0x407ab0
  407a4f:	jb     0x407aba
  407a51:	(bad)  
  407a52:	outs   dx,BYTE PTR ds:[rsi]
  407a53:	je     0x407a75
  407a55:	sub    BYTE PTR [rsi+0x29],dh
  407a58:	or     al,BYTE PTR [rax]
  407a5a:	and    esp,DWORD PTR [rbp+0x6c]
  407a5d:	jae    0x407ac4
  407a5f:	and    BYTE PTR [rdi],ch
  407a61:	sub    ah,BYTE PTR [rax]
  407a63:	and    DWORD PTR [rdi+0x5f],eax
  407a66:	rex.RB
  407a67:	rex.WRX
  407a68:	rex.B
  407a69:	rex.X
  407a6a:	rex.WR
  407a6b:	rex.RB pop r15
  407a6d:	rex.R
  407a6e:	rex.RB
  407a6f:	rex.X push rbp
  407a71:	rex.RXB and BYTE PTR [r10],r13b
  407a74:	(bad)  
  407a75:	or     al,BYTE PTR [rax]
  407a77:	add    BYTE PTR [rdi],ch
  407a79:	sub    ah,BYTE PTR [rax]
  407a7b:	push   rdi
  407a7c:	push   r10
  407a7e:	rex.WRX
  407a7f:	rex.WB
  407a80:	rex.WRX
  407a81:	rex.RXB cmp r12b,BYTE PTR [r8]
  407a84:	push   rsp
  407a85:	push   0x63207369
  407a8a:	outs   dx,DWORD PTR ds:[rsi]
  407a8b:	fs and BYTE PTR gs:[rcx+0x63],ah
  407a90:	movsxd esp,DWORD PTR [rbp+0x73]
  407a93:	jae    0x407afa
  407a95:	jae    0x407ab7
  407a97:	rex.RXB push r14
  407a99:	(bad)  
  407a9a:	ins    BYTE PTR es:[rdi],dx
  407a9b:	jne    0x407b02
  407a9d:	jae    0x407abf
  407a9f:	imul   esi,DWORD PTR fs:[rdx+0x65],0x796c7463
  407aa7:	sub    al,0x20
  407aa9:	ja     0x407b13
  407aab:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
  407ab2:	push   rbp
  407ab3:	rex.WRX push rbx
  407ab5:	push   rbp
  407ab6:	push   rax
  407ab7:	push   rax
  407ab8:	rex.WRXB push r10
  407aba:	push   rsp
  407abb:	rex.RB
  407abc:	and    BYTE PTR [rcx+0x50],r8b
  407ac0:	rex.WB
  407ac1:	or     al,BYTE PTR cs:[rax]
  407ac4:	add    BYTE PTR [rax],al
  407ac6:	add    BYTE PTR [rax],al
  407ac8:	and    BYTE PTR [rdx],ch
  407aca:	and    BYTE PTR [rax],ah
  407acc:	and    BYTE PTR [rax],ah
  407ace:	and    BYTE PTR [rax],ah
  407ad0:	and    BYTE PTR [rax],ah
  407ad2:	and    BYTE PTR [rax],ah
  407ad4:	rex.R outs dx,DWORD PTR ds:[rsi]
  407ad6:	and    BYTE PTR [rsi+0x6f],ch
  407ad9:	je     0x407afb
  407adb:	(bad)  
  407adc:	movsxd esp,DWORD PTR [rbx+0x65]
  407adf:	jae    0x407b54
  407ae1:	and    BYTE PTR [rdi+0x56],al
  407ae4:	(bad)  
  407ae5:	ins    BYTE PTR es:[rdi],dx
  407ae6:	jne    0x407b4d
  407ae8:	jae    0x407b0a
  407aea:	imul   esi,DWORD PTR fs:[rdx+0x65],0x796c7463
  407af2:	and    BYTE PTR [rcx+0x6e],ch
  407af5:	and    BYTE PTR [rcx+0x6f],bh
  407af8:	jne    0x407b6c
  407afa:	and    BYTE PTR [rbx+0x6f],ah
  407afd:	fs gs and BYTE PTR cs:[rcx+0x6e],cl
  407b03:	jae    0x407b79
  407b05:	gs (bad) 
  407b07:	fs sub al,0x20
  407b0a:	jne    0x407b7f
  407b0c:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  407b11:	or     al,BYTE PTR [rax]
  407b13:	add    BYTE PTR [rax],al
  407b15:	add    BYTE PTR [rax],al
  407b17:	add    BYTE PTR [rax],ah
  407b19:	sub    ah,BYTE PTR [rax]
  407b1b:	and    BYTE PTR [rax],ah
  407b1d:	and    BYTE PTR [rax],ah
  407b1f:	and    BYTE PTR [rax],ah
  407b21:	and    BYTE PTR [rax],ah
  407b23:	and    BYTE PTR [rdi+0x5f],ah
  407b26:	jbe    0x407b89
  407b28:	ins    BYTE PTR es:[rdi],dx
  407b29:	jne    0x407b90
  407b2b:	pop    rdi
  407b2c:	addr32 gs je 0x407b8f
  407b30:	sub    ch,BYTE PTR [rax]
  407b32:	sub    DWORD PTR [rax],esp
  407b34:	data16 jne 0x407ba5
  407b37:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  407b3b:	outs   dx,BYTE PTR ds:[rsi]
  407b3c:	jae    0x407b48
  407b3e:	add    BYTE PTR [rax],ah
  407b40:	sub    ch,BYTE PTR [rdi]
  407b42:	or     al,BYTE PTR [rax]
  407b44:	add    BYTE PTR [rax],al
  407b46:	add    BYTE PTR [rax],al
  407b48:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  407b4c:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407b53:	(bad)  
  407b54:	jb     0x407bc9
  407b56:	push   0x765f6c61
  407b5b:	(bad)  
  407b5c:	ins    BYTE PTR es:[rdi],dx
  407b5d:	jne    0x407bc4
  407b5f:	pop    rdi
  407b60:	jo     0x407bc7
  407b62:	imul   ebx,DWORD PTR gs:[rdi+0x62],0x6f
  407b67:	outs   dx,DWORD PTR ds:[rsi]
  407b68:	ins    BYTE PTR es:[rdi],dx
  407b69:	gs (bad) 
  407b6b:	outs   dx,BYTE PTR ds:[rsi]
  407b6c:	sub    BYTE PTR [rsi+0x29],dh
  407b6f:	and    BYTE PTR [rax],ah
  407b71:	sub    BYTE PTR [rsi+0x29],dh
  407b74:	sub    eax,0x7461643e
  407b79:	(bad)  
  407b7a:	pop    rbx
  407b7b:	xor    BYTE PTR [rbp+0x2e],bl
  407b7e:	jbe    0x407bdf
  407b80:	imul   ebp,DWORD PTR [rsi+0x74],0xa
  407b87:	add    BYTE PTR [rbx],ah
  407b89:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407b91:	pop    rdi
  407b92:	ins    DWORD PTR es:[rdi],dx
  407b93:	(bad)  
  407b94:	jb     0x407c09
  407b96:	push   0x765f6c61
  407b9b:	(bad)  
  407b9c:	ins    BYTE PTR es:[rdi],dx
  407b9d:	jne    0x407c04
  407b9f:	pop    rdi
  407ba0:	jo     0x407c07
  407ba2:	imul   ebx,DWORD PTR gs:[rdi+0x63],0x68
  407ba7:	(bad)  
  407ba8:	jb     0x407bd2
  407baa:	jbe    0x407bd5
  407bac:	and    BYTE PTR [rax],ah
  407bae:	and    BYTE PTR [rax],ah
  407bb0:	and    BYTE PTR [rax],ch
  407bb2:	jbe    0x407bdd
  407bb4:	sub    eax,0x7461643e
  407bb9:	(bad)  
  407bba:	pop    rbx
  407bbb:	xor    BYTE PTR [rbp+0x2e],bl
  407bbe:	jbe    0x407c1f
  407bc0:	imul   ebp,DWORD PTR [rsi+0x74],0xa
  407bc7:	add    BYTE PTR [rbx],ah
  407bc9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407bd1:	pop    rdi
  407bd2:	ins    DWORD PTR es:[rdi],dx
  407bd3:	(bad)  
  407bd4:	jb     0x407c49
  407bd6:	push   0x765f6c61
  407bdb:	(bad)  
  407bdc:	ins    BYTE PTR es:[rdi],dx
  407bdd:	jne    0x407c44
  407bdf:	pop    rdi
  407be0:	jo     0x407c47
  407be2:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x63
  407be7:	push   0x76287261
  407bec:	sub    DWORD PTR [rax],esp
  407bee:	and    BYTE PTR [rax],ah
  407bf0:	and    BYTE PTR [rax],ch
  407bf2:	jbe    0x407c1d
  407bf4:	sub    eax,0x7461643e
  407bf9:	(bad)  
  407bfa:	pop    rbx
  407bfb:	xor    BYTE PTR [rbp+0x2e],bl
  407bfe:	jbe    0x407c5f
  407c00:	jne    0x407c6b
  407c02:	outs   dx,BYTE PTR ds:[rsi]
  407c03:	je     0x407c0f
  407c05:	add    BYTE PTR [rax],al
  407c07:	add    BYTE PTR [rbx],ah
  407c09:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407c11:	pop    rdi
  407c12:	ins    DWORD PTR es:[rdi],dx
  407c13:	(bad)  
  407c14:	jb     0x407c89
  407c16:	push   0x765f6c61
  407c1b:	(bad)  
  407c1c:	ins    BYTE PTR es:[rdi],dx
  407c1d:	jne    0x407c84
  407c1f:	pop    rdi
  407c20:	jo     0x407c87
  407c22:	imul   ebx,DWORD PTR gs:[rdi+0x69],0x6e
  407c27:	je     0x407c51
  407c29:	jbe    0x407c54
  407c2b:	and    BYTE PTR [rax],ah
  407c2d:	and    BYTE PTR [rax],ah
  407c2f:	and    BYTE PTR [rax],ah
  407c31:	sub    BYTE PTR [rsi+0x29],dh
  407c34:	sub    eax,0x7461643e
  407c39:	(bad)  
  407c3a:	pop    rbx
  407c3b:	xor    BYTE PTR [rbp+0x2e],bl
  407c3e:	jbe    0x407c9f
  407c40:	imul   ebp,DWORD PTR [rsi+0x74],0xa
  407c47:	add    BYTE PTR [rbx],ah
  407c49:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407c51:	pop    rdi
  407c52:	ins    DWORD PTR es:[rdi],dx
  407c53:	(bad)  
  407c54:	jb     0x407cc9
  407c56:	push   0x765f6c61
  407c5b:	(bad)  
  407c5c:	ins    BYTE PTR es:[rdi],dx
  407c5d:	jne    0x407cc4
  407c5f:	pop    rdi
  407c60:	jo     0x407cc7
  407c62:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x69
  407c67:	outs   dx,BYTE PTR ds:[rsi]
  407c68:	je     0x407c92
  407c6a:	jbe    0x407c95
  407c6c:	and    BYTE PTR [rax],ah
  407c6e:	and    BYTE PTR [rax],ah
  407c70:	and    BYTE PTR [rax],ch
  407c72:	jbe    0x407c9d
  407c74:	sub    eax,0x7461643e
  407c79:	(bad)  
  407c7a:	pop    rbx
  407c7b:	xor    BYTE PTR [rbp+0x2e],bl
  407c7e:	jbe    0x407cdf
  407c80:	jne    0x407ceb
  407c82:	outs   dx,BYTE PTR ds:[rsi]
  407c83:	je     0x407c8f
  407c85:	add    BYTE PTR [rax],al
  407c87:	add    BYTE PTR [rbx],ah
  407c89:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407c91:	pop    rdi
  407c92:	ins    DWORD PTR es:[rdi],dx
  407c93:	(bad)  
  407c94:	jb     0x407d09
  407c96:	push   0x765f6c61
  407c9b:	(bad)  
  407c9c:	ins    BYTE PTR es:[rdi],dx
  407c9d:	jne    0x407d04
  407c9f:	pop    rdi
  407ca0:	jo     0x407d07
  407ca2:	imul   ebx,DWORD PTR gs:[rdi+0x6c],0x6f
  407ca7:	outs   dx,BYTE PTR ds:[rsi]
  407ca8:	sub    BYTE PTR [esi+0x29],dh
  407cac:	and    BYTE PTR [rax],ah
  407cae:	and    BYTE PTR [rax],ah
  407cb0:	and    BYTE PTR [rax],ch
  407cb2:	jbe    0x407cdd
  407cb4:	sub    eax,0x7461643e
  407cb9:	(bad)  
  407cba:	pop    rbx
  407cbb:	xor    BYTE PTR [rbp+0x2e],bl
  407cbe:	jbe    0x407d1f
  407cc0:	ins    BYTE PTR es:[rdi],dx
  407cc1:	outs   dx,DWORD PTR ds:[rsi]
  407cc2:	outs   dx,BYTE PTR ds:[rsi]
  407cc3:	or     al,BYTE PTR [eax]
  407cc6:	add    BYTE PTR [rax],al
  407cc8:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  407ccc:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407cd3:	(bad)  
  407cd4:	jb     0x407d49
  407cd6:	push   0x765f6c61
  407cdb:	(bad)  
  407cdc:	ins    BYTE PTR es:[rdi],dx
  407cdd:	jne    0x407d44
  407cdf:	pop    rdi
  407ce0:	jo     0x407d47
  407ce2:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x6c
  407ce7:	outs   dx,DWORD PTR ds:[rsi]
  407ce8:	outs   dx,BYTE PTR ds:[rsi]
  407ce9:	sub    BYTE PTR [esi+0x29],dh
  407ced:	and    BYTE PTR [rax],ah
  407cef:	and    BYTE PTR [rax],ah
  407cf1:	sub    BYTE PTR [rsi+0x29],dh
  407cf4:	sub    eax,0x7461643e
  407cf9:	(bad)  
  407cfa:	pop    rbx
  407cfb:	xor    BYTE PTR [rbp+0x2e],bl
  407cfe:	jbe    0x407d5f
  407d00:	jne    0x407d6e
  407d02:	outs   dx,DWORD PTR ds:[rsi]
  407d03:	outs   dx,BYTE PTR ds:[rsi]
  407d04:	or     al,BYTE PTR [eax]
  407d07:	add    BYTE PTR [rbx],ah
  407d09:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407d11:	pop    rdi
  407d12:	ins    DWORD PTR es:[rdi],dx
  407d13:	(bad)  
  407d14:	jb     0x407d89
  407d16:	push   0x765f6c61
  407d1b:	(bad)  
  407d1c:	ins    BYTE PTR es:[rdi],dx
  407d1d:	jne    0x407d84
  407d1f:	pop    rdi
  407d20:	jo     0x407d87
  407d22:	imul   ebx,DWORD PTR gs:[rdi+0x69],0x6e
  407d27:	je     0x407d5f
  407d29:	xor    al,0x28
  407d2b:	jbe    0x407d56
  407d2d:	and    BYTE PTR [rax],ah
  407d2f:	and    BYTE PTR [rax],ah
  407d31:	sub    BYTE PTR [rsi+0x29],dh
  407d34:	sub    eax,0x7461643e
  407d39:	(bad)  
  407d3a:	pop    rbx
  407d3b:	xor    BYTE PTR [rbp+0x2e],bl
  407d3e:	jbe    0x407d9f
  407d40:	imul   ebp,DWORD PTR [rsi+0x74],0xa3436
  407d47:	add    BYTE PTR [rbx],ah
  407d49:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407d51:	pop    rdi
  407d52:	ins    DWORD PTR es:[rdi],dx
  407d53:	(bad)  
  407d54:	jb     0x407dc9
  407d56:	push   0x765f6c61
  407d5b:	(bad)  
  407d5c:	ins    BYTE PTR es:[rdi],dx
  407d5d:	jne    0x407dc4
  407d5f:	pop    rdi
  407d60:	jo     0x407dc7
  407d62:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x69
  407d67:	outs   dx,BYTE PTR ds:[rsi]
  407d68:	je     0x407da0
  407d6a:	xor    al,0x28
  407d6c:	jbe    0x407d97
  407d6e:	and    BYTE PTR [rax],ah
  407d70:	and    BYTE PTR [rax],ch
  407d72:	jbe    0x407d9d
  407d74:	sub    eax,0x7461643e
  407d79:	(bad)  
  407d7a:	pop    rbx
  407d7b:	xor    BYTE PTR [rbp+0x2e],bl
  407d7e:	jbe    0x407ddf
  407d80:	jne    0x407deb
  407d82:	outs   dx,BYTE PTR ds:[rsi]
  407d83:	je     0x407dbb
  407d85:	xor    al,0xa
  407d87:	add    BYTE PTR [rbx],ah
  407d89:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407d91:	pop    rdi
  407d92:	ins    DWORD PTR es:[rdi],dx
  407d93:	(bad)  
  407d94:	jb     0x407e09
  407d96:	push   0x765f6c61
  407d9b:	(bad)  
  407d9c:	ins    BYTE PTR es:[rdi],dx
  407d9d:	jne    0x407e04
  407d9f:	pop    rdi
  407da0:	jo     0x407e07
  407da2:	imul   ebx,DWORD PTR gs:[rdi+0x65],0x6e
  407da7:	jne    0x407e16
  407da9:	sub    BYTE PTR [rsi+0x29],dh
  407dac:	and    BYTE PTR [rax],ah
  407dae:	and    BYTE PTR [rax],ah
  407db0:	and    BYTE PTR [rax],ch
  407db2:	jbe    0x407ddd
  407db4:	sub    eax,0x7461643e
  407db9:	(bad)  
  407dba:	pop    rbx
  407dbb:	xor    BYTE PTR [rbp+0x2e],bl
  407dbe:	jbe    0x407e1f
  407dc0:	ins    BYTE PTR es:[rdi],dx
  407dc1:	outs   dx,DWORD PTR ds:[rsi]
  407dc2:	outs   dx,BYTE PTR ds:[rsi]
  407dc3:	or     al,BYTE PTR [eax]
  407dc6:	add    BYTE PTR [rax],al
  407dc8:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  407dcc:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407dd3:	(bad)  
  407dd4:	jb     0x407e49
  407dd6:	push   0x765f6c61
  407ddb:	(bad)  
  407ddc:	ins    BYTE PTR es:[rdi],dx
  407ddd:	jne    0x407e44
  407ddf:	pop    rdi
  407de0:	jo     0x407e47
  407de2:	imul   ebx,DWORD PTR gs:[rdi+0x66],0x6c
  407de7:	(bad)  
  407de8:	addr32 jae 0x407e13
  407deb:	jbe    0x407e16
  407ded:	and    BYTE PTR [rax],ah
  407def:	and    BYTE PTR [rax],ah
  407df1:	sub    BYTE PTR [rsi+0x29],dh
  407df4:	sub    eax,0x7461643e
  407df9:	(bad)  
  407dfa:	pop    rbx
  407dfb:	xor    BYTE PTR [rbp+0x2e],bl
  407dfe:	jbe    0x407e5f
  407e00:	jne    0x407e6e
  407e02:	outs   dx,DWORD PTR ds:[rsi]
  407e03:	outs   dx,BYTE PTR ds:[rsi]
  407e04:	or     al,BYTE PTR [eax]
  407e07:	add    BYTE PTR [rbx],ah
  407e09:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407e11:	pop    rdi
  407e12:	ins    DWORD PTR es:[rdi],dx
  407e13:	(bad)  
  407e14:	jb     0x407e89
  407e16:	push   0x765f6c61
  407e1b:	(bad)  
  407e1c:	ins    BYTE PTR es:[rdi],dx
  407e1d:	jne    0x407e84
  407e1f:	pop    rdi
  407e20:	jo     0x407e87
  407e22:	imul   ebx,DWORD PTR gs:[rdi+0x66],0x6c
  407e27:	outs   dx,DWORD PTR ds:[rsi]
  407e28:	(bad)  
  407e29:	je     0x407e53
  407e2b:	jbe    0x407e56
  407e2d:	and    BYTE PTR [rax],ah
  407e2f:	and    BYTE PTR [rax],ah
  407e31:	sub    BYTE PTR [rsi+0x29],dh
  407e34:	sub    eax,0x7461643e
  407e39:	(bad)  
  407e3a:	pop    rbx
  407e3b:	xor    BYTE PTR [rbp+0x2e],bl
  407e3e:	jbe    0x407e9f
  407e40:	data16 ins BYTE PTR es:[rdi],dx
  407e42:	outs   dx,DWORD PTR ds:[rsi]
  407e43:	(bad)  
  407e44:	je     0x407e50
  407e46:	add    BYTE PTR [rax],al
  407e48:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  407e4c:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407e53:	(bad)  
  407e54:	jb     0x407ec9
  407e56:	push   0x765f6c61
  407e5b:	(bad)  
  407e5c:	ins    BYTE PTR es:[rdi],dx
  407e5d:	jne    0x407ec4
  407e5f:	pop    rdi
  407e60:	jo     0x407ec7
  407e62:	imul   ebx,DWORD PTR gs:[rdi+0x64],0x6f
  407e67:	jne    0x407ecb
  407e69:	ins    BYTE PTR es:[rdi],dx
  407e6a:	sub    BYTE PTR gs:[rsi+0x29],dh
  407e6e:	and    BYTE PTR [rax],ah
  407e70:	and    BYTE PTR [rax],ch
  407e72:	jbe    0x407e9d
  407e74:	sub    eax,0x7461643e
  407e79:	(bad)  
  407e7a:	pop    rbx
  407e7b:	xor    BYTE PTR [rbp+0x2e],bl
  407e7e:	jbe    0x407edf
  407e80:	outs   dx,DWORD PTR fs:[rsi]
  407e82:	jne    0x407ee6
  407e84:	ins    BYTE PTR es:[rdi],dx
  407e85:	or     al,BYTE PTR gs:[rax]
  407e88:	and    esp,DWORD PTR [rbp+riz*2+0x66]
  407e8c:	imul   ebp,DWORD PTR [rsi+0x65],0x6d5f6720
  407e93:	(bad)  
  407e94:	jb     0x407f09
  407e96:	push   0x765f6c61
  407e9b:	(bad)  
  407e9c:	ins    BYTE PTR es:[rdi],dx
  407e9d:	jne    0x407f04
  407e9f:	pop    rdi
  407ea0:	jo     0x407f07
  407ea2:	imul   ebx,DWORD PTR gs:[rdi+0x73],0x74
  407ea7:	jb     0x407f12
  407ea9:	outs   dx,BYTE PTR ds:[rsi]
  407eaa:	sub    BYTE PTR [esi+0x29],dh
  407eae:	and    BYTE PTR [rax],ah
  407eb0:	and    BYTE PTR [rax],ch
  407eb2:	jbe    0x407edd
  407eb4:	sub    eax,0x7461643e
  407eb9:	(bad)  
  407eba:	pop    rbx
  407ebb:	xor    BYTE PTR [rbp+0x2e],bl
  407ebe:	jbe    0x407f1f
  407ec0:	jo     0x407f31
  407ec2:	imul   ebp,DWORD PTR [rsi+0x74],0xa7265
  407ec9:	add    BYTE PTR [rax],al
  407ecb:	add    BYTE PTR [rax],al
  407ecd:	add    BYTE PTR [rax],al
  407ecf:	add    BYTE PTR [rbx],ah
  407ed1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407ed9:	pop    rdi
  407eda:	ins    DWORD PTR es:[rdi],dx
  407edb:	(bad)  
  407edc:	jb     0x407f51
  407ede:	push   0x765f6c61
  407ee3:	(bad)  
  407ee4:	ins    BYTE PTR es:[rdi],dx
  407ee5:	jne    0x407f4c
  407ee7:	pop    rdi
  407ee8:	jo     0x407f4f
  407eea:	imul   ebx,DWORD PTR gs:[rdi+0x70],0x61
  407eef:	jb     0x407f52
  407ef1:	ins    DWORD PTR es:[rdi],dx
  407ef2:	sub    BYTE PTR [rsi+0x29],dh
  407ef5:	and    BYTE PTR [rax],ah
  407ef7:	and    BYTE PTR [rax],ah
  407ef9:	sub    BYTE PTR [rsi+0x29],dh
  407efc:	sub    eax,0x7461643e
  407f01:	(bad)  
  407f02:	pop    rbx
  407f03:	xor    BYTE PTR [rbp+0x2e],bl
  407f06:	jbe    0x407f67
  407f08:	jo     0x407f79
  407f0a:	imul   ebp,DWORD PTR [rsi+0x74],0xa7265
  407f11:	add    BYTE PTR [rax],al
  407f13:	add    BYTE PTR [rax],al
  407f15:	add    BYTE PTR [rax],al
  407f17:	add    BYTE PTR [rbx],ah
  407f19:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407f21:	pop    rdi
  407f22:	ins    DWORD PTR es:[rdi],dx
  407f23:	(bad)  
  407f24:	jb     0x407f99
  407f26:	push   0x765f6c61
  407f2b:	(bad)  
  407f2c:	ins    BYTE PTR es:[rdi],dx
  407f2d:	jne    0x407f94
  407f2f:	pop    rdi
  407f30:	jo     0x407f97
  407f32:	imul   ebx,DWORD PTR gs:[rdi+0x62],0x6f
  407f37:	js     0x407f9e
  407f39:	sub    BYTE PTR fs:[rsi+0x29],dh
  407f3d:	and    BYTE PTR [rax],ah
  407f3f:	and    BYTE PTR [rax],ah
  407f41:	sub    BYTE PTR [rsi+0x29],dh
  407f44:	sub    eax,0x7461643e
  407f49:	(bad)  
  407f4a:	pop    rbx
  407f4b:	xor    BYTE PTR [rbp+0x2e],bl
  407f4e:	jbe    0x407faf
  407f50:	jo     0x407fc1
  407f52:	imul   ebp,DWORD PTR [rsi+0x74],0xa7265
  407f59:	add    BYTE PTR [rax],al
  407f5b:	add    BYTE PTR [rax],al
  407f5d:	add    BYTE PTR [rax],al
  407f5f:	add    BYTE PTR [rbx],ah
  407f61:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407f69:	pop    rdi
  407f6a:	ins    DWORD PTR es:[rdi],dx
  407f6b:	(bad)  
  407f6c:	jb     0x407fe1
  407f6e:	push   0x765f6c61
  407f73:	(bad)  
  407f74:	ins    BYTE PTR es:[rdi],dx
  407f75:	jne    0x407fdc
  407f77:	pop    rdi
  407f78:	jo     0x407fdf
  407f7a:	imul   ebx,DWORD PTR gs:[rdi+0x70],0x6f
  407f7f:	imul   ebp,DWORD PTR [rsi+0x74],0x76287265
  407f86:	sub    DWORD PTR [rax],esp
  407f88:	and    BYTE PTR [rax],ch
  407f8a:	jbe    0x407fb5
  407f8c:	sub    eax,0x7461643e
  407f91:	(bad)  
  407f92:	pop    rbx
  407f93:	xor    BYTE PTR [rbp+0x2e],bl
  407f96:	jbe    0x407ff7
  407f98:	jo     0x408009
  407f9a:	imul   ebp,DWORD PTR [rsi+0x74],0xa7265
  407fa1:	add    BYTE PTR [rax],al
  407fa3:	add    BYTE PTR [rax],al
  407fa5:	add    BYTE PTR [rax],al
  407fa7:	add    BYTE PTR [rbx],ah
  407fa9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407fb1:	pop    rdi
  407fb2:	ins    DWORD PTR es:[rdi],dx
  407fb3:	(bad)  
  407fb4:	jb     0x408029
  407fb6:	push   0x765f6c61
  407fbb:	(bad)  
  407fbc:	ins    BYTE PTR es:[rdi],dx
  407fbd:	jne    0x408024
  407fbf:	pop    rdi
  407fc0:	jo     0x408027
  407fc2:	imul   ebx,DWORD PTR gs:[rdi+0x6f],0x62
  407fc7:	push   0x65
  407fc9:	movsxd esi,DWORD PTR [rax+rbp*1+0x76]
  407fcd:	sub    DWORD PTR [rax],esp
  407fcf:	and    BYTE PTR [rax],ah
  407fd1:	sub    BYTE PTR [rsi+0x29],dh
  407fd4:	sub    eax,0x7461643e
  407fd9:	(bad)  
  407fda:	pop    rbx
  407fdb:	xor    BYTE PTR [rbp+0x2e],bl
  407fde:	jbe    0x40803f
  407fe0:	jo     0x408051
  407fe2:	imul   ebp,DWORD PTR [rsi+0x74],0xa7265
  407fe9:	add    BYTE PTR [rax],al
  407feb:	add    BYTE PTR [rax],al
  407fed:	add    BYTE PTR [rax],al
  407fef:	add    BYTE PTR [rbx],ah
  407ff1:	fs imul bp,WORD PTR gs:[rsi+0x65],0x6720
  407ff9:	pop    rdi
  407ffa:	ins    DWORD PTR es:[rdi],dx
  407ffb:	(bad)  
  407ffc:	jb     0x408071
  407ffe:	push   0x765f6c61
  408003:	(bad)  
  408004:	ins    BYTE PTR es:[rdi],dx
  408005:	jne    0x40806c
  408007:	pop    rdi
  408008:	jo     0x40806f
  40800a:	imul   ebx,DWORD PTR gs:[rdi+0x76],0x61
  40800f:	jb     0x40807a
  408011:	(bad)  
  408012:	outs   dx,BYTE PTR ds:[rsi]
  408013:	je     0x40803d
  408015:	jbe    0x408040
  408017:	and    BYTE PTR [rax],ah
  408019:	sub    BYTE PTR [rsi+0x29],dh
  40801c:	sub    eax,0x7461643e
  408021:	(bad)  
  408022:	pop    rbx
  408023:	xor    BYTE PTR [rbp+0x2e],bl
  408026:	jbe    0x408087
  408028:	jo     0x408099
  40802a:	imul   ebp,DWORD PTR [rsi+0x74],0xa7265
  408031:	and    esp,DWORD PTR [rbp+0x6e]
  408034:	imul   esp,DWORD PTR fs:[rsi+0x20],0x21202a2f
  40803c:	rex.RXB pop r15
  40803e:	rex.RB
  40803f:	rex.WRX
  408040:	rex.B
  408041:	rex.X
  408042:	rex.WR
  408043:	rex.RB pop r15
  408045:	rex.R
  408046:	rex.RB
  408047:	rex.X push rbp
  408049:	rex.RXB and BYTE PTR [r10],r13b
  40804c:	(bad)  
  40804d:	or     al,BYTE PTR [rax]
  40804f:	data16 (bad) 
  408051:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  408059:	outs   dx,DWORD PTR ds:[rsi]
  40805a:	jo     0x4080c1
  40805c:	outs   dx,BYTE PTR ds:[rsi]
  40805d:	and    BYTE PTR [rdx],ah
  40805f:	and    eax,0x203a2273
  408064:	and    eax,0x73250073
  408069:	cmp    ah,BYTE PTR [rip+0x5f0075]        # 0x9f80e4
  40806f:	or     ch,BYTE PTR [rdi]
  408071:	sub    ah,BYTE PTR [rax]
  408073:	and    eax,0x63250073
  408078:	and    eax,0x28200073
  40807d:	and    eax,0x67002973
  408082:	pop    rdi
  408083:	movsxd esp,DWORD PTR [rbx+0x6c]
  408086:	outs   dx,DWORD PTR ds:[rsi]
  408087:	jae    0x4080fe
  408089:	jb     0x4080f0
  40808b:	pop    rdi
  40808c:	ins    DWORD PTR es:[rdi],dx
  40808d:	(bad)  
  40808e:	jb     0x408103
  408090:	push   0x23006c61
  408095:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2520
  40809d:	jae    0x4080fe
  40809f:	and    eax,0x73250973
  4080a4:	pop    rdi
  4080a5:	and    eax,0x76000a73
  4080aa:	outs   dx,DWORD PTR ds:[rsi]
  4080ab:	imul   esp,DWORD PTR [rax+riz*1+0x0],0x255f7325
  4080b3:	jae    0x4080d5
  4080b5:	sub    BYTE PTR [rax],al
  4080b7:	rex.RXB
  4080b8:	rex.XB ins BYTE PTR es:[rdi],dx
  4080ba:	outs   dx,DWORD PTR ds:[rsi]
  4080bb:	jae    0x408132
  4080bd:	jb     0x408124
  4080bf:	and    BYTE PTR [rax],ah
  4080c1:	and    BYTE PTR [rax],ah
  4080c3:	and    BYTE PTR [rdx],ch
  4080c5:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  4080c9:	jne    0x40813d
  4080cb:	gs sub al,0xa
  4080ce:	add    BYTE PTR [rax],al
  4080d0:	and    eax,0x61564773
  4080d5:	ins    BYTE PTR es:[rdi],dx
  4080d6:	jne    0x40813d
  4080d8:	and    BYTE PTR [rax],ah
  4080da:	and    BYTE PTR [rax],ah
  4080dc:	and    BYTE PTR [rax],ah
  4080de:	and    BYTE PTR [rdx],ch
  4080e0:	jb     0x408147
  4080e2:	je     0x408159
  4080e4:	jb     0x408154
  4080e6:	pop    rdi
  4080e7:	jbe    0x40814a
  4080e9:	ins    BYTE PTR es:[rdi],dx
  4080ea:	jne    0x408151
  4080ec:	sub    al,0xa
  4080ee:	add    BYTE PTR [rax],al
  4080f0:	and    eax,0x69756773
  4080f5:	outs   dx,BYTE PTR ds:[rsi]
  4080f6:	je     0x408118
  4080f8:	and    BYTE PTR [rax],ah
  4080fa:	and    BYTE PTR [rax],ah
  4080fc:	and    BYTE PTR [rax],ah
  4080fe:	and    BYTE PTR [rax],ah
  408100:	outs   dx,BYTE PTR ds:[rsi]
  408101:	pop    rdi
  408102:	jo     0x408165
  408104:	jb     0x408167
  408106:	ins    DWORD PTR es:[rdi],dx
  408107:	pop    rdi
  408108:	jbe    0x40816b
  40810a:	ins    BYTE PTR es:[rdi],dx
  40810b:	jne    0x408172
  40810d:	jae    0x40813b
  40810f:	or     al,BYTE PTR [rax]
  408111:	add    BYTE PTR [rax],al
  408113:	add    BYTE PTR [rax],al
  408115:	add    BYTE PTR [rax],al
  408117:	add    BYTE PTR [rip+0x6e6f6373],ah        # 0x6eafe490
  40811d:	jae    0x408193
  40811f:	and    BYTE PTR [rdi+0x56],al
  408122:	(bad)  
  408123:	ins    BYTE PTR es:[rdi],dx
  408124:	jne    0x40818b
  408126:	and    BYTE PTR [rdx],ch
  408128:	jo     0x40818b
  40812a:	jb     0x40818d
  40812c:	ins    DWORD PTR es:[rdi],dx
  40812d:	pop    rdi
  40812e:	jbe    0x408191
  408130:	ins    BYTE PTR es:[rdi],dx
  408131:	jne    0x408198
  408133:	jae    0x408161
  408135:	or     al,BYTE PTR [rax]
  408137:	add    BYTE PTR [rip+0x6f706773],ah        # 0x6fb0e8b0
  40813d:	imul   ebp,DWORD PTR [rsi+0x74],0x20207265
  408144:	and    BYTE PTR [rax],ah
  408146:	and    BYTE PTR [rax],ah
  408148:	imul   ebp,DWORD PTR [rsi+0x76],0x7461636f
  40814f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69685f
  408156:	je     0x408184
  408158:	or     al,BYTE PTR [rax]
  40815a:	add    BYTE PTR [rax],al
  40815c:	add    BYTE PTR [rax],al
  40815e:	add    BYTE PTR [rax],al
  408160:	and    eax,0x6f706773
  408165:	imul   ebp,DWORD PTR [rsi+0x74],0x20207265
  40816c:	and    BYTE PTR [rax],ah
  40816e:	and    BYTE PTR [rax],ah
  408170:	ins    DWORD PTR es:[rdi],dx
  408171:	(bad)  
  408172:	jb     0x4081e7
  408174:	push   0x645f6c61
  408179:	(bad)  
  40817a:	je     0x4081dd
  40817c:	sub    DWORD PTR [rbx],edi
  40817e:	or     al,BYTE PTR [rax]
  408180:	jbe    0x4081f1
  408182:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x73250000
  40818a:	rex.RXB push r14
  40818c:	(bad)  
  40818d:	ins    BYTE PTR es:[rdi],dx
  40818e:	jne    0x4081f5
  408190:	and    BYTE PTR [rax],ah
  408192:	and    BYTE PTR [rax],ah
  408194:	and    BYTE PTR [rax],ah
  408196:	and    BYTE PTR [rdx],ch
  408198:	jb     0x4081ff
  40819a:	je     0x408211
  40819c:	jb     0x40820c
  40819e:	pop    rdi
  40819f:	jbe    0x408202
  4081a1:	ins    BYTE PTR es:[rdi],dx
  4081a2:	jne    0x408209
  4081a4:	and    BYTE PTR [rdi+0x5f],al
  4081a7:	rex.RXB
  4081a8:	rex.WRX push rbp
  4081aa:	rex.XB pop r15
  4081ac:	push   rbp
  4081ad:	rex.WRX push rbp
  4081af:	push   rbx
  4081b0:	rex.RB
  4081b1:	rex.R sub al,0xa
  4081b4:	add    BYTE PTR [rax],al
  4081b6:	add    BYTE PTR [rax],al
  4081b8:	and    eax,0x6f706773
  4081bd:	imul   ebp,DWORD PTR [rsi+0x74],0x20207265
  4081c4:	and    BYTE PTR [rax],ah
  4081c6:	and    BYTE PTR [rax],ah
  4081c8:	imul   ebp,DWORD PTR [rsi+0x76],0x7461636f
  4081cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69685f
  4081d6:	je     0x4081f8
  4081d8:	rex.RXB pop r15
  4081da:	rex.RXB
  4081db:	rex.WRX push rbp
  4081dd:	rex.XB pop r15
  4081df:	push   rbp
  4081e0:	rex.WRX push rbp
  4081e2:	push   rbx
  4081e3:	rex.RB
  4081e4:	rex.R sub al,0xa
  4081e7:	add    BYTE PTR [rip+0x6f706773],ah        # 0x6fb0e960
  4081ed:	imul   ebp,DWORD PTR [rsi+0x74],0x20207265
  4081f4:	and    BYTE PTR [rax],ah
  4081f6:	and    BYTE PTR [rax],ah
  4081f8:	ins    DWORD PTR es:[rdi],dx
  4081f9:	(bad)  
  4081fa:	jb     0x40826f
  4081fc:	push   0x645f6c61
  408201:	(bad)  
  408202:	je     0x408265
  408204:	sub    DWORD PTR [rdx],ecx
  408206:	add    BYTE PTR [rbx+0xa],bh
  408209:	add    BYTE PTR [rax],al
  40820b:	add    BYTE PTR [rax],al
  40820d:	add    BYTE PTR [rax],al
  40820f:	add    BYTE PTR [rax],ah
  408211:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  408215:	gs fs data16 and BYTE PTR gs:[rip+0x2a282073],ah        # 0x2a68a292
  40821f:	rex.RXB
  408220:	rex.WRB (bad) 
  408222:	jb     0x408297
  408224:	push   0x75466c61
  408229:	outs   dx,BYTE PTR ds:[rsi]
  40822a:	movsxd ebx,DWORD PTR [rdi+0x25]
  40822d:	jae    0x408258
  40822f:	and    BYTE PTR [rax],ch
  408231:	add    BYTE PTR [rdi+0x70],ah
  408234:	outs   dx,DWORD PTR ds:[rsi]
  408235:	imul   ebp,DWORD PTR [rsi+0x74],0x25007265
  40823c:	jae    0x40825e
  40823e:	fs (bad) 
  408240:	je     0x4082a3
  408242:	xor    DWORD PTR [rdx+rcx*1],ebp
  408245:	add    BYTE PTR [rip+0x20732573],ah        # 0x20b3a7be
  40824b:	fs (bad) 
  40824d:	je     0x4082b0
  40824f:	xor    ch,BYTE PTR [rcx]
  408251:	cmp    ecx,DWORD PTR [rdx]
  408253:	add    BYTE PTR [rax],ah
  408255:	and    BYTE PTR [rdi+0x4d],al
  408258:	(bad)  
  408259:	jb     0x4082ce
  40825b:	push   0x75466c61
  408260:	outs   dx,BYTE PTR ds:[rsi]
  408261:	movsxd ebx,DWORD PTR [rdi+0x25]
  408264:	jae    0x408286
  408266:	movsxd esp,DWORD PTR [rcx+0x6c]
  408269:	ins    BYTE PTR es:[rdi],dx
  40826a:	(bad)  
  40826c:	movsxd ebp,DWORD PTR [rbx+0x3b]
  40826f:	or     al,BYTE PTR [rax]
  408271:	add    BYTE PTR [rax],al
  408273:	add    BYTE PTR [rax],al
  408275:	add    BYTE PTR [rax],al
  408277:	add    BYTE PTR [rax],ah
  408279:	and    BYTE PTR [rdi+0x43],al
  40827c:	rex.XB ins BYTE PTR es:[rdi],dx
  40827e:	outs   dx,DWORD PTR ds:[rsi]
  40827f:	jae    0x4082f6
  408281:	jb     0x4082e8
  408283:	and    BYTE PTR [rdx],ch
  408285:	movsxd esp,DWORD PTR [rbx+0x20]
  408288:	cmp    eax,0x43472820
  40828d:	rex.XB ins BYTE PTR es:[rdi],dx
  40828f:	outs   dx,DWORD PTR ds:[rsi]
  408290:	jae    0x408307
  408292:	jb     0x4082f9
  408294:	sub    ch,BYTE PTR [rcx]
  408296:	and    BYTE PTR [rbx+0x6c],ah
  408299:	outs   dx,DWORD PTR ds:[rsi]
  40829a:	jae    0x408311
  40829c:	jb     0x408303
  40829e:	cmp    ecx,DWORD PTR [rdx]
  4082a0:	add    BYTE PTR [rax],ah
  4082a2:	and    BYTE PTR [rdi+0x70],ah
  4082a5:	outs   dx,DWORD PTR ds:[rsi]
  4082a6:	imul   ebp,DWORD PTR [rsi+0x74],0x64207265
  4082ad:	(bad)  
  4082ae:	je     0x408311
  4082b0:	xor    DWORD PTR [rax+riz*1],ebp
  4082b3:	fs (bad) 
  4082b5:	je     0x408318
  4082b7:	xor    bh,BYTE PTR [rbx]
  4082b9:	or     al,BYTE PTR [rax]
  4082bb:	and    eax,0x20732573
  4082c0:	(bad)  
  4082c1:	jb     0x40832a
  4082c3:	pop    rdi
  4082c4:	and    eax,0xa2c64
  4082c9:	add    BYTE PTR [rax],al
  4082cb:	add    BYTE PTR [rax],al
  4082cd:	add    BYTE PTR [rax],al
  4082cf:	add    BYTE PTR [rax],ah
  4082d1:	and    BYTE PTR [rdi+0x5f],ah
  4082d4:	jb     0x40833b
  4082d6:	je     0x40834d
  4082d8:	jb     0x408348
  4082da:	pop    rdi
  4082db:	imul   esp,DWORD PTR [rsi+0x5f],0x6c696166
  4082e2:	and    BYTE PTR [rax],ch
  4082e4:	jb     0x40834b
  4082e6:	je     0x40835d
  4082e8:	jb     0x408358
  4082ea:	pop    rdi
  4082eb:	jbe    0x40834e
  4082ed:	ins    BYTE PTR es:[rdi],dx
  4082ee:	jne    0x408355
  4082f0:	and    BYTE PTR [rcx],ah
  4082f2:	cmp    eax,0x4c554e20
  4082f7:	sub    QWORD PTR [rbx],r15
  4082fa:	or     al,BYTE PTR [rax]
  4082fc:	add    BYTE PTR [rax],al
  4082fe:	add    BYTE PTR [rax],al
  408300:	and    BYTE PTR [rax],ah
  408302:	addr32 pop rdi
  408304:	jb     0x40836b
  408306:	je     0x40837d
  408308:	jb     0x408378
  40830a:	pop    rdi
  40830b:	imul   esp,DWORD PTR [rsi+0x5f],0x6c696166
  408312:	and    BYTE PTR [rax],ch
  408314:	outs   dx,BYTE PTR ds:[rsi]
  408315:	pop    rdi
  408316:	jo     0x408379
  408318:	jb     0x40837b
  40831a:	ins    DWORD PTR es:[rdi],dx
  40831b:	pop    rdi
  40831c:	jbe    0x40837f
  40831e:	ins    BYTE PTR es:[rdi],dx
  40831f:	jne    0x408386
  408321:	jae    0x408343
  408323:	cmp    eax,0x7525203d
  408328:	sub    DWORD PTR [rbx],edi
  40832a:	or     al,BYTE PTR [rax]
  40832c:	add    BYTE PTR [rax],al
  40832e:	add    BYTE PTR [rax],al
  408330:	and    BYTE PTR [rax],ah
  408332:	imul   esp,DWORD PTR [rsi+0x20],0x435f4728
  408339:	rex.XB
  40833a:	rex.WR
  40833b:	rex.WRXB push r11
  40833d:	push   rbp
  40833e:	push   rdx
  40833f:	rex.RB pop r15
  408341:	push   rbx
  408342:	push   rdi
  408343:	push   r8
  408345:	pop    rdi
  408346:	rex.R
  408347:	push   r12
  408349:	and    BYTE PTR [r8],bpl
  40834c:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  408350:	jne    0x4083c4
  408352:	sub    DWORD PTR gs:[rcx],ebp
  408355:	or     ah,BYTE PTR [rax]
  408357:	and    BYTE PTR [rax],ah
  408359:	and    BYTE PTR [rbx+0xa],bh
  40835c:	add    BYTE PTR [rax],ah
  40835e:	and    BYTE PTR [rax],ah
  408360:	and    BYTE PTR [rax],ah
  408362:	and    BYTE PTR [rcx+riz*2+0x74],ah
  408366:	(bad)  
  408367:	xor    DWORD PTR [rax],esp
  408369:	cmp    eax,0x6f6c6320
  40836e:	jae    0x4083e5
  408370:	jb     0x4083d7
  408372:	sub    eax,0x7461643e
  408377:	(bad)  
  408378:	cmp    ecx,DWORD PTR [rdx]
  40837a:	add    BYTE PTR [rax],al
  40837c:	add    BYTE PTR [rax],al
  40837e:	add    BYTE PTR [rax],al
  408380:	and    BYTE PTR [rax],ah
  408382:	and    BYTE PTR [rax],ah
  408384:	and    BYTE PTR [rax],ah
  408386:	fs (bad) 
  408388:	je     0x4083eb
  40838a:	xor    ah,BYTE PTR [rax]
  40838c:	cmp    eax,0x765f6720
  408391:	(bad)  
  408392:	ins    BYTE PTR es:[rdi],dx
  408393:	jne    0x4083fa
  408395:	pop    rdi
  408396:	jo     0x4083fd
  408398:	imul   ebx,DWORD PTR gs:[rdi+0x70],0x6f
  40839d:	imul   ebp,DWORD PTR [rsi+0x74],0x28207265
  4083a4:	jo     0x408407
  4083a6:	jb     0x408409
  4083a8:	ins    DWORD PTR es:[rdi],dx
  4083a9:	pop    rdi
  4083aa:	jbe    0x40840d
  4083ac:	ins    BYTE PTR es:[rdi],dx
  4083ad:	jne    0x408414
  4083af:	jae    0x4083d1
  4083b1:	sub    esp,DWORD PTR [rax]
  4083b3:	xor    BYTE PTR [rcx],ch
  4083b5:	cmp    ecx,DWORD PTR [rdx]
  4083b7:	add    BYTE PTR [rax],ah
  4083b9:	and    BYTE PTR [rax],ah
  4083bb:	and    BYTE PTR [rbp+0xa],bh
  4083be:	and    BYTE PTR [rax],ah
  4083c0:	gs ins BYTE PTR es:[rdi],dx
  4083c2:	jae    0x408429
  4083c4:	or     ah,BYTE PTR [rax]
  4083c6:	and    BYTE PTR [rax],ah
  4083c8:	and    BYTE PTR [rbx+0xa],bh
  4083cb:	add    BYTE PTR [rax],al
  4083cd:	add    BYTE PTR [rax],al
  4083cf:	add    BYTE PTR [rax],ah
  4083d1:	and    BYTE PTR [rax],ah
  4083d3:	and    BYTE PTR [rax],ah
  4083d5:	and    BYTE PTR [rcx+riz*2+0x74],ah
  4083d9:	(bad)  
  4083da:	xor    DWORD PTR [rax],esp
  4083dc:	cmp    eax,0x765f6720
  4083e1:	(bad)  
  4083e2:	ins    BYTE PTR es:[rdi],dx
  4083e3:	jne    0x40844a
  4083e5:	pop    rdi
  4083e6:	jo     0x40844d
  4083e8:	imul   ebx,DWORD PTR gs:[rdi+0x70],0x6f
  4083ed:	imul   ebp,DWORD PTR [rsi+0x74],0x28207265
  4083f4:	jo     0x408457
  4083f6:	jb     0x408459
  4083f8:	ins    DWORD PTR es:[rdi],dx
  4083f9:	pop    rdi
  4083fa:	jbe    0x40845d
  4083fc:	ins    BYTE PTR es:[rdi],dx
  4083fd:	jne    0x408464
  4083ff:	jae    0x408421
  408401:	sub    esp,DWORD PTR [rax]
  408403:	xor    BYTE PTR [rcx],ch
  408405:	cmp    ecx,DWORD PTR [rdx]
  408407:	add    BYTE PTR [rax],ah
  408409:	and    BYTE PTR [rax],ah
  40840b:	and    BYTE PTR [rax],ah
  40840d:	and    BYTE PTR [rcx+riz*2+0x74],ah
  408411:	(bad)  
  408412:	xor    ah,BYTE PTR [rax]
  408414:	cmp    eax,0x6f6c6320
  408419:	jae    0x408490
  40841b:	jb     0x408482
  40841d:	sub    eax,0x7461643e
  408422:	(bad)  
  408423:	cmp    ecx,DWORD PTR [rdx]
  408425:	add    BYTE PTR [rax],ah
  408427:	and    BYTE PTR [rax],ah
  408429:	and    BYTE PTR [rbp+0xa],bh
  40842c:	add    BYTE PTR [rax],al
  40842e:	add    BYTE PTR [rax],al
  408430:	and    BYTE PTR [rax],ah
  408432:	movsxd esp,DWORD PTR [rcx+0x6c]
  408435:	ins    BYTE PTR es:[rdi],dx
  408436:	(bad)  
  408438:	movsxd ebp,DWORD PTR [rbx+0x20]
  40843b:	cmp    eax,0x4d472820
  408440:	(bad)  
  408441:	jb     0x4084b6
  408443:	push   0x75466c61
  408448:	outs   dx,BYTE PTR ds:[rsi]
  408449:	movsxd ebx,DWORD PTR [rdi+0x25]
  40844c:	jae    0x408477
  40844e:	and    BYTE PTR [rax],ch
  408450:	ins    DWORD PTR es:[rdi],dx
  408451:	(bad)  
  408452:	jb     0x4084c7
  408454:	push   0x645f6c61
  408459:	(bad)  
  40845a:	je     0x4084bd
  40845c:	and    BYTE PTR [rdi],bh
  40845e:	and    BYTE PTR [rbp+0x61],ch
  408461:	jb     0x4084d6
  408463:	push   0x645f6c61
  408468:	(bad)  
  408469:	je     0x4084cc
  40846b:	and    BYTE PTR [rdx],bh
  40846d:	and    BYTE PTR [rbx+0x63],ah
  408470:	sub    eax,0x6c61633e
  408475:	ins    BYTE PTR es:[rdi],dx
  408476:	(bad)  
  408478:	movsxd ebp,DWORD PTR [rbx+0x29]
  40847b:	cmp    ecx,DWORD PTR [rdx]
  40847d:	add    BYTE PTR [rax],ah
  40847f:	and    eax,0x61632073
  408484:	ins    BYTE PTR es:[rdi],dx
  408485:	ins    BYTE PTR es:[rdi],dx
  408486:	(bad)  
  408488:	movsxd ebp,DWORD PTR [rbx+0x20]
  40848b:	sub    BYTE PTR [rax],al
  40848d:	fs (bad) 
  40848f:	je     0x4084f2
  408491:	xor    DWORD PTR [rdx+rcx*1],ebp
  408494:	add    BYTE PTR [rip+0x74616473],ah        # 0x74a1e90d
  40849a:	(bad)  
  40849b:	xor    ch,BYTE PTR [rcx]
  40849d:	cmp    ecx,DWORD PTR [rdx]
  40849f:	add    BYTE PTR [rip+0x20732573],ah        # 0x20b3aa18
  4084a5:	sub    BYTE PTR [rax+0x61],dh
  4084a8:	jb     0x40850b
  4084aa:	ins    DWORD PTR es:[rdi],dx
  4084ab:	pop    rdi
  4084ac:	jbe    0x40850f
  4084ae:	ins    BYTE PTR es:[rdi],dx
  4084af:	jne    0x408516
  4084b1:	jae    0x4084d3
  4084b3:	sub    esp,DWORD PTR [rax]
  4084b5:	and    eax,0xa2c2964
  4084ba:	add    BYTE PTR [rax],al
  4084bc:	add    BYTE PTR [rax],al
  4084be:	add    BYTE PTR [rax],al
  4084c0:	and    BYTE PTR [rax],ah
  4084c2:	and    eax,0x72282073
  4084c7:	gs je  0x40853f
  4084ca:	jb     0x40853a
  4084cc:	pop    rdi
  4084cd:	jbe    0x408530
  4084cf:	ins    BYTE PTR es:[rdi],dx
  4084d0:	jne    0x408537
  4084d2:	sub    al,0x20
  4084d4:	jbe    0x408535
  4084d6:	jb     0x40853d
  4084d8:	je     0x40854f
  4084da:	jb     0x40854a
  4084dc:	sub    DWORD PTR [rbx],edi
  4084de:	or     al,BYTE PTR [rax]
  4084e0:	jge    0x4084ec
  4084e2:	add    BYTE PTR [rbx],ah
  4084e4:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2520
  4084ec:	jae    0x40854d
  4084ee:	and    eax,0x25097673
  4084f3:	jae    0x408554
  4084f5:	and    eax,0xa7673
  4084fa:	and    eax,0x73255f73
  4084ff:	jbe    0x408521
  408501:	sub    BYTE PTR [rax],al
  408503:	and    eax,0x6f706773
  408508:	imul   ebp,DWORD PTR [rsi+0x74],0x20207265
  40850f:	and    BYTE PTR [rax],ah
  408511:	and    BYTE PTR [rax],ah
  408513:	imul   ebp,DWORD PTR [rsi+0x73],0x636e6174
  40851a:	gs sub al,0xa
  40851d:	add    BYTE PTR [rip+0x5f617673],ah        # 0x5fa1fb96
  408523:	ins    BYTE PTR es:[rdi],dx
  408524:	imul   esi,DWORD PTR [rbx+0x74],0x20202020
  40852b:	and    BYTE PTR [rax],ah
  40852d:	and    BYTE PTR [rcx+0x72],ah
  408530:	addr32 jae 0x40855f
  408533:	or     al,BYTE PTR [rax]
  408535:	add    BYTE PTR [rax],al
  408537:	add    BYTE PTR [rip+0x6f706773],ah        # 0x6fb0ecb0
  40853d:	imul   ebp,DWORD PTR [rsi+0x74],0x20207265
  408544:	and    BYTE PTR [rax],ah
  408546:	and    BYTE PTR [rax],ah
  408548:	ins    DWORD PTR es:[rdi],dx
  408549:	(bad)  
  40854a:	jb     0x4085bf
  40854c:	push   0x645f6c61
  408551:	(bad)  
  408552:	je     0x4085b5
  408554:	sub    al,0xa
  408556:	add    BYTE PTR [rip+0x746e6973],ah        # 0x74aeeecf
  40855c:	and    BYTE PTR [rax],ah
  40855e:	and    BYTE PTR [rax],ah
  408560:	and    BYTE PTR [rax],ah
  408562:	and    BYTE PTR [rax],ah
  408564:	and    BYTE PTR [rax],ah
  408566:	and    BYTE PTR [rsi+0x5f],ch
  408569:	jo     0x4085cc
  40856b:	jb     0x4085ce
  40856d:	ins    DWORD PTR es:[rdi],dx
  40856e:	jae    0x40859c
  408570:	or     al,BYTE PTR [rax]
  408572:	add    BYTE PTR [rax],al
  408574:	add    BYTE PTR [rax],al
  408576:	add    BYTE PTR [rax],al
  408578:	and    eax,0x79544773
  40857d:	jo     0x4085e4
  40857f:	and    BYTE PTR [rax],ah
  408581:	and    BYTE PTR [rax],ah
  408583:	and    BYTE PTR [rax],ah
  408585:	and    BYTE PTR [rax],ah
  408587:	sub    dh,BYTE PTR [rax+0x61]
  40858a:	jb     0x4085ed
  40858c:	ins    DWORD PTR es:[rdi],dx
  40858d:	pop    rdi
  40858e:	je     0x408609
  408590:	jo     0x4085f7
  408592:	jae    0x4085bd
  408594:	cmp    ecx,DWORD PTR [rdx]
  408596:	add    BYTE PTR [rip+0x79544773],ah        # 0x7994cd0f
  40859c:	jo     0x408603
  40859e:	and    BYTE PTR [rax],ah
  4085a0:	and    BYTE PTR [rax],ah
  4085a2:	and    BYTE PTR [rax],ah
  4085a4:	and    BYTE PTR [rax],ah
  4085a6:	sub    dh,BYTE PTR [rax+0x61]
  4085a9:	jb     0x40860c
  4085ab:	ins    DWORD PTR es:[rdi],dx
  4085ac:	pop    rdi
  4085ad:	je     0x408628
  4085af:	jo     0x408616
  4085b1:	jae    0x4085dc
  4085b3:	or     al,BYTE PTR [rax]
  4085b5:	and    eax,0x6e692073
  4085ba:	jae    0x408630
  4085bc:	(bad)  
  4085bd:	outs   dx,BYTE PTR ds:[rsi]
  4085be:	movsxd esp,DWORD PTR [rbp+0x0]
  4085c1:	sub    al,0xa
  4085c3:	and    eax,0x20732573
  4085c8:	(bad)  
  4085c9:	jb     0x408632
  4085cb:	pop    rdi
  4085cc:	and    eax,0xa2c0064
  4085d1:	and    eax,0x20732573
  4085d6:	fs (bad) 
  4085d8:	je     0x40863b
  4085da:	sub    DWORD PTR [rbx],edi
  4085dc:	or     al,BYTE PTR [rax]
  4085de:	and    BYTE PTR [rax],ah
  4085e0:	and    eax,0x72612073
  4085e5:	addr32 and eax,0xa3b69
  4085eb:	and    BYTE PTR [rax],ah
  4085ed:	jbe    0x408650
  4085ef:	pop    rdi
  4085f0:	ins    BYTE PTR es:[rdi],dx
  4085f1:	imul   esi,DWORD PTR [rbx+0x74],0x67726120
  4085f8:	jae    0x408659
  4085fa:	movsxd ebp,DWORD PTR [rdi+0x70]
  4085fd:	jns    0x40863a
  4085ff:	or     al,BYTE PTR [rax]
  408601:	and    BYTE PTR [rax],ah
  408603:	and    eax,0x5f762073
  408608:	jb     0x40866f
  40860a:	je     0x408681
  40860c:	jb     0x40867c
  40860e:	cmp    ecx,DWORD PTR [rdx]
	...
  408618:	and    BYTE PTR [rax],ah
  40861a:	rex.RXB pop r15
  40861c:	push   rsi
  40861d:	pop    r15
  40861f:	rex.XB
  408620:	rex.WRXB push r8
  408622:	pop    rcx
  408623:	and    BYTE PTR [rax],ch
  408625:	(bad)  
  408626:	jb     0x40868f
  408628:	jae    0x408689
  40862a:	movsxd ebp,DWORD PTR [rdi+0x70]
  40862d:	jns    0x40865b
  40862f:	and    BYTE PTR [rcx+0x72],ah
  408632:	addr32 jae 0x40865e
  408635:	cmp    ecx,DWORD PTR [rdx]
  408637:	add    BYTE PTR [rax],ah
  408639:	and    BYTE PTR [rcx+0x72],ah
  40863c:	addr32 and eax,0x203d2069
  408642:	sub    BYTE PTR [rip+0x76202973],ah        # 0x7660afbb
  408648:	(bad)  
  408649:	pop    rdi
  40864a:	(bad)  
  40864b:	jb     0x4086b4
  40864d:	and    BYTE PTR [rax],ch
  40864f:	(bad)  
  408650:	jb     0x4086b9
  408652:	jae    0x4086b3
  408654:	movsxd ebp,DWORD PTR [rdi+0x70]
  408657:	jns    0x408685
  408659:	and    BYTE PTR [rip+0xa3b2973],ah        # 0xa7bafd2
  40865f:	add    BYTE PTR [rax],ah
  408661:	and    BYTE PTR [rcx+0x66],ch
  408664:	and    BYTE PTR [rax],ch
  408666:	add    BYTE PTR [rax],al
  408668:	sub    BYTE PTR [rax+0x61],dh
  40866b:	jb     0x4086ce
  40866d:	ins    DWORD PTR es:[rdi],dx
  40866e:	pop    rdi
  40866f:	je     0x4086ea
  408671:	jo     0x4086d8
  408673:	jae    0x4086d0
  408675:	and    eax,0x26205d69
  40867a:	and    BYTE PTR [rdi+0x5f],al
  40867d:	push   rbx
  40867e:	rex.WB
  40867f:	rex.RXB
  408680:	rex.WRX
  408681:	rex.B
  408682:	rex.WR pop rdi
  408684:	push   rsp
  408685:	pop    rcx
  408686:	push   rax
  408687:	rex.RB pop r15
  408689:	push   rbx
  40868a:	push   rsp
  40868b:	push   r12
  40868d:	rex.WB
  40868e:	rex.XB pop r15
  408690:	push   rbx
  408691:	rex.XB
  408692:	rex.WRXB push r8
  408694:	sub    DWORD PTR [r8],r12d
  408697:	cmp    eax,0x2030203d
  40869c:	es and BYTE PTR es:[rax],al
  4086a0:	(bad)  
  4086a1:	jb     0x40870a
  4086a3:	and    eax,0x3d212069
  4086a8:	and    BYTE PTR [rsi+0x55],cl
  4086ab:	rex.WR
  4086ac:	sub    QWORD PTR [rdx],r9
  4086af:	and    BYTE PTR [rax],ah
  4086b1:	add    BYTE PTR [rax],al
  4086b3:	add    BYTE PTR [rax],al
  4086b5:	add    BYTE PTR [rax],al
  4086b7:	add    BYTE PTR [rax],ah
  4086b9:	and    BYTE PTR [rcx+0x72],ah
  4086bc:	addr32 and eax,0x203d2069
  4086c2:	and    eax,0x70282073
  4086c7:	(bad)  
  4086c8:	jb     0x40872b
  4086ca:	ins    DWORD PTR es:[rdi],dx
  4086cb:	pop    rdi
  4086cc:	je     0x408747
  4086ce:	jo     0x408735
  4086d0:	jae    0x40872d
  4086d2:	and    eax,0x26205d69
  4086d7:	and    BYTE PTR [rsi+0x47],bh
  4086da:	pop    rdi
  4086db:	push   rbx
  4086dc:	rex.WB
  4086dd:	rex.RXB
  4086de:	rex.WRX
  4086df:	rex.B
  4086e0:	rex.WR pop rdi
  4086e2:	push   rsp
  4086e3:	pop    rcx
  4086e4:	push   rax
  4086e5:	rex.RB pop r15
  4086e7:	push   rbx
  4086e8:	push   rsp
  4086e9:	push   r12
  4086eb:	rex.WB
  4086ec:	rex.XB pop r15
  4086ee:	push   rbx
  4086ef:	rex.XB
  4086f0:	rex.WRXB push r8
  4086f2:	rex.RB sub al,0x20
  4086f5:	(bad)  
  4086f6:	jb     0x40875f
  4086f8:	and    eax,0xa3b2969
  4086fd:	add    BYTE PTR [rax],ah
  4086ff:	and    BYTE PTR [rcx+0x72],ah
  408702:	addr32 and eax,0x203d2069
  408708:	and    eax,0x61282073
  40870d:	jb     0x408776
  40870f:	and    eax,0xa3b2969
  408714:	add    BYTE PTR [rax],ah
  408716:	and    BYTE PTR [rsi+0x61],dh
  408719:	pop    rdi
  40871a:	outs   dx,BYTE PTR gs:[rsi]
  40871c:	and    BYTE PTR fs:[rax],ch
  40871f:	(bad)  
  408720:	jb     0x408789
  408722:	jae    0x408783
  408724:	movsxd ebp,DWORD PTR [rdi+0x70]
  408727:	jns    0x408752
  408729:	cmp    ecx,DWORD PTR [rdx]
  40872b:	add    BYTE PTR [rax],ah
  40872d:	and    BYTE PTR [rax],ah
  40872f:	and    BYTE PTR [rax],ah
  408731:	and    BYTE PTR [rcx+riz*2+0x74],ah
  408735:	(bad)  
  408736:	xor    ah,BYTE PTR [rax]
  408738:	cmp    eax,0x736e6920
  40873d:	je     0x4087a0
  40873f:	outs   dx,BYTE PTR ds:[rsi]
  408740:	movsxd esp,DWORD PTR [rbp+0x3b]
  408743:	or     al,BYTE PTR [rax]
  408745:	and    BYTE PTR [rax],ah
  408747:	and    BYTE PTR [rax],ah
  408749:	and    BYTE PTR [rax],ah
  40874b:	fs (bad) 
  40874d:	je     0x4087b0
  40874f:	xor    DWORD PTR [rax],esp
  408751:	cmp    eax,0x736e6920
  408756:	je     0x4087b9
  408758:	outs   dx,BYTE PTR ds:[rsi]
  408759:	movsxd esp,DWORD PTR [rbp+0x3b]
  40875c:	or     al,BYTE PTR [rax]
  40875e:	fs (bad) 
  408760:	je     0x4087c3
  408762:	xor    DWORD PTR [rax],eax
  408764:	sub    al,0xa
  408766:	and    eax,0x67726173
  40876b:	and    eax,0xa2c0069
  408770:	and    eax,0x74616473
  408775:	(bad)  
  408776:	xor    ch,BYTE PTR [rcx]
  408778:	cmp    ecx,DWORD PTR [rdx]
  40877a:	add    BYTE PTR [rax],al
  40877c:	add    BYTE PTR [rax],al
  40877e:	add    BYTE PTR [rax],al
  408780:	and    BYTE PTR [rax],ah
  408782:	and    eax,0x70282073
  408787:	(bad)  
  408788:	jb     0x4087eb
  40878a:	ins    DWORD PTR es:[rdi],dx
  40878b:	pop    rdi
  40878c:	je     0x408807
  40878e:	jo     0x4087f5
  408790:	jae    0x4087ed
  408792:	and    eax,0x26205d69
  408797:	and    BYTE PTR [rsi+0x47],bh
  40879a:	pop    rdi
  40879b:	push   rbx
  40879c:	rex.WB
  40879d:	rex.RXB
  40879e:	rex.WRX
  40879f:	rex.B
  4087a0:	rex.WR pop rdi
  4087a2:	push   rsp
  4087a3:	pop    rcx
  4087a4:	push   rax
  4087a5:	rex.RB pop r15
  4087a7:	push   rbx
  4087a8:	push   rsp
  4087a9:	push   r12
  4087ab:	rex.WB
  4087ac:	rex.XB pop r15
  4087ae:	push   rbx
  4087af:	rex.XB
  4087b0:	rex.WRXB push r8
  4087b2:	rex.RB sub al,0x20
  4087b5:	(bad)  
  4087b6:	jb     0x40881f
  4087b8:	and    eax,0xa3b2969
  4087bd:	add    BYTE PTR [rax],ah
  4087bf:	and    BYTE PTR [rip+0x61282073],ah        # 0x6168a838
  4087c5:	jb     0x40882e
  4087c7:	and    eax,0xa3b2969
  4087cc:	add    BYTE PTR [rbp+0xa],bh
  4087cf:	or     al,BYTE PTR [rax]
  4087d1:	je     0x40884c
  4087d3:	jo     0x40883a
  4087d5:	and    BYTE PTR [rsi+0x61],ch
  4087d8:	ins    DWORD PTR es:[rdi],dx
  4087d9:	add    BYTE PTR gs:[rdx],cl
  4087dc:	rex.RXB pop r15
  4087de:	rex.RB
  4087df:	rex.WRX
  4087e0:	rex.R pop rdi
  4087e2:	rex.R
  4087e3:	rex.RB
  4087e4:	rex.XB
  4087e5:	rex.WR push rbx
  4087e7:	or     al,BYTE PTR [rax]
  4087e9:	add    BYTE PTR [rax],al
  4087eb:	add    BYTE PTR [rax],al
  4087ed:	add    BYTE PTR [rax],al
  4087ef:	add    BYTE PTR [rdx],cl
  4087f1:	and    esp,DWORD PTR [rbp+0x6e]
  4087f4:	imul   esp,DWORD PTR fs:[rsi+0x20],0x5f202a2f
  4087fc:	pop    rdi
  4087fd:	and    eax,0x414d5f73
  408802:	push   rdx
  408803:	push   rbx
  408804:	rex.W
  408805:	rex.B
  408806:	rex.WR pop rdi
  408808:	rex.W pop rdi
  40880a:	pop    rdi
  40880b:	and    BYTE PTR [rdx],ch
  40880d:	(bad)  
  40880e:	or     al,BYTE PTR [rax]
  408810:	jne    0x408880
  408812:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  408816:	outs   dx,BYTE PTR ds:[rsi]
  408817:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  40881b:	cmp    ah,BYTE PTR gs:[rax]
  40881e:	and    eax,0x61690073
  408823:	jb     0x40888c
  408825:	and    BYTE PTR [rcx],ah
  408827:	cmp    eax,0x4c554e20
  40882c:	rex.WR add BYTE PTR [rdi+0x5f],r12b
  408830:	movsxd esp,DWORD PTR [rbx+0x6c]
  408833:	outs   dx,DWORD PTR ds:[rsi]
  408834:	jae    0x4088ab
  408836:	jb     0x40889d
  408838:	pop    rdi
  408839:	ins    DWORD PTR es:[rdi],dx
  40883a:	(bad)  
  40883b:	jb     0x4088b0
  40883d:	push   0x565f6c61
  408842:	rex.WRXB
  408843:	rex.WB
  408844:	rex.R pop rdi
  408846:	pop    rdi
  408847:	push   rsi
  408848:	rex.WRXB
  408849:	rex.WB
  40884a:	add    BYTE PTR [rax],r8b
  40884d:	add    BYTE PTR [rax],al
  40884f:	add    BYTE PTR [rdi+0x5f],ah
  408852:	movsxd esp,DWORD PTR [rbx+0x6c]
  408855:	outs   dx,DWORD PTR ds:[rsi]
  408856:	jae    0x4088cd
  408858:	jb     0x4088bf
  40885a:	pop    rdi
  40885b:	ins    DWORD PTR es:[rdi],dx
  40885c:	(bad)  
  40885d:	jb     0x4088d2
  40885f:	push   0x565f6c61
  408864:	rex.WRXB
  408865:	rex.WB
  408866:	rex.R pop rdi
  408868:	pop    rdi
  408869:	rex.X
  40886a:	rex.WRXB
  40886b:	rex.WRXB
  40886c:	rex.WR
  40886d:	rex.RB
  40886e:	rex.B
  40886f:	rex.WRX add BYTE PTR [rdi+0x5f],r12b
  408873:	movsxd esp,DWORD PTR [rbx+0x6c]
  408876:	outs   dx,DWORD PTR ds:[rsi]
  408877:	jae    0x4088ee
  408879:	jb     0x4088e0
  40887b:	pop    rdi
  40887c:	ins    DWORD PTR es:[rdi],dx
  40887d:	(bad)  
  40887e:	jb     0x4088f3
  408880:	push   0x565f6c61
  408885:	rex.WRXB
  408886:	rex.WB
  408887:	rex.R pop rdi
  408889:	pop    rdi
  40888a:	rex.XB
  40888b:	rex.W
  40888c:	push   r10
  40888e:	add    BYTE PTR [rax],al
  408890:	addr32 pop rdi
  408892:	movsxd esp,DWORD PTR [rbx+0x6c]
  408895:	outs   dx,DWORD PTR ds:[rsi]
  408896:	jae    0x40890d
  408898:	jb     0x4088ff
  40889a:	pop    rdi
  40889b:	ins    DWORD PTR es:[rdi],dx
  40889c:	(bad)  
  40889d:	jb     0x408912
  40889f:	push   0x565f6c61
  4088a4:	rex.WRXB
  4088a5:	rex.WB
  4088a6:	rex.R pop rdi
  4088a8:	pop    rdi
  4088a9:	push   rbp
  4088aa:	rex.XB
  4088ab:	rex.W
  4088ac:	push   r10
  4088ae:	add    BYTE PTR [rdi+0x5f],ah
  4088b1:	movsxd esp,DWORD PTR [rbx+0x6c]
  4088b4:	outs   dx,DWORD PTR ds:[rsi]
  4088b5:	jae    0x40892c
  4088b7:	jb     0x40891e
  4088b9:	pop    rdi
  4088ba:	ins    DWORD PTR es:[rdi],dx
  4088bb:	(bad)  
  4088bc:	jb     0x408931
  4088be:	push   0x565f6c61
  4088c3:	rex.WRXB
  4088c4:	rex.WB
  4088c5:	rex.R pop rdi
  4088c7:	pop    rdi
  4088c8:	rex.WB
  4088c9:	rex.WRX push rsp
  4088cb:	add    BYTE PTR [rdi+0x5f],ah
  4088ce:	movsxd esp,DWORD PTR [rbx+0x6c]
  4088d1:	outs   dx,DWORD PTR ds:[rsi]
  4088d2:	jae    0x408949
  4088d4:	jb     0x40893b
  4088d6:	pop    rdi
  4088d7:	ins    DWORD PTR es:[rdi],dx
  4088d8:	(bad)  
  4088d9:	jb     0x40894e
  4088db:	push   0x565f6c61
  4088e0:	rex.WRXB
  4088e1:	rex.WB
  4088e2:	rex.R pop rdi
  4088e4:	pop    rdi
  4088e5:	push   rbp
  4088e6:	rex.WB
  4088e7:	rex.WRX push rsp
  4088e9:	add    BYTE PTR [rdi+0x5f],ah
  4088ec:	movsxd esp,DWORD PTR [rbx+0x6c]
  4088ef:	outs   dx,DWORD PTR ds:[rsi]
  4088f0:	jae    0x408967
  4088f2:	jb     0x408959
  4088f4:	pop    rdi
  4088f5:	ins    DWORD PTR es:[rdi],dx
  4088f6:	(bad)  
  4088f7:	jb     0x40896c
  4088f9:	push   0x565f6c61
  4088fe:	rex.WRXB
  4088ff:	rex.WB
  408900:	rex.R pop rdi
  408902:	pop    rdi
  408903:	rex.WR
  408904:	rex.WRXB
  408905:	rex.WRX
  408906:	rex.RXB add BYTE PTR [r15+0x5f],r12b
  40890a:	movsxd esp,DWORD PTR [rbx+0x6c]
  40890d:	outs   dx,DWORD PTR ds:[rsi]
  40890e:	jae    0x408985
  408910:	jb     0x408977
  408912:	pop    rdi
  408913:	ins    DWORD PTR es:[rdi],dx
  408914:	(bad)  
  408915:	jb     0x40898a
  408917:	push   0x565f6c61
  40891c:	rex.WRXB
  40891d:	rex.WB
  40891e:	rex.R pop rdi
  408920:	pop    rdi
  408921:	push   rbp
  408922:	rex.WR
  408923:	rex.WRXB
  408924:	rex.WRX
  408925:	rex.RXB add BYTE PTR [r15+0x5f],r12b
  408929:	movsxd esp,DWORD PTR [rbx+0x6c]
  40892c:	outs   dx,DWORD PTR ds:[rsi]
  40892d:	jae    0x4089a4
  40892f:	jb     0x408996
  408931:	pop    rdi
  408932:	ins    DWORD PTR es:[rdi],dx
  408933:	(bad)  
  408934:	jb     0x4089a9
  408936:	push   0x565f6c61
  40893b:	rex.WRXB
  40893c:	rex.WB
  40893d:	rex.R pop rdi
  40893f:	pop    rdi
  408940:	rex.RB
  408941:	rex.WRX push rbp
  408943:	rex.WRB add BYTE PTR [r8],r8b
  408946:	add    BYTE PTR [rax],al
  408948:	addr32 pop rdi
  40894a:	movsxd esp,DWORD PTR [rbx+0x6c]
  40894d:	outs   dx,DWORD PTR ds:[rsi]
  40894e:	jae    0x4089c5
  408950:	jb     0x4089b7
  408952:	pop    rdi
  408953:	ins    DWORD PTR es:[rdi],dx
  408954:	(bad)  
  408955:	jb     0x4089ca
  408957:	push   0x565f6c61
  40895c:	rex.WRXB
  40895d:	rex.WB
  40895e:	rex.R pop rdi
  408960:	pop    rdi
  408961:	rex.RX
  408962:	rex.WR
  408963:	rex.B
  408964:	rex.RXB push r11
  408966:	add    BYTE PTR [rax],al
  408968:	addr32 pop rdi
  40896a:	movsxd esp,DWORD PTR [rbx+0x6c]
  40896d:	outs   dx,DWORD PTR ds:[rsi]
  40896e:	jae    0x4089e5
  408970:	jb     0x4089d7
  408972:	pop    rdi
  408973:	ins    DWORD PTR es:[rdi],dx
  408974:	(bad)  
  408975:	jb     0x4089ea
  408977:	push   0x565f6c61
  40897c:	rex.WRXB
  40897d:	rex.WB
  40897e:	rex.R pop rdi
  408980:	pop    rdi
  408981:	rex.RX
  408982:	rex.WR
  408983:	rex.WRXB
  408984:	push   r12
  408986:	add    BYTE PTR [rax],al
  408988:	addr32 pop rdi
  40898a:	movsxd esp,DWORD PTR [rbx+0x6c]
  40898d:	outs   dx,DWORD PTR ds:[rsi]
  40898e:	jae    0x408a05
  408990:	jb     0x4089f7
  408992:	pop    rdi
  408993:	ins    DWORD PTR es:[rdi],dx
  408994:	(bad)  
  408995:	jb     0x408a0a
  408997:	push   0x565f6c61
  40899c:	rex.WRXB
  40899d:	rex.WB
  40899e:	rex.R pop rdi
  4089a0:	pop    rdi
  4089a1:	rex.R
  4089a2:	rex.WRXB push r13
  4089a4:	rex.X
  4089a5:	rex.WR
  4089a6:	add    BYTE PTR [r15+0x5f],r12b
  4089aa:	movsxd esp,DWORD PTR [rbx+0x6c]
  4089ad:	outs   dx,DWORD PTR ds:[rsi]
  4089ae:	jae    0x408a25
  4089b0:	jb     0x408a17
  4089b2:	pop    rdi
  4089b3:	ins    DWORD PTR es:[rdi],dx
  4089b4:	(bad)  
  4089b5:	jb     0x408a2a
  4089b7:	push   0x565f6c61
  4089bc:	rex.WRXB
  4089bd:	rex.WB
  4089be:	rex.R pop rdi
  4089c0:	pop    rdi
  4089c1:	push   rbx
  4089c2:	push   rsp
  4089c3:	push   rdx
  4089c4:	rex.WB
  4089c5:	rex.WRX
  4089c6:	rex.RXB add BYTE PTR [r15+0x5f],r12b
  4089ca:	movsxd esp,DWORD PTR [rbx+0x6c]
  4089cd:	outs   dx,DWORD PTR ds:[rsi]
  4089ce:	jae    0x408a45
  4089d0:	jb     0x408a37
  4089d2:	pop    rdi
  4089d3:	ins    DWORD PTR es:[rdi],dx
  4089d4:	(bad)  
  4089d5:	jb     0x408a4a
  4089d7:	push   0x565f6c61
  4089dc:	rex.WRXB
  4089dd:	rex.WB
  4089de:	rex.R pop rdi
  4089e0:	pop    rdi
  4089e1:	push   rax
  4089e2:	push   r10
  4089e4:	rex.B
  4089e5:	rex.WRB add BYTE PTR [r8],r8b
  4089e8:	addr32 pop rdi
  4089ea:	movsxd esp,DWORD PTR [rbx+0x6c]
  4089ed:	outs   dx,DWORD PTR ds:[rsi]
  4089ee:	jae    0x408a65
  4089f0:	jb     0x408a57
  4089f2:	pop    rdi
  4089f3:	ins    DWORD PTR es:[rdi],dx
  4089f4:	(bad)  
  4089f5:	jb     0x408a6a
  4089f7:	push   0x565f6c61
  4089fc:	rex.WRXB
  4089fd:	rex.WB
  4089fe:	rex.R pop rdi
  408a00:	pop    rdi
  408a01:	rex.X
  408a02:	rex.WRXB pop r8
  408a04:	rex.RB
  408a05:	add    BYTE PTR [rax],r8b
  408a08:	addr32 pop rdi
  408a0a:	movsxd esp,DWORD PTR [rbx+0x6c]
  408a0d:	outs   dx,DWORD PTR ds:[rsi]
  408a0e:	jae    0x408a85
  408a10:	jb     0x408a77
  408a12:	pop    rdi
  408a13:	ins    DWORD PTR es:[rdi],dx
  408a14:	(bad)  
  408a15:	jb     0x408a8a
  408a17:	push   0x565f6c61
  408a1c:	rex.WRXB
  408a1d:	rex.WB
  408a1e:	rex.R pop rdi
  408a20:	pop    rdi
  408a21:	push   rax
  408a22:	rex.WRXB
  408a23:	rex.WB
  408a24:	rex.WRX push rsp
  408a26:	rex.RB push r10
	...
  408a30:	addr32 pop rdi
  408a32:	movsxd esp,DWORD PTR [rbx+0x6c]
  408a35:	outs   dx,DWORD PTR ds:[rsi]
  408a36:	jae    0x408aad
  408a38:	jb     0x408a9f
  408a3a:	pop    rdi
  408a3b:	ins    DWORD PTR es:[rdi],dx
  408a3c:	(bad)  
  408a3d:	jb     0x408ab2
  408a3f:	push   0x565f6c61
  408a44:	rex.WRXB
  408a45:	rex.WB
  408a46:	rex.R pop rdi
  408a48:	pop    rdi
  408a49:	rex.WRXB
  408a4a:	rex.X
  408a4b:	rex.WX
  408a4c:	rex.RB
  408a4d:	rex.XB push r12
  408a4f:	add    BYTE PTR [rdi+0x5f],ah
  408a52:	movsxd esp,DWORD PTR [rbx+0x6c]
  408a55:	outs   dx,DWORD PTR ds:[rsi]
  408a56:	jae    0x408acd
  408a58:	jb     0x408abf
  408a5a:	pop    rdi
  408a5b:	ins    DWORD PTR es:[rdi],dx
  408a5c:	(bad)  
  408a5d:	jb     0x408ad2
  408a5f:	push   0x565f6c61
  408a64:	rex.WRXB
  408a65:	rex.WB
  408a66:	rex.R pop rdi
  408a68:	pop    rdi
  408a69:	push   rsi
  408a6a:	push   r10
  408a6c:	rex.WB
  408a6d:	rex.B
  408a6e:	rex.WRX push rsp
	...
  408a78:	addr32 pop rdi
  408a7a:	movsxd esp,DWORD PTR [rbx+0x6c]
  408a7d:	outs   dx,DWORD PTR ds:[rsi]
  408a7e:	jae    0x408af5
  408a80:	jb     0x408ae7
  408a82:	pop    rdi
  408a83:	ins    DWORD PTR es:[rdi],dx
  408a84:	(bad)  
  408a85:	jb     0x408afa
  408a87:	push   0x565f6c61
  408a8c:	rex.WRXB
  408a8d:	rex.WB
  408a8e:	rex.R pop rdi
  408a90:	pop    rdi
  408a91:	push   rbp
  408a92:	rex.WB
  408a93:	rex.WRX push rsp
  408a95:	pop    rdi
  408a96:	push   rax
  408a97:	rex.WRXB
  408a98:	rex.WB
  408a99:	rex.WRX push rsp
  408a9b:	rex.RB push r10
  408a9d:	add    BYTE PTR [rax],al
  408a9f:	add    BYTE PTR [rdi+0x5f],ah
  408aa2:	movsxd esp,DWORD PTR [rbx+0x6c]
  408aa5:	outs   dx,DWORD PTR ds:[rsi]
  408aa6:	jae    0x408b1d
  408aa8:	jb     0x408b0f
  408aaa:	pop    rdi
  408aab:	ins    DWORD PTR es:[rdi],dx
  408aac:	(bad)  
  408aad:	jb     0x408b22
  408aaf:	push   0x425f6c61
  408ab4:	rex.WRXB
  408ab5:	rex.WRXB
  408ab6:	rex.WR pop rdi
  408ab8:	pop    rdi
  408ab9:	rex.RX
  408aba:	rex.WR
  408abb:	rex.B
  408abc:	rex.RXB push r11
  408abe:	add    BYTE PTR [rax],al
  408ac0:	addr32 pop rdi
  408ac2:	movsxd esp,DWORD PTR [rbx+0x6c]
  408ac5:	outs   dx,DWORD PTR ds:[rsi]
  408ac6:	jae    0x408b3d
  408ac8:	jb     0x408b2f
  408aca:	pop    rdi
  408acb:	ins    DWORD PTR es:[rdi],dx
  408acc:	(bad)  
  408acd:	jb     0x408b42
  408acf:	push   0x535f6c61
  408ad4:	push   rsp
  408ad5:	push   rdx
  408ad6:	rex.WB
  408ad7:	rex.WRX
  408ad8:	rex.RXB pop r15
  408ada:	pop    rdi
  408adb:	rex.WRXB
  408adc:	rex.X
  408add:	rex.WX
  408ade:	rex.RB
  408adf:	rex.XB push r12
  408ae1:	pop    rdi
  408ae2:	push   rax
  408ae3:	rex.WRXB
  408ae4:	rex.WB
  408ae5:	rex.WRX push rsp
  408ae7:	rex.RB push r10
  408ae9:	add    BYTE PTR [rax],al
  408aeb:	add    BYTE PTR [rax],al
  408aed:	add    BYTE PTR [rax],al
  408aef:	add    BYTE PTR [rdi+0x5f],ah
  408af2:	movsxd esp,DWORD PTR [rbx+0x6c]
  408af5:	outs   dx,DWORD PTR ds:[rsi]
  408af6:	jae    0x408b6d
  408af8:	jb     0x408b5f
  408afa:	pop    rdi
  408afb:	ins    DWORD PTR es:[rdi],dx
  408afc:	(bad)  
  408afd:	jb     0x408b72
  408aff:	push   0x425f6c61
  408b04:	rex.WRXB
  408b05:	rex.WRXB
  408b06:	rex.WR pop rdi
  408b08:	pop    rdi
  408b09:	rex.X
  408b0a:	rex.WRXB pop r8
  408b0c:	rex.RB
  408b0d:	rex.R pop rdi
  408b0f:	rex.X
  408b10:	rex.WRXB pop r8
  408b12:	rex.RB
  408b13:	add    BYTE PTR [rax+0x61],r14b
  408b17:	add    BYTE PTR fs:[rsi+0x4f],dl
  408b1b:	rex.WB
  408b1c:	add    BYTE PTR [rsi+0x6f],r14b
  408b20:	imul   esp,DWORD PTR [rax+rax*1+0x42],0x454c4f4f
  408b28:	rex.B
  408b29:	rex.WRX add BYTE PTR [rdi+0x62],r12b
  408b2d:	outs   dx,DWORD PTR ds:[rsi]
  408b2e:	outs   dx,DWORD PTR ds:[rsi]
  408b2f:	ins    BYTE PTR es:[rdi],dx
  408b30:	gs (bad) 
  408b32:	outs   dx,BYTE PTR ds:[rsi]
  408b33:	add    BYTE PTR [rdi+0x5f],ah
  408b36:	ins    DWORD PTR es:[rdi],dx
  408b37:	(bad)  
  408b38:	jb     0x408bad
  408b3a:	push   0x765f6c61
  408b3f:	(bad)  
  408b40:	ins    BYTE PTR es:[rdi],dx
  408b41:	jne    0x408ba8
  408b43:	pop    rdi
  408b44:	jo     0x408bab
  408b46:	imul   ebx,DWORD PTR gs:[rdi+0x62],0x6f
  408b4b:	outs   dx,DWORD PTR ds:[rsi]
  408b4c:	ins    BYTE PTR es:[rdi],dx
  408b4d:	gs (bad) 
  408b4f:	outs   dx,BYTE PTR ds:[rsi]
  408b50:	add    BYTE PTR [rbx+0x48],al
  408b53:	push   r10
  408b55:	add    BYTE PTR [rdi+0x63],ah
  408b58:	push   0x67007261
  408b5d:	imul   ebp,DWORD PTR [rsi+0x74],0x6d5f6700
  408b64:	(bad)  
  408b65:	jb     0x408bda
  408b67:	push   0x765f6c61
  408b6c:	(bad)  
  408b6d:	ins    BYTE PTR es:[rdi],dx
  408b6e:	jne    0x408bd5
  408b70:	pop    rdi
  408b71:	jo     0x408bd8
  408b73:	imul   ebx,DWORD PTR gs:[rdi+0x63],0x68
  408b78:	(bad)  
  408b79:	jb     0x408b7b
  408b7b:	push   rbp
  408b7c:	rex.XB
  408b7d:	rex.W
  408b7e:	push   r10
  408b80:	add    BYTE PTR [rdi+0x75],ah
  408b83:	movsxd ebp,DWORD PTR [rax+0x61]
  408b86:	jb     0x408b88
  408b88:	addr32 jne 0x408bf4
  408b8b:	outs   dx,BYTE PTR ds:[rsi]
  408b8c:	je     0x408b8e
  408b8e:	addr32 pop rdi
  408b90:	ins    DWORD PTR es:[rdi],dx
  408b91:	(bad)  
  408b92:	jb     0x408c07
  408b94:	push   0x765f6c61
  408b99:	(bad)  
  408b9a:	ins    BYTE PTR es:[rdi],dx
  408b9b:	jne    0x408c02
  408b9d:	pop    rdi
  408b9e:	jo     0x408c05
  408ba0:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x63
  408ba5:	push   0x49007261
  408baa:	rex.WRX push rsp
  408bac:	add    BYTE PTR [rdi+0x5f],ah
  408baf:	ins    DWORD PTR es:[rdi],dx
  408bb0:	(bad)  
  408bb1:	jb     0x408c26
  408bb3:	push   0x765f6c61
  408bb8:	(bad)  
  408bb9:	ins    BYTE PTR es:[rdi],dx
  408bba:	jne    0x408c21
  408bbc:	pop    rdi
  408bbd:	jo     0x408c24
  408bbf:	imul   ebx,DWORD PTR gs:[rdi+0x69],0x6e
  408bc4:	je     0x408bc6
  408bc6:	push   rbp
  408bc7:	rex.WB
  408bc8:	rex.WRX push rsp
  408bca:	add    BYTE PTR [rdi+0x5f],ah
  408bcd:	ins    DWORD PTR es:[rdi],dx
  408bce:	(bad)  
  408bcf:	jb     0x408c44
  408bd1:	push   0x765f6c61
  408bd6:	(bad)  
  408bd7:	ins    BYTE PTR es:[rdi],dx
  408bd8:	jne    0x408c3f
  408bda:	pop    rdi
  408bdb:	jo     0x408c42
  408bdd:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x69
  408be2:	outs   dx,BYTE PTR ds:[rsi]
  408be3:	je     0x408be5
  408be5:	rex.WR
  408be6:	rex.WRXB
  408be7:	rex.WRX
  408be8:	rex.RXB add BYTE PTR [r15+0x6c],r12b
  408bec:	outs   dx,DWORD PTR ds:[rsi]
  408bed:	outs   dx,BYTE PTR ds:[rsi]
  408bee:	add    BYTE PTR [edi+0x5f],ah
  408bf2:	ins    DWORD PTR es:[rdi],dx
  408bf3:	(bad)  
  408bf4:	jb     0x408c69
  408bf6:	push   0x765f6c61
  408bfb:	(bad)  
  408bfc:	ins    BYTE PTR es:[rdi],dx
  408bfd:	jne    0x408c64
  408bff:	pop    rdi
  408c00:	jo     0x408c67
  408c02:	imul   ebx,DWORD PTR gs:[rdi+0x6c],0x6f
  408c07:	outs   dx,BYTE PTR ds:[rsi]
  408c08:	add    BYTE PTR [ebp+0x4c],dl
  408c0c:	rex.WRXB
  408c0d:	rex.WRX
  408c0e:	rex.RXB add BYTE PTR [r15+0x75],r12b
  408c12:	ins    BYTE PTR es:[rdi],dx
  408c13:	outs   dx,DWORD PTR ds:[rsi]
  408c14:	outs   dx,BYTE PTR ds:[rsi]
  408c15:	add    BYTE PTR [edi+0x5f],ah
  408c19:	ins    DWORD PTR es:[rdi],dx
  408c1a:	(bad)  
  408c1b:	jb     0x408c90
  408c1d:	push   0x765f6c61
  408c22:	(bad)  
  408c23:	ins    BYTE PTR es:[rdi],dx
  408c24:	jne    0x408c8b
  408c26:	pop    rdi
  408c27:	jo     0x408c8e
  408c29:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x6c
  408c2e:	outs   dx,DWORD PTR ds:[rsi]
  408c2f:	outs   dx,BYTE PTR ds:[rsi]
  408c30:	add    BYTE PTR [ecx+0x4e],cl
  408c34:	push   rsp
  408c35:	ss xor al,0x0
  408c38:	imul   ebp,DWORD PTR [esi+0x74],0x67003436
  408c40:	pop    rdi
  408c41:	ins    DWORD PTR es:[rdi],dx
  408c42:	(bad)  
  408c43:	jb     0x408cb8
  408c45:	push   0x765f6c61
  408c4a:	(bad)  
  408c4b:	ins    BYTE PTR es:[rdi],dx
  408c4c:	jne    0x408cb3
  408c4e:	pop    rdi
  408c4f:	jo     0x408cb6
  408c51:	imul   ebx,DWORD PTR gs:[rdi+0x69],0x6e
  408c56:	je     0x408c8e
  408c58:	xor    al,0x0
  408c5a:	push   rbp
  408c5b:	rex.WB
  408c5c:	rex.WRX push rsp
  408c5e:	ss xor al,0x0
  408c61:	addr32 jne 0x408ccd
  408c64:	outs   dx,BYTE PTR ds:[rsi]
  408c65:	je     0x408c9d
  408c67:	xor    al,0x0
  408c69:	addr32 pop rdi
  408c6b:	ins    DWORD PTR es:[rdi],dx
  408c6c:	(bad)  
  408c6d:	jb     0x408ce2
  408c6f:	push   0x765f6c61
  408c74:	(bad)  
  408c75:	ins    BYTE PTR es:[rdi],dx
  408c76:	jne    0x408cdd
  408c78:	pop    rdi
  408c79:	jo     0x408ce0
  408c7b:	imul   ebx,DWORD PTR gs:[rdi+0x75],0x69
  408c80:	outs   dx,BYTE PTR ds:[rsi]
  408c81:	je     0x408cb9
  408c83:	xor    al,0x0
  408c85:	rex.RB
  408c86:	rex.WRX push rbp
  408c88:	rex.WRB add BYTE PTR [r15+0x5f],r12b
  408c8c:	ins    DWORD PTR es:[rdi],dx
  408c8d:	(bad)  
  408c8e:	jb     0x408d03
  408c90:	push   0x765f6c61
  408c95:	(bad)  
  408c96:	ins    BYTE PTR es:[rdi],dx
  408c97:	jne    0x408cfe
  408c99:	pop    rdi
  408c9a:	jo     0x408d01
  408c9c:	imul   ebx,DWORD PTR gs:[rdi+0x65],0x6e
  408ca1:	jne    0x408d10
  408ca3:	add    BYTE PTR [rsi+0x4c],al
  408ca6:	rex.B
  408ca7:	rex.RXB push r11
  408ca9:	add    BYTE PTR [rdi+0x5f],ah
  408cac:	ins    DWORD PTR es:[rdi],dx
  408cad:	(bad)  
  408cae:	jb     0x408d23
  408cb0:	push   0x765f6c61
  408cb5:	(bad)  
  408cb6:	ins    BYTE PTR es:[rdi],dx
  408cb7:	jne    0x408d1e
  408cb9:	pop    rdi
  408cba:	jo     0x408d21
  408cbc:	imul   ebx,DWORD PTR gs:[rdi+0x66],0x6c
  408cc1:	(bad)  
  408cc2:	addr32 jae 0x408cc5
  408cc5:	rex.RX
  408cc6:	rex.WR
  408cc7:	rex.WRXB
  408cc8:	push   r12
  408cca:	add    BYTE PTR [rdi+0x66],ah
  408ccd:	ins    BYTE PTR es:[rdi],dx
  408cce:	outs   dx,DWORD PTR ds:[rsi]
  408ccf:	(bad)  
  408cd0:	je     0x408cd2
  408cd2:	outs   dx,DWORD PTR fs:[esi]
  408cd5:	jne    0x408d39
  408cd7:	ins    BYTE PTR es:[rdi],dx
  408cd8:	add    BYTE PTR gs:[rdi+0x5f],ah
  408cdc:	ins    DWORD PTR es:[rdi],dx
  408cdd:	(bad)  
  408cde:	jb     0x408d53
  408ce0:	push   0x765f6c61
  408ce5:	(bad)  
  408ce6:	ins    BYTE PTR es:[rdi],dx
  408ce7:	jne    0x408d4e
  408ce9:	pop    rdi
  408cea:	jo     0x408d51
  408cec:	imul   ebx,DWORD PTR gs:[rdi+0x66],0x6c
  408cf1:	outs   dx,DWORD PTR ds:[rsi]
  408cf2:	(bad)  
  408cf3:	je     0x408cf5
  408cf5:	rex.R
  408cf6:	rex.WRXB push r13
  408cf8:	rex.X
  408cf9:	rex.WR
  408cfa:	add    BYTE PTR [r15+0x5f],r12b
  408cfe:	ins    DWORD PTR es:[rdi],dx
  408cff:	(bad)  
  408d00:	jb     0x408d75
  408d02:	push   0x765f6c61
  408d07:	(bad)  
  408d08:	ins    BYTE PTR es:[rdi],dx
  408d09:	jne    0x408d70
  408d0b:	pop    rdi
  408d0c:	jo     0x408d73
  408d0e:	imul   ebx,DWORD PTR gs:[rdi+0x64],0x6f
  408d13:	jne    0x408d77
  408d15:	ins    BYTE PTR es:[rdi],dx
  408d16:	add    BYTE PTR gs:[rbx+0x54],dl
  408d1a:	push   rdx
  408d1b:	rex.WB
  408d1c:	rex.WRX
  408d1d:	rex.RXB add BYTE PTR [r15+0x5f],r12b
  408d21:	ins    DWORD PTR es:[rdi],dx
  408d22:	(bad)  
  408d23:	jb     0x408d98
  408d25:	push   0x765f6c61
  408d2a:	(bad)  
  408d2b:	ins    BYTE PTR es:[rdi],dx
  408d2c:	jne    0x408d93
  408d2e:	pop    rdi
  408d2f:	jo     0x408d96
  408d31:	imul   ebx,DWORD PTR gs:[rdi+0x73],0x74
  408d36:	jb     0x408da1
  408d38:	outs   dx,BYTE PTR ds:[rsi]
  408d39:	add    BYTE PTR [edi+0x5f],ah
  408d3d:	jae    0x408db3
  408d3f:	jb     0x408da5
  408d41:	jne    0x408db3
  408d43:	add    BYTE PTR [rdi+0x5f],ah
  408d46:	data16 jb 0x408dae
  408d49:	add    BYTE PTR gs:[rax+0x41],dl
  408d4d:	push   rdx
  408d4e:	rex.B
  408d4f:	rex.WRB add BYTE PTR [r15+0x5f],r12b
  408d53:	ins    DWORD PTR es:[rdi],dx
  408d54:	(bad)  
  408d55:	jb     0x408dca
  408d57:	push   0x765f6c61
  408d5c:	(bad)  
  408d5d:	ins    BYTE PTR es:[rdi],dx
  408d5e:	jne    0x408dc5
  408d60:	pop    rdi
  408d61:	jo     0x408dc8
  408d63:	imul   ebx,DWORD PTR gs:[rdi+0x70],0x61
  408d68:	jb     0x408dcb
  408d6a:	ins    DWORD PTR es:[rdi],dx
  408d6b:	add    BYTE PTR [rdi+0x5f],ah
  408d6e:	jo     0x408dd1
  408d70:	jb     0x408dd3
  408d72:	ins    DWORD PTR es:[rdi],dx
  408d73:	pop    rdi
  408d74:	jae    0x408de6
  408d76:	movsxd ebx,DWORD PTR gs:[rdi+0x72]
  408d7a:	data16 add BYTE PTR gs:[rdi+0x5f],ah
  408d7f:	jo     0x408de2
  408d81:	jb     0x408de4
  408d83:	ins    DWORD PTR es:[rdi],dx
  408d84:	pop    rdi
  408d85:	jae    0x408df7
  408d87:	movsxd ebx,DWORD PTR gs:[rdi+0x75]
  408d8b:	outs   dx,BYTE PTR ds:[rsi]
  408d8c:	jb     0x408df3
  408d8e:	data16 add BYTE PTR [rdx+0x4f],al
  408d92:	pop    rax
  408d93:	rex.RB
  408d94:	add    BYTE PTR [rdi+0x5f],r12b
  408d98:	ins    DWORD PTR es:[rdi],dx
  408d99:	(bad)  
  408d9a:	jb     0x408e0f
  408d9c:	push   0x765f6c61
  408da1:	(bad)  
  408da2:	ins    BYTE PTR es:[rdi],dx
  408da3:	jne    0x408e0a
  408da5:	pop    rdi
  408da6:	jo     0x408e0d
  408da8:	imul   ebx,DWORD PTR gs:[rdi+0x62],0x6f
  408dad:	js     0x408e14
  408daf:	add    BYTE PTR fs:[rdi+0x5f],ah
  408db3:	(bad)  
  408db4:	outs   dx,DWORD PTR ds:[rsi]
  408db5:	js     0x408e1c
  408db7:	fs pop rdi
  408db9:	movsxd ebp,DWORD PTR [rdi+0x70]
  408dbc:	jns    0x408dbe
  408dbe:	addr32 pop rdi
  408dc0:	(bad)  
  408dc1:	outs   dx,DWORD PTR ds:[rsi]
  408dc2:	js     0x408e29
  408dc4:	fs pop rdi
  408dc6:	data16 jb 0x408e2e
  408dc9:	add    BYTE PTR gs:[rax+0x4f],dl
  408dcd:	rex.WB
  408dce:	rex.WRX push rsp
  408dd0:	rex.RB push r10
  408dd2:	add    BYTE PTR [rdi+0x5f],ah
  408dd5:	ins    DWORD PTR es:[rdi],dx
  408dd6:	(bad)  
  408dd7:	jb     0x408e4c
  408dd9:	push   0x765f6c61
  408dde:	(bad)  
  408ddf:	ins    BYTE PTR es:[rdi],dx
  408de0:	jne    0x408e47
  408de2:	pop    rdi
  408de3:	jo     0x408e4a
  408de5:	imul   ebx,DWORD PTR gs:[rdi+0x70],0x6f
  408dea:	imul   ebp,DWORD PTR [rsi+0x74],0x4f007265
  408df1:	rex.X
  408df2:	rex.WX
  408df3:	rex.RB
  408df4:	rex.XB push r12
  408df6:	add    BYTE PTR [rdi+0x5f],ah
  408df9:	ins    DWORD PTR es:[rdi],dx
  408dfa:	(bad)  
  408dfb:	jb     0x408e70
  408dfd:	push   0x765f6c61
  408e02:	(bad)  
  408e03:	ins    BYTE PTR es:[rdi],dx
  408e04:	jne    0x408e6b
  408e06:	pop    rdi
  408e07:	jo     0x408e6e
  408e09:	imul   ebx,DWORD PTR gs:[rdi+0x6f],0x62
  408e0e:	push   0x65
  408e10:	movsxd esi,DWORD PTR [rax+rax*1+0x67]
  408e14:	pop    rdi
  408e15:	outs   dx,DWORD PTR ds:[rsi]
  408e16:	(bad)  
  408e17:	push   0x65
  408e19:	movsxd esi,DWORD PTR [rdi+rbx*2+0x72]
  408e1d:	data16 add BYTE PTR gs:[rdi+0x5f],ah
  408e22:	outs   dx,DWORD PTR ds:[rsi]
  408e23:	(bad)  
  408e24:	push   0x65
  408e26:	movsxd esi,DWORD PTR [rdi+rbx*2+0x75]
  408e2a:	outs   dx,BYTE PTR ds:[rsi]
  408e2b:	jb     0x408e92
  408e2d:	data16 add BYTE PTR [rsi+0x41],dl
  408e31:	push   rdx
  408e32:	rex.WB
  408e33:	rex.B
  408e34:	rex.WRX push rsp
  408e36:	add    BYTE PTR [rdi+0x5f],ah
  408e39:	ins    DWORD PTR es:[rdi],dx
  408e3a:	(bad)  
  408e3b:	jb     0x408eb0
  408e3d:	push   0x765f6c61
  408e42:	(bad)  
  408e43:	ins    BYTE PTR es:[rdi],dx
  408e44:	jne    0x408eab
  408e46:	pop    rdi
  408e47:	jo     0x408eae
  408e49:	imul   ebx,DWORD PTR gs:[rdi+0x76],0x61
  408e4e:	jb     0x408eb9
  408e50:	(bad)  
  408e51:	outs   dx,BYTE PTR ds:[rsi]
  408e52:	je     0x408e54
  408e54:	addr32 pop rdi
  408e56:	jbe    0x408eb9
  408e58:	jb     0x408ec3
  408e5a:	(bad)  
  408e5b:	outs   dx,BYTE PTR ds:[rsi]
  408e5c:	je     0x408ebd
  408e5e:	jb     0x408ec5
  408e60:	pop    di
  408e62:	jae    0x408ecd
  408e64:	outs   dx,BYTE PTR ds:[rsi]
  408e65:	imul   eax,DWORD PTR [rax],0x67
  408e68:	pop    rdi
  408e69:	jbe    0x408ecc
  408e6b:	jb     0x408ed6
  408e6d:	(bad)  
  408e6e:	outs   dx,BYTE PTR ds:[rsi]
  408e6f:	je     0x408ed0
  408e71:	jne    0x408ee1
  408e73:	jb     0x408eda
  408e75:	data16 add BYTE PTR [rsi+0x4f],cl
  408e79:	rex.WRX
  408e7a:	add    BYTE PTR [r10+0x4f],r8b
  408e7e:	rex.WRXB
  408e7f:	rex.WR add BYTE PTR [rax],r8b
	...
  408ebe:	add    BYTE PTR [rax],al
  408ec0:	sbb    DWORD PTR [rbx+0x40],ecx
  408ec6:	add    BYTE PTR [rax],al
  408ec8:	sbb    DWORD PTR [rbx+0x40],ecx
  408ece:	add    BYTE PTR [rax],al
  408ed0:	(bad)  
  408ed1:	mov    eax,DWORD PTR [rax+0x0]
  408ed4:	add    BYTE PTR [rax],al
  408ed6:	add    BYTE PTR [rax],al
  408ed8:	(bad)  
  408ed9:	mov    eax,DWORD PTR [rax+0x0]
	...
  408f00:	and    ecx,DWORD PTR [rbx+0x40]
  408f06:	add    BYTE PTR [rax],al
  408f08:	and    ecx,DWORD PTR [rbx+0x40]
  408f0e:	add    BYTE PTR [rax],al
  408f10:	sub    ecx,DWORD PTR [rbx+0x40]
  408f16:	add    BYTE PTR [rax],al
  408f18:	sub    ecx,DWORD PTR [rbx+0x40]
  408f1e:	add    BYTE PTR [rax],al
  408f20:	xor    al,0x8b
  408f22:	add    BYTE PTR [rax],al
	...
  408f3d:	add    BYTE PTR [rax],al
  408f3f:	add    BYTE PTR [rcx-0x75],dl
  408f42:	add    BYTE PTR [rax],al
  408f45:	add    BYTE PTR [rax],al
  408f47:	add    BYTE PTR [rcx-0x75],dl
  408f4a:	add    BYTE PTR [rax],al
  408f4d:	add    BYTE PTR [rax],al
  408f4f:	add    BYTE PTR [rsi-0x75],dl
  408f52:	add    BYTE PTR [rax],al
  408f55:	add    BYTE PTR [rax],al
  408f57:	add    BYTE PTR [rbx+rcx*4+0x40],bl
  408f5b:	add    BYTE PTR [rax],al
  408f5d:	add    BYTE PTR [rax],al
  408f5f:	add    BYTE PTR [rcx-0x75],ah
  408f62:	add    BYTE PTR [rax],al
	...
  408f7d:	add    BYTE PTR [rax],al
  408f7f:	add    BYTE PTR [rbx-0x75],bh
  408f82:	add    BYTE PTR [rax],al
  408f85:	add    BYTE PTR [rax],al
  408f87:	add    BYTE PTR [rbx-0x75],bh
  408f8a:	add    BYTE PTR [rax],al
  408f8d:	add    BYTE PTR [rax],al
  408f8f:	add    BYTE PTR [rcx+0x408b],al
  408f95:	add    BYTE PTR [rax],al
  408f97:	add    BYTE PTR [rax+0x408b],cl
  408f9d:	add    BYTE PTR [rax],al
  408f9f:	add    BYTE PTR [rsi+0x408b],cl
	...
  408fbd:	add    BYTE PTR [rax],al
  408fbf:	add    BYTE PTR [rcx+0x408b],ch
  408fc5:	add    BYTE PTR [rax],al
  408fc7:	add    BYTE PTR [rcx+0x408b],ch
  408fcd:	add    BYTE PTR [rax],al
  408fcf:	add    BYTE PTR [rbx+rcx*4+0x40],bl
  408fd3:	add    BYTE PTR [rax],al
  408fd5:	add    BYTE PTR [rax],al
  408fd7:	add    BYTE PTR [rbx+rcx*4+0x40],bl
  408fdb:	add    BYTE PTR [rax],al
  408fdd:	add    BYTE PTR [rax],al
  408fdf:	add    BYTE PTR [rbp+0x408b],ch
	...
  408ffd:	add    BYTE PTR [rax],al
  408fff:	add    dh,al
  409001:	mov    eax,DWORD PTR [rax+0x0]
  409004:	add    BYTE PTR [rax],al
  409006:	add    BYTE PTR [rax],al
  409008:	(bad)  
  409009:	mov    eax,DWORD PTR [rax+0x0]
  40900c:	add    BYTE PTR [rax],al
  40900e:	add    BYTE PTR [rax],al
  409010:	mov    BYTE PTR [rbx+0x40],cl
  409016:	add    BYTE PTR [rax],al
  409018:	mov    BYTE PTR [rbx+0x40],cl
  40901e:	add    BYTE PTR [rax],al
  409020:	retf   
  409021:	mov    eax,DWORD PTR [rax+0x0]
	...
  409040:	in     eax,0x8b
  409042:	add    BYTE PTR [rax],al
  409045:	add    BYTE PTR [rax],al
  409047:	add    ch,ah
  409049:	mov    eax,DWORD PTR [rax+0x0]
  40904c:	add    BYTE PTR [rax],al
  40904e:	add    BYTE PTR [rax],al
  409050:	(bad)  
  409051:	mov    eax,DWORD PTR [rax+0x0]
  409054:	add    BYTE PTR [rax],al
  409056:	add    BYTE PTR [rax],al
  409058:	(bad)  
  409059:	mov    eax,DWORD PTR [rax+0x0]
  40905c:	add    BYTE PTR [rax],al
  40905e:	add    BYTE PTR [rax],al
  409060:	lock mov eax,DWORD PTR [rax+0x0]
	...
  409080:	or     cl,BYTE PTR [rax+rax*2+0x0]
  409087:	add    BYTE PTR [rdx],cl
  409089:	mov    WORD PTR [rax+0x0],es
  40908c:	add    BYTE PTR [rax],al
  40908e:	add    BYTE PTR [rax],al
  409090:	adc    BYTE PTR [rax+rax*2+0x0],cl
  409097:	add    BYTE PTR [rax],dl
  409099:	mov    WORD PTR [rax+0x0],es
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	(bad)  
  4090a1:	mov    WORD PTR [rax+0x0],es
	...
  4090c0:	xor    cl,BYTE PTR [rax+rax*2+0x0]
  4090c7:	add    BYTE PTR [rdx],dh
  4090c9:	mov    WORD PTR [rax+0x0],es
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	cmp    BYTE PTR [rax+rax*2+0x0],cl
  4090d7:	add    BYTE PTR [rax],bh
  4090d9:	mov    WORD PTR [rax+0x0],es
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	(bad)  
  4090e1:	mov    WORD PTR [rax+0x0],es
	...
  409100:	pop    rdx
  409101:	mov    WORD PTR [rax+0x0],es
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	pop    rdx
  409109:	mov    WORD PTR [rax+0x0],es
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	(bad)  
  409111:	mov    WORD PTR [rax+0x0],es
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	(bad)  
  409119:	mov    WORD PTR [rax+0x0],es
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	imul   ecx,DWORD PTR [rax+rax*2+0x0],0x0
	...
  40913f:	add    BYTE PTR [rbp+0x408c],al
  409145:	add    BYTE PTR [rax],al
  409147:	add    BYTE PTR [rbp+0x408c],al
  40914d:	add    BYTE PTR [rax],al
  40914f:	add    BYTE PTR [rbx+rcx*4+0x40],bl
  409153:	add    BYTE PTR [rax],al
  409155:	add    BYTE PTR [rax],al
  409157:	add    BYTE PTR [rbx+rcx*4+0x40],bl
  40915b:	add    BYTE PTR [rax],al
  40915d:	add    BYTE PTR [rax],al
  40915f:	add    BYTE PTR [rdx+0x408c],cl
	...
  40917d:	add    BYTE PTR [rax],al
  40917f:	add    BYTE PTR [rsp+rcx*4+0x40],ah
  409186:	add    BYTE PTR [rax],al
  409188:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409189:	mov    WORD PTR [rax+0x0],es
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	mov    BYTE PTR [rbx+0x40],cl
  409196:	add    BYTE PTR [rax],al
  409198:	mov    BYTE PTR [rbx+0x40],cl
  40919e:	add    BYTE PTR [rax],al
  4091a0:	stos   BYTE PTR es:[rdi],al
  4091a1:	mov    WORD PTR [rax+0x0],es
	...
  4091c0:	(bad)
  4091c3:	add    BYTE PTR [rax],al
  4091c5:	add    BYTE PTR [rax],al
  4091c7:	add    ch,al
  4091c9:	mov    WORD PTR [rax+0x0],es
  4091cc:	add    BYTE PTR [rax],al
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	retf   
  4091d1:	mov    WORD PTR [rax+0x0],es
  4091d4:	add    BYTE PTR [rax],al
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	ror    BYTE PTR [rax+rax*2+0x0],cl
  4091df:	add    dl,bl
  4091e1:	mov    WORD PTR [rax+0x0],es
	...
  409200:	cmc    
  409201:	mov    WORD PTR [rax+0x0],es
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	cmc    
  409209:	mov    WORD PTR [rax+0x0],es
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	ror    BYTE PTR [rax+rax*2+0x0],cl
  409217:	add    dl,dl
  409219:	mov    WORD PTR [rax+0x0],es
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	cld    
  409221:	mov    WORD PTR [rax+0x0],es
	...
  409240:	sbb    BYTE PTR [rbp+0x40],cl
  409246:	add    BYTE PTR [rax],al
  409248:	sbb    BYTE PTR [rbp+0x40],cl
  40924e:	add    BYTE PTR [rax],al
  409250:	xor    al,BYTE PTR [rdx+0x40]
  409256:	add    BYTE PTR [rax],al
  409258:	xor    al,BYTE PTR [rdx+0x40]
  40925e:	add    BYTE PTR [rax],al
  409260:	(bad)  
  409261:	lea    eax,[rax+0x0]
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	cmp    ecx,DWORD PTR [rbp+0x40]
  40926e:	add    BYTE PTR [rax],al
  409270:	lea    r8d,[rax+0x0]
	...
  409280:	rex.WXB lea rax,[r8+0x0]
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	rex.WXB lea rax,[r8+0x0]
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	xor    al,BYTE PTR [rdx+0x40]
  409296:	add    BYTE PTR [rax],al
  409298:	xor    al,BYTE PTR [rdx+0x40]
  40929e:	add    BYTE PTR [rax],al
  4092a0:	push   rcx
  4092a1:	lea    eax,[rax+0x0]
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	ins    BYTE PTR es:[rdi],dx
  4092a9:	lea    eax,[rax+0x0]
  4092ac:	add    BYTE PTR [rax],al
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	jge    0x40923f
  4092b2:	add    BYTE PTR [rax],al
	...
  4092bd:	add    BYTE PTR [rax],al
  4092bf:	add    BYTE PTR [rax+0x408d],dl
  4092c5:	add    BYTE PTR [rax],al
  4092c7:	add    BYTE PTR [rax+0x408d],dl
  4092cd:	add    BYTE PTR [rax],al
  4092cf:	add    BYTE PTR [rdx],dh
  4092d1:	(bad)  
  4092d2:	add    BYTE PTR [rax],al
  4092d5:	add    BYTE PTR [rax],al
  4092d7:	add    BYTE PTR [rdx],dh
  4092d9:	(bad)  
  4092da:	add    BYTE PTR [rax],al
  4092dd:	add    BYTE PTR [rax],al
  4092df:	add    BYTE PTR [rsi+0x408d],dl
  4092e5:	add    BYTE PTR [rax],al
  4092e7:	add    BYTE PTR [rcx+0x408d],dh
  4092ed:	add    BYTE PTR [rax],al
  4092ef:	add    BYTE PTR [rsi+0x408d],bh
  4092f5:	add    BYTE PTR [rax],al
  4092f7:	add    BYTE PTR [rax],al
  4092f9:	add    BYTE PTR [rax],al
  4092fb:	add    BYTE PTR [rcx],al
  4092fd:	add    BYTE PTR [rax],al
  4092ff:	add    bl,cl
  409301:	lea    eax,[rax+0x0]
  409304:	add    BYTE PTR [rax],al
  409306:	add    BYTE PTR [rax],al
  409308:	retf   
  409309:	lea    eax,[rax+0x0]
  40930c:	add    BYTE PTR [rax],al
  40930e:	add    BYTE PTR [rax],al
  409310:	xor    al,BYTE PTR [rdx+0x40]
  409316:	add    BYTE PTR [rax],al
  409318:	xor    al,BYTE PTR [rdx+0x40]
  40931e:	add    BYTE PTR [rax],al
  409320:	ror    DWORD PTR [rbp+0x40],cl
	...
  40933e:	add    BYTE PTR [rax],al
  409340:	lock lea eax,[rax+0x0]
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rax],al
  409348:	lock lea eax,[rax+0x0]
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	xor    al,BYTE PTR [rdx+0x40]
  409356:	add    BYTE PTR [rax],al
  409358:	xor    al,BYTE PTR [rdx+0x40]
  40935e:	add    BYTE PTR [rax],al
  409360:	test   DWORD PTR [rbp+0x40],0x8e130000
  40936a:	add    BYTE PTR [rax],al
  40936d:	add    BYTE PTR [rax],al
  40936f:	add    BYTE PTR [rax],ah
  409371:	mov    es,WORD PTR [rax+0x0]
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	add    DWORD PTR [rax],eax
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	(bad)  
  409381:	mov    es,WORD PTR [rax+0x0]
  409384:	add    BYTE PTR [rax],al
  409386:	add    BYTE PTR [rax],al
  409388:	(bad)  
  409389:	mov    es,WORD PTR [rax+0x0]
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	xor    al,BYTE PTR [rdx+0x40]
  409396:	add    BYTE PTR [rax],al
  409398:	xor    al,BYTE PTR [rdx+0x40]
  40939e:	add    BYTE PTR [rax],al
  4093a0:	(bad)  
  4093a1:	mov    es,WORD PTR [rax+0x0]
  4093a4:	add    BYTE PTR [rax],al
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	push   rsp
  4093a9:	mov    es,WORD PTR [rax+0x0]
  4093ac:	add    BYTE PTR [rax],al
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	mov    es,WORD PTR [eax+0x0]
	...
  4093c0:	ja     0x409350
  4093c2:	add    BYTE PTR [rax],al
  4093c5:	add    BYTE PTR [rax],al
  4093c7:	add    BYTE PTR [rcx],bl
  4093c9:	mov    eax,DWORD PTR [rax+0x0]
  4093cc:	add    BYTE PTR [rax],al
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	(bad)  
  4093d1:	mov    eax,DWORD PTR [rax+0x0]
  4093d4:	add    BYTE PTR [rax],al
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	(bad)  
  4093d9:	mov    eax,DWORD PTR [rax+0x0]
	...
  409400:	jl     0x409390
  409402:	add    BYTE PTR [rax],al
  409405:	add    BYTE PTR [rax],al
  409407:	add    BYTE PTR [rbx],ah
  409409:	mov    eax,DWORD PTR [rax+0x0]
  40940c:	add    BYTE PTR [rax],al
  40940e:	add    BYTE PTR [rax],al
  409410:	sub    ecx,DWORD PTR [rbx+0x40]
  409416:	add    BYTE PTR [rax],al
  409418:	sub    ecx,DWORD PTR [rbx+0x40]
  40941e:	add    BYTE PTR [rax],al
  409420:	xor    al,0x8b
  409422:	add    BYTE PTR [rax],al
	...
  40943d:	add    BYTE PTR [rax],al
  40943f:	add    BYTE PTR [rbx+0x6f],ah
  409442:	ins    DWORD PTR es:[rdi],dx
  409443:	jo     0x4094b1
  409445:	gs je  0x4094ad
  409448:	pop    rdi
  409449:	imul   ebp,DWORD PTR [rsi+0x5f],0x677261
  409450:	addr32 pop rdi
  409452:	jbe    0x4094b5
  409454:	ins    BYTE PTR es:[rdi],dx
  409455:	jne    0x4094bc
  409457:	pop    rdi
  409458:	jae    0x4094bf
  40945a:	je     0x4094bb
  40945c:	(bad)  
  40945d:	outs   dx,DWORD PTR ds:[rsi]
  40945e:	outs   dx,DWORD PTR ds:[rsi]
  40945f:	ins    BYTE PTR es:[rdi],dx
  409460:	gs (bad) 
  409462:	outs   dx,BYTE PTR ds:[rsi]
  409463:	add    BYTE PTR [rdi+0x5f],ah
  409466:	jbe    0x4094c9
  409468:	ins    BYTE PTR es:[rdi],dx
  409469:	jne    0x4094d0
  40946b:	pop    rdi
  40946c:	jae    0x4094d3
  40946e:	je     0x4094cf
  409470:	movsxd ebp,DWORD PTR [rax+0x61]
  409473:	jb     0x409475
  409475:	addr32 pop rdi
  409477:	jbe    0x4094da
  409479:	ins    BYTE PTR es:[rdi],dx
  40947a:	jne    0x4094e1
  40947c:	pop    rdi
  40947d:	jae    0x4094e4
  40947f:	je     0x4094e0
  409481:	jne    0x4094e6
  409483:	push   0x67007261
  409488:	pop    rdi
  409489:	jbe    0x4094ec
  40948b:	ins    BYTE PTR es:[rdi],dx
  40948c:	jne    0x4094f3
  40948e:	pop    rdi
  40948f:	jae    0x4094f6
  409491:	je     0x4094f2
  409493:	imul   ebp,DWORD PTR [rsi+0x74],0x765f6700
  40949a:	(bad)  
  40949b:	ins    BYTE PTR es:[rdi],dx
  40949c:	jne    0x409503
  40949e:	pop    rdi
  40949f:	jae    0x409506
  4094a1:	je     0x409502
  4094a3:	jne    0x40950e
  4094a5:	outs   dx,BYTE PTR ds:[rsi]
  4094a6:	je     0x4094a8
  4094a8:	addr32 pop rdi
  4094aa:	jbe    0x40950d
  4094ac:	ins    BYTE PTR es:[rdi],dx
  4094ad:	jne    0x409514
  4094af:	pop    rdi
  4094b0:	jae    0x409517
  4094b2:	je     0x409513
  4094b4:	ins    BYTE PTR es:[rdi],dx
  4094b5:	outs   dx,DWORD PTR ds:[rsi]
  4094b6:	outs   dx,BYTE PTR ds:[rsi]
  4094b7:	add    BYTE PTR [edi+0x5f],ah
  4094bb:	jbe    0x40951e
  4094bd:	ins    BYTE PTR es:[rdi],dx
  4094be:	jne    0x409525
  4094c0:	pop    rdi
  4094c1:	jae    0x409528
  4094c3:	je     0x409524
  4094c5:	jne    0x409533
  4094c7:	outs   dx,DWORD PTR ds:[rsi]
  4094c8:	outs   dx,BYTE PTR ds:[rsi]
  4094c9:	add    BYTE PTR [edi+0x5f],ah
  4094cd:	jbe    0x409530
  4094cf:	ins    BYTE PTR es:[rdi],dx
  4094d0:	jne    0x409537
  4094d2:	pop    rdi
  4094d3:	jae    0x40953a
  4094d5:	je     0x409536
  4094d7:	imul   ebp,DWORD PTR [rsi+0x74],0x67003436
  4094de:	pop    rdi
  4094df:	jbe    0x409542
  4094e1:	ins    BYTE PTR es:[rdi],dx
  4094e2:	jne    0x409549
  4094e4:	pop    rdi
  4094e5:	jae    0x40954c
  4094e7:	je     0x409548
  4094e9:	jne    0x409554
  4094eb:	outs   dx,BYTE PTR ds:[rsi]
  4094ec:	je     0x409524
  4094ee:	xor    al,0x0
  4094f0:	addr32 pop rdi
  4094f2:	jbe    0x409555
  4094f4:	ins    BYTE PTR es:[rdi],dx
  4094f5:	jne    0x40955c
  4094f7:	pop    rdi
  4094f8:	jae    0x40955f
  4094fa:	je     0x40955b
  4094fc:	outs   dx,BYTE PTR gs:[rsi]
  4094fe:	jne    0x40956d
  409500:	add    BYTE PTR [rdi+0x5f],ah
  409503:	jbe    0x409566
  409505:	ins    BYTE PTR es:[rdi],dx
  409506:	jne    0x40956d
  409508:	pop    rdi
  409509:	jae    0x409570
  40950b:	je     0x40956c
  40950d:	data16 ins BYTE PTR es:[rdi],dx
  40950f:	(bad)  
  409510:	addr32 jae 0x409513
  409513:	addr32 pop rdi
  409515:	jbe    0x409578
  409517:	ins    BYTE PTR es:[rdi],dx
  409518:	jne    0x40957f
  40951a:	pop    rdi
  40951b:	jae    0x409582
  40951d:	je     0x40957e
  40951f:	data16 ins BYTE PTR es:[rdi],dx
  409521:	outs   dx,DWORD PTR ds:[rsi]
  409522:	(bad)  
  409523:	je     0x409525
  409525:	addr32 pop rdi
  409527:	jbe    0x40958a
  409529:	ins    BYTE PTR es:[rdi],dx
  40952a:	jne    0x409591
  40952c:	pop    rdi
  40952d:	jae    0x409594
  40952f:	je     0x409590
  409531:	outs   dx,DWORD PTR fs:[rsi]
  409533:	jne    0x409597
  409535:	ins    BYTE PTR es:[rdi],dx
  409536:	add    BYTE PTR gs:[rdi+0x63],ah
  40953a:	push   0x2a7261
  40953f:	addr32 pop rdi
  409541:	jbe    0x4095a4
  409543:	ins    BYTE PTR es:[rdi],dx
  409544:	jne    0x4095ab
  409546:	pop    rdi
  409547:	je     0x4095aa
  409549:	imul   esp,DWORD PTR [rbp+0x5f],0x73
  40954d:	je     0x4095c1
  40954f:	imul   ebp,DWORD PTR [rsi+0x67],0x61504700
  409556:	jb     0x4095b9
  409558:	ins    DWORD PTR es:[rdi],dx
  409559:	push   rbx
  40955a:	jo     0x4095c1
  40955c:	movsxd ebp,DWORD PTR [rdx]
  40955e:	add    BYTE PTR [rdi+0x5f],ah
  409561:	jbe    0x4095c4
  409563:	ins    BYTE PTR es:[rdi],dx
  409564:	jne    0x4095cb
  409566:	pop    rdi
  409567:	je     0x4095ca
  409569:	imul   esp,DWORD PTR [rbp+0x5f],0x70
  40956d:	(bad)  
  40956e:	jb     0x4095d1
  409570:	ins    DWORD PTR es:[rdi],dx
  409571:	add    BYTE PTR [rdi+0x5f],ah
  409574:	jbe    0x4095d7
  409576:	ins    BYTE PTR es:[rdi],dx
  409577:	jne    0x4095de
  409579:	pop    rdi
  40957a:	je     0x4095dd
  40957c:	imul   esp,DWORD PTR [rbp+0x5f],0x62
  409580:	outs   dx,DWORD PTR ds:[rsi]
  409581:	js     0x4095e8
  409583:	add    BYTE PTR fs:[rdi+0x5f],ah
  409587:	jbe    0x4095ea
  409589:	ins    BYTE PTR es:[rdi],dx
  40958a:	jne    0x4095f1
  40958c:	pop    rdi
  40958d:	jae    0x4095f4
  40958f:	je     0x4095f0
  409591:	jo     0x409602
  409593:	imul   ebp,DWORD PTR [rsi+0x74],0x47007265
  40959a:	rex.WRXB (bad) 
  40959c:	push   0x65
  40959e:	movsxd esi,DWORD PTR [rdx+rbp*1+0x0]
  4095a2:	addr32 pop rdi
  4095a4:	jbe    0x409607
  4095a6:	ins    BYTE PTR es:[rdi],dx
  4095a7:	jne    0x40960e
  4095a9:	pop    rdi
  4095aa:	je     0x40960d
  4095ac:	imul   esp,DWORD PTR [rbp+0x5f],0x6f
  4095b0:	(bad)  
  4095b1:	push   0x65
  4095b3:	movsxd esi,DWORD PTR [rax+rax*1+0x47]
  4095b7:	push   rsi
  4095b8:	(bad)  
  4095b9:	jb     0x409624
  4095bb:	(bad)  
  4095bc:	outs   dx,BYTE PTR ds:[rsi]
  4095bd:	je     0x4095e9
  4095bf:	add    BYTE PTR [rdi+0x5f],ah
  4095c2:	jbe    0x409625
  4095c4:	ins    BYTE PTR es:[rdi],dx
  4095c5:	jne    0x40962c
  4095c7:	pop    rdi
  4095c8:	je     0x40962b
  4095ca:	imul   esp,DWORD PTR [rbp+0x5f],0x76
  4095ce:	(bad)  
  4095cf:	jb     0x40963a
  4095d1:	(bad)  
  4095d2:	outs   dx,BYTE PTR ds:[rsi]
  4095d3:	je     0x4095d5
	...
  4095fd:	add    BYTE PTR [rax],al
  4095ff:	add    BYTE PTR [rcx],bl
  409601:	mov    eax,DWORD PTR [rax+0x0]
  409604:	add    BYTE PTR [rax],al
  409606:	add    BYTE PTR [rax],al
  409608:	sbb    DWORD PTR [rbx+0x40],ecx
  40960e:	add    BYTE PTR [rax],al
  409610:	(bad)  
  409611:	mov    eax,DWORD PTR [rax+0x0]
	...
  409620:	and    ecx,DWORD PTR [rbx+0x40]
  409626:	add    BYTE PTR [rax],al
  409628:	and    ecx,DWORD PTR [rbx+0x40]
  40962e:	add    BYTE PTR [rax],al
  409630:	sub    ecx,DWORD PTR [rbx+0x40]
  409636:	add    BYTE PTR [rax],al
  409638:	push   rax
  409639:	xchg   esp,eax
  40963a:	add    BYTE PTR [rax],al
  40963d:	add    BYTE PTR [rax],al
  40963f:	add    BYTE PTR [rcx-0x75],dl
  409642:	add    BYTE PTR [rax],al
  409645:	add    BYTE PTR [rax],al
  409647:	add    BYTE PTR [rcx-0x75],dl
  40964a:	add    BYTE PTR [rax],al
  40964d:	add    BYTE PTR [rax],al
  40964f:	add    BYTE PTR [rsi-0x75],dl
  409652:	add    BYTE PTR [rax],al
  409655:	add    BYTE PTR [rax],al
  409657:	add    BYTE PTR [rsp+rdx*4+0x40],ah
  40965b:	add    BYTE PTR [rax],al
  40965d:	add    BYTE PTR [rax],al
  40965f:	add    BYTE PTR [rbx-0x75],bh
  409662:	add    BYTE PTR [rax],al
  409665:	add    BYTE PTR [rax],al
  409667:	add    BYTE PTR [rbx-0x75],bh
  40966a:	add    BYTE PTR [rax],al
  40966d:	add    BYTE PTR [rax],al
  40966f:	add    BYTE PTR [rcx+0x408b],al
  409675:	add    BYTE PTR [rax],al
  409677:	add    BYTE PTR [rbp-0x6c],dh
  40967a:	add    BYTE PTR [rax],al
  40967d:	add    BYTE PTR [rax],al
  40967f:	add    BYTE PTR [rcx+0x408b],ch
  409685:	add    BYTE PTR [rax],al
  409687:	add    BYTE PTR [rcx+0x408b],ch
  40968d:	add    BYTE PTR [rax],al
  40968f:	add    BYTE PTR [rbx+rcx*4+0x40],bl
  409693:	add    BYTE PTR [rax],al
  409695:	add    BYTE PTR [rax],al
  409697:	add    BYTE PTR [rdi+0x4094],al
  40969d:	add    BYTE PTR [rax],al
  40969f:	add    dh,al
  4096a1:	mov    eax,DWORD PTR [rax+0x0]
  4096a4:	add    BYTE PTR [rax],al
  4096a6:	add    BYTE PTR [rax],al
  4096a8:	(bad)  
  4096a9:	mov    eax,DWORD PTR [rax+0x0]
  4096ac:	add    BYTE PTR [rax],al
  4096ae:	add    BYTE PTR [rax],al
  4096b0:	mov    BYTE PTR [rbx+0x40],cl
  4096b6:	add    BYTE PTR [rax],al
  4096b8:	xchg   edi,eax
  4096b9:	xchg   esp,eax
  4096ba:	add    BYTE PTR [rax],al
  4096bd:	add    BYTE PTR [rax],al
  4096bf:	add    ch,ah
  4096c1:	mov    eax,DWORD PTR [rax+0x0]
  4096c4:	add    BYTE PTR [rax],al
  4096c6:	add    BYTE PTR [rax],al
  4096c8:	in     eax,0x8b
  4096ca:	add    BYTE PTR [rax],al
  4096cd:	add    BYTE PTR [rax],al
  4096cf:	add    dl,ch
  4096d1:	mov    eax,DWORD PTR [rax+0x0]
  4096d4:	add    BYTE PTR [rax],al
  4096d6:	add    BYTE PTR [rax],al
  4096d8:	test   al,0x94
  4096da:	add    BYTE PTR [rax],al
  4096dd:	add    BYTE PTR [rax],al
  4096df:	add    BYTE PTR [rdx],cl
  4096e1:	mov    WORD PTR [rax+0x0],es
  4096e4:	add    BYTE PTR [rax],al
  4096e6:	add    BYTE PTR [rax],al
  4096e8:	or     cl,BYTE PTR [rax+rax*2+0x0]
  4096ef:	add    BYTE PTR [rax],dl
  4096f1:	mov    WORD PTR [rax+0x0],es
  4096f4:	add    BYTE PTR [rax],al
  4096f6:	add    BYTE PTR [rax],al
  4096f8:	mov    ecx,0x4094
  4096fd:	add    BYTE PTR [rax],al
  4096ff:	add    BYTE PTR [rdx],dh
  409701:	mov    WORD PTR [rax+0x0],es
  409704:	add    BYTE PTR [rax],al
  409706:	add    BYTE PTR [rax],al
  409708:	xor    cl,BYTE PTR [rax+rax*2+0x0]
  40970f:	add    BYTE PTR [rax],bh
  409711:	mov    WORD PTR [rax+0x0],es
  409714:	add    BYTE PTR [rax],al
  409716:	add    BYTE PTR [rax],al
  409718:	retf   
  409719:	xchg   esp,eax
  40971a:	add    BYTE PTR [rax],al
  40971d:	add    BYTE PTR [rax],al
  40971f:	add    BYTE PTR [rdx-0x74],bl
  409722:	add    BYTE PTR [rax],al
  409725:	add    BYTE PTR [rax],al
  409727:	add    BYTE PTR [rdx-0x74],bl
  40972a:	add    BYTE PTR [rax],al
  40972d:	add    BYTE PTR [rax],al
  40972f:	add    BYTE PTR [rcx-0x74],ah
  409732:	add    BYTE PTR [rax],al
  409735:	add    BYTE PTR [rax],al
  409737:	add    ch,bl
  409739:	xchg   esp,eax
  40973a:	add    BYTE PTR [rax],al
  40973d:	add    BYTE PTR [rax],al
  40973f:	add    BYTE PTR [rbp+0x408c],al
  409745:	add    BYTE PTR [rax],al
  409747:	add    BYTE PTR [rbp+0x408c],al
  40974d:	add    BYTE PTR [rax],al
  40974f:	add    BYTE PTR [rbx+rcx*4+0x40],bl
  409753:	add    BYTE PTR [rax],al
  409755:	add    BYTE PTR [rax],al
  409757:	add    al,dh
  409759:	xchg   esp,eax
  40975a:	add    BYTE PTR [rax],al
  40975d:	add    BYTE PTR [rax],al
  40975f:	add    BYTE PTR [rsp+rcx*4+0x40],ah
  409766:	add    BYTE PTR [rax],al
  409768:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409769:	mov    WORD PTR [rax+0x0],es
  40976c:	add    BYTE PTR [rax],al
  40976e:	add    BYTE PTR [rax],al
  409770:	mov    BYTE PTR [rbx+0x40],cl
  409776:	add    BYTE PTR [rax],al
  409778:	add    DWORD PTR [rbp+0x40],edx
  40977e:	add    BYTE PTR [rax],al
  409780:	(bad)
  409783:	add    BYTE PTR [rax],al
  409785:	add    BYTE PTR [rax],al
  409787:	add    ch,al
  409789:	mov    WORD PTR [rax+0x0],es
  40978c:	add    BYTE PTR [rax],al
  40978e:	add    BYTE PTR [rax],al
  409790:	retf   
  409791:	mov    WORD PTR [rax+0x0],es
  409794:	add    BYTE PTR [rax],al
  409796:	add    BYTE PTR [rax],al
  409798:	adc    edx,DWORD PTR [rbp+0x40]
  40979e:	add    BYTE PTR [rax],al
  4097a0:	cmc    
  4097a1:	mov    WORD PTR [rax+0x0],es
  4097a4:	add    BYTE PTR [rax],al
  4097a6:	add    BYTE PTR [rax],al
  4097a8:	cmc    
  4097a9:	mov    WORD PTR [rax+0x0],es
  4097ac:	add    BYTE PTR [rax],al
  4097ae:	add    BYTE PTR [rax],al
  4097b0:	ror    BYTE PTR [rax+rax*2+0x0],cl
  4097b7:	add    BYTE PTR [rip+0x4095],ah        # 0x40d852
  4097bd:	add    BYTE PTR [rax],al
  4097bf:	add    BYTE PTR [rax],bl
  4097c1:	lea    eax,[rax+0x0]
  4097c4:	add    BYTE PTR [rax],al
  4097c6:	add    BYTE PTR [rax],al
  4097c8:	sbb    BYTE PTR [rbp+0x40],cl
  4097ce:	add    BYTE PTR [rax],al
  4097d0:	cmp    BYTE PTR [rbp+0x40],dl
  4097d6:	add    BYTE PTR [rax],al
  4097d8:	(bad)  
  4097d9:	xchg   ebp,eax
  4097da:	add    BYTE PTR [rax],al
  4097dd:	add    BYTE PTR [rax],al
  4097df:	add    BYTE PTR [rbx-0x73],cl
  4097e2:	add    BYTE PTR [rax],al
  4097e5:	add    BYTE PTR [rax],al
  4097e7:	add    BYTE PTR [rbx-0x73],cl
  4097ea:	add    BYTE PTR [rax],al
  4097ed:	add    BYTE PTR [rax],al
  4097ef:	add    BYTE PTR [rbx-0x6b],dl
  4097f2:	add    BYTE PTR [rax],al
  4097f5:	add    BYTE PTR [rax],al
  4097f7:	add    BYTE PTR [rdi-0x6b],bl
  4097fa:	add    BYTE PTR [rax],al
  4097fd:	add    BYTE PTR [rax],al
  4097ff:	add    BYTE PTR [rax+0x408d],dl
  409805:	add    BYTE PTR [rax],al
  409807:	add    BYTE PTR [rax+0x408d],dl
  40980d:	add    BYTE PTR [rax],al
  40980f:	add    BYTE PTR [rdx],dh
  409811:	(bad)  
  409812:	add    BYTE PTR [rax],al
  409815:	add    BYTE PTR [rax],al
  409817:	add    BYTE PTR [rdx-0x6b],dh
  40981a:	add    BYTE PTR [rax],al
  40981d:	add    BYTE PTR [rax],al
  40981f:	add    bl,cl
  409821:	lea    eax,[rax+0x0]
  409824:	add    BYTE PTR [rax],al
  409826:	add    BYTE PTR [rax],al
  409828:	retf   
  409829:	lea    eax,[rax+0x0]
  40982c:	add    BYTE PTR [rax],al
  40982e:	add    BYTE PTR [rax],al
  409830:	xor    al,BYTE PTR [rdx+0x40]
  409836:	add    BYTE PTR [rax],al
  409838:	test   DWORD PTR [rbp+0x40],edx
  40983e:	add    BYTE PTR [rax],al
  409840:	lock lea eax,[rax+0x0]
  409844:	add    BYTE PTR [rax],al
  409846:	add    BYTE PTR [rax],al
  409848:	lock lea eax,[rax+0x0]
  40984c:	add    BYTE PTR [rax],al
  40984e:	add    BYTE PTR [rax],al
  409850:	cdq    
  409851:	xchg   ebp,eax
  409852:	add    BYTE PTR [rax],al
  409855:	add    BYTE PTR [rax],al
  409857:	add    BYTE PTR [rdx+0x4095],ah
  40985d:	add    BYTE PTR [rax],al
  40985f:	add    BYTE PTR [rdi],ch
  409861:	mov    es,WORD PTR [rax+0x0]
  409864:	add    BYTE PTR [rax],al
  409866:	add    BYTE PTR [rax],al
  409868:	(bad)  
  409869:	mov    es,WORD PTR [rax+0x0]
  40986c:	add    BYTE PTR [rax],al
  40986e:	add    BYTE PTR [rax],al
  409870:	mov    dh,0x95
  409872:	add    BYTE PTR [rax],al
  409875:	add    BYTE PTR [rax],al
  409877:	add    al,al
  409879:	xchg   ebp,eax
  40987a:	add    BYTE PTR [rax],al
  40987d:	add    BYTE PTR [rax],al
  40987f:	add    BYTE PTR [rdi-0x72],dh
  409882:	add    BYTE PTR [rax],al
  409885:	add    BYTE PTR [rax],al
  409887:	add    BYTE PTR [rcx],bl
  409889:	mov    eax,DWORD PTR [rax+0x0]
  40988c:	add    BYTE PTR [rax],al
  40988e:	add    BYTE PTR [rax],al
  409890:	(bad)  
  409891:	mov    eax,DWORD PTR [rax+0x0]
	...
  4098a0:	jl     0x409830
  4098a2:	add    BYTE PTR [rax],al
  4098a5:	add    BYTE PTR [rax],al
  4098a7:	add    BYTE PTR [rbx],ah
  4098a9:	mov    eax,DWORD PTR [rax+0x0]
  4098ac:	add    BYTE PTR [rax],al
  4098ae:	add    BYTE PTR [rax],al
  4098b0:	sub    ecx,DWORD PTR [rbx+0x40]
  4098b6:	add    BYTE PTR [rax],al
  4098b8:	push   rax
  4098b9:	xchg   esp,eax
  4098ba:	add    BYTE PTR [rax],al
  4098bd:	add    BYTE PTR [rax],al
  4098bf:	add    BYTE PTR [rdi+0x5f],ah
  4098c2:	movsxd esp,DWORD PTR [rbx+0x6c]
  4098c5:	outs   dx,DWORD PTR ds:[rsi]
  4098c6:	jae    0x40993d
  4098c8:	jb     0x40992f
  4098ca:	pop    rdi
  4098cb:	jne    0x409940
  4098cd:	gs jb  0x40992f
  4098d0:	ins    DWORD PTR es:[rdi],dx
  4098d1:	(bad)  
  4098d2:	jb     0x409947
  4098d4:	push   0x20006c61
  4098d9:	or     DWORD PTR [rip+0x0],ecx        # 0x4098df
  4098df:	add    BYTE PTR [rcx+0x62],ah
  4098e2:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  4098e6:	addr32 push 0x6c6b6a69
  4098ec:	ins    DWORD PTR es:[rdi],dx
  4098ed:	outs   dx,BYTE PTR ds:[rsi]
  4098ee:	outs   dx,DWORD PTR ds:[rsi]
  4098ef:	jo     0x409962
  4098f1:	jb     0x409966
  4098f3:	je     0x40996a
  4098f5:	jbe    0x40996e
  4098f7:	js     0x409972
  4098f9:	jp     0x40995a
  4098fb:	rex.B
  4098fc:	rex.X
  4098fd:	rex.XB
  4098fe:	rex.R
  4098ff:	rex.RB
  409900:	rex.RX
  409901:	rex.RXB
  409902:	rex.W
  409903:	rex.WB
  409904:	rex.WX
  409905:	rex.WXB
  409906:	rex.WR
  409907:	rex.WRB
  409908:	rex.WRX
  409909:	rex.WRXB push r8
  40990b:	push   rcx
  40990c:	push   rdx
  40990d:	push   rbx
  40990e:	push   rsp
  40990f:	push   rbp
  409910:	push   rsi
  409911:	push   rdi
  409912:	pop    rax
  409913:	pop    rcx
  409914:	pop    rdx
  409915:	add    BYTE PTR [rax],al
  409917:	add    BYTE PTR [rcx+0x62],ah
  40991a:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  40991e:	addr32 push 0x6c6b6a69
  409924:	ins    DWORD PTR es:[rdi],dx
  409925:	outs   dx,BYTE PTR ds:[rsi]
  409926:	outs   dx,DWORD PTR ds:[rsi]
  409927:	jo     0x40999a
  409929:	jb     0x40999e
  40992b:	je     0x4099a2
  40992d:	jbe    0x4099a6
  40992f:	js     0x4099aa
  409931:	jp     0x409992
  409933:	xor    BYTE PTR [rcx],dh
  409935:	xor    dh,BYTE PTR [rbx]
  409937:	xor    al,0x35
  409939:	ss (bad) 
  40993b:	cmp    BYTE PTR [rcx],bh
  40993d:	rex.B
  40993e:	rex.X
  40993f:	rex.XB
  409940:	rex.R
  409941:	rex.RB
  409942:	rex.RX
  409943:	rex.RXB
  409944:	rex.W
  409945:	rex.WB
  409946:	rex.WX
  409947:	rex.WXB
  409948:	rex.WR
  409949:	rex.WRB
  40994a:	rex.WRX
  40994b:	rex.WRXB push r8
  40994d:	push   rcx
  40994e:	push   rdx
  40994f:	push   rbx
  409950:	push   rsp
  409951:	push   rbp
  409952:	push   rsi
  409953:	push   rdi
  409954:	pop    rax
  409955:	pop    rcx
  409956:	pop    rdx
  409957:	add    BYTE PTR [rbx],ah
  409959:	or     al,BYTE PTR [rax]
  40995b:	add    BYTE PTR [rax],al
  40995d:	add    BYTE PTR [rax],al
  40995f:	add    al,bl
  409961:	cwde   
  409962:	add    BYTE PTR [rax],al
  409965:	add    BYTE PTR [rax],al
  409967:	add    al,ah
  409969:	cwde   
  40996a:	add    BYTE PTR [rax],al
  40996d:	add    BYTE PTR [rax],al
  40996f:	add    BYTE PTR [rax],bl
  409971:	cdq    
  409972:	add    BYTE PTR [rax],al
  409975:	add    BYTE PTR [rax],al
  409977:	add    BYTE PTR [rax-0x67],bl
  40997a:	add    BYTE PTR [rax],al
  40997d:	add    BYTE PTR [rax],al
  40997f:	add    BYTE PTR [rsi+0x4ee],bl
	...
  4099bd:	add    BYTE PTR [rax],al
  4099bf:	add    al,al
  4099c1:	(bad)  
  4099c2:	add    BYTE PTR [rax],al
  4099c5:	add    BYTE PTR [rax],al
  4099c7:	add    al,al
  4099c9:	rol    BYTE PTR [rax+0x0],1
  4099cc:	add    BYTE PTR [rax],al
  4099ce:	add    BYTE PTR [rax],al
  4099d0:	sbb    BYTE PTR [rbx],0x40
	...
  4099df:	add    BYTE PTR [rcx+0x72],al
  4099e2:	addr32 jne 0x409a52
  4099e5:	outs   dx,BYTE PTR gs:[rsi]
  4099e7:	je     0x409a09
  4099e9:	outs   dx,DWORD PTR fs:[rsi]
  4099eb:	ins    DWORD PTR es:[rdi],dx
  4099ec:	(bad)  
  4099ed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4099f4:	jb     0x409a16
  4099f6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4099fa:	rex.B
  4099fb:	rex.WB
  4099fc:	rex.WRX sub QWORD PTR [rax],r8
  4099ff:	rex.B jb 0x409a69
  409a02:	jne    0x409a71
  409a04:	outs   dx,BYTE PTR gs:[rsi]
  409a06:	je     0x409a28
  409a08:	jae    0x409a73
  409a0a:	outs   dx,BYTE PTR ds:[rsi]
  409a0b:	addr32 jne 0x409a7a
  409a0e:	(bad)  
  409a0f:	jb     0x409a7a
  409a11:	je     0x409a8c
  409a13:	and    BYTE PTR [rax],ch
  409a15:	push   rbx
  409a16:	rex.WB
  409a17:	rex.RXB
  409a18:	rex.WRX sub QWORD PTR [rax],r8
  409a1b:	add    BYTE PTR [rax],al
  409a1d:	add    BYTE PTR [rax],al
  409a1f:	add    BYTE PTR [rdi+0x76],cl
  409a22:	gs jb  0x409a8b
  409a25:	ins    BYTE PTR es:[rdi],dx
  409a26:	outs   dx,DWORD PTR ds:[rsi]
  409a27:	ja     0x409a49
  409a29:	jb     0x409a8c
  409a2b:	outs   dx,BYTE PTR ds:[rsi]
  409a2c:	and    BYTE PTR gs:[ebp+0x72],ah
  409a31:	jb     0x409aa2
  409a33:	jb     0x409a55
  409a35:	sub    BYTE PTR [rdi+0x56],cl
  409a38:	rex.RB push r10
  409a3a:	rex.RX
  409a3b:	rex.WR
  409a3c:	rex.WRXB push r15
  409a3e:	sub    DWORD PTR [rax],eax
  409a40:	push   rax
  409a41:	(bad)  
  409a42:	jb     0x409ab8
  409a44:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  409a4b:	jae    0x409a6d
  409a4d:	outs   dx,DWORD PTR ds:[rsi]
  409a4e:	data16 and BYTE PTR [rbx+0x69],dh
  409a52:	outs   dx,BYTE PTR ds:[esi]
  409a54:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  409a5b:	and    BYTE PTR gs:[rax],ch
  409a5e:	push   rax
  409a5f:	rex.WR
  409a60:	rex.WRXB push r11
  409a62:	push   rbx
  409a63:	sub    DWORD PTR [rax],eax
  409a65:	add    BYTE PTR [rax],al
  409a67:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  409a6b:	(bad)  
  409a6c:	ins    BYTE PTR es:[rdi],dx
  409a6d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  409a71:	jae    0x409a93
  409a73:	outs   dx,DWORD PTR ds:[rsi]
  409a74:	data16 and BYTE PTR [rbx+0x69],dh
  409a78:	outs   dx,BYTE PTR ds:[esi]
  409a7a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  409a81:	and    BYTE PTR gs:[rax],ch
  409a84:	push   rsp
  409a85:	rex.WR
  409a86:	rex.WRXB push r11
  409a88:	push   rbx
  409a89:	sub    DWORD PTR [rax],eax
  409a8b:	add    BYTE PTR [rax],al
  409a8d:	add    BYTE PTR [rax],al
  409a8f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  409a93:	and    BYTE PTR [rdx+0x65],dh
  409a96:	jae    0x409b0d
  409a98:	ins    BYTE PTR es:[rdi],dx
  409a99:	je     0x409abb
  409a9b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  409aa2:	jae    0x409b11
  409aa4:	(bad)  
  409aa5:	ins    BYTE PTR es:[rdi],dx
  409aa6:	ins    BYTE PTR es:[rdi],dx
  409aa7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  409aab:	(bad)  
  409aac:	and    BYTE PTR gs:[rdx+0x65],dh
  409ab0:	jo     0x409b24
  409ab2:	gs jae 0x409b1a
  409ab5:	outs   dx,BYTE PTR ds:[rsi]
  409ab6:	je     0x409b1d
  409ab8:	and    BYTE PTR fs:[rax],ch
  409abb:	push   rbp
  409abc:	rex.WRX
  409abd:	rex.R
  409abe:	rex.RB push r10
  409ac0:	rex.RX
  409ac1:	rex.WR
  409ac2:	rex.WRXB push r15
  409ac4:	sub    DWORD PTR [rax],eax
  409ac6:	push   rbp
  409ac7:	outs   dx,BYTE PTR ds:[rsi]
  409ac8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409acc:	outs   dx,BYTE PTR ds:[rsi]
  409acd:	and    BYTE PTR [rbp+0x72],ah
  409ad0:	jb     0x409b41
  409ad2:	jb     0x409ad4
  409ad4:	add    BYTE PTR [rax],al
  409ad6:	add    BYTE PTR [rax],al
  409ad8:	pop    rdi
  409ad9:	ins    DWORD PTR es:[rdi],dx
  409ada:	(bad)  
  409adb:	je     0x409b45
  409add:	gs jb  0x409b52
  409ae0:	sub    BYTE PTR [rcx],ch
  409ae2:	cmp    ah,BYTE PTR [rax]
  409ae4:	and    eax,0x6e692073
  409ae9:	and    BYTE PTR [rip+0x67252873],ah        # 0x6765c362
  409aef:	sub    al,0x20
  409af1:	and    eax,0x20202967
  409af6:	sub    BYTE PTR [rdx+0x65],dh
  409af9:	je     0x409b71
  409afb:	(bad)  
  409afc:	ins    BYTE PTR es:[rdi],dx
  409afd:	cmp    eax,0xa296725
  409b02:	add    BYTE PTR [rax],al
  409b04:	rex.WR (bad) 
  409b06:	(bad)  
  409b07:	dec    DWORD PTR [rbp-0x300007f]
  409b0d:	cmp    edi,0xff820cff
  409b13:	call   FWORD PTR [rdx+rax*4]
  409b16:	(bad)  
  409b17:	jmp    FWORD PTR [rdx+rax*4]
  409b1a:	(bad)  
  409b1b:	(bad)  
  409b1c:	cmp    al,0x82
  409b1e:	(bad)  
  409b1f:	dec    DWORD PTR [rbp+0x69]
  409b22:	outs   dx,BYTE PTR ds:[rsi]
  409b23:	addr32 ja 0x409b53
  409b26:	ja     0x409b5e
  409b28:	xor    al,0x20
  409b2a:	jb     0x409ba1
  409b2c:	outs   dx,BYTE PTR ds:[rsi]
  409b2d:	je     0x409b98
  409b2f:	ins    DWORD PTR es:[rdi],dx
  409b30:	and    BYTE PTR gs:[rsi+0x61],ah
  409b34:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  409b3c:	add    BYTE PTR [rax],al
  409b3e:	add    BYTE PTR [rax],al
  409b40:	rex.B
  409b41:	fs fs jb 0x409baa
  409b45:	jae    0x409bba
  409b47:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8bbbd
  409b4d:	jae    0x409b6f
  409b4f:	outs   dx,BYTE PTR ds:[rsi]
  409b50:	outs   dx,DWORD PTR ds:[rsi]
  409b51:	and    BYTE PTR [rcx+0x6d],ch
  409b54:	(bad)  
  409b55:	addr32 gs sub eax,0x74636573
  409b5c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  409b63:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  409b6a:	jne    0x409bd1
  409b6c:	jb     0x409be7
  409b6e:	and    BYTE PTR [rsi+0x61],ah
  409b71:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  409b79:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a2bbe3
  409b7f:	je     0x409be6
  409b81:	jae    0x409ba3
  409b83:	(bad)  
  409b84:	je     0x409ba6
  409b86:	(bad)  
  409b87:	fs fs jb 0x409bf0
  409b8b:	jae    0x409c00
  409b8d:	and    BYTE PTR [rip+0x70],ah        # 0x409c03
  409b93:	add    BYTE PTR [rax],al
  409b95:	add    BYTE PTR [rax],al
  409b97:	add    BYTE PTR [rax],ah
  409b99:	and    BYTE PTR [rsi+0x69],dl
  409b9c:	jb     0x409c12
  409b9e:	jne    0x409c01
  409ba0:	ins    BYTE PTR es:[rdi],dx
  409ba1:	push   rax
  409ba2:	jb     0x409c13
  409ba4:	je     0x409c0b
  409ba6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  409baa:	(bad)  
  409bab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  409bb3:	push   0x646f6320
  409bb8:	and    BYTE PTR gs:[rax],dh
  409bbb:	js     0x409be2
  409bbd:	js     0x409bbf
  409bbf:	add    BYTE PTR [rax],ah
  409bc1:	and    BYTE PTR [rbp+0x6e],dl
  409bc4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409bc8:	outs   dx,BYTE PTR ds:[rsi]
  409bc9:	and    BYTE PTR [rax+0x73],dh
  409bcc:	gs jne 0x409c33
  409bcf:	outs   dx,DWORD PTR ds:[rsi]
  409bd0:	and    BYTE PTR [rdx+0x65],dh
  409bd3:	ins    BYTE PTR es:[rdi],dx
  409bd4:	outs   dx,DWORD PTR ds:[rsi]
  409bd5:	movsxd esp,DWORD PTR [rcx+0x74]
  409bd8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  409bdf:	je     0x409c50
  409be1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  409be4:	and    BYTE PTR [rsi+0x65],dh
  409be7:	jb     0x409c5c
  409be9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  409bf0:	or     al,BYTE PTR [rax]
  409bf2:	add    BYTE PTR [rax],al
  409bf4:	add    BYTE PTR [rax],al
  409bf6:	add    BYTE PTR [rax],al
  409bf8:	and    BYTE PTR [rax],ah
  409bfa:	push   rbp
  409bfb:	outs   dx,BYTE PTR ds:[rsi]
  409bfc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  409c00:	outs   dx,BYTE PTR ds:[rsi]
  409c01:	and    BYTE PTR [rax+0x73],dh
  409c04:	gs jne 0x409c6b
  409c07:	outs   dx,DWORD PTR ds:[rsi]
  409c08:	and    BYTE PTR [rdx+0x65],dh
  409c0b:	ins    BYTE PTR es:[rdi],dx
  409c0c:	outs   dx,DWORD PTR ds:[rsi]
  409c0d:	movsxd esp,DWORD PTR [rcx+0x74]
  409c10:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  409c17:	and    BYTE PTR [rbx+0x69],dh
  409c1a:	jp     0x409c81
  409c1c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4aca86
	...
  409c2e:	add    BYTE PTR [rax],al
  409c30:	cs jo  0x409c97
  409c33:	(bad)  
  409c34:	je     0x409c97
	...
  409c3e:	add    BYTE PTR [rax],al
  409c40:	xor    BYTE PTR [rcx+0x40],ah
	...
  409c4f:	add    BYTE PTR [rax+0x61],al
  409c52:	add    BYTE PTR [rax],al
	...
  409c5d:	add    BYTE PTR [rax],al
  409c5f:	add    al,dl
  409c61:	push   rdx
  409c62:	add    BYTE PTR [rax],al
	...
  409c6d:	add    BYTE PTR [rax],al
  409c6f:	add    BYTE PTR [rax+0x40a1],ah
	...
  409c7d:	add    BYTE PTR [rax],al
  409c7f:	add    BYTE PTR [rax+0x40a1],ah
	...
  409c8d:	add    BYTE PTR [rax],al
  409c8f:	add    al,dl
  409c91:	cdq    
  409c92:	add    BYTE PTR [rax],al
	...
  409ca1:	add    BYTE PTR [rax+0x0],al
	...
  409cb0:	lock in al,0x40
	...
  409cbf:	add    BYTE PTR [rax],bl
  409cc1:	in     eax,0x40
	...
  409ccf:	add    BYTE PTR [rax],bh
  409cd1:	in     eax,0x40
	...
  409cdf:	add    BYTE PTR [rax-0x1b],dl
  409ce2:	add    BYTE PTR [rax],al
	...
  409cf1:	xlat   BYTE PTR ds:[rbx]
  409cf2:	add    BYTE PTR [rax],al
	...
  409cfd:	add    BYTE PTR [rax],al
  409cff:	add    BYTE PTR [rax-0x26],ch
  409d02:	add    BYTE PTR [rax],al
	...
  409d0d:	add    BYTE PTR [rax],al
  409d0f:	add    BYTE PTR [rax-0x26],ah
  409d12:	add    BYTE PTR [rax],al
	...
  409d1d:	add    BYTE PTR [rax],al
  409d1f:	add    BYTE PTR [rax-0x26],dl
  409d22:	add    BYTE PTR [rax],al
	...
  409d2d:	add    BYTE PTR [rax],al
  409d2f:	add    BYTE PTR [rax-0x26],bl
  409d32:	add    BYTE PTR [rax],al
	...
  409d41:	lock add BYTE PTR [rax],al
	...
  409d4d:	add    BYTE PTR [rax],al
  409d4f:	add    BYTE PTR [rax],dl
  409d51:	lock add BYTE PTR [rax],al
	...
  409d5d:	add    BYTE PTR [rax],al
  409d5f:	add    BYTE PTR [rax],bl
  409d61:	lock add BYTE PTR [rax],al
	...
  409d6d:	add    BYTE PTR [rax],al
  409d6f:	add    BYTE PTR [rax],dh
  409d71:	lock add BYTE PTR [rax],al
	...
  409d7d:	add    BYTE PTR [rax],al
  409d7f:	add    BYTE PTR [rax+0x40d0],al
	...
  409d8d:	add    BYTE PTR [rax],al
  409d8f:	add    al,dl
  409d91:	(bad)  
  409d92:	add    BYTE PTR [rax],al
	...
  409d9d:	add    BYTE PTR [rax],al
  409d9f:	add    BYTE PTR [rax],dl
  409da1:	and    eax,0x40
	...
  409dae:	add    BYTE PTR [rax],al
  409db0:	(bad)  
  409db1:	sbb    al,0x40
	...
  409dbf:	add    BYTE PTR [rax+0x40d6],al
	...
  409dcd:	add    BYTE PTR [rax],al
  409dcf:	add    al,bh
  409dd1:	(bad)  
  409dd2:	add    BYTE PTR [rax],al
	...
  409ddd:	add    BYTE PTR [rax],al
  409ddf:	add    al,dh
  409de1:	(bad)  
  409de2:	add    BYTE PTR [rax],al
	...
  409ded:	add    BYTE PTR [rax],al
  409def:	add    BYTE PTR [rax+0x40d6],dh
	...
  409dfd:	add    BYTE PTR [rax],al
  409dff:	add    BYTE PTR [rax+0x40d0],dl
	...
  409e0d:	add    BYTE PTR [rax],al
  409e0f:	add    BYTE PTR [rax+0x40d6],bl
	...
  409e1d:	add    BYTE PTR [rax],al
  409e1f:	add    BYTE PTR [rsi+rdx*8+0x40],dl
	...
  409e2e:	add    BYTE PTR [rax],al
  409e30:	nop
  409e31:	(bad)  
  409e32:	add    BYTE PTR [rax],al
	...
  409e3d:	add    BYTE PTR [rax],al
  409e3f:	add    BYTE PTR [rdi+0x43],al
  409e42:	rex.XB cmp spl,BYTE PTR [r8]
  409e45:	sub    BYTE PTR [rdi+0x4e],al
  409e48:	push   rbp
  409e49:	sub    DWORD PTR [rax],esp
  409e4b:	xor    al,0x2e
  409e4d:	cmp    DWORD PTR [rsi],ebp
  409e4f:	xor    al,0x0
	...
  409e5d:	add    BYTE PTR [rax],al
  409e5f:	add    BYTE PTR [rdi+0x43],al
  409e62:	rex.XB cmp spl,BYTE PTR [r8]
  409e65:	sub    BYTE PTR [rdi+0x4e],al
  409e68:	push   rbp
  409e69:	sub    DWORD PTR [rax],esp
  409e6b:	xor    al,0x2e
  409e6d:	cmp    DWORD PTR [rsi],ebp
  409e6f:	xor    al,0x0
	...
  409e7d:	add    BYTE PTR [rax],al
  409e7f:	add    BYTE PTR [rdi+0x43],al
  409e82:	rex.XB cmp spl,BYTE PTR [r8]
  409e85:	sub    BYTE PTR [rdi+0x4e],al
  409e88:	push   rbp
  409e89:	sub    DWORD PTR [rax],esp
  409e8b:	xor    al,0x2e
  409e8d:	cmp    DWORD PTR [rsi],ebp
  409e8f:	xor    al,0x0
	...
  409e9d:	add    BYTE PTR [rax],al
  409e9f:	add    BYTE PTR [rdi+0x43],al
  409ea2:	rex.XB cmp spl,BYTE PTR [r8]
  409ea5:	sub    BYTE PTR [rdi+0x4e],al
  409ea8:	push   rbp
  409ea9:	sub    DWORD PTR [rax],esp
  409eab:	xor    al,0x2e
  409ead:	cmp    DWORD PTR [rsi],ebp
  409eaf:	xor    al,0x0
	...
  409ebd:	add    BYTE PTR [rax],al
  409ebf:	add    BYTE PTR [rdi+0x43],al
  409ec2:	rex.XB cmp spl,BYTE PTR [r8]
  409ec5:	sub    BYTE PTR [rdi+0x4e],al
  409ec8:	push   rbp
  409ec9:	sub    DWORD PTR [rax],esp
  409ecb:	xor    al,0x2e
  409ecd:	cmp    DWORD PTR [rsi],ebp
  409ecf:	xor    al,0x0
	...
  409edd:	add    BYTE PTR [rax],al
  409edf:	add    BYTE PTR [rdi+0x43],al
  409ee2:	rex.XB cmp spl,BYTE PTR [r8]
  409ee5:	sub    BYTE PTR [rdi+0x4e],al
  409ee8:	push   rbp
  409ee9:	sub    DWORD PTR [rax],esp
  409eeb:	xor    al,0x2e
  409eed:	cmp    DWORD PTR [rsi],ebp
  409eef:	xor    al,0x0
	...
  409efd:	add    BYTE PTR [rax],al
  409eff:	add    BYTE PTR [rdi+0x43],al
  409f02:	rex.XB cmp spl,BYTE PTR [r8]
  409f05:	sub    BYTE PTR [rdi+0x4e],al
  409f08:	push   rbp
  409f09:	sub    DWORD PTR [rax],esp
  409f0b:	xor    al,0x2e
  409f0d:	cmp    DWORD PTR [rsi],ebp
  409f0f:	xor    al,0x0
	...
  409f1d:	add    BYTE PTR [rax],al
  409f1f:	add    BYTE PTR [rdi+0x43],al
  409f22:	rex.XB cmp spl,BYTE PTR [r8]
  409f25:	sub    BYTE PTR [rdi+0x4e],al
  409f28:	push   rbp
  409f29:	sub    DWORD PTR [rax],esp
  409f2b:	xor    al,0x2e
  409f2d:	cmp    DWORD PTR [rsi],ebp
  409f2f:	xor    al,0x0
	...
  409f3d:	add    BYTE PTR [rax],al
  409f3f:	add    BYTE PTR [rdi+0x43],al
  409f42:	rex.XB cmp spl,BYTE PTR [r8]
  409f45:	sub    BYTE PTR [rdi+0x4e],al
  409f48:	push   rbp
  409f49:	sub    DWORD PTR [rax],esp
  409f4b:	xor    al,0x2e
  409f4d:	cmp    DWORD PTR [rsi],ebp
  409f4f:	xor    al,0x0
	...
  409f5d:	add    BYTE PTR [rax],al
  409f5f:	add    BYTE PTR [rdi+0x43],al
  409f62:	rex.XB cmp spl,BYTE PTR [r8]
  409f65:	sub    BYTE PTR [rdi+0x4e],al
  409f68:	push   rbp
  409f69:	sub    DWORD PTR [rax],esp
  409f6b:	xor    al,0x2e
  409f6d:	cmp    DWORD PTR [rsi],ebp
  409f6f:	xor    al,0x0
	...
  409f7d:	add    BYTE PTR [rax],al
  409f7f:	add    BYTE PTR [rdi+0x43],al
  409f82:	rex.XB cmp spl,BYTE PTR [r8]
  409f85:	sub    BYTE PTR [rdi+0x4e],al
  409f88:	push   rbp
  409f89:	sub    DWORD PTR [rax],esp
  409f8b:	xor    al,0x2e
  409f8d:	cmp    DWORD PTR [rsi],ebp
  409f8f:	xor    al,0x0
	...
  409f9d:	add    BYTE PTR [rax],al
  409f9f:	add    BYTE PTR [rdi+0x43],al
  409fa2:	rex.XB cmp spl,BYTE PTR [r8]
  409fa5:	sub    BYTE PTR [rdi+0x4e],al
  409fa8:	push   rbp
  409fa9:	sub    DWORD PTR [rax],esp
  409fab:	xor    al,0x2e
  409fad:	cmp    DWORD PTR [rsi],ebp
  409faf:	xor    al,0x0
	...
  409fbd:	add    BYTE PTR [rax],al
  409fbf:	add    BYTE PTR [rdi+0x43],al
  409fc2:	rex.XB cmp spl,BYTE PTR [r8]
  409fc5:	sub    BYTE PTR [rdi+0x4e],al
  409fc8:	push   rbp
  409fc9:	sub    DWORD PTR [rax],esp
  409fcb:	xor    al,0x2e
  409fcd:	cmp    DWORD PTR [rsi],ebp
  409fcf:	xor    al,0x0
	...
  409fdd:	add    BYTE PTR [rax],al
  409fdf:	add    BYTE PTR [rdi+0x43],al
  409fe2:	rex.XB cmp spl,BYTE PTR [r8]
  409fe5:	sub    BYTE PTR [rdi+0x4e],al
  409fe8:	push   rbp
  409fe9:	sub    DWORD PTR [rax],esp
  409feb:	xor    al,0x2e
  409fed:	cmp    DWORD PTR [rsi],ebp
  409fef:	xor    al,0x0
	...
  409ffd:	add    BYTE PTR [rax],al
  409fff:	add    BYTE PTR [rdi+0x43],al
  40a002:	rex.XB cmp spl,BYTE PTR [r8]
  40a005:	sub    BYTE PTR [rdi+0x4e],al
  40a008:	push   rbp
  40a009:	sub    DWORD PTR [rax],esp
  40a00b:	xor    al,0x2e
  40a00d:	cmp    DWORD PTR [rsi],ebp
  40a00f:	xor    al,0x0
	...
  40a01d:	add    BYTE PTR [rax],al
  40a01f:	add    BYTE PTR [rdi+0x43],al
  40a022:	rex.XB cmp spl,BYTE PTR [r8]
  40a025:	sub    BYTE PTR [rdi+0x4e],al
  40a028:	push   rbp
  40a029:	sub    DWORD PTR [rax],esp
  40a02b:	xor    al,0x2e
  40a02d:	cmp    DWORD PTR [rsi],ebp
  40a02f:	xor    al,0x0
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rdi+0x43],al
  40a042:	rex.XB cmp spl,BYTE PTR [r8]
  40a045:	sub    BYTE PTR [rdi+0x4e],al
  40a048:	push   rbp
  40a049:	sub    DWORD PTR [rax],esp
  40a04b:	xor    al,0x2e
  40a04d:	cmp    DWORD PTR [rsi],ebp
  40a04f:	xor    al,0x0
	...
  40a05d:	add    BYTE PTR [rax],al
  40a05f:	add    BYTE PTR [rdi+0x43],al
  40a062:	rex.XB cmp spl,BYTE PTR [r8]
  40a065:	sub    BYTE PTR [rdi+0x4e],al
  40a068:	push   rbp
  40a069:	sub    DWORD PTR [rax],esp
  40a06b:	xor    al,0x2e
  40a06d:	cmp    DWORD PTR [rsi],ebp
  40a06f:	xor    al,0x0
	...
  40a07d:	add    BYTE PTR [rax],al
  40a07f:	add    BYTE PTR [rdi+0x43],al
  40a082:	rex.XB cmp spl,BYTE PTR [r8]
  40a085:	sub    BYTE PTR [rdi+0x4e],al
  40a088:	push   rbp
  40a089:	sub    DWORD PTR [rax],esp
  40a08b:	xor    al,0x2e
  40a08d:	cmp    DWORD PTR [rsi],ebp
  40a08f:	xor    al,0x0
	...
  40a09d:	add    BYTE PTR [rax],al
  40a09f:	add    BYTE PTR [rdi+0x43],al
  40a0a2:	rex.XB cmp spl,BYTE PTR [r8]
  40a0a5:	sub    BYTE PTR [rdi+0x4e],al
  40a0a8:	push   rbp
  40a0a9:	sub    DWORD PTR [rax],esp
  40a0ab:	xor    al,0x2e
  40a0ad:	cmp    DWORD PTR [rsi],ebp
  40a0af:	xor    al,0x0
	...
  40a0bd:	add    BYTE PTR [rax],al
  40a0bf:	add    BYTE PTR [rdi+0x43],al
  40a0c2:	rex.XB cmp spl,BYTE PTR [r8]
  40a0c5:	sub    BYTE PTR [rdi+0x4e],al
  40a0c8:	push   rbp
  40a0c9:	sub    DWORD PTR [rax],esp
  40a0cb:	xor    al,0x2e
  40a0cd:	cmp    DWORD PTR [rsi],ebp
  40a0cf:	xor    al,0x0
	...
  40a0dd:	add    BYTE PTR [rax],al
  40a0df:	add    BYTE PTR [rdi+0x43],al
  40a0e2:	rex.XB cmp spl,BYTE PTR [r8]
  40a0e5:	sub    BYTE PTR [rdi+0x4e],al
  40a0e8:	push   rbp
  40a0e9:	sub    DWORD PTR [rax],esp
  40a0eb:	xor    al,0x2e
  40a0ed:	cmp    DWORD PTR [rsi],ebp
  40a0ef:	xor    al,0x0
	...
  40a0fd:	add    BYTE PTR [rax],al
  40a0ff:	add    BYTE PTR [rdi+0x43],al
  40a102:	rex.XB cmp spl,BYTE PTR [r8]
  40a105:	sub    BYTE PTR [rdi+0x4e],al
  40a108:	push   rbp
  40a109:	sub    DWORD PTR [rax],esp
  40a10b:	xor    al,0x2e
  40a10d:	cmp    DWORD PTR [rsi],ebp
  40a10f:	xor    al,0x0
	...
  40a11d:	add    BYTE PTR [rax],al
  40a11f:	add    BYTE PTR [rdi+0x43],al
  40a122:	rex.XB cmp spl,BYTE PTR [r8]
  40a125:	sub    BYTE PTR [rdi+0x4e],al
  40a128:	push   rbp
  40a129:	sub    DWORD PTR [rax],esp
  40a12b:	xor    al,0x2e
  40a12d:	cmp    DWORD PTR [rsi],ebp
  40a12f:	xor    al,0x0
	...
  40a13d:	add    BYTE PTR [rax],al
  40a13f:	add    BYTE PTR [rdi+0x43],al
  40a142:	rex.XB cmp spl,BYTE PTR [r8]
  40a145:	sub    BYTE PTR [rdi+0x4e],al
  40a148:	push   rbp
  40a149:	sub    DWORD PTR [rax],esp
  40a14b:	xor    al,0x2e
  40a14d:	cmp    DWORD PTR [rsi],ebp
  40a14f:	xor    al,0x0
	...
  40a15d:	add    BYTE PTR [rax],al
  40a15f:	add    BYTE PTR [rdi+0x43],al
  40a162:	rex.XB cmp spl,BYTE PTR [r8]
  40a165:	sub    BYTE PTR [rdi+0x4e],al
  40a168:	push   rbp
  40a169:	sub    DWORD PTR [rax],esp
  40a16b:	xor    al,0x2e
  40a16d:	cmp    DWORD PTR [rsi],ebp
  40a16f:	xor    al,0x0
	...
  40a17d:	add    BYTE PTR [rax],al
  40a17f:	add    BYTE PTR [rdi+0x43],al
  40a182:	rex.XB cmp spl,BYTE PTR [r8]
  40a185:	sub    BYTE PTR [rdi+0x4e],al
  40a188:	push   rbp
  40a189:	sub    DWORD PTR [rax],esp
  40a18b:	xor    al,0x2e
  40a18d:	cmp    DWORD PTR [rsi],ebp
  40a18f:	xor    al,0x0
	...

Disassembly of section .pdata:

000000000040b000 <.pdata>:
  40b000:	add    BYTE PTR [rax],dl
  40b002:	add    BYTE PTR [rax],al
  40b004:	add    DWORD PTR [rax],edx
  40b006:	add    BYTE PTR [rax],al
  40b008:	add    al,al
  40b00a:	add    BYTE PTR [rax],al
  40b00c:	adc    BYTE PTR [rax],dl
  40b00e:	add    BYTE PTR [rax],al
  40b010:	push   rcx
  40b011:	adc    DWORD PTR [rax],eax
  40b013:	add    BYTE PTR [rax+rax*8],al
  40b016:	add    BYTE PTR [rax],al
  40b018:	(bad)  
  40b019:	adc    DWORD PTR [rax],eax
  40b01b:	add    BYTE PTR [rsi+0xc000011],ch
  40b021:	rol    BYTE PTR [rax],0x0
  40b024:	mov    al,0x11
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	adc    al,0x0
  40b02b:	add    BYTE PTR [rax+rax*8],dl
  40b02e:	add    BYTE PTR [rax],al
  40b030:	rcl    BYTE PTR [rax+rax*1],1
  40b033:	add    dl,dh
  40b035:	adc    al,0x0
  40b037:	add    BYTE PTR [rax],ch
  40b039:	rol    BYTE PTR [rax],0x0
  40b03c:	add    BYTE PTR [rip+0x15220000],dl        # 0x1562b042
  40b042:	add    BYTE PTR [rax],al
  40b044:	rex.W rol BYTE PTR [rax],0x0
  40b048:	xor    BYTE PTR [rip+0x15430000],dl        # 0x1583b04e
  40b04e:	add    BYTE PTR [rax],al
  40b050:	push   0x500000c0
  40b055:	adc    eax,0x15ac0000
  40b05a:	add    BYTE PTR [rax],al
  40b05c:	jo     0x40b01e
  40b05e:	add    BYTE PTR [rax],al
  40b060:	mov    al,0x15
  40b062:	add    BYTE PTR [rax],al
  40b064:	int3   
  40b065:	(bad)  
  40b066:	add    BYTE PTR [rax],al
  40b068:	js     0x40b02a
  40b06a:	add    BYTE PTR [rax],al
  40b06c:	rcl    BYTE PTR [rdi],0x0
  40b06f:	add    BYTE PTR [rdi+0x18],ah
  40b072:	add    BYTE PTR [rax],al
  40b074:	pushf  
  40b075:	rol    BYTE PTR [rax],0x0
  40b078:	jo     0x40b092
  40b07a:	add    BYTE PTR [rax],al
  40b07c:	mov    DWORD PTR [rax],ebx
  40b07e:	add    BYTE PTR [rax],al
  40b080:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40b081:	rol    BYTE PTR [rax],0x0
  40b084:	nop
  40b085:	sbb    BYTE PTR [rax],al
  40b087:	add    ch,al
  40b089:	sbb    BYTE PTR [rax],al
  40b08b:	add    BYTE PTR [rax+rax*8+0x18d00000],ch
  40b092:	add    BYTE PTR [rax],al
  40b094:	and    eax,0xb4000019
  40b099:	rol    BYTE PTR [rax],0x0
  40b09c:	xor    BYTE PTR [rcx],bl
  40b09e:	add    BYTE PTR [rax],al
  40b0a0:	sbb    QWORD PTR [rax],r8
  40b0a3:	add    al,al
  40b0a5:	rol    BYTE PTR [rax],0x0
  40b0a8:	push   rax
  40b0a9:	sbb    DWORD PTR [rax],eax
  40b0ab:	add    BYTE PTR [rdx+0x19],bl
  40b0ae:	add    BYTE PTR [rax],al
  40b0b0:	(bad)  
  40b0b1:	rol    BYTE PTR [rax],0x0
  40b0b4:	(bad)  
  40b0b5:	sbb    DWORD PTR [rax],eax
  40b0b7:	add    BYTE PTR [rbx+0x19],ah
  40b0ba:	add    BYTE PTR [rax],al
  40b0bc:	enter  0xc0,0x0
  40b0c0:	jo     0x40b0db
  40b0c2:	add    BYTE PTR [rax],al
  40b0c4:	rex.RX sbb r8b,BYTE PTR [rax]
  40b0c7:	add    ah,cl
  40b0c9:	rol    BYTE PTR [rax],0x0
  40b0cc:	push   rax
  40b0cd:	sbb    al,BYTE PTR [rax]
  40b0cf:	add    BYTE PTR [rbx+0x1b],cl
  40b0d2:	add    BYTE PTR [rax],al
  40b0d4:	fadd   st(0),st
  40b0d6:	add    BYTE PTR [rax],al
  40b0d8:	push   rax
  40b0d9:	sbb    eax,DWORD PTR [rax]
  40b0db:	add    BYTE PTR [rdi+0x1b],bh
  40b0de:	add    BYTE PTR [rax],al
  40b0e0:	in     al,dx
  40b0e1:	rol    BYTE PTR [rax],0x0
  40b0e4:	sbb    BYTE PTR [rbx],0x0
  40b0e7:	add    cl,ch
  40b0e9:	sbb    eax,DWORD PTR [rax]
  40b0eb:	add    ah,dh
  40b0ed:	rol    BYTE PTR [rax],0x0
  40b0f0:	lock sbb eax,DWORD PTR [rax]
  40b0f3:	add    bl,dh
  40b0f5:	sbb    eax,DWORD PTR [rax]
  40b0f7:	add    BYTE PTR [rax],al
  40b0f9:	rol    DWORD PTR [rax],0x0
  40b0fc:	add    BYTE PTR [rax+rax*1],bl
  40b0ff:	add    BYTE PTR [rcx+0x1c],al
  40b102:	add    BYTE PTR [rax],al
  40b104:	add    al,0xc1
  40b106:	add    BYTE PTR [rax],al
  40b108:	push   rax
  40b109:	sbb    al,0x0
  40b10b:	add    BYTE PTR [rsp+rbx*1+0x0],bl
  40b10f:	add    BYTE PTR [rcx+rax*8],cl
  40b112:	add    BYTE PTR [rax],al
  40b114:	(bad)  
  40b115:	sbb    al,0x0
  40b117:	add    BYTE PTR [rbp+rbx*1+0x0],bl
  40b11b:	add    BYTE PTR [rax],dl
  40b11d:	rol    DWORD PTR [rax],0x0
  40b120:	(bad)  
  40b121:	sbb    eax,0x1d630000
  40b126:	add    BYTE PTR [rax],al
  40b128:	sub    cl,al
  40b12a:	add    BYTE PTR [rax],al
  40b12c:	jo     0x40b14b
  40b12e:	add    BYTE PTR [rax],al
  40b130:	je     0x40b14f
  40b132:	add    BYTE PTR [rax],al
  40b134:	sub    al,0xc1
  40b136:	add    BYTE PTR [rax],al
  40b138:	sbb    BYTE PTR [rip+0x1d840000],0x0        # 0x1dc4b13f
  40b13f:	add    BYTE PTR [rax],dh
  40b141:	rol    DWORD PTR [rax],0x0
  40b144:	nop
  40b145:	sbb    eax,0x1df10000
  40b14a:	add    BYTE PTR [rax],al
  40b14c:	xor    al,0xc1
  40b14e:	add    BYTE PTR [rax],al
  40b150:	add    BYTE PTR [rsi],bl
  40b152:	add    BYTE PTR [rax],al
  40b154:	(bad)  
  40b155:	(bad)  
  40b156:	add    BYTE PTR [rax],al
  40b158:	rex rol DWORD PTR [rax],0x0
  40b15c:	jo     0x40b17d
  40b15e:	add    BYTE PTR [rax],al
  40b160:	imul   esp,DWORD PTR [rdx],0xc1540000
  40b166:	add    BYTE PTR [rax],al
  40b168:	jo     0x40b18c
  40b16a:	add    BYTE PTR [rax],al
  40b16c:	(bad)  
  40b16d:	and    al,0x0
  40b16f:	add    BYTE PTR [rcx+rax*8+0x0],ch
  40b173:	add    BYTE PTR [rax],ah
  40b175:	and    al,0x0
  40b177:	add    BYTE PTR ds:0xffffffffc1740000,cl
  40b17e:	add    BYTE PTR [rax],al
  40b180:	adc    BYTE PTR [rip+0x26c80000],ah        # 0x2708b186
  40b186:	add    BYTE PTR [rax],al
  40b188:	test   cl,al
  40b18a:	add    BYTE PTR [rax],al
  40b18c:	shl    BYTE PTR [rsi],1
  40b18e:	add    BYTE PTR [rax],al
  40b190:	cmp    eax,0x8c000027
  40b195:	rol    DWORD PTR [rax],0x0
  40b198:	rex (bad) 
  40b19a:	add    BYTE PTR [rax],al
  40b19c:	mov    edi,0x9c000027
  40b1a1:	rol    DWORD PTR [rax],0x0
  40b1a4:	shl    BYTE PTR [rdi],0x0
  40b1a7:	add    BYTE PTR [rdi+0x28],bl
  40b1aa:	add    BYTE PTR [rax],al
  40b1ac:	test   al,0xc1
  40b1ae:	add    BYTE PTR [rax],al
  40b1b0:	(bad)  
  40b1b1:	sub    BYTE PTR [rax],al
  40b1b3:	add    BYTE PTR [rdx],bh
  40b1b5:	sub    DWORD PTR [rax],eax
  40b1b7:	add    BYTE PTR [rax+0x400000c1],dh
  40b1bd:	sub    DWORD PTR [rax],eax
  40b1bf:	add    BYTE PTR [rdi+0x29],bl
  40b1c2:	add    BYTE PTR [rax],al
  40b1c4:	mov    eax,0x600000c1
  40b1c9:	sub    DWORD PTR [rax],eax
  40b1cb:	add    BYTE PTR [rdx+0x29],dh
  40b1ce:	add    BYTE PTR [rax],al
  40b1d0:	mov    esp,0x800000c1
  40b1d5:	sub    DWORD PTR [rax],eax
  40b1d7:	add    ch,al
  40b1d9:	sub    DWORD PTR [rax],eax
  40b1db:	add    al,al
  40b1dd:	rol    DWORD PTR [rax],0x0
  40b1e0:	shr    BYTE PTR [rcx],1
  40b1e2:	add    BYTE PTR [rax],al
  40b1e4:	outs   dx,BYTE PTR ds:[rsi]
  40b1e5:	sub    al,BYTE PTR [rax]
  40b1e7:	add    ah,al
  40b1e9:	rol    DWORD PTR [rax],0x0
  40b1ec:	jo     0x40b218
  40b1ee:	add    BYTE PTR [rax],al
  40b1f0:	mov    bl,0x2a
  40b1f2:	add    BYTE PTR [rax],al
  40b1f4:	rol    cl,1
  40b1f6:	add    BYTE PTR [rax],al
  40b1f8:	shr    BYTE PTR [rdx],0x0
  40b1fb:	add    bl,bh
  40b1fd:	sub    al,BYTE PTR [rax]
  40b1ff:	add    ah,bl
  40b201:	rol    DWORD PTR [rax],0x0
  40b204:	add    BYTE PTR [rbx],ch
  40b206:	add    BYTE PTR [rax],al
  40b208:	mov    gs,WORD PTR [rbx]
  40b20a:	add    BYTE PTR [rax],al
  40b20c:	in     al,0xc1
  40b20e:	add    BYTE PTR [rax],al
  40b210:	nop
  40b211:	sub    eax,DWORD PTR [rax]
  40b213:	add    al,cl
  40b215:	sub    eax,DWORD PTR [rax]
  40b217:	add    al,dh
  40b219:	rol    DWORD PTR [rax],0x0
  40b21c:	shr    BYTE PTR [rbx],1
  40b21e:	add    BYTE PTR [rax],al
  40b220:	and    eax,0xfc00002c
  40b225:	rol    DWORD PTR [rax],0x0
  40b228:	xor    BYTE PTR [rax+rax*1],ch
  40b22b:	add    dh,bl
  40b22d:	sub    al,0x0
  40b22f:	add    BYTE PTR [rax],cl
  40b231:	ret    0x0
  40b234:	and    BYTE PTR [rsi],ch
  40b236:	add    BYTE PTR [rax],al
  40b238:	sub    BYTE PTR [rsi],ch
  40b23a:	add    BYTE PTR [rax],al
  40b23c:	sbb    dl,al
  40b23e:	add    BYTE PTR [rax],al
  40b240:	xor    BYTE PTR [rsi],ch
  40b242:	add    BYTE PTR [rax],al
  40b244:	cmp    ebp,DWORD PTR [rsi]
  40b246:	add    BYTE PTR [rax],al
  40b248:	sbb    al,0xc2
  40b24a:	add    BYTE PTR [rax],al
  40b24c:	add    BYTE PTR [rdi],ch
  40b24e:	add    BYTE PTR [rax],al
  40b250:	(bad)  
  40b251:	push   rdx
  40b252:	add    BYTE PTR [rax],al
  40b254:	test   al,al
	...

Disassembly of section .xdata:

000000000040c000 <.xdata>:
  40c000:	add    DWORD PTR [rax],eax
  40c002:	add    BYTE PTR [rax],al
  40c004:	add    DWORD PTR [rcx+rax*1],eax
  40c007:	add    BYTE PTR [rdx+rax*2],al
  40c00a:	add    BYTE PTR [rax],al
  40c00c:	add    DWORD PTR [rcx+rax*1],eax
  40c00f:	add    BYTE PTR [rdx+riz*2],al
  40c012:	add    BYTE PTR [rax],al
  40c014:	add    DWORD PTR [rdi],ecx
  40c016:	or     BYTE PTR [rax],al
  40c018:	lgdt   [rbx]
  40c01b:	add    BYTE PTR [rax],cl
  40c01d:	xor    BYTE PTR [rdi],al
  40c01f:	(bad)  
  40c020:	(bad)  
  40c021:	jo     0x40c028
  40c023:	push   rax
  40c024:	add    al,0xc0
  40c026:	add    dl,al
  40c028:	or     DWORD PTR [rcx+rax*1],eax
  40c02b:	add    BYTE PTR [rdx+rax*2],al
  40c02e:	add    BYTE PTR [rax],al
  40c030:	adc    BYTE PTR [rsi],ch
  40c032:	add    BYTE PTR [rax],al
  40c034:	add    DWORD PTR [rax],eax
  40c036:	add    BYTE PTR [rax],al
  40c038:	(bad)  
  40c039:	adc    al,0x0
  40c03b:	add    ah,ch
  40c03d:	adc    al,0x0
  40c03f:	add    BYTE PTR [rax],dl
  40c041:	and    eax,0x14ec0000
  40c046:	add    BYTE PTR [rax],al
  40c048:	or     DWORD PTR [rcx+rax*1],eax
  40c04b:	add    BYTE PTR [rdx+rax*2],al
  40c04e:	add    BYTE PTR [rax],al
  40c050:	adc    BYTE PTR [rsi],ch
  40c052:	add    BYTE PTR [rax],al
  40c054:	add    DWORD PTR [rax],eax
  40c056:	add    BYTE PTR [rax],al
  40c058:	add    al,0x15
  40c05a:	add    BYTE PTR [rax],al
  40c05c:	sbb    al,0x15
  40c05e:	add    BYTE PTR [rax],al
  40c060:	adc    BYTE PTR [rip+0x151c0000],ah        # 0x155cc066
  40c066:	add    BYTE PTR [rax],al
  40c068:	add    DWORD PTR [rcx+rax*1],eax
  40c06b:	add    BYTE PTR [rdx+rax*2],al
  40c06e:	add    BYTE PTR [rax],al
  40c070:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c078
  40c076:	add    DWORD PTR [rax],esi
  40c078:	add    DWORD PTR [rsi],eax
  40c07a:	add    eax,DWORD PTR [rax]
  40c07c:	(bad)  
  40c07d:	rex.X add sil,BYTE PTR [rax]
  40c080:	add    DWORD PTR [rax+0x0],esp
  40c083:	add    BYTE PTR [rcx],al
  40c085:	adc    ecx,DWORD PTR [rdx]
  40c087:	add    BYTE PTR [rbx],dl
  40c089:	add    DWORD PTR [rdi],esp
  40c08b:	add    BYTE PTR [rax+rsi*1],cl
  40c08e:	or     esp,DWORD PTR [rax+0xa]
  40c091:	jo     0x40c09c
  40c093:	push   rax
  40c094:	or     al,al
  40c096:	(bad)  
  40c097:	rol    BYTE PTR [rax+riz*8],1
  40c09a:	add    dh,al
  40c09c:	add    DWORD PTR [rip+0x52050002],eax        # 0x5245c0a4
  40c0a2:	add    DWORD PTR [rax],esi
  40c0a4:	add    DWORD PTR [rcx+rax*1],eax
  40c0a7:	add    BYTE PTR [rdx+rax*2],al
  40c0aa:	add    BYTE PTR [rax],al
  40c0ac:	add    DWORD PTR [rcx+rax*1],eax
  40c0af:	add    BYTE PTR [rdx+rax*2],al
  40c0b2:	add    BYTE PTR [rax],al
  40c0b4:	add    DWORD PTR [rsi],eax
  40c0b6:	add    eax,DWORD PTR [rax]
  40c0b8:	(bad)  
  40c0b9:	rex.X add sil,BYTE PTR [rax]
  40c0bc:	add    DWORD PTR [rax+0x0],esp
  40c0bf:	add    BYTE PTR [rcx],al
  40c0c1:	add    BYTE PTR [rax],al
  40c0c3:	add    BYTE PTR [rcx],al
  40c0c5:	add    BYTE PTR [rax],al
  40c0c7:	add    BYTE PTR [rcx],al
  40c0c9:	add    BYTE PTR [rax],al
  40c0cb:	add    BYTE PTR [rcx],al
  40c0cd:	or     al,BYTE PTR [rsi]
  40c0cf:	add    BYTE PTR [rdx],cl
  40c0d1:	jb     0x40c0d9
  40c0d3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c539
  40c0d9:	push   rax
  40c0da:	add    al,al
  40c0dc:	add    DWORD PTR [rdx],ecx
  40c0de:	add    eax,0x6d20a05
  40c0e3:	add    eax,DWORD PTR [rbx]
  40c0e5:	xor    BYTE PTR [rdx],al
  40c0e7:	(bad)  
  40c0e8:	add    DWORD PTR [rax+0x0],edx
  40c0eb:	add    BYTE PTR [rcx],al
  40c0ed:	add    al,0x1
  40c0ef:	add    BYTE PTR [rdx+rax*2],al
  40c0f2:	add    BYTE PTR [rax],al
  40c0f4:	add    DWORD PTR [rsi],eax
  40c0f6:	add    eax,DWORD PTR [rax]
  40c0f8:	(bad)  
  40c0f9:	rex.X add sil,BYTE PTR [rax]
  40c0fc:	add    DWORD PTR [rax+0x0],esp
  40c0ff:	add    BYTE PTR [rcx],al
  40c101:	add    BYTE PTR [rax],al
  40c103:	add    BYTE PTR [rcx],al
  40c105:	add    al,0x1
  40c107:	add    BYTE PTR [rdx+riz*4],al
  40c10a:	add    BYTE PTR [rax],al
  40c10c:	add    DWORD PTR [rax],eax
  40c10e:	add    BYTE PTR [rax],al
  40c110:	add    DWORD PTR [rsi],edx
  40c112:	or     DWORD PTR [rax],eax
  40c114:	(bad)  
  40c115:	mov    BYTE PTR [rsi],al
  40c117:	add    BYTE PTR [rax],dl
  40c119:	js     0x40c120
  40c11b:	add    BYTE PTR [rbx],cl
  40c11d:	push   0xffffffffe2060004
  40c122:	add    dh,BYTE PTR [rax]
  40c124:	add    DWORD PTR [rax+0x0],esp
  40c127:	add    BYTE PTR [rcx],al
  40c129:	add    BYTE PTR [rax],al
  40c12b:	add    BYTE PTR [rcx],al
  40c12d:	add    BYTE PTR [rax],al
  40c12f:	add    BYTE PTR [rcx],al
  40c131:	add    BYTE PTR [rax],al
  40c133:	add    BYTE PTR [rcx],al
  40c135:	(bad)  
  40c136:	add    eax,DWORD PTR [rax]
  40c138:	(bad)  
  40c139:	(bad)  
  40c13b:	xor    BYTE PTR [rcx],al
  40c13d:	(bad)  
  40c13e:	add    BYTE PTR [rax],al
  40c140:	add    DWORD PTR [rdi+rax*1],ecx
  40c143:	add    BYTE PTR [rdx+riz*4],cl
  40c146:	or     BYTE PTR [rax],dh
  40c148:	(bad)  
  40c149:	(bad)  
  40c14a:	(bad)  
  40c14b:	jo     0x40c152
  40c14d:	push   rax
  40c14e:	add    al,0xc0
  40c150:	add    dl,al
  40c152:	add    BYTE PTR [rax],al
  40c154:	add    DWORD PTR [rcx],edx
  40c156:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e736d
  40c15c:	or     dh,BYTE PTR [rax]
  40c15e:	or     DWORD PTR [rax+0x8],esp
  40c161:	jo     0x40c16a
  40c163:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220c53a
  40c16a:	add    BYTE PTR [rax],al
  40c16c:	add    DWORD PTR [rcx+rax*1],eax
  40c16f:	add    BYTE PTR [rdx+rax*2],al
  40c172:	add    BYTE PTR [rax],al
  40c174:	add    DWORD PTR [rdx],ecx
  40c176:	(bad)  
  40c177:	add    BYTE PTR [rdx],cl
  40c179:	xor    al,BYTE PTR [rsi]
  40c17b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0c5e1
  40c181:	push   rax
  40c182:	add    al,al
  40c184:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c18c
  40c18a:	add    DWORD PTR [rax],esi
  40c18c:	add    DWORD PTR [rax],ecx
  40c18e:	add    eax,0x4420800
  40c193:	xor    BYTE PTR [rbx],al
  40c195:	(bad)  
  40c196:	add    dh,BYTE PTR [rax+0x1]
  40c199:	push   rax
  40c19a:	add    BYTE PTR [rax],al
  40c19c:	add    DWORD PTR [rdi],eax
  40c19e:	add    al,0x0
  40c1a0:	(bad)  
  40c1a1:	xor    al,BYTE PTR [rbx]
  40c1a3:	xor    BYTE PTR [rdx],al
  40c1a5:	(bad)  
  40c1a6:	add    DWORD PTR [rax+0x1],esi
  40c1a9:	add    eax,0x32050002
  40c1ae:	add    DWORD PTR [rax],esi
  40c1b0:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245c1b8
  40c1b6:	add    DWORD PTR [rax],esi
  40c1b8:	add    DWORD PTR [rax],eax
  40c1ba:	add    BYTE PTR [rax],al
  40c1bc:	add    DWORD PTR [rax],eax
  40c1be:	add    BYTE PTR [rax],al
  40c1c0:	add    DWORD PTR [rax],eax
  40c1c2:	add    BYTE PTR [rax],al
  40c1c4:	add    DWORD PTR [rdi],eax
  40c1c6:	add    al,0x0
  40c1c8:	(bad)  
  40c1c9:	xor    al,BYTE PTR [rbx]
  40c1cb:	xor    BYTE PTR [rdx],al
  40c1cd:	(bad)  
  40c1ce:	add    DWORD PTR [rax+0x1],esi
  40c1d1:	(bad)  
  40c1d2:	add    eax,DWORD PTR [rax]
  40c1d4:	(bad)  
  40c1d5:	rex.X add sil,BYTE PTR [rax]
  40c1d8:	add    DWORD PTR [rax+0x0],esp
  40c1db:	add    BYTE PTR [rcx],al
  40c1dd:	add    eax,0x32050002
  40c1e2:	add    DWORD PTR [rax],esi
  40c1e4:	add    DWORD PTR [rdi],eax
  40c1e6:	add    al,0x0
  40c1e8:	(bad)  
  40c1e9:	xor    al,BYTE PTR [rbx]
  40c1eb:	xor    BYTE PTR [rdx],al
  40c1ed:	(bad)  
  40c1ee:	add    DWORD PTR [rax+0x1],esi
  40c1f1:	(bad)  
  40c1f2:	add    eax,DWORD PTR [rax]
  40c1f4:	(bad)  
  40c1f5:	rex.X add sil,BYTE PTR [rax]
  40c1f8:	add    DWORD PTR [rax+0x0],esp
  40c1fb:	add    BYTE PTR [rcx],al
  40c1fd:	(bad)  
  40c1fe:	add    eax,DWORD PTR [rax]
  40c200:	(bad)  
  40c201:	rex.X add sil,BYTE PTR [rax]
  40c204:	add    DWORD PTR [rax+0x0],esp
  40c207:	add    BYTE PTR [rcx],al
  40c209:	or     BYTE PTR [rip+0x4420800],al        # 0x482ca0f
  40c20f:	xor    BYTE PTR [rbx],al
  40c211:	(bad)  
  40c212:	add    dh,BYTE PTR [rax+0x1]
  40c215:	push   rax
  40c216:	add    BYTE PTR [rax],al
  40c218:	add    DWORD PTR [rax],eax
  40c21a:	add    BYTE PTR [rax],al
  40c21c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000040d000 <.bss>:
	...

Disassembly of section .idata:

000000000040e000 <.idata>:
  40e000:	push   rax
  40e001:	loopne 0x40e003
	...
  40e00b:	add    BYTE PTR [rsp+rbp*8],dl
  40e00e:	add    BYTE PTR [rax],al
  40e010:	and    bl,ah
  40e012:	add    BYTE PTR [rax],al
  40e014:	rex.W loope 0x40e017
	...
  40e01f:	add    BYTE PTR [rsp+rbp*8-0x1be80000],al
  40e026:	add    BYTE PTR [rax],al
  40e028:	or     dl,ah
	...
  40e032:	add    BYTE PTR [rax],al
  40e034:	sbb    al,0xed
  40e036:	add    BYTE PTR [rax],al
  40e038:	fsub   st,st(4)
	...
  40e04e:	add    BYTE PTR [rax],al
  40e050:	lock in eax,0x0
  40e053:	add    BYTE PTR [rax],al
  40e055:	add    BYTE PTR [rax],al
  40e057:	add    ah,bh
  40e059:	in     eax,0x0
  40e05b:	add    BYTE PTR [rax],al
  40e05d:	add    BYTE PTR [rax],al
  40e05f:	add    BYTE PTR [rax],cl
  40e061:	out    0x0,al
  40e063:	add    BYTE PTR [rax],al
  40e065:	add    BYTE PTR [rax],al
  40e067:	add    BYTE PTR [rax],ah
  40e069:	out    0x0,al
  40e06b:	add    BYTE PTR [rax],al
  40e06d:	add    BYTE PTR [rax],al
  40e06f:	add    BYTE PTR [rax-0x1a],al
  40e072:	add    BYTE PTR [rax],al
  40e074:	add    BYTE PTR [rax],al
  40e076:	add    BYTE PTR [rax],al
  40e078:	pop    rax
  40e079:	out    0x0,al
  40e07b:	add    BYTE PTR [rax],al
  40e07d:	add    BYTE PTR [rax],al
  40e07f:	add    BYTE PTR [rax-0x1a],dh
  40e082:	add    BYTE PTR [rax],al
  40e084:	add    BYTE PTR [rax],al
  40e086:	add    BYTE PTR [rax],al
  40e088:	test   dh,ah
  40e08a:	add    BYTE PTR [rax],al
  40e08c:	add    BYTE PTR [rax],al
  40e08e:	add    BYTE PTR [rax],al
  40e090:	xchg   esp,eax
  40e091:	out    0x0,al
  40e093:	add    BYTE PTR [rax],al
  40e095:	add    BYTE PTR [rax],al
  40e097:	add    BYTE PTR [rsi+riz*8+0x0],ah
  40e09e:	add    BYTE PTR [rax],al
  40e0a0:	lods   al,BYTE PTR ds:[rsi]
  40e0a1:	out    0x0,al
  40e0a3:	add    BYTE PTR [rax],al
  40e0a5:	add    BYTE PTR [rax],al
  40e0a7:	add    al,cl
  40e0a9:	out    0x0,al
  40e0ab:	add    BYTE PTR [rax],al
  40e0ad:	add    BYTE PTR [rax],al
  40e0af:	add    ah,dl
  40e0b1:	out    0x0,al
  40e0b3:	add    BYTE PTR [rax],al
  40e0b5:	add    BYTE PTR [rax],al
  40e0b7:	add    al,ah
  40e0b9:	out    0x0,al
  40e0bb:	add    BYTE PTR [rax],al
  40e0bd:	add    BYTE PTR [rax],al
  40e0bf:	add    ah,ch
  40e0c1:	out    0x0,al
  40e0c3:	add    BYTE PTR [rax],al
  40e0c5:	add    BYTE PTR [rax],al
  40e0c7:	add    BYTE PTR [rax],cl
  40e0c9:	out    0x0,eax
  40e0cb:	add    BYTE PTR [rax],al
  40e0cd:	add    BYTE PTR [rax],al
  40e0cf:	add    BYTE PTR [rdi+riz*8],bl
  40e0d2:	add    BYTE PTR [rax],al
  40e0d4:	add    BYTE PTR [rax],al
  40e0d6:	add    BYTE PTR [rax],al
  40e0d8:	cmp    bh,ah
  40e0da:	add    BYTE PTR [rax],al
  40e0dc:	add    BYTE PTR [rax],al
  40e0de:	add    BYTE PTR [rax],al
  40e0e0:	push   rax
  40e0e1:	out    0x0,eax
  40e0e3:	add    BYTE PTR [rax],al
  40e0e5:	add    BYTE PTR [rax],al
  40e0e7:	add    BYTE PTR [rax-0x19],ah
  40e0ea:	add    BYTE PTR [rax],al
  40e0ec:	add    BYTE PTR [rax],al
  40e0ee:	add    BYTE PTR [rax],al
  40e0f0:	jl     0x40e0d9
  40e0f2:	add    BYTE PTR [rax],al
  40e0f4:	add    BYTE PTR [rax],al
  40e0f6:	add    BYTE PTR [rax],al
  40e0f8:	xchg   esp,eax
  40e0f9:	out    0x0,eax
  40e0fb:	add    BYTE PTR [rax],al
  40e0fd:	add    BYTE PTR [rax],al
  40e0ff:	add    BYTE PTR [rdi+riz*8+0x0],ah
  40e106:	add    BYTE PTR [rax],al
  40e108:	mov    eax,0xe7
  40e10d:	add    BYTE PTR [rax],al
  40e10f:	add    ah,cl
  40e111:	out    0x0,eax
  40e113:	add    BYTE PTR [rax],al
  40e115:	add    BYTE PTR [rax],al
  40e117:	add    ah,bl
  40e119:	out    0x0,eax
  40e11b:	add    BYTE PTR [rax],al
  40e11d:	add    BYTE PTR [rax],al
  40e11f:	add    ah,ch
  40e121:	out    0x0,eax
  40e123:	add    BYTE PTR [rax],al
  40e125:	add    BYTE PTR [rax],al
  40e127:	add    ah,bh
  40e129:	out    0x0,eax
  40e12b:	add    BYTE PTR [rax],al
  40e12d:	add    BYTE PTR [rax],al
  40e12f:	add    BYTE PTR [rax],cl
  40e131:	call   0x40e136
  40e136:	add    BYTE PTR [rax],al
  40e138:	sbb    al,0xe8
	...
  40e146:	add    BYTE PTR [rax],al
  40e148:	sub    al,0xe8
  40e14a:	add    BYTE PTR [rax],al
  40e14c:	add    BYTE PTR [rax],al
  40e14e:	add    BYTE PTR [rax],al
  40e150:	rex.R call 0x40e156
  40e156:	add    BYTE PTR [rax],al
  40e158:	pop    rsp
  40e159:	call   0x40e15e
  40e15e:	add    BYTE PTR [rax],al
  40e160:	jo     0x40e14a
  40e162:	add    BYTE PTR [rax],al
  40e164:	add    BYTE PTR [rax],al
  40e166:	add    BYTE PTR [rax],al
  40e168:	xchg   al,ch
  40e16a:	add    BYTE PTR [rax],al
  40e16c:	add    BYTE PTR [rax],al
  40e16e:	add    BYTE PTR [rax],al
  40e170:	pushf  
  40e171:	call   0x40e176
  40e176:	add    BYTE PTR [rax],al
  40e178:	lods   al,BYTE PTR ds:[rsi]
  40e179:	call   0x40e17e
  40e17e:	add    BYTE PTR [rax],al
  40e180:	mov    esi,0xe8
  40e185:	add    BYTE PTR [rax],al
  40e187:	add    al,bl
  40e189:	call   0x40e18e
  40e18e:	add    BYTE PTR [rax],al
  40e190:	call   0x40e27d
  40e195:	add    BYTE PTR [rax],al
  40e197:	add    BYTE PTR [rcx+rbp*8],al
  40e19a:	add    BYTE PTR [rax],al
  40e19c:	add    BYTE PTR [rax],al
  40e19e:	add    BYTE PTR [rax],al
  40e1a0:	sbb    al,0xe9
  40e1a2:	add    BYTE PTR [rax],al
  40e1a4:	add    BYTE PTR [rax],al
  40e1a6:	add    BYTE PTR [rax],al
  40e1a8:	ss jmp 0x40e1ae
  40e1ae:	add    BYTE PTR [rax],al
  40e1b0:	rex.WR jmp 0x40e1b6
  40e1b6:	add    BYTE PTR [rax],al
  40e1b8:	(bad)  
  40e1b9:	jmp    0x40e1be
  40e1be:	add    BYTE PTR [rax],al
  40e1c0:	jp     0x40e1ab
  40e1c2:	add    BYTE PTR [rax],al
  40e1c4:	add    BYTE PTR [rax],al
  40e1c6:	add    BYTE PTR [rax],al
  40e1c8:	mov    gs,ecx
  40e1ca:	add    BYTE PTR [rax],al
  40e1cc:	add    BYTE PTR [rax],al
  40e1ce:	add    BYTE PTR [rax],al
  40e1d0:	lods   al,BYTE PTR ds:[rsi]
  40e1d1:	jmp    0x40e1d6
  40e1d6:	add    BYTE PTR [rax],al
  40e1d8:	mov    ah,0xe9
  40e1da:	add    BYTE PTR [rax],al
  40e1dc:	add    BYTE PTR [rax],al
  40e1de:	add    BYTE PTR [rax],al
  40e1e0:	enter  0xe9,0x0
  40e1e4:	add    BYTE PTR [rax],al
  40e1e6:	add    BYTE PTR [rax],al
  40e1e8:	(bad)  
  40e1e9:	jmp    0x40e1ee
  40e1ee:	add    BYTE PTR [rax],al
  40e1f0:	bnd jmp 0x40e1f6
  40e1f6:	add    BYTE PTR [rax],al
  40e1f8:	add    al,0xea
	...
  40e206:	add    BYTE PTR [rax],al
  40e208:	adc    al,0xea
  40e20a:	add    BYTE PTR [rax],al
  40e20c:	add    BYTE PTR [rax],al
  40e20e:	add    BYTE PTR [rax],al
  40e210:	sub    al,0xea
  40e212:	add    BYTE PTR [rax],al
  40e214:	add    BYTE PTR [rax],al
  40e216:	add    BYTE PTR [rax],al
  40e218:	cmp    ch,dl
  40e21a:	add    BYTE PTR [rax],al
  40e21c:	add    BYTE PTR [rax],al
  40e21e:	add    BYTE PTR [rax],al
  40e220:	rex.WX (bad) 
  40e222:	add    BYTE PTR [rax],al
  40e224:	add    BYTE PTR [rax],al
  40e226:	add    BYTE PTR [rax],al
  40e228:	push   rsi
  40e229:	(bad)  
  40e22a:	add    BYTE PTR [rax],al
  40e22c:	add    BYTE PTR [rax],al
  40e22e:	add    BYTE PTR [rax],al
  40e230:	fs (bad) 
  40e232:	add    BYTE PTR [rax],al
  40e234:	add    BYTE PTR [rax],al
  40e236:	add    BYTE PTR [rax],al
  40e238:	je     0x40e224
  40e23a:	add    BYTE PTR [rax],al
  40e23c:	add    BYTE PTR [rax],al
  40e23e:	add    BYTE PTR [rax],al
  40e240:	xchg   dl,ch
  40e242:	add    BYTE PTR [rax],al
  40e244:	add    BYTE PTR [rax],al
  40e246:	add    BYTE PTR [rax],al
  40e248:	(bad)  
  40e249:	(bad)  
  40e24a:	add    BYTE PTR [rax],al
  40e24c:	add    BYTE PTR [rax],al
  40e24e:	add    BYTE PTR [rax],al
  40e250:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e251:	(bad)  
  40e252:	add    BYTE PTR [rax],al
  40e254:	add    BYTE PTR [rax],al
  40e256:	add    BYTE PTR [rax],al
  40e258:	mov    dl,0xea
  40e25a:	add    BYTE PTR [rax],al
  40e25c:	add    BYTE PTR [rax],al
  40e25e:	add    BYTE PTR [rax],al
  40e260:	mov    esp,0xea
  40e265:	add    BYTE PTR [rax],al
  40e267:	add    dh,al
  40e269:	(bad)  
  40e26a:	add    BYTE PTR [rax],al
  40e26c:	add    BYTE PTR [rax],al
  40e26e:	add    BYTE PTR [rax],al
  40e270:	shr    dl,1
  40e272:	add    BYTE PTR [rax],al
  40e274:	add    BYTE PTR [rax],al
  40e276:	add    BYTE PTR [rax],al
  40e278:	fsub   st(2),st
  40e27a:	add    BYTE PTR [rax],al
  40e27c:	add    BYTE PTR [rax],al
  40e27e:	add    BYTE PTR [rax],al
  40e280:	in     al,0xea
  40e282:	add    BYTE PTR [rax],al
  40e284:	add    BYTE PTR [rax],al
  40e286:	add    BYTE PTR [rax],al
  40e288:	out    dx,al
  40e289:	(bad)  
  40e28a:	add    BYTE PTR [rax],al
  40e28c:	add    BYTE PTR [rax],al
  40e28e:	add    BYTE PTR [rax],al
  40e290:	clc    
  40e291:	(bad)  
  40e292:	add    BYTE PTR [rax],al
  40e294:	add    BYTE PTR [rax],al
  40e296:	add    BYTE PTR [rax],al
  40e298:	add    bl,ch
  40e29a:	add    BYTE PTR [rax],al
  40e29c:	add    BYTE PTR [rax],al
  40e29e:	add    BYTE PTR [rax],al
  40e2a0:	or     ch,bl
  40e2a2:	add    BYTE PTR [rax],al
  40e2a4:	add    BYTE PTR [rax],al
  40e2a6:	add    BYTE PTR [rax],al
  40e2a8:	adc    ch,bl
  40e2aa:	add    BYTE PTR [rax],al
  40e2ac:	add    BYTE PTR [rax],al
  40e2ae:	add    BYTE PTR [rax],al
  40e2b0:	sbb    al,0xeb
  40e2b2:	add    BYTE PTR [rax],al
  40e2b4:	add    BYTE PTR [rax],al
  40e2b6:	add    BYTE PTR [rax],al
  40e2b8:	and    al,0xeb
  40e2ba:	add    BYTE PTR [rax],al
  40e2bc:	add    BYTE PTR [rax],al
  40e2be:	add    BYTE PTR [rax],al
  40e2c0:	sub    al,0xeb
  40e2c2:	add    BYTE PTR [rax],al
  40e2c4:	add    BYTE PTR [rax],al
  40e2c6:	add    BYTE PTR [rax],al
  40e2c8:	ss jmp 0x40e2cb
  40e2cb:	add    BYTE PTR [rax],al
  40e2cd:	add    BYTE PTR [rax],al
  40e2cf:	add    BYTE PTR [rax-0x15],al
  40e2d2:	add    BYTE PTR [rax],al
  40e2d4:	add    BYTE PTR [rax],al
  40e2d6:	add    BYTE PTR [rax],al
  40e2d8:	rex.WX jmp 0x40e2db
  40e2db:	add    BYTE PTR [rax],al
  40e2dd:	add    BYTE PTR [rax],al
  40e2df:	add    BYTE PTR [rbx+rbp*8+0x0],dl
  40e2e3:	add    BYTE PTR [rax],al
  40e2e5:	add    BYTE PTR [rax],al
  40e2e7:	add    BYTE PTR [rsi-0x15],bl
  40e2ea:	add    BYTE PTR [rax],al
  40e2ec:	add    BYTE PTR [rax],al
  40e2ee:	add    BYTE PTR [rax],al
  40e2f0:	push   0xeb
  40e2f5:	add    BYTE PTR [rax],al
  40e2f7:	add    BYTE PTR [rdx-0x15],dh
  40e2fa:	add    BYTE PTR [rax],al
  40e2fc:	add    BYTE PTR [rax],al
  40e2fe:	add    BYTE PTR [rax],al
  40e300:	jl     0x40e2ed
  40e302:	add    BYTE PTR [rax],al
  40e304:	add    BYTE PTR [rax],al
  40e306:	add    BYTE PTR [rax],al
  40e308:	mov    bl,ch
  40e30a:	add    BYTE PTR [rax],al
  40e30c:	add    BYTE PTR [rax],al
  40e30e:	add    BYTE PTR [rax],al
  40e310:	nop
  40e311:	jmp    0x40e313
	...
  40e31f:	add    al,dh
  40e321:	in     eax,0x0
  40e323:	add    BYTE PTR [rax],al
  40e325:	add    BYTE PTR [rax],al
  40e327:	add    ah,bh
  40e329:	in     eax,0x0
  40e32b:	add    BYTE PTR [rax],al
  40e32d:	add    BYTE PTR [rax],al
  40e32f:	add    BYTE PTR [rax],cl
  40e331:	out    0x0,al
  40e333:	add    BYTE PTR [rax],al
  40e335:	add    BYTE PTR [rax],al
  40e337:	add    BYTE PTR [rax],ah
  40e339:	out    0x0,al
  40e33b:	add    BYTE PTR [rax],al
  40e33d:	add    BYTE PTR [rax],al
  40e33f:	add    BYTE PTR [rax-0x1a],al
  40e342:	add    BYTE PTR [rax],al
  40e344:	add    BYTE PTR [rax],al
  40e346:	add    BYTE PTR [rax],al
  40e348:	pop    rax
  40e349:	out    0x0,al
  40e34b:	add    BYTE PTR [rax],al
  40e34d:	add    BYTE PTR [rax],al
  40e34f:	add    BYTE PTR [rax-0x1a],dh
  40e352:	add    BYTE PTR [rax],al
  40e354:	add    BYTE PTR [rax],al
  40e356:	add    BYTE PTR [rax],al
  40e358:	test   dh,ah
  40e35a:	add    BYTE PTR [rax],al
  40e35c:	add    BYTE PTR [rax],al
  40e35e:	add    BYTE PTR [rax],al
  40e360:	xchg   esp,eax
  40e361:	out    0x0,al
  40e363:	add    BYTE PTR [rax],al
  40e365:	add    BYTE PTR [rax],al
  40e367:	add    BYTE PTR [rsi+riz*8+0x0],ah
  40e36e:	add    BYTE PTR [rax],al
  40e370:	lods   al,BYTE PTR ds:[rsi]
  40e371:	out    0x0,al
  40e373:	add    BYTE PTR [rax],al
  40e375:	add    BYTE PTR [rax],al
  40e377:	add    al,cl
  40e379:	out    0x0,al
  40e37b:	add    BYTE PTR [rax],al
  40e37d:	add    BYTE PTR [rax],al
  40e37f:	add    ah,dl
  40e381:	out    0x0,al
  40e383:	add    BYTE PTR [rax],al
  40e385:	add    BYTE PTR [rax],al
  40e387:	add    al,ah
  40e389:	out    0x0,al
  40e38b:	add    BYTE PTR [rax],al
  40e38d:	add    BYTE PTR [rax],al
  40e38f:	add    ah,ch
  40e391:	out    0x0,al
  40e393:	add    BYTE PTR [rax],al
  40e395:	add    BYTE PTR [rax],al
  40e397:	add    BYTE PTR [rax],cl
  40e399:	out    0x0,eax
  40e39b:	add    BYTE PTR [rax],al
  40e39d:	add    BYTE PTR [rax],al
  40e39f:	add    BYTE PTR [rdi+riz*8],bl
  40e3a2:	add    BYTE PTR [rax],al
  40e3a4:	add    BYTE PTR [rax],al
  40e3a6:	add    BYTE PTR [rax],al
  40e3a8:	cmp    bh,ah
  40e3aa:	add    BYTE PTR [rax],al
  40e3ac:	add    BYTE PTR [rax],al
  40e3ae:	add    BYTE PTR [rax],al
  40e3b0:	push   rax
  40e3b1:	out    0x0,eax
  40e3b3:	add    BYTE PTR [rax],al
  40e3b5:	add    BYTE PTR [rax],al
  40e3b7:	add    BYTE PTR [rax-0x19],ah
  40e3ba:	add    BYTE PTR [rax],al
  40e3bc:	add    BYTE PTR [rax],al
  40e3be:	add    BYTE PTR [rax],al
  40e3c0:	jl     0x40e3a9
  40e3c2:	add    BYTE PTR [rax],al
  40e3c4:	add    BYTE PTR [rax],al
  40e3c6:	add    BYTE PTR [rax],al
  40e3c8:	xchg   esp,eax
  40e3c9:	out    0x0,eax
  40e3cb:	add    BYTE PTR [rax],al
  40e3cd:	add    BYTE PTR [rax],al
  40e3cf:	add    BYTE PTR [rdi+riz*8+0x0],ah
  40e3d6:	add    BYTE PTR [rax],al
  40e3d8:	mov    eax,0xe7
  40e3dd:	add    BYTE PTR [rax],al
  40e3df:	add    ah,cl
  40e3e1:	out    0x0,eax
  40e3e3:	add    BYTE PTR [rax],al
  40e3e5:	add    BYTE PTR [rax],al
  40e3e7:	add    ah,bl
  40e3e9:	out    0x0,eax
  40e3eb:	add    BYTE PTR [rax],al
  40e3ed:	add    BYTE PTR [rax],al
  40e3ef:	add    ah,ch
  40e3f1:	out    0x0,eax
  40e3f3:	add    BYTE PTR [rax],al
  40e3f5:	add    BYTE PTR [rax],al
  40e3f7:	add    ah,bh
  40e3f9:	out    0x0,eax
  40e3fb:	add    BYTE PTR [rax],al
  40e3fd:	add    BYTE PTR [rax],al
  40e3ff:	add    BYTE PTR [rax],cl
  40e401:	call   0x40e406
  40e406:	add    BYTE PTR [rax],al
  40e408:	sbb    al,0xe8
	...
  40e416:	add    BYTE PTR [rax],al
  40e418:	sub    al,0xe8
  40e41a:	add    BYTE PTR [rax],al
  40e41c:	add    BYTE PTR [rax],al
  40e41e:	add    BYTE PTR [rax],al
  40e420:	rex.R call 0x40e426
  40e426:	add    BYTE PTR [rax],al
  40e428:	pop    rsp
  40e429:	call   0x40e42e
  40e42e:	add    BYTE PTR [rax],al
  40e430:	jo     0x40e41a
  40e432:	add    BYTE PTR [rax],al
  40e434:	add    BYTE PTR [rax],al
  40e436:	add    BYTE PTR [rax],al
  40e438:	xchg   al,ch
  40e43a:	add    BYTE PTR [rax],al
  40e43c:	add    BYTE PTR [rax],al
  40e43e:	add    BYTE PTR [rax],al
  40e440:	pushf  
  40e441:	call   0x40e446
  40e446:	add    BYTE PTR [rax],al
  40e448:	lods   al,BYTE PTR ds:[rsi]
  40e449:	call   0x40e44e
  40e44e:	add    BYTE PTR [rax],al
  40e450:	mov    esi,0xe8
  40e455:	add    BYTE PTR [rax],al
  40e457:	add    al,bl
  40e459:	call   0x40e45e
  40e45e:	add    BYTE PTR [rax],al
  40e460:	call   0x40e54d
  40e465:	add    BYTE PTR [rax],al
  40e467:	add    BYTE PTR [rcx+rbp*8],al
  40e46a:	add    BYTE PTR [rax],al
  40e46c:	add    BYTE PTR [rax],al
  40e46e:	add    BYTE PTR [rax],al
  40e470:	sbb    al,0xe9
  40e472:	add    BYTE PTR [rax],al
  40e474:	add    BYTE PTR [rax],al
  40e476:	add    BYTE PTR [rax],al
  40e478:	ss jmp 0x40e47e
  40e47e:	add    BYTE PTR [rax],al
  40e480:	rex.WR jmp 0x40e486
  40e486:	add    BYTE PTR [rax],al
  40e488:	(bad)  
  40e489:	jmp    0x40e48e
  40e48e:	add    BYTE PTR [rax],al
  40e490:	jp     0x40e47b
  40e492:	add    BYTE PTR [rax],al
  40e494:	add    BYTE PTR [rax],al
  40e496:	add    BYTE PTR [rax],al
  40e498:	mov    gs,ecx
  40e49a:	add    BYTE PTR [rax],al
  40e49c:	add    BYTE PTR [rax],al
  40e49e:	add    BYTE PTR [rax],al
  40e4a0:	lods   al,BYTE PTR ds:[rsi]
  40e4a1:	jmp    0x40e4a6
  40e4a6:	add    BYTE PTR [rax],al
  40e4a8:	mov    ah,0xe9
  40e4aa:	add    BYTE PTR [rax],al
  40e4ac:	add    BYTE PTR [rax],al
  40e4ae:	add    BYTE PTR [rax],al
  40e4b0:	enter  0xe9,0x0
  40e4b4:	add    BYTE PTR [rax],al
  40e4b6:	add    BYTE PTR [rax],al
  40e4b8:	(bad)  
  40e4b9:	jmp    0x40e4be
  40e4be:	add    BYTE PTR [rax],al
  40e4c0:	bnd jmp 0x40e4c6
  40e4c6:	add    BYTE PTR [rax],al
  40e4c8:	add    al,0xea
	...
  40e4d6:	add    BYTE PTR [rax],al
  40e4d8:	adc    al,0xea
  40e4da:	add    BYTE PTR [rax],al
  40e4dc:	add    BYTE PTR [rax],al
  40e4de:	add    BYTE PTR [rax],al
  40e4e0:	sub    al,0xea
  40e4e2:	add    BYTE PTR [rax],al
  40e4e4:	add    BYTE PTR [rax],al
  40e4e6:	add    BYTE PTR [rax],al
  40e4e8:	cmp    ch,dl
  40e4ea:	add    BYTE PTR [rax],al
  40e4ec:	add    BYTE PTR [rax],al
  40e4ee:	add    BYTE PTR [rax],al
  40e4f0:	rex.WX (bad) 
  40e4f2:	add    BYTE PTR [rax],al
  40e4f4:	add    BYTE PTR [rax],al
  40e4f6:	add    BYTE PTR [rax],al
  40e4f8:	push   rsi
  40e4f9:	(bad)  
  40e4fa:	add    BYTE PTR [rax],al
  40e4fc:	add    BYTE PTR [rax],al
  40e4fe:	add    BYTE PTR [rax],al
  40e500:	fs (bad) 
  40e502:	add    BYTE PTR [rax],al
  40e504:	add    BYTE PTR [rax],al
  40e506:	add    BYTE PTR [rax],al
  40e508:	je     0x40e4f4
  40e50a:	add    BYTE PTR [rax],al
  40e50c:	add    BYTE PTR [rax],al
  40e50e:	add    BYTE PTR [rax],al
  40e510:	xchg   dl,ch
  40e512:	add    BYTE PTR [rax],al
  40e514:	add    BYTE PTR [rax],al
  40e516:	add    BYTE PTR [rax],al
  40e518:	(bad)  
  40e519:	(bad)  
  40e51a:	add    BYTE PTR [rax],al
  40e51c:	add    BYTE PTR [rax],al
  40e51e:	add    BYTE PTR [rax],al
  40e520:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40e521:	(bad)  
  40e522:	add    BYTE PTR [rax],al
  40e524:	add    BYTE PTR [rax],al
  40e526:	add    BYTE PTR [rax],al
  40e528:	mov    dl,0xea
  40e52a:	add    BYTE PTR [rax],al
  40e52c:	add    BYTE PTR [rax],al
  40e52e:	add    BYTE PTR [rax],al
  40e530:	mov    esp,0xea
  40e535:	add    BYTE PTR [rax],al
  40e537:	add    dh,al
  40e539:	(bad)  
  40e53a:	add    BYTE PTR [rax],al
  40e53c:	add    BYTE PTR [rax],al
  40e53e:	add    BYTE PTR [rax],al
  40e540:	shr    dl,1
  40e542:	add    BYTE PTR [rax],al
  40e544:	add    BYTE PTR [rax],al
  40e546:	add    BYTE PTR [rax],al
  40e548:	fsub   st(2),st
  40e54a:	add    BYTE PTR [rax],al
  40e54c:	add    BYTE PTR [rax],al
  40e54e:	add    BYTE PTR [rax],al
  40e550:	in     al,0xea
  40e552:	add    BYTE PTR [rax],al
  40e554:	add    BYTE PTR [rax],al
  40e556:	add    BYTE PTR [rax],al
  40e558:	out    dx,al
  40e559:	(bad)  
  40e55a:	add    BYTE PTR [rax],al
  40e55c:	add    BYTE PTR [rax],al
  40e55e:	add    BYTE PTR [rax],al
  40e560:	clc    
  40e561:	(bad)  
  40e562:	add    BYTE PTR [rax],al
  40e564:	add    BYTE PTR [rax],al
  40e566:	add    BYTE PTR [rax],al
  40e568:	add    bl,ch
  40e56a:	add    BYTE PTR [rax],al
  40e56c:	add    BYTE PTR [rax],al
  40e56e:	add    BYTE PTR [rax],al
  40e570:	or     ch,bl
  40e572:	add    BYTE PTR [rax],al
  40e574:	add    BYTE PTR [rax],al
  40e576:	add    BYTE PTR [rax],al
  40e578:	adc    ch,bl
  40e57a:	add    BYTE PTR [rax],al
  40e57c:	add    BYTE PTR [rax],al
  40e57e:	add    BYTE PTR [rax],al
  40e580:	sbb    al,0xeb
  40e582:	add    BYTE PTR [rax],al
  40e584:	add    BYTE PTR [rax],al
  40e586:	add    BYTE PTR [rax],al
  40e588:	and    al,0xeb
  40e58a:	add    BYTE PTR [rax],al
  40e58c:	add    BYTE PTR [rax],al
  40e58e:	add    BYTE PTR [rax],al
  40e590:	sub    al,0xeb
  40e592:	add    BYTE PTR [rax],al
  40e594:	add    BYTE PTR [rax],al
  40e596:	add    BYTE PTR [rax],al
  40e598:	ss jmp 0x40e59b
  40e59b:	add    BYTE PTR [rax],al
  40e59d:	add    BYTE PTR [rax],al
  40e59f:	add    BYTE PTR [rax-0x15],al
  40e5a2:	add    BYTE PTR [rax],al
  40e5a4:	add    BYTE PTR [rax],al
  40e5a6:	add    BYTE PTR [rax],al
  40e5a8:	rex.WX jmp 0x40e5ab
  40e5ab:	add    BYTE PTR [rax],al
  40e5ad:	add    BYTE PTR [rax],al
  40e5af:	add    BYTE PTR [rbx+rbp*8+0x0],dl
  40e5b3:	add    BYTE PTR [rax],al
  40e5b5:	add    BYTE PTR [rax],al
  40e5b7:	add    BYTE PTR [rsi-0x15],bl
  40e5ba:	add    BYTE PTR [rax],al
  40e5bc:	add    BYTE PTR [rax],al
  40e5be:	add    BYTE PTR [rax],al
  40e5c0:	push   0xeb
  40e5c5:	add    BYTE PTR [rax],al
  40e5c7:	add    BYTE PTR [rdx-0x15],dh
  40e5ca:	add    BYTE PTR [rax],al
  40e5cc:	add    BYTE PTR [rax],al
  40e5ce:	add    BYTE PTR [rax],al
  40e5d0:	jl     0x40e5bd
  40e5d2:	add    BYTE PTR [rax],al
  40e5d4:	add    BYTE PTR [rax],al
  40e5d6:	add    BYTE PTR [rax],al
  40e5d8:	mov    bl,ch
  40e5da:	add    BYTE PTR [rax],al
  40e5dc:	add    BYTE PTR [rax],al
  40e5de:	add    BYTE PTR [rax],al
  40e5e0:	nop
  40e5e1:	jmp    0x40e5e3
	...
  40e5ef:	add    BYTE PTR [rcx+0x1],bh
  40e5f2:	addr32 pop rdi
  40e5f4:	data16 jo 0x40e669
  40e5f7:	imul   ebp,DWORD PTR [rsi+0x74],0x17a0066
  40e5fe:	addr32 pop rdi
  40e600:	data16 jb 0x40e668
  40e603:	add    BYTE PTR gs:[rax],al
  40e606:	add    BYTE PTR [rax],al
  40e608:	cwde   
  40e609:	add    DWORD PTR [rdi+0x5f],esp
  40e60c:	push   0x5f687361
  40e611:	je     0x40e674
  40e613:	(bad)  
  40e614:	ins    BYTE PTR es:[rdi],dx
  40e615:	gs pop rdi
  40e617:	fs gs jae 0x40e68f
  40e61b:	jb     0x40e68c
  40e61d:	jns    0x40e61f
  40e61f:	add    BYTE PTR [rbx+0x685f6701],bl
  40e625:	(bad)  
  40e626:	jae    0x40e690
  40e628:	pop    rdi
  40e629:	je     0x40e68c
  40e62b:	(bad)  
  40e62c:	ins    BYTE PTR es:[rdi],dx
  40e62d:	gs pop rdi
  40e62f:	outs   dx,WORD PTR ds:[rsi]
  40e631:	jb     0x40e698
  40e633:	(bad)  
  40e634:	movsxd ebp,DWORD PTR [rax+0x5f]
  40e637:	jb     0x40e69e
  40e639:	ins    DWORD PTR es:[rdi],dx
  40e63a:	outs   dx,DWORD PTR ds:[rsi]
  40e63b:	jbe    0x40e6a2
  40e63d:	add    BYTE PTR [rax],al
  40e63f:	add    BYTE PTR [rax+0x685f6701],ah
  40e645:	(bad)  
  40e646:	jae    0x40e6b0
  40e648:	pop    rdi
  40e649:	je     0x40e6ac
  40e64b:	(bad)  
  40e64c:	ins    BYTE PTR es:[rdi],dx
  40e64d:	gs pop rdi
  40e64f:	imul   ebp,DWORD PTR [rsi+0x73],0x747265
  40e656:	add    BYTE PTR [rax],al
  40e658:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  40e659:	add    DWORD PTR [rdi+0x5f],esp
  40e65c:	push   0x5f687361
  40e661:	je     0x40e6c4
  40e663:	(bad)  
  40e664:	ins    BYTE PTR es:[rdi],dx
  40e665:	gs pop rdi
  40e667:	ins    BYTE PTR es:[rdi],dx
  40e668:	outs   dx,DWORD PTR ds:[rsi]
  40e669:	outs   dx,DWORD PTR ds:[rsi]
  40e66a:	imul   esi,DWORD PTR [rbp+0x70],0x0
  40e66e:	add    BYTE PTR [rax],al
  40e670:	test   eax,0x685f6701
  40e675:	(bad)  
  40e676:	jae    0x40e6e0
  40e678:	pop    rdi
  40e679:	je     0x40e6dc
  40e67b:	(bad)  
  40e67c:	ins    BYTE PTR es:[rdi],dx
  40e67d:	gs pop rdi
  40e67f:	outs   dx,BYTE PTR ds:[rsi]
  40e680:	gs ja  0x40e683
  40e683:	add    BYTE PTR [rbx+0x2],al
  40e686:	addr32 pop rdi
  40e688:	ins    BYTE PTR es:[rdi],dx
  40e689:	imul   esi,DWORD PTR [rbx+0x74],0x7070615f
  40e690:	outs   dx,BYTE PTR gs:[rsi]
  40e692:	add    BYTE PTR fs:[rdx+rax*1+0x67],cl
  40e697:	pop    rdi
  40e698:	ins    BYTE PTR es:[rdi],dx
  40e699:	imul   esi,DWORD PTR [rbx+0x74],0x6572665f
  40e6a0:	add    BYTE PTR gs:[rax],al
  40e6a3:	add    BYTE PTR [rsi+0x2],ah
  40e6a6:	addr32 pop rdi
  40e6a8:	ins    BYTE PTR es:[rdi],dx
  40e6a9:	outs   dx,DWORD PTR ds:[rsi]
  40e6aa:	add    BYTE PTR [ecx+0x2],ch
  40e6ae:	addr32 pop rdi
  40e6b0:	ins    BYTE PTR es:[rdi],dx
  40e6b1:	outs   dx,DWORD PTR ds:[rsi]
  40e6b2:	addr32 pop rdi
  40e6b4:	jae    0x40e71b
  40e6b6:	je     0x40e717
  40e6b8:	(bad)  
  40e6b9:	ins    BYTE PTR es:[rdi],dx
  40e6ba:	ja     0x40e71d
  40e6bc:	jns    0x40e731
  40e6be:	pop    rdi
  40e6bf:	data16 (bad) 
  40e6c1:	je     0x40e724
  40e6c3:	ins    BYTE PTR es:[rdi],dx
  40e6c4:	add    BYTE PTR [rax],al
  40e6c6:	add    BYTE PTR [rax],al
  40e6c8:	xchg   ebp,eax
  40e6c9:	add    ah,BYTE PTR [rdi+0x5f]
  40e6cc:	ins    DWORD PTR es:[rdi],dx
  40e6cd:	(bad)  
  40e6ce:	ins    BYTE PTR es:[rdi],dx
  40e6cf:	ins    BYTE PTR es:[rdi],dx
  40e6d0:	outs   dx,DWORD PTR ds:[rsi]
  40e6d1:	movsxd eax,DWORD PTR [rax]
  40e6d3:	add    BYTE PTR [rsi+0x6d5f6702],dl
  40e6d9:	(bad)  
  40e6da:	ins    BYTE PTR es:[rdi],dx
  40e6db:	ins    BYTE PTR es:[rdi],dx
  40e6dc:	outs   dx,DWORD PTR ds:[rsi]
  40e6dd:	movsxd esi,DWORD PTR [rax]
  40e6df:	add    bh,bh
  40e6e1:	add    ah,BYTE PTR [rdi+0x5f]
  40e6e4:	outs   dx,DWORD PTR ds:[rsi]
  40e6e5:	jo     0x40e74c
  40e6e7:	outs   dx,BYTE PTR ds:[rsi]
  40e6e8:	add    BYTE PTR [rax],al
  40e6ea:	add    BYTE PTR [rax],al
  40e6ec:	mov    dh,0x3
  40e6ee:	addr32 pop rdi
  40e6f0:	jb     0x40e757
  40e6f2:	je     0x40e769
  40e6f4:	jb     0x40e764
  40e6f6:	pop    rdi
  40e6f7:	imul   esp,DWORD PTR [rsi+0x5f],0x6c696166
  40e6fe:	pop    rdi
  40e6ff:	ja     0x40e762
  40e701:	jb     0x40e771
  40e703:	imul   ebp,DWORD PTR [rsi+0x67],0x3c40000
  40e70a:	addr32 pop rdi
  40e70c:	jae    0x40e771
  40e70e:	(bad)  
  40e70f:	outs   dx,BYTE PTR ds:[rsi]
  40e710:	outs   dx,BYTE PTR ds:[rsi]
  40e711:	gs jb  0x40e773
  40e714:	fs gs jae 0x40e78c
  40e718:	jb     0x40e789
  40e71a:	jns    0x40e71c
  40e71c:	mov    DWORD PTR [rbx],0x63735f67
  40e722:	(bad)  
  40e723:	outs   dx,BYTE PTR ds:[rsi]
  40e724:	outs   dx,BYTE PTR ds:[rsi]
  40e725:	gs jb  0x40e787
  40e728:	addr32 gs je 0x40e78b
  40e72c:	outs   dx,BYTE PTR ds:[rsi]
  40e72d:	gs js  0x40e7a4
  40e730:	pop    rdi
  40e731:	je     0x40e7a2
  40e733:	imul   esp,DWORD PTR [rbp+0x6e],0x0
  40e737:	add    al,cl
  40e739:	add    esp,DWORD PTR [rdi+0x5f]
  40e73c:	jae    0x40e7a1
  40e73e:	(bad)  
  40e73f:	outs   dx,BYTE PTR ds:[rsi]
  40e740:	outs   dx,BYTE PTR ds:[rsi]
  40e741:	gs jb  0x40e7a3
  40e744:	imul   ebp,DWORD PTR [rsi+0x70],0x665f7475
  40e74b:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6703cb00
  40e753:	pop    rdi
  40e754:	jae    0x40e7b9
  40e756:	(bad)  
  40e757:	outs   dx,BYTE PTR ds:[rsi]
  40e758:	outs   dx,BYTE PTR ds:[rsi]
  40e759:	gs jb  0x40e7bb
  40e75c:	outs   dx,BYTE PTR ds:[rsi]
  40e75d:	gs ja  0x40e760
  40e760:	int3   
  40e761:	add    esp,DWORD PTR [rdi+0x5f]
  40e764:	jae    0x40e7c9
  40e766:	(bad)  
  40e767:	outs   dx,BYTE PTR ds:[rsi]
  40e768:	outs   dx,BYTE PTR ds:[rsi]
  40e769:	gs jb  0x40e7cb
  40e76c:	jo     0x40e7d3
  40e76e:	imul   ebx,DWORD PTR gs:[rdi+0x6e],0x65
  40e773:	js     0x40e7e9
  40e775:	pop    rdi
  40e776:	je     0x40e7e7
  40e778:	imul   esp,DWORD PTR [rbp+0x6e],0x0
  40e77c:	rol    DWORD PTR [rbx],cl
  40e77e:	addr32 pop rdi
  40e780:	jae    0x40e7e5
  40e782:	(bad)  
  40e783:	outs   dx,BYTE PTR ds:[rsi]
  40e784:	outs   dx,BYTE PTR ds:[rsi]
  40e785:	gs jb  0x40e7e7
  40e788:	jne    0x40e7f8
  40e78a:	gs js  0x40e7fd
  40e78d:	pop    rdi
  40e78e:	je     0x40e7ff
  40e790:	imul   esp,DWORD PTR [rbp+0x6e],0x0
  40e794:	(bad)  
  40e795:	add    al,0x67
  40e797:	pop    rdi
  40e798:	jae    0x40e806
  40e79a:	imul   esi,DWORD PTR [rbx+0x74],0x6572665f
  40e7a1:	add    BYTE PTR gs:[rax],al
  40e7a4:	and    eax,0x735f6704
  40e7a9:	ins    BYTE PTR es:[rdi],dx
  40e7aa:	imul   esi,DWORD PTR [rbx+0x74],0x6572705f
  40e7b1:	jo     0x40e818
  40e7b3:	outs   dx,BYTE PTR ds:[rsi]
  40e7b4:	add    BYTE PTR fs:[rax],al
  40e7b7:	add    BYTE PTR [rdx],ch
  40e7b9:	add    al,0x67
  40e7bb:	pop    rdi
  40e7bc:	jae    0x40e82a
  40e7be:	imul   esi,DWORD PTR [rbx+0x74],0x7665725f
  40e7c5:	gs jb  0x40e83b
  40e7c8:	add    BYTE PTR gs:[rax],al
  40e7cb:	add    BYTE PTR [rsi+0x4],ch
  40e7ce:	addr32 pop rdi
  40e7d0:	jae    0x40e846
  40e7d2:	jb     0x40e833
  40e7d4:	gs jno 0x40e84c
  40e7d7:	(bad)  
  40e7d8:	ins    BYTE PTR es:[rdi],dx
  40e7d9:	add    BYTE PTR [rax],al
  40e7db:	add    BYTE PTR [rcx+0x4],dh
  40e7de:	addr32 pop rdi
  40e7e0:	jae    0x40e856
  40e7e2:	jb     0x40e843
  40e7e4:	push   0x687361
  40e7e9:	add    BYTE PTR [rax],al
  40e7eb:	add    BYTE PTR [rsp+rax*1+0x67],bh
  40e7ef:	pop    rdi
  40e7f0:	jae    0x40e866
  40e7f2:	jb     0x40e857
  40e7f4:	outs   dx,DWORD PTR ds:[rsi]
  40e7f5:	outs   dx,BYTE PTR ds:[rsi]
  40e7f6:	movsxd esp,DWORD PTR [rcx+0x74]
  40e7f9:	add    BYTE PTR [rax],al
  40e7fb:	add    BYTE PTR [rdi+0x4],bh
  40e7fe:	addr32 pop rdi
  40e800:	jae    0x40e876
  40e802:	jb     0x40e868
  40e804:	jne    0x40e876
  40e806:	add    BYTE PTR [rax],al
  40e808:	add    BYTE PTR [rdi+riz*2],0x5f
  40e80c:	jae    0x40e882
  40e80e:	jb     0x40e874
  40e810:	jne    0x40e882
  40e812:	pop    rdi
  40e813:	jo     0x40e887
  40e815:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  40e81c:	add    DWORD PTR [rdi+riz*2],0x5f
  40e820:	jae    0x40e896
  40e822:	jb     0x40e889
  40e824:	jb     0x40e898
  40e826:	outs   dx,DWORD PTR ds:[rsi]
  40e827:	jb     0x40e829
  40e829:	add    BYTE PTR [rax],al
  40e82b:	add    al,bl
  40e82d:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40e831:	gs je  0x40e899
  40e834:	rex.XB jb 0x40e8a0
  40e837:	je     0x40e8a2
  40e839:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e83c:	push   rbx
  40e83d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e842:	outs   dx,BYTE PTR ds:[rsi]
  40e843:	add    al,bh
  40e845:	add    BYTE PTR [rbp+0x6e],al
  40e848:	je     0x40e8af
  40e84a:	jb     0x40e88f
  40e84c:	jb     0x40e8b7
  40e84e:	je     0x40e8b9
  40e850:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e853:	push   rbx
  40e854:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e859:	outs   dx,BYTE PTR ds:[rsi]
  40e85a:	add    BYTE PTR [rax],al
  40e85c:	int    0x1
  40e85e:	rex.RXB
  40e85f:	gs je  0x40e8a5
  40e862:	jne    0x40e8d6
  40e864:	jb     0x40e8cb
  40e866:	outs   dx,BYTE PTR ds:[rsi]
  40e867:	je     0x40e8b9
  40e869:	jb     0x40e8da
  40e86b:	movsxd esp,DWORD PTR [rbp+0x73]
  40e86e:	jae    0x40e870
  40e870:	(bad)  
  40e871:	add    DWORD PTR [rdi+0x65],eax
  40e874:	je     0x40e8b9
  40e876:	jne    0x40e8ea
  40e878:	jb     0x40e8df
  40e87a:	outs   dx,BYTE PTR ds:[rsi]
  40e87b:	je     0x40e8cd
  40e87d:	jb     0x40e8ee
  40e87f:	movsxd esp,DWORD PTR [rbp+0x73]
  40e882:	jae    0x40e8cd
  40e884:	fs add dl,dl
  40e887:	add    DWORD PTR [rdi+0x65],eax
  40e88a:	je     0x40e8cf
  40e88c:	jne    0x40e900
  40e88e:	jb     0x40e8f5
  40e890:	outs   dx,BYTE PTR ds:[rsi]
  40e891:	je     0x40e8e7
  40e893:	push   0x64616572
  40e898:	rex.WB
  40e899:	add    BYTE PTR fs:[rax],al
  40e89c:	adc    BYTE PTR [rdx],al
  40e89e:	rex.RXB
  40e89f:	gs je  0x40e8ee
  40e8a2:	(bad)  
  40e8a3:	jae    0x40e919
  40e8a5:	rex.RB jb 0x40e91a
  40e8a8:	outs   dx,DWORD PTR ds:[rsi]
  40e8a9:	jb     0x40e8ab
  40e8ab:	add    BYTE PTR [rbx+0x2],dh
  40e8ae:	rex.RXB
  40e8af:	gs je  0x40e905
  40e8b2:	je     0x40e915
  40e8b4:	jb     0x40e92a
  40e8b6:	jne    0x40e928
  40e8b8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40e8ba:	outs   dx,WORD PTR ds:[rsi]
  40e8bc:	add    BYTE PTR [r10+0x74654702],cl
  40e8c3:	push   rbx
  40e8c4:	jns    0x40e939
  40e8c6:	je     0x40e92d
  40e8c8:	ins    DWORD PTR es:[rdi],dx
  40e8c9:	push   rsp
  40e8ca:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40e8d1:	ins    BYTE PTR es:[rdi],dx
  40e8d2:	gs push rsp
  40e8d4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  40e8db:	gs je  0x40e932
  40e8de:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40e8e5:	je     0x40e8e7
  40e8e7:	add    cl,bh
  40e8e9:	add    cl,BYTE PTR [rcx+0x6e]
  40e8ec:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40e8f4:	rex.XB jb 0x40e960
  40e8f7:	je     0x40e962
  40e8f9:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e8fc:	push   rbx
  40e8fd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e902:	outs   dx,BYTE PTR ds:[rsi]
  40e903:	add    BYTE PTR [rbx+0x3],cl
  40e906:	rex.WR
  40e907:	gs (bad) 
  40e909:	jbe    0x40e970
  40e90b:	rex.XB jb 0x40e977
  40e90e:	je     0x40e979
  40e910:	movsxd esp,DWORD PTR [rcx+0x6c]
  40e913:	push   rbx
  40e914:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40e919:	outs   dx,BYTE PTR ds:[rsi]
  40e91a:	add    BYTE PTR [rax],al
  40e91c:	mov    ebx,0x65755103
  40e921:	jb     0x40e99c
  40e923:	push   rax
  40e924:	gs jb  0x40e98d
  40e927:	outs   dx,DWORD PTR ds:[rsi]
  40e928:	jb     0x40e997
  40e92a:	(bad)  
  40e92b:	outs   dx,BYTE PTR ds:[rsi]
  40e92c:	movsxd esp,DWORD PTR [rbp+0x43]
  40e92f:	outs   dx,DWORD PTR ds:[rsi]
  40e930:	jne    0x40e9a0
  40e932:	je     0x40e999
  40e934:	jb     0x40e936
  40e936:	add    DWORD PTR [rdx+rdx*2],eax
  40e939:	je     0x40e9a7
  40e93b:	rex.B
  40e93c:	fs fs rex.RX jne 0x40e9af
  40e941:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e945:	outs   dx,BYTE PTR ds:[rsi]
  40e946:	push   rsp
  40e947:	(bad)  
  40e948:	(bad)  
  40e949:	ins    BYTE PTR es:[rdi],dx
  40e94a:	add    BYTE PTR gs:[rdx],al
  40e94d:	add    al,0x52
  40e94f:	je     0x40e9bd
  40e951:	rex.XB (bad) 
  40e953:	jo     0x40e9c9
  40e955:	jne    0x40e9c9
  40e957:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40e95a:	outs   dx,BYTE PTR ds:[rsi]
  40e95b:	je     0x40e9c2
  40e95d:	js     0x40e9d3
  40e95f:	add    BYTE PTR [rcx],cl
  40e961:	add    al,0x52
  40e963:	je     0x40e9d1
  40e965:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40e967:	outs   dx,DWORD PTR ds:[rsi]
  40e968:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40e96c:	jne    0x40e9dc
  40e96e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40e972:	outs   dx,BYTE PTR ds:[rsi]
  40e973:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40e975:	je     0x40e9e9
  40e977:	jns    0x40e979
  40e979:	add    BYTE PTR [rax],dl
  40e97b:	add    al,0x52
  40e97d:	je     0x40e9eb
  40e97f:	push   rsi
  40e980:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40e987:	outs   dx,BYTE PTR ds:[rsi]
  40e988:	ja     0x40e9f3
  40e98a:	outs   dx,BYTE PTR ds:[rsi]
  40e98b:	add    BYTE PTR fs:[rax],al
  40e98e:	lahf   
  40e98f:	add    al,0x53
  40e991:	gs je  0x40e9e9
  40e994:	outs   dx,BYTE PTR ds:[rsi]
  40e995:	push   0x6c646e61
  40e99a:	gs fs rex.RB js 0x40ea02
  40e99f:	gs jo  0x40ea16
  40e9a2:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e9a9:	gs jb  0x40e9ac
  40e9ac:	lods   al,BYTE PTR ds:[rsi]
  40e9ad:	add    al,0x53
  40e9af:	ins    BYTE PTR es:[rdi],dx
  40e9b0:	gs gs jo 0x40e9b4
  40e9b4:	mov    edx,0x72655404
  40e9b9:	ins    DWORD PTR es:[rdi],dx
  40e9ba:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40e9c1:	outs   dx,DWORD PTR ds:[rsi]
  40e9c2:	movsxd esp,DWORD PTR [rbp+0x73]
  40e9c5:	jae    0x40e9c7
  40e9c7:	add    cl,al
  40e9c9:	add    al,0x54
  40e9cb:	ins    BYTE PTR es:[rdi],dx
  40e9cc:	jae    0x40ea15
  40e9ce:	gs je  0x40ea27
  40e9d1:	(bad)  
  40e9d2:	ins    BYTE PTR es:[rdi],dx
  40e9d3:	jne    0x40ea3a
  40e9d5:	add    dh,cl
  40e9d7:	add    al,0x55
  40e9d9:	outs   dx,BYTE PTR ds:[rsi]
  40e9da:	push   0x6c646e61
  40e9df:	gs fs rex.RB js 0x40ea47
  40e9e4:	gs jo  0x40ea5b
  40e9e7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40e9ee:	gs jb  0x40e9f1
  40e9f1:	add    ah,ch
  40e9f3:	add    al,0x56
  40e9f5:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  40e9fc:	jb     0x40ea6d
  40e9fe:	je     0x40ea65
  40ea00:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40ea04:	out    dx,al
  40ea05:	add    al,0x56
  40ea07:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40ea0e:	jne    0x40ea75
  40ea10:	jb     0x40ea8b
  40ea12:	add    BYTE PTR [rax],al
  40ea14:	(bad)  
  40ea15:	add    BYTE PTR [rdi+0x5f],bl
  40ea18:	rex.XB pop r15
  40ea1a:	jae    0x40ea8c
  40ea1c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40ea20:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40ea27:	ins    BYTE PTR es:[rdi],dx
  40ea28:	gs jb  0x40ea2b
  40ea2b:	add    BYTE PTR [rsi+0x0],cl
  40ea2e:	pop    rdi
  40ea2f:	pop    rdi
  40ea30:	fs ins BYTE PTR es:[rdi],dx
  40ea32:	ins    BYTE PTR es:[rdi],dx
  40ea33:	outs   dx,DWORD PTR ds:[rsi]
  40ea34:	outs   dx,BYTE PTR ds:[rsi]
  40ea35:	gs js  0x40eaa1
  40ea38:	je     0x40ea3a
  40ea3a:	push   rcx
  40ea3b:	add    BYTE PTR [rdi+0x5f],bl
  40ea3e:	addr32 gs je 0x40eaaf
  40ea42:	(bad)  
  40ea43:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40ea4a:	push   rdx
  40ea4b:	add    BYTE PTR [rdi+0x5f],bl
  40ea4e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40ea55:	add    BYTE PTR [rbx+0x0],dl
  40ea58:	pop    rdi
  40ea59:	pop    rdi
  40ea5a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40ea61:	movsxd eax,DWORD PTR [rax]
  40ea63:	add    BYTE PTR [rdx+0x0],bl
  40ea66:	pop    rdi
  40ea67:	pop    rdi
  40ea68:	ins    BYTE PTR es:[rdi],dx
  40ea69:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40ea6c:	jbe    0x40eacd
  40ea6e:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40ea75:	add    BYTE PTR [rdi+0x5f],bl
  40ea78:	jae    0x40eadf
  40ea7a:	je     0x40eadb
  40ea7c:	(bad)  
  40ea7d:	jo     0x40eaef
  40ea7f:	pop    rdi
  40ea80:	je     0x40eafb
  40ea82:	jo     0x40eae9
  40ea84:	add    BYTE PTR [rax],al
  40ea86:	(bad)  
  40ea87:	add    BYTE PTR [rdi+0x5f],bl
  40ea8a:	jae    0x40eaf1
  40ea8c:	je     0x40eb03
  40ea8e:	jae    0x40eaf5
  40ea90:	jb     0x40eaff
  40ea92:	(bad)  
  40ea93:	je     0x40eafd
  40ea95:	gs jb  0x40eb0a
  40ea98:	add    BYTE PTR [rax],al
  40ea9a:	jno    0x40ea9c
  40ea9c:	pop    rdi
  40ea9d:	(bad)  
  40ea9e:	movsxd ebp,DWORD PTR [rbp+0x64]
  40eaa1:	ins    BYTE PTR es:[rdi],dx
  40eaa2:	outs   dx,BYTE PTR ds:[rsi]
  40eaa3:	add    BYTE PTR [rax+0x0],bh
  40eaa6:	pop    rdi
  40eaa7:	(bad)  
  40eaa8:	ins    DWORD PTR es:[rdi],dx
  40eaa9:	jae    0x40eb12
  40eaab:	pop    rdi
  40eaac:	gs js  0x40eb18
  40eaaf:	je     0x40eab1
  40eab1:	add    BYTE PTR [rdx+0x65635f00],cl
  40eab7:	js     0x40eb22
  40eab9:	je     0x40eabb
  40eabb:	add    BYTE PTR [rdx+0x72655f00],bh
  40eac1:	jb     0x40eb31
  40eac3:	outs   dx,DWORD PTR ds:[rsi]
  40eac4:	add    BYTE PTR [rax],al
  40eac6:	fiadd  DWORD PTR [rax]
  40eac8:	pop    rdi
  40eac9:	ins    WORD PTR es:[rdi],dx
  40eacb:	outs   dx,DWORD PTR ds:[rsi]
  40eacc:	fs add BYTE PTR gs:[rax],al
  40ead0:	sbb    al,BYTE PTR [rcx]
  40ead2:	pop    rdi
  40ead3:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40eada:	ins    DWORD PTR es:[rdi],dx
  40eadb:	add    BYTE PTR [rax+0x6f6c5f01],al
  40eae1:	movsxd ebp,DWORD PTR [rbx+0x0]
  40eae4:	and    eax,0x6e6f5f02
  40eae9:	gs js  0x40eb55
  40eaec:	je     0x40eaee
  40eaee:	(bad)
  40eaf2:	outs   dx,BYTE PTR ds:[rsi]
  40eaf3:	ins    BYTE PTR es:[rdi],dx
  40eaf4:	outs   dx,DWORD PTR ds:[rsi]
  40eaf5:	movsxd ebp,DWORD PTR [rbx+0x0]
  40eaf8:	jg     0x40eafd
  40eafa:	(bad)  
  40eafb:	(bad)  
  40eafc:	outs   dx,DWORD PTR ds:[rsi]
  40eafd:	jb     0x40eb73
  40eaff:	add    BYTE PTR [rax+0x6c616303],dl
  40eb05:	ins    BYTE PTR es:[rdi],dx
  40eb06:	outs   dx,DWORD PTR ds:[rsi]
  40eb07:	movsxd eax,DWORD PTR [rax]
  40eb09:	add    BYTE PTR [rbp+0x69786503],bl
  40eb0f:	je     0x40eb11
  40eb11:	add    BYTE PTR [rax+0x72706603],dh
  40eb17:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  40eb1e:	data16 jo 0x40eb96
  40eb21:	je     0x40eb86
  40eb23:	add    BYTE PTR [rdi+0x65726603],dh
  40eb29:	add    BYTE PTR gs:[rax],al
  40eb2c:	ret    0x6603
  40eb2f:	ja     0x40eba3
  40eb31:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40eb39:	(bad)  
  40eb3a:	ins    BYTE PTR es:[rdi],dx
  40eb3b:	ins    BYTE PTR es:[rdi],dx
  40eb3c:	outs   dx,DWORD PTR ds:[rsi]
  40eb3d:	movsxd eax,DWORD PTR [rax]
  40eb3f:	add    al,bh
  40eb41:	add    ebp,DWORD PTR [rbp+0x65]
  40eb44:	ins    DWORD PTR es:[rdi],dx
  40eb45:	movsxd esi,DWORD PTR [rax+0x79]
  40eb48:	add    BYTE PTR [rax],al
  40eb4a:	cli    
  40eb4b:	add    ebp,DWORD PTR [rbp+0x65]
  40eb4e:	ins    DWORD PTR es:[rdi],dx
  40eb4f:	jae    0x40ebb6
  40eb51:	je     0x40eb53
  40eb53:	add    BYTE PTR [rsi],dl
  40eb55:	add    al,0x73
  40eb57:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40eb5e:	and    al,0x4
  40eb60:	jae    0x40ebd6
  40eb62:	jb     0x40ebc7
  40eb64:	ins    DWORD PTR es:[rdi],dx
  40eb65:	jo     0x40eb67
  40eb67:	add    BYTE PTR [rbx],ch
  40eb69:	add    al,0x73
  40eb6b:	je     0x40ebdf
  40eb6d:	ins    BYTE PTR es:[rdi],dx
  40eb6e:	outs   dx,BYTE PTR gs:[rsi]
  40eb70:	add    BYTE PTR [rax],al
  40eb72:	cs add al,0x73
  40eb75:	je     0x40ebe9
  40eb77:	outs   dx,BYTE PTR ds:[rsi]
  40eb78:	movsxd ebp,DWORD PTR [rbp+0x70]
  40eb7b:	add    BYTE PTR [rsi+0x4],cl
  40eb7e:	jbe    0x40ebe6
  40eb80:	jo     0x40ebf4
  40eb82:	imul   ebp,DWORD PTR [rsi+0x74],0xf9000066
  40eb89:	add    al,0x5f
  40eb8b:	fs jne 0x40ebfe
  40eb8e:	add    BYTE PTR [rax],al
  40eb90:	cld    
  40eb91:	add    al,0x5f
  40eb93:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  40eb97:	add    BYTE PTR gs:[rax],al
  40eb9a:	add    BYTE PTR [rax],al
  40eb9c:	add    al,ah
  40eb9e:	add    BYTE PTR [rax],al
  40eba0:	add    al,ah
  40eba2:	add    BYTE PTR [rax],al
  40eba4:	add    al,ah
  40eba6:	add    BYTE PTR [rax],al
  40eba8:	add    al,ah
  40ebaa:	add    BYTE PTR [rax],al
  40ebac:	add    al,ah
  40ebae:	add    BYTE PTR [rax],al
  40ebb0:	add    al,ah
  40ebb2:	add    BYTE PTR [rax],al
  40ebb4:	add    al,ah
  40ebb6:	add    BYTE PTR [rax],al
  40ebb8:	add    al,ah
  40ebba:	add    BYTE PTR [rax],al
  40ebbc:	add    al,ah
  40ebbe:	add    BYTE PTR [rax],al
  40ebc0:	add    al,ah
  40ebc2:	add    BYTE PTR [rax],al
  40ebc4:	add    al,ah
  40ebc6:	add    BYTE PTR [rax],al
  40ebc8:	add    al,ah
  40ebca:	add    BYTE PTR [rax],al
  40ebcc:	add    al,ah
  40ebce:	add    BYTE PTR [rax],al
  40ebd0:	add    al,ah
  40ebd2:	add    BYTE PTR [rax],al
  40ebd4:	add    al,ah
  40ebd6:	add    BYTE PTR [rax],al
  40ebd8:	add    al,ah
  40ebda:	add    BYTE PTR [rax],al
  40ebdc:	add    al,ah
  40ebde:	add    BYTE PTR [rax],al
  40ebe0:	add    al,ah
  40ebe2:	add    BYTE PTR [rax],al
  40ebe4:	add    al,ah
  40ebe6:	add    BYTE PTR [rax],al
  40ebe8:	add    al,ah
  40ebea:	add    BYTE PTR [rax],al
  40ebec:	add    al,ah
  40ebee:	add    BYTE PTR [rax],al
  40ebf0:	add    al,ah
  40ebf2:	add    BYTE PTR [rax],al
  40ebf4:	add    al,ah
  40ebf6:	add    BYTE PTR [rax],al
  40ebf8:	add    al,ah
  40ebfa:	add    BYTE PTR [rax],al
  40ebfc:	add    al,ah
  40ebfe:	add    BYTE PTR [rax],al
  40ec00:	add    al,ah
  40ec02:	add    BYTE PTR [rax],al
  40ec04:	add    al,ah
  40ec06:	add    BYTE PTR [rax],al
  40ec08:	add    al,ah
  40ec0a:	add    BYTE PTR [rax],al
  40ec0c:	add    al,ah
  40ec0e:	add    BYTE PTR [rax],al
  40ec10:	add    al,ah
  40ec12:	add    BYTE PTR [rax],al
  40ec14:	ins    BYTE PTR es:[rdi],dx
  40ec15:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  40ec1c:	xor    ch,BYTE PTR [rsi]
  40ec1e:	xor    BYTE PTR [rip+0x6c642e30],ch        # 0x6ca51a54
  40ec24:	ins    BYTE PTR es:[rdi],dx
  40ec25:	add    BYTE PTR [rax],al
  40ec27:	add    BYTE PTR [rax+riz*8],dl
  40ec2a:	add    BYTE PTR [rax],al
  40ec2c:	adc    al,0xe0
  40ec2e:	add    BYTE PTR [rax],al
  40ec30:	adc    al,0xe0
  40ec32:	add    BYTE PTR [rax],al
  40ec34:	adc    al,0xe0
  40ec36:	add    BYTE PTR [rax],al
  40ec38:	adc    al,0xe0
  40ec3a:	add    BYTE PTR [rax],al
  40ec3c:	adc    al,0xe0
  40ec3e:	add    BYTE PTR [rax],al
  40ec40:	adc    al,0xe0
  40ec42:	add    BYTE PTR [rax],al
  40ec44:	adc    al,0xe0
  40ec46:	add    BYTE PTR [rax],al
  40ec48:	adc    al,0xe0
  40ec4a:	add    BYTE PTR [rax],al
  40ec4c:	adc    al,0xe0
  40ec4e:	add    BYTE PTR [rax],al
  40ec50:	adc    al,0xe0
  40ec52:	add    BYTE PTR [rax],al
  40ec54:	adc    al,0xe0
  40ec56:	add    BYTE PTR [rax],al
  40ec58:	adc    al,0xe0
  40ec5a:	add    BYTE PTR [rax],al
  40ec5c:	adc    al,0xe0
  40ec5e:	add    BYTE PTR [rax],al
  40ec60:	adc    al,0xe0
  40ec62:	add    BYTE PTR [rax],al
  40ec64:	adc    al,0xe0
  40ec66:	add    BYTE PTR [rax],al
  40ec68:	adc    al,0xe0
  40ec6a:	add    BYTE PTR [rax],al
  40ec6c:	adc    al,0xe0
  40ec6e:	add    BYTE PTR [rax],al
  40ec70:	adc    al,0xe0
  40ec72:	add    BYTE PTR [rax],al
  40ec74:	adc    al,0xe0
  40ec76:	add    BYTE PTR [rax],al
  40ec78:	adc    al,0xe0
  40ec7a:	add    BYTE PTR [rax],al
  40ec7c:	adc    al,0xe0
  40ec7e:	add    BYTE PTR [rax],al
  40ec80:	adc    al,0xe0
  40ec82:	add    BYTE PTR [rax],al
  40ec84:	rex.WXB
  40ec85:	rex.RB push r10
  40ec87:	rex.WRX
  40ec88:	rex.RB
  40ec89:	xor    r14,QWORD PTR [rdx]
  40ec8c:	cs fs ins BYTE PTR es:[rdi],dx
  40ec8f:	ins    BYTE PTR es:[rdi],dx
  40ec90:	add    BYTE PTR [rax],al
  40ec92:	add    BYTE PTR [rax],al
  40ec94:	sub    al,ah
  40ec96:	add    BYTE PTR [rax],al
  40ec98:	sub    al,ah
  40ec9a:	add    BYTE PTR [rax],al
  40ec9c:	sub    al,ah
  40ec9e:	add    BYTE PTR [rax],al
  40eca0:	sub    al,ah
  40eca2:	add    BYTE PTR [rax],al
  40eca4:	sub    al,ah
  40eca6:	add    BYTE PTR [rax],al
  40eca8:	sub    al,ah
  40ecaa:	add    BYTE PTR [rax],al
  40ecac:	sub    al,ah
  40ecae:	add    BYTE PTR [rax],al
  40ecb0:	sub    al,ah
  40ecb2:	add    BYTE PTR [rax],al
  40ecb4:	sub    al,ah
  40ecb6:	add    BYTE PTR [rax],al
  40ecb8:	sub    al,ah
  40ecba:	add    BYTE PTR [rax],al
  40ecbc:	sub    al,ah
  40ecbe:	add    BYTE PTR [rax],al
  40ecc0:	sub    al,ah
  40ecc2:	add    BYTE PTR [rax],al
  40ecc4:	sub    al,ah
  40ecc6:	add    BYTE PTR [rax],al
  40ecc8:	sub    al,ah
  40ecca:	add    BYTE PTR [rax],al
  40eccc:	sub    al,ah
  40ecce:	add    BYTE PTR [rax],al
  40ecd0:	sub    al,ah
  40ecd2:	add    BYTE PTR [rax],al
  40ecd4:	sub    al,ah
  40ecd6:	add    BYTE PTR [rax],al
  40ecd8:	sub    al,ah
  40ecda:	add    BYTE PTR [rax],al
  40ecdc:	sub    al,ah
  40ecde:	add    BYTE PTR [rax],al
  40ece0:	sub    al,ah
  40ece2:	add    BYTE PTR [rax],al
  40ece4:	sub    al,ah
  40ece6:	add    BYTE PTR [rax],al
  40ece8:	sub    al,ah
  40ecea:	add    BYTE PTR [rax],al
  40ecec:	sub    al,ah
  40ecee:	add    BYTE PTR [rax],al
  40ecf0:	sub    al,ah
  40ecf2:	add    BYTE PTR [rax],al
  40ecf4:	sub    al,ah
  40ecf6:	add    BYTE PTR [rax],al
  40ecf8:	sub    al,ah
  40ecfa:	add    BYTE PTR [rax],al
  40ecfc:	sub    al,ah
  40ecfe:	add    BYTE PTR [rax],al
  40ed00:	sub    al,ah
  40ed02:	add    BYTE PTR [rax],al
  40ed04:	sub    al,ah
  40ed06:	add    BYTE PTR [rax],al
  40ed08:	sub    al,ah
  40ed0a:	add    BYTE PTR [rax],al
  40ed0c:	sub    al,ah
  40ed0e:	add    BYTE PTR [rax],al
  40ed10:	sub    al,ah
  40ed12:	add    BYTE PTR [rax],al
  40ed14:	sub    al,ah
  40ed16:	add    BYTE PTR [rax],al
  40ed18:	sub    al,ah
  40ed1a:	add    BYTE PTR [rax],al
  40ed1c:	ins    DWORD PTR es:[rdi],dx
  40ed1d:	jae    0x40ed95
  40ed1f:	movsxd esi,DWORD PTR [rdx+0x74]
  40ed22:	cs fs ins BYTE PTR es:[rdi],dx
  40ed25:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040f000 <.CRT>:
	...
  40f008:	(bad)  
  40f009:	adc    DWORD PTR [rax+0x0],eax
	...
  40f020:	adc    BYTE PTR [rax],dl
  40f022:	add    BYTE PTR [rax],al
  40f025:	add    BYTE PTR [rax],al
  40f027:	add    BYTE PTR [rax+0x19],dl
  40f02a:	add    BYTE PTR [rax],al
	...
  40f03d:	add    BYTE PTR [rax],al
  40f03f:	add    BYTE PTR [rax+0x401b],al
  40f045:	add    BYTE PTR [rax],al
  40f047:	add    BYTE PTR [rax+0x1b],dl
  40f04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000410000 <.tls>:
	...
  410020:	add    BYTE PTR [rax],al
  410022:	add    BYTE PTR [r8],al
  410025:	add    BYTE PTR [rax],al
  410027:	add    BYTE PTR [rax+0x0],ah
  41002a:	add    BYTE PTR [r8],al
  41002d:	add    BYTE PTR [rax],al
  41002f:	add    BYTE PTR [rsi+rdx*8+0x40],bl
  410036:	add    BYTE PTR [rax],al
  410038:	rex
  410039:	lock add BYTE PTR [rax],al
	...
