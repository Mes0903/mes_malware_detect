
c5b5a6b85efec5d87ae6981fb560775d97a4e0ded0cbeb4dffb41312975caa72.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x33e9]        # 0x1400043f0
   140001007:	jmp    0x1400032c8
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x33f9]        # 0x140004410
   140001017:	jmp    0x1400032c8
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x3409]        # 0x140004430
   140001027:	jmp    0x1400032c8
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	int3   
   140001031:	int3   
   140001032:	int3   
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	mov    QWORD PTR [rsp+0x8],rbx
   140001045:	push   rdi
   140001046:	sub    rsp,0x20
   14000104a:	mov    r10,QWORD PTR [rsp+0x60]
   14000104f:	xor    edi,edi
   140001051:	test   r10,r10
   140001054:	je     0x14000114a
   14000105a:	test   edx,edx
   14000105c:	je     0x140001107
   140001062:	sub    edx,0x1
   140001065:	jne    0x14000114a
   14000106b:	mov    r11d,edi
   14000106e:	mov    rax,QWORD PTR [rsp+0x50]
   140001073:	mov    QWORD PTR [r10+0x10],r9
   140001077:	lea    r9d,[rdi+0x1]
   14000107b:	mov    DWORD PTR [r10+0x24],r9d
   14000107f:	mov    BYTE PTR [r10+0x28],r8b
   140001083:	mov    QWORD PTR [r10+0x18],rax
   140001087:	cmp    di,WORD PTR [r10+0x2a]
   14000108c:	jae    0x14000114a
   140001092:	mov    rax,QWORD PTR [r10+0x38]
   140001096:	mov    dl,BYTE PTR [r10+0x28]
   14000109a:	mov    ebx,r11d
   14000109d:	mov    rcx,QWORD PTR [rax+rbx*8]
   1400010a1:	mov    rax,QWORD PTR [r10+0x40]
   1400010a5:	cmp    BYTE PTR [rbx+rax*1],dl
   1400010a8:	jbe    0x1400010ae
   1400010aa:	test   dl,dl
   1400010ac:	jne    0x1400010c6
   1400010ae:	test   rcx,rcx
   1400010b1:	je     0x1400010e1
   1400010b3:	test   QWORD PTR [r10+0x10],rcx
   1400010b7:	je     0x1400010c6
   1400010b9:	mov    rax,QWORD PTR [r10+0x18]
   1400010bd:	and    rax,rcx
   1400010c0:	cmp    rax,QWORD PTR [r10+0x18]
   1400010c4:	je     0x1400010e1
   1400010c6:	mov    r8,QWORD PTR [r10+0x30]
   1400010ca:	mov    ecx,r11d
   1400010cd:	and    ecx,0x1f
   1400010d0:	shr    rbx,0x5
   1400010d4:	mov    edx,r9d
   1400010d7:	shl    edx,cl
   1400010d9:	not    edx
   1400010db:	and    DWORD PTR [r8+rbx*4],edx
   1400010df:	jmp    0x1400010f8
   1400010e1:	mov    r8,QWORD PTR [r10+0x30]
   1400010e5:	mov    ecx,r11d
   1400010e8:	and    ecx,0x1f
   1400010eb:	shr    rbx,0x5
   1400010ef:	mov    edx,r9d
   1400010f2:	shl    edx,cl
   1400010f4:	or     DWORD PTR [r8+rbx*4],edx
   1400010f8:	movzx  eax,WORD PTR [r10+0x2a]
   1400010fd:	add    r11d,r9d
   140001100:	cmp    r11d,eax
   140001103:	jb     0x140001092
   140001105:	jmp    0x14000114a
   140001107:	mov    DWORD PTR [r10+0x24],edi
   14000110b:	mov    BYTE PTR [r10+0x28],dil
   14000110f:	mov    QWORD PTR [r10+0x10],rdi
   140001113:	mov    QWORD PTR [r10+0x18],rdi
   140001117:	cmp    WORD PTR [r10+0x2a],di
   14000111c:	jbe    0x14000114a
   14000111e:	movzx  eax,WORD PTR [r10+0x2a]
   140001123:	mov    r9d,0x1
   140001129:	mov    rcx,QWORD PTR [r10+0x30]
   14000112d:	sub    eax,r9d
   140001130:	cdq    
   140001131:	and    edx,0x1f
   140001134:	add    eax,edx
   140001136:	xor    edx,edx
   140001138:	sar    eax,0x5
   14000113b:	add    eax,r9d
   14000113e:	movsxd r8,eax
   140001141:	shl    r8,0x2
   140001145:	call   0x140004226
   14000114a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000114f:	add    rsp,0x20
   140001153:	pop    rdi
   140001154:	ret    
   140001155:	int3   
   140001156:	int3   
   140001157:	int3   
   140001158:	int3   
   140001159:	int3   
   14000115a:	int3   
   14000115b:	int3   
   14000115c:	cmp    QWORD PTR [rip+0x8624],0x0        # 0x140009788
   140001164:	je     0x140001169
   140001166:	xor    eax,eax
   140001168:	ret    
   140001169:	lea    r9,[rip+0x8618]        # 0x140009788
   140001170:	lea    r8,[rip+0x7ec9]        # 0x140009040
   140001177:	lea    rdx,[rip+0xfffffffffffffec2]        # 0x140001040
   14000117e:	lea    rcx,[rip+0x59d3]        # 0x140006b58
   140001185:	rex.W jmp QWORD PTR [rip+0x410c]        # 0x140005298
   14000118c:	int3   
   14000118d:	int3   
   14000118e:	int3   
   14000118f:	int3   
   140001190:	int3   
   140001191:	int3   
   140001192:	int3   
   140001193:	int3   
   140001194:	sub    rsp,0x28
   140001198:	mov    rcx,QWORD PTR [rip+0x85e9]        # 0x140009788
   14000119f:	test   rcx,rcx
   1400011a2:	jne    0x1400011a8
   1400011a4:	xor    eax,eax
   1400011a6:	jmp    0x1400011b6
   1400011a8:	call   QWORD PTR [rip+0x40e2]        # 0x140005290
   1400011ae:	and    QWORD PTR [rip+0x85d2],0x0        # 0x140009788
   1400011b6:	add    rsp,0x28
   1400011ba:	ret    
   1400011bb:	int3   
   1400011bc:	int3   
   1400011bd:	int3   
   1400011be:	int3   
   1400011bf:	int3   
   1400011c0:	int3   
   1400011c1:	int3   
   1400011c2:	int3   
   1400011c3:	int3   
   1400011c4:	mov    rax,rsp
   1400011c7:	mov    QWORD PTR [rax+0x8],rbx
   1400011cb:	mov    QWORD PTR [rax+0x10],rsi
   1400011cf:	mov    QWORD PTR [rax+0x20],rdi
   1400011d3:	push   rbp
   1400011d4:	lea    rbp,[rax-0x168]
   1400011db:	sub    rsp,0x260
   1400011e2:	mov    rax,QWORD PTR [rip+0x7e1f]        # 0x140009008
   1400011e9:	xor    rax,rsp
   1400011ec:	mov    QWORD PTR [rbp+0x150],rax
   1400011f3:	mov    rbx,r8
   1400011f6:	lea    rcx,[rsp+0x42]
   1400011fb:	xor    edi,edi
   1400011fd:	mov    r8d,0x206
   140001203:	xor    edx,edx
   140001205:	mov    WORD PTR [rsp+0x40],di
   14000120a:	call   0x140004226
   14000120f:	lea    rdx,[rip+0x59aa]        # 0x140006bc0
   140001216:	mov    DWORD PTR [rsp+0x30],edi
   14000121a:	mov    QWORD PTR [rsp+0x38],rdi
   14000121f:	mov    DWORD PTR [rsp+0x34],0x208
   140001227:	test   rdx,rdx
   14000122a:	je     0x14000123d
   14000122c:	lea    rsi,[rip+0x5905]        # 0x140006b38
   140001233:	test   rsi,rsi
   140001236:	je     0x14000123d
   140001238:	test   rbx,rbx
   14000123b:	jne    0x140001247
   14000123d:	mov    ebx,0x80004003
   140001242:	jmp    0x1400012f1
   140001247:	lea    rax,[rsp+0x38]
   14000124c:	mov    QWORD PTR [rbx],rdi
   14000124f:	mov    r9d,0x20019
   140001255:	mov    QWORD PTR [rsp+0x20],rax
   14000125a:	xor    r8d,r8d
   14000125d:	mov    rcx,0xffffffff80000002
   140001264:	call   QWORD PTR [rip+0x3f9e]        # 0x140005208
   14000126a:	test   eax,eax
   14000126c:	jne    0x14000129c
   14000126e:	mov    rcx,QWORD PTR [rsp+0x38]
   140001273:	lea    rax,[rsp+0x34]
   140001278:	mov    QWORD PTR [rsp+0x28],rax
   14000127d:	lea    r9,[rsp+0x30]
   140001282:	lea    rax,[rsp+0x40]
   140001287:	xor    r8d,r8d
   14000128a:	mov    rdx,rsi
   14000128d:	mov    QWORD PTR [rsp+0x20],rax
   140001292:	call   QWORD PTR [rip+0x3f78]        # 0x140005210
   140001298:	test   eax,eax
   14000129a:	je     0x1400012ac
   14000129c:	movzx  ebx,ax
   14000129f:	or     ebx,0x80070000
   1400012a5:	test   eax,eax
   1400012a7:	cmovle ebx,eax
   1400012aa:	jmp    0x1400012f1
   1400012ac:	cmp    DWORD PTR [rsp+0x30],0x1
   1400012b1:	je     0x1400012b7
   1400012b3:	mov    ebx,edi
   1400012b5:	jmp    0x1400012f1
   1400012b7:	mov    edx,0x7fffffff
   1400012bc:	lea    rcx,[rsp+0x40]
   1400012c1:	mov    eax,edx
   1400012c3:	cmp    WORD PTR [rcx],di
   1400012c6:	je     0x1400012d2
   1400012c8:	add    rcx,0x2
   1400012cc:	sub    rax,0x1
   1400012d0:	jne    0x1400012c3
   1400012d2:	test   rax,rax
   1400012d5:	je     0x1400012ec
   1400012d7:	sub    rdx,rax
   1400012da:	lea    rcx,[rsp+0x40]
   1400012df:	mov    r8,rbx
   1400012e2:	call   QWORD PTR [rip+0x3d40]        # 0x140005028
   1400012e8:	mov    ebx,eax
   1400012ea:	jmp    0x1400012f1
   1400012ec:	mov    ebx,0x80070057
   1400012f1:	mov    rcx,QWORD PTR [rsp+0x38]
   1400012f6:	call   QWORD PTR [rip+0x3f04]        # 0x140005200
   1400012fc:	mov    eax,ebx
   1400012fe:	mov    rcx,QWORD PTR [rbp+0x150]
   140001305:	xor    rcx,rsp
   140001308:	call   0x140002ed0
   14000130d:	lea    r11,[rsp+0x260]
   140001315:	mov    rbx,QWORD PTR [r11+0x10]
   140001319:	mov    rsi,QWORD PTR [r11+0x18]
   14000131d:	mov    rdi,QWORD PTR [r11+0x28]
   140001321:	mov    rsp,r11
   140001324:	pop    rbp
   140001325:	ret    
   140001326:	int3   
   140001327:	int3   
   140001328:	int3   
   140001329:	int3   
   14000132a:	int3   
   14000132b:	int3   
   14000132c:	mov    QWORD PTR [rsp+0x10],rbx
   140001331:	mov    QWORD PTR [rsp+0x18],rsi
   140001336:	push   rbp
   140001337:	push   rdi
   140001338:	push   r14
   14000133a:	mov    rbp,rsp
   14000133d:	sub    rsp,0x30
   140001341:	xor    esi,esi
   140001343:	mov    QWORD PTR [rip+0x844e],rcx        # 0x140009798
   14000134a:	and    QWORD PTR [rbp+0x20],rsi
   14000134e:	lea    rcx,[rip+0x57c3]        # 0x140006b18
   140001355:	xor    ebx,ebx
   140001357:	xor    edx,edx
   140001359:	and    QWORD PTR [rbp-0x10],rbx
   14000135d:	lea    r8d,[rsi+0x2]
   140001361:	call   QWORD PTR [rip+0x3df9]        # 0x140005160
   140001367:	mov    QWORD PTR [rip+0x8422],rax        # 0x140009790
   14000136e:	call   0x14000115c
   140001373:	lea    r9,[rbp+0x20]
   140001377:	lea    r8,[rbp-0x10]
   14000137b:	lea    rdx,[rip+0x58f6]        # 0x140006c78
   140001382:	lea    rcx,[rip+0x58af]        # 0x140006c38
   140001389:	call   QWORD PTR [rip+0x3cd1]        # 0x140005060
   14000138f:	test   eax,eax
   140001391:	js     0x14000141c
   140001397:	mov    r8,QWORD PTR [rbp-0x10]
   14000139b:	xor    edx,edx
   14000139d:	mov    ecx,0x100000
   1400013a2:	call   QWORD PTR [rip+0x3eb8]        # 0x140005260
   1400013a8:	mov    rsi,rax
   1400013ab:	test   rax,rax
   1400013ae:	jne    0x1400013b8
   1400013b0:	call   QWORD PTR [rip+0x3d3a]        # 0x1400050f0
   1400013b6:	jmp    0x14000141c
   1400013b8:	lea    rdx,[rip+0x7dc1]        # 0x140009180
   1400013bf:	mov    ecx,0x8
   1400013c4:	call   0x140002ef4
   1400013c9:	mov    rbx,rax
   1400013cc:	test   rax,rax
   1400013cf:	je     0x14000141c
   1400013d1:	mov    rax,QWORD PTR [rip+0x83b8]        # 0x140009790
   1400013d8:	mov    r14d,0x2710
   1400013de:	mov    edx,r14d
   1400013e1:	mov    QWORD PTR [rbx],rax
   1400013e4:	mov    rcx,rsi
   1400013e7:	call   QWORD PTR [rip+0x3e6b]        # 0x140005258
   1400013ed:	test   eax,eax
   1400013ef:	jne    0x14000141c
   1400013f1:	mov    edi,0x530002
   1400013f6:	jmp    0x1400013fc
   1400013f8:	test   eax,eax
   1400013fa:	js     0x14000141c
   1400013fc:	mov    rcx,QWORD PTR [rbp+0x20]
   140001400:	mov    rdx,rbx
   140001403:	call   0x1400019b0
   140001408:	cmp    eax,edi
   14000140a:	jne    0x1400013f8
   14000140c:	mov    edx,r14d
   14000140f:	mov    rcx,rsi
   140001412:	call   QWORD PTR [rip+0x3e40]        # 0x140005258
   140001418:	test   eax,eax
   14000141a:	je     0x1400013fc
   14000141c:	mov    rcx,QWORD PTR [rbp-0x10]
   140001420:	call   QWORD PTR [rip+0x3c32]        # 0x140005058
   140001426:	cmp    QWORD PTR [rbp+0x20],0x0
   14000142b:	je     0x1400014a0
   14000142d:	xor    edi,edi
   14000142f:	lea    r8,[rbp-0x8]
   140001433:	and    QWORD PTR [rbp-0x8],rdi
   140001437:	call   0x1400011c4
   14000143c:	test   eax,eax
   14000143e:	js     0x14000147e
   140001440:	mov    rcx,QWORD PTR [rbp-0x8]
   140001444:	call   QWORD PTR [rip+0x3d36]        # 0x140005180
   14000144a:	mov    rdi,rax
   14000144d:	test   rax,rax
   140001450:	je     0x14000146a
   140001452:	lea    rdx,[rip+0x5687]        # 0x140006ae0
   140001459:	mov    rcx,rax
   14000145c:	call   QWORD PTR [rip+0x3cee]        # 0x140005150
   140001462:	mov    r14,rax
   140001465:	test   rax,rax
   140001468:	jne    0x140001472
   14000146a:	call   QWORD PTR [rip+0x3c80]        # 0x1400050f0
   140001470:	jmp    0x14000147e
   140001472:	mov    rcx,rax
   140001475:	call   QWORD PTR [rip+0x3f8d]        # 0x140005408
   14000147b:	call   r14
   14000147e:	mov    rcx,rdi
   140001481:	call   QWORD PTR [rip+0x3ce1]        # 0x140005168
   140001487:	mov    rcx,QWORD PTR [rbp-0x8]
   14000148b:	call   QWORD PTR [rip+0x3ca7]        # 0x140005138
   140001491:	mov    rcx,QWORD PTR [rbp+0x20]
   140001495:	call   QWORD PTR [rip+0x3bad]        # 0x140005048
   14000149b:	and    QWORD PTR [rbp+0x20],0x0
   1400014a0:	mov    rcx,rsi
   1400014a3:	call   QWORD PTR [rip+0x3c7f]        # 0x140005128
   1400014a9:	test   rbx,rbx
   1400014ac:	je     0x1400014b7
   1400014ae:	mov    rcx,rbx
   1400014b1:	call   QWORD PTR [rip+0x3ea1]        # 0x140005358
   1400014b7:	call   0x140001194
   1400014bc:	mov    rbx,QWORD PTR [rsp+0x58]
   1400014c1:	xor    eax,eax
   1400014c3:	mov    rsi,QWORD PTR [rsp+0x60]
   1400014c8:	add    rsp,0x30
   1400014cc:	pop    r14
   1400014ce:	pop    rdi
   1400014cf:	pop    rbp
   1400014d0:	ret    
   1400014d1:	int3   
   1400014d2:	int3   
   1400014d3:	int3   
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	mov    DWORD PTR [rsp+0x20],r9d
   1400014dd:	mov    DWORD PTR [rsp+0x18],r8d
   1400014e2:	push   rbp
   1400014e3:	mov    rbp,rsp
   1400014e6:	sub    rsp,0x80
   1400014ed:	mov    rax,QWORD PTR [rip+0x7b14]        # 0x140009008
   1400014f4:	xor    rax,rsp
   1400014f7:	mov    QWORD PTR [rbp-0x10],rax
   1400014fb:	mov    rdx,QWORD PTR [rbp+0x30]
   1400014ff:	lea    rax,[rbp+0x20]
   140001503:	xor    r11d,r11d
   140001506:	mov    QWORD PTR [rbp-0x60],rax
   14000150a:	or     rcx,0xffffffffffffffff
   14000150e:	mov    QWORD PTR [rbp-0x58],0x4
   140001516:	mov    QWORD PTR [rbp-0x48],0x4
   14000151e:	lea    rax,[rbp+0x28]
   140001522:	mov    QWORD PTR [rbp-0x50],rax
   140001526:	lea    r8d,[r11+0xa]
   14000152a:	test   rdx,rdx
   14000152d:	je     0x140001546
   14000152f:	mov    rax,rcx
   140001532:	inc    rax
   140001535:	cmp    WORD PTR [rdx+rax*2],r11w
   14000153a:	jne    0x140001532
   14000153c:	lea    r9d,[rax*2+0x2]
   140001544:	jmp    0x140001549
   140001546:	mov    r9d,r8d
   140001549:	test   rdx,rdx
   14000154c:	mov    DWORD PTR [rbp-0x38],r9d
   140001550:	lea    r10,[rip+0x5841]        # 0x140006d98
   140001557:	mov    DWORD PTR [rbp-0x34],r11d
   14000155b:	mov    rax,r10
   14000155e:	cmovne rax,rdx
   140001562:	mov    rdx,QWORD PTR [rbp+0x38]
   140001566:	mov    QWORD PTR [rbp-0x40],rax
   14000156a:	test   rdx,rdx
   14000156d:	je     0x140001586
   14000156f:	mov    rax,rcx
   140001572:	inc    rax
   140001575:	cmp    WORD PTR [rdx+rax*2],r11w
   14000157a:	jne    0x140001572
   14000157c:	lea    r9d,[rax*2+0x2]
   140001584:	jmp    0x140001589
   140001586:	mov    r9d,r8d
   140001589:	test   rdx,rdx
   14000158c:	mov    DWORD PTR [rbp-0x28],r9d
   140001590:	mov    rax,r10
   140001593:	mov    DWORD PTR [rbp-0x24],r11d
   140001597:	cmovne rax,rdx
   14000159b:	mov    QWORD PTR [rbp-0x30],rax
   14000159f:	mov    rax,QWORD PTR [rbp+0x40]
   1400015a3:	test   rax,rax
   1400015a6:	je     0x1400015bd
   1400015a8:	inc    rcx
   1400015ab:	cmp    WORD PTR [rax+rcx*2],r11w
   1400015b0:	jne    0x1400015a8
   1400015b2:	lea    r8d,[rcx*2+0x2]
   1400015ba:	test   rax,rax
   1400015bd:	mov    rcx,QWORD PTR [rip+0x81c4]        # 0x140009788
   1400015c4:	lea    r9,[rbp-0x60]
   1400015c8:	cmovne r10,rax
   1400015cc:	mov    DWORD PTR [rbp-0x18],r8d
   1400015d0:	mov    r8d,0x5
   1400015d6:	mov    QWORD PTR [rbp-0x20],r10
   1400015da:	lea    rdx,[rip+0x5637]        # 0x140006c18
   1400015e1:	mov    DWORD PTR [rbp-0x14],r11d
   1400015e5:	call   QWORD PTR [rip+0x3c9d]        # 0x140005288
   1400015eb:	mov    rcx,QWORD PTR [rbp-0x10]
   1400015ef:	xor    rcx,rsp
   1400015f2:	call   0x140002ed0
   1400015f7:	add    rsp,0x80
   1400015fe:	pop    rbp
   1400015ff:	ret    
   140001600:	int3   
   140001601:	int3   
   140001602:	int3   
   140001603:	int3   
   140001604:	int3   
   140001605:	int3   
   140001606:	int3   
   140001607:	int3   
   140001608:	mov    DWORD PTR [rsp+0x20],r9d
   14000160d:	mov    DWORD PTR [rsp+0x18],r8d
   140001612:	push   rbp
   140001613:	lea    rbp,[rsp-0x2f]
   140001618:	sub    rsp,0xa0
   14000161f:	mov    rax,QWORD PTR [rip+0x79e2]        # 0x140009008
   140001626:	xor    rax,rsp
   140001629:	mov    QWORD PTR [rbp+0x1f],rax
   14000162d:	mov    r9,QWORD PTR [rbp+0x6f]
   140001631:	lea    rax,[rbp+0x4f]
   140001635:	mov    QWORD PTR [rbp-0x51],rax
   140001639:	xor    r11d,r11d
   14000163c:	lea    rax,[rbp+0x57]
   140001640:	mov    QWORD PTR [rbp-0x49],0x4
   140001648:	mov    QWORD PTR [rbp-0x41],rax
   14000164c:	or     rcx,0xffffffffffffffff
   140001650:	mov    QWORD PTR [rbp-0x39],0x4
   140001658:	lea    rax,[rbp+0x5f]
   14000165c:	mov    QWORD PTR [rbp-0x31],rax
   140001660:	lea    rax,[rbp+0x67]
   140001664:	mov    QWORD PTR [rbp-0x21],rax
   140001668:	lea    r8d,[r11+0xa]
   14000166c:	mov    QWORD PTR [rbp-0x29],0x4
   140001674:	mov    QWORD PTR [rbp-0x19],0x4
   14000167c:	test   r9,r9
   14000167f:	je     0x140001697
   140001681:	mov    rax,rcx
   140001684:	inc    rax
   140001687:	cmp    WORD PTR [r9+rax*2],r11w
   14000168c:	jne    0x140001684
   14000168e:	lea    edx,[rax*2+0x2]
   140001695:	jmp    0x14000169a
   140001697:	mov    edx,r8d
   14000169a:	test   r9,r9
   14000169d:	mov    DWORD PTR [rbp-0x9],edx
   1400016a0:	mov    rdx,QWORD PTR [rbp+0x77]
   1400016a4:	lea    r10,[rip+0x56ed]        # 0x140006d98
   1400016ab:	mov    rax,r10
   1400016ae:	mov    DWORD PTR [rbp-0x5],r11d
   1400016b2:	cmovne rax,r9
   1400016b6:	mov    QWORD PTR [rbp-0x11],rax
   1400016ba:	test   rdx,rdx
   1400016bd:	je     0x1400016d6
   1400016bf:	mov    rax,rcx
   1400016c2:	inc    rax
   1400016c5:	cmp    WORD PTR [rdx+rax*2],r11w
   1400016ca:	jne    0x1400016c2
   1400016cc:	lea    r9d,[rax*2+0x2]
   1400016d4:	jmp    0x1400016d9
   1400016d6:	mov    r9d,r8d
   1400016d9:	test   rdx,rdx
   1400016dc:	mov    DWORD PTR [rbp+0x7],r9d
   1400016e0:	mov    rax,r10
   1400016e3:	mov    DWORD PTR [rbp+0xb],r11d
   1400016e7:	cmovne rax,rdx
   1400016eb:	mov    QWORD PTR [rbp-0x1],rax
   1400016ef:	mov    rax,QWORD PTR [rbp+0x7f]
   1400016f3:	test   rax,rax
   1400016f6:	je     0x14000170d
   1400016f8:	inc    rcx
   1400016fb:	cmp    WORD PTR [rax+rcx*2],r11w
   140001700:	jne    0x1400016f8
   140001702:	lea    r8d,[rcx*2+0x2]
   14000170a:	test   rax,rax
   14000170d:	mov    rcx,QWORD PTR [rip+0x8074]        # 0x140009788
   140001714:	lea    r9,[rbp-0x51]
   140001718:	cmovne r10,rax
   14000171c:	mov    DWORD PTR [rbp+0x17],r8d
   140001720:	mov    r8d,0x7
   140001726:	mov    QWORD PTR [rbp+0xf],r10
   14000172a:	lea    rdx,[rip+0x54f7]        # 0x140006c28
   140001731:	mov    DWORD PTR [rbp+0x1b],r11d
   140001735:	call   QWORD PTR [rip+0x3b4d]        # 0x140005288
   14000173b:	mov    rcx,QWORD PTR [rbp+0x1f]
   14000173f:	xor    rcx,rsp
   140001742:	call   0x140002ed0
   140001747:	add    rsp,0xa0
   14000174e:	pop    rbp
   14000174f:	ret    
   140001750:	int3   
   140001751:	int3   
   140001752:	int3   
   140001753:	int3   
   140001754:	int3   
   140001755:	int3   
   140001756:	int3   
   140001757:	int3   
   140001758:	mov    rcx,QWORD PTR [rip+0x8029]        # 0x140009788
   14000175f:	xor    r9d,r9d
   140001762:	xor    r8d,r8d
   140001765:	rex.W jmp QWORD PTR [rip+0x3b1c]        # 0x140005288
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	int3   
   140001771:	int3   
   140001772:	int3   
   140001773:	int3   
   140001774:	mov    r11,rsp
   140001777:	mov    DWORD PTR [r11+0x18],r8d
   14000177b:	sub    rsp,0x48
   14000177f:	mov    rax,QWORD PTR [rip+0x7882]        # 0x140009008
   140001786:	xor    rax,rsp
   140001789:	mov    QWORD PTR [rsp+0x30],rax
   14000178e:	mov    rcx,QWORD PTR [rip+0x7ff3]        # 0x140009788
   140001795:	lea    rax,[r11+0x18]
   140001799:	mov    QWORD PTR [r11-0x28],rax
   14000179d:	lea    r9,[r11-0x28]
   1400017a1:	and    DWORD PTR [rsp+0x2c],0x0
   1400017a6:	mov    r8d,0x1
   1400017ac:	mov    DWORD PTR [rsp+0x28],0x4
   1400017b4:	call   QWORD PTR [rip+0x3ace]        # 0x140005288
   1400017ba:	mov    rcx,QWORD PTR [rsp+0x30]
   1400017bf:	xor    rcx,rsp
   1400017c2:	call   0x140002ed0
   1400017c7:	add    rsp,0x48
   1400017cb:	ret    
   1400017cc:	int3   
   1400017cd:	int3   
   1400017ce:	int3   
   1400017cf:	int3   
   1400017d0:	int3   
   1400017d1:	int3   
   1400017d2:	int3   
   1400017d3:	int3   
   1400017d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400017d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400017de:	mov    QWORD PTR [rsp+0x18],rsi
   1400017e3:	push   rdi
   1400017e4:	push   r14
   1400017e6:	push   r15
   1400017e8:	sub    rsp,0x50
   1400017ec:	mov    r15,rcx
   1400017ef:	mov    rbp,r9
   1400017f2:	lea    rcx,[rip+0x55af]        # 0x140006da8
   1400017f9:	mov    r14,r8
   1400017fc:	xor    ebx,ebx
   1400017fe:	call   QWORD PTR [rip+0x397c]        # 0x140005180
   140001804:	mov    rdi,rax
   140001807:	test   rax,rax
   14000180a:	jne    0x140001868
   14000180c:	mov    rax,QWORD PTR [rsp+0xb0]
   140001814:	xor    r9d,r9d
   140001817:	mov    QWORD PTR [rsp+0x48],rax
   14000181c:	xor    r8d,r8d
   14000181f:	mov    rax,QWORD PTR [rsp+0xa8]
   140001827:	mov    rdx,rbp
   14000182a:	mov    QWORD PTR [rsp+0x40],rax
   14000182f:	mov    rcx,r14
   140001832:	mov    QWORD PTR [rsp+0x38],rbx
   140001837:	mov    QWORD PTR [rsp+0x30],rbx
   14000183c:	mov    DWORD PTR [rsp+0x28],ebx
   140001840:	mov    DWORD PTR [rsp+0x20],ebx
   140001844:	call   QWORD PTR [rip+0x3976]        # 0x1400051c0
   14000184a:	test   eax,eax
   14000184c:	jne    0x1400018de
   140001852:	call   QWORD PTR [rip+0x3898]        # 0x1400050f0
   140001858:	movzx  ebx,ax
   14000185b:	or     ebx,0x80070000
   140001861:	test   eax,eax
   140001863:	cmovle ebx,eax
   140001866:	jmp    0x1400018de
   140001868:	lea    rdx,[rip+0x5559]        # 0x140006dc8
   14000186f:	mov    rcx,rax
   140001872:	call   QWORD PTR [rip+0x38d8]        # 0x140005150
   140001878:	mov    rsi,rax
   14000187b:	test   rax,rax
   14000187e:	je     0x1400018c1
   140001880:	mov    rcx,rax
   140001883:	call   QWORD PTR [rip+0x3b7f]        # 0x140005408
   140001889:	mov    rax,QWORD PTR [rsp+0xb0]
   140001891:	mov    r9,rbp
   140001894:	mov    QWORD PTR [rsp+0x40],rax
   140001899:	mov    r8,r14
   14000189c:	mov    rax,QWORD PTR [rsp+0xa8]
   1400018a4:	xor    edx,edx
   1400018a6:	mov    QWORD PTR [rsp+0x38],rax
   1400018ab:	mov    rcx,r15
   1400018ae:	mov    QWORD PTR [rsp+0x30],rbx
   1400018b3:	mov    DWORD PTR [rsp+0x28],ebx
   1400018b7:	mov    DWORD PTR [rsp+0x20],ebx
   1400018bb:	call   rsi
   1400018bd:	mov    ebx,eax
   1400018bf:	jmp    0x1400018d5
   1400018c1:	call   QWORD PTR [rip+0x3829]        # 0x1400050f0
   1400018c7:	movzx  ebx,ax
   1400018ca:	or     ebx,0x80070000
   1400018d0:	test   eax,eax
   1400018d2:	cmovle ebx,eax
   1400018d5:	mov    rcx,rdi
   1400018d8:	call   QWORD PTR [rip+0x388a]        # 0x140005168
   1400018de:	lea    r11,[rsp+0x50]
   1400018e3:	mov    eax,ebx
   1400018e5:	mov    rbx,QWORD PTR [r11+0x20]
   1400018e9:	mov    rbp,QWORD PTR [r11+0x28]
   1400018ed:	mov    rsi,QWORD PTR [r11+0x30]
   1400018f1:	mov    rsp,r11
   1400018f4:	pop    r15
   1400018f6:	pop    r14
   1400018f8:	pop    rdi
   1400018f9:	ret    
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	rex push rbp
   140001902:	lea    rbp,[rsp-0x57]
   140001907:	sub    rsp,0xb0
   14000190e:	mov    rax,QWORD PTR [rip+0x76f3]        # 0x140009008
   140001915:	xor    rax,rsp
   140001918:	mov    QWORD PTR [rbp+0x47],rax
   14000191c:	movaps xmm0,XMMWORD PTR [rip+0x54bd]        # 0x140006de0
   140001923:	lea    r8,[rbp-0x39]
   140001927:	movaps xmm1,XMMWORD PTR [rip+0x54c2]        # 0x140006df0
   14000192e:	lea    rdx,[rbp-0x9]
   140001932:	mov    eax,DWORD PTR [rip+0x54e8]        # 0x140006e20
   140001938:	mov    r9,rcx
   14000193b:	movaps XMMWORD PTR [rbp-0x9],xmm0
   14000193f:	mov    rcx,0xffffffff80000002
   140001946:	movaps xmm0,XMMWORD PTR [rip+0x54b3]        # 0x140006e00
   14000194d:	movaps XMMWORD PTR [rbp+0x7],xmm1
   140001951:	movaps xmm1,XMMWORD PTR [rip+0x54b8]        # 0x140006e10
   140001958:	mov    DWORD PTR [rbp+0x37],eax
   14000195b:	movzx  eax,WORD PTR [rip+0x54c2]        # 0x140006e24
   140001962:	movaps XMMWORD PTR [rbp+0x17],xmm0
   140001966:	movups xmm0,XMMWORD PTR [rip+0x54bb]        # 0x140006e28
   14000196d:	mov    WORD PTR [rbp+0x3b],ax
   140001971:	movzx  eax,WORD PTR [rip+0x54d0]        # 0x140006e48
   140001978:	movaps XMMWORD PTR [rbp+0x27],xmm1
   14000197c:	movups xmm1,XMMWORD PTR [rip+0x54b5]        # 0x140006e38
   140001983:	mov    WORD PTR [rbp-0x19],ax
   140001987:	movups XMMWORD PTR [rbp-0x39],xmm0
   14000198b:	movups XMMWORD PTR [rbp-0x29],xmm1
   14000198f:	call   QWORD PTR [rip+0x369b]        # 0x140005030
   140001995:	mov    rcx,QWORD PTR [rbp+0x47]
   140001999:	xor    rcx,rsp
   14000199c:	call   0x140002ed0
   1400019a1:	add    rsp,0xb0
   1400019a8:	pop    rbp
   1400019a9:	ret    
   1400019aa:	int3   
   1400019ab:	int3   
   1400019ac:	int3   
   1400019ad:	int3   
   1400019ae:	int3   
   1400019af:	int3   
   1400019b0:	mov    rax,rsp
   1400019b3:	push   rbp
   1400019b4:	sub    rsp,0x140
   1400019bb:	mov    QWORD PTR [rsp+0x130],0xfffffffffffffffe
   1400019c7:	mov    QWORD PTR [rax+0x8],rbx
   1400019cb:	mov    QWORD PTR [rax+0x10],rsi
   1400019cf:	mov    QWORD PTR [rax+0x18],rdi
   1400019d3:	lea    rbp,[rax-0xb8]
   1400019da:	and    rbp,0xffffffffffffffc0
   1400019de:	mov    rsi,rdx
   1400019e1:	mov    rbx,rcx
   1400019e4:	and    DWORD PTR [rbp+0x50],0x0
   1400019e8:	xor    edx,edx
   1400019ea:	lea    r8d,[rdx+0x48]
   1400019ee:	lea    rcx,[rbp+0x58]
   1400019f2:	call   0x140004226
   1400019f7:	and    DWORD PTR [rbp+0x0],0x0
   1400019fb:	xorps  xmm0,xmm0
   1400019fe:	movdqa XMMWORD PTR [rbp+0x10],xmm0
   140001a03:	xorps  xmm1,xmm1
   140001a06:	movdqa XMMWORD PTR [rbp+0x20],xmm1
   140001a0b:	movdqa XMMWORD PTR [rbp+0x30],xmm0
   140001a10:	and    QWORD PTR [rbp+0x40],0x0
   140001a15:	and    DWORD PTR [rbp+0x48],0x0
   140001a19:	xor    edi,edi
   140001a1b:	test   BYTE PTR [rip+0x7d5e],0x1        # 0x140009780
   140001a22:	je     0x140001a30
   140001a24:	lea    rdx,[rip+0x5185]        # 0x140006bb0
   140001a2b:	call   0x140001758
   140001a30:	mov    DWORD PTR [rbp+0x50],0x50
   140001a37:	lea    rdx,[rbp+0x50]
   140001a3b:	mov    rcx,rbx
   140001a3e:	call   QWORD PTR [rip+0x360c]        # 0x140005050
   140001a44:	mov    ebx,eax
   140001a46:	cmp    eax,0x530002
   140001a4b:	je     0x140001abd
   140001a4d:	test   eax,eax
   140001a4f:	js     0x140001aaf
   140001a51:	lea    rdx,[rbp+0x0]
   140001a55:	mov    ecx,0x100f
   140001a5a:	call   QWORD PTR [rip+0x35a0]        # 0x140005000
   140001a60:	mov    ebx,eax
   140001a62:	test   eax,eax
   140001a64:	js     0x140001aaf
   140001a66:	mov    ecx,DWORD PTR [rbp+0x0]
   140001a69:	mov    eax,ecx
   140001a6b:	mov    edx,0x194
   140001a70:	and    eax,0x1000
   140001a75:	cmovne ecx,edx
   140001a78:	mov    DWORD PTR [rbp+0x0],ecx
   140001a7b:	mov    eax,DWORD PTR [rbp+0x78]
   140001a7e:	and    eax,ecx
   140001a80:	test   eax,0xffffefff
   140001a85:	je     0x140001abd
   140001a87:	lea    rdx,[rbp+0x50]
   140001a8b:	lea    rcx,[rbp+0x10]
   140001a8f:	call   0x140001c54
   140001a94:	mov    ebx,eax
   140001a96:	test   eax,eax
   140001a98:	js     0x140001aaf
   140001a9a:	lea    rcx,[rbp+0x10]
   140001a9e:	call   0x140001fb8
   140001aa3:	mov    ebx,eax
   140001aa5:	mov    eax,0x5
   140001aaa:	test   ebx,ebx
   140001aac:	cmovns edi,eax
   140001aaf:	lea    r8,[rbp+0x10]
   140001ab3:	mov    edx,ebx
   140001ab5:	mov    rcx,rsi
   140001ab8:	call   0x14000253c
   140001abd:	mov    eax,DWORD PTR [rip+0x7cbd]        # 0x140009780
   140001ac3:	test   al,0x1
   140001ac5:	je     0x140001af4
   140001ac7:	mov    rax,QWORD PTR [rbp+0x28]
   140001acb:	mov    QWORD PTR [rsp+0x30],rax
   140001ad0:	mov    rax,QWORD PTR [rbp+0x20]
   140001ad4:	mov    QWORD PTR [rsp+0x28],rax
   140001ad9:	mov    rax,QWORD PTR [rbp+0x70]
   140001add:	mov    QWORD PTR [rsp+0x20],rax
   140001ae2:	mov    r9d,DWORD PTR [rbp+0x78]
   140001ae6:	mov    r8d,ebx
   140001ae9:	call   0x1400014d8
   140001aee:	mov    eax,DWORD PTR [rip+0x7c8c]        # 0x140009780
   140001af4:	test   ebx,ebx
   140001af6:	jns    0x140001b30
   140001af8:	test   al,0x2
   140001afa:	je     0x140001b30
   140001afc:	mov    rax,QWORD PTR [rbp+0x28]
   140001b00:	mov    QWORD PTR [rsp+0x40],rax
   140001b05:	mov    rax,QWORD PTR [rbp+0x20]
   140001b09:	mov    QWORD PTR [rsp+0x38],rax
   140001b0e:	mov    rax,QWORD PTR [rbp+0x70]
   140001b12:	mov    QWORD PTR [rsp+0x30],rax
   140001b17:	mov    eax,DWORD PTR [rbp+0x78]
   140001b1a:	mov    DWORD PTR [rsp+0x28],eax
   140001b1e:	mov    eax,DWORD PTR [rbp+0x0]
   140001b21:	mov    DWORD PTR [rsp+0x20],eax
   140001b25:	mov    r9d,edi
   140001b28:	mov    r8d,ebx
   140001b2b:	call   0x140001608
   140001b30:	lea    rcx,[rbp+0x50]
   140001b34:	call   QWORD PTR [rip+0x3506]        # 0x140005040
   140001b3a:	xor    edi,edi
   140001b3c:	and    QWORD PTR [rbp+0x8],rdi
   140001b40:	lea    r8,[rbp+0x8]
   140001b44:	call   0x1400011c4
   140001b49:	test   eax,eax
   140001b4b:	js     0x140001b8a
   140001b4d:	mov    rcx,QWORD PTR [rbp+0x8]
   140001b51:	call   QWORD PTR [rip+0x3629]        # 0x140005180
   140001b57:	mov    rdi,rax
   140001b5a:	test   rax,rax
   140001b5d:	je     0x140001b77
   140001b5f:	lea    rdx,[rip+0x4f52]        # 0x140006ab8
   140001b66:	mov    rcx,rax
   140001b69:	call   QWORD PTR [rip+0x35e1]        # 0x140005150
   140001b6f:	mov    rsi,rax
   140001b72:	test   rax,rax
   140001b75:	jne    0x140001b7f
   140001b77:	call   QWORD PTR [rip+0x3573]        # 0x1400050f0
   140001b7d:	jmp    0x140001b8a
   140001b7f:	mov    rcx,rax
   140001b82:	call   QWORD PTR [rip+0x3880]        # 0x140005408
   140001b88:	call   rsi
   140001b8a:	mov    rcx,rdi
   140001b8d:	call   QWORD PTR [rip+0x35d5]        # 0x140005168
   140001b93:	mov    rcx,QWORD PTR [rbp+0x8]
   140001b97:	call   QWORD PTR [rip+0x359b]        # 0x140005138
   140001b9d:	nop
   140001b9e:	lea    rcx,[rbp+0x10]
   140001ba2:	call   0x140001bd4
   140001ba7:	mov    eax,ebx
   140001ba9:	lea    r11,[rsp+0x140]
   140001bb1:	mov    rbx,QWORD PTR [r11+0x10]
   140001bb5:	mov    rsi,QWORD PTR [r11+0x18]
   140001bb9:	mov    rdi,QWORD PTR [r11+0x20]
   140001bbd:	mov    rsp,r11
   140001bc0:	pop    rbp
   140001bc1:	ret    
   140001bc2:	int3   
   140001bc3:	int3   
   140001bc4:	int3   
   140001bc5:	int3   
   140001bc6:	int3   
   140001bc7:	int3   
   140001bc8:	jmp    0x140001bd4
   140001bcd:	int3   
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	int3   
   140001bd1:	int3   
   140001bd2:	int3   
   140001bd3:	int3   
   140001bd4:	rex push rbx
   140001bd6:	sub    rsp,0x20
   140001bda:	mov    rbx,rcx
   140001bdd:	mov    rcx,QWORD PTR [rcx]
   140001be0:	call   QWORD PTR [rip+0x3552]        # 0x140005138
   140001be6:	mov    rcx,QWORD PTR [rbx+0x10]
   140001bea:	and    QWORD PTR [rbx],0x0
   140001bee:	call   QWORD PTR [rip+0x3544]        # 0x140005138
   140001bf4:	mov    rcx,QWORD PTR [rbx+0x18]
   140001bf8:	and    QWORD PTR [rbx+0x10],0x0
   140001bfd:	call   QWORD PTR [rip+0x3535]        # 0x140005138
   140001c03:	mov    rcx,QWORD PTR [rbx+0x20]
   140001c07:	and    QWORD PTR [rbx+0x18],0x0
   140001c0c:	call   QWORD PTR [rip+0x3526]        # 0x140005138
   140001c12:	mov    rcx,QWORD PTR [rbx+0x28]
   140001c16:	and    QWORD PTR [rbx+0x20],0x0
   140001c1b:	call   QWORD PTR [rip+0x3517]        # 0x140005138
   140001c21:	mov    rcx,QWORD PTR [rbx+0x30]
   140001c25:	and    QWORD PTR [rbx+0x28],0x0
   140001c2a:	call   QWORD PTR [rip+0x3508]        # 0x140005138
   140001c30:	mov    rcx,QWORD PTR [rbx+0x8]
   140001c34:	and    QWORD PTR [rbx+0x30],0x0
   140001c39:	call   QWORD PTR [rip+0x3441]        # 0x140005080
   140001c3f:	and    QWORD PTR [rbx+0x8],0x0
   140001c44:	xor    eax,eax
   140001c46:	add    rsp,0x20
   140001c4a:	pop    rbx
   140001c4b:	ret    
   140001c4c:	int3   
   140001c4d:	int3   
   140001c4e:	int3   
   140001c4f:	int3   
   140001c50:	int3   
   140001c51:	int3   
   140001c52:	int3   
   140001c53:	int3   
   140001c54:	mov    QWORD PTR [rsp+0x18],rbx
   140001c59:	push   rbp
   140001c5a:	push   rsi
   140001c5b:	push   rdi
   140001c5c:	push   r12
   140001c5e:	push   r13
   140001c60:	push   r14
   140001c62:	push   r15
   140001c64:	sub    rsp,0x80
   140001c6b:	mov    rax,QWORD PTR [rip+0x7396]        # 0x140009008
   140001c72:	xor    rax,rsp
   140001c75:	mov    QWORD PTR [rsp+0x70],rax
   140001c7a:	xor    r13d,r13d
   140001c7d:	mov    rdi,rdx
   140001c80:	mov    QWORD PTR [rsp+0x38],r13
   140001c85:	mov    r12d,r13d
   140001c88:	mov    QWORD PTR [rsp+0x30],r13
   140001c8d:	mov    ebp,r13d
   140001c90:	mov    r15d,r13d
   140001c93:	mov    r14,rcx
   140001c96:	call   0x140001bd4
   140001c9b:	mov    rcx,QWORD PTR [rdi+0x8]
   140001c9f:	or     esi,0xffffffff
   140001ca2:	mov    edx,esi
   140001ca4:	mov    r8,r14
   140001ca7:	call   QWORD PTR [rip+0x337b]        # 0x140005028
   140001cad:	mov    ebx,eax
   140001caf:	test   eax,eax
   140001cb1:	js     0x140001d8d
   140001cb7:	mov    rcx,QWORD PTR [rdi+0x30]
   140001cbb:	lea    r8,[r14+0x18]
   140001cbf:	mov    edx,esi
   140001cc1:	call   QWORD PTR [rip+0x3361]        # 0x140005028
   140001cc7:	mov    ebx,eax
   140001cc9:	test   eax,eax
   140001ccb:	js     0x140001d8d
   140001cd1:	mov    rcx,QWORD PTR [rdi+0x20]
   140001cd5:	lea    r8,[r14+0x20]
   140001cd9:	mov    edx,esi
   140001cdb:	call   QWORD PTR [rip+0x3347]        # 0x140005028
   140001ce1:	mov    ebx,eax
   140001ce3:	test   eax,eax
   140001ce5:	js     0x140001d8d
   140001ceb:	mov    rcx,QWORD PTR [r14]
   140001cee:	lea    rsi,[r14+0x10]
   140001cf2:	mov    r8,rsi
   140001cf5:	lea    rdx,[rip+0x5054]        # 0x140006d50
   140001cfc:	call   QWORD PTR [rip+0x36f6]        # 0x1400053f8
   140001d02:	mov    ebx,eax
   140001d04:	test   eax,eax
   140001d06:	js     0x140001d8d
   140001d0c:	lea    r10d,[r13+0xa]
   140001d10:	cmp    DWORD PTR [rdi+0x48],r10d
   140001d14:	jne    0x140001e4e
   140001d1a:	mov    r8,QWORD PTR [rdi+0x40]
   140001d1e:	lea    rdx,[rsp+0x40]
   140001d23:	mov    r9d,r10d
   140001d26:	mov    cl,BYTE PTR [r8]
   140001d29:	mov    al,cl
   140001d2b:	shr    al,0x4
   140001d2e:	cmp    al,r10b
   140001d31:	movzx  eax,al
   140001d34:	jae    0x140001d3c
   140001d36:	add    ax,0x30
   140001d3a:	jmp    0x140001d40
   140001d3c:	add    ax,0x37
   140001d40:	and    cl,0xf
   140001d43:	mov    WORD PTR [rdx+0x2],ax
   140001d47:	movzx  eax,cl
   140001d4a:	cmp    cl,r10b
   140001d4d:	jae    0x140001d55
   140001d4f:	add    ax,0x30
   140001d53:	jmp    0x140001d59
   140001d55:	add    ax,0x37
   140001d59:	mov    WORD PTR [rdx],ax
   140001d5c:	inc    r8
   140001d5f:	add    rdx,0x4
   140001d63:	sub    r9,0x1
   140001d67:	jne    0x140001d26
   140001d69:	lea    edx,[r9+0x2c]
   140001d6d:	mov    WORD PTR [rsp+0x68],r13w
   140001d73:	lea    ecx,[rdx+0x14]
   140001d76:	call   QWORD PTR [rip+0x33c4]        # 0x140005140
   140001d7c:	mov    QWORD PTR [r14+0x30],rax
   140001d80:	mov    rcx,rax
   140001d83:	test   rax,rax
   140001d86:	jne    0x140001e01
   140001d88:	mov    ebx,0x8007000e
   140001d8d:	test   BYTE PTR [rip+0x79ec],0x2        # 0x140009780
   140001d94:	je     0x140001da5
   140001d96:	mov    r8d,ebx
   140001d99:	lea    rdx,[rip+0x4e68]        # 0x140006c08
   140001da0:	call   0x140001774
   140001da5:	mov    rcx,r12
   140001da8:	call   QWORD PTR [rip+0x32d2]        # 0x140005080
   140001dae:	test   r15,r15
   140001db1:	je     0x140001dc9
   140001db3:	mov    rcx,r15
   140001db6:	call   QWORD PTR [rip+0x364c]        # 0x140005408
   140001dbc:	mov    rcx,QWORD PTR [rsp+0x30]
   140001dc1:	mov    edx,0x1
   140001dc6:	call   r15
   140001dc9:	test   rbp,rbp
   140001dcc:	je     0x140001dd7
   140001dce:	mov    rcx,rbp
   140001dd1:	call   QWORD PTR [rip+0x3391]        # 0x140005168
   140001dd7:	mov    eax,ebx
   140001dd9:	mov    rcx,QWORD PTR [rsp+0x70]
   140001dde:	xor    rcx,rsp
   140001de1:	call   0x140002ed0
   140001de6:	mov    rbx,QWORD PTR [rsp+0xd0]
   140001dee:	add    rsp,0x80
   140001df5:	pop    r15
   140001df7:	pop    r14
   140001df9:	pop    r13
   140001dfb:	pop    r12
   140001dfd:	pop    rdi
   140001dfe:	pop    rsi
   140001dff:	pop    rbp
   140001e00:	ret    
   140001e01:	lea    r8,[rsp+0x40]
   140001e06:	mov    edx,0x15
   140001e0b:	sub    r8,rax
   140001e0e:	mov    ebx,r13d
   140001e11:	lea    rax,[rdx+0x7fffffe9]
   140001e18:	test   rax,rax
   140001e1b:	je     0x140001e34
   140001e1d:	movzx  eax,WORD PTR [r8+rcx*1]
   140001e22:	test   ax,ax
   140001e25:	je     0x140001e34
   140001e27:	mov    WORD PTR [rcx],ax
   140001e2a:	add    rcx,0x2
   140001e2e:	sub    rdx,0x1
   140001e32:	jne    0x140001e11
   140001e34:	test   rdx,rdx
   140001e37:	jne    0x140001e42
   140001e39:	sub    rcx,0x2
   140001e3d:	mov    ebx,0x8007007a
   140001e42:	mov    WORD PTR [rcx],r13w
   140001e46:	test   ebx,ebx
   140001e48:	js     0x140001d8d
   140001e4e:	mov    rcx,QWORD PTR [rsi]
   140001e51:	lea    rdx,[rip+0x4e58]        # 0x140006cb0
   140001e58:	call   QWORD PTR [rip+0x31c2]        # 0x140005020
   140001e5e:	test   eax,eax
   140001e60:	jne    0x140001f00
   140001e66:	lea    rcx,[rip+0x4fe3]        # 0x140006e50
   140001e6d:	call   QWORD PTR [rip+0x330d]        # 0x140005180
   140001e73:	mov    rbp,rax
   140001e76:	test   rax,rax
   140001e79:	jne    0x140001e85
   140001e7b:	mov    ebx,0x80004005
   140001e80:	jmp    0x140001d8d
   140001e85:	lea    rdx,[rip+0x4fec]        # 0x140006e78
   140001e8c:	mov    rcx,rax
   140001e8f:	call   QWORD PTR [rip+0x32bb]        # 0x140005150
   140001e95:	mov    rbx,rax
   140001e98:	test   rax,rax
   140001e9b:	jne    0x140001ea7
   140001e9d:	mov    ebx,0x8000ffff
   140001ea2:	jmp    0x140001d8d
   140001ea7:	lea    rdx,[rip+0x4fe2]        # 0x140006e90
   140001eae:	mov    rcx,rbp
   140001eb1:	call   QWORD PTR [rip+0x3299]        # 0x140005150
   140001eb7:	mov    r15,rax
   140001eba:	test   rax,rax
   140001ebd:	je     0x140001e9d
   140001ebf:	mov    rcx,rbx
   140001ec2:	call   QWORD PTR [rip+0x3540]        # 0x140005408
   140001ec8:	mov    edx,DWORD PTR [rdi+0x18]
   140001ecb:	lea    rax,[rsp+0x30]
   140001ed0:	mov    rcx,QWORD PTR [rdi+0x10]
   140001ed4:	xor    r9d,r9d
   140001ed7:	mov    QWORD PTR [rsp+0x20],rax
   140001edc:	lea    r8d,[r9+0xb]
   140001ee0:	call   rbx
   140001ee2:	mov    ebx,eax
   140001ee4:	test   eax,eax
   140001ee6:	js     0x140001d8d
   140001eec:	mov    rsi,QWORD PTR [rsp+0x30]
   140001ef1:	or     rbx,0xffffffffffffffff
   140001ef5:	inc    rbx
   140001ef8:	cmp    BYTE PTR [rsi+rbx*1],r13b
   140001efc:	jne    0x140001ef5
   140001efe:	jmp    0x140001f1b
   140001f00:	mov    rcx,QWORD PTR [rsi]
   140001f03:	lea    rdx,[rip+0x4d2e]        # 0x140006c38
   140001f0a:	call   QWORD PTR [rip+0x3110]        # 0x140005020
   140001f10:	test   eax,eax
   140001f12:	jne    0x140001f86
   140001f14:	mov    rsi,QWORD PTR [rdi+0x10]
   140001f18:	mov    ebx,DWORD PTR [rdi+0x18]
   140001f1b:	mov    edx,ebx
   140001f1d:	xor    ecx,ecx
   140001f1f:	call   QWORD PTR [rip+0x314b]        # 0x140005070
   140001f25:	mov    r12,rax
   140001f28:	test   rax,rax
   140001f2b:	je     0x140001d88
   140001f31:	mov    DWORD PTR [rsp+0x28],ebx
   140001f35:	mov    r9d,ebx
   140001f38:	mov    r8,rsi
   140001f3b:	mov    QWORD PTR [rsp+0x20],rax
   140001f40:	xor    edx,edx
   140001f42:	mov    ecx,0xfde9
   140001f47:	call   QWORD PTR [rip+0x32f3]        # 0x140005240
   140001f4d:	movsxd rcx,eax
   140001f50:	lea    rdx,[rsp+0x38]
   140001f55:	mov    WORD PTR [r12+rcx*2],r13w
   140001f5a:	mov    rcx,r12
   140001f5d:	call   QWORD PTR [rip+0x3345]        # 0x1400052a8
   140001f63:	mov    ebx,eax
   140001f65:	test   eax,eax
   140001f67:	js     0x140001d8d
   140001f6d:	mov    rcx,QWORD PTR [rsp+0x38]
   140001f72:	call   QWORD PTR [rip+0x3110]        # 0x140005088
   140001f78:	mov    QWORD PTR [r14+0x8],rax
   140001f7c:	test   rax,rax
   140001f7f:	jne    0x140001f8b
   140001f81:	jmp    0x140001d88
   140001f86:	mov    ebx,0x80004005
   140001f8b:	test   ebx,ebx
   140001f8d:	js     0x140001d8d
   140001f93:	test   BYTE PTR [rip+0x77e6],0x1        # 0x140009780
   140001f9a:	je     0x140001da5
   140001fa0:	lea    rdx,[rip+0x4bc1]        # 0x140006b68
   140001fa7:	call   0x140001758
   140001fac:	jmp    0x140001da5
   140001fb1:	int3   
   140001fb2:	int3   
   140001fb3:	int3   
   140001fb4:	int3   
   140001fb5:	int3   
   140001fb6:	int3   
   140001fb7:	int3   
   140001fb8:	mov    QWORD PTR [rsp+0x10],rbx
   140001fbd:	mov    QWORD PTR [rsp+0x18],rdi
   140001fc2:	push   rbp
   140001fc3:	push   r12
   140001fc5:	push   r13
   140001fc7:	push   r14
   140001fc9:	push   r15
   140001fcb:	lea    rbp,[rsp-0x9a0]
   140001fd3:	sub    rsp,0xaa0
   140001fda:	mov    rax,QWORD PTR [rip+0x7027]        # 0x140009008
   140001fe1:	xor    rax,rsp
   140001fe4:	mov    QWORD PTR [rbp+0x990],rax
   140001feb:	mov    r14,rcx
   140001fee:	mov    ebx,0x206
   140001ff3:	xor    r12d,r12d
   140001ff6:	lea    rcx,[rbp+0x782]
   140001ffd:	mov    r8d,ebx
   140002000:	mov    WORD PTR [rbp+0x780],r12w
   140002008:	xor    edx,edx
   14000200a:	call   0x140004226
   14000200f:	mov    r8d,ebx
   140002012:	mov    WORD PTR [rbp+0x570],r12w
   14000201a:	xor    edx,edx
   14000201c:	lea    rcx,[rbp+0x572]
   140002023:	call   0x140004226
   140002028:	mov    r8d,ebx
   14000202b:	mov    WORD PTR [rbp+0x150],r12w
   140002033:	xor    edx,edx
   140002035:	lea    rcx,[rbp+0x152]
   14000203c:	call   0x140004226
   140002041:	mov    r8d,ebx
   140002044:	mov    WORD PTR [rbp+0x360],r12w
   14000204c:	xor    edx,edx
   14000204e:	lea    rcx,[rbp+0x362]
   140002055:	call   0x140004226
   14000205a:	xor    eax,eax
   14000205c:	mov    QWORD PTR [rsp+0x50],r12
   140002061:	xor    edx,edx
   140002063:	mov    QWORD PTR [rbp-0x80],rax
   140002067:	lea    r8d,[r12+0x60]
   14000206c:	mov    QWORD PTR [rbp-0x78],rax
   140002070:	lea    rcx,[rbp-0x68]
   140002074:	mov    QWORD PTR [rsp+0x78],r12
   140002079:	mov    DWORD PTR [rbp-0x70],r12d
   14000207d:	call   0x140004226
   140002082:	mov    rdx,QWORD PTR [r14+0x20]
   140002086:	lea    rcx,[rip+0x4f13]        # 0x140006fa0
   14000208d:	or     rdi,0xffffffffffffffff
   140002091:	mov    DWORD PTR [rsp+0x68],r12d
   140002096:	mov    r15d,r12d
   140002099:	mov    DWORD PTR [rsp+0x58],r12d
   14000209e:	mov    QWORD PTR [rsp+0x60],r12
   1400020a3:	call   QWORD PTR [rip+0x2f77]        # 0x140005020
   1400020a9:	mov    r13d,0x80070000
   1400020af:	test   eax,eax
   1400020b1:	jne    0x140002104
   1400020b3:	mov    r8d,0x104
   1400020b9:	lea    rdx,[rbp+0x780]
   1400020c0:	lea    rcx,[rip+0x4e79]        # 0x140006f40
   1400020c7:	call   QWORD PTR [rip+0x30d3]        # 0x1400051a0
   1400020cd:	test   eax,eax
   1400020cf:	jne    0x1400020e7
   1400020d1:	call   QWORD PTR [rip+0x3019]        # 0x1400050f0
   1400020d7:	movzx  ebx,ax
   1400020da:	or     ebx,r13d
   1400020dd:	test   eax,eax
   1400020df:	cmovle ebx,eax
   1400020e2:	jmp    0x1400023f3
   1400020e7:	call   0x1400034f8
   1400020ec:	test   al,al
   1400020ee:	je     0x14000214d
   1400020f0:	lea    rcx,[rip+0x4ea9]        # 0x140006fa0
   1400020f7:	lea    rdx,[rsp+0x50]
   1400020fc:	call   QWORD PTR [rip+0x8f0e]        # 0x14000b010
   140002102:	jmp    0x140002158
   140002104:	mov    rdx,QWORD PTR [r14+0x20]
   140002108:	lea    rcx,[rip+0x4eb1]        # 0x140006fc0
   14000210f:	call   QWORD PTR [rip+0x2f0b]        # 0x140005020
   140002115:	test   eax,eax
   140002117:	jne    0x1400023df
   14000211d:	mov    r8d,0x104
   140002123:	lea    rdx,[rbp+0x780]
   14000212a:	lea    rcx,[rip+0x4daf]        # 0x140006ee0
   140002131:	call   QWORD PTR [rip+0x3069]        # 0x1400051a0
   140002137:	test   eax,eax
   140002139:	je     0x1400020d1
   14000213b:	call   0x1400034f8
   140002140:	test   al,al
   140002142:	je     0x14000214d
   140002144:	lea    rcx,[rip+0x4e75]        # 0x140006fc0
   14000214b:	jmp    0x1400020f7
   14000214d:	lea    rcx,[rsp+0x50]
   140002152:	call   QWORD PTR [rip+0x2ec0]        # 0x140005018
   140002158:	mov    ebx,eax
   14000215a:	test   eax,eax
   14000215c:	js     0x1400023f3
   140002162:	test   eax,eax
   140002164:	js     0x1400023f3
   14000216a:	mov    rcx,QWORD PTR [r14+0x20]
   14000216e:	call   0x140001900
   140002173:	lea    r9,[rsp+0x70]
   140002178:	mov    QWORD PTR [rsp+0x70],r12
   14000217d:	xor    r8d,r8d
   140002180:	lea    rcx,[rip+0x4e69]        # 0x140006ff0
   140002187:	mov    edx,0x8000
   14000218c:	call   QWORD PTR [rip+0x8e8e]        # 0x14000b020
   140002192:	mov    ebx,eax
   140002194:	test   eax,eax
   140002196:	js     0x1400021eb
   140002198:	mov    rcx,QWORD PTR [rsp+0x70]
   14000219d:	lea    rax,[rbp+0x570]
   1400021a4:	sub    rcx,rax
   1400021a7:	lea    rdx,[rbp+0x570]
   1400021ae:	mov    r8d,0x104
   1400021b4:	mov    ebx,r12d
   1400021b7:	lea    rax,[r8+0x7ffffefa]
   1400021be:	test   rax,rax
   1400021c1:	je     0x1400021d9
   1400021c3:	movzx  eax,WORD PTR [rcx+rdx*1]
   1400021c7:	test   ax,ax
   1400021ca:	je     0x1400021d9
   1400021cc:	mov    WORD PTR [rdx],ax
   1400021cf:	add    rdx,0x2
   1400021d3:	sub    r8,0x1
   1400021d7:	jne    0x1400021b7
   1400021d9:	test   r8,r8
   1400021dc:	jne    0x1400021e7
   1400021de:	sub    rdx,0x2
   1400021e2:	mov    ebx,0x8007007a
   1400021e7:	mov    WORD PTR [rdx],r12w
   1400021eb:	mov    rcx,QWORD PTR [rsp+0x70]
   1400021f0:	call   QWORD PTR [rip+0x2eb2]        # 0x1400050a8
   1400021f6:	test   ebx,ebx
   1400021f8:	js     0x1400023f3
   1400021fe:	lea    r9,[rbp+0x150]
   140002205:	xor    r8d,r8d
   140002208:	lea    rdx,[rip+0x4c91]        # 0x140006ea0
   14000220f:	lea    rcx,[rbp+0x570]
   140002216:	call   QWORD PTR [rip+0x2eec]        # 0x140005108
   14000221c:	test   eax,eax
   14000221e:	je     0x1400020d1
   140002224:	mov    rcx,QWORD PTR [r14+0x8]
   140002228:	call   QWORD PTR [rip+0x2e4a]        # 0x140005078
   14000222e:	mov    ebx,eax
   140002230:	test   eax,eax
   140002232:	jne    0x14000223e
   140002234:	mov    ebx,0x8000ffff
   140002239:	jmp    0x1400023f3
   14000223e:	xor    r9d,r9d
   140002241:	mov    QWORD PTR [rsp+0x30],r12
   140002246:	mov    DWORD PTR [rsp+0x28],0x80
   14000224e:	lea    rcx,[rbp+0x150]
   140002255:	mov    edx,0xc0000000
   14000225a:	mov    DWORD PTR [rsp+0x20],0x2
   140002262:	lea    r8d,[r9+0x1]
   140002266:	call   QWORD PTR [rip+0x2eac]        # 0x140005118
   14000226c:	mov    rdi,rax
   14000226f:	cmp    rax,0xffffffffffffffff
   140002273:	je     0x1400020d1
   140002279:	mov    rdx,QWORD PTR [r14+0x8]
   14000227d:	lea    r8d,[rbx+rbx*1]
   140002281:	lea    r9,[rsp+0x68]
   140002286:	mov    QWORD PTR [rsp+0x20],r12
   14000228b:	mov    rcx,rax
   14000228e:	mov    r15d,0x1
   140002294:	call   QWORD PTR [rip+0x2e66]        # 0x140005100
   14000229a:	test   eax,eax
   14000229c:	jne    0x1400022b4
   14000229e:	call   QWORD PTR [rip+0x2e4c]        # 0x1400050f0
   1400022a4:	movzx  ebx,ax
   1400022a7:	or     ebx,r13d
   1400022aa:	test   eax,eax
   1400022ac:	cmovle ebx,eax
   1400022af:	jmp    0x1400023e4
   1400022b4:	mov    rcx,rdi
   1400022b7:	call   QWORD PTR [rip+0x2e6b]        # 0x140005128
   1400022bd:	mov    rax,QWORD PTR [rsp+0x50]
   1400022c2:	lea    rdx,[rbp+0x0]
   1400022c6:	mov    QWORD PTR [rbp+0x18],rax
   1400022ca:	lea    rcx,[rbp+0x150]
   1400022d1:	lea    rax,[rsp+0x60]
   1400022d6:	mov    DWORD PTR [rbp+0x0],r12d
   1400022da:	xor    r9d,r9d
   1400022dd:	mov    QWORD PTR [rsp+0x20],rax
   1400022e2:	xor    r8d,r8d
   1400022e5:	mov    DWORD PTR [rbp+0x4],r15d
   1400022e9:	mov    DWORD PTR [rbp+0x10],r12d
   1400022ed:	mov    DWORD PTR [rbp+0x8],r15d
   1400022f1:	call   QWORD PTR [rip+0x2fd1]        # 0x1400052c8
   1400022f7:	mov    ebx,eax
   1400022f9:	test   eax,eax
   1400022fb:	js     0x1400023f3
   140002301:	mov    rax,QWORD PTR [r14+0x30]
   140002305:	lea    rcx,[rbp+0x360]
   14000230c:	mov    r9,QWORD PTR [rsp+0x60]
   140002311:	mov    edx,0x104
   140002316:	test   rax,rax
   140002319:	je     0x14000232e
   14000231b:	lea    r8,[rip+0x4b86]        # 0x140006ea8
   140002322:	mov    QWORD PTR [rsp+0x20],rax
   140002327:	call   0x1400024bc
   14000232c:	jmp    0x14000233a
   14000232e:	lea    r8,[rip+0x4b93]        # 0x140006ec8
   140002335:	call   0x1400024bc
   14000233a:	mov    ebx,eax
   14000233c:	test   eax,eax
   14000233e:	js     0x1400023f3
   140002344:	lea    rcx,[rbp-0x70]
   140002348:	call   QWORD PTR [rip+0x2e7a]        # 0x1400051c8
   14000234e:	mov    rcx,QWORD PTR [rsp+0x50]
   140002353:	lea    rax,[rsp+0x78]
   140002358:	mov    QWORD PTR [rsp+0x40],rax
   14000235d:	lea    r9,[rbp+0x360]
   140002364:	lea    rax,[rbp-0x70]
   140002368:	lea    r8,[rbp+0x780]
   14000236f:	mov    QWORD PTR [rsp+0x38],rax
   140002374:	call   0x1400017d4
   140002379:	mov    ebx,eax
   14000237b:	test   eax,eax
   14000237d:	js     0x1400023f3
   14000237f:	mov    rcx,QWORD PTR [rsp+0x78]
   140002384:	mov    edx,0x7530
   140002389:	call   QWORD PTR [rip+0x2ec9]        # 0x140005258
   14000238f:	test   eax,eax
   140002391:	je     0x1400023ba
   140002393:	cmp    eax,0x80
   140002398:	je     0x140002234
   14000239e:	cmp    eax,0x102
   1400023a3:	je     0x1400023b3
   1400023a5:	cmp    eax,0xffffffff
   1400023a8:	je     0x1400020d1
   1400023ae:	jmp    0x140002234
   1400023b3:	mov    ebx,0x80070102
   1400023b8:	jmp    0x1400023f3
   1400023ba:	mov    rcx,QWORD PTR [rsp+0x78]
   1400023bf:	lea    rdx,[rsp+0x58]
   1400023c4:	call   QWORD PTR [rip+0x2e0e]        # 0x1400051d8
   1400023ca:	mov    ebx,DWORD PTR [rsp+0x58]
   1400023ce:	test   eax,eax
   1400023d0:	je     0x1400023f3
   1400023d2:	cmp    ebx,0x103
   1400023d8:	jne    0x1400023f3
   1400023da:	jmp    0x140002234
   1400023df:	mov    ebx,0x8000ffff
   1400023e4:	cmp    rdi,0xffffffffffffffff
   1400023e8:	je     0x1400023f3
   1400023ea:	mov    rcx,rdi
   1400023ed:	call   QWORD PTR [rip+0x2d35]        # 0x140005128
   1400023f3:	mov    rcx,QWORD PTR [rsp+0x78]
   1400023f8:	call   QWORD PTR [rip+0x2d2a]        # 0x140005128
   1400023fe:	mov    rcx,QWORD PTR [rbp-0x80]
   140002402:	call   QWORD PTR [rip+0x2d20]        # 0x140005128
   140002408:	mov    rcx,QWORD PTR [rsp+0x60]
   14000240d:	test   rcx,rcx
   140002410:	je     0x140002423
   140002412:	call   QWORD PTR [rip+0x2ea8]        # 0x1400052c0
   140002418:	mov    rcx,QWORD PTR [rsp+0x60]
   14000241d:	call   QWORD PTR [rip+0x2e95]        # 0x1400052b8
   140002423:	test   r15d,r15d
   140002426:	je     0x14000244a
   140002428:	lea    rcx,[rbp+0x150]
   14000242f:	call   QWORD PTR [rip+0x2cdb]        # 0x140005110
   140002435:	test   eax,eax
   140002437:	jne    0x14000244a
   140002439:	call   QWORD PTR [rip+0x2cb1]        # 0x1400050f0
   14000243f:	movzx  ebx,ax
   140002442:	or     ebx,r13d
   140002445:	test   eax,eax
   140002447:	cmovle ebx,eax
   14000244a:	test   ebx,ebx
   14000244c:	jns    0x140002468
   14000244e:	test   BYTE PTR [rip+0x732b],0x2        # 0x140009780
   140002455:	je     0x14000247d
   140002457:	mov    r8d,ebx
   14000245a:	lea    rdx,[rip+0x4727]        # 0x140006b88
   140002461:	call   0x140001774
   140002466:	jmp    0x14000247d
   140002468:	test   BYTE PTR [rip+0x7311],0x1        # 0x140009780
   14000246f:	je     0x14000247d
   140002471:	lea    rdx,[rip+0x4700]        # 0x140006b78
   140002478:	call   0x140001758
   14000247d:	mov    rcx,QWORD PTR [rsp+0x50]
   140002482:	call   QWORD PTR [rip+0x2cb0]        # 0x140005138
   140002488:	mov    eax,ebx
   14000248a:	mov    rcx,QWORD PTR [rbp+0x990]
   140002491:	xor    rcx,rsp
   140002494:	call   0x140002ed0
   140002499:	lea    r11,[rsp+0xaa0]
   1400024a1:	mov    rbx,QWORD PTR [r11+0x38]
   1400024a5:	mov    rdi,QWORD PTR [r11+0x40]
   1400024a9:	mov    rsp,r11
   1400024ac:	pop    r15
   1400024ae:	pop    r14
   1400024b0:	pop    r13
   1400024b2:	pop    r12
   1400024b4:	pop    rbp
   1400024b5:	ret    
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	int3   
   1400024b9:	int3   
   1400024ba:	int3   
   1400024bb:	int3   
   1400024bc:	mov    QWORD PTR [rsp+0x18],r8
   1400024c1:	mov    QWORD PTR [rsp+0x20],r9
   1400024c6:	push   rbx
   1400024c7:	push   rbp
   1400024c8:	push   rsi
   1400024c9:	push   rdi
   1400024ca:	sub    rsp,0x28
   1400024ce:	xor    ebp,ebp
   1400024d0:	lea    rax,[rdx-0x1]
   1400024d4:	cmp    rax,0x7ffffffe
   1400024da:	mov    rsi,rcx
   1400024dd:	mov    edi,ebp
   1400024df:	mov    ecx,0x80070057
   1400024e4:	cmova  edi,ecx
   1400024e7:	test   edi,edi
   1400024e9:	js     0x140002520
   1400024eb:	lea    rbx,[rdx-0x1]
   1400024ef:	mov    rcx,rsi
   1400024f2:	mov    rdx,rbx
   1400024f5:	lea    r9,[rsp+0x68]
   1400024fa:	mov    edi,ebp
   1400024fc:	call   QWORD PTR [rip+0x2e36]        # 0x140005338
   140002502:	test   eax,eax
   140002504:	js     0x140002515
   140002506:	cdqe   
   140002508:	cmp    rax,rbx
   14000250b:	ja     0x140002515
   14000250d:	jne    0x140002528
   14000250f:	mov    WORD PTR [rsi+rbx*2],bp
   140002513:	jmp    0x140002528
   140002515:	mov    WORD PTR [rsi+rbx*2],bp
   140002519:	mov    edi,0x8007007a
   14000251e:	jmp    0x140002528
   140002520:	test   rdx,rdx
   140002523:	je     0x140002528
   140002525:	mov    WORD PTR [rsi],bp
   140002528:	mov    eax,edi
   14000252a:	add    rsp,0x28
   14000252e:	pop    rdi
   14000252f:	pop    rsi
   140002530:	pop    rbp
   140002531:	pop    rbx
   140002532:	ret    
   140002533:	int3   
   140002534:	int3   
   140002535:	int3   
   140002536:	int3   
   140002537:	int3   
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	mov    QWORD PTR [rsp+0x8],rbx
   140002541:	mov    QWORD PTR [rsp+0x10],rsi
   140002546:	mov    QWORD PTR [rsp+0x18],rdi
   14000254b:	push   r14
   14000254d:	sub    rsp,0x30
   140002551:	mov    esi,edx
   140002553:	mov    rdi,rcx
   140002556:	xor    edx,edx
   140002558:	xor    ecx,ecx
   14000255a:	mov    r14,r8
   14000255d:	call   QWORD PTR [rip+0x2b55]        # 0x1400050b8
   140002563:	mov    ebx,eax
   140002565:	test   eax,eax
   140002567:	js     0x1400025ff
   14000256d:	mov    rcx,QWORD PTR [r14]
   140002570:	lea    r8,[rsp+0x58]
   140002575:	and    QWORD PTR [rsp+0x58],0x0
   14000257b:	lea    rdx,[rip+0x47ee]        # 0x140006d70
   140002582:	call   QWORD PTR [rip+0x2e70]        # 0x1400053f8
   140002588:	mov    rdx,QWORD PTR [rsp+0x58]
   14000258d:	test   rdx,rdx
   140002590:	jne    0x1400025d5
   140002592:	and    QWORD PTR [rsp+0x20],rdx
   140002597:	lea    r8,[rsp+0x20]
   14000259c:	mov    rcx,QWORD PTR [r14]
   14000259f:	lea    rdx,[rip+0x4782]        # 0x140006d28
   1400025a6:	call   QWORD PTR [rip+0x2e4c]        # 0x1400053f8
   1400025ac:	mov    rdx,QWORD PTR [rsp+0x20]
   1400025b1:	test   rdx,rdx
   1400025b4:	jne    0x1400025d5
   1400025b6:	and    QWORD PTR [rsp+0x28],rdx
   1400025bb:	lea    r8,[rsp+0x28]
   1400025c0:	mov    rcx,QWORD PTR [r14]
   1400025c3:	lea    rdx,[rip+0x4736]        # 0x140006d00
   1400025ca:	call   QWORD PTR [rip+0x2e28]        # 0x1400053f8
   1400025d0:	mov    rdx,QWORD PTR [rsp+0x28]
   1400025d5:	mov    rcx,rdi
   1400025d8:	test   esi,esi
   1400025da:	js     0x1400025e3
   1400025dc:	call   0x140002620
   1400025e1:	jmp    0x1400025f7
   1400025e3:	cmp    esi,0x80070070
   1400025e9:	jne    0x1400025f2
   1400025eb:	call   0x14000297c
   1400025f0:	jmp    0x1400025f7
   1400025f2:	call   0x140002808
   1400025f7:	mov    ebx,eax
   1400025f9:	call   QWORD PTR [rip+0x2ab1]        # 0x1400050b0
   1400025ff:	mov    rsi,QWORD PTR [rsp+0x48]
   140002604:	mov    eax,ebx
   140002606:	mov    rbx,QWORD PTR [rsp+0x40]
   14000260b:	mov    rdi,QWORD PTR [rsp+0x50]
   140002610:	add    rsp,0x30
   140002614:	pop    r14
   140002616:	ret    
   140002617:	int3   
   140002618:	int3   
   140002619:	int3   
   14000261a:	int3   
   14000261b:	int3   
   14000261c:	int3   
   14000261d:	int3   
   14000261e:	int3   
   14000261f:	int3   
   140002620:	mov    QWORD PTR [rsp+0x18],rbx
   140002625:	mov    QWORD PTR [rsp+0x20],rsi
   14000262a:	push   rbp
   14000262b:	push   rdi
   14000262c:	push   r14
   14000262e:	lea    rbp,[rsp-0xf60]
   140002636:	mov    eax,0x1060
   14000263b:	call   0x140004260
   140002640:	sub    rsp,rax
   140002643:	mov    rax,QWORD PTR [rip+0x69be]        # 0x140009008
   14000264a:	xor    rax,rsp
   14000264d:	mov    QWORD PTR [rbp+0xf50],rax
   140002654:	mov    rbx,rdx
   140002657:	mov    QWORD PTR [rsp+0x40],rdx
   14000265c:	mov    rdi,rcx
   14000265f:	mov    esi,0x3fe
   140002664:	xor    r14d,r14d
   140002667:	lea    rcx,[rbp+0x352]
   14000266e:	mov    r8d,esi
   140002671:	mov    WORD PTR [rbp+0x350],r14w
   140002679:	xor    edx,edx
   14000267b:	call   0x140004226
   140002680:	mov    r8d,esi
   140002683:	mov    WORD PTR [rsp+0x50],r14w
   140002689:	xor    edx,edx
   14000268b:	lea    rcx,[rsp+0x52]
   140002690:	call   0x140004226
   140002695:	mov    r8d,esi
   140002698:	mov    WORD PTR [rbp+0xb50],r14w
   1400026a0:	xor    edx,edx
   1400026a2:	lea    rcx,[rbp+0xb52]
   1400026a9:	call   0x140004226
   1400026ae:	mov    r8d,esi
   1400026b1:	mov    WORD PTR [rbp+0x750],r14w
   1400026b9:	xor    edx,edx
   1400026bb:	lea    rcx,[rbp+0x752]
   1400026c2:	call   0x140004226
   1400026c7:	mov    rcx,QWORD PTR [rdi]
   1400026ca:	test   rbx,rbx
   1400026cd:	mov    ebx,0x200
   1400026d2:	mov    r9d,ebx
   1400026d5:	je     0x140002773
   1400026db:	lea    r8,[rbp+0x350]
   1400026e2:	mov    edx,0x6599
   1400026e7:	call   QWORD PTR [rip+0x2a83]        # 0x140005170
   1400026ed:	test   eax,eax
   1400026ef:	je     0x14000275d
   1400026f1:	lea    rax,[rsp+0x40]
   1400026f6:	xor    r9d,r9d
   1400026f9:	mov    QWORD PTR [rsp+0x30],rax
   1400026fe:	lea    rdx,[rbp+0x350]
   140002705:	lea    rax,[rsp+0x50]
   14000270a:	mov    DWORD PTR [rsp+0x28],ebx
   14000270e:	xor    r8d,r8d
   140002711:	mov    QWORD PTR [rsp+0x20],rax
   140002716:	mov    ecx,0x2400
   14000271b:	call   QWORD PTR [rip+0x2a6f]        # 0x140005190
   140002721:	test   eax,eax
   140002723:	je     0x14000275d
   140002725:	mov    rcx,QWORD PTR [rdi]
   140002728:	lea    r8,[rbp+0xb50]
   14000272f:	mov    r9d,ebx
   140002732:	mov    edx,0x659b
   140002737:	call   QWORD PTR [rip+0x2a33]        # 0x140005170
   14000273d:	test   eax,eax
   14000273f:	je     0x14000275d
   140002741:	mov    rcx,QWORD PTR [rdi]
   140002744:	lea    r8,[rbp+0x750]
   14000274b:	mov    r9d,ebx
   14000274e:	mov    edx,0x6598
   140002753:	call   QWORD PTR [rip+0x2a17]        # 0x140005170
   140002759:	test   eax,eax
   14000275b:	jne    0x140002785
   14000275d:	call   QWORD PTR [rip+0x298d]        # 0x1400050f0
   140002763:	movzx  ebx,ax
   140002766:	or     ebx,0x80070000
   14000276c:	test   eax,eax
   14000276e:	cmovle ebx,eax
   140002771:	jmp    0x1400027cd
   140002773:	lea    r8,[rsp+0x50]
   140002778:	mov    edx,0x659a
   14000277d:	call   QWORD PTR [rip+0x29ed]        # 0x140005170
   140002783:	jmp    0x140002721
   140002785:	lea    r9,[rsp+0x50]
   14000278a:	mov    ecx,0x3
   14000278f:	lea    r8,[rip+0x484a]        # 0x140006fe0
   140002796:	lea    rdx,[rbp+0x750]
   14000279d:	call   QWORD PTR [rip+0x286d]        # 0x140005010
   1400027a3:	mov    rdi,rax
   1400027a6:	test   rax,rax
   1400027a9:	jne    0x1400027b2
   1400027ab:	mov    ebx,0x80004005
   1400027b0:	jmp    0x1400027c4
   1400027b2:	mov    rdx,rax
   1400027b5:	lea    rcx,[rbp+0xb50]
   1400027bc:	call   QWORD PTR [rip+0x883e]        # 0x14000b000
   1400027c2:	mov    ebx,eax
   1400027c4:	mov    rcx,rdi
   1400027c7:	call   QWORD PTR [rip+0x296b]        # 0x140005138
   1400027cd:	mov    rcx,QWORD PTR [rsp+0x40]
   1400027d2:	call   QWORD PTR [rip+0x2960]        # 0x140005138
   1400027d8:	mov    eax,ebx
   1400027da:	mov    rcx,QWORD PTR [rbp+0xf50]
   1400027e1:	xor    rcx,rsp
   1400027e4:	call   0x140002ed0
   1400027e9:	lea    r11,[rsp+0x1060]
   1400027f1:	mov    rbx,QWORD PTR [r11+0x30]
   1400027f5:	mov    rsi,QWORD PTR [r11+0x38]
   1400027f9:	mov    rsp,r11
   1400027fc:	pop    r14
   1400027fe:	pop    rdi
   1400027ff:	pop    rbp
   140002800:	ret    
   140002801:	int3   
   140002802:	int3   
   140002803:	int3   
   140002804:	int3   
   140002805:	int3   
   140002806:	int3   
   140002807:	int3   
   140002808:	mov    QWORD PTR [rsp+0x10],rbx
   14000280d:	mov    QWORD PTR [rsp+0x18],rsi
   140002812:	push   rbp
   140002813:	push   rdi
   140002814:	push   r14
   140002816:	lea    rbp,[rsp-0xb30]
   14000281e:	sub    rsp,0xc30
   140002825:	mov    rax,QWORD PTR [rip+0x67dc]        # 0x140009008
   14000282c:	xor    rax,rsp
   14000282f:	mov    QWORD PTR [rbp+0xb20],rax
   140002836:	mov    rbx,rdx
   140002839:	mov    rdi,rcx
   14000283c:	mov    esi,0x3fe
   140002841:	lea    rcx,[rbp+0x322]
   140002848:	xor    r14d,r14d
   14000284b:	mov    r8d,esi
   14000284e:	xor    edx,edx
   140002850:	mov    WORD PTR [rbp+0x320],r14w
   140002858:	call   0x140004226
   14000285d:	mov    r8d,esi
   140002860:	mov    WORD PTR [rbp+0x720],r14w
   140002868:	xor    edx,edx
   14000286a:	lea    rcx,[rbp+0x722]
   140002871:	call   0x140004226
   140002876:	mov    r8d,esi
   140002879:	mov    WORD PTR [rsp+0x20],r14w
   14000287f:	xor    edx,edx
   140002881:	lea    rcx,[rsp+0x22]
   140002886:	call   0x140004226
   14000288b:	mov    rcx,QWORD PTR [rdi]
   14000288e:	lea    r8,[rbp+0x320]
   140002895:	mov    eax,r14d
   140002898:	sub    rax,rbx
   14000289b:	mov    ebx,0x200
   1400028a0:	neg    rax
   1400028a3:	mov    r9d,ebx
   1400028a6:	sbb    edx,edx
   1400028a8:	add    edx,0x6595
   1400028ae:	call   QWORD PTR [rip+0x28bc]        # 0x140005170
   1400028b4:	test   eax,eax
   1400028b6:	je     0x1400028ee
   1400028b8:	mov    rcx,QWORD PTR [rdi]
   1400028bb:	lea    r8,[rbp+0x720]
   1400028c2:	mov    r9d,ebx
   1400028c5:	mov    edx,0x659b
   1400028ca:	call   QWORD PTR [rip+0x28a0]        # 0x140005170
   1400028d0:	test   eax,eax
   1400028d2:	je     0x1400028ee
   1400028d4:	mov    rcx,QWORD PTR [rdi]
   1400028d7:	lea    r8,[rsp+0x20]
   1400028dc:	mov    r9d,ebx
   1400028df:	mov    edx,0x6597
   1400028e4:	call   QWORD PTR [rip+0x2886]        # 0x140005170
   1400028ea:	test   eax,eax
   1400028ec:	jne    0x140002904
   1400028ee:	call   QWORD PTR [rip+0x27fc]        # 0x1400050f0
   1400028f4:	movzx  ebx,ax
   1400028f7:	or     ebx,0x80070000
   1400028fd:	test   eax,eax
   1400028ff:	cmovle ebx,eax
   140002902:	jmp    0x14000294c
   140002904:	lea    r9,[rbp+0x320]
   14000290b:	mov    ecx,0x3
   140002910:	lea    r8,[rip+0x46c9]        # 0x140006fe0
   140002917:	lea    rdx,[rsp+0x20]
   14000291c:	call   QWORD PTR [rip+0x26ee]        # 0x140005010
   140002922:	mov    rdi,rax
   140002925:	test   rax,rax
   140002928:	jne    0x140002931
   14000292a:	mov    ebx,0x80004005
   14000292f:	jmp    0x140002943
   140002931:	mov    rdx,rax
   140002934:	lea    rcx,[rbp+0x720]
   14000293b:	call   QWORD PTR [rip+0x86bf]        # 0x14000b000
   140002941:	mov    ebx,eax
   140002943:	mov    rcx,rdi
   140002946:	call   QWORD PTR [rip+0x27ec]        # 0x140005138
   14000294c:	mov    eax,ebx
   14000294e:	mov    rcx,QWORD PTR [rbp+0xb20]
   140002955:	xor    rcx,rsp
   140002958:	call   0x140002ed0
   14000295d:	lea    r11,[rsp+0xc30]
   140002965:	mov    rbx,QWORD PTR [r11+0x28]
   140002969:	mov    rsi,QWORD PTR [r11+0x30]
   14000296d:	mov    rsp,r11
   140002970:	pop    r14
   140002972:	pop    rdi
   140002973:	pop    rbp
   140002974:	ret    
   140002975:	int3   
   140002976:	int3   
   140002977:	int3   
   140002978:	int3   
   140002979:	int3   
   14000297a:	int3   
   14000297b:	int3   
   14000297c:	mov    rax,rsp
   14000297f:	mov    QWORD PTR [rax+0x10],rbx
   140002983:	mov    QWORD PTR [rax+0x18],rsi
   140002987:	mov    QWORD PTR [rax+0x20],rdi
   14000298b:	push   rbp
   14000298c:	lea    rbp,[rax-0xb48]
   140002993:	sub    rsp,0xc40
   14000299a:	mov    rax,QWORD PTR [rip+0x6667]        # 0x140009008
   1400029a1:	xor    rax,rsp
   1400029a4:	mov    QWORD PTR [rbp+0xb30],rax
   1400029ab:	mov    rbx,rcx
   1400029ae:	mov    edi,0x3fe
   1400029b3:	xor    esi,esi
   1400029b5:	lea    rcx,[rbp+0x332]
   1400029bc:	mov    r8d,edi
   1400029bf:	mov    WORD PTR [rbp+0x330],si
   1400029c6:	xor    edx,edx
   1400029c8:	call   0x140004226
   1400029cd:	mov    r8d,edi
   1400029d0:	mov    WORD PTR [rsp+0x30],si
   1400029d5:	xor    edx,edx
   1400029d7:	lea    rcx,[rsp+0x32]
   1400029dc:	call   0x140004226
   1400029e1:	mov    r8d,edi
   1400029e4:	mov    WORD PTR [rbp+0x730],si
   1400029eb:	xor    edx,edx
   1400029ed:	lea    rcx,[rbp+0x732]
   1400029f4:	call   0x140004226
   1400029f9:	mov    rcx,QWORD PTR [rbx]
   1400029fc:	lea    r8,[rsp+0x30]
   140002a01:	mov    edi,0x200
   140002a06:	mov    edx,0x6592
   140002a0b:	mov    r9d,edi
   140002a0e:	call   QWORD PTR [rip+0x275c]        # 0x140005170
   140002a14:	test   eax,eax
   140002a16:	je     0x140002a50
   140002a18:	mov    rcx,QWORD PTR [rbx]
   140002a1b:	lea    r8,[rbp+0x730]
   140002a22:	mov    r9d,edi
   140002a25:	mov    edx,0x659b
   140002a2a:	call   QWORD PTR [rip+0x2740]        # 0x140005170
   140002a30:	test   eax,eax
   140002a32:	je     0x140002a50
   140002a34:	mov    rcx,QWORD PTR [rbx]
   140002a37:	lea    r8,[rbp+0x330]
   140002a3e:	mov    r9d,edi
   140002a41:	mov    edx,0x65c8
   140002a46:	call   QWORD PTR [rip+0x2724]        # 0x140005170
   140002a4c:	test   eax,eax
   140002a4e:	jne    0x140002a66
   140002a50:	call   QWORD PTR [rip+0x269a]        # 0x1400050f0
   140002a56:	movzx  ecx,ax
   140002a59:	or     ecx,0x80070000
   140002a5f:	test   eax,eax
   140002a61:	cmovle ecx,eax
   140002a64:	jmp    0x140002a91
   140002a66:	mov    QWORD PTR [rsp+0x28],rsi
   140002a6b:	lea    r9,[rbp+0x330]
   140002a72:	xor    r8d,r8d
   140002a75:	mov    DWORD PTR [rsp+0x20],0x1
   140002a7d:	lea    rdx,[rsp+0x30]
   140002a82:	lea    rcx,[rbp+0x730]
   140002a89:	call   QWORD PTR [rip+0x2579]        # 0x140005008
   140002a8f:	mov    ecx,eax
   140002a91:	mov    eax,ecx
   140002a93:	mov    rcx,QWORD PTR [rbp+0xb30]
   140002a9a:	xor    rcx,rsp
   140002a9d:	call   0x140002ed0
   140002aa2:	lea    r11,[rsp+0xc40]
   140002aaa:	mov    rbx,QWORD PTR [r11+0x18]
   140002aae:	mov    rsi,QWORD PTR [r11+0x20]
   140002ab2:	mov    rdi,QWORD PTR [r11+0x28]
   140002ab6:	mov    rsp,r11
   140002ab9:	pop    rbp
   140002aba:	ret    
   140002abb:	int3   
   140002abc:	int3   
   140002abd:	int3   
   140002abe:	int3   
   140002abf:	int3   
   140002ac0:	int3   
   140002ac1:	int3   
   140002ac2:	int3   
   140002ac3:	int3   
   140002ac4:	int3   
   140002ac5:	int3   
   140002ac6:	int3   
   140002ac7:	int3   
   140002ac8:	int3   
   140002ac9:	int3   
   140002aca:	int3   
   140002acb:	int3   
   140002acc:	int3   
   140002acd:	int3   
   140002ace:	int3   
   140002acf:	int3   
   140002ad0:	sub    rsp,0x38
   140002ad4:	and    DWORD PTR [rsp+0x28],0x0
   140002ad9:	mov    r9,QWORD PTR [rip+0x25f0]        # 0x1400050d0
   140002ae0:	mov    r8,QWORD PTR [rip+0x4501]        # 0x140006fe8
   140002ae7:	mov    QWORD PTR [rsp+0x20],rdx
   140002aec:	mov    rdx,rcx
   140002aef:	lea    rcx,[rip+0xffffffffffffd50a]        # 0x140000000
   140002af6:	call   QWORD PTR [rip+0x25cc]        # 0x1400050c8
   140002afc:	add    rsp,0x38
   140002b00:	ret    
   140002b01:	int3   
   140002b02:	int3   
   140002b03:	int3   
   140002b04:	int3   
   140002b05:	int3   
   140002b06:	int3   
   140002b07:	int3   
   140002b08:	int3   
   140002b09:	int3   
   140002b0a:	int3   
   140002b0b:	int3   
   140002b0c:	int3   
   140002b0d:	int3   
   140002b0e:	int3   
   140002b0f:	int3   
   140002b10:	sub    rsp,0x28
   140002b14:	mov    eax,0x5a4d
   140002b19:	cmp    WORD PTR [rip+0xffffffffffffd4e0],ax        # 0x140000000
   140002b20:	je     0x140002b26
   140002b22:	xor    eax,eax
   140002b24:	jmp    0x140002b75
   140002b26:	movsxd rcx,DWORD PTR [rip+0xffffffffffffd50f]        # 0x14000003c
   140002b2d:	lea    rax,[rip+0xffffffffffffd4cc]        # 0x140000000
   140002b34:	add    rcx,rax
   140002b37:	cmp    DWORD PTR [rcx],0x4550
   140002b3d:	jne    0x140002b22
   140002b3f:	movzx  eax,WORD PTR [rcx+0x18]
   140002b43:	cmp    eax,0x10b
   140002b48:	je     0x140002b64
   140002b4a:	cmp    eax,0x20b
   140002b4f:	jne    0x140002b22
   140002b51:	xor    eax,eax
   140002b53:	cmp    DWORD PTR [rcx+0x84],0xe
   140002b5a:	jbe    0x140002b75
   140002b5c:	cmp    DWORD PTR [rcx+0xf8],eax
   140002b62:	jmp    0x140002b72
   140002b64:	xor    eax,eax
   140002b66:	cmp    DWORD PTR [rcx+0x74],0xe
   140002b6a:	jbe    0x140002b75
   140002b6c:	cmp    DWORD PTR [rcx+0xe8],eax
   140002b72:	setne  al
   140002b75:	mov    ecx,0x2
   140002b7a:	mov    DWORD PTR [rip+0x6628],eax        # 0x1400091a8
   140002b80:	call   0x140002fe8
   140002b85:	mov    ecx,eax
   140002b87:	call   QWORD PTR [rip+0x282b]        # 0x1400053b8
   140002b8d:	mov    rcx,QWORD PTR [rip+0x27d4]        # 0x140005368
   140002b94:	or     rax,0xffffffffffffffff
   140002b98:	mov    QWORD PTR [rip+0x6c09],rax        # 0x1400097a8
   140002b9f:	mov    QWORD PTR [rip+0x6c0a],rax        # 0x1400097b0
   140002ba6:	mov    eax,DWORD PTR [rip+0x6610]        # 0x1400091bc
   140002bac:	mov    DWORD PTR [rcx],eax
   140002bae:	mov    rcx,QWORD PTR [rip+0x282b]        # 0x1400053e0
   140002bb5:	mov    eax,DWORD PTR [rip+0x65f5]        # 0x1400091b0
   140002bbb:	mov    DWORD PTR [rcx],eax
   140002bbd:	call   0x140003040
   140002bc2:	cmp    DWORD PTR [rip+0x6437],0x0        # 0x140009000
   140002bc9:	jne    0x140002bd8
   140002bcb:	lea    rcx,[rip+0x46e]        # 0x140003040
   140002bd2:	call   QWORD PTR [rip+0x2768]        # 0x140005340
   140002bd8:	xor    eax,eax
   140002bda:	add    rsp,0x28
   140002bde:	ret    
   140002bdf:	int3   
   140002be0:	int3   
   140002be1:	int3   
   140002be2:	int3   
   140002be3:	int3   
   140002be4:	int3   
   140002be5:	int3   
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	int3   
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	sub    rsp,0x38
   140002bf4:	mov    eax,DWORD PTR [rip+0x65be]        # 0x1400091b8
   140002bfa:	lea    r8,[rip+0x659f]        # 0x1400091a0
   140002c01:	mov    r9d,DWORD PTR [rip+0x65ac]        # 0x1400091b4
   140002c08:	lea    rdx,[rip+0x6589]        # 0x140009198
   140002c0f:	mov    DWORD PTR [rip+0x6597],eax        # 0x1400091ac
   140002c15:	lea    rcx,[rip+0x6574]        # 0x140009190
   140002c1c:	lea    rax,[rip+0x6589]        # 0x1400091ac
   140002c23:	mov    QWORD PTR [rsp+0x20],rax
   140002c28:	call   QWORD PTR [rip+0x2792]        # 0x1400053c0
   140002c2e:	mov    DWORD PTR [rip+0x6560],eax        # 0x140009194
   140002c34:	add    rsp,0x38
   140002c38:	ret    
   140002c39:	int3   
   140002c3a:	int3   
   140002c3b:	int3   
   140002c3c:	int3   
   140002c3d:	int3   
   140002c3e:	int3   
   140002c3f:	int3   
   140002c40:	sub    rsp,0x28
   140002c44:	call   0x140003134
   140002c49:	add    rsp,0x28
   140002c4d:	jmp    0x140002c58
   140002c52:	int3   
   140002c53:	int3   
   140002c54:	int3   
   140002c55:	int3   
   140002c56:	int3   
   140002c57:	int3   
   140002c58:	mov    rax,rsp
   140002c5b:	mov    QWORD PTR [rax+0x8],rbx
   140002c5f:	mov    QWORD PTR [rax+0x10],rsi
   140002c63:	mov    QWORD PTR [rax+0x18],rdi
   140002c67:	push   r15
   140002c69:	sub    rsp,0xb0
   140002c70:	and    DWORD PTR [rsp+0x20],0x0
   140002c75:	lea    rcx,[rax-0x78]
   140002c79:	call   QWORD PTR [rip+0x2549]        # 0x1400051c8
   140002c7f:	nop
   140002c80:	mov    rax,QWORD PTR gs:0x30
   140002c89:	mov    rbx,QWORD PTR [rax+0x8]
   140002c8d:	xor    esi,esi
   140002c8f:	xor    eax,eax
   140002c91:	lock cmpxchg QWORD PTR [rip+0x6b1e],rbx        # 0x1400097b8
   140002c9a:	je     0x140002cb5
   140002c9c:	cmp    rax,rbx
   140002c9f:	jne    0x140002ca8
   140002ca1:	mov    esi,0x1
   140002ca6:	jmp    0x140002cb5
   140002ca8:	mov    ecx,0x3e8
   140002cad:	call   QWORD PTR [rip+0x259d]        # 0x140005250
   140002cb3:	jmp    0x140002c8f
   140002cb5:	mov    eax,DWORD PTR [rip+0x6b05]        # 0x1400097c0
   140002cbb:	cmp    eax,0x1
   140002cbe:	jne    0x140002cca
   140002cc0:	lea    ecx,[rax+0x1e]
   140002cc3:	call   0x140003034
   140002cc8:	jmp    0x140002d3b
   140002cca:	mov    eax,DWORD PTR [rip+0x6af0]        # 0x1400097c0
   140002cd0:	test   eax,eax
   140002cd2:	jne    0x140002d31
   140002cd4:	mov    DWORD PTR [rip+0x6ae2],0x1        # 0x1400097c0
   140002cde:	lea    r15,[rip+0x277b]        # 0x140005460
   140002ce5:	lea    rbx,[rip+0x275c]        # 0x140005448
   140002cec:	mov    QWORD PTR [rsp+0x38],rbx
   140002cf1:	mov    DWORD PTR [rsp+0x30],eax
   140002cf5:	cmp    rbx,r15
   140002cf8:	jae    0x140002d23
   140002cfa:	test   eax,eax
   140002cfc:	jne    0x140002d27
   140002cfe:	mov    rdi,QWORD PTR [rbx]
   140002d01:	test   rdi,rdi
   140002d04:	je     0x140002d18
   140002d06:	mov    rcx,rdi
   140002d09:	mov    rax,QWORD PTR [rip+0x26f8]        # 0x140005408
   140002d10:	call   rax
   140002d12:	call   rdi
   140002d14:	mov    DWORD PTR [rsp+0x30],eax
   140002d18:	add    rbx,0x8
   140002d1c:	mov    QWORD PTR [rsp+0x38],rbx
   140002d21:	jmp    0x140002cf5
   140002d23:	test   eax,eax
   140002d25:	je     0x140002d3b
   140002d27:	mov    eax,0xff
   140002d2c:	jmp    0x140002e94
   140002d31:	mov    DWORD PTR [rip+0x644d],0x1        # 0x140009188
   140002d3b:	mov    eax,DWORD PTR [rip+0x6a7f]        # 0x1400097c0
   140002d41:	cmp    eax,0x1
   140002d44:	jne    0x140002d63
   140002d46:	lea    rdx,[rip+0x26f3]        # 0x140005440
   140002d4d:	lea    rcx,[rip+0x26c4]        # 0x140005418
   140002d54:	call   0x14000320a
   140002d59:	mov    DWORD PTR [rip+0x6a5d],0x2        # 0x1400097c0
   140002d63:	test   esi,esi
   140002d65:	jne    0x140002d70
   140002d67:	xor    eax,eax
   140002d69:	xchg   QWORD PTR [rip+0x6a48],rax        # 0x1400097b8
   140002d70:	cmp    QWORD PTR [rip+0x6a50],0x0        # 0x1400097c8
   140002d78:	je     0x140002da8
   140002d7a:	lea    rcx,[rip+0x6a47]        # 0x1400097c8
   140002d81:	call   0x1400030a0
   140002d86:	test   eax,eax
   140002d88:	je     0x140002da8
   140002d8a:	mov    rbx,QWORD PTR [rip+0x6a37]        # 0x1400097c8
   140002d91:	mov    rcx,rbx
   140002d94:	mov    rax,QWORD PTR [rip+0x266d]        # 0x140005408
   140002d9b:	call   rax
   140002d9d:	xor    r8d,r8d
   140002da0:	lea    edx,[r8+0x2]
   140002da4:	xor    ecx,ecx
   140002da6:	call   rbx
   140002da8:	mov    rax,QWORD PTR [rip+0x25b1]        # 0x140005360
   140002daf:	mov    rbx,QWORD PTR [rax]
   140002db2:	mov    QWORD PTR [rsp+0x28],rbx
   140002db7:	mov    edi,DWORD PTR [rsp+0x20]
   140002dbb:	cmp    BYTE PTR [rbx],0x20
   140002dbe:	ja     0x140002e33
   140002dc0:	cmp    BYTE PTR [rbx],0x0
   140002dc3:	je     0x140002dc9
   140002dc5:	test   edi,edi
   140002dc7:	jne    0x140002e33
   140002dc9:	mov    al,BYTE PTR [rbx]
   140002dcb:	dec    al
   140002dcd:	cmp    al,0x1f
   140002dcf:	ja     0x140002ddb
   140002dd1:	inc    rbx
   140002dd4:	mov    QWORD PTR [rsp+0x28],rbx
   140002dd9:	jmp    0x140002dc9
   140002ddb:	mov    ecx,DWORD PTR [rsp+0x7c]
   140002ddf:	movzx  eax,WORD PTR [rsp+0x80]
   140002de7:	mov    r9d,0xa
   140002ded:	and    cl,0x1
   140002df0:	cmovne r9d,eax
   140002df4:	mov    r8,rbx
   140002df7:	xor    edx,edx
   140002df9:	lea    rcx,[rip+0xffffffffffffd200]        # 0x140000000
   140002e00:	call   0x14000132c
   140002e05:	mov    DWORD PTR [rip+0x6379],eax        # 0x140009184
   140002e0b:	cmp    DWORD PTR [rip+0x6396],0x0        # 0x1400091a8
   140002e12:	jne    0x140002e1c
   140002e14:	mov    ecx,eax
   140002e16:	call   QWORD PTR [rip+0x2594]        # 0x1400053b0
   140002e1c:	cmp    DWORD PTR [rip+0x6365],0x0        # 0x140009188
   140002e23:	jne    0x140002e31
   140002e25:	call   QWORD PTR [rip+0x2565]        # 0x140005390
   140002e2b:	mov    eax,DWORD PTR [rip+0x6353]        # 0x140009184
   140002e31:	jmp    0x140002e94
   140002e33:	cmp    BYTE PTR [rbx],0x22
   140002e36:	jne    0x140002e45
   140002e38:	xor    eax,eax
   140002e3a:	test   edi,edi
   140002e3c:	sete   al
   140002e3f:	mov    edi,eax
   140002e41:	mov    DWORD PTR [rsp+0x20],eax
   140002e45:	movzx  ecx,BYTE PTR [rbx]
   140002e48:	call   QWORD PTR [rip+0x253a]        # 0x140005388
   140002e4e:	test   eax,eax
   140002e50:	je     0x140002e5a
   140002e52:	inc    rbx
   140002e55:	mov    QWORD PTR [rsp+0x28],rbx
   140002e5a:	inc    rbx
   140002e5d:	mov    QWORD PTR [rsp+0x28],rbx
   140002e62:	jmp    0x140002dbb
   140002e67:	mov    DWORD PTR [rip+0x6317],eax        # 0x140009184
   140002e6d:	cmp    DWORD PTR [rip+0x6334],0x0        # 0x1400091a8
   140002e74:	jne    0x140002e7f
   140002e76:	mov    ecx,eax
   140002e78:	call   QWORD PTR [rip+0x252a]        # 0x1400053a8
   140002e7e:	int3   
   140002e7f:	cmp    DWORD PTR [rip+0x6302],0x0        # 0x140009188
   140002e86:	jne    0x140002e94
   140002e88:	call   QWORD PTR [rip+0x2502]        # 0x140005390
   140002e8e:	mov    eax,DWORD PTR [rip+0x62f0]        # 0x140009184
   140002e94:	lea    r11,[rsp+0xb0]
   140002e9c:	mov    rbx,QWORD PTR [r11+0x10]
   140002ea0:	mov    rsi,QWORD PTR [r11+0x18]
   140002ea4:	mov    rdi,QWORD PTR [r11+0x20]
   140002ea8:	mov    rsp,r11
   140002eab:	pop    r15
   140002ead:	ret    
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	int3   
   140002eb1:	int3   
   140002eb2:	int3   
   140002eb3:	int3   
   140002eb4:	jmp    QWORD PTR [rip+0x249e]        # 0x140005358
   140002eba:	int3   
   140002ebb:	int3   
   140002ebc:	int3   
   140002ebd:	int3   
   140002ebe:	int3   
   140002ebf:	int3   
   140002ec0:	int3   
   140002ec1:	int3   
   140002ec2:	int3   
   140002ec3:	int3   
   140002ec4:	int3   
   140002ec5:	int3   
   140002ec6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140002ed0:	cmp    rcx,QWORD PTR [rip+0x6131]        # 0x140009008
   140002ed7:	jne    0x140002ee9
   140002ed9:	rol    rcx,0x10
   140002edd:	test   cx,0xffff
   140002ee2:	jne    0x140002ee5
   140002ee4:	ret    
   140002ee5:	ror    rcx,0x10
   140002ee9:	jmp    0x140003340
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	int3   
   140002ef1:	int3   
   140002ef2:	int3   
   140002ef3:	int3   
   140002ef4:	sub    rsp,0x38
   140002ef8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002f01:	call   0x140003730
   140002f06:	nop
   140002f07:	jmp    0x140002f0e
   140002f09:	mov    rax,QWORD PTR [rsp+0x50]
   140002f0e:	add    rsp,0x38
   140002f12:	ret    
   140002f13:	int3   
   140002f14:	int3   
   140002f15:	int3   
   140002f16:	int3   
   140002f17:	int3   
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	sub    rsp,0x28
   140002f24:	mov    rax,QWORD PTR [rcx]
   140002f27:	cmp    DWORD PTR [rax],0xe06d7363
   140002f2d:	jne    0x140002f52
   140002f2f:	cmp    DWORD PTR [rax+0x18],0x4
   140002f33:	jne    0x140002f52
   140002f35:	mov    ecx,DWORD PTR [rax+0x20]
   140002f38:	lea    eax,[rcx-0x19930520]
   140002f3e:	cmp    eax,0x2
   140002f41:	jbe    0x140002f4b
   140002f43:	cmp    ecx,0x1994000
   140002f49:	jne    0x140002f52
   140002f4b:	call   QWORD PTR [rip+0x244f]        # 0x1400053a0
   140002f51:	int3   
   140002f52:	xor    eax,eax
   140002f54:	add    rsp,0x28
   140002f58:	ret    
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	sub    rsp,0x28
   140002f64:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140002f20
   140002f6b:	call   QWORD PTR [rip+0x216f]        # 0x1400050e0
   140002f71:	xor    eax,eax
   140002f73:	add    rsp,0x28
   140002f77:	ret    
   140002f78:	int3   
   140002f79:	int3   
   140002f7a:	int3   
   140002f7b:	int3   
   140002f7c:	int3   
   140002f7d:	int3   
   140002f7e:	jmp    QWORD PTR [rip+0x244c]        # 0x1400053d0
   140002f84:	int3   
   140002f85:	int3   
   140002f86:	int3   
   140002f87:	int3   
   140002f88:	int3   
   140002f89:	int3   
   140002f8a:	int3   
   140002f8b:	int3   
   140002f8c:	sub    rsp,0x18
   140002f90:	xor    edx,edx
   140002f92:	lea    rax,[rcx-0x1]
   140002f96:	cmp    rax,0xfffffffffffffffd
   140002f9a:	ja     0x140002fd8
   140002f9c:	mov    eax,0x5a4d
   140002fa1:	cmp    WORD PTR [rcx],ax
   140002fa4:	jne    0x140002fd0
   140002fa6:	cmp    DWORD PTR [rcx+0x3c],edx
   140002fa9:	jl     0x140002fd0
   140002fab:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140002fb2:	jae    0x140002fd0
   140002fb4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140002fb8:	add    rax,rcx
   140002fbb:	mov    QWORD PTR [rsp],rax
   140002fbf:	cmp    DWORD PTR [rax],0x4550
   140002fc5:	cmovne rax,rdx
   140002fc9:	mov    rdx,rax
   140002fcc:	mov    QWORD PTR [rsp],rax
   140002fd0:	jmp    0x140002fd8
   140002fd2:	xor    edx,edx
   140002fd4:	mov    QWORD PTR [rsp],rdx
   140002fd8:	mov    rax,rdx
   140002fdb:	add    rsp,0x18
   140002fdf:	ret    
   140002fe0:	int3   
   140002fe1:	int3   
   140002fe2:	int3   
   140002fe3:	int3   
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	rex push rbx
   140002fea:	sub    rsp,0x20
   140002fee:	mov    ebx,ecx
   140002ff0:	xor    ecx,ecx
   140002ff2:	call   QWORD PTR [rip+0x2160]        # 0x140005158
   140002ff8:	test   rax,rax
   140002ffb:	je     0x140003025
   140002ffd:	mov    rcx,rax
   140003000:	call   0x140002f8c
   140003005:	test   rax,rax
   140003008:	je     0x140003025
   14000300a:	mov    ecx,0x2
   14000300f:	cmp    WORD PTR [rax+0x5c],cx
   140003013:	jne    0x140003019
   140003015:	mov    eax,ecx
   140003017:	jmp    0x140003027
   140003019:	cmp    WORD PTR [rax+0x5c],0x3
   14000301e:	mov    eax,0x1
   140003023:	je     0x140003027
   140003025:	mov    eax,ebx
   140003027:	add    rsp,0x20
   14000302b:	pop    rbx
   14000302c:	ret    
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	int3   
   140003031:	int3   
   140003032:	int3   
   140003033:	int3   
   140003034:	jmp    QWORD PTR [rip+0x238e]        # 0x1400053c8
   14000303a:	int3   
   14000303b:	int3   
   14000303c:	int3   
   14000303d:	int3   
   14000303e:	int3   
   14000303f:	int3   
   140003040:	xor    eax,eax
   140003042:	ret    
   140003043:	int3   
   140003044:	int3   
   140003045:	int3   
   140003046:	int3   
   140003047:	int3   
   140003048:	int3   
   140003049:	int3   
   14000304a:	int3   
   14000304b:	int3   
   14000304c:	int3   
   14000304d:	int3   
   14000304e:	int3   
   14000304f:	int3   
   140003050:	movsxd r8,DWORD PTR [rcx+0x3c]
   140003054:	xor    r9d,r9d
   140003057:	add    r8,rcx
   14000305a:	mov    r10,rdx
   14000305d:	movzx  eax,WORD PTR [r8+0x14]
   140003062:	movzx  r11d,WORD PTR [r8+0x6]
   140003067:	add    rax,0x18
   14000306b:	add    rax,r8
   14000306e:	test   r11d,r11d
   140003071:	je     0x140003091
   140003073:	mov    edx,DWORD PTR [rax+0xc]
   140003076:	cmp    r10,rdx
   140003079:	jb     0x140003085
   14000307b:	mov    ecx,DWORD PTR [rax+0x8]
   14000307e:	add    ecx,edx
   140003080:	cmp    r10,rcx
   140003083:	jb     0x140003093
   140003085:	inc    r9d
   140003088:	add    rax,0x28
   14000308c:	cmp    r9d,r11d
   14000308f:	jb     0x140003073
   140003091:	xor    eax,eax
   140003093:	ret    
   140003094:	int3   
   140003095:	int3   
   140003096:	int3   
   140003097:	int3   
   140003098:	int3   
   140003099:	int3   
   14000309a:	int3   
   14000309b:	int3   
   14000309c:	int3   
   14000309d:	int3   
   14000309e:	int3   
   14000309f:	int3   
   1400030a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030a5:	push   rdi
   1400030a6:	sub    rsp,0x20
   1400030aa:	mov    rbx,rcx
   1400030ad:	lea    rdi,[rip+0xffffffffffffcf4c]        # 0x140000000
   1400030b4:	mov    rcx,rdi
   1400030b7:	call   0x140003100
   1400030bc:	test   eax,eax
   1400030be:	je     0x1400030e2
   1400030c0:	sub    rbx,rdi
   1400030c3:	mov    rdx,rbx
   1400030c6:	mov    rcx,rdi
   1400030c9:	call   0x140003050
   1400030ce:	test   rax,rax
   1400030d1:	je     0x1400030e2
   1400030d3:	mov    eax,DWORD PTR [rax+0x24]
   1400030d6:	shr    eax,0x1f
   1400030d9:	not    eax
   1400030db:	and    eax,0x1
   1400030de:	jmp    0x1400030e2
   1400030e0:	xor    eax,eax
   1400030e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400030e7:	add    rsp,0x20
   1400030eb:	pop    rdi
   1400030ec:	ret    
   1400030ed:	int3   
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	int3   
   1400030f1:	int3   
   1400030f2:	int3   
   1400030f3:	int3   
   1400030f4:	int3   
   1400030f5:	int3   
   1400030f6:	int3   
   1400030f7:	int3   
   1400030f8:	int3   
   1400030f9:	int3   
   1400030fa:	int3   
   1400030fb:	int3   
   1400030fc:	int3   
   1400030fd:	int3   
   1400030fe:	int3   
   1400030ff:	int3   
   140003100:	mov    rax,rcx
   140003103:	mov    ecx,0x5a4d
   140003108:	cmp    WORD PTR [rax],cx
   14000310b:	je     0x140003110
   14000310d:	xor    eax,eax
   14000310f:	ret    
   140003110:	movsxd rcx,DWORD PTR [rax+0x3c]
   140003114:	add    rcx,rax
   140003117:	xor    eax,eax
   140003119:	cmp    DWORD PTR [rcx],0x4550
   14000311f:	jne    0x14000312d
   140003121:	mov    edx,0x20b
   140003126:	cmp    WORD PTR [rcx+0x18],dx
   14000312a:	sete   al
   14000312d:	ret    
   14000312e:	int3   
   14000312f:	int3   
   140003130:	int3   
   140003131:	int3   
   140003132:	int3   
   140003133:	int3   
   140003134:	mov    QWORD PTR [rsp+0x20],rbx
   140003139:	push   rbp
   14000313a:	mov    rbp,rsp
   14000313d:	sub    rsp,0x20
   140003141:	and    QWORD PTR [rbp+0x18],0x0
   140003146:	movabs rbx,0x2b992ddfa232
   140003150:	mov    rax,QWORD PTR [rip+0x5eb1]        # 0x140009008
   140003157:	cmp    rax,rbx
   14000315a:	jne    0x1400031ef
   140003160:	lea    rcx,[rbp+0x18]
   140003164:	call   QWORD PTR [rip+0x2106]        # 0x140005270
   14000316a:	mov    rax,QWORD PTR [rbp+0x18]
   14000316e:	mov    QWORD PTR [rbp+0x10],rax
   140003172:	call   QWORD PTR [rip+0x2068]        # 0x1400051e0
   140003178:	mov    eax,eax
   14000317a:	xor    QWORD PTR [rbp+0x10],rax
   14000317e:	call   QWORD PTR [rip+0x2034]        # 0x1400051b8
   140003184:	mov    eax,eax
   140003186:	xor    QWORD PTR [rbp+0x10],rax
   14000318a:	call   QWORD PTR [rip+0x20e8]        # 0x140005278
   140003190:	mov    eax,eax
   140003192:	shl    rax,0x18
   140003196:	xor    QWORD PTR [rbp+0x10],rax
   14000319a:	call   QWORD PTR [rip+0x20d8]        # 0x140005278
   1400031a0:	mov    eax,eax
   1400031a2:	lea    rcx,[rbp+0x10]
   1400031a6:	xor    rax,QWORD PTR [rbp+0x10]
   1400031aa:	xor    rax,rcx
   1400031ad:	lea    rcx,[rbp+0x20]
   1400031b1:	mov    QWORD PTR [rbp+0x10],rax
   1400031b5:	call   QWORD PTR [rip+0x2035]        # 0x1400051f0
   1400031bb:	mov    eax,DWORD PTR [rbp+0x20]
   1400031be:	movabs rcx,0xffffffffffff
   1400031c8:	shl    rax,0x20
   1400031cc:	xor    rax,QWORD PTR [rbp+0x20]
   1400031d0:	xor    rax,QWORD PTR [rbp+0x10]
   1400031d4:	and    rax,rcx
   1400031d7:	movabs rcx,0x2b992ddfa233
   1400031e1:	cmp    rax,rbx
   1400031e4:	cmove  rax,rcx
   1400031e8:	mov    QWORD PTR [rip+0x5e19],rax        # 0x140009008
   1400031ef:	mov    rbx,QWORD PTR [rsp+0x48]
   1400031f4:	not    rax
   1400031f7:	mov    QWORD PTR [rip+0x5e12],rax        # 0x140009010
   1400031fe:	add    rsp,0x20
   140003202:	pop    rbp
   140003203:	ret    
   140003204:	int3   
   140003205:	int3   
   140003206:	int3   
   140003207:	int3   
   140003208:	int3   
   140003209:	int3   
   14000320a:	jmp    QWORD PTR [rip+0x2138]        # 0x140005348
   140003210:	int3   
   140003211:	int3   
   140003212:	int3   
   140003213:	int3   
   140003214:	int3   
   140003215:	int3   
   140003216:	jmp    QWORD PTR [rip+0x2134]        # 0x140005350
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	int3   
   140003221:	int3   
   140003222:	int3   
   140003223:	int3   
   140003224:	mov    QWORD PTR [rsp+0x8],rbx
   140003229:	push   rdi
   14000322a:	sub    rsp,0x20
   14000322e:	mov    rdi,rcx
   140003231:	mov    rax,QWORD PTR [rip+0x6578]        # 0x1400097b0
   140003238:	mov    QWORD PTR [rsp+0x38],rax
   14000323d:	cmp    rax,0xffffffffffffffff
   140003241:	jne    0x14000325a
   140003243:	mov    rbx,QWORD PTR [rip+0x2126]        # 0x140005370
   14000324a:	mov    rcx,rbx
   14000324d:	call   QWORD PTR [rip+0x21b5]        # 0x140005408
   140003253:	mov    rcx,rdi
   140003256:	call   rbx
   140003258:	jmp    0x1400032b7
   14000325a:	mov    ecx,0x8
   14000325f:	call   0x1400034c4
   140003264:	nop
   140003265:	mov    rax,QWORD PTR [rip+0x6544]        # 0x1400097b0
   14000326c:	mov    QWORD PTR [rsp+0x38],rax
   140003271:	mov    rax,QWORD PTR [rip+0x6530]        # 0x1400097a8
   140003278:	mov    QWORD PTR [rsp+0x40],rax
   14000327d:	lea    r8,[rsp+0x40]
   140003282:	lea    rdx,[rsp+0x38]
   140003287:	mov    rcx,rdi
   14000328a:	call   0x1400034dc
   14000328f:	mov    rbx,rax
   140003292:	mov    rdx,QWORD PTR [rsp+0x38]
   140003297:	mov    QWORD PTR [rip+0x6512],rdx        # 0x1400097b0
   14000329e:	mov    rdx,QWORD PTR [rsp+0x40]
   1400032a3:	mov    QWORD PTR [rip+0x64fe],rdx        # 0x1400097a8
   1400032aa:	mov    ecx,0x8
   1400032af:	call   0x1400034d0
   1400032b4:	mov    rax,rbx
   1400032b7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032bc:	add    rsp,0x20
   1400032c0:	pop    rdi
   1400032c1:	ret    
   1400032c2:	int3   
   1400032c3:	int3   
   1400032c4:	int3   
   1400032c5:	int3   
   1400032c6:	int3   
   1400032c7:	int3   
   1400032c8:	sub    rsp,0x28
   1400032cc:	call   0x140003224
   1400032d1:	neg    rax
   1400032d4:	sbb    eax,eax
   1400032d6:	neg    eax
   1400032d8:	dec    eax
   1400032da:	add    rsp,0x28
   1400032de:	ret    
   1400032df:	int3   
   1400032e0:	int3   
   1400032e1:	int3   
   1400032e2:	int3   
   1400032e3:	int3   
   1400032e4:	int3   
   1400032e5:	int3   
   1400032e6:	int3   
   1400032e7:	int3   
   1400032e8:	int3   
   1400032e9:	int3   
   1400032ea:	int3   
   1400032eb:	int3   
   1400032ec:	int3   
   1400032ed:	int3   
   1400032ee:	int3   
   1400032ef:	int3   
   1400032f0:	ret    0x0
   1400032f3:	int3   
   1400032f4:	int3   
   1400032f5:	int3   
   1400032f6:	int3   
   1400032f7:	int3   
   1400032f8:	int3   
   1400032f9:	int3   
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	rex push rbx
   1400032fe:	sub    rsp,0x20
   140003302:	mov    rbx,rcx
   140003305:	xor    ecx,ecx
   140003307:	call   QWORD PTR [rip+0x1dd3]        # 0x1400050e0
   14000330d:	mov    rcx,rbx
   140003310:	call   QWORD PTR [rip+0x1dd2]        # 0x1400050e8
   140003316:	call   QWORD PTR [rip+0x1eb4]        # 0x1400051d0
   14000331c:	mov    rcx,rax
   14000331f:	mov    edx,0xc0000409
   140003324:	add    rsp,0x20
   140003328:	pop    rbx
   140003329:	rex.W jmp QWORD PTR [rip+0x1e80]        # 0x1400051b0
   140003330:	int3   
   140003331:	int3   
   140003332:	int3   
   140003333:	int3   
   140003334:	int3   
   140003335:	int3   
   140003336:	int3   
   140003337:	int3   
   140003338:	int3   
   140003339:	int3   
   14000333a:	int3   
   14000333b:	int3   
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	mov    QWORD PTR [rsp+0x8],rcx
   140003345:	sub    rsp,0x88
   14000334c:	lea    rcx,[rip+0x5f0d]        # 0x140009260
   140003353:	call   QWORD PTR [rip+0x1ec7]        # 0x140005220
   140003359:	mov    rax,QWORD PTR [rip+0x5ff8]        # 0x140009358
   140003360:	mov    QWORD PTR [rsp+0x48],rax
   140003365:	xor    r8d,r8d
   140003368:	lea    rdx,[rsp+0x50]
   14000336d:	mov    rcx,QWORD PTR [rsp+0x48]
   140003372:	call   QWORD PTR [rip+0x1eb0]        # 0x140005228
   140003378:	mov    QWORD PTR [rsp+0x40],rax
   14000337d:	cmp    QWORD PTR [rsp+0x40],0x0
   140003383:	je     0x1400033c7
   140003385:	mov    QWORD PTR [rsp+0x38],0x0
   14000338e:	lea    rax,[rsp+0x58]
   140003393:	mov    QWORD PTR [rsp+0x30],rax
   140003398:	lea    rax,[rsp+0x60]
   14000339d:	mov    QWORD PTR [rsp+0x28],rax
   1400033a2:	lea    rax,[rip+0x5eb7]        # 0x140009260
   1400033a9:	mov    QWORD PTR [rsp+0x20],rax
   1400033ae:	mov    r9,QWORD PTR [rsp+0x40]
   1400033b3:	mov    r8,QWORD PTR [rsp+0x48]
   1400033b8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400033bd:	xor    ecx,ecx
   1400033bf:	call   QWORD PTR [rip+0x1e6b]        # 0x140005230
   1400033c5:	jmp    0x1400033ea
   1400033c7:	mov    rax,QWORD PTR [rip+0x5f2a]        # 0x1400092f8
   1400033ce:	mov    rax,QWORD PTR [rax]
   1400033d1:	mov    QWORD PTR [rip+0x5f80],rax        # 0x140009358
   1400033d8:	mov    rax,QWORD PTR [rip+0x5f19]        # 0x1400092f8
   1400033df:	add    rax,0x8
   1400033e3:	mov    QWORD PTR [rip+0x5f0e],rax        # 0x1400092f8
   1400033ea:	mov    rax,QWORD PTR [rip+0x5f67]        # 0x140009358
   1400033f1:	mov    QWORD PTR [rip+0x5dd8],rax        # 0x1400091d0
   1400033f8:	mov    rax,QWORD PTR [rsp+0x90]
   140003400:	mov    QWORD PTR [rip+0x5ed9],rax        # 0x1400092e0
   140003407:	mov    DWORD PTR [rip+0x5daf],0xc0000409        # 0x1400091c0
   140003411:	mov    DWORD PTR [rip+0x5da9],0x1        # 0x1400091c4
   14000341b:	mov    DWORD PTR [rip+0x5db3],0x3        # 0x1400091d8
   140003425:	mov    eax,0x8
   14000342a:	imul   rax,rax,0x0
   14000342e:	lea    rcx,[rip+0x5dab]        # 0x1400091e0
   140003435:	mov    QWORD PTR [rcx+rax*1],0x2
   14000343d:	mov    eax,0x8
   140003442:	imul   rax,rax,0x1
   140003446:	lea    rcx,[rip+0x5d93]        # 0x1400091e0
   14000344d:	mov    rdx,QWORD PTR [rip+0x5bb4]        # 0x140009008
   140003454:	mov    QWORD PTR [rcx+rax*1],rdx
   140003458:	mov    eax,0x8
   14000345d:	imul   rax,rax,0x2
   140003461:	lea    rcx,[rip+0x5d78]        # 0x1400091e0
   140003468:	mov    rdx,QWORD PTR [rip+0x5ba1]        # 0x140009010
   14000346f:	mov    QWORD PTR [rcx+rax*1],rdx
   140003473:	mov    eax,0x8
   140003478:	imul   rax,rax,0x0
   14000347c:	mov    rcx,QWORD PTR [rip+0x5b85]        # 0x140009008
   140003483:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140003488:	mov    eax,0x8
   14000348d:	imul   rax,rax,0x1
   140003491:	mov    rcx,QWORD PTR [rip+0x5b78]        # 0x140009010
   140003498:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000349d:	lea    rcx,[rip+0x20a4]        # 0x140005548
   1400034a4:	call   0x1400032fc
   1400034a9:	add    rsp,0x88
   1400034b0:	ret    
   1400034b1:	int3   
   1400034b2:	int3   
   1400034b3:	int3   
   1400034b4:	int3   
   1400034b5:	int3   
   1400034b6:	int3   
   1400034b7:	int3   
   1400034b8:	jmp    QWORD PTR [rip+0x1f1a]        # 0x1400053d8
   1400034be:	int3   
   1400034bf:	int3   
   1400034c0:	int3   
   1400034c1:	int3   
   1400034c2:	int3   
   1400034c3:	int3   
   1400034c4:	jmp    QWORD PTR [rip+0x1ece]        # 0x140005398
   1400034ca:	int3   
   1400034cb:	int3   
   1400034cc:	int3   
   1400034cd:	int3   
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	jmp    QWORD PTR [rip+0x1eaa]        # 0x140005380
   1400034d6:	int3   
   1400034d7:	int3   
   1400034d8:	int3   
   1400034d9:	int3   
   1400034da:	int3   
   1400034db:	int3   
   1400034dc:	jmp    QWORD PTR [rip+0x1e96]        # 0x140005378
   1400034e2:	int3   
   1400034e3:	int3   
   1400034e4:	int3   
   1400034e5:	int3   
   1400034e6:	int3   
   1400034e7:	int3   
   1400034e8:	int3   
   1400034e9:	int3   
   1400034ea:	int3   
   1400034eb:	int3   
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	int3   
   1400034f1:	int3   
   1400034f2:	int3   
   1400034f3:	int3   
   1400034f4:	int3   
   1400034f5:	int3   
   1400034f6:	int3   
   1400034f7:	int3   
   1400034f8:	sub    rsp,0x28
   1400034fc:	mov    ecx,DWORD PTR [rip+0x622e]        # 0x140009730
   140003502:	cmp    ecx,0x1
   140003505:	jne    0x14000350b
   140003507:	mov    al,cl
   140003509:	jmp    0x140003541
   14000350b:	cmp    ecx,0x2
   14000350e:	jne    0x140003514
   140003510:	xor    al,al
   140003512:	jmp    0x140003541
   140003514:	lea    rdx,[rsp+0x30]
   140003519:	mov    BYTE PTR [rsp+0x30],0x0
   14000351e:	lea    rcx,[rip+0x2033]        # 0x140005558
   140003525:	call   0x140004180
   14000352a:	test   eax,eax
   14000352c:	js     0x140003510
   14000352e:	mov    al,BYTE PTR [rsp+0x30]
   140003532:	mov    cl,al
   140003534:	neg    cl
   140003536:	sbb    edx,edx
   140003538:	add    edx,0x2
   14000353b:	mov    DWORD PTR [rip+0x61ef],edx        # 0x140009730
   140003541:	add    rsp,0x28
   140003545:	ret    
   140003546:	int3   
   140003547:	int3   
   140003548:	int3   
   140003549:	int3   
   14000354a:	int3   
   14000354b:	int3   
   14000354c:	int3   
   14000354d:	int3   
   14000354e:	int3   
   14000354f:	int3   
   140003550:	lea    rax,[rip+0x7ab9]        # 0x14000b010
   140003557:	jmp    0x140003570
   14000355c:	int3   
   14000355d:	int3   
   14000355e:	int3   
   14000355f:	int3   
   140003560:	int3   
   140003561:	int3   
   140003562:	int3   
   140003563:	int3   
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	int3   
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	mov    QWORD PTR [rsp+0x8],rcx
   140003575:	mov    QWORD PTR [rsp+0x10],rdx
   14000357a:	mov    QWORD PTR [rsp+0x18],r8
   14000357f:	mov    QWORD PTR [rsp+0x20],r9
   140003584:	sub    rsp,0x68
   140003588:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000358e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140003594:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000359a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400035a0:	mov    rdx,rax
   1400035a3:	lea    rcx,[rip+0x446e]        # 0x140007a18
   1400035aa:	call   0x140002ad0
   1400035af:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400035b5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400035bb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   1400035c1:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   1400035c7:	mov    rcx,QWORD PTR [rsp+0x70]
   1400035cc:	mov    rdx,QWORD PTR [rsp+0x78]
   1400035d1:	mov    r8,QWORD PTR [rsp+0x80]
   1400035d9:	mov    r9,QWORD PTR [rsp+0x88]
   1400035e1:	add    rsp,0x68
   1400035e5:	jmp    0x1400035e7
   1400035e7:	jmp    rax
   1400035e9:	int3   
   1400035ea:	int3   
   1400035eb:	int3   
   1400035ec:	int3   
   1400035ed:	int3   
   1400035ee:	int3   
   1400035ef:	int3   
   1400035f0:	lea    rax,[rip+0x7a29]        # 0x14000b020
   1400035f7:	jmp    0x140003610
   1400035fc:	int3   
   1400035fd:	int3   
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	int3   
   140003601:	int3   
   140003602:	int3   
   140003603:	int3   
   140003604:	int3   
   140003605:	int3   
   140003606:	int3   
   140003607:	int3   
   140003608:	int3   
   140003609:	int3   
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	mov    QWORD PTR [rsp+0x8],rcx
   140003615:	mov    QWORD PTR [rsp+0x10],rdx
   14000361a:	mov    QWORD PTR [rsp+0x18],r8
   14000361f:	mov    QWORD PTR [rsp+0x20],r9
   140003624:	sub    rsp,0x68
   140003628:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000362e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140003634:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000363a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140003640:	mov    rdx,rax
   140003643:	lea    rcx,[rip+0x43ee]        # 0x140007a38
   14000364a:	call   0x140002ad0
   14000364f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140003655:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000365b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140003661:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140003667:	mov    rcx,QWORD PTR [rsp+0x70]
   14000366c:	mov    rdx,QWORD PTR [rsp+0x78]
   140003671:	mov    r8,QWORD PTR [rsp+0x80]
   140003679:	mov    r9,QWORD PTR [rsp+0x88]
   140003681:	add    rsp,0x68
   140003685:	jmp    0x140003687
   140003687:	jmp    rax
   140003689:	int3   
   14000368a:	int3   
   14000368b:	int3   
   14000368c:	int3   
   14000368d:	int3   
   14000368e:	int3   
   14000368f:	int3   
   140003690:	lea    rax,[rip+0x7969]        # 0x14000b000
   140003697:	jmp    0x1400036b0
   14000369c:	int3   
   14000369d:	int3   
   14000369e:	int3   
   14000369f:	int3   
   1400036a0:	int3   
   1400036a1:	int3   
   1400036a2:	int3   
   1400036a3:	int3   
   1400036a4:	int3   
   1400036a5:	int3   
   1400036a6:	int3   
   1400036a7:	int3   
   1400036a8:	int3   
   1400036a9:	int3   
   1400036aa:	int3   
   1400036ab:	int3   
   1400036ac:	int3   
   1400036ad:	int3   
   1400036ae:	int3   
   1400036af:	int3   
   1400036b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400036b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400036ba:	mov    QWORD PTR [rsp+0x18],r8
   1400036bf:	mov    QWORD PTR [rsp+0x20],r9
   1400036c4:	sub    rsp,0x68
   1400036c8:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400036ce:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   1400036d4:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   1400036da:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   1400036e0:	mov    rdx,rax
   1400036e3:	lea    rcx,[rip+0x436e]        # 0x140007a58
   1400036ea:	call   0x140002ad0
   1400036ef:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   1400036f5:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   1400036fb:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140003701:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140003707:	mov    rcx,QWORD PTR [rsp+0x70]
   14000370c:	mov    rdx,QWORD PTR [rsp+0x78]
   140003711:	mov    r8,QWORD PTR [rsp+0x80]
   140003719:	mov    r9,QWORD PTR [rsp+0x88]
   140003721:	add    rsp,0x68
   140003725:	jmp    0x140003727
   140003727:	jmp    rax
   140003729:	int3   
   14000372a:	int3   
   14000372b:	int3   
   14000372c:	int3   
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	rex push rbx
   140003732:	sub    rsp,0x20
   140003736:	mov    rbx,rcx
   140003739:	jmp    0x14000374a
   14000373b:	mov    rcx,rbx
   14000373e:	call   0x14000409e
   140003743:	test   eax,eax
   140003745:	je     0x14000375b
   140003747:	mov    rcx,rbx
   14000374a:	call   QWORD PTR [rip+0x1be0]        # 0x140005330
   140003750:	test   rax,rax
   140003753:	je     0x14000373b
   140003755:	add    rsp,0x20
   140003759:	pop    rbx
   14000375a:	ret    
   14000375b:	call   0x140003a70
   140003760:	int3   
   140003761:	int3   
   140003762:	int3   
   140003763:	int3   
   140003764:	int3   
   140003765:	int3   
   140003766:	int3   
   140003767:	int3   
   140003768:	rex push rbx
   14000376a:	sub    rsp,0x20
   14000376e:	mov    rbx,rcx
   140003771:	call   0x1400040e0
   140003776:	lea    rax,[rip+0x1ef3]        # 0x140005670
   14000377d:	mov    QWORD PTR [rbx],rax
   140003780:	mov    rax,rbx
   140003783:	add    rsp,0x20
   140003787:	pop    rbx
   140003788:	ret    
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	int3   
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	rex push rbx
   140003792:	sub    rsp,0x20
   140003796:	lea    rax,[rip+0x1d73]        # 0x140005510
   14000379d:	mov    r8d,0x1
   1400037a3:	lea    rdx,[rsp+0x30]
   1400037a8:	mov    QWORD PTR [rsp+0x30],rax
   1400037ad:	mov    rbx,rcx
   1400037b0:	call   0x1400040d4
   1400037b5:	lea    rax,[rip+0x1eb4]        # 0x140005670
   1400037bc:	mov    QWORD PTR [rbx],rax
   1400037bf:	mov    rax,rbx
   1400037c2:	add    rsp,0x20
   1400037c6:	pop    rbx
   1400037c7:	ret    
   1400037c8:	int3   
   1400037c9:	int3   
   1400037ca:	int3   
   1400037cb:	int3   
   1400037cc:	int3   
   1400037cd:	int3   
   1400037ce:	int3   
   1400037cf:	int3   
   1400037d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400037d5:	push   rbx
   1400037d6:	sub    rsp,0x20
   1400037da:	mov    QWORD PTR [rsp+0x30],rdx
   1400037df:	mov    rbx,rcx
   1400037e2:	lea    rdx,[rsp+0x30]
   1400037e7:	call   0x1400040c8
   1400037ec:	lea    rax,[rip+0x1e8d]        # 0x140005680
   1400037f3:	mov    QWORD PTR [rbx],rax
   1400037f6:	mov    rax,rbx
   1400037f9:	add    rsp,0x20
   1400037fd:	pop    rbx
   1400037fe:	ret    
   1400037ff:	int3   
   140003800:	int3   
   140003801:	int3   
   140003802:	int3   
   140003803:	int3   
   140003804:	int3   
   140003805:	int3   
   140003806:	int3   
   140003807:	int3   
   140003808:	rex push rbx
   14000380a:	sub    rsp,0x20
   14000380e:	mov    rbx,rcx
   140003811:	call   0x1400040e0
   140003816:	lea    rax,[rip+0x1e63]        # 0x140005680
   14000381d:	mov    QWORD PTR [rbx],rax
   140003820:	mov    rax,rbx
   140003823:	add    rsp,0x20
   140003827:	pop    rbx
   140003828:	ret    
   140003829:	int3   
   14000382a:	int3   
   14000382b:	int3   
   14000382c:	int3   
   14000382d:	int3   
   14000382e:	int3   
   14000382f:	int3   
   140003830:	lea    rax,[rip+0x1e39]        # 0x140005670
   140003837:	mov    QWORD PTR [rcx],rax
   14000383a:	jmp    0x1400040ec
   14000383f:	int3   
   140003840:	int3   
   140003841:	int3   
   140003842:	int3   
   140003843:	int3   
   140003844:	int3   
   140003845:	int3   
   140003846:	int3   
   140003847:	int3   
   140003848:	jmp    0x1400040ec
   14000384d:	int3   
   14000384e:	int3   
   14000384f:	int3   
   140003850:	int3   
   140003851:	int3   
   140003852:	int3   
   140003853:	int3   
   140003854:	int3   
   140003855:	int3   
   140003856:	int3   
   140003857:	int3   
   140003858:	int3   
   140003859:	int3   
   14000385a:	int3   
   14000385b:	int3   
   14000385c:	int3   
   14000385d:	int3   
   14000385e:	int3   
   14000385f:	int3   
   140003860:	rex push rbx
   140003862:	sub    rsp,0x20
   140003866:	lea    rax,[rip+0x1e23]        # 0x140005690
   14000386d:	mov    rbx,rcx
   140003870:	mov    QWORD PTR [rcx],rax
   140003873:	test   dl,0x1
   140003876:	je     0x14000387d
   140003878:	call   0x140002eb4
   14000387d:	mov    rax,rbx
   140003880:	add    rsp,0x20
   140003884:	pop    rbx
   140003885:	ret    
   140003886:	int3   
   140003887:	int3   
   140003888:	int3   
   140003889:	int3   
   14000388a:	int3   
   14000388b:	int3   
   14000388c:	int3   
   14000388d:	int3   
   14000388e:	int3   
   14000388f:	int3   
   140003890:	mov    QWORD PTR [rsp+0x8],rbx
   140003895:	push   rdi
   140003896:	sub    rsp,0x20
   14000389a:	lea    rax,[rip+0x1dcf]        # 0x140005670
   1400038a1:	mov    ebx,edx
   1400038a3:	mov    QWORD PTR [rcx],rax
   1400038a6:	mov    rdi,rcx
   1400038a9:	call   0x1400040ec
   1400038ae:	test   bl,0x1
   1400038b1:	je     0x1400038bb
   1400038b3:	mov    rcx,rdi
   1400038b6:	call   0x140002eb4
   1400038bb:	mov    rax,rdi
   1400038be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038c3:	add    rsp,0x20
   1400038c7:	pop    rdi
   1400038c8:	ret    
   1400038c9:	int3   
   1400038ca:	int3   
   1400038cb:	int3   
   1400038cc:	int3   
   1400038cd:	int3   
   1400038ce:	int3   
   1400038cf:	int3   
   1400038d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400038d5:	push   rdi
   1400038d6:	sub    rsp,0x20
   1400038da:	mov    ebx,edx
   1400038dc:	mov    rdi,rcx
   1400038df:	call   0x1400040ec
   1400038e4:	test   bl,0x1
   1400038e7:	je     0x1400038f1
   1400038e9:	mov    rcx,rdi
   1400038ec:	call   0x140002eb4
   1400038f1:	mov    rax,rdi
   1400038f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400038f9:	add    rsp,0x20
   1400038fd:	pop    rdi
   1400038fe:	ret    
   1400038ff:	int3   
   140003900:	int3   
   140003901:	int3   
   140003902:	int3   
   140003903:	int3   
   140003904:	int3   
   140003905:	int3   
   140003906:	int3   
   140003907:	int3   
   140003908:	mov    rax,rsp
   14000390b:	mov    QWORD PTR [rax+0x18],r8
   14000390f:	mov    QWORD PTR [rax+0x10],rdx
   140003913:	mov    QWORD PTR [rax+0x8],rcx
   140003917:	push   rbx
   140003918:	push   rsi
   140003919:	push   rdi
   14000391a:	push   r14
   14000391c:	sub    rsp,0x38
   140003920:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140003928:	mov    rsi,r8
   14000392b:	mov    rbx,rcx
   14000392e:	mov    rdi,rdx
   140003931:	or     rdi,0xf
   140003935:	mov    r9,0xfffffffffffffffe
   14000393c:	cmp    rdi,r9
   14000393f:	jbe    0x140003946
   140003941:	mov    rdi,rdx
   140003944:	jmp    0x140003977
   140003946:	mov    r8,QWORD PTR [rcx+0x18]
   14000394a:	mov    rcx,r8
   14000394d:	shr    rcx,1
   140003950:	movabs rax,0xaaaaaaaaaaaaaaab
   14000395a:	mul    rdi
   14000395d:	shr    rdx,1
   140003960:	cmp    rcx,rdx
   140003963:	jbe    0x140003977
   140003965:	mov    rax,r9
   140003968:	sub    rax,rcx
   14000396b:	cmp    r8,rax
   14000396e:	lea    rdi,[rcx+r8*1]
   140003972:	jbe    0x140003977
   140003974:	mov    rdi,r9
   140003977:	lea    rcx,[rdi+0x1]
   14000397b:	xor    r14d,r14d
   14000397e:	test   rcx,rcx
   140003981:	je     0x14000399c
   140003983:	cmp    rcx,0xffffffffffffffff
   140003987:	ja     0x140003996
   140003989:	call   0x140003730
   14000398e:	mov    r14,rax
   140003991:	test   rax,rax
   140003994:	jne    0x14000399c
   140003996:	call   0x140003a70
   14000399b:	nop
   14000399c:	jmp    0x1400039b2
   14000399e:	mov    rbx,QWORD PTR [rsp+0x60]
   1400039a3:	mov    rsi,QWORD PTR [rsp+0x70]
   1400039a8:	mov    rdi,QWORD PTR [rsp+0x68]
   1400039ad:	mov    r14,QWORD PTR [rsp+0x78]
   1400039b2:	test   rsi,rsi
   1400039b5:	je     0x1400039d6
   1400039b7:	cmp    QWORD PTR [rbx+0x18],0x10
   1400039bc:	jb     0x1400039c3
   1400039be:	mov    rdx,QWORD PTR [rbx]
   1400039c1:	jmp    0x1400039c6
   1400039c3:	mov    rdx,rbx
   1400039c6:	test   rsi,rsi
   1400039c9:	je     0x1400039d6
   1400039cb:	mov    r8,rsi
   1400039ce:	mov    rcx,r14
   1400039d1:	call   0x140004118
   1400039d6:	cmp    QWORD PTR [rbx+0x18],0x10
   1400039db:	jb     0x1400039e5
   1400039dd:	mov    rcx,QWORD PTR [rbx]
   1400039e0:	call   0x140002eb4
   1400039e5:	mov    BYTE PTR [rbx],0x0
   1400039e8:	mov    QWORD PTR [rbx],r14
   1400039eb:	mov    QWORD PTR [rbx+0x18],rdi
   1400039ef:	mov    QWORD PTR [rbx+0x10],rsi
   1400039f3:	cmp    rdi,0x10
   1400039f7:	jb     0x1400039fc
   1400039f9:	mov    rbx,r14
   1400039fc:	mov    BYTE PTR [rbx+rsi*1],0x0
   140003a00:	add    rsp,0x38
   140003a04:	pop    r14
   140003a06:	pop    rdi
   140003a07:	pop    rsi
   140003a08:	pop    rbx
   140003a09:	ret    
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	int3   
   140003a0d:	int3   
   140003a0e:	int3   
   140003a0f:	int3   
   140003a10:	mov    QWORD PTR [rsp+0x8],rbx
   140003a15:	mov    QWORD PTR [rsp+0x10],rsi
   140003a1a:	push   rdi
   140003a1b:	sub    rsp,0x20
   140003a1f:	mov    rdi,r8
   140003a22:	mov    rbx,rcx
   140003a25:	test   dl,dl
   140003a27:	je     0x140003a48
   140003a29:	cmp    QWORD PTR [rcx+0x18],0x10
   140003a2e:	jb     0x140003a48
   140003a30:	mov    rsi,QWORD PTR [rcx]
   140003a33:	test   r8,r8
   140003a36:	je     0x140003a40
   140003a38:	mov    rdx,rsi
   140003a3b:	call   0x140004118
   140003a40:	mov    rcx,rsi
   140003a43:	call   0x140002eb4
   140003a48:	mov    rsi,QWORD PTR [rsp+0x38]
   140003a4d:	mov    QWORD PTR [rbx+0x18],0xf
   140003a55:	mov    QWORD PTR [rbx+0x10],rdi
   140003a59:	mov    BYTE PTR [rdi+rbx*1],0x0
   140003a5d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a62:	add    rsp,0x20
   140003a66:	pop    rdi
   140003a67:	ret    
   140003a68:	int3   
   140003a69:	int3   
   140003a6a:	int3   
   140003a6b:	int3   
   140003a6c:	int3   
   140003a6d:	int3   
   140003a6e:	int3   
   140003a6f:	int3   
   140003a70:	sub    rsp,0x48
   140003a74:	lea    rcx,[rsp+0x20]
   140003a79:	call   0x140003790
   140003a7e:	lea    rdx,[rip+0x3e13]        # 0x140007898
   140003a85:	lea    rcx,[rsp+0x20]
   140003a8a:	call   0x14000410c
   140003a8f:	int3   
   140003a90:	int3   
   140003a91:	int3   
   140003a92:	int3   
   140003a93:	int3   
   140003a94:	int3   
   140003a95:	int3   
   140003a96:	int3   
   140003a97:	int3   
   140003a98:	sub    rsp,0x28
   140003a9c:	lea    rcx,[rip+0x1d0d]        # 0x1400057b0
   140003aa3:	call   0x140003ab0
   140003aa8:	int3   
   140003aa9:	int3   
   140003aaa:	int3   
   140003aab:	int3   
   140003aac:	int3   
   140003aad:	int3   
   140003aae:	int3   
   140003aaf:	int3   
   140003ab0:	sub    rsp,0x48
   140003ab4:	mov    rdx,rcx
   140003ab7:	lea    rcx,[rsp+0x20]
   140003abc:	call   0x1400037d0
   140003ac1:	lea    rdx,[rip+0x3e80]        # 0x140007948
   140003ac8:	lea    rcx,[rsp+0x20]
   140003acd:	call   0x14000410c
   140003ad2:	int3   
   140003ad3:	int3   
   140003ad4:	int3   
   140003ad5:	int3   
   140003ad6:	int3   
   140003ad7:	int3   
   140003ad8:	int3   
   140003ad9:	int3   
   140003ada:	int3   
   140003adb:	int3   
   140003adc:	sub    rsp,0x48
   140003ae0:	mov    rdx,rcx
   140003ae3:	lea    rcx,[rsp+0x20]
   140003ae8:	call   0x1400037d0
   140003aed:	lea    rdx,[rip+0x3ebc]        # 0x1400079b0
   140003af4:	lea    rcx,[rsp+0x20]
   140003af9:	call   0x14000410c
   140003afe:	int3   
   140003aff:	int3   
   140003b00:	int3   
   140003b01:	int3   
   140003b02:	int3   
   140003b03:	int3   
   140003b04:	int3   
   140003b05:	int3   
   140003b06:	int3   
   140003b07:	int3   
   140003b08:	sub    rsp,0x28
   140003b0c:	lea    rcx,[rip+0x1c85]        # 0x140005798
   140003b13:	call   0x140003adc
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	mov    QWORD PTR [rsp+0x8],rbx
   140003b25:	mov    QWORD PTR [rsp+0x10],rbp
   140003b2a:	mov    QWORD PTR [rsp+0x18],rsi
   140003b2f:	push   rdi
   140003b30:	sub    rsp,0x20
   140003b34:	mov    rdi,QWORD PTR [rdx+0x10]
   140003b38:	mov    rbp,r8
   140003b3b:	mov    rsi,rdx
   140003b3e:	mov    rbx,rcx
   140003b41:	cmp    rdi,r8
   140003b44:	jb     0x140003c1c
   140003b4a:	sub    rdi,r8
   140003b4d:	cmp    r9,rdi
   140003b50:	cmovb  rdi,r9
   140003b54:	cmp    rcx,rdx
   140003b57:	jne    0x140003b85
   140003b59:	lea    rax,[rdi+r8*1]
   140003b5d:	cmp    QWORD PTR [rcx+0x10],rax
   140003b61:	jb     0x140003c22
   140003b67:	cmp    QWORD PTR [rcx+0x18],0x10
   140003b6c:	mov    QWORD PTR [rcx+0x10],rax
   140003b70:	jb     0x140003b75
   140003b72:	mov    rcx,QWORD PTR [rcx]
   140003b75:	mov    BYTE PTR [rcx+rax*1],0x0
   140003b79:	xor    edx,edx
   140003b7b:	mov    rcx,rbx
   140003b7e:	call   0x140003e40
   140003b83:	jmp    0x140003c04
   140003b85:	cmp    rdi,0xfffffffffffffffe
   140003b89:	ja     0x140003c28
   140003b8f:	cmp    QWORD PTR [rcx+0x18],rdi
   140003b93:	jae    0x140003ba3
   140003b95:	mov    r8,QWORD PTR [rcx+0x10]
   140003b99:	mov    rdx,rdi
   140003b9c:	call   0x140003908
   140003ba1:	jmp    0x140003bbe
   140003ba3:	test   rdi,rdi
   140003ba6:	jne    0x140003bc3
   140003ba8:	and    QWORD PTR [rcx+0x10],rdi
   140003bac:	cmp    QWORD PTR [rcx+0x18],0x10
   140003bb1:	jb     0x140003bb8
   140003bb3:	mov    rax,QWORD PTR [rcx]
   140003bb6:	jmp    0x140003bbb
   140003bb8:	mov    rax,rcx
   140003bbb:	mov    BYTE PTR [rax],0x0
   140003bbe:	test   rdi,rdi
   140003bc1:	je     0x140003c04
   140003bc3:	cmp    QWORD PTR [rsi+0x18],0x10
   140003bc8:	jb     0x140003bcd
   140003bca:	mov    rsi,QWORD PTR [rsi]
   140003bcd:	cmp    QWORD PTR [rbx+0x18],0x10
   140003bd2:	jb     0x140003bd9
   140003bd4:	mov    rcx,QWORD PTR [rbx]
   140003bd7:	jmp    0x140003bdc
   140003bd9:	mov    rcx,rbx
   140003bdc:	test   rdi,rdi
   140003bdf:	je     0x140003bed
   140003be1:	lea    rdx,[rsi+rbp*1]
   140003be5:	mov    r8,rdi
   140003be8:	call   0x140004118
   140003bed:	cmp    QWORD PTR [rbx+0x18],0x10
   140003bf2:	mov    QWORD PTR [rbx+0x10],rdi
   140003bf6:	jb     0x140003bfd
   140003bf8:	mov    rax,QWORD PTR [rbx]
   140003bfb:	jmp    0x140003c00
   140003bfd:	mov    rax,rbx
   140003c00:	mov    BYTE PTR [rax+rdi*1],0x0
   140003c04:	mov    rbp,QWORD PTR [rsp+0x38]
   140003c09:	mov    rax,rbx
   140003c0c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c11:	mov    rsi,QWORD PTR [rsp+0x40]
   140003c16:	add    rsp,0x20
   140003c1a:	pop    rdi
   140003c1b:	ret    
   140003c1c:	call   0x140003b08
   140003c21:	int3   
   140003c22:	call   0x140003b08
   140003c27:	int3   
   140003c28:	call   0x140003a98
   140003c2d:	int3   
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	int3   
   140003c31:	int3   
   140003c32:	int3   
   140003c33:	int3   
   140003c34:	mov    QWORD PTR [rsp+0x8],rbx
   140003c39:	mov    QWORD PTR [rsp+0x10],rsi
   140003c3e:	push   rdi
   140003c3f:	sub    rsp,0x20
   140003c43:	mov    rdi,r8
   140003c46:	mov    rsi,rdx
   140003c49:	mov    rbx,rcx
   140003c4c:	test   rdx,rdx
   140003c4f:	je     0x140003c9d
   140003c51:	cmp    QWORD PTR [rcx+0x18],0x10
   140003c56:	jb     0x140003c5d
   140003c58:	mov    rax,QWORD PTR [rcx]
   140003c5b:	jmp    0x140003c60
   140003c5d:	mov    rax,rcx
   140003c60:	cmp    rdx,rax
   140003c63:	jb     0x140003c9d
   140003c65:	cmp    QWORD PTR [rcx+0x18],0x10
   140003c6a:	jb     0x140003c6f
   140003c6c:	mov    rcx,QWORD PTR [rcx]
   140003c6f:	add    rcx,QWORD PTR [rbx+0x10]
   140003c73:	cmp    rcx,rdx
   140003c76:	jbe    0x140003c9d
   140003c78:	cmp    QWORD PTR [rbx+0x18],0x10
   140003c7d:	jb     0x140003c84
   140003c7f:	mov    rax,QWORD PTR [rbx]
   140003c82:	jmp    0x140003c87
   140003c84:	mov    rax,rbx
   140003c87:	sub    rsi,rax
   140003c8a:	mov    r9,r8
   140003c8d:	mov    r8,rsi
   140003c90:	mov    rdx,rbx
   140003c93:	mov    rcx,rbx
   140003c96:	call   0x140003b20
   140003c9b:	jmp    0x140003d17
   140003c9d:	cmp    r8,0xfffffffffffffffe
   140003ca1:	ja     0x140003d27
   140003ca7:	cmp    QWORD PTR [rbx+0x18],r8
   140003cab:	jae    0x140003cbe
   140003cad:	mov    r8,QWORD PTR [rbx+0x10]
   140003cb1:	mov    rdx,rdi
   140003cb4:	mov    rcx,rbx
   140003cb7:	call   0x140003908
   140003cbc:	jmp    0x140003cd9
   140003cbe:	test   r8,r8
   140003cc1:	jne    0x140003cd9
   140003cc3:	and    QWORD PTR [rbx+0x10],r8
   140003cc7:	cmp    QWORD PTR [rbx+0x18],0x10
   140003ccc:	jb     0x140003cd3
   140003cce:	mov    rax,QWORD PTR [rbx]
   140003cd1:	jmp    0x140003cd6
   140003cd3:	mov    rax,rbx
   140003cd6:	mov    BYTE PTR [rax],0x0
   140003cd9:	test   rdi,rdi
   140003cdc:	je     0x140003d14
   140003cde:	cmp    QWORD PTR [rbx+0x18],0x10
   140003ce3:	jb     0x140003cea
   140003ce5:	mov    rcx,QWORD PTR [rbx]
   140003ce8:	jmp    0x140003ced
   140003cea:	mov    rcx,rbx
   140003ced:	test   rdi,rdi
   140003cf0:	je     0x140003cfd
   140003cf2:	mov    r8,rdi
   140003cf5:	mov    rdx,rsi
   140003cf8:	call   0x140004118
   140003cfd:	cmp    QWORD PTR [rbx+0x18],0x10
   140003d02:	mov    QWORD PTR [rbx+0x10],rdi
   140003d06:	jb     0x140003d0d
   140003d08:	mov    rax,QWORD PTR [rbx]
   140003d0b:	jmp    0x140003d10
   140003d0d:	mov    rax,rbx
   140003d10:	mov    BYTE PTR [rax+rdi*1],0x0
   140003d14:	mov    rax,rbx
   140003d17:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d1c:	mov    rsi,QWORD PTR [rsp+0x38]
   140003d21:	add    rsp,0x20
   140003d25:	pop    rdi
   140003d26:	ret    
   140003d27:	mov    rcx,rbx
   140003d2a:	call   0x140003a98
   140003d2f:	int3   
   140003d30:	int3   
   140003d31:	int3   
   140003d32:	int3   
   140003d33:	int3   
   140003d34:	int3   
   140003d35:	int3   
   140003d36:	int3   
   140003d37:	int3   
   140003d38:	int3   
   140003d39:	int3   
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	mov    QWORD PTR [rsp+0x8],rbx
   140003d45:	push   rdi
   140003d46:	sub    rsp,0x20
   140003d4a:	mov    ecx,r8d
   140003d4d:	mov    edi,r8d
   140003d50:	mov    rbx,rdx
   140003d53:	call   0x140004040
   140003d58:	test   rax,rax
   140003d5b:	mov    DWORD PTR [rbx],edi
   140003d5d:	lea    rax,[rip+0x52bc]        # 0x140009020
   140003d64:	jne    0x140003d6d
   140003d66:	lea    rax,[rip+0x52c3]        # 0x140009030
   140003d6d:	mov    QWORD PTR [rbx+0x8],rax
   140003d71:	mov    rax,rbx
   140003d74:	mov    rbx,QWORD PTR [rsp+0x30]
   140003d79:	add    rsp,0x20
   140003d7d:	pop    rdi
   140003d7e:	ret    
   140003d7f:	int3   
   140003d80:	int3   
   140003d81:	int3   
   140003d82:	int3   
   140003d83:	int3   
   140003d84:	int3   
   140003d85:	int3   
   140003d86:	int3   
   140003d87:	int3   
   140003d88:	int3   
   140003d89:	int3   
   140003d8a:	int3   
   140003d8b:	int3   
   140003d8c:	int3   
   140003d8d:	int3   
   140003d8e:	int3   
   140003d8f:	int3   
   140003d90:	mov    DWORD PTR [rdx],r8d
   140003d93:	mov    rax,rdx
   140003d96:	mov    QWORD PTR [rdx+0x8],rcx
   140003d9a:	ret    
   140003d9b:	int3   
   140003d9c:	int3   
   140003d9d:	int3   
   140003d9e:	int3   
   140003d9f:	int3   
   140003da0:	int3   
   140003da1:	int3   
   140003da2:	int3   
   140003da3:	int3   
   140003da4:	int3   
   140003da5:	int3   
   140003da6:	int3   
   140003da7:	int3   
   140003da8:	int3   
   140003da9:	int3   
   140003daa:	int3   
   140003dab:	int3   
   140003dac:	int3   
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	cmp    rcx,QWORD PTR [rdx+0x8]
   140003db4:	jne    0x140003dc1
   140003db6:	cmp    DWORD PTR [rdx],r8d
   140003db9:	jne    0x140003dc1
   140003dbb:	mov    eax,0x1
   140003dc0:	ret    
   140003dc1:	xor    eax,eax
   140003dc3:	ret    
   140003dc4:	int3   
   140003dc5:	int3   
   140003dc6:	int3   
   140003dc7:	int3   
   140003dc8:	int3   
   140003dc9:	int3   
   140003dca:	int3   
   140003dcb:	int3   
   140003dcc:	int3   
   140003dcd:	int3   
   140003dce:	int3   
   140003dcf:	int3   
   140003dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140003dd5:	mov    QWORD PTR [rsp+0x10],rsi
   140003dda:	mov    QWORD PTR [rsp+0x18],rdi
   140003ddf:	push   r14
   140003de1:	sub    rsp,0x30
   140003de5:	mov    rax,QWORD PTR [rcx]
   140003de8:	mov    rsi,rcx
   140003deb:	mov    r14,r8
   140003dee:	mov    edi,edx
   140003df0:	mov    rbx,QWORD PTR [rax+0x18]
   140003df4:	mov    rcx,rbx
   140003df7:	call   QWORD PTR [rip+0x160b]        # 0x140005408
   140003dfd:	mov    r8d,edi
   140003e00:	lea    rdx,[rsp+0x20]
   140003e05:	mov    rcx,rsi
   140003e08:	call   rbx
   140003e0a:	mov    rcx,QWORD PTR [r14+0x8]
   140003e0e:	cmp    QWORD PTR [rax+0x8],rcx
   140003e12:	jne    0x140003e22
   140003e14:	mov    ecx,DWORD PTR [r14]
   140003e17:	cmp    DWORD PTR [rax],ecx
   140003e19:	jne    0x140003e22
   140003e1b:	mov    eax,0x1
   140003e20:	jmp    0x140003e24
   140003e22:	xor    eax,eax
   140003e24:	mov    rbx,QWORD PTR [rsp+0x40]
   140003e29:	mov    rsi,QWORD PTR [rsp+0x48]
   140003e2e:	mov    rdi,QWORD PTR [rsp+0x50]
   140003e33:	add    rsp,0x30
   140003e37:	pop    r14
   140003e39:	ret    
   140003e3a:	int3   
   140003e3b:	int3   
   140003e3c:	int3   
   140003e3d:	int3   
   140003e3e:	int3   
   140003e3f:	int3   
   140003e40:	mov    QWORD PTR [rsp+0x8],rbx
   140003e45:	push   rdi
   140003e46:	sub    rsp,0x20
   140003e4a:	mov    rdi,QWORD PTR [rcx+0x10]
   140003e4e:	mov    rbx,rcx
   140003e51:	cmp    rdi,rdx
   140003e54:	jb     0x140003ece
   140003e56:	mov    rax,rdi
   140003e59:	sub    rax,rdx
   140003e5c:	cmp    rax,r8
   140003e5f:	ja     0x140003e7a
   140003e61:	cmp    QWORD PTR [rcx+0x18],0x10
   140003e66:	mov    QWORD PTR [rcx+0x10],rdx
   140003e6a:	jb     0x140003e71
   140003e6c:	mov    rax,QWORD PTR [rcx]
   140003e6f:	jmp    0x140003e74
   140003e71:	mov    rax,rcx
   140003e74:	mov    BYTE PTR [rax+rdx*1],0x0
   140003e78:	jmp    0x140003ec0
   140003e7a:	test   r8,r8
   140003e7d:	je     0x140003ec0
   140003e7f:	cmp    QWORD PTR [rcx+0x18],0x10
   140003e84:	jb     0x140003e8b
   140003e86:	mov    rax,QWORD PTR [rcx]
   140003e89:	jmp    0x140003e8e
   140003e8b:	mov    rax,rcx
   140003e8e:	sub    rdi,r8
   140003e91:	lea    rcx,[rax+rdx*1]
   140003e95:	mov    rax,rdi
   140003e98:	sub    rax,rdx
   140003e9b:	je     0x140003ea9
   140003e9d:	lea    rdx,[rcx+r8*1]
   140003ea1:	mov    r8,rax
   140003ea4:	call   0x1400040bc
   140003ea9:	cmp    QWORD PTR [rbx+0x18],0x10
   140003eae:	mov    QWORD PTR [rbx+0x10],rdi
   140003eb2:	jb     0x140003eb9
   140003eb4:	mov    rax,QWORD PTR [rbx]
   140003eb7:	jmp    0x140003ebc
   140003eb9:	mov    rax,rbx
   140003ebc:	mov    BYTE PTR [rax+rdi*1],0x0
   140003ec0:	mov    rax,rbx
   140003ec3:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ec8:	add    rsp,0x20
   140003ecc:	pop    rdi
   140003ecd:	ret    
   140003ece:	call   0x140003b08
   140003ed3:	int3   
   140003ed4:	int3   
   140003ed5:	int3   
   140003ed6:	int3   
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ee5:	push   rdi
   140003ee6:	sub    rsp,0x30
   140003eea:	xor    ebx,ebx
   140003eec:	mov    ecx,r8d
   140003eef:	mov    DWORD PTR [rsp+0x20],ebx
   140003ef3:	mov    rdi,rdx
   140003ef6:	call   0x140004040
   140003efb:	test   rax,rax
   140003efe:	mov    QWORD PTR [rdi+0x18],0xf
   140003f06:	mov    QWORD PTR [rdi+0x10],rbx
   140003f0a:	lea    rdx,[rip+0x17e7]        # 0x1400056f8
   140003f11:	cmovne rdx,rax
   140003f15:	mov    BYTE PTR [rdi],bl
   140003f17:	cmp    BYTE PTR [rdx],bl
   140003f19:	je     0x140003f2a
   140003f1b:	or     rax,0xffffffffffffffff
   140003f1f:	inc    rax
   140003f22:	cmp    BYTE PTR [rdx+rax*1],bl
   140003f25:	jne    0x140003f1f
   140003f27:	mov    rbx,rax
   140003f2a:	mov    r8,rbx
   140003f2d:	mov    rcx,rdi
   140003f30:	call   0x140003c34
   140003f35:	mov    rbx,QWORD PTR [rsp+0x40]
   140003f3a:	mov    rax,rdi
   140003f3d:	add    rsp,0x30
   140003f41:	pop    rdi
   140003f42:	ret    
   140003f43:	int3   
   140003f44:	int3   
   140003f45:	int3   
   140003f46:	int3   
   140003f47:	int3   
   140003f48:	int3   
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	rex push rbx
   140003f52:	sub    rsp,0x30
   140003f56:	xor    eax,eax
   140003f58:	mov    rbx,rdx
   140003f5b:	mov    DWORD PTR [rsp+0x20],eax
   140003f5f:	cmp    r8d,0x1
   140003f63:	jne    0x140003f88
   140003f65:	mov    QWORD PTR [rdx+0x18],0xf
   140003f6d:	lea    r8d,[rax+0x15]
   140003f71:	mov    QWORD PTR [rdx+0x10],rax
   140003f75:	mov    rcx,rbx
   140003f78:	mov    BYTE PTR [rdx],al
   140003f7a:	lea    rdx,[rip+0x17c7]        # 0x140005748
   140003f81:	call   0x140003c34
   140003f86:	jmp    0x140003f8d
   140003f88:	call   0x140003ee0
   140003f8d:	mov    rax,rbx
   140003f90:	add    rsp,0x30
   140003f94:	pop    rbx
   140003f95:	ret    
   140003f96:	int3   
   140003f97:	int3   
   140003f98:	int3   
   140003f99:	int3   
   140003f9a:	int3   
   140003f9b:	int3   
   140003f9c:	int3   
   140003f9d:	int3   
   140003f9e:	int3   
   140003f9f:	int3   
   140003fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140003fa5:	push   rdi
   140003fa6:	sub    rsp,0x30
   140003faa:	xor    ebx,ebx
   140003fac:	mov    ecx,r8d
   140003faf:	mov    DWORD PTR [rsp+0x20],ebx
   140003fb3:	mov    rdi,rdx
   140003fb6:	call   0x140004070
   140003fbb:	test   rax,rax
   140003fbe:	mov    QWORD PTR [rdi+0x18],0xf
   140003fc6:	mov    QWORD PTR [rdi+0x10],rbx
   140003fca:	lea    rdx,[rip+0x1727]        # 0x1400056f8
   140003fd1:	cmovne rdx,rax
   140003fd5:	mov    BYTE PTR [rdi],bl
   140003fd7:	cmp    BYTE PTR [rdx],bl
   140003fd9:	je     0x140003fea
   140003fdb:	or     rax,0xffffffffffffffff
   140003fdf:	inc    rax
   140003fe2:	cmp    BYTE PTR [rdx+rax*1],bl
   140003fe5:	jne    0x140003fdf
   140003fe7:	mov    rbx,rax
   140003fea:	mov    r8,rbx
   140003fed:	mov    rcx,rdi
   140003ff0:	call   0x140003c34
   140003ff5:	mov    rbx,QWORD PTR [rsp+0x40]
   140003ffa:	mov    rax,rdi
   140003ffd:	add    rsp,0x30
   140004001:	pop    rdi
   140004002:	ret    
   140004003:	int3   
   140004004:	int3   
   140004005:	int3   
   140004006:	int3   
   140004007:	int3   
   140004008:	int3   
   140004009:	int3   
   14000400a:	int3   
   14000400b:	int3   
   14000400c:	int3   
   14000400d:	int3   
   14000400e:	int3   
   14000400f:	int3   
   140004010:	lea    rax,[rip+0x16d9]        # 0x1400056f0
   140004017:	ret    
   140004018:	int3   
   140004019:	int3   
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	lea    rax,[rip+0x1711]        # 0x140005738
   140004027:	ret    
   140004028:	int3   
   140004029:	int3   
   14000402a:	int3   
   14000402b:	int3   
   14000402c:	int3   
   14000402d:	int3   
   14000402e:	int3   
   14000402f:	int3   
   140004030:	lea    rax,[rip+0x1759]        # 0x140005790
   140004037:	ret    
   140004038:	int3   
   140004039:	int3   
   14000403a:	int3   
   14000403b:	int3   
   14000403c:	int3   
   14000403d:	int3   
   14000403e:	int3   
   14000403f:	int3   
   140004040:	cmp    QWORD PTR [rip+0x2070],0x0        # 0x1400060b8
   140004048:	lea    rax,[rip+0x2061]        # 0x1400060b0
   14000404f:	je     0x140004060
   140004051:	cmp    DWORD PTR [rax],ecx
   140004053:	je     0x140004063
   140004055:	add    rax,0x10
   140004059:	cmp    QWORD PTR [rax+0x8],0x0
   14000405e:	jne    0x140004051
   140004060:	xor    eax,eax
   140004062:	ret    
   140004063:	mov    rax,QWORD PTR [rax+0x8]
   140004067:	ret    
   140004068:	int3   
   140004069:	int3   
   14000406a:	int3   
   14000406b:	int3   
   14000406c:	int3   
   14000406d:	int3   
   14000406e:	int3   
   14000406f:	int3   
   140004070:	cmp    QWORD PTR [rip+0x1750],0x0        # 0x1400057c8
   140004078:	lea    rax,[rip+0x1741]        # 0x1400057c0
   14000407f:	je     0x140004090
   140004081:	cmp    DWORD PTR [rax],ecx
   140004083:	je     0x140004093
   140004085:	add    rax,0x10
   140004089:	cmp    QWORD PTR [rax+0x8],0x0
   14000408e:	jne    0x140004081
   140004090:	xor    eax,eax
   140004092:	ret    
   140004093:	mov    rax,QWORD PTR [rax+0x8]
   140004097:	ret    
   140004098:	int3   
   140004099:	int3   
   14000409a:	int3   
   14000409b:	int3   
   14000409c:	int3   
   14000409d:	int3   
   14000409e:	jmp    QWORD PTR [rip+0x1284]        # 0x140005328
   1400040a4:	int3   
   1400040a5:	int3   
   1400040a6:	int3   
   1400040a7:	int3   
   1400040a8:	int3   
   1400040a9:	int3   
   1400040aa:	int3   
   1400040ab:	int3   
   1400040ac:	int3   
   1400040ad:	int3   
   1400040ae:	int3   
   1400040af:	int3   
   1400040b0:	jmp    QWORD PTR [rip+0x126a]        # 0x140005320
   1400040b6:	int3   
   1400040b7:	int3   
   1400040b8:	int3   
   1400040b9:	int3   
   1400040ba:	int3   
   1400040bb:	int3   
   1400040bc:	jmp    QWORD PTR [rip+0x1256]        # 0x140005318
   1400040c2:	int3   
   1400040c3:	int3   
   1400040c4:	int3   
   1400040c5:	int3   
   1400040c6:	int3   
   1400040c7:	int3   
   1400040c8:	jmp    QWORD PTR [rip+0x1242]        # 0x140005310
   1400040ce:	int3   
   1400040cf:	int3   
   1400040d0:	int3   
   1400040d1:	int3   
   1400040d2:	int3   
   1400040d3:	int3   
   1400040d4:	jmp    QWORD PTR [rip+0x122e]        # 0x140005308
   1400040da:	int3   
   1400040db:	int3   
   1400040dc:	int3   
   1400040dd:	int3   
   1400040de:	int3   
   1400040df:	int3   
   1400040e0:	jmp    QWORD PTR [rip+0x121a]        # 0x140005300
   1400040e6:	int3   
   1400040e7:	int3   
   1400040e8:	int3   
   1400040e9:	int3   
   1400040ea:	int3   
   1400040eb:	int3   
   1400040ec:	jmp    QWORD PTR [rip+0x1206]        # 0x1400052f8
   1400040f2:	int3   
   1400040f3:	int3   
   1400040f4:	int3   
   1400040f5:	int3   
   1400040f6:	int3   
   1400040f7:	int3   
   1400040f8:	int3   
   1400040f9:	int3   
   1400040fa:	int3   
   1400040fb:	int3   
   1400040fc:	int3   
   1400040fd:	int3   
   1400040fe:	int3   
   1400040ff:	int3   
   140004100:	jmp    QWORD PTR [rip+0x11ea]        # 0x1400052f0
   140004106:	int3   
   140004107:	int3   
   140004108:	int3   
   140004109:	int3   
   14000410a:	int3   
   14000410b:	int3   
   14000410c:	jmp    QWORD PTR [rip+0x11d6]        # 0x1400052e8
   140004112:	int3   
   140004113:	int3   
   140004114:	int3   
   140004115:	int3   
   140004116:	int3   
   140004117:	int3   
   140004118:	jmp    QWORD PTR [rip+0x11c2]        # 0x1400052e0
   14000411e:	int3   
   14000411f:	int3   
   140004120:	int3   
   140004121:	int3   
   140004122:	int3   
   140004123:	int3   
   140004124:	int3   
   140004125:	int3   
   140004126:	int3   
   140004127:	int3   
   140004128:	int3   
   140004129:	int3   
   14000412a:	int3   
   14000412b:	int3   
   14000412c:	int3   
   14000412d:	int3   
   14000412e:	int3   
   14000412f:	int3   
   140004130:	mov    QWORD PTR [rsp+0x8],rbx
   140004135:	push   rdi
   140004136:	sub    rsp,0x20
   14000413a:	mov    ebx,edx
   14000413c:	mov    rdi,rcx
   14000413f:	call   QWORD PTR [rip+0x1193]        # 0x1400052d8
   140004145:	test   bl,0x1
   140004148:	je     0x140004152
   14000414a:	mov    rcx,rdi
   14000414d:	call   0x140002eb4
   140004152:	mov    rax,rdi
   140004155:	mov    rbx,QWORD PTR [rsp+0x30]
   14000415a:	add    rsp,0x20
   14000415e:	pop    rdi
   14000415f:	ret    
   140004160:	int3   
   140004161:	int3   
   140004162:	int3   
   140004163:	int3   
   140004164:	int3   
   140004165:	int3   
   140004166:	int3   
   140004167:	int3   
   140004168:	int3   
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	jmp    QWORD PTR [rip+0xf5a]        # 0x1400050d0
   140004176:	int3   
   140004177:	int3   
   140004178:	int3   
   140004179:	int3   
   14000417a:	int3   
   14000417b:	int3   
   14000417c:	int3   
   14000417d:	int3   
   14000417e:	int3   
   14000417f:	int3   
   140004180:	jmp    QWORD PTR [rip+0xf12]        # 0x140005098
   140004186:	int3   
   140004187:	int3   
   140004188:	int3   
   140004189:	int3   
   14000418a:	int3   
   14000418b:	int3   
   14000418c:	sub    rsp,0x28
   140004190:	mov    r8,QWORD PTR [r9+0x38]
   140004194:	mov    rcx,rdx
   140004197:	mov    rdx,r9
   14000419a:	call   0x1400041b0
   14000419f:	mov    eax,0x1
   1400041a4:	add    rsp,0x28
   1400041a8:	ret    
   1400041a9:	int3   
   1400041aa:	int3   
   1400041ab:	int3   
   1400041ac:	int3   
   1400041ad:	int3   
   1400041ae:	int3   
   1400041af:	int3   
   1400041b0:	rex push rbx
   1400041b2:	sub    rsp,0x20
   1400041b6:	mov    r11d,DWORD PTR [r8]
   1400041b9:	mov    rbx,rdx
   1400041bc:	and    r11d,0xfffffff8
   1400041c0:	mov    r9,rcx
   1400041c3:	test   BYTE PTR [r8],0x4
   1400041c7:	mov    r10,rcx
   1400041ca:	je     0x1400041df
   1400041cc:	mov    eax,DWORD PTR [r8+0x8]
   1400041d0:	movsxd r10,DWORD PTR [r8+0x4]
   1400041d4:	neg    eax
   1400041d6:	add    r10,rcx
   1400041d9:	movsxd rcx,eax
   1400041dc:	and    r10,rcx
   1400041df:	movsxd rax,r11d
   1400041e2:	mov    rdx,QWORD PTR [rax+r10*1]
   1400041e6:	mov    rax,QWORD PTR [rbx+0x10]
   1400041ea:	mov    ecx,DWORD PTR [rax+0x8]
   1400041ed:	add    rcx,QWORD PTR [rbx+0x8]
   1400041f1:	test   BYTE PTR [rcx+0x3],0xf
   1400041f5:	je     0x140004203
   1400041f7:	movzx  eax,BYTE PTR [rcx+0x3]
   1400041fb:	and    eax,0xfffffff0
   1400041fe:	cdqe   
   140004200:	add    r9,rax
   140004203:	xor    r9,rdx
   140004206:	mov    rcx,r9
   140004209:	add    rsp,0x20
   14000420d:	pop    rbx
   14000420e:	jmp    0x140002ed0
   140004213:	int3   
   140004214:	int3   
   140004215:	int3   
   140004216:	int3   
   140004217:	int3   
   140004218:	int3   
   140004219:	int3   
   14000421a:	int3   
   14000421b:	int3   
   14000421c:	int3   
   14000421d:	int3   
   14000421e:	int3   
   14000421f:	int3   
   140004220:	int3   
   140004221:	int3   
   140004222:	int3   
   140004223:	int3   
   140004224:	int3   
   140004225:	int3   
   140004226:	jmp    QWORD PTR [rip+0x11bc]        # 0x1400053e8
   14000422c:	int3   
   14000422d:	int3   
   14000422e:	int3   
   14000422f:	int3   
   140004230:	int3   
   140004231:	int3   
   140004232:	int3   
   140004233:	int3   
   140004234:	int3   
   140004235:	int3   
   140004236:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004240:	jmp    rax
   140004242:	int3   
   140004243:	int3   
   140004244:	int3   
   140004245:	int3   
   140004246:	int3   
   140004247:	int3   
   140004248:	int3   
   140004249:	int3   
   14000424a:	int3   
   14000424b:	int3   
   14000424c:	int3   
   14000424d:	int3   
   14000424e:	int3   
   14000424f:	int3   
   140004250:	int3   
   140004251:	int3   
   140004252:	int3   
   140004253:	int3   
   140004254:	int3   
   140004255:	int3   
   140004256:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004260:	sub    rsp,0x10
   140004264:	mov    QWORD PTR [rsp],r10
   140004268:	mov    QWORD PTR [rsp+0x8],r11
   14000426d:	xor    r11,r11
   140004270:	lea    r10,[rsp+0x18]
   140004275:	sub    r10,rax
   140004278:	cmovb  r10,r11
   14000427c:	mov    r11,QWORD PTR gs:0x10
   140004285:	cmp    r10,r11
   140004288:	jae    0x14000429f
   14000428a:	and    r10w,0xf000
   140004290:	lea    r11,[r11-0x1000]
   140004297:	test   BYTE PTR [r11],r11b
   14000429a:	cmp    r10,r11
   14000429d:	jne    0x140004290
   14000429f:	mov    r10,QWORD PTR [rsp]
   1400042a3:	mov    r11,QWORD PTR [rsp+0x8]
   1400042a8:	add    rsp,0x10
   1400042ac:	ret    
   1400042ad:	int3   
   1400042ae:	int3   
   1400042af:	int3   
   1400042b0:	int3   
   1400042b1:	int3   
   1400042b2:	int3   
   1400042b3:	int3   
   1400042b4:	int3   
   1400042b5:	int3   
   1400042b6:	rex push rbp
   1400042b8:	push   r13
   1400042ba:	sub    rsp,0x28
   1400042be:	mov    r13,rdx
   1400042c1:	lea    rbp,[rdx+0x90]
   1400042c8:	and    rbp,0xffffffffffffffc0
   1400042cc:	lea    rcx,[rbp+0x10]
   1400042d0:	call   0x140001bc8
   1400042d5:	add    rsp,0x28
   1400042d9:	pop    r13
   1400042db:	pop    rbp
   1400042dc:	ret    
   1400042dd:	int3   
   1400042de:	int3   
   1400042df:	int3   
   1400042e0:	int3   
   1400042e1:	int3   
   1400042e2:	int3   
   1400042e3:	rex push rbp
   1400042e5:	sub    rsp,0x20
   1400042e9:	mov    rbp,rdx
   1400042ec:	mov    rax,QWORD PTR [rcx]
   1400042ef:	mov    rdx,rcx
   1400042f2:	mov    ecx,DWORD PTR [rax]
   1400042f4:	call   0x140002f7e
   1400042f9:	nop
   1400042fa:	add    rsp,0x20
   1400042fe:	pop    rbp
   1400042ff:	ret    
   140004300:	int3   
   140004301:	int3   
   140004302:	int3   
   140004303:	int3   
   140004304:	int3   
   140004305:	int3   
   140004306:	int3   
   140004307:	mov    QWORD PTR [rsp+0x10],rdx
   14000430c:	push   rbp
   14000430d:	sub    rsp,0x20
   140004311:	mov    rbp,rdx
   140004314:	and    QWORD PTR [rbp+0x50],0x0
   140004319:	lea    rax,[rip+0xffffffffffffebe9]        # 0x140002f09
   140004320:	add    rsp,0x20
   140004324:	pop    rbp
   140004325:	ret    
   140004326:	int3   
   140004327:	int3   
   140004328:	int3   
   140004329:	int3   
   14000432a:	int3   
   14000432b:	int3   
   14000432c:	int3   
   14000432d:	int3   
   14000432e:	int3   
   14000432f:	int3   
   140004330:	rex push rbp
   140004332:	sub    rsp,0x20
   140004336:	mov    rbp,rdx
   140004339:	mov    rax,QWORD PTR [rcx]
   14000433c:	xor    ecx,ecx
   14000433e:	cmp    DWORD PTR [rax],0xc0000005
   140004344:	sete   cl
   140004347:	mov    eax,ecx
   140004349:	add    rsp,0x20
   14000434d:	pop    rbp
   14000434e:	ret    
   14000434f:	int3   
   140004350:	int3   
   140004351:	int3   
   140004352:	int3   
   140004353:	int3   
   140004354:	int3   
   140004355:	int3   
   140004356:	rex push rbp
   140004358:	sub    rsp,0x20
   14000435c:	mov    rbp,rdx
   14000435f:	mov    ecx,0x8
   140004364:	call   0x1400034d0
   140004369:	nop
   14000436a:	add    rsp,0x20
   14000436e:	pop    rbp
   14000436f:	ret    
   140004370:	int3   
   140004371:	int3   
   140004372:	int3   
   140004373:	int3   
   140004374:	int3   
   140004375:	int3   
   140004376:	int3   
   140004377:	mov    QWORD PTR [rsp+0x10],rdx
   14000437c:	push   rbp
   14000437d:	sub    rsp,0x20
   140004381:	mov    rbp,rdx
   140004384:	mov    rcx,QWORD PTR [rbp+0x68]
   140004388:	mov    QWORD PTR [rbp+0x68],rcx
   14000438c:	xor    eax,eax
   14000438e:	add    rcx,0x1
   140004392:	je     0x1400043a9
   140004394:	cmp    rcx,0xffffffffffffffff
   140004398:	ja     0x1400043a4
   14000439a:	call   0x140003730
   14000439f:	test   rax,rax
   1400043a2:	jne    0x1400043a9
   1400043a4:	call   0x140003a70
   1400043a9:	mov    QWORD PTR [rbp+0x78],rax
   1400043ad:	lea    rax,[rip+0xfffffffffffff5ea]        # 0x14000399e
   1400043b4:	add    rsp,0x20
   1400043b8:	pop    rbp
   1400043b9:	ret    
   1400043ba:	int3   
   1400043bb:	mov    QWORD PTR [rsp+0x10],rdx
   1400043c0:	push   rbp
   1400043c1:	sub    rsp,0x20
   1400043c5:	mov    rbp,rdx
   1400043c8:	xor    r8d,r8d
   1400043cb:	mov    dl,0x1
   1400043cd:	mov    rcx,QWORD PTR [rbp+0x60]
   1400043d1:	call   0x140003a10
   1400043d6:	xor    edx,edx
   1400043d8:	xor    ecx,ecx
   1400043da:	call   0x14000410c
   1400043df:	nop
   1400043e0:	int3   
   1400043e1:	int3   
   1400043e2:	int3   
   1400043e3:	int3   
   1400043e4:	int3   
   1400043e5:	int3   
   1400043e6:	int3   
   1400043e7:	int3   
   1400043e8:	int3   
   1400043e9:	int3   
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	int3   
   1400043ed:	int3   
   1400043ee:	int3   
   1400043ef:	int3   
   1400043f0:	lea    rax,[rip+0x1299]        # 0x140005690
   1400043f7:	mov    QWORD PTR [rip+0x4c22],rax        # 0x140009020
   1400043fe:	ret    
   1400043ff:	int3   
   140004400:	int3   
   140004401:	int3   
   140004402:	int3   
   140004403:	int3   
   140004404:	int3   
   140004405:	int3   
   140004406:	int3   
   140004407:	int3   
   140004408:	int3   
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	lea    rax,[rip+0x1279]        # 0x140005690
   140004417:	mov    QWORD PTR [rip+0x4c0a],rax        # 0x140009028
   14000441e:	ret    
   14000441f:	int3   
   140004420:	int3   
   140004421:	int3   
   140004422:	int3   
   140004423:	int3   
   140004424:	int3   
   140004425:	int3   
   140004426:	int3   
   140004427:	int3   
   140004428:	int3   
   140004429:	int3   
   14000442a:	int3   
   14000442b:	int3   
   14000442c:	int3   
   14000442d:	int3   
   14000442e:	int3   
   14000442f:	int3   
   140004430:	lea    rax,[rip+0x1259]        # 0x140005690
   140004437:	mov    QWORD PTR [rip+0x4bf2],rax        # 0x140009030
   14000443e:	ret    

Disassembly of section .rdata:

0000000140005000 <.rdata>:
   140005000:	pop    rax
   140005001:	mov    al,BYTE PTR [rax]
   140005003:	add    BYTE PTR [rax],al
   140005005:	add    BYTE PTR [rax],al
   140005007:	add    BYTE PTR [rsi+0x8a],dl
   14000500d:	add    BYTE PTR [rax],al
   14000500f:	add    BYTE PTR [rdx+0x8a],cl
   140005015:	add    BYTE PTR [rax],al
   140005017:	add    BYTE PTR [rdx+rcx*4+0x0],dh
   14000501b:	add    BYTE PTR [rax],al
   14000501d:	add    BYTE PTR [rax],al
   14000501f:	add    BYTE PTR [rsi-0x76],ah
   140005022:	add    BYTE PTR [rax],al
   140005024:	add    BYTE PTR [rax],al
   140005026:	add    BYTE PTR [rax],al
   140005028:	(bad)  
   140005029:	xchg   BYTE PTR [rax],al
   14000502b:	add    BYTE PTR [rax],al
   14000502d:	add    BYTE PTR [rax],al
   14000502f:	add    BYTE PTR [rsi],bh
   140005031:	mov    al,BYTE PTR [rax]
	...
   14000503f:	add    BYTE PTR [rdx],cl
   140005041:	add    BYTE PTR [rax],al
   140005043:	add    BYTE PTR [rax],al
   140005045:	add    BYTE PTR [rax],al
   140005047:	add    BYTE PTR [rcx],0x0
   14000504a:	add    BYTE PTR [rax],al
   14000504c:	add    BYTE PTR [rax],al
   14000504e:	add    BYTE PTR [rax+0x9],al
   140005054:	add    BYTE PTR [rax],al
   140005056:	add    BYTE PTR [rax+0xb],al
   14000505c:	add    BYTE PTR [rax],al
   14000505e:	add    BYTE PTR [rax+0x3],al
   140005064:	add    BYTE PTR [rax],al
   140005066:	add    BYTE PTR [rax+0x0],al
   14000506c:	add    BYTE PTR [rax],al
   14000506e:	add    BYTE PTR [rax],al
   140005070:	add    al,0x0
   140005072:	add    BYTE PTR [rax],al
   140005074:	add    BYTE PTR [rax],al
   140005076:	add    BYTE PTR [rax+0x7],al
   14000507c:	add    BYTE PTR [rax],al
   14000507e:	add    BYTE PTR [rax+0x6],al
   140005084:	add    BYTE PTR [rax],al
   140005086:	add    BYTE PTR [rax+0x2],al
   14000508c:	add    BYTE PTR [rax],al
   14000508e:	add    BYTE PTR [rax+0x0],al
   140005094:	add    BYTE PTR [rax],al
   140005096:	add    BYTE PTR [rax],al
   140005098:	(bad)  
   140005099:	mov    al,BYTE PTR [rax]
	...
   1400050a7:	add    BYTE PTR [rdx-0x78],dl
   1400050aa:	add    BYTE PTR [rax],al
   1400050ac:	add    BYTE PTR [rax],al
   1400050ae:	add    BYTE PTR [rax],al
   1400050b0:	ror    BYTE PTR [rax+0x0],1
   1400050b6:	add    BYTE PTR [rax],al
   1400050b8:	add    cl,BYTE PTR [rcx+0x0]
	...
   1400050c6:	add    BYTE PTR [rax],al
   1400050c8:	adc    al,0x89
   1400050ca:	add    BYTE PTR [rax],al
   1400050cc:	add    BYTE PTR [rax],al
   1400050ce:	add    BYTE PTR [rax],al
   1400050d0:	sub    al,0x89
	...
   1400050de:	add    BYTE PTR [rax],al
   1400050e0:	pushf  
   1400050e1:	add    DWORD PTR [rax],0x0
   1400050e4:	add    BYTE PTR [rax],al
   1400050e6:	add    BYTE PTR [rax],al
   1400050e8:	add    BYTE PTR [rax+rax*1+0x0],0x0
   1400050f0:	or     al,BYTE PTR [rbx+0x0]
	...
   1400050fe:	add    BYTE PTR [rax],al
   140005100:	movabs al,ds:0x7e00000000000088
   140005109:	mov    BYTE PTR [rax],al
   14000510b:	add    BYTE PTR [rax],al
   14000510d:	add    BYTE PTR [rax],al
   14000510f:	add    dl,al
   140005111:	mov    BYTE PTR [rax],al
   140005113:	add    BYTE PTR [rax],al
   140005115:	add    BYTE PTR [rax],al
   140005117:	add    BYTE PTR [rdx+0x88],dl
	...
   140005125:	add    BYTE PTR [rax],al
   140005127:	add    BYTE PTR [rdx-0x7d],bl
	...
   140005136:	add    BYTE PTR [rax],al
   140005138:	jbe    0x1400050bd
   14000513a:	add    BYTE PTR [rax],al
   14000513c:	add    BYTE PTR [rax],al
   14000513e:	add    BYTE PTR [rax],al
   140005140:	mov    BYTE PTR cs:[rax],al
	...
   14000514f:	add    BYTE PTR [rdx],bl
   140005151:	add    DWORD PTR [rax],0x0
   140005154:	add    BYTE PTR [rax],al
   140005156:	add    BYTE PTR [rax],al
   140005158:	mov    edx,0x83
   14000515d:	add    BYTE PTR [rax],al
   14000515f:	add    BYTE PTR [rdx+rax*4+0x0],ch
   140005166:	add    BYTE PTR [rax],al
   140005168:	sahf   
   140005169:	(bad)  
   14000516a:	add    BYTE PTR [rax],al
   14000516c:	add    BYTE PTR [rax],al
   14000516e:	add    BYTE PTR [rax],al
   140005170:	loop   0x1400050fa
	...
   14000517e:	add    BYTE PTR [rax],al
   140005180:	call   0x140005207
	...
   14000518d:	add    BYTE PTR [rax],al
   14000518f:	add    al,dh
   140005191:	mov    BYTE PTR [rax],al
	...
   14000519f:	add    BYTE PTR [rdx-0x78],ah
	...
   1400051ae:	add    BYTE PTR [rax],al
   1400051b0:	mov    al,0x84
   1400051b2:	add    BYTE PTR [rax],al
   1400051b4:	add    BYTE PTR [rax],al
   1400051b6:	add    BYTE PTR [rax],al
   1400051b8:	inc    BYTE PTR [rbx+0x0]
   1400051be:	add    BYTE PTR [rax],al
   1400051c0:	sbb    al,0x88
   1400051c2:	add    BYTE PTR [rax],al
   1400051c4:	add    BYTE PTR [rax],al
   1400051c6:	add    BYTE PTR [rax],al
   1400051c8:	mov    al,BYTE PTR [rbx+0x0]
   1400051ce:	add    BYTE PTR [rax],al
   1400051d0:	pushf  
   1400051d1:	test   BYTE PTR [rax],al
   1400051d3:	add    BYTE PTR [rax],al
   1400051d5:	add    BYTE PTR [rax],al
   1400051d7:	add    BYTE PTR [rax+rcx*4+0x0],ch
   1400051de:	add    BYTE PTR [rax],al
   1400051e0:	call   0x140005268
	...
   1400051ed:	add    BYTE PTR [rax],al
   1400051ef:	add    dh,cl
   1400051f1:	add    DWORD PTR [rax],0x0
	...
   140005200:	push   0x83
   140005205:	add    BYTE PTR [rax],al
   140005207:	add    BYTE PTR [rbx+rax*4],ch
   14000520a:	add    BYTE PTR [rax],al
   14000520c:	add    BYTE PTR [rax],al
   14000520e:	add    BYTE PTR [rax],al
   140005210:	(bad)  
   140005211:	(bad)  
	...
   14000521e:	add    BYTE PTR [rax],al
   140005220:	test   BYTE PTR ds:[rax],al
   140005223:	add    BYTE PTR [rax],al
   140005225:	add    BYTE PTR [rax],al
   140005227:	add    BYTE PTR [rdx-0x7c],dl
   14000522a:	add    BYTE PTR [rax],al
   14000522c:	add    BYTE PTR [rax],al
   14000522e:	add    BYTE PTR [rax],al
   140005230:	ins    BYTE PTR es:[rdi],dx
   140005231:	test   BYTE PTR [rax],al
	...
   14000523f:	add    BYTE PTR [rax+rcx*4],bh
	...
   14000524e:	add    BYTE PTR [rax],al
   140005250:	(bad)  
   140005251:	add    DWORD PTR [rax],0x0
   140005254:	add    BYTE PTR [rax],al
   140005256:	add    BYTE PTR [rax],al
   140005258:	mov    esi,0x82
   14000525d:	add    BYTE PTR [rax],al
   14000525f:	add    BYTE PTR [rbx+rax*4+0x0],cl
	...
   14000526f:	add    BYTE PTR [rsp+rax*4],dl
   140005272:	add    BYTE PTR [rax],al
   140005274:	add    BYTE PTR [rax],al
   140005276:	add    BYTE PTR [rax],al
   140005278:	test   BYTE PTR cs:[rax],al
	...
   140005287:	add    BYTE PTR [rsi],cl
   140005289:	mov    BYTE PTR [rax],al
   14000528b:	add    BYTE PTR [rax],al
   14000528d:	add    BYTE PTR [rax],al
   14000528f:	add    al,bh
   140005291:	(bad)  
   140005292:	add    BYTE PTR [rax],al
   140005294:	add    BYTE PTR [rax],al
   140005296:	add    BYTE PTR [rax],al
   140005298:	cmp    al,0x83
	...
   1400052a6:	add    BYTE PTR [rax],al
   1400052a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400052a9:	mov    al,BYTE PTR [rax]
	...
   1400052b7:	add    dl,ch
   1400052b9:	xchg   BYTE PTR [rax],al
   1400052bb:	add    BYTE PTR [rax],al
   1400052bd:	add    BYTE PTR [rax],al
   1400052bf:	add    dl,dl
   1400052c1:	xchg   BYTE PTR [rax],al
   1400052c3:	add    BYTE PTR [rax],al
   1400052c5:	add    BYTE PTR [rax],al
   1400052c7:	add    BYTE PTR [rax+0x86],bh
	...
   1400052d5:	add    BYTE PTR [rax],al
   1400052d7:	add    dh,dh
   1400052d9:	xchg   DWORD PTR [rax],eax
   1400052db:	add    BYTE PTR [rax],al
   1400052dd:	add    BYTE PTR [rax],al
   1400052df:	add    ah,ch
   1400052e1:	xchg   DWORD PTR [rax],eax
   1400052e3:	add    BYTE PTR [rax],al
   1400052e5:	add    BYTE PTR [rax],al
   1400052e7:	add    dh,dl
   1400052e9:	xchg   DWORD PTR [rax],eax
   1400052eb:	add    BYTE PTR [rax],al
   1400052ed:	add    BYTE PTR [rax],al
   1400052ef:	add    BYTE PTR [rax+0x87],bh
   1400052f5:	add    BYTE PTR [rax],al
   1400052f7:	add    BYTE PTR [rax+0x87],ah
   1400052fd:	add    BYTE PTR [rax],al
   1400052ff:	add    BYTE PTR [rdx+0x87],al
   140005305:	add    BYTE PTR [rax],al
   140005307:	add    BYTE PTR [rdx-0x79],ah
   14000530a:	add    BYTE PTR [rax],al
   14000530c:	add    BYTE PTR [rax],al
   14000530e:	add    BYTE PTR [rax],al
   140005310:	rex.X xchg DWORD PTR [rax],eax
   140005313:	add    BYTE PTR [rax],al
   140005315:	add    BYTE PTR [rax],al
   140005317:	add    BYTE PTR [rax],bh
   140005319:	xchg   DWORD PTR [rax],eax
   14000531b:	add    BYTE PTR [rax],al
   14000531d:	add    BYTE PTR [rax],al
   14000531f:	add    BYTE PTR [rdi+rax*4],ch
   140005322:	add    BYTE PTR [rax],al
   140005324:	add    BYTE PTR [rax],al
   140005326:	add    BYTE PTR [rax],al
   140005328:	and    BYTE PTR [rdi+0x0],al
   14000532e:	add    BYTE PTR [rax],al
   140005330:	(bad)  
   140005331:	xchg   DWORD PTR [rax],eax
   140005333:	add    BYTE PTR [rax],al
   140005335:	add    BYTE PTR [rax],al
   140005337:	add    BYTE PTR [rax],cl
   140005339:	xchg   DWORD PTR [rax],eax
   14000533b:	add    BYTE PTR [rax],al
   14000533d:	add    BYTE PTR [rax],al
   14000533f:	add    dh,ah
   140005341:	add    DWORD PTR [rax],0x0
   140005347:	add    dl,bh
   140005349:	add    DWORD PTR [rax],0x0
   14000534f:	add    BYTE PTR [rsi],al
   140005351:	(bad)  
   140005352:	add    BYTE PTR [rax],al
   140005354:	add    BYTE PTR [rax],al
   140005356:	add    BYTE PTR [rax],al
   140005358:	jo     0x1400052db
   14000535a:	add    BYTE PTR [rax],al
   14000535c:	add    BYTE PTR [rax],al
   14000535e:	add    BYTE PTR [rax],al
   140005360:	(bad)  
   140005361:	(bad)  
   140005362:	add    BYTE PTR [rax],al
   140005364:	add    BYTE PTR [rax],al
   140005366:	add    BYTE PTR [rax],al
   140005368:	sub    BYTE PTR [rdx+0x0],al
   14000536e:	add    BYTE PTR [rax],al
   140005370:	xchg   esp,eax
   140005371:	(bad)  
   140005372:	add    BYTE PTR [rax],al
   140005374:	add    BYTE PTR [rax],al
   140005376:	add    BYTE PTR [rax],al
   140005378:	xchg   BYTE PTR [rdx+0x0],al
   14000537e:	add    BYTE PTR [rax],al
   140005380:	jl     0x140005304
   140005382:	add    BYTE PTR [rax],al
   140005384:	add    BYTE PTR [rax],al
   140005386:	add    BYTE PTR [rax],al
   140005388:	fadd   DWORD PTR [rcx+0x0]
   14000538e:	add    BYTE PTR [rax],al
   140005390:	(bad)  
   140005391:	add    DWORD PTR [rax],0x0
   140005397:	add    BYTE PTR [rdx+rax*4+0x0],dh
   14000539b:	add    BYTE PTR [rax],al
   14000539d:	add    BYTE PTR [rax],al
   14000539f:	add    BYTE PTR [rax-0x7e],ah
   1400053a2:	add    BYTE PTR [rax],al
   1400053a4:	add    BYTE PTR [rax],al
   1400053a6:	add    BYTE PTR [rax],al
   1400053a8:	mov    BYTE PTR [rcx+0x0],0x0
   1400053af:	add    BYTE PTR [rsi+0x81],bh
   1400053b5:	add    BYTE PTR [rax],al
   1400053b7:	add    BYTE PTR [rcx+rax*4+0x0],ch
   1400053be:	add    BYTE PTR [rax],al
   1400053c0:	pushf  
   1400053c1:	add    DWORD PTR [rax],0x0
   1400053c7:	add    BYTE PTR [rsi+0x81],cl
   1400053cd:	add    BYTE PTR [rax],al
   1400053cf:	add    BYTE PTR [rax+0x81],al
   1400053d5:	add    BYTE PTR [rax],al
   1400053d7:	add    BYTE PTR [rdx-0x7e],cl
   1400053da:	add    BYTE PTR [rax],al
   1400053dc:	add    BYTE PTR [rax],al
   1400053de:	add    BYTE PTR [rax],al
   1400053e0:	xor    al,BYTE PTR [rdx+0x0]
   1400053e6:	add    BYTE PTR [rax],al
   1400053e8:	(bad)  
   1400053e9:	mov    eax,DWORD PTR [rax]
	...
   1400053f7:	add    BYTE PTR [rbp+0x0],ch
   1400053fa:	add    BYTE PTR [rax],al
   1400053fc:	add    BYTE PTR [rax],al
   1400053fe:	add    BYTE PTR [rax+0x0],al
   140005404:	add    BYTE PTR [rax],al
   140005406:	add    BYTE PTR [rax],al
   140005408:	lock xor al,BYTE PTR [rax]
   14000540b:	rex add DWORD PTR [rax],eax
   14000540e:	add    BYTE PTR [rax],al
   140005410:	rex
   140005411:	rex.X add BYTE PTR [rax+0x1],al
	...
   14000541d:	add    BYTE PTR [rax],al
   14000541f:	add    al,dh
   140005421:	sub    eax,DWORD PTR [rax]
   140005423:	rex add DWORD PTR [rax],eax
   140005426:	add    BYTE PTR [rax],al
   140005428:	add    BYTE PTR [rax],dl
   14000542a:	add    BYTE PTR [rax+0x1],al
   14000542d:	add    BYTE PTR [rax],al
   14000542f:	add    BYTE PTR [rax],dl
   140005431:	adc    BYTE PTR [rax],al
   140005433:	rex add DWORD PTR [rax],eax
   140005436:	add    BYTE PTR [rax],al
   140005438:	and    BYTE PTR [rax],dl
   14000543a:	add    BYTE PTR [rax+0x1],al
	...
   14000544d:	add    BYTE PTR [rax],al
   14000544f:	add    BYTE PTR [rax],dl
   140005451:	sub    eax,DWORD PTR [rax]
   140005453:	rex add DWORD PTR [rax],eax
   140005456:	add    BYTE PTR [rax],al
   140005458:	(bad)  
   140005459:	(bad)  
   14000545a:	add    BYTE PTR [rax+0x1],al
	...
   140005469:	adc    BYTE PTR [rax],al
   14000546b:	add    BYTE PTR [rax],dl
   14000546d:	adc    BYTE PTR [rax],al
   14000546f:	add    BYTE PTR [rax],ah
   140005471:	adc    BYTE PTR [rax],al
   140005473:	add    BYTE PTR [rax+0x10],al
   140005476:	add    BYTE PTR [rax],al
   140005478:	shr    BYTE PTR [rdx],1
   14000547a:	add    BYTE PTR [rax],al
   14000547c:	adc    BYTE PTR [rbx],ch
   14000547e:	add    BYTE PTR [rax],al
   140005480:	lock sub eax,DWORD PTR [rax]
   140005483:	add    BYTE PTR [rax+0x2c],al
   140005486:	add    BYTE PTR [rax],al
   140005488:	and    BYTE PTR [rdi],ch
   14000548a:	add    BYTE PTR [rax],al
   14000548c:	(bad)  
   14000548d:	(bad)  
   14000548e:	add    BYTE PTR [rax],al
   140005490:	xor    BYTE PTR [rax],al
   140005493:	add    al,dh
   140005495:	xor    al,BYTE PTR [rax]
   140005497:	add    BYTE PTR [rax+0x33],al
   14000549a:	add    BYTE PTR [rax],al
   14000549c:	push   rax
   14000549d:	xor    eax,0x35700000
   1400054a2:	add    BYTE PTR [rax],al
   1400054a4:	lock xor eax,0x36100000
   1400054aa:	add    BYTE PTR [rax],al
   1400054ac:	nop
   1400054ad:	add    BYTE PTR ss:[rax],al
   1400054b0:	mov    al,0x36
   1400054b2:	add    BYTE PTR [rax],al
   1400054b4:	(bad)  
   1400054b5:	cmp    BYTE PTR [rax],al
   1400054b7:	add    BYTE PTR [rax-0x2fffffc8],dl
   1400054bd:	cmp    BYTE PTR [rax],al
   1400054bf:	add    BYTE PTR [rax+0x3d],al
   1400054c2:	add    BYTE PTR [rax],al
   1400054c4:	nop
   1400054c5:	cmp    eax,0x3db00000
   1400054ca:	add    BYTE PTR [rax],al
   1400054cc:	sar    BYTE PTR [rip+0x3ee00000],1        # 0x17ee054d2
   1400054d2:	add    BYTE PTR [rax],al
   1400054d4:	push   rax
   1400054d5:	(bad)  
   1400054d6:	add    BYTE PTR [rax],al
   1400054d8:	movabs al,ds:0x200000401000003f
   1400054e1:	add    BYTE PTR [rax],al
   1400054e4:	xor    BYTE PTR [rax+0x0],al
   1400054e7:	add    BYTE PTR [rax+0x40],dh
   1400054ed:	add    BYTE PTR [r8],al
   1400054f0:	xor    BYTE PTR [rcx+0x0],al
   1400054f3:	add    BYTE PTR [rax+0x41],dh
   1400054f6:	add    BYTE PTR [rax],al
   1400054f8:	add    BYTE PTR [rcx+0x0],0x0
   1400054fc:	lock rex.XB add BYTE PTR [r8],al
   140005500:	adc    BYTE PTR [rax+rax*1+0x0],al
   140005504:	xor    BYTE PTR [rax+rax*1+0x0],al
	...
   140005510:	(bad)
   140005515:	ins    BYTE PTR es:[rdi],dx
   140005516:	ins    BYTE PTR es:[rdi],dx
   140005517:	outs   dx,DWORD PTR ds:[rsi]
   140005518:	movsxd esp,DWORD PTR [rcx+0x74]
   14000551b:	imul   ebp,DWORD PTR [rdi+0x6e],0x5220000
   140005522:	xchg   ebx,eax
   140005523:	sbb    DWORD PTR [rdx],eax
   140005525:	add    BYTE PTR [rax],al
   140005527:	add    BYTE PTR [rsi+rsi*2+0x0],al
   14000552b:	add    BYTE PTR [rcx],al
   14000552d:	add    BYTE PTR [rax],al
   14000552f:	add    BYTE PTR [rsi+rsi*2+0x0],dl
   140005533:	add    BYTE PTR [rsi],al
   140005535:	add    BYTE PTR [rax],al
   140005537:	add    BYTE PTR [rax+0x20000076],al
   14000553d:	add    BYTE PTR [rax],al
   14000553f:	add    BYTE PTR [rax],al
   140005541:	add    BYTE PTR [rax],al
   140005543:	add    BYTE PTR [rcx],al
   140005545:	add    BYTE PTR [rax],al
   140005547:	add    al,al
   140005549:	xchg   ecx,eax
   14000554a:	add    BYTE PTR [rax+0x1],al
   14000554d:	add    BYTE PTR [rax],al
   14000554f:	add    BYTE PTR [rax-0x6e],ah
   140005552:	add    BYTE PTR [rax+0x1],al
   140005555:	add    BYTE PTR [rax],al
   140005557:	add    BYTE PTR [rsi+0x0],al
   14000555a:	rex.W add BYTE PTR [rax],al
   14000555d:	add    BYTE PTR [rax],al
   14000555f:	add    BYTE PTR [rax+0x55],dh
   140005562:	add    BYTE PTR [rax+0x1],al
	...
   14000556d:	add    BYTE PTR [rax],al
   14000556f:	add    BYTE PTR [rbp+0x0],ah
   140005572:	js     0x140005574
   140005574:	je     0x140005576
   140005576:	sub    eax,0x73006d00
   14000557b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a900cc81
   140005581:	add    BYTE PTR [rsi+0x0],ch
   140005584:	sub    eax,0x65007300
   140005589:	add    BYTE PTR [rbx+0x0],ah
   14000558c:	jne    0x14000558e
   14000558e:	jb     0x140005590
   140005590:	imul   eax,DWORD PTR [rax],0x790074
   140005596:	sub    eax,0x68006300
   14000559b:	add    BYTE PTR [rcx+0x0],ah
   14000559e:	ins    DWORD PTR es:[rdi],dx
   14000559f:	add    BYTE PTR [rdx+0x0],ah
   1400055a2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400055a6:	jae    0x1400055a8
   1400055a8:	sub    eax,0x31006c00
   1400055ad:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d0086b3
   1400055b3:	add    BYTE PTR [rax],dh
	...
   1400055bd:	add    BYTE PTR [rax],al
   1400055bf:	add    BYTE PTR [rbp+0x78],ah
   1400055c2:	je     0x1400055f1
   1400055c4:	ins    DWORD PTR es:[rdi],dx
   1400055c5:	jae    0x1400055f4
   1400055c7:	ja     0x140005632
   1400055c9:	outs   dx,BYTE PTR ds:[rsi]
   1400055ca:	sub    eax,0x75636573
   1400055cf:	jb     0x14000563a
   1400055d1:	je     0x14000564c
   1400055d3:	sub    eax,0x6d616863
   1400055d8:	(bad)  
   1400055d9:	gs jb  0x14000564f
   1400055dc:	sub    eax,0x312d316c
   1400055e1:	sub    eax,0x6c642e30
   1400055e6:	ins    BYTE PTR es:[rdi],dx
	...
   1400055ef:	add    BYTE PTR [rbp+0x78],ah
   1400055f2:	je     0x140005621
   1400055f4:	ins    DWORD PTR es:[rdi],dx
   1400055f5:	jae    0x140005624
   1400055f7:	ja     0x140005662
   1400055f9:	outs   dx,BYTE PTR ds:[rsi]
   1400055fa:	sub    eax,0x6c656873
   1400055ff:	ins    BYTE PTR es:[rdi],dx
   140005600:	xor    esi,DWORD PTR [rdx]
   140005602:	sub    eax,0x6c656873
   140005607:	ins    BYTE PTR es:[rdi],dx
   140005608:	outs   dx,WORD PTR ds:[rsi]
   14000560a:	ins    BYTE PTR es:[rdi],dx
   14000560b:	fs gs jb 0x140005682
   14000560f:	sub    eax,0x312d316c
   140005614:	sub    eax,0x6c642e31
   140005619:	ins    BYTE PTR es:[rdi],dx
   14000561a:	add    BYTE PTR [rax],al
   14000561c:	add    BYTE PTR [rax],al
   14000561e:	add    BYTE PTR [rax],al
   140005620:	gs js  0x140005697
   140005623:	sub    eax,0x772d736d
   140005628:	imul   ebp,DWORD PTR [rsi+0x2d],0x6d766564
   14000562f:	ins    DWORD PTR es:[edi],dx
   140005631:	je     0x140005660
   140005633:	fs ins DWORD PTR es:[rdi],dx
   140005635:	sub    eax,0x312d316c
   14000563a:	sub    eax,0x6c642e30
   14000563f:	ins    BYTE PTR es:[rdi],dx
	...
   140005648:	and    al,BYTE PTR [rip+0x41993]        # 0x140046fe1
   14000564e:	add    BYTE PTR [rax],al
   140005650:	cwde   
   140005651:	ja     0x140005653
   140005653:	add    BYTE PTR [rdx],al
   140005655:	add    BYTE PTR [rax],al
   140005657:	add    BYTE PTR [rax+0x8000077],bh
   14000565d:	add    BYTE PTR [rax],al
   14000565f:	add    BYTE PTR [rax],dl
   140005661:	js     0x140005663
   140005663:	add    BYTE PTR [rax],ah
   140005665:	add    BYTE PTR [rax],al
   140005667:	add    BYTE PTR [rax],al
   140005669:	add    BYTE PTR [rax],al
   14000566b:	add    BYTE PTR [rcx],al
   14000566d:	add    BYTE PTR [rax],al
   14000566f:	add    BYTE PTR [rax+0x1400038],dl
   140005675:	add    BYTE PTR [rax],al
   140005677:	add    BYTE PTR [rax],al
   140005679:	add    BYTE PTR [r8+0x1],al
   14000567d:	add    BYTE PTR [rax],al
   14000567f:	add    al,dl
   140005681:	cmp    BYTE PTR [rax],al
   140005683:	rex add DWORD PTR [rax],eax
   140005686:	add    BYTE PTR [rax],al
   140005688:	add    BYTE PTR [rcx+0x0],al
   14000568b:	rex add DWORD PTR [rax],eax
   14000568e:	add    BYTE PTR [rax],al
   140005690:	(bad)  
   140005691:	cmp    BYTE PTR [rax],al
   140005693:	rex add DWORD PTR [rax],eax
   140005696:	add    BYTE PTR [rax],al
   140005698:	mov    al,0x40
   14000569a:	add    BYTE PTR [rax+0x1],al
   14000569d:	add    BYTE PTR [rax],al
   14000569f:	add    BYTE PTR [rax+0x1400040],dh
   1400056a5:	add    BYTE PTR [rax],al
   1400056a7:	add    BYTE PTR [rax+0x140003d],dl
   1400056ad:	add    BYTE PTR [rax],al
   1400056af:	add    BYTE PTR [rax+0x140003d],dh
   1400056b5:	add    BYTE PTR [rax],al
   1400056b7:	add    al,dl
   1400056b9:	cmp    eax,0x14000
   1400056be:	add    BYTE PTR [rax],al
   1400056c0:	(bad)  
   1400056c1:	cmp    BYTE PTR [rax],al
   1400056c3:	rex add DWORD PTR [rax],eax
   1400056c6:	add    BYTE PTR [rax],al
   1400056c8:	adc    BYTE PTR [rax+0x0],al
   1400056cb:	rex add DWORD PTR [rax],eax
   1400056ce:	add    BYTE PTR [rax],al
   1400056d0:	loopne 0x140005710
   1400056d2:	add    BYTE PTR [rax+0x1],al
   1400056d5:	add    BYTE PTR [rax],al
   1400056d7:	add    BYTE PTR [rax+0x140003d],dl
   1400056dd:	add    BYTE PTR [rax],al
   1400056df:	add    BYTE PTR [rax+0x140003d],dh
   1400056e5:	add    BYTE PTR [rax],al
   1400056e7:	add    al,dl
   1400056e9:	cmp    eax,0x14000
   1400056ee:	add    BYTE PTR [rax],al
   1400056f0:	outs   dx,BYTE PTR gs:[esi]
   1400056f3:	gs jb  0x14000575f
   1400056f6:	movsxd eax,DWORD PTR [rax]
   1400056f8:	jne    0x140005768
   1400056fa:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400056fe:	outs   dx,BYTE PTR ds:[rsi]
   1400056ff:	and    BYTE PTR [rbp+0x72],ah
   140005702:	jb     0x140005773
   140005704:	jb     0x140005706
   140005706:	add    BYTE PTR [rax],al
   140005708:	(bad)  
   140005709:	cmp    BYTE PTR [rax],al
   14000570b:	rex add DWORD PTR [rax],eax
   14000570e:	add    BYTE PTR [rax],al
   140005710:	and    BYTE PTR [rax+0x0],al
   140005713:	rex add DWORD PTR [rax],eax
   140005716:	add    BYTE PTR [rax],al
   140005718:	push   rax
   140005719:	(bad)  
   14000571a:	add    BYTE PTR [rax+0x1],al
   14000571d:	add    BYTE PTR [rax],al
   14000571f:	add    BYTE PTR [rax+0x140003d],dl
   140005725:	add    BYTE PTR [rax],al
   140005727:	add    BYTE PTR [rax+0x140003d],dh
   14000572d:	add    BYTE PTR [rax],al
   14000572f:	add    al,dl
   140005731:	cmp    eax,0x14000
   140005736:	add    BYTE PTR [rax],al
   140005738:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000573f:	ins    DWORD PTR es:[rdi],dx
	...
   140005748:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000574f:	ins    DWORD PTR es:[rdi],dx
   140005750:	and    BYTE PTR [rbx+0x74],dh
   140005753:	jb     0x1400057ba
   140005755:	(bad)  
   140005756:	ins    DWORD PTR es:[rdi],dx
   140005757:	and    BYTE PTR [rbp+0x72],ah
   14000575a:	jb     0x1400057cb
   14000575c:	jb     0x14000575e
   14000575e:	add    BYTE PTR [rax],al
   140005760:	(bad)  
   140005761:	cmp    BYTE PTR [rax],al
   140005763:	rex add DWORD PTR [rax],eax
   140005766:	add    BYTE PTR [rax],al
   140005768:	xor    BYTE PTR [rax+0x0],al
   14000576b:	rex add DWORD PTR [rax],eax
   14000576e:	add    BYTE PTR [rax],al
   140005770:	movabs al,ds:0x400000000140003f
   140005779:	cmp    eax,0x14000
   14000577e:	add    BYTE PTR [rax],al
   140005780:	mov    al,0x3d
   140005782:	add    BYTE PTR [rax+0x1],al
   140005785:	add    BYTE PTR [rax],al
   140005787:	add    al,dl
   140005789:	cmp    eax,0x14000
   14000578e:	add    BYTE PTR [rax],al
   140005790:	jae    0x14000580b
   140005792:	jae    0x140005808
   140005794:	gs ins DWORD PTR es:[rdi],dx
   140005796:	add    BYTE PTR [rax],al
   140005798:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000579f:	and    BYTE PTR [rbx+0x74],dh
   1400057a2:	jb     0x14000580d
   1400057a4:	outs   dx,BYTE PTR ds:[rsi]
   1400057a5:	and    BYTE PTR [eax+0x6f],dh
   1400057a9:	jae    0x140005814
   1400057ab:	je     0x140005816
   1400057ad:	outs   dx,DWORD PTR ds:[rsi]
   1400057ae:	outs   dx,BYTE PTR ds:[rsi]
   1400057af:	add    BYTE PTR [rbx+0x74],dh
   1400057b2:	jb     0x14000581d
   1400057b4:	outs   dx,BYTE PTR ds:[rsi]
   1400057b5:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   1400057ba:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400057be:	add    BYTE PTR [eip+0x0],al        # 0x1400057c5
   1400057c5:	add    BYTE PTR [rax],al
   1400057c7:	add    BYTE PTR [rax+0x5c],dh
   1400057ca:	add    BYTE PTR [rax+0x1],al
   1400057cd:	add    BYTE PTR [rax],al
   1400057cf:	add    BYTE PTR [rdi+0x0],dh
   1400057d5:	add    BYTE PTR [rax],al
   1400057d7:	add    BYTE PTR [rax+0x140005c],cl
   1400057dd:	add    BYTE PTR [rax],al
   1400057df:	add    BYTE PTR [rax+rax*1],dl
   1400057e2:	add    BYTE PTR [rax],al
   1400057e4:	add    BYTE PTR [rax],al
   1400057e6:	add    BYTE PTR [rax],al
   1400057e8:	cwde   
   1400057e9:	pop    rsp
   1400057ea:	add    BYTE PTR [rax+0x1],al
   1400057ed:	add    BYTE PTR [rax],al
   1400057ef:	add    BYTE PTR [rdi+0x0],ch
   1400057f2:	add    BYTE PTR [rax],al
   1400057f4:	add    BYTE PTR [rax],al
   1400057f6:	add    BYTE PTR [rax],al
   1400057f8:	test   al,0x5c
   1400057fa:	add    BYTE PTR [rax+0x1],al
   1400057fd:	add    BYTE PTR [rax],al
   1400057ff:	add    BYTE PTR [rdx+0x0],ch
   140005805:	add    BYTE PTR [rax],al
   140005807:	add    al,al
   140005809:	pop    rsp
   14000580a:	add    BYTE PTR [rax+0x1],al
   14000580d:	add    BYTE PTR [rax],al
   14000580f:	add    BYTE PTR [rsi+0x0],cl
   140005815:	add    BYTE PTR [rax],al
   140005817:	add    al,al
   140005819:	pop    rsp
   14000581a:	add    BYTE PTR [rax+0x1],al
   14000581d:	add    BYTE PTR [rax],al
   14000581f:	add    BYTE PTR [rdx+0x0],dl
   140005822:	add    BYTE PTR [rax],al
   140005824:	add    BYTE PTR [rax],al
   140005826:	add    BYTE PTR [rax],al
   140005828:	jo     0x140005886
   14000582a:	add    BYTE PTR [rax+0x1],al
   14000582d:	add    BYTE PTR [rax],al
   14000582f:	add    bl,dh
   140005831:	add    eax,DWORD PTR [rax]
   140005833:	add    BYTE PTR [rax],al
   140005835:	add    BYTE PTR [rax],al
   140005837:	add    al,bl
   140005839:	pop    rsp
   14000583a:	add    BYTE PTR [rax+0x1],al
   14000583d:	add    BYTE PTR [rax],al
   14000583f:	add    ah,dh
   140005841:	add    eax,DWORD PTR [rax]
   140005843:	add    BYTE PTR [rax],al
   140005845:	add    BYTE PTR [rax],al
   140005847:	add    al,bl
   140005849:	pop    rsp
   14000584a:	add    BYTE PTR [rax+0x1],al
   14000584d:	add    BYTE PTR [rax],al
   14000584f:	add    ch,dh
   140005851:	add    eax,DWORD PTR [rax]
   140005853:	add    BYTE PTR [rax],al
   140005855:	add    BYTE PTR [rax],al
   140005857:	add    al,bl
   140005859:	pop    rsp
   14000585a:	add    BYTE PTR [rax+0x1],al
   14000585d:	add    BYTE PTR [rax],al
   14000585f:	add    BYTE PTR [rax],dl
   140005861:	add    BYTE PTR [rax],al
   140005863:	add    BYTE PTR [rax],al
   140005865:	add    BYTE PTR [rax],al
   140005867:	add    BYTE PTR [rax+0x5c],dh
   14000586a:	add    BYTE PTR [rax+0x1],al
   14000586d:	add    BYTE PTR [rax],al
   14000586f:	add    BYTE PTR [rdi],dh
   140005871:	add    BYTE PTR [rax],al
   140005873:	add    BYTE PTR [rax],al
   140005875:	add    BYTE PTR [rax],al
   140005877:	add    BYTE PTR [rax+0x140005c],bl
   14000587d:	add    BYTE PTR [rax],al
   14000587f:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   140005883:	add    BYTE PTR [rax],al
   140005885:	add    BYTE PTR [rax],al
   140005887:	add    al,al
   140005889:	pop    rsp
   14000588a:	add    BYTE PTR [rax+0x1],al
   14000588d:	add    BYTE PTR [rax],al
   14000588f:	add    BYTE PTR [rcx+0x0],dl
   140005895:	add    BYTE PTR [rax],al
   140005897:	add    al,ch
   140005899:	pop    rsp
   14000589a:	add    BYTE PTR [rax+0x1],al
   14000589d:	add    BYTE PTR [rax],al
   14000589f:	add    BYTE PTR [rbx],cl
   1400058a1:	add    DWORD PTR [rax],eax
   1400058a3:	add    BYTE PTR [rax],al
   1400058a5:	add    BYTE PTR [rax],al
   1400058a7:	add    BYTE PTR [rax],al
   1400058a9:	pop    rbp
   1400058aa:	add    BYTE PTR [rax+0x1],al
   1400058ad:	add    BYTE PTR [rax],al
   1400058af:	add    BYTE PTR [rax+0x0],dh
   1400058b2:	add    BYTE PTR [rax],al
   1400058b4:	add    BYTE PTR [rax],al
   1400058b6:	add    BYTE PTR [rax],al
   1400058b8:	sbb    BYTE PTR [rbp+0x0],bl
   1400058bb:	rex add DWORD PTR [rax],eax
   1400058be:	add    BYTE PTR [rax],al
   1400058c0:	push   rax
   1400058c1:	add    BYTE PTR [rax],al
   1400058c3:	add    BYTE PTR [rax],al
   1400058c5:	add    BYTE PTR [rax],al
   1400058c7:	add    BYTE PTR [rax+0x140005c],cl
   1400058cd:	add    BYTE PTR [rax],al
   1400058cf:	add    BYTE PTR [rdx],al
   1400058d1:	add    BYTE PTR [rax],al
   1400058d3:	add    BYTE PTR [rax],al
   1400058d5:	add    BYTE PTR [rax],al
   1400058d7:	add    BYTE PTR [rax],dh
   1400058d9:	pop    rbp
   1400058da:	add    BYTE PTR [rax+0x1],al
   1400058dd:	add    BYTE PTR [rax],al
   1400058df:	add    BYTE PTR [rdi],ah
   1400058e1:	add    BYTE PTR [rax],al
   1400058e3:	add    BYTE PTR [rax],al
   1400058e5:	add    BYTE PTR [rax],al
   1400058e7:	add    BYTE PTR [rax],bl
   1400058e9:	pop    rbp
   1400058ea:	add    BYTE PTR [rax+0x1],al
   1400058ed:	add    BYTE PTR [rax],al
   1400058ef:	add    BYTE PTR [rax+rax*1],cl
   1400058f2:	add    BYTE PTR [rax],al
   1400058f4:	add    BYTE PTR [rax],al
   1400058f6:	add    BYTE PTR [rax],al
   1400058f8:	jo     0x140005956
   1400058fa:	add    BYTE PTR [rax+0x1],al
   1400058fd:	add    BYTE PTR [rax],al
   1400058ff:	add    BYTE PTR [rdi],cl
   140005901:	add    BYTE PTR [rax],al
   140005903:	add    BYTE PTR [rax],al
   140005905:	add    BYTE PTR [rax],al
   140005907:	add    BYTE PTR [rax+0x140005c],bl
   14000590d:	add    BYTE PTR [rax],al
   14000590f:	add    BYTE PTR [rcx],al
   140005911:	add    BYTE PTR [rax],al
   140005913:	add    BYTE PTR [rax],al
   140005915:	add    BYTE PTR [rax],al
   140005917:	add    BYTE PTR [rax+0x5d],dl
   14000591a:	add    BYTE PTR [rax+0x1],al
   14000591d:	add    BYTE PTR [rax],al
   14000591f:	add    BYTE PTR [rsi],al
	...
   140005929:	pop    rbp
   14000592a:	add    BYTE PTR [rax+0x1],al
   14000592d:	add    BYTE PTR [rax],al
   14000592f:	add    BYTE PTR [rbx+0x0],bh
   140005932:	add    BYTE PTR [rax],al
   140005934:	add    BYTE PTR [rax],al
   140005936:	add    BYTE PTR [rax],al
   140005938:	add    BYTE PTR [rbp+0x0],bl
   14000593b:	rex add DWORD PTR [rax],eax
   14000593e:	add    BYTE PTR [rax],al
   140005940:	and    DWORD PTR [rax],eax
   140005942:	add    BYTE PTR [rax],al
   140005944:	add    BYTE PTR [rax],al
   140005946:	add    BYTE PTR [rax],al
   140005948:	push   0x140005d
   14000594d:	add    BYTE PTR [rax],al
   14000594f:	add    ah,dl
   140005951:	add    BYTE PTR [rax],al
   140005953:	add    BYTE PTR [rax],al
   140005955:	add    BYTE PTR [rax],al
   140005957:	add    BYTE PTR [rax+0x5d],ch
   14000595a:	add    BYTE PTR [rax+0x1],al
   14000595d:	add    BYTE PTR [rax],al
   14000595f:	add    BYTE PTR [rbx+0x0],al
   140005965:	add    BYTE PTR [rax],al
   140005967:	add    BYTE PTR [rax],al
   140005969:	pop    rbp
   14000596a:	add    BYTE PTR [rax+0x1],al
   14000596d:	add    BYTE PTR [rax],al
   14000596f:	add    dh,ah
   140005971:	add    eax,DWORD PTR [rax]
   140005973:	add    BYTE PTR [rax],al
   140005975:	add    BYTE PTR [rax],al
   140005977:	add    BYTE PTR [rax+0x5c],dh
   14000597a:	add    BYTE PTR [rax+0x1],al
   14000597d:	add    BYTE PTR [rax],al
   14000597f:	add    BYTE PTR [rax],cl
   140005981:	add    BYTE PTR [rax],al
   140005983:	add    BYTE PTR [rax],al
   140005985:	add    BYTE PTR [rax],al
   140005987:	add    BYTE PTR [rax+0x140005d],al
   14000598d:	add    BYTE PTR [rax],al
   14000598f:	add    BYTE PTR [rip+0x0],dl        # 0x140005995
   140005995:	add    BYTE PTR [rax],al
   140005997:	add    BYTE PTR [rax+0x140005d],bl
   14000599d:	add    BYTE PTR [rax],al
   14000599f:	add    BYTE PTR [rcx],dl
   1400059a1:	add    BYTE PTR [rax],al
   1400059a3:	add    BYTE PTR [rax],al
   1400059a5:	add    BYTE PTR [rax],al
   1400059a7:	add    BYTE PTR [rax+0x140005d],bh
   1400059ad:	add    BYTE PTR [rax],al
   1400059af:	add    BYTE PTR [rsi+0x0],ch
   1400059b2:	add    BYTE PTR [rax],al
   1400059b4:	add    BYTE PTR [rax],al
   1400059b6:	add    BYTE PTR [rax],al
   1400059b8:	fcomp  DWORD PTR [rax+rax*1+0x40]
   1400059bc:	add    DWORD PTR [rax],eax
   1400059be:	add    BYTE PTR [rax],al
   1400059c0:	(bad)  
   1400059c1:	or     DWORD PTR [rax],eax
   1400059c3:	add    BYTE PTR [rax],al
   1400059c5:	add    BYTE PTR [rax],al
   1400059c7:	add    al,al
   1400059c9:	pop    rsp
   1400059ca:	add    BYTE PTR [rax+0x1],al
   1400059cd:	add    BYTE PTR [rax],al
   1400059cf:	add    bl,ah
   1400059d1:	add    eax,DWORD PTR [rax]
   1400059d3:	add    BYTE PTR [rax],al
   1400059d5:	add    BYTE PTR [rax],al
   1400059d7:	add    al,dl
   1400059d9:	pop    rbp
   1400059da:	add    BYTE PTR [rax+0x1],al
   1400059dd:	add    BYTE PTR [rax],al
   1400059df:	add    BYTE PTR [rsi],cl
   1400059e1:	add    BYTE PTR [rax],al
   1400059e3:	add    BYTE PTR [rax],al
   1400059e5:	add    BYTE PTR [rax],al
   1400059e7:	add    BYTE PTR [rax+0x140005d],al
   1400059ed:	add    BYTE PTR [rax],al
   1400059ef:	add    BYTE PTR [rbx],al
   1400059f1:	add    BYTE PTR [rax],al
   1400059f3:	add    BYTE PTR [rax],al
   1400059f5:	add    BYTE PTR [rax],al
   1400059f7:	add    BYTE PTR [rax],dh
   1400059f9:	pop    rbp
   1400059fa:	add    BYTE PTR [rax+0x1],al
   1400059fd:	add    BYTE PTR [rax],al
   1400059ff:	add    BYTE PTR [rsi],bl
   140005a01:	add    BYTE PTR [rax],al
   140005a03:	add    BYTE PTR [rax],al
   140005a05:	add    BYTE PTR [rax],al
   140005a07:	add    al,bl
   140005a09:	pop    rsp
   140005a0a:	add    BYTE PTR [rax+0x1],al
   140005a0d:	add    BYTE PTR [rax],al
   140005a0f:	add    ch,dl
   140005a11:	add    al,0x0
   140005a13:	add    BYTE PTR [rax],al
   140005a15:	add    BYTE PTR [rax],al
   140005a17:	add    BYTE PTR [rax+0x140005d],bl
   140005a1d:	add    BYTE PTR [rax],al
   140005a1f:	add    BYTE PTR [rcx],bl
   140005a21:	add    BYTE PTR [rax],al
   140005a23:	add    BYTE PTR [rax],al
   140005a25:	add    BYTE PTR [rax],al
   140005a27:	add    al,bl
   140005a29:	pop    rsp
   140005a2a:	add    BYTE PTR [rax+0x1],al
   140005a2d:	add    BYTE PTR [rax],al
   140005a2f:	add    BYTE PTR [rax],ah
   140005a31:	add    BYTE PTR [rax],al
   140005a33:	add    BYTE PTR [rax],al
   140005a35:	add    BYTE PTR [rax],al
   140005a37:	add    BYTE PTR [rax+0x5c],dh
   140005a3a:	add    BYTE PTR [rax+0x1],al
   140005a3d:	add    BYTE PTR [rax],al
   140005a3f:	add    BYTE PTR [rax+rax*1],al
   140005a42:	add    BYTE PTR [rax],al
   140005a44:	add    BYTE PTR [rax],al
   140005a46:	add    BYTE PTR [rax],al
   140005a48:	call   0x141405aaa
   140005a4d:	add    BYTE PTR [rax],al
   140005a4f:	add    BYTE PTR [rip+0x0],bl        # 0x140005a55
   140005a55:	add    BYTE PTR [rax],al
   140005a57:	add    al,bl
   140005a59:	pop    rsp
   140005a5a:	add    BYTE PTR [rax+0x1],al
   140005a5d:	add    BYTE PTR [rax],al
   140005a5f:	add    BYTE PTR [rbx],dl
   140005a61:	add    BYTE PTR [rax],al
   140005a63:	add    BYTE PTR [rax],al
   140005a65:	add    BYTE PTR [rax],al
   140005a67:	add    BYTE PTR [rax+0x5c],dh
   140005a6a:	add    BYTE PTR [rax+0x1],al
   140005a6d:	add    BYTE PTR [rax],al
   140005a6f:	add    BYTE PTR [rip+0x27],bl        # 0x140005a9c
   140005a75:	add    BYTE PTR [rax],al
   140005a77:	add    BYTE PTR [rax],al
   140005a79:	pop    rsi
   140005a7a:	add    BYTE PTR [rax+0x1],al
   140005a7d:	add    BYTE PTR [rax],al
   140005a7f:	add    BYTE PTR [rax+0x27],al
   140005a82:	add    BYTE PTR [rax],al
   140005a84:	add    BYTE PTR [rax],al
   140005a86:	add    BYTE PTR [rax],al
   140005a88:	sbb    BYTE PTR [rsi+0x0],bl
   140005a8b:	rex add DWORD PTR [rax],eax
   140005a8e:	add    BYTE PTR [rax],al
   140005a90:	rex.B (bad) 
   140005a92:	add    BYTE PTR [rax],al
   140005a94:	add    BYTE PTR [rax],al
   140005a96:	add    BYTE PTR [rax],al
   140005a98:	sub    BYTE PTR [rsi+0x0],bl
   140005a9b:	rex add DWORD PTR [rax],eax
   140005a9e:	add    BYTE PTR [rax],al
   140005aa0:	(bad)  
   140005aa1:	(bad)  
   140005aa2:	add    BYTE PTR [rax],al
   140005aa4:	add    BYTE PTR [rax],al
   140005aa6:	add    BYTE PTR [rax],al
   140005aa8:	rex pop rsi
   140005aaa:	add    BYTE PTR [rax+0x1],al
   140005aad:	add    BYTE PTR [rax],al
   140005aaf:	add    BYTE PTR [rip+0x27],dh        # 0x140005adc
   140005ab5:	add    BYTE PTR [rax],al
   140005ab7:	add    BYTE PTR [rax+0x5e],ah
   140005aba:	add    BYTE PTR [rax+0x1],al
   140005abd:	add    BYTE PTR [rax],al
   140005abf:	add    BYTE PTR [rcx],bl
   140005ac1:	(bad)  
   140005ac2:	add    BYTE PTR [rax],al
   140005ac4:	add    BYTE PTR [rax],al
   140005ac6:	add    BYTE PTR [rax],al
   140005ac8:	sbb    BYTE PTR [rsi+0x0],0x40
   140005acc:	add    DWORD PTR [rax],eax
   140005ace:	add    BYTE PTR [rax],al
   140005ad0:	rex.RB (bad) 
   140005ad2:	add    BYTE PTR [rax],al
   140005ad4:	add    BYTE PTR [rax],al
   140005ad6:	add    BYTE PTR [rax],al
   140005ad8:	cwde   
   140005ad9:	pop    rsi
   140005ada:	add    BYTE PTR [rax+0x1],al
   140005add:	add    BYTE PTR [rax],al
   140005adf:	add    BYTE PTR [rbp+0x27],cl
   140005ae2:	add    BYTE PTR [rax],al
   140005ae4:	add    BYTE PTR [rax],al
   140005ae6:	add    BYTE PTR [rax],al
   140005ae8:	mov    al,0x5e
   140005aea:	add    BYTE PTR [rax+0x1],al
   140005aed:	add    BYTE PTR [rax],al
   140005aef:	add    BYTE PTR [rsi+0x27],al
   140005af2:	add    BYTE PTR [rax],al
   140005af4:	add    BYTE PTR [rax],al
   140005af6:	add    BYTE PTR [rax],al
   140005af8:	enter  0x5e,0x40
   140005afc:	add    DWORD PTR [rax],eax
   140005afe:	add    BYTE PTR [rax],al
   140005b00:	(bad)  
   140005b01:	(bad)  
   140005b02:	add    BYTE PTR [rax],al
   140005b04:	add    BYTE PTR [rax],al
   140005b06:	add    BYTE PTR [rax],al
   140005b08:	loopne 0x140005b68
   140005b0a:	add    BYTE PTR [rax+0x1],al
   140005b0d:	add    BYTE PTR [rax],al
   140005b0f:	add    BYTE PTR [rsi],bl
   140005b11:	(bad)  
   140005b12:	add    BYTE PTR [rax],al
   140005b14:	add    BYTE PTR [rax],al
   140005b16:	add    BYTE PTR [rax],al
   140005b18:	add    BYTE PTR [rdi+0x0],bl
   140005b1b:	rex add DWORD PTR [rax],eax
   140005b1e:	add    BYTE PTR [rax],al
   140005b20:	push   rcx
   140005b21:	(bad)  
   140005b22:	add    BYTE PTR [rax],al
   140005b24:	add    BYTE PTR [rax],al
   140005b26:	add    BYTE PTR [rax],al
   140005b28:	adc    BYTE PTR [rdi+0x0],bl
   140005b2b:	rex add DWORD PTR [rax],eax
   140005b2e:	add    BYTE PTR [rax],al
   140005b30:	xor    al,0x27
   140005b32:	add    BYTE PTR [rax],al
   140005b34:	add    BYTE PTR [rax],al
   140005b36:	add    BYTE PTR [rax],al
   140005b38:	sub    BYTE PTR [rdi+0x0],bl
   140005b3b:	rex add DWORD PTR [rax],eax
   140005b3e:	add    BYTE PTR [rax],al
   140005b40:	adc    al,0x27
   140005b42:	add    BYTE PTR [rax],al
   140005b44:	add    BYTE PTR [rax],al
   140005b46:	add    BYTE PTR [rax],al
   140005b48:	rex pop rdi
   140005b4a:	add    BYTE PTR [rax+0x1],al
   140005b4d:	add    BYTE PTR [rax],al
   140005b4f:	add    BYTE PTR [rsi],ah
   140005b51:	(bad)  
   140005b52:	add    BYTE PTR [rax],al
   140005b54:	add    BYTE PTR [rax],al
   140005b56:	add    BYTE PTR [rax],al
   140005b58:	push   rax
   140005b59:	pop    rdi
   140005b5a:	add    BYTE PTR [rax+0x1],al
   140005b5d:	add    BYTE PTR [rax],al
   140005b5f:	add    BYTE PTR [rax+0x27],cl
   140005b62:	add    BYTE PTR [rax],al
   140005b64:	add    BYTE PTR [rax],al
   140005b66:	add    BYTE PTR [rax],al
   140005b68:	push   0x140005f
   140005b6d:	add    BYTE PTR [rax],al
   140005b6f:	add    BYTE PTR [rax],ch
   140005b71:	(bad)  
   140005b72:	add    BYTE PTR [rax],al
   140005b74:	add    BYTE PTR [rax],al
   140005b76:	add    BYTE PTR [rax],al
   140005b78:	sbb    BYTE PTR [rdi+0x0],0x40
   140005b7c:	add    DWORD PTR [rax],eax
   140005b7e:	add    BYTE PTR [rax],al
   140005b80:	cmp    BYTE PTR [rdi],ah
   140005b82:	add    BYTE PTR [rax],al
   140005b84:	add    BYTE PTR [rax],al
   140005b86:	add    BYTE PTR [rax],al
   140005b88:	cwde   
   140005b89:	pop    rdi
   140005b8a:	add    BYTE PTR [rax+0x1],al
   140005b8d:	add    BYTE PTR [rax],al
   140005b8f:	add    BYTE PTR [rdi+0x27],cl
   140005b92:	add    BYTE PTR [rax],al
   140005b94:	add    BYTE PTR [rax],al
   140005b96:	add    BYTE PTR [rax],al
   140005b98:	test   al,0x5f
   140005b9a:	add    BYTE PTR [rax+0x1],al
   140005b9d:	add    BYTE PTR [rax],al
   140005b9f:	add    BYTE PTR [rdx+0x27],al
   140005ba2:	add    BYTE PTR [rax],al
   140005ba4:	add    BYTE PTR [rax],al
   140005ba6:	add    BYTE PTR [rax],al
   140005ba8:	rcr    BYTE PTR [rdi+0x0],0x40
   140005bac:	add    DWORD PTR [rax],eax
   140005bae:	add    BYTE PTR [rax],al
   140005bb0:	rex.R (bad) 
   140005bb2:	add    BYTE PTR [rax],al
   140005bb4:	add    BYTE PTR [rax],al
   140005bb6:	add    BYTE PTR [rax],al
   140005bb8:	rcr    BYTE PTR [rdi+0x0],1
   140005bbb:	rex add DWORD PTR [rax],eax
   140005bbe:	add    BYTE PTR [rax],al
   140005bc0:	rex.XB (bad) 
   140005bc2:	add    BYTE PTR [rax],al
   140005bc4:	add    BYTE PTR [rax],al
   140005bc6:	add    BYTE PTR [rax],al
   140005bc8:	loopne 0x140005c29
   140005bca:	add    BYTE PTR [rax+0x1],al
   140005bcd:	add    BYTE PTR [rax],al
   140005bcf:	add    BYTE PTR [rdi+0x27],al
   140005bd2:	add    BYTE PTR [rax],al
   140005bd4:	add    BYTE PTR [rax],al
   140005bd6:	add    BYTE PTR [rax],al
   140005bd8:	clc    
   140005bd9:	pop    rdi
   140005bda:	add    BYTE PTR [rax+0x1],al
   140005bdd:	add    BYTE PTR [rax],al
   140005bdf:	add    BYTE PTR [rdx],bh
   140005be1:	(bad)  
   140005be2:	add    BYTE PTR [rax],al
   140005be4:	add    BYTE PTR [rax],al
   140005be6:	add    BYTE PTR [rax],al
   140005be8:	or     BYTE PTR [rax+0x0],ah
   140005beb:	rex add DWORD PTR [rax],eax
   140005bee:	add    BYTE PTR [rax],al
   140005bf0:	rex.WB (bad) 
   140005bf2:	add    BYTE PTR [rax],al
   140005bf4:	add    BYTE PTR [rax],al
   140005bf6:	add    BYTE PTR [rax],al
   140005bf8:	and    BYTE PTR [rax+0x0],ah
   140005bfb:	rex add DWORD PTR [rax],eax
   140005bfe:	add    BYTE PTR [rax],al
   140005c00:	ss (bad) 
   140005c02:	add    BYTE PTR [rax],al
   140005c04:	add    BYTE PTR [rax],al
   140005c06:	add    BYTE PTR [rax],al
   140005c08:	xor    BYTE PTR [rax+0x0],ah
   140005c0b:	rex add DWORD PTR [rax],eax
   140005c0e:	add    BYTE PTR [rax],al
   140005c10:	cmp    eax,0x27
   140005c15:	add    BYTE PTR [rax],al
   140005c17:	add    BYTE PTR [rax+0x60],al
   140005c1a:	add    BYTE PTR [rax+0x1],al
   140005c1d:	add    BYTE PTR [rax],al
   140005c1f:	add    BYTE PTR [rbx],bh
   140005c21:	(bad)  
   140005c22:	add    BYTE PTR [rax],al
   140005c24:	add    BYTE PTR [rax],al
   140005c26:	add    BYTE PTR [rax],al
   140005c28:	pop    rax
   140005c29:	(bad)  
   140005c2a:	add    BYTE PTR [rax+0x1],al
   140005c2d:	add    BYTE PTR [rax],al
   140005c2f:	add    BYTE PTR [rcx],bh
   140005c31:	(bad)  
   140005c32:	add    BYTE PTR [rax],al
   140005c34:	add    BYTE PTR [rax],al
   140005c36:	add    BYTE PTR [rax],al
   140005c38:	jo     0x140005c9a
   140005c3a:	add    BYTE PTR [rax+0x1],al
   140005c3d:	add    BYTE PTR [rax],al
   140005c3f:	add    BYTE PTR [rdi+riz*1+0x0],cl
   140005c43:	add    BYTE PTR [rax],al
   140005c45:	add    BYTE PTR [rax],al
   140005c47:	add    BYTE PTR [rax+0x1400060],cl
   140005c4d:	add    BYTE PTR [rax],al
   140005c4f:	add    BYTE PTR [rbx],dh
   140005c51:	(bad)  
   140005c52:	add    BYTE PTR [rax],al
   140005c54:	add    BYTE PTR [rax],al
   140005c56:	add    BYTE PTR [rax],al
   140005c58:	cwde   
   140005c59:	(bad)  
   140005c5a:	add    BYTE PTR [rax+0x1],al
	...
   140005c6d:	add    BYTE PTR [rax],al
   140005c6f:	add    BYTE PTR [rax+0x65],dh
   140005c72:	jb     0x140005ce1
   140005c74:	imul   esi,DWORD PTR [rbx+0x73],0x206e6f69
   140005c7b:	fs outs dx,BYTE PTR gs:[rsi]
   140005c7e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140005c85:	add    BYTE PTR [rax],al
   140005c87:	add    BYTE PTR [rsi+0x69],ah
   140005c8a:	ins    BYTE PTR es:[rdi],dx
   140005c8b:	and    BYTE PTR gs:[rbp+0x78],ah
   140005c8f:	imul   esi,DWORD PTR [rbx+0x74],0x73
   140005c96:	add    BYTE PTR [rax],al
   140005c98:	outs   dx,BYTE PTR ds:[rsi]
   140005c99:	outs   dx,DWORD PTR ds:[rsi]
   140005c9a:	and    BYTE PTR [rbx+0x75],dh
   140005c9d:	movsxd ebp,DWORD PTR [rax+0x20]
   140005ca0:	fs gs jbe 0x140005d0d
   140005ca4:	movsxd esp,DWORD PTR [rbp+0x0]
   140005ca7:	add    BYTE PTR [rsi+0x69],ah
   140005caa:	ins    BYTE PTR es:[rdi],dx
   140005cab:	outs   dx,BYTE PTR gs:[rsi]
   140005cad:	(bad)  
   140005cae:	ins    DWORD PTR es:[rdi],dx
   140005caf:	and    BYTE PTR gs:[rdi+rbp*2+0x6f],dh
   140005cb4:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140005cb8:	add    BYTE PTR [eax],al
   140005cbb:	add    BYTE PTR [rax],al
   140005cbd:	add    BYTE PTR [rax],al
   140005cbf:	add    BYTE PTR [rbp+riz*2+0x76],ah
   140005cc3:	imul   esp,DWORD PTR [rbx+0x65],0x20726f20
   140005cca:	jb     0x140005d31
   140005ccc:	jae    0x140005d3d
   140005cce:	jne    0x140005d42
   140005cd0:	movsxd esp,DWORD PTR [rbp+0x20]
   140005cd3:	(bad)  
   140005cd4:	jne    0x140005d49
   140005cd6:	jns    0x140005cd8
   140005cd8:	imul   ebp,DWORD PTR [rdi+0x20],0x6f727265
   140005cdf:	jb     0x140005ce1
   140005ce1:	add    BYTE PTR [rax],al
   140005ce3:	add    BYTE PTR [rax],al
   140005ce5:	add    BYTE PTR [rax],al
   140005ce7:	add    BYTE PTR [rcx+rbp*2+0x72],ah
   140005ceb:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140005cf0:	jns    0x140005d12
   140005cf2:	outs   dx,BYTE PTR ds:[rsi]
   140005cf3:	outs   dx,DWORD PTR ds:[rsi]
   140005cf4:	je     0x140005d16
   140005cf6:	gs ins DWORD PTR es:[rdi],dx
   140005cf8:	jo     0x140005d6e
   140005cfa:	jns    0x140005cfc
   140005cfc:	add    BYTE PTR [rax],al
   140005cfe:	add    BYTE PTR [rax],al
   140005d00:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140005d07:	and    BYTE PTR [rcx+0x72],ah
   140005d0a:	addr32 jne 0x140005d7a
   140005d0d:	outs   dx,BYTE PTR gs:[rsi]
   140005d0f:	je     0x140005d11
   140005d11:	add    BYTE PTR [rax],al
   140005d13:	add    BYTE PTR [rax],al
   140005d15:	add    BYTE PTR [rax],al
   140005d17:	add    BYTE PTR [rsi+0x6f],ch
   140005d1a:	and    BYTE PTR [rbx+0x70],dh
   140005d1d:	(bad)  
   140005d1e:	movsxd esp,DWORD PTR [rbp+0x20]
   140005d21:	outs   dx,DWORD PTR ds:[rsi]
   140005d22:	outs   dx,BYTE PTR ds:[rsi]
   140005d23:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140005d27:	imul   esp,DWORD PTR [rbx+0x65],0x0
   140005d2e:	add    BYTE PTR [rax],al
   140005d30:	outs   dx,BYTE PTR ds:[rsi]
   140005d31:	outs   dx,DWORD PTR ds:[rsi]
   140005d32:	and    BYTE PTR [rbx+0x75],dh
   140005d35:	movsxd ebp,DWORD PTR [rax+0x20]
   140005d38:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x726f
   140005d3f:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140005d43:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140005d48:	jns    0x140005d4a
   140005d4a:	add    BYTE PTR [rax],al
   140005d4c:	add    BYTE PTR [rax],al
   140005d4e:	add    BYTE PTR [rax],al
   140005d50:	data16 jne 0x140005dc1
   140005d53:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140005d57:	outs   dx,BYTE PTR ds:[rsi]
   140005d58:	and    BYTE PTR [rsi+0x6f],ch
   140005d5b:	je     0x140005d7d
   140005d5d:	jae    0x140005dd4
   140005d5f:	jo     0x140005dd1
   140005d61:	outs   dx,DWORD PTR ds:[rsi]
   140005d62:	jb     0x140005dd8
   140005d64:	gs add BYTE PTR fs:[rax],al
   140005d68:	outs   dx,BYTE PTR ds:[rsi]
   140005d69:	outs   dx,DWORD PTR ds:[rsi]
   140005d6a:	and    BYTE PTR [rdi+rbp*2+0x63],ch
   140005d6e:	imul   esp,DWORD PTR [rax],0x61
   140005d71:	jbe    0x140005dd4
   140005d73:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140005d7b:	add    BYTE PTR [rax],al
   140005d7d:	add    BYTE PTR [rax],al
   140005d7f:	add    BYTE PTR [rsi+0x6f],ch
   140005d82:	je     0x140005da4
   140005d84:	outs   dx,BYTE PTR gs:[rsi]
   140005d86:	outs   dx,DWORD PTR ds:[rsi]
   140005d87:	jne    0x140005df0
   140005d89:	push   0x6d656d20
   140005d8e:	outs   dx,DWORD PTR ds:[rsi]
   140005d8f:	jb     0x140005e0a
   140005d91:	add    BYTE PTR [rax],al
   140005d93:	add    BYTE PTR [rax],al
   140005d95:	add    BYTE PTR [rax],al
   140005d97:	add    BYTE PTR [rdx+0x65],dh
   140005d9a:	jae    0x140005e0b
   140005d9c:	jne    0x140005e10
   140005d9e:	movsxd esp,DWORD PTR [rbp+0x20]
   140005da1:	jne    0x140005e11
   140005da3:	(bad)  
   140005da4:	jbe    0x140005e07
   140005da6:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7420656c
   140005dae:	jb     0x140005e29
   140005db0:	and    BYTE PTR [rcx+0x67],ah
   140005db3:	(bad)  
   140005db4:	imul   ebp,DWORD PTR [rsi+0x0],0x6f726300
   140005dbb:	jae    0x140005e30
   140005dbd:	and    BYTE PTR [rbp+riz*2+0x76],ah
   140005dc1:	imul   esp,DWORD PTR [rbx+0x65],0x6e696c20
   140005dc8:	imul   eax,DWORD PTR [rax],0x0
   140005dcb:	add    BYTE PTR [rax],al
   140005dcd:	add    BYTE PTR [rax],al
   140005dcf:	add    BYTE PTR [rdi+0x70],ch
   140005dd2:	gs jb  0x140005e36
   140005dd5:	je     0x140005e40
   140005dd7:	outs   dx,DWORD PTR ds:[rsi]
   140005dd8:	outs   dx,BYTE PTR ds:[rsi]
   140005dd9:	and    BYTE PTR [rbx+0x61],ah
   140005ddc:	outs   dx,BYTE PTR ds:[rsi]
   140005ddd:	movsxd esp,DWORD PTR [rbp+0x6c]
   140005de0:	gs add BYTE PTR fs:[rax],al
   140005de4:	add    BYTE PTR [rax],al
   140005de6:	add    BYTE PTR [rax],al
   140005de8:	je     0x140005e59
   140005dea:	outs   dx,DWORD PTR ds:[rsi]
   140005deb:	and    BYTE PTR [rbp+0x61],ch
   140005dee:	outs   dx,BYTE PTR ds:[rsi]
   140005def:	jns    0x140005e11
   140005df1:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140005df8:	jo     0x140005e5f
   140005dfa:	outs   dx,BYTE PTR ds:[rsi]
   140005dfb:	add    BYTE PTR [rax],al
   140005dfd:	add    BYTE PTR [rax],al
   140005dff:	add    BYTE PTR [rax+0x65],dh
   140005e02:	jb     0x140005e71
   140005e04:	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
   140005e0b:	fs outs dx,BYTE PTR gs:[rsi]
   140005e0e:	imul   esp,DWORD PTR [rbp+0x64],0x0
   140005e15:	add    BYTE PTR [rax],al
   140005e17:	add    BYTE PTR [rcx+0x64],ah
   140005e1a:	fs jb  0x140005e82
   140005e1d:	jae    0x140005e92
   140005e1f:	pop    rdi
   140005e20:	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
   140005e27:	add    BYTE PTR [rcx+0x64],ah
   140005e2a:	fs jb  0x140005e92
   140005e2d:	jae    0x140005ea2
   140005e2f:	pop    rdi
   140005e30:	outs   dx,BYTE PTR ds:[rsi]
   140005e31:	outs   dx,DWORD PTR ds:[rsi]
   140005e32:	je     0x140005e93
   140005e34:	(bad)  
   140005e35:	jbe    0x140005e98
   140005e37:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140005e3f:	add    BYTE PTR [rcx+0x64],ah
   140005e42:	fs jb  0x140005eaa
   140005e45:	jae    0x140005eba
   140005e47:	pop    rdi
   140005e48:	data16 (bad) 
   140005e4a:	ins    DWORD PTR es:[rdi],dx
   140005e4b:	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
   140005e53:	jae    0x140005eca
   140005e55:	jo     0x140005ec7
   140005e57:	outs   dx,DWORD PTR ds:[rsi]
   140005e58:	jb     0x140005ece
   140005e5a:	gs add BYTE PTR fs:[rax],al
   140005e5e:	add    BYTE PTR [rax],al
   140005e60:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140005e63:	outs   dx,BYTE PTR ds:[rsi]
   140005e64:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140005e69:	outs   dx,BYTE PTR ds:[rsi]
   140005e6a:	pop    rdi
   140005e6b:	(bad)  
   140005e6c:	ins    BYTE PTR es:[rdi],dx
   140005e6d:	jb     0x140005ed4
   140005e6f:	(bad)  
   140005e70:	fs jns 0x140005ed2
   140005e73:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140005e7a:	jb     0x140005ee1
   140005e7c:	jae    0x140005ef1
   140005e7e:	add    BYTE PTR [rax],al
   140005e80:	(bad)
   140005e85:	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
   140005e8d:	jb     0x140005ef8
   140005e8f:	jo     0x140005f05
   140005e91:	outs   dx,DWORD PTR ds:[rsi]
   140005e92:	jb     0x140005e94
   140005e94:	add    BYTE PTR [rax],al
   140005e96:	add    BYTE PTR [rax],al
   140005e98:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140005e9b:	outs   dx,BYTE PTR ds:[rsi]
   140005e9c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140005ea1:	outs   dx,BYTE PTR ds:[rsi]
   140005ea2:	pop    rdi
   140005ea3:	(bad)  
   140005ea4:	(bad)  
   140005ea5:	outs   dx,DWORD PTR ds:[rsi]
   140005ea6:	jb     0x140005f1c
   140005ea8:	gs add BYTE PTR fs:[rax],al
   140005eac:	add    BYTE PTR [rax],al
   140005eae:	add    BYTE PTR [rax],al
   140005eb0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140005eb3:	outs   dx,BYTE PTR ds:[rsi]
   140005eb4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140005eb9:	outs   dx,BYTE PTR ds:[rsi]
   140005eba:	pop    rdi
   140005ebb:	jb     0x140005f22
   140005ebd:	data16 jne 0x140005f33
   140005ec0:	gs add BYTE PTR fs:[rax],al
   140005ec4:	add    BYTE PTR [rax],al
   140005ec6:	add    BYTE PTR [rax],al
   140005ec8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140005ecb:	outs   dx,BYTE PTR ds:[rsi]
   140005ecc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140005ed1:	outs   dx,BYTE PTR ds:[rsi]
   140005ed2:	pop    rdi
   140005ed3:	jb     0x140005f3a
   140005ed5:	jae    0x140005f3c
   140005ed7:	je     0x140005ed9
   140005ed9:	add    BYTE PTR [rax],al
   140005edb:	add    BYTE PTR [rax],al
   140005edd:	add    BYTE PTR [rax],al
   140005edf:	add    BYTE PTR [rbp+riz*2+0x73],ah
   140005ee3:	je     0x140005f4e
   140005ee5:	outs   dx,BYTE PTR ds:[rsi]
   140005ee6:	(bad)  
   140005ee7:	je     0x140005f52
   140005ee9:	outs   dx,DWORD PTR ds:[rsi]
   140005eea:	outs   dx,BYTE PTR ds:[rsi]
   140005eeb:	pop    rdi
   140005eec:	(bad)  
   140005eed:	fs fs jb 0x140005f56
   140005ef1:	jae    0x140005f66
   140005ef3:	pop    rdi
   140005ef4:	jb     0x140005f5b
   140005ef6:	jno    0x140005f6d
   140005ef8:	imul   esi,DWORD PTR [rdx+0x65],0x64
   140005eff:	add    BYTE PTR [rdx+0x61],ah
   140005f02:	fs pop rdi
   140005f04:	(bad)  
   140005f05:	fs fs jb 0x140005f6e
   140005f09:	jae    0x140005f7e
   140005f0b:	add    BYTE PTR [rax],al
   140005f0d:	add    BYTE PTR [rax],al
   140005f0f:	add    BYTE PTR [rax+0x6f],ch
   140005f12:	jae    0x140005f88
   140005f14:	pop    rdi
   140005f15:	jne    0x140005f85
   140005f17:	jb     0x140005f7e
   140005f19:	(bad)  
   140005f1a:	movsxd ebp,DWORD PTR [rax+0x61]
   140005f1d:	(bad)  
   140005f1e:	ins    BYTE PTR es:[rdi],dx
   140005f1f:	add    BYTE PTR gs:[rax],al
   140005f22:	add    BYTE PTR [rax],al
   140005f24:	add    BYTE PTR [rax],al
   140005f26:	add    BYTE PTR [rax],al
   140005f28:	outs   dx,DWORD PTR ds:[rsi]
   140005f29:	jo     0x140005f90
   140005f2b:	jb     0x140005f8e
   140005f2d:	je     0x140005f98
   140005f2f:	outs   dx,DWORD PTR ds:[rsi]
   140005f30:	outs   dx,BYTE PTR ds:[rsi]
   140005f31:	pop    rdi
   140005f32:	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
   140005f39:	jb     0x140005fa0
   140005f3b:	jae    0x140005fb0
   140005f3d:	add    BYTE PTR [rax],al
   140005f3f:	add    BYTE PTR [rcx+0x6e],ch
   140005f42:	je     0x140005fa9
   140005f44:	jb     0x140005fb8
   140005f46:	jne    0x140005fb8
   140005f48:	je     0x140005faf
   140005f4a:	add    BYTE PTR fs:[rax],al
   140005f4d:	add    BYTE PTR [rax],al
   140005f4f:	add    BYTE PTR [rcx+0x6e],ch
   140005f52:	jbe    0x140005fb5
   140005f54:	ins    BYTE PTR es:[rdi],dx
   140005f55:	imul   esp,DWORD PTR [rdi+rbx*2+0x61],0x6d756772
   140005f5d:	outs   dx,BYTE PTR gs:[rsi]
   140005f5f:	je     0x140005f61
   140005f61:	add    BYTE PTR [rax],al
   140005f63:	add    BYTE PTR [rax],al
   140005f65:	add    BYTE PTR [rax],al
   140005f67:	add    BYTE PTR [rcx+0x6c],ah
   140005f6a:	jb     0x140005fd1
   140005f6c:	(bad)  
   140005f6d:	fs jns 0x140005fcf
   140005f70:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140005f73:	outs   dx,BYTE PTR ds:[rsi]
   140005f74:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140005f79:	add    BYTE PTR [rax],al
   140005f7b:	add    BYTE PTR [rax],al
   140005f7d:	add    BYTE PTR [rax],al
   140005f7f:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140005f83:	pop    rdi
   140005f84:	ins    DWORD PTR es:[rdi],dx
   140005f85:	(bad)  
   140005f86:	outs   dx,BYTE PTR ds:[rsi]
   140005f87:	jns    0x140005fe8
   140005f89:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
   140005f90:	jo     0x140005ff7
   140005f92:	outs   dx,BYTE PTR ds:[rsi]
   140005f93:	add    BYTE PTR [rax],al
   140005f95:	add    BYTE PTR [rax],al
   140005f97:	add    BYTE PTR [rbp+0x65],ch
   140005f9a:	jae    0x14000600f
   140005f9c:	(bad)  
   140005f9d:	addr32 gs pop rdi
   140005fa0:	jae    0x14000600b
   140005fa2:	jp     0x140006009
   140005fa4:	add    BYTE PTR [rax],al
   140005fa6:	add    BYTE PTR [rax],al
   140005fa8:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
   140005faf:	gs pop rdi
   140005fb1:	je     0x140006022
   140005fb3:	outs   dx,DWORD PTR ds:[rsi]
   140005fb4:	pop    rdi
   140005fb5:	ins    BYTE PTR es:[rdi],dx
   140005fb6:	outs   dx,DWORD PTR ds:[rsi]
   140005fb7:	outs   dx,BYTE PTR ds:[rsi]
   140005fb8:	add    BYTE PTR [eax],al
   140005fbb:	add    BYTE PTR [rax],al
   140005fbd:	add    BYTE PTR [rax],al
   140005fbf:	add    BYTE PTR [rsi+0x65],ch
   140005fc2:	je     0x14000603b
   140005fc4:	outs   dx,DWORD PTR ds:[rsi]
   140005fc5:	jb     0x140006032
   140005fc7:	pop    rdi
   140005fc8:	outs   dx,DWORD PTR fs:[rsi]
   140005fca:	ja     0x14000603a
   140005fcc:	add    BYTE PTR [rax],al
   140005fce:	add    BYTE PTR [rax],al
   140005fd0:	outs   dx,BYTE PTR ds:[rsi]
   140005fd1:	gs je  0x14000604b
   140005fd4:	outs   dx,DWORD PTR ds:[rsi]
   140005fd5:	jb     0x140006042
   140005fd7:	pop    rdi
   140005fd8:	jb     0x14000603f
   140005fda:	jae    0x140006041
   140005fdc:	je     0x140005fde
   140005fde:	add    BYTE PTR [rax],al
   140005fe0:	outs   dx,BYTE PTR ds:[rsi]
   140005fe1:	gs je  0x14000605b
   140005fe4:	outs   dx,DWORD PTR ds:[rsi]
   140005fe5:	jb     0x140006052
   140005fe7:	pop    rdi
   140005fe8:	jne    0x140006058
   140005fea:	jb     0x140006051
   140005fec:	(bad)  
   140005fed:	movsxd ebp,DWORD PTR [rax+0x61]
   140005ff0:	(bad)  
   140005ff1:	ins    BYTE PTR es:[rdi],dx
   140005ff2:	add    BYTE PTR gs:[rax],al
   140005ff5:	add    BYTE PTR [rax],al
   140005ff7:	add    BYTE PTR [rsi+0x6f],ch
   140005ffa:	pop    rdi
   140005ffb:	(bad)  
   140005ffc:	jne    0x140006064
   140005ffe:	data16 gs jb 0x140006061
   140006002:	jae    0x140006074
   140006004:	(bad)  
   140006005:	movsxd esp,DWORD PTR [rbp+0x0]
   140006008:	outs   dx,BYTE PTR ds:[rsi]
   140006009:	outs   dx,DWORD PTR ds:[rsi]
   14000600a:	pop    rdi
   14000600b:	jo     0x14000607f
   14000600d:	outs   dx,DWORD PTR ds:[rsi]
   14000600e:	je     0x14000607f
   140006010:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140006013:	pop    rdi
   140006014:	outs   dx,DWORD PTR ds:[rsi]
   140006015:	jo     0x14000608b
   140006017:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000601e:	add    BYTE PTR [rax],al
   140006020:	outs   dx,BYTE PTR ds:[rsi]
   140006021:	outs   dx,DWORD PTR ds:[rsi]
   140006022:	je     0x140006083
   140006024:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006027:	outs   dx,BYTE PTR ds:[rsi]
   140006028:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    BYTE PTR [rsi+0x6f],ch
   140006032:	je     0x140006093
   140006034:	(bad)  
   140006035:	pop    rdi
   140006036:	jae    0x1400060a7
   140006038:	movsxd ebp,DWORD PTR [rbx+0x65]
   14000603b:	je     0x14000603d
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    BYTE PTR [rdi+0x70],ch
   140006042:	gs jb  0x1400060a6
   140006045:	je     0x1400060b0
   140006047:	outs   dx,DWORD PTR ds:[rsi]
   140006048:	outs   dx,BYTE PTR ds:[rsi]
   140006049:	pop    rdi
   14000604a:	outs   dx,BYTE PTR ds:[rsi]
   14000604b:	outs   dx,DWORD PTR ds:[rsi]
   14000604c:	je     0x1400060ad
   14000604e:	jae    0x1400060c5
   140006050:	jo     0x1400060c2
   140006052:	outs   dx,DWORD PTR ds:[rsi]
   140006053:	jb     0x1400060c9
   140006055:	gs add BYTE PTR fs:[rax+0x72],dh
   14000605a:	outs   dx,DWORD PTR ds:[rsi]
   14000605b:	je     0x1400060cc
   14000605d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140006060:	pop    rdi
   140006061:	outs   dx,BYTE PTR ds:[rsi]
   140006062:	outs   dx,DWORD PTR ds:[rsi]
   140006063:	je     0x1400060c4
   140006065:	jae    0x1400060dc
   140006067:	jo     0x1400060d9
   140006069:	outs   dx,DWORD PTR ds:[rsi]
   14000606a:	jb     0x1400060e0
   14000606c:	gs add BYTE PTR fs:[rax],al
   140006070:	ja     0x1400060e4
   140006072:	outs   dx,DWORD PTR ds:[rsi]
   140006073:	outs   dx,BYTE PTR ds:[rsi]
   140006074:	addr32 pop rdi
   140006076:	jo     0x1400060ea
   140006078:	outs   dx,DWORD PTR ds:[rsi]
   140006079:	je     0x1400060ea
   14000607b:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14000607e:	pop    rdi
   14000607f:	je     0x1400060fa
   140006081:	jo     0x1400060e8
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rcx+rbp*2+0x6d],dh
   14000608b:	gs fs pop rdi
   14000608e:	outs   dx,DWORD PTR ds:[rsi]
   14000608f:	jne    0x140006105
   140006091:	add    BYTE PTR [rax],al
   140006093:	add    BYTE PTR [rax],al
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    BYTE PTR [rdi+0x70],ch
   14000609a:	gs jb  0x1400060fe
   14000609d:	je     0x140006108
   14000609f:	outs   dx,DWORD PTR ds:[rsi]
   1400060a0:	outs   dx,BYTE PTR ds:[rsi]
   1400060a1:	pop    rdi
   1400060a2:	ja     0x140006113
   1400060a4:	jne    0x140006112
   1400060a6:	fs pop rdi
   1400060a8:	(bad)  
   1400060a9:	ins    BYTE PTR es:[rdi],dx
   1400060aa:	outs   dx,DWORD PTR ds:[rsi]
   1400060ab:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	data16 add BYTE PTR [rax],al
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rax+0x1400065],ah
   1400060bd:	add    BYTE PTR [rax],al
   1400060bf:	add    BYTE PTR [rax+rax*1+0x0],ah
   1400060c3:	add    BYTE PTR [rax],al
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    al,al
   1400060c9:	add    BYTE PTR gs:[rax+0x1],al
   1400060cd:	add    BYTE PTR [rax],al
   1400060cf:	add    BYTE PTR [rbp+0x0],ah
   1400060d2:	add    BYTE PTR [rax],al
   1400060d4:	add    BYTE PTR [rax],al
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	shl    BYTE PTR [rbp+0x0],1
   1400060db:	rex add DWORD PTR [rax],eax
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	jno    0x1400060e2
   1400060e2:	add    BYTE PTR [rax],al
   1400060e4:	add    BYTE PTR [rax],al
   1400060e6:	add    BYTE PTR [rax],al
   1400060e8:	call   0x141406152
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    BYTE PTR [rdi],al
	...
   1400060f9:	data16 add BYTE PTR [rax+0x1],al
   1400060fd:	add    BYTE PTR [rax],al
   1400060ff:	add    BYTE PTR [rcx],ah
   140006101:	add    BYTE PTR [rax],al
   140006103:	add    BYTE PTR [rax],al
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rax],bl
   140006109:	data16 add BYTE PTR [rax+0x1],al
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rsi],cl
   140006111:	add    BYTE PTR [rax],al
   140006113:	add    BYTE PTR [rax],al
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    BYTE PTR [rax],dh
   140006119:	data16 add BYTE PTR [rax+0x1],al
   14000611d:	add    BYTE PTR [rax],al
   14000611f:	add    BYTE PTR [rcx],cl
   140006121:	add    BYTE PTR [rax],al
   140006123:	add    BYTE PTR [rax],al
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    BYTE PTR [rax+0x66],al
   14000612a:	add    BYTE PTR [rax+0x1],al
   14000612d:	add    BYTE PTR [rax],al
   14000612f:	add    BYTE PTR [rax+0x0],ch
   140006132:	add    BYTE PTR [rax],al
   140006134:	add    BYTE PTR [rax],al
   140006136:	add    BYTE PTR [rax],al
   140006138:	pop    rax
   140006139:	data16 add BYTE PTR [rax+0x1],al
   14000613d:	add    BYTE PTR [rax],al
   14000613f:	add    BYTE PTR [rax],ah
   140006141:	add    BYTE PTR [rax],al
   140006143:	add    BYTE PTR [rax],al
   140006145:	add    BYTE PTR [rax],al
   140006147:	add    BYTE PTR [rax+0x66],ch
   14000614a:	add    BYTE PTR [rax+0x1],al
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    BYTE PTR [rdx+0x0],ch
   140006152:	add    BYTE PTR [rax],al
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax],al
   140006158:	js     0x1400061c0
   14000615a:	add    BYTE PTR [rax+0x1],al
   14000615d:	add    BYTE PTR [rax],al
   14000615f:	add    BYTE PTR [rdi+0x0],ah
   140006162:	add    BYTE PTR [rax],al
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	nop
   140006169:	data16 add BYTE PTR [rax+0x1],al
   14000616d:	add    BYTE PTR [rax],al
   14000616f:	add    BYTE PTR [rbx+0x0],ch
   140006172:	add    BYTE PTR [rax],al
   140006174:	add    BYTE PTR [rax],al
   140006176:	add    BYTE PTR [rax],al
   140006178:	mov    al,0x66
   14000617a:	add    BYTE PTR [rax+0x1],al
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006183:	add    BYTE PTR [rax],al
   140006185:	add    BYTE PTR [rax],al
   140006187:	add    al,cl
   140006189:	data16 add BYTE PTR [rax+0x1],al
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    BYTE PTR [rdx],dl
   140006191:	add    BYTE PTR [rax],al
   140006193:	add    BYTE PTR [rax],al
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    BYTE PTR [rax+0x140005d],bh
   14000619d:	add    BYTE PTR [rax],al
   14000619f:	add    BYTE PTR [rbp+0x0],ch
   1400061a2:	add    BYTE PTR [rax],al
   1400061a4:	add    BYTE PTR [rax],al
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	loopne 0x140006210
   1400061aa:	add    BYTE PTR [rax+0x1],al
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    BYTE PTR [rax],dl
   1400061b1:	add    BYTE PTR [rax],al
   1400061b3:	add    BYTE PTR [rax],al
   1400061b5:	add    BYTE PTR [rax],al
   1400061b7:	add    al,al
   1400061b9:	pop    rsp
   1400061ba:	add    BYTE PTR [rax+0x1],al
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    BYTE PTR [rcx],ch
   1400061c1:	add    BYTE PTR [rax],al
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    al,ch
   1400061c9:	pop    rsp
   1400061ca:	add    BYTE PTR [rax+0x1],al
   1400061cd:	add    BYTE PTR [rax],al
   1400061cf:	add    BYTE PTR [rax],cl
	...
   1400061d9:	add    BYTE PTR [eax+0x1],al
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    BYTE PTR [rcx],dl
   1400061e1:	add    BYTE PTR [rax],al
   1400061e3:	add    BYTE PTR [rax],al
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    BYTE PTR [rax+0x140005c],cl
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    BYTE PTR [rbx],bl
   1400061f1:	add    BYTE PTR [rax],al
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    BYTE PTR [rax],bl
   1400061f9:	add    BYTE PTR [eax+0x1],al
   1400061fd:	add    BYTE PTR [rax],al
   1400061ff:	add    BYTE PTR [rsi],ah
   140006201:	add    BYTE PTR [rax],al
   140006203:	add    BYTE PTR [rax],al
   140006205:	add    BYTE PTR [rax],al
   140006207:	add    BYTE PTR [rax+0x140005c],ch
   14000620d:	add    BYTE PTR [rax],al
   14000620f:	add    BYTE PTR [rax],ch
   140006211:	add    BYTE PTR [rax],al
   140006213:	add    BYTE PTR [rax],al
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    BYTE PTR [rax+0x5d],dl
   14000621a:	add    BYTE PTR [rax+0x1],al
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    BYTE PTR [rsi+0x0],ch
   140006222:	add    BYTE PTR [rax],al
   140006224:	add    BYTE PTR [rax],al
   140006226:	add    BYTE PTR [rax],al
   140006228:	sub    BYTE PTR [rdi+0x0],ah
   14000622b:	rex add DWORD PTR [rax],eax
   14000622e:	add    BYTE PTR [rax],al
   140006230:	outs   dx,DWORD PTR ds:[rsi]
   140006231:	add    BYTE PTR [rax],al
   140006233:	add    BYTE PTR [rax],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    BYTE PTR [rax+0x67],al
   14000623a:	add    BYTE PTR [rax+0x1],al
   14000623d:	add    BYTE PTR [rax],al
   14000623f:	add    BYTE PTR [rdx],ch
   140006241:	add    BYTE PTR [rax],al
   140006243:	add    BYTE PTR [rax],al
   140006245:	add    BYTE PTR [rax],al
   140006247:	add    BYTE PTR [rax+0x67],bl
   14000624a:	add    BYTE PTR [rax+0x1],al
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rcx],bl
   140006251:	add    BYTE PTR [rax],al
   140006253:	add    BYTE PTR [rax],al
   140006255:	add    BYTE PTR [rax],al
   140006257:	add    BYTE PTR [rax+0x67],dh
   14000625a:	add    BYTE PTR [rax+0x1],al
   14000625d:	add    BYTE PTR [rax],al
   14000625f:	add    BYTE PTR [rax+rax*1],al
   140006262:	add    BYTE PTR [rax],al
   140006264:	add    BYTE PTR [rax],al
   140006266:	add    BYTE PTR [rax],al
   140006268:	rex pop rdi
   14000626a:	add    BYTE PTR [rax+0x1],al
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    BYTE PTR [rsi],dl
	...
   140006279:	pop    rbp
   14000627a:	add    BYTE PTR [rax+0x1],al
   14000627d:	add    BYTE PTR [rax],al
   14000627f:	add    BYTE PTR [rip+0x0],bl        # 0x140006285
   140006285:	add    BYTE PTR [rax],al
   140006287:	add    BYTE PTR [rax+0x1400067],bl
   14000628d:	add    BYTE PTR [rax],al
   14000628f:	add    BYTE PTR [rip+0x0],al        # 0x140006295
   140006295:	add    BYTE PTR [rax],al
   140006297:	add    al,bl
   140006299:	pop    rsp
   14000629a:	add    BYTE PTR [rax+0x1],al
   14000629d:	add    BYTE PTR [rax],al
   14000629f:	add    BYTE PTR [rip+0x0],dl        # 0x1400062a5
   1400062a5:	add    BYTE PTR [rax],al
   1400062a7:	add    BYTE PTR [rax+0x1400067],ch
   1400062ad:	add    BYTE PTR [rax],al
   1400062af:	add    BYTE PTR [rbx+0x0],dh
   1400062b2:	add    BYTE PTR [rax],al
   1400062b4:	add    BYTE PTR [rax],al
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	mov    eax,0x1400067
   1400062bd:	add    BYTE PTR [rax],al
   1400062bf:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400062c3:	add    BYTE PTR [rax],al
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    al,cl
   1400062c9:	add    BYTE PTR [eax+0x1],al
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    BYTE PTR [rbp+0x0],dh
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	fsub   DWORD PTR [rdi+0x0]
   1400062db:	rex add DWORD PTR [rax],eax
   1400062de:	add    BYTE PTR [rax],al
   1400062e0:	jbe    0x1400062e2
   1400062e2:	add    BYTE PTR [rax],al
   1400062e4:	add    BYTE PTR [rax],al
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	call   0x141406354
   1400062ed:	add    BYTE PTR [rax],al
   1400062ef:	add    BYTE PTR [rdi+0x0],dh
   1400062f2:	add    BYTE PTR [rax],al
   1400062f4:	add    BYTE PTR [rax],al
   1400062f6:	add    BYTE PTR [rax],al
   1400062f8:	add    BYTE PTR [rax+0x0],ch
   1400062fb:	rex add DWORD PTR [rax],eax
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	or     al,BYTE PTR [rax]
   140006302:	add    BYTE PTR [rax],al
   140006304:	add    BYTE PTR [rax],al
   140006306:	add    BYTE PTR [rax],al
   140006308:	adc    BYTE PTR [rax+0x0],ch
   14000630b:	rex add DWORD PTR [rax],eax
   14000630e:	add    BYTE PTR [rax],al
   140006310:	jns    0x140006312
   140006312:	add    BYTE PTR [rax],al
   140006314:	add    BYTE PTR [rax],al
   140006316:	add    BYTE PTR [rax],al
   140006318:	sub    BYTE PTR [rax+0x0],ch
   14000631b:	rex add DWORD PTR [rax],eax
   14000631e:	add    BYTE PTR [rax],al
   140006320:	(bad)  
   140006321:	add    BYTE PTR [rax],al
   140006323:	add    BYTE PTR [rax],al
   140006325:	add    BYTE PTR [rax],al
   140006327:	add    BYTE PTR [rax+0x5d],ch
   14000632a:	add    BYTE PTR [rax+0x1],al
   14000632d:	add    BYTE PTR [rax],al
   14000632f:	add    BYTE PTR [rax+0x0],bh
   140006332:	add    BYTE PTR [rax],al
   140006334:	add    BYTE PTR [rax],al
   140006336:	add    BYTE PTR [rax],al
   140006338:	xor    BYTE PTR [rax+0x0],ch
   14000633b:	rex add DWORD PTR [rax],eax
   14000633e:	add    BYTE PTR [rax],al
   140006340:	jp     0x140006342
   140006342:	add    BYTE PTR [rax],al
   140006344:	add    BYTE PTR [rax],al
   140006346:	add    BYTE PTR [rax],al
   140006348:	rex.W push 0x14000
   14000634e:	add    BYTE PTR [rax],al
   140006350:	jnp    0x140006352
   140006352:	add    BYTE PTR [rax],al
   140006354:	add    BYTE PTR [rax],al
   140006356:	add    BYTE PTR [rax],al
   140006358:	pop    rax
   140006359:	push   0x14000
   14000635e:	add    BYTE PTR [rax],al
   140006360:	sbb    al,0x0
   140006362:	add    BYTE PTR [rax],al
   140006364:	add    BYTE PTR [rax],al
   140006366:	add    BYTE PTR [rax],al
   140006368:	sbb    BYTE PTR [rbp+0x0],bl
   14000636b:	rex add DWORD PTR [rax],eax
   14000636e:	add    BYTE PTR [rax],al
   140006370:	jl     0x140006372
   140006372:	add    BYTE PTR [rax],al
   140006374:	add    BYTE PTR [rax],al
   140006376:	add    BYTE PTR [rax],al
   140006378:	jo     0x1400063e2
   14000637a:	add    BYTE PTR [rax+0x1],al
   14000637d:	add    BYTE PTR [rax],al
   14000637f:	add    BYTE PTR [rsi],al
   140006381:	add    BYTE PTR [rax],al
   140006383:	add    BYTE PTR [rax],al
   140006385:	add    BYTE PTR [rax],al
   140006387:	add    BYTE PTR [rax+0x1400068],cl
   14000638d:	add    BYTE PTR [rax],al
   14000638f:	add    BYTE PTR [rbx],dl
   140006391:	add    BYTE PTR [rax],al
   140006393:	add    BYTE PTR [rax],al
   140006395:	add    BYTE PTR [rax],al
   140006397:	add    BYTE PTR [rax+0x140005c],bl
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    BYTE PTR [rdx],al
   1400063a1:	add    BYTE PTR [rax],al
   1400063a3:	add    BYTE PTR [rax],al
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    BYTE PTR [rax],dh
   1400063a9:	pop    rbp
   1400063aa:	add    BYTE PTR [rax+0x1],al
   1400063ad:	add    BYTE PTR [rax],al
   1400063af:	add    BYTE PTR [rbx],al
   1400063b1:	add    BYTE PTR [rax],al
   1400063b3:	add    BYTE PTR [rax],al
   1400063b5:	add    BYTE PTR [rax],al
   1400063b7:	add    BYTE PTR [rax+0x1400068],ch
   1400063bd:	add    BYTE PTR [rax],al
   1400063bf:	add    BYTE PTR [rax+rax*1],dl
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	add    BYTE PTR [rax],al
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	mov    eax,0x1400068
   1400063cd:	add    BYTE PTR [rax],al
   1400063cf:	add    BYTE PTR [rax+0x0],al
   1400063d5:	add    BYTE PTR [rax],al
   1400063d7:	add    al,cl
   1400063d9:	push   0x14000
   1400063de:	add    BYTE PTR [rax],al
   1400063e0:	jge    0x1400063e2
   1400063e2:	add    BYTE PTR [rax],al
   1400063e4:	add    BYTE PTR [rax],al
   1400063e6:	add    BYTE PTR [rax],al
   1400063e8:	fsubr  DWORD PTR [rax+0x0]
   1400063eb:	rex add DWORD PTR [rax],eax
   1400063ee:	add    BYTE PTR [rax],al
   1400063f0:	jle    0x1400063f2
   1400063f2:	add    BYTE PTR [rax],al
   1400063f4:	add    BYTE PTR [rax],al
   1400063f6:	add    BYTE PTR [rax],al
   1400063f8:	call   0x141406465
   1400063fd:	add    BYTE PTR [rax],al
   1400063ff:	add    BYTE PTR [rax+rax*1],cl
   140006402:	add    BYTE PTR [rax],al
   140006404:	add    BYTE PTR [rax],al
   140006406:	add    BYTE PTR [rax],al
   140006408:	sbb    BYTE PTR [rbp+0x0],0x40
   14000640c:	add    DWORD PTR [rax],eax
   14000640e:	add    BYTE PTR [rax],al
   140006410:	add    DWORD PTR [rax],0x0
   140006416:	add    BYTE PTR [rax],al
   140006418:	clc    
   140006419:	push   0x14000
   14000641e:	add    BYTE PTR [rax],al
   140006420:	imul   eax,DWORD PTR [rax],0x0
   140006426:	add    BYTE PTR [rax],al
   140006428:	rcr    BYTE PTR [rbp+0x0],1
   14000642b:	rex add DWORD PTR [rax],eax
   14000642e:	add    BYTE PTR [rax],al
   140006430:	jo     0x140006432
   140006432:	add    BYTE PTR [rax],al
   140006434:	add    BYTE PTR [rax],al
   140006436:	add    BYTE PTR [rax],al
   140006438:	or     BYTE PTR [rcx+0x0],ch
   14000643b:	rex add DWORD PTR [rax],eax
   14000643e:	add    BYTE PTR [rax],al
   140006440:	add    DWORD PTR [rax],eax
   140006442:	add    BYTE PTR [rax],al
   140006444:	add    BYTE PTR [rax],al
   140006446:	add    BYTE PTR [rax],al
   140006448:	and    BYTE PTR [rcx+0x0],ch
   14000644b:	rex add DWORD PTR [rax],eax
   14000644e:	add    BYTE PTR [rax],al
   140006450:	(bad)  
   140006451:	add    BYTE PTR [rax],al
   140006453:	add    BYTE PTR [rax],al
   140006455:	add    BYTE PTR [rax],al
   140006457:	add    BYTE PTR [rax],bh
   140006459:	imul   eax,DWORD PTR [rax],0x140
   14000645f:	add    BYTE PTR [rax+rax*1+0x0],cl
   140006466:	add    BYTE PTR [rax],al
   140006468:	push   rax
   140006469:	imul   eax,DWORD PTR [rax],0x140
   14000646f:	add    BYTE PTR [rbp+0x0],al
   140006475:	add    BYTE PTR [rax],al
   140006477:	add    BYTE PTR [rax+0x69],ch
   14000647a:	add    BYTE PTR [rax+0x1],al
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rip+0x0],cl        # 0x140006485
   140006485:	add    BYTE PTR [rax],al
   140006487:	add    BYTE PTR [rax+0x5c],dh
   14000648a:	add    BYTE PTR [rax+0x1],al
   14000648d:	add    BYTE PTR [rax],al
   14000648f:	add    BYTE PTR [rsi+0x0],al
   140006495:	add    BYTE PTR [rax],al
   140006497:	add    BYTE PTR [rax+0x69],bh
   14000649a:	add    BYTE PTR [rax+0x1],al
   14000649d:	add    BYTE PTR [rax],al
   14000649f:	add    BYTE PTR [rdi+0x0],al
   1400064a5:	add    BYTE PTR [rax],al
   1400064a7:	add    BYTE PTR [rax+0x1400069],cl
   1400064ad:	add    BYTE PTR [rax],al
   1400064af:	add    BYTE PTR [rsi],bl
   1400064b1:	add    BYTE PTR [rax],al
   1400064b3:	add    BYTE PTR [rax],al
   1400064b5:	add    BYTE PTR [rax],al
   1400064b7:	add    BYTE PTR [rax+0x1400069],ah
   1400064bd:	add    BYTE PTR [rax],al
   1400064bf:	add    BYTE PTR [rax+rax*1],ah
   1400064c2:	add    BYTE PTR [rax],al
   1400064c4:	add    BYTE PTR [rax],al
   1400064c6:	add    BYTE PTR [rax],al
   1400064c8:	mov    eax,0x1400069
   1400064cd:	add    BYTE PTR [rax],al
   1400064cf:	add    BYTE PTR [rbx],cl
   1400064d1:	add    BYTE PTR [rax],al
   1400064d3:	add    BYTE PTR [rax],al
   1400064d5:	add    BYTE PTR [rax],al
   1400064d7:	add    BYTE PTR [rax+0x140005d],bl
   1400064dd:	add    BYTE PTR [rax],al
   1400064df:	add    BYTE PTR [rdx],ah
   1400064e1:	add    BYTE PTR [rax],al
   1400064e3:	add    BYTE PTR [rax],al
   1400064e5:	add    BYTE PTR [rax],al
   1400064e7:	add    al,bl
   1400064e9:	imul   eax,DWORD PTR [rax],0x140
   1400064ef:	add    BYTE PTR [rdi+0x0],bh
   1400064f2:	add    BYTE PTR [rax],al
   1400064f4:	add    BYTE PTR [rax],al
   1400064f6:	add    BYTE PTR [rax],al
   1400064f8:	lock imul eax,DWORD PTR [rax],0x140
   1400064ff:	add    BYTE PTR [rcx+0x0],cl
   140006505:	add    BYTE PTR [rax],al
   140006507:	add    BYTE PTR [rax],cl
   140006509:	push   0x0
   14000650b:	rex add DWORD PTR [rax],eax
   14000650e:	add    BYTE PTR [rax],al
   140006510:	mov    eax,DWORD PTR [rax]
   140006512:	add    BYTE PTR [rax],al
   140006514:	add    BYTE PTR [rax],al
   140006516:	add    BYTE PTR [rax],al
   140006518:	sbb    BYTE PTR [rdx+0x0],ch
   14000651b:	rex add DWORD PTR [rax],eax
   14000651e:	add    BYTE PTR [rax],al
   140006520:	mov    al,BYTE PTR [rax]
   140006522:	add    BYTE PTR [rax],al
   140006524:	add    BYTE PTR [rax],al
   140006526:	add    BYTE PTR [rax],al
   140006528:	sub    BYTE PTR [rdx+0x0],ch
   14000652b:	rex add DWORD PTR [rax],eax
   14000652e:	add    BYTE PTR [rax],al
   140006530:	(bad)  
   140006531:	add    BYTE PTR [rax],al
   140006533:	add    BYTE PTR [rax],al
   140006535:	add    BYTE PTR [rax],al
   140006537:	add    BYTE PTR [rax],bh
   140006539:	push   0x0
   14000653b:	rex add DWORD PTR [rax],eax
   14000653e:	add    BYTE PTR [rax],al
   140006540:	sbb    BYTE PTR [rax],al
   140006542:	add    BYTE PTR [rax],al
   140006544:	add    BYTE PTR [rax],al
   140006546:	add    BYTE PTR [rax],al
   140006548:	call   0x1414065aa
   14000654d:	add    BYTE PTR [rax],al
   14000654f:	add    BYTE PTR [rdi],bl
   140006551:	add    BYTE PTR [rax],al
   140006553:	add    BYTE PTR [rax],al
   140006555:	add    BYTE PTR [rax],al
   140006557:	add    BYTE PTR [rax+0x6a],bl
   14000655a:	add    BYTE PTR [rax+0x1],al
   14000655d:	add    BYTE PTR [rax],al
   14000655f:	add    BYTE PTR [rdx+0x0],dh
   140006562:	add    BYTE PTR [rax],al
   140006564:	add    BYTE PTR [rax],al
   140006566:	add    BYTE PTR [rax],al
   140006568:	push   0x140006a
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    BYTE PTR [rax+rax*1+0x0],al
   140006576:	add    BYTE PTR [rax],al
   140006578:	mov    BYTE PTR [rdx+0x0],ch
   14000657b:	rex add DWORD PTR [rax],eax
   14000657e:	add    BYTE PTR [rax],al
   140006580:	mov    BYTE PTR [rax],al
   140006582:	add    BYTE PTR [rax],al
   140006584:	add    BYTE PTR [rax],al
   140006586:	add    BYTE PTR [rax],al
   140006588:	cwde   
   140006589:	push   0x0
   14000658b:	rex add DWORD PTR [rax],eax
	...
   14000659e:	add    BYTE PTR [rax],al
   1400065a0:	(bad)  
   1400065a1:	fs fs jb 0x14000660a
   1400065a5:	jae    0x14000661a
   1400065a7:	and    BYTE PTR [rsi+0x61],ah
   1400065aa:	ins    DWORD PTR es:[rdi],dx
   1400065ab:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
   1400065b3:	jae    0x14000662a
   1400065b5:	jo     0x140006627
   1400065b7:	outs   dx,DWORD PTR ds:[rsi]
   1400065b8:	jb     0x14000662e
   1400065ba:	gs add BYTE PTR fs:[rax],al
   1400065be:	add    BYTE PTR [rax],al
   1400065c0:	(bad)  
   1400065c1:	fs fs jb 0x14000662a
   1400065c5:	jae    0x14000663a
   1400065c7:	and    BYTE PTR [rcx+0x6e],ch
   1400065ca:	and    BYTE PTR [rbp+0x73],dh
   1400065cd:	add    BYTE PTR gs:[rax],al
   1400065d0:	(bad)  
   1400065d1:	fs fs jb 0x14000663a
   1400065d5:	jae    0x14000664a
   1400065d7:	and    BYTE PTR [rsi+0x6f],ch
   1400065da:	je     0x1400065fc
   1400065dc:	(bad)  
   1400065dd:	jbe    0x140006640
   1400065df:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   1400065e7:	add    BYTE PTR [rcx+0x6c],ah
   1400065ea:	jb     0x140006651
   1400065ec:	(bad)  
   1400065ed:	fs jns 0x140006610
   1400065f0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400065f3:	outs   dx,BYTE PTR ds:[rsi]
   1400065f4:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400065f9:	add    BYTE PTR [rax],al
   1400065fb:	add    BYTE PTR [rax],al
   1400065fd:	add    BYTE PTR [rax],al
   1400065ff:	add    BYTE PTR [rcx+0x72],ah
   140006602:	addr32 jne 0x140006672
   140006605:	outs   dx,BYTE PTR gs:[rsi]
   140006607:	je     0x140006629
   140006609:	ins    BYTE PTR es:[rdi],dx
   14000660a:	imul   esi,DWORD PTR [rbx+0x74],0x6f6f7420
   140006611:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140006615:	add    BYTE PTR [eax],al
   140006618:	(bad)  
   140006619:	jb     0x140006682
   14000661b:	jne    0x14000668a
   14000661d:	outs   dx,BYTE PTR gs:[rsi]
   14000661f:	je     0x140006641
   140006621:	outs   dx,DWORD PTR ds:[rsi]
   140006622:	jne    0x140006698
   140006624:	and    BYTE PTR [rdi+0x66],ch
   140006627:	and    BYTE PTR [rdi+rbp*2+0x6d],ah
   14000662b:	(bad)  
   14000662c:	imul   ebp,DWORD PTR [rsi+0x0],0x64616200
   140006633:	and    BYTE PTR [rcx+0x64],ah
   140006636:	fs jb  0x14000669e
   140006639:	jae    0x1400066ae
   14000663b:	add    BYTE PTR [rax],al
   14000663d:	add    BYTE PTR [rax],al
   14000663f:	add    BYTE PTR [rdx+0x61],ah
   140006642:	and    BYTE PTR fs:[rsi+0x69],ah
   140006646:	ins    BYTE PTR es:[rdi],dx
   140006647:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
   14000664c:	movsxd esi,DWORD PTR [rdx+0x69]
   14000664f:	jo     0x1400066c5
   140006651:	outs   dx,DWORD PTR ds:[rsi]
   140006652:	jb     0x140006654
   140006654:	add    BYTE PTR [rax],al
   140006656:	add    BYTE PTR [rax],al
   140006658:	(bad)
   14000665d:	gs jae 0x1400066d3
   140006660:	(bad)  
   140006661:	add    BYTE PTR gs:[eax],al
   140006665:	add    BYTE PTR [rax],al
   140006667:	add    BYTE PTR [rdx+0x72],ah
   14000666a:	outs   dx,DWORD PTR ds:[rsi]
   14000666b:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   14000666f:	jo     0x1400066da
   140006671:	jo     0x1400066d8
   140006673:	add    BYTE PTR [rax],al
   140006675:	add    BYTE PTR [rax],al
   140006677:	add    BYTE PTR [rbx+0x6f],ah
   14000667a:	outs   dx,BYTE PTR ds:[rsi]
   14000667b:	outs   dx,BYTE PTR ds:[rsi]
   14000667c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140006681:	outs   dx,BYTE PTR ds:[rsi]
   140006682:	and    BYTE PTR [rcx+0x62],ah
   140006685:	outs   dx,DWORD PTR ds:[rsi]
   140006686:	jb     0x1400066fc
   140006688:	gs add BYTE PTR fs:[rax],al
   14000668c:	add    BYTE PTR [rax],al
   14000668e:	add    BYTE PTR [rax],al
   140006690:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140006693:	outs   dx,BYTE PTR ds:[rsi]
   140006694:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140006699:	outs   dx,BYTE PTR ds:[rsi]
   14000669a:	and    BYTE PTR [rcx+0x6c],ah
   14000669d:	jb     0x140006704
   14000669f:	(bad)  
   1400066a0:	fs jns 0x1400066c3
   1400066a3:	imul   ebp,DWORD PTR [rsi+0x20],0x676f7270
   1400066aa:	jb     0x140006711
   1400066ac:	jae    0x140006721
   1400066ae:	add    BYTE PTR [rax],al
   1400066b0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400066b3:	outs   dx,BYTE PTR ds:[rsi]
   1400066b4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400066b9:	outs   dx,BYTE PTR ds:[rsi]
   1400066ba:	and    BYTE PTR [rdx+0x65],dh
   1400066bd:	data16 jne 0x140006733
   1400066c0:	gs add BYTE PTR fs:[rax],al
   1400066c4:	add    BYTE PTR [rax],al
   1400066c6:	add    BYTE PTR [rax],al
   1400066c8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400066cb:	outs   dx,BYTE PTR ds:[rsi]
   1400066cc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400066d1:	outs   dx,BYTE PTR ds:[rsi]
   1400066d2:	and    BYTE PTR [rdx+0x65],dh
   1400066d5:	jae    0x14000673c
   1400066d7:	je     0x1400066d9
   1400066d9:	add    BYTE PTR [rax],al
   1400066db:	add    BYTE PTR [rax],al
   1400066dd:	add    BYTE PTR [rax],al
   1400066df:	add    BYTE PTR [rbp+riz*2+0x73],ah
   1400066e3:	je     0x14000674e
   1400066e5:	outs   dx,BYTE PTR ds:[rsi]
   1400066e6:	(bad)  
   1400066e7:	je     0x140006752
   1400066e9:	outs   dx,DWORD PTR ds:[rsi]
   1400066ea:	outs   dx,BYTE PTR ds:[rsi]
   1400066eb:	and    BYTE PTR [rcx+0x64],ah
   1400066ee:	fs jb  0x140006756
   1400066f1:	jae    0x140006766
   1400066f3:	and    BYTE PTR [rdx+0x65],dh
   1400066f6:	jno    0x14000676d
   1400066f8:	imul   esi,DWORD PTR [rdx+0x65],0x64
   1400066ff:	add    BYTE PTR [rbp+0x78],ah
   140006702:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140006706:	(bad)  
   140006707:	(bad)  
   140006708:	ins    BYTE PTR es:[rdi],dx
   140006709:	and    BYTE PTR gs:[rsi+0x6f],ah
   14000670d:	jb     0x14000677c
   14000670f:	(bad)  
   140006710:	je     0x140006732
   140006712:	gs jb  0x140006787
   140006715:	outs   dx,DWORD PTR ds:[rsi]
   140006716:	jb     0x140006718
   140006718:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
   14000671f:	outs   dx,DWORD PTR ds:[rsi]
   140006720:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140006724:	add    BYTE PTR gs:[eax],al
   140006728:	push   0x2074736f
   14000672d:	jne    0x14000679d
   14000672f:	jb     0x140006796
   140006731:	(bad)  
   140006732:	movsxd ebp,DWORD PTR [rax+0x61]
   140006735:	(bad)  
   140006736:	ins    BYTE PTR es:[rdi],dx
   140006737:	add    BYTE PTR gs:[rax],al
   14000673a:	add    BYTE PTR [rax],al
   14000673c:	add    BYTE PTR [rax],al
   14000673e:	add    BYTE PTR [rax],al
   140006740:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
   140006748:	gs jb  0x14000676b
   14000674b:	jb     0x1400067b2
   14000674d:	ins    DWORD PTR es:[rdi],dx
   14000674e:	outs   dx,DWORD PTR ds:[rsi]
   14000674f:	jbe    0x1400067b6
   140006751:	add    BYTE PTR fs:[rax],al
   140006754:	add    BYTE PTR [rax],al
   140006756:	add    BYTE PTR [rax],al
   140006758:	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x206c6167
   140006760:	(bad)  
   140006761:	jns    0x1400067d7
   140006763:	and    BYTE PTR gs:[rbx+0x65],dh
   140006767:	jno    0x1400067de
   140006769:	outs   dx,BYTE PTR gs:[rsi]
   14000676b:	movsxd esp,DWORD PTR [rbp+0x0]
   14000676e:	add    BYTE PTR [rax],al
   140006770:	imul   ebp,DWORD PTR [rsi+0x61],0x6f727070
   140006777:	jo     0x1400067eb
   140006779:	imul   esp,DWORD PTR [rcx+0x74],0x6f692065
   140006780:	and    BYTE PTR [rbx+0x6f],ah
   140006783:	outs   dx,BYTE PTR ds:[rsi]
   140006784:	je     0x1400067f8
   140006786:	outs   dx,DWORD PTR ds:[rsi]
   140006787:	ins    BYTE PTR es:[rdi],dx
   140006788:	and    BYTE PTR [rdi+0x70],ch
   14000678b:	gs jb  0x1400067ef
   14000678e:	je     0x1400067f9
   140006790:	outs   dx,DWORD PTR ds:[rsi]
   140006791:	outs   dx,BYTE PTR ds:[rsi]
   140006792:	add    BYTE PTR [rax],al
   140006794:	add    BYTE PTR [rax],al
   140006796:	add    BYTE PTR [rax],al
   140006798:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14000679f:	and    BYTE PTR [rbx+0x65],dh
   1400067a2:	imul   eax,DWORD PTR gs:[rax],0x0
   1400067a6:	add    BYTE PTR [rax],al
   1400067a8:	imul   esi,DWORD PTR [rbx+0x20],0x69642061
   1400067af:	jb     0x140006816
   1400067b1:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400067b5:	jns    0x1400067b7
   1400067b7:	add    BYTE PTR [rbp+0x65],ch
   1400067ba:	jae    0x14000682f
   1400067bc:	(bad)  
   1400067bd:	and    BYTE PTR gs:[ebx+0x69],dh
   1400067c2:	jp     0x140006829
   1400067c4:	add    BYTE PTR [rax],al
   1400067c6:	add    BYTE PTR [rax],al
   1400067c8:	outs   dx,BYTE PTR ds:[rsi]
   1400067c9:	gs je  0x140006843
   1400067cc:	outs   dx,DWORD PTR ds:[rsi]
   1400067cd:	jb     0x14000683a
   1400067cf:	and    BYTE PTR [rdi+rbp*2+0x77],ah
   1400067d3:	outs   dx,BYTE PTR ds:[rsi]
   1400067d4:	add    BYTE PTR [rax],al
   1400067d6:	add    BYTE PTR [rax],al
   1400067d8:	outs   dx,BYTE PTR ds:[rsi]
   1400067d9:	gs je  0x140006853
   1400067dc:	outs   dx,DWORD PTR ds:[rsi]
   1400067dd:	jb     0x14000684a
   1400067df:	and    BYTE PTR [rdx+0x65],dh
   1400067e2:	jae    0x140006849
   1400067e4:	je     0x1400067e6
   1400067e6:	add    BYTE PTR [rax],al
   1400067e8:	outs   dx,BYTE PTR ds:[rsi]
   1400067e9:	gs je  0x140006863
   1400067ec:	outs   dx,DWORD PTR ds:[rsi]
   1400067ed:	jb     0x14000685a
   1400067ef:	and    BYTE PTR [rbp+0x6e],dh
   1400067f2:	jb     0x140006859
   1400067f4:	(bad)  
   1400067f5:	movsxd ebp,DWORD PTR [rax+0x61]
   1400067f8:	(bad)  
   1400067f9:	ins    BYTE PTR es:[rdi],dx
   1400067fa:	add    BYTE PTR gs:[rax],al
   1400067fd:	add    BYTE PTR [rax],al
   1400067ff:	add    BYTE PTR [rsi+0x6f],ch
   140006802:	and    BYTE PTR [rdx+0x75],ah
   140006805:	data16 data16 gs jb 0x14000682a
   14000680a:	jae    0x14000687c
   14000680c:	(bad)  
   14000680d:	movsxd esp,DWORD PTR [rbp+0x0]
   140006810:	outs   dx,BYTE PTR ds:[rsi]
   140006811:	outs   dx,DWORD PTR ds:[rsi]
   140006812:	and    BYTE PTR [rbx+0x68],ah
   140006815:	imul   ebp,DWORD PTR [rsp+riz*2+0x20],0x636f7270
   14000681d:	gs jae 0x140006893
	...
   140006828:	outs   dx,BYTE PTR ds:[rsi]
   140006829:	outs   dx,DWORD PTR ds:[rsi]
   14000682a:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
   14000682e:	imul   eax,DWORD PTR [rax],0x6e
   140006831:	outs   dx,DWORD PTR ds:[rsi]
   140006832:	and    BYTE PTR [rbp+0x65],ch
   140006835:	jae    0x1400068aa
   140006837:	(bad)  
   140006838:	and    BYTE PTR gs:[ecx+0x76],ah
   14000683d:	(bad)  
   14000683e:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
   140006846:	add    BYTE PTR [rax],al
   140006848:	outs   dx,BYTE PTR ds:[rsi]
   140006849:	outs   dx,DWORD PTR ds:[rsi]
   14000684a:	and    BYTE PTR [rbp+0x65],ch
   14000684d:	jae    0x1400068c2
   14000684f:	(bad)  
   140006850:	add    BYTE PTR gs:[eax],al
   140006854:	add    BYTE PTR [rax],al
   140006856:	add    BYTE PTR [rax],al
   140006858:	outs   dx,BYTE PTR ds:[rsi]
   140006859:	outs   dx,DWORD PTR ds:[rsi]
   14000685a:	and    BYTE PTR [rax+0x72],dh
   14000685d:	outs   dx,DWORD PTR ds:[rsi]
   14000685e:	je     0x1400068cf
   140006860:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140006863:	and    BYTE PTR [rdi+0x70],ch
   140006866:	je     0x1400068d1
   140006868:	outs   dx,DWORD PTR ds:[rsi]
   140006869:	outs   dx,BYTE PTR ds:[rsi]
   14000686a:	add    BYTE PTR [rax],al
   14000686c:	add    BYTE PTR [rax],al
   14000686e:	add    BYTE PTR [rax],al
   140006870:	outs   dx,BYTE PTR ds:[rsi]
   140006871:	outs   dx,DWORD PTR ds:[rsi]
   140006872:	and    BYTE PTR [rbx+0x74],dh
   140006875:	jb     0x1400068dc
   140006877:	(bad)  
   140006878:	ins    DWORD PTR es:[rdi],dx
   140006879:	and    BYTE PTR [rdx+0x65],dh
   14000687c:	jae    0x1400068ed
   14000687e:	jne    0x1400068f2
   140006880:	movsxd esp,DWORD PTR [rbp+0x73]
   140006883:	add    BYTE PTR [rax],al
   140006885:	add    BYTE PTR [rax],al
   140006887:	add    BYTE PTR [rsi+0x6f],ch
   14000688a:	and    BYTE PTR [rbx+0x75],dh
   14000688d:	movsxd ebp,DWORD PTR [rax+0x20]
   140006890:	fs gs jbe 0x1400068fd
   140006894:	movsxd esp,DWORD PTR [rbp+0x20]
   140006897:	outs   dx,DWORD PTR ds:[rsi]
   140006898:	jb     0x1400068ba
   14000689a:	(bad)  
   14000689b:	fs fs jb 0x140006904
   14000689f:	jae    0x140006914
   1400068a1:	add    BYTE PTR [rax],al
   1400068a3:	add    BYTE PTR [rax],al
   1400068a5:	add    BYTE PTR [rax],al
   1400068a7:	add    BYTE PTR [rsi+0x6f],ch
   1400068aa:	and    BYTE PTR [rbx+0x75],dh
   1400068ad:	movsxd ebp,DWORD PTR [rax+0x20]
   1400068b0:	jo     0x140006924
   1400068b2:	outs   dx,DWORD PTR ds:[rsi]
   1400068b3:	movsxd esp,DWORD PTR [rbp+0x73]
   1400068b6:	jae    0x1400068b8
   1400068b8:	outs   dx,BYTE PTR ds:[rsi]
   1400068b9:	outs   dx,DWORD PTR ds:[rsi]
   1400068ba:	je     0x1400068dc
   1400068bc:	(bad)  
   1400068bd:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   1400068c1:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   1400068c6:	jns    0x1400068c8
   1400068c8:	outs   dx,BYTE PTR ds:[rsi]
   1400068c9:	outs   dx,DWORD PTR ds:[rsi]
   1400068ca:	je     0x1400068ec
   1400068cc:	(bad)  
   1400068cd:	and    BYTE PTR [rbx+0x6f],dh
   1400068d0:	movsxd ebp,DWORD PTR [rbx+0x65]
   1400068d3:	je     0x1400068d5
   1400068d5:	add    BYTE PTR [rax],al
   1400068d7:	add    BYTE PTR [rsi+0x6f],ch
   1400068da:	je     0x1400068fc
   1400068dc:	(bad)  
   1400068dd:	and    BYTE PTR [rbx+0x74],dh
   1400068e0:	jb     0x140006947
   1400068e2:	(bad)  
   1400068e3:	ins    DWORD PTR es:[rdi],dx
   1400068e4:	add    BYTE PTR [rax],al
   1400068e6:	add    BYTE PTR [rax],al
   1400068e8:	outs   dx,BYTE PTR ds:[rsi]
   1400068e9:	outs   dx,DWORD PTR ds:[rsi]
   1400068ea:	je     0x14000690c
   1400068ec:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400068ef:	outs   dx,BYTE PTR ds:[rsi]
   1400068f0:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   1400068f5:	add    BYTE PTR [rax],al
   1400068f7:	add    BYTE PTR [rsi+0x6f],ch
   1400068fa:	je     0x14000691c
   1400068fc:	jae    0x140006973
   1400068fe:	jo     0x140006970
   140006900:	outs   dx,DWORD PTR ds:[rsi]
   140006901:	jb     0x140006977
   140006903:	gs add BYTE PTR fs:[rax],al
   140006907:	add    BYTE PTR [rdi+0x70],ch
   14000690a:	gs jb  0x14000696e
   14000690d:	je     0x140006978
   14000690f:	outs   dx,DWORD PTR ds:[rsi]
   140006910:	outs   dx,BYTE PTR ds:[rsi]
   140006911:	and    BYTE PTR [rcx+0x6e],ch
   140006914:	and    BYTE PTR [rax+0x72],dh
   140006917:	outs   dx,DWORD PTR ds:[rsi]
   140006918:	addr32 jb 0x140006980
   14000691b:	jae    0x140006990
   14000691d:	add    BYTE PTR [rax],al
   14000691f:	add    BYTE PTR [rdi+0x70],ch
   140006922:	gs jb  0x140006986
   140006925:	je     0x140006990
   140006927:	outs   dx,DWORD PTR ds:[rsi]
   140006928:	outs   dx,BYTE PTR ds:[rsi]
   140006929:	and    BYTE PTR [rsi+0x6f],ch
   14000692c:	je     0x14000694e
   14000692e:	jo     0x140006995
   140006930:	jb     0x14000699f
   140006932:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x706f0064
   14000693a:	gs jb  0x14000699e
   14000693d:	je     0x1400069a8
   14000693f:	outs   dx,DWORD PTR ds:[rsi]
   140006940:	outs   dx,BYTE PTR ds:[rsi]
   140006941:	and    BYTE PTR [rsi+0x6f],ch
   140006944:	je     0x140006966
   140006946:	jae    0x1400069bd
   140006948:	jo     0x1400069ba
   14000694a:	outs   dx,DWORD PTR ds:[rsi]
   14000694b:	jb     0x1400069c1
   14000694d:	gs add BYTE PTR fs:[rdi+0x70],ch
   140006952:	gs jb  0x1400069b6
   140006955:	je     0x1400069c0
   140006957:	outs   dx,DWORD PTR ds:[rsi]
   140006958:	outs   dx,BYTE PTR ds:[rsi]
   140006959:	and    BYTE PTR [rdi+0x6f],dh
   14000695c:	jne    0x1400069ca
   14000695e:	and    BYTE PTR fs:[rdx+0x6c],ah
   140006962:	outs   dx,DWORD PTR ds:[rsi]
   140006963:	movsxd ebp,DWORD PTR [rbx+0x0]
   140006966:	add    BYTE PTR [rax],al
   140006968:	outs   dx,DWORD PTR ds:[rsi]
   140006969:	ja     0x1400069d9
   14000696b:	gs jb  0x14000698e
   14000696e:	fs gs (bad) 
   140006971:	add    BYTE PTR fs:[rax],al
   140006974:	add    BYTE PTR [rax],al
   140006976:	add    BYTE PTR [rax],al
   140006978:	jo     0x1400069ec
   14000697a:	outs   dx,DWORD PTR ds:[rsi]
   14000697b:	je     0x1400069ec
   14000697d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140006980:	and    BYTE PTR [rbp+0x72],ah
   140006983:	jb     0x1400069f4
   140006985:	jb     0x140006987
   140006987:	add    BYTE PTR [rax+0x72],dh
   14000698a:	outs   dx,DWORD PTR ds:[rsi]
   14000698b:	je     0x1400069fc
   14000698d:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140006990:	and    BYTE PTR [rsi+0x6f],ch
   140006993:	je     0x1400069b5
   140006995:	jae    0x140006a0c
   140006997:	jo     0x140006a09
   140006999:	outs   dx,DWORD PTR ds:[rsi]
   14000699a:	jb     0x140006a10
   14000699c:	gs add BYTE PTR fs:[rax],al
   1400069a0:	jb     0x140006a07
   1400069a2:	(bad)  
   1400069a3:	and    BYTE PTR fs:[rdi+0x6e],ch
   1400069a7:	ins    BYTE PTR es:[rdi],dx
   1400069a8:	jns    0x1400069ca
   1400069aa:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7973
   1400069b1:	jae    0x140006a27
   1400069b3:	gs ins DWORD PTR es:[rdi],dx
   1400069b5:	add    BYTE PTR [rax],al
   1400069b7:	add    BYTE PTR [rdx+0x65],dh
   1400069ba:	jae    0x140006a2b
   1400069bc:	jne    0x140006a30
   1400069be:	movsxd esp,DWORD PTR [rbp+0x20]
   1400069c1:	fs gs (bad) 
   1400069c4:	fs ins BYTE PTR es:[rdi],dx
   1400069c6:	outs   dx,DWORD PTR ds:[rsi]
   1400069c7:	movsxd ebp,DWORD PTR [rbx+0x20]
   1400069ca:	ja     0x140006a3b
   1400069cc:	jne    0x140006a3a
   1400069ce:	and    BYTE PTR fs:[rdi+0x63],ch
   1400069d2:	movsxd esi,DWORD PTR [rbp+0x72]
   1400069d5:	add    BYTE PTR [rax],al
   1400069d7:	add    BYTE PTR [rdx+0x65],dh
   1400069da:	jae    0x140006a51
   1400069dc:	ins    BYTE PTR es:[rdi],dx
   1400069dd:	je     0x1400069ff
   1400069df:	outs   dx,DWORD PTR ds:[rsi]
   1400069e0:	jne    0x140006a56
   1400069e2:	and    BYTE PTR [rdi+0x66],ch
   1400069e5:	and    BYTE PTR [rdx+0x61],dh
   1400069e8:	outs   dx,BYTE PTR ds:[rsi]
   1400069e9:	add    BYTE PTR gs:[eax],al
   1400069ed:	add    BYTE PTR [rax],al
   1400069ef:	add    BYTE PTR [rbx+0x74],dh
   1400069f2:	(bad)  
   1400069f3:	je     0x140006a5a
   1400069f5:	and    BYTE PTR [rsi+0x6f],ch
   1400069f8:	je     0x140006a1a
   1400069fa:	jb     0x140006a61
   1400069fc:	movsxd ebp,DWORD PTR [rdi+0x76]
   1400069ff:	gs jb  0x140006a63
   140006a02:	(bad)  
   140006a03:	ins    BYTE PTR es:[rdi],dx
   140006a04:	add    BYTE PTR gs:[rax],al
   140006a07:	add    BYTE PTR [rbx+0x74],dh
   140006a0a:	jb     0x140006a71
   140006a0c:	(bad)  
   140006a0d:	ins    DWORD PTR es:[rdi],dx
   140006a0e:	and    BYTE PTR [rcx+rbp*2+0x6d],dh
   140006a12:	outs   dx,DWORD PTR gs:[rsi]
   140006a14:	jne    0x140006a8a
   140006a16:	add    BYTE PTR [rax],al
   140006a18:	je     0x140006a7f
   140006a1a:	js     0x140006a90
   140006a1c:	and    BYTE PTR [rsi+0x69],ah
   140006a1f:	ins    BYTE PTR es:[rdi],dx
   140006a20:	and    BYTE PTR gs:[rdx+0x75],ah
   140006a24:	jae    0x140006a9f
   140006a26:	add    BYTE PTR [rax],al
   140006a28:	je     0x140006a93
   140006a2a:	ins    DWORD PTR es:[rdi],dx
   140006a2b:	gs and BYTE PTR fs:[rdi+0x75],ch
   140006a30:	je     0x140006a32
   140006a32:	add    BYTE PTR [rax],al
   140006a34:	add    BYTE PTR [rax],al
   140006a36:	add    BYTE PTR [rax],al
   140006a38:	je     0x140006aa9
   140006a3a:	outs   dx,DWORD PTR ds:[rsi]
   140006a3b:	and    BYTE PTR [rbp+0x61],ch
   140006a3e:	outs   dx,BYTE PTR ds:[rsi]
   140006a3f:	jns    0x140006a61
   140006a41:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f20
   140006a48:	jo     0x140006aaf
   140006a4a:	outs   dx,BYTE PTR ds:[rsi]
   140006a4b:	and    BYTE PTR [rcx+0x6e],ch
   140006a4e:	and    BYTE PTR [rbx+0x79],dh
   140006a51:	jae    0x140006ac7
   140006a53:	gs ins DWORD PTR es:[rdi],dx
   140006a55:	add    BYTE PTR [rax],al
   140006a57:	add    BYTE PTR [rdi+rbp*2+0x6f],dh
   140006a5b:	and    BYTE PTR [rbp+0x61],ch
   140006a5e:	outs   dx,BYTE PTR ds:[rsi]
   140006a5f:	jns    0x140006a81
   140006a61:	ins    BYTE PTR es:[rdi],dx
   140006a62:	imul   ebp,DWORD PTR [rsi+0x6b],0x74000073
   140006a69:	outs   dx,DWORD PTR ds:[rsi]
   140006a6a:	outs   dx,DWORD PTR ds:[rsi]
   140006a6b:	and    BYTE PTR [rbp+0x61],ch
   140006a6e:	outs   dx,BYTE PTR ds:[rsi]
   140006a6f:	jns    0x140006a91
   140006a71:	jae    0x140006aec
   140006a73:	ins    DWORD PTR es:[rdi],dx
   140006a74:	(bad)  
   140006a75:	outs   dx,DWORD PTR ds:[rsi]
   140006a76:	ins    BYTE PTR es:[rdi],dx
   140006a77:	imul   esp,DWORD PTR [rbx+0x20],0x6b6e696c
   140006a7e:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140006a82:	gs ins BYTE PTR es:[rdi],dx
   140006a84:	jae    0x140006a86
   140006a86:	add    BYTE PTR [rax],al
   140006a88:	jbe    0x140006aeb
   140006a8a:	ins    BYTE PTR es:[rdi],dx
   140006a8b:	jne    0x140006af2
   140006a8d:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   140006a91:	and    BYTE PTR [rcx+riz*2+0x72],ch
   140006a95:	add    BYTE PTR gs:[edi+0x72],dh
   140006a9a:	outs   dx,DWORD PTR ds:[rsi]
   140006a9b:	outs   dx,BYTE PTR ds:[rsi]
   140006a9c:	and    BYTE PTR [eax+0x72],dh
   140006aa0:	outs   dx,DWORD PTR ds:[rsi]
   140006aa1:	je     0x140006b12
   140006aa3:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140006aa6:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140006aaa:	add    BYTE PTR gs:[rax],al
   140006aad:	add    BYTE PTR [rax],al
   140006aaf:	add    BYTE PTR [rax],dh
   140006ab1:	add    BYTE PTR [r8+0x1],al
   140006ab5:	add    BYTE PTR [rax],al
   140006ab7:	add    BYTE PTR [rbx+0x69],dl
   140006aba:	outs   dx,BYTE PTR ds:[esi]
   140006abc:	(bad)  
   140006abd:	ins    BYTE PTR es:[rdi],dx
   140006abe:	rex.W (bad) 
   140006ac0:	jbe    0x140006b27
   140006ac2:	rex.R (bad) 
   140006ac4:	je     0x140006b27
   140006ac6:	rex.RB jbe 0x140006b2e
   140006ac9:	outs   dx,BYTE PTR ds:[rsi]
   140006aca:	je     0x140006b23
   140006acc:	push   0x75506e65
   140006ad1:	jae    0x140006b3b
   140006ad3:	rex.XB ins BYTE PTR es:[rdi],dx
   140006ad5:	imul   esp,DWORD PTR [rbp+0x6e],0x73614874
   140006adc:	rex.WRB jae 0x140006b46
   140006adf:	add    BYTE PTR [rdi+0x61],dl
   140006ae2:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x73655472
   140006aea:	je     0x140006b40
   140006aec:	outs   dx,DWORD PTR ds:[rsi]
   140006aed:	push   rbx
   140006aee:	imul   esp,DWORD PTR [rdi+0x6e],0x75506c61
   140006af5:	jae    0x140006b5f
   140006af7:	rex.XB ins BYTE PTR es:[rdi],dx
   140006af9:	imul   esp,DWORD PTR [rbp+0x6e],0x436f5474
   140006b00:	(bad)  
   140006b01:	ins    BYTE PTR es:[rdi],dx
   140006b02:	ins    BYTE PTR es:[rdi],dx
   140006b03:	push   rax
   140006b04:	jne    0x140006b79
   140006b06:	push   0x74756f52
   140006b0b:	gs jb  0x140006b6d
   140006b0e:	rex.XB ins BYTE PTR es:[rdi],dx
   140006b10:	outs   dx,DWORD PTR ds:[rsi]
   140006b11:	jae    0x140006b78
   140006b13:	add    BYTE PTR [rax],al
   140006b15:	add    BYTE PTR [rax],al
   140006b17:	add    BYTE PTR [rax+rax*1+0x4d],al
   140006b1b:	add    BYTE PTR [rcx+0x0],al
   140006b1e:	jo     0x140006b20
   140006b20:	jo     0x140006b22
   140006b22:	jae    0x140006b24
   140006b24:	push   rdx
   140006b25:	add    BYTE PTR [rbp+0x0],ah
   140006b28:	jae    0x140006b2a
   140006b2a:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140006b2f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006b33:	add    BYTE PTR [rax],al
   140006b35:	add    BYTE PTR [rax],al
   140006b37:	add    BYTE PTR [rax+rax*1+0x65],dl
   140006b3b:	add    BYTE PTR [rbx+0x0],dh
   140006b3e:	je     0x140006b40
   140006b40:	add    BYTE PTR [rax+rax*1+0x6c],r13b
   140006b45:	add    BYTE PTR [rax+0x0],dl
   140006b48:	(bad)  
   140006b49:	add    BYTE PTR [rax+rax*1+0x68],dh
   140006b4d:	add    BYTE PTR [rdx],dh
	...
   140006b57:	add    ah,cl
   140006b59:	call   0x1429f743b
   140006b5e:	xchg   ebp,eax
   140006b5f:	rex.WRX popf 
   140006b61:	test   BYTE PTR [rip+0x683acf9c],ah        # 0x1a83b3b03
   140006b67:	or     BYTE PTR [rbx],al
   140006b69:	add    BYTE PTR [rax],al
   140006b6b:	add    BYTE PTR [rax+rax*1],al
   140006b6e:	add    al,BYTE PTR [rax]
   140006b70:	add    al,BYTE PTR [rax]
   140006b72:	add    BYTE PTR [rax],al
   140006b74:	add    BYTE PTR [rax],al
   140006b76:	add    BYTE PTR [rax],al
   140006b78:	add    eax,0x4000000
   140006b7d:	add    BYTE PTR [rbx],al
   140006b7f:	add    BYTE PTR [rdx],al
   140006b81:	add    BYTE PTR [rax],al
   140006b83:	add    BYTE PTR [rax],al
   140006b85:	add    BYTE PTR [rax],al
   140006b87:	add    BYTE PTR [rsi],al
   140006b89:	add    BYTE PTR [rax],al
   140006b8b:	add    BYTE PTR [rdx],al
   140006b8d:	add    BYTE PTR [rbx],al
	...
   140006b97:	add    BYTE PTR [rdx+rax*1],al
   140006b9a:	add    BYTE PTR [rax],al
   140006b9c:	add    BYTE PTR [rax],al
   140006b9e:	add    BYTE PTR [rax],al
   140006ba0:	add    al,BYTE PTR [rax]
	...
   140006bae:	add    BYTE PTR [rax],al
   140006bb0:	(bad)  
   140006bb1:	add    BYTE PTR [rax],al
   140006bb3:	add    BYTE PTR [rax+rax*1],al
   140006bb6:	add    DWORD PTR [rax],eax
   140006bb8:	add    al,BYTE PTR [rax]
   140006bba:	add    BYTE PTR [rax],al
   140006bbc:	add    BYTE PTR [rax],al
   140006bbe:	add    BYTE PTR [rax],al
   140006bc0:	push   rbx
   140006bc1:	add    BYTE PTR [rdi+0x0],ch
   140006bc4:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140006bc9:	add    BYTE PTR [rcx+0x0],ah
   140006bcc:	jb     0x140006bce
   140006bce:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140006bd3:	add    BYTE PTR [rcx+0x0],ch
   140006bd6:	movsxd eax,DWORD PTR [rax]
   140006bd8:	jb     0x140006bda
   140006bda:	outs   dx,DWORD PTR ds:[rsi]
   140006bdb:	add    BYTE PTR [rbx+0x0],dh
   140006bde:	outs   dx,DWORD PTR ds:[rsi]
   140006bdf:	add    BYTE PTR [rsi+0x0],ah
   140006be2:	je     0x140006be4
   140006be4:	pop    rsp
   140006be5:	add    BYTE PTR [rax+0x0],dl
   140006be8:	jne    0x140006bea
   140006bea:	jae    0x140006bec
   140006bec:	push   0x6f005200
   140006bf1:	add    BYTE PTR [rbp+0x0],dh
   140006bf4:	je     0x140006bf6
   140006bf6:	add    BYTE PTR gs:[rdx+0x0],dh
   140006bfa:	pop    rsp
   140006bfb:	add    BYTE PTR [rax+rax*1+0x65],dl
   140006bff:	add    BYTE PTR [rbx+0x0],dh
   140006c02:	je     0x140006c04
   140006c04:	add    BYTE PTR [rax],al
   140006c06:	add    BYTE PTR [rax],al
   140006c08:	add    al,0x0
   140006c0a:	add    BYTE PTR [rax],al
   140006c0c:	add    al,BYTE PTR [rax]
   140006c0e:	add    al,BYTE PTR [rax]
	...
   140006c18:	add    DWORD PTR [rax],eax
   140006c1a:	add    BYTE PTR [rax],al
   140006c1c:	add    al,0x0
   140006c1e:	add    DWORD PTR [rax],eax
   140006c20:	add    al,BYTE PTR [rax]
   140006c22:	add    BYTE PTR [rax],al
   140006c24:	add    BYTE PTR [rax],al
   140006c26:	add    BYTE PTR [rax],al
   140006c28:	add    al,BYTE PTR [rax]
   140006c2a:	add    BYTE PTR [rax],al
   140006c2c:	add    al,BYTE PTR [rax]
   140006c2e:	add    DWORD PTR [rax],eax
	...
   140006c38:	je     0x140006c3a
   140006c3a:	add    BYTE PTR gs:[rax+0x0],bh
   140006c3e:	je     0x140006c40
   140006c40:	(bad)  
   140006c41:	add    BYTE PTR [rsi+0x0],dh
   140006c44:	outs   dx,BYTE PTR ds:[rsi]
   140006c45:	add    BYTE PTR [rax+rax*1+0x2e],ah
   140006c49:	add    BYTE PTR [rdi+0x0],dh
   140006c4c:	(bad)  
   140006c4d:	add    BYTE PTR [rax+0x0],dh
   140006c50:	add    BYTE PTR cs:[rbx+0x0],ah
   140006c54:	outs   dx,DWORD PTR ds:[rsi]
   140006c55:	add    BYTE PTR [rsi+0x0],ch
   140006c58:	outs   dx,BYTE PTR ds:[rsi]
   140006c59:	add    BYTE PTR [rbp+0x0],ah
   140006c5c:	movsxd eax,DWORD PTR [rax]
   140006c5e:	je     0x140006c60
   140006c60:	imul   eax,DWORD PTR [rax],0x690076
   140006c66:	je     0x140006c68
   140006c68:	jns    0x140006c6a
   140006c6a:	sub    eax,0x6d007800
   140006c6f:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006c73:	add    BYTE PTR [rax],al
   140006c75:	add    BYTE PTR [rax],al
   140006c77:	add    BYTE PTR [rax+0x0],bh
   140006c7a:	sub    eax,0x61007700
   140006c7f:	add    BYTE PTR [rax+0x0],dh
   140006c82:	sub    eax,0x69006d00
   140006c87:	add    BYTE PTR [rbx+0x0],ah
   140006c8a:	jb     0x140006c8c
   140006c8c:	outs   dx,DWORD PTR ds:[rsi]
   140006c8d:	add    BYTE PTR [rbx+0x0],dh
   140006c90:	outs   dx,DWORD PTR ds:[rsi]
   140006c91:	add    BYTE PTR [rsi+0x0],ah
   140006c94:	je     0x140006c96
   140006c96:	cmp    al,BYTE PTR [rax]
   140006c98:	movsxd eax,DWORD PTR [rax]
   140006c9a:	data16 add BYTE PTR [rdi+0x0],ah
   140006c9e:	ins    DWORD PTR es:[rdi],dx
   140006c9f:	add    BYTE PTR [rdi+0x0],ah
   140006ca2:	jb     0x140006ca4
   140006ca4:	add    BYTE PTR cs:[rbp+0x0],dh
   140006ca8:	(bad)  
   140006ca9:	add    BYTE PTR [rax],al
   140006cab:	add    BYTE PTR [rax],al
   140006cad:	add    BYTE PTR [rax],al
   140006caf:	add    BYTE PTR [rcx+0x0],ah
   140006cb2:	jo     0x140006cb4
   140006cb4:	jo     0x140006cb6
   140006cb6:	ins    BYTE PTR es:[rdi],dx
   140006cb7:	add    BYTE PTR [rcx+0x0],ch
   140006cba:	movsxd eax,DWORD PTR [rax]
   140006cbc:	(bad)  
   140006cbd:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006cc1:	add    BYTE PTR [rdi+0x0],ch
   140006cc4:	outs   dx,BYTE PTR ds:[rsi]
   140006cc5:	add    BYTE PTR [rdi],ch
   140006cc7:	add    BYTE PTR [rsi+0x0],dh
   140006cca:	outs   dx,BYTE PTR ds:[rsi]
   140006ccb:	add    BYTE PTR [rax+rax*1+0x2e],ah
   140006ccf:	add    BYTE PTR [rdi+0x0],dh
   140006cd2:	(bad)  
   140006cd3:	add    BYTE PTR [rax+0x0],dh
   140006cd6:	add    BYTE PTR cs:[rbx+0x0],ah
   140006cda:	outs   dx,DWORD PTR ds:[rsi]
   140006cdb:	add    BYTE PTR [rsi+0x0],ch
   140006cde:	outs   dx,BYTE PTR ds:[rsi]
   140006cdf:	add    BYTE PTR [rbp+0x0],ah
   140006ce2:	movsxd eax,DWORD PTR [rax]
   140006ce4:	je     0x140006ce6
   140006ce6:	imul   eax,DWORD PTR [rax],0x690076
   140006cec:	je     0x140006cee
   140006cee:	jns    0x140006cf0
   140006cf0:	sub    eax,0x62007700
   140006cf5:	add    BYTE PTR [rax+0x0],bh
   140006cf8:	ins    DWORD PTR es:[rdi],dx
   140006cf9:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006cfd:	add    BYTE PTR [rax],al
   140006cff:	add    BYTE PTR [rbx+0x0],al
   140006d02:	outs   dx,DWORD PTR ds:[rsi]
   140006d03:	add    BYTE PTR [rsi+0x0],ch
   140006d06:	je     0x140006d08
   140006d08:	add    BYTE PTR gs:[rsi+0x0],ch
   140006d0c:	je     0x140006d0e
   140006d0e:	sub    eax,0x6f004c00
   140006d13:	add    BYTE PTR [rbx+0x0],ah
   140006d16:	(bad)  
   140006d17:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006d1b:	add    BYTE PTR [rdi+0x0],ch
   140006d1e:	outs   dx,BYTE PTR ds:[rsi]
	...
   140006d27:	add    BYTE PTR [rax+0x0],bl
   140006d2a:	sub    eax,0x61005700
   140006d2f:	add    BYTE PTR [rax+0x0],dh
   140006d32:	sub    eax,0x6f004300
   140006d37:	add    BYTE PTR [rsi+0x0],ch
   140006d3a:	je     0x140006d3c
   140006d3c:	add    BYTE PTR gs:[rsi+0x0],ch
   140006d40:	je     0x140006d42
   140006d42:	sub    eax,0x52005500
   140006d47:	add    BYTE PTR [rcx+0x0],cl
   140006d4a:	add    BYTE PTR [rax],al
   140006d4c:	add    BYTE PTR [rax],al
   140006d4e:	add    BYTE PTR [rax],al
   140006d50:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006d54:	outs   dx,BYTE PTR ds:[rsi]
   140006d55:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006d59:	add    BYTE PTR [rsi+0x0],ch
   140006d5c:	je     0x140006d5e
   140006d5e:	sub    eax,0x79005400
   140006d63:	add    BYTE PTR [rax+0x0],dh
   140006d66:	add    BYTE PTR gs:[rax],al
   140006d69:	add    BYTE PTR [rax],al
   140006d6b:	add    BYTE PTR [rax],al
   140006d6d:	add    BYTE PTR [rax],al
   140006d6f:	add    BYTE PTR [rax+0x0],bl
   140006d72:	sub    eax,0x41005700
   140006d77:	add    BYTE PTR [rax+0x0],dl
   140006d7a:	sub    eax,0x6e004900
   140006d7f:	add    BYTE PTR [rcx+0x0],ch
   140006d82:	je     0x140006d84
   140006d84:	imul   eax,DWORD PTR [rax],0x740061
   140006d8a:	outs   dx,DWORD PTR ds:[rsi]
   140006d8b:	add    BYTE PTR [rdx+0x0],dh
   140006d8e:	sub    eax,0x52005500
   140006d93:	add    BYTE PTR [rcx+0x0],cl
   140006d96:	add    BYTE PTR [rax],al
   140006d98:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   140006d9c:	rex.WR add BYTE PTR [rax+rax*1+0x0],r9b
   140006da1:	add    BYTE PTR [rax],al
   140006da3:	add    BYTE PTR [rax],al
   140006da5:	add    BYTE PTR [rax],al
   140006da7:	add    BYTE PTR [rbx+0x0],dl
   140006daa:	add    BYTE PTR gs:[rbx+0x0],ah
   140006dae:	push   rdx
   140006daf:	add    BYTE PTR [rbp+0x0],dh
   140006db2:	outs   dx,BYTE PTR ds:[rsi]
   140006db3:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006db7:	add    BYTE PTR [rbp+0x0],ch
   140006dba:	add    BYTE PTR gs:[rsi],ch
   140006dbd:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140006dc1:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006dc5:	add    BYTE PTR [rax],al
   140006dc7:	add    BYTE PTR [rbx+0x72],al
   140006dca:	gs (bad) 
   140006dcc:	je     0x140006e33
   140006dce:	push   rax
   140006dcf:	jb     0x140006e40
   140006dd1:	movsxd esp,DWORD PTR [rbp+0x73]
   140006dd4:	jae    0x140006e1f
   140006dd6:	outs   dx,BYTE PTR ds:[rsi]
   140006dd7:	rex.XB push 0x65626d61
   140006ddd:	jb     0x140006ddf
   140006ddf:	add    BYTE PTR [rbx+0x0],dl
   140006de2:	outs   dx,DWORD PTR ds:[rsi]
   140006de3:	add    BYTE PTR [rsi+0x0],ah
   140006de6:	je     0x140006de8
   140006de8:	ja     0x140006dea
   140006dea:	(bad)  
   140006deb:	add    BYTE PTR [rdx+0x0],dh
   140006dee:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140006df3:	add    BYTE PTR [rcx+0x0],ch
   140006df6:	movsxd eax,DWORD PTR [rax]
   140006df8:	jb     0x140006dfa
   140006dfa:	outs   dx,DWORD PTR ds:[rsi]
   140006dfb:	add    BYTE PTR [rbx+0x0],dh
   140006dfe:	outs   dx,DWORD PTR ds:[rsi]
   140006dff:	add    BYTE PTR [rsi+0x0],ah
   140006e02:	je     0x140006e04
   140006e04:	pop    rsp
   140006e05:	add    BYTE PTR [rax+0x0],dl
   140006e08:	jne    0x140006e0a
   140006e0a:	jae    0x140006e0c
   140006e0c:	push   0x6f005200
   140006e11:	add    BYTE PTR [rbp+0x0],dh
   140006e14:	je     0x140006e16
   140006e16:	add    BYTE PTR gs:[rdx+0x0],dh
   140006e1a:	pop    rsp
   140006e1b:	add    BYTE PTR [rax+rax*1+0x65],dl
   140006e1f:	add    BYTE PTR [rbx+0x0],dh
   140006e22:	je     0x140006e24
   140006e24:	add    BYTE PTR [rax],al
   140006e26:	add    BYTE PTR [rax],al
   140006e28:	add    BYTE PTR [r8+0x0],sil
   140006e2c:	jo     0x140006e2e
   140006e2e:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006e32:	outs   dx,BYTE PTR ds:[rsi]
   140006e33:	add    BYTE PTR [rax+rax*1+0x61],dh
   140006e37:	add    BYTE PTR [rcx+0x0],ch
   140006e3a:	outs   dx,BYTE PTR ds:[rsi]
   140006e3b:	add    BYTE PTR [rbp+0x0],ah
   140006e3e:	jb     0x140006e40
   140006e40:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140006e44:	ins    DWORD PTR es:[rdi],dx
   140006e45:	add    BYTE PTR [rbp+0x0],ah
	...
   140006e50:	add    BYTE PTR fs:[rbp+0x0],ch
   140006e54:	js     0x140006e56
   140006e56:	ins    DWORD PTR es:[rdi],dx
   140006e57:	add    BYTE PTR [rax+rax*1+0x68],ch
   140006e5b:	add    BYTE PTR [rbp+0x0],ah
   140006e5e:	ins    BYTE PTR es:[rdi],dx
   140006e5f:	add    BYTE PTR [rax+0x0],dh
   140006e62:	jne    0x140006e64
   140006e64:	je     0x140006e66
   140006e66:	imul   eax,DWORD PTR [rax],0x73006c
   140006e6c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140006e71:	add    BYTE PTR [rax+rax*1+0x0],ch
   140006e75:	add    BYTE PTR [rax],al
   140006e77:	add    BYTE PTR [rdi+0x42],dl
   140006e7a:	pop    rax
   140006e7b:	rex.WRB
   140006e7c:	rex.WR push rsp
   140006e7e:	outs   dx,DWORD PTR ds:[rsi]
   140006e7f:	push   rsp
   140006e80:	gs js  0x140006ef7
   140006e83:	pop    rax
   140006e84:	rex.WRB
   140006e85:	rex.WR
   140006e86:	rex.RXB
   140006e87:	outs   dx,BYTE PTR gs:[rsi]
   140006e89:	gs jb  0x140006ef5
   140006e8c:	movsxd eax,DWORD PTR [rax]
   140006e8e:	add    BYTE PTR [rax],al
   140006e90:	push   rdi
   140006e91:	push   rbx
   140006e92:	push   rax
   140006e93:	rex.RX jb 0x140006efb
   140006e96:	gs rex.X jne 0x140006f00
   140006e9a:	data16 gs jb 0x140006e9e
   140006e9e:	add    BYTE PTR [rax],al
   140006ea0:	je     0x140006ea2
   140006ea2:	ins    DWORD PTR es:[rdi],dx
   140006ea3:	add    BYTE PTR [rax+0x0],dh
   140006ea6:	add    BYTE PTR [rax],al
   140006ea8:	sub    eax,0x20006400
   140006ead:	add    BYTE PTR [rip+0x20007300],ah        # 0x16000e1b3
   140006eb3:	add    BYTE PTR [rip+0x63006900],ch        # 0x1a300d7b9
   140006eb9:	add    BYTE PTR [rbx+0x0],ah
   140006ebc:	imul   eax,DWORD PTR [rax],0x200064
   140006ec2:	and    eax,0x7300
   140006ec7:	add    BYTE PTR [rip+0x20006400],ch        # 0x16000d2cd
   140006ecd:	add    BYTE PTR [rip+0x7300],ah        # 0x14000e1d3
	...
   140006edf:	add    BYTE PTR [rip+0x79005300],ah        # 0x1b900c1e5
   140006ee5:	add    BYTE PTR [rbx+0x0],dh
   140006ee8:	je     0x140006eea
   140006eea:	add    BYTE PTR gs:[rbp+0x0],ch
   140006eee:	add    BYTE PTR [rdx+0x0],r14b
   140006ef2:	imul   eax,DWORD PTR [rax],0x650076
   140006ef8:	and    eax,0x57005c00
   140006efd:	add    BYTE PTR [rcx+0x0],ch
   140006f00:	outs   dx,BYTE PTR ds:[rsi]
   140006f01:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140006f05:	add    BYTE PTR [rdi+0x0],dh
   140006f08:	jae    0x140006f0a
   140006f0a:	pop    rsp
   140006f0b:	add    BYTE PTR [rbx+0x0],dl
   140006f0e:	jns    0x140006f10
   140006f10:	jae    0x140006f12
   140006f12:	je     0x140006f14
   140006f14:	add    BYTE PTR gs:[rbp+0x0],ch
   140006f18:	xor    eax,DWORD PTR [rax]
   140006f1a:	xor    al,BYTE PTR [rax]
   140006f1c:	pop    rsp
   140006f1d:	add    BYTE PTR [rax+rax*1+0x6d],al
   140006f21:	add    BYTE PTR [rdi+0x0],cl
   140006f24:	ins    DWORD PTR es:[rdi],dx
   140006f25:	add    BYTE PTR [rcx+0x0],ah
   140006f28:	rex.XB add BYTE PTR [r8+0x0],sil
   140006f2c:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140006f30:	add    BYTE PTR cs:[rbp+0x0],ah
   140006f34:	js     0x140006f36
   140006f36:	add    BYTE PTR gs:[rax],al
   140006f39:	add    BYTE PTR [rax],al
   140006f3b:	add    BYTE PTR [rax],al
   140006f3d:	add    BYTE PTR [rax],al
   140006f3f:	add    BYTE PTR [rip+0x79005300],ah        # 0x1b900c245
   140006f45:	add    BYTE PTR [rbx+0x0],dh
   140006f48:	je     0x140006f4a
   140006f4a:	add    BYTE PTR gs:[rbp+0x0],ch
   140006f4e:	add    BYTE PTR [rdx+0x0],r14b
   140006f52:	imul   eax,DWORD PTR [rax],0x650076
   140006f58:	and    eax,0x57005c00
   140006f5d:	add    BYTE PTR [rcx+0x0],ch
   140006f60:	outs   dx,BYTE PTR ds:[rsi]
   140006f61:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140006f65:	add    BYTE PTR [rdi+0x0],dh
   140006f68:	jae    0x140006f6a
   140006f6a:	pop    rsp
   140006f6b:	add    BYTE PTR [rbx+0x0],dl
   140006f6e:	jns    0x140006f70
   140006f70:	jae    0x140006f72
   140006f72:	je     0x140006f74
   140006f74:	add    BYTE PTR gs:[rbp+0x0],ch
   140006f78:	xor    eax,DWORD PTR [rax]
   140006f7a:	xor    al,BYTE PTR [rax]
   140006f7c:	pop    rsp
   140006f7d:	add    BYTE PTR [rax+rax*1+0x6d],al
   140006f81:	add    BYTE PTR [rdi+0x0],cl
   140006f84:	ins    DWORD PTR es:[rdi],dx
   140006f85:	add    BYTE PTR [rcx+0x0],ah
   140006f88:	rex.XB add BYTE PTR [r8+0x0],sil
   140006f8c:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140006f90:	add    BYTE PTR cs:[rbp+0x0],ah
   140006f94:	js     0x140006f96
   140006f96:	add    BYTE PTR gs:[rax],al
   140006f99:	add    BYTE PTR [rax],al
   140006f9b:	add    BYTE PTR [rax],al
   140006f9d:	add    BYTE PTR [rax],al
   140006f9f:	add    BYTE PTR [rax+rax*1+0x6d],al
   140006fa3:	add    BYTE PTR [rdi+0x0],cl
   140006fa6:	ins    DWORD PTR es:[rdi],dx
   140006fa7:	add    BYTE PTR [rcx+0x0],ah
   140006faa:	rex.XB add BYTE PTR [r8+0x0],sil
   140006fae:	push   rbp
   140006faf:	add    BYTE PTR [rbx+0x0],dh
   140006fb2:	add    BYTE PTR gs:[rdx+0x0],dh
   140006fb6:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140006fba:	add    BYTE PTR [rax],al
   140006fbc:	add    BYTE PTR [rax],al
   140006fbe:	add    BYTE PTR [rax],al
   140006fc0:	add    BYTE PTR [rbp+0x0],r13b
   140006fc4:	rex.WRXB add BYTE PTR [r13+0x0],r13b
   140006fc8:	(bad)  
   140006fc9:	add    BYTE PTR [rbx+0x0],al
   140006fcc:	jo     0x140006fce
   140006fce:	rex.WRX add BYTE PTR [rbp+0x0],r12b
   140006fd2:	je     0x140006fd4
   140006fd4:	ja     0x140006fd6
   140006fd6:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140006fda:	add    BYTE PTR [rax],al
   140006fdc:	add    BYTE PTR [rax],al
   140006fde:	add    BYTE PTR [rax],al
   140006fe0:	and    BYTE PTR [rax],al
   140006fe2:	sub    eax,0x2000
	...
   140006fef:	add    BYTE PTR [rbp-0x450e4cd9],al
   140006ff5:	outs   dx,DWORD PTR ds:[rsi]
   140006ff6:	iret   
   140006ff7:	rex.WRXB popf 
   140006ff9:	push   rbp
   140006ffa:	jnp    0x140006f8a
   140006ffc:	jg     0x140007013
   140006ffe:	jo     0x140006f91
   140007000:	and    al,BYTE PTR [rip+0x11993]        # 0x140018999
   140007006:	add    BYTE PTR [rax],al
   140007008:	clc    
   140007009:	je     0x14000700b
	...
   140007013:	add    BYTE PTR [rbx],al
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    BYTE PTR [rax],al
   140007019:	jne    0x14000701b
   14000701b:	add    BYTE PTR [rax],dh
   14000701d:	add    DWORD PTR [rax],eax
   14000701f:	add    BYTE PTR [rax],al
   140007021:	add    BYTE PTR [rax],al
   140007023:	add    BYTE PTR [rcx],al
	...
   140007031:	add    BYTE PTR [rax],al
   140007033:	add    BYTE PTR [rsi+0x3b],bh
   140007036:	lahf   
   140007037:	push   rbp
   140007038:	add    BYTE PTR [rax],al
   14000703a:	add    BYTE PTR [rax],al
   14000703c:	add    al,BYTE PTR [rax]
   14000703e:	add    BYTE PTR [rax],al
   140007040:	add    BYTE PTR es:[rax],al
   140007043:	add    BYTE PTR [rax],dh
   140007045:	jno    0x140007047
   140007047:	add    BYTE PTR [rax],dh
   140007049:	pop    rbx
   14000704a:	add    BYTE PTR [rax],al
   14000704c:	add    BYTE PTR [rax],al
   14000704e:	add    BYTE PTR [rax],al
   140007050:	jle    0x14000708d
   140007052:	lahf   
   140007053:	push   rbp
   140007054:	add    BYTE PTR [rax],al
   140007056:	add    BYTE PTR [rax],al
   140007058:	or     eax,0xb8000000
   14000705d:	add    al,BYTE PTR [rax]
   14000705f:	add    BYTE PTR [rcx+rsi*2+0x0],ch
   140007063:	add    BYTE PTR [rbx+rbx*2+0x0],ch
	...
   14000708f:	add    BYTE PTR [rax+0x0],ah
	...
   1400070e5:	add    BYTE PTR [rax],al
   1400070e7:	add    BYTE PTR [rax],cl
   1400070e9:	nop
   1400070ea:	add    BYTE PTR [rax+0x1],al
	...
   1400070fd:	add    BYTE PTR [rax],al
   1400070ff:	add    BYTE PTR [rax],cl
   140007101:	push   rsp
   140007102:	add    BYTE PTR [rax+0x1],al
   140007105:	add    BYTE PTR [rax],al
   140007107:	add    BYTE PTR [rax],dl
   140007109:	push   rsp
   14000710a:	add    BYTE PTR [rax+0x1],al
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	add    BYTE PTR [rax+0x54],ch
   140007112:	add    BYTE PTR [rax+0x1],al
   140007115:	add    BYTE PTR [rax],al
   140007117:	add    BYTE PTR [rax],ch
	...
   140007121:	xor    eax,0x0
	...
   14000712e:	add    BYTE PTR [rax],al
   140007130:	push   rdx
   140007131:	push   rbx
   140007132:	rex.R push rbx
   140007134:	in     eax,dx
   140007135:	(bad)  
   140007136:	int    0x95
   140007138:	jo     0x1400070d7
   14000713a:	mov    al,0x4e
   14000713c:	scas   al,BYTE PTR es:[rdi]
   14000713d:	fsubr  QWORD PTR [rbx+rax*8-0x7472f054]
   140007144:	add    DWORD PTR [rax],eax
   140007146:	add    BYTE PTR [rax],al
   140007148:	fs ins DWORD PTR es:[rdi],dx
   14000714a:	movsxd esp,DWORD PTR [rsi+0x67]
   14000714d:	push   0x2e74736f
   140007152:	jo     0x1400071b8
   140007154:	(bad)  
	...
   140007169:	add    BYTE PTR [rax],al
   14000716b:	add    BYTE PTR [rdi+0x43],al
   14000716e:	push   rsp
   14000716f:	rex.WR add BYTE PTR [rax],r10b
   140007172:	add    BYTE PTR [rax],al
   140007174:	sub    al,0x0
   140007176:	add    BYTE PTR [rax],al
   140007178:	cs je  0x1400071e0
   14000717b:	js     0x1400071f1
   14000717d:	and    al,0x64
   14000717f:	imul   eax,DWORD PTR [rax],0x30000000
   140007185:	adc    BYTE PTR [rax],al
   140007187:	add    ah,bh
   140007189:	xor    DWORD PTR [rax],eax
   14000718b:	add    BYTE PTR [rsi],ch
   14000718d:	je     0x1400071f4
   14000718f:	js     0x140007205
   140007191:	and    al,0x6d
   140007193:	outs   dx,BYTE PTR ds:[rsi]
   140007194:	add    BYTE PTR [rax],al
   140007196:	add    BYTE PTR [rax],al
   140007198:	xor    BYTE PTR [rdx+0x0],al
   14000719b:	add    BYTE PTR [rbp+0x0],bh
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	cs je  0x140007208
   1400071a3:	js     0x140007219
   1400071a5:	and    al,0x6d
   1400071a7:	outs   dx,BYTE PTR ds:[rsi]
   1400071a8:	and    al,0x30
   1400071aa:	xor    BYTE PTR [rax],al
   1400071ac:	mov    al,0x42
   1400071ae:	add    BYTE PTR [rax],al
   1400071b0:	xor    BYTE PTR [rcx],al
   1400071b2:	add    BYTE PTR [rax],al
   1400071b4:	cs je  0x14000721c
   1400071b7:	js     0x14000722d
   1400071b9:	and    al,0x78
   1400071bb:	add    al,ah
   1400071bd:	rex.XB add BYTE PTR [r8],al
   1400071c0:	pop    rdi
   1400071c1:	add    BYTE PTR [rax],al
   1400071c3:	add    BYTE PTR [rsi],ch
   1400071c5:	je     0x14000722c
   1400071c7:	js     0x14000723d
   1400071c9:	and    al,0x79
   1400071cb:	add    BYTE PTR fs:[rax],al
   1400071ce:	add    BYTE PTR [rax],al
   1400071d0:	add    BYTE PTR [rax+0x0],dl
   1400071d3:	add    BYTE PTR [rax],cl
   1400071d5:	add    al,0x0
   1400071d7:	add    BYTE PTR [rsi],ch
   1400071d9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   1400071e1:	add    BYTE PTR [rax],al
   1400071e3:	add    BYTE PTR [rax],cl
   1400071e5:	push   rsp
   1400071e6:	add    BYTE PTR [rax],al
   1400071e8:	adc    BYTE PTR [rax],al
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	xor    BYTE PTR cs:[rax],dh
   1400071ef:	movsxd esp,DWORD PTR [rsi+0x67]
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	sbb    BYTE PTR [rax+rax*1+0x0],dl
   1400071f8:	or     BYTE PTR [rax],al
   1400071fa:	add    BYTE PTR [rax],al
   1400071fc:	cs rex.XB push r10
   1400071ff:	push   rsp
   140007200:	and    al,0x58
   140007202:	rex.XB
   140007203:	add    BYTE PTR [r8],al
   140007206:	add    BYTE PTR [rax],al
   140007208:	and    BYTE PTR [rax+rax*1+0x0],dl
   14000720c:	or     BYTE PTR [rax],al
   14000720e:	add    BYTE PTR [rax],al
   140007210:	cs rex.XB push r10
   140007213:	push   rsp
   140007214:	and    al,0x58
   140007216:	rex.XB
   140007217:	rex.B
   140007218:	add    BYTE PTR [r8],al
   14000721b:	add    BYTE PTR [rax],ch
   14000721d:	push   rsp
   14000721e:	add    BYTE PTR [rax],al
   140007220:	sbb    BYTE PTR [rax],al
   140007222:	add    BYTE PTR [rax],al
   140007224:	cs rex.XB push r10
   140007227:	push   rsp
   140007228:	and    al,0x58
   14000722a:	rex.XB push r13
   14000722c:	add    BYTE PTR [rax],al
   14000722e:	add    BYTE PTR [rax],al
   140007230:	rex push rsp
   140007232:	add    BYTE PTR [rax],al
   140007234:	or     BYTE PTR [rax],al
   140007236:	add    BYTE PTR [rax],al
   140007238:	cs rex.XB push r10
   14000723b:	push   rsp
   14000723c:	and    al,0x58
   14000723e:	rex.XB pop r10
   140007240:	add    BYTE PTR [rax],al
   140007242:	add    BYTE PTR [rax],al
   140007244:	rex.W push rsp
   140007246:	add    BYTE PTR [rax],al
   140007248:	or     BYTE PTR [rax],al
   14000724a:	add    BYTE PTR [rax],al
   14000724c:	cs rex.XB push r10
   14000724f:	push   rsp
   140007250:	and    al,0x58
   140007252:	rex.WB
   140007253:	add    BYTE PTR [r8],al
   140007256:	add    BYTE PTR [rax],al
   140007258:	push   rax
   140007259:	push   rsp
   14000725a:	add    BYTE PTR [rax],al
   14000725c:	or     BYTE PTR [rax],al
   14000725e:	add    BYTE PTR [rax],al
   140007260:	cs rex.XB push r10
   140007263:	push   rsp
   140007264:	and    al,0x58
   140007266:	rex.WB
   140007267:	rex.B
   140007268:	add    BYTE PTR [r8],al
   14000726b:	add    BYTE PTR [rax+0x54],bl
   14000726e:	add    BYTE PTR [rax],al
   140007270:	or     BYTE PTR [rax],al
   140007272:	add    BYTE PTR [rax],al
   140007274:	cs rex.XB push r10
   140007277:	push   rsp
   140007278:	and    al,0x58
   14000727a:	rex.WB pop r9
   14000727c:	add    BYTE PTR [rax],al
   14000727e:	add    BYTE PTR [rax],al
   140007280:	(bad)  
   140007281:	push   rsp
   140007282:	add    BYTE PTR [rax],al
   140007284:	or     BYTE PTR [rax],al
   140007286:	add    BYTE PTR [rax],al
   140007288:	cs rex.XB push r10
   14000728b:	push   rsp
   14000728c:	and    al,0x58
   14000728e:	rex.WB pop r10
   140007290:	add    BYTE PTR [rax],al
   140007292:	add    BYTE PTR [rax],al
   140007294:	push   0xffffffffa0000054
   140007299:	add    BYTE PTR [rax],al
   14000729b:	add    BYTE PTR [rsi],ch
   14000729d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   1400072a5:	add    BYTE PTR [rax],al
   1400072a7:	add    BYTE PTR [rax],dl
   1400072a9:	push   rbp
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	and    BYTE PTR [rax+rax*1],bl
   1400072af:	add    BYTE PTR [rsi],ch
   1400072b1:	jb     0x140007317
   1400072b3:	(bad)  
   1400072b4:	je     0x140007317
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	xor    BYTE PTR [rcx+0x0],dh
   1400072bb:	add    ah,dh
   1400072bd:	add    al,BYTE PTR [rax]
   1400072bf:	add    BYTE PTR [rsi],ch
   1400072c1:	jb     0x140007327
   1400072c3:	(bad)  
   1400072c4:	je     0x140007327
   1400072c6:	and    al,0x7a
   1400072c8:	jp     0x140007344
   1400072ca:	fs (bad) 
   1400072cc:	add    BYTE PTR [eax],al
   1400072cf:	add    BYTE PTR [rax],dh
   1400072d1:	je     0x1400072d3
   1400072d3:	add    BYTE PTR [rax+0x4],ch
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	cs js  0x14000733f
   1400072db:	(bad)  
   1400072dc:	je     0x14000733f
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	cwde   
   1400072e1:	js     0x1400072e3
   1400072e3:	add    BYTE PTR [rcx+rax*1+0x0],bh
   1400072e7:	add    BYTE PTR [rsi],ch
   1400072e9:	js     0x14000734f
   1400072eb:	(bad)  
   1400072ec:	je     0x14000734f
   1400072ee:	and    al,0x78
   1400072f0:	add    BYTE PTR [rax],al
   1400072f2:	add    BYTE PTR [rax],al
   1400072f4:	sbb    BYTE PTR [rdx+0x0],bh
   1400072f7:	add    BYTE PTR [rax+0x0],ah
   1400072fa:	add    BYTE PTR [rax],al
   1400072fc:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   140007306:	add    BYTE PTR [rax],al
   140007308:	js     0x140007384
   14000730a:	add    BYTE PTR [rax],al
   14000730c:	and    BYTE PTR [rax],al
   14000730e:	add    BYTE PTR [rax],al
   140007310:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000731a:	add    BYTE PTR [rax],al
   14000731c:	cwde   
   14000731d:	jp     0x14000731f
   14000731f:	add    BYTE PTR [rax],dh
   140007321:	add    BYTE PTR [rax],al
   140007323:	add    BYTE PTR [rsi],ch
   140007325:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000732e:	add    BYTE PTR [rax],al
   140007330:	enter  0x7a,0x0
   140007334:	push   rax
   140007335:	add    BYTE PTR [rax],al
   140007337:	add    BYTE PTR [rsi],ch
   140007339:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   140007342:	add    BYTE PTR [rax],al
   140007344:	sbb    BYTE PTR [rbx+0x0],bh
   140007347:	add    BYTE PTR [rax],dh
   140007349:	add    BYTE PTR [rax],al
   14000734b:	add    BYTE PTR [rsi],ch
   14000734d:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   140007356:	add    BYTE PTR [rax],al
   140007358:	rex.W jnp 0x14000735b
   14000735b:	add    BYTE PTR [rax],cl
   14000735d:	add    al,BYTE PTR [rax]
   14000735f:	add    BYTE PTR [rsi],ch
   140007361:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140007369:	add    BYTE PTR [rax],al
   14000736b:	add    BYTE PTR [rax+0x7d],dl
   14000736e:	add    BYTE PTR [rax],al
   140007370:	adc    al,0x0
   140007372:	add    BYTE PTR [rax],al
   140007374:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000737d:	add    BYTE PTR [rax],al
   14000737f:	add    BYTE PTR [rax+0x7d],ch
   140007382:	add    BYTE PTR [rax],al
   140007384:	or     BYTE PTR [rax+rax*1],al
   140007387:	add    BYTE PTR [rsi],ch
   140007389:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140007391:	add    BYTE PTR [rax],al
   140007393:	add    BYTE PTR [rax-0x7f],dh
   140007396:	add    BYTE PTR [rax],al
   140007398:	test   al,0x9
   14000739a:	add    BYTE PTR [rax],al
   14000739c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rax],al
   1400073a9:	nop
   1400073aa:	add    BYTE PTR [rax],al
   1400073ac:	nop
   1400073ad:	add    BYTE PTR [rax],al
   1400073af:	add    BYTE PTR [rsi],ch
   1400073b1:	fs (bad) 
   1400073b3:	je     0x140007416
   1400073b5:	add    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rax-0x40ffff70],dl
   1400073bd:	add    BYTE PTR [rax],al
   1400073bf:	add    BYTE PTR [rsi],ch
   1400073c1:	fs (bad) 
   1400073c3:	je     0x140007426
   1400073c5:	and    al,0x72
   1400073c7:	add    BYTE PTR [rax+0x50000091],al
   1400073cd:	(bad)  
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	cs (bad) 
   1400073d3:	jae    0x1400073d5
   1400073d5:	add    BYTE PTR [rax],al
   1400073d7:	add    BYTE PTR [rax],al
   1400073d9:	movabs al,ds:0x702e000003780000
   1400073e2:	fs (bad) 
   1400073e4:	je     0x140007447
   1400073e6:	add    BYTE PTR [rax],al
   1400073e8:	add    BYTE PTR [rax+0x300000],dh
   1400073ee:	add    BYTE PTR [rax],al
   1400073f0:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   1400073fa:	add    BYTE PTR [rax],al
   1400073fc:	add    al,al
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	add    al,0x1
   140007402:	add    BYTE PTR [rax],al
   140007404:	cs jb  0x14000747a
   140007407:	jb     0x14000746c
   140007409:	and    al,0x30
   14000740b:	xor    DWORD PTR [rax],eax
   14000740d:	add    BYTE PTR [rax],al
   14000740f:	add    BYTE PTR [rax],dl
   140007411:	rol    DWORD PTR [rax],0x0
   140007414:	test   al,0x15
   140007416:	add    BYTE PTR [rax],al
   140007418:	cs jb  0x14000748e
   14000741b:	jb     0x140007480
   14000741d:	and    al,0x30
   14000741f:	xor    al,BYTE PTR [rax]
	...
   14000742d:	add    BYTE PTR [rax],al
   14000742f:	add    BYTE PTR [rcx],al
   140007431:	or     al,BYTE PTR [rax+rax*1]
   140007434:	or     dh,BYTE PTR [rsi+rax*1]
   140007437:	add    BYTE PTR [rdx],cl
   140007439:	xor    al,BYTE PTR [rsi]
   14000743b:	jo     0x14000743e
   14000743d:	add    al,0x1
   14000743f:	add    BYTE PTR [rdx+rax*2],al
   140007442:	add    BYTE PTR [rax],al
   140007444:	sbb    DWORD PTR [rdi],ebp
   140007446:	or     DWORD PTR [rax],eax
   140007448:	(bad)  
   140007449:	je     0x14000749c
   14000744b:	add    BYTE PTR [rsi],bl
   14000744d:	rex.WRXB add BYTE PTR fs:[r14],r11b
   140007451:	xor    al,0x4e
   140007453:	add    BYTE PTR [rsi],bl
   140007455:	add    DWORD PTR [rax+rax*1+0x10],ecx
   140007459:	push   rax
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	mov    WORD PTR [rcx+0x0],es
   14000745f:	add    BYTE PTR [rax+0x2],dl
   140007462:	add    BYTE PTR [rax],al
   140007464:	add    DWORD PTR [rip+0x64150008],edx        # 0x1a4157472
   14000746a:	or     al,0x0
   14000746c:	adc    eax,0x15000b34
   140007471:	push   rdx
   140007472:	(bad)  
   140007473:	loopne 0x140007481
   140007475:	jo     0x140007482
   140007477:	push   rax
   140007478:	sbb    DWORD PTR [rbx],esp
   14000747a:	add    al,BYTE PTR [rax]
   14000747c:	adc    eax,0x8c500bf2
   140007481:	add    BYTE PTR [r8],al
   140007484:	jo     0x140007486
   140007486:	add    BYTE PTR [rax],al
   140007488:	sbb    DWORD PTR [rip+0x1170003],esp        # 0x141177491
   14000748e:	adc    al,0x0
   140007490:	or     edx,DWORD PTR [rax+0x0]
   140007493:	add    BYTE PTR [rcx+rax*2+0x900000],cl
   14000749a:	add    BYTE PTR [rax],al
   14000749c:	sbb    DWORD PTR [rdx],ebx
   14000749e:	add    DWORD PTR [rax],eax
   1400074a0:	or     eax,DWORD PTR [rdx+0x418c0000]
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	xor    BYTE PTR [rax],al
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	add    DWORD PTR [rax],ebx
   1400074ae:	or     al,BYTE PTR [rax]
   1400074b0:	sbb    BYTE PTR [rax+rdx*1+0x0],ah
   1400074b4:	sbb    BYTE PTR [rdi+rcx*1+0x0],dl
   1400074b8:	sbb    BYTE PTR [rsi+rcx*1],dh
   1400074bb:	add    BYTE PTR [rax],bl
   1400074bd:	xchg   edx,eax
   1400074be:	adc    al,0xf0
   1400074c0:	adc    ah,al
   1400074c2:	adc    BYTE PTR [rax+0x19],dh
   1400074c5:	sbb    al,0x3
   1400074c7:	add    BYTE PTR [rsi],cl
   1400074c9:	add    DWORD PTR [rsi],edx
   1400074cb:	add    BYTE PTR [rdx],al
   1400074cd:	push   rax
   1400074ce:	add    BYTE PTR [rax],al
   1400074d0:	mov    WORD PTR [rcx+0x0],es
   1400074d3:	add    BYTE PTR [rax+0x11000000],ah
   1400074d9:	or     DWORD PTR cs:[rax],eax
   1400074dc:	and    esi,DWORD PTR [rsp+rbp*1+0x0]
   1400074e0:	(bad)  
   1400074e1:	sub    eax,DWORD PTR fs:[rax]
   1400074e4:	sbb    esi,DWORD PTR [rdx+rbp*1]
   1400074e7:	add    BYTE PTR [rbx],cl
   1400074e9:	add    DWORD PTR [rax],ebp
   1400074eb:	add    BYTE PTR [rax+rdx*2],al
   1400074ee:	add    BYTE PTR [rax],al
   1400074f0:	mov    eax,0x34
   1400074f5:	jo     0x1400074f7
   1400074f7:	add    bh,bh
   1400074f9:	(bad)  
   1400074fa:	(bad)  
   1400074fb:	push   QWORD PTR [rsi-0x4fffffbe]
   140007501:	sbb    DWORD PTR [rax],eax
   140007503:	add    bh,bh
   140007505:	(bad)  
   140007506:	(bad)  
   140007507:	call   FWORD PTR [rcx]
   140007509:	sbb    al,BYTE PTR [rax]
   14000750b:	add    BYTE PTR [rax],al
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rsi-0xffffe5],bl
   140007515:	(bad)  
   140007516:	(bad)  
   140007517:	inc    DWORD PTR [rcx]
   140007519:	or     BYTE PTR [rbx],al
   14000751b:	add    BYTE PTR [rax],cl
   14000751d:	rex.X add al,0xd0
   140007520:	add    dl,BYTE PTR [rax+0x0]
   140007523:	add    BYTE PTR [rcx],al
   140007525:	(bad)  
   140007526:	add    al,BYTE PTR [rax]
   140007528:	(bad)  
   140007529:	xor    al,BYTE PTR [rdx]
   14000752b:	xor    BYTE PTR [rcx],bl
   14000752d:	or     al,BYTE PTR es:[rax]
   140007530:	(bad)  
   140007531:	xor    al,0x1a
   140007533:	add    BYTE PTR [rdi],dl
   140007535:	repnz adc al,dh
   140007538:	(bad)  
   140007539:	loopne 0x140007547
   14000753b:	ror    BYTE PTR [rdx],1
   14000753d:	ror    BYTE PTR [rax],0x70
   140007540:	(bad)  
   140007541:	(bad)  
   140007542:	(bad)  
   140007543:	push   rax
   140007544:	mov    WORD PTR [rcx+0x0],es
   140007547:	add    BYTE PTR [rax+0x0],dh
   14000754a:	add    BYTE PTR [rax],al
   14000754c:	sbb    DWORD PTR [rbx],esi
   14000754e:	or     eax,DWORD PTR [rax]
   140007550:	and    dh,BYTE PTR [rsp+rbx*2+0x1]
   140007554:	and    dh,BYTE PTR [rbx+rbx*2]
   140007557:	add    DWORD PTR [rdx],esp
   140007559:	add    DWORD PTR [rcx+rax*1+0x13],edx
   14000755d:	lock adc eax,esp
   140007560:	(bad)  
   140007562:	or     eax,0x500bc0
   140007567:	add    BYTE PTR [rcx+rax*2+0xa900000],cl
   14000756e:	add    BYTE PTR [rax],al
   140007570:	add    DWORD PTR [rdx],edx
   140007572:	add    eax,0xe421200
   140007577:	jo     0x140007586
   140007579:	(bad)  
   14000757a:	or     al,0x50
   14000757c:	or     esi,DWORD PTR [rax]
   14000757e:	add    BYTE PTR [rax],al
   140007580:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415758e
   140007586:	or     al,BYTE PTR [rax]
   140007588:	adc    eax,0x15000964
   14000758d:	xor    al,0x8
   14000758f:	add    BYTE PTR [rip+0x19e01152],dl        # 0x159e086e7
   140007595:	xor    al,0x9
   140007597:	add    BYTE PTR [rbx],ah
   140007599:	adc    eax,DWORD PTR fs:[rdx]
   14000759c:	and    esi,DWORD PTR [rdx+rdx*1]
   14000759f:	add    ah,BYTE PTR [rbx]
   1400075a1:	add    DWORD PTR [rdx+rax*1],ecx
   1400075a4:	(bad)  
   1400075a5:	loopne 0x1400075b3
   1400075a7:	jo     0x1400075b4
   1400075a9:	push   rax
   1400075aa:	add    BYTE PTR [rax],al
   1400075ac:	mov    WORD PTR [rcx+0x0],es
   1400075af:	add    BYTE PTR [rax+0x10],dl
   1400075b2:	add    BYTE PTR [rax],al
   1400075b4:	sbb    DWORD PTR [rsi],ebp
   1400075b6:	or     DWORD PTR [rax],eax
   1400075b8:	sbb    eax,0x1d018c64
   1400075bd:	xor    al,0x8b
   1400075bf:	add    DWORD PTR [rip+0xe018601],ebx        # 0x14e01fbc6
   1400075c5:	loopne 0x1400075d3
   1400075c7:	jo     0x1400075d4
   1400075c9:	push   rax
   1400075ca:	add    BYTE PTR [rax],al
   1400075cc:	mov    WORD PTR [rcx+0x0],es
   1400075cf:	add    BYTE PTR [rax],ah
   1400075d1:	or     al,0x0
   1400075d3:	add    BYTE PTR [rcx],bl
   1400075d5:	(bad)  
   1400075d6:	or     DWORD PTR [rax],eax
   1400075d8:	(bad)  
   1400075d9:	je     0x140007568
   1400075db:	add    DWORD PTR [rsi],ebx
   1400075dd:	mov    WORD PTR fs:[rcx],es
   1400075e0:	(bad)  
   1400075e1:	xor    al,0x8b
   1400075e3:	add    DWORD PTR [rsi],ebx
   1400075e5:	add    DWORD PTR [rax+0x501001],ecx
   1400075eb:	add    BYTE PTR [rcx+rax*2+0xc300000],cl
   1400075f2:	add    BYTE PTR [rax],al
   1400075f4:	add    DWORD PTR [rcx+rax*1],eax
   1400075f7:	add    BYTE PTR [rdx+riz*2],al
   1400075fa:	add    BYTE PTR [rax],al
   1400075fc:	or     DWORD PTR [rax],ebx
   1400075fe:	or     DWORD PTR [rax],eax
   140007600:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   140007604:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   140007608:	sbb    BYTE PTR [rax+rbx*1],dh
   14000760b:	add    BYTE PTR [rax],bl
   14000760d:	add    DWORD PTR [rsi],edx
   14000760f:	add    BYTE PTR [rcx],dl
   140007611:	lock add BYTE PTR [rax],al
   140007614:	(bad)  
   140007615:	xor    al,BYTE PTR [rax]
   140007617:	add    BYTE PTR [rcx],al
   140007619:	add    BYTE PTR [rax],al
   14000761b:	add    BYTE PTR [rax+0x6700002c],al
   140007621:	add    BYTE PTR cs:[rax],al
   140007624:	jrcxz  0x140007668
   140007626:	add    BYTE PTR [rax],al
   140007628:	add    BYTE PTR cs:[eax],al
   14000762c:	add    BYTE PTR [rax],al
   14000762e:	add    BYTE PTR [rax],al
   140007630:	add    DWORD PTR [rax],eax
   140007632:	add    BYTE PTR [rax],al
   140007634:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a204763b
   14000763a:	add    BYTE PTR [rax],al
   14000763c:	mov    eax,0x20000034
   140007641:	push   rbp
   140007642:	add    BYTE PTR [rax],al
   140007644:	(bad)  
   140007645:	(bad)  
   140007646:	(bad)  
   140007647:	inc    DWORD PTR [rax]
   140007649:	add    BYTE PTR [rax],al
   14000764b:	add    bh,bh
   14000764d:	(bad)  
   14000764e:	(bad)  
   14000764f:	inc    DWORD PTR [rax]
	...
   140007659:	add    BYTE PTR [rax],al
   14000765b:	add    BYTE PTR [rcx],al
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    BYTE PTR [rcx],al
   140007661:	add    BYTE PTR [rax],al
   140007663:	add    BYTE PTR [rax+0x76],ch
   140007666:	add    BYTE PTR [rax],al
   140007668:	add    BYTE PTR [rax],al
	...
   140007673:	add    BYTE PTR [rdi],al
   140007675:	rex.XB add BYTE PTR [r8],al
   140007678:	cmp    BYTE PTR [rax],al
   14000767a:	add    BYTE PTR [rax],al
   14000767c:	add    BYTE PTR [rax],al
   14000767e:	add    BYTE PTR [rax],al
   140007680:	hlt    
   140007681:	add    BYTE PTR cs:[rax],al
   140007684:	(bad)  
   140007685:	(bad)  
   140007686:	(bad)  
   140007687:	inc    DWORD PTR [rcx]
   140007689:	(bad)  
   14000768a:	add    BYTE PTR [rax],al
   14000768c:	add    BYTE PTR [rax],al
   14000768e:	add    BYTE PTR [rax],al
   140007690:	(bad)  
   140007691:	(bad)  
   140007692:	add    BYTE PTR [rax],al
   140007694:	(bad)  
   140007695:	(bad)  
   140007696:	(bad)  
   140007697:	inc    DWORD PTR [rdi]
   140007699:	rex.XB add BYTE PTR [r8],al
   14000769c:	add    BYTE PTR [rax],al
   14000769e:	add    BYTE PTR [rax],al
   1400076a0:	adc    al,0x43
   1400076a2:	add    BYTE PTR [rax],al
   1400076a4:	add    DWORD PTR [rax],eax
   1400076a6:	add    BYTE PTR [rax],al
   1400076a8:	sbb    DWORD PTR [rbx+0x0],eax
   1400076ab:	add    BYTE PTR [rax],al
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rcx],bl
   1400076b1:	or     al,BYTE PTR [rdx]
   1400076b3:	add    BYTE PTR [rdx],cl
   1400076b5:	xor    al,BYTE PTR [rsi]
   1400076b7:	push   rax
   1400076b8:	mov    eax,0x20000034
   1400076bd:	push   rbp
   1400076be:	add    BYTE PTR [rax],al
   1400076c0:	or     DWORD PTR [rcx+rax*1],eax
   1400076c3:	add    BYTE PTR [rdx+riz*1],al
   1400076c6:	add    BYTE PTR [rax],al
   1400076c8:	(bad)  
   1400076c9:	xor    al,BYTE PTR [rax]
   1400076cb:	add    BYTE PTR [rcx],al
   1400076cd:	add    BYTE PTR [rax],al
   1400076cf:	add    BYTE PTR [rdi+rbp*1+0x2fd20000],bl
   1400076d6:	add    BYTE PTR [rax],al
   1400076d8:	add    DWORD PTR [rax],eax
   1400076da:	add    BYTE PTR [rax],al
   1400076dc:	shr    BYTE PTR [rdi],cl
   1400076de:	add    BYTE PTR [rax],al
   1400076e0:	or     DWORD PTR [rdx],ecx
   1400076e2:	add    al,0x0
   1400076e4:	or     dh,BYTE PTR [rsi+rax*1]
   1400076e7:	add    BYTE PTR [rdx],cl
   1400076e9:	xor    al,BYTE PTR [rsi]
   1400076eb:	jo     0x140007703
   1400076ed:	xor    al,BYTE PTR [rax]
   1400076ef:	add    BYTE PTR [rcx],al
   1400076f1:	add    BYTE PTR [rax],al
   1400076f3:	add    BYTE PTR [rbp-0x1fffffd0],ch
   1400076f9:	xor    BYTE PTR [rax],al
   1400076fb:	add    BYTE PTR [rax],dh
   1400076fd:	rex.XB add BYTE PTR [r8],al
   140007700:	loopne 0x140007732
   140007702:	add    BYTE PTR [rax],al
   140007704:	add    DWORD PTR [rsi],eax
   140007706:	add    al,BYTE PTR [rax]
   140007708:	(bad)  
   140007709:	xor    al,BYTE PTR [rdx]
   14000770b:	push   rax
   14000770c:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d7716
   140007712:	or     DWORD PTR [rax],eax
   140007714:	or     eax,0x11500632
   140007719:	or     al,BYTE PTR [rax+rax*1]
   14000771c:	or     dh,BYTE PTR [rsi+rax*1]
   14000771f:	add    BYTE PTR [rdx],cl
   140007721:	xor    al,BYTE PTR [rsi]
   140007723:	jo     0x14000773b
   140007725:	xor    al,BYTE PTR [rax]
   140007727:	add    BYTE PTR [rcx],al
   140007729:	add    BYTE PTR [rax],al
   14000772b:	add    BYTE PTR [rbp+0x32],ah
   14000772e:	add    BYTE PTR [rax],al
   140007730:	stos   BYTE PTR es:[rdi],al
   140007731:	xor    al,BYTE PTR [rax]
   140007733:	add    BYTE PTR [rsi+0x43],dl
   140007736:	add    BYTE PTR [rax],al
   140007738:	add    BYTE PTR [rax],al
   14000773a:	add    BYTE PTR [rax],al
   14000773c:	add    DWORD PTR [rdx+rax*1],ecx
   14000773f:	add    BYTE PTR [rcx+rax*1],cl
   140007742:	adc    DWORD PTR [rax],eax
   140007744:	add    BYTE PTR [rax],al
   140007746:	add    BYTE PTR [rax],al
   140007748:	add    DWORD PTR [rax],eax
   14000774a:	add    BYTE PTR [rax],al
   14000774c:	add    DWORD PTR [rax],ebx
   14000774e:	add    DWORD PTR [rax],eax
   140007750:	sbb    dl,al
   140007752:	add    BYTE PTR [rax],al
   140007754:	add    DWORD PTR [rax],ebx
   140007756:	add    DWORD PTR [rax],eax
   140007758:	sbb    dl,al
   14000775a:	add    BYTE PTR [rax],al
   14000775c:	add    DWORD PTR [rax],ebx
   14000775e:	add    DWORD PTR [rax],eax
   140007760:	sbb    dl,al
   140007762:	add    BYTE PTR [rax],al
   140007764:	add    DWORD PTR [rcx+rax*1],eax
   140007767:	add    BYTE PTR [rdx+rax*4],al
   14000776a:	add    BYTE PTR [rax],al
   14000776c:	add    DWORD PTR [rax+rcx*1],edx
   14000776f:	add    BYTE PTR [rsp+riz*2],dl
   140007772:	or     BYTE PTR [rax],al
   140007774:	adc    al,0x54
   140007776:	(bad)  
   140007777:	add    BYTE PTR [rsp+rsi*1],dl
   14000777a:	(bad)  
   14000777b:	add    BYTE PTR [rdx+rsi*1],dl
   14000777e:	adc    BYTE PTR [rax+0x19],dh
   140007781:	and    BYTE PTR [rip+0x14621800],al        # 0x154628f87
   140007787:	loopne 0x14000779b
   140007789:	jo     0x14000779c
   14000778b:	(bad)  
   14000778c:	adc    BYTE PTR [rax],dh
   14000778e:	add    BYTE PTR [rax],al
   140007790:	mov    eax,0x48000034
   140007795:	push   rsi
   140007796:	add    BYTE PTR [rax],al
   140007798:	(bad)  
   140007799:	(bad)  
   14000779a:	(bad)  
   14000779b:	inc    DWORD PTR [rax]
   14000779d:	add    BYTE PTR [rax],al
   14000779f:	add    bh,bh
   1400077a1:	(bad)  
   1400077a2:	(bad)  
   1400077a3:	inc    DWORD PTR [rax]
   1400077a5:	add    BYTE PTR [rax],al
   1400077a7:	add    BYTE PTR [rcx],al
   1400077a9:	add    BYTE PTR [rax],al
   1400077ab:	add    BYTE PTR [rax],al
   1400077ad:	add    BYTE PTR [rax],al
   1400077af:	add    BYTE PTR [rcx],al
	...
   1400077bd:	add    BYTE PTR [rax],al
   1400077bf:	add    BYTE PTR [rbx],al
   1400077c1:	add    BYTE PTR [rax],al
   1400077c3:	add    BYTE PTR [rcx],al
   1400077c5:	add    BYTE PTR [rax],al
   1400077c7:	add    al,ah
   1400077c9:	ja     0x1400077cb
   1400077cb:	add    BYTE PTR [rdx],al
   1400077cd:	add    BYTE PTR [rax],al
   1400077cf:	add    BYTE PTR [rdx],al
   1400077d1:	add    BYTE PTR [rax],al
   1400077d3:	add    BYTE PTR [rbx],al
   1400077d5:	add    BYTE PTR [rax],al
   1400077d7:	add    BYTE PTR [rcx],al
   1400077d9:	add    BYTE PTR [rax],al
   1400077db:	add    ah,dh
   1400077dd:	ja     0x1400077df
   1400077df:	add    BYTE PTR [rax+0x0],al
	...
   1400077ea:	add    BYTE PTR [rax],al
   1400077ec:	ja     0x140007831
   1400077ee:	add    BYTE PTR [rax],al
   1400077f0:	cmp    BYTE PTR [rax],al
   1400077f2:	add    BYTE PTR [rax],al
   1400077f4:	add    BYTE PTR [rax],al
	...
   1400077ff:	add    BYTE PTR [rbx+0x38000043],bh
	...
   14000780d:	add    BYTE PTR [rax],al
   14000780f:	add    BYTE PTR [rax],cl
   140007811:	cmp    DWORD PTR [rax],eax
   140007813:	add    bh,bh
   140007815:	(bad)  
   140007816:	(bad)  
   140007817:	push   QWORD PTR [rdi+0x39]
   14000781a:	add    BYTE PTR [rax],al
   14000781c:	add    BYTE PTR [rax],al
   14000781e:	add    BYTE PTR [rax],al
   140007820:	pushf  
   140007821:	cmp    DWORD PTR [rax],eax
   140007823:	add    bh,bh
   140007825:	(bad)  
   140007826:	(bad)  
   140007827:	push   QWORD PTR [rdi+0x43]
   14000782a:	add    BYTE PTR [rax],al
   14000782c:	add    BYTE PTR [rax],al
   14000782e:	add    BYTE PTR [rax],al
   140007830:	test   BYTE PTR [rbx+0x0],al
   140007833:	add    BYTE PTR [rcx],al
   140007835:	add    BYTE PTR [rax],al
   140007837:	add    BYTE PTR [rbx+rax*2+0x20000],cl
   14000783e:	add    BYTE PTR [rax],al
   140007840:	lods   eax,DWORD PTR ds:[rsi]
   140007841:	rex.XB add BYTE PTR [r8],al
   140007844:	add    BYTE PTR [rax],al
   140007846:	add    BYTE PTR [rax],al
   140007848:	enter  0x43,0x0
   14000784c:	add    eax,DWORD PTR [rax]
   14000784e:	add    BYTE PTR [rax],al
   140007850:	sbb    DWORD PTR [rdx],ecx
   140007852:	add    al,BYTE PTR [rax]
   140007854:	or     dh,BYTE PTR [rdx]
   140007856:	(bad)  
   140007857:	push   rax
   140007858:	mov    eax,0x48000034
   14000785d:	push   rsi
   14000785e:	add    BYTE PTR [rax],al
   140007860:	add    DWORD PTR [rdi],ecx
   140007862:	(bad)  
   140007863:	add    BYTE PTR [rdi],cl
   140007865:	fs (bad) 
   140007867:	add    BYTE PTR [rdi],cl
   140007869:	xor    al,0x6
   14000786b:	add    BYTE PTR [rdi],cl
   14000786d:	xor    cl,BYTE PTR [rbx]
   14000786f:	jo     0x140007872
   140007871:	or     al,BYTE PTR [rdx]
   140007873:	add    BYTE PTR [rdx],cl
   140007875:	xor    al,BYTE PTR [rsi]
   140007877:	xor    BYTE PTR [rcx],al
   140007879:	(bad)  
   14000787a:	add    al,BYTE PTR [rax]
   14000787c:	(bad)  
   14000787d:	push   rdx
   14000787e:	add    dh,BYTE PTR [rax]
   140007880:	add    DWORD PTR [rdx],ecx
   140007882:	add    al,0x0
   140007884:	or     dh,BYTE PTR [rax+rcx*1]
   140007887:	add    BYTE PTR [rdx],cl
   140007889:	push   rdx
   14000788a:	(bad)  
   14000788b:	jo     0x14000788d
   14000788d:	add    BYTE PTR [rax],al
   14000788f:	add    BYTE PTR [rcx],al
   140007891:	add    al,0x1
   140007893:	add    BYTE PTR [rdx+rdx*1],al
   140007896:	add    BYTE PTR [rax],al
   140007898:	add    BYTE PTR [rax],al
   14000789a:	add    BYTE PTR [rax],al
   14000789c:	xor    BYTE PTR [rax],bh
   14000789e:	add    BYTE PTR [rax],al
   1400078a0:	add    BYTE PTR [rax],al
   1400078a2:	add    BYTE PTR [rax],al
   1400078a4:	mov    eax,0x78
	...
   1400078b5:	add    BYTE PTR [rax],al
   1400078b7:	add    BYTE PTR [rdx],al
   1400078b9:	add    BYTE PTR [rax],al
   1400078bb:	add    al,dl
   1400078bd:	js     0x1400078bf
   1400078bf:	add    al,bh
   1400078c1:	js     0x1400078c3
	...
   1400078cf:	add    BYTE PTR [rax],dl
   1400078d1:	add    BYTE PTR [rax],al
   1400078d3:	add    BYTE PTR [rax+0x90],dl
   1400078d9:	add    BYTE PTR [rax],al
   1400078db:	add    bh,bh
   1400078dd:	(bad)  
   1400078de:	(bad)  
   1400078df:	inc    DWORD PTR [rax]
   1400078e1:	add    BYTE PTR [rax],al
   1400078e3:	add    BYTE PTR [rax],bl
   1400078e5:	add    BYTE PTR [rax],al
   1400078e7:	add    BYTE PTR [rax+0x37],ch
	...
   1400078fa:	add    BYTE PTR [rax],al
   1400078fc:	mov    eax,0x90
   140007901:	add    BYTE PTR [rax],al
   140007903:	add    bh,bh
   140007905:	(bad)  
   140007906:	(bad)  
   140007907:	inc    DWORD PTR [rax]
   140007909:	add    BYTE PTR [rax],al
   14000790b:	add    BYTE PTR [rax],bl
   14000790d:	add    BYTE PTR [rax],al
   14000790f:	add    al,ah
   140007911:	add    BYTE PTR [rax],al
	...
   140007924:	fcom   DWORD PTR [rax+0x0]
   14000792a:	add    BYTE PTR [rax],al
   14000792c:	(bad)  
   14000792d:	(bad)  
   14000792e:	(bad)  
   14000792f:	inc    DWORD PTR [rax]
   140007931:	add    BYTE PTR [rax],al
   140007933:	add    BYTE PTR [rax],bl
   140007935:	add    BYTE PTR [rax],al
   140007937:	add    BYTE PTR [rax],cl
   140007939:	cmp    BYTE PTR [rax],al
	...
   14000794b:	add    BYTE PTR [rax+0x38],cl
   14000794e:	add    BYTE PTR [rax],al
   140007950:	add    BYTE PTR [rax],al
   140007952:	add    BYTE PTR [rax],al
   140007954:	push   0x79
	...
   140007965:	add    BYTE PTR [rax],al
   140007967:	add    BYTE PTR [rbx],al
   140007969:	add    BYTE PTR [rax],al
   14000796b:	add    BYTE PTR [rax+0x20000079],cl
   140007971:	jns    0x140007973
   140007973:	add    al,bh
   140007975:	js     0x140007977
	...
   14000798b:	add    BYTE PTR [rax],al
   14000798d:	xchg   ecx,eax
   14000798e:	add    BYTE PTR [rax],al
   140007990:	add    BYTE PTR [rax],al
   140007992:	add    BYTE PTR [rax],al
   140007994:	(bad)  
   140007995:	(bad)  
   140007996:	(bad)  
   140007997:	inc    DWORD PTR [rax]
   140007999:	add    BYTE PTR [rax],al
   14000799b:	add    BYTE PTR [rax],bl
   14000799d:	add    BYTE PTR [rax],al
   14000799f:	add    BYTE PTR [rax],cl
   1400079a1:	cmp    BYTE PTR [rax],al
	...
   1400079b3:	add    BYTE PTR [rax+0x38],cl
   1400079b6:	add    BYTE PTR [rax],al
   1400079b8:	add    BYTE PTR [rax],al
   1400079ba:	add    BYTE PTR [rax],al
   1400079bc:	sar    BYTE PTR [rcx+0x0],1
	...
   1400079cf:	add    BYTE PTR [rbx],al
   1400079d1:	add    BYTE PTR [rax],al
   1400079d3:	add    al,dh
   1400079d5:	jns    0x1400079d7
   1400079d7:	add    BYTE PTR [rax],ah
   1400079d9:	jns    0x1400079db
   1400079db:	add    al,bh
   1400079dd:	js     0x1400079df
	...
   1400079f3:	add    BYTE PTR [rax],ch
   1400079f5:	xchg   ecx,eax
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	add    BYTE PTR [rax],al
   1400079fa:	add    BYTE PTR [rax],al
   1400079fc:	(bad)  
   1400079fd:	(bad)  
   1400079fe:	(bad)  
   1400079ff:	inc    DWORD PTR [rax]
   140007a01:	add    BYTE PTR [rax],al
   140007a03:	add    BYTE PTR [rax],bl
   140007a05:	add    BYTE PTR [rax],al
   140007a07:	add    BYTE PTR [rax],cl
   140007a09:	cmp    BYTE PTR [rax],al
	...
   140007a17:	add    BYTE PTR [rcx],al
   140007a19:	add    BYTE PTR [rax],al
   140007a1b:	add    al,al
   140007a1d:	push   rbp
   140007a1e:	add    BYTE PTR [rax],al
   140007a20:	cmp    BYTE PTR [rdi-0x4ff00000],dl
   140007a26:	add    BYTE PTR [rax],al
   140007a28:	test   al,0x7a
   140007a2a:	add    BYTE PTR [rax],al
   140007a2c:	sbb    BYTE PTR [rbx+0x0],bh
	...
   140007a37:	add    BYTE PTR [rcx],al
   140007a39:	add    BYTE PTR [rax],al
   140007a3b:	add    al,dh
   140007a3d:	push   rbp
   140007a3e:	add    BYTE PTR [rax],al
   140007a40:	rex xchg edi,eax
   140007a42:	add    BYTE PTR [rax],al
   140007a44:	and    BYTE PTR [rax+0x7ab80000],dh
   140007a4a:	add    BYTE PTR [rax],al
   140007a4c:	sub    BYTE PTR [rbx+0x0],bh
	...
   140007a57:	add    BYTE PTR [rcx],al
   140007a59:	add    BYTE PTR [rax],al
   140007a5b:	add    BYTE PTR [rax],ah
   140007a5d:	push   rsi
   140007a5e:	add    BYTE PTR [rax],al
   140007a60:	xchg   rdi,rax
   140007a62:	add    BYTE PTR [rax],al
   140007a64:	add    BYTE PTR [rax+0x7a980000],dh
   140007a6a:	add    BYTE PTR [rax],al
   140007a6c:	cmp    BYTE PTR [rbx+0x0],bh
	...
   140007a97:	add    dh,dh
   140007a99:	jp     0x140007a9b
	...
   140007aa7:	add    al,cl
   140007aa9:	jp     0x140007aab
	...
   140007ab7:	add    dh,bl
   140007ab9:	jp     0x140007abb
	...
   140007ac7:	add    BYTE PTR [rax],al
   140007ac9:	add    BYTE PTR [rdi+0x65],al
   140007acc:	je     0x140007b11
   140007ace:	push   0x65626d61
   140007ad3:	jb     0x140007b28
   140007ad5:	imul   esp,DWORD PTR [rsi+rax*2+0x72],0x64496d6f
   140007add:	add    BYTE PTR [rax],al
   140007adf:	add    BYTE PTR [rbx+0x48],dl
   140007ae2:	rex.RXB
   140007ae3:	gs je  0x140007b31
   140007ae6:	outs   dx,BYTE PTR ds:[rsi]
   140007ae7:	outs   dx,DWORD PTR ds:[rsi]
   140007ae8:	ja     0x140007b58
   140007aea:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140007aec:	ins    BYTE PTR es:[rdi],dx
   140007aed:	fs gs jb 0x140007b41
   140007af1:	(bad)  
   140007af2:	je     0x140007b5c
   140007af4:	add    BYTE PTR [rax],al
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	rex.R
   140007af9:	rex.WRB push r13
   140007afb:	rex.WB pop r15
   140007afd:	imul   r14d,DWORD PTR [rbx+0x70],0x4379616c
   140007b05:	outs   dx,DWORD PTR ds:[rsi]
   140007b06:	outs   dx,BYTE PTR ds:[rsi]
   140007b07:	imul   sp,WORD PTR [rdi+0x75],0x6172
   140007b0d:	je     0x140007b78
   140007b0f:	outs   dx,DWORD PTR ds:[rsi]
   140007b10:	outs   dx,BYTE PTR ds:[rsi]
   140007b11:	push   rdx
   140007b12:	gs jae 0x140007b8a
   140007b15:	ins    BYTE PTR es:[rdi],dx
   140007b16:	je     0x140007b18
	...
   140007b48:	rex add BYTE PTR [rax],0x0
	...
   140007b54:	ds (bad) 
   140007b56:	add    BYTE PTR [rax],al
   140007b58:	fcom   DWORD PTR [rdx+0x0]
   140007b5b:	add    BYTE PTR [rax+0x7e],bh
   140007b61:	add    BYTE PTR [rax],al
   140007b63:	add    BYTE PTR [rax],al
   140007b65:	add    BYTE PTR [rax],al
   140007b67:	add    ah,al
   140007b69:	test   BYTE PTR [rax],al
   140007b6b:	add    BYTE PTR [rax+0x51],dl
   140007b6e:	add    BYTE PTR [rax],al
   140007b70:	mov    eax,0x7f
   140007b75:	add    BYTE PTR [rax],al
   140007b77:	add    BYTE PTR [rax],al
   140007b79:	add    BYTE PTR [rax],al
   140007b7b:	add    dh,ch
   140007b7d:	test   BYTE PTR [rax],al
   140007b7f:	add    BYTE PTR [rax+0x52],dl
   140007b82:	add    BYTE PTR [rax],al
   140007b84:	push   0x7f
   140007b89:	add    BYTE PTR [rax],al
   140007b8b:	add    BYTE PTR [rax],al
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    BYTE PTR [rax],dl
   140007b91:	test   DWORD PTR [rax],eax
   140007b93:	add    BYTE PTR [rax],al
   140007b95:	push   rdx
   140007b96:	add    BYTE PTR [rax],al
   140007b98:	call   0x140007c1b
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    BYTE PTR [rax],al
   140007ba1:	add    BYTE PTR [rax],al
   140007ba3:	add    BYTE PTR [rax*4+0x51800000],dh
   140007baa:	add    BYTE PTR [rax],al
   140007bac:	lock jg 0x140007baf
	...
   140007bb7:	add    BYTE PTR [rsi-0x7b],bl
   140007bba:	add    BYTE PTR [rax],al
   140007bbc:	mov    BYTE PTR [rdx+0x0],dl
   140007bbf:	add    BYTE PTR [rax+0x7e],cl
	...
   140007bca:	add    BYTE PTR [rax],al
   140007bcc:	xchg   BYTE PTR [rbp+0x50e00000],al
   140007bd2:	add    BYTE PTR [rax],al
   140007bd4:	nop
   140007bd5:	jle    0x140007bd7
	...
   140007bdf:	add    BYTE PTR [rax+0x28000085],dh
   140007be5:	push   rcx
   140007be6:	add    BYTE PTR [rax],al
   140007be8:	movabs al,ds:0x7e
   140007bf1:	add    BYTE PTR [rax],al
   140007bf3:	add    dl,dl
   140007bf5:	test   DWORD PTR [rax],eax
   140007bf7:	add    BYTE PTR [rax],bh
   140007bf9:	push   rcx
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	sbb    BYTE PTR [rdi+0x0],bh
	...
   140007c07:	add    dl,dh
   140007c09:	test   DWORD PTR [rax],eax
   140007c0b:	add    BYTE PTR [rax+0x58000051],dh
   140007c11:	jg     0x140007c13
	...
   140007c1b:	add    BYTE PTR [rsi+rax*4],bl
   140007c1e:	add    BYTE PTR [rax],al
   140007c20:	lock push rcx
   140007c22:	add    BYTE PTR [rax],al
   140007c24:	fdivr  DWORD PTR [rdi+0x0]
	...
   140007c2f:	add    BYTE PTR [rax-0x7a],al
   140007c32:	add    BYTE PTR [rax],al
   140007c34:	jo     0x140007c88
   140007c36:	add    BYTE PTR [rax],al
   140007c38:	mov    BYTE PTR [rdi+0x0],bh
	...
   140007c43:	add    BYTE PTR [rsi+rax*4+0x0],ah
   140007c47:	add    BYTE PTR [rax],ah
   140007c49:	push   rdx
   140007c4a:	add    BYTE PTR [rax],al
   140007c4c:	test   al,0x7d
	...
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	mov    al,BYTE PTR [rsi+0x50400000]
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	push   0x7d
   140007c65:	add    BYTE PTR [rax],al
   140007c67:	add    BYTE PTR [rax],al
   140007c69:	add    BYTE PTR [rax],al
   140007c6b:	add    BYTE PTR [rax+0x86],ch
   140007c71:	push   rax
   140007c72:	add    BYTE PTR [rax],al
   140007c74:	and    BYTE PTR [rax+0x0],al
   140007c7a:	add    BYTE PTR [rax],al
   140007c7c:	add    BYTE PTR [rax],al
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	cli    
   140007c81:	xchg   BYTE PTR [rax],al
   140007c83:	add    BYTE PTR [rax-0x27ffffae],bh
   140007c89:	jge    0x140007c8b
	...
   140007c93:	add    BYTE PTR [rcx+rcx*4+0x0],al
   140007c97:	add    BYTE PTR [rax+0x50],dh
   140007c9a:	add    BYTE PTR [rax],al
   140007c9c:	test   al,0x7f
	...
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	push   rdx
   140007ca9:	mov    DWORD PTR [rax],eax
   140007cab:	add    BYTE PTR [rax+0x52],al
   140007cae:	add    BYTE PTR [rax],al
   140007cb0:	adc    BYTE PTR [rsi+0x0],bh
	...
   140007cbb:	add    BYTE PTR [rcx+rcx*4+0x0],dh
   140007cbf:	add    BYTE PTR [rax+0x8000050],ch
   140007cc5:	jg     0x140007cc7
	...
   140007ccf:	add    BYTE PTR [rcx+rcx*4+0x51a00000],dl
   140007cd6:	add    BYTE PTR [rax],al
   140007cd8:	push   0x7e
   140007cdd:	add    BYTE PTR [rax],al
   140007cdf:	add    BYTE PTR [rax],al
   140007ce1:	add    BYTE PTR [rax],al
   140007ce3:	add    dl,al
   140007ce5:	mov    DWORD PTR [rax],eax
   140007ce7:	add    BYTE PTR [rax],al
   140007ce9:	push   rcx
   140007cea:	add    BYTE PTR [rax],al
   140007cec:	clc    
   140007ced:	jle    0x140007cef
	...
   140007cf7:	add    dl,ah
   140007cf9:	mov    DWORD PTR [rax],eax
   140007cfb:	add    BYTE PTR [rax+0x30000051],dl
   140007d01:	jle    0x140007d03
	...
   140007d0b:	add    BYTE PTR [rdx],cl
   140007d0d:	mov    al,BYTE PTR [rax]
   140007d0f:	add    al,cl
   140007d11:	push   rax
   140007d12:	add    BYTE PTR [rax],al
   140007d14:	(bad)  
   140007d15:	add    DWORD PTR [rax],0x0
   140007d1b:	add    BYTE PTR [rax],al
   140007d1d:	add    BYTE PTR [rax],al
   140007d1f:	add    BYTE PTR [rax],dh
   140007d21:	mov    al,BYTE PTR [rax]
   140007d23:	add    al,bh
   140007d25:	push   rbx
   140007d26:	add    BYTE PTR [rax],al
   140007d28:	adc    BYTE PTR [rax+0x0],al
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	add    BYTE PTR [rax],al
   140007d32:	add    BYTE PTR [rax],al
   140007d34:	mov    edx,0xa800008a
   140007d39:	push   rdx
   140007d3a:	add    BYTE PTR [rax],al
   140007d3c:	add    BYTE PTR [rsi+0x0],bh
	...
   140007d47:	add    dl,ch
   140007d49:	mov    al,BYTE PTR [rax]
   140007d4b:	add    BYTE PTR [rax+0x50],bl
	...
   140007d65:	add    BYTE PTR [rax],al
   140007d67:	add    BYTE PTR [rax-0x76],bl
   140007d6a:	add    BYTE PTR [rax],al
   140007d6c:	add    BYTE PTR [rax],al
   140007d6e:	add    BYTE PTR [rax],al
   140007d70:	xchg   esi,eax
   140007d71:	mov    al,BYTE PTR [rax]
   140007d73:	add    BYTE PTR [rax],al
   140007d75:	add    BYTE PTR [rax],al
   140007d77:	add    BYTE PTR [rdx+0x8a],cl
   140007d7d:	add    BYTE PTR [rax],al
   140007d7f:	add    BYTE PTR [rdx+rcx*4+0x0],dh
   140007d83:	add    BYTE PTR [rax],al
   140007d85:	add    BYTE PTR [rax],al
   140007d87:	add    BYTE PTR [rsi-0x76],ah
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	add    BYTE PTR [rax],al
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	(bad)  
   140007d91:	xchg   BYTE PTR [rax],al
   140007d93:	add    BYTE PTR [rax],al
   140007d95:	add    BYTE PTR [rax],al
   140007d97:	add    BYTE PTR [rsi],bh
   140007d99:	mov    al,BYTE PTR [rax]
	...
   140007da7:	add    BYTE PTR [rdx],cl
   140007da9:	add    BYTE PTR [rax],al
   140007dab:	add    BYTE PTR [rax],al
   140007dad:	add    BYTE PTR [rax],al
   140007daf:	add    BYTE PTR [rcx],0x0
   140007db2:	add    BYTE PTR [rax],al
   140007db4:	add    BYTE PTR [rax],al
   140007db6:	add    BYTE PTR [rax+0x9],al
   140007dbc:	add    BYTE PTR [rax],al
   140007dbe:	add    BYTE PTR [rax+0xb],al
   140007dc4:	add    BYTE PTR [rax],al
   140007dc6:	add    BYTE PTR [rax+0x3],al
   140007dcc:	add    BYTE PTR [rax],al
   140007dce:	add    BYTE PTR [rax+0x0],al
   140007dd4:	add    BYTE PTR [rax],al
   140007dd6:	add    BYTE PTR [rax],al
   140007dd8:	add    al,0x0
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	add    BYTE PTR [rax],al
   140007dde:	add    BYTE PTR [rax+0x7],al
   140007de4:	add    BYTE PTR [rax],al
   140007de6:	add    BYTE PTR [rax+0x6],al
   140007dec:	add    BYTE PTR [rax],al
   140007dee:	add    BYTE PTR [rax+0x2],al
   140007df4:	add    BYTE PTR [rax],al
   140007df6:	add    BYTE PTR [rax+0x0],al
   140007dfc:	add    BYTE PTR [rax],al
   140007dfe:	add    BYTE PTR [rax],al
   140007e00:	(bad)  
   140007e01:	mov    al,BYTE PTR [rax]
	...
   140007e0f:	add    BYTE PTR [rdx-0x78],dl
   140007e12:	add    BYTE PTR [rax],al
   140007e14:	add    BYTE PTR [rax],al
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	ror    BYTE PTR [rax+0x0],1
   140007e1e:	add    BYTE PTR [rax],al
   140007e20:	add    cl,BYTE PTR [rcx+0x0]
	...
   140007e2e:	add    BYTE PTR [rax],al
   140007e30:	adc    al,0x89
   140007e32:	add    BYTE PTR [rax],al
   140007e34:	add    BYTE PTR [rax],al
   140007e36:	add    BYTE PTR [rax],al
   140007e38:	sub    al,0x89
	...
   140007e46:	add    BYTE PTR [rax],al
   140007e48:	pushf  
   140007e49:	add    DWORD PTR [rax],0x0
   140007e4c:	add    BYTE PTR [rax],al
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	add    BYTE PTR [rax+rax*1+0x0],0x0
   140007e58:	or     al,BYTE PTR [rbx+0x0]
	...
   140007e66:	add    BYTE PTR [rax],al
   140007e68:	movabs al,ds:0x7e00000000000088
   140007e71:	mov    BYTE PTR [rax],al
   140007e73:	add    BYTE PTR [rax],al
   140007e75:	add    BYTE PTR [rax],al
   140007e77:	add    dl,al
   140007e79:	mov    BYTE PTR [rax],al
   140007e7b:	add    BYTE PTR [rax],al
   140007e7d:	add    BYTE PTR [rax],al
   140007e7f:	add    BYTE PTR [rdx+0x88],dl
	...
   140007e8d:	add    BYTE PTR [rax],al
   140007e8f:	add    BYTE PTR [rdx-0x7d],bl
	...
   140007e9e:	add    BYTE PTR [rax],al
   140007ea0:	jbe    0x140007e25
   140007ea2:	add    BYTE PTR [rax],al
   140007ea4:	add    BYTE PTR [rax],al
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	mov    BYTE PTR cs:[rax],al
	...
   140007eb7:	add    BYTE PTR [rdx],bl
   140007eb9:	add    DWORD PTR [rax],0x0
   140007ebc:	add    BYTE PTR [rax],al
   140007ebe:	add    BYTE PTR [rax],al
   140007ec0:	mov    edx,0x83
   140007ec5:	add    BYTE PTR [rax],al
   140007ec7:	add    BYTE PTR [rdx+rax*4+0x0],ch
   140007ece:	add    BYTE PTR [rax],al
   140007ed0:	sahf   
   140007ed1:	(bad)  
   140007ed2:	add    BYTE PTR [rax],al
   140007ed4:	add    BYTE PTR [rax],al
   140007ed6:	add    BYTE PTR [rax],al
   140007ed8:	loop   0x140007e62
	...
   140007ee6:	add    BYTE PTR [rax],al
   140007ee8:	call   0x140007f6f
	...
   140007ef5:	add    BYTE PTR [rax],al
   140007ef7:	add    al,dh
   140007ef9:	mov    BYTE PTR [rax],al
	...
   140007f07:	add    BYTE PTR [rdx-0x78],ah
	...
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	mov    al,0x84
   140007f1a:	add    BYTE PTR [rax],al
   140007f1c:	add    BYTE PTR [rax],al
   140007f1e:	add    BYTE PTR [rax],al
   140007f20:	inc    BYTE PTR [rbx+0x0]
   140007f26:	add    BYTE PTR [rax],al
   140007f28:	sbb    al,0x88
   140007f2a:	add    BYTE PTR [rax],al
   140007f2c:	add    BYTE PTR [rax],al
   140007f2e:	add    BYTE PTR [rax],al
   140007f30:	mov    al,BYTE PTR [rbx+0x0]
   140007f36:	add    BYTE PTR [rax],al
   140007f38:	pushf  
   140007f39:	test   BYTE PTR [rax],al
   140007f3b:	add    BYTE PTR [rax],al
   140007f3d:	add    BYTE PTR [rax],al
   140007f3f:	add    BYTE PTR [rax+rcx*4+0x0],ch
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	call   0x140007fd0
	...
   140007f55:	add    BYTE PTR [rax],al
   140007f57:	add    dh,cl
   140007f59:	add    DWORD PTR [rax],0x0
	...
   140007f68:	push   0x83
   140007f6d:	add    BYTE PTR [rax],al
   140007f6f:	add    BYTE PTR [rbx+rax*4],ch
   140007f72:	add    BYTE PTR [rax],al
   140007f74:	add    BYTE PTR [rax],al
   140007f76:	add    BYTE PTR [rax],al
   140007f78:	(bad)  
   140007f79:	(bad)  
	...
   140007f86:	add    BYTE PTR [rax],al
   140007f88:	test   BYTE PTR ds:[rax],al
   140007f8b:	add    BYTE PTR [rax],al
   140007f8d:	add    BYTE PTR [rax],al
   140007f8f:	add    BYTE PTR [rdx-0x7c],dl
   140007f92:	add    BYTE PTR [rax],al
   140007f94:	add    BYTE PTR [rax],al
   140007f96:	add    BYTE PTR [rax],al
   140007f98:	ins    BYTE PTR es:[rdi],dx
   140007f99:	test   BYTE PTR [rax],al
	...
   140007fa7:	add    BYTE PTR [rax+rcx*4],bh
	...
   140007fb6:	add    BYTE PTR [rax],al
   140007fb8:	(bad)  
   140007fb9:	add    DWORD PTR [rax],0x0
   140007fbc:	add    BYTE PTR [rax],al
   140007fbe:	add    BYTE PTR [rax],al
   140007fc0:	mov    esi,0x82
   140007fc5:	add    BYTE PTR [rax],al
   140007fc7:	add    BYTE PTR [rbx+rax*4+0x0],cl
	...
   140007fd7:	add    BYTE PTR [rsp+rax*4],dl
   140007fda:	add    BYTE PTR [rax],al
   140007fdc:	add    BYTE PTR [rax],al
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	test   BYTE PTR cs:[rax],al
	...
   140007fef:	add    BYTE PTR [rsi],cl
   140007ff1:	mov    BYTE PTR [rax],al
   140007ff3:	add    BYTE PTR [rax],al
   140007ff5:	add    BYTE PTR [rax],al
   140007ff7:	add    al,bh
   140007ff9:	(bad)  
   140007ffa:	add    BYTE PTR [rax],al
   140007ffc:	add    BYTE PTR [rax],al
   140007ffe:	add    BYTE PTR [rax],al
   140008000:	cmp    al,0x83
	...
   14000800e:	add    BYTE PTR [rax],al
   140008010:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008011:	mov    al,BYTE PTR [rax]
	...
   14000801f:	add    dl,ch
   140008021:	xchg   BYTE PTR [rax],al
   140008023:	add    BYTE PTR [rax],al
   140008025:	add    BYTE PTR [rax],al
   140008027:	add    dl,dl
   140008029:	xchg   BYTE PTR [rax],al
   14000802b:	add    BYTE PTR [rax],al
   14000802d:	add    BYTE PTR [rax],al
   14000802f:	add    BYTE PTR [rax+0x86],bh
	...
   14000803d:	add    BYTE PTR [rax],al
   14000803f:	add    dh,dh
   140008041:	xchg   DWORD PTR [rax],eax
   140008043:	add    BYTE PTR [rax],al
   140008045:	add    BYTE PTR [rax],al
   140008047:	add    ah,ch
   140008049:	xchg   DWORD PTR [rax],eax
   14000804b:	add    BYTE PTR [rax],al
   14000804d:	add    BYTE PTR [rax],al
   14000804f:	add    dh,dl
   140008051:	xchg   DWORD PTR [rax],eax
   140008053:	add    BYTE PTR [rax],al
   140008055:	add    BYTE PTR [rax],al
   140008057:	add    BYTE PTR [rax+0x87],bh
   14000805d:	add    BYTE PTR [rax],al
   14000805f:	add    BYTE PTR [rax+0x87],ah
   140008065:	add    BYTE PTR [rax],al
   140008067:	add    BYTE PTR [rdx+0x87],al
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    BYTE PTR [rdx-0x79],ah
   140008072:	add    BYTE PTR [rax],al
   140008074:	add    BYTE PTR [rax],al
   140008076:	add    BYTE PTR [rax],al
   140008078:	rex.X xchg DWORD PTR [rax],eax
   14000807b:	add    BYTE PTR [rax],al
   14000807d:	add    BYTE PTR [rax],al
   14000807f:	add    BYTE PTR [rax],bh
   140008081:	xchg   DWORD PTR [rax],eax
   140008083:	add    BYTE PTR [rax],al
   140008085:	add    BYTE PTR [rax],al
   140008087:	add    BYTE PTR [rdi+rax*4],ch
   14000808a:	add    BYTE PTR [rax],al
   14000808c:	add    BYTE PTR [rax],al
   14000808e:	add    BYTE PTR [rax],al
   140008090:	and    BYTE PTR [rdi+0x0],al
   140008096:	add    BYTE PTR [rax],al
   140008098:	(bad)  
   140008099:	xchg   DWORD PTR [rax],eax
   14000809b:	add    BYTE PTR [rax],al
   14000809d:	add    BYTE PTR [rax],al
   14000809f:	add    BYTE PTR [rax],cl
   1400080a1:	xchg   DWORD PTR [rax],eax
   1400080a3:	add    BYTE PTR [rax],al
   1400080a5:	add    BYTE PTR [rax],al
   1400080a7:	add    dh,ah
   1400080a9:	add    DWORD PTR [rax],0x0
   1400080af:	add    dl,bh
   1400080b1:	add    DWORD PTR [rax],0x0
   1400080b7:	add    BYTE PTR [rsi],al
   1400080b9:	(bad)  
   1400080ba:	add    BYTE PTR [rax],al
   1400080bc:	add    BYTE PTR [rax],al
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	jo     0x140008043
   1400080c2:	add    BYTE PTR [rax],al
   1400080c4:	add    BYTE PTR [rax],al
   1400080c6:	add    BYTE PTR [rax],al
   1400080c8:	(bad)  
   1400080c9:	(bad)  
   1400080ca:	add    BYTE PTR [rax],al
   1400080cc:	add    BYTE PTR [rax],al
   1400080ce:	add    BYTE PTR [rax],al
   1400080d0:	sub    BYTE PTR [rdx+0x0],al
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	xchg   esp,eax
   1400080d9:	(bad)  
   1400080da:	add    BYTE PTR [rax],al
   1400080dc:	add    BYTE PTR [rax],al
   1400080de:	add    BYTE PTR [rax],al
   1400080e0:	xchg   BYTE PTR [rdx+0x0],al
   1400080e6:	add    BYTE PTR [rax],al
   1400080e8:	jl     0x14000806c
   1400080ea:	add    BYTE PTR [rax],al
   1400080ec:	add    BYTE PTR [rax],al
   1400080ee:	add    BYTE PTR [rax],al
   1400080f0:	fadd   DWORD PTR [rcx+0x0]
   1400080f6:	add    BYTE PTR [rax],al
   1400080f8:	(bad)  
   1400080f9:	add    DWORD PTR [rax],0x0
   1400080ff:	add    BYTE PTR [rdx+rax*4+0x0],dh
   140008103:	add    BYTE PTR [rax],al
   140008105:	add    BYTE PTR [rax],al
   140008107:	add    BYTE PTR [rax-0x7e],ah
   14000810a:	add    BYTE PTR [rax],al
   14000810c:	add    BYTE PTR [rax],al
   14000810e:	add    BYTE PTR [rax],al
   140008110:	mov    BYTE PTR [rcx+0x0],0x0
   140008117:	add    BYTE PTR [rsi+0x81],bh
   14000811d:	add    BYTE PTR [rax],al
   14000811f:	add    BYTE PTR [rcx+rax*4+0x0],ch
   140008126:	add    BYTE PTR [rax],al
   140008128:	pushf  
   140008129:	add    DWORD PTR [rax],0x0
   14000812f:	add    BYTE PTR [rsi+0x81],cl
   140008135:	add    BYTE PTR [rax],al
   140008137:	add    BYTE PTR [rax+0x81],al
   14000813d:	add    BYTE PTR [rax],al
   14000813f:	add    BYTE PTR [rdx-0x7e],cl
   140008142:	add    BYTE PTR [rax],al
   140008144:	add    BYTE PTR [rax],al
   140008146:	add    BYTE PTR [rax],al
   140008148:	xor    al,BYTE PTR [rdx+0x0]
   14000814e:	add    BYTE PTR [rax],al
   140008150:	(bad)  
   140008151:	mov    eax,DWORD PTR [rax]
	...
   14000815f:	add    BYTE PTR [rbp+0x0],ch
   140008162:	add    BYTE PTR [rax],al
   140008164:	add    BYTE PTR [rax],al
   140008166:	add    BYTE PTR [rax+0x0],al
   14000816c:	add    BYTE PTR [rax],al
   14000816e:	add    BYTE PTR [rax],al
   140008170:	adc    al,0x0
   140008172:	(bad)  
   140008173:	(bad)  
   140008174:	xor    eax,DWORD PTR [rax+0x59]
   140008177:	pop    r8
   140008179:	push   rax
   14000817a:	rex.RB
   14000817b:	pop    r8
   14000817d:	rex pop rdx
   14000817f:	add    BYTE PTR [rbp+0x0],dl
   140008182:	pop    rdi
   140008183:	pop    rax
   140008184:	movsxd esi,DWORD PTR [rax+0x74]
   140008187:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140008190:	pop    rdi
   140008191:	(bad)  
   140008192:	ins    DWORD PTR es:[rdi],dx
   140008193:	jae    0x1400081fc
   140008195:	pop    rdi
   140008196:	gs js  0x140008202
   140008199:	je     0x14000819b
   14000819b:	add    BYTE PTR [rdi+0x0],bh
   14000819e:	pop    rdi
   14000819f:	pop    rdi
   1400081a0:	addr32 gs je 0x140008211
   1400081a4:	(bad)  
   1400081a5:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400081ac:	mov    es,WORD PTR [rax]
   1400081ae:	pop    rdi
   1400081af:	pop    rdi
   1400081b0:	jae    0x140008217
   1400081b2:	je     0x140008213
   1400081b4:	(bad)  
   1400081b5:	jo     0x140008227
   1400081b7:	pop    rdi
   1400081b8:	je     0x140008233
   1400081ba:	jo     0x140008221
   1400081bc:	add    BYTE PTR [rax],al
   1400081be:	xor    al,BYTE PTR [riz*2+0x746978]
   1400081c5:	add    BYTE PTR [rsi],cl
   1400081c7:	add    DWORD PTR [rdi+0x65],ebx
   1400081ca:	js     0x140008235
   1400081cc:	je     0x1400081ce
   1400081ce:	rol    DWORD PTR [rax],0x5f
   1400081d1:	movsxd esp,DWORD PTR [rbp+0x78]
   1400081d4:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   1400081dc:	jae    0x14000824b
   1400081de:	(bad)
   1400081e3:	add    BYTE PTR fs:[rax],al
   1400081e6:	nop
   1400081e7:	add    BYTE PTR [rdi+0x5f],bl
   1400081ea:	jae    0x140008251
   1400081ec:	je     0x140008263
   1400081ee:	jae    0x140008255
   1400081f0:	jb     0x14000825f
   1400081f2:	(bad)  
   1400081f3:	je     0x14000825d
   1400081f5:	gs jb  0x14000826a
   1400081f8:	add    BYTE PTR [rax],al
   1400081fa:	jge    0x1400081fd
   1400081fc:	pop    rdi
   1400081fd:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140008204:	ins    DWORD PTR es:[rdi],dx
   140008205:	add    BYTE PTR [rdi+0x0],dl
   140008208:	pop    rdi
   140008209:	pop    rdi
   14000820a:	rex.XB pop r15
   14000820c:	jae    0x14000827e
   14000820e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140008212:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008219:	ins    BYTE PTR es:[rdi],dx
   14000821a:	gs jb  0x14000821d
   14000821d:	add    BYTE PTR [rdx+0x63615f00],ah
   140008223:	ins    DWORD PTR es:[rdi],dx
   140008224:	fs ins BYTE PTR es:[rdi],dx
   140008226:	outs   dx,BYTE PTR ds:[rsi]
   140008227:	add    BYTE PTR [rdi],ah
   140008229:	add    DWORD PTR [rdi+0x66],ebx
   14000822c:	ins    DWORD PTR es:[rdi],dx
   14000822d:	outs   dx,DWORD PTR ds:[rsi]
   14000822e:	fs add BYTE PTR gs:[rax],al
   140008232:	rol    BYTE PTR [rax],cl
   140008234:	pop    rdi
   140008235:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140008238:	ins    DWORD PTR es:[rdi],dx
   140008239:	outs   dx,DWORD PTR ds:[rsi]
   14000823a:	fs add BYTE PTR gs:[rax],al
   14000823e:	ins    DWORD PTR es:[rdi],dx
   14000823f:	jae    0x1400082b7
   140008241:	movsxd esi,DWORD PTR [rdx+0x74]
   140008244:	cs fs ins BYTE PTR es:[rdi],dx
   140008247:	ins    BYTE PTR es:[rdi],dx
   140008248:	add    BYTE PTR [rax],al
   14000824a:	pop    rbx
   14000824b:	add    BYTE PTR [rdi+0x5f],bl
   14000824e:	rex.XB js 0x1400082c9
   140008251:	rex.RX jb 0x1400082b5
   140008254:	ins    DWORD PTR es:[rdi],dx
   140008255:	gs rex.W (bad) 
   140008258:	outs   dx,BYTE PTR ds:[rsi]
   140008259:	fs ins BYTE PTR es:[rdi],dx
   14000825b:	gs jb  0x140008291
   14000825e:	add    BYTE PTR [rax],al
   140008260:	(bad)  
   140008261:	add    BYTE PTR [rdi],bh
   140008263:	je     0x1400082ca
   140008265:	jb     0x1400082d4
   140008267:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000826e:	pop    rcx
   14000826f:	pop    r8
   140008271:	pop    rax
   140008272:	pop    rdx
   140008273:	add    dh,ah
   140008275:	add    DWORD PTR [rdi+0x6c],ebx
   140008278:	outs   dx,DWORD PTR ds:[rsi]
   140008279:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000827c:	add    ebx,DWORD PTR [r15+0x75]
   140008280:	outs   dx,BYTE PTR ds:[rsi]
   140008281:	ins    BYTE PTR es:[rdi],dx
   140008282:	outs   dx,DWORD PTR ds:[rsi]
   140008283:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008286:	jnp    0x140008288
   140008288:	pop    rdi
   140008289:	pop    rdi
   14000828a:	fs ins BYTE PTR es:[rdi],dx
   14000828c:	ins    BYTE PTR es:[rdi],dx
   14000828d:	outs   dx,DWORD PTR ds:[rsi]
   14000828e:	outs   dx,BYTE PTR ds:[rsi]
   14000828f:	gs js  0x1400082fb
   140008292:	je     0x140008294
   140008294:	nop
   140008295:	add    bl,BYTE PTR [rdi+0x6f]
   140008298:	outs   dx,BYTE PTR ds:[rsi]
   140008299:	gs js  0x140008305
   14000829c:	je     0x14000829e
   14000829e:	or     eax,DWORD PTR [rax]
   1400082a0:	rex.RX jb 0x140008308
   1400082a3:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   1400082ac:	(bad)  
   1400082ad:	add    BYTE PTR [rdi+rbp*2+0x61],cl
   1400082b1:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   1400082ba:	js     0x140008313
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    BYTE PTR ss:[rdi+0x61],dl
   1400082c2:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   1400082ca:	ins    BYTE PTR es:[edi],dx
   1400082cc:	gs rex.WRXB (bad) 
   1400082cf:	push   0x65
   1400082d1:	movsxd esi,DWORD PTR [rax+rax*1+0x23]
   1400082d5:	add    BYTE PTR [rdx+0x65],dl
   1400082d8:	addr32 push rcx
   1400082da:	jne    0x140008341
   1400082dc:	jb     0x140008357
   1400082de:	push   rsi
   1400082df:	(bad)  
   1400082e0:	ins    BYTE PTR es:[rdi],dx
   1400082e1:	jne    0x140008348
   1400082e3:	rex.RB js 0x14000833d
   1400082e6:	add    BYTE PTR [rax],al
   1400082e8:	sbb    BYTE PTR [rax],al
   1400082ea:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400082ec:	(bad)  
   1400082ed:	imul   r12,QWORD PTR fs:[rdx+0x72],0x57797261
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	add    eax,0x65764500
   1400082fd:	outs   dx,BYTE PTR ds:[rsi]
   1400082fe:	je     0x140008355
   140008300:	outs   dx,BYTE PTR ds:[rsi]
   140008301:	jb     0x140008368
   140008303:	imul   esi,DWORD PTR [ebx+0x74],0x5007265
   14000830b:	add    BYTE PTR [rdi+0x65],al
   14000830e:	je     0x14000835c
   140008310:	(bad)  
   140008311:	jae    0x140008387
   140008313:	rex.RB jb 0x140008388
   140008316:	outs   dx,DWORD PTR ds:[rsi]
   140008317:	jb     0x140008319
   140008319:	add    BYTE PTR [rax+rax*1],dl
   14000831c:	rex.RXB
   14000831d:	gs je  0x140008370
   140008320:	jb     0x140008391
   140008322:	movsxd eax,DWORD PTR [rcx+0x64]
   140008325:	fs jb  0x14000838d
   140008328:	jae    0x14000839d
   14000832a:	add    BYTE PTR [rax],al
   14000832c:	(bad)  
   14000832d:	add    BYTE PTR [rdx+0x65],dl
   140008330:	addr32 rex.WRXB jo 0x140008399
   140008334:	outs   dx,BYTE PTR ds:[rsi]
   140008335:	rex.WXB
   140008336:	gs jns 0x14000837e
   140008339:	js     0x140008392
   14000833b:	add    BYTE PTR [rbx],al
   14000833d:	add    BYTE PTR [rbp+0x76],al
   140008340:	outs   dx,BYTE PTR gs:[rsi]
   140008342:	je     0x140008396
   140008344:	imul   esi,DWORD PTR gs:[ebx+0x74],0x1f007265
   14000834d:	add    BYTE PTR [rdi+0x70],cl
   140008350:	outs   dx,BYTE PTR gs:[rsi]
   140008352:	rex.RB jbe 0x1400083ba
   140008355:	outs   dx,BYTE PTR ds:[rsi]
   140008356:	je     0x1400083af
   140008358:	add    BYTE PTR [rax],al
   14000835a:	add    BYTE PTR [rax],al
   14000835c:	rex.XB ins BYTE PTR es:[rdi],dx
   14000835e:	outs   dx,DWORD PTR ds:[rsi]
   14000835f:	jae    0x1400083c6
   140008361:	rex.W (bad) 
   140008363:	outs   dx,BYTE PTR ds:[rsi]
   140008364:	fs ins BYTE PTR es:[rdi],dx
   140008366:	add    BYTE PTR gs:[rax],al
   140008369:	add    BYTE PTR [rdx+0x65],dl
   14000836c:	rex.XB ins BYTE PTR es:[edi],dx
   14000836f:	outs   dx,DWORD PTR ds:[rsi]
   140008370:	jae    0x1400083d7
   140008372:	rex.WXB
   140008373:	gs jns 0x140008376
   140008376:	add    eax,DWORD PTR [rax]
   140008378:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000837a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000837d:	rex.RX jb 0x1400083e5
   140008380:	add    BYTE PTR gs:[rip+0x656c5300],ch        # 0x1a56cd687
   140008387:	gs jo  0x14000838a
   14000838a:	and    BYTE PTR [rax],al
   14000838c:	rex.RXB
   14000838d:	gs je  0x1400083e3
   140008390:	je     0x1400083f3
   140008392:	jb     0x140008408
   140008394:	jne    0x140008406
   140008396:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008398:	outs   dx,WORD PTR ds:[rsi]
   14000839a:	push   rdi
   14000839b:	add    BYTE PTR [rdi],cl
   14000839d:	add    BYTE PTR [rbx+0x65],dl
   1400083a0:	je     0x1400083f7
   1400083a2:	outs   dx,BYTE PTR ds:[rsi]
   1400083a3:	push   0x6c646e61
   1400083a8:	gs fs rex.RB js 0x140008410
   1400083ad:	gs jo  0x140008424
   1400083b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400083b7:	gs jb  0x1400083ba
   1400083ba:	adc    eax,DWORD PTR [rax]
   1400083bc:	rex.RXB
   1400083bd:	gs je  0x14000840d
   1400083c0:	outs   dx,DWORD PTR ds:[rsi]
   1400083c1:	fs jne 0x140008430
   1400083c4:	gs rex.W (bad) 
   1400083c7:	outs   dx,BYTE PTR ds:[rsi]
   1400083c8:	fs ins BYTE PTR es:[rdi],dx
   1400083ca:	gs push rdi
   1400083cc:	add    BYTE PTR [rax],al
   1400083ce:	add    BYTE PTR [rax],al
   1400083d0:	push   rcx
   1400083d1:	jne    0x140008438
   1400083d3:	jb     0x14000844e
   1400083d5:	push   rax
   1400083d6:	gs jb  0x14000843f
   1400083d9:	outs   dx,DWORD PTR ds:[rsi]
   1400083da:	jb     0x140008449
   1400083dc:	(bad)  
   1400083dd:	outs   dx,BYTE PTR ds:[rsi]
   1400083de:	movsxd esp,DWORD PTR [rbp+0x43]
   1400083e1:	outs   dx,DWORD PTR ds:[rsi]
   1400083e2:	jne    0x140008452
   1400083e4:	je     0x14000844b
   1400083e6:	jb     0x1400083e8
   1400083e8:	or     eax,0x74654700
   1400083ed:	rex.XB jne 0x140008462
   1400083f0:	jb     0x140008457
   1400083f2:	outs   dx,BYTE PTR ds:[rsi]
   1400083f3:	je     0x140008445
   1400083f5:	jb     0x140008466
   1400083f7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400083fa:	jae    0x140008445
   1400083fc:	add    BYTE PTR fs:[rcx],dl
   1400083ff:	add    BYTE PTR [rdi+0x65],al
   140008402:	je     0x140008447
   140008404:	jne    0x140008478
   140008406:	jb     0x14000846d
   140008408:	outs   dx,BYTE PTR ds:[rsi]
   140008409:	je     0x14000845f
   14000840b:	push   0x64616572
   140008410:	rex.WB
   140008411:	add    BYTE PTR fs:[rax],al
   140008414:	adc    al,0x0
   140008416:	rex.RXB
   140008417:	gs je  0x14000846d
   14000841a:	jns    0x14000848f
   14000841c:	je     0x140008483
   14000841e:	ins    DWORD PTR es:[rdi],dx
   14000841f:	push   rsp
   140008420:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008427:	ins    BYTE PTR es:[rdi],dx
   140008428:	gs push rsp
   14000842a:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140008431:	gs je  0x140008488
   140008434:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000843b:	je     0x14000843d
   14000843d:	add    BYTE PTR [rdx],al
   14000843f:	add    BYTE PTR [rdx+0x74],dl
   140008442:	ins    BYTE PTR es:[rdi],dx
   140008443:	rex.XB (bad) 
   140008445:	jo     0x1400084bb
   140008447:	jne    0x1400084bb
   140008449:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000844c:	outs   dx,BYTE PTR ds:[rsi]
   14000844d:	je     0x1400084b4
   14000844f:	js     0x1400084c5
   140008451:	add    BYTE PTR [rcx],cl
   140008453:	add    BYTE PTR [rdx+0x74],dl
   140008456:	ins    BYTE PTR es:[rdi],dx
   140008457:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008459:	outs   dx,DWORD PTR ds:[rsi]
   14000845a:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000845e:	jne    0x1400084ce
   140008460:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140008464:	outs   dx,BYTE PTR ds:[rsi]
   140008465:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140008467:	je     0x1400084db
   140008469:	jns    0x14000846b
   14000846b:	add    BYTE PTR [rdi],cl
   14000846d:	add    BYTE PTR [rdx+0x74],dl
   140008470:	ins    BYTE PTR es:[rdi],dx
   140008471:	push   rsi
   140008472:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140008479:	outs   dx,BYTE PTR ds:[rsi]
   14000847a:	ja     0x1400084e5
   14000847c:	outs   dx,BYTE PTR ds:[rsi]
   14000847d:	add    BYTE PTR fs:[rax],al
   140008480:	adc    DWORD PTR [rax],eax
   140008482:	push   rbp
   140008483:	outs   dx,BYTE PTR ds:[rsi]
   140008484:	push   0x6c646e61
   140008489:	gs fs rex.RB js 0x1400084f1
   14000848e:	gs jo  0x140008505
   140008491:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008498:	gs jb  0x14000849b
   14000849b:	add    BYTE PTR [rax+rax*1],cl
   14000849e:	rex.RXB
   14000849f:	gs je  0x1400084e5
   1400084a2:	jne    0x140008516
   1400084a4:	jb     0x14000850b
   1400084a6:	outs   dx,BYTE PTR ds:[rsi]
   1400084a7:	je     0x1400084f9
   1400084a9:	jb     0x14000851a
   1400084ab:	movsxd esp,DWORD PTR [rbp+0x73]
   1400084ae:	jae    0x1400084b0
   1400084b0:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   1400084b5:	ins    DWORD PTR es:[rdi],dx
   1400084b6:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   1400084bd:	outs   dx,DWORD PTR ds:[rsi]
   1400084be:	movsxd esp,DWORD PTR [rbp+0x73]
   1400084c1:	jae    0x1400084c3
   1400084c3:	add    BYTE PTR [rcx+0x70],ah
   1400084c6:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df83d
   1400084d0:	outs   dx,DWORD PTR ds:[rsi]
   1400084d1:	jb     0x140008538
   1400084d3:	sub    eax,0x7262696c
   1400084d8:	(bad)  
   1400084d9:	jb     0x140008554
   1400084db:	ins    BYTE PTR es:[rdi],dx
   1400084dc:	outs   dx,DWORD PTR ds:[rsi]
   1400084dd:	(bad)  
   1400084de:	fs gs jb 0x14000850f
   1400084e2:	ins    BYTE PTR es:[rdi],dx
   1400084e3:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30b21b
   1400084e9:	fs ins BYTE PTR es:[rdi],dx
   1400084eb:	ins    BYTE PTR es:[rdi],dx
   1400084ec:	add    BYTE PTR [rax],al
   1400084ee:	(bad)  
   1400084ef:	jo     0x14000855a
   1400084f1:	sub    eax,0x772d736d
   1400084f6:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400084fd:	sub    eax,0x636e7973
   140008502:	push   0x2d316c2d
   140008507:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64b33d
   14000850d:	ins    BYTE PTR es:[rdi],dx
   14000850e:	add    BYTE PTR [rax],al
   140008510:	(bad)  
   140008511:	jo     0x14000857c
   140008513:	sub    eax,0x772d736d
   140008518:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000851f:	sub    eax,0x69676572
   140008524:	jae    0x14000859a
   140008526:	jb     0x1400085a1
   140008528:	sub    eax,0x312d316c
   14000852d:	sub    eax,0x6c642e30
   140008532:	ins    BYTE PTR es:[rdi],dx
   140008533:	add    BYTE PTR [rcx+0x70],ah
   140008536:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df8ad
   140008540:	outs   dx,DWORD PTR ds:[rsi]
   140008541:	jb     0x1400085a8
   140008543:	sub    eax,0x7262696c
   140008548:	(bad)  
   140008549:	jb     0x1400085c4
   14000854b:	ins    BYTE PTR es:[rdi],dx
   14000854c:	outs   dx,DWORD PTR ds:[rsi]
   14000854d:	(bad)  
   14000854e:	fs gs jb 0x14000857f
   140008552:	ins    BYTE PTR es:[rdi],dx
   140008553:	xor    DWORD PTR [rip+0x2e312d32],ebp        # 0x16e31b28b
   140008559:	fs ins BYTE PTR es:[rdi],dx
   14000855b:	ins    BYTE PTR es:[rdi],dx
   14000855c:	add    BYTE PTR [rax],al
   14000855e:	(bad)  
   14000855f:	jo     0x1400085ca
   140008561:	sub    eax,0x772d736d
   140008566:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   14000856d:	je     0x1400085d8
   14000856f:	outs   dx,BYTE PTR ds:[rsi]
   140008570:	addr32 sub eax,0x766f7270
   140008576:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   14000857e:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac64b3b4
   140008584:	ins    BYTE PTR es:[rdi],dx
   140008585:	add    BYTE PTR [rcx+0x70],ah
   140008588:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df8ff
   140008592:	outs   dx,DWORD PTR ds:[rsi]
   140008593:	jb     0x1400085fa
   140008595:	sub    eax,0x6f727265
   14000859a:	jb     0x140008604
   14000859c:	(bad)  
   14000859d:	outs   dx,BYTE PTR ds:[rsi]
   14000859e:	fs ins BYTE PTR es:[rdi],dx
   1400085a0:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   1400085a7:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64b3de
   1400085ad:	ins    BYTE PTR es:[rdi],dx
   1400085ae:	add    BYTE PTR [rax],al
   1400085b0:	(bad)  
   1400085b1:	jo     0x14000861c
   1400085b3:	sub    eax,0x772d736d
   1400085b8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400085bf:	sub    eax,0x646e6168
   1400085c4:	ins    BYTE PTR es:[rdi],dx
   1400085c5:	gs sub eax,0x312d316c
   1400085cb:	sub    eax,0x6c642e30
   1400085d0:	ins    BYTE PTR es:[rdi],dx
   1400085d1:	add    BYTE PTR [rcx+0x70],ah
   1400085d4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df94b
   1400085de:	outs   dx,DWORD PTR ds:[rsi]
   1400085df:	jb     0x140008646
   1400085e1:	sub    eax,0x70616568
   1400085e6:	sub    eax,0x312d326c
   1400085eb:	sub    eax,0x6c642e30
   1400085f0:	ins    BYTE PTR es:[rdi],dx
   1400085f1:	add    BYTE PTR [rcx+0x70],ah
   1400085f4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df96b
   1400085fe:	outs   dx,DWORD PTR ds:[rsi]
   1400085ff:	jb     0x140008666
   140008601:	sub    eax,0x636f7270
   140008606:	gs jae 0x14000867c
   140008609:	je     0x140008673
   14000860b:	jb     0x140008672
   14000860d:	(bad)  
   14000860e:	fs jae 0x14000863e
   140008611:	ins    BYTE PTR es:[rdi],dx
   140008612:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32b349
   140008618:	fs ins BYTE PTR es:[rdi],dx
   14000861a:	ins    BYTE PTR es:[rdi],dx
   14000861b:	add    BYTE PTR [rcx+0x70],ah
   14000861e:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df995
   140008628:	outs   dx,DWORD PTR ds:[rsi]
   140008629:	jb     0x140008690
   14000862b:	sub    eax,0x666f7270
   140008630:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140008638:	sub    eax,0x6c642e30
   14000863d:	ins    BYTE PTR es:[rdi],dx
   14000863e:	add    BYTE PTR [rax],al
   140008640:	(bad)  
   140008641:	jo     0x1400086ac
   140008643:	sub    eax,0x772d736d
   140008648:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000864f:	sub    eax,0x69737973
   140008654:	outs   dx,BYTE PTR ds:[rsi]
   140008655:	outs   dx,WORD PTR ds:[rsi]
   140008657:	sub    eax,0x322d316c
   14000865c:	sub    eax,0x6c642e31
   140008661:	ins    BYTE PTR es:[rdi],dx
   140008662:	add    BYTE PTR [rax],al
   140008664:	(bad)  
   140008665:	jo     0x1400086d0
   140008667:	sub    eax,0x772d736d
   14000866c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008673:	sub    eax,0x736c7472
   140008678:	jne    0x1400086ea
   14000867a:	jo     0x1400086eb
   14000867c:	jb     0x1400086f2
   14000867e:	sub    eax,0x322d316c
   140008683:	sub    eax,0x6c642e30
   140008688:	ins    BYTE PTR es:[rdi],dx
   140008689:	add    BYTE PTR [rbp+rcx*2+0x50],al
   14000868d:	jne    0x140008702
   14000868f:	push   0x786f7250
   140008694:	jns    0x1400086c4
   140008696:	fs ins BYTE PTR es:[rdi],dx
   140008698:	ins    BYTE PTR es:[rdi],dx
   140008699:	add    BYTE PTR [rdx],al
   14000869b:	add    BYTE PTR [rbx+0x6f],al
   14000869e:	jo     0x140008719
   1400086a0:	push   rbx
   1400086a1:	je     0x140008715
   1400086a3:	imul   ebp,DWORD PTR [rsi+0x67],0x4d440000
   1400086aa:	rex.XB ins DWORD PTR es:[rdi],dx
   1400086ac:	outs   dx,BYTE PTR ds:[rsi]
   1400086ad:	push   rbp
   1400086ae:	je     0x140008719
   1400086b0:	ins    BYTE PTR es:[rdi],dx
   1400086b1:	jae    0x1400086e1
   1400086b3:	fs ins BYTE PTR es:[rdi],dx
   1400086b5:	ins    BYTE PTR es:[rdi],dx
   1400086b6:	add    BYTE PTR [rax],al
   1400086b8:	add    DWORD PTR [rax],eax
   1400086ba:	rex.R push rbx
   1400086bc:	rex.XB jb 0x140008724
   1400086bf:	(bad)  
   1400086c0:	je     0x140008727
   1400086c2:	push   rbx
   1400086c3:	push   0x64657261
   1400086c8:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x6e656b6f
   1400086d1:	add    BYTE PTR [rbx],cl
   1400086d3:	add    BYTE PTR [rbx+rdx*2+0x52],al
   1400086d7:	gs ins DWORD PTR es:[rdi],dx
   1400086d9:	outs   dx,DWORD PTR ds:[rsi]
   1400086da:	jbe    0x140008741
   1400086dc:	push   rbx
   1400086dd:	push   0x6e697261
   1400086e2:	addr32 push rsp
   1400086e4:	outs   dx,DWORD PTR ds:[rsi]
   1400086e5:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400086e9:	add    BYTE PTR [rbx],al
   1400086eb:	add    BYTE PTR [rbx+rdx*2+0x46],al
   1400086ef:	jb     0x140008756
   1400086f1:	gs push rbx
   1400086f3:	je     0x140008767
   1400086f5:	imul   ebp,DWORD PTR [rsi+0x67],0x73640000
   1400086fc:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
   140008700:	outs   dx,BYTE PTR ds:[rsi]
   140008701:	je     0x140008731
   140008703:	fs ins BYTE PTR es:[rdi],dx
   140008705:	ins    BYTE PTR es:[rdi],dx
   140008706:	add    BYTE PTR [rax],al
   140008708:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000870e:	ja     0x140008780
   140008710:	jb     0x14000877b
   140008712:	outs   dx,BYTE PTR ds:[rsi]
   140008713:	je     0x14000877b
   140008715:	add    BYTE PTR [rsi+0x6c616d04],al
   14000871b:	ins    BYTE PTR es:[rdi],dx
   14000871c:	outs   dx,DWORD PTR ds:[rsi]
   14000871d:	movsxd eax,DWORD PTR [rax]
   14000871f:	add    BYTE PTR [rdi+0x61635f00],bh
   140008725:	ins    BYTE PTR es:[rdi],dx
   140008726:	ins    BYTE PTR es:[rdi],dx
   140008727:	outs   dx,BYTE PTR ds:[rsi]
   140008728:	gs ja  0x140008793
   14000872b:	add    BYTE PTR [rsi+0x75705f02],bl
   140008731:	jb     0x140008798
   140008733:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008736:	ins    BYTE PTR es:[rdi],dx
   140008737:	add    BYTE PTR [rsp+rax*1+0x6d6d656d],dl
   14000873e:	outs   dx,DWORD PTR ds:[rsi]
   14000873f:	jbe    0x1400087a6
   140008741:	add    BYTE PTR [rdx],cl
   140008743:	add    BYTE PTR [rdi],bh
   140008745:	(bad)  
   140008746:	xor    BYTE PTR [rbp+0x78],ah
   140008749:	movsxd esp,DWORD PTR [rbp+0x70]
   14000874c:	je     0x1400087b7
   14000874e:	outs   dx,DWORD PTR ds:[rsi]
   14000874f:	outs   dx,BYTE PTR ds:[rsi]
   140008750:	rex
   140008751:	rex push rcx
   140008753:	rex.RB
   140008754:	rex.B
   140008755:	rex.B
   140008756:	rex
   140008757:	rex.B
   140008758:	rex.RB
   140008759:	rex.X push rcx
   14000875b:	rex.RB
   14000875c:	rex.X
   14000875d:	rex.R
   14000875e:	rex pop rdx
   140008760:	add    BYTE PTR [rax],al
   140008762:	or     eax,DWORD PTR [rax]
   140008764:	(bad)  
   140008765:	(bad)  
   140008766:	xor    BYTE PTR [rbp+0x78],ah
   140008769:	movsxd esp,DWORD PTR [rbp+0x70]
   14000876c:	je     0x1400087d7
   14000876e:	outs   dx,DWORD PTR ds:[rsi]
   14000876f:	outs   dx,BYTE PTR ds:[rsi]
   140008770:	rex
   140008771:	rex push rcx
   140008773:	rex.RB
   140008774:	rex.B
   140008775:	rex.B
   140008776:	rex
   140008777:	rex.B
   140008778:	rex.RB
   140008779:	rex.X push rcx
   14000877b:	rex.RB
   14000877c:	rex.X
   14000877d:	rex.R
   14000877e:	rex.W
   14000877f:	rex pop rdx
   140008781:	add    BYTE PTR [rax+rax*1],cl
   140008784:	(bad)  
   140008785:	(bad)  
   140008786:	xor    BYTE PTR [rbp+0x78],ah
   140008789:	movsxd esp,DWORD PTR [rbp+0x70]
   14000878c:	je     0x1400087f7
   14000878e:	outs   dx,DWORD PTR ds:[rsi]
   14000878f:	outs   dx,BYTE PTR ds:[rsi]
   140008790:	rex
   140008791:	rex push rcx
   140008793:	rex.RB
   140008794:	rex.B
   140008795:	rex.B
   140008796:	rex
   140008797:	rex.B
   140008798:	rex.RB
   140008799:	rex.X push rsi
   14000879b:	xor    BYTE PTR [rax+0x40],al
   14000879e:	pop    rdx
   14000879f:	add    BYTE PTR [rcx],dl
   1400087a1:	add    BYTE PTR [rdi],bh
   1400087a3:	(bad)  
   1400087a4:	xor    DWORD PTR [rbp+0x78],esp
   1400087a7:	movsxd esp,DWORD PTR [rbp+0x70]
   1400087aa:	je     0x140008815
   1400087ac:	outs   dx,DWORD PTR ds:[rsi]
   1400087ad:	outs   dx,BYTE PTR ds:[rsi]
   1400087ae:	rex
   1400087af:	rex push rbp
   1400087b1:	rex.RB
   1400087b2:	rex.B
   1400087b3:	rex.B
   1400087b4:	rex pop rax
   1400087b6:	pop    rdx
   1400087b7:	add    BYTE PTR [rcx],dh
   1400087b9:	add    BYTE PTR [rdi],bh
   1400087bb:	ja     0x140008825
   1400087bd:	(bad)  
   1400087be:	je     0x140008800
   1400087c0:	gs js  0x140008826
   1400087c3:	gs jo  0x14000883a
   1400087c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   1400087cd:	rex.X
   1400087ce:	push   r8
   1400087d0:	rex.RB
   1400087d1:	rex.X
   1400087d2:	rex.R pop rax
   1400087d4:	pop    rdx
   1400087d5:	add    BYTE PTR [rbx+0x0],cl
   1400087d8:	pop    rdi
   1400087d9:	rex.XB js 0x140008854
   1400087dc:	push   rsp
   1400087dd:	push   0x45776f72
   1400087e2:	js     0x140008847
   1400087e4:	gs jo  0x14000885b
   1400087e7:	imul   ebp,DWORD PTR [rdi+0x6e],0x4920000
   1400087ee:	ins    DWORD PTR es:[rdi],dx
   1400087ef:	gs ins DWORD PTR es:[rdi],dx
   1400087f1:	movsxd esi,DWORD PTR [rax+0x79]
   1400087f4:	add    BYTE PTR [rax],al
   1400087f6:	adc    al,BYTE PTR [rax]
   1400087f8:	(bad)  
   1400087f9:	(bad)  
   1400087fa:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   1400087fe:	gs pop rdi
   140008800:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   140008807:	rex.RB
   140008808:	rex.B
   140008809:	rex.B
   14000880a:	rex pop rax
   14000880c:	pop    rdx
   14000880d:	add    BYTE PTR [rsi],al
   14000880f:	add    BYTE PTR [rbp+0x76],al
   140008812:	outs   dx,BYTE PTR gs:[rsi]
   140008814:	je     0x14000886d
   140008816:	jb     0x140008881
   140008818:	je     0x14000887f
   14000881a:	add    BYTE PTR [rax],al
   14000881c:	add    eax,DWORD PTR [rax]
   14000881e:	rex.XB jb 0x140008886
   140008821:	(bad)  
   140008822:	je     0x140008889
   140008824:	push   rax
   140008825:	jb     0x140008896
   140008827:	movsxd esp,DWORD PTR [rbp+0x73]
   14000882a:	jae    0x140008883
   14000882c:	add    BYTE PTR [rax],al
   14000882e:	add    al,BYTE PTR [rax]
   140008830:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008832:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008835:	rex.B ins BYTE PTR es:[rdi],dx
   140008837:	ins    BYTE PTR es:[rdi],dx
   140008838:	outs   dx,DWORD PTR ds:[rsi]
   140008839:	movsxd eax,DWORD PTR [rax]
   14000883b:	add    BYTE PTR [rsi],al
   14000883d:	add    BYTE PTR [rbp+0x75],cl
   140008840:	ins    BYTE PTR es:[rdi],dx
   140008841:	je     0x1400088ac
   140008843:	rex.X jns 0x1400088ba
   140008846:	gs push rsp
   140008848:	outs   dx,DWORD PTR ds:[rsi]
   140008849:	push   rdi
   14000884a:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140008852:	(bad)  
   140008853:	add    BYTE PTR [rbx+0x6f],al
   140008856:	push   rsp
   140008857:	(bad)  
   140008858:	jae    0x1400088c5
   14000885a:	rex.WRB
   14000885b:	gs ins DWORD PTR es:[rdi],dx
   14000885d:	rex.RX jb 0x1400088c5
   140008860:	add    BYTE PTR gs:[rcx],al
   140008863:	add    BYTE PTR [rbp+0x78],al
   140008866:	jo     0x1400088c9
   140008868:	outs   dx,BYTE PTR ds:[rsi]
   140008869:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000886c:	jbe    0x1400088d7
   14000886e:	jb     0x1400088df
   140008870:	outs   dx,BYTE PTR ds:[rsi]
   140008871:	ins    DWORD PTR es:[rdi],dx
   140008872:	outs   dx,BYTE PTR gs:[rsi]
   140008874:	je     0x1400088c9
   140008876:	je     0x1400088ea
   140008878:	imul   ebp,DWORD PTR [rsi+0x67],0x3a005773
   14000887f:	add    BYTE PTR [rdi+0x65],al
   140008882:	je     0x1400088d8
   140008884:	gs ins DWORD PTR es:[rdi],dx
   140008886:	jo     0x1400088ce
   140008888:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x57656d61
   140008890:	add    BYTE PTR [rax],al
   140008892:	(bad)  
   140008893:	add    BYTE PTR [rbx+0x72],al
   140008896:	gs (bad) 
   140008898:	je     0x1400088ff
   14000889a:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x57005900
   1400088a3:	jb     0x14000890e
   1400088a5:	je     0x14000890c
   1400088a7:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x65470013
   1400088b0:	je     0x1400088f7
   1400088b2:	js     0x14000891d
   1400088b4:	je     0x1400088f9
   1400088b6:	outs   dx,DWORD PTR ds:[rsi]
   1400088b7:	fs gs push rax
   1400088ba:	jb     0x14000892b
   1400088bc:	movsxd esp,DWORD PTR [rbp+0x73]
   1400088bf:	jae    0x1400088c1
   1400088c1:	add    BYTE PTR [rcx],cl
   1400088c3:	add    BYTE PTR [rbp+riz*2+0x6c],al
   1400088c7:	gs je  0x14000892f
   1400088ca:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x43004200
   1400088d3:	outs   dx,DWORD PTR ds:[rsi]
   1400088d4:	push   rbp
   1400088d5:	outs   dx,BYTE PTR ds:[rsi]
   1400088d6:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400088dd:	imul   edi,DWORD PTR [rdx+0x65],0x1b0000
   1400088e4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400088e6:	(bad)  
   1400088e7:	fs push rbx
   1400088e9:	je     0x14000895d
   1400088eb:	imul   ebp,DWORD PTR [rsi+0x67],0x80057
   1400088f2:	rex.RX outs dx,DWORD PTR ds:[rsi]
   1400088f4:	jb     0x140008963
   1400088f6:	(bad)  
   1400088f7:	je     0x140008946
   1400088f9:	gs jae 0x14000896f
   1400088fc:	(bad)  
   1400088fd:	addr32 gs push rdi
   140008900:	add    BYTE PTR [rax],al
   140008902:	add    BYTE PTR es:[rbx+0x6f],al
   140008906:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008908:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008910:	rex.RB js 0x140008913
   140008913:	add    BYTE PTR [rcx],al
   140008915:	add    BYTE PTR [rdx+0x65],dl
   140008918:	jae    0x140008989
   14000891a:	ins    BYTE PTR es:[rdi],dx
   14000891b:	jbe    0x140008982
   14000891d:	rex.R
   14000891e:	gs ins BYTE PTR es:[rdi],dx
   140008920:	(bad)  
   140008921:	jns    0x14000896f
   140008923:	outs   dx,DWORD PTR ds:[rsi]
   140008924:	(bad)  
   140008925:	fs gs fs push r8
   14000892a:	rex.WB add BYTE PTR [r8],al
   14000892d:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140008931:	(bad)  
   140008932:	jns    0x140008980
   140008934:	outs   dx,DWORD PTR ds:[rsi]
   140008935:	(bad)  
   140008936:	fs rex.RX (bad) 
   140008939:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   140008941:	imul   eax,DWORD PTR [rax],0x0
   140008944:	rex.WRXB
   140008945:	rex.WR
   140008946:	rex.RB
   140008947:	push   r13
   140008949:	push   rsp
   14000894a:	xor    esi,DWORD PTR [rdx]
   14000894c:	cs fs ins BYTE PTR es:[rdi],dx
   14000894f:	ins    BYTE PTR es:[rdi],dx
   140008950:	add    BYTE PTR [rax],al
   140008952:	(bad)  
   140008953:	jo     0x1400089be
   140008955:	sub    eax,0x772d736d
   14000895a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008961:	sub    eax,0x69727473
   140008966:	outs   dx,BYTE PTR ds:[rsi]
   140008967:	addr32 sub eax,0x312d316c
   14000896d:	sub    eax,0x6c642e30
   140008972:	ins    BYTE PTR es:[rdi],dx
   140008973:	add    BYTE PTR [rcx+0x70],ah
   140008976:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfced
   140008980:	outs   dx,DWORD PTR ds:[rsi]
   140008981:	jb     0x1400089e8
   140008983:	sub    eax,0x2d6d6f63
   140008988:	ins    BYTE PTR es:[rdi],dx
   140008989:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e31b6c0
   14000898f:	fs ins BYTE PTR es:[rdi],dx
   140008991:	ins    BYTE PTR es:[rdi],dx
   140008992:	add    BYTE PTR [rax],al
   140008994:	(bad)  
   140008995:	jo     0x140008a00
   140008997:	sub    eax,0x772d736d
   14000899c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400089a3:	sub    eax,0x636f7270
   1400089a8:	gs jae 0x140008a1e
   1400089ab:	outs   dx,BYTE PTR gs:[rsi]
   1400089ad:	jbe    0x140008a18
   1400089af:	jb     0x140008a20
   1400089b1:	outs   dx,BYTE PTR ds:[rsi]
   1400089b2:	ins    DWORD PTR es:[rdi],dx
   1400089b3:	outs   dx,BYTE PTR gs:[rsi]
   1400089b5:	je     0x1400089e4
   1400089b7:	ins    BYTE PTR es:[rdi],dx
   1400089b8:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30b6f0
   1400089be:	fs ins BYTE PTR es:[rdi],dx
   1400089c0:	ins    BYTE PTR es:[rdi],dx
   1400089c1:	add    BYTE PTR [rcx+0x70],ah
   1400089c4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfd3b
   1400089ce:	outs   dx,DWORD PTR ds:[rsi]
   1400089cf:	jb     0x140008a36
   1400089d1:	sub    eax,0x656c6966
   1400089d6:	sub    eax,0x322d316c
   1400089db:	sub    eax,0x6c642e31
   1400089e0:	ins    BYTE PTR es:[rdi],dx
   1400089e1:	add    BYTE PTR [rcx+0x70],ah
   1400089e4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfd5b
   1400089ee:	outs   dx,DWORD PTR ds:[rsi]
   1400089ef:	jb     0x140008a56
   1400089f1:	sub    eax,0x61636f6c
   1400089f6:	ins    BYTE PTR es:[rdi],dx
   1400089f7:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   1400089fe:	sub    eax,0x322d316c
   140008a03:	sub    eax,0x6c642e31
   140008a08:	ins    BYTE PTR es:[rdi],dx
   140008a09:	add    BYTE PTR [rcx+0x70],ah
   140008a0c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72dfd83
   140008a16:	outs   dx,DWORD PTR ds:[rsi]
   140008a17:	jb     0x140008a7e
   140008a19:	sub    eax,0x616c6564
   140008a1e:	jns    0x140008a8c
   140008a20:	outs   dx,DWORD PTR ds:[rsi]
   140008a21:	(bad)  
   140008a22:	fs sub eax,0x312d316c
   140008a28:	sub    eax,0x6c642e31
   140008a2d:	ins    BYTE PTR es:[rdi],dx
   140008a2e:	add    BYTE PTR [rax],al
   140008a30:	outs   dx,DWORD PTR ds:[rsi]
   140008a31:	ins    DWORD PTR es:[rdi],dx
   140008a32:	(bad)  
   140008a33:	fs ins DWORD PTR es:[rdi],dx
   140008a35:	(bad)  
   140008a36:	jo     0x140008aa1
   140008a38:	cs fs ins BYTE PTR es:[rdi],dx
   140008a3b:	ins    BYTE PTR es:[rdi],dx
   140008a3c:	add    BYTE PTR [rax],al
   140008a3e:	cmp    eax,0x616d4f00
   140008a43:	rex.R ins DWORD PTR es:[rdi],dx
   140008a45:	push   rdx
   140008a46:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65537972
   140008a4f:	je     0x140008aa4
   140008a51:	je     0x140008ac5
   140008a53:	imul   ebp,DWORD PTR [rsi+0x67],0x3e0000
   140008a5a:	push   rcx
   140008a5b:	jne    0x140008ac2
   140008a5d:	jb     0x140008ad8
   140008a5f:	push   rax
   140008a60:	outs   dx,DWORD PTR ds:[rsi]
   140008a61:	ins    BYTE PTR es:[rdi],dx
   140008a62:	imul   esp,DWORD PTR [rbx+0x79],0x49002f00
   140008a69:	outs   dx,BYTE PTR ds:[rsi]
   140008a6a:	jbe    0x140008abf
   140008a6c:	je     0x140008ae0
   140008a6e:	rex.XB ins DWORD PTR es:[rdi],dx
   140008a70:	jo     0x140008abb
   140008a72:	push   rdi
   140008a73:	add    BYTE PTR [rbx],cl
   140008a75:	add    BYTE PTR [rbp+rbp*2+0x47],al
   140008a79:	gs je  0x140008abf
   140008a7c:	jne    0x140008af0
   140008a7e:	jb     0x140008ae5
   140008a80:	outs   dx,BYTE PTR ds:[rsi]
   140008a81:	je     0x140008ad8
   140008a83:	jae    0x140008aea
   140008a85:	jb     0x140008ada
   140008a87:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x67694200
   140008a8f:	push   rbx
   140008a90:	je     0x140008b04
   140008a92:	movsxd esp,DWORD PTR [rcx+0x74]
   140008a95:	add    BYTE PTR [rbx],dl
   140008a97:	add    BYTE PTR [rbp+rbp*2+0x49],al
   140008a9b:	outs   dx,BYTE PTR ds:[rsi]
   140008a9c:	outs   dx,WORD PTR ds:[rsi]
   140008a9e:	jb     0x140008b0d
   140008aa0:	push   rbp
   140008aa1:	jae    0x140008b08
   140008aa3:	jb     0x140008aa5
   140008aa5:	add    BYTE PTR [rax],cl
   140008aa7:	add    BYTE PTR [rax+0x4d],bl
   140008aaa:	rex.WR
   140008aab:	rex.W push rbx
   140008aad:	imul   ebp,DWORD PTR [rcx+0x70],0x58
   140008ab1:	rex.WRB
   140008ab2:	rex.WR push rax
   140008ab4:	jb     0x140008b25
   140008ab6:	ins    BYTE PTR es:[rdi],dx
   140008ab7:	outs   dx,DWORD PTR ds:[rsi]
   140008ab8:	add    BYTE PTR [ebp+ebp*2+0x78],ah
   140008abd:	ins    DWORD PTR es:[rdi],dx
   140008abe:	ins    BYTE PTR es:[rdi],dx
   140008abf:	push   0x75706c65
   140008ac4:	je     0x140008b2f
   140008ac6:	ins    BYTE PTR es:[rdi],dx
   140008ac7:	jae    0x140008af7
   140008ac9:	fs ins BYTE PTR es:[rdi],dx
   140008acb:	ins    BYTE PTR es:[rdi],dx
   140008acc:	add    BYTE PTR [rax],al
   140008ace:	add    BYTE PTR [rax],al
   140008ad0:	rex.B jo 0x140008b3c
   140008ad3:	push   rbx
   140008ad4:	gs je  0x140008b28
   140008ad7:	jne    0x140008b3e
   140008ad9:	jb     0x140008b54
   140008adb:	rex.B jo 0x140008b47
   140008ade:	push   rbx
   140008adf:	gs je  0x140008b32
   140008ae2:	jb     0x140008b49
   140008ae4:	jae    0x140008b4b
   140008ae6:	outs   dx,BYTE PTR ds:[rsi]
   140008ae7:	movsxd esp,DWORD PTR [rbp+0x0]
   140008aea:	(bad)  
   140008aeb:	jo     0x140008b56
   140008aed:	sub    eax,0x772d736d
   140008af2:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008af9:	sub    eax,0x71697061
   140008afe:	jne    0x140008b65
   140008b00:	jb     0x140008b7b
   140008b02:	sub    eax,0x312d316c
   140008b07:	sub    eax,0x6c642e30
   140008b0c:	ins    BYTE PTR es:[rdi],dx
   140008b0d:	add    BYTE PTR [rsi+0x6d656d04],dl
   140008b13:	jae    0x140008b7a
   140008b15:	je     0x140008b17
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
   140009019:	add    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    al,al
   140009021:	push   rsi
   140009022:	add    BYTE PTR [rax+0x1],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rax],cl
   140009029:	push   rdi
   14000902a:	add    BYTE PTR [rax+0x1],al
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    BYTE PTR [rax+0x57],ah
   140009032:	add    BYTE PTR [rax+0x1],al
	...
   140009069:	add    BYTE PTR [rdx],al
   14000906b:	add    BYTE PTR [rax],al
   14000906d:	add    BYTE PTR [rax],al
   14000906f:	add    BYTE PTR [rax+0x1400097],al
   140009075:	add    BYTE PTR [rax],al
   140009077:	add    BYTE PTR [rax+0x140006b],ah
   14000907d:	add    BYTE PTR [rax],al
   14000907f:	add    BYTE PTR [rax+0x140006b],bl
	...
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    BYTE PTR [rax+0x140006a],dh
	...
   14000909d:	add    BYTE PTR [rax],al
   14000909f:	add    BYTE PTR [rsi],ch
   1400090a1:	(bad)  
   1400090a2:	push   r14
   1400090a4:	(bad)
   1400090a9:	ins    BYTE PTR es:[rdi],dx
   1400090aa:	ins    BYTE PTR es:[rdi],dx
   1400090ab:	outs   dx,DWORD PTR ds:[rsi]
   1400090ac:	movsxd eax,DWORD PTR [rax+0x73]
   1400090af:	je     0x140009115
   1400090b1:	rex
   1400090b2:	add    BYTE PTR [rax],al
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    BYTE PTR [rax+0x140006a],dh
	...
   1400090c5:	add    BYTE PTR [rax],al
   1400090c7:	add    BYTE PTR [rsi],ch
   1400090c9:	(bad)  
   1400090ca:	push   r14
   1400090cc:	gs js  0x140009132
   1400090cf:	gs jo  0x140009146
   1400090d2:	imul   ebp,DWORD PTR [rdi+0x6e],0xb0004040
   1400090d9:	push   0x0
   1400090db:	rex add DWORD PTR [rax],eax
	...
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	cs (bad) 
   1400090ea:	push   r14
   1400090ec:	ins    BYTE PTR es:[rdi],dx
   1400090ed:	outs   dx,DWORD PTR ds:[rsi]
   1400090ee:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   1400090f6:	jb     0x140009138
   1400090f8:	jae    0x14000916e
   1400090fa:	fs rex
   1400090fc:	add    BYTE PTR [rax],al
   1400090ff:	add    BYTE PTR [rax+0x140006a],dh
	...
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rsi],ch
   140009111:	(bad)  
   140009112:	push   r14
   140009114:	ins    BYTE PTR es:[rdi],dx
   140009115:	outs   dx,BYTE PTR gs:[rsi]
   140009117:	addr32 je 0x140009182
   14000911a:	pop    rdi
   14000911b:	gs jb  0x140009190
   14000911e:	outs   dx,DWORD PTR ds:[rsi]
   14000911f:	jb     0x140009161
   140009121:	jae    0x140009197
   140009123:	fs rex
   140009125:	add    BYTE PTR [rax],al
   140009128:	mov    al,0x6a
   14000912a:	add    BYTE PTR [rax+0x1],al
	...
   140009135:	add    BYTE PTR [rax],al
   140009137:	add    BYTE PTR [rsi],ch
   140009139:	(bad)  
   14000913a:	push   r14
   14000913c:	outs   dx,DWORD PTR ds:[rsi]
   14000913d:	jne    0x1400091b3
   14000913f:	pop    rdi
   140009140:	outs   dx,DWORD PTR ds:[rsi]
   140009141:	pop    di
   140009143:	jb     0x1400091a6
   140009145:	outs   dx,BYTE PTR ds:[rsi]
   140009146:	addr32 gs rex jae 0x1400091bf
   14000914b:	fs rex
   14000914d:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	adc    BYTE PTR [rax],al
   14000a003:	add    BYTE PTR [rbp+0x11],dl
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	xor    BYTE PTR [rax+rax*1+0x0],dh
   14000a00c:	xchg   esp,eax
   14000a00d:	adc    DWORD PTR [rax],eax
   14000a00f:	add    BYTE PTR [rbx+0x3c000011],bh
   14000a015:	je     0x14000a017
   14000a017:	add    ah,al
   14000a019:	adc    DWORD PTR [rax],eax
   14000a01b:	add    BYTE PTR [rsi],ah
   14000a01d:	adc    eax,DWORD PTR [rax]
   14000a01f:	add    BYTE PTR [rsp+rsi*2+0x0],al
   14000a023:	add    BYTE PTR [rbx+rdx*1],ch
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	rcl    DWORD PTR [rax+rax*1],1
   14000a02b:	add    BYTE PTR [rsp+rsi*2+0x0],ah
   14000a02f:	add    al,bl
   14000a031:	adc    al,0x0
   14000a033:	add    BYTE PTR [rax],al
   14000a035:	(bad)  
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	js     0x14000a0ae
   14000a03a:	add    BYTE PTR [rax],al
   14000a03c:	or     BYTE PTR [rsi],dl
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	push   rax
   14000a041:	(bad)  
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	mov    BYTE PTR [rax+rax*1+0x0],dh
   14000a048:	je     0x14000a061
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	int3   
   14000a04d:	(bad)  
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	pushf  
   14000a051:	je     0x14000a053
   14000a053:	add    ah,dl
   14000a055:	(bad)  
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	cli    
   14000a059:	sbb    BYTE PTR [rax],al
   14000a05b:	add    BYTE PTR [rsp+rsi*2+0x19000000],ch
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	stos   BYTE PTR es:[rdi],al
   14000a065:	sbb    DWORD PTR [rax],eax
   14000a067:	add    ah,al
   14000a069:	je     0x14000a06b
   14000a06b:	add    BYTE PTR [rax-0x3dffffe7],dh
   14000a071:	sbb    eax,DWORD PTR [rax]
   14000a073:	add    al,bl
   14000a075:	je     0x14000a077
   14000a077:	add    ah,dl
   14000a079:	sbb    eax,DWORD PTR [rax]
   14000a07b:	add    BYTE PTR [rsp+rbx*1+0x0],cl
   14000a07f:	add    BYTE PTR [rsi*2+0x1c540000],ah
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	mov    cl,0x1f
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	sub    al,0x75
   14000a08e:	add    BYTE PTR [rax],al
   14000a090:	mov    eax,0xb600001f
   14000a095:	and    al,0x0
   14000a097:	add    BYTE PTR [rbp+rsi*2+0x0],cl
   14000a09b:	add    BYTE PTR [rsp+0x25330000],bh
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	jo     0x14000a11b
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	cmp    al,0x25
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	(bad)  
   14000a0ad:	add    BYTE PTR es:[rax],al
   14000a0b0:	xor    BYTE PTR [rbp+0x0],0x0
   14000a0b4:	and    BYTE PTR [rsi],ah
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	add    DWORD PTR [rax],ebp
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	xchg   esp,eax
   14000a0bd:	jne    0x14000a0bf
   14000a0bf:	add    BYTE PTR [rax],cl
   14000a0c1:	sub    BYTE PTR [rax],al
   14000a0c3:	add    BYTE PTR [rbp+0x29],dh
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	mov    ah,0x75
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	jl     0x14000a0f7
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	mov    ebx,0xd400002a
   14000a0d5:	jne    0x14000a0d7
   14000a0d7:	add    al,dl
   14000a0d9:	sub    al,BYTE PTR [rax]
   14000a0db:	add    BYTE PTR [rcx],al
   14000a0dd:	sub    eax,DWORD PTR [rax]
   14000a0df:	add    ah,dh
   14000a0e1:	jne    0x14000a0e3
   14000a0e3:	add    BYTE PTR [rax],dl
   14000a0e5:	sub    eax,DWORD PTR [rax]
   14000a0e7:	add    bh,bl
   14000a0e9:	sub    eax,DWORD PTR [rax]
   14000a0eb:	add    BYTE PTR [rsp+rsi*2],bh
   14000a0ee:	add    BYTE PTR [rax],al
   14000a0f0:	lock sub eax,DWORD PTR [rax]
   14000a0f3:	add    BYTE PTR [rcx],bh
   14000a0f5:	sub    al,0x0
   14000a0f7:	add    ah,dh
   14000a0f9:	jne    0x14000a0fb
   14000a0fb:	add    BYTE PTR [rax+0x2c],al
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	push   rdx
   14000a101:	sub    al,0x0
   14000a103:	add    BYTE PTR [rsp+rsi*2],bh
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	pop    rax
   14000a109:	sub    al,0x0
   14000a10b:	add    BYTE PTR [rsi-0x3ffffd2],ch
   14000a111:	jne    0x14000a113
   14000a113:	add    al,dl
   14000a115:	add    BYTE PTR cs:[rax],al
   14000a118:	out    dx,al
   14000a119:	add    BYTE PTR cs:[rax],al
   14000a11c:	xor    BYTE PTR [rsi+0x0],dh
   14000a11f:	add    ah,dh
   14000a121:	add    BYTE PTR cs:[rax],al
   14000a124:	adc    ebp,DWORD PTR [rdi]
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	xor    al,0x76
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	and    BYTE PTR [rdi],ch
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	pop    rcx
   14000a131:	(bad)  
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	cmp    al,0x74
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	(bad)  
   14000a139:	(bad)  
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	js     0x14000a16d
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	cmp    al,0x74
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	mov    WORD PTR [rdi],gs
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	loopne 0x14000a179
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	shl    BYTE PTR [rsi+0x0],0x0
   14000a150:	call   0x16d00a184
   14000a155:	xor    BYTE PTR [rax],al
   14000a157:	add    BYTE PTR [rsi*2+0x30a00000],ah
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	in     eax,dx
   14000a161:	xor    BYTE PTR [rax],al
   14000a163:	add    al,ah
   14000a165:	jbe    0x14000a167
   14000a167:	add    BYTE PTR [rcx+rsi*1],dh
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	add    al,0x32
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	or     al,0x77
   14000a172:	add    BYTE PTR [rax],al
   14000a174:	and    al,0x32
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	ret    0x32
   14000a17b:	add    BYTE PTR [rax],bl
   14000a17d:	ja     0x14000a17f
   14000a17f:	add    al,cl
   14000a181:	xor    al,BYTE PTR [rax]
   14000a183:	add    bh,bl
   14000a185:	xor    al,BYTE PTR [rax]
   14000a187:	add    BYTE PTR [rsp+rsi*2],bh
   14000a18a:	add    BYTE PTR [rax],al
   14000a18c:	cld    
   14000a18d:	xor    al,BYTE PTR [rax]
   14000a18f:	add    BYTE PTR [rax],dh
   14000a191:	xor    eax,DWORD PTR [rax]
   14000a193:	add    BYTE PTR [rsi*2+0x33400000],ah
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	mov    cl,0x34
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	cmp    al,0x77
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	clc    
   14000a1a5:	xor    al,0x0
   14000a1a7:	add    BYTE PTR [rsi+0x35],al
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	cmp    al,0x74
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	jo     0x14000a1e7
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	out    0x35,eax
   14000a1b6:	add    BYTE PTR [rax],al
   14000a1b8:	rex.WR ja 0x14000a1bb
   14000a1bb:	add    BYTE PTR [rax],dl
   14000a1bd:	add    BYTE PTR ss:[rax],al
   14000a1c0:	xchg   DWORD PTR [rsi],esi
   14000a1c2:	add    BYTE PTR [rax],al
   14000a1c4:	push   rsp
   14000a1c5:	ja     0x14000a1c7
   14000a1c7:	add    BYTE PTR [rax+0x27000036],dh
   14000a1cd:	(bad)  
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	pop    rsp
   14000a1d1:	ja     0x14000a1d3
   14000a1d3:	add    BYTE PTR [rax],dh
   14000a1d5:	(bad)  
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	(bad)  
   14000a1d9:	(bad)  
   14000a1da:	add    BYTE PTR [rax],al
   14000a1dc:	and    al,0x75
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	push   0xffffffff89000037
   14000a1e5:	(bad)  
   14000a1e6:	add    BYTE PTR [rax],al
   14000a1e8:	and    al,0x75
   14000a1ea:	add    BYTE PTR [rax],al
   14000a1ec:	nop
   14000a1ed:	(bad)  
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	enter  0x37,0x0
   14000a1f4:	and    al,0x75
   14000a1f6:	add    BYTE PTR [rax],al
   14000a1f8:	shl    BYTE PTR [rdi],1
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	push   QWORD PTR [rdi]
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	jo     0x14000a27a
   14000a202:	add    BYTE PTR [rax],al
   14000a204:	or     BYTE PTR [rax],bh
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	sub    DWORD PTR [rax],edi
   14000a20a:	add    BYTE PTR [rax],al
   14000a20c:	and    al,0x75
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	(bad)  
   14000a211:	cmp    BYTE PTR [rax],al
   14000a213:	add    BYTE PTR [rsi+0x24000038],al
   14000a219:	jne    0x14000a21b
   14000a21b:	add    BYTE PTR [rax-0x36ffffc8],dl
   14000a221:	cmp    BYTE PTR [rax],al
   14000a223:	add    BYTE PTR [rax],dh
   14000a225:	je     0x14000a227
   14000a227:	add    al,dl
   14000a229:	cmp    BYTE PTR [rax],al
   14000a22b:	add    bh,bh
   14000a22d:	cmp    BYTE PTR [rax],al
   14000a22f:	add    BYTE PTR [rax],dh
   14000a231:	je     0x14000a233
   14000a233:	add    BYTE PTR [rax],cl
   14000a235:	cmp    DWORD PTR [rax],eax
   14000a237:	add    BYTE PTR [rdx],cl
   14000a239:	cmp    al,BYTE PTR [rax]
   14000a23b:	add    BYTE PTR [rax+0x10000077],al
   14000a241:	cmp    al,BYTE PTR [rax]
   14000a243:	add    BYTE PTR [rax+0x3a],ch
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	(bad)  
   14000a249:	js     0x14000a24b
   14000a24b:	add    BYTE PTR [rax+0x3a],dh
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	nop
   14000a251:	cmp    al,BYTE PTR [rax]
   14000a253:	add    BYTE PTR [rdi+rsi*2+0x0],ah
   14000a257:	add    BYTE PTR [rax-0x56ffffc6],bl
   14000a25d:	cmp    al,BYTE PTR [rax]
   14000a25f:	add    BYTE PTR [rsp+rsi*2],bh
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	mov    al,0x3a
   14000a266:	add    BYTE PTR [rax],al
   14000a268:	sar    DWORD PTR [rdx],cl
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	fs ja  0x14000a26f
   14000a26f:	add    ah,bl
   14000a271:	cmp    al,BYTE PTR [rax]
   14000a273:	add    bh,bh
   14000a275:	cmp    al,BYTE PTR [rax]
   14000a277:	add    BYTE PTR [rdi+rsi*2+0x0],ah
   14000a27b:	add    BYTE PTR [rax],cl
   14000a27d:	cmp    eax,DWORD PTR [rax]
   14000a27f:	add    BYTE PTR [rcx],bl
   14000a281:	cmp    eax,DWORD PTR [rax]
   14000a283:	add    BYTE PTR [rsp+rsi*2],bh
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	and    BYTE PTR [rbx],bh
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	cs cmp al,0x0
   14000a28f:	add    BYTE PTR [rdi+rsi*2+0x0],ch
   14000a293:	add    BYTE PTR [rsp+rdi*1],dh
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	xor    BYTE PTR [rip+0x78600000],bh        # 0x1b860a29e
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	rex cmp eax,0x3d7f0000
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	xor    BYTE PTR [rax+rax*1+0x0],dh
   14000a2ac:	sar    BYTE PTR [rip+0x3e3a0000],1        # 0x17e3aa2b2
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	xor    BYTE PTR [rbp+0x0],0x0
   14000a2b8:	rex
   14000a2b9:	add    BYTE PTR ds:[rax],al
   14000a2bc:	(bad)  
   14000a2bd:	add    BYTE PTR ds:[rax],al
   14000a2c0:	xor    BYTE PTR [rax+rax*1+0x0],dh
   14000a2c4:	loopne 0x14000a304
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	rex.XB (bad) 
   14000a2ca:	add    BYTE PTR [rax],al
   14000a2cc:	cmp    BYTE PTR [rax+0x0],0x0
   14000a2d0:	push   rax
   14000a2d1:	(bad)  
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	xchg   esi,eax
   14000a2d5:	(bad)  
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	js     0x14000a352
   14000a2da:	add    BYTE PTR [rax],al
   14000a2dc:	movabs al,ds:0x800000400300003f
   14000a2e5:	js     0x14000a2e7
   14000a2e7:	add    BYTE PTR [rax],dh
   14000a2e9:	add    BYTE PTR [r8],al
   14000a2ec:	(bad)  
   14000a2ed:	add    BYTE PTR [r8],al
   14000a2f0:	xor    BYTE PTR [rax+rax*1+0x0],dh
   14000a2f4:	mov    WORD PTR [rcx+0x0],es
   14000a2f7:	add    BYTE PTR [rcx+0x3c000041],ch
   14000a2fd:	je     0x14000a2ff
   14000a2ff:	add    BYTE PTR [rax+0x13000041],dh
   14000a305:	rex.X add BYTE PTR [rax],al
   14000a308:	and    al,0x75
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	rex
   14000a30d:	rex.X add BYTE PTR [rax],al
   14000a310:	rex.X
   14000a311:	rex.X add BYTE PTR [rax],al
   14000a314:	rex.W ja 0x14000a317
   14000a317:	add    BYTE PTR [rax+0x42],ah
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	lods   eax,DWORD PTR ds:[rsi]
   14000a31d:	rex.X add BYTE PTR [rax],al
   14000a320:	nop
   14000a321:	js     0x14000a323
   14000a323:	add    BYTE PTR [rsi-0x22ffffbe],dh
   14000a329:	rex.X add BYTE PTR [rax],al
   14000a32c:	sbb    BYTE PTR [rbp+0x0],dh
   14000a32f:	add    bl,ah
   14000a331:	rex.X add BYTE PTR [rax],al
   14000a334:	add    DWORD PTR [rbx+0x0],eax
   14000a337:	add    BYTE PTR [rdi+rsi*2],al
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	(bad)  
   14000a33d:	rex.XB add BYTE PTR [r8],al
   14000a340:	(bad)  
   14000a341:	rex.XB add BYTE PTR [r8],al
   14000a344:	mov    al,0x76
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	xor    BYTE PTR [rbx+0x0],al
   14000a34b:	add    BYTE PTR [rax+0x43],dl
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	add    al,0x77
   14000a352:	add    BYTE PTR [rax],al
   14000a354:	push   rsi
   14000a355:	rex.XB add BYTE PTR [r8],al
   14000a358:	jno    0x14000a39d
   14000a35a:	add    BYTE PTR [rax],al
   14000a35c:	add    al,0x77
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	ja     0x14000a3a5
   14000a362:	add    BYTE PTR [rax],al
   14000a364:	mov    ebx,0x50000043
   14000a369:	js     0x14000a36b
   14000a36b:	add    BYTE PTR [rbx-0x1fffffbd],bh
   14000a371:	rex.XB add BYTE PTR [r8],al
   14000a374:	push   rax
   14000a375:	js     0x14000a377
	...

Disassembly of section .didat:

000000014000b000 <.didat>:
   14000b000:	nop
   14000b001:	add    BYTE PTR ss:[rax+0x1],al
	...
   14000b00d:	add    BYTE PTR [rax],al
   14000b00f:	add    BYTE PTR [rax+0x35],dl
   14000b012:	add    BYTE PTR [rax+0x1],al
	...
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	add    al,dh
   14000b021:	xor    eax,0x14000
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    DWORD PTR [rax],eax
   14000c00e:	add    al,BYTE PTR [rax]
   14000c010:	call   0x16880c015
   14000c015:	add    BYTE PTR [rax],al
   14000c017:	or     BYTE PTR [rbx],0x0
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	add    BYTE PTR [rax],al
   14000c01f:	adc    BYTE PTR [rax],0x0
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	pop    rax
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rax],0x0
	...
   14000c036:	add    DWORD PTR [rax],eax
   14000c038:	add    DWORD PTR [rax],eax
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	jo     0x14000c03e
   14000c03e:	add    BYTE PTR [rax+0x0],al
	...
   14000c04c:	add    BYTE PTR [rax],al
   14000c04e:	add    DWORD PTR [rax],eax
   14000c050:	add    DWORD PTR [rax],eax
   14000c052:	add    BYTE PTR [rax],al
   14000c054:	mov    BYTE PTR [rax],al
   14000c056:	add    BYTE PTR [rax+0x0],al
	...
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    DWORD PTR [rax],eax
   14000c068:	add    DWORD PTR [rax],eax
   14000c06a:	add    BYTE PTR [rax],al
   14000c06c:	movabs al,ds:0x800000
	...
   14000c07d:	add    BYTE PTR [rcx],al
   14000c07f:	add    BYTE PTR [rcx],cl
   14000c081:	add    al,0x0
   14000c083:	add    BYTE PTR [rax+0x0],bh
	...
   14000c095:	add    BYTE PTR [rcx],al
   14000c097:	add    BYTE PTR [rcx],cl
   14000c099:	add    al,0x0
   14000c09b:	add    al,cl
	...
   14000c0ad:	add    BYTE PTR [rcx],al
   14000c0af:	add    BYTE PTR [rcx],cl
   14000c0b1:	add    al,0x0
   14000c0b3:	add    al,bl
   14000c0b5:	add    BYTE PTR [rax],al
   14000c0b7:	add    BYTE PTR [rax-0x37],ah
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	push   rdx
   14000c0bd:	or     eax,0x0
   14000c0c2:	add    BYTE PTR [rax],al
   14000c0c4:	add    BYTE PTR [rax],al
   14000c0c6:	add    BYTE PTR [rax],al
   14000c0c8:	rol    ah,1
   14000c0ca:	add    BYTE PTR [rax],al
   14000c0cc:	nop
   14000c0cd:	add    al,0x0
	...
   14000c0d7:	add    BYTE PTR [rax],dl
   14000c0d9:	rol    DWORD PTR [rax],0x0
   14000c0dc:	rol    BYTE PTR [rbx],0x0
	...
   14000c0e7:	add    BYTE PTR [rip+0x45005700],cl        # 0x1850117ed
   14000c0ed:	add    BYTE PTR [rsi+0x0],dl
   14000c0f0:	push   rsp
   14000c0f1:	add    BYTE PTR [rdi+0x0],bl
   14000c0f4:	push   rsp
   14000c0f5:	add    BYTE PTR [rbp+0x0],al
   14000c0f8:	rex.WRB add BYTE PTR [r8+0x0],r10b
   14000c0fc:	rex.WR add BYTE PTR [rcx+0x0],r8b
   14000c100:	push   rsp
   14000c101:	add    BYTE PTR [rbp+0x0],al
	...
   14000c110:	rol    BYTE PTR [rbx],0x34
   14000c113:	add    BYTE PTR [rax],al
   14000c115:	add    BYTE PTR [rsi+0x0],dl
   14000c118:	push   rbx
   14000c119:	add    BYTE PTR [rdi+0x0],bl
   14000c11c:	push   rsi
   14000c11d:	add    BYTE PTR [rbp+0x0],al
   14000c120:	push   rdx
   14000c121:	add    BYTE PTR [rbx+0x0],dl
   14000c124:	rex.WB add BYTE PTR [r15+0x0],cl
   14000c128:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   14000c12c:	rex.WB add BYTE PTR [r14+0x0],cl
   14000c130:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14000c134:	add    BYTE PTR [rax],al
   14000c136:	add    BYTE PTR [rax],al
   14000c138:	mov    ebp,0xfeef04
   14000c13d:	add    BYTE PTR [rcx],al
   14000c13f:	add    BYTE PTR [rax],al
   14000c141:	add    BYTE PTR [rdx],cl
   14000c143:	add    BYTE PTR [rax],al
   14000c145:	add    BYTE PTR [rax],bpl
   14000c148:	add    BYTE PTR [rax],al
   14000c14a:	or     al,BYTE PTR [rax]
   14000c14c:	add    BYTE PTR [rax+0x0],al
   14000c14f:	sub    BYTE PTR [rdi],bh
   14000c151:	add    BYTE PTR [rax],al
   14000c153:	add    BYTE PTR [rax],al
   14000c155:	add    BYTE PTR [rax],al
   14000c157:	add    BYTE PTR [rax+rax*1],al
   14000c15a:	add    al,0x0
   14000c15c:	add    DWORD PTR [rax],eax
	...
   14000c16a:	add    BYTE PTR [rax],al
   14000c16c:	(bad)  
   14000c16d:	add    eax,DWORD PTR [rax]
   14000c16f:	add    BYTE PTR [rcx],al
   14000c171:	add    BYTE PTR [rbx+0x0],dl
   14000c174:	je     0x14000c176
   14000c176:	jb     0x14000c178
   14000c178:	imul   eax,DWORD PTR [rax],0x67006e
   14000c17e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c182:	ins    BYTE PTR es:[rdi],dx
   14000c183:	add    BYTE PTR [rbp+0x0],ah
   14000c186:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c18a:	data16 add BYTE PTR [rdi+0x0],ch
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	cli    
   14000c191:	add    al,BYTE PTR [rax]
   14000c193:	add    BYTE PTR [rcx],al
   14000c195:	add    BYTE PTR [rax],dh
   14000c197:	add    BYTE PTR [rax+rax*1],dh
   14000c19a:	xor    BYTE PTR [rax],al
   14000c19c:	cmp    DWORD PTR [rax],eax
   14000c19e:	xor    BYTE PTR [rax],al
   14000c1a0:	xor    al,0x0
   14000c1a2:	rex.X add BYTE PTR [rax],sil
   14000c1a5:	add    BYTE PTR [rax],al
   14000c1a7:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c1ab:	add    BYTE PTR [rcx],al
   14000c1ad:	add    BYTE PTR [rbx+0x0],al
   14000c1b0:	outs   dx,DWORD PTR ds:[rsi]
   14000c1b1:	add    BYTE PTR [rbp+0x0],ch
   14000c1b4:	jo     0x14000c1b6
   14000c1b6:	(bad)  
   14000c1b7:	add    BYTE PTR [rsi+0x0],ch
   14000c1ba:	jns    0x14000c1bc
   14000c1bc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c1c0:	ins    DWORD PTR es:[rdi],dx
   14000c1c1:	add    BYTE PTR [rbp+0x0],ah
   14000c1c4:	add    BYTE PTR [rax],al
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c1cc:	movsxd eax,DWORD PTR [rax]
   14000c1ce:	jb     0x14000c1d0
   14000c1d0:	outs   dx,DWORD PTR ds:[rsi]
   14000c1d1:	add    BYTE PTR [rbx+0x0],dh
   14000c1d4:	outs   dx,DWORD PTR ds:[rsi]
   14000c1d5:	add    BYTE PTR [rsi+0x0],ah
   14000c1d8:	je     0x14000c1da
   14000c1da:	and    BYTE PTR [rax],al
   14000c1dc:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c1e0:	jb     0x14000c1e2
   14000c1e2:	jo     0x14000c1e4
   14000c1e4:	outs   dx,DWORD PTR ds:[rsi]
   14000c1e5:	add    BYTE PTR [rdx+0x0],dh
   14000c1e8:	(bad)  
   14000c1e9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c1ed:	add    BYTE PTR [rdi+0x0],ch
   14000c1f0:	outs   dx,BYTE PTR ds:[rsi]
   14000c1f1:	add    BYTE PTR [rax],al
   14000c1f3:	add    BYTE PTR [rax+rax*1+0x1002e],al
   14000c1fa:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c1fe:	ins    BYTE PTR es:[rdi],dx
   14000c1ff:	add    BYTE PTR [rbp+0x0],ah
   14000c202:	add    BYTE PTR [rbp+0x0],r12b
   14000c206:	jae    0x14000c208
   14000c208:	movsxd eax,DWORD PTR [rax]
   14000c20a:	jb     0x14000c20c
   14000c20c:	imul   eax,DWORD PTR [rax],0x740070
   14000c212:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c218:	add    BYTE PTR [rax],al
   14000c21a:	add    BYTE PTR [rax],al
   14000c21c:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000c220:	jae    0x14000c222
   14000c222:	je     0x14000c224
   14000c224:	and    BYTE PTR [rax],al
   14000c226:	push   rax
   14000c227:	add    BYTE PTR [rdx+0x0],dh
   14000c22a:	outs   dx,DWORD PTR ds:[rsi]
   14000c22b:	add    BYTE PTR [rbx+0x0],ah
   14000c22e:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c232:	jae    0x14000c234
   14000c234:	and    BYTE PTR [rax],al
   14000c236:	data16 add BYTE PTR [rdi+0x0],ch
   14000c23a:	jb     0x14000c23c
   14000c23c:	and    BYTE PTR [rax],al
   14000c23e:	push   rax
   14000c23f:	add    BYTE PTR [rbp+0x0],dh
   14000c242:	jae    0x14000c244
   14000c244:	push   0x52002000
   14000c249:	add    BYTE PTR [rdi+0x0],ch
   14000c24c:	jne    0x14000c24e
   14000c24e:	je     0x14000c250
   14000c250:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c254:	and    BYTE PTR [rax],al
   14000c256:	add    BYTE PTR [r8+r8*1+0x69],bpl
   14000c25b:	add    BYTE PTR [rbp+0x0],ah
   14000c25e:	outs   dx,BYTE PTR ds:[rsi]
   14000c25f:	add    BYTE PTR [rax+rax*1+0x20],dh
   14000c263:	add    BYTE PTR [rdi+0x0],ch
   14000c266:	data16 add BYTE PTR [rax],ah
   14000c269:	add    BYTE PTR [rdi+0x0],cl
   14000c26c:	rex.WRB add BYTE PTR [r9+0x0],r8b
   14000c270:	sub    eax,0x50004300
   14000c275:	add    BYTE PTR [rax],al
   14000c277:	add    BYTE PTR [rsi+0x0],ah
   14000c27a:	and    eax,DWORD PTR [rax]
   14000c27c:	add    DWORD PTR [rax],eax
   14000c27e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c282:	ins    BYTE PTR es:[rdi],dx
   14000c283:	add    BYTE PTR [rbp+0x0],ah
   14000c286:	push   rsi
   14000c287:	add    BYTE PTR [rbp+0x0],ah
   14000c28a:	jb     0x14000c28c
   14000c28c:	jae    0x14000c28e
   14000c28e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c294:	add    BYTE PTR [rax],al
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	xor    DWORD PTR [rax],eax
   14000c29a:	xor    BYTE PTR [rax],al
   14000c29c:	add    BYTE PTR cs:[rax],dh
   14000c29f:	add    BYTE PTR [rsi],ch
   14000c2a1:	add    BYTE PTR [rcx],dh
   14000c2a3:	add    BYTE PTR [rax],dh
   14000c2a5:	add    BYTE PTR [rdx],dh
   14000c2a7:	add    BYTE PTR [rax+rax*1],dh
   14000c2aa:	xor    BYTE PTR [rax],al
   14000c2ac:	add    BYTE PTR cs:[rcx],dh
   14000c2af:	add    BYTE PTR [rsi],dh
   14000c2b1:	add    BYTE PTR [rbx],dh
   14000c2b3:	add    BYTE PTR [rax],bh
   14000c2b5:	add    BYTE PTR [rax+rax*1],dh
   14000c2b8:	and    BYTE PTR [rax],al
   14000c2ba:	sub    BYTE PTR [rax],al
   14000c2bc:	je     0x14000c2be
   14000c2be:	push   0x2e003100
   14000c2c3:	add    BYTE PTR [rcx],dh
   14000c2c5:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f2cb
   14000c2cb:	add    BYTE PTR [rax],dh
   14000c2cd:	add    BYTE PTR [rcx],bh
   14000c2cf:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f3d5
   14000c2d5:	add    BYTE PTR [rax],dh
   14000c2d7:	add    BYTE PTR [rax],dh
   14000c2d9:	add    BYTE PTR [rcx],ch
   14000c2db:	add    BYTE PTR [rax],al
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	add    BYTE PTR [rax+rax*1],dh
   14000c2e2:	or     al,BYTE PTR [rax]
   14000c2e4:	add    DWORD PTR [rax],eax
   14000c2e6:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c2ea:	je     0x14000c2ec
   14000c2ec:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c2f0:	outs   dx,BYTE PTR ds:[rsi]
   14000c2f1:	add    BYTE PTR [rcx+0x0],ah
   14000c2f4:	ins    BYTE PTR es:[rdi],dx
   14000c2f5:	add    BYTE PTR [rsi+0x0],cl
   14000c2f8:	(bad)  
   14000c2f9:	add    BYTE PTR [rbp+0x0],ch
   14000c2fc:	add    BYTE PTR gs:[rax],al
   14000c2ff:	add    BYTE PTR [rax+rax*1+0x6d],ah
   14000c303:	add    BYTE PTR [rbx+0x0],ah
   14000c306:	data16 add BYTE PTR [rdi+0x0],ah
   14000c30a:	push   0x73006f00
   14000c30f:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000c313:	add    BYTE PTR [rax+0x1002e00],al
   14000c319:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c31d:	add    BYTE PTR [rdi+0x0],ah
   14000c320:	(bad)  
   14000c321:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c325:	add    BYTE PTR [rdi+0x0],ch
   14000c328:	jo     0x14000c32a
   14000c32a:	jns    0x14000c32c
   14000c32c:	jb     0x14000c32e
   14000c32e:	imul   eax,DWORD PTR [rax],0x680067
   14000c334:	je     0x14000c336
   14000c336:	add    BYTE PTR [rax],al
   14000c338:	test   eax,0x4d002000
   14000c33d:	add    BYTE PTR [rcx+0x0],ch
   14000c340:	movsxd eax,DWORD PTR [rax]
   14000c342:	jb     0x14000c344
   14000c344:	outs   dx,DWORD PTR ds:[rsi]
   14000c345:	add    BYTE PTR [rbx+0x0],dh
   14000c348:	outs   dx,DWORD PTR ds:[rsi]
   14000c349:	add    BYTE PTR [rsi+0x0],ah
   14000c34c:	je     0x14000c34e
   14000c34e:	and    BYTE PTR [rax],al
   14000c350:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c354:	jb     0x14000c356
   14000c356:	jo     0x14000c358
   14000c358:	outs   dx,DWORD PTR ds:[rsi]
   14000c359:	add    BYTE PTR [rdx+0x0],dh
   14000c35c:	(bad)  
   14000c35d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c361:	add    BYTE PTR [rdi+0x0],ch
   14000c364:	outs   dx,BYTE PTR ds:[rsi]
   14000c365:	add    BYTE PTR [rsi],ch
   14000c367:	add    BYTE PTR [rax],ah
   14000c369:	add    BYTE PTR [rcx+0x0],al
   14000c36c:	ins    BYTE PTR es:[rdi],dx
   14000c36d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c371:	add    BYTE PTR [rdx+0x0],dh
   14000c374:	imul   eax,DWORD PTR [rax],0x680067
   14000c37a:	je     0x14000c37c
   14000c37c:	jae    0x14000c37e
   14000c37e:	and    BYTE PTR [rax],al
   14000c380:	jb     0x14000c382
   14000c382:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c386:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c38a:	jbe    0x14000c38c
   14000c38c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c391:	add    BYTE PTR [rax],al
   14000c393:	add    BYTE PTR [rax+rax*1+0xe],al
   14000c397:	add    BYTE PTR [rcx],al
   14000c399:	add    BYTE PTR [rdi+0x0],cl
   14000c39c:	jb     0x14000c39e
   14000c39e:	imul   eax,DWORD PTR [rax],0x690067
   14000c3a4:	outs   dx,BYTE PTR ds:[rsi]
   14000c3a5:	add    BYTE PTR [rcx+0x0],ah
   14000c3a8:	ins    BYTE PTR es:[rdi],dx
   14000c3a9:	add    BYTE PTR [rsi+0x0],al
   14000c3ac:	imul   eax,DWORD PTR [rax],0x65006c
   14000c3b2:	outs   dx,BYTE PTR ds:[rsi]
   14000c3b3:	add    BYTE PTR [rcx+0x0],ah
   14000c3b6:	ins    DWORD PTR es:[rdi],dx
   14000c3b7:	add    BYTE PTR [rbp+0x0],ah
   14000c3ba:	add    BYTE PTR [rax],al
   14000c3bc:	add    BYTE PTR fs:[rbp+0x0],ch
   14000c3c0:	movsxd eax,DWORD PTR [rax]
   14000c3c2:	data16 add BYTE PTR [rdi+0x0],ah
   14000c3c6:	push   0x73006f00
   14000c3cb:	add    BYTE PTR [rax+rax*1+0x2e],dh
   14000c3cf:	add    BYTE PTR [rbp+0x0],ah
   14000c3d2:	js     0x14000c3d4
   14000c3d4:	add    BYTE PTR gs:[rax],al
   14000c3d7:	add    BYTE PTR [rdx+0x0],ch
   14000c3da:	and    eax,0x50000100
   14000c3df:	add    BYTE PTR [rdx+0x0],dh
   14000c3e2:	outs   dx,DWORD PTR ds:[rsi]
   14000c3e3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c3e7:	add    BYTE PTR [rbx+0x0],ah
   14000c3ea:	je     0x14000c3ec
   14000c3ec:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c3f0:	ins    DWORD PTR es:[rdi],dx
   14000c3f1:	add    BYTE PTR [rbp+0x0],ah
   14000c3f4:	add    BYTE PTR [rax],al
   14000c3f6:	add    BYTE PTR [rax],al
   14000c3f8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c3fc:	movsxd eax,DWORD PTR [rax]
   14000c3fe:	jb     0x14000c400
   14000c400:	outs   dx,DWORD PTR ds:[rsi]
   14000c401:	add    BYTE PTR [rbx+0x0],dh
   14000c404:	outs   dx,DWORD PTR ds:[rsi]
   14000c405:	add    BYTE PTR [rsi+0x0],ah
   14000c408:	je     0x14000c40a
   14000c40a:	scas   al,BYTE PTR es:[rdi]
   14000c40b:	add    BYTE PTR [rax],ah
   14000c40d:	add    BYTE PTR [rdi+0x0],dl
   14000c410:	imul   eax,DWORD PTR [rax],0x64006e
   14000c416:	outs   dx,DWORD PTR ds:[rsi]
   14000c417:	add    BYTE PTR [rdi+0x0],dh
   14000c41a:	jae    0x14000c41c
   14000c41c:	scas   al,BYTE PTR es:[rdi]
   14000c41d:	add    BYTE PTR [rax],ah
   14000c41f:	add    BYTE PTR [rdi+0x0],cl
   14000c422:	jo     0x14000c424
   14000c424:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c428:	(bad)  
   14000c429:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c42d:	add    BYTE PTR [rsi+0x0],ch
   14000c430:	add    BYTE PTR [eax],ah
   14000c433:	add    BYTE PTR [rbx+0x0],dl
   14000c436:	jns    0x14000c438
   14000c438:	jae    0x14000c43a
   14000c43a:	je     0x14000c43c
   14000c43c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c440:	add    BYTE PTR [rax],al
   14000c442:	add    BYTE PTR [rax],al
   14000c444:	rex.RX add BYTE PTR [rcx],r10b
   14000c447:	add    BYTE PTR [rcx],al
   14000c449:	add    BYTE PTR [rax+0x0],dl
   14000c44c:	jb     0x14000c44e
   14000c44e:	outs   dx,DWORD PTR ds:[rsi]
   14000c44f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c453:	add    BYTE PTR [rbx+0x0],ah
   14000c456:	je     0x14000c458
   14000c458:	push   rsi
   14000c459:	add    BYTE PTR [rbp+0x0],ah
   14000c45c:	jb     0x14000c45e
   14000c45e:	jae    0x14000c460
   14000c460:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c466:	add    BYTE PTR [rax],al
   14000c468:	xor    DWORD PTR [rax],eax
   14000c46a:	xor    BYTE PTR [rax],al
   14000c46c:	add    BYTE PTR cs:[rax],dh
   14000c46f:	add    BYTE PTR [rsi],ch
   14000c471:	add    BYTE PTR [rcx],dh
   14000c473:	add    BYTE PTR [rax],dh
   14000c475:	add    BYTE PTR [rdx],dh
   14000c477:	add    BYTE PTR [rax+rax*1],dh
   14000c47a:	xor    BYTE PTR [rax],al
   14000c47c:	add    BYTE PTR cs:[rcx],dh
   14000c47f:	add    BYTE PTR [rsi],dh
   14000c481:	add    BYTE PTR [rbx],dh
   14000c483:	add    BYTE PTR [rax],bh
   14000c485:	add    BYTE PTR [rax+rax*1],dh
   14000c488:	add    BYTE PTR [rax],al
   14000c48a:	add    BYTE PTR [rax],al
   14000c48c:	add    BYTE PTR [rax],r8b
   14000c48f:	add    BYTE PTR [rcx],al
   14000c491:	add    BYTE PTR [rsi+0x0],dl
   14000c494:	(bad)  
   14000c495:	add    BYTE PTR [rdx+0x0],dh
   14000c498:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c49c:	ins    BYTE PTR es:[rdi],dx
   14000c49d:	add    BYTE PTR [rbp+0x0],ah
   14000c4a0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c4a4:	data16 add BYTE PTR [rdi+0x0],ch
   14000c4a8:	add    BYTE PTR [rax],al
   14000c4aa:	add    BYTE PTR [rax],al
   14000c4ac:	and    al,0x0
   14000c4ae:	add    al,0x0
   14000c4b0:	add    BYTE PTR [rax],al
   14000c4b2:	push   rsp
   14000c4b3:	add    BYTE PTR [rdx+0x0],dh
   14000c4b6:	(bad)  
   14000c4b7:	add    BYTE PTR [rsi+0x0],ch
   14000c4ba:	jae    0x14000c4bc
   14000c4bc:	ins    BYTE PTR es:[rdi],dx
   14000c4bd:	add    BYTE PTR [rcx+0x0],ah
   14000c4c0:	je     0x14000c4c2
   14000c4c2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c4c8:	add    BYTE PTR [rax],al
   14000c4ca:	add    BYTE PTR [rax],al
   14000c4cc:	or     DWORD PTR [rax+rsi*4],eax
   14000c4cf:	add    al,0x4
   14000c4d1:	add    BYTE PTR [rax],al
   14000c4d3:	add    BYTE PTR [rax],al
   14000c4d5:	add    BYTE PTR [rax],al
   14000c4d7:	xor    BYTE PTR [rax],al
   14000c4d9:	add    BYTE PTR [rax],al
   14000c4db:	xor    BYTE PTR [rax+rax*1],dh
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	add    al,BYTE PTR [rax]
   14000c4e2:	add    BYTE PTR [rax+0x2],dl
   14000c4e5:	add    BYTE PTR [rax],al
   14000c4e7:	push   rax
   14000c4e8:	rex.W add BYTE PTR [rax],al
   14000c4eb:	add    BYTE PTR [rax+rax*1],al
   14000c4ee:	add    BYTE PTR [rax+0x4],dl
   14000c4f1:	add    BYTE PTR [rax],al
   14000c4f3:	push   rax
   14000c4f4:	pop    rsp
   14000c4f5:	add    BYTE PTR [rax],al
   14000c4f7:	add    BYTE PTR [rcx],al
   14000c4f9:	add    BYTE PTR [rax],al
   14000c4fb:	mov    al,0x7
   14000c4fd:	add    BYTE PTR [rax],al
   14000c4ff:	mov    al,0x7c
   14000c501:	add    BYTE PTR [rax],al
   14000c503:	add    BYTE PTR [rax+rax*1],dl
   14000c506:	add    DWORD PTR [rax],eax
   14000c508:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c50c:	data16 add BYTE PTR [rdi+0x0],ch
   14000c510:	or     eax,0xa00
   14000c515:	add    BYTE PTR [rax],al
   14000c517:	add    BYTE PTR [rax+rax*1],dl
   14000c51a:	add    DWORD PTR [rax],eax
   14000c51c:	add    BYTE PTR [r10+0x0],r14b
   14000c520:	jb     0x14000c522
   14000c522:	outs   dx,DWORD PTR ds:[rsi]
   14000c523:	add    BYTE PTR [rdx+0x0],dh
   14000c526:	or     eax,0xa00
   14000c52b:	add    BYTE PTR [rax],ah
   14000c52d:	add    BYTE PTR [rcx],al
   14000c52f:	add    BYTE PTR [rcx+0x0],cl
   14000c532:	outs   dx,BYTE PTR ds:[rsi]
   14000c533:	add    BYTE PTR [rsi+0x0],ah
   14000c536:	outs   dx,DWORD PTR ds:[rsi]
   14000c537:	add    BYTE PTR [rdx+0x0],dh
   14000c53a:	ins    DWORD PTR es:[rdi],dx
   14000c53b:	add    BYTE PTR [rcx+0x0],ah
   14000c53e:	je     0x14000c540
   14000c540:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c546:	or     eax,0xa00
   14000c54b:	add    al,bl
   14000c54d:	add    BYTE PTR [rcx],al
   14000c54f:	add    BYTE PTR [rbx+0x0],al
   14000c552:	outs   dx,DWORD PTR ds:[rsi]
   14000c553:	add    BYTE PTR [rsi+0x0],ch
   14000c556:	data16 add BYTE PTR [rcx+0x0],ch
   14000c55a:	add    BYTE PTR [ebp+0x0],dh
   14000c55e:	jb     0x14000c560
   14000c560:	(bad)  
   14000c561:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c565:	add    BYTE PTR [rdi+0x0],ch
   14000c568:	outs   dx,BYTE PTR ds:[rsi]
   14000c569:	add    BYTE PTR [rax],ah
   14000c56b:	add    BYTE PTR [rax+0x0],cl
   14000c56e:	outs   dx,DWORD PTR ds:[rsi]
   14000c56f:	add    BYTE PTR [rbx+0x0],dh
   14000c572:	je     0x14000c574
   14000c574:	and    BYTE PTR [rax],al
   14000c576:	jo     0x14000c578
   14000c578:	jb     0x14000c57a
   14000c57a:	outs   dx,DWORD PTR ds:[rsi]
   14000c57b:	add    BYTE PTR [rbx+0x0],ah
   14000c57e:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c582:	jae    0x14000c584
   14000c584:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000c589:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000c58d:	add    BYTE PTR [rbp+0x0],ah
   14000c590:	and    BYTE PTR [rax],al
   14000c592:	ins    DWORD PTR es:[rdi],dx
   14000c593:	add    BYTE PTR [rbp+0x0],ah
   14000c596:	jae    0x14000c598
   14000c598:	jae    0x14000c59a
   14000c59a:	(bad)  
   14000c59b:	add    BYTE PTR [rdi+0x0],ah
   14000c59e:	add    BYTE PTR gs:[rsi],ch
   14000c5a1:	add    BYTE PTR [rax],ah
   14000c5a3:	add    BYTE PTR [rax+0x0],ch
   14000c5a6:	jb     0x14000c5a8
   14000c5a8:	cmp    al,BYTE PTR [rax]
   14000c5aa:	and    BYTE PTR [rax],al
   14000c5ac:	and    eax,0x2c003100
   14000c5b1:	add    BYTE PTR [rax],ah
   14000c5b3:	add    BYTE PTR [rdx+0x0],dh
   14000c5b6:	outs   dx,DWORD PTR ds:[rsi]
   14000c5b7:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000c5bb:	add    BYTE PTR [rdx],bh
   14000c5bd:	add    BYTE PTR [rax],ah
   14000c5bf:	add    BYTE PTR [rip+0x2c003200],ah        # 0x16c00f7c5
   14000c5c5:	add    BYTE PTR [rax],ah
   14000c5c7:	add    BYTE PTR [rcx+0x0],ah
   14000c5ca:	movsxd eax,DWORD PTR [rax]
   14000c5cc:	movsxd eax,DWORD PTR [rax]
   14000c5ce:	outs   dx,DWORD PTR ds:[rsi]
   14000c5cf:	add    BYTE PTR [rbp+0x0],dh
   14000c5d2:	outs   dx,BYTE PTR ds:[rsi]
   14000c5d3:	add    BYTE PTR [rax+rax*1+0x3a],dh
   14000c5d7:	add    BYTE PTR [rax],ah
   14000c5d9:	add    BYTE PTR [rip+0x2c003300],ah        # 0x16c00f8df
   14000c5df:	add    BYTE PTR [rax],ah
   14000c5e1:	add    BYTE PTR [rbx+0x0],ah
   14000c5e4:	outs   dx,DWORD PTR ds:[rsi]
   14000c5e5:	add    BYTE PTR [rsi+0x0],ch
   14000c5e8:	je     0x14000c5ea
   14000c5ea:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c5ee:	je     0x14000c5f0
   14000c5f0:	and    BYTE PTR [rax],al
   14000c5f2:	je     0x14000c5f4
   14000c5f4:	jns    0x14000c5f6
   14000c5f6:	jo     0x14000c5f8
   14000c5f8:	add    BYTE PTR gs:[rdx],bh
   14000c5fb:	add    BYTE PTR [rax],ah
   14000c5fd:	add    BYTE PTR [rip+0x2c003400],ah        # 0x16c00fa03
   14000c603:	add    BYTE PTR [rax],ah
   14000c605:	add    BYTE PTR [rbx+0x0],dh
   14000c608:	outs   dx,DWORD PTR ds:[rsi]
   14000c609:	add    BYTE PTR [rbp+0x0],dh
   14000c60c:	jb     0x14000c60e
   14000c60e:	movsxd eax,DWORD PTR [rax]
   14000c610:	add    BYTE PTR gs:[rdx],bh
   14000c613:	add    BYTE PTR [rax],ah
   14000c615:	add    BYTE PTR [rip+0x2e003500],ah        # 0x16e00fb1b
   14000c61b:	add    BYTE PTR [rip+0xa00],cl        # 0x14000d021
   14000c621:	add    BYTE PTR [rax],al
   14000c623:	add    BYTE PTR [rax],ah
   14000c625:	add    DWORD PTR [rcx],eax
   14000c627:	add    BYTE PTR [rbx+0x0],al
   14000c62a:	outs   dx,DWORD PTR ds:[rsi]
   14000c62b:	add    BYTE PTR [rsi+0x0],ch
   14000c62e:	data16 add BYTE PTR [rcx+0x0],ch
   14000c632:	add    BYTE PTR [ebp+0x0],dh
   14000c636:	jb     0x14000c638
   14000c638:	(bad)  
   14000c639:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c63d:	add    BYTE PTR [rdi+0x0],ch
   14000c640:	outs   dx,BYTE PTR ds:[rsi]
   14000c641:	add    BYTE PTR [rax],ah
   14000c643:	add    BYTE PTR [rax+0x0],cl
   14000c646:	outs   dx,DWORD PTR ds:[rsi]
   14000c647:	add    BYTE PTR [rbx+0x0],dh
   14000c64a:	je     0x14000c64c
   14000c64c:	and    BYTE PTR [rax],al
   14000c64e:	jo     0x14000c650
   14000c650:	jb     0x14000c652
   14000c652:	outs   dx,DWORD PTR ds:[rsi]
   14000c653:	add    BYTE PTR [rbx+0x0],ah
   14000c656:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c65a:	jae    0x14000c65c
   14000c65c:	imul   eax,DWORD PTR [rax],0x67006e
   14000c662:	and    BYTE PTR [rax],al
   14000c664:	ins    DWORD PTR es:[rdi],dx
   14000c665:	add    BYTE PTR [rbp+0x0],ah
   14000c668:	jae    0x14000c66a
   14000c66a:	jae    0x14000c66c
   14000c66c:	(bad)  
   14000c66d:	add    BYTE PTR [rdi+0x0],ah
   14000c670:	add    BYTE PTR gs:[rax],ah
   14000c673:	add    BYTE PTR [rsi+0x0],ah
   14000c676:	(bad)  
   14000c677:	add    BYTE PTR [rcx+0x0],ch
   14000c67a:	ins    BYTE PTR es:[rdi],dx
   14000c67b:	add    BYTE PTR [rbp+0x0],ah
   14000c67e:	add    BYTE PTR fs:[rsi],ch
   14000c681:	add    BYTE PTR [rax],ah
   14000c683:	add    BYTE PTR [rax+0x0],ch
   14000c686:	jb     0x14000c688
   14000c688:	cmp    al,BYTE PTR [rax]
   14000c68a:	and    BYTE PTR [rax],al
   14000c68c:	and    eax,0x2c003100
   14000c691:	add    BYTE PTR [rax],ah
   14000c693:	add    BYTE PTR [rax+0x0],dh
   14000c696:	jb     0x14000c698
   14000c698:	outs   dx,DWORD PTR ds:[rsi]
   14000c699:	add    BYTE PTR [rbx+0x0],ah
   14000c69c:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c6a0:	jae    0x14000c6a2
   14000c6a2:	imul   eax,DWORD PTR [rax],0x67006e
   14000c6a8:	and    BYTE PTR [rax],al
   14000c6aa:	jae    0x14000c6ac
   14000c6ac:	je     0x14000c6ae
   14000c6ae:	add    BYTE PTR gs:[rax+0x0],dh
   14000c6b2:	cmp    al,BYTE PTR [rax]
   14000c6b4:	and    BYTE PTR [rax],al
   14000c6b6:	and    eax,0x2c003200
   14000c6bb:	add    BYTE PTR [rax],ah
   14000c6bd:	add    BYTE PTR [rax+0x0],dh
   14000c6c0:	outs   dx,DWORD PTR ds:[rsi]
   14000c6c1:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000c6c5:	add    BYTE PTR [rbx+0x0],ah
   14000c6c8:	jns    0x14000c6ca
   14000c6ca:	cmp    al,BYTE PTR [rax]
   14000c6cc:	and    BYTE PTR [rax],al
   14000c6ce:	and    eax,0x2c003300
   14000c6d3:	add    BYTE PTR [rax],ah
   14000c6d5:	add    BYTE PTR [rdx+0x0],dh
   14000c6d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c6d9:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000c6dd:	add    BYTE PTR [rdx],bh
   14000c6df:	add    BYTE PTR [rax],ah
   14000c6e1:	add    BYTE PTR [rip+0x2c003400],ah        # 0x16c00fae7
   14000c6e7:	add    BYTE PTR [rax],ah
   14000c6e9:	add    BYTE PTR [rcx+0x0],ah
   14000c6ec:	movsxd eax,DWORD PTR [rax]
   14000c6ee:	movsxd eax,DWORD PTR [rax]
   14000c6f0:	outs   dx,DWORD PTR ds:[rsi]
   14000c6f1:	add    BYTE PTR [rbp+0x0],dh
   14000c6f4:	outs   dx,BYTE PTR ds:[rsi]
   14000c6f5:	add    BYTE PTR [rax+rax*1+0x3a],dh
   14000c6f9:	add    BYTE PTR [rax],ah
   14000c6fb:	add    BYTE PTR [rip+0x2c003500],ah        # 0x16c00fc01
   14000c701:	add    BYTE PTR [rax],ah
   14000c703:	add    BYTE PTR [rbx+0x0],ah
   14000c706:	outs   dx,DWORD PTR ds:[rsi]
   14000c707:	add    BYTE PTR [rsi+0x0],ch
   14000c70a:	je     0x14000c70c
   14000c70c:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c710:	je     0x14000c712
   14000c712:	and    BYTE PTR [rax],al
   14000c714:	je     0x14000c716
   14000c716:	jns    0x14000c718
   14000c718:	jo     0x14000c71a
   14000c71a:	add    BYTE PTR gs:[rdx],bh
   14000c71d:	add    BYTE PTR [rax],ah
   14000c71f:	add    BYTE PTR [rip+0x2c003600],ah        # 0x16c00fd25
   14000c725:	add    BYTE PTR [rax],ah
   14000c727:	add    BYTE PTR [rbx+0x0],dh
   14000c72a:	outs   dx,DWORD PTR ds:[rsi]
   14000c72b:	add    BYTE PTR [rbp+0x0],dh
   14000c72e:	jb     0x14000c730
   14000c730:	movsxd eax,DWORD PTR [rax]
   14000c732:	add    BYTE PTR gs:[rdx],bh
   14000c735:	add    BYTE PTR [rax],ah
   14000c737:	add    BYTE PTR [rip+0x2e003700],ah        # 0x16e00fe3d
   14000c73d:	add    BYTE PTR [rip+0xa00],cl        # 0x14000d143
   14000c743:	add    BYTE PTR [rax+0x0],ch
   14000c746:	add    DWORD PTR [rax],eax
   14000c748:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c74c:	outs   dx,BYTE PTR ds:[rsi]
   14000c74d:	add    BYTE PTR [rsi+0x0],ah
   14000c750:	imul   eax,DWORD PTR [rax],0x750067
   14000c756:	jb     0x14000c758
   14000c758:	(bad)  
   14000c759:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c75d:	add    BYTE PTR [rdi+0x0],ch
   14000c760:	outs   dx,BYTE PTR ds:[rsi]
   14000c761:	add    BYTE PTR [rax],ah
   14000c763:	add    BYTE PTR [rax+0x0],cl
   14000c766:	outs   dx,DWORD PTR ds:[rsi]
   14000c767:	add    BYTE PTR [rbx+0x0],dh
   14000c76a:	je     0x14000c76c
   14000c76c:	and    BYTE PTR [rax],al
   14000c76e:	ins    DWORD PTR es:[rdi],dx
   14000c76f:	add    BYTE PTR [rbp+0x0],ah
   14000c772:	jae    0x14000c774
   14000c774:	jae    0x14000c776
   14000c776:	(bad)  
   14000c777:	add    BYTE PTR [rdi+0x0],ah
   14000c77a:	add    BYTE PTR gs:[rax],ah
   14000c77d:	add    BYTE PTR [rbx+0x0],dh
   14000c780:	jne    0x14000c782
   14000c782:	movsxd eax,DWORD PTR [rax]
   14000c784:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c788:	jae    0x14000c78a
   14000c78a:	data16 add BYTE PTR [rbp+0x0],dh
   14000c78e:	ins    BYTE PTR es:[rdi],dx
   14000c78f:	add    BYTE PTR [rax+rax*1+0x79],ch
   14000c793:	add    BYTE PTR [rax],ah
   14000c795:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c799:	add    BYTE PTR [rbx+0x0],ah
   14000c79c:	outs   dx,DWORD PTR ds:[rsi]
   14000c79d:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c7a1:	add    BYTE PTR [rax+rax*1+0x2e],ah
   14000c7a5:	add    BYTE PTR [rip+0xa00],cl        # 0x14000d1ab
   14000c7ab:	add    BYTE PTR [rax+rax*1+0x1],ch
   14000c7af:	add    BYTE PTR [rbx+0x0],al
   14000c7b2:	outs   dx,DWORD PTR ds:[rsi]
   14000c7b3:	add    BYTE PTR [rsi+0x0],ch
   14000c7b6:	data16 add BYTE PTR [rcx+0x0],ch
   14000c7ba:	add    BYTE PTR [ebp+0x0],dh
   14000c7be:	jb     0x14000c7c0
   14000c7c0:	(bad)  
   14000c7c1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c7c5:	add    BYTE PTR [rdi+0x0],ch
   14000c7c8:	outs   dx,BYTE PTR ds:[rsi]
   14000c7c9:	add    BYTE PTR [rax],ah
   14000c7cb:	add    BYTE PTR [rax+0x0],cl
   14000c7ce:	outs   dx,DWORD PTR ds:[rsi]
   14000c7cf:	add    BYTE PTR [rbx+0x0],dh
   14000c7d2:	je     0x14000c7d4
   14000c7d4:	and    BYTE PTR [rax],al
   14000c7d6:	ins    DWORD PTR es:[rdi],dx
   14000c7d7:	add    BYTE PTR [rbp+0x0],ah
   14000c7da:	jae    0x14000c7dc
   14000c7dc:	jae    0x14000c7de
   14000c7de:	(bad)  
   14000c7df:	add    BYTE PTR [rdi+0x0],ah
   14000c7e2:	add    BYTE PTR gs:[rax],ah
   14000c7e5:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c7e9:	add    BYTE PTR [rbx+0x0],ah
   14000c7ec:	outs   dx,DWORD PTR ds:[rsi]
   14000c7ed:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000c7f1:	add    BYTE PTR [rax],ah
   14000c7f3:	add    BYTE PTR [rsi+0x0],ah
   14000c7f6:	(bad)  
   14000c7f7:	add    BYTE PTR [rcx+0x0],ch
   14000c7fa:	ins    BYTE PTR es:[rdi],dx
   14000c7fb:	add    BYTE PTR [rbp+0x0],ah
   14000c7fe:	add    BYTE PTR fs:[rsi],ch
   14000c801:	add    BYTE PTR [rax],ah
   14000c803:	add    BYTE PTR [rax+0x0],ch
   14000c806:	jb     0x14000c808
   14000c808:	cmp    al,BYTE PTR [rax]
   14000c80a:	and    BYTE PTR [rax],al
   14000c80c:	and    eax,0x2e003100
   14000c811:	add    BYTE PTR [rip+0xa00],cl        # 0x14000d217
   14000c817:	add    BYTE PTR [rax+0x0],ah
   14000c81a:	add    DWORD PTR [rax],eax
   14000c81c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c820:	outs   dx,BYTE PTR ds:[rsi]
   14000c821:	add    BYTE PTR [rsi+0x0],ah
   14000c824:	imul   eax,DWORD PTR [rax],0x750067
   14000c82a:	jb     0x14000c82c
   14000c82c:	(bad)  
   14000c82d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c831:	add    BYTE PTR [rdi+0x0],ch
   14000c834:	outs   dx,BYTE PTR ds:[rsi]
   14000c835:	add    BYTE PTR [rax],ah
   14000c837:	add    BYTE PTR [rax+0x0],cl
   14000c83a:	outs   dx,DWORD PTR ds:[rsi]
   14000c83b:	add    BYTE PTR [rbx+0x0],dh
   14000c83e:	je     0x14000c840
   14000c840:	and    BYTE PTR [rax],al
   14000c842:	movsxd eax,DWORD PTR [rax]
   14000c844:	outs   dx,DWORD PTR ds:[rsi]
   14000c845:	add    BYTE PTR [rsi+0x0],ch
   14000c848:	data16 add BYTE PTR [rcx+0x0],ch
   14000c84c:	add    BYTE PTR [ebp+0x0],dh
   14000c850:	jb     0x14000c852
   14000c852:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000c857:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000c85b:	add    BYTE PTR [rbp+0x0],ah
   14000c85e:	and    BYTE PTR [rax],al
   14000c860:	ins    DWORD PTR es:[rdi],dx
   14000c861:	add    BYTE PTR [rbp+0x0],ah
   14000c864:	jae    0x14000c866
   14000c866:	jae    0x14000c868
   14000c868:	(bad)  
   14000c869:	add    BYTE PTR [rdi+0x0],ah
   14000c86c:	add    BYTE PTR gs:[rsi],ch
   14000c86f:	add    BYTE PTR [rip+0xa00],cl        # 0x14000d275
   14000c875:	add    BYTE PTR [rax],al
   14000c877:	add    BYTE PTR [rax+0x0],bh
   14000c87a:	add    DWORD PTR [rax],eax
   14000c87c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c880:	outs   dx,BYTE PTR ds:[rsi]
   14000c881:	add    BYTE PTR [rsi+0x0],ah
   14000c884:	imul   eax,DWORD PTR [rax],0x750067
   14000c88a:	jb     0x14000c88c
   14000c88c:	(bad)  
   14000c88d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c891:	add    BYTE PTR [rdi+0x0],ch
   14000c894:	outs   dx,BYTE PTR ds:[rsi]
   14000c895:	add    BYTE PTR [rax],ah
   14000c897:	add    BYTE PTR [rax+0x0],cl
   14000c89a:	outs   dx,DWORD PTR ds:[rsi]
   14000c89b:	add    BYTE PTR [rbx+0x0],dh
   14000c89e:	je     0x14000c8a0
   14000c8a0:	and    BYTE PTR [rax],al
   14000c8a2:	ins    DWORD PTR es:[rdi],dx
   14000c8a3:	add    BYTE PTR [rbp+0x0],ah
   14000c8a6:	jae    0x14000c8a8
   14000c8a8:	jae    0x14000c8aa
   14000c8aa:	(bad)  
   14000c8ab:	add    BYTE PTR [rdi+0x0],ah
   14000c8ae:	add    BYTE PTR gs:[rax],ah
   14000c8b1:	add    BYTE PTR [rbx+0x0],ah
   14000c8b4:	outs   dx,DWORD PTR ds:[rsi]
   14000c8b5:	add    BYTE PTR [rsi+0x0],ch
   14000c8b8:	data16 add BYTE PTR [rcx+0x0],ch
   14000c8bc:	add    BYTE PTR [ebp+0x0],dh
   14000c8c0:	jb     0x14000c8c2
   14000c8c2:	(bad)  
   14000c8c3:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c8c7:	add    BYTE PTR [rdi+0x0],ch
   14000c8ca:	outs   dx,BYTE PTR ds:[rsi]
   14000c8cb:	add    BYTE PTR [rax],ah
   14000c8cd:	add    BYTE PTR [rsi+0x0],ah
   14000c8d0:	(bad)  
   14000c8d1:	add    BYTE PTR [rcx+0x0],ch
   14000c8d4:	ins    BYTE PTR es:[rdi],dx
   14000c8d5:	add    BYTE PTR [rbp+0x0],ah
   14000c8d8:	add    BYTE PTR fs:[rsi],ch
   14000c8db:	add    BYTE PTR [rax],ah
   14000c8dd:	add    BYTE PTR [rax+0x0],ch
   14000c8e0:	jb     0x14000c8e2
   14000c8e2:	cmp    al,BYTE PTR [rax]
   14000c8e4:	and    BYTE PTR [rax],al
   14000c8e6:	and    eax,0xd003100
   14000c8eb:	add    BYTE PTR [rdx],cl
   14000c8ed:	add    BYTE PTR [rax],al
   14000c8ef:	add    BYTE PTR [rax+0x0],dh
   14000c8f2:	add    DWORD PTR [rax],eax
   14000c8f4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c8f8:	outs   dx,BYTE PTR ds:[rsi]
   14000c8f9:	add    BYTE PTR [rsi+0x0],ah
   14000c8fc:	imul   eax,DWORD PTR [rax],0x750067
   14000c902:	jb     0x14000c904
   14000c904:	(bad)  
   14000c905:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c909:	add    BYTE PTR [rdi+0x0],ch
   14000c90c:	outs   dx,BYTE PTR ds:[rsi]
   14000c90d:	add    BYTE PTR [rax],ah
   14000c90f:	add    BYTE PTR [rax+0x0],cl
   14000c912:	outs   dx,DWORD PTR ds:[rsi]
   14000c913:	add    BYTE PTR [rbx+0x0],dh
   14000c916:	je     0x14000c918
   14000c918:	and    BYTE PTR [rax],al
   14000c91a:	jae    0x14000c91c
   14000c91c:	je     0x14000c91e
   14000c91e:	(bad)  
   14000c91f:	add    BYTE PTR [rdx+0x0],dh
   14000c922:	je     0x14000c924
   14000c924:	imul   eax,DWORD PTR [rax],0x67006e
   14000c92a:	and    BYTE PTR [rax],al
   14000c92c:	je     0x14000c92e
   14000c92e:	outs   dx,DWORD PTR ds:[rsi]
   14000c92f:	add    BYTE PTR [rax],ah
   14000c931:	add    BYTE PTR [rax+0x0],dh
   14000c934:	jb     0x14000c936
   14000c936:	outs   dx,DWORD PTR ds:[rsi]
   14000c937:	add    BYTE PTR [rbx+0x0],ah
   14000c93a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c93e:	jae    0x14000c940
   14000c940:	and    BYTE PTR [rax],al
   14000c942:	outs   dx,BYTE PTR ds:[rsi]
   14000c943:	add    BYTE PTR [rbp+0x0],ah
   14000c946:	ja     0x14000c948
   14000c948:	and    BYTE PTR [rax],al
   14000c94a:	ins    DWORD PTR es:[rdi],dx
   14000c94b:	add    BYTE PTR [rbp+0x0],ah
   14000c94e:	jae    0x14000c950
   14000c950:	jae    0x14000c952
   14000c952:	(bad)  
   14000c953:	add    BYTE PTR [rdi+0x0],ah
   14000c956:	add    BYTE PTR gs:[rsi],ch
   14000c959:	add    BYTE PTR [rip+0xa00],cl        # 0x14000d35f
   14000c95f:	add    BYTE PTR [rbx+0x52],al
   14000c962:	rex.WB
   14000c963:	rex.WRB push r8
   14000c965:	or     eax,0x30000
   14000c96a:	add    DWORD PTR [rax],eax
   14000c96c:	add    DWORD PTR [rax],eax
   14000c96e:	add    BYTE PTR [rax],al
   14000c970:	int3   
   14000c971:	call   0x1429fd253
   14000c976:	xchg   ebp,eax
   14000c977:	rex.WRX popf 
   14000c979:	test   BYTE PTR [rip+0x683acf9c],ah        # 0x1a83b991b
   14000c97f:	or     BYTE PTR [rax+rax*1],ah
   14000c982:	add    BYTE PTR [rax],al
   14000c984:	push   rdi
   14000c985:	rex.RB push r14
   14000c987:	push   rsp
   14000c988:	sub    al,0xd
   14000c98a:	add    BYTE PTR [rax],al
   14000c98c:	(bad)  
   14000c98d:	(bad)  
   14000c98e:	(bad)  
   14000c98f:	inc    DWORD PTR [rsi]
   14000c991:	add    BYTE PTR [rax],al
   14000c993:	add    BYTE PTR [rdi],al
   14000c995:	add    BYTE PTR [rax],al
   14000c997:	add    BYTE PTR [rax+rax*1+0x20000],cl
   14000c99e:	add    BYTE PTR [rax],al
   14000c9a0:	sbb    BYTE PTR [rdx],cl
   14000c9a2:	add    BYTE PTR [rax],al
   14000c9a4:	add    BYTE PTR [rax],al
   14000c9a6:	add    BYTE PTR [rax],al
   14000c9a8:	rex.W or al,BYTE PTR [rax]
   14000c9ab:	add    BYTE PTR [rcx],al
   14000c9ad:	add    BYTE PTR [rax],al
   14000c9af:	add    BYTE PTR [rdx+rcx*1+0x30000],ch
   14000c9b6:	add    BYTE PTR [rax],al
   14000c9b8:	test   BYTE PTR [rbx],cl
   14000c9ba:	add    BYTE PTR [rax],al
   14000c9bc:	add    al,0x0
   14000c9be:	add    BYTE PTR [rax],al
   14000c9c0:	loopne 0x14000c9cd
	...
   14000c9ea:	add    BYTE PTR [rax],al
   14000c9ec:	push   rsp
   14000c9ed:	push   rsp
   14000c9ee:	rex.X
   14000c9ef:	rex.WR mov WORD PTR [rcx],cs
   14000c9f2:	add    BYTE PTR [rax],al
   14000c9f4:	(bad)  
   14000c9f5:	add    BYTE PTR [rax],al
   14000c9f7:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   14000c9fb:	push   rax
   14000c9fc:	jl     0x14000c9fe
	...
   14000ca06:	add    BYTE PTR [rax],al
   14000ca08:	adc    al,0x1
   14000ca0a:	add    BYTE PTR [rax],al
   14000ca0c:	add    al,BYTE PTR [rax]
   14000ca0e:	add    BYTE PTR [rax],al
   14000ca10:	int3   
   14000ca11:	rex.WXB mov WORD PTR [r15],?
   14000ca14:	lahf   
   14000ca15:	mov    ch,ch
   14000ca17:	rex.WRB movabs r15,0xfa4334060380d82
   14000ca21:	add    DWORD PTR [rcx],eax
   14000ca23:	add    BYTE PTR [rcx-0x1],al
   14000ca26:	inc    DWORD PTR [rdi+0x0]
   14000ca29:	add    BYTE PTR [rax],al
   14000ca2b:	xor    eax,0x430007d2
   14000ca30:	add    BYTE PTR [rax+0x0],cl
   14000ca33:	add    BYTE PTR [r14+0x0],r14b
   14000ca37:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ca3b:	je     0x14000ca3d
   14000ca3d:	add    BYTE PTR [rax],al
   14000ca3f:	sub    eax,0x6000000
   14000ca44:	mov    esp,0x7800050f
   14000ca49:	add    BYTE PTR [rbp+0x0],ch
   14000ca4c:	ins    BYTE PTR es:[rdi],dx
   14000ca4d:	add    BYTE PTR [rsi+0x0],ch
   14000ca50:	jae    0x14000ca52
   14000ca52:	add    BYTE PTR [rax],al
   14000ca54:	add    eax,0x43000c01
   14000ca59:	add    BYTE PTR [rsi+0x0],ah
   14000ca5c:	add    BYTE PTR [eax+0x0],cl
   14000ca60:	outs   dx,DWORD PTR ds:[rsi]
   14000ca61:	add    BYTE PTR [rbx+0x0],dh
   14000ca64:	je     0x14000ca66
   14000ca66:	add    BYTE PTR [r14+0x0],r14b
   14000ca6a:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ca6e:	je     0x14000ca70
   14000ca70:	add    al,BYTE PTR [rax+rax*1]
   14000ca73:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   14000ca77:	push   rax
   14000ca78:	(bad)  
   14000ca79:	add    BYTE PTR [rax],al
   14000ca7b:	add    BYTE PTR [rcx],al
   14000ca7d:	add    BYTE PTR [rax],al
   14000ca7f:	add    BYTE PTR [rcx],al
   14000ca81:	add    BYTE PTR [rax],al
   14000ca83:	add    BYTE PTR [rax+0x2000001],dh
   14000ca89:	add    BYTE PTR [rax],al
   14000ca8b:	add    ch,cl
   14000ca8d:	fstp   QWORD PTR [rbp-0x6e]
   14000ca90:	fdivr  DWORD PTR [rax*4-0x1c5fdb76]
   14000ca97:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ca98:	mov    es,WORD PTR [rcx+0x10fdaac]
   14000ca9e:	add    DWORD PTR [rax],eax
   14000caa0:	rex.B (bad) 
   14000caa2:	jmp    QWORD PTR [rsi+0x0]
   14000caa5:	add    BYTE PTR [rax],al
   14000caa7:	xor    eax,0x430007d2
   14000caac:	add    BYTE PTR [rax+0x0],cl
   14000caaf:	add    BYTE PTR [r14+0x0],r14b
   14000cab3:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cab7:	je     0x14000cab9
   14000cab9:	add    BYTE PTR [rax],al
   14000cabb:	sub    eax,0x6000000
   14000cac0:	mov    esp,0x7800050f
   14000cac5:	add    BYTE PTR [rbp+0x0],ch
   14000cac8:	ins    BYTE PTR es:[rdi],dx
   14000cac9:	add    BYTE PTR [rsi+0x0],ch
   14000cacc:	jae    0x14000cace
   14000cace:	add    BYTE PTR [rax],al
   14000cad0:	add    eax,0x43000c01
   14000cad5:	add    BYTE PTR [rsi+0x0],ah
   14000cad8:	add    BYTE PTR [eax+0x0],cl
   14000cadc:	outs   dx,DWORD PTR ds:[rsi]
   14000cadd:	add    BYTE PTR [rbx+0x0],dh
   14000cae0:	je     0x14000cae2
   14000cae2:	add    BYTE PTR [r14+0x0],r14b
   14000cae6:	add    BYTE PTR gs:[rsi+0x0],ch
   14000caea:	je     0x14000caec
   14000caec:	add    al,BYTE PTR [rcx]
   14000caee:	(bad)  
   14000caef:	call   FWORD PTR [rax]
   14000caf1:	add    BYTE PTR [rax],al
   14000caf3:	add    ah,ah
   14000caf5:	jp     0x14000cafd
   14000caf7:	add    BYTE PTR [rax+0x0],dh
   14000cafa:	(bad)  
   14000cafb:	add    BYTE PTR [rdx+0x0],dh
   14000cafe:	(bad)  
   14000caff:	add    BYTE PTR [rbp+0x0],ch
   14000cb02:	xor    DWORD PTR [rax],eax
   14000cb04:	add    BYTE PTR [rax],al
   14000cb06:	add    cl,BYTE PTR [rip+0x4080000]        # 0x14408cb0c
   14000cb0c:	add    al,0x0
   14000cb0e:	add    BYTE PTR [rax],al
   14000cb10:	add    BYTE PTR [rax],al
   14000cb12:	add    BYTE PTR [rax],al
   14000cb14:	or     BYTE PTR [rax],cl
	...
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	(bad)
   14000cb24:	adc    al,0x0
   14000cb26:	add    BYTE PTR [rax],al
   14000cb28:	jo     0x14000cb2a
   14000cb2a:	(bad)  
   14000cb2b:	add    BYTE PTR [rdx+0x0],dh
   14000cb2e:	(bad)  
   14000cb2f:	add    BYTE PTR [rbp+0x0],ch
   14000cb32:	xor    DWORD PTR [rax],eax
   14000cb34:	add    BYTE PTR [rax],al
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	push   rsp
   14000cb39:	rex.RB
   14000cb3a:	rex.WRB push r8
   14000cb3c:	or     al,0x1
   14000cb3e:	add    BYTE PTR [rax],al
   14000cb40:	add    al,BYTE PTR [rax]
   14000cb42:	add    BYTE PTR [rax],al
   14000cb44:	add    al,BYTE PTR [rax]
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	xchg   esp,eax
   14000cb49:	add    al,BYTE PTR [rax]
   14000cb4b:	add    BYTE PTR [rdx],al
   14000cb4d:	add    BYTE PTR [rax],al
   14000cb4f:	add    BYTE PTR [rbx-0x41bbc264],bl
   14000cb55:	(bad)  
   14000cb56:	mov    edi,0x4efe3e5e
   14000cb5b:	push   0x4cff4508
   14000cb60:	sgdt   [rcx]
   14000cb63:	add    BYTE PTR [rcx-0x1],al
   14000cb66:	inc    DWORD PTR [rbp+0x35000000]
   14000cb6c:	rol    BYTE PTR [rdi],cl
   14000cb6e:	add    BYTE PTR [rbx+0x0],al
   14000cb71:	rex.W add BYTE PTR [rbp+0x0],al
   14000cb75:	jbe    0x14000cb77
   14000cb77:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cb7b:	je     0x14000cb7d
   14000cb7d:	add    BYTE PTR [rax],al
   14000cb7f:	sub    eax,0x6000000
   14000cb84:	mov    esp,0x7800050f
   14000cb89:	add    BYTE PTR [rbp+0x0],ch
   14000cb8c:	ins    BYTE PTR es:[rdi],dx
   14000cb8d:	add    BYTE PTR [rsi+0x0],ch
   14000cb90:	jae    0x14000cb92
   14000cb92:	add    BYTE PTR [rax],al
   14000cb94:	add    eax,0x43000c01
   14000cb99:	add    BYTE PTR [rsi+0x0],ah
   14000cb9c:	add    BYTE PTR [eax+0x0],cl
   14000cba0:	outs   dx,DWORD PTR ds:[rsi]
   14000cba1:	add    BYTE PTR [rbx+0x0],dh
   14000cba4:	je     0x14000cba6
   14000cba6:	add    BYTE PTR [r14+0x0],r14b
   14000cbaa:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cbae:	je     0x14000cbb0
   14000cbb0:	add    al,BYTE PTR [rcx]
   14000cbb2:	(bad)  
   14000cbb3:	call   FWORD PTR [rax]
   14000cbb5:	add    BYTE PTR [rax],al
   14000cbb7:	add    ah,ah
   14000cbb9:	jp     0x14000cbc1
   14000cbbb:	add    BYTE PTR [rax+0x0],dh
   14000cbbe:	(bad)  
   14000cbbf:	add    BYTE PTR [rdx+0x0],dh
   14000cbc2:	(bad)  
   14000cbc3:	add    BYTE PTR [rbp+0x0],ch
   14000cbc6:	xor    DWORD PTR [rax],eax
   14000cbc8:	add    BYTE PTR [rax],al
   14000cbca:	add    cl,BYTE PTR [rip+0x4080000]        # 0x14408cbd0
   14000cbd0:	add    edi,edi
   14000cbd2:	call   FWORD PTR [rax]
   14000cbd4:	add    BYTE PTR [rax],al
   14000cbd6:	add    ch,ah
   14000cbd8:	jp     0x14000cbe0
   14000cbda:	add    BYTE PTR [rax+0x0],dh
   14000cbdd:	(bad)  
   14000cbde:	add    BYTE PTR [rdx+0x0],dh
   14000cbe1:	(bad)  
   14000cbe2:	add    BYTE PTR [rbp+0x0],ch
   14000cbe5:	xor    al,BYTE PTR [rax]
   14000cbe7:	add    BYTE PTR [rax],al
   14000cbe9:	add    cl,BYTE PTR [rip+0x4010001]        # 0x14401cbf0
   14000cbef:	add    al,0x0
   14000cbf1:	add    BYTE PTR [rax],al
   14000cbf3:	add    BYTE PTR [rax],al
   14000cbf5:	add    BYTE PTR [rax],al
   14000cbf7:	add    BYTE PTR [rax],cl
   14000cbf9:	or     BYTE PTR [rax],al
	...
   14000cc03:	add    BYTE PTR [rdx+rax*1+0x0],bh
   14000cc0a:	add    BYTE PTR [rax],al
   14000cc0c:	add    DWORD PTR [rcx],eax
	...
   14000cc16:	add    BYTE PTR [rax],al
   14000cc18:	rol    BYTE PTR [rdx],1
   14000cc1a:	add    BYTE PTR [rax],al
   14000cc1c:	adc    al,0x0
   14000cc1e:	add    BYTE PTR [rax],al
   14000cc20:	jo     0x14000cc22
   14000cc22:	(bad)  
   14000cc23:	add    BYTE PTR [rdx+0x0],dh
   14000cc26:	(bad)  
   14000cc27:	add    BYTE PTR [rbp+0x0],ch
   14000cc2a:	xor    DWORD PTR [rax],eax
   14000cc2c:	add    BYTE PTR [rax],al
   14000cc2e:	add    BYTE PTR [rax],al
   14000cc30:	adc    al,0x0
   14000cc32:	add    BYTE PTR [rax],al
   14000cc34:	jo     0x14000cc36
   14000cc36:	(bad)  
   14000cc37:	add    BYTE PTR [rdx+0x0],dh
   14000cc3a:	(bad)  
   14000cc3b:	add    BYTE PTR [rbp+0x0],ch
   14000cc3e:	xor    al,BYTE PTR [rax]
   14000cc40:	add    BYTE PTR [rax],al
   14000cc42:	add    BYTE PTR [rax],al
   14000cc44:	push   rsp
   14000cc45:	rex.RB
   14000cc46:	rex.WRB push r8
   14000cc48:	push   rax
   14000cc49:	add    DWORD PTR [rax],eax
   14000cc4b:	add    BYTE PTR [rbx],al
   14000cc4d:	add    BYTE PTR [rax],al
   14000cc4f:	add    BYTE PTR [rbx],al
   14000cc51:	add    BYTE PTR [rax],al
   14000cc53:	add    BYTE PTR [rbx+rax*1+0x20000],bh
   14000cc5a:	add    BYTE PTR [rax],al
   14000cc5c:	cli    
   14000cc5d:	adc    eax,0xb0da4458
   14000cc62:	jrcxz  0x14000cc1b
   14000cc64:	(bad)  
   14000cc65:	imul   DWORD PTR [rbp-0xe321b0f]
   14000cc6b:	ror    DWORD PTR [rdi],1
   14000cc6d:	add    DWORD PTR [rcx],eax
   14000cc6f:	add    BYTE PTR [rcx-0x1],al
   14000cc72:	jmp    QWORD PTR [rax+rax*1-0x2dcb0000]
   14000cc79:	(bad)  
   14000cc7a:	add    BYTE PTR [rbx+0x0],al
   14000cc7d:	rex.W add BYTE PTR [rbp+0x0],al
   14000cc81:	jbe    0x14000cc83
   14000cc83:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cc87:	je     0x14000cc89
   14000cc89:	add    BYTE PTR [rax],al
   14000cc8b:	sub    eax,0x6000000
   14000cc90:	mov    esp,0x7800050f
   14000cc95:	add    BYTE PTR [rbp+0x0],ch
   14000cc98:	ins    BYTE PTR es:[rdi],dx
   14000cc99:	add    BYTE PTR [rsi+0x0],ch
   14000cc9c:	jae    0x14000cc9e
   14000cc9e:	add    BYTE PTR [rax],al
   14000cca0:	add    eax,0x43000c01
   14000cca5:	add    BYTE PTR [rsi+0x0],ah
   14000cca8:	add    BYTE PTR [eax+0x0],cl
   14000ccac:	outs   dx,DWORD PTR ds:[rsi]
   14000ccad:	add    BYTE PTR [rbx+0x0],dh
   14000ccb0:	je     0x14000ccb2
   14000ccb2:	add    BYTE PTR [r14+0x0],r14b
   14000ccb6:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ccba:	je     0x14000ccbc
   14000ccbc:	add    al,BYTE PTR [rcx]
   14000ccbe:	(bad)  
   14000ccbf:	call   FWORD PTR [rax]
   14000ccc1:	add    BYTE PTR [rax],al
   14000ccc3:	add    ah,ah
   14000ccc5:	jp     0x14000cccd
   14000ccc7:	add    BYTE PTR [rax+0x0],dh
   14000ccca:	(bad)  
   14000cccb:	add    BYTE PTR [rdx+0x0],dh
   14000ccce:	(bad)  
   14000cccf:	add    BYTE PTR [rbp+0x0],ch
   14000ccd2:	xor    DWORD PTR [rax],eax
   14000ccd4:	add    BYTE PTR [rax],al
   14000ccd6:	add    cl,BYTE PTR [rip+0x4080000]        # 0x14408ccdc
   14000ccdc:	add    edi,edi
   14000ccde:	call   FWORD PTR [rax]
   14000cce0:	add    BYTE PTR [rax],al
   14000cce2:	add    ch,ah
   14000cce4:	jp     0x14000ccec
   14000cce6:	add    BYTE PTR [rax+0x0],dh
   14000cce9:	(bad)  
   14000ccea:	add    BYTE PTR [rdx+0x0],dh
   14000cced:	(bad)  
   14000ccee:	add    BYTE PTR [rbp+0x0],ch
   14000ccf1:	xor    al,BYTE PTR [rax]
   14000ccf3:	add    BYTE PTR [rax],al
   14000ccf5:	add    cl,BYTE PTR [rip+0x4010001]        # 0x14401ccfc
   14000ccfb:	add    edi,edi
   14000ccfd:	call   FWORD PTR [rax]
   14000ccff:	add    BYTE PTR [rax],al
   14000cd01:	add    dh,ah
   14000cd03:	jp     0x14000cd0b
   14000cd05:	add    BYTE PTR [rax+0x0],dh
   14000cd08:	(bad)  
   14000cd09:	add    BYTE PTR [rdx+0x0],dh
   14000cd0c:	(bad)  
   14000cd0d:	add    BYTE PTR [rbp+0x0],ch
   14000cd10:	xor    eax,DWORD PTR [rax]
   14000cd12:	add    BYTE PTR [rax],al
   14000cd14:	add    cl,BYTE PTR [rip+0x4010002]        # 0x14401cd1c
   14000cd1a:	add    al,0x0
   14000cd1c:	add    BYTE PTR [rax],al
   14000cd1e:	add    BYTE PTR [rax],al
   14000cd20:	or     BYTE PTR [rax],cl
	...
   14000cd2a:	add    BYTE PTR [rax],al
   14000cd2c:	clc    
   14000cd2d:	add    eax,DWORD PTR [rax]
   14000cd2f:	add    BYTE PTR [rax],al
   14000cd31:	add    BYTE PTR [rax],al
   14000cd33:	add    BYTE PTR [rcx],al
   14000cd35:	add    DWORD PTR [rax],eax
	...
   14000cd3f:	add    BYTE PTR [rsp+rax*1],cl
   14000cd42:	add    BYTE PTR [rax],al
   14000cd44:	add    BYTE PTR [rax],al
   14000cd46:	add    BYTE PTR [rax],al
   14000cd48:	add    DWORD PTR [rcx],eax
	...
   14000cd52:	add    BYTE PTR [rax],al
   14000cd54:	and    BYTE PTR [rax+rax*1],al
   14000cd57:	add    BYTE PTR [rax+rax*1],dl
   14000cd5a:	add    BYTE PTR [rax],al
   14000cd5c:	jo     0x14000cd5e
   14000cd5e:	(bad)  
   14000cd5f:	add    BYTE PTR [rdx+0x0],dh
   14000cd62:	(bad)  
   14000cd63:	add    BYTE PTR [rbp+0x0],ch
   14000cd66:	xor    DWORD PTR [rax],eax
   14000cd68:	add    BYTE PTR [rax],al
   14000cd6a:	add    BYTE PTR [rax],al
   14000cd6c:	adc    al,0x0
   14000cd6e:	add    BYTE PTR [rax],al
   14000cd70:	jo     0x14000cd72
   14000cd72:	(bad)  
   14000cd73:	add    BYTE PTR [rdx+0x0],dh
   14000cd76:	(bad)  
   14000cd77:	add    BYTE PTR [rbp+0x0],ch
   14000cd7a:	xor    al,BYTE PTR [rax]
   14000cd7c:	add    BYTE PTR [rax],al
   14000cd7e:	add    BYTE PTR [rax],al
   14000cd80:	adc    al,0x0
   14000cd82:	add    BYTE PTR [rax],al
   14000cd84:	jo     0x14000cd86
   14000cd86:	(bad)  
   14000cd87:	add    BYTE PTR [rdx+0x0],dh
   14000cd8a:	(bad)  
   14000cd8b:	add    BYTE PTR [rbp+0x0],ch
   14000cd8e:	xor    eax,DWORD PTR [rax]
   14000cd90:	add    BYTE PTR [rax],al
   14000cd92:	add    BYTE PTR [rax],al
   14000cd94:	push   rsp
   14000cd95:	rex.RB
   14000cd96:	rex.WRB push r8
   14000cd98:	loopne 0x14000cd9b
   14000cd9a:	add    BYTE PTR [rax],al
   14000cd9c:	add    eax,0x5000000
   14000cda1:	add    BYTE PTR [rax],al
   14000cda3:	add    BYTE PTR [rbp+rax*1+0x0],cl
   14000cda7:	add    BYTE PTR [rdx],al
   14000cda9:	add    BYTE PTR [rax],al
   14000cdab:	add    BYTE PTR [rdi-0x35711e4c],cl
   14000cdb1:	adc    eax,0x710a6b6e
   14000cdb6:	(bad)  
   14000cdb7:	(bad)  
   14000cdb8:	or     al,0xbe
   14000cdba:	out    0x59,al
   14000cdbc:	sgdt   [rcx]
   14000cdbf:	add    BYTE PTR [rcx-0x1],al
   14000cdc2:	jmp    rdx
   14000cdc4:	add    BYTE PTR [rax],al
   14000cdc6:	add    BYTE PTR [rip+0x430007d2],dh        # 0x18300d59e
   14000cdcc:	add    BYTE PTR [rax+0x0],cl
   14000cdcf:	add    BYTE PTR [r14+0x0],r14b
   14000cdd3:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cdd7:	je     0x14000cdd9
   14000cdd9:	add    BYTE PTR [rax],al
   14000cddb:	sub    eax,0x6000000
   14000cde0:	mov    esp,0x7800050f
   14000cde5:	add    BYTE PTR [rbp+0x0],ch
   14000cde8:	ins    BYTE PTR es:[rdi],dx
   14000cde9:	add    BYTE PTR [rsi+0x0],ch
   14000cdec:	jae    0x14000cdee
   14000cdee:	add    BYTE PTR [rax],al
   14000cdf0:	add    eax,0x43000c01
   14000cdf5:	add    BYTE PTR [rsi+0x0],ah
   14000cdf8:	add    BYTE PTR [eax+0x0],cl
   14000cdfc:	outs   dx,DWORD PTR ds:[rsi]
   14000cdfd:	add    BYTE PTR [rbx+0x0],dh
   14000ce00:	je     0x14000ce02
   14000ce02:	add    BYTE PTR [r14+0x0],r14b
   14000ce06:	add    BYTE PTR gs:[rsi+0x0],ch
   14000ce0a:	je     0x14000ce0c
   14000ce0c:	add    al,BYTE PTR [rcx]
   14000ce0e:	(bad)  
   14000ce0f:	call   FWORD PTR [rax]
   14000ce11:	add    BYTE PTR [rax],al
   14000ce13:	add    ah,ah
   14000ce15:	jp     0x14000ce1d
   14000ce17:	add    BYTE PTR [rax+0x0],dh
   14000ce1a:	(bad)  
   14000ce1b:	add    BYTE PTR [rdx+0x0],dh
   14000ce1e:	(bad)  
   14000ce1f:	add    BYTE PTR [rbp+0x0],ch
   14000ce22:	xor    DWORD PTR [rax],eax
   14000ce24:	add    BYTE PTR [rax],al
   14000ce26:	add    cl,BYTE PTR [rip+0x4080000]        # 0x14408ce2c
   14000ce2c:	add    edi,edi
   14000ce2e:	call   FWORD PTR [rax]
   14000ce30:	add    BYTE PTR [rax],al
   14000ce32:	add    ch,ah
   14000ce34:	jp     0x14000ce3c
   14000ce36:	add    BYTE PTR [rax+0x0],dh
   14000ce39:	(bad)  
   14000ce3a:	add    BYTE PTR [rdx+0x0],dh
   14000ce3d:	(bad)  
   14000ce3e:	add    BYTE PTR [rbp+0x0],ch
   14000ce41:	xor    al,BYTE PTR [rax]
   14000ce43:	add    BYTE PTR [rax],al
   14000ce45:	add    cl,BYTE PTR [rip+0x4080001]        # 0x14408ce4c
   14000ce4b:	add    edi,edi
   14000ce4d:	call   FWORD PTR [rax]
   14000ce4f:	add    BYTE PTR [rax],al
   14000ce51:	add    dh,ah
   14000ce53:	jp     0x14000ce5b
   14000ce55:	add    BYTE PTR [rax+0x0],dh
   14000ce58:	(bad)  
   14000ce59:	add    BYTE PTR [rdx+0x0],dh
   14000ce5c:	(bad)  
   14000ce5d:	add    BYTE PTR [rbp+0x0],ch
   14000ce60:	xor    eax,DWORD PTR [rax]
   14000ce62:	add    BYTE PTR [rax],al
   14000ce64:	add    cl,BYTE PTR [rip+0x4010002]        # 0x14401ce6c
   14000ce6a:	add    edi,edi
   14000ce6c:	call   FWORD PTR [rax]
   14000ce6e:	add    BYTE PTR [rax],al
   14000ce70:	add    bh,ah
   14000ce72:	jp     0x14000ce7a
   14000ce74:	add    BYTE PTR [rax+0x0],dh
   14000ce77:	(bad)  
   14000ce78:	add    BYTE PTR [rdx+0x0],dh
   14000ce7b:	(bad)  
   14000ce7c:	add    BYTE PTR [rbp+0x0],ch
   14000ce7f:	xor    al,0x0
   14000ce81:	add    BYTE PTR [rax],al
   14000ce83:	add    cl,BYTE PTR [rip+0x4010003]        # 0x14401ce8c
   14000ce89:	add    edi,edi
   14000ce8b:	call   FWORD PTR [rax]
   14000ce8d:	add    BYTE PTR [rax],al
   14000ce8f:	add    al,ch
   14000ce91:	jp     0x14000ce99
   14000ce93:	add    BYTE PTR [rax+0x0],dh
   14000ce96:	(bad)  
   14000ce97:	add    BYTE PTR [rdx+0x0],dh
   14000ce9a:	(bad)  
   14000ce9b:	add    BYTE PTR [rbp+0x0],ch
   14000ce9e:	xor    eax,0x2000000
   14000cea3:	or     eax,0x4010004
   14000cea8:	add    al,0x0
   14000ceaa:	add    BYTE PTR [rax],al
   14000ceac:	add    BYTE PTR [rax],al
   14000ceae:	add    BYTE PTR [rax],al
   14000ceb0:	or     BYTE PTR [rax],cl
	...
   14000ceba:	add    BYTE PTR [rax],al
   14000cebc:	mov    al,0x5
   14000cebe:	add    BYTE PTR [rax],al
   14000cec0:	add    BYTE PTR [rax],al
   14000cec2:	add    BYTE PTR [rax],al
   14000cec4:	or     BYTE PTR [rax],cl
	...
   14000cece:	add    BYTE PTR [rax],al
   14000ced0:	(bad)  
   14000ced1:	add    eax,0x0
   14000ced6:	add    BYTE PTR [rax],al
   14000ced8:	add    DWORD PTR [rcx],eax
	...
   14000cee2:	add    BYTE PTR [rax],al
   14000cee4:	fadd   DWORD PTR [rip+0x0]        # 0x14000ceea
   14000ceea:	add    BYTE PTR [rax],al
   14000ceec:	add    DWORD PTR [rcx],eax
	...
   14000cef6:	add    BYTE PTR [rax],al
   14000cef8:	in     al,dx
   14000cef9:	add    eax,0x0
   14000cefe:	add    BYTE PTR [rax],al
   14000cf00:	add    DWORD PTR [rcx],eax
	...
   14000cf0a:	add    BYTE PTR [rax],al
   14000cf0c:	add    BYTE PTR [rsi],al
   14000cf0e:	add    BYTE PTR [rax],al
   14000cf10:	adc    al,0x0
   14000cf12:	add    BYTE PTR [rax],al
   14000cf14:	jo     0x14000cf16
   14000cf16:	(bad)  
   14000cf17:	add    BYTE PTR [rdx+0x0],dh
   14000cf1a:	(bad)  
   14000cf1b:	add    BYTE PTR [rbp+0x0],ch
   14000cf1e:	xor    DWORD PTR [rax],eax
   14000cf20:	add    BYTE PTR [rax],al
   14000cf22:	add    BYTE PTR [rax],al
   14000cf24:	adc    al,0x0
   14000cf26:	add    BYTE PTR [rax],al
   14000cf28:	jo     0x14000cf2a
   14000cf2a:	(bad)  
   14000cf2b:	add    BYTE PTR [rdx+0x0],dh
   14000cf2e:	(bad)  
   14000cf2f:	add    BYTE PTR [rbp+0x0],ch
   14000cf32:	xor    al,BYTE PTR [rax]
   14000cf34:	add    BYTE PTR [rax],al
   14000cf36:	add    BYTE PTR [rax],al
   14000cf38:	adc    al,0x0
   14000cf3a:	add    BYTE PTR [rax],al
   14000cf3c:	jo     0x14000cf3e
   14000cf3e:	(bad)  
   14000cf3f:	add    BYTE PTR [rdx+0x0],dh
   14000cf42:	(bad)  
   14000cf43:	add    BYTE PTR [rbp+0x0],ch
   14000cf46:	xor    eax,DWORD PTR [rax]
   14000cf48:	add    BYTE PTR [rax],al
   14000cf4a:	add    BYTE PTR [rax],al
   14000cf4c:	adc    al,0x0
   14000cf4e:	add    BYTE PTR [rax],al
   14000cf50:	jo     0x14000cf52
   14000cf52:	(bad)  
   14000cf53:	add    BYTE PTR [rdx+0x0],dh
   14000cf56:	(bad)  
   14000cf57:	add    BYTE PTR [rbp+0x0],ch
   14000cf5a:	xor    al,0x0
   14000cf5c:	add    BYTE PTR [rax],al
   14000cf5e:	add    BYTE PTR [rax],al
   14000cf60:	adc    al,0x0
   14000cf62:	add    BYTE PTR [rax],al
   14000cf64:	jo     0x14000cf66
   14000cf66:	(bad)  
   14000cf67:	add    BYTE PTR [rdx+0x0],dh
   14000cf6a:	(bad)  
   14000cf6b:	add    BYTE PTR [rbp+0x0],ch
   14000cf6e:	xor    eax,0x0
   14000cf73:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   14000cf77:	push   rax
   14000cf78:	ins    BYTE PTR es:[rdi],dx
   14000cf79:	add    al,BYTE PTR [rax]
   14000cf7b:	add    BYTE PTR [rdi],al
   14000cf7d:	add    BYTE PTR [rax],al
   14000cf7f:	add    BYTE PTR [rdi],al
   14000cf81:	add    BYTE PTR [rax],al
   14000cf83:	add    BYTE PTR [rax+0x7],ch
   14000cf86:	add    BYTE PTR [rax],al
   14000cf88:	add    al,BYTE PTR [rax]
   14000cf8a:	add    BYTE PTR [rax],al
   14000cf8c:	out    dx,eax
   14000cf8d:	sbb    al,0x6e
   14000cf8f:	or     edx,DWORD PTR [rbp-0x28]
   14000cf92:	push   rcx
   14000cf93:	xor    eax,0x64d98d36
   14000cf98:	lea    ebx,[rbp+0x10f4d57]
   14000cf9e:	add    DWORD PTR [rax],eax
   14000cfa0:	rex.B (bad) 
   14000cfa2:	jmp    QWORD PTR [rax]
   14000cfa4:	add    DWORD PTR [rax],eax
   14000cfa6:	add    BYTE PTR [rip+0x430007d2],dh        # 0x18300d77e
   14000cfac:	add    BYTE PTR [rax+0x0],cl
   14000cfaf:	add    BYTE PTR [r14+0x0],r14b
   14000cfb3:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cfb7:	je     0x14000cfb9
   14000cfb9:	add    BYTE PTR [rax],al
   14000cfbb:	sub    eax,0x6000000
   14000cfc0:	mov    esp,0x7800050f
   14000cfc5:	add    BYTE PTR [rbp+0x0],ch
   14000cfc8:	ins    BYTE PTR es:[rdi],dx
   14000cfc9:	add    BYTE PTR [rsi+0x0],ch
   14000cfcc:	jae    0x14000cfce
   14000cfce:	add    BYTE PTR [rax],al
   14000cfd0:	add    eax,0x43000c01
   14000cfd5:	add    BYTE PTR [rsi+0x0],ah
   14000cfd8:	add    BYTE PTR [eax+0x0],cl
   14000cfdc:	outs   dx,DWORD PTR ds:[rsi]
   14000cfdd:	add    BYTE PTR [rbx+0x0],dh
   14000cfe0:	je     0x14000cfe2
   14000cfe2:	add    BYTE PTR [r14+0x0],r14b
   14000cfe6:	add    BYTE PTR gs:[rsi+0x0],ch
   14000cfea:	je     0x14000cfec
   14000cfec:	add    al,BYTE PTR [rcx]
   14000cfee:	(bad)  
   14000cfef:	call   FWORD PTR [rax]
   14000cff1:	add    BYTE PTR [rax],al
   14000cff3:	add    ah,ah
   14000cff5:	jp     0x14000cffd
   14000cff7:	add    BYTE PTR [rax+0x0],dh
   14000cffa:	(bad)  
   14000cffb:	add    BYTE PTR [rdx+0x0],dh
   14000cffe:	(bad)  
   14000cfff:	add    BYTE PTR [rbp+0x0],ch
   14000d002:	xor    DWORD PTR [rax],eax
   14000d004:	add    BYTE PTR [rax],al
   14000d006:	add    cl,BYTE PTR [rip+0x4080000]        # 0x14408d00c
   14000d00c:	add    edi,edi
   14000d00e:	call   FWORD PTR [rax]
   14000d010:	add    BYTE PTR [rax],al
   14000d012:	add    ch,ah
   14000d014:	jp     0x14000d01c
   14000d016:	add    BYTE PTR [rax+0x0],dh
   14000d019:	(bad)  
   14000d01a:	add    BYTE PTR [rdx+0x0],dh
   14000d01d:	(bad)  
   14000d01e:	add    BYTE PTR [rbp+0x0],ch
   14000d021:	xor    al,BYTE PTR [rax]
   14000d023:	add    BYTE PTR [rax],al
   14000d025:	add    cl,BYTE PTR [rip+0x4080001]        # 0x14408d02c
   14000d02b:	add    edi,edi
   14000d02d:	call   FWORD PTR [rax]
   14000d02f:	add    BYTE PTR [rax],al
   14000d031:	add    dh,ah
   14000d033:	jp     0x14000d03b
   14000d035:	add    BYTE PTR [rax+0x0],dh
   14000d038:	(bad)  
   14000d039:	add    BYTE PTR [rdx+0x0],dh
   14000d03c:	(bad)  
   14000d03d:	add    BYTE PTR [rbp+0x0],ch
   14000d040:	xor    eax,DWORD PTR [rax]
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	add    cl,BYTE PTR [rip+0x4080002]        # 0x14408d04c
   14000d04a:	add    edi,edi
   14000d04c:	call   FWORD PTR [rax]
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	add    bh,ah
   14000d052:	jp     0x14000d05a
   14000d054:	add    BYTE PTR [rax+0x0],dh
   14000d057:	(bad)  
   14000d058:	add    BYTE PTR [rdx+0x0],dh
   14000d05b:	(bad)  
   14000d05c:	add    BYTE PTR [rbp+0x0],ch
   14000d05f:	xor    al,0x0
   14000d061:	add    BYTE PTR [rax],al
   14000d063:	add    cl,BYTE PTR [rip+0x4080003]        # 0x14408d06c
   14000d069:	add    edi,edi
   14000d06b:	call   FWORD PTR [rax]
   14000d06d:	add    BYTE PTR [rax],al
   14000d06f:	add    al,ch
   14000d071:	jp     0x14000d079
   14000d073:	add    BYTE PTR [rax+0x0],dh
   14000d076:	(bad)  
   14000d077:	add    BYTE PTR [rdx+0x0],dh
   14000d07a:	(bad)  
   14000d07b:	add    BYTE PTR [rbp+0x0],ch
   14000d07e:	xor    eax,0x2000000
   14000d083:	or     eax,0x4010004
   14000d088:	add    edi,edi
   14000d08a:	call   FWORD PTR [rax]
   14000d08c:	add    BYTE PTR [rax],al
   14000d08e:	add    cl,ch
   14000d090:	jp     0x14000d098
   14000d092:	add    BYTE PTR [rax+0x0],dh
   14000d095:	(bad)  
   14000d096:	add    BYTE PTR [rdx+0x0],dh
   14000d099:	(bad)  
   14000d09a:	add    BYTE PTR [rbp+0x0],ch
   14000d09d:	add    BYTE PTR ss:[rax],al
   14000d0a0:	add    BYTE PTR [rdx],al
   14000d0a2:	or     eax,0x4010005
   14000d0a7:	add    edi,edi
   14000d0a9:	call   FWORD PTR [rax]
   14000d0ab:	add    BYTE PTR [rax],al
   14000d0ad:	add    cl,ch
   14000d0af:	jp     0x14000d0b7
   14000d0b1:	add    BYTE PTR [rax+0x0],dh
   14000d0b4:	(bad)  
   14000d0b5:	add    BYTE PTR [rdx+0x0],dh
   14000d0b8:	(bad)  
   14000d0b9:	add    BYTE PTR [rbp+0x0],ch
   14000d0bc:	add    BYTE PTR ss:[rax],al
   14000d0bf:	add    BYTE PTR [rdx],al
   14000d0c1:	or     eax,0x4010006
   14000d0c6:	add    al,0x0
   14000d0c8:	add    BYTE PTR [rax],al
   14000d0ca:	add    BYTE PTR [rax],al
   14000d0cc:	or     BYTE PTR [rax],cl
	...
   14000d0d6:	add    BYTE PTR [rax],al
   14000d0d8:	hlt    
   14000d0d9:	(bad)  
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	add    BYTE PTR [rax],al
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	or     BYTE PTR [rax],cl
	...
   14000d0ea:	add    BYTE PTR [rax],al
   14000d0ec:	or     BYTE PTR [rax],cl
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	add    BYTE PTR [rax],al
   14000d0f2:	add    BYTE PTR [rax],al
   14000d0f4:	or     BYTE PTR [rax],cl
	...
   14000d0fe:	add    BYTE PTR [rax],al
   14000d100:	sbb    al,0x8
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	add    BYTE PTR [rax],al
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	or     BYTE PTR [rax],cl
	...
   14000d112:	add    BYTE PTR [rax],al
   14000d114:	xor    BYTE PTR [rax],cl
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	add    BYTE PTR [rax],al
   14000d11a:	add    BYTE PTR [rax],al
   14000d11c:	add    DWORD PTR [rcx],eax
	...
   14000d126:	add    BYTE PTR [rax],al
   14000d128:	or     BYTE PTR [rax],r8b
   14000d12b:	add    BYTE PTR [rax],al
   14000d12d:	add    BYTE PTR [rax],al
   14000d12f:	add    BYTE PTR [rcx],al
   14000d131:	add    DWORD PTR [rax],eax
	...
   14000d13b:	add    BYTE PTR [rax+0x8],bl
   14000d13e:	add    BYTE PTR [rax],al
   14000d140:	add    BYTE PTR [rax],al
   14000d142:	add    BYTE PTR [rax],al
   14000d144:	add    DWORD PTR [rcx],eax
	...
   14000d14e:	add    BYTE PTR [rax],al
   14000d150:	ins    BYTE PTR es:[rdi],dx
   14000d151:	or     BYTE PTR [rax],al
   14000d153:	add    BYTE PTR [rax+rax*1],dl
   14000d156:	add    BYTE PTR [rax],al
   14000d158:	jo     0x14000d15a
   14000d15a:	(bad)  
   14000d15b:	add    BYTE PTR [rdx+0x0],dh
   14000d15e:	(bad)  
   14000d15f:	add    BYTE PTR [rbp+0x0],ch
   14000d162:	xor    DWORD PTR [rax],eax
   14000d164:	add    BYTE PTR [rax],al
   14000d166:	add    BYTE PTR [rax],al
   14000d168:	adc    al,0x0
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	jo     0x14000d16e
   14000d16e:	(bad)  
   14000d16f:	add    BYTE PTR [rdx+0x0],dh
   14000d172:	(bad)  
   14000d173:	add    BYTE PTR [rbp+0x0],ch
   14000d176:	xor    al,BYTE PTR [rax]
   14000d178:	add    BYTE PTR [rax],al
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	adc    al,0x0
   14000d17e:	add    BYTE PTR [rax],al
   14000d180:	jo     0x14000d182
   14000d182:	(bad)  
   14000d183:	add    BYTE PTR [rdx+0x0],dh
   14000d186:	(bad)  
   14000d187:	add    BYTE PTR [rbp+0x0],ch
   14000d18a:	xor    eax,DWORD PTR [rax]
   14000d18c:	add    BYTE PTR [rax],al
   14000d18e:	add    BYTE PTR [rax],al
   14000d190:	adc    al,0x0
   14000d192:	add    BYTE PTR [rax],al
   14000d194:	jo     0x14000d196
   14000d196:	(bad)  
   14000d197:	add    BYTE PTR [rdx+0x0],dh
   14000d19a:	(bad)  
   14000d19b:	add    BYTE PTR [rbp+0x0],ch
   14000d19e:	xor    al,0x0
   14000d1a0:	add    BYTE PTR [rax],al
   14000d1a2:	add    BYTE PTR [rax],al
   14000d1a4:	adc    al,0x0
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	jo     0x14000d1aa
   14000d1aa:	(bad)  
   14000d1ab:	add    BYTE PTR [rdx+0x0],dh
   14000d1ae:	(bad)  
   14000d1af:	add    BYTE PTR [rbp+0x0],ch
   14000d1b2:	xor    eax,0x0
   14000d1b7:	add    BYTE PTR [rax+rax*1],dl
   14000d1ba:	add    BYTE PTR [rax],al
   14000d1bc:	jo     0x14000d1be
   14000d1be:	(bad)  
   14000d1bf:	add    BYTE PTR [rdx+0x0],dh
   14000d1c2:	(bad)  
   14000d1c3:	add    BYTE PTR [rbp+0x0],ch
   14000d1c6:	add    BYTE PTR ss:[rax],al
   14000d1c9:	add    BYTE PTR [rax],al
   14000d1cb:	add    BYTE PTR [rax+rax*1],dl
   14000d1ce:	add    BYTE PTR [rax],al
   14000d1d0:	jo     0x14000d1d2
   14000d1d2:	(bad)  
   14000d1d3:	add    BYTE PTR [rdx+0x0],dh
   14000d1d6:	(bad)  
   14000d1d7:	add    BYTE PTR [rbp+0x0],ch
   14000d1da:	(bad)  
   14000d1db:	add    BYTE PTR [rax],al
   14000d1dd:	add    BYTE PTR [rax],al
   14000d1df:	add    BYTE PTR [rbp+rax*2+0x4d],dl
   14000d1e3:	push   rax
   14000d1e4:	cwde   
   14000d1e5:	add    DWORD PTR [rax],eax
   14000d1e7:	add    BYTE PTR [rax+rax*1],al
   14000d1ea:	add    BYTE PTR [rax],al
   14000d1ec:	add    al,0x0
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	js     0x14000d1fb
   14000d1f2:	add    BYTE PTR [rax],al
   14000d1f4:	add    al,BYTE PTR [rax]
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	mov    cl,0x49
   14000d1fa:	add    eax,0xc8bdc2f7
   14000d1ff:	rex.R push rbp
   14000d201:	out    dx,al
   14000d202:	repnz xlat BYTE PTR ds:[rbx]
   14000d204:	mov    BYTE PTR [rdi-0x6d],ah
   14000d207:	loope  0x14000d218
   14000d209:	add    DWORD PTR [rcx],eax
   14000d20b:	add    BYTE PTR [rcx-0x1],al
   14000d20e:	inc    ebx
   14000d210:	add    BYTE PTR [rax],al
   14000d212:	add    BYTE PTR [rip+0x430007d2],dh        # 0x18300d9ea
   14000d218:	add    BYTE PTR [rax+0x0],cl
   14000d21b:	add    BYTE PTR [r14+0x0],r14b
   14000d21f:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d223:	je     0x14000d225
   14000d225:	add    BYTE PTR [rax],al
   14000d227:	sub    eax,0x6000000
   14000d22c:	mov    esp,0x7800050f
   14000d231:	add    BYTE PTR [rbp+0x0],ch
   14000d234:	ins    BYTE PTR es:[rdi],dx
   14000d235:	add    BYTE PTR [rsi+0x0],ch
   14000d238:	jae    0x14000d23a
   14000d23a:	add    BYTE PTR [rax],al
   14000d23c:	add    eax,0x43000c01
   14000d241:	add    BYTE PTR [rsi+0x0],ah
   14000d244:	add    BYTE PTR [eax+0x0],cl
   14000d248:	outs   dx,DWORD PTR ds:[rsi]
   14000d249:	add    BYTE PTR [rbx+0x0],dh
   14000d24c:	je     0x14000d24e
   14000d24e:	add    BYTE PTR [r14+0x0],r14b
   14000d252:	add    BYTE PTR gs:[rsi+0x0],ch
   14000d256:	je     0x14000d258
   14000d258:	add    al,BYTE PTR [rcx]
   14000d25a:	(bad)  
   14000d25b:	call   FWORD PTR [rax]
   14000d25d:	add    BYTE PTR [rax],al
   14000d25f:	add    ah,ah
   14000d261:	jp     0x14000d269
   14000d263:	add    BYTE PTR [rax+0x0],dh
   14000d266:	(bad)  
   14000d267:	add    BYTE PTR [rdx+0x0],dh
   14000d26a:	(bad)  
   14000d26b:	add    BYTE PTR [rbp+0x0],ch
   14000d26e:	xor    DWORD PTR [rax],eax
   14000d270:	add    BYTE PTR [rax],al
   14000d272:	add    cl,BYTE PTR [rip+0x4080000]        # 0x14408d278
   14000d278:	add    edi,edi
   14000d27a:	call   FWORD PTR [rax]
   14000d27c:	add    BYTE PTR [rax],al
   14000d27e:	add    ch,ah
   14000d280:	jp     0x14000d288
   14000d282:	add    BYTE PTR [rax+0x0],dh
   14000d285:	(bad)  
   14000d286:	add    BYTE PTR [rdx+0x0],dh
   14000d289:	(bad)  
   14000d28a:	add    BYTE PTR [rbp+0x0],ch
   14000d28d:	xor    al,BYTE PTR [rax]
   14000d28f:	add    BYTE PTR [rax],al
   14000d291:	add    cl,BYTE PTR [rip+0x4080001]        # 0x14408d298
   14000d297:	add    edi,edi
   14000d299:	call   FWORD PTR [rax]
   14000d29b:	add    BYTE PTR [rax],al
   14000d29d:	add    dh,ah
   14000d29f:	jp     0x14000d2a7
   14000d2a1:	add    BYTE PTR [rax+0x0],dh
   14000d2a4:	(bad)  
   14000d2a5:	add    BYTE PTR [rdx+0x0],dh
   14000d2a8:	(bad)  
   14000d2a9:	add    BYTE PTR [rbp+0x0],ch
   14000d2ac:	xor    eax,DWORD PTR [rax]
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	add    cl,BYTE PTR [rip+0x40e0002]        # 0x1440ed2b8
   14000d2b6:	add    edi,edi
   14000d2b8:	call   FWORD PTR [rax]
   14000d2ba:	add    BYTE PTR [rax],al
   14000d2bc:	add    bh,ah
   14000d2be:	jp     0x14000d2c6
   14000d2c0:	add    BYTE PTR [rax+0x0],dh
   14000d2c3:	(bad)  
   14000d2c4:	add    BYTE PTR [rdx+0x0],dh
   14000d2c7:	(bad)  
   14000d2c8:	add    BYTE PTR [rbp+0x0],ch
   14000d2cb:	xor    al,0x0
   14000d2cd:	add    BYTE PTR [rax],al
   14000d2cf:	add    cl,BYTE PTR [rip+0x4010003]        # 0x14401d2d8
   14000d2d5:	add    al,0x0
   14000d2d7:	add    BYTE PTR [rax],al
   14000d2d9:	add    BYTE PTR [rax],al
   14000d2db:	add    BYTE PTR [rax],cl
   14000d2dd:	or     BYTE PTR [rax],al
	...
   14000d2e7:	add    al,cl
   14000d2e9:	or     DWORD PTR [rax],eax
   14000d2eb:	add    BYTE PTR [rax],al
   14000d2ed:	add    BYTE PTR [rax],al
   14000d2ef:	add    BYTE PTR [rax],cl
   14000d2f1:	or     BYTE PTR [rax],al
	...
   14000d2fb:	add    ah,bl
   14000d2fd:	or     DWORD PTR [rax],eax
   14000d2ff:	add    BYTE PTR [rax+rax*1],al
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	(bad)  
   14000d305:	sldt   WORD PTR [rax]
   14000d308:	add    BYTE PTR [rax],al
   14000d30a:	add    BYTE PTR [rax],al
   14000d30c:	add    BYTE PTR [rax],al
   14000d30e:	add    DWORD PTR [rax],eax
   14000d310:	lock or DWORD PTR [rax],eax
   14000d313:	add    BYTE PTR [rax],al
   14000d315:	add    BYTE PTR [rax],al
   14000d317:	add    BYTE PTR [rcx],al
   14000d319:	add    DWORD PTR [rax],eax
	...
   14000d323:	add    BYTE PTR [rdx+rcx*1],al
   14000d326:	add    BYTE PTR [rax],al
   14000d328:	adc    al,0x0
   14000d32a:	add    BYTE PTR [rax],al
   14000d32c:	jo     0x14000d32e
   14000d32e:	(bad)  
   14000d32f:	add    BYTE PTR [rdx+0x0],dh
   14000d332:	(bad)  
   14000d333:	add    BYTE PTR [rbp+0x0],ch
   14000d336:	xor    DWORD PTR [rax],eax
   14000d338:	add    BYTE PTR [rax],al
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	adc    al,0x0
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	jo     0x14000d342
   14000d342:	(bad)  
   14000d343:	add    BYTE PTR [rdx+0x0],dh
   14000d346:	(bad)  
   14000d347:	add    BYTE PTR [rbp+0x0],ch
   14000d34a:	xor    al,BYTE PTR [rax]
   14000d34c:	add    BYTE PTR [rax],al
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	adc    al,0x0
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	jo     0x14000d356
   14000d356:	(bad)  
   14000d357:	add    BYTE PTR [rdx+0x0],dh
   14000d35a:	(bad)  
   14000d35b:	add    BYTE PTR [rbp+0x0],ch
   14000d35e:	xor    eax,DWORD PTR [rax]
   14000d360:	add    BYTE PTR [rax],al
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	adc    al,0x0
   14000d366:	add    BYTE PTR [rax],al
   14000d368:	jo     0x14000d36a
   14000d36a:	(bad)  
   14000d36b:	add    BYTE PTR [rdx+0x0],dh
   14000d36e:	(bad)  
   14000d36f:	add    BYTE PTR [rbp+0x0],ch
   14000d372:	xor    al,0x0
   14000d374:	add    BYTE PTR [rax],al
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	rex.WRXB push r8
   14000d37a:	rex.XB
   14000d37b:	rex.WRXB xor BYTE PTR [r8],r8b
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	add    DWORD PTR [rax],eax
	...
   14000d38a:	add    BYTE PTR [rax],dh
   14000d38c:	xor    BYTE PTR [rdx],cl
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	sbb    BYTE PTR [rax],al
   14000d392:	add    BYTE PTR [rax],al
   14000d394:	ja     0x14000d396
   14000d396:	imul   eax,DWORD PTR [rax],0x3a006e
   14000d39c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d3a0:	data16 add BYTE PTR [rdi+0x0],ch
   14000d3a4:	add    BYTE PTR [rax],al
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	rex.WR
   14000d3a9:	rex.RB push r14
   14000d3ab:	rex.WR
   14000d3ac:	add    BYTE PTR fs:[rax],al
   14000d3af:	add    BYTE PTR [rdx],al
   14000d3b1:	add    BYTE PTR [rax],al
   14000d3b3:	add    BYTE PTR [rdx],al
   14000d3b5:	add    BYTE PTR [rax],al
   14000d3b7:	add    BYTE PTR [rdx],al
   14000d3b9:	add    BYTE PTR [rax],al
   14000d3bb:	push   rax
   14000d3bc:	ins    BYTE PTR es:[rdi],dx
   14000d3bd:	or     al,BYTE PTR [rax]
   14000d3bf:	add    BYTE PTR [rax+rax*1],al
   14000d3c2:	add    BYTE PTR [rax],al
   14000d3c4:	add    al,0x0
   14000d3c6:	add    BYTE PTR [rax-0x7c],dl
   14000d3c9:	or     al,BYTE PTR [rax]
   14000d3cb:	add    BYTE PTR [rax],bl
   14000d3cd:	add    BYTE PTR [rax],al
   14000d3cf:	add    BYTE PTR [rdi+0x0],dh
   14000d3d2:	imul   eax,DWORD PTR [rax],0x3a006e
   14000d3d8:	add    BYTE PTR [r10+0x0],r14b
   14000d3dc:	jb     0x14000d3de
   14000d3de:	outs   dx,DWORD PTR ds:[rsi]
   14000d3df:	add    BYTE PTR [rdx+0x0],dh
   14000d3e2:	add    BYTE PTR [rax],al
   14000d3e4:	sub    BYTE PTR [rax],al
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	ja     0x14000d3ea
   14000d3ea:	imul   eax,DWORD PTR [rax],0x3a006e
   14000d3f0:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000d3f4:	data16 add BYTE PTR [rdi+0x0],ch
   14000d3f8:	jb     0x14000d3fa
   14000d3fa:	ins    DWORD PTR es:[rdi],dx
   14000d3fb:	add    BYTE PTR [rcx+0x0],ah
   14000d3fe:	je     0x14000d400
   14000d400:	imul   eax,DWORD PTR [rax],0x6e006f
   14000d406:	(bad)  
   14000d407:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000d40b:	add    BYTE PTR [rcx+rax*2+0x53],dl
   14000d40f:	rex.WXB fadd DWORD PTR [r8]
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	add    eax,DWORD PTR [rax]
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	add    DWORD PTR [rax],eax
   14000d41a:	add    BYTE PTR [rax],al
   14000d41c:	(bad)  
   14000d41d:	(bad)  
   14000d41e:	(bad)  
   14000d41f:	inc    DWORD PTR [rax]
	...
   14000d42d:	add    BYTE PTR [rax],al
   14000d42f:	add    BYTE PTR [rbx+rcx*1],cl
   14000d432:	add    BYTE PTR [rax],al
   14000d434:	add    al,BYTE PTR [rax]
   14000d436:	add    BYTE PTR [rax],al
   14000d438:	(bad)  
   14000d439:	(bad)  
   14000d43a:	(bad)  
   14000d43b:	inc    DWORD PTR [rax]
	...
   14000d449:	add    BYTE PTR [rax],al
   14000d44b:	add    BYTE PTR [rax],dh
   14000d44d:	or     eax,DWORD PTR [rax]
   14000d44f:	add    BYTE PTR [rbx],al
   14000d451:	add    BYTE PTR [rax],al
   14000d453:	add    bh,bh
   14000d455:	(bad)  
   14000d456:	(bad)  
   14000d457:	inc    DWORD PTR [rax]
	...
   14000d465:	add    BYTE PTR [rax],al
   14000d467:	add    BYTE PTR [rbx+rcx*1+0x0],dl
   14000d46b:	add    BYTE PTR [rax+rax*1],ah
   14000d46e:	add    BYTE PTR [rax],al
   14000d470:	rex.XB add BYTE PTR [r14+0x0],spl
   14000d474:	add    BYTE PTR [eax+0x0],cl
   14000d478:	outs   dx,DWORD PTR ds:[rsi]
   14000d479:	add    BYTE PTR [rbx+0x0],dh
   14000d47c:	je     0x14000d47e
   14000d47e:	push   rax
   14000d47f:	add    BYTE PTR [rdx+0x0],dh
   14000d482:	outs   dx,DWORD PTR ds:[rsi]
   14000d483:	add    BYTE PTR [rbx+0x0],ah
   14000d486:	add    BYTE PTR gs:[rbx+0x0],dh
   14000d48a:	jae    0x14000d48c
   14000d48c:	add    BYTE PTR [rax],al
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	and    al,0x0
   14000d492:	add    BYTE PTR [rax],al
   14000d494:	rex.XB add BYTE PTR [r14+0x0],spl
   14000d498:	add    BYTE PTR [eax+0x0],cl
   14000d49c:	outs   dx,DWORD PTR ds:[rsi]
   14000d49d:	add    BYTE PTR [rbx+0x0],dh
   14000d4a0:	je     0x14000d4a2
   14000d4a2:	add    BYTE PTR [rbp+0x0],r12b
   14000d4a6:	movsxd eax,DWORD PTR [rax]
   14000d4a8:	outs   dx,DWORD PTR ds:[rsi]
   14000d4a9:	add    BYTE PTR [rax+rax*1+0x69],ah
   14000d4ad:	add    BYTE PTR [rsi+0x0],ch
   14000d4b0:	add    BYTE PTR [eax],al
   14000d4b3:	add    BYTE PTR [rax],dh
   14000d4b5:	add    BYTE PTR [rax],al
   14000d4b7:	add    BYTE PTR [rbx+0x0],al
   14000d4ba:	data16 add BYTE PTR [rdi+0x0],ah
   14000d4be:	rex.W add BYTE PTR [rdi+0x0],bpl
   14000d4c2:	jae    0x14000d4c4
   14000d4c4:	je     0x14000d4c6
   14000d4c6:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000d4ca:	outs   dx,BYTE PTR ds:[rsi]
   14000d4cb:	add    BYTE PTR [rsi+0x0],ah
   14000d4ce:	imul   eax,DWORD PTR [rax],0x750067
   14000d4d4:	jb     0x14000d4d6
   14000d4d6:	(bad)  
   14000d4d7:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000d4db:	add    BYTE PTR [rdi+0x0],ch
   14000d4de:	outs   dx,BYTE PTR ds:[rsi]
   14000d4df:	add    BYTE PTR [rax],al
   14000d4e1:	add    BYTE PTR [rax],al
   14000d4e3:	add    BYTE PTR [rbx+0x45],cl
   14000d4e6:	pop    rcx
   14000d4e7:	push   rdi
   14000d4e8:	pop    rax
   14000d4e9:	add    BYTE PTR [rax],al
   14000d4eb:	add    BYTE PTR [rdx],al
   14000d4ed:	add    BYTE PTR [rax],al
   14000d4ef:	add    BYTE PTR [rcx],al
   14000d4f1:	add    BYTE PTR [rax],al
   14000d4f3:	add    BYTE PTR [rax],al
   14000d4f5:	add    BYTE PTR [rax],al
   14000d4f7:	add    bh,bh
   14000d4f9:	(bad)  
   14000d4fa:	(bad)  
   14000d4fb:	push   QWORD PTR [rax+0x200000b]
   14000d501:	add    BYTE PTR [rax],al
   14000d503:	add    BYTE PTR [rax],al
   14000d505:	add    BYTE PTR [rax],al
   14000d507:	add    bh,bh
   14000d509:	(bad)  
   14000d50a:	(bad)  
   14000d50b:	inc    eax
   14000d50d:	or     eax,DWORD PTR [rax]
   14000d50f:	add    BYTE PTR [rax],dl
   14000d511:	add    BYTE PTR [rax],al
   14000d513:	add    BYTE PTR [rax+rax*1+0x65],al
   14000d517:	add    BYTE PTR [rdx+0x0],ah
   14000d51a:	jne    0x14000d51c
   14000d51c:	add    BYTE PTR [eax],al
   14000d51f:	add    BYTE PTR [rax+rax*1],bl
   14000d522:	add    BYTE PTR [rax],al
   14000d524:	push   rax
   14000d525:	add    BYTE PTR [rbp+0x0],ah
   14000d528:	jb     0x14000d52a
   14000d52a:	data16 add BYTE PTR [rdi+0x0],ch
   14000d52e:	jb     0x14000d530
   14000d530:	ins    DWORD PTR es:[rdi],dx
   14000d531:	add    BYTE PTR [rcx+0x0],ah
   14000d534:	outs   dx,BYTE PTR ds:[rsi]
   14000d535:	add    BYTE PTR [rbx+0x0],ah
   14000d538:	add    BYTE PTR gs:[rax],al
   14000d53b:	add    BYTE PTR [rax],al
   14000d53d:	add    BYTE PTR [rax],al
   14000d53f:	add    BYTE PTR [rbp+0x56],al
   14000d542:	rex.WRX push rsp
   14000d544:	jo     0x14000d547
   14000d546:	add    BYTE PTR [rax],al
   14000d548:	(bad)  
   14000d549:	add    BYTE PTR [rax],al
   14000d54b:	add    BYTE PTR [rax],al
   14000d54d:	add    BYTE PTR [rax],al
   14000d54f:	add    BYTE PTR [rcx],al
   14000d551:	add    BYTE PTR [rax],al
   14000d553:	add    BYTE PTR [rax+rax*1],al
   14000d556:	add    DWORD PTR [rax],eax
   14000d558:	add    al,BYTE PTR [rax]
   14000d55a:	add    BYTE PTR [rax],al
   14000d55c:	add    BYTE PTR [rax],al
   14000d55e:	add    BYTE PTR [rax],al
   14000d560:	add    DWORD PTR [rax],eax
   14000d562:	add    BYTE PTR [rax+0x434],dh
   14000d568:	and    al,0xa
   14000d56a:	add    BYTE PTR [rax],al
   14000d56c:	(bad)  
   14000d56d:	or     al,BYTE PTR [rax]
   14000d56f:	add    BYTE PTR [rax+0x100000a],bh
   14000d575:	add    BYTE PTR [rax],al
   14000d577:	add    BYTE PTR [rax+0xd],al
   14000d57a:	add    BYTE PTR [rax],al
   14000d57c:	add    BYTE PTR [rax],al
   14000d57e:	add    BYTE PTR [rax],al
   14000d580:	add    al,BYTE PTR [rax]
   14000d582:	add    BYTE PTR [rax],al
   14000d584:	add    al,BYTE PTR [rax]
   14000d586:	add    DWORD PTR [rax],eax
	...
   14000d590:	add    al,BYTE PTR [rax]
   14000d592:	add    BYTE PTR [rax+0x614],dh
   14000d598:	and    al,0xa
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	push   rsp
   14000d59d:	or     al,BYTE PTR [rax]
   14000d59f:	add    BYTE PTR [rax+0xa],bh
	...
   14000d5ad:	add    BYTE PTR [rax],al
   14000d5af:	add    BYTE PTR [rbx],al
   14000d5b1:	add    BYTE PTR [rax],al
   14000d5b3:	add    BYTE PTR [rax+rax*1],al
   14000d5b6:	add    al,BYTE PTR [rax]
   14000d5b8:	add    al,BYTE PTR [rax]
   14000d5ba:	add    BYTE PTR [rax],al
   14000d5bc:	add    BYTE PTR [rax],al
   14000d5be:	add    BYTE PTR [rax],al
   14000d5c0:	add    eax,DWORD PTR [rax]
   14000d5c2:	add    BYTE PTR [rax+0x98],dh
   14000d5c8:	and    al,0xa
   14000d5ca:	add    BYTE PTR [rax],al
   14000d5cc:	(bad)  
   14000d5cd:	or     al,BYTE PTR [rax]
   14000d5cf:	add    ah,dl
   14000d5d1:	or     al,BYTE PTR [rax]
   14000d5d3:	add    BYTE PTR [rcx],al
   14000d5d5:	add    BYTE PTR [rax],al
   14000d5d7:	add    BYTE PTR [rbp+rcx*1+0x0],al
   14000d5db:	add    BYTE PTR [rax],al
   14000d5dd:	add    BYTE PTR [rax],al
   14000d5df:	add    BYTE PTR [rax+rax*1],al
   14000d5e2:	add    BYTE PTR [rax],al
   14000d5e4:	add    al,BYTE PTR [rax]
   14000d5e6:	add    al,BYTE PTR [rax]
	...
   14000d5f0:	add    al,0x0
   14000d5f2:	add    BYTE PTR [rax+0x114],dh
   14000d5f8:	and    al,0xa
   14000d5fa:	add    BYTE PTR [rax],al
   14000d5fc:	push   rsp
   14000d5fd:	or     al,BYTE PTR [rax]
   14000d5ff:	add    ah,dl
   14000d601:	or     al,BYTE PTR [rax]
	...
   14000d60f:	add    BYTE PTR [rip+0x4000000],al        # 0x14400d615
   14000d615:	add    BYTE PTR [rbx],al
   14000d617:	add    BYTE PTR [rdx],al
   14000d619:	add    BYTE PTR [rax],al
   14000d61b:	add    BYTE PTR [rax],al
   14000d61d:	add    BYTE PTR [rax],al
   14000d61f:	add    BYTE PTR [rip+0xffffffff98b00000],al        # 0xd8b0d625
   14000d625:	add    BYTE PTR [rax],al
   14000d627:	add    BYTE PTR [rdx+rcx*1],ah
   14000d62a:	add    BYTE PTR [rax],al
   14000d62c:	(bad)  
   14000d62d:	or     al,BYTE PTR [rax]
   14000d62f:	add    al,dh
   14000d631:	or     al,BYTE PTR [rax]
   14000d633:	add    BYTE PTR [rcx],al
   14000d635:	add    BYTE PTR [rax],al
   14000d637:	add    BYTE PTR [rax+0xd],cl
   14000d63a:	add    BYTE PTR [rax],al
   14000d63c:	add    BYTE PTR [rax],al
   14000d63e:	add    BYTE PTR [rax],al
   14000d640:	(bad)  
   14000d641:	add    BYTE PTR [rax],al
   14000d643:	add    BYTE PTR [rdx],al
   14000d645:	add    BYTE PTR [rbx],al
	...
   14000d64f:	add    BYTE PTR [rsi],al
   14000d651:	add    BYTE PTR [rax],al
   14000d653:	mov    al,0x14
   14000d655:	add    DWORD PTR [rax],eax
   14000d657:	add    BYTE PTR [rdx+rcx*1],ah
   14000d65a:	add    BYTE PTR [rax],al
   14000d65c:	push   rsp
   14000d65d:	or     al,BYTE PTR [rax]
   14000d65f:	add    al,dh
   14000d661:	or     al,BYTE PTR [rax]
	...
   14000d66f:	add    BYTE PTR [rdi],al
   14000d671:	add    BYTE PTR [rax],al
   14000d673:	add    BYTE PTR [rax+rax*1],al
   14000d676:	add    DWORD PTR [rax],eax
   14000d678:	add    al,BYTE PTR [rax]
   14000d67a:	add    BYTE PTR [rax],al
   14000d67c:	add    BYTE PTR [rax],al
   14000d67e:	add    BYTE PTR [rax],al
   14000d680:	(bad)  
   14000d681:	add    BYTE PTR [rax],al
   14000d683:	mov    al,0x98
   14000d685:	add    BYTE PTR [rax],al
   14000d687:	add    BYTE PTR [rdx+rcx*1],ah
   14000d68a:	add    BYTE PTR [rax],al
   14000d68c:	(bad)  
   14000d68d:	or     al,BYTE PTR [rax]
   14000d68f:	add    BYTE PTR [rax+0x100000a],bh
   14000d695:	add    BYTE PTR [rax],al
   14000d697:	add    BYTE PTR [rbp+rcx*1+0x0],cl
   14000d69b:	add    BYTE PTR [rax],al
   14000d69d:	add    BYTE PTR [rax],al
   14000d69f:	add    BYTE PTR [rax-0x5ffffff5],ah
   14000d6a5:	or     eax,DWORD PTR [rax]
   14000d6a7:	add    BYTE PTR [rax-0x5ffffff5],ah
   14000d6ad:	or     eax,DWORD PTR [rax]
	...

Disassembly of section .reloc:

000000014000e000 <.reloc>:
   14000e000:	add    BYTE PTR [rax+0x0],dl
   14000e003:	add    ah,ch
   14000e005:	add    BYTE PTR [rax],al
   14000e007:	add    BYTE PTR [rax],cl
   14000e009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e00a:	adc    BYTE PTR [rax+riz*1+0x30a428a4],ah
   14000e011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e012:	cmp    BYTE PTR [rax+rdx*2+0x48a458a4],ah
   14000e019:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e01a:	push   rax
   14000e01b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e01c:	(bad)  
   14000e01d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e01e:	jo     0x14000dfc6
   14000e020:	js     0x14000dfc8
   14000e022:	and    BYTE PTR [rsi-0x596f5978],0x98
   14000e029:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e02a:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14000e033:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e034:	enter  0xd0a6,0xa6
   14000e038:	fsub   DWORD PTR [rsi-0x59175920]
   14000e03e:	or     BYTE PTR [rdi-0x58e758f0],ah
   14000e044:	and    BYTE PTR [rdi-0x58cf58d8],ah
   14000e04a:	(bad)  
   14000e04b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e04c:	push   0x78a770a7
   14000e051:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e052:	and    BYTE PTR [rdi-0x58375878],0xd8
   14000e059:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e05a:	call   0x148a8d906
   14000e05f:	test   al,0x18
   14000e061:	test   al,0x28
   14000e063:	test   al,0x38
   14000e065:	test   al,0x48
   14000e067:	test   al,0x58
   14000e069:	test   al,0x68
   14000e06b:	test   al,0x78
   14000e06d:	test   al,0x88
   14000e06f:	test   al,0x98
   14000e071:	test   al,0xa8
   14000e073:	test   al,0xb8
   14000e075:	test   al,0xc8
   14000e077:	test   al,0xd8
   14000e079:	test   al,0xe8
   14000e07b:	test   al,0xf8
   14000e07d:	test   al,0x8
   14000e07f:	test   eax,0xa928a918
   14000e084:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   14000e08a:	push   0xffffffff88a978a9
   14000e08f:	test   eax,0xa9a8a998
   14000e094:	mov    eax,0xd8a9c8a9
   14000e099:	test   eax,0xa9f8a9e8
   14000e09e:	or     BYTE PTR [rdx-0x55d755e8],ch
   14000e0a4:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   14000e0aa:	push   0xffffffff88aa78aa
   14000e0af:	stos   BYTE PTR es:[rdi],al
   14000e0b0:	cwde   
   14000e0b1:	stos   BYTE PTR es:[rdi],al
   14000e0b2:	test   al,0xaa
   14000e0b4:	mov    eax,0xd8aac8aa
   14000e0b9:	stos   BYTE PTR es:[rdi],al
   14000e0ba:	call   0x148abd969
   14000e0bf:	stos   DWORD PTR es:[rdi],eax
   14000e0c0:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   14000e0c6:	stos   QWORD PTR es:[rdi],rax
   14000e0c8:	pop    rax
   14000e0c9:	stos   DWORD PTR es:[rdi],eax
   14000e0ca:	push   0xffffffff88ab78ab
   14000e0cf:	stos   DWORD PTR es:[rdi],eax
   14000e0d0:	cwde   
   14000e0d1:	stos   DWORD PTR es:[rdi],eax
   14000e0d2:	test   al,0xab
   14000e0d4:	mov    eax,0xd8abc8ab
   14000e0d9:	stos   DWORD PTR es:[rdi],eax
   14000e0da:	call   0x148acd98a
   14000e0df:	lods   al,BYTE PTR ds:[rsi]
   14000e0e0:	sbb    BYTE PTR [rax+rbp*1+0x48ac38ac],ch
   14000e0e7:	lods   al,BYTE PTR ds:[rsi]
   14000e0e8:	pop    rax
   14000e0e9:	lods   al,BYTE PTR ds:[rsi]
   14000e0ea:	add    BYTE PTR [rax],al
   14000e0ec:	add    BYTE PTR [rax+0x0],ah
   14000e0ef:	add    BYTE PTR [rax-0x48000000],ch
   14000e0f5:	movabs al,ds:0xa0f8a0e8a0d8a0c8
   14000e0fe:	or     BYTE PTR [rcx-0x5ed75ee8],ah
   14000e104:	cmp    BYTE PTR [rcx-0x5ea75eb8],ah
   14000e10a:	push   0xffffffff88a178a1
   14000e10f:	movabs eax,ds:0xa1c8a1b8a1a8a198
   14000e118:	fsub   DWORD PTR [rcx-0x5e075e18]
   14000e11e:	or     BYTE PTR [rdx-0x5dd75de8],ah
   14000e124:	cmp    BYTE PTR [rdx-0x5da75db8],ah
   14000e12a:	push   0xffffffff88a278a2
   14000e12f:	movabs ds:0xa2c8a2b8a2a8a298,al
   14000e138:	fsub   DWORD PTR [rdx-0x5d075d18]
   14000e13e:	or     BYTE PTR [rbx-0x5cd75ce8],ah
   14000e144:	cmp    BYTE PTR [rbx-0x5ca75cb8],ah
   14000e14a:	push   0xffffffff88a378a3
   14000e14f:	movabs ds:0xa3c8a3b8a3a8a398,eax
   14000e158:	fsub   DWORD PTR [rbx-0x5c075c18]
   14000e15e:	or     BYTE PTR [rax+rbx*1+0x38a428a4],ah
   14000e165:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e166:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e168:	pop    rax
   14000e169:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e16a:	push   0xffffffff88a478a4
   14000e16f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e170:	cwde   
   14000e171:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e172:	test   al,0xa4
   14000e174:	mov    eax,0xd8a4c8a4
   14000e179:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e17a:	call   0x148a5da23
   14000e17f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e180:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   14000e186:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   14000e188:	pop    rax
   14000e189:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e18a:	push   0xffffffff88a578a5
   14000e18f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e190:	mov    al,0xaa
   14000e192:	add    BYTE PTR [rax],al
   14000e194:	add    BYTE PTR [rax+0x0],dh
   14000e197:	add    BYTE PTR [rax],dl
   14000e199:	add    BYTE PTR [rax],al
   14000e19b:	add    al,ch
   14000e19d:	movabs al,ds:0x9000a110a108a100
   14000e1a6:	add    BYTE PTR [rax],al
   14000e1a8:	and    BYTE PTR [rax],al
   14000e1aa:	add    BYTE PTR [rax],al
   14000e1ac:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   14000e1b2:	jo     0x14000e154
   14000e1b4:	js     0x14000e156
   14000e1b6:	and    BYTE PTR [rax-0x5f475f70],0xd8
   14000e1bd:	movabs al,ds:0xb0000000a128a100
   14000e1c6:	add    BYTE PTR [rax],al
   14000e1c8:	adc    BYTE PTR [rax],al
   14000e1ca:	add    BYTE PTR [rax],al
   14000e1cc:	add    BYTE PTR [rax-0x5fdf5ff0],ah
	...
