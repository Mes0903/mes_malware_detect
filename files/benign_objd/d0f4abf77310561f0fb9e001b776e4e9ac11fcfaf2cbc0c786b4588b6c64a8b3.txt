
d0f4abf77310561f0fb9e001b776e4e9ac11fcfaf2cbc0c786b4588b6c64a8b3.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x1ea75]        # 0x41fa90
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x1ea76]        # 0x41faa0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x1ea79]        # 0x41fab0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x1ea3c]        # 0x41fa80
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x1e81f]        # 0x41f870
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x1ea11]        # 0x41fa70
  40105f:	mov    DWORD PTR [rip+0x21fa3],edx        # 0x423008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4186e8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x4120c0
  401081:	mov    rdx,QWORD PTR [rip+0x1e888]        # 0x41f910
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x1e86e]        # 0x41f900
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x1e8e4]        # 0x41f980
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x1e80b]        # 0x41f8b0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x411ca0
  4010af:	mov    rax,QWORD PTR [rip+0x1e76a]        # 0x41f820
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4186e8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x10e79]        # 0x411fa0
  401127:	call   0x411f90
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x1e845]        # 0x41f9b0
  40116b:	lea    r8,[rip+0x21ea6]        # 0x423018
  401172:	lea    rdx,[rip+0x21ea7]        # 0x423020
  401179:	lea    rcx,[rip+0x21ea8]        # 0x423028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x21e78],eax        # 0x423000
  401188:	lea    rax,[rip+0x21e71]        # 0x423000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x1e7d5]        # 0x41f970
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x418700
  4011a3:	mov    DWORD PTR [rip+0x21e67],eax        # 0x423010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x1e8aa]        # 0x41fa70
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x1e6eb]        # 0x41f8e0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x2446e]        # 0x425670
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x1e6c7]        # 0x41f8f0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x21dba],0x1        # 0x423004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x1e5fc]        # 0x41f860
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x4122b0
  40127d:	lea    rcx,[rip+0x115cc]        # 0x412850
  401284:	call   QWORD PTR [rip+0x243de]        # 0x425668
  40128a:	mov    rdx,QWORD PTR [rip+0x1e63f]        # 0x41f8d0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x412760
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x418730
  4012a5:	call   0x4120a0
  4012aa:	mov    rax,QWORD PTR [rip+0x1e5bf]        # 0x41f870
  4012b1:	mov    QWORD PTR [rip+0x23880],rax        # 0x424b38
  4012b8:	mov    rax,QWORD PTR [rip+0x1e5e1]        # 0x41f8a0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x23819],rax        # 0x424b30
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x17cca],eax        # 0x419000
  401336:	mov    r12d,DWORD PTR [rip+0x21ceb]        # 0x423028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4185a8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x21cc2]        # 0x423020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x418538
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4185a8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4185a0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x21c6a],rbp        # 0x423020
  4013b6:	call   0x411c70
  4013bb:	mov    rax,QWORD PTR [rip+0x1e4be]        # 0x41f880
  4013c2:	mov    rdx,QWORD PTR [rip+0x21c4f]        # 0x423018
  4013c9:	mov    ecx,DWORD PTR [rip+0x21c59]        # 0x423028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x21c3c]        # 0x423018
  4013dc:	mov    rdx,QWORD PTR [rip+0x21c3d]        # 0x423020
  4013e3:	call   0x418910
  4013e8:	mov    ecx,DWORD PTR [rip+0x21c1a]        # 0x423008
  4013ee:	mov    DWORD PTR [rip+0x21c18],eax        # 0x42300c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x21c02]        # 0x423004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4186d0
  40140b:	mov    eax,DWORD PTR [rip+0x21bfb]        # 0x42300c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x1e4b9]        # 0x41f8f0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4186d8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x1e4dd]        # 0x41f940
  401463:	mov    rcx,QWORD PTR [rip+0x1e4c6]        # 0x41f930
  40146a:	call   0x418688
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x2416f]        # 0x425608
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x1e4b9]        # 0x41f960
  4014a7:	mov    rcx,QWORD PTR [rip+0x1e4a2]        # 0x41f950
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x418688
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x418630
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x1e595]        # 0x41fa70
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x411cb0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x1e565]        # 0x41fa70
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x411cb0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	sub    rsp,0x38
  401534:	mov    QWORD PTR [rsp+0x48],rdx
  401539:	lea    rdx,[rsp+0x48]
  40153e:	mov    QWORD PTR [rsp+0x50],r8
  401543:	mov    QWORD PTR [rsp+0x58],r9
  401548:	mov    QWORD PTR [rsp+0x28],rdx
  40154d:	call   0x413aa0
  401552:	add    rsp,0x38
  401556:	ret    
  401557:	nop    WORD PTR [rax+rax*1+0x0]
  401560:	push   rdi
  401561:	push   rsi
  401562:	push   rbx
  401563:	sub    rsp,0x20
  401567:	xor    ebx,ebx
  401569:	mov    edi,0xaaaaaaab
  40156e:	mov    rsi,rdx
  401571:	mov    rdx,rcx
  401574:	lea    rcx,[rip+0x18a85]        # 0x41a000
  40157b:	call   0x401530
  401580:	mov    eax,DWORD PTR [rsi+0x8]
  401583:	test   eax,eax
  401585:	je     0x4015e0
  401587:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	mov    rdx,QWORD PTR [rsi]
  401593:	mov    eax,ebx
  401595:	lea    rcx,[rip+0x18a71]        # 0x41a00d
  40159c:	add    ebx,0x1
  40159f:	movzx  edx,BYTE PTR [rdx+rax*1]
  4015a3:	call   0x401530
  4015a8:	cmp    DWORD PTR [rsi+0x8],ebx
  4015ab:	jbe    0x4015e0
  4015ad:	test   ebx,ebx
  4015af:	je     0x401590
  4015b1:	mov    eax,ebx
  4015b3:	mul    edi
  4015b5:	mov    eax,edx
  4015b7:	shr    eax,0x3
  4015ba:	lea    eax,[rax+rax*2]
  4015bd:	shl    eax,0x2
  4015c0:	cmp    ebx,eax
  4015c2:	je     0x4015d2
  4015c4:	lea    rcx,[rip+0x18a40]        # 0x41a00b
  4015cb:	call   0x401530
  4015d0:	jmp    0x401590
  4015d2:	lea    rcx,[rip+0x18a2f]        # 0x41a008
  4015d9:	call   0x401530
  4015de:	jmp    0x401590
  4015e0:	lea    rcx,[rip+0x18a1e]        # 0x41a005
  4015e7:	add    rsp,0x20
  4015eb:	pop    rbx
  4015ec:	pop    rsi
  4015ed:	pop    rdi
  4015ee:	jmp    0x401530
  4015f3:	nop    DWORD PTR [rax]
  4015f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401600:	sub    rsp,0x38
  401604:	mov    QWORD PTR [rsp+0x50],r8
  401609:	lea    r8,[rsp+0x50]
  40160e:	mov    QWORD PTR [rsp+0x58],r9
  401613:	mov    QWORD PTR [rsp+0x28],r8
  401618:	call   0x413b40
  40161d:	add    rsp,0x38
  401621:	ret    
  401622:	nop    DWORD PTR [rax+0x0]
  401626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401630:	sub    rsp,0x38
  401634:	mov    QWORD PTR [rsp+0x50],r8
  401639:	lea    r8,[rsp+0x50]
  40163e:	mov    QWORD PTR [rsp+0x58],r9
  401643:	mov    QWORD PTR [rsp+0x28],r8
  401648:	call   0x413a70
  40164d:	add    rsp,0x38
  401651:	ret    
  401652:	nop    DWORD PTR [rax+0x0]
  401656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401660:	push   rsi
  401661:	push   rbx
  401662:	sub    rsp,0x28
  401666:	mov    ebx,ecx
  401668:	mov    rsi,rdx
  40166b:	call   QWORD PTR [rip+0x24067]        # 0x4256d8
  401671:	lea    rdx,[rip+0x1899a]        # 0x41a012
  401678:	lea    rcx,[rax+0x60]
  40167c:	mov    r9,rsi
  40167f:	mov    r8d,ebx
  401682:	add    rsp,0x28
  401686:	pop    rbx
  401687:	pop    rsi
  401688:	jmp    0x401630
  40168a:	nop    WORD PTR [rax+rax*1+0x0]
  401690:	push   r15
  401692:	push   r14
  401694:	mov    eax,0x1478
  401699:	push   r13
  40169b:	push   r12
  40169d:	push   rbp
  40169e:	push   rdi
  40169f:	push   rsi
  4016a0:	push   rbx
  4016a1:	call   0x413020
  4016a6:	sub    rsp,rax
  4016a9:	lea    rdx,[rip+0x1896c]        # 0x41a01c
  4016b0:	mov    rbx,rcx
  4016b3:	call   0x418608
  4016b8:	test   rax,rax
  4016bb:	mov    r14,rax
  4016be:	je     0x401865
  4016c4:	mov    r13,QWORD PTR [rip+0x1e395]        # 0x41fa60
  4016cb:	mov    r12,QWORD PTR [rip+0x1e37e]        # 0x41fa50
  4016d2:	lea    rdi,[rsp+0x30]
  4016d7:	lea    rsi,[rsp+0x40]
  4016dc:	lea    rbp,[rsp+0x60]
  4016e1:	mov    ebx,0x1
  4016e6:	cmp    ebx,0x1
  4016e9:	je     0x401883
  4016ef:	cmp    ebx,0x2
  4016f2:	je     0x401922
  4016f8:	cmp    ebx,0x3
  4016fb:	je     0x4018b8
  401701:	cmp    ebx,0x4
  401704:	je     0x4018ed
  40170a:	mov    rax,QWORD PTR [r13+0x0]
  40170e:	mov    rdx,QWORD PTR [r13+0x8]
  401712:	mov    QWORD PTR [rsp+0x40],rax
  401717:	mov    QWORD PTR [rsp+0x48],rdx
  40171c:	mov    rax,QWORD PTR [r12]
  401720:	mov    rdx,QWORD PTR [r12+0x8]
  401725:	mov    QWORD PTR [rsp+0x30],rax
  40172a:	mov    QWORD PTR [rsp+0x38],rdx
  40172f:	mov    r8d,DWORD PTR [rsp+0x48]
  401734:	lea    rcx,[rip+0x188fa]        # 0x41a035
  40173b:	mov    edx,ebx
  40173d:	shl    r8d,0x3
  401741:	call   0x401530
  401746:	lea    rcx,[rip+0x18900]        # 0x41a04d
  40174d:	mov    rdx,rdi
  401750:	call   0x401560
  401755:	lea    rcx,[rip+0x188fb]        # 0x41a057
  40175c:	mov    rdx,rsi
  40175f:	call   0x401560
  401764:	mov    rdx,rbp
  401767:	mov    rcx,rsi
  40176a:	call   0x402530
  40176f:	test   eax,eax
  401771:	js     0x40184a
  401777:	lea    rdx,[rsp+0x50]
  40177c:	mov    rcx,rdi
  40177f:	call   0x402530
  401784:	test   eax,eax
  401786:	js     0x40184a
  40178c:	mov    rax,QWORD PTR [rsp+0x50]
  401791:	mov    r9,QWORD PTR [rsp+0x60]
  401796:	lea    r15,[rsp+0x70]
  40179b:	lea    rdx,[rip+0x188cd]        # 0x41a06f
  4017a2:	mov    r8d,ebx
  4017a5:	mov    rcx,r15
  4017a8:	mov    QWORD PTR [rsp+0x20],rax
  4017ad:	call   0x401600
  4017b2:	mov    rax,QWORD PTR [rip+0x1e207]        # 0x41f9c0
  4017b9:	mov    rcx,QWORD PTR [rsp+0x60]
  4017be:	call   QWORD PTR [rax]
  4017c0:	mov    rax,QWORD PTR [rip+0x1e1f9]        # 0x41f9c0
  4017c7:	mov    rcx,QWORD PTR [rsp+0x50]
  4017cc:	call   QWORD PTR [rax]
  4017ce:	mov    r8,r15
  4017d1:	mov    eax,DWORD PTR [r8]
  4017d4:	add    r8,0x4
  4017d8:	lea    r10d,[rax-0x1010101]
  4017df:	not    eax
  4017e1:	and    r10d,eax
  4017e4:	and    r10d,0x80808080
  4017eb:	je     0x4017d1
  4017ed:	mov    eax,r10d
  4017f0:	mov    r9,r14
  4017f3:	mov    edx,0x1
  4017f8:	shr    eax,0x10
  4017fb:	test   r10d,0x8080
  401802:	mov    rcx,r15
  401805:	cmove  r10d,eax
  401809:	lea    rax,[r8+0x2]
  40180d:	cmove  r8,rax
  401811:	add    r10b,r10b
  401814:	sbb    r8,0x3
  401818:	add    ebx,0x1
  40181b:	sub    r8,r15
  40181e:	call   0x4185c8
  401823:	cmp    ebx,0x6
  401826:	jne    0x4016e6
  40182c:	mov    rcx,r14
  40182f:	call   0x418628
  401834:	xor    eax,eax
  401836:	add    rsp,0x1478
  40183d:	pop    rbx
  40183e:	pop    rsi
  40183f:	pop    rdi
  401840:	pop    rbp
  401841:	pop    r12
  401843:	pop    r13
  401845:	pop    r14
  401847:	pop    r15
  401849:	ret    
  40184a:	call   QWORD PTR [rip+0x23e88]        # 0x4256d8
  401850:	lea    rdx,[rip+0x18806]        # 0x41a05d
  401857:	lea    rcx,[rax+0x60]
  40185b:	call   0x401630
  401860:	or     eax,0xffffffff
  401863:	jmp    0x401836
  401865:	call   QWORD PTR [rip+0x23e6d]        # 0x4256d8
  40186b:	lea    rdx,[rip+0x187ac]        # 0x41a01e
  401872:	lea    rcx,[rax+0x60]
  401876:	mov    r8,rbx
  401879:	call   0x401630
  40187e:	or     eax,0xffffffff
  401881:	jmp    0x401836
  401883:	mov    rax,QWORD PTR [rip+0x1e156]        # 0x41f9e0
  40188a:	mov    rdx,QWORD PTR [rax+0x8]
  40188e:	mov    rax,QWORD PTR [rax]
  401891:	mov    QWORD PTR [rsp+0x40],rax
  401896:	mov    rax,QWORD PTR [rip+0x1e133]        # 0x41f9d0
  40189d:	mov    QWORD PTR [rsp+0x48],rdx
  4018a2:	mov    rdx,QWORD PTR [rax+0x8]
  4018a6:	mov    rax,QWORD PTR [rax]
  4018a9:	mov    QWORD PTR [rsp+0x38],rdx
  4018ae:	mov    QWORD PTR [rsp+0x30],rax
  4018b3:	jmp    0x40172f
  4018b8:	mov    rax,QWORD PTR [rip+0x1e161]        # 0x41fa20
  4018bf:	mov    rdx,QWORD PTR [rax+0x8]
  4018c3:	mov    rax,QWORD PTR [rax]
  4018c6:	mov    QWORD PTR [rsp+0x40],rax
  4018cb:	mov    rax,QWORD PTR [rip+0x1e13e]        # 0x41fa10
  4018d2:	mov    QWORD PTR [rsp+0x48],rdx
  4018d7:	mov    rdx,QWORD PTR [rax+0x8]
  4018db:	mov    rax,QWORD PTR [rax]
  4018de:	mov    QWORD PTR [rsp+0x38],rdx
  4018e3:	mov    QWORD PTR [rsp+0x30],rax
  4018e8:	jmp    0x40172f
  4018ed:	mov    rax,QWORD PTR [rip+0x1e14c]        # 0x41fa40
  4018f4:	mov    rdx,QWORD PTR [rax+0x8]
  4018f8:	mov    rax,QWORD PTR [rax]
  4018fb:	mov    QWORD PTR [rsp+0x40],rax
  401900:	mov    rax,QWORD PTR [rip+0x1e129]        # 0x41fa30
  401907:	mov    QWORD PTR [rsp+0x48],rdx
  40190c:	mov    rdx,QWORD PTR [rax+0x8]
  401910:	mov    rax,QWORD PTR [rax]
  401913:	mov    QWORD PTR [rsp+0x38],rdx
  401918:	mov    QWORD PTR [rsp+0x30],rax
  40191d:	jmp    0x40172f
  401922:	mov    rax,QWORD PTR [rip+0x1e0d7]        # 0x41fa00
  401929:	mov    rdx,QWORD PTR [rax+0x8]
  40192d:	mov    rax,QWORD PTR [rax]
  401930:	mov    QWORD PTR [rsp+0x40],rax
  401935:	mov    rax,QWORD PTR [rip+0x1e0b4]        # 0x41f9f0
  40193c:	mov    QWORD PTR [rsp+0x48],rdx
  401941:	mov    rdx,QWORD PTR [rax+0x8]
  401945:	mov    rax,QWORD PTR [rax]
  401948:	mov    QWORD PTR [rsp+0x38],rdx
  40194d:	mov    QWORD PTR [rsp+0x30],rax
  401952:	jmp    0x40172f
  401957:	nop    WORD PTR [rax+rax*1+0x0]
  401960:	push   r12
  401962:	push   rbp
  401963:	push   rdi
  401964:	push   rsi
  401965:	push   rbx
  401966:	sub    rsp,0x30
  40196a:	mov    r12,r8
  40196d:	mov    rdi,rcx
  401970:	mov    rcx,r8
  401973:	mov    rbp,rdx
  401976:	call   0x418640
  40197b:	mov    edx,0x3a
  401980:	mov    rcx,r12
  401983:	mov    esi,eax
  401985:	call   0x418518
  40198a:	test   rax,rax
  40198d:	je     0x401a2b
  401993:	lea    rbx,[rax+0x1]
  401997:	mov    BYTE PTR [rax],0x0
  40199a:	mov    rcx,rbx
  40199d:	call   0x418538
  4019a2:	movsxd rdx,eax
  4019a5:	mov    r9,rax
  4019a8:	mov    QWORD PTR [rsp+0x20],rbx
  4019ad:	cmp    BYTE PTR [rbx+rdx*1-0x1],0xa
  4019b2:	lea    eax,[rax-0x1]
  4019b5:	lea    rbx,[rsp+0x20]
  4019ba:	mov    rdx,rdi
  4019bd:	mov    rcx,rbx
  4019c0:	cmove  r9d,eax
  4019c4:	mov    DWORD PTR [rsp+0x28],r9d
  4019c9:	call   0x402540
  4019ce:	test   eax,eax
  4019d0:	js     0x401a15
  4019d2:	mov    edx,0x3a
  4019d7:	mov    rcx,r12
  4019da:	call   0x418518
  4019df:	test   rax,rax
  4019e2:	je     0x401a2b
  4019e4:	lea    rcx,[rax+0x1]
  4019e8:	mov    BYTE PTR [rax],0x0
  4019eb:	mov    QWORD PTR [rsp+0x20],rcx
  4019f0:	call   0x418538
  4019f5:	mov    rdx,rbp
  4019f8:	mov    rcx,rbx
  4019fb:	mov    DWORD PTR [rsp+0x28],eax
  4019ff:	call   0x402540
  401a04:	test   eax,eax
  401a06:	js     0x401a32
  401a08:	mov    eax,esi
  401a0a:	add    rsp,0x30
  401a0e:	pop    rbx
  401a0f:	pop    rsi
  401a10:	pop    rdi
  401a11:	pop    rbp
  401a12:	pop    r12
  401a14:	ret    
  401a15:	call   QWORD PTR [rip+0x23cbd]        # 0x4256d8
  401a1b:	lea    rdx,[rip+0x18657]        # 0x41a079
  401a22:	lea    rcx,[rax+0x60]
  401a26:	call   0x401630
  401a2b:	mov    eax,0xffffffff
  401a30:	jmp    0x401a0a
  401a32:	call   QWORD PTR [rip+0x23ca0]        # 0x4256d8
  401a38:	lea    rdx,[rip+0x1863a]        # 0x41a079
  401a3f:	lea    rcx,[rax+0x60]
  401a43:	call   0x401630
  401a48:	mov    rcx,QWORD PTR [rdi]
  401a4b:	call   0x4185e0
  401a50:	mov    eax,0xffffffff
  401a55:	jmp    0x401a0a
  401a57:	nop    WORD PTR [rax+rax*1+0x0]
  401a60:	push   r15
  401a62:	push   r14
  401a64:	mov    eax,0x18a8
  401a69:	push   r13
  401a6b:	push   r12
  401a6d:	push   rbp
  401a6e:	push   rdi
  401a6f:	push   rsi
  401a70:	push   rbx
  401a71:	call   0x413020
  401a76:	sub    rsp,rax
  401a79:	mov    r15,rdx
  401a7c:	lea    rdx,[rip+0x18606]        # 0x41a089
  401a83:	mov    rbp,rcx
  401a86:	mov    rcx,r15
  401a89:	mov    rbx,r8
  401a8c:	mov    r12,r9
  401a8f:	call   0x418608
  401a94:	test   rax,rax
  401a97:	mov    rdi,rax
  401a9a:	je     0x401f02
  401aa0:	lea    rsi,[rsp+0x4a0]
  401aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  401ab0:	mov    r8,rdi
  401ab3:	mov    edx,0x1400
  401ab8:	mov    rcx,rsi
  401abb:	call   0x418610
  401ac0:	test   rax,rax
  401ac3:	je     0x401bc4
  401ac9:	movzx  eax,BYTE PTR [rsp+0x4a0]
  401ad1:	test   al,al
  401ad3:	je     0x401bf0
  401ad9:	cmp    al,0x3a
  401adb:	je     0x401bf0
  401ae1:	lea    r10,[rsi+0x1]
  401ae5:	xor    r13d,r13d
  401ae8:	jmp    0x401af5
  401aea:	nop    WORD PTR [rax+rax*1+0x0]
  401af0:	cmp    dl,0x3a
  401af3:	je     0x401b05
  401af5:	movzx  edx,BYTE PTR [r10]
  401af9:	add    r13d,0x1
  401afd:	add    r10,0x1
  401b01:	test   dl,dl
  401b03:	jne    0x401af0
  401b05:	mov    rcx,rbx
  401b08:	call   0x418538
  401b0d:	mov    r8d,r13d
  401b10:	mov    rdx,rsi
  401b13:	mov    rcx,rbx
  401b16:	cmp    r8,rax
  401b19:	cmovb  r8,rax
  401b1d:	call   0x418530
  401b22:	test   eax,eax
  401b24:	jne    0x401ab0
  401b26:	mov    edx,0x3a
  401b2b:	mov    rcx,rsi
  401b2e:	call   0x418518
  401b33:	mov    rcx,rdi
  401b36:	mov    r13,rax
  401b39:	call   0x418628
  401b3e:	lea    rcx,[r13+0x1]
  401b42:	call   0x418640
  401b47:	cmp    eax,0xffffffff
  401b4a:	mov    r13d,eax
  401b4d:	je     0x401bcc
  401b4f:	lea    rdx,[rip+0x18533]        # 0x41a089
  401b56:	mov    rcx,rbp
  401b59:	call   0x418608
  401b5e:	test   rax,rax
  401b61:	mov    rdi,rax
  401b64:	jne    0x401b7d
  401b66:	jmp    0x401ee1
  401b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b70:	mov    rcx,rax
  401b73:	call   0x418640
  401b78:	cmp    eax,r13d
  401b7b:	je     0x401bf8
  401b7d:	mov    r8,rdi
  401b80:	mov    edx,0x13ff
  401b85:	mov    rcx,rsi
  401b88:	call   0x418610
  401b8d:	test   rax,rax
  401b90:	jne    0x401b70
  401b92:	call   QWORD PTR [rip+0x23b40]        # 0x4256d8
  401b98:	lea    rdx,[rip+0x185b2]        # 0x41a151
  401b9f:	lea    rcx,[rax+0x60]
  401ba3:	mov    r8,rbp
  401ba6:	or     ebx,0xffffffff
  401ba9:	call   0x401630
  401bae:	mov    eax,ebx
  401bb0:	add    rsp,0x18a8
  401bb7:	pop    rbx
  401bb8:	pop    rsi
  401bb9:	pop    rdi
  401bba:	pop    rbp
  401bbb:	pop    r12
  401bbd:	pop    r13
  401bbf:	pop    r14
  401bc1:	pop    r15
  401bc3:	ret    
  401bc4:	mov    rcx,rdi
  401bc7:	call   0x418628
  401bcc:	mov    rsi,QWORD PTR [rip+0x23b05]        # 0x4256d8
  401bd3:	call   rsi
  401bd5:	lea    rdx,[rip+0x184af]        # 0x41a08b
  401bdc:	lea    rcx,[rax+0x60]
  401be0:	mov    r8,rbx
  401be3:	mov    r9,r15
  401be6:	or     ebx,0xffffffff
  401be9:	call   0x401630
  401bee:	jmp    0x401bae
  401bf0:	xor    r13d,r13d
  401bf3:	jmp    0x401b05
  401bf8:	lea    r14,[rsp+0x60]
  401bfd:	lea    r13,[rsp+0x50]
  401c02:	mov    rcx,rdi
  401c05:	mov    BYTE PTR [rsp+0x189f],0x0
  401c0d:	call   0x418628
  401c12:	mov    r8,rsi
  401c15:	mov    rdx,r14
  401c18:	mov    rcx,r13
  401c1b:	call   0x401960
  401c20:	test   eax,eax
  401c22:	js     0x401ea3
  401c28:	lea    rdx,[rip+0x1845a]        # 0x41a089
  401c2f:	mov    rcx,r15
  401c32:	call   0x418608
  401c37:	test   rax,rax
  401c3a:	mov    rdi,rax
  401c3d:	je     0x401f5d
  401c43:	mov    r8,rdi
  401c46:	mov    edx,0x1400
  401c4b:	mov    rcx,rsi
  401c4e:	call   0x418610
  401c53:	test   rax,rax
  401c56:	je     0x401e6e
  401c5c:	movzx  eax,BYTE PTR [rsp+0x4a0]
  401c64:	test   al,al
  401c66:	je     0x401e7e
  401c6c:	cmp    al,0x3a
  401c6e:	je     0x401e7e
  401c74:	lea    rax,[rsi+0x1]
  401c78:	xor    r15d,r15d
  401c7b:	jmp    0x401c85
  401c7d:	nop    DWORD PTR [rax]
  401c80:	cmp    dl,0x3a
  401c83:	je     0x401c94
  401c85:	movzx  edx,BYTE PTR [rax]
  401c88:	add    r15d,0x1
  401c8c:	add    rax,0x1
  401c90:	test   dl,dl
  401c92:	jne    0x401c80
  401c94:	mov    rcx,rbx
  401c97:	call   0x418538
  401c9c:	mov    r8d,r15d
  401c9f:	mov    rdx,rsi
  401ca2:	mov    rcx,rbx
  401ca5:	cmp    r8,rax
  401ca8:	cmovb  r8,rax
  401cac:	call   0x418530
  401cb1:	test   eax,eax
  401cb3:	jne    0x401c43
  401cb5:	mov    rcx,rsi
  401cb8:	mov    edx,0x3a
  401cbd:	call   0x418560
  401cc2:	mov    rcx,rdi
  401cc5:	mov    rsi,rax
  401cc8:	call   0x418628
  401ccd:	test   rsi,rsi
  401cd0:	je     0x401ea3
  401cd6:	lea    rax,[rsi+0x1]
  401cda:	mov    edx,0x3a
  401cdf:	mov    rcx,rax
  401ce2:	mov    QWORD PTR [rsp+0x38],rax
  401ce7:	call   0x418560
  401cec:	test   rax,rax
  401cef:	je     0x401ea3
  401cf5:	add    rax,0x1
  401cf9:	mov    rsi,rax
  401cfc:	je     0x401e76
  401d02:	or     rbp,0xffffffffffffffff
  401d06:	xor    eax,eax
  401d08:	mov    rdi,rsi
  401d0b:	mov    rcx,rbp
  401d0e:	repnz scas al,BYTE PTR es:[rdi]
  401d10:	not    rcx
  401d13:	lea    rax,[rcx+rbp*1]
  401d17:	mov    rdx,rcx
  401d1a:	cmp    rax,0x3ff
  401d20:	ja     0x401e86
  401d26:	lea    rbp,[rsp+0xa0]
  401d2e:	cmp    ecx,0x8
  401d31:	mov    rdi,rbp
  401d34:	jb     0x401d3c
  401d36:	shr    ecx,0x3
  401d39:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  401d3c:	xor    eax,eax
  401d3e:	test   dl,0x4
  401d41:	je     0x401d4c
  401d43:	mov    eax,DWORD PTR [rsi]
  401d45:	mov    DWORD PTR [rdi],eax
  401d47:	mov    eax,0x4
  401d4c:	test   dl,0x2
  401d4f:	je     0x401d5d
  401d51:	movzx  ecx,WORD PTR [rsi+rax*1]
  401d55:	mov    WORD PTR [rdi+rax*1],cx
  401d59:	add    rax,0x2
  401d5d:	and    dl,0x1
  401d60:	je     0x401d69
  401d62:	movzx  edx,BYTE PTR [rsi+rax*1]
  401d66:	mov    BYTE PTR [rdi+rax*1],dl
  401d69:	mov    edx,0x3a
  401d6e:	mov    rcx,rbp
  401d71:	call   0x418560
  401d76:	test   rax,rax
  401d79:	je     0x401d7e
  401d7b:	mov    BYTE PTR [rax],0x0
  401d7e:	or     rsi,0xffffffffffffffff
  401d82:	xor    eax,eax
  401d84:	mov    QWORD PTR [rsp+0x70],rbp
  401d89:	mov    rdi,rbp
  401d8c:	mov    rcx,rsi
  401d8f:	repnz scas al,BYTE PTR es:[rdi]
  401d91:	lea    rdi,[rsp+0x80]
  401d99:	not    rcx
  401d9c:	lea    rax,[rcx+rsi*1]
  401da0:	lea    rcx,[rsp+0x70]
  401da5:	mov    rdx,rdi
  401da8:	mov    DWORD PTR [rsp+0x78],eax
  401dac:	call   0x402540
  401db1:	test   eax,eax
  401db3:	js     0x401f23
  401db9:	lea    r15,[rsp+0x90]
  401dc1:	mov    QWORD PTR [rsp+0x20],r14
  401dc6:	mov    r9,r13
  401dc9:	mov    r8,rdi
  401dcc:	mov    rdx,r12
  401dcf:	mov    rcx,rbx
  401dd2:	mov    QWORD PTR [rsp+0x28],r15
  401dd7:	call   0x402528
  401ddc:	test   eax,eax
  401dde:	js     0x401f40
  401de4:	mov    rcx,QWORD PTR [rsp+0x80]
  401dec:	mov    rdi,rbp
  401def:	call   0x4185e0
  401df4:	xor    eax,eax
  401df6:	mov    ecx,0x80
  401dfb:	lea    r8,[rsp+0x48]
  401e00:	rep stos QWORD PTR es:[rdi],rax
  401e03:	mov    rdx,rbp
  401e06:	mov    rcx,r15
  401e09:	mov    QWORD PTR [rsp+0x48],0x400
  401e12:	call   0x402538
  401e17:	test   eax,eax
  401e19:	js     0x401f7e
  401e1f:	mov    rcx,QWORD PTR [rsp+0x90]
  401e27:	mov    rdi,rbp
  401e2a:	call   0x4185e0
  401e2f:	xor    eax,eax
  401e31:	mov    rcx,rsi
  401e34:	mov    rdx,rbp
  401e37:	repnz scas al,BYTE PTR es:[rdi]
  401e39:	not    rcx
  401e3c:	mov    r8,rcx
  401e3f:	mov    rcx,QWORD PTR [rsp+0x38]
  401e44:	sub    r8,0x1
  401e48:	call   0x418530
  401e4d:	test   eax,eax
  401e4f:	mov    ebx,eax
  401e51:	jne    0x401ec4
  401e53:	call   QWORD PTR [rip+0x2387f]        # 0x4256d8
  401e59:	lea    rdx,[rip+0x182c5]        # 0x41a125
  401e60:	lea    rcx,[rax+0x60]
  401e64:	call   0x401630
  401e69:	jmp    0x401bae
  401e6e:	mov    rcx,rdi
  401e71:	call   0x418628
  401e76:	or     ebx,0xffffffff
  401e79:	jmp    0x401bae
  401e7e:	xor    r15d,r15d
  401e81:	jmp    0x401c94
  401e86:	call   QWORD PTR [rip+0x2384c]        # 0x4256d8
  401e8c:	lea    rdx,[rip+0x1823d]        # 0x41a0d0
  401e93:	lea    rcx,[rax+0x60]
  401e97:	mov    ebx,ebp
  401e99:	call   0x401630
  401e9e:	jmp    0x401bae
  401ea3:	call   QWORD PTR [rip+0x2382f]        # 0x4256d8
  401ea9:	lea    rdx,[rip+0x18203]        # 0x41a0b3
  401eb0:	lea    rcx,[rax+0x60]
  401eb4:	mov    r8,rbp
  401eb7:	or     ebx,0xffffffff
  401eba:	call   0x401630
  401ebf:	jmp    0x401bae
  401ec4:	call   QWORD PTR [rip+0x2380e]        # 0x4256d8
  401eca:	lea    rdx,[rip+0x18267]        # 0x41a138
  401ed1:	lea    rcx,[rax+0x60]
  401ed5:	mov    ebx,esi
  401ed7:	call   0x401630
  401edc:	jmp    0x401bae
  401ee1:	call   QWORD PTR [rip+0x237f1]        # 0x4256d8
  401ee7:	lea    rdx,[rip+0x181b5]        # 0x41a0a3
  401eee:	lea    rcx,[rax+0x60]
  401ef2:	mov    r8,rbp
  401ef5:	or     ebx,0xffffffff
  401ef8:	call   0x401630
  401efd:	jmp    0x401bae
  401f02:	mov    rsi,QWORD PTR [rip+0x237cf]        # 0x4256d8
  401f09:	call   rsi
  401f0b:	lea    rdx,[rip+0x1810c]        # 0x41a01e
  401f12:	lea    rcx,[rax+0x60]
  401f16:	mov    r8,r15
  401f19:	call   0x401630
  401f1e:	jmp    0x401bd3
  401f23:	call   QWORD PTR [rip+0x237af]        # 0x4256d8
  401f29:	lea    rdx,[rip+0x181b0]        # 0x41a0e0
  401f30:	lea    rcx,[rax+0x60]
  401f34:	mov    ebx,esi
  401f36:	call   0x401630
  401f3b:	jmp    0x401bae
  401f40:	call   QWORD PTR [rip+0x23792]        # 0x4256d8
  401f46:	lea    rdx,[rip+0x181ab]        # 0x41a0f8
  401f4d:	lea    rcx,[rax+0x60]
  401f51:	mov    ebx,esi
  401f53:	call   0x401630
  401f58:	jmp    0x401bae
  401f5d:	call   QWORD PTR [rip+0x23775]        # 0x4256d8
  401f63:	lea    rdx,[rip+0x180b4]        # 0x41a01e
  401f6a:	lea    rcx,[rax+0x60]
  401f6e:	mov    r8,r15
  401f71:	or     ebx,0xffffffff
  401f74:	call   0x401630
  401f79:	jmp    0x401bae
  401f7e:	call   QWORD PTR [rip+0x23754]        # 0x4256d8
  401f84:	lea    rdx,[rip+0x1818a]        # 0x41a115
  401f8b:	lea    rcx,[rax+0x60]
  401f8f:	mov    ebx,esi
  401f91:	call   0x401630
  401f96:	jmp    0x401bae
  401f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  401fa0:	push   r15
  401fa2:	push   r14
  401fa4:	mov    eax,0x2cc8
  401fa9:	push   r13
  401fab:	push   r12
  401fad:	push   rbp
  401fae:	push   rdi
  401faf:	push   rsi
  401fb0:	push   rbx
  401fb1:	call   0x413020
  401fb6:	sub    rsp,rax
  401fb9:	mov    r14d,DWORD PTR [rsp+0x2d38]
  401fc1:	mov    r12,rdx
  401fc4:	lea    rdx,[rip+0x180be]        # 0x41a089
  401fcb:	mov    rsi,rcx
  401fce:	mov    rcx,r9
  401fd1:	mov    r13d,r8d
  401fd4:	mov    rdi,r9
  401fd7:	call   0x418608
  401fdc:	test   rax,rax
  401fdf:	mov    rbp,rax
  401fe2:	je     0x4024d1
  401fe8:	lea    rbx,[rsp+0x4c0]
  401ff0:	jmp    0x401fff
  401ff2:	mov    rcx,rax
  401ff5:	call   0x418640
  401ffa:	cmp    eax,r14d
  401ffd:	je     0x402050
  401fff:	mov    r8,rbp
  402002:	mov    edx,0x13ff
  402007:	mov    rcx,rbx
  40200a:	call   0x418610
  40200f:	test   rax,rax
  402012:	jne    0x401ff2
  402014:	call   QWORD PTR [rip+0x236be]        # 0x4256d8
  40201a:	lea    rdx,[rip+0x18130]        # 0x41a151
  402021:	lea    rcx,[rax+0x60]
  402025:	mov    r8,rdi
  402028:	call   0x401630
  40202d:	mov    eax,0xffffffff
  402032:	add    rsp,0x2cc8
  402039:	pop    rbx
  40203a:	pop    rsi
  40203b:	pop    rdi
  40203c:	pop    rbp
  40203d:	pop    r12
  40203f:	pop    r13
  402041:	pop    r14
  402043:	pop    r15
  402045:	ret    
  402046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402050:	mov    rcx,rbp
  402053:	mov    BYTE PTR [rsp+0x18bf],0x0
  40205b:	lea    r15,[rsp+0x50]
  402060:	call   0x418628
  402065:	lea    rax,[rsp+0x40]
  40206a:	mov    r8,rbx
  40206d:	mov    rdx,r15
  402070:	mov    rcx,rax
  402073:	mov    QWORD PTR [rsp+0x38],rax
  402078:	call   0x401960
  40207d:	test   eax,eax
  40207f:	mov    ebp,eax
  402081:	js     0x40243e
  402087:	cmp    r13d,0x80
  40208e:	ja     0x402343
  402094:	lea    rdi,[rsp+0x18c0]
  40209c:	xor    ecx,ecx
  40209e:	movsxd r8,r13d
  4020a1:	mov    rdx,rdi
  4020a4:	call   0x402548
  4020a9:	test   eax,eax
  4020ab:	js     0x4023b9
  4020b1:	mov    DWORD PTR [rsp+0x68],r13d
  4020b6:	lea    r14,[rsp+0x60]
  4020bb:	lea    r13,[rsp+0x80]
  4020c3:	mov    r9,QWORD PTR [rsp+0x38]
  4020c8:	mov    QWORD PTR [rsp+0x20],r15
  4020cd:	mov    rdx,r12
  4020d0:	mov    QWORD PTR [rsp+0x28],r13
  4020d5:	mov    r8,r14
  4020d8:	mov    rcx,rsi
  4020db:	mov    QWORD PTR [rsp+0x60],rdi
  4020e0:	call   0x402528
  4020e5:	test   eax,eax
  4020e7:	js     0x4023d7
  4020ed:	lea    rax,[rsp+0xc0]
  4020f5:	mov    rcx,r13
  4020f8:	mov    rdx,rax
  4020fb:	mov    QWORD PTR [rsp+0x38],rax
  402100:	call   0x402530
  402105:	test   eax,eax
  402107:	js     0x4023f5
  40210d:	mov    rcx,QWORD PTR [rsp+0x80]
  402115:	call   0x4185e0
  40211a:	lea    rdx,[rsp+0x70]
  40211f:	mov    rcx,r14
  402122:	call   0x402530
  402127:	test   eax,eax
  402129:	js     0x402420
  40212f:	mov    r9,QWORD PTR [rsp+0x70]
  402134:	mov    r8,QWORD PTR [rsp+0xc0]
  40213c:	lea    rdx,[rip+0x18067]        # 0x41a1aa
  402143:	lea    rcx,[rip+0x20ef6]        # 0x423040
  40214a:	call   0x401600
  40214f:	mov    rcx,QWORD PTR [rsp+0x70]
  402154:	call   0x4185e0
  402159:	mov    rcx,QWORD PTR [rsp+0xc0]
  402161:	call   0x4185e0
  402166:	mov    rcx,QWORD PTR [rsp+0x2d30]
  40216e:	call   0x418538
  402173:	add    rax,0x5
  402177:	cmp    rax,0x400
  40217d:	ja     0x402389
  402183:	mov    r15,QWORD PTR [rsp+0x38]
  402188:	mov    r9,QWORD PTR [rsp+0x2d30]
  402190:	lea    r8,[rip+0x18033]        # 0x41a1ca
  402197:	mov    edx,0x400
  40219c:	mov    rcx,r15
  40219f:	call   0x40ee30
  4021a4:	mov    rdx,r13
  4021a7:	mov    rcx,r15
  4021aa:	call   QWORD PTR [rip+0x23768]        # 0x425918
  4021b0:	cmp    eax,0xffffffff
  4021b3:	jne    0x402366
  4021b9:	mov    rcx,QWORD PTR [rsp+0x38]
  4021be:	lea    rdx,[rip+0x17e57]        # 0x41a01c
  4021c5:	call   0x418608
  4021ca:	test   rax,rax
  4021cd:	mov    r14,rax
  4021d0:	je     0x40248e
  4021d6:	mov    rcx,QWORD PTR [rsp+0x2d30]
  4021de:	lea    rdx,[rip+0x17ea4]        # 0x41a089
  4021e5:	call   0x418608
  4021ea:	test   rax,rax
  4021ed:	mov    r13,rax
  4021f0:	je     0x4023ac
  4021f6:	mov    BYTE PTR [rsp+0x2cbf],0x0
  4021fe:	jmp    0x40220b
  402200:	mov    rdx,r14
  402203:	mov    rcx,rdi
  402206:	call   0x4185f0
  40220b:	mov    r8,r13
  40220e:	mov    edx,0x13ff
  402213:	mov    rcx,rdi
  402216:	call   0x418610
  40221b:	test   rax,rax
  40221e:	jne    0x402200
  402220:	mov    rcx,r14
  402223:	call   0x418628
  402228:	mov    rcx,r13
  40222b:	call   0x418628
  402230:	mov    rcx,QWORD PTR [rsp+0x2d30]
  402238:	lea    rdx,[rip+0x17ddd]        # 0x41a01c
  40223f:	call   0x418608
  402244:	test   rax,rax
  402247:	mov    r13,rax
  40224a:	je     0x402461
  402250:	mov    rcx,QWORD PTR [rsp+0x38]
  402255:	lea    rdx,[rip+0x17e2d]        # 0x41a089
  40225c:	call   0x418608
  402261:	test   rax,rax
  402264:	mov    r12,rax
  402267:	je     0x4024f4
  40226d:	xor    r14d,r14d
  402270:	mov    r8,r12
  402273:	mov    edx,0x13ff
  402278:	mov    rcx,rbx
  40227b:	call   0x418610
  402280:	test   rax,rax
  402283:	mov    rdi,rax
  402286:	je     0x402300
  402288:	mov    edx,0x3a
  40228d:	mov    rcx,rbx
  402290:	call   0x418560
  402295:	test   rax,rax
  402298:	mov    r15,rax
  40229b:	je     0x402270
  40229d:	mov    rcx,rsi
  4022a0:	call   0x418538
  4022a5:	mov    r8d,r15d
  4022a8:	mov    rdx,rsi
  4022ab:	mov    rcx,rdi
  4022ae:	sub    r8d,edi
  4022b1:	cmp    r8,rax
  4022b4:	cmovb  r8,rax
  4022b8:	call   0x418530
  4022bd:	test   eax,eax
  4022bf:	jne    0x4022f0
  4022c1:	lea    r9,[rip+0x20d78]        # 0x423040
  4022c8:	lea    rdx,[rip+0x17f68]        # 0x41a237
  4022cf:	mov    DWORD PTR [rsp+0x20],ebp
  4022d3:	mov    r8,rsi
  4022d6:	mov    rcx,r13
  4022d9:	mov    r14d,0x1
  4022df:	call   0x401630
  4022e4:	jmp    0x402270
  4022e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022f0:	mov    rdx,r13
  4022f3:	mov    rcx,rbx
  4022f6:	call   0x4185f0
  4022fb:	jmp    0x402270
  402300:	test   r14d,r14d
  402303:	jne    0x402322
  402305:	lea    r9,[rip+0x20d34]        # 0x423040
  40230c:	lea    rdx,[rip+0x17f24]        # 0x41a237
  402313:	mov    DWORD PTR [rsp+0x20],ebp
  402317:	mov    r8,rsi
  40231a:	mov    rcx,r13
  40231d:	call   0x401630
  402322:	mov    rcx,r13
  402325:	call   0x418628
  40232a:	mov    rcx,r12
  40232d:	call   0x418628
  402332:	mov    rcx,QWORD PTR [rsp+0x38]
  402337:	call   0x418570
  40233c:	xor    eax,eax
  40233e:	jmp    0x402032
  402343:	mov    rbx,QWORD PTR [rip+0x2338e]        # 0x4256d8
  40234a:	call   rbx
  40234c:	lea    rdx,[rip+0x17eee]        # 0x41a241
  402353:	lea    rcx,[rax+0x60]
  402357:	call   0x401630
  40235c:	mov    eax,0xffffffff
  402361:	jmp    0x402032
  402366:	call   QWORD PTR [rip+0x2336c]        # 0x4256d8
  40236c:	mov    r8,QWORD PTR [rsp+0x2d30]
  402374:	lea    rcx,[rax+0x60]
  402378:	lea    rdx,[rip+0x17e52]        # 0x41a1d1
  40237f:	call   0x401630
  402384:	jmp    0x40202d
  402389:	call   QWORD PTR [rip+0x23349]        # 0x4256d8
  40238f:	mov    r8,QWORD PTR [rsp+0x2d30]
  402397:	lea    rcx,[rax+0x60]
  40239b:	lea    rdx,[rip+0x17e0e]        # 0x41a1b0
  4023a2:	call   0x401630
  4023a7:	jmp    0x40202d
  4023ac:	mov    rcx,r14
  4023af:	call   0x418628
  4023b4:	jmp    0x402230
  4023b9:	mov    rbx,QWORD PTR [rip+0x23318]        # 0x4256d8
  4023c0:	call   rbx
  4023c2:	lea    rdx,[rip+0x17da1]        # 0x41a16a
  4023c9:	lea    rcx,[rax+0x60]
  4023cd:	call   0x401630
  4023d2:	jmp    0x40234a
  4023d7:	mov    rbx,QWORD PTR [rip+0x232fa]        # 0x4256d8
  4023de:	call   rbx
  4023e0:	lea    rdx,[rip+0x17d9b]        # 0x41a182
  4023e7:	lea    rcx,[rax+0x60]
  4023eb:	call   0x401630
  4023f0:	jmp    0x40234a
  4023f5:	mov    rbx,QWORD PTR [rip+0x232dc]        # 0x4256d8
  4023fc:	call   rbx
  4023fe:	lea    rdx,[rip+0x17d95]        # 0x41a19a
  402405:	lea    rcx,[rax+0x60]
  402409:	call   0x401630
  40240e:	mov    rcx,QWORD PTR [rsp+0x80]
  402416:	call   0x4185e0
  40241b:	jmp    0x40234a
  402420:	mov    rbx,QWORD PTR [rip+0x232b1]        # 0x4256d8
  402427:	call   rbx
  402429:	lea    rdx,[rip+0x17d6a]        # 0x41a19a
  402430:	lea    rcx,[rax+0x60]
  402434:	call   0x401630
  402439:	jmp    0x40234a
  40243e:	call   QWORD PTR [rip+0x23294]        # 0x4256d8
  402444:	lea    rdx,[rip+0x17c68]        # 0x41a0b3
  40244b:	lea    rcx,[rax+0x60]
  40244f:	mov    r8,rdi
  402452:	call   0x401630
  402457:	mov    eax,0xffffffff
  40245c:	jmp    0x402032
  402461:	call   QWORD PTR [rip+0x23271]        # 0x4256d8
  402467:	mov    r8,QWORD PTR [rsp+0x2d30]
  40246f:	lea    rcx,[rax+0x60]
  402473:	lea    rdx,[rip+0x17d6c]        # 0x41a1e6
  40247a:	call   0x401630
  40247f:	mov    rcx,QWORD PTR [rsp+0x38]
  402484:	call   0x418570
  402489:	jmp    0x40202d
  40248e:	mov    rbx,QWORD PTR [rip+0x23243]        # 0x4256d8
  402495:	call   rbx
  402497:	mov    rsi,QWORD PTR [rsp+0x38]
  40249c:	lea    rcx,[rax+0x60]
  4024a0:	lea    rdx,[rip+0x17d3f]        # 0x41a1e6
  4024a7:	mov    r8,rsi
  4024aa:	call   0x401630
  4024af:	call   rbx
  4024b1:	mov    r8,QWORD PTR [rsp+0x2d30]
  4024b9:	lea    rcx,[rax+0x60]
  4024bd:	lea    rdx,[rip+0x17d3e]        # 0x41a202
  4024c4:	mov    r9,rsi
  4024c7:	call   0x401630
  4024cc:	jmp    0x40202d
  4024d1:	call   QWORD PTR [rip+0x23201]        # 0x4256d8
  4024d7:	lea    rdx,[rip+0x17bc5]        # 0x41a0a3
  4024de:	lea    rcx,[rax+0x60]
  4024e2:	mov    r8,rdi
  4024e5:	call   0x401630
  4024ea:	mov    eax,0xffffffff
  4024ef:	jmp    0x402032
  4024f4:	call   QWORD PTR [rip+0x231de]        # 0x4256d8
  4024fa:	mov    rsi,QWORD PTR [rsp+0x38]
  4024ff:	lea    rcx,[rax+0x60]
  402503:	lea    rdx,[rip+0x17d12]        # 0x41a21c
  40250a:	mov    r8,rsi
  40250d:	call   0x401630
  402512:	mov    rcx,rsi
  402515:	call   0x418570
  40251a:	jmp    0x40202d
  40251f:	nop
  402520:	jmp    QWORD PTR [rip+0x23082]        # 0x4255a8
  402526:	nop
  402527:	nop
  402528:	jmp    QWORD PTR [rip+0x23072]        # 0x4255a0
  40252e:	nop
  40252f:	nop
  402530:	jmp    QWORD PTR [rip+0x23062]        # 0x425598
  402536:	nop
  402537:	nop
  402538:	jmp    QWORD PTR [rip+0x23052]        # 0x425590
  40253e:	nop
  40253f:	nop
  402540:	jmp    QWORD PTR [rip+0x23042]        # 0x425588
  402546:	nop
  402547:	nop
  402548:	jmp    QWORD PTR [rip+0x22fe2]        # 0x425530
  40254e:	nop
  40254f:	nop
  402550:	jmp    QWORD PTR [rip+0x22fd2]        # 0x425528
  402556:	nop
  402557:	nop
  402558:	jmp    QWORD PTR [rip+0x22fc2]        # 0x425520
  40255e:	nop
  40255f:	nop
  402560:	jmp    QWORD PTR [rip+0x22fb2]        # 0x425518
  402566:	nop
  402567:	nop
  402568:	nop    DWORD PTR [rax+rax*1+0x0]
  402570:	sub    rsp,0x28
  402574:	lea    rcx,[rip+0x16ac5]        # 0x419040
  40257b:	xor    edx,edx
  40257d:	call   0x40e700
  402582:	mov    ecx,0x1
  402587:	call   0x418630
  40258c:	nop
  40258d:	nop    DWORD PTR [rax]
  402590:	push   rsi
  402591:	push   rbx
  402592:	sub    rsp,0x28
  402596:	cmp    rcx,0xf
  40259a:	mov    rbx,rcx
  40259d:	mov    rsi,rdx
  4025a0:	ja     0x4025c0
  4025a2:	lea    r8,[rip+0x17d57]        # 0x41a300
  4025a9:	mov    r9d,0x1
  4025af:	mov    rdx,rsi
  4025b2:	mov    rcx,rbx
  4025b5:	add    rsp,0x28
  4025b9:	pop    rbx
  4025ba:	pop    rsi
  4025bb:	jmp    0x409df0
  4025c0:	call   0x402740
  4025c5:	cmp    DWORD PTR [rsi+0x18],0x270f
  4025cc:	jbe    0x4025e4
  4025ce:	call   QWORD PTR [rip+0x23104]        # 0x4256d8
  4025d4:	mov    rdx,QWORD PTR [rip+0x1d4e5]        # 0x41fac0
  4025db:	add    rax,0x60
  4025df:	mov    QWORD PTR [rdx],rax
  4025e2:	jmp    0x4025a2
  4025e4:	add    rsp,0x28
  4025e8:	pop    rbx
  4025e9:	pop    rsi
  4025ea:	ret    
  4025eb:	nop
  4025ec:	nop
  4025ed:	nop
  4025ee:	nop
  4025ef:	nop
  4025f0:	push   rsi
  4025f1:	push   rbx
  4025f2:	sub    rsp,0x28
  4025f6:	mov    eax,DWORD PTR [rdx+0x10]
  4025f9:	mov    r8,QWORD PTR [rdx+0x38]
  4025fd:	mov    rsi,rcx
  402600:	mov    rbx,rdx
  402603:	and    eax,0xfffff00
  402608:	or     eax,0x8
  40260b:	test   r8,r8
  40260e:	mov    DWORD PTR [rdx+0x10],eax
  402611:	je     0x402619
  402613:	call   r8
  402616:	mov    eax,DWORD PTR [rbx+0x10]
  402619:	movzx  edx,WORD PTR [rbx]
  40261c:	mov    rcx,QWORD PTR [rsi+0xc8]
  402623:	and    eax,0xfffff00
  402628:	mov    rcx,QWORD PTR [rcx+rdx*8]
  40262c:	mov    QWORD PTR [rbx+0x18],rcx
  402630:	mov    rcx,QWORD PTR [rsi+0xd0]
  402637:	mov    rdx,QWORD PTR [rcx+rdx*8]
  40263b:	mov    DWORD PTR [rbx+0x10],eax
  40263e:	mov    QWORD PTR [rbx+0x20],rdx
  402642:	add    rsp,0x28
  402646:	pop    rbx
  402647:	pop    rsi
  402648:	ret    
  402649:	nop    DWORD PTR [rax+0x0]
  402650:	push   rbp
  402651:	push   rdi
  402652:	push   rsi
  402653:	push   rbx
  402654:	sub    rsp,0x28
  402658:	mov    eax,DWORD PTR [rcx]
  40265a:	lea    rbx,[rcx+0x8]
  40265e:	mov    rbp,rcx
  402661:	lea    edx,[rax-0x1]
  402664:	test   eax,eax
  402666:	lea    rdi,[rbx+rdx*8+0x8]
  40266b:	jg     0x40267d
  40266d:	jmp    0x4026a0
  40266f:	nop
  402670:	mov    rcx,rsi
  402673:	call   0x4185e0
  402678:	cmp    rbx,rdi
  40267b:	je     0x4026a0
  40267d:	add    rbx,0x8
  402681:	mov    rsi,QWORD PTR [rbx-0x8]
  402685:	cmp    DWORD PTR [rsi],0x6
  402688:	jne    0x402670
  40268a:	mov    rcx,QWORD PTR [rsi+0x10]
  40268e:	call   0x402650
  402693:	mov    rcx,rsi
  402696:	call   0x4185e0
  40269b:	cmp    rbx,rdi
  40269e:	jne    0x40267d
  4026a0:	mov    rcx,rbp
  4026a3:	add    rsp,0x28
  4026a7:	pop    rbx
  4026a8:	pop    rsi
  4026a9:	pop    rdi
  4026aa:	pop    rbp
  4026ab:	jmp    0x4185e0
  4026b0:	push   rdi
  4026b1:	push   rsi
  4026b2:	push   rbx
  4026b3:	sub    rsp,0x20
  4026b7:	mov    rdi,QWORD PTR [rip+0x23172]        # 0x425830
  4026be:	mov    rsi,rcx
  4026c1:	jmp    0x4026c7
  4026c3:	add    rsi,0x1
  4026c7:	movzx  ecx,BYTE PTR [rsi]
  4026ca:	call   rdi
  4026cc:	test   eax,eax
  4026ce:	jne    0x4026c3
  4026d0:	mov    rcx,rsi
  4026d3:	call   0x418538
  4026d8:	lea    rbx,[rsi+rax*1]
  4026dc:	cmp    rbx,rsi
  4026df:	ja     0x4026ec
  4026e1:	jmp    0x4026f6
  4026e3:	sub    rbx,0x1
  4026e7:	cmp    rbx,rsi
  4026ea:	je     0x4026f6
  4026ec:	movzx  ecx,BYTE PTR [rbx-0x1]
  4026f0:	call   rdi
  4026f2:	test   eax,eax
  4026f4:	jne    0x4026e3
  4026f6:	mov    rax,rsi
  4026f9:	mov    BYTE PTR [rbx],0x0
  4026fc:	add    rsp,0x20
  402700:	pop    rbx
  402701:	pop    rsi
  402702:	pop    rdi
  402703:	ret    
  402704:	xchg   ax,ax
  402706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402710:	sub    rsp,0x38
  402714:	mov    QWORD PTR [rsp+0x50],r8
  402719:	lea    r8,[rsp+0x50]
  40271e:	mov    QWORD PTR [rsp+0x58],r9
  402723:	mov    QWORD PTR [rsp+0x28],r8
  402728:	call   0x413a70
  40272d:	add    rsp,0x38
  402731:	ret    
  402732:	nop    DWORD PTR [rax+0x0]
  402736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402740:	push   r13
  402742:	push   r12
  402744:	push   rbp
  402745:	push   rdi
  402746:	push   rsi
  402747:	push   rbx
  402748:	sub    rsp,0x38
  40274c:	cmp    rcx,0xf
  402750:	jbe    0x40275d
  402752:	test   rdx,rdx
  402755:	je     0x40275d
  402757:	test   BYTE PTR [rdx+0x10],0x8
  40275b:	je     0x402770
  40275d:	add    rsp,0x38
  402761:	pop    rbx
  402762:	pop    rsi
  402763:	pop    rdi
  402764:	pop    rbp
  402765:	pop    r12
  402767:	pop    r13
  402769:	ret    
  40276a:	nop    WORD PTR [rax+rax*1+0x0]
  402770:	cmp    QWORD PTR [rdx+0x18],0x0
  402775:	je     0x40275d
  402777:	mov    rbx,rdx
  40277a:	mov    rsi,rcx
  40277d:	mov    rdi,QWORD PTR [rip+0x22f9c]        # 0x425720
  402784:	call   rdi
  402786:	mov    DWORD PTR [rax],0x0
  40278c:	mov    rcx,QWORD PTR [rbx+0x18]
  402790:	lea    rdx,[rsp+0x28]
  402795:	xor    r8d,r8d
  402798:	call   0x418508
  40279d:	mov    rbp,QWORD PTR [rbx+0x18]
  4027a1:	cmp    rbp,QWORD PTR [rsp+0x28]
  4027a6:	mov    r12d,eax
  4027a9:	je     0x4027e4
  4027ab:	call   rdi
  4027ad:	mov    eax,DWORD PTR [rax]
  4027af:	test   eax,eax
  4027b1:	jne    0x4027e0
  4027b3:	mov    eax,DWORD PTR [rbx+0x10]
  4027b6:	test   eax,0x1000000
  4027bb:	jne    0x40282f
  4027bd:	mov    rdx,QWORD PTR [rsp+0x28]
  4027c2:	cmp    BYTE PTR [rdx],0x0
  4027c5:	jne    0x4027e0
  4027c7:	test   al,0x40
  4027c9:	jne    0x4028a0
  4027cf:	mov    DWORD PTR [rbx+0x18],r12d
  4027d3:	jmp    0x40275d
  4027d5:	cmp    cl,0x67
  4027d8:	je     0x402886
  4027de:	xchg   ax,ax
  4027e0:	mov    rbp,QWORD PTR [rbx+0x18]
  4027e4:	mov    r13,QWORD PTR [rsi+0x28]
  4027e8:	mov    r12,QWORD PTR [rip+0x173e9]        # 0x419bd8
  4027ef:	call   QWORD PTR [rip+0x22ee3]        # 0x4256d8
  4027f5:	lea    rcx,[rax+0x60]
  4027f9:	mov    r9,rbp
  4027fc:	mov    r8,r13
  4027ff:	mov    rdx,r12
  402802:	call   0x402710
  402807:	test   BYTE PTR [rsi+0x10],0x4
  40280b:	je     0x40281b
  40280d:	mov    edx,0x1
  402812:	mov    rcx,rsi
  402815:	call   QWORD PTR [rsi+0x98]
  40281b:	call   rdi
  40281d:	mov    DWORD PTR [rax],0x16
  402823:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40282a:	jmp    0x40275d
  40282f:	mov    r8,QWORD PTR [rsp+0x28]
  402834:	lea    rdx,[r8+0x1]
  402838:	mov    QWORD PTR [rsp+0x28],rdx
  40283d:	movzx  ecx,BYTE PTR [r8]
  402841:	cmp    cl,0x54
  402844:	je     0x4028b2
  402846:	jg     0x402866
  402848:	cmp    cl,0x47
  40284b:	je     0x4028b6
  40284d:	jle    0x4028bc
  40284f:	cmp    cl,0x4b
  402852:	je     0x40285d
  402854:	cmp    cl,0x4d
  402857:	jne    0x4027e0
  402859:	shl    r12d,0xa
  40285d:	shl    r12d,0xa
  402861:	jmp    0x4027c2
  402866:	cmp    cl,0x6b
  402869:	je     0x402894
  40286b:	jle    0x4027d5
  402871:	cmp    cl,0x6d
  402874:	je     0x40288d
  402876:	imul   r12d,r12d,0x3e8
  40287d:	cmp    cl,0x74
  402880:	jne    0x4027e0
  402886:	imul   r12d,r12d,0x3e8
  40288d:	imul   r12d,r12d,0x3e8
  402894:	imul   r12d,r12d,0x3e8
  40289b:	jmp    0x4027c2
  4028a0:	mov    rcx,QWORD PTR [rbx+0x18]
  4028a4:	call   0x4185e0
  4028a9:	and    DWORD PTR [rbx+0x10],0xffffffbf
  4028ad:	jmp    0x4027cf
  4028b2:	shl    r12d,0xa
  4028b6:	shl    r12d,0xa
  4028ba:	jmp    0x402859
  4028bc:	test   cl,cl
  4028be:	jne    0x4027e0
  4028c4:	mov    QWORD PTR [rsp+0x28],r8
  4028c9:	mov    rdx,r8
  4028cc:	jmp    0x4027c2
  4028d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4028d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028e0:	push   rsi
  4028e1:	push   rbx
  4028e2:	sub    rsp,0x28
  4028e6:	test   rdx,rdx
  4028e9:	mov    rsi,rcx
  4028ec:	mov    rbx,rdx
  4028ef:	je     0x402930
  4028f1:	mov    edx,0xa
  4028f6:	mov    rcx,rbx
  4028f9:	call   0x418560
  4028fe:	test   rax,rax
  402901:	je     0x402944
  402903:	sub    rax,rbx
  402906:	mov    r9,rsi
  402909:	mov    edx,0x1
  40290e:	mov    r8,rax
  402911:	mov    rcx,rbx
  402914:	call   0x4185c8
  402919:	mov    rdx,rsi
  40291c:	mov    ecx,0xa
  402921:	add    rsp,0x28
  402925:	pop    rbx
  402926:	pop    rsi
  402927:	jmp    0x4185f8
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	test   r8,r8
  402933:	mov    rbx,r8
  402936:	jne    0x4028f1
  402938:	test   r9,r9
  40293b:	jne    0x402951
  40293d:	add    rsp,0x28
  402941:	pop    rbx
  402942:	pop    rsi
  402943:	ret    
  402944:	mov    rdx,rsi
  402947:	mov    rcx,rbx
  40294a:	call   0x4185f0
  40294f:	jmp    0x402919
  402951:	mov    rbx,r9
  402954:	jmp    0x4028f1
  402956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402960:	push   rsi
  402961:	push   rbx
  402962:	sub    rsp,0x28
  402966:	cmp    BYTE PTR [rcx],0x27
  402969:	mov    rbx,rcx
  40296c:	jne    0x40299b
  40296e:	mov    rsi,QWORD PTR [rip+0x22d63]        # 0x4256d8
  402975:	call   rsi
  402977:	lea    rcx,[rip+0x19853]        # 0x41c1d1
  40297e:	lea    r9,[rax+0x30]
  402982:	mov    r8d,0x2
  402988:	mov    edx,0x1
  40298d:	add    rbx,0x1
  402991:	call   0x4185c8
  402996:	cmp    BYTE PTR [rbx],0x27
  402999:	je     0x402975
  40299b:	mov    rax,rbx
  40299e:	add    rsp,0x28
  4029a2:	pop    rbx
  4029a3:	pop    rsi
  4029a4:	ret    
  4029a5:	nop
  4029a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029b0:	push   r12
  4029b2:	push   rbp
  4029b3:	push   rdi
  4029b4:	push   rsi
  4029b5:	push   rbx
  4029b6:	sub    rsp,0x20
  4029ba:	test   BYTE PTR [rdx+0x10],0x20
  4029be:	mov    rdi,rcx
  4029c1:	mov    r12,rdx
  4029c4:	mov    rbx,r8
  4029c7:	je     0x4029d5
  4029c9:	cmp    WORD PTR [rdx+0x8],0x8000
  4029cf:	je     0x402ae0
  4029d5:	mov    rsi,QWORD PTR [r12+0x50]
  4029da:	mov    rcx,rsi
  4029dd:	mov    ebp,0x11
  4029e2:	call   0x418538
  4029e7:	mov    rdx,rdi
  4029ea:	mov    rcx,rsi
  4029ed:	sub    ebp,eax
  4029ef:	call   0x4185f0
  4029f4:	test   rbx,rbx
  4029f7:	je     0x402ac0
  4029fd:	lea    rcx,[rip+0x1813c]        # 0x41ab40
  402a04:	mov    r9,rdi
  402a07:	mov    r8d,0x3
  402a0d:	mov    edx,0x1
  402a12:	lea    esi,[rbp-0x1]
  402a15:	call   0x4185c8
  402a1a:	test   ebp,ebp
  402a1c:	jle    0x402a35
  402a1e:	xchg   ax,ax
  402a20:	mov    rdx,rdi
  402a23:	mov    ecx,0x20
  402a28:	sub    esi,0x1
  402a2b:	call   0x4185f8
  402a30:	cmp    esi,0xffffffff
  402a33:	jne    0x402a20
  402a35:	mov    eax,DWORD PTR [r12+0x10]
  402a3a:	and    eax,0xf000
  402a3f:	cmp    eax,0x5000
  402a44:	jne    0x402a85
  402a46:	jmp    0x402ae9
  402a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  402a50:	mov    rdx,rax
  402a53:	mov    rcx,rbx
  402a56:	mov    r9,rdi
  402a59:	sub    rdx,rbx
  402a5c:	mov    r8d,0x1
  402a62:	lea    rbx,[rsi+0x1]
  402a66:	call   0x4185c8
  402a6b:	lea    rcx,[rip+0x180d5]        # 0x41ab47
  402a72:	mov    r9,rdi
  402a75:	mov    r8d,0x2
  402a7b:	mov    edx,0x1
  402a80:	call   0x4185c8
  402a85:	mov    edx,0xa
  402a8a:	mov    rcx,rbx
  402a8d:	call   0x418560
  402a92:	test   rax,rax
  402a95:	mov    rsi,rax
  402a98:	jne    0x402a50
  402a9a:	mov    rdx,rdi
  402a9d:	mov    rcx,rbx
  402aa0:	call   0x4185f0
  402aa5:	mov    rdx,rdi
  402aa8:	mov    ecx,0xa
  402aad:	add    rsp,0x20
  402ab1:	pop    rbx
  402ab2:	pop    rsi
  402ab3:	pop    rdi
  402ab4:	pop    rbp
  402ab5:	pop    r12
  402ab7:	jmp    0x4185f8
  402abc:	nop    DWORD PTR [rax+0x0]
  402ac0:	mov    eax,DWORD PTR [r12+0x10]
  402ac5:	and    eax,0xf000
  402aca:	cmp    eax,0x5000
  402acf:	jne    0x402aa5
  402ad1:	jmp    0x4029fd
  402ad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ae0:	mov    rsi,QWORD PTR [rdx+0x58]
  402ae4:	jmp    0x4029da
  402ae9:	lea    rdx,[rip+0x18054]        # 0x41ab44
  402af0:	mov    r8d,ebx
  402af3:	mov    rcx,rdi
  402af6:	call   0x402710
  402afb:	jmp    0x402aa5
  402afd:	nop    DWORD PTR [rax]
  402b00:	sub    rsp,0x38
  402b04:	mov    QWORD PTR [rsp+0x58],r9
  402b09:	lea    r9,[rsp+0x58]
  402b0e:	mov    QWORD PTR [rsp+0x28],r9
  402b13:	call   0x413ae0
  402b18:	add    rsp,0x38
  402b1c:	ret    
  402b1d:	nop    DWORD PTR [rax]
  402b20:	sub    rsp,0x38
  402b24:	mov    QWORD PTR [rsp+0x48],rdx
  402b29:	lea    rdx,[rsp+0x48]
  402b2e:	mov    QWORD PTR [rsp+0x50],r8
  402b33:	mov    QWORD PTR [rsp+0x58],r9
  402b38:	mov    QWORD PTR [rsp+0x28],rdx
  402b3d:	call   0x413aa0
  402b42:	add    rsp,0x38
  402b46:	ret    
  402b47:	nop    WORD PTR [rax+rax*1+0x0]
  402b50:	push   rbx
  402b51:	sub    rsp,0x20
  402b55:	cmp    BYTE PTR [rip+0x20918],0x0        # 0x423474
  402b5c:	mov    ebx,ecx
  402b5e:	jne    0x402b67
  402b60:	mov    ecx,ebx
  402b62:	call   0x418630
  402b67:	mov    edx,ecx
  402b69:	lea    rcx,[rip+0x17fda]        # 0x41ab4a
  402b70:	call   0x402b20
  402b75:	jmp    0x402b60
  402b77:	nop    WORD PTR [rax+rax*1+0x0]
  402b80:	push   rsi
  402b81:	push   rbx
  402b82:	sub    rsp,0x28
  402b86:	mov    rbx,QWORD PTR [rip+0x16f13]        # 0x419aa0
  402b8d:	mov    rsi,rcx
  402b90:	call   QWORD PTR [rip+0x22b42]        # 0x4256d8
  402b96:	lea    rcx,[rax+0x60]
  402b9a:	mov    r8,rsi
  402b9d:	mov    rdx,rbx
  402ba0:	call   0x402710
  402ba5:	mov    ecx,0x46
  402baa:	call   0x402b50
  402baf:	nop
  402bb0:	push   r15
  402bb2:	push   r14
  402bb4:	push   r13
  402bb6:	push   r12
  402bb8:	push   rbp
  402bb9:	push   rdi
  402bba:	push   rsi
  402bbb:	push   rbx
  402bbc:	sub    rsp,0x58
  402bc0:	cmp    rcx,0xf
  402bc4:	mov    QWORD PTR [rsp+0xa0],rcx
  402bcc:	mov    r13,rdx
  402bcf:	mov    rbx,r8
  402bd2:	mov    ebp,r9d
  402bd5:	ja     0x402e53
  402bdb:	mov    r8,QWORD PTR [r13+0x50]
  402bdf:	mov    rdx,QWORD PTR [rip+0x171aa]        # 0x419d90
  402be6:	mov    rcx,QWORD PTR [rip+0x2085b]        # 0x423448
  402bed:	call   0x402710
  402bf2:	mov    rdi,QWORD PTR [rbx]
  402bf5:	mov    DWORD PTR [rsp+0x38],0x0
  402bfd:	cmp    BYTE PTR [rdi],0x7f
  402c00:	je     0x402e90
  402c06:	mov    rcx,rdi
  402c09:	mov    r12,rbx
  402c0c:	mov    r14d,ebp
  402c0f:	xor    esi,esi
  402c11:	xor    r15d,r15d
  402c14:	jmp    0x402c24
  402c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c20:	mov    rcx,QWORD PTR [r12]
  402c24:	call   0x418538
  402c29:	add    rax,0x1
  402c2d:	add    r12,0x8
  402c31:	cmp    r15,rax
  402c34:	cmovb  r15,rax
  402c38:	sub    r14d,0x1
  402c3c:	add    rsi,rax
  402c3f:	test   r14d,r14d
  402c42:	jg     0x402c20
  402c44:	cmp    r15,0x23
  402c48:	jbe    0x402cd0
  402c4e:	mov    esi,ebp
  402c50:	jmp    0x402c55
  402c52:	mov    rdi,QWORD PTR [rbx]
  402c55:	mov    rcx,QWORD PTR [rip+0x207ec]        # 0x423448
  402c5c:	lea    rdx,[rip+0x1944d]        # 0x41c0b0
  402c63:	mov    r8,rdi
  402c66:	sub    esi,0x1
  402c69:	add    rbx,0x8
  402c6d:	call   0x402710
  402c72:	test   esi,esi
  402c74:	jg     0x402c52
  402c76:	cmp    QWORD PTR [rsp+0xa0],0xf
  402c7f:	ja     0x402ddf
  402c85:	mov    eax,DWORD PTR [r13+0x10]
  402c89:	and    eax,0xf000
  402c8e:	cmp    eax,0x4000
  402c93:	je     0x402e25
  402c99:	mov    eax,DWORD PTR [rsp+0x38]
  402c9d:	mov    rdx,QWORD PTR [rip+0x16ea4]        # 0x419b48
  402ca4:	mov    rcx,QWORD PTR [rip+0x2079d]        # 0x423448
  402cab:	lea    r9d,[rax+rbp*1-0x1]
  402cb0:	mov    r8d,eax
  402cb3:	call   0x402710
  402cb8:	nop
  402cb9:	add    rsp,0x58
  402cbd:	pop    rbx
  402cbe:	pop    rsi
  402cbf:	pop    rdi
  402cc0:	pop    rbp
  402cc1:	pop    r12
  402cc3:	pop    r13
  402cc5:	pop    r14
  402cc7:	pop    r15
  402cc9:	ret    
  402cca:	nop    WORD PTR [rax+rax*1+0x0]
  402cd0:	cmp    rsi,0x4b
  402cd4:	jbe    0x402d80
  402cda:	lea    r12,[rsp+0x40]
  402cdf:	lea    r8,[rip+0x193d0]        # 0x41c0b6
  402ce6:	mov    r9d,r15d
  402ce9:	mov    edx,0x10
  402cee:	mov    rcx,r12
  402cf1:	call   0x402b00
  402cf6:	cmp    eax,0xf
  402cf9:	jg     0x402ecc
  402cff:	mov    eax,0x4e
  402d04:	xor    edx,edx
  402d06:	mov    r9,QWORD PTR [rip+0x2073b]        # 0x423448
  402d0d:	div    r15
  402d10:	lea    rcx,[rip+0x19367]        # 0x41c07e
  402d17:	mov    r8d,0x2
  402d1d:	mov    edx,0x1
  402d22:	add    rbx,0x8
  402d26:	mov    r15d,ebp
  402d29:	xor    esi,esi
  402d2b:	mov    rdi,rax
  402d2e:	call   0x4185c8
  402d33:	jmp    0x402d48
  402d35:	mov    rcx,QWORD PTR [rip+0x2070c]        # 0x423448
  402d3c:	mov    rdx,r12
  402d3f:	call   0x402710
  402d44:	add    rbx,0x8
  402d48:	sub    r15d,0x1
  402d4c:	test   r15d,r15d
  402d4f:	jle    0x402eb0
  402d55:	lea    eax,[rsi+0x1]
  402d58:	mov    r8,QWORD PTR [rbx-0x8]
  402d5c:	cmp    rax,rdi
  402d5f:	mov    rsi,rax
  402d62:	jne    0x402d35
  402d64:	mov    rcx,QWORD PTR [rip+0x206dd]        # 0x423448
  402d6b:	lea    rdx,[rip+0x193d5]        # 0x41c147
  402d72:	xor    esi,esi
  402d74:	call   0x402710
  402d79:	jmp    0x402d44
  402d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d80:	mov    rdx,QWORD PTR [rip+0x206c1]        # 0x423448
  402d87:	mov    ecx,0x20
  402d8c:	mov    esi,ebp
  402d8e:	call   0x4185f8
  402d93:	mov    rdx,QWORD PTR [rip+0x206ae]        # 0x423448
  402d9a:	mov    ecx,0x20
  402d9f:	add    rbx,0x8
  402da3:	sub    esi,0x1
  402da6:	call   0x4185f8
  402dab:	mov    rcx,QWORD PTR [rbx-0x8]
  402daf:	mov    rdx,QWORD PTR [rip+0x20692]        # 0x423448
  402db6:	call   0x4185f0
  402dbb:	test   esi,esi
  402dbd:	jg     0x402d93
  402dbf:	mov    rdx,QWORD PTR [rip+0x20682]        # 0x423448
  402dc6:	mov    ecx,0xa
  402dcb:	call   0x4185f8
  402dd0:	cmp    QWORD PTR [rsp+0xa0],0xf
  402dd9:	jbe    0x402c85
  402ddf:	mov    eax,DWORD PTR [rsp+0x38]
  402de3:	mov    rdx,QWORD PTR [rip+0x16d5e]        # 0x419b48
  402dea:	mov    rcx,QWORD PTR [rip+0x20657]        # 0x423448
  402df1:	lea    r9d,[rax+rbp*1-0x1]
  402df6:	mov    r8d,eax
  402df9:	call   0x402710
  402dfe:	mov    rcx,QWORD PTR [rsp+0xa0]
  402e06:	mov    edx,0x1
  402e0b:	call   QWORD PTR [rcx+0x98]
  402e11:	mov    eax,DWORD PTR [r13+0x10]
  402e15:	and    eax,0xf000
  402e1a:	cmp    eax,0x4000
  402e1f:	jne    0x402c99
  402e25:	mov    rdx,QWORD PTR [rip+0x16e64]        # 0x419c90
  402e2c:	mov    rcx,QWORD PTR [rip+0x20615]        # 0x423448
  402e33:	mov    r8d,ebp
  402e36:	call   0x402710
  402e3b:	mov    rdx,QWORD PTR [rip+0x20606]        # 0x423448
  402e42:	mov    rcx,QWORD PTR [rip+0x16f37]        # 0x419d80
  402e49:	call   0x4185f0
  402e4e:	jmp    0x402cb9
  402e53:	mov    rax,QWORD PTR [rcx+0x28]
  402e57:	mov    rcx,QWORD PTR [rip+0x205ea]        # 0x423448
  402e5e:	mov    QWORD PTR [rsp+0x38],rax
  402e63:	mov    rax,QWORD PTR [rdx+0x50]
  402e67:	mov    r8,QWORD PTR [rsp+0x38]
  402e6c:	mov    QWORD PTR [rsp+0x20],rax
  402e71:	mov    r9,QWORD PTR [rdx+0x18]
  402e75:	mov    rdx,QWORD PTR [rip+0x2061c]        # 0x423498
  402e7c:	call   0x402710
  402e81:	jmp    0x402bdb
  402e86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e90:	mov    rdi,QWORD PTR [rbx+0x8]
  402e94:	sub    ebp,0x1
  402e97:	add    rbx,0x8
  402e9b:	mov    DWORD PTR [rsp+0x38],0x1
  402ea3:	jmp    0x402c06
  402ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  402eb0:	mov    r8,QWORD PTR [rbx-0x8]
  402eb4:	mov    rcx,QWORD PTR [rip+0x2058d]        # 0x423448
  402ebb:	lea    rdx,[rip+0x19281]        # 0x41c143
  402ec2:	call   0x402710
  402ec7:	jmp    0x402c76
  402ecc:	mov    ecx,0x1
  402ed1:	call   0x402b50
  402ed6:	nop
  402ed7:	nop    WORD PTR [rax+rax*1+0x0]
  402ee0:	push   r15
  402ee2:	push   r14
  402ee4:	push   r13
  402ee6:	push   r12
  402ee8:	push   rbp
  402ee9:	push   rdi
  402eea:	push   rsi
  402eeb:	push   rbx
  402eec:	sub    rsp,0x38
  402ef0:	mov    ebx,DWORD PTR [rsp+0xa0]
  402ef7:	mov    rdi,rcx
  402efa:	mov    QWORD PTR [rsp+0x88],rdx
  402f02:	mov    QWORD PTR [rsp+0x90],r8
  402f0a:	mov    rbp,r9
  402f0d:	call   0x418538
  402f12:	mov    rsi,rax
  402f15:	movzx  eax,BYTE PTR [rdi]
  402f18:	cmp    al,0x7f
  402f1a:	ja     0x402f79
  402f1c:	lea    rdx,[rip+0x1bc5d]        # 0x41eb80
  402f23:	movzx  ecx,al
  402f26:	mov    edx,DWORD PTR [rdx+rcx*4]
  402f29:	test   edx,0x30000
  402f2f:	je     0x402f70
  402f31:	lea    rdx,[rsp+0x28]
  402f36:	xor    r8d,r8d
  402f39:	mov    rcx,rdi
  402f3c:	mov    QWORD PTR [rsp+0x28],rdi
  402f41:	call   0x418500
  402f46:	cmp    DWORD PTR [rsp+0xa0],eax
  402f4d:	jbe    0x402f5f
  402f4f:	mov    rdx,QWORD PTR [rsp+0x28]
  402f54:	mov    eax,eax
  402f56:	cmp    BYTE PTR [rdx],0x0
  402f59:	je     0x403014
  402f5f:	mov    rax,QWORD PTR [rip+0x16c7a]        # 0x419be0
  402f66:	jmp    0x402fd9
  402f68:	nop    DWORD PTR [rax+rax*1+0x0]
  402f70:	and    dh,0x80
  402f73:	jne    0x403025
  402f79:	xor    r14d,r14d
  402f7c:	test   rbx,rbx
  402f7f:	mov    r12,rbx
  402f82:	mov    r13,0xffffffffffffffff
  402f89:	je     0x403037
  402f8f:	nop
  402f90:	mov    r15,QWORD PTR [rbp+r14*8+0x0]
  402f95:	mov    r8,rsi
  402f98:	mov    rdx,rdi
  402f9b:	mov    rcx,r15
  402f9e:	call   0x418530
  402fa3:	test   eax,eax
  402fa5:	jne    0x402fbc
  402fa7:	cmp    BYTE PTR [r15+rsi*1],0x0
  402fac:	je     0x403040
  402fb2:	cmp    r12,rbx
  402fb5:	mov    r12,r13
  402fb8:	cmove  r12,r14
  402fbc:	add    r14,0x1
  402fc0:	cmp    rbx,r14
  402fc3:	jne    0x402f90
  402fc5:	cmp    rbx,r12
  402fc8:	mov    rax,r12
  402fcb:	ja     0x403014
  402fcd:	cmp    r12,rbx
  402fd0:	je     0x403037
  402fd2:	mov    rax,QWORD PTR [rip+0x16aff]        # 0x419ad8
  402fd9:	mov    QWORD PTR [rip+0x204b8],rax        # 0x423498
  402fe0:	call   QWORD PTR [rip+0x226f2]        # 0x4256d8
  402fe6:	mov    r9d,DWORD PTR [rsp+0xa0]
  402fee:	mov    rdx,QWORD PTR [rsp+0x90]
  402ff6:	add    rax,0x60
  402ffa:	mov    rcx,QWORD PTR [rsp+0x88]
  403002:	mov    r8,rbp
  403005:	mov    QWORD PTR [rip+0x2043c],rax        # 0x423448
  40300c:	call   0x402bb0
  403011:	mov    rax,rbx
  403014:	add    rsp,0x38
  403018:	pop    rbx
  403019:	pop    rsi
  40301a:	pop    rdi
  40301b:	pop    rbp
  40301c:	pop    r12
  40301e:	pop    r13
  403020:	pop    r14
  403022:	pop    r15
  403024:	ret    
  403025:	cmp    BYTE PTR [rdi+0x2],0x0
  403029:	jne    0x402f79
  40302f:	cmp    al,0x7e
  403031:	je     0x403045
  403033:	cmp    al,0x2d
  403035:	je     0x403057
  403037:	mov    rax,QWORD PTR [rip+0x16b52]        # 0x419b90
  40303e:	jmp    0x402fd9
  403040:	mov    rax,r14
  403043:	jmp    0x403014
  403045:	cmp    BYTE PTR [rdi+0x1],0x30
  403049:	jne    0x403037
  40304b:	mov    eax,DWORD PTR [rsp+0xa0]
  403052:	sub    eax,0x1
  403055:	jmp    0x403014
  403057:	cmp    BYTE PTR [rdi+0x1],0x31
  40305b:	jne    0x403037
  40305d:	jmp    0x40304b
  40305f:	nop
  403060:	push   r13
  403062:	push   r12
  403064:	push   rbp
  403065:	push   rdi
  403066:	push   rsi
  403067:	push   rbx
  403068:	sub    rsp,0x48
  40306c:	mov    rbx,QWORD PTR [rip+0x226ad]        # 0x425720
  403073:	mov    r12,rdx
  403076:	mov    r13,r8
  403079:	mov    rsi,rcx
  40307c:	call   rbx
  40307e:	mov    ecx,DWORD PTR [rax]
  403080:	call   0x418548
  403085:	mov    rbp,rax
  403088:	call   rbx
  40308a:	mov    rbx,QWORD PTR [rip+0x16a6f]        # 0x419b00
  403091:	mov    edi,DWORD PTR [rax]
  403093:	call   QWORD PTR [rip+0x2263f]        # 0x4256d8
  403099:	lea    rcx,[rax+0x60]
  40309d:	mov    QWORD PTR [rsp+0x30],r13
  4030a2:	mov    QWORD PTR [rsp+0x28],r12
  4030a7:	mov    QWORD PTR [rsp+0x20],rbp
  4030ac:	mov    r9d,edi
  4030af:	mov    r8,rsi
  4030b2:	mov    rdx,rbx
  4030b5:	call   0x402710
  4030ba:	nop
  4030bb:	add    rsp,0x48
  4030bf:	pop    rbx
  4030c0:	pop    rsi
  4030c1:	pop    rdi
  4030c2:	pop    rbp
  4030c3:	pop    r12
  4030c5:	pop    r13
  4030c7:	ret    
  4030c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4030d0:	sub    rsp,0x28
  4030d4:	call   0x403060
  4030d9:	mov    ecx,0x1
  4030de:	call   0x402b50
  4030e3:	nop
  4030e4:	xchg   ax,ax
  4030e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030f0:	sub    rsp,0x38
  4030f4:	mov    QWORD PTR [rsp+0x50],r8
  4030f9:	lea    r8,[rsp+0x50]
  4030fe:	mov    QWORD PTR [rsp+0x58],r9
  403103:	mov    QWORD PTR [rsp+0x28],r8
  403108:	call   0x413b40
  40310d:	add    rsp,0x38
  403111:	ret    
  403112:	nop    DWORD PTR [rax+0x0]
  403116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403120:	push   r12
  403122:	push   rbp
  403123:	push   rdi
  403124:	push   rsi
  403125:	push   rbx
  403126:	sub    rsp,0x20
  40312a:	mov    ebx,edx
  40312c:	mov    rsi,rcx
  40312f:	mov    rbp,r8
  403132:	sub    ebx,0x1
  403135:	mov    rdi,r9
  403138:	js     0x403162
  40313a:	nop    WORD PTR [rax+rax*1+0x0]
  403140:	mov    rdx,rsi
  403143:	mov    ecx,0x20
  403148:	sub    ebx,0x1
  40314b:	call   0x418588
  403150:	mov    rdx,rsi
  403153:	mov    ecx,0x20
  403158:	call   0x418588
  40315d:	cmp    ebx,0xffffffff
  403160:	jne    0x403140
  403162:	mov    edx,DWORD PTR [rdi]
  403164:	cmp    edx,0x6
  403167:	ja     0x403364
  40316d:	lea    rax,[rip+0x17a0c]        # 0x41ab80
  403174:	mov    ecx,edx
  403176:	movsxd rcx,DWORD PTR [rax+rcx*4]
  40317a:	add    rax,rcx
  40317d:	jmp    rax
  40317f:	nop
  403180:	mov    r9d,DWORD PTR [rdi+0x10]
  403184:	mov    r8,QWORD PTR [rdi+0x8]
  403188:	lea    rdx,[rip+0x19267]        # 0x41c3f6
  40318f:	mov    rcx,rsi
  403192:	add    rsp,0x20
  403196:	pop    rbx
  403197:	pop    rsi
  403198:	pop    rdi
  403199:	pop    rbp
  40319a:	pop    r12
  40319c:	jmp    0x402710
  4031a1:	mov    rbx,QWORD PTR [rdi+0x10]
  4031a5:	mov    rbp,QWORD PTR [rdi+0x8]
  4031a9:	test   rbx,rbx
  4031ac:	je     0x4033f5
  4031b2:	mov    edi,DWORD PTR [rbx]
  4031b4:	mov    r8,rbp
  4031b7:	lea    rdx,[rip+0x18fa1]        # 0x41c15f
  4031be:	test   edi,edi
  4031c0:	jle    0x403298
  4031c6:	lea    rdx,[rip+0x18f64]        # 0x41c131
  4031cd:	mov    rcx,rsi
  4031d0:	add    rbx,0x8
  4031d4:	call   0x402710
  4031d9:	mov    eax,DWORD PTR [rip+0x163e1]        # 0x4195c0
  4031df:	lea    edx,[rax+0x1]
  4031e2:	lea    eax,[rdi-0x1]
  4031e5:	mov    DWORD PTR [rip+0x163d5],edx        # 0x4195c0
  4031eb:	lea    rdi,[rbx+rax*8+0x8]
  4031f0:	jmp    0x4031f8
  4031f2:	mov    edx,DWORD PTR [rip+0x163c8]        # 0x4195c0
  4031f8:	add    rbx,0x8
  4031fc:	mov    r9,QWORD PTR [rbx-0x8]
  403200:	xor    r8d,r8d
  403203:	mov    rcx,rsi
  403206:	call   0x403120
  40320b:	cmp    rbx,rdi
  40320e:	jne    0x4031f2
  403210:	mov    ebx,DWORD PTR [rip+0x163aa]        # 0x4195c0
  403216:	lea    eax,[rbx-0x1]
  403219:	sub    ebx,0x2
  40321c:	mov    DWORD PTR [rip+0x1639e],eax        # 0x4195c0
  403222:	js     0x403246
  403224:	mov    rdx,rsi
  403227:	mov    ecx,0x20
  40322c:	sub    ebx,0x1
  40322f:	call   0x418588
  403234:	mov    rdx,rsi
  403237:	mov    ecx,0x20
  40323c:	call   0x418588
  403241:	cmp    ebx,0xffffffff
  403244:	jne    0x403224
  403246:	mov    r8,rbp
  403249:	lea    rdx,[rip+0x17926]        # 0x41ab76
  403250:	jmp    0x403298
  403252:	mov    r12,QWORD PTR [rdi+0x8]
  403256:	lea    rbp,[rdi+0x10]
  40325a:	lea    rdx,[rip+0x18f19]        # 0x41c17a
  403261:	lea    rdi,[rip+0x18358]        # 0x41b5c0
  403268:	mov    rcx,rsi
  40326b:	mov    r8,r12
  40326e:	call   0x402710
  403273:	movzx  ebx,BYTE PTR [rbp+0x0]
  403277:	cmp    ebx,0x26
  40327a:	je     0x4033a0
  403280:	jg     0x403374
  403286:	test   ebx,ebx
  403288:	jne    0x4033e0
  40328e:	lea    rdx,[rip+0x18e14]        # 0x41c0a9
  403295:	mov    r8,r12
  403298:	mov    rcx,rsi
  40329b:	add    rsp,0x20
  40329f:	pop    rbx
  4032a0:	pop    rsi
  4032a1:	pop    rdi
  4032a2:	pop    rbp
  4032a3:	pop    r12
  4032a5:	jmp    0x402710
  4032aa:	nop    WORD PTR [rax+rax*1+0x0]
  4032b0:	test   rbp,rbp
  4032b3:	je     0x403180
  4032b9:	lea    rax,[rip+0x1789c]        # 0x41ab5c
  4032c0:	mov    r8,QWORD PTR [rdi+0x8]
  4032c4:	lea    r9,[rip+0x17889]        # 0x41ab54
  4032cb:	cmp    edx,0x2
  4032ce:	lea    rdx,[rip+0x18f7f]        # 0x41c254
  4032d5:	mov    rcx,rsi
  4032d8:	cmovne r9,rax
  4032dc:	mov    ebx,DWORD PTR [rbp+0x10]
  4032df:	mov    r12,QWORD PTR [rbp+0x18]
  4032e3:	call   0x402710
  4032e8:	mov    ecx,0x3
  4032ed:	mov    rdx,rbp
  4032f0:	call   QWORD PTR [rbp+0x38]
  4032f3:	mov    rcx,QWORD PTR [rbp+0x18]
  4032f7:	test   rcx,rcx
  4032fa:	je     0x403312
  4032fc:	mov    rdx,rsi
  4032ff:	call   0x4185f0
  403304:	cmp    DWORD PTR [rdi],0x2
  403307:	je     0x403312
  403309:	mov    rcx,QWORD PTR [rbp+0x18]
  40330d:	call   0x4185e0
  403312:	mov    QWORD PTR [rbp+0x18],r12
  403316:	mov    DWORD PTR [rbp+0x10],ebx
  403319:	lea    rdx,[rip+0x18d89]        # 0x41c0a9
  403320:	mov    r8,QWORD PTR [rdi+0x8]
  403324:	jmp    0x403298
  403329:	nop    DWORD PTR [rax+0x0]
  403330:	mov    eax,DWORD PTR [rdi+0x10]
  403333:	lea    r9,[rip+0x17831]        # 0x41ab6b
  40333a:	mov    r8,QWORD PTR [rdi+0x8]
  40333e:	lea    rdx,[rip+0x18fcc]        # 0x41c311
  403345:	mov    rcx,rsi
  403348:	test   eax,eax
  40334a:	lea    rax,[rip+0x1781f]        # 0x41ab70
  403351:	cmove  r9,rax
  403355:	add    rsp,0x20
  403359:	pop    rbx
  40335a:	pop    rsi
  40335b:	pop    rdi
  40335c:	pop    rbp
  40335d:	pop    r12
  40335f:	jmp    0x402710
  403364:	mov    r8,QWORD PTR [rdi+0x8]
  403368:	lea    rdx,[rip+0x18df0]        # 0x41c15f
  40336f:	jmp    0x403298
  403374:	cmp    ebx,0x3e
  403377:	je     0x4033a0
  403379:	jg     0x403393
  40337b:	cmp    ebx,0x3c
  40337e:	je     0x4033a0
  403380:	mov    rdx,rsi
  403383:	mov    ecx,ebx
  403385:	call   0x418588
  40338a:	add    rbp,0x1
  40338e:	jmp    0x403273
  403393:	lea    eax,[rbx-0x7f]
  403396:	cmp    eax,0x80
  40339b:	ja     0x403380
  40339d:	nop    DWORD PTR [rax]
  4033a0:	mov    rdx,rsi
  4033a3:	mov    ecx,0x26
  4033a8:	call   0x418588
  4033ad:	cmp    ebx,0x26
  4033b0:	lea    rax,[rip+0x181c9]        # 0x41b580
  4033b7:	je     0x4033e7
  4033b9:	add    rax,0x10
  4033bd:	cmp    ebx,DWORD PTR [rax]
  4033bf:	je     0x4033e7
  4033c1:	cmp    rax,rdi
  4033c4:	jne    0x4033b9
  4033c6:	lea    rdx,[rip+0x18e9c]        # 0x41c269
  4033cd:	mov    r8d,ebx
  4033d0:	mov    rcx,rsi
  4033d3:	call   0x402710
  4033d8:	jmp    0x40338a
  4033da:	nop    WORD PTR [rax+rax*1+0x0]
  4033e0:	cmp    ebx,0x1f
  4033e3:	jg     0x403380
  4033e5:	jmp    0x4033a0
  4033e7:	lea    rcx,[rax+0x8]
  4033eb:	mov    rdx,rsi
  4033ee:	call   0x4185f0
  4033f3:	jmp    0x40338a
  4033f5:	add    rsp,0x20
  4033f9:	pop    rbx
  4033fa:	pop    rsi
  4033fb:	pop    rdi
  4033fc:	pop    rbp
  4033fd:	pop    r12
  4033ff:	ret    
  403400:	test   BYTE PTR [rdx+0x10],0x8
  403404:	je     0x403410
  403406:	repz ret 
  403408:	nop    DWORD PTR [rax+rax*1+0x0]
  403410:	mov    rax,QWORD PTR [rcx+0x98]
  403417:	xor    edx,edx
  403419:	rex.W jmp rax
  40341c:	nop    DWORD PTR [rax+0x0]
  403420:	mov    rax,QWORD PTR [rip+0x168a1]        # 0x419cc8
  403427:	lea    r10,[rip+0x18b8b]        # 0x41bfb9
  40342e:	lea    r11,[rip+0x18ba1]        # 0x41bfd6
  403435:	and    ecx,0x3
  403438:	cmp    ecx,0x2
  40343b:	mov    QWORD PTR [rdx],rax
  40343e:	mov    QWORD PTR [rip+0x200e3],r10        # 0x423528
  403445:	lea    r10,[rip+0x18b67]        # 0x41bfb3
  40344c:	mov    QWORD PTR [rip+0x2011d],r11        # 0x423570
  403453:	lea    r11,[rip+0x18b64]        # 0x41bfbe
  40345a:	lea    rdx,[rip+0x17d00]        # 0x41b161
  403461:	mov    QWORD PTR [rip+0x200b0],r10        # 0x423518
  403468:	lea    r10,[rip+0x18b55]        # 0x41bfc4
  40346f:	mov    rax,QWORD PTR [rip+0x165ea]        # 0x419a60
  403476:	mov    QWORD PTR [rip+0x200bb],r11        # 0x423538
  40347d:	lea    r11,[rip+0x17cdd]        # 0x41b161
  403484:	mov    QWORD PTR [rip+0x2007d],rdx        # 0x423508
  40348b:	mov    QWORD PTR [rip+0x200ae],r10        # 0x423540
  403492:	lea    r10,[rip+0x18b14]        # 0x41bfad
  403499:	mov    rdx,QWORD PTR [rip+0x165b8]        # 0x419a58
  4034a0:	mov    r8,QWORD PTR [rip+0x165a9]        # 0x419a50
  4034a7:	mov    r9,QWORD PTR [rip+0x1659a]        # 0x419a48
  4034ae:	mov    QWORD PTR [rip+0x20093],r11        # 0x423548
  4034b5:	mov    QWORD PTR [rip+0x20094],r10        # 0x423550
  4034bc:	lea    r11,[rip+0x18baa]        # 0x41c06d
  4034c3:	lea    r10,[rip+0x18bb0]        # 0x41c07a
  4034ca:	mov    QWORD PTR [rip+0x2002f],rax        # 0x423500
  4034d1:	mov    QWORD PTR [rip+0x20038],rdx        # 0x423510
  4034d8:	mov    QWORD PTR [rip+0x20041],r8        # 0x423520
  4034df:	mov    QWORD PTR [rip+0x2004a],r9        # 0x423530
  4034e6:	mov    QWORD PTR [rip+0x2006b],r11        # 0x423558
  4034ed:	mov    QWORD PTR [rip+0x2006c],r10        # 0x423560
  4034f4:	je     0x403530
  4034f6:	cmp    ecx,0x3
  4034f9:	je     0x403514
  4034fb:	cmp    ecx,0x1
  4034fe:	je     0x403514
  403500:	lea    rax,[rip+0x18ac6]        # 0x41bfcd
  403507:	mov    QWORD PTR [rip+0x2005a],rax        # 0x423568
  40350e:	mov    eax,0x16
  403513:	ret    
  403514:	lea    rax,[rip+0x18ab0]        # 0x41bfcb
  40351b:	mov    QWORD PTR [rip+0x20046],rax        # 0x423568
  403522:	mov    eax,0x16
  403527:	ret    
  403528:	nop    DWORD PTR [rax+rax*1+0x0]
  403530:	lea    rcx,[rip+0x18add]        # 0x41c014
  403537:	mov    QWORD PTR [rip+0x2002a],rcx        # 0x423568
  40353e:	mov    BYTE PTR [r9],0x20
  403542:	mov    BYTE PTR [r8],0x20
  403546:	mov    BYTE PTR [rdx],0x20
  403549:	mov    BYTE PTR [rax],0x20
  40354c:	lea    rax,[rip+0x17649]        # 0x41ab9c
  403553:	mov    QWORD PTR [rip+0x1ffe6],rax        # 0x423540
  40355a:	mov    eax,0x8
  40355f:	ret    
  403560:	lea    rax,[rip+0x18adc]        # 0x41c043
  403567:	and    ecx,0x12
  40356a:	mov    QWORD PTR [rip+0x1ff8f],rax        # 0x423500
  403571:	lea    rax,[rip+0x18ac7]        # 0x41c03f
  403578:	cmp    ecx,0x2
  40357b:	mov    QWORD PTR [rip+0x1ff86],rax        # 0x423508
  403582:	lea    rax,[rip+0x18aae]        # 0x41c037
  403589:	mov    QWORD PTR [rip+0x1ff80],rax        # 0x423510
  403590:	lea    rax,[rip+0x18a90]        # 0x41c027
  403597:	mov    QWORD PTR [rip+0x1ff82],rax        # 0x423520
  40359e:	lea    rax,[rip+0x18a86]        # 0x41c02b
  4035a5:	mov    QWORD PTR [rip+0x1ff7c],rax        # 0x423528
  4035ac:	lea    rax,[rip+0x18a94]        # 0x41c047
  4035b3:	mov    QWORD PTR [rip+0x1ffb6],rax        # 0x423570
  4035ba:	lea    rax,[rip+0x18a62]        # 0x41c023
  4035c1:	mov    QWORD PTR [rip+0x1ff50],rax        # 0x423518
  4035c8:	lea    rax,[rip+0x18a48]        # 0x41c017
  4035cf:	mov    QWORD PTR [rip+0x1ff5a],rax        # 0x423530
  4035d6:	lea    rax,[rip+0x18a52]        # 0x41c02f
  4035dd:	mov    QWORD PTR [rip+0x1ff54],rax        # 0x423538
  4035e4:	lea    rax,[rip+0x18a50]        # 0x41c03b
  4035eb:	mov    QWORD PTR [rip+0x1ff4e],rax        # 0x423540
  4035f2:	lea    rax,[rip+0x18a3a]        # 0x41c033
  4035f9:	mov    QWORD PTR [rip+0x1ff48],rax        # 0x423548
  403600:	lea    rax,[rip+0x18a14]        # 0x41c01b
  403607:	mov    QWORD PTR [rip+0x1ff42],rax        # 0x423550
  40360e:	lea    rax,[rip+0x18a5f]        # 0x41c074
  403615:	mov    QWORD PTR [rip+0x1ff3c],rax        # 0x423558
  40361c:	lea    rax,[rip+0x18a5b]        # 0x41c07e
  403623:	mov    QWORD PTR [rip+0x1ff36],rax        # 0x423560
  40362a:	je     0x4036a5
  40362c:	jbe    0x403680
  40362e:	cmp    ecx,0x10
  403631:	je     0x403660
  403633:	cmp    ecx,0x12
  403636:	jne    0x4036a2
  403638:	mov    rax,QWORD PTR [rip+0x16689]        # 0x419cc8
  40363f:	mov    QWORD PTR [rdx],rax
  403642:	mov    rax,QWORD PTR [rip+0x16687]        # 0x419cd0
  403649:	mov    QWORD PTR [rip+0x1ff18],rax        # 0x423568
  403650:	mov    eax,0x13
  403655:	ret    
  403656:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403660:	mov    rax,QWORD PTR [rip+0x16659]        # 0x419cc0
  403667:	mov    QWORD PTR [rdx],rax
  40366a:	mov    rax,QWORD PTR [rip+0x1665f]        # 0x419cd0
  403671:	mov    QWORD PTR [rip+0x1fef0],rax        # 0x423568
  403678:	mov    eax,0x13
  40367d:	ret    
  40367e:	xchg   ax,ax
  403680:	test   ecx,ecx
  403682:	jne    0x4036a2
  403684:	mov    rax,QWORD PTR [rip+0x166e5]        # 0x419d70
  40368b:	mov    QWORD PTR [rdx],rax
  40368e:	lea    rax,[rip+0x18971]        # 0x41c006
  403695:	mov    QWORD PTR [rip+0x1fecc],rax        # 0x423568
  40369c:	mov    eax,0x18
  4036a1:	ret    
  4036a2:	xor    eax,eax
  4036a4:	ret    
  4036a5:	mov    rax,QWORD PTR [rip+0x166cc]        # 0x419d78
  4036ac:	mov    QWORD PTR [rdx],rax
  4036af:	lea    rax,[rip+0x18950]        # 0x41c006
  4036b6:	mov    QWORD PTR [rip+0x1feab],rax        # 0x423568
  4036bd:	mov    eax,0x18
  4036c2:	ret    
  4036c3:	nop    DWORD PTR [rax]
  4036c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036d0:	push   rsi
  4036d1:	push   rbx
  4036d2:	sub    rsp,0x38
  4036d6:	cmp    rcx,0xffffffffffffffff
  4036da:	mov    r9,rdx
  4036dd:	je     0x403713
  4036df:	movabs r10,0x7fffffffffffffff
  4036e9:	movsxd r8,r8d
  4036ec:	mov    rax,r10
  4036ef:	cqo    
  4036f1:	idiv   r8
  4036f4:	cmp    rax,r9
  4036f7:	jl     0x403740
  4036f9:	imul   r8,r9
  4036fd:	sub    r10,r8
  403700:	cmp    rcx,r10
  403703:	jg     0x403740
  403705:	lea    rsi,[rcx+r8*1]
  403709:	mov    rax,rsi
  40370c:	add    rsp,0x38
  403710:	pop    rbx
  403711:	pop    rsi
  403712:	ret    
  403713:	mov    QWORD PTR [rsp+0x28],rcx
  403718:	mov    rbx,QWORD PTR [rip+0x22001]        # 0x425720
  40371f:	call   rbx
  403721:	mov    eax,DWORD PTR [rax]
  403723:	mov    rcx,QWORD PTR [rsp+0x28]
  403728:	test   eax,eax
  40372a:	mov    rsi,rcx
  40372d:	jne    0x403709
  40372f:	call   rbx
  403731:	mov    DWORD PTR [rax],0x16
  403737:	jmp    0x403709
  403739:	nop    DWORD PTR [rax+0x0]
  403740:	call   QWORD PTR [rip+0x21fda]        # 0x425720
  403746:	mov    rsi,0xffffffffffffffff
  40374d:	mov    DWORD PTR [rax],0x22
  403753:	jmp    0x403709
  403755:	nop
  403756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403760:	push   r15
  403762:	push   r14
  403764:	push   r13
  403766:	push   r12
  403768:	push   rbp
  403769:	push   rdi
  40376a:	push   rsi
  40376b:	push   rbx
  40376c:	sub    rsp,0x48
  403770:	mov    rax,QWORD PTR [rdx]
  403773:	cmp    rcx,0xffffffffffffffff
  403777:	mov    QWORD PTR [rsp+0x38],rax
  40377c:	je     0x403809
  403782:	mov    r13d,r9d
  403785:	mov    r12,r8
  403788:	mov    rbp,rdx
  40378b:	mov    QWORD PTR [rsp+0x28],rcx
  403790:	mov    r15,QWORD PTR [rip+0x21f89]        # 0x425720
  403797:	call   r15
  40379a:	mov    rcx,QWORD PTR [rsp+0x38]
  40379f:	lea    rdx,[rsp+0x38]
  4037a4:	mov    r8d,0xa
  4037aa:	mov    DWORD PTR [rax],0x0
  4037b0:	call   0x418500
  4037b5:	mov    r14d,eax
  4037b8:	call   r15
  4037bb:	mov    eax,DWORD PTR [rax]
  4037bd:	test   eax,eax
  4037bf:	jne    0x403809
  4037c1:	mov    rdi,QWORD PTR [rsp+0x38]
  4037c6:	mov    rsi,QWORD PTR [rip+0x22063]        # 0x425830
  4037cd:	jmp    0x4037d5
  4037cf:	nop
  4037d0:	mov    QWORD PTR [rsp+0x38],rdi
  4037d5:	movzx  ecx,BYTE PTR [rdi]
  4037d8:	mov    rbx,rdi
  4037db:	add    rdi,0x1
  4037df:	call   rsi
  4037e1:	test   eax,eax
  4037e3:	jne    0x4037d0
  4037e5:	cmp    r12,rbx
  4037e8:	jne    0x403800
  4037ea:	mov    rcx,QWORD PTR [rsp+0x28]
  4037ef:	mov    QWORD PTR [rbp+0x0],r12
  4037f3:	mov    r8d,r13d
  4037f6:	mov    rdx,r14
  4037f9:	call   0x4036d0
  4037fe:	jmp    0x403810
  403800:	call   r15
  403803:	mov    DWORD PTR [rax],0x16
  403809:	mov    rax,0xffffffffffffffff
  403810:	add    rsp,0x48
  403814:	pop    rbx
  403815:	pop    rsi
  403816:	pop    rdi
  403817:	pop    rbp
  403818:	pop    r12
  40381a:	pop    r13
  40381c:	pop    r14
  40381e:	pop    r15
  403820:	ret    
  403821:	nop    DWORD PTR [rax+rax*1+0x0]
  403826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403830:	push   rbp
  403831:	push   rdi
  403832:	push   rsi
  403833:	push   rbx
  403834:	sub    rsp,0x38
  403838:	mov    edx,0x3a
  40383d:	mov    rbx,rcx
  403840:	call   0x418560
  403845:	test   rax,rax
  403848:	je     0x4038e0
  40384e:	lea    rsi,[rsp+0x20]
  403853:	mov    r8,rax
  403856:	xor    ecx,ecx
  403858:	mov    r9d,0xe10
  40385e:	mov    QWORD PTR [rsp+0x20],rbx
  403863:	mov    rdx,rsi
  403866:	call   0x403760
  40386b:	mov    rbx,rax
  40386e:	mov    rax,QWORD PTR [rsp+0x20]
  403873:	mov    edx,0x3a
  403878:	lea    rcx,[rax+0x1]
  40387c:	mov    QWORD PTR [rsp+0x20],rcx
  403881:	call   0x418560
  403886:	test   rax,rax
  403889:	mov    r8,rax
  40388c:	je     0x4039cf
  403892:	mov    r9d,0x3c
  403898:	mov    rdx,rsi
  40389b:	mov    rcx,rbx
  40389e:	call   0x403760
  4038a3:	mov    rdi,rax
  4038a6:	mov    rax,QWORD PTR [rsp+0x20]
  4038ab:	lea    rbx,[rax+0x1]
  4038af:	mov    rcx,rbx
  4038b2:	mov    QWORD PTR [rsp+0x20],rbx
  4038b7:	call   0x418538
  4038bc:	lea    r8,[rbx+rax*1]
  4038c0:	mov    r9d,0x1
  4038c6:	mov    rdx,rsi
  4038c9:	mov    rcx,rdi
  4038cc:	call   0x403760
  4038d1:	mov    rbp,rax
  4038d4:	mov    rax,rbp
  4038d7:	add    rsp,0x38
  4038db:	pop    rbx
  4038dc:	pop    rsi
  4038dd:	pop    rdi
  4038de:	pop    rbp
  4038df:	ret    
  4038e0:	lea    rdx,[rip+0x172bc]        # 0x41aba3
  4038e7:	mov    rcx,rbx
  4038ea:	call   0x418520
  4038ef:	test   rax,rax
  4038f2:	je     0x4039f0
  4038f8:	mov    edx,0x48
  4038fd:	mov    rcx,rbx
  403900:	mov    QWORD PTR [rsp+0x28],rbx
  403905:	xor    ebp,ebp
  403907:	call   0x418560
  40390c:	test   rax,rax
  40390f:	je     0x403937
  403911:	lea    rdx,[rsp+0x28]
  403916:	mov    r9d,0xe10
  40391c:	mov    r8,rax
  40391f:	xor    ecx,ecx
  403921:	call   0x403760
  403926:	mov    rbp,rax
  403929:	mov    rax,QWORD PTR [rsp+0x28]
  40392e:	lea    rbx,[rax+0x1]
  403932:	mov    QWORD PTR [rsp+0x28],rbx
  403937:	mov    edx,0x4d
  40393c:	mov    rcx,rbx
  40393f:	call   0x418560
  403944:	test   rax,rax
  403947:	je     0x403970
  403949:	lea    rdx,[rsp+0x28]
  40394e:	mov    rcx,rbp
  403951:	mov    r9d,0x3c
  403957:	mov    r8,rax
  40395a:	call   0x403760
  40395f:	mov    rbp,rax
  403962:	mov    rax,QWORD PTR [rsp+0x28]
  403967:	lea    rbx,[rax+0x1]
  40396b:	mov    QWORD PTR [rsp+0x28],rbx
  403970:	mov    edx,0x53
  403975:	mov    rcx,rbx
  403978:	call   0x418560
  40397d:	test   rax,rax
  403980:	je     0x4039a9
  403982:	lea    rdx,[rsp+0x28]
  403987:	mov    rcx,rbp
  40398a:	mov    r9d,0x1
  403990:	mov    r8,rax
  403993:	call   0x403760
  403998:	mov    rbp,rax
  40399b:	mov    rax,QWORD PTR [rsp+0x28]
  4039a0:	lea    rbx,[rax+0x1]
  4039a4:	mov    QWORD PTR [rsp+0x28],rbx
  4039a9:	mov    rdi,QWORD PTR [rip+0x21e80]        # 0x425830
  4039b0:	jmp    0x4039b7
  4039b2:	mov    QWORD PTR [rsp+0x28],rbx
  4039b7:	movzx  ecx,BYTE PTR [rbx]
  4039ba:	add    rbx,0x1
  4039be:	mov    esi,ecx
  4039c0:	call   rdi
  4039c2:	test   eax,eax
  4039c4:	jne    0x4039b2
  4039c6:	test   sil,sil
  4039c9:	je     0x4038d4
  4039cf:	call   QWORD PTR [rip+0x21d4b]        # 0x425720
  4039d5:	mov    rbp,0xffffffffffffffff
  4039dc:	mov    DWORD PTR [rax],0x16
  4039e2:	jmp    0x4038d4
  4039e7:	nop    WORD PTR [rax+rax*1+0x0]
  4039f0:	mov    rcx,rbx
  4039f3:	call   0x418538
  4039f8:	cmp    rax,0x6
  4039fc:	jne    0x4039cf
  4039fe:	movzx  eax,WORD PTR [rbx]
  403a01:	lea    rbp,[rsp+0x22]
  403a06:	lea    rdi,[rsp+0x28]
  403a0b:	lea    rsi,[rsp+0x20]
  403a10:	mov    r9d,0xe10
  403a16:	xor    ecx,ecx
  403a18:	mov    r8,rbp
  403a1b:	mov    rdx,rdi
  403a1e:	mov    BYTE PTR [rsp+0x22],0x0
  403a23:	mov    QWORD PTR [rsp+0x28],rsi
  403a28:	mov    WORD PTR [rsp+0x20],ax
  403a2d:	call   0x403760
  403a32:	movzx  edx,WORD PTR [rbx+0x2]
  403a36:	mov    r8,rbp
  403a39:	mov    r9d,0x3c
  403a3f:	mov    rcx,rax
  403a42:	mov    BYTE PTR [rsp+0x22],0x0
  403a47:	mov    QWORD PTR [rsp+0x28],rsi
  403a4c:	mov    WORD PTR [rsp+0x20],dx
  403a51:	mov    rdx,rdi
  403a54:	call   0x403760
  403a59:	movzx  edx,WORD PTR [rbx+0x4]
  403a5d:	mov    r8,rbp
  403a60:	mov    r9d,0x1
  403a66:	mov    rcx,rax
  403a69:	mov    BYTE PTR [rsp+0x22],0x0
  403a6e:	mov    QWORD PTR [rsp+0x28],rsi
  403a73:	mov    WORD PTR [rsp+0x20],dx
  403a78:	mov    rdx,rdi
  403a7b:	call   0x403760
  403a80:	mov    rbp,rax
  403a83:	jmp    0x4038d4
  403a88:	nop    DWORD PTR [rax+rax*1+0x0]
  403a90:	push   r13
  403a92:	push   r12
  403a94:	push   rbp
  403a95:	push   rdi
  403a96:	push   rsi
  403a97:	push   rbx
  403a98:	sub    rsp,0x38
  403a9c:	mov    r12,QWORD PTR [rip+0x161bd]        # 0x419c60
  403aa3:	mov    r13,QWORD PTR [rcx+0x28]
  403aa7:	lea    rsi,[rip+0x19ee1]        # 0x41d98f
  403aae:	cmp    WORD PTR [rdx+0x8],0x8000
  403ab4:	mov    rdi,rdx
  403ab7:	mov    rbx,rcx
  403aba:	cmovne rsi,QWORD PTR [rip+0x16066]        # 0x419b28
  403ac2:	mov    rbp,QWORD PTR [rip+0x21c0f]        # 0x4256d8
  403ac9:	call   rbp
  403acb:	lea    rcx,[rax+0x60]
  403acf:	mov    rdx,r12
  403ad2:	mov    r8,r13
  403ad5:	call   0x402710
  403ada:	movzx  r12d,WORD PTR [rdi+0xc]
  403adf:	cmp    r12w,0x1
  403ae4:	jbe    0x403b30
  403ae6:	mov    r13,QWORD PTR [rdi+0x50]
  403aea:	mov    rdi,QWORD PTR [rip+0x16007]        # 0x419af8
  403af1:	call   rbp
  403af3:	lea    rcx,[rax+0x60]
  403af7:	mov    QWORD PTR [rsp+0x20],rsi
  403afc:	movzx  r8d,r12w
  403b00:	mov    r9,r13
  403b03:	mov    rdx,rdi
  403b06:	call   0x402710
  403b0b:	mov    edx,0x1
  403b10:	mov    rcx,rbx
  403b13:	call   QWORD PTR [rbx+0x98]
  403b19:	add    rsp,0x38
  403b1d:	pop    rbx
  403b1e:	pop    rsi
  403b1f:	pop    rdi
  403b20:	pop    rbp
  403b21:	pop    r12
  403b23:	pop    r13
  403b25:	ret    
  403b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b30:	mov    r12,QWORD PTR [rdi+0x50]
  403b34:	mov    rdi,QWORD PTR [rip+0x160b5]        # 0x419bf0
  403b3b:	call   rbp
  403b3d:	lea    rcx,[rax+0x60]
  403b41:	mov    r9,rsi
  403b44:	mov    r8,r12
  403b47:	mov    rdx,rdi
  403b4a:	call   0x402710
  403b4f:	jmp    0x403b0b
  403b51:	nop    DWORD PTR [rax+rax*1+0x0]
  403b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b60:	push   rbp
  403b61:	push   rdi
  403b62:	push   rsi
  403b63:	push   rbx
  403b64:	sub    rsp,0x48
  403b68:	mov    rbx,QWORD PTR [rdx]
  403b6b:	mov    rsi,rcx
  403b6e:	mov    r8d,DWORD PTR [rbx+0x10]
  403b72:	mov    rdi,QWORD PTR [rbx+0x38]
  403b76:	test   r8b,0x40
  403b7a:	jne    0x403c80
  403b80:	mov    rcx,QWORD PTR [rdx+0x8]
  403b84:	mov    QWORD PTR [rbx+0x18],rcx
  403b88:	test   BYTE PTR [rsi+0x12],0x8
  403b8c:	je     0x403ba0
  403b8e:	test   r8d,0x100
  403b95:	mov    ebp,0x1
  403b9a:	jne    0x403c40
  403ba0:	movzx  eax,WORD PTR [rbx+0x8]
  403ba4:	cmp    ax,0x8000
  403ba8:	je     0x403ca0
  403bae:	lea    r10,[rax+rax*2]
  403bb2:	mov    r9,QWORD PTR [rsi+0x78]
  403bb6:	and    r8d,0x4
  403bba:	lea    rax,[rax+r10*4]
  403bbe:	lea    r10,[r9+rax*8]
  403bc2:	jne    0x403c50
  403bc8:	mov    eax,0xffff8000
  403bcd:	mov    WORD PTR [r10+0x4],ax
  403bd2:	movzx  eax,WORD PTR [rbx]
  403bd5:	cmp    ax,0x8000
  403bd9:	je     0x403c5a
  403bdb:	movzx  r8d,WORD PTR [rbx+0x2]
  403be0:	mov    WORD PTR [r10+0x4],ax
  403be5:	mov    eax,DWORD PTR [rdx+0x10]
  403be8:	or     eax,0x10
  403beb:	mov    WORD PTR [r10+0x6],r8w
  403bf0:	mov    DWORD PTR [rdx+0x10],eax
  403bf3:	mov    r8d,DWORD PTR [r10+0x10]
  403bf7:	mov    QWORD PTR [r10+0x18],rcx
  403bfb:	and    eax,0xf00000ff
  403c00:	and    r8d,0xfffff00
  403c07:	or     r8d,eax
  403c0a:	mov    DWORD PTR [r10+0x10],r8d
  403c0e:	and    r8d,0x4
  403c12:	je     0x403c60
  403c14:	movzx  eax,WORD PTR [r10+0xe]
  403c19:	add    eax,0x1
  403c1c:	cmp    ax,WORD PTR [r10+0xc]
  403c21:	mov    WORD PTR [r10+0xe],ax
  403c26:	jbe    0x403c60
  403c28:	test   BYTE PTR [rsi+0x10],0x4
  403c2c:	mov    ebp,0xffffffff
  403c31:	je     0x403c40
  403c33:	mov    rdx,r10
  403c36:	mov    rcx,rsi
  403c39:	call   0x403a90
  403c3e:	xchg   ax,ax
  403c40:	mov    eax,ebp
  403c42:	add    rsp,0x48
  403c46:	pop    rbx
  403c47:	pop    rsi
  403c48:	pop    rdi
  403c49:	pop    rbp
  403c4a:	ret    
  403c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c50:	movzx  eax,WORD PTR [r10+0x4]
  403c55:	cmp    ax,WORD PTR [rbx]
  403c58:	jne    0x403cc0
  403c5a:	mov    eax,DWORD PTR [rdx+0x10]
  403c5d:	jmp    0x403bf3
  403c5f:	nop
  403c60:	xor    ebp,ebp
  403c62:	test   rdi,rdi
  403c65:	je     0x403c40
  403c67:	mov    rdx,r10
  403c6a:	mov    rcx,rsi
  403c6d:	call   rdi
  403c6f:	mov    eax,ebp
  403c71:	add    rsp,0x48
  403c75:	pop    rbx
  403c76:	pop    rsi
  403c77:	pop    rdi
  403c78:	pop    rbp
  403c79:	ret    
  403c7a:	nop    WORD PTR [rax+rax*1+0x0]
  403c80:	mov    rcx,QWORD PTR [rbx+0x18]
  403c84:	mov    QWORD PTR [rsp+0x38],rdx
  403c89:	call   0x4185e0
  403c8e:	mov    r8d,DWORD PTR [rbx+0x10]
  403c92:	mov    rdx,QWORD PTR [rsp+0x38]
  403c97:	jmp    0x403b80
  403c9c:	nop    DWORD PTR [rax+0x0]
  403ca0:	movzx  eax,WORD PTR [rbx+0x2]
  403ca4:	mov    r10,rbx
  403ca7:	mov    WORD PTR [rbx+0x6],ax
  403cab:	movzx  eax,WORD PTR [rbx]
  403cae:	mov    WORD PTR [rbx+0x4],ax
  403cb2:	mov    eax,DWORD PTR [rdx+0x10]
  403cb5:	jmp    0x403bfb
  403cba:	nop    WORD PTR [rax+rax*1+0x0]
  403cc0:	lea    rdx,[rax+rax*2]
  403cc4:	mov    rdi,QWORD PTR [rbx+0x50]
  403cc8:	mov    rsi,QWORD PTR [r10+0x50]
  403ccc:	mov    rbx,QWORD PTR [rip+0x15e95]        # 0x419b68
  403cd3:	lea    rax,[rax+rdx*4]
  403cd7:	mov    rbp,QWORD PTR [r9+rax*8+0x50]
  403cdc:	call   QWORD PTR [rip+0x219f6]        # 0x4256d8
  403ce2:	lea    rcx,[rax+0x60]
  403ce6:	mov    r9,rdi
  403ce9:	mov    r8,rsi
  403cec:	mov    QWORD PTR [rsp+0x20],rbp
  403cf1:	mov    rdx,rbx
  403cf4:	mov    ebp,0xffffffff
  403cf9:	call   0x402710
  403cfe:	jmp    0x403c40
  403d03:	nop    DWORD PTR [rax]
  403d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d10:	push   r13
  403d12:	push   r12
  403d14:	push   rbp
  403d15:	push   rdi
  403d16:	push   rsi
  403d17:	push   rbx
  403d18:	sub    rsp,0x38
  403d1c:	mov    rsi,rcx
  403d1f:	mov    rcx,QWORD PTR [rcx+0x78]
  403d23:	mov    eax,DWORD PTR [rsi+0xb0]
  403d29:	mov    rbx,rcx
  403d2c:	movzx  r10d,WORD PTR [rbx+0x2]
  403d31:	cmp    r10d,edx
  403d34:	je     0x403d80
  403d36:	sub    eax,0x1
  403d39:	add    rbx,0x68
  403d3d:	test   eax,eax
  403d3f:	jg     0x403d2c
  403d41:	movzx  eax,dl
  403d44:	cmp    eax,0x7f
  403d47:	ja     0x403d60
  403d49:	lea    r10,[rip+0x1ae30]        # 0x41eb80
  403d50:	test   DWORD PTR [r10+rax*4],0x30000
  403d58:	jne    0x403e19
  403d5e:	xchg   ax,ax
  403d60:	test   BYTE PTR [rsi+0x10],0x4
  403d64:	jne    0x403e4c
  403d6a:	mov    eax,0xffffffff
  403d6f:	add    rsp,0x38
  403d73:	pop    rbx
  403d74:	pop    rsi
  403d75:	pop    rdi
  403d76:	pop    rbp
  403d77:	pop    r12
  403d79:	pop    r13
  403d7b:	ret    
  403d7c:	nop    DWORD PTR [rax+0x0]
  403d80:	mov    eax,DWORD PTR [rbx+0x10]
  403d83:	test   eax,0x280000
  403d88:	je     0x403e00
  403d8a:	cmp    eax,0x80100
  403d8f:	jne    0x403d60
  403d91:	mov    r13,QWORD PTR [rbx+0x50]
  403d95:	test   r13,r13
  403d98:	je     0x403d60
  403d9a:	test   BYTE PTR [rsi+0x10],0x4
  403d9e:	je     0x403d6a
  403da0:	mov    r12,QWORD PTR [rsi+0x20]
  403da4:	mov    rbp,QWORD PTR [rip+0x15d75]        # 0x419b20
  403dab:	mov    rdi,QWORD PTR [rip+0x21926]        # 0x4256d8
  403db2:	call   rdi
  403db4:	lea    rcx,[rax+0x60]
  403db8:	mov    r9,r13
  403dbb:	mov    r8,r12
  403dbe:	mov    rdx,rbp
  403dc1:	call   0x402710
  403dc6:	mov    rbx,QWORD PTR [rbx+0x40]
  403dca:	test   rbx,rbx
  403dcd:	je     0x403de4
  403dcf:	call   rdi
  403dd1:	lea    rdx,[rip+0x18401]        # 0x41c1d9
  403dd8:	lea    rcx,[rax+0x60]
  403ddc:	mov    r8,rbx
  403ddf:	call   0x402710
  403de4:	call   rdi
  403de6:	lea    rdx,[rax+0x60]
  403dea:	mov    ecx,0xa
  403def:	call   0x4185f8
  403df4:	jmp    0x403e77
  403df9:	nop    DWORD PTR [rax+0x0]
  403e00:	xor    eax,eax
  403e02:	mov    QWORD PTR [r8],rbx
  403e05:	mov    DWORD PTR [r9],0x1
  403e0c:	add    rsp,0x38
  403e10:	pop    rbx
  403e11:	pop    rsi
  403e12:	pop    rdi
  403e13:	pop    rbp
  403e14:	pop    r12
  403e16:	pop    r13
  403e18:	ret    
  403e19:	movzx  eax,WORD PTR [rsi+0xac]
  403e20:	cmp    ax,0x8000
  403e24:	je     0x403d60
  403e2a:	lea    rdx,[rax+rax*2]
  403e2e:	lea    rax,[rax+rdx*4]
  403e32:	lea    rax,[rcx+rax*8]
  403e36:	mov    QWORD PTR [r8],rax
  403e39:	xor    eax,eax
  403e3b:	sub    QWORD PTR [rsi+0x18],0x1
  403e40:	mov    DWORD PTR [r9],0x1
  403e47:	jmp    0x403d6f
  403e4c:	mov    DWORD PTR [rsp+0x2c],edx
  403e50:	mov    rdi,QWORD PTR [rsi+0x20]
  403e54:	mov    rbx,QWORD PTR [rip+0x15cd5]        # 0x419b30
  403e5b:	call   QWORD PTR [rip+0x21877]        # 0x4256d8
  403e61:	mov    edx,DWORD PTR [rsp+0x2c]
  403e65:	lea    rcx,[rax+0x60]
  403e69:	mov    r8,rdi
  403e6c:	mov    r9d,edx
  403e6f:	mov    rdx,rbx
  403e72:	call   0x402710
  403e77:	mov    rcx,rsi
  403e7a:	mov    edx,0x1
  403e7f:	call   QWORD PTR [rsi+0x98]
  403e85:	mov    ecx,0x1
  403e8a:	call   0x4186b8
  403e8f:	nop
  403e90:	push   rdi
  403e91:	push   rsi
  403e92:	push   rbx
  403e93:	sub    rsp,0x20
  403e97:	test   rcx,rcx
  403e9a:	je     0x403ea1
  403e9c:	cmp    BYTE PTR [rcx],0x0
  403e9f:	jne    0x403ed0
  403ea1:	call   QWORD PTR [rip+0x21831]        # 0x4256d8
  403ea7:	lea    rcx,[rip+0x181e7]        # 0x41c095
  403eae:	lea    r9,[rax+0x30]
  403eb2:	mov    r8d,0x2
  403eb8:	mov    edx,0x1
  403ebd:	add    rsp,0x20
  403ec1:	pop    rbx
  403ec2:	pop    rsi
  403ec3:	pop    rdi
  403ec4:	jmp    0x4185c8
  403ec9:	nop    DWORD PTR [rax+0x0]
  403ed0:	call   0x402960
  403ed5:	cmp    BYTE PTR [rax],0x0
  403ed8:	mov    rbx,rax
  403edb:	jne    0x403ee5
  403edd:	add    rsp,0x20
  403ee1:	pop    rbx
  403ee2:	pop    rsi
  403ee3:	pop    rdi
  403ee4:	ret    
  403ee5:	mov    rdi,QWORD PTR [rip+0x217ec]        # 0x4256d8
  403eec:	jmp    0x403f2a
  403eee:	xchg   ax,ax
  403ef0:	call   rdi
  403ef2:	mov    rdx,rsi
  403ef5:	lea    r9,[rax+0x30]
  403ef9:	mov    r8d,0x1
  403eff:	sub    rdx,rbx
  403f02:	mov    rcx,rbx
  403f05:	call   0x4185c8
  403f0a:	call   rdi
  403f0c:	lea    rdx,[rax+0x30]
  403f10:	mov    ecx,0x27
  403f15:	call   0x4185f8
  403f1a:	mov    rcx,rsi
  403f1d:	call   0x402960
  403f22:	cmp    BYTE PTR [rax],0x0
  403f25:	mov    rbx,rax
  403f28:	je     0x403edd
  403f2a:	call   rdi
  403f2c:	lea    rdx,[rax+0x30]
  403f30:	mov    ecx,0x27
  403f35:	call   0x4185f8
  403f3a:	mov    edx,0x27
  403f3f:	mov    rcx,rbx
  403f42:	call   0x418560
  403f47:	test   rax,rax
  403f4a:	mov    rsi,rax
  403f4d:	jne    0x403ef0
  403f4f:	call   rdi
  403f51:	lea    rdx,[rax+0x30]
  403f55:	mov    rcx,rbx
  403f58:	call   0x4185f0
  403f5d:	call   rdi
  403f5f:	lea    rdx,[rax+0x30]
  403f63:	mov    ecx,0x27
  403f68:	add    rsp,0x20
  403f6c:	pop    rbx
  403f6d:	pop    rsi
  403f6e:	pop    rdi
  403f6f:	jmp    0x4185f8
  403f74:	xchg   ax,ax
  403f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f80:	push   rsi
  403f81:	push   rbx
  403f82:	sub    rsp,0x28
  403f86:	mov    eax,DWORD PTR [rcx]
  403f88:	test   al,0x2
  403f8a:	je     0x404001
  403f8c:	mov    rbx,rcx
  403f8f:	movzx  ecx,WORD PTR [rdx]
  403f92:	mov    rsi,r8
  403f95:	movzx  edx,cl
  403f98:	cmp    dl,0x7f
  403f9b:	ja     0x403fe0
  403f9d:	lea    r9,[rip+0x1abdc]        # 0x41eb80
  403fa4:	test   BYTE PTR [r9+rdx*4+0x1],0x40
  403faa:	je     0x403fe0
  403fac:	movzx  r8d,cx
  403fb0:	mov    rcx,QWORD PTR [rip+0x1f491]        # 0x423448
  403fb7:	lea    rdx,[rip+0x16bec]        # 0x41abaa
  403fbe:	call   0x402710
  403fc3:	mov    eax,DWORD PTR [rbx]
  403fc5:	and    eax,0x1001
  403fca:	cmp    eax,0x1001
  403fcf:	je     0x404033
  403fd1:	add    rsp,0x28
  403fd5:	pop    rbx
  403fd6:	pop    rsi
  403fd7:	ret    
  403fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  403fe0:	and    eax,0x1001
  403fe5:	cmp    eax,0x1001
  403fea:	je     0x404020
  403fec:	mov    rdx,QWORD PTR [rip+0x1f455]        # 0x423448
  403ff3:	mov    rcx,QWORD PTR [rsi]
  403ff6:	add    rsp,0x28
  403ffa:	pop    rbx
  403ffb:	pop    rsi
  403ffc:	jmp    0x4185f0
  404001:	mov    rdx,QWORD PTR [rip+0x1f440]        # 0x423448
  404008:	mov    rcx,QWORD PTR [r9]
  40400b:	add    rsp,0x28
  40400f:	pop    rbx
  404010:	pop    rsi
  404011:	jmp    0x4185f0
  404016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404020:	mov    rdx,QWORD PTR [rip+0x1f421]        # 0x423448
  404027:	mov    ecx,0x20
  40402c:	call   0x4185f8
  404031:	jmp    0x403fec
  404033:	mov    r9,QWORD PTR [rip+0x1f40e]        # 0x423448
  40403a:	lea    rcx,[rip+0x16b66]        # 0x41aba7
  404041:	mov    r8d,0x2
  404047:	mov    edx,0x1
  40404c:	add    rsp,0x28
  404050:	pop    rbx
  404051:	pop    rsi
  404052:	jmp    0x4185c8
  404057:	nop    WORD PTR [rax+rax*1+0x0]
  404060:	push   rdi
  404061:	push   rsi
  404062:	push   rbx
  404063:	sub    rsp,0x20
  404067:	lea    rax,[rip+0x1aa52]        # 0x41eac0
  40406e:	mov    esi,ecx
  404070:	mov    ecx,0x100
  404075:	mov    ebx,DWORD PTR [rax+rsi*4]
  404078:	call   0x4185a8
  40407d:	test   rax,rax
  404080:	mov    r8,rax
  404083:	je     0x4040cb
  404085:	mov    ecx,0x20
  40408a:	xor    eax,eax
  40408c:	mov    rdi,r8
  40408f:	rep stos QWORD PTR es:[rdi],rax
  404092:	lea    rcx,[rip+0x1aaeb]        # 0x41eb84
  404099:	xor    edx,edx
  40409b:	nop    DWORD PTR [rax+rax*1+0x0]
  4040a0:	test   DWORD PTR [rcx+rdx*4],ebx
  4040a3:	je     0x4040ab
  4040a5:	mov    BYTE PTR [r8+rdx*1+0x1],0x1
  4040ab:	add    rdx,0x1
  4040af:	cmp    rdx,0x7f
  4040b3:	jne    0x4040a0
  4040b5:	lea    rax,[rip+0x1f4c4]        # 0x423580
  4040bc:	mov    QWORD PTR [rax+rsi*8],r8
  4040c0:	mov    rax,r8
  4040c3:	add    rsp,0x20
  4040c7:	pop    rbx
  4040c8:	pop    rsi
  4040c9:	pop    rdi
  4040ca:	ret    
  4040cb:	call   QWORD PTR [rip+0x21607]        # 0x4256d8
  4040d1:	lea    rcx,[rip+0x16ae0]        # 0x41abb8
  4040d8:	lea    r9,[rax+0x60]
  4040dc:	mov    r8d,0x23
  4040e2:	mov    edx,0x1
  4040e7:	call   0x4185c8
  4040ec:	mov    ecx,0x1
  4040f1:	call   0x418630
  4040f6:	nop
  4040f7:	nop    WORD PTR [rax+rax*1+0x0]
  404100:	push   rdi
  404101:	push   rsi
  404102:	push   rbx
  404103:	sub    rsp,0x20
  404107:	mov    r8,QWORD PTR [rdx]
  40410a:	mov    eax,DWORD PTR [r8+0x10]
  40410e:	and    eax,0xfffff00
  404113:	or     eax,DWORD PTR [rdx+0x10]
  404116:	test   al,0x20
  404118:	mov    DWORD PTR [rdx+0x10],eax
  40411b:	jne    0x404180
  40411d:	test   ah,0xf0
  404120:	je     0x404180
  404122:	test   eax,0x10000
  404127:	mov    eax,DWORD PTR [rdx+0x14]
  40412a:	jne    0x4041d4
  404130:	cmp    eax,0x1
  404133:	je     0x4041b2
  404135:	cmp    eax,0x2
  404138:	jne    0x404145
  40413a:	cmp    QWORD PTR [rdx+0x8],0x0
  40413f:	je     0x404294
  404145:	mov    eax,DWORD PTR [rcx+0x14]
  404148:	cmp    eax,DWORD PTR [rcx+0x4]
  40414b:	jbe    0x404191
  40414d:	mov    rdi,QWORD PTR [r8+0x50]
  404151:	mov    rsi,QWORD PTR [rcx+0x20]
  404155:	mov    rbx,QWORD PTR [rip+0x15a04]        # 0x419b60
  40415c:	nop    DWORD PTR [rax+0x0]
  404160:	call   QWORD PTR [rip+0x21572]        # 0x4256d8
  404166:	lea    rcx,[rax+0x60]
  40416a:	mov    r9,rdi
  40416d:	mov    r8,rsi
  404170:	mov    rdx,rbx
  404173:	call   0x402710
  404178:	mov    eax,0xffffffff
  40417d:	jmp    0x40419b
  40417f:	nop
  404180:	cmp    DWORD PTR [rdx+0x14],0x1
  404184:	je     0x4041a3
  404186:	cmp    QWORD PTR [rdx+0x8],0x0
  40418b:	jne    0x404280
  404191:	mov    QWORD PTR [rcx+0x18],0x0
  404199:	xor    eax,eax
  40419b:	add    rsp,0x20
  40419f:	pop    rbx
  4041a0:	pop    rsi
  4041a1:	pop    rdi
  4041a2:	ret    
  4041a3:	add    QWORD PTR [rcx+0x18],0x1
  4041a8:	xor    eax,eax
  4041aa:	add    rsp,0x20
  4041ae:	pop    rbx
  4041af:	pop    rsi
  4041b0:	pop    rdi
  4041b1:	ret    
  4041b2:	mov    rax,QWORD PTR [rcx+0x18]
  4041b6:	lea    r9,[rax+0x1]
  4041ba:	mov    QWORD PTR [rcx+0x18],r9
  4041be:	cmp    BYTE PTR [rax+0x1],0x0
  4041c2:	je     0x404260
  4041c8:	mov    eax,DWORD PTR [rcx+0x14]
  4041cb:	mov    QWORD PTR [rdx+0x8],r9
  4041cf:	jmp    0x404148
  4041d4:	cmp    eax,0x1
  4041d7:	je     0x404210
  4041d9:	cmp    eax,0x2
  4041dc:	jne    0x404250
  4041de:	cmp    QWORD PTR [rdx+0x8],0x0
  4041e3:	jne    0x404191
  4041e5:	test   BYTE PTR [rcx+0x10],0x3
  4041e9:	je     0x404191
  4041eb:	mov    r9d,DWORD PTR [rcx+0x14]
  4041ef:	mov    r8,QWORD PTR [rcx+0x8]
  4041f3:	mov    r8,QWORD PTR [r8+r9*8]
  4041f7:	mov    rax,r9
  4041fa:	test   r8,r8
  4041fd:	je     0x404191
  4041ff:	cmp    BYTE PTR [r8],0x2d
  404203:	jne    0x40423c
  404205:	jmp    0x404191
  404207:	nop    WORD PTR [rax+rax*1+0x0]
  404210:	mov    rax,QWORD PTR [rcx+0x18]
  404214:	lea    r8,[rax+0x1]
  404218:	mov    QWORD PTR [rcx+0x18],r8
  40421c:	cmp    BYTE PTR [rax+0x1],0x0
  404220:	jne    0x404242
  404222:	mov    r9d,DWORD PTR [rcx+0x14]
  404226:	mov    r8,QWORD PTR [rcx+0x8]
  40422a:	mov    r8,QWORD PTR [r8+r9*8]
  40422e:	mov    rax,r9
  404231:	test   r8,r8
  404234:	je     0x4042b0
  404236:	cmp    BYTE PTR [r8],0x2d
  40423a:	je     0x4042b0
  40423c:	add    eax,0x1
  40423f:	mov    DWORD PTR [rcx+0x14],eax
  404242:	mov    QWORD PTR [rdx+0x8],r8
  404246:	jmp    0x404191
  40424b:	nop    DWORD PTR [rax+rax*1+0x0]
  404250:	mov    rcx,QWORD PTR [rip+0x15871]        # 0x419ac8
  404257:	call   0x402b80
  40425c:	nop    DWORD PTR [rax+0x0]
  404260:	mov    r9d,DWORD PTR [rcx+0x14]
  404264:	mov    r10,QWORD PTR [rcx+0x8]
  404268:	lea    eax,[r9+0x1]
  40426c:	mov    r9,QWORD PTR [r10+r9*8]
  404270:	mov    DWORD PTR [rcx+0x14],eax
  404273:	mov    QWORD PTR [rcx+0x18],r9
  404277:	jmp    0x4041cb
  40427c:	nop    DWORD PTR [rax+0x0]
  404280:	mov    rdi,QWORD PTR [r8+0x50]
  404284:	mov    rsi,QWORD PTR [rcx+0x20]
  404288:	mov    rbx,QWORD PTR [rip+0x158e9]        # 0x419b78
  40428f:	jmp    0x404160
  404294:	mov    r9d,DWORD PTR [rcx+0x14]
  404298:	mov    r10,QWORD PTR [rcx+0x8]
  40429c:	lea    eax,[r9+0x1]
  4042a0:	mov    r9,QWORD PTR [r10+r9*8]
  4042a4:	mov    DWORD PTR [rcx+0x14],eax
  4042a7:	jmp    0x4041cb
  4042ac:	nop    DWORD PTR [rax+0x0]
  4042b0:	mov    QWORD PTR [rdx+0x8],0x0
  4042b8:	jmp    0x404191
  4042bd:	nop    DWORD PTR [rax]
  4042c0:	push   rdi
  4042c1:	push   rbx
  4042c2:	sub    rsp,0x28
  4042c6:	mov    rdi,rcx
  4042c9:	call   0x4184a8
  4042ce:	test   rax,rax
  4042d1:	je     0x4042da
  4042d3:	add    rsp,0x28
  4042d7:	pop    rbx
  4042d8:	pop    rdi
  4042d9:	ret    
  4042da:	or     rcx,0xffffffffffffffff
  4042de:	mov    rbx,QWORD PTR [rip+0x15783]        # 0x419a68
  4042e5:	repnz scas al,BYTE PTR es:[rdi]
  4042e7:	mov    rax,rcx
  4042ea:	not    rax
  4042ed:	lea    rdi,[rax-0x1]
  4042f1:	call   QWORD PTR [rip+0x213e1]        # 0x4256d8
  4042f7:	lea    rcx,[rax+0x60]
  4042fb:	mov    r8d,edi
  4042fe:	mov    rdx,rbx
  404301:	call   0x402710
  404306:	mov    ecx,0x1
  40430b:	call   0x402b50
  404310:	nop
  404311:	nop    DWORD PTR [rax+rax*1+0x0]
  404316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404320:	push   r12
  404322:	push   rbp
  404323:	push   rdi
  404324:	push   rsi
  404325:	push   rbx
  404326:	sub    rsp,0x20
  40432a:	mov    eax,DWORD PTR [rcx+0xb0]
  404330:	mov    rbp,QWORD PTR [rcx+0x90]
  404337:	mov    rbx,QWORD PTR [rcx+0x78]
  40433b:	test   eax,eax
  40433d:	jle    0x4043d4
  404343:	sub    eax,0x1
  404346:	mov    rsi,rcx
  404349:	add    rax,0x1
  40434d:	lea    rdx,[rax+rax*2]
  404351:	lea    rax,[rax+rdx*4]
  404355:	lea    rdi,[rbx+rax*8]
  404359:	jmp    0x404382
  40435b:	nop    DWORD PTR [rax+rax*1+0x0]
  404360:	cmp    eax,0x6
  404363:	jne    0x404379
  404365:	mov    rax,rbx
  404368:	sub    rax,QWORD PTR [rsi+0x78]
  40436c:	mov    rdx,QWORD PTR [rbp+0x78]
  404370:	mov    QWORD PTR [rdx+rax*1+0x20],0x0
  404379:	add    rbx,0x68
  40437d:	cmp    rbx,rdi
  404380:	je     0x4043d4
  404382:	mov    edx,DWORD PTR [rbx+0x10]
  404385:	mov    eax,edx
  404387:	and    eax,0xf000
  40438c:	shr    eax,0xc
  40438f:	cmp    eax,0x1
  404392:	jne    0x404360
  404394:	test   dh,0x4
  404397:	je     0x4043ad
  404399:	mov    rax,rbx
  40439c:	sub    rax,QWORD PTR [rsi+0x78]
  4043a0:	mov    rcx,QWORD PTR [rbp+0x78]
  4043a4:	mov    QWORD PTR [rcx+rax*1+0x20],0x0
  4043ad:	and    edx,0x40
  4043b0:	je     0x404379
  4043b2:	mov    r12,rbx
  4043b5:	sub    r12,QWORD PTR [rsi+0x78]
  4043b9:	mov    rcx,QWORD PTR [rbx+0x18]
  4043bd:	add    r12,QWORD PTR [rbp+0x78]
  4043c1:	add    rbx,0x68
  4043c5:	call   0x4042c0
  4043ca:	cmp    rbx,rdi
  4043cd:	mov    QWORD PTR [r12+0x18],rax
  4043d2:	jne    0x404382
  4043d4:	add    rsp,0x20
  4043d8:	pop    rbx
  4043d9:	pop    rsi
  4043da:	pop    rdi
  4043db:	pop    rbp
  4043dc:	pop    r12
  4043de:	ret    
  4043df:	nop
  4043e0:	push   r13
  4043e2:	push   r12
  4043e4:	push   rbp
  4043e5:	push   rdi
  4043e6:	push   rsi
  4043e7:	push   rbx
  4043e8:	sub    rsp,0x28
  4043ec:	mov    r13,rcx
  4043ef:	mov    rcx,rdx
  4043f2:	mov    r12,r8
  4043f5:	mov    ebp,r9d
  4043f8:	call   0x4185c0
  4043fd:	test   rax,rax
  404400:	mov    QWORD PTR [r13+0x8],rax
  404404:	je     0x4044e0
  40440a:	mov    rdx,QWORD PTR [r13+0x0]
  40440e:	mov    ecx,DWORD PTR [rdx+0x10]
  404411:	mov    rbx,QWORD PTR [rdx+0x60]
  404415:	mov    DWORD PTR [r13+0x14],0x0
  40441d:	mov    r8d,ecx
  404420:	or     r8d,0x42
  404424:	test   rbx,rbx
  404427:	mov    DWORD PTR [r13+0x10],r8d
  40442b:	je     0x404472
  40442d:	mov    rsi,rax
  404430:	add    rsi,0x1
  404434:	add    rbx,0x1
  404438:	movzx  r11d,BYTE PTR [rsi-0x1]
  40443d:	movzx  r10d,BYTE PTR [rbx-0x1]
  404442:	cmp    r11b,r10b
  404445:	je     0x40445c
  404447:	lea    rdx,[rip+0x151b2]        # 0x419600
  40444e:	movzx  edi,r11b
  404452:	movzx  edi,BYTE PTR [rdx+rdi*1]
  404456:	cmp    BYTE PTR [rdx+r10*1],dil
  40445a:	jne    0x404472
  40445c:	test   r11b,r11b
  40445f:	jne    0x404430
  404461:	or     ecx,0x62
  404464:	mov    QWORD PTR [r13+0x8],0x0
  40446c:	mov    DWORD PTR [r13+0x10],ecx
  404470:	jmp    0x4044a2
  404472:	cmp    ebp,0x1
  404475:	je     0x4044c0
  404477:	cmp    ebp,0x2
  40447a:	jne    0x404484
  40447c:	test   ecx,0x20020
  404482:	jne    0x4044f0
  404484:	test   ch,0xf0
  404487:	je     0x40449a
  404489:	cmp    BYTE PTR [rax],0x0
  40448c:	jne    0x404530
  404492:	and    ecx,0x10000
  404498:	je     0x4044e0
  40449a:	mov    QWORD PTR [r13+0x8],0x0
  4044a2:	mov    rdx,r13
  4044a5:	mov    rcx,r12
  4044a8:	add    rsp,0x28
  4044ac:	pop    rbx
  4044ad:	pop    rsi
  4044ae:	pop    rdi
  4044af:	pop    rbp
  4044b0:	pop    r12
  4044b2:	pop    r13
  4044b4:	jmp    0x403b60
  4044b9:	nop    DWORD PTR [rax+0x0]
  4044c0:	mov    edx,ecx
  4044c2:	and    edx,0x20020
  4044c8:	cmp    edx,0x20000
  4044ce:	je     0x404484
  4044d0:	mov    edx,ecx
  4044d2:	and    edx,0x40020
  4044d8:	cmp    edx,0x40020
  4044de:	je     0x404484
  4044e0:	add    rsp,0x28
  4044e4:	pop    rbx
  4044e5:	pop    rsi
  4044e6:	pop    rdi
  4044e7:	pop    rbp
  4044e8:	pop    r12
  4044ea:	pop    r13
  4044ec:	ret    
  4044ed:	nop    DWORD PTR [rax]
  4044f0:	mov    edx,ecx
  4044f2:	and    edx,0x40020
  4044f8:	cmp    edx,0x20
  4044fb:	je     0x404484
  4044fd:	mov    edx,ecx
  4044ff:	and    edx,0x400020
  404505:	cmp    edx,0x400000
  40450b:	je     0x404484
  404511:	mov    edx,ecx
  404513:	and    edx,0x800020
  404519:	cmp    edx,0x800020
  40451f:	jne    0x4044e0
  404521:	jmp    0x404484
  404526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404530:	mov    rcx,rax
  404533:	call   0x4042c0
  404538:	or     DWORD PTR [r13+0x10],0x40
  40453d:	mov    QWORD PTR [r13+0x8],rax
  404541:	jmp    0x4044a2
  404546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404550:	push   rsi
  404551:	push   rbx
  404552:	sub    rsp,0x28
  404556:	mov    rbx,rcx
  404559:	call   0x4185a8
  40455e:	test   rax,rax
  404561:	je     0x40456a
  404563:	add    rsp,0x28
  404567:	pop    rbx
  404568:	pop    rsi
  404569:	ret    
  40456a:	mov    rsi,QWORD PTR [rip+0x154f7]        # 0x419a68
  404571:	call   QWORD PTR [rip+0x21161]        # 0x4256d8
  404577:	lea    rcx,[rax+0x60]
  40457b:	mov    r8d,ebx
  40457e:	mov    rdx,rsi
  404581:	call   0x402710
  404586:	mov    ecx,0x1
  40458b:	call   0x402b50
  404590:	nop
  404591:	nop    DWORD PTR [rax+rax*1+0x0]
  404596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045a0:	push   rbp
  4045a1:	push   rdi
  4045a2:	push   rsi
  4045a3:	push   rbx
  4045a4:	sub    rsp,0x28
  4045a8:	mov    rbx,QWORD PTR [rcx]
  4045ab:	mov    rsi,rcx
  4045ae:	mov    rdi,rdx
  4045b1:	test   rbx,rbx
  4045b4:	je     0x404604
  4045b6:	movsxd r8,DWORD PTR [rbx]
  4045b9:	mov    eax,DWORD PTR [rbx+0x4]
  4045bc:	cmp    r8d,eax
  4045bf:	lea    edx,[r8+0x1]
  4045c3:	jge    0x4045d5
  4045c5:	mov    DWORD PTR [rbx],edx
  4045c7:	mov    QWORD PTR [rbx+r8*8+0x8],rdi
  4045cc:	add    rsp,0x28
  4045d0:	pop    rbx
  4045d1:	pop    rsi
  4045d2:	pop    rdi
  4045d3:	pop    rbp
  4045d4:	ret    
  4045d5:	add    eax,0x8
  4045d8:	mov    rcx,rbx
  4045db:	mov    DWORD PTR [rbx+0x4],eax
  4045de:	cdqe   
  4045e0:	lea    rbp,[rax*8+0x8]
  4045e8:	mov    rdx,rbp
  4045eb:	call   0x418578
  4045f0:	test   rax,rax
  4045f3:	je     0x404630
  4045f5:	movsxd r8,DWORD PTR [rax]
  4045f8:	mov    QWORD PTR [rsi],rax
  4045fb:	mov    rbx,rax
  4045fe:	lea    edx,[r8+0x1]
  404602:	jmp    0x4045c5
  404604:	mov    ecx,0x38
  404609:	call   0x404550
  40460e:	test   rax,rax
  404611:	mov    rbx,rax
  404614:	je     0x4045cc
  404616:	mov    DWORD PTR [rax],0x0
  40461c:	mov    DWORD PTR [rax+0x4],0x6
  404623:	mov    edx,0x1
  404628:	mov    QWORD PTR [rsi],rax
  40462b:	xor    r8d,r8d
  40462e:	jmp    0x4045c5
  404630:	mov    rsi,QWORD PTR [rip+0x15451]        # 0x419a88
  404637:	call   QWORD PTR [rip+0x2109b]        # 0x4256d8
  40463d:	lea    rcx,[rax+0x60]
  404641:	mov    r9,rbx
  404644:	mov    r8d,ebp
  404647:	mov    rdx,rsi
  40464a:	call   0x402710
  40464f:	mov    ecx,0x1
  404654:	call   0x402b50
  404659:	nop
  40465a:	nop    WORD PTR [rax+rax*1+0x0]
  404660:	push   r15
  404662:	push   r14
  404664:	push   r13
  404666:	push   r12
  404668:	push   rbp
  404669:	push   rdi
  40466a:	push   rsi
  40466b:	push   rbx
  40466c:	sub    rsp,0x58
  404670:	mov    rbp,QWORD PTR [rsp+0xc0]
  404678:	mov    QWORD PTR [rsp+0xa0],rcx
  404680:	mov    r15,r9
  404683:	mov    r14,rdx
  404686:	mov    r12,r8
  404689:	lea    rcx,[r8+rbp*1+0x18]
  40468e:	call   0x404550
  404693:	test   r15,r15
  404696:	mov    r13,rax
  404699:	je     0x404840
  40469f:	test   rbp,rbp
  4046a2:	mov    DWORD PTR [rax],0x1
  4046a8:	je     0x404790
  4046ae:	lea    rsi,[rax+0x10]
  4046b2:	lea    rax,[rsp+0x48]
  4046b7:	mov    ebx,ebp
  4046b9:	lea    r10,[rip+0x16f00]        # 0x41b5c0
  4046c0:	mov    QWORD PTR [rsp+0x30],rax
  4046c5:	jmp    0x4046e5
  4046c7:	nop    WORD PTR [rax+rax*1+0x0]
  4046d0:	sub    ebx,0x1
  4046d3:	add    rsi,0x1
  4046d7:	mov    r15,rdi
  4046da:	test   ebx,ebx
  4046dc:	mov    BYTE PTR [rsi-0x1],al
  4046df:	jle    0x4047d5
  4046e5:	movzx  eax,BYTE PTR [r15]
  4046e9:	lea    rdi,[r15+0x1]
  4046ed:	test   eax,eax
  4046ef:	je     0x4047d5
  4046f5:	cmp    eax,0x26
  4046f8:	jne    0x4046d0
  4046fa:	cmp    ebx,0x2
  4046fd:	mov    QWORD PTR [rsp+0x48],rdi
  404702:	mov    eax,0x26
  404707:	jle    0x4046d0
  404709:	cmp    BYTE PTR [r15+0x1],0x23
  40470e:	lea    r9,[rip+0x16e6b]        # 0x41b580
  404715:	je     0x4047e0
  40471b:	mov    r15,r9
  40471e:	mov    QWORD PTR [rsp+0xc0],rbp
  404726:	mov    QWORD PTR [rsp+0x38],rsi
  40472b:	mov    ebp,DWORD PTR [r15+0x4]
  40472f:	mov    esi,ebx
  404731:	cmp    ebp,esi
  404733:	jg     0x404759
  404735:	movsxd rbx,ebp
  404738:	lea    rdx,[r15+0x8]
  40473c:	mov    rcx,rdi
  40473f:	mov    r8,rbx
  404742:	mov    QWORD PTR [rsp+0x28],r10
  404747:	call   0x418530
  40474c:	test   eax,eax
  40474e:	mov    r10,QWORD PTR [rsp+0x28]
  404753:	je     0x404861
  404759:	cmp    r15,r10
  40475c:	je     0x40476f
  40475e:	add    r15,0x10
  404762:	mov    ebp,DWORD PTR [r15+0x4]
  404766:	cmp    ebp,esi
  404768:	jle    0x404735
  40476a:	cmp    r15,r10
  40476d:	jne    0x40475e
  40476f:	mov    ebx,esi
  404771:	mov    rbp,QWORD PTR [rsp+0xc0]
  404779:	mov    rsi,QWORD PTR [rsp+0x38]
  40477e:	mov    eax,0x26
  404783:	jmp    0x4046d0
  404788:	nop    DWORD PTR [rax+rax*1+0x0]
  404790:	mov    BYTE PTR [rax+0x10],0x0
  404794:	lea    rcx,[r13+rbp*1+0x11]
  404799:	mov    QWORD PTR [r13+0x8],rcx
  40479d:	mov    r8,r12
  4047a0:	mov    rdx,r14
  4047a3:	call   0x4185a0
  4047a8:	mov    rax,QWORD PTR [r13+0x8]
  4047ac:	mov    rcx,QWORD PTR [rsp+0xa0]
  4047b4:	mov    rdx,r13
  4047b7:	mov    BYTE PTR [rax+r12*1],0x0
  4047bc:	call   0x4045a0
  4047c1:	mov    rax,r13
  4047c4:	add    rsp,0x58
  4047c8:	pop    rbx
  4047c9:	pop    rsi
  4047ca:	pop    rdi
  4047cb:	pop    rbp
  4047cc:	pop    r12
  4047ce:	pop    r13
  4047d0:	pop    r14
  4047d2:	pop    r15
  4047d4:	ret    
  4047d5:	mov    BYTE PTR [rsi],0x0
  4047d8:	jmp    0x404794
  4047da:	nop    WORD PTR [rax+rax*1+0x0]
  4047e0:	lea    rcx,[r15+0x2]
  4047e4:	mov    r8d,0xa
  4047ea:	mov    QWORD PTR [rsp+0x48],rcx
  4047ef:	cmp    BYTE PTR [r15+0x2],0x78
  4047f4:	je     0x404853
  4047f6:	mov    rdx,QWORD PTR [rsp+0x30]
  4047fb:	mov    QWORD PTR [rsp+0x28],r10
  404800:	call   0x418500
  404805:	mov    rdx,QWORD PTR [rsp+0x48]
  40480a:	mov    ecx,eax
  40480c:	mov    r10,QWORD PTR [rsp+0x28]
  404811:	mov    eax,0x26
  404816:	cmp    BYTE PTR [rdx],0x3b
  404819:	jne    0x4046d0
  40481f:	add    rdx,0x1
  404823:	mov    r8,rdx
  404826:	sub    r8,rdi
  404829:	cmp    r8d,ebx
  40482c:	jg     0x4046d0
  404832:	sub    ebx,r8d
  404835:	mov    eax,ecx
  404837:	mov    rdi,rdx
  40483a:	jmp    0x4046d0
  40483f:	nop
  404840:	lea    rcx,[rax+0x10]
  404844:	mov    DWORD PTR [rax],0x0
  40484a:	mov    QWORD PTR [rax+0x8],rcx
  40484e:	jmp    0x40479d
  404853:	lea    rcx,[r15+0x3]
  404857:	mov    r8b,0x10
  40485a:	mov    QWORD PTR [rsp+0x48],rcx
  40485f:	jmp    0x4047f6
  404861:	mov    rax,rbx
  404864:	mov    r9,r15
  404867:	mov    ebx,esi
  404869:	mov    r15d,ebp
  40486c:	add    rdi,rax
  40486f:	mov    rsi,QWORD PTR [rsp+0x38]
  404874:	mov    rbp,QWORD PTR [rsp+0xc0]
  40487c:	sub    ebx,r15d
  40487f:	movzx  eax,BYTE PTR [r9]
  404883:	jmp    0x4046d0
  404888:	nop    DWORD PTR [rax+rax*1+0x0]
  404890:	push   rsi
  404891:	push   rbx
  404892:	sub    rsp,0x28
  404896:	mov    rax,QWORD PTR [rdx+0x38]
  40489a:	mov    rbx,rdx
  40489d:	lea    rdx,[rip+0x7b2c]        # 0x40c3d0
  4048a4:	mov    rsi,rcx
  4048a7:	cmp    rax,rdx
  4048aa:	je     0x404a00
  4048b0:	lea    rdx,[rip+0xffffffffffffeb49]        # 0x403400
  4048b7:	cmp    rax,rdx
  4048ba:	je     0x404a20
  4048c0:	lea    rdx,[rip+0x8bf9]        # 0x40d4c0
  4048c7:	cmp    rax,rdx
  4048ca:	je     0x404a34
  4048d0:	mov    r8,QWORD PTR [rbx+0x48]
  4048d4:	test   r8,r8
  4048d7:	je     0x4049c0
  4048dd:	movzx  r9d,WORD PTR [rbx+0xc]
  4048e2:	cmp    r9w,0x1
  4048e7:	je     0x4049e4
  4048ed:	cmp    r9w,0xffff
  4048f2:	je     0x404907
  4048f4:	mov    rdx,QWORD PTR [rcx]
  4048f7:	lea    rcx,[rip+0x17c3a]        # 0x41c538
  4048fe:	call   0x402b20
  404903:	mov    r8,QWORD PTR [rbx+0x48]
  404907:	mov    rdx,QWORD PTR [rsi]
  40490a:	lea    rcx,[rip+0x184ff]        # 0x41ce10
  404911:	call   0x402b20
  404916:	mov    eax,DWORD PTR [rbx+0x10]
  404919:	test   ah,0xf0
  40491c:	je     0x404990
  40491e:	test   eax,0x10000
  404923:	jne    0x404960
  404925:	lea    rdx,[rip+0x17945]        # 0x41c271
  40492c:	lea    rcx,[rip+0x177e3]        # 0x41c116
  404933:	call   0x402b20
  404938:	call   QWORD PTR [rip+0x20d9a]        # 0x4256d8
  40493e:	lea    rcx,[rip+0x17989]        # 0x41c2ce
  404945:	lea    r9,[rax+0x30]
  404949:	mov    r8d,0x10
  40494f:	mov    edx,0x1
  404954:	add    rsp,0x28
  404958:	pop    rbx
  404959:	pop    rsi
  40495a:	jmp    0x4185c8
  40495f:	nop
  404960:	mov    rdx,QWORD PTR [rsi]
  404963:	mov    r8,QWORD PTR [rbx+0x48]
  404967:	lea    rcx,[rip+0x18d5c]        # 0x41d6ca
  40496e:	call   0x402b20
  404973:	lea    rdx,[rip+0x177ec]        # 0x41c166
  40497a:	lea    rcx,[rip+0x17795]        # 0x41c116
  404981:	call   0x402b20
  404986:	jmp    0x404938
  404988:	nop    DWORD PTR [rax+rax*1+0x0]
  404990:	mov    rdx,QWORD PTR [rsi]
  404993:	mov    r8,QWORD PTR [rbx+0x48]
  404997:	lea    rcx,[rip+0x18d2c]        # 0x41d6ca
  40499e:	call   0x402b20
  4049a3:	lea    rdx,[rip+0x177a3]        # 0x41c14d
  4049aa:	lea    rcx,[rip+0x17765]        # 0x41c116
  4049b1:	call   0x402b20
  4049b6:	jmp    0x404938
  4049b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4049c0:	test   rax,rax
  4049c3:	je     0x404a60
  4049c9:	mov    rdx,QWORD PTR [rcx]
  4049cc:	lea    r8,[rip+0x17739]        # 0x41c10c
  4049d3:	lea    rcx,[rip+0x17cca]        # 0x41c6a4
  4049da:	call   0x402b20
  4049df:	jmp    0x404938
  4049e4:	mov    rdx,QWORD PTR [rcx]
  4049e7:	lea    rcx,[rip+0x18d36]        # 0x41d724
  4049ee:	call   0x402b20
  4049f3:	jmp    0x404916
  4049f8:	nop    DWORD PTR [rax+rax*1+0x0]
  404a00:	mov    rdx,QWORD PTR [rcx]
  404a03:	lea    r8,[rip+0x17857]        # 0x41c261
  404a0a:	lea    rcx,[rip+0x17c93]        # 0x41c6a4
  404a11:	call   0x402b20
  404a16:	jmp    0x404938
  404a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a20:	mov    rdx,QWORD PTR [rcx]
  404a23:	lea    rcx,[rip+0x18bec]        # 0x41d616
  404a2a:	call   0x402b20
  404a2f:	jmp    0x404938
  404a34:	lea    rdx,[rip+0x1791b]        # 0x41c356
  404a3b:	lea    rcx,[rip+0x176d4]        # 0x41c116
  404a42:	call   0x402b20
  404a47:	lea    rdx,[rip+0x17823]        # 0x41c271
  404a4e:	lea    rcx,[rip+0x176c1]        # 0x41c116
  404a55:	call   0x402b20
  404a5a:	jmp    0x404938
  404a5f:	nop
  404a60:	lea    rdx,[rip+0x1791e]        # 0x41c385
  404a67:	lea    rcx,[rip+0x176a8]        # 0x41c116
  404a6e:	call   0x402b20
  404a73:	lea    rdx,[rip+0x176ec]        # 0x41c166
  404a7a:	lea    rcx,[rip+0x17695]        # 0x41c116
  404a81:	call   0x402b20
  404a86:	jmp    0x404938
  404a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a90:	push   rbp
  404a91:	push   rdi
  404a92:	push   rsi
  404a93:	push   rbx
  404a94:	sub    rsp,0x28
  404a98:	mov    esi,DWORD PTR [rcx+0xb0]
  404a9e:	mov    rbx,QWORD PTR [rcx+0x78]
  404aa2:	mov    rdi,rcx
  404aa5:	call   QWORD PTR [rip+0x20c2d]        # 0x4256d8
  404aab:	lea    rcx,[rip+0x17a67]        # 0x41c519
  404ab2:	lea    r9,[rax+0x30]
  404ab6:	mov    r8d,0x1e
  404abc:	mov    edx,0x1
  404ac1:	call   0x4185c8
  404ac6:	test   esi,esi
  404ac8:	jle    0x404b29
  404aca:	lea    eax,[rsi-0x1]
  404acd:	lea    rbp,[rdi+0x30]
  404ad1:	add    rax,0x1
  404ad5:	lea    rdx,[rax+rax*2]
  404ad9:	lea    rax,[rax+rdx*4]
  404add:	lea    rsi,[rbx+rax*8]
  404ae1:	test   DWORD PTR [rbx+0x10],0x280000
  404ae8:	jne    0x404b20
  404aea:	movzx  edx,WORD PTR [rbx+0x2]
  404aee:	movzx  eax,dl
  404af1:	cmp    al,0x7f
  404af3:	ja     0x404b20
  404af5:	lea    rcx,[rip+0x1a084]        # 0x41eb80
  404afc:	test   BYTE PTR [rcx+rax*4+0x1],0x40
  404b01:	je     0x404b20
  404b03:	lea    rcx,[rip+0x177d5]        # 0x41c2df
  404b0a:	call   0x402b20
  404b0f:	mov    rdx,rbx
  404b12:	mov    rcx,rbp
  404b15:	call   0x404890
  404b1a:	nop    WORD PTR [rax+rax*1+0x0]
  404b20:	add    rbx,0x68
  404b24:	cmp    rbx,rsi
  404b27:	jne    0x404ae1
  404b29:	mov    r8,QWORD PTR [rdi+0x30]
  404b2d:	lea    rdx,[rip+0x175ab]        # 0x41c0df
  404b34:	lea    rcx,[rip+0x18dc2]        # 0x41d8fd
  404b3b:	add    rsp,0x28
  404b3f:	pop    rbx
  404b40:	pop    rsi
  404b41:	pop    rdi
  404b42:	pop    rbp
  404b43:	jmp    0x402b20
  404b48:	nop    DWORD PTR [rax+rax*1+0x0]
  404b50:	push   r15
  404b52:	push   r14
  404b54:	push   r13
  404b56:	push   r12
  404b58:	push   rbp
  404b59:	push   rdi
  404b5a:	push   rsi
  404b5b:	push   rbx
  404b5c:	sub    rsp,0x58
  404b60:	mov    rdi,rcx
  404b63:	mov    QWORD PTR [rsp+0xa8],rdx
  404b6b:	mov    rsi,r8
  404b6e:	mov    rbx,r9
  404b71:	call   0x418538
  404b76:	sub    eax,0x1
  404b79:	cmp    eax,0x1e
  404b7c:	mov    DWORD PTR [rsp+0x2c],eax
  404b80:	ja     0x404c44
  404b86:	mov    eax,DWORD PTR [rbx]
  404b88:	mov    rbp,QWORD PTR [rsi]
  404b8b:	test   eax,eax
  404b8d:	jle    0x404d0e
  404b93:	sub    eax,0x1
  404b96:	mov    rbx,QWORD PTR [rip+0x20d5b]        # 0x4258f8
  404b9d:	mov    r12d,0x2
  404ba3:	add    rax,0x1
  404ba7:	lea    rdx,[rax+rax*2]
  404bab:	lea    rax,[rax+rdx*4]
  404baf:	lea    rax,[rbp+rax*8+0x0]
  404bb4:	mov    QWORD PTR [rsp+0x20],rax
  404bb9:	nop    DWORD PTR [rax+0x0]
  404bc0:	cmp    rbp,QWORD PTR [rsp+0xa8]
  404bc8:	je     0x404c32
  404bca:	test   DWORD PTR [rbp+0x10],0x280000
  404bd1:	jne    0x404c32
  404bd3:	mov    r15,QWORD PTR [rbp+0x50]
  404bd7:	xor    r14d,r14d
  404bda:	jmp    0x404be4
  404bdc:	nop    DWORD PTR [rax+0x0]
  404be0:	add    r14d,0x1
  404be4:	mov    r13d,r14d
  404be7:	movzx  ecx,BYTE PTR [r15+r13*1]
  404bec:	call   rbx
  404bee:	movzx  ecx,BYTE PTR [rdi+r13*1]
  404bf3:	mov    esi,eax
  404bf5:	call   rbx
  404bf7:	cmp    esi,eax
  404bf9:	je     0x404be0
  404bfb:	mov    r15,QWORD PTR [rbp+0x58]
  404bff:	cmp    r12d,r14d
  404c02:	cmovb  r12d,r14d
  404c06:	test   r15,r15
  404c09:	je     0x404c32
  404c0b:	xor    r14d,r14d
  404c0e:	jmp    0x404c14
  404c10:	add    r14d,0x1
  404c14:	mov    r13d,r14d
  404c17:	movsx  ecx,BYTE PTR [r15+r13*1]
  404c1c:	call   rbx
  404c1e:	movsx  ecx,BYTE PTR [rdi+r13*1]
  404c23:	mov    esi,eax
  404c25:	call   rbx
  404c27:	cmp    esi,eax
  404c29:	je     0x404c10
  404c2b:	cmp    r12d,r14d
  404c2e:	cmovb  r12d,r14d
  404c32:	add    rbp,0x68
  404c36:	cmp    rbp,QWORD PTR [rsp+0x20]
  404c3b:	jne    0x404bc0
  404c3d:	cmp    DWORD PTR [rsp+0x2c],r12d
  404c42:	ja     0x404c65
  404c44:	lea    rcx,[rip+0x176a4]        # 0x41c2ef
  404c4b:	mov    rdx,rdi
  404c4e:	call   0x402b20
  404c53:	nop
  404c54:	add    rsp,0x58
  404c58:	pop    rbx
  404c59:	pop    rsi
  404c5a:	pop    rdi
  404c5b:	pop    rbp
  404c5c:	pop    r12
  404c5e:	pop    r13
  404c60:	pop    r14
  404c62:	pop    r15
  404c64:	ret    
  404c65:	lea    rbp,[rsp+0x30]
  404c6a:	mov    ebx,r12d
  404c6d:	cmp    r12d,0x8
  404c71:	mov    rax,rdi
  404c74:	lea    rsi,[rbp+rbx*1+0x0]
  404c79:	mov    rcx,rbp
  404c7c:	jae    0x404ce7
  404c7e:	xor    edx,edx
  404c80:	test   r12b,0x4
  404c84:	je     0x404c8f
  404c86:	mov    edx,DWORD PTR [rax]
  404c88:	mov    DWORD PTR [rcx],edx
  404c8a:	mov    edx,0x4
  404c8f:	test   r12b,0x2
  404c93:	je     0x404ca3
  404c95:	movzx  r8d,WORD PTR [rax+rdx*1]
  404c9a:	mov    WORD PTR [rcx+rdx*1],r8w
  404c9f:	add    rdx,0x2
  404ca3:	and    r12d,0x1
  404ca7:	je     0x404cb0
  404ca9:	movzx  eax,BYTE PTR [rax+rdx*1]
  404cad:	mov    BYTE PTR [rcx+rdx*1],al
  404cb0:	add    rbx,rdi
  404cb3:	jmp    0x404cb8
  404cb5:	mov    rsi,rax
  404cb8:	lea    rcx,[rip+0x17640]        # 0x41c2ff
  404cbf:	mov    BYTE PTR [rsi],0x0
  404cc2:	mov    rdx,rbp
  404cc5:	add    rbx,0x1
  404cc9:	call   0x402b20
  404cce:	movzx  ecx,BYTE PTR [rbx-0x1]
  404cd2:	cmp    BYTE PTR [rbx],0x0
  404cd5:	lea    rax,[rsi+0x1]
  404cd9:	mov    BYTE PTR [rax-0x1],cl
  404cdc:	jne    0x404cb5
  404cde:	mov    BYTE PTR [rsi+0x1],0x0
  404ce2:	jmp    0x404c44
  404ce7:	mov    ecx,r12d
  404cea:	xor    eax,eax
  404cec:	and    ecx,0xfffffff8
  404cef:	mov    edx,eax
  404cf1:	add    eax,0x8
  404cf4:	mov    r8,QWORD PTR [rdi+rdx*1]
  404cf8:	cmp    eax,ecx
  404cfa:	mov    QWORD PTR [rbp+rdx*1+0x0],r8
  404cff:	jb     0x404cef
  404d01:	lea    rcx,[rbp+rax*1+0x0]
  404d06:	add    rax,rdi
  404d09:	jmp    0x404c7e
  404d0e:	mov    r12d,0x2
  404d14:	jmp    0x404c3d
  404d19:	nop    DWORD PTR [rax+0x0]
  404d20:	push   r14
  404d22:	push   r13
  404d24:	push   r12
  404d26:	push   rbp
  404d27:	push   rdi
  404d28:	push   rsi
  404d29:	push   rbx
  404d2a:	sub    rsp,0x20
  404d2e:	mov    r13,QWORD PTR [rip+0x209a3]        # 0x4256d8
  404d35:	mov    rbx,QWORD PTR [rcx+0x78]
  404d39:	mov    rdi,rcx
  404d3c:	mov    esi,DWORD PTR [rcx+0xb0]
  404d42:	call   r13
  404d45:	lea    rcx,[rip+0x177cd]        # 0x41c519
  404d4c:	lea    r9,[rax+0x30]
  404d50:	mov    r8d,0x1e
  404d56:	mov    edx,0x1
  404d5b:	lea    r12,[rdi+0x78]
  404d5f:	lea    rbp,[rdi+0xb0]
  404d66:	call   0x4185c8
  404d6b:	lea    r14,[rdi+0x30]
  404d6f:	jmp    0x404d80
  404d71:	sub    esi,0x1
  404d74:	add    rbx,0x68
  404d78:	test   esi,esi
  404d7a:	jle    0x404e2d
  404d80:	test   DWORD PTR [rbx+0x10],0x280000
  404d87:	jne    0x404d71
  404d89:	mov    rcx,QWORD PTR [rbx+0x50]
  404d8d:	mov    r9,rbp
  404d90:	mov    r8,r12
  404d93:	mov    rdx,rbx
  404d96:	call   0x404b50
  404d9b:	mov    rcx,r14
  404d9e:	mov    rdx,rbx
  404da1:	call   0x404890
  404da6:	mov    rcx,QWORD PTR [rbx+0x58]
  404daa:	test   rcx,rcx
  404dad:	je     0x404d71
  404daf:	mov    r9,rbp
  404db2:	mov    r8,r12
  404db5:	mov    rdx,rbx
  404db8:	call   0x404b50
  404dbd:	lea    rax,[rip+0x86fc]        # 0x40d4c0
  404dc4:	cmp    QWORD PTR [rbx+0x38],rax
  404dc8:	je     0x404e60
  404dce:	cmp    WORD PTR [rbx+0xc],0x1
  404dd3:	mov    rdx,QWORD PTR [rdi+0x30]
  404dd7:	mov    r9,QWORD PTR [rbx+0x60]
  404ddb:	mov    r8,QWORD PTR [rbx+0x48]
  404ddf:	je     0x404e52
  404de1:	lea    rcx,[rip+0x1817b]        # 0x41cf63
  404de8:	call   0x402b20
  404ded:	lea    rdx,[rip+0x17359]        # 0x41c14d
  404df4:	lea    rcx,[rip+0x1731b]        # 0x41c116
  404dfb:	sub    esi,0x1
  404dfe:	add    rbx,0x68
  404e02:	call   0x402b20
  404e07:	call   r13
  404e0a:	lea    rcx,[rip+0x174bd]        # 0x41c2ce
  404e11:	lea    r9,[rax+0x30]
  404e15:	mov    r8d,0x10
  404e1b:	mov    edx,0x1
  404e20:	call   0x4185c8
  404e25:	test   esi,esi
  404e27:	jg     0x404d80
  404e2d:	mov    r8,QWORD PTR [rdi+0x30]
  404e31:	lea    rdx,[rip+0x17347]        # 0x41c17f
  404e38:	lea    rcx,[rip+0x18abe]        # 0x41d8fd
  404e3f:	add    rsp,0x20
  404e43:	pop    rbx
  404e44:	pop    rsi
  404e45:	pop    rdi
  404e46:	pop    rbp
  404e47:	pop    r12
  404e49:	pop    r13
  404e4b:	pop    r14
  404e4d:	jmp    0x402b20
  404e52:	lea    rcx,[rip+0x18197]        # 0x41cff0
  404e59:	call   0x402b20
  404e5e:	jmp    0x404ded
  404e60:	lea    rdx,[rip+0x1754d]        # 0x41c3b4
  404e67:	lea    rcx,[rip+0x172a8]        # 0x41c116
  404e6e:	call   0x402b20
  404e73:	jmp    0x404ded
  404e78:	nop    DWORD PTR [rax+rax*1+0x0]
  404e80:	push   r15
  404e82:	push   r14
  404e84:	push   r13
  404e86:	push   r12
  404e88:	push   rbp
  404e89:	push   rdi
  404e8a:	push   rsi
  404e8b:	push   rbx
  404e8c:	sub    rsp,0x68
  404e90:	mov    eax,DWORD PTR [rcx+0x10]
  404e93:	test   al,0x8
  404e95:	jne    0x404fa0
  404e9b:	mov    rdi,QWORD PTR [rcx+0x20]
  404e9f:	test   rdi,rdi
  404ea2:	je     0x404fe0
  404ea8:	mov    rdx,QWORD PTR [rcx+0x18]
  404eac:	lea    r13,[rsp+0x40]
  404eb1:	mov    rbp,rcx
  404eb4:	mov    r8d,0x20
  404eba:	mov    rcx,r13
  404ebd:	call   0x411af0
  404ec2:	test   eax,eax
  404ec4:	jne    0x404fa0
  404eca:	mov    eax,DWORD PTR [rdi]
  404ecc:	test   eax,eax
  404ece:	jle    0x404f67
  404ed4:	lea    r15d,[rax-0x1]
  404ed8:	xor    ebx,ebx
  404eda:	xor    r12d,r12d
  404edd:	lea    rax,[r15+0x1]
  404ee1:	mov    QWORD PTR [rsp+0x38],rax
  404ee6:	jmp    0x404f10
  404ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ef0:	mov    BYTE PTR [r15],0x3d
  404ef4:	cmp    r14d,r12d
  404ef7:	je     0x404f01
  404ef9:	movsxd rax,r12d
  404efc:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  404f01:	add    r12d,0x1
  404f05:	add    rbx,0x1
  404f09:	cmp    rbx,QWORD PTR [rsp+0x38]
  404f0e:	je     0x404f67
  404f10:	mov    rsi,QWORD PTR [rdi+rbx*8+0x8]
  404f15:	mov    edx,0x3d
  404f1a:	mov    r14d,ebx
  404f1d:	mov    rcx,rsi
  404f20:	call   0x418560
  404f25:	test   rax,rax
  404f28:	mov    r15,rax
  404f2b:	je     0x404fb1
  404f31:	mov    BYTE PTR [rax],0x0
  404f34:	xor    r9d,r9d
  404f37:	xor    r8d,r8d
  404f3a:	mov    DWORD PTR [rsp+0x20],0x0
  404f42:	mov    rdx,rsi
  404f45:	mov    rcx,r13
  404f48:	call   0x411ae8
  404f4d:	test   eax,eax
  404f4f:	jne    0x404ef0
  404f51:	mov    rcx,rsi
  404f54:	add    rbx,0x1
  404f58:	call   0x4185e0
  404f5d:	sub    DWORD PTR [rdi],0x1
  404f60:	cmp    rbx,QWORD PTR [rsp+0x38]
  404f65:	jne    0x404f10
  404f67:	mov    rcx,r13
  404f6a:	call   0x411ae0
  404f6f:	mov    eax,DWORD PTR [rdi]
  404f71:	test   eax,eax
  404f73:	jne    0x404fa0
  404f75:	mov    eax,DWORD PTR [rbp+0x10]
  404f78:	mov    edx,eax
  404f7a:	and    edx,0xfffff00
  404f80:	test   ah,0x8
  404f83:	jne    0x404f88
  404f85:	or     edx,0x20
  404f88:	mov    DWORD PTR [rbp+0x10],edx
  404f8b:	mov    rcx,rdi
  404f8e:	call   0x4185e0
  404f93:	mov    QWORD PTR [rbp+0x20],0x0
  404f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  404fa0:	add    rsp,0x68
  404fa4:	pop    rbx
  404fa5:	pop    rsi
  404fa6:	pop    rdi
  404fa7:	pop    rbp
  404fa8:	pop    r12
  404faa:	pop    r13
  404fac:	pop    r14
  404fae:	pop    r15
  404fb0:	ret    
  404fb1:	xor    r9d,r9d
  404fb4:	xor    r8d,r8d
  404fb7:	mov    DWORD PTR [rsp+0x20],0x0
  404fbf:	mov    rdx,rsi
  404fc2:	mov    rcx,r13
  404fc5:	call   0x411ae8
  404fca:	test   eax,eax
  404fcc:	jne    0x404ef4
  404fd2:	jmp    0x404f51
  404fd7:	nop    WORD PTR [rax+rax*1+0x0]
  404fe0:	mov    edx,eax
  404fe2:	and    edx,0xfffff00
  404fe8:	test   ah,0x8
  404feb:	jne    0x404ff0
  404fed:	or     edx,0x20
  404ff0:	mov    DWORD PTR [rcx+0x10],edx
  404ff3:	jmp    0x404fa0
  404ff5:	nop
  404ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405000:	push   rsi
  405001:	push   rbx
  405002:	sub    rsp,0x28
  405006:	test   BYTE PTR [rdx+0x10],0x4
  40500a:	je     0x405015
  40500c:	mov    rax,QWORD PTR [rdx]
  40500f:	test   BYTE PTR [rax+0x13],0x2
  405013:	jne    0x405020
  405015:	add    rsp,0x28
  405019:	pop    rbx
  40501a:	pop    rsi
  40501b:	jmp    0x404100
  405020:	mov    rsi,QWORD PTR [rax+0x50]
  405024:	mov    rbx,QWORD PTR [rip+0x14b85]        # 0x419bb0
  40502b:	call   QWORD PTR [rip+0x206a7]        # 0x4256d8
  405031:	lea    rcx,[rax+0x60]
  405035:	mov    r8,rsi
  405038:	mov    rdx,rbx
  40503b:	call   0x402710
  405040:	mov    eax,0xffffffff
  405045:	add    rsp,0x28
  405049:	pop    rbx
  40504a:	pop    rsi
  40504b:	ret    
  40504c:	nop    DWORD PTR [rax+0x0]
  405050:	push   r15
  405052:	push   r14
  405054:	push   r13
  405056:	push   r12
  405058:	push   rbp
  405059:	push   rdi
  40505a:	push   rsi
  40505b:	push   rbx
  40505c:	sub    rsp,0x188
  405063:	movzx  eax,WORD PTR [rcx+0xaa]
  40506a:	test   ax,0x7fff
  40506e:	je     0x4052c8
  405074:	mov    r12,rdx
  405077:	lea    rdx,[rax+rax*2]
  40507b:	mov    rbp,rcx
  40507e:	mov    rcx,QWORD PTR [rcx+0x78]
  405082:	lea    rax,[rax+rdx*4]
  405086:	lea    rax,[rcx+rax*8]
  40508a:	mov    rbx,QWORD PTR [rax+0x18]
  40508e:	test   rbx,rbx
  405091:	je     0x40509c
  405093:	cmp    BYTE PTR [rbx],0x0
  405096:	jne    0x405140
  40509c:	mov    rax,QWORD PTR [rbp+0x58]
  4050a0:	test   rax,rax
  4050a3:	jne    0x4050b4
  4050a5:	jmp    0x4052c8
  4050aa:	nop    WORD PTR [rax+rax*1+0x0]
  4050b0:	add    rax,0x8
  4050b4:	cmp    QWORD PTR [rax+0x8],0x0
  4050b9:	jne    0x4050b0
  4050bb:	mov    rbx,QWORD PTR [rax]
  4050be:	xor    edi,edi
  4050c0:	cmp    BYTE PTR [rbx],0x24
  4050c3:	je     0x405144
  4050c5:	lea    r13,[rsp+0x30]
  4050ca:	mov    rcx,rbx
  4050cd:	mov    rsi,QWORD PTR [rip+0x20844]        # 0x425918
  4050d4:	mov    rdx,r13
  4050d7:	call   rsi
  4050d9:	test   eax,eax
  4050db:	jne    0x4052d0
  4050e1:	movzx  eax,WORD PTR [rsp+0x36]
  4050e6:	and    ax,0xf000
  4050ea:	cmp    ax,0x4000
  4050ee:	je     0x405220
  4050f4:	cmp    ax,0x8000
  4050f8:	je     0x40533d
  4050fe:	mov    rbp,QWORD PTR [rbp+0x28]
  405102:	mov    rsi,QWORD PTR [rip+0x14b17]        # 0x419c20
  405109:	call   QWORD PTR [rip+0x205c9]        # 0x4256d8
  40510f:	lea    rcx,[rax+0x60]
  405113:	mov    r9,rbx
  405116:	mov    r8,rbp
  405119:	mov    rdx,rsi
  40511c:	call   0x402710
  405121:	xor    eax,eax
  405123:	test   edi,edi
  405125:	jne    0x4052c0
  40512b:	add    rsp,0x188
  405132:	pop    rbx
  405133:	pop    rsi
  405134:	pop    rdi
  405135:	pop    rbp
  405136:	pop    r12
  405138:	pop    r13
  40513a:	pop    r14
  40513c:	pop    r15
  40513e:	ret    
  40513f:	nop
  405140:	xor    edi,edi
  405142:	jmp    0x4050c5
  405144:	lea    r13,[rbx+0x1]
  405148:	mov    edx,0x5c
  40514d:	mov    rcx,r13
  405150:	call   0x418560
  405155:	test   rax,rax
  405158:	mov    r14,rax
  40515b:	je     0x4053e8
  405161:	sub    rax,r13
  405164:	cmp    rax,0x7f
  405168:	jg     0x4052c8
  40516e:	lea    r8,[rsp+0x70]
  405173:	cmp    rax,0x8
  405177:	mov    rsi,r13
  40517a:	mov    rdi,r8
  40517d:	jb     0x405189
  40517f:	mov    rcx,rax
  405182:	shr    rcx,0x3
  405186:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  405189:	xor    edx,edx
  40518b:	test   al,0x4
  40518d:	je     0x405198
  40518f:	mov    edx,DWORD PTR [rsi]
  405191:	mov    DWORD PTR [rdi],edx
  405193:	mov    edx,0x4
  405198:	test   al,0x2
  40519a:	je     0x4051a8
  40519c:	movzx  ecx,WORD PTR [rsi+rdx*1]
  4051a0:	mov    WORD PTR [rdi+rdx*1],cx
  4051a4:	add    rdx,0x2
  4051a8:	test   al,0x1
  4051aa:	je     0x4051b3
  4051ac:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  4051b0:	mov    BYTE PTR [rdi+rdx*1],cl
  4051b3:	mov    rcx,r8
  4051b6:	mov    BYTE PTR [rsp+rax*1+0x70],0x0
  4051bb:	call   0x4185c0
  4051c0:	test   rax,rax
  4051c3:	mov    rdi,rax
  4051c6:	je     0x4053fc
  4051cc:	mov    rcx,rax
  4051cf:	call   0x418538
  4051d4:	mov    rcx,r14
  4051d7:	mov    rsi,rax
  4051da:	call   0x418538
  4051df:	lea    rcx,[rsi+rax*1+0x2]
  4051e4:	mov    r13,rax
  4051e7:	call   0x404550
  4051ec:	mov    rbx,rax
  4051ef:	mov    r8,rsi
  4051f2:	mov    rdx,rdi
  4051f5:	mov    rcx,rax
  4051f8:	add    rsi,rbx
  4051fb:	mov    edi,0x1
  405200:	call   0x4185a0
  405205:	lea    rcx,[rsi+0x1]
  405209:	lea    r8,[r13+0x1]
  40520d:	mov    BYTE PTR [rsi],0x2f
  405210:	mov    rdx,r14
  405213:	call   0x4185a0
  405218:	jmp    0x4050c5
  40521d:	nop    DWORD PTR [rax]
  405220:	mov    rcx,rbx
  405223:	call   0x418538
  405228:	mov    rcx,QWORD PTR [rbp+0x38]
  40522c:	mov    r14,rax
  40522f:	call   0x418538
  405234:	lea    r14,[r14+rax*1+0x2]
  405239:	mov    rcx,r14
  40523c:	call   0x404550
  405241:	mov    r15,rax
  405244:	mov    rax,QWORD PTR [rbp+0x38]
  405248:	lea    r8,[rip+0x1598d]        # 0x41abdc
  40524f:	mov    r9,rbx
  405252:	mov    rdx,r14
  405255:	mov    rcx,r15
  405258:	mov    QWORD PTR [rsp+0x20],rax
  40525d:	call   0x402b00
  405262:	cdqe   
  405264:	cmp    r14,rax
  405267:	jbe    0x4054ad
  40526d:	test   edi,edi
  40526f:	jne    0x4053b6
  405275:	mov    rdx,r13
  405278:	mov    rcx,r15
  40527b:	call   rsi
  40527d:	test   eax,eax
  40527f:	jne    0x4053c3
  405285:	movzx  eax,WORD PTR [rsp+0x36]
  40528a:	and    ax,0xf000
  40528e:	cmp    ax,0x8000
  405292:	je     0x4054a0
  405298:	mov    rbx,QWORD PTR [rip+0x14981]        # 0x419c20
  40529f:	mov    rsi,QWORD PTR [rbp+0x28]
  4052a3:	call   QWORD PTR [rip+0x2042f]        # 0x4256d8
  4052a9:	lea    rcx,[rax+0x60]
  4052ad:	mov    r9,r15
  4052b0:	mov    rdx,rbx
  4052b3:	mov    r8,rsi
  4052b6:	mov    rbx,r15
  4052b9:	call   0x402710
  4052be:	xchg   ax,ax
  4052c0:	mov    rcx,rbx
  4052c3:	call   0x4185e0
  4052c8:	xor    eax,eax
  4052ca:	jmp    0x40512b
  4052cf:	nop
  4052d0:	mov    r15,QWORD PTR [rip+0x20449]        # 0x425720
  4052d7:	call   r15
  4052da:	cmp    DWORD PTR [rax],0x2
  4052dd:	jne    0x405351
  4052df:	mov    edx,0x5c
  4052e4:	mov    rcx,rbx
  4052e7:	call   0x418518
  4052ec:	test   rax,rax
  4052ef:	je     0x405333
  4052f1:	sub    rax,rbx
  4052f4:	cmp    rax,0x103
  4052fa:	mov    r14,rax
  4052fd:	ja     0x405351
  4052ff:	lea    r9,[rsp+0x70]
  405304:	mov    r8,rax
  405307:	mov    rdx,rbx
  40530a:	mov    rcx,r9
  40530d:	call   0x4185a0
  405312:	mov    BYTE PTR [rsp+r14*1+0x70],0x0
  405318:	mov    rdx,r13
  40531b:	mov    rcx,rax
  40531e:	call   rsi
  405320:	test   eax,eax
  405322:	jne    0x405351
  405324:	movzx  eax,WORD PTR [rsp+0x36]
  405329:	and    ax,0xf000
  40532d:	cmp    ax,0x4000
  405331:	jne    0x405351
  405333:	mov    edx,0xffff8000
  405338:	mov    WORD PTR [rsp+0x36],dx
  40533d:	mov    rcx,rbx
  405340:	call   0x4184b8
  405345:	mov    DWORD PTR [r12],edi
  405349:	mov    rax,rbx
  40534c:	jmp    0x40512b
  405351:	mov    r12,QWORD PTR [rbp+0x28]
  405355:	mov    rbp,QWORD PTR [rip+0x148c4]        # 0x419c20
  40535c:	mov    rsi,QWORD PTR [rip+0x20375]        # 0x4256d8
  405363:	call   rsi
  405365:	lea    rcx,[rax+0x60]
  405369:	mov    r8,r12
  40536c:	mov    rdx,rbp
  40536f:	call   0x402710
  405374:	call   r15
  405377:	mov    ecx,DWORD PTR [rax]
  405379:	call   0x418548
  40537e:	mov    r13,rax
  405381:	call   r15
  405384:	mov    rbp,QWORD PTR [rip+0x14815]        # 0x419ba0
  40538b:	mov    r12d,DWORD PTR [rax]
  40538e:	call   rsi
  405390:	lea    rcx,[rax+0x60]
  405394:	mov    QWORD PTR [rsp+0x20],rbx
  405399:	mov    r9,r13
  40539c:	mov    r8d,r12d
  40539f:	mov    rdx,rbp
  4053a2:	call   0x402710
  4053a7:	test   edi,edi
  4053a9:	jne    0x4052c0
  4053af:	xor    eax,eax
  4053b1:	jmp    0x40512b
  4053b6:	mov    rcx,rbx
  4053b9:	call   0x4185e0
  4053be:	jmp    0x405275
  4053c3:	mov    rbx,QWORD PTR [rip+0x20356]        # 0x425720
  4053ca:	call   rbx
  4053cc:	cmp    DWORD PTR [rax],0x2
  4053cf:	jne    0x40543e
  4053d1:	mov    eax,0xffff8000
  4053d6:	mov    rbx,r15
  4053d9:	mov    edi,0x1
  4053de:	mov    WORD PTR [rsp+0x36],ax
  4053e3:	jmp    0x40533d
  4053e8:	mov    rcx,r13
  4053eb:	call   0x4185c0
  4053f0:	test   rax,rax
  4053f3:	mov    rbx,rax
  4053f6:	jne    0x4050c5
  4053fc:	mov    rsi,QWORD PTR [rip+0x1481d]        # 0x419c20
  405403:	mov    rdi,QWORD PTR [rbp+0x28]
  405407:	mov    rbx,QWORD PTR [rip+0x202ca]        # 0x4256d8
  40540e:	call   rbx
  405410:	lea    rcx,[rax+0x60]
  405414:	mov    rdx,rsi
  405417:	mov    r8,rdi
  40541a:	call   0x402710
  40541f:	mov    rsi,QWORD PTR [rip+0x1479a]        # 0x419bc0
  405426:	call   rbx
  405428:	lea    rcx,[rax+0x60]
  40542c:	mov    r8,r13
  40542f:	mov    rdx,rsi
  405432:	call   0x402710
  405437:	xor    eax,eax
  405439:	jmp    0x40512b
  40543e:	mov    rbp,QWORD PTR [rbp+0x28]
  405442:	mov    rdi,QWORD PTR [rip+0x147d7]        # 0x419c20
  405449:	mov    rsi,QWORD PTR [rip+0x20288]        # 0x4256d8
  405450:	call   rsi
  405452:	lea    rcx,[rax+0x60]
  405456:	mov    r8,rbp
  405459:	mov    rdx,rdi
  40545c:	call   0x402710
  405461:	call   rbx
  405463:	mov    ecx,DWORD PTR [rax]
  405465:	call   0x418548
  40546a:	mov    rbp,rax
  40546d:	call   rbx
  40546f:	mov    rbx,QWORD PTR [rip+0x1472a]        # 0x419ba0
  405476:	mov    edi,DWORD PTR [rax]
  405478:	call   rsi
  40547a:	lea    rcx,[rax+0x60]
  40547e:	mov    r9,rbp
  405481:	mov    QWORD PTR [rsp+0x20],r15
  405486:	mov    r8d,edi
  405489:	mov    rdx,rbx
  40548c:	call   0x402710
  405491:	mov    rcx,r15
  405494:	call   0x4185e0
  405499:	xor    eax,eax
  40549b:	jmp    0x40512b
  4054a0:	mov    rbx,r15
  4054a3:	mov    edi,0x1
  4054a8:	jmp    0x40533d
  4054ad:	mov    ecx,0x1
  4054b2:	call   0x402b50
  4054b7:	nop
  4054b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4054c0:	push   r15
  4054c2:	push   r14
  4054c4:	push   r13
  4054c6:	push   r12
  4054c8:	push   rbp
  4054c9:	push   rdi
  4054ca:	push   rsi
  4054cb:	push   rbx
  4054cc:	sub    rsp,0x148
  4054d3:	test   rcx,rcx
  4054d6:	mov    rsi,rcx
  4054d9:	mov    rbx,rdx
  4054dc:	je     0x405589
  4054e2:	lea    r12,[rsp+0x30]
  4054e7:	xor    r13d,r13d
  4054ea:	mov    rcx,rsi
  4054ed:	call   0x418538
  4054f2:	mov    edx,r13d
  4054f5:	cmp    rdx,rax
  4054f8:	jae    0x405589
  4054fe:	movsxd rax,r13d
  405501:	add    rax,rsi
  405504:	movzx  edx,BYTE PTR [rax]
  405507:	cmp    dl,0x3a
  40550a:	jne    0x40551c
  40550c:	nop    DWORD PTR [rax+0x0]
  405510:	add    rax,0x1
  405514:	movzx  edx,BYTE PTR [rax]
  405517:	cmp    dl,0x3a
  40551a:	je     0x405510
  40551c:	mov    rcx,r12
  40551f:	add    rax,0x1
  405523:	test   dl,dl
  405525:	mov    BYTE PTR [rcx],dl
  405527:	je     0x405531
  405529:	cmp    dl,0x3a
  40552c:	jne    0x405591
  40552e:	mov    BYTE PTR [rcx],0x0
  405531:	mov    r13d,eax
  405534:	sub    r13d,esi
  405537:	cmp    BYTE PTR [rsp+0x30],0x0
  40553c:	je     0x405589
  40553e:	mov    rcx,r12
  405541:	call   0x413060
  405546:	test   rax,rax
  405549:	mov    rdi,rax
  40554c:	jne    0x405560
  40554e:	jmp    0x4054ea
  405550:	lea    rcx,[rax+0x8]
  405554:	mov    rdx,rbx
  405557:	call   0x418558
  40555c:	test   eax,eax
  40555e:	je     0x4055b0
  405560:	mov    rcx,rdi
  405563:	call   0x413240
  405568:	test   rax,rax
  40556b:	jne    0x405550
  40556d:	mov    rcx,rdi
  405570:	call   0x413460
  405575:	mov    rcx,rsi
  405578:	call   0x418538
  40557d:	mov    edx,r13d
  405580:	cmp    rdx,rax
  405583:	jb     0x4054fe
  405589:	xor    r14d,r14d
  40558c:	jmp    0x40578e
  405591:	add    rcx,0x1
  405595:	mov    rdx,rcx
  405598:	sub    rdx,r12
  40559b:	cmp    edx,0x103
  4055a1:	ja     0x405531
  4055a3:	movzx  edx,BYTE PTR [rax]
  4055a6:	jmp    0x40551f
  4055ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4055b0:	cmp    BYTE PTR [rbx],0x2f
  4055b3:	je     0x4057cb
  4055b9:	cmp    BYTE PTR [rsp+0x30],0x0
  4055be:	jne    0x4057db
  4055c4:	mov    rcx,rbx
  4055c7:	call   0x418538
  4055cc:	lea    rcx,[rax+0x3]
  4055d0:	call   0x4185a8
  4055d5:	lea    rcx,[rax+0x2]
  4055d9:	mov    rbp,rax
  4055dc:	mov    BYTE PTR [rax],0x2e
  4055df:	mov    BYTE PTR [rax+0x1],0x2f
  4055e3:	mov    BYTE PTR [rax+0x2],0x0
  4055e7:	mov    rdx,rbx
  4055ea:	call   0x418550
  4055ef:	mov    rcx,rbp
  4055f2:	mov    edx,0x5
  4055f7:	call   0x418480
  4055fc:	test   eax,eax
  4055fe:	mov    rcx,rbp
  405601:	js     0x4057b1
  405607:	call   0x4184a8
  40560c:	cmp    BYTE PTR [rbp+0x0],0x2f
  405610:	mov    r14,rax
  405613:	sete   BYTE PTR [rsp+0x2f]
  405618:	movzx  eax,BYTE PTR [rsp+0x2f]
  40561d:	xor    r15d,r15d
  405620:	xor    r13d,r13d
  405623:	add    eax,0x2e
  405626:	mov    BYTE PTR [rsp+0x2f],al
  40562a:	movzx  eax,BYTE PTR [r14]
  40562e:	xchg   ax,ax
  405630:	test   al,al
  405632:	mov    rbx,r13
  405635:	je     0x405767
  40563b:	cmp    al,0x2f
  40563d:	je     0x4057a5
  405643:	add    rbx,0x1
  405647:	mov    esi,r15d
  40564a:	jmp    0x405657
  40564c:	nop    DWORD PTR [rax+0x0]
  405650:	test   dl,dl
  405652:	je     0x405668
  405654:	mov    rbx,rcx
  405657:	movzx  edx,BYTE PTR [r14+rbx*1]
  40565c:	add    esi,0x1
  40565f:	lea    rcx,[rbx+0x1]
  405663:	cmp    dl,0x2f
  405666:	jne    0x405650
  405668:	test   dl,dl
  40566a:	lea    r15d,[rsi+0x1]
  40566e:	je     0x405767
  405674:	movsxd r13,r15d
  405677:	lea    r12,[r14+r13*1]
  40567b:	movzx  eax,BYTE PTR [r12]
  405680:	cmp    al,0x2f
  405682:	jne    0x4056b6
  405684:	lea    r8,[r14+r13*1+0x1]
  405689:	mov    r9d,r15d
  40568c:	nop    DWORD PTR [rax+0x0]
  405690:	mov    rdx,r8
  405693:	add    r8,0x1
  405697:	add    r9d,0x1
  40569b:	cmp    BYTE PTR [r8-0x1],0x2f
  4056a0:	je     0x405690
  4056a2:	cmp    r15d,r9d
  4056a5:	je     0x4056b6
  4056a7:	lea    rcx,[r14+rbx*1+0x1]
  4056ac:	call   0x418550
  4056b1:	movzx  eax,BYTE PTR [r12]
  4056b6:	test   esi,esi
  4056b8:	je     0x4056ce
  4056ba:	cmp    BYTE PTR [r14+rbx*1-0x1],0x5c
  4056c0:	je     0x405630
  4056c6:	test   al,al
  4056c8:	je     0x405859
  4056ce:	cmp    al,0x2e
  4056d0:	jne    0x405630
  4056d6:	lea    rdx,[r14+r13*1+0x1]
  4056db:	movzx  ecx,BYTE PTR [rdx]
  4056de:	test   cl,cl
  4056e0:	je     0x405859
  4056e6:	cmp    cl,0x2f
  4056e9:	je     0x4057c3
  4056ef:	cmp    cl,0x2e
  4056f2:	jne    0x405630
  4056f8:	lea    rdx,[r14+r13*1+0x2]
  4056fd:	movzx  ecx,BYTE PTR [rdx]
  405700:	test   cl,cl
  405702:	je     0x40570d
  405704:	cmp    cl,0x2f
  405707:	jne    0x405630
  40570d:	movsxd rcx,esi
  405710:	sub    rcx,0x1
  405714:	jmp    0x40572f
  405716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405720:	lea    rax,[rcx-0x1]
  405724:	cmp    BYTE PTR [r14+rax*1+0x1],0x2f
  40572a:	je     0x40573e
  40572c:	mov    rcx,rax
  40572f:	sub    esi,0x1
  405732:	cmp    esi,0xffffffff
  405735:	jne    0x405720
  405737:	mov    rcx,0xffffffffffffffff
  40573e:	lea    rcx,[r14+rcx*1+0x1]
  405743:	call   0x418550
  405748:	mov    r15d,0x0
  40574e:	test   esi,esi
  405750:	cmovns r15d,esi
  405754:	movsxd r13,r15d
  405757:	movzx  eax,BYTE PTR [r14+r13*1]
  40575c:	mov    rbx,r13
  40575f:	test   al,al
  405761:	jne    0x40563b
  405767:	cmp    BYTE PTR [r14],0x0
  40576b:	jne    0x40586e
  405771:	movzx  eax,BYTE PTR [rsp+0x2f]
  405776:	mov    rcx,rbp
  405779:	mov    BYTE PTR [r14+0x1],0x0
  40577e:	mov    BYTE PTR [r14],al
  405781:	call   0x4185e0
  405786:	mov    rcx,rdi
  405789:	call   0x413460
  40578e:	mov    rax,r14
  405791:	add    rsp,0x148
  405798:	pop    rbx
  405799:	pop    rsi
  40579a:	pop    rdi
  40579b:	pop    rbp
  40579c:	pop    r12
  40579e:	pop    r13
  4057a0:	pop    r14
  4057a2:	pop    r15
  4057a4:	ret    
  4057a5:	mov    esi,r15d
  4057a8:	add    r15d,0x1
  4057ac:	jmp    0x405674
  4057b1:	call   0x4185e0
  4057b6:	mov    rcx,rdi
  4057b9:	call   0x413460
  4057be:	jmp    0x405575
  4057c3:	mov    rcx,r12
  4057c6:	jmp    0x405743
  4057cb:	mov    rcx,rbx
  4057ce:	call   0x4184a8
  4057d3:	mov    rbp,rax
  4057d6:	jmp    0x4055ef
  4057db:	mov    r14,r12
  4057de:	mov    edx,DWORD PTR [r14]
  4057e1:	add    r14,0x4
  4057e5:	lea    eax,[rdx-0x1010101]
  4057eb:	not    edx
  4057ed:	and    eax,edx
  4057ef:	and    eax,0x80808080
  4057f4:	je     0x4057de
  4057f6:	mov    edx,eax
  4057f8:	mov    rcx,rbx
  4057fb:	shr    edx,0x10
  4057fe:	test   eax,0x8080
  405803:	cmove  eax,edx
  405806:	lea    rdx,[r14+0x2]
  40580a:	cmove  r14,rdx
  40580e:	add    al,al
  405810:	sbb    r14,0x3
  405814:	sub    r14,r12
  405817:	call   0x418538
  40581c:	lea    rcx,[r14+rax*1+0x2]
  405821:	call   0x4185a8
  405826:	lea    r8,[r14+0x1]
  40582a:	mov    rcx,rax
  40582d:	mov    rdx,r12
  405830:	mov    rbp,rax
  405833:	call   0x4185a0
  405838:	movsxd rcx,r14d
  40583b:	cmp    BYTE PTR [rbp+rcx*1-0x1],0x2f
  405840:	je     0x405883
  405842:	mov    BYTE PTR [rbp+rcx*1+0x0],0x2f
  405847:	lea    ecx,[r14+0x1]
  40584b:	movsxd rcx,ecx
  40584e:	add    rcx,rbp
  405851:	mov    BYTE PTR [rcx],0x0
  405854:	jmp    0x4055e7
  405859:	lea    eax,[r15-0x1]
  40585d:	cdqe   
  40585f:	mov    BYTE PTR [r14+rax*1],0x0
  405864:	cmp    BYTE PTR [r14],0x0
  405868:	je     0x405771
  40586e:	mov    rcx,rbp
  405871:	call   0x4185e0
  405876:	mov    rcx,rdi
  405879:	call   0x413460
  40587e:	jmp    0x40578e
  405883:	add    rcx,rbp
  405886:	jmp    0x4055e7
  40588b:	nop    DWORD PTR [rax+rax*1+0x0]
  405890:	push   r12
  405892:	push   rbp
  405893:	push   rdi
  405894:	push   rsi
  405895:	push   rbx
  405896:	sub    rsp,0x30
  40589a:	test   rcx,rcx
  40589d:	mov    rbx,rcx
  4058a0:	mov    rdi,rdx
  4058a3:	je     0x405a28
  4058a9:	mov    r9d,DWORD PTR [rcx+0x10]
  4058ad:	mov    eax,r9d
  4058b0:	shr    eax,0x15
  4058b3:	and    eax,0x1
  4058b6:	test   r9d,0x2000
  4058bd:	mov    BYTE PTR [rip+0x1dbb1],al        # 0x423474
  4058c3:	je     0x4058f2
  4058c5:	mov    rax,QWORD PTR [rcx+0xa0]
  4058cc:	test   rax,rax
  4058cf:	je     0x4058f2
  4058d1:	mov    edx,DWORD PTR [rip+0x14169]        # 0x419a40
  4058d7:	test   edx,edx
  4058d9:	je     0x4058f2
  4058db:	mov    edx,r9d
  4058de:	and    edx,0x30000
  4058e4:	cmp    edx,0x20000
  4058ea:	je     0x405981
  4058f0:	call   rax
  4058f2:	mov    esi,DWORD PTR [rbx]
  4058f4:	lea    eax,[rsi-0x19000]
  4058fa:	cmp    eax,0x10001
  4058ff:	ja     0x405999
  405905:	cmp    QWORD PTR [rbx+0x28],0x0
  40590a:	je     0x405920
  40590c:	xor    eax,eax
  40590e:	add    rsp,0x30
  405912:	pop    rbx
  405913:	pop    rsi
  405914:	pop    rdi
  405915:	pop    rbp
  405916:	pop    r12
  405918:	ret    
  405919:	nop    DWORD PTR [rax+0x0]
  405920:	mov    edx,0x5c
  405925:	mov    rcx,rdi
  405928:	call   0x418518
  40592d:	test   rax,rax
  405930:	je     0x405993
  405932:	add    rax,0x1
  405936:	mov    QWORD PTR [rbx+0x28],rax
  40593a:	lea    rcx,[rip+0x152a1]        # 0x41abe2
  405941:	call   0x4185c0
  405946:	mov    rdx,rdi
  405949:	mov    rcx,rax
  40594c:	call   0x4054c0
  405951:	test   rax,rax
  405954:	lea    rdx,[rip+0x16625]        # 0x41bf80
  40595b:	lea    rcx,[rip+0x13c9e]        # 0x419600
  405962:	cmove  rax,rdi
  405966:	mov    QWORD PTR [rbx+0x20],rax
  40596a:	mov    eax,0x2d
  40596f:	nop
  405970:	add    rdx,0x1
  405974:	mov    BYTE PTR [rcx+rax*1],0x2d
  405978:	movzx  eax,BYTE PTR [rdx]
  40597b:	test   al,al
  40597d:	jne    0x405970
  40597f:	jmp    0x40590c
  405981:	or     r9d,0x10000
  405988:	mov    DWORD PTR [rcx+0x10],r9d
  40598c:	call   rax
  40598e:	jmp    0x4058f2
  405993:	mov    QWORD PTR [rbx+0x28],rdi
  405997:	jmp    0x40593a
  405999:	mov    r12,QWORD PTR [rip+0x140e0]        # 0x419a80
  4059a0:	mov    rbp,QWORD PTR [rip+0x1fd31]        # 0x4256d8
  4059a7:	call   rbp
  4059a9:	lea    rcx,[rax+0x60]
  4059ad:	mov    eax,esi
  4059af:	mov    r8,rdi
  4059b2:	and    eax,0x7f
  4059b5:	mov    rdx,r12
  4059b8:	mov    DWORD PTR [rsp+0x28],eax
  4059bc:	mov    eax,esi
  4059be:	sar    esi,0xc
  4059c1:	sar    eax,0x7
  4059c4:	mov    r9d,esi
  4059c7:	and    eax,0x1f
  4059ca:	mov    DWORD PTR [rsp+0x20],eax
  4059ce:	call   0x402710
  4059d3:	cmp    DWORD PTR [rbx],0x29001
  4059d9:	jle    0x405a14
  4059db:	call   rbp
  4059dd:	mov    rcx,QWORD PTR [rip+0x14094]        # 0x419a78
  4059e4:	lea    rdx,[rax+0x60]
  4059e8:	call   0x4185f0
  4059ed:	call   rbp
  4059ef:	lea    rcx,[rip+0x19087]        # 0x41ea7d
  4059f6:	lea    r9,[rax+0x60]
  4059fa:	mov    r8d,0x1
  405a00:	mov    edx,0x8
  405a05:	call   0x4185c8
  405a0a:	mov    eax,0xffffffff
  405a0f:	jmp    0x40590e
  405a14:	call   rbp
  405a16:	mov    rcx,QWORD PTR [rip+0x14073]        # 0x419a90
  405a1d:	lea    rdx,[rax+0x60]
  405a21:	call   0x4185f0
  405a26:	jmp    0x4059ed
  405a28:	call   QWORD PTR [rip+0x1fcaa]        # 0x4256d8
  405a2e:	mov    rcx,QWORD PTR [rip+0x1403b]        # 0x419a70
  405a35:	lea    rdx,[rax+0x60]
  405a39:	call   0x4185f0
  405a3e:	mov    eax,0xffffffff
  405a43:	jmp    0x40590e
  405a48:	nop    DWORD PTR [rax+rax*1+0x0]
  405a50:	push   r15
  405a52:	push   r14
  405a54:	push   r13
  405a56:	push   r12
  405a58:	push   rbp
  405a59:	push   rdi
  405a5a:	push   rsi
  405a5b:	push   rbx
  405a5c:	sub    rsp,0x98
  405a63:	test   BYTE PTR [rcx+0x12],0x4
  405a67:	mov    rbx,rcx
  405a6a:	mov    rdi,rdx
  405a6d:	mov    rbp,r8
  405a70:	je     0x405a7d
  405a72:	cmp    WORD PTR [rdx+0x6],0x57
  405a77:	je     0x405e8e
  405a7d:	cmp    QWORD PTR [rdi+0x28],0x0
  405a82:	je     0x405d70
  405a88:	mov    eax,DWORD PTR [rip+0x1d9e2]        # 0x423470
  405a8e:	lea    rsi,[rip+0x164eb]        # 0x41bf80
  405a95:	mov    rdx,QWORD PTR [rip+0x1d9ac]        # 0x423448
  405a9c:	lea    rcx,[rsi+rax*1+0xcb]
  405aa4:	call   0x4185f0
  405aa9:	mov    rbp,QWORD PTR [rdi+0x28]
  405aad:	test   rbp,rbp
  405ab0:	je     0x405b42
  405ab6:	cmp    DWORD PTR [rbp+0x4],0x8000
  405abd:	je     0x405d80
  405ac3:	mov    rdx,QWORD PTR [rip+0x1d97e]        # 0x423448
  405aca:	mov    rcx,QWORD PTR [rip+0x14297]        # 0x419d68
  405ad1:	call   0x4185f0
  405ad6:	movsxd rax,DWORD PTR [rbp+0x0]
  405ada:	nop    WORD PTR [rax+rax*1+0x0]
  405ae0:	lea    rdx,[rax+rax*2]
  405ae4:	mov    r9,QWORD PTR [rbx+0x78]
  405ae8:	mov    rcx,QWORD PTR [rip+0x1d959]        # 0x423448
  405aef:	add    rbp,0x4
  405af3:	lea    rax,[rax+rdx*4]
  405af7:	mov    edx,DWORD PTR [rip+0x1d973]        # 0x423470
  405afd:	lea    rax,[r9+rax*8]
  405b01:	mov    r8,QWORD PTR [rax+0x50]
  405b05:	lea    rdx,[rsi+rdx*1+0xe5]
  405b0d:	call   0x402710
  405b12:	movsxd rax,DWORD PTR [rbp+0x0]
  405b16:	cmp    eax,0x8000
  405b1b:	jne    0x405ae0
  405b1d:	cmp    QWORD PTR [rdi+0x30],0x0
  405b22:	je     0x405bad
  405b28:	mov    eax,DWORD PTR [rip+0x1d942]        # 0x423470
  405b2e:	mov    rdx,QWORD PTR [rip+0x1d913]        # 0x423448
  405b35:	lea    rcx,[rsi+rax*1+0xd9]
  405b3d:	call   0x4185f0
  405b42:	mov    rbp,QWORD PTR [rdi+0x30]
  405b46:	test   rbp,rbp
  405b49:	je     0x405bad
  405b4b:	cmp    DWORD PTR [rbp+0x4],0x8000
  405b52:	je     0x405e12
  405b58:	mov    rdx,QWORD PTR [rip+0x1d8e9]        # 0x423448
  405b5f:	mov    rcx,QWORD PTR [rip+0x141a2]        # 0x419d08
  405b66:	call   0x4185f0
  405b6b:	movsxd rax,DWORD PTR [rbp+0x0]
  405b6f:	nop
  405b70:	lea    rdx,[rax+rax*2]
  405b74:	mov    rcx,QWORD PTR [rbx+0x78]
  405b78:	add    rbp,0x4
  405b7c:	lea    rax,[rax+rdx*4]
  405b80:	mov    edx,DWORD PTR [rip+0x1d8ea]        # 0x423470
  405b86:	lea    rax,[rcx+rax*8]
  405b8a:	mov    rcx,QWORD PTR [rip+0x1d8b7]        # 0x423448
  405b91:	mov    r8,QWORD PTR [rax+0x50]
  405b95:	lea    rdx,[rsi+rdx*1+0xe5]
  405b9d:	call   0x402710
  405ba2:	movsxd rax,DWORD PTR [rbp+0x0]
  405ba6:	cmp    eax,0x8000
  405bab:	jne    0x405b70
  405bad:	mov    r8,QWORD PTR [rdi+0x58]
  405bb1:	test   r8,r8
  405bb4:	je     0x405bcf
  405bb6:	mov    edx,DWORD PTR [rip+0x1d8b4]        # 0x423470
  405bbc:	mov    rcx,QWORD PTR [rip+0x1d885]        # 0x423448
  405bc3:	add    rdx,QWORD PTR [rip+0x14076]        # 0x419c40
  405bca:	call   0x402710
  405bcf:	mov    edx,DWORD PTR [rdi+0x10]
  405bd2:	mov    eax,edx
  405bd4:	and    eax,0xf000
  405bd9:	shr    eax,0xc
  405bdc:	cmp    eax,0x5
  405bdf:	je     0x405d40
  405be5:	cmp    eax,0x7
  405be8:	je     0x405cc0
  405bee:	and    dh,0x8
  405bf1:	jne    0x405cd7
  405bf7:	movzx  eax,WORD PTR [rdi+0x8]
  405bfb:	cmp    ax,0x8000
  405bff:	je     0x405c0b
  405c01:	cmp    ax,WORD PTR [rdi+0x4]
  405c05:	jne    0x405cf5
  405c0b:	mov    eax,DWORD PTR [rdi+0x10]
  405c0e:	test   ah,0x1
  405c11:	je     0x405c2d
  405c13:	cmp    QWORD PTR [rbx+0x58],0x0
  405c18:	je     0x405e7e
  405c1e:	movzx  edx,WORD PTR [rdi]
  405c21:	cmp    edx,DWORD PTR [rbx+0xb4]
  405c27:	jl     0x405df1
  405c2d:	and    eax,0xf000
  405c32:	cmp    eax,0x4000
  405c37:	je     0x405e60
  405c3d:	movzx  r8d,WORD PTR [rdi+0xa]
  405c42:	cmp    r8w,0x1
  405c47:	ja     0x405db0
  405c4d:	movzx  r8d,WORD PTR [rdi+0xc]
  405c52:	cmp    r8w,0x1
  405c57:	je     0x405c83
  405c59:	jb     0x405e42
  405c5f:	cmp    r8w,0xffff
  405c64:	jne    0x405dd3
  405c6a:	mov    ecx,DWORD PTR [rip+0x1d800]        # 0x423470
  405c70:	mov    rdx,QWORD PTR [rip+0x1d7d1]        # 0x423448
  405c77:	add    rcx,QWORD PTR [rip+0x14032]        # 0x419cb0
  405c7e:	call   0x4185f0
  405c83:	test   BYTE PTR [rbx+0x10],0x3
  405c87:	jne    0x405d23
  405c8d:	movzx  eax,WORD PTR [rdi]
  405c90:	cmp    WORD PTR [rbx+0xae],ax
  405c97:	jne    0x405d23
  405c9d:	mov    ecx,DWORD PTR [rip+0x1d7cd]        # 0x423470
  405ca3:	mov    rdx,QWORD PTR [rip+0x1d79e]        # 0x423448
  405caa:	add    rcx,QWORD PTR [rip+0x13f87]        # 0x419c38
  405cb1:	call   0x4185f0
  405cb6:	jmp    0x405d23
  405cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  405cc0:	mov    rdx,rdi
  405cc3:	mov    ecx,0x1
  405cc8:	call   QWORD PTR [rdi+0x38]
  405ccb:	mov    edx,DWORD PTR [rdi+0x10]
  405cce:	and    dh,0x8
  405cd1:	je     0x405bf7
  405cd7:	mov    ecx,DWORD PTR [rip+0x1d793]        # 0x423470
  405cdd:	mov    rdx,QWORD PTR [rip+0x1d764]        # 0x423448
  405ce4:	add    rcx,QWORD PTR [rip+0x13f6d]        # 0x419c58
  405ceb:	call   0x4185f0
  405cf0:	jmp    0x405bf7
  405cf5:	lea    rdx,[rax+rax*2]
  405cf9:	mov    rcx,QWORD PTR [rip+0x1d748]        # 0x423448
  405d00:	lea    rax,[rax+rdx*4]
  405d04:	mov    rdx,QWORD PTR [rbx+0x78]
  405d08:	lea    rax,[rdx+rax*8]
  405d0c:	mov    edx,DWORD PTR [rip+0x1d75e]        # 0x423470
  405d12:	add    rdx,QWORD PTR [rip+0x13f0f]        # 0x419c28
  405d19:	mov    r8,QWORD PTR [rax+0x50]
  405d1d:	call   0x402710
  405d22:	nop
  405d23:	add    rsp,0x98
  405d2a:	pop    rbx
  405d2b:	pop    rsi
  405d2c:	pop    rdi
  405d2d:	pop    rbp
  405d2e:	pop    r12
  405d30:	pop    r13
  405d32:	pop    r14
  405d34:	pop    r15
  405d36:	ret    
  405d37:	nop    WORD PTR [rax+rax*1+0x0]
  405d40:	mov    rax,QWORD PTR [rdi+0x38]
  405d44:	test   rax,rax
  405d47:	je     0x405bee
  405d4d:	lea    rcx,[rip+0xffffffffffffc9ec]        # 0x402740
  405d54:	cmp    rax,rcx
  405d57:	je     0x405bee
  405d5d:	mov    rdx,rdi
  405d60:	mov    ecx,0x1
  405d65:	call   rax
  405d67:	mov    edx,DWORD PTR [rdi+0x10]
  405d6a:	jmp    0x405bee
  405d6f:	nop
  405d70:	cmp    QWORD PTR [rdi+0x30],0x0
  405d75:	jne    0x405a88
  405d7b:	jmp    0x405bad
  405d80:	movsxd rax,DWORD PTR [rbp+0x0]
  405d84:	mov    r10,QWORD PTR [rbx+0x78]
  405d88:	mov    rcx,QWORD PTR [rip+0x1d6b9]        # 0x423448
  405d8f:	lea    rdx,[rax+rax*2]
  405d93:	lea    rax,[rax+rdx*4]
  405d97:	mov    rdx,QWORD PTR [rip+0x13fc2]        # 0x419d60
  405d9e:	lea    rax,[r10+rax*8]
  405da2:	mov    r8,QWORD PTR [rax+0x50]
  405da6:	call   0x402710
  405dab:	jmp    0x405b1d
  405db0:	mov    edx,DWORD PTR [rip+0x1d6ba]        # 0x423470
  405db6:	movzx  r9d,WORD PTR [rdi+0xc]
  405dbb:	add    rdx,QWORD PTR [rip+0x13ede]        # 0x419ca0
  405dc2:	mov    rcx,QWORD PTR [rip+0x1d67f]        # 0x423448
  405dc9:	call   0x402710
  405dce:	jmp    0x405c83
  405dd3:	mov    edx,DWORD PTR [rip+0x1d697]        # 0x423470
  405dd9:	mov    rcx,QWORD PTR [rip+0x1d668]        # 0x423448
  405de0:	add    rdx,QWORD PTR [rip+0x13fa1]        # 0x419d88
  405de7:	call   0x402710
  405dec:	jmp    0x405c83
  405df1:	mov    ecx,DWORD PTR [rip+0x1d679]        # 0x423470
  405df7:	mov    rdx,QWORD PTR [rip+0x1d64a]        # 0x423448
  405dfe:	add    rcx,QWORD PTR [rip+0x13eb3]        # 0x419cb8
  405e05:	call   0x4185f0
  405e0a:	mov    eax,DWORD PTR [rdi+0x10]
  405e0d:	jmp    0x405c2d
  405e12:	movsxd rax,DWORD PTR [rbp+0x0]
  405e16:	mov    r8,QWORD PTR [rbx+0x78]
  405e1a:	mov    rcx,QWORD PTR [rip+0x1d627]        # 0x423448
  405e21:	lea    rdx,[rax+rax*2]
  405e25:	lea    rax,[rax+rdx*4]
  405e29:	mov    rdx,QWORD PTR [rip+0x13ee0]        # 0x419d10
  405e30:	lea    rax,[r8+rax*8]
  405e34:	mov    r8,QWORD PTR [rax+0x50]
  405e38:	call   0x402710
  405e3d:	jmp    0x405bad
  405e42:	mov    ecx,DWORD PTR [rip+0x1d628]        # 0x423470
  405e48:	mov    rdx,QWORD PTR [rip+0x1d5f9]        # 0x423448
  405e4f:	add    rcx,QWORD PTR [rip+0x13ea2]        # 0x419cf8
  405e56:	call   0x4185f0
  405e5b:	jmp    0x405c83
  405e60:	mov    ecx,DWORD PTR [rip+0x1d60a]        # 0x423470
  405e66:	mov    rdx,QWORD PTR [rip+0x1d5db]        # 0x423448
  405e6d:	add    rcx,QWORD PTR [rip+0x13e24]        # 0x419c98
  405e74:	call   0x4185f0
  405e79:	jmp    0x405c83
  405e7e:	cmp    QWORD PTR [rbx+0x30],0x0
  405e83:	jne    0x405c1e
  405e89:	jmp    0x405c2d
  405e8e:	mov    eax,DWORD PTR [rip+0x1d5dc]        # 0x423470
  405e94:	lea    rdx,[rip+0x160e5]        # 0x41bf80
  405e9b:	mov    edi,DWORD PTR [rcx+0xb4]
  405ea1:	mov    rsi,QWORD PTR [rcx+0x78]
  405ea5:	mov    r8,QWORD PTR [rip+0x13ef4]        # 0x419da0
  405eac:	xor    r12d,r12d
  405eaf:	mov    rcx,QWORD PTR [rip+0x1d592]        # 0x423448
  405eb6:	lea    rdx,[rdx+rax*1+0xe5]
  405ebe:	call   0x402710
  405ec3:	test   DWORD PTR [rsi+0x10],0x6280000
  405eca:	jne    0x405ef2
  405ecc:	movzx  eax,BYTE PTR [rsi+0x2]
  405ed0:	cmp    al,0x7f
  405ed2:	ja     0x405ee2
  405ed4:	lea    rdx,[rip+0x18ca5]        # 0x41eb80
  405edb:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  405ee0:	jne    0x405ef2
  405ee2:	mov    rcx,QWORD PTR [rsi+0x50]
  405ee6:	call   0x418538
  405eeb:	cmp    r12,rax
  405eee:	cmovb  r12,rax
  405ef2:	sub    edi,0x1
  405ef5:	add    rsi,0x68
  405ef9:	test   edi,edi
  405efb:	jg     0x405ec3
  405efd:	lea    r14,[rsp+0x30]
  405f02:	lea    r9d,[r12+0x4]
  405f07:	lea    r8,[rip+0x15247]        # 0x41b155
  405f0e:	mov    edx,0xc
  405f13:	mov    rcx,r14
  405f16:	call   0x402b00
  405f1b:	mov    eax,DWORD PTR [rip+0x1d54f]        # 0x423470
  405f21:	test   eax,eax
  405f23:	je     0x405f2e
  405f25:	sub    eax,0x1
  405f28:	mov    DWORD PTR [rip+0x1d542],eax        # 0x423470
  405f2e:	mov    r15d,DWORD PTR [rbx+0xb4]
  405f35:	mov    rsi,QWORD PTR [rbx+0x78]
  405f39:	lea    r12,[rbx+0x10]
  405f3d:	lea    r13,[rsp+0x40]
  405f42:	test   DWORD PTR [rsi+0x10],0x6280000
  405f49:	jne    0x406020
  405f4f:	movzx  eax,BYTE PTR [rsi+0x2]
  405f53:	cmp    al,0x7f
  405f55:	ja     0x405f69
  405f57:	lea    rdx,[rip+0x18c22]        # 0x41eb80
  405f5e:	test   BYTE PTR [rdx+rax*4+0x1],0x40
  405f63:	jne    0x406020
  405f69:	lea    rdx,[rsi+0x2]
  405f6d:	lea    r9,[rip+0x1d5ec]        # 0x423560
  405f74:	lea    r8,[rip+0x1d5dd]        # 0x423558
  405f7b:	mov    rcx,r12
  405f7e:	call   0x403f80
  405f83:	mov    eax,DWORD PTR [rsi+0x10]
  405f86:	test   eax,0x10000
  405f8b:	je     0x406052
  405f91:	mov    rdi,QWORD PTR [rip+0x1d5a8]        # 0x423540
  405f98:	mov    rax,QWORD PTR [rip+0x1d641]        # 0x4235e0
  405f9f:	test   rax,rax
  405fa2:	jne    0x405fb4
  405fa4:	jmp    0x4060fd
  405fa9:	nop    DWORD PTR [rax+0x0]
  405fb0:	add    rdi,0x1
  405fb4:	movzx  ecx,BYTE PTR [rdi]
  405fb7:	cmp    BYTE PTR [rax+rcx*1],0x0
  405fbb:	jne    0x405fb0
  405fbd:	test   cl,cl
  405fbf:	mov    r9,QWORD PTR [rsi+0x50]
  405fc3:	jne    0x4060df
  405fc9:	lea    r8,[rip+0x14c17]        # 0x41abe7
  405fd0:	mov    edx,0x50
  405fd5:	mov    rcx,r13
  405fd8:	call   0x402b00
  405fdd:	mov    r9,QWORD PTR [rsi+0x40]
  405fe1:	mov    rcx,QWORD PTR [rip+0x1d460]        # 0x423448
  405fe8:	mov    r8,r13
  405feb:	mov    rdx,r14
  405fee:	call   0x402710
  405ff3:	mov    eax,DWORD PTR [rsi+0x10]
  405ff6:	and    eax,0xf000
  405ffb:	shr    eax,0xc
  405ffe:	cmp    eax,0x2
  406001:	je     0x406036
  406003:	cmp    eax,0x4
  406006:	je     0x406036
  406008:	mov    r8,rbp
  40600b:	mov    rdx,rsi
  40600e:	mov    rcx,rbx
  406011:	call   0x405a50
  406016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406020:	sub    r15d,0x1
  406024:	add    rsi,0x68
  406028:	test   r15d,r15d
  40602b:	jg     0x405f42
  406031:	jmp    0x405d23
  406036:	movzx  eax,BYTE PTR [rip+0x1d463]        # 0x4234a0
  40603d:	cmp    QWORD PTR [rsi+0x38],0x0
  406042:	mov    edx,0x1
  406047:	cmovne eax,edx
  40604a:	mov    BYTE PTR [rip+0x1d450],al        # 0x4234a0
  406050:	jmp    0x406008
  406052:	and    eax,0xf000
  406057:	shr    eax,0xc
  40605a:	cmp    eax,0x8
  40605d:	ja     0x40610c
  406063:	lea    rdi,[rip+0x14b86]        # 0x41abf0
  40606a:	movsxd rax,DWORD PTR [rdi+rax*4]
  40606e:	add    rax,rdi
  406071:	jmp    rax
  406073:	mov    rdi,QWORD PTR [rip+0x1d49e]        # 0x423518
  40607a:	jmp    0x405f98
  40607f:	mov    rdi,QWORD PTR [rip+0x1d4b2]        # 0x423538
  406086:	jmp    0x405f98
  40608b:	mov    rdi,QWORD PTR [rip+0x1d47e]        # 0x423510
  406092:	jmp    0x405f98
  406097:	mov    rdi,QWORD PTR [rip+0x1d48a]        # 0x423528
  40609e:	jmp    0x405f98
  4060a3:	mov    rdi,QWORD PTR [rip+0x1d486]        # 0x423530
  4060aa:	jmp    0x405f98
  4060af:	mov    rdi,QWORD PTR [rip+0x1d46a]        # 0x423520
  4060b6:	jmp    0x405f98
  4060bb:	mov    rdi,QWORD PTR [rip+0x1d43e]        # 0x423500
  4060c2:	jmp    0x405f98
  4060c7:	mov    rdi,QWORD PTR [rip+0x1d47a]        # 0x423548
  4060ce:	jmp    0x405f98
  4060d3:	mov    rdi,QWORD PTR [rip+0x1d496]        # 0x423570
  4060da:	jmp    0x405f98
  4060df:	lea    r8,[rip+0x14b04]        # 0x41abea
  4060e6:	mov    QWORD PTR [rsp+0x20],rdi
  4060eb:	mov    edx,0x50
  4060f0:	mov    rcx,r13
  4060f3:	call   0x402b00
  4060f8:	jmp    0x405fdd
  4060fd:	mov    ecx,0xc
  406102:	call   0x404060
  406107:	jmp    0x405fb4
  40610c:	mov    rdi,QWORD PTR [rsi+0x50]
  406110:	mov    rsi,QWORD PTR [rbx+0x28]
  406114:	mov    rbx,QWORD PTR [rip+0x13a35]        # 0x419b50
  40611b:	call   QWORD PTR [rip+0x1f5b7]        # 0x4256d8
  406121:	lea    rcx,[rax+0x60]
  406125:	mov    r9,rdi
  406128:	mov    r8,rsi
  40612b:	mov    rdx,rbx
  40612e:	call   0x402710
  406133:	mov    rcx,QWORD PTR [rip+0x13986]        # 0x419ac0
  40613a:	call   0x402b80
  40613f:	nop
  406140:	push   r15
  406142:	push   r14
  406144:	push   r13
  406146:	push   r12
  406148:	push   rbp
  406149:	push   rdi
  40614a:	push   rsi
  40614b:	push   rbx
  40614c:	sub    rsp,0x98
  406153:	mov    rax,QWORD PTR [rcx+0x78]
  406157:	mov    r13d,DWORD PTR [rcx+0xb0]
  40615e:	xor    r15d,r15d
  406161:	mov    rdi,rcx
  406164:	mov    ebp,edx
  406166:	mov    QWORD PTR [rsp+0xf0],r8
  40616e:	xor    r14d,r14d
  406171:	lea    rbx,[rax+0x2]
  406175:	lea    rax,[rcx+0x10]
  406179:	mov    QWORD PTR [rsp+0x38],rax
  40617e:	lea    rax,[rsp+0x40]
  406183:	mov    QWORD PTR [rsp+0x30],rax
  406188:	mov    eax,r15d
  40618b:	mov    r15d,r13d
  40618e:	mov    r13d,eax
  406191:	jmp    0x4061b3
  406193:	cmp    eax,0x80100
  406198:	je     0x406362
  40619e:	sub    r15d,0x1
  4061a2:	add    r13d,0x1
  4061a6:	add    rbx,0x68
  4061aa:	test   r15d,r15d
  4061ad:	jle    0x4063e0
  4061b3:	mov    eax,DWORD PTR [rbx+0xe]
  4061b6:	lea    rsi,[rbx-0x2]
  4061ba:	test   eax,0x6080000
  4061bf:	jne    0x406193
  4061c1:	test   eax,0x200000
  4061c6:	je     0x4061f1
  4061c8:	test   ebp,ebp
  4061ca:	jne    0x40619e
  4061cc:	mov    r9,QWORD PTR [rsp+0xf0]
  4061d4:	mov    r8,QWORD PTR [rbx+0x3e]
  4061d8:	add    r14d,0x1
  4061dc:	mov    rdx,QWORD PTR [rip+0x1d36d]        # 0x423550
  4061e3:	mov    rcx,QWORD PTR [rip+0x1d25e]        # 0x423448
  4061ea:	call   0x402710
  4061ef:	jmp    0x40619e
  4061f1:	mov    eax,DWORD PTR [rdi+0x10]
  4061f4:	and    eax,0x40000
  4061f9:	je     0x406211
  4061fb:	movzx  edx,BYTE PTR [rbx]
  4061fe:	cmp    dl,0x7f
  406201:	ja     0x40619e
  406203:	lea    rcx,[rip+0x18976]        # 0x41eb80
  40620a:	test   BYTE PTR [rcx+rdx*4+0x1],0x40
  40620f:	je     0x40619e
  406211:	test   ebp,ebp
  406213:	sete   r12b
  406217:	test   r14d,r14d
  40621a:	jle    0x406260
  40621c:	test   r12b,r12b
  40621f:	je     0x406260
  406221:	cmp    DWORD PTR [rdi+0xb4],r13d
  406228:	je     0x406410
  40622e:	cmp    r15d,0x1
  406232:	jne    0x406260
  406234:	test   eax,eax
  406236:	je     0x406260
  406238:	mov    r9,QWORD PTR [rsp+0xf0]
  406240:	mov    r8,QWORD PTR [rip+0x13b51]        # 0x419d98
  406247:	mov    rdx,QWORD PTR [rip+0x1d302]        # 0x423550
  40624e:	mov    rcx,QWORD PTR [rip+0x1d1f3]        # 0x423448
  406255:	call   0x402710
  40625a:	nop    WORD PTR [rax+rax*1+0x0]
  406260:	mov    rcx,QWORD PTR [rsp+0x38]
  406265:	lea    r9,[rip+0x1d2f4]        # 0x423560
  40626c:	lea    r8,[rip+0x1d2e5]        # 0x423558
  406273:	mov    rdx,rbx
  406276:	call   0x403f80
  40627b:	mov    eax,DWORD PTR [rbx+0xe]
  40627e:	mov    r9,QWORD PTR [rip+0x1d2bb]        # 0x423540
  406285:	test   eax,0x10000
  40628a:	jne    0x4062b4
  40628c:	and    eax,0xf000
  406291:	shr    eax,0xc
  406294:	cmp    eax,0x8
  406297:	ja     0x4064f7
  40629d:	lea    rdx,[rip+0x1497c]        # 0x41ac20
  4062a4:	movsxd rax,DWORD PTR [rdx+rax*4]
  4062a8:	add    rdx,rax
  4062ab:	jmp    rdx
  4062ad:	mov    r9,QWORD PTR [rip+0x1d2bc]        # 0x423570
  4062b4:	mov    r8,QWORD PTR [rip+0x1d2ad]        # 0x423568
  4062bb:	lea    rax,[rip+0x15d09]        # 0x41bfcb
  4062c2:	cmp    r8,rax
  4062c5:	je     0x4064a1
  4062cb:	lea    rax,[rip+0x15cfb]        # 0x41bfcd
  4062d2:	cmp    r8,rax
  4062d5:	je     0x4064d0
  4062db:	cmp    WORD PTR [rbx+0x8],0x0
  4062e0:	mov    rax,QWORD PTR [rip+0x1d259]        # 0x423540
  4062e7:	mov    edx,0x50
  4062ec:	cmovne rax,QWORD PTR [rip+0x1d214]        # 0x423508
  4062f4:	mov    rcx,QWORD PTR [rsp+0x30]
  4062f9:	mov    QWORD PTR [rsp+0x28],rax
  4062fe:	mov    rax,QWORD PTR [rbx+0x4e]
  406302:	mov    QWORD PTR [rsp+0x20],rax
  406307:	call   0x402b00
  40630c:	mov    r9,QWORD PTR [rbx+0x3e]
  406310:	mov    r8,QWORD PTR [rsp+0x30]
  406315:	lea    rdx,[rip+0x1d1a4]        # 0x4234c0
  40631c:	mov    rcx,QWORD PTR [rip+0x1d125]        # 0x423448
  406323:	call   0x402710
  406328:	mov    eax,DWORD PTR [rbx+0xe]
  40632b:	and    eax,0xf000
  406330:	shr    eax,0xc
  406333:	cmp    eax,0x2
  406336:	je     0x4063c0
  40633c:	cmp    eax,0x4
  40633f:	je     0x4063c0
  406341:	test   r12b,r12b
  406344:	je     0x40619e
  40634a:	mov    r8,QWORD PTR [rsp+0xf0]
  406352:	mov    rdx,rsi
  406355:	mov    rcx,rdi
  406358:	call   0x405a50
  40635d:	jmp    0x40619e
  406362:	cmp    QWORD PTR [rbx+0x4e],0x0
  406367:	je     0x40619e
  40636d:	test   ebp,ebp
  40636f:	jne    0x40619e
  406375:	mov    rsi,QWORD PTR [rbx+0x3e]
  406379:	mov    rcx,QWORD PTR [rsp+0x38]
  40637e:	lea    r9,[rip+0x1d1db]        # 0x423560
  406385:	lea    r8,[rip+0x1d1cc]        # 0x423558
  40638c:	mov    rdx,rbx
  40638f:	test   rsi,rsi
  406392:	cmove  rsi,QWORD PTR [rip+0x138b6]        # 0x419c50
  40639a:	call   0x403f80
  40639f:	mov    r8,QWORD PTR [rbx+0x4e]
  4063a3:	mov    rdx,QWORD PTR [rip+0x1389e]        # 0x419c48
  4063aa:	mov    rcx,QWORD PTR [rip+0x1d097]        # 0x423448
  4063b1:	mov    r9,rsi
  4063b4:	call   0x402710
  4063b9:	jmp    0x40619e
  4063be:	xchg   ax,ax
  4063c0:	movzx  eax,BYTE PTR [rip+0x1d0d9]        # 0x4234a0
  4063c7:	cmp    QWORD PTR [rbx+0x36],0x0
  4063cc:	mov    edx,0x1
  4063d1:	cmovne eax,edx
  4063d4:	mov    BYTE PTR [rip+0x1d0c6],al        # 0x4234a0
  4063da:	jmp    0x406341
  4063df:	nop
  4063e0:	mov    rdx,QWORD PTR [rip+0x1d061]        # 0x423448
  4063e7:	mov    ecx,0xa
  4063ec:	call   0x4185f8
  4063f1:	nop
  4063f2:	add    rsp,0x98
  4063f9:	pop    rbx
  4063fa:	pop    rsi
  4063fb:	pop    rdi
  4063fc:	pop    rbp
  4063fd:	pop    r12
  4063ff:	pop    r13
  406401:	pop    r14
  406403:	pop    r15
  406405:	ret    
  406406:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406410:	test   BYTE PTR [rbx-0x58],0x20
  406414:	jne    0x406260
  40641a:	mov    r9,QWORD PTR [rsp+0xf0]
  406422:	mov    r8,QWORD PTR [rip+0x13807]        # 0x419c30
  406429:	mov    rdx,QWORD PTR [rip+0x1d120]        # 0x423550
  406430:	mov    rcx,QWORD PTR [rip+0x1d011]        # 0x423448
  406437:	call   0x402710
  40643c:	jmp    0x406260
  406441:	mov    r9,QWORD PTR [rip+0x1d0d0]        # 0x423518
  406448:	jmp    0x4062b4
  40644d:	mov    r9,QWORD PTR [rip+0x1d0f4]        # 0x423548
  406454:	jmp    0x4062b4
  406459:	mov    r9,QWORD PTR [rip+0x1d0a0]        # 0x423500
  406460:	jmp    0x4062b4
  406465:	mov    r9,QWORD PTR [rip+0x1d0b4]        # 0x423520
  40646c:	jmp    0x4062b4
  406471:	mov    r9,QWORD PTR [rip+0x1d0b8]        # 0x423530
  406478:	jmp    0x4062b4
  40647d:	mov    r9,QWORD PTR [rip+0x1d0a4]        # 0x423528
  406484:	jmp    0x4062b4
  406489:	mov    r9,QWORD PTR [rip+0x1d080]        # 0x423510
  406490:	jmp    0x4062b4
  406495:	mov    r9,QWORD PTR [rip+0x1d09c]        # 0x423538
  40649c:	jmp    0x4062b4
  4064a1:	mov    rax,QWORD PTR [rbx+0x4e]
  4064a5:	mov    rcx,QWORD PTR [rsp+0x30]
  4064aa:	lea    r8,[rip+0x14763]        # 0x41ac14
  4064b1:	mov    QWORD PTR [rsp+0x20],r9
  4064b6:	mov    edx,0x50
  4064bb:	mov    r9,rax
  4064be:	call   0x402b00
  4064c3:	jmp    0x40630c
  4064c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4064d0:	mov    rax,QWORD PTR [rbx+0x4e]
  4064d4:	mov    rcx,QWORD PTR [rsp+0x30]
  4064d9:	lea    r8,[rip+0x1473b]        # 0x41ac1b
  4064e0:	mov    QWORD PTR [rsp+0x20],r9
  4064e5:	mov    edx,0x50
  4064ea:	mov    r9,rax
  4064ed:	call   0x402b00
  4064f2:	jmp    0x40630c
  4064f7:	mov    rbp,QWORD PTR [rsi+0x50]
  4064fb:	mov    rbx,QWORD PTR [rip+0x1364e]        # 0x419b50
  406502:	mov    rsi,QWORD PTR [rdi+0x28]
  406506:	call   QWORD PTR [rip+0x1f1cc]        # 0x4256d8
  40650c:	lea    rcx,[rax+0x60]
  406510:	mov    r9,rbp
  406513:	mov    rdx,rbx
  406516:	mov    r8,rsi
  406519:	call   0x402710
  40651e:	mov    ecx,0x46
  406523:	call   0x402b50
  406528:	nop
  406529:	nop    DWORD PTR [rax+0x0]
  406530:	push   r15
  406532:	push   r14
  406534:	push   r13
  406536:	push   r12
  406538:	push   rbp
  406539:	push   rdi
  40653a:	push   rsi
  40653b:	push   rbx
  40653c:	sub    rsp,0x38
  406540:	lea    r13,[rip+0x157f9]        # 0x41bd40
  406547:	lea    r12,[rip+0x146f6]        # 0x41ac44
  40654e:	mov    rbx,rcx
  406551:	mov    QWORD PTR [rsp+0x88],rdx
  406559:	mov    r14,r8
  40655c:	mov    rax,QWORD PTR [rip+0x1d0c5]        # 0x423628
  406563:	test   rax,rax
  406566:	je     0x406915
  40656c:	movzx  edx,BYTE PTR [rbx]
  40656f:	cmp    BYTE PTR [rax+rdx*1],0x0
  406573:	mov    rcx,rdx
  406576:	je     0x406618
  40657c:	mov    rsi,rbx
  40657f:	nop
  406580:	add    rsi,0x1
  406584:	movzx  edx,BYTE PTR [rsi]
  406587:	cmp    BYTE PTR [rax+rdx*1],0x0
  40658b:	mov    rdi,rdx
  40658e:	jne    0x406580
  406590:	mov    r10,rsi
  406593:	mov    rbp,rsi
  406596:	sub    r10,rbx
  406599:	lea    eax,[r10-0x4]
  40659d:	cmp    eax,0x4
  4065a0:	ja     0x406618
  4065a2:	lea    rdx,[rip+0x14dd7]        # 0x41b380
  4065a9:	movzx  eax,cl
  4065ac:	movzx  r9d,BYTE PTR [rdx+rax*1]
  4065b1:	add    r9d,r10d
  4065b4:	cmp    r9d,0x9
  4065b8:	ja     0x406618
  4065ba:	movsxd r9,r9d
  4065bd:	shl    r9,0x4
  4065c1:	lea    r15,[r13+r9*1+0x0]
  4065c6:	mov    r11,QWORD PTR [r15]
  4065c9:	cmp    cl,BYTE PTR [r11]
  4065cc:	jne    0x406618
  4065ce:	lea    rdx,[r11+0x1]
  4065d2:	lea    rcx,[rbx+0x1]
  4065d6:	lea    r8d,[r10-0x1]
  4065da:	mov    QWORD PTR [rsp+0x28],r11
  4065df:	mov    QWORD PTR [rsp+0x20],r10
  4065e4:	call   0x418530
  4065e9:	test   eax,eax
  4065eb:	jne    0x406618
  4065ed:	mov    r10,QWORD PTR [rsp+0x20]
  4065f2:	mov    r11,QWORD PTR [rsp+0x28]
  4065f7:	mov    r10d,r10d
  4065fa:	cmp    BYTE PTR [r11+r10*1],0x0
  4065ff:	jne    0x406618
  406601:	cmp    DWORD PTR [r15+0x8],0x6
  406606:	ja     0x406618
  406608:	mov    eax,DWORD PTR [r15+0x8]
  40660c:	movsxd rax,DWORD PTR [r12+rax*4]
  406610:	add    rax,r12
  406613:	jmp    rax
  406615:	mov    rbx,rsi
  406618:	mov    rax,QWORD PTR [rip+0x1d069]        # 0x423688
  40661f:	mov    DWORD PTR [r14],0x0
  406626:	test   rax,rax
  406629:	jne    0x40664a
  40662b:	mov    ecx,0x21
  406630:	call   0x404060
  406635:	jmp    0x40664a
  406637:	nop    WORD PTR [rax+rax*1+0x0]
  406640:	cmp    BYTE PTR [rax+rdx*1],0x0
  406644:	jne    0x40666b
  406646:	add    rbx,0x1
  40664a:	movzx  edx,BYTE PTR [rbx]
  40664d:	test   dl,dl
  40664f:	jne    0x406640
  406651:	xor    eax,eax
  406653:	add    rsp,0x38
  406657:	pop    rbx
  406658:	pop    rsi
  406659:	pop    rdi
  40665a:	pop    rbp
  40665b:	pop    r12
  40665d:	pop    r13
  40665f:	pop    r14
  406661:	pop    r15
  406663:	ret    
  406664:	mov    DWORD PTR [r14],0x0
  40666b:	mov    rax,rbx
  40666e:	jmp    0x406653
  406670:	cmp    dil,0x7f
  406674:	ja     0x406615
  406676:	lea    rax,[rip+0x18503]        # 0x41eb80
  40667d:	test   DWORD PTR [rax+rdi*4],0x1000c01
  406684:	je     0x406615
  406686:	mov    rax,QWORD PTR [rsp+0x88]
  40668e:	mov    rbx,rsi
  406691:	mov    DWORD PTR [rax],0x2
  406697:	mov    rax,QWORD PTR [rip+0x1cf42]        # 0x4235e0
  40669e:	test   rax,rax
  4066a1:	jne    0x4066b4
  4066a3:	jmp    0x406924
  4066a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4066b0:	add    rbx,0x1
  4066b4:	movzx  ecx,BYTE PTR [rbx]
  4066b7:	cmp    BYTE PTR [rax+rcx*1],0x0
  4066bb:	jne    0x4066b0
  4066bd:	cmp    cl,0x2f
  4066c0:	je     0x406664
  4066c2:	cmp    cl,0x3e
  4066c5:	je     0x40666b
  4066c7:	cmp    cl,0x7f
  4066ca:	ja     0x406651
  4066cc:	lea    rax,[rip+0x184ad]        # 0x41eb80
  4066d3:	test   BYTE PTR [rax+rcx*4+0x2],0x8
  4066d8:	jne    0x40655c
  4066de:	jmp    0x406651
  4066e3:	cmp    dil,0x3d
  4066e7:	lea    rbp,[rsi+0x1]
  4066eb:	je     0x406814
  4066f1:	xor    edi,edi
  4066f3:	mov    rax,QWORD PTR [rip+0x1cf8e]        # 0x423688
  4066fa:	add    rbp,rdi
  4066fd:	mov    DWORD PTR [r14],0x0
  406704:	test   rax,rax
  406707:	je     0x406999
  40670d:	movzx  edx,BYTE PTR [rbp+0x0]
  406711:	test   dl,dl
  406713:	jne    0x406730
  406715:	jmp    0x406651
  40671a:	nop    WORD PTR [rax+rax*1+0x0]
  406720:	add    rbp,0x1
  406724:	movzx  edx,BYTE PTR [rbp+0x0]
  406728:	test   dl,dl
  40672a:	je     0x406651
  406730:	cmp    BYTE PTR [rax+rdx*1],0x0
  406734:	je     0x406720
  406736:	mov    rbx,rbp
  406739:	jmp    0x406697
  40673e:	xchg   ax,ax
  406740:	mov    rax,QWORD PTR [rip+0x1cf41]        # 0x423688
  406747:	test   rax,rax
  40674a:	je     0x40698a
  406750:	movzx  edx,BYTE PTR [rsi]
  406753:	test   dl,dl
  406755:	jne    0x406770
  406757:	jmp    0x406651
  40675c:	nop    DWORD PTR [rax+0x0]
  406760:	add    rbp,0x1
  406764:	movzx  edx,BYTE PTR [rbp+0x0]
  406768:	test   dl,dl
  40676a:	je     0x406651
  406770:	cmp    BYTE PTR [rax+rdx*1],0x0
  406774:	je     0x406760
  406776:	jmp    0x406736
  406778:	mov    rax,QWORD PTR [rip+0x1cf09]        # 0x423688
  40677f:	test   rax,rax
  406782:	je     0x40697b
  406788:	movzx  edx,BYTE PTR [rsi]
  40678b:	test   dl,dl
  40678d:	jne    0x4067a4
  40678f:	jmp    0x406651
  406794:	add    rbp,0x1
  406798:	movzx  edx,BYTE PTR [rbp+0x0]
  40679c:	test   dl,dl
  40679e:	je     0x406651
  4067a4:	cmp    BYTE PTR [rax+rdx*1],0x0
  4067a8:	je     0x406794
  4067aa:	jmp    0x406736
  4067ac:	cmp    dil,0x7f
  4067b0:	ja     0x406615
  4067b6:	lea    rax,[rip+0x183c3]        # 0x41eb80
  4067bd:	test   DWORD PTR [rax+rdi*4],0x1000c01
  4067c4:	je     0x406615
  4067ca:	mov    rax,QWORD PTR [rsp+0x88]
  4067d2:	mov    rbx,rsi
  4067d5:	mov    DWORD PTR [rax],0x0
  4067db:	jmp    0x406697
  4067e0:	cmp    dil,0x7f
  4067e4:	ja     0x406615
  4067ea:	lea    rax,[rip+0x1838f]        # 0x41eb80
  4067f1:	test   DWORD PTR [rax+rdi*4],0x1000c01
  4067f8:	je     0x406615
  4067fe:	mov    rax,QWORD PTR [rsp+0x88]
  406806:	mov    rbx,rsi
  406809:	mov    DWORD PTR [rax],0x1
  40680f:	jmp    0x406697
  406814:	mov    rax,QWORD PTR [rip+0x1ce3d]        # 0x423658
  40681b:	test   rax,rax
  40681e:	je     0x4069a8
  406824:	movzx  edx,BYTE PTR [rsi+0x1]
  406828:	cmp    BYTE PTR [rax+rdx*1],0x0
  40682c:	mov    r8,rdx
  40682f:	je     0x4066f1
  406835:	mov    rbx,rbp
  406838:	nop    DWORD PTR [rax+rax*1+0x0]
  406840:	add    rbx,0x1
  406844:	movzx  ecx,BYTE PTR [rbx]
  406847:	cmp    BYTE PTR [rax+rcx*1],0x0
  40684b:	jne    0x406840
  40684d:	mov    rdi,rbx
  406850:	sub    rdi,rbp
  406853:	je     0x4066f1
  406859:	cmp    cl,0x7f
  40685c:	ja     0x4066f3
  406862:	lea    rax,[rip+0x18317]        # 0x41eb80
  406869:	test   DWORD PTR [rax+rcx*4],0x1000c01
  406870:	je     0x4066f3
  406876:	lea    eax,[rdi-0x3]
  406879:	mov    r11d,edi
  40687c:	cmp    eax,0xb
  40687f:	ja     0x4066f3
  406885:	lea    rdx,[rip+0x14bf4]        # 0x41b480
  40688c:	movzx  eax,r8b
  406890:	movzx  eax,BYTE PTR [rdx+rax*1]
  406894:	add    eax,edi
  406896:	cmp    eax,0x11
  406899:	ja     0x4066f3
  40689f:	movsxd r9,eax
  4068a2:	lea    rax,[rip+0x15597]        # 0x41be40
  4068a9:	shl    r9,0x4
  4068ad:	add    r9,rax
  4068b0:	mov    r10,QWORD PTR [r9]
  4068b3:	mov    QWORD PTR [rsp+0x28],r9
  4068b8:	cmp    BYTE PTR [r10],r8b
  4068bb:	jne    0x4066f3
  4068c1:	lea    rdx,[r10+0x1]
  4068c5:	lea    rcx,[rsi+0x2]
  4068c9:	lea    r8d,[r11-0x1]
  4068cd:	mov    QWORD PTR [rsp+0x20],r10
  4068d2:	call   0x418530
  4068d7:	test   eax,eax
  4068d9:	jne    0x4066f3
  4068df:	mov    r10,QWORD PTR [rsp+0x20]
  4068e4:	mov    eax,edi
  4068e6:	cmp    BYTE PTR [r10+rax*1],0x0
  4068eb:	jne    0x4066f3
  4068f1:	mov    r9,QWORD PTR [rsp+0x28]
  4068f6:	cmp    DWORD PTR [r9+0x8],0x9
  4068fb:	ja     0x4066f3
  406901:	mov    edx,DWORD PTR [r9+0x8]
  406905:	lea    rax,[rip+0x14354]        # 0x41ac60
  40690c:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406910:	add    rax,rdx
  406913:	jmp    rax
  406915:	mov    ecx,0x15
  40691a:	call   0x404060
  40691f:	jmp    0x40656c
  406924:	mov    ecx,0xc
  406929:	call   0x404060
  40692e:	jmp    0x4066b4
  406933:	mov    DWORD PTR [r14],0x6
  40693a:	jmp    0x406697
  40693f:	mov    DWORD PTR [r14],0x4
  406946:	jmp    0x406697
  40694b:	mov    DWORD PTR [r14],0x2
  406952:	jmp    0x406697
  406957:	mov    DWORD PTR [r14],0x3
  40695e:	jmp    0x406697
  406963:	mov    DWORD PTR [r14],0x5
  40696a:	jmp    0x406697
  40696f:	mov    DWORD PTR [r14],0x1
  406976:	jmp    0x406697
  40697b:	mov    ecx,0x21
  406980:	call   0x404060
  406985:	jmp    0x406788
  40698a:	mov    ecx,0x21
  40698f:	call   0x404060
  406994:	jmp    0x406750
  406999:	mov    ecx,0x21
  40699e:	call   0x404060
  4069a3:	jmp    0x40670d
  4069a8:	mov    ecx,0x1b
  4069ad:	call   0x404060
  4069b2:	jmp    0x406824
  4069b7:	nop    WORD PTR [rax+rax*1+0x0]
  4069c0:	push   r15
  4069c2:	push   r14
  4069c4:	push   r13
  4069c6:	push   r12
  4069c8:	push   rbp
  4069c9:	push   rdi
  4069ca:	push   rsi
  4069cb:	push   rbx
  4069cc:	sub    rsp,0x48
  4069d0:	mov    rsi,QWORD PTR [rip+0x1ee59]        # 0x425830
  4069d7:	mov    rbx,rcx
  4069da:	jmp    0x4069e4
  4069dc:	nop    DWORD PTR [rax+0x0]
  4069e0:	add    rbx,0x1
  4069e4:	movzx  ebp,BYTE PTR [rbx]
  4069e7:	mov    ecx,ebp
  4069e9:	call   rsi
  4069eb:	test   eax,eax
  4069ed:	jne    0x4069e0
  4069ef:	cmp    bpl,0x50
  4069f3:	je     0x406b80
  4069f9:	cmp    bpl,0x54
  4069fd:	je     0x406b24
  406a03:	sub    ebp,0x30
  406a06:	cmp    ebp,0x9
  406a09:	ja     0x407023
  406a0f:	mov    rbp,QWORD PTR [rip+0x1ed0a]        # 0x425720
  406a16:	lea    r13,[rsp+0x30]
  406a1b:	mov    QWORD PTR [rsp+0x30],rbx
  406a20:	xor    edi,edi
  406a22:	xor    r12d,r12d
  406a25:	call   rbp
  406a27:	mov    rcx,QWORD PTR [rsp+0x30]
  406a2c:	mov    r8d,0xa
  406a32:	mov    rdx,r13
  406a35:	mov    DWORD PTR [rax],0x0
  406a3b:	call   0x418508
  406a40:	movsxd r14,eax
  406a43:	call   rbp
  406a45:	mov    ecx,DWORD PTR [rax]
  406a47:	test   ecx,ecx
  406a49:	jne    0x406b13
  406a4f:	mov    rbx,QWORD PTR [rsp+0x30]
  406a54:	movzx  r15d,BYTE PTR [rbx]
  406a58:	cmp    r15b,0x3a
  406a5c:	jne    0x406a6c
  406a5e:	jmp    0x406eab
  406a63:	mov    QWORD PTR [rsp+0x30],rbx
  406a68:	movzx  r15d,BYTE PTR [rbx]
  406a6c:	add    rbx,0x1
  406a70:	movzx  ecx,r15b
  406a74:	call   rsi
  406a76:	test   eax,eax
  406a78:	jne    0x406a63
  406a7a:	cmp    r15b,0x59
  406a7e:	je     0x406d0b
  406a84:	jle    0x406b40
  406a8a:	cmp    r15b,0x6d
  406a8e:	je     0x406d3d
  406a94:	jg     0x406cb0
  406a9a:	cmp    r15b,0x64
  406a9e:	je     0x406d22
  406aa4:	cmp    r15b,0x68
  406aa8:	jne    0x406b13
  406aaa:	cmp    r12d,0x4
  406aae:	ja     0x406b13
  406ab0:	mov    r8d,0xe10
  406ab6:	mov    r12d,0x5
  406abc:	nop    DWORD PTR [rax+0x0]
  406ac0:	mov    rcx,rdi
  406ac3:	mov    rdx,r14
  406ac6:	call   0x4036d0
  406acb:	mov    rdi,rax
  406ace:	mov    rax,QWORD PTR [rsp+0x30]
  406ad3:	lea    rbx,[rax+0x1]
  406ad7:	mov    QWORD PTR [rsp+0x30],rbx
  406adc:	jmp    0x406ae5
  406ade:	xchg   ax,ax
  406ae0:	mov    QWORD PTR [rsp+0x30],rbx
  406ae5:	movzx  r14d,BYTE PTR [rbx]
  406ae9:	add    rbx,0x1
  406aed:	mov    ecx,r14d
  406af0:	call   rsi
  406af2:	test   eax,eax
  406af4:	jne    0x406ae0
  406af6:	test   r14b,r14b
  406af9:	je     0x40701b
  406aff:	sub    r14d,0x30
  406b03:	cmp    r14d,0x9
  406b07:	ja     0x406b13
  406b09:	cmp    r12d,0x7
  406b0d:	jne    0x406a25
  406b13:	call   rbp
  406b15:	mov    DWORD PTR [rax],0x16
  406b1b:	mov    rax,0xffffffffffffffff
  406b22:	jmp    0x406b2d
  406b24:	lea    rcx,[rbx+0x1]
  406b28:	call   0x403830
  406b2d:	add    rsp,0x48
  406b31:	pop    rbx
  406b32:	pop    rsi
  406b33:	pop    rdi
  406b34:	pop    rbp
  406b35:	pop    r12
  406b37:	pop    r13
  406b39:	pop    r14
  406b3b:	pop    r15
  406b3d:	ret    
  406b3e:	xchg   ax,ax
  406b40:	cmp    r15b,0x44
  406b44:	je     0x406d22
  406b4a:	jle    0x406ce2
  406b50:	cmp    r15b,0x4d
  406b54:	je     0x406cc7
  406b5a:	cmp    r15b,0x57
  406b5e:	jne    0x406b13
  406b60:	cmp    r12d,0x2
  406b64:	ja     0x406b13
  406b66:	mov    r8d,0x93a80
  406b6c:	mov    r12d,0x3
  406b72:	jmp    0x406ac0
  406b77:	nop    WORD PTR [rax+rax*1+0x0]
  406b80:	lea    rcx,[rbx+0x1]
  406b84:	call   0x4184a8
  406b89:	test   rax,rax
  406b8c:	mov    r13,rax
  406b8f:	je     0x407056
  406b95:	mov    edx,0x54
  406b9a:	mov    rcx,rax
  406b9d:	call   0x418560
  406ba2:	test   rax,rax
  406ba5:	mov    r12,rax
  406ba8:	je     0x406ea0
  406bae:	lea    rdi,[rax+0x1]
  406bb2:	mov    rcx,r13
  406bb5:	mov    BYTE PTR [rax],0x0
  406bb8:	call   0x4026b0
  406bbd:	mov    rcx,rdi
  406bc0:	mov    rbx,rax
  406bc3:	call   0x4026b0
  406bc8:	test   rax,rax
  406bcb:	mov    r12,rax
  406bce:	setne  r14b
  406bd2:	mov    edx,0x2d
  406bd7:	mov    rcx,rbx
  406bda:	call   0x418560
  406bdf:	test   rax,rax
  406be2:	je     0x406d58
  406be8:	lea    rsi,[rsp+0x20]
  406bed:	mov    r8,rax
  406bf0:	xor    ecx,ecx
  406bf2:	mov    r9d,0x1e13380
  406bf8:	mov    QWORD PTR [rsp+0x20],rbx
  406bfd:	mov    rdx,rsi
  406c00:	call   0x403760
  406c05:	mov    rbx,rax
  406c08:	mov    rax,QWORD PTR [rsp+0x20]
  406c0d:	mov    edx,0x2d
  406c12:	lea    rcx,[rax+0x1]
  406c16:	mov    QWORD PTR [rsp+0x20],rcx
  406c1b:	call   0x418560
  406c20:	test   rax,rax
  406c23:	mov    r8,rax
  406c26:	je     0x40703b
  406c2c:	mov    r9d,0x278d00
  406c32:	mov    rdx,rsi
  406c35:	mov    rcx,rbx
  406c38:	call   0x403760
  406c3d:	mov    rdi,rax
  406c40:	mov    rax,QWORD PTR [rsp+0x20]
  406c45:	lea    rbx,[rax+0x1]
  406c49:	mov    rcx,rbx
  406c4c:	mov    QWORD PTR [rsp+0x20],rbx
  406c51:	call   0x418538
  406c56:	lea    r8,[rbx+rax*1]
  406c5a:	mov    rcx,rdi
  406c5d:	mov    r9d,0x15180
  406c63:	mov    rdx,rsi
  406c66:	call   0x403760
  406c6b:	mov    rbp,QWORD PTR [rip+0x1eaae]        # 0x425720
  406c72:	mov    rdi,rax
  406c75:	call   rbp
  406c77:	mov    r8d,DWORD PTR [rax]
  406c7a:	test   r8d,r8d
  406c7d:	jne    0x406ca0
  406c7f:	test   r14b,r14b
  406c82:	je     0x406ca0
  406c84:	mov    rcx,r12
  406c87:	call   0x403830
  406c8c:	mov    rcx,rdi
  406c8f:	mov    r8d,0x1
  406c95:	mov    rdx,rax
  406c98:	call   0x4036d0
  406c9d:	mov    rdi,rax
  406ca0:	mov    rcx,r13
  406ca3:	call   0x4185e0
  406ca8:	mov    rax,rdi
  406cab:	jmp    0x406b2d
  406cb0:	cmp    r15b,0x73
  406cb4:	jne    0x406d01
  406cb6:	mov    r8d,0x1
  406cbc:	mov    r12d,0x7
  406cc2:	jmp    0x406ac0
  406cc7:	cmp    r12d,0x1
  406ccb:	ja     0x406b13
  406cd1:	mov    r8d,0x278d00
  406cd7:	mov    r12d,0x2
  406cdd:	jmp    0x406ac0
  406ce2:	test   r15b,r15b
  406ce5:	jne    0x406b13
  406ceb:	mov    r8d,0x1
  406cf1:	mov    rdx,r14
  406cf4:	mov    rcx,rdi
  406cf7:	call   0x4036d0
  406cfc:	jmp    0x406b2d
  406d01:	cmp    r15b,0x79
  406d05:	jne    0x406b13
  406d0b:	test   r12d,r12d
  406d0e:	jne    0x406b13
  406d14:	mov    r8d,0x1e13380
  406d1a:	mov    r12b,0x1
  406d1d:	jmp    0x406ac0
  406d22:	cmp    r12d,0x3
  406d26:	ja     0x406b13
  406d2c:	mov    r8d,0x15180
  406d32:	mov    r12d,0x4
  406d38:	jmp    0x406ac0
  406d3d:	cmp    r12d,0x6
  406d41:	je     0x406b13
  406d47:	mov    r8d,0x3c
  406d4d:	mov    r12d,0x6
  406d53:	jmp    0x406ac0
  406d58:	lea    rdx,[rip+0x13f29]        # 0x41ac88
  406d5f:	mov    rcx,rbx
  406d62:	call   0x418520
  406d67:	test   rax,rax
  406d6a:	je     0x406f79
  406d70:	mov    edx,0x59
  406d75:	mov    rcx,rbx
  406d78:	mov    QWORD PTR [rsp+0x28],rbx
  406d7d:	xor    edi,edi
  406d7f:	call   0x418560
  406d84:	test   rax,rax
  406d87:	je     0x406daf
  406d89:	lea    rdx,[rsp+0x28]
  406d8e:	mov    r9d,0x1e13380
  406d94:	mov    r8,rax
  406d97:	xor    ecx,ecx
  406d99:	call   0x403760
  406d9e:	mov    rdi,rax
  406da1:	mov    rax,QWORD PTR [rsp+0x28]
  406da6:	lea    rbx,[rax+0x1]
  406daa:	mov    QWORD PTR [rsp+0x28],rbx
  406daf:	mov    edx,0x4d
  406db4:	mov    rcx,rbx
  406db7:	call   0x418560
  406dbc:	test   rax,rax
  406dbf:	je     0x406de8
  406dc1:	lea    rdx,[rsp+0x28]
  406dc6:	mov    rcx,rdi
  406dc9:	mov    r9d,0x278d00
  406dcf:	mov    r8,rax
  406dd2:	call   0x403760
  406dd7:	mov    rdi,rax
  406dda:	mov    rax,QWORD PTR [rsp+0x28]
  406ddf:	lea    rbx,[rax+0x1]
  406de3:	mov    QWORD PTR [rsp+0x28],rbx
  406de8:	mov    edx,0x57
  406ded:	mov    rcx,rbx
  406df0:	call   0x418560
  406df5:	test   rax,rax
  406df8:	je     0x406e21
  406dfa:	lea    rdx,[rsp+0x28]
  406dff:	mov    rcx,rdi
  406e02:	mov    r9d,0x93a80
  406e08:	mov    r8,rax
  406e0b:	call   0x403760
  406e10:	mov    rdi,rax
  406e13:	mov    rax,QWORD PTR [rsp+0x28]
  406e18:	lea    rbx,[rax+0x1]
  406e1c:	mov    QWORD PTR [rsp+0x28],rbx
  406e21:	mov    edx,0x44
  406e26:	mov    rcx,rbx
  406e29:	call   0x418560
  406e2e:	test   rax,rax
  406e31:	je     0x406e65
  406e33:	lea    rdx,[rsp+0x28]
  406e38:	mov    rcx,rdi
  406e3b:	mov    r9d,0x15180
  406e41:	mov    r8,rax
  406e44:	call   0x403760
  406e49:	mov    rdi,rax
  406e4c:	mov    rax,QWORD PTR [rsp+0x28]
  406e51:	lea    rbx,[rax+0x1]
  406e55:	mov    QWORD PTR [rsp+0x28],rbx
  406e5a:	jmp    0x406e65
  406e5c:	nop    DWORD PTR [rax+0x0]
  406e60:	mov    QWORD PTR [rsp+0x28],rbx
  406e65:	movzx  ecx,BYTE PTR [rbx]
  406e68:	add    rbx,0x1
  406e6c:	mov    ebp,ecx
  406e6e:	call   rsi
  406e70:	test   eax,eax
  406e72:	jne    0x406e60
  406e74:	test   bpl,bpl
  406e77:	mov    rbp,QWORD PTR [rip+0x1e8a2]        # 0x425720
  406e7e:	je     0x406c75
  406e84:	call   rbp
  406e86:	mov    rdi,0xffffffffffffffff
  406e8d:	mov    DWORD PTR [rax],0x16
  406e93:	jmp    0x406c75
  406e98:	nop    DWORD PTR [rax+rax*1+0x0]
  406ea0:	mov    rbx,r13
  406ea3:	xor    r14d,r14d
  406ea6:	jmp    0x406bd2
  406eab:	cmp    r12d,0x6
  406eaf:	je     0x406b13
  406eb5:	lea    r15,[rsp+0x38]
  406eba:	mov    QWORD PTR [rsp+0x38],rbx
  406ebf:	mov    r13d,0x3
  406ec5:	call   rbp
  406ec7:	mov    DWORD PTR [rax],0x0
  406ecd:	mov    rbx,QWORD PTR [rsp+0x38]
  406ed2:	movzx  eax,BYTE PTR [rbx]
  406ed5:	cmp    al,0x3a
  406ed7:	jne    0x406f30
  406ed9:	sub    r13d,0x1
  406edd:	je     0x406f30
  406edf:	lea    rcx,[rbx+0x1]
  406ee3:	mov    rdx,r15
  406ee6:	mov    r8d,0xa
  406eec:	call   0x418500
  406ef1:	mov    ebx,eax
  406ef3:	call   rbp
  406ef5:	mov    edx,DWORD PTR [rax]
  406ef7:	test   edx,edx
  406ef9:	jne    0x406f16
  406efb:	mov    rdx,r14
  406efe:	mov    ecx,ebx
  406f00:	mov    r8d,0x3c
  406f06:	call   0x4036d0
  406f0b:	mov    r14,rax
  406f0e:	call   rbp
  406f10:	mov    eax,DWORD PTR [rax]
  406f12:	test   eax,eax
  406f14:	je     0x406ecd
  406f16:	mov    rdx,0xffffffffffffffff
  406f1d:	mov    r8d,0x1
  406f23:	mov    rcx,rdi
  406f26:	call   0x4036d0
  406f2b:	jmp    0x406b2d
  406f30:	add    rbx,0x1
  406f34:	mov    r13d,eax
  406f37:	jmp    0x406f4e
  406f39:	nop    DWORD PTR [rax+0x0]
  406f40:	mov    QWORD PTR [rsp+0x38],rbx
  406f45:	add    rbx,0x1
  406f49:	movzx  r13d,BYTE PTR [rbx-0x1]
  406f4e:	movzx  ecx,r13b
  406f52:	call   rsi
  406f54:	test   eax,eax
  406f56:	jne    0x406f40
  406f58:	test   r13b,r13b
  406f5b:	jne    0x40706e
  406f61:	cmp    r14,0xe0f
  406f68:	jle    0x406f74
  406f6a:	cmp    r12d,0x5
  406f6e:	je     0x406b13
  406f74:	mov    rdx,r14
  406f77:	jmp    0x406f1d
  406f79:	mov    rcx,rbx
  406f7c:	call   0x418538
  406f81:	cmp    rax,0x8
  406f85:	jne    0x40703b
  406f8b:	mov    eax,DWORD PTR [rbx]
  406f8d:	lea    rdi,[rsp+0x38]
  406f92:	lea    rsi,[rsp+0x30]
  406f97:	lea    r8,[rsp+0x34]
  406f9c:	mov    r9d,0x1e13380
  406fa2:	xor    ecx,ecx
  406fa4:	mov    rdx,rdi
  406fa7:	mov    BYTE PTR [rsp+0x34],0x0
  406fac:	mov    QWORD PTR [rsp+0x38],rsi
  406fb1:	mov    DWORD PTR [rsp+0x30],eax
  406fb5:	lea    rbp,[rsi+0x2]
  406fb9:	call   0x403760
  406fbe:	movzx  edx,WORD PTR [rbx+0x4]
  406fc2:	mov    r8,rbp
  406fc5:	mov    r9d,0x278d00
  406fcb:	mov    rcx,rax
  406fce:	mov    BYTE PTR [rsp+0x32],0x0
  406fd3:	mov    QWORD PTR [rsp+0x38],rsi
  406fd8:	mov    WORD PTR [rsp+0x30],dx
  406fdd:	mov    rdx,rdi
  406fe0:	call   0x403760
  406fe5:	movzx  edx,WORD PTR [rbx+0x6]
  406fe9:	mov    r8,rbp
  406fec:	mov    r9d,0x15180
  406ff2:	mov    rcx,rax
  406ff5:	mov    BYTE PTR [rsp+0x32],0x0
  406ffa:	mov    QWORD PTR [rsp+0x38],rsi
  406fff:	mov    WORD PTR [rsp+0x30],dx
  407004:	mov    rdx,rdi
  407007:	call   0x403760
  40700c:	mov    rbp,QWORD PTR [rip+0x1e70d]        # 0x425720
  407013:	mov    rdi,rax
  407016:	jmp    0x406c75
  40701b:	mov    rax,rdi
  40701e:	jmp    0x406b2d
  407023:	call   QWORD PTR [rip+0x1e6f7]        # 0x425720
  407029:	mov    DWORD PTR [rax],0x16
  40702f:	mov    rax,0xffffffffffffffff
  407036:	jmp    0x406b2d
  40703b:	mov    rbp,QWORD PTR [rip+0x1e6de]        # 0x425720
  407042:	mov    rdi,0xffffffffffffffff
  407049:	call   rbp
  40704b:	mov    DWORD PTR [rax],0x16
  407051:	jmp    0x406c75
  407056:	call   QWORD PTR [rip+0x1e6c4]        # 0x425720
  40705c:	mov    DWORD PTR [rax],0xc
  407062:	mov    rax,0xffffffffffffffff
  407069:	jmp    0x406b2d
  40706e:	call   rbp
  407070:	mov    DWORD PTR [rax],0x16
  407076:	jmp    0x406f16
  40707b:	nop    DWORD PTR [rax+rax*1+0x0]
  407080:	push   rbp
  407081:	push   rdi
  407082:	push   rsi
  407083:	push   rbx
  407084:	sub    rsp,0x28
  407088:	lea    eax,[rdx-0x3]
  40708b:	mov    rsi,rdx
  40708e:	cmp    eax,0xb
  407091:	ja     0x4070f0
  407093:	movzx  eax,BYTE PTR [rcx]
  407096:	lea    r8,[rip+0x143e3]        # 0x41b480
  40709d:	mov    rdx,rax
  4070a0:	movzx  eax,BYTE PTR [r8+rax*1]
  4070a5:	add    eax,esi
  4070a7:	cmp    eax,0x11
  4070aa:	ja     0x4070f0
  4070ac:	cdqe   
  4070ae:	lea    rbx,[rip+0x14d8b]        # 0x41be40
  4070b5:	xor    ebp,ebp
  4070b7:	shl    rax,0x4
  4070bb:	add    rbx,rax
  4070be:	mov    rdi,QWORD PTR [rbx]
  4070c1:	cmp    dl,BYTE PTR [rdi]
  4070c3:	jne    0x4070e5
  4070c5:	lea    rdx,[rdi+0x1]
  4070c9:	lea    r8d,[rsi-0x1]
  4070cd:	add    rcx,0x1
  4070d1:	call   0x418530
  4070d6:	test   eax,eax
  4070d8:	jne    0x4070e5
  4070da:	mov    esi,esi
  4070dc:	cmp    BYTE PTR [rdi+rsi*1],0x0
  4070e0:	jne    0x4070e5
  4070e2:	mov    ebp,DWORD PTR [rbx+0x8]
  4070e5:	mov    eax,ebp
  4070e7:	add    rsp,0x28
  4070eb:	pop    rbx
  4070ec:	pop    rsi
  4070ed:	pop    rdi
  4070ee:	pop    rbp
  4070ef:	ret    
  4070f0:	xor    ebp,ebp
  4070f2:	mov    eax,ebp
  4070f4:	add    rsp,0x28
  4070f8:	pop    rbx
  4070f9:	pop    rsi
  4070fa:	pop    rdi
  4070fb:	pop    rbp
  4070fc:	ret    
  4070fd:	nop    DWORD PTR [rax]
  407100:	push   rbp
  407101:	push   rdi
  407102:	push   rsi
  407103:	push   rbx
  407104:	sub    rsp,0x28
  407108:	lea    eax,[rdx-0x4]
  40710b:	mov    rsi,rdx
  40710e:	cmp    eax,0x4
  407111:	ja     0x407170
  407113:	movzx  eax,BYTE PTR [rcx]
  407116:	lea    r8,[rip+0x14263]        # 0x41b380
  40711d:	mov    rdx,rax
  407120:	movzx  eax,BYTE PTR [r8+rax*1]
  407125:	add    eax,esi
  407127:	cmp    eax,0x9
  40712a:	ja     0x407170
  40712c:	cdqe   
  40712e:	lea    rbx,[rip+0x14c0b]        # 0x41bd40
  407135:	xor    ebp,ebp
  407137:	shl    rax,0x4
  40713b:	add    rbx,rax
  40713e:	mov    rdi,QWORD PTR [rbx]
  407141:	cmp    dl,BYTE PTR [rdi]
  407143:	jne    0x407165
  407145:	lea    rdx,[rdi+0x1]
  407149:	lea    r8d,[rsi-0x1]
  40714d:	add    rcx,0x1
  407151:	call   0x418530
  407156:	test   eax,eax
  407158:	jne    0x407165
  40715a:	mov    esi,esi
  40715c:	cmp    BYTE PTR [rdi+rsi*1],0x0
  407160:	jne    0x407165
  407162:	mov    ebp,DWORD PTR [rbx+0x8]
  407165:	mov    eax,ebp
  407167:	add    rsp,0x28
  40716b:	pop    rbx
  40716c:	pop    rsi
  40716d:	pop    rdi
  40716e:	pop    rbp
  40716f:	ret    
  407170:	xor    ebp,ebp
  407172:	mov    eax,ebp
  407174:	add    rsp,0x28
  407178:	pop    rbx
  407179:	pop    rsi
  40717a:	pop    rdi
  40717b:	pop    rbp
  40717c:	ret    
  40717d:	nop    DWORD PTR [rax]
  407180:	push   rbx
  407181:	sub    rsp,0x20
  407185:	cmp    rcx,0xf
  407189:	jbe    0x4071ec
  40718b:	mov    eax,r8d
  40718e:	mov    r9,rdx
  407191:	cmp    r8d,DWORD PTR [rcx+0xb0]
  407198:	lea    rdx,[rax+rax*2]
  40719c:	lea    rdx,[rax+rdx*4]
  4071a0:	mov    rax,QWORD PTR [rcx+0x78]
  4071a4:	lea    rdx,[rax+rdx*8]
  4071a8:	jae    0x407223
  4071aa:	mov    eax,DWORD PTR [rdx+0x10]
  4071ad:	and    eax,0xfffff00
  4071b2:	mov    DWORD PTR [rdx+0x10],eax
  4071b5:	mov    r8d,DWORD PTR [r9+0x10]
  4071b9:	and    r8d,0xf00000ff
  4071c0:	or     eax,r8d
  4071c3:	mov    r8,QWORD PTR [r9+0x18]
  4071c7:	test   al,0x4
  4071c9:	mov    DWORD PTR [rdx+0x10],eax
  4071cc:	mov    QWORD PTR [rdx+0x18],r8
  4071d0:	jne    0x407200
  4071d2:	xor    eax,eax
  4071d4:	and    DWORD PTR [r9+0x10],0xfffff00
  4071dc:	mov    WORD PTR [r9+0xe],ax
  4071e1:	mov    rax,QWORD PTR [rdx+0x38]
  4071e5:	test   rax,rax
  4071e8:	je     0x4071ec
  4071ea:	call   rax
  4071ec:	xor    ebx,ebx
  4071ee:	mov    eax,ebx
  4071f0:	add    rsp,0x20
  4071f4:	pop    rbx
  4071f5:	ret    
  4071f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407200:	movzx  eax,WORD PTR [rdx+0xe]
  407204:	add    eax,0x1
  407207:	cmp    ax,WORD PTR [rdx+0xc]
  40720b:	mov    WORD PTR [rdx+0xe],ax
  40720f:	jbe    0x4071d2
  407211:	test   BYTE PTR [rcx+0x10],0x4
  407215:	mov    ebx,0xffffffff
  40721a:	je     0x4071ee
  40721c:	call   0x403a90
  407221:	jmp    0x4071ee
  407223:	call   QWORD PTR [rip+0x1e4af]        # 0x4256d8
  407229:	mov    rcx,QWORD PTR [rip+0x128a0]        # 0x419ad0
  407230:	lea    rdx,[rax+0x60]
  407234:	call   0x4185f0
  407239:	mov    ecx,0x1
  40723e:	call   0x402b50
  407243:	nop
  407244:	xchg   ax,ax
  407246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407250:	push   rsi
  407251:	push   rbx
  407252:	sub    rsp,0x38
  407256:	cmp    rcx,0xf
  40725a:	jbe    0x4072ab
  40725c:	test   rdx,rdx
  40725f:	je     0x4072ab
  407261:	mov    eax,DWORD PTR [rdx+0x10]
  407264:	mov    esi,eax
  407266:	and    esi,0x8
  407269:	jne    0x4072ab
  40726b:	mov    rcx,QWORD PTR [rdx+0x18]
  40726f:	test   rcx,rcx
  407272:	je     0x4072f0
  407274:	mov    rbx,rdx
  407277:	movzx  edx,BYTE PTR [rcx]
  40727a:	cmp    dl,0x46
  40727d:	je     0x4072a4
  40727f:	jg     0x4072c1
  407281:	cmp    dl,0x23
  407284:	je     0x4072d2
  407286:	cmp    dl,0x30
  407289:	jne    0x407300
  40728b:	lea    rdx,[rsp+0x28]
  407290:	xor    r8d,r8d
  407293:	call   0x418508
  407298:	test   eax,eax
  40729a:	mov    eax,DWORD PTR [rbx+0x10]
  40729d:	je     0x4072e0
  40729f:	mov    esi,0x1
  4072a4:	test   al,0x40
  4072a6:	jne    0x4072b2
  4072a8:	mov    DWORD PTR [rbx+0x18],esi
  4072ab:	add    rsp,0x38
  4072af:	pop    rbx
  4072b0:	pop    rsi
  4072b1:	ret    
  4072b2:	mov    rcx,QWORD PTR [rbx+0x18]
  4072b6:	call   0x4185e0
  4072bb:	and    DWORD PTR [rbx+0x10],0xffffffbf
  4072bf:	jmp    0x4072a8
  4072c1:	cmp    dl,0x66
  4072c4:	je     0x4072a4
  4072c6:	cmp    dl,0x6e
  4072c9:	je     0x4072a4
  4072cb:	cmp    dl,0x4e
  4072ce:	jne    0x40729f
  4072d0:	jmp    0x4072a4
  4072d2:	xor    esi,esi
  4072d4:	cmp    BYTE PTR [rcx+0x1],0x66
  4072d8:	setne  sil
  4072dc:	jmp    0x4072a4
  4072de:	xchg   ax,ax
  4072e0:	mov    rdx,QWORD PTR [rsp+0x28]
  4072e5:	xor    esi,esi
  4072e7:	cmp    BYTE PTR [rdx],0x0
  4072ea:	setne  sil
  4072ee:	jmp    0x4072a4
  4072f0:	mov    DWORD PTR [rdx+0x18],0x0
  4072f7:	jmp    0x4072ab
  4072f9:	nop    DWORD PTR [rax+0x0]
  407300:	test   dl,dl
  407302:	jne    0x40729f
  407304:	jmp    0x4072a4
  407306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407310:	sub    rsp,0x28
  407314:	test   rcx,rcx
  407317:	je     0x407380
  407319:	mov    eax,DWORD PTR [rcx+0x10]
  40731c:	and    eax,0xf000
  407321:	cmp    eax,0x6000
  407326:	jne    0x407380
  407328:	mov    rcx,QWORD PTR [rcx+0x20]
  40732c:	test   rcx,rcx
  40732f:	je     0x40735a
  407331:	mov    r8d,DWORD PTR [rcx]
  407334:	xor    r9d,r9d
  407337:	add    rcx,0x8
  40733b:	jmp    0x407354
  40733d:	nop    DWORD PTR [rax]
  407340:	add    rcx,0x8
  407344:	test   r9b,r9b
  407347:	mov    rax,QWORD PTR [rcx-0x8]
  40734b:	jne    0x407370
  40734d:	cmp    rax,rdx
  407350:	sete   r9b
  407354:	sub    r8d,0x1
  407358:	jns    0x407340
  40735a:	call   QWORD PTR [rip+0x1e3c0]        # 0x425720
  407360:	mov    DWORD PTR [rax],0x2
  407366:	xor    eax,eax
  407368:	jmp    0x407375
  40736a:	nop    WORD PTR [rax+rax*1+0x0]
  407370:	test   rax,rax
  407373:	je     0x40735a
  407375:	add    rsp,0x28
  407379:	ret    
  40737a:	nop    WORD PTR [rax+rax*1+0x0]
  407380:	call   QWORD PTR [rip+0x1e39a]        # 0x425720
  407386:	mov    DWORD PTR [rax],0x16
  40738c:	xor    eax,eax
  40738e:	add    rsp,0x28
  407392:	ret    
  407393:	nop    DWORD PTR [rax]
  407396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073a0:	push   rbp
  4073a1:	push   rdi
  4073a2:	push   rsi
  4073a3:	push   rbx
  4073a4:	sub    rsp,0x28
  4073a8:	test   rcx,rcx
  4073ab:	mov    rdi,rdx
  4073ae:	je     0x407400
  4073b0:	cmp    DWORD PTR [rcx],0x6
  4073b3:	jne    0x407400
  4073b5:	mov    rax,QWORD PTR [rcx+0x10]
  4073b9:	mov    edx,DWORD PTR [rax]
  4073bb:	test   edx,edx
  4073bd:	jle    0x407430
  4073bf:	test   rdi,rdi
  4073c2:	lea    rbx,[rax+0x8]
  4073c6:	je     0x407420
  4073c8:	lea    eax,[rdx-0x1]
  4073cb:	lea    rbp,[rbx+rax*8+0x8]
  4073d0:	jmp    0x4073d7
  4073d2:	cmp    rbx,rbp
  4073d5:	je     0x407430
  4073d7:	add    rbx,0x8
  4073db:	mov    rsi,QWORD PTR [rbx-0x8]
  4073df:	mov    rdx,rdi
  4073e2:	mov    rcx,QWORD PTR [rsi+0x8]
  4073e6:	call   0x418558
  4073eb:	test   eax,eax
  4073ed:	jne    0x4073d2
  4073ef:	mov    rax,rsi
  4073f2:	add    rsp,0x28
  4073f6:	pop    rbx
  4073f7:	pop    rsi
  4073f8:	pop    rdi
  4073f9:	pop    rbp
  4073fa:	ret    
  4073fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407400:	xor    esi,esi
  407402:	call   QWORD PTR [rip+0x1e318]        # 0x425720
  407408:	mov    DWORD PTR [rax],0x16
  40740e:	mov    rax,rsi
  407411:	add    rsp,0x28
  407415:	pop    rbx
  407416:	pop    rsi
  407417:	pop    rdi
  407418:	pop    rbp
  407419:	ret    
  40741a:	nop    WORD PTR [rax+rax*1+0x0]
  407420:	mov    rsi,QWORD PTR [rax+0x8]
  407424:	test   rsi,rsi
  407427:	jne    0x4073ef
  407429:	nop    DWORD PTR [rax+0x0]
  407430:	call   QWORD PTR [rip+0x1e2ea]        # 0x425720
  407436:	xor    esi,esi
  407438:	mov    DWORD PTR [rax],0x2
  40743e:	jmp    0x4073ef
  407440:	push   r12
  407442:	push   rbp
  407443:	push   rdi
  407444:	push   rsi
  407445:	push   rbx
  407446:	sub    rsp,0x20
  40744a:	test   rcx,rcx
  40744d:	mov    rbp,rdx
  407450:	mov    r12,r8
  407453:	je     0x4074d0
  407455:	mov    eax,DWORD PTR [rcx+0x10]
  407458:	and    eax,0xf000
  40745d:	cmp    eax,0x6000
  407462:	jne    0x4074d0
  407464:	mov    rax,QWORD PTR [rcx+0x20]
  407468:	test   rax,rax
  40746b:	je     0x4074b5
  40746d:	mov    ebx,DWORD PTR [rax]
  40746f:	lea    rsi,[rax+0x8]
  407473:	test   ebx,ebx
  407475:	je     0x4074b5
  407477:	test   rdx,rdx
  40747a:	je     0x4074e9
  40747c:	nop    DWORD PTR [rax+0x0]
  407480:	sub    ebx,0x1
  407483:	js     0x4074b5
  407485:	add    rsi,0x8
  407489:	mov    rdi,QWORD PTR [rsi-0x8]
  40748d:	mov    rdx,rbp
  407490:	mov    rcx,rdi
  407493:	call   0x4073a0
  407498:	test   rax,rax
  40749b:	je     0x407480
  40749d:	test   r12,r12
  4074a0:	jne    0x407480
  4074a2:	test   rdi,rdi
  4074a5:	mov    rax,rdi
  4074a8:	je     0x4074b5
  4074aa:	add    rsp,0x20
  4074ae:	pop    rbx
  4074af:	pop    rsi
  4074b0:	pop    rdi
  4074b1:	pop    rbp
  4074b2:	pop    r12
  4074b4:	ret    
  4074b5:	call   QWORD PTR [rip+0x1e265]        # 0x425720
  4074bb:	mov    DWORD PTR [rax],0x2
  4074c1:	xor    eax,eax
  4074c3:	add    rsp,0x20
  4074c7:	pop    rbx
  4074c8:	pop    rsi
  4074c9:	pop    rdi
  4074ca:	pop    rbp
  4074cb:	pop    r12
  4074cd:	ret    
  4074ce:	xchg   ax,ax
  4074d0:	call   QWORD PTR [rip+0x1e24a]        # 0x425720
  4074d6:	mov    DWORD PTR [rax],0x16
  4074dc:	xor    eax,eax
  4074de:	add    rsp,0x20
  4074e2:	pop    rbx
  4074e3:	pop    rsi
  4074e4:	pop    rdi
  4074e5:	pop    rbp
  4074e6:	pop    r12
  4074e8:	ret    
  4074e9:	mov    rax,QWORD PTR [rax+0x8]
  4074ed:	jmp    0x4074aa
  4074ef:	nop
  4074f0:	push   rbx
  4074f1:	sub    rsp,0x20
  4074f5:	test   rcx,rcx
  4074f8:	je     0x407550
  4074fa:	cmp    DWORD PTR [rcx],0x6
  4074fd:	jne    0x407550
  4074ff:	mov    r8,QWORD PTR [rcx+0x10]
  407503:	mov    eax,DWORD PTR [r8]
  407506:	add    r8,0x8
  40750a:	jmp    0x40751d
  40750c:	nop    DWORD PTR [rax+0x0]
  407510:	lea    rcx,[r8+0x8]
  407514:	cmp    QWORD PTR [rcx-0x8],rdx
  407518:	je     0x407540
  40751a:	mov    r8,rcx
  40751d:	sub    eax,0x1
  407520:	lea    ecx,[rax+0x1]
  407523:	test   ecx,ecx
  407525:	jg     0x407510
  407527:	mov    ebx,0x16
  40752c:	call   QWORD PTR [rip+0x1e1ee]        # 0x425720
  407532:	mov    DWORD PTR [rax],ebx
  407534:	xor    eax,eax
  407536:	add    rsp,0x20
  40753a:	pop    rbx
  40753b:	ret    
  40753c:	nop    DWORD PTR [rax+0x0]
  407540:	test   eax,eax
  407542:	jne    0x407564
  407544:	mov    ebx,0x2
  407549:	jmp    0x40752c
  40754b:	nop    DWORD PTR [rax+rax*1+0x0]
  407550:	call   QWORD PTR [rip+0x1e1ca]        # 0x425720
  407556:	mov    DWORD PTR [rax],0x16
  40755c:	xor    eax,eax
  40755e:	add    rsp,0x20
  407562:	pop    rbx
  407563:	ret    
  407564:	mov    rax,QWORD PTR [r8+0x8]
  407568:	add    rsp,0x20
  40756c:	pop    rbx
  40756d:	ret    
  40756e:	xchg   ax,ax
  407570:	push   rsi
  407571:	push   rbx
  407572:	sub    rsp,0x38
  407576:	movzx  eax,BYTE PTR [rcx]
  407579:	mov    rsi,rdx
  40757c:	cmp    al,0x78
  40757e:	mov    BYTE PTR [rdx],al
  407580:	ja     0x4076d3
  407586:	lea    r9,[rip+0x13703]        # 0x41ac90
  40758d:	movsxd rax,DWORD PTR [r9+rax*4]
  407591:	add    r9,rax
  407594:	jmp    r9
  407597:	nop    WORD PTR [rax+rax*1+0x0]
  4075a0:	mov    ebx,0x1
  4075a5:	mov    BYTE PTR [rsi],r8b
  4075a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4075b0:	mov    eax,ebx
  4075b2:	add    rsp,0x38
  4075b6:	pop    rbx
  4075b7:	pop    rsi
  4075b8:	ret    
  4075b9:	nop    DWORD PTR [rax+0x0]
  4075c0:	xor    ebx,ebx
  4075c2:	jmp    0x4075b0
  4075c4:	mov    BYTE PTR [rdx],0xb
  4075c7:	mov    ebx,0x1
  4075cc:	jmp    0x4075b0
  4075ce:	xchg   ax,ax
  4075d0:	mov    BYTE PTR [rdx],0xd
  4075d3:	mov    ebx,0x1
  4075d8:	jmp    0x4075b0
  4075da:	nop    WORD PTR [rax+rax*1+0x0]
  4075e0:	mov    BYTE PTR [rdx],0x9
  4075e3:	mov    ebx,0x1
  4075e8:	jmp    0x4075b0
  4075ea:	nop    WORD PTR [rax+rax*1+0x0]
  4075f0:	cmp    BYTE PTR [rcx+0x1],0xa
  4075f4:	mov    ebx,0x1
  4075f9:	jne    0x4075b0
  4075fb:	mov    bl,0x2
  4075fd:	jmp    0x4075a5
  4075ff:	nop
  407600:	movzx  eax,BYTE PTR [rcx]
  407603:	mov    ebx,0x1
  407608:	mov    BYTE PTR [rsp+0x20],al
  40760c:	mov    eax,ebx
  40760e:	movzx  edx,BYTE PTR [rcx+rax*1]
  407612:	cmp    dl,0x7f
  407615:	ja     0x40771a
  40761b:	lea    r9,[rip+0x1755e]        # 0x41eb80
  407622:	movzx  r8d,dl
  407626:	test   BYTE PTR [r9+r8*4+0x2],0x1
  40762c:	je     0x40771a
  407632:	cmp    ebx,0x2
  407635:	mov    BYTE PTR [rsp+rax*1+0x20],dl
  407639:	je     0x407710
  40763f:	mov    ebx,0x2
  407644:	jmp    0x40760c
  407646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407650:	movzx  eax,BYTE PTR [rcx+0x1]
  407654:	mov    ebx,0x1
  407659:	cmp    al,0x7f
  40765b:	ja     0x4075b0
  407661:	lea    rdx,[rip+0x17518]        # 0x41eb80
  407668:	movzx  r8d,al
  40766c:	test   DWORD PTR [rdx+r8*4],0x70000
  407674:	je     0x4075b0
  40767a:	movzx  ecx,BYTE PTR [rcx+0x2]
  40767e:	mov    BYTE PTR [rsp+0x20],al
  407682:	cmp    cl,0x7f
  407685:	movzx  eax,cl
  407688:	ja     0x407745
  40768e:	test   DWORD PTR [rdx+rax*4],0x70000
  407695:	je     0x407745
  40769b:	mov    BYTE PTR [rsp+0x21],cl
  40769f:	mov    ebx,0x3
  4076a4:	mov    eax,0x2
  4076a9:	lea    rcx,[rsp+0x20]
  4076ae:	mov    r8d,0x10
  4076b4:	xor    edx,edx
  4076b6:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  4076bb:	call   0x418500
  4076c0:	mov    BYTE PTR [rsi],al
  4076c2:	jmp    0x4075b0
  4076c7:	nop    WORD PTR [rax+rax*1+0x0]
  4076d0:	mov    BYTE PTR [rdx],0x7
  4076d3:	mov    ebx,0x1
  4076d8:	mov    eax,ebx
  4076da:	add    rsp,0x38
  4076de:	pop    rbx
  4076df:	pop    rsi
  4076e0:	ret    
  4076e1:	mov    BYTE PTR [rdx],0x8
  4076e4:	mov    ebx,0x1
  4076e9:	jmp    0x4075b0
  4076ee:	xchg   ax,ax
  4076f0:	mov    BYTE PTR [rdx],0xc
  4076f3:	mov    ebx,0x1
  4076f8:	jmp    0x4075b0
  4076fd:	nop    DWORD PTR [rax]
  407700:	mov    BYTE PTR [rdx],0xa
  407703:	mov    ebx,0x1
  407708:	jmp    0x4075b0
  40770d:	nop    DWORD PTR [rax]
  407710:	mov    ebx,0x3
  407715:	mov    eax,0x3
  40771a:	lea    rcx,[rsp+0x20]
  40771f:	xor    edx,edx
  407721:	mov    r8d,0x8
  407727:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  40772c:	call   0x418500
  407731:	mov    edx,0xff
  407736:	cmp    eax,0xff
  40773b:	cmova  eax,edx
  40773e:	mov    BYTE PTR [rsi],al
  407740:	jmp    0x4075b0
  407745:	mov    ebx,0x2
  40774a:	mov    eax,0x1
  40774f:	jmp    0x4076a9
  407754:	xchg   ax,ax
  407756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407760:	push   r14
  407762:	push   r13
  407764:	push   r12
  407766:	push   rbp
  407767:	push   rdi
  407768:	push   rsi
  407769:	push   rbx
  40776a:	sub    rsp,0x30
  40776e:	movzx  esi,BYTE PTR [rcx]
  407771:	movzx  r8d,BYTE PTR [rcx+0x1]
  407776:	mov    r13d,0x1
  40777c:	lea    rax,[rsp+0x2c]
  407781:	mov    rbp,rdx
  407784:	test   rdx,rdx
  407787:	lea    r9,[rcx+0x1]
  40778b:	mov    rbx,rcx
  40778e:	mov    DWORD PTR [rsp+0x2c],0x0
  407796:	cmove  rbp,rax
  40779a:	movabs r12,0x200000000000011
  4077a4:	cmp    sil,r8b
  4077a7:	je     0x4077d9
  4077a9:	cmp    r8b,0xa
  4077ad:	lea    r14,[rbx+0x1]
  4077b1:	lea    rdi,[r9+0x1]
  4077b5:	mov    BYTE PTR [rbx],r8b
  4077b8:	je     0x407880
  4077be:	cmp    r8b,0x5c
  4077c2:	je     0x407842
  4077c4:	test   r8b,r8b
  4077c7:	je     0x407831
  4077c9:	movzx  r8d,BYTE PTR [r9+0x1]
  4077ce:	mov    rbx,r14
  4077d1:	mov    r9,rdi
  4077d4:	cmp    sil,r8b
  4077d7:	jne    0x4077a9
  4077d9:	lea    rdi,[r9+0x1]
  4077dd:	mov    BYTE PTR [rbx],0x0
  4077e0:	movzx  esi,BYTE PTR [rdi]
  4077e3:	cmp    sil,0x7f
  4077e7:	ja     0x407801
  4077e9:	lea    rdx,[rip+0x17390]        # 0x41eb80
  4077f0:	movzx  eax,sil
  4077f4:	test   DWORD PTR [rdx+rax*4],0xc01
  4077fb:	jne    0x407890
  407801:	cmp    sil,0x27
  407805:	je     0x4078f0
  40780b:	cmp    sil,0x2f
  40780f:	je     0x407911
  407815:	cmp    sil,0x22
  407819:	je     0x4078f0
  40781f:	mov    rax,rdi
  407822:	add    rsp,0x30
  407826:	pop    rbx
  407827:	pop    rsi
  407828:	pop    rdi
  407829:	pop    rbp
  40782a:	pop    r12
  40782c:	pop    r13
  40782e:	pop    r14
  407830:	ret    
  407831:	xor    eax,eax
  407833:	add    rsp,0x30
  407837:	pop    rbx
  407838:	pop    rsi
  407839:	pop    rdi
  40783a:	pop    rbp
  40783b:	pop    r12
  40783d:	pop    r13
  40783f:	pop    r14
  407841:	ret    
  407842:	movzx  r8d,BYTE PTR [r9+0x1]
  407847:	cmp    r8b,0xa
  40784b:	je     0x407900
  407851:	cmp    sil,0x27
  407855:	je     0x4078b0
  407857:	mov    r8d,0xa
  40785d:	mov    rdx,rbx
  407860:	mov    rcx,rdi
  407863:	call   0x407570
  407868:	test   eax,eax
  40786a:	je     0x407831
  40786c:	mov    eax,eax
  40786e:	mov    rbx,r14
  407871:	lea    r9,[rdi+rax*1]
  407875:	movzx  r8d,BYTE PTR [r9]
  407879:	jmp    0x4077a4
  40787e:	xchg   ax,ax
  407880:	add    DWORD PTR [rbp+0x0],0x1
  407884:	jmp    0x4077c9
  407889:	nop    DWORD PTR [rax+0x0]
  407890:	add    rdi,0x1
  407894:	cmp    sil,0xa
  407898:	jne    0x4077e0
  40789e:	add    DWORD PTR [rbp+0x0],0x1
  4078a2:	jmp    0x4077e0
  4078a7:	nop    WORD PTR [rax+rax*1+0x0]
  4078b0:	lea    ecx,[r8-0x23]
  4078b4:	cmp    cl,0x39
  4078b7:	ja     0x4078e0
  4078b9:	mov    rax,r13
  4078bc:	shl    rax,cl
  4078bf:	test   rax,r12
  4078c2:	je     0x4078e0
  4078c4:	mov    BYTE PTR [rbx],r8b
  4078c7:	add    r9,0x2
  4078cb:	movzx  r8d,BYTE PTR [r9]
  4078cf:	mov    rbx,r14
  4078d2:	jmp    0x4077a4
  4078d7:	nop    WORD PTR [rax+rax*1+0x0]
  4078e0:	mov    r9,rdi
  4078e3:	mov    rbx,r14
  4078e6:	jmp    0x4077a4
  4078eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4078f0:	lea    r9,[rdi+0x1]
  4078f4:	movzx  r8d,BYTE PTR [rdi+0x1]
  4078f9:	jmp    0x4077a4
  4078fe:	xchg   ax,ax
  407900:	add    DWORD PTR [rbp+0x0],0x1
  407904:	add    r9,0x2
  407908:	movzx  r8d,BYTE PTR [r9]
  40790c:	jmp    0x4077a4
  407911:	movzx  eax,BYTE PTR [rdi+0x1]
  407915:	cmp    al,0x2a
  407917:	je     0x407940
  407919:	cmp    al,0x2f
  40791b:	jne    0x407980
  40791d:	mov    rcx,rdi
  407920:	mov    edx,0xa
  407925:	call   0x418560
  40792a:	test   rax,rax
  40792d:	mov    rdi,rax
  407930:	jne    0x4077e0
  407936:	jmp    0x40781f
  40793b:	nop    DWORD PTR [rax+rax*1+0x0]
  407940:	lea    rcx,[rdi+0x2]
  407944:	lea    rdx,[rip+0x13529]        # 0x41ae74
  40794b:	call   0x418510
  407950:	test   rax,rax
  407953:	je     0x407980
  407955:	cmp    rdi,rax
  407958:	jae    0x407990
  40795a:	mov    edx,0x2f
  40795f:	jmp    0x407969
  407961:	cmp    rdi,rax
  407964:	je     0x407990
  407966:	movzx  edx,BYTE PTR [rdi]
  407969:	add    rdi,0x1
  40796d:	cmp    dl,0xa
  407970:	jne    0x407961
  407972:	add    DWORD PTR [rbp+0x0],0x1
  407976:	jmp    0x407961
  407978:	nop    DWORD PTR [rax+rax*1+0x0]
  407980:	xor    edi,edi
  407982:	jmp    0x40781f
  407987:	nop    WORD PTR [rax+rax*1+0x0]
  407990:	lea    rdi,[rax+0x2]
  407994:	jmp    0x4077e0
  407999:	nop    DWORD PTR [rax+0x0]
  4079a0:	push   r15
  4079a2:	push   r14
  4079a4:	push   r13
  4079a6:	push   r12
  4079a8:	push   rbp
  4079a9:	push   rdi
  4079aa:	push   rsi
  4079ab:	push   rbx
  4079ac:	sub    rsp,0xe8
  4079b3:	test   rcx,rcx
  4079b6:	mov    rbx,rcx
  4079b9:	mov    rbp,rdx
  4079bc:	mov    rdi,r8
  4079bf:	je     0x40854a
  4079c5:	mov    rax,QWORD PTR [rip+0x1bc14]        # 0x4235e0
  4079cc:	test   rax,rax
  4079cf:	je     0x40808c
  4079d5:	movzx  r8d,BYTE PTR [rbx]
  4079d9:	cmp    BYTE PTR [rax+r8*1],0x0
  4079de:	mov    rcx,r8
  4079e1:	je     0x4079f3
  4079e3:	add    rbx,0x1
  4079e7:	movzx  edx,BYTE PTR [rbx]
  4079ea:	cmp    BYTE PTR [rax+rdx*1],0x0
  4079ee:	mov    rcx,rdx
  4079f1:	jne    0x4079e3
  4079f3:	test   cl,cl
  4079f5:	je     0x407ef3
  4079fb:	lea    rcx,[rdi+0x19]
  4079ff:	call   0x404550
  407a04:	lea    rcx,[rax+0x18]
  407a08:	mov    rsi,rax
  407a0b:	mov    rdx,rbp
  407a0e:	mov    r8,rdi
  407a11:	mov    DWORD PTR [rax],0x6
  407a17:	lea    rbp,[rsp+0x90]
  407a1f:	mov    QWORD PTR [rax+0x8],rcx
  407a23:	lea    r13,[rsi+0x10]
  407a27:	call   0x4185a0
  407a2c:	mov    BYTE PTR [rsi+rdi*1+0x18],0x0
  407a31:	mov    ecx,0x38
  407a36:	lea    r12,[rbp+0x2]
  407a3a:	call   0x404550
  407a3f:	mov    QWORD PTR [rsi+0x10],rax
  407a43:	mov    DWORD PTR [rax],0x0
  407a49:	mov    DWORD PTR [rax+0x4],0x6
  407a50:	lea    rax,[rsp+0x70]
  407a55:	mov    QWORD PTR [rsp+0x48],rax
  407a5a:	lea    rax,[rsp+0x98]
  407a62:	mov    QWORD PTR [rsp+0x38],rax
  407a67:	mov    rax,QWORD PTR [rip+0x1bb72]        # 0x4235e0
  407a6e:	test   rax,rax
  407a71:	jne    0x407a84
  407a73:	jmp    0x407e55
  407a78:	nop    DWORD PTR [rax+rax*1+0x0]
  407a80:	add    rbx,0x1
  407a84:	movzx  ecx,BYTE PTR [rbx]
  407a87:	cmp    BYTE PTR [rax+rcx*1],0x0
  407a8b:	mov    rdx,rcx
  407a8e:	jne    0x407a80
  407a90:	cmp    cl,0x7f
  407a93:	ja     0x407b30
  407a99:	movzx  eax,cl
  407a9c:	lea    rcx,[rip+0x170dd]        # 0x41eb80
  407aa3:	test   DWORD PTR [rcx+rax*4],0x180040
  407aaa:	je     0x407b30
  407ab0:	mov    rax,QWORD PTR [rip+0x1bba9]        # 0x423660
  407ab7:	lea    rdi,[rbx+0x1]
  407abb:	test   rax,rax
  407abe:	je     0x4084aa
  407ac4:	movzx  edx,BYTE PTR [rbx+0x1]
  407ac8:	cmp    BYTE PTR [rax+rdx*1],0x0
  407acc:	je     0x407add
  407ace:	xchg   ax,ax
  407ad0:	add    rdi,0x1
  407ad4:	movzx  edx,BYTE PTR [rdi]
  407ad7:	cmp    BYTE PTR [rax+rdx*1],0x0
  407adb:	jne    0x407ad0
  407add:	xor    eax,eax
  407adf:	cmp    BYTE PTR [rdi-0x1],0x3a
  407ae3:	sete   al
  407ae6:	sub    rdi,rax
  407ae9:	mov    rax,QWORD PTR [rip+0x1bae0]        # 0x4235d0
  407af0:	mov    r8,rdi
  407af3:	sub    r8,rbx
  407af6:	test   rax,rax
  407af9:	jne    0x407b04
  407afb:	jmp    0x408491
  407b00:	add    rdi,0x1
  407b04:	movzx  ecx,BYTE PTR [rdi]
  407b07:	cmp    BYTE PTR [rax+rcx*1],0x0
  407b0b:	mov    rdx,rcx
  407b0e:	jne    0x407b00
  407b10:	lea    r14,[rip+0x13365]        # 0x41ae7c
  407b17:	cmp    dl,0x3d
  407b1a:	ja     0x407d62
  407b20:	movzx  eax,dl
  407b23:	movsxd rax,DWORD PTR [r14+rax*4]
  407b27:	add    rax,r14
  407b2a:	jmp    rax
  407b2c:	nop    DWORD PTR [rax+0x0]
  407b30:	cmp    dl,0x23
  407b33:	je     0x407c24
  407b39:	cmp    dl,0x3c
  407b3c:	je     0x407c40
  407b42:	test   dl,dl
  407b44:	je     0x407b94
  407b46:	mov    rcx,QWORD PTR [rsi+0x10]
  407b4a:	call   0x4185e0
  407b4f:	mov    rcx,rsi
  407b52:	call   0x4185e0
  407b57:	xor    eax,eax
  407b59:	add    rsp,0xe8
  407b60:	pop    rbx
  407b61:	pop    rsi
  407b62:	pop    rdi
  407b63:	pop    rbp
  407b64:	pop    r12
  407b66:	pop    r13
  407b68:	pop    r14
  407b6a:	pop    r15
  407b6c:	ret    
  407b6d:	add    rdi,0x1
  407b71:	mov    rdx,rbx
  407b74:	mov    QWORD PTR [rsp+0x20],0x0
  407b7d:	xor    r9d,r9d
  407b80:	mov    rcx,r13
  407b83:	mov    rbx,rdi
  407b86:	call   0x404660
  407b8b:	test   rbx,rbx
  407b8e:	jne    0x407a67
  407b94:	mov    r15,QWORD PTR [rsi+0x10]
  407b98:	mov    edx,DWORD PTR [r15]
  407b9b:	test   edx,edx
  407b9d:	je     0x40855d
  407ba3:	cmp    edx,0x1
  407ba6:	mov    rax,rsi
  407ba9:	jle    0x407b59
  407bab:	lea    r12d,[rdx-0x2]
  407baf:	xor    edi,edi
  407bb1:	add    r12,0x1
  407bb5:	mov    rbp,QWORD PTR [r15+rdi*8+0x10]
  407bba:	mov    ebx,edi
  407bbc:	mov    r14,QWORD PTR [r15+rdi*8+0x8]
  407bc1:	mov    r13,QWORD PTR [rbp+0x8]
  407bc5:	jmp    0x407bea
  407bc7:	nop    WORD PTR [rax+rax*1+0x0]
  407bd0:	lea    eax,[rbx+0x1]
  407bd3:	sub    ebx,0x1
  407bd6:	cmp    ebx,0xffffffff
  407bd9:	cdqe   
  407bdb:	mov    QWORD PTR [r15+rax*8+0x8],r14
  407be0:	movsxd rax,ebx
  407be3:	mov    r14,QWORD PTR [r15+rax*8+0x8]
  407be8:	je     0x407c20
  407bea:	mov    rcx,QWORD PTR [r14+0x8]
  407bee:	mov    rdx,r13
  407bf1:	call   0x418558
  407bf6:	test   eax,eax
  407bf8:	jg     0x407bd0
  407bfa:	add    ebx,0x1
  407bfd:	add    rdi,0x1
  407c01:	movsxd rbx,ebx
  407c04:	cmp    rdi,r12
  407c07:	mov    QWORD PTR [r15+rbx*8+0x8],rbp
  407c0c:	jne    0x407bb5
  407c0e:	mov    rax,rsi
  407c11:	jmp    0x407b59
  407c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c20:	xor    ebx,ebx
  407c22:	jmp    0x407bfd
  407c24:	mov    rcx,rbx
  407c27:	mov    edx,0xa
  407c2c:	call   0x418560
  407c31:	mov    rbx,rax
  407c34:	jmp    0x407b8b
  407c39:	nop    DWORD PTR [rax+0x0]
  407c40:	mov    eax,DWORD PTR [rip+0x11dca]        # 0x419a10
  407c46:	mov    DWORD PTR [rsp+0x54],eax
  407c4a:	lea    rax,[rbx+0x1]
  407c4e:	mov    QWORD PTR [rsp+0x40],rax
  407c53:	movzx  eax,BYTE PTR [rbx+0x1]
  407c57:	cmp    al,0x7f
  407c59:	ja     0x407cd0
  407c5b:	lea    r10,[rip+0x16f1e]        # 0x41eb80
  407c62:	movzx  edx,al
  407c65:	test   DWORD PTR [r10+rdx*4],0x180040
  407c6d:	je     0x407cd0
  407c6f:	mov    rax,QWORD PTR [rip+0x1b9ea]        # 0x423660
  407c76:	lea    rdi,[rbx+0x2]
  407c7a:	test   rax,rax
  407c7d:	je     0x4085a7
  407c83:	movzx  edx,BYTE PTR [rbx+0x2]
  407c87:	cmp    BYTE PTR [rax+rdx*1],0x0
  407c8b:	je     0x407c9d
  407c8d:	nop    DWORD PTR [rax]
  407c90:	add    rdi,0x1
  407c94:	movzx  edx,BYTE PTR [rdi]
  407c97:	cmp    BYTE PTR [rax+rdx*1],0x0
  407c9b:	jne    0x407c90
  407c9d:	mov    r14,rdi
  407ca0:	sub    r14,QWORD PTR [rsp+0x40]
  407ca5:	cmp    r14,0x40
  407ca9:	ja     0x407cc1
  407cab:	mov    DWORD PTR [rsp+0x70],0x1
  407cb3:	movzx  eax,BYTE PTR [rdi]
  407cb6:	cmp    al,0x7f
  407cb8:	movzx  edx,al
  407cbb:	jbe    0x407fa0
  407cc1:	mov    eax,DWORD PTR [rsp+0x54]
  407cc5:	mov    DWORD PTR [rip+0x11d45],eax        # 0x419a10
  407ccb:	jmp    0x407b46
  407cd0:	cmp    al,0x21
  407cd2:	je     0x407f06
  407cd8:	cmp    al,0x3f
  407cda:	jne    0x407b46
  407ce0:	mov    rcx,QWORD PTR [rsp+0x40]
  407ce5:	mov    edx,0x3e
  407cea:	call   0x418560
  407cef:	test   rax,rax
  407cf2:	je     0x407b46
  407cf8:	lea    rbx,[rax+0x1]
  407cfc:	test   rbx,rbx
  407cff:	je     0x407b46
  407d05:	cmp    BYTE PTR [rbx],0x2c
  407d08:	jne    0x407a67
  407d0e:	add    rbx,0x1
  407d12:	jmp    0x407b8b
  407d17:	mov    rax,QWORD PTR [rip+0x1b8b2]        # 0x4235d0
  407d1e:	lea    r15,[rdi+0x1]
  407d22:	test   rax,rax
  407d25:	je     0x4085c0
  407d2b:	movzx  edx,BYTE PTR [rdi+0x1]
  407d2f:	mov    rdi,r15
  407d32:	cmp    BYTE PTR [rax+rdx*1],0x0
  407d36:	mov    rcx,rdx
  407d39:	je     0x407d50
  407d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d40:	add    rdi,0x1
  407d44:	movzx  edx,BYTE PTR [rdi]
  407d47:	cmp    BYTE PTR [rax+rdx*1],0x0
  407d4b:	mov    rcx,rdx
  407d4e:	jne    0x407d40
  407d50:	cmp    cl,0x3a
  407d53:	mov    edx,ecx
  407d55:	je     0x407d60
  407d57:	cmp    cl,0x3d
  407d5a:	jne    0x407b17
  407d60:	mov    edx,ecx
  407d62:	mov    r15,rdi
  407d65:	cmp    dl,0xa
  407d68:	lea    rax,[rdi+0x2]
  407d6c:	lea    r14,[r15+0x1]
  407d70:	je     0x407d93
  407d72:	cmp    dl,0x2c
  407d75:	je     0x407e64
  407d7b:	test   dl,dl
  407d7d:	je     0x408062
  407d83:	movzx  edx,BYTE PTR [r14]
  407d87:	mov    r15,r14
  407d8a:	lea    r14,[r15+0x1]
  407d8e:	cmp    dl,0xa
  407d91:	jne    0x407d72
  407d93:	cmp    r14,rax
  407d96:	jbe    0x407e64
  407d9c:	cmp    BYTE PTR [r14-0x2],0x5c
  407da1:	jne    0x407da9
  407da3:	cmp    BYTE PTR [r14],0x0
  407da7:	jne    0x407d83
  407da9:	mov    rax,r14
  407dac:	mov    rdx,rbx
  407daf:	mov    r9,rdi
  407db2:	sub    rax,rdi
  407db5:	mov    rcx,r13
  407db8:	mov    rbx,r14
  407dbb:	sub    rax,0x1
  407dbf:	mov    QWORD PTR [rsp+0x20],rax
  407dc4:	call   0x404660
  407dc9:	test   rax,rax
  407dcc:	jne    0x407e8d
  407dd2:	jmp    0x407a67
  407dd7:	nop    WORD PTR [rax+rax*1+0x0]
  407de0:	lea    r15,[rdi+0x1]
  407de4:	jmp    0x407e03
  407de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407df0:	cmp    al,dl
  407df2:	je     0x407f29
  407df8:	cmp    al,0x5c
  407dfa:	je     0x407f60
  407e00:	mov    r15,r14
  407e03:	lea    r14,[r15+0x1]
  407e07:	movzx  eax,BYTE PTR [r14-0x1]
  407e0c:	test   al,al
  407e0e:	jne    0x407df0
  407e10:	mov    rax,r15
  407e13:	mov    rdx,rbx
  407e16:	mov    r9,rdi
  407e19:	sub    rax,rdi
  407e1c:	mov    rcx,r13
  407e1f:	mov    rbx,r15
  407e22:	mov    QWORD PTR [rsp+0x20],rax
  407e27:	call   0x404660
  407e2c:	test   rax,rax
  407e2f:	je     0x407a67
  407e35:	mov    r8d,DWORD PTR [rip+0x11bd4]        # 0x419a10
  407e3c:	test   r8d,r8d
  407e3f:	jne    0x407b8b
  407e45:	lea    rcx,[rax+0x10]
  407e49:	xor    edx,edx
  407e4b:	call   0x407760
  407e50:	jmp    0x407b8b
  407e55:	mov    ecx,0xc
  407e5a:	call   0x404060
  407e5f:	jmp    0x407a84
  407e64:	mov    rax,r14
  407e67:	mov    rdx,rbx
  407e6a:	mov    r9,rdi
  407e6d:	sub    rax,rdi
  407e70:	mov    rcx,r13
  407e73:	mov    rbx,r14
  407e76:	sub    rax,0x1
  407e7a:	mov    QWORD PTR [rsp+0x20],rax
  407e7f:	call   0x404660
  407e84:	test   rax,rax
  407e87:	je     0x407b8b
  407e8d:	add    rax,0x10
  407e91:	jmp    0x407e97
  407e93:	add    rax,0x1
  407e97:	cmp    BYTE PTR [rax],0xa
  407e9a:	je     0x407e93
  407e9c:	mov    edx,0xa
  407ea1:	mov    rcx,rax
  407ea4:	call   0x418560
  407ea9:	test   rax,rax
  407eac:	je     0x407b8b
  407eb2:	cmp    BYTE PTR [rax-0x1],0x5c
  407eb6:	jne    0x407e97
  407eb8:	movzx  ecx,BYTE PTR [rax]
  407ebb:	lea    rdx,[rax-0x1]
  407ebf:	lea    r8,[rdx+0x1]
  407ec3:	test   cl,cl
  407ec5:	mov    BYTE PTR [rdx],cl
  407ec7:	je     0x407b8b
  407ecd:	cmp    cl,0x5c
  407ed0:	jne    0x407eda
  407ed2:	cmp    BYTE PTR [rax+0x1],0xa
  407ed6:	cmove  r8,rdx
  407eda:	add    rax,0x1
  407ede:	movzx  ecx,BYTE PTR [rax]
  407ee1:	mov    rdx,r8
  407ee4:	lea    r8,[rdx+0x1]
  407ee8:	test   cl,cl
  407eea:	mov    BYTE PTR [rdx],cl
  407eec:	jne    0x407ecd
  407eee:	jmp    0x407b8b
  407ef3:	call   QWORD PTR [rip+0x1d827]        # 0x425720
  407ef9:	mov    DWORD PTR [rax],0x2
  407eff:	xor    eax,eax
  407f01:	jmp    0x407b59
  407f06:	mov    rcx,QWORD PTR [rsp+0x40]
  407f0b:	lea    rdx,[rip+0x12f65]        # 0x41ae77
  407f12:	call   0x418510
  407f17:	test   rax,rax
  407f1a:	je     0x407b46
  407f20:	lea    rbx,[rax+0x3]
  407f24:	jmp    0x407cfc
  407f29:	mov    rax,r14
  407f2c:	mov    r9,rdi
  407f2f:	mov    rdx,rbx
  407f32:	sub    rax,rdi
  407f35:	mov    rcx,r13
  407f38:	mov    QWORD PTR [rsp+0x20],rax
  407f3d:	call   0x404660
  407f42:	test   rax,rax
  407f45:	je     0x407f55
  407f47:	mov    edx,DWORD PTR [rip+0x11ac3]        # 0x419a10
  407f4d:	test   edx,edx
  407f4f:	je     0x40853d
  407f55:	mov    rbx,r14
  407f58:	jmp    0x407a67
  407f5d:	nop    DWORD PTR [rax]
  407f60:	mov    rcx,r15
  407f63:	add    r15,0x2
  407f67:	movzx  eax,BYTE PTR [rcx+0x1]
  407f6b:	test   al,al
  407f6d:	je     0x40866e
  407f73:	cmp    al,0x5c
  407f75:	je     0x407f7f
  407f77:	cmp    al,dl
  407f79:	jne    0x407e03
  407f7f:	cmp    BYTE PTR [rcx+0x2],0x0
  407f83:	mov    rax,r15
  407f86:	lea    r15,[rcx+0x3]
  407f8a:	jne    0x407e03
  407f90:	mov    r15,rax
  407f93:	jmp    0x407e10
  407f98:	nop    DWORD PTR [rax+rax*1+0x0]
  407fa0:	movzx  ecx,al
  407fa3:	mov    ecx,DWORD PTR [r10+rcx*4]
  407fa7:	test   ecx,0xc01
  407fad:	je     0x40800b
  407faf:	mov    rax,QWORD PTR [rip+0x1b62a]        # 0x4235e0
  407fb6:	test   rax,rax
  407fb9:	jne    0x407fc7
  407fbb:	jmp    0x40862f
  407fc0:	add    rdi,0x1
  407fc4:	movzx  edx,BYTE PTR [rdi]
  407fc7:	cmp    BYTE PTR [rax+rdx*1],0x0
  407fcb:	jne    0x407fc0
  407fcd:	mov    r8,QWORD PTR [rsp+0x48]
  407fd2:	lea    rdx,[rip+0x11a37]        # 0x419a10
  407fd9:	mov    rcx,rdi
  407fdc:	mov    QWORD PTR [rsp+0x58],r10
  407fe1:	call   0x406530
  407fe6:	test   rax,rax
  407fe9:	mov    rdi,rax
  407fec:	je     0x407cc1
  407ff2:	movzx  edx,BYTE PTR [rax]
  407ff5:	cmp    dl,0x7f
  407ff8:	mov    eax,edx
  407ffa:	ja     0x407cc1
  408000:	mov    r10,QWORD PTR [rsp+0x58]
  408005:	mov    edx,edx
  408007:	mov    ecx,DWORD PTR [r10+rdx*4]
  40800b:	and    ecx,0x1000c01
  408011:	je     0x407cc1
  408017:	cmp    al,0x2f
  408019:	je     0x40851f
  40801f:	mov    r15,rdi
  408022:	add    r15,0x1
  408026:	je     0x407cc1
  40802c:	mov    ecx,DWORD PTR [rsp+0x70]
  408030:	test   ecx,ecx
  408032:	jne    0x40809b
  408034:	mov    rdx,QWORD PTR [rsp+0x40]
  408039:	mov    QWORD PTR [rsp+0x20],0x0
  408042:	xor    r9d,r9d
  408045:	mov    r8,r14
  408048:	mov    rcx,r13
  40804b:	mov    rbx,r15
  40804e:	call   0x404660
  408053:	mov    eax,DWORD PTR [rsp+0x54]
  408057:	mov    DWORD PTR [rip+0x119b3],eax        # 0x419a10
  40805d:	jmp    0x407d05
  408062:	mov    rax,r15
  408065:	mov    rdx,rbx
  408068:	mov    r9,rdi
  40806b:	sub    rax,rdi
  40806e:	mov    rcx,r13
  408071:	mov    rbx,r15
  408074:	mov    QWORD PTR [rsp+0x20],rax
  408079:	call   0x404660
  40807e:	test   rax,rax
  408081:	jne    0x407e8d
  408087:	jmp    0x407a67
  40808c:	mov    ecx,0xc
  408091:	call   0x404060
  408096:	jmp    0x4079d5
  40809b:	cmp    DWORD PTR [rip+0x1196e],0x2        # 0x419a10
  4080a2:	je     0x4080ce
  4080a4:	mov    rax,QWORD PTR [rip+0x1b535]        # 0x4235e0
  4080ab:	test   rax,rax
  4080ae:	je     0x408616
  4080b4:	movzx  edx,BYTE PTR [rdi+0x1]
  4080b8:	cmp    BYTE PTR [rax+rdx*1],0x0
  4080bc:	je     0x4080ce
  4080be:	xchg   ax,ax
  4080c0:	add    r15,0x1
  4080c4:	movzx  edx,BYTE PTR [r15]
  4080c8:	cmp    BYTE PTR [rax+rdx*1],0x0
  4080cc:	jne    0x4080c0
  4080ce:	mov    rdi,QWORD PTR [rsp+0x38]
  4080d3:	mov    ecx,0x8
  4080d8:	xor    eax,eax
  4080da:	mov    QWORD PTR [rsp+0x90],0x2f3c
  4080e6:	rep stos QWORD PTR es:[rdi],rax
  4080e9:	nop    DWORD PTR [rax+0x0]
  4080f0:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  4080f5:	mov    BYTE PTR [r12+rax*1],dl
  4080f9:	add    rax,0x1
  4080fd:	cmp    r14,rax
  408100:	jne    0x4080f0
  408102:	lea    rax,[r12+r14*1-0x1]
  408107:	mov    rdx,rbp
  40810a:	mov    rcx,r15
  40810d:	mov    QWORD PTR [rsp+0x58],r10
  408112:	mov    BYTE PTR [rax+0x1],0x3e
  408116:	mov    BYTE PTR [rax+0x2],0x0
  40811a:	lea    rdi,[rax+0x2]
  40811e:	call   0x418510
  408123:	test   rax,rax
  408126:	mov    rbx,rax
  408129:	je     0x407cc1
  40812f:	cmp    DWORD PTR [rip+0x118da],0x2        # 0x419a10
  408136:	mov    r10,QWORD PTR [rsp+0x58]
  40813b:	jne    0x4084b9
  408141:	mov    rax,QWORD PTR [rip+0x1b498]        # 0x4235e0
  408148:	mov    r9,rbx
  40814b:	sub    rdi,rbp
  40814e:	sub    r9,r15
  408151:	add    rbx,rdi
  408154:	test   rax,rax
  408157:	jne    0x408164
  408159:	jmp    0x4085e6
  40815e:	xchg   ax,ax
  408160:	add    rbx,0x1
  408164:	movzx  edx,BYTE PTR [rbx]
  408167:	cmp    BYTE PTR [rax+rdx*1],0x0
  40816b:	jne    0x408160
  40816d:	cmp    DWORD PTR [rsp+0x70],0x6
  408172:	ja     0x408053
  408178:	mov    edx,DWORD PTR [rsp+0x70]
  40817c:	lea    rax,[rip+0x12df1]        # 0x41af74
  408183:	movsxd rdx,DWORD PTR [rax+rdx*4]
  408187:	add    rax,rdx
  40818a:	jmp    rax
  40818c:	lea    rcx,[r9+0x1]
  408190:	mov    QWORD PTR [rsp+0x58],r9
  408195:	call   0x404550
  40819a:	mov    r9,QWORD PTR [rsp+0x58]
  40819f:	mov    rdx,r15
  4081a2:	mov    rcx,rax
  4081a5:	mov    rdi,rax
  4081a8:	mov    r8,r9
  4081ab:	call   0x4185a0
  4081b0:	mov    r9,QWORD PTR [rsp+0x58]
  4081b5:	test   r9,r9
  4081b8:	mov    BYTE PTR [rdi+r9*1],0x0
  4081bd:	jne    0x40856e
  4081c3:	lea    rcx,[r14+0x19]
  4081c7:	call   0x404550
  4081cc:	mov    rdx,QWORD PTR [rsp+0x40]
  4081d1:	lea    rcx,[rax+0x18]
  4081d5:	mov    r15,rax
  4081d8:	mov    QWORD PTR [rax+0x10],0x0
  4081e0:	mov    DWORD PTR [rax],0x6
  4081e6:	mov    r8,r14
  4081e9:	mov    QWORD PTR [rax+0x8],rcx
  4081ed:	call   0x4185a0
  4081f2:	mov    BYTE PTR [r15+r14*1+0x18],0x0
  4081f8:	mov    rdx,r15
  4081fb:	mov    rcx,r13
  4081fe:	call   0x4045a0
  408203:	mov    rcx,rdi
  408206:	call   0x4185e0
  40820b:	jmp    0x408053
  408210:	lea    rcx,[r14+0x19]
  408214:	mov    QWORD PTR [rsp+0x60],r10
  408219:	mov    QWORD PTR [rsp+0x58],r9
  40821e:	call   0x404550
  408223:	mov    rdi,rax
  408226:	movzx  eax,BYTE PTR [r15]
  40822a:	mov    r9,QWORD PTR [rsp+0x58]
  40822f:	mov    r10,QWORD PTR [rsp+0x60]
  408234:	cmp    al,0x7f
  408236:	jbe    0x408290
  408238:	test   r9,r9
  40823b:	je     0x40829f
  40823d:	xor    r8d,r8d
  408240:	xor    edx,edx
  408242:	mov    rcx,r15
  408245:	call   0x418508
  40824a:	mov    DWORD PTR [rdi+0x10],eax
  40824d:	lea    rcx,[rdi+0x18]
  408251:	mov    rdx,QWORD PTR [rsp+0x40]
  408256:	mov    DWORD PTR [rdi],0x5
  40825c:	mov    r8,r14
  40825f:	mov    QWORD PTR [rdi+0x8],rcx
  408263:	call   0x4185a0
  408268:	mov    BYTE PTR [rdi+r14*1+0x18],0x0
  40826e:	mov    rdx,rdi
  408271:	mov    rcx,r13
  408274:	call   0x4045a0
  408279:	jmp    0x408053
  40827e:	xchg   ax,ax
  408280:	add    r15,0x1
  408284:	movzx  eax,BYTE PTR [r15]
  408288:	sub    r9,0x1
  40828c:	cmp    al,0x7f
  40828e:	ja     0x408238
  408290:	test   DWORD PTR [r10+rax*4],0xc01
  408298:	je     0x408238
  40829a:	test   r9,r9
  40829d:	jne    0x408280
  40829f:	mov    DWORD PTR [rdi+0x10],0x0
  4082a6:	jmp    0x40824d
  4082a8:	lea    rcx,[r14+0x19]
  4082ac:	mov    QWORD PTR [rsp+0x60],r10
  4082b1:	mov    QWORD PTR [rsp+0x58],r9
  4082b6:	call   0x404550
  4082bb:	movzx  edx,BYTE PTR [r15]
  4082bf:	mov    rdi,rax
  4082c2:	mov    r9,QWORD PTR [rsp+0x58]
  4082c7:	mov    r10,QWORD PTR [rsp+0x60]
  4082cc:	cmp    dl,0x7f
  4082cf:	jbe    0x408341
  4082d1:	test   r9,r9
  4082d4:	je     0x408352
  4082d6:	cmp    edx,0x7f
  4082d9:	ja     0x4085d9
  4082df:	mov    edx,edx
  4082e1:	mov    eax,DWORD PTR [r10+rdx*4]
  4082e5:	test   eax,0x30000
  4082ea:	je     0x408609
  4082f0:	mov    rcx,r15
  4082f3:	call   0x418640
  4082f8:	mov    DWORD PTR [rdi+0x10],eax
  4082fb:	lea    rcx,[rdi+0x18]
  4082ff:	mov    rdx,QWORD PTR [rsp+0x40]
  408304:	mov    DWORD PTR [rdi],0x3
  40830a:	mov    r8,r14
  40830d:	mov    QWORD PTR [rdi+0x8],rcx
  408311:	call   0x4185a0
  408316:	mov    rax,QWORD PTR [rdi+0x8]
  40831a:	mov    rdx,rdi
  40831d:	mov    rcx,r13
  408320:	mov    BYTE PTR [rax+r14*1],0x0
  408325:	call   0x4045a0
  40832a:	jmp    0x408053
  40832f:	nop
  408330:	add    r15,0x1
  408334:	movzx  edx,BYTE PTR [r15]
  408338:	sub    r9,0x1
  40833c:	cmp    dl,0x7f
  40833f:	ja     0x4082d1
  408341:	mov    eax,edx
  408343:	test   DWORD PTR [r10+rax*4],0xc01
  40834b:	je     0x4082d1
  40834d:	test   r9,r9
  408350:	jne    0x408330
  408352:	mov    DWORD PTR [rdi+0x10],0x0
  408359:	jmp    0x4082fb
  40835b:	mov    rdx,QWORD PTR [rsp+0x40]
  408360:	mov    QWORD PTR [rsp+0x20],r9
  408365:	mov    r8,r14
  408368:	mov    r9,r15
  40836b:	mov    rcx,r13
  40836e:	mov    QWORD PTR [rsp+0x58],r10
  408373:	call   0x404660
  408378:	mov    r15d,DWORD PTR [rip+0x11691]        # 0x419a10
  40837f:	mov    r14,rax
  408382:	cmp    r15d,0x2
  408386:	je     0x408053
  40838c:	lea    rdi,[rax+0x10]
  408390:	movzx  eax,BYTE PTR [rax+0x10]
  408394:	mov    r10,QWORD PTR [rsp+0x58]
  408399:	cmp    al,0x7f
  40839b:	ja     0x40858f
  4083a1:	test   DWORD PTR [r10+rax*4],0xc01
  4083a9:	je     0x40858f
  4083af:	mov    rax,QWORD PTR [rip+0x1b22a]        # 0x4235e0
  4083b6:	test   rax,rax
  4083b9:	je     0x408676
  4083bf:	mov    r9,rax
  4083c2:	movzx  ecx,BYTE PTR [r14+0x11]
  4083c7:	lea    rdx,[r14+0x11]
  4083cb:	cmp    BYTE PTR [rax+rcx*1],0x0
  4083cf:	je     0x4083de
  4083d1:	add    rdx,0x1
  4083d5:	movzx  ecx,BYTE PTR [rdx]
  4083d8:	cmp    BYTE PTR [rax+rcx*1],0x0
  4083dc:	jne    0x4083d1
  4083de:	mov    rcx,rdx
  4083e1:	mov    QWORD PTR [rsp+0x60],r9
  4083e6:	mov    QWORD PTR [rsp+0x58],rdx
  4083eb:	call   0x418538
  4083f0:	mov    rdx,QWORD PTR [rsp+0x58]
  4083f5:	lea    r8,[rax+0x1]
  4083f9:	mov    rcx,rdi
  4083fc:	mov    QWORD PTR [rsp+0x40],rax
  408401:	call   0x418598
  408406:	mov    r10,QWORD PTR [rsp+0x40]
  40840b:	mov    r9,QWORD PTR [rsp+0x60]
  408410:	lea    rdx,[rdi+r10*1]
  408414:	test   r9,r9
  408417:	je     0x40868c
  40841d:	cmp    rdi,rdx
  408420:	jb     0x408449
  408422:	mov    rcx,rdi
  408425:	mov    QWORD PTR [rsp+0x40],r9
  40842a:	call   0x418538
  40842f:	lea    rdx,[rdi+rax*1]
  408433:	mov    r9,QWORD PTR [rsp+0x40]
  408438:	cmp    rdi,rdx
  40843b:	jb     0x408449
  40843d:	jmp    0x408454
  40843f:	nop
  408440:	sub    rdx,0x1
  408444:	cmp    rdi,rdx
  408447:	jae    0x408454
  408449:	movzx  eax,BYTE PTR [rdx-0x1]
  40844d:	cmp    BYTE PTR [r9+rax*1],0x0
  408452:	jne    0x408440
  408454:	cmp    r15d,0x1
  408458:	mov    BYTE PTR [rdx],0x0
  40845b:	je     0x408053
  408461:	movzx  eax,BYTE PTR [r14+0x10]
  408466:	cmp    al,0x22
  408468:	je     0x408472
  40846a:	cmp    al,0x27
  40846c:	jne    0x408053
  408472:	movzx  eax,BYTE PTR [rdx-0x1]
  408476:	cmp    al,0x22
  408478:	je     0x408482
  40847a:	cmp    al,0x27
  40847c:	jne    0x408053
  408482:	xor    edx,edx
  408484:	mov    rcx,rdi
  408487:	call   0x407760
  40848c:	jmp    0x408053
  408491:	mov    ecx,0xa
  408496:	mov    QWORD PTR [rsp+0x40],r8
  40849b:	call   0x404060
  4084a0:	mov    r8,QWORD PTR [rsp+0x40]
  4084a5:	jmp    0x407b04
  4084aa:	mov    ecx,0x1c
  4084af:	call   0x404060
  4084b4:	jmp    0x407ac4
  4084b9:	mov    r8,QWORD PTR [rip+0x1b120]        # 0x4235e0
  4084c0:	test   r8,r8
  4084c3:	mov    rdx,r8
  4084c6:	je     0x40864b
  4084cc:	cmp    r15,rbx
  4084cf:	jb     0x408545
  4084d1:	mov    rcx,r15
  4084d4:	mov    QWORD PTR [rsp+0x68],r10
  4084d9:	mov    QWORD PTR [rsp+0x60],rdx
  4084de:	mov    QWORD PTR [rsp+0x58],r8
  4084e3:	call   0x418538
  4084e8:	lea    r9,[r15+rax*1]
  4084ec:	mov    r8,QWORD PTR [rsp+0x58]
  4084f1:	mov    rdx,QWORD PTR [rsp+0x60]
  4084f6:	mov    r10,QWORD PTR [rsp+0x68]
  4084fb:	cmp    r15,r9
  4084fe:	jb     0x40850b
  408500:	jmp    0x408517
  408502:	sub    r9,0x1
  408506:	cmp    r15,r9
  408509:	jae    0x408517
  40850b:	movzx  eax,BYTE PTR [r9-0x1]
  408510:	cmp    BYTE PTR [r8+rax*1],0x0
  408515:	jne    0x408502
  408517:	mov    rax,rdx
  40851a:	jmp    0x40814b
  40851f:	cmp    BYTE PTR [rdi+0x1],0x3e
  408523:	lea    rax,[rdi+0x1]
  408527:	jne    0x407cc1
  40852d:	mov    DWORD PTR [rsp+0x70],0x0
  408535:	mov    rdi,rax
  408538:	jmp    0x40801f
  40853d:	mov    rbx,r14
  408540:	jmp    0x407e45
  408545:	mov    r9,rbx
  408548:	jmp    0x40850b
  40854a:	call   QWORD PTR [rip+0x1d1d0]        # 0x425720
  408550:	mov    DWORD PTR [rax],0x16
  408556:	xor    eax,eax
  408558:	jmp    0x407b59
  40855d:	call   QWORD PTR [rip+0x1d1bd]        # 0x425720
  408563:	mov    DWORD PTR [rax],0x2
  408569:	jmp    0x407b46
  40856e:	mov    rdx,QWORD PTR [rsp+0x40]
  408573:	mov    r8,r14
  408576:	mov    rcx,rdi
  408579:	call   0x4079a0
  40857e:	test   rax,rax
  408581:	mov    r15,rax
  408584:	jne    0x4081f8
  40858a:	jmp    0x408203
  40858f:	mov    rcx,rdi
  408592:	call   0x418538
  408597:	mov    r9,QWORD PTR [rip+0x1b042]        # 0x4235e0
  40859e:	lea    rdx,[rdi+rax*1]
  4085a2:	jmp    0x408414
  4085a7:	mov    ecx,0x1c
  4085ac:	mov    QWORD PTR [rsp+0x58],r10
  4085b1:	call   0x404060
  4085b6:	mov    r10,QWORD PTR [rsp+0x58]
  4085bb:	jmp    0x407c83
  4085c0:	mov    ecx,0xa
  4085c5:	mov    QWORD PTR [rsp+0x40],r8
  4085ca:	call   0x404060
  4085cf:	mov    r8,QWORD PTR [rsp+0x40]
  4085d4:	jmp    0x407d2b
  4085d9:	mov    eax,0x1
  4085de:	mov    DWORD PTR [rdi+0x10],eax
  4085e1:	jmp    0x4082fb
  4085e6:	mov    ecx,0xc
  4085eb:	mov    QWORD PTR [rsp+0x60],r10
  4085f0:	mov    QWORD PTR [rsp+0x58],r9
  4085f5:	call   0x404060
  4085fa:	mov    r10,QWORD PTR [rsp+0x60]
  4085ff:	mov    r9,QWORD PTR [rsp+0x58]
  408604:	jmp    0x408164
  408609:	test   eax,0x8000002
  40860e:	sete   al
  408611:	movzx  eax,al
  408614:	jmp    0x4085de
  408616:	mov    ecx,0xc
  40861b:	mov    QWORD PTR [rsp+0x58],r10
  408620:	call   0x404060
  408625:	mov    r10,QWORD PTR [rsp+0x58]
  40862a:	jmp    0x4080b4
  40862f:	mov    ecx,0xc
  408634:	mov    QWORD PTR [rsp+0x58],r10
  408639:	call   0x404060
  40863e:	movzx  edx,BYTE PTR [rdi]
  408641:	mov    r10,QWORD PTR [rsp+0x58]
  408646:	jmp    0x407fc7
  40864b:	mov    ecx,0xc
  408650:	mov    QWORD PTR [rsp+0x58],r10
  408655:	call   0x404060
  40865a:	mov    rdx,QWORD PTR [rip+0x1af7f]        # 0x4235e0
  408661:	mov    r8,rax
  408664:	mov    r10,QWORD PTR [rsp+0x58]
  408669:	jmp    0x4084cc
  40866e:	mov    r15,rcx
  408671:	jmp    0x407e10
  408676:	mov    ecx,0xc
  40867b:	call   0x404060
  408680:	mov    r9,QWORD PTR [rip+0x1af59]        # 0x4235e0
  408687:	jmp    0x4083c2
  40868c:	mov    ecx,0xc
  408691:	mov    QWORD PTR [rsp+0x40],rdx
  408696:	call   0x404060
  40869b:	mov    rdx,QWORD PTR [rsp+0x40]
  4086a0:	mov    r9,rax
  4086a3:	jmp    0x40841d
  4086a8:	mov    r15,rbx
  4086ab:	jmp    0x408034
  4086b0:	push   rdi
  4086b1:	sub    rsp,0x90
  4086b8:	xor    eax,eax
  4086ba:	lea    rdi,[rsp+0x20]
  4086bf:	mov    r9,rcx
  4086c2:	mov    ecx,0xd
  4086c7:	rep stos QWORD PTR es:[rdi],rax
  4086ca:	mov    eax,edx
  4086cc:	lea    rdx,[rsp+0x20]
  4086d1:	mov    QWORD PTR [rsp+0x38],rax
  4086d6:	mov    cl,0x3
  4086d8:	call   QWORD PTR [r9+0x38]
  4086dc:	mov    rax,QWORD PTR [rsp+0x38]
  4086e1:	add    rsp,0x90
  4086e8:	pop    rdi
  4086e9:	ret    
  4086ea:	nop    WORD PTR [rax+rax*1+0x0]
  4086f0:	push   rbx
  4086f1:	sub    rsp,0x40
  4086f5:	cmp    rcx,0x2
  4086f9:	mov    rbx,rdx
  4086fc:	je     0x408750
  4086fe:	cmp    rcx,0x3
  408702:	je     0x408730
  408704:	cmp    rcx,0x1
  408708:	je     0x408720
  40870a:	xor    eax,eax
  40870c:	test   BYTE PTR [rdx+0x10],0x8
  408710:	je     0x4087b0
  408716:	add    rsp,0x40
  40871a:	pop    rbx
  40871b:	ret    
  40871c:	nop    DWORD PTR [rax+0x0]
  408720:	call   0x402bb0
  408725:	xor    eax,eax
  408727:	add    rsp,0x40
  40872b:	pop    rbx
  40872c:	ret    
  40872d:	nop    DWORD PTR [rax]
  408730:	mov    rax,QWORD PTR [rdx+0x18]
  408734:	cmp    r9d,eax
  408737:	jbe    0x4087a0
  408739:	mov    eax,eax
  40873b:	mov    rax,QWORD PTR [r8+rax*8]
  40873f:	mov    QWORD PTR [rdx+0x18],rax
  408743:	xor    eax,eax
  408745:	add    rsp,0x40
  408749:	pop    rbx
  40874a:	ret    
  40874b:	nop    DWORD PTR [rax+rax*1+0x0]
  408750:	mov    rbx,QWORD PTR [rdx+0x18]
  408754:	cmp    r9d,ebx
  408757:	ja     0x408770
  408759:	lea    rcx,[rip+0x13984]        # 0x41c0e4
  408760:	mov    edx,ebx
  408762:	call   0x402b20
  408767:	xor    eax,eax
  408769:	add    rsp,0x40
  40876d:	pop    rbx
  40876e:	ret    
  40876f:	nop
  408770:	mov    QWORD PTR [rsp+0x38],r8
  408775:	mov    ebx,ebx
  408777:	call   QWORD PTR [rip+0x1cf5b]        # 0x4256d8
  40877d:	mov    r8,QWORD PTR [rsp+0x38]
  408782:	lea    rdx,[rax+0x30]
  408786:	mov    rcx,QWORD PTR [r8+rbx*8]
  40878a:	call   0x4185f0
  40878f:	xor    eax,eax
  408791:	add    rsp,0x40
  408795:	pop    rbx
  408796:	ret    
  408797:	nop    WORD PTR [rax+rax*1+0x0]
  4087a0:	lea    rax,[rip+0x13948]        # 0x41c0ef
  4087a7:	jmp    0x408716
  4087ac:	nop    DWORD PTR [rax+0x0]
  4087b0:	mov    DWORD PTR [rsp+0x20],r9d
  4087b5:	mov    r9,r8
  4087b8:	mov    r8,rdx
  4087bb:	mov    rdx,rcx
  4087be:	mov    rcx,QWORD PTR [rbx+0x18]
  4087c2:	call   0x402ee0
  4087c7:	test   BYTE PTR [rbx+0x10],0x40
  4087cb:	je     0x408716
  4087d1:	mov    rcx,QWORD PTR [rbx+0x18]
  4087d5:	mov    QWORD PTR [rsp+0x38],rax
  4087da:	call   0x4185e0
  4087df:	and    DWORD PTR [rbx+0x10],0xffffffbf
  4087e3:	mov    QWORD PTR [rbx+0x18],0x0
  4087eb:	mov    rax,QWORD PTR [rsp+0x38]
  4087f0:	jmp    0x408716
  4087f5:	nop
  4087f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408800:	push   rsi
  408801:	push   rbx
  408802:	sub    rsp,0x28
  408806:	mov    rsi,QWORD PTR [rcx+0x18]
  40880a:	mov    rbx,rcx
  40880d:	mov    rdx,rcx
  408810:	mov    ecx,0x3
  408815:	call   QWORD PTR [rbx+0x38]
  408818:	mov    rax,QWORD PTR [rbx+0x18]
  40881c:	mov    QWORD PTR [rbx+0x18],rsi
  408820:	add    rsp,0x28
  408824:	pop    rbx
  408825:	pop    rsi
  408826:	ret    
  408827:	nop    WORD PTR [rax+rax*1+0x0]
  408830:	push   r15
  408832:	push   r14
  408834:	push   r13
  408836:	push   r12
  408838:	push   rbp
  408839:	push   rdi
  40883a:	push   rsi
  40883b:	push   rbx
  40883c:	sub    rsp,0xe8
  408843:	cmp    rcx,0x2
  408847:	mov    r13,rcx
  40884a:	mov    r12,rdx
  40884d:	mov    rbx,r8
  408850:	mov    ebp,r9d
  408853:	je     0x408af1
  408859:	cmp    rcx,0x3
  40885d:	je     0x408a20
  408863:	cmp    rcx,0x1
  408867:	je     0x408a00
  40886d:	test   BYTE PTR [rdx+0x10],0x8
  408871:	jne    0x408a0b
  408877:	mov    rax,QWORD PTR [rip+0x1ad62]        # 0x4235e0
  40887e:	mov    r15,QWORD PTR [rdx+0x18]
  408882:	mov    rsi,QWORD PTR [rdx+0x20]
  408886:	test   rax,rax
  408889:	jne    0x408894
  40888b:	jmp    0x408e10
  408890:	add    r15,0x1
  408894:	movzx  ecx,BYTE PTR [r15]
  408898:	cmp    BYTE PTR [rax+rcx*1],0x0
  40889c:	jne    0x408890
  40889e:	test   cl,cl
  4088a0:	je     0x408be0
  4088a6:	cmp    cl,0x3d
  4088a9:	mov    QWORD PTR [rsp+0x30],rsi
  4088ae:	je     0x408da0
  4088b4:	cmp    cl,0x5e
  4088b7:	je     0x408b94
  4088bd:	cmp    cl,0x2c
  4088c0:	je     0x408be0
  4088c6:	mov    BYTE PTR [rsp+0x4f],0x0
  4088cb:	lea    rax,[rsp+0x58]
  4088d0:	movzx  edx,BYTE PTR [r15]
  4088d4:	mov    QWORD PTR [rsp+0x38],rax
  4088d9:	lea    rax,[rsp+0x60]
  4088de:	mov    QWORD PTR [rsp+0x40],rax
  4088e3:	test   dl,dl
  4088e5:	je     0x408d51
  4088eb:	cmp    dl,0x2c
  4088ee:	je     0x408c90
  4088f4:	jg     0x408c70
  4088fa:	cmp    dl,0x21
  4088fd:	je     0x408ce0
  408903:	cmp    dl,0x2b
  408906:	jne    0x408c7e
  40890c:	xor    r14d,r14d
  40890f:	mov    rax,QWORD PTR [rip+0x1acca]        # 0x4235e0
  408916:	lea    rsi,[r15+0x1]
  40891a:	test   rax,rax
  40891d:	je     0x408d87
  408923:	movzx  edx,BYTE PTR [r15+0x1]
  408928:	mov    r15,rsi
  40892b:	cmp    BYTE PTR [rax+rdx*1],0x0
  40892f:	je     0x40893f
  408931:	add    r15,0x1
  408935:	movzx  edx,BYTE PTR [r15]
  408939:	cmp    BYTE PTR [rax+rdx*1],0x0
  40893d:	jne    0x408931
  40893f:	mov    rax,QWORD PTR [rip+0x1ad8a]        # 0x4236d0
  408946:	test   rax,rax
  408949:	je     0x408d33
  40894f:	movzx  edx,BYTE PTR [r15]
  408953:	test   dl,dl
  408955:	je     0x408d51
  40895b:	cmp    BYTE PTR [rax+rdx*1],0x0
  40895f:	jne    0x408d51
  408965:	mov    rcx,r15
  408968:	jmp    0x408976
  40896a:	nop    WORD PTR [rax+rax*1+0x0]
  408970:	cmp    BYTE PTR [rax+rdx*1],0x0
  408974:	jne    0x408981
  408976:	add    rcx,0x1
  40897a:	movzx  edx,BYTE PTR [rcx]
  40897d:	test   dl,dl
  40897f:	jne    0x408970
  408981:	mov    r11d,ecx
  408984:	sub    r11d,r15d
  408987:	test   r11d,r11d
  40898a:	je     0x408d51
  408990:	cmp    r11d,0x3
  408994:	je     0x408d00
  40899a:	cmp    r11d,0x4
  40899e:	jne    0x408bf0
  4089a4:	lea    rdi,[rip+0x13630]        # 0x41bfdb
  4089ab:	mov    ecx,0x4
  4089b0:	mov    rsi,r15
  4089b3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4089b5:	jne    0x408bf0
  4089bb:	add    r15,0x4
  4089bf:	test   r14b,r14b
  4089c2:	jne    0x4089d0
  4089c4:	mov    QWORD PTR [rsp+0x30],0x0
  4089cd:	nop    DWORD PTR [rax]
  4089d0:	mov    rax,QWORD PTR [rip+0x1ac09]        # 0x4235e0
  4089d7:	test   rax,rax
  4089da:	jne    0x4089e5
  4089dc:	jmp    0x408d42
  4089e1:	add    r15,0x1
  4089e5:	movzx  ecx,BYTE PTR [r15]
  4089e9:	cmp    BYTE PTR [rax+rcx*1],0x0
  4089ed:	mov    rdx,rcx
  4089f0:	jne    0x4089e1
  4089f2:	jmp    0x4088e3
  4089f7:	nop    WORD PTR [rax+rax*1+0x0]
  408a00:	mov    ecx,0x1
  408a05:	call   0x402bb0
  408a0a:	nop
  408a0b:	add    rsp,0xe8
  408a12:	pop    rbx
  408a13:	pop    rsi
  408a14:	pop    rdi
  408a15:	pop    rbp
  408a16:	pop    r12
  408a18:	pop    r13
  408a1a:	pop    r14
  408a1c:	pop    r15
  408a1e:	ret    
  408a1f:	nop
  408a20:	mov    eax,0x1
  408a25:	mov    ecx,r9d
  408a28:	shl    eax,cl
  408a2a:	lea    r13d,[rax-0x1]
  408a2e:	mov    r14,r13
  408a31:	and    r14,QWORD PTR [rdx+0x20]
  408a35:	je     0x408d96
  408a3b:	mov    rsi,r8
  408a3e:	mov    edi,0x1
  408a43:	xor    r15d,r15d
  408a46:	jmp    0x408a59
  408a48:	nop    DWORD PTR [rax+rax*1+0x0]
  408a50:	add    rsi,0x8
  408a54:	shr    r14,1
  408a57:	je     0x408a75
  408a59:	test   r14b,0x1
  408a5d:	je     0x408a6c
  408a5f:	mov    rcx,QWORD PTR [rsi]
  408a62:	call   0x418538
  408a67:	lea    rdi,[rdi+rax*1+0x4]
  408a6c:	add    r15d,0x1
  408a70:	cmp    ebp,r15d
  408a73:	ja     0x408a50
  408a75:	mov    rcx,rdi
  408a78:	mov    rbp,r13
  408a7b:	call   0x404550
  408a80:	and    rbp,QWORD PTR [r12+0x20]
  408a85:	mov    r14,rax
  408a88:	mov    QWORD PTR [r12+0x18],rax
  408a8d:	je     0x408b80
  408a93:	xor    r12d,r12d
  408a96:	jmp    0x408ab4
  408a98:	nop    DWORD PTR [rax+rax*1+0x0]
  408aa0:	mov    edx,0x2b20
  408aa5:	lea    r14,[rax+0x3]
  408aa9:	mov    BYTE PTR [rax+0x2],0x20
  408aad:	mov    WORD PTR [rax],dx
  408ab0:	add    r12d,0x1
  408ab4:	mov    eax,ebp
  408ab6:	shr    rbp,1
  408ab9:	and    eax,0x1
  408abc:	test   eax,eax
  408abe:	je     0x408ab0
  408ac0:	mov    eax,r12d
  408ac3:	mov    r13,QWORD PTR [rbx+rax*8]
  408ac7:	mov    rcx,r13
  408aca:	call   0x418538
  408acf:	mov    rdx,r13
  408ad2:	mov    r8,rax
  408ad5:	mov    rcx,r14
  408ad8:	mov    rsi,rax
  408adb:	call   0x4185a0
  408ae0:	test   rbp,rbp
  408ae3:	lea    rax,[r14+rsi*1]
  408ae7:	jne    0x408aa0
  408ae9:	mov    BYTE PTR [rax],0x0
  408aec:	jmp    0x408a0b
  408af1:	mov    eax,0x1
  408af6:	mov    ecx,r9d
  408af9:	xor    r13d,r13d
  408afc:	shl    rax,cl
  408aff:	xor    edx,edx
  408b01:	mov    rsi,QWORD PTR [rip+0x1cbd0]        # 0x4256d8
  408b08:	sub    rax,0x1
  408b0c:	and    rax,QWORD PTR [r12+0x20]
  408b11:	mov    r14,rsi
  408b14:	mov    r12,rax
  408b17:	jne    0x408b4b
  408b19:	jmp    0x408a0b
  408b1e:	xchg   ax,ax
  408b20:	call   rdi
  408b22:	mov    rcx,QWORD PTR [rbx]
  408b25:	lea    rdx,[rax+0x30]
  408b29:	call   0x4185f0
  408b2e:	mov    rdx,r15
  408b31:	add    r13d,0x1
  408b35:	cmp    ebp,r13d
  408b38:	jbe    0x408a0b
  408b3e:	add    rbx,0x8
  408b42:	shr    r12,1
  408b45:	je     0x408a0b
  408b4b:	test   r12b,0x1
  408b4f:	je     0x408b31
  408b51:	test   rdx,rdx
  408b54:	lea    r15,[rdx+0x1]
  408b58:	mov    rdi,rsi
  408b5b:	je     0x408b20
  408b5d:	call   r14
  408b60:	lea    rcx,[rip+0x13635]        # 0x41c19c
  408b67:	lea    r9,[rax+0x30]
  408b6b:	mov    r8d,0x3
  408b71:	mov    edx,0x1
  408b76:	mov    rdi,r14
  408b79:	call   0x4185c8
  408b7e:	jmp    0x408b20
  408b80:	mov    BYTE PTR [rax],0x0
  408b83:	jmp    0x408a0b
  408b88:	mov    r15,rsi
  408b8b:	mov    QWORD PTR [rsp+0x30],0x0
  408b94:	mov    rax,QWORD PTR [rip+0x1aa45]        # 0x4235e0
  408b9b:	lea    rsi,[r15+0x1]
  408b9f:	test   rax,rax
  408ba2:	je     0x408e1f
  408ba8:	movzx  ecx,BYTE PTR [r15+0x1]
  408bad:	mov    r15,rsi
  408bb0:	cmp    BYTE PTR [rax+rcx*1],0x0
  408bb4:	mov    rdx,rcx
  408bb7:	je     0x408bd1
  408bb9:	nop    DWORD PTR [rax+0x0]
  408bc0:	add    r15,0x1
  408bc4:	movzx  ecx,BYTE PTR [r15]
  408bc8:	cmp    BYTE PTR [rax+rcx*1],0x0
  408bcc:	mov    rdx,rcx
  408bcf:	jne    0x408bc0
  408bd1:	cmp    dl,0x2c
  408bd4:	mov    BYTE PTR [rsp+0x4f],0x1
  408bd9:	jne    0x4088cb
  408bdf:	nop
  408be0:	mov    QWORD PTR [r12+0x20],0x0
  408be9:	jmp    0x408a0b
  408bee:	xchg   ax,ax
  408bf0:	mov    rdx,QWORD PTR [rsp+0x38]
  408bf5:	xor    r8d,r8d
  408bf8:	mov    rcx,r15
  408bfb:	mov    DWORD PTR [rsp+0x48],r11d
  408c00:	call   0x418500
  408c05:	movsxd rdi,DWORD PTR [rsp+0x48]
  408c0a:	mov    rdx,QWORD PTR [rsp+0x58]
  408c0f:	mov    eax,eax
  408c11:	lea    rsi,[r15+rdi*1]
  408c15:	cmp    rsi,rdx
  408c18:	je     0x408c57
  408c1a:	mov    r15,QWORD PTR [rsp+0x40]
  408c1f:	mov    r8,rdi
  408c22:	mov    rcx,r15
  408c25:	call   0x4185a0
  408c2a:	mov    BYTE PTR [rsp+rdi*1+0x60],0x0
  408c2f:	mov    r9,rbx
  408c32:	mov    DWORD PTR [rsp+0x20],ebp
  408c36:	mov    r8,r12
  408c39:	mov    rdx,r13
  408c3c:	mov    rcx,r15
  408c3f:	call   0x402ee0
  408c44:	cmp    ebp,eax
  408c46:	jbe    0x408be0
  408c48:	mov    ecx,eax
  408c4a:	mov    edx,0x1
  408c4f:	shl    edx,cl
  408c51:	test   edx,edx
  408c53:	mov    eax,edx
  408c55:	je     0x408be0
  408c57:	test   r14b,r14b
  408c5a:	je     0x408cf0
  408c60:	not    rax
  408c63:	and    QWORD PTR [rsp+0x30],rax
  408c68:	mov    r15,rsi
  408c6b:	jmp    0x4089d0
  408c70:	cmp    dl,0x2d
  408c73:	je     0x408ce0
  408c75:	cmp    dl,0x7c
  408c78:	je     0x40890c
  408c7e:	xor    r14d,r14d
  408c81:	jmp    0x40893f
  408c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c90:	mov    rax,QWORD PTR [rip+0x1a949]        # 0x4235e0
  408c97:	lea    rsi,[r15+0x1]
  408c9b:	test   rax,rax
  408c9e:	je     0x408e01
  408ca4:	movzx  ecx,BYTE PTR [r15+0x1]
  408ca9:	cmp    BYTE PTR [rax+rcx*1],0x0
  408cad:	mov    rdx,rcx
  408cb0:	je     0x408cc2
  408cb2:	add    rsi,0x1
  408cb6:	movzx  ecx,BYTE PTR [rsi]
  408cb9:	cmp    BYTE PTR [rax+rcx*1],0x0
  408cbd:	mov    rdx,rcx
  408cc0:	jne    0x408cb2
  408cc2:	cmp    dl,0x7c
  408cc5:	je     0x408be0
  408ccb:	cmp    dl,0x2c
  408cce:	je     0x408be0
  408cd4:	movzx  edx,BYTE PTR [rsi]
  408cd7:	mov    r15,rsi
  408cda:	jmp    0x4088e3
  408cdf:	nop
  408ce0:	mov    r14d,0x1
  408ce6:	jmp    0x40890f
  408ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  408cf0:	or     QWORD PTR [rsp+0x30],rax
  408cf5:	jmp    0x408c68
  408cfa:	nop    WORD PTR [rax+rax*1+0x0]
  408d00:	lea    rdi,[rip+0x1337a]        # 0x41c081
  408d07:	mov    ecx,0x3
  408d0c:	mov    rsi,r15
  408d0f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  408d11:	jne    0x408bf0
  408d17:	add    r15,0x3
  408d1b:	test   r14b,r14b
  408d1e:	jne    0x4089c4
  408d24:	mov    eax,0xffffffff
  408d29:	mov    QWORD PTR [rsp+0x30],rax
  408d2e:	jmp    0x4089d0
  408d33:	mov    ecx,0x2a
  408d38:	call   0x404060
  408d3d:	jmp    0x40894f
  408d42:	mov    ecx,0xc
  408d47:	call   0x404060
  408d4c:	jmp    0x4089e5
  408d51:	cmp    BYTE PTR [rsp+0x4f],0x0
  408d56:	je     0x408d62
  408d58:	mov    eax,0xffffffff
  408d5d:	xor    QWORD PTR [rsp+0x30],rax
  408d62:	cmp    ebp,0x3f
  408d65:	ja     0x408d78
  408d67:	mov    eax,0x1
  408d6c:	mov    ecx,ebp
  408d6e:	shl    eax,cl
  408d70:	sub    eax,0x1
  408d73:	and    QWORD PTR [rsp+0x30],rax
  408d78:	mov    rax,QWORD PTR [rsp+0x30]
  408d7d:	mov    QWORD PTR [r12+0x20],rax
  408d82:	jmp    0x408a0b
  408d87:	mov    ecx,0xc
  408d8c:	call   0x404060
  408d91:	jmp    0x408923
  408d96:	mov    edi,0x1
  408d9b:	jmp    0x408a75
  408da0:	mov    rax,QWORD PTR [rip+0x1a839]        # 0x4235e0
  408da7:	lea    rsi,[r15+0x1]
  408dab:	test   rax,rax
  408dae:	je     0x408e2e
  408db0:	movzx  ecx,BYTE PTR [r15+0x1]
  408db5:	cmp    BYTE PTR [rax+rcx*1],0x0
  408db9:	mov    rdx,rcx
  408dbc:	je     0x408dd0
  408dbe:	xchg   ax,ax
  408dc0:	add    rsi,0x1
  408dc4:	movzx  ecx,BYTE PTR [rsi]
  408dc7:	cmp    BYTE PTR [rax+rcx*1],0x0
  408dcb:	mov    rdx,rcx
  408dce:	jne    0x408dc0
  408dd0:	cmp    dl,0x3d
  408dd3:	je     0x408be0
  408dd9:	cmp    dl,0x5e
  408ddc:	je     0x408b88
  408de2:	cmp    dl,0x2c
  408de5:	je     0x408be0
  408deb:	mov    r15,rsi
  408dee:	mov    BYTE PTR [rsp+0x4f],0x0
  408df3:	mov    QWORD PTR [rsp+0x30],0x0
  408dfc:	jmp    0x4088cb
  408e01:	mov    ecx,0xc
  408e06:	call   0x404060
  408e0b:	jmp    0x408ca4
  408e10:	mov    ecx,0xc
  408e15:	call   0x404060
  408e1a:	jmp    0x408894
  408e1f:	mov    ecx,0xc
  408e24:	call   0x404060
  408e29:	jmp    0x408ba8
  408e2e:	mov    ecx,0xc
  408e33:	call   0x404060
  408e38:	jmp    0x408db0
  408e3d:	nop    DWORD PTR [rax]
  408e40:	push   r15
  408e42:	push   r14
  408e44:	push   r13
  408e46:	push   r12
  408e48:	push   rbp
  408e49:	push   rdi
  408e4a:	push   rsi
  408e4b:	push   rbx
  408e4c:	sub    rsp,0x68
  408e50:	cmp    rcx,0xf
  408e54:	mov    rsi,rcx
  408e57:	mov    rbx,rdx
  408e5a:	mov    edi,r8d
  408e5d:	mov    rbp,r9
  408e60:	ja     0x408e80
  408e62:	cmp    rcx,0x1
  408e66:	je     0x408f90
  408e6c:	add    rsp,0x68
  408e70:	pop    rbx
  408e71:	pop    rsi
  408e72:	pop    rdi
  408e73:	pop    rbp
  408e74:	pop    r12
  408e76:	pop    r13
  408e78:	pop    r14
  408e7a:	pop    r15
  408e7c:	ret    
  408e7d:	nop    DWORD PTR [rax]
  408e80:	test   BYTE PTR [rdx+0x10],0x8
  408e84:	je     0x408ea0
  408e86:	mov    rcx,QWORD PTR [rdx+0x20]
  408e8a:	test   rcx,rcx
  408e8d:	je     0x408e6c
  408e8f:	call   0x4185e0
  408e94:	jmp    0x408e6c
  408e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ea0:	mov    r13,QWORD PTR [rdx+0x18]
  408ea4:	mov    r14,QWORD PTR [rip+0x1c875]        # 0x425720
  408eab:	call   r14
  408eae:	mov    DWORD PTR [rax],0x0
  408eb4:	mov    eax,edi
  408eb6:	and    eax,0x3
  408eb9:	cmp    eax,0x1
  408ebc:	je     0x409005
  408ec2:	cmp    eax,0x2
  408ec5:	je     0x408fc3
  408ecb:	mov    edx,0x5c
  408ed0:	mov    rcx,r13
  408ed3:	call   0x418518
  408ed8:	test   rax,rax
  408edb:	je     0x408f3c
  408edd:	sub    rax,r13
  408ee0:	lea    rcx,[rax+0x1]
  408ee4:	mov    r12,rax
  408ee7:	call   0x404550
  408eec:	mov    r8,r12
  408eef:	mov    r15,rax
  408ef2:	mov    rdx,r13
  408ef5:	mov    rcx,rax
  408ef8:	call   0x4185a0
  408efd:	mov    BYTE PTR [r15+r12*1],0x0
  408f02:	lea    rdx,[rsp+0x20]
  408f07:	mov    rcx,r15
  408f0a:	call   QWORD PTR [rip+0x1ca08]        # 0x425918
  408f10:	test   eax,eax
  408f12:	jne    0x4090c6
  408f18:	call   r14
  408f1b:	mov    DWORD PTR [rax],0x16
  408f21:	movzx  eax,WORD PTR [rsp+0x26]
  408f26:	and    ax,0xf000
  408f2a:	cmp    ax,0x4000
  408f2e:	jne    0x4090c6
  408f34:	mov    rcx,r15
  408f37:	call   0x4185e0
  408f3c:	and    edi,0x30
  408f3f:	cmp    edi,0x10
  408f42:	je     0x409035
  408f48:	cmp    edi,0x20
  408f4b:	jne    0x408e6c
  408f51:	mov    rcx,QWORD PTR [rbx+0x18]
  408f55:	mov    rdx,rbp
  408f58:	call   0x418608
  408f5d:	test   rax,rax
  408f60:	mov    rdi,rax
  408f63:	je     0x4090d9
  408f69:	mov    edx,DWORD PTR [rbx+0x10]
  408f6c:	test   dl,0x40
  408f6f:	je     0x409082
  408f75:	mov    rax,QWORD PTR [rbx+0x18]
  408f79:	mov    QWORD PTR [rbx+0x20],rax
  408f7d:	and    edx,0xffffffbf
  408f80:	mov    QWORD PTR [rbx+0x18],rdi
  408f84:	mov    DWORD PTR [rbx+0x10],edx
  408f87:	jmp    0x408e6c
  408f8c:	nop    DWORD PTR [rax+0x0]
  408f90:	and    edi,0x3
  408f93:	cmp    edi,0x1
  408f96:	je     0x409064
  408f9c:	cmp    edi,0x2
  408f9f:	jne    0x408e6c
  408fa5:	mov    ecx,DWORD PTR [rip+0x1a4c5]        # 0x423470
  408fab:	mov    rdx,QWORD PTR [rip+0x1a496]        # 0x423448
  408fb2:	add    rcx,QWORD PTR [rip+0x10cb7]        # 0x419c70
  408fb9:	call   0x4185f0
  408fbe:	jmp    0x408e6c
  408fc3:	lea    rdx,[rsp+0x20]
  408fc8:	mov    rcx,r13
  408fcb:	call   QWORD PTR [rip+0x1c947]        # 0x425918
  408fd1:	test   eax,eax
  408fd3:	je     0x408fe1
  408fd5:	call   r14
  408fd8:	cmp    DWORD PTR [rax],0x2
  408fdb:	je     0x408ecb
  408fe1:	call   r14
  408fe4:	cmp    DWORD PTR [rax],0x0
  408fe7:	jne    0x408ff2
  408fe9:	call   r14
  408fec:	mov    DWORD PTR [rax],0x16
  408ff2:	mov    rcx,QWORD PTR [rsi+0x28]
  408ff6:	lea    rdx,[rip+0x11f93]        # 0x41af90
  408ffd:	mov    r8,r13
  409000:	call   0x4030d0
  409005:	lea    rdx,[rsp+0x20]
  40900a:	mov    rcx,r13
  40900d:	call   QWORD PTR [rip+0x1c905]        # 0x425918
  409013:	test   eax,eax
  409015:	jne    0x408ff2
  409017:	call   r14
  40901a:	mov    DWORD PTR [rax],0x16
  409020:	movzx  eax,WORD PTR [rsp+0x26]
  409025:	and    ax,0xf000
  409029:	cmp    ax,0x8000
  40902d:	je     0x408f3c
  409033:	jmp    0x408ff2
  409035:	mov    rcx,QWORD PTR [rbx+0x18]
  409039:	mov    edx,ebp
  40903b:	call   0x418498
  409040:	test   eax,eax
  409042:	mov    edi,eax
  409044:	js     0x4090b2
  409046:	mov    edx,DWORD PTR [rbx+0x10]
  409049:	test   dl,0x40
  40904c:	je     0x4090a0
  40904e:	mov    rax,QWORD PTR [rbx+0x18]
  409052:	mov    QWORD PTR [rbx+0x20],rax
  409056:	and    edx,0xffffffbf
  409059:	mov    DWORD PTR [rbx+0x18],edi
  40905c:	mov    DWORD PTR [rbx+0x10],edx
  40905f:	jmp    0x408e6c
  409064:	mov    ecx,DWORD PTR [rip+0x1a406]        # 0x423470
  40906a:	mov    rdx,QWORD PTR [rip+0x1a3d7]        # 0x423448
  409071:	add    rcx,QWORD PTR [rip+0x10c00]        # 0x419c78
  409078:	call   0x4185f0
  40907d:	jmp    0x408e6c
  409082:	mov    rcx,QWORD PTR [rbx+0x18]
  409086:	call   0x4042c0
  40908b:	mov    edx,DWORD PTR [rbx+0x10]
  40908e:	mov    QWORD PTR [rbx+0x20],rax
  409092:	jmp    0x408f7d
  409097:	nop    WORD PTR [rax+rax*1+0x0]
  4090a0:	mov    rcx,QWORD PTR [rbx+0x18]
  4090a4:	call   0x4042c0
  4090a9:	mov    edx,DWORD PTR [rbx+0x10]
  4090ac:	mov    QWORD PTR [rbx+0x20],rax
  4090b0:	jmp    0x409056
  4090b2:	mov    rcx,QWORD PTR [rsi+0x28]
  4090b6:	mov    r8,QWORD PTR [rbx+0x18]
  4090ba:	lea    rdx,[rip+0x11ed4]        # 0x41af95
  4090c1:	call   0x4030d0
  4090c6:	mov    rcx,QWORD PTR [rsi+0x28]
  4090ca:	lea    rdx,[rip+0x11ebf]        # 0x41af90
  4090d1:	mov    r8,r15
  4090d4:	call   0x4030d0
  4090d9:	mov    rcx,QWORD PTR [rsi+0x28]
  4090dd:	mov    r8,QWORD PTR [rbx+0x18]
  4090e1:	lea    rdx,[rip+0x11eb2]        # 0x41af9a
  4090e8:	call   0x4030d0
  4090ed:	nop
  4090ee:	xchg   ax,ax
  4090f0:	push   r15
  4090f2:	push   r14
  4090f4:	push   r13
  4090f6:	push   r12
  4090f8:	push   rbp
  4090f9:	push   rdi
  4090fa:	push   rsi
  4090fb:	push   rbx
  4090fc:	sub    rsp,0x38
  409100:	mov    edi,edx
  409102:	mov    rbp,rcx
  409105:	mov    rcx,r8
  409108:	mov    rbx,r8
  40910b:	mov    r12,r9
  40910e:	call   0x418538
  409113:	movsxd rdx,edi
  409116:	cmp    rax,rdx
  409119:	setae  sil
  40911d:	test   rax,rax
  409120:	sete   al
  409123:	or     sil,al
  409126:	jne    0x409165
  409128:	movzx  r10d,BYTE PTR [rbx]
  40912c:	cmp    r10b,0x24
  409130:	je     0x409180
  409132:	mov    r9d,r10d
  409135:	xor    eax,eax
  409137:	jmp    0x409154
  409139:	nop    DWORD PTR [rax+0x0]
  409140:	add    rax,0x1
  409144:	mov    r8d,edi
  409147:	sub    r8d,eax
  40914a:	test   r8d,r8d
  40914d:	jle    0x409165
  40914f:	movzx  r9d,BYTE PTR [rbx+rax*1]
  409154:	test   r9b,r9b
  409157:	mov    BYTE PTR [rbp+rax*1+0x0],r9b
  40915c:	jne    0x409140
  40915e:	mov    esi,0x1
  409163:	jmp    0x409167
  409165:	xor    esi,esi
  409167:	mov    eax,esi
  409169:	add    rsp,0x38
  40916d:	pop    rbx
  40916e:	pop    rsi
  40916f:	pop    rdi
  409170:	pop    rbp
  409171:	pop    r12
  409173:	pop    r13
  409175:	pop    r14
  409177:	pop    r15
  409179:	ret    
  40917a:	nop    WORD PTR [rax+rax*1+0x0]
  409180:	movzx  eax,BYTE PTR [rbx+0x1]
  409184:	cmp    al,0x24
  409186:	je     0x40927e
  40918c:	cmp    al,0x40
  40918e:	je     0x40924a
  409194:	test   al,al
  409196:	je     0x409167
  409198:	cmp    al,0x7f
  40919a:	ja     0x409167
  40919c:	lea    rcx,[rip+0x159dd]        # 0x41eb80
  4091a3:	movzx  edx,al
  4091a6:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  4091ad:	je     0x409167
  4091af:	add    rbx,0x1
  4091b3:	mov    r8,rbp
  4091b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091c0:	add    r8,0x1
  4091c4:	add    rbx,0x1
  4091c8:	mov    BYTE PTR [r8-0x1],al
  4091cc:	movzx  eax,BYTE PTR [rbx]
  4091cf:	cmp    al,0x7f
  4091d1:	ja     0x4091df
  4091d3:	movzx  edx,al
  4091d6:	test   DWORD PTR [rcx+rdx*4],0x3b0060
  4091dd:	jne    0x4091c0
  4091df:	cmp    r8,rbp
  4091e2:	je     0x409167
  4091e4:	mov    BYTE PTR [r8],0x0
  4091e8:	mov    rcx,rbp
  4091eb:	call   0x4185c0
  4091f0:	test   rax,rax
  4091f3:	mov    r14,rax
  4091f6:	je     0x409167
  4091fc:	mov    rcx,rax
  4091ff:	mov    edi,edi
  409201:	call   0x418538
  409206:	mov    rcx,rbx
  409209:	mov    r13,rax
  40920c:	call   0x418538
  409211:	lea    r12,[rax+0x1]
  409215:	lea    rax,[r12+r13*1]
  409219:	cmp    rax,rdi
  40921c:	jae    0x409167
  409222:	mov    r8,r13
  409225:	mov    rdx,r14
  409228:	mov    rcx,rbp
  40922b:	call   0x4185a0
  409230:	lea    rcx,[rbp+r13*1+0x0]
  409235:	mov    r8,r12
  409238:	mov    rdx,rbx
  40923b:	mov    esi,0x1
  409240:	call   0x4185a0
  409245:	jmp    0x409167
  40924a:	mov    r9,QWORD PTR [rip+0x107b7]        # 0x419a08
  409251:	cmp    BYTE PTR [r9],0x0
  409255:	je     0x409165
  40925b:	add    rbx,0x2
  40925f:	lea    r8,[rip+0x119b5]        # 0x41ac1b
  409266:	mov    rcx,rbp
  409269:	mov    QWORD PTR [rsp+0x20],rbx
  40926e:	call   0x402b00
  409273:	cmp    edi,eax
  409275:	setg   sil
  409279:	jmp    0x409167
  40927e:	movzx  eax,BYTE PTR [rbx+0x2]
  409282:	test   al,al
  409284:	je     0x409326
  40928a:	cmp    al,0x5c
  40928c:	mov    r15d,0x3
  409292:	jne    0x409167
  409298:	mov    edx,0x5c
  40929d:	mov    rcx,r12
  4092a0:	mov    r14,r12
  4092a3:	call   0x418560
  4092a8:	test   rax,rax
  4092ab:	je     0x409331
  4092b1:	mov    edx,0x5c
  4092b6:	mov    rcx,r14
  4092b9:	call   0x418518
  4092be:	test   rax,rax
  4092c1:	mov    r13,rax
  4092c4:	je     0x409167
  4092ca:	movsxd rax,r15d
  4092cd:	sub    r13,r14
  4092d0:	mov    edi,edi
  4092d2:	add    rbx,rax
  4092d5:	add    r13,0x1
  4092d9:	mov    rcx,rbx
  4092dc:	call   0x418538
  4092e1:	lea    r15,[rax+0x1]
  4092e5:	lea    rax,[r15+r13*1]
  4092e9:	cmp    rax,rdi
  4092ec:	ja     0x409167
  4092f2:	mov    r8,r13
  4092f5:	mov    rdx,r14
  4092f8:	mov    rcx,rbp
  4092fb:	call   0x4185a0
  409300:	lea    rcx,[rbp+r13*1+0x0]
  409305:	mov    r8,r15
  409308:	mov    rdx,rbx
  40930b:	call   0x4185a0
  409310:	cmp    r12,r14
  409313:	je     0x40915e
  409319:	mov    rcx,r14
  40931c:	call   0x4185e0
  409321:	jmp    0x40915e
  409326:	mov    r15d,0x2
  40932c:	jmp    0x409298
  409331:	lea    rcx,[rip+0x118aa]        # 0x41abe2
  409338:	call   0x4185c0
  40933d:	mov    rdx,r12
  409340:	mov    rcx,rax
  409343:	call   0x4054c0
  409348:	test   rax,rax
  40934b:	mov    r14,rax
  40934e:	jne    0x4092b1
  409354:	jmp    0x409167
  409359:	nop    DWORD PTR [rax+0x0]
  409360:	push   r15
  409362:	push   r14
  409364:	push   r13
  409366:	push   r12
  409368:	push   rbp
  409369:	push   rdi
  40936a:	push   rsi
  40936b:	push   rbx
  40936c:	sub    rsp,0x178
  409373:	mov    rbx,rcx
  409376:	mov    r12,rdx
  409379:	mov    rcx,QWORD PTR [rip+0x10980]        # 0x419d00
  409380:	mov    rdx,QWORD PTR [rip+0x1a0c1]        # 0x423448
  409387:	mov    r13,r8
  40938a:	lea    rsi,[rbx+0x8]
  40938e:	lea    rbp,[rsp+0x60]
  409393:	call   0x4185f0
  409398:	mov    rbx,QWORD PTR [rbx]
  40939b:	test   rbx,rbx
  40939e:	je     0x409470
  4093a4:	lea    r15,[rsp+0x20]
  4093a9:	mov    r14,QWORD PTR [rip+0x1c568]        # 0x425918
  4093b0:	jmp    0x4093d4
  4093b2:	mov    rdx,QWORD PTR [rip+0x1a08f]        # 0x423448
  4093b9:	add    rsi,0x8
  4093bd:	mov    ecx,0xa
  4093c2:	call   0x4185f8
  4093c7:	mov    rbx,QWORD PTR [rsi-0x8]
  4093cb:	test   rbx,rbx
  4093ce:	je     0x409470
  4093d4:	mov    r9,r13
  4093d7:	mov    r8,rbx
  4093da:	mov    edx,0x105
  4093df:	mov    rcx,rbp
  4093e2:	mov    rdi,rbx
  4093e5:	call   0x4090f0
  4093ea:	test   al,al
  4093ec:	je     0x4093f6
  4093ee:	cmp    BYTE PTR [rbx],0x24
  4093f1:	mov    rdi,rbp
  4093f4:	je     0x409454
  4093f6:	mov    rdx,QWORD PTR [rip+0x108eb]        # 0x419ce8
  4093fd:	mov    rcx,QWORD PTR [rip+0x1a044]        # 0x423448
  409404:	mov    r8,rbx
  409407:	call   0x402710
  40940c:	cmp    BYTE PTR [r12],0x0
  409411:	je     0x4093b2
  409413:	mov    rdx,r15
  409416:	mov    rcx,rdi
  409419:	call   r14
  40941c:	test   eax,eax
  40941e:	jne    0x4093b2
  409420:	movzx  eax,WORD PTR [rsp+0x26]
  409425:	and    ax,0xf000
  409429:	cmp    ax,0x4000
  40942d:	jne    0x4093b2
  40942f:	mov    rdx,QWORD PTR [rip+0x1a012]        # 0x423448
  409436:	mov    ecx,0x5c
  40943b:	call   0x4185f8
  409440:	mov    rdx,QWORD PTR [rip+0x1a001]        # 0x423448
  409447:	mov    rcx,r12
  40944a:	call   0x4185f0
  40944f:	jmp    0x4093b2
  409454:	movzx  eax,BYTE PTR [rbx+0x1]
  409458:	cmp    al,0x40
  40945a:	je     0x409460
  40945c:	cmp    al,0x24
  40945e:	jne    0x4093f6
  409460:	mov    rdi,rbp
  409463:	mov    rbx,rbp
  409466:	jmp    0x4093f6
  409468:	nop    DWORD PTR [rax+rax*1+0x0]
  409470:	add    rsp,0x178
  409477:	pop    rbx
  409478:	pop    rsi
  409479:	pop    rdi
  40947a:	pop    rbp
  40947b:	pop    r12
  40947d:	pop    r13
  40947f:	pop    r14
  409481:	pop    r15
  409483:	ret    
  409484:	xchg   ax,ax
  409486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409490:	push   r15
  409492:	push   r14
  409494:	push   r13
  409496:	push   r12
  409498:	push   rbp
  409499:	push   rdi
  40949a:	push   rsi
  40949b:	push   rbx
  40949c:	sub    rsp,0xc8
  4094a3:	mov    rax,QWORD PTR [rip+0x102ce]        # 0x419778
  4094aa:	mov    rsi,rcx
  4094ad:	mov    edx,DWORD PTR [rax+0x78]
  4094b0:	test   dl,0xf
  4094b3:	je     0x409870
  4094b9:	mov    rdx,QWORD PTR [rax+0x80]
  4094c0:	mov    QWORD PTR [rip+0x19fc9],rdx        # 0x423490
  4094c7:	test   BYTE PTR [rax+0x10],0xf
  4094cb:	mov    r12,QWORD PTR [rip+0x1c206]        # 0x4256d8
  4094d2:	jne    0x409895
  4094d8:	cmp    QWORD PTR [rip+0x19fa8],0x0        # 0x423488
  4094e0:	je     0x4094f5
  4094e2:	call   r12
  4094e5:	mov    rcx,QWORD PTR [rip+0x19f9c]        # 0x423488
  4094ec:	lea    rdx,[rax+0x30]
  4094f0:	call   0x4185f0
  4094f5:	lea    rdi,[rsp+0x40]
  4094fa:	xor    ecx,ecx
  4094fc:	call   QWORD PTR [rip+0x1c28e]        # 0x425790
  409502:	lea    rcx,[rsp+0x38]
  409507:	mov    QWORD PTR [rsp+0x38],rax
  40950c:	call   QWORD PTR [rip+0x1c256]        # 0x425768
  409512:	lea    r8,[rip+0x12d08]        # 0x41c221
  409519:	mov    r9,rax
  40951c:	mov    edx,0x80
  409521:	mov    rcx,rdi
  409524:	call   0x418540
  409529:	mov    rax,QWORD PTR [rip+0x10248]        # 0x419778
  409530:	lea    r8,[rip+0x12ce3]        # 0x41c21a
  409537:	test   BYTE PTR [rax+0x10],0xf
  40953b:	je     0x409541
  40953d:	mov    r8,QWORD PTR [rax+0x18]
  409541:	cmp    QWORD PTR [rip+0x19f3f],0x0        # 0x423488
  409549:	je     0x409c74
  40954f:	lea    rdx,[rip+0x14354]        # 0x41d8aa
  409556:	lea    rcx,[rip+0x14103]        # 0x41d660
  40955d:	mov    r9,rdi
  409560:	xor    ebx,ebx
  409562:	call   0x402b20
  409567:	mov    rdx,QWORD PTR [rsi+0x30]
  40956b:	lea    rcx,[rip+0x12dbf]        # 0x41c331
  409572:	call   0x402b20
  409577:	mov    rbp,QWORD PTR [rsi+0x30]
  40957b:	mov    r13,QWORD PTR [rip+0x1c36e]        # 0x4258f0
  409582:	movsx  ecx,BYTE PTR [rbp+rbx*1+0x0]
  409587:	call   r13
  40958a:	mov    BYTE PTR [rdi+rbx*1],al
  40958d:	add    rbx,0x1
  409591:	test   al,al
  409593:	jne    0x409582
  409595:	lea    r8,[rip+0x11bc7]        # 0x41b163
  40959c:	lea    rcx,[rip+0x12e76]        # 0x41c419
  4095a3:	mov    rdx,rbp
  4095a6:	mov    QWORD PTR [rsi+0x20],rdi
  4095aa:	mov    QWORD PTR [rsi+0x28],rdi
  4095ae:	call   0x402b20
  4095b3:	mov    rdx,QWORD PTR [rsi+0x30]
  4095b7:	lea    r8,[rip+0x11baf]        # 0x41b16d
  4095be:	lea    rcx,[rip+0x12e54]        # 0x41c419
  4095c5:	call   0x402b20
  4095ca:	mov    rbx,QWORD PTR [rsi+0x78]
  4095ce:	lea    rdx,[rip+0x2dfb]        # 0x40c3d0
  4095d5:	mov    eax,DWORD PTR [rsi+0xb0]
  4095db:	cmp    QWORD PTR [rbx+0x38],rdx
  4095df:	je     0x40960f
  4095e1:	cmp    eax,0x1
  4095e4:	jle    0x40962a
  4095e6:	sub    eax,0x2
  4095e9:	add    rax,0x1
  4095ed:	lea    rcx,[rax+rax*2]
  4095f1:	lea    rax,[rax+rcx*4]
  4095f5:	lea    rcx,[rbx+rax*8]
  4095f9:	mov    rax,rbx
  4095fc:	jmp    0x409605
  4095fe:	xchg   ax,ax
  409600:	cmp    rax,rcx
  409603:	je     0x40962a
  409605:	add    rax,0x68
  409609:	cmp    QWORD PTR [rax+0x38],rdx
  40960d:	jne    0x409600
  40960f:	mov    rdx,QWORD PTR [rsi+0x30]
  409613:	lea    r8,[rip+0x11b59]        # 0x41b173
  40961a:	lea    rcx,[rip+0x12df8]        # 0x41c419
  409621:	call   0x402b20
  409626:	mov    rbx,QWORD PTR [rsi+0x78]
  40962a:	mov    eax,DWORD PTR [rsi+0xb4]
  409630:	test   eax,eax
  409632:	jle    0x409700
  409638:	sub    eax,0x1
  40963b:	lea    r14,[rip+0x1384a]        # 0x41ce8c
  409642:	lea    r13,[rip+0x141de]        # 0x41d827
  409649:	add    rax,0x1
  40964d:	lea    rdx,[rax+rax*2]
  409651:	lea    rax,[rax+rdx*4]
  409655:	lea    rbp,[rbx+rax*8]
  409659:	jmp    0x4096a6
  40965b:	nop    DWORD PTR [rax+rax*1+0x0]
  409660:	cmp    eax,0x4
  409663:	je     0x409860
  409669:	cmp    eax,0x5
  40966c:	jne    0x409840
  409672:	mov    r9d,DWORD PTR [rbx+0x18]
  409676:	lea    r8,[rip+0x114c7]        # 0x41ab44
  40967d:	mov    edx,0x20
  409682:	mov    rcx,rdi
  409685:	call   0x402b00
  40968a:	mov    r8,QWORD PTR [rbx+0x48]
  40968e:	mov    r9,rdi
  409691:	mov    rdx,QWORD PTR [rsi+0x30]
  409695:	mov    rcx,r15
  409698:	call   0x402b20
  40969d:	add    rbx,0x68
  4096a1:	cmp    rbx,rbp
  4096a4:	je     0x409700
  4096a6:	mov    eax,DWORD PTR [rbx+0x10]
  4096a9:	test   eax,0x280000
  4096ae:	jne    0x40969d
  4096b0:	mov    r8,QWORD PTR [rbx+0x48]
  4096b4:	test   r8,r8
  4096b7:	je     0x40969d
  4096b9:	cmp    WORD PTR [rbx+0xc],0x1
  4096be:	mov    r15,r13
  4096c1:	cmova  r15,r14
  4096c5:	and    eax,0xf000
  4096ca:	shr    eax,0xc
  4096cd:	cmp    eax,0x3
  4096d0:	je     0x409820
  4096d6:	ja     0x409660
  4096d8:	cmp    eax,0x2
  4096db:	jne    0x409840
  4096e1:	mov    rdx,rbx
  4096e4:	mov    ecx,0x2
  4096e9:	call   QWORD PTR [rbx+0x38]
  4096ec:	mov    r9,QWORD PTR [rbx+0x18]
  4096f0:	mov    r8,QWORD PTR [rbx+0x48]
  4096f4:	jmp    0x409691
  4096f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409700:	mov    eax,DWORD PTR [rsi+0x10]
  409703:	and    eax,0x3
  409706:	cmp    eax,0x2
  409709:	je     0x409c34
  40970f:	cmp    eax,0x3
  409712:	je     0x409b50
  409718:	cmp    eax,0x1
  40971b:	je     0x4099d0
  409721:	call   r12
  409724:	lea    rcx,[rip+0x13a02]        # 0x41d12d
  40972b:	lea    r9,[rax+0x30]
  40972f:	mov    r8d,0x66
  409735:	mov    edx,0x1
  40973a:	call   0x4185c8
  40973f:	call   r12
  409742:	lea    rcx,[rip+0x1317d]        # 0x41c8c6
  409749:	lea    r9,[rax+0x30]
  40974d:	mov    edx,0x1
  409752:	mov    r8d,0xfa
  409758:	call   0x4185c8
  40975d:	mov    rcx,rsi
  409760:	call   0x404d20
  409765:	mov    rdx,QWORD PTR [rsi+0x30]
  409769:	lea    rcx,[rip+0x13395]        # 0x41cb05
  409770:	call   0x402b20
  409775:	mov    edi,DWORD PTR [rsi+0xb4]
  40977b:	mov    rdx,QWORD PTR [rsi+0x30]
  40977f:	lea    rcx,[rip+0x12fc5]        # 0x41c74b
  409786:	mov    rbx,QWORD PTR [rsi+0x78]
  40978a:	call   0x402b20
  40978f:	test   edi,edi
  409791:	jle    0x409a83
  409797:	lea    eax,[rdi-0x1]
  40979a:	lea    rbp,[rip+0x12e56]        # 0x41c5f7
  4097a1:	lea    rdi,[rip+0x12eab]        # 0x41c653
  4097a8:	add    rax,0x1
  4097ac:	lea    rdx,[rax+rax*2]
  4097b0:	lea    rax,[rax+rdx*4]
  4097b4:	lea    r13,[rbx+rax*8]
  4097b8:	jmp    0x4097ef
  4097ba:	nop    WORD PTR [rax+rax*1+0x0]
  4097c0:	test   eax,0x100000
  4097c5:	je     0x4097e2
  4097c7:	cmp    WORD PTR [rbx+0xc],0x2
  4097cc:	mov    rcx,rbp
  4097cf:	mov    r9d,0x1
  4097d5:	cmovb  rcx,rdi
  4097d9:	mov    rdx,QWORD PTR [rsi+0x30]
  4097dd:	call   0x402b20
  4097e2:	add    rbx,0x68
  4097e6:	cmp    rbx,r13
  4097e9:	je     0x409a83
  4097ef:	mov    eax,DWORD PTR [rbx+0x10]
  4097f2:	test   eax,0x280000
  4097f7:	jne    0x4097e2
  4097f9:	mov    r8,QWORD PTR [rbx+0x48]
  4097fd:	test   r8,r8
  409800:	je     0x4097e2
  409802:	movzx  r9d,WORD PTR [rbx+0xa]
  409807:	test   r9w,r9w
  40980b:	je     0x4097c0
  40980d:	cmp    WORD PTR [rbx+0xc],0x1
  409812:	mov    rcx,rdi
  409815:	cmova  rcx,rbp
  409819:	jmp    0x4097d9
  40981b:	nop    DWORD PTR [rax+rax*1+0x0]
  409820:	mov    eax,DWORD PTR [rbx+0x18]
  409823:	lea    r9,[rip+0x128a5]        # 0x41c0cf
  40982a:	test   eax,eax
  40982c:	lea    rax,[rip+0x12a1c]        # 0x41c24f
  409833:	cmovne r9,rax
  409837:	jmp    0x409691
  40983c:	nop    DWORD PTR [rax+0x0]
  409840:	mov    r9,QWORD PTR [rbx+0x18]
  409844:	test   r9,r9
  409847:	jne    0x409691
  40984d:	lea    rax,[rip+0x14018]        # 0x41d86c
  409854:	cmp    r15,r13
  409857:	cmove  r15,rax
  40985b:	jmp    0x409691
  409860:	mov    r9d,DWORD PTR [rbx+0x18]
  409864:	lea    r8,[rip+0x11757]        # 0x41afc2
  40986b:	jmp    0x40967d
  409870:	and    edx,0x20
  409873:	je     0x409c50
  409879:	test   BYTE PTR [rax+0x10],0xf
  40987d:	mov    QWORD PTR [rip+0x19c08],0x0        # 0x423490
  409888:	mov    r12,QWORD PTR [rip+0x1be49]        # 0x4256d8
  40988f:	je     0x4094d8
  409895:	mov    r13,QWORD PTR [rax+0x18]
  409899:	lea    rdx,[rip+0x11710]        # 0x41afb0
  4098a0:	mov    rbp,QWORD PTR [rsi+0x28]
  4098a4:	mov    rcx,r13
  4098a7:	call   0x418608
  4098ac:	test   rax,rax
  4098af:	mov    rdi,rax
  4098b2:	je     0x409cd4
  4098b8:	mov    rcx,rax
  4098bb:	call   0x418490
  4098c0:	lea    rdx,[rsp+0x40]
  4098c5:	mov    ecx,eax
  4098c7:	call   QWORD PTR [rip+0x1be7b]        # 0x425748
  4098cd:	test   eax,eax
  4098cf:	jne    0x409ce4
  4098d5:	movzx  eax,WORD PTR [rsp+0x46]
  4098da:	and    ax,0xf000
  4098de:	cmp    ax,0x8000
  4098e2:	jne    0x409ce4
  4098e8:	mov    rax,QWORD PTR [rsp+0x58]
  4098ed:	lea    rcx,[rax+0x1]
  4098f1:	call   0x404550
  4098f6:	mov    r8,QWORD PTR [rsp+0x58]
  4098fb:	mov    r12,rax
  4098fe:	mov    rbx,rax
  409901:	jmp    0x409918
  409903:	mov    r8,QWORD PTR [rsp+0x58]
  409908:	sub    r8,rax
  40990b:	test   r8,r8
  40990e:	mov    QWORD PTR [rsp+0x58],r8
  409913:	je     0x40992d
  409915:	add    rbx,rax
  409918:	mov    r9,rdi
  40991b:	mov    edx,0x1
  409920:	mov    rcx,rbx
  409923:	call   0x4185e8
  409928:	test   rax,rax
  40992b:	jne    0x409903
  40992d:	mov    BYTE PTR [rbx],0x0
  409930:	mov    rcx,rdi
  409933:	call   0x418628
  409938:	test   r12,r12
  40993b:	mov    QWORD PTR [rip+0x19b36],r12        # 0x423478
  409942:	je     0x40998a
  409944:	lea    rdx,[rip+0x13f5f]        # 0x41d8aa
  40994b:	mov    rcx,r12
  40994e:	call   0x418510
  409953:	test   rax,rax
  409956:	je     0x409cb8
  40995c:	lea    rcx,[rax+0x1]
  409960:	lea    rdx,[rip+0x12d70]        # 0x41c6d7
  409967:	mov    BYTE PTR [rax],0x0
  40996a:	call   0x418510
  40996f:	test   rax,rax
  409972:	je     0x409c9f
  409978:	add    rax,0x73
  40997c:	mov    QWORD PTR [rip+0x19b05],r12        # 0x423488
  409983:	mov    QWORD PTR [rip+0x19af6],rax        # 0x423480
  40998a:	mov    r12,QWORD PTR [rip+0x1bd47]        # 0x4256d8
  409991:	call   r12
  409994:	lea    rdx,[rip+0x1161d]        # 0x41afb8
  40999b:	lea    r8,[rax+0x30]
  40999f:	mov    rcx,r13
  4099a2:	call   0x4185d8
  4099a7:	mov    rbx,rax
  4099aa:	call   r12
  4099ad:	lea    rdx,[rax+0x30]
  4099b1:	cmp    rbx,rdx
  4099b4:	je     0x4094d8
  4099ba:	lea    rdx,[rip+0x115f9]        # 0x41afba
  4099c1:	mov    r8,r13
  4099c4:	mov    rcx,rbp
  4099c7:	call   0x4030d0
  4099cc:	nop    DWORD PTR [rax+0x0]
  4099d0:	call   r12
  4099d3:	lea    rcx,[rip+0x1305c]        # 0x41ca36
  4099da:	lea    r9,[rax+0x30]
  4099de:	mov    r8d,0xce
  4099e4:	mov    edx,0x1
  4099e9:	call   0x4185c8
  4099ee:	call   r12
  4099f1:	lea    rcx,[rip+0x12706]        # 0x41c0fe
  4099f8:	lea    r9,[rax+0x30]
  4099fc:	mov    r8d,0xa
  409a02:	mov    edx,0x1
  409a07:	call   0x4185c8
  409a0c:	call   r12
  409a0f:	lea    rcx,[rip+0x12eb0]        # 0x41c8c6
  409a16:	lea    r9,[rax+0x30]
  409a1a:	mov    edx,0x1
  409a1f:	mov    r8d,0xfa
  409a25:	call   0x4185c8
  409a2a:	mov    rcx,rsi
  409a2d:	call   0x404d20
  409a32:	mov    rdx,QWORD PTR [rsi+0x30]
  409a36:	lea    rcx,[rip+0x130c8]        # 0x41cb05
  409a3d:	call   0x402b20
  409a42:	call   r12
  409a45:	lea    rcx,[rip+0x1264c]        # 0x41c098
  409a4c:	lea    r9,[rax+0x30]
  409a50:	mov    r8d,0xc
  409a56:	mov    edx,0x1
  409a5b:	call   0x4185c8
  409a60:	call   r12
  409a63:	lea    rcx,[rip+0x134c0]        # 0x41cf2a
  409a6a:	lea    r9,[rax+0x30]
  409a6e:	mov    r8d,0x38
  409a74:	mov    edx,0x1
  409a79:	call   0x4185c8
  409a7e:	jmp    0x409775
  409a83:	call   r12
  409a86:	lea    rcx,[rip+0x12c4a]        # 0x41c6d7
  409a8d:	lea    r9,[rax+0x30]
  409a91:	mov    r8d,0x73
  409a97:	mov    edx,0x1
  409a9c:	call   0x4185c8
  409aa1:	mov    rax,QWORD PTR [rip+0x199d8]        # 0x423480
  409aa8:	test   rax,rax
  409aab:	je     0x409ab2
  409aad:	cmp    BYTE PTR [rax],0x0
  409ab0:	jne    0x409b20
  409ab2:	mov    rax,QWORD PTR [rip+0xfcbf]        # 0x419778
  409ab9:	test   BYTE PTR [rax+0x78],0x20
  409abd:	je     0x409b35
  409abf:	call   r12
  409ac2:	lea    rcx,[rax+0x30]
  409ac6:	call   0x418628
  409acb:	call   r12
  409ace:	lea    rcx,[rax+0x30]
  409ad2:	call   0x418620
  409ad7:	test   eax,eax
  409ad9:	jne    0x409cf6
  409adf:	mov    rcx,QWORD PTR [rip+0x19992]        # 0x423478
  409ae6:	call   0x4185e0
  409aeb:	mov    QWORD PTR [rip+0x19992],0x0        # 0x423488
  409af6:	mov    QWORD PTR [rip+0x1997f],0x0        # 0x423480
  409b01:	mov    QWORD PTR [rip+0x1996c],0x0        # 0x423478
  409b0c:	add    rsp,0xc8
  409b13:	pop    rbx
  409b14:	pop    rsi
  409b15:	pop    rdi
  409b16:	pop    rbp
  409b17:	pop    r12
  409b19:	pop    r13
  409b1b:	pop    r14
  409b1d:	pop    r15
  409b1f:	ret    
  409b20:	call   r12
  409b23:	mov    rcx,QWORD PTR [rip+0x19956]        # 0x423480
  409b2a:	lea    rdx,[rax+0x30]
  409b2e:	call   0x4185f0
  409b33:	jmp    0x409abf
  409b35:	mov    rdx,QWORD PTR [rsi+0x30]
  409b39:	lea    rcx,[rip+0x126b4]        # 0x41c1f4
  409b40:	call   0x402b20
  409b45:	jmp    0x409abf
  409b4a:	nop    WORD PTR [rax+rax*1+0x0]
  409b50:	call   r12
  409b53:	lea    rcx,[rip+0x12edc]        # 0x41ca36
  409b5a:	lea    r9,[rax+0x30]
  409b5e:	mov    r8d,0xce
  409b64:	mov    edx,0x1
  409b69:	call   0x4185c8
  409b6e:	call   r12
  409b71:	lea    rcx,[rip+0x12586]        # 0x41c0fe
  409b78:	lea    r9,[rax+0x30]
  409b7c:	mov    r8d,0xa
  409b82:	mov    edx,0x1
  409b87:	call   0x4185c8
  409b8c:	call   r12
  409b8f:	lea    rcx,[rip+0x12d30]        # 0x41c8c6
  409b96:	lea    r9,[rax+0x30]
  409b9a:	mov    r8d,0xfa
  409ba0:	mov    edx,0x1
  409ba5:	call   0x4185c8
  409baa:	mov    rcx,rsi
  409bad:	call   0x404d20
  409bb2:	mov    rdx,QWORD PTR [rsi+0x30]
  409bb6:	lea    rcx,[rip+0x12f48]        # 0x41cb05
  409bbd:	call   0x402b20
  409bc2:	call   r12
  409bc5:	lea    rcx,[rip+0x124cc]        # 0x41c098
  409bcc:	lea    r9,[rax+0x30]
  409bd0:	mov    r8d,0xc
  409bd6:	mov    edx,0x1
  409bdb:	call   0x4185c8
  409be0:	call   r12
  409be3:	lea    rcx,[rip+0x124eb]        # 0x41c0d5
  409bea:	lea    r9,[rax+0x30]
  409bee:	mov    r8d,0x9
  409bf4:	mov    edx,0x1
  409bf9:	call   0x4185c8
  409bfe:	call   r12
  409c01:	lea    rcx,[rip+0x12db9]        # 0x41c9c1
  409c08:	lea    r9,[rax+0x30]
  409c0c:	mov    edx,0x1
  409c11:	mov    r8d,0x74
  409c17:	call   0x4185c8
  409c1c:	mov    rcx,rsi
  409c1f:	call   0x404a90
  409c24:	mov    rdx,QWORD PTR [rsi+0x30]
  409c28:	lea    rcx,[rip+0x13565]        # 0x41d194
  409c2f:	jmp    0x409a3d
  409c34:	call   r12
  409c37:	mov    r8d,0xce
  409c3d:	lea    r9,[rax+0x30]
  409c41:	mov    edx,0x1
  409c46:	lea    rcx,[rip+0x12de9]        # 0x41ca36
  409c4d:	jmp    0x409bdb
  409c4f:	nop
  409c50:	lea    rcx,[rip+0x11349]        # 0x41afa0
  409c57:	call   0x4185c0
  409c5c:	test   rax,rax
  409c5f:	mov    QWORD PTR [rip+0x1982a],rax        # 0x423490
  409c66:	je     0x409cc4
  409c68:	mov    rax,QWORD PTR [rip+0xfb09]        # 0x419778
  409c6f:	jmp    0x4094c7
  409c74:	mov    rdx,QWORD PTR [rip+0x19815]        # 0x423490
  409c7b:	test   rdx,rdx
  409c7e:	je     0x40954f
  409c84:	lea    rcx,[rip+0x12562]        # 0x41c1ed
  409c8b:	mov    QWORD PTR [rsp+0x28],r8
  409c90:	call   0x402b20
  409c95:	mov    r8,QWORD PTR [rsp+0x28]
  409c9a:	jmp    0x40954f
  409c9f:	mov    rcx,r12
  409ca2:	call   0x418538
  409ca7:	lea    rax,[r12+rax*1+0x53]
  409cac:	mov    QWORD PTR [rip+0x197cd],rax        # 0x423480
  409cb3:	jmp    0x40998a
  409cb8:	mov    QWORD PTR [rip+0x197c1],r12        # 0x423480
  409cbf:	jmp    0x40998a
  409cc4:	lea    rax,[rip+0x112db]        # 0x41afa6
  409ccb:	mov    QWORD PTR [rip+0x197be],rax        # 0x423490
  409cd2:	jmp    0x409c68
  409cd4:	mov    QWORD PTR [rip+0x19799],0x0        # 0x423478
  409cdf:	jmp    0x40998a
  409ce4:	lea    rdx,[rip+0x112c7]        # 0x41afb2
  409ceb:	mov    r8,r13
  409cee:	mov    rcx,rbp
  409cf1:	call   0x4030d0
  409cf6:	mov    rcx,QWORD PTR [rsi+0x28]
  409cfa:	mov    r8,QWORD PTR [rip+0xfef7]        # 0x419bf8
  409d01:	mov    rdx,QWORD PTR [rip+0xff00]        # 0x419c08
  409d08:	call   0x4030d0
  409d0d:	nop
  409d0e:	xchg   ax,ax
  409d10:	push   rbx
  409d11:	sub    rsp,0x20
  409d15:	test   rcx,rcx
  409d18:	je     0x409d2e
  409d1a:	cmp    DWORD PTR [rcx],0x6
  409d1d:	mov    rbx,rcx
  409d20:	je     0x409d34
  409d22:	call   QWORD PTR [rip+0x1b9f8]        # 0x425720
  409d28:	mov    DWORD PTR [rax],0x16
  409d2e:	add    rsp,0x20
  409d32:	pop    rbx
  409d33:	ret    
  409d34:	mov    rcx,QWORD PTR [rcx+0x10]
  409d38:	call   0x402650
  409d3d:	mov    rcx,rbx
  409d40:	add    rsp,0x20
  409d44:	pop    rbx
  409d45:	jmp    0x4185e0
  409d4a:	nop    WORD PTR [rax+rax*1+0x0]
  409d50:	push   rdi
  409d51:	push   rsi
  409d52:	push   rbx
  409d53:	sub    rsp,0x20
  409d57:	cmp    rcx,0xe
  409d5b:	jbe    0x409da3
  409d5d:	test   BYTE PTR [rdx+0x10],0x8
  409d61:	mov    rsi,rdx
  409d64:	je     0x409db0
  409d66:	mov    rcx,QWORD PTR [rdx+0x20]
  409d6a:	test   rcx,rcx
  409d6d:	je     0x409da3
  409d6f:	mov    eax,DWORD PTR [rcx]
  409d71:	lea    rbx,[rcx+0x8]
  409d75:	test   eax,eax
  409d77:	jle    0x409d97
  409d79:	sub    eax,0x1
  409d7c:	lea    rdi,[rbx+rax*8+0x8]
  409d81:	add    rbx,0x8
  409d85:	mov    rcx,QWORD PTR [rbx-0x8]
  409d89:	call   0x409d10
  409d8e:	cmp    rbx,rdi
  409d91:	jne    0x409d81
  409d93:	mov    rcx,QWORD PTR [rsi+0x20]
  409d97:	add    rsp,0x20
  409d9b:	pop    rbx
  409d9c:	pop    rsi
  409d9d:	pop    rdi
  409d9e:	jmp    0x4185e0
  409da3:	add    rsp,0x20
  409da7:	pop    rbx
  409da8:	pop    rsi
  409da9:	pop    rdi
  409daa:	ret    
  409dab:	nop    DWORD PTR [rax+rax*1+0x0]
  409db0:	mov    rbx,QWORD PTR [rdx+0x50]
  409db4:	mov    rcx,rbx
  409db7:	call   0x418538
  409dbc:	mov    rcx,QWORD PTR [rsi+0x18]
  409dc0:	mov    r8,rax
  409dc3:	mov    rdx,rbx
  409dc6:	call   0x4079a0
  409dcb:	test   rax,rax
  409dce:	je     0x409da3
  409dd0:	lea    rcx,[rsi+0x20]
  409dd4:	mov    rdx,rax
  409dd7:	add    rsp,0x20
  409ddb:	pop    rbx
  409ddc:	pop    rsi
  409ddd:	pop    rdi
  409dde:	jmp    0x4045a0
  409de3:	nop    DWORD PTR [rax]
  409de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409df0:	push   r12
  409df2:	push   rbp
  409df3:	push   rdi
  409df4:	push   rsi
  409df5:	push   rbx
  409df6:	sub    rsp,0x30
  409dfa:	mov    eax,DWORD PTR [rip+0x19670]        # 0x423470
  409e00:	mov    rdi,rdx
  409e03:	lea    rdx,[rip+0x12176]        # 0x41bf80
  409e0a:	cmp    rcx,0x1
  409e0e:	mov    rbp,rcx
  409e11:	mov    rbx,r8
  409e14:	mov    esi,r9d
  409e17:	lea    r12,[rdx+rax*1+0xcb]
  409e1f:	je     0x409e5b
  409e21:	cmp    rcx,0xf
  409e25:	ja     0x409e32
  409e27:	add    rsp,0x30
  409e2b:	pop    rbx
  409e2c:	pop    rsi
  409e2d:	pop    rdi
  409e2e:	pop    rbp
  409e2f:	pop    r12
  409e31:	ret    
  409e32:	mov    eax,DWORD PTR [rdi+0x18]
  409e35:	mov    rdx,QWORD PTR [rip+0xfdd4]        # 0x419c10
  409e3c:	lea    r12,[rip+0x11183]        # 0x41afc6
  409e43:	mov    DWORD PTR [rsp+0x20],eax
  409e47:	mov    r8,QWORD PTR [rcx+0x28]
  409e4b:	mov    r9,QWORD PTR [rdi+0x50]
  409e4f:	mov    rcx,QWORD PTR [rip+0x195f2]        # 0x423448
  409e56:	call   0x402710
  409e5b:	test   BYTE PTR [rdi+0x13],0x1
  409e5f:	jne    0x409f90
  409e65:	cmp    esi,0x1
  409e68:	jle    0x409faf
  409e6e:	mov    rdx,QWORD PTR [rip+0xfebb]        # 0x419d30
  409e75:	mov    rcx,QWORD PTR [rip+0x195cc]        # 0x423448
  409e7c:	mov    r8,r12
  409e7f:	lea    rdi,[rip+0x122f2]        # 0x41c178
  409e86:	call   0x402710
  409e8b:	cmp    rbp,0x1
  409e8f:	jne    0x409ed8
  409e91:	jmp    0x409fc0
  409e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ea0:	mov    rdx,QWORD PTR [rip+0xfe71]        # 0x419d18
  409ea7:	mov    rcx,QWORD PTR [rip+0x1959a]        # 0x423448
  409eae:	mov    r8,rdi
  409eb1:	mov    DWORD PTR [rsp+0x20],eax
  409eb5:	call   0x402710
  409eba:	sub    esi,0x1
  409ebd:	mov    rdx,QWORD PTR [rip+0x19584]        # 0x423448
  409ec4:	test   esi,esi
  409ec6:	jle    0x409f1d
  409ec8:	mov    rcx,QWORD PTR [rip+0xfe71]        # 0x419d40
  409ecf:	add    rbx,0x8
  409ed3:	call   0x4185f0
  409ed8:	mov    eax,DWORD PTR [rbx+0x4]
  409edb:	mov    r9d,DWORD PTR [rbx]
  409ede:	cmp    eax,0x80000000
  409ee3:	je     0x409f50
  409ee5:	cmp    r9d,0x80000000
  409eec:	je     0x409f70
  409ef2:	cmp    eax,0x7fffffff
  409ef7:	jne    0x409ea0
  409ef9:	mov    rdx,QWORD PTR [rip+0xfe20]        # 0x419d20
  409f00:	mov    rcx,QWORD PTR [rip+0x19541]        # 0x423448
  409f07:	mov    r8,rdi
  409f0a:	sub    esi,0x1
  409f0d:	call   0x402710
  409f12:	test   esi,esi
  409f14:	mov    rdx,QWORD PTR [rip+0x1952d]        # 0x423448
  409f1b:	jg     0x409ec8
  409f1d:	mov    ecx,0xa
  409f22:	call   0x4185f8
  409f27:	cmp    rbp,0xf
  409f2b:	jbe    0x409e27
  409f31:	mov    rax,QWORD PTR [rbp+0x98]
  409f38:	mov    edx,0x1
  409f3d:	mov    rcx,rbp
  409f40:	add    rsp,0x30
  409f44:	pop    rbx
  409f45:	pop    rsi
  409f46:	pop    rdi
  409f47:	pop    rbp
  409f48:	pop    r12
  409f4a:	rex.W jmp rax
  409f4d:	nop    DWORD PTR [rax]
  409f50:	mov    rdx,QWORD PTR [rip+0xfdd1]        # 0x419d28
  409f57:	mov    rcx,QWORD PTR [rip+0x194ea]        # 0x423448
  409f5e:	mov    r8,rdi
  409f61:	call   0x402710
  409f66:	jmp    0x409eba
  409f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f70:	mov    rdx,QWORD PTR [rip+0xfdd9]        # 0x419d50
  409f77:	mov    rcx,QWORD PTR [rip+0x194ca]        # 0x423448
  409f7e:	mov    r9d,eax
  409f81:	mov    r8,rdi
  409f84:	call   0x402710
  409f89:	jmp    0x409eba
  409f8e:	xchg   ax,ax
  409f90:	mov    rdx,QWORD PTR [rip+0xfdb1]        # 0x419d48
  409f97:	mov    rcx,QWORD PTR [rip+0x194aa]        # 0x423448
  409f9e:	mov    r8,r12
  409fa1:	call   0x402710
  409fa6:	cmp    esi,0x1
  409fa9:	jg     0x409e6e
  409faf:	mov    rdx,QWORD PTR [rip+0xfd82]        # 0x419d38
  409fb6:	jmp    0x409e75
  409fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  409fc0:	mov    eax,DWORD PTR [rip+0x194aa]        # 0x423470
  409fc6:	lea    rdx,[rip+0x11fb3]        # 0x41bf80
  409fcd:	lea    rdi,[rdx+rax*1+0xd2]
  409fd5:	jmp    0x409ed8
  409fda:	nop    WORD PTR [rax+rax*1+0x0]
  409fe0:	push   r15
  409fe2:	push   r14
  409fe4:	push   r13
  409fe6:	push   r12
  409fe8:	push   rbp
  409fe9:	push   rdi
  409fea:	push   rsi
  409feb:	push   rbx
  409fec:	sub    rsp,0x28
  409ff0:	mov    ebx,0x3
  409ff5:	mov    rbp,rcx
  409ff8:	mov    rcx,rdx
  409ffb:	mov    rdi,rdx
  409ffe:	call   0x418538
  40a003:	mov    r9,rbp
  40a006:	mov    r12,rax
  40a009:	mov    eax,0x1
  40a00e:	xchg   ax,ax
  40a010:	add    r9,0x1
  40a014:	movzx  ecx,BYTE PTR [r9-0x1]
  40a019:	lea    r10d,[rcx-0x20]
  40a01d:	cmp    r10b,0x5e
  40a021:	ja     0x40a040
  40a023:	cmp    cl,0x5c
  40a026:	je     0x40a070
  40a028:	cmp    cl,0x22
  40a02b:	mov    r10d,0x1
  40a031:	je     0x40a070
  40a033:	add    rbx,r10
  40a036:	jmp    0x40a010
  40a038:	nop    DWORD PTR [rax+rax*1+0x0]
  40a040:	cmp    cl,0xd
  40a043:	ja     0x40a063
  40a045:	mov    r10,rax
  40a048:	shl    r10,cl
  40a04b:	test   r10d,0x3b80
  40a052:	jne    0x40a080
  40a054:	test   r10d,0x400
  40a05b:	jne    0x40a090
  40a05d:	and    r10d,0x1
  40a061:	jne    0x40a098
  40a063:	add    rbx,0x4
  40a067:	jmp    0x40a010
  40a069:	nop    DWORD PTR [rax+0x0]
  40a070:	mov    r10d,0x2
  40a076:	jmp    0x40a033
  40a078:	nop    DWORD PTR [rax+rax*1+0x0]
  40a080:	add    rbx,0x2
  40a084:	jmp    0x40a010
  40a086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a090:	add    rbx,r12
  40a093:	jmp    0x40a010
  40a098:	mov    rcx,rbx
  40a09b:	lea    r14,[rip+0x10f26]        # 0x41afc8
  40a0a2:	call   0x404550
  40a0a7:	mov    r13,rax
  40a0aa:	lea    rsi,[rax+0x1]
  40a0ae:	mov    BYTE PTR [rax],0x22
  40a0b1:	jmp    0x40a0d2
  40a0b3:	cmp    r8b,0x5c
  40a0b7:	je     0x40a1d4
  40a0bd:	cmp    r8b,0x22
  40a0c1:	je     0x40a1d4
  40a0c7:	mov    BYTE PTR [rsi],r8b
  40a0ca:	add    rsi,0x1
  40a0ce:	add    rbp,0x1
  40a0d2:	movzx  r8d,BYTE PTR [rbp+0x0]
  40a0d7:	lea    ecx,[r8-0x20]
  40a0db:	cmp    cl,0x5e
  40a0de:	jbe    0x40a0b3
  40a0e0:	cmp    r8b,0xd
  40a0e4:	ja     0x40a1bb
  40a0ea:	movzx  eax,r8b
  40a0ee:	movsxd rcx,DWORD PTR [r14+rax*4]
  40a0f2:	add    rcx,r14
  40a0f5:	jmp    rcx
  40a0f7:	movzx  eax,BYTE PTR [rbp+0x1]
  40a0fb:	lea    r15,[rbp+0x1]
  40a0ff:	cmp    al,0xa
  40a101:	jne    0x40a11a
  40a103:	mov    BYTE PTR [rsi],0x5c
  40a106:	add    r15,0x1
  40a10a:	add    rsi,0x2
  40a10e:	mov    BYTE PTR [rsi-0x1],0x6e
  40a112:	movzx  eax,BYTE PTR [r15]
  40a116:	cmp    al,0xa
  40a118:	je     0x40a103
  40a11a:	test   al,al
  40a11c:	jne    0x40a1e0
  40a122:	mov    rax,rsi
  40a125:	mov    BYTE PTR [rsi],0x5c
  40a128:	add    rsi,0x2
  40a12c:	mov    BYTE PTR [rax+0x1],0x6e
  40a130:	mov    BYTE PTR [rsi],0x22
  40a133:	mov    BYTE PTR [rsi+0x1],0x0
  40a137:	add    rsi,0x2
  40a13b:	sub    rsi,r13
  40a13e:	cmp    rsi,rbx
  40a141:	ja     0x40a1f9
  40a147:	mov    rax,r13
  40a14a:	add    rsp,0x28
  40a14e:	pop    rbx
  40a14f:	pop    rsi
  40a150:	pop    rdi
  40a151:	pop    rbp
  40a152:	pop    r12
  40a154:	pop    r13
  40a156:	pop    r14
  40a158:	pop    r15
  40a15a:	ret    
  40a15b:	mov    BYTE PTR [rsi],0x5c
  40a15e:	mov    BYTE PTR [rsi+0x1],0x72
  40a162:	add    rsi,0x2
  40a166:	jmp    0x40a0ce
  40a16b:	mov    BYTE PTR [rsi],0x5c
  40a16e:	mov    BYTE PTR [rsi+0x1],0x66
  40a172:	add    rsi,0x2
  40a176:	jmp    0x40a0ce
  40a17b:	mov    BYTE PTR [rsi],0x5c
  40a17e:	mov    BYTE PTR [rsi+0x1],0x76
  40a182:	add    rsi,0x2
  40a186:	jmp    0x40a0ce
  40a18b:	mov    BYTE PTR [rsi],0x5c
  40a18e:	mov    BYTE PTR [rsi+0x1],0x74
  40a192:	add    rsi,0x2
  40a196:	jmp    0x40a0ce
  40a19b:	mov    BYTE PTR [rsi],0x5c
  40a19e:	mov    BYTE PTR [rsi+0x1],0x62
  40a1a2:	add    rsi,0x2
  40a1a6:	jmp    0x40a0ce
  40a1ab:	mov    BYTE PTR [rsi],0x5c
  40a1ae:	mov    BYTE PTR [rsi+0x1],0x61
  40a1b2:	add    rsi,0x2
  40a1b6:	jmp    0x40a0ce
  40a1bb:	lea    rdx,[rip+0x11f64]        # 0x41c126
  40a1c2:	mov    rcx,rsi
  40a1c5:	call   0x4030f0
  40a1ca:	cdqe   
  40a1cc:	add    rsi,rax
  40a1cf:	jmp    0x40a0ce
  40a1d4:	mov    BYTE PTR [rsi],0x5c
  40a1d7:	add    rsi,0x1
  40a1db:	jmp    0x40a0c7
  40a1e0:	mov    rcx,rsi
  40a1e3:	mov    r8,r12
  40a1e6:	mov    rdx,rdi
  40a1e9:	call   0x4185a0
  40a1ee:	add    rsi,r12
  40a1f1:	mov    rbp,r15
  40a1f4:	jmp    0x40a0d2
  40a1f9:	call   QWORD PTR [rip+0x1b4d9]        # 0x4256d8
  40a1ff:	lea    rcx,[rip+0x12089]        # 0x41c28f
  40a206:	lea    r9,[rax+0x60]
  40a20a:	mov    r8d,0x24
  40a210:	mov    edx,0x1
  40a215:	call   0x4185c8
  40a21a:	mov    ecx,0x1
  40a21f:	call   0x402b50
  40a224:	nop
  40a225:	nop
  40a226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a230:	push   rsi
  40a231:	push   rbx
  40a232:	sub    rsp,0x28
  40a236:	test   dl,dl
  40a238:	mov    rbx,r8
  40a23b:	jne    0x40a270
  40a23d:	lea    rdx,[rip+0x11eb5]        # 0x41c0f9
  40a244:	call   0x409fe0
  40a249:	lea    rdx,[rip+0x11f71]        # 0x41c1c1
  40a250:	mov    rsi,rax
  40a253:	mov    rcx,rbx
  40a256:	mov    r8,rax
  40a259:	call   0x402710
  40a25e:	mov    rcx,rsi
  40a261:	add    rsp,0x28
  40a265:	pop    rbx
  40a266:	pop    rsi
  40a267:	jmp    0x4185e0
  40a26c:	nop    DWORD PTR [rax+0x0]
  40a270:	mov    rdx,r8
  40a273:	add    rsp,0x28
  40a277:	pop    rbx
  40a278:	pop    rsi
  40a279:	jmp    0x4185f0
  40a27e:	xchg   ax,ax
  40a280:	push   r15
  40a282:	push   r14
  40a284:	push   r13
  40a286:	push   r12
  40a288:	push   rbp
  40a289:	push   rdi
  40a28a:	push   rsi
  40a28b:	push   rbx
  40a28c:	sub    rsp,0x38
  40a290:	mov    eax,DWORD PTR [rcx+0x14]
  40a293:	xor    r13d,r13d
  40a296:	xor    r12d,r12d
  40a299:	mov    rbp,rcx
  40a29c:	lea    rcx,[rip+0x1220c]        # 0x41c4af
  40a2a3:	lea    edx,[rax-0x1]
  40a2a6:	call   0x402b20
  40a2ab:	mov    rsi,QWORD PTR [rip+0x1b426]        # 0x4256d8
  40a2b2:	jmp    0x40a2c9
  40a2b4:	add    r12d,0x1
  40a2b8:	add    r13,0x68
  40a2bc:	cmp    r12d,DWORD PTR [rbp+0xb4]
  40a2c3:	jge    0x40a431
  40a2c9:	mov    rdx,QWORD PTR [rbp+0x78]
  40a2cd:	lea    rdi,[rdx+r13*1]
  40a2d1:	mov    eax,DWORD PTR [rdi+0x10]
  40a2d4:	test   eax,0x8280000
  40a2d9:	jne    0x40a2b4
  40a2db:	cmp    WORD PTR [rdi+0x8],0x8000
  40a2e1:	jne    0x40a2b4
  40a2e3:	movzx  r8d,WORD PTR [rdi+0x4]
  40a2e8:	cmp    r8d,r12d
  40a2eb:	je     0x40a338
  40a2ed:	lea    rax,[r8+r8*2]
  40a2f1:	lea    rcx,[rip+0x12140]        # 0x41c438
  40a2f8:	lea    rax,[r8+rax*4]
  40a2fc:	mov    r8,QWORD PTR [rdi+0x48]
  40a300:	lea    rbx,[rdx+rax*8]
  40a304:	mov    rax,QWORD PTR [rdi+0x18]
  40a308:	mov    r9,QWORD PTR [rbx+0x48]
  40a30c:	mov    QWORD PTR [rbx+0x18],rax
  40a310:	mov    eax,DWORD PTR [rbx+0x10]
  40a313:	and    eax,0xfffff00
  40a318:	mov    DWORD PTR [rbx+0x10],eax
  40a31b:	mov    edx,DWORD PTR [rdi+0x10]
  40a31e:	mov    rdi,rbx
  40a321:	and    edx,0xf00000ff
  40a327:	or     eax,edx
  40a329:	mov    rdx,QWORD PTR [rbp+0x30]
  40a32d:	mov    DWORD PTR [rbx+0x10],eax
  40a330:	call   0x402b20
  40a335:	mov    eax,DWORD PTR [rbx+0x10]
  40a338:	mov    edx,eax
  40a33a:	and    edx,0xf000
  40a340:	shr    edx,0xc
  40a343:	cmp    edx,0x4
  40a346:	je     0x40a4f9
  40a34c:	mov    ecx,DWORD PTR [rdi+0x10]
  40a34f:	and    ecx,0x2f
  40a352:	cmp    ecx,0x20
  40a355:	je     0x40a2b4
  40a35b:	test   ah,0x4
  40a35e:	je     0x40a3e2
  40a364:	mov    r14,QWORD PTR [rdi+0x20]
  40a368:	test   r14,r14
  40a36b:	je     0x40a3e2
  40a36d:	mov    ebx,DWORD PTR [r14]
  40a370:	mov    rdx,QWORD PTR [rbp+0x30]
  40a374:	lea    rcx,[rip+0x1210d]        # 0x41c488
  40a37b:	mov    r8,QWORD PTR [rdi+0x48]
  40a37f:	lea    r15,[r14+0x8]
  40a383:	mov    r9d,ebx
  40a386:	call   0x402b20
  40a38b:	sub    ebx,0x1
  40a38e:	js     0x40a2b4
  40a394:	mov    r9d,DWORD PTR [r14]
  40a397:	mov    rdx,QWORD PTR [rbp+0x30]
  40a39b:	lea    rcx,[rip+0x11ce9]        # 0x41c08b
  40a3a2:	mov    r8,QWORD PTR [rdi+0x48]
  40a3a6:	add    r15,0x8
  40a3aa:	sub    r9d,ebx
  40a3ad:	call   0x402b20
  40a3b2:	mov    rcx,QWORD PTR [r15-0x8]
  40a3b6:	call   0x403e90
  40a3bb:	mov    r9d,DWORD PTR [r14]
  40a3be:	mov    rdx,QWORD PTR [rbp+0x30]
  40a3c2:	lea    rcx,[rip+0x11cf4]        # 0x41c0bd
  40a3c9:	mov    r8,QWORD PTR [rdi+0x48]
  40a3cd:	sub    r9d,ebx
  40a3d0:	sub    ebx,0x1
  40a3d3:	call   0x402b20
  40a3d8:	cmp    ebx,0xffffffff
  40a3db:	jne    0x40a394
  40a3dd:	jmp    0x40a2b4
  40a3e2:	test   al,0x20
  40a3e4:	jne    0x40a45a
  40a3e6:	cmp    edx,0x5
  40a3e9:	je     0x40a6fd
  40a3ef:	cmp    edx,0x2
  40a3f2:	je     0x40a71a
  40a3f8:	cmp    edx,0x3
  40a3fb:	je     0x40a5f9
  40a401:	mov    rax,QWORD PTR [rdi+0x18]
  40a405:	test   rax,rax
  40a408:	je     0x40a413
  40a40a:	cmp    BYTE PTR [rax],0x0
  40a40d:	jne    0x40a6c7
  40a413:	movzx  r9d,WORD PTR [rdi+0xe]
  40a418:	mov    rdx,QWORD PTR [rbp+0x30]
  40a41c:	lea    rcx,[rip+0x120cc]        # 0x41c4ef
  40a423:	mov    r8,QWORD PTR [rdi+0x48]
  40a427:	call   0x402b20
  40a42c:	jmp    0x40a2b4
  40a431:	test   BYTE PTR [rbp+0x11],0x8
  40a435:	je     0x40a43f
  40a437:	mov    eax,DWORD PTR [rbp+0x4]
  40a43a:	cmp    DWORD PTR [rbp+0x14],eax
  40a43d:	jb     0x40a485
  40a43f:	call   rsi
  40a441:	lea    rcx,[rax+0x30]
  40a445:	add    rsp,0x38
  40a449:	pop    rbx
  40a44a:	pop    rsi
  40a44b:	pop    rdi
  40a44c:	pop    rbp
  40a44d:	pop    r12
  40a44f:	pop    r13
  40a451:	pop    r14
  40a453:	pop    r15
  40a455:	jmp    0x418618
  40a45a:	mov    r9,QWORD PTR [rdi+0x60]
  40a45e:	mov    rdx,QWORD PTR [rbp+0x30]
  40a462:	lea    rax,[rip+0x10707]        # 0x41ab70
  40a469:	mov    r8,QWORD PTR [rdi+0x48]
  40a46d:	lea    rcx,[rip+0x1205a]        # 0x41c4ce
  40a474:	test   r9,r9
  40a477:	cmove  r9,rax
  40a47b:	call   0x402b20
  40a480:	jmp    0x40a2b4
  40a485:	call   rsi
  40a487:	lea    rcx,[rip+0x11e34]        # 0x41c2c2
  40a48e:	lea    r9,[rax+0x30]
  40a492:	mov    r8d,0x6
  40a498:	mov    edx,0x1
  40a49d:	call   0x4185c8
  40a4a2:	mov    ebx,DWORD PTR [rbp+0x14]
  40a4a5:	cmp    ebx,DWORD PTR [rbp+0x4]
  40a4a8:	jae    0x40a4d7
  40a4aa:	nop    WORD PTR [rax+rax*1+0x0]
  40a4b0:	call   rsi
  40a4b2:	lea    rdx,[rax+0x30]
  40a4b6:	mov    ecx,0x20
  40a4bb:	call   0x4185f8
  40a4c0:	mov    rax,QWORD PTR [rbp+0x8]
  40a4c4:	mov    edx,ebx
  40a4c6:	add    ebx,0x1
  40a4c9:	mov    rcx,QWORD PTR [rax+rdx*8]
  40a4cd:	call   0x403e90
  40a4d2:	cmp    ebx,DWORD PTR [rbp+0x4]
  40a4d5:	jb     0x40a4b0
  40a4d7:	call   rsi
  40a4d9:	lea    rcx,[rip+0x11dd4]        # 0x41c2b4
  40a4e0:	lea    r9,[rax+0x30]
  40a4e4:	mov    r8d,0xd
  40a4ea:	mov    edx,0x1
  40a4ef:	call   0x4185c8
  40a4f4:	jmp    0x40a43f
  40a4f9:	mov    rax,QWORD PTR [rdi+0x18]
  40a4fd:	mov    rdx,QWORD PTR [rbp+0x30]
  40a501:	lea    rcx,[rip+0x11fe7]        # 0x41c4ef
  40a508:	mov    r9d,DWORD PTR [rdi+0x20]
  40a50c:	mov    r8,QWORD PTR [rdi+0x48]
  40a510:	mov    QWORD PTR [rsp+0x28],rax
  40a515:	call   0x402b20
  40a51a:	mov    eax,0xffffffff
  40a51f:	mov    rdx,rdi
  40a522:	mov    ecx,0x3
  40a527:	mov    QWORD PTR [rdi+0x20],rax
  40a52b:	call   QWORD PTR [rdi+0x38]
  40a52e:	mov    r14,QWORD PTR [rdi+0x18]
  40a532:	cmp    BYTE PTR [r14],0x0
  40a536:	je     0x40a6c2
  40a53c:	mov    QWORD PTR [rsp+0x20],0x1
  40a545:	mov    rdx,QWORD PTR [rdi+0x48]
  40a549:	lea    rcx,[rip+0x10ab0]        # 0x41b000
  40a550:	call   0x402b20
  40a555:	mov    r9,QWORD PTR [rip+0x19134]        # 0x423690
  40a55c:	test   r9,r9
  40a55f:	je     0x40a6b0
  40a565:	movzx  eax,BYTE PTR [r14]
  40a569:	cmp    BYTE PTR [r9+rax*1],0x0
  40a56e:	je     0x40a6a5
  40a574:	mov    rdx,r14
  40a577:	nop    WORD PTR [rax+rax*1+0x0]
  40a580:	add    rdx,0x1
  40a584:	movzx  ecx,BYTE PTR [rdx]
  40a587:	cmp    BYTE PTR [r9+rcx*1],0x0
  40a58c:	mov    rax,rcx
  40a58f:	jne    0x40a580
  40a591:	cmp    al,0x7f
  40a593:	lea    r14,[rdx+0x1]
  40a597:	movsx  r15d,al
  40a59b:	ja     0x40a5de
  40a59d:	nop    DWORD PTR [rax]
  40a5a0:	lea    r9,[rip+0x145d9]        # 0x41eb80
  40a5a7:	mov    eax,DWORD PTR [r9+rax*4]
  40a5ab:	test   eax,0x80000
  40a5b0:	je     0x40a630
  40a5b2:	call   rsi
  40a5b4:	mov    rbx,rax
  40a5b7:	mov    ecx,r15d
  40a5ba:	call   QWORD PTR [rip+0x1b338]        # 0x4258f8
  40a5c0:	lea    rdx,[rbx+0x30]
  40a5c4:	mov    ecx,eax
  40a5c6:	call   0x4185f8
  40a5cb:	movzx  eax,BYTE PTR [r14]
  40a5cf:	mov    rdx,r14
  40a5d2:	cmp    al,0x7f
  40a5d4:	lea    r14,[rdx+0x1]
  40a5d8:	movsx  r15d,al
  40a5dc:	jbe    0x40a5a0
  40a5de:	test   r15d,r15d
  40a5e1:	je     0x40a6a0
  40a5e7:	call   rsi
  40a5e9:	lea    rdx,[rax+0x30]
  40a5ed:	mov    ecx,0x5f
  40a5f2:	call   0x4185f8
  40a5f7:	jmp    0x40a5cb
  40a5f9:	mov    eax,DWORD PTR [rdi+0x18]
  40a5fc:	mov    rdx,QWORD PTR [rbp+0x30]
  40a600:	lea    r9,[rip+0x10564]        # 0x41ab6b
  40a607:	mov    r8,QWORD PTR [rdi+0x48]
  40a60b:	lea    rcx,[rip+0x11e53]        # 0x41c465
  40a612:	test   eax,eax
  40a614:	lea    rax,[rip+0x10555]        # 0x41ab70
  40a61b:	cmove  r9,rax
  40a61f:	call   0x402b20
  40a624:	jmp    0x40a2b4
  40a629:	nop    DWORD PTR [rax+0x0]
  40a630:	test   eax,0x100000
  40a635:	je     0x40a650
  40a637:	call   rsi
  40a639:	lea    rdx,[rax+0x30]
  40a63d:	mov    ecx,r15d
  40a640:	call   0x4185f8
  40a645:	jmp    0x40a5cb
  40a647:	nop    WORD PTR [rax+rax*1+0x0]
  40a650:	test   eax,0xc81
  40a655:	je     0x40a5de
  40a657:	mov    rbx,QWORD PTR [rsp+0x20]
  40a65c:	lea    rcx,[rip+0x11ba5]        # 0x41c208
  40a663:	mov    edx,ebx
  40a665:	call   0x402b20
  40a66a:	mov    rax,rbx
  40a66d:	add    rax,rax
  40a670:	cmp    BYTE PTR [r14],0x0
  40a674:	mov    QWORD PTR [rsp+0x20],rax
  40a679:	jne    0x40a545
  40a67f:	mov    rcx,QWORD PTR [rdi+0x18]
  40a683:	call   0x4185e0
  40a688:	mov    rax,QWORD PTR [rsp+0x28]
  40a68d:	mov    QWORD PTR [rdi+0x18],rax
  40a691:	jmp    0x40a2b4
  40a696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6a0:	mov    r14,rdx
  40a6a3:	jmp    0x40a657
  40a6a5:	movzx  eax,al
  40a6a8:	mov    rdx,r14
  40a6ab:	jmp    0x40a5d2
  40a6b0:	mov    ecx,0x22
  40a6b5:	call   0x404060
  40a6ba:	mov    r9,rax
  40a6bd:	jmp    0x40a565
  40a6c2:	mov    rcx,r14
  40a6c5:	jmp    0x40a683
  40a6c7:	mov    rdx,QWORD PTR [rbp+0x30]
  40a6cb:	mov    r8,QWORD PTR [rdi+0x48]
  40a6cf:	lea    rcx,[rip+0x11abf]        # 0x41c195
  40a6d6:	call   0x402b20
  40a6db:	mov    rcx,QWORD PTR [rdi+0x18]
  40a6df:	call   0x403e90
  40a6e4:	mov    rdx,QWORD PTR [rbp+0x30]
  40a6e8:	mov    r8,QWORD PTR [rdi+0x48]
  40a6ec:	lea    rcx,[rip+0x11a93]        # 0x41c186
  40a6f3:	call   0x402b20
  40a6f8:	jmp    0x40a2b4
  40a6fd:	mov    rdx,QWORD PTR [rbp+0x30]
  40a701:	mov    r9d,DWORD PTR [rdi+0x18]
  40a705:	lea    rcx,[rip+0x11de3]        # 0x41c4ef
  40a70c:	mov    r8,QWORD PTR [rdi+0x48]
  40a710:	call   0x402b20
  40a715:	jmp    0x40a2b4
  40a71a:	mov    r8,QWORD PTR [rdi+0x48]
  40a71e:	mov    rdx,QWORD PTR [rbp+0x30]
  40a722:	lea    rcx,[rip+0x11a6c]        # 0x41c195
  40a729:	mov    rbx,QWORD PTR [rdi+0x18]
  40a72d:	call   0x402b20
  40a732:	mov    rdx,rdi
  40a735:	mov    ecx,0x3
  40a73a:	call   QWORD PTR [rdi+0x38]
  40a73d:	mov    rdx,QWORD PTR [rdi+0x18]
  40a741:	lea    rcx,[rip+0x11a8c]        # 0x41c1d4
  40a748:	call   0x402b20
  40a74d:	test   BYTE PTR [rdi+0x10],0x40
  40a751:	je     0x40a75c
  40a753:	mov    rcx,QWORD PTR [rdi+0x18]
  40a757:	call   0x4185e0
  40a75c:	mov    QWORD PTR [rdi+0x18],rbx
  40a760:	mov    r8,QWORD PTR [rdi+0x48]
  40a764:	lea    rcx,[rip+0x11a1b]        # 0x41c186
  40a76b:	mov    rdx,QWORD PTR [rbp+0x30]
  40a76f:	call   0x402b20
  40a774:	jmp    0x40a2b4
  40a779:	nop    DWORD PTR [rax+0x0]
  40a780:	push   rdi
  40a781:	push   rsi
  40a782:	push   rbx
  40a783:	sub    rsp,0x20
  40a787:	mov    rax,QWORD PTR [rcx+0x90]
  40a78e:	mov    rbx,rcx
  40a791:	test   rax,rax
  40a794:	je     0x40a801
  40a796:	mov    rdx,QWORD PTR [rbx]
  40a799:	lea    rdi,[rax+0x8]
  40a79d:	mov    rsi,rbx
  40a7a0:	lea    r9,[rax+0xe8]
  40a7a7:	and    rdi,0xfffffffffffffff8
  40a7ab:	mov    QWORD PTR [rax],rdx
  40a7ae:	mov    rdx,QWORD PTR [rbx+0xe0]
  40a7b5:	mov    QWORD PTR [rax+0xe0],rdx
  40a7bc:	mov    rdx,rax
  40a7bf:	sub    rdx,rdi
  40a7c2:	sub    rsi,rdx
  40a7c5:	add    edx,0xe8
  40a7cb:	shr    edx,0x3
  40a7ce:	mov    ecx,edx
  40a7d0:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a7d3:	mov    rcx,r9
  40a7d6:	movsxd rax,DWORD PTR [rax+0xb0]
  40a7dd:	lea    rdx,[rax+rax*2]
  40a7e1:	lea    r8,[rax+rdx*4]
  40a7e5:	mov    rdx,QWORD PTR [rbx+0x78]
  40a7e9:	shl    r8,0x3
  40a7ed:	call   0x4185a0
  40a7f2:	mov    rcx,rbx
  40a7f5:	add    rsp,0x20
  40a7f9:	pop    rbx
  40a7fa:	pop    rsi
  40a7fb:	pop    rdi
  40a7fc:	jmp    0x404320
  40a801:	movsxd rax,DWORD PTR [rcx+0xb0]
  40a808:	lea    rdx,[rax+rax*2]
  40a80c:	lea    rax,[rax+rdx*4]
  40a810:	lea    rcx,[rax*8+0xe8]
  40a818:	call   0x404550
  40a81d:	mov    QWORD PTR [rbx+0x90],rax
  40a824:	jmp    0x40a796
  40a829:	nop    DWORD PTR [rax+0x0]
  40a830:	push   r14
  40a832:	push   r13
  40a834:	push   r12
  40a836:	push   rbp
  40a837:	push   rdi
  40a838:	push   rsi
  40a839:	push   rbx
  40a83a:	sub    rsp,0x20
  40a83e:	lea    r12,[rcx+0x8]
  40a842:	mov    r14,rcx
  40a845:	mov    rbp,rcx
  40a848:	and    r12,0xfffffffffffffff8
  40a84c:	sub    r14,r12
  40a84f:	lea    r13d,[r14+0xe8]
  40a856:	shr    r13d,0x3
  40a85a:	nop    WORD PTR [rax+rax*1+0x0]
  40a860:	mov    rbx,QWORD PTR [rbp+0x78]
  40a864:	mov    esi,DWORD PTR [rbp+0xb0]
  40a86a:	jmp    0x40a896
  40a86c:	nop    DWORD PTR [rax+0x0]
  40a870:	cmp    eax,0x6
  40a873:	jne    0x40a883
  40a875:	mov    rcx,QWORD PTR [rbx+0x20]
  40a879:	test   rcx,rcx
  40a87c:	je     0x40a883
  40a87e:	call   0x402650
  40a883:	sub    esi,0x1
  40a886:	mov    QWORD PTR [rbx+0x20],0x0
  40a88e:	add    rbx,0x68
  40a892:	test   esi,esi
  40a894:	jle    0x40a8f0
  40a896:	mov    edx,DWORD PTR [rbx+0x10]
  40a899:	test   dl,0x40
  40a89c:	jne    0x40a8d4
  40a89e:	mov    eax,edx
  40a8a0:	and    eax,0xf000
  40a8a5:	shr    eax,0xc
  40a8a8:	cmp    eax,0x1
  40a8ab:	jne    0x40a870
  40a8ad:	and    dh,0x4
  40a8b0:	je     0x40a883
  40a8b2:	cmp    QWORD PTR [rbx+0x20],0x0
  40a8b7:	je     0x40a883
  40a8b9:	lea    rax,[rip+0x1074d]        # 0x41b00d
  40a8c0:	cmp    rbp,0xf
  40a8c4:	mov    QWORD PTR [rbx+0x18],rax
  40a8c8:	jbe    0x40a883
  40a8ca:	mov    rcx,rbx
  40a8cd:	call   0x404e80
  40a8d2:	jmp    0x40a883
  40a8d4:	mov    rcx,QWORD PTR [rbx+0x18]
  40a8d8:	call   0x4185e0
  40a8dd:	mov    edx,DWORD PTR [rbx+0x10]
  40a8e0:	mov    QWORD PTR [rbx+0x18],0x0
  40a8e8:	and    edx,0xffffffbf
  40a8eb:	mov    DWORD PTR [rbx+0x10],edx
  40a8ee:	jmp    0x40a89e
  40a8f0:	mov    rax,QWORD PTR [rbp+0x90]
  40a8f7:	test   rax,rax
  40a8fa:	je     0x40a95f
  40a8fc:	mov    rdx,QWORD PTR [rax]
  40a8ff:	mov    rsi,rax
  40a902:	mov    rdi,r12
  40a905:	sub    rsi,r14
  40a908:	mov    QWORD PTR [rbp+0x0],rdx
  40a90c:	mov    rcx,QWORD PTR [rax+0xe0]
  40a913:	lea    rdx,[rax+0xe8]
  40a91a:	mov    QWORD PTR [rbp+0xe0],rcx
  40a921:	mov    ecx,r13d
  40a924:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a927:	movsxd rax,DWORD PTR [rax+0xb0]
  40a92e:	mov    rcx,QWORD PTR [rbp+0x78]
  40a932:	lea    r8,[rax+rax*2]
  40a936:	lea    r8,[rax+r8*4]
  40a93a:	shl    r8,0x3
  40a93e:	call   0x4185a0
  40a943:	mov    rcx,QWORD PTR [rbp+0x90]
  40a94a:	call   0x4185e0
  40a94f:	mov    QWORD PTR [rbp+0x90],0x0
  40a95a:	jmp    0x40a860
  40a95f:	add    rsp,0x20
  40a963:	pop    rbx
  40a964:	pop    rsi
  40a965:	pop    rdi
  40a966:	pop    rbp
  40a967:	pop    r12
  40a969:	pop    r13
  40a96b:	pop    r14
  40a96d:	ret    
  40a96e:	xchg   ax,ax
  40a970:	push   rbp
  40a971:	push   rdi
  40a972:	push   rsi
  40a973:	push   rbx
  40a974:	sub    rsp,0x28
  40a978:	mov    rbp,QWORD PTR [rcx+0x90]
  40a97f:	mov    rbx,rcx
  40a982:	test   rbp,rbp
  40a985:	je     0x40aa0b
  40a98b:	mov    QWORD PTR [rcx+0x90],0x0
  40a996:	lea    rdi,[rbx+0x8]
  40a99a:	mov    rsi,rbp
  40a99d:	call   0x40a830
  40a9a2:	mov    rax,QWORD PTR [rbp+0x0]
  40a9a6:	and    rdi,0xfffffffffffffff8
  40a9aa:	lea    rdx,[rbp+0xe8]
  40a9b1:	mov    QWORD PTR [rbx],rax
  40a9b4:	mov    rax,QWORD PTR [rbp+0xe0]
  40a9bb:	mov    QWORD PTR [rbx+0xe0],rax
  40a9c2:	mov    rax,rbx
  40a9c5:	sub    rax,rdi
  40a9c8:	sub    rsi,rax
  40a9cb:	add    eax,0xe8
  40a9d0:	shr    eax,0x3
  40a9d3:	mov    ecx,eax
  40a9d5:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a9d8:	movsxd rax,DWORD PTR [rbp+0xb0]
  40a9df:	mov    rcx,QWORD PTR [rbx+0x78]
  40a9e3:	lea    r8,[rax+rax*2]
  40a9e7:	lea    r8,[rax+r8*4]
  40a9eb:	shl    r8,0x3
  40a9ef:	call   0x4185a0
  40a9f4:	mov    rcx,rbx
  40a9f7:	mov    QWORD PTR [rbx+0x90],rbp
  40a9fe:	add    rsp,0x28
  40aa02:	pop    rbx
  40aa03:	pop    rsi
  40aa04:	pop    rdi
  40aa05:	pop    rbp
  40aa06:	jmp    0x404320
  40aa0b:	mov    rsi,QWORD PTR [rcx+0x28]
  40aa0f:	test   rsi,rsi
  40aa12:	je     0x40aa3a
  40aa14:	mov    rbx,QWORD PTR [rip+0xf18d]        # 0x419ba8
  40aa1b:	call   QWORD PTR [rip+0x1acb7]        # 0x4256d8
  40aa21:	lea    rcx,[rax+0x60]
  40aa25:	mov    r8,rsi
  40aa28:	mov    rdx,rbx
  40aa2b:	call   0x402710
  40aa30:	mov    ecx,0x1
  40aa35:	call   0x402b50
  40aa3a:	mov    rsi,QWORD PTR [rcx+0x30]
  40aa3e:	lea    rax,[rip+0x12f4a]        # 0x41d98f
  40aa45:	test   rsi,rsi
  40aa48:	cmove  rsi,rax
  40aa4c:	jmp    0x40aa14
  40aa4e:	xchg   ax,ax
  40aa50:	push   r15
  40aa52:	push   r14
  40aa54:	push   r13
  40aa56:	push   r12
  40aa58:	push   rbp
  40aa59:	push   rdi
  40aa5a:	push   rsi
  40aa5b:	push   rbx
  40aa5c:	sub    rsp,0x58
  40aa60:	lea    rdi,[rsp+0x48]
  40aa65:	mov    r13,rcx
  40aa68:	mov    DWORD PTR [rsp+0x48],0x0
  40aa70:	mov    rdx,rdi
  40aa73:	call   0x405050
  40aa78:	test   rax,rax
  40aa7b:	mov    rbx,rax
  40aa7e:	je     0x40ab59
  40aa84:	lea    rdx,[rip+0x1052d]        # 0x41afb8
  40aa8b:	mov    rcx,rax
  40aa8e:	call   0x418608
  40aa93:	test   rax,rax
  40aa96:	mov    rsi,rax
  40aa99:	je     0x40ae03
  40aa9f:	mov    edx,DWORD PTR [rsp+0x48]
  40aaa3:	test   edx,edx
  40aaa5:	jne    0x40abb0
  40aaab:	lea    rcx,[rip+0x1055e]        # 0x41b010
  40aab2:	mov    r9,rsi
  40aab5:	mov    r8d,0x3
  40aabb:	mov    edx,0x1
  40aac0:	call   0x4185c8
  40aac5:	mov    rbx,QWORD PTR [r13+0x60]
  40aac9:	mov    edx,0xa
  40aace:	mov    rcx,rbx
  40aad1:	call   0x418560
  40aad6:	test   rax,rax
  40aad9:	je     0x40aaf2
  40aadb:	lea    r8,[rax+0x1]
  40aadf:	mov    r9,rsi
  40aae2:	mov    edx,0x1
  40aae7:	mov    rcx,rbx
  40aaea:	sub    r8,rbx
  40aaed:	call   0x4185c8
  40aaf2:	xor    ecx,ecx
  40aaf4:	call   QWORD PTR [rip+0x1ac96]        # 0x425790
  40aafa:	mov    rcx,rdi
  40aafd:	mov    QWORD PTR [rsp+0x48],rax
  40ab02:	call   QWORD PTR [rip+0x1ac10]        # 0x425718
  40ab08:	lea    rdx,[rip+0x114d1]        # 0x41bfe0
  40ab0f:	mov    r8,rax
  40ab12:	mov    rcx,rsi
  40ab15:	call   0x402710
  40ab1a:	mov    r15d,DWORD PTR [r13+0xb4]
  40ab21:	mov    rbx,QWORD PTR [r13+0x78]
  40ab25:	mov    eax,DWORD PTR [rbx+0x10]
  40ab28:	test   al,0xf
  40ab2a:	je     0x40ab43
  40ab2c:	test   eax,0x280100
  40ab31:	jne    0x40ab43
  40ab33:	movzx  edx,WORD PTR [rbx+0x8]
  40ab37:	cmp    dx,0x8000
  40ab3c:	je     0x40ab70
  40ab3e:	cmp    dx,WORD PTR [rbx]
  40ab41:	je     0x40ab70
  40ab43:	sub    r15d,0x1
  40ab47:	add    rbx,0x68
  40ab4b:	test   r15d,r15d
  40ab4e:	jg     0x40ab25
  40ab50:	mov    rcx,rsi
  40ab53:	call   0x418628
  40ab58:	nop
  40ab59:	add    rsp,0x58
  40ab5d:	pop    rbx
  40ab5e:	pop    rsi
  40ab5f:	pop    rdi
  40ab60:	pop    rbp
  40ab61:	pop    r12
  40ab63:	pop    r13
  40ab65:	pop    r14
  40ab67:	pop    r15
  40ab69:	ret    
  40ab6a:	nop    WORD PTR [rax+rax*1+0x0]
  40ab70:	test   al,0x10
  40ab72:	mov    rdi,rbx
  40ab75:	je     0x40ab8b
  40ab77:	movzx  edx,WORD PTR [rbx+0x4]
  40ab7b:	lea    rcx,[rdx+rdx*2]
  40ab7f:	lea    rcx,[rdx+rcx*4]
  40ab83:	mov    rdx,QWORD PTR [r13+0x78]
  40ab87:	lea    rdi,[rdx+rcx*8]
  40ab8b:	and    eax,0xf000
  40ab90:	shr    eax,0xc
  40ab93:	cmp    eax,0x7
  40ab96:	ja     0x40ab43
  40ab98:	lea    rcx,[rip+0x10479]        # 0x41b018
  40ab9f:	movsxd rax,DWORD PTR [rcx+rax*4]
  40aba3:	add    rax,rcx
  40aba6:	jmp    rax
  40aba8:	nop    DWORD PTR [rax+rax*1+0x0]
  40abb0:	mov    rcx,rbx
  40abb3:	call   0x4185e0
  40abb8:	jmp    0x40aaab
  40abbd:	nop    DWORD PTR [rax]
  40abc0:	mov    r12,QWORD PTR [rdi+0x20]
  40abc4:	test   r12,r12
  40abc7:	je     0x40ab43
  40abcd:	mov    eax,DWORD PTR [r12]
  40abd1:	add    r12,0x8
  40abd5:	test   eax,eax
  40abd7:	jle    0x40ab43
  40abdd:	sub    eax,0x1
  40abe0:	lea    rax,[r12+rax*8+0x8]
  40abe5:	mov    QWORD PTR [rsp+0x38],rax
  40abea:	nop    WORD PTR [rax+rax*1+0x0]
  40abf0:	add    r12,0x8
  40abf4:	mov    rbp,QWORD PTR [r12-0x8]
  40abf9:	xor    edx,edx
  40abfb:	mov    rcx,rbp
  40abfe:	call   0x4073a0
  40ac03:	test   rax,rax
  40ac06:	mov    r14,rax
  40ac09:	je     0x40ac59
  40ac0b:	mov    r8,QWORD PTR [rdi+0x50]
  40ac0f:	lea    rdx,[rip+0x1151b]        # 0x41c131
  40ac16:	mov    rcx,rsi
  40ac19:	call   0x402710
  40ac1e:	xchg   ax,ax
  40ac20:	mov    r9,r14
  40ac23:	mov    r8,rdi
  40ac26:	mov    edx,0x1
  40ac2b:	mov    rcx,rsi
  40ac2e:	call   0x403120
  40ac33:	mov    rdx,r14
  40ac36:	mov    rcx,rbp
  40ac39:	call   0x4074f0
  40ac3e:	test   rax,rax
  40ac41:	mov    r14,rax
  40ac44:	jne    0x40ac20
  40ac46:	mov    r8,QWORD PTR [rdi+0x50]
  40ac4a:	lea    rdx,[rip+0xff25]        # 0x41ab76
  40ac51:	mov    rcx,rsi
  40ac54:	call   0x402710
  40ac59:	cmp    r12,QWORD PTR [rsp+0x38]
  40ac5e:	jne    0x40abf0
  40ac60:	jmp    0x40ab43
  40ac65:	mov    r8,QWORD PTR [rdi+0x20]
  40ac69:	test   r8,r8
  40ac6c:	je     0x40add8
  40ac72:	mov    rdx,rdi
  40ac75:	mov    rcx,rsi
  40ac78:	call   0x4029b0
  40ac7d:	jmp    0x40ab43
  40ac82:	test   BYTE PTR [rdi+0x10],0x20
  40ac86:	mov    r8,QWORD PTR [rbx+0x50]
  40ac8a:	mov    rax,r8
  40ac8d:	je     0x40ac93
  40ac8f:	mov    rax,QWORD PTR [rbx+0x58]
  40ac93:	test   rax,rax
  40ac96:	lea    rdx,[rip+0x10377]        # 0x41b014
  40ac9d:	mov    rcx,rsi
  40aca0:	cmovne r8,rax
  40aca4:	call   0x402710
  40aca9:	jmp    0x40ab43
  40acae:	xchg   ax,ax
  40acb0:	mov    eax,DWORD PTR [rdi+0x10]
  40acb3:	test   ah,0x4
  40acb6:	je     0x40ae76
  40acbc:	mov    rbp,QWORD PTR [rdi+0x20]
  40acc0:	mov    edx,DWORD PTR [rbp+0x0]
  40acc3:	add    rbp,0x8
  40acc7:	cmp    edx,0x1
  40acca:	jle    0x40ae8a
  40acd0:	and    eax,0xffffffdf
  40acd3:	mov    DWORD PTR [rdi+0x10],eax
  40acd6:	lea    eax,[rdx-0x1]
  40acd9:	lea    r12,[rbp+rax*8+0x8]
  40acde:	xchg   ax,ax
  40ace0:	add    rbp,0x8
  40ace4:	mov    r8,QWORD PTR [rbp-0x8]
  40ace8:	mov    rdx,rdi
  40aceb:	mov    rcx,rsi
  40acee:	call   0x4029b0
  40acf3:	cmp    rbp,r12
  40acf6:	jne    0x40ace0
  40acf8:	jmp    0x40ab43
  40acfd:	nop    DWORD PTR [rax]
  40ad00:	mov    rbp,QWORD PTR [rdi+0x18]
  40ad04:	mov    rdx,rdi
  40ad07:	mov    ecx,0x3
  40ad0c:	call   QWORD PTR [rdi+0x38]
  40ad0f:	mov    r8,QWORD PTR [rdi+0x18]
  40ad13:	mov    rdx,rdi
  40ad16:	mov    rcx,rsi
  40ad19:	call   0x4029b0
  40ad1e:	mov    QWORD PTR [rdi+0x18],rbp
  40ad22:	jmp    0x40ab43
  40ad27:	nop    WORD PTR [rax+rax*1+0x0]
  40ad30:	mov    eax,DWORD PTR [rdi+0x18]
  40ad33:	lea    r8,[rip+0xfe31]        # 0x41ab6b
  40ad3a:	mov    rdx,rdi
  40ad3d:	mov    rcx,rsi
  40ad40:	test   eax,eax
  40ad42:	lea    rax,[rip+0xfe27]        # 0x41ab70
  40ad49:	cmove  r8,rax
  40ad4d:	call   0x4029b0
  40ad52:	jmp    0x40ab43
  40ad57:	nop    WORD PTR [rax+rax*1+0x0]
  40ad60:	mov    rdx,rdi
  40ad63:	mov    rbp,QWORD PTR [rdi+0x18]
  40ad67:	mov    ecx,0x3
  40ad6c:	call   QWORD PTR [rdi+0x38]
  40ad6f:	mov    r12,QWORD PTR [rdi+0x18]
  40ad73:	mov    QWORD PTR [rdi+0x18],rbp
  40ad77:	mov    rcx,r12
  40ad7a:	call   0x418538
  40ad7f:	lea    rcx,[rax+0x3]
  40ad83:	mov    r14,rax
  40ad86:	call   0x404550
  40ad8b:	lea    r8,[r14+0x1]
  40ad8f:	lea    rcx,[rax+0x1]
  40ad93:	mov    rbp,rax
  40ad96:	mov    rdx,r12
  40ad99:	mov    BYTE PTR [rax],0x3d
  40ad9c:	call   0x4185a0
  40ada1:	mov    r8,rbp
  40ada4:	mov    rdx,rdi
  40ada7:	mov    rcx,rsi
  40adaa:	call   0x4029b0
  40adaf:	mov    rcx,rbp
  40adb2:	call   0x4185e0
  40adb7:	mov    rcx,r12
  40adba:	call   0x4185e0
  40adbf:	jmp    0x40ab43
  40adc4:	movsxd r8,DWORD PTR [rdi+0x18]
  40adc8:	mov    rdx,rdi
  40adcb:	mov    rcx,rsi
  40adce:	call   0x4029b0
  40add3:	jmp    0x40ab43
  40add8:	cmp    DWORD PTR [r13+0x0],0x1ffff
  40ade0:	jle    0x40ab43
  40ade6:	movzx  edx,WORD PTR [rdi]
  40ade9:	mov    rax,QWORD PTR [r13+0xc8]
  40adf0:	mov    r8,QWORD PTR [rdi+0x18]
  40adf4:	cmp    QWORD PTR [rax+rdx*8],r8
  40adf8:	jne    0x40ac72
  40adfe:	jmp    0x40ab43
  40ae03:	mov    rbp,QWORD PTR [r13+0x28]
  40ae07:	mov    rdi,QWORD PTR [rip+0xee12]        # 0x419c20
  40ae0e:	mov    rsi,QWORD PTR [rip+0x1a8c3]        # 0x4256d8
  40ae15:	call   rsi
  40ae17:	lea    rcx,[rax+0x60]
  40ae1b:	mov    r8,rbp
  40ae1e:	mov    rdx,rdi
  40ae21:	call   0x402710
  40ae26:	mov    rdi,QWORD PTR [rip+0x1a8f3]        # 0x425720
  40ae2d:	call   rdi
  40ae2f:	mov    ecx,DWORD PTR [rax]
  40ae31:	call   0x418548
  40ae36:	mov    r12,rax
  40ae39:	call   rdi
  40ae3b:	mov    rdi,QWORD PTR [rip+0xed46]        # 0x419b88
  40ae42:	mov    ebp,DWORD PTR [rax]
  40ae44:	call   rsi
  40ae46:	lea    rcx,[rax+0x60]
  40ae4a:	mov    QWORD PTR [rsp+0x20],rbx
  40ae4f:	mov    r9,r12
  40ae52:	mov    r8d,ebp
  40ae55:	mov    rdx,rdi
  40ae58:	call   0x402710
  40ae5d:	mov    ecx,DWORD PTR [rsp+0x48]
  40ae61:	test   ecx,ecx
  40ae63:	je     0x40ab59
  40ae69:	mov    rcx,rbx
  40ae6c:	call   0x4185e0
  40ae71:	jmp    0x40ab59
  40ae76:	mov    r8,QWORD PTR [rdi+0x18]
  40ae7a:	mov    rdx,rdi
  40ae7d:	mov    rcx,rsi
  40ae80:	call   0x4029b0
  40ae85:	jmp    0x40ab43
  40ae8a:	test   edx,edx
  40ae8c:	jg     0x40acd6
  40ae92:	jmp    0x40ab43
  40ae97:	nop    WORD PTR [rax+rax*1+0x0]
  40aea0:	cmp    rcx,0xf
  40aea4:	jbe    0x40aeb3
  40aea6:	test   rdx,rdx
  40aea9:	je     0x40aeb3
  40aeab:	mov    rcx,rdx
  40aeae:	jmp    0x404e80
  40aeb3:	repz ret 
  40aeb5:	nop
  40aeb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aec0:	push   rbx
  40aec1:	sub    rsp,0x20
  40aec5:	cmp    rcx,0xf
  40aec9:	jbe    0x40af00
  40aecb:	test   rdx,rdx
  40aece:	je     0x40af00
  40aed0:	test   BYTE PTR [rdx+0x10],0x8
  40aed4:	jne    0x40af00
  40aed6:	mov    rcx,QWORD PTR [rdx+0x18]
  40aeda:	test   rcx,rcx
  40aedd:	je     0x40af00
  40aedf:	mov    rbx,rdx
  40aee2:	call   0x4042c0
  40aee7:	lea    rcx,[rbx+0x20]
  40aeeb:	mov    rdx,rax
  40aeee:	add    rsp,0x20
  40aef2:	pop    rbx
  40aef3:	jmp    0x4045a0
  40aef8:	nop    DWORD PTR [rax+rax*1+0x0]
  40af00:	add    rsp,0x20
  40af04:	pop    rbx
  40af05:	ret    
  40af06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af10:	push   rbx
  40af11:	test   r8d,r8d
  40af14:	jle    0x40af5a
  40af16:	lea    ebx,[r8-0x1]
  40af1a:	xor    r8d,r8d
  40af1d:	add    rbx,0x1
  40af21:	jmp    0x40af2c
  40af23:	add    r8,0x1
  40af27:	cmp    r8,rbx
  40af2a:	je     0x40af5a
  40af2c:	movzx  r10d,BYTE PTR [rcx+r8*1]
  40af31:	movzx  r9d,BYTE PTR [rdx+r8*1]
  40af36:	cmp    r10b,r9b
  40af39:	je     0x40af55
  40af3b:	lea    r11,[rip+0xe6be]        # 0x419600
  40af42:	movzx  eax,r10b
  40af46:	movzx  eax,BYTE PTR [r11+rax*1]
  40af4b:	movzx  r9d,BYTE PTR [r11+r9*1]
  40af50:	sub    eax,r9d
  40af53:	jne    0x40af5c
  40af55:	test   r10b,r10b
  40af58:	jne    0x40af23
  40af5a:	xor    eax,eax
  40af5c:	pop    rbx
  40af5d:	ret    
  40af5e:	xchg   ax,ax
  40af60:	push   r15
  40af62:	push   r14
  40af64:	push   r13
  40af66:	push   r12
  40af68:	push   rbp
  40af69:	push   rdi
  40af6a:	push   rsi
  40af6b:	push   rbx
  40af6c:	sub    rsp,0xd8
  40af73:	mov    rbx,rdx
  40af76:	lea    rdx,[rdx+0x80]
  40af7d:	mov    QWORD PTR [rsp+0x120],rcx
  40af85:	mov    QWORD PTR [rsp+0x130],r8
  40af8d:	mov    r12,rbx
  40af90:	mov    esi,r12d
  40af93:	add    r12,0x1
  40af97:	movzx  eax,BYTE PTR [r12-0x1]
  40af9d:	sub    esi,ebx
  40af9f:	test   al,al
  40afa1:	je     0x40b200
  40afa7:	cmp    al,0x3d
  40afa9:	jne    0x40b180
  40afaf:	lea    r9,[rsp+0x50]
  40afb4:	movsxd rdi,esi
  40afb7:	mov    rdx,rbx
  40afba:	mov    r8,rdi
  40afbd:	mov    rcx,r9
  40afc0:	call   0x4185a0
  40afc5:	mov    BYTE PTR [rsp+rdi*1+0x50],0x0
  40afca:	mov    rbx,rax
  40afcd:	cmp    esi,0x1
  40afd0:	jle    0x40b190
  40afd6:	mov    rax,QWORD PTR [rsp+0x120]
  40afde:	mov    rcx,QWORD PTR [rsp+0x120]
  40afe6:	xor    r15d,r15d
  40afe9:	mov    QWORD PTR [rsp+0x40],r12
  40afee:	mov    BYTE PTR [rsp+0x3f],0x0
  40aff3:	mov    r12d,r15d
  40aff6:	mov    DWORD PTR [rsp+0x38],0x0
  40affe:	xor    ebp,ebp
  40b000:	mov    rax,QWORD PTR [rax+0x78]
  40b004:	mov    edi,DWORD PTR [rcx+0xb0]
  40b00a:	mov    r14,rax
  40b00d:	mov    QWORD PTR [rsp+0x48],rax
  40b012:	movsxd rax,esi
  40b015:	mov    r15,r14
  40b018:	mov    r13,rax
  40b01b:	jmp    0x40b034
  40b01d:	nop    DWORD PTR [rax]
  40b020:	cmp    eax,0x80100
  40b025:	je     0x40b048
  40b027:	add    r12d,0x1
  40b02b:	add    r15,0x68
  40b02f:	cmp    edi,r12d
  40b032:	jle    0x40b07e
  40b034:	mov    r14,QWORD PTR [r15+0x50]
  40b038:	test   r14,r14
  40b03b:	je     0x40b027
  40b03d:	mov    eax,DWORD PTR [r15+0x10]
  40b041:	test   eax,0x280000
  40b046:	jne    0x40b020
  40b048:	mov    r8d,esi
  40b04b:	mov    rdx,r14
  40b04e:	mov    rcx,rbx
  40b051:	call   0x40af10
  40b056:	test   eax,eax
  40b058:	jne    0x40b1c0
  40b05e:	cmp    BYTE PTR [r14+r13*1],0x0
  40b063:	je     0x40b244
  40b069:	mov    DWORD PTR [rsp+0x38],r12d
  40b06e:	add    r12d,0x1
  40b072:	add    ebp,0x1
  40b075:	add    r15,0x68
  40b079:	cmp    edi,r12d
  40b07c:	jg     0x40b034
  40b07e:	test   ebp,ebp
  40b080:	mov    r12,QWORD PTR [rsp+0x40]
  40b085:	je     0x40b210
  40b08b:	cmp    ebp,0x1
  40b08e:	je     0x40b310
  40b094:	mov    rax,QWORD PTR [rsp+0x120]
  40b09c:	test   BYTE PTR [rax+0x10],0x4
  40b0a0:	je     0x40b1a2
  40b0a6:	mov    r12,QWORD PTR [rax+0x20]
  40b0aa:	mov    rdi,QWORD PTR [rip+0xea37]        # 0x419ae8
  40b0b1:	mov    rsi,QWORD PTR [rip+0x1a620]        # 0x4256d8
  40b0b8:	call   rsi
  40b0ba:	lea    rcx,[rax+0x60]
  40b0be:	mov    DWORD PTR [rsp+0x20],ebp
  40b0c2:	mov    r9,rbx
  40b0c5:	mov    r8,r12
  40b0c8:	mov    rdx,rdi
  40b0cb:	call   0x402710
  40b0d0:	cmp    ebp,0x4
  40b0d3:	jg     0x40b3a2
  40b0d9:	mov    rcx,rbx
  40b0dc:	lea    rbp,[rip+0xfee3]        # 0x41afc6
  40b0e3:	call   0x418538
  40b0e8:	mov    r12d,eax
  40b0eb:	mov    rax,QWORD PTR [rsp+0x120]
  40b0f3:	test   BYTE PTR [rax+0x10],0x3
  40b0f7:	lea    rax,[rip+0x1100b]        # 0x41c109
  40b0fe:	cmovne rbp,rax
  40b102:	mov    rax,QWORD PTR [rsp+0x120]
  40b10a:	xor    r13d,r13d
  40b10d:	mov    rdi,QWORD PTR [rax+0x78]
  40b111:	call   rsi
  40b113:	mov    rcx,QWORD PTR [rip+0xe9c6]        # 0x419ae0
  40b11a:	lea    rdx,[rax+0x60]
  40b11e:	call   0x4185f0
  40b123:	mov    r14,QWORD PTR [rdi+0x50]
  40b127:	test   r14,r14
  40b12a:	je     0x40b161
  40b12c:	mov    r8d,r12d
  40b12f:	mov    rdx,r14
  40b132:	mov    rcx,rbx
  40b135:	call   0x40af10
  40b13a:	test   eax,eax
  40b13c:	je     0x40b3bf
  40b142:	mov    r14,QWORD PTR [rdi+0x58]
  40b146:	test   r14,r14
  40b149:	je     0x40b161
  40b14b:	mov    r8d,r12d
  40b14e:	mov    rdx,r14
  40b151:	mov    rcx,rbx
  40b154:	call   0x40af10
  40b159:	test   eax,eax
  40b15b:	je     0x40b3bf
  40b161:	mov    rax,QWORD PTR [rsp+0x120]
  40b169:	add    rdi,0x68
  40b16d:	add    r13d,0x1
  40b171:	cmp    r13d,DWORD PTR [rax+0xb0]
  40b178:	jl     0x40b123
  40b17a:	jmp    0x40b3a2
  40b17f:	nop
  40b180:	cmp    r12,rdx
  40b183:	jne    0x40af90
  40b189:	nop    DWORD PTR [rax+0x0]
  40b190:	mov    rax,QWORD PTR [rsp+0x120]
  40b198:	test   BYTE PTR [rax+0x10],0x4
  40b19c:	jne    0x40b37f
  40b1a2:	mov    eax,0xffffffff
  40b1a7:	add    rsp,0xd8
  40b1ae:	pop    rbx
  40b1af:	pop    rsi
  40b1b0:	pop    rdi
  40b1b1:	pop    rbp
  40b1b2:	pop    r12
  40b1b4:	pop    r13
  40b1b6:	pop    r14
  40b1b8:	pop    r15
  40b1ba:	ret    
  40b1bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1c0:	mov    r14,QWORD PTR [r15+0x58]
  40b1c4:	test   r14,r14
  40b1c7:	je     0x40b027
  40b1cd:	mov    r8d,esi
  40b1d0:	mov    rdx,r14
  40b1d3:	mov    rcx,rbx
  40b1d6:	call   0x40af10
  40b1db:	test   eax,eax
  40b1dd:	jne    0x40b027
  40b1e3:	cmp    BYTE PTR [r14+r13*1],0x0
  40b1e8:	je     0x40b31a
  40b1ee:	mov    BYTE PTR [rsp+0x3f],0x1
  40b1f3:	jmp    0x40b069
  40b1f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b200:	xor    r12d,r12d
  40b203:	jmp    0x40afcd
  40b208:	nop    DWORD PTR [rax+rax*1+0x0]
  40b210:	mov    rax,QWORD PTR [rsp+0x120]
  40b218:	test   r12,r12
  40b21b:	mov    eax,DWORD PTR [rax+0x10]
  40b21e:	je     0x40b32c
  40b224:	test   al,0x4
  40b226:	je     0x40b1a2
  40b22c:	mov    rax,QWORD PTR [rsp+0x120]
  40b234:	mov    rsi,QWORD PTR [rip+0xe8fd]        # 0x419b38
  40b23b:	mov    rdi,QWORD PTR [rax+0x20]
  40b23f:	jmp    0x40b38a
  40b244:	mov    r15d,r12d
  40b247:	mov    r12,QWORD PTR [rsp+0x40]
  40b24c:	movsxd r10,r15d
  40b24f:	mov    rcx,QWORD PTR [rsp+0x48]
  40b254:	lea    rax,[r10+r10*2]
  40b258:	lea    rax,[r10+rax*4]
  40b25c:	lea    rbx,[rcx+rax*8]
  40b260:	test   DWORD PTR [rbx+0x10],0x280000
  40b267:	je     0x40b2e0
  40b269:	mov    rax,QWORD PTR [rsp+0x120]
  40b271:	test   BYTE PTR [rax+0x10],0x4
  40b275:	je     0x40b1a2
  40b27b:	mov    r12,QWORD PTR [rbx+0x50]
  40b27f:	mov    rbp,QWORD PTR [rax+0x28]
  40b283:	mov    rdi,QWORD PTR [rip+0xe896]        # 0x419b20
  40b28a:	mov    rsi,QWORD PTR [rip+0x1a447]        # 0x4256d8
  40b291:	call   rsi
  40b293:	lea    rcx,[rax+0x60]
  40b297:	mov    r9,r12
  40b29a:	mov    r8,rbp
  40b29d:	mov    rdx,rdi
  40b2a0:	call   0x402710
  40b2a5:	mov    rbx,QWORD PTR [rbx+0x40]
  40b2a9:	test   rbx,rbx
  40b2ac:	je     0x40b2c3
  40b2ae:	call   rsi
  40b2b0:	lea    rdx,[rip+0x10f22]        # 0x41c1d9
  40b2b7:	lea    rcx,[rax+0x60]
  40b2bb:	mov    r8,rbx
  40b2be:	call   0x402710
  40b2c3:	call   rsi
  40b2c5:	lea    rdx,[rax+0x60]
  40b2c9:	mov    ecx,0xa
  40b2ce:	call   0x4185f8
  40b2d3:	jmp    0x40b3a2
  40b2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b2e0:	cmp    BYTE PTR [rsp+0x3f],0x0
  40b2e5:	je     0x40b2f3
  40b2e7:	mov    rax,QWORD PTR [rsp+0x130]
  40b2ef:	or     DWORD PTR [rax+0x10],0x20
  40b2f3:	mov    rax,QWORD PTR [rsp+0x130]
  40b2fb:	mov    QWORD PTR [rax],rbx
  40b2fe:	mov    QWORD PTR [rax+0x8],r12
  40b302:	mov    DWORD PTR [rax+0x14],0x2
  40b309:	xor    eax,eax
  40b30b:	jmp    0x40b1a7
  40b310:	mov    r15d,DWORD PTR [rsp+0x38]
  40b315:	jmp    0x40b24c
  40b31a:	mov    r15d,r12d
  40b31d:	mov    BYTE PTR [rsp+0x3f],0x1
  40b322:	mov    r12,QWORD PTR [rsp+0x40]
  40b327:	jmp    0x40b24c
  40b32c:	test   al,0x3
  40b32e:	jne    0x40b224
  40b334:	mov    rcx,QWORD PTR [rsp+0x120]
  40b33c:	movzx  edx,WORD PTR [rcx+0xae]
  40b343:	cmp    dx,0x8000
  40b348:	je     0x40b224
  40b34e:	movzx  eax,dx
  40b351:	mov    rcx,QWORD PTR [rsp+0x48]
  40b356:	lea    rdx,[rax+rax*2]
  40b35a:	lea    rax,[rax+rdx*4]
  40b35e:	lea    rax,[rcx+rax*8]
  40b362:	mov    rcx,QWORD PTR [rsp+0x130]
  40b36a:	mov    QWORD PTR [rcx],rax
  40b36d:	mov    QWORD PTR [rcx+0x8],rbx
  40b371:	xor    eax,eax
  40b373:	mov    DWORD PTR [rcx+0x14],0x3
  40b37a:	jmp    0x40b1a7
  40b37f:	mov    rdi,QWORD PTR [rax+0x28]
  40b383:	mov    rsi,QWORD PTR [rip+0xe7ce]        # 0x419b58
  40b38a:	call   QWORD PTR [rip+0x1a348]        # 0x4256d8
  40b390:	lea    rcx,[rax+0x60]
  40b394:	mov    r9,rbx
  40b397:	mov    r8,rdi
  40b39a:	mov    rdx,rsi
  40b39d:	call   0x402710
  40b3a2:	mov    rcx,QWORD PTR [rsp+0x120]
  40b3aa:	mov    edx,0x1
  40b3af:	call   QWORD PTR [rcx+0x98]
  40b3b5:	mov    ecx,0x1
  40b3ba:	call   0x4186b8
  40b3bf:	call   rsi
  40b3c1:	lea    rdx,[rip+0x10bbc]        # 0x41bf84
  40b3c8:	lea    rcx,[rax+0x60]
  40b3cc:	mov    r9,r14
  40b3cf:	mov    r8,rbp
  40b3d2:	call   0x402710
  40b3d7:	jmp    0x40b161
  40b3dc:	nop    DWORD PTR [rax+0x0]
  40b3e0:	push   rsi
  40b3e1:	push   rbx
  40b3e2:	sub    rsp,0x38
  40b3e6:	mov    rax,QWORD PTR [rcx+0x18]
  40b3ea:	test   rax,rax
  40b3ed:	je     0x40b3fa
  40b3ef:	movzx  eax,BYTE PTR [rax]
  40b3f2:	test   al,al
  40b3f4:	jne    0x40b4c0
  40b3fa:	mov    eax,DWORD PTR [rcx+0x14]
  40b3fd:	cmp    eax,DWORD PTR [rcx+0x4]
  40b400:	jae    0x40b46f
  40b402:	mov    rbx,rcx
  40b405:	mov    r8,rdx
  40b408:	mov    ecx,eax
  40b40a:	mov    rdx,QWORD PTR [rbx+0x8]
  40b40e:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40b412:	mov    ecx,DWORD PTR [rbx+0x10]
  40b415:	test   cl,0x3
  40b418:	mov    QWORD PTR [rbx+0x18],rdx
  40b41c:	jne    0x40b462
  40b41e:	add    eax,0x1
  40b421:	mov    DWORD PTR [rbx+0x14],eax
  40b424:	cmp    BYTE PTR [rdx],0x2d
  40b427:	jne    0x40b4b0
  40b42d:	nop    DWORD PTR [rax]
  40b430:	add    rdx,0x1
  40b434:	cmp    BYTE PTR [rdx],0x2d
  40b437:	je     0x40b430
  40b439:	movzx  esi,WORD PTR [rbx+0xae]
  40b440:	mov    eax,0xffff8000
  40b445:	mov    rcx,rbx
  40b448:	mov    WORD PTR [rbx+0xae],ax
  40b44f:	call   0x40af60
  40b454:	mov    WORD PTR [rbx+0xae],si
  40b45b:	add    rsp,0x38
  40b45f:	pop    rbx
  40b460:	pop    rsi
  40b461:	ret    
  40b462:	lea    r9,[rdx+0x1]
  40b466:	mov    QWORD PTR [rbx+0x18],r9
  40b46a:	cmp    BYTE PTR [rdx],0x2d
  40b46d:	je     0x40b480
  40b46f:	mov    eax,0x1
  40b474:	add    rsp,0x38
  40b478:	pop    rbx
  40b479:	pop    rsi
  40b47a:	ret    
  40b47b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b480:	cmp    BYTE PTR [rdx+0x1],0x0
  40b484:	je     0x40b46f
  40b486:	add    eax,0x1
  40b489:	mov    DWORD PTR [rbx+0x14],eax
  40b48c:	movzx  eax,BYTE PTR [rdx+0x1]
  40b490:	cmp    al,0x2d
  40b492:	jne    0x40b4d4
  40b494:	lea    rax,[rdx+0x2]
  40b498:	mov    QWORD PTR [rbx+0x18],rax
  40b49c:	cmp    BYTE PTR [rdx+0x2],0x0
  40b4a0:	je     0x40b46f
  40b4a2:	and    ecx,0x1
  40b4a5:	je     0x40b4ea
  40b4a7:	mov    rdx,rax
  40b4aa:	nop    WORD PTR [rax+rax*1+0x0]
  40b4b0:	mov    rcx,rbx
  40b4b3:	add    rsp,0x38
  40b4b7:	pop    rbx
  40b4b8:	pop    rsi
  40b4b9:	jmp    0x40af60
  40b4be:	xchg   ax,ax
  40b4c0:	lea    r9,[rdx+0x14]
  40b4c4:	mov    r8,rdx
  40b4c7:	mov    edx,eax
  40b4c9:	add    rsp,0x38
  40b4cd:	pop    rbx
  40b4ce:	pop    rsi
  40b4cf:	jmp    0x403d10
  40b4d4:	and    ecx,0x2
  40b4d7:	jne    0x40b4de
  40b4d9:	mov    rdx,r9
  40b4dc:	jmp    0x40b4b0
  40b4de:	movzx  edx,al
  40b4e1:	lea    r9,[r8+0x14]
  40b4e5:	mov    rcx,rbx
  40b4e8:	jmp    0x40b4c9
  40b4ea:	mov    rsi,QWORD PTR [rbx+0x20]
  40b4ee:	mov    QWORD PTR [rsp+0x28],rdx
  40b4f3:	mov    rbx,QWORD PTR [rip+0xe63e]        # 0x419b38
  40b4fa:	call   QWORD PTR [rip+0x1a1d8]        # 0x4256d8
  40b500:	mov    rdx,QWORD PTR [rsp+0x28]
  40b505:	lea    rcx,[rax+0x60]
  40b509:	mov    r8,rsi
  40b50c:	mov    r9,rdx
  40b50f:	mov    rdx,rbx
  40b512:	call   0x402710
  40b517:	or     eax,0xffffffff
  40b51a:	jmp    0x40b474
  40b51f:	nop
  40b520:	push   rdi
  40b521:	push   rsi
  40b522:	push   rbx
  40b523:	sub    rsp,0x50
  40b527:	or     DWORD PTR [rcx+0x10],0x8000
  40b52e:	lea    rdi,[rsp+0x30]
  40b533:	mov    rbx,rcx
  40b536:	mov    DWORD PTR [rcx+0x14],0x1
  40b53d:	mov    QWORD PTR [rcx+0x18],0x0
  40b545:	mov    rdx,rdi
  40b548:	mov    rcx,rbx
  40b54b:	mov    QWORD PTR [rsp+0x30],0x0
  40b554:	mov    QWORD PTR [rsp+0x38],0x0
  40b55d:	mov    DWORD PTR [rsp+0x40],0x2
  40b565:	mov    DWORD PTR [rsp+0x44],0x0
  40b56d:	call   0x40b3e0
  40b572:	test   eax,eax
  40b574:	mov    esi,eax
  40b576:	jne    0x40b585
  40b578:	mov    rdx,rdi
  40b57b:	mov    rcx,rbx
  40b57e:	call   0x405000
  40b583:	mov    esi,eax
  40b585:	cmp    esi,0xffffffff
  40b588:	je     0x40b5c0
  40b58a:	cmp    esi,0x1
  40b58d:	je     0x40b5e0
  40b58f:	mov    eax,DWORD PTR [rsp+0x40]
  40b593:	mov    edx,eax
  40b595:	and    edx,0x20020
  40b59b:	cmp    edx,0x20000
  40b5a1:	je     0x40b5af
  40b5a3:	and    eax,0x40020
  40b5a8:	cmp    eax,0x40020
  40b5ad:	jne    0x40b545
  40b5af:	mov    rdx,rdi
  40b5b2:	mov    rcx,rbx
  40b5b5:	call   0x403b60
  40b5ba:	test   eax,eax
  40b5bc:	je     0x40b545
  40b5be:	xchg   ax,ax
  40b5c0:	mov    edx,DWORD PTR [rbx+0x10]
  40b5c3:	mov    eax,esi
  40b5c5:	test   dl,0x4
  40b5c8:	jne    0x40b5f3
  40b5ca:	and    dh,0x7f
  40b5cd:	mov    DWORD PTR [rbx+0x10],edx
  40b5d0:	add    rsp,0x50
  40b5d4:	pop    rbx
  40b5d5:	pop    rsi
  40b5d6:	pop    rdi
  40b5d7:	ret    
  40b5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b5e0:	mov    edx,DWORD PTR [rbx+0x10]
  40b5e3:	xor    eax,eax
  40b5e5:	and    dh,0x7f
  40b5e8:	mov    DWORD PTR [rbx+0x10],edx
  40b5eb:	add    rsp,0x50
  40b5ef:	pop    rbx
  40b5f0:	pop    rsi
  40b5f1:	pop    rdi
  40b5f2:	ret    
  40b5f3:	mov    DWORD PTR [rsp+0x2c],esi
  40b5f7:	mov    edx,0x1
  40b5fc:	mov    rcx,rbx
  40b5ff:	call   QWORD PTR [rbx+0x98]
  40b605:	mov    edx,DWORD PTR [rbx+0x10]
  40b608:	mov    eax,DWORD PTR [rsp+0x2c]
  40b60c:	and    dh,0x7f
  40b60f:	mov    DWORD PTR [rbx+0x10],edx
  40b612:	add    rsp,0x50
  40b616:	pop    rbx
  40b617:	pop    rsi
  40b618:	pop    rdi
  40b619:	ret    
  40b61a:	nop    WORD PTR [rax+rax*1+0x0]
  40b620:	push   rsi
  40b621:	push   rbx
  40b622:	sub    rsp,0x58
  40b626:	lea    rsi,[rsp+0x30]
  40b62b:	mov    rbx,rcx
  40b62e:	mov    rdx,rsi
  40b631:	mov    rcx,rbx
  40b634:	mov    QWORD PTR [rsp+0x30],0x0
  40b63d:	mov    QWORD PTR [rsp+0x38],0x0
  40b646:	mov    DWORD PTR [rsp+0x40],0x4
  40b64e:	mov    DWORD PTR [rsp+0x44],0x0
  40b656:	call   0x40b3e0
  40b65b:	test   eax,eax
  40b65d:	jne    0x40b66a
  40b65f:	mov    rdx,rsi
  40b662:	mov    rcx,rbx
  40b665:	call   0x405000
  40b66a:	cmp    eax,0xffffffff
  40b66d:	je     0x40b6c5
  40b66f:	cmp    eax,0x1
  40b672:	je     0x40b6e0
  40b674:	mov    eax,DWORD PTR [rsp+0x40]
  40b678:	test   eax,0x20020
  40b67d:	je     0x40b6b2
  40b67f:	mov    edx,eax
  40b681:	and    edx,0x40020
  40b687:	cmp    edx,0x20
  40b68a:	je     0x40b6b2
  40b68c:	mov    edx,eax
  40b68e:	and    edx,0x400020
  40b694:	cmp    edx,0x400000
  40b69a:	je     0x40b6a8
  40b69c:	and    eax,0x800020
  40b6a1:	cmp    eax,0x800020
  40b6a6:	jne    0x40b62e
  40b6a8:	mov    rax,QWORD PTR [rsp+0x30]
  40b6ad:	sub    WORD PTR [rax+0xe],0x1
  40b6b2:	mov    rdx,rsi
  40b6b5:	mov    rcx,rbx
  40b6b8:	call   0x403b60
  40b6bd:	test   eax,eax
  40b6bf:	je     0x40b62e
  40b6c5:	test   BYTE PTR [rbx+0x10],0x4
  40b6c9:	mov    eax,0xffffffff
  40b6ce:	jne    0x40b6f0
  40b6d0:	add    rsp,0x58
  40b6d4:	pop    rbx
  40b6d5:	pop    rsi
  40b6d6:	ret    
  40b6d7:	nop    WORD PTR [rax+rax*1+0x0]
  40b6e0:	xor    al,al
  40b6e2:	add    rsp,0x58
  40b6e6:	pop    rbx
  40b6e7:	pop    rsi
  40b6e8:	ret    
  40b6e9:	nop    DWORD PTR [rax+0x0]
  40b6f0:	mov    DWORD PTR [rsp+0x2c],eax
  40b6f4:	mov    edx,0x1
  40b6f9:	mov    rcx,rbx
  40b6fc:	call   QWORD PTR [rbx+0x98]
  40b702:	mov    eax,DWORD PTR [rsp+0x2c]
  40b706:	add    rsp,0x58
  40b70a:	pop    rbx
  40b70b:	pop    rsi
  40b70c:	ret    
  40b70d:	nop    DWORD PTR [rax]
  40b710:	push   r14
  40b712:	push   r13
  40b714:	push   r12
  40b716:	push   rbp
  40b717:	push   rdi
  40b718:	push   rsi
  40b719:	push   rbx
  40b71a:	sub    rsp,0x20
  40b71e:	mov    rax,QWORD PTR [rip+0x17fc3]        # 0x4236e8
  40b725:	mov    rbp,rcx
  40b728:	mov    rdi,rdx
  40b72b:	mov    rbx,r8
  40b72e:	mov    r12d,r9d
  40b731:	test   rax,rax
  40b734:	je     0x40ba04
  40b73a:	movzx  edx,BYTE PTR [rbx]
  40b73d:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b741:	je     0x40b752
  40b743:	add    rbx,0x1
  40b747:	movzx  r10d,BYTE PTR [rbx]
  40b74b:	cmp    BYTE PTR [rax+r10*1],0x0
  40b750:	jne    0x40b743
  40b752:	lea    rdx,[rip+0x1092c]        # 0x41c085
  40b759:	mov    rcx,rbx
  40b75c:	call   0x418520
  40b761:	test   rax,rax
  40b764:	mov    r13,rax
  40b767:	je     0x40b9b7
  40b76d:	cmp    DWORD PTR [rsp+0x80],0x2
  40b775:	je     0x40b980
  40b77b:	movzx  eax,BYTE PTR [rax]
  40b77e:	xor    r14d,r14d
  40b781:	cmp    al,0x7f
  40b783:	jbe    0x40b860
  40b789:	mov    rdx,QWORD PTR [rip+0x17e50]        # 0x4235e0
  40b790:	lea    rsi,[r13+0x1]
  40b794:	mov    BYTE PTR [r13+0x0],0x0
  40b799:	test   rdx,rdx
  40b79c:	je     0x40ba37
  40b7a2:	movzx  eax,BYTE PTR [r13+0x1]
  40b7a7:	cmp    BYTE PTR [rdx+rax*1],0x0
  40b7ab:	mov    r10,rax
  40b7ae:	je     0x40b7c2
  40b7b0:	add    rsi,0x1
  40b7b4:	movzx  r11d,BYTE PTR [rsi]
  40b7b8:	cmp    BYTE PTR [rdx+r11*1],0x0
  40b7bd:	mov    r10,r11
  40b7c0:	jne    0x40b7b0
  40b7c2:	test   r14d,r14d
  40b7c5:	mov    r13,rsi
  40b7c8:	je     0x40b7de
  40b7ca:	cmp    r10b,0x3d
  40b7ce:	je     0x40b8f0
  40b7d4:	cmp    r10b,0x3a
  40b7d8:	je     0x40b8f0
  40b7de:	movzx  eax,BYTE PTR [rbx+0x1]
  40b7e2:	cmp    al,0x7f
  40b7e4:	ja     0x40b835
  40b7e6:	lea    rdx,[rip+0x13393]        # 0x41eb80
  40b7ed:	test   DWORD PTR [rdx+rax*4],0x3b0040
  40b7f4:	je     0x40b835
  40b7f6:	mov    r8,rdi
  40b7f9:	mov    rdx,rbx
  40b7fc:	mov    rcx,rbp
  40b7ff:	call   0x40af60
  40b804:	test   eax,eax
  40b806:	jne    0x40b84b
  40b808:	test   r12d,r12d
  40b80b:	je     0x40b880
  40b80d:	mov    eax,DWORD PTR [rdi+0x10]
  40b810:	test   ah,0x1
  40b813:	jne    0x40b84b
  40b815:	movzx  edx,BYTE PTR [r13+0x0]
  40b81a:	cmp    dl,0x22
  40b81d:	je     0x40b930
  40b823:	cmp    dl,0x27
  40b826:	je     0x40b930
  40b82c:	mov    QWORD PTR [rdi+0x8],r13
  40b830:	jmp    0x40b941
  40b835:	movsx  edx,BYTE PTR [rbx]
  40b838:	lea    r9,[rdi+0x14]
  40b83c:	mov    r8,rdi
  40b83f:	mov    rcx,rbp
  40b842:	call   0x403d10
  40b847:	test   eax,eax
  40b849:	je     0x40b808
  40b84b:	add    rsp,0x20
  40b84f:	pop    rbx
  40b850:	pop    rsi
  40b851:	pop    rdi
  40b852:	pop    rbp
  40b853:	pop    r12
  40b855:	pop    r13
  40b857:	pop    r14
  40b859:	ret    
  40b85a:	nop    WORD PTR [rax+rax*1+0x0]
  40b860:	lea    rdx,[rip+0x13319]        # 0x41eb80
  40b867:	xor    r14d,r14d
  40b86a:	test   DWORD PTR [rdx+rax*4],0xc01
  40b871:	setne  r14b
  40b875:	jmp    0x40b789
  40b87a:	nop    WORD PTR [rax+rax*1+0x0]
  40b880:	movzx  eax,BYTE PTR [r13+0x0]
  40b885:	cmp    al,0x22
  40b887:	je     0x40b9de
  40b88d:	cmp    al,0x27
  40b88f:	je     0x40b9de
  40b895:	mov    QWORD PTR [rdi+0x8],r13
  40b899:	mov    rax,QWORD PTR [rdi]
  40b89c:	mov    eax,DWORD PTR [rax+0x10]
  40b89f:	test   ah,0xf0
  40b8a2:	jne    0x40b990
  40b8a8:	cmp    BYTE PTR [r13+0x0],0x0
  40b8ad:	jne    0x40b84b
  40b8af:	mov    QWORD PTR [rdi+0x8],0x0
  40b8b7:	mov    ebx,DWORD PTR [rip+0xe153]        # 0x419a10
  40b8bd:	mov    eax,DWORD PTR [rsp+0x80]
  40b8c4:	mov    rdx,rdi
  40b8c7:	mov    rcx,rbp
  40b8ca:	mov    DWORD PTR [rip+0xe140],eax        # 0x419a10
  40b8d0:	call   0x403b60
  40b8d5:	mov    DWORD PTR [rip+0xe135],ebx        # 0x419a10
  40b8db:	add    rsp,0x20
  40b8df:	pop    rbx
  40b8e0:	pop    rsi
  40b8e1:	pop    rdi
  40b8e2:	pop    rbp
  40b8e3:	pop    r12
  40b8e5:	pop    r13
  40b8e7:	pop    r14
  40b8e9:	ret    
  40b8ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b8f0:	mov    rax,QWORD PTR [rip+0x17ce9]        # 0x4235e0
  40b8f7:	lea    r13,[rsi+0x1]
  40b8fb:	test   rax,rax
  40b8fe:	je     0x40ba49
  40b904:	movzx  edx,BYTE PTR [rsi+0x1]
  40b908:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b90c:	je     0x40b7de
  40b912:	add    r13,0x1
  40b916:	movzx  edx,BYTE PTR [r13+0x0]
  40b91b:	cmp    BYTE PTR [rax+rdx*1],0x0
  40b91f:	jne    0x40b912
  40b921:	jmp    0x40b7de
  40b926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b930:	xor    edx,edx
  40b932:	mov    rcx,r13
  40b935:	call   0x407760
  40b93a:	mov    eax,DWORD PTR [rdi+0x10]
  40b93d:	mov    QWORD PTR [rdi+0x8],r13
  40b941:	mov    edx,eax
  40b943:	and    edx,0x60000
  40b949:	cmp    edx,0x20000
  40b94f:	je     0x40ba13
  40b955:	jbe    0x40b9c8
  40b957:	cmp    edx,0x40000
  40b95d:	je     0x40ba25
  40b963:	cmp    edx,0x60000
  40b969:	jne    0x40b899
  40b96f:	test   r12d,r12d
  40b972:	jg     0x40b84b
  40b978:	jmp    0x40b899
  40b97d:	nop    DWORD PTR [rax]
  40b980:	mov    BYTE PTR [rax],0x0
  40b983:	add    r13,0x1
  40b987:	jmp    0x40b7de
  40b98c:	nop    DWORD PTR [rax+0x0]
  40b990:	test   eax,0x10000
  40b995:	je     0x40b9ed
  40b997:	cmp    BYTE PTR [r13+0x0],0x0
  40b99c:	je     0x40b8af
  40b9a2:	mov    rcx,r13
  40b9a5:	call   0x4042c0
  40b9aa:	or     DWORD PTR [rdi+0x10],0x40
  40b9ae:	mov    QWORD PTR [rdi+0x8],rax
  40b9b2:	jmp    0x40b8b7
  40b9b7:	mov    rcx,rbx
  40b9ba:	call   0x418538
  40b9bf:	lea    r13,[rbx+rax*1]
  40b9c3:	jmp    0x40b7de
  40b9c8:	test   edx,edx
  40b9ca:	jne    0x40b899
  40b9d0:	test   r12d,r12d
  40b9d3:	jns    0x40b899
  40b9d9:	jmp    0x40b84b
  40b9de:	xor    edx,edx
  40b9e0:	mov    rcx,r13
  40b9e3:	call   0x407760
  40b9e8:	jmp    0x40b895
  40b9ed:	cmp    BYTE PTR [r13+0x0],0x0
  40b9f2:	jne    0x40b9a2
  40b9f4:	lea    rax,[rip+0x11f94]        # 0x41d98f
  40b9fb:	mov    QWORD PTR [rdi+0x8],rax
  40b9ff:	jmp    0x40b8b7
  40ba04:	mov    ecx,0x2d
  40ba09:	call   0x404060
  40ba0e:	jmp    0x40b73a
  40ba13:	test   r12d,r12d
  40ba16:	js     0x40ba2a
  40ba18:	test   al,0x20
  40ba1a:	je     0x40b899
  40ba20:	jmp    0x40b84b
  40ba25:	test   r12d,r12d
  40ba28:	js     0x40ba18
  40ba2a:	test   al,0x20
  40ba2c:	jne    0x40b899
  40ba32:	jmp    0x40b84b
  40ba37:	mov    ecx,0xc
  40ba3c:	call   0x404060
  40ba41:	mov    rdx,rax
  40ba44:	jmp    0x40b7a2
  40ba49:	mov    ecx,0xc
  40ba4e:	call   0x404060
  40ba53:	jmp    0x40b904
  40ba58:	nop    DWORD PTR [rax+rax*1+0x0]
  40ba60:	push   rdi
  40ba61:	push   rsi
  40ba62:	push   rbx
  40ba63:	sub    rsp,0x50
  40ba67:	mov    esi,DWORD PTR [rcx+0x10]
  40ba6a:	mov    rbx,rcx
  40ba6d:	mov    QWORD PTR [rsp+0x30],0x0
  40ba76:	mov    QWORD PTR [rsp+0x38],0x0
  40ba7f:	mov    DWORD PTR [rsp+0x40],0x1
  40ba87:	mov    DWORD PTR [rsp+0x44],0x0
  40ba8f:	mov    eax,esi
  40ba91:	and    eax,0xfffffffb
  40ba94:	mov    DWORD PTR [rcx+0x10],eax
  40ba97:	mov    rcx,rdx
  40ba9a:	call   0x4042c0
  40ba9f:	lea    rdx,[rsp+0x30]
  40baa4:	mov    rdi,rax
  40baa7:	xor    r9d,r9d
  40baaa:	mov    r8,rax
  40baad:	mov    rcx,rbx
  40bab0:	mov    DWORD PTR [rsp+0x20],0x0
  40bab8:	call   0x40b710
  40babd:	mov    rcx,rdi
  40bac0:	call   0x4185e0
  40bac5:	mov    DWORD PTR [rbx+0x10],esi
  40bac8:	add    rsp,0x50
  40bacc:	pop    rbx
  40bacd:	pop    rsi
  40bace:	pop    rdi
  40bacf:	ret    
  40bad0:	push   rbp
  40bad1:	push   rdi
  40bad2:	push   rsi
  40bad3:	push   rbx
  40bad4:	sub    rsp,0x48
  40bad8:	mov    rsi,QWORD PTR [rdx+0x18]
  40badc:	cmp    rcx,0xf
  40bae0:	mov    QWORD PTR [rsp+0x20],0x0
  40bae9:	mov    QWORD PTR [rsp+0x28],0x0
  40baf2:	mov    DWORD PTR [rsp+0x30],0x2
  40bafa:	mov    DWORD PTR [rsp+0x34],0x0
  40bb02:	jbe    0x40bb0b
  40bb04:	mov    eax,DWORD PTR [rdx+0x10]
  40bb07:	test   al,0x8
  40bb09:	je     0x40bb14
  40bb0b:	add    rsp,0x48
  40bb0f:	pop    rbx
  40bb10:	pop    rsi
  40bb11:	pop    rdi
  40bb12:	pop    rbp
  40bb13:	ret    
  40bb14:	test   ah,0x80
  40bb17:	je     0x40bbb0
  40bb1d:	test   BYTE PTR [rcx+0x12],0x4
  40bb21:	mov    rbx,rcx
  40bb24:	je     0x40bbe2
  40bb2a:	lea    rdi,[rsp+0x20]
  40bb2f:	mov    rdx,rsi
  40bb32:	mov    r8,rdi
  40bb35:	call   0x40af60
  40bb3a:	test   eax,eax
  40bb3c:	jne    0x40bbe2
  40bb42:	mov    rdx,rdi
  40bb45:	mov    rcx,rbx
  40bb48:	call   0x404100
  40bb4d:	test   eax,eax
  40bb4f:	jne    0x40bbe2
  40bb55:	test   BYTE PTR [rbx+0x11],0x80
  40bb59:	mov    eax,DWORD PTR [rsp+0x30]
  40bb5d:	jne    0x40bbc0
  40bb5f:	test   eax,0x20020
  40bb64:	je     0x40bb93
  40bb66:	mov    edx,eax
  40bb68:	and    edx,0x40020
  40bb6e:	cmp    edx,0x20
  40bb71:	je     0x40bb93
  40bb73:	mov    edx,eax
  40bb75:	and    edx,0x400020
  40bb7b:	cmp    edx,0x400000
  40bb81:	je     0x40bb93
  40bb83:	and    eax,0x800020
  40bb88:	cmp    eax,0x800020
  40bb8d:	jne    0x40bb0b
  40bb93:	mov    rdx,rdi
  40bb96:	mov    rcx,rbx
  40bb99:	call   0x403b60
  40bb9e:	nop
  40bb9f:	add    rsp,0x48
  40bba3:	pop    rbx
  40bba4:	pop    rsi
  40bba5:	pop    rdi
  40bba6:	pop    rbp
  40bba7:	ret    
  40bba8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbb0:	mov    DWORD PTR [rsp+0x30],0x4
  40bbb8:	jmp    0x40bb1d
  40bbbd:	nop    DWORD PTR [rax]
  40bbc0:	mov    edx,eax
  40bbc2:	and    edx,0x20020
  40bbc8:	cmp    edx,0x20000
  40bbce:	je     0x40bb93
  40bbd0:	and    eax,0x40020
  40bbd5:	cmp    eax,0x40020
  40bbda:	jne    0x40bb0b
  40bbe0:	jmp    0x40bb93
  40bbe2:	mov    rbp,QWORD PTR [rbx+0x28]
  40bbe6:	mov    rdi,QWORD PTR [rip+0xdf53]        # 0x419b40
  40bbed:	call   QWORD PTR [rip+0x19ae5]        # 0x4256d8
  40bbf3:	lea    rcx,[rax+0x60]
  40bbf7:	mov    r9,rsi
  40bbfa:	mov    r8,rbp
  40bbfd:	mov    rdx,rdi
  40bc00:	call   0x402710
  40bc05:	mov    rcx,rbx
  40bc08:	mov    edx,0x1
  40bc0d:	call   QWORD PTR [rbx+0x98]
  40bc13:	mov    ecx,0x1
  40bc18:	call   0x4186b8
  40bc1d:	nop
  40bc1e:	xchg   ax,ax
  40bc20:	push   r12
  40bc22:	push   rbp
  40bc23:	push   rdi
  40bc24:	push   rsi
  40bc25:	push   rbx
  40bc26:	sub    rsp,0x40
  40bc2a:	mov    rsi,QWORD PTR [rdx+0x18]
  40bc2e:	cmp    rcx,0xf
  40bc32:	mov    QWORD PTR [rsp+0x20],0x0
  40bc3b:	mov    QWORD PTR [rsp+0x28],0x0
  40bc44:	mov    DWORD PTR [rsp+0x30],0x4
  40bc4c:	mov    DWORD PTR [rsp+0x34],0x0
  40bc54:	jbe    0x40bd6f
  40bc5a:	cmp    BYTE PTR [rip+0x177ef],0x0        # 0x423450
  40bc61:	jne    0x40bd6f
  40bc67:	cmp    DWORD PTR [rcx],0x1ffff
  40bc6d:	mov    rbx,rcx
  40bc70:	jle    0x40be0b
  40bc76:	cmp    QWORD PTR [rcx+0xd0],0x0
  40bc7e:	je     0x40be0b
  40bc84:	test   rsi,rsi
  40bc87:	je     0x40bc8e
  40bc89:	cmp    BYTE PTR [rsi],0x0
  40bc8c:	jne    0x40bcdc
  40bc8e:	mov    r12,QWORD PTR [rdx+0x50]
  40bc92:	mov    rbp,QWORD PTR [rbx+0x28]
  40bc96:	mov    rdi,QWORD PTR [rip+0xdefb]        # 0x419b98
  40bc9d:	call   QWORD PTR [rip+0x19a35]        # 0x4256d8
  40bca3:	lea    rcx,[rax+0x60]
  40bca7:	mov    r8,rbp
  40bcaa:	mov    r9,r12
  40bcad:	mov    rdx,rdi
  40bcb0:	call   0x402710
  40bcb5:	mov    edx,0x1
  40bcba:	mov    rcx,rbx
  40bcbd:	call   QWORD PTR [rbx+0x98]
  40bcc3:	lea    rdx,[rip+0xf36e]        # 0x41b038
  40bcca:	lea    rcx,[rip+0xf36f]        # 0x41b040
  40bcd1:	mov    r8d,0x60
  40bcd7:	call   0x413780
  40bcdc:	cmp    BYTE PTR [rsi+0x1],0x0
  40bce0:	mov    BYTE PTR [rip+0x17769],0x1        # 0x423450
  40bce7:	jne    0x40bd80
  40bced:	movzx  edx,BYTE PTR [rsi]
  40bcf0:	cmp    dl,0x2a
  40bcf3:	je     0x40bde3
  40bcf9:	lea    r8,[rsp+0x20]
  40bcfe:	mov    rcx,rbx
  40bd01:	lea    r9,[r8+0x14]
  40bd05:	call   0x403d10
  40bd0a:	test   eax,eax
  40bd0c:	je     0x40bd5b
  40bd0e:	movsx  ebp,BYTE PTR [rsi]
  40bd11:	mov    rdi,QWORD PTR [rbx+0x20]
  40bd15:	mov    rsi,QWORD PTR [rip+0xde14]        # 0x419b30
  40bd1c:	call   QWORD PTR [rip+0x199b6]        # 0x4256d8
  40bd22:	lea    rcx,[rax+0x60]
  40bd26:	mov    r8,rdi
  40bd29:	mov    r9d,ebp
  40bd2c:	mov    rdx,rsi
  40bd2f:	call   0x402710
  40bd34:	mov    edx,0x1
  40bd39:	mov    rcx,rbx
  40bd3c:	call   QWORD PTR [rbx+0x98]
  40bd42:	lea    rdx,[rip+0xf2ef]        # 0x41b038
  40bd49:	lea    rcx,[rip+0xf2f0]        # 0x41b040
  40bd50:	mov    r8d,0x71
  40bd56:	call   0x413780
  40bd5b:	mov    rdx,QWORD PTR [rsp+0x20]
  40bd60:	mov    rcx,rbx
  40bd63:	call   0x4025f0
  40bd68:	mov    BYTE PTR [rip+0x176e1],0x0        # 0x423450
  40bd6f:	add    rsp,0x40
  40bd73:	pop    rbx
  40bd74:	pop    rsi
  40bd75:	pop    rdi
  40bd76:	pop    rbp
  40bd77:	pop    r12
  40bd79:	ret    
  40bd7a:	nop    WORD PTR [rax+rax*1+0x0]
  40bd80:	lea    r8,[rsp+0x20]
  40bd85:	mov    rdx,rsi
  40bd88:	mov    rcx,rbx
  40bd8b:	call   0x40af60
  40bd90:	test   eax,eax
  40bd92:	je     0x40bd5b
  40bd94:	mov    rbp,QWORD PTR [rbx+0x20]
  40bd98:	mov    rdi,QWORD PTR [rip+0xdd99]        # 0x419b38
  40bd9f:	call   QWORD PTR [rip+0x19933]        # 0x4256d8
  40bda5:	lea    rcx,[rax+0x60]
  40bda9:	mov    r9,rsi
  40bdac:	mov    r8,rbp
  40bdaf:	mov    rdx,rdi
  40bdb2:	call   0x402710
  40bdb7:	mov    rcx,rbx
  40bdba:	mov    edx,0x1
  40bdbf:	call   QWORD PTR [rbx+0x98]
  40bdc5:	lea    rdx,[rip+0xf26c]        # 0x41b038
  40bdcc:	lea    rcx,[rip+0xf26d]        # 0x41b040
  40bdd3:	mov    r8d,0x79
  40bdd9:	call   0x413780
  40bdde:	jmp    0x40bd5b
  40bde3:	mov    rdi,QWORD PTR [rbx+0x78]
  40bde7:	mov    esi,DWORD PTR [rbx+0xb4]
  40bded:	jmp    0x40bdf4
  40bdef:	nop
  40bdf0:	add    rdi,0x68
  40bdf4:	mov    rdx,rdi
  40bdf7:	mov    rcx,rbx
  40bdfa:	sub    esi,0x1
  40bdfd:	call   0x4025f0
  40be02:	test   esi,esi
  40be04:	jg     0x40bdf0
  40be06:	jmp    0x40bd68
  40be0b:	mov    rcx,QWORD PTR [rip+0xdc96]        # 0x419aa8
  40be12:	call   0x402b80
  40be17:	nop
  40be18:	nop    DWORD PTR [rax+rax*1+0x0]
  40be20:	push   r13
  40be22:	push   r12
  40be24:	push   rbp
  40be25:	push   rdi
  40be26:	push   rsi
  40be27:	push   rbx
  40be28:	sub    rsp,0x28
  40be2c:	mov    rbp,rcx
  40be2f:	mov    ecx,0xa
  40be34:	mov    rsi,rdx
  40be37:	call   0x404550
  40be3c:	mov    rcx,QWORD PTR [rbp+0x28]
  40be40:	mov    rdi,rax
  40be43:	call   0x418538
  40be48:	mov    r13,rax
  40be4b:	mov    eax,0x3f3c
  40be50:	mov    WORD PTR [rdi],ax
  40be53:	movabs rax,0x6d6172676f7270
  40be5d:	mov    r12d,r13d
  40be60:	mov    QWORD PTR [rdi+0x2],rax
  40be64:	mov    r10,QWORD PTR [rip+0x17775]        # 0x4235e0
  40be6b:	lea    rbx,[rsi+0x1]
  40be6f:	test   r10,r10
  40be72:	je     0x40bee8
  40be74:	movzx  eax,BYTE PTR [rsi+0x1]
  40be78:	cmp    BYTE PTR [r10+rax*1],0x0
  40be7d:	je     0x40be8f
  40be7f:	nop
  40be80:	add    rbx,0x1
  40be84:	movzx  r9d,BYTE PTR [rbx]
  40be88:	cmp    BYTE PTR [r10+r9*1],0x0
  40be8d:	jne    0x40be80
  40be8f:	mov    rdx,QWORD PTR [rbp+0x28]
  40be93:	mov    r8d,r12d
  40be96:	mov    rcx,rbx
  40be99:	call   0x40af10
  40be9e:	test   eax,eax
  40bea0:	jne    0x40bebd
  40bea2:	lea    rsi,[rbx+r13*1]
  40bea6:	movzx  eax,BYTE PTR [rsi]
  40bea9:	cmp    al,0x7f
  40beab:	ja     0x40bebd
  40bead:	lea    rdx,[rip+0x12ccc]        # 0x41eb80
  40beb4:	test   DWORD PTR [rdx+rax*4],0x1000c01
  40bebb:	jne    0x40befa
  40bebd:	mov    rdx,rdi
  40bec0:	mov    rcx,rbx
  40bec3:	call   0x418510
  40bec8:	test   rax,rax
  40becb:	mov    rsi,rax
  40bece:	jne    0x40be64
  40bed0:	mov    rcx,rdi
  40bed3:	call   0x4185e0
  40bed8:	mov    rax,rsi
  40bedb:	add    rsp,0x28
  40bedf:	pop    rbx
  40bee0:	pop    rsi
  40bee1:	pop    rdi
  40bee2:	pop    rbp
  40bee3:	pop    r12
  40bee5:	pop    r13
  40bee7:	ret    
  40bee8:	mov    ecx,0xc
  40beed:	call   0x404060
  40bef2:	mov    r10,rax
  40bef5:	jmp    0x40be74
  40befa:	mov    rcx,rdi
  40befd:	call   0x4185e0
  40bf02:	jmp    0x40bf0c
  40bf04:	add    rsi,0x1
  40bf08:	cmp    al,0x3e
  40bf0a:	je     0x40bed8
  40bf0c:	movzx  eax,BYTE PTR [rsi]
  40bf0f:	test   al,al
  40bf11:	jne    0x40bf04
  40bf13:	xor    esi,esi
  40bf15:	mov    rax,rsi
  40bf18:	add    rsp,0x28
  40bf1c:	pop    rbx
  40bf1d:	pop    rsi
  40bf1e:	pop    rdi
  40bf1f:	pop    rbp
  40bf20:	pop    r12
  40bf22:	pop    r13
  40bf24:	ret    
  40bf25:	nop
  40bf26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bf30:	push   r14
  40bf32:	push   r13
  40bf34:	push   r12
  40bf36:	push   rbp
  40bf37:	push   rdi
  40bf38:	push   rsi
  40bf39:	push   rbx
  40bf3a:	sub    rsp,0x20
  40bf3e:	test   rdx,rdx
  40bf41:	mov    rbp,rcx
  40bf44:	mov    rbx,rdx
  40bf47:	je     0x40bfc0
  40bf49:	mov    rax,QWORD PTR [rip+0x17690]        # 0x4235e0
  40bf50:	test   rax,rax
  40bf53:	je     0x40c082
  40bf59:	movzx  ecx,BYTE PTR [rbx]
  40bf5c:	cmp    BYTE PTR [rax+rcx*1],0x0
  40bf60:	mov    rdx,rcx
  40bf63:	je     0x40bf77
  40bf65:	add    rbx,0x1
  40bf69:	movzx  r8d,BYTE PTR [rbx]
  40bf6d:	cmp    BYTE PTR [rax+r8*1],0x0
  40bf72:	mov    rdx,r8
  40bf75:	jne    0x40bf65
  40bf77:	test   dl,dl
  40bf79:	je     0x40bfb1
  40bf7b:	xor    esi,esi
  40bf7d:	mov    r14d,0x1
  40bf83:	lea    rdi,[rip+0xf236]        # 0x41b1c0
  40bf8a:	xor    r12d,r12d
  40bf8d:	mov    r13,QWORD PTR [rdi]
  40bf90:	mov    rdx,QWORD PTR [rdi+0x10]
  40bf94:	mov    rcx,rbx
  40bf97:	mov    r8d,r13d
  40bf9a:	call   0x40af10
  40bf9f:	test   eax,eax
  40bfa1:	je     0x40bfe0
  40bfa3:	add    r12d,0x1
  40bfa7:	add    rdi,0x18
  40bfab:	cmp    r12d,0x5
  40bfaf:	jne    0x40bf8d
  40bfb1:	add    rsp,0x20
  40bfb5:	pop    rbx
  40bfb6:	pop    rsi
  40bfb7:	pop    rdi
  40bfb8:	pop    rbp
  40bfb9:	pop    r12
  40bfbb:	pop    r13
  40bfbd:	pop    r14
  40bfbf:	ret    
  40bfc0:	lea    rcx,[rip+0xf080]        # 0x41b047
  40bfc7:	call   0x4185c0
  40bfcc:	test   rax,rax
  40bfcf:	mov    rbx,rax
  40bfd2:	jne    0x40bf49
  40bfd8:	jmp    0x40bfb1
  40bfda:	nop    WORD PTR [rax+rax*1+0x0]
  40bfe0:	add    rbx,r13
  40bfe3:	movzx  r8d,BYTE PTR [rbx]
  40bfe7:	cmp    r8b,0x7f
  40bfeb:	ja     0x40bfb1
  40bfed:	lea    rdx,[rip+0x12b8c]        # 0x41eb80
  40bff4:	movzx  eax,r8b
  40bff8:	test   DWORD PTR [rdx+rax*4],0xc13
  40bfff:	je     0x40bfb1
  40c001:	mov    eax,r14d
  40c004:	mov    ecx,r12d
  40c007:	shl    eax,cl
  40c009:	or     esi,eax
  40c00b:	mov    rax,QWORD PTR [rip+0x175ce]        # 0x4235e0
  40c012:	test   rax,rax
  40c015:	je     0x40c0e2
  40c01b:	mov    edx,r8d
  40c01e:	cmp    BYTE PTR [rax+r8*1],0x0
  40c023:	je     0x40c035
  40c025:	add    rbx,0x1
  40c029:	movzx  ecx,BYTE PTR [rbx]
  40c02c:	cmp    BYTE PTR [rax+rcx*1],0x0
  40c030:	mov    rdx,rcx
  40c033:	jne    0x40c025
  40c035:	test   dl,dl
  40c037:	je     0x40c091
  40c039:	cmp    dl,0x2c
  40c03c:	jne    0x40bf83
  40c042:	mov    rax,QWORD PTR [rip+0x17597]        # 0x4235e0
  40c049:	lea    rdi,[rbx+0x1]
  40c04d:	test   rax,rax
  40c050:	je     0x40c0f8
  40c056:	movzx  edx,BYTE PTR [rbx+0x1]
  40c05a:	mov    rbx,rdi
  40c05d:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c061:	je     0x40bf83
  40c067:	nop    WORD PTR [rax+rax*1+0x0]
  40c070:	add    rbx,0x1
  40c074:	movzx  edx,BYTE PTR [rbx]
  40c077:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c07b:	jne    0x40c070
  40c07d:	jmp    0x40bf83
  40c082:	mov    ecx,0xc
  40c087:	call   0x404060
  40c08c:	jmp    0x40bf59
  40c091:	mov    eax,esi
  40c093:	and    eax,0x3
  40c096:	cmp    eax,0x3
  40c099:	je     0x40bfb1
  40c09f:	mov    eax,esi
  40c0a1:	and    eax,0xc
  40c0a4:	cmp    eax,0xc
  40c0a7:	je     0x40bfb1
  40c0ad:	lea    rax,[rip+0xf10c]        # 0x41b1c0
  40c0b4:	jmp    0x40c0cf
  40c0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c0c0:	and    DWORD PTR [rbp+0x0],edx
  40c0c3:	shr    esi,1
  40c0c5:	je     0x40bfb1
  40c0cb:	add    rax,0x18
  40c0cf:	test   sil,0x1
  40c0d3:	je     0x40c0c3
  40c0d5:	mov    edx,DWORD PTR [rax+0x8]
  40c0d8:	test   dl,0x1
  40c0db:	jne    0x40c0c0
  40c0dd:	or     DWORD PTR [rbp+0x0],edx
  40c0e0:	jmp    0x40c0c3
  40c0e2:	mov    ecx,0xc
  40c0e7:	call   0x404060
  40c0ec:	movzx  edx,BYTE PTR [rbx]
  40c0ef:	movzx  r8d,dl
  40c0f3:	jmp    0x40c01e
  40c0f8:	mov    ecx,0xc
  40c0fd:	call   0x404060
  40c102:	jmp    0x40c056
  40c107:	nop    WORD PTR [rax+rax*1+0x0]
  40c110:	push   r12
  40c112:	push   rbp
  40c113:	push   rdi
  40c114:	push   rsi
  40c115:	push   rbx
  40c116:	sub    rsp,0x30
  40c11a:	mov    rax,QWORD PTR [rip+0x174bf]        # 0x4235e0
  40c121:	mov    rbp,rcx
  40c124:	lea    rbx,[rdx+0x1]
  40c128:	test   rax,rax
  40c12b:	je     0x40c1ae
  40c131:	movzx  edx,BYTE PTR [rdx+0x1]
  40c135:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c139:	je     0x40c14d
  40c13b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c140:	add    rbx,0x1
  40c144:	movzx  edx,BYTE PTR [rbx]
  40c147:	cmp    BYTE PTR [rax+rdx*1],0x0
  40c14b:	jne    0x40c140
  40c14d:	mov    edx,0x3e
  40c152:	mov    rcx,rbx
  40c155:	call   0x418560
  40c15a:	test   rax,rax
  40c15d:	mov    rsi,rax
  40c160:	je     0x40c1a0
  40c162:	mov    r12d,eax
  40c165:	add    rsi,0x1
  40c169:	sub    r12d,ebx
  40c16c:	lea    rcx,[r12+0x1]
  40c171:	call   0x404550
  40c176:	mov    r8,r12
  40c179:	mov    rdx,rbx
  40c17c:	mov    rcx,rax
  40c17f:	mov    rdi,rax
  40c182:	call   0x4185a0
  40c187:	lea    rcx,[rbp+0x10]
  40c18b:	mov    rdx,rdi
  40c18e:	mov    BYTE PTR [rdi+r12*1],0x0
  40c193:	call   0x40bf30
  40c198:	mov    rcx,rdi
  40c19b:	call   0x4185e0
  40c1a0:	mov    rax,rsi
  40c1a3:	add    rsp,0x30
  40c1a7:	pop    rbx
  40c1a8:	pop    rsi
  40c1a9:	pop    rdi
  40c1aa:	pop    rbp
  40c1ab:	pop    r12
  40c1ad:	ret    
  40c1ae:	mov    ecx,0xc
  40c1b3:	mov    QWORD PTR [rsp+0x28],rdx
  40c1b8:	call   0x404060
  40c1bd:	mov    rdx,QWORD PTR [rsp+0x28]
  40c1c2:	jmp    0x40c131
  40c1c7:	nop    WORD PTR [rax+rax*1+0x0]
  40c1d0:	push   rbp
  40c1d1:	push   rdi
  40c1d2:	push   rsi
  40c1d3:	push   rbx
  40c1d4:	sub    rsp,0x28
  40c1d8:	test   BYTE PTR [rdx+0x12],0x1
  40c1dc:	mov    rbx,rcx
  40c1df:	mov    rsi,r8
  40c1e2:	mov    ebp,r9d
  40c1e5:	je     0x40c220
  40c1e7:	mov    rax,QWORD PTR [rdx+0x18]
  40c1eb:	test   rax,rax
  40c1ee:	je     0x40c220
  40c1f0:	movzx  edi,BYTE PTR [rax]
  40c1f3:	test   dil,dil
  40c1f6:	je     0x40c220
  40c1f8:	lea    eax,[rdi-0x43]
  40c1fb:	cmp    al,0x33
  40c1fd:	ja     0x40c340
  40c203:	lea    rdx,[rip+0xee4e]        # 0x41b058
  40c20a:	movzx  eax,al
  40c20d:	movsxd rax,DWORD PTR [rdx+rax*4]
  40c211:	add    rdx,rax
  40c214:	jmp    rdx
  40c216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c220:	lea    rcx,[rbx+0x10]
  40c224:	xor    edx,edx
  40c226:	call   0x40bf30
  40c22b:	test   BYTE PTR [rbx+0x11],0x10
  40c22f:	jne    0x40c270
  40c231:	mov    rdx,QWORD PTR [rbx+0x50]
  40c235:	mov    r9,QWORD PTR [rbx+0x60]
  40c239:	mov    rcx,rsi
  40c23c:	mov    r8,QWORD PTR [rbx+0x40]
  40c240:	call   0x4028e0
  40c245:	mov    rcx,rsi
  40c248:	call   0x418618
  40c24d:	mov    rcx,rsi
  40c250:	call   0x418620
  40c255:	test   eax,eax
  40c257:	jne    0x40c394
  40c25d:	test   bpl,bpl
  40c260:	jne    0x40c3c0
  40c266:	add    rsp,0x28
  40c26a:	pop    rbx
  40c26b:	pop    rsi
  40c26c:	pop    rdi
  40c26d:	pop    rbp
  40c26e:	ret    
  40c26f:	nop
  40c270:	mov    rcx,QWORD PTR [rbx+0x40]
  40c274:	test   rcx,rcx
  40c277:	je     0x40c370
  40c27d:	mov    rdx,rsi
  40c280:	call   0x4185f0
  40c285:	cmp    DWORD PTR [rbx],0x21fff
  40c28b:	jle    0x40c302
  40c28d:	cmp    QWORD PTR [rbx+0xe0],0x0
  40c295:	je     0x40c302
  40c297:	mov    rdx,rsi
  40c29a:	mov    ecx,0xa
  40c29f:	call   0x4185f8
  40c2a4:	mov    rcx,QWORD PTR [rbx+0xe0]
  40c2ab:	mov    rdx,rsi
  40c2ae:	call   0x4185f0
  40c2b3:	jmp    0x40c245
  40c2b5:	mov    rcx,QWORD PTR [rcx+0x40]
  40c2b9:	test   rcx,rcx
  40c2bc:	je     0x40c2c6
  40c2be:	mov    rdx,r8
  40c2c1:	call   0x4185f0
  40c2c6:	mov    rcx,QWORD PTR [rbx+0x48]
  40c2ca:	test   rcx,rcx
  40c2cd:	je     0x40c2d7
  40c2cf:	mov    rdx,rsi
  40c2d2:	call   0x4185f0
  40c2d7:	mov    rdx,rsi
  40c2da:	mov    ecx,0xa
  40c2df:	call   0x4185f8
  40c2e4:	mov    rdx,QWORD PTR [rip+0xd7ad]        # 0x419a98
  40c2eb:	lea    r8,[rip+0xee5e]        # 0x41b150
  40c2f2:	mov    rcx,rsi
  40c2f5:	call   0x402710
  40c2fa:	cmp    DWORD PTR [rbx],0x21fff
  40c300:	jg     0x40c28d
  40c302:	cmp    QWORD PTR [rbx+0x80],0x0
  40c30a:	je     0x40c245
  40c310:	mov    rdx,rsi
  40c313:	mov    ecx,0xa
  40c318:	call   0x4185f8
  40c31d:	mov    r8,QWORD PTR [rbx+0x80]
  40c324:	mov    rdx,QWORD PTR [rip+0xd9c5]        # 0x419cf0
  40c32b:	mov    rcx,rsi
  40c32e:	call   0x402710
  40c333:	jmp    0x40c245
  40c338:	nop    DWORD PTR [rax+rax*1+0x0]
  40c340:	mov    rbx,QWORD PTR [rip+0xd7c9]        # 0x419b10
  40c347:	call   QWORD PTR [rip+0x1938b]        # 0x4256d8
  40c34d:	lea    rcx,[rax+0x60]
  40c351:	movsx  r8d,dil
  40c355:	mov    rdx,rbx
  40c358:	call   0x402710
  40c35d:	mov    ecx,0x1
  40c362:	call   0x402b50
  40c367:	nop    WORD PTR [rax+rax*1+0x0]
  40c370:	mov    rcx,QWORD PTR [rbx+0x50]
  40c374:	test   rcx,rcx
  40c377:	jne    0x40c27d
  40c37d:	mov    rdx,QWORD PTR [rbx+0x60]
  40c381:	xor    r9d,r9d
  40c384:	xor    r8d,r8d
  40c387:	mov    rcx,rsi
  40c38a:	call   0x4028e0
  40c38f:	jmp    0x40c285
  40c394:	call   QWORD PTR [rip+0x1933e]        # 0x4256d8
  40c39a:	add    rax,0x30
  40c39e:	mov    r8,QWORD PTR [rip+0xd85b]        # 0x419c00
  40c3a5:	mov    rcx,QWORD PTR [rbx+0x28]
  40c3a9:	cmp    rsi,rax
  40c3ac:	cmove  r8,QWORD PTR [rip+0xd844]        # 0x419bf8
  40c3b4:	mov    rdx,QWORD PTR [rip+0xd84d]        # 0x419c08
  40c3bb:	call   0x4030d0
  40c3c0:	xor    ecx,ecx
  40c3c2:	call   0x402b50
  40c3c7:	nop
  40c3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3d0:	push   rsi
  40c3d1:	push   rbx
  40c3d2:	sub    rsp,0x28
  40c3d6:	cmp    BYTE PTR [rip+0x17097],0x0        # 0x423474
  40c3dd:	mov    rbx,rcx
  40c3e0:	mov    rsi,rdx
  40c3e3:	je     0x40c400
  40c3e5:	call   QWORD PTR [rip+0x192ed]        # 0x4256d8
  40c3eb:	cmp    rbx,0xf
  40c3ef:	lea    r8,[rax+0x60]
  40c3f3:	ja     0x40c410
  40c3f5:	add    rsp,0x28
  40c3f9:	pop    rbx
  40c3fa:	pop    rsi
  40c3fb:	ret    
  40c3fc:	nop    DWORD PTR [rax+0x0]
  40c400:	call   QWORD PTR [rip+0x192d2]        # 0x4256d8
  40c406:	cmp    rbx,0xf
  40c40a:	lea    r8,[rax+0x30]
  40c40e:	jbe    0x40c3f5
  40c410:	mov    r9d,0x1
  40c416:	mov    rdx,rsi
  40c419:	mov    rcx,rbx
  40c41c:	add    rsp,0x28
  40c420:	pop    rbx
  40c421:	pop    rsi
  40c422:	jmp    0x40c1d0
  40c427:	nop    WORD PTR [rax+rax*1+0x0]
  40c430:	add    rcx,0x1
  40c434:	add    rdx,0x1
  40c438:	movzx  r9d,BYTE PTR [rcx-0x1]
  40c43d:	movzx  r8d,BYTE PTR [rdx-0x1]
  40c442:	cmp    r9b,r8b
  40c445:	je     0x40c461
  40c447:	lea    r10,[rip+0xd1b2]        # 0x419600
  40c44e:	movzx  eax,r9b
  40c452:	movzx  eax,BYTE PTR [r10+rax*1]
  40c457:	movzx  r8d,BYTE PTR [r10+r8*1]
  40c45c:	sub    eax,r8d
  40c45f:	jne    0x40c468
  40c461:	test   r9b,r9b
  40c464:	jne    0x40c430
  40c466:	xor    eax,eax
  40c468:	repz ret 
  40c46a:	nop    WORD PTR [rax+rax*1+0x0]
  40c470:	test   r8d,r8d
  40c473:	jne    0x40c491
  40c475:	lea    rdx,[rip+0xd283]        # 0x4196ff
  40c47c:	mov    eax,0xff
  40c481:	mov    BYTE PTR [rdx],al
  40c483:	sub    eax,0x1
  40c486:	sub    rdx,0x1
  40c48a:	cmp    eax,0xffffffff
  40c48d:	jne    0x40c481
  40c48f:	repz ret 
  40c491:	lea    r9,[rip+0xd168]        # 0x419600
  40c498:	movzx  eax,dl
  40c49b:	movzx  edx,cl
  40c49e:	xchg   ax,ax
  40c4a0:	mov    ecx,edx
  40c4a2:	add    edx,0x1
  40c4a5:	mov    BYTE PTR [r9+rcx*1],al
  40c4a9:	add    eax,0x1
  40c4ac:	cmp    eax,0xff
  40c4b1:	ja     0x40c4c4
  40c4b3:	cmp    edx,0xff
  40c4b9:	ja     0x40c4c4
  40c4bb:	sub    r8d,0x1
  40c4bf:	test   r8d,r8d
  40c4c2:	jg     0x40c4a0
  40c4c4:	repz ret 
  40c4c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4d0:	test   rcx,rcx
  40c4d3:	je     0x40c4ff
  40c4d5:	movzx  eax,BYTE PTR [rcx]
  40c4d8:	test   al,al
  40c4da:	je     0x40c4ff
  40c4dc:	lea    rdx,[rip+0xd11d]        # 0x419600
  40c4e3:	mov    r8d,eax
  40c4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4f0:	add    rcx,0x1
  40c4f4:	mov    BYTE PTR [rdx+rax*1],r8b
  40c4f8:	movzx  eax,BYTE PTR [rcx]
  40c4fb:	test   al,al
  40c4fd:	jne    0x40c4f0
  40c4ff:	repz ret 
  40c501:	nop    DWORD PTR [rax+rax*1+0x0]
  40c506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c510:	lea    r8,[rip+0xd0e9]        # 0x419600
  40c517:	nop    WORD PTR [rax+rax*1+0x0]
  40c520:	movzx  eax,BYTE PTR [rdx]
  40c523:	add    rcx,0x1
  40c527:	add    rdx,0x1
  40c52b:	movzx  eax,BYTE PTR [r8+rax*1]
  40c530:	mov    BYTE PTR [rcx-0x1],al
  40c533:	cmp    BYTE PTR [rdx-0x1],0x0
  40c537:	jne    0x40c520
  40c539:	ret    
  40c53a:	nop    WORD PTR [rax+rax*1+0x0]
  40c540:	push   rbp
  40c541:	push   rdi
  40c542:	push   rsi
  40c543:	push   rbx
  40c544:	sub    rsp,0x68
  40c548:	xor    eax,eax
  40c54a:	lea    rdi,[r9+0x8]
  40c54e:	mov    QWORD PTR [r9],0x0
  40c555:	mov    QWORD PTR [r9+0x28],0x0
  40c55d:	mov    rbx,r9
  40c560:	mov    rbp,rcx
  40c563:	and    rdi,0xfffffffffffffff8
  40c567:	sub    r9,rdi
  40c56a:	add    r9d,0x30
  40c56e:	shr    r9d,0x3
  40c572:	mov    ecx,r9d
  40c575:	rep stos QWORD PTR es:[rdi],rax
  40c578:	mov    DWORD PTR [rbx+0x24],edx
  40c57b:	and    edx,0x2
  40c57e:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40c585:	mov    DWORD PTR [rbx+0x28],r8d
  40c589:	mov    ax,0x8000
  40c58d:	je     0x40c5b5
  40c58f:	mov    eax,r8d
  40c592:	and    eax,0x3
  40c595:	cmp    eax,0x1
  40c598:	sete   dl
  40c59b:	movzx  eax,dl
  40c59e:	movzx  edx,dl
  40c5a1:	add    edx,edx
  40c5a3:	and    r8d,0x1
  40c5a7:	lea    eax,[rax+rax*1+0x8000]
  40c5ae:	jne    0x40c5b5
  40c5b0:	mov    eax,edx
  40c5b2:	or     ah,0x84
  40c5b5:	mov    edx,eax
  40c5b7:	mov    rcx,rbp
  40c5ba:	call   0x418498
  40c5bf:	test   eax,eax
  40c5c1:	mov    DWORD PTR [rbx+0x18],eax
  40c5c4:	js     0x40c720
  40c5ca:	lea    rdx,[rsp+0x20]
  40c5cf:	mov    ecx,eax
  40c5d1:	call   QWORD PTR [rip+0x19171]        # 0x425748
  40c5d7:	test   eax,eax
  40c5d9:	jne    0x40c700
  40c5df:	movzx  eax,WORD PTR [rsp+0x26]
  40c5e4:	and    ax,0xf000
  40c5e8:	cmp    ax,0x8000
  40c5ec:	je     0x40c620
  40c5ee:	call   QWORD PTR [rip+0x1912c]        # 0x425720
  40c5f4:	mov    DWORD PTR [rax],0x16
  40c5fa:	mov    ecx,DWORD PTR [rbx+0x18]
  40c5fd:	mov    DWORD PTR [rbx+0x20],0x16
  40c604:	call   0x418488
  40c609:	mov    edx,DWORD PTR [rbx+0x20]
  40c60c:	test   edx,edx
  40c60e:	mov    rax,0xffffffffffffffff
  40c615:	je     0x40c640
  40c617:	add    rsp,0x68
  40c61b:	pop    rbx
  40c61c:	pop    rsi
  40c61d:	pop    rdi
  40c61e:	pop    rbp
  40c61f:	ret    
  40c620:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  40c624:	mov    rax,QWORD PTR [rsp+0x38]
  40c629:	mov    QWORD PTR [rbx+0x8],rax
  40c62d:	jne    0x40c609
  40c62f:	call   QWORD PTR [rip+0x190eb]        # 0x425720
  40c635:	mov    edx,DWORD PTR [rax]
  40c637:	mov    DWORD PTR [rbx+0x20],edx
  40c63a:	jmp    0x40c60c
  40c63c:	nop    DWORD PTR [rax+0x0]
  40c640:	mov    rax,QWORD PTR [rbx+0x8]
  40c644:	lea    rcx,[rax+0x1]
  40c648:	call   0x404550
  40c64d:	test   rax,rax
  40c650:	mov    rdi,rax
  40c653:	mov    QWORD PTR [rbx],rax
  40c656:	je     0x40c760
  40c65c:	mov    rsi,QWORD PTR [rbx+0x8]
  40c660:	test   rsi,rsi
  40c663:	jne    0x40c67f
  40c665:	jmp    0x40c740
  40c66a:	nop    WORD PTR [rax+rax*1+0x0]
  40c670:	movsxd r10,eax
  40c673:	add    rdi,r10
  40c676:	sub    rsi,r10
  40c679:	je     0x40c740
  40c67f:	mov    ecx,DWORD PTR [rbx+0x18]
  40c682:	mov    r8d,esi
  40c685:	mov    rdx,rdi
  40c688:	call   0x4184a0
  40c68d:	test   eax,eax
  40c68f:	jg     0x40c670
  40c691:	mov    rsi,QWORD PTR [rip+0x19088]        # 0x425720
  40c698:	call   rsi
  40c69a:	mov    eax,DWORD PTR [rax]
  40c69c:	lea    rdx,[rip+0xea85]        # 0x41b128
  40c6a3:	lea    rcx,[rip+0xea83]        # 0x41b12d
  40c6aa:	mov    r8,rbp
  40c6ad:	mov    DWORD PTR [rbx+0x20],eax
  40c6b0:	call   0x403060
  40c6b5:	mov    rcx,QWORD PTR [rbx]
  40c6b8:	call   0x4185e0
  40c6bd:	mov    eax,DWORD PTR [rbx+0x20]
  40c6c0:	test   eax,eax
  40c6c2:	je     0x40c74a
  40c6c8:	mov    ecx,DWORD PTR [rbx+0x18]
  40c6cb:	cmp    ecx,0xffffffff
  40c6ce:	je     0x40c6dc
  40c6d0:	call   0x418488
  40c6d5:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40c6dc:	call   rsi
  40c6de:	mov    edx,DWORD PTR [rbx+0x20]
  40c6e1:	mov    DWORD PTR [rax],edx
  40c6e3:	mov    rax,0xffffffffffffffff
  40c6ea:	mov    QWORD PTR [rbx],0xffffffffffffffff
  40c6f1:	add    rsp,0x68
  40c6f5:	pop    rbx
  40c6f6:	pop    rsi
  40c6f7:	pop    rdi
  40c6f8:	pop    rbp
  40c6f9:	ret    
  40c6fa:	nop    WORD PTR [rax+rax*1+0x0]
  40c700:	call   QWORD PTR [rip+0x1901a]        # 0x425720
  40c706:	mov    eax,DWORD PTR [rax]
  40c708:	mov    ecx,DWORD PTR [rbx+0x18]
  40c70b:	mov    DWORD PTR [rbx+0x20],eax
  40c70e:	call   0x418488
  40c713:	jmp    0x40c609
  40c718:	nop    DWORD PTR [rax+rax*1+0x0]
  40c720:	call   QWORD PTR [rip+0x18ffa]        # 0x425720
  40c726:	mov    edx,DWORD PTR [rax]
  40c728:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40c72f:	mov    DWORD PTR [rbx+0x20],edx
  40c732:	jmp    0x40c60c
  40c737:	nop    WORD PTR [rax+rax*1+0x0]
  40c740:	mov    BYTE PTR [rdi],0x0
  40c743:	mov    DWORD PTR [rbx+0x20],0x0
  40c74a:	mov    rax,QWORD PTR [rbx]
  40c74d:	add    rsp,0x68
  40c751:	pop    rbx
  40c752:	pop    rsi
  40c753:	pop    rdi
  40c754:	pop    rbp
  40c755:	ret    
  40c756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c760:	mov    DWORD PTR [rbx+0x20],0xc
  40c767:	mov    rsi,QWORD PTR [rip+0x18fb2]        # 0x425720
  40c76e:	jmp    0x40c6c8
  40c773:	nop    DWORD PTR [rax]
  40c776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c780:	push   rsi
  40c781:	push   rbx
  40c782:	sub    rsp,0x28
  40c786:	mov    rsi,QWORD PTR [rip+0x18f93]        # 0x425720
  40c78d:	mov    rbx,rcx
  40c790:	call   rsi
  40c792:	mov    DWORD PTR [rax],0x0
  40c798:	test   BYTE PTR [rbx+0x24],0x2
  40c79c:	je     0x40c7a9
  40c79e:	mov    eax,DWORD PTR [rbx+0x28]
  40c7a1:	and    eax,0x3
  40c7a4:	cmp    eax,0x1
  40c7a7:	je     0x40c7e0
  40c7a9:	mov    rcx,QWORD PTR [rbx]
  40c7ac:	call   0x4185e0
  40c7b1:	call   rsi
  40c7b3:	mov    ecx,DWORD PTR [rbx+0x18]
  40c7b6:	mov    eax,DWORD PTR [rax]
  40c7b8:	cmp    ecx,0xffffffff
  40c7bb:	mov    DWORD PTR [rbx+0x20],eax
  40c7be:	je     0x40c7cf
  40c7c0:	call   0x418488
  40c7c5:	mov    eax,DWORD PTR [rbx+0x20]
  40c7c8:	mov    DWORD PTR [rbx+0x18],0xffffffff
  40c7cf:	add    rsp,0x28
  40c7d3:	pop    rbx
  40c7d4:	pop    rsi
  40c7d5:	ret    
  40c7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7e0:	mov    ecx,DWORD PTR [rbx+0x18]
  40c7e3:	xor    r8d,r8d
  40c7e6:	xor    edx,edx
  40c7e8:	call   0x413a60
  40c7ed:	test   rax,rax
  40c7f0:	js     0x40c7a9
  40c7f2:	mov    ecx,DWORD PTR [rbx+0x18]
  40c7f5:	mov    r8d,DWORD PTR [rbx+0x8]
  40c7f9:	mov    rdx,QWORD PTR [rbx]
  40c7fc:	call   0x4184c0
  40c801:	jmp    0x40c7a9
  40c803:	nop    DWORD PTR [rax]
  40c806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c810:	push   r15
  40c812:	push   r14
  40c814:	push   r13
  40c816:	push   r12
  40c818:	push   rbp
  40c819:	push   rdi
  40c81a:	push   rsi
  40c81b:	push   rbx
  40c81c:	sub    rsp,0x158
  40c823:	mov    r13,rcx
  40c826:	mov    r14d,r8d
  40c829:	mov    rcx,rdx
  40c82c:	mov    eax,DWORD PTR [r13+0x10]
  40c830:	mov    r8d,0x2
  40c836:	mov    edx,0x3
  40c83b:	mov    QWORD PTR [rsp+0xa0],0x0
  40c847:	mov    QWORD PTR [rsp+0xa8],0x0
  40c853:	mov    DWORD PTR [rsp+0xb0],0x2
  40c85e:	mov    DWORD PTR [rsp+0xb4],0x0
  40c869:	mov    DWORD PTR [rsp+0x34],eax
  40c86d:	lea    rax,[rsp+0xe0]
  40c875:	mov    r9,rax
  40c878:	mov    QWORD PTR [rsp+0x38],rax
  40c87d:	call   0x40c540
  40c882:	cmp    rax,0xffffffffffffffff
  40c886:	mov    rbx,rax
  40c889:	je     0x40c9f6
  40c88f:	mov    eax,DWORD PTR [r13+0x10]
  40c893:	mov    esi,0x2
  40c898:	mov    edx,eax
  40c89a:	and    edx,0xfffffffb
  40c89d:	test   r14d,r14d
  40c8a0:	mov    DWORD PTR [r13+0x10],edx
  40c8a4:	je     0x40cd89
  40c8aa:	test   eax,0x80000
  40c8af:	mov    eax,0x1
  40c8b4:	cmove  esi,eax
  40c8b7:	lea    rax,[rsp+0x110]
  40c8bf:	mov    QWORD PTR [rsp+0x48],rax
  40c8c4:	lea    rax,[rsp+0x111]
  40c8cc:	mov    QWORD PTR [rsp+0x50],rax
  40c8d1:	lea    rax,[rsp+0xa0]
  40c8d9:	mov    QWORD PTR [rsp+0x40],rax
  40c8de:	lea    rax,[rsp+0x90]
  40c8e6:	mov    QWORD PTR [rsp+0x58],rax
  40c8eb:	lea    rax,[rsp+0xc0]
  40c8f3:	mov    QWORD PTR [rsp+0x60],rax
  40c8f8:	lea    rax,[rsp+0x9c]
  40c900:	mov    QWORD PTR [rsp+0x68],rax
  40c905:	mov    rax,QWORD PTR [rip+0x16cd4]        # 0x4235e0
  40c90c:	mov    DWORD PTR [rsp+0xb0],esi
  40c913:	test   rax,rax
  40c916:	jne    0x40c924
  40c918:	jmp    0x40cdcd
  40c91d:	nop    DWORD PTR [rax]
  40c920:	add    rbx,0x1
  40c924:	movzx  ecx,BYTE PTR [rbx]
  40c927:	cmp    BYTE PTR [rax+rcx*1],0x0
  40c92b:	mov    rdx,rcx
  40c92e:	jne    0x40c920
  40c930:	cmp    cl,0x7f
  40c933:	ja     0x40ca10
  40c939:	lea    rdi,[rip+0x12240]        # 0x41eb80
  40c940:	movzx  eax,cl
  40c943:	test   DWORD PTR [rdi+rax*4],0x180040
  40c94a:	je     0x40ca10
  40c950:	lea    rbp,[rbx+0x1]
  40c954:	mov    edx,0xa
  40c959:	mov    rcx,rbp
  40c95c:	call   0x418560
  40c961:	test   rax,rax
  40c964:	mov    r12,rax
  40c967:	je     0x40cddc
  40c96d:	mov    rcx,QWORD PTR [rip+0x16cec]        # 0x423660
  40c974:	test   rcx,rcx
  40c977:	je     0x40cfe6
  40c97d:	movzx  eax,BYTE PTR [rbx+0x1]
  40c981:	cmp    BYTE PTR [rcx+rax*1],0x0
  40c985:	je     0x40c99e
  40c987:	nop    WORD PTR [rax+rax*1+0x0]
  40c990:	add    rbp,0x1
  40c994:	movzx  eax,BYTE PTR [rbp+0x0]
  40c998:	cmp    BYTE PTR [rcx+rax*1],0x0
  40c99c:	jne    0x40c990
  40c99e:	mov    r8,QWORD PTR [rip+0x16c3b]        # 0x4235e0
  40c9a5:	test   r8,r8
  40c9a8:	jne    0x40c9b4
  40c9aa:	jmp    0x40cff5
  40c9af:	nop
  40c9b0:	add    rbp,0x1
  40c9b4:	movzx  eax,BYTE PTR [rbp+0x0]
  40c9b8:	cmp    BYTE PTR [r8+rax*1],0x0
  40c9bd:	jne    0x40c9b0
  40c9bf:	cmp    rbp,r12
  40c9c2:	ja     0x40cd5c
  40c9c8:	cmp    al,0x3a
  40c9ca:	je     0x40cd29
  40c9d0:	cmp    al,0x3d
  40c9d2:	je     0x40cd29
  40c9d8:	movzx  eax,BYTE PTR [rbp-0x1]
  40c9dc:	cmp    al,0x7f
  40c9de:	jbe    0x40cdb6
  40c9e4:	mov    rcx,QWORD PTR [rsp+0x38]
  40c9e9:	call   0x40c780
  40c9ee:	mov    eax,DWORD PTR [rsp+0x34]
  40c9f2:	mov    DWORD PTR [r13+0x10],eax
  40c9f6:	add    rsp,0x158
  40c9fd:	pop    rbx
  40c9fe:	pop    rsi
  40c9ff:	pop    rdi
  40ca00:	pop    rbp
  40ca01:	pop    r12
  40ca03:	pop    r13
  40ca05:	pop    r14
  40ca07:	pop    r15
  40ca09:	ret    
  40ca0a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca10:	cmp    dl,0x3c
  40ca13:	je     0x40cae0
  40ca19:	cmp    dl,0x5b
  40ca1c:	je     0x40ca40
  40ca1e:	cmp    dl,0x23
  40ca21:	jne    0x40c9e4
  40ca23:	lea    rcx,[rbx+0x1]
  40ca27:	mov    edx,0xa
  40ca2c:	call   0x418560
  40ca31:	mov    rbx,rax
  40ca34:	test   rbx,rbx
  40ca37:	jne    0x40c905
  40ca3d:	jmp    0x40c9e4
  40ca3f:	nop
  40ca40:	mov    rbp,QWORD PTR [r13+0x30]
  40ca44:	mov    rcx,rbp
  40ca47:	call   0x418538
  40ca4c:	lea    rcx,[rbx+0x1]
  40ca50:	mov    r8,rax
  40ca53:	mov    rdx,rbp
  40ca56:	mov    rdi,rax
  40ca59:	call   0x418530
  40ca5e:	test   eax,eax
  40ca60:	je     0x40cd94
  40ca66:	cmp    rdi,0x10
  40ca6a:	ja     0x40c9e4
  40ca70:	mov    rcx,QWORD PTR [rsp+0x50]
  40ca75:	mov    r8,rdi
  40ca78:	mov    rdx,rbp
  40ca7b:	mov    QWORD PTR [rsp+0x110],0x5b
  40ca87:	mov    QWORD PTR [rsp+0x118],0x0
  40ca93:	mov    QWORD PTR [rsp+0x120],0x0
  40ca9f:	call   0x4185a0
  40caa4:	mov    rdx,QWORD PTR [rsp+0x48]
  40caa9:	mov    rcx,rbx
  40caac:	mov    BYTE PTR [rsp+rdi*1+0x111],0x5d
  40cab4:	mov    BYTE PTR [rsp+rdi*1+0x112],0x0
  40cabc:	call   0x418510
  40cac1:	test   rax,rax
  40cac4:	je     0x40c9e4
  40caca:	mov    edx,0xa
  40cacf:	mov    rcx,rax
  40cad2:	call   0x418560
  40cad7:	mov    rbx,rax
  40cada:	jmp    0x40ca34
  40cadf:	nop
  40cae0:	movzx  eax,BYTE PTR [rbx+0x1]
  40cae4:	cmp    al,0x7f
  40cae6:	ja     0x40ccf0
  40caec:	lea    rdi,[rip+0x1208d]        # 0x41eb80
  40caf3:	movzx  edx,al
  40caf6:	test   DWORD PTR [rdi+rdx*4],0x180040
  40cafd:	je     0x40ccf0
  40cb03:	mov    eax,DWORD PTR [rip+0xcf07]        # 0x419a10
  40cb09:	mov    DWORD PTR [rsp+0x9c],eax
  40cb10:	lea    rax,[rbx+0x1]
  40cb14:	mov    QWORD PTR [rsp+0x70],rax
  40cb19:	mov    rax,QWORD PTR [rip+0x16b40]        # 0x423660
  40cb20:	test   rax,rax
  40cb23:	je     0x40d0b9
  40cb29:	movzx  edx,BYTE PTR [rbx+0x1]
  40cb2d:	mov    r15,QWORD PTR [rsp+0x70]
  40cb32:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cb36:	je     0x40cb4e
  40cb38:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb40:	add    r15,0x1
  40cb44:	movzx  edx,BYTE PTR [r15]
  40cb48:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cb4c:	jne    0x40cb40
  40cb4e:	mov    DWORD PTR [rsp+0xc0],0x1
  40cb59:	movzx  edx,BYTE PTR [r15]
  40cb5d:	cmp    dl,0x20
  40cb60:	je     0x40cf56
  40cb66:	jle    0x40ce76
  40cb6c:	cmp    dl,0x2f
  40cb6f:	je     0x40cfae
  40cb75:	cmp    dl,0x3e
  40cb78:	mov    rbp,r15
  40cb7b:	jne    0x40ce7f
  40cb81:	mov    BYTE PTR [r15],0x0
  40cb85:	mov    rcx,QWORD PTR [rsp+0x70]
  40cb8a:	lea    r12,[rbp+0x1]
  40cb8e:	mov    eax,DWORD PTR [rsp+0x9c]
  40cb95:	mov    DWORD PTR [rsp+0x80],eax
  40cb9c:	call   0x418538
  40cba1:	lea    rcx,[rax+0x4]
  40cba5:	mov    rbx,rax
  40cba8:	cmp    rcx,0x3f
  40cbac:	ja     0x40d007
  40cbb2:	mov    rax,QWORD PTR [rsp+0x48]
  40cbb7:	mov    rdx,QWORD PTR [rsp+0x70]
  40cbbc:	mov    r8,rbx
  40cbbf:	mov    BYTE PTR [rsp+0x110],0x3c
  40cbc7:	mov    BYTE PTR [rsp+0x111],0x2f
  40cbcf:	lea    rcx,[rax+0x2]
  40cbd3:	call   0x4185a0
  40cbd8:	lea    rcx,[rbx+0x3]
  40cbdc:	mov    rdx,QWORD PTR [rsp+0x48]
  40cbe1:	mov    BYTE PTR [rsp+rbx*1+0x112],0x3e
  40cbe9:	mov    BYTE PTR [rsp+rbx*1+0x113],0x0
  40cbf1:	mov    BYTE PTR [rbp+0x1],0x20
  40cbf5:	mov    QWORD PTR [rsp+0x78],rcx
  40cbfa:	mov    rcx,r12
  40cbfd:	call   0x418510
  40cc02:	mov    rdx,rax
  40cc05:	test   rdx,rdx
  40cc08:	je     0x40c9e4
  40cc0e:	mov    rbx,QWORD PTR [rsp+0x78]
  40cc13:	add    rbx,rdx
  40cc16:	cmp    DWORD PTR [rsp+0x80],0x1
  40cc1e:	je     0x40cc66
  40cc20:	mov    r8,QWORD PTR [rip+0x169b9]        # 0x4235e0
  40cc27:	test   r8,r8
  40cc2a:	je     0x40d1cc
  40cc30:	cmp    r12,rdx
  40cc33:	jb     0x40cc5b
  40cc35:	mov    rcx,r12
  40cc38:	mov    QWORD PTR [rsp+0x78],r8
  40cc3d:	call   0x418538
  40cc42:	lea    rdx,[r12+rax*1]
  40cc46:	mov    r8,QWORD PTR [rsp+0x78]
  40cc4b:	cmp    r12,rdx
  40cc4e:	jb     0x40cc5b
  40cc50:	jmp    0x40cc66
  40cc52:	sub    rdx,0x1
  40cc56:	cmp    r12,rdx
  40cc59:	jae    0x40cc66
  40cc5b:	movzx  eax,BYTE PTR [rdx-0x1]
  40cc5f:	cmp    BYTE PTR [r8+rax*1],0x0
  40cc64:	jne    0x40cc52
  40cc66:	test   rbx,rbx
  40cc69:	mov    BYTE PTR [rdx],0x0
  40cc6c:	je     0x40c9e4
  40cc72:	mov    r8,r12
  40cc75:	mov    edx,0x20
  40cc7a:	mov    rcx,r15
  40cc7d:	sub    r8,r15
  40cc80:	call   0x418590
  40cc85:	cmp    DWORD PTR [rsp+0xc0],0x1
  40cc8d:	mov    eax,DWORD PTR [rsp+0x9c]
  40cc94:	jne    0x40cfc8
  40cc9a:	test   eax,eax
  40cc9c:	jne    0x40cfc8
  40cca2:	mov    BYTE PTR [rsp+0x92],0x0
  40ccaa:	add    rbp,0x2
  40ccae:	lea    rax,[rbp-0x1]
  40ccb2:	lea    r9,[r12+0x1]
  40ccb7:	mov    QWORD PTR [rsp+0x78],rax
  40ccbc:	movzx  eax,BYTE PTR [r12]
  40ccc1:	cmp    eax,0x25
  40ccc4:	je     0x40d170
  40ccca:	cmp    eax,0x26
  40cccd:	je     0x40d0e4
  40ccd3:	test   eax,eax
  40ccd5:	je     0x40d0d7
  40ccdb:	mov    r12,r9
  40ccde:	mov    BYTE PTR [rbp-0x1],al
  40cce1:	add    rbp,0x1
  40cce5:	jmp    0x40ccae
  40cce7:	nop    WORD PTR [rax+rax*1+0x0]
  40ccf0:	cmp    al,0x2f
  40ccf2:	je     0x40ce13
  40ccf8:	cmp    al,0x3f
  40ccfa:	je     0x40ce9e
  40cd00:	cmp    al,0x21
  40cd02:	jne    0x40c9e4
  40cd08:	lea    rdx,[rip+0xe168]        # 0x41ae77
  40cd0f:	mov    rcx,rbx
  40cd12:	call   0x418510
  40cd17:	test   rax,rax
  40cd1a:	je     0x40c9e4
  40cd20:	lea    rbx,[rax+0x3]
  40cd24:	jmp    0x40ca34
  40cd29:	mov    rax,QWORD PTR [rip+0x168b0]        # 0x4235e0
  40cd30:	lea    rdi,[rbp+0x1]
  40cd34:	test   rax,rax
  40cd37:	je     0x40d0c8
  40cd3d:	movzx  edx,BYTE PTR [rbp+0x1]
  40cd41:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cd45:	jne    0x40cdf0
  40cd4b:	cmp    r12,rdi
  40cd4e:	jb     0x40cd5c
  40cd50:	cmp    BYTE PTR [r12-0x1],0x5c
  40cd56:	je     0x40ce33
  40cd5c:	lea    rdi,[r12+0x1]
  40cd61:	mov    BYTE PTR [r12],0x0
  40cd66:	mov    rdx,QWORD PTR [rsp+0x40]
  40cd6b:	mov    r8,rbx
  40cd6e:	mov    DWORD PTR [rsp+0x20],0x1
  40cd76:	mov    r9d,r14d
  40cd79:	mov    rcx,r13
  40cd7c:	mov    rbx,rdi
  40cd7f:	call   0x40b710
  40cd84:	jmp    0x40ca34
  40cd89:	mov    sil,0x4
  40cd8c:	mov    r14b,0x1
  40cd8f:	jmp    0x40c8aa
  40cd94:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x5d
  40cd99:	jne    0x40ca66
  40cd9f:	lea    rcx,[rbx+rdi*1+0x2]
  40cda4:	mov    edx,0xa
  40cda9:	call   0x418560
  40cdae:	mov    rbx,rax
  40cdb1:	jmp    0x40ca34
  40cdb6:	test   DWORD PTR [rdi+rax*4],0xc01
  40cdbd:	je     0x40c9e4
  40cdc3:	cmp    BYTE PTR [r12-0x1],0x5c
  40cdc9:	jne    0x40cd5c
  40cdcb:	jmp    0x40ce33
  40cdcd:	mov    ecx,0xc
  40cdd2:	call   0x404060
  40cdd7:	jmp    0x40c924
  40cddc:	mov    rcx,rbp
  40cddf:	call   0x418538
  40cde4:	lea    rbx,[rbp+rax*1+0x0]
  40cde9:	jmp    0x40ca34
  40cdee:	xchg   ax,ax
  40cdf0:	add    rdi,0x1
  40cdf4:	movzx  edx,BYTE PTR [rdi]
  40cdf7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cdfb:	je     0x40cd4b
  40ce01:	add    rdi,0x1
  40ce05:	movzx  edx,BYTE PTR [rdi]
  40ce08:	cmp    BYTE PTR [rax+rdx*1],0x0
  40ce0c:	jne    0x40cdf0
  40ce0e:	jmp    0x40cd4b
  40ce13:	lea    rcx,[rbx+0x2]
  40ce17:	mov    edx,0x3e
  40ce1c:	call   0x418560
  40ce21:	test   rax,rax
  40ce24:	lea    rbx,[rax+0x1]
  40ce28:	jne    0x40ca34
  40ce2e:	jmp    0x40c9e4
  40ce33:	movzx  eax,BYTE PTR [r12]
  40ce38:	lea    rdx,[r12-0x1]
  40ce3d:	lea    rdi,[r12+0x1]
  40ce42:	cmp    al,0xa
  40ce44:	je     0x40ce6e
  40ce46:	cmp    al,0x5c
  40ce48:	je     0x40cf3b
  40ce4e:	test   al,al
  40ce50:	je     0x40cf34
  40ce56:	add    rdx,0x1
  40ce5a:	mov    r12,rdi
  40ce5d:	mov    BYTE PTR [rdx-0x1],al
  40ce60:	movzx  eax,BYTE PTR [r12]
  40ce65:	lea    rdi,[r12+0x1]
  40ce6a:	cmp    al,0xa
  40ce6c:	jne    0x40ce46
  40ce6e:	mov    BYTE PTR [rdx],0x0
  40ce71:	jmp    0x40cd66
  40ce76:	cmp    dl,0x9
  40ce79:	je     0x40cf56
  40ce7f:	mov    edx,0x3e
  40ce84:	mov    rcx,r15
  40ce87:	call   0x418560
  40ce8c:	test   rax,rax
  40ce8f:	je     0x40c9e4
  40ce95:	lea    rbx,[rax+0x1]
  40ce99:	jmp    0x40ca34
  40ce9e:	mov    rdi,QWORD PTR [rip+0x165bb]        # 0x423460
  40cea5:	test   rdi,rdi
  40cea8:	je     0x40d08b
  40ceae:	mov    rcx,rdi
  40ceb1:	call   0x418538
  40ceb6:	mov    r12,rax
  40ceb9:	lea    r15,[rbx+0x2]
  40cebd:	mov    rdx,rdi
  40cec0:	xor    ebp,ebp
  40cec2:	mov    rdi,rbx
  40cec5:	mov    r8,r12
  40cec8:	mov    rcx,r15
  40cecb:	mov    ebx,ebp
  40cecd:	call   0x418530
  40ced2:	test   eax,eax
  40ced4:	jne    0x40cef2
  40ced6:	lea    rdx,[rdi+r12*1+0x2]
  40cedb:	movzx  eax,BYTE PTR [rdx]
  40cede:	cmp    al,0x7f
  40cee0:	ja     0x40cf1b
  40cee2:	lea    rcx,[rip+0x11c97]        # 0x41eb80
  40cee9:	test   DWORD PTR [rcx+rax*4],0x3b0060
  40cef0:	je     0x40cf1b
  40cef2:	cmp    rbp,0x1
  40cef6:	je     0x40ce7f
  40cef8:	mov    rdx,QWORD PTR [rip+0x16569]        # 0x423468
  40ceff:	mov    ebp,0x1
  40cf04:	mov    rcx,rdx
  40cf07:	mov    QWORD PTR [rsp+0x70],rdx
  40cf0c:	call   0x418538
  40cf11:	mov    rdx,QWORD PTR [rsp+0x70]
  40cf16:	mov    r12,rax
  40cf19:	jmp    0x40cec5
  40cf1b:	lea    rax,[rip+0xe31e]        # 0x41b240
  40cf22:	movsxd r12,ebx
  40cf25:	mov    rcx,r13
  40cf28:	call   QWORD PTR [rax+r12*8]
  40cf2c:	mov    rbx,rax
  40cf2f:	jmp    0x40ca34
  40cf34:	xor    edi,edi
  40cf36:	jmp    0x40ce6e
  40cf3b:	cmp    BYTE PTR [r12+0x1],0xa
  40cf41:	jne    0x40ce56
  40cf47:	lea    rdi,[r12+0x2]
  40cf4c:	mov    eax,0xa
  40cf51:	jmp    0x40ce56
  40cf56:	mov    rax,QWORD PTR [rip+0x16683]        # 0x4235e0
  40cf5d:	test   rax,rax
  40cf60:	je     0x40d1b9
  40cf66:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cf6a:	mov    rcx,r15
  40cf6d:	je     0x40cf7d
  40cf6f:	nop
  40cf70:	add    rcx,0x1
  40cf74:	movzx  edx,BYTE PTR [rcx]
  40cf77:	cmp    BYTE PTR [rax+rdx*1],0x0
  40cf7b:	jne    0x40cf70
  40cf7d:	mov    r8,QWORD PTR [rsp+0x60]
  40cf82:	mov    rdx,QWORD PTR [rsp+0x68]
  40cf87:	call   0x406530
  40cf8c:	test   rax,rax
  40cf8f:	mov    rbp,rax
  40cf92:	je     0x40c9e4
  40cf98:	movzx  eax,BYTE PTR [rax]
  40cf9b:	cmp    al,0x3e
  40cf9d:	je     0x40cb81
  40cfa3:	cmp    al,0x2f
  40cfa5:	jne    0x40c9e4
  40cfab:	mov    r15,rbp
  40cfae:	cmp    BYTE PTR [r15+0x1],0x3e
  40cfb3:	jne    0x40c9e4
  40cfb9:	lea    rbx,[r15+0x2]
  40cfbd:	mov    BYTE PTR [r15],0x0
  40cfc1:	mov    eax,DWORD PTR [rsp+0x9c]
  40cfc8:	mov    r8,QWORD PTR [rsp+0x70]
  40cfcd:	mov    rdx,QWORD PTR [rsp+0x40]
  40cfd2:	mov    r9d,r14d
  40cfd5:	mov    DWORD PTR [rsp+0x20],eax
  40cfd9:	mov    rcx,r13
  40cfdc:	call   0x40b710
  40cfe1:	jmp    0x40ca34
  40cfe6:	mov    cl,0x1c
  40cfe8:	call   0x404060
  40cfed:	mov    rcx,rax
  40cff0:	jmp    0x40c97d
  40cff5:	mov    ecx,0xc
  40cffa:	call   0x404060
  40cfff:	mov    r8,rax
  40d002:	jmp    0x40c9b4
  40d007:	call   0x404550
  40d00c:	mov    rdx,QWORD PTR [rsp+0x70]
  40d011:	lea    rcx,[rax+0x2]
  40d015:	mov    r8,rbx
  40d018:	mov    BYTE PTR [rax],0x3c
  40d01b:	mov    BYTE PTR [rax+0x1],0x2f
  40d01f:	mov    QWORD PTR [rsp+0x88],rax
  40d027:	call   0x4185a0
  40d02c:	mov    r11,QWORD PTR [rsp+0x88]
  40d034:	lea    rax,[rbx+0x3]
  40d038:	mov    rcx,r12
  40d03b:	mov    QWORD PTR [rsp+0x78],rax
  40d040:	mov    BYTE PTR [r11+rbx*1+0x2],0x3e
  40d046:	mov    BYTE PTR [r11+rbx*1+0x3],0x0
  40d04c:	mov    rdx,r11
  40d04f:	mov    BYTE PTR [rbp+0x1],0x20
  40d053:	call   0x418510
  40d058:	mov    r11,QWORD PTR [rsp+0x88]
  40d060:	cmp    r11,QWORD PTR [rsp+0x48]
  40d065:	mov    rdx,rax
  40d068:	je     0x40cc05
  40d06e:	mov    rcx,r11
  40d071:	mov    QWORD PTR [rsp+0x88],rax
  40d079:	call   0x4185e0
  40d07e:	mov    rdx,QWORD PTR [rsp+0x88]
  40d086:	jmp    0x40cc05
  40d08b:	lea    rax,[rip+0xef07]        # 0x41bf99
  40d092:	mov    r12d,0x7
  40d098:	lea    rdi,[rip+0xeefa]        # 0x41bf99
  40d09f:	mov    QWORD PTR [rip+0x163ba],rax        # 0x423460
  40d0a6:	lea    rax,[rip+0xeedf]        # 0x41bf8c
  40d0ad:	mov    QWORD PTR [rip+0x163b4],rax        # 0x423468
  40d0b4:	jmp    0x40ceb9
  40d0b9:	mov    ecx,0x1c
  40d0be:	call   0x404060
  40d0c3:	jmp    0x40cb29
  40d0c8:	mov    ecx,0xc
  40d0cd:	call   0x404060
  40d0d2:	jmp    0x40cd3d
  40d0d7:	mov    rax,QWORD PTR [rsp+0x78]
  40d0dc:	mov    BYTE PTR [rax],0x0
  40d0df:	jmp    0x40cfc1
  40d0e4:	mov    QWORD PTR [rsp+0x110],r9
  40d0ec:	movzx  eax,BYTE PTR [r12+0x1]
  40d0f2:	cmp    al,0x23
  40d0f4:	je     0x40d28a
  40d0fa:	movzx  edx,al
  40d0fd:	cmp    edx,0x7f
  40d100:	ja     0x40d217
  40d106:	test   DWORD PTR [rdi+rdx*4],0x30000
  40d10d:	je     0x40d217
  40d113:	mov    rcx,r9
  40d116:	cmp    al,0x58
  40d118:	je     0x40d200
  40d11e:	cmp    al,0x78
  40d120:	je     0x40d200
  40d126:	cmp    al,0x30
  40d128:	mov    r8d,0xa
  40d12e:	je     0x40d1e8
  40d134:	mov    rdx,QWORD PTR [rsp+0x48]
  40d139:	call   0x418500
  40d13e:	cmp    eax,0x7f
  40d141:	mov    r12,QWORD PTR [rsp+0x110]
  40d149:	ja     0x40d0d7
  40d14b:	cmp    BYTE PTR [r12],0x3b
  40d150:	jne    0x40d0d7
  40d152:	add    r12,0x1
  40d156:	test   eax,eax
  40d158:	mov    BYTE PTR [rbp-0x1],al
  40d15b:	jne    0x40cce1
  40d161:	jmp    0x40cfc1
  40d166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d170:	movzx  edx,BYTE PTR [r12+0x1]
  40d176:	lea    r15,[r12+0x3]
  40d17b:	mov    BYTE PTR [rsp+0x90],dl
  40d182:	movzx  eax,BYTE PTR [r12+0x2]
  40d188:	test   dl,dl
  40d18a:	mov    BYTE PTR [rsp+0x91],al
  40d191:	je     0x40d0d7
  40d197:	test   al,al
  40d199:	je     0x40d0d7
  40d19f:	mov    rcx,QWORD PTR [rsp+0x58]
  40d1a4:	mov    r8d,0x10
  40d1aa:	xor    edx,edx
  40d1ac:	mov    r12,r15
  40d1af:	call   0x418500
  40d1b4:	jmp    0x40ccde
  40d1b9:	mov    ecx,0xc
  40d1be:	call   0x404060
  40d1c3:	movzx  edx,BYTE PTR [r15]
  40d1c7:	jmp    0x40cf66
  40d1cc:	mov    ecx,0xc
  40d1d1:	mov    QWORD PTR [rsp+0x78],rdx
  40d1d6:	call   0x404060
  40d1db:	mov    rdx,QWORD PTR [rsp+0x78]
  40d1e0:	mov    r8,rax
  40d1e3:	jmp    0x40cc30
  40d1e8:	cmp    BYTE PTR [rcx+0x1],0x30
  40d1ec:	mov    r8d,0x10
  40d1f2:	mov    eax,0xa
  40d1f7:	cmovne r8d,eax
  40d1fb:	jmp    0x40d134
  40d200:	add    rcx,0x1
  40d204:	mov    r8d,0x10
  40d20a:	mov    QWORD PTR [rsp+0x110],rcx
  40d212:	jmp    0x40d134
  40d217:	lea    r12,[rip+0xe0aa]        # 0x41b2c8
  40d21e:	xor    r15d,r15d
  40d221:	jmp    0x40d235
  40d223:	add    r15d,0x1
  40d227:	add    r12,0x10
  40d22b:	cmp    r15d,0xc
  40d22f:	je     0x40d0d7
  40d235:	movzx  r10d,WORD PTR [r12]
  40d23a:	mov    rdx,QWORD PTR [r12-0x8]
  40d23f:	mov    rcx,r9
  40d242:	mov    QWORD PTR [rsp+0x80],r9
  40d24a:	mov    r8,r10
  40d24d:	mov    QWORD PTR [rsp+0x88],r10
  40d255:	call   0x418530
  40d25a:	test   eax,eax
  40d25c:	mov    r9,QWORD PTR [rsp+0x80]
  40d264:	mov    r10,QWORD PTR [rsp+0x88]
  40d26c:	jne    0x40d223
  40d26e:	movsxd rax,r15d
  40d271:	lea    rcx,[rip+0xe048]        # 0x41b2c0
  40d278:	lea    r12,[r9+r10*1]
  40d27c:	shl    rax,0x4
  40d280:	movsx  eax,WORD PTR [rcx+rax*1+0xa]
  40d285:	jmp    0x40d156
  40d28a:	lea    rcx,[r12+0x2]
  40d28f:	mov    QWORD PTR [rsp+0x110],rcx
  40d297:	movzx  eax,BYTE PTR [r12+0x2]
  40d29d:	jmp    0x40d116
  40d2a2:	nop    DWORD PTR [rax+0x0]
  40d2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d2b0:	push   r15
  40d2b2:	push   r14
  40d2b4:	push   r13
  40d2b6:	push   r12
  40d2b8:	push   rbp
  40d2b9:	push   rdi
  40d2ba:	push   rsi
  40d2bb:	push   rbx
  40d2bc:	sub    rsp,0x188
  40d2c3:	mov    rdx,QWORD PTR [rcx+0x58]
  40d2c7:	test   rdx,rdx
  40d2ca:	je     0x40d369
  40d2d0:	mov    r15d,DWORD PTR [rcx+0x10]
  40d2d4:	mov    eax,r15d
  40d2d7:	and    eax,0xfffffffb
  40d2da:	cmp    QWORD PTR [rdx+0x8],0x0
  40d2df:	mov    DWORD PTR [rcx+0x10],eax
  40d2e2:	je     0x40d473
  40d2e8:	lea    rax,[rdx+0x10]
  40d2ec:	xor    ebx,ebx
  40d2ee:	xchg   ax,ax
  40d2f0:	add    rax,0x8
  40d2f4:	add    ebx,0x1
  40d2f7:	cmp    QWORD PTR [rax-0x8],0x0
  40d2fc:	jne    0x40d2f0
  40d2fe:	mov    rsi,rcx
  40d301:	mov    ebp,0xffffffff
  40d306:	lea    r12,[rsp+0x70]
  40d30b:	lea    r14,[rsp+0x30]
  40d310:	mov    r13,QWORD PTR [rip+0x18601]        # 0x425918
  40d317:	jmp    0x40d34e
  40d319:	nop    DWORD PTR [rax+0x0]
  40d320:	movsxd rax,ebx
  40d323:	mov    edi,ebx
  40d325:	shl    rax,0x3
  40d329:	mov    r8,QWORD PTR [rdx+rax*1]
  40d32d:	test   r8,r8
  40d330:	je     0x40d365
  40d332:	mov    r9,QWORD PTR [rsi+0x20]
  40d336:	mov    edx,0x105
  40d33b:	mov    rcx,r12
  40d33e:	lea    ebx,[rdi+rbp*1]
  40d341:	call   0x4090f0
  40d346:	test   al,al
  40d348:	jne    0x40d380
  40d34a:	mov    rdx,QWORD PTR [rsi+0x58]
  40d34e:	cmp    ebx,0xffffffff
  40d351:	jne    0x40d320
  40d353:	xor    eax,eax
  40d355:	xor    edi,edi
  40d357:	mov    ebp,0x1
  40d35c:	mov    r8,QWORD PTR [rdx+rax*1]
  40d360:	test   r8,r8
  40d363:	jne    0x40d332
  40d365:	mov    DWORD PTR [rsi+0x10],r15d
  40d369:	add    rsp,0x188
  40d370:	pop    rbx
  40d371:	pop    rsi
  40d372:	pop    rdi
  40d373:	pop    rbp
  40d374:	pop    r12
  40d376:	pop    r13
  40d378:	pop    r14
  40d37a:	pop    r15
  40d37c:	ret    
  40d37d:	nop    DWORD PTR [rax]
  40d380:	mov    rdx,r14
  40d383:	mov    rcx,r12
  40d386:	call   r13
  40d389:	test   eax,eax
  40d38b:	jne    0x40d34a
  40d38d:	movzx  eax,WORD PTR [rsp+0x36]
  40d392:	and    ax,0xf000
  40d396:	cmp    ax,0x4000
  40d39a:	jne    0x40d428
  40d3a0:	mov    r9,r12
  40d3a3:	mov    edx,DWORD PTR [r9]
  40d3a6:	add    r9,0x4
  40d3aa:	lea    eax,[rdx-0x1010101]
  40d3b0:	not    edx
  40d3b2:	and    eax,edx
  40d3b4:	and    eax,0x80808080
  40d3b9:	je     0x40d3a3
  40d3bb:	mov    edx,eax
  40d3bd:	shr    edx,0x10
  40d3c0:	test   eax,0x8080
  40d3c5:	cmove  eax,edx
  40d3c8:	lea    rdx,[r9+0x2]
  40d3cc:	cmove  r9,rdx
  40d3d0:	mov    rdx,QWORD PTR [rsi+0x38]
  40d3d4:	add    al,al
  40d3d6:	sbb    r9,0x3
  40d3da:	sub    r9,r12
  40d3dd:	mov    rcx,rdx
  40d3e0:	mov    QWORD PTR [rsp+0x28],r9
  40d3e5:	mov    QWORD PTR [rsp+0x20],rdx
  40d3ea:	call   0x418538
  40d3ef:	mov    r9,QWORD PTR [rsp+0x28]
  40d3f4:	lea    r8,[rax+0x1]
  40d3f8:	mov    rdx,QWORD PTR [rsp+0x20]
  40d3fd:	lea    rax,[r9+r8*1+0x1]
  40d402:	cmp    rax,0x104
  40d408:	ja     0x40d34a
  40d40e:	add    r9,r12
  40d411:	cmp    BYTE PTR [r9-0x1],0x5c
  40d416:	mov    rcx,r9
  40d419:	je     0x40d423
  40d41b:	add    rcx,0x1
  40d41f:	mov    BYTE PTR [r9],0x5c
  40d423:	call   0x4185a0
  40d428:	mov    r8d,ebp
  40d42b:	mov    rdx,r12
  40d42e:	mov    rcx,rsi
  40d431:	call   0x40c810
  40d436:	cmp    ebp,0xffffffff
  40d439:	jne    0x40d34a
  40d43f:	movzx  eax,WORD PTR [rsi+0xaa]
  40d446:	add    rax,0x1
  40d44a:	lea    rdx,[rax+rax*2]
  40d44e:	lea    rax,[rax+rdx*4]
  40d452:	mov    rdx,QWORD PTR [rsi+0x78]
  40d456:	lea    rax,[rdx+rax*8]
  40d45a:	mov    eax,DWORD PTR [rax+0x10]
  40d45d:	shr    eax,0x5
  40d460:	and    eax,0x1
  40d463:	mov    eax,0x1
  40d468:	cmovne ebx,edi
  40d46b:	cmovne ebp,eax
  40d46e:	jmp    0x40d34a
  40d473:	xor    ebx,ebx
  40d475:	jmp    0x40d2fe
  40d47a:	nop    WORD PTR [rax+rax*1+0x0]
  40d480:	push   rdi
  40d481:	push   rsi
  40d482:	push   rbx
  40d483:	sub    rsp,0x20
  40d487:	mov    rbx,rcx
  40d48a:	mov    rdi,rdx
  40d48d:	call   0x405890
  40d492:	test   eax,eax
  40d494:	mov    esi,eax
  40d496:	jne    0x40d4b0
  40d498:	mov    QWORD PTR [rbx+0x28],rdi
  40d49c:	mov    rcx,rbx
  40d49f:	call   0x40d2b0
  40d4a4:	mov    eax,esi
  40d4a6:	add    rsp,0x20
  40d4aa:	pop    rbx
  40d4ab:	pop    rsi
  40d4ac:	pop    rdi
  40d4ad:	ret    
  40d4ae:	xchg   ax,ax
  40d4b0:	mov    esi,0xffffffff
  40d4b5:	jmp    0x40d4a4
  40d4b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d4c0:	push   rsi
  40d4c1:	push   rbx
  40d4c2:	sub    rsp,0x68
  40d4c6:	cmp    rcx,0xf
  40d4ca:	jbe    0x40d4d2
  40d4cc:	test   BYTE PTR [rdx+0x10],0x28
  40d4d0:	je     0x40d4e0
  40d4d2:	add    rsp,0x68
  40d4d6:	pop    rbx
  40d4d7:	pop    rsi
  40d4d8:	ret    
  40d4d9:	nop    DWORD PTR [rax+0x0]
  40d4e0:	mov    rsi,rdx
  40d4e3:	mov    rbx,rcx
  40d4e6:	lea    rdx,[rsp+0x20]
  40d4eb:	mov    rcx,QWORD PTR [rsi+0x18]
  40d4ef:	call   QWORD PTR [rip+0x18423]        # 0x425918
  40d4f5:	test   eax,eax
  40d4f7:	je     0x40d513
  40d4f9:	test   BYTE PTR [rbx+0x10],0x4
  40d4fd:	je     0x40d4d2
  40d4ff:	mov    rcx,QWORD PTR [rbx+0x28]
  40d503:	mov    r8,QWORD PTR [rsi+0x18]
  40d507:	lea    rdx,[rip+0xda82]        # 0x41af90
  40d50e:	call   0x4030d0
  40d513:	movzx  eax,WORD PTR [rsp+0x26]
  40d518:	and    ax,0xf000
  40d51c:	cmp    ax,0x8000
  40d520:	je     0x40d540
  40d522:	test   BYTE PTR [rbx+0x10],0x4
  40d526:	je     0x40d4d2
  40d528:	call   QWORD PTR [rip+0x181f2]        # 0x425720
  40d52e:	mov    DWORD PTR [rax],0x16
  40d534:	jmp    0x40d4ff
  40d536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d540:	mov    rdx,QWORD PTR [rsi+0x18]
  40d544:	xor    r8d,r8d
  40d547:	mov    rcx,rbx
  40d54a:	call   0x40c810
  40d54f:	jmp    0x40d4d2
  40d551:	nop    DWORD PTR [rax+rax*1+0x0]
  40d556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d560:	push   r12
  40d562:	push   rbp
  40d563:	push   rdi
  40d564:	push   rsi
  40d565:	push   rbx
  40d566:	sub    rsp,0x50
  40d56a:	mov    r8d,0x2
  40d570:	mov    edx,0x1
  40d575:	mov    ebp,DWORD PTR [rip+0xc495]        # 0x419a10
  40d57b:	lea    rsi,[rsp+0x20]
  40d580:	mov    rbx,rcx
  40d583:	mov    r9,rsi
  40d586:	call   0x40c540
  40d58b:	cmp    rax,0xffffffffffffffff
  40d58f:	mov    rdi,rax
  40d592:	je     0x40d600
  40d594:	mov    rcx,rbx
  40d597:	mov    DWORD PTR [rip+0xc46f],0x0        # 0x419a10
  40d5a1:	call   0x418538
  40d5a6:	mov    rdx,rbx
  40d5a9:	mov    r8,rax
  40d5ac:	mov    rcx,rdi
  40d5af:	call   0x4079a0
  40d5b4:	test   rax,rax
  40d5b7:	mov    rbx,rax
  40d5ba:	je     0x40d5e0
  40d5bc:	mov    rcx,rsi
  40d5bf:	call   0x40c780
  40d5c4:	mov    DWORD PTR [rip+0xc446],ebp        # 0x419a10
  40d5ca:	mov    rax,rbx
  40d5cd:	add    rsp,0x50
  40d5d1:	pop    rbx
  40d5d2:	pop    rsi
  40d5d3:	pop    rdi
  40d5d4:	pop    rbp
  40d5d5:	pop    r12
  40d5d7:	ret    
  40d5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d5e0:	mov    rdi,QWORD PTR [rip+0x18139]        # 0x425720
  40d5e7:	call   rdi
  40d5e9:	mov    r12d,DWORD PTR [rax]
  40d5ec:	mov    rcx,rsi
  40d5ef:	call   0x40c780
  40d5f4:	call   rdi
  40d5f6:	mov    DWORD PTR [rax],r12d
  40d5f9:	jmp    0x40d5c4
  40d5fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d600:	xor    eax,eax
  40d602:	jmp    0x40d5cd
  40d604:	xchg   ax,ax
  40d606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d610:	push   r13
  40d612:	push   r12
  40d614:	push   rbp
  40d615:	push   rdi
  40d616:	push   rsi
  40d617:	push   rbx
  40d618:	sub    rsp,0x28
  40d61c:	cmp    rcx,0xf
  40d620:	jbe    0x40d62d
  40d622:	test   rdx,rdx
  40d625:	je     0x40d62d
  40d627:	test   BYTE PTR [rdx+0x10],0x8
  40d62b:	je     0x40d640
  40d62d:	add    rsp,0x28
  40d631:	pop    rbx
  40d632:	pop    rsi
  40d633:	pop    rdi
  40d634:	pop    rbp
  40d635:	pop    r12
  40d637:	pop    r13
  40d639:	ret    
  40d63a:	nop    WORD PTR [rax+rax*1+0x0]
  40d640:	mov    rsi,rcx
  40d643:	mov    rcx,QWORD PTR [rdx+0x18]
  40d647:	mov    rbx,rdx
  40d64a:	call   0x4069c0
  40d64f:	cmp    rax,0xffffffffffffffff
  40d653:	mov    rdi,rax
  40d656:	je     0x40d680
  40d658:	test   BYTE PTR [rbx+0x10],0x40
  40d65c:	jne    0x40d670
  40d65e:	mov    DWORD PTR [rbx+0x18],edi
  40d661:	add    rsp,0x28
  40d665:	pop    rbx
  40d666:	pop    rsi
  40d667:	pop    rdi
  40d668:	pop    rbp
  40d669:	pop    r12
  40d66b:	pop    r13
  40d66d:	ret    
  40d66e:	xchg   ax,ax
  40d670:	mov    rcx,QWORD PTR [rbx+0x18]
  40d674:	call   0x4185e0
  40d679:	and    DWORD PTR [rbx+0x10],0xffffffbf
  40d67d:	jmp    0x40d65e
  40d67f:	nop
  40d680:	mov    r13,QWORD PTR [rbx+0x18]
  40d684:	mov    r12,QWORD PTR [rsi+0x28]
  40d688:	mov    rbp,QWORD PTR [rip+0xc539]        # 0x419bc8
  40d68f:	call   QWORD PTR [rip+0x18043]        # 0x4256d8
  40d695:	lea    rcx,[rax+0x60]
  40d699:	mov    r9,r13
  40d69c:	mov    r8,r12
  40d69f:	mov    rdx,rbp
  40d6a2:	call   0x402710
  40d6a7:	test   BYTE PTR [rsi+0x10],0x4
  40d6ab:	je     0x40d658
  40d6ad:	mov    edx,0x1
  40d6b2:	mov    rcx,rsi
  40d6b5:	call   QWORD PTR [rsi+0x98]
  40d6bb:	jmp    0x40d658
  40d6bd:	nop    DWORD PTR [rax]
  40d6c0:	push   rbx
  40d6c1:	sub    rsp,0x20
  40d6c5:	mov    rbx,rdx
  40d6c8:	call   0x40d610
  40d6cd:	cmp    DWORD PTR [rbx+0x18],0xffffffff
  40d6d1:	je     0x40d6de
  40d6d3:	xor    ecx,ecx
  40d6d5:	call   QWORD PTR [rip+0x180b5]        # 0x425790
  40d6db:	add    DWORD PTR [rbx+0x18],eax
  40d6de:	add    rsp,0x20
  40d6e2:	pop    rbx
  40d6e3:	ret    
  40d6e4:	xchg   ax,ax
  40d6e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d6f0:	push   r12
  40d6f2:	push   rbp
  40d6f3:	push   rdi
  40d6f4:	push   rsi
  40d6f5:	push   rbx
  40d6f6:	sub    rsp,0x30
  40d6fa:	test   rcx,rcx
  40d6fd:	mov    rdi,rcx
  40d700:	je     0x40da9e
  40d706:	mov    rax,QWORD PTR [rip+0x15ed3]        # 0x4235e0
  40d70d:	test   rax,rax
  40d710:	je     0x40dac6
  40d716:	movzx  ecx,BYTE PTR [rdi]
  40d719:	mov    rbp,rdi
  40d71c:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d720:	mov    rdx,rcx
  40d723:	je     0x40d736
  40d725:	add    rbp,0x1
  40d729:	movzx  ecx,BYTE PTR [rbp+0x0]
  40d72d:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d731:	mov    rdx,rcx
  40d734:	jne    0x40d725
  40d736:	test   dl,dl
  40d738:	je     0x40da9e
  40d73e:	mov    rsi,rbp
  40d741:	mov    r12d,0x2
  40d747:	nop    WORD PTR [rax+rax*1+0x0]
  40d750:	mov    rax,QWORD PTR [rip+0x15e89]        # 0x4235e0
  40d757:	add    r12d,0x1
  40d75b:	lea    rbx,[rsi+0x1]
  40d75f:	test   rax,rax
  40d762:	je     0x40da07
  40d768:	movzx  edx,BYTE PTR [rsi+0x1]
  40d76c:	test   dl,dl
  40d76e:	je     0x40da78
  40d774:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d778:	mov    rcx,rax
  40d77b:	je     0x40d786
  40d77d:	jmp    0x40d79d
  40d77f:	nop
  40d780:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d784:	jne    0x40d791
  40d786:	add    rbx,0x1
  40d78a:	movzx  edx,BYTE PTR [rbx]
  40d78d:	test   dl,dl
  40d78f:	jne    0x40d780
  40d791:	test   rcx,rcx
  40d794:	je     0x40da30
  40d79a:	mov    rax,rcx
  40d79d:	movzx  edx,BYTE PTR [rbx]
  40d7a0:	movzx  ecx,dl
  40d7a3:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d7a7:	je     0x40d9f7
  40d7ad:	mov    rsi,rbx
  40d7b0:	add    rsi,0x1
  40d7b4:	movzx  ecx,BYTE PTR [rsi]
  40d7b7:	cmp    BYTE PTR [rax+rcx*1],0x0
  40d7bb:	mov    rdx,rcx
  40d7be:	jne    0x40d7b0
  40d7c0:	test   dl,dl
  40d7c2:	jne    0x40d750
  40d7c4:	sub    rsi,rbp
  40d7c7:	movsxd r12,r12d
  40d7ca:	lea    rcx,[rsi+r12*8+0x10]
  40d7cf:	call   0x404550
  40d7d4:	test   rax,rax
  40d7d7:	mov    rbp,rax
  40d7da:	je     0x40dad5
  40d7e0:	lea    rbx,[rax+r12*8]
  40d7e4:	lea    rsi,[rsp+0x2f]
  40d7e9:	mov    QWORD PTR [rax+0x8],rbx
  40d7ed:	xor    eax,eax
  40d7ef:	nop
  40d7f0:	lea    edx,[rax+0x1]
  40d7f3:	mov    DWORD PTR [rbp+0x0],edx
  40d7f6:	mov    QWORD PTR [rbp+rax*8+0x8],rbx
  40d7fb:	movzx  r8d,BYTE PTR [rdi]
  40d7ff:	cmp    r8b,0x7f
  40d803:	ja     0x40d81d
  40d805:	lea    rdx,[rip+0x11374]        # 0x41eb80
  40d80c:	movzx  eax,r8b
  40d810:	test   DWORD PTR [rdx+rax*4],0xc01
  40d817:	jne    0x40d8bd
  40d81d:	cmp    r8b,0x22
  40d821:	je     0x40d910
  40d827:	cmp    r8b,0x27
  40d82b:	je     0x40d850
  40d82d:	test   r8b,r8b
  40d830:	je     0x40d8f0
  40d836:	mov    BYTE PTR [rbx],r8b
  40d839:	movzx  r8d,BYTE PTR [rdi+0x1]
  40d83e:	add    rbx,0x1
  40d842:	add    rdi,0x1
  40d846:	cmp    r8b,0x7f
  40d84a:	ja     0x40d81d
  40d84c:	jmp    0x40d805
  40d84e:	xchg   ax,ax
  40d850:	movzx  r8d,BYTE PTR [rdi+0x1]
  40d855:	lea    rax,[rdi+0x1]
  40d859:	cmp    r8b,0x27
  40d85d:	lea    rdi,[rax+0x1]
  40d861:	je     0x40d88e
  40d863:	cmp    r8b,0x5c
  40d867:	je     0x40d990
  40d86d:	test   r8b,r8b
  40d870:	je     0x40da40
  40d876:	mov    BYTE PTR [rbx],r8b
  40d879:	movzx  r8d,BYTE PTR [rdi]
  40d87d:	mov    rax,rdi
  40d880:	add    rbx,0x1
  40d884:	lea    rdi,[rax+0x1]
  40d888:	cmp    r8b,0x27
  40d88c:	jne    0x40d863
  40d88e:	test   rdi,rdi
  40d891:	je     0x40da40
  40d897:	movzx  r8d,BYTE PTR [rdi]
  40d89b:	cmp    r8b,0x7f
  40d89f:	ja     0x40d7ff
  40d8a5:	lea    rdx,[rip+0x112d4]        # 0x41eb80
  40d8ac:	movzx  eax,r8b
  40d8b0:	test   DWORD PTR [rdx+rax*4],0xc01
  40d8b7:	je     0x40d7ff
  40d8bd:	mov    rax,QWORD PTR [rip+0x15d1c]        # 0x4235e0
  40d8c4:	lea    r12,[rdi+0x1]
  40d8c8:	test   rax,rax
  40d8cb:	je     0x40dab7
  40d8d1:	movzx  edx,BYTE PTR [rdi+0x1]
  40d8d5:	mov    rdi,r12
  40d8d8:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d8dc:	je     0x40d8f0
  40d8de:	xchg   ax,ax
  40d8e0:	add    rdi,0x1
  40d8e4:	movzx  edx,BYTE PTR [rdi]
  40d8e7:	cmp    BYTE PTR [rax+rdx*1],0x0
  40d8eb:	jne    0x40d8e0
  40d8ed:	nop    DWORD PTR [rax]
  40d8f0:	mov    BYTE PTR [rbx],0x0
  40d8f3:	cmp    BYTE PTR [rdi],0x0
  40d8f6:	lea    rdx,[rbx+0x1]
  40d8fa:	mov    eax,DWORD PTR [rbp+0x0]
  40d8fd:	je     0x40da61
  40d903:	mov    rbx,rdx
  40d906:	jmp    0x40d7f0
  40d90b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d910:	add    rdi,0x1
  40d914:	movzx  r8d,BYTE PTR [rdi]
  40d918:	lea    r12,[rdi+0x1]
  40d91c:	cmp    r8b,0x22
  40d920:	mov    BYTE PTR [rsp+0x2f],r8b
  40d925:	je     0x40d942
  40d927:	cmp    r8b,0x5c
  40d92b:	je     0x40d962
  40d92d:	test   r8b,r8b
  40d930:	je     0x40da40
  40d936:	mov    BYTE PTR [rbx],r8b
  40d939:	mov    rdi,r12
  40d93c:	add    rbx,0x1
  40d940:	jmp    0x40d914
  40d942:	test   r12,r12
  40d945:	mov    rdi,r12
  40d948:	je     0x40da40
  40d94e:	movzx  r8d,BYTE PTR [r12]
  40d953:	cmp    r8b,0x7f
  40d957:	ja     0x40d7ff
  40d95d:	jmp    0x40d8a5
  40d962:	mov    r8d,0x7f
  40d968:	mov    rcx,r12
  40d96b:	mov    rdx,rsi
  40d96e:	call   0x407570
  40d973:	movzx  r8d,BYTE PTR [rsp+0x2f]
  40d979:	mov    eax,eax
  40d97b:	add    r12,rax
  40d97e:	mov    rdi,r12
  40d981:	cmp    r8b,0x7f
  40d985:	jne    0x40d936
  40d987:	jmp    0x40d914
  40d989:	nop    DWORD PTR [rax+0x0]
  40d990:	movzx  edx,BYTE PTR [rax+0x1]
  40d994:	cmp    dl,0xd
  40d997:	je     0x40d9d7
  40d999:	ja     0x40d9c0
  40d99b:	test   dl,dl
  40d99d:	je     0x40da40
  40d9a3:	cmp    dl,0xa
  40d9a6:	jne    0x40d876
  40d9ac:	movzx  r8d,BYTE PTR [rax+0x2]
  40d9b1:	add    rax,0x2
  40d9b5:	jmp    0x40d859
  40d9ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d9c0:	cmp    dl,0x27
  40d9c3:	je     0x40d9ef
  40d9c5:	cmp    dl,0x5c
  40d9c8:	jne    0x40d876
  40d9ce:	lea    rdi,[rax+0x2]
  40d9d2:	jmp    0x40d876
  40d9d7:	movzx  r8d,BYTE PTR [rax+0x2]
  40d9dc:	cmp    r8b,0xa
  40d9e0:	je     0x40da90
  40d9e6:	add    rax,0x2
  40d9ea:	jmp    0x40d859
  40d9ef:	mov    r8d,0x27
  40d9f5:	jmp    0x40d9ce
  40d9f7:	test   dl,dl
  40d9f9:	mov    rsi,rbx
  40d9fc:	jne    0x40d750
  40da02:	jmp    0x40d7c4
  40da07:	mov    ecx,0xc
  40da0c:	call   0x404060
  40da11:	movzx  edx,BYTE PTR [rsi+0x1]
  40da15:	mov    rcx,QWORD PTR [rip+0x15bc4]        # 0x4235e0
  40da1c:	test   dl,dl
  40da1e:	jne    0x40d780
  40da24:	jmp    0x40d791
  40da29:	nop    DWORD PTR [rax+0x0]
  40da30:	mov    ecx,0xc
  40da35:	call   0x404060
  40da3a:	jmp    0x40d79d
  40da3f:	nop
  40da40:	mov    rcx,rbp
  40da43:	call   0x4185e0
  40da48:	call   QWORD PTR [rip+0x17cd2]        # 0x425720
  40da4e:	mov    DWORD PTR [rax],0x16
  40da54:	xor    eax,eax
  40da56:	add    rsp,0x30
  40da5a:	pop    rbx
  40da5b:	pop    rsi
  40da5c:	pop    rdi
  40da5d:	pop    rbp
  40da5e:	pop    r12
  40da60:	ret    
  40da61:	mov    QWORD PTR [rbp+rax*8+0x8],0x0
  40da6a:	mov    rax,rbp
  40da6d:	add    rsp,0x30
  40da71:	pop    rbx
  40da72:	pop    rsi
  40da73:	pop    rdi
  40da74:	pop    rbp
  40da75:	pop    r12
  40da77:	ret    
  40da78:	cmp    BYTE PTR [rax],0x0
  40da7b:	jne    0x40d7ad
  40da81:	mov    rsi,rbx
  40da84:	jmp    0x40d7c4
  40da89:	nop    DWORD PTR [rax+0x0]
  40da90:	movzx  r8d,BYTE PTR [rax+0x3]
  40da95:	add    rax,0x3
  40da99:	jmp    0x40d859
  40da9e:	call   QWORD PTR [rip+0x17c7c]        # 0x425720
  40daa4:	mov    DWORD PTR [rax],0x2
  40daaa:	xor    eax,eax
  40daac:	add    rsp,0x30
  40dab0:	pop    rbx
  40dab1:	pop    rsi
  40dab2:	pop    rdi
  40dab3:	pop    rbp
  40dab4:	pop    r12
  40dab6:	ret    
  40dab7:	mov    ecx,0xc
  40dabc:	call   0x404060
  40dac1:	jmp    0x40d8d1
  40dac6:	mov    ecx,0xc
  40dacb:	call   0x404060
  40dad0:	jmp    0x40d716
  40dad5:	call   QWORD PTR [rip+0x17c45]        # 0x425720
  40dadb:	mov    DWORD PTR [rax],0xc
  40dae1:	xor    eax,eax
  40dae3:	jmp    0x40daac
  40dae5:	nop
  40dae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40daf0:	push   r15
  40daf2:	push   r14
  40daf4:	push   r13
  40daf6:	push   r12
  40daf8:	push   rbp
  40daf9:	push   rdi
  40dafa:	push   rsi
  40dafb:	push   rbx
  40dafc:	sub    rsp,0xd8
  40db03:	test   BYTE PTR [rcx+0x11],0x1
  40db07:	jne    0x40db20
  40db09:	add    rsp,0xd8
  40db10:	pop    rbx
  40db11:	pop    rsi
  40db12:	pop    rdi
  40db13:	pop    rbp
  40db14:	pop    r12
  40db16:	pop    r13
  40db18:	pop    r14
  40db1a:	pop    r15
  40db1c:	ret    
  40db1d:	nop    DWORD PTR [rax]
  40db20:	mov    rdi,rcx
  40db23:	mov    rcx,QWORD PTR [rcx+0x30]
  40db27:	mov    ebp,edx
  40db29:	call   0x4185c0
  40db2e:	test   rax,rax
  40db31:	je     0x40dba0
  40db33:	mov    rcx,rax
  40db36:	call   0x40d6f0
  40db3b:	test   rax,rax
  40db3e:	mov    rbx,rax
  40db41:	je     0x40dba0
  40db43:	mov    r13,QWORD PTR [rdi+0x8]
  40db47:	mov    QWORD PTR [rdi+0x8],rax
  40db4b:	mov    eax,DWORD PTR [rax]
  40db4d:	mov    esi,DWORD PTR [rdi+0x10]
  40db50:	mov    r12d,DWORD PTR [rdi+0x4]
  40db54:	mov    DWORD PTR [rdi+0x14],0x1
  40db5b:	mov    QWORD PTR [rdi+0x18],0x0
  40db63:	add    eax,0x1
  40db66:	mov    DWORD PTR [rdi+0x4],eax
  40db69:	mov    eax,esi
  40db6b:	and    eax,0xfffffffb
  40db6e:	cmp    ebp,0x1
  40db71:	mov    DWORD PTR [rdi+0x10],eax
  40db74:	je     0x40dcd0
  40db7a:	jb     0x40dce0
  40db80:	cmp    ebp,0x2
  40db83:	jne    0x40db8d
  40db85:	mov    rcx,rdi
  40db88:	call   0x40b620
  40db8d:	mov    rcx,rbx
  40db90:	call   0x4185e0
  40db95:	mov    QWORD PTR [rdi+0x8],r13
  40db99:	mov    DWORD PTR [rdi+0x4],r12d
  40db9d:	mov    DWORD PTR [rdi+0x10],esi
  40dba0:	lea    r14,[rsp+0x50]
  40dba5:	mov    rax,QWORD PTR [rdi+0x78]
  40dba9:	mov    r9,QWORD PTR [rdi+0x30]
  40dbad:	lea    r8,[rip+0xd581]        # 0x41b135
  40dbb4:	mov    edx,0x80
  40dbb9:	mov    r15d,DWORD PTR [rdi+0xb4]
  40dbc0:	mov    rcx,r14
  40dbc3:	mov    r13d,0x7f
  40dbc9:	mov    QWORD PTR [rsp+0x30],rax
  40dbce:	call   0x402b00
  40dbd3:	movsxd r12,eax
  40dbd6:	lea    esi,[r15-0x1]
  40dbda:	mov    rbx,QWORD PTR [rsp+0x30]
  40dbdf:	add    r12,r14
  40dbe2:	mov    eax,r12d
  40dbe5:	sub    eax,r14d
  40dbe8:	sub    r13,rax
  40dbeb:	lea    rax,[rsp+0x30]
  40dbf0:	test   r15d,r15d
  40dbf3:	mov    QWORD PTR [rsp+0x28],rax
  40dbf8:	jg     0x40dc11
  40dbfa:	jmp    0x40dc60
  40dbfc:	nop    DWORD PTR [rax+0x0]
  40dc00:	sub    esi,0x1
  40dc03:	add    rbx,0x68
  40dc07:	cmp    esi,0xffffffff
  40dc0a:	mov    QWORD PTR [rsp+0x30],rbx
  40dc0f:	je     0x40dc60
  40dc11:	test   BYTE PTR [rbx+0x11],0x1
  40dc15:	jne    0x40dc00
  40dc17:	cmp    WORD PTR [rbx+0x8],0x8000
  40dc1d:	jne    0x40dc00
  40dc1f:	mov    r15,QWORD PTR [rbx+0x48]
  40dc23:	mov    rcx,r15
  40dc26:	call   0x418538
  40dc2b:	lea    r8,[rax+0x1]
  40dc2f:	cmp    r13,r8
  40dc32:	jb     0x40dc00
  40dc34:	mov    rdx,r15
  40dc37:	mov    rcx,r12
  40dc3a:	call   0x4185a0
  40dc3f:	mov    rcx,QWORD PTR [rsp+0x28]
  40dc44:	mov    r9d,ebp
  40dc47:	mov    r8,rdi
  40dc4a:	mov    rdx,r14
  40dc4d:	call   0x4043e0
  40dc52:	mov    rbx,QWORD PTR [rsp+0x30]
  40dc57:	jmp    0x40dc00
  40dc59:	nop    DWORD PTR [rax+0x0]
  40dc60:	movzx  eax,WORD PTR [rdi+0xaa]
  40dc67:	test   ax,0x7fff
  40dc6b:	je     0x40db09
  40dc71:	add    rax,0x1
  40dc75:	lea    rdx,[rax+rax*2]
  40dc79:	lea    rdx,[rax+rdx*4]
  40dc7d:	mov    rax,QWORD PTR [rdi+0x78]
  40dc81:	lea    rax,[rax+rdx*8]
  40dc85:	mov    rbx,QWORD PTR [rax+0x48]
  40dc89:	mov    QWORD PTR [rsp+0x30],rax
  40dc8e:	test   rbx,rbx
  40dc91:	je     0x40db09
  40dc97:	mov    rcx,rbx
  40dc9a:	call   0x418538
  40dc9f:	lea    r8,[rax+0x1]
  40dca3:	cmp    r13,r8
  40dca6:	jb     0x40db09
  40dcac:	mov    rdx,rbx
  40dcaf:	mov    rcx,r12
  40dcb2:	call   0x4185a0
  40dcb7:	lea    rcx,[rsp+0x30]
  40dcbc:	mov    r9d,ebp
  40dcbf:	mov    r8,rdi
  40dcc2:	mov    rdx,r14
  40dcc5:	call   0x4043e0
  40dcca:	jmp    0x40db09
  40dccf:	nop
  40dcd0:	mov    rcx,rdi
  40dcd3:	call   0x40b520
  40dcd8:	jmp    0x40db8d
  40dcdd:	nop    DWORD PTR [rax]
  40dce0:	mov    rcx,rdi
  40dce3:	call   0x40b520
  40dce8:	mov    DWORD PTR [rdi+0x14],0x1
  40dcef:	mov    QWORD PTR [rdi+0x18],0x0
  40dcf7:	jmp    0x40db85
  40dcfc:	nop    DWORD PTR [rax+0x0]
  40dd00:	push   r15
  40dd02:	push   r14
  40dd04:	push   r13
  40dd06:	push   r12
  40dd08:	push   rbp
  40dd09:	push   rdi
  40dd0a:	push   rsi
  40dd0b:	push   rbx
  40dd0c:	sub    rsp,0x68
  40dd10:	mov    ebp,edx
  40dd12:	mov    rdx,QWORD PTR [r8]
  40dd15:	mov    rbx,rcx
  40dd18:	mov    rdi,r8
  40dd1b:	call   0x405890
  40dd20:	test   eax,eax
  40dd22:	mov    esi,eax
  40dd24:	jne    0x40e419
  40dd2a:	mov    eax,DWORD PTR [rbx+0x10]
  40dd2d:	test   al,0x40
  40dd2f:	jne    0x40deb0
  40dd35:	or     eax,0x40
  40dd38:	cmp    DWORD PTR [rbx],0x21fff
  40dd3e:	mov    DWORD PTR [rbx+0x4],ebp
  40dd41:	mov    QWORD PTR [rbx+0x8],rdi
  40dd45:	mov    DWORD PTR [rbx+0x10],eax
  40dd48:	jg     0x40de44
  40dd4e:	mov    rcx,rbx
  40dd51:	call   0x40b520
  40dd56:	test   eax,eax
  40dd58:	jne    0x40de31
  40dd5e:	movzx  eax,WORD PTR [rbx+0xaa]
  40dd65:	test   ax,0x7fff
  40dd69:	jne    0x40de60
  40dd6f:	or     DWORD PTR [rbx+0x10],0x80000
  40dd76:	cmp    QWORD PTR [rbx+0x58],0x0
  40dd7b:	je     0x40e180
  40dd81:	mov    edx,0x1
  40dd86:	mov    rcx,rbx
  40dd89:	call   0x40daf0
  40dd8e:	xchg   ax,ax
  40dd90:	mov    edx,0x2
  40dd95:	mov    rcx,rbx
  40dd98:	call   0x40daf0
  40dd9d:	mov    eax,DWORD PTR [rbx+0x10]
  40dda0:	and    eax,0xfff7ffff
  40dda5:	mov    DWORD PTR [rbx+0x10],eax
  40dda8:	test   ah,0x20
  40ddab:	je     0x40ddcd
  40ddad:	mov    rdx,QWORD PTR [rbx+0xa0]
  40ddb4:	test   rdx,rdx
  40ddb7:	je     0x40ddcd
  40ddb9:	mov    ecx,eax
  40ddbb:	and    ecx,0x30000
  40ddc1:	cmp    ecx,0x10000
  40ddc7:	je     0x40e18f
  40ddcd:	test   ah,0x8
  40ddd0:	jne    0x40dee0
  40ddd6:	mov    DWORD PTR [rbx+0x14],0x1
  40dddd:	mov    QWORD PTR [rbx+0x18],0x0
  40dde5:	mov    rcx,rbx
  40dde8:	call   0x40b620
  40dded:	test   eax,eax
  40ddef:	jne    0x40dec0
  40ddf5:	movzx  eax,WORD PTR [rbx+0xaa]
  40ddfc:	test   ax,ax
  40ddff:	je     0x40de21
  40de01:	cmp    ax,0x8000
  40de05:	je     0x40de21
  40de07:	lea    rdx,[rax+rax*2]
  40de0b:	lea    rax,[rax+rdx*4]
  40de0f:	mov    rdx,QWORD PTR [rbx+0x78]
  40de13:	lea    rax,[rdx+rax*8]
  40de17:	test   BYTE PTR [rax+0x10],0x5
  40de1b:	jne    0x40e4ab
  40de21:	mov    esi,DWORD PTR [rbx+0x10]
  40de24:	test   sil,0x4
  40de28:	jne    0x40dff0
  40de2e:	mov    esi,DWORD PTR [rbx+0x14]
  40de31:	mov    eax,esi
  40de33:	add    rsp,0x68
  40de37:	pop    rbx
  40de38:	pop    rsi
  40de39:	pop    rdi
  40de3a:	pop    rbp
  40de3b:	pop    r12
  40de3d:	pop    r13
  40de3f:	pop    r14
  40de41:	pop    r15
  40de43:	ret    
  40de44:	mov    rax,QWORD PTR [rbx+0xd8]
  40de4b:	mov    QWORD PTR [rip+0xbbb6],rax        # 0x419a08
  40de52:	jmp    0x40dd4e
  40de57:	nop    WORD PTR [rax+rax*1+0x0]
  40de60:	add    rax,0x1
  40de64:	lea    rdx,[rax+rax*2]
  40de68:	lea    rdx,[rax+rdx*4]
  40de6c:	mov    rax,QWORD PTR [rbx+0x78]
  40de70:	lea    rsi,[rax+rdx*8]
  40de74:	test   BYTE PTR [rsi+0x10],0x20
  40de78:	jne    0x40ded0
  40de7a:	or     DWORD PTR [rbx+0x10],0x80000
  40de81:	cmp    QWORD PTR [rbx+0x58],0x0
  40de86:	je     0x40e180
  40de8c:	mov    edx,0x1
  40de91:	mov    rcx,rbx
  40de94:	call   0x40daf0
  40de99:	test   BYTE PTR [rsi+0x10],0x20
  40de9d:	jne    0x40dd90
  40dea3:	mov    rcx,rbx
  40dea6:	call   0x40d2b0
  40deab:	jmp    0x40dd90
  40deb0:	mov    eax,DWORD PTR [rbx+0x14]
  40deb3:	test   eax,eax
  40deb5:	je     0x40ddd6
  40debb:	jmp    0x40dde5
  40dec0:	mov    esi,DWORD PTR [rbx+0x4]
  40dec3:	jmp    0x40de31
  40dec8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ded0:	mov    eax,DWORD PTR [rbx+0x10]
  40ded3:	jmp    0x40dda8
  40ded8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dee0:	lea    rcx,[rip+0xd252]        # 0x41b139
  40dee7:	mov    QWORD PTR [rsp+0x40],0x0
  40def0:	mov    QWORD PTR [rsp+0x48],0x0
  40def9:	mov    DWORD PTR [rsp+0x50],0x4
  40df01:	mov    DWORD PTR [rsp+0x54],0x0
  40df09:	call   0x4185c0
  40df0e:	test   rax,rax
  40df11:	jne    0x40ddd6
  40df17:	test   BYTE PTR [rbx+0x10],0x3
  40df1b:	je     0x40ddd6
  40df21:	mov    ecx,DWORD PTR [rbx+0x4]
  40df24:	shl    rcx,0x3
  40df28:	call   0x404550
  40df2d:	test   rax,rax
  40df30:	mov    r12,rax
  40df33:	je     0x40e37f
  40df39:	mov    ecx,DWORD PTR [rbx+0x4]
  40df3c:	shl    rcx,0x3
  40df40:	call   0x404550
  40df45:	test   rax,rax
  40df48:	mov    rbp,rax
  40df4b:	je     0x40e377
  40df51:	lea    r13,[rsp+0x40]
  40df56:	mov    r8d,DWORD PTR [rbx+0x4]
  40df5a:	mov    DWORD PTR [rbx+0x14],0x1
  40df61:	mov    QWORD PTR [rbx+0x18],0x0
  40df69:	mov    eax,0x1
  40df6e:	xor    edi,edi
  40df70:	lea    rcx,[r13+0x14]
  40df74:	xor    esi,esi
  40df76:	mov    QWORD PTR [rsp+0x38],rcx
  40df7b:	cmp    r8d,eax
  40df7e:	jbe    0x40dfa9
  40df80:	mov    rcx,QWORD PTR [rbx+0x8]
  40df84:	mov    edx,eax
  40df86:	mov    r14,QWORD PTR [rcx+rdx*8]
  40df8a:	cmp    BYTE PTR [r14],0x2d
  40df8e:	je     0x40e1de
  40df94:	add    eax,0x1
  40df97:	mov    edx,esi
  40df99:	add    esi,0x1
  40df9c:	cmp    r8d,eax
  40df9f:	mov    DWORD PTR [rbx+0x14],eax
  40dfa2:	mov    QWORD PTR [rbp+rdx*8+0x0],r14
  40dfa7:	ja     0x40df80
  40dfa9:	call   QWORD PTR [rip+0x17771]        # 0x425720
  40dfaf:	mov    DWORD PTR [rax],0x0
  40dfb5:	test   edi,edi
  40dfb7:	jne    0x40e3fd
  40dfbd:	test   esi,esi
  40dfbf:	je     0x40dfd9
  40dfc1:	mov    rax,QWORD PTR [rbx+0x8]
  40dfc5:	mov    r8d,esi
  40dfc8:	mov    rdx,rbp
  40dfcb:	shl    r8,0x3
  40dfcf:	lea    rcx,[rax+rdi*8+0x8]
  40dfd4:	call   0x4185a0
  40dfd9:	mov    rcx,r12
  40dfdc:	call   0x4185e0
  40dfe1:	mov    rcx,rbp
  40dfe4:	call   0x4185e0
  40dfe9:	jmp    0x40ddd6
  40dfee:	xchg   ax,ax
  40dff0:	mov    r9,QWORD PTR [rbx+0x78]
  40dff4:	mov    r10d,DWORD PTR [rbx+0xb4]
  40dffb:	mov    rcx,r9
  40dffe:	jmp    0x40e028
  40e000:	movzx  eax,WORD PTR [rcx+0x8]
  40e004:	cmp    ax,0x8000
  40e008:	je     0x40e0d3
  40e00e:	cmp    ax,WORD PTR [rcx]
  40e011:	je     0x40e0d3
  40e017:	sub    r10d,0x1
  40e01b:	test   r10d,r10d
  40e01e:	jle    0x40e1a1
  40e024:	add    rcx,0x68
  40e028:	mov    r11d,DWORD PTR [rcx+0x10]
  40e02c:	test   r11b,0x5
  40e030:	je     0x40e000
  40e032:	mov    rdx,QWORD PTR [rcx+0x28]
  40e036:	test   rdx,rdx
  40e039:	jne    0x40e05a
  40e03b:	jmp    0x40e064
  40e03d:	nop    DWORD PTR [rax]
  40e040:	lea    r8,[rax+rax*2]
  40e044:	add    rdx,0x4
  40e048:	lea    rax,[rax+r8*4]
  40e04c:	lea    rax,[r9+rax*8]
  40e050:	test   BYTE PTR [rax+0x10],0xf
  40e054:	je     0x40e130
  40e05a:	movsxd rax,DWORD PTR [rdx]
  40e05d:	cmp    eax,0x8000
  40e062:	jne    0x40e040
  40e064:	mov    rdx,QWORD PTR [rcx+0x30]
  40e068:	test   rdx,rdx
  40e06b:	je     0x40e000
  40e06d:	nop    DWORD PTR [rax]
  40e070:	movsxd rax,DWORD PTR [rdx]
  40e073:	cmp    eax,0x8000
  40e078:	je     0x40e000
  40e07a:	lea    r8,[rax+rax*2]
  40e07e:	add    rdx,0x4
  40e082:	lea    rax,[rax+r8*4]
  40e086:	lea    rax,[r9+rax*8]
  40e08a:	test   BYTE PTR [rax+0x10],0x5
  40e08e:	je     0x40e070
  40e090:	mov    r12,QWORD PTR [rax+0x50]
  40e094:	mov    rbp,QWORD PTR [rcx+0x50]
  40e098:	mov    rdi,QWORD PTR [rbx+0x28]
  40e09c:	mov    rsi,QWORD PTR [rip+0xba75]        # 0x419b18
  40e0a3:	call   QWORD PTR [rip+0x1762f]        # 0x4256d8
  40e0a9:	lea    rcx,[rax+0x60]
  40e0ad:	mov    QWORD PTR [rsp+0x20],r12
  40e0b2:	mov    r9,rbp
  40e0b5:	mov    r8,rdi
  40e0b8:	mov    rdx,rsi
  40e0bb:	call   0x402710
  40e0c0:	mov    edx,0x1
  40e0c5:	mov    rcx,rbx
  40e0c8:	call   QWORD PTR [rbx+0x98]
  40e0ce:	jmp    0x40de2e
  40e0d3:	movzx  edi,WORD PTR [rcx+0xa]
  40e0d7:	cmp    WORD PTR [rcx+0xe],di
  40e0db:	jae    0x40e017
  40e0e1:	test   r11d,0x100000
  40e0e8:	je     0x40e0f4
  40e0ea:	and    r11d,0x3
  40e0ee:	jne    0x40e017
  40e0f4:	cmp    di,0x1
  40e0f8:	jbe    0x40e150
  40e0fa:	mov    r12,QWORD PTR [rcx+0x50]
  40e0fe:	mov    rbp,QWORD PTR [rbx+0x28]
  40e102:	mov    rsi,QWORD PTR [rip+0xbac7]        # 0x419bd0
  40e109:	call   QWORD PTR [rip+0x175c9]        # 0x4256d8
  40e10f:	lea    rcx,[rax+0x60]
  40e113:	mov    DWORD PTR [rsp+0x20],edi
  40e117:	mov    r9,r12
  40e11a:	mov    r8,rbp
  40e11d:	mov    rdx,rsi
  40e120:	call   0x402710
  40e125:	jmp    0x40e0c0
  40e127:	nop    WORD PTR [rax+rax*1+0x0]
  40e130:	mov    r12,QWORD PTR [rax+0x50]
  40e134:	mov    rbp,QWORD PTR [rcx+0x50]
  40e138:	mov    rdi,QWORD PTR [rbx+0x28]
  40e13c:	mov    rsi,QWORD PTR [rip+0xbad5]        # 0x419c18
  40e143:	jmp    0x40e0a3
  40e148:	nop    DWORD PTR [rax+rax*1+0x0]
  40e150:	mov    rbp,QWORD PTR [rcx+0x50]
  40e154:	mov    rdi,QWORD PTR [rbx+0x28]
  40e158:	mov    rsi,QWORD PTR [rip+0xba11]        # 0x419b70
  40e15f:	call   QWORD PTR [rip+0x17573]        # 0x4256d8
  40e165:	lea    rcx,[rax+0x60]
  40e169:	mov    r9,rbp
  40e16c:	mov    r8,rdi
  40e16f:	mov    rdx,rsi
  40e172:	call   0x402710
  40e177:	jmp    0x40e0c0
  40e17c:	nop    DWORD PTR [rax+0x0]
  40e180:	xor    edx,edx
  40e182:	mov    rcx,rbx
  40e185:	call   0x40daf0
  40e18a:	jmp    0x40dd9d
  40e18f:	and    eax,0xfffeffff
  40e194:	mov    DWORD PTR [rbx+0x10],eax
  40e197:	call   rdx
  40e199:	mov    eax,DWORD PTR [rbx+0x10]
  40e19c:	jmp    0x40ddcd
  40e1a1:	test   esi,0x200
  40e1a7:	je     0x40e25a
  40e1ad:	mov    esi,DWORD PTR [rbx+0x14]
  40e1b0:	cmp    DWORD PTR [rbx+0x4],esi
  40e1b3:	jbe    0x40de31
  40e1b9:	mov    rdi,QWORD PTR [rbx+0x28]
  40e1bd:	mov    rsi,QWORD PTR [rip+0xb9bc]        # 0x419b80
  40e1c4:	call   QWORD PTR [rip+0x1750e]        # 0x4256d8
  40e1ca:	lea    rcx,[rax+0x60]
  40e1ce:	mov    r8,rdi
  40e1d1:	mov    rdx,rsi
  40e1d4:	call   0x402710
  40e1d9:	jmp    0x40e0c0
  40e1de:	movzx  edx,BYTE PTR [r14+0x1]
  40e1e3:	test   dl,dl
  40e1e5:	je     0x40df94
  40e1eb:	cmp    dl,0x2d
  40e1ee:	jne    0x40e2e0
  40e1f4:	cmp    BYTE PTR [r14+0x2],0x0
  40e1f9:	je     0x40e4ba
  40e1ff:	lea    rdx,[r14+0x2]
  40e203:	mov    r8,r13
  40e206:	mov    rcx,rbx
  40e209:	call   0x40af60
  40e20e:	test   eax,eax
  40e210:	js     0x40e3ec
  40e216:	mov    r8d,DWORD PTR [rbx+0x14]
  40e21a:	mov    rcx,QWORD PTR [rbx+0x8]
  40e21e:	lea    r15d,[rdi+0x1]
  40e222:	lea    eax,[r8+0x1]
  40e226:	mov    rdx,r8
  40e229:	mov    r8,QWORD PTR [rcx+r8*8]
  40e22d:	mov    ecx,edi
  40e22f:	mov    DWORD PTR [rbx+0x14],eax
  40e232:	mov    QWORD PTR [r12+rcx*8],r8
  40e236:	mov    rcx,QWORD PTR [rsp+0x40]
  40e23b:	mov    ecx,DWORD PTR [rcx+0x10]
  40e23e:	test   ch,0xf0
  40e241:	jne    0x40e282
  40e243:	cmp    DWORD PTR [rsp+0x54],0x1
  40e248:	je     0x40e390
  40e24e:	mov    r8d,DWORD PTR [rbx+0x4]
  40e252:	mov    edi,r15d
  40e255:	jmp    0x40df7b
  40e25a:	and    esi,0x400
  40e260:	je     0x40de2e
  40e266:	mov    esi,DWORD PTR [rbx+0x14]
  40e269:	cmp    DWORD PTR [rbx+0x4],esi
  40e26c:	ja     0x40de31
  40e272:	mov    rdi,QWORD PTR [rbx+0x28]
  40e276:	mov    rsi,QWORD PTR [rip+0xb873]        # 0x419af0
  40e27d:	jmp    0x40e1c4
  40e282:	and    ecx,0x10000
  40e288:	mov    r8,QWORD PTR [rsp+0x48]
  40e28d:	mov    ecx,DWORD PTR [rsp+0x54]
  40e291:	je     0x40e30f
  40e293:	cmp    ecx,0x1
  40e296:	je     0x40e35b
  40e29c:	cmp    ecx,0x2
  40e29f:	jne    0x40e34a
  40e2a5:	test   r8,r8
  40e2a8:	jne    0x40e24e
  40e2aa:	mov    r8d,DWORD PTR [rbx+0x4]
  40e2ae:	cmp    eax,r8d
  40e2b1:	jae    0x40e497
  40e2b7:	mov    r9,QWORD PTR [rbx+0x8]
  40e2bb:	mov    ecx,eax
  40e2bd:	mov    rcx,QWORD PTR [r9+rcx*8]
  40e2c1:	cmp    BYTE PTR [rcx],0x2d
  40e2c4:	je     0x40e252
  40e2c6:	lea    eax,[rdx+0x2]
  40e2c9:	mov    r10d,r15d
  40e2cc:	lea    r15d,[rdi+0x2]
  40e2d0:	mov    DWORD PTR [rbx+0x14],eax
  40e2d3:	mov    QWORD PTR [r12+r10*8],rcx
  40e2d7:	jmp    0x40e252
  40e2dc:	nop    DWORD PTR [rax+0x0]
  40e2e0:	test   BYTE PTR [rbx+0x10],0x2
  40e2e4:	jne    0x40e2fa
  40e2e6:	lea    rdx,[r14+0x1]
  40e2ea:	mov    r8,r13
  40e2ed:	mov    rcx,rbx
  40e2f0:	call   0x40af60
  40e2f5:	jmp    0x40e20e
  40e2fa:	mov    r9,QWORD PTR [rsp+0x38]
  40e2ff:	mov    r8,r13
  40e302:	mov    rcx,rbx
  40e305:	call   0x403d10
  40e30a:	jmp    0x40e20e
  40e30f:	cmp    ecx,0x1
  40e312:	je     0x40e36b
  40e314:	cmp    ecx,0x2
  40e317:	jne    0x40e34a
  40e319:	test   r8,r8
  40e31c:	jne    0x40e24e
  40e322:	mov    r8d,DWORD PTR [rbx+0x4]
  40e326:	cmp    eax,r8d
  40e329:	jae    0x40e34a
  40e32b:	mov    rcx,QWORD PTR [rbx+0x8]
  40e32f:	add    edx,0x2
  40e332:	mov    r10d,r15d
  40e335:	mov    DWORD PTR [rbx+0x14],edx
  40e338:	add    edi,0x2
  40e33b:	mov    rax,QWORD PTR [rcx+rax*8]
  40e33f:	mov    QWORD PTR [r12+r10*8],rax
  40e343:	mov    eax,edx
  40e345:	jmp    0x40df7b
  40e34a:	call   QWORD PTR [rip+0x173d0]        # 0x425720
  40e350:	mov    DWORD PTR [rax],0x5
  40e356:	jmp    0x40dfd9
  40e35b:	cmp    BYTE PTR [r14+0x2],0x0
  40e360:	je     0x40e2aa
  40e366:	jmp    0x40e24e
  40e36b:	cmp    BYTE PTR [r14+0x2],0x0
  40e370:	je     0x40e322
  40e372:	jmp    0x40e24e
  40e377:	mov    rcx,r12
  40e37a:	call   0x4185e0
  40e37f:	call   QWORD PTR [rip+0x1739b]        # 0x425720
  40e385:	mov    DWORD PTR [rax],0xc
  40e38b:	jmp    0x40ddd6
  40e390:	movzx  eax,BYTE PTR [r14+0x2]
  40e395:	lea    r11,[r14+0x2]
  40e399:	lea    r14,[r13+0x14]
  40e39d:	test   al,al
  40e39f:	jne    0x40e3d2
  40e3a1:	jmp    0x40e48f
  40e3a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e3b0:	mov    rax,QWORD PTR [rsp+0x40]
  40e3b5:	mov    r11,QWORD PTR [rsp+0x30]
  40e3ba:	mov    eax,DWORD PTR [rax+0x10]
  40e3bd:	test   ah,0xf0
  40e3c0:	jne    0x40e425
  40e3c2:	add    r11,0x1
  40e3c6:	movzx  eax,BYTE PTR [r11]
  40e3ca:	test   al,al
  40e3cc:	je     0x40e48f
  40e3d2:	movzx  edx,al
  40e3d5:	mov    r9,r14
  40e3d8:	mov    r8,r13
  40e3db:	mov    rcx,rbx
  40e3de:	mov    QWORD PTR [rsp+0x30],r11
  40e3e3:	call   0x403d10
  40e3e8:	test   eax,eax
  40e3ea:	jns    0x40e3b0
  40e3ec:	call   QWORD PTR [rip+0x1732e]        # 0x425720
  40e3f2:	mov    DWORD PTR [rax],0x16
  40e3f8:	jmp    0x40dfd9
  40e3fd:	mov    rax,QWORD PTR [rbx+0x8]
  40e401:	mov    r8d,edi
  40e404:	mov    rdx,r12
  40e407:	shl    r8,0x3
  40e40b:	lea    rcx,[rax+0x8]
  40e40f:	call   0x4185a0
  40e414:	jmp    0x40dfbd
  40e419:	mov    rcx,QWORD PTR [rip+0xb698]        # 0x419ab8
  40e420:	call   0x402b80
  40e425:	test   eax,0x10000
  40e42a:	je     0x40e463
  40e42c:	cmp    BYTE PTR [r11+0x1],0x0
  40e431:	jne    0x40e48f
  40e433:	mov    ecx,DWORD PTR [rbx+0x14]
  40e436:	mov    rdx,QWORD PTR [rbx+0x8]
  40e43a:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40e43e:	mov    rax,rcx
  40e441:	cmp    BYTE PTR [rdx],0x2d
  40e444:	je     0x40e24e
  40e44a:	add    eax,0x1
  40e44d:	mov    r10d,r15d
  40e450:	lea    r15d,[rdi+0x2]
  40e454:	mov    DWORD PTR [rbx+0x14],eax
  40e457:	mov    QWORD PTR [r12+r10*8],rdx
  40e45b:	mov    eax,DWORD PTR [rbx+0x14]
  40e45e:	jmp    0x40e24e
  40e463:	cmp    BYTE PTR [r11+0x1],0x0
  40e468:	jne    0x40e48f
  40e46a:	mov    eax,DWORD PTR [rbx+0x14]
  40e46d:	cmp    eax,DWORD PTR [rbx+0x4]
  40e470:	jae    0x40e3ec
  40e476:	mov    rdx,QWORD PTR [rbx+0x8]
  40e47a:	lea    ecx,[rax+0x1]
  40e47d:	mov    r10d,r15d
  40e480:	lea    r15d,[rdi+0x2]
  40e484:	mov    DWORD PTR [rbx+0x14],ecx
  40e487:	mov    rax,QWORD PTR [rdx+rax*8]
  40e48b:	mov    QWORD PTR [r12+r10*8],rax
  40e48f:	mov    eax,DWORD PTR [rbx+0x14]
  40e492:	jmp    0x40e24e
  40e497:	call   QWORD PTR [rip+0x17283]        # 0x425720
  40e49d:	mov    edi,r15d
  40e4a0:	mov    DWORD PTR [rax],0x0
  40e4a6:	jmp    0x40dfb5
  40e4ab:	mov    rcx,rbx
  40e4ae:	call   0x40aa50
  40e4b3:	xor    ecx,ecx
  40e4b5:	call   0x402b50
  40e4ba:	lea    ecx,[rax+0x1]
  40e4bd:	mov    edx,edi
  40e4bf:	add    edi,0x1
  40e4c2:	mov    r9d,esi
  40e4c5:	cmp    ecx,r8d
  40e4c8:	mov    DWORD PTR [rbx+0x14],ecx
  40e4cb:	mov    QWORD PTR [r12+rdx*8],r14
  40e4cf:	mov    edx,ecx
  40e4d1:	jae    0x40dfb5
  40e4d7:	mov    r10,QWORD PTR [rbx+0x8]
  40e4db:	mov    r11d,edx
  40e4de:	add    edx,0x1
  40e4e1:	mov    r11,QWORD PTR [r10+r11*8]
  40e4e5:	mov    r10d,esi
  40e4e8:	add    esi,0x1
  40e4eb:	cmp    edx,r8d
  40e4ee:	mov    QWORD PTR [rbp+r10*8+0x0],r11
  40e4f3:	jne    0x40e4d7
  40e4f5:	lea    esi,[rdx+r9*1-0x1]
  40e4fa:	lea    edx,[rdx+rcx*1-0x1]
  40e4fe:	sub    edx,eax
  40e500:	sub    esi,eax
  40e502:	mov    DWORD PTR [rbx+0x14],edx
  40e505:	jmp    0x40dfb5
  40e50a:	nop    WORD PTR [rax+rax*1+0x0]
  40e510:	push   rsi
  40e511:	push   rbx
  40e512:	sub    rsp,0x38
  40e516:	mov    rbx,rcx
  40e519:	lea    rcx,[rcx+0x10]
  40e51d:	mov    esi,edx
  40e51f:	xor    edx,edx
  40e521:	mov    QWORD PTR [rsp+0x28],0x0
  40e52a:	call   0x40bf30
  40e52f:	test   esi,esi
  40e531:	mov    ecx,DWORD PTR [rbx+0x10]
  40e534:	je     0x40e542
  40e536:	test   ch,0x40
  40e539:	je     0x40e542
  40e53b:	add    rsp,0x38
  40e53f:	pop    rbx
  40e540:	pop    rsi
  40e541:	ret    
  40e542:	test   ch,0x10
  40e545:	lea    rdx,[rsp+0x28]
  40e54a:	jne    0x40e5b0
  40e54c:	call   0x403560
  40e551:	mov    r8,QWORD PTR [rsp+0x28]
  40e556:	mov    edx,esi
  40e558:	mov    rcx,rbx
  40e55b:	call   0x406140
  40e560:	mov    rcx,QWORD PTR [rip+0x14ee1]        # 0x423448
  40e567:	call   0x418618
  40e56c:	mov    rcx,QWORD PTR [rip+0x14ed5]        # 0x423448
  40e573:	call   0x418620
  40e578:	test   eax,eax
  40e57a:	je     0x40e53b
  40e57c:	call   QWORD PTR [rip+0x17156]        # 0x4256d8
  40e582:	add    rax,0x60
  40e586:	cmp    QWORD PTR [rip+0x14ebb],rax        # 0x423448
  40e58d:	mov    r8,QWORD PTR [rip+0xb664]        # 0x419bf8
  40e594:	cmove  r8,QWORD PTR [rip+0xb664]        # 0x419c00
  40e59c:	mov    rcx,QWORD PTR [rbx+0x28]
  40e5a0:	mov    rdx,QWORD PTR [rip+0xb661]        # 0x419c08
  40e5a7:	call   0x4030d0
  40e5ac:	nop    DWORD PTR [rax+0x0]
  40e5b0:	call   0x403420
  40e5b5:	jmp    0x40e551
  40e5b7:	nop    WORD PTR [rax+rax*1+0x0]
  40e5c0:	push   r15
  40e5c2:	push   r14
  40e5c4:	push   r13
  40e5c6:	push   r12
  40e5c8:	push   rbp
  40e5c9:	push   rdi
  40e5ca:	push   rsi
  40e5cb:	push   rbx
  40e5cc:	sub    rsp,0x28
  40e5d0:	mov    rbx,rcx
  40e5d3:	mov    esi,edx
  40e5d5:	mov    r12,r8
  40e5d8:	call   0x418538
  40e5dd:	cmp    rax,0xff
  40e5e3:	mov    rbp,rax
  40e5e6:	jbe    0x40e6d5
  40e5ec:	test   sil,sil
  40e5ef:	jne    0x40e6d5
  40e5f5:	mov    rcx,rbx
  40e5f8:	call   0x4042c0
  40e5fd:	mov    rdi,QWORD PTR [rip+0x1722c]        # 0x425830
  40e604:	mov    r13,rax
  40e607:	mov    rsi,rax
  40e60a:	mov    r14,rsi
  40e60d:	nop    DWORD PTR [rax]
  40e610:	mov    edx,0xa
  40e615:	mov    rcx,r14
  40e618:	call   0x418560
  40e61d:	test   rax,rax
  40e620:	mov    rbx,rax
  40e623:	je     0x40e6b0
  40e629:	sub    rax,rsi
  40e62c:	lea    r14,[rbx+0x1]
  40e630:	cmp    rax,0x27
  40e634:	jle    0x40e610
  40e636:	movsx  ecx,BYTE PTR [rbx+0x1]
  40e63a:	mov    r15d,ecx
  40e63d:	call   rdi
  40e63f:	test   eax,eax
  40e641:	je     0x40e610
  40e643:	cmp    r15b,0x9
  40e647:	je     0x40e610
  40e649:	cmp    r15b,0xa
  40e64d:	je     0x40e673
  40e64f:	cmp    r15b,0x20
  40e653:	jne    0x40e681
  40e655:	add    rbx,0x8
  40e659:	mov    rdx,r14
  40e65c:	nop    DWORD PTR [rax+0x0]
  40e660:	add    rdx,0x1
  40e664:	cmp    BYTE PTR [rdx],0x20
  40e667:	jne    0x40e681
  40e669:	cmp    rdx,rbx
  40e66c:	jne    0x40e660
  40e66e:	mov    r14,rdx
  40e671:	jmp    0x40e610
  40e673:	add    r14,0x1
  40e677:	movzx  r15d,BYTE PTR [r14]
  40e67b:	cmp    r15b,0xa
  40e67f:	je     0x40e673
  40e681:	xor    edx,edx
  40e683:	mov    rcx,rsi
  40e686:	mov    BYTE PTR [r14],0x0
  40e68a:	mov    r8,r12
  40e68d:	sub    rsi,r14
  40e690:	call   0x40a230
  40e695:	add    rbp,rsi
  40e698:	je     0x40e6bd
  40e69a:	cmp    rbp,0xff
  40e6a1:	mov    BYTE PTR [r14],r15b
  40e6a4:	mov    rsi,r14
  40e6a7:	ja     0x40e60a
  40e6ad:	nop    DWORD PTR [rax]
  40e6b0:	mov    r8,r12
  40e6b3:	xor    edx,edx
  40e6b5:	mov    rcx,rsi
  40e6b8:	call   0x40a230
  40e6bd:	mov    rcx,r13
  40e6c0:	add    rsp,0x28
  40e6c4:	pop    rbx
  40e6c5:	pop    rsi
  40e6c6:	pop    rdi
  40e6c7:	pop    rbp
  40e6c8:	pop    r12
  40e6ca:	pop    r13
  40e6cc:	pop    r14
  40e6ce:	pop    r15
  40e6d0:	jmp    0x4185e0
  40e6d5:	movzx  edx,sil
  40e6d9:	mov    r8,r12
  40e6dc:	mov    rcx,rbx
  40e6df:	add    rsp,0x28
  40e6e3:	pop    rbx
  40e6e4:	pop    rsi
  40e6e5:	pop    rdi
  40e6e6:	pop    rbp
  40e6e7:	pop    r12
  40e6e9:	pop    r13
  40e6eb:	pop    r14
  40e6ed:	pop    r15
  40e6ef:	jmp    0x40a230
  40e6f4:	xchg   ax,ax
  40e6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e700:	push   rbp
  40e701:	push   rdi
  40e702:	push   rsi
  40e703:	push   rbx
  40e704:	sub    rsp,0x58
  40e708:	mov    BYTE PTR [rip+0x14d91],0x0        # 0x4234a0
  40e70f:	mov    ebp,edx
  40e711:	xor    edx,edx
  40e713:	mov    rbx,rcx
  40e716:	cmp    ebp,0x2750
  40e71c:	lea    rcx,[rcx+0x10]
  40e720:	je     0x40e764
  40e722:	call   0x40bf30
  40e727:	test   ebp,ebp
  40e729:	je     0x40e769
  40e72b:	cmp    DWORD PTR [rbx],0x1dfff
  40e731:	jle    0x40e986
  40e737:	cmp    QWORD PTR [rip+0x14d09],0x0        # 0x423448
  40e73f:	mov    rcx,QWORD PTR [rbx+0xc0]
  40e746:	je     0x40ec2e
  40e74c:	test   rcx,rcx
  40e74f:	mov    eax,DWORD PTR [rbx+0x10]
  40e752:	je     0x40e994
  40e758:	test   eax,0x100000
  40e75d:	je     0x40e79f
  40e75f:	jmp    0x40e994
  40e764:	call   0x40bf30
  40e769:	cmp    DWORD PTR [rbx],0x1dfff
  40e76f:	jle    0x40e809
  40e775:	cmp    QWORD PTR [rip+0x14ccb],0x0        # 0x423448
  40e77d:	mov    rcx,QWORD PTR [rbx+0xb8]
  40e784:	je     0x40eb77
  40e78a:	test   rcx,rcx
  40e78d:	mov    eax,DWORD PTR [rbx+0x10]
  40e790:	je     0x40e817
  40e796:	test   eax,0x100000
  40e79b:	jne    0x40e817
  40e79d:	xor    ebp,ebp
  40e79f:	test   ah,0x20
  40e7a2:	je     0x40ea5e
  40e7a8:	mov    r8,QWORD PTR [rip+0x14c99]        # 0x423448
  40e7af:	mov    edx,0x1
  40e7b4:	call   0x40e5c0
  40e7b9:	mov    rcx,QWORD PTR [rip+0x14c88]        # 0x423448
  40e7c0:	call   0x418618
  40e7c5:	mov    rcx,QWORD PTR [rip+0x14c7c]        # 0x423448
  40e7cc:	call   0x418620
  40e7d1:	test   eax,eax
  40e7d3:	je     0x40ea57
  40e7d9:	call   QWORD PTR [rip+0x16ef9]        # 0x4256d8
  40e7df:	add    rax,0x30
  40e7e3:	cmp    QWORD PTR [rip+0x14c5e],rax        # 0x423448
  40e7ea:	mov    r8,QWORD PTR [rip+0xb40f]        # 0x419c00
  40e7f1:	cmove  r8,QWORD PTR [rip+0xb3ff]        # 0x419bf8
  40e7f9:	mov    rcx,QWORD PTR [rbx+0x28]
  40e7fd:	mov    rdx,QWORD PTR [rip+0xb404]        # 0x419c08
  40e804:	call   0x4030d0
  40e809:	cmp    QWORD PTR [rip+0x14c37],0x0        # 0x423448
  40e811:	je     0x40eb75
  40e817:	mov    rcx,QWORD PTR [rip+0x14c2a]        # 0x423448
  40e81e:	mov    rdx,QWORD PTR [rbx+0x60]
  40e822:	xor    edi,edi
  40e824:	mov    r8,QWORD PTR [rbx+0x28]
  40e828:	call   0x402710
  40e82d:	mov    ecx,DWORD PTR [rbx+0x10]
  40e830:	test   ch,0x10
  40e833:	mov    QWORD PTR [rsp+0x30],0x0
  40e83c:	lea    rdx,[rsp+0x30]
  40e841:	jne    0x40ea6f
  40e847:	call   0x403560
  40e84c:	lea    rdx,[rip+0xd74e]        # 0x41bfa1
  40e853:	lea    rcx,[rip+0x14c66]        # 0x4234c0
  40e85a:	mov    r8d,eax
  40e85d:	mov    esi,eax
  40e85f:	call   0x4030f0
  40e864:	test   ebp,ebp
  40e866:	jne    0x40e872
  40e868:	mov    rax,QWORD PTR [rbx+0x78]
  40e86c:	test   BYTE PTR [rax+0x12],0x20
  40e870:	jne    0x40e883
  40e872:	mov    rdx,QWORD PTR [rip+0x14bcf]        # 0x423448
  40e879:	mov    rcx,QWORD PTR [rsp+0x30]
  40e87e:	call   0x4185f0
  40e883:	lea    eax,[rsi+0xf]
  40e886:	mov    ecx,0x8
  40e88b:	cdq    
  40e88c:	idiv   ecx
  40e88e:	neg    eax
  40e890:	add    eax,0x4
  40e893:	test   eax,eax
  40e895:	jle    0x40e89d
  40e897:	mov    DWORD PTR [rip+0x14bd3],eax        # 0x423470
  40e89d:	mov    r8,QWORD PTR [rsp+0x30]
  40e8a2:	mov    edx,ebp
  40e8a4:	mov    rcx,rbx
  40e8a7:	call   0x406140
  40e8ac:	mov    eax,DWORD PTR [rbx+0x10]
  40e8af:	mov    edx,eax
  40e8b1:	and    edx,0x3
  40e8b4:	cmp    edx,0x1
  40e8b7:	je     0x40eb5a
  40e8bd:	jb     0x40eb3f
  40e8c3:	cmp    edx,0x3
  40e8c6:	jne    0x40e8de
  40e8c8:	mov    rdx,QWORD PTR [rip+0x14b79]        # 0x423448
  40e8cf:	mov    rcx,QWORD PTR [rip+0xb3aa]        # 0x419c80
  40e8d6:	call   0x4185f0
  40e8db:	mov    eax,DWORD PTR [rbx+0x10]
  40e8de:	test   al,0x20
  40e8e0:	jne    0x40eae2
  40e8e6:	test   ah,0x8
  40e8e9:	jne    0x40eaca
  40e8ef:	mov    rcx,QWORD PTR [rbx+0x68]
  40e8f3:	test   rcx,rcx
  40e8f6:	je     0x40e904
  40e8f8:	mov    rdx,QWORD PTR [rip+0x14b49]        # 0x423448
  40e8ff:	call   0x4185f0
  40e904:	test   ebp,ebp
  40e906:	je     0x40eafd
  40e90c:	cmp    DWORD PTR [rbx],0x21fff
  40e912:	jle    0x40eaa2
  40e918:	mov    rcx,QWORD PTR [rbx+0xe0]
  40e91f:	test   rcx,rcx
  40e922:	je     0x40eaa2
  40e928:	mov    rdx,QWORD PTR [rip+0x14b19]        # 0x423448
  40e92f:	call   0x4185f0
  40e934:	mov    rcx,QWORD PTR [rip+0x14b0d]        # 0x423448
  40e93b:	mov    ebp,edi
  40e93d:	call   0x418618
  40e942:	mov    rcx,QWORD PTR [rip+0x14aff]        # 0x423448
  40e949:	call   0x418620
  40e94e:	test   eax,eax
  40e950:	je     0x40e7b9
  40e956:	call   QWORD PTR [rip+0x16d7c]        # 0x4256d8
  40e95c:	add    rax,0x60
  40e960:	cmp    QWORD PTR [rip+0x14ae1],rax        # 0x423448
  40e967:	mov    r8,QWORD PTR [rip+0xb28a]        # 0x419bf8
  40e96e:	cmove  r8,QWORD PTR [rip+0xb28a]        # 0x419c00
  40e976:	mov    rcx,QWORD PTR [rbx+0x28]
  40e97a:	mov    rdx,QWORD PTR [rip+0xb287]        # 0x419c08
  40e981:	call   0x4030d0
  40e986:	cmp    QWORD PTR [rip+0x14aba],0x0        # 0x423448
  40e98e:	je     0x40ec2c
  40e994:	mov    rcx,QWORD PTR [rip+0x14aad]        # 0x423448
  40e99b:	mov    rdx,QWORD PTR [rbx+0x60]
  40e99f:	mov    edi,ebp
  40e9a1:	mov    r8,QWORD PTR [rbx+0x28]
  40e9a5:	call   0x402710
  40e9aa:	mov    ecx,DWORD PTR [rbx+0x10]
  40e9ad:	test   ch,0x40
  40e9b0:	je     0x40e830
  40e9b6:	cmp    DWORD PTR [rbx],0x25fff
  40e9bc:	jle    0x40eba0
  40e9c2:	movsxd rax,DWORD PTR [rbx+0xb4]
  40e9c9:	mov    r8,rax
  40e9cc:	imul   rax,rax,0x68
  40e9d0:	add    rax,QWORD PTR [rbx+0x78]
  40e9d4:	cmp    DWORD PTR [rax+0x14],0x3
  40e9d8:	je     0x40ea13
  40e9da:	mov    edx,DWORD PTR [rbx+0xb0]
  40e9e0:	lea    r9d,[r8+0x1]
  40e9e4:	cmp    r9d,edx
  40e9e7:	jge    0x40ed3f
  40e9ed:	sub    edx,0x2
  40e9f0:	sub    edx,r8d
  40e9f3:	add    rdx,0x1
  40e9f7:	imul   rdx,rdx,0x68
  40e9fb:	add    rdx,rax
  40e9fe:	jmp    0x40ea09
  40ea00:	cmp    rax,rdx
  40ea03:	je     0x40ed3f
  40ea09:	add    rax,0x68
  40ea0d:	cmp    DWORD PTR [rax+0x14],0x3
  40ea11:	jne    0x40ea00
  40ea13:	and    ecx,0x3
  40ea16:	cmp    ecx,0x2
  40ea19:	je     0x40ed23
  40ea1f:	cmp    ecx,0x3
  40ea22:	je     0x40ecf1
  40ea28:	sub    ecx,0x1
  40ea2b:	je     0x40ecf1
  40ea31:	lea    r9,[rsp+0x30]
  40ea36:	mov    rdx,QWORD PTR [rax+0x50]
  40ea3a:	mov    r8d,0x14
  40ea40:	mov    rcx,r9
  40ea43:	mov    QWORD PTR [rsp+0x28],r9
  40ea48:	call   0x418528
  40ea4d:	mov    r9,QWORD PTR [rsp+0x28]
  40ea52:	jmp    0x40ebd0
  40ea57:	mov    ecx,ebp
  40ea59:	call   0x402b50
  40ea5e:	mov    rdx,QWORD PTR [rip+0x149e3]        # 0x423448
  40ea65:	call   0x4185f0
  40ea6a:	jmp    0x40e7b9
  40ea6f:	call   0x403420
  40ea74:	lea    rdx,[rip+0xd526]        # 0x41bfa1
  40ea7b:	lea    rcx,[rip+0x14a3e]        # 0x4234c0
  40ea82:	mov    r8d,eax
  40ea85:	mov    esi,eax
  40ea87:	call   0x4030f0
  40ea8c:	mov    rdx,QWORD PTR [rip+0x149b5]        # 0x423448
  40ea93:	mov    ecx,0xa
  40ea98:	call   0x4185f8
  40ea9d:	jmp    0x40e883
  40eaa2:	mov    r8,QWORD PTR [rbx+0x80]
  40eaa9:	test   r8,r8
  40eaac:	je     0x40e934
  40eab2:	mov    rdx,QWORD PTR [rip+0xb237]        # 0x419cf0
  40eab9:	mov    rcx,QWORD PTR [rip+0x14988]        # 0x423448
  40eac0:	call   0x402710
  40eac5:	jmp    0x40e934
  40eaca:	mov    rdx,QWORD PTR [rip+0x14977]        # 0x423448
  40ead1:	mov    rcx,QWORD PTR [rip+0xb280]        # 0x419d58
  40ead8:	call   0x4185f0
  40eadd:	jmp    0x40e8ef
  40eae2:	mov    rdx,QWORD PTR [rip+0x1495f]        # 0x423448
  40eae9:	mov    rcx,QWORD PTR [rip+0xb1e8]        # 0x419cd8
  40eaf0:	call   0x4185f0
  40eaf5:	mov    eax,DWORD PTR [rbx+0x10]
  40eaf8:	jmp    0x40e8e6
  40eafd:	mov    rcx,QWORD PTR [rbx+0x58]
  40eb01:	test   rcx,rcx
  40eb04:	jne    0x40ec4e
  40eb0a:	test   BYTE PTR [rbx+0x11],0x1
  40eb0e:	jne    0x40ebfd
  40eb14:	cmp    BYTE PTR [rip+0x14985],0x0        # 0x4234a0
  40eb1b:	jne    0x40ec66
  40eb21:	mov    rcx,QWORD PTR [rbx+0x70]
  40eb25:	test   rcx,rcx
  40eb28:	je     0x40e90c
  40eb2e:	mov    rdx,QWORD PTR [rip+0x14913]        # 0x423448
  40eb35:	call   0x4185f0
  40eb3a:	jmp    0x40e90c
  40eb3f:	mov    rdx,QWORD PTR [rip+0x14902]        # 0x423448
  40eb46:	mov    rcx,QWORD PTR [rip+0xb193]        # 0x419ce0
  40eb4d:	call   0x4185f0
  40eb52:	mov    eax,DWORD PTR [rbx+0x10]
  40eb55:	jmp    0x40e8de
  40eb5a:	mov    rdx,QWORD PTR [rip+0x148e7]        # 0x423448
  40eb61:	mov    rcx,QWORD PTR [rip+0xb140]        # 0x419ca8
  40eb68:	call   0x4185f0
  40eb6d:	mov    eax,DWORD PTR [rbx+0x10]
  40eb70:	jmp    0x40e8de
  40eb75:	xor    ecx,ecx
  40eb77:	cmp    BYTE PTR [rip+0x148f6],0x0        # 0x423474
  40eb7e:	mov    QWORD PTR [rsp+0x28],rcx
  40eb83:	jne    0x40ebec
  40eb85:	call   QWORD PTR [rip+0x16b4d]        # 0x4256d8
  40eb8b:	mov    rcx,QWORD PTR [rsp+0x28]
  40eb90:	add    rax,0x30
  40eb94:	mov    QWORD PTR [rip+0x148ad],rax        # 0x423448
  40eb9b:	jmp    0x40e78a
  40eba0:	and    ecx,0x3
  40eba3:	cmp    ecx,0x2
  40eba6:	je     0x40ecdb
  40ebac:	cmp    ecx,0x3
  40ebaf:	je     0x40ecc0
  40ebb5:	sub    ecx,0x1
  40ebb8:	je     0x40ecc0
  40ebbe:	lea    r9,[rsp+0x30]
  40ebc3:	mov    DWORD PTR [rsp+0x30],0x706c6568
  40ebcb:	mov    BYTE PTR [rsp+0x34],0x0
  40ebd0:	mov    r8,QWORD PTR [rbx+0x28]
  40ebd4:	mov    rdx,QWORD PTR [rip+0xb00d]        # 0x419be8
  40ebdb:	mov    rcx,QWORD PTR [rip+0x14866]        # 0x423448
  40ebe2:	call   0x402710
  40ebe7:	jmp    0x40e7b9
  40ebec:	call   QWORD PTR [rip+0x16ae6]        # 0x4256d8
  40ebf2:	mov    rcx,QWORD PTR [rsp+0x28]
  40ebf7:	add    rax,0x60
  40ebfb:	jmp    0x40eb94
  40ebfd:	mov    rdx,QWORD PTR [rip+0x14844]        # 0x423448
  40ec04:	mov    rcx,QWORD PTR [rip+0xb0f5]        # 0x419d00
  40ec0b:	call   0x4185f0
  40ec10:	mov    r8,QWORD PTR [rbx+0x30]
  40ec14:	mov    rdx,QWORD PTR [rip+0xb04d]        # 0x419c68
  40ec1b:	mov    rcx,QWORD PTR [rip+0x14826]        # 0x423448
  40ec22:	call   0x402710
  40ec27:	jmp    0x40eb14
  40ec2c:	xor    ecx,ecx
  40ec2e:	mov    QWORD PTR [rsp+0x28],rcx
  40ec33:	call   QWORD PTR [rip+0x16a9f]        # 0x4256d8
  40ec39:	add    rax,0x60
  40ec3d:	mov    rcx,QWORD PTR [rsp+0x28]
  40ec42:	mov    QWORD PTR [rip+0x147ff],rax        # 0x423448
  40ec49:	jmp    0x40e74c
  40ec4e:	mov    rdx,QWORD PTR [rbx+0x38]
  40ec52:	mov    r8,QWORD PTR [rbx+0x20]
  40ec56:	call   0x409360
  40ec5b:	test   BYTE PTR [rbx+0x11],0x1
  40ec5f:	jne    0x40ec10
  40ec61:	jmp    0x40eb14
  40ec66:	mov    rdx,QWORD PTR [rip+0x147db]        # 0x423448
  40ec6d:	mov    ecx,0xa
  40ec72:	mov    ebp,DWORD PTR [rbx+0xb0]
  40ec78:	mov    rsi,QWORD PTR [rbx+0x78]
  40ec7c:	call   0x4185f8
  40ec81:	mov    rcx,QWORD PTR [rip+0x147c0]        # 0x423448
  40ec88:	call   0x418618
  40ec8d:	jmp    0x40eca3
  40ec8f:	cmp    eax,0x4
  40ec92:	je     0x40ecb3
  40ec94:	sub    ebp,0x1
  40ec97:	add    rsi,0x68
  40ec9b:	test   ebp,ebp
  40ec9d:	jle    0x40eb21
  40eca3:	mov    eax,DWORD PTR [rsi+0x10]
  40eca6:	and    eax,0xf000
  40ecab:	shr    eax,0xc
  40ecae:	cmp    eax,0x2
  40ecb1:	jne    0x40ec8f
  40ecb3:	mov    rdx,rsi
  40ecb6:	mov    ecx,0x1
  40ecbb:	call   QWORD PTR [rsi+0x38]
  40ecbe:	jmp    0x40ec94
  40ecc0:	lea    r9,[rsp+0x30]
  40ecc5:	lea    rsi,[rip+0xc47d]        # 0x41b149
  40eccc:	mov    ecx,0x7
  40ecd1:	mov    rdi,r9
  40ecd4:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40ecd6:	jmp    0x40ebd0
  40ecdb:	mov    WORD PTR [rsp+0x30],0x682d
  40ece2:	mov    BYTE PTR [rsp+0x32],0x0
  40ece7:	lea    r9,[rsp+0x30]
  40ecec:	jmp    0x40ebd0
  40ecf1:	mov    BYTE PTR [rsp+0x31],0x2d
  40ecf6:	mov    BYTE PTR [rsp+0x30],0x2d
  40ecfb:	lea    r9,[rsp+0x30]
  40ed00:	mov    rdx,QWORD PTR [rax+0x50]
  40ed04:	lea    rcx,[rsp+0x32]
  40ed09:	mov    r8d,0x14
  40ed0f:	mov    QWORD PTR [rsp+0x28],r9
  40ed14:	call   0x418528
  40ed19:	mov    r9,QWORD PTR [rsp+0x28]
  40ed1e:	jmp    0x40ebd0
  40ed23:	mov    BYTE PTR [rsp+0x30],0x2d
  40ed28:	movzx  eax,WORD PTR [rax+0x2]
  40ed2c:	lea    r9,[rsp+0x30]
  40ed31:	mov    BYTE PTR [rsp+0x32],0x0
  40ed36:	mov    BYTE PTR [rsp+0x31],al
  40ed3a:	jmp    0x40ebd0
  40ed3f:	mov    rcx,QWORD PTR [rip+0xad6a]        # 0x419ab0
  40ed46:	call   0x402b80
  40ed4b:	nop
  40ed4c:	nop    DWORD PTR [rax+0x0]
  40ed50:	sub    rsp,0x28
  40ed54:	call   0x40e700
  40ed59:	nop
  40ed5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ed60:	sub    rsp,0x28
  40ed64:	lea    rcx,[rip+0xa995]        # 0x419700
  40ed6b:	xor    edx,edx
  40ed6d:	call   0x40e700
  40ed72:	nop
  40ed73:	nop    DWORD PTR [rax]
  40ed76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ed80:	lea    rax,[rip+0xc3c9]        # 0x41b150
  40ed87:	ret    
  40ed88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed90:	push   rsi
  40ed91:	push   rbx
  40ed92:	sub    rsp,0x28
  40ed96:	cmp    BYTE PTR [rip+0x146d7],0x0        # 0x423474
  40ed9d:	mov    rbx,rcx
  40eda0:	mov    rsi,rdx
  40eda3:	je     0x40edc0
  40eda5:	call   QWORD PTR [rip+0x1692d]        # 0x4256d8
  40edab:	cmp    rbx,0xf
  40edaf:	lea    r8,[rax+0x60]
  40edb3:	ja     0x40edd0
  40edb5:	add    rsp,0x28
  40edb9:	pop    rbx
  40edba:	pop    rsi
  40edbb:	ret    
  40edbc:	nop    DWORD PTR [rax+0x0]
  40edc0:	call   QWORD PTR [rip+0x16912]        # 0x4256d8
  40edc6:	cmp    rbx,0xf
  40edca:	lea    r8,[rax+0x30]
  40edce:	jbe    0x40edb5
  40edd0:	xor    r9d,r9d
  40edd3:	mov    rdx,rsi
  40edd6:	mov    rcx,rbx
  40edd9:	add    rsp,0x28
  40eddd:	pop    rbx
  40edde:	pop    rsi
  40eddf:	jmp    0x40c1d0
  40ede4:	xchg   ax,ax
  40ede6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40edf0:	push   rsi
  40edf1:	push   rbx
  40edf2:	sub    rsp,0x28
  40edf6:	mov    rbx,rcx
  40edf9:	mov    rsi,rdx
  40edfc:	call   QWORD PTR [rip+0x168d6]        # 0x4256d8
  40ee02:	cmp    rbx,0xf
  40ee06:	ja     0x40ee10
  40ee08:	add    rsp,0x28
  40ee0c:	pop    rbx
  40ee0d:	pop    rsi
  40ee0e:	ret    
  40ee0f:	nop
  40ee10:	lea    r8,[rax+0x60]
  40ee14:	mov    r9d,0x1
  40ee1a:	mov    rdx,rsi
  40ee1d:	mov    rcx,rbx
  40ee20:	add    rsp,0x28
  40ee24:	pop    rbx
  40ee25:	pop    rsi
  40ee26:	jmp    0x40c1d0
  40ee2b:	nop
  40ee2c:	nop
  40ee2d:	nop
  40ee2e:	nop
  40ee2f:	nop
  40ee30:	push   rbp
  40ee31:	push   rdi
  40ee32:	push   rsi
  40ee33:	push   rbx
  40ee34:	sub    rsp,0x38
  40ee38:	mov    QWORD PTR [rsp+0x78],r9
  40ee3d:	mov    QWORD PTR [rsp+0x20],rdx
  40ee42:	lea    r9,[rsp+0x78]
  40ee47:	mov    rbp,rdx
  40ee4a:	lea    rdx,[rsp+0x20]
  40ee4f:	mov    rdi,rcx
  40ee52:	mov    QWORD PTR [rsp+0x28],r9
  40ee57:	call   0x40eef0
  40ee5c:	test   rax,rax
  40ee5f:	mov    rsi,rax
  40ee62:	mov    rbx,QWORD PTR [rsp+0x20]
  40ee67:	je     0x40eec5
  40ee69:	cmp    rax,rdi
  40ee6c:	je     0x40ee7b
  40ee6e:	test   rbp,rbp
  40ee71:	jne    0x40ee90
  40ee73:	mov    rcx,rsi
  40ee76:	call   0x4185e0
  40ee7b:	cmp    rbx,0x7fffffff
  40ee82:	ja     0x40eeb2
  40ee84:	mov    eax,ebx
  40ee86:	add    rsp,0x38
  40ee8a:	pop    rbx
  40ee8b:	pop    rsi
  40ee8c:	pop    rdi
  40ee8d:	pop    rbp
  40ee8e:	ret    
  40ee8f:	nop
  40ee90:	lea    rax,[rbp-0x1]
  40ee94:	cmp    rbp,rbx
  40ee97:	mov    rdx,rsi
  40ee9a:	mov    rcx,rdi
  40ee9d:	cmova  rax,rbx
  40eea1:	mov    rbp,rax
  40eea4:	mov    r8,rax
  40eea7:	call   0x4185a0
  40eeac:	mov    BYTE PTR [rdi+rbp*1],0x0
  40eeb0:	jmp    0x40ee73
  40eeb2:	call   QWORD PTR [rip+0x16868]        # 0x425720
  40eeb8:	mov    DWORD PTR [rax],0x84
  40eebe:	mov    eax,0xffffffff
  40eec3:	jmp    0x40ee86
  40eec5:	mov    eax,0xffffffff
  40eeca:	jmp    0x40ee86
  40eecc:	nop
  40eecd:	nop
  40eece:	nop
  40eecf:	nop
  40eed0:	sub    rsp,0x38
  40eed4:	mov    QWORD PTR [rsp+0x58],r9
  40eed9:	lea    r9,[rsp+0x58]
  40eede:	mov    QWORD PTR [rsp+0x28],r9
  40eee3:	call   0x413ae0
  40eee8:	add    rsp,0x38
  40eeec:	ret    
  40eeed:	nop    DWORD PTR [rax]
  40eef0:	push   rbp
  40eef1:	push   r15
  40eef3:	push   r14
  40eef5:	push   r13
  40eef7:	push   r12
  40eef9:	push   rdi
  40eefa:	push   rsi
  40eefb:	push   rbx
  40eefc:	sub    rsp,0x518
  40ef03:	lea    rbp,[rsp+0x80]
  40ef0b:	lea    rax,[rbp+0x110]
  40ef12:	lea    rdi,[rbp+0x200]
  40ef19:	mov    rbx,r8
  40ef1c:	mov    QWORD PTR [rbp+0x4e0],rcx
  40ef23:	mov    QWORD PTR [rbp+0x4e8],rdx
  40ef2a:	mov    rcx,rbx
  40ef2d:	mov    rdx,rdi
  40ef30:	mov    r8,rax
  40ef33:	mov    QWORD PTR [rbp+0x60],rdi
  40ef37:	mov    rsi,r9
  40ef3a:	mov    QWORD PTR [rbp+0x58],rax
  40ef3e:	mov    rdi,rax
  40ef41:	call   0x410db0
  40ef46:	test   eax,eax
  40ef48:	js     0x40ff90
  40ef4e:	mov    rdx,rdi
  40ef51:	mov    rcx,rsi
  40ef54:	call   0x410cc0
  40ef59:	test   eax,eax
  40ef5b:	js     0x4102d0
  40ef61:	mov    rax,QWORD PTR [rbp+0x210]
  40ef68:	mov    rdx,0xffffffffffffffff
  40ef6f:	add    rax,0x7
  40ef73:	cmp    rax,0x7
  40ef77:	cmovb  rax,rdx
  40ef7b:	add    rax,QWORD PTR [rbp+0x218]
  40ef82:	jb     0x40f3c0
  40ef88:	lea    rcx,[rax+0x6]
  40ef8c:	cmp    rax,rcx
  40ef8f:	ja     0x40f3c0
  40ef95:	cmp    rcx,0xf9f
  40ef9c:	ja     0x40fd00
  40efa2:	add    rax,0x24
  40efa6:	and    rax,0xfffffffffffffff0
  40efaa:	call   0x413020
  40efaf:	sub    rsp,rax
  40efb2:	cmp    QWORD PTR [rbp+0x4e0],0x0
  40efba:	mov    QWORD PTR [rbp+0x50],0x0
  40efc2:	lea    rax,[rsp+0x40]
  40efc7:	mov    QWORD PTR [rbp+0x90],rax
  40efce:	je     0x40fd38
  40efd4:	mov    rax,QWORD PTR [rbp+0x4e8]
  40efdb:	mov    r12,QWORD PTR [rax]
  40efde:	mov    rax,QWORD PTR [rbp+0x4e0]
  40efe5:	mov    r13,QWORD PTR [rbp+0x208]
  40efec:	mov    rdi,rbx
  40efef:	xor    r15d,r15d
  40eff2:	mov    QWORD PTR [rbp+0x80],0x0
  40effd:	mov    QWORD PTR [rbp+0x98],rax
  40f004:	lea    rax,[rbp+0xbc]
  40f00b:	mov    rsi,QWORD PTR [r13+0x0]
  40f00f:	mov    QWORD PTR [rbp+0x70],rax
  40f013:	lea    rax,[rbp+0xa0]
  40f01a:	cmp    rsi,rdi
  40f01d:	mov    QWORD PTR [rbp+0x40],rax
  40f021:	lea    rax,[rbp+0xd0]
  40f028:	mov    QWORD PTR [rbp+0x48],rax
  40f02c:	lea    rax,[rbp+0xb4]
  40f033:	mov    QWORD PTR [rbp+0x38],rax
  40f037:	je     0x40f503
  40f03d:	sub    rsi,rdi
  40f040:	mov    rax,0xffffffffffffffff
  40f047:	mov    r14,rsi
  40f04a:	add    r14,r15
  40f04d:	cmovb  r14,rax
  40f051:	cmp    r12,r14
  40f054:	jae    0x40f512
  40f05a:	test   r12,r12
  40f05d:	je     0x40f420
  40f063:	js     0x40fe30
  40f069:	add    r12,r12
  40f06c:	cmp    r12,r14
  40f06f:	cmovb  r12,r14
  40f073:	cmp    r12,0xffffffffffffffff
  40f077:	je     0x40fe30
  40f07d:	mov    rax,QWORD PTR [rbp+0x98]
  40f084:	cmp    rax,QWORD PTR [rbp+0x4e0]
  40f08b:	sete   r8b
  40f08f:	test   rax,rax
  40f092:	mov    BYTE PTR [rbp+0x88],r8b
  40f099:	je     0x40f430
  40f09f:	test   r8b,r8b
  40f0a2:	jne    0x40f430
  40f0a8:	mov    rcx,QWORD PTR [rbp+0x98]
  40f0af:	mov    rdx,r12
  40f0b2:	call   0x411990
  40f0b7:	movzx  r8d,BYTE PTR [rbp+0x88]
  40f0bf:	mov    rbx,rax
  40f0c2:	test   rbx,rbx
  40f0c5:	je     0x40fe30
  40f0cb:	test   r15,r15
  40f0ce:	je     0x40f0e7
  40f0d0:	test   r8b,r8b
  40f0d3:	je     0x40f0e7
  40f0d5:	mov    rdx,QWORD PTR [rbp+0x98]
  40f0dc:	mov    r8,r15
  40f0df:	mov    rcx,rbx
  40f0e2:	call   0x4185a0
  40f0e7:	lea    rcx,[rbx+r15*1]
  40f0eb:	mov    r8,rsi
  40f0ee:	mov    rdx,rdi
  40f0f1:	call   0x4185a0
  40f0f6:	mov    rax,QWORD PTR [rbp+0x80]
  40f0fd:	cmp    QWORD PTR [rbp+0x200],rax
  40f104:	je     0x410315
  40f10a:	movzx  edx,BYTE PTR [r13+0x48]
  40f10f:	cmp    dl,0x25
  40f112:	je     0x40f450
  40f118:	mov    rax,QWORD PTR [r13+0x50]
  40f11c:	cmp    rax,0xffffffffffffffff
  40f120:	je     0x40fc40
  40f126:	cmp    dl,0x6e
  40f129:	je     0x40f520
  40f12f:	shl    rax,0x5
  40f133:	cmp    dl,0x73
  40f136:	mov    r10,QWORD PTR [rbp+0x118]
  40f13d:	je     0x40f701
  40f143:	mov    eax,DWORD PTR [r10+rax*1]
  40f147:	mov    DWORD PTR [rbp+0x88],eax
  40f14d:	mov    rcx,QWORD PTR [r13+0x18]
  40f151:	mov    r9,QWORD PTR [r13+0x20]
  40f155:	mov    r8d,DWORD PTR [r13+0x10]
  40f159:	cmp    rcx,r9
  40f15c:	je     0x40ff60
  40f162:	mov    rax,QWORD PTR [r13+0x28]
  40f166:	cmp    rax,0xffffffffffffffff
  40f16a:	je     0x40fe40
  40f170:	shl    rax,0x5
  40f174:	add    rax,r10
  40f177:	cmp    DWORD PTR [rax],0x5
  40f17a:	jne    0x40fc40
  40f180:	movsxd r15,DWORD PTR [rax+0x10]
  40f184:	test   r15d,r15d
  40f187:	js     0x40ff50
  40f18d:	mov    rdx,QWORD PTR [r13+0x30]
  40f191:	mov    rcx,QWORD PTR [r13+0x38]
  40f195:	cmp    rdx,rcx
  40f198:	je     0x40f6f0
  40f19e:	mov    rax,QWORD PTR [r13+0x40]
  40f1a2:	cmp    rax,0xffffffffffffffff
  40f1a6:	je     0x40fe90
  40f1ac:	shl    rax,0x5
  40f1b0:	add    r10,rax
  40f1b3:	cmp    DWORD PTR [r10],0x5
  40f1b7:	jne    0x40fc40
  40f1bd:	movsxd rsi,DWORD PTR [r10+0x10]
  40f1c1:	test   esi,esi
  40f1c3:	js     0x40f6f0
  40f1c9:	mov    DWORD PTR [rbp+0x28],0x1
  40f1d0:	mov    rax,QWORD PTR [rbp+0x90]
  40f1d7:	test   r8b,0x1
  40f1db:	mov    BYTE PTR [rax],0x25
  40f1de:	lea    rdi,[rax+0x1]
  40f1e2:	je     0x40f1f3
  40f1e4:	mov    rax,QWORD PTR [rbp+0x90]
  40f1eb:	lea    rdi,[rax+0x2]
  40f1ef:	mov    BYTE PTR [rax+0x1],0x27
  40f1f3:	test   r8b,0x2
  40f1f7:	je     0x40f200
  40f1f9:	mov    BYTE PTR [rdi],0x2d
  40f1fc:	add    rdi,0x1
  40f200:	test   r8b,0x4
  40f204:	je     0x40f20d
  40f206:	mov    BYTE PTR [rdi],0x2b
  40f209:	add    rdi,0x1
  40f20d:	test   r8b,0x8
  40f211:	je     0x40f21a
  40f213:	mov    BYTE PTR [rdi],0x20
  40f216:	add    rdi,0x1
  40f21a:	test   r8b,0x10
  40f21e:	je     0x40f227
  40f220:	mov    BYTE PTR [rdi],0x23
  40f223:	add    rdi,0x1
  40f227:	and    r8d,0x20
  40f22b:	je     0x40f234
  40f22d:	mov    BYTE PTR [rdi],0x30
  40f230:	add    rdi,0x1
  40f234:	mov    rdx,QWORD PTR [r13+0x18]
  40f238:	mov    r8,QWORD PTR [r13+0x20]
  40f23c:	cmp    rdx,r8
  40f23f:	je     0x40f263
  40f241:	mov    r9,r8
  40f244:	mov    rcx,rdi
  40f247:	sub    r9,rdx
  40f24a:	mov    r8,r9
  40f24d:	mov    QWORD PTR [rbp+0x98],r9
  40f254:	call   0x4185a0
  40f259:	mov    r9,QWORD PTR [rbp+0x98]
  40f260:	add    rdi,r9
  40f263:	mov    rdx,QWORD PTR [r13+0x30]
  40f267:	mov    r8,QWORD PTR [r13+0x38]
  40f26b:	cmp    rdx,r8
  40f26e:	je     0x40f292
  40f270:	mov    r9,r8
  40f273:	mov    rcx,rdi
  40f276:	sub    r9,rdx
  40f279:	mov    r8,r9
  40f27c:	mov    QWORD PTR [rbp+0x98],r9
  40f283:	call   0x4185a0
  40f288:	mov    r9,QWORD PTR [rbp+0x98]
  40f28f:	add    rdi,r9
  40f292:	mov    eax,DWORD PTR [rbp+0x88]
  40f298:	lea    ecx,[rax-0x7]
  40f29b:	cmp    ecx,0x9
  40f29e:	ja     0x40f2c3
  40f2a0:	mov    eax,0x1
  40f2a5:	shl    rax,cl
  40f2a8:	test   eax,0x283
  40f2ad:	jne    0x40f8a4
  40f2b3:	test   al,0x20
  40f2b5:	jne    0x40ffa0
  40f2bb:	test   al,0xc
  40f2bd:	jne    0x410010
  40f2c3:	movzx  eax,BYTE PTR [r13+0x48]
  40f2c8:	mov    BYTE PTR [rdi+0x1],0x0
  40f2cc:	mov    BYTE PTR [rdi],al
  40f2ce:	mov    rax,QWORD PTR [r13+0x28]
  40f2d2:	cmp    rax,0xffffffffffffffff
  40f2d6:	je     0x40fcc0
  40f2dc:	shl    rax,0x5
  40f2e0:	add    rax,QWORD PTR [rbp+0x118]
  40f2e7:	cmp    DWORD PTR [rax],0x5
  40f2ea:	jne    0x40fc40
  40f2f0:	mov    eax,DWORD PTR [rax+0x10]
  40f2f3:	mov    edx,0x1
  40f2f8:	mov    DWORD PTR [rbp+0xc0],eax
  40f2fe:	mov    rax,QWORD PTR [r13+0x40]
  40f302:	cmp    rax,0xffffffffffffffff
  40f306:	je     0x40fcb0
  40f30c:	shl    rax,0x5
  40f310:	add    rax,QWORD PTR [rbp+0x118]
  40f317:	cmp    DWORD PTR [rax],0x5
  40f31a:	jne    0x40fc40
  40f320:	mov    eax,DWORD PTR [rax+0x10]
  40f323:	lea    ecx,[rdx+0x1]
  40f326:	mov    DWORD PTR [rbp+0x78],ecx
  40f329:	mov    DWORD PTR [rbp+rdx*4+0xc0],eax
  40f330:	lea    rax,[r14+0x2]
  40f334:	mov    rdx,0xffffffffffffffff
  40f33b:	cmp    r14,rax
  40f33e:	cmovbe rdx,rax
  40f342:	cmp    r12,rdx
  40f345:	jae    0x40fca0
  40f34b:	test   r12,r12
  40f34e:	je     0x40f550
  40f354:	js     0x40f371
  40f356:	add    r12,r12
  40f359:	cmp    r14,rax
  40f35c:	ja     0x40f371
  40f35e:	cmp    r12,rax
  40f361:	jae    0x40f568
  40f367:	cmp    rax,0xffffffffffffffff
  40f36b:	jne    0x410c75
  40f371:	mov    rax,QWORD PTR [rip+0x163a8]        # 0x425720
  40f378:	mov    r15,rbx
  40f37b:	mov    QWORD PTR [rbp+0x68],rax
  40f37f:	mov    QWORD PTR [rbp+0x98],r15
  40f386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f390:	mov    rax,QWORD PTR [rbp+0x98]
  40f397:	test   rax,rax
  40f39a:	je     0x40f3a9
  40f39c:	cmp    rax,QWORD PTR [rbp+0x4e0]
  40f3a3:	jne    0x410070
  40f3a9:	mov    rax,QWORD PTR [rbp+0x50]
  40f3ad:	test   rax,rax
  40f3b0:	je     0x40f3cb
  40f3b2:	mov    rcx,rax
  40f3b5:	call   0x4185e0
  40f3ba:	jmp    0x40f3cb
  40f3bc:	nop    DWORD PTR [rax+0x0]
  40f3c0:	mov    rax,QWORD PTR [rip+0x16359]        # 0x425720
  40f3c7:	mov    QWORD PTR [rbp+0x68],rax
  40f3cb:	mov    rax,QWORD PTR [rbp+0x60]
  40f3cf:	mov    rcx,QWORD PTR [rbp+0x208]
  40f3d6:	add    rax,0x20
  40f3da:	cmp    rcx,rax
  40f3dd:	je     0x40f3e4
  40f3df:	call   0x4185e0
  40f3e4:	mov    rax,QWORD PTR [rbp+0x58]
  40f3e8:	mov    rcx,QWORD PTR [rbp+0x118]
  40f3ef:	add    rax,0x10
  40f3f3:	cmp    rcx,rax
  40f3f6:	je     0x40f3fd
  40f3f8:	call   0x4185e0
  40f3fd:	mov    rax,QWORD PTR [rbp+0x68]
  40f401:	call   rax
  40f403:	mov    DWORD PTR [rax],0xc
  40f409:	xor    eax,eax
  40f40b:	lea    rsp,[rbp+0x498]
  40f412:	pop    rbx
  40f413:	pop    rsi
  40f414:	pop    rdi
  40f415:	pop    r12
  40f417:	pop    r13
  40f419:	pop    r14
  40f41b:	pop    r15
  40f41d:	pop    rbp
  40f41e:	ret    
  40f41f:	nop
  40f420:	mov    r12d,0xc
  40f426:	jmp    0x40f06c
  40f42b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f430:	mov    rcx,r12
  40f433:	call   0x410c80
  40f438:	movzx  r8d,BYTE PTR [rbp+0x88]
  40f440:	mov    rbx,rax
  40f443:	jmp    0x40f0c2
  40f448:	nop    DWORD PTR [rax+rax*1+0x0]
  40f450:	cmp    QWORD PTR [r13+0x50],0xffffffffffffffff
  40f455:	jne    0x40fc40
  40f45b:	lea    r15,[r14+0x1]
  40f45f:	mov    rax,0xffffffffffffffff
  40f466:	cmp    r14,r15
  40f469:	cmova  r15,rax
  40f46d:	cmp    r12,r15
  40f470:	jae    0x40f4da
  40f472:	test   r12,r12
  40f475:	je     0x40ff70
  40f47b:	js     0x40fe20
  40f481:	add    r12,r12
  40f484:	cmp    r12,r15
  40f487:	cmovb  r12,r15
  40f48b:	cmp    r12,0xffffffffffffffff
  40f48f:	je     0x40fe20
  40f495:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  40f49c:	sete   sil
  40f4a0:	test   rbx,rbx
  40f4a3:	je     0x40ff80
  40f4a9:	test   sil,sil
  40f4ac:	jne    0x40ff80
  40f4b2:	mov    rdx,r12
  40f4b5:	mov    rcx,rbx
  40f4b8:	call   0x411990
  40f4bd:	mov    r9,rax
  40f4c0:	test   r9,r9
  40f4c3:	je     0x40fe20
  40f4c9:	test   r14,r14
  40f4cc:	je     0x40f4d7
  40f4ce:	test   sil,sil
  40f4d1:	jne    0x40ffb0
  40f4d7:	mov    rbx,r9
  40f4da:	mov    BYTE PTR [rbx+r14*1],0x25
  40f4df:	mov    QWORD PTR [rbp+0x98],rbx
  40f4e6:	mov    rdi,QWORD PTR [r13+0x8]
  40f4ea:	add    r13,0x58
  40f4ee:	mov    rsi,QWORD PTR [r13+0x0]
  40f4f2:	add    QWORD PTR [rbp+0x80],0x1
  40f4fa:	cmp    rsi,rdi
  40f4fd:	jne    0x40f03d
  40f503:	mov    r14,r15
  40f506:	mov    rbx,QWORD PTR [rbp+0x98]
  40f50d:	jmp    0x40f0f6
  40f512:	mov    rbx,QWORD PTR [rbp+0x98]
  40f519:	jmp    0x40f0e7
  40f51e:	xchg   ax,ax
  40f520:	shl    rax,0x5
  40f524:	add    rax,QWORD PTR [rbp+0x118]
  40f52b:	mov    edi,DWORD PTR [rax]
  40f52d:	lea    edx,[rdi-0x12]
  40f530:	cmp    edx,0x4
  40f533:	ja     0x40fc40
  40f539:	lea    rcx,[rip+0xf840]        # 0x41ed80
  40f540:	mov    rax,QWORD PTR [rax+0x10]
  40f544:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40f548:	add    rcx,rdx
  40f54b:	jmp    rcx
  40f54d:	nop    DWORD PTR [rax]
  40f550:	cmp    r14,rax
  40f553:	ja     0x40f371
  40f559:	mov    r12d,0xc
  40f55f:	cmp    r12,rax
  40f562:	jb     0x40f367
  40f568:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  40f56f:	sete   r8b
  40f573:	test   rbx,rbx
  40f576:	mov    BYTE PTR [rbp+0x68],r8b
  40f57a:	je     0x40fc80
  40f580:	test   r8b,r8b
  40f583:	jne    0x40fc80
  40f589:	mov    rdx,r12
  40f58c:	mov    rcx,rbx
  40f58f:	call   0x411990
  40f594:	movzx  r8d,BYTE PTR [rbp+0x68]
  40f599:	mov    QWORD PTR [rbp+0x98],rax
  40f5a0:	cmp    QWORD PTR [rbp+0x98],0x0
  40f5a8:	je     0x40f371
  40f5ae:	test   r14,r14
  40f5b1:	je     0x40f5ca
  40f5b3:	test   r8b,r8b
  40f5b6:	je     0x40f5ca
  40f5b8:	mov    rcx,QWORD PTR [rbp+0x98]
  40f5bf:	mov    r8,r14
  40f5c2:	mov    rdx,rbx
  40f5c5:	call   0x4185a0
  40f5ca:	mov    rax,QWORD PTR [rbp+0x98]
  40f5d1:	mov    BYTE PTR [rax+r14*1],0x0
  40f5d6:	mov    rax,QWORD PTR [rip+0x16143]        # 0x425720
  40f5dd:	mov    QWORD PTR [rbp+0x68],rax
  40f5e1:	call   rax
  40f5e3:	mov    ebx,DWORD PTR [rbp+0x88]
  40f5e9:	mov    eax,DWORD PTR [rax]
  40f5eb:	mov    QWORD PTR [rbp-0x10],rsi
  40f5ef:	lea    edx,[rbx-0x9]
  40f5f2:	mov    DWORD PTR [rbp+0x30],eax
  40f5f5:	cmp    edx,0x2
  40f5f8:	sbb    rax,rax
  40f5fb:	and    eax,0xa
  40f5fe:	add    rax,0xa
  40f602:	cmp    rsi,rax
  40f605:	cmovae rax,rsi
  40f609:	mov    QWORD PTR [rbp-0x38],rax
  40f60d:	add    rax,rax
  40f610:	mov    QWORD PTR [rbp+0x20],rax
  40f614:	add    rax,0x1
  40f618:	cmp    edx,0x2
  40f61b:	mov    QWORD PTR [rbp+0x18],rax
  40f61f:	sbb    rax,rax
  40f622:	and    eax,0xb
  40f625:	add    rax,0xb
  40f629:	cmp    rsi,rax
  40f62c:	cmovae rax,rsi
  40f630:	mov    QWORD PTR [rbp-0x18],rax
  40f634:	add    rax,0x1
  40f638:	cmp    edx,0x2
  40f63b:	mov    QWORD PTR [rbp+0x10],rax
  40f63f:	sbb    rax,rax
  40f642:	mov    edx,0x2693
  40f647:	and    eax,0x8
  40f64a:	add    rax,0x9
  40f64e:	cmp    rsi,rax
  40f651:	cmovae rax,rsi
  40f655:	mov    QWORD PTR [rbp-0x20],rax
  40f659:	add    rax,0x2
  40f65d:	cmp    ebx,0xc
  40f660:	mov    QWORD PTR [rbp+0x8],rax
  40f664:	mov    eax,0x273
  40f669:	cmove  rax,rdx
  40f66d:	mov    QWORD PTR [rbp-0x28],rax
  40f671:	add    rax,rsi
  40f674:	cmp    ebx,0xc
  40f677:	mov    QWORD PTR [rbp+0x0],rax
  40f67b:	sete   al
  40f67e:	movzx  eax,al
  40f681:	lea    rax,[rax+rax*1+0xd]
  40f686:	cmp    rsi,rax
  40f689:	cmovae rax,rsi
  40f68d:	mov    rsi,r12
  40f690:	mov    QWORD PTR [rbp-0x30],rax
  40f694:	add    rax,0xc
  40f698:	mov    QWORD PTR [rbp-0x8],rax
  40f69c:	mov    rax,rsi
  40f69f:	mov    ebx,0x7fffffff
  40f6a4:	mov    DWORD PTR [rbp+0xbc],0xffffffff
  40f6ae:	sub    rax,r14
  40f6b1:	cmp    rax,0x7fffffff
  40f6b7:	cmovbe rbx,rax
  40f6bb:	call   QWORD PTR [rip+0x1605f]        # 0x425720
  40f6c1:	mov    DWORD PTR [rax],0x0
  40f6c7:	mov    eax,DWORD PTR [rbp+0x88]
  40f6cd:	cmp    eax,0x11
  40f6d0:	ja     0x40fc40
  40f6d6:	mov    edx,eax
  40f6d8:	lea    rax,[rip+0xf6b5]        # 0x41ed94
  40f6df:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40f6e3:	add    rax,rdx
  40f6e6:	jmp    rax
  40f6e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f6f0:	mov    esi,0x6
  40f6f5:	mov    DWORD PTR [rbp+0x28],0x0
  40f6fc:	jmp    0x40f1d0
  40f701:	add    rax,r10
  40f704:	mov    edi,DWORD PTR [rax]
  40f706:	cmp    edi,0x10
  40f709:	mov    DWORD PTR [rbp+0x88],edi
  40f70f:	jne    0x40f14d
  40f715:	mov    r8,QWORD PTR [r13+0x18]
  40f719:	mov    r9,QWORD PTR [r13+0x20]
  40f71d:	cmp    r8,r9
  40f720:	je     0x40fd5c
  40f726:	mov    rdx,QWORD PTR [r13+0x28]
  40f72a:	cmp    rdx,0xffffffffffffffff
  40f72e:	je     0x4109ad
  40f734:	shl    rdx,0x5
  40f738:	add    rdx,r10
  40f73b:	cmp    DWORD PTR [rdx],0x5
  40f73e:	jne    0x40fc40
  40f744:	movsxd rdx,DWORD PTR [rdx+0x10]
  40f748:	mov    rcx,rdx
  40f74b:	shr    rcx,0x3f
  40f74f:	mov    r8,rcx
  40f752:	neg    r8
  40f755:	xor    rdx,r8
  40f758:	lea    rdi,[rdx+rcx*1]
  40f75c:	mov    QWORD PTR [rbp+0x68],rdi
  40f760:	mov    r8,QWORD PTR [r13+0x30]
  40f764:	mov    r11,QWORD PTR [r13+0x38]
  40f768:	mov    DWORD PTR [rbp+0x88],0x1
  40f772:	cmp    r8,r11
  40f775:	je     0x410c6c
  40f77b:	mov    rdx,QWORD PTR [r13+0x40]
  40f77f:	cmp    rdx,0xffffffffffffffff
  40f783:	je     0x41094e
  40f789:	shl    rdx,0x5
  40f78d:	add    r10,rdx
  40f790:	cmp    DWORD PTR [r10],0x5
  40f794:	jne    0x40fc40
  40f79a:	mov    r9d,DWORD PTR [r10+0x10]
  40f79e:	test   r9d,r9d
  40f7a1:	movsxd r15,r9d
  40f7a4:	js     0x4108dd
  40f7aa:	test   r15,r15
  40f7ad:	mov    rsi,QWORD PTR [rax+0x10]
  40f7b1:	mov    DWORD PTR [rbp+0xc0],0x0
  40f7bb:	je     0x410c40
  40f7c1:	movzx  edx,WORD PTR [rsi]
  40f7c4:	test   dx,dx
  40f7c7:	je     0x410c40
  40f7cd:	lea    rax,[rbp+0xc0]
  40f7d4:	mov    rcx,rsi
  40f7d7:	mov    QWORD PTR [rbp+0x98],r13
  40f7de:	mov    QWORD PTR [rbp+0x78],r12
  40f7e2:	mov    QWORD PTR [rbp+0x30],rsi
  40f7e6:	xor    edi,edi
  40f7e8:	mov    rsi,r15
  40f7eb:	mov    r12,rcx
  40f7ee:	mov    r13,rax
  40f7f1:	mov    r15,QWORD PTR [rbp+0x48]
  40f7f5:	jmp    0x40f829
  40f7f7:	nop    WORD PTR [rax+rax*1+0x0]
  40f800:	cdqe   
  40f802:	cmp    rax,rsi
  40f805:	ja     0x4106d0
  40f80b:	add    r12,0x2
  40f80f:	add    rdi,rax
  40f812:	sub    rsi,rax
  40f815:	je     0x4106d0
  40f81b:	movzx  edx,WORD PTR [r12]
  40f820:	test   dx,dx
  40f823:	je     0x4106d0
  40f829:	mov    r8,r13
  40f82c:	mov    rcx,r15
  40f82f:	call   0x4138c0
  40f834:	test   eax,eax
  40f836:	jns    0x40f800
  40f838:	test   rbx,rbx
  40f83b:	je     0x40f84e
  40f83d:	cmp    QWORD PTR [rbp+0x4e0],rbx
  40f844:	je     0x40f84e
  40f846:	mov    rcx,rbx
  40f849:	call   0x4185e0
  40f84e:	mov    rax,QWORD PTR [rbp+0x50]
  40f852:	test   rax,rax
  40f855:	je     0x40f85f
  40f857:	mov    rcx,rax
  40f85a:	call   0x4185e0
  40f85f:	mov    rax,QWORD PTR [rbp+0x60]
  40f863:	mov    rcx,QWORD PTR [rbp+0x208]
  40f86a:	add    rax,0x20
  40f86e:	cmp    rcx,rax
  40f871:	je     0x40f878
  40f873:	call   0x4185e0
  40f878:	mov    rax,QWORD PTR [rbp+0x58]
  40f87c:	mov    rcx,QWORD PTR [rbp+0x118]
  40f883:	add    rax,0x10
  40f887:	cmp    rcx,rax
  40f88a:	je     0x40f891
  40f88c:	call   0x4185e0
  40f891:	call   QWORD PTR [rip+0x15e89]        # 0x425720
  40f897:	mov    DWORD PTR [rax],0x2a
  40f89d:	xor    eax,eax
  40f89f:	jmp    0x40f40b
  40f8a4:	mov    BYTE PTR [rdi],0x6c
  40f8a7:	add    rdi,0x1
  40f8ab:	jmp    0x40f2c3
  40f8b0:	mov    DWORD PTR [rax],r14d
  40f8b3:	mov    r15,r14
  40f8b6:	mov    QWORD PTR [rbp+0x98],rbx
  40f8bd:	jmp    0x40f4e6
  40f8c2:	mov    rax,QWORD PTR [r13+0x50]
  40f8c6:	shl    rax,0x5
  40f8ca:	add    rax,QWORD PTR [rbp+0x118]
  40f8d1:	mov    r9d,DWORD PTR [rax+0x10]
  40f8d5:	mov    eax,DWORD PTR [rbp+0x78]
  40f8d8:	cmp    eax,0x1
  40f8db:	je     0x40fad0
  40f8e1:	cmp    eax,0x2
  40f8e4:	mov    rax,QWORD PTR [rbp+0x98]
  40f8eb:	lea    r12,[rax+r14*1]
  40f8ef:	mov    rax,QWORD PTR [rbp+0x70]
  40f8f3:	jne    0x40fc45
  40f8f9:	mov    QWORD PTR [rsp+0x30],rax
  40f8fe:	mov    eax,DWORD PTR [rbp+0xc4]
  40f904:	mov    rdx,rbx
  40f907:	mov    DWORD PTR [rsp+0x28],r9d
  40f90c:	mov    r8,QWORD PTR [rbp+0x90]
  40f913:	mov    rcx,r12
  40f916:	mov    r9d,DWORD PTR [rbp+0xc0]
  40f91d:	mov    DWORD PTR [rsp+0x20],eax
  40f921:	call   0x40eed0
  40f926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f930:	movsxd rdx,DWORD PTR [rbp+0xbc]
  40f937:	test   edx,edx
  40f939:	js     0x40fa93
  40f93f:	movsxd rcx,edx
  40f942:	cmp    rcx,rbx
  40f945:	jae    0x40f952
  40f947:	cmp    BYTE PTR [r12+rcx*1],0x0
  40f94c:	jne    0x40fc40
  40f952:	cmp    eax,edx
  40f954:	jle    0x40f95f
  40f956:	mov    DWORD PTR [rbp+0xbc],eax
  40f95c:	movsxd rdx,eax
  40f95f:	lea    eax,[rdx+0x1]
  40f962:	cmp    rax,rbx
  40f965:	jb     0x4104c0
  40f96b:	cmp    rbx,0x7fffffff
  40f972:	je     0x4104e0
  40f978:	lea    rcx,[rsi+rsi*1]
  40f97c:	test   rsi,rsi
  40f97f:	mov    rax,0xffffffffffffffff
  40f986:	cmovs  rcx,rax
  40f98a:	add    edx,0x2
  40f98d:	add    rdx,r14
  40f990:	jb     0x40f99c
  40f992:	cmp    rcx,rdx
  40f995:	mov    rax,rdx
  40f998:	cmovae rax,rcx
  40f99c:	cmp    rsi,rax
  40f99f:	jae    0x40f69c
  40f9a5:	test   rsi,rsi
  40f9a8:	je     0x40fc61
  40f9ae:	js     0x410560
  40f9b4:	add    rsi,rsi
  40f9b7:	cmp    rsi,rax
  40f9ba:	cmovb  rsi,rax
  40f9be:	cmp    rsi,0xffffffffffffffff
  40f9c2:	je     0x410560
  40f9c8:	mov    rax,QWORD PTR [rbp+0x98]
  40f9cf:	cmp    rax,QWORD PTR [rbp+0x4e0]
  40f9d6:	sete   bl
  40f9d9:	test   rax,rax
  40f9dc:	je     0x40fc70
  40f9e2:	test   bl,bl
  40f9e4:	jne    0x40fc70
  40f9ea:	mov    rcx,QWORD PTR [rbp+0x98]
  40f9f1:	mov    rdx,rsi
  40f9f4:	call   0x411990
  40f9f9:	mov    r9,rax
  40f9fc:	test   r9,r9
  40f9ff:	je     0x410560
  40fa05:	test   bl,bl
  40fa07:	je     0x40fa12
  40fa09:	test   r14,r14
  40fa0c:	jne    0x40fef0
  40fa12:	mov    QWORD PTR [rbp+0x98],r9
  40fa19:	jmp    0x40f69c
  40fa1e:	xchg   ax,ax
  40fa20:	mov    rax,QWORD PTR [r13+0x50]
  40fa24:	shl    rax,0x5
  40fa28:	add    rax,QWORD PTR [rbp+0x118]
  40fa2f:	mov    r9,QWORD PTR [rax+0x10]
  40fa33:	mov    eax,DWORD PTR [rbp+0x78]
  40fa36:	cmp    eax,0x1
  40fa39:	je     0x40ff10
  40fa3f:	cmp    eax,0x2
  40fa42:	mov    rax,QWORD PTR [rbp+0x98]
  40fa49:	lea    r12,[rax+r14*1]
  40fa4d:	mov    rax,QWORD PTR [rbp+0x70]
  40fa51:	jne    0x40fd40
  40fa57:	mov    QWORD PTR [rsp+0x30],rax
  40fa5c:	mov    QWORD PTR [rsp+0x28],r9
  40fa61:	mov    eax,DWORD PTR [rbp+0xc4]
  40fa67:	mov    r9d,DWORD PTR [rbp+0xc0]
  40fa6e:	mov    rdx,rbx
  40fa71:	mov    r8,QWORD PTR [rbp+0x90]
  40fa78:	mov    rcx,r12
  40fa7b:	mov    DWORD PTR [rsp+0x20],eax
  40fa7f:	call   0x40eed0
  40fa84:	movsxd rdx,DWORD PTR [rbp+0xbc]
  40fa8b:	test   edx,edx
  40fa8d:	jns    0x40f93f
  40fa93:	cmp    BYTE PTR [rdi+0x1],0x0
  40fa97:	je     0x40fcd0
  40fa9d:	mov    BYTE PTR [rdi+0x1],0x0
  40faa1:	jmp    0x40f69c
  40faa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fab0:	mov    rax,QWORD PTR [r13+0x50]
  40fab4:	shl    rax,0x5
  40fab8:	add    rax,QWORD PTR [rbp+0x118]
  40fabf:	movzx  r9d,WORD PTR [rax+0x10]
  40fac4:	mov    eax,DWORD PTR [rbp+0x78]
  40fac7:	cmp    eax,0x1
  40faca:	jne    0x40f8e1
  40fad0:	mov    rax,QWORD PTR [rbp+0x98]
  40fad7:	mov    DWORD PTR [rsp+0x20],r9d
  40fadc:	mov    rdx,rbx
  40fadf:	mov    r9d,DWORD PTR [rbp+0xc0]
  40fae6:	mov    r8,QWORD PTR [rbp+0x90]
  40faed:	lea    r12,[rax+r14*1]
  40faf1:	mov    rax,QWORD PTR [rbp+0x70]
  40faf5:	mov    rcx,r12
  40faf8:	mov    QWORD PTR [rsp+0x28],rax
  40fafd:	call   0x40eed0
  40fb02:	jmp    0x40f930
  40fb07:	nop    WORD PTR [rax+rax*1+0x0]
  40fb10:	mov    rax,QWORD PTR [r13+0x50]
  40fb14:	shl    rax,0x5
  40fb18:	add    rax,QWORD PTR [rbp+0x118]
  40fb1f:	movsx  r9d,BYTE PTR [rax+0x10]
  40fb24:	mov    eax,DWORD PTR [rbp+0x78]
  40fb27:	cmp    eax,0x1
  40fb2a:	jne    0x40f8e1
  40fb30:	jmp    0x40fad0
  40fb32:	mov    rax,QWORD PTR [r13+0x50]
  40fb36:	shl    rax,0x5
  40fb3a:	add    rax,QWORD PTR [rbp+0x118]
  40fb41:	movsd  xmm0,QWORD PTR [rax+0x10]
  40fb46:	mov    eax,DWORD PTR [rbp+0x78]
  40fb49:	cmp    eax,0x1
  40fb4c:	je     0x410482
  40fb52:	cmp    eax,0x2
  40fb55:	mov    rax,QWORD PTR [rbp+0x98]
  40fb5c:	lea    r12,[rax+r14*1]
  40fb60:	mov    rax,QWORD PTR [rbp+0x70]
  40fb64:	jne    0x410044
  40fb6a:	mov    QWORD PTR [rsp+0x30],rax
  40fb6f:	mov    eax,DWORD PTR [rbp+0xc4]
  40fb75:	movsd  QWORD PTR [rsp+0x28],xmm0
  40fb7b:	mov    r9d,DWORD PTR [rbp+0xc0]
  40fb82:	mov    r8,QWORD PTR [rbp+0x90]
  40fb89:	mov    rdx,rbx
  40fb8c:	mov    rcx,r12
  40fb8f:	mov    DWORD PTR [rsp+0x20],eax
  40fb93:	call   0x40eed0
  40fb98:	jmp    0x40f930
  40fb9d:	nop    DWORD PTR [rax]
  40fba0:	mov    rax,QWORD PTR [r13+0x50]
  40fba4:	shl    rax,0x5
  40fba8:	add    rax,QWORD PTR [rbp+0x118]
  40fbaf:	fld    TBYTE PTR [rax+0x10]
  40fbb2:	mov    eax,DWORD PTR [rbp+0x78]
  40fbb5:	cmp    eax,0x1
  40fbb8:	fstp   TBYTE PTR [rbp+0xa0]
  40fbbe:	je     0x410460
  40fbc4:	cmp    eax,0x2
  40fbc7:	mov    rax,QWORD PTR [rbp+0x98]
  40fbce:	lea    r12,[rax+r14*1]
  40fbd2:	mov    rax,QWORD PTR [rbp+0x70]
  40fbd6:	jne    0x410024
  40fbdc:	mov    QWORD PTR [rsp+0x30],rax
  40fbe1:	mov    rax,QWORD PTR [rbp+0x40]
  40fbe5:	mov    QWORD PTR [rsp+0x28],rax
  40fbea:	jmp    0x40fa61
  40fbef:	nop
  40fbf0:	mov    rax,QWORD PTR [r13+0x50]
  40fbf4:	shl    rax,0x5
  40fbf8:	add    rax,QWORD PTR [rbp+0x118]
  40fbff:	movsx  r9d,WORD PTR [rax+0x10]
  40fc04:	mov    eax,DWORD PTR [rbp+0x78]
  40fc07:	cmp    eax,0x1
  40fc0a:	jne    0x40f8e1
  40fc10:	jmp    0x40fad0
  40fc15:	mov    rax,QWORD PTR [r13+0x50]
  40fc19:	shl    rax,0x5
  40fc1d:	add    rax,QWORD PTR [rbp+0x118]
  40fc24:	movzx  r9d,BYTE PTR [rax+0x10]
  40fc29:	mov    eax,DWORD PTR [rbp+0x78]
  40fc2c:	cmp    eax,0x1
  40fc2f:	jne    0x40f8e1
  40fc35:	jmp    0x40fad0
  40fc3a:	nop    WORD PTR [rax+rax*1+0x0]
  40fc40:	call   0x418648
  40fc45:	mov    r8,QWORD PTR [rbp+0x90]
  40fc4c:	mov    QWORD PTR [rsp+0x20],rax
  40fc51:	mov    rdx,rbx
  40fc54:	mov    rcx,r12
  40fc57:	call   0x40eed0
  40fc5c:	jmp    0x40f930
  40fc61:	mov    esi,0xc
  40fc66:	jmp    0x40f9b7
  40fc6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fc70:	mov    rcx,rsi
  40fc73:	call   0x410c80
  40fc78:	mov    r9,rax
  40fc7b:	jmp    0x40f9fc
  40fc80:	mov    rcx,r12
  40fc83:	call   0x410c80
  40fc88:	movzx  r8d,BYTE PTR [rbp+0x68]
  40fc8d:	mov    QWORD PTR [rbp+0x98],rax
  40fc94:	jmp    0x40f5a0
  40fc99:	nop    DWORD PTR [rax+0x0]
  40fca0:	mov    QWORD PTR [rbp+0x98],rbx
  40fca7:	jmp    0x40f5ca
  40fcac:	nop    DWORD PTR [rax+0x0]
  40fcb0:	mov    DWORD PTR [rbp+0x78],edx
  40fcb3:	jmp    0x40f330
  40fcb8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcc0:	xor    edx,edx
  40fcc2:	jmp    0x40f2fe
  40fcc7:	nop    WORD PTR [rax+rax*1+0x0]
  40fcd0:	test   eax,eax
  40fcd2:	jns    0x40f956
  40fcd8:	movzx  eax,BYTE PTR [r13+0x48]
  40fcdd:	mov    rcx,QWORD PTR [r13+0x50]
  40fce1:	sub    eax,0x41
  40fce4:	cmp    al,0x37
  40fce6:	ja     0x40fc40
  40fcec:	lea    rdx,[rip+0xf0e9]        # 0x41eddc
  40fcf3:	movzx  eax,al
  40fcf6:	movsxd rax,DWORD PTR [rdx+rax*4]
  40fcfa:	add    rdx,rax
  40fcfd:	jmp    rdx
  40fcff:	nop
  40fd00:	cmp    rcx,0xffffffffffffffff
  40fd04:	je     0x40f3c0
  40fd0a:	call   0x410c80
  40fd0f:	test   rax,rax
  40fd12:	mov    QWORD PTR [rbp+0x90],rax
  40fd19:	je     0x40f3c0
  40fd1f:	cmp    QWORD PTR [rbp+0x4e0],0x0
  40fd27:	mov    rax,QWORD PTR [rbp+0x90]
  40fd2e:	mov    QWORD PTR [rbp+0x50],rax
  40fd32:	jne    0x40efd4
  40fd38:	xor    r12d,r12d
  40fd3b:	jmp    0x40efde
  40fd40:	mov    r8,QWORD PTR [rbp+0x90]
  40fd47:	mov    QWORD PTR [rsp+0x20],rax
  40fd4c:	mov    rdx,rbx
  40fd4f:	mov    rcx,r12
  40fd52:	call   0x40eed0
  40fd57:	jmp    0x40f930
  40fd5c:	mov    r8,QWORD PTR [r13+0x30]
  40fd60:	mov    r11,QWORD PTR [r13+0x38]
  40fd64:	mov    QWORD PTR [rbp+0x68],0x0
  40fd6c:	mov    DWORD PTR [rbp+0x88],0x0
  40fd76:	cmp    r8,r11
  40fd79:	jne    0x40f77b
  40fd7f:	mov    rsi,QWORD PTR [rax+0x10]
  40fd83:	mov    rcx,rsi
  40fd86:	xor    edi,edi
  40fd88:	xor    r15d,r15d
  40fd8b:	call   0x4184d8
  40fd90:	lea    rax,[rsi+rax*2]
  40fd94:	mov    QWORD PTR [rbp+0x98],rax
  40fd9b:	xor    r9d,r9d
  40fd9e:	mov    QWORD PTR [rbp+0x30],0x0
  40fda6:	mov    rcx,QWORD PTR [rbp+0x68]
  40fdaa:	cmp    QWORD PTR [rbp+0x30],rcx
  40fdae:	jae    0x410271
  40fdb4:	test   BYTE PTR [r13+0x10],0x2
  40fdb9:	jne    0x410271
  40fdbf:	mov    r11,QWORD PTR [rbp+0x68]
  40fdc3:	sub    r11,QWORD PTR [rbp+0x30]
  40fdc7:	mov    rax,r11
  40fdca:	add    rax,r14
  40fdcd:	mov    rcx,rax
  40fdd0:	mov    QWORD PTR [rbp+0x88],rax
  40fdd7:	mov    rax,0xffffffffffffffff
  40fdde:	cmovae rax,rcx
  40fde2:	cmp    r12,rax
  40fde5:	jae    0x410ba7
  40fdeb:	test   r12,r12
  40fdee:	je     0x410b72
  40fdf4:	js     0x40fe20
  40fdf6:	add    r12,r12
  40fdf9:	cmp    r14,rcx
  40fdfc:	ja     0x40fe20
  40fdfe:	cmp    r12,QWORD PTR [rbp+0x88]
  40fe05:	jae    0x4101ce
  40fe0b:	mov    rax,QWORD PTR [rbp+0x88]
  40fe12:	mov    r12,rax
  40fe15:	add    rax,0x1
  40fe19:	jne    0x4101ce
  40fe1f:	nop
  40fe20:	mov    QWORD PTR [rbp+0x98],rbx
  40fe27:	nop    WORD PTR [rax+rax*1+0x0]
  40fe30:	mov    rax,QWORD PTR [rip+0x158e9]        # 0x425720
  40fe37:	mov    QWORD PTR [rbp+0x68],rax
  40fe3b:	jmp    0x40f390
  40fe40:	xor    r15d,r15d
  40fe43:	movabs r11,0x1999999999999999
  40fe4d:	nop    DWORD PTR [rax]
  40fe50:	add    rcx,0x1
  40fe54:	movsx  eax,BYTE PTR [rcx-0x1]
  40fe58:	mov    rdx,0xffffffffffffffff
  40fe5f:	sub    eax,0x30
  40fe62:	cmp    r15,r11
  40fe65:	cdqe   
  40fe67:	ja     0x40fe70
  40fe69:	lea    rdx,[r15+r15*4]
  40fe6d:	add    rdx,rdx
  40fe70:	add    rdx,rax
  40fe73:	mov    rax,0xffffffffffffffff
  40fe7a:	mov    r15,rdx
  40fe7d:	cmovb  r15,rax
  40fe81:	cmp    rcx,r9
  40fe84:	jne    0x40fe50
  40fe86:	jmp    0x40f18d
  40fe8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40fe90:	add    rdx,0x1
  40fe94:	xor    esi,esi
  40fe96:	cmp    rcx,rdx
  40fe99:	je     0x40f1c9
  40fe9f:	movabs r9,0x1999999999999999
  40fea9:	nop    DWORD PTR [rax+0x0]
  40feb0:	add    rdx,0x1
  40feb4:	movsx  eax,BYTE PTR [rdx-0x1]
  40feb8:	mov    r10,0xffffffffffffffff
  40febf:	sub    eax,0x30
  40fec2:	cmp    rsi,r9
  40fec5:	cdqe   
  40fec7:	ja     0x40fed0
  40fec9:	lea    r10,[rsi+rsi*4]
  40fecd:	add    r10,r10
  40fed0:	mov    rsi,r10
  40fed3:	add    rsi,rax
  40fed6:	mov    rax,0xffffffffffffffff
  40fedd:	cmovb  rsi,rax
  40fee1:	cmp    rdx,rcx
  40fee4:	jne    0x40feb0
  40fee6:	jmp    0x40f1c9
  40feeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40fef0:	mov    rdx,QWORD PTR [rbp+0x98]
  40fef7:	mov    r8,r14
  40fefa:	mov    rcx,r9
  40fefd:	call   0x4185a0
  40ff02:	mov    QWORD PTR [rbp+0x98],rax
  40ff09:	jmp    0x40f69c
  40ff0e:	xchg   ax,ax
  40ff10:	mov    rax,QWORD PTR [rbp+0x98]
  40ff17:	mov    QWORD PTR [rsp+0x20],r9
  40ff1c:	lea    r12,[rax+r14*1]
  40ff20:	mov    rax,QWORD PTR [rbp+0x70]
  40ff24:	mov    QWORD PTR [rsp+0x28],rax
  40ff29:	mov    r9d,DWORD PTR [rbp+0xc0]
  40ff30:	mov    r8,QWORD PTR [rbp+0x90]
  40ff37:	mov    rdx,rbx
  40ff3a:	mov    rcx,r12
  40ff3d:	call   0x40eed0
  40ff42:	jmp    0x40f930
  40ff47:	nop    WORD PTR [rax+rax*1+0x0]
  40ff50:	or     r8d,0x2
  40ff54:	neg    r15
  40ff57:	jmp    0x40f18d
  40ff5c:	nop    DWORD PTR [rax+0x0]
  40ff60:	xor    r15d,r15d
  40ff63:	jmp    0x40f18d
  40ff68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff70:	mov    r12d,0xc
  40ff76:	jmp    0x40f484
  40ff7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff80:	mov    rcx,r12
  40ff83:	call   0x410c80
  40ff88:	mov    r9,rax
  40ff8b:	jmp    0x40f4c0
  40ff90:	xor    eax,eax
  40ff92:	jmp    0x40f40b
  40ff97:	nop    WORD PTR [rax+rax*1+0x0]
  40ffa0:	mov    BYTE PTR [rdi],0x4c
  40ffa3:	add    rdi,0x1
  40ffa7:	jmp    0x40f2c3
  40ffac:	nop    DWORD PTR [rax+0x0]
  40ffb0:	mov    rdx,rbx
  40ffb3:	mov    r8,r14
  40ffb6:	mov    rcx,r9
  40ffb9:	call   0x4185a0
  40ffbe:	mov    rbx,rax
  40ffc1:	jmp    0x40f4da
  40ffc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ffd0:	mov    QWORD PTR [rax],r14
  40ffd3:	mov    r15,r14
  40ffd6:	mov    QWORD PTR [rbp+0x98],rbx
  40ffdd:	jmp    0x40f4e6
  40ffe2:	mov    WORD PTR [rax],r14w
  40ffe6:	mov    r15,r14
  40ffe9:	mov    QWORD PTR [rbp+0x98],rbx
  40fff0:	jmp    0x40f4e6
  40fff5:	mov    BYTE PTR [rax],r14b
  40fff8:	mov    r15,r14
  40fffb:	mov    QWORD PTR [rbp+0x98],rbx
  410002:	jmp    0x40f4e6
  410007:	nop    WORD PTR [rax+rax*1+0x0]
  410010:	mov    BYTE PTR [rdi],0x49
  410013:	mov    BYTE PTR [rdi+0x1],0x36
  410017:	add    rdi,0x3
  41001b:	mov    BYTE PTR [rdi-0x1],0x34
  41001f:	jmp    0x40f2c3
  410024:	mov    r9,QWORD PTR [rbp+0x40]
  410028:	mov    r8,QWORD PTR [rbp+0x90]
  41002f:	mov    rdx,rbx
  410032:	mov    QWORD PTR [rsp+0x20],rax
  410037:	mov    rcx,r12
  41003a:	call   0x40eed0
  41003f:	jmp    0x40f930
  410044:	mov    r8,QWORD PTR [rbp+0x90]
  41004b:	movapd xmm3,xmm0
  41004f:	movq   r9,xmm0
  410054:	mov    QWORD PTR [rsp+0x20],rax
  410059:	mov    rdx,rbx
  41005c:	mov    rcx,r12
  41005f:	call   0x40eed0
  410064:	jmp    0x40f930
  410069:	nop    DWORD PTR [rax+0x0]
  410070:	mov    rcx,rax
  410073:	call   0x4185e0
  410078:	jmp    0x40f3a9
  41007d:	cmp    DWORD PTR [rbp+0x88],0x10
  410084:	je     0x40fc40
  41008a:	mov    rax,rcx
  41008d:	mov    edx,DWORD PTR [rbp+0x28]
  410090:	shl    rax,0x5
  410094:	add    rax,QWORD PTR [rbp+0x118]
  41009b:	test   edx,edx
  41009d:	mov    rcx,QWORD PTR [rax+0x10]
  4100a1:	jne    0x410c4e
  4100a7:	call   0x418538
  4100ac:	cmp    r15,rax
  4100af:	jbe    0x410bb7
  4100b5:	lea    rdx,[r15+0x1]
  4100b9:	mov    rax,r15
  4100bc:	cmp    rdx,rax
  4100bf:	jae    0x410a57
  4100c5:	mov    rdx,0xffffffffffffffff
  4100cc:	add    rdx,r14
  4100cf:	mov    rax,0xffffffffffffffff
  4100d6:	cmovb  rdx,rax
  4100da:	test   rsi,rsi
  4100dd:	js     0x410baf
  4100e3:	lea    r8,[rsi+rsi*1]
  4100e7:	lea    rcx,[r8+0xc]
  4100eb:	cmp    r8,rcx
  4100ee:	ja     0x40f9a5
  4100f4:	cmp    rdx,rcx
  4100f7:	cmovb  rdx,rcx
  4100fb:	cmp    rsi,rdx
  4100fe:	mov    rax,rdx
  410101:	jae    0x40f69c
  410107:	jmp    0x40f9a5
  41010c:	mov    eax,0x13
  410111:	jmp    0x4100ac
  410113:	mov    rcx,QWORD PTR [rbp+0x10]
  410117:	cmp    QWORD PTR [rbp-0x18],rcx
  41011b:	ja     0x4101ad
  410121:	mov    rax,QWORD PTR [rbp+0x10]
  410125:	jmp    0x4100ac
  410127:	xor    edx,edx
  410129:	mov    r11,QWORD PTR [rbp-0x38]
  41012d:	cmp    QWORD PTR [rbp+0x20],r11
  410131:	mov    rax,0xffffffffffffffff
  410138:	jb     0x4100bc
  41013a:	mov    r11,QWORD PTR [rbp+0x18]
  41013e:	cmp    QWORD PTR [rbp+0x20],r11
  410142:	ja     0x4100bc
  410148:	mov    rax,QWORD PTR [rbp+0x18]
  41014c:	jmp    0x4100ac
  410151:	cmp    DWORD PTR [rbp+0x88],0xe
  410158:	mov    eax,0x1
  41015d:	jne    0x4100ac
  410163:	mov    rax,QWORD PTR [rip+0xf726]        # 0x41f890
  41016a:	mov    rax,QWORD PTR [rax]
  41016d:	movsxd rax,DWORD PTR [rax]
  410170:	jmp    0x4100ac
  410175:	mov    rcx,QWORD PTR [rbp+0x8]
  410179:	cmp    QWORD PTR [rbp-0x20],rcx
  41017d:	ja     0x4101ad
  41017f:	mov    rax,QWORD PTR [rbp+0x8]
  410183:	jmp    0x4100ac
  410188:	mov    rcx,QWORD PTR [rbp+0x0]
  41018c:	cmp    QWORD PTR [rbp-0x28],rcx
  410190:	ja     0x4101ad
  410192:	mov    rax,QWORD PTR [rbp+0x0]
  410196:	jmp    0x4100ac
  41019b:	mov    rax,QWORD PTR [rbp-0x10]
  41019f:	add    rax,0xc
  4101a3:	cmp    rax,0xb
  4101a7:	ja     0x4100ac
  4101ad:	xor    edx,edx
  4101af:	mov    rax,0xffffffffffffffff
  4101b6:	jmp    0x4100bc
  4101bb:	mov    rcx,QWORD PTR [rbp-0x30]
  4101bf:	cmp    QWORD PTR [rbp-0x8],rcx
  4101c3:	jb     0x4101ad
  4101c5:	mov    rax,QWORD PTR [rbp-0x8]
  4101c9:	jmp    0x4100ac
  4101ce:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  4101d5:	mov    DWORD PTR [rbp+0x20],r9d
  4101d9:	mov    QWORD PTR [rbp+0x78],r11
  4101dd:	sete   r8b
  4101e1:	test   rbx,rbx
  4101e4:	mov    BYTE PTR [rbp+0x28],r8b
  4101e8:	je     0x410b8a
  4101ee:	test   r8b,r8b
  4101f1:	jne    0x410b8a
  4101f7:	mov    rdx,r12
  4101fa:	mov    rcx,rbx
  4101fd:	call   0x411990
  410202:	movzx  r8d,BYTE PTR [rbp+0x28]
  410207:	mov    r9d,DWORD PTR [rbp+0x20]
  41020b:	mov    r10,rax
  41020e:	mov    r11,QWORD PTR [rbp+0x78]
  410212:	test   r10,r10
  410215:	je     0x40fe20
  41021b:	test   r14,r14
  41021e:	je     0x410246
  410220:	test   r8b,r8b
  410223:	je     0x410246
  410225:	mov    rcx,r10
  410228:	mov    r8,r14
  41022b:	mov    rdx,rbx
  41022e:	mov    DWORD PTR [rbp+0x28],r9d
  410232:	mov    QWORD PTR [rbp+0x78],r11
  410236:	call   0x4185a0
  41023b:	mov    r11,QWORD PTR [rbp+0x78]
  41023f:	mov    r9d,DWORD PTR [rbp+0x28]
  410243:	mov    r10,rax
  410246:	lea    rcx,[r10+r14*1]
  41024a:	mov    r8,r11
  41024d:	mov    edx,0x20
  410252:	mov    DWORD PTR [rbp+0x28],r9d
  410256:	mov    QWORD PTR [rbp+0x78],r10
  41025a:	call   0x418590
  41025f:	mov    r10,QWORD PTR [rbp+0x78]
  410263:	mov    r14,QWORD PTR [rbp+0x88]
  41026a:	mov    r9d,DWORD PTR [rbp+0x28]
  41026e:	mov    rbx,r10
  410271:	or     r9d,r15d
  410274:	je     0x410570
  41027a:	mov    rdx,rdi
  41027d:	mov    rax,0xffffffffffffffff
  410284:	mov    DWORD PTR [rbp+0xb4],0x0
  41028e:	add    rdx,r14
  410291:	cmovae rax,rdx
  410295:	cmp    rax,r12
  410298:	jbe    0x410775
  41029e:	test   r12,r12
  4102a1:	je     0x41070f
  4102a7:	js     0x4102b5
  4102a9:	add    r12,r12
  4102ac:	cmp    rdx,r14
  4102af:	jae    0x41071e
  4102b5:	mov    rax,QWORD PTR [rip+0x15464]        # 0x425720
  4102bc:	mov    QWORD PTR [rbp+0x98],rbx
  4102c3:	mov    QWORD PTR [rbp+0x68],rax
  4102c7:	jmp    0x40f390
  4102cc:	nop    DWORD PTR [rax+0x0]
  4102d0:	mov    rax,QWORD PTR [rbp+0x60]
  4102d4:	mov    rcx,QWORD PTR [rbp+0x208]
  4102db:	add    rax,0x20
  4102df:	cmp    rcx,rax
  4102e2:	je     0x4102e9
  4102e4:	call   0x4185e0
  4102e9:	mov    rax,QWORD PTR [rbp+0x58]
  4102ed:	mov    rcx,QWORD PTR [rbp+0x118]
  4102f4:	add    rax,0x10
  4102f8:	cmp    rcx,rax
  4102fb:	je     0x410302
  4102fd:	call   0x4185e0
  410302:	call   QWORD PTR [rip+0x15418]        # 0x425720
  410308:	mov    DWORD PTR [rax],0x16
  41030e:	xor    eax,eax
  410310:	jmp    0x40f40b
  410315:	mov    rax,rbx
  410318:	lea    rsi,[r14+0x1]
  41031c:	mov    r15,rbx
  41031f:	mov    QWORD PTR [rbp+0x98],rax
  410326:	mov    rax,0xffffffffffffffff
  41032d:	mov    rbx,r12
  410330:	cmp    rsi,r14
  410333:	mov    rdx,rax
  410336:	cmovae rdx,rsi
  41033a:	cmp    rdx,r12
  41033d:	jbe    0x4103c8
  410343:	test   r12,r12
  410346:	je     0x410a3a
  41034c:	js     0x410c06
  410352:	add    rbx,rbx
  410355:	cmp    rsi,r14
  410358:	mov    rax,rsi
  41035b:	jae    0x410364
  41035d:	mov    rax,0xffffffffffffffff
  410364:	cmp    rax,rbx
  410367:	jbe    0x410375
  410369:	cmp    rsi,r14
  41036c:	jb     0x40fe30
  410372:	mov    rbx,rsi
  410375:	cmp    rbx,0xffffffffffffffff
  410379:	je     0x40fe30
  41037f:	cmp    QWORD PTR [rbp+0x4e0],r15
  410386:	sete   dil
  41038a:	test   r15,r15
  41038d:	je     0x410afe
  410393:	test   dil,dil
  410396:	jne    0x410afe
  41039c:	mov    rdx,rbx
  41039f:	mov    rcx,r15
  4103a2:	call   0x411990
  4103a7:	mov    r9,rax
  4103aa:	test   r9,r9
  4103ad:	je     0x40fe30
  4103b3:	test   r14,r14
  4103b6:	je     0x4103c1
  4103b8:	test   dil,dil
  4103bb:	jne    0x410b58
  4103c1:	mov    QWORD PTR [rbp+0x98],r9
  4103c8:	mov    rax,QWORD PTR [rbp+0x98]
  4103cf:	cmp    rax,QWORD PTR [rbp+0x4e0]
  4103d6:	mov    BYTE PTR [rax+r14*1],0x0
  4103db:	je     0x4103fe
  4103dd:	cmp    rbx,rsi
  4103e0:	jbe    0x4103fe
  4103e2:	mov    rdx,rsi
  4103e5:	mov    rcx,rax
  4103e8:	mov    rdi,rax
  4103eb:	call   0x411990
  4103f0:	test   rax,rax
  4103f3:	cmove  rax,rdi
  4103f7:	mov    QWORD PTR [rbp+0x98],rax
  4103fe:	mov    rax,QWORD PTR [rbp+0x50]
  410402:	test   rax,rax
  410405:	je     0x41040f
  410407:	mov    rcx,rax
  41040a:	call   0x4185e0
  41040f:	mov    rax,QWORD PTR [rbp+0x60]
  410413:	mov    rcx,QWORD PTR [rbp+0x208]
  41041a:	add    rax,0x20
  41041e:	cmp    rcx,rax
  410421:	je     0x410428
  410423:	call   0x4185e0
  410428:	mov    rax,QWORD PTR [rbp+0x58]
  41042c:	mov    rcx,QWORD PTR [rbp+0x118]
  410433:	add    rax,0x10
  410437:	cmp    rcx,rax
  41043a:	je     0x410441
  41043c:	call   0x4185e0
  410441:	mov    rax,QWORD PTR [rbp+0x4e8]
  410448:	mov    QWORD PTR [rax],r14
  41044b:	mov    rax,QWORD PTR [rbp+0x98]
  410452:	jmp    0x40f40b
  410457:	nop    WORD PTR [rax+rax*1+0x0]
  410460:	mov    rax,QWORD PTR [rbp+0x98]
  410467:	lea    r12,[rax+r14*1]
  41046b:	mov    rax,QWORD PTR [rbp+0x70]
  41046f:	mov    QWORD PTR [rsp+0x28],rax
  410474:	mov    rax,QWORD PTR [rbp+0x40]
  410478:	mov    QWORD PTR [rsp+0x20],rax
  41047d:	jmp    0x40ff29
  410482:	mov    rax,QWORD PTR [rbp+0x98]
  410489:	mov    r9d,DWORD PTR [rbp+0xc0]
  410490:	movsd  QWORD PTR [rsp+0x20],xmm0
  410496:	mov    r8,QWORD PTR [rbp+0x90]
  41049d:	mov    rdx,rbx
  4104a0:	lea    r12,[rax+r14*1]
  4104a4:	mov    rax,QWORD PTR [rbp+0x70]
  4104a8:	mov    rcx,r12
  4104ab:	mov    QWORD PTR [rsp+0x28],rax
  4104b0:	call   0x40eed0
  4104b5:	jmp    0x40f930
  4104ba:	nop    WORD PTR [rax+rax*1+0x0]
  4104c0:	lea    r15,[rdx+r14*1]
  4104c4:	mov    r12,rsi
  4104c7:	call   QWORD PTR [rip+0x15253]        # 0x425720
  4104cd:	mov    edi,DWORD PTR [rbp+0x30]
  4104d0:	mov    DWORD PTR [rax],edi
  4104d2:	jmp    0x40f4e6
  4104d7:	nop    WORD PTR [rax+rax*1+0x0]
  4104e0:	mov    rax,QWORD PTR [rbp+0x98]
  4104e7:	test   rax,rax
  4104ea:	je     0x410501
  4104ec:	cmp    QWORD PTR [rbp+0x4e0],rax
  4104f3:	je     0x410501
  4104f5:	mov    rcx,QWORD PTR [rbp+0x98]
  4104fc:	call   0x4185e0
  410501:	mov    rax,QWORD PTR [rbp+0x50]
  410505:	test   rax,rax
  410508:	je     0x410512
  41050a:	mov    rcx,rax
  41050d:	call   0x4185e0
  410512:	mov    rax,QWORD PTR [rbp+0x60]
  410516:	mov    rcx,QWORD PTR [rbp+0x208]
  41051d:	add    rax,0x20
  410521:	cmp    rcx,rax
  410524:	je     0x41052b
  410526:	call   0x4185e0
  41052b:	mov    rax,QWORD PTR [rbp+0x58]
  41052f:	mov    rcx,QWORD PTR [rbp+0x118]
  410536:	add    rax,0x10
  41053a:	cmp    rcx,rax
  41053d:	je     0x410544
  41053f:	call   0x4185e0
  410544:	call   QWORD PTR [rip+0x151d6]        # 0x425720
  41054a:	mov    DWORD PTR [rax],0x84
  410550:	xor    eax,eax
  410552:	jmp    0x40f40b
  410557:	nop    WORD PTR [rax+rax*1+0x0]
  410560:	mov    rax,QWORD PTR [rbp+0x98]
  410567:	mov    r15,rax
  41056a:	jmp    0x40f37f
  41056f:	nop
  410570:	cmp    rsi,QWORD PTR [rbp+0x98]
  410577:	mov    DWORD PTR [rbp+0xb8],0x0
  410581:	jae    0x410c64
  410587:	movzx  edx,WORD PTR [rsi]
  41058a:	test   dx,dx
  41058d:	je     0x40fc40
  410593:	lea    rax,[rbp+0xb8]
  41059a:	mov    rdi,QWORD PTR [rbp+0x48]
  41059e:	mov    QWORD PTR [rbp+0x28],r13
  4105a2:	mov    QWORD PTR [rbp+0x88],rax
  4105a9:	nop    DWORD PTR [rax+0x0]
  4105b0:	mov    r8,QWORD PTR [rbp+0x88]
  4105b7:	mov    rcx,rdi
  4105ba:	call   0x4138c0
  4105bf:	test   eax,eax
  4105c1:	jle    0x410b0e
  4105c7:	movsxd r13,eax
  4105ca:	mov    rax,0xffffffffffffffff
  4105d1:	mov    r15,r13
  4105d4:	add    r15,r14
  4105d7:	cmovae rax,r15
  4105db:	cmp    rax,r12
  4105de:	jbe    0x41066e
  4105e4:	test   r12,r12
  4105e7:	je     0x410610
  4105e9:	js     0x4105f3
  4105eb:	add    r12,r12
  4105ee:	cmp    r15,r14
  4105f1:	jae    0x41061b
  4105f3:	mov    rax,QWORD PTR [rip+0x15126]        # 0x425720
  4105fa:	mov    QWORD PTR [rbp+0x98],rbx
  410601:	mov    QWORD PTR [rbp+0x68],rax
  410605:	jmp    0x40f390
  41060a:	nop    WORD PTR [rax+rax*1+0x0]
  410610:	cmp    r15,r14
  410613:	jb     0x4105f3
  410615:	mov    r12d,0xc
  41061b:	cmp    r12,r15
  41061e:	jae    0x410630
  410620:	cmp    r15,0xffffffffffffffff
  410624:	mov    r12,r15
  410627:	je     0x4105f3
  410629:	nop    DWORD PTR [rax+0x0]
  410630:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  410637:	sete   r8b
  41063b:	test   rbx,rbx
  41063e:	mov    BYTE PTR [rbp+0x78],r8b
  410642:	je     0x4106a2
  410644:	test   r8b,r8b
  410647:	jne    0x4106a2
  410649:	mov    rdx,r12
  41064c:	mov    rcx,rbx
  41064f:	call   0x411990
  410654:	movzx  r8d,BYTE PTR [rbp+0x78]
  410659:	mov    r10,rax
  41065c:	test   r10,r10
  41065f:	je     0x4105f3
  410661:	test   r14,r14
  410664:	je     0x41066b
  410666:	test   r8b,r8b
  410669:	jne    0x4106b4
  41066b:	mov    rbx,r10
  41066e:	lea    rcx,[rbx+r14*1]
  410672:	mov    r8,r13
  410675:	mov    rdx,rdi
  410678:	add    rsi,0x2
  41067c:	call   0x4185a0
  410681:	cmp    rsi,QWORD PTR [rbp+0x98]
  410688:	jae    0x410b38
  41068e:	movzx  edx,WORD PTR [rsi]
  410691:	test   dx,dx
  410694:	je     0x40fc40
  41069a:	mov    r14,r15
  41069d:	jmp    0x4105b0
  4106a2:	mov    rcx,r12
  4106a5:	call   0x410c80
  4106aa:	movzx  r8d,BYTE PTR [rbp+0x78]
  4106af:	mov    r10,rax
  4106b2:	jmp    0x41065c
  4106b4:	mov    rdx,rbx
  4106b7:	mov    r8,r14
  4106ba:	mov    rcx,r10
  4106bd:	call   0x4185a0
  4106c2:	mov    rbx,rax
  4106c5:	jmp    0x41066e
  4106c7:	nop    WORD PTR [rax+rax*1+0x0]
  4106d0:	mov    r13,QWORD PTR [rbp+0x98]
  4106d7:	mov    rsi,QWORD PTR [rbp+0x30]
  4106db:	mov    QWORD PTR [rbp+0x98],r12
  4106e2:	mov    r12,QWORD PTR [rbp+0x78]
  4106e6:	mov    ecx,DWORD PTR [rbp+0x88]
  4106ec:	mov    r15d,0x1
  4106f2:	test   ecx,ecx
  4106f4:	je     0x40fd9b
  4106fa:	mov    QWORD PTR [rbp+0x30],rdi
  4106fe:	mov    r9d,0x1
  410704:	mov    r15d,0x1
  41070a:	jmp    0x40fda6
  41070f:	cmp    rdx,r14
  410712:	jb     0x4102b5
  410718:	mov    r12d,0xc
  41071e:	cmp    r12,rdx
  410721:	jae    0x410730
  410723:	cmp    rdx,0xffffffffffffffff
  410727:	je     0x4102b5
  41072d:	mov    r12,rdx
  410730:	cmp    rbx,QWORD PTR [rbp+0x4e0]
  410737:	sete   r15b
  41073b:	test   rbx,rbx
  41073e:	je     0x410b48
  410744:	test   r15b,r15b
  410747:	jne    0x410b48
  41074d:	mov    rdx,r12
  410750:	mov    rcx,rbx
  410753:	call   0x411990
  410758:	mov    r9,rax
  41075b:	test   r9,r9
  41075e:	je     0x4102b5
  410764:	test   r14,r14
  410767:	je     0x410772
  410769:	test   r15b,r15b
  41076c:	jne    0x410bc0
  410772:	mov    rbx,r9
  410775:	test   rdi,rdi
  410778:	je     0x410c5c
  41077e:	movzx  edx,WORD PTR [rsi]
  410781:	test   dx,dx
  410784:	je     0x40fc40
  41078a:	mov    r15,r14
  41078d:	mov    QWORD PTR [rbp+0x88],r13
  410794:	mov    QWORD PTR [rbp+0x78],r12
  410798:	mov    r13,QWORD PTR [rbp+0x48]
  41079c:	mov    r14,QWORD PTR [rbp+0x38]
  4107a0:	jmp    0x4107ae
  4107a2:	movzx  edx,WORD PTR [rsi]
  4107a5:	test   dx,dx
  4107a8:	je     0x40fc40
  4107ae:	mov    r8,r14
  4107b1:	mov    rcx,r13
  4107b4:	call   0x4138c0
  4107b9:	test   eax,eax
  4107bb:	jle    0x40fc40
  4107c1:	movsxd r12,eax
  4107c4:	lea    rcx,[rbx+r15*1]
  4107c8:	mov    rdx,r13
  4107cb:	mov    r8,r12
  4107ce:	add    r15,r12
  4107d1:	add    rsi,0x2
  4107d5:	call   0x4185a0
  4107da:	sub    rdi,r12
  4107dd:	jne    0x4107a2
  4107df:	mov    r13,QWORD PTR [rbp+0x88]
  4107e6:	mov    r12,QWORD PTR [rbp+0x78]
  4107ea:	cmp    rsi,QWORD PTR [rbp+0x98]
  4107f1:	jne    0x40fc40
  4107f7:	mov    QWORD PTR [rbp+0x98],rbx
  4107fe:	mov    rdi,QWORD PTR [rbp+0x68]
  410802:	cmp    QWORD PTR [rbp+0x30],rdi
  410806:	jae    0x40f4e6
  41080c:	test   BYTE PTR [r13+0x10],0x2
  410811:	je     0x40f4e6
  410817:	sub    rdi,QWORD PTR [rbp+0x30]
  41081b:	mov    rax,0xffffffffffffffff
  410822:	mov    rbx,rdi
  410825:	add    rbx,r15
  410828:	cmovae rax,rbx
  41082c:	cmp    r12,rax
  41082f:	jae    0x410bfa
  410835:	test   r12,r12
  410838:	je     0x410bd6
  41083e:	js     0x40fe30
  410844:	add    r12,r12
  410847:	cmp    r15,rbx
  41084a:	ja     0x40fe30
  410850:	cmp    r12,rbx
  410853:	jae    0x410862
  410855:	cmp    rbx,0xffffffffffffffff
  410859:	mov    r12,rbx
  41085c:	je     0x40fe30
  410862:	mov    rax,QWORD PTR [rbp+0x98]
  410869:	cmp    rax,QWORD PTR [rbp+0x4e0]
  410870:	sete   sil
  410874:	test   rax,rax
  410877:	je     0x410bea
  41087d:	test   sil,sil
  410880:	jne    0x410bea
  410886:	mov    rcx,QWORD PTR [rbp+0x98]
  41088d:	mov    rdx,r12
  410890:	call   0x411990
  410895:	mov    r14,rax
  410898:	test   r14,r14
  41089b:	je     0x40fe30
  4108a1:	test   r15,r15
  4108a4:	je     0x4108bd
  4108a6:	test   sil,sil
  4108a9:	je     0x4108bd
  4108ab:	mov    rdx,QWORD PTR [rbp+0x98]
  4108b2:	mov    r8,r15
  4108b5:	mov    rcx,r14
  4108b8:	call   0x4185a0
  4108bd:	lea    rcx,[r14+r15*1]
  4108c1:	mov    r8,rdi
  4108c4:	mov    edx,0x20
  4108c9:	mov    r15,rbx
  4108cc:	call   0x418590
  4108d1:	mov    QWORD PTR [rbp+0x98],r14
  4108d8:	jmp    0x40f4e6
  4108dd:	mov    rsi,QWORD PTR [rax+0x10]
  4108e1:	mov    eax,DWORD PTR [rbp+0x88]
  4108e7:	test   eax,eax
  4108e9:	je     0x40fd83
  4108ef:	movzx  edx,WORD PTR [rsi]
  4108f2:	mov    DWORD PTR [rbp+0xc0],0x0
  4108fc:	test   dx,dx
  4108ff:	je     0x410c2c
  410905:	lea    rax,[rbp+0xc0]
  41090c:	mov    QWORD PTR [rbp+0x98],r13
  410913:	xor    edi,edi
  410915:	mov    QWORD PTR [rbp+0x88],rsi
  41091c:	mov    r15,QWORD PTR [rbp+0x48]
  410920:	mov    r13,rax
  410923:	jmp    0x41093a
  410925:	add    rsi,0x2
  410929:	movzx  edx,WORD PTR [rsi]
  41092c:	cdqe   
  41092e:	add    rdi,rax
  410931:	test   dx,dx
  410934:	je     0x410a01
  41093a:	mov    r8,r13
  41093d:	mov    rcx,r15
  410940:	call   0x4138c0
  410945:	test   eax,eax
  410947:	jns    0x410925
  410949:	jmp    0x40f838
  41094e:	add    r8,0x1
  410952:	cmp    r11,r8
  410955:	je     0x410c17
  41095b:	xor    r15d,r15d
  41095e:	movabs r10,0x1999999999999999
  410968:	nop    DWORD PTR [rax+rax*1+0x0]
  410970:	add    r8,0x1
  410974:	movsx  edx,BYTE PTR [r8-0x1]
  410979:	mov    rcx,0xffffffffffffffff
  410980:	sub    edx,0x30
  410983:	cmp    r15,r10
  410986:	movsxd rdx,edx
  410989:	ja     0x410992
  41098b:	lea    rcx,[r15+r15*4]
  41098f:	add    rcx,rcx
  410992:	add    rcx,rdx
  410995:	mov    rdx,0xffffffffffffffff
  41099c:	mov    r15,rcx
  41099f:	cmovb  r15,rdx
  4109a3:	cmp    r8,r11
  4109a6:	jne    0x410970
  4109a8:	jmp    0x40f7aa
  4109ad:	xor    esi,esi
  4109af:	movabs r11,0x1999999999999999
  4109b9:	nop    DWORD PTR [rax+0x0]
  4109c0:	add    r8,0x1
  4109c4:	movsx  edx,BYTE PTR [r8-0x1]
  4109c9:	mov    rcx,0xffffffffffffffff
  4109d0:	sub    edx,0x30
  4109d3:	cmp    rsi,r11
  4109d6:	movsxd rdx,edx
  4109d9:	ja     0x4109e2
  4109db:	lea    rcx,[rsi+rsi*4]
  4109df:	add    rcx,rcx
  4109e2:	mov    rsi,rcx
  4109e5:	add    rsi,rdx
  4109e8:	mov    rdx,0xffffffffffffffff
  4109ef:	cmovb  rsi,rdx
  4109f3:	cmp    r8,r9
  4109f6:	jne    0x4109c0
  4109f8:	mov    QWORD PTR [rbp+0x68],rsi
  4109fc:	jmp    0x40f760
  410a01:	mov    r13,QWORD PTR [rbp+0x98]
  410a08:	mov    QWORD PTR [rbp+0x98],rsi
  410a0f:	mov    rsi,QWORD PTR [rbp+0x88]
  410a16:	mov    QWORD PTR [rbp+0x30],rdi
  410a1a:	mov    rdi,QWORD PTR [rbp+0x68]
  410a1e:	cmp    QWORD PTR [rbp+0x30],rdi
  410a22:	mov    rdi,QWORD PTR [rbp+0x30]
  410a26:	jae    0x41027a
  410a2c:	xor    r15d,r15d
  410a2f:	mov    r9d,0x1
  410a35:	jmp    0x40fdb4
  410a3a:	cmp    rsi,r14
  410a3d:	jb     0x40fe30
  410a43:	cmp    rsi,0xc
  410a47:	mov    ebx,0xc
  410a4c:	jbe    0x41037f
  410a52:	jmp    0x410372
  410a57:	cmp    rdx,rbx
  410a5a:	ja     0x4100cc
  410a60:	movsxd rdx,DWORD PTR [rbp+0xbc]
  410a67:	test   edx,edx
  410a69:	jns    0x40f95f
  410a6f:	call   QWORD PTR [rip+0x14cab]        # 0x425720
  410a75:	mov    ebx,DWORD PTR [rax]
  410a77:	test   ebx,ebx
  410a79:	jne    0x410a8f
  410a7b:	movzx  eax,BYTE PTR [r13+0x48]
  410a80:	mov    bl,0x2a
  410a82:	and    eax,0xffffffef
  410a85:	cmp    al,0x63
  410a87:	mov    eax,0x16
  410a8c:	cmovne ebx,eax
  410a8f:	mov    rax,QWORD PTR [rbp+0x98]
  410a96:	test   rax,rax
  410a99:	je     0x410aac
  410a9b:	cmp    QWORD PTR [rbp+0x4e0],rax
  410aa2:	je     0x410aac
  410aa4:	mov    rcx,rax
  410aa7:	call   0x4185e0
  410aac:	mov    rax,QWORD PTR [rbp+0x50]
  410ab0:	test   rax,rax
  410ab3:	je     0x410abd
  410ab5:	mov    rcx,rax
  410ab8:	call   0x4185e0
  410abd:	mov    rax,QWORD PTR [rbp+0x60]
  410ac1:	mov    rcx,QWORD PTR [rbp+0x208]
  410ac8:	add    rax,0x20
  410acc:	cmp    rcx,rax
  410acf:	je     0x410ad6
  410ad1:	call   0x4185e0
  410ad6:	mov    rax,QWORD PTR [rbp+0x58]
  410ada:	mov    rcx,QWORD PTR [rbp+0x118]
  410ae1:	add    rax,0x10
  410ae5:	cmp    rcx,rax
  410ae8:	je     0x410aef
  410aea:	call   0x4185e0
  410aef:	call   QWORD PTR [rip+0x14c2b]        # 0x425720
  410af5:	mov    DWORD PTR [rax],ebx
  410af7:	xor    eax,eax
  410af9:	jmp    0x40f40b
  410afe:	mov    rcx,rbx
  410b01:	call   0x410c80
  410b06:	mov    r9,rax
  410b09:	jmp    0x4103aa
  410b0e:	test   rbx,rbx
  410b11:	mov    QWORD PTR [rbp+0x98],rbx
  410b18:	je     0x40f84e
  410b1e:	cmp    QWORD PTR [rbp+0x4e0],rbx
  410b25:	je     0x40f84e
  410b2b:	mov    rcx,rbx
  410b2e:	call   0x4185e0
  410b33:	jmp    0x40f84e
  410b38:	mov    r13,QWORD PTR [rbp+0x28]
  410b3c:	mov    QWORD PTR [rbp+0x98],rbx
  410b43:	jmp    0x4107fe
  410b48:	mov    rcx,r12
  410b4b:	call   0x410c80
  410b50:	mov    r9,rax
  410b53:	jmp    0x41075b
  410b58:	mov    r8,r14
  410b5b:	mov    rdx,r15
  410b5e:	mov    rcx,r9
  410b61:	call   0x4185a0
  410b66:	mov    QWORD PTR [rbp+0x98],rax
  410b6d:	jmp    0x4103c8
  410b72:	cmp    r14,QWORD PTR [rbp+0x88]
  410b79:	ja     0x40fe20
  410b7f:	mov    r12d,0xc
  410b85:	jmp    0x40fdfe
  410b8a:	mov    rcx,r12
  410b8d:	call   0x410c80
  410b92:	mov    r11,QWORD PTR [rbp+0x78]
  410b96:	mov    r10,rax
  410b99:	movzx  r8d,BYTE PTR [rbp+0x28]
  410b9e:	mov    r9d,DWORD PTR [rbp+0x20]
  410ba2:	jmp    0x410212
  410ba7:	mov    r10,rbx
  410baa:	jmp    0x410246
  410baf:	mov    rdx,rax
  410bb2:	jmp    0x4100fb
  410bb7:	lea    rdx,[rax+0x1]
  410bbb:	jmp    0x4100bc
  410bc0:	mov    rdx,rbx
  410bc3:	mov    r8,r14
  410bc6:	mov    rcx,r9
  410bc9:	call   0x4185a0
  410bce:	mov    rbx,rax
  410bd1:	jmp    0x410775
  410bd6:	cmp    r15,rbx
  410bd9:	ja     0x40fe30
  410bdf:	mov    r12d,0xc
  410be5:	jmp    0x410850
  410bea:	mov    rcx,r12
  410bed:	call   0x410c80
  410bf2:	mov    r14,rax
  410bf5:	jmp    0x410898
  410bfa:	mov    r14,QWORD PTR [rbp+0x98]
  410c01:	jmp    0x4108bd
  410c06:	cmp    rsi,r14
  410c09:	jae    0x40fe30
  410c0f:	mov    rbx,rax
  410c12:	jmp    0x41035d
  410c17:	mov    rax,QWORD PTR [rax+0x10]
  410c1b:	xor    edi,edi
  410c1d:	mov    QWORD PTR [rbp+0x98],rax
  410c24:	mov    rsi,rax
  410c27:	jmp    0x4106e6
  410c2c:	mov    QWORD PTR [rbp+0x98],rsi
  410c33:	mov    QWORD PTR [rbp+0x30],0x0
  410c3b:	jmp    0x410a1a
  410c40:	mov    QWORD PTR [rbp+0x98],rsi
  410c47:	xor    edi,edi
  410c49:	jmp    0x4106e6
  410c4e:	mov    rdx,QWORD PTR [rbp-0x10]
  410c52:	call   0x413600
  410c57:	jmp    0x4100ac
  410c5c:	mov    r15,r14
  410c5f:	jmp    0x4107ea
  410c64:	mov    r15,r14
  410c67:	jmp    0x4107f7
  410c6c:	mov    rsi,QWORD PTR [rax+0x10]
  410c70:	jmp    0x4108ef
  410c75:	mov    r12,rax
  410c78:	jmp    0x40f568
  410c7d:	nop
  410c7e:	nop
  410c7f:	nop
  410c80:	push   rbx
  410c81:	sub    rsp,0x20
  410c85:	call   0x4185a8
  410c8a:	test   rax,rax
  410c8d:	mov    rbx,rax
  410c90:	je     0x410ca0
  410c92:	mov    rax,rbx
  410c95:	add    rsp,0x20
  410c99:	pop    rbx
  410c9a:	ret    
  410c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  410ca0:	call   QWORD PTR [rip+0x14a7a]        # 0x425720
  410ca6:	mov    DWORD PTR [rax],0xc
  410cac:	mov    rax,rbx
  410caf:	add    rsp,0x20
  410cb3:	pop    rbx
  410cb4:	ret    
  410cb5:	nop
  410cb6:	nop
  410cb7:	nop
  410cb8:	nop
  410cb9:	nop
  410cba:	nop
  410cbb:	nop
  410cbc:	nop
  410cbd:	nop
  410cbe:	nop
  410cbf:	nop
  410cc0:	xor    r9d,r9d
  410cc3:	cmp    QWORD PTR [rdx],0x0
  410cc7:	mov    rax,QWORD PTR [rdx+0x8]
  410ccb:	lea    r10,[rip+0xe1f6]        # 0x41eec8
  410cd2:	je     0x410d08
  410cd4:	cmp    DWORD PTR [rax],0x16
  410cd7:	ja     0x410da4
  410cdd:	mov    r8d,DWORD PTR [rax]
  410ce0:	movsxd r8,DWORD PTR [r10+r8*4]
  410ce4:	add    r8,r10
  410ce7:	jmp    r8
  410cea:	nop    WORD PTR [rax+rax*1+0x0]
  410cf0:	mov    r8,QWORD PTR [rcx]
  410cf3:	add    rcx,0x8
  410cf7:	mov    QWORD PTR [rax+0x10],r8
  410cfb:	add    r9,0x1
  410cff:	add    rax,0x20
  410d03:	cmp    QWORD PTR [rdx],r9
  410d06:	ja     0x410cd4
  410d08:	xor    eax,eax
  410d0a:	ret    
  410d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  410d10:	mov    r8d,DWORD PTR [rcx]
  410d13:	add    rcx,0x8
  410d17:	mov    DWORD PTR [rax+0x10],r8d
  410d1b:	jmp    0x410cfb
  410d1d:	nop    DWORD PTR [rax]
  410d20:	mov    r8d,DWORD PTR [rcx]
  410d23:	add    rcx,0x8
  410d27:	mov    WORD PTR [rax+0x10],r8w
  410d2c:	jmp    0x410cfb
  410d2e:	xchg   ax,ax
  410d30:	mov    r8d,DWORD PTR [rcx]
  410d33:	add    rcx,0x8
  410d37:	mov    BYTE PTR [rax+0x10],r8b
  410d3b:	jmp    0x410cfb
  410d3d:	nop    DWORD PTR [rax]
  410d40:	movsd  xmm0,QWORD PTR [rcx]
  410d44:	add    rcx,0x8
  410d48:	movsd  QWORD PTR [rax+0x10],xmm0
  410d4d:	jmp    0x410cfb
  410d4f:	nop
  410d50:	mov    r8,QWORD PTR [rcx]
  410d53:	add    rcx,0x8
  410d57:	fld    TBYTE PTR [r8]
  410d5a:	fstp   TBYTE PTR [rax+0x10]
  410d5d:	jmp    0x410cfb
  410d5f:	nop
  410d60:	mov    r8,QWORD PTR [rcx]
  410d63:	add    rcx,0x8
  410d67:	test   r8,r8
  410d6a:	mov    QWORD PTR [rax+0x10],r8
  410d6e:	jne    0x410cfb
  410d70:	lea    r11,[rip+0xe149]        # 0x41eec0
  410d77:	mov    QWORD PTR [rax+0x10],r11
  410d7b:	jmp    0x410cfb
  410d80:	mov    r8,QWORD PTR [rcx]
  410d83:	add    rcx,0x8
  410d87:	test   r8,r8
  410d8a:	mov    QWORD PTR [rax+0x10],r8
  410d8e:	jne    0x410cfb
  410d94:	lea    r11,[rip+0xe189]        # 0x41ef24
  410d9b:	mov    QWORD PTR [rax+0x10],r11
  410d9f:	jmp    0x410cfb
  410da4:	mov    eax,0xffffffff
  410da9:	ret    
  410daa:	nop
  410dab:	nop
  410dac:	nop
  410dad:	nop
  410dae:	nop
  410daf:	nop
  410db0:	push   r15
  410db2:	push   r14
  410db4:	push   r13
  410db6:	push   r12
  410db8:	push   rbp
  410db9:	push   rdi
  410dba:	push   rsi
  410dbb:	push   rbx
  410dbc:	sub    rsp,0x58
  410dc0:	xor    r10d,r10d
  410dc3:	mov    r14d,0x7
  410dc9:	lea    rax,[rdx+0x20]
  410dcd:	lea    r15,[r8+0x10]
  410dd1:	mov    QWORD PTR [rdx],0x0
  410dd8:	mov    rbx,rcx
  410ddb:	mov    r12,rdx
  410dde:	mov    r13,r8
  410de1:	mov    QWORD PTR [rdx+0x8],rax
  410de5:	mov    QWORD PTR [rsp+0x30],rax
  410dea:	mov    QWORD PTR [r8],0x0
  410df1:	mov    QWORD PTR [r8+0x8],r15
  410df5:	mov    r9,QWORD PTR [rdx+0x8]
  410df9:	mov    rcx,QWORD PTR [rdx]
  410dfc:	mov    QWORD PTR [rsp+0x20],0x0
  410e05:	mov    QWORD PTR [rsp+0x28],0x7
  410e0e:	mov    QWORD PTR [rsp+0x38],0x0
  410e17:	jmp    0x410e2b
  410e19:	nop    DWORD PTR [rax+0x0]
  410e20:	cmp    al,0x25
  410e22:	lea    r11,[rbx+0x1]
  410e26:	je     0x410e60
  410e28:	mov    rbx,r11
  410e2b:	movzx  eax,BYTE PTR [rbx]
  410e2e:	test   al,al
  410e30:	jne    0x410e20
  410e32:	lea    rax,[rcx+rcx*4]
  410e36:	lea    rax,[rcx+rax*2]
  410e3a:	mov    QWORD PTR [r9+rax*8],rbx
  410e3e:	mov    rax,QWORD PTR [rsp+0x20]
  410e43:	mov    QWORD PTR [r12+0x10],r10
  410e48:	mov    QWORD PTR [r12+0x18],rax
  410e4d:	xor    eax,eax
  410e4f:	add    rsp,0x58
  410e53:	pop    rbx
  410e54:	pop    rsi
  410e55:	pop    rdi
  410e56:	pop    rbp
  410e57:	pop    r12
  410e59:	pop    r13
  410e5b:	pop    r14
  410e5d:	pop    r15
  410e5f:	ret    
  410e60:	lea    rax,[rcx+rcx*4]
  410e64:	lea    rax,[rcx+rax*2]
  410e68:	lea    rsi,[r9+rax*8]
  410e6c:	mov    QWORD PTR [rsi],rbx
  410e6f:	mov    DWORD PTR [rsi+0x10],0x0
  410e76:	mov    QWORD PTR [rsi+0x18],0x0
  410e7e:	mov    QWORD PTR [rsi+0x20],0x0
  410e86:	mov    QWORD PTR [rsi+0x28],0xffffffffffffffff
  410e8e:	mov    QWORD PTR [rsi+0x30],0x0
  410e96:	mov    QWORD PTR [rsi+0x38],0x0
  410e9e:	mov    QWORD PTR [rsi+0x40],0xffffffffffffffff
  410ea6:	mov    QWORD PTR [rsi+0x50],0xffffffffffffffff
  410eae:	movsx  eax,BYTE PTR [rbx+0x1]
  410eb2:	lea    edx,[rax-0x30]
  410eb5:	cmp    dl,0x9
  410eb8:	jbe    0x4110b4
  410ebe:	mov    rdi,0xffffffffffffffff
  410ec5:	lea    rcx,[r11+0x1]
  410ec9:	jmp    0x410ef7
  410ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  410ed0:	cmp    al,0x2d
  410ed2:	je     0x410f05
  410ed4:	cmp    al,0x2b
  410ed6:	je     0x410f10
  410ed8:	cmp    al,0x20
  410eda:	je     0x410f20
  410edc:	cmp    al,0x23
  410ede:	je     0x410f30
  410ee0:	cmp    al,0x30
  410ee2:	jne    0x410f36
  410ee4:	or     DWORD PTR [rsi+0x10],0x20
  410ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  410ef0:	movzx  eax,BYTE PTR [rcx]
  410ef3:	add    rcx,0x1
  410ef7:	cmp    al,0x27
  410ef9:	lea    rbx,[rcx-0x1]
  410efd:	jne    0x410ed0
  410eff:	or     DWORD PTR [rsi+0x10],0x1
  410f03:	jmp    0x410ef0
  410f05:	or     DWORD PTR [rsi+0x10],0x2
  410f09:	jmp    0x410ef0
  410f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  410f10:	or     DWORD PTR [rsi+0x10],0x4
  410f14:	jmp    0x410ef0
  410f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f20:	or     DWORD PTR [rsi+0x10],0x8
  410f24:	jmp    0x410ef0
  410f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f30:	or     DWORD PTR [rsi+0x10],0x10
  410f34:	jmp    0x410ef0
  410f36:	cmp    al,0x2a
  410f38:	mov    rdx,rbx
  410f3b:	je     0x4111b1
  410f41:	lea    ecx,[rax-0x30]
  410f44:	cmp    cl,0x9
  410f47:	jbe    0x411153
  410f4d:	cmp    al,0x2e
  410f4f:	je     0x410fe9
  410f55:	xor    edx,edx
  410f57:	mov    r8d,0x1
  410f5d:	jmp    0x410fa3
  410f5f:	nop
  410f60:	cmp    al,0x4c
  410f62:	je     0x410fd0
  410f64:	cmp    al,0x6c
  410f66:	je     0x410fe0
  410f68:	cmp    al,0x6a
  410f6a:	je     0x410fc0
  410f6c:	mov    ecx,eax
  410f6e:	and    ecx,0xffffffdf
  410f71:	cmp    cl,0x5a
  410f74:	je     0x410fc0
  410f76:	cmp    al,0x74
  410f78:	je     0x410fc0
  410f7a:	cmp    al,0x49
  410f7c:	jne    0x41118c
  410f82:	cmp    BYTE PTR [rbx+0x1],0x36
  410f86:	jne    0x41107f
  410f8c:	cmp    BYTE PTR [rbx+0x2],0x34
  410f90:	jne    0x41107f
  410f96:	add    edx,0x10
  410f99:	add    rbx,0x3
  410f9d:	nop    DWORD PTR [rax]
  410fa0:	movzx  eax,BYTE PTR [rbx]
  410fa3:	cmp    al,0x68
  410fa5:	jne    0x410f60
  410fa7:	mov    ecx,edx
  410fa9:	mov    eax,r8d
  410fac:	add    rbx,0x1
  410fb0:	and    ecx,0x1
  410fb3:	shl    eax,cl
  410fb5:	or     edx,eax
  410fb7:	jmp    0x410fa0
  410fb9:	nop    DWORD PTR [rax+0x0]
  410fc0:	add    edx,0x10
  410fc3:	add    rbx,0x1
  410fc7:	jmp    0x410fa0
  410fc9:	nop    DWORD PTR [rax+0x0]
  410fd0:	or     edx,0x4
  410fd3:	add    rbx,0x1
  410fd7:	jmp    0x410fa0
  410fd9:	nop    DWORD PTR [rax+0x0]
  410fe0:	add    edx,0x8
  410fe3:	add    rbx,0x1
  410fe7:	jmp    0x410fa0
  410fe9:	cmp    BYTE PTR [rbx+0x1],0x2a
  410fed:	jne    0x411257
  410ff3:	lea    rbp,[rbx+0x2]
  410ff7:	mov    QWORD PTR [rsi+0x30],rbx
  410ffb:	cmp    QWORD PTR [rsp+0x20],0x1
  411001:	mov    QWORD PTR [rsi+0x38],rbp
  411005:	movsx  eax,BYTE PTR [rbx+0x2]
  411009:	lea    edx,[rax-0x30]
  41100c:	jbe    0x4114b0
  411012:	cmp    dl,0x9
  411015:	ja     0x4114c2
  41101b:	mov    rdx,rbp
  41101e:	add    rdx,0x1
  411022:	movzx  ecx,BYTE PTR [rdx]
  411025:	lea    r8d,[rcx-0x30]
  411029:	cmp    r8b,0x9
  41102d:	jbe    0x41101e
  41102f:	cmp    cl,0x24
  411032:	jne    0x4114c2
  411038:	xor    ebx,ebx
  41103a:	movabs rcx,0x1999999999999999
  411044:	sub    eax,0x30
  411047:	mov    rdx,0xffffffffffffffff
  41104e:	cmp    rbx,rcx
  411051:	cdqe   
  411053:	ja     0x41105c
  411055:	lea    rdx,[rbx+rbx*4]
  411059:	add    rdx,rdx
  41105c:	add    rdx,rax
  41105f:	mov    rbx,rdx
  411062:	jae    0x41183e
  411068:	add    rbp,0x1
  41106c:	movsx  eax,BYTE PTR [rbp+0x0]
  411070:	mov    rbx,0xffffffffffffffff
  411077:	lea    edx,[rax-0x30]
  41107a:	cmp    dl,0x9
  41107d:	jbe    0x41103a
  41107f:	mov    rcx,QWORD PTR [r13+0x8]
  411083:	cmp    r15,rcx
  411086:	je     0x41108d
  411088:	call   0x4185e0
  41108d:	mov    rcx,QWORD PTR [r12+0x8]
  411092:	cmp    QWORD PTR [rsp+0x30],rcx
  411097:	je     0x41109e
  411099:	call   0x4185e0
  41109e:	call   QWORD PTR [rip+0x1467c]        # 0x425720
  4110a4:	mov    DWORD PTR [rax],0x16
  4110aa:	mov    eax,0xffffffff
  4110af:	jmp    0x410e4f
  4110b4:	mov    rdx,r11
  4110b7:	nop    WORD PTR [rax+rax*1+0x0]
  4110c0:	add    rdx,0x1
  4110c4:	movzx  r8d,BYTE PTR [rdx]
  4110c8:	lea    ecx,[r8-0x30]
  4110cc:	cmp    cl,0x9
  4110cf:	jbe    0x4110c0
  4110d1:	cmp    r8b,0x24
  4110d5:	jne    0x410ebe
  4110db:	mov    rcx,r11
  4110de:	xor    edi,edi
  4110e0:	jmp    0x4110fc
  4110e2:	movsx  eax,BYTE PTR [rcx+0x1]
  4110e6:	lea    rdx,[rcx+0x1]
  4110ea:	mov    rdi,0xffffffffffffffff
  4110f1:	lea    ecx,[rax-0x30]
  4110f4:	cmp    cl,0x9
  4110f7:	ja     0x41107f
  4110f9:	mov    rcx,rdx
  4110fc:	movabs rbx,0x1999999999999999
  411106:	sub    eax,0x30
  411109:	mov    rdx,0xffffffffffffffff
  411110:	cmp    rdi,rbx
  411113:	cdqe   
  411115:	ja     0x41111e
  411117:	lea    rdx,[rdi+rdi*4]
  41111b:	add    rdx,rdx
  41111e:	mov    rdi,rdx
  411121:	add    rdi,rax
  411124:	jb     0x4110e2
  411126:	movsx  eax,BYTE PTR [rcx+0x1]
  41112a:	lea    rdx,[rcx+0x1]
  41112e:	lea    r8d,[rax-0x30]
  411132:	cmp    r8b,0x9
  411136:	jbe    0x4110f9
  411138:	sub    rdi,0x1
  41113c:	cmp    rdi,0xfffffffffffffffd
  411140:	ja     0x41107f
  411146:	lea    r11,[rcx+0x2]
  41114a:	movzx  eax,BYTE PTR [rcx+0x2]
  41114e:	jmp    0x410ec5
  411153:	mov    QWORD PTR [rsi+0x18],rbx
  411157:	movzx  eax,BYTE PTR [rbx]
  41115a:	sub    eax,0x30
  41115d:	cmp    al,0x9
  41115f:	ja     0x41189c
  411165:	add    rbx,0x1
  411169:	movzx  eax,BYTE PTR [rbx]
  41116c:	sub    eax,0x30
  41116f:	cmp    al,0x9
  411171:	jbe    0x411165
  411173:	mov    rax,rbx
  411176:	sub    rax,rdx
  411179:	cmp    r10,rax
  41117c:	mov    QWORD PTR [rsi+0x20],rbx
  411180:	cmovb  r10,rax
  411184:	movzx  eax,BYTE PTR [rbx]
  411187:	jmp    0x410f4d
  41118c:	lea    ecx,[rax-0x25]
  41118f:	add    rbx,0x1
  411193:	mov    ebp,eax
  411195:	cmp    cl,0x53
  411198:	ja     0x41107f
  41119e:	lea    r9,[rip+0xdd9b]        # 0x41ef40
  4111a5:	movzx  ecx,cl
  4111a8:	movsxd rcx,DWORD PTR [r9+rcx*4]
  4111ac:	add    rcx,r9
  4111af:	jmp    rcx
  4111b1:	mov    QWORD PTR [rsi+0x18],rbx
  4111b5:	mov    QWORD PTR [rsi+0x20],rcx
  4111b9:	test   r10,r10
  4111bc:	movsx  eax,BYTE PTR [rdx+0x1]
  4111c0:	mov    rbx,rcx
  4111c3:	lea    edx,[rax-0x30]
  4111c6:	jne    0x411316
  4111cc:	cmp    dl,0x9
  4111cf:	jbe    0x4112a4
  4111d5:	mov    r10d,0x1
  4111db:	mov    rbp,QWORD PTR [rsp+0x38]
  4111e0:	mov    rax,rbp
  4111e3:	mov    QWORD PTR [rsi+0x28],rbp
  4111e7:	add    rax,0x1
  4111eb:	cmp    rbp,0xffffffffffffffff
  4111ef:	je     0x41107f
  4111f5:	mov    QWORD PTR [rsp+0x38],rax
  4111fa:	cmp    r14,rbp
  4111fd:	jbe    0x4115c9
  411203:	mov    rcx,QWORD PTR [r13+0x8]
  411207:	mov    rax,QWORD PTR [r13+0x0]
  41120b:	mov    rdx,rax
  41120e:	shl    rdx,0x5
  411212:	add    rdx,rcx
  411215:	cmp    rbp,rax
  411218:	jb     0x411237
  41121a:	nop    WORD PTR [rax+rax*1+0x0]
  411220:	add    rax,0x1
  411224:	mov    DWORD PTR [rdx],0x0
  41122a:	add    rdx,0x20
  41122e:	cmp    rax,rbp
  411231:	jbe    0x411220
  411233:	mov    QWORD PTR [r13+0x0],rax
  411237:	shl    rbp,0x5
  41123b:	lea    rax,[rcx+rbp*1]
  41123f:	mov    edx,DWORD PTR [rax]
  411241:	test   edx,edx
  411243:	jne    0x4116f8
  411249:	mov    DWORD PTR [rax],0x5
  41124f:	movzx  eax,BYTE PTR [rbx]
  411252:	jmp    0x410f4d
  411257:	mov    QWORD PTR [rsi+0x30],rbx
  41125b:	movzx  eax,BYTE PTR [rbx+0x1]
  41125f:	lea    rdx,[rbx+0x1]
  411263:	sub    eax,0x30
  411266:	cmp    al,0x9
  411268:	ja     0x41127e
  41126a:	nop    WORD PTR [rax+rax*1+0x0]
  411270:	add    rdx,0x1
  411274:	movzx  eax,BYTE PTR [rdx]
  411277:	sub    eax,0x30
  41127a:	cmp    al,0x9
  41127c:	jbe    0x411270
  41127e:	mov    rax,rdx
  411281:	mov    QWORD PTR [rsi+0x38],rdx
  411285:	sub    rax,rbx
  411288:	mov    rbx,QWORD PTR [rsp+0x20]
  41128d:	cmp    rbx,rax
  411290:	cmovae rax,rbx
  411294:	mov    rbx,rdx
  411297:	mov    QWORD PTR [rsp+0x20],rax
  41129c:	movzx  eax,BYTE PTR [rdx]
  41129f:	jmp    0x410f55
  4112a4:	mov    r10b,0x1
  4112a7:	nop    WORD PTR [rax+rax*1+0x0]
  4112b0:	add    rcx,0x1
  4112b4:	movzx  edx,BYTE PTR [rcx]
  4112b7:	lea    r8d,[rdx-0x30]
  4112bb:	cmp    r8b,0x9
  4112bf:	jbe    0x4112b0
  4112c1:	cmp    dl,0x24
  4112c4:	jne    0x4111db
  4112ca:	xor    ebp,ebp
  4112cc:	movabs rcx,0x1999999999999999
  4112d6:	sub    eax,0x30
  4112d9:	mov    rdx,0xffffffffffffffff
  4112e0:	cmp    rbp,rcx
  4112e3:	cdqe   
  4112e5:	ja     0x4112ef
  4112e7:	lea    rdx,[rbp+rbp*4+0x0]
  4112ec:	add    rdx,rdx
  4112ef:	add    rdx,rax
  4112f2:	mov    rbp,rdx
  4112f5:	jae    0x411810
  4112fb:	add    rbx,0x1
  4112ff:	movsx  eax,BYTE PTR [rbx]
  411302:	mov    rbp,0xffffffffffffffff
  411309:	lea    edx,[rax-0x30]
  41130c:	cmp    dl,0x9
  41130f:	jbe    0x4112cc
  411311:	jmp    0x41107f
  411316:	cmp    dl,0x9
  411319:	jbe    0x4112b0
  41131b:	jmp    0x4111db
  411320:	cmp    edx,0xf
  411323:	mov    r9d,0xc
  411329:	jle    0x41179d
  41132f:	cmp    rdi,0xffffffffffffffff
  411333:	je     0x411710
  411339:	mov    QWORD PTR [rsi+0x50],rdi
  41133d:	cmp    r14,rdi
  411340:	jbe    0x41161c
  411346:	mov    rcx,QWORD PTR [r13+0x8]
  41134a:	mov    rax,QWORD PTR [r13+0x0]
  41134e:	mov    rdx,rax
  411351:	shl    rdx,0x5
  411355:	add    rdx,rcx
  411358:	cmp    rdi,rax
  41135b:	jb     0x411377
  41135d:	nop    DWORD PTR [rax]
  411360:	add    rax,0x1
  411364:	mov    DWORD PTR [rdx],0x0
  41136a:	add    rdx,0x20
  41136e:	cmp    rax,rdi
  411371:	jbe    0x411360
  411373:	mov    QWORD PTR [r13+0x0],rax
  411377:	shl    rdi,0x5
  41137b:	lea    rax,[rcx+rdi*1]
  41137f:	mov    edx,DWORD PTR [rax]
  411381:	test   edx,edx
  411383:	jne    0x411690
  411389:	mov    DWORD PTR [rax],r9d
  41138c:	mov    BYTE PTR [rsi+0x48],bpl
  411390:	mov    rax,QWORD PTR [r12]
  411394:	mov    QWORD PTR [rsi+0x8],rbx
  411398:	lea    rcx,[rax+0x1]
  41139c:	cmp    rcx,QWORD PTR [rsp+0x28]
  4113a1:	mov    QWORD PTR [r12],rcx
  4113a5:	jae    0x411550
  4113ab:	mov    r9,QWORD PTR [r12+0x8]
  4113b0:	jmp    0x410e2b
  4113b5:	xor    r9d,r9d
  4113b8:	cmp    edx,0x7
  4113bb:	mov    ebp,eax
  4113bd:	setg   r9b
  4113c1:	add    r9d,0xf
  4113c5:	jmp    0x41132f
  4113ca:	cmp    edx,0xf
  4113cd:	jg     0x411400
  4113cf:	test   dl,0x4
  4113d2:	jne    0x411400
  4113d4:	cmp    edx,0x7
  4113d7:	jg     0x411948
  4113dd:	test   dl,0x2
  4113e0:	jne    0x41193b
  4113e6:	and    edx,0x1
  4113e9:	mov    ebp,eax
  4113eb:	neg    edx
  4113ed:	mov    r9d,edx
  4113f0:	add    r9d,0x14
  4113f4:	jmp    0x41132f
  4113f9:	nop    DWORD PTR [rax+0x0]
  411400:	mov    ebp,eax
  411402:	mov    r9d,0x16
  411408:	jmp    0x41132f
  41140d:	cmp    edx,0xf
  411410:	mov    r9d,0x9
  411416:	jg     0x41132f
  41141c:	test   dl,0x4
  41141f:	jne    0x41132f
  411425:	cmp    edx,0x7
  411428:	mov    r9b,0x7
  41142b:	jg     0x41132f
  411431:	test   dl,0x2
  411434:	mov    r9b,0x1
  411437:	jne    0x41132f
  41143d:	and    edx,0x1
  411440:	cmp    edx,0x1
  411443:	sbb    r9d,r9d
  411446:	and    r9d,0x2
  41144a:	add    r9d,0x3
  41144e:	jmp    0x41132f
  411453:	xor    r9d,r9d
  411456:	cmp    edx,0x7
  411459:	mov    ebp,eax
  41145b:	setg   r9b
  41145f:	add    r9d,0xd
  411463:	jmp    0x41132f
  411468:	cmp    edx,0xf
  41146b:	mov    r9d,0xa
  411471:	jg     0x41132f
  411477:	test   dl,0x4
  41147a:	jne    0x41132f
  411480:	cmp    edx,0x7
  411483:	mov    r9b,0x8
  411486:	jg     0x41132f
  41148c:	test   dl,0x2
  41148f:	mov    r9b,0x2
  411492:	jne    0x41132f
  411498:	and    edx,0x1
  41149b:	cmp    edx,0x1
  41149e:	sbb    r9d,r9d
  4114a1:	and    r9d,0x2
  4114a5:	add    r9d,0x4
  4114a9:	jmp    0x41132f
  4114ae:	xchg   ax,ax
  4114b0:	cmp    dl,0x9
  4114b3:	mov    QWORD PTR [rsp+0x20],0x2
  4114bc:	jbe    0x41101b
  4114c2:	mov    rbx,QWORD PTR [rsi+0x40]
  4114c6:	cmp    rbx,0xffffffffffffffff
  4114ca:	je     0x4117e3
  4114d0:	cmp    r14,rbx
  4114d3:	ja     0x411749
  4114d9:	test   r14,r14
  4114dc:	js     0x4115e7
  4114e2:	add    r14,r14
  4114e5:	cmp    r14,rbx
  4114e8:	ja     0x4114f7
  4114ea:	lea    r14,[rbx+0x1]
  4114ee:	cmp    r14,rbx
  4114f1:	jb     0x4115e7
  4114f7:	movabs rax,0x7ffffffffffffff
  411501:	cmp    r14,rax
  411504:	ja     0x4115e7
  41150a:	mov    rcx,QWORD PTR [r13+0x8]
  41150e:	mov    rdx,r14
  411511:	mov    QWORD PTR [rsp+0x40],r10
  411516:	shl    rdx,0x5
  41151a:	cmp    r15,rcx
  41151d:	je     0x41197a
  411523:	call   0x411990
  411528:	mov    r10,QWORD PTR [rsp+0x40]
  41152d:	mov    r9,rax
  411530:	test   r9,r9
  411533:	je     0x4115e7
  411539:	cmp    r15,QWORD PTR [r13+0x8]
  41153d:	je     0x411955
  411543:	mov    QWORD PTR [r13+0x8],r9
  411547:	mov    rcx,r9
  41154a:	jmp    0x41174d
  41154f:	nop
  411550:	mov    rax,QWORD PTR [rsp+0x28]
  411555:	test   rax,rax
  411558:	js     0x4115e7
  41155e:	add    rax,rax
  411561:	mov    rdi,rax
  411564:	mov    QWORD PTR [rsp+0x28],rax
  411569:	movabs rax,0x2e8ba2e8ba2e8ba
  411573:	cmp    rdi,rax
  411576:	ja     0x4115e7
  411578:	lea    rax,[rdi+rdi*4]
  41157c:	mov    rcx,QWORD PTR [r12+0x8]
  411581:	mov    QWORD PTR [rsp+0x40],r10
  411586:	lea    rdx,[rdi+rax*2]
  41158a:	shl    rdx,0x3
  41158e:	cmp    QWORD PTR [rsp+0x30],rcx
  411593:	je     0x411734
  411599:	call   0x411990
  41159e:	mov    r10,QWORD PTR [rsp+0x40]
  4115a3:	mov    r9,rax
  4115a6:	test   r9,r9
  4115a9:	je     0x4115e7
  4115ab:	mov    rax,QWORD PTR [rsp+0x30]
  4115b0:	cmp    rax,QWORD PTR [r12+0x8]
  4115b5:	je     0x4118a3
  4115bb:	mov    QWORD PTR [r12+0x8],r9
  4115c0:	mov    rcx,QWORD PTR [r12]
  4115c4:	jmp    0x410e2b
  4115c9:	test   r14,r14
  4115cc:	js     0x4115e7
  4115ce:	add    r14,r14
  4115d1:	cmp    r14,rbp
  4115d4:	ja     0x4116a0
  4115da:	lea    r14,[rbp+0x1]
  4115de:	cmp    r14,rbp
  4115e1:	jae    0x4116a0
  4115e7:	mov    rcx,QWORD PTR [r13+0x8]
  4115eb:	cmp    r15,rcx
  4115ee:	je     0x4115f5
  4115f0:	call   0x4185e0
  4115f5:	mov    rcx,QWORD PTR [r12+0x8]
  4115fa:	cmp    QWORD PTR [rsp+0x30],rcx
  4115ff:	je     0x411606
  411601:	call   0x4185e0
  411606:	call   QWORD PTR [rip+0x14114]        # 0x425720
  41160c:	mov    DWORD PTR [rax],0xc
  411612:	mov    eax,0xffffffff
  411617:	jmp    0x410e4f
  41161c:	test   r14,r14
  41161f:	js     0x4115e7
  411621:	add    r14,r14
  411624:	cmp    r14,rdi
  411627:	ja     0x411632
  411629:	lea    r14,[rdi+0x1]
  41162d:	cmp    r14,rdi
  411630:	jb     0x4115e7
  411632:	movabs rax,0x7ffffffffffffff
  41163c:	cmp    r14,rax
  41163f:	ja     0x4115e7
  411641:	mov    rcx,QWORD PTR [r13+0x8]
  411645:	mov    rdx,r14
  411648:	mov    QWORD PTR [rsp+0x48],r10
  41164d:	shl    rdx,0x5
  411651:	mov    DWORD PTR [rsp+0x40],r9d
  411656:	cmp    r15,rcx
  411659:	je     0x41186d
  41165f:	call   0x411990
  411664:	mov    r9d,DWORD PTR [rsp+0x40]
  411669:	mov    r10,QWORD PTR [rsp+0x48]
  41166e:	mov    r11,rax
  411671:	test   r11,r11
  411674:	je     0x4115e7
  41167a:	cmp    r15,QWORD PTR [r13+0x8]
  41167e:	je     0x41190c
  411684:	mov    QWORD PTR [r13+0x8],r11
  411688:	mov    rcx,r11
  41168b:	jmp    0x41134a
  411690:	cmp    r9d,edx
  411693:	je     0x41138c
  411699:	jmp    0x411083
  41169e:	xchg   ax,ax
  4116a0:	movabs rax,0x7ffffffffffffff
  4116aa:	cmp    r14,rax
  4116ad:	ja     0x4115e7
  4116b3:	mov    rcx,QWORD PTR [r13+0x8]
  4116b7:	mov    rdx,r14
  4116ba:	mov    QWORD PTR [rsp+0x40],r10
  4116bf:	shl    rdx,0x5
  4116c3:	cmp    r15,rcx
  4116c6:	je     0x4118d2
  4116cc:	call   0x411990
  4116d1:	mov    r10,QWORD PTR [rsp+0x40]
  4116d6:	mov    r9,rax
  4116d9:	test   r9,r9
  4116dc:	je     0x4115e7
  4116e2:	cmp    r15,QWORD PTR [r13+0x8]
  4116e6:	je     0x4118e7
  4116ec:	mov    QWORD PTR [r13+0x8],r9
  4116f0:	mov    rcx,r9
  4116f3:	jmp    0x411207
  4116f8:	cmp    edx,0x5
  4116fb:	je     0x411184
  411701:	jmp    0x411083
  411706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411710:	mov    rdi,QWORD PTR [rsp+0x38]
  411715:	mov    rax,rdi
  411718:	mov    QWORD PTR [rsi+0x50],rdi
  41171c:	add    rax,0x1
  411720:	cmp    rdi,0xffffffffffffffff
  411724:	je     0x41107f
  41172a:	mov    QWORD PTR [rsp+0x38],rax
  41172f:	jmp    0x41133d
  411734:	mov    rcx,rdx
  411737:	call   0x410c80
  41173c:	mov    r10,QWORD PTR [rsp+0x40]
  411741:	mov    r9,rax
  411744:	jmp    0x4115a6
  411749:	mov    rcx,QWORD PTR [r13+0x8]
  41174d:	mov    rax,QWORD PTR [r13+0x0]
  411751:	mov    rdx,rax
  411754:	shl    rdx,0x5
  411758:	add    rdx,rcx
  41175b:	cmp    rbx,rax
  41175e:	jb     0x411777
  411760:	add    rax,0x1
  411764:	mov    DWORD PTR [rdx],0x0
  41176a:	add    rdx,0x20
  41176e:	cmp    rax,rbx
  411771:	jbe    0x411760
  411773:	mov    QWORD PTR [r13+0x0],rax
  411777:	mov    rax,rbx
  41177a:	shl    rax,0x5
  41177e:	add    rax,rcx
  411781:	mov    edx,DWORD PTR [rax]
  411783:	test   edx,edx
  411785:	jne    0x411887
  41178b:	mov    DWORD PTR [rax],0x5
  411791:	mov    rbx,rbp
  411794:	movzx  eax,BYTE PTR [rbp+0x0]
  411798:	jmp    0x410f55
  41179d:	and    edx,0x4
  4117a0:	cmp    edx,0x1
  4117a3:	sbb    r9d,r9d
  4117a6:	add    r9d,0xc
  4117aa:	jmp    0x41132f
  4117af:	mov    r9d,0xe
  4117b5:	mov    ebp,0x63
  4117ba:	jmp    0x41132f
  4117bf:	mov    ebp,eax
  4117c1:	jmp    0x41138c
  4117c6:	mov    ebp,eax
  4117c8:	mov    r9d,0x11
  4117ce:	jmp    0x41132f
  4117d3:	mov    r9d,0x10
  4117d9:	mov    ebp,0x73
  4117de:	jmp    0x41132f
  4117e3:	mov    rbx,QWORD PTR [rsp+0x38]
  4117e8:	mov    rax,rbx
  4117eb:	mov    QWORD PTR [rsi+0x40],rbx
  4117ef:	add    rax,0x1
  4117f3:	cmp    rbx,0xffffffffffffffff
  4117f7:	je     0x41107f
  4117fd:	mov    QWORD PTR [rsp+0x38],rax
  411802:	jmp    0x4114d0
  411807:	nop    WORD PTR [rax+rax*1+0x0]
  411810:	add    rbx,0x1
  411814:	movsx  eax,BYTE PTR [rbx]
  411817:	lea    edx,[rax-0x30]
  41181a:	cmp    dl,0x9
  41181d:	jbe    0x4112cc
  411823:	sub    rbp,0x1
  411827:	cmp    rbp,0xfffffffffffffffd
  41182b:	ja     0x41107f
  411831:	mov    QWORD PTR [rsi+0x28],rbp
  411835:	add    rbx,0x1
  411839:	jmp    0x4111fa
  41183e:	add    rbp,0x1
  411842:	movsx  eax,BYTE PTR [rbp+0x0]
  411846:	lea    edx,[rax-0x30]
  411849:	cmp    dl,0x9
  41184c:	jbe    0x41103a
  411852:	sub    rbx,0x1
  411856:	cmp    rbx,0xfffffffffffffffd
  41185a:	ja     0x41107f
  411860:	mov    QWORD PTR [rsi+0x40],rbx
  411864:	add    rbp,0x1
  411868:	jmp    0x4114d0
  41186d:	mov    rcx,rdx
  411870:	call   0x410c80
  411875:	mov    r10,QWORD PTR [rsp+0x48]
  41187a:	mov    r11,rax
  41187d:	mov    r9d,DWORD PTR [rsp+0x40]
  411882:	jmp    0x411671
  411887:	cmp    edx,0x5
  41188a:	jne    0x411083
  411890:	movzx  eax,BYTE PTR [rbp+0x0]
  411894:	mov    rbx,rbp
  411897:	jmp    0x410f55
  41189c:	xor    eax,eax
  41189e:	jmp    0x411179
  4118a3:	mov    rax,QWORD PTR [r12]
  4118a7:	mov    rcx,r9
  4118aa:	mov    QWORD PTR [rsp+0x40],r10
  4118af:	lea    rdx,[rax+rax*4]
  4118b3:	lea    r8,[rax+rdx*2]
  4118b7:	mov    rdx,QWORD PTR [rsp+0x30]
  4118bc:	shl    r8,0x3
  4118c0:	call   0x4185a0
  4118c5:	mov    r10,QWORD PTR [rsp+0x40]
  4118ca:	mov    r9,rax
  4118cd:	jmp    0x4115bb
  4118d2:	mov    rcx,rdx
  4118d5:	call   0x410c80
  4118da:	mov    r10,QWORD PTR [rsp+0x40]
  4118df:	mov    r9,rax
  4118e2:	jmp    0x4116d9
  4118e7:	mov    r8,QWORD PTR [r13+0x0]
  4118eb:	mov    rcx,r9
  4118ee:	mov    rdx,r15
  4118f1:	mov    QWORD PTR [rsp+0x40],r10
  4118f6:	shl    r8,0x5
  4118fa:	call   0x4185a0
  4118ff:	mov    r10,QWORD PTR [rsp+0x40]
  411904:	mov    r9,rax
  411907:	jmp    0x4116ec
  41190c:	mov    r8,QWORD PTR [r13+0x0]
  411910:	mov    rcx,r11
  411913:	mov    rdx,r15
  411916:	mov    QWORD PTR [rsp+0x48],r10
  41191b:	mov    DWORD PTR [rsp+0x40],r9d
  411920:	shl    r8,0x5
  411924:	call   0x4185a0
  411929:	mov    r10,QWORD PTR [rsp+0x48]
  41192e:	mov    r11,rax
  411931:	mov    r9d,DWORD PTR [rsp+0x40]
  411936:	jmp    0x411684
  41193b:	mov    ebp,eax
  41193d:	mov    r9d,0x12
  411943:	jmp    0x41132f
  411948:	mov    ebp,eax
  41194a:	mov    r9d,0x15
  411950:	jmp    0x41132f
  411955:	mov    r8,QWORD PTR [r13+0x0]
  411959:	mov    rcx,r9
  41195c:	mov    rdx,r15
  41195f:	mov    QWORD PTR [rsp+0x40],r10
  411964:	shl    r8,0x5
  411968:	call   0x4185a0
  41196d:	mov    r10,QWORD PTR [rsp+0x40]
  411972:	mov    r9,rax
  411975:	jmp    0x411543
  41197a:	mov    rcx,rdx
  41197d:	call   0x410c80
  411982:	mov    r10,QWORD PTR [rsp+0x40]
  411987:	mov    r9,rax
  41198a:	jmp    0x411530
  41198f:	nop
  411990:	push   rbx
  411991:	sub    rsp,0x20
  411995:	test   rcx,rcx
  411998:	je     0x4119b0
  41199a:	call   0x418578
  41199f:	mov    rbx,rax
  4119a2:	test   rbx,rbx
  4119a5:	je     0x4119c0
  4119a7:	mov    rax,rbx
  4119aa:	add    rsp,0x20
  4119ae:	pop    rbx
  4119af:	ret    
  4119b0:	mov    rcx,rdx
  4119b3:	call   0x4185a8
  4119b8:	mov    rbx,rax
  4119bb:	test   rbx,rbx
  4119be:	jne    0x4119a7
  4119c0:	call   QWORD PTR [rip+0x13d5a]        # 0x425720
  4119c6:	mov    DWORD PTR [rax],0xc
  4119cc:	mov    rax,rbx
  4119cf:	add    rsp,0x20
  4119d3:	pop    rbx
  4119d4:	ret    
  4119d5:	nop
  4119d6:	nop
  4119d7:	nop
  4119d8:	nop
  4119d9:	nop
  4119da:	nop
  4119db:	nop
  4119dc:	nop
  4119dd:	nop
  4119de:	nop
  4119df:	nop
  4119e0:	push   rbp
  4119e1:	push   rdi
  4119e2:	push   rsi
  4119e3:	push   rbx
  4119e4:	sub    rsp,0x238
  4119eb:	test   rcx,rcx
  4119ee:	mov    rbp,rcx
  4119f1:	je     0x411a13
  4119f3:	mov    rbx,QWORD PTR [rip+0x13cde]        # 0x4256d8
  4119fa:	call   rbx
  4119fc:	lea    rdx,[rax+0x60]
  411a00:	mov    rcx,rbp
  411a03:	call   0x4185f0
  411a08:	call   rbx
  411a0a:	lea    rcx,[rax+0x60]
  411a0e:	call   0x418618
  411a13:	mov    rsi,QWORD PTR [rip+0x13d3e]        # 0x425758
  411a1a:	lea    rdi,[rsp+0x1f]
  411a1f:	xor    ebx,ebx
  411a21:	call   rsi
  411a23:	cmp    eax,0xd
  411a26:	je     0x411a42
  411a28:	add    rbx,0x1
  411a2c:	cmp    rbx,0x200
  411a33:	mov    BYTE PTR [rdi+rbx*1],al
  411a36:	jne    0x411a21
  411a38:	mov    BYTE PTR [rsp+0x220],0x0
  411a40:	jmp    0x411a47
  411a42:	mov    BYTE PTR [rsp+rbx*1+0x20],0x0
  411a47:	test   rbp,rbp
  411a4a:	je     0x411a7b
  411a4c:	mov    rbx,QWORD PTR [rip+0x13c85]        # 0x4256d8
  411a53:	call   rbx
  411a55:	lea    rcx,[rip+0xd634]        # 0x41f090
  411a5c:	lea    r9,[rax+0x60]
  411a60:	mov    r8d,0x2
  411a66:	mov    edx,0x1
  411a6b:	call   0x4185c8
  411a70:	call   rbx
  411a72:	lea    rcx,[rax+0x60]
  411a76:	call   0x418618
  411a7b:	lea    rcx,[rsp+0x20]
  411a80:	call   0x411aa0
  411a85:	add    rsp,0x238
  411a8c:	pop    rbx
  411a8d:	pop    rsi
  411a8e:	pop    rdi
  411a8f:	pop    rbp
  411a90:	ret    
  411a91:	nop
  411a92:	nop
  411a93:	nop
  411a94:	nop
  411a95:	nop
  411a96:	nop
  411a97:	nop
  411a98:	nop
  411a99:	nop
  411a9a:	nop
  411a9b:	nop
  411a9c:	nop
  411a9d:	nop
  411a9e:	nop
  411a9f:	nop
  411aa0:	push   rsi
  411aa1:	push   rbx
  411aa2:	sub    rsp,0x28
  411aa6:	mov    rsi,rcx
  411aa9:	call   0x418538
  411aae:	lea    rbx,[rax+0x1]
  411ab2:	mov    rcx,rbx
  411ab5:	call   0x410c80
  411aba:	test   rax,rax
  411abd:	je     0x411ad3
  411abf:	mov    r8,rbx
  411ac2:	mov    rdx,rsi
  411ac5:	mov    rcx,rax
  411ac8:	add    rsp,0x28
  411acc:	pop    rbx
  411acd:	pop    rsi
  411ace:	jmp    0x4185a0
  411ad3:	xor    eax,eax
  411ad5:	add    rsp,0x28
  411ad9:	pop    rbx
  411ada:	pop    rsi
  411adb:	ret    
  411adc:	nop
  411add:	nop
  411ade:	nop
  411adf:	nop
  411ae0:	jmp    QWORD PTR [rip+0x13ea2]        # 0x425988
  411ae6:	nop
  411ae7:	nop
  411ae8:	jmp    QWORD PTR [rip+0x13e92]        # 0x425980
  411aee:	nop
  411aef:	nop
  411af0:	jmp    QWORD PTR [rip+0x13e82]        # 0x425978
  411af6:	nop
  411af7:	nop
  411af8:	nop    DWORD PTR [rax+rax*1+0x0]
  411b00:	push   rbx
  411b01:	sub    rsp,0x30
  411b05:	mov    rbx,rcx
  411b08:	mov    rcx,QWORD PTR [rip+0x13031]        # 0x424b40
  411b0f:	call   0x4120b0
  411b14:	cmp    rax,0xffffffffffffffff
  411b18:	mov    QWORD PTR [rsp+0x20],rax
  411b1d:	je     0x411b95
  411b1f:	mov    ecx,0x8
  411b24:	call   0x418678
  411b29:	mov    rcx,QWORD PTR [rip+0x13010]        # 0x424b40
  411b30:	call   0x4120b0
  411b35:	mov    rcx,QWORD PTR [rip+0x1300c]        # 0x424b48
  411b3c:	mov    QWORD PTR [rsp+0x20],rax
  411b41:	call   0x4120b0
  411b46:	lea    rdx,[rsp+0x20]
  411b4b:	lea    r8,[rsp+0x28]
  411b50:	mov    rcx,rbx
  411b53:	mov    QWORD PTR [rsp+0x28],rax
  411b58:	call   0x418708
  411b5d:	mov    rcx,QWORD PTR [rsp+0x20]
  411b62:	mov    rbx,rax
  411b65:	call   0x4120c0
  411b6a:	mov    rcx,QWORD PTR [rsp+0x28]
  411b6f:	mov    QWORD PTR [rip+0x12fca],rax        # 0x424b40
  411b76:	call   0x4120c0
  411b7b:	mov    ecx,0x8
  411b80:	mov    QWORD PTR [rip+0x12fc1],rax        # 0x424b48
  411b87:	call   0x418650
  411b8c:	mov    rax,rbx
  411b8f:	add    rsp,0x30
  411b93:	pop    rbx
  411b94:	ret    
  411b95:	mov    rax,QWORD PTR [rip+0xdd24]        # 0x41f8c0
  411b9c:	mov    rcx,rbx
  411b9f:	call   QWORD PTR [rax]
  411ba1:	add    rsp,0x30
  411ba5:	pop    rbx
  411ba6:	ret    
  411ba7:	nop    WORD PTR [rax+rax*1+0x0]
  411bb0:	sub    rsp,0x28
  411bb4:	call   0x411b00
  411bb9:	test   rax,rax
  411bbc:	sete   al
  411bbf:	movzx  eax,al
  411bc2:	neg    eax
  411bc4:	add    rsp,0x28
  411bc8:	ret    
  411bc9:	nop
  411bca:	nop
  411bcb:	nop
  411bcc:	nop
  411bcd:	nop
  411bce:	nop
  411bcf:	nop
  411bd0:	sub    rsp,0x28
  411bd4:	mov    rax,QWORD PTR [rip+0x81e5]        # 0x419dc0
  411bdb:	mov    rax,QWORD PTR [rax]
  411bde:	test   rax,rax
  411be1:	je     0x411c00
  411be3:	call   rax
  411be5:	mov    rax,QWORD PTR [rip+0x81d4]        # 0x419dc0
  411bec:	lea    rdx,[rax+0x8]
  411bf0:	mov    rax,QWORD PTR [rax+0x8]
  411bf4:	mov    QWORD PTR [rip+0x81c5],rdx        # 0x419dc0
  411bfb:	test   rax,rax
  411bfe:	jne    0x411be3
  411c00:	add    rsp,0x28
  411c04:	ret    
  411c05:	nop
  411c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c10:	push   rsi
  411c11:	push   rbx
  411c12:	sub    rsp,0x28
  411c16:	mov    rsi,QWORD PTR [rip+0xdc13]        # 0x41f830
  411c1d:	mov    rax,QWORD PTR [rsi]
  411c20:	cmp    eax,0xffffffff
  411c23:	mov    ebx,eax
  411c25:	je     0x411c50
  411c27:	test   ebx,ebx
  411c29:	je     0x411c3a
  411c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  411c30:	mov    eax,ebx
  411c32:	call   QWORD PTR [rsi+rax*8]
  411c35:	sub    ebx,0x1
  411c38:	jne    0x411c30
  411c3a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x411bd0
  411c41:	add    rsp,0x28
  411c45:	pop    rbx
  411c46:	pop    rsi
  411c47:	jmp    0x411bb0
  411c4c:	nop    DWORD PTR [rax+0x0]
  411c50:	xor    ebx,ebx
  411c52:	jmp    0x411c56
  411c54:	mov    ebx,eax
  411c56:	lea    edx,[rbx+0x1]
  411c59:	cmp    QWORD PTR [rsi+rdx*8],0x0
  411c5e:	mov    rax,rdx
  411c61:	jne    0x411c54
  411c63:	jmp    0x411c27
  411c65:	nop
  411c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c70:	mov    eax,DWORD PTR [rip+0x11a8a]        # 0x423700
  411c76:	test   eax,eax
  411c78:	je     0x411c80
  411c7a:	repz ret 
  411c7c:	nop    DWORD PTR [rax+0x0]
  411c80:	mov    DWORD PTR [rip+0x11a76],0x1        # 0x423700
  411c8a:	jmp    0x411c10
  411c8c:	nop
  411c8d:	nop
  411c8e:	nop
  411c8f:	nop
  411c90:	mov    rax,QWORD PTR [rip+0x13a49]        # 0x4256e0
  411c97:	rex.W jmp rax
  411c9a:	nop
  411c9b:	nop
  411c9c:	nop
  411c9d:	nop
  411c9e:	nop
  411c9f:	nop
  411ca0:	xor    eax,eax
  411ca2:	ret    
  411ca3:	nop
  411ca4:	nop
  411ca5:	nop
  411ca6:	nop
  411ca7:	nop
  411ca8:	nop
  411ca9:	nop
  411caa:	nop
  411cab:	nop
  411cac:	nop
  411cad:	nop
  411cae:	nop
  411caf:	nop
  411cb0:	push   r12
  411cb2:	push   rbp
  411cb3:	push   rdi
  411cb4:	push   rsi
  411cb5:	push   rbx
  411cb6:	sub    rsp,0x40
  411cba:	mov    rbx,QWORD PTR [rip+0x819f]        # 0x419e60
  411cc1:	movabs rax,0x2b992ddfa232
  411ccb:	mov    QWORD PTR [rsp+0x20],0x0
  411cd4:	cmp    rbx,rax
  411cd7:	je     0x411cf0
  411cd9:	not    rbx
  411cdc:	mov    QWORD PTR [rip+0x818d],rbx        # 0x419e70
  411ce3:	add    rsp,0x40
  411ce7:	pop    rbx
  411ce8:	pop    rsi
  411ce9:	pop    rdi
  411cea:	pop    rbp
  411ceb:	pop    r12
  411ced:	ret    
  411cee:	xchg   ax,ax
  411cf0:	lea    rcx,[rsp+0x20]
  411cf5:	call   QWORD PTR [rip+0x13915]        # 0x425610
  411cfb:	mov    r12,QWORD PTR [rsp+0x20]
  411d00:	call   QWORD PTR [rip+0x138ca]        # 0x4255d0
  411d06:	mov    ebp,eax
  411d08:	call   QWORD PTR [rip+0x138ca]        # 0x4255d8
  411d0e:	mov    edi,eax
  411d10:	call   QWORD PTR [rip+0x13902]        # 0x425618
  411d16:	lea    rcx,[rsp+0x30]
  411d1b:	mov    esi,eax
  411d1d:	call   QWORD PTR [rip+0x1391d]        # 0x425640
  411d23:	xor    r12,QWORD PTR [rsp+0x30]
  411d28:	mov    edx,edi
  411d2a:	movabs rax,0xffffffffffff
  411d34:	xor    rbp,r12
  411d37:	mov    rdi,rbp
  411d3a:	xor    rdi,rdx
  411d3d:	mov    edx,esi
  411d3f:	xor    rdi,rdx
  411d42:	mov    rsi,rdi
  411d45:	and    rsi,rax
  411d48:	cmp    rsi,rbx
  411d4b:	je     0x411d70
  411d4d:	mov    rax,rsi
  411d50:	not    rax
  411d53:	mov    QWORD PTR [rip+0x8106],rsi        # 0x419e60
  411d5a:	mov    QWORD PTR [rip+0x810f],rax        # 0x419e70
  411d61:	add    rsp,0x40
  411d65:	pop    rbx
  411d66:	pop    rsi
  411d67:	pop    rdi
  411d68:	pop    rbp
  411d69:	pop    r12
  411d6b:	ret    
  411d6c:	nop    DWORD PTR [rax+0x0]
  411d70:	movabs rax,0xffffd466d2205dcc
  411d7a:	movabs rsi,0x2b992ddfa233
  411d84:	jmp    0x411d53
  411d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411d90:	push   rbp
  411d91:	push   rsi
  411d92:	push   rbx
  411d93:	mov    rbp,rsp
  411d96:	sub    rsp,0x70
  411d9a:	mov    rsi,rcx
  411d9d:	lea    rcx,[rip+0x1199c]        # 0x423740
  411da4:	call   QWORD PTR [rip+0x138a6]        # 0x425650
  411daa:	mov    rbx,QWORD PTR [rip+0x11a87]        # 0x423838
  411db1:	xor    r8d,r8d
  411db4:	lea    rdx,[rbp-0x28]
  411db8:	mov    rcx,rbx
  411dbb:	call   QWORD PTR [rip+0x13897]        # 0x425658
  411dc1:	test   rax,rax
  411dc4:	mov    r9,rax
  411dc7:	je     0x411e70
  411dcd:	lea    rax,[rbp-0x20]
  411dd1:	mov    QWORD PTR [rsp+0x38],0x0
  411dda:	mov    r8,rbx
  411ddd:	mov    rdx,QWORD PTR [rbp-0x28]
  411de1:	xor    ecx,ecx
  411de3:	mov    QWORD PTR [rsp+0x30],rax
  411de8:	lea    rax,[rbp-0x18]
  411dec:	mov    QWORD PTR [rsp+0x28],rax
  411df1:	lea    rax,[rip+0x11948]        # 0x423740
  411df8:	mov    QWORD PTR [rsp+0x20],rax
  411dfd:	call   QWORD PTR [rip+0x1385d]        # 0x425660
  411e03:	mov    rax,QWORD PTR [rip+0x11a2e]        # 0x423838
  411e0a:	xor    ecx,ecx
  411e0c:	mov    QWORD PTR [rip+0x119ad],rsi        # 0x4237c0
  411e13:	mov    DWORD PTR [rip+0x11e23],0xc0000409        # 0x423c40
  411e1d:	mov    DWORD PTR [rip+0x11e1d],0x1        # 0x423c44
  411e27:	mov    QWORD PTR [rip+0x11e22],rax        # 0x423c50
  411e2e:	mov    rax,QWORD PTR [rip+0x802b]        # 0x419e60
  411e35:	mov    QWORD PTR [rbp-0x10],rax
  411e39:	mov    rax,QWORD PTR [rip+0x8030]        # 0x419e70
  411e40:	mov    QWORD PTR [rbp-0x8],rax
  411e44:	call   QWORD PTR [rip+0x1381e]        # 0x425668
  411e4a:	lea    rcx,[rip+0xd24f]        # 0x41f0a0
  411e51:	call   QWORD PTR [rip+0x13831]        # 0x425688
  411e57:	call   QWORD PTR [rip+0x1376b]        # 0x4255c8
  411e5d:	mov    edx,0xc0000409
  411e62:	mov    rcx,rax
  411e65:	call   QWORD PTR [rip+0x1380d]        # 0x425678
  411e6b:	call   0x418648
  411e70:	mov    rax,QWORD PTR [rbp+0x18]
  411e74:	mov    QWORD PTR [rip+0x119bd],rax        # 0x423838
  411e7b:	lea    rax,[rbp+0x8]
  411e7f:	mov    QWORD PTR [rip+0x11952],rax        # 0x4237d8
  411e86:	jmp    0x411e03
  411e8b:	nop
  411e8c:	nop
  411e8d:	nop
  411e8e:	nop
  411e8f:	nop
  411e90:	sub    rsp,0x28
  411e94:	test   edx,edx
  411e96:	je     0x411eb0
  411e98:	cmp    edx,0x3
  411e9b:	je     0x411eb0
  411e9d:	mov    eax,0x1
  411ea2:	add    rsp,0x28
  411ea6:	ret    
  411ea7:	nop    WORD PTR [rax+rax*1+0x0]
  411eb0:	call   0x412ba0
  411eb5:	mov    eax,0x1
  411eba:	add    rsp,0x28
  411ebe:	ret    
  411ebf:	nop
  411ec0:	push   rsi
  411ec1:	push   rbx
  411ec2:	sub    rsp,0x28
  411ec6:	mov    rax,QWORD PTR [rip+0xd943]        # 0x41f810
  411ecd:	cmp    DWORD PTR [rax],0x2
  411ed0:	je     0x411ed8
  411ed2:	mov    DWORD PTR [rax],0x2
  411ed8:	cmp    edx,0x2
  411edb:	je     0x411ef0
  411edd:	cmp    edx,0x1
  411ee0:	je     0x411f22
  411ee2:	mov    eax,0x1
  411ee7:	add    rsp,0x28
  411eeb:	pop    rbx
  411eec:	pop    rsi
  411eed:	ret    
  411eee:	xchg   ax,ax
  411ef0:	lea    rbx,[rip+0x15169]        # 0x427060
  411ef7:	lea    rsi,[rip+0x15162]        # 0x427060
  411efe:	cmp    rbx,rsi
  411f01:	je     0x411ee2
  411f03:	mov    rax,QWORD PTR [rbx]
  411f06:	test   rax,rax
  411f09:	je     0x411f0d
  411f0b:	call   rax
  411f0d:	add    rbx,0x8
  411f11:	cmp    rbx,rsi
  411f14:	jne    0x411f03
  411f16:	mov    eax,0x1
  411f1b:	add    rsp,0x28
  411f1f:	pop    rbx
  411f20:	pop    rsi
  411f21:	ret    
  411f22:	call   0x412ba0
  411f27:	jmp    0x411ee2
  411f29:	nop    DWORD PTR [rax+0x0]
  411f30:	xor    eax,eax
  411f32:	ret    
  411f33:	nop
  411f34:	nop
  411f35:	nop
  411f36:	nop
  411f37:	nop
  411f38:	nop
  411f39:	nop
  411f3a:	nop
  411f3b:	nop
  411f3c:	nop
  411f3d:	nop
  411f3e:	nop
  411f3f:	nop
  411f40:	sub    rsp,0x58
  411f44:	mov    rax,QWORD PTR [rip+0x11dd5]        # 0x423d20
  411f4b:	test   rax,rax
  411f4e:	je     0x411f7c
  411f50:	movsd  xmm0,QWORD PTR [rsp+0x80]
  411f59:	mov    DWORD PTR [rsp+0x20],ecx
  411f5d:	lea    rcx,[rsp+0x20]
  411f62:	mov    QWORD PTR [rsp+0x28],rdx
  411f67:	movsd  QWORD PTR [rsp+0x30],xmm2
  411f6d:	movsd  QWORD PTR [rsp+0x38],xmm3
  411f73:	movsd  QWORD PTR [rsp+0x40],xmm0
  411f79:	call   rax
  411f7b:	nop
  411f7c:	add    rsp,0x58
  411f80:	ret    
  411f81:	nop    DWORD PTR [rax+rax*1+0x0]
  411f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411f90:	mov    QWORD PTR [rip+0x11d89],rcx        # 0x423d20
  411f97:	jmp    0x4186e0
  411f9c:	nop    DWORD PTR [rax+0x0]
  411fa0:	push   rsi
  411fa1:	push   rbx
  411fa2:	sub    rsp,0x78
  411fa6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  411fab:	movaps XMMWORD PTR [rsp+0x50],xmm7
  411fb0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  411fb6:	cmp    DWORD PTR [rcx],0x6
  411fb9:	ja     0x412090
  411fbf:	mov    edx,DWORD PTR [rcx]
  411fc1:	lea    rax,[rip+0xd21c]        # 0x41f1e4
  411fc8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  411fcc:	add    rax,rdx
  411fcf:	jmp    rax
  411fd1:	lea    rbx,[rip+0xd0e8]        # 0x41f0c0
  411fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  411fe0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  411fe6:	mov    rsi,QWORD PTR [rcx+0x8]
  411fea:	movsd  xmm7,QWORD PTR [rcx+0x18]
  411fef:	movsd  xmm6,QWORD PTR [rcx+0x10]
  411ff4:	call   0x4186f8
  411ff9:	movsd  QWORD PTR [rsp+0x30],xmm8
  412000:	lea    rcx,[rax+0x60]
  412004:	lea    rdx,[rip+0xd1ad]        # 0x41f1b8
  41200b:	movsd  QWORD PTR [rsp+0x28],xmm7
  412011:	mov    r9,rsi
  412014:	mov    r8,rbx
  412017:	movsd  QWORD PTR [rsp+0x20],xmm6
  41201d:	call   0x418600
  412022:	nop
  412023:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  412028:	xor    eax,eax
  41202a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  41202f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  412035:	add    rsp,0x78
  412039:	pop    rbx
  41203a:	pop    rsi
  41203b:	ret    
  41203c:	nop    DWORD PTR [rax+0x0]
  412040:	lea    rbx,[rip+0xd098]        # 0x41f0df
  412047:	jmp    0x411fe0
  412049:	nop    DWORD PTR [rax+0x0]
  412050:	lea    rbx,[rip+0xd0a9]        # 0x41f100
  412057:	jmp    0x411fe0
  412059:	nop    DWORD PTR [rax+0x0]
  412060:	lea    rbx,[rip+0xd109]        # 0x41f170
  412067:	jmp    0x411fe0
  41206c:	nop    DWORD PTR [rax+0x0]
  412070:	lea    rbx,[rip+0xd0d1]        # 0x41f148
  412077:	jmp    0x411fe0
  41207c:	nop    DWORD PTR [rax+0x0]
  412080:	lea    rbx,[rip+0xd099]        # 0x41f120
  412087:	jmp    0x411fe0
  41208c:	nop    DWORD PTR [rax+0x0]
  412090:	lea    rbx,[rip+0xd10f]        # 0x41f1a6
  412097:	jmp    0x411fe0
  41209c:	nop
  41209d:	nop
  41209e:	nop
  41209f:	nop
  4120a0:	fninit 
  4120a2:	ret    
  4120a3:	nop
  4120a4:	nop
  4120a5:	nop
  4120a6:	nop
  4120a7:	nop
  4120a8:	nop
  4120a9:	nop
  4120aa:	nop
  4120ab:	nop
  4120ac:	nop
  4120ad:	nop
  4120ae:	nop
  4120af:	nop
  4120b0:	mov    rax,rcx
  4120b3:	ret    
  4120b4:	xchg   ax,ax
  4120b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4120c0:	mov    rax,rcx
  4120c3:	ret    
  4120c4:	nop
  4120c5:	nop
  4120c6:	nop
  4120c7:	nop
  4120c8:	nop
  4120c9:	nop
  4120ca:	nop
  4120cb:	nop
  4120cc:	nop
  4120cd:	nop
  4120ce:	nop
  4120cf:	nop
  4120d0:	push   rsi
  4120d1:	push   rbx
  4120d2:	sub    rsp,0x38
  4120d6:	lea    rax,[rsp+0x58]
  4120db:	mov    rbx,rcx
  4120de:	mov    QWORD PTR [rsp+0x58],rdx
  4120e3:	mov    QWORD PTR [rsp+0x60],r8
  4120e8:	mov    QWORD PTR [rsp+0x68],r9
  4120ed:	mov    QWORD PTR [rsp+0x28],rax
  4120f2:	call   0x4186f8
  4120f7:	lea    rcx,[rip+0xd102]        # 0x41f200
  4120fe:	lea    r9,[rax+0x60]
  412102:	mov    r8d,0x1b
  412108:	mov    edx,0x1
  41210d:	call   0x4185c8
  412112:	mov    rsi,QWORD PTR [rsp+0x28]
  412117:	call   0x4186f8
  41211c:	lea    rcx,[rax+0x60]
  412120:	mov    rdx,rbx
  412123:	mov    r8,rsi
  412126:	call   0x4184e8
  41212b:	call   0x418648
  412130:	nop
  412131:	nop    DWORD PTR [rax+rax*1+0x0]
  412136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412140:	push   r13
  412142:	push   r12
  412144:	push   rbp
  412145:	push   rdi
  412146:	push   rsi
  412147:	push   rbx
  412148:	sub    rsp,0x58
  41214c:	movsxd rbp,DWORD PTR [rip+0x11bf1]        # 0x423d44
  412153:	mov    rbx,rcx
  412156:	mov    rsi,rdx
  412159:	mov    rdi,r8
  41215c:	test   ebp,ebp
  41215e:	jle    0x41225a
  412164:	mov    rax,QWORD PTR [rip+0x11bdd]        # 0x423d48
  41216b:	xor    r9d,r9d
  41216e:	add    rax,0x8
  412172:	mov    r10,QWORD PTR [rax]
  412175:	cmp    rbx,r10
  412178:	jb     0x41218e
  41217a:	mov    rdx,QWORD PTR [rax+0x8]
  41217e:	mov    r11d,DWORD PTR [rdx+0x8]
  412182:	add    r10,r11
  412185:	cmp    rbx,r10
  412188:	jb     0x412240
  41218e:	add    r9d,0x1
  412192:	add    rax,0x18
  412196:	cmp    r9d,ebp
  412199:	jne    0x412172
  41219b:	mov    rcx,rbx
  41219e:	call   0x412db0
  4121a3:	test   rax,rax
  4121a6:	mov    r12,rax
  4121a9:	je     0x412292
  4121af:	lea    rbp,[rbp+rbp*2+0x0]
  4121b4:	shl    rbp,0x3
  4121b8:	mov    r13,rbp
  4121bb:	add    r13,QWORD PTR [rip+0x11b86]        # 0x423d48
  4121c2:	mov    QWORD PTR [r13+0x10],rax
  4121c6:	mov    DWORD PTR [r13+0x0],0x0
  4121ce:	call   0x412ed0
  4121d3:	mov    edx,DWORD PTR [r12+0xc]
  4121d8:	mov    r8d,0x30
  4121de:	add    rax,rdx
  4121e1:	lea    rdx,[rsp+0x20]
  4121e6:	mov    QWORD PTR [r13+0x8],rax
  4121ea:	mov    rax,QWORD PTR [rip+0x11b57]        # 0x423d48
  4121f1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4121f6:	call   QWORD PTR [rip+0x1349c]        # 0x425698
  4121fc:	test   rax,rax
  4121ff:	je     0x412275
  412201:	mov    eax,DWORD PTR [rsp+0x44]
  412205:	lea    edx,[rax-0x4]
  412208:	and    edx,0xfffffffb
  41220b:	je     0x412239
  41220d:	sub    eax,0x40
  412210:	and    eax,0xffffffbf
  412213:	je     0x412239
  412215:	mov    r9,rbp
  412218:	add    r9,QWORD PTR [rip+0x11b29]        # 0x423d48
  41221f:	mov    r8d,0x40
  412225:	mov    rdx,QWORD PTR [rsp+0x38]
  41222a:	mov    rcx,QWORD PTR [rsp+0x20]
  41222f:	call   QWORD PTR [rip+0x1345b]        # 0x425690
  412235:	test   eax,eax
  412237:	je     0x412261
  412239:	add    DWORD PTR [rip+0x11b04],0x1        # 0x423d44
  412240:	mov    r8,rdi
  412243:	mov    rdx,rsi
  412246:	mov    rcx,rbx
  412249:	add    rsp,0x58
  41224d:	pop    rbx
  41224e:	pop    rsi
  41224f:	pop    rdi
  412250:	pop    rbp
  412251:	pop    r12
  412253:	pop    r13
  412255:	jmp    0x4185a0
  41225a:	xor    ebp,ebp
  41225c:	jmp    0x41219b
  412261:	call   QWORD PTR [rip+0x13381]        # 0x4255e8
  412267:	lea    rcx,[rip+0xd00a]        # 0x41f278
  41226e:	mov    edx,eax
  412270:	call   0x4120d0
  412275:	mov    rax,QWORD PTR [rip+0x11acc]        # 0x423d48
  41227c:	mov    edx,DWORD PTR [r12+0x8]
  412281:	lea    rcx,[rip+0xcfb8]        # 0x41f240
  412288:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  41228d:	call   0x4120d0
  412292:	lea    rcx,[rip+0xcf87]        # 0x41f220
  412299:	mov    rdx,rbx
  41229c:	call   0x4120d0
  4122a1:	nop
  4122a2:	nop    DWORD PTR [rax+0x0]
  4122a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4122b0:	push   rbp
  4122b1:	push   r14
  4122b3:	push   r13
  4122b5:	push   r12
  4122b7:	push   rdi
  4122b8:	push   rsi
  4122b9:	push   rbx
  4122ba:	mov    rbp,rsp
  4122bd:	sub    rsp,0x60
  4122c1:	mov    ebx,DWORD PTR [rip+0x11a79]        # 0x423d40
  4122c7:	test   ebx,ebx
  4122c9:	je     0x4122e0
  4122cb:	mov    rsp,rbp
  4122ce:	pop    rbx
  4122cf:	pop    rsi
  4122d0:	pop    rdi
  4122d1:	pop    r12
  4122d3:	pop    r13
  4122d5:	pop    r14
  4122d7:	pop    rbp
  4122d8:	ret    
  4122d9:	nop    DWORD PTR [rax+0x0]
  4122e0:	mov    DWORD PTR [rip+0x11a56],0x1        # 0x423d40
  4122ea:	call   0x412e00
  4122ef:	cdqe   
  4122f1:	lea    rax,[rax+rax*2]
  4122f5:	lea    rax,[rax*8+0x1e]
  4122fd:	and    rax,0xfffffffffffffff0
  412301:	call   0x413020
  412306:	mov    rsi,QWORD PTR [rip+0xd533]        # 0x41f840
  41230d:	mov    rbx,QWORD PTR [rip+0xd53c]        # 0x41f850
  412314:	sub    rsp,rax
  412317:	mov    DWORD PTR [rip+0x11a23],0x0        # 0x423d44
  412321:	lea    rax,[rsp+0x20]
  412326:	mov    QWORD PTR [rip+0x11a1b],rax        # 0x423d48
  41232d:	mov    rax,rsi
  412330:	sub    rax,rbx
  412333:	cmp    rax,0x7
  412337:	jle    0x4122cb
  412339:	cmp    rax,0xb
  41233d:	jle    0x412365
  41233f:	mov    r11d,DWORD PTR [rbx]
  412342:	test   r11d,r11d
  412345:	jne    0x412490
  41234b:	mov    r10d,DWORD PTR [rbx+0x4]
  41234f:	test   r10d,r10d
  412352:	jne    0x412490
  412358:	mov    r9d,DWORD PTR [rbx+0x8]
  41235c:	test   r9d,r9d
  41235f:	jne    0x41237c
  412361:	add    rbx,0xc
  412365:	mov    r8d,DWORD PTR [rbx]
  412368:	test   r8d,r8d
  41236b:	jne    0x412490
  412371:	mov    ecx,DWORD PTR [rbx+0x4]
  412374:	test   ecx,ecx
  412376:	jne    0x412490
  41237c:	mov    edx,DWORD PTR [rbx+0x8]
  41237f:	cmp    edx,0x1
  412382:	jne    0x41259c
  412388:	add    rbx,0xc
  41238c:	cmp    rbx,rsi
  41238f:	jae    0x4122cb
  412395:	mov    r12,QWORD PTR [rip+0xd4d4]        # 0x41f870
  41239c:	lea    r13,[rbp-0x30]
  4123a0:	movabs r14,0xffffffff00000000
  4123aa:	mov    ecx,DWORD PTR [rbx+0x4]
  4123ad:	mov    eax,DWORD PTR [rbx]
  4123af:	movzx  edx,BYTE PTR [rbx+0x8]
  4123b3:	add    rax,r12
  4123b6:	add    rcx,r12
  4123b9:	cmp    edx,0x10
  4123bc:	mov    r8,QWORD PTR [rax]
  4123bf:	je     0x412506
  4123c5:	jbe    0x4124cd
  4123cb:	cmp    edx,0x20
  4123ce:	je     0x41254f
  4123d4:	cmp    edx,0x40
  4123d7:	jne    0x41253b
  4123dd:	sub    r8,rax
  4123e0:	mov    rdx,r13
  4123e3:	mov    rdi,r13
  4123e6:	mov    rax,r8
  4123e9:	add    rax,QWORD PTR [rcx]
  4123ec:	mov    r8d,0x8
  4123f2:	mov    QWORD PTR [rbp-0x30],rax
  4123f6:	call   0x412140
  4123fb:	add    rbx,0xc
  4123ff:	cmp    rbx,rsi
  412402:	jb     0x4123aa
  412404:	mov    eax,DWORD PTR [rip+0x1193a]        # 0x423d44
  41240a:	xor    ebx,ebx
  41240c:	xor    esi,esi
  41240e:	test   eax,eax
  412410:	jle    0x4122cb
  412416:	mov    r14,QWORD PTR [rip+0x1327b]        # 0x425698
  41241d:	lea    r13,[rbp-0x34]
  412421:	mov    r12,QWORD PTR [rip+0x13268]        # 0x425690
  412428:	jmp    0x412443
  41242a:	nop    WORD PTR [rax+rax*1+0x0]
  412430:	add    esi,0x1
  412433:	add    rbx,0x18
  412437:	cmp    esi,DWORD PTR [rip+0x11907]        # 0x423d44
  41243d:	jge    0x4122cb
  412443:	mov    rax,rbx
  412446:	add    rax,QWORD PTR [rip+0x118fb]        # 0x423d48
  41244d:	mov    edx,DWORD PTR [rax]
  41244f:	test   edx,edx
  412451:	je     0x412430
  412453:	mov    rcx,QWORD PTR [rax+0x8]
  412457:	mov    r8d,0x30
  41245d:	mov    rdx,rdi
  412460:	call   r14
  412463:	test   rax,rax
  412466:	je     0x41257e
  41246c:	mov    rax,QWORD PTR [rip+0x118d5]        # 0x423d48
  412473:	mov    r9,r13
  412476:	mov    rdx,QWORD PTR [rbp-0x18]
  41247a:	mov    rcx,QWORD PTR [rbp-0x30]
  41247e:	mov    r8d,DWORD PTR [rax+rbx*1]
  412482:	call   r12
  412485:	jmp    0x412430
  412487:	nop    WORD PTR [rax+rax*1+0x0]
  412490:	cmp    rbx,rsi
  412493:	jae    0x4122cb
  412499:	mov    r12,QWORD PTR [rip+0xd3d0]        # 0x41f870
  4124a0:	lea    rdi,[rbp-0x30]
  4124a4:	mov    ecx,DWORD PTR [rbx+0x4]
  4124a7:	mov    eax,DWORD PTR [rbx]
  4124a9:	mov    r8d,0x4
  4124af:	mov    rdx,rdi
  4124b2:	add    rbx,0x8
  4124b6:	add    rcx,r12
  4124b9:	add    eax,DWORD PTR [rcx]
  4124bb:	mov    DWORD PTR [rbp-0x30],eax
  4124be:	call   0x412140
  4124c3:	cmp    rbx,rsi
  4124c6:	jb     0x4124a4
  4124c8:	jmp    0x412404
  4124cd:	cmp    edx,0x8
  4124d0:	jne    0x41253b
  4124d2:	movzx  edx,BYTE PTR [rcx]
  4124d5:	mov    rdi,r13
  4124d8:	mov    r10,rdx
  4124db:	or     r10,0xffffffffffffff00
  4124e2:	test   dl,dl
  4124e4:	cmovs  rdx,r10
  4124e8:	sub    rdx,rax
  4124eb:	lea    rax,[r8+rdx*1]
  4124ef:	mov    r8d,0x1
  4124f5:	mov    rdx,r13
  4124f8:	mov    QWORD PTR [rbp-0x30],rax
  4124fc:	call   0x412140
  412501:	jmp    0x4123fb
  412506:	movzx  edx,WORD PTR [rcx]
  412509:	mov    rdi,r13
  41250c:	mov    r10,rdx
  41250f:	or     r10,0xffffffffffff0000
  412516:	test   dx,dx
  412519:	cmovs  rdx,r10
  41251d:	sub    rdx,rax
  412520:	lea    rax,[r8+rdx*1]
  412524:	mov    r8d,0x2
  41252a:	mov    rdx,r13
  41252d:	mov    QWORD PTR [rbp-0x30],rax
  412531:	call   0x412140
  412536:	jmp    0x4123fb
  41253b:	lea    rcx,[rip+0xcd96]        # 0x41f2d8
  412542:	mov    QWORD PTR [rbp-0x30],0x0
  41254a:	call   0x4120d0
  41254f:	mov    edx,DWORD PTR [rcx]
  412551:	mov    rdi,r13
  412554:	mov    r10,rdx
  412557:	or     r10,r14
  41255a:	test   edx,edx
  41255c:	cmovs  rdx,r10
  412560:	sub    rdx,rax
  412563:	lea    rax,[r8+rdx*1]
  412567:	mov    r8d,0x4
  41256d:	mov    rdx,r13
  412570:	mov    QWORD PTR [rbp-0x30],rax
  412574:	call   0x412140
  412579:	jmp    0x4123fb
  41257e:	add    rbx,QWORD PTR [rip+0x117c3]        # 0x423d48
  412585:	lea    rcx,[rip+0xccb4]        # 0x41f240
  41258c:	mov    rax,QWORD PTR [rbx+0x10]
  412590:	mov    r8,QWORD PTR [rbx+0x8]
  412594:	mov    edx,DWORD PTR [rax+0x8]
  412597:	call   0x4120d0
  41259c:	lea    rcx,[rip+0xccfd]        # 0x41f2a0
  4125a3:	call   0x4120d0
  4125a8:	nop
  4125a9:	nop
  4125aa:	nop
  4125ab:	nop
  4125ac:	nop
  4125ad:	nop
  4125ae:	nop
  4125af:	nop
  4125b0:	sub    rsp,0x28
  4125b4:	mov    eax,DWORD PTR [rcx]
  4125b6:	cmp    eax,0xc0000091
  4125bb:	ja     0x412620
  4125bd:	cmp    eax,0xc000008d
  4125c2:	jae    0x41263f
  4125c4:	cmp    eax,0xc0000008
  4125c9:	je     0x4126e0
  4125cf:	ja     0x4126b0
  4125d5:	cmp    eax,0x80000002
  4125da:	je     0x4126e0
  4125e0:	cmp    eax,0xc0000005
  4125e5:	jne    0x4126be
  4125eb:	xor    edx,edx
  4125ed:	mov    ecx,0xb
  4125f2:	call   0x418568
  4125f7:	cmp    rax,0x1
  4125fb:	je     0x412740
  412601:	test   rax,rax
  412604:	je     0x412720
  41260a:	mov    ecx,0xb
  41260f:	call   rax
  412611:	xor    eax,eax
  412613:	add    rsp,0x28
  412617:	ret    
  412618:	nop    DWORD PTR [rax+rax*1+0x0]
  412620:	cmp    eax,0xc0000094
  412625:	je     0x4126f0
  41262b:	ja     0x412670
  41262d:	cmp    eax,0xc0000092
  412632:	je     0x4126e0
  412638:	cmp    eax,0xc0000093
  41263d:	jne    0x4126be
  41263f:	xor    edx,edx
  412641:	mov    ecx,0x8
  412646:	call   0x418568
  41264b:	cmp    rax,0x1
  41264f:	mov    rdx,rax
  412652:	je     0x4126c8
  412654:	test   rdx,rdx
  412657:	mov    eax,0x1
  41265c:	je     0x412613
  41265e:	mov    ecx,0x8
  412663:	call   rdx
  412665:	xor    eax,eax
  412667:	add    rsp,0x28
  41266b:	ret    
  41266c:	nop    DWORD PTR [rax+0x0]
  412670:	cmp    eax,0xc0000095
  412675:	je     0x4126e0
  412677:	cmp    eax,0xc0000096
  41267c:	jne    0x4126be
  41267e:	xor    edx,edx
  412680:	mov    ecx,0x4
  412685:	call   0x418568
  41268a:	cmp    rax,0x1
  41268e:	je     0x41272a
  412694:	test   rax,rax
  412697:	je     0x412720
  41269d:	mov    ecx,0x4
  4126a2:	call   rax
  4126a4:	xor    eax,eax
  4126a6:	jmp    0x412613
  4126ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4126b0:	cmp    eax,0xc000001d
  4126b5:	je     0x41267e
  4126b7:	cmp    eax,0xc000008c
  4126bc:	je     0x4126e0
  4126be:	mov    eax,0x1
  4126c3:	add    rsp,0x28
  4126c7:	ret    
  4126c8:	mov    edx,0x1
  4126cd:	mov    ecx,0x8
  4126d2:	call   0x418568
  4126d7:	call   0x4120a0
  4126dc:	nop    DWORD PTR [rax+0x0]
  4126e0:	xor    eax,eax
  4126e2:	add    rsp,0x28
  4126e6:	ret    
  4126e7:	nop    WORD PTR [rax+rax*1+0x0]
  4126f0:	xor    edx,edx
  4126f2:	mov    ecx,0x8
  4126f7:	call   0x418568
  4126fc:	cmp    rax,0x1
  412700:	mov    rdx,rax
  412703:	jne    0x412654
  412709:	mov    edx,0x1
  41270e:	mov    ecx,0x8
  412713:	call   0x418568
  412718:	xor    eax,eax
  41271a:	jmp    0x412613
  41271f:	nop
  412720:	mov    eax,0x4
  412725:	add    rsp,0x28
  412729:	ret    
  41272a:	mov    edx,0x1
  41272f:	mov    ecx,0x4
  412734:	call   0x418568
  412739:	xor    eax,eax
  41273b:	jmp    0x412613
  412740:	mov    edx,0x1
  412745:	mov    ecx,0xb
  41274a:	call   0x418568
  41274f:	xor    eax,eax
  412751:	jmp    0x412613
  412756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412760:	push   r12
  412762:	push   rbp
  412763:	push   rdi
  412764:	push   rsi
  412765:	push   rbx
  412766:	sub    rsp,0x20
  41276a:	call   0x412ed0
  41276f:	mov    rbp,rax
  412772:	mov    eax,DWORD PTR [rip+0x11610]        # 0x423d88
  412778:	test   eax,eax
  41277a:	jne    0x4127a1
  41277c:	test   rbp,rbp
  41277f:	je     0x4127a1
  412781:	lea    rcx,[rip+0xcb88]        # 0x41f310
  412788:	mov    DWORD PTR [rip+0x115f6],0x1        # 0x423d88
  412792:	call   0x412d10
  412797:	test   rax,rax
  41279a:	je     0x4127b0
  41279c:	mov    eax,0x1
  4127a1:	add    rsp,0x20
  4127a5:	pop    rbx
  4127a6:	pop    rsi
  4127a7:	pop    rdi
  4127a8:	pop    rbp
  4127a9:	pop    r12
  4127ab:	ret    
  4127ac:	nop    DWORD PTR [rax+0x0]
  4127b0:	lea    rbx,[rip+0x11709]        # 0x423ec0
  4127b7:	mov    ecx,0x30
  4127bc:	lea    rdx,[rip+0x115fd]        # 0x423dc0
  4127c3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4125b0
  4127ca:	xor    esi,esi
  4127cc:	mov    rdi,rbx
  4127cf:	rep stos QWORD PTR es:[rdi],rax
  4127d2:	mov    rdi,rdx
  4127d5:	sub    r12,rbp
  4127d8:	mov    cl,0x20
  4127da:	rep stos QWORD PTR es:[rdi],rax
  4127dd:	mov    rdi,rdx
  4127e0:	jmp    0x412810
  4127e2:	mov    BYTE PTR [rdi],0x9
  4127e5:	mov    DWORD PTR [rdi+0x4],r12d
  4127e9:	add    rsi,0x1
  4127ed:	mov    edx,DWORD PTR [rax+0xc]
  4127f0:	add    rbx,0xc
  4127f4:	mov    DWORD PTR [rbx-0xc],edx
  4127f7:	add    edx,DWORD PTR [rax+0x8]
  4127fa:	mov    rax,rdi
  4127fd:	sub    rax,rbp
  412800:	add    rdi,0x8
  412804:	mov    DWORD PTR [rbx-0x4],eax
  412807:	mov    DWORD PTR [rbx-0x8],edx
  41280a:	cmp    rsi,0x20
  41280e:	je     0x412845
  412810:	mov    rcx,rsi
  412813:	call   0x412e40
  412818:	test   rax,rax
  41281b:	jne    0x4127e2
  41281d:	test   rsi,rsi
  412820:	je     0x41279c
  412826:	mov    edx,esi
  412828:	nop    DWORD PTR [rax+rax*1+0x0]
  412830:	mov    r8,rbp
  412833:	lea    rcx,[rip+0x11686]        # 0x423ec0
  41283a:	call   QWORD PTR [rip+0x12e08]        # 0x425648
  412840:	jmp    0x41279c
  412845:	mov    edx,0x20
  41284a:	jmp    0x412830
  41284c:	nop    DWORD PTR [rax+0x0]
  412850:	push   rbx
  412851:	sub    rsp,0x20
  412855:	mov    rdx,QWORD PTR [rcx]
  412858:	mov    eax,DWORD PTR [rdx]
  41285a:	mov    r8d,eax
  41285d:	and    r8d,0x20ffffff
  412864:	cmp    r8d,0x20474343
  41286b:	je     0x412970
  412871:	cmp    eax,0xc0000091
  412876:	mov    rbx,rcx
  412879:	ja     0x412900
  41287f:	cmp    eax,0xc000008d
  412884:	jae    0x412917
  41288a:	cmp    eax,0xc0000008
  41288f:	je     0x4128c3
  412891:	ja     0x4128d0
  412893:	cmp    eax,0x80000002
  412898:	je     0x4128c3
  41289a:	cmp    eax,0xc0000005
  41289f:	jne    0x4128e2
  4128a1:	xor    edx,edx
  4128a3:	mov    ecx,0xb
  4128a8:	call   0x418568
  4128ad:	cmp    rax,0x1
  4128b1:	je     0x4129e0
  4128b7:	test   rax,rax
  4128ba:	je     0x4128e2
  4128bc:	mov    ecx,0xb
  4128c1:	call   rax
  4128c3:	mov    eax,0xffffffff
  4128c8:	add    rsp,0x20
  4128cc:	pop    rbx
  4128cd:	ret    
  4128ce:	xchg   ax,ax
  4128d0:	cmp    eax,0xc000001d
  4128d5:	je     0x412996
  4128db:	cmp    eax,0xc000008c
  4128e0:	je     0x4128c3
  4128e2:	mov    rax,QWORD PTR [rip+0x11497]        # 0x423d80
  4128e9:	test   rax,rax
  4128ec:	je     0x4128c8
  4128ee:	mov    rcx,rbx
  4128f1:	add    rsp,0x20
  4128f5:	pop    rbx
  4128f6:	rex.W jmp rax
  4128f9:	nop    DWORD PTR [rax+0x0]
  412900:	cmp    eax,0xc0000094
  412905:	je     0x412942
  412907:	ja     0x412980
  412909:	cmp    eax,0xc0000092
  41290e:	je     0x4128c3
  412910:	cmp    eax,0xc0000093
  412915:	jne    0x4128e2
  412917:	xor    edx,edx
  412919:	mov    ecx,0x8
  41291e:	call   0x418568
  412923:	cmp    rax,0x1
  412927:	jne    0x412954
  412929:	mov    edx,0x1
  41292e:	mov    ecx,0x8
  412933:	call   0x418568
  412938:	call   0x4120a0
  41293d:	jmp    0x4128c3
  412942:	xor    edx,edx
  412944:	mov    ecx,0x8
  412949:	call   0x418568
  41294e:	cmp    rax,0x1
  412952:	je     0x4129c2
  412954:	test   rax,rax
  412957:	je     0x4128e2
  412959:	mov    ecx,0x8
  41295e:	call   rax
  412960:	mov    eax,0xffffffff
  412965:	jmp    0x4128c8
  41296a:	nop    WORD PTR [rax+rax*1+0x0]
  412970:	test   BYTE PTR [rdx+0x4],0x1
  412974:	jne    0x412871
  41297a:	jmp    0x4128c3
  41297f:	nop
  412980:	cmp    eax,0xc0000095
  412985:	je     0x4128c3
  41298b:	cmp    eax,0xc0000096
  412990:	jne    0x4128e2
  412996:	xor    edx,edx
  412998:	mov    ecx,0x4
  41299d:	call   0x418568
  4129a2:	cmp    rax,0x1
  4129a6:	je     0x4129f4
  4129a8:	test   rax,rax
  4129ab:	je     0x4128e2
  4129b1:	mov    ecx,0x4
  4129b6:	call   rax
  4129b8:	mov    eax,0xffffffff
  4129bd:	jmp    0x4128c8
  4129c2:	mov    edx,0x1
  4129c7:	mov    ecx,0x8
  4129cc:	call   0x418568
  4129d1:	jmp    0x4128c3
  4129d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129e0:	mov    edx,0x1
  4129e5:	mov    ecx,0xb
  4129ea:	call   0x418568
  4129ef:	jmp    0x4128c3
  4129f4:	mov    edx,0x1
  4129f9:	mov    ecx,0x4
  4129fe:	call   0x418568
  412a03:	jmp    0x4128c3
  412a08:	nop
  412a09:	nop
  412a0a:	nop
  412a0b:	nop
  412a0c:	nop
  412a0d:	nop
  412a0e:	nop
  412a0f:	nop
  412a10:	push   rbp
  412a11:	push   rdi
  412a12:	push   rsi
  412a13:	push   rbx
  412a14:	sub    rsp,0x28
  412a18:	lea    rcx,[rip+0x11641]        # 0x424060
  412a1f:	call   QWORD PTR [rip+0x12b9b]        # 0x4255c0
  412a25:	mov    rbx,QWORD PTR [rip+0x11614]        # 0x424040
  412a2c:	test   rbx,rbx
  412a2f:	je     0x412a64
  412a31:	mov    rbp,QWORD PTR [rip+0x12c48]        # 0x425680
  412a38:	mov    rdi,QWORD PTR [rip+0x12ba9]        # 0x4255e8
  412a3f:	nop
  412a40:	mov    ecx,DWORD PTR [rbx]
  412a42:	call   rbp
  412a44:	mov    rsi,rax
  412a47:	call   rdi
  412a49:	test   eax,eax
  412a4b:	jne    0x412a5b
  412a4d:	test   rsi,rsi
  412a50:	je     0x412a5b
  412a52:	mov    rax,QWORD PTR [rbx+0x8]
  412a56:	mov    rcx,rsi
  412a59:	call   rax
  412a5b:	mov    rbx,QWORD PTR [rbx+0x10]
  412a5f:	test   rbx,rbx
  412a62:	jne    0x412a40
  412a64:	mov    rax,QWORD PTR [rip+0x12bc5]        # 0x425630
  412a6b:	lea    rcx,[rip+0x115ee]        # 0x424060
  412a72:	add    rsp,0x28
  412a76:	pop    rbx
  412a77:	pop    rsi
  412a78:	pop    rdi
  412a79:	pop    rbp
  412a7a:	rex.W jmp rax
  412a7d:	nop    DWORD PTR [rax]
  412a80:	push   rdi
  412a81:	push   rsi
  412a82:	push   rbx
  412a83:	sub    rsp,0x20
  412a87:	mov    eax,DWORD PTR [rip+0x115bb]        # 0x424048
  412a8d:	test   eax,eax
  412a8f:	jne    0x412aa0
  412a91:	add    rsp,0x20
  412a95:	pop    rbx
  412a96:	pop    rsi
  412a97:	pop    rdi
  412a98:	ret    
  412a99:	nop    DWORD PTR [rax+0x0]
  412aa0:	mov    rsi,rdx
  412aa3:	mov    edi,ecx
  412aa5:	mov    edx,0x18
  412aaa:	mov    ecx,0x1
  412aaf:	call   0x418638
  412ab4:	test   rax,rax
  412ab7:	mov    rbx,rax
  412aba:	je     0x412af8
  412abc:	mov    DWORD PTR [rax],edi
  412abe:	mov    QWORD PTR [rax+0x8],rsi
  412ac2:	lea    rcx,[rip+0x11597]        # 0x424060
  412ac9:	call   QWORD PTR [rip+0x12af1]        # 0x4255c0
  412acf:	mov    rax,QWORD PTR [rip+0x1156a]        # 0x424040
  412ad6:	lea    rcx,[rip+0x11583]        # 0x424060
  412add:	mov    QWORD PTR [rip+0x1155c],rbx        # 0x424040
  412ae4:	mov    QWORD PTR [rbx+0x10],rax
  412ae8:	call   QWORD PTR [rip+0x12b42]        # 0x425630
  412aee:	xor    eax,eax
  412af0:	add    rsp,0x20
  412af4:	pop    rbx
  412af5:	pop    rsi
  412af6:	pop    rdi
  412af7:	ret    
  412af8:	mov    eax,0xffffffff
  412afd:	jmp    0x412a91
  412aff:	nop
  412b00:	push   rbx
  412b01:	sub    rsp,0x20
  412b05:	mov    eax,DWORD PTR [rip+0x1153d]        # 0x424048
  412b0b:	test   eax,eax
  412b0d:	jne    0x412b20
  412b0f:	xor    eax,eax
  412b11:	add    rsp,0x20
  412b15:	pop    rbx
  412b16:	ret    
  412b17:	nop    WORD PTR [rax+rax*1+0x0]
  412b20:	mov    ebx,ecx
  412b22:	lea    rcx,[rip+0x11537]        # 0x424060
  412b29:	call   QWORD PTR [rip+0x12a91]        # 0x4255c0
  412b2f:	mov    rdx,QWORD PTR [rip+0x1150a]        # 0x424040
  412b36:	test   rdx,rdx
  412b39:	je     0x412b57
  412b3b:	mov    eax,DWORD PTR [rdx]
  412b3d:	cmp    eax,ebx
  412b3f:	jne    0x412b4e
  412b41:	jmp    0x412b8f
  412b43:	mov    r8d,DWORD PTR [rax]
  412b46:	cmp    r8d,ebx
  412b49:	je     0x412b70
  412b4b:	mov    rdx,rax
  412b4e:	mov    rax,QWORD PTR [rdx+0x10]
  412b52:	test   rax,rax
  412b55:	jne    0x412b43
  412b57:	lea    rcx,[rip+0x11502]        # 0x424060
  412b5e:	call   QWORD PTR [rip+0x12acc]        # 0x425630
  412b64:	xor    eax,eax
  412b66:	add    rsp,0x20
  412b6a:	pop    rbx
  412b6b:	ret    
  412b6c:	nop    DWORD PTR [rax+0x0]
  412b70:	mov    rcx,rax
  412b73:	mov    rax,QWORD PTR [rax+0x10]
  412b77:	mov    QWORD PTR [rdx+0x10],rax
  412b7b:	call   0x4185e0
  412b80:	lea    rcx,[rip+0x114d9]        # 0x424060
  412b87:	call   QWORD PTR [rip+0x12aa3]        # 0x425630
  412b8d:	jmp    0x412b64
  412b8f:	mov    rax,QWORD PTR [rdx+0x10]
  412b93:	mov    rcx,rdx
  412b96:	mov    QWORD PTR [rip+0x114a3],rax        # 0x424040
  412b9d:	jmp    0x412b7b
  412b9f:	nop
  412ba0:	push   rbx
  412ba1:	sub    rsp,0x20
  412ba5:	cmp    edx,0x1
  412ba8:	je     0x412c40
  412bae:	jb     0x412be0
  412bb0:	cmp    edx,0x2
  412bb3:	je     0x412bd0
  412bb5:	cmp    edx,0x3
  412bb8:	jne    0x412bd5
  412bba:	mov    eax,DWORD PTR [rip+0x11488]        # 0x424048
  412bc0:	test   eax,eax
  412bc2:	je     0x412bd5
  412bc4:	call   0x412a10
  412bc9:	jmp    0x412bd5
  412bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  412bd0:	call   0x4120a0
  412bd5:	mov    eax,0x1
  412bda:	add    rsp,0x20
  412bde:	pop    rbx
  412bdf:	ret    
  412be0:	mov    eax,DWORD PTR [rip+0x11462]        # 0x424048
  412be6:	test   eax,eax
  412be8:	jne    0x412c70
  412bee:	mov    eax,DWORD PTR [rip+0x11454]        # 0x424048
  412bf4:	cmp    eax,0x1
  412bf7:	jne    0x412bd5
  412bf9:	mov    rcx,QWORD PTR [rip+0x11440]        # 0x424040
  412c00:	test   rcx,rcx
  412c03:	je     0x412c16
  412c05:	mov    rbx,QWORD PTR [rcx+0x10]
  412c09:	call   0x4185e0
  412c0e:	test   rbx,rbx
  412c11:	mov    rcx,rbx
  412c14:	jne    0x412c05
  412c16:	lea    rcx,[rip+0x11443]        # 0x424060
  412c1d:	mov    QWORD PTR [rip+0x11418],0x0        # 0x424040
  412c28:	mov    DWORD PTR [rip+0x11416],0x0        # 0x424048
  412c32:	call   QWORD PTR [rip+0x12980]        # 0x4255b8
  412c38:	jmp    0x412bd5
  412c3a:	nop    WORD PTR [rax+rax*1+0x0]
  412c40:	mov    eax,DWORD PTR [rip+0x11402]        # 0x424048
  412c46:	test   eax,eax
  412c48:	je     0x412c60
  412c4a:	mov    eax,0x1
  412c4f:	mov    DWORD PTR [rip+0x113ef],0x1        # 0x424048
  412c59:	add    rsp,0x20
  412c5d:	pop    rbx
  412c5e:	ret    
  412c5f:	nop
  412c60:	lea    rcx,[rip+0x113f9]        # 0x424060
  412c67:	call   QWORD PTR [rip+0x129b3]        # 0x425620
  412c6d:	jmp    0x412c4a
  412c6f:	nop
  412c70:	call   0x412a10
  412c75:	jmp    0x412bee
  412c7a:	nop
  412c7b:	nop
  412c7c:	nop
  412c7d:	nop
  412c7e:	nop
  412c7f:	nop
  412c80:	movsxd rax,DWORD PTR [rcx+0x3c]
  412c84:	add    rcx,rax
  412c87:	xor    eax,eax
  412c89:	cmp    DWORD PTR [rcx],0x4550
  412c8f:	je     0x412c93
  412c91:	repz ret 
  412c93:	xor    eax,eax
  412c95:	cmp    WORD PTR [rcx+0x18],0x20b
  412c9b:	sete   al
  412c9e:	ret    
  412c9f:	nop
  412ca0:	cmp    WORD PTR [rcx],0x5a4d
  412ca5:	je     0x412cb0
  412ca7:	xor    eax,eax
  412ca9:	ret    
  412caa:	nop    WORD PTR [rax+rax*1+0x0]
  412cb0:	jmp    0x412c80
  412cb2:	nop    DWORD PTR [rax+0x0]
  412cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412cc0:	movsxd rax,DWORD PTR [rcx+0x3c]
  412cc4:	add    rcx,rax
  412cc7:	movzx  eax,WORD PTR [rcx+0x14]
  412ccb:	lea    rax,[rcx+rax*1+0x18]
  412cd0:	movzx  ecx,WORD PTR [rcx+0x6]
  412cd4:	test   ecx,ecx
  412cd6:	je     0x412d01
  412cd8:	sub    ecx,0x1
  412cdb:	lea    rcx,[rcx+rcx*4]
  412cdf:	lea    r9,[rax+rcx*8+0x28]
  412ce4:	mov    r8d,DWORD PTR [rax+0xc]
  412ce8:	cmp    r8,rdx
  412ceb:	mov    rcx,r8
  412cee:	ja     0x412cf8
  412cf0:	add    ecx,DWORD PTR [rax+0x8]
  412cf3:	cmp    rdx,rcx
  412cf6:	jb     0x412d03
  412cf8:	add    rax,0x28
  412cfc:	cmp    rax,r9
  412cff:	jne    0x412ce4
  412d01:	xor    eax,eax
  412d03:	repz ret 
  412d05:	nop
  412d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412d10:	push   rdi
  412d11:	push   rsi
  412d12:	push   rbx
  412d13:	sub    rsp,0x20
  412d17:	mov    rsi,rcx
  412d1a:	call   0x418538
  412d1f:	cmp    rax,0x8
  412d23:	ja     0x412d40
  412d25:	mov    rbx,QWORD PTR [rip+0xcb44]        # 0x41f870
  412d2c:	xor    edi,edi
  412d2e:	cmp    WORD PTR [rbx],0x5a4d
  412d33:	je     0x412d50
  412d35:	mov    rax,rdi
  412d38:	add    rsp,0x20
  412d3c:	pop    rbx
  412d3d:	pop    rsi
  412d3e:	pop    rdi
  412d3f:	ret    
  412d40:	xor    edi,edi
  412d42:	mov    rax,rdi
  412d45:	add    rsp,0x20
  412d49:	pop    rbx
  412d4a:	pop    rsi
  412d4b:	pop    rdi
  412d4c:	ret    
  412d4d:	nop    DWORD PTR [rax]
  412d50:	mov    rcx,rbx
  412d53:	call   0x412c80
  412d58:	test   eax,eax
  412d5a:	je     0x412d35
  412d5c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  412d60:	add    rdx,rbx
  412d63:	movzx  eax,WORD PTR [rdx+0x14]
  412d67:	lea    rbx,[rdx+rax*1+0x18]
  412d6c:	movzx  eax,WORD PTR [rdx+0x6]
  412d70:	test   eax,eax
  412d72:	je     0x412d35
  412d74:	sub    eax,0x1
  412d77:	lea    rax,[rax+rax*4]
  412d7b:	lea    rdi,[rbx+rax*8+0x28]
  412d80:	jmp    0x412d8b
  412d82:	add    rbx,0x28
  412d86:	cmp    rbx,rdi
  412d89:	je     0x412d40
  412d8b:	mov    r8d,0x8
  412d91:	mov    rdx,rsi
  412d94:	mov    rcx,rbx
  412d97:	call   0x418530
  412d9c:	test   eax,eax
  412d9e:	jne    0x412d82
  412da0:	mov    rdi,rbx
  412da3:	mov    rax,rdi
  412da6:	add    rsp,0x20
  412daa:	pop    rbx
  412dab:	pop    rsi
  412dac:	pop    rdi
  412dad:	ret    
  412dae:	xchg   ax,ax
  412db0:	push   rsi
  412db1:	push   rbx
  412db2:	sub    rsp,0x28
  412db6:	mov    rbx,QWORD PTR [rip+0xcab3]        # 0x41f870
  412dbd:	cmp    WORD PTR [rbx],0x5a4d
  412dc2:	je     0x412dd0
  412dc4:	xor    eax,eax
  412dc6:	add    rsp,0x28
  412dca:	pop    rbx
  412dcb:	pop    rsi
  412dcc:	ret    
  412dcd:	nop    DWORD PTR [rax]
  412dd0:	mov    rsi,rcx
  412dd3:	mov    rcx,rbx
  412dd6:	call   0x412c80
  412ddb:	test   eax,eax
  412ddd:	je     0x412dc4
  412ddf:	sub    rsi,rbx
  412de2:	mov    rcx,rbx
  412de5:	mov    rdx,rsi
  412de8:	add    rsp,0x28
  412dec:	pop    rbx
  412ded:	pop    rsi
  412dee:	jmp    0x412cc0
  412df3:	nop    DWORD PTR [rax]
  412df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e00:	push   rbx
  412e01:	sub    rsp,0x20
  412e05:	mov    rbx,QWORD PTR [rip+0xca64]        # 0x41f870
  412e0c:	xor    eax,eax
  412e0e:	cmp    WORD PTR [rbx],0x5a4d
  412e13:	je     0x412e20
  412e15:	add    rsp,0x20
  412e19:	pop    rbx
  412e1a:	ret    
  412e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  412e20:	mov    rcx,rbx
  412e23:	call   0x412c80
  412e28:	test   eax,eax
  412e2a:	je     0x412e15
  412e2c:	movsxd rax,DWORD PTR [rbx+0x3c]
  412e30:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  412e35:	add    rsp,0x20
  412e39:	pop    rbx
  412e3a:	ret    
  412e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  412e40:	push   rdi
  412e41:	push   rsi
  412e42:	push   rbx
  412e43:	sub    rsp,0x20
  412e47:	mov    rsi,QWORD PTR [rip+0xca22]        # 0x41f870
  412e4e:	xor    edi,edi
  412e50:	mov    rbx,rcx
  412e53:	cmp    WORD PTR [rsi],0x5a4d
  412e58:	je     0x412e65
  412e5a:	mov    rax,rdi
  412e5d:	add    rsp,0x20
  412e61:	pop    rbx
  412e62:	pop    rsi
  412e63:	pop    rdi
  412e64:	ret    
  412e65:	mov    rcx,rsi
  412e68:	call   0x412c80
  412e6d:	test   eax,eax
  412e6f:	je     0x412e5a
  412e71:	movsxd rax,DWORD PTR [rsi+0x3c]
  412e75:	add    rsi,rax
  412e78:	movzx  eax,WORD PTR [rsi+0x14]
  412e7c:	lea    rdx,[rsi+rax*1+0x18]
  412e81:	movzx  eax,WORD PTR [rsi+0x6]
  412e85:	test   eax,eax
  412e87:	je     0x412e5a
  412e89:	sub    eax,0x1
  412e8c:	lea    rax,[rax+rax*4]
  412e90:	lea    rax,[rdx+rax*8+0x28]
  412e95:	test   BYTE PTR [rdx+0x27],0x20
  412e99:	je     0x412ea4
  412e9b:	test   rbx,rbx
  412e9e:	je     0x412ec0
  412ea0:	sub    rbx,0x1
  412ea4:	add    rdx,0x28
  412ea8:	cmp    rdx,rax
  412eab:	jne    0x412e95
  412ead:	xor    edi,edi
  412eaf:	mov    rax,rdi
  412eb2:	add    rsp,0x20
  412eb6:	pop    rbx
  412eb7:	pop    rsi
  412eb8:	pop    rdi
  412eb9:	ret    
  412eba:	nop    WORD PTR [rax+rax*1+0x0]
  412ec0:	mov    rdi,rdx
  412ec3:	mov    rax,rdi
  412ec6:	add    rsp,0x20
  412eca:	pop    rbx
  412ecb:	pop    rsi
  412ecc:	pop    rdi
  412ecd:	ret    
  412ece:	xchg   ax,ax
  412ed0:	push   rsi
  412ed1:	push   rbx
  412ed2:	sub    rsp,0x28
  412ed6:	mov    rsi,QWORD PTR [rip+0xc993]        # 0x41f870
  412edd:	xor    ebx,ebx
  412edf:	cmp    WORD PTR [rsi],0x5a4d
  412ee4:	je     0x412ef0
  412ee6:	mov    rax,rbx
  412ee9:	add    rsp,0x28
  412eed:	pop    rbx
  412eee:	pop    rsi
  412eef:	ret    
  412ef0:	mov    rcx,rsi
  412ef3:	call   0x412c80
  412ef8:	test   eax,eax
  412efa:	cmovne rbx,rsi
  412efe:	mov    rax,rbx
  412f01:	add    rsp,0x28
  412f05:	pop    rbx
  412f06:	pop    rsi
  412f07:	ret    
  412f08:	nop    DWORD PTR [rax+rax*1+0x0]
  412f10:	push   rsi
  412f11:	push   rbx
  412f12:	sub    rsp,0x28
  412f16:	mov    rbx,QWORD PTR [rip+0xc953]        # 0x41f870
  412f1d:	xor    eax,eax
  412f1f:	cmp    WORD PTR [rbx],0x5a4d
  412f24:	je     0x412f30
  412f26:	add    rsp,0x28
  412f2a:	pop    rbx
  412f2b:	pop    rsi
  412f2c:	ret    
  412f2d:	nop    DWORD PTR [rax]
  412f30:	mov    rsi,rcx
  412f33:	mov    rcx,rbx
  412f36:	call   0x412c80
  412f3b:	test   eax,eax
  412f3d:	je     0x412f26
  412f3f:	sub    rsi,rbx
  412f42:	mov    rcx,rbx
  412f45:	mov    rdx,rsi
  412f48:	call   0x412cc0
  412f4d:	test   rax,rax
  412f50:	je     0x412f61
  412f52:	mov    eax,DWORD PTR [rax+0x24]
  412f55:	not    eax
  412f57:	shr    eax,0x1f
  412f5a:	add    rsp,0x28
  412f5e:	pop    rbx
  412f5f:	pop    rsi
  412f60:	ret    
  412f61:	xor    eax,eax
  412f63:	jmp    0x412f26
  412f65:	nop
  412f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f70:	push   rbp
  412f71:	push   rdi
  412f72:	push   rsi
  412f73:	push   rbx
  412f74:	sub    rsp,0x28
  412f78:	mov    rdi,QWORD PTR [rip+0xc8f1]        # 0x41f870
  412f7f:	xor    ebp,ebp
  412f81:	mov    esi,ecx
  412f83:	cmp    WORD PTR [rdi],0x5a4d
  412f88:	je     0x412fa0
  412f8a:	mov    rax,rbp
  412f8d:	add    rsp,0x28
  412f91:	pop    rbx
  412f92:	pop    rsi
  412f93:	pop    rdi
  412f94:	pop    rbp
  412f95:	ret    
  412f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412fa0:	mov    rcx,rdi
  412fa3:	call   0x412c80
  412fa8:	test   eax,eax
  412faa:	je     0x412f8a
  412fac:	movsxd rax,DWORD PTR [rdi+0x3c]
  412fb0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  412fb7:	test   edx,edx
  412fb9:	je     0x412f8a
  412fbb:	mov    ebx,edx
  412fbd:	mov    rcx,rdi
  412fc0:	mov    rdx,rbx
  412fc3:	call   0x412cc0
  412fc8:	test   rax,rax
  412fcb:	je     0x412f8a
  412fcd:	add    rbx,rdi
  412fd0:	mov    rdx,rbx
  412fd3:	jne    0x412fe7
  412fd5:	jmp    0x412f8a
  412fd7:	nop    WORD PTR [rax+rax*1+0x0]
  412fe0:	sub    esi,0x1
  412fe3:	add    rdx,0x14
  412fe7:	mov    ecx,DWORD PTR [rdx+0x4]
  412fea:	test   ecx,ecx
  412fec:	jne    0x412ff5
  412fee:	mov    eax,DWORD PTR [rdx+0xc]
  412ff1:	test   eax,eax
  412ff3:	je     0x413010
  412ff5:	test   esi,esi
  412ff7:	jg     0x412fe0
  412ff9:	mov    ebp,DWORD PTR [rdx+0xc]
  412ffc:	add    rbp,rdi
  412fff:	mov    rax,rbp
  413002:	add    rsp,0x28
  413006:	pop    rbx
  413007:	pop    rsi
  413008:	pop    rdi
  413009:	pop    rbp
  41300a:	ret    
  41300b:	nop    DWORD PTR [rax+rax*1+0x0]
  413010:	xor    ebp,ebp
  413012:	mov    rax,rbp
  413015:	add    rsp,0x28
  413019:	pop    rbx
  41301a:	pop    rsi
  41301b:	pop    rdi
  41301c:	pop    rbp
  41301d:	ret    
  41301e:	nop
  41301f:	nop
  413020:	push   rcx
  413021:	push   rax
  413022:	cmp    rax,0x1000
  413028:	lea    rcx,[rsp+0x18]
  41302d:	jb     0x413048
  41302f:	sub    rcx,0x1000
  413036:	or     QWORD PTR [rcx],0x0
  41303a:	sub    rax,0x1000
  413040:	cmp    rax,0x1000
  413046:	ja     0x41302f
  413048:	sub    rcx,rax
  41304b:	or     QWORD PTR [rcx],0x0
  41304f:	pop    rax
  413050:	pop    rcx
  413051:	ret    
  413052:	nop
  413053:	nop
  413054:	nop
  413055:	nop
  413056:	nop
  413057:	nop
  413058:	nop
  413059:	nop
  41305a:	nop
  41305b:	nop
  41305c:	nop
  41305d:	nop
  41305e:	nop
  41305f:	nop
  413060:	push   rdi
  413061:	push   rsi
  413062:	push   rbx
  413063:	sub    rsp,0x130
  41306a:	mov    rbx,rcx
  41306d:	call   0x4186c0
  413072:	test   rbx,rbx
  413075:	mov    DWORD PTR [rax],0x0
  41307b:	je     0x41322e
  413081:	cmp    BYTE PTR [rbx],0x0
  413084:	je     0x4131f0
  41308a:	mov    rcx,rbx
  41308d:	call   QWORD PTR [rip+0x1254d]        # 0x4255e0
  413093:	cmp    eax,0xffffffff
  413096:	je     0x413210
  41309c:	test   al,0x10
  41309e:	je     0x4131f0
  4130a4:	lea    rdi,[rsp+0x20]
  4130a9:	mov    rdx,rbx
  4130ac:	mov    r8d,0x104
  4130b2:	mov    rcx,rdi
  4130b5:	mov    rbx,rdi
  4130b8:	call   0x418698
  4130bd:	mov    r8d,DWORD PTR [rbx]
  4130c0:	add    rbx,0x4
  4130c4:	lea    eax,[r8-0x1010101]
  4130cb:	not    r8d
  4130ce:	and    eax,r8d
  4130d1:	and    eax,0x80808080
  4130d6:	je     0x4130bd
  4130d8:	mov    edx,eax
  4130da:	shr    edx,0x10
  4130dd:	test   eax,0x8080
  4130e2:	cmove  eax,edx
  4130e5:	lea    rdx,[rbx+0x2]
  4130e9:	cmove  rbx,rdx
  4130ed:	add    al,al
  4130ef:	sbb    rbx,0x3
  4130f3:	sub    rbx,rdi
  4130f6:	lea    rcx,[rbx+0x24b]
  4130fd:	call   0x4185a8
  413102:	test   rax,rax
  413105:	mov    rsi,rax
  413108:	je     0x41321f
  41310e:	lea    r9,[rax+0x244]
  413115:	lea    r8,[rbx+0x1]
  413119:	mov    rdx,rdi
  41311c:	mov    rcx,r9
  41311f:	call   0x4185a0
  413124:	cmp    BYTE PTR [rsi+0x244],0x0
  41312b:	mov    r9,rax
  41312e:	je     0x413150
  413130:	movzx  eax,BYTE PTR [rsi+rbx*1+0x243]
  413138:	cmp    al,0x2f
  41313a:	je     0x413150
  41313c:	cmp    al,0x5c
  41313e:	je     0x413150
  413140:	mov    r8d,0x5c
  413146:	mov    WORD PTR [r9+rbx*1],r8w
  41314b:	nop    DWORD PTR [rax+rax*1+0x0]
  413150:	mov    rcx,r9
  413153:	mov    eax,DWORD PTR [rcx]
  413155:	add    rcx,0x4
  413159:	lea    edx,[rax-0x1010101]
  41315f:	not    eax
  413161:	and    edx,eax
  413163:	and    edx,0x80808080
  413169:	je     0x413153
  41316b:	mov    eax,edx
  41316d:	shr    eax,0x10
  413170:	test   edx,0x8080
  413176:	cmove  edx,eax
  413179:	lea    rax,[rcx+0x2]
  41317d:	cmove  rcx,rax
  413181:	add    dl,dl
  413183:	mov    eax,0x2a
  413188:	sbb    rcx,0x3
  41318c:	xor    edx,edx
  41318e:	mov    WORD PTR [rcx],ax
  413191:	mov    WORD PTR [rsi+0x12c],dx
  413198:	lea    rdx,[rsi+0x130]
  41319f:	xor    ecx,ecx
  4131a1:	xor    eax,eax
  4131a3:	mov    QWORD PTR [rsi+0x238],0xffffffffffffffff
  4131ae:	mov    WORD PTR [rsi+0x12e],cx
  4131b5:	mov    rdi,rdx
  4131b8:	mov    ecx,0x20
  4131bd:	mov    DWORD PTR [rsi+0x240],0x0
  4131c7:	mov    DWORD PTR [rsi+0x128],0x0
  4131d1:	rep stos QWORD PTR es:[rdi],rax
  4131d4:	mov    rax,rsi
  4131d7:	mov    DWORD PTR [rdi],0x0
  4131dd:	add    rsp,0x130
  4131e4:	pop    rbx
  4131e5:	pop    rsi
  4131e6:	pop    rdi
  4131e7:	ret    
  4131e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4131f0:	call   0x4186c0
  4131f5:	mov    DWORD PTR [rax],0x14
  4131fb:	xor    eax,eax
  4131fd:	add    rsp,0x130
  413204:	pop    rbx
  413205:	pop    rsi
  413206:	pop    rdi
  413207:	ret    
  413208:	nop    DWORD PTR [rax+rax*1+0x0]
  413210:	call   0x4186c0
  413215:	mov    DWORD PTR [rax],0x2
  41321b:	xor    eax,eax
  41321d:	jmp    0x4131dd
  41321f:	call   0x4186c0
  413224:	mov    DWORD PTR [rax],0xc
  41322a:	xor    eax,eax
  41322c:	jmp    0x4131dd
  41322e:	call   0x4186c0
  413233:	mov    DWORD PTR [rax],0xe
  413239:	xor    eax,eax
  41323b:	jmp    0x4131dd
  41323d:	nop    DWORD PTR [rax]
  413240:	push   rbp
  413241:	push   rdi
  413242:	push   rsi
  413243:	push   rbx
  413244:	sub    rsp,0x158
  41324b:	mov    rbx,rcx
  41324e:	call   0x4186c0
  413253:	test   rbx,rbx
  413256:	mov    DWORD PTR [rax],0x0
  41325c:	je     0x41344d
  413262:	mov    eax,DWORD PTR [rbx+0x240]
  413268:	test   eax,eax
  41326a:	js     0x4133ef
  413270:	lea    rdi,[rsp+0x20]
  413275:	je     0x413324
  41327b:	mov    rcx,QWORD PTR [rbx+0x238]
  413282:	mov    rdx,rdi
  413285:	call   0x4184c8
  41328a:	cmp    eax,0xffffffff
  41328d:	mov    ebp,eax
  41328f:	je     0x413395
  413295:	mov    eax,DWORD PTR [rsp+0x20]
  413299:	lea    rsi,[rbx+0x24]
  41329d:	lea    rdx,[rdi+0x28]
  4132a1:	mov    r8d,0x104
  4132a7:	mov    rcx,rsi
  4132aa:	mov    DWORD PTR [rbx],eax
  4132ac:	mov    rax,QWORD PTR [rsp+0x28]
  4132b1:	mov    QWORD PTR [rbx+0x8],rax
  4132b5:	mov    rax,QWORD PTR [rsp+0x30]
  4132ba:	mov    QWORD PTR [rbx+0x10],rax
  4132be:	mov    rax,QWORD PTR [rsp+0x38]
  4132c3:	mov    QWORD PTR [rbx+0x18],rax
  4132c7:	mov    rax,QWORD PTR [rsp+0x40]
  4132cc:	mov    DWORD PTR [rbx+0x20],eax
  4132cf:	call   0x418528
  4132d4:	test   ebp,ebp
  4132d6:	jne    0x4133c3
  4132dc:	mov    eax,DWORD PTR [rbx+0x240]
  4132e2:	add    eax,0x1
  4132e5:	test   eax,eax
  4132e7:	mov    DWORD PTR [rbx+0x240],eax
  4132ed:	jle    0x4133ef
  4132f3:	mov    rcx,rsi
  4132f6:	call   0x418538
  4132fb:	lea    rcx,[rbx+0x130]
  413302:	mov    WORD PTR [rbx+0x12e],ax
  413309:	mov    rdx,rsi
  41330c:	call   0x418550
  413311:	lea    rax,[rbx+0x128]
  413318:	add    rsp,0x158
  41331f:	pop    rbx
  413320:	pop    rsi
  413321:	pop    rdi
  413322:	pop    rbp
  413323:	ret    
  413324:	lea    rcx,[rbx+0x244]
  41332b:	mov    rdx,rdi
  41332e:	call   0x4186a8
  413333:	cmp    rax,0xffffffffffffffff
  413337:	mov    rbp,rax
  41333a:	je     0x413400
  413340:	mov    eax,DWORD PTR [rsp+0x20]
  413344:	lea    rsi,[rbx+0x24]
  413348:	lea    rdx,[rdi+0x28]
  41334c:	mov    r8d,0x104
  413352:	mov    rcx,rsi
  413355:	mov    DWORD PTR [rbx],eax
  413357:	mov    rax,QWORD PTR [rsp+0x28]
  41335c:	mov    QWORD PTR [rbx+0x8],rax
  413360:	mov    rax,QWORD PTR [rsp+0x30]
  413365:	mov    QWORD PTR [rbx+0x10],rax
  413369:	mov    rax,QWORD PTR [rsp+0x38]
  41336e:	mov    QWORD PTR [rbx+0x18],rax
  413372:	mov    rax,QWORD PTR [rsp+0x40]
  413377:	mov    DWORD PTR [rbx+0x20],eax
  41337a:	call   0x418528
  41337f:	mov    QWORD PTR [rbx+0x238],rbp
  413386:	mov    DWORD PTR [rbx+0x240],0x1
  413390:	jmp    0x4132f3
  413395:	lea    rdi,[rbx+0x8]
  413399:	mov    rcx,rbx
  41339c:	xor    eax,eax
  41339e:	mov    QWORD PTR [rbx],0x0
  4133a5:	mov    QWORD PTR [rbx+0x120],0x0
  4133b0:	and    rdi,0xfffffffffffffff8
  4133b4:	sub    rcx,rdi
  4133b7:	add    ecx,0x128
  4133bd:	shr    ecx,0x3
  4133c0:	rep stos QWORD PTR es:[rdi],rax
  4133c3:	call   QWORD PTR [rip+0x1221f]        # 0x4255e8
  4133c9:	cmp    eax,0x12
  4133cc:	je     0x413440
  4133ce:	mov    rcx,QWORD PTR [rbx+0x238]
  4133d5:	call   0x4186b0
  4133da:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  4133e5:	mov    DWORD PTR [rbx+0x240],0xffffffff
  4133ef:	xor    eax,eax
  4133f1:	add    rsp,0x158
  4133f8:	pop    rbx
  4133f9:	pop    rsi
  4133fa:	pop    rdi
  4133fb:	pop    rbp
  4133fc:	ret    
  4133fd:	nop    DWORD PTR [rax]
  413400:	lea    rdi,[rbx+0x8]
  413404:	mov    rcx,rbx
  413407:	xor    eax,eax
  413409:	mov    QWORD PTR [rbx],0x0
  413410:	mov    QWORD PTR [rbx+0x120],0x0
  41341b:	and    rdi,0xfffffffffffffff8
  41341f:	sub    rcx,rdi
  413422:	add    ecx,0x128
  413428:	shr    ecx,0x3
  41342b:	rep stos QWORD PTR es:[rdi],rax
  41342e:	mov    QWORD PTR [rbx+0x238],rbp
  413435:	mov    DWORD PTR [rbx+0x240],ebp
  41343b:	xor    eax,eax
  41343d:	jmp    0x4133f1
  41343f:	nop
  413440:	call   0x4186c0
  413445:	mov    DWORD PTR [rax],0x0
  41344b:	jmp    0x4133ce
  41344d:	call   0x4186c0
  413452:	mov    DWORD PTR [rax],0xe
  413458:	xor    eax,eax
  41345a:	jmp    0x413318
  41345f:	nop
  413460:	push   rsi
  413461:	push   rbx
  413462:	sub    rsp,0x28
  413466:	mov    rsi,rcx
  413469:	call   0x4186c0
  41346e:	test   rsi,rsi
  413471:	mov    DWORD PTR [rax],0x0
  413477:	je     0x4134a0
  413479:	mov    rcx,QWORD PTR [rsi+0x238]
  413480:	xor    ebx,ebx
  413482:	cmp    rcx,0xffffffffffffffff
  413486:	je     0x41348f
  413488:	call   0x4186b0
  41348d:	mov    ebx,eax
  41348f:	mov    rcx,rsi
  413492:	call   0x4185e0
  413497:	mov    eax,ebx
  413499:	add    rsp,0x28
  41349d:	pop    rbx
  41349e:	pop    rsi
  41349f:	ret    
  4134a0:	call   0x4186c0
  4134a5:	mov    DWORD PTR [rax],0xe
  4134ab:	mov    eax,0xffffffff
  4134b0:	jmp    0x413499
  4134b2:	nop    DWORD PTR [rax+0x0]
  4134b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134c0:	push   rbx
  4134c1:	sub    rsp,0x20
  4134c5:	mov    rbx,rcx
  4134c8:	call   0x4186c0
  4134cd:	test   rbx,rbx
  4134d0:	mov    DWORD PTR [rax],0x0
  4134d6:	je     0x413505
  4134d8:	mov    rcx,QWORD PTR [rbx+0x238]
  4134df:	cmp    rcx,0xffffffffffffffff
  4134e3:	je     0x4134ea
  4134e5:	call   0x4186b0
  4134ea:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  4134f5:	mov    DWORD PTR [rbx+0x240],0x0
  4134ff:	add    rsp,0x20
  413503:	pop    rbx
  413504:	ret    
  413505:	call   0x4186c0
  41350a:	mov    DWORD PTR [rax],0xe
  413510:	jmp    0x4134ff
  413512:	nop    DWORD PTR [rax+0x0]
  413516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413520:	push   rbx
  413521:	sub    rsp,0x20
  413525:	mov    rbx,rcx
  413528:	call   0x4186c0
  41352d:	test   rbx,rbx
  413530:	mov    DWORD PTR [rax],0x0
  413536:	je     0x413544
  413538:	mov    eax,DWORD PTR [rbx+0x240]
  41353e:	add    rsp,0x20
  413542:	pop    rbx
  413543:	ret    
  413544:	call   0x4186c0
  413549:	mov    DWORD PTR [rax],0xe
  41354f:	mov    eax,0xffffffff
  413554:	jmp    0x41353e
  413556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413560:	push   rsi
  413561:	push   rbx
  413562:	sub    rsp,0x28
  413566:	mov    rbx,rcx
  413569:	mov    esi,edx
  41356b:	call   0x4186c0
  413570:	test   rbx,rbx
  413573:	mov    DWORD PTR [rax],0x0
  413579:	je     0x4135ed
  41357b:	cmp    esi,0xffffffff
  41357e:	jl     0x4135e0
  413580:	je     0x4135b0
  413582:	mov    rcx,rbx
  413585:	call   0x4134c0
  41358a:	jmp    0x41359d
  41358c:	nop    DWORD PTR [rax+0x0]
  413590:	mov    rcx,rbx
  413593:	call   0x413240
  413598:	test   rax,rax
  41359b:	je     0x4135d7
  41359d:	cmp    esi,DWORD PTR [rbx+0x240]
  4135a3:	jg     0x413590
  4135a5:	add    rsp,0x28
  4135a9:	pop    rbx
  4135aa:	pop    rsi
  4135ab:	ret    
  4135ac:	nop    DWORD PTR [rax+0x0]
  4135b0:	mov    rcx,QWORD PTR [rbx+0x238]
  4135b7:	cmp    rcx,0xffffffffffffffff
  4135bb:	je     0x4135c2
  4135bd:	call   0x4186b0
  4135c2:	mov    QWORD PTR [rbx+0x238],0xffffffffffffffff
  4135cd:	mov    DWORD PTR [rbx+0x240],0xffffffff
  4135d7:	add    rsp,0x28
  4135db:	pop    rbx
  4135dc:	pop    rsi
  4135dd:	ret    
  4135de:	xchg   ax,ax
  4135e0:	call   0x4186c0
  4135e5:	mov    DWORD PTR [rax],0x16
  4135eb:	jmp    0x4135d7
  4135ed:	call   0x4186c0
  4135f2:	mov    DWORD PTR [rax],0xe
  4135f8:	jmp    0x4135d7
  4135fa:	nop
  4135fb:	nop
  4135fc:	nop
  4135fd:	nop
  4135fe:	nop
  4135ff:	nop
  413600:	test   rdx,rdx
  413603:	mov    r8,rcx
  413606:	je     0x413632
  413608:	cmp    BYTE PTR [rcx],0x0
  41360b:	jne    0x413615
  41360d:	jmp    0x413632
  41360f:	nop
  413610:	cmp    BYTE PTR [rcx],0x0
  413613:	je     0x413630
  413615:	add    rcx,0x1
  413619:	mov    rax,rcx
  41361c:	sub    rax,r8
  41361f:	cmp    rax,rdx
  413622:	jb     0x413610
  413624:	repz ret 
  413626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413630:	repz ret 
  413632:	xor    eax,eax
  413634:	ret    
  413635:	nop
  413636:	nop
  413637:	nop
  413638:	nop
  413639:	nop
  41363a:	nop
  41363b:	nop
  41363c:	nop
  41363d:	nop
  41363e:	nop
  41363f:	nop
  413640:	push   r12
  413642:	push   rbp
  413643:	push   rdi
  413644:	push   rsi
  413645:	push   rbx
  413646:	sub    rsp,0x250
  41364d:	mov    rbx,rdx
  413650:	mov    rsi,rcx
  413653:	mov    ecx,0x4000
  413658:	mov    r12d,r8d
  41365b:	call   0x4185a8
  413660:	test   rbx,rbx
  413663:	mov    rbp,rax
  413666:	je     0x413730
  41366c:	cmp    WORD PTR [rbx],0x0
  413670:	lea    rax,[rip+0xbca9]        # 0x41f320
  413677:	cmove  rbx,rax
  41367b:	test   rsi,rsi
  41367e:	je     0x413721
  413684:	cmp    WORD PTR [rsi],0x0
  413688:	lea    rax,[rip+0xbca5]        # 0x41f334
  41368f:	cmove  rsi,rax
  413693:	lea    rdi,[rsp+0x40]
  413698:	xor    ecx,ecx
  41369a:	mov    r8d,0x104
  4136a0:	mov    rdx,rdi
  4136a3:	call   QWORD PTR [rip+0x11f47]        # 0x4255f0
  4136a9:	test   eax,eax
  4136ab:	je     0x413710
  4136ad:	lea    r8,[rip+0xbc84]        # 0x41f338
  4136b4:	mov    QWORD PTR [rsp+0x30],rsi
  4136b9:	mov    DWORD PTR [rsp+0x28],r12d
  4136be:	mov    QWORD PTR [rsp+0x20],rbx
  4136c3:	mov    r9,rdi
  4136c6:	mov    edx,0x1fff
  4136cb:	mov    rcx,rbp
  4136ce:	call   0x418660
  4136d3:	mov    rax,QWORD PTR [rip+0xc396]        # 0x41fa70
  4136da:	mov    eax,DWORD PTR [rax]
  4136dc:	test   eax,eax
  4136de:	je     0x413755
  4136e0:	xor    ecx,ecx
  4136e2:	mov    r9d,0x12012
  4136e8:	lea    r8,[rip+0xbce1]        # 0x41f3d0
  4136ef:	mov    rdx,rbp
  4136f2:	call   QWORD PTR [rip+0x122a0]        # 0x425998
  4136f8:	cmp    eax,0x3
  4136fb:	je     0x413741
  4136fd:	cmp    eax,0x5
  413700:	jne    0x41373c
  413702:	add    rsp,0x250
  413709:	pop    rbx
  41370a:	pop    rsi
  41370b:	pop    rdi
  41370c:	pop    rbp
  41370d:	pop    r12
  41370f:	ret    
  413710:	lea    rdx,[rip+0xbc09]        # 0x41f320
  413717:	mov    rcx,rdi
  41371a:	call   0x4184e0
  41371f:	jmp    0x4136ad
  413721:	lea    rsi,[rip+0xbc0c]        # 0x41f334
  413728:	jmp    0x413693
  41372d:	nop    DWORD PTR [rax]
  413730:	lea    rbx,[rip+0xbbe9]        # 0x41f320
  413737:	jmp    0x41367b
  41373c:	call   0x418648
  413741:	mov    ecx,0x16
  413746:	call   0x418580
  41374b:	mov    ecx,0x3
  413750:	call   0x4186b8
  413755:	call   0x4186f8
  41375a:	lea    rdx,[rip+0xbc5f]        # 0x41f3c0
  413761:	lea    rcx,[rax+0x60]
  413765:	mov    r8,rbp
  413768:	call   0x4185d0
  41376d:	call   0x418648
  413772:	nop
  413773:	nop    DWORD PTR [rax]
  413776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413780:	push   rbp
  413781:	push   rdi
  413782:	push   rsi
  413783:	push   rbx
  413784:	sub    rsp,0x38
  413788:	mov    rdi,rdx
  41378b:	mov    DWORD PTR [rsp+0x2c],r8d
  413790:	mov    rbp,rcx
  413793:	call   0x418538
  413798:	lea    rcx,[rax+rax*1+0x2]
  41379d:	call   0x4185a8
  4137a2:	mov    rcx,rdi
  4137a5:	mov    rsi,rax
  4137a8:	call   0x418538
  4137ad:	lea    rcx,[rax+rax*1+0x2]
  4137b2:	call   0x4185a8
  4137b7:	movzx  r9d,BYTE PTR [rbp+0x0]
  4137bc:	xor    r10d,r10d
  4137bf:	mov    rbx,rax
  4137c2:	mov    r8d,DWORD PTR [rsp+0x2c]
  4137c7:	test   r9b,r9b
  4137ca:	je     0x4137e7
  4137cc:	nop    DWORD PTR [rax+0x0]
  4137d0:	mov    WORD PTR [rsi+r10*2],r9w
  4137d5:	add    r10,0x1
  4137d9:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  4137df:	test   r9b,r9b
  4137e2:	jne    0x4137d0
  4137e4:	add    r10,r10
  4137e7:	movzx  r9d,BYTE PTR [rdi]
  4137eb:	xor    edx,edx
  4137ed:	mov    WORD PTR [rsi+r10*1],dx
  4137f2:	xor    r10d,r10d
  4137f5:	test   r9b,r9b
  4137f8:	je     0x413816
  4137fa:	nop    WORD PTR [rax+rax*1+0x0]
  413800:	mov    WORD PTR [rbx+r10*2],r9w
  413805:	add    r10,0x1
  413809:	movzx  r9d,BYTE PTR [rdi+r10*1]
  41380e:	test   r9b,r9b
  413811:	jne    0x413800
  413813:	add    r10,r10
  413816:	xor    eax,eax
  413818:	mov    rdx,rbx
  41381b:	mov    rcx,rsi
  41381e:	mov    WORD PTR [rbx+r10*1],ax
  413823:	call   0x413640
  413828:	mov    rcx,rsi
  41382b:	call   0x4185e0
  413830:	mov    rcx,rbx
  413833:	add    rsp,0x38
  413837:	pop    rbx
  413838:	pop    rsi
  413839:	pop    rdi
  41383a:	pop    rbp
  41383b:	jmp    0x4185e0
  413840:	sub    rsp,0x58
  413844:	test   r8d,r8d
  413847:	mov    eax,r8d
  41384a:	mov    WORD PTR [rsp+0x68],dx
  41384f:	jne    0x413864
  413851:	cmp    dx,0xff
  413856:	ja     0x4138aa
  413858:	mov    BYTE PTR [rcx],dl
  41385a:	mov    eax,0x1
  41385f:	add    rsp,0x58
  413863:	ret    
  413864:	lea    rdx,[rsp+0x4c]
  413869:	mov    DWORD PTR [rsp+0x28],r9d
  41386e:	mov    QWORD PTR [rsp+0x20],rcx
  413873:	mov    DWORD PTR [rsp+0x4c],0x0
  41387b:	mov    QWORD PTR [rsp+0x30],0x0
  413884:	mov    r9d,0x1
  41388a:	mov    QWORD PTR [rsp+0x38],rdx
  41388f:	lea    r8,[rsp+0x68]
  413894:	xor    edx,edx
  413896:	mov    ecx,eax
  413898:	call   QWORD PTR [rip+0x11e02]        # 0x4256a0
  41389e:	test   eax,eax
  4138a0:	je     0x4138aa
  4138a2:	mov    edx,DWORD PTR [rsp+0x4c]
  4138a6:	test   edx,edx
  4138a8:	je     0x41385f
  4138aa:	call   0x4186c0
  4138af:	mov    DWORD PTR [rax],0x2a
  4138b5:	mov    eax,0xffffffff
  4138ba:	add    rsp,0x58
  4138be:	ret    
  4138bf:	nop
  4138c0:	push   rdi
  4138c1:	push   rsi
  4138c2:	push   rbx
  4138c3:	sub    rsp,0x30
  4138c7:	lea    rax,[rsp+0x20]
  4138cc:	test   rcx,rcx
  4138cf:	mov    rbx,rcx
  4138d2:	mov    esi,edx
  4138d4:	cmove  rbx,rax
  4138d8:	mov    rax,QWORD PTR [rip+0xbfb1]        # 0x41f890
  4138df:	mov    rax,QWORD PTR [rax]
  4138e2:	mov    edi,DWORD PTR [rax]
  4138e4:	call   0x418710
  4138e9:	movzx  edx,si
  4138ec:	mov    r8d,eax
  4138ef:	mov    rcx,rbx
  4138f2:	mov    r9d,edi
  4138f5:	call   0x413840
  4138fa:	cdqe   
  4138fc:	add    rsp,0x30
  413900:	pop    rbx
  413901:	pop    rsi
  413902:	pop    rdi
  413903:	ret    
  413904:	xchg   ax,ax
  413906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413910:	push   r14
  413912:	push   r13
  413914:	push   r12
  413916:	push   rbp
  413917:	push   rdi
  413918:	push   rsi
  413919:	push   rbx
  41391a:	sub    rsp,0x30
  41391e:	mov    r13,rdx
  413921:	mov    rbx,rcx
  413924:	mov    rdi,r8
  413927:	call   0x418710
  41392c:	mov    ebp,eax
  41392e:	mov    rax,QWORD PTR [rip+0xbf5b]        # 0x41f890
  413935:	mov    r14,QWORD PTR [r13+0x0]
  413939:	mov    rax,QWORD PTR [rax]
  41393c:	test   r14,r14
  41393f:	mov    r12d,DWORD PTR [rax]
  413942:	je     0x413a30
  413948:	xor    esi,esi
  41394a:	test   rbx,rbx
  41394d:	je     0x4139e0
  413953:	test   rdi,rdi
  413956:	jne    0x413978
  413958:	jmp    0x4139a4
  41395a:	nop    WORD PTR [rax+rax*1+0x0]
  413960:	movsxd r10,eax
  413963:	add    rbx,r10
  413966:	add    rsi,r10
  413969:	cmp    BYTE PTR [rbx-0x1],0x0
  41396d:	je     0x4139c0
  41396f:	add    r14,0x2
  413973:	cmp    rdi,rsi
  413976:	jbe    0x4139a4
  413978:	movzx  edx,WORD PTR [r14]
  41397c:	mov    r9d,r12d
  41397f:	mov    r8d,ebp
  413982:	mov    rcx,rbx
  413985:	call   0x413840
  41398a:	test   eax,eax
  41398c:	jg     0x413960
  41398e:	mov    rax,0xffffffffffffffff
  413995:	add    rsp,0x30
  413999:	pop    rbx
  41399a:	pop    rsi
  41399b:	pop    rdi
  41399c:	pop    rbp
  41399d:	pop    r12
  41399f:	pop    r13
  4139a1:	pop    r14
  4139a3:	ret    
  4139a4:	mov    rax,rsi
  4139a7:	mov    QWORD PTR [r13+0x0],r14
  4139ab:	add    rsp,0x30
  4139af:	pop    rbx
  4139b0:	pop    rsi
  4139b1:	pop    rdi
  4139b2:	pop    rbp
  4139b3:	pop    r12
  4139b5:	pop    r13
  4139b7:	pop    r14
  4139b9:	ret    
  4139ba:	nop    WORD PTR [rax+rax*1+0x0]
  4139c0:	lea    rax,[rsi-0x1]
  4139c4:	mov    QWORD PTR [r13+0x0],0x0
  4139cc:	add    rsp,0x30
  4139d0:	pop    rbx
  4139d1:	pop    rsi
  4139d2:	pop    rdi
  4139d3:	pop    rbp
  4139d4:	pop    r12
  4139d6:	pop    r13
  4139d8:	pop    r14
  4139da:	ret    
  4139db:	nop    DWORD PTR [rax+rax*1+0x0]
  4139e0:	test   rdi,rdi
  4139e3:	lea    rbx,[rsp+0x20]
  4139e8:	jne    0x413a0b
  4139ea:	jmp    0x413a41
  4139ec:	nop    DWORD PTR [rax+0x0]
  4139f0:	movsxd rdx,eax
  4139f3:	sub    eax,0x1
  4139f6:	cdqe   
  4139f8:	add    rsi,rdx
  4139fb:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  413a00:	je     0x413a49
  413a02:	add    r14,0x2
  413a06:	cmp    rdi,rsi
  413a09:	jbe    0x413a41
  413a0b:	movzx  edx,WORD PTR [r14]
  413a0f:	mov    r9d,r12d
  413a12:	mov    r8d,ebp
  413a15:	mov    rcx,rbx
  413a18:	call   0x413840
  413a1d:	test   eax,eax
  413a1f:	jg     0x4139f0
  413a21:	jmp    0x41398e
  413a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413a30:	xor    eax,eax
  413a32:	add    rsp,0x30
  413a36:	pop    rbx
  413a37:	pop    rsi
  413a38:	pop    rdi
  413a39:	pop    rbp
  413a3a:	pop    r12
  413a3c:	pop    r13
  413a3e:	pop    r14
  413a40:	ret    
  413a41:	mov    rax,rsi
  413a44:	jmp    0x413995
  413a49:	lea    rax,[rsi-0x1]
  413a4d:	jmp    0x413995
  413a52:	nop
  413a53:	nop
  413a54:	nop
  413a55:	nop
  413a56:	nop
  413a57:	nop
  413a58:	nop
  413a59:	nop
  413a5a:	nop
  413a5b:	nop
  413a5c:	nop
  413a5d:	nop
  413a5e:	nop
  413a5f:	nop
  413a60:	jmp    0x418670
  413a65:	nop
  413a66:	nop
  413a67:	nop
  413a68:	nop
  413a69:	nop
  413a6a:	nop
  413a6b:	nop
  413a6c:	nop
  413a6d:	nop
  413a6e:	nop
  413a6f:	nop
  413a70:	sub    rsp,0x38
  413a74:	mov    r9,rdx
  413a77:	mov    QWORD PTR [rsp+0x20],r8
  413a7c:	mov    rdx,rcx
  413a7f:	xor    r8d,r8d
  413a82:	mov    ecx,0x6000
  413a87:	call   0x4153a0
  413a8c:	add    rsp,0x38
  413a90:	ret    
  413a91:	nop
  413a92:	nop
  413a93:	nop
  413a94:	nop
  413a95:	nop
  413a96:	nop
  413a97:	nop
  413a98:	nop
  413a99:	nop
  413a9a:	nop
  413a9b:	nop
  413a9c:	nop
  413a9d:	nop
  413a9e:	nop
  413a9f:	nop
  413aa0:	push   rsi
  413aa1:	push   rbx
  413aa2:	sub    rsp,0x38
  413aa6:	mov    rbx,rcx
  413aa9:	mov    rsi,rdx
  413aac:	call   0x4186f8
  413ab1:	lea    rdx,[rax+0x30]
  413ab5:	mov    QWORD PTR [rsp+0x20],rsi
  413aba:	mov    r9,rbx
  413abd:	xor    r8d,r8d
  413ac0:	mov    ecx,0x6000
  413ac5:	call   0x4153a0
  413aca:	add    rsp,0x38
  413ace:	pop    rbx
  413acf:	pop    rsi
  413ad0:	ret    
  413ad1:	nop
  413ad2:	nop
  413ad3:	nop
  413ad4:	nop
  413ad5:	nop
  413ad6:	nop
  413ad7:	nop
  413ad8:	nop
  413ad9:	nop
  413ada:	nop
  413adb:	nop
  413adc:	nop
  413add:	nop
  413ade:	nop
  413adf:	nop
  413ae0:	push   rsi
  413ae1:	push   rbx
  413ae2:	sub    rsp,0x38
  413ae6:	test   rdx,rdx
  413ae9:	mov    rsi,rcx
  413aec:	je     0x413b20
  413aee:	lea    rbx,[rdx-0x1]
  413af2:	mov    QWORD PTR [rsp+0x20],r9
  413af7:	mov    rdx,rcx
  413afa:	mov    r9,r8
  413afd:	xor    ecx,ecx
  413aff:	mov    r8d,ebx
  413b02:	call   0x4153a0
  413b07:	cmp    eax,ebx
  413b09:	cmovle ebx,eax
  413b0c:	movsxd rbx,ebx
  413b0f:	mov    BYTE PTR [rsi+rbx*1],0x0
  413b13:	add    rsp,0x38
  413b17:	pop    rbx
  413b18:	pop    rsi
  413b19:	ret    
  413b1a:	nop    WORD PTR [rax+rax*1+0x0]
  413b20:	mov    QWORD PTR [rsp+0x20],r9
  413b25:	mov    rdx,rcx
  413b28:	mov    r9,r8
  413b2b:	xor    ecx,ecx
  413b2d:	xor    r8d,r8d
  413b30:	call   0x4153a0
  413b35:	add    rsp,0x38
  413b39:	pop    rbx
  413b3a:	pop    rsi
  413b3b:	ret    
  413b3c:	nop
  413b3d:	nop
  413b3e:	nop
  413b3f:	nop
  413b40:	push   rbx
  413b41:	sub    rsp,0x30
  413b45:	mov    rbx,rcx
  413b48:	mov    r9,rdx
  413b4b:	mov    QWORD PTR [rsp+0x20],r8
  413b50:	mov    rdx,rcx
  413b53:	xor    r8d,r8d
  413b56:	mov    ecx,0x4000
  413b5b:	call   0x4153a0
  413b60:	movsxd rdx,eax
  413b63:	mov    BYTE PTR [rbx+rdx*1],0x0
  413b67:	add    rsp,0x30
  413b6b:	pop    rbx
  413b6c:	ret    
  413b6d:	nop
  413b6e:	nop
  413b6f:	nop
  413b70:	sub    rsp,0x58
  413b74:	mov    rax,QWORD PTR [rdx]
  413b77:	mov    r11,rdx
  413b7a:	mov    edx,DWORD PTR [rdx+0x8]
  413b7d:	mov    r10,rdx
  413b80:	and    r10w,0x7fff
  413b86:	jne    0x413ba4
  413b88:	mov    rdx,rax
  413b8b:	shr    rdx,0x20
  413b8f:	or     eax,edx
  413b91:	jne    0x413c10
  413b93:	mov    DWORD PTR [rsp+0x44],0x0
  413b9b:	movzx  eax,WORD PTR [r11+0x8]
  413ba0:	xor    edx,edx
  413ba2:	jmp    0x413bcb
  413ba4:	cmp    r10w,0x7fff
  413baa:	je     0x413c30
  413bb0:	movzx  eax,WORD PTR [r11+0x8]
  413bb5:	mov    DWORD PTR [rsp+0x44],0x1
  413bbd:	mov    edx,eax
  413bbf:	and    edx,0x7fff
  413bc5:	sub    edx,0x403e
  413bcb:	and    eax,0x8000
  413bd0:	mov    r10,QWORD PTR [rsp+0x80]
  413bd8:	mov    DWORD PTR [r10],eax
  413bdb:	lea    rax,[rsp+0x48]
  413be0:	mov    QWORD PTR [rsp+0x30],r9
  413be5:	mov    DWORD PTR [rsp+0x20],ecx
  413be9:	lea    r9,[rsp+0x44]
  413bee:	lea    rcx,[rip+0x621b]        # 0x419e10
  413bf5:	mov    DWORD PTR [rsp+0x28],r8d
  413bfa:	mov    QWORD PTR [rsp+0x38],rax
  413bff:	mov    r8,r11
  413c02:	call   0x416020
  413c07:	add    rsp,0x58
  413c0b:	ret    
  413c0c:	nop    DWORD PTR [rax+0x0]
  413c10:	test   edx,edx
  413c12:	js     0x413bb0
  413c14:	mov    DWORD PTR [rsp+0x44],0x2
  413c1c:	movzx  eax,WORD PTR [r11+0x8]
  413c21:	mov    edx,0xffffbfc3
  413c26:	jmp    0x413bcb
  413c28:	nop    DWORD PTR [rax+rax*1+0x0]
  413c30:	mov    rdx,rax
  413c33:	shr    rdx,0x20
  413c37:	and    edx,0x7fffffff
  413c3d:	or     edx,eax
  413c3f:	jne    0x413c55
  413c41:	mov    DWORD PTR [rsp+0x44],0x3
  413c49:	movzx  eax,WORD PTR [r11+0x8]
  413c4e:	xor    edx,edx
  413c50:	jmp    0x413bcb
  413c55:	mov    DWORD PTR [rsp+0x44],0x4
  413c5d:	xor    edx,edx
  413c5f:	xor    eax,eax
  413c61:	jmp    0x413bd0
  413c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413c70:	push   rbx
  413c71:	sub    rsp,0x20
  413c75:	mov    rbx,rdx
  413c78:	mov    edx,DWORD PTR [rdx+0x8]
  413c7b:	test   dh,0x40
  413c7e:	jne    0x413c88
  413c80:	mov    eax,DWORD PTR [rbx+0x24]
  413c83:	cmp    DWORD PTR [rbx+0x28],eax
  413c86:	jle    0x413c9a
  413c88:	and    dh,0x20
  413c8b:	jne    0x413cb0
  413c8d:	movsxd rax,DWORD PTR [rbx+0x24]
  413c91:	mov    rdx,QWORD PTR [rbx]
  413c94:	mov    BYTE PTR [rdx+rax*1],cl
  413c97:	mov    eax,DWORD PTR [rbx+0x24]
  413c9a:	add    eax,0x1
  413c9d:	mov    DWORD PTR [rbx+0x24],eax
  413ca0:	add    rsp,0x20
  413ca4:	pop    rbx
  413ca5:	ret    
  413ca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413cb0:	mov    rdx,QWORD PTR [rbx]
  413cb3:	call   0x4185f8
  413cb8:	mov    eax,DWORD PTR [rbx+0x24]
  413cbb:	add    eax,0x1
  413cbe:	mov    DWORD PTR [rbx+0x24],eax
  413cc1:	add    rsp,0x20
  413cc5:	pop    rbx
  413cc6:	ret    
  413cc7:	nop    WORD PTR [rax+rax*1+0x0]
  413cd0:	push   r14
  413cd2:	push   r13
  413cd4:	push   r12
  413cd6:	push   rbp
  413cd7:	push   rdi
  413cd8:	push   rsi
  413cd9:	push   rbx
  413cda:	sub    rsp,0x40
  413cde:	lea    r14,[rsp+0x2c]
  413ce3:	lea    r13,[rsp+0x30]
  413ce8:	mov    ebx,edx
  413cea:	mov    rsi,r8
  413ced:	xor    edx,edx
  413cef:	mov    r12,rcx
  413cf2:	mov    r8,r14
  413cf5:	mov    rcx,r13
  413cf8:	call   0x4138c0
  413cfd:	mov    ebp,DWORD PTR [rsi+0x10]
  413d00:	cmp    ebp,ebx
  413d02:	jge    0x413da9
  413d08:	test   ebp,ebp
  413d0a:	js     0x413da9
  413d10:	mov    eax,DWORD PTR [rsi+0xc]
  413d13:	cmp    ebp,eax
  413d15:	jge    0x413db6
  413d1b:	sub    eax,ebp
  413d1d:	test   eax,eax
  413d1f:	mov    DWORD PTR [rsi+0xc],eax
  413d22:	jle    0x413d30
  413d24:	test   BYTE PTR [rsi+0x9],0x4
  413d28:	je     0x413dc2
  413d2e:	xchg   ax,ax
  413d30:	test   ebp,ebp
  413d32:	jle    0x413d8d
  413d34:	add    r12,0x2
  413d38:	movzx  edx,WORD PTR [r12-0x2]
  413d3e:	mov    r8,r14
  413d41:	mov    rcx,r13
  413d44:	call   0x4138c0
  413d49:	test   eax,eax
  413d4b:	jle    0x413d8d
  413d4d:	sub    eax,0x1
  413d50:	mov    rbx,r13
  413d53:	lea    rdi,[r13+rax*1+0x1]
  413d58:	nop    DWORD PTR [rax+rax*1+0x0]
  413d60:	add    rbx,0x1
  413d64:	movsx  ecx,BYTE PTR [rbx-0x1]
  413d68:	mov    rdx,rsi
  413d6b:	call   0x413c70
  413d70:	cmp    rbx,rdi
  413d73:	jne    0x413d60
  413d75:	sub    ebp,0x1
  413d78:	jmp    0x413d30
  413d7a:	nop    WORD PTR [rax+rax*1+0x0]
  413d80:	mov    rdx,rsi
  413d83:	mov    ecx,0x20
  413d88:	call   0x413c70
  413d8d:	mov    eax,DWORD PTR [rsi+0xc]
  413d90:	lea    edx,[rax-0x1]
  413d93:	test   eax,eax
  413d95:	mov    DWORD PTR [rsi+0xc],edx
  413d98:	jg     0x413d80
  413d9a:	add    rsp,0x40
  413d9e:	pop    rbx
  413d9f:	pop    rsi
  413da0:	pop    rdi
  413da1:	pop    rbp
  413da2:	pop    r12
  413da4:	pop    r13
  413da6:	pop    r14
  413da8:	ret    
  413da9:	mov    eax,DWORD PTR [rsi+0xc]
  413dac:	mov    ebp,ebx
  413dae:	cmp    ebp,eax
  413db0:	jl     0x413d1b
  413db6:	mov    DWORD PTR [rsi+0xc],0xffffffff
  413dbd:	jmp    0x413d30
  413dc2:	sub    eax,0x1
  413dc5:	mov    DWORD PTR [rsi+0xc],eax
  413dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  413dd0:	mov    rdx,rsi
  413dd3:	mov    ecx,0x20
  413dd8:	call   0x413c70
  413ddd:	mov    eax,DWORD PTR [rsi+0xc]
  413de0:	lea    edx,[rax-0x1]
  413de3:	test   eax,eax
  413de5:	mov    DWORD PTR [rsi+0xc],edx
  413de8:	jne    0x413dd0
  413dea:	jmp    0x413d30
  413def:	nop
  413df0:	push   rdi
  413df1:	push   rsi
  413df2:	push   rbx
  413df3:	sub    rsp,0x20
  413df7:	mov    edi,DWORD PTR [r8+0x10]
  413dfb:	mov    rsi,rcx
  413dfe:	mov    rbx,r8
  413e01:	cmp    edi,edx
  413e03:	jge    0x413e80
  413e05:	test   edi,edi
  413e07:	js     0x413e80
  413e09:	mov    eax,DWORD PTR [rbx+0xc]
  413e0c:	cmp    edi,eax
  413e0e:	jge    0x413e89
  413e10:	sub    eax,edi
  413e12:	test   eax,eax
  413e14:	mov    DWORD PTR [rbx+0xc],eax
  413e17:	jle    0x413ee2
  413e1d:	test   BYTE PTR [rbx+0x9],0x4
  413e21:	jne    0x413eb0
  413e27:	sub    eax,0x1
  413e2a:	mov    DWORD PTR [rbx+0xc],eax
  413e2d:	nop    DWORD PTR [rax]
  413e30:	mov    rdx,rbx
  413e33:	mov    ecx,0x20
  413e38:	call   0x413c70
  413e3d:	mov    eax,DWORD PTR [rbx+0xc]
  413e40:	mov    edx,eax
  413e42:	sub    eax,0x1
  413e45:	test   edx,edx
  413e47:	mov    DWORD PTR [rbx+0xc],eax
  413e4a:	jne    0x413e30
  413e4c:	test   edi,edi
  413e4e:	lea    edx,[rdi-0x1]
  413e51:	je     0x413ed0
  413e53:	lea    rdi,[rsi+rdx*1+0x1]
  413e58:	nop    DWORD PTR [rax+rax*1+0x0]
  413e60:	add    rsi,0x1
  413e64:	movsx  ecx,BYTE PTR [rsi-0x1]
  413e68:	mov    rdx,rbx
  413e6b:	call   0x413c70
  413e70:	cmp    rsi,rdi
  413e73:	jne    0x413e60
  413e75:	jmp    0x413ecd
  413e77:	nop    WORD PTR [rax+rax*1+0x0]
  413e80:	mov    eax,DWORD PTR [rbx+0xc]
  413e83:	mov    edi,edx
  413e85:	cmp    edi,eax
  413e87:	jl     0x413e10
  413e89:	test   edi,edi
  413e8b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  413e92:	lea    edx,[rdi-0x1]
  413e95:	jne    0x413e53
  413e97:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  413e9e:	add    rsp,0x20
  413ea2:	pop    rbx
  413ea3:	pop    rsi
  413ea4:	pop    rdi
  413ea5:	ret    
  413ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413eb0:	test   edi,edi
  413eb2:	lea    edx,[rdi-0x1]
  413eb5:	jne    0x413e53
  413eb7:	sub    eax,0x1
  413eba:	mov    DWORD PTR [rbx+0xc],eax
  413ebd:	nop    DWORD PTR [rax]
  413ec0:	mov    rdx,rbx
  413ec3:	mov    ecx,0x20
  413ec8:	call   0x413c70
  413ecd:	mov    eax,DWORD PTR [rbx+0xc]
  413ed0:	lea    edx,[rax-0x1]
  413ed3:	test   eax,eax
  413ed5:	mov    DWORD PTR [rbx+0xc],edx
  413ed8:	jg     0x413ec0
  413eda:	add    rsp,0x20
  413ede:	pop    rbx
  413edf:	pop    rsi
  413ee0:	pop    rdi
  413ee1:	ret    
  413ee2:	test   edi,edi
  413ee4:	lea    edx,[rdi-0x1]
  413ee7:	jne    0x413e53
  413eed:	sub    eax,0x1
  413ef0:	mov    DWORD PTR [rbx+0xc],eax
  413ef3:	jmp    0x413e9e
  413ef5:	nop
  413ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f00:	sub    rsp,0x38
  413f04:	test   ecx,ecx
  413f06:	mov    DWORD PTR [r8+0x10],0xffffffff
  413f0e:	je     0x413f54
  413f10:	lea    rcx,[rsp+0x20]
  413f15:	mov    r11d,DWORD PTR [r8+0x8]
  413f19:	mov    BYTE PTR [rsp+0x20],0x2d
  413f1e:	lea    r10,[rcx+0x1]
  413f22:	and    r11d,0x20
  413f26:	xor    r9d,r9d
  413f29:	movzx  eax,BYTE PTR [rdx+r9*1]
  413f2e:	and    eax,0xffffffdf
  413f31:	or     eax,r11d
  413f34:	mov    BYTE PTR [r10+r9*1],al
  413f38:	add    r9,0x1
  413f3c:	cmp    r9,0x3
  413f40:	jne    0x413f29
  413f42:	lea    rdx,[r10+0x3]
  413f46:	sub    rdx,rcx
  413f49:	call   0x413df0
  413f4e:	nop
  413f4f:	add    rsp,0x38
  413f53:	ret    
  413f54:	mov    r11d,DWORD PTR [r8+0x8]
  413f58:	test   r11d,0x100
  413f5f:	je     0x413f71
  413f61:	lea    rcx,[rsp+0x20]
  413f66:	mov    BYTE PTR [rsp+0x20],0x2b
  413f6b:	lea    r10,[rcx+0x1]
  413f6f:	jmp    0x413f22
  413f71:	test   r11b,0x40
  413f75:	je     0x413f90
  413f77:	lea    rcx,[rsp+0x20]
  413f7c:	mov    BYTE PTR [rsp+0x20],0x20
  413f81:	lea    r10,[rcx+0x1]
  413f85:	jmp    0x413f22
  413f87:	nop    WORD PTR [rax+rax*1+0x0]
  413f90:	lea    rcx,[rsp+0x20]
  413f95:	mov    r10,rcx
  413f98:	jmp    0x413f22
  413f9a:	nop    WORD PTR [rax+rax*1+0x0]
  413fa0:	push   rbp
  413fa1:	push   r12
  413fa3:	push   rdi
  413fa4:	push   rsi
  413fa5:	push   rbx
  413fa6:	mov    rbp,rsp
  413fa9:	sub    rsp,0x30
  413fad:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  413fb1:	mov    rsi,rcx
  413fb4:	je     0x414050
  413fba:	movzx  edx,WORD PTR [rcx+0x18]
  413fbe:	test   dx,dx
  413fc1:	je     0x414022
  413fc3:	movsxd rax,DWORD PTR [rsi+0x14]
  413fc7:	mov    r12,rsp
  413fca:	add    rax,0xf
  413fce:	and    rax,0xfffffffffffffff0
  413fd2:	call   0x413020
  413fd7:	sub    rsp,rax
  413fda:	lea    r8,[rbp-0x4]
  413fde:	mov    DWORD PTR [rbp-0x4],0x0
  413fe5:	lea    rbx,[rsp+0x20]
  413fea:	mov    rcx,rbx
  413fed:	call   0x4138c0
  413ff2:	test   eax,eax
  413ff4:	jle    0x414040
  413ff6:	sub    eax,0x1
  413ff9:	lea    rdi,[rbx+rax*1+0x1]
  413ffe:	xchg   ax,ax
  414000:	add    rbx,0x1
  414004:	movsx  ecx,BYTE PTR [rbx-0x1]
  414008:	mov    rdx,rsi
  41400b:	call   0x413c70
  414010:	cmp    rbx,rdi
  414013:	jne    0x414000
  414015:	mov    rsp,r12
  414018:	mov    rsp,rbp
  41401b:	pop    rbx
  41401c:	pop    rsi
  41401d:	pop    rdi
  41401e:	pop    r12
  414020:	pop    rbp
  414021:	ret    
  414022:	mov    rdx,rsi
  414025:	mov    ecx,0x2e
  41402a:	call   0x413c70
  41402f:	nop
  414030:	mov    rsp,rbp
  414033:	pop    rbx
  414034:	pop    rsi
  414035:	pop    rdi
  414036:	pop    r12
  414038:	pop    rbp
  414039:	ret    
  41403a:	nop    WORD PTR [rax+rax*1+0x0]
  414040:	mov    rdx,rsi
  414043:	mov    ecx,0x2e
  414048:	call   0x413c70
  41404d:	jmp    0x414015
  41404f:	nop
  414050:	mov    DWORD PTR [rbp-0x4],0x0
  414057:	call   0x4185b0
  41405c:	mov    rdx,QWORD PTR [rax]
  41405f:	lea    rcx,[rbp-0x6]
  414063:	lea    r9,[rbp-0x4]
  414067:	mov    r8d,0x10
  41406d:	call   0x418280
  414072:	test   eax,eax
  414074:	jle    0x414086
  414076:	movzx  edx,WORD PTR [rbp-0x6]
  41407a:	mov    WORD PTR [rsi+0x18],dx
  41407e:	mov    DWORD PTR [rsi+0x14],eax
  414081:	jmp    0x413fbe
  414086:	movzx  edx,WORD PTR [rsi+0x18]
  41408a:	jmp    0x41407e
  41408c:	nop    DWORD PTR [rax+0x0]
  414090:	push   r12
  414092:	push   rbp
  414093:	push   rdi
  414094:	push   rsi
  414095:	push   rbx
  414096:	sub    rsp,0x20
  41409a:	mov    esi,r8d
  41409d:	mov    ebp,ecx
  41409f:	mov    rdi,rdx
  4140a2:	test   esi,esi
  4140a4:	mov    rbx,r9
  4140a7:	mov    r8d,DWORD PTR [r9+0xc]
  4140ab:	jle    0x414282
  4140b1:	cmp    esi,r8d
  4140b4:	jg     0x4141f0
  4140ba:	sub    r8d,esi
  4140bd:	mov    DWORD PTR [r9+0xc],r8d
  4140c1:	test   r8d,r8d
  4140c4:	js     0x4141f0
  4140ca:	mov    eax,DWORD PTR [rbx+0x10]
  4140cd:	cmp    eax,r8d
  4140d0:	jge    0x4141f0
  4140d6:	sub    r8d,eax
  4140d9:	test   r8d,r8d
  4140dc:	mov    DWORD PTR [rbx+0xc],r8d
  4140e0:	jle    0x4141fd
  4140e6:	test   eax,eax
  4140e8:	jle    0x414335
  4140ee:	sub    r8d,0x1
  4140f2:	test   esi,esi
  4140f4:	mov    DWORD PTR [rbx+0xc],r8d
  4140f8:	jle    0x414104
  4140fa:	test   BYTE PTR [rbx+0x9],0x10
  4140fe:	jne    0x41420f
  414104:	test   r8d,r8d
  414107:	jle    0x41414d
  414109:	test   ebp,ebp
  41410b:	jne    0x41411b
  41410d:	mov    eax,DWORD PTR [rbx+0x8]
  414110:	test   eax,0x1c0
  414115:	je     0x414315
  41411b:	sub    r8d,0x1
  41411f:	test   r8d,r8d
  414122:	mov    DWORD PTR [rbx+0xc],r8d
  414126:	jle    0x41414d
  414128:	test   DWORD PTR [rbx+0x8],0x600
  41412f:	jne    0x41414d
  414131:	jmp    0x414140
  414133:	mov    rdx,rbx
  414136:	mov    ecx,0x20
  41413b:	call   0x413c70
  414140:	mov    eax,DWORD PTR [rbx+0xc]
  414143:	lea    edx,[rax-0x1]
  414146:	test   eax,eax
  414148:	mov    DWORD PTR [rbx+0xc],edx
  41414b:	jg     0x414133
  41414d:	test   ebp,ebp
  41414f:	jne    0x414270
  414155:	mov    eax,DWORD PTR [rbx+0x8]
  414158:	test   ah,0x1
  41415b:	jne    0x4142a0
  414161:	test   al,0x40
  414163:	jne    0x414323
  414169:	mov    edx,DWORD PTR [rbx+0xc]
  41416c:	test   edx,edx
  41416e:	jle    0x414183
  414170:	mov    eax,DWORD PTR [rbx+0x8]
  414173:	and    eax,0x600
  414178:	cmp    eax,0x200
  41417d:	je     0x4142b2
  414183:	test   esi,esi
  414185:	jle    0x4142e2
  41418b:	lea    r12,[rbx+0x20]
  41418f:	mov    ebp,0x55555556
  414194:	movzx  eax,BYTE PTR [rdi]
  414197:	mov    ecx,0x30
  41419c:	test   al,al
  41419e:	je     0x4141a7
  4141a0:	add    rdi,0x1
  4141a4:	movsx  ecx,al
  4141a7:	mov    rdx,rbx
  4141aa:	call   0x413c70
  4141af:	sub    esi,0x1
  4141b2:	je     0x4143d0
  4141b8:	test   BYTE PTR [rbx+0x9],0x10
  4141bc:	je     0x414194
  4141be:	cmp    WORD PTR [rbx+0x20],0x0
  4141c3:	je     0x414194
  4141c5:	mov    eax,esi
  4141c7:	imul   ebp
  4141c9:	mov    eax,esi
  4141cb:	sar    eax,0x1f
  4141ce:	sub    edx,eax
  4141d0:	lea    eax,[rdx+rdx*2]
  4141d3:	cmp    esi,eax
  4141d5:	jne    0x414194
  4141d7:	mov    r8,rbx
  4141da:	mov    edx,0x1
  4141df:	mov    rcx,r12
  4141e2:	call   0x413cd0
  4141e7:	jmp    0x414194
  4141e9:	nop    DWORD PTR [rax+0x0]
  4141f0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4141f7:	mov    r8d,0xffffffff
  4141fd:	test   esi,esi
  4141ff:	jle    0x41414d
  414205:	test   BYTE PTR [rbx+0x9],0x10
  414209:	je     0x41414d
  41420f:	cmp    WORD PTR [rbx+0x20],0x0
  414214:	je     0x414104
  41421a:	lea    ecx,[rsi+0x2]
  41421d:	mov    edx,0x55555556
  414222:	mov    eax,ecx
  414224:	sar    ecx,0x1f
  414227:	imul   edx
  414229:	sub    edx,ecx
  41422b:	cmp    edx,0x1
  41422e:	jle    0x414104
  414234:	test   r8d,r8d
  414237:	jle    0x41414d
  41423d:	mov    eax,r8d
  414240:	sub    eax,edx
  414242:	add    eax,0x1
  414245:	jmp    0x414259
  414247:	nop    WORD PTR [rax+rax*1+0x0]
  414250:	test   r8d,r8d
  414253:	je     0x4143c4
  414259:	sub    r8d,0x1
  41425d:	cmp    r8d,eax
  414260:	jne    0x414250
  414262:	mov    DWORD PTR [rbx+0xc],r8d
  414266:	jmp    0x414104
  41426b:	nop    DWORD PTR [rax+rax*1+0x0]
  414270:	mov    rdx,rbx
  414273:	mov    ecx,0x2d
  414278:	call   0x413c70
  41427d:	jmp    0x414169
  414282:	test   r8d,r8d
  414285:	jle    0x4140c1
  41428b:	sub    r8d,0x1
  41428f:	mov    DWORD PTR [r9+0xc],r8d
  414293:	jmp    0x4140ca
  414298:	nop    DWORD PTR [rax+rax*1+0x0]
  4142a0:	mov    rdx,rbx
  4142a3:	mov    ecx,0x2b
  4142a8:	call   0x413c70
  4142ad:	jmp    0x414169
  4142b2:	sub    edx,0x1
  4142b5:	mov    DWORD PTR [rbx+0xc],edx
  4142b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4142c0:	mov    rdx,rbx
  4142c3:	mov    ecx,0x30
  4142c8:	call   0x413c70
  4142cd:	mov    eax,DWORD PTR [rbx+0xc]
  4142d0:	lea    edx,[rax-0x1]
  4142d3:	test   eax,eax
  4142d5:	mov    DWORD PTR [rbx+0xc],edx
  4142d8:	jg     0x4142c0
  4142da:	test   esi,esi
  4142dc:	jg     0x41418b
  4142e2:	mov    rdx,rbx
  4142e5:	mov    ecx,0x30
  4142ea:	call   0x413c70
  4142ef:	mov    eax,DWORD PTR [rbx+0x10]
  4142f2:	test   eax,eax
  4142f4:	jg     0x414362
  4142f6:	test   BYTE PTR [rbx+0x9],0x8
  4142fa:	jne    0x414362
  4142fc:	test   esi,esi
  4142fe:	jne    0x4143a6
  414304:	sub    eax,0x1
  414307:	mov    DWORD PTR [rbx+0x10],eax
  41430a:	add    rsp,0x20
  41430e:	pop    rbx
  41430f:	pop    rsi
  414310:	pop    rdi
  414311:	pop    rbp
  414312:	pop    r12
  414314:	ret    
  414315:	test   ah,0x6
  414318:	je     0x414140
  41431e:	jmp    0x414158
  414323:	mov    rdx,rbx
  414326:	mov    ecx,0x20
  41432b:	call   0x413c70
  414330:	jmp    0x414169
  414335:	mov    eax,DWORD PTR [rbx+0x8]
  414338:	test   ah,0x8
  41433b:	jne    0x4140ee
  414341:	test   esi,esi
  414343:	jle    0x414109
  414349:	test   ah,0x10
  41434c:	je     0x414109
  414352:	cmp    WORD PTR [rbx+0x20],0x0
  414357:	jne    0x41421a
  41435d:	jmp    0x414109
  414362:	mov    rcx,rbx
  414365:	call   0x413fa0
  41436a:	test   esi,esi
  41436c:	je     0x41438b
  41436e:	jmp    0x4143a3
  414370:	movzx  eax,BYTE PTR [rdi]
  414373:	mov    ecx,0x30
  414378:	test   al,al
  41437a:	je     0x414383
  41437c:	add    rdi,0x1
  414380:	movsx  ecx,al
  414383:	mov    rdx,rbx
  414386:	call   0x413c70
  41438b:	mov    eax,DWORD PTR [rbx+0x10]
  41438e:	lea    edx,[rax-0x1]
  414391:	test   eax,eax
  414393:	mov    DWORD PTR [rbx+0x10],edx
  414396:	jg     0x414370
  414398:	add    rsp,0x20
  41439c:	pop    rbx
  41439d:	pop    rsi
  41439e:	pop    rdi
  41439f:	pop    rbp
  4143a0:	pop    r12
  4143a2:	ret    
  4143a3:	mov    eax,DWORD PTR [rbx+0x10]
  4143a6:	add    eax,esi
  4143a8:	mov    DWORD PTR [rbx+0x10],eax
  4143ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4143b0:	mov    rdx,rbx
  4143b3:	mov    ecx,0x30
  4143b8:	call   0x413c70
  4143bd:	add    esi,0x1
  4143c0:	jne    0x4143b0
  4143c2:	jmp    0x41438b
  4143c4:	mov    DWORD PTR [rbx+0xc],0x0
  4143cb:	jmp    0x41414d
  4143d0:	mov    eax,DWORD PTR [rbx+0x10]
  4143d3:	test   eax,eax
  4143d5:	jle    0x4143e1
  4143d7:	mov    rcx,rbx
  4143da:	call   0x413fa0
  4143df:	jmp    0x41438b
  4143e1:	test   BYTE PTR [rbx+0x9],0x8
  4143e5:	jne    0x4143d7
  4143e7:	jmp    0x414304
  4143ec:	nop    DWORD PTR [rax+0x0]
  4143f0:	push   rsi
  4143f1:	push   rbx
  4143f2:	sub    rsp,0x68
  4143f6:	mov    r8d,DWORD PTR [rdx+0x10]
  4143fa:	fld    TBYTE PTR [rcx]
  4143fc:	mov    rbx,rdx
  4143ff:	test   r8d,r8d
  414402:	js     0x4144a0
  414408:	lea    rdx,[rsp+0x30]
  41440d:	lea    r9,[rsp+0x4c]
  414412:	mov    ecx,0x3
  414417:	fstp   TBYTE PTR [rsp+0x50]
  41441b:	mov    rax,QWORD PTR [rsp+0x50]
  414420:	mov    QWORD PTR [rsp+0x30],rax
  414425:	mov    rax,QWORD PTR [rsp+0x58]
  41442a:	mov    QWORD PTR [rsp+0x38],rax
  41442f:	lea    rax,[rsp+0x48]
  414434:	mov    QWORD PTR [rsp+0x20],rax
  414439:	call   0x413b70
  41443e:	mov    r8d,DWORD PTR [rsp+0x4c]
  414443:	mov    rsi,rax
  414446:	cmp    r8d,0xffff8000
  41444d:	je     0x4144b2
  41444f:	mov    ecx,DWORD PTR [rsp+0x48]
  414453:	mov    rdx,rax
  414456:	mov    r9,rbx
  414459:	call   0x414090
  41445e:	mov    eax,DWORD PTR [rbx+0xc]
  414461:	lea    edx,[rax-0x1]
  414464:	test   eax,eax
  414466:	mov    DWORD PTR [rbx+0xc],edx
  414469:	jle    0x41448e
  41446b:	nop    DWORD PTR [rax+rax*1+0x0]
  414470:	mov    rdx,rbx
  414473:	mov    ecx,0x20
  414478:	call   0x413c70
  41447d:	mov    r8d,DWORD PTR [rbx+0xc]
  414481:	lea    r9d,[r8-0x1]
  414485:	test   r8d,r8d
  414488:	mov    DWORD PTR [rbx+0xc],r9d
  41448c:	jg     0x414470
  41448e:	mov    rcx,rsi
  414491:	call   0x415e80
  414496:	nop
  414497:	add    rsp,0x68
  41449b:	pop    rbx
  41449c:	pop    rsi
  41449d:	ret    
  41449e:	xchg   ax,ax
  4144a0:	mov    DWORD PTR [rdx+0x10],0x6
  4144a7:	mov    r8d,0x6
  4144ad:	jmp    0x414408
  4144b2:	mov    ecx,DWORD PTR [rsp+0x48]
  4144b6:	mov    r8,rbx
  4144b9:	mov    rdx,rax
  4144bc:	call   0x413f00
  4144c1:	mov    rcx,rsi
  4144c4:	call   0x415e80
  4144c9:	nop
  4144ca:	add    rsp,0x68
  4144ce:	pop    rbx
  4144cf:	pop    rsi
  4144d0:	ret    
  4144d1:	nop    DWORD PTR [rax+rax*1+0x0]
  4144d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4144e0:	push   rbp
  4144e1:	push   r13
  4144e3:	push   r12
  4144e5:	push   rdi
  4144e6:	push   rsi
  4144e7:	push   rbx
  4144e8:	sub    rsp,0x28
  4144ec:	lea    rbp,[rsp+0x80]
  4144f4:	mov    ebx,DWORD PTR [rdx+0x10]
  4144f7:	mov    r11d,DWORD PTR [rdx+0x8]
  4144fb:	mov    r8d,0x0
  414501:	mov    rsi,rdx
  414504:	test   ebx,ebx
  414506:	cmovns r8d,ebx
  41450a:	add    r8d,0x17
  41450e:	test   r11d,0x1000
  414515:	je     0x414522
  414517:	cmp    WORD PTR [rdx+0x20],0x0
  41451c:	jne    0x414712
  414522:	movsxd r13,DWORD PTR [rsi+0xc]
  414526:	movsxd rax,r8d
  414529:	cmp    r8d,r13d
  41452c:	cmovl  rax,r13
  414530:	add    rax,0x1e
  414534:	and    rax,0xfffffffffffffff0
  414538:	call   0x413020
  41453d:	sub    rsp,rax
  414540:	test   r11b,0x80
  414544:	lea    r12,[rsp+0x20]
  414549:	je     0x41455c
  41454b:	test   rcx,rcx
  41454e:	js     0x4147a0
  414554:	and    r11b,0x7f
  414558:	mov    DWORD PTR [rsi+0x8],r11d
  41455c:	test   rcx,rcx
  41455f:	je     0x4147a8
  414565:	mov    r10d,r11d
  414568:	mov    r8,r12
  41456b:	movabs r9,0xcccccccccccccccd
  414575:	and    r10d,0x1000
  41457c:	jmp    0x4145b3
  41457e:	xchg   ax,ax
  414580:	cmp    r12,rdi
  414583:	je     0x4145b0
  414585:	test   r10d,r10d
  414588:	je     0x4145b0
  41458a:	cmp    WORD PTR [rsi+0x20],0x0
  41458f:	je     0x4145b0
  414591:	mov    rax,rdi
  414594:	sub    rax,r12
  414597:	cqo    
  414599:	shr    rdx,0x3e
  41459d:	add    rax,rdx
  4145a0:	and    eax,0x3
  4145a3:	sub    rax,rdx
  4145a6:	cmp    rax,0x3
  4145aa:	je     0x4146f0
  4145b0:	mov    r8,rdi
  4145b3:	mov    rax,rcx
  4145b6:	lea    rdi,[r8+0x1]
  4145ba:	mul    r9
  4145bd:	shr    rdx,0x3
  4145c1:	lea    rax,[rdx+rdx*4]
  4145c5:	add    rax,rax
  4145c8:	sub    rcx,rax
  4145cb:	add    ecx,0x30
  4145ce:	test   rdx,rdx
  4145d1:	mov    BYTE PTR [r8],cl
  4145d4:	mov    rcx,rdx
  4145d7:	jne    0x414580
  4145d9:	test   ebx,ebx
  4145db:	jle    0x414615
  4145dd:	mov    rax,r12
  4145e0:	sub    rax,rdi
  4145e3:	add    eax,ebx
  4145e5:	test   eax,eax
  4145e7:	jle    0x414615
  4145e9:	sub    eax,0x1
  4145ec:	mov    rdx,rax
  4145ef:	lea    rcx,[rdi+rax*1+0x1]
  4145f4:	mov    rax,rdi
  4145f7:	nop    WORD PTR [rax+rax*1+0x0]
  414600:	add    rax,0x1
  414604:	mov    BYTE PTR [rax-0x1],0x30
  414608:	cmp    rax,rcx
  41460b:	jne    0x414600
  41460d:	movsxd rax,edx
  414610:	lea    rdi,[rdi+rax*1+0x1]
  414615:	cmp    r12,rdi
  414618:	jne    0x414625
  41461a:	test   ebx,ebx
  41461c:	je     0x414625
  41461e:	mov    BYTE PTR [rdi],0x30
  414621:	add    rdi,0x1
  414625:	test   r13d,r13d
  414628:	jle    0x41468e
  41462a:	mov    rax,r12
  41462d:	sub    rax,rdi
  414630:	add    r13d,eax
  414633:	test   r13d,r13d
  414636:	mov    DWORD PTR [rsi+0xc],r13d
  41463a:	jle    0x41468e
  41463c:	test   r11d,0x1c0
  414643:	je     0x41464d
  414645:	sub    r13d,0x1
  414649:	mov    DWORD PTR [rsi+0xc],r13d
  41464d:	test   ebx,ebx
  41464f:	js     0x414750
  414655:	test   r11d,0x400
  41465c:	jne    0x41468e
  41465e:	mov    eax,DWORD PTR [rsi+0xc]
  414661:	lea    edx,[rax-0x1]
  414664:	test   eax,eax
  414666:	mov    DWORD PTR [rsi+0xc],edx
  414669:	jle    0x41468e
  41466b:	nop    DWORD PTR [rax+rax*1+0x0]
  414670:	mov    rdx,rsi
  414673:	mov    ecx,0x20
  414678:	call   0x413c70
  41467d:	mov    eax,DWORD PTR [rsi+0xc]
  414680:	lea    edx,[rax-0x1]
  414683:	test   eax,eax
  414685:	mov    DWORD PTR [rsi+0xc],edx
  414688:	jg     0x414670
  41468a:	mov    r11d,DWORD PTR [rsi+0x8]
  41468e:	test   r11b,0x80
  414692:	je     0x414700
  414694:	lea    rbx,[rdi+0x1]
  414698:	mov    BYTE PTR [rdi],0x2d
  41469b:	cmp    r12,rbx
  41469e:	jae    0x4146ce
  4146a0:	sub    rbx,0x1
  4146a4:	movsx  ecx,BYTE PTR [rbx]
  4146a7:	mov    rdx,rsi
  4146aa:	call   0x413c70
  4146af:	cmp    rbx,r12
  4146b2:	jne    0x4146a0
  4146b4:	mov    eax,DWORD PTR [rsi+0xc]
  4146b7:	lea    edx,[rax-0x1]
  4146ba:	test   eax,eax
  4146bc:	mov    DWORD PTR [rsi+0xc],edx
  4146bf:	jle    0x4146db
  4146c1:	mov    rdx,rsi
  4146c4:	mov    ecx,0x20
  4146c9:	call   0x413c70
  4146ce:	mov    eax,DWORD PTR [rsi+0xc]
  4146d1:	lea    edx,[rax-0x1]
  4146d4:	test   eax,eax
  4146d6:	mov    DWORD PTR [rsi+0xc],edx
  4146d9:	jg     0x4146c1
  4146db:	lea    rsp,[rbp-0x58]
  4146df:	pop    rbx
  4146e0:	pop    rsi
  4146e1:	pop    rdi
  4146e2:	pop    r12
  4146e4:	pop    r13
  4146e6:	pop    rbp
  4146e7:	ret    
  4146e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4146f0:	lea    rdi,[r8+0x2]
  4146f4:	mov    BYTE PTR [r8+0x1],0x2c
  4146f9:	jmp    0x4145b0
  4146fe:	xchg   ax,ax
  414700:	test   r11d,0x100
  414707:	je     0x414730
  414709:	lea    rbx,[rdi+0x1]
  41470d:	mov    BYTE PTR [rdi],0x2b
  414710:	jmp    0x41469b
  414712:	mov    eax,r8d
  414715:	mov    edx,0x55555556
  41471a:	imul   edx
  41471c:	mov    eax,r8d
  41471f:	sar    eax,0x1f
  414722:	sub    edx,eax
  414724:	add    r8d,edx
  414727:	jmp    0x414522
  41472c:	nop    DWORD PTR [rax+0x0]
  414730:	and    r11d,0x40
  414734:	mov    rbx,rdi
  414737:	je     0x41469b
  41473d:	add    rbx,0x1
  414741:	mov    BYTE PTR [rdi],0x20
  414744:	jmp    0x41469b
  414749:	nop    DWORD PTR [rax+0x0]
  414750:	mov    eax,r11d
  414753:	and    eax,0x600
  414758:	cmp    eax,0x200
  41475d:	jne    0x414655
  414763:	mov    eax,DWORD PTR [rsi+0xc]
  414766:	lea    ecx,[rax-0x1]
  414769:	test   eax,eax
  41476b:	mov    DWORD PTR [rsi+0xc],ecx
  41476e:	jle    0x41468e
  414774:	lea    rdx,[rdi+rcx*1+0x1]
  414779:	mov    rax,rdi
  41477c:	nop    DWORD PTR [rax+0x0]
  414780:	add    rax,0x1
  414784:	mov    BYTE PTR [rax-0x1],0x30
  414788:	cmp    rax,rdx
  41478b:	jne    0x414780
  41478d:	lea    rdi,[rdi+rcx*1+0x1]
  414792:	mov    DWORD PTR [rsi+0xc],0xffffffff
  414799:	jmp    0x41468e
  41479e:	xchg   ax,ax
  4147a0:	neg    rcx
  4147a3:	jmp    0x41455c
  4147a8:	mov    rdi,r12
  4147ab:	jmp    0x4145d9
  4147b0:	push   rdi
  4147b1:	push   rsi
  4147b2:	push   rbx
  4147b3:	sub    rsp,0x20
  4147b7:	mov    rsi,r9
  4147ba:	lea    r9d,[r8-0x1]
  4147be:	mov    r8d,0x66666667
  4147c4:	mov    r10,rdx
  4147c7:	mov    eax,r9d
  4147ca:	movsxd rbx,r9d
  4147cd:	sar    r9d,0x1f
  4147d1:	imul   r8d
  4147d4:	sar    edx,0x2
  4147d7:	mov    r8d,edx
  4147da:	sub    r8d,r9d
  4147dd:	mov    r9d,0x1
  4147e3:	je     0x41480b
  4147e5:	mov    r11d,0x66666667
  4147eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4147f0:	mov    eax,r8d
  4147f3:	sar    r8d,0x1f
  4147f7:	add    r9d,0x1
  4147fb:	imul   r11d
  4147fe:	mov    eax,edx
  414800:	sar    eax,0x2
  414803:	sub    eax,r8d
  414806:	mov    r8d,eax
  414809:	jne    0x4147f0
  41480b:	mov    edi,DWORD PTR [rsi+0x2c]
  41480e:	mov    eax,DWORD PTR [rsi+0xc]
  414811:	cmp    r9d,edi
  414814:	cmovge edi,r9d
  414818:	lea    edx,[rdi+0x2]
  41481b:	cmp    eax,edx
  41481d:	jg     0x414872
  41481f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  414826:	mov    r9,rsi
  414829:	mov    rdx,r10
  41482c:	mov    r8d,0x1
  414832:	call   0x414090
  414837:	mov    ecx,DWORD PTR [rsi+0x8]
  41483a:	mov    eax,DWORD PTR [rsi+0x2c]
  41483d:	mov    rdx,rsi
  414840:	mov    DWORD PTR [rsi+0x10],eax
  414843:	mov    eax,ecx
  414845:	and    ecx,0x20
  414848:	or     eax,0x1c0
  41484d:	or     ecx,0x45
  414850:	mov    DWORD PTR [rsi+0x8],eax
  414853:	call   0x413c70
  414858:	lea    r9d,[rdi+0x1]
  41485c:	add    DWORD PTR [rsi+0xc],r9d
  414860:	mov    rdx,rsi
  414863:	mov    rcx,rbx
  414866:	add    rsp,0x20
  41486a:	pop    rbx
  41486b:	pop    rsi
  41486c:	pop    rdi
  41486d:	jmp    0x4144e0
  414872:	sub    eax,edx
  414874:	mov    DWORD PTR [rsi+0xc],eax
  414877:	jmp    0x414826
  414879:	nop    DWORD PTR [rax+0x0]
  414880:	push   rsi
  414881:	push   rbx
  414882:	sub    rsp,0x68
  414886:	mov    eax,DWORD PTR [rdx+0x10]
  414889:	fld    TBYTE PTR [rcx]
  41488b:	mov    rbx,rdx
  41488e:	test   eax,eax
  414890:	lea    r8d,[rax+0x1]
  414894:	js     0x414900
  414896:	lea    rdx,[rsp+0x30]
  41489b:	lea    r9,[rsp+0x4c]
  4148a0:	mov    ecx,0x2
  4148a5:	fstp   TBYTE PTR [rsp+0x50]
  4148a9:	mov    rax,QWORD PTR [rsp+0x50]
  4148ae:	mov    QWORD PTR [rsp+0x30],rax
  4148b3:	mov    rax,QWORD PTR [rsp+0x58]
  4148b8:	mov    QWORD PTR [rsp+0x38],rax
  4148bd:	lea    rax,[rsp+0x48]
  4148c2:	mov    QWORD PTR [rsp+0x20],rax
  4148c7:	call   0x413b70
  4148cc:	mov    r8d,DWORD PTR [rsp+0x4c]
  4148d1:	mov    rsi,rax
  4148d4:	cmp    r8d,0xffff8000
  4148db:	je     0x414910
  4148dd:	mov    ecx,DWORD PTR [rsp+0x48]
  4148e1:	mov    r9,rbx
  4148e4:	mov    rdx,rax
  4148e7:	call   0x4147b0
  4148ec:	mov    rcx,rsi
  4148ef:	call   0x415e80
  4148f4:	nop
  4148f5:	add    rsp,0x68
  4148f9:	pop    rbx
  4148fa:	pop    rsi
  4148fb:	ret    
  4148fc:	nop    DWORD PTR [rax+0x0]
  414900:	mov    DWORD PTR [rdx+0x10],0x6
  414907:	mov    r8d,0x7
  41490d:	jmp    0x414896
  41490f:	nop
  414910:	mov    ecx,DWORD PTR [rsp+0x48]
  414914:	mov    r8,rbx
  414917:	mov    rdx,rax
  41491a:	call   0x413f00
  41491f:	mov    rcx,rsi
  414922:	call   0x415e80
  414927:	nop
  414928:	add    rsp,0x68
  41492c:	pop    rbx
  41492d:	pop    rsi
  41492e:	ret    
  41492f:	nop
  414930:	push   rsi
  414931:	push   rbx
  414932:	sub    rsp,0x78
  414936:	mov    r8d,DWORD PTR [rdx+0x10]
  41493a:	fld    TBYTE PTR [rcx]
  41493c:	mov    rbx,rdx
  41493f:	test   r8d,r8d
  414942:	js     0x414a80
  414948:	je     0x414a60
  41494e:	lea    rdx,[rsp+0x40]
  414953:	lea    r9,[rsp+0x5c]
  414958:	mov    ecx,0x2
  41495d:	fstp   TBYTE PTR [rsp+0x60]
  414961:	mov    rax,QWORD PTR [rsp+0x60]
  414966:	mov    QWORD PTR [rsp+0x40],rax
  41496b:	mov    rax,QWORD PTR [rsp+0x68]
  414970:	mov    QWORD PTR [rsp+0x48],rax
  414975:	lea    rax,[rsp+0x58]
  41497a:	mov    QWORD PTR [rsp+0x20],rax
  41497f:	call   0x413b70
  414984:	mov    r8d,DWORD PTR [rsp+0x5c]
  414989:	mov    rsi,rax
  41498c:	cmp    r8d,0xffff8000
  414993:	je     0x414aa0
  414999:	cmp    r8d,0xfffffffd
  41499d:	jl     0x414a20
  4149a3:	mov    eax,DWORD PTR [rbx+0x10]
  4149a6:	cmp    r8d,eax
  4149a9:	jg     0x414a20
  4149ab:	test   BYTE PTR [rbx+0x9],0x8
  4149af:	jne    0x414a92
  4149b5:	mov    rcx,rsi
  4149b8:	mov    DWORD PTR [rsp+0x3c],r8d
  4149bd:	call   0x418538
  4149c2:	mov    r8d,DWORD PTR [rsp+0x3c]
  4149c7:	sub    eax,r8d
  4149ca:	test   eax,eax
  4149cc:	mov    DWORD PTR [rbx+0x10],eax
  4149cf:	js     0x414ab1
  4149d5:	mov    ecx,DWORD PTR [rsp+0x58]
  4149d9:	mov    rdx,rsi
  4149dc:	mov    r9,rbx
  4149df:	call   0x414090
  4149e4:	mov    eax,DWORD PTR [rbx+0xc]
  4149e7:	lea    edx,[rax-0x1]
  4149ea:	test   eax,eax
  4149ec:	mov    DWORD PTR [rbx+0xc],edx
  4149ef:	jle    0x414a4d
  4149f1:	mov    rdx,rbx
  4149f4:	mov    ecx,0x20
  4149f9:	call   0x413c70
  4149fe:	mov    r8d,DWORD PTR [rbx+0xc]
  414a02:	lea    r9d,[r8-0x1]
  414a06:	test   r8d,r8d
  414a09:	mov    DWORD PTR [rbx+0xc],r9d
  414a0d:	jg     0x4149f1
  414a0f:	mov    rcx,rsi
  414a12:	call   0x415e80
  414a17:	nop
  414a18:	add    rsp,0x78
  414a1c:	pop    rbx
  414a1d:	pop    rsi
  414a1e:	ret    
  414a1f:	nop
  414a20:	test   BYTE PTR [rbx+0x9],0x8
  414a24:	jne    0x414a72
  414a26:	mov    rcx,rsi
  414a29:	mov    DWORD PTR [rsp+0x3c],r8d
  414a2e:	call   0x418538
  414a33:	mov    r8d,DWORD PTR [rsp+0x3c]
  414a38:	sub    eax,0x1
  414a3b:	mov    DWORD PTR [rbx+0x10],eax
  414a3e:	mov    ecx,DWORD PTR [rsp+0x58]
  414a42:	mov    r9,rbx
  414a45:	mov    rdx,rsi
  414a48:	call   0x4147b0
  414a4d:	mov    rcx,rsi
  414a50:	call   0x415e80
  414a55:	nop
  414a56:	add    rsp,0x78
  414a5a:	pop    rbx
  414a5b:	pop    rsi
  414a5c:	ret    
  414a5d:	nop    DWORD PTR [rax]
  414a60:	mov    DWORD PTR [rdx+0x10],0x1
  414a67:	mov    r8d,0x1
  414a6d:	jmp    0x41494e
  414a72:	sub    DWORD PTR [rbx+0x10],0x1
  414a76:	jmp    0x414a3e
  414a78:	nop    DWORD PTR [rax+rax*1+0x0]
  414a80:	mov    DWORD PTR [rdx+0x10],0x6
  414a87:	mov    r8d,0x6
  414a8d:	jmp    0x41494e
  414a92:	sub    eax,r8d
  414a95:	mov    DWORD PTR [rbx+0x10],eax
  414a98:	jmp    0x4149d5
  414a9d:	nop    DWORD PTR [rax]
  414aa0:	mov    ecx,DWORD PTR [rsp+0x58]
  414aa4:	mov    r8,rbx
  414aa7:	mov    rdx,rax
  414aaa:	call   0x413f00
  414aaf:	jmp    0x414a4d
  414ab1:	mov    edx,DWORD PTR [rbx+0xc]
  414ab4:	test   edx,edx
  414ab6:	jle    0x4149d5
  414abc:	add    eax,edx
  414abe:	mov    DWORD PTR [rbx+0xc],eax
  414ac1:	jmp    0x4149d5
  414ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414ad0:	push   rbp
  414ad1:	push   r14
  414ad3:	push   r13
  414ad5:	push   r12
  414ad7:	push   rdi
  414ad8:	push   rsi
  414ad9:	push   rbx
  414ada:	mov    rbp,rsp
  414add:	sub    rsp,0x20
  414ae1:	mov    r10d,0x12
  414ae7:	mov    eax,0x18
  414aec:	cmp    ecx,0x6f
  414aef:	mov    rbx,r8
  414af2:	mov    r8d,DWORD PTR [r8+0x10]
  414af6:	mov    r11d,ecx
  414af9:	setne  cl
  414afc:	mov    edi,DWORD PTR [rbx+0x8]
  414aff:	movzx  ecx,cl
  414b02:	cmovne eax,r10d
  414b06:	mov    r10b,0x0
  414b09:	add    ecx,0x3
  414b0c:	test   r8d,r8d
  414b0f:	mov    r9,rdx
  414b12:	cmovns r10d,r8d
  414b16:	add    r10d,eax
  414b19:	test   edi,0x1000
  414b1f:	je     0x414b2c
  414b21:	cmp    WORD PTR [rbx+0x20],0x0
  414b26:	jne    0x414cf3
  414b2c:	movsxd r12,DWORD PTR [rbx+0xc]
  414b30:	movsxd rax,r10d
  414b33:	cmp    r10d,r12d
  414b36:	cmovl  rax,r12
  414b3a:	add    rax,0x1e
  414b3e:	and    rax,0xfffffffffffffff0
  414b42:	call   0x413020
  414b47:	xor    edx,edx
  414b49:	sub    rsp,rax
  414b4c:	cmp    r11d,0x6f
  414b50:	lea    rsi,[rsp+0x20]
  414b55:	setne  dl
  414b58:	test   r9,r9
  414b5b:	lea    edx,[rdx*8+0x7]
  414b62:	mov    r10,rsi
  414b65:	je     0x414e12
  414b6b:	mov    r13d,r11d
  414b6e:	and    r13d,0x20
  414b72:	jmp    0x414b80
  414b74:	shr    r9,cl
  414b77:	mov    BYTE PTR [r10-0x1],r14b
  414b7b:	test   r9,r9
  414b7e:	je     0x414ba5
  414b80:	mov    eax,edx
  414b82:	add    r10,0x1
  414b86:	and    eax,r9d
  414b89:	lea    r14d,[rax+0x30]
  414b8d:	cmp    r14b,0x39
  414b91:	jbe    0x414b74
  414b93:	add    eax,0x37
  414b96:	shr    r9,cl
  414b99:	or     eax,r13d
  414b9c:	test   r9,r9
  414b9f:	mov    BYTE PTR [r10-0x1],al
  414ba3:	jne    0x414b80
  414ba5:	cmp    rsi,r10
  414ba8:	je     0x414e12
  414bae:	test   r8d,r8d
  414bb1:	jle    0x414d72
  414bb7:	mov    rax,rsi
  414bba:	sub    rax,r10
  414bbd:	add    eax,r8d
  414bc0:	test   eax,eax
  414bc2:	jle    0x414d72
  414bc8:	sub    eax,0x1
  414bcb:	mov    rdx,rax
  414bce:	lea    rcx,[r10+rax*1+0x1]
  414bd3:	mov    rax,r10
  414bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414be0:	add    rax,0x1
  414be4:	mov    BYTE PTR [rax-0x1],0x30
  414be8:	cmp    rax,rcx
  414beb:	jne    0x414be0
  414bed:	movsxd rax,edx
  414bf0:	lea    r10,[r10+rax*1+0x1]
  414bf5:	cmp    rsi,r10
  414bf8:	jne    0x414c10
  414bfa:	test   r8d,r8d
  414bfd:	je     0x414c10
  414bff:	mov    BYTE PTR [r10],0x30
  414c03:	add    r10,0x1
  414c07:	nop    WORD PTR [rax+rax*1+0x0]
  414c10:	mov    rax,r10
  414c13:	sub    rax,rsi
  414c16:	cmp    r12d,eax
  414c19:	jle    0x414d40
  414c1f:	sub    r12d,eax
  414c22:	test   r12d,r12d
  414c25:	mov    DWORD PTR [rbx+0xc],r12d
  414c29:	jle    0x414e77
  414c2f:	cmp    r11d,0x6f
  414c33:	mov    edx,DWORD PTR [rbx+0x8]
  414c36:	je     0x414e00
  414c3c:	test   dh,0x8
  414c3f:	je     0x414dc0
  414c45:	lea    r13d,[r12-0x2]
  414c4a:	test   r13d,r13d
  414c4d:	jle    0x414c58
  414c4f:	test   r8d,r8d
  414c52:	js     0x414d0d
  414c58:	test   r13d,r13d
  414c5b:	mov    BYTE PTR [r10],r11b
  414c5e:	lea    rdi,[r10+0x2]
  414c62:	mov    BYTE PTR [r10+0x1],0x30
  414c67:	jle    0x414d68
  414c6d:	and    dh,0x4
  414c70:	jne    0x414d93
  414c76:	lea    r14d,[r13-0x1]
  414c7a:	mov    r12d,r14d
  414c7d:	nop    DWORD PTR [rax]
  414c80:	sub    r12d,0x1
  414c84:	mov    rdx,rbx
  414c87:	mov    ecx,0x20
  414c8c:	call   0x413c70
  414c91:	lea    eax,[r12+0x1]
  414c96:	test   eax,eax
  414c98:	jg     0x414c80
  414c9a:	test   r14d,r14d
  414c9d:	lea    r13d,[r14-0x1]
  414ca1:	mov    r12d,0x0
  414ca7:	cmovns r12d,r14d
  414cab:	sub    r13d,r12d
  414cae:	cmp    rsi,rdi
  414cb1:	jb     0x414da0
  414cb7:	nop    WORD PTR [rax+rax*1+0x0]
  414cc0:	test   r13d,r13d
  414cc3:	lea    esi,[r13-0x1]
  414cc7:	jle    0x414ce5
  414cc9:	nop    DWORD PTR [rax+0x0]
  414cd0:	mov    rdx,rbx
  414cd3:	mov    ecx,0x20
  414cd8:	sub    esi,0x1
  414cdb:	call   0x413c70
  414ce0:	cmp    esi,0xffffffff
  414ce3:	jne    0x414cd0
  414ce5:	mov    rsp,rbp
  414ce8:	pop    rbx
  414ce9:	pop    rsi
  414cea:	pop    rdi
  414ceb:	pop    r12
  414ced:	pop    r13
  414cef:	pop    r14
  414cf1:	pop    rbp
  414cf2:	ret    
  414cf3:	mov    eax,r10d
  414cf6:	mov    edx,0x55555556
  414cfb:	imul   edx
  414cfd:	mov    eax,r10d
  414d00:	sar    eax,0x1f
  414d03:	sub    edx,eax
  414d05:	add    r10d,edx
  414d08:	jmp    0x414b2c
  414d0d:	mov    eax,edx
  414d0f:	and    eax,0x600
  414d14:	cmp    eax,0x200
  414d19:	je     0x414e20
  414d1f:	mov    r12d,r13d
  414d22:	test   dh,0x8
  414d25:	mov    r13d,r12d
  414d28:	mov    rdi,r10
  414d2b:	je     0x414c6d
  414d31:	mov    r13d,r12d
  414d34:	jmp    0x414c58
  414d39:	nop    DWORD PTR [rax+0x0]
  414d40:	mov    DWORD PTR [rbx+0xc],0xffffffff
  414d47:	mov    r13d,0xffffffff
  414d4d:	cmp    r11d,0x6f
  414d51:	je     0x414d65
  414d53:	mov    edx,DWORD PTR [rbx+0x8]
  414d56:	mov    eax,edx
  414d58:	and    eax,0x800
  414d5d:	test   eax,eax
  414d5f:	jne    0x414c58
  414d65:	mov    rdi,r10
  414d68:	cmp    rsi,rdi
  414d6b:	jb     0x414da0
  414d6d:	jmp    0x414ce5
  414d72:	cmp    r11d,0x6f
  414d76:	jne    0x414bf5
  414d7c:	test   BYTE PTR [rbx+0x9],0x8
  414d80:	je     0x414bf5
  414d86:	mov    BYTE PTR [r10],0x30
  414d8a:	add    r10,0x1
  414d8e:	jmp    0x414bf5
  414d93:	cmp    rsi,rdi
  414d96:	jae    0x414e7f
  414d9c:	nop    DWORD PTR [rax+0x0]
  414da0:	sub    rdi,0x1
  414da4:	movsx  ecx,BYTE PTR [rdi]
  414da7:	mov    rdx,rbx
  414daa:	call   0x413c70
  414daf:	cmp    rsi,rdi
  414db2:	jb     0x414da0
  414db4:	jmp    0x414cc0
  414db9:	nop    DWORD PTR [rax+0x0]
  414dc0:	test   r8d,r8d
  414dc3:	jns    0x414d22
  414dc9:	mov    eax,edx
  414dcb:	and    eax,0x600
  414dd0:	cmp    eax,0x200
  414dd5:	je     0x414e6e
  414ddb:	cmp    r11d,0x6f
  414ddf:	jne    0x414d22
  414de5:	and    dh,0x4
  414de8:	jne    0x414e0a
  414dea:	lea    r14d,[r12-0x1]
  414def:	mov    rdi,r10
  414df2:	jmp    0x414c7a
  414df7:	nop    WORD PTR [rax+rax*1+0x0]
  414e00:	test   r8d,r8d
  414e03:	js     0x414dc9
  414e05:	and    dh,0x4
  414e08:	je     0x414dea
  414e0a:	mov    rdi,r10
  414e0d:	mov    r13d,r12d
  414e10:	jmp    0x414daf
  414e12:	and    edi,0xfffff7ff
  414e18:	mov    DWORD PTR [rbx+0x8],edi
  414e1b:	jmp    0x414bae
  414e20:	lea    r8d,[r12-0x3]
  414e25:	mov    r12d,r8d
  414e28:	mov    eax,r12d
  414e2b:	lea    rcx,[r10+rax*1+0x1]
  414e30:	mov    rax,r10
  414e33:	add    rax,0x1
  414e37:	mov    BYTE PTR [rax-0x1],0x30
  414e3b:	cmp    rax,rcx
  414e3e:	jne    0x414e33
  414e40:	movsxd rax,r8d
  414e43:	cmp    r11d,0x6f
  414e47:	lea    r10,[r10+rax*1+0x1]
  414e4c:	je     0x414e60
  414e4e:	mov    eax,edx
  414e50:	mov    r13d,0xffffffff
  414e56:	and    eax,0x800
  414e5b:	jmp    0x414d5d
  414e60:	mov    rdi,r10
  414e63:	mov    r13d,0xffffffff
  414e69:	jmp    0x414d68
  414e6e:	sub    r12d,0x1
  414e72:	mov    r8d,r12d
  414e75:	jmp    0x414e28
  414e77:	mov    r13d,r12d
  414e7a:	jmp    0x414d4d
  414e7f:	lea    esi,[r13-0x1]
  414e83:	jmp    0x414cd0
  414e88:	nop    DWORD PTR [rax+rax*1+0x0]
  414e90:	push   r13
  414e92:	push   r12
  414e94:	push   rbp
  414e95:	push   rdi
  414e96:	push   rsi
  414e97:	push   rbx
  414e98:	sub    rsp,0x68
  414e9c:	mov    r9,QWORD PTR [rcx]
  414e9f:	mov    r10d,DWORD PTR [rcx+0x8]
  414ea3:	mov    rbx,rdx
  414ea6:	mov    rax,r9
  414ea9:	mov    QWORD PTR [rsp+0x30],r9
  414eae:	mov    DWORD PTR [rsp+0x38],r10d
  414eb3:	shr    rax,0x20
  414eb7:	mov    r8,r10
  414eba:	and    eax,0x7fffffff
  414ebf:	or     r9d,eax
  414ec2:	lea    eax,[r10+r10*1]
  414ec6:	mov    edx,r9d
  414ec9:	neg    edx
  414ecb:	and    eax,0xfffe
  414ed0:	or     edx,r9d
  414ed3:	shr    edx,0x1f
  414ed6:	or     edx,eax
  414ed8:	mov    eax,0xfffe
  414edd:	sub    eax,edx
  414edf:	sar    eax,0x10
  414ee2:	test   eax,eax
  414ee4:	jne    0x4152d0
  414eea:	movzx  esi,WORD PTR [rsp+0x38]
  414eef:	mov    ecx,esi
  414ef1:	and    ecx,0x8000
  414ef7:	je     0x414f00
  414ef9:	or     DWORD PTR [rbx+0x8],0x80
  414f00:	and    r8w,0x7fff
  414f06:	cmp    r8w,0x7fff
  414f0c:	jne    0x414f30
  414f0e:	test   r9d,r9d
  414f11:	jne    0x414f30
  414f13:	lea    rdx,[rip+0xa4ea]        # 0x41f404
  414f1a:	mov    r8,rbx
  414f1d:	call   0x413f00
  414f22:	jmp    0x4152a5
  414f27:	nop    WORD PTR [rax+rax*1+0x0]
  414f30:	and    si,0x7fff
  414f35:	jne    0x415060
  414f3b:	mov    rax,QWORD PTR [rsp+0x30]
  414f40:	test   rax,rax
  414f43:	jne    0x4152ef
  414f49:	mov    r9d,DWORD PTR [rbx+0x10]
  414f4d:	cmp    r9d,0xe
  414f51:	jbe    0x41536c
  414f57:	xor    esi,esi
  414f59:	mov    r8d,DWORD PTR [rbx+0x8]
  414f5d:	lea    rbp,[rsp+0x40]
  414f62:	test   r9d,r9d
  414f65:	jle    0x41537c
  414f6b:	lea    rax,[rbp+0x1]
  414f6f:	mov    BYTE PTR [rsp+0x40],0x2e
  414f74:	mov    r10d,DWORD PTR [rbx+0xc]
  414f78:	lea    rdi,[rax+0x1]
  414f7c:	mov    BYTE PTR [rax],0x30
  414f7f:	mov    r12d,0x2
  414f85:	test   r10d,r10d
  414f88:	jg     0x41518c
  414f8e:	xchg   ax,ax
  414f90:	test   r8b,0x80
  414f94:	jne    0x415250
  414f9a:	test   r8d,0x100
  414fa1:	jne    0x415340
  414fa7:	and    r8d,0x40
  414fab:	jne    0x415352
  414fb1:	mov    rdx,rbx
  414fb4:	mov    ecx,0x30
  414fb9:	call   0x413c70
  414fbe:	mov    ecx,DWORD PTR [rbx+0x8]
  414fc1:	mov    rdx,rbx
  414fc4:	and    ecx,0x20
  414fc7:	or     ecx,0x58
  414fca:	call   0x413c70
  414fcf:	mov    eax,DWORD PTR [rbx+0xc]
  414fd2:	test   eax,eax
  414fd4:	jle    0x414ffc
  414fd6:	test   BYTE PTR [rbx+0x9],0x2
  414fda:	je     0x414ffc
  414fdc:	sub    eax,0x1
  414fdf:	mov    DWORD PTR [rbx+0xc],eax
  414fe2:	mov    rdx,rbx
  414fe5:	mov    ecx,0x30
  414fea:	call   0x413c70
  414fef:	mov    eax,DWORD PTR [rbx+0xc]
  414ff2:	lea    edx,[rax-0x1]
  414ff5:	test   eax,eax
  414ff7:	mov    DWORD PTR [rbx+0xc],edx
  414ffa:	jg     0x414fe2
  414ffc:	cmp    rdi,rbp
  414fff:	lea    r13,[rsp+0x2e]
  415004:	ja     0x415039
  415006:	jmp    0x41526f
  41500b:	nop    DWORD PTR [rax+rax*1+0x0]
  415010:	movzx  eax,WORD PTR [rbx+0x20]
  415014:	test   ax,ax
  415017:	mov    WORD PTR [rsp+0x2e],ax
  41501c:	je     0x415030
  41501e:	mov    r8,rbx
  415021:	mov    edx,0x1
  415026:	mov    rcx,r13
  415029:	call   0x413cd0
  41502e:	xchg   ax,ax
  415030:	cmp    rdi,rbp
  415033:	je     0x41526f
  415039:	sub    rdi,0x1
  41503d:	movsx  ecx,BYTE PTR [rdi]
  415040:	cmp    ecx,0x2e
  415043:	je     0x4152b2
  415049:	cmp    ecx,0x2c
  41504c:	je     0x415010
  41504e:	mov    rdx,rbx
  415051:	call   0x413c70
  415056:	jmp    0x415030
  415058:	nop    DWORD PTR [rax+rax*1+0x0]
  415060:	mov    r9d,DWORD PTR [rbx+0x10]
  415064:	sub    si,0x3fff
  415069:	mov    rax,QWORD PTR [rsp+0x30]
  41506e:	cmp    r9d,0xe
  415072:	ja     0x41531d
  415078:	test   rax,rax
  41507b:	js     0x415085
  41507d:	nop    DWORD PTR [rax]
  415080:	add    rax,rax
  415083:	jns    0x415080
  415085:	mov    ecx,0xe
  41508a:	mov    edx,0x4
  41508f:	shr    rax,1
  415092:	sub    ecx,r9d
  415095:	shl    ecx,0x2
  415098:	shl    rdx,cl
  41509b:	add    rax,rdx
  41509e:	js     0x415364
  4150a4:	add    rax,rax
  4150a7:	mov    ecx,0xf
  4150ac:	sub    ecx,r9d
  4150af:	shl    ecx,0x2
  4150b2:	shr    rax,cl
  4150b5:	mov    r8d,DWORD PTR [rbx+0x8]
  4150b9:	lea    rbp,[rsp+0x40]
  4150be:	mov    rdi,rbp
  4150c1:	mov    r11d,r8d
  4150c4:	mov    r10d,r8d
  4150c7:	and    r11d,0x800
  4150ce:	and    r10d,0x20
  4150d2:	jmp    0x415103
  4150d4:	mov    ecx,DWORD PTR [rbx+0x10]
  4150d7:	test   ecx,ecx
  4150d9:	jle    0x4150e1
  4150db:	sub    ecx,0x1
  4150de:	mov    DWORD PTR [rbx+0x10],ecx
  4150e1:	shr    rax,0x4
  4150e5:	mov    r9,rdi
  4150e8:	test   edx,edx
  4150ea:	je     0x415154
  4150ec:	cmp    edx,0x9
  4150ef:	lea    rdi,[r9+0x1]
  4150f3:	jle    0x415167
  4150f5:	add    edx,0x37
  4150f8:	or     edx,r10d
  4150fb:	mov    BYTE PTR [r9],dl
  4150fe:	test   rax,rax
  415101:	je     0x415170
  415103:	mov    edx,eax
  415105:	and    edx,0xf
  415108:	cmp    edx,eax
  41510a:	jne    0x4150d4
  41510c:	cmp    rdi,rbp
  41510f:	ja     0x415122
  415111:	test   r11d,r11d
  415114:	jne    0x415122
  415116:	mov    r12d,DWORD PTR [rbx+0x10]
  41511a:	mov    r9,rdi
  41511d:	test   r12d,r12d
  415120:	jle    0x415129
  415122:	lea    r9,[rdi+0x1]
  415126:	mov    BYTE PTR [rdi],0x2e
  415129:	cmp    rax,0x1
  41512d:	jbe    0x415339
  415133:	lea    ecx,[rsi-0x1]
  415136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415140:	shr    rax,1
  415143:	mov    esi,ecx
  415145:	cmp    rax,0x1
  415149:	lea    ecx,[rsi-0x1]
  41514c:	jne    0x415140
  41514e:	xor    al,al
  415150:	test   edx,edx
  415152:	jne    0x4150ec
  415154:	cmp    r9,rbp
  415157:	ja     0x415163
  415159:	mov    ecx,DWORD PTR [rbx+0x10]
  41515c:	mov    rdi,r9
  41515f:	test   ecx,ecx
  415161:	js     0x4150fe
  415163:	lea    rdi,[r9+0x1]
  415167:	add    edx,0x30
  41516a:	jmp    0x4150fb
  41516c:	nop    DWORD PTR [rax+0x0]
  415170:	cmp    rdi,rbp
  415173:	je     0x415373
  415179:	mov    r10d,DWORD PTR [rbx+0xc]
  41517d:	mov    r12d,0x2
  415183:	test   r10d,r10d
  415186:	jle    0x414f90
  41518c:	mov    edx,DWORD PTR [rbx+0x10]
  41518f:	mov    rax,rdi
  415192:	movsx  r11d,si
  415196:	sub    rax,rbp
  415199:	lea    ecx,[rdx+rax*1]
  41519c:	test   edx,edx
  41519e:	mov    edx,r8d
  4151a1:	cmovg  eax,ecx
  4151a4:	and    edx,0x1c0
  4151aa:	mov    ecx,0x66666667
  4151af:	cmp    edx,0x1
  4151b2:	sbb    edx,edx
  4151b4:	lea    r9d,[rax+rdx*1+0x6]
  4151b9:	mov    eax,r11d
  4151bc:	imul   ecx
  4151be:	mov    eax,r11d
  4151c1:	sar    eax,0x1f
  4151c4:	mov    ecx,edx
  4151c6:	sar    ecx,0x2
  4151c9:	sub    ecx,eax
  4151cb:	je     0x4151f0
  4151cd:	mov    r11d,0x66666667
  4151d3:	mov    eax,ecx
  4151d5:	sar    ecx,0x1f
  4151d8:	add    r9d,0x1
  4151dc:	imul   r11d
  4151df:	add    r12d,0x1
  4151e3:	sar    edx,0x2
  4151e6:	sub    edx,ecx
  4151e8:	mov    ecx,edx
  4151ea:	jne    0x4151d3
  4151ec:	movsx  r12d,r12w
  4151f0:	cmp    r10d,r9d
  4151f3:	jle    0x4152c0
  4151f9:	sub    r10d,r9d
  4151fc:	test   r8d,0x600
  415203:	jne    0x415330
  415209:	lea    eax,[r10-0x1]
  41520d:	test   r10d,r10d
  415210:	mov    DWORD PTR [rbx+0xc],eax
  415213:	jle    0x414f90
  415219:	nop    DWORD PTR [rax+0x0]
  415220:	mov    rdx,rbx
  415223:	mov    ecx,0x20
  415228:	call   0x413c70
  41522d:	mov    eax,DWORD PTR [rbx+0xc]
  415230:	lea    edx,[rax-0x1]
  415233:	test   eax,eax
  415235:	mov    DWORD PTR [rbx+0xc],edx
  415238:	jg     0x415220
  41523a:	mov    r8d,DWORD PTR [rbx+0x8]
  41523e:	test   r8b,0x80
  415242:	je     0x414f9a
  415248:	nop    DWORD PTR [rax+rax*1+0x0]
  415250:	mov    rdx,rbx
  415253:	mov    ecx,0x2d
  415258:	call   0x413c70
  41525d:	jmp    0x414fb1
  415262:	mov    rdx,rbx
  415265:	mov    ecx,0x30
  41526a:	call   0x413c70
  41526f:	mov    eax,DWORD PTR [rbx+0x10]
  415272:	lea    edx,[rax-0x1]
  415275:	test   eax,eax
  415277:	mov    DWORD PTR [rbx+0x10],edx
  41527a:	jg     0x415262
  41527c:	mov    ecx,DWORD PTR [rbx+0x8]
  41527f:	mov    rdx,rbx
  415282:	and    ecx,0x20
  415285:	or     ecx,0x50
  415288:	call   0x413c70
  41528d:	add    DWORD PTR [rbx+0xc],r12d
  415291:	or     DWORD PTR [rbx+0x8],0x1c0
  415298:	movsx  rcx,si
  41529c:	mov    rdx,rbx
  41529f:	call   0x4144e0
  4152a4:	nop
  4152a5:	add    rsp,0x68
  4152a9:	pop    rbx
  4152aa:	pop    rsi
  4152ab:	pop    rdi
  4152ac:	pop    rbp
  4152ad:	pop    r12
  4152af:	pop    r13
  4152b1:	ret    
  4152b2:	mov    rcx,rbx
  4152b5:	call   0x413fa0
  4152ba:	jmp    0x415030
  4152bf:	nop
  4152c0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4152c7:	jmp    0x414f90
  4152cc:	nop    DWORD PTR [rax+0x0]
  4152d0:	lea    rdx,[rip+0xa129]        # 0x41f400
  4152d7:	mov    r8,rbx
  4152da:	xor    ecx,ecx
  4152dc:	call   0x413f00
  4152e1:	nop
  4152e2:	add    rsp,0x68
  4152e6:	pop    rbx
  4152e7:	pop    rsi
  4152e8:	pop    rdi
  4152e9:	pop    rbp
  4152ea:	pop    r12
  4152ec:	pop    r13
  4152ee:	ret    
  4152ef:	js     0x415391
  4152f5:	mov    edx,0xffffc001
  4152fa:	nop    WORD PTR [rax+rax*1+0x0]
  415300:	mov    esi,edx
  415302:	sub    edx,0x1
  415305:	add    rax,rax
  415308:	jns    0x415300
  41530a:	mov    r9d,DWORD PTR [rbx+0x10]
  41530e:	cmp    r9d,0xe
  415312:	jbe    0x415085
  415318:	jmp    0x4150b5
  41531d:	test   rax,rax
  415320:	jne    0x4150b5
  415326:	jmp    0x414f59
  41532b:	nop    DWORD PTR [rax+rax*1+0x0]
  415330:	mov    DWORD PTR [rbx+0xc],r10d
  415334:	jmp    0x414f90
  415339:	xor    eax,eax
  41533b:	jmp    0x4150e8
  415340:	mov    rdx,rbx
  415343:	mov    ecx,0x2b
  415348:	call   0x413c70
  41534d:	jmp    0x414fb1
  415352:	mov    rdx,rbx
  415355:	mov    ecx,0x20
  41535a:	call   0x413c70
  41535f:	jmp    0x414fb1
  415364:	add    esi,0x1
  415367:	jmp    0x4150a7
  41536c:	xor    eax,eax
  41536e:	jmp    0x415080
  415373:	mov    r9d,DWORD PTR [rbx+0x10]
  415377:	jmp    0x414f62
  41537c:	test   r8d,0x800
  415383:	mov    rax,rbp
  415386:	je     0x414f74
  41538c:	jmp    0x414f6b
  415391:	mov    esi,0xffffc002
  415396:	jmp    0x41530a
  41539b:	nop    DWORD PTR [rax+rax*1+0x0]
  4153a0:	push   r15
  4153a2:	push   r14
  4153a4:	push   r13
  4153a6:	push   r12
  4153a8:	push   rbp
  4153a9:	push   rdi
  4153aa:	push   rsi
  4153ab:	push   rbx
  4153ac:	sub    rsp,0xb8
  4153b3:	mov    r13,QWORD PTR [rsp+0x120]
  4153bb:	mov    r15d,ecx
  4153be:	mov    rdi,rdx
  4153c1:	mov    esi,r8d
  4153c4:	mov    rbx,r9
  4153c7:	and    r15d,0x6000
  4153ce:	call   0x4186c0
  4153d3:	mov    eax,DWORD PTR [rax]
  4153d5:	lea    rcx,[rip+0xa041]        # 0x41f41d
  4153dc:	xor    edx,edx
  4153de:	mov    QWORD PTR [rsp+0x80],rdi
  4153e6:	mov    DWORD PTR [rsp+0x88],r15d
  4153ee:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  4153f9:	mov    DWORD PTR [rsp+0x90],0xffffffff
  415404:	mov    DWORD PTR [rsp+0x34],eax
  415408:	xor    eax,eax
  41540a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  415415:	mov    WORD PTR [rsp+0x98],ax
  41541d:	mov    DWORD PTR [rsp+0x9c],0x0
  415428:	mov    WORD PTR [rsp+0xa0],dx
  415430:	mov    DWORD PTR [rsp+0xa4],0x0
  41543b:	mov    DWORD PTR [rsp+0xa8],esi
  415442:	call   0x4185c0
  415447:	test   rax,rax
  41544a:	je     0x41545c
  41544c:	movsx  edx,BYTE PTR [rax]
  41544f:	mov    eax,0x2
  415454:	sub    edx,0x30
  415457:	cmp    edx,0x2
  41545a:	jbe    0x415469
  41545c:	call   0x418800
  415461:	and    eax,0x1
  415464:	neg    eax
  415466:	add    eax,0x3
  415469:	lea    rdi,[rsp+0x70]
  41546e:	mov    DWORD PTR [rsp+0xac],eax
  415475:	movzx  eax,BYTE PTR [rbx]
  415478:	lea    rsi,[rsp+0x6e]
  41547d:	lea    r12,[rsp+0x80]
  415485:	lea    rbp,[rip+0x9fa8]        # 0x41f434
  41548c:	mov    QWORD PTR [rsp+0x28],rdi
  415491:	lea    rdi,[rsp+0x50]
  415496:	mov    QWORD PTR [rsp+0x38],rsi
  41549b:	mov    QWORD PTR [rsp+0x20],rdi
  4154a0:	mov    edi,r15d
  4154a3:	or     edi,0x200
  4154a9:	mov    DWORD PTR [rsp+0x48],edi
  4154ad:	nop    DWORD PTR [rax]
  4154b0:	movsx  ecx,al
  4154b3:	lea    rsi,[rbx+0x1]
  4154b7:	test   ecx,ecx
  4154b9:	je     0x41553a
  4154bb:	cmp    ecx,0x25
  4154be:	jne    0x415520
  4154c0:	movzx  eax,BYTE PTR [rbx+0x1]
  4154c4:	xor    r10d,r10d
  4154c7:	xor    r14d,r14d
  4154ca:	mov    DWORD PTR [rsp+0x88],r15d
  4154d2:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4154dd:	mov    rdi,rsi
  4154e0:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  4154eb:	lea    r11,[r12+0xc]
  4154f0:	test   al,al
  4154f2:	je     0x41569b
  4154f8:	lea    edx,[rax-0x20]
  4154fb:	lea    rbx,[rdi+0x1]
  4154ff:	movsx  ecx,al
  415502:	cmp    dl,0x5a
  415505:	ja     0x415b10
  41550b:	movzx  edx,dl
  41550e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  415513:	add    rdx,rbp
  415516:	jmp    rdx
  415518:	nop    DWORD PTR [rax+rax*1+0x0]
  415520:	mov    rdx,r12
  415523:	call   0x413c70
  415528:	movzx  eax,BYTE PTR [rbx+0x1]
  41552c:	mov    rbx,rsi
  41552f:	lea    rsi,[rbx+0x1]
  415533:	movsx  ecx,al
  415536:	test   ecx,ecx
  415538:	jne    0x4154bb
  41553a:	mov    eax,DWORD PTR [rsp+0xa4]
  415541:	add    rsp,0xb8
  415548:	pop    rbx
  415549:	pop    rsi
  41554a:	pop    rdi
  41554b:	pop    rbp
  41554c:	pop    r12
  41554e:	pop    r13
  415550:	pop    r14
  415552:	pop    r15
  415554:	ret    
  415555:	sub    r10d,0x2
  415559:	mov    rax,r13
  41555c:	cmp    r10d,0x1
  415560:	jbe    0x415b53
  415566:	mov    rsi,QWORD PTR [rax]
  415569:	add    r13,0x8
  41556d:	test   rsi,rsi
  415570:	je     0x415635
  415576:	mov    rcx,rsi
  415579:	call   0x418538
  41557e:	mov    edx,eax
  415580:	mov    r8,r12
  415583:	mov    rcx,rsi
  415586:	call   0x413df0
  41558b:	nop    DWORD PTR [rax+rax*1+0x0]
  415590:	movzx  eax,BYTE PTR [rbx]
  415593:	jmp    0x4154b0
  415598:	nop    DWORD PTR [rax+rax*1+0x0]
  4155a0:	test   r14d,r14d
  4155a3:	jne    0x4155b3
  4155a5:	cmp    DWORD PTR [rsp+0x88],r15d
  4155ad:	je     0x415d1b
  4155b3:	mov    rdx,QWORD PTR [r13+0x0]
  4155b7:	lea    rsi,[r13+0x8]
  4155bb:	mov    r8,r12
  4155be:	mov    ecx,0x78
  4155c3:	mov    QWORD PTR [rsp+0x78],0x0
  4155cc:	mov    r13,rsi
  4155cf:	mov    QWORD PTR [rsp+0x70],rdx
  4155d4:	call   0x414ad0
  4155d9:	jmp    0x415590
  4155db:	nop    DWORD PTR [rax+rax*1+0x0]
  4155e0:	cmp    r10d,0x5
  4155e4:	mov    rax,QWORD PTR [r13+0x0]
  4155e8:	je     0x415c5a
  4155ee:	cmp    r10d,0x1
  4155f2:	je     0x415ce4
  4155f8:	cmp    r10d,0x2
  4155fc:	je     0x415608
  4155fe:	cmp    r10d,0x3
  415602:	je     0x415d8c
  415608:	mov    edx,DWORD PTR [rsp+0xa4]
  41560f:	add    r13,0x8
  415613:	mov    DWORD PTR [rax],edx
  415615:	jmp    0x415590
  41561a:	nop    WORD PTR [rax+rax*1+0x0]
  415620:	mov    ecx,DWORD PTR [rsp+0x34]
  415624:	call   0x418548
  415629:	test   rax,rax
  41562c:	mov    rsi,rax
  41562f:	jne    0x415576
  415635:	mov    edx,0x6
  41563a:	lea    rsi,[rip+0x9dd5]        # 0x41f416
  415641:	jmp    0x415580
  415646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415650:	movzx  eax,BYTE PTR [rdi+0x1]
  415654:	mov    r10d,0x2
  41565a:	mov    r14d,0x4
  415660:	cmp    al,0x6c
  415662:	jne    0x415690
  415664:	lea    rbx,[rdi+0x2]
  415668:	movzx  eax,BYTE PTR [rdi+0x2]
  41566c:	mov    r10d,0x3
  415672:	mov    r14d,0x4
  415678:	jmp    0x415690
  41567a:	nop    WORD PTR [rax+rax*1+0x0]
  415680:	movzx  eax,BYTE PTR [rdi+0x1]
  415684:	mov    r10d,0x3
  41568a:	mov    r14d,0x4
  415690:	test   al,al
  415692:	mov    rdi,rbx
  415695:	jne    0x4154f8
  41569b:	mov    rbx,rdi
  41569e:	jmp    0x4154b0
  4156a3:	mov    eax,DWORD PTR [rsp+0x88]
  4156aa:	mov    rdx,r13
  4156ad:	add    r13,0x8
  4156b1:	or     eax,0x20
  4156b4:	test   al,0x4
  4156b6:	mov    DWORD PTR [rsp+0x88],eax
  4156bd:	je     0x41591b
  4156c3:	mov    rax,QWORD PTR [rdx]
  4156c6:	mov    rcx,QWORD PTR [rsp+0x20]
  4156cb:	mov    rdx,r12
  4156ce:	fld    TBYTE PTR [rax]
  4156d0:	fstp   TBYTE PTR [rsp+0x50]
  4156d4:	call   0x414930
  4156d9:	jmp    0x415590
  4156de:	xchg   ax,ax
  4156e0:	movzx  eax,BYTE PTR [rdi+0x1]
  4156e4:	mov    r10d,0x1
  4156ea:	mov    r14d,0x4
  4156f0:	cmp    al,0x68
  4156f2:	jne    0x415690
  4156f4:	lea    rbx,[rdi+0x2]
  4156f8:	movzx  eax,BYTE PTR [rdi+0x2]
  4156fc:	mov    r10d,0x5
  415702:	mov    r14d,0x4
  415708:	jmp    0x415690
  41570a:	nop    WORD PTR [rax+rax*1+0x0]
  415710:	mov    eax,DWORD PTR [rsp+0x88]
  415717:	mov    rdx,r13
  41571a:	add    r13,0x8
  41571e:	or     eax,0x20
  415721:	test   al,0x4
  415723:	mov    DWORD PTR [rsp+0x88],eax
  41572a:	je     0x415949
  415730:	mov    rax,QWORD PTR [rdx]
  415733:	mov    rcx,QWORD PTR [rsp+0x20]
  415738:	mov    rdx,r12
  41573b:	fld    TBYTE PTR [rax]
  41573d:	fstp   TBYTE PTR [rsp+0x50]
  415741:	call   0x4143f0
  415746:	jmp    0x415590
  41574b:	nop    DWORD PTR [rax+rax*1+0x0]
  415750:	mov    eax,DWORD PTR [rsp+0x88]
  415757:	mov    rdx,r13
  41575a:	add    r13,0x8
  41575e:	or     eax,0x20
  415761:	test   al,0x4
  415763:	mov    DWORD PTR [rsp+0x88],eax
  41576a:	je     0x415977
  415770:	mov    rax,QWORD PTR [rdx]
  415773:	mov    rcx,QWORD PTR [rsp+0x20]
  415778:	mov    rdx,r12
  41577b:	fld    TBYTE PTR [rax]
  41577d:	fstp   TBYTE PTR [rsp+0x50]
  415781:	call   0x414880
  415786:	jmp    0x415590
  41578b:	nop    DWORD PTR [rax+rax*1+0x0]
  415790:	cmp    r10d,0x3
  415794:	je     0x415c6c
  41579a:	cmp    r10d,0x2
  41579e:	je     0x415d09
  4157a4:	mov    eax,DWORD PTR [r13+0x0]
  4157a8:	cmp    r10d,0x1
  4157ac:	lea    rdx,[r13+0x8]
  4157b0:	mov    QWORD PTR [rsp+0x70],rax
  4157b5:	je     0x415d4b
  4157bb:	cmp    r10d,0x5
  4157bf:	mov    r13,rdx
  4157c2:	je     0x415da0
  4157c8:	cmp    ecx,0x75
  4157cb:	je     0x415cac
  4157d1:	mov    r8,r12
  4157d4:	mov    rdx,rax
  4157d7:	call   0x414ad0
  4157dc:	jmp    0x415590
  4157e1:	sub    r10d,0x2
  4157e5:	mov    rax,r13
  4157e8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4157f3:	cmp    r10d,0x1
  4157f7:	jbe    0x41599b
  4157fd:	mov    eax,DWORD PTR [rax]
  4157ff:	mov    rcx,QWORD PTR [rsp+0x28]
  415804:	mov    r8,r12
  415807:	mov    edx,0x1
  41580c:	add    r13,0x8
  415810:	mov    BYTE PTR [rsp+0x70],al
  415814:	call   0x413df0
  415819:	jmp    0x415590
  41581e:	xchg   ax,ax
  415820:	mov    eax,DWORD PTR [rsp+0x88]
  415827:	mov    rdx,r13
  41582a:	add    r13,0x8
  41582e:	or     eax,0x20
  415831:	test   al,0x4
  415833:	mov    DWORD PTR [rsp+0x88],eax
  41583a:	je     0x4159d8
  415840:	mov    rax,QWORD PTR [rdx]
  415843:	mov    rcx,QWORD PTR [rsp+0x20]
  415848:	mov    rdx,r12
  41584b:	fld    TBYTE PTR [rax]
  41584d:	fstp   TBYTE PTR [rsp+0x50]
  415851:	call   0x414e90
  415856:	jmp    0x415590
  41585b:	nop    DWORD PTR [rax+rax*1+0x0]
  415860:	or     DWORD PTR [rsp+0x88],0x80
  41586b:	cmp    r10d,0x3
  41586f:	je     0x415c48
  415875:	cmp    r10d,0x2
  415879:	je     0x415cf7
  41587f:	movsxd rcx,DWORD PTR [r13+0x0]
  415883:	cmp    r10d,0x1
  415887:	lea    rax,[r13+0x8]
  41588b:	mov    QWORD PTR [rsp+0x70],rcx
  415890:	je     0x415d5d
  415896:	cmp    r10d,0x5
  41589a:	mov    r13,rax
  41589d:	je     0x415daf
  4158a3:	mov    rax,rcx
  4158a6:	mov    rdx,r12
  4158a9:	sar    rax,0x3f
  4158ad:	mov    QWORD PTR [rsp+0x78],rax
  4158b2:	call   0x4144e0
  4158b7:	jmp    0x415590
  4158bc:	nop    DWORD PTR [rax+0x0]
  4158c0:	or     DWORD PTR [rsp+0x88],0x4
  4158c8:	movzx  eax,BYTE PTR [rdi+0x1]
  4158cc:	mov    r14d,0x4
  4158d2:	jmp    0x415690
  4158d7:	nop    WORD PTR [rax+rax*1+0x0]
  4158e0:	movzx  eax,BYTE PTR [rdi+0x1]
  4158e4:	cmp    al,0x36
  4158e6:	je     0x415c28
  4158ec:	cmp    al,0x33
  4158ee:	je     0x415cbc
  4158f4:	mov    r10d,0x3
  4158fa:	mov    r14d,0x4
  415900:	jmp    0x415690
  415905:	mov    eax,DWORD PTR [rsp+0x88]
  41590c:	mov    rdx,r13
  41590f:	add    r13,0x8
  415913:	test   al,0x4
  415915:	jne    0x4156c3
  41591b:	mov    rcx,QWORD PTR [rsp+0x20]
  415920:	fld    QWORD PTR [rdx]
  415922:	mov    rdx,r12
  415925:	fstp   TBYTE PTR [rsp+0x50]
  415929:	call   0x414930
  41592e:	jmp    0x415590
  415933:	mov    eax,DWORD PTR [rsp+0x88]
  41593a:	mov    rdx,r13
  41593d:	add    r13,0x8
  415941:	test   al,0x4
  415943:	jne    0x415730
  415949:	mov    rcx,QWORD PTR [rsp+0x20]
  41594e:	fld    QWORD PTR [rdx]
  415950:	mov    rdx,r12
  415953:	fstp   TBYTE PTR [rsp+0x50]
  415957:	call   0x4143f0
  41595c:	jmp    0x415590
  415961:	mov    eax,DWORD PTR [rsp+0x88]
  415968:	mov    rdx,r13
  41596b:	add    r13,0x8
  41596f:	test   al,0x4
  415971:	jne    0x415770
  415977:	mov    rcx,QWORD PTR [rsp+0x20]
  41597c:	fld    QWORD PTR [rdx]
  41597e:	mov    rdx,r12
  415981:	fstp   TBYTE PTR [rsp+0x50]
  415985:	call   0x414880
  41598a:	jmp    0x415590
  41598f:	nop
  415990:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41599b:	mov    eax,DWORD PTR [r13+0x0]
  41599f:	mov    rcx,QWORD PTR [rsp+0x28]
  4159a4:	lea    rsi,[r13+0x8]
  4159a8:	mov    r8,r12
  4159ab:	mov    edx,0x1
  4159b0:	mov    r13,rsi
  4159b3:	mov    WORD PTR [rsp+0x70],ax
  4159b8:	call   0x413cd0
  4159bd:	jmp    0x415590
  4159c2:	mov    eax,DWORD PTR [rsp+0x88]
  4159c9:	mov    rdx,r13
  4159cc:	add    r13,0x8
  4159d0:	test   al,0x4
  4159d2:	jne    0x415840
  4159d8:	mov    rcx,QWORD PTR [rsp+0x20]
  4159dd:	fld    QWORD PTR [rdx]
  4159df:	mov    rdx,r12
  4159e2:	fstp   TBYTE PTR [rsp+0x50]
  4159e6:	call   0x414e90
  4159eb:	jmp    0x415590
  4159f0:	test   r14d,r14d
  4159f3:	jne    0x415b90
  4159f9:	or     DWORD PTR [rsp+0x88],0x200
  415a04:	movzx  eax,BYTE PTR [rdi+0x1]
  415a08:	jmp    0x415690
  415a0d:	nop    DWORD PTR [rax]
  415a10:	cmp    r14d,0x1
  415a14:	jbe    0x415c7e
  415a1a:	movzx  eax,BYTE PTR [rdi+0x1]
  415a1e:	mov    r14d,0x4
  415a24:	jmp    0x415690
  415a29:	nop    DWORD PTR [rax+0x0]
  415a30:	test   r14d,r14d
  415a33:	jne    0x415ab9
  415a39:	or     DWORD PTR [rsp+0x88],0x400
  415a44:	movzx  eax,BYTE PTR [rdi+0x1]
  415a48:	jmp    0x415690
  415a4d:	nop    DWORD PTR [rax]
  415a50:	test   r14d,r14d
  415a53:	jne    0x415ab9
  415a55:	or     DWORD PTR [rsp+0x88],0x100
  415a60:	movzx  eax,BYTE PTR [rdi+0x1]
  415a64:	jmp    0x415690
  415a69:	nop    DWORD PTR [rax+0x0]
  415a70:	test   r14d,r14d
  415a73:	jne    0x415ab9
  415a75:	or     DWORD PTR [rsp+0x88],0x800
  415a80:	movzx  eax,BYTE PTR [rdi+0x1]
  415a84:	jmp    0x415690
  415a89:	nop    DWORD PTR [rax+0x0]
  415a90:	test   r14d,r14d
  415a93:	jne    0x415ab9
  415a95:	or     DWORD PTR [rsp+0x88],0x40
  415a9d:	movzx  eax,BYTE PTR [rdi+0x1]
  415aa1:	jmp    0x415690
  415aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ab0:	test   r14d,r14d
  415ab3:	je     0x415bc2
  415ab9:	movzx  eax,BYTE PTR [rdi+0x1]
  415abd:	jmp    0x415690
  415ac2:	mov    rdx,r12
  415ac5:	call   0x413c70
  415aca:	jmp    0x415590
  415acf:	nop
  415ad0:	test   r11,r11
  415ad3:	je     0x415a1a
  415ad9:	test   r14d,0xfffffffd
  415ae0:	jne    0x415bb0
  415ae6:	mov    eax,DWORD PTR [r13+0x0]
  415aea:	lea    rdx,[r13+0x8]
  415aee:	test   eax,eax
  415af0:	mov    DWORD PTR [r11],eax
  415af3:	js     0x415d70
  415af9:	movzx  eax,BYTE PTR [rdi+0x1]
  415afd:	mov    r13,rdx
  415b00:	xor    r11d,r11d
  415b03:	jmp    0x415690
  415b08:	nop    DWORD PTR [rax+rax*1+0x0]
  415b10:	sub    eax,0x30
  415b13:	cmp    al,0x9
  415b15:	ja     0x415d36
  415b1b:	cmp    r14d,0x3
  415b1f:	ja     0x415d36
  415b25:	test   r14d,r14d
  415b28:	jne    0x415b9a
  415b2a:	mov    r14d,0x1
  415b30:	test   r11,r11
  415b33:	je     0x415ab9
  415b35:	mov    eax,DWORD PTR [r11]
  415b38:	test   eax,eax
  415b3a:	js     0x415c9d
  415b40:	lea    eax,[rax+rax*4]
  415b43:	lea    eax,[rcx+rax*2-0x30]
  415b47:	mov    DWORD PTR [r11],eax
  415b4a:	movzx  eax,BYTE PTR [rdi+0x1]
  415b4e:	jmp    0x415690
  415b53:	mov    rsi,QWORD PTR [r13+0x0]
  415b57:	lea    rax,[rip+0x98aa]        # 0x41f408
  415b5e:	lea    rdi,[r13+0x8]
  415b62:	mov    r13,rdi
  415b65:	test   rsi,rsi
  415b68:	cmove  rsi,rax
  415b6c:	mov    rcx,rsi
  415b6f:	call   0x4184d8
  415b74:	mov    r8,r12
  415b77:	mov    edx,eax
  415b79:	mov    rcx,rsi
  415b7c:	call   0x413cd0
  415b81:	jmp    0x415590
  415b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415b90:	cmp    r14d,0x3
  415b94:	ja     0x415d36
  415b9a:	cmp    r14d,0x2
  415b9e:	mov    eax,0x3
  415ba3:	cmove  r14d,eax
  415ba7:	jmp    0x415b30
  415ba9:	nop    DWORD PTR [rax+0x0]
  415bb0:	movzx  eax,BYTE PTR [rdi+0x1]
  415bb4:	xor    r11d,r11d
  415bb7:	mov    r14d,0x4
  415bbd:	jmp    0x415690
  415bc2:	mov    DWORD PTR [rsp+0x4c],r10d
  415bc7:	mov    QWORD PTR [rsp+0x40],r11
  415bcc:	or     DWORD PTR [rsp+0x88],0x1000
  415bd7:	mov    DWORD PTR [rsp+0x70],0x0
  415bdf:	call   0x4185b0
  415be4:	mov    r9,QWORD PTR [rsp+0x28]
  415be9:	mov    rdx,QWORD PTR [rax+0x8]
  415bed:	mov    r8d,0x10
  415bf3:	mov    rcx,QWORD PTR [rsp+0x38]
  415bf8:	call   0x418280
  415bfd:	test   eax,eax
  415bff:	mov    r11,QWORD PTR [rsp+0x40]
  415c04:	mov    r10d,DWORD PTR [rsp+0x4c]
  415c09:	jle    0x415c18
  415c0b:	movzx  edx,WORD PTR [rsp+0x6e]
  415c10:	mov    WORD PTR [rsp+0xa0],dx
  415c18:	mov    DWORD PTR [rsp+0x9c],eax
  415c1f:	movzx  eax,BYTE PTR [rdi+0x1]
  415c23:	jmp    0x415690
  415c28:	cmp    BYTE PTR [rdi+0x2],0x34
  415c2c:	je     0x415dbf
  415c32:	mov    eax,0x36
  415c37:	mov    r10d,0x3
  415c3d:	mov    r14d,0x4
  415c43:	jmp    0x415690
  415c48:	mov    rcx,QWORD PTR [r13+0x0]
  415c4c:	add    r13,0x8
  415c50:	mov    QWORD PTR [rsp+0x70],rcx
  415c55:	jmp    0x4158a3
  415c5a:	mov    edx,DWORD PTR [rsp+0xa4]
  415c61:	add    r13,0x8
  415c65:	mov    BYTE PTR [rax],dl
  415c67:	jmp    0x415590
  415c6c:	mov    rax,QWORD PTR [r13+0x0]
  415c70:	add    r13,0x8
  415c74:	mov    QWORD PTR [rsp+0x70],rax
  415c79:	jmp    0x4157c8
  415c7e:	mov    DWORD PTR [rsp+0x90],0x0
  415c89:	movzx  eax,BYTE PTR [rdi+0x1]
  415c8d:	lea    r11,[r12+0x10]
  415c92:	mov    r14d,0x2
  415c98:	jmp    0x415690
  415c9d:	sub    ecx,0x30
  415ca0:	movzx  eax,BYTE PTR [rdi+0x1]
  415ca4:	mov    DWORD PTR [r11],ecx
  415ca7:	jmp    0x415690
  415cac:	mov    rdx,r12
  415caf:	mov    rcx,rax
  415cb2:	call   0x4144e0
  415cb7:	jmp    0x415590
  415cbc:	cmp    BYTE PTR [rdi+0x2],0x32
  415cc0:	mov    eax,0x33
  415cc5:	jne    0x4158f4
  415ccb:	lea    rbx,[rdi+0x3]
  415ccf:	movzx  eax,BYTE PTR [rdi+0x3]
  415cd3:	mov    r10d,0x2
  415cd9:	mov    r14d,0x4
  415cdf:	jmp    0x415690
  415ce4:	mov    edx,DWORD PTR [rsp+0xa4]
  415ceb:	add    r13,0x8
  415cef:	mov    WORD PTR [rax],dx
  415cf2:	jmp    0x415590
  415cf7:	movsxd rcx,DWORD PTR [r13+0x0]
  415cfb:	add    r13,0x8
  415cff:	mov    QWORD PTR [rsp+0x70],rcx
  415d04:	jmp    0x4158a3
  415d09:	mov    eax,DWORD PTR [r13+0x0]
  415d0d:	add    r13,0x8
  415d11:	mov    QWORD PTR [rsp+0x70],rax
  415d16:	jmp    0x4157c8
  415d1b:	mov    eax,DWORD PTR [rsp+0x48]
  415d1f:	mov    DWORD PTR [rsp+0x90],0x10
  415d2a:	mov    DWORD PTR [rsp+0x88],eax
  415d31:	jmp    0x4155b3
  415d36:	mov    rdx,r12
  415d39:	mov    ecx,0x25
  415d3e:	mov    rbx,rsi
  415d41:	call   0x413c70
  415d46:	jmp    0x415590
  415d4b:	movzx  eax,WORD PTR [rsp+0x70]
  415d50:	mov    r13,rdx
  415d53:	mov    QWORD PTR [rsp+0x70],rax
  415d58:	jmp    0x4157c8
  415d5d:	movsx  rcx,WORD PTR [rsp+0x70]
  415d63:	mov    r13,rax
  415d66:	mov    QWORD PTR [rsp+0x70],rcx
  415d6b:	jmp    0x4158a3
  415d70:	test   r14d,r14d
  415d73:	jne    0x415dd8
  415d75:	or     DWORD PTR [rsp+0x88],0x400
  415d80:	neg    DWORD PTR [rsp+0x8c]
  415d87:	jmp    0x415af9
  415d8c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  415d94:	add    r13,0x8
  415d98:	mov    QWORD PTR [rax],rdx
  415d9b:	jmp    0x415590
  415da0:	movzx  eax,BYTE PTR [rsp+0x70]
  415da5:	mov    QWORD PTR [rsp+0x70],rax
  415daa:	jmp    0x4157c8
  415daf:	movsx  rcx,BYTE PTR [rsp+0x70]
  415db5:	mov    QWORD PTR [rsp+0x70],rcx
  415dba:	jmp    0x4158a3
  415dbf:	lea    rbx,[rdi+0x3]
  415dc3:	movzx  eax,BYTE PTR [rdi+0x3]
  415dc7:	mov    r10d,0x3
  415dcd:	mov    r14d,0x4
  415dd3:	jmp    0x415690
  415dd8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  415de3:	movzx  eax,BYTE PTR [rdi+0x1]
  415de7:	mov    r13,rdx
  415dea:	xor    r11d,r11d
  415ded:	jmp    0x415690
  415df2:	nop
  415df3:	nop
  415df4:	nop
  415df5:	nop
  415df6:	nop
  415df7:	nop
  415df8:	nop
  415df9:	nop
  415dfa:	nop
  415dfb:	nop
  415dfc:	nop
  415dfd:	nop
  415dfe:	nop
  415dff:	nop
  415e00:	push   rbx
  415e01:	sub    rsp,0x20
  415e05:	xor    ebx,ebx
  415e07:	cmp    ecx,0x1b
  415e0a:	jle    0x415e1d
  415e0c:	mov    eax,0x4
  415e11:	add    eax,eax
  415e13:	add    ebx,0x1
  415e16:	lea    edx,[rax+0x17]
  415e19:	cmp    edx,ecx
  415e1b:	jl     0x415e11
  415e1d:	mov    ecx,ebx
  415e1f:	call   0x4176f0
  415e24:	mov    DWORD PTR [rax],ebx
  415e26:	add    rax,0x4
  415e2a:	add    rsp,0x20
  415e2e:	pop    rbx
  415e2f:	ret    
  415e30:	push   rsi
  415e31:	push   rbx
  415e32:	sub    rsp,0x28
  415e36:	mov    rbx,rcx
  415e39:	mov    ecx,r8d
  415e3c:	mov    rsi,rdx
  415e3f:	call   0x415e00
  415e44:	movzx  ecx,BYTE PTR [rbx]
  415e47:	lea    r8,[rbx+0x1]
  415e4b:	test   cl,cl
  415e4d:	mov    BYTE PTR [rax],cl
  415e4f:	mov    rcx,rax
  415e52:	je     0x415e69
  415e54:	add    r8,0x1
  415e58:	movzx  r9d,BYTE PTR [r8-0x1]
  415e5d:	add    rcx,0x1
  415e61:	test   r9b,r9b
  415e64:	mov    BYTE PTR [rcx],r9b
  415e67:	jne    0x415e54
  415e69:	test   rsi,rsi
  415e6c:	je     0x415e71
  415e6e:	mov    QWORD PTR [rsi],rcx
  415e71:	add    rsp,0x28
  415e75:	pop    rbx
  415e76:	pop    rsi
  415e77:	ret    
  415e78:	nop    DWORD PTR [rax+rax*1+0x0]
  415e80:	mov    edx,0x1
  415e85:	mov    rax,rcx
  415e88:	mov    ecx,DWORD PTR [rcx-0x4]
  415e8b:	shl    edx,cl
  415e8d:	mov    DWORD PTR [rax+0x4],ecx
  415e90:	lea    rcx,[rax-0x4]
  415e94:	mov    DWORD PTR [rax+0x8],edx
  415e97:	jmp    0x417800
  415e9c:	nop    DWORD PTR [rax+0x0]
  415ea0:	push   r15
  415ea2:	push   r14
  415ea4:	push   r13
  415ea6:	push   r12
  415ea8:	push   rbp
  415ea9:	push   rdi
  415eaa:	push   rsi
  415eab:	push   rbx
  415eac:	sub    rsp,0x38
  415eb0:	xor    eax,eax
  415eb2:	mov    edi,DWORD PTR [rdx+0x14]
  415eb5:	cmp    edi,DWORD PTR [rcx+0x14]
  415eb8:	mov    r15,rdx
  415ebb:	jg     0x416009
  415ec1:	sub    edi,0x1
  415ec4:	lea    rbx,[rdx+0x18]
  415ec8:	lea    r12,[rcx+0x18]
  415ecc:	movsxd r13,edi
  415ecf:	xor    edx,edx
  415ed1:	shl    r13,0x2
  415ed5:	lea    rbp,[rbx+r13*1]
  415ed9:	add    r13,r12
  415edc:	mov    eax,DWORD PTR [rbp+0x0]
  415edf:	lea    r8d,[rax+0x1]
  415ee3:	mov    eax,DWORD PTR [r13+0x0]
  415ee7:	div    r8d
  415eea:	test   eax,eax
  415eec:	mov    r14d,eax
  415eef:	mov    DWORD PTR [rsp+0x2c],eax
  415ef3:	je     0x415f87
  415ef9:	mov    edx,eax
  415efb:	mov    rsi,rbx
  415efe:	mov    r11,r12
  415f01:	xor    eax,eax
  415f03:	xor    r10d,r10d
  415f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415f10:	add    rsi,0x4
  415f14:	mov    r8d,DWORD PTR [rsi-0x4]
  415f18:	mov    r9d,DWORD PTR [r11]
  415f1b:	add    r11,0x4
  415f1f:	imul   r8,rdx
  415f23:	add    r8,rax
  415f26:	mov    rax,r8
  415f29:	mov    r8d,r8d
  415f2c:	sub    r9,r8
  415f2f:	shr    rax,0x20
  415f33:	sub    r9,r10
  415f36:	mov    r10,r9
  415f39:	mov    DWORD PTR [r11-0x4],r9d
  415f3d:	shr    r10,0x20
  415f41:	and    r10d,0x1
  415f45:	cmp    rbp,rsi
  415f48:	jae    0x415f10
  415f4a:	mov    r11d,DWORD PTR [r13+0x0]
  415f4e:	test   r11d,r11d
  415f51:	jne    0x415f87
  415f53:	lea    rax,[r13-0x4]
  415f57:	cmp    r12,rax
  415f5a:	jae    0x415f84
  415f5c:	mov    r10d,DWORD PTR [r13-0x4]
  415f60:	test   r10d,r10d
  415f63:	je     0x415f78
  415f65:	jmp    0x415f84
  415f67:	nop    WORD PTR [rax+rax*1+0x0]
  415f70:	mov    r9d,DWORD PTR [rax]
  415f73:	test   r9d,r9d
  415f76:	jne    0x415f84
  415f78:	sub    rax,0x4
  415f7c:	sub    edi,0x1
  415f7f:	cmp    r12,rax
  415f82:	jb     0x415f70
  415f84:	mov    DWORD PTR [rcx+0x14],edi
  415f87:	mov    rdx,r15
  415f8a:	mov    rsi,rcx
  415f8d:	call   0x417d20
  415f92:	test   eax,eax
  415f94:	js     0x416005
  415f96:	lea    eax,[r14+0x1]
  415f9a:	mov    rcx,r12
  415f9d:	xor    edx,edx
  415f9f:	mov    DWORD PTR [rsp+0x2c],eax
  415fa3:	add    rbx,0x4
  415fa7:	mov    eax,DWORD PTR [rcx]
  415fa9:	mov    r8d,DWORD PTR [rbx-0x4]
  415fad:	add    rcx,0x4
  415fb1:	sub    rax,r8
  415fb4:	sub    rax,rdx
  415fb7:	mov    rdx,rax
  415fba:	mov    DWORD PTR [rcx-0x4],eax
  415fbd:	shr    rdx,0x20
  415fc1:	and    edx,0x1
  415fc4:	cmp    rbp,rbx
  415fc7:	jae    0x415fa3
  415fc9:	movsxd rax,edi
  415fcc:	lea    rdx,[r12+rax*4]
  415fd0:	mov    r8d,DWORD PTR [rdx]
  415fd3:	test   r8d,r8d
  415fd6:	jne    0x416005
  415fd8:	lea    rax,[rdx-0x4]
  415fdc:	cmp    r12,rax
  415fdf:	jae    0x416002
  415fe1:	mov    ecx,DWORD PTR [rdx-0x4]
  415fe4:	test   ecx,ecx
  415fe6:	je     0x415ff6
  415fe8:	jmp    0x416002
  415fea:	nop    WORD PTR [rax+rax*1+0x0]
  415ff0:	mov    edx,DWORD PTR [rax]
  415ff2:	test   edx,edx
  415ff4:	jne    0x416002
  415ff6:	sub    rax,0x4
  415ffa:	sub    edi,0x1
  415ffd:	cmp    r12,rax
  416000:	jb     0x415ff0
  416002:	mov    DWORD PTR [rsi+0x14],edi
  416005:	mov    eax,DWORD PTR [rsp+0x2c]
  416009:	add    rsp,0x38
  41600d:	pop    rbx
  41600e:	pop    rsi
  41600f:	pop    rdi
  416010:	pop    rbp
  416011:	pop    r12
  416013:	pop    r13
  416015:	pop    r14
  416017:	pop    r15
  416019:	ret    
  41601a:	nop
  41601b:	nop
  41601c:	nop
  41601d:	nop
  41601e:	nop
  41601f:	nop
  416020:	push   r15
  416022:	push   r14
  416024:	push   r13
  416026:	push   r12
  416028:	push   rbp
  416029:	push   rdi
  41602a:	push   rsi
  41602b:	push   rbx
  41602c:	sub    rsp,0xb8
  416033:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  41603b:	mov    r12d,DWORD PTR [r9]
  41603e:	mov    eax,r12d
  416041:	and    eax,0xffffffcf
  416044:	mov    DWORD PTR [r9],eax
  416047:	mov    eax,r12d
  41604a:	and    eax,0x7
  41604d:	cmp    eax,0x4
  416050:	ja     0x417483
  416056:	mov    r13d,edx
  416059:	lea    rdx,[rip+0x9550]        # 0x41f5b0
  416060:	mov    QWORD PTR [rsp+0x28],r9
  416065:	mov    r15,r8
  416068:	mov    rbp,rcx
  41606b:	movsxd rax,DWORD PTR [rdx+rax*4]
  41606f:	add    rdx,rax
  416072:	jmp    rdx
  416074:	mov    edi,DWORD PTR [rcx]
  416076:	xor    ecx,ecx
  416078:	cmp    edi,0x20
  41607b:	jle    0x41608b
  41607d:	mov    eax,0x20
  416082:	add    eax,eax
  416084:	add    ecx,0x1
  416087:	cmp    edi,eax
  416089:	jg     0x416082
  41608b:	call   0x4176f0
  416090:	mov    rsi,rax
  416093:	lea    eax,[rdi-0x1]
  416096:	lea    r9,[rsi+0x18]
  41609a:	sar    eax,0x5
  41609d:	cdqe   
  41609f:	mov    rdx,r9
  4160a2:	lea    r11,[r15+rax*4]
  4160a6:	mov    rax,r15
  4160a9:	nop    DWORD PTR [rax+0x0]
  4160b0:	mov    ecx,DWORD PTR [rax]
  4160b2:	add    rax,0x4
  4160b6:	add    rdx,0x4
  4160ba:	cmp    r11,rax
  4160bd:	mov    DWORD PTR [rdx-0x4],ecx
  4160c0:	jae    0x4160b0
  4160c2:	sub    rdx,r9
  4160c5:	sar    rdx,0x2
  4160c9:	mov    r14d,edx
  4160cc:	movsxd rdx,edx
  4160cf:	lea    rax,[r9+rdx*4-0x4]
  4160d4:	jmp    0x4160ef
  4160d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4160e0:	sub    rax,0x4
  4160e4:	test   edx,edx
  4160e6:	mov    r14d,edx
  4160e9:	je     0x4165f0
  4160ef:	mov    r8d,DWORD PTR [rax]
  4160f2:	lea    edx,[r14-0x1]
  4160f6:	test   r8d,r8d
  4160f9:	je     0x4160e0
  4160fb:	movsxd rdx,edx
  4160fe:	mov    DWORD PTR [rsi+0x14],r14d
  416102:	shl    r14d,0x5
  416106:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  41610b:	xor    eax,0x1f
  41610e:	sub    r14d,eax
  416111:	mov    rcx,rsi
  416114:	call   0x417590
  416119:	test   eax,eax
  41611b:	mov    DWORD PTR [rsp+0x9c],eax
  416122:	mov    r11d,r13d
  416125:	jne    0x416600
  41612b:	mov    ecx,DWORD PTR [rsi+0x14]
  41612e:	test   ecx,ecx
  416130:	jne    0x4161e0
  416136:	mov    rcx,rsi
  416139:	call   0x417800
  41613e:	mov    rax,QWORD PTR [rsp+0x130]
  416146:	mov    rdx,QWORD PTR [rsp+0x138]
  41614e:	lea    rcx,[rip+0x9458]        # 0x41f5ad
  416155:	mov    r8d,0x1
  41615b:	mov    DWORD PTR [rax],0x1
  416161:	call   0x415e30
  416166:	nop
  416167:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  41616f:	add    rsp,0xb8
  416176:	pop    rbx
  416177:	pop    rsi
  416178:	pop    rdi
  416179:	pop    rbp
  41617a:	pop    r12
  41617c:	pop    r13
  41617e:	pop    r14
  416180:	pop    r15
  416182:	ret    
  416183:	mov    rax,QWORD PTR [rsp+0x130]
  41618b:	mov    rdx,QWORD PTR [rsp+0x138]
  416193:	lea    rcx,[rip+0x940f]        # 0x41f5a9
  41619a:	mov    r8d,0x3
  4161a0:	mov    DWORD PTR [rax],0xffff8000
  4161a6:	call   0x415e30
  4161ab:	jmp    0x416167
  4161ad:	nop    DWORD PTR [rax]
  4161b0:	mov    rax,QWORD PTR [rsp+0x130]
  4161b8:	mov    rdx,QWORD PTR [rsp+0x138]
  4161c0:	lea    rcx,[rip+0x93d9]        # 0x41f5a0
  4161c7:	mov    r8d,0x8
  4161cd:	mov    DWORD PTR [rax],0xffff8000
  4161d3:	call   0x415e30
  4161d8:	jmp    0x416167
  4161da:	nop    WORD PTR [rax+rax*1+0x0]
  4161e0:	lea    rdx,[rsp+0x9c]
  4161e8:	mov    rcx,rsi
  4161eb:	mov    DWORD PTR [rsp+0x30],r11d
  4161f0:	call   0x417eb0
  4161f5:	movq   rdx,xmm0
  4161fa:	movq   r9,xmm0
  4161ff:	mov    r11d,DWORD PTR [rsp+0x30]
  416204:	pxor   xmm0,xmm0
  416208:	shr    rdx,0x20
  41620c:	mov    r9d,r9d
  41620f:	and    edx,0xfffff
  416215:	lea    ecx,[r11+r14*1-0x1]
  41621a:	or     edx,0x3ff00000
  416220:	mov    rax,rdx
  416223:	cvtsi2sd xmm0,ecx
  416227:	shl    rax,0x20
  41622b:	mov    ebx,ecx
  41622d:	or     r9,rax
  416230:	sar    ebx,0x1f
  416233:	mov    QWORD PTR [rsp+0x30],r9
  416238:	mov    eax,ebx
  41623a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  416240:	xor    eax,ecx
  416242:	sub    eax,ebx
  416244:	subsd  xmm1,QWORD PTR [rip+0x937c]        # 0x41f5c8
  41624c:	sub    eax,0x435
  416251:	test   eax,eax
  416253:	mulsd  xmm0,QWORD PTR [rip+0x9385]        # 0x41f5e0
  41625b:	mulsd  xmm1,QWORD PTR [rip+0x936d]        # 0x41f5d0
  416263:	addsd  xmm1,QWORD PTR [rip+0x936d]        # 0x41f5d8
  41626b:	addsd  xmm1,xmm0
  41626f:	jle    0x416285
  416271:	pxor   xmm0,xmm0
  416275:	cvtsi2sd xmm0,eax
  416279:	mulsd  xmm0,QWORD PTR [rip+0x9367]        # 0x41f5e8
  416281:	addsd  xmm1,xmm0
  416285:	cvttsd2si eax,xmm1
  416289:	pxor   xmm6,xmm6
  41628d:	ucomisd xmm6,xmm1
  416291:	mov    DWORD PTR [rsp+0x30],eax
  416295:	ja     0x416b23
  41629b:	mov    eax,ecx
  41629d:	mov    r9d,r9d
  4162a0:	mov    DWORD PTR [rsp+0x6c],0x1
  4162a8:	shl    eax,0x14
  4162ab:	add    eax,edx
  4162ad:	shl    rax,0x20
  4162b1:	or     r9,rax
  4162b4:	cmp    DWORD PTR [rsp+0x30],0x16
  4162b9:	mov    QWORD PTR [rsp+0x80],r9
  4162c1:	ja     0x4162f0
  4162c3:	movsxd rax,DWORD PTR [rsp+0x30]
  4162c8:	mov    rdx,QWORD PTR [rip+0x9651]        # 0x41f920
  4162cf:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  4162d4:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  4162dd:	jbe    0x416640
  4162e3:	sub    DWORD PTR [rsp+0x30],0x1
  4162e8:	mov    DWORD PTR [rsp+0x6c],0x0
  4162f0:	mov    eax,r14d
  4162f3:	mov    DWORD PTR [rsp+0x50],0x0
  4162fb:	sub    eax,ecx
  4162fd:	sub    eax,0x1
  416300:	mov    DWORD PTR [rsp+0x40],eax
  416304:	js     0x416b10
  41630a:	mov    eax,DWORD PTR [rsp+0x30]
  41630e:	test   eax,eax
  416310:	js     0x416af0
  416316:	add    DWORD PTR [rsp+0x40],eax
  41631a:	mov    DWORD PTR [rsp+0x88],eax
  416321:	mov    DWORD PTR [rsp+0x58],0x0
  416329:	cmp    DWORD PTR [rsp+0x120],0x9
  416331:	ja     0x416620
  416337:	cmp    DWORD PTR [rsp+0x120],0x5
  41633f:	jle    0x41662b
  416345:	sub    DWORD PTR [rsp+0x120],0x4
  41634d:	xor    eax,eax
  41634f:	cmp    DWORD PTR [rsp+0x120],0x3
  416357:	je     0x416ce4
  41635d:	jle    0x416a43
  416363:	cmp    DWORD PTR [rsp+0x120],0x4
  41636b:	mov    DWORD PTR [rsp+0x60],0x1
  416373:	je     0x416650
  416379:	cmp    DWORD PTR [rsp+0x120],0x5
  416381:	jne    0x416a59
  416387:	mov    ebx,DWORD PTR [rsp+0x30]
  41638b:	add    ebx,DWORD PTR [rsp+0x128]
  416392:	mov    DWORD PTR [rsp+0x8c],ebx
  416399:	add    ebx,0x1
  41639c:	test   ebx,ebx
  41639e:	mov    DWORD PTR [rsp+0x68],ebx
  4163a2:	mov    ecx,ebx
  4163a4:	jle    0x416f20
  4163aa:	cmp    ebx,0xe
  4163ad:	mov    DWORD PTR [rsp+0x9c],ebx
  4163b4:	setbe  bl
  4163b7:	and    ebx,eax
  4163b9:	mov    QWORD PTR [rsp+0x78],r9
  4163be:	mov    DWORD PTR [rsp+0x70],r11d
  4163c3:	call   0x415e00
  4163c8:	mov    QWORD PTR [rsp+0x48],rax
  4163cd:	mov    eax,DWORD PTR [rbp+0xc]
  4163d0:	mov    r11d,DWORD PTR [rsp+0x70]
  4163d5:	mov    r9,QWORD PTR [rsp+0x78]
  4163da:	sub    eax,0x1
  4163dd:	mov    DWORD PTR [rsp+0x38],eax
  4163e1:	je     0x416408
  4163e3:	mov    ecx,DWORD PTR [rsp+0x38]
  4163e7:	mov    eax,0x2
  4163ec:	test   ecx,ecx
  4163ee:	cmovns eax,ecx
  4163f1:	and    r12d,0x8
  4163f5:	mov    DWORD PTR [rsp+0x38],eax
  4163f9:	je     0x416408
  4163fb:	mov    eax,0x3
  416400:	sub    eax,DWORD PTR [rsp+0x38]
  416404:	mov    DWORD PTR [rsp+0x38],eax
  416408:	test   bl,bl
  41640a:	je     0x416700
  416410:	mov    eax,DWORD PTR [rsp+0x38]
  416414:	or     eax,DWORD PTR [rsp+0x30]
  416418:	jne    0x416700
  41641e:	mov    eax,DWORD PTR [rsp+0x6c]
  416422:	mov    DWORD PTR [rsp+0x9c],0x0
  41642d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  416436:	test   eax,eax
  416438:	je     0x41644c
  41643a:	movsd  xmm0,QWORD PTR [rip+0x91b6]        # 0x41f5f8
  416442:	ucomisd xmm0,xmm4
  416446:	ja     0x41727b
  41644c:	movapd xmm0,xmm4
  416450:	mov    r12d,DWORD PTR [rsp+0x68]
  416455:	addsd  xmm0,xmm4
  416459:	addsd  xmm0,QWORD PTR [rip+0x91af]        # 0x41f610
  416461:	movq   rdx,xmm0
  416466:	movq   rax,xmm0
  41646b:	shr    rdx,0x20
  41646f:	mov    eax,eax
  416471:	sub    edx,0x3400000
  416477:	shl    rdx,0x20
  41647b:	or     rax,rdx
  41647e:	test   r12d,r12d
  416481:	je     0x4166b7
  416487:	mov    r9d,DWORD PTR [rsp+0x68]
  41648c:	movapd xmm0,xmm4
  416490:	xor    ecx,ecx
  416492:	mov    ebx,DWORD PTR [rsp+0x60]
  416496:	lea    edx,[r9-0x1]
  41649a:	movsxd rdx,edx
  41649d:	test   ebx,ebx
  41649f:	je     0x416fc3
  4164a5:	mov    r10,QWORD PTR [rip+0x9474]        # 0x41f920
  4164ac:	movsd  xmm1,QWORD PTR [rip+0x917c]        # 0x41f630
  4164b4:	mov    QWORD PTR [rsp+0x38],rax
  4164b9:	cvttsd2si eax,xmm0
  4164bd:	pxor   xmm2,xmm2
  4164c1:	mov    DWORD PTR [rsp+0x9c],0x0
  4164cc:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  4164d2:	mov    rdx,QWORD PTR [rsp+0x48]
  4164d7:	mov    rbx,rdx
  4164da:	add    rbx,0x1
  4164de:	cvtsi2sd xmm2,eax
  4164e2:	add    eax,0x30
  4164e5:	mov    BYTE PTR [rdx],al
  4164e7:	movsd  xmm5,QWORD PTR [rsp+0x38]
  4164ed:	subsd  xmm0,xmm2
  4164f1:	subsd  xmm1,xmm5
  4164f5:	ucomisd xmm1,xmm0
  4164f9:	ja     0x416594
  4164ff:	movsd  xmm5,QWORD PTR [rip+0x90f1]        # 0x41f5f8
  416507:	movapd xmm2,xmm5
  41650b:	subsd  xmm2,xmm0
  41650f:	ucomisd xmm1,xmm2
  416513:	ja     0x417097
  416519:	mov    eax,DWORD PTR [rsp+0x9c]
  416520:	movsd  xmm3,QWORD PTR [rip+0x90d8]        # 0x41f600
  416528:	add    eax,0x1
  41652b:	cmp    r9d,eax
  41652e:	mov    DWORD PTR [rsp+0x9c],eax
  416535:	jg     0x41656c
  416537:	jmp    0x4166ee
  41653c:	nop    DWORD PTR [rax+0x0]
  416540:	movapd xmm2,xmm5
  416544:	subsd  xmm2,xmm0
  416548:	ucomisd xmm1,xmm2
  41654c:	ja     0x417097
  416552:	mov    eax,DWORD PTR [rsp+0x9c]
  416559:	add    eax,0x1
  41655c:	cmp    r9d,eax
  41655f:	mov    DWORD PTR [rsp+0x9c],eax
  416566:	jle    0x4166ee
  41656c:	mulsd  xmm0,xmm3
  416570:	add    rbx,0x1
  416574:	pxor   xmm2,xmm2
  416578:	mulsd  xmm1,xmm3
  41657c:	cvttsd2si eax,xmm0
  416580:	cvtsi2sd xmm2,eax
  416584:	add    eax,0x30
  416587:	mov    BYTE PTR [rbx-0x1],al
  41658a:	subsd  xmm0,xmm2
  41658e:	ucomisd xmm1,xmm0
  416592:	jbe    0x416540
  416594:	ucomisd xmm0,xmm6
  416598:	lea    ebp,[rcx+0x1]
  41659b:	jp     0x4165a3
  41659d:	je     0x416ef7
  4165a3:	mov    r15d,0x10
  4165a9:	nop    DWORD PTR [rax+0x0]
  4165b0:	mov    rcx,rsi
  4165b3:	call   0x417800
  4165b8:	cmp    QWORD PTR [rsp+0x138],0x0
  4165c1:	mov    rax,QWORD PTR [rsp+0x130]
  4165c9:	mov    BYTE PTR [rbx],0x0
  4165cc:	mov    DWORD PTR [rax],ebp
  4165ce:	je     0x4165db
  4165d0:	mov    rax,QWORD PTR [rsp+0x138]
  4165d8:	mov    QWORD PTR [rax],rbx
  4165db:	mov    rax,QWORD PTR [rsp+0x28]
  4165e0:	or     DWORD PTR [rax],r15d
  4165e3:	mov    rax,QWORD PTR [rsp+0x48]
  4165e8:	jmp    0x416167
  4165ed:	nop    DWORD PTR [rax]
  4165f0:	mov    DWORD PTR [rsi+0x14],0x0
  4165f7:	jmp    0x416111
  4165fc:	nop    DWORD PTR [rax+0x0]
  416600:	mov    edx,eax
  416602:	mov    rcx,rsi
  416605:	call   0x417490
  41660a:	mov    eax,DWORD PTR [rsp+0x9c]
  416611:	lea    r11d,[r13+rax*1+0x0]
  416616:	sub    r14d,eax
  416619:	jmp    0x41612b
  41661e:	xchg   ax,ax
  416620:	mov    DWORD PTR [rsp+0x120],0x0
  41662b:	add    ecx,0x3fe
  416631:	cmp    ecx,0x7f7
  416637:	setbe  al
  41663a:	jmp    0x41634f
  41663f:	nop
  416640:	mov    DWORD PTR [rsp+0x6c],0x0
  416648:	jmp    0x4162f0
  41664d:	nop    DWORD PTR [rax]
  416650:	mov    edx,DWORD PTR [rsp+0x128]
  416657:	test   edx,edx
  416659:	jle    0x416f0b
  41665f:	cmp    DWORD PTR [rsp+0x128],0xe
  416667:	setbe  bl
  41666a:	mov    ecx,DWORD PTR [rsp+0x128]
  416671:	and    ebx,eax
  416673:	mov    DWORD PTR [rsp+0x9c],ecx
  41667a:	mov    DWORD PTR [rsp+0x8c],ecx
  416681:	mov    DWORD PTR [rsp+0x68],ecx
  416685:	jmp    0x4163b9
  41668a:	movapd xmm0,xmm4
  41668e:	addsd  xmm0,xmm4
  416692:	addsd  xmm0,QWORD PTR [rip+0x8f76]        # 0x41f610
  41669a:	movq   rdx,xmm0
  41669f:	movq   rax,xmm0
  4166a4:	shr    rdx,0x20
  4166a8:	mov    eax,eax
  4166aa:	sub    edx,0x3400000
  4166b0:	shl    rdx,0x20
  4166b4:	or     rax,rdx
  4166b7:	movapd xmm1,xmm4
  4166bb:	mov    QWORD PTR [rsp+0x38],rax
  4166c0:	movsd  xmm0,QWORD PTR [rsp+0x38]
  4166c6:	subsd  xmm1,QWORD PTR [rip+0x8f4a]        # 0x41f618
  4166ce:	ucomisd xmm1,xmm0
  4166d2:	ja     0x416fb4
  4166d8:	movsd  xmm2,QWORD PTR [rip+0x8f40]        # 0x41f620
  4166e0:	xorpd  xmm0,xmm2
  4166e4:	ucomisd xmm0,xmm1
  4166e8:	ja     0x416acd
  4166ee:	movq   r9,xmm4
  4166f3:	mov    DWORD PTR [rsp+0x38],0x0
  4166fb:	nop    DWORD PTR [rax+rax*1+0x0]
  416700:	test   r11d,r11d
  416703:	js     0x4167a2
  416709:	movsxd rax,DWORD PTR [rsp+0x30]
  41670e:	cmp    eax,DWORD PTR [rbp+0x14]
  416711:	jg     0x4167a2
  416717:	mov    ebx,DWORD PTR [rsp+0x68]
  41671b:	mov    rdx,QWORD PTR [rip+0x91fe]        # 0x41f920
  416722:	test   ebx,ebx
  416724:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  416729:	jg     0x416e33
  41672f:	mov    eax,DWORD PTR [rsp+0x128]
  416736:	shr    eax,0x1f
  416739:	test   al,al
  41673b:	je     0x416e33
  416741:	test   ebx,ebx
  416743:	jne    0x416acd
  416749:	mulsd  xmm2,QWORD PTR [rip+0x8ec7]        # 0x41f618
  416751:	mov    QWORD PTR [rsp+0x38],r9
  416756:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41675c:	ucomisd xmm2,xmm5
  416760:	jae    0x416acd
  416766:	mov    ebp,DWORD PTR [rsp+0x30]
  41676a:	xor    r12d,r12d
  41676d:	xor    edi,edi
  41676f:	add    ebp,0x2
  416772:	mov    rax,QWORD PTR [rsp+0x48]
  416777:	mov    r15d,0x20
  41677d:	lea    rbx,[rax+0x1]
  416781:	mov    BYTE PTR [rax],0x31
  416784:	mov    rcx,r12
  416787:	call   0x417800
  41678c:	test   rdi,rdi
  41678f:	je     0x4165b0
  416795:	mov    rcx,rdi
  416798:	call   0x417800
  41679d:	jmp    0x4165b0
  4167a2:	mov    r9d,DWORD PTR [rsp+0x60]
  4167a7:	test   r9d,r9d
  4167aa:	je     0x416cb0
  4167b0:	mov    edx,DWORD PTR [rbp+0x4]
  4167b3:	sub    edi,r14d
  4167b6:	mov    ecx,r11d
  4167b9:	lea    eax,[rdi+0x1]
  4167bc:	sub    ecx,edi
  4167be:	cmp    ecx,edx
  4167c0:	mov    DWORD PTR [rsp+0x9c],eax
  4167c7:	jge    0x4167fc
  4167c9:	mov    ebx,DWORD PTR [rsp+0x120]
  4167d0:	lea    ecx,[rbx-0x3]
  4167d3:	and    ecx,0xfffffffd
  4167d6:	je     0x4167fc
  4167d8:	mov    ebx,DWORD PTR [rsp+0x68]
  4167dc:	sub    r11d,edx
  4167df:	lea    eax,[r11+0x1]
  4167e3:	test   ebx,ebx
  4167e5:	mov    DWORD PTR [rsp+0x9c],eax
  4167ec:	setg   cl
  4167ef:	cmp    ebx,eax
  4167f1:	setl   dl
  4167f4:	test   cl,dl
  4167f6:	je     0x416f3f
  4167fc:	cmp    DWORD PTR [rsp+0x120],0x1
  416804:	jle    0x416f3f
  41680a:	mov    ebx,DWORD PTR [rsp+0x58]
  41680e:	mov    eax,DWORD PTR [rsp+0x68]
  416812:	mov    r12d,ebx
  416815:	sub    eax,0x1
  416818:	sub    r12d,eax
  41681b:	cmp    ebx,eax
  41681d:	jge    0x416833
  41681f:	mov    edx,eax
  416821:	sub    edx,DWORD PTR [rsp+0x58]
  416825:	xor    r12d,r12d
  416828:	add    DWORD PTR [rsp+0x88],edx
  41682f:	mov    DWORD PTR [rsp+0x58],eax
  416833:	mov    eax,DWORD PTR [rsp+0x68]
  416837:	test   eax,eax
  416839:	js     0x4171d2
  41683f:	mov    ebx,DWORD PTR [rsp+0x50]
  416843:	mov    DWORD PTR [rsp+0x9c],eax
  41684a:	mov    ecx,0x1
  41684f:	add    DWORD PTR [rsp+0x50],eax
  416853:	add    DWORD PTR [rsp+0x40],eax
  416857:	call   0x417930
  41685c:	mov    rdi,rax
  41685f:	mov    ecx,DWORD PTR [rsp+0x40]
  416863:	test   ecx,ecx
  416865:	mov    eax,ecx
  416867:	jle    0x416885
  416869:	test   ebx,ebx
  41686b:	jle    0x416885
  41686d:	cmp    ecx,ebx
  41686f:	cmovg  eax,ebx
  416872:	sub    DWORD PTR [rsp+0x50],eax
  416876:	sub    ecx,eax
  416878:	mov    DWORD PTR [rsp+0x9c],eax
  41687f:	sub    ebx,eax
  416881:	mov    DWORD PTR [rsp+0x40],ecx
  416885:	mov    r8d,DWORD PTR [rsp+0x58]
  41688a:	test   r8d,r8d
  41688d:	jle    0x4168db
  41688f:	mov    ecx,DWORD PTR [rsp+0x60]
  416893:	test   ecx,ecx
  416895:	je     0x416cd0
  41689b:	test   r12d,r12d
  41689e:	jle    0x4168ce
  4168a0:	mov    rcx,rdi
  4168a3:	mov    edx,r12d
  4168a6:	call   0x417a90
  4168ab:	mov    rdx,rsi
  4168ae:	mov    rcx,rax
  4168b1:	mov    rdi,rax
  4168b4:	call   0x417960
  4168b9:	mov    rcx,rsi
  4168bc:	mov    QWORD PTR [rsp+0x70],rax
  4168c1:	call   0x417800
  4168c6:	mov    rax,QWORD PTR [rsp+0x70]
  4168cb:	mov    rsi,rax
  4168ce:	mov    edx,DWORD PTR [rsp+0x58]
  4168d2:	sub    edx,r12d
  4168d5:	jne    0x416cd4
  4168db:	mov    ecx,0x1
  4168e0:	call   0x417930
  4168e5:	mov    r12,rax
  4168e8:	mov    eax,DWORD PTR [rsp+0x88]
  4168ef:	test   eax,eax
  4168f1:	jle    0x416a20
  4168f7:	mov    rcx,r12
  4168fa:	mov    edx,eax
  4168fc:	call   0x417a90
  416901:	cmp    DWORD PTR [rsp+0x120],0x1
  416909:	mov    r12,rax
  41690c:	jg     0x416918
  41690e:	cmp    r14d,0x1
  416912:	je     0x4169dc
  416918:	xor    ebp,ebp
  41691a:	mov    eax,DWORD PTR [r12+0x14]
  41691f:	sub    eax,0x1
  416922:	cdqe   
  416924:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  41692a:	xor    eax,0x1f
  41692d:	sub    eax,DWORD PTR [rsp+0x40]
  416931:	mov    edx,DWORD PTR [rsp+0x50]
  416935:	sub    eax,0x4
  416938:	and    eax,0x1f
  41693b:	add    edx,eax
  41693d:	mov    r13d,eax
  416940:	mov    DWORD PTR [rsp+0x9c],eax
  416947:	test   edx,edx
  416949:	mov    ecx,eax
  41694b:	jle    0x41695f
  41694d:	mov    rcx,rsi
  416950:	call   0x417c00
  416955:	mov    ecx,DWORD PTR [rsp+0x9c]
  41695c:	mov    rsi,rax
  41695f:	mov    edx,DWORD PTR [rsp+0x40]
  416963:	add    edx,ecx
  416965:	test   edx,edx
  416967:	jle    0x416974
  416969:	mov    rcx,r12
  41696c:	call   0x417c00
  416971:	mov    r12,rax
  416974:	mov    eax,DWORD PTR [rsp+0x6c]
  416978:	test   eax,eax
  41697a:	jne    0x416cf1
  416980:	mov    r14d,DWORD PTR [rsp+0x68]
  416985:	test   r14d,r14d
  416988:	jg     0x416b41
  41698e:	cmp    DWORD PTR [rsp+0x120],0x2
  416996:	jle    0x416b41
  41699c:	mov    r11d,DWORD PTR [rsp+0x68]
  4169a1:	test   r11d,r11d
  4169a4:	jne    0x416ad2
  4169aa:	xor    r8d,r8d
  4169ad:	mov    rcx,r12
  4169b0:	mov    edx,0x5
  4169b5:	call   0x417870
  4169ba:	mov    rcx,rsi
  4169bd:	mov    rdx,rax
  4169c0:	mov    r12,rax
  4169c3:	call   0x417d20
  4169c8:	test   eax,eax
  4169ca:	jle    0x416ad2
  4169d0:	mov    ebp,DWORD PTR [rsp+0x30]
  4169d4:	add    ebp,0x2
  4169d7:	jmp    0x416772
  4169dc:	mov    eax,DWORD PTR [rbp+0x4]
  4169df:	add    eax,0x1
  4169e2:	cmp    r13d,eax
  4169e5:	jle    0x416918
  4169eb:	add    DWORD PTR [rsp+0x50],0x1
  4169f0:	add    DWORD PTR [rsp+0x40],0x1
  4169f5:	mov    ebp,0x1
  4169fa:	nop    WORD PTR [rax+rax*1+0x0]
  416a00:	mov    edx,DWORD PTR [rsp+0x88]
  416a07:	mov    eax,0x1f
  416a0c:	test   edx,edx
  416a0e:	je     0x41692d
  416a14:	jmp    0x41691a
  416a19:	nop    DWORD PTR [rax+0x0]
  416a20:	cmp    DWORD PTR [rsp+0x120],0x1
  416a28:	jg     0x416a30
  416a2a:	cmp    r14d,0x1
  416a2e:	je     0x416a34
  416a30:	xor    ebp,ebp
  416a32:	jmp    0x416a00
  416a34:	mov    eax,DWORD PTR [rbp+0x4]
  416a37:	xor    ebp,ebp
  416a39:	add    eax,0x1
  416a3c:	cmp    r13d,eax
  416a3f:	jle    0x416a00
  416a41:	jmp    0x4169eb
  416a43:	cmp    DWORD PTR [rsp+0x120],0x2
  416a4b:	mov    DWORD PTR [rsp+0x60],0x0
  416a53:	je     0x416650
  416a59:	pxor   xmm0,xmm0
  416a5d:	mov    QWORD PTR [rsp+0x60],r9
  416a62:	mov    DWORD PTR [rsp+0x68],r11d
  416a67:	cvtsi2sd xmm0,edi
  416a6b:	mulsd  xmm0,QWORD PTR [rip+0x8b7d]        # 0x41f5f0
  416a73:	cvttsd2si ecx,xmm0
  416a77:	add    ecx,0x3
  416a7a:	mov    DWORD PTR [rsp+0x9c],ecx
  416a81:	call   0x415e00
  416a86:	mov    QWORD PTR [rsp+0x48],rax
  416a8b:	mov    eax,DWORD PTR [rbp+0xc]
  416a8e:	mov    r11d,DWORD PTR [rsp+0x68]
  416a93:	mov    r9,QWORD PTR [rsp+0x60]
  416a98:	sub    eax,0x1
  416a9b:	mov    DWORD PTR [rsp+0x38],eax
  416a9f:	jne    0x416f4d
  416aa5:	mov    eax,0xffffffff
  416aaa:	mov    DWORD PTR [rsp+0x60],0x1
  416ab2:	mov    DWORD PTR [rsp+0x128],0x0
  416abd:	mov    DWORD PTR [rsp+0x8c],eax
  416ac4:	mov    DWORD PTR [rsp+0x68],eax
  416ac8:	jmp    0x416700
  416acd:	xor    r12d,r12d
  416ad0:	xor    edi,edi
  416ad2:	mov    ebp,DWORD PTR [rsp+0x128]
  416ad9:	mov    rbx,QWORD PTR [rsp+0x48]
  416ade:	mov    r15d,0x10
  416ae4:	neg    ebp
  416ae6:	jmp    0x416784
  416aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  416af0:	mov    eax,DWORD PTR [rsp+0x30]
  416af4:	sub    DWORD PTR [rsp+0x50],eax
  416af8:	mov    DWORD PTR [rsp+0x88],0x0
  416b03:	neg    eax
  416b05:	mov    DWORD PTR [rsp+0x58],eax
  416b09:	jmp    0x416329
  416b0e:	xchg   ax,ax
  416b10:	neg    eax
  416b12:	mov    DWORD PTR [rsp+0x40],0x0
  416b1a:	mov    DWORD PTR [rsp+0x50],eax
  416b1e:	jmp    0x41630a
  416b23:	pxor   xmm0,xmm0
  416b27:	cvtsi2sd xmm0,eax
  416b2b:	ucomisd xmm0,xmm1
  416b2f:	jp     0x416b37
  416b31:	je     0x41629b
  416b37:	sub    DWORD PTR [rsp+0x30],0x1
  416b3c:	jmp    0x41629b
  416b41:	mov    r10d,DWORD PTR [rsp+0x60]
  416b46:	test   r10d,r10d
  416b49:	je     0x416d50
  416b4f:	lea    edx,[rbx+r13*1]
  416b53:	test   edx,edx
  416b55:	jle    0x416b62
  416b57:	mov    rcx,rdi
  416b5a:	call   0x417c00
  416b5f:	mov    rdi,rax
  416b62:	test   ebp,ebp
  416b64:	mov    r13,rdi
  416b67:	jne    0x417205
  416b6d:	mov    DWORD PTR [rsp+0x9c],0x1
  416b78:	mov    rbx,QWORD PTR [rsp+0x48]
  416b7d:	mov    QWORD PTR [rsp+0x40],r12
  416b82:	mov    QWORD PTR [rsp+0x50],r15
  416b87:	jmp    0x416c4e
  416b8c:	nop    DWORD PTR [rax+0x0]
  416b90:	mov    rcx,r8
  416b93:	call   0x417800
  416b98:	mov    eax,r12d
  416b9b:	or     eax,DWORD PTR [rsp+0x120]
  416ba2:	jne    0x416bba
  416ba4:	mov    ecx,DWORD PTR [rsp+0x38]
  416ba8:	test   ecx,ecx
  416baa:	jne    0x416bba
  416bac:	mov    rax,QWORD PTR [rsp+0x50]
  416bb1:	test   BYTE PTR [rax],0x1
  416bb4:	je     0x417375
  416bba:	test   r14d,r14d
  416bbd:	js     0x4170d0
  416bc3:	or     r14d,DWORD PTR [rsp+0x120]
  416bcb:	jne    0x416bdb
  416bcd:	mov    rax,QWORD PTR [rsp+0x50]
  416bd2:	test   BYTE PTR [rax],0x1
  416bd5:	je     0x4170d0
  416bdb:	test   r12d,r12d
  416bde:	jle    0x416beb
  416be0:	cmp    DWORD PTR [rsp+0x38],0x2
  416be5:	jne    0x4172df
  416beb:	add    rbx,0x1
  416bef:	mov    BYTE PTR [rbx-0x1],bpl
  416bf3:	mov    eax,DWORD PTR [rsp+0x68]
  416bf7:	cmp    DWORD PTR [rsp+0x9c],eax
  416bfe:	je     0x41726b
  416c04:	xor    r8d,r8d
  416c07:	mov    rcx,rsi
  416c0a:	mov    edx,0xa
  416c0f:	call   0x417870
  416c14:	xor    r8d,r8d
  416c17:	cmp    rdi,r13
  416c1a:	mov    rsi,rax
  416c1d:	mov    edx,0xa
  416c22:	mov    rcx,rdi
  416c25:	je     0x416cc0
  416c2b:	call   0x417870
  416c30:	mov    rcx,r13
  416c33:	xor    r8d,r8d
  416c36:	mov    edx,0xa
  416c3b:	mov    rdi,rax
  416c3e:	call   0x417870
  416c43:	mov    r13,rax
  416c46:	add    DWORD PTR [rsp+0x9c],0x1
  416c4e:	mov    r12,QWORD PTR [rsp+0x40]
  416c53:	mov    rcx,rsi
  416c56:	mov    rdx,r12
  416c59:	call   0x415ea0
  416c5e:	mov    rdx,rdi
  416c61:	mov    rcx,rsi
  416c64:	mov    r15d,eax
  416c67:	lea    ebp,[rax+0x30]
  416c6a:	call   0x417d20
  416c6f:	mov    rcx,r12
  416c72:	mov    rdx,r13
  416c75:	mov    r14d,eax
  416c78:	call   0x417d70
  416c7d:	mov    r9d,DWORD PTR [rax+0x10]
  416c81:	mov    r8,rax
  416c84:	mov    r12d,0x1
  416c8a:	test   r9d,r9d
  416c8d:	jne    0x416b90
  416c93:	mov    rdx,rax
  416c96:	mov    rcx,rsi
  416c99:	mov    QWORD PTR [rsp+0x58],rax
  416c9e:	call   0x417d20
  416ca3:	mov    r8,QWORD PTR [rsp+0x58]
  416ca8:	mov    r12d,eax
  416cab:	jmp    0x416b90
  416cb0:	mov    r12d,DWORD PTR [rsp+0x58]
  416cb5:	mov    ebx,DWORD PTR [rsp+0x50]
  416cb9:	xor    edi,edi
  416cbb:	jmp    0x41685f
  416cc0:	call   0x417870
  416cc5:	mov    rdi,rax
  416cc8:	mov    r13,rax
  416ccb:	jmp    0x416c46
  416cd0:	mov    edx,DWORD PTR [rsp+0x58]
  416cd4:	mov    rcx,rsi
  416cd7:	call   0x417a90
  416cdc:	mov    rsi,rax
  416cdf:	jmp    0x4168db
  416ce4:	mov    DWORD PTR [rsp+0x60],0x0
  416cec:	jmp    0x416387
  416cf1:	mov    rdx,r12
  416cf4:	mov    rcx,rsi
  416cf7:	call   0x417d20
  416cfc:	test   eax,eax
  416cfe:	jns    0x416980
  416d04:	xor    r8d,r8d
  416d07:	mov    rcx,rsi
  416d0a:	mov    edx,0xa
  416d0f:	sub    DWORD PTR [rsp+0x30],0x1
  416d14:	call   0x417870
  416d19:	mov    rsi,rax
  416d1c:	mov    eax,DWORD PTR [rsp+0x60]
  416d20:	test   eax,eax
  416d22:	jne    0x4173e8
  416d28:	mov    eax,DWORD PTR [rsp+0x8c]
  416d2f:	test   eax,eax
  416d31:	jg     0x416d45
  416d33:	cmp    DWORD PTR [rsp+0x120],0x2
  416d3b:	mov    DWORD PTR [rsp+0x68],eax
  416d3f:	jg     0x41699c
  416d45:	mov    eax,DWORD PTR [rsp+0x8c]
  416d4c:	mov    DWORD PTR [rsp+0x68],eax
  416d50:	mov    DWORD PTR [rsp+0x9c],0x1
  416d5b:	mov    rbx,QWORD PTR [rsp+0x48]
  416d60:	mov    r13d,DWORD PTR [rsp+0x68]
  416d65:	jmp    0x416d8b
  416d67:	nop    WORD PTR [rax+rax*1+0x0]
  416d70:	mov    rcx,rsi
  416d73:	xor    r8d,r8d
  416d76:	mov    edx,0xa
  416d7b:	call   0x417870
  416d80:	add    DWORD PTR [rsp+0x9c],0x1
  416d88:	mov    rsi,rax
  416d8b:	mov    rdx,r12
  416d8e:	mov    rcx,rsi
  416d91:	add    rbx,0x1
  416d95:	call   0x415ea0
  416d9a:	lea    ebp,[rax+0x30]
  416d9d:	mov    BYTE PTR [rbx-0x1],bpl
  416da1:	cmp    DWORD PTR [rsp+0x9c],r13d
  416da9:	jl     0x416d70
  416dab:	xor    r14d,r14d
  416dae:	mov    eax,DWORD PTR [rsp+0x38]
  416db2:	test   eax,eax
  416db4:	je     0x41717c
  416dba:	cmp    eax,0x2
  416dbd:	je     0x4171ac
  416dc3:	cmp    DWORD PTR [rsi+0x14],0x1
  416dc7:	jle    0x417343
  416dcd:	movzx  edx,BYTE PTR [rbx-0x1]
  416dd1:	mov    rcx,QWORD PTR [rsp+0x48]
  416dd6:	jmp    0x416df0
  416dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  416de0:	cmp    rax,rcx
  416de3:	je     0x416f9c
  416de9:	movzx  edx,BYTE PTR [rax-0x1]
  416ded:	mov    rbx,rax
  416df0:	cmp    dl,0x39
  416df3:	lea    rax,[rbx-0x1]
  416df7:	je     0x416de0
  416df9:	add    edx,0x1
  416dfc:	mov    r15d,0x20
  416e02:	mov    BYTE PTR [rax],dl
  416e04:	mov    rcx,r12
  416e07:	call   0x417800
  416e0c:	test   rdi,rdi
  416e0f:	je     0x416eff
  416e15:	cmp    r14,rdi
  416e18:	je     0x416e27
  416e1a:	test   r14,r14
  416e1d:	je     0x416e27
  416e1f:	mov    rcx,r14
  416e22:	call   0x417800
  416e27:	mov    ebp,DWORD PTR [rsp+0x30]
  416e2b:	add    ebp,0x1
  416e2e:	jmp    0x416795
  416e33:	mov    QWORD PTR [rsp+0x40],r9
  416e38:	mov    rdi,QWORD PTR [rsp+0x48]
  416e3d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  416e43:	mov    DWORD PTR [rsp+0x9c],0x1
  416e4e:	movapd xmm1,xmm0
  416e52:	mov    rbx,rdi
  416e55:	add    rbx,0x1
  416e59:	divsd  xmm1,xmm2
  416e5d:	cvttsd2si eax,xmm1
  416e61:	pxor   xmm1,xmm1
  416e65:	cvtsi2sd xmm1,eax
  416e69:	lea    edx,[rax+0x30]
  416e6c:	mov    BYTE PTR [rdi],dl
  416e6e:	mulsd  xmm1,xmm2
  416e72:	subsd  xmm0,xmm1
  416e76:	ucomisd xmm0,xmm6
  416e7a:	jp     0x416e7e
  416e7c:	je     0x416ef0
  416e7e:	mov    edx,DWORD PTR [rsp+0x9c]
  416e85:	cmp    DWORD PTR [rsp+0x68],edx
  416e89:	je     0x416f77
  416e8f:	movsd  xmm3,QWORD PTR [rip+0x8769]        # 0x41f600
  416e97:	movapd xmm4,xmm6
  416e9b:	mov    ecx,DWORD PTR [rsp+0x68]
  416e9f:	jmp    0x416eb0
  416ea1:	mov    edx,DWORD PTR [rsp+0x9c]
  416ea8:	cmp    ecx,edx
  416eaa:	je     0x416f77
  416eb0:	mulsd  xmm0,xmm3
  416eb4:	add    edx,0x1
  416eb7:	add    rbx,0x1
  416ebb:	mov    DWORD PTR [rsp+0x9c],edx
  416ec2:	movapd xmm1,xmm0
  416ec6:	divsd  xmm1,xmm2
  416eca:	cvttsd2si eax,xmm1
  416ece:	pxor   xmm1,xmm1
  416ed2:	cvtsi2sd xmm1,eax
  416ed6:	lea    edx,[rax+0x30]
  416ed9:	mov    BYTE PTR [rbx-0x1],dl
  416edc:	mulsd  xmm1,xmm2
  416ee0:	subsd  xmm0,xmm1
  416ee4:	ucomisd xmm0,xmm6
  416ee8:	jp     0x416ea1
  416eea:	ucomisd xmm0,xmm4
  416eee:	jne    0x416ea1
  416ef0:	mov    ebp,DWORD PTR [rsp+0x30]
  416ef4:	add    ebp,0x1
  416ef7:	xor    r15d,r15d
  416efa:	jmp    0x4165b0
  416eff:	mov    ebp,DWORD PTR [rsp+0x30]
  416f03:	add    ebp,0x1
  416f06:	jmp    0x4165b0
  416f0b:	mov    ebx,0x1
  416f10:	mov    DWORD PTR [rsp+0x128],0x1
  416f1b:	jmp    0x41666a
  416f20:	cmp    DWORD PTR [rsp+0x68],0xe
  416f25:	mov    DWORD PTR [rsp+0x9c],0x1
  416f30:	mov    ecx,0x1
  416f35:	setbe  bl
  416f38:	and    ebx,eax
  416f3a:	jmp    0x4163b9
  416f3f:	mov    r12d,DWORD PTR [rsp+0x58]
  416f44:	mov    ebx,DWORD PTR [rsp+0x50]
  416f48:	jmp    0x41684a
  416f4d:	mov    eax,0xffffffff
  416f52:	xor    ebx,ebx
  416f54:	mov    DWORD PTR [rsp+0x60],0x1
  416f5c:	mov    DWORD PTR [rsp+0x8c],eax
  416f63:	mov    DWORD PTR [rsp+0x68],eax
  416f67:	mov    DWORD PTR [rsp+0x128],0x0
  416f72:	jmp    0x4163e3
  416f77:	mov    r10d,DWORD PTR [rsp+0x38]
  416f7c:	test   r10d,r10d
  416f7f:	je     0x41723e
  416f85:	cmp    DWORD PTR [rsp+0x38],0x1
  416f8a:	je     0x417331
  416f90:	mov    ebp,DWORD PTR [rsp+0x30]
  416f94:	add    ebp,0x1
  416f97:	jmp    0x4165a3
  416f9c:	mov    rax,QWORD PTR [rsp+0x48]
  416fa1:	add    DWORD PTR [rsp+0x30],0x1
  416fa6:	mov    r15d,0x20
  416fac:	mov    BYTE PTR [rax],0x31
  416faf:	jmp    0x416e04
  416fb4:	mov    ebp,0x2
  416fb9:	xor    r12d,r12d
  416fbc:	xor    edi,edi
  416fbe:	jmp    0x416772
  416fc3:	mov    r10,QWORD PTR [rip+0x8956]        # 0x41f920
  416fca:	mov    QWORD PTR [rsp+0x38],rax
  416fcf:	movsd  xmm3,QWORD PTR [rsp+0x38]
  416fd5:	mov    DWORD PTR [rsp+0x9c],0x1
  416fe0:	mov    rbx,QWORD PTR [rsp+0x48]
  416fe5:	movsd  xmm1,QWORD PTR [rip+0x8613]        # 0x41f600
  416fed:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  416ff3:	jmp    0x417003
  416ff5:	mulsd  xmm0,xmm1
  416ff9:	add    edx,0x1
  416ffc:	mov    DWORD PTR [rsp+0x9c],edx
  417003:	cvttsd2si eax,xmm0
  417007:	test   eax,eax
  417009:	je     0x417017
  41700b:	pxor   xmm2,xmm2
  41700f:	cvtsi2sd xmm2,eax
  417013:	subsd  xmm0,xmm2
  417017:	add    rbx,0x1
  41701b:	add    eax,0x30
  41701e:	mov    BYTE PTR [rbx-0x1],al
  417021:	mov    edx,DWORD PTR [rsp+0x9c]
  417028:	cmp    edx,r9d
  41702b:	jne    0x416ff5
  41702d:	movsd  xmm1,QWORD PTR [rip+0x85fb]        # 0x41f630
  417035:	movapd xmm2,xmm3
  417039:	addsd  xmm2,xmm1
  41703d:	ucomisd xmm0,xmm2
  417041:	ja     0x417097
  417043:	subsd  xmm1,xmm3
  417047:	ucomisd xmm1,xmm0
  41704b:	jbe    0x4166ee
  417051:	ucomisd xmm0,xmm6
  417055:	jp     0x4173dd
  41705b:	jne    0x4173dd
  417061:	xor    r15d,r15d
  417064:	jmp    0x417077
  417066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417070:	movzx  eax,BYTE PTR [rbx-0x2]
  417074:	mov    rbx,rdx
  417077:	cmp    al,0x30
  417079:	lea    rdx,[rbx-0x1]
  41707d:	je     0x417070
  41707f:	lea    ebp,[rcx+0x1]
  417082:	jmp    0x4165b0
  417087:	test   al,0x1
  417089:	mov    ecx,DWORD PTR [rsp+0x30]
  41708d:	movzx  eax,BYTE PTR [rbx-0x1]
  417091:	je     0x4173dd
  417097:	mov    r8,QWORD PTR [rsp+0x48]
  41709c:	jmp    0x4170b0
  41709e:	xchg   ax,ax
  4170a0:	cmp    rdx,r8
  4170a3:	je     0x4171ec
  4170a9:	movzx  eax,BYTE PTR [rdx-0x1]
  4170ad:	mov    rbx,rdx
  4170b0:	cmp    al,0x39
  4170b2:	lea    rdx,[rbx-0x1]
  4170b6:	je     0x4170a0
  4170b8:	mov    QWORD PTR [rsp+0x48],r8
  4170bd:	add    eax,0x1
  4170c0:	mov    BYTE PTR [rdx],al
  4170c2:	lea    ebp,[rcx+0x1]
  4170c5:	mov    r15d,0x20
  4170cb:	jmp    0x4165b0
  4170d0:	mov    edx,DWORD PTR [rsp+0x38]
  4170d4:	mov    eax,r12d
  4170d7:	mov    r14d,ebp
  4170da:	mov    r12,QWORD PTR [rsp+0x40]
  4170df:	test   edx,edx
  4170e1:	je     0x417311
  4170e7:	cmp    DWORD PTR [rsi+0x14],0x1
  4170eb:	jle    0x417307
  4170f1:	cmp    DWORD PTR [rsp+0x38],0x2
  4170f6:	jne    0x417147
  4170f8:	jmp    0x417326
  4170fd:	nop    DWORD PTR [rax]
  417100:	add    rbx,0x1
  417104:	xor    r8d,r8d
  417107:	mov    rcx,r13
  41710a:	mov    BYTE PTR [rbx-0x1],r14b
  41710e:	mov    edx,0xa
  417113:	call   0x417870
  417118:	cmp    rdi,r13
  41711b:	mov    rcx,rsi
  41711e:	mov    edx,0xa
  417123:	cmove  rdi,rax
  417127:	xor    r8d,r8d
  41712a:	mov    rbp,rax
  41712d:	call   0x417870
  417132:	mov    rdx,r12
  417135:	mov    rcx,rax
  417138:	mov    rsi,rax
  41713b:	call   0x415ea0
  417140:	lea    r14d,[rax+0x30]
  417144:	mov    r13,rbp
  417147:	mov    rdx,r13
  41714a:	mov    rcx,r12
  41714d:	call   0x417d20
  417152:	test   eax,eax
  417154:	jg     0x417100
  417156:	cmp    r14d,0x39
  41715a:	je     0x417356
  417160:	add    r14d,0x1
  417164:	mov    r15d,0x20
  41716a:	mov    BYTE PTR [rbx],r14b
  41716d:	mov    r14,rdi
  417170:	add    rbx,0x1
  417174:	mov    rdi,r13
  417177:	jmp    0x416e04
  41717c:	mov    rcx,rsi
  41717f:	mov    edx,0x1
  417184:	call   0x417c00
  417189:	mov    rdx,r12
  41718c:	mov    rcx,rax
  41718f:	mov    rsi,rax
  417192:	call   0x417d20
  417197:	cmp    eax,0x0
  41719a:	jg     0x416dcd
  4171a0:	jne    0x4171ac
  4171a2:	and    bpl,0x1
  4171a6:	jne    0x416dcd
  4171ac:	cmp    DWORD PTR [rsi+0x14],0x1
  4171b0:	mov    r15d,0x10
  4171b6:	jg     0x4171c3
  4171b8:	jmp    0x41744d
  4171bd:	nop    DWORD PTR [rax]
  4171c0:	mov    rbx,rax
  4171c3:	cmp    BYTE PTR [rbx-0x1],0x30
  4171c7:	lea    rax,[rbx-0x1]
  4171cb:	je     0x4171c0
  4171cd:	jmp    0x416e04
  4171d2:	mov    ebx,DWORD PTR [rsp+0x50]
  4171d6:	mov    DWORD PTR [rsp+0x9c],0x0
  4171e1:	xor    eax,eax
  4171e3:	sub    ebx,DWORD PTR [rsp+0x68]
  4171e7:	jmp    0x41684a
  4171ec:	mov    QWORD PTR [rsp+0x48],r8
  4171f1:	add    ecx,0x1
  4171f4:	mov    BYTE PTR [r8],0x30
  4171f8:	mov    rdx,r8
  4171fb:	mov    eax,0x31
  417200:	jmp    0x4170c0
  417205:	mov    ecx,DWORD PTR [rdi+0x8]
  417208:	call   0x4176f0
  41720d:	lea    rcx,[rax+0x10]
  417211:	mov    rbx,rax
  417214:	movsxd rax,DWORD PTR [rdi+0x14]
  417218:	lea    rdx,[rdi+0x10]
  41721c:	lea    r8,[rax*4+0x8]
  417224:	call   0x4185a0
  417229:	mov    edx,0x1
  41722e:	mov    rcx,rbx
  417231:	call   0x417c00
  417236:	mov    r13,rax
  417239:	jmp    0x416b6d
  41723e:	addsd  xmm0,xmm0
  417242:	ucomisd xmm0,xmm2
  417246:	ja     0x417331
  41724c:	ucomisd xmm2,xmm0
  417250:	jp     0x417258
  417252:	je     0x417087
  417258:	movzx  eax,BYTE PTR [rbx-0x1]
  41725c:	mov    ecx,DWORD PTR [rsp+0x30]
  417260:	mov    r15d,0x10
  417266:	jmp    0x417077
  41726b:	mov    r14,rdi
  41726e:	mov    r12,QWORD PTR [rsp+0x40]
  417273:	mov    rdi,r13
  417276:	jmp    0x416dae
  41727b:	mov    eax,DWORD PTR [rsp+0x68]
  41727f:	test   eax,eax
  417281:	je     0x41668a
  417287:	mov    r9d,DWORD PTR [rsp+0x8c]
  41728f:	test   r9d,r9d
  417292:	jle    0x4166ee
  417298:	movsd  xmm0,QWORD PTR [rip+0x8360]        # 0x41f600
  4172a0:	mov    ecx,0xffffffff
  4172a5:	movsd  xmm1,QWORD PTR [rip+0x835b]        # 0x41f608
  4172ad:	mulsd  xmm0,xmm4
  4172b1:	mulsd  xmm1,xmm0
  4172b5:	addsd  xmm1,QWORD PTR [rip+0x8353]        # 0x41f610
  4172bd:	movq   rdx,xmm1
  4172c2:	movq   rax,xmm1
  4172c7:	shr    rdx,0x20
  4172cb:	mov    eax,eax
  4172cd:	sub    edx,0x3400000
  4172d3:	shl    rdx,0x20
  4172d7:	or     rax,rdx
  4172da:	jmp    0x416492
  4172df:	cmp    ebp,0x39
  4172e2:	mov    r12,QWORD PTR [rsp+0x40]
  4172e7:	mov    rax,rbx
  4172ea:	je     0x417359
  4172ec:	add    ebp,0x1
  4172ef:	mov    r14,rdi
  4172f2:	add    rbx,0x1
  4172f6:	mov    BYTE PTR [rax],bpl
  4172f9:	mov    rdi,r13
  4172fc:	mov    r15d,0x20
  417302:	jmp    0x416e04
  417307:	cmp    DWORD PTR [rsi+0x18],0x0
  41730b:	jne    0x4170f1
  417311:	test   eax,eax
  417313:	jg     0x4173a9
  417319:	xor    r15d,r15d
  41731c:	cmp    DWORD PTR [rsi+0x14],0x1
  417320:	jle    0x417428
  417326:	mov    r15d,0x10
  41732c:	jmp    0x41716a
  417331:	movzx  eax,BYTE PTR [rbx-0x1]
  417335:	mov    ecx,DWORD PTR [rsp+0x30]
  417339:	mov    r8,QWORD PTR [rsp+0x48]
  41733e:	jmp    0x4170b0
  417343:	mov    eax,DWORD PTR [rsi+0x18]
  417346:	test   eax,eax
  417348:	jne    0x416dcd
  41734e:	xor    r15d,r15d
  417351:	jmp    0x4171c3
  417356:	mov    rax,rbx
  417359:	mov    r14,rdi
  41735c:	add    rbx,0x1
  417360:	mov    rdi,r13
  417363:	mov    BYTE PTR [rax],0x39
  417366:	mov    edx,0x39
  41736b:	mov    rcx,QWORD PTR [rsp+0x48]
  417370:	jmp    0x416df0
  417375:	cmp    ebp,0x39
  417378:	mov    r12,QWORD PTR [rsp+0x40]
  41737d:	mov    rax,rbx
  417380:	je     0x417356
  417382:	test   r14d,r14d
  417385:	jle    0x417460
  41738b:	mov    ebp,r15d
  41738e:	mov    r15d,0x20
  417394:	add    ebp,0x31
  417397:	mov    r14,rdi
  41739a:	add    rbx,0x1
  41739e:	mov    BYTE PTR [rax],bpl
  4173a1:	mov    rdi,r13
  4173a4:	jmp    0x416e04
  4173a9:	mov    rcx,rsi
  4173ac:	mov    edx,0x1
  4173b1:	call   0x417c00
  4173b6:	mov    rdx,r12
  4173b9:	mov    rcx,rax
  4173bc:	mov    rsi,rax
  4173bf:	call   0x417d20
  4173c4:	cmp    eax,0x0
  4173c7:	jle    0x41743a
  4173c9:	cmp    ebp,0x39
  4173cc:	je     0x417356
  4173ce:	lea    r14d,[rbp+0x1]
  4173d2:	mov    r15d,0x20
  4173d8:	jmp    0x41731c
  4173dd:	mov    r15d,0x10
  4173e3:	jmp    0x417077
  4173e8:	xor    r8d,r8d
  4173eb:	mov    rcx,rdi
  4173ee:	mov    edx,0xa
  4173f3:	call   0x417870
  4173f8:	mov    rdi,rax
  4173fb:	mov    eax,DWORD PTR [rsp+0x8c]
  417402:	test   eax,eax
  417404:	jg     0x417418
  417406:	cmp    DWORD PTR [rsp+0x120],0x2
  41740e:	mov    DWORD PTR [rsp+0x68],eax
  417412:	jg     0x41699c
  417418:	mov    eax,DWORD PTR [rsp+0x8c]
  41741f:	mov    DWORD PTR [rsp+0x68],eax
  417423:	jmp    0x416b4f
  417428:	cmp    DWORD PTR [rsi+0x18],0x0
  41742c:	mov    eax,0x10
  417431:	cmovne r15d,eax
  417435:	jmp    0x41716a
  41743a:	jne    0x417442
  41743c:	test   bpl,0x1
  417440:	jne    0x4173c9
  417442:	mov    r15d,0x20
  417448:	jmp    0x41731c
  41744d:	cmp    DWORD PTR [rsi+0x18],0x1
  417451:	sbb    r15d,r15d
  417454:	not    r15d
  417457:	and    r15d,0x10
  41745b:	jmp    0x4171c3
  417460:	cmp    DWORD PTR [rsi+0x14],0x1
  417464:	mov    r15d,0x10
  41746a:	jg     0x417397
  417470:	cmp    DWORD PTR [rsi+0x18],0x1
  417474:	sbb    r15d,r15d
  417477:	not    r15d
  41747a:	and    r15d,0x10
  41747e:	jmp    0x417397
  417483:	xor    eax,eax
  417485:	jmp    0x416167
  41748a:	nop
  41748b:	nop
  41748c:	nop
  41748d:	nop
  41748e:	nop
  41748f:	nop
  417490:	push   rbp
  417491:	push   rdi
  417492:	push   rsi
  417493:	push   rbx
  417494:	mov    rsi,rcx
  417497:	lea    r10,[rcx+0x18]
  41749b:	movsxd rcx,DWORD PTR [rcx+0x14]
  41749f:	mov    eax,edx
  4174a1:	sar    eax,0x5
  4174a4:	cmp    eax,ecx
  4174a6:	jge    0x417530
  4174ac:	cdqe   
  4174ae:	and    edx,0x1f
  4174b1:	lea    rbx,[r10+rcx*4]
  4174b5:	lea    rdi,[r10+rax*4]
  4174b9:	je     0x417543
  4174bf:	mov    r9d,DWORD PTR [rdi]
  4174c2:	lea    r8,[rdi+0x4]
  4174c6:	mov    ebp,0x20
  4174cb:	mov    ecx,edx
  4174cd:	sub    ebp,edx
  4174cf:	shr    r9d,cl
  4174d2:	cmp    rbx,r8
  4174d5:	jbe    0x417588
  4174db:	mov    r11,r10
  4174de:	xchg   ax,ax
  4174e0:	mov    eax,DWORD PTR [r8]
  4174e3:	mov    ecx,ebp
  4174e5:	add    r11,0x4
  4174e9:	add    r8,0x4
  4174ed:	shl    eax,cl
  4174ef:	mov    ecx,edx
  4174f1:	or     eax,r9d
  4174f4:	mov    DWORD PTR [r11-0x4],eax
  4174f8:	mov    r9d,DWORD PTR [r8-0x4]
  4174fc:	shr    r9d,cl
  4174ff:	cmp    rbx,r8
  417502:	ja     0x4174e0
  417504:	sub    rbx,rdi
  417507:	lea    rax,[rbx-0x5]
  41750b:	shr    rax,0x2
  41750f:	lea    rax,[r10+rax*4+0x4]
  417514:	test   r9d,r9d
  417517:	mov    DWORD PTR [rax],r9d
  41751a:	je     0x417520
  41751c:	add    rax,0x4
  417520:	sub    rax,r10
  417523:	shr    rax,0x2
  417527:	jmp    0x41757c
  417529:	nop    DWORD PTR [rax+0x0]
  417530:	mov    DWORD PTR [rsi+0x14],0x0
  417537:	mov    DWORD PTR [rsi+0x18],0x0
  41753e:	pop    rbx
  41753f:	pop    rsi
  417540:	pop    rdi
  417541:	pop    rbp
  417542:	ret    
  417543:	cmp    rbx,rdi
  417546:	mov    rdx,r10
  417549:	mov    rax,rdi
  41754c:	jbe    0x417530
  41754e:	xchg   ax,ax
  417550:	add    rax,0x4
  417554:	mov    r8d,DWORD PTR [rax-0x4]
  417558:	add    rdx,0x4
  41755c:	cmp    rbx,rax
  41755f:	mov    DWORD PTR [rdx-0x4],r8d
  417563:	ja     0x417550
  417565:	not    rdi
  417568:	lea    rax,[rdi+rbx*1]
  41756c:	shr    rax,0x2
  417570:	lea    rax,[rax*4+0x4]
  417578:	shr    rax,0x2
  41757c:	test   eax,eax
  41757e:	mov    DWORD PTR [rsi+0x14],eax
  417581:	je     0x417537
  417583:	pop    rbx
  417584:	pop    rsi
  417585:	pop    rdi
  417586:	pop    rbp
  417587:	ret    
  417588:	mov    rax,r10
  41758b:	jmp    0x417514
  41758d:	nop    DWORD PTR [rax]
  417590:	movsxd rax,DWORD PTR [rcx+0x14]
  417594:	lea    rdx,[rcx+0x18]
  417598:	lea    r8,[rdx+rax*4]
  41759c:	cmp    rdx,r8
  41759f:	jae    0x4175cb
  4175a1:	mov    ecx,DWORD PTR [rcx+0x18]
  4175a4:	xor    eax,eax
  4175a6:	test   ecx,ecx
  4175a8:	je     0x4175b6
  4175aa:	jmp    0x4175c4
  4175ac:	nop    DWORD PTR [rax+0x0]
  4175b0:	mov    ecx,DWORD PTR [rdx]
  4175b2:	test   ecx,ecx
  4175b4:	jne    0x4175c4
  4175b6:	add    rdx,0x4
  4175ba:	add    eax,0x20
  4175bd:	cmp    r8,rdx
  4175c0:	ja     0x4175b0
  4175c2:	repz ret 
  4175c4:	tzcnt  ecx,ecx
  4175c8:	add    eax,ecx
  4175ca:	ret    
  4175cb:	xor    eax,eax
  4175cd:	ret    
  4175ce:	nop
  4175cf:	nop
  4175d0:	push   rsi
  4175d1:	push   rbx
  4175d2:	sub    rsp,0x28
  4175d6:	mov    eax,DWORD PTR [rip+0xd474]        # 0x424a50
  4175dc:	movsxd rsi,ecx
  4175df:	cmp    eax,0x2
  4175e2:	je     0x41764d
  4175e4:	test   eax,eax
  4175e6:	je     0x417612
  4175e8:	cmp    eax,0x1
  4175eb:	jne    0x41760b
  4175ed:	mov    rbx,QWORD PTR [rip+0xe07c]        # 0x425670
  4175f4:	mov    ecx,0x1
  4175f9:	call   rbx
  4175fb:	mov    eax,DWORD PTR [rip+0xd44f]        # 0x424a50
  417601:	cmp    eax,0x1
  417604:	je     0x4175f4
  417606:	cmp    eax,0x2
  417609:	je     0x41764d
  41760b:	add    rsp,0x28
  41760f:	pop    rbx
  417610:	pop    rsi
  417611:	ret    
  417612:	mov    al,0x1
  417614:	xchg   DWORD PTR [rip+0xd436],eax        # 0x424a50
  41761a:	test   eax,eax
  41761c:	jne    0x417670
  41761e:	lea    rcx,[rip+0xd45b]        # 0x424a80
  417625:	mov    rbx,QWORD PTR [rip+0xdff4]        # 0x425620
  41762c:	call   rbx
  41762e:	lea    rcx,[rip+0xd473]        # 0x424aa8
  417635:	call   rbx
  417637:	lea    rcx,[rip+0x62]        # 0x4176a0
  41763e:	call   0x411bb0
  417643:	mov    DWORD PTR [rip+0xd403],0x2        # 0x424a50
  41764d:	lea    rdx,[rsi+rsi*4]
  417651:	lea    rax,[rip+0xd428]        # 0x424a80
  417658:	lea    rcx,[rax+rdx*8]
  41765c:	mov    rax,QWORD PTR [rip+0xdf5d]        # 0x4255c0
  417663:	add    rsp,0x28
  417667:	pop    rbx
  417668:	pop    rsi
  417669:	rex.W jmp rax
  41766c:	nop    DWORD PTR [rax+0x0]
  417670:	cmp    eax,0x2
  417673:	je     0x417690
  417675:	mov    eax,DWORD PTR [rip+0xd3d5]        # 0x424a50
  41767b:	cmp    eax,0x1
  41767e:	je     0x4175ed
  417684:	jmp    0x417606
  417686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417690:	mov    DWORD PTR [rip+0xd3b6],0x2        # 0x424a50
  41769a:	jmp    0x41764d
  41769c:	nop    DWORD PTR [rax+0x0]
  4176a0:	push   rbx
  4176a1:	sub    rsp,0x20
  4176a5:	mov    eax,0x3
  4176aa:	xchg   DWORD PTR [rip+0xd3a0],eax        # 0x424a50
  4176b0:	cmp    eax,0x2
  4176b3:	je     0x4176c0
  4176b5:	add    rsp,0x20
  4176b9:	pop    rbx
  4176ba:	ret    
  4176bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4176c0:	mov    rbx,QWORD PTR [rip+0xdef1]        # 0x4255b8
  4176c7:	lea    rcx,[rip+0xd3b2]        # 0x424a80
  4176ce:	call   rbx
  4176d0:	lea    rcx,[rip+0xd3d1]        # 0x424aa8
  4176d7:	mov    rax,rbx
  4176da:	add    rsp,0x20
  4176de:	pop    rbx
  4176df:	rex.W jmp rax
  4176e2:	nop    DWORD PTR [rax+0x0]
  4176e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4176f0:	push   rdi
  4176f1:	push   rsi
  4176f2:	push   rbx
  4176f3:	sub    rsp,0x20
  4176f7:	mov    ebx,ecx
  4176f9:	xor    ecx,ecx
  4176fb:	call   0x4175d0
  417700:	cmp    ebx,0x9
  417703:	jg     0x417740
  417705:	lea    rdx,[rip+0xd2f4]        # 0x424a00
  41770c:	movsxd rcx,ebx
  41770f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  417713:	test   rdi,rdi
  417716:	je     0x4177a0
  41771c:	cmp    DWORD PTR [rip+0xd32d],0x2        # 0x424a50
  417723:	mov    r8,QWORD PTR [rdi]
  417726:	mov    QWORD PTR [rdx+rcx*8],r8
  41772a:	jne    0x417786
  41772c:	lea    rcx,[rip+0xd34d]        # 0x424a80
  417733:	call   QWORD PTR [rip+0xdef7]        # 0x425630
  417739:	jmp    0x417786
  41773b:	nop    DWORD PTR [rax+rax*1+0x0]
  417740:	mov    eax,0x1
  417745:	mov    ecx,ebx
  417747:	shl    eax,cl
  417749:	mov    esi,eax
  41774b:	lea    eax,[rax-0x1]
  41774e:	cdqe   
  417750:	lea    rdx,[rax*4+0x27]
  417758:	shr    rdx,0x3
  41775c:	mov    edx,edx
  41775e:	lea    rcx,[rdx*8+0x0]
  417766:	call   0x4185a8
  41776b:	test   rax,rax
  41776e:	mov    rdi,rax
  417771:	je     0x4177fa
  417777:	cmp    DWORD PTR [rip+0xd2d2],0x2        # 0x424a50
  41777e:	mov    DWORD PTR [rdi+0x8],ebx
  417781:	mov    DWORD PTR [rdi+0xc],esi
  417784:	je     0x41772c
  417786:	mov    DWORD PTR [rdi+0x14],0x0
  41778d:	mov    DWORD PTR [rdi+0x10],0x0
  417794:	mov    rax,rdi
  417797:	add    rsp,0x20
  41779b:	pop    rbx
  41779c:	pop    rsi
  41779d:	pop    rdi
  41779e:	ret    
  41779f:	nop
  4177a0:	mov    ecx,ebx
  4177a2:	mov    eax,0x1
  4177a7:	mov    rdi,QWORD PTR [rip+0x2682]        # 0x419e30
  4177ae:	shl    eax,cl
  4177b0:	lea    rcx,[rip+0xc949]        # 0x424100
  4177b7:	lea    edx,[rax-0x1]
  4177ba:	mov    esi,eax
  4177bc:	mov    rax,rdi
  4177bf:	movsxd rdx,edx
  4177c2:	sub    rax,rcx
  4177c5:	lea    rdx,[rdx*4+0x27]
  4177cd:	mov    rcx,rax
  4177d0:	sar    rcx,0x3
  4177d4:	shr    rdx,0x3
  4177d8:	mov    edx,edx
  4177da:	add    rcx,rdx
  4177dd:	cmp    rcx,0x120
  4177e4:	ja     0x41775e
  4177ea:	lea    rdx,[rdi+rdx*8]
  4177ee:	mov    QWORD PTR [rip+0x263b],rdx        # 0x419e30
  4177f5:	jmp    0x417777
  4177fa:	xor    eax,eax
  4177fc:	jmp    0x417797
  4177fe:	xchg   ax,ax
  417800:	push   rbx
  417801:	sub    rsp,0x20
  417805:	test   rcx,rcx
  417808:	je     0x417839
  41780a:	cmp    DWORD PTR [rcx+0x8],0x9
  41780e:	jg     0x417840
  417810:	mov    rbx,rcx
  417813:	xor    ecx,ecx
  417815:	call   0x4175d0
  41781a:	movsxd rdx,DWORD PTR [rbx+0x8]
  41781e:	lea    rax,[rip+0xd1db]        # 0x424a00
  417825:	cmp    DWORD PTR [rip+0xd224],0x2        # 0x424a50
  41782c:	mov    rcx,QWORD PTR [rax+rdx*8]
  417830:	mov    QWORD PTR [rax+rdx*8],rbx
  417834:	mov    QWORD PTR [rbx],rcx
  417837:	je     0x417850
  417839:	add    rsp,0x20
  41783d:	pop    rbx
  41783e:	ret    
  41783f:	nop
  417840:	add    rsp,0x20
  417844:	pop    rbx
  417845:	jmp    0x4185e0
  41784a:	nop    WORD PTR [rax+rax*1+0x0]
  417850:	mov    rax,QWORD PTR [rip+0xddd9]        # 0x425630
  417857:	lea    rcx,[rip+0xd222]        # 0x424a80
  41785e:	add    rsp,0x20
  417862:	pop    rbx
  417863:	rex.W jmp rax
  417866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417870:	push   rbp
  417871:	push   rdi
  417872:	push   rsi
  417873:	push   rbx
  417874:	sub    rsp,0x28
  417878:	mov    esi,DWORD PTR [rcx+0x14]
  41787b:	xor    r9d,r9d
  41787e:	lea    r10,[rcx+0x18]
  417882:	mov    rdi,rcx
  417885:	movsxd rbx,r8d
  417888:	movsxd rdx,edx
  41788b:	nop    DWORD PTR [rax+rax*1+0x0]
  417890:	mov    eax,DWORD PTR [r10+r9*4]
  417894:	imul   rax,rdx
  417898:	add    rax,rbx
  41789b:	mov    rbx,rax
  41789e:	mov    DWORD PTR [r10+r9*4],eax
  4178a2:	add    r9,0x1
  4178a6:	shr    rbx,0x20
  4178aa:	cmp    esi,r9d
  4178ad:	jg     0x417890
  4178af:	test   rbx,rbx
  4178b2:	mov    rax,rdi
  4178b5:	je     0x4178cc
  4178b7:	cmp    esi,DWORD PTR [rdi+0xc]
  4178ba:	jge    0x4178d5
  4178bc:	movsxd rax,esi
  4178bf:	add    esi,0x1
  4178c2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4178c6:	mov    DWORD PTR [rdi+0x14],esi
  4178c9:	mov    rax,rdi
  4178cc:	add    rsp,0x28
  4178d0:	pop    rbx
  4178d1:	pop    rsi
  4178d2:	pop    rdi
  4178d3:	pop    rbp
  4178d4:	ret    
  4178d5:	mov    eax,DWORD PTR [rdi+0x8]
  4178d8:	lea    ecx,[rax+0x1]
  4178db:	call   0x4176f0
  4178e0:	test   rax,rax
  4178e3:	mov    rbp,rax
  4178e6:	je     0x41791e
  4178e8:	lea    rcx,[rax+0x10]
  4178ec:	movsxd rax,DWORD PTR [rdi+0x14]
  4178f0:	lea    rdx,[rdi+0x10]
  4178f4:	lea    r8,[rax*4+0x8]
  4178fc:	call   0x4185a0
  417901:	mov    rcx,rdi
  417904:	mov    rdi,rbp
  417907:	call   0x417800
  41790c:	movsxd rax,esi
  41790f:	add    esi,0x1
  417912:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  417916:	mov    DWORD PTR [rdi+0x14],esi
  417919:	mov    rax,rdi
  41791c:	jmp    0x4178cc
  41791e:	xor    eax,eax
  417920:	jmp    0x4178cc
  417922:	nop    DWORD PTR [rax+0x0]
  417926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417930:	push   rbx
  417931:	sub    rsp,0x20
  417935:	mov    ebx,ecx
  417937:	mov    ecx,0x1
  41793c:	call   0x4176f0
  417941:	test   rax,rax
  417944:	je     0x417950
  417946:	mov    DWORD PTR [rax+0x18],ebx
  417949:	mov    DWORD PTR [rax+0x14],0x1
  417950:	add    rsp,0x20
  417954:	pop    rbx
  417955:	ret    
  417956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417960:	push   r14
  417962:	push   r13
  417964:	push   r12
  417966:	push   rbp
  417967:	push   rdi
  417968:	push   rsi
  417969:	push   rbx
  41796a:	sub    rsp,0x20
  41796e:	movsxd r13,DWORD PTR [rcx+0x14]
  417972:	movsxd rbx,DWORD PTR [rdx+0x14]
  417976:	mov    r12,rcx
  417979:	mov    r14,rdx
  41797c:	cmp    r13d,ebx
  41797f:	jl     0x417a81
  417985:	mov    eax,ebx
  417987:	movsxd rbx,r13d
  41798a:	movsxd r13,eax
  41798d:	xor    eax,eax
  41798f:	lea    esi,[rbx+r13*1]
  417993:	cmp    esi,DWORD PTR [r12+0xc]
  417998:	setg   al
  41799b:	add    eax,DWORD PTR [r12+0x8]
  4179a0:	mov    ecx,eax
  4179a2:	call   0x4176f0
  4179a7:	test   rax,rax
  4179aa:	je     0x417a8c
  4179b0:	lea    rdi,[rax+0x18]
  4179b4:	movsxd rdx,esi
  4179b7:	lea    rbp,[rdi+rdx*4]
  4179bb:	mov    r8,rdi
  4179be:	cmp    rdi,rbp
  4179c1:	jae    0x4179d3
  4179c3:	mov    DWORD PTR [r8],0x0
  4179ca:	add    r8,0x4
  4179ce:	cmp    rbp,r8
  4179d1:	ja     0x4179c3
  4179d3:	lea    rdx,[r14+0x18]
  4179d7:	add    r12,0x18
  4179db:	lea    rbx,[r12+rbx*4]
  4179df:	lea    r13,[rdx+r13*4]
  4179e3:	cmp    rdx,r13
  4179e6:	jae    0x417a49
  4179e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4179f0:	add    rdx,0x4
  4179f4:	mov    r11d,DWORD PTR [rdx-0x4]
  4179f8:	test   r11d,r11d
  4179fb:	je     0x417a40
  4179fd:	mov    r9,rdi
  417a00:	mov    r8,r12
  417a03:	xor    r10d,r10d
  417a06:	jmp    0x417a13
  417a08:	nop    DWORD PTR [rax+rax*1+0x0]
  417a10:	mov    r9,r14
  417a13:	add    r8,0x4
  417a17:	mov    ecx,DWORD PTR [r8-0x4]
  417a1b:	mov    r14d,DWORD PTR [r9]
  417a1e:	imul   rcx,r11
  417a22:	add    rcx,r14
  417a25:	lea    r14,[r9+0x4]
  417a29:	add    rcx,r10
  417a2c:	mov    r10,rcx
  417a2f:	mov    DWORD PTR [r14-0x4],ecx
  417a33:	shr    r10,0x20
  417a37:	cmp    rbx,r8
  417a3a:	ja     0x417a10
  417a3c:	mov    DWORD PTR [r9+0x4],r10d
  417a40:	add    rdi,0x4
  417a44:	cmp    r13,rdx
  417a47:	ja     0x4179f0
  417a49:	test   esi,esi
  417a4b:	jle    0x417a6f
  417a4d:	mov    r8d,DWORD PTR [rbp-0x4]
  417a51:	lea    rdx,[rbp-0x4]
  417a55:	test   r8d,r8d
  417a58:	je     0x417a6a
  417a5a:	jmp    0x417a6f
  417a5c:	nop    DWORD PTR [rax+0x0]
  417a60:	sub    rdx,0x4
  417a64:	mov    ecx,DWORD PTR [rdx]
  417a66:	test   ecx,ecx
  417a68:	jne    0x417a6f
  417a6a:	sub    esi,0x1
  417a6d:	jne    0x417a60
  417a6f:	mov    DWORD PTR [rax+0x14],esi
  417a72:	add    rsp,0x20
  417a76:	pop    rbx
  417a77:	pop    rsi
  417a78:	pop    rdi
  417a79:	pop    rbp
  417a7a:	pop    r12
  417a7c:	pop    r13
  417a7e:	pop    r14
  417a80:	ret    
  417a81:	mov    r12,rdx
  417a84:	mov    r14,rcx
  417a87:	jmp    0x41798d
  417a8c:	xor    eax,eax
  417a8e:	jmp    0x417a72
  417a90:	push   rbp
  417a91:	push   rdi
  417a92:	push   rsi
  417a93:	push   rbx
  417a94:	sub    rsp,0x28
  417a98:	mov    eax,edx
  417a9a:	mov    rbp,rcx
  417a9d:	mov    ebx,edx
  417a9f:	and    eax,0x3
  417aa2:	jne    0x417b30
  417aa8:	sar    ebx,0x2
  417aab:	mov    rax,rbp
  417aae:	test   ebx,ebx
  417ab0:	je     0x417afc
  417ab2:	mov    rdi,QWORD PTR [rip+0xc607]        # 0x4240c0
  417ab9:	test   rdi,rdi
  417abc:	jne    0x417ad2
  417abe:	jmp    0x417b7d
  417ac3:	sar    ebx,1
  417ac5:	je     0x417af9
  417ac7:	mov    rsi,QWORD PTR [rdi]
  417aca:	test   rsi,rsi
  417acd:	je     0x417b05
  417acf:	mov    rdi,rsi
  417ad2:	test   bl,0x1
  417ad5:	je     0x417ac3
  417ad7:	mov    rdx,rdi
  417ada:	mov    rcx,rbp
  417add:	call   0x417960
  417ae2:	test   rax,rax
  417ae5:	mov    rsi,rax
  417ae8:	je     0x417b53
  417aea:	mov    rcx,rbp
  417aed:	mov    rbp,rsi
  417af0:	call   0x417800
  417af5:	sar    ebx,1
  417af7:	jne    0x417ac7
  417af9:	mov    rax,rbp
  417afc:	add    rsp,0x28
  417b00:	pop    rbx
  417b01:	pop    rsi
  417b02:	pop    rdi
  417b03:	pop    rbp
  417b04:	ret    
  417b05:	mov    ecx,0x1
  417b0a:	call   0x4175d0
  417b0f:	mov    rsi,QWORD PTR [rdi]
  417b12:	test   rsi,rsi
  417b15:	je     0x417b5e
  417b17:	cmp    DWORD PTR [rip+0xcf32],0x2        # 0x424a50
  417b1e:	jne    0x417acf
  417b20:	lea    rcx,[rip+0xcf81]        # 0x424aa8
  417b27:	call   QWORD PTR [rip+0xdb03]        # 0x425630
  417b2d:	jmp    0x417acf
  417b2f:	nop
  417b30:	sub    eax,0x1
  417b33:	lea    rdx,[rip+0x7b06]        # 0x41f640
  417b3a:	xor    r8d,r8d
  417b3d:	cdqe   
  417b3f:	mov    edx,DWORD PTR [rdx+rax*4]
  417b42:	call   0x417870
  417b47:	test   rax,rax
  417b4a:	mov    rbp,rax
  417b4d:	jne    0x417aa8
  417b53:	xor    eax,eax
  417b55:	add    rsp,0x28
  417b59:	pop    rbx
  417b5a:	pop    rsi
  417b5b:	pop    rdi
  417b5c:	pop    rbp
  417b5d:	ret    
  417b5e:	mov    rdx,rdi
  417b61:	mov    rcx,rdi
  417b64:	call   0x417960
  417b69:	test   rax,rax
  417b6c:	mov    rsi,rax
  417b6f:	mov    QWORD PTR [rdi],rax
  417b72:	je     0x417b53
  417b74:	mov    QWORD PTR [rax],0x0
  417b7b:	jmp    0x417b17
  417b7d:	mov    ecx,0x1
  417b82:	call   0x4175d0
  417b87:	mov    rdi,QWORD PTR [rip+0xc532]        # 0x4240c0
  417b8e:	test   rdi,rdi
  417b91:	je     0x417bb2
  417b93:	cmp    DWORD PTR [rip+0xceb6],0x2        # 0x424a50
  417b9a:	jne    0x417ad2
  417ba0:	lea    rcx,[rip+0xcf01]        # 0x424aa8
  417ba7:	call   QWORD PTR [rip+0xda83]        # 0x425630
  417bad:	jmp    0x417ad2
  417bb2:	mov    ecx,0x1
  417bb7:	call   0x4176f0
  417bbc:	test   rax,rax
  417bbf:	mov    rdi,rax
  417bc2:	je     0x417be2
  417bc4:	mov    DWORD PTR [rax+0x18],0x271
  417bcb:	mov    DWORD PTR [rax+0x14],0x1
  417bd2:	mov    QWORD PTR [rip+0xc4e7],rax        # 0x4240c0
  417bd9:	mov    QWORD PTR [rax],0x0
  417be0:	jmp    0x417b93
  417be2:	mov    QWORD PTR [rip+0xc4d3],0x0        # 0x4240c0
  417bed:	xor    eax,eax
  417bef:	jmp    0x417b55
  417bf4:	xchg   ax,ax
  417bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c00:	push   r13
  417c02:	push   r12
  417c04:	push   rbp
  417c05:	push   rdi
  417c06:	push   rsi
  417c07:	push   rbx
  417c08:	sub    rsp,0x28
  417c0c:	mov    rdi,rcx
  417c0f:	mov    ebp,edx
  417c11:	mov    esi,edx
  417c13:	mov    r12d,DWORD PTR [rdi+0x14]
  417c17:	sar    ebp,0x5
  417c1a:	mov    eax,DWORD PTR [rdi+0xc]
  417c1d:	mov    ecx,DWORD PTR [rcx+0x8]
  417c20:	add    r12d,ebp
  417c23:	lea    ebx,[r12+0x1]
  417c28:	cmp    ebx,eax
  417c2a:	jle    0x417c39
  417c2c:	nop    DWORD PTR [rax+0x0]
  417c30:	add    eax,eax
  417c32:	add    ecx,0x1
  417c35:	cmp    ebx,eax
  417c37:	jg     0x417c30
  417c39:	call   0x4176f0
  417c3e:	test   rax,rax
  417c41:	mov    r13,rax
  417c44:	je     0x417d0f
  417c4a:	test   ebp,ebp
  417c4c:	lea    r8,[rax+0x18]
  417c50:	jle    0x417d07
  417c56:	lea    eax,[rbp-0x1]
  417c59:	lea    r9,[r8+rax*4+0x4]
  417c5e:	xchg   ax,ax
  417c60:	add    r8,0x4
  417c64:	mov    DWORD PTR [r8-0x4],0x0
  417c6c:	cmp    r8,r9
  417c6f:	jne    0x417c60
  417c71:	movsxd rax,DWORD PTR [rdi+0x14]
  417c75:	lea    r8,[rdi+0x18]
  417c79:	mov    edx,esi
  417c7b:	and    edx,0x1f
  417c7e:	lea    rbp,[r8+rax*4]
  417c82:	je     0x417cf0
  417c84:	mov    eax,0x20
  417c89:	xor    r11d,r11d
  417c8c:	sub    eax,edx
  417c8e:	jmp    0x417c93
  417c90:	mov    r9,rsi
  417c93:	mov    r10d,DWORD PTR [r8]
  417c96:	mov    ecx,edx
  417c98:	lea    rsi,[r9+0x4]
  417c9c:	add    r8,0x4
  417ca0:	shl    r10d,cl
  417ca3:	mov    ecx,eax
  417ca5:	or     r10d,r11d
  417ca8:	mov    DWORD PTR [rsi-0x4],r10d
  417cac:	mov    r11d,DWORD PTR [r8-0x4]
  417cb0:	shr    r11d,cl
  417cb3:	cmp    rbp,r8
  417cb6:	ja     0x417c90
  417cb8:	add    r12d,0x2
  417cbc:	test   r11d,r11d
  417cbf:	mov    DWORD PTR [r9+0x4],r11d
  417cc3:	cmovne ebx,r12d
  417cc7:	sub    ebx,0x1
  417cca:	mov    rcx,rdi
  417ccd:	mov    DWORD PTR [r13+0x14],ebx
  417cd1:	call   0x417800
  417cd6:	mov    rax,r13
  417cd9:	add    rsp,0x28
  417cdd:	pop    rbx
  417cde:	pop    rsi
  417cdf:	pop    rdi
  417ce0:	pop    rbp
  417ce1:	pop    r12
  417ce3:	pop    r13
  417ce5:	ret    
  417ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417cf0:	add    r8,0x4
  417cf4:	mov    edx,DWORD PTR [r8-0x4]
  417cf8:	add    r9,0x4
  417cfc:	cmp    rbp,r8
  417cff:	mov    DWORD PTR [r9-0x4],edx
  417d03:	ja     0x417cf0
  417d05:	jmp    0x417cc7
  417d07:	mov    r9,r8
  417d0a:	jmp    0x417c71
  417d0f:	xor    eax,eax
  417d11:	jmp    0x417cd9
  417d13:	nop    DWORD PTR [rax]
  417d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417d20:	movsxd r8,DWORD PTR [rdx+0x14]
  417d24:	mov    eax,DWORD PTR [rcx+0x14]
  417d27:	sub    eax,r8d
  417d2a:	test   eax,eax
  417d2c:	jne    0x417d62
  417d2e:	shl    r8,0x2
  417d32:	add    rcx,0x18
  417d36:	lea    rax,[rcx+r8*1]
  417d3a:	lea    rdx,[rdx+r8*1+0x18]
  417d3f:	jmp    0x417d46
  417d41:	cmp    rcx,rax
  417d44:	jae    0x417d60
  417d46:	sub    rdx,0x4
  417d4a:	sub    rax,0x4
  417d4e:	mov    r9d,DWORD PTR [rdx]
  417d51:	cmp    DWORD PTR [rax],r9d
  417d54:	je     0x417d41
  417d56:	sbb    eax,eax
  417d58:	or     eax,0x1
  417d5b:	ret    
  417d5c:	nop    DWORD PTR [rax+0x0]
  417d60:	xor    eax,eax
  417d62:	repz ret 
  417d64:	xchg   ax,ax
  417d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417d70:	push   rdi
  417d71:	push   rsi
  417d72:	push   rbx
  417d73:	sub    rsp,0x20
  417d77:	mov    rsi,rcx
  417d7a:	mov    rdi,rdx
  417d7d:	call   0x417d20
  417d82:	test   eax,eax
  417d84:	je     0x417e70
  417d8a:	mov    ebx,0x0
  417d8f:	js     0x417e92
  417d95:	mov    ecx,DWORD PTR [rsi+0x8]
  417d98:	call   0x4176f0
  417d9d:	test   rax,rax
  417da0:	je     0x417ea2
  417da6:	movsxd rdx,DWORD PTR [rsi+0x14]
  417daa:	lea    rcx,[rsi+0x18]
  417dae:	mov    DWORD PTR [rax+0x10],ebx
  417db1:	lea    r10,[rdi+0x18]
  417db5:	xor    r9d,r9d
  417db8:	mov    rbx,rdx
  417dbb:	lea    rsi,[rcx+rdx*4]
  417dbf:	movsxd rdx,DWORD PTR [rdi+0x14]
  417dc3:	lea    rdi,[r10+rdx*4]
  417dc7:	lea    rdx,[rax+0x18]
  417dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  417dd0:	add    rcx,0x4
  417dd4:	add    r10,0x4
  417dd8:	mov    r11d,DWORD PTR [r10-0x4]
  417ddc:	mov    r8d,DWORD PTR [rcx-0x4]
  417de0:	add    rdx,0x4
  417de4:	sub    r8,r11
  417de7:	sub    r8,r9
  417dea:	mov    r9,r8
  417ded:	mov    r11d,r8d
  417df0:	mov    DWORD PTR [rdx-0x4],r8d
  417df4:	shr    r9,0x20
  417df8:	and    r9d,0x1
  417dfc:	cmp    rdi,r10
  417dff:	ja     0x417dd0
  417e01:	cmp    rsi,rcx
  417e04:	mov    rdi,rdx
  417e07:	mov    r10,rcx
  417e0a:	jbe    0x417e46
  417e0c:	nop    DWORD PTR [rax+0x0]
  417e10:	add    rcx,0x4
  417e14:	mov    r8d,DWORD PTR [rcx-0x4]
  417e18:	add    rdx,0x4
  417e1c:	sub    r8,r9
  417e1f:	mov    r9,r8
  417e22:	mov    r11d,r8d
  417e25:	mov    DWORD PTR [rdx-0x4],r8d
  417e29:	shr    r9,0x20
  417e2d:	and    r9d,0x1
  417e31:	cmp    rsi,rcx
  417e34:	ja     0x417e10
  417e36:	not    r10
  417e39:	lea    rdx,[r10+rsi*1]
  417e3d:	shr    rdx,0x2
  417e41:	lea    rdx,[rdi+rdx*4+0x4]
  417e46:	sub    rdx,0x4
  417e4a:	test   r11d,r11d
  417e4d:	jne    0x417e5d
  417e4f:	nop
  417e50:	sub    rdx,0x4
  417e54:	mov    ecx,DWORD PTR [rdx]
  417e56:	sub    ebx,0x1
  417e59:	test   ecx,ecx
  417e5b:	je     0x417e50
  417e5d:	mov    DWORD PTR [rax+0x14],ebx
  417e60:	add    rsp,0x20
  417e64:	pop    rbx
  417e65:	pop    rsi
  417e66:	pop    rdi
  417e67:	ret    
  417e68:	nop    DWORD PTR [rax+rax*1+0x0]
  417e70:	xor    ecx,ecx
  417e72:	call   0x4176f0
  417e77:	test   rax,rax
  417e7a:	je     0x417ea2
  417e7c:	mov    DWORD PTR [rax+0x14],0x1
  417e83:	mov    DWORD PTR [rax+0x18],0x0
  417e8a:	add    rsp,0x20
  417e8e:	pop    rbx
  417e8f:	pop    rsi
  417e90:	pop    rdi
  417e91:	ret    
  417e92:	mov    rax,rsi
  417e95:	mov    bl,0x1
  417e97:	mov    rsi,rdi
  417e9a:	mov    rdi,rax
  417e9d:	jmp    0x417d95
  417ea2:	xor    eax,eax
  417ea4:	jmp    0x417e60
  417ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417eb0:	push   rsi
  417eb1:	push   rbx
  417eb2:	sub    rsp,0x18
  417eb6:	movsxd rax,DWORD PTR [rcx+0x14]
  417eba:	lea    r10,[rcx+0x18]
  417ebe:	mov    ecx,0x20
  417ec3:	lea    r9,[r10+rax*4]
  417ec7:	mov    eax,DWORD PTR [r9-0x4]
  417ecb:	lea    rbx,[r9-0x4]
  417ecf:	bsr    r8d,eax
  417ed3:	xor    r8d,0x1f
  417ed7:	sub    ecx,r8d
  417eda:	cmp    r8d,0xa
  417ede:	mov    DWORD PTR [rdx],ecx
  417ee0:	jg     0x417f30
  417ee2:	mov    ecx,0xb
  417ee7:	mov    r11d,eax
  417eea:	xor    esi,esi
  417eec:	sub    ecx,r8d
  417eef:	shr    r11d,cl
  417ef2:	or     r11d,0x3ff00000
  417ef9:	shl    r11,0x20
  417efd:	cmp    r10,rbx
  417f00:	jae    0x417f08
  417f02:	mov    esi,DWORD PTR [r9-0x8]
  417f06:	shr    esi,cl
  417f08:	lea    ecx,[r8+0x15]
  417f0c:	shl    eax,cl
  417f0e:	mov    edx,eax
  417f10:	mov    eax,esi
  417f12:	or     eax,edx
  417f14:	or     rax,r11
  417f17:	mov    QWORD PTR [rsp+0x8],rax
  417f1c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  417f22:	add    rsp,0x18
  417f26:	pop    rbx
  417f27:	pop    rsi
  417f28:	ret    
  417f29:	nop    DWORD PTR [rax+0x0]
  417f30:	cmp    r10,rbx
  417f33:	jae    0x417f90
  417f35:	mov    r11d,r8d
  417f38:	lea    rsi,[r9-0x8]
  417f3c:	mov    edx,DWORD PTR [r9-0x8]
  417f40:	sub    r11d,0xb
  417f44:	je     0x417fb2
  417f46:	mov    ebx,0x2b
  417f4b:	mov    ecx,r11d
  417f4e:	sub    ebx,r8d
  417f51:	shl    eax,cl
  417f53:	mov    r8d,edx
  417f56:	mov    ecx,ebx
  417f58:	shr    r8d,cl
  417f5b:	or     eax,r8d
  417f5e:	xor    r8d,r8d
  417f61:	or     eax,0x3ff00000
  417f66:	shl    rax,0x20
  417f6a:	cmp    r10,rsi
  417f6d:	jae    0x417f76
  417f6f:	mov    r8d,DWORD PTR [r9-0xc]
  417f73:	shr    r8d,cl
  417f76:	mov    ecx,r11d
  417f79:	shl    edx,cl
  417f7b:	or     r8d,edx
  417f7e:	movabs rdx,0xffffffff00000000
  417f88:	and    rax,rdx
  417f8b:	or     rax,r8
  417f8e:	jmp    0x417f17
  417f90:	mov    r11d,r8d
  417f93:	sub    r11d,0xb
  417f97:	je     0x417fb0
  417f99:	mov    ecx,r11d
  417f9c:	xor    r8d,r8d
  417f9f:	xor    edx,edx
  417fa1:	shl    eax,cl
  417fa3:	or     eax,0x3ff00000
  417fa8:	shl    rax,0x20
  417fac:	jmp    0x417f76
  417fae:	xchg   ax,ax
  417fb0:	xor    edx,edx
  417fb2:	or     eax,0x3ff00000
  417fb7:	shl    rax,0x20
  417fbb:	or     rax,rdx
  417fbe:	jmp    0x417f17
  417fc3:	nop    DWORD PTR [rax]
  417fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417fd0:	push   rdi
  417fd1:	push   rsi
  417fd2:	push   rbx
  417fd3:	sub    rsp,0x20
  417fd7:	mov    ecx,0x1
  417fdc:	movq   rbx,xmm0
  417fe1:	mov    rdi,rdx
  417fe4:	mov    rsi,r8
  417fe7:	call   0x4176f0
  417fec:	test   rax,rax
  417fef:	je     0x4180d5
  417ff5:	mov    r9,rbx
  417ff8:	shr    r9,0x20
  417ffc:	mov    r10d,r9d
  417fff:	and    r9d,0x7fffffff
  418006:	and    r10d,0xfffff
  41800d:	shr    r9d,0x14
  418011:	mov    edx,r10d
  418014:	or     edx,0x100000
  41801a:	test   r9d,r9d
  41801d:	cmovne r10d,edx
  418021:	test   ebx,ebx
  418023:	jne    0x418064
  418025:	xor    ecx,ecx
  418027:	mov    DWORD PTR [rax+0x14],0x1
  41802e:	mov    edx,0x1
  418033:	tzcnt  ecx,r10d
  418038:	shr    r10d,cl
  41803b:	test   r9d,r9d
  41803e:	lea    r11d,[rcx+0x20]
  418042:	mov    DWORD PTR [rax+0x18],r10d
  418046:	je     0x4180a3
  418048:	lea    edx,[r11+r9*1-0x433]
  418050:	mov    DWORD PTR [rdi],edx
  418052:	mov    edx,0x35
  418057:	sub    edx,r11d
  41805a:	mov    DWORD PTR [rsi],edx
  41805c:	add    rsp,0x20
  418060:	pop    rbx
  418061:	pop    rsi
  418062:	pop    rdi
  418063:	ret    
  418064:	xor    r11d,r11d
  418067:	tzcnt  r11d,ebx
  41806c:	mov    ecx,r11d
  41806f:	shr    ebx,cl
  418071:	test   r11d,r11d
  418074:	je     0x4180d0
  418076:	mov    ecx,0x20
  41807b:	mov    edx,r10d
  41807e:	sub    ecx,r11d
  418081:	shl    edx,cl
  418083:	mov    ecx,r11d
  418086:	or     ebx,edx
  418088:	shr    r10d,cl
  41808b:	mov    DWORD PTR [rax+0x18],ebx
  41808e:	cmp    r10d,0x1
  418092:	mov    DWORD PTR [rax+0x1c],r10d
  418096:	sbb    edx,edx
  418098:	add    edx,0x2
  41809b:	test   r9d,r9d
  41809e:	mov    DWORD PTR [rax+0x14],edx
  4180a1:	jne    0x418048
  4180a3:	movsxd rcx,edx
  4180a6:	shl    edx,0x5
  4180a9:	sub    r11d,0x432
  4180b0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  4180b5:	mov    DWORD PTR [rdi],r11d
  4180b8:	xor    ecx,0x1f
  4180bb:	sub    edx,ecx
  4180bd:	mov    DWORD PTR [rsi],edx
  4180bf:	add    rsp,0x20
  4180c3:	pop    rbx
  4180c4:	pop    rsi
  4180c5:	pop    rdi
  4180c6:	ret    
  4180c7:	nop    WORD PTR [rax+rax*1+0x0]
  4180d0:	mov    DWORD PTR [rax+0x18],ebx
  4180d3:	jmp    0x41808e
  4180d5:	xor    eax,eax
  4180d7:	jmp    0x41805c
  4180d9:	nop    DWORD PTR [rax+0x0]
  4180e0:	mov    rax,rcx
  4180e3:	lea    rcx,[rdx+0x1]
  4180e7:	movzx  edx,BYTE PTR [rdx]
  4180ea:	test   dl,dl
  4180ec:	mov    BYTE PTR [rax],dl
  4180ee:	je     0x418102
  4180f0:	add    rcx,0x1
  4180f4:	movzx  edx,BYTE PTR [rcx-0x1]
  4180f8:	add    rax,0x1
  4180fc:	test   dl,dl
  4180fe:	mov    BYTE PTR [rax],dl
  418100:	jne    0x4180f0
  418102:	repz ret 
  418104:	nop
  418105:	nop
  418106:	nop
  418107:	nop
  418108:	nop
  418109:	nop
  41810a:	nop
  41810b:	nop
  41810c:	nop
  41810d:	nop
  41810e:	nop
  41810f:	nop
  418110:	push   rbp
  418111:	push   rdi
  418112:	push   rsi
  418113:	push   rbx
  418114:	sub    rsp,0x48
  418118:	test   rdx,rdx
  41811b:	je     0x418243
  418121:	test   r8,r8
  418124:	je     0x418250
  41812a:	mov    eax,DWORD PTR [r9]
  41812d:	mov    DWORD PTR [r9],0x0
  418134:	mov    DWORD PTR [rsp+0x30],eax
  418138:	movzx  eax,BYTE PTR [rdx]
  41813b:	test   al,al
  41813d:	je     0x4181e0
  418143:	cmp    DWORD PTR [rsp+0x98],0x1
  41814b:	mov    rsi,r9
  41814e:	mov    rdi,r8
  418151:	mov    rbx,rdx
  418154:	mov    rbp,rcx
  418157:	jbe    0x4181c0
  418159:	cmp    BYTE PTR [rsp+0x30],0x0
  41815e:	jne    0x4181f0
  418164:	movzx  edx,al
  418167:	mov    ecx,DWORD PTR [rsp+0x90]
  41816e:	call   QWORD PTR [rip+0xd4b4]        # 0x425628
  418174:	test   eax,eax
  418176:	je     0x4181c0
  418178:	cmp    rdi,0x1
  41817c:	jbe    0x41826c
  418182:	mov    DWORD PTR [rsp+0x28],0x1
  41818a:	mov    QWORD PTR [rsp+0x20],rbp
  41818f:	mov    r9d,0x2
  418195:	mov    r8,rbx
  418198:	mov    edx,0x8
  41819d:	mov    ecx,DWORD PTR [rsp+0x90]
  4181a4:	call   QWORD PTR [rip+0xd48e]        # 0x425638
  4181aa:	test   eax,eax
  4181ac:	je     0x418257
  4181b2:	mov    eax,0x2
  4181b7:	add    rsp,0x48
  4181bb:	pop    rbx
  4181bc:	pop    rsi
  4181bd:	pop    rdi
  4181be:	pop    rbp
  4181bf:	ret    
  4181c0:	mov    eax,DWORD PTR [rsp+0x90]
  4181c7:	test   eax,eax
  4181c9:	jne    0x418210
  4181cb:	movzx  eax,BYTE PTR [rbx]
  4181ce:	mov    WORD PTR [rbp+0x0],ax
  4181d2:	mov    eax,0x1
  4181d7:	add    rsp,0x48
  4181db:	pop    rbx
  4181dc:	pop    rsi
  4181dd:	pop    rdi
  4181de:	pop    rbp
  4181df:	ret    
  4181e0:	xor    edx,edx
  4181e2:	xor    eax,eax
  4181e4:	mov    WORD PTR [rcx],dx
  4181e7:	add    rsp,0x48
  4181eb:	pop    rbx
  4181ec:	pop    rsi
  4181ed:	pop    rdi
  4181ee:	pop    rbp
  4181ef:	ret    
  4181f0:	mov    BYTE PTR [rsp+0x31],al
  4181f4:	mov    DWORD PTR [rsp+0x28],0x1
  4181fc:	mov    r9d,0x2
  418202:	mov    QWORD PTR [rsp+0x20],rcx
  418207:	lea    r8,[rsp+0x30]
  41820c:	jmp    0x418198
  41820e:	xchg   ax,ax
  418210:	mov    DWORD PTR [rsp+0x28],0x1
  418218:	mov    QWORD PTR [rsp+0x20],rbp
  41821d:	mov    r9d,0x1
  418223:	mov    r8,rbx
  418226:	mov    edx,0x8
  41822b:	mov    ecx,DWORD PTR [rsp+0x90]
  418232:	call   QWORD PTR [rip+0xd400]        # 0x425638
  418238:	test   eax,eax
  41823a:	je     0x418257
  41823c:	mov    eax,0x1
  418241:	jmp    0x4181e7
  418243:	xor    eax,eax
  418245:	add    rsp,0x48
  418249:	pop    rbx
  41824a:	pop    rsi
  41824b:	pop    rdi
  41824c:	pop    rbp
  41824d:	ret    
  41824e:	xchg   ax,ax
  418250:	mov    eax,0xfffffffe
  418255:	jmp    0x4181e7
  418257:	call   0x4186c0
  41825c:	mov    DWORD PTR [rax],0x2a
  418262:	mov    eax,0xffffffff
  418267:	jmp    0x4181e7
  41826c:	movzx  eax,BYTE PTR [rbx]
  41826f:	mov    BYTE PTR [rsi],al
  418271:	mov    eax,0xfffffffe
  418276:	jmp    0x4181e7
  41827b:	nop    DWORD PTR [rax+rax*1+0x0]
  418280:	push   rbp
  418281:	push   rdi
  418282:	push   rsi
  418283:	push   rbx
  418284:	sub    rsp,0x58
  418288:	xor    eax,eax
  41828a:	mov    WORD PTR [rsp+0x4e],ax
  41828f:	lea    rax,[rsp+0x4e]
  418294:	test   rcx,rcx
  418297:	mov    rbx,rcx
  41829a:	mov    rsi,r9
  41829d:	mov    rdi,rdx
  4182a0:	cmove  rbx,rax
  4182a4:	mov    rax,QWORD PTR [rip+0x75e5]        # 0x41f890
  4182ab:	mov    QWORD PTR [rsp+0x38],r8
  4182b0:	mov    rax,QWORD PTR [rax]
  4182b3:	mov    ebp,DWORD PTR [rax]
  4182b5:	call   0x418710
  4182ba:	mov    r8,QWORD PTR [rsp+0x38]
  4182bf:	lea    r9,[rip+0xc842]        # 0x424b08
  4182c6:	test   rsi,rsi
  4182c9:	mov    DWORD PTR [rsp+0x28],ebp
  4182cd:	mov    DWORD PTR [rsp+0x20],eax
  4182d1:	mov    rdx,rdi
  4182d4:	cmovne r9,rsi
  4182d8:	mov    rcx,rbx
  4182db:	call   0x418110
  4182e0:	cdqe   
  4182e2:	add    rsp,0x58
  4182e6:	pop    rbx
  4182e7:	pop    rsi
  4182e8:	pop    rdi
  4182e9:	pop    rbp
  4182ea:	ret    
  4182eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4182f0:	push   r15
  4182f2:	push   r14
  4182f4:	push   r13
  4182f6:	push   r12
  4182f8:	push   rbp
  4182f9:	push   rdi
  4182fa:	push   rsi
  4182fb:	push   rbx
  4182fc:	sub    rsp,0x48
  418300:	lea    rax,[rip+0xc7fd]        # 0x424b04
  418307:	test   r9,r9
  41830a:	mov    rdi,r9
  41830d:	mov    r13,rdx
  418310:	cmove  rdi,rax
  418314:	mov    r14,rcx
  418317:	mov    rsi,r8
  41831a:	call   0x418710
  41831f:	mov    r12d,eax
  418322:	mov    rax,QWORD PTR [rip+0x7567]        # 0x41f890
  418329:	test   r13,r13
  41832c:	mov    rax,QWORD PTR [rax]
  41832f:	mov    ebp,DWORD PTR [rax]
  418331:	je     0x4183b5
  418337:	mov    rdx,QWORD PTR [r13+0x0]
  41833b:	test   rdx,rdx
  41833e:	je     0x4183b5
  418340:	test   r14,r14
  418343:	je     0x4183c0
  418345:	xor    ebx,ebx
  418347:	test   rsi,rsi
  41834a:	jne    0x41836a
  41834c:	jmp    0x4183b5
  41834e:	xchg   ax,ax
  418350:	movsxd r10,eax
  418353:	add    r14,0x2
  418357:	mov    rdx,r10
  41835a:	add    rdx,QWORD PTR [r13+0x0]
  41835e:	add    rbx,r10
  418361:	cmp    rsi,rbx
  418364:	mov    QWORD PTR [r13+0x0],rdx
  418368:	jbe    0x4183b0
  41836a:	mov    r8,rsi
  41836d:	mov    DWORD PTR [rsp+0x28],ebp
  418371:	mov    DWORD PTR [rsp+0x20],r12d
  418376:	sub    r8,rbx
  418379:	mov    r9,rdi
  41837c:	mov    rcx,r14
  41837f:	call   0x418110
  418384:	cmp    eax,0x0
  418387:	jg     0x418350
  418389:	jne    0x4183b0
  41838b:	cmp    rbx,rsi
  41838e:	jae    0x4183b0
  418390:	mov    QWORD PTR [r13+0x0],0x0
  418398:	mov    rax,rbx
  41839b:	add    rsp,0x48
  41839f:	pop    rbx
  4183a0:	pop    rsi
  4183a1:	pop    rdi
  4183a2:	pop    rbp
  4183a3:	pop    r12
  4183a5:	pop    r13
  4183a7:	pop    r14
  4183a9:	pop    r15
  4183ab:	ret    
  4183ac:	xor    ebx,ebx
  4183ae:	xchg   ax,ax
  4183b0:	mov    rax,rbx
  4183b3:	jmp    0x41839b
  4183b5:	xor    eax,eax
  4183b7:	jmp    0x41839b
  4183b9:	nop    DWORD PTR [rax+0x0]
  4183c0:	xor    eax,eax
  4183c2:	test   rsi,rsi
  4183c5:	mov    WORD PTR [rsp+0x3e],ax
  4183ca:	je     0x4183ac
  4183cc:	mov    r15d,ebp
  4183cf:	xor    ebx,ebx
  4183d1:	lea    r14,[rsp+0x3e]
  4183d6:	jmp    0x4183f5
  4183d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4183e0:	cdqe   
  4183e2:	mov    rdx,rax
  4183e5:	add    rdx,QWORD PTR [r13+0x0]
  4183e9:	add    rbx,rax
  4183ec:	cmp    rsi,rbx
  4183ef:	mov    QWORD PTR [r13+0x0],rdx
  4183f3:	jbe    0x4183b0
  4183f5:	mov    DWORD PTR [rsp+0x28],ebp
  4183f9:	mov    DWORD PTR [rsp+0x20],r12d
  4183fe:	mov    r9,rdi
  418401:	mov    r8,r15
  418404:	mov    rcx,r14
  418407:	call   0x418110
  41840c:	test   eax,eax
  41840e:	jg     0x4183e0
  418410:	jmp    0x4183b0
  418412:	nop    DWORD PTR [rax+0x0]
  418416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418420:	push   rbp
  418421:	push   rdi
  418422:	push   rsi
  418423:	push   rbx
  418424:	sub    rsp,0x48
  418428:	xor    eax,eax
  41842a:	mov    WORD PTR [rsp+0x3e],ax
  41842f:	mov    rax,QWORD PTR [rip+0x745a]        # 0x41f890
  418436:	mov    rbx,r8
  418439:	mov    rsi,rcx
  41843c:	mov    rdi,rdx
  41843f:	mov    rax,QWORD PTR [rax]
  418442:	mov    ebp,DWORD PTR [rax]
  418444:	call   0x418710
  418449:	lea    r9,[rip+0xc6b0]        # 0x424b00
  418450:	test   rbx,rbx
  418453:	lea    rcx,[rsp+0x3e]
  418458:	mov    DWORD PTR [rsp+0x28],ebp
  41845c:	mov    DWORD PTR [rsp+0x20],eax
  418460:	mov    r8,rdi
  418463:	cmovne r9,rbx
  418467:	mov    rdx,rsi
  41846a:	call   0x418110
  41846f:	cdqe   
  418471:	add    rsp,0x48
  418475:	pop    rbx
  418476:	pop    rsi
  418477:	pop    rdi
  418478:	pop    rbp
  418479:	ret    
  41847a:	nop
  41847b:	nop
  41847c:	nop
  41847d:	nop
  41847e:	nop
  41847f:	nop
  418480:	jmp    QWORD PTR [rip+0xd4e2]        # 0x425968
  418486:	nop
  418487:	nop
  418488:	jmp    QWORD PTR [rip+0xd4d2]        # 0x425960
  41848e:	nop
  41848f:	nop
  418490:	jmp    QWORD PTR [rip+0xd4c2]        # 0x425958
  418496:	nop
  418497:	nop
  418498:	jmp    QWORD PTR [rip+0xd4b2]        # 0x425950
  41849e:	nop
  41849f:	nop
  4184a0:	jmp    QWORD PTR [rip+0xd4a2]        # 0x425948
  4184a6:	nop
  4184a7:	nop
  4184a8:	jmp    QWORD PTR [rip+0xd492]        # 0x425940
  4184ae:	nop
  4184af:	nop
  4184b0:	jmp    QWORD PTR [rip+0xd482]        # 0x425938
  4184b6:	nop
  4184b7:	nop
  4184b8:	jmp    QWORD PTR [rip+0xd472]        # 0x425930
  4184be:	nop
  4184bf:	nop
  4184c0:	jmp    QWORD PTR [rip+0xd462]        # 0x425928
  4184c6:	nop
  4184c7:	nop
  4184c8:	jmp    QWORD PTR [rip+0xd452]        # 0x425920
  4184ce:	nop
  4184cf:	nop
  4184d0:	jmp    QWORD PTR [rip+0xd442]        # 0x425918
  4184d6:	nop
  4184d7:	nop
  4184d8:	jmp    QWORD PTR [rip+0xd432]        # 0x425910
  4184de:	nop
  4184df:	nop
  4184e0:	jmp    QWORD PTR [rip+0xd422]        # 0x425908
  4184e6:	nop
  4184e7:	nop
  4184e8:	jmp    QWORD PTR [rip+0xd412]        # 0x425900
  4184ee:	nop
  4184ef:	nop
  4184f0:	jmp    QWORD PTR [rip+0xd402]        # 0x4258f8
  4184f6:	nop
  4184f7:	nop
  4184f8:	jmp    QWORD PTR [rip+0xd3f2]        # 0x4258f0
  4184fe:	nop
  4184ff:	nop
  418500:	jmp    QWORD PTR [rip+0xd3e2]        # 0x4258e8
  418506:	nop
  418507:	nop
  418508:	jmp    QWORD PTR [rip+0xd3d2]        # 0x4258e0
  41850e:	nop
  41850f:	nop
  418510:	jmp    QWORD PTR [rip+0xd3c2]        # 0x4258d8
  418516:	nop
  418517:	nop
  418518:	jmp    QWORD PTR [rip+0xd3b2]        # 0x4258d0
  41851e:	nop
  41851f:	nop
  418520:	jmp    QWORD PTR [rip+0xd3a2]        # 0x4258c8
  418526:	nop
  418527:	nop
  418528:	jmp    QWORD PTR [rip+0xd392]        # 0x4258c0
  41852e:	nop
  41852f:	nop
  418530:	jmp    QWORD PTR [rip+0xd382]        # 0x4258b8
  418536:	nop
  418537:	nop
  418538:	jmp    QWORD PTR [rip+0xd372]        # 0x4258b0
  41853e:	nop
  41853f:	nop
  418540:	jmp    QWORD PTR [rip+0xd362]        # 0x4258a8
  418546:	nop
  418547:	nop
  418548:	jmp    QWORD PTR [rip+0xd352]        # 0x4258a0
  41854e:	nop
  41854f:	nop
  418550:	jmp    QWORD PTR [rip+0xd342]        # 0x425898
  418556:	nop
  418557:	nop
  418558:	jmp    QWORD PTR [rip+0xd332]        # 0x425890
  41855e:	nop
  41855f:	nop
  418560:	jmp    QWORD PTR [rip+0xd322]        # 0x425888
  418566:	nop
  418567:	nop
  418568:	jmp    QWORD PTR [rip+0xd312]        # 0x425880
  41856e:	nop
  41856f:	nop
  418570:	jmp    QWORD PTR [rip+0xd302]        # 0x425878
  418576:	nop
  418577:	nop
  418578:	jmp    QWORD PTR [rip+0xd2f2]        # 0x425870
  41857e:	nop
  41857f:	nop
  418580:	jmp    QWORD PTR [rip+0xd2e2]        # 0x425868
  418586:	nop
  418587:	nop
  418588:	jmp    QWORD PTR [rip+0xd2d2]        # 0x425860
  41858e:	nop
  41858f:	nop
  418590:	jmp    QWORD PTR [rip+0xd2c2]        # 0x425858
  418596:	nop
  418597:	nop
  418598:	jmp    QWORD PTR [rip+0xd2b2]        # 0x425850
  41859e:	nop
  41859f:	nop
  4185a0:	jmp    QWORD PTR [rip+0xd2a2]        # 0x425848
  4185a6:	nop
  4185a7:	nop
  4185a8:	jmp    QWORD PTR [rip+0xd292]        # 0x425840
  4185ae:	nop
  4185af:	nop
  4185b0:	jmp    QWORD PTR [rip+0xd282]        # 0x425838
  4185b6:	nop
  4185b7:	nop
  4185b8:	jmp    QWORD PTR [rip+0xd272]        # 0x425830
  4185be:	nop
  4185bf:	nop
  4185c0:	jmp    QWORD PTR [rip+0xd262]        # 0x425828
  4185c6:	nop
  4185c7:	nop
  4185c8:	jmp    QWORD PTR [rip+0xd252]        # 0x425820
  4185ce:	nop
  4185cf:	nop
  4185d0:	jmp    QWORD PTR [rip+0xd242]        # 0x425818
  4185d6:	nop
  4185d7:	nop
  4185d8:	jmp    QWORD PTR [rip+0xd232]        # 0x425810
  4185de:	nop
  4185df:	nop
  4185e0:	jmp    QWORD PTR [rip+0xd222]        # 0x425808
  4185e6:	nop
  4185e7:	nop
  4185e8:	jmp    QWORD PTR [rip+0xd212]        # 0x425800
  4185ee:	nop
  4185ef:	nop
  4185f0:	jmp    QWORD PTR [rip+0xd202]        # 0x4257f8
  4185f6:	nop
  4185f7:	nop
  4185f8:	jmp    QWORD PTR [rip+0xd1f2]        # 0x4257f0
  4185fe:	nop
  4185ff:	nop
  418600:	jmp    QWORD PTR [rip+0xd1e2]        # 0x4257e8
  418606:	nop
  418607:	nop
  418608:	jmp    QWORD PTR [rip+0xd1d2]        # 0x4257e0
  41860e:	nop
  41860f:	nop
  418610:	jmp    QWORD PTR [rip+0xd1c2]        # 0x4257d8
  418616:	nop
  418617:	nop
  418618:	jmp    QWORD PTR [rip+0xd1b2]        # 0x4257d0
  41861e:	nop
  41861f:	nop
  418620:	jmp    QWORD PTR [rip+0xd1a2]        # 0x4257c8
  418626:	nop
  418627:	nop
  418628:	jmp    QWORD PTR [rip+0xd192]        # 0x4257c0
  41862e:	nop
  41862f:	nop
  418630:	jmp    QWORD PTR [rip+0xd182]        # 0x4257b8
  418636:	nop
  418637:	nop
  418638:	jmp    QWORD PTR [rip+0xd172]        # 0x4257b0
  41863e:	nop
  41863f:	nop
  418640:	jmp    QWORD PTR [rip+0xd162]        # 0x4257a8
  418646:	nop
  418647:	nop
  418648:	jmp    QWORD PTR [rip+0xd152]        # 0x4257a0
  41864e:	nop
  41864f:	nop
  418650:	jmp    QWORD PTR [rip+0xd142]        # 0x425798
  418656:	nop
  418657:	nop
  418658:	jmp    QWORD PTR [rip+0xd132]        # 0x425790
  41865e:	nop
  41865f:	nop
  418660:	jmp    QWORD PTR [rip+0xd122]        # 0x425788
  418666:	nop
  418667:	nop
  418668:	jmp    QWORD PTR [rip+0xd112]        # 0x425780
  41866e:	nop
  41866f:	nop
  418670:	jmp    QWORD PTR [rip+0xd102]        # 0x425778
  418676:	nop
  418677:	nop
  418678:	jmp    QWORD PTR [rip+0xd0f2]        # 0x425770
  41867e:	nop
  41867f:	nop
  418680:	jmp    QWORD PTR [rip+0xd0e2]        # 0x425768
  418686:	nop
  418687:	nop
  418688:	jmp    QWORD PTR [rip+0xd0d2]        # 0x425760
  41868e:	nop
  41868f:	nop
  418690:	jmp    QWORD PTR [rip+0xd0c2]        # 0x425758
  418696:	nop
  418697:	nop
  418698:	jmp    QWORD PTR [rip+0xd0b2]        # 0x425750
  41869e:	nop
  41869f:	nop
  4186a0:	jmp    QWORD PTR [rip+0xd0a2]        # 0x425748
  4186a6:	nop
  4186a7:	nop
  4186a8:	jmp    QWORD PTR [rip+0xd08a]        # 0x425738
  4186ae:	nop
  4186af:	nop
  4186b0:	jmp    QWORD PTR [rip+0xd07a]        # 0x425730
  4186b6:	nop
  4186b7:	nop
  4186b8:	jmp    QWORD PTR [rip+0xd06a]        # 0x425728
  4186be:	nop
  4186bf:	nop
  4186c0:	jmp    QWORD PTR [rip+0xd05a]        # 0x425720
  4186c6:	nop
  4186c7:	nop
  4186c8:	jmp    QWORD PTR [rip+0xd04a]        # 0x425718
  4186ce:	nop
  4186cf:	nop
  4186d0:	jmp    QWORD PTR [rip+0xd03a]        # 0x425710
  4186d6:	nop
  4186d7:	nop
  4186d8:	jmp    QWORD PTR [rip+0xd02a]        # 0x425708
  4186de:	nop
  4186df:	nop
  4186e0:	jmp    QWORD PTR [rip+0xd012]        # 0x4256f8
  4186e6:	nop
  4186e7:	nop
  4186e8:	jmp    QWORD PTR [rip+0xd002]        # 0x4256f0
  4186ee:	nop
  4186ef:	nop
  4186f0:	jmp    QWORD PTR [rip+0xcfea]        # 0x4256e0
  4186f6:	nop
  4186f7:	nop
  4186f8:	jmp    QWORD PTR [rip+0xcfda]        # 0x4256d8
  4186fe:	nop
  4186ff:	nop
  418700:	jmp    QWORD PTR [rip+0xcfc2]        # 0x4256c8
  418706:	nop
  418707:	nop
  418708:	jmp    QWORD PTR [rip+0xcfb2]        # 0x4256c0
  41870e:	nop
  41870f:	nop
  418710:	jmp    QWORD PTR [rip+0xcfa2]        # 0x4256b8
  418716:	nop
  418717:	nop
  418718:	jmp    QWORD PTR [rip+0xcf92]        # 0x4256b0
  41871e:	nop
  41871f:	nop
  418720:	mov    rax,QWORD PTR [rip+0xc3e9]        # 0x424b10
  418727:	ret    
  418728:	nop    DWORD PTR [rax+rax*1+0x0]
  418730:	mov    rax,rcx
  418733:	xchg   QWORD PTR [rip+0xc3d6],rax        # 0x424b10
  41873a:	ret    
  41873b:	nop
  41873c:	nop
  41873d:	nop
  41873e:	nop
  41873f:	nop
  418740:	mov    eax,DWORD PTR [rip+0xc3da]        # 0x424b20
  418746:	ret    
  418747:	nop    WORD PTR [rax+rax*1+0x0]
  418750:	mov    eax,ecx
  418752:	xchg   DWORD PTR [rip+0xc3c8],eax        # 0x424b20
  418758:	ret    
  418759:	nop    DWORD PTR [rax+0x0]
  418760:	push   rbx
  418761:	sub    rsp,0x20
  418765:	mov    ebx,ecx
  418767:	lea    rcx,[rip+0x7052]        # 0x41f7c0
  41876e:	call   QWORD PTR [rip+0xce84]        # 0x4255f8
  418774:	lea    rdx,[rip+0x705b]        # 0x41f7d6
  41877b:	mov    rcx,rax
  41877e:	call   QWORD PTR [rip+0xce7c]        # 0x425600
  418784:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x418750
  41878b:	test   rax,rax
  41878e:	mov    ecx,ebx
  418790:	cmove  rax,rdx
  418794:	mov    QWORD PTR [rip+0x16bd],rax        # 0x419e58
  41879b:	add    rsp,0x20
  41879f:	pop    rbx
  4187a0:	rex.W jmp rax
  4187a3:	nop    DWORD PTR [rax]
  4187a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4187b0:	sub    rsp,0x28
  4187b4:	lea    rcx,[rip+0x7005]        # 0x41f7c0
  4187bb:	call   QWORD PTR [rip+0xce37]        # 0x4255f8
  4187c1:	lea    rdx,[rip+0x7021]        # 0x41f7e9
  4187c8:	mov    rcx,rax
  4187cb:	call   QWORD PTR [rip+0xce2f]        # 0x425600
  4187d1:	lea    rdx,[rip+0xffffffffffffff68]        # 0x418740
  4187d8:	test   rax,rax
  4187db:	cmove  rax,rdx
  4187df:	mov    QWORD PTR [rip+0x166a],rax        # 0x419e50
  4187e6:	add    rsp,0x28
  4187ea:	rex.W jmp rax
  4187ed:	nop    DWORD PTR [rax]
  4187f0:	mov    rax,QWORD PTR [rip+0x1661]        # 0x419e58
  4187f7:	rex.W jmp rax
  4187fa:	nop    WORD PTR [rax+rax*1+0x0]
  418800:	mov    rax,QWORD PTR [rip+0x1649]        # 0x419e50
  418807:	rex.W jmp rax
  41880a:	nop
  41880b:	nop
  41880c:	nop
  41880d:	nop
  41880e:	nop
  41880f:	nop
  418810:	jmp    QWORD PTR [rip+0xd182]        # 0x425998
  418816:	nop
  418817:	nop
  418818:	nop    DWORD PTR [rax+rax*1+0x0]
  418820:	jmp    QWORD PTR [rip+0xce7a]        # 0x4256a0
  418826:	nop
  418827:	nop
  418828:	jmp    QWORD PTR [rip+0xce6a]        # 0x425698
  41882e:	nop
  41882f:	nop
  418830:	jmp    QWORD PTR [rip+0xce5a]        # 0x425690
  418836:	nop
  418837:	nop
  418838:	jmp    QWORD PTR [rip+0xce4a]        # 0x425688
  41883e:	nop
  41883f:	nop
  418840:	jmp    QWORD PTR [rip+0xce3a]        # 0x425680
  418846:	nop
  418847:	nop
  418848:	jmp    QWORD PTR [rip+0xce2a]        # 0x425678
  41884e:	nop
  41884f:	nop
  418850:	jmp    QWORD PTR [rip+0xce1a]        # 0x425670
  418856:	nop
  418857:	nop
  418858:	jmp    QWORD PTR [rip+0xce0a]        # 0x425668
  41885e:	nop
  41885f:	nop
  418860:	jmp    QWORD PTR [rip+0xcdfa]        # 0x425660
  418866:	nop
  418867:	nop
  418868:	jmp    QWORD PTR [rip+0xcdea]        # 0x425658
  41886e:	nop
  41886f:	nop
  418870:	jmp    QWORD PTR [rip+0xcdda]        # 0x425650
  418876:	nop
  418877:	nop
  418878:	jmp    QWORD PTR [rip+0xcdca]        # 0x425648
  41887e:	nop
  41887f:	nop
  418880:	jmp    QWORD PTR [rip+0xcdba]        # 0x425640
  418886:	nop
  418887:	nop
  418888:	jmp    QWORD PTR [rip+0xcdaa]        # 0x425638
  41888e:	nop
  41888f:	nop
  418890:	jmp    QWORD PTR [rip+0xcd9a]        # 0x425630
  418896:	nop
  418897:	nop
  418898:	jmp    QWORD PTR [rip+0xcd8a]        # 0x425628
  41889e:	nop
  41889f:	nop
  4188a0:	jmp    QWORD PTR [rip+0xcd7a]        # 0x425620
  4188a6:	nop
  4188a7:	nop
  4188a8:	jmp    QWORD PTR [rip+0xcd6a]        # 0x425618
  4188ae:	nop
  4188af:	nop
  4188b0:	jmp    QWORD PTR [rip+0xcd5a]        # 0x425610
  4188b6:	nop
  4188b7:	nop
  4188b8:	jmp    QWORD PTR [rip+0xcd4a]        # 0x425608
  4188be:	nop
  4188bf:	nop
  4188c0:	jmp    QWORD PTR [rip+0xcd3a]        # 0x425600
  4188c6:	nop
  4188c7:	nop
  4188c8:	jmp    QWORD PTR [rip+0xcd2a]        # 0x4255f8
  4188ce:	nop
  4188cf:	nop
  4188d0:	jmp    QWORD PTR [rip+0xcd1a]        # 0x4255f0
  4188d6:	nop
  4188d7:	nop
  4188d8:	jmp    QWORD PTR [rip+0xcd0a]        # 0x4255e8
  4188de:	nop
  4188df:	nop
  4188e0:	jmp    QWORD PTR [rip+0xccfa]        # 0x4255e0
  4188e6:	nop
  4188e7:	nop
  4188e8:	jmp    QWORD PTR [rip+0xccea]        # 0x4255d8
  4188ee:	nop
  4188ef:	nop
  4188f0:	jmp    QWORD PTR [rip+0xccda]        # 0x4255d0
  4188f6:	nop
  4188f7:	nop
  4188f8:	jmp    QWORD PTR [rip+0xccca]        # 0x4255c8
  4188fe:	nop
  4188ff:	nop
  418900:	jmp    QWORD PTR [rip+0xccba]        # 0x4255c0
  418906:	nop
  418907:	nop
  418908:	jmp    QWORD PTR [rip+0xccaa]        # 0x4255b8
  41890e:	nop
  41890f:	nop
  418910:	push   rbp
  418911:	push   rdi
  418912:	push   rsi
  418913:	push   rbx
  418914:	sub    rsp,0x38
  418918:	mov    ebx,ecx
  41891a:	mov    rsi,rdx
  41891d:	call   0x411c70
  418922:	call   0x402560
  418927:	test   eax,eax
  418929:	js     0x418a71
  41892f:	mov    ecx,0x36
  418934:	call   0x4184b0
  418939:	mov    rcx,QWORD PTR [rip+0x7190]        # 0x41fad0
  418940:	mov    edx,ebx
  418942:	mov    r8,rsi
  418945:	call   0x40dd00
  41894a:	lea    rcx,[rip+0xfffffffffffe8d0f]        # 0x401660
  418951:	call   0x402558
  418956:	mov    rbx,QWORD PTR [rip+0x7173]        # 0x41fad0
  41895d:	mov    rax,QWORD PTR [rbx+0x78]
  418961:	mov    ecx,DWORD PTR [rax+0x18]
  418964:	call   0x402550
  418969:	mov    rax,QWORD PTR [rbx+0x78]
  41896d:	test   BYTE PTR [rax+0x2e8],0xf
  418974:	jne    0x418a27
  41897a:	test   BYTE PTR [rax+0x148],0xf
  418981:	lea    rdi,[rip+0x18d1]        # 0x41a259
  418988:	je     0x418991
  41898a:	mov    rdi,QWORD PTR [rax+0x150]
  418991:	test   BYTE PTR [rax+0x280],0xf
  418998:	lea    rsi,[rip+0x18c7]        # 0x41a266
  41899f:	jne    0x418a05
  4189a1:	test   BYTE PTR [rax+0xe0],0xf
  4189a8:	je     0x418a3b
  4189ae:	lea    rcx,[rip+0x18d4]        # 0x41a289
  4189b5:	mov    rbp,QWORD PTR [rax+0xe8]
  4189bc:	call   0x4119e0
  4189c1:	test   rax,rax
  4189c4:	je     0x418a56
  4189ca:	mov    r10,QWORD PTR [rbx+0x78]
  4189ce:	test   BYTE PTR [r10+0x218],0xf
  4189d6:	jne    0x418a0e
  4189d8:	mov    edx,DWORD PTR [r10+0x80]
  4189df:	mov    r9,rsi
  4189e2:	mov    QWORD PTR [rsp+0x20],rdi
  4189e7:	mov    r8d,0x10
  4189ed:	mov    rcx,rbp
  4189f0:	mov    DWORD PTR [rsp+0x28],edx
  4189f4:	mov    rdx,rax
  4189f7:	call   0x401fa0
  4189fc:	add    rsp,0x38
  418a00:	pop    rbx
  418a01:	pop    rsi
  418a02:	pop    rdi
  418a03:	pop    rbp
  418a04:	ret    
  418a05:	mov    rsi,QWORD PTR [rax+0x288]
  418a0c:	jmp    0x4189a1
  418a0e:	mov    r9,rax
  418a11:	mov    r8,rbp
  418a14:	mov    rdx,rdi
  418a17:	mov    rcx,rsi
  418a1a:	add    rsp,0x38
  418a1e:	pop    rbx
  418a1f:	pop    rsi
  418a20:	pop    rdi
  418a21:	pop    rbp
  418a22:	jmp    0x401a60
  418a27:	mov    rcx,QWORD PTR [rax+0x2f0]
  418a2e:	add    rsp,0x38
  418a32:	pop    rbx
  418a33:	pop    rsi
  418a34:	pop    rdi
  418a35:	pop    rbp
  418a36:	jmp    0x401690
  418a3b:	call   QWORD PTR [rip+0xcc97]        # 0x4256d8
  418a41:	lea    rdx,[rip+0x1852]        # 0x41a29a
  418a48:	lea    rcx,[rax+0x60]
  418a4c:	call   0x401630
  418a51:	or     eax,0xffffffff
  418a54:	jmp    0x4189fc
  418a56:	call   QWORD PTR [rip+0xcc7c]        # 0x4256d8
  418a5c:	lea    rdx,[rip+0x184e]        # 0x41a2b1
  418a63:	lea    rcx,[rax+0x60]
  418a67:	call   0x401630
  418a6c:	or     eax,0xffffffff
  418a6f:	jmp    0x4189fc
  418a71:	mov    ecx,eax
  418a73:	call   0x402520
  418a78:	mov    rbx,rax
  418a7b:	call   QWORD PTR [rip+0xcc57]        # 0x4256d8
  418a81:	lea    rdx,[rip+0x17f0]        # 0x41a278
  418a88:	lea    rcx,[rax+0x60]
  418a8c:	mov    r8,rbx
  418a8f:	call   0x401630
  418a94:	mov    ecx,0x1
  418a99:	call   0x418630
  418a9e:	nop
  418a9f:	nop
  418aa0:	(bad)  
  418aa1:	(bad)  
  418aa2:	(bad)  
  418aa3:	(bad)  
  418aa4:	(bad)  
  418aa5:	(bad)  
  418aa6:	(bad)  
  418aa7:	inc    DWORD PTR [rax]
  418aa9:	add    BYTE PTR [rax],al
  418aab:	add    BYTE PTR [rax],al
  418aad:	add    BYTE PTR [rax],al
  418aaf:	add    bh,bh
  418ab1:	(bad)  
  418ab2:	(bad)  
  418ab3:	(bad)  
  418ab4:	(bad)  
  418ab5:	(bad)  
  418ab6:	(bad)  
  418ab7:	inc    DWORD PTR [rax]
  418ab9:	add    BYTE PTR [rax],al
  418abb:	add    BYTE PTR [rax],al
  418abd:	add    BYTE PTR [rax],al
	...
