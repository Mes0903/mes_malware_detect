
10cfee2da8c02724184a60a0bf386df8ac988ca498dd39a64cdca65a58dd320a.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x46c5]        # 0x4056e0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x46c6]        # 0x4056f0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x46c9]        # 0x405700
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x468c]        # 0x4056d0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x453f]        # 0x405590
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4661]        # 0x4056c0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403138
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401eb0
  401081:	mov    rdx,QWORD PTR [rip+0x4598]        # 0x405620
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x457e]        # 0x405610
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x45e4]        # 0x405680
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x451b]        # 0x4055c0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401a90
  4010af:	mov    rax,QWORD PTR [rip+0x448a]        # 0x405540
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403138
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xc69]        # 0x401d90
  401127:	call   0x401d80
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4545]        # 0x4056b0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x44d5]        # 0x405670
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403150
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x44fa]        # 0x4056c0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x43fb]        # 0x4055f0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x810e]        # 0x409310
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x43d7]        # 0x405600
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x431c]        # 0x405580
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x4020a0
  40127d:	lea    rcx,[rip+0x13bc]        # 0x402640
  401284:	call   QWORD PTR [rip+0x807e]        # 0x409308
  40128a:	mov    rdx,QWORD PTR [rip+0x434f]        # 0x4055e0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402550
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403180
  4012a5:	call   0x401e90
  4012aa:	mov    rax,QWORD PTR [rip+0x42df]        # 0x405590
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x42f1]        # 0x4055b0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4030a8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x403080
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4030a8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4030a0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401a60
  4013bb:	mov    rax,QWORD PTR [rip+0x41de]        # 0x4055a0
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x40160e
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x403120
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x41c9]        # 0x405600
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x403128
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x41dd]        # 0x405640
  401463:	mov    rcx,QWORD PTR [rip+0x41c6]        # 0x405630
  40146a:	call   0x403110
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7e1f]        # 0x4092b8
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x41b9]        # 0x405660
  4014a7:	mov    rcx,QWORD PTR [rip+0x41a2]        # 0x405650
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x403110
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4030d8
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x41e5]        # 0x4056c0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401aa0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x41b5]        # 0x4056c0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401aa0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	lea    rbp,[rsp+0x80]
  40153e:	mov    QWORD PTR [rbp-0x40],rcx
  401542:	mov    QWORD PTR [rbp-0x38],rdx
  401546:	mov    QWORD PTR [rbp-0x30],r8
  40154a:	mov    rcx,QWORD PTR [rbp-0x40]
  40154e:	call   0x403058
  401553:	mov    rbx,rax
  401556:	mov    rax,QWORD PTR [rbp-0x30]
  40155a:	mov    rcx,rax
  40155d:	call   0x403058
  401562:	add    rax,rbx
  401565:	add    rax,0x1
  401569:	add    rax,rax
  40156c:	cmp    rax,QWORD PTR [rbp-0x38]
  401570:	jbe    0x40158d
  401572:	mov    r8d,0x2b
  401578:	lea    rdx,[rip+0x3a81]        # 0x405000
  40157f:	lea    rcx,[rip+0x3aa2]        # 0x405028
  401586:	call   0x402e50
  40158b:	jmp    0x40158e
  40158d:	nop
  40158e:	mov    rax,QWORD PTR [rbp-0x30]
  401592:	mov    rdx,rax
  401595:	mov    rcx,QWORD PTR [rbp-0x40]
  401599:	call   0x403068
  40159e:	mov    eax,0x0
  4015a3:	add    rsp,0x28
  4015a7:	pop    rbx
  4015a8:	pop    rbp
  4015a9:	ret    
  4015aa:	push   rbp
  4015ab:	mov    rbp,rsp
  4015ae:	sub    rsp,0x20
  4015b2:	mov    QWORD PTR [rbp+0x10],rcx
  4015b6:	mov    QWORD PTR [rbp+0x18],rdx
  4015ba:	mov    QWORD PTR [rbp+0x20],r8
  4015be:	mov    rax,QWORD PTR [rbp+0x20]
  4015c2:	mov    rcx,rax
  4015c5:	call   0x403058
  4015ca:	add    rax,0x1
  4015ce:	add    rax,rax
  4015d1:	cmp    rax,QWORD PTR [rbp+0x18]
  4015d5:	jbe    0x4015f2
  4015d7:	mov    r8d,0x34
  4015dd:	lea    rdx,[rip+0x3a1c]        # 0x405000
  4015e4:	lea    rcx,[rip+0x3abd]        # 0x4050a8
  4015eb:	call   0x402e50
  4015f0:	jmp    0x4015f3
  4015f2:	nop
  4015f3:	mov    rax,QWORD PTR [rbp+0x20]
  4015f7:	mov    rdx,rax
  4015fa:	mov    rcx,QWORD PTR [rbp+0x10]
  4015fe:	call   0x403060
  401603:	mov    eax,0x0
  401608:	add    rsp,0x20
  40160c:	pop    rbp
  40160d:	ret    
  40160e:	push   rbp
  40160f:	push   rbx
  401610:	sub    rsp,0x948
  401617:	lea    rbp,[rsp+0x80]
  40161f:	mov    DWORD PTR [rbp+0x8e0],ecx
  401625:	mov    QWORD PTR [rbp+0x8e8],rdx
  40162c:	call   0x401a60
  401631:	lea    rcx,[rip+0x3acc]        # 0x405104
  401638:	call   0x4030b0
  40163d:	mov    QWORD PTR [rbp+0x8b0],rax
  401644:	cmp    QWORD PTR [rbp+0x8b0],0x0
  40164c:	je     0x401663
  40164e:	mov    rax,QWORD PTR [rbp+0x8b0]
  401655:	movzx  eax,BYTE PTR [rax]
  401658:	test   al,al
  40165a:	je     0x401663
  40165c:	mov    eax,0x1
  401661:	jmp    0x401668
  401663:	mov    eax,0x0
  401668:	mov    DWORD PTR [rbp+0x8ac],eax
  40166e:	mov    DWORD PTR [rbp+0x8a8],0x1
  401678:	mov    DWORD PTR [rbp+0x8bc],0x0
  401682:	lea    rax,[rbp+0x480]
  401689:	mov    r8d,0x209
  40168f:	mov    rdx,rax
  401692:	mov    ecx,0x0
  401697:	mov    rax,QWORD PTR [rip+0x7c12]        # 0x4092b0
  40169e:	call   rax
  4016a0:	lea    rax,[rip+0x3a71]        # 0x405118
  4016a7:	mov    QWORD PTR [rbp+0x8a0],rax
  4016ae:	lea    rax,[rbp+0x480]
  4016b5:	mov    edx,0x5c
  4016ba:	mov    rcx,rax
  4016bd:	call   0x403050
  4016c2:	mov    QWORD PTR [rbp+0x898],rax
  4016c9:	cmp    QWORD PTR [rbp+0x898],0x0
  4016d1:	je     0x401761
  4016d7:	mov    rax,QWORD PTR [rbp+0x898]
  4016de:	add    rax,0x2
  4016e2:	mov    WORD PTR [rax],0x0
  4016e7:	mov    rdx,QWORD PTR [rbp+0x8a0]
  4016ee:	lea    rax,[rbp+0x480]
  4016f5:	mov    r8,rdx
  4016f8:	mov    edx,0x412
  4016fd:	mov    rcx,rax
  401700:	call   0x401530
  401705:	mov    WORD PTR [rbp+0x60],0x0
  40170b:	lea    rax,[rbp+0x60]
  40170f:	lea    r8,[rip+0x3a6c]        # 0x405182
  401716:	mov    edx,0x412
  40171b:	mov    rcx,rax
  40171e:	call   0x4015aa
  401723:	lea    rdx,[rbp+0x480]
  40172a:	lea    rax,[rbp+0x60]
  40172e:	mov    r8,rdx
  401731:	mov    edx,0x412
  401736:	mov    rcx,rax
  401739:	call   0x401530
  40173e:	lea    rax,[rbp+0x60]
  401742:	lea    r8,[rip+0x3a3d]        # 0x405186
  401749:	mov    edx,0x412
  40174e:	mov    rcx,rax
  401751:	call   0x401530
  401756:	cmp    DWORD PTR [rbp+0x8ac],0x0
  40175d:	je     0x4017be
  40175f:	jmp    0x40179b
  401761:	cmp    DWORD PTR [rbp+0x8ac],0x0
  401768:	je     0x401791
  40176a:	mov    rax,QWORD PTR [rip+0x7bf7]        # 0x409368
  401771:	call   rax
  401773:	add    rax,0x60
  401777:	mov    r9,rax
  40177a:	mov    r8d,0x48
  401780:	mov    edx,0x1
  401785:	lea    rcx,[rip+0x39ac]        # 0x405138
  40178c:	call   0x4030b8
  401791:	mov    eax,0x1
  401796:	jmp    0x4018e3
  40179b:	mov    rax,QWORD PTR [rip+0x7bc6]        # 0x409368
  4017a2:	call   rax
  4017a4:	add    rax,0x60
  4017a8:	lea    rdx,[rbp+0x60]
  4017ac:	mov    r8,rdx
  4017af:	lea    rdx,[rip+0x39e8]        # 0x40519e
  4017b6:	mov    rcx,rax
  4017b9:	call   0x4030d0
  4017be:	lea    rax,[rbp-0x30]
  4017c2:	mov    r8d,0x68
  4017c8:	mov    edx,0x0
  4017cd:	mov    rcx,rax
  4017d0:	call   0x403098
  4017d5:	lea    rax,[rbp+0x40]
  4017d9:	mov    r8d,0x18
  4017df:	mov    edx,0x0
  4017e4:	mov    rcx,rax
  4017e7:	call   0x403098
  4017ec:	mov    DWORD PTR [rbp-0x30],0x68
  4017f3:	cmp    DWORD PTR [rbp+0x8ac],0x0
  4017fa:	je     0x401803
  4017fc:	or     DWORD PTR [rbp+0x8bc],0x10
  401803:	or     DWORD PTR [rbp+0x8bc],0x20
  40180a:	cmp    DWORD PTR [rbp+0x8ac],0x0
  401811:	jne    0x40181a
  401813:	or     DWORD PTR [rbp+0x8bc],0x8
  40181a:	lea    rdx,[rbp+0x60]
  40181e:	lea    rax,[rbp+0x480]
  401825:	lea    rcx,[rbp+0x40]
  401829:	mov    QWORD PTR [rsp+0x48],rcx
  40182e:	lea    rcx,[rbp-0x30]
  401832:	mov    QWORD PTR [rsp+0x40],rcx
  401837:	mov    QWORD PTR [rsp+0x38],0x0
  401840:	mov    QWORD PTR [rsp+0x30],0x0
  401849:	mov    ecx,DWORD PTR [rbp+0x8bc]
  40184f:	mov    DWORD PTR [rsp+0x28],ecx
  401853:	mov    ecx,DWORD PTR [rbp+0x8a8]
  401859:	mov    DWORD PTR [rsp+0x20],ecx
  40185d:	mov    r9d,0x0
  401863:	mov    r8d,0x0
  401869:	mov    rcx,rax
  40186c:	mov    rax,QWORD PTR [rip+0x7a05]        # 0x409278
  401873:	call   rax
  401875:	mov    DWORD PTR [rbp+0x894],eax
  40187b:	cmp    DWORD PTR [rbp+0x894],0x0
  401882:	jne    0x4018be
  401884:	cmp    DWORD PTR [rbp+0x8ac],0x0
  40188b:	je     0x4018b7
  40188d:	mov    rax,QWORD PTR [rip+0x7a14]        # 0x4092a8
  401894:	call   rax
  401896:	mov    ebx,eax
  401898:	mov    rax,QWORD PTR [rip+0x7ac9]        # 0x409368
  40189f:	call   rax
  4018a1:	add    rax,0x60
  4018a5:	mov    r8d,ebx
  4018a8:	lea    rdx,[rip+0x38f9]        # 0x4051a8
  4018af:	mov    rcx,rax
  4018b2:	call   0x4030d0
  4018b7:	mov    eax,0x4
  4018bc:	jmp    0x4018e3
  4018be:	mov    rax,QWORD PTR [rbp+0x40]
  4018c2:	mov    rcx,rax
  4018c5:	mov    rax,QWORD PTR [rip+0x79a4]        # 0x409270
  4018cc:	call   rax
  4018ce:	mov    rax,QWORD PTR [rbp+0x48]
  4018d2:	mov    rcx,rax
  4018d5:	mov    rax,QWORD PTR [rip+0x7994]        # 0x409270
  4018dc:	call   rax
  4018de:	mov    eax,0x0
  4018e3:	add    rsp,0x948
  4018ea:	pop    rbx
  4018eb:	pop    rbp
  4018ec:	ret    
  4018ed:	nop
  4018ee:	nop
  4018ef:	nop
  4018f0:	push   rbx
  4018f1:	sub    rsp,0x30
  4018f5:	mov    rbx,rcx
  4018f8:	mov    rcx,QWORD PTR [rip+0x7111]        # 0x408a10
  4018ff:	call   0x401ea0
  401904:	cmp    rax,0xffffffffffffffff
  401908:	mov    QWORD PTR [rsp+0x20],rax
  40190d:	je     0x401985
  40190f:	mov    ecx,0x8
  401914:	call   0x403108
  401919:	mov    rcx,QWORD PTR [rip+0x70f0]        # 0x408a10
  401920:	call   0x401ea0
  401925:	mov    rcx,QWORD PTR [rip+0x70ec]        # 0x408a18
  40192c:	mov    QWORD PTR [rsp+0x20],rax
  401931:	call   0x401ea0
  401936:	lea    rdx,[rsp+0x20]
  40193b:	lea    r8,[rsp+0x28]
  401940:	mov    rcx,rbx
  401943:	mov    QWORD PTR [rsp+0x28],rax
  401948:	call   0x403158
  40194d:	mov    rcx,QWORD PTR [rsp+0x20]
  401952:	mov    rbx,rax
  401955:	call   0x401eb0
  40195a:	mov    rcx,QWORD PTR [rsp+0x28]
  40195f:	mov    QWORD PTR [rip+0x70aa],rax        # 0x408a10
  401966:	call   0x401eb0
  40196b:	mov    ecx,0x8
  401970:	mov    QWORD PTR [rip+0x70a1],rax        # 0x408a18
  401977:	call   0x4030f0
  40197c:	mov    rax,rbx
  40197f:	add    rsp,0x30
  401983:	pop    rbx
  401984:	ret    
  401985:	mov    rax,QWORD PTR [rip+0x3c44]        # 0x4055d0
  40198c:	mov    rcx,rbx
  40198f:	call   QWORD PTR [rax]
  401991:	add    rsp,0x30
  401995:	pop    rbx
  401996:	ret    
  401997:	nop    WORD PTR [rax+rax*1+0x0]
  4019a0:	sub    rsp,0x28
  4019a4:	call   0x4018f0
  4019a9:	test   rax,rax
  4019ac:	sete   al
  4019af:	movzx  eax,al
  4019b2:	neg    eax
  4019b4:	add    rsp,0x28
  4019b8:	ret    
  4019b9:	nop
  4019ba:	nop
  4019bb:	nop
  4019bc:	nop
  4019bd:	nop
  4019be:	nop
  4019bf:	nop
  4019c0:	sub    rsp,0x28
  4019c4:	mov    rax,QWORD PTR [rip+0x2645]        # 0x404010
  4019cb:	mov    rax,QWORD PTR [rax]
  4019ce:	test   rax,rax
  4019d1:	je     0x4019f0
  4019d3:	call   rax
  4019d5:	mov    rax,QWORD PTR [rip+0x2634]        # 0x404010
  4019dc:	lea    rdx,[rax+0x8]
  4019e0:	mov    rax,QWORD PTR [rax+0x8]
  4019e4:	mov    QWORD PTR [rip+0x2625],rdx        # 0x404010
  4019eb:	test   rax,rax
  4019ee:	jne    0x4019d3
  4019f0:	add    rsp,0x28
  4019f4:	ret    
  4019f5:	nop
  4019f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a00:	push   rsi
  401a01:	push   rbx
  401a02:	sub    rsp,0x28
  401a06:	mov    rsi,QWORD PTR [rip+0x3b43]        # 0x405550
  401a0d:	mov    rax,QWORD PTR [rsi]
  401a10:	cmp    eax,0xffffffff
  401a13:	mov    ebx,eax
  401a15:	je     0x401a40
  401a17:	test   ebx,ebx
  401a19:	je     0x401a2a
  401a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  401a20:	mov    eax,ebx
  401a22:	call   QWORD PTR [rsi+rax*8]
  401a25:	sub    ebx,0x1
  401a28:	jne    0x401a20
  401a2a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x4019c0
  401a31:	add    rsp,0x28
  401a35:	pop    rbx
  401a36:	pop    rsi
  401a37:	jmp    0x4019a0
  401a3c:	nop    DWORD PTR [rax+0x0]
  401a40:	xor    ebx,ebx
  401a42:	jmp    0x401a46
  401a44:	mov    ebx,eax
  401a46:	lea    edx,[rbx+0x1]
  401a49:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401a4e:	mov    rax,rdx
  401a51:	jne    0x401a44
  401a53:	jmp    0x401a17
  401a55:	nop
  401a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a60:	mov    eax,DWORD PTR [rip+0x65ca]        # 0x408030
  401a66:	test   eax,eax
  401a68:	je     0x401a70
  401a6a:	repz ret 
  401a6c:	nop    DWORD PTR [rax+0x0]
  401a70:	mov    DWORD PTR [rip+0x65b6],0x1        # 0x408030
  401a7a:	jmp    0x401a00
  401a7c:	nop
  401a7d:	nop
  401a7e:	nop
  401a7f:	nop
  401a80:	mov    rax,QWORD PTR [rip+0x78e9]        # 0x409370
  401a87:	rex.W jmp rax
  401a8a:	nop
  401a8b:	nop
  401a8c:	nop
  401a8d:	nop
  401a8e:	nop
  401a8f:	nop
  401a90:	xor    eax,eax
  401a92:	ret    
  401a93:	nop
  401a94:	nop
  401a95:	nop
  401a96:	nop
  401a97:	nop
  401a98:	nop
  401a99:	nop
  401a9a:	nop
  401a9b:	nop
  401a9c:	nop
  401a9d:	nop
  401a9e:	nop
  401a9f:	nop
  401aa0:	push   r12
  401aa2:	push   rbp
  401aa3:	push   rdi
  401aa4:	push   rsi
  401aa5:	push   rbx
  401aa6:	sub    rsp,0x40
  401aaa:	mov    rbx,QWORD PTR [rip+0x25bf]        # 0x404070
  401ab1:	movabs rax,0x2b992ddfa232
  401abb:	mov    QWORD PTR [rsp+0x20],0x0
  401ac4:	cmp    rbx,rax
  401ac7:	je     0x401ae0
  401ac9:	not    rbx
  401acc:	mov    QWORD PTR [rip+0x25ad],rbx        # 0x404080
  401ad3:	add    rsp,0x40
  401ad7:	pop    rbx
  401ad8:	pop    rsi
  401ad9:	pop    rdi
  401ada:	pop    rbp
  401adb:	pop    r12
  401add:	ret    
  401ade:	xchg   ax,ax
  401ae0:	lea    rcx,[rsp+0x20]
  401ae5:	call   QWORD PTR [rip+0x77d5]        # 0x4092c0
  401aeb:	mov    r12,QWORD PTR [rsp+0x20]
  401af0:	call   QWORD PTR [rip+0x77a2]        # 0x409298
  401af6:	mov    ebp,eax
  401af8:	call   QWORD PTR [rip+0x77a2]        # 0x4092a0
  401afe:	mov    edi,eax
  401b00:	call   QWORD PTR [rip+0x77c2]        # 0x4092c8
  401b06:	lea    rcx,[rsp+0x30]
  401b0b:	mov    esi,eax
  401b0d:	call   QWORD PTR [rip+0x77cd]        # 0x4092e0
  401b13:	xor    r12,QWORD PTR [rsp+0x30]
  401b18:	mov    edx,edi
  401b1a:	movabs rax,0xffffffffffff
  401b24:	xor    rbp,r12
  401b27:	mov    rdi,rbp
  401b2a:	xor    rdi,rdx
  401b2d:	mov    edx,esi
  401b2f:	xor    rdi,rdx
  401b32:	mov    rsi,rdi
  401b35:	and    rsi,rax
  401b38:	cmp    rsi,rbx
  401b3b:	je     0x401b60
  401b3d:	mov    rax,rsi
  401b40:	not    rax
  401b43:	mov    QWORD PTR [rip+0x2526],rsi        # 0x404070
  401b4a:	mov    QWORD PTR [rip+0x252f],rax        # 0x404080
  401b51:	add    rsp,0x40
  401b55:	pop    rbx
  401b56:	pop    rsi
  401b57:	pop    rdi
  401b58:	pop    rbp
  401b59:	pop    r12
  401b5b:	ret    
  401b5c:	nop    DWORD PTR [rax+0x0]
  401b60:	movabs rax,0xffffd466d2205dcc
  401b6a:	movabs rsi,0x2b992ddfa233
  401b74:	jmp    0x401b43
  401b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b80:	push   rbp
  401b81:	push   rsi
  401b82:	push   rbx
  401b83:	mov    rbp,rsp
  401b86:	sub    rsp,0x70
  401b8a:	mov    rsi,rcx
  401b8d:	lea    rcx,[rip+0x64ec]        # 0x408080
  401b94:	call   QWORD PTR [rip+0x7756]        # 0x4092f0
  401b9a:	mov    rbx,QWORD PTR [rip+0x65d7]        # 0x408178
  401ba1:	xor    r8d,r8d
  401ba4:	lea    rdx,[rbp-0x28]
  401ba8:	mov    rcx,rbx
  401bab:	call   QWORD PTR [rip+0x7747]        # 0x4092f8
  401bb1:	test   rax,rax
  401bb4:	mov    r9,rax
  401bb7:	je     0x401c60
  401bbd:	lea    rax,[rbp-0x20]
  401bc1:	mov    QWORD PTR [rsp+0x38],0x0
  401bca:	mov    r8,rbx
  401bcd:	mov    rdx,QWORD PTR [rbp-0x28]
  401bd1:	xor    ecx,ecx
  401bd3:	mov    QWORD PTR [rsp+0x30],rax
  401bd8:	lea    rax,[rbp-0x18]
  401bdc:	mov    QWORD PTR [rsp+0x28],rax
  401be1:	lea    rax,[rip+0x6498]        # 0x408080
  401be8:	mov    QWORD PTR [rsp+0x20],rax
  401bed:	call   QWORD PTR [rip+0x770d]        # 0x409300
  401bf3:	mov    rax,QWORD PTR [rip+0x657e]        # 0x408178
  401bfa:	xor    ecx,ecx
  401bfc:	mov    QWORD PTR [rip+0x64fd],rsi        # 0x408100
  401c03:	mov    DWORD PTR [rip+0x6973],0xc0000409        # 0x408580
  401c0d:	mov    DWORD PTR [rip+0x696d],0x1        # 0x408584
  401c17:	mov    QWORD PTR [rip+0x6972],rax        # 0x408590
  401c1e:	mov    rax,QWORD PTR [rip+0x244b]        # 0x404070
  401c25:	mov    QWORD PTR [rbp-0x10],rax
  401c29:	mov    rax,QWORD PTR [rip+0x2450]        # 0x404080
  401c30:	mov    QWORD PTR [rbp-0x8],rax
  401c34:	call   QWORD PTR [rip+0x76ce]        # 0x409308
  401c3a:	lea    rcx,[rip+0x358f]        # 0x4051d0
  401c41:	call   QWORD PTR [rip+0x76e1]        # 0x409328
  401c47:	call   QWORD PTR [rip+0x7643]        # 0x409290
  401c4d:	mov    edx,0xc0000409
  401c52:	mov    rcx,rax
  401c55:	call   QWORD PTR [rip+0x76bd]        # 0x409318
  401c5b:	call   0x4030e8
  401c60:	mov    rax,QWORD PTR [rbp+0x18]
  401c64:	mov    QWORD PTR [rip+0x650d],rax        # 0x408178
  401c6b:	lea    rax,[rbp+0x8]
  401c6f:	mov    QWORD PTR [rip+0x64a2],rax        # 0x408118
  401c76:	jmp    0x401bf3
  401c7b:	nop
  401c7c:	nop
  401c7d:	nop
  401c7e:	nop
  401c7f:	nop
  401c80:	sub    rsp,0x28
  401c84:	test   edx,edx
  401c86:	je     0x401ca0
  401c88:	cmp    edx,0x3
  401c8b:	je     0x401ca0
  401c8d:	mov    eax,0x1
  401c92:	add    rsp,0x28
  401c96:	ret    
  401c97:	nop    WORD PTR [rax+rax*1+0x0]
  401ca0:	call   0x402990
  401ca5:	mov    eax,0x1
  401caa:	add    rsp,0x28
  401cae:	ret    
  401caf:	nop
  401cb0:	push   rsi
  401cb1:	push   rbx
  401cb2:	sub    rsp,0x28
  401cb6:	mov    rax,QWORD PTR [rip+0x3873]        # 0x405530
  401cbd:	cmp    DWORD PTR [rax],0x2
  401cc0:	je     0x401cc8
  401cc2:	mov    DWORD PTR [rax],0x2
  401cc8:	cmp    edx,0x2
  401ccb:	je     0x401ce0
  401ccd:	cmp    edx,0x1
  401cd0:	je     0x401d12
  401cd2:	mov    eax,0x1
  401cd7:	add    rsp,0x28
  401cdb:	pop    rbx
  401cdc:	pop    rsi
  401cdd:	ret    
  401cde:	xchg   ax,ax
  401ce0:	lea    rbx,[rip+0x8379]        # 0x40a060
  401ce7:	lea    rsi,[rip+0x8372]        # 0x40a060
  401cee:	cmp    rbx,rsi
  401cf1:	je     0x401cd2
  401cf3:	mov    rax,QWORD PTR [rbx]
  401cf6:	test   rax,rax
  401cf9:	je     0x401cfd
  401cfb:	call   rax
  401cfd:	add    rbx,0x8
  401d01:	cmp    rbx,rsi
  401d04:	jne    0x401cf3
  401d06:	mov    eax,0x1
  401d0b:	add    rsp,0x28
  401d0f:	pop    rbx
  401d10:	pop    rsi
  401d11:	ret    
  401d12:	call   0x402990
  401d17:	jmp    0x401cd2
  401d19:	nop    DWORD PTR [rax+0x0]
  401d20:	xor    eax,eax
  401d22:	ret    
  401d23:	nop
  401d24:	nop
  401d25:	nop
  401d26:	nop
  401d27:	nop
  401d28:	nop
  401d29:	nop
  401d2a:	nop
  401d2b:	nop
  401d2c:	nop
  401d2d:	nop
  401d2e:	nop
  401d2f:	nop
  401d30:	sub    rsp,0x58
  401d34:	mov    rax,QWORD PTR [rip+0x6925]        # 0x408660
  401d3b:	test   rax,rax
  401d3e:	je     0x401d6c
  401d40:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401d49:	mov    DWORD PTR [rsp+0x20],ecx
  401d4d:	lea    rcx,[rsp+0x20]
  401d52:	mov    QWORD PTR [rsp+0x28],rdx
  401d57:	movsd  QWORD PTR [rsp+0x30],xmm2
  401d5d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401d63:	movsd  QWORD PTR [rsp+0x40],xmm0
  401d69:	call   rax
  401d6b:	nop
  401d6c:	add    rsp,0x58
  401d70:	ret    
  401d71:	nop    DWORD PTR [rax+rax*1+0x0]
  401d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d80:	mov    QWORD PTR [rip+0x68d9],rcx        # 0x408660
  401d87:	jmp    0x403130
  401d8c:	nop    DWORD PTR [rax+0x0]
  401d90:	push   rsi
  401d91:	push   rbx
  401d92:	sub    rsp,0x78
  401d96:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401d9b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401da0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401da6:	cmp    DWORD PTR [rcx],0x6
  401da9:	ja     0x401e80
  401daf:	mov    edx,DWORD PTR [rcx]
  401db1:	lea    rax,[rip+0x355c]        # 0x405314
  401db8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401dbc:	add    rax,rdx
  401dbf:	jmp    rax
  401dc1:	lea    rbx,[rip+0x3428]        # 0x4051f0
  401dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  401dd0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401dd6:	mov    rsi,QWORD PTR [rcx+0x8]
  401dda:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401ddf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401de4:	call   0x403148
  401de9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401df0:	lea    rcx,[rax+0x60]
  401df4:	lea    rdx,[rip+0x34ed]        # 0x4052e8
  401dfb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401e01:	mov    r9,rsi
  401e04:	mov    r8,rbx
  401e07:	movsd  QWORD PTR [rsp+0x20],xmm6
  401e0d:	call   0x4030d0
  401e12:	nop
  401e13:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401e18:	xor    eax,eax
  401e1a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401e1f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401e25:	add    rsp,0x78
  401e29:	pop    rbx
  401e2a:	pop    rsi
  401e2b:	ret    
  401e2c:	nop    DWORD PTR [rax+0x0]
  401e30:	lea    rbx,[rip+0x33d8]        # 0x40520f
  401e37:	jmp    0x401dd0
  401e39:	nop    DWORD PTR [rax+0x0]
  401e40:	lea    rbx,[rip+0x33e9]        # 0x405230
  401e47:	jmp    0x401dd0
  401e49:	nop    DWORD PTR [rax+0x0]
  401e50:	lea    rbx,[rip+0x3449]        # 0x4052a0
  401e57:	jmp    0x401dd0
  401e5c:	nop    DWORD PTR [rax+0x0]
  401e60:	lea    rbx,[rip+0x3411]        # 0x405278
  401e67:	jmp    0x401dd0
  401e6c:	nop    DWORD PTR [rax+0x0]
  401e70:	lea    rbx,[rip+0x33d9]        # 0x405250
  401e77:	jmp    0x401dd0
  401e7c:	nop    DWORD PTR [rax+0x0]
  401e80:	lea    rbx,[rip+0x344f]        # 0x4052d6
  401e87:	jmp    0x401dd0
  401e8c:	nop
  401e8d:	nop
  401e8e:	nop
  401e8f:	nop
  401e90:	fninit 
  401e92:	ret    
  401e93:	nop
  401e94:	nop
  401e95:	nop
  401e96:	nop
  401e97:	nop
  401e98:	nop
  401e99:	nop
  401e9a:	nop
  401e9b:	nop
  401e9c:	nop
  401e9d:	nop
  401e9e:	nop
  401e9f:	nop
  401ea0:	mov    rax,rcx
  401ea3:	ret    
  401ea4:	xchg   ax,ax
  401ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401eb0:	mov    rax,rcx
  401eb3:	ret    
  401eb4:	nop
  401eb5:	nop
  401eb6:	nop
  401eb7:	nop
  401eb8:	nop
  401eb9:	nop
  401eba:	nop
  401ebb:	nop
  401ebc:	nop
  401ebd:	nop
  401ebe:	nop
  401ebf:	nop
  401ec0:	push   rsi
  401ec1:	push   rbx
  401ec2:	sub    rsp,0x38
  401ec6:	lea    rax,[rsp+0x58]
  401ecb:	mov    rbx,rcx
  401ece:	mov    QWORD PTR [rsp+0x58],rdx
  401ed3:	mov    QWORD PTR [rsp+0x60],r8
  401ed8:	mov    QWORD PTR [rsp+0x68],r9
  401edd:	mov    QWORD PTR [rsp+0x28],rax
  401ee2:	call   0x403148
  401ee7:	lea    rcx,[rip+0x3442]        # 0x405330
  401eee:	lea    r9,[rax+0x60]
  401ef2:	mov    r8d,0x1b
  401ef8:	mov    edx,0x1
  401efd:	call   0x4030b8
  401f02:	mov    rsi,QWORD PTR [rsp+0x28]
  401f07:	call   0x403148
  401f0c:	lea    rcx,[rax+0x60]
  401f10:	mov    rdx,rbx
  401f13:	mov    r8,rsi
  401f16:	call   0x403070
  401f1b:	call   0x4030e8
  401f20:	nop
  401f21:	nop    DWORD PTR [rax+rax*1+0x0]
  401f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f30:	push   r13
  401f32:	push   r12
  401f34:	push   rbp
  401f35:	push   rdi
  401f36:	push   rsi
  401f37:	push   rbx
  401f38:	sub    rsp,0x58
  401f3c:	movsxd rbp,DWORD PTR [rip+0x6741]        # 0x408684
  401f43:	mov    rbx,rcx
  401f46:	mov    rsi,rdx
  401f49:	mov    rdi,r8
  401f4c:	test   ebp,ebp
  401f4e:	jle    0x40204a
  401f54:	mov    rax,QWORD PTR [rip+0x672d]        # 0x408688
  401f5b:	xor    r9d,r9d
  401f5e:	add    rax,0x8
  401f62:	mov    r10,QWORD PTR [rax]
  401f65:	cmp    rbx,r10
  401f68:	jb     0x401f7e
  401f6a:	mov    rdx,QWORD PTR [rax+0x8]
  401f6e:	mov    r11d,DWORD PTR [rdx+0x8]
  401f72:	add    r10,r11
  401f75:	cmp    rbx,r10
  401f78:	jb     0x402030
  401f7e:	add    r9d,0x1
  401f82:	add    rax,0x18
  401f86:	cmp    r9d,ebp
  401f89:	jne    0x401f62
  401f8b:	mov    rcx,rbx
  401f8e:	call   0x402ba0
  401f93:	test   rax,rax
  401f96:	mov    r12,rax
  401f99:	je     0x402082
  401f9f:	lea    rbp,[rbp+rbp*2+0x0]
  401fa4:	shl    rbp,0x3
  401fa8:	mov    r13,rbp
  401fab:	add    r13,QWORD PTR [rip+0x66d6]        # 0x408688
  401fb2:	mov    QWORD PTR [r13+0x10],rax
  401fb6:	mov    DWORD PTR [r13+0x0],0x0
  401fbe:	call   0x402cc0
  401fc3:	mov    edx,DWORD PTR [r12+0xc]
  401fc8:	mov    r8d,0x30
  401fce:	add    rax,rdx
  401fd1:	lea    rdx,[rsp+0x20]
  401fd6:	mov    QWORD PTR [r13+0x8],rax
  401fda:	mov    rax,QWORD PTR [rip+0x66a7]        # 0x408688
  401fe1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401fe6:	call   QWORD PTR [rip+0x734c]        # 0x409338
  401fec:	test   rax,rax
  401fef:	je     0x402065
  401ff1:	mov    eax,DWORD PTR [rsp+0x44]
  401ff5:	lea    edx,[rax-0x4]
  401ff8:	and    edx,0xfffffffb
  401ffb:	je     0x402029
  401ffd:	sub    eax,0x40
  402000:	and    eax,0xffffffbf
  402003:	je     0x402029
  402005:	mov    r9,rbp
  402008:	add    r9,QWORD PTR [rip+0x6679]        # 0x408688
  40200f:	mov    r8d,0x40
  402015:	mov    rdx,QWORD PTR [rsp+0x38]
  40201a:	mov    rcx,QWORD PTR [rsp+0x20]
  40201f:	call   QWORD PTR [rip+0x730b]        # 0x409330
  402025:	test   eax,eax
  402027:	je     0x402051
  402029:	add    DWORD PTR [rip+0x6654],0x1        # 0x408684
  402030:	mov    r8,rdi
  402033:	mov    rdx,rsi
  402036:	mov    rcx,rbx
  402039:	add    rsp,0x58
  40203d:	pop    rbx
  40203e:	pop    rsi
  40203f:	pop    rdi
  402040:	pop    rbp
  402041:	pop    r12
  402043:	pop    r13
  402045:	jmp    0x4030a0
  40204a:	xor    ebp,ebp
  40204c:	jmp    0x401f8b
  402051:	call   QWORD PTR [rip+0x7251]        # 0x4092a8
  402057:	lea    rcx,[rip+0x334a]        # 0x4053a8
  40205e:	mov    edx,eax
  402060:	call   0x401ec0
  402065:	mov    rax,QWORD PTR [rip+0x661c]        # 0x408688
  40206c:	mov    edx,DWORD PTR [r12+0x8]
  402071:	lea    rcx,[rip+0x32f8]        # 0x405370
  402078:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40207d:	call   0x401ec0
  402082:	lea    rcx,[rip+0x32c7]        # 0x405350
  402089:	mov    rdx,rbx
  40208c:	call   0x401ec0
  402091:	nop
  402092:	nop    DWORD PTR [rax+0x0]
  402096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4020a0:	push   rbp
  4020a1:	push   r14
  4020a3:	push   r13
  4020a5:	push   r12
  4020a7:	push   rdi
  4020a8:	push   rsi
  4020a9:	push   rbx
  4020aa:	mov    rbp,rsp
  4020ad:	sub    rsp,0x60
  4020b1:	mov    ebx,DWORD PTR [rip+0x65c9]        # 0x408680
  4020b7:	test   ebx,ebx
  4020b9:	je     0x4020d0
  4020bb:	mov    rsp,rbp
  4020be:	pop    rbx
  4020bf:	pop    rsi
  4020c0:	pop    rdi
  4020c1:	pop    r12
  4020c3:	pop    r13
  4020c5:	pop    r14
  4020c7:	pop    rbp
  4020c8:	ret    
  4020c9:	nop    DWORD PTR [rax+0x0]
  4020d0:	mov    DWORD PTR [rip+0x65a6],0x1        # 0x408680
  4020da:	call   0x402bf0
  4020df:	cdqe   
  4020e1:	lea    rax,[rax+rax*2]
  4020e5:	lea    rax,[rax*8+0x1e]
  4020ed:	and    rax,0xfffffffffffffff0
  4020f1:	call   0x402e10
  4020f6:	mov    rsi,QWORD PTR [rip+0x3463]        # 0x405560
  4020fd:	mov    rbx,QWORD PTR [rip+0x346c]        # 0x405570
  402104:	sub    rsp,rax
  402107:	mov    DWORD PTR [rip+0x6573],0x0        # 0x408684
  402111:	lea    rax,[rsp+0x20]
  402116:	mov    QWORD PTR [rip+0x656b],rax        # 0x408688
  40211d:	mov    rax,rsi
  402120:	sub    rax,rbx
  402123:	cmp    rax,0x7
  402127:	jle    0x4020bb
  402129:	cmp    rax,0xb
  40212d:	jle    0x402155
  40212f:	mov    r11d,DWORD PTR [rbx]
  402132:	test   r11d,r11d
  402135:	jne    0x402280
  40213b:	mov    r10d,DWORD PTR [rbx+0x4]
  40213f:	test   r10d,r10d
  402142:	jne    0x402280
  402148:	mov    r9d,DWORD PTR [rbx+0x8]
  40214c:	test   r9d,r9d
  40214f:	jne    0x40216c
  402151:	add    rbx,0xc
  402155:	mov    r8d,DWORD PTR [rbx]
  402158:	test   r8d,r8d
  40215b:	jne    0x402280
  402161:	mov    ecx,DWORD PTR [rbx+0x4]
  402164:	test   ecx,ecx
  402166:	jne    0x402280
  40216c:	mov    edx,DWORD PTR [rbx+0x8]
  40216f:	cmp    edx,0x1
  402172:	jne    0x40238c
  402178:	add    rbx,0xc
  40217c:	cmp    rbx,rsi
  40217f:	jae    0x4020bb
  402185:	mov    r12,QWORD PTR [rip+0x3404]        # 0x405590
  40218c:	lea    r13,[rbp-0x30]
  402190:	movabs r14,0xffffffff00000000
  40219a:	mov    ecx,DWORD PTR [rbx+0x4]
  40219d:	mov    eax,DWORD PTR [rbx]
  40219f:	movzx  edx,BYTE PTR [rbx+0x8]
  4021a3:	add    rax,r12
  4021a6:	add    rcx,r12
  4021a9:	cmp    edx,0x10
  4021ac:	mov    r8,QWORD PTR [rax]
  4021af:	je     0x4022f6
  4021b5:	jbe    0x4022bd
  4021bb:	cmp    edx,0x20
  4021be:	je     0x40233f
  4021c4:	cmp    edx,0x40
  4021c7:	jne    0x40232b
  4021cd:	sub    r8,rax
  4021d0:	mov    rdx,r13
  4021d3:	mov    rdi,r13
  4021d6:	mov    rax,r8
  4021d9:	add    rax,QWORD PTR [rcx]
  4021dc:	mov    r8d,0x8
  4021e2:	mov    QWORD PTR [rbp-0x30],rax
  4021e6:	call   0x401f30
  4021eb:	add    rbx,0xc
  4021ef:	cmp    rbx,rsi
  4021f2:	jb     0x40219a
  4021f4:	mov    eax,DWORD PTR [rip+0x648a]        # 0x408684
  4021fa:	xor    ebx,ebx
  4021fc:	xor    esi,esi
  4021fe:	test   eax,eax
  402200:	jle    0x4020bb
  402206:	mov    r14,QWORD PTR [rip+0x712b]        # 0x409338
  40220d:	lea    r13,[rbp-0x34]
  402211:	mov    r12,QWORD PTR [rip+0x7118]        # 0x409330
  402218:	jmp    0x402233
  40221a:	nop    WORD PTR [rax+rax*1+0x0]
  402220:	add    esi,0x1
  402223:	add    rbx,0x18
  402227:	cmp    esi,DWORD PTR [rip+0x6457]        # 0x408684
  40222d:	jge    0x4020bb
  402233:	mov    rax,rbx
  402236:	add    rax,QWORD PTR [rip+0x644b]        # 0x408688
  40223d:	mov    edx,DWORD PTR [rax]
  40223f:	test   edx,edx
  402241:	je     0x402220
  402243:	mov    rcx,QWORD PTR [rax+0x8]
  402247:	mov    r8d,0x30
  40224d:	mov    rdx,rdi
  402250:	call   r14
  402253:	test   rax,rax
  402256:	je     0x40236e
  40225c:	mov    rax,QWORD PTR [rip+0x6425]        # 0x408688
  402263:	mov    r9,r13
  402266:	mov    rdx,QWORD PTR [rbp-0x18]
  40226a:	mov    rcx,QWORD PTR [rbp-0x30]
  40226e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402272:	call   r12
  402275:	jmp    0x402220
  402277:	nop    WORD PTR [rax+rax*1+0x0]
  402280:	cmp    rbx,rsi
  402283:	jae    0x4020bb
  402289:	mov    r12,QWORD PTR [rip+0x3300]        # 0x405590
  402290:	lea    rdi,[rbp-0x30]
  402294:	mov    ecx,DWORD PTR [rbx+0x4]
  402297:	mov    eax,DWORD PTR [rbx]
  402299:	mov    r8d,0x4
  40229f:	mov    rdx,rdi
  4022a2:	add    rbx,0x8
  4022a6:	add    rcx,r12
  4022a9:	add    eax,DWORD PTR [rcx]
  4022ab:	mov    DWORD PTR [rbp-0x30],eax
  4022ae:	call   0x401f30
  4022b3:	cmp    rbx,rsi
  4022b6:	jb     0x402294
  4022b8:	jmp    0x4021f4
  4022bd:	cmp    edx,0x8
  4022c0:	jne    0x40232b
  4022c2:	movzx  edx,BYTE PTR [rcx]
  4022c5:	mov    rdi,r13
  4022c8:	mov    r10,rdx
  4022cb:	or     r10,0xffffffffffffff00
  4022d2:	test   dl,dl
  4022d4:	cmovs  rdx,r10
  4022d8:	sub    rdx,rax
  4022db:	lea    rax,[r8+rdx*1]
  4022df:	mov    r8d,0x1
  4022e5:	mov    rdx,r13
  4022e8:	mov    QWORD PTR [rbp-0x30],rax
  4022ec:	call   0x401f30
  4022f1:	jmp    0x4021eb
  4022f6:	movzx  edx,WORD PTR [rcx]
  4022f9:	mov    rdi,r13
  4022fc:	mov    r10,rdx
  4022ff:	or     r10,0xffffffffffff0000
  402306:	test   dx,dx
  402309:	cmovs  rdx,r10
  40230d:	sub    rdx,rax
  402310:	lea    rax,[r8+rdx*1]
  402314:	mov    r8d,0x2
  40231a:	mov    rdx,r13
  40231d:	mov    QWORD PTR [rbp-0x30],rax
  402321:	call   0x401f30
  402326:	jmp    0x4021eb
  40232b:	lea    rcx,[rip+0x30d6]        # 0x405408
  402332:	mov    QWORD PTR [rbp-0x30],0x0
  40233a:	call   0x401ec0
  40233f:	mov    edx,DWORD PTR [rcx]
  402341:	mov    rdi,r13
  402344:	mov    r10,rdx
  402347:	or     r10,r14
  40234a:	test   edx,edx
  40234c:	cmovs  rdx,r10
  402350:	sub    rdx,rax
  402353:	lea    rax,[r8+rdx*1]
  402357:	mov    r8d,0x4
  40235d:	mov    rdx,r13
  402360:	mov    QWORD PTR [rbp-0x30],rax
  402364:	call   0x401f30
  402369:	jmp    0x4021eb
  40236e:	add    rbx,QWORD PTR [rip+0x6313]        # 0x408688
  402375:	lea    rcx,[rip+0x2ff4]        # 0x405370
  40237c:	mov    rax,QWORD PTR [rbx+0x10]
  402380:	mov    r8,QWORD PTR [rbx+0x8]
  402384:	mov    edx,DWORD PTR [rax+0x8]
  402387:	call   0x401ec0
  40238c:	lea    rcx,[rip+0x303d]        # 0x4053d0
  402393:	call   0x401ec0
  402398:	nop
  402399:	nop
  40239a:	nop
  40239b:	nop
  40239c:	nop
  40239d:	nop
  40239e:	nop
  40239f:	nop
  4023a0:	sub    rsp,0x28
  4023a4:	mov    eax,DWORD PTR [rcx]
  4023a6:	cmp    eax,0xc0000091
  4023ab:	ja     0x402410
  4023ad:	cmp    eax,0xc000008d
  4023b2:	jae    0x40242f
  4023b4:	cmp    eax,0xc0000008
  4023b9:	je     0x4024d0
  4023bf:	ja     0x4024a0
  4023c5:	cmp    eax,0x80000002
  4023ca:	je     0x4024d0
  4023d0:	cmp    eax,0xc0000005
  4023d5:	jne    0x4024ae
  4023db:	xor    edx,edx
  4023dd:	mov    ecx,0xb
  4023e2:	call   0x403088
  4023e7:	cmp    rax,0x1
  4023eb:	je     0x402530
  4023f1:	test   rax,rax
  4023f4:	je     0x402510
  4023fa:	mov    ecx,0xb
  4023ff:	call   rax
  402401:	xor    eax,eax
  402403:	add    rsp,0x28
  402407:	ret    
  402408:	nop    DWORD PTR [rax+rax*1+0x0]
  402410:	cmp    eax,0xc0000094
  402415:	je     0x4024e0
  40241b:	ja     0x402460
  40241d:	cmp    eax,0xc0000092
  402422:	je     0x4024d0
  402428:	cmp    eax,0xc0000093
  40242d:	jne    0x4024ae
  40242f:	xor    edx,edx
  402431:	mov    ecx,0x8
  402436:	call   0x403088
  40243b:	cmp    rax,0x1
  40243f:	mov    rdx,rax
  402442:	je     0x4024b8
  402444:	test   rdx,rdx
  402447:	mov    eax,0x1
  40244c:	je     0x402403
  40244e:	mov    ecx,0x8
  402453:	call   rdx
  402455:	xor    eax,eax
  402457:	add    rsp,0x28
  40245b:	ret    
  40245c:	nop    DWORD PTR [rax+0x0]
  402460:	cmp    eax,0xc0000095
  402465:	je     0x4024d0
  402467:	cmp    eax,0xc0000096
  40246c:	jne    0x4024ae
  40246e:	xor    edx,edx
  402470:	mov    ecx,0x4
  402475:	call   0x403088
  40247a:	cmp    rax,0x1
  40247e:	je     0x40251a
  402484:	test   rax,rax
  402487:	je     0x402510
  40248d:	mov    ecx,0x4
  402492:	call   rax
  402494:	xor    eax,eax
  402496:	jmp    0x402403
  40249b:	nop    DWORD PTR [rax+rax*1+0x0]
  4024a0:	cmp    eax,0xc000001d
  4024a5:	je     0x40246e
  4024a7:	cmp    eax,0xc000008c
  4024ac:	je     0x4024d0
  4024ae:	mov    eax,0x1
  4024b3:	add    rsp,0x28
  4024b7:	ret    
  4024b8:	mov    edx,0x1
  4024bd:	mov    ecx,0x8
  4024c2:	call   0x403088
  4024c7:	call   0x401e90
  4024cc:	nop    DWORD PTR [rax+0x0]
  4024d0:	xor    eax,eax
  4024d2:	add    rsp,0x28
  4024d6:	ret    
  4024d7:	nop    WORD PTR [rax+rax*1+0x0]
  4024e0:	xor    edx,edx
  4024e2:	mov    ecx,0x8
  4024e7:	call   0x403088
  4024ec:	cmp    rax,0x1
  4024f0:	mov    rdx,rax
  4024f3:	jne    0x402444
  4024f9:	mov    edx,0x1
  4024fe:	mov    ecx,0x8
  402503:	call   0x403088
  402508:	xor    eax,eax
  40250a:	jmp    0x402403
  40250f:	nop
  402510:	mov    eax,0x4
  402515:	add    rsp,0x28
  402519:	ret    
  40251a:	mov    edx,0x1
  40251f:	mov    ecx,0x4
  402524:	call   0x403088
  402529:	xor    eax,eax
  40252b:	jmp    0x402403
  402530:	mov    edx,0x1
  402535:	mov    ecx,0xb
  40253a:	call   0x403088
  40253f:	xor    eax,eax
  402541:	jmp    0x402403
  402546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402550:	push   r12
  402552:	push   rbp
  402553:	push   rdi
  402554:	push   rsi
  402555:	push   rbx
  402556:	sub    rsp,0x20
  40255a:	call   0x402cc0
  40255f:	mov    rbp,rax
  402562:	mov    eax,DWORD PTR [rip+0x6160]        # 0x4086c8
  402568:	test   eax,eax
  40256a:	jne    0x402591
  40256c:	test   rbp,rbp
  40256f:	je     0x402591
  402571:	lea    rcx,[rip+0x2ec8]        # 0x405440
  402578:	mov    DWORD PTR [rip+0x6146],0x1        # 0x4086c8
  402582:	call   0x402b00
  402587:	test   rax,rax
  40258a:	je     0x4025a0
  40258c:	mov    eax,0x1
  402591:	add    rsp,0x20
  402595:	pop    rbx
  402596:	pop    rsi
  402597:	pop    rdi
  402598:	pop    rbp
  402599:	pop    r12
  40259b:	ret    
  40259c:	nop    DWORD PTR [rax+0x0]
  4025a0:	lea    rbx,[rip+0x6259]        # 0x408800
  4025a7:	mov    ecx,0x30
  4025ac:	lea    rdx,[rip+0x614d]        # 0x408700
  4025b3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4023a0
  4025ba:	xor    esi,esi
  4025bc:	mov    rdi,rbx
  4025bf:	rep stos QWORD PTR es:[rdi],rax
  4025c2:	mov    rdi,rdx
  4025c5:	sub    r12,rbp
  4025c8:	mov    cl,0x20
  4025ca:	rep stos QWORD PTR es:[rdi],rax
  4025cd:	mov    rdi,rdx
  4025d0:	jmp    0x402600
  4025d2:	mov    BYTE PTR [rdi],0x9
  4025d5:	mov    DWORD PTR [rdi+0x4],r12d
  4025d9:	add    rsi,0x1
  4025dd:	mov    edx,DWORD PTR [rax+0xc]
  4025e0:	add    rbx,0xc
  4025e4:	mov    DWORD PTR [rbx-0xc],edx
  4025e7:	add    edx,DWORD PTR [rax+0x8]
  4025ea:	mov    rax,rdi
  4025ed:	sub    rax,rbp
  4025f0:	add    rdi,0x8
  4025f4:	mov    DWORD PTR [rbx-0x4],eax
  4025f7:	mov    DWORD PTR [rbx-0x8],edx
  4025fa:	cmp    rsi,0x20
  4025fe:	je     0x402635
  402600:	mov    rcx,rsi
  402603:	call   0x402c30
  402608:	test   rax,rax
  40260b:	jne    0x4025d2
  40260d:	test   rsi,rsi
  402610:	je     0x40258c
  402616:	mov    edx,esi
  402618:	nop    DWORD PTR [rax+rax*1+0x0]
  402620:	mov    r8,rbp
  402623:	lea    rcx,[rip+0x61d6]        # 0x408800
  40262a:	call   QWORD PTR [rip+0x6cb8]        # 0x4092e8
  402630:	jmp    0x40258c
  402635:	mov    edx,0x20
  40263a:	jmp    0x402620
  40263c:	nop    DWORD PTR [rax+0x0]
  402640:	push   rbx
  402641:	sub    rsp,0x20
  402645:	mov    rdx,QWORD PTR [rcx]
  402648:	mov    eax,DWORD PTR [rdx]
  40264a:	mov    r8d,eax
  40264d:	and    r8d,0x20ffffff
  402654:	cmp    r8d,0x20474343
  40265b:	je     0x402760
  402661:	cmp    eax,0xc0000091
  402666:	mov    rbx,rcx
  402669:	ja     0x4026f0
  40266f:	cmp    eax,0xc000008d
  402674:	jae    0x402707
  40267a:	cmp    eax,0xc0000008
  40267f:	je     0x4026b3
  402681:	ja     0x4026c0
  402683:	cmp    eax,0x80000002
  402688:	je     0x4026b3
  40268a:	cmp    eax,0xc0000005
  40268f:	jne    0x4026d2
  402691:	xor    edx,edx
  402693:	mov    ecx,0xb
  402698:	call   0x403088
  40269d:	cmp    rax,0x1
  4026a1:	je     0x4027d0
  4026a7:	test   rax,rax
  4026aa:	je     0x4026d2
  4026ac:	mov    ecx,0xb
  4026b1:	call   rax
  4026b3:	mov    eax,0xffffffff
  4026b8:	add    rsp,0x20
  4026bc:	pop    rbx
  4026bd:	ret    
  4026be:	xchg   ax,ax
  4026c0:	cmp    eax,0xc000001d
  4026c5:	je     0x402786
  4026cb:	cmp    eax,0xc000008c
  4026d0:	je     0x4026b3
  4026d2:	mov    rax,QWORD PTR [rip+0x5fe7]        # 0x4086c0
  4026d9:	test   rax,rax
  4026dc:	je     0x4026b8
  4026de:	mov    rcx,rbx
  4026e1:	add    rsp,0x20
  4026e5:	pop    rbx
  4026e6:	rex.W jmp rax
  4026e9:	nop    DWORD PTR [rax+0x0]
  4026f0:	cmp    eax,0xc0000094
  4026f5:	je     0x402732
  4026f7:	ja     0x402770
  4026f9:	cmp    eax,0xc0000092
  4026fe:	je     0x4026b3
  402700:	cmp    eax,0xc0000093
  402705:	jne    0x4026d2
  402707:	xor    edx,edx
  402709:	mov    ecx,0x8
  40270e:	call   0x403088
  402713:	cmp    rax,0x1
  402717:	jne    0x402744
  402719:	mov    edx,0x1
  40271e:	mov    ecx,0x8
  402723:	call   0x403088
  402728:	call   0x401e90
  40272d:	jmp    0x4026b3
  402732:	xor    edx,edx
  402734:	mov    ecx,0x8
  402739:	call   0x403088
  40273e:	cmp    rax,0x1
  402742:	je     0x4027b2
  402744:	test   rax,rax
  402747:	je     0x4026d2
  402749:	mov    ecx,0x8
  40274e:	call   rax
  402750:	mov    eax,0xffffffff
  402755:	jmp    0x4026b8
  40275a:	nop    WORD PTR [rax+rax*1+0x0]
  402760:	test   BYTE PTR [rdx+0x4],0x1
  402764:	jne    0x402661
  40276a:	jmp    0x4026b3
  40276f:	nop
  402770:	cmp    eax,0xc0000095
  402775:	je     0x4026b3
  40277b:	cmp    eax,0xc0000096
  402780:	jne    0x4026d2
  402786:	xor    edx,edx
  402788:	mov    ecx,0x4
  40278d:	call   0x403088
  402792:	cmp    rax,0x1
  402796:	je     0x4027e4
  402798:	test   rax,rax
  40279b:	je     0x4026d2
  4027a1:	mov    ecx,0x4
  4027a6:	call   rax
  4027a8:	mov    eax,0xffffffff
  4027ad:	jmp    0x4026b8
  4027b2:	mov    edx,0x1
  4027b7:	mov    ecx,0x8
  4027bc:	call   0x403088
  4027c1:	jmp    0x4026b3
  4027c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027d0:	mov    edx,0x1
  4027d5:	mov    ecx,0xb
  4027da:	call   0x403088
  4027df:	jmp    0x4026b3
  4027e4:	mov    edx,0x1
  4027e9:	mov    ecx,0x4
  4027ee:	call   0x403088
  4027f3:	jmp    0x4026b3
  4027f8:	nop
  4027f9:	nop
  4027fa:	nop
  4027fb:	nop
  4027fc:	nop
  4027fd:	nop
  4027fe:	nop
  4027ff:	nop
  402800:	push   rbp
  402801:	push   rdi
  402802:	push   rsi
  402803:	push   rbx
  402804:	sub    rsp,0x28
  402808:	lea    rcx,[rip+0x6191]        # 0x4089a0
  40280f:	call   QWORD PTR [rip+0x6a73]        # 0x409288
  402815:	mov    rbx,QWORD PTR [rip+0x6164]        # 0x408980
  40281c:	test   rbx,rbx
  40281f:	je     0x402854
  402821:	mov    rbp,QWORD PTR [rip+0x6af8]        # 0x409320
  402828:	mov    rdi,QWORD PTR [rip+0x6a79]        # 0x4092a8
  40282f:	nop
  402830:	mov    ecx,DWORD PTR [rbx]
  402832:	call   rbp
  402834:	mov    rsi,rax
  402837:	call   rdi
  402839:	test   eax,eax
  40283b:	jne    0x40284b
  40283d:	test   rsi,rsi
  402840:	je     0x40284b
  402842:	mov    rax,QWORD PTR [rbx+0x8]
  402846:	mov    rcx,rsi
  402849:	call   rax
  40284b:	mov    rbx,QWORD PTR [rbx+0x10]
  40284f:	test   rbx,rbx
  402852:	jne    0x402830
  402854:	mov    rax,QWORD PTR [rip+0x6a7d]        # 0x4092d8
  40285b:	lea    rcx,[rip+0x613e]        # 0x4089a0
  402862:	add    rsp,0x28
  402866:	pop    rbx
  402867:	pop    rsi
  402868:	pop    rdi
  402869:	pop    rbp
  40286a:	rex.W jmp rax
  40286d:	nop    DWORD PTR [rax]
  402870:	push   rdi
  402871:	push   rsi
  402872:	push   rbx
  402873:	sub    rsp,0x20
  402877:	mov    eax,DWORD PTR [rip+0x610b]        # 0x408988
  40287d:	test   eax,eax
  40287f:	jne    0x402890
  402881:	add    rsp,0x20
  402885:	pop    rbx
  402886:	pop    rsi
  402887:	pop    rdi
  402888:	ret    
  402889:	nop    DWORD PTR [rax+0x0]
  402890:	mov    rsi,rdx
  402893:	mov    edi,ecx
  402895:	mov    edx,0x18
  40289a:	mov    ecx,0x1
  40289f:	call   0x4030e0
  4028a4:	test   rax,rax
  4028a7:	mov    rbx,rax
  4028aa:	je     0x4028e8
  4028ac:	mov    DWORD PTR [rax],edi
  4028ae:	mov    QWORD PTR [rax+0x8],rsi
  4028b2:	lea    rcx,[rip+0x60e7]        # 0x4089a0
  4028b9:	call   QWORD PTR [rip+0x69c9]        # 0x409288
  4028bf:	mov    rax,QWORD PTR [rip+0x60ba]        # 0x408980
  4028c6:	lea    rcx,[rip+0x60d3]        # 0x4089a0
  4028cd:	mov    QWORD PTR [rip+0x60ac],rbx        # 0x408980
  4028d4:	mov    QWORD PTR [rbx+0x10],rax
  4028d8:	call   QWORD PTR [rip+0x69fa]        # 0x4092d8
  4028de:	xor    eax,eax
  4028e0:	add    rsp,0x20
  4028e4:	pop    rbx
  4028e5:	pop    rsi
  4028e6:	pop    rdi
  4028e7:	ret    
  4028e8:	mov    eax,0xffffffff
  4028ed:	jmp    0x402881
  4028ef:	nop
  4028f0:	push   rbx
  4028f1:	sub    rsp,0x20
  4028f5:	mov    eax,DWORD PTR [rip+0x608d]        # 0x408988
  4028fb:	test   eax,eax
  4028fd:	jne    0x402910
  4028ff:	xor    eax,eax
  402901:	add    rsp,0x20
  402905:	pop    rbx
  402906:	ret    
  402907:	nop    WORD PTR [rax+rax*1+0x0]
  402910:	mov    ebx,ecx
  402912:	lea    rcx,[rip+0x6087]        # 0x4089a0
  402919:	call   QWORD PTR [rip+0x6969]        # 0x409288
  40291f:	mov    rdx,QWORD PTR [rip+0x605a]        # 0x408980
  402926:	test   rdx,rdx
  402929:	je     0x402947
  40292b:	mov    eax,DWORD PTR [rdx]
  40292d:	cmp    eax,ebx
  40292f:	jne    0x40293e
  402931:	jmp    0x40297f
  402933:	mov    r8d,DWORD PTR [rax]
  402936:	cmp    r8d,ebx
  402939:	je     0x402960
  40293b:	mov    rdx,rax
  40293e:	mov    rax,QWORD PTR [rdx+0x10]
  402942:	test   rax,rax
  402945:	jne    0x402933
  402947:	lea    rcx,[rip+0x6052]        # 0x4089a0
  40294e:	call   QWORD PTR [rip+0x6984]        # 0x4092d8
  402954:	xor    eax,eax
  402956:	add    rsp,0x20
  40295a:	pop    rbx
  40295b:	ret    
  40295c:	nop    DWORD PTR [rax+0x0]
  402960:	mov    rcx,rax
  402963:	mov    rax,QWORD PTR [rax+0x10]
  402967:	mov    QWORD PTR [rdx+0x10],rax
  40296b:	call   0x4030c8
  402970:	lea    rcx,[rip+0x6029]        # 0x4089a0
  402977:	call   QWORD PTR [rip+0x695b]        # 0x4092d8
  40297d:	jmp    0x402954
  40297f:	mov    rax,QWORD PTR [rdx+0x10]
  402983:	mov    rcx,rdx
  402986:	mov    QWORD PTR [rip+0x5ff3],rax        # 0x408980
  40298d:	jmp    0x40296b
  40298f:	nop
  402990:	push   rbx
  402991:	sub    rsp,0x20
  402995:	cmp    edx,0x1
  402998:	je     0x402a30
  40299e:	jb     0x4029d0
  4029a0:	cmp    edx,0x2
  4029a3:	je     0x4029c0
  4029a5:	cmp    edx,0x3
  4029a8:	jne    0x4029c5
  4029aa:	mov    eax,DWORD PTR [rip+0x5fd8]        # 0x408988
  4029b0:	test   eax,eax
  4029b2:	je     0x4029c5
  4029b4:	call   0x402800
  4029b9:	jmp    0x4029c5
  4029bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4029c0:	call   0x401e90
  4029c5:	mov    eax,0x1
  4029ca:	add    rsp,0x20
  4029ce:	pop    rbx
  4029cf:	ret    
  4029d0:	mov    eax,DWORD PTR [rip+0x5fb2]        # 0x408988
  4029d6:	test   eax,eax
  4029d8:	jne    0x402a60
  4029de:	mov    eax,DWORD PTR [rip+0x5fa4]        # 0x408988
  4029e4:	cmp    eax,0x1
  4029e7:	jne    0x4029c5
  4029e9:	mov    rcx,QWORD PTR [rip+0x5f90]        # 0x408980
  4029f0:	test   rcx,rcx
  4029f3:	je     0x402a06
  4029f5:	mov    rbx,QWORD PTR [rcx+0x10]
  4029f9:	call   0x4030c8
  4029fe:	test   rbx,rbx
  402a01:	mov    rcx,rbx
  402a04:	jne    0x4029f5
  402a06:	lea    rcx,[rip+0x5f93]        # 0x4089a0
  402a0d:	mov    QWORD PTR [rip+0x5f68],0x0        # 0x408980
  402a18:	mov    DWORD PTR [rip+0x5f66],0x0        # 0x408988
  402a22:	call   QWORD PTR [rip+0x6858]        # 0x409280
  402a28:	jmp    0x4029c5
  402a2a:	nop    WORD PTR [rax+rax*1+0x0]
  402a30:	mov    eax,DWORD PTR [rip+0x5f52]        # 0x408988
  402a36:	test   eax,eax
  402a38:	je     0x402a50
  402a3a:	mov    eax,0x1
  402a3f:	mov    DWORD PTR [rip+0x5f3f],0x1        # 0x408988
  402a49:	add    rsp,0x20
  402a4d:	pop    rbx
  402a4e:	ret    
  402a4f:	nop
  402a50:	lea    rcx,[rip+0x5f49]        # 0x4089a0
  402a57:	call   QWORD PTR [rip+0x6873]        # 0x4092d0
  402a5d:	jmp    0x402a3a
  402a5f:	nop
  402a60:	call   0x402800
  402a65:	jmp    0x4029de
  402a6a:	nop
  402a6b:	nop
  402a6c:	nop
  402a6d:	nop
  402a6e:	nop
  402a6f:	nop
  402a70:	movsxd rax,DWORD PTR [rcx+0x3c]
  402a74:	add    rcx,rax
  402a77:	xor    eax,eax
  402a79:	cmp    DWORD PTR [rcx],0x4550
  402a7f:	je     0x402a83
  402a81:	repz ret 
  402a83:	xor    eax,eax
  402a85:	cmp    WORD PTR [rcx+0x18],0x20b
  402a8b:	sete   al
  402a8e:	ret    
  402a8f:	nop
  402a90:	cmp    WORD PTR [rcx],0x5a4d
  402a95:	je     0x402aa0
  402a97:	xor    eax,eax
  402a99:	ret    
  402a9a:	nop    WORD PTR [rax+rax*1+0x0]
  402aa0:	jmp    0x402a70
  402aa2:	nop    DWORD PTR [rax+0x0]
  402aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ab0:	movsxd rax,DWORD PTR [rcx+0x3c]
  402ab4:	add    rcx,rax
  402ab7:	movzx  eax,WORD PTR [rcx+0x14]
  402abb:	lea    rax,[rcx+rax*1+0x18]
  402ac0:	movzx  ecx,WORD PTR [rcx+0x6]
  402ac4:	test   ecx,ecx
  402ac6:	je     0x402af1
  402ac8:	sub    ecx,0x1
  402acb:	lea    rcx,[rcx+rcx*4]
  402acf:	lea    r9,[rax+rcx*8+0x28]
  402ad4:	mov    r8d,DWORD PTR [rax+0xc]
  402ad8:	cmp    r8,rdx
  402adb:	mov    rcx,r8
  402ade:	ja     0x402ae8
  402ae0:	add    ecx,DWORD PTR [rax+0x8]
  402ae3:	cmp    rdx,rcx
  402ae6:	jb     0x402af3
  402ae8:	add    rax,0x28
  402aec:	cmp    rax,r9
  402aef:	jne    0x402ad4
  402af1:	xor    eax,eax
  402af3:	repz ret 
  402af5:	nop
  402af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b00:	push   rdi
  402b01:	push   rsi
  402b02:	push   rbx
  402b03:	sub    rsp,0x20
  402b07:	mov    rsi,rcx
  402b0a:	call   0x403080
  402b0f:	cmp    rax,0x8
  402b13:	ja     0x402b30
  402b15:	mov    rbx,QWORD PTR [rip+0x2a74]        # 0x405590
  402b1c:	xor    edi,edi
  402b1e:	cmp    WORD PTR [rbx],0x5a4d
  402b23:	je     0x402b40
  402b25:	mov    rax,rdi
  402b28:	add    rsp,0x20
  402b2c:	pop    rbx
  402b2d:	pop    rsi
  402b2e:	pop    rdi
  402b2f:	ret    
  402b30:	xor    edi,edi
  402b32:	mov    rax,rdi
  402b35:	add    rsp,0x20
  402b39:	pop    rbx
  402b3a:	pop    rsi
  402b3b:	pop    rdi
  402b3c:	ret    
  402b3d:	nop    DWORD PTR [rax]
  402b40:	mov    rcx,rbx
  402b43:	call   0x402a70
  402b48:	test   eax,eax
  402b4a:	je     0x402b25
  402b4c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402b50:	add    rdx,rbx
  402b53:	movzx  eax,WORD PTR [rdx+0x14]
  402b57:	lea    rbx,[rdx+rax*1+0x18]
  402b5c:	movzx  eax,WORD PTR [rdx+0x6]
  402b60:	test   eax,eax
  402b62:	je     0x402b25
  402b64:	sub    eax,0x1
  402b67:	lea    rax,[rax+rax*4]
  402b6b:	lea    rdi,[rbx+rax*8+0x28]
  402b70:	jmp    0x402b7b
  402b72:	add    rbx,0x28
  402b76:	cmp    rbx,rdi
  402b79:	je     0x402b30
  402b7b:	mov    r8d,0x8
  402b81:	mov    rdx,rsi
  402b84:	mov    rcx,rbx
  402b87:	call   0x403078
  402b8c:	test   eax,eax
  402b8e:	jne    0x402b72
  402b90:	mov    rdi,rbx
  402b93:	mov    rax,rdi
  402b96:	add    rsp,0x20
  402b9a:	pop    rbx
  402b9b:	pop    rsi
  402b9c:	pop    rdi
  402b9d:	ret    
  402b9e:	xchg   ax,ax
  402ba0:	push   rsi
  402ba1:	push   rbx
  402ba2:	sub    rsp,0x28
  402ba6:	mov    rbx,QWORD PTR [rip+0x29e3]        # 0x405590
  402bad:	cmp    WORD PTR [rbx],0x5a4d
  402bb2:	je     0x402bc0
  402bb4:	xor    eax,eax
  402bb6:	add    rsp,0x28
  402bba:	pop    rbx
  402bbb:	pop    rsi
  402bbc:	ret    
  402bbd:	nop    DWORD PTR [rax]
  402bc0:	mov    rsi,rcx
  402bc3:	mov    rcx,rbx
  402bc6:	call   0x402a70
  402bcb:	test   eax,eax
  402bcd:	je     0x402bb4
  402bcf:	sub    rsi,rbx
  402bd2:	mov    rcx,rbx
  402bd5:	mov    rdx,rsi
  402bd8:	add    rsp,0x28
  402bdc:	pop    rbx
  402bdd:	pop    rsi
  402bde:	jmp    0x402ab0
  402be3:	nop    DWORD PTR [rax]
  402be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402bf0:	push   rbx
  402bf1:	sub    rsp,0x20
  402bf5:	mov    rbx,QWORD PTR [rip+0x2994]        # 0x405590
  402bfc:	xor    eax,eax
  402bfe:	cmp    WORD PTR [rbx],0x5a4d
  402c03:	je     0x402c10
  402c05:	add    rsp,0x20
  402c09:	pop    rbx
  402c0a:	ret    
  402c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c10:	mov    rcx,rbx
  402c13:	call   0x402a70
  402c18:	test   eax,eax
  402c1a:	je     0x402c05
  402c1c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402c20:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402c25:	add    rsp,0x20
  402c29:	pop    rbx
  402c2a:	ret    
  402c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402c30:	push   rdi
  402c31:	push   rsi
  402c32:	push   rbx
  402c33:	sub    rsp,0x20
  402c37:	mov    rsi,QWORD PTR [rip+0x2952]        # 0x405590
  402c3e:	xor    edi,edi
  402c40:	mov    rbx,rcx
  402c43:	cmp    WORD PTR [rsi],0x5a4d
  402c48:	je     0x402c55
  402c4a:	mov    rax,rdi
  402c4d:	add    rsp,0x20
  402c51:	pop    rbx
  402c52:	pop    rsi
  402c53:	pop    rdi
  402c54:	ret    
  402c55:	mov    rcx,rsi
  402c58:	call   0x402a70
  402c5d:	test   eax,eax
  402c5f:	je     0x402c4a
  402c61:	movsxd rax,DWORD PTR [rsi+0x3c]
  402c65:	add    rsi,rax
  402c68:	movzx  eax,WORD PTR [rsi+0x14]
  402c6c:	lea    rdx,[rsi+rax*1+0x18]
  402c71:	movzx  eax,WORD PTR [rsi+0x6]
  402c75:	test   eax,eax
  402c77:	je     0x402c4a
  402c79:	sub    eax,0x1
  402c7c:	lea    rax,[rax+rax*4]
  402c80:	lea    rax,[rdx+rax*8+0x28]
  402c85:	test   BYTE PTR [rdx+0x27],0x20
  402c89:	je     0x402c94
  402c8b:	test   rbx,rbx
  402c8e:	je     0x402cb0
  402c90:	sub    rbx,0x1
  402c94:	add    rdx,0x28
  402c98:	cmp    rdx,rax
  402c9b:	jne    0x402c85
  402c9d:	xor    edi,edi
  402c9f:	mov    rax,rdi
  402ca2:	add    rsp,0x20
  402ca6:	pop    rbx
  402ca7:	pop    rsi
  402ca8:	pop    rdi
  402ca9:	ret    
  402caa:	nop    WORD PTR [rax+rax*1+0x0]
  402cb0:	mov    rdi,rdx
  402cb3:	mov    rax,rdi
  402cb6:	add    rsp,0x20
  402cba:	pop    rbx
  402cbb:	pop    rsi
  402cbc:	pop    rdi
  402cbd:	ret    
  402cbe:	xchg   ax,ax
  402cc0:	push   rsi
  402cc1:	push   rbx
  402cc2:	sub    rsp,0x28
  402cc6:	mov    rsi,QWORD PTR [rip+0x28c3]        # 0x405590
  402ccd:	xor    ebx,ebx
  402ccf:	cmp    WORD PTR [rsi],0x5a4d
  402cd4:	je     0x402ce0
  402cd6:	mov    rax,rbx
  402cd9:	add    rsp,0x28
  402cdd:	pop    rbx
  402cde:	pop    rsi
  402cdf:	ret    
  402ce0:	mov    rcx,rsi
  402ce3:	call   0x402a70
  402ce8:	test   eax,eax
  402cea:	cmovne rbx,rsi
  402cee:	mov    rax,rbx
  402cf1:	add    rsp,0x28
  402cf5:	pop    rbx
  402cf6:	pop    rsi
  402cf7:	ret    
  402cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  402d00:	push   rsi
  402d01:	push   rbx
  402d02:	sub    rsp,0x28
  402d06:	mov    rbx,QWORD PTR [rip+0x2883]        # 0x405590
  402d0d:	xor    eax,eax
  402d0f:	cmp    WORD PTR [rbx],0x5a4d
  402d14:	je     0x402d20
  402d16:	add    rsp,0x28
  402d1a:	pop    rbx
  402d1b:	pop    rsi
  402d1c:	ret    
  402d1d:	nop    DWORD PTR [rax]
  402d20:	mov    rsi,rcx
  402d23:	mov    rcx,rbx
  402d26:	call   0x402a70
  402d2b:	test   eax,eax
  402d2d:	je     0x402d16
  402d2f:	sub    rsi,rbx
  402d32:	mov    rcx,rbx
  402d35:	mov    rdx,rsi
  402d38:	call   0x402ab0
  402d3d:	test   rax,rax
  402d40:	je     0x402d51
  402d42:	mov    eax,DWORD PTR [rax+0x24]
  402d45:	not    eax
  402d47:	shr    eax,0x1f
  402d4a:	add    rsp,0x28
  402d4e:	pop    rbx
  402d4f:	pop    rsi
  402d50:	ret    
  402d51:	xor    eax,eax
  402d53:	jmp    0x402d16
  402d55:	nop
  402d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d60:	push   rbp
  402d61:	push   rdi
  402d62:	push   rsi
  402d63:	push   rbx
  402d64:	sub    rsp,0x28
  402d68:	mov    rdi,QWORD PTR [rip+0x2821]        # 0x405590
  402d6f:	xor    ebp,ebp
  402d71:	mov    esi,ecx
  402d73:	cmp    WORD PTR [rdi],0x5a4d
  402d78:	je     0x402d90
  402d7a:	mov    rax,rbp
  402d7d:	add    rsp,0x28
  402d81:	pop    rbx
  402d82:	pop    rsi
  402d83:	pop    rdi
  402d84:	pop    rbp
  402d85:	ret    
  402d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d90:	mov    rcx,rdi
  402d93:	call   0x402a70
  402d98:	test   eax,eax
  402d9a:	je     0x402d7a
  402d9c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402da0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402da7:	test   edx,edx
  402da9:	je     0x402d7a
  402dab:	mov    ebx,edx
  402dad:	mov    rcx,rdi
  402db0:	mov    rdx,rbx
  402db3:	call   0x402ab0
  402db8:	test   rax,rax
  402dbb:	je     0x402d7a
  402dbd:	add    rbx,rdi
  402dc0:	mov    rdx,rbx
  402dc3:	jne    0x402dd7
  402dc5:	jmp    0x402d7a
  402dc7:	nop    WORD PTR [rax+rax*1+0x0]
  402dd0:	sub    esi,0x1
  402dd3:	add    rdx,0x14
  402dd7:	mov    ecx,DWORD PTR [rdx+0x4]
  402dda:	test   ecx,ecx
  402ddc:	jne    0x402de5
  402dde:	mov    eax,DWORD PTR [rdx+0xc]
  402de1:	test   eax,eax
  402de3:	je     0x402e00
  402de5:	test   esi,esi
  402de7:	jg     0x402dd0
  402de9:	mov    ebp,DWORD PTR [rdx+0xc]
  402dec:	add    rbp,rdi
  402def:	mov    rax,rbp
  402df2:	add    rsp,0x28
  402df6:	pop    rbx
  402df7:	pop    rsi
  402df8:	pop    rdi
  402df9:	pop    rbp
  402dfa:	ret    
  402dfb:	nop    DWORD PTR [rax+rax*1+0x0]
  402e00:	xor    ebp,ebp
  402e02:	mov    rax,rbp
  402e05:	add    rsp,0x28
  402e09:	pop    rbx
  402e0a:	pop    rsi
  402e0b:	pop    rdi
  402e0c:	pop    rbp
  402e0d:	ret    
  402e0e:	nop
  402e0f:	nop
  402e10:	push   rcx
  402e11:	push   rax
  402e12:	cmp    rax,0x1000
  402e18:	lea    rcx,[rsp+0x18]
  402e1d:	jb     0x402e38
  402e1f:	sub    rcx,0x1000
  402e26:	or     QWORD PTR [rcx],0x0
  402e2a:	sub    rax,0x1000
  402e30:	cmp    rax,0x1000
  402e36:	ja     0x402e1f
  402e38:	sub    rcx,rax
  402e3b:	or     QWORD PTR [rcx],0x0
  402e3f:	pop    rax
  402e40:	pop    rcx
  402e41:	ret    
  402e42:	nop
  402e43:	nop
  402e44:	nop
  402e45:	nop
  402e46:	nop
  402e47:	nop
  402e48:	nop
  402e49:	nop
  402e4a:	nop
  402e4b:	nop
  402e4c:	nop
  402e4d:	nop
  402e4e:	nop
  402e4f:	nop
  402e50:	push   r12
  402e52:	push   rbp
  402e53:	push   rdi
  402e54:	push   rsi
  402e55:	push   rbx
  402e56:	sub    rsp,0x250
  402e5d:	mov    rbx,rdx
  402e60:	mov    rsi,rcx
  402e63:	mov    ecx,0x4000
  402e68:	mov    r12d,r8d
  402e6b:	call   0x4030a8
  402e70:	test   rbx,rbx
  402e73:	mov    rbp,rax
  402e76:	je     0x402f40
  402e7c:	cmp    WORD PTR [rbx],0x0
  402e80:	lea    rax,[rip+0x25c9]        # 0x405450
  402e87:	cmove  rbx,rax
  402e8b:	test   rsi,rsi
  402e8e:	je     0x402f31
  402e94:	cmp    WORD PTR [rsi],0x0
  402e98:	lea    rax,[rip+0x25c5]        # 0x405464
  402e9f:	cmove  rsi,rax
  402ea3:	lea    rdi,[rsp+0x40]
  402ea8:	xor    ecx,ecx
  402eaa:	mov    r8d,0x104
  402eb0:	mov    rdx,rdi
  402eb3:	call   QWORD PTR [rip+0x63f7]        # 0x4092b0
  402eb9:	test   eax,eax
  402ebb:	je     0x402f20
  402ebd:	lea    r8,[rip+0x25a4]        # 0x405468
  402ec4:	mov    QWORD PTR [rsp+0x30],rsi
  402ec9:	mov    DWORD PTR [rsp+0x28],r12d
  402ece:	mov    QWORD PTR [rsp+0x20],rbx
  402ed3:	mov    r9,rdi
  402ed6:	mov    edx,0x1fff
  402edb:	mov    rcx,rbp
  402ede:	call   0x4030f8
  402ee3:	mov    rax,QWORD PTR [rip+0x27d6]        # 0x4056c0
  402eea:	mov    eax,DWORD PTR [rax]
  402eec:	test   eax,eax
  402eee:	je     0x402f65
  402ef0:	xor    ecx,ecx
  402ef2:	mov    r9d,0x12012
  402ef8:	lea    r8,[rip+0x2601]        # 0x405500
  402eff:	mov    rdx,rbp
  402f02:	call   QWORD PTR [rip+0x6578]        # 0x409480
  402f08:	cmp    eax,0x3
  402f0b:	je     0x402f51
  402f0d:	cmp    eax,0x5
  402f10:	jne    0x402f4c
  402f12:	add    rsp,0x250
  402f19:	pop    rbx
  402f1a:	pop    rsi
  402f1b:	pop    rdi
  402f1c:	pop    rbp
  402f1d:	pop    r12
  402f1f:	ret    
  402f20:	lea    rdx,[rip+0x2529]        # 0x405450
  402f27:	mov    rcx,rdi
  402f2a:	call   0x403060
  402f2f:	jmp    0x402ebd
  402f31:	lea    rsi,[rip+0x252c]        # 0x405464
  402f38:	jmp    0x402ea3
  402f3d:	nop    DWORD PTR [rax]
  402f40:	lea    rbx,[rip+0x2509]        # 0x405450
  402f47:	jmp    0x402e8b
  402f4c:	call   0x4030e8
  402f51:	mov    ecx,0x16
  402f56:	call   0x403090
  402f5b:	mov    ecx,0x3
  402f60:	call   0x403118
  402f65:	call   0x403148
  402f6a:	lea    rdx,[rip+0x257f]        # 0x4054f0
  402f71:	lea    rcx,[rax+0x60]
  402f75:	mov    r8,rbp
  402f78:	call   0x4030c0
  402f7d:	call   0x4030e8
  402f82:	nop
  402f83:	nop    DWORD PTR [rax]
  402f86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f90:	push   rbp
  402f91:	push   rdi
  402f92:	push   rsi
  402f93:	push   rbx
  402f94:	sub    rsp,0x38
  402f98:	mov    rdi,rdx
  402f9b:	mov    DWORD PTR [rsp+0x2c],r8d
  402fa0:	mov    rbp,rcx
  402fa3:	call   0x403080
  402fa8:	lea    rcx,[rax+rax*1+0x2]
  402fad:	call   0x4030a8
  402fb2:	mov    rcx,rdi
  402fb5:	mov    rsi,rax
  402fb8:	call   0x403080
  402fbd:	lea    rcx,[rax+rax*1+0x2]
  402fc2:	call   0x4030a8
  402fc7:	movzx  r9d,BYTE PTR [rbp+0x0]
  402fcc:	xor    r10d,r10d
  402fcf:	mov    rbx,rax
  402fd2:	mov    r8d,DWORD PTR [rsp+0x2c]
  402fd7:	test   r9b,r9b
  402fda:	je     0x402ff7
  402fdc:	nop    DWORD PTR [rax+0x0]
  402fe0:	mov    WORD PTR [rsi+r10*2],r9w
  402fe5:	add    r10,0x1
  402fe9:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  402fef:	test   r9b,r9b
  402ff2:	jne    0x402fe0
  402ff4:	add    r10,r10
  402ff7:	movzx  r9d,BYTE PTR [rdi]
  402ffb:	xor    edx,edx
  402ffd:	mov    WORD PTR [rsi+r10*1],dx
  403002:	xor    r10d,r10d
  403005:	test   r9b,r9b
  403008:	je     0x403026
  40300a:	nop    WORD PTR [rax+rax*1+0x0]
  403010:	mov    WORD PTR [rbx+r10*2],r9w
  403015:	add    r10,0x1
  403019:	movzx  r9d,BYTE PTR [rdi+r10*1]
  40301e:	test   r9b,r9b
  403021:	jne    0x403010
  403023:	add    r10,r10
  403026:	xor    eax,eax
  403028:	mov    rdx,rbx
  40302b:	mov    rcx,rsi
  40302e:	mov    WORD PTR [rbx+r10*1],ax
  403033:	call   0x402e50
  403038:	mov    rcx,rsi
  40303b:	call   0x4030c8
  403040:	mov    rcx,rbx
  403043:	add    rsp,0x38
  403047:	pop    rbx
  403048:	pop    rsi
  403049:	pop    rdi
  40304a:	pop    rbp
  40304b:	jmp    0x4030c8
  403050:	jmp    QWORD PTR [rip+0x641a]        # 0x409470
  403056:	nop
  403057:	nop
  403058:	jmp    QWORD PTR [rip+0x640a]        # 0x409468
  40305e:	nop
  40305f:	nop
  403060:	jmp    QWORD PTR [rip+0x63fa]        # 0x409460
  403066:	nop
  403067:	nop
  403068:	jmp    QWORD PTR [rip+0x63ea]        # 0x409458
  40306e:	nop
  40306f:	nop
  403070:	jmp    QWORD PTR [rip+0x63da]        # 0x409450
  403076:	nop
  403077:	nop
  403078:	jmp    QWORD PTR [rip+0x63ca]        # 0x409448
  40307e:	nop
  40307f:	nop
  403080:	jmp    QWORD PTR [rip+0x63ba]        # 0x409440
  403086:	nop
  403087:	nop
  403088:	jmp    QWORD PTR [rip+0x63aa]        # 0x409438
  40308e:	nop
  40308f:	nop
  403090:	jmp    QWORD PTR [rip+0x639a]        # 0x409430
  403096:	nop
  403097:	nop
  403098:	jmp    QWORD PTR [rip+0x638a]        # 0x409428
  40309e:	nop
  40309f:	nop
  4030a0:	jmp    QWORD PTR [rip+0x637a]        # 0x409420
  4030a6:	nop
  4030a7:	nop
  4030a8:	jmp    QWORD PTR [rip+0x636a]        # 0x409418
  4030ae:	nop
  4030af:	nop
  4030b0:	jmp    QWORD PTR [rip+0x635a]        # 0x409410
  4030b6:	nop
  4030b7:	nop
  4030b8:	jmp    QWORD PTR [rip+0x634a]        # 0x409408
  4030be:	nop
  4030bf:	nop
  4030c0:	jmp    QWORD PTR [rip+0x633a]        # 0x409400
  4030c6:	nop
  4030c7:	nop
  4030c8:	jmp    QWORD PTR [rip+0x632a]        # 0x4093f8
  4030ce:	nop
  4030cf:	nop
  4030d0:	jmp    QWORD PTR [rip+0x631a]        # 0x4093f0
  4030d6:	nop
  4030d7:	nop
  4030d8:	jmp    QWORD PTR [rip+0x630a]        # 0x4093e8
  4030de:	nop
  4030df:	nop
  4030e0:	jmp    QWORD PTR [rip+0x62fa]        # 0x4093e0
  4030e6:	nop
  4030e7:	nop
  4030e8:	jmp    QWORD PTR [rip+0x62ea]        # 0x4093d8
  4030ee:	nop
  4030ef:	nop
  4030f0:	jmp    QWORD PTR [rip+0x62da]        # 0x4093d0
  4030f6:	nop
  4030f7:	nop
  4030f8:	jmp    QWORD PTR [rip+0x62ca]        # 0x4093c8
  4030fe:	nop
  4030ff:	nop
  403100:	jmp    QWORD PTR [rip+0x62ba]        # 0x4093c0
  403106:	nop
  403107:	nop
  403108:	jmp    QWORD PTR [rip+0x62aa]        # 0x4093b8
  40310e:	nop
  40310f:	nop
  403110:	jmp    QWORD PTR [rip+0x629a]        # 0x4093b0
  403116:	nop
  403117:	nop
  403118:	jmp    QWORD PTR [rip+0x6282]        # 0x4093a0
  40311e:	nop
  40311f:	nop
  403120:	jmp    QWORD PTR [rip+0x6272]        # 0x409398
  403126:	nop
  403127:	nop
  403128:	jmp    QWORD PTR [rip+0x6262]        # 0x409390
  40312e:	nop
  40312f:	nop
  403130:	jmp    QWORD PTR [rip+0x624a]        # 0x409380
  403136:	nop
  403137:	nop
  403138:	jmp    QWORD PTR [rip+0x623a]        # 0x409378
  40313e:	nop
  40313f:	nop
  403140:	jmp    QWORD PTR [rip+0x622a]        # 0x409370
  403146:	nop
  403147:	nop
  403148:	jmp    QWORD PTR [rip+0x621a]        # 0x409368
  40314e:	nop
  40314f:	nop
  403150:	jmp    QWORD PTR [rip+0x6202]        # 0x409358
  403156:	nop
  403157:	nop
  403158:	jmp    QWORD PTR [rip+0x61f2]        # 0x409350
  40315e:	nop
  40315f:	nop
  403160:	jmp    QWORD PTR [rip+0x61e2]        # 0x409348
  403166:	nop
  403167:	nop
  403168:	nop    DWORD PTR [rax+rax*1+0x0]
  403170:	mov    rax,QWORD PTR [rip+0x5879]        # 0x4089f0
  403177:	ret    
  403178:	nop    DWORD PTR [rax+rax*1+0x0]
  403180:	mov    rax,rcx
  403183:	xchg   QWORD PTR [rip+0x5866],rax        # 0x4089f0
  40318a:	ret    
  40318b:	nop
  40318c:	nop
  40318d:	nop
  40318e:	nop
  40318f:	nop
  403190:	jmp    QWORD PTR [rip+0x62ea]        # 0x409480
  403196:	nop
  403197:	nop
  403198:	nop    DWORD PTR [rax+rax*1+0x0]
  4031a0:	jmp    QWORD PTR [rip+0x6192]        # 0x409338
  4031a6:	nop
  4031a7:	nop
  4031a8:	jmp    QWORD PTR [rip+0x6182]        # 0x409330
  4031ae:	nop
  4031af:	nop
  4031b0:	jmp    QWORD PTR [rip+0x6172]        # 0x409328
  4031b6:	nop
  4031b7:	nop
  4031b8:	jmp    QWORD PTR [rip+0x6162]        # 0x409320
  4031be:	nop
  4031bf:	nop
  4031c0:	jmp    QWORD PTR [rip+0x6152]        # 0x409318
  4031c6:	nop
  4031c7:	nop
  4031c8:	jmp    QWORD PTR [rip+0x6142]        # 0x409310
  4031ce:	nop
  4031cf:	nop
  4031d0:	jmp    QWORD PTR [rip+0x6132]        # 0x409308
  4031d6:	nop
  4031d7:	nop
  4031d8:	jmp    QWORD PTR [rip+0x6122]        # 0x409300
  4031de:	nop
  4031df:	nop
  4031e0:	jmp    QWORD PTR [rip+0x6112]        # 0x4092f8
  4031e6:	nop
  4031e7:	nop
  4031e8:	jmp    QWORD PTR [rip+0x6102]        # 0x4092f0
  4031ee:	nop
  4031ef:	nop
  4031f0:	jmp    QWORD PTR [rip+0x60f2]        # 0x4092e8
  4031f6:	nop
  4031f7:	nop
  4031f8:	jmp    QWORD PTR [rip+0x60e2]        # 0x4092e0
  4031fe:	nop
  4031ff:	nop
  403200:	jmp    QWORD PTR [rip+0x60d2]        # 0x4092d8
  403206:	nop
  403207:	nop
  403208:	jmp    QWORD PTR [rip+0x60c2]        # 0x4092d0
  40320e:	nop
  40320f:	nop
  403210:	jmp    QWORD PTR [rip+0x60b2]        # 0x4092c8
  403216:	nop
  403217:	nop
  403218:	jmp    QWORD PTR [rip+0x60a2]        # 0x4092c0
  40321e:	nop
  40321f:	nop
  403220:	jmp    QWORD PTR [rip+0x6092]        # 0x4092b8
  403226:	nop
  403227:	nop
  403228:	jmp    QWORD PTR [rip+0x6082]        # 0x4092b0
  40322e:	nop
  40322f:	nop
  403230:	jmp    QWORD PTR [rip+0x6072]        # 0x4092a8
  403236:	nop
  403237:	nop
  403238:	jmp    QWORD PTR [rip+0x6062]        # 0x4092a0
  40323e:	nop
  40323f:	nop
  403240:	jmp    QWORD PTR [rip+0x6052]        # 0x409298
  403246:	nop
  403247:	nop
  403248:	jmp    QWORD PTR [rip+0x6042]        # 0x409290
  40324e:	nop
  40324f:	nop
  403250:	jmp    QWORD PTR [rip+0x6032]        # 0x409288
  403256:	nop
  403257:	nop
  403258:	jmp    QWORD PTR [rip+0x6022]        # 0x409280
  40325e:	nop
  40325f:	nop
  403260:	jmp    QWORD PTR [rip+0x6012]        # 0x409278
  403266:	nop
  403267:	nop
  403268:	jmp    QWORD PTR [rip+0x6002]        # 0x409270
  40326e:	nop
  40326f:	nop
  403270:	(bad)  
  403271:	(bad)  
  403272:	(bad)  
  403273:	(bad)  
  403274:	(bad)  
  403275:	(bad)  
  403276:	(bad)  
  403277:	inc    DWORD PTR [rax]
  403279:	add    BYTE PTR [rax],al
  40327b:	add    BYTE PTR [rax],al
  40327d:	add    BYTE PTR [rax],al
  40327f:	add    bh,bh
  403281:	(bad)  
  403282:	(bad)  
  403283:	(bad)  
  403284:	(bad)  
  403285:	(bad)  
  403286:	(bad)  
  403287:	inc    DWORD PTR [rax]
  403289:	add    BYTE PTR [rax],al
  40328b:	add    BYTE PTR [rax],al
  40328d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	mov    BYTE PTR [rdx],dh
  404012:	add    BYTE PTR [rax],al
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rax+0x31],dh
  404062:	add    BYTE PTR [rax],al
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rax+0x4031],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	add    BYTE PTR fs:[rdx+0x0],ah
  405004:	jne    0x405006
  405006:	jae    0x405008
  405008:	sub    eax,0x61006c00
  40500d:	add    BYTE PTR [rbp+0x0],dh
  405010:	outs   dx,BYTE PTR ds:[rsi]
  405011:	add    BYTE PTR [rbx+0x0],ah
  405014:	push   0x77002d00
  405019:	add    BYTE PTR [rcx+0x0],ch
  40501c:	outs   dx,BYTE PTR ds:[rsi]
  40501d:	add    BYTE PTR [rsi],ch
  40501f:	add    BYTE PTR [rbx+0x0],ah
  405022:	add    BYTE PTR [rax],al
  405024:	add    BYTE PTR [rax],al
  405026:	add    BYTE PTR [rax],al
  405028:	jae    0x40502a
  40502a:	imul   eax,DWORD PTR [rax],0x65007a
  405030:	outs   dx,DWORD PTR ds:[rsi]
  405031:	add    BYTE PTR [rsi+0x0],ah
  405034:	and    BYTE PTR [rax],al
  405036:	sub    BYTE PTR [rax],al
  405038:	ja     0x40503a
  40503a:	movsxd eax,DWORD PTR [rax]
  40503c:	push   0x72006100
  405041:	add    BYTE PTR [rdi+0x0],bl
  405044:	je     0x405046
  405046:	sub    DWORD PTR [rax],eax
  405048:	and    BYTE PTR [rax],al
  40504a:	sub    al,BYTE PTR [rax]
  40504c:	and    BYTE PTR [rax],al
  40504e:	sub    BYTE PTR [rax],al
  405050:	ja     0x405052
  405052:	movsxd eax,DWORD PTR [rax]
  405054:	jae    0x405056
  405056:	ins    BYTE PTR es:[rdi],dx
  405057:	add    BYTE PTR [rbp+0x0],ah
  40505a:	outs   dx,BYTE PTR ds:[rsi]
  40505b:	add    BYTE PTR [rax],ah
  40505d:	add    BYTE PTR [rax],ch
  40505f:	add    BYTE PTR [rax+rax*1+0x65],ah
  405063:	add    BYTE PTR [rbx+0x0],dh
  405066:	je     0x405068
  405068:	sub    DWORD PTR [rax],eax
  40506a:	and    BYTE PTR [rax],al
  40506c:	sub    eax,DWORD PTR [rax]
  40506e:	and    BYTE PTR [rax],al
  405070:	ja     0x405072
  405072:	movsxd eax,DWORD PTR [rax]
  405074:	jae    0x405076
  405076:	ins    BYTE PTR es:[rdi],dx
  405077:	add    BYTE PTR [rbp+0x0],ah
  40507a:	outs   dx,BYTE PTR ds:[rsi]
  40507b:	add    BYTE PTR [rax],ah
  40507d:	add    BYTE PTR [rax],ch
  40507f:	add    BYTE PTR [rbx+0x0],dh
  405082:	jb     0x405084
  405084:	movsxd eax,DWORD PTR [rax]
  405086:	sub    DWORD PTR [rax],eax
  405088:	and    BYTE PTR [rax],al
  40508a:	sub    eax,DWORD PTR [rax]
  40508c:	and    BYTE PTR [rax],al
  40508e:	xor    DWORD PTR [rax],eax
  405090:	sub    DWORD PTR [rax],eax
  405092:	and    BYTE PTR [rax],al
  405094:	cmp    al,0x0
  405096:	cmp    eax,0x73002000
  40509b:	add    BYTE PTR [rcx+0x0],ch
  40509e:	jp     0x4050a0
  4050a0:	add    BYTE PTR gs:[rax],al
  4050a3:	add    BYTE PTR [rax],al
  4050a5:	add    BYTE PTR [rax],al
  4050a7:	add    BYTE PTR [rbx+0x0],dh
  4050aa:	imul   eax,DWORD PTR [rax],0x65007a
  4050b0:	outs   dx,DWORD PTR ds:[rsi]
  4050b1:	add    BYTE PTR [rsi+0x0],ah
  4050b4:	and    BYTE PTR [rax],al
  4050b6:	sub    BYTE PTR [rax],al
  4050b8:	ja     0x4050ba
  4050ba:	movsxd eax,DWORD PTR [rax]
  4050bc:	push   0x72006100
  4050c1:	add    BYTE PTR [rdi+0x0],bl
  4050c4:	je     0x4050c6
  4050c6:	sub    DWORD PTR [rax],eax
  4050c8:	and    BYTE PTR [rax],al
  4050ca:	sub    al,BYTE PTR [rax]
  4050cc:	and    BYTE PTR [rax],al
  4050ce:	sub    BYTE PTR [rax],al
  4050d0:	ja     0x4050d2
  4050d2:	movsxd eax,DWORD PTR [rax]
  4050d4:	jae    0x4050d6
  4050d6:	ins    BYTE PTR es:[rdi],dx
  4050d7:	add    BYTE PTR [rbp+0x0],ah
  4050da:	outs   dx,BYTE PTR ds:[rsi]
  4050db:	add    BYTE PTR [rax],ah
  4050dd:	add    BYTE PTR [rax],ch
  4050df:	add    BYTE PTR [rbx+0x0],dh
  4050e2:	jb     0x4050e4
  4050e4:	movsxd eax,DWORD PTR [rax]
  4050e6:	sub    DWORD PTR [rax],eax
  4050e8:	and    BYTE PTR [rax],al
  4050ea:	sub    eax,DWORD PTR [rax]
  4050ec:	and    BYTE PTR [rax],al
  4050ee:	xor    DWORD PTR [rax],eax
  4050f0:	sub    DWORD PTR [rax],eax
  4050f2:	and    BYTE PTR [rax],al
  4050f4:	cmp    al,0x0
  4050f6:	cmp    eax,0x73002000
  4050fb:	add    BYTE PTR [rcx+0x0],ch
  4050fe:	jp     0x405100
  405100:	add    BYTE PTR gs:[rax],al
  405103:	add    BYTE PTR [rdx+rax*2+0x55],al
  405107:	push   rbx
  405108:	pop    rdi
  405109:	push   rsi
  40510a:	rex.RB push r10
  40510c:	rex.X
  40510d:	rex.WRXB push r11
  40510f:	add    BYTE PTR [r8],r8b
  405112:	add    BYTE PTR [rax],al
  405114:	add    BYTE PTR [rax],al
  405116:	add    BYTE PTR [rax],al
  405118:	add    BYTE PTR fs:[rdx+0x0],ah
  40511c:	jne    0x40511e
  40511e:	jae    0x405120
  405120:	sub    eax,0x61006400
  405125:	add    BYTE PTR [rbp+0x0],ah
  405128:	ins    DWORD PTR es:[rdi],dx
  405129:	add    BYTE PTR [rdi+0x0],ch
  40512c:	outs   dx,BYTE PTR ds:[rsi]
  40512d:	add    BYTE PTR [rsi],ch
  40512f:	add    BYTE PTR [rbp+0x0],ah
  405132:	js     0x405134
  405134:	add    BYTE PTR gs:[rax],al
  405137:	add    BYTE PTR [rbp+0x72],ah
  40513a:	jb     0x4051ab
  40513c:	jb     0x405178
  40513e:	and    BYTE PTR [rbx+0x6f],ah
  405141:	jne    0x4051af
  405143:	and    BYTE PTR fs:[rsi+0x6f],ch
  405147:	je     0x405169
  405149:	gs js  0x4051c0
  40514c:	jb     0x4051af
  40514e:	movsxd esi,DWORD PTR [rax+riz*1+0x70]
  405152:	(bad)  
  405153:	je     0x4051bd
  405155:	and    BYTE PTR [rsi+0x72],ah
  405158:	outs   dx,DWORD PTR ds:[rsi]
  405159:	ins    DWORD PTR es:[rdi],dx
  40515a:	and    BYTE PTR [rbx+0x75],ah
  40515d:	jb     0x4051d1
  40515f:	outs   dx,BYTE PTR gs:[rsi]
  405161:	je     0x405183
  405163:	(bad)  
  405164:	jo     0x4051d6
  405166:	ins    BYTE PTR es:[rdi],dx
  405167:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  40516e:	jae    0x405190
  405170:	ins    DWORD PTR es:[rdi],dx
  405171:	outs   dx,DWORD PTR ds:[rsi]
  405172:	fs jne 0x4051e1
  405175:	and    BYTE PTR gs:[rsi+0x69],ah
  405179:	ins    BYTE PTR es:[rdi],dx
  40517a:	outs   dx,BYTE PTR gs:[rsi]
  40517c:	(bad)  
  40517d:	ins    DWORD PTR es:[rdi],dx
  40517e:	or     al,BYTE PTR gs:[rax]
  405181:	add    BYTE PTR [rdx],ah
  405183:	add    BYTE PTR [rax],al
  405185:	add    BYTE PTR [rdx],ah
  405187:	add    BYTE PTR [rax],ah
  405189:	add    BYTE PTR [rip+0x73002d00],ch        # 0x73407e8f
  40518f:	add    BYTE PTR [rbp+0x0],ah
  405192:	jae    0x405194
  405194:	jae    0x405196
  405196:	imul   eax,DWORD PTR [rax],0x6e006f
  40519c:	add    BYTE PTR [rax],al
  40519e:	and    eax,0xa736c
  4051a3:	add    BYTE PTR [rax],al
  4051a5:	add    BYTE PTR [rax],al
  4051a7:	add    BYTE PTR [rbx+0x6f],al
  4051aa:	jne    0x405218
  4051ac:	and    BYTE PTR fs:[rsi+0x6f],ch
  4051b0:	je     0x4051d2
  4051b2:	jae    0x405228
  4051b4:	(bad)  
  4051b5:	jb     0x40522b
  4051b7:	and    BYTE PTR [rdx+riz*2+0x75],ah
  4051bb:	jae    0x4051ea
  4051bd:	fs (bad) 
  4051bf:	gs ins DWORD PTR es:[rdi],dx
  4051c1:	outs   dx,DWORD PTR ds:[rsi]
  4051c2:	outs   dx,BYTE PTR ds:[rsi]
  4051c3:	and    BYTE PTR cs:[rbp+0x72],ah
  4051c7:	jb     0x405238
  4051c9:	jb     0x405208
  4051cb:	and    eax,0xa75
  4051d0:	add    BYTE PTR [rbp+0x40],0x0
  4051d7:	add    BYTE PTR [rax+0x4080],al
  4051dd:	add    BYTE PTR [rax],al
  4051df:	add    BYTE PTR [rax+0x401c],dh
	...
  4051ed:	add    BYTE PTR [rax],al
  4051ef:	add    BYTE PTR [rcx+0x72],al
  4051f2:	addr32 jne 0x405262
  4051f5:	outs   dx,BYTE PTR gs:[rsi]
  4051f7:	je     0x405219
  4051f9:	outs   dx,DWORD PTR fs:[rsi]
  4051fb:	ins    DWORD PTR es:[rdi],dx
  4051fc:	(bad)  
  4051fd:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405204:	jb     0x405226
  405206:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40520a:	rex.B
  40520b:	rex.WB
  40520c:	rex.WRX sub QWORD PTR [rax],r8
  40520f:	rex.B jb 0x405279
  405212:	jne    0x405281
  405214:	outs   dx,BYTE PTR gs:[rsi]
  405216:	je     0x405238
  405218:	jae    0x405283
  40521a:	outs   dx,BYTE PTR ds:[rsi]
  40521b:	addr32 jne 0x40528a
  40521e:	(bad)  
  40521f:	jb     0x40528a
  405221:	je     0x40529c
  405223:	and    BYTE PTR [rax],ch
  405225:	push   rbx
  405226:	rex.WB
  405227:	rex.RXB
  405228:	rex.WRX sub QWORD PTR [rax],r8
  40522b:	add    BYTE PTR [rax],al
  40522d:	add    BYTE PTR [rax],al
  40522f:	add    BYTE PTR [rdi+0x76],cl
  405232:	gs jb  0x40529b
  405235:	ins    BYTE PTR es:[rdi],dx
  405236:	outs   dx,DWORD PTR ds:[rsi]
  405237:	ja     0x405259
  405239:	jb     0x40529c
  40523b:	outs   dx,BYTE PTR ds:[rsi]
  40523c:	and    BYTE PTR gs:[ebp+0x72],ah
  405241:	jb     0x4052b2
  405243:	jb     0x405265
  405245:	sub    BYTE PTR [rdi+0x56],cl
  405248:	rex.RB push r10
  40524a:	rex.RX
  40524b:	rex.WR
  40524c:	rex.WRXB push r15
  40524e:	sub    DWORD PTR [rax],eax
  405250:	push   rax
  405251:	(bad)  
  405252:	jb     0x4052c8
  405254:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40525b:	jae    0x40527d
  40525d:	outs   dx,DWORD PTR ds:[rsi]
  40525e:	data16 and BYTE PTR [rbx+0x69],dh
  405262:	outs   dx,BYTE PTR ds:[esi]
  405264:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40526b:	and    BYTE PTR gs:[rax],ch
  40526e:	push   rax
  40526f:	rex.WR
  405270:	rex.WRXB push r11
  405272:	push   rbx
  405273:	sub    DWORD PTR [rax],eax
  405275:	add    BYTE PTR [rax],al
  405277:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40527b:	(bad)  
  40527c:	ins    BYTE PTR es:[rdi],dx
  40527d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405281:	jae    0x4052a3
  405283:	outs   dx,DWORD PTR ds:[rsi]
  405284:	data16 and BYTE PTR [rbx+0x69],dh
  405288:	outs   dx,BYTE PTR ds:[esi]
  40528a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405291:	and    BYTE PTR gs:[rax],ch
  405294:	push   rsp
  405295:	rex.WR
  405296:	rex.WRXB push r11
  405298:	push   rbx
  405299:	sub    DWORD PTR [rax],eax
  40529b:	add    BYTE PTR [rax],al
  40529d:	add    BYTE PTR [rax],al
  40529f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4052a3:	and    BYTE PTR [rdx+0x65],dh
  4052a6:	jae    0x40531d
  4052a8:	ins    BYTE PTR es:[rdi],dx
  4052a9:	je     0x4052cb
  4052ab:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4052b2:	jae    0x405321
  4052b4:	(bad)  
  4052b5:	ins    BYTE PTR es:[rdi],dx
  4052b6:	ins    BYTE PTR es:[rdi],dx
  4052b7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4052bb:	(bad)  
  4052bc:	and    BYTE PTR gs:[rdx+0x65],dh
  4052c0:	jo     0x405334
  4052c2:	gs jae 0x40532a
  4052c5:	outs   dx,BYTE PTR ds:[rsi]
  4052c6:	je     0x40532d
  4052c8:	and    BYTE PTR fs:[rax],ch
  4052cb:	push   rbp
  4052cc:	rex.WRX
  4052cd:	rex.R
  4052ce:	rex.RB push r10
  4052d0:	rex.RX
  4052d1:	rex.WR
  4052d2:	rex.WRXB push r15
  4052d4:	sub    DWORD PTR [rax],eax
  4052d6:	push   rbp
  4052d7:	outs   dx,BYTE PTR ds:[rsi]
  4052d8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4052dc:	outs   dx,BYTE PTR ds:[rsi]
  4052dd:	and    BYTE PTR [rbp+0x72],ah
  4052e0:	jb     0x405351
  4052e2:	jb     0x4052e4
  4052e4:	add    BYTE PTR [rax],al
  4052e6:	add    BYTE PTR [rax],al
  4052e8:	pop    rdi
  4052e9:	ins    DWORD PTR es:[rdi],dx
  4052ea:	(bad)  
  4052eb:	je     0x405355
  4052ed:	gs jb  0x405362
  4052f0:	sub    BYTE PTR [rcx],ch
  4052f2:	cmp    ah,BYTE PTR [rax]
  4052f4:	and    eax,0x6e692073
  4052f9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657b72
  4052ff:	sub    al,0x20
  405301:	and    eax,0x20202967
  405306:	sub    BYTE PTR [rdx+0x65],dh
  405309:	je     0x405381
  40530b:	(bad)  
  40530c:	ins    BYTE PTR es:[rdi],dx
  40530d:	cmp    eax,0xa296725
  405312:	add    BYTE PTR [rax],al
  405314:	ins    BYTE PTR es:[rdi],dx
  405315:	retf   
  405316:	(bad)  
  405317:	jmp    FWORD PTR [rbp+0x1cffffca]
  40531d:	retf   
  40531e:	(bad)  
  40531f:	jmp    FWORD PTR [rbx+rcx*8]
  405322:	(bad)  
  405323:	(bad)  
  405324:	cmp    al,0xcb
  405326:	(bad)  
  405327:	dec    DWORD PTR [rbx+rcx*8-0x1]
  40532b:	call   FWORD PTR [rbx+rcx*8-0x1]
  40532f:	dec    DWORD PTR [rbp+0x69]
  405332:	outs   dx,BYTE PTR ds:[rsi]
  405333:	addr32 ja 0x405363
  405336:	ja     0x40536e
  405338:	xor    al,0x20
  40533a:	jb     0x4053b1
  40533c:	outs   dx,BYTE PTR ds:[rsi]
  40533d:	je     0x4053a8
  40533f:	ins    DWORD PTR es:[rdi],dx
  405340:	and    BYTE PTR gs:[rsi+0x61],ah
  405344:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40534c:	add    BYTE PTR [rax],al
  40534e:	add    BYTE PTR [rax],al
  405350:	rex.B
  405351:	fs fs jb 0x4053ba
  405355:	jae    0x4053ca
  405357:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a873cd
  40535d:	jae    0x40537f
  40535f:	outs   dx,BYTE PTR ds:[rsi]
  405360:	outs   dx,DWORD PTR ds:[rsi]
  405361:	and    BYTE PTR [rcx+0x6d],ch
  405364:	(bad)  
  405365:	addr32 gs sub eax,0x74636573
  40536c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405373:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40537a:	jne    0x4053e1
  40537c:	jb     0x4053f7
  40537e:	and    BYTE PTR [rsi+0x61],ah
  405381:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405389:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a273f3
  40538f:	je     0x4053f6
  405391:	jae    0x4053b3
  405393:	(bad)  
  405394:	je     0x4053b6
  405396:	(bad)  
  405397:	fs fs jb 0x405400
  40539b:	jae    0x405410
  40539d:	and    BYTE PTR [rip+0x70],ah        # 0x405413
  4053a3:	add    BYTE PTR [rax],al
  4053a5:	add    BYTE PTR [rax],al
  4053a7:	add    BYTE PTR [rax],ah
  4053a9:	and    BYTE PTR [rsi+0x69],dl
  4053ac:	jb     0x405422
  4053ae:	jne    0x405411
  4053b0:	ins    BYTE PTR es:[rdi],dx
  4053b1:	push   rax
  4053b2:	jb     0x405423
  4053b4:	je     0x40541b
  4053b6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4053ba:	(bad)  
  4053bb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4053c3:	push   0x646f6320
  4053c8:	and    BYTE PTR gs:[rax],dh
  4053cb:	js     0x4053f2
  4053cd:	js     0x4053cf
  4053cf:	add    BYTE PTR [rax],ah
  4053d1:	and    BYTE PTR [rbp+0x6e],dl
  4053d4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4053d8:	outs   dx,BYTE PTR ds:[rsi]
  4053d9:	and    BYTE PTR [rax+0x73],dh
  4053dc:	gs jne 0x405443
  4053df:	outs   dx,DWORD PTR ds:[rsi]
  4053e0:	and    BYTE PTR [rdx+0x65],dh
  4053e3:	ins    BYTE PTR es:[rdi],dx
  4053e4:	outs   dx,DWORD PTR ds:[rsi]
  4053e5:	movsxd esp,DWORD PTR [rcx+0x74]
  4053e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4053ef:	je     0x405460
  4053f1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4053f4:	and    BYTE PTR [rsi+0x65],dh
  4053f7:	jb     0x40546c
  4053f9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405400:	or     al,BYTE PTR [rax]
  405402:	add    BYTE PTR [rax],al
  405404:	add    BYTE PTR [rax],al
  405406:	add    BYTE PTR [rax],al
  405408:	and    BYTE PTR [rax],ah
  40540a:	push   rbp
  40540b:	outs   dx,BYTE PTR ds:[rsi]
  40540c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405410:	outs   dx,BYTE PTR ds:[rsi]
  405411:	and    BYTE PTR [rax+0x73],dh
  405414:	gs jne 0x40547b
  405417:	outs   dx,DWORD PTR ds:[rsi]
  405418:	and    BYTE PTR [rdx+0x65],dh
  40541b:	ins    BYTE PTR es:[rdi],dx
  40541c:	outs   dx,DWORD PTR ds:[rsi]
  40541d:	movsxd esp,DWORD PTR [rcx+0x74]
  405420:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405427:	and    BYTE PTR [rbx+0x69],dh
  40542a:	jp     0x405491
  40542c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8296
	...
  40543e:	add    BYTE PTR [rax],al
  405440:	cs jo  0x4054a7
  405443:	(bad)  
  405444:	je     0x4054a7
	...
  40544e:	add    BYTE PTR [rax],al
  405450:	cmp    al,0x0
  405452:	jne    0x405454
  405454:	outs   dx,BYTE PTR ds:[rsi]
  405455:	add    BYTE PTR [rbx+0x0],ch
  405458:	outs   dx,BYTE PTR ds:[rsi]
  405459:	add    BYTE PTR [rdi+0x0],ch
  40545c:	ja     0x40545e
  40545e:	outs   dx,BYTE PTR ds:[rsi]
  40545f:	add    BYTE PTR [rsi],bh
  405461:	add    BYTE PTR [rax],al
  405463:	add    BYTE PTR [rdi],bh
  405465:	add    BYTE PTR [rax],al
  405467:	add    BYTE PTR [rcx+0x0],al
  40546a:	jae    0x40546c
  40546c:	jae    0x40546e
  40546e:	add    BYTE PTR gs:[rdx+0x0],dh
  405472:	je     0x405474
  405474:	imul   eax,DWORD PTR [rax],0x6e006f
  40547a:	and    BYTE PTR [rax],al
  40547c:	data16 add BYTE PTR [rcx+0x0],ah
  405480:	imul   eax,DWORD PTR [rax],0x65006c
  405486:	add    BYTE PTR fs:[rcx],ah
  405489:	add    BYTE PTR [rdx],cl
  40548b:	add    BYTE PTR [rdx],cl
  40548d:	add    BYTE PTR [rax+0x0],dl
  405490:	jb     0x405492
  405492:	outs   dx,DWORD PTR ds:[rsi]
  405493:	add    BYTE PTR [rdi+0x0],ah
  405496:	jb     0x405498
  405498:	(bad)  
  405499:	add    BYTE PTR [rbp+0x0],ch
  40549c:	cmp    al,BYTE PTR [rax]
  40549e:	and    BYTE PTR [rax],al
  4054a0:	and    eax,0x73007700
  4054a5:	add    BYTE PTR [rdx],cl
  4054a7:	add    BYTE PTR [rsi+0x0],al
  4054aa:	imul   eax,DWORD PTR [rax],0x65006c
  4054b0:	cmp    al,BYTE PTR [rax]
  4054b2:	and    BYTE PTR [rax],al
  4054b4:	and    eax,0x73007700
  4054b9:	add    BYTE PTR [rax+rax*1],ch
  4054bc:	and    BYTE PTR [rax],al
  4054be:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4054c2:	outs   dx,BYTE PTR ds:[rsi]
  4054c3:	add    BYTE PTR [rbp+0x0],ah
  4054c6:	and    BYTE PTR [rax],al
  4054c8:	and    eax,0xa007500
  4054cd:	add    BYTE PTR [rdx],cl
  4054cf:	add    BYTE PTR [rbp+0x0],al
  4054d2:	js     0x4054d4
  4054d4:	jo     0x4054d6
  4054d6:	jb     0x4054d8
  4054d8:	add    BYTE PTR gs:[rbx+0x0],dh
  4054dc:	jae    0x4054de
  4054de:	imul   eax,DWORD PTR [rax],0x6e006f
  4054e4:	cmp    al,BYTE PTR [rax]
  4054e6:	and    BYTE PTR [rax],al
  4054e8:	and    eax,0x73007700
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    BYTE PTR [rip+0x73007700],ah        # 0x7340cbf5
  4054f5:	add    BYTE PTR [rdx],cl
	...
  4054ff:	add    BYTE PTR [rbp+0x0],cl
  405502:	imul   eax,DWORD PTR [rax],0x47006e
  405508:	push   rdi
  405509:	add    BYTE PTR [rax],ah
  40550b:	add    BYTE PTR [rdx+0x0],dl
  40550e:	jne    0x405510
  405510:	outs   dx,BYTE PTR ds:[rsi]
  405511:	add    BYTE PTR [rax+rax*1+0x69],dh
  405515:	add    BYTE PTR [rbp+0x0],ch
  405518:	add    BYTE PTR gs:[rax],ah
  40551b:	add    BYTE PTR [rcx+0x0],al
  40551e:	jae    0x405520
  405520:	jae    0x405522
  405522:	add    BYTE PTR gs:[rdx+0x0],dh
  405526:	je     0x405528
  405528:	imul   eax,DWORD PTR [rax],0x6e006f
  40552e:	add    BYTE PTR [rax],al
  405530:	rex
  405531:	rex
  405532:	add    BYTE PTR [rax],al
	...
  40553d:	add    BYTE PTR [rax],al
  40553f:	add    BYTE PTR [rax+0x40],dl
  405542:	add    BYTE PTR [rax],al
	...
  40554d:	add    BYTE PTR [rax],al
  40554f:	add    BYTE PTR [rax+0x32],dh
  405552:	add    BYTE PTR [rax],al
	...
  40555d:	add    BYTE PTR [rax],al
  40555f:	add    BYTE PTR [rax+0x405a],dl
	...
  40556d:	add    BYTE PTR [rax],al
  40556f:	add    BYTE PTR [rax+0x405a],dl
	...
  40557d:	add    BYTE PTR [rax],al
  40557f:	add    al,ah
  405581:	push   rcx
  405582:	add    BYTE PTR [rax],al
	...
  405591:	add    BYTE PTR [rax+0x0],al
	...
  4055a0:	(bad)  
  4055a1:	xchg   ebx,eax
  4055a2:	add    BYTE PTR [rax],al
	...
  4055ad:	add    BYTE PTR [rax],al
  4055af:	add    BYTE PTR [rax+0x4093],cl
	...
  4055bd:	add    BYTE PTR [rax],al
  4055bf:	add    BYTE PTR [rax+0x4093],ch
	...
  4055cd:	add    BYTE PTR [rax],al
  4055cf:	add    al,al
  4055d1:	xchg   ebx,eax
  4055d2:	add    BYTE PTR [rax],al
	...
  4055dd:	add    BYTE PTR [rax],al
  4055df:	add    al,al
  4055e1:	xchg   BYTE PTR [rax+0x0],al
	...
  4055f0:	sub    BYTE PTR [rdx+0x40],cl
	...
  4055fe:	add    BYTE PTR [rax],al
  405600:	and    BYTE PTR [rdx+0x40],cl
	...
  40560e:	add    BYTE PTR [rax],al
  405610:	adc    BYTE PTR [rdx+0x40],cl
	...
  40561e:	add    BYTE PTR [rax],al
  405620:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40562e:	add    BYTE PTR [rax],al
  405630:	add    BYTE PTR [rax+0x40],ah
	...
  40563e:	add    BYTE PTR [rax],al
  405640:	adc    BYTE PTR [rax+0x40],ah
	...
  40564e:	add    BYTE PTR [rax],al
  405650:	sbb    BYTE PTR [rax+0x40],ah
	...
  40565e:	add    BYTE PTR [rax],al
  405660:	xor    BYTE PTR [rax+0x40],ah
	...
  40566e:	add    BYTE PTR [rax],al
  405670:	rex add BYTE PTR [rax+0x0],0x0
	...
  40567d:	add    BYTE PTR [rax],al
  40567f:	add    BYTE PTR [rax+0x4086],dl
	...
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rax+0x26],al
  405692:	add    BYTE PTR [rax],al
	...
  40569d:	add    BYTE PTR [rax],al
  40569f:	add    BYTE PTR [rax+0x401d],dl
	...
  4056ad:	add    BYTE PTR [rax],al
  4056af:	add    BYTE PTR [rax-0x7a],al
  4056b2:	add    BYTE PTR [rax],al
	...
  4056bd:	add    BYTE PTR [rax],al
  4056bf:	add    BYTE PTR [rax-0x7a],dh
  4056c2:	add    BYTE PTR [rax],al
	...
  4056cd:	add    BYTE PTR [rax],al
  4056cf:	add    BYTE PTR [rax-0x80],dl
  4056d2:	add    BYTE PTR [rax],al
	...
  4056dd:	add    BYTE PTR [rax],al
  4056df:	add    BYTE PTR [rax-0x7a],bl
  4056e2:	add    BYTE PTR [rax],al
	...
  4056ed:	add    BYTE PTR [rax],al
  4056ef:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4056ff:	add    BYTE PTR [rax-0x7a],dl
  405702:	add    BYTE PTR [rax],al
	...
  40570d:	add    BYTE PTR [rax],al
  40570f:	add    BYTE PTR [rdi+0x43],al
  405712:	rex.XB cmp spl,BYTE PTR [r8]
  405715:	sub    BYTE PTR [rdi+0x4e],al
  405718:	push   rbp
  405719:	sub    DWORD PTR [rax],esp
  40571b:	xor    al,0x2e
  40571d:	cmp    DWORD PTR [rsi],ebp
  40571f:	xor    al,0x0
	...
  40572d:	add    BYTE PTR [rax],al
  40572f:	add    BYTE PTR [rdi+0x43],al
  405732:	rex.XB cmp spl,BYTE PTR [r8]
  405735:	sub    BYTE PTR [rdi+0x4e],al
  405738:	push   rbp
  405739:	sub    DWORD PTR [rax],esp
  40573b:	xor    al,0x2e
  40573d:	cmp    DWORD PTR [rsi],ebp
  40573f:	xor    al,0x0
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rdi+0x43],al
  405752:	rex.XB cmp spl,BYTE PTR [r8]
  405755:	sub    BYTE PTR [rdi+0x4e],al
  405758:	push   rbp
  405759:	sub    DWORD PTR [rax],esp
  40575b:	xor    al,0x2e
  40575d:	cmp    DWORD PTR [rsi],ebp
  40575f:	xor    al,0x0
	...
  40576d:	add    BYTE PTR [rax],al
  40576f:	add    BYTE PTR [rdi+0x43],al
  405772:	rex.XB cmp spl,BYTE PTR [r8]
  405775:	sub    BYTE PTR [rdi+0x4e],al
  405778:	push   rbp
  405779:	sub    DWORD PTR [rax],esp
  40577b:	xor    al,0x2e
  40577d:	cmp    DWORD PTR [rsi],ebp
  40577f:	xor    al,0x0
	...
  40578d:	add    BYTE PTR [rax],al
  40578f:	add    BYTE PTR [rdi+0x43],al
  405792:	rex.XB cmp spl,BYTE PTR [r8]
  405795:	sub    BYTE PTR [rdi+0x4e],al
  405798:	push   rbp
  405799:	sub    DWORD PTR [rax],esp
  40579b:	xor    al,0x2e
  40579d:	cmp    DWORD PTR [rsi],ebp
  40579f:	xor    al,0x0
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    BYTE PTR [rdi+0x43],al
  4057b2:	rex.XB cmp spl,BYTE PTR [r8]
  4057b5:	sub    BYTE PTR [rdi+0x4e],al
  4057b8:	push   rbp
  4057b9:	sub    DWORD PTR [rax],esp
  4057bb:	xor    al,0x2e
  4057bd:	cmp    DWORD PTR [rsi],ebp
  4057bf:	xor    al,0x0
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rdi+0x43],al
  4057d2:	rex.XB cmp spl,BYTE PTR [r8]
  4057d5:	sub    BYTE PTR [rdi+0x4e],al
  4057d8:	push   rbp
  4057d9:	sub    DWORD PTR [rax],esp
  4057db:	xor    al,0x2e
  4057dd:	cmp    DWORD PTR [rsi],ebp
  4057df:	xor    al,0x0
	...
  4057ed:	add    BYTE PTR [rax],al
  4057ef:	add    BYTE PTR [rdi+0x43],al
  4057f2:	rex.XB cmp spl,BYTE PTR [r8]
  4057f5:	sub    BYTE PTR [rdi+0x4e],al
  4057f8:	push   rbp
  4057f9:	sub    DWORD PTR [rax],esp
  4057fb:	xor    al,0x2e
  4057fd:	cmp    DWORD PTR [rsi],ebp
  4057ff:	xor    al,0x0
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rdi+0x43],al
  405812:	rex.XB cmp spl,BYTE PTR [r8]
  405815:	sub    BYTE PTR [rdi+0x4e],al
  405818:	push   rbp
  405819:	sub    DWORD PTR [rax],esp
  40581b:	xor    al,0x2e
  40581d:	cmp    DWORD PTR [rsi],ebp
  40581f:	xor    al,0x0
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rdi+0x43],al
  405832:	rex.XB cmp spl,BYTE PTR [r8]
  405835:	sub    BYTE PTR [rdi+0x4e],al
  405838:	push   rbp
  405839:	sub    DWORD PTR [rax],esp
  40583b:	xor    al,0x2e
  40583d:	cmp    DWORD PTR [rsi],ebp
  40583f:	xor    al,0x0
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rdi+0x43],al
  405852:	rex.XB cmp spl,BYTE PTR [r8]
  405855:	sub    BYTE PTR [rdi+0x4e],al
  405858:	push   rbp
  405859:	sub    DWORD PTR [rax],esp
  40585b:	xor    al,0x2e
  40585d:	cmp    DWORD PTR [rsi],ebp
  40585f:	xor    al,0x0
	...
  40586d:	add    BYTE PTR [rax],al
  40586f:	add    BYTE PTR [rdi+0x43],al
  405872:	rex.XB cmp spl,BYTE PTR [r8]
  405875:	sub    BYTE PTR [rdi+0x4e],al
  405878:	push   rbp
  405879:	sub    DWORD PTR [rax],esp
  40587b:	xor    al,0x2e
  40587d:	cmp    DWORD PTR [rsi],ebp
  40587f:	xor    al,0x0
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    BYTE PTR [rdi+0x43],al
  405892:	rex.XB cmp spl,BYTE PTR [r8]
  405895:	sub    BYTE PTR [rdi+0x4e],al
  405898:	push   rbp
  405899:	sub    DWORD PTR [rax],esp
  40589b:	xor    al,0x2e
  40589d:	cmp    DWORD PTR [rsi],ebp
  40589f:	xor    al,0x0
	...
  4058ad:	add    BYTE PTR [rax],al
  4058af:	add    BYTE PTR [rdi+0x43],al
  4058b2:	rex.XB cmp spl,BYTE PTR [r8]
  4058b5:	sub    BYTE PTR [rdi+0x4e],al
  4058b8:	push   rbp
  4058b9:	sub    DWORD PTR [rax],esp
  4058bb:	xor    al,0x2e
  4058bd:	cmp    DWORD PTR [rsi],ebp
  4058bf:	xor    al,0x0
	...
  4058cd:	add    BYTE PTR [rax],al
  4058cf:	add    BYTE PTR [rdi+0x43],al
  4058d2:	rex.XB cmp spl,BYTE PTR [r8]
  4058d5:	sub    BYTE PTR [rdi+0x4e],al
  4058d8:	push   rbp
  4058d9:	sub    DWORD PTR [rax],esp
  4058db:	xor    al,0x2e
  4058dd:	cmp    DWORD PTR [rsi],ebp
  4058df:	xor    al,0x0
	...
  4058ed:	add    BYTE PTR [rax],al
  4058ef:	add    BYTE PTR [rdi+0x43],al
  4058f2:	rex.XB cmp spl,BYTE PTR [r8]
  4058f5:	sub    BYTE PTR [rdi+0x4e],al
  4058f8:	push   rbp
  4058f9:	sub    DWORD PTR [rax],esp
  4058fb:	xor    al,0x2e
  4058fd:	cmp    DWORD PTR [rsi],ebp
  4058ff:	xor    al,0x0
	...
  40590d:	add    BYTE PTR [rax],al
  40590f:	add    BYTE PTR [rdi+0x43],al
  405912:	rex.XB cmp spl,BYTE PTR [r8]
  405915:	sub    BYTE PTR [rdi+0x4e],al
  405918:	push   rbp
  405919:	sub    DWORD PTR [rax],esp
  40591b:	xor    al,0x2e
  40591d:	cmp    DWORD PTR [rsi],ebp
  40591f:	xor    al,0x0
	...
  40592d:	add    BYTE PTR [rax],al
  40592f:	add    BYTE PTR [rdi+0x43],al
  405932:	rex.XB cmp spl,BYTE PTR [r8]
  405935:	sub    BYTE PTR [rdi+0x4e],al
  405938:	push   rbp
  405939:	sub    DWORD PTR [rax],esp
  40593b:	xor    al,0x2e
  40593d:	cmp    DWORD PTR [rsi],ebp
  40593f:	xor    al,0x0
	...
  40594d:	add    BYTE PTR [rax],al
  40594f:	add    BYTE PTR [rdi+0x43],al
  405952:	rex.XB cmp spl,BYTE PTR [r8]
  405955:	sub    BYTE PTR [rdi+0x4e],al
  405958:	push   rbp
  405959:	sub    DWORD PTR [rax],esp
  40595b:	xor    al,0x2e
  40595d:	cmp    DWORD PTR [rsi],ebp
  40595f:	xor    al,0x0
	...
  40596d:	add    BYTE PTR [rax],al
  40596f:	add    BYTE PTR [rdi+0x43],al
  405972:	rex.XB cmp spl,BYTE PTR [r8]
  405975:	sub    BYTE PTR [rdi+0x4e],al
  405978:	push   rbp
  405979:	sub    DWORD PTR [rax],esp
  40597b:	xor    al,0x2e
  40597d:	cmp    DWORD PTR [rsi],ebp
  40597f:	xor    al,0x0
	...
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    BYTE PTR [rdi+0x43],al
  405992:	rex.XB cmp spl,BYTE PTR [r8]
  405995:	sub    BYTE PTR [rdi+0x4e],al
  405998:	push   rbp
  405999:	sub    DWORD PTR [rax],esp
  40599b:	xor    al,0x2e
  40599d:	cmp    DWORD PTR [rsi],ebp
  40599f:	xor    al,0x0
	...
  4059ad:	add    BYTE PTR [rax],al
  4059af:	add    BYTE PTR [rdi+0x43],al
  4059b2:	rex.XB cmp spl,BYTE PTR [r8]
  4059b5:	sub    BYTE PTR [rdi+0x4e],al
  4059b8:	push   rbp
  4059b9:	sub    DWORD PTR [rax],esp
  4059bb:	xor    al,0x2e
  4059bd:	cmp    DWORD PTR [rsi],ebp
  4059bf:	xor    al,0x0
	...
  4059cd:	add    BYTE PTR [rax],al
  4059cf:	add    BYTE PTR [rdi+0x43],al
  4059d2:	rex.XB cmp spl,BYTE PTR [r8]
  4059d5:	sub    BYTE PTR [rdi+0x4e],al
  4059d8:	push   rbp
  4059d9:	sub    DWORD PTR [rax],esp
  4059db:	xor    al,0x2e
  4059dd:	cmp    DWORD PTR [rsi],ebp
  4059df:	xor    al,0x0
	...
  4059ed:	add    BYTE PTR [rax],al
  4059ef:	add    BYTE PTR [rdi+0x43],al
  4059f2:	rex.XB cmp spl,BYTE PTR [r8]
  4059f5:	sub    BYTE PTR [rdi+0x4e],al
  4059f8:	push   rbp
  4059f9:	sub    DWORD PTR [rax],esp
  4059fb:	xor    al,0x2e
  4059fd:	cmp    DWORD PTR [rsi],ebp
  4059ff:	xor    al,0x0
	...
  405a0d:	add    BYTE PTR [rax],al
  405a0f:	add    BYTE PTR [rdi+0x43],al
  405a12:	rex.XB cmp spl,BYTE PTR [r8]
  405a15:	sub    BYTE PTR [rdi+0x4e],al
  405a18:	push   rbp
  405a19:	sub    DWORD PTR [rax],esp
  405a1b:	xor    al,0x2e
  405a1d:	cmp    DWORD PTR [rsi],ebp
  405a1f:	xor    al,0x0
	...
  405a2d:	add    BYTE PTR [rax],al
  405a2f:	add    BYTE PTR [rdi+0x43],al
  405a32:	rex.XB cmp spl,BYTE PTR [r8]
  405a35:	sub    BYTE PTR [rdi+0x4e],al
  405a38:	push   rbp
  405a39:	sub    DWORD PTR [rax],esp
  405a3b:	xor    al,0x2e
  405a3d:	cmp    DWORD PTR [rsi],ebp
  405a3f:	xor    al,0x0
	...
  405a4d:	add    BYTE PTR [rax],al
  405a4f:	add    BYTE PTR [rdi+0x43],al
  405a52:	rex.XB cmp spl,BYTE PTR [r8]
  405a55:	sub    BYTE PTR [rdi+0x4e],al
  405a58:	push   rbp
  405a59:	sub    DWORD PTR [rax],esp
  405a5b:	xor    al,0x2e
  405a5d:	cmp    DWORD PTR [rsi],ebp
  405a5f:	xor    al,0x0
	...
  405a6d:	add    BYTE PTR [rax],al
  405a6f:	add    BYTE PTR [rdi+0x43],al
  405a72:	rex.XB cmp spl,BYTE PTR [r8]
  405a75:	sub    BYTE PTR [rdi+0x4e],al
  405a78:	push   rbp
  405a79:	sub    DWORD PTR [rax],esp
  405a7b:	xor    al,0x2e
  405a7d:	cmp    DWORD PTR [rsi],ebp
  405a7f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x15aa0000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffffaa000070
  406055:	adc    eax,0x160e0000
  40605a:	add    BYTE PTR [rax],al
  40605c:	je     0x4060ce
  40605e:	add    BYTE PTR [rax],al
  406060:	(bad)  
  406061:	(bad)  
  406062:	add    BYTE PTR [rax],al
  406064:	in     eax,dx
  406065:	sbb    BYTE PTR [rax],al
  406067:	add    BYTE PTR [rax-0xfffff90],al
  40606d:	sbb    BYTE PTR [rax],al
  40606f:	add    BYTE PTR [rdi-0x6fffffe7],dl
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax-0x46ffffe7],ah
  40607d:	sbb    DWORD PTR [rax],eax
  40607f:	add    BYTE PTR [rax-0x3fffff90],bl
  406085:	sbb    DWORD PTR [rax],eax
  406087:	add    ch,dh
  406089:	sbb    DWORD PTR [rax],eax
  40608b:	add    BYTE PTR [rax+0x70],ah
  406091:	sbb    al,BYTE PTR [rax]
  406093:	add    BYTE PTR [rbp+0x1a],dl
  406096:	add    BYTE PTR [rax],al
  406098:	test   al,0x70
  40609a:	add    BYTE PTR [rax],al
  40609c:	(bad)  
  40609d:	sbb    al,BYTE PTR [rax]
  40609f:	add    BYTE PTR [rdx+rbx*1+0x0],bh
  4060a3:	add    BYTE PTR [rax+rsi*2+0x1a800000],dh
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	mov    bl,BYTE PTR [rdx]
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	mov    eax,0x90000070
  4060b5:	sbb    al,BYTE PTR [rax]
  4060b7:	add    BYTE PTR [rbx-0x43ffffe6],dl
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x7600001a],ah
  4060c5:	sbb    eax,DWORD PTR [rax]
  4060c7:	add    al,al
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax+0x7b00001b],al
  4060d1:	sbb    al,0x0
  4060d3:	add    al,dl
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax-0x50ffffe4],al
  4060dd:	sbb    al,0x0
  4060df:	add    al,ah
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax+0x1900001c],dh
  4060e9:	sbb    eax,0x70e80000
  4060ee:	add    BYTE PTR [rax],al
  4060f0:	and    BYTE PTR [rip+0x1d230000],bl        # 0x1d6360f6
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	hlt    
  4060f9:	jo     0x4060fb
  4060fb:	add    BYTE PTR [rax],dh
  4060fd:	sbb    eax,0x1d710000
  406102:	add    BYTE PTR [rax],al
  406104:	clc    
  406105:	jo     0x406107
  406107:	add    BYTE PTR [rax-0x73ffffe3],al
  40610d:	sbb    eax,0x71000000
  406112:	add    BYTE PTR [rax],al
  406114:	nop
  406115:	sbb    eax,0x1e8c0000
  40611a:	add    BYTE PTR [rax],al
  40611c:	add    al,0x71
  40611e:	add    BYTE PTR [rax],al
  406120:	nop
  406121:	(bad)  
  406122:	add    BYTE PTR [rax],al
  406124:	xchg   ebx,eax
  406125:	(bad)  
  406126:	add    BYTE PTR [rax],al
  406128:	sbb    al,0x71
  40612a:	add    BYTE PTR [rax],al
  40612c:	movabs al,ds:0x2000001ea400001e
  406135:	jno    0x406137
  406137:	add    BYTE PTR [rax-0x4bffffe2],dh
  40613d:	(bad)  
  40613e:	add    BYTE PTR [rax],al
  406140:	and    al,0x71
  406142:	add    BYTE PTR [rax],al
  406144:	rcr    BYTE PTR [rsi],0x0
  406147:	add    BYTE PTR [rcx],ah
  406149:	(bad)  
  40614a:	add    BYTE PTR [rax],al
  40614c:	sub    BYTE PTR [rcx+0x0],dh
  40614f:	add    BYTE PTR [rax],dh
  406151:	(bad)  
  406152:	add    BYTE PTR [rax],al
  406154:	xchg   edx,eax
  406155:	and    BYTE PTR [rax],al
  406157:	add    BYTE PTR [rcx+rsi*2],dh
  40615a:	add    BYTE PTR [rax],al
  40615c:	movabs al,ds:0x4800002399000020
  406165:	jno    0x406167
  406167:	add    BYTE PTR [rax+0x46000023],ah
  40616d:	and    eax,0x71600000
  406172:	add    BYTE PTR [rax],al
  406174:	push   rax
  406175:	and    eax,0x263c0000
  40617a:	add    BYTE PTR [rax],al
  40617c:	push   0x40000071
  406181:	add    BYTE PTR es:[rax],al
  406184:	clc    
  406185:	(bad)  
  406186:	add    BYTE PTR [rax],al
  406188:	js     0x4061fb
  40618a:	add    BYTE PTR [rax],al
  40618c:	add    BYTE PTR [rax],ch
  40618e:	add    BYTE PTR [rax],al
  406190:	ins    DWORD PTR es:[rdi],dx
  406191:	sub    BYTE PTR [rax],al
  406193:	add    BYTE PTR [rax+0x70000071],al
  406199:	sub    BYTE PTR [rax],al
  40619b:	add    bh,ch
  40619d:	sub    BYTE PTR [rax],al
  40619f:	add    BYTE PTR [rax-0xfffff8f],dl
  4061a5:	sub    BYTE PTR [rax],al
  4061a7:	add    BYTE PTR [rdi-0x63ffffd7],cl
  4061ad:	jno    0x4061af
  4061af:	add    BYTE PTR [rax+0x6a000029],dl
  4061b5:	sub    al,BYTE PTR [rax]
  4061b7:	add    BYTE PTR [rcx+rsi*2+0x2a700000],ah
  4061be:	add    BYTE PTR [rax],al
  4061c0:	(bad)
  4061c4:	lods   al,BYTE PTR ds:[rsi]
  4061c5:	jno    0x4061c7
  4061c7:	add    BYTE PTR [rax-0x5dffffd6],dl
  4061cd:	sub    al,BYTE PTR [rax]
  4061cf:	add    BYTE PTR [rax-0x4fffff8f],dh
  4061d5:	sub    al,BYTE PTR [rax]
  4061d7:	add    ch,dh
  4061d9:	sub    al,BYTE PTR [rax]
  4061db:	add    BYTE PTR [rcx+rsi*2+0x2b000000],dh
  4061e2:	add    BYTE PTR [rax],al
  4061e4:	sahf   
  4061e5:	sub    eax,DWORD PTR [rax]
  4061e7:	add    BYTE PTR [rax-0x5fffff8f],bh
  4061ed:	sub    eax,DWORD PTR [rax]
  4061ef:	add    bl,ah
  4061f1:	sub    eax,DWORD PTR [rax]
  4061f3:	add    ah,al
  4061f5:	jno    0x4061f7
  4061f7:	add    al,dh
  4061f9:	sub    eax,DWORD PTR [rax]
  4061fb:	add    BYTE PTR [rbx],ch
  4061fd:	sub    al,0x0
  4061ff:	add    al,dl
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax],dh
  406205:	sub    al,0x0
  406207:	add    BYTE PTR [rsi-0x27ffffd4],bh
  40620d:	jno    0x40620f
  40620f:	add    al,al
  406211:	sub    al,0x0
  406213:	add    al,bh
  406215:	sub    al,0x0
  406217:	add    ah,ah
  406219:	jno    0x40621b
  40621b:	add    BYTE PTR [rax],al
  40621d:	sub    eax,0x2d550000
  406222:	add    BYTE PTR [rax],al
  406224:	lock jno 0x406227
  406227:	add    BYTE PTR [rax+0x2d],ah
  40622a:	add    BYTE PTR [rax],al
  40622c:	(bad)  
  40622d:	add    BYTE PTR cs:[rax],al
  406230:	cld    
  406231:	jno    0x406233
  406233:	add    BYTE PTR [rax+0x2e],dl
  406236:	add    BYTE PTR [rax],al
  406238:	sub    DWORD PTR [rdi],0x0
  40623b:	add    BYTE PTR [rdx+rsi*2],cl
  40623e:	add    BYTE PTR [rax],al
  406240:	nop
  406241:	(bad)  
  406242:	add    BYTE PTR [rax],al
  406244:	push   rax
  406245:	xor    BYTE PTR [rax],al
  406247:	add    BYTE PTR [rax],ah
  406249:	jb     0x40624b
  40624b:	add    BYTE PTR [rax+0x31],dh
  40624e:	add    BYTE PTR [rax],al
  406250:	js     0x406283
  406252:	add    BYTE PTR [rax],al
  406254:	xor    BYTE PTR [rdx+0x0],dh
  406257:	add    BYTE PTR [rax-0x74ffffcf],al
  40625d:	xor    DWORD PTR [rax],eax
  40625f:	add    BYTE PTR [rdx+rsi*2],dh
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	(bad)  
  407031:	xor    DWORD PTR [rax],eax
  407033:	add    BYTE PTR [rcx],al
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax+0x26],al
  407042:	add    BYTE PTR [rax],al
  407044:	in     al,dx
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	(bad)  
  407051:	xor    DWORD PTR [rax],eax
  407053:	add    BYTE PTR [rcx],al
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	rex
  407061:	add    BYTE PTR es:[rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rsi],ecx
  40706a:	add    al,0x85
  40706c:	(bad)  
  40706d:	add    eax,DWORD PTR [rsi]
  40706f:	rex.X add sil,BYTE PTR [rax]
  407072:	add    DWORD PTR [rax+0x1],edx
  407075:	or     BYTE PTR [rbx],al
  407077:	add    eax,0x3043208
  40707c:	add    DWORD PTR [rax+0x0],edx
  40707f:	add    BYTE PTR [rcx],al
  407081:	adc    DWORD PTR [rip+0x9031185],eax        # 0x943820c
  407087:	add    DWORD PTR [rcx],ebp
  407089:	add    DWORD PTR [rdx],eax
  40708b:	xor    BYTE PTR [rcx],al
  40708d:	push   rax
  40708e:	add    BYTE PTR [rax],al
  407090:	add    DWORD PTR [rip+0x52050002],eax        # 0x52457098
  407096:	add    DWORD PTR [rax],esi
  407098:	add    DWORD PTR [rcx+rax*1],eax
  40709b:	add    BYTE PTR [rdx+rax*2],al
  40709e:	add    BYTE PTR [rax],al
  4070a0:	add    DWORD PTR [rcx+rax*1],eax
  4070a3:	add    BYTE PTR [rdx+rax*2],al
  4070a6:	add    BYTE PTR [rax],al
  4070a8:	add    DWORD PTR [rsi],eax
  4070aa:	add    eax,DWORD PTR [rax]
  4070ac:	(bad)  
  4070ad:	rex.X add sil,BYTE PTR [rax]
  4070b0:	add    DWORD PTR [rax+0x0],esp
  4070b3:	add    BYTE PTR [rcx],al
  4070b5:	add    BYTE PTR [rax],al
  4070b7:	add    BYTE PTR [rcx],al
  4070b9:	add    BYTE PTR [rax],al
  4070bb:	add    BYTE PTR [rcx],al
  4070bd:	add    BYTE PTR [rax],al
  4070bf:	add    BYTE PTR [rcx],al
  4070c1:	or     al,BYTE PTR [rsi]
  4070c3:	add    BYTE PTR [rdx],cl
  4070c5:	jb     0x4070cd
  4070c7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0752d
  4070cd:	push   rax
  4070ce:	add    al,al
  4070d0:	add    DWORD PTR [rdx],ecx
  4070d2:	add    eax,0x6d20a05
  4070d7:	add    eax,DWORD PTR [rbx]
  4070d9:	xor    BYTE PTR [rdx],al
  4070db:	(bad)  
  4070dc:	add    DWORD PTR [rax+0x0],edx
  4070df:	add    BYTE PTR [rcx],al
  4070e1:	add    al,0x1
  4070e3:	add    BYTE PTR [rdx+rax*2],al
  4070e6:	add    BYTE PTR [rax],al
  4070e8:	add    DWORD PTR [rsi],eax
  4070ea:	add    eax,DWORD PTR [rax]
  4070ec:	(bad)  
  4070ed:	rex.X add sil,BYTE PTR [rax]
  4070f0:	add    DWORD PTR [rax+0x0],esp
  4070f3:	add    BYTE PTR [rcx],al
  4070f5:	add    BYTE PTR [rax],al
  4070f7:	add    BYTE PTR [rcx],al
  4070f9:	add    al,0x1
  4070fb:	add    BYTE PTR [rdx+riz*4],al
  4070fe:	add    BYTE PTR [rax],al
  407100:	add    DWORD PTR [rax],eax
  407102:	add    BYTE PTR [rax],al
  407104:	add    DWORD PTR [rsi],edx
  407106:	or     DWORD PTR [rax],eax
  407108:	(bad)  
  407109:	mov    BYTE PTR [rsi],al
  40710b:	add    BYTE PTR [rax],dl
  40710d:	js     0x407114
  40710f:	add    BYTE PTR [rbx],cl
  407111:	push   0xffffffffe2060004
  407116:	add    dh,BYTE PTR [rax]
  407118:	add    DWORD PTR [rax+0x0],esp
  40711b:	add    BYTE PTR [rcx],al
  40711d:	add    BYTE PTR [rax],al
  40711f:	add    BYTE PTR [rcx],al
  407121:	add    BYTE PTR [rax],al
  407123:	add    BYTE PTR [rcx],al
  407125:	add    BYTE PTR [rax],al
  407127:	add    BYTE PTR [rcx],al
  407129:	(bad)  
  40712a:	add    eax,DWORD PTR [rax]
  40712c:	(bad)  
  40712d:	(bad)  
  40712f:	xor    BYTE PTR [rcx],al
  407131:	(bad)  
  407132:	add    BYTE PTR [rax],al
  407134:	add    DWORD PTR [rdi+rax*1],ecx
  407137:	add    BYTE PTR [rdx+riz*4],cl
  40713a:	or     BYTE PTR [rax],dh
  40713c:	(bad)  
  40713d:	(bad)  
  40713e:	(bad)  
  40713f:	jo     0x407146
  407141:	push   rax
  407142:	add    al,0xc0
  407144:	add    dl,al
  407146:	add    BYTE PTR [rax],al
  407148:	add    DWORD PTR [rcx],edx
  40714a:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e2361
  407150:	or     dh,BYTE PTR [rax]
  407152:	or     DWORD PTR [rax+0x8],esp
  407155:	jo     0x40715e
  407157:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220752e
  40715e:	add    BYTE PTR [rax],al
  407160:	add    DWORD PTR [rcx+rax*1],eax
  407163:	add    BYTE PTR [rdx+rax*2],al
  407166:	add    BYTE PTR [rax],al
  407168:	add    DWORD PTR [rdx],ecx
  40716a:	(bad)  
  40716b:	add    BYTE PTR [rdx],cl
  40716d:	xor    al,BYTE PTR [rsi]
  40716f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075d5
  407175:	push   rax
  407176:	add    al,al
  407178:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457180
  40717e:	add    DWORD PTR [rax],esi
  407180:	add    DWORD PTR [rax],ecx
  407182:	add    eax,0x4420800
  407187:	xor    BYTE PTR [rbx],al
  407189:	(bad)  
  40718a:	add    dh,BYTE PTR [rax+0x1]
  40718d:	push   rax
  40718e:	add    BYTE PTR [rax],al
  407190:	add    DWORD PTR [rdi],eax
  407192:	add    al,0x0
  407194:	(bad)  
  407195:	xor    al,BYTE PTR [rbx]
  407197:	xor    BYTE PTR [rdx],al
  407199:	(bad)  
  40719a:	add    DWORD PTR [rax+0x1],esi
  40719d:	add    eax,0x32050002
  4071a2:	add    DWORD PTR [rax],esi
  4071a4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571ac
  4071aa:	add    DWORD PTR [rax],esi
  4071ac:	add    DWORD PTR [rax],eax
  4071ae:	add    BYTE PTR [rax],al
  4071b0:	add    DWORD PTR [rax],eax
  4071b2:	add    BYTE PTR [rax],al
  4071b4:	add    DWORD PTR [rax],eax
  4071b6:	add    BYTE PTR [rax],al
  4071b8:	add    DWORD PTR [rdi],eax
  4071ba:	add    al,0x0
  4071bc:	(bad)  
  4071bd:	xor    al,BYTE PTR [rbx]
  4071bf:	xor    BYTE PTR [rdx],al
  4071c1:	(bad)  
  4071c2:	add    DWORD PTR [rax+0x1],esi
  4071c5:	(bad)  
  4071c6:	add    eax,DWORD PTR [rax]
  4071c8:	(bad)  
  4071c9:	rex.X add sil,BYTE PTR [rax]
  4071cc:	add    DWORD PTR [rax+0x0],esp
  4071cf:	add    BYTE PTR [rcx],al
  4071d1:	add    eax,0x32050002
  4071d6:	add    DWORD PTR [rax],esi
  4071d8:	add    DWORD PTR [rdi],eax
  4071da:	add    al,0x0
  4071dc:	(bad)  
  4071dd:	xor    al,BYTE PTR [rbx]
  4071df:	xor    BYTE PTR [rdx],al
  4071e1:	(bad)  
  4071e2:	add    DWORD PTR [rax+0x1],esi
  4071e5:	(bad)  
  4071e6:	add    eax,DWORD PTR [rax]
  4071e8:	(bad)  
  4071e9:	rex.X add sil,BYTE PTR [rax]
  4071ec:	add    DWORD PTR [rax+0x0],esp
  4071ef:	add    BYTE PTR [rcx],al
  4071f1:	(bad)  
  4071f2:	add    eax,DWORD PTR [rax]
  4071f4:	(bad)  
  4071f5:	rex.X add sil,BYTE PTR [rax]
  4071f8:	add    DWORD PTR [rax+0x0],esp
  4071fb:	add    BYTE PTR [rcx],al
  4071fd:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a03
  407203:	xor    BYTE PTR [rbx],al
  407205:	(bad)  
  407206:	add    dh,BYTE PTR [rax+0x1]
  407209:	push   rax
  40720a:	add    BYTE PTR [rax],al
  40720c:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14d7219
  407212:	rex.WX add BYTE PTR [rsi],al
  407215:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0767b
  40721b:	push   rax
  40721c:	add    al,al
  40721e:	add    BYTE PTR [rax],al
  407220:	add    DWORD PTR [rax],ecx
  407222:	add    eax,0x4620800
  407227:	xor    BYTE PTR [rbx],al
  407229:	(bad)  
  40722a:	add    dh,BYTE PTR [rax+0x1]
  40722d:	push   rax
  40722e:	add    BYTE PTR [rax],al
  407230:	add    DWORD PTR [rax],eax
  407232:	add    BYTE PTR [rax],al
  407234:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	fcomp  DWORD PTR [rax-0x6d900000]
  409012:	add    BYTE PTR [rax],al
  409014:	sub    BYTE PTR [rcx+0x0],dl
  40901a:	add    BYTE PTR [rax],al
  40901c:	add    BYTE PTR [rax],al
  40901e:	add    BYTE PTR [rax],al
  409020:	sbb    BYTE PTR [rcx-0x6cb80000],0x0
  409027:	add    BYTE PTR [rax-0x6e],ah
	...
  409032:	add    BYTE PTR [rax],al
  409034:	nop
  409035:	cdq    
  409036:	add    BYTE PTR [rax],al
  409038:	adc    BYTE PTR [rax+rax*1+0x0],0x0
	...
  409050:	nop
  409051:	xchg   esp,eax
  409052:	add    BYTE PTR [rax],al
  409054:	add    BYTE PTR [rax],al
  409056:	add    BYTE PTR [rax],al
  409058:	sahf   
  409059:	xchg   esp,eax
  40905a:	add    BYTE PTR [rax],al
  40905c:	add    BYTE PTR [rax],al
  40905e:	add    BYTE PTR [rax],al
  409060:	mov    al,0x94
  409062:	add    BYTE PTR [rax],al
  409064:	add    BYTE PTR [rax],al
  409066:	add    BYTE PTR [rax],al
  409068:	enter  0x94,0x0
  40906c:	add    BYTE PTR [rax],al
  40906e:	add    BYTE PTR [rax],al
  409070:	loopne 0x409006
  409072:	add    BYTE PTR [rax],al
  409074:	add    BYTE PTR [rax],al
  409076:	add    BYTE PTR [rax],al
  409078:	hlt    
  409079:	xchg   esp,eax
  40907a:	add    BYTE PTR [rax],al
  40907c:	add    BYTE PTR [rax],al
  40907e:	add    BYTE PTR [rax],al
  409080:	or     dl,BYTE PTR [rbp+0x0]
  409086:	add    BYTE PTR [rax],al
  409088:	and    BYTE PTR [rbp+0x0],dl
  40908e:	add    BYTE PTR [rax],al
  409090:	xor    BYTE PTR [rbp+0x0],dl
  409096:	add    BYTE PTR [rax],al
  409098:	rex.RX xchg ebp,eax
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	pop    rax
  4090a1:	xchg   ebp,eax
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	jb     0x40903f
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    BYTE PTR [rax],al
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	(bad)  
  4090b1:	xchg   ebp,eax
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	sahf   
  4090b9:	xchg   ebp,eax
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	mov    dh,0x95
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	add    BYTE PTR [rax],al
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	rcl    BYTE PTR [rbp+0x0],1
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	out    0x95,al
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    BYTE PTR [rax],al
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	cli    
  4090d9:	xchg   ebp,eax
  4090da:	add    BYTE PTR [rax],al
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	adc    al,0x96
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	sub    BYTE PTR [rsi+0x0],dl
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	rex.RX xchg esi,eax
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	rex.WRX xchg rsi,rax
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	add    BYTE PTR [rax],al
  4090fe:	add    BYTE PTR [rax],al
  409100:	(bad)  
  409101:	xchg   esi,eax
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	jo     0x4090a0
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	mov    WORD PTR [rsi+0x0],ss
  409116:	add    BYTE PTR [rax],al
  409118:	sahf   
  409119:	xchg   esi,eax
	...
  409126:	add    BYTE PTR [rax],al
  409128:	scas   al,BYTE PTR es:[rdi]
  409129:	xchg   esi,eax
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	(bad)  
  409131:	xchg   esi,eax
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rax],al
  409136:	add    BYTE PTR [rax],al
  409138:	(bad)  
  409139:	xchg   esi,eax
  40913a:	add    BYTE PTR [rax],al
  40913c:	add    BYTE PTR [rax],al
  40913e:	add    BYTE PTR [rax],al
  409140:	in     al,0x96
  409142:	add    BYTE PTR [rax],al
  409144:	add    BYTE PTR [rax],al
  409146:	add    BYTE PTR [rax],al
  409148:	lock xchg esi,eax
  40914a:	add    BYTE PTR [rax],al
  40914c:	add    BYTE PTR [rax],al
  40914e:	add    BYTE PTR [rax],al
  409150:	(bad)  
  409151:	xchg   esi,eax
  409152:	add    BYTE PTR [rax],al
  409154:	add    BYTE PTR [rax],al
  409156:	add    BYTE PTR [rax],al
  409158:	(bad)  
  409159:	xchg   edi,eax
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    BYTE PTR [rax],al
  40915e:	add    BYTE PTR [rax],al
  409160:	and    BYTE PTR [rdi+0x0],dl
  409166:	add    BYTE PTR [rax],al
  409168:	xor    al,0x97
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    BYTE PTR [rax],al
  40916e:	add    BYTE PTR [rax],al
  409170:	ds xchg edi,eax
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	rex.WR xchg rdi,rax
  40917a:	add    BYTE PTR [rax],al
  40917c:	add    BYTE PTR [rax],al
  40917e:	add    BYTE PTR [rax],al
  409180:	push   rsi
  409181:	xchg   edi,eax
  409182:	add    BYTE PTR [rax],al
  409184:	add    BYTE PTR [rax],al
  409186:	add    BYTE PTR [rax],al
  409188:	pop    rsi
  409189:	xchg   edi,eax
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	push   0x97
  409195:	add    BYTE PTR [rax],al
  409197:	add    BYTE PTR [rdi+rdx*4+0x0],dh
  40919b:	add    BYTE PTR [rax],al
  40919d:	add    BYTE PTR [rax],al
  40919f:	add    BYTE PTR [rdi+rdx*4+0x0],bh
  4091a3:	add    BYTE PTR [rax],al
  4091a5:	add    BYTE PTR [rax],al
  4091a7:	add    BYTE PTR [rsi+0x97],al
  4091ad:	add    BYTE PTR [rax],al
  4091af:	add    BYTE PTR [rdi+rdx*4+0x0],dl
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	sahf   
  4091b9:	xchg   edi,eax
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    BYTE PTR [rax],al
  4091be:	add    BYTE PTR [rax],al
  4091c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091c1:	xchg   edi,eax
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	mov    al,0x97
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	add    BYTE PTR [rax],al
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	mov    eax,0x97
  4091d5:	add    BYTE PTR [rax],al
  4091d7:	add    dl,al
  4091d9:	xchg   edi,eax
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rax],al
  4091de:	add    BYTE PTR [rax],al
  4091e0:	retf   0x97
  4091e3:	add    BYTE PTR [rax],al
  4091e5:	add    BYTE PTR [rax],al
  4091e7:	add    dh,dl
  4091e9:	xchg   edi,eax
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	add    BYTE PTR [rax],al
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	loopne 0x409189
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	(bad)  
  4091f9:	xchg   edi,eax
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	add    BYTE PTR [rax],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	hlt    
  409201:	xchg   edi,eax
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	(bad)  
  409209:	xchg   edi,eax
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	or     BYTE PTR [rax+0x0],bl
  409216:	add    BYTE PTR [rax],al
  409218:	adc    BYTE PTR [rax+0x0],bl
  40921e:	add    BYTE PTR [rax],al
  409220:	sbb    bl,BYTE PTR [rax+0x0]
  409226:	add    BYTE PTR [rax],al
  409228:	and    al,0x98
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    BYTE PTR [rax],al
  40922e:	add    BYTE PTR [rax],al
  409230:	cs cwde 
  409232:	add    BYTE PTR [rax],al
  409234:	add    BYTE PTR [rax],al
  409236:	add    BYTE PTR [rax],al
  409238:	cmp    bl,BYTE PTR [rax+0x0]
  40923e:	add    BYTE PTR [rax],al
  409240:	rex.R cwde 
  409242:	add    BYTE PTR [rax],al
  409244:	add    BYTE PTR [rax],al
  409246:	add    BYTE PTR [rax],al
  409248:	rex.WRX cdqe 
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	pop    rax
  409251:	cwde   
	...
  40925e:	add    BYTE PTR [rax],al
  409260:	(bad)  
  409261:	cwde   
	...
  40926e:	add    BYTE PTR [rax],al
  409270:	nop
  409271:	xchg   esp,eax
  409272:	add    BYTE PTR [rax],al
  409274:	add    BYTE PTR [rax],al
  409276:	add    BYTE PTR [rax],al
  409278:	sahf   
  409279:	xchg   esp,eax
  40927a:	add    BYTE PTR [rax],al
  40927c:	add    BYTE PTR [rax],al
  40927e:	add    BYTE PTR [rax],al
  409280:	mov    al,0x94
  409282:	add    BYTE PTR [rax],al
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	enter  0x94,0x0
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	loopne 0x409226
  409292:	add    BYTE PTR [rax],al
  409294:	add    BYTE PTR [rax],al
  409296:	add    BYTE PTR [rax],al
  409298:	hlt    
  409299:	xchg   esp,eax
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	or     dl,BYTE PTR [rbp+0x0]
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	and    BYTE PTR [rbp+0x0],dl
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	xor    BYTE PTR [rbp+0x0],dl
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	rex.RX xchg ebp,eax
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	add    BYTE PTR [rax],al
  4092be:	add    BYTE PTR [rax],al
  4092c0:	pop    rax
  4092c1:	xchg   ebp,eax
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	jb     0x40925f
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    BYTE PTR [rax],al
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	(bad)  
  4092d1:	xchg   ebp,eax
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	sahf   
  4092d9:	xchg   ebp,eax
  4092da:	add    BYTE PTR [rax],al
  4092dc:	add    BYTE PTR [rax],al
  4092de:	add    BYTE PTR [rax],al
  4092e0:	mov    dh,0x95
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	add    BYTE PTR [rax],al
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	rcl    BYTE PTR [rbp+0x0],1
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	out    0x95,al
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	add    BYTE PTR [rax],al
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	cli    
  4092f9:	xchg   ebp,eax
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	add    BYTE PTR [rax],al
  4092fe:	add    BYTE PTR [rax],al
  409300:	adc    al,0x96
  409302:	add    BYTE PTR [rax],al
  409304:	add    BYTE PTR [rax],al
  409306:	add    BYTE PTR [rax],al
  409308:	sub    BYTE PTR [rsi+0x0],dl
  40930e:	add    BYTE PTR [rax],al
  409310:	rex.RX xchg esi,eax
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	rex.WRX xchg rsi,rax
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	(bad)  
  409321:	xchg   esi,eax
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	jo     0x4092c0
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    BYTE PTR [rax],al
  40932e:	add    BYTE PTR [rax],al
  409330:	mov    WORD PTR [rsi+0x0],ss
  409336:	add    BYTE PTR [rax],al
  409338:	sahf   
  409339:	xchg   esi,eax
	...
  409346:	add    BYTE PTR [rax],al
  409348:	scas   al,BYTE PTR es:[rdi]
  409349:	xchg   esi,eax
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	(bad)  
  409351:	xchg   esi,eax
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	(bad)  
  409359:	xchg   esi,eax
  40935a:	add    BYTE PTR [rax],al
  40935c:	add    BYTE PTR [rax],al
  40935e:	add    BYTE PTR [rax],al
  409360:	in     al,0x96
  409362:	add    BYTE PTR [rax],al
  409364:	add    BYTE PTR [rax],al
  409366:	add    BYTE PTR [rax],al
  409368:	lock xchg esi,eax
  40936a:	add    BYTE PTR [rax],al
  40936c:	add    BYTE PTR [rax],al
  40936e:	add    BYTE PTR [rax],al
  409370:	(bad)  
  409371:	xchg   esi,eax
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	(bad)  
  409379:	xchg   edi,eax
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	and    BYTE PTR [rdi+0x0],dl
  409386:	add    BYTE PTR [rax],al
  409388:	xor    al,0x97
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	ds xchg edi,eax
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	rex.WR xchg rdi,rax
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
  40939e:	add    BYTE PTR [rax],al
  4093a0:	push   rsi
  4093a1:	xchg   edi,eax
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	add    BYTE PTR [rax],al
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	pop    rsi
  4093a9:	xchg   edi,eax
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	add    BYTE PTR [rax],al
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	push   0x97
  4093b5:	add    BYTE PTR [rax],al
  4093b7:	add    BYTE PTR [rdi+rdx*4+0x0],dh
  4093bb:	add    BYTE PTR [rax],al
  4093bd:	add    BYTE PTR [rax],al
  4093bf:	add    BYTE PTR [rdi+rdx*4+0x0],bh
  4093c3:	add    BYTE PTR [rax],al
  4093c5:	add    BYTE PTR [rax],al
  4093c7:	add    BYTE PTR [rsi+0x97],al
  4093cd:	add    BYTE PTR [rax],al
  4093cf:	add    BYTE PTR [rdi+rdx*4+0x0],dl
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	sahf   
  4093d9:	xchg   edi,eax
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
  4093de:	add    BYTE PTR [rax],al
  4093e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4093e1:	xchg   edi,eax
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	add    BYTE PTR [rax],al
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	mov    al,0x97
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	mov    eax,0x97
  4093f5:	add    BYTE PTR [rax],al
  4093f7:	add    dl,al
  4093f9:	xchg   edi,eax
  4093fa:	add    BYTE PTR [rax],al
  4093fc:	add    BYTE PTR [rax],al
  4093fe:	add    BYTE PTR [rax],al
  409400:	retf   0x97
  409403:	add    BYTE PTR [rax],al
  409405:	add    BYTE PTR [rax],al
  409407:	add    dh,dl
  409409:	xchg   edi,eax
  40940a:	add    BYTE PTR [rax],al
  40940c:	add    BYTE PTR [rax],al
  40940e:	add    BYTE PTR [rax],al
  409410:	loopne 0x4093a9
  409412:	add    BYTE PTR [rax],al
  409414:	add    BYTE PTR [rax],al
  409416:	add    BYTE PTR [rax],al
  409418:	(bad)  
  409419:	xchg   edi,eax
  40941a:	add    BYTE PTR [rax],al
  40941c:	add    BYTE PTR [rax],al
  40941e:	add    BYTE PTR [rax],al
  409420:	hlt    
  409421:	xchg   edi,eax
  409422:	add    BYTE PTR [rax],al
  409424:	add    BYTE PTR [rax],al
  409426:	add    BYTE PTR [rax],al
  409428:	(bad)  
  409429:	xchg   edi,eax
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	or     BYTE PTR [rax+0x0],bl
  409436:	add    BYTE PTR [rax],al
  409438:	adc    BYTE PTR [rax+0x0],bl
  40943e:	add    BYTE PTR [rax],al
  409440:	sbb    bl,BYTE PTR [rax+0x0]
  409446:	add    BYTE PTR [rax],al
  409448:	and    al,0x98
  40944a:	add    BYTE PTR [rax],al
  40944c:	add    BYTE PTR [rax],al
  40944e:	add    BYTE PTR [rax],al
  409450:	cs cwde 
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	cmp    bl,BYTE PTR [rax+0x0]
  40945e:	add    BYTE PTR [rax],al
  409460:	rex.R cwde 
  409462:	add    BYTE PTR [rax],al
  409464:	add    BYTE PTR [rax],al
  409466:	add    BYTE PTR [rax],al
  409468:	rex.WRX cdqe 
  40946a:	add    BYTE PTR [rax],al
  40946c:	add    BYTE PTR [rax],al
  40946e:	add    BYTE PTR [rax],al
  409470:	pop    rax
  409471:	cwde   
	...
  40947e:	add    BYTE PTR [rax],al
  409480:	(bad)  
  409481:	cwde   
	...
  40948e:	add    BYTE PTR [rax],al
  409490:	push   rbp
  409491:	add    BYTE PTR [rbx+0x6c],al
  409494:	outs   dx,DWORD PTR ds:[rsi]
  409495:	jae    0x4094fc
  409497:	rex.W (bad) 
  409499:	outs   dx,BYTE PTR ds:[rsi]
  40949a:	fs ins BYTE PTR es:[rdi],dx
  40949c:	add    BYTE PTR gs:[rsi+0x65724300],ch
  4094a3:	(bad)  
  4094a4:	je     0x40950b
  4094a6:	push   rax
  4094a7:	jb     0x409518
  4094a9:	movsxd esp,DWORD PTR [rbp+0x73]
  4094ac:	jae    0x409505
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	fadd   DWORD PTR [rax]
  4094b2:	rex.R
  4094b3:	gs ins BYTE PTR es:[rdi],dx
  4094b5:	gs je  0x40951d
  4094b8:	rex.XB jb 0x409524
  4094bb:	je     0x409526
  4094bd:	movsxd esp,DWORD PTR [rcx+0x6c]
  4094c0:	push   rbx
  4094c1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4094c6:	outs   dx,BYTE PTR ds:[rsi]
  4094c7:	add    al,bh
  4094c9:	add    BYTE PTR [rbp+0x6e],al
  4094cc:	je     0x409533
  4094ce:	jb     0x409513
  4094d0:	jb     0x40953b
  4094d2:	je     0x40953d
  4094d4:	movsxd esp,DWORD PTR [rcx+0x6c]
  4094d7:	push   rbx
  4094d8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4094dd:	outs   dx,BYTE PTR ds:[rsi]
  4094de:	add    BYTE PTR [rax],al
  4094e0:	int    0x1
  4094e2:	rex.RXB
  4094e3:	gs je  0x409529
  4094e6:	jne    0x40955a
  4094e8:	jb     0x40954f
  4094ea:	outs   dx,BYTE PTR ds:[rsi]
  4094eb:	je     0x40953d
  4094ed:	jb     0x40955e
  4094ef:	movsxd esp,DWORD PTR [rbp+0x73]
  4094f2:	jae    0x4094f4
  4094f4:	(bad)  
  4094f5:	add    DWORD PTR [rdi+0x65],eax
  4094f8:	je     0x40953d
  4094fa:	jne    0x40956e
  4094fc:	jb     0x409563
  4094fe:	outs   dx,BYTE PTR ds:[rsi]
  4094ff:	je     0x409551
  409501:	jb     0x409572
  409503:	movsxd esp,DWORD PTR [rbp+0x73]
  409506:	jae    0x409551
  409508:	fs add dl,dl
  40950b:	add    DWORD PTR [rdi+0x65],eax
  40950e:	je     0x409553
  409510:	jne    0x409584
  409512:	jb     0x409579
  409514:	outs   dx,BYTE PTR ds:[rsi]
  409515:	je     0x40956b
  409517:	push   0x64616572
  40951c:	rex.WB
  40951d:	add    BYTE PTR fs:[rax],al
  409520:	adc    BYTE PTR [rdx],al
  409522:	rex.RXB
  409523:	gs je  0x409572
  409526:	(bad)  
  409527:	jae    0x40959d
  409529:	rex.RB jb 0x40959e
  40952c:	outs   dx,DWORD PTR ds:[rsi]
  40952d:	jb     0x40952f
  40952f:	add    BYTE PTR [rbx],ah
  409531:	add    al,BYTE PTR [rdi+0x65]
  409534:	je     0x409583
  409536:	outs   dx,DWORD PTR ds:[rsi]
  409537:	fs jne 0x4095a6
  40953a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  409544:	add    BYTE PTR [rax],al
  409546:	jae    0x40954a
  409548:	rex.RXB
  409549:	gs je  0x40959f
  40954c:	je     0x4095af
  40954e:	jb     0x4095c4
  409550:	jne    0x4095c2
  409552:	rex.WB outs dx,BYTE PTR ds:[rsi]
  409554:	outs   dx,WORD PTR ds:[rsi]
  409556:	add    BYTE PTR [r10+0x74654702],cl
  40955d:	push   rbx
  40955e:	jns    0x4095d3
  409560:	je     0x4095c7
  409562:	ins    DWORD PTR es:[rdi],dx
  409563:	push   rsp
  409564:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40956b:	ins    BYTE PTR es:[rdi],dx
  40956c:	gs push rsp
  40956e:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  409575:	gs je  0x4095cc
  409578:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  40957f:	je     0x409581
  409581:	add    cl,bh
  409583:	add    cl,BYTE PTR [rcx+0x6e]
  409586:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40958e:	rex.XB jb 0x4095fa
  409591:	je     0x4095fc
  409593:	movsxd esp,DWORD PTR [rcx+0x6c]
  409596:	push   rbx
  409597:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40959c:	outs   dx,BYTE PTR ds:[rsi]
  40959d:	add    BYTE PTR [rbx+0x3],cl
  4095a0:	rex.WR
  4095a1:	gs (bad) 
  4095a3:	jbe    0x40960a
  4095a5:	rex.XB jb 0x409611
  4095a8:	je     0x409613
  4095aa:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095ad:	push   rbx
  4095ae:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095b3:	outs   dx,BYTE PTR ds:[rsi]
  4095b4:	add    BYTE PTR [rax],al
  4095b6:	mov    ebx,0x65755103
  4095bb:	jb     0x409636
  4095bd:	push   rax
  4095be:	gs jb  0x409627
  4095c1:	outs   dx,DWORD PTR ds:[rsi]
  4095c2:	jb     0x409631
  4095c4:	(bad)  
  4095c5:	outs   dx,BYTE PTR ds:[rsi]
  4095c6:	movsxd esp,DWORD PTR [rbp+0x43]
  4095c9:	outs   dx,DWORD PTR ds:[rsi]
  4095ca:	jne    0x40963a
  4095cc:	je     0x409633
  4095ce:	jb     0x4095d0
  4095d0:	add    DWORD PTR [rdx+rdx*2],eax
  4095d3:	je     0x409641
  4095d5:	rex.B
  4095d6:	fs fs rex.RX jne 0x409649
  4095db:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4095df:	outs   dx,BYTE PTR ds:[rsi]
  4095e0:	push   rsp
  4095e1:	(bad)  
  4095e2:	(bad)  
  4095e3:	ins    BYTE PTR es:[rdi],dx
  4095e4:	add    BYTE PTR gs:[rdx],al
  4095e7:	add    al,0x52
  4095e9:	je     0x409657
  4095eb:	rex.XB (bad) 
  4095ed:	jo     0x409663
  4095ef:	jne    0x409663
  4095f1:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4095f4:	outs   dx,BYTE PTR ds:[rsi]
  4095f5:	je     0x40965c
  4095f7:	js     0x40966d
  4095f9:	add    BYTE PTR [rcx],cl
  4095fb:	add    al,0x52
  4095fd:	je     0x40966b
  4095ff:	rex.WR outs dx,DWORD PTR ds:[rsi]
  409601:	outs   dx,DWORD PTR ds:[rsi]
  409602:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409606:	jne    0x409676
  409608:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40960c:	outs   dx,BYTE PTR ds:[rsi]
  40960d:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40960f:	je     0x409683
  409611:	jns    0x409613
  409613:	add    BYTE PTR [rax],dl
  409615:	add    al,0x52
  409617:	je     0x409685
  409619:	push   rsi
  40961a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  409621:	outs   dx,BYTE PTR ds:[rsi]
  409622:	ja     0x40968d
  409624:	outs   dx,BYTE PTR ds:[rsi]
  409625:	add    BYTE PTR fs:[rax],al
  409628:	lahf   
  409629:	add    al,0x53
  40962b:	gs je  0x409683
  40962e:	outs   dx,BYTE PTR ds:[rsi]
  40962f:	push   0x6c646e61
  409634:	gs fs rex.RB js 0x40969c
  409639:	gs jo  0x4096b0
  40963c:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409643:	gs jb  0x409646
  409646:	lods   al,BYTE PTR ds:[rsi]
  409647:	add    al,0x53
  409649:	ins    BYTE PTR es:[rdi],dx
  40964a:	gs gs jo 0x40964e
  40964e:	mov    edx,0x72655404
  409653:	ins    DWORD PTR es:[rdi],dx
  409654:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40965b:	outs   dx,DWORD PTR ds:[rsi]
  40965c:	movsxd esp,DWORD PTR [rbp+0x73]
  40965f:	jae    0x409661
  409661:	add    cl,al
  409663:	add    al,0x54
  409665:	ins    BYTE PTR es:[rdi],dx
  409666:	jae    0x4096af
  409668:	gs je  0x4096c1
  40966b:	(bad)  
  40966c:	ins    BYTE PTR es:[rdi],dx
  40966d:	jne    0x4096d4
  40966f:	add    dh,cl
  409671:	add    al,0x55
  409673:	outs   dx,BYTE PTR ds:[rsi]
  409674:	push   0x6c646e61
  409679:	gs fs rex.RB js 0x4096e1
  40967e:	gs jo  0x4096f5
  409681:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409688:	gs jb  0x40968b
  40968b:	add    ah,ch
  40968d:	add    al,0x56
  40968f:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409696:	jb     0x409707
  409698:	je     0x4096ff
  40969a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40969e:	out    dx,al
  40969f:	add    al,0x56
  4096a1:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4096a8:	jne    0x40970f
  4096aa:	jb     0x409725
  4096ac:	add    BYTE PTR [rax],al
  4096ae:	(bad)  
  4096af:	add    BYTE PTR [rdi+0x5f],bl
  4096b2:	rex.XB pop r15
  4096b4:	jae    0x409726
  4096b6:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4096ba:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  4096c1:	ins    BYTE PTR es:[rdi],dx
  4096c2:	gs jb  0x4096c5
  4096c5:	add    BYTE PTR [rsi+0x0],cl
  4096c8:	pop    rdi
  4096c9:	pop    rdi
  4096ca:	fs ins BYTE PTR es:[rdi],dx
  4096cc:	ins    BYTE PTR es:[rdi],dx
  4096cd:	outs   dx,DWORD PTR ds:[rsi]
  4096ce:	outs   dx,BYTE PTR ds:[rsi]
  4096cf:	gs js  0x40973b
  4096d2:	je     0x4096d4
  4096d4:	push   rcx
  4096d5:	add    BYTE PTR [rdi+0x5f],bl
  4096d8:	addr32 gs je 0x409749
  4096dc:	(bad)  
  4096dd:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4096e4:	push   rdx
  4096e5:	add    BYTE PTR [rdi+0x5f],bl
  4096e8:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4096ef:	add    BYTE PTR [rbx+0x0],dl
  4096f2:	pop    rdi
  4096f3:	pop    rdi
  4096f4:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4096fb:	movsxd eax,DWORD PTR [rax]
  4096fd:	add    BYTE PTR [rdx+0x0],bl
  409700:	pop    rdi
  409701:	pop    rdi
  409702:	ins    BYTE PTR es:[rdi],dx
  409703:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409706:	jbe    0x409767
  409708:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40970f:	add    BYTE PTR [rdi+0x5f],bl
  409712:	jae    0x409779
  409714:	je     0x409775
  409716:	(bad)  
  409717:	jo     0x409789
  409719:	pop    rdi
  40971a:	je     0x409795
  40971c:	jo     0x409783
  40971e:	add    BYTE PTR [rax],al
  409720:	(bad)  
  409721:	add    BYTE PTR [rdi+0x5f],bl
  409724:	jae    0x40978b
  409726:	je     0x40979d
  409728:	jae    0x40978f
  40972a:	jb     0x409799
  40972c:	(bad)  
  40972d:	je     0x409797
  40972f:	gs jb  0x4097a4
  409732:	add    BYTE PTR [rax],al
  409734:	jno    0x409736
  409736:	pop    rdi
  409737:	(bad)  
  409738:	movsxd ebp,DWORD PTR [rbp+0x64]
  40973b:	ins    BYTE PTR es:[rdi],dx
  40973c:	outs   dx,BYTE PTR ds:[rsi]
  40973d:	add    BYTE PTR [rax+0x0],bh
  409740:	pop    rdi
  409741:	(bad)  
  409742:	ins    DWORD PTR es:[rdi],dx
  409743:	jae    0x4097ac
  409745:	pop    rdi
  409746:	gs js  0x4097b2
  409749:	je     0x40974b
  40974b:	add    BYTE PTR [rdx+0x65635f00],cl
  409751:	js     0x4097bc
  409753:	je     0x409755
  409755:	add    bl,al
  409757:	add    BYTE PTR [rdi+0x65],bl
  40975a:	js     0x4097c5
  40975c:	je     0x40975e
  40975e:	fiadd  DWORD PTR [rax]
  409760:	pop    rdi
  409761:	ins    WORD PTR es:[rdi],dx
  409763:	outs   dx,DWORD PTR ds:[rsi]
  409764:	fs add BYTE PTR gs:[rax],al
  409768:	sbb    al,BYTE PTR [rcx]
  40976a:	pop    rdi
  40976b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  409772:	ins    DWORD PTR es:[rdi],dx
  409773:	add    BYTE PTR [rax+0x6f6c5f01],al
  409779:	movsxd ebp,DWORD PTR [rbx+0x0]
  40977c:	and    eax,0x6e6f5f02
  409781:	gs js  0x4097ed
  409784:	je     0x409786
  409786:	movsxd eax,DWORD PTR [rdx]
  409788:	pop    rdi
  409789:	jae    0x4097f9
  40978b:	ja     0x4097fd
  40978d:	jb     0x4097f8
  40978f:	outs   dx,BYTE PTR ds:[rsi]
  409790:	je     0x4097f8
  409792:	add    BYTE PTR [rax],al
  409794:	(bad)
  409798:	outs   dx,BYTE PTR ds:[rsi]
  409799:	ins    BYTE PTR es:[rdi],dx
  40979a:	outs   dx,DWORD PTR ds:[rsi]
  40979b:	movsxd ebp,DWORD PTR [rbx+0x0]
  40979e:	jg     0x4097a3
  4097a0:	(bad)  
  4097a1:	(bad)  
  4097a2:	outs   dx,DWORD PTR ds:[rsi]
  4097a3:	jb     0x409819
  4097a5:	add    BYTE PTR [rax+0x6c616303],dl
  4097ab:	ins    BYTE PTR es:[rdi],dx
  4097ac:	outs   dx,DWORD PTR ds:[rsi]
  4097ad:	movsxd eax,DWORD PTR [rax]
  4097af:	add    BYTE PTR [rbp+0x69786503],bl
  4097b5:	je     0x4097b7
  4097b7:	add    BYTE PTR [rax+0x72706603],dh
  4097bd:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  4097c4:	data16 jb 0x40982c
  4097c7:	add    BYTE PTR gs:[rax],al
  4097ca:	rol    BYTE PTR [rbx],0x66
  4097cd:	ja     0x40983f
  4097cf:	jb     0x40983a
  4097d1:	outs   dx,BYTE PTR ds:[rsi]
  4097d2:	je     0x40983a
  4097d4:	add    BYTE PTR [rax],al
  4097d6:	ret    0x6603
  4097d9:	ja     0x40984d
  4097db:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  4097e3:	gs je  0x40984b
  4097e6:	outs   dx,BYTE PTR ds:[rsi]
  4097e7:	jbe    0x4097e9
  4097e9:	add    al,dh
  4097eb:	add    ebp,DWORD PTR [rbp+0x61]
  4097ee:	ins    BYTE PTR es:[rdi],dx
  4097ef:	ins    BYTE PTR es:[rdi],dx
  4097f0:	outs   dx,DWORD PTR ds:[rsi]
  4097f1:	movsxd eax,DWORD PTR [rax]
  4097f3:	add    al,bh
  4097f5:	add    ebp,DWORD PTR [rbp+0x65]
  4097f8:	ins    DWORD PTR es:[rdi],dx
  4097f9:	movsxd esi,DWORD PTR [rax+0x79]
  4097fc:	add    BYTE PTR [rax],al
  4097fe:	cli    
  4097ff:	add    ebp,DWORD PTR [rbp+0x65]
  409802:	ins    DWORD PTR es:[rdi],dx
  409803:	jae    0x40986a
  409805:	je     0x409807
  409807:	add    BYTE PTR [rdx],cl
  409809:	add    al,0x72
  40980b:	(bad)  
  40980c:	imul   esi,DWORD PTR [rbx+0x65],0x73041600
  409813:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40981a:	sub    eax,DWORD PTR [rbx+rsi*2]
  40981d:	je     0x409891
  40981f:	ins    BYTE PTR es:[rdi],dx
  409820:	outs   dx,BYTE PTR gs:[rsi]
  409822:	add    BYTE PTR [rax],al
  409824:	cs add al,0x73
  409827:	je     0x40989b
  409829:	outs   dx,BYTE PTR ds:[rsi]
  40982a:	movsxd ebp,DWORD PTR [rbp+0x70]
  40982d:	add    BYTE PTR [rsi+0x4],cl
  409830:	jbe    0x409898
  409832:	jo     0x4098a6
  409834:	imul   ebp,DWORD PTR [rsi+0x74],0x58000066
  40983b:	add    al,0x77
  40983d:	movsxd esi,DWORD PTR [rbx+0x63]
  409840:	(bad)  
  409841:	je     0x409843
  409843:	add    BYTE PTR [rbp+0x4],bl
  409846:	ja     0x4098ab
  409848:	jae    0x4098ad
  40984a:	jo     0x4098c5
  40984c:	add    BYTE PTR [rax],al
  40984e:	(bad)  
  40984f:	add    al,0x77
  409851:	movsxd esi,DWORD PTR [rbx+0x6c]
  409854:	outs   dx,BYTE PTR gs:[rsi]
  409856:	add    BYTE PTR [rax],al
  409858:	imul   eax,DWORD PTR [rdi+rsi*2],0x63727363
  40985f:	push   0x1f00072
  409864:	rex.WRB
  409865:	gs jae 0x4098db
  409868:	(bad)  
  409869:	rex.X outs dx,DWORD PTR gs:[esi]
  40986d:	js     0x4098c6
  40986f:	add    BYTE PTR [rax],al
  409871:	nop
  409872:	add    BYTE PTR [rax],al
  409874:	add    BYTE PTR [rax-0x70000000],dl
  40987a:	add    BYTE PTR [rax],al
  40987c:	add    BYTE PTR [rax-0x70000000],dl
  409882:	add    BYTE PTR [rax],al
  409884:	add    BYTE PTR [rax-0x70000000],dl
  40988a:	add    BYTE PTR [rax],al
  40988c:	add    BYTE PTR [rax-0x70000000],dl
  409892:	add    BYTE PTR [rax],al
  409894:	add    BYTE PTR [rax-0x70000000],dl
  40989a:	add    BYTE PTR [rax],al
  40989c:	add    BYTE PTR [rax-0x70000000],dl
  4098a2:	add    BYTE PTR [rax],al
  4098a4:	add    BYTE PTR [rax-0x70000000],dl
  4098aa:	add    BYTE PTR [rax],al
  4098ac:	add    BYTE PTR [rax-0x70000000],dl
  4098b2:	add    BYTE PTR [rax],al
  4098b4:	add    BYTE PTR [rax-0x70000000],dl
  4098ba:	add    BYTE PTR [rax],al
  4098bc:	add    BYTE PTR [rax-0x70000000],dl
  4098c2:	add    BYTE PTR [rax],al
  4098c4:	add    BYTE PTR [rax-0x70000000],dl
  4098ca:	add    BYTE PTR [rax],al
  4098cc:	add    BYTE PTR [rax-0x70000000],dl
  4098d2:	add    BYTE PTR [rax],al
  4098d4:	add    BYTE PTR [rax+0x454b0000],dl
  4098da:	push   rdx
  4098db:	rex.WRX
  4098dc:	rex.RB
  4098dd:	xor    r14,QWORD PTR [rdx]
  4098e0:	cs fs ins BYTE PTR es:[rdi],dx
  4098e3:	ins    BYTE PTR es:[rdi],dx
  4098e4:	add    BYTE PTR [rax],al
  4098e6:	add    BYTE PTR [rax],al
  4098e8:	adc    al,0x90
  4098ea:	add    BYTE PTR [rax],al
  4098ec:	adc    al,0x90
  4098ee:	add    BYTE PTR [rax],al
  4098f0:	adc    al,0x90
  4098f2:	add    BYTE PTR [rax],al
  4098f4:	adc    al,0x90
  4098f6:	add    BYTE PTR [rax],al
  4098f8:	adc    al,0x90
  4098fa:	add    BYTE PTR [rax],al
  4098fc:	adc    al,0x90
  4098fe:	add    BYTE PTR [rax],al
  409900:	adc    al,0x90
  409902:	add    BYTE PTR [rax],al
  409904:	adc    al,0x90
  409906:	add    BYTE PTR [rax],al
  409908:	adc    al,0x90
  40990a:	add    BYTE PTR [rax],al
  40990c:	adc    al,0x90
  40990e:	add    BYTE PTR [rax],al
  409910:	adc    al,0x90
  409912:	add    BYTE PTR [rax],al
  409914:	adc    al,0x90
  409916:	add    BYTE PTR [rax],al
  409918:	adc    al,0x90
  40991a:	add    BYTE PTR [rax],al
  40991c:	adc    al,0x90
  40991e:	add    BYTE PTR [rax],al
  409920:	adc    al,0x90
  409922:	add    BYTE PTR [rax],al
  409924:	adc    al,0x90
  409926:	add    BYTE PTR [rax],al
  409928:	adc    al,0x90
  40992a:	add    BYTE PTR [rax],al
  40992c:	adc    al,0x90
  40992e:	add    BYTE PTR [rax],al
  409930:	adc    al,0x90
  409932:	add    BYTE PTR [rax],al
  409934:	adc    al,0x90
  409936:	add    BYTE PTR [rax],al
  409938:	adc    al,0x90
  40993a:	add    BYTE PTR [rax],al
  40993c:	adc    al,0x90
  40993e:	add    BYTE PTR [rax],al
  409940:	adc    al,0x90
  409942:	add    BYTE PTR [rax],al
  409944:	adc    al,0x90
  409946:	add    BYTE PTR [rax],al
  409948:	adc    al,0x90
  40994a:	add    BYTE PTR [rax],al
  40994c:	adc    al,0x90
  40994e:	add    BYTE PTR [rax],al
  409950:	adc    al,0x90
  409952:	add    BYTE PTR [rax],al
  409954:	adc    al,0x90
  409956:	add    BYTE PTR [rax],al
  409958:	adc    al,0x90
  40995a:	add    BYTE PTR [rax],al
  40995c:	adc    al,0x90
  40995e:	add    BYTE PTR [rax],al
  409960:	adc    al,0x90
  409962:	add    BYTE PTR [rax],al
  409964:	adc    al,0x90
  409966:	add    BYTE PTR [rax],al
  409968:	adc    al,0x90
  40996a:	add    BYTE PTR [rax],al
  40996c:	adc    al,0x90
  40996e:	add    BYTE PTR [rax],al
  409970:	adc    al,0x90
  409972:	add    BYTE PTR [rax],al
  409974:	adc    al,0x90
  409976:	add    BYTE PTR [rax],al
  409978:	adc    al,0x90
  40997a:	add    BYTE PTR [rax],al
  40997c:	adc    al,0x90
  40997e:	add    BYTE PTR [rax],al
  409980:	ins    DWORD PTR es:[rdi],dx
  409981:	jae    0x4099f9
  409983:	movsxd esi,DWORD PTR [rdx+0x74]
  409986:	cs fs ins BYTE PTR es:[rdi],dx
  409989:	ins    BYTE PTR es:[rdi],dx
  40998a:	add    BYTE PTR [rax],al
  40998c:	sub    BYTE PTR [rax+0x53550000],dl
  409992:	rex.RB push r10
  409994:	xor    esi,DWORD PTR [rdx]
  409996:	cs fs ins BYTE PTR es:[rdi],dx
  409999:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x401a],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x401c],dh
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x401c],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
