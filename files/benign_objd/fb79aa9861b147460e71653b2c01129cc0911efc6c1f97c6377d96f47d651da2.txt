
fb79aa9861b147460e71653b2c01129cc0911efc6c1f97c6377d96f47d651da2.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	call   0x1400012d0
   140001009:	mov    BYTE PTR [rip+0x8768],0x1        # 0x140009778
   140001010:	add    rsp,0x28
   140001014:	ret    
   140001015:	int3   
   140001016:	int3   
   140001017:	int3   
   140001018:	sub    rsp,0x28
   14000101c:	lea    rcx,[rip+0x80ed]        # 0x140009110
   140001023:	call   0x140004a50
   140001028:	lea    rcx,[rip+0x4a9d]        # 0x140005acc
   14000102f:	add    rsp,0x28
   140001033:	jmp    0x140004ce8
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	ret    0x0
   140001043:	int3   
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	sub    rsp,0x28
   140001054:	mov    DWORD PTR [rsp+0x30],ecx
   140001058:	lea    rdx,[rip+0x68d1]        # 0x140007930
   14000105f:	lea    rcx,[rsp+0x30]
   140001064:	call   0x14000549c
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	rex.W jmp QWORD PTR [rip+0x4ff1]        # 0x140006068
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	mov    QWORD PTR [rsp+0x10],rbp
   140001085:	mov    QWORD PTR [rsp+0x18],rsi
   14000108a:	push   rdi
   14000108b:	sub    rsp,0x20
   14000108f:	mov    edi,r8d
   140001092:	mov    rsi,rdx
   140001095:	mov    rbp,rcx
   140001098:	call   QWORD PTR [rip+0x4fe2]        # 0x140006080
   14000109e:	test   rax,rax
   1400010a1:	jne    0x1400010b3
   1400010a3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400010a8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400010ad:	add    rsp,0x20
   1400010b1:	pop    rdi
   1400010b2:	ret    
   1400010b3:	mov    rcx,rax
   1400010b6:	mov    QWORD PTR [rsp+0x30],rbx
   1400010bb:	call   QWORD PTR [rip+0x4fcf]        # 0x140006090
   1400010c1:	mov    rbx,rax
   1400010c4:	test   rax,rax
   1400010c7:	je     0x1400010f9
   1400010c9:	mov    rdx,rsi
   1400010cc:	mov    rcx,rbp
   1400010cf:	call   QWORD PTR [rip+0x4f7b]        # 0x140006050
   1400010d5:	mov    ecx,eax
   1400010d7:	add    rcx,rbx
   1400010da:	and    edi,0xf
   1400010dd:	jbe    0x1400010f4
   1400010df:	nop
   1400010e0:	cmp    rbx,rcx
   1400010e3:	jae    0x1400010f9
   1400010e5:	movzx  eax,WORD PTR [rbx]
   1400010e8:	lea    rbx,[rbx+rax*2]
   1400010ec:	add    rbx,0x2
   1400010f0:	dec    edi
   1400010f2:	jne    0x1400010e0
   1400010f4:	cmp    rbx,rcx
   1400010f7:	jb     0x1400010fd
   1400010f9:	xor    eax,eax
   1400010fb:	jmp    0x140001109
   1400010fd:	xor    eax,eax
   1400010ff:	cmp    WORD PTR [rbx],ax
   140001102:	cmove  rbx,rax
   140001106:	mov    rax,rbx
   140001109:	mov    rbx,QWORD PTR [rsp+0x30]
   14000110e:	mov    rbp,QWORD PTR [rsp+0x38]
   140001113:	mov    rsi,QWORD PTR [rsp+0x40]
   140001118:	add    rsp,0x20
   14000111c:	pop    rdi
   14000111d:	ret    
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    QWORD PTR [rsp+0x8],rbx
   140001125:	mov    QWORD PTR [rsp+0x10],rbp
   14000112a:	mov    QWORD PTR [rsp+0x18],rsi
   14000112f:	push   rdi
   140001130:	sub    rsp,0x20
   140001134:	mov    ebp,ecx
   140001136:	lea    rcx,[rip+0x7fd3]        # 0x140009110
   14000113d:	xor    edx,edx
   14000113f:	call   0x140004b2c
   140001144:	mov    edi,0x1
   140001149:	mov    rbx,rax
   14000114c:	test   rax,rax
   14000114f:	je     0x1400011a7
   140001151:	mov    esi,ebp
   140001153:	shr    esi,0x4
   140001156:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001160:	xor    r9d,r9d
   140001163:	lea    ecx,[rsi+0x1]
   140001166:	movzx  r8d,cx
   14000116a:	lea    edx,[r9+0x6]
   14000116e:	mov    rcx,rbx
   140001171:	call   QWORD PTR [rip+0x4f71]        # 0x1400060e8
   140001177:	test   rax,rax
   14000117a:	je     0x14000118f
   14000117c:	mov    r8d,ebp
   14000117f:	mov    rdx,rax
   140001182:	mov    rcx,rbx
   140001185:	call   0x140001080
   14000118a:	test   rax,rax
   14000118d:	jne    0x1400011be
   14000118f:	lea    rcx,[rip+0x7f7a]        # 0x140009110
   140001196:	mov    edx,edi
   140001198:	call   0x140004b2c
   14000119d:	inc    edi
   14000119f:	mov    rbx,rax
   1400011a2:	test   rax,rax
   1400011a5:	jne    0x140001160
   1400011a7:	xor    eax,eax
   1400011a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011ae:	mov    rbp,QWORD PTR [rsp+0x38]
   1400011b3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400011b8:	add    rsp,0x20
   1400011bc:	pop    rdi
   1400011bd:	ret    
   1400011be:	mov    rax,rbx
   1400011c1:	jmp    0x1400011a9
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	rex push rbx
   1400011d2:	sub    rsp,0x20
   1400011d6:	mov    rbx,rcx
   1400011d9:	mov    rcx,QWORD PTR [rcx]
   1400011dc:	test   rcx,rcx
   1400011df:	je     0x1400011f5
   1400011e1:	call   QWORD PTR [rip+0x4e31]        # 0x140006018
   1400011e7:	xor    eax,eax
   1400011e9:	mov    QWORD PTR [rbx],rax
   1400011ec:	mov    DWORD PTR [rbx+0x8],eax
   1400011ef:	add    rsp,0x20
   1400011f3:	pop    rbx
   1400011f4:	ret    
   1400011f5:	xor    eax,eax
   1400011f7:	mov    DWORD PTR [rbx+0x8],eax
   1400011fa:	add    rsp,0x20
   1400011fe:	pop    rbx
   1400011ff:	ret    
   140001200:	mov    rcx,QWORD PTR [rcx+0x8]
   140001204:	mov    r8,rdx
   140001207:	xor    edx,edx
   140001209:	rex.W jmp QWORD PTR [rip+0x4e20]        # 0x140006030
   140001210:	test   rdx,rdx
   140001213:	je     0x140001225
   140001215:	mov    rcx,QWORD PTR [rcx+0x8]
   140001219:	mov    r8,rdx
   14000121c:	xor    edx,edx
   14000121e:	rex.W jmp QWORD PTR [rip+0x4e13]        # 0x140006038
   140001225:	ret    
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	sub    rsp,0x28
   140001234:	test   rdx,rdx
   140001237:	jne    0x140001246
   140001239:	mov    rax,QWORD PTR [rcx]
   14000123c:	mov    rdx,r8
   14000123f:	add    rsp,0x28
   140001243:	rex.W jmp QWORD PTR [rax]
   140001246:	test   r8,r8
   140001249:	jne    0x140001258
   14000124b:	mov    rax,QWORD PTR [rcx]
   14000124e:	call   QWORD PTR [rax+0x8]
   140001251:	xor    eax,eax
   140001253:	add    rsp,0x28
   140001257:	ret    
   140001258:	mov    rcx,QWORD PTR [rcx+0x8]
   14000125c:	mov    r9,r8
   14000125f:	mov    r8,rdx
   140001262:	xor    edx,edx
   140001264:	add    rsp,0x28
   140001268:	rex.W jmp QWORD PTR [rip+0x4e89]        # 0x1400060f8
   14000126f:	int3   
   140001270:	mov    rcx,QWORD PTR [rcx+0x8]
   140001274:	mov    r8,rdx
   140001277:	xor    edx,edx
   140001279:	rex.W jmp QWORD PTR [rip+0x4e08]        # 0x140006088
   140001280:	mov    QWORD PTR [rsp+0x8],rbx
   140001285:	push   rdi
   140001286:	sub    rsp,0x20
   14000128a:	cmp    BYTE PTR [rcx+0x10],0x0
   14000128e:	lea    rax,[rip+0x54bb]        # 0x140006750
   140001295:	mov    edi,edx
   140001297:	mov    QWORD PTR [rcx],rax
   14000129a:	mov    rbx,rcx
   14000129d:	je     0x1400012ae
   14000129f:	mov    rcx,QWORD PTR [rcx+0x8]
   1400012a3:	test   rcx,rcx
   1400012a6:	je     0x1400012ae
   1400012a8:	call   QWORD PTR [rip+0x4daa]        # 0x140006058
   1400012ae:	test   dil,0x1
   1400012b2:	je     0x1400012bd
   1400012b4:	mov    rcx,rbx
   1400012b7:	call   QWORD PTR [rip+0x4fcb]        # 0x140006288
   1400012bd:	mov    rax,rbx
   1400012c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012c5:	add    rsp,0x20
   1400012c9:	pop    rdi
   1400012ca:	ret    
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	sub    rsp,0x28
   1400012d4:	mov    eax,DWORD PTR [rip+0x844e]        # 0x140009728
   1400012da:	test   al,0x1
   1400012dc:	jne    0x14000131b
   1400012de:	or     eax,0x1
   1400012e1:	mov    DWORD PTR [rip+0x8441],eax        # 0x140009728
   1400012e7:	call   QWORD PTR [rip+0x4d5b]        # 0x140006048
   1400012ed:	lea    rcx,[rip+0x545c]        # 0x140006750
   1400012f4:	mov    QWORD PTR [rip+0x8435],rcx        # 0x140009730
   1400012fb:	lea    rcx,[rip+0x479e]        # 0x140005aa0
   140001302:	mov    BYTE PTR [rip+0x8437],0x0        # 0x140009740
   140001309:	mov    QWORD PTR [rip+0x8428],rax        # 0x140009738
   140001310:	call   0x140004ce8
   140001315:	mov    eax,DWORD PTR [rip+0x840d]        # 0x140009728
   14000131b:	mov    QWORD PTR [rsp+0x20],rbx
   140001320:	test   al,0x2
   140001322:	jne    0x140001389
   140001324:	or     eax,0x2
   140001327:	lea    rbx,[rip+0x841a]        # 0x140009748
   14000132e:	lea    rcx,[rip+0x474b]        # 0x140005a80
   140001335:	mov    DWORD PTR [rip+0x83ed],eax        # 0x140009728
   14000133b:	lea    rax,[rip+0x543e]        # 0x140006780
   140001342:	mov    DWORD PTR [rip+0x841c],0x2        # 0x140009768
   14000134c:	mov    QWORD PTR [rip+0x83f5],rax        # 0x140009748
   140001353:	lea    rax,[rip+0x83d6]        # 0x140009730
   14000135a:	mov    QWORD PTR [rip+0x83f7],rbx        # 0x140009758
   140001361:	mov    QWORD PTR [rip+0x83e8],rax        # 0x140009750
   140001368:	xor    eax,eax
   14000136a:	mov    QWORD PTR [rip+0x83ef],rax        # 0x140009760
   140001371:	mov    DWORD PTR [rip+0x83f9],eax        # 0x140009770
   140001377:	call   0x140004ce8
   14000137c:	mov    rax,rbx
   14000137f:	mov    rbx,QWORD PTR [rsp+0x20]
   140001384:	add    rsp,0x28
   140001388:	ret    
   140001389:	lea    rax,[rip+0x83b8]        # 0x140009748
   140001390:	mov    rbx,QWORD PTR [rsp+0x20]
   140001395:	add    rsp,0x28
   140001399:	ret    
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	rex push rdi
   1400013a2:	sub    rsp,0x20
   1400013a6:	mov    rdi,rcx
   1400013a9:	test   edx,edx
   1400013ab:	jns    0x1400013b5
   1400013ad:	xor    eax,eax
   1400013af:	add    rsp,0x20
   1400013b3:	pop    rdi
   1400013b4:	ret    
   1400013b5:	mov    eax,0x7fffffff
   1400013ba:	sub    eax,edx
   1400013bc:	cmp    eax,0x1
   1400013bf:	jl     0x1400013ad
   1400013c1:	inc    edx
   1400013c3:	mov    QWORD PTR [rsp+0x30],rbx
   1400013c8:	lea    ebx,[rdx+0x7]
   1400013cb:	and    ebx,0xfffffff8
   1400013ce:	cmp    edx,ebx
   1400013d0:	jg     0x140001432
   1400013d2:	movsxd r8,r8d
   1400013d5:	movsxd rcx,ebx
   1400013d8:	test   ebx,ebx
   1400013da:	jne    0x1400013e0
   1400013dc:	xor    ecx,ecx
   1400013de:	jmp    0x1400013f8
   1400013e0:	xor    edx,edx
   1400013e2:	or     rax,0xffffffffffffffff
   1400013e6:	div    rcx
   1400013e9:	cmp    rax,r8
   1400013ec:	jb     0x140001432
   1400013ee:	imul   rcx,r8
   1400013f2:	cmp    rcx,0xffffffffffffffe7
   1400013f6:	ja     0x140001432
   1400013f8:	lea    rdx,[rcx+0x18]
   1400013fc:	mov    rcx,QWORD PTR [rdi+0x8]
   140001400:	mov    rax,QWORD PTR [rcx]
   140001403:	call   QWORD PTR [rax]
   140001405:	mov    rcx,rax
   140001408:	test   rax,rax
   14000140b:	je     0x140001432
   14000140d:	mov    QWORD PTR [rax],rdi
   140001410:	mov    DWORD PTR [rax+0x10],0x1
   140001417:	lea    eax,[rbx-0x1]
   14000141a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000141f:	mov    DWORD PTR [rcx+0xc],eax
   140001422:	mov    DWORD PTR [rcx+0x8],0x0
   140001429:	mov    rax,rcx
   14000142c:	add    rsp,0x20
   140001430:	pop    rdi
   140001431:	ret    
   140001432:	xor    eax,eax
   140001434:	mov    rbx,QWORD PTR [rsp+0x30]
   140001439:	add    rsp,0x20
   14000143d:	pop    rdi
   14000143e:	ret    
   14000143f:	int3   
   140001440:	mov    rcx,QWORD PTR [rcx+0x8]
   140001444:	mov    rax,QWORD PTR [rcx]
   140001447:	rex.W jmp QWORD PTR [rax+0x8]
   14000144b:	int3   
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	sub    rsp,0x28
   140001454:	mov    r10,rcx
   140001457:	test   r8d,r8d
   14000145a:	jns    0x140001463
   14000145c:	xor    eax,eax
   14000145e:	add    rsp,0x28
   140001462:	ret    
   140001463:	mov    eax,0x7fffffff
   140001468:	sub    eax,r8d
   14000146b:	cmp    eax,0x1
   14000146e:	jl     0x14000145c
   140001470:	inc    r8d
   140001473:	mov    QWORD PTR [rsp+0x20],rbx
   140001478:	lea    ebx,[r8+0x7]
   14000147c:	and    ebx,0xfffffff8
   14000147f:	cmp    r8d,ebx
   140001482:	jg     0x1400014c6
   140001484:	mov    eax,r9d
   140001487:	mov    ecx,ebx
   140001489:	imul   rcx,rax
   14000148d:	mov    eax,0xffffffff
   140001492:	cmp    rcx,rax
   140001495:	ja     0x1400014c6
   140001497:	cmp    ecx,0xffffffe7
   14000149a:	ja     0x1400014c6
   14000149c:	lea    r8d,[rcx+0x18]
   1400014a0:	mov    rcx,QWORD PTR [r10+0x8]
   1400014a4:	mov    r9,QWORD PTR [rcx]
   1400014a7:	call   QWORD PTR [r9+0x10]
   1400014ab:	mov    rcx,rax
   1400014ae:	test   rax,rax
   1400014b1:	je     0x1400014c6
   1400014b3:	lea    eax,[rbx-0x1]
   1400014b6:	mov    rbx,QWORD PTR [rsp+0x20]
   1400014bb:	mov    DWORD PTR [rcx+0xc],eax
   1400014be:	mov    rax,rcx
   1400014c1:	add    rsp,0x28
   1400014c5:	ret    
   1400014c6:	xor    eax,eax
   1400014c8:	mov    rbx,QWORD PTR [rsp+0x20]
   1400014cd:	add    rsp,0x28
   1400014d1:	ret    
   1400014d2:	int3   
   1400014d3:	int3   
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	lock inc DWORD PTR [rcx+0x20]
   1400014e4:	lea    rax,[rcx+0x10]
   1400014e8:	ret    
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	mov    rax,rcx
   1400014f3:	ret    
   1400014f4:	int3   
   1400014f5:	int3   
   1400014f6:	int3   
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	rex push rbx
   140001502:	sub    rsp,0x20
   140001506:	lea    rax,[rip+0x5273]        # 0x140006780
   14000150d:	mov    rbx,rcx
   140001510:	mov    BYTE PTR [rip+0x8261],0x0        # 0x140009778
   140001517:	mov    QWORD PTR [rcx],rax
   14000151a:	test   dl,0x1
   14000151d:	je     0x140001525
   14000151f:	call   QWORD PTR [rip+0x4d63]        # 0x140006288
   140001525:	mov    rax,rbx
   140001528:	add    rsp,0x20
   14000152c:	pop    rbx
   14000152d:	ret    
   14000152e:	int3   
   14000152f:	int3   
   140001530:	rex push rbp
   140001532:	push   rbx
   140001533:	push   rsi
   140001534:	push   rdi
   140001535:	push   r14
   140001537:	lea    rbp,[rsp-0x37]
   14000153c:	sub    rsp,0xe0
   140001543:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14000154b:	mov    r14,rdx
   14000154e:	cmp    ecx,0x3
   140001551:	je     0x140001567
   140001553:	lea    rcx,[rip+0x4eb6]        # 0x140006410
   14000155a:	call   QWORD PTR [rip+0x4d40]        # 0x1400062a0
   140001560:	xor    eax,eax
   140001562:	jmp    0x140001754
   140001567:	call   0x1400012d0
   14000156c:	mov    rdx,rax
   14000156f:	xor    edi,edi
   140001571:	mov    ecx,edi
   140001573:	test   rax,rax
   140001576:	setne  cl
   140001579:	test   ecx,ecx
   14000157b:	jne    0x140001588
   14000157d:	mov    ecx,0x80004005
   140001582:	call   0x140001050
   140001587:	int3   
   140001588:	mov    rax,QWORD PTR [rax]
   14000158b:	mov    rcx,rdx
   14000158e:	call   QWORD PTR [rax+0x18]
   140001591:	add    rax,0x18
   140001595:	mov    QWORD PTR [rbp+0x7f],rax
   140001599:	lea    rcx,[rbp+0x7f]
   14000159d:	call   0x140002790
   1400015a2:	test   al,al
   1400015a4:	je     0x14000172c
   1400015aa:	call   0x1400012d0
   1400015af:	mov    rdx,rax
   1400015b2:	mov    ecx,edi
   1400015b4:	test   rax,rax
   1400015b7:	setne  cl
   1400015ba:	test   ecx,ecx
   1400015bc:	jne    0x1400015c9
   1400015be:	mov    ecx,0x80004005
   1400015c3:	call   0x140001050
   1400015c8:	int3   
   1400015c9:	mov    rax,QWORD PTR [rax]
   1400015cc:	mov    rcx,rdx
   1400015cf:	call   QWORD PTR [rax+0x18]
   1400015d2:	add    rax,0x18
   1400015d6:	mov    QWORD PTR [rbp+0x77],rax
   1400015da:	lea    rdx,[rip+0x4e7f]        # 0x140006460
   1400015e1:	test   rdx,0xffffffffffff0000
   1400015e8:	jne    0x14000160a
   1400015ea:	movzx  ebx,dx
   1400015ed:	mov    ecx,ebx
   1400015ef:	call   0x140001120
   1400015f4:	test   rax,rax
   1400015f7:	je     0x14000161a
   1400015f9:	mov    r8d,ebx
   1400015fc:	mov    rdx,rax
   1400015ff:	lea    rcx,[rbp+0x77]
   140001603:	call   0x140003820
   140001608:	jmp    0x14000161a
   14000160a:	mov    r8d,0xd9
   140001610:	lea    rcx,[rbp+0x77]
   140001614:	call   0x140003430
   140001619:	nop
   14000161a:	mov    r9,QWORD PTR [r14+0x8]
   14000161e:	mov    r8,QWORD PTR [r14+0x10]
   140001622:	lea    rdx,[rip+0x4fef]        # 0x140006618
   140001629:	lea    rcx,[rbp+0x77]
   14000162d:	call   0x1400041c0
   140001632:	xor    edx,edx
   140001634:	lea    r8d,[rdx+0x68]
   140001638:	lea    rcx,[rbp-0x39]
   14000163c:	call   0x140005022
   140001641:	mov    DWORD PTR [rbp-0x39],0x68
   140001648:	xor    eax,eax
   14000164a:	mov    QWORD PTR [rbp-0x59],rax
   14000164e:	mov    QWORD PTR [rbp-0x51],rax
   140001652:	mov    QWORD PTR [rbp-0x49],rax
   140001656:	mov    rbx,QWORD PTR [rbp+0x77]
   14000165a:	cmp    DWORD PTR [rbx-0x8],0x1
   14000165e:	jle    0x140001670
   140001660:	mov    edx,DWORD PTR [rbx-0x10]
   140001663:	lea    rcx,[rbp+0x77]
   140001667:	call   0x140003300
   14000166c:	mov    rbx,QWORD PTR [rbp+0x77]
   140001670:	lea    rax,[rbp-0x59]
   140001674:	mov    QWORD PTR [rsp+0x48],rax
   140001679:	lea    rax,[rbp-0x39]
   14000167d:	mov    QWORD PTR [rsp+0x40],rax
   140001682:	mov    QWORD PTR [rsp+0x38],rdi
   140001687:	mov    QWORD PTR [rsp+0x30],rdi
   14000168c:	mov    DWORD PTR [rsp+0x28],0x8000020
   140001694:	mov    DWORD PTR [rsp+0x20],edi
   140001698:	xor    r9d,r9d
   14000169b:	xor    r8d,r8d
   14000169e:	mov    rdx,rbx
   1400016a1:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400016a5:	call   QWORD PTR [rip+0x497d]        # 0x140006028
   1400016ab:	mov    r14d,eax
   1400016ae:	test   eax,eax
   1400016b0:	je     0x1400016f1
   1400016b2:	or     edx,0xffffffff
   1400016b5:	mov    rcx,QWORD PTR [rbp-0x59]
   1400016b9:	call   QWORD PTR [rip+0x4981]        # 0x140006040
   1400016bf:	mov    DWORD PTR [rbp+0x67],edi
   1400016c2:	lea    rdx,[rbp+0x67]
   1400016c6:	mov    rcx,QWORD PTR [rbp-0x59]
   1400016ca:	call   QWORD PTR [rip+0x4990]        # 0x140006060
   1400016d0:	test   eax,eax
   1400016d2:	je     0x1400016da
   1400016d4:	cmp    DWORD PTR [rbp+0x67],0x0
   1400016d8:	je     0x1400016dd
   1400016da:	mov    r14d,edi
   1400016dd:	mov    rcx,QWORD PTR [rbp-0x59]
   1400016e1:	call   QWORD PTR [rip+0x49c1]        # 0x1400060a8
   1400016e7:	mov    rcx,QWORD PTR [rbp-0x51]
   1400016eb:	call   QWORD PTR [rip+0x49b7]        # 0x1400060a8
   1400016f1:	movsxd rdx,DWORD PTR [rbx-0xc]
   1400016f5:	mov    rcx,rbx
   1400016f8:	call   QWORD PTR [rip+0x4a5a]        # 0x140006158
   1400016fe:	test   eax,eax
   140001700:	js     0x140001749
   140001702:	cmp    eax,DWORD PTR [rbx-0xc]
   140001705:	jg     0x140001749
   140001707:	mov    DWORD PTR [rbx-0x10],eax
   14000170a:	cdqe   
   14000170c:	mov    WORD PTR [rbx+rax*2],di
   140001710:	test   r14d,r14d
   140001713:	setg   dil
   140001717:	lea    rdx,[rbx-0x18]
   14000171b:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001720:	jg     0x14000172c
   140001722:	mov    rcx,QWORD PTR [rdx]
   140001725:	mov    rax,QWORD PTR [rcx]
   140001728:	call   QWORD PTR [rax+0x8]
   14000172b:	nop
   14000172c:	mov    rdx,QWORD PTR [rbp+0x7f]
   140001730:	add    rdx,0xffffffffffffffe8
   140001734:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001739:	jg     0x140001745
   14000173b:	mov    rcx,QWORD PTR [rdx]
   14000173e:	mov    r8,QWORD PTR [rcx]
   140001741:	call   QWORD PTR [r8+0x8]
   140001745:	mov    eax,edi
   140001747:	jmp    0x140001754
   140001749:	mov    ecx,0x80070057
   14000174e:	call   0x140001050
   140001753:	nop
   140001754:	add    rsp,0xe0
   14000175b:	pop    r14
   14000175d:	pop    rdi
   14000175e:	pop    rsi
   14000175f:	pop    rbx
   140001760:	pop    rbp
   140001761:	ret    
   140001762:	int3   
   140001763:	int3   
   140001764:	int3   
   140001765:	int3   
   140001766:	int3   
   140001767:	int3   
   140001768:	int3   
   140001769:	int3   
   14000176a:	int3   
   14000176b:	int3   
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	mov    QWORD PTR [rsp+0x8],rcx
   140001775:	push   rbx
   140001776:	push   rbp
   140001777:	push   rsi
   140001778:	push   rdi
   140001779:	push   r14
   14000177b:	push   r15
   14000177d:	sub    rsp,0x68
   140001781:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000178a:	mov    rbx,rcx
   14000178d:	xor    r15d,r15d
   140001790:	mov    DWORD PTR [rsp+0x30],r15d
   140001795:	call   0x1400012d0
   14000179a:	mov    rcx,rax
   14000179d:	mov    edx,r15d
   1400017a0:	test   rax,rax
   1400017a3:	setne  dl
   1400017a6:	test   edx,edx
   1400017a8:	jne    0x1400017b5
   1400017aa:	mov    ecx,0x80004005
   1400017af:	call   0x140001050
   1400017b4:	int3   
   1400017b5:	mov    rax,QWORD PTR [rax]
   1400017b8:	call   QWORD PTR [rax+0x18]
   1400017bb:	add    rax,0x18
   1400017bf:	mov    QWORD PTR [rbx],rax
   1400017c2:	mov    edi,0x1
   1400017c7:	mov    DWORD PTR [rsp+0x30],edi
   1400017cb:	mov    rsi,r15
   1400017ce:	mov    DWORD PTR [rsp+0x48],r15d
   1400017d3:	mov    QWORD PTR [rsp+0x50],r15
   1400017d8:	mov    QWORD PTR [rsp+0xb8],r15
   1400017e0:	lea    rax,[rsp+0xb8]
   1400017e8:	mov    QWORD PTR [rsp+0x20],rax
   1400017ed:	mov    r9d,0x20019
   1400017f3:	xor    r8d,r8d
   1400017f6:	lea    rdx,[rip+0x4e33]        # 0x140006630
   1400017fd:	mov    rcx,0xffffffff80000001
   140001804:	call   QWORD PTR [rip+0x47fe]        # 0x140006008
   14000180a:	test   eax,eax
   14000180c:	jne    0x14000197b
   140001812:	mov    rsi,QWORD PTR [rsp+0xb8]
   14000181a:	mov    QWORD PTR [rsp+0x40],rsi
   14000181f:	mov    DWORD PTR [rsp+0x48],r15d
   140001824:	mov    rax,QWORD PTR [rbx]
   140001827:	sub    edi,DWORD PTR [rax-0x8]
   14000182a:	mov    eax,DWORD PTR [rax-0xc]
   14000182d:	sub    eax,0x64
   140001830:	or     eax,edi
   140001832:	jge    0x140001841
   140001834:	mov    edx,0x64
   140001839:	mov    rcx,rbx
   14000183c:	call   0x140003540
   140001841:	mov    r14,QWORD PTR [rbx]
   140001844:	mov    DWORD PTR [rsp+0xa8],0xc8
   14000184f:	mov    ebp,r15d
   140001852:	lea    rax,[rsp+0xa8]
   14000185a:	mov    QWORD PTR [rsp+0x28],rax
   14000185f:	mov    QWORD PTR [rsp+0x20],r14
   140001864:	lea    r9,[rsp+0xb0]
   14000186c:	xor    r8d,r8d
   14000186f:	lea    rdx,[rip+0x4df2]        # 0x140006668
   140001876:	mov    rcx,rsi
   140001879:	call   QWORD PTR [rip+0x4791]        # 0x140006010
   14000187f:	mov    edi,eax
   140001881:	test   eax,eax
   140001883:	jne    0x1400018ce
   140001885:	mov    eax,DWORD PTR [rsp+0xb0]
   14000188c:	dec    eax
   14000188e:	cmp    eax,0x1
   140001891:	jbe    0x14000189a
   140001893:	mov    edi,0xd
   140001898:	jmp    0x1400018ce
   14000189a:	mov    ecx,DWORD PTR [rsp+0xa8]
   1400018a1:	test   r14,r14
   1400018a4:	je     0x1400018c7
   1400018a6:	test   ecx,ecx
   1400018a8:	je     0x1400018c3
   1400018aa:	test   cl,0x1
   1400018ad:	jne    0x1400018bc
   1400018af:	mov    eax,ecx
   1400018b1:	shr    rax,1
   1400018b4:	cmp    WORD PTR [r14+rax*2-0x2],bp
   1400018ba:	je     0x1400018c7
   1400018bc:	mov    edi,0xd
   1400018c1:	jmp    0x1400018ce
   1400018c3:	mov    WORD PTR [r14],r15w
   1400018c7:	mov    ebp,ecx
   1400018c9:	shr    ebp,1
   1400018cb:	mov    edi,r15d
   1400018ce:	lea    eax,[rbp-0x1]
   1400018d1:	cmp    eax,0xffffffff
   1400018d4:	jne    0x1400018ed
   1400018d6:	mov    rcx,QWORD PTR [rbx]
   1400018d9:	test   rcx,rcx
   1400018dc:	jne    0x1400018e3
   1400018de:	mov    eax,r15d
   1400018e1:	jmp    0x1400018f1
   1400018e3:	movsxd rdx,DWORD PTR [rcx-0xc]
   1400018e7:	call   QWORD PTR [rip+0x486b]        # 0x140006158
   1400018ed:	test   eax,eax
   1400018ef:	js     0x140001970
   1400018f1:	mov    rcx,QWORD PTR [rbx]
   1400018f4:	cmp    eax,DWORD PTR [rcx-0xc]
   1400018f7:	jg     0x140001970
   1400018f9:	mov    DWORD PTR [rcx-0x10],eax
   1400018fc:	movsxd rcx,eax
   1400018ff:	mov    rax,QWORD PTR [rbx]
   140001902:	mov    WORD PTR [rax+rcx*2],r15w
   140001907:	test   edi,edi
   140001909:	je     0x140001966
   14000190b:	mov    rax,QWORD PTR [rbx]
   14000190e:	lea    rdx,[rax-0x18]
   140001912:	mov    rdi,QWORD PTR [rdx]
   140001915:	cmp    DWORD PTR [rdx+0x8],0x0
   140001919:	je     0x14000197b
   14000191b:	cmp    DWORD PTR [rdx+0x10],0x0
   14000191f:	jge    0x14000193f
   140001921:	cmp    DWORD PTR [rax-0xc],0x0
   140001925:	jge    0x140001932
   140001927:	mov    ecx,0x80070057
   14000192c:	call   0x140001050
   140001931:	int3   
   140001932:	mov    DWORD PTR [rax-0x10],r15d
   140001936:	mov    rax,QWORD PTR [rbx]
   140001939:	mov    WORD PTR [rax],r15w
   14000193d:	jmp    0x14000197b
   14000193f:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001944:	jg     0x14000194f
   140001946:	mov    rcx,QWORD PTR [rdx]
   140001949:	mov    rax,QWORD PTR [rcx]
   14000194c:	call   QWORD PTR [rax+0x8]
   14000194f:	mov    rax,QWORD PTR [rdi]
   140001952:	mov    rcx,rdi
   140001955:	call   QWORD PTR [rax+0x18]
   140001958:	add    rax,0x18
   14000195c:	mov    QWORD PTR [rbx],rax
   14000195f:	mov    rsi,QWORD PTR [rsp+0x40]
   140001964:	jmp    0x14000197b
   140001966:	mov    rcx,rbx
   140001969:	call   0x140002f60
   14000196e:	jmp    0x14000197b
   140001970:	mov    ecx,0x80070057
   140001975:	call   0x140001050
   14000197a:	nop
   14000197b:	test   rsi,rsi
   14000197e:	je     0x140001989
   140001980:	mov    rcx,rsi
   140001983:	call   QWORD PTR [rip+0x468f]        # 0x140006018
   140001989:	mov    rax,rbx
   14000198c:	add    rsp,0x68
   140001990:	pop    r15
   140001992:	pop    r14
   140001994:	pop    rdi
   140001995:	pop    rsi
   140001996:	pop    rbp
   140001997:	pop    rbx
   140001998:	ret    
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400019a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400019aa:	push   rbp
   1400019ab:	push   rbx
   1400019ac:	push   rsi
   1400019ad:	push   rdi
   1400019ae:	push   r12
   1400019b0:	push   r13
   1400019b2:	push   r14
   1400019b4:	push   r15
   1400019b6:	mov    rbp,rsp
   1400019b9:	sub    rsp,0x58
   1400019bd:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   1400019c5:	mov    r14,rdx
   1400019c8:	mov    rdi,rcx
   1400019cb:	xor    r12d,r12d
   1400019ce:	mov    DWORD PTR [rbp-0x38],r12d
   1400019d2:	mov    QWORD PTR [rcx],r12
   1400019d5:	mov    QWORD PTR [rcx+0x8],r12
   1400019d9:	mov    QWORD PTR [rcx+0x10],r12
   1400019dd:	mov    DWORD PTR [rbp-0x38],0x1
   1400019e4:	mov    DWORD PTR [rbp+0x58],r12d
   1400019e8:	lea    r9,[rbp+0x58]
   1400019ec:	lea    rdx,[rbp+0x60]
   1400019f0:	mov    rcx,r14
   1400019f3:	call   0x140002e50
   1400019f8:	nop
   1400019f9:	mov    rax,QWORD PTR [rbp+0x60]
   1400019fd:	cmp    DWORD PTR [rax-0x10],0x0
   140001a01:	je     0x140001dd1
   140001a07:	movabs r10,0x1fffffffffffffff
   140001a11:	mov    rdx,QWORD PTR [rdi+0x8]
   140001a15:	lea    rcx,[rbp+0x60]
   140001a19:	cmp    rcx,rdx
   140001a1c:	jae    0x140001b2a
   140001a22:	mov    r8,QWORD PTR [rdi]
   140001a25:	lea    rcx,[rbp+0x60]
   140001a29:	cmp    r8,rcx
   140001a2c:	ja     0x140001b2a
   140001a32:	lea    rbx,[rbp+0x60]
   140001a36:	sub    rbx,r8
   140001a39:	sar    rbx,0x3
   140001a3d:	mov    rcx,QWORD PTR [rdi+0x10]
   140001a41:	cmp    rdx,rcx
   140001a44:	jne    0x140001aa3
   140001a46:	mov    rax,rcx
   140001a49:	sub    rax,rdx
   140001a4c:	sar    rax,0x3
   140001a50:	cmp    rax,0x1
   140001a54:	jae    0x140001aa3
   140001a56:	sub    rdx,r8
   140001a59:	sar    rdx,0x3
   140001a5d:	mov    rax,r10
   140001a60:	sub    rax,rdx
   140001a63:	cmp    rax,0x1
   140001a67:	jb     0x140001d7d
   140001a6d:	lea    r9,[rdx+0x1]
   140001a71:	sub    rcx,r8
   140001a74:	sar    rcx,0x3
   140001a78:	mov    rdx,rcx
   140001a7b:	shr    rdx,1
   140001a7e:	mov    rax,r10
   140001a81:	sub    rax,rdx
   140001a84:	cmp    rax,rcx
   140001a87:	jae    0x140001a8e
   140001a89:	mov    rcx,r12
   140001a8c:	jmp    0x140001a91
   140001a8e:	add    rcx,rdx
   140001a91:	cmp    rcx,r9
   140001a94:	cmovb  rcx,r9
   140001a98:	mov    rdx,rcx
   140001a9b:	mov    rcx,rdi
   140001a9e:	call   0x140003630
   140001aa3:	mov    rax,QWORD PTR [rdi]
   140001aa6:	mov    rsi,QWORD PTR [rdi+0x8]
   140001aaa:	mov    QWORD PTR [rbp-0x20],rsi
   140001aae:	mov    QWORD PTR [rbp-0x18],rsi
   140001ab2:	test   rsi,rsi
   140001ab5:	je     0x140001b25
   140001ab7:	mov    rbx,QWORD PTR [rax+rbx*8]
   140001abb:	mov    rcx,QWORD PTR [rbx-0x18]
   140001abf:	mov    rax,QWORD PTR [rcx]
   140001ac2:	call   QWORD PTR [rax+0x20]
   140001ac5:	mov    rcx,rax
   140001ac8:	cmp    DWORD PTR [rbx-0x8],0x0
   140001acc:	jl     0x140001ade
   140001ace:	cmp    rax,QWORD PTR [rbx-0x18]
   140001ad2:	jne    0x140001ade
   140001ad4:	lea    r14,[rbx-0x18]
   140001ad8:	lock inc DWORD PTR [rbx-0x8]
   140001adc:	jmp    0x140001b1a
   140001ade:	mov    rax,QWORD PTR [rax]
   140001ae1:	mov    r8d,0x2
   140001ae7:	mov    edx,DWORD PTR [rbx-0x10]
   140001aea:	call   QWORD PTR [rax]
   140001aec:	mov    r14,rax
   140001aef:	test   rax,rax
   140001af2:	je     0x140001d8b
   140001af8:	mov    ecx,DWORD PTR [rbx-0x10]
   140001afb:	mov    DWORD PTR [rax+0x8],ecx
   140001afe:	mov    ecx,DWORD PTR [rbx-0x10]
   140001b01:	inc    ecx
   140001b03:	movsxd rdx,ecx
   140001b06:	lea    r9,[rdx+rdx*1]
   140001b0a:	mov    r8,rbx
   140001b0d:	add    rdx,rdx
   140001b10:	lea    rcx,[rax+0x18]
   140001b14:	call   QWORD PTR [rip+0x4666]        # 0x140006180
   140001b1a:	lea    rax,[r14+0x18]
   140001b1e:	mov    QWORD PTR [rsi],rax
   140001b21:	mov    r14,QWORD PTR [rbp+0x50]
   140001b25:	jmp    0x140001c13
   140001b2a:	mov    r8,QWORD PTR [rdi+0x10]
   140001b2e:	cmp    rdx,r8
   140001b31:	jne    0x140001b96
   140001b33:	mov    rcx,r8
   140001b36:	sub    rcx,rdx
   140001b39:	sar    rcx,0x3
   140001b3d:	cmp    rcx,0x1
   140001b41:	jae    0x140001b96
   140001b43:	mov    rcx,QWORD PTR [rdi]
   140001b46:	sub    rdx,rcx
   140001b49:	sar    rdx,0x3
   140001b4d:	mov    rax,r10
   140001b50:	sub    rax,rdx
   140001b53:	cmp    rax,0x1
   140001b57:	jb     0x140001d91
   140001b5d:	inc    rdx
   140001b60:	sub    r8,rcx
   140001b63:	sar    r8,0x3
   140001b67:	mov    rcx,r8
   140001b6a:	shr    rcx,1
   140001b6d:	mov    rax,r10
   140001b70:	sub    rax,rcx
   140001b73:	cmp    rax,r8
   140001b76:	jae    0x140001b7d
   140001b78:	mov    r8,r12
   140001b7b:	jmp    0x140001b80
   140001b7d:	add    r8,rcx
   140001b80:	cmp    r8,rdx
   140001b83:	cmovb  r8,rdx
   140001b87:	mov    rdx,r8
   140001b8a:	mov    rcx,rdi
   140001b8d:	call   0x140003630
   140001b92:	mov    rax,QWORD PTR [rbp+0x60]
   140001b96:	mov    rsi,QWORD PTR [rdi+0x8]
   140001b9a:	mov    QWORD PTR [rbp-0x18],rsi
   140001b9e:	mov    QWORD PTR [rbp-0x20],rsi
   140001ba2:	test   rsi,rsi
   140001ba5:	je     0x140001c13
   140001ba7:	lea    rbx,[rax-0x18]
   140001bab:	mov    rcx,QWORD PTR [rbx]
   140001bae:	mov    rax,QWORD PTR [rcx]
   140001bb1:	call   QWORD PTR [rax+0x20]
   140001bb4:	mov    rcx,rax
   140001bb7:	cmp    DWORD PTR [rbx+0x10],0x0
   140001bbb:	jl     0x140001bcb
   140001bbd:	cmp    rax,QWORD PTR [rbx]
   140001bc0:	jne    0x140001bcb
   140001bc2:	mov    r14,rbx
   140001bc5:	lock inc DWORD PTR [rbx+0x10]
   140001bc9:	jmp    0x140001c08
   140001bcb:	mov    rax,QWORD PTR [rax]
   140001bce:	mov    r8d,0x2
   140001bd4:	mov    edx,DWORD PTR [rbx+0x8]
   140001bd7:	call   QWORD PTR [rax]
   140001bd9:	mov    r14,rax
   140001bdc:	test   rax,rax
   140001bdf:	je     0x140001d9f
   140001be5:	mov    ecx,DWORD PTR [rbx+0x8]
   140001be8:	mov    DWORD PTR [rax+0x8],ecx
   140001beb:	mov    ecx,DWORD PTR [rbx+0x8]
   140001bee:	inc    ecx
   140001bf0:	movsxd rdx,ecx
   140001bf3:	lea    r9,[rdx+rdx*1]
   140001bf7:	lea    r8,[rbx+0x18]
   140001bfb:	add    rdx,rdx
   140001bfe:	lea    rcx,[rax+0x18]
   140001c02:	call   QWORD PTR [rip+0x4578]        # 0x140006180
   140001c08:	lea    rax,[r14+0x18]
   140001c0c:	mov    QWORD PTR [rsi],rax
   140001c0f:	mov    r14,QWORD PTR [rbp+0x50]
   140001c13:	add    QWORD PTR [rdi+0x8],0x8
   140001c18:	lea    r9,[rbp+0x58]
   140001c1c:	lea    rdx,[rbp-0x30]
   140001c20:	mov    rcx,r14
   140001c23:	call   0x140002e50
   140001c28:	nop
   140001c29:	mov    r15,QWORD PTR [rax]
   140001c2c:	lea    rdx,[r15-0x18]
   140001c30:	mov    rcx,QWORD PTR [rbp+0x60]
   140001c34:	lea    rbx,[rcx-0x18]
   140001c38:	cmp    rdx,rbx
   140001c3b:	je     0x140001d5c
   140001c41:	cmp    DWORD PTR [rbx+0x10],0x0
   140001c45:	jl     0x140001c7b
   140001c47:	mov    rax,QWORD PTR [rbx]
   140001c4a:	cmp    QWORD PTR [rdx],rax
   140001c4d:	jne    0x140001c7b
   140001c4f:	mov    rcx,rdx
   140001c52:	call   0x1400035a0
   140001c57:	mov    rsi,rax
   140001c5a:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140001c5f:	jg     0x140001c6e
   140001c61:	mov    rcx,QWORD PTR [rbx]
   140001c64:	mov    r8,QWORD PTR [rcx]
   140001c67:	mov    rdx,rbx
   140001c6a:	call   QWORD PTR [r8+0x8]
   140001c6e:	lea    rax,[rsi+0x18]
   140001c72:	mov    QWORD PTR [rbp+0x60],rax
   140001c76:	jmp    0x140001d5c
   140001c7b:	movsxd rsi,DWORD PTR [r15-0x10]
   140001c7f:	test   esi,esi
   140001c81:	jne    0x140001cda
   140001c83:	mov    rsi,QWORD PTR [rbx]
   140001c86:	cmp    DWORD PTR [rbx+0x8],0x0
   140001c8a:	je     0x140001d5c
   140001c90:	cmp    DWORD PTR [rbx+0x10],0x0
   140001c94:	jge    0x140001cb1
   140001c96:	cmp    DWORD PTR [rcx-0xc],0x0
   140001c9a:	jl     0x140001da5
   140001ca0:	mov    DWORD PTR [rcx-0x10],r12d
   140001ca4:	mov    rax,QWORD PTR [rbp+0x60]
   140001ca8:	mov    WORD PTR [rax],r12w
   140001cac:	jmp    0x140001d5c
   140001cb1:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140001cb6:	jg     0x140001cc4
   140001cb8:	mov    rcx,QWORD PTR [rbx]
   140001cbb:	mov    rax,QWORD PTR [rcx]
   140001cbe:	mov    rdx,rbx
   140001cc1:	call   QWORD PTR [rax+0x8]
   140001cc4:	mov    rax,QWORD PTR [rsi]
   140001cc7:	mov    rcx,rsi
   140001cca:	call   QWORD PTR [rax+0x18]
   140001ccd:	add    rax,0x18
   140001cd1:	mov    QWORD PTR [rbp+0x60],rax
   140001cd5:	jmp    0x140001d5c
   140001cda:	test   r15,r15
   140001cdd:	je     0x140001dc6
   140001ce3:	mov    r12d,DWORD PTR [rcx-0x10]
   140001ce7:	mov    r14,r15
   140001cea:	sub    r14,rcx
   140001ced:	sar    r14,1
   140001cf0:	test   esi,esi
   140001cf2:	js     0x140001dbb
   140001cf8:	mov    edx,0x1
   140001cfd:	sub    edx,DWORD PTR [rbx+0x10]
   140001d00:	mov    eax,DWORD PTR [rbx+0xc]
   140001d03:	sub    eax,esi
   140001d05:	or     eax,edx
   140001d07:	jge    0x140001d18
   140001d09:	mov    edx,esi
   140001d0b:	lea    rcx,[rbp+0x60]
   140001d0f:	call   0x140003540
   140001d14:	mov    rcx,QWORD PTR [rbp+0x60]
   140001d18:	lea    rbx,[rsi+rsi*1]
   140001d1c:	movsxd rdx,DWORD PTR [rcx-0xc]
   140001d20:	mov    r9,rbx
   140001d23:	add    rdx,rdx
   140001d26:	cmp    r14,r12
   140001d29:	ja     0x140001d37
   140001d2b:	lea    r8,[rcx+r14*2]
   140001d2f:	call   QWORD PTR [rip+0x454b]        # 0x140006280
   140001d35:	jmp    0x140001d40
   140001d37:	mov    r8,r15
   140001d3a:	call   QWORD PTR [rip+0x4440]        # 0x140006180
   140001d40:	mov    rax,QWORD PTR [rbp+0x60]
   140001d44:	cmp    esi,DWORD PTR [rax-0xc]
   140001d47:	jg     0x140001db0
   140001d49:	mov    DWORD PTR [rax-0x10],esi
   140001d4c:	mov    rax,QWORD PTR [rbp+0x60]
   140001d50:	xor    r12d,r12d
   140001d53:	mov    WORD PTR [rbx+rax*1],r12w
   140001d58:	mov    r14,QWORD PTR [rbp+0x50]
   140001d5c:	mov    rdx,QWORD PTR [rbp-0x30]
   140001d60:	add    rdx,0xffffffffffffffe8
   140001d64:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001d69:	jg     0x1400019f9
   140001d6f:	mov    rcx,QWORD PTR [rdx]
   140001d72:	mov    rax,QWORD PTR [rcx]
   140001d75:	call   QWORD PTR [rax+0x8]
   140001d78:	jmp    0x1400019f9
   140001d7d:	lea    rcx,[rip+0x4994]        # 0x140006718
   140001d84:	call   QWORD PTR [rip+0x439e]        # 0x140006128
   140001d8a:	nop
   140001d8b:	call   0x140003530
   140001d90:	nop
   140001d91:	lea    rcx,[rip+0x4980]        # 0x140006718
   140001d98:	call   QWORD PTR [rip+0x438a]        # 0x140006128
   140001d9e:	nop
   140001d9f:	call   0x140003530
   140001da4:	nop
   140001da5:	mov    ecx,0x80070057
   140001daa:	call   0x140001050
   140001daf:	int3   
   140001db0:	mov    ecx,0x80070057
   140001db5:	call   0x140001050
   140001dba:	int3   
   140001dbb:	mov    ecx,0x80070057
   140001dc0:	call   0x140001050
   140001dc5:	int3   
   140001dc6:	mov    ecx,0x80070057
   140001dcb:	call   0x140001050
   140001dd0:	nop
   140001dd1:	lea    rdx,[rax-0x18]
   140001dd5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001dda:	jg     0x140001de5
   140001ddc:	mov    rcx,QWORD PTR [rdx]
   140001ddf:	mov    rax,QWORD PTR [rcx]
   140001de2:	call   QWORD PTR [rax+0x8]
   140001de5:	mov    rax,rdi
   140001de8:	add    rsp,0x58
   140001dec:	pop    r15
   140001dee:	pop    r14
   140001df0:	pop    r13
   140001df2:	pop    r12
   140001df4:	pop    rdi
   140001df5:	pop    rsi
   140001df6:	pop    rbx
   140001df7:	pop    rbp
   140001df8:	ret    
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	rex push rbp
   140001e02:	push   rsi
   140001e03:	push   rdi
   140001e04:	push   r12
   140001e06:	push   r13
   140001e08:	push   r14
   140001e0a:	push   r15
   140001e0c:	lea    rbp,[rsp-0x27]
   140001e11:	sub    rsp,0x90
   140001e18:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   140001e20:	mov    QWORD PTR [rsp+0xd0],rbx
   140001e28:	mov    rbx,rdx
   140001e2b:	mov    rdx,rcx
   140001e2e:	xor    r12d,r12d
   140001e31:	mov    edi,r12d
   140001e34:	mov    DWORD PTR [rbp+0x6f],r12d
   140001e38:	mov    r8,QWORD PTR [rbx]
   140001e3b:	mov    eax,r12d
   140001e3e:	test   r8,r8
   140001e41:	setne  al
   140001e44:	test   eax,eax
   140001e46:	jne    0x140001e53
   140001e48:	mov    ecx,0x80004005
   140001e4d:	call   0x140001050
   140001e52:	int3   
   140001e53:	mov    rax,QWORD PTR [rcx]
   140001e56:	sub    r8,rax
   140001e59:	nop    DWORD PTR [rax+0x0]
   140001e60:	movzx  ecx,WORD PTR [rax]
   140001e63:	cmp    cx,WORD PTR [rax+r8*1]
   140001e68:	jne    0x140001e78
   140001e6a:	add    rax,0x2
   140001e6e:	test   cx,cx
   140001e71:	jne    0x140001e60
   140001e73:	mov    esi,r12d
   140001e76:	jmp    0x140001e7d
   140001e78:	sbb    esi,esi
   140001e7a:	or     esi,0x1
   140001e7d:	test   esi,esi
   140001e7f:	je     0x14000224d
   140001e85:	lea    rcx,[rbp-0x21]
   140001e89:	call   0x1400019a0
   140001e8e:	nop
   140001e8f:	mov    rdx,rbx
   140001e92:	lea    rcx,[rbp-0x39]
   140001e96:	call   0x1400019a0
   140001e9b:	nop
   140001e9c:	mov    rdx,QWORD PTR [rbp-0x31]
   140001ea0:	mov    r15,QWORD PTR [rbp-0x39]
   140001ea4:	sub    rdx,r15
   140001ea7:	sar    rdx,0x3
   140001eab:	mov    QWORD PTR [rbp+0x7],rdx
   140001eaf:	mov    r14,QWORD PTR [rbp-0x19]
   140001eb3:	mov    rcx,r14
   140001eb6:	mov    rbx,QWORD PTR [rbp-0x21]
   140001eba:	sub    rcx,rbx
   140001ebd:	sar    rcx,0x3
   140001ec1:	mov    QWORD PTR [rbp+0xf],rcx
   140001ec5:	lea    rax,[rbp+0x7]
   140001ec9:	lea    r8,[rbp+0xf]
   140001ecd:	cmp    rcx,rdx
   140001ed0:	cmovae rax,r8
   140001ed4:	mov    r13,QWORD PTR [rax]
   140001ed7:	test   r13,r13
   140001eda:	cmovne esi,r12d
   140001ede:	je     0x1400021b6
   140001ee4:	test   esi,esi
   140001ee6:	jne    0x1400021b6
   140001eec:	sub    r14,rbx
   140001eef:	sar    r14,0x3
   140001ef3:	cmp    r12,r14
   140001ef6:	jae    0x140001f20
   140001ef8:	mov    rcx,QWORD PTR [rbx+r12*8]
   140001efc:	sub    rcx,0x18
   140001f00:	call   0x1400035a0
   140001f05:	add    rax,0x18
   140001f09:	mov    QWORD PTR [rbp-0x9],rax
   140001f0d:	lea    rcx,[rbp-0x9]
   140001f11:	or     edi,0x1
   140001f14:	lea    rsi,[rip+0x44ed]        # 0x140006408
   140001f1b:	xor    r14d,r14d
   140001f1e:	jmp    0x140001f91
   140001f20:	call   0x1400012d0
   140001f25:	xor    r14d,r14d
   140001f28:	mov    ecx,r14d
   140001f2b:	test   rax,rax
   140001f2e:	setne  cl
   140001f31:	test   ecx,ecx
   140001f33:	je     0x1400021ab
   140001f39:	mov    rdx,QWORD PTR [rax]
   140001f3c:	mov    rcx,rax
   140001f3f:	call   QWORD PTR [rdx+0x18]
   140001f42:	add    rax,0x18
   140001f46:	mov    QWORD PTR [rbp+0x77],rax
   140001f4a:	lea    rsi,[rip+0x44b7]        # 0x140006408
   140001f51:	test   rsi,0xffffffffffff0000
   140001f58:	jne    0x140001f7a
   140001f5a:	movzx  ebx,si
   140001f5d:	mov    ecx,ebx
   140001f5f:	call   0x140001120
   140001f64:	test   rax,rax
   140001f67:	je     0x140001f8a
   140001f69:	mov    r8d,ebx
   140001f6c:	mov    rdx,rax
   140001f6f:	lea    rcx,[rbp+0x77]
   140001f73:	call   0x140003820
   140001f78:	jmp    0x140001f8a
   140001f7a:	xor    r8d,r8d
   140001f7d:	mov    rdx,rsi
   140001f80:	lea    rcx,[rbp+0x77]
   140001f84:	call   0x140003430
   140001f89:	nop
   140001f8a:	lea    rcx,[rbp+0x77]
   140001f8e:	or     edi,0x2
   140001f91:	mov    DWORD PTR [rbp+0x6f],edi
   140001f94:	mov    rcx,QWORD PTR [rcx]
   140001f97:	sub    rcx,0x18
   140001f9b:	call   0x1400035a0
   140001fa0:	add    rax,0x18
   140001fa4:	mov    QWORD PTR [rbp-0x41],rax
   140001fa8:	test   dil,0x2
   140001fac:	je     0x140001fcf
   140001fae:	and    edi,0xfffffffd
   140001fb1:	mov    DWORD PTR [rbp+0x6f],edi
   140001fb4:	mov    rdx,QWORD PTR [rbp+0x77]
   140001fb8:	add    rdx,0xffffffffffffffe8
   140001fbc:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001fc1:	jg     0x140001fcc
   140001fc3:	mov    rcx,QWORD PTR [rdx]
   140001fc6:	mov    rax,QWORD PTR [rcx]
   140001fc9:	call   QWORD PTR [rax+0x8]
   140001fcc:	mov    edi,DWORD PTR [rbp+0x6f]
   140001fcf:	test   dil,0x1
   140001fd3:	je     0x140001ff6
   140001fd5:	and    edi,0xfffffffe
   140001fd8:	mov    DWORD PTR [rbp+0x6f],edi
   140001fdb:	mov    rdx,QWORD PTR [rbp-0x9]
   140001fdf:	add    rdx,0xffffffffffffffe8
   140001fe3:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001fe8:	jg     0x140001ff3
   140001fea:	mov    rcx,QWORD PTR [rdx]
   140001fed:	mov    rax,QWORD PTR [rcx]
   140001ff0:	call   QWORD PTR [rax+0x8]
   140001ff3:	mov    edi,DWORD PTR [rbp+0x6f]
   140001ff6:	mov    rax,QWORD PTR [rbp-0x31]
   140001ffa:	mov    rcx,QWORD PTR [rbp-0x39]
   140001ffe:	sub    rax,rcx
   140002001:	sar    rax,0x3
   140002005:	cmp    r12,rax
   140002008:	jae    0x140002028
   14000200a:	mov    rcx,QWORD PTR [rcx+r12*8]
   14000200e:	sub    rcx,0x18
   140002012:	call   0x1400035a0
   140002017:	add    rax,0x18
   14000201b:	mov    QWORD PTR [rbp-0x1],rax
   14000201f:	lea    rcx,[rbp-0x1]
   140002023:	or     edi,0x4
   140002026:	jmp    0x14000208f
   140002028:	call   0x1400012d0
   14000202d:	mov    ecx,r14d
   140002030:	test   rax,rax
   140002033:	setne  cl
   140002036:	test   ecx,ecx
   140002038:	je     0x1400021a0
   14000203e:	mov    rdx,QWORD PTR [rax]
   140002041:	mov    rcx,rax
   140002044:	call   QWORD PTR [rdx+0x18]
   140002047:	add    rax,0x18
   14000204b:	mov    QWORD PTR [rbp+0x7f],rax
   14000204f:	test   rsi,0xffffffffffff0000
   140002056:	jne    0x140002078
   140002058:	movzx  ebx,si
   14000205b:	mov    ecx,ebx
   14000205d:	call   0x140001120
   140002062:	test   rax,rax
   140002065:	je     0x140002088
   140002067:	mov    r8d,ebx
   14000206a:	mov    rdx,rax
   14000206d:	lea    rcx,[rbp+0x7f]
   140002071:	call   0x140003820
   140002076:	jmp    0x140002088
   140002078:	xor    r8d,r8d
   14000207b:	mov    rdx,rsi
   14000207e:	lea    rcx,[rbp+0x7f]
   140002082:	call   0x140003430
   140002087:	nop
   140002088:	lea    rcx,[rbp+0x7f]
   14000208c:	or     edi,0x8
   14000208f:	mov    DWORD PTR [rbp+0x6f],edi
   140002092:	mov    rcx,QWORD PTR [rcx]
   140002095:	sub    rcx,0x18
   140002099:	call   0x1400035a0
   14000209e:	lea    rbx,[rax+0x18]
   1400020a2:	mov    QWORD PTR [rbp-0x49],rbx
   1400020a6:	test   dil,0x8
   1400020aa:	je     0x1400020d1
   1400020ac:	and    edi,0xfffffff7
   1400020af:	mov    DWORD PTR [rbp+0x6f],edi
   1400020b2:	mov    rdx,QWORD PTR [rbp+0x7f]
   1400020b6:	add    rdx,0xffffffffffffffe8
   1400020ba:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400020bf:	jg     0x1400020ca
   1400020c1:	mov    rcx,QWORD PTR [rdx]
   1400020c4:	mov    rax,QWORD PTR [rcx]
   1400020c7:	call   QWORD PTR [rax+0x8]
   1400020ca:	mov    edi,DWORD PTR [rbp+0x6f]
   1400020cd:	mov    rbx,QWORD PTR [rbp-0x49]
   1400020d1:	test   dil,0x4
   1400020d5:	je     0x1400020f9
   1400020d7:	and    edi,0xfffffffb
   1400020da:	mov    DWORD PTR [rbp+0x6f],edi
   1400020dd:	mov    rdx,QWORD PTR [rbp-0x1]
   1400020e1:	add    rdx,0xffffffffffffffe8
   1400020e5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400020ea:	jg     0x1400020f5
   1400020ec:	mov    rcx,QWORD PTR [rdx]
   1400020ef:	mov    rax,QWORD PTR [rcx]
   1400020f2:	call   QWORD PTR [rax+0x8]
   1400020f5:	mov    rbx,QWORD PTR [rbp-0x49]
   1400020f9:	test   r12,r12
   1400020fc:	jne    0x140002119
   1400020fe:	mov    rcx,rbx
   140002101:	call   QWORD PTR [rip+0x4049]        # 0x140006150
   140002107:	mov    edi,eax
   140002109:	mov    rcx,QWORD PTR [rbp-0x41]
   14000210d:	call   QWORD PTR [rip+0x403d]        # 0x140006150
   140002113:	mov    esi,eax
   140002115:	sub    esi,edi
   140002117:	jmp    0x14000214c
   140002119:	mov    eax,r14d
   14000211c:	test   rbx,rbx
   14000211f:	setne  al
   140002122:	test   eax,eax
   140002124:	je     0x140002195
   140002126:	mov    rax,QWORD PTR [rbp-0x41]
   14000212a:	mov    rdx,rbx
   14000212d:	sub    rdx,rax
   140002130:	movzx  ecx,WORD PTR [rax]
   140002133:	cmp    cx,WORD PTR [rax+rdx*1]
   140002137:	jne    0x140002147
   140002139:	add    rax,0x2
   14000213d:	test   cx,cx
   140002140:	jne    0x140002130
   140002142:	mov    esi,r14d
   140002145:	jmp    0x14000214c
   140002147:	sbb    esi,esi
   140002149:	or     esi,0x1
   14000214c:	lea    rdx,[rbx-0x18]
   140002150:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002155:	jg     0x140002161
   140002157:	mov    rcx,QWORD PTR [rdx]
   14000215a:	mov    rax,QWORD PTR [rcx]
   14000215d:	call   QWORD PTR [rax+0x8]
   140002160:	nop
   140002161:	mov    rdx,QWORD PTR [rbp-0x41]
   140002165:	add    rdx,0xffffffffffffffe8
   140002169:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000216e:	jg     0x140002179
   140002170:	mov    rcx,QWORD PTR [rdx]
   140002173:	mov    rax,QWORD PTR [rcx]
   140002176:	call   QWORD PTR [rax+0x8]
   140002179:	inc    r12
   14000217c:	mov    r14,QWORD PTR [rbp-0x19]
   140002180:	mov    rbx,QWORD PTR [rbp-0x21]
   140002184:	mov    r15,QWORD PTR [rbp-0x39]
   140002188:	cmp    r12,r13
   14000218b:	jae    0x1400021b6
   14000218d:	mov    edi,DWORD PTR [rbp+0x6f]
   140002190:	jmp    0x140001ee4
   140002195:	mov    ecx,0x80004005
   14000219a:	call   0x140001050
   14000219f:	nop
   1400021a0:	mov    ecx,0x80004005
   1400021a5:	call   0x140001050
   1400021aa:	nop
   1400021ab:	mov    ecx,0x80004005
   1400021b0:	call   0x140001050
   1400021b5:	nop
   1400021b6:	test   r15,r15
   1400021b9:	je     0x140002215
   1400021bb:	mov    rbx,QWORD PTR [rbp-0x31]
   1400021bf:	cmp    r15,rbx
   1400021c2:	je     0x1400021f4
   1400021c4:	nop    DWORD PTR [rax+0x0]
   1400021c8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400021d0:	mov    rdx,QWORD PTR [r15]
   1400021d3:	sub    rdx,0x18
   1400021d7:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400021dc:	jg     0x1400021e7
   1400021de:	mov    rcx,QWORD PTR [rdx]
   1400021e1:	mov    rax,QWORD PTR [rcx]
   1400021e4:	call   QWORD PTR [rax+0x8]
   1400021e7:	add    r15,0x8
   1400021eb:	cmp    r15,rbx
   1400021ee:	jne    0x1400021d0
   1400021f0:	mov    r15,QWORD PTR [rbp-0x39]
   1400021f4:	mov    rcx,r15
   1400021f7:	call   QWORD PTR [rip+0x408b]        # 0x140006288
   1400021fd:	xorps  xmm0,xmm0
   140002200:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140002205:	mov    QWORD PTR [rbp-0x29],0x0
   14000220d:	mov    r14,QWORD PTR [rbp-0x19]
   140002211:	mov    rbx,QWORD PTR [rbp-0x21]
   140002215:	test   rbx,rbx
   140002218:	je     0x14000224d
   14000221a:	cmp    rbx,r14
   14000221d:	je     0x140002244
   14000221f:	nop
   140002220:	mov    rdx,QWORD PTR [rbx]
   140002223:	sub    rdx,0x18
   140002227:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000222c:	jg     0x140002237
   14000222e:	mov    rcx,QWORD PTR [rdx]
   140002231:	mov    rax,QWORD PTR [rcx]
   140002234:	call   QWORD PTR [rax+0x8]
   140002237:	add    rbx,0x8
   14000223b:	cmp    rbx,r14
   14000223e:	jne    0x140002220
   140002240:	mov    rbx,QWORD PTR [rbp-0x21]
   140002244:	mov    rcx,rbx
   140002247:	call   QWORD PTR [rip+0x403b]        # 0x140006288
   14000224d:	mov    eax,esi
   14000224f:	mov    rbx,QWORD PTR [rsp+0xd0]
   140002257:	add    rsp,0x90
   14000225e:	pop    r15
   140002260:	pop    r14
   140002262:	pop    r13
   140002264:	pop    r12
   140002266:	pop    rdi
   140002267:	pop    rsi
   140002268:	pop    rbp
   140002269:	ret    
   14000226a:	int3   
   14000226b:	int3   
   14000226c:	int3   
   14000226d:	int3   
   14000226e:	int3   
   14000226f:	int3   
   140002270:	mov    DWORD PTR [rsp+0x10],edx
   140002274:	mov    QWORD PTR [rsp+0x8],rcx
   140002279:	push   rbp
   14000227a:	push   rbx
   14000227b:	push   rsi
   14000227c:	push   rdi
   14000227d:	push   r12
   14000227f:	push   r13
   140002281:	push   r14
   140002283:	push   r15
   140002285:	lea    rbp,[rsp-0x1f]
   14000228a:	sub    rsp,0xd8
   140002291:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   140002299:	mov    ebx,edx
   14000229b:	xor    esi,esi
   14000229d:	mov    DWORD PTR [rbp-0x49],esi
   1400022a0:	mov    QWORD PTR [rbp-0x41],rsi
   1400022a4:	mov    QWORD PTR [rbp-0x69],rsi
   1400022a8:	lea    rax,[rbp-0x69]
   1400022ac:	mov    QWORD PTR [rsp+0x20],rax
   1400022b1:	mov    r9d,edx
   1400022b4:	xor    r8d,r8d
   1400022b7:	lea    rdx,[rip+0x43d2]        # 0x140006690
   1400022be:	mov    rcx,0xffffffff80000002
   1400022c5:	call   QWORD PTR [rip+0x3d3d]        # 0x140006008
   1400022cb:	test   eax,eax
   1400022cd:	jne    0x14000264e
   1400022d3:	mov    r14,QWORD PTR [rbp-0x69]
   1400022d7:	mov    QWORD PTR [rbp-0x51],r14
   1400022db:	mov    r13d,ebx
   1400022de:	and    r13d,0x300
   1400022e5:	mov    DWORD PTR [rbp-0x49],r13d
   1400022e9:	mov    r12d,esi
   1400022ec:	call   0x1400012d0
   1400022f1:	mov    rdx,rax
   1400022f4:	mov    ecx,esi
   1400022f6:	test   rax,rax
   1400022f9:	setne  cl
   1400022fc:	test   ecx,ecx
   1400022fe:	je     0x140002643
   140002304:	mov    rax,QWORD PTR [rdx]
   140002307:	mov    rcx,rdx
   14000230a:	call   QWORD PTR [rax+0x18]
   14000230d:	lea    rbx,[rax+0x18]
   140002311:	mov    QWORD PTR [rbp-0x79],rbx
   140002315:	mov    DWORD PTR [rbp+0x77],0x104
   14000231c:	mov    ecx,0x1
   140002321:	sub    ecx,DWORD PTR [rbx-0x8]
   140002324:	mov    eax,DWORD PTR [rbx-0xc]
   140002327:	sub    eax,0x104
   14000232c:	or     eax,ecx
   14000232e:	jge    0x140002342
   140002330:	mov    edx,0x104
   140002335:	lea    rcx,[rbp-0x79]
   140002339:	call   0x140003540
   14000233e:	mov    rbx,QWORD PTR [rbp-0x79]
   140002342:	lea    rax,[rbp-0x9]
   140002346:	mov    QWORD PTR [rsp+0x38],rax
   14000234b:	mov    QWORD PTR [rsp+0x30],rsi
   140002350:	mov    QWORD PTR [rsp+0x28],rsi
   140002355:	mov    QWORD PTR [rsp+0x20],rsi
   14000235a:	lea    r9,[rbp+0x77]
   14000235e:	mov    r8,rbx
   140002361:	mov    edx,r12d
   140002364:	mov    rcx,r14
   140002367:	call   QWORD PTR [rip+0x3c93]        # 0x140006000
   14000236d:	mov    edi,eax
   14000236f:	mov    eax,DWORD PTR [rbp+0x77]
   140002372:	cmp    eax,0xffffffff
   140002375:	jne    0x140002384
   140002377:	movsxd rdx,DWORD PTR [rbx-0xc]
   14000237b:	mov    rcx,rbx
   14000237e:	call   QWORD PTR [rip+0x3dd4]        # 0x140006158
   140002384:	test   eax,eax
   140002386:	js     0x140002638
   14000238c:	cmp    eax,DWORD PTR [rbx-0xc]
   14000238f:	jg     0x140002638
   140002395:	mov    DWORD PTR [rbx-0x10],eax
   140002398:	cdqe   
   14000239a:	mov    WORD PTR [rbx+rax*2],si
   14000239e:	test   edi,edi
   1400023a0:	jne    0x14000261e
   1400023a6:	mov    rdi,rsi
   1400023a9:	mov    QWORD PTR [rbp-0x39],rsi
   1400023ad:	mov    QWORD PTR [rbp-0x29],rsi
   1400023b1:	mov    QWORD PTR [rbp-0x59],rsi
   1400023b5:	lea    rax,[rbp-0x59]
   1400023b9:	mov    QWORD PTR [rsp+0x20],rax
   1400023be:	mov    r9d,DWORD PTR [rbp+0x6f]
   1400023c2:	xor    r8d,r8d
   1400023c5:	mov    rdx,rbx
   1400023c8:	mov    rcx,r14
   1400023cb:	call   QWORD PTR [rip+0x3c37]        # 0x140006008
   1400023d1:	test   eax,eax
   1400023d3:	jne    0x1400025b6
   1400023d9:	mov    r14,QWORD PTR [rbp-0x59]
   1400023dd:	mov    QWORD PTR [rbp-0x39],r14
   1400023e1:	mov    DWORD PTR [rbp-0x31],r13d
   1400023e5:	call   0x1400012d0
   1400023ea:	mov    ecx,esi
   1400023ec:	test   rax,rax
   1400023ef:	setne  cl
   1400023f2:	test   ecx,ecx
   1400023f4:	je     0x140002613
   1400023fa:	mov    rdx,QWORD PTR [rax]
   1400023fd:	mov    rcx,rax
   140002400:	call   QWORD PTR [rdx+0x18]
   140002403:	lea    rdi,[rax+0x18]
   140002407:	mov    QWORD PTR [rbp-0x71],rdi
   14000240b:	mov    edx,0x104
   140002410:	mov    DWORD PTR [rbp+0x77],edx
   140002413:	mov    ecx,0x1
   140002418:	sub    ecx,DWORD PTR [rdi-0x8]
   14000241b:	mov    eax,DWORD PTR [rdi-0xc]
   14000241e:	sub    eax,edx
   140002420:	or     eax,ecx
   140002422:	jge    0x140002434
   140002424:	lea    rcx,[rbp-0x71]
   140002428:	call   0x140003540
   14000242d:	mov    edx,DWORD PTR [rbp+0x77]
   140002430:	mov    rdi,QWORD PTR [rbp-0x71]
   140002434:	lea    eax,[rdx+rdx*1]
   140002437:	mov    DWORD PTR [rbp+0x7f],eax
   14000243a:	mov    DWORD PTR [rbp+0x77],esi
   14000243d:	lea    rax,[rbp+0x7f]
   140002441:	mov    QWORD PTR [rsp+0x28],rax
   140002446:	mov    QWORD PTR [rsp+0x20],rdi
   14000244b:	lea    r9,[rbp-0x61]
   14000244f:	xor    r8d,r8d
   140002452:	lea    rdx,[rip+0x426f]        # 0x1400066c8
   140002459:	mov    rcx,r14
   14000245c:	call   QWORD PTR [rip+0x3bae]        # 0x140006010
   140002462:	mov    r14d,eax
   140002465:	test   eax,eax
   140002467:	jne    0x1400024ac
   140002469:	mov    eax,DWORD PTR [rbp-0x61]
   14000246c:	dec    eax
   14000246e:	cmp    eax,0x1
   140002471:	jbe    0x14000247b
   140002473:	mov    r14d,0xd
   140002479:	jmp    0x1400024ac
   14000247b:	mov    ecx,DWORD PTR [rbp+0x7f]
   14000247e:	test   rdi,rdi
   140002481:	je     0x1400024a4
   140002483:	test   ecx,ecx
   140002485:	je     0x1400024a1
   140002487:	test   cl,0x1
   14000248a:	jne    0x140002499
   14000248c:	mov    eax,ecx
   14000248e:	shr    rax,1
   140002491:	cmp    WORD PTR [rdi+rax*2-0x2],0x0
   140002497:	je     0x1400024a4
   140002499:	mov    r14d,0xd
   14000249f:	jmp    0x1400024ac
   1400024a1:	mov    WORD PTR [rdi],si
   1400024a4:	shr    ecx,1
   1400024a6:	mov    DWORD PTR [rbp+0x77],ecx
   1400024a9:	mov    r14d,esi
   1400024ac:	mov    eax,DWORD PTR [rbp+0x77]
   1400024af:	dec    eax
   1400024b1:	cmp    eax,0xffffffff
   1400024b4:	jne    0x1400024c3
   1400024b6:	movsxd rdx,DWORD PTR [rdi-0xc]
   1400024ba:	mov    rcx,rdi
   1400024bd:	call   QWORD PTR [rip+0x3c95]        # 0x140006158
   1400024c3:	test   eax,eax
   1400024c5:	js     0x140002608
   1400024cb:	cmp    eax,DWORD PTR [rdi-0xc]
   1400024ce:	jg     0x140002608
   1400024d4:	mov    DWORD PTR [rdi-0x10],eax
   1400024d7:	cdqe   
   1400024d9:	mov    WORD PTR [rdi+rax*2],si
   1400024dd:	test   r14d,r14d
   1400024e0:	jne    0x14000259a
   1400024e6:	movsxd rdi,DWORD PTR [rbx-0x10]
   1400024ea:	test   edi,edi
   1400024ec:	js     0x1400025fd
   1400024f2:	mov    ecx,0x1
   1400024f7:	sub    ecx,DWORD PTR [rbx-0x8]
   1400024fa:	mov    eax,DWORD PTR [rbx-0xc]
   1400024fd:	sub    eax,edi
   1400024ff:	or     eax,ecx
   140002501:	jge    0x140002512
   140002503:	mov    edx,edi
   140002505:	lea    rcx,[rbp-0x79]
   140002509:	call   0x140003540
   14000250e:	mov    rbx,QWORD PTR [rbp-0x79]
   140002512:	lea    eax,[rdi+0x1]
   140002515:	movsxd rdx,eax
   140002518:	mov    rcx,rbx
   14000251b:	call   QWORD PTR [rip+0x3c57]        # 0x140006178
   140002521:	cmp    edi,DWORD PTR [rbx-0xc]
   140002524:	jg     0x1400025f2
   14000252a:	mov    DWORD PTR [rbx-0x10],edi
   14000252d:	mov    WORD PTR [rbx+rdi*2],si
   140002531:	lea    r8,[rbp-0x71]
   140002535:	lea    rdx,[rbp-0x79]
   140002539:	lea    rcx,[rbp-0x21]
   14000253d:	call   0x1400041f0
   140002542:	nop
   140002543:	mov    rdx,rax
   140002546:	mov    rcx,QWORD PTR [rbp+0x67]
   14000254a:	call   0x140004340
   14000254f:	lea    r9,[rax+0x20]
   140002553:	mov    QWORD PTR [rsp+0x20],rax
   140002558:	lea    rdx,[rbp-0x1]
   14000255c:	mov    rcx,QWORD PTR [rbp+0x67]
   140002560:	call   0x1400043c0
   140002565:	nop
   140002566:	mov    rdx,QWORD PTR [rbp-0x19]
   14000256a:	add    rdx,0xffffffffffffffe8
   14000256e:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002573:	jg     0x14000257e
   140002575:	mov    rcx,QWORD PTR [rdx]
   140002578:	mov    rax,QWORD PTR [rcx]
   14000257b:	call   QWORD PTR [rax+0x8]
   14000257e:	mov    rdx,QWORD PTR [rbp-0x21]
   140002582:	add    rdx,0xffffffffffffffe8
   140002586:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000258b:	jg     0x140002596
   14000258d:	mov    rcx,QWORD PTR [rdx]
   140002590:	mov    rax,QWORD PTR [rcx]
   140002593:	call   QWORD PTR [rax+0x8]
   140002596:	mov    rdi,QWORD PTR [rbp-0x71]
   14000259a:	lea    rdx,[rdi-0x18]
   14000259e:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400025a3:	jg     0x1400025ae
   1400025a5:	mov    rcx,QWORD PTR [rdx]
   1400025a8:	mov    rax,QWORD PTR [rcx]
   1400025ab:	call   QWORD PTR [rax+0x8]
   1400025ae:	mov    rdi,QWORD PTR [rbp-0x39]
   1400025b2:	mov    rbx,QWORD PTR [rbp-0x79]
   1400025b6:	test   rdi,rdi
   1400025b9:	je     0x1400025c5
   1400025bb:	mov    rcx,rdi
   1400025be:	call   QWORD PTR [rip+0x3a54]        # 0x140006018
   1400025c4:	nop
   1400025c5:	lea    rdx,[rbx-0x18]
   1400025c9:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400025ce:	jg     0x1400025d9
   1400025d0:	mov    rcx,QWORD PTR [rdx]
   1400025d3:	mov    rax,QWORD PTR [rcx]
   1400025d6:	call   QWORD PTR [rax+0x8]
   1400025d9:	inc    r12d
   1400025dc:	call   0x1400012d0
   1400025e1:	mov    rdx,rax
   1400025e4:	test   rax,rax
   1400025e7:	je     0x140002643
   1400025e9:	mov    r14,QWORD PTR [rbp-0x69]
   1400025ed:	jmp    0x140002304
   1400025f2:	mov    ecx,0x80070057
   1400025f7:	call   0x140001050
   1400025fc:	int3   
   1400025fd:	mov    ecx,0x80070057
   140002602:	call   0x140001050
   140002607:	int3   
   140002608:	mov    ecx,0x80070057
   14000260d:	call   0x140001050
   140002612:	nop
   140002613:	mov    ecx,0x80004005
   140002618:	call   0x140001050
   14000261d:	nop
   14000261e:	lea    rdx,[rbx-0x18]
   140002622:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002627:	jg     0x140002632
   140002629:	mov    rcx,QWORD PTR [rdx]
   14000262c:	mov    rax,QWORD PTR [rcx]
   14000262f:	call   QWORD PTR [rax+0x8]
   140002632:	mov    rsi,QWORD PTR [rbp-0x51]
   140002636:	jmp    0x14000264e
   140002638:	mov    ecx,0x80070057
   14000263d:	call   0x140001050
   140002642:	nop
   140002643:	mov    ecx,0x80004005
   140002648:	call   0x140001050
   14000264d:	nop
   14000264e:	test   rsi,rsi
   140002651:	je     0x14000265c
   140002653:	mov    rcx,rsi
   140002656:	call   QWORD PTR [rip+0x39bc]        # 0x140006018
   14000265c:	add    rsp,0xd8
   140002663:	pop    r15
   140002665:	pop    r14
   140002667:	pop    r13
   140002669:	pop    r12
   14000266b:	pop    rdi
   14000266c:	pop    rsi
   14000266d:	pop    rbx
   14000266e:	pop    rbp
   14000266f:	ret    
   140002670:	mov    QWORD PTR [rsp+0x8],rbx
   140002675:	push   rdi
   140002676:	sub    rsp,0x20
   14000267a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000267e:	mov    rdi,rcx
   140002681:	sub    rdx,0x18
   140002685:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000268a:	jg     0x140002695
   14000268c:	mov    rcx,QWORD PTR [rdx]
   14000268f:	mov    rax,QWORD PTR [rcx]
   140002692:	call   QWORD PTR [rax+0x8]
   140002695:	mov    rdx,QWORD PTR [rdi]
   140002698:	sub    rdx,0x18
   14000269c:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400026a1:	jg     0x1400026ac
   1400026a3:	mov    rcx,QWORD PTR [rdx]
   1400026a6:	mov    rax,QWORD PTR [rcx]
   1400026a9:	call   QWORD PTR [rax+0x8]
   1400026ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026b1:	add    rsp,0x20
   1400026b5:	pop    rdi
   1400026b6:	ret    
   1400026b7:	int3   
   1400026b8:	int3   
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400026c5:	push   rbx
   1400026c6:	sub    rsp,0x60
   1400026ca:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400026d3:	mov    rbx,rcx
   1400026d6:	xor    eax,eax
   1400026d8:	mov    DWORD PTR [rsp+0x20],eax
   1400026dc:	mov    QWORD PTR [rcx],rax
   1400026df:	mov    QWORD PTR [rcx+0x8],rax
   1400026e3:	call   0x140004170
   1400026e8:	mov    QWORD PTR [rbx],rax
   1400026eb:	mov    DWORD PTR [rsp+0x20],0x1
   1400026f3:	mov    edx,0x20019
   1400026f8:	mov    rcx,rbx
   1400026fb:	call   0x140002270
   140002700:	xor    eax,eax
   140002702:	mov    QWORD PTR [rsp+0x30],rax
   140002707:	mov    QWORD PTR [rsp+0x38],rax
   14000270c:	mov    QWORD PTR [rsp+0x40],rax
   140002711:	mov    QWORD PTR [rsp+0x48],rax
   140002716:	mov    QWORD PTR [rsp+0x50],rax
   14000271b:	mov    QWORD PTR [rsp+0x58],rax
   140002720:	lea    rcx,[rsp+0x30]
   140002725:	call   QWORD PTR [rip+0x39c5]        # 0x1400060f0
   14000272b:	mov    rax,QWORD PTR [rsp+0x30]
   140002730:	cmp    ax,0x9
   140002734:	je     0x14000273c
   140002736:	cmp    ax,0x6
   14000273a:	jne    0x140002749
   14000273c:	mov    edx,0x20219
   140002741:	mov    rcx,rbx
   140002744:	call   0x140002270
   140002749:	mov    rax,rbx
   14000274c:	add    rsp,0x60
   140002750:	pop    rbx
   140002751:	ret    
   140002752:	int3   
   140002753:	int3   
   140002754:	int3   
   140002755:	int3   
   140002756:	int3   
   140002757:	int3   
   140002758:	int3   
   140002759:	int3   
   14000275a:	int3   
   14000275b:	int3   
   14000275c:	int3   
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	rex push rbx
   140002762:	sub    rsp,0x20
   140002766:	mov    r8,QWORD PTR [rcx]
   140002769:	lea    rdx,[rsp+0x30]
   14000276e:	mov    rbx,rcx
   140002771:	mov    r9,r8
   140002774:	mov    r8,QWORD PTR [r8]
   140002777:	call   0x140003720
   14000277c:	mov    rcx,QWORD PTR [rbx]
   14000277f:	add    rsp,0x20
   140002783:	pop    rbx
   140002784:	rex.W jmp QWORD PTR [rip+0x3afd]        # 0x140006288
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	rex push rbp
   140002792:	push   rbx
   140002793:	push   rsi
   140002794:	push   rdi
   140002795:	push   r14
   140002797:	mov    rbp,rsp
   14000279a:	sub    rsp,0x60
   14000279e:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400027a6:	mov    r14,rcx
   1400027a9:	xor    sil,sil
   1400027ac:	lea    rcx,[rbp-0x18]
   1400027b0:	call   0x1400026c0
   1400027b5:	nop
   1400027b6:	cmp    QWORD PTR [rbp-0x10],0x0
   1400027bb:	je     0x140002b81
   1400027c1:	lea    rcx,[rbp-0x40]
   1400027c5:	call   0x140001770
   1400027ca:	nop
   1400027cb:	mov    rax,QWORD PTR [rbp-0x40]
   1400027cf:	cmp    DWORD PTR [rax-0x10],0x0
   1400027d3:	je     0x1400028a6
   1400027d9:	mov    r11,QWORD PTR [rbp-0x18]
   1400027dd:	mov    r8,QWORD PTR [r11+0x8]
   1400027e1:	mov    r10,r11
   1400027e4:	cmp    BYTE PTR [r8+0x19],sil
   1400027e8:	jne    0x14000287f
   1400027ee:	xchg   ax,ax
   1400027f0:	mov    rcx,QWORD PTR [r8+0x20]
   1400027f4:	mov    r9,rax
   1400027f7:	sub    r9,rcx
   1400027fa:	nop    WORD PTR [rax+rax*1+0x0]
   140002800:	movzx  edx,WORD PTR [rcx]
   140002803:	cmp    dx,WORD PTR [rcx+r9*1]
   140002808:	jne    0x140002817
   14000280a:	add    rcx,0x2
   14000280e:	test   dx,dx
   140002811:	jne    0x140002800
   140002813:	xor    ecx,ecx
   140002815:	jmp    0x14000281c
   140002817:	sbb    ecx,ecx
   140002819:	or     ecx,0x1
   14000281c:	test   ecx,ecx
   14000281e:	jns    0x140002826
   140002820:	mov    r8,QWORD PTR [r8+0x10]
   140002824:	jmp    0x14000282c
   140002826:	mov    r10,r8
   140002829:	mov    r8,QWORD PTR [r8]
   14000282c:	cmp    BYTE PTR [r8+0x19],0x0
   140002831:	je     0x1400027f0
   140002833:	cmp    r10,r11
   140002836:	je     0x14000287f
   140002838:	mov    rdx,QWORD PTR [r10+0x20]
   14000283c:	xor    ecx,ecx
   14000283e:	test   rdx,rdx
   140002841:	setne  cl
   140002844:	test   ecx,ecx
   140002846:	jne    0x140002853
   140002848:	mov    ecx,0x80004005
   14000284d:	call   0x140001050
   140002852:	int3   
   140002853:	sub    rdx,rax
   140002856:	movzx  ecx,WORD PTR [rax]
   140002859:	cmp    cx,WORD PTR [rax+rdx*1]
   14000285d:	jne    0x14000286c
   14000285f:	add    rax,0x2
   140002863:	test   cx,cx
   140002866:	jne    0x140002856
   140002868:	xor    eax,eax
   14000286a:	jmp    0x140002871
   14000286c:	sbb    eax,eax
   14000286e:	or     eax,0x1
   140002871:	test   eax,eax
   140002873:	js     0x14000287f
   140002875:	mov    QWORD PTR [rbp-0x38],r10
   140002879:	lea    rcx,[rbp-0x38]
   14000287d:	jmp    0x140002887
   14000287f:	mov    QWORD PTR [rbp-0x30],r11
   140002883:	lea    rcx,[rbp-0x30]
   140002887:	mov    rcx,QWORD PTR [rcx]
   14000288a:	cmp    rcx,r11
   14000288d:	je     0x1400028a6
   14000288f:	add    rcx,0x28
   140002893:	mov    rdx,r14
   140002896:	call   0x140002c20
   14000289b:	movzx  esi,al
   14000289e:	test   al,al
   1400028a0:	jne    0x140002b68
   1400028a6:	call   0x1400012d0
   1400028ab:	mov    rdx,rax
   1400028ae:	xor    ecx,ecx
   1400028b0:	test   rax,rax
   1400028b3:	setne  cl
   1400028b6:	test   ecx,ecx
   1400028b8:	jne    0x1400028c5
   1400028ba:	mov    ecx,0x80004005
   1400028bf:	call   0x140001050
   1400028c4:	int3   
   1400028c5:	mov    rax,QWORD PTR [rax]
   1400028c8:	mov    rcx,rdx
   1400028cb:	call   QWORD PTR [rax+0x18]
   1400028ce:	lea    rdi,[rax+0x18]
   1400028d2:	mov    QWORD PTR [rbp+0x38],rdi
   1400028d6:	call   0x1400012d0
   1400028db:	mov    rdx,rax
   1400028de:	xor    ecx,ecx
   1400028e0:	test   rax,rax
   1400028e3:	setne  cl
   1400028e6:	test   ecx,ecx
   1400028e8:	jne    0x1400028f5
   1400028ea:	mov    ecx,0x80004005
   1400028ef:	call   0x140001050
   1400028f4:	int3   
   1400028f5:	mov    rax,QWORD PTR [rax]
   1400028f8:	mov    rcx,rdx
   1400028fb:	call   QWORD PTR [rax+0x18]
   1400028fe:	add    rax,0x18
   140002902:	mov    QWORD PTR [rbp+0x40],rax
   140002906:	call   0x1400012d0
   14000290b:	mov    rdx,rax
   14000290e:	xor    ecx,ecx
   140002910:	test   rax,rax
   140002913:	setne  cl
   140002916:	test   ecx,ecx
   140002918:	jne    0x140002925
   14000291a:	mov    ecx,0x80004005
   14000291f:	call   0x140001050
   140002924:	int3   
   140002925:	mov    rax,QWORD PTR [rax]
   140002928:	mov    rcx,rdx
   14000292b:	call   QWORD PTR [rax+0x18]
   14000292e:	add    rax,0x18
   140002932:	mov    QWORD PTR [rbp+0x48],rax
   140002936:	mov    rax,QWORD PTR [rbp-0x18]
   14000293a:	mov    rbx,QWORD PTR [rax]
   14000293d:	cmp    rbx,rax
   140002940:	je     0x140002b1d
   140002946:	cmp    DWORD PTR [rdi-0x10],0x0
   14000294a:	je     0x140002961
   14000294c:	lea    rdx,[rbx+0x20]
   140002950:	lea    rcx,[rbp+0x38]
   140002954:	call   0x140001e00
   140002959:	test   eax,eax
   14000295b:	jns    0x140002ab6
   140002961:	call   0x1400012d0
   140002966:	xor    ecx,ecx
   140002968:	test   rax,rax
   14000296b:	setne  cl
   14000296e:	test   ecx,ecx
   140002970:	je     0x140002b12
   140002976:	mov    rdx,QWORD PTR [rax]
   140002979:	mov    rcx,rax
   14000297c:	call   QWORD PTR [rdx+0x18]
   14000297f:	add    rax,0x18
   140002983:	mov    QWORD PTR [rbp-0x28],rax
   140002987:	lea    rcx,[rbx+0x28]
   14000298b:	lea    rdx,[rbp+0x48]
   14000298f:	call   0x140002c20
   140002994:	test   al,al
   140002996:	je     0x140002a9a
   14000299c:	mov    rdx,QWORD PTR [rbx+0x20]
   1400029a0:	lea    rcx,[rdx-0x18]
   1400029a4:	add    rdi,0xffffffffffffffe8
   1400029a8:	cmp    rcx,rdi
   1400029ab:	je     0x1400029ee
   1400029ad:	cmp    DWORD PTR [rdi+0x10],0x0
   1400029b1:	jl     0x1400029e1
   1400029b3:	mov    rax,QWORD PTR [rdi]
   1400029b6:	cmp    QWORD PTR [rcx],rax
   1400029b9:	jne    0x1400029e1
   1400029bb:	call   0x1400035a0
   1400029c0:	mov    rsi,rax
   1400029c3:	lock add DWORD PTR [rdi+0x10],0xffffffff
   1400029c8:	jg     0x1400029d7
   1400029ca:	mov    rcx,QWORD PTR [rdi]
   1400029cd:	mov    r8,QWORD PTR [rcx]
   1400029d0:	mov    rdx,rdi
   1400029d3:	call   QWORD PTR [r8+0x8]
   1400029d7:	lea    rax,[rsi+0x18]
   1400029db:	mov    QWORD PTR [rbp+0x38],rax
   1400029df:	jmp    0x1400029ee
   1400029e1:	mov    r8d,DWORD PTR [rdx-0x10]
   1400029e5:	lea    rcx,[rbp+0x38]
   1400029e9:	call   0x140003430
   1400029ee:	mov    rdx,QWORD PTR [rbx+0x28]
   1400029f2:	lea    rcx,[rdx-0x18]
   1400029f6:	mov    rdi,QWORD PTR [rbp+0x40]
   1400029fa:	add    rdi,0xffffffffffffffe8
   1400029fe:	cmp    rcx,rdi
   140002a01:	je     0x140002a44
   140002a03:	cmp    DWORD PTR [rdi+0x10],0x0
   140002a07:	jl     0x140002a37
   140002a09:	mov    rax,QWORD PTR [rdi]
   140002a0c:	cmp    QWORD PTR [rcx],rax
   140002a0f:	jne    0x140002a37
   140002a11:	call   0x1400035a0
   140002a16:	mov    rsi,rax
   140002a19:	lock add DWORD PTR [rdi+0x10],0xffffffff
   140002a1e:	jg     0x140002a2d
   140002a20:	mov    rcx,QWORD PTR [rdi]
   140002a23:	mov    r8,QWORD PTR [rcx]
   140002a26:	mov    rdx,rdi
   140002a29:	call   QWORD PTR [r8+0x8]
   140002a2d:	lea    rax,[rsi+0x18]
   140002a31:	mov    QWORD PTR [rbp+0x40],rax
   140002a35:	jmp    0x140002a44
   140002a37:	mov    r8d,DWORD PTR [rdx-0x10]
   140002a3b:	lea    rcx,[rbp+0x40]
   140002a3f:	call   0x140003430
   140002a44:	mov    rdx,QWORD PTR [rbp+0x48]
   140002a48:	lea    rcx,[rdx-0x18]
   140002a4c:	mov    rdi,QWORD PTR [r14]
   140002a4f:	sub    rdi,0x18
   140002a53:	cmp    rcx,rdi
   140002a56:	je     0x140002a97
   140002a58:	cmp    DWORD PTR [rdi+0x10],0x0
   140002a5c:	jl     0x140002a8b
   140002a5e:	mov    rax,QWORD PTR [rdi]
   140002a61:	cmp    QWORD PTR [rcx],rax
   140002a64:	jne    0x140002a8b
   140002a66:	call   0x1400035a0
   140002a6b:	mov    rsi,rax
   140002a6e:	lock add DWORD PTR [rdi+0x10],0xffffffff
   140002a73:	jg     0x140002a82
   140002a75:	mov    rcx,QWORD PTR [rdi]
   140002a78:	mov    r8,QWORD PTR [rcx]
   140002a7b:	mov    rdx,rdi
   140002a7e:	call   QWORD PTR [r8+0x8]
   140002a82:	lea    rax,[rsi+0x18]
   140002a86:	mov    QWORD PTR [r14],rax
   140002a89:	jmp    0x140002a97
   140002a8b:	mov    r8d,DWORD PTR [rdx-0x10]
   140002a8f:	mov    rcx,r14
   140002a92:	call   0x140003430
   140002a97:	mov    sil,0x1
   140002a9a:	mov    rdx,QWORD PTR [rbp-0x28]
   140002a9e:	add    rdx,0xffffffffffffffe8
   140002aa2:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002aa7:	jg     0x140002ab2
   140002aa9:	mov    rcx,QWORD PTR [rdx]
   140002aac:	mov    rax,QWORD PTR [rcx]
   140002aaf:	call   QWORD PTR [rax+0x8]
   140002ab2:	mov    rdi,QWORD PTR [rbp+0x38]
   140002ab6:	cmp    BYTE PTR [rbx+0x19],0x0
   140002aba:	jne    0x140002b06
   140002abc:	mov    rax,QWORD PTR [rbx+0x10]
   140002ac0:	cmp    BYTE PTR [rax+0x19],0x0
   140002ac4:	jne    0x140002ae0
   140002ac6:	mov    rbx,rax
   140002ac9:	mov    rax,QWORD PTR [rax]
   140002acc:	cmp    BYTE PTR [rax+0x19],0x0
   140002ad0:	jne    0x140002b06
   140002ad2:	mov    rbx,rax
   140002ad5:	mov    rax,QWORD PTR [rax]
   140002ad8:	cmp    BYTE PTR [rax+0x19],0x0
   140002adc:	je     0x140002ad2
   140002ade:	jmp    0x140002b06
   140002ae0:	mov    rax,QWORD PTR [rbx+0x8]
   140002ae4:	cmp    BYTE PTR [rax+0x19],0x0
   140002ae8:	jne    0x140002b03
   140002aea:	nop    WORD PTR [rax+rax*1+0x0]
   140002af0:	cmp    rbx,QWORD PTR [rax+0x10]
   140002af4:	jne    0x140002b03
   140002af6:	mov    rbx,rax
   140002af9:	mov    rax,QWORD PTR [rax+0x8]
   140002afd:	cmp    BYTE PTR [rax+0x19],0x0
   140002b01:	je     0x140002af0
   140002b03:	mov    rbx,rax
   140002b06:	cmp    rbx,QWORD PTR [rbp-0x18]
   140002b0a:	jne    0x140002946
   140002b10:	jmp    0x140002b1d
   140002b12:	mov    ecx,0x80004005
   140002b17:	call   0x140001050
   140002b1c:	nop
   140002b1d:	mov    rdx,QWORD PTR [rbp+0x48]
   140002b21:	add    rdx,0xffffffffffffffe8
   140002b25:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002b2a:	jg     0x140002b36
   140002b2c:	mov    rcx,QWORD PTR [rdx]
   140002b2f:	mov    rax,QWORD PTR [rcx]
   140002b32:	call   QWORD PTR [rax+0x8]
   140002b35:	nop
   140002b36:	mov    rdx,QWORD PTR [rbp+0x40]
   140002b3a:	add    rdx,0xffffffffffffffe8
   140002b3e:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002b43:	jg     0x140002b4f
   140002b45:	mov    rcx,QWORD PTR [rdx]
   140002b48:	mov    rax,QWORD PTR [rcx]
   140002b4b:	call   QWORD PTR [rax+0x8]
   140002b4e:	nop
   140002b4f:	mov    rdx,QWORD PTR [rbp+0x38]
   140002b53:	add    rdx,0xffffffffffffffe8
   140002b57:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002b5c:	jg     0x140002b68
   140002b5e:	mov    rcx,QWORD PTR [rdx]
   140002b61:	mov    rax,QWORD PTR [rcx]
   140002b64:	call   QWORD PTR [rax+0x8]
   140002b67:	nop
   140002b68:	mov    rdx,QWORD PTR [rbp-0x40]
   140002b6c:	add    rdx,0xffffffffffffffe8
   140002b70:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002b75:	jg     0x140002b81
   140002b77:	mov    rcx,QWORD PTR [rdx]
   140002b7a:	mov    rax,QWORD PTR [rcx]
   140002b7d:	call   QWORD PTR [rax+0x8]
   140002b80:	nop
   140002b81:	mov    rax,QWORD PTR [rbp-0x18]
   140002b85:	mov    rbx,QWORD PTR [rax+0x8]
   140002b89:	mov    rdi,rbx
   140002b8c:	cmp    BYTE PTR [rbx+0x19],0x0
   140002b90:	jne    0x140002be8
   140002b92:	mov    rdx,QWORD PTR [rdi+0x10]
   140002b96:	lea    rcx,[rbp-0x18]
   140002b9a:	call   0x140004020
   140002b9f:	mov    rdi,QWORD PTR [rdi]
   140002ba2:	mov    rdx,QWORD PTR [rbx+0x28]
   140002ba6:	sub    rdx,0x18
   140002baa:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002baf:	jg     0x140002bba
   140002bb1:	mov    rcx,QWORD PTR [rdx]
   140002bb4:	mov    rax,QWORD PTR [rcx]
   140002bb7:	call   QWORD PTR [rax+0x8]
   140002bba:	mov    rdx,QWORD PTR [rbx+0x20]
   140002bbe:	sub    rdx,0x18
   140002bc2:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002bc7:	jg     0x140002bd2
   140002bc9:	mov    rcx,QWORD PTR [rdx]
   140002bcc:	mov    rax,QWORD PTR [rcx]
   140002bcf:	call   QWORD PTR [rax+0x8]
   140002bd2:	mov    rcx,rbx
   140002bd5:	call   QWORD PTR [rip+0x36ad]        # 0x140006288
   140002bdb:	mov    rbx,rdi
   140002bde:	cmp    BYTE PTR [rdi+0x19],0x0
   140002be2:	je     0x140002b92
   140002be4:	mov    rax,QWORD PTR [rbp-0x18]
   140002be8:	mov    QWORD PTR [rax+0x8],rax
   140002bec:	mov    rax,QWORD PTR [rbp-0x18]
   140002bf0:	mov    QWORD PTR [rax],rax
   140002bf3:	mov    rax,QWORD PTR [rbp-0x18]
   140002bf7:	mov    QWORD PTR [rax+0x10],rax
   140002bfb:	mov    QWORD PTR [rbp-0x10],0x0
   140002c03:	mov    rcx,QWORD PTR [rbp-0x18]
   140002c07:	call   QWORD PTR [rip+0x367b]        # 0x140006288
   140002c0d:	movzx  eax,sil
   140002c11:	add    rsp,0x60
   140002c15:	pop    r14
   140002c17:	pop    rdi
   140002c18:	pop    rsi
   140002c19:	pop    rbx
   140002c1a:	pop    rbp
   140002c1b:	ret    
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	rex push rsi
   140002c22:	push   rdi
   140002c23:	push   r14
   140002c25:	sub    rsp,0x4d0
   140002c2c:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140002c35:	mov    QWORD PTR [rsp+0x500],rbx
   140002c3d:	mov    rax,QWORD PTR [rip+0x63bc]        # 0x140009000
   140002c44:	xor    rax,rsp
   140002c47:	mov    QWORD PTR [rsp+0x4c0],rax
   140002c4f:	mov    r14,rdx
   140002c52:	mov    rbx,rcx
   140002c55:	xor    edx,edx
   140002c57:	mov    r8d,0x208
   140002c5d:	lea    rcx,[rsp+0xa0]
   140002c65:	call   0x140005022
   140002c6a:	xor    edx,edx
   140002c6c:	mov    r8d,0x208
   140002c72:	lea    rcx,[rsp+0x2b0]
   140002c7a:	call   0x140005022
   140002c7f:	xor    edi,edi
   140002c81:	mov    QWORD PTR [rsp+0x40],rdi
   140002c86:	mov    QWORD PTR [rsp+0x38],rdi
   140002c8b:	mov    QWORD PTR [rsp+0x30],rdi
   140002c90:	mov    QWORD PTR [rsp+0x28],rdi
   140002c95:	mov    QWORD PTR [rsp+0x20],0x104
   140002c9e:	lea    r9,[rsp+0x2b0]
   140002ca6:	mov    r8d,0x104
   140002cac:	lea    rdx,[rsp+0xa0]
   140002cb4:	mov    rcx,QWORD PTR [rbx]
   140002cb7:	call   QWORD PTR [rip+0x34a3]        # 0x140006160
   140002cbd:	test   eax,eax
   140002cbf:	jne    0x140002e09
   140002cc5:	lea    rcx,[rsp+0xa0]
   140002ccd:	or     rsi,0xffffffffffffffff
   140002cd1:	mov    rax,rsi
   140002cd4:	inc    rax
   140002cd7:	cmp    WORD PTR [rcx+rax*2],di
   140002cdb:	jne    0x140002cd4
   140002cdd:	mov    r8d,eax
   140002ce0:	lea    rdx,[rsp+0xa0]
   140002ce8:	mov    rcx,r14
   140002ceb:	call   0x140003430
   140002cf0:	lea    rcx,[rsp+0x2b0]
   140002cf8:	mov    rax,rsi
   140002cfb:	nop    DWORD PTR [rax+rax*1+0x0]
   140002d00:	inc    rax
   140002d03:	cmp    WORD PTR [rcx+rax*2],di
   140002d07:	jne    0x140002d00
   140002d09:	mov    r8d,eax
   140002d0c:	lea    rdx,[rsp+0x2b0]
   140002d14:	mov    rcx,r14
   140002d17:	call   0x140003a20
   140002d1c:	lea    rax,[rip+0x39b5]        # 0x1400066d8
   140002d23:	mov    QWORD PTR [rsp+0x58],rax
   140002d28:	lea    rax,[rip+0x39c9]        # 0x1400066f8
   140002d2f:	mov    QWORD PTR [rsp+0x60],rax
   140002d34:	lea    rbx,[rsp+0x58]
   140002d39:	nop    DWORD PTR [rax+0x0]
   140002d40:	mov    r8,QWORD PTR [rbx]
   140002d43:	mov    rdx,r14
   140002d46:	lea    rcx,[rsp+0x50]
   140002d4b:	call   0x140002fe0
   140002d50:	nop
   140002d51:	lea    rdx,[rsp+0x70]
   140002d56:	mov    rcx,QWORD PTR [rsp+0x50]
   140002d5b:	call   QWORD PTR [rip+0x3407]        # 0x140006168
   140002d61:	test   eax,eax
   140002d63:	je     0x140002d94
   140002d65:	mov    rdx,QWORD PTR [rsp+0x50]
   140002d6a:	add    rdx,0xffffffffffffffe8
   140002d6e:	mov    eax,esi
   140002d70:	lock xadd DWORD PTR [rdx+0x10],eax
   140002d75:	dec    eax
   140002d77:	jg     0x140002d83
   140002d79:	mov    rcx,QWORD PTR [rdx]
   140002d7c:	mov    r8,QWORD PTR [rcx]
   140002d7f:	call   QWORD PTR [r8+0x8]
   140002d83:	inc    edi
   140002d85:	add    rbx,0x8
   140002d89:	movsxd rcx,edi
   140002d8c:	cmp    rcx,0x2
   140002d90:	jb     0x140002d40
   140002d92:	jmp    0x140002e09
   140002d94:	mov    rax,QWORD PTR [rsp+0x50]
   140002d99:	lea    rcx,[rax-0x18]
   140002d9d:	mov    rbx,QWORD PTR [r14]
   140002da0:	sub    rbx,0x18
   140002da4:	cmp    rcx,rbx
   140002da7:	je     0x140002df0
   140002da9:	cmp    DWORD PTR [rbx+0x10],0x0
   140002dad:	jl     0x140002ddc
   140002daf:	mov    rdx,QWORD PTR [rbx]
   140002db2:	cmp    QWORD PTR [rcx],rdx
   140002db5:	jne    0x140002ddc
   140002db7:	call   0x1400035a0
   140002dbc:	mov    rdi,rax
   140002dbf:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140002dc4:	jg     0x140002dd3
   140002dc6:	mov    rcx,QWORD PTR [rbx]
   140002dc9:	mov    r8,QWORD PTR [rcx]
   140002dcc:	mov    rdx,rbx
   140002dcf:	call   QWORD PTR [r8+0x8]
   140002dd3:	lea    rax,[rdi+0x18]
   140002dd7:	mov    QWORD PTR [r14],rax
   140002dda:	jmp    0x140002deb
   140002ddc:	mov    r8d,DWORD PTR [rax-0x10]
   140002de0:	mov    rdx,rax
   140002de3:	mov    rcx,r14
   140002de6:	call   0x140003430
   140002deb:	mov    rax,QWORD PTR [rsp+0x50]
   140002df0:	lea    rdx,[rax-0x18]
   140002df4:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002df9:	jg     0x140002e05
   140002dfb:	mov    rcx,QWORD PTR [rdx]
   140002dfe:	mov    r8,QWORD PTR [rcx]
   140002e01:	call   QWORD PTR [r8+0x8]
   140002e05:	mov    al,0x1
   140002e07:	jmp    0x140002e0b
   140002e09:	xor    al,al
   140002e0b:	mov    rcx,QWORD PTR [rsp+0x4c0]
   140002e13:	xor    rcx,rsp
   140002e16:	call   0x140004bc0
   140002e1b:	mov    rbx,QWORD PTR [rsp+0x500]
   140002e23:	add    rsp,0x4d0
   140002e2a:	pop    r14
   140002e2c:	pop    rdi
   140002e2d:	pop    rsi
   140002e2e:	ret    
   140002e2f:	int3   
   140002e30:	mov    rdx,QWORD PTR [rcx]
   140002e33:	sub    rdx,0x18
   140002e37:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002e3c:	jg     0x140002e48
   140002e3e:	mov    rcx,QWORD PTR [rdx]
   140002e41:	mov    rax,QWORD PTR [rcx]
   140002e44:	rex.W jmp QWORD PTR [rax+0x8]
   140002e48:	ret    
   140002e49:	int3   
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	int3   
   140002e4d:	int3   
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	rex push rbx
   140002e52:	push   rsi
   140002e53:	push   rdi
   140002e54:	sub    rsp,0x30
   140002e58:	movsxd rax,DWORD PTR [r9]
   140002e5b:	mov    rbx,r9
   140002e5e:	mov    rdi,rdx
   140002e61:	mov    rsi,rcx
   140002e64:	mov    DWORD PTR [rsp+0x20],0x0
   140002e6c:	test   eax,eax
   140002e6e:	js     0x140002f3e
   140002e74:	mov    rcx,QWORD PTR [rcx]
   140002e77:	mov    QWORD PTR [rsp+0x50],rbp
   140002e7c:	mov    QWORD PTR [rsp+0x58],r14
   140002e81:	lea    r14,[rcx+rax*2]
   140002e85:	movsxd rax,DWORD PTR [rcx-0x10]
   140002e89:	mov    QWORD PTR [rsp+0x60],r15
   140002e8e:	lea    rbp,[rcx+rax*2]
   140002e92:	cmp    r14,rbp
   140002e95:	jae    0x140002ee1
   140002e97:	lea    rdx,[rip+0x37ee]        # 0x14000668c
   140002e9e:	mov    rcx,r14
   140002ea1:	call   QWORD PTR [rip+0x32e1]        # 0x140006188
   140002ea7:	movsxd rcx,eax
   140002eaa:	mov    r15,rax
   140002ead:	lea    rcx,[r14+rcx*2]
   140002eb1:	cmp    rcx,rbp
   140002eb4:	jae    0x140002ee1
   140002eb6:	lea    rdx,[rip+0x37cf]        # 0x14000668c
   140002ebd:	call   QWORD PTR [rip+0x32cd]        # 0x140006190
   140002ec3:	mov    r8d,DWORD PTR [rbx]
   140002ec6:	mov    rdx,rdi
   140002ec9:	lea    ecx,[rax+0x1]
   140002ecc:	add    r8d,r15d
   140002ecf:	mov    r9d,eax
   140002ed2:	add    ecx,r8d
   140002ed5:	mov    DWORD PTR [rbx],ecx
   140002ed7:	mov    rcx,rsi
   140002eda:	call   0x140003140
   140002edf:	jmp    0x140002f24
   140002ee1:	mov    DWORD PTR [rbx],0xffffffff
   140002ee7:	mov    rax,QWORD PTR [rsi]
   140002eea:	mov    rcx,QWORD PTR [rax-0x18]
   140002eee:	test   rcx,rcx
   140002ef1:	je     0x140002f01
   140002ef3:	mov    rax,QWORD PTR [rcx]
   140002ef6:	call   QWORD PTR [rax+0x20]
   140002ef9:	mov    rcx,rax
   140002efc:	test   rax,rax
   140002eff:	jne    0x140002f12
   140002f01:	call   0x1400012d0
   140002f06:	mov    rcx,rax
   140002f09:	mov    rdx,QWORD PTR [rax]
   140002f0c:	call   QWORD PTR [rdx+0x20]
   140002f0f:	mov    rcx,rax
   140002f12:	test   rcx,rcx
   140002f15:	je     0x140002f49
   140002f17:	mov    rax,QWORD PTR [rcx]
   140002f1a:	call   QWORD PTR [rax+0x18]
   140002f1d:	add    rax,0x18
   140002f21:	mov    QWORD PTR [rdi],rax
   140002f24:	mov    r14,QWORD PTR [rsp+0x58]
   140002f29:	mov    rbp,QWORD PTR [rsp+0x50]
   140002f2e:	mov    r15,QWORD PTR [rsp+0x60]
   140002f33:	mov    rax,rdi
   140002f36:	add    rsp,0x30
   140002f3a:	pop    rdi
   140002f3b:	pop    rsi
   140002f3c:	pop    rbx
   140002f3d:	ret    
   140002f3e:	mov    ecx,0x80070057
   140002f43:	call   0x140001050
   140002f48:	int3   
   140002f49:	mov    ecx,0x80004005
   140002f4e:	call   0x140001050
   140002f53:	int3   
   140002f54:	int3   
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	mov    QWORD PTR [rsp+0x8],rbx
   140002f65:	push   rdi
   140002f66:	sub    rsp,0x20
   140002f6a:	mov    rax,QWORD PTR [rcx]
   140002f6d:	mov    rdi,rcx
   140002f70:	movsxd rbx,DWORD PTR [rax-0x10]
   140002f74:	test   ebx,ebx
   140002f76:	js     0x140002fc4
   140002f78:	mov    ecx,0x1
   140002f7d:	sub    ecx,DWORD PTR [rax-0x8]
   140002f80:	mov    eax,DWORD PTR [rax-0xc]
   140002f83:	sub    eax,ebx
   140002f85:	or     ecx,eax
   140002f87:	jge    0x140002f93
   140002f89:	mov    edx,ebx
   140002f8b:	mov    rcx,rdi
   140002f8e:	call   0x140003540
   140002f93:	mov    rcx,QWORD PTR [rdi]
   140002f96:	lea    eax,[rbx+0x1]
   140002f99:	movsxd rdx,eax
   140002f9c:	call   QWORD PTR [rip+0x31d6]        # 0x140006178
   140002fa2:	mov    rax,QWORD PTR [rdi]
   140002fa5:	cmp    ebx,DWORD PTR [rax-0xc]
   140002fa8:	jg     0x140002fcf
   140002faa:	mov    DWORD PTR [rax-0x10],ebx
   140002fad:	mov    rax,QWORD PTR [rdi]
   140002fb0:	xor    edx,edx
   140002fb2:	mov    WORD PTR [rax+rbx*2],dx
   140002fb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fbb:	mov    rax,rdi
   140002fbe:	add    rsp,0x20
   140002fc2:	pop    rdi
   140002fc3:	ret    
   140002fc4:	mov    ecx,0x80070057
   140002fc9:	call   0x140001050
   140002fce:	int3   
   140002fcf:	mov    ecx,0x80070057
   140002fd4:	call   0x140001050
   140002fd9:	int3   
   140002fda:	int3   
   140002fdb:	int3   
   140002fdc:	int3   
   140002fdd:	int3   
   140002fde:	int3   
   140002fdf:	int3   
   140002fe0:	mov    QWORD PTR [rsp+0x8],rcx
   140002fe5:	push   r14
   140002fe7:	sub    rsp,0x40
   140002feb:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140002ff4:	mov    QWORD PTR [rsp+0x58],rbx
   140002ff9:	mov    QWORD PTR [rsp+0x60],rsi
   140002ffe:	mov    QWORD PTR [rsp+0x68],rdi
   140003003:	mov    rdi,r8
   140003006:	mov    r14,rdx
   140003009:	mov    rsi,rcx
   14000300c:	xor    ebx,ebx
   14000300e:	mov    DWORD PTR [rsp+0x30],ebx
   140003012:	mov    rax,QWORD PTR [rdx]
   140003015:	mov    rcx,QWORD PTR [rax-0x18]
   140003019:	test   rcx,rcx
   14000301c:	je     0x14000302c
   14000301e:	mov    rax,QWORD PTR [rcx]
   140003021:	call   QWORD PTR [rax+0x20]
   140003024:	mov    rdx,rax
   140003027:	test   rax,rax
   14000302a:	jne    0x14000303d
   14000302c:	call   0x1400012d0
   140003031:	mov    rdx,QWORD PTR [rax]
   140003034:	mov    rcx,rax
   140003037:	call   QWORD PTR [rdx+0x20]
   14000303a:	mov    rdx,rax
   14000303d:	mov    ecx,ebx
   14000303f:	test   rdx,rdx
   140003042:	setne  cl
   140003045:	test   ecx,ecx
   140003047:	jne    0x140003054
   140003049:	mov    ecx,0x80004005
   14000304e:	call   0x140001050
   140003053:	int3   
   140003054:	mov    rax,QWORD PTR [rdx]
   140003057:	mov    rcx,rdx
   14000305a:	call   QWORD PTR [rax+0x18]
   14000305d:	add    rax,0x18
   140003061:	mov    QWORD PTR [rsi],rax
   140003064:	mov    DWORD PTR [rsp+0x30],0x1
   14000306c:	test   rdi,rdi
   14000306f:	je     0x14000307f
   140003071:	or     rbx,0xffffffffffffffff
   140003075:	inc    rbx
   140003078:	cmp    WORD PTR [rdi+rbx*2],0x0
   14000307d:	jne    0x140003075
   14000307f:	mov    rdx,QWORD PTR [r14]
   140003082:	mov    DWORD PTR [rsp+0x20],ebx
   140003086:	mov    r9,rdi
   140003089:	mov    r8d,DWORD PTR [rdx-0x10]
   14000308d:	mov    rcx,rsi
   140003090:	call   0x140003220
   140003095:	mov    rax,rsi
   140003098:	mov    rbx,QWORD PTR [rsp+0x58]
   14000309d:	mov    rsi,QWORD PTR [rsp+0x60]
   1400030a2:	mov    rdi,QWORD PTR [rsp+0x68]
   1400030a7:	add    rsp,0x40
   1400030ab:	pop    r14
   1400030ad:	ret    
   1400030ae:	int3   
   1400030af:	int3   
   1400030b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030b5:	push   rdi
   1400030b6:	sub    rsp,0x20
   1400030ba:	mov    rax,QWORD PTR [rcx]
   1400030bd:	mov    rbx,rcx
   1400030c0:	cmp    DWORD PTR [rax-0x10],0x0
   1400030c4:	mov    rdi,QWORD PTR [rax-0x18]
   1400030c8:	lea    rdx,[rax-0x18]
   1400030cc:	je     0x140003110
   1400030ce:	cmp    DWORD PTR [rdx+0x10],0x0
   1400030d2:	jge    0x1400030f0
   1400030d4:	cmp    DWORD PTR [rax-0xc],0x0
   1400030d8:	jl     0x14000311b
   1400030da:	xor    ecx,ecx
   1400030dc:	mov    DWORD PTR [rax-0x10],ecx
   1400030df:	mov    rax,QWORD PTR [rbx]
   1400030e2:	mov    WORD PTR [rax],cx
   1400030e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400030ea:	add    rsp,0x20
   1400030ee:	pop    rdi
   1400030ef:	ret    
   1400030f0:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400030f5:	jg     0x140003100
   1400030f7:	mov    rcx,QWORD PTR [rdx]
   1400030fa:	mov    rax,QWORD PTR [rcx]
   1400030fd:	call   QWORD PTR [rax+0x8]
   140003100:	mov    rax,QWORD PTR [rdi]
   140003103:	mov    rcx,rdi
   140003106:	call   QWORD PTR [rax+0x18]
   140003109:	add    rax,0x18
   14000310d:	mov    QWORD PTR [rbx],rax
   140003110:	mov    rbx,QWORD PTR [rsp+0x30]
   140003115:	add    rsp,0x20
   140003119:	pop    rdi
   14000311a:	ret    
   14000311b:	mov    ecx,0x80070057
   140003120:	call   0x140001050
   140003125:	int3   
   140003126:	int3   
   140003127:	int3   
   140003128:	int3   
   140003129:	int3   
   14000312a:	int3   
   14000312b:	int3   
   14000312c:	int3   
   14000312d:	int3   
   14000312e:	int3   
   14000312f:	int3   
   140003130:	jmp    0x1400033b0
   140003135:	int3   
   140003136:	int3   
   140003137:	int3   
   140003138:	int3   
   140003139:	int3   
   14000313a:	int3   
   14000313b:	int3   
   14000313c:	int3   
   14000313d:	int3   
   14000313e:	int3   
   14000313f:	int3   
   140003140:	mov    QWORD PTR [rsp+0x8],rbx
   140003145:	mov    QWORD PTR [rsp+0x10],rsi
   14000314a:	mov    QWORD PTR [rsp+0x18],rdi
   14000314f:	push   r14
   140003151:	sub    rsp,0x30
   140003155:	mov    edi,r8d
   140003158:	xor    r8d,r8d
   14000315b:	mov    ebx,r9d
   14000315e:	test   edi,edi
   140003160:	mov    eax,0x7fffffff
   140003165:	mov    rsi,rdx
   140003168:	cmovs  edi,r8d
   14000316c:	test   r9d,r9d
   14000316f:	mov    r14,rcx
   140003172:	cmovs  ebx,r8d
   140003176:	sub    eax,edi
   140003178:	mov    DWORD PTR [rsp+0x20],r8d
   14000317d:	cmp    eax,ebx
   14000317f:	jl     0x140003209
   140003185:	mov    rdx,QWORD PTR [rcx]
   140003188:	lea    eax,[rdi+rbx*1]
   14000318b:	mov    ecx,DWORD PTR [rdx-0x10]
   14000318e:	cmp    eax,ecx
   140003190:	jle    0x140003196
   140003192:	mov    ebx,ecx
   140003194:	sub    ebx,edi
   140003196:	cmp    edi,ecx
   140003198:	cmovg  ebx,r8d
   14000319c:	test   edi,edi
   14000319e:	jne    0x1400031cd
   1400031a0:	cmp    ebx,ecx
   1400031a2:	jne    0x1400031cd
   1400031a4:	lea    rcx,[rdx-0x18]
   1400031a8:	call   0x1400035a0
   1400031ad:	add    rax,0x18
   1400031b1:	mov    QWORD PTR [rsi],rax
   1400031b4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400031b9:	mov    rdi,QWORD PTR [rsp+0x50]
   1400031be:	mov    rax,rsi
   1400031c1:	mov    rsi,QWORD PTR [rsp+0x48]
   1400031c6:	add    rsp,0x30
   1400031ca:	pop    r14
   1400031cc:	ret    
   1400031cd:	mov    rcx,QWORD PTR [rdx-0x18]
   1400031d1:	test   rcx,rcx
   1400031d4:	je     0x1400031e1
   1400031d6:	mov    rax,QWORD PTR [rcx]
   1400031d9:	call   QWORD PTR [rax+0x20]
   1400031dc:	test   rax,rax
   1400031df:	jne    0x1400031ef
   1400031e1:	call   0x1400012d0
   1400031e6:	mov    rcx,rax
   1400031e9:	mov    rdx,QWORD PTR [rax]
   1400031ec:	call   QWORD PTR [rdx+0x20]
   1400031ef:	mov    rcx,QWORD PTR [r14]
   1400031f2:	movsxd rdx,edi
   1400031f5:	mov    r9,rax
   1400031f8:	lea    rdx,[rcx+rdx*2]
   1400031fc:	mov    r8d,ebx
   1400031ff:	mov    rcx,rsi
   140003202:	call   0x140003970
   140003207:	jmp    0x1400031b4
   140003209:	mov    ecx,0x80070216
   14000320e:	call   0x140001050
   140003213:	int3   
   140003214:	int3   
   140003215:	int3   
   140003216:	int3   
   140003217:	int3   
   140003218:	int3   
   140003219:	int3   
   14000321a:	int3   
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	mov    QWORD PTR [rsp+0x10],rbx
   140003225:	mov    QWORD PTR [rsp+0x18],rbp
   14000322a:	mov    QWORD PTR [rsp+0x20],rsi
   14000322f:	push   r12
   140003231:	push   r14
   140003233:	push   r15
   140003235:	sub    rsp,0x20
   140003239:	movsxd rbp,DWORD PTR [rsp+0x60]
   14000323e:	movsxd rbx,r8d
   140003241:	mov    r15,r9
   140003244:	lea    esi,[rbx+rbp*1]
   140003247:	mov    r12,rdx
   14000324a:	mov    r14,rcx
   14000324d:	test   esi,esi
   14000324f:	js     0x1400032dc
   140003255:	mov    rax,QWORD PTR [rcx]
   140003258:	mov    ecx,0x1
   14000325d:	mov    QWORD PTR [rsp+0x40],rdi
   140003262:	sub    ecx,DWORD PTR [rax-0x8]
   140003265:	mov    eax,DWORD PTR [rax-0xc]
   140003268:	sub    eax,esi
   14000326a:	or     ecx,eax
   14000326c:	jge    0x140003278
   14000326e:	mov    edx,esi
   140003270:	mov    rcx,r14
   140003273:	call   0x140003540
   140003278:	mov    rdi,QWORD PTR [r14]
   14000327b:	add    rbx,rbx
   14000327e:	mov    r8,r12
   140003281:	mov    rcx,rdi
   140003284:	mov    r9,rbx
   140003287:	mov    rdx,rbx
   14000328a:	call   QWORD PTR [rip+0x2ef0]        # 0x140006180
   140003290:	mov    rdx,rbp
   140003293:	lea    rcx,[rbx+rdi*1]
   140003297:	add    rdx,rdx
   14000329a:	mov    r8,r15
   14000329d:	mov    r9,rdx
   1400032a0:	call   QWORD PTR [rip+0x2eda]        # 0x140006180
   1400032a6:	mov    rax,QWORD PTR [r14]
   1400032a9:	mov    rdi,QWORD PTR [rsp+0x40]
   1400032ae:	cmp    esi,DWORD PTR [rax-0xc]
   1400032b1:	jg     0x1400032e7
   1400032b3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400032b8:	mov    rbp,QWORD PTR [rsp+0x50]
   1400032bd:	mov    DWORD PTR [rax-0x10],esi
   1400032c0:	mov    rax,QWORD PTR [r14]
   1400032c3:	movsxd rcx,esi
   1400032c6:	mov    rsi,QWORD PTR [rsp+0x58]
   1400032cb:	xor    edx,edx
   1400032cd:	mov    WORD PTR [rax+rcx*2],dx
   1400032d1:	add    rsp,0x20
   1400032d5:	pop    r15
   1400032d7:	pop    r14
   1400032d9:	pop    r12
   1400032db:	ret    
   1400032dc:	mov    ecx,0x80070057
   1400032e1:	call   0x140001050
   1400032e6:	int3   
   1400032e7:	mov    ecx,0x80070057
   1400032ec:	call   0x140001050
   1400032f1:	int3   
   1400032f2:	int3   
   1400032f3:	int3   
   1400032f4:	int3   
   1400032f5:	int3   
   1400032f6:	int3   
   1400032f7:	int3   
   1400032f8:	int3   
   1400032f9:	int3   
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	int3   
   1400032fd:	int3   
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	mov    QWORD PTR [rsp+0x8],rbx
   140003305:	mov    QWORD PTR [rsp+0x10],rbp
   14000330a:	mov    QWORD PTR [rsp+0x18],rsi
   14000330f:	mov    QWORD PTR [rsp+0x20],rdi
   140003314:	push   r14
   140003316:	sub    rsp,0x20
   14000331a:	mov    rbx,QWORD PTR [rcx]
   14000331d:	mov    rsi,rcx
   140003320:	mov    edi,edx
   140003322:	mov    rcx,QWORD PTR [rbx-0x18]
   140003326:	mov    ebp,DWORD PTR [rbx-0x10]
   140003329:	mov    rax,QWORD PTR [rcx]
   14000332c:	call   QWORD PTR [rax+0x20]
   14000332f:	mov    r8d,0x2
   140003335:	mov    edx,edi
   140003337:	mov    r9,QWORD PTR [rax]
   14000333a:	mov    rcx,rax
   14000333d:	call   QWORD PTR [r9]
   140003340:	mov    r14,rax
   140003343:	test   rax,rax
   140003346:	je     0x14000339f
   140003348:	cmp    ebp,edi
   14000334a:	mov    r8,rbx
   14000334d:	cmovl  edi,ebp
   140003350:	inc    edi
   140003352:	movsxd rdx,edi
   140003355:	lea    rdi,[rax+0x18]
   140003359:	add    rdx,rdx
   14000335c:	mov    rcx,rdi
   14000335f:	mov    r9,rdx
   140003362:	call   QWORD PTR [rip+0x2e18]        # 0x140006180
   140003368:	mov    DWORD PTR [r14+0x8],ebp
   14000336c:	lock add DWORD PTR [rbx-0x8],0xffffffff
   140003371:	jg     0x140003381
   140003373:	mov    rcx,QWORD PTR [rbx-0x18]
   140003377:	lea    rdx,[rbx-0x18]
   14000337b:	mov    rax,QWORD PTR [rcx]
   14000337e:	call   QWORD PTR [rax+0x8]
   140003381:	mov    rbx,QWORD PTR [rsp+0x30]
   140003386:	mov    rbp,QWORD PTR [rsp+0x38]
   14000338b:	mov    QWORD PTR [rsi],rdi
   14000338e:	mov    rsi,QWORD PTR [rsp+0x40]
   140003393:	mov    rdi,QWORD PTR [rsp+0x48]
   140003398:	add    rsp,0x20
   14000339c:	pop    r14
   14000339e:	ret    
   14000339f:	call   0x140003530
   1400033a4:	int3   
   1400033a5:	int3   
   1400033a6:	int3   
   1400033a7:	int3   
   1400033a8:	int3   
   1400033a9:	int3   
   1400033aa:	int3   
   1400033ab:	int3   
   1400033ac:	int3   
   1400033ad:	int3   
   1400033ae:	int3   
   1400033af:	int3   
   1400033b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400033b5:	push   rdi
   1400033b6:	sub    rsp,0x20
   1400033ba:	mov    rbx,QWORD PTR [rcx]
   1400033bd:	mov    rdi,rcx
   1400033c0:	test   rbx,rbx
   1400033c3:	je     0x14000341b
   1400033c5:	mov    QWORD PTR [rsp+0x30],rsi
   1400033ca:	mov    rsi,QWORD PTR [rcx+0x8]
   1400033ce:	cmp    rbx,rsi
   1400033d1:	je     0x140003400
   1400033d3:	nop    DWORD PTR [rax+0x0]
   1400033d7:	nop    WORD PTR [rax+rax*1+0x0]
   1400033e0:	mov    rdx,QWORD PTR [rbx]
   1400033e3:	sub    rdx,0x18
   1400033e7:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400033ec:	jg     0x1400033f7
   1400033ee:	mov    rcx,QWORD PTR [rdx]
   1400033f1:	mov    rax,QWORD PTR [rcx]
   1400033f4:	call   QWORD PTR [rax+0x8]
   1400033f7:	add    rbx,0x8
   1400033fb:	cmp    rbx,rsi
   1400033fe:	jne    0x1400033e0
   140003400:	mov    rcx,QWORD PTR [rdi]
   140003403:	call   QWORD PTR [rip+0x2e7f]        # 0x140006288
   140003409:	mov    rsi,QWORD PTR [rsp+0x30]
   14000340e:	xor    eax,eax
   140003410:	mov    QWORD PTR [rdi],rax
   140003413:	mov    QWORD PTR [rdi+0x8],rax
   140003417:	mov    QWORD PTR [rdi+0x10],rax
   14000341b:	mov    rbx,QWORD PTR [rsp+0x38]
   140003420:	add    rsp,0x20
   140003424:	pop    rdi
   140003425:	ret    
   140003426:	int3   
   140003427:	int3   
   140003428:	int3   
   140003429:	int3   
   14000342a:	int3   
   14000342b:	int3   
   14000342c:	int3   
   14000342d:	int3   
   14000342e:	int3   
   14000342f:	int3   
   140003430:	mov    QWORD PTR [rsp+0x18],rbx
   140003435:	mov    QWORD PTR [rsp+0x20],rbp
   14000343a:	push   rdi
   14000343b:	sub    rsp,0x20
   14000343f:	movsxd rbx,r8d
   140003442:	mov    rbp,rdx
   140003445:	mov    rdi,rcx
   140003448:	test   r8d,r8d
   14000344b:	jne    0x140003461
   14000344d:	mov    rbx,QWORD PTR [rsp+0x40]
   140003452:	mov    rbp,QWORD PTR [rsp+0x48]
   140003457:	add    rsp,0x20
   14000345b:	pop    rdi
   14000345c:	jmp    0x1400030b0
   140003461:	test   rdx,rdx
   140003464:	je     0x140003502
   14000346a:	mov    rax,QWORD PTR [rcx]
   14000346d:	mov    QWORD PTR [rsp+0x30],rsi
   140003472:	mov    rsi,rdx
   140003475:	sub    rsi,rax
   140003478:	mov    QWORD PTR [rsp+0x38],r14
   14000347d:	mov    r14d,DWORD PTR [rax-0x10]
   140003481:	sar    rsi,1
   140003484:	test   r8d,r8d
   140003487:	js     0x14000350d
   14000348d:	mov    ecx,0x1
   140003492:	sub    ecx,DWORD PTR [rax-0x8]
   140003495:	mov    eax,DWORD PTR [rax-0xc]
   140003498:	sub    eax,ebx
   14000349a:	or     ecx,eax
   14000349c:	jge    0x1400034a8
   14000349e:	mov    edx,ebx
   1400034a0:	mov    rcx,rdi
   1400034a3:	call   0x140003540
   1400034a8:	mov    rcx,QWORD PTR [rdi]
   1400034ab:	movsxd rdx,DWORD PTR [rcx-0xc]
   1400034af:	add    rdx,rdx
   1400034b2:	cmp    rsi,r14
   1400034b5:	lea    r14,[rbx+rbx*1]
   1400034b9:	mov    r9,r14
   1400034bc:	ja     0x1400034ca
   1400034be:	lea    r8,[rcx+rsi*2]
   1400034c2:	call   QWORD PTR [rip+0x2db8]        # 0x140006280
   1400034c8:	jmp    0x1400034d3
   1400034ca:	mov    r8,rbp
   1400034cd:	call   QWORD PTR [rip+0x2cad]        # 0x140006180
   1400034d3:	mov    rax,QWORD PTR [rdi]
   1400034d6:	cmp    ebx,DWORD PTR [rax-0xc]
   1400034d9:	jg     0x140003518
   1400034db:	mov    rsi,QWORD PTR [rsp+0x30]
   1400034e0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400034e5:	mov    DWORD PTR [rax-0x10],ebx
   1400034e8:	mov    rax,QWORD PTR [rdi]
   1400034eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400034f0:	xor    ecx,ecx
   1400034f2:	mov    WORD PTR [r14+rax*1],cx
   1400034f7:	mov    r14,QWORD PTR [rsp+0x38]
   1400034fc:	add    rsp,0x20
   140003500:	pop    rdi
   140003501:	ret    
   140003502:	mov    ecx,0x80070057
   140003507:	call   0x140001050
   14000350c:	int3   
   14000350d:	mov    ecx,0x80070057
   140003512:	call   0x140001050
   140003517:	int3   
   140003518:	mov    ecx,0x80070057
   14000351d:	call   0x140001050
   140003522:	int3   
   140003523:	int3   
   140003524:	int3   
   140003525:	int3   
   140003526:	int3   
   140003527:	int3   
   140003528:	int3   
   140003529:	int3   
   14000352a:	int3   
   14000352b:	int3   
   14000352c:	int3   
   14000352d:	int3   
   14000352e:	int3   
   14000352f:	int3   
   140003530:	sub    rsp,0x28
   140003534:	mov    ecx,0x8007000e
   140003539:	call   0x140001050
   14000353e:	int3   
   14000353f:	int3   
   140003540:	mov    r8d,edx
   140003543:	mov    rdx,QWORD PTR [rcx]
   140003546:	mov    r9,rcx
   140003549:	cmp    DWORD PTR [rdx-0x10],r8d
   14000354d:	cmovg  r8d,DWORD PTR [rdx-0x10]
   140003552:	cmp    DWORD PTR [rdx-0x8],0x1
   140003556:	jle    0x140003560
   140003558:	mov    edx,r8d
   14000355b:	jmp    0x140003300
   140003560:	mov    ecx,DWORD PTR [rdx-0xc]
   140003563:	cmp    ecx,r8d
   140003566:	jge    0x140003592
   140003568:	cmp    ecx,0x40000000
   14000356e:	jle    0x140003578
   140003570:	add    ecx,0x100000
   140003576:	jmp    0x140003581
   140003578:	mov    eax,ecx
   14000357a:	cdq    
   14000357b:	sub    eax,edx
   14000357d:	sar    eax,1
   14000357f:	add    ecx,eax
   140003581:	cmp    ecx,r8d
   140003584:	cmovl  ecx,r8d
   140003588:	mov    edx,ecx
   14000358a:	mov    rcx,r9
   14000358d:	jmp    0x140003b40
   140003592:	ret    
   140003593:	int3   
   140003594:	int3   
   140003595:	int3   
   140003596:	int3   
   140003597:	int3   
   140003598:	int3   
   140003599:	int3   
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	int3   
   14000359d:	int3   
   14000359e:	int3   
   14000359f:	int3   
   1400035a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400035a5:	push   rdi
   1400035a6:	sub    rsp,0x20
   1400035aa:	mov    rbx,rcx
   1400035ad:	mov    rcx,QWORD PTR [rcx]
   1400035b0:	mov    rax,QWORD PTR [rcx]
   1400035b3:	call   QWORD PTR [rax+0x20]
   1400035b6:	cmp    DWORD PTR [rbx+0x10],0x0
   1400035ba:	mov    rcx,rax
   1400035bd:	jl     0x1400035d9
   1400035bf:	cmp    rax,QWORD PTR [rbx]
   1400035c2:	jne    0x1400035d9
   1400035c4:	mov    rdi,rbx
   1400035c7:	lock inc DWORD PTR [rbx+0x10]
   1400035cb:	mov    rax,rbx
   1400035ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035d3:	add    rsp,0x20
   1400035d7:	pop    rdi
   1400035d8:	ret    
   1400035d9:	mov    rax,QWORD PTR [rax]
   1400035dc:	mov    edx,DWORD PTR [rbx+0x8]
   1400035df:	mov    r8d,0x2
   1400035e5:	call   QWORD PTR [rax]
   1400035e7:	mov    rdi,rax
   1400035ea:	test   rax,rax
   1400035ed:	je     0x14000361f
   1400035ef:	mov    eax,DWORD PTR [rbx+0x8]
   1400035f2:	lea    r8,[rbx+0x18]
   1400035f6:	lea    rcx,[rdi+0x18]
   1400035fa:	mov    DWORD PTR [rdi+0x8],eax
   1400035fd:	mov    eax,DWORD PTR [rbx+0x8]
   140003600:	inc    eax
   140003602:	movsxd rdx,eax
   140003605:	add    rdx,rdx
   140003608:	mov    r9,rdx
   14000360b:	call   QWORD PTR [rip+0x2b6f]        # 0x140006180
   140003611:	mov    rbx,QWORD PTR [rsp+0x30]
   140003616:	mov    rax,rdi
   140003619:	add    rsp,0x20
   14000361d:	pop    rdi
   14000361e:	ret    
   14000361f:	call   0x140003530
   140003624:	int3   
   140003625:	int3   
   140003626:	int3   
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	push   r12
   140003632:	push   r14
   140003634:	push   r15
   140003636:	sub    rsp,0x40
   14000363a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140003643:	mov    QWORD PTR [rsp+0x60],rbx
   140003648:	mov    QWORD PTR [rsp+0x70],rsi
   14000364d:	mov    QWORD PTR [rsp+0x78],rdi
   140003652:	mov    r15,rdx
   140003655:	mov    rsi,rcx
   140003658:	xor    edi,edi
   14000365a:	mov    QWORD PTR [rsp+0x68],rdi
   14000365f:	test   rdx,rdx
   140003662:	je     0x140003695
   140003664:	movabs rax,0x1fffffffffffffff
   14000366e:	cmp    rdx,rax
   140003671:	ja     0x14000368e
   140003673:	lea    rcx,[rdx*8+0x0]
   14000367b:	call   QWORD PTR [rip+0x2b17]        # 0x140006198
   140003681:	mov    rdi,rax
   140003684:	mov    QWORD PTR [rsp+0x68],rax
   140003689:	test   rax,rax
   14000368c:	jne    0x140003695
   14000368e:	call   QWORD PTR [rip+0x2a9c]        # 0x140006130
   140003694:	nop
   140003695:	mov    r8,rdi
   140003698:	mov    rdx,QWORD PTR [rsi+0x8]
   14000369c:	mov    rcx,QWORD PTR [rsi]
   14000369f:	call   0x140004980
   1400036a4:	nop
   1400036a5:	mov    r14,QWORD PTR [rsi+0x8]
   1400036a9:	mov    rbx,QWORD PTR [rsi]
   1400036ac:	mov    r12,r14
   1400036af:	sub    r12,rbx
   1400036b2:	sar    r12,0x3
   1400036b6:	test   rbx,rbx
   1400036b9:	je     0x1400036e9
   1400036bb:	cmp    rbx,r14
   1400036be:	je     0x1400036e0
   1400036c0:	mov    rdx,QWORD PTR [rbx]
   1400036c3:	sub    rdx,0x18
   1400036c7:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400036cc:	jg     0x1400036d7
   1400036ce:	mov    rcx,QWORD PTR [rdx]
   1400036d1:	mov    rax,QWORD PTR [rcx]
   1400036d4:	call   QWORD PTR [rax+0x8]
   1400036d7:	add    rbx,0x8
   1400036db:	cmp    rbx,r14
   1400036de:	jne    0x1400036c0
   1400036e0:	mov    rcx,QWORD PTR [rsi]
   1400036e3:	call   QWORD PTR [rip+0x2b9f]        # 0x140006288
   1400036e9:	lea    rax,[rdi+r15*8]
   1400036ed:	mov    QWORD PTR [rsi+0x10],rax
   1400036f1:	lea    rax,[rdi+r12*8]
   1400036f5:	mov    QWORD PTR [rsi+0x8],rax
   1400036f9:	mov    QWORD PTR [rsi],rdi
   1400036fc:	mov    rbx,QWORD PTR [rsp+0x60]
   140003701:	mov    rsi,QWORD PTR [rsp+0x70]
   140003706:	mov    rdi,QWORD PTR [rsp+0x78]
   14000370b:	add    rsp,0x40
   14000370f:	pop    r15
   140003711:	pop    r14
   140003713:	pop    r12
   140003715:	ret    
   140003716:	int3   
   140003717:	int3   
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	mov    QWORD PTR [rsp+0x10],rbx
   140003725:	mov    QWORD PTR [rsp+0x20],r9
   14000372a:	mov    QWORD PTR [rsp+0x18],r8
   14000372f:	push   rdi
   140003730:	sub    rsp,0x20
   140003734:	mov    rdi,rdx
   140003737:	mov    rdx,QWORD PTR [rcx]
   14000373a:	mov    rbx,rcx
   14000373d:	cmp    r8,QWORD PTR [rdx]
   140003740:	jne    0x140003783
   140003742:	cmp    r9,rdx
   140003745:	jne    0x140003783
   140003747:	mov    rdx,QWORD PTR [rdx+0x8]
   14000374b:	call   0x140004020
   140003750:	mov    rax,QWORD PTR [rbx]
   140003753:	mov    QWORD PTR [rax+0x8],rax
   140003757:	mov    rax,QWORD PTR [rbx]
   14000375a:	mov    QWORD PTR [rax],rax
   14000375d:	mov    rax,QWORD PTR [rbx]
   140003760:	mov    QWORD PTR [rax+0x10],rax
   140003764:	mov    rax,QWORD PTR [rbx]
   140003767:	mov    QWORD PTR [rbx+0x8],0x0
   14000376f:	mov    rcx,QWORD PTR [rax]
   140003772:	mov    rax,rdi
   140003775:	mov    QWORD PTR [rdi],rcx
   140003778:	mov    rbx,QWORD PTR [rsp+0x38]
   14000377d:	add    rsp,0x20
   140003781:	pop    rdi
   140003782:	ret    
   140003783:	cmp    r8,r9
   140003786:	je     0x140003809
   14000378c:	nop    DWORD PTR [rax+0x0]
   140003790:	cmp    BYTE PTR [r8+0x19],0x0
   140003795:	mov    rax,r8
   140003798:	jne    0x1400037ed
   14000379a:	mov    rdx,QWORD PTR [r8+0x10]
   14000379e:	cmp    BYTE PTR [rdx+0x19],0x0
   1400037a2:	jne    0x1400037c3
   1400037a4:	mov    rcx,QWORD PTR [rdx]
   1400037a7:	cmp    BYTE PTR [rcx+0x19],0x0
   1400037ab:	jne    0x1400037bc
   1400037ad:	nop    DWORD PTR [rax]
   1400037b0:	mov    rdx,rcx
   1400037b3:	mov    rcx,QWORD PTR [rcx]
   1400037b6:	cmp    BYTE PTR [rcx+0x19],0x0
   1400037ba:	je     0x1400037b0
   1400037bc:	mov    QWORD PTR [rsp+0x40],rdx
   1400037c1:	jmp    0x1400037ed
   1400037c3:	mov    rcx,QWORD PTR [r8+0x8]
   1400037c7:	cmp    BYTE PTR [rcx+0x19],0x0
   1400037cb:	jne    0x1400037e8
   1400037cd:	nop    DWORD PTR [rax]
   1400037d0:	cmp    r8,QWORD PTR [rcx+0x10]
   1400037d4:	jne    0x1400037e8
   1400037d6:	mov    QWORD PTR [rsp+0x40],rcx
   1400037db:	mov    r8,rcx
   1400037de:	mov    rcx,QWORD PTR [rcx+0x8]
   1400037e2:	cmp    BYTE PTR [rcx+0x19],0x0
   1400037e6:	je     0x1400037d0
   1400037e8:	mov    QWORD PTR [rsp+0x40],rcx
   1400037ed:	lea    rdx,[rsp+0x30]
   1400037f2:	mov    r8,rax
   1400037f5:	mov    rcx,rbx
   1400037f8:	call   0x140003b90
   1400037fd:	mov    r8,QWORD PTR [rsp+0x40]
   140003802:	cmp    r8,QWORD PTR [rsp+0x48]
   140003807:	jne    0x140003790
   140003809:	mov    rbx,QWORD PTR [rsp+0x38]
   14000380e:	mov    QWORD PTR [rdi],r8
   140003811:	mov    rax,rdi
   140003814:	add    rsp,0x20
   140003818:	pop    rdi
   140003819:	ret    
   14000381a:	int3   
   14000381b:	int3   
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	mov    QWORD PTR [rsp+0x10],rbx
   140003825:	mov    QWORD PTR [rsp+0x18],rsi
   14000382a:	push   rdi
   14000382b:	sub    rsp,0x20
   14000382f:	mov    eax,r8d
   140003832:	mov    rdi,rdx
   140003835:	mov    ebx,r8d
   140003838:	shr    eax,0x4
   14000383b:	mov    rsi,rcx
   14000383e:	mov    r8d,0x6
   140003844:	inc    ax
   140003847:	mov    rcx,rdi
   14000384a:	movzx  edx,ax
   14000384d:	call   QWORD PTR [rip+0x288d]        # 0x1400060e0
   140003853:	test   rax,rax
   140003856:	je     0x14000391f
   14000385c:	mov    r8d,ebx
   14000385f:	mov    rdx,rax
   140003862:	mov    rcx,rdi
   140003865:	call   0x140001080
   14000386a:	mov    rdi,rax
   14000386d:	test   rax,rax
   140003870:	je     0x14000391f
   140003876:	movzx  ebx,WORD PTR [rax]
   140003879:	test   ebx,ebx
   14000387b:	js     0x140003931
   140003881:	mov    rax,QWORD PTR [rsi]
   140003884:	mov    ecx,0x1
   140003889:	mov    QWORD PTR [rsp+0x30],rbp
   14000388e:	sub    ecx,DWORD PTR [rax-0x8]
   140003891:	mov    eax,DWORD PTR [rax-0xc]
   140003894:	sub    eax,ebx
   140003896:	or     ecx,eax
   140003898:	jge    0x1400038a4
   14000389a:	mov    edx,ebx
   14000389c:	mov    rcx,rsi
   14000389f:	call   0x140003540
   1400038a4:	movzx  eax,WORD PTR [rdi]
   1400038a7:	xor    ebp,ebp
   1400038a9:	lea    r8,[rdi+0x2]
   1400038ad:	cmp    eax,0xffffffff
   1400038b0:	jne    0x1400038cc
   1400038b2:	test   r8,r8
   1400038b5:	jne    0x1400038bb
   1400038b7:	mov    eax,ebp
   1400038b9:	jmp    0x1400038ca
   1400038bb:	or     rax,0xffffffffffffffff
   1400038bf:	nop
   1400038c0:	inc    rax
   1400038c3:	cmp    WORD PTR [r8+rax*2],bp
   1400038c8:	jne    0x1400038c0
   1400038ca:	inc    eax
   1400038cc:	mov    rcx,QWORD PTR [rsi]
   1400038cf:	movsxd r9,eax
   1400038d2:	mov    rdx,rbx
   1400038d5:	call   QWORD PTR [rip+0x2865]        # 0x140006140
   1400038db:	test   eax,eax
   1400038dd:	je     0x1400038f3
   1400038df:	cmp    eax,0xc
   1400038e2:	je     0x140003952
   1400038e4:	cmp    eax,0x16
   1400038e7:	je     0x140003947
   1400038e9:	cmp    eax,0x22
   1400038ec:	je     0x140003947
   1400038ee:	cmp    eax,0x50
   1400038f1:	jne    0x14000393c
   1400038f3:	mov    rcx,QWORD PTR [rsi]
   1400038f6:	cmp    ebx,DWORD PTR [rcx-0xc]
   1400038f9:	jg     0x14000395d
   1400038fb:	mov    DWORD PTR [rcx-0x10],ebx
   1400038fe:	mov    rcx,QWORD PTR [rsi]
   140003901:	mov    eax,0x1
   140003906:	mov    WORD PTR [rcx+rbx*2],bp
   14000390a:	mov    rbp,QWORD PTR [rsp+0x30]
   14000390f:	mov    rbx,QWORD PTR [rsp+0x38]
   140003914:	mov    rsi,QWORD PTR [rsp+0x40]
   140003919:	add    rsp,0x20
   14000391d:	pop    rdi
   14000391e:	ret    
   14000391f:	mov    rbx,QWORD PTR [rsp+0x38]
   140003924:	mov    rsi,QWORD PTR [rsp+0x40]
   140003929:	xor    eax,eax
   14000392b:	add    rsp,0x20
   14000392f:	pop    rdi
   140003930:	ret    
   140003931:	mov    ecx,0x80070057
   140003936:	call   0x140001050
   14000393b:	int3   
   14000393c:	mov    ecx,0x80004005
   140003941:	call   0x140001050
   140003946:	int3   
   140003947:	mov    ecx,0x80070057
   14000394c:	call   0x140001050
   140003951:	int3   
   140003952:	mov    ecx,0x8007000e
   140003957:	call   0x140001050
   14000395c:	int3   
   14000395d:	mov    ecx,0x80070057
   140003962:	call   0x140001050
   140003967:	int3   
   140003968:	int3   
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rsp+0x8],rbx
   140003975:	mov    QWORD PTR [rsp+0x10],rsi
   14000397a:	push   rdi
   14000397b:	sub    rsp,0x20
   14000397f:	movsxd rbx,r8d
   140003982:	mov    rsi,rdx
   140003985:	mov    rdi,rcx
   140003988:	test   r9,r9
   14000398b:	je     0x1400039ee
   14000398d:	test   rdx,rdx
   140003990:	jne    0x140003997
   140003992:	test   r8d,r8d
   140003995:	jne    0x1400039f9
   140003997:	mov    rax,QWORD PTR [r9]
   14000399a:	mov    r8d,0x2
   1400039a0:	mov    edx,ebx
   1400039a2:	mov    rcx,r9
   1400039a5:	call   QWORD PTR [rax]
   1400039a7:	test   rax,rax
   1400039aa:	je     0x140003a04
   1400039ac:	add    rax,0x18
   1400039b0:	mov    QWORD PTR [rdi],rax
   1400039b3:	test   ebx,ebx
   1400039b5:	js     0x140003a0a
   1400039b7:	cmp    ebx,DWORD PTR [rax-0xc]
   1400039ba:	jg     0x140003a0a
   1400039bc:	mov    DWORD PTR [rax-0x10],ebx
   1400039bf:	mov    rax,QWORD PTR [rdi]
   1400039c2:	lea    rdx,[rbx+rbx*1]
   1400039c6:	xor    ecx,ecx
   1400039c8:	mov    r9,rdx
   1400039cb:	mov    r8,rsi
   1400039ce:	mov    WORD PTR [rdx+rax*1],cx
   1400039d2:	mov    rcx,QWORD PTR [rdi]
   1400039d5:	call   QWORD PTR [rip+0x27a5]        # 0x140006180
   1400039db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039e0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400039e5:	mov    rax,rdi
   1400039e8:	add    rsp,0x20
   1400039ec:	pop    rdi
   1400039ed:	ret    
   1400039ee:	mov    ecx,0x80004005
   1400039f3:	call   0x140001050
   1400039f8:	int3   
   1400039f9:	mov    ecx,0x80070057
   1400039fe:	call   0x140001050
   140003a03:	int3   
   140003a04:	call   0x140003530
   140003a09:	int3   
   140003a0a:	mov    ecx,0x80070057
   140003a0f:	call   0x140001050
   140003a14:	int3   
   140003a15:	int3   
   140003a16:	int3   
   140003a17:	int3   
   140003a18:	int3   
   140003a19:	int3   
   140003a1a:	int3   
   140003a1b:	int3   
   140003a1c:	int3   
   140003a1d:	int3   
   140003a1e:	int3   
   140003a1f:	int3   
   140003a20:	mov    QWORD PTR [rsp+0x20],rbp
   140003a25:	push   rsi
   140003a26:	push   rdi
   140003a27:	push   r15
   140003a29:	sub    rsp,0x20
   140003a2d:	mov    rax,QWORD PTR [rcx]
   140003a30:	mov    rsi,rdx
   140003a33:	mov    rbp,rdx
   140003a36:	mov    r15d,DWORD PTR [rax-0x10]
   140003a3a:	sub    rsi,rax
   140003a3d:	mov    rdi,rcx
   140003a40:	sar    rsi,1
   140003a43:	test   r8d,r8d
   140003a46:	js     0x140003b07
   140003a4c:	mov    QWORD PTR [rsp+0x48],r12
   140003a51:	xor    r12d,r12d
   140003a54:	mov    QWORD PTR [rsp+0x50],r14
   140003a59:	test   rdx,rdx
   140003a5c:	jne    0x140003a63
   140003a5e:	mov    r14d,r12d
   140003a61:	jmp    0x140003a72
   140003a63:	movsxd rdx,r8d
   140003a66:	mov    rcx,rbp
   140003a69:	call   QWORD PTR [rip+0x26e9]        # 0x140006158
   140003a6f:	mov    r14,rax
   140003a72:	mov    ecx,0x7fffffff
   140003a77:	sub    ecx,r14d
   140003a7a:	cmp    ecx,r15d
   140003a7d:	jl     0x140003b12
   140003a83:	mov    QWORD PTR [rsp+0x40],rbx
   140003a88:	lea    ebx,[r15+r14*1]
   140003a8c:	test   ebx,ebx
   140003a8e:	js     0x140003b1d
   140003a94:	mov    rax,QWORD PTR [rdi]
   140003a97:	mov    ecx,0x1
   140003a9c:	sub    ecx,DWORD PTR [rax-0x8]
   140003a9f:	mov    eax,DWORD PTR [rax-0xc]
   140003aa2:	sub    eax,ebx
   140003aa4:	or     ecx,eax
   140003aa6:	jge    0x140003ab2
   140003aa8:	mov    edx,ebx
   140003aaa:	mov    rcx,rdi
   140003aad:	call   0x140003540
   140003ab2:	mov    rax,QWORD PTR [rdi]
   140003ab5:	cmp    rsi,r15
   140003ab8:	ja     0x140003abe
   140003aba:	lea    rbp,[rax+rsi*2]
   140003abe:	movsxd rdx,r14d
   140003ac1:	lea    rcx,[rax+r15*2]
   140003ac5:	mov    r8,rbp
   140003ac8:	add    rdx,rdx
   140003acb:	mov    r9,rdx
   140003ace:	call   QWORD PTR [rip+0x26ac]        # 0x140006180
   140003ad4:	mov    rax,QWORD PTR [rdi]
   140003ad7:	cmp    ebx,DWORD PTR [rax-0xc]
   140003ada:	jg     0x140003b28
   140003adc:	mov    r14,QWORD PTR [rsp+0x50]
   140003ae1:	mov    rbp,QWORD PTR [rsp+0x58]
   140003ae6:	mov    DWORD PTR [rax-0x10],ebx
   140003ae9:	mov    rax,QWORD PTR [rdi]
   140003aec:	movsxd rcx,ebx
   140003aef:	mov    rbx,QWORD PTR [rsp+0x40]
   140003af4:	mov    WORD PTR [rax+rcx*2],r12w
   140003af9:	mov    r12,QWORD PTR [rsp+0x48]
   140003afe:	add    rsp,0x20
   140003b02:	pop    r15
   140003b04:	pop    rdi
   140003b05:	pop    rsi
   140003b06:	ret    
   140003b07:	mov    ecx,0x80070057
   140003b0c:	call   0x140001050
   140003b11:	int3   
   140003b12:	mov    ecx,0x80070057
   140003b17:	call   0x140001050
   140003b1c:	int3   
   140003b1d:	mov    ecx,0x80070057
   140003b22:	call   0x140001050
   140003b27:	int3   
   140003b28:	mov    ecx,0x80070057
   140003b2d:	call   0x140001050
   140003b32:	int3   
   140003b33:	int3   
   140003b34:	int3   
   140003b35:	int3   
   140003b36:	int3   
   140003b37:	int3   
   140003b38:	int3   
   140003b39:	int3   
   140003b3a:	int3   
   140003b3b:	int3   
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	rex push rbx
   140003b42:	sub    rsp,0x20
   140003b46:	mov    r8d,edx
   140003b49:	mov    rdx,QWORD PTR [rcx]
   140003b4c:	mov    rbx,rcx
   140003b4f:	mov    rcx,QWORD PTR [rdx-0x18]
   140003b53:	sub    rdx,0x18
   140003b57:	cmp    DWORD PTR [rdx+0xc],r8d
   140003b5b:	jge    0x140003b86
   140003b5d:	test   r8d,r8d
   140003b60:	jle    0x140003b86
   140003b62:	mov    rax,QWORD PTR [rcx]
   140003b65:	mov    r9d,0x2
   140003b6b:	call   QWORD PTR [rax+0x10]
   140003b6e:	test   rax,rax
   140003b71:	je     0x140003b80
   140003b73:	add    rax,0x18
   140003b77:	mov    QWORD PTR [rbx],rax
   140003b7a:	add    rsp,0x20
   140003b7e:	pop    rbx
   140003b7f:	ret    
   140003b80:	call   0x140003530
   140003b85:	int3   
   140003b86:	call   0x140003530
   140003b8b:	int3   
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	mov    QWORD PTR [rsp+0x18],r8
   140003b95:	push   r14
   140003b97:	push   r15
   140003b99:	sub    rsp,0x28
   140003b9d:	cmp    BYTE PTR [r8+0x19],0x0
   140003ba2:	mov    QWORD PTR [rsp+0x40],rbx
   140003ba7:	mov    QWORD PTR [rsp+0x48],rsi
   140003bac:	mov    rsi,r8
   140003baf:	mov    r15,rdx
   140003bb2:	mov    r14,rcx
   140003bb5:	jne    0x140003c10
   140003bb7:	mov    rax,QWORD PTR [r8+0x10]
   140003bbb:	cmp    BYTE PTR [rax+0x19],0x0
   140003bbf:	jne    0x140003be3
   140003bc1:	mov    r8,rax
   140003bc4:	mov    rax,QWORD PTR [rax]
   140003bc7:	cmp    BYTE PTR [rax+0x19],0x0
   140003bcb:	jne    0x140003bdc
   140003bcd:	nop    DWORD PTR [rax]
   140003bd0:	mov    r8,rax
   140003bd3:	mov    rax,QWORD PTR [rax]
   140003bd6:	cmp    BYTE PTR [rax+0x19],0x0
   140003bda:	je     0x140003bd0
   140003bdc:	mov    QWORD PTR [rsp+0x50],r8
   140003be1:	jmp    0x140003c10
   140003be3:	mov    rax,QWORD PTR [r8+0x8]
   140003be7:	cmp    BYTE PTR [rax+0x19],0x0
   140003beb:	jne    0x140003c08
   140003bed:	nop    DWORD PTR [rax]
   140003bf0:	cmp    r8,QWORD PTR [rax+0x10]
   140003bf4:	jne    0x140003c08
   140003bf6:	mov    QWORD PTR [rsp+0x50],rax
   140003bfb:	mov    r8,rax
   140003bfe:	mov    rax,QWORD PTR [rax+0x8]
   140003c02:	cmp    BYTE PTR [rax+0x19],0x0
   140003c06:	je     0x140003bf0
   140003c08:	mov    r8,rax
   140003c0b:	mov    QWORD PTR [rsp+0x50],rax
   140003c10:	mov    rcx,QWORD PTR [rsi]
   140003c13:	mov    QWORD PTR [rsp+0x20],rdi
   140003c18:	cmp    BYTE PTR [rcx+0x19],0x0
   140003c1c:	je     0x140003c24
   140003c1e:	mov    rdi,QWORD PTR [rsi+0x10]
   140003c22:	jmp    0x140003c40
   140003c24:	mov    rax,QWORD PTR [rsi+0x10]
   140003c28:	cmp    BYTE PTR [rax+0x19],0x0
   140003c2c:	je     0x140003c33
   140003c2e:	mov    rdi,rcx
   140003c31:	jmp    0x140003c40
   140003c33:	mov    rdi,QWORD PTR [r8+0x10]
   140003c37:	cmp    r8,rsi
   140003c3a:	jne    0x140003ce3
   140003c40:	cmp    BYTE PTR [rdi+0x19],0x0
   140003c44:	mov    rbx,QWORD PTR [rsi+0x8]
   140003c48:	jne    0x140003c4e
   140003c4a:	mov    QWORD PTR [rdi+0x8],rbx
   140003c4e:	mov    rax,QWORD PTR [r14]
   140003c51:	cmp    QWORD PTR [rax+0x8],rsi
   140003c55:	jne    0x140003c5d
   140003c57:	mov    QWORD PTR [rax+0x8],rdi
   140003c5b:	jmp    0x140003c6b
   140003c5d:	cmp    QWORD PTR [rbx],rsi
   140003c60:	jne    0x140003c67
   140003c62:	mov    QWORD PTR [rbx],rdi
   140003c65:	jmp    0x140003c6b
   140003c67:	mov    QWORD PTR [rbx+0x10],rdi
   140003c6b:	mov    rdx,QWORD PTR [r14]
   140003c6e:	cmp    QWORD PTR [rdx],rsi
   140003c71:	jne    0x140003c9f
   140003c73:	cmp    BYTE PTR [rdi+0x19],0x0
   140003c77:	je     0x140003c7e
   140003c79:	mov    rcx,rbx
   140003c7c:	jmp    0x140003c9c
   140003c7e:	mov    rax,QWORD PTR [rdi]
   140003c81:	mov    rcx,rdi
   140003c84:	cmp    BYTE PTR [rax+0x19],0x0
   140003c88:	jne    0x140003c9c
   140003c8a:	nop    WORD PTR [rax+rax*1+0x0]
   140003c90:	mov    rcx,rax
   140003c93:	mov    rax,QWORD PTR [rax]
   140003c96:	cmp    BYTE PTR [rax+0x19],0x0
   140003c9a:	je     0x140003c90
   140003c9c:	mov    QWORD PTR [rdx],rcx
   140003c9f:	mov    rdx,QWORD PTR [r14]
   140003ca2:	cmp    QWORD PTR [rdx+0x10],rsi
   140003ca6:	jne    0x140003d52
   140003cac:	cmp    BYTE PTR [rdi+0x19],0x0
   140003cb0:	je     0x140003cbe
   140003cb2:	mov    rcx,rbx
   140003cb5:	mov    QWORD PTR [rdx+0x10],rbx
   140003cb9:	jmp    0x140003d52
   140003cbe:	mov    rax,QWORD PTR [rdi+0x10]
   140003cc2:	mov    rcx,rdi
   140003cc5:	cmp    BYTE PTR [rax+0x19],0x0
   140003cc9:	jne    0x140003cdd
   140003ccb:	nop    DWORD PTR [rax+rax*1+0x0]
   140003cd0:	mov    rcx,rax
   140003cd3:	mov    rax,QWORD PTR [rax+0x10]
   140003cd7:	cmp    BYTE PTR [rax+0x19],0x0
   140003cdb:	je     0x140003cd0
   140003cdd:	mov    QWORD PTR [rdx+0x10],rcx
   140003ce1:	jmp    0x140003d52
   140003ce3:	mov    QWORD PTR [rcx+0x8],r8
   140003ce7:	mov    rax,QWORD PTR [rsi]
   140003cea:	mov    QWORD PTR [r8],rax
   140003ced:	cmp    r8,QWORD PTR [rsi+0x10]
   140003cf1:	jne    0x140003cf8
   140003cf3:	mov    rbx,r8
   140003cf6:	jmp    0x140003d19
   140003cf8:	cmp    BYTE PTR [rdi+0x19],0x0
   140003cfc:	mov    rbx,QWORD PTR [r8+0x8]
   140003d00:	jne    0x140003d06
   140003d02:	mov    QWORD PTR [rdi+0x8],rbx
   140003d06:	mov    QWORD PTR [rbx],rdi
   140003d09:	mov    rax,QWORD PTR [rsi+0x10]
   140003d0d:	mov    QWORD PTR [r8+0x10],rax
   140003d11:	mov    rax,QWORD PTR [rsi+0x10]
   140003d15:	mov    QWORD PTR [rax+0x8],r8
   140003d19:	mov    rax,QWORD PTR [r14]
   140003d1c:	cmp    QWORD PTR [rax+0x8],rsi
   140003d20:	jne    0x140003d28
   140003d22:	mov    QWORD PTR [rax+0x8],r8
   140003d26:	jmp    0x140003d3a
   140003d28:	mov    rax,QWORD PTR [rsi+0x8]
   140003d2c:	cmp    QWORD PTR [rax],rsi
   140003d2f:	jne    0x140003d36
   140003d31:	mov    QWORD PTR [rax],r8
   140003d34:	jmp    0x140003d3a
   140003d36:	mov    QWORD PTR [rax+0x10],r8
   140003d3a:	mov    rax,QWORD PTR [rsi+0x8]
   140003d3e:	mov    QWORD PTR [r8+0x8],rax
   140003d42:	movzx  eax,BYTE PTR [rsi+0x18]
   140003d46:	movzx  ecx,BYTE PTR [r8+0x18]
   140003d4b:	mov    BYTE PTR [r8+0x18],al
   140003d4f:	mov    BYTE PTR [rsi+0x18],cl
   140003d52:	cmp    BYTE PTR [rsi+0x18],0x1
   140003d56:	jne    0x140003fa6
   140003d5c:	mov    rax,QWORD PTR [r14]
   140003d5f:	cmp    rdi,QWORD PTR [rax+0x8]
   140003d63:	je     0x140003fa2
   140003d69:	nop    DWORD PTR [rax+0x0]
   140003d70:	cmp    BYTE PTR [rdi+0x18],0x1
   140003d74:	jne    0x140003fa2
   140003d7a:	mov    rcx,QWORD PTR [rbx]
   140003d7d:	cmp    rdi,rcx
   140003d80:	jne    0x140003e75
   140003d86:	mov    rcx,QWORD PTR [rbx+0x10]
   140003d8a:	cmp    BYTE PTR [rcx+0x18],0x0
   140003d8e:	jne    0x140003de4
   140003d90:	mov    BYTE PTR [rcx+0x18],0x1
   140003d94:	mov    rcx,QWORD PTR [rbx+0x10]
   140003d98:	mov    BYTE PTR [rbx+0x18],0x0
   140003d9c:	mov    rax,QWORD PTR [rcx]
   140003d9f:	mov    QWORD PTR [rbx+0x10],rax
   140003da3:	mov    rax,QWORD PTR [rcx]
   140003da6:	cmp    BYTE PTR [rax+0x19],0x0
   140003daa:	jne    0x140003db0
   140003dac:	mov    QWORD PTR [rax+0x8],rbx
   140003db0:	mov    rax,QWORD PTR [rbx+0x8]
   140003db4:	mov    QWORD PTR [rcx+0x8],rax
   140003db8:	mov    rax,QWORD PTR [r14]
   140003dbb:	cmp    rbx,QWORD PTR [rax+0x8]
   140003dbf:	jne    0x140003dc7
   140003dc1:	mov    QWORD PTR [rax+0x8],rcx
   140003dc5:	jmp    0x140003dd9
   140003dc7:	mov    rax,QWORD PTR [rbx+0x8]
   140003dcb:	cmp    rbx,QWORD PTR [rax]
   140003dce:	jne    0x140003dd5
   140003dd0:	mov    QWORD PTR [rax],rcx
   140003dd3:	jmp    0x140003dd9
   140003dd5:	mov    QWORD PTR [rax+0x10],rcx
   140003dd9:	mov    QWORD PTR [rcx],rbx
   140003ddc:	mov    QWORD PTR [rbx+0x8],rcx
   140003de0:	mov    rcx,QWORD PTR [rbx+0x10]
   140003de4:	cmp    BYTE PTR [rcx+0x19],0x0
   140003de8:	jne    0x140003eed
   140003dee:	mov    rax,QWORD PTR [rcx]
   140003df1:	cmp    BYTE PTR [rax+0x18],0x1
   140003df5:	jne    0x140003e05
   140003df7:	mov    rax,QWORD PTR [rcx+0x10]
   140003dfb:	cmp    BYTE PTR [rax+0x18],0x1
   140003dff:	je     0x140003ee9
   140003e05:	mov    rax,QWORD PTR [rcx+0x10]
   140003e09:	cmp    BYTE PTR [rax+0x18],0x1
   140003e0d:	jne    0x140003e29
   140003e0f:	mov    rax,QWORD PTR [rcx]
   140003e12:	mov    rdx,rcx
   140003e15:	mov    BYTE PTR [rax+0x18],0x1
   140003e19:	mov    BYTE PTR [rcx+0x18],0x0
   140003e1d:	mov    rcx,r14
   140003e20:	call   0x140004110
   140003e25:	mov    rcx,QWORD PTR [rbx+0x10]
   140003e29:	movzx  eax,BYTE PTR [rbx+0x18]
   140003e2d:	mov    BYTE PTR [rcx+0x18],al
   140003e30:	mov    BYTE PTR [rbx+0x18],0x1
   140003e34:	mov    rax,QWORD PTR [rcx+0x10]
   140003e38:	mov    BYTE PTR [rax+0x18],0x1
   140003e3c:	mov    rcx,QWORD PTR [rbx+0x10]
   140003e40:	mov    rax,QWORD PTR [rcx]
   140003e43:	mov    QWORD PTR [rbx+0x10],rax
   140003e47:	mov    rax,QWORD PTR [rcx]
   140003e4a:	cmp    BYTE PTR [rax+0x19],0x0
   140003e4e:	jne    0x140003e54
   140003e50:	mov    QWORD PTR [rax+0x8],rbx
   140003e54:	mov    rax,QWORD PTR [rbx+0x8]
   140003e58:	mov    QWORD PTR [rcx+0x8],rax
   140003e5c:	mov    rax,QWORD PTR [r14]
   140003e5f:	cmp    rbx,QWORD PTR [rax+0x8]
   140003e63:	jne    0x140003f06
   140003e69:	mov    QWORD PTR [rax+0x8],rcx
   140003e6d:	mov    QWORD PTR [rcx],rbx
   140003e70:	jmp    0x140003f9e
   140003e75:	cmp    BYTE PTR [rcx+0x18],0x0
   140003e79:	jne    0x140003ed0
   140003e7b:	mov    BYTE PTR [rcx+0x18],0x1
   140003e7f:	mov    rcx,QWORD PTR [rbx]
   140003e82:	mov    BYTE PTR [rbx+0x18],0x0
   140003e86:	mov    rax,QWORD PTR [rcx+0x10]
   140003e8a:	mov    QWORD PTR [rbx],rax
   140003e8d:	mov    rax,QWORD PTR [rcx+0x10]
   140003e91:	cmp    BYTE PTR [rax+0x19],0x0
   140003e95:	jne    0x140003e9b
   140003e97:	mov    QWORD PTR [rax+0x8],rbx
   140003e9b:	mov    rax,QWORD PTR [rbx+0x8]
   140003e9f:	mov    QWORD PTR [rcx+0x8],rax
   140003ea3:	mov    rax,QWORD PTR [r14]
   140003ea6:	cmp    rbx,QWORD PTR [rax+0x8]
   140003eaa:	jne    0x140003eb2
   140003eac:	mov    QWORD PTR [rax+0x8],rcx
   140003eb0:	jmp    0x140003ec5
   140003eb2:	mov    rax,QWORD PTR [rbx+0x8]
   140003eb6:	cmp    rbx,QWORD PTR [rax+0x10]
   140003eba:	jne    0x140003ec2
   140003ebc:	mov    QWORD PTR [rax+0x10],rcx
   140003ec0:	jmp    0x140003ec5
   140003ec2:	mov    QWORD PTR [rax],rcx
   140003ec5:	mov    QWORD PTR [rcx+0x10],rbx
   140003ec9:	mov    QWORD PTR [rbx+0x8],rcx
   140003ecd:	mov    rcx,QWORD PTR [rbx]
   140003ed0:	cmp    BYTE PTR [rcx+0x19],0x0
   140003ed4:	jne    0x140003eed
   140003ed6:	mov    rax,QWORD PTR [rcx+0x10]
   140003eda:	cmp    BYTE PTR [rax+0x18],0x1
   140003ede:	jne    0x140003f23
   140003ee0:	mov    rax,QWORD PTR [rcx]
   140003ee3:	cmp    BYTE PTR [rax+0x18],0x1
   140003ee7:	jne    0x140003f23
   140003ee9:	mov    BYTE PTR [rcx+0x18],0x0
   140003eed:	mov    rax,QWORD PTR [r14]
   140003ef0:	mov    rdi,rbx
   140003ef3:	mov    rbx,QWORD PTR [rbx+0x8]
   140003ef7:	cmp    rdi,QWORD PTR [rax+0x8]
   140003efb:	jne    0x140003d70
   140003f01:	jmp    0x140003fa2
   140003f06:	mov    rax,QWORD PTR [rbx+0x8]
   140003f0a:	cmp    rbx,QWORD PTR [rax]
   140003f0d:	jne    0x140003f1a
   140003f0f:	mov    QWORD PTR [rax],rcx
   140003f12:	mov    QWORD PTR [rcx],rbx
   140003f15:	jmp    0x140003f9e
   140003f1a:	mov    QWORD PTR [rax+0x10],rcx
   140003f1e:	mov    QWORD PTR [rcx],rbx
   140003f21:	jmp    0x140003f9e
   140003f23:	mov    rax,QWORD PTR [rcx]
   140003f26:	cmp    BYTE PTR [rax+0x18],0x1
   140003f2a:	jne    0x140003f46
   140003f2c:	mov    rax,QWORD PTR [rcx+0x10]
   140003f30:	mov    rdx,rcx
   140003f33:	mov    BYTE PTR [rax+0x18],0x1
   140003f37:	mov    BYTE PTR [rcx+0x18],0x0
   140003f3b:	mov    rcx,r14
   140003f3e:	call   0x1400040b0
   140003f43:	mov    rcx,QWORD PTR [rbx]
   140003f46:	movzx  eax,BYTE PTR [rbx+0x18]
   140003f4a:	mov    BYTE PTR [rcx+0x18],al
   140003f4d:	mov    BYTE PTR [rbx+0x18],0x1
   140003f51:	mov    rax,QWORD PTR [rcx]
   140003f54:	mov    BYTE PTR [rax+0x18],0x1
   140003f58:	mov    rcx,QWORD PTR [rbx]
   140003f5b:	mov    rax,QWORD PTR [rcx+0x10]
   140003f5f:	mov    QWORD PTR [rbx],rax
   140003f62:	mov    rax,QWORD PTR [rcx+0x10]
   140003f66:	cmp    BYTE PTR [rax+0x19],0x0
   140003f6a:	jne    0x140003f70
   140003f6c:	mov    QWORD PTR [rax+0x8],rbx
   140003f70:	mov    rax,QWORD PTR [rbx+0x8]
   140003f74:	mov    QWORD PTR [rcx+0x8],rax
   140003f78:	mov    rax,QWORD PTR [r14]
   140003f7b:	cmp    rbx,QWORD PTR [rax+0x8]
   140003f7f:	jne    0x140003f87
   140003f81:	mov    QWORD PTR [rax+0x8],rcx
   140003f85:	jmp    0x140003f9a
   140003f87:	mov    rax,QWORD PTR [rbx+0x8]
   140003f8b:	cmp    rbx,QWORD PTR [rax+0x10]
   140003f8f:	jne    0x140003f97
   140003f91:	mov    QWORD PTR [rax+0x10],rcx
   140003f95:	jmp    0x140003f9a
   140003f97:	mov    QWORD PTR [rax],rcx
   140003f9a:	mov    QWORD PTR [rcx+0x10],rbx
   140003f9e:	mov    QWORD PTR [rbx+0x8],rcx
   140003fa2:	mov    BYTE PTR [rdi+0x18],0x1
   140003fa6:	mov    rdx,QWORD PTR [rsi+0x28]
   140003faa:	sub    rdx,0x18
   140003fae:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140003fb3:	mov    rdi,QWORD PTR [rsp+0x20]
   140003fb8:	jg     0x140003fc3
   140003fba:	mov    rcx,QWORD PTR [rdx]
   140003fbd:	mov    rax,QWORD PTR [rcx]
   140003fc0:	call   QWORD PTR [rax+0x8]
   140003fc3:	mov    rdx,QWORD PTR [rsi+0x20]
   140003fc7:	sub    rdx,0x18
   140003fcb:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140003fd0:	mov    rbx,QWORD PTR [rsp+0x40]
   140003fd5:	jg     0x140003fe0
   140003fd7:	mov    rcx,QWORD PTR [rdx]
   140003fda:	mov    rax,QWORD PTR [rcx]
   140003fdd:	call   QWORD PTR [rax+0x8]
   140003fe0:	mov    rcx,rsi
   140003fe3:	call   QWORD PTR [rip+0x229f]        # 0x140006288
   140003fe9:	mov    rax,QWORD PTR [r14+0x8]
   140003fed:	mov    rsi,QWORD PTR [rsp+0x48]
   140003ff2:	test   rax,rax
   140003ff5:	je     0x140003ffe
   140003ff7:	dec    rax
   140003ffa:	mov    QWORD PTR [r14+0x8],rax
   140003ffe:	mov    rax,QWORD PTR [rsp+0x50]
   140004003:	mov    QWORD PTR [r15],rax
   140004006:	mov    rax,r15
   140004009:	add    rsp,0x28
   14000400d:	pop    r15
   14000400f:	pop    r14
   140004011:	ret    
   140004012:	int3   
   140004013:	int3   
   140004014:	int3   
   140004015:	int3   
   140004016:	int3   
   140004017:	int3   
   140004018:	int3   
   140004019:	int3   
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	mov    QWORD PTR [rsp+0x8],rbx
   140004025:	mov    QWORD PTR [rsp+0x10],rsi
   14000402a:	push   rdi
   14000402b:	sub    rsp,0x20
   14000402f:	cmp    BYTE PTR [rdx+0x19],0x0
   140004033:	mov    rbx,rdx
   140004036:	mov    rsi,rcx
   140004039:	mov    rdi,rdx
   14000403c:	jne    0x140004091
   14000403e:	xchg   ax,ax
   140004040:	mov    rdx,QWORD PTR [rdi+0x10]
   140004044:	mov    rcx,rsi
   140004047:	call   0x140004020
   14000404c:	mov    rdx,QWORD PTR [rbx+0x28]
   140004050:	mov    rdi,QWORD PTR [rdi]
   140004053:	sub    rdx,0x18
   140004057:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000405c:	jg     0x140004067
   14000405e:	mov    rcx,QWORD PTR [rdx]
   140004061:	mov    rax,QWORD PTR [rcx]
   140004064:	call   QWORD PTR [rax+0x8]
   140004067:	mov    rdx,QWORD PTR [rbx+0x20]
   14000406b:	sub    rdx,0x18
   14000406f:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140004074:	jg     0x14000407f
   140004076:	mov    rcx,QWORD PTR [rdx]
   140004079:	mov    rax,QWORD PTR [rcx]
   14000407c:	call   QWORD PTR [rax+0x8]
   14000407f:	mov    rcx,rbx
   140004082:	call   QWORD PTR [rip+0x2200]        # 0x140006288
   140004088:	cmp    BYTE PTR [rdi+0x19],0x0
   14000408c:	mov    rbx,rdi
   14000408f:	je     0x140004040
   140004091:	mov    rbx,QWORD PTR [rsp+0x30]
   140004096:	mov    rsi,QWORD PTR [rsp+0x38]
   14000409b:	add    rsp,0x20
   14000409f:	pop    rdi
   1400040a0:	ret    
   1400040a1:	int3   
   1400040a2:	int3   
   1400040a3:	int3   
   1400040a4:	int3   
   1400040a5:	int3   
   1400040a6:	int3   
   1400040a7:	int3   
   1400040a8:	int3   
   1400040a9:	int3   
   1400040aa:	int3   
   1400040ab:	int3   
   1400040ac:	int3   
   1400040ad:	int3   
   1400040ae:	int3   
   1400040af:	int3   
   1400040b0:	mov    r8,QWORD PTR [rdx+0x10]
   1400040b4:	mov    rax,QWORD PTR [r8]
   1400040b7:	mov    QWORD PTR [rdx+0x10],rax
   1400040bb:	mov    rax,QWORD PTR [r8]
   1400040be:	cmp    BYTE PTR [rax+0x19],0x0
   1400040c2:	jne    0x1400040c8
   1400040c4:	mov    QWORD PTR [rax+0x8],rdx
   1400040c8:	mov    rax,QWORD PTR [rdx+0x8]
   1400040cc:	mov    QWORD PTR [r8+0x8],rax
   1400040d0:	mov    rax,QWORD PTR [rcx]
   1400040d3:	cmp    rdx,QWORD PTR [rax+0x8]
   1400040d7:	jne    0x1400040e5
   1400040d9:	mov    QWORD PTR [rax+0x8],r8
   1400040dd:	mov    QWORD PTR [r8],rdx
   1400040e0:	mov    QWORD PTR [rdx+0x8],r8
   1400040e4:	ret    
   1400040e5:	mov    rax,QWORD PTR [rdx+0x8]
   1400040e9:	cmp    rdx,QWORD PTR [rax]
   1400040ec:	jne    0x1400040f9
   1400040ee:	mov    QWORD PTR [rax],r8
   1400040f1:	mov    QWORD PTR [r8],rdx
   1400040f4:	mov    QWORD PTR [rdx+0x8],r8
   1400040f8:	ret    
   1400040f9:	mov    QWORD PTR [rax+0x10],r8
   1400040fd:	mov    QWORD PTR [r8],rdx
   140004100:	mov    QWORD PTR [rdx+0x8],r8
   140004104:	ret    
   140004105:	int3   
   140004106:	int3   
   140004107:	int3   
   140004108:	int3   
   140004109:	int3   
   14000410a:	int3   
   14000410b:	int3   
   14000410c:	int3   
   14000410d:	int3   
   14000410e:	int3   
   14000410f:	int3   
   140004110:	mov    r8,QWORD PTR [rdx]
   140004113:	mov    rax,QWORD PTR [r8+0x10]
   140004117:	mov    QWORD PTR [rdx],rax
   14000411a:	mov    rax,QWORD PTR [r8+0x10]
   14000411e:	cmp    BYTE PTR [rax+0x19],0x0
   140004122:	jne    0x140004128
   140004124:	mov    QWORD PTR [rax+0x8],rdx
   140004128:	mov    rax,QWORD PTR [rdx+0x8]
   14000412c:	mov    QWORD PTR [r8+0x8],rax
   140004130:	mov    rax,QWORD PTR [rcx]
   140004133:	cmp    rdx,QWORD PTR [rax+0x8]
   140004137:	jne    0x140004146
   140004139:	mov    QWORD PTR [rax+0x8],r8
   14000413d:	mov    QWORD PTR [r8+0x10],rdx
   140004141:	mov    QWORD PTR [rdx+0x8],r8
   140004145:	ret    
   140004146:	mov    rax,QWORD PTR [rdx+0x8]
   14000414a:	cmp    rdx,QWORD PTR [rax+0x10]
   14000414e:	jne    0x14000415d
   140004150:	mov    QWORD PTR [rax+0x10],r8
   140004154:	mov    QWORD PTR [r8+0x10],rdx
   140004158:	mov    QWORD PTR [rdx+0x8],r8
   14000415c:	ret    
   14000415d:	mov    QWORD PTR [rax],r8
   140004160:	mov    QWORD PTR [r8+0x10],rdx
   140004164:	mov    QWORD PTR [rdx+0x8],r8
   140004168:	ret    
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	sub    rsp,0x28
   140004174:	mov    ecx,0x30
   140004179:	call   QWORD PTR [rip+0x2019]        # 0x140006198
   14000417f:	test   rax,rax
   140004182:	jne    0x14000418b
   140004184:	call   QWORD PTR [rip+0x1fa6]        # 0x140006130
   14000418a:	int3   
   14000418b:	lea    rcx,[rax+0x8]
   14000418f:	mov    QWORD PTR [rax],rax
   140004192:	test   rcx,rcx
   140004195:	je     0x14000419a
   140004197:	mov    QWORD PTR [rcx],rax
   14000419a:	lea    rcx,[rax+0x10]
   14000419e:	test   rcx,rcx
   1400041a1:	je     0x1400041a6
   1400041a3:	mov    QWORD PTR [rcx],rax
   1400041a6:	mov    WORD PTR [rax+0x18],0x101
   1400041ac:	add    rsp,0x28
   1400041b0:	ret    
   1400041b1:	int3   
   1400041b2:	int3   
   1400041b3:	int3   
   1400041b4:	int3   
   1400041b5:	int3   
   1400041b6:	int3   
   1400041b7:	int3   
   1400041b8:	int3   
   1400041b9:	int3   
   1400041ba:	int3   
   1400041bb:	int3   
   1400041bc:	int3   
   1400041bd:	int3   
   1400041be:	int3   
   1400041bf:	int3   
   1400041c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400041c5:	mov    QWORD PTR [rsp+0x18],r8
   1400041ca:	mov    QWORD PTR [rsp+0x20],r9
   1400041cf:	sub    rsp,0x28
   1400041d3:	lea    r8,[rsp+0x40]
   1400041d8:	call   0x140004250
   1400041dd:	add    rsp,0x28
   1400041e1:	ret    
   1400041e2:	int3   
   1400041e3:	int3   
   1400041e4:	int3   
   1400041e5:	int3   
   1400041e6:	int3   
   1400041e7:	int3   
   1400041e8:	int3   
   1400041e9:	int3   
   1400041ea:	int3   
   1400041eb:	int3   
   1400041ec:	int3   
   1400041ed:	int3   
   1400041ee:	int3   
   1400041ef:	int3   
   1400041f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400041f5:	push   rdi
   1400041f6:	sub    rsp,0x30
   1400041fa:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140004203:	mov    QWORD PTR [rsp+0x48],rbx
   140004208:	mov    rbx,r8
   14000420b:	mov    rdi,rcx
   14000420e:	mov    DWORD PTR [rsp+0x20],0x0
   140004216:	mov    rcx,QWORD PTR [rdx]
   140004219:	sub    rcx,0x18
   14000421d:	call   0x1400035a0
   140004222:	add    rax,0x18
   140004226:	mov    QWORD PTR [rdi],rax
   140004229:	mov    rcx,QWORD PTR [rbx]
   14000422c:	sub    rcx,0x18
   140004230:	call   0x1400035a0
   140004235:	add    rax,0x18
   140004239:	mov    QWORD PTR [rdi+0x8],rax
   14000423d:	mov    rax,rdi
   140004240:	mov    rbx,QWORD PTR [rsp+0x48]
   140004245:	add    rsp,0x30
   140004249:	pop    rdi
   14000424a:	ret    
   14000424b:	int3   
   14000424c:	int3   
   14000424d:	int3   
   14000424e:	int3   
   14000424f:	int3   
   140004250:	rex push rbp
   140004252:	push   rsi
   140004253:	push   rdi
   140004254:	sub    rsp,0x20
   140004258:	mov    rbp,r8
   14000425b:	mov    rsi,rdx
   14000425e:	mov    rdi,rcx
   140004261:	test   rdx,rdx
   140004264:	je     0x14000430d
   14000426a:	mov    rax,QWORD PTR [rcx]
   14000426d:	mov    QWORD PTR [rsp+0x48],r14
   140004272:	mov    rdx,r8
   140004275:	mov    rcx,rsi
   140004278:	mov    QWORD PTR [rsp+0x50],r15
   14000427d:	movsxd r15,DWORD PTR [rax-0x10]
   140004281:	call   QWORD PTR [rip+0x1f51]        # 0x1400061d8
   140004287:	mov    r14d,eax
   14000428a:	test   eax,eax
   14000428c:	js     0x140004318
   140004292:	mov    QWORD PTR [rsp+0x40],rbx
   140004297:	lea    ebx,[rax+r15*1]
   14000429b:	test   ebx,ebx
   14000429d:	js     0x140004323
   1400042a3:	mov    rax,QWORD PTR [rdi]
   1400042a6:	mov    ecx,0x1
   1400042ab:	sub    ecx,DWORD PTR [rax-0x8]
   1400042ae:	mov    eax,DWORD PTR [rax-0xc]
   1400042b1:	sub    eax,ebx
   1400042b3:	or     ecx,eax
   1400042b5:	jge    0x1400042c1
   1400042b7:	mov    edx,ebx
   1400042b9:	mov    rcx,rdi
   1400042bc:	call   0x140003540
   1400042c1:	lea    eax,[r14+0x1]
   1400042c5:	mov    r9,rbp
   1400042c8:	mov    r8,rsi
   1400042cb:	movsxd rdx,eax
   1400042ce:	mov    rax,QWORD PTR [rdi]
   1400042d1:	lea    rcx,[rax+r15*2]
   1400042d5:	call   QWORD PTR [rip+0x1e95]        # 0x140006170
   1400042db:	test   ebx,ebx
   1400042dd:	js     0x14000432e
   1400042df:	mov    rax,QWORD PTR [rdi]
   1400042e2:	cmp    ebx,DWORD PTR [rax-0xc]
   1400042e5:	jg     0x14000432e
   1400042e7:	mov    r14,QWORD PTR [rsp+0x48]
   1400042ec:	mov    r15,QWORD PTR [rsp+0x50]
   1400042f1:	mov    DWORD PTR [rax-0x10],ebx
   1400042f4:	mov    rax,QWORD PTR [rdi]
   1400042f7:	movsxd rcx,ebx
   1400042fa:	mov    rbx,QWORD PTR [rsp+0x40]
   1400042ff:	xor    edx,edx
   140004301:	mov    WORD PTR [rax+rcx*2],dx
   140004305:	add    rsp,0x20
   140004309:	pop    rdi
   14000430a:	pop    rsi
   14000430b:	pop    rbp
   14000430c:	ret    
   14000430d:	mov    ecx,0x80070057
   140004312:	call   0x140001050
   140004317:	int3   
   140004318:	mov    ecx,0x80004005
   14000431d:	call   0x140001050
   140004322:	int3   
   140004323:	mov    ecx,0x80070057
   140004328:	call   0x140001050
   14000432d:	int3   
   14000432e:	mov    ecx,0x80070057
   140004333:	call   0x140001050
   140004338:	int3   
   140004339:	int3   
   14000433a:	int3   
   14000433b:	int3   
   14000433c:	int3   
   14000433d:	int3   
   14000433e:	int3   
   14000433f:	int3   
   140004340:	rex push rdi
   140004342:	sub    rsp,0x30
   140004346:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000434f:	mov    QWORD PTR [rsp+0x40],rbx
   140004354:	mov    QWORD PTR [rsp+0x48],rsi
   140004359:	mov    rsi,rdx
   14000435c:	call   0x140004650
   140004361:	mov    rdi,rax
   140004364:	mov    QWORD PTR [rsp+0x50],rax
   140004369:	mov    WORD PTR [rax+0x18],0x0
   14000436f:	lea    rbx,[rax+0x20]
   140004373:	mov    QWORD PTR [rsp+0x58],rbx
   140004378:	mov    QWORD PTR [rsp+0x28],rbx
   14000437d:	test   rbx,rbx
   140004380:	je     0x1400043aa
   140004382:	mov    rcx,QWORD PTR [rsi]
   140004385:	sub    rcx,0x18
   140004389:	call   0x1400035a0
   14000438e:	add    rax,0x18
   140004392:	mov    QWORD PTR [rbx],rax
   140004395:	mov    rcx,QWORD PTR [rsi+0x8]
   140004399:	sub    rcx,0x18
   14000439d:	call   0x1400035a0
   1400043a2:	add    rax,0x18
   1400043a6:	mov    QWORD PTR [rbx+0x8],rax
   1400043aa:	mov    rax,rdi
   1400043ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400043b2:	mov    rsi,QWORD PTR [rsp+0x48]
   1400043b7:	add    rsp,0x30
   1400043bb:	pop    rdi
   1400043bc:	ret    
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	rex push rdi
   1400043c2:	push   r14
   1400043c4:	push   r15
   1400043c6:	sub    rsp,0x40
   1400043ca:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400043d3:	mov    QWORD PTR [rsp+0x68],rbx
   1400043d8:	mov    QWORD PTR [rsp+0x70],rsi
   1400043dd:	mov    rsi,r9
   1400043e0:	mov    r14,rdx
   1400043e3:	mov    r15,rcx
   1400043e6:	mov    rdi,QWORD PTR [rcx]
   1400043e9:	mov    r8,QWORD PTR [rdi+0x8]
   1400043ed:	mov    r11,rdi
   1400043f0:	mov    r10b,0x1
   1400043f3:	xor    r9d,r9d
   1400043f6:	cmp    BYTE PTR [r8+0x19],r9b
   1400043fa:	jne    0x140004463
   1400043fc:	nop    DWORD PTR [rax+0x0]
   140004400:	mov    r11,r8
   140004403:	mov    rdx,QWORD PTR [r8+0x20]
   140004407:	mov    eax,r9d
   14000440a:	test   rdx,rdx
   14000440d:	setne  al
   140004410:	test   eax,eax
   140004412:	je     0x140004458
   140004414:	mov    rax,QWORD PTR [rsi]
   140004417:	sub    rdx,rax
   14000441a:	nop    WORD PTR [rax+rax*1+0x0]
   140004420:	movzx  ecx,WORD PTR [rax]
   140004423:	cmp    cx,WORD PTR [rax+rdx*1]
   140004427:	jne    0x140004437
   140004429:	add    rax,0x2
   14000442d:	test   cx,cx
   140004430:	jne    0x140004420
   140004432:	mov    eax,r9d
   140004435:	jmp    0x14000443c
   140004437:	sbb    eax,eax
   140004439:	or     eax,0x1
   14000443c:	test   eax,eax
   14000443e:	sets   r10b
   140004442:	test   r10b,r10b
   140004445:	je     0x14000444c
   140004447:	mov    r8,QWORD PTR [r8]
   14000444a:	jmp    0x140004450
   14000444c:	mov    r8,QWORD PTR [r8+0x10]
   140004450:	cmp    BYTE PTR [r8+0x19],r9b
   140004454:	je     0x140004400
   140004456:	jmp    0x140004463
   140004458:	mov    ecx,0x80004005
   14000445d:	call   0x140001050
   140004462:	int3   
   140004463:	mov    rbx,r11
   140004466:	test   r10b,r10b
   140004469:	je     0x14000450a
   14000446f:	cmp    r11,QWORD PTR [rdi]
   140004472:	jne    0x1400044a7
   140004474:	mov    rax,QWORD PTR [rsp+0x80]
   14000447c:	mov    QWORD PTR [rsp+0x28],rax
   140004481:	mov    r9,r11
   140004484:	mov    r8b,0x1
   140004487:	lea    rdx,[rsp+0x60]
   14000448c:	mov    rcx,r15
   14000448f:	call   0x1400046a0
   140004494:	mov    rax,QWORD PTR [rax]
   140004497:	mov    QWORD PTR [r14],rax
   14000449a:	mov    BYTE PTR [r14+0x8],0x1
   14000449f:	mov    rax,r14
   1400044a2:	jmp    0x1400045cd
   1400044a7:	cmp    BYTE PTR [r11+0x19],0x0
   1400044ac:	je     0x1400044b4
   1400044ae:	mov    rbx,QWORD PTR [r11+0x10]
   1400044b2:	jmp    0x14000450a
   1400044b4:	mov    rax,QWORD PTR [r11]
   1400044b7:	cmp    BYTE PTR [rax+0x19],0x0
   1400044bb:	jne    0x1400044df
   1400044bd:	mov    rbx,rax
   1400044c0:	mov    rax,QWORD PTR [rax+0x10]
   1400044c4:	cmp    BYTE PTR [rax+0x19],0x0
   1400044c8:	jne    0x14000450a
   1400044ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400044d0:	mov    rbx,rax
   1400044d3:	mov    rax,QWORD PTR [rax+0x10]
   1400044d7:	cmp    BYTE PTR [rax+0x19],0x0
   1400044db:	je     0x1400044d0
   1400044dd:	jmp    0x14000450a
   1400044df:	mov    rax,QWORD PTR [r11+0x8]
   1400044e3:	cmp    BYTE PTR [rax+0x19],0x0
   1400044e7:	jne    0x140004502
   1400044e9:	nop    DWORD PTR [rax+0x0]
   1400044f0:	cmp    rbx,QWORD PTR [rax]
   1400044f3:	jne    0x140004502
   1400044f5:	mov    rbx,rax
   1400044f8:	mov    rax,QWORD PTR [rax+0x8]
   1400044fc:	cmp    BYTE PTR [rax+0x19],0x0
   140004500:	je     0x1400044f0
   140004502:	cmp    BYTE PTR [rbx+0x19],0x0
   140004506:	cmove  rbx,rax
   14000450a:	mov    rdx,QWORD PTR [rsi]
   14000450d:	mov    eax,r9d
   140004510:	test   rdx,rdx
   140004513:	setne  al
   140004516:	test   eax,eax
   140004518:	jne    0x140004525
   14000451a:	mov    ecx,0x80004005
   14000451f:	call   0x140001050
   140004524:	int3   
   140004525:	mov    rax,QWORD PTR [rbx+0x20]
   140004529:	sub    rdx,rax
   14000452c:	nop    DWORD PTR [rax+0x0]
   140004530:	movzx  ecx,WORD PTR [rax]
   140004533:	cmp    cx,WORD PTR [rax+rdx*1]
   140004537:	jne    0x140004544
   140004539:	add    rax,0x2
   14000453d:	test   cx,cx
   140004540:	jne    0x140004530
   140004542:	jmp    0x14000454b
   140004544:	sbb    r9d,r9d
   140004547:	or     r9d,0x1
   14000454b:	test   r9d,r9d
   14000454e:	jns    0x140004581
   140004550:	mov    rax,QWORD PTR [rsp+0x80]
   140004558:	mov    QWORD PTR [rsp+0x28],rax
   14000455d:	mov    r9,r11
   140004560:	movzx  r8d,r10b
   140004564:	lea    rdx,[rsp+0x38]
   140004569:	mov    rcx,r15
   14000456c:	call   0x1400046a0
   140004571:	mov    rax,QWORD PTR [rax]
   140004574:	mov    QWORD PTR [r14],rax
   140004577:	mov    BYTE PTR [r14+0x8],0x1
   14000457c:	mov    rax,r14
   14000457f:	jmp    0x1400045cd
   140004581:	mov    rsi,QWORD PTR [rsp+0x80]
   140004589:	mov    rdx,QWORD PTR [rsi+0x28]
   14000458d:	sub    rdx,0x18
   140004591:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140004596:	jg     0x1400045a1
   140004598:	mov    rcx,QWORD PTR [rdx]
   14000459b:	mov    rax,QWORD PTR [rcx]
   14000459e:	call   QWORD PTR [rax+0x8]
   1400045a1:	mov    rdx,QWORD PTR [rsi+0x20]
   1400045a5:	sub    rdx,0x18
   1400045a9:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400045ae:	jg     0x1400045b9
   1400045b0:	mov    rcx,QWORD PTR [rdx]
   1400045b3:	mov    rax,QWORD PTR [rcx]
   1400045b6:	call   QWORD PTR [rax+0x8]
   1400045b9:	mov    rcx,rsi
   1400045bc:	call   QWORD PTR [rip+0x1cc6]        # 0x140006288
   1400045c2:	mov    QWORD PTR [r14],rbx
   1400045c5:	mov    BYTE PTR [r14+0x8],0x0
   1400045ca:	mov    rax,r14
   1400045cd:	mov    rbx,QWORD PTR [rsp+0x68]
   1400045d2:	mov    rsi,QWORD PTR [rsp+0x70]
   1400045d7:	add    rsp,0x40
   1400045db:	pop    r15
   1400045dd:	pop    r14
   1400045df:	pop    rdi
   1400045e0:	ret    
   1400045e1:	int3   
   1400045e2:	int3   
   1400045e3:	int3   
   1400045e4:	int3   
   1400045e5:	int3   
   1400045e6:	int3   
   1400045e7:	int3   
   1400045e8:	int3   
   1400045e9:	int3   
   1400045ea:	int3   
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400045f5:	push   rdi
   1400045f6:	sub    rsp,0x20
   1400045fa:	mov    rdi,rdx
   1400045fd:	mov    rdx,QWORD PTR [rdx+0x28]
   140004601:	sub    rdx,0x18
   140004605:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000460a:	jg     0x140004615
   14000460c:	mov    rcx,QWORD PTR [rdx]
   14000460f:	mov    rax,QWORD PTR [rcx]
   140004612:	call   QWORD PTR [rax+0x8]
   140004615:	mov    rdx,QWORD PTR [rdi+0x20]
   140004619:	sub    rdx,0x18
   14000461d:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140004622:	jg     0x14000462d
   140004624:	mov    rcx,QWORD PTR [rdx]
   140004627:	mov    rax,QWORD PTR [rcx]
   14000462a:	call   QWORD PTR [rax+0x8]
   14000462d:	mov    rcx,rdi
   140004630:	mov    rbx,QWORD PTR [rsp+0x30]
   140004635:	add    rsp,0x20
   140004639:	pop    rdi
   14000463a:	rex.W jmp QWORD PTR [rip+0x1c47]        # 0x140006288
   140004641:	int3   
   140004642:	int3   
   140004643:	int3   
   140004644:	int3   
   140004645:	int3   
   140004646:	int3   
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	rex push rbx
   140004652:	sub    rsp,0x20
   140004656:	mov    rbx,rcx
   140004659:	mov    ecx,0x30
   14000465e:	call   QWORD PTR [rip+0x1b34]        # 0x140006198
   140004664:	mov    rdx,rax
   140004667:	test   rax,rax
   14000466a:	jne    0x140004673
   14000466c:	call   QWORD PTR [rip+0x1abe]        # 0x140006130
   140004672:	int3   
   140004673:	mov    rax,QWORD PTR [rbx]
   140004676:	lea    rcx,[rdx+0x8]
   14000467a:	mov    QWORD PTR [rdx],rax
   14000467d:	test   rcx,rcx
   140004680:	je     0x140004688
   140004682:	mov    rax,QWORD PTR [rbx]
   140004685:	mov    QWORD PTR [rcx],rax
   140004688:	lea    rcx,[rdx+0x10]
   14000468c:	test   rcx,rcx
   14000468f:	je     0x140004697
   140004691:	mov    rax,QWORD PTR [rbx]
   140004694:	mov    QWORD PTR [rcx],rax
   140004697:	mov    rax,rdx
   14000469a:	add    rsp,0x20
   14000469e:	pop    rbx
   14000469f:	ret    
   1400046a0:	rex push rbx
   1400046a2:	sub    rsp,0x20
   1400046a6:	mov    rax,QWORD PTR [rcx+0x8]
   1400046aa:	mov    r10,rcx
   1400046ad:	movabs rcx,0x555555555555554
   1400046b7:	mov    rbx,rdx
   1400046ba:	cmp    rax,rcx
   1400046bd:	jb     0x140004714
   1400046bf:	mov    QWORD PTR [rsp+0x30],rdi
   1400046c4:	mov    rdi,QWORD PTR [rsp+0x58]
   1400046c9:	mov    rdx,QWORD PTR [rdi+0x28]
   1400046cd:	sub    rdx,0x18
   1400046d1:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400046d6:	jg     0x1400046e1
   1400046d8:	mov    rcx,QWORD PTR [rdx]
   1400046db:	mov    rax,QWORD PTR [rcx]
   1400046de:	call   QWORD PTR [rax+0x8]
   1400046e1:	mov    rdx,QWORD PTR [rdi+0x20]
   1400046e5:	sub    rdx,0x18
   1400046e9:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400046ee:	jg     0x1400046f9
   1400046f0:	mov    rcx,QWORD PTR [rdx]
   1400046f3:	mov    rax,QWORD PTR [rcx]
   1400046f6:	call   QWORD PTR [rax+0x8]
   1400046f9:	mov    rcx,rdi
   1400046fc:	call   QWORD PTR [rip+0x1b86]        # 0x140006288
   140004702:	lea    rcx,[rip+0x2027]        # 0x140006730
   140004709:	call   QWORD PTR [rip+0x1a19]        # 0x140006128
   14000470f:	mov    rdi,QWORD PTR [rsp+0x30]
   140004714:	mov    r11,QWORD PTR [rsp+0x58]
   140004719:	inc    rax
   14000471c:	mov    QWORD PTR [r10+0x8],rax
   140004720:	mov    QWORD PTR [r11+0x8],r9
   140004724:	mov    rax,QWORD PTR [r10]
   140004727:	cmp    r9,rax
   14000472a:	jne    0x14000473b
   14000472c:	mov    QWORD PTR [rax+0x8],r11
   140004730:	mov    rax,QWORD PTR [r10]
   140004733:	mov    QWORD PTR [rax],r11
   140004736:	mov    rax,QWORD PTR [r10]
   140004739:	jmp    0x14000475d
   14000473b:	test   r8b,r8b
   14000473e:	je     0x140004750
   140004740:	mov    QWORD PTR [r9],r11
   140004743:	mov    rax,QWORD PTR [r10]
   140004746:	cmp    r9,QWORD PTR [rax]
   140004749:	jne    0x140004761
   14000474b:	mov    QWORD PTR [rax],r11
   14000474e:	jmp    0x140004761
   140004750:	mov    QWORD PTR [r9+0x10],r11
   140004754:	mov    rax,QWORD PTR [r10]
   140004757:	cmp    r9,QWORD PTR [rax+0x10]
   14000475b:	jne    0x140004761
   14000475d:	mov    QWORD PTR [rax+0x10],r11
   140004761:	mov    rcx,QWORD PTR [r11+0x8]
   140004765:	mov    rax,r11
   140004768:	cmp    BYTE PTR [rcx+0x18],0x0
   14000476c:	jne    0x140004962
   140004772:	mov    rcx,QWORD PTR [rax+0x8]
   140004776:	mov    r8,QWORD PTR [rcx+0x8]
   14000477a:	mov    rdx,QWORD PTR [r8]
   14000477d:	cmp    rcx,rdx
   140004780:	jne    0x140004877
   140004786:	mov    rdx,QWORD PTR [r8+0x10]
   14000478a:	cmp    BYTE PTR [rdx+0x18],0x0
   14000478e:	jne    0x1400047b1
   140004790:	mov    BYTE PTR [rcx+0x18],0x1
   140004794:	mov    BYTE PTR [rdx+0x18],0x1
   140004798:	mov    rcx,QWORD PTR [rax+0x8]
   14000479c:	mov    rdx,QWORD PTR [rcx+0x8]
   1400047a0:	mov    BYTE PTR [rdx+0x18],0x0
   1400047a4:	mov    rcx,QWORD PTR [rax+0x8]
   1400047a8:	mov    rax,QWORD PTR [rcx+0x8]
   1400047ac:	jmp    0x140004954
   1400047b1:	cmp    rax,QWORD PTR [rcx+0x10]
   1400047b5:	jne    0x140004802
   1400047b7:	mov    rdx,QWORD PTR [rcx+0x10]
   1400047bb:	mov    rax,rcx
   1400047be:	mov    rcx,QWORD PTR [rdx]
   1400047c1:	mov    QWORD PTR [rax+0x10],rcx
   1400047c5:	mov    rcx,QWORD PTR [rdx]
   1400047c8:	cmp    BYTE PTR [rcx+0x19],0x0
   1400047cc:	jne    0x1400047d2
   1400047ce:	mov    QWORD PTR [rcx+0x8],rax
   1400047d2:	mov    rcx,QWORD PTR [rax+0x8]
   1400047d6:	mov    QWORD PTR [rdx+0x8],rcx
   1400047da:	mov    rcx,QWORD PTR [r10]
   1400047dd:	cmp    rax,QWORD PTR [rcx+0x8]
   1400047e1:	jne    0x1400047e9
   1400047e3:	mov    QWORD PTR [rcx+0x8],rdx
   1400047e7:	jmp    0x1400047fb
   1400047e9:	mov    rcx,QWORD PTR [rax+0x8]
   1400047ed:	cmp    rax,QWORD PTR [rcx]
   1400047f0:	jne    0x1400047f7
   1400047f2:	mov    QWORD PTR [rcx],rdx
   1400047f5:	jmp    0x1400047fb
   1400047f7:	mov    QWORD PTR [rcx+0x10],rdx
   1400047fb:	mov    QWORD PTR [rdx],rax
   1400047fe:	mov    QWORD PTR [rax+0x8],rdx
   140004802:	mov    rcx,QWORD PTR [rax+0x8]
   140004806:	mov    BYTE PTR [rcx+0x18],0x1
   14000480a:	mov    rcx,QWORD PTR [rax+0x8]
   14000480e:	mov    rdx,QWORD PTR [rcx+0x8]
   140004812:	mov    BYTE PTR [rdx+0x18],0x0
   140004816:	mov    rcx,QWORD PTR [rax+0x8]
   14000481a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000481e:	mov    r8,QWORD PTR [rdx]
   140004821:	mov    rcx,QWORD PTR [r8+0x10]
   140004825:	mov    QWORD PTR [rdx],rcx
   140004828:	mov    rcx,QWORD PTR [r8+0x10]
   14000482c:	cmp    BYTE PTR [rcx+0x19],0x0
   140004830:	jne    0x140004836
   140004832:	mov    QWORD PTR [rcx+0x8],rdx
   140004836:	mov    rcx,QWORD PTR [rdx+0x8]
   14000483a:	mov    QWORD PTR [r8+0x8],rcx
   14000483e:	mov    rcx,QWORD PTR [r10]
   140004841:	cmp    rdx,QWORD PTR [rcx+0x8]
   140004845:	jne    0x140004854
   140004847:	mov    QWORD PTR [rcx+0x8],r8
   14000484b:	mov    QWORD PTR [r8+0x10],rdx
   14000484f:	jmp    0x140004950
   140004854:	mov    rcx,QWORD PTR [rdx+0x8]
   140004858:	cmp    rdx,QWORD PTR [rcx+0x10]
   14000485c:	jne    0x14000486b
   14000485e:	mov    QWORD PTR [rcx+0x10],r8
   140004862:	mov    QWORD PTR [r8+0x10],rdx
   140004866:	jmp    0x140004950
   14000486b:	mov    QWORD PTR [rcx],r8
   14000486e:	mov    QWORD PTR [r8+0x10],rdx
   140004872:	jmp    0x140004950
   140004877:	cmp    BYTE PTR [rdx+0x18],0x0
   14000487b:	jne    0x14000489e
   14000487d:	mov    BYTE PTR [rcx+0x18],0x1
   140004881:	mov    BYTE PTR [rdx+0x18],0x1
   140004885:	mov    rcx,QWORD PTR [rax+0x8]
   140004889:	mov    rdx,QWORD PTR [rcx+0x8]
   14000488d:	mov    BYTE PTR [rdx+0x18],0x0
   140004891:	mov    rcx,QWORD PTR [rax+0x8]
   140004895:	mov    rax,QWORD PTR [rcx+0x8]
   140004899:	jmp    0x140004954
   14000489e:	cmp    rax,QWORD PTR [rcx]
   1400048a1:	jne    0x1400048f0
   1400048a3:	mov    rdx,QWORD PTR [rcx]
   1400048a6:	mov    rax,rcx
   1400048a9:	mov    rcx,QWORD PTR [rdx+0x10]
   1400048ad:	mov    QWORD PTR [rax],rcx
   1400048b0:	mov    rcx,QWORD PTR [rdx+0x10]
   1400048b4:	cmp    BYTE PTR [rcx+0x19],0x0
   1400048b8:	jne    0x1400048be
   1400048ba:	mov    QWORD PTR [rcx+0x8],rax
   1400048be:	mov    rcx,QWORD PTR [rax+0x8]
   1400048c2:	mov    QWORD PTR [rdx+0x8],rcx
   1400048c6:	mov    rcx,QWORD PTR [r10]
   1400048c9:	cmp    rax,QWORD PTR [rcx+0x8]
   1400048cd:	jne    0x1400048d5
   1400048cf:	mov    QWORD PTR [rcx+0x8],rdx
   1400048d3:	jmp    0x1400048e8
   1400048d5:	mov    rcx,QWORD PTR [rax+0x8]
   1400048d9:	cmp    rax,QWORD PTR [rcx+0x10]
   1400048dd:	jne    0x1400048e5
   1400048df:	mov    QWORD PTR [rcx+0x10],rdx
   1400048e3:	jmp    0x1400048e8
   1400048e5:	mov    QWORD PTR [rcx],rdx
   1400048e8:	mov    QWORD PTR [rdx+0x10],rax
   1400048ec:	mov    QWORD PTR [rax+0x8],rdx
   1400048f0:	mov    rcx,QWORD PTR [rax+0x8]
   1400048f4:	mov    BYTE PTR [rcx+0x18],0x1
   1400048f8:	mov    rcx,QWORD PTR [rax+0x8]
   1400048fc:	mov    rdx,QWORD PTR [rcx+0x8]
   140004900:	mov    BYTE PTR [rdx+0x18],0x0
   140004904:	mov    rcx,QWORD PTR [rax+0x8]
   140004908:	mov    rdx,QWORD PTR [rcx+0x8]
   14000490c:	mov    r8,QWORD PTR [rdx+0x10]
   140004910:	mov    rcx,QWORD PTR [r8]
   140004913:	mov    QWORD PTR [rdx+0x10],rcx
   140004917:	mov    rcx,QWORD PTR [r8]
   14000491a:	cmp    BYTE PTR [rcx+0x19],0x0
   14000491e:	jne    0x140004924
   140004920:	mov    QWORD PTR [rcx+0x8],rdx
   140004924:	mov    rcx,QWORD PTR [rdx+0x8]
   140004928:	mov    QWORD PTR [r8+0x8],rcx
   14000492c:	mov    rcx,QWORD PTR [r10]
   14000492f:	cmp    rdx,QWORD PTR [rcx+0x8]
   140004933:	jne    0x14000493b
   140004935:	mov    QWORD PTR [rcx+0x8],r8
   140004939:	jmp    0x14000494d
   14000493b:	mov    rcx,QWORD PTR [rdx+0x8]
   14000493f:	cmp    rdx,QWORD PTR [rcx]
   140004942:	jne    0x140004949
   140004944:	mov    QWORD PTR [rcx],r8
   140004947:	jmp    0x14000494d
   140004949:	mov    QWORD PTR [rcx+0x10],r8
   14000494d:	mov    QWORD PTR [r8],rdx
   140004950:	mov    QWORD PTR [rdx+0x8],r8
   140004954:	mov    rcx,QWORD PTR [rax+0x8]
   140004958:	cmp    BYTE PTR [rcx+0x18],0x0
   14000495c:	je     0x140004772
   140004962:	mov    rax,QWORD PTR [r10]
   140004965:	mov    QWORD PTR [rbx],r11
   140004968:	mov    rcx,QWORD PTR [rax+0x8]
   14000496c:	mov    rax,rbx
   14000496f:	mov    BYTE PTR [rcx+0x18],0x1
   140004973:	add    rsp,0x20
   140004977:	pop    rbx
   140004978:	ret    
   140004979:	int3   
   14000497a:	int3   
   14000497b:	int3   
   14000497c:	int3   
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	mov    QWORD PTR [rsp+0x20],r9
   140004985:	mov    QWORD PTR [rsp+0x18],r8
   14000498a:	push   rbx
   14000498b:	push   rsi
   14000498c:	push   rdi
   14000498d:	push   r14
   14000498f:	push   r15
   140004991:	sub    rsp,0x30
   140004995:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000499e:	mov    rdi,r8
   1400049a1:	mov    r15,rdx
   1400049a4:	mov    r14,rcx
   1400049a7:	mov    QWORD PTR [rsp+0x78],r8
   1400049ac:	nop    DWORD PTR [rax+0x0]
   1400049b0:	cmp    r14,r15
   1400049b3:	je     0x140004a3f
   1400049b9:	mov    QWORD PTR [rsp+0x60],rdi
   1400049be:	test   rdi,rdi
   1400049c1:	je     0x140004a2d
   1400049c3:	mov    rbx,QWORD PTR [r14]
   1400049c6:	mov    rcx,QWORD PTR [rbx-0x18]
   1400049ca:	mov    rax,QWORD PTR [rcx]
   1400049cd:	call   QWORD PTR [rax+0x20]
   1400049d0:	mov    rcx,rax
   1400049d3:	cmp    DWORD PTR [rbx-0x8],0x0
   1400049d7:	jl     0x1400049e9
   1400049d9:	cmp    rax,QWORD PTR [rbx-0x18]
   1400049dd:	jne    0x1400049e9
   1400049df:	lea    rsi,[rbx-0x18]
   1400049e3:	lock inc DWORD PTR [rbx-0x8]
   1400049e7:	jmp    0x140004a26
   1400049e9:	mov    rax,QWORD PTR [rax]
   1400049ec:	mov    r8d,0x2
   1400049f2:	mov    edx,DWORD PTR [rbx-0x10]
   1400049f5:	call   QWORD PTR [rax]
   1400049f7:	mov    rsi,rax
   1400049fa:	test   rax,rax
   1400049fd:	jne    0x140004a04
   1400049ff:	call   0x140003530
   140004a04:	mov    eax,DWORD PTR [rbx-0x10]
   140004a07:	mov    DWORD PTR [rsi+0x8],eax
   140004a0a:	mov    eax,DWORD PTR [rbx-0x10]
   140004a0d:	inc    eax
   140004a0f:	movsxd rdx,eax
   140004a12:	lea    r9,[rdx+rdx*1]
   140004a16:	mov    r8,rbx
   140004a19:	add    rdx,rdx
   140004a1c:	lea    rcx,[rsi+0x18]
   140004a20:	call   QWORD PTR [rip+0x175a]        # 0x140006180
   140004a26:	lea    rax,[rsi+0x18]
   140004a2a:	mov    QWORD PTR [rdi],rax
   140004a2d:	add    rdi,0x8
   140004a31:	mov    QWORD PTR [rsp+0x70],rdi
   140004a36:	add    r14,0x8
   140004a3a:	jmp    0x1400049b0
   140004a3f:	mov    rax,rdi
   140004a42:	add    rsp,0x30
   140004a46:	pop    r15
   140004a48:	pop    r14
   140004a4a:	pop    rdi
   140004a4b:	pop    rsi
   140004a4c:	pop    rbx
   140004a4d:	ret    
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	mov    QWORD PTR [rsp+0x8],rbx
   140004a55:	push   rdi
   140004a56:	sub    rsp,0x20
   140004a5a:	xor    edx,edx
   140004a5c:	mov    rdi,rcx
   140004a5f:	lea    r8d,[rdx+0x28]
   140004a63:	add    rcx,r8
   140004a66:	call   0x140005022
   140004a6b:	and    QWORD PTR [rdi+0x50],0x0
   140004a70:	and    DWORD PTR [rdi+0x58],0x0
   140004a74:	and    DWORD PTR [rdi+0x5c],0x0
   140004a78:	lea    rax,[rip+0xffffffffffffb581]        # 0x140000000
   140004a7f:	lea    rcx,[rdi+0x28]
   140004a83:	mov    QWORD PTR [rdi+0x10],rax
   140004a87:	mov    QWORD PTR [rdi+0x8],rax
   140004a8b:	lea    rax,[rip+0x18b6]        # 0x140006348
   140004a92:	xor    r8d,r8d
   140004a95:	xor    edx,edx
   140004a97:	mov    DWORD PTR [rdi],0x60
   140004a9d:	mov    QWORD PTR [rdi+0x20],rax
   140004aa1:	mov    DWORD PTR [rdi+0x18],0xc00
   140004aa8:	call   0x140001070
   140004aad:	test   eax,eax
   140004aaf:	jne    0x140004ae7
   140004ab1:	call   QWORD PTR [rip+0x15c1]        # 0x140006078
   140004ab7:	movzx  ecx,ax
   140004aba:	or     ecx,0x80070000
   140004ac0:	test   eax,eax
   140004ac2:	cmovle ecx,eax
   140004ac5:	test   ecx,ecx
   140004ac7:	jns    0x140004ae7
   140004ac9:	call   QWORD PTR [rip+0x15e1]        # 0x1400060b0
   140004acf:	test   eax,eax
   140004ad1:	je     0x140004ae0
   140004ad3:	lea    rcx,[rip+0x1886]        # 0x140006360
   140004ada:	call   QWORD PTR [rip+0x15d8]        # 0x1400060b8
   140004ae0:	mov    BYTE PTR [rip+0x4c3d],0x1        # 0x140009724
   140004ae7:	mov    rax,rdi
   140004aea:	mov    rbx,QWORD PTR [rsp+0x30]
   140004aef:	add    rsp,0x20
   140004af3:	pop    rdi
   140004af4:	ret    
   140004af5:	int3   
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	rex push rbx
   140004afa:	sub    rsp,0x20
   140004afe:	mov    rbx,rcx
   140004b01:	add    rcx,0x28
   140004b05:	call   QWORD PTR [rip+0x1595]        # 0x1400060a0
   140004b0b:	mov    rcx,QWORD PTR [rbx+0x50]
   140004b0f:	test   rcx,rcx
   140004b12:	je     0x140004b1e
   140004b14:	call   0x140004be0
   140004b19:	and    QWORD PTR [rbx+0x50],0x0
   140004b1e:	and    DWORD PTR [rbx+0x58],0x0
   140004b22:	and    DWORD PTR [rbx+0x5c],0x0
   140004b26:	add    rsp,0x20
   140004b2a:	pop    rbx
   140004b2b:	ret    
   140004b2c:	mov    QWORD PTR [rsp+0x8],rbx
   140004b31:	mov    QWORD PTR [rsp+0x10],rbp
   140004b36:	mov    QWORD PTR [rsp+0x18],rsi
   140004b3b:	push   rdi
   140004b3c:	sub    rsp,0x20
   140004b40:	mov    rsi,rcx
   140004b43:	add    rcx,0x28
   140004b47:	movsxd rbx,edx
   140004b4a:	call   QWORD PTR [rip+0x1570]        # 0x1400060c0
   140004b50:	xor    edi,edi
   140004b52:	cmp    ebx,DWORD PTR [rsi+0x58]
   140004b55:	jg     0x140004b64
   140004b57:	test   ebx,ebx
   140004b59:	js     0x140004b64
   140004b5b:	cmp    ebx,DWORD PTR [rsi+0x58]
   140004b5e:	jne    0x140004b86
   140004b60:	mov    rdi,QWORD PTR [rsi+0x10]
   140004b64:	lea    rcx,[rsi+0x28]
   140004b68:	call   QWORD PTR [rip+0x155a]        # 0x1400060c8
   140004b6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b73:	mov    rbp,QWORD PTR [rsp+0x38]
   140004b78:	mov    rsi,QWORD PTR [rsp+0x40]
   140004b7d:	mov    rax,rdi
   140004b80:	add    rsp,0x20
   140004b84:	pop    rdi
   140004b85:	ret    
   140004b86:	jge    0x140004b92
   140004b88:	mov    rax,QWORD PTR [rsi+0x50]
   140004b8c:	mov    rdi,QWORD PTR [rax+rbx*8]
   140004b90:	jmp    0x140004b64
   140004b92:	xor    r9d,r9d
   140004b95:	xor    r8d,r8d
   140004b98:	mov    ecx,0xc000008c
   140004b9d:	lea    edx,[r9+0x1]
   140004ba1:	call   QWORD PTR [rip+0x14c9]        # 0x140006070
   140004ba7:	int3   
   140004ba8:	jmp    QWORD PTR [rip+0x16da]        # 0x140006288
   140004bae:	int3   
   140004baf:	int3   
   140004bb0:	int3   
   140004bb1:	int3   
   140004bb2:	int3   
   140004bb3:	int3   
   140004bb4:	int3   
   140004bb5:	int3   
   140004bb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004bc0:	cmp    rcx,QWORD PTR [rip+0x4439]        # 0x140009000
   140004bc7:	jne    0x140004bda
   140004bc9:	rol    rcx,0x10
   140004bcd:	test   cx,0xffff
   140004bd2:	jne    0x140004bd6
   140004bd4:	repz ret 
   140004bd6:	ror    rcx,0x10
   140004bda:	jmp    0x140005074
   140004bdf:	int3   
   140004be0:	jmp    QWORD PTR [rip+0x1562]        # 0x140006148
   140004be6:	int3   
   140004be7:	int3   
   140004be8:	rex push rbx
   140004bea:	sub    rsp,0x20
   140004bee:	cmp    QWORD PTR [rip+0x4baa],0x0        # 0x1400097a0
   140004bf6:	jne    0x140004c2e
   140004bf8:	mov    edx,0x8
   140004bfd:	lea    ecx,[rdx+0x18]
   140004c00:	call   QWORD PTR [rip+0x15b2]        # 0x1400061b8
   140004c06:	mov    rcx,rax
   140004c09:	mov    rbx,rax
   140004c0c:	call   QWORD PTR [rip+0x14fe]        # 0x140006110
   140004c12:	mov    QWORD PTR [rip+0x4b87],rax        # 0x1400097a0
   140004c19:	mov    QWORD PTR [rip+0x4b78],rax        # 0x140009798
   140004c20:	test   rbx,rbx
   140004c23:	jne    0x140004c2a
   140004c25:	lea    eax,[rbx+0x18]
   140004c28:	jmp    0x140004c30
   140004c2a:	and    QWORD PTR [rbx],0x0
   140004c2e:	xor    eax,eax
   140004c30:	add    rsp,0x20
   140004c34:	pop    rbx
   140004c35:	ret    
   140004c36:	int3   
   140004c37:	int3   
   140004c38:	rex push rbx
   140004c3a:	sub    rsp,0x20
   140004c3e:	mov    rbx,rcx
   140004c41:	mov    rcx,QWORD PTR [rip+0x4b58]        # 0x1400097a0
   140004c48:	call   QWORD PTR [rip+0x144a]        # 0x140006098
   140004c4e:	mov    QWORD PTR [rsp+0x38],rax
   140004c53:	cmp    rax,0xffffffffffffffff
   140004c57:	jne    0x140004c64
   140004c59:	mov    rcx,rbx
   140004c5c:	call   QWORD PTR [rip+0x156e]        # 0x1400061d0
   140004c62:	jmp    0x140004ce2
   140004c64:	mov    ecx,0x8
   140004c69:	call   0x140005146
   140004c6e:	nop
   140004c6f:	mov    rcx,QWORD PTR [rip+0x4b2a]        # 0x1400097a0
   140004c76:	call   QWORD PTR [rip+0x141c]        # 0x140006098
   140004c7c:	mov    QWORD PTR [rsp+0x38],rax
   140004c81:	mov    rcx,QWORD PTR [rip+0x4b10]        # 0x140009798
   140004c88:	call   QWORD PTR [rip+0x140a]        # 0x140006098
   140004c8e:	mov    QWORD PTR [rsp+0x40],rax
   140004c93:	mov    rcx,rbx
   140004c96:	call   QWORD PTR [rip+0x1474]        # 0x140006110
   140004c9c:	mov    rcx,rax
   140004c9f:	lea    r8,[rsp+0x40]
   140004ca4:	lea    rdx,[rsp+0x38]
   140004ca9:	call   0x140005152
   140004cae:	mov    rbx,rax
   140004cb1:	mov    rcx,QWORD PTR [rsp+0x38]
   140004cb6:	call   QWORD PTR [rip+0x1454]        # 0x140006110
   140004cbc:	mov    QWORD PTR [rip+0x4add],rax        # 0x1400097a0
   140004cc3:	mov    rcx,QWORD PTR [rsp+0x40]
   140004cc8:	call   QWORD PTR [rip+0x1442]        # 0x140006110
   140004cce:	mov    QWORD PTR [rip+0x4ac3],rax        # 0x140009798
   140004cd5:	mov    ecx,0x8
   140004cda:	call   0x14000514c
   140004cdf:	mov    rax,rbx
   140004ce2:	add    rsp,0x20
   140004ce6:	pop    rbx
   140004ce7:	ret    
   140004ce8:	sub    rsp,0x28
   140004cec:	call   0x140004c38
   140004cf1:	neg    rax
   140004cf4:	sbb    eax,eax
   140004cf6:	neg    eax
   140004cf8:	dec    eax
   140004cfa:	add    rsp,0x28
   140004cfe:	ret    
   140004cff:	int3   
   140004d00:	mov    QWORD PTR [rsp+0x8],rbx
   140004d05:	mov    QWORD PTR [rsp+0x10],rsi
   140004d0a:	push   rdi
   140004d0b:	sub    rsp,0x20
   140004d0f:	mov    esi,edx
   140004d11:	mov    rbx,rcx
   140004d14:	test   dl,0x2
   140004d17:	je     0x140004d44
   140004d19:	lea    rdi,[rcx-0x8]
   140004d1d:	lea    r9,[rip+0x766]        # 0x14000548a
   140004d24:	mov    edx,0x18
   140004d29:	mov    r8d,DWORD PTR [rdi]
   140004d2c:	call   0x140005160
   140004d31:	test   sil,0x1
   140004d35:	je     0x140004d3f
   140004d37:	mov    rcx,rdi
   140004d3a:	call   0x140004ba8
   140004d3f:	mov    rax,rdi
   140004d42:	jmp    0x140004d5a
   140004d44:	call   0x14000548a
   140004d49:	test   sil,0x1
   140004d4d:	je     0x140004d57
   140004d4f:	mov    rcx,rbx
   140004d52:	call   0x140004ba8
   140004d57:	mov    rax,rbx
   140004d5a:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d5f:	mov    rsi,QWORD PTR [rsp+0x38]
   140004d64:	add    rsp,0x20
   140004d68:	pop    rdi
   140004d69:	ret    
   140004d6a:	int3   
   140004d6b:	int3   
   140004d6c:	sub    rsp,0x28
   140004d70:	mov    eax,0x5a4d
   140004d75:	cmp    WORD PTR [rip+0xffffffffffffb284],ax        # 0x140000000
   140004d7c:	je     0x140004d82
   140004d7e:	xor    ecx,ecx
   140004d80:	jmp    0x140004dba
   140004d82:	movsxd rax,DWORD PTR [rip+0xffffffffffffb2b3]        # 0x14000003c
   140004d89:	lea    rcx,[rip+0xffffffffffffb270]        # 0x140000000
   140004d90:	add    rax,rcx
   140004d93:	cmp    DWORD PTR [rax],0x4550
   140004d99:	jne    0x140004d7e
   140004d9b:	mov    ecx,0x20b
   140004da0:	cmp    WORD PTR [rax+0x18],cx
   140004da4:	jne    0x140004d7e
   140004da6:	xor    ecx,ecx
   140004da8:	cmp    DWORD PTR [rax+0x84],0xe
   140004daf:	jbe    0x140004dba
   140004db1:	cmp    DWORD PTR [rax+0xf8],ecx
   140004db7:	setne  cl
   140004dba:	mov    DWORD PTR [rip+0x43c0],ecx        # 0x140009180
   140004dc0:	mov    ecx,0x1
   140004dc5:	call   QWORD PTR [rip+0x1425]        # 0x1400061f0
   140004dcb:	or     rcx,0xffffffffffffffff
   140004dcf:	call   QWORD PTR [rip+0x133b]        # 0x140006110
   140004dd5:	mov    rcx,QWORD PTR [rip+0x145c]        # 0x140006238
   140004ddc:	mov    QWORD PTR [rip+0x49b5],rax        # 0x140009798
   140004de3:	mov    QWORD PTR [rip+0x49b6],rax        # 0x1400097a0
   140004dea:	mov    eax,DWORD PTR [rip+0x4930]        # 0x140009720
   140004df0:	mov    DWORD PTR [rcx],eax
   140004df2:	mov    rdx,QWORD PTR [rip+0x1447]        # 0x140006240
   140004df9:	mov    eax,DWORD PTR [rip+0x4915]        # 0x140009714
   140004dff:	mov    DWORD PTR [rdx],eax
   140004e01:	call   0x1400053f0
   140004e06:	call   0x1400053ec
   140004e0b:	cmp    DWORD PTR [rip+0x41fe],0x0        # 0x140009010
   140004e12:	jne    0x140004e21
   140004e14:	lea    rcx,[rip+0x5d1]        # 0x1400053ec
   140004e1b:	call   QWORD PTR [rip+0x13f7]        # 0x140006218
   140004e21:	cmp    DWORD PTR [rip+0x41ec],0xffffffff        # 0x140009014
   140004e28:	jne    0x140004e33
   140004e2a:	or     ecx,0xffffffff
   140004e2d:	call   QWORD PTR [rip+0x13dd]        # 0x140006210
   140004e33:	xor    eax,eax
   140004e35:	add    rsp,0x28
   140004e39:	ret    
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	sub    rsp,0x38
   140004e40:	lea    rcx,[rip+0x5e1]        # 0x140005428
   140004e47:	call   0x140004ce8
   140004e4c:	mov    eax,DWORD PTR [rip+0x48ca]        # 0x14000971c
   140004e52:	mov    r9d,DWORD PTR [rip+0x48bf]        # 0x140009718
   140004e59:	mov    DWORD PTR [rip+0x433d],eax        # 0x14000919c
   140004e5f:	lea    rax,[rip+0x4336]        # 0x14000919c
   140004e66:	lea    r8,[rip+0x4323]        # 0x140009190
   140004e6d:	lea    rdx,[rip+0x4314]        # 0x140009188
   140004e74:	lea    rcx,[rip+0x4309]        # 0x140009184
   140004e7b:	mov    QWORD PTR [rsp+0x20],rax
   140004e80:	call   QWORD PTR [rip+0x1362]        # 0x1400061e8
   140004e86:	mov    DWORD PTR [rip+0x430c],eax        # 0x140009198
   140004e8c:	test   eax,eax
   140004e8e:	jns    0x140004e9a
   140004e90:	mov    ecx,0x8
   140004e95:	call   0x140005262
   140004e9a:	add    rsp,0x38
   140004e9e:	ret    
   140004e9f:	int3   
   140004ea0:	rex push rdi
   140004ea2:	sub    rsp,0x20
   140004ea6:	mov    rax,QWORD PTR gs:0x30
   140004eaf:	mov    rcx,QWORD PTR [rax+0x8]
   140004eb3:	xor    edi,edi
   140004eb5:	xor    eax,eax
   140004eb7:	lock cmpxchg QWORD PTR [rip+0x48c0],rcx        # 0x140009780
   140004ec0:	je     0x140004ed0
   140004ec2:	cmp    rax,rcx
   140004ec5:	jne    0x140004ece
   140004ec7:	mov    edi,0x1
   140004ecc:	jmp    0x140004ed0
   140004ece:	jmp    0x140004eb5
   140004ed0:	mov    eax,DWORD PTR [rip+0x48b2]        # 0x140009788
   140004ed6:	cmp    eax,0x1
   140004ed9:	jne    0x140004ee5
   140004edb:	lea    ecx,[rax+0x1e]
   140004ede:	call   0x140005262
   140004ee3:	jmp    0x140004f24
   140004ee5:	mov    eax,DWORD PTR [rip+0x489d]        # 0x140009788
   140004eeb:	test   eax,eax
   140004eed:	jne    0x140004f1a
   140004eef:	mov    DWORD PTR [rip+0x488f],0x1        # 0x140009788
   140004ef9:	lea    rdx,[rip+0x1400]        # 0x140006300
   140004f00:	lea    rcx,[rip+0x13d9]        # 0x1400062e0
   140004f07:	call   0x140005460
   140004f0c:	test   eax,eax
   140004f0e:	je     0x140004f24
   140004f10:	mov    eax,0xff
   140004f15:	jmp    0x14000500a
   140004f1a:	mov    DWORD PTR [rip+0x4254],0x1        # 0x140009178
   140004f24:	mov    eax,DWORD PTR [rip+0x485e]        # 0x140009788
   140004f2a:	cmp    eax,0x1
   140004f2d:	jne    0x140004f4c
   140004f2f:	lea    rdx,[rip+0x13a2]        # 0x1400062d8
   140004f36:	lea    rcx,[rip+0x137b]        # 0x1400062b8
   140004f3d:	call   0x140005466
   140004f42:	mov    DWORD PTR [rip+0x483c],0x2        # 0x140009788
   140004f4c:	test   edi,edi
   140004f4e:	jne    0x140004f59
   140004f50:	xor    eax,eax
   140004f52:	xchg   QWORD PTR [rip+0x4827],rax        # 0x140009780
   140004f59:	cmp    QWORD PTR [rip+0x482f],0x0        # 0x140009790
   140004f61:	je     0x140004f85
   140004f63:	lea    rcx,[rip+0x4826]        # 0x140009790
   140004f6a:	call   0x1400052c0
   140004f6f:	test   eax,eax
   140004f71:	je     0x140004f85
   140004f73:	xor    r8d,r8d
   140004f76:	lea    edx,[r8+0x2]
   140004f7a:	xor    ecx,ecx
   140004f7c:	mov    rax,QWORD PTR [rip+0x480d]        # 0x140009790
   140004f83:	call   rax
   140004f85:	mov    rcx,QWORD PTR [rip+0x4204]        # 0x140009190
   140004f8c:	mov    rax,QWORD PTR [rip+0x129d]        # 0x140006230
   140004f93:	mov    QWORD PTR [rax],rcx
   140004f96:	mov    r8,QWORD PTR [rip+0x41f3]        # 0x140009190
   140004f9d:	mov    rdx,QWORD PTR [rip+0x41e4]        # 0x140009188
   140004fa4:	mov    ecx,DWORD PTR [rip+0x41da]        # 0x140009184
   140004faa:	call   0x140001530
   140004faf:	mov    DWORD PTR [rip+0x41c7],eax        # 0x14000917c
   140004fb5:	cmp    DWORD PTR [rip+0x41c4],0x0        # 0x140009180
   140004fbc:	jne    0x140004fc6
   140004fbe:	mov    ecx,eax
   140004fc0:	call   QWORD PTR [rip+0x1232]        # 0x1400061f8
   140004fc6:	cmp    DWORD PTR [rip+0x41ab],0x0        # 0x140009178
   140004fcd:	jne    0x140004fdb
   140004fcf:	call   QWORD PTR [rip+0x1233]        # 0x140006208
   140004fd5:	mov    eax,DWORD PTR [rip+0x41a1]        # 0x14000917c
   140004fdb:	jmp    0x14000500a
   140004fdd:	mov    DWORD PTR [rip+0x4199],eax        # 0x14000917c
   140004fe3:	cmp    DWORD PTR [rip+0x4196],0x0        # 0x140009180
   140004fea:	jne    0x140004ff5
   140004fec:	mov    ecx,eax
   140004fee:	call   QWORD PTR [rip+0x120c]        # 0x140006200
   140004ff4:	int3   
   140004ff5:	cmp    DWORD PTR [rip+0x417c],0x0        # 0x140009178
   140004ffc:	jne    0x14000500a
   140004ffe:	call   QWORD PTR [rip+0x1204]        # 0x140006208
   140005004:	mov    eax,DWORD PTR [rip+0x4172]        # 0x14000917c
   14000500a:	add    rsp,0x20
   14000500e:	pop    rdi
   14000500f:	ret    
   140005010:	sub    rsp,0x28
   140005014:	call   0x140005340
   140005019:	add    rsp,0x28
   14000501d:	jmp    0x140004ea0
   140005022:	jmp    QWORD PTR [rip+0x1178]        # 0x1400061a0
   140005028:	rex push rbx
   14000502a:	sub    rsp,0x20
   14000502e:	mov    rbx,rcx
   140005031:	call   QWORD PTR [rip+0x1079]        # 0x1400060b0
   140005037:	mov    ecx,0x1
   14000503c:	mov    DWORD PTR [rip+0x46ce],eax        # 0x140009710
   140005042:	call   0x14000546c
   140005047:	mov    rcx,rbx
   14000504a:	call   0x140005472
   14000504f:	cmp    DWORD PTR [rip+0x46ba],0x0        # 0x140009710
   140005056:	jne    0x140005062
   140005058:	mov    ecx,0x1
   14000505d:	call   0x14000546c
   140005062:	mov    ecx,0xc0000409
   140005067:	add    rsp,0x20
   14000506b:	pop    rbx
   14000506c:	jmp    0x140005478
   140005071:	int3   
   140005072:	int3   
   140005073:	int3   
   140005074:	mov    QWORD PTR [rsp+0x8],rcx
   140005079:	sub    rsp,0x38
   14000507d:	mov    ecx,0x17
   140005082:	call   0x140005496
   140005087:	test   eax,eax
   140005089:	je     0x140005092
   14000508b:	mov    ecx,0x2
   140005090:	int    0x29
   140005092:	lea    rcx,[rip+0x41a7]        # 0x140009240
   140005099:	call   0x14000547e
   14000509e:	mov    rax,QWORD PTR [rsp+0x38]
   1400050a3:	mov    QWORD PTR [rip+0x428e],rax        # 0x140009338
   1400050aa:	lea    rax,[rsp+0x38]
   1400050af:	add    rax,0x8
   1400050b3:	mov    QWORD PTR [rip+0x421e],rax        # 0x1400092d8
   1400050ba:	mov    rax,QWORD PTR [rip+0x4277]        # 0x140009338
   1400050c1:	mov    QWORD PTR [rip+0x40e8],rax        # 0x1400091b0
   1400050c8:	mov    rax,QWORD PTR [rsp+0x40]
   1400050cd:	mov    QWORD PTR [rip+0x41ec],rax        # 0x1400092c0
   1400050d4:	mov    DWORD PTR [rip+0x40c2],0xc0000409        # 0x1400091a0
   1400050de:	mov    DWORD PTR [rip+0x40bc],0x1        # 0x1400091a4
   1400050e8:	mov    DWORD PTR [rip+0x40c6],0x1        # 0x1400091b8
   1400050f2:	mov    eax,0x8
   1400050f7:	imul   rax,rax,0x0
   1400050fb:	lea    rcx,[rip+0x40be]        # 0x1400091c0
   140005102:	mov    QWORD PTR [rcx+rax*1],0x2
   14000510a:	mov    eax,0x8
   14000510f:	imul   rax,rax,0x0
   140005113:	mov    rcx,QWORD PTR [rip+0x3ee6]        # 0x140009000
   14000511a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   14000511f:	mov    eax,0x8
   140005124:	imul   rax,rax,0x1
   140005128:	mov    rcx,QWORD PTR [rip+0x3ed9]        # 0x140009008
   14000512f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140005134:	lea    rcx,[rip+0x12bd]        # 0x1400063f8
   14000513b:	call   0x140005028
   140005140:	add    rsp,0x38
   140005144:	ret    
   140005145:	int3   
   140005146:	jmp    QWORD PTR [rip+0x105c]        # 0x1400061a8
   14000514c:	jmp    QWORD PTR [rip+0x105e]        # 0x1400061b0
   140005152:	jmp    QWORD PTR [rip+0x1068]        # 0x1400061c0
   140005158:	jmp    QWORD PTR [rip+0x106a]        # 0x1400061c8
   14000515e:	int3   
   14000515f:	int3   
   140005160:	mov    rax,rsp
   140005163:	mov    QWORD PTR [rax+0x20],r9
   140005167:	mov    DWORD PTR [rax+0x18],r8d
   14000516b:	mov    QWORD PTR [rax+0x10],rdx
   14000516f:	push   rbx
   140005170:	push   rsi
   140005171:	push   rdi
   140005172:	push   r14
   140005174:	sub    rsp,0x38
   140005178:	mov    r14,r9
   14000517b:	movsxd rdi,r8d
   14000517e:	mov    rsi,rdx
   140005181:	and    DWORD PTR [rax-0x38],0x0
   140005185:	mov    rbx,rdi
   140005188:	imul   rbx,rdx
   14000518c:	add    rbx,rcx
   14000518f:	mov    QWORD PTR [rax+0x8],rbx
   140005193:	dec    edi
   140005195:	mov    DWORD PTR [rsp+0x70],edi
   140005199:	js     0x1400051ab
   14000519b:	sub    rbx,rsi
   14000519e:	mov    QWORD PTR [rsp+0x60],rbx
   1400051a3:	mov    rcx,rbx
   1400051a6:	call   r14
   1400051a9:	jmp    0x140005193
   1400051ab:	mov    DWORD PTR [rsp+0x20],0x1
   1400051b3:	add    rsp,0x38
   1400051b7:	pop    r14
   1400051b9:	pop    rdi
   1400051ba:	pop    rsi
   1400051bb:	pop    rbx
   1400051bc:	ret    
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400051c5:	mov    DWORD PTR [rsp+0x18],r8d
   1400051ca:	mov    QWORD PTR [rsp+0x8],rcx
   1400051cf:	push   rsi
   1400051d0:	push   rdi
   1400051d1:	push   r14
   1400051d3:	sub    rsp,0x40
   1400051d7:	mov    rsi,r9
   1400051da:	mov    edi,r8d
   1400051dd:	mov    r14,rdx
   1400051e0:	mov    rbx,rcx
   1400051e3:	dec    edi
   1400051e5:	mov    DWORD PTR [rsp+0x70],edi
   1400051e9:	js     0x1400051fa
   1400051eb:	sub    rbx,r14
   1400051ee:	mov    QWORD PTR [rsp+0x60],rbx
   1400051f3:	mov    rcx,rbx
   1400051f6:	call   rsi
   1400051f8:	jmp    0x1400051e3
   1400051fa:	jmp    0x1400051fc
   1400051fc:	mov    rbx,QWORD PTR [rsp+0x68]
   140005201:	add    rsp,0x40
   140005205:	pop    r14
   140005207:	pop    rdi
   140005208:	pop    rsi
   140005209:	ret    
   14000520a:	int3   
   14000520b:	int3   
   14000520c:	sub    rsp,0x28
   140005210:	mov    rax,QWORD PTR [rcx]
   140005213:	cmp    DWORD PTR [rax],0xe06d7363
   140005219:	jne    0x140005237
   14000521b:	cmp    DWORD PTR [rax+0x18],0x4
   14000521f:	jne    0x140005237
   140005221:	mov    ecx,DWORD PTR [rax+0x20]
   140005224:	lea    eax,[rcx-0x19930520]
   14000522a:	cmp    eax,0x2
   14000522d:	jbe    0x14000523e
   14000522f:	cmp    ecx,0x1994000
   140005235:	je     0x14000523e
   140005237:	xor    eax,eax
   140005239:	add    rsp,0x28
   14000523d:	ret    
   14000523e:	call   0x140005484
   140005243:	int3   
   140005244:	sub    rsp,0x28
   140005248:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14000520c
   14000524f:	call   0x140005490
   140005254:	xor    eax,eax
   140005256:	add    rsp,0x28
   14000525a:	ret    
   14000525b:	int3   
   14000525c:	jmp    QWORD PTR [rip+0x102e]        # 0x140006290
   140005262:	jmp    QWORD PTR [rip+0xf78]        # 0x1400061e0
   140005268:	int3   
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	int3   
   14000526f:	int3   
   140005270:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005274:	xor    r9d,r9d
   140005277:	mov    r10,rdx
   14000527a:	add    r8,rcx
   14000527d:	movzx  eax,WORD PTR [r8+0x14]
   140005282:	movzx  r11d,WORD PTR [r8+0x6]
   140005287:	add    rax,0x18
   14000528b:	add    rax,r8
   14000528e:	test   r11d,r11d
   140005291:	je     0x1400052b1
   140005293:	mov    edx,DWORD PTR [rax+0xc]
   140005296:	cmp    r10,rdx
   140005299:	jb     0x1400052a5
   14000529b:	mov    ecx,DWORD PTR [rax+0x8]
   14000529e:	add    ecx,edx
   1400052a0:	cmp    r10,rcx
   1400052a3:	jb     0x1400052b3
   1400052a5:	inc    r9d
   1400052a8:	add    rax,0x28
   1400052ac:	cmp    r9d,r11d
   1400052af:	jb     0x140005293
   1400052b1:	xor    eax,eax
   1400052b3:	ret    
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	int3   
   1400052b9:	int3   
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052c5:	push   rdi
   1400052c6:	sub    rsp,0x20
   1400052ca:	mov    rbx,rcx
   1400052cd:	lea    rdi,[rip+0xffffffffffffad2c]        # 0x140000000
   1400052d4:	mov    rcx,rdi
   1400052d7:	call   0x140005310
   1400052dc:	test   eax,eax
   1400052de:	je     0x140005302
   1400052e0:	sub    rbx,rdi
   1400052e3:	mov    rdx,rbx
   1400052e6:	mov    rcx,rdi
   1400052e9:	call   0x140005270
   1400052ee:	test   rax,rax
   1400052f1:	je     0x140005302
   1400052f3:	mov    eax,DWORD PTR [rax+0x24]
   1400052f6:	shr    eax,0x1f
   1400052f9:	not    eax
   1400052fb:	and    eax,0x1
   1400052fe:	jmp    0x140005302
   140005300:	xor    eax,eax
   140005302:	mov    rbx,QWORD PTR [rsp+0x30]
   140005307:	add    rsp,0x20
   14000530b:	pop    rdi
   14000530c:	ret    
   14000530d:	int3   
   14000530e:	int3   
   14000530f:	int3   
   140005310:	mov    rax,rcx
   140005313:	mov    ecx,0x5a4d
   140005318:	cmp    WORD PTR [rax],cx
   14000531b:	je     0x140005320
   14000531d:	xor    eax,eax
   14000531f:	ret    
   140005320:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005324:	add    rcx,rax
   140005327:	xor    eax,eax
   140005329:	cmp    DWORD PTR [rcx],0x4550
   14000532f:	jne    0x14000533d
   140005331:	mov    edx,0x20b
   140005336:	cmp    WORD PTR [rcx+0x18],dx
   14000533a:	sete   al
   14000533d:	ret    
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    QWORD PTR [rsp+0x20],rbx
   140005345:	push   rbp
   140005346:	mov    rbp,rsp
   140005349:	sub    rsp,0x20
   14000534d:	mov    rax,QWORD PTR [rip+0x3cac]        # 0x140009000
   140005354:	and    QWORD PTR [rbp+0x18],0x0
   140005359:	movabs rbx,0x2b992ddfa232
   140005363:	cmp    rax,rbx
   140005366:	jne    0x1400053d7
   140005368:	lea    rcx,[rbp+0x18]
   14000536c:	call   QWORD PTR [rip+0xd66]        # 0x1400060d8
   140005372:	mov    rax,QWORD PTR [rbp+0x18]
   140005376:	mov    QWORD PTR [rbp+0x10],rax
   14000537a:	call   QWORD PTR [rip+0xd98]        # 0x140006118
   140005380:	mov    eax,eax
   140005382:	xor    QWORD PTR [rbp+0x10],rax
   140005386:	call   QWORD PTR [rip+0xd44]        # 0x1400060d0
   14000538c:	lea    rcx,[rbp+0x20]
   140005390:	mov    eax,eax
   140005392:	xor    QWORD PTR [rbp+0x10],rax
   140005396:	call   QWORD PTR [rip+0xd64]        # 0x140006100
   14000539c:	mov    eax,DWORD PTR [rbp+0x20]
   14000539f:	shl    rax,0x20
   1400053a3:	lea    rcx,[rbp+0x10]
   1400053a7:	xor    rax,QWORD PTR [rbp+0x20]
   1400053ab:	xor    rax,QWORD PTR [rbp+0x10]
   1400053af:	xor    rax,rcx
   1400053b2:	movabs rcx,0xffffffffffff
   1400053bc:	and    rax,rcx
   1400053bf:	movabs rcx,0x2b992ddfa233
   1400053c9:	cmp    rax,rbx
   1400053cc:	cmove  rax,rcx
   1400053d0:	mov    QWORD PTR [rip+0x3c29],rax        # 0x140009000
   1400053d7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400053dc:	not    rax
   1400053df:	mov    QWORD PTR [rip+0x3c22],rax        # 0x140009008
   1400053e6:	add    rsp,0x20
   1400053ea:	pop    rbp
   1400053eb:	ret    
   1400053ec:	xor    eax,eax
   1400053ee:	ret    
   1400053ef:	int3   
   1400053f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053f5:	push   rdi
   1400053f6:	sub    rsp,0x20
   1400053fa:	lea    rbx,[rip+0x18d7]        # 0x140006cd8
   140005401:	lea    rdi,[rip+0x18d0]        # 0x140006cd8
   140005408:	jmp    0x140005418
   14000540a:	mov    rax,QWORD PTR [rbx]
   14000540d:	test   rax,rax
   140005410:	je     0x140005414
   140005412:	call   rax
   140005414:	add    rbx,0x8
   140005418:	cmp    rbx,rdi
   14000541b:	jb     0x14000540a
   14000541d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005422:	add    rsp,0x20
   140005426:	pop    rdi
   140005427:	ret    
   140005428:	mov    QWORD PTR [rsp+0x8],rbx
   14000542d:	push   rdi
   14000542e:	sub    rsp,0x20
   140005432:	lea    rbx,[rip+0x18af]        # 0x140006ce8
   140005439:	lea    rdi,[rip+0x18a8]        # 0x140006ce8
   140005440:	jmp    0x140005450
   140005442:	mov    rax,QWORD PTR [rbx]
   140005445:	test   rax,rax
   140005448:	je     0x14000544c
   14000544a:	call   rax
   14000544c:	add    rbx,0x8
   140005450:	cmp    rbx,rdi
   140005453:	jb     0x140005442
   140005455:	mov    rbx,QWORD PTR [rsp+0x30]
   14000545a:	add    rsp,0x20
   14000545e:	pop    rdi
   14000545f:	ret    
   140005460:	jmp    QWORD PTR [rip+0xdba]        # 0x140006220
   140005466:	jmp    QWORD PTR [rip+0xdbc]        # 0x140006228
   14000546c:	jmp    QWORD PTR [rip+0xdd6]        # 0x140006248
   140005472:	jmp    QWORD PTR [rip+0xdd8]        # 0x140006250
   140005478:	jmp    QWORD PTR [rip+0xdda]        # 0x140006258
   14000547e:	jmp    QWORD PTR [rip+0xddc]        # 0x140006260
   140005484:	jmp    QWORD PTR [rip+0xdde]        # 0x140006268
   14000548a:	jmp    QWORD PTR [rip+0xde0]        # 0x140006270
   140005490:	jmp    QWORD PTR [rip+0xde2]        # 0x140006278
   140005496:	jmp    QWORD PTR [rip+0xc6c]        # 0x140006108
   14000549c:	jmp    QWORD PTR [rip+0xdf6]        # 0x140006298
   1400054a2:	jmp    QWORD PTR [rip+0xe00]        # 0x1400062a8
   1400054a8:	mov    rax,rsp
   1400054ab:	mov    QWORD PTR [rax+0x8],rbx
   1400054af:	mov    QWORD PTR [rax+0x10],rbp
   1400054b3:	mov    QWORD PTR [rax+0x18],rsi
   1400054b7:	mov    QWORD PTR [rax+0x20],rdi
   1400054bb:	push   r14
   1400054bd:	sub    rsp,0x20
   1400054c1:	mov    rbx,QWORD PTR [r9+0x38]
   1400054c5:	mov    rsi,rdx
   1400054c8:	mov    r14,r8
   1400054cb:	mov    rbp,rcx
   1400054ce:	lea    r8,[rbx+0x4]
   1400054d2:	mov    rdx,r9
   1400054d5:	mov    rcx,rsi
   1400054d8:	mov    rdi,r9
   1400054db:	call   0x140005538
   1400054e0:	mov    r11d,DWORD PTR [rbx+0x4]
   1400054e4:	mov    r10d,DWORD PTR [rbp+0x4]
   1400054e8:	mov    eax,r11d
   1400054eb:	and    r11d,0x2
   1400054ef:	mov    r8d,0x1
   1400054f5:	and    eax,r8d
   1400054f8:	and    r10b,0x66
   1400054fc:	cmove  r11d,eax
   140005500:	test   r11d,r11d
   140005503:	je     0x140005519
   140005505:	mov    r9,rdi
   140005508:	mov    r8,r14
   14000550b:	mov    rdx,rsi
   14000550e:	mov    rcx,rbp
   140005511:	call   0x1400054a2
   140005516:	mov    r8d,eax
   140005519:	mov    rbx,QWORD PTR [rsp+0x30]
   14000551e:	mov    rbp,QWORD PTR [rsp+0x38]
   140005523:	mov    rsi,QWORD PTR [rsp+0x40]
   140005528:	mov    rdi,QWORD PTR [rsp+0x48]
   14000552d:	mov    eax,r8d
   140005530:	add    rsp,0x20
   140005534:	pop    r14
   140005536:	ret    
   140005537:	int3   
   140005538:	rex push rbx
   14000553a:	sub    rsp,0x20
   14000553e:	mov    r11d,DWORD PTR [r8]
   140005541:	mov    rbx,rdx
   140005544:	mov    r9,rcx
   140005547:	and    r11d,0xfffffff8
   14000554b:	test   BYTE PTR [r8],0x4
   14000554f:	mov    r10,rcx
   140005552:	je     0x140005567
   140005554:	mov    eax,DWORD PTR [r8+0x8]
   140005558:	movsxd r10,DWORD PTR [r8+0x4]
   14000555c:	neg    eax
   14000555e:	add    r10,rcx
   140005561:	movsxd rcx,eax
   140005564:	and    r10,rcx
   140005567:	movsxd rax,r11d
   14000556a:	mov    rdx,QWORD PTR [rax+r10*1]
   14000556e:	mov    rax,QWORD PTR [rbx+0x10]
   140005572:	mov    ecx,DWORD PTR [rax+0x8]
   140005575:	add    rcx,QWORD PTR [rbx+0x8]
   140005579:	test   BYTE PTR [rcx+0x3],0xf
   14000557d:	je     0x14000558b
   14000557f:	movzx  eax,BYTE PTR [rcx+0x3]
   140005583:	and    eax,0xfffffff0
   140005586:	cdqe   
   140005588:	add    r9,rax
   14000558b:	xor    r9,rdx
   14000558e:	mov    rcx,r9
   140005591:	add    rsp,0x20
   140005595:	pop    rbx
   140005596:	jmp    0x140004bc0
   14000559b:	int3   
   14000559c:	int3   
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	lea    rcx,[rdx+0x128]
   1400055a7:	jmp    0x140002e30
   1400055ac:	lea    rcx,[rdx+0x120]
   1400055b3:	jmp    0x140002e30
   1400055b8:	lea    rcx,[rdx+0x120]
   1400055bf:	jmp    0x140002e30
   1400055c4:	int3   
   1400055c5:	int3   
   1400055c6:	int3   
   1400055c7:	int3   
   1400055c8:	int3   
   1400055c9:	int3   
   1400055ca:	int3   
   1400055cb:	int3   
   1400055cc:	int3   
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	rex push rbp
   1400055d2:	sub    rsp,0x20
   1400055d6:	mov    rbp,rdx
   1400055d9:	mov    eax,DWORD PTR [rbp+0x30]
   1400055dc:	and    eax,0x1
   1400055df:	test   eax,eax
   1400055e1:	je     0x1400055f3
   1400055e3:	and    DWORD PTR [rbp+0x30],0xfffffffe
   1400055e7:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400055ee:	call   0x140002e30
   1400055f3:	add    rsp,0x20
   1400055f7:	pop    rbp
   1400055f8:	ret    
   1400055f9:	lea    rcx,[rdx+0x40]
   140005600:	jmp    0x1400011d0
   140005605:	int3   
   140005606:	int3   
   140005607:	int3   
   140005608:	int3   
   140005609:	int3   
   14000560a:	int3   
   14000560b:	int3   
   14000560c:	int3   
   14000560d:	int3   
   14000560e:	int3   
   14000560f:	int3   
   140005610:	rex push rbp
   140005612:	sub    rsp,0x20
   140005616:	mov    rbp,rdx
   140005619:	mov    eax,DWORD PTR [rbp+0x20]
   14000561c:	and    eax,0x1
   14000561f:	test   eax,eax
   140005621:	je     0x140005633
   140005623:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140005627:	mov    rcx,QWORD PTR [rbp+0xa0]
   14000562e:	call   0x140003130
   140005633:	add    rsp,0x20
   140005637:	pop    rbp
   140005638:	ret    
   140005639:	lea    rcx,[rdx+0xb8]
   140005640:	jmp    0x140002e30
   140005645:	rex push rbp
   140005647:	sub    rsp,0x20
   14000564b:	mov    rbp,rdx
   14000564e:	mov    rdx,QWORD PTR [rbp+0x38]
   140005652:	mov    rcx,QWORD PTR [rbp+0x40]
   140005656:	call   0x140001040
   14000565b:	add    rsp,0x20
   14000565f:	pop    rbp
   140005660:	ret    
   140005661:	rex push rbp
   140005663:	sub    rsp,0x20
   140005667:	mov    rbp,rdx
   14000566a:	mov    rdx,QWORD PTR [rbp+0x40]
   14000566e:	mov    rcx,QWORD PTR [rbp+0x38]
   140005672:	call   0x140001040
   140005677:	add    rsp,0x20
   14000567b:	pop    rbp
   14000567c:	ret    
   14000567d:	lea    rcx,[rdx+0x28]
   140005684:	jmp    0x140002e30
   140005689:	int3   
   14000568a:	int3   
   14000568b:	int3   
   14000568c:	int3   
   14000568d:	int3   
   14000568e:	int3   
   14000568f:	int3   
   140005690:	lea    rcx,[rdx+0x48]
   140005697:	jmp    0x140003130
   14000569c:	lea    rcx,[rdx+0x30]
   1400056a3:	jmp    0x140003130
   1400056a8:	rex push rbp
   1400056aa:	sub    rsp,0x20
   1400056ae:	mov    rbp,rdx
   1400056b1:	mov    eax,DWORD PTR [rbp+0xd8]
   1400056b7:	and    eax,0x1
   1400056ba:	test   eax,eax
   1400056bc:	je     0x1400056ce
   1400056be:	and    DWORD PTR [rbp+0xd8],0xfffffffe
   1400056c5:	lea    rcx,[rbp+0x60]
   1400056c9:	call   0x140002e30
   1400056ce:	add    rsp,0x20
   1400056d2:	pop    rbp
   1400056d3:	ret    
   1400056d4:	lea    rcx,[rdx+0xe0]
   1400056db:	jmp    0x140002e30
   1400056e0:	rex push rbp
   1400056e2:	sub    rsp,0x20
   1400056e6:	mov    rbp,rdx
   1400056e9:	mov    eax,DWORD PTR [rbp+0xd8]
   1400056ef:	and    eax,0x2
   1400056f2:	test   eax,eax
   1400056f4:	je     0x140005709
   1400056f6:	and    DWORD PTR [rbp+0xd8],0xfffffffd
   1400056fd:	lea    rcx,[rbp+0xe0]
   140005704:	call   0x140002e30
   140005709:	add    rsp,0x20
   14000570d:	pop    rbp
   14000570e:	ret    
   14000570f:	lea    rcx,[rdx+0x28]
   140005716:	jmp    0x140002e30
   14000571b:	rex push rbp
   14000571d:	sub    rsp,0x20
   140005721:	mov    rbp,rdx
   140005724:	mov    eax,DWORD PTR [rbp+0xd8]
   14000572a:	and    eax,0x4
   14000572d:	test   eax,eax
   14000572f:	je     0x140005741
   140005731:	and    DWORD PTR [rbp+0xd8],0xfffffffb
   140005738:	lea    rcx,[rbp+0x68]
   14000573c:	call   0x140002e30
   140005741:	add    rsp,0x20
   140005745:	pop    rbp
   140005746:	ret    
   140005747:	lea    rcx,[rdx+0xe8]
   14000574e:	jmp    0x140002e30
   140005753:	rex push rbp
   140005755:	sub    rsp,0x20
   140005759:	mov    rbp,rdx
   14000575c:	mov    eax,DWORD PTR [rbp+0xd8]
   140005762:	and    eax,0x8
   140005765:	test   eax,eax
   140005767:	je     0x14000577c
   140005769:	and    DWORD PTR [rbp+0xd8],0xfffffff7
   140005770:	lea    rcx,[rbp+0xe8]
   140005777:	call   0x140002e30
   14000577c:	add    rsp,0x20
   140005780:	pop    rbp
   140005781:	ret    
   140005782:	lea    rcx,[rdx+0x20]
   140005789:	jmp    0x140002e30
   14000578e:	int3   
   14000578f:	int3   
   140005790:	lea    rcx,[rdx+0x68]
   140005797:	jmp    0x1400011d0
   14000579c:	lea    rcx,[rdx+0x40]
   1400057a3:	jmp    0x140002e30
   1400057a8:	lea    rcx,[rdx+0x80]
   1400057af:	jmp    0x1400011d0
   1400057b4:	lea    rcx,[rdx+0x48]
   1400057bb:	jmp    0x140002e30
   1400057c0:	lea    rcx,[rdx+0x98]
   1400057c7:	jmp    0x140002670
   1400057cc:	int3   
   1400057cd:	int3   
   1400057ce:	int3   
   1400057cf:	int3   
   1400057d0:	rex push rbp
   1400057d2:	sub    rsp,0x20
   1400057d6:	mov    rbp,rdx
   1400057d9:	mov    eax,DWORD PTR [rbp+0x20]
   1400057dc:	and    eax,0x1
   1400057df:	test   eax,eax
   1400057e1:	je     0x1400057f0
   1400057e3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400057e7:	mov    rcx,QWORD PTR [rbp+0x70]
   1400057eb:	call   0x140002760
   1400057f0:	add    rsp,0x20
   1400057f4:	pop    rbp
   1400057f5:	ret    
   1400057f6:	int3   
   1400057f7:	int3   
   1400057f8:	int3   
   1400057f9:	int3   
   1400057fa:	int3   
   1400057fb:	int3   
   1400057fc:	int3   
   1400057fd:	int3   
   1400057fe:	int3   
   1400057ff:	int3   
   140005800:	lea    rcx,[rdx+0x48]
   140005807:	jmp    0x140002760
   14000580c:	lea    rcx,[rdx+0x20]
   140005813:	jmp    0x140002e30
   140005818:	lea    rcx,[rdx+0x98]
   14000581f:	jmp    0x140002e30
   140005824:	lea    rcx,[rdx+0xa0]
   14000582b:	jmp    0x140002e30
   140005830:	lea    rcx,[rdx+0xa8]
   140005837:	jmp    0x140002e30
   14000583c:	lea    rcx,[rdx+0x38]
   140005843:	jmp    0x140002e30
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	lea    rcx,[rdx+0x50]
   140005857:	jmp    0x140002e30
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	rex push rbp
   140005862:	sub    rsp,0x20
   140005866:	mov    rbp,rdx
   140005869:	mov    eax,DWORD PTR [rbp+0x30]
   14000586c:	and    eax,0x1
   14000586f:	test   eax,eax
   140005871:	je     0x140005880
   140005873:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140005877:	mov    rcx,QWORD PTR [rbp+0x50]
   14000587b:	call   0x140002e30
   140005880:	add    rsp,0x20
   140005884:	pop    rbp
   140005885:	ret    
   140005886:	int3   
   140005887:	int3   
   140005888:	int3   
   140005889:	int3   
   14000588a:	int3   
   14000588b:	int3   
   14000588c:	int3   
   14000588d:	int3   
   14000588e:	int3   
   14000588f:	int3   
   140005890:	mov    QWORD PTR [rsp+0x10],rdx
   140005895:	push   rbp
   140005896:	sub    rsp,0x30
   14000589a:	mov    rbp,rdx
   14000589d:	mov    rcx,QWORD PTR [rbp+0x68]
   1400058a1:	call   QWORD PTR [rip+0x9e1]        # 0x140006288
   1400058a7:	xor    edx,edx
   1400058a9:	xor    ecx,ecx
   1400058ab:	call   0x14000549c
   1400058b0:	nop
   1400058b1:	int3   
   1400058b2:	int3   
   1400058b3:	int3   
   1400058b4:	int3   
   1400058b5:	int3   
   1400058b6:	int3   
   1400058b7:	int3   
   1400058b8:	int3   
   1400058b9:	int3   
   1400058ba:	int3   
   1400058bb:	int3   
   1400058bc:	int3   
   1400058bd:	int3   
   1400058be:	int3   
   1400058bf:	int3   
   1400058c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400058c7:	jmp    0x140002e30
   1400058cc:	int3   
   1400058cd:	int3   
   1400058ce:	int3   
   1400058cf:	int3   
   1400058d0:	rex push rbp
   1400058d2:	sub    rsp,0x20
   1400058d6:	mov    rbp,rdx
   1400058d9:	mov    rdx,QWORD PTR [rbp+0x58]
   1400058dd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400058e1:	call   0x140001040
   1400058e6:	add    rsp,0x20
   1400058ea:	pop    rbp
   1400058eb:	ret    
   1400058ec:	mov    rcx,QWORD PTR [rdx+0x28]
   1400058f3:	jmp    0x140002e30
   1400058f8:	mov    QWORD PTR [rsp+0x10],rdx
   1400058fd:	push   rbp
   1400058fe:	sub    rsp,0x20
   140005902:	mov    rbp,rdx
   140005905:	mov    rcx,QWORD PTR [rbp+0x50]
   140005909:	call   QWORD PTR [rip+0x979]        # 0x140006288
   14000590f:	xor    edx,edx
   140005911:	xor    ecx,ecx
   140005913:	call   0x14000549c
   140005918:	nop
   140005919:	int3   
   14000591a:	int3   
   14000591b:	int3   
   14000591c:	int3   
   14000591d:	int3   
   14000591e:	int3   
   14000591f:	int3   
   140005920:	mov    QWORD PTR [rsp+0x10],rdx
   140005925:	push   rbp
   140005926:	sub    rsp,0x30
   14000592a:	mov    rbp,rdx
   14000592d:	mov    rdx,QWORD PTR [rbp+0x80]
   140005934:	call   0x1400045f0
   140005939:	xor    edx,edx
   14000593b:	xor    ecx,ecx
   14000593d:	call   0x14000549c
   140005942:	nop
   140005943:	int3   
   140005944:	int3   
   140005945:	int3   
   140005946:	int3   
   140005947:	int3   
   140005948:	int3   
   140005949:	int3   
   14000594a:	int3   
   14000594b:	int3   
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	rex push rbp
   140005952:	sub    rsp,0x20
   140005956:	mov    rbp,rdx
   140005959:	mov    rdx,QWORD PTR [rbp+0x70]
   14000595d:	mov    rcx,QWORD PTR [rbp+0x60]
   140005961:	call   0x140001040
   140005966:	add    rsp,0x20
   14000596a:	pop    rbp
   14000596b:	ret    
   14000596c:	mov    QWORD PTR [rsp+0x10],rdx
   140005971:	push   rbx
   140005972:	push   rbp
   140005973:	push   rdi
   140005974:	sub    rsp,0x20
   140005978:	mov    rbp,rdx
   14000597b:	mov    rbx,QWORD PTR [rbp+0x78]
   14000597f:	mov    rdi,QWORD PTR [rbp+0x70]
   140005983:	cmp    rbx,rdi
   140005986:	je     0x1400059b0
   140005988:	nop    DWORD PTR [rax+rax*1+0x0]
   140005990:	mov    rdx,QWORD PTR [rbx]
   140005993:	sub    rdx,0x18
   140005997:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000599c:	jg     0x1400059a7
   14000599e:	mov    rcx,QWORD PTR [rdx]
   1400059a1:	mov    rax,QWORD PTR [rcx]
   1400059a4:	call   QWORD PTR [rax+0x8]
   1400059a7:	add    rbx,0x8
   1400059ab:	cmp    rbx,rdi
   1400059ae:	jne    0x140005990
   1400059b0:	xor    edx,edx
   1400059b2:	xor    ecx,ecx
   1400059b4:	call   0x14000549c
   1400059b9:	nop
   1400059ba:	rex push rbp
   1400059bc:	sub    rsp,0x20
   1400059c0:	mov    rbp,rdx
   1400059c3:	mov    ecx,0x8
   1400059c8:	call   0x14000514c
   1400059cd:	nop
   1400059ce:	add    rsp,0x20
   1400059d2:	pop    rbp
   1400059d3:	ret    
   1400059d4:	int3   
   1400059d5:	rex push rbp
   1400059d7:	sub    rsp,0x20
   1400059db:	mov    rbp,rdx
   1400059de:	mov    rax,QWORD PTR [rcx]
   1400059e1:	mov    rdx,rcx
   1400059e4:	mov    ecx,DWORD PTR [rax]
   1400059e6:	call   0x14000525c
   1400059eb:	nop
   1400059ec:	add    rsp,0x20
   1400059f0:	pop    rbp
   1400059f1:	ret    
   1400059f2:	int3   
   1400059f3:	rex push rbp
   1400059f5:	sub    rsp,0x20
   1400059f9:	mov    rbp,rdx
   1400059fc:	cmp    DWORD PTR [rbp+0x20],0x0
   140005a00:	jne    0x140005a18
   140005a02:	mov    r9,QWORD PTR [rbp+0x78]
   140005a06:	mov    r8d,DWORD PTR [rbp+0x70]
   140005a0a:	mov    rdx,QWORD PTR [rbp+0x68]
   140005a0e:	mov    rcx,QWORD PTR [rbp+0x60]
   140005a12:	call   0x1400051c0
   140005a17:	nop
   140005a18:	add    rsp,0x20
   140005a1c:	pop    rbp
   140005a1d:	ret    
   140005a1e:	int3   
   140005a1f:	rex push rbp
   140005a21:	sub    rsp,0x20
   140005a25:	mov    rbp,rdx
   140005a28:	mov    QWORD PTR [rbp+0x38],rcx
   140005a2c:	mov    QWORD PTR [rbp+0x28],rcx
   140005a30:	mov    rax,QWORD PTR [rbp+0x28]
   140005a34:	mov    rcx,QWORD PTR [rax]
   140005a37:	mov    QWORD PTR [rbp+0x30],rcx
   140005a3b:	mov    rax,QWORD PTR [rbp+0x30]
   140005a3f:	cmp    DWORD PTR [rax],0xe06d7363
   140005a45:	je     0x140005a53
   140005a47:	mov    DWORD PTR [rbp+0x20],0x0
   140005a4e:	mov    eax,DWORD PTR [rbp+0x20]
   140005a51:	jmp    0x140005a59
   140005a53:	call   0x140005484
   140005a58:	nop
   140005a59:	add    rsp,0x20
   140005a5d:	pop    rbp
   140005a5e:	ret    
   140005a5f:	int3   
   140005a60:	rex push rbp
   140005a62:	sub    rsp,0x20
   140005a66:	mov    rbp,rdx
   140005a69:	mov    rax,QWORD PTR [rcx]
   140005a6c:	xor    ecx,ecx
   140005a6e:	cmp    DWORD PTR [rax],0xc0000005
   140005a74:	sete   cl
   140005a77:	mov    eax,ecx
   140005a79:	add    rsp,0x20
   140005a7d:	pop    rbp
   140005a7e:	ret    
   140005a7f:	int3   
   140005a80:	lea    rax,[rip+0xcf9]        # 0x140006780
   140005a87:	mov    BYTE PTR [rip+0x3cea],0x0        # 0x140009778
   140005a8e:	mov    QWORD PTR [rip+0x3cb3],rax        # 0x140009748
   140005a95:	ret    
   140005a96:	int3   
   140005a97:	int3   
   140005a98:	int3   
   140005a99:	int3   
   140005a9a:	int3   
   140005a9b:	int3   
   140005a9c:	int3   
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	cmp    BYTE PTR [rip+0x3c99],0x0        # 0x140009740
   140005aa7:	lea    rax,[rip+0xca2]        # 0x140006750
   140005aae:	mov    QWORD PTR [rip+0x3c7b],rax        # 0x140009730
   140005ab5:	je     0x140005aca
   140005ab7:	mov    rcx,QWORD PTR [rip+0x3c7a]        # 0x140009738
   140005abe:	test   rcx,rcx
   140005ac1:	je     0x140005aca
   140005ac3:	rex.W jmp QWORD PTR [rip+0x58e]        # 0x140006058
   140005aca:	ret    
   140005acb:	int3   
   140005acc:	lea    rcx,[rip+0x363d]        # 0x140009110
   140005ad3:	jmp    0x140004af8
