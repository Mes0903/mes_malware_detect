
fb79aa9861b147460e71653b2c01129cc0911efc6c1f97c6377d96f47d651da2.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	call   0x1400012d0
   140001009:	mov    BYTE PTR [rip+0x8768],0x1        # 0x140009778
   140001010:	add    rsp,0x28
   140001014:	ret    
   140001015:	int3   
   140001016:	int3   
   140001017:	int3   
   140001018:	sub    rsp,0x28
   14000101c:	lea    rcx,[rip+0x80ed]        # 0x140009110
   140001023:	call   0x140004a50
   140001028:	lea    rcx,[rip+0x4a9d]        # 0x140005acc
   14000102f:	add    rsp,0x28
   140001033:	jmp    0x140004ce8
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	ret    0x0
   140001043:	int3   
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	sub    rsp,0x28
   140001054:	mov    DWORD PTR [rsp+0x30],ecx
   140001058:	lea    rdx,[rip+0x68d1]        # 0x140007930
   14000105f:	lea    rcx,[rsp+0x30]
   140001064:	call   0x14000549c
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	rex.W jmp QWORD PTR [rip+0x4ff1]        # 0x140006068
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	mov    QWORD PTR [rsp+0x10],rbp
   140001085:	mov    QWORD PTR [rsp+0x18],rsi
   14000108a:	push   rdi
   14000108b:	sub    rsp,0x20
   14000108f:	mov    edi,r8d
   140001092:	mov    rsi,rdx
   140001095:	mov    rbp,rcx
   140001098:	call   QWORD PTR [rip+0x4fe2]        # 0x140006080
   14000109e:	test   rax,rax
   1400010a1:	jne    0x1400010b3
   1400010a3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400010a8:	mov    rsi,QWORD PTR [rsp+0x40]
   1400010ad:	add    rsp,0x20
   1400010b1:	pop    rdi
   1400010b2:	ret    
   1400010b3:	mov    rcx,rax
   1400010b6:	mov    QWORD PTR [rsp+0x30],rbx
   1400010bb:	call   QWORD PTR [rip+0x4fcf]        # 0x140006090
   1400010c1:	mov    rbx,rax
   1400010c4:	test   rax,rax
   1400010c7:	je     0x1400010f9
   1400010c9:	mov    rdx,rsi
   1400010cc:	mov    rcx,rbp
   1400010cf:	call   QWORD PTR [rip+0x4f7b]        # 0x140006050
   1400010d5:	mov    ecx,eax
   1400010d7:	add    rcx,rbx
   1400010da:	and    edi,0xf
   1400010dd:	jbe    0x1400010f4
   1400010df:	nop
   1400010e0:	cmp    rbx,rcx
   1400010e3:	jae    0x1400010f9
   1400010e5:	movzx  eax,WORD PTR [rbx]
   1400010e8:	lea    rbx,[rbx+rax*2]
   1400010ec:	add    rbx,0x2
   1400010f0:	dec    edi
   1400010f2:	jne    0x1400010e0
   1400010f4:	cmp    rbx,rcx
   1400010f7:	jb     0x1400010fd
   1400010f9:	xor    eax,eax
   1400010fb:	jmp    0x140001109
   1400010fd:	xor    eax,eax
   1400010ff:	cmp    WORD PTR [rbx],ax
   140001102:	cmove  rbx,rax
   140001106:	mov    rax,rbx
   140001109:	mov    rbx,QWORD PTR [rsp+0x30]
   14000110e:	mov    rbp,QWORD PTR [rsp+0x38]
   140001113:	mov    rsi,QWORD PTR [rsp+0x40]
   140001118:	add    rsp,0x20
   14000111c:	pop    rdi
   14000111d:	ret    
   14000111e:	int3   
   14000111f:	int3   
   140001120:	mov    QWORD PTR [rsp+0x8],rbx
   140001125:	mov    QWORD PTR [rsp+0x10],rbp
   14000112a:	mov    QWORD PTR [rsp+0x18],rsi
   14000112f:	push   rdi
   140001130:	sub    rsp,0x20
   140001134:	mov    ebp,ecx
   140001136:	lea    rcx,[rip+0x7fd3]        # 0x140009110
   14000113d:	xor    edx,edx
   14000113f:	call   0x140004b2c
   140001144:	mov    edi,0x1
   140001149:	mov    rbx,rax
   14000114c:	test   rax,rax
   14000114f:	je     0x1400011a7
   140001151:	mov    esi,ebp
   140001153:	shr    esi,0x4
   140001156:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001160:	xor    r9d,r9d
   140001163:	lea    ecx,[rsi+0x1]
   140001166:	movzx  r8d,cx
   14000116a:	lea    edx,[r9+0x6]
   14000116e:	mov    rcx,rbx
   140001171:	call   QWORD PTR [rip+0x4f71]        # 0x1400060e8
   140001177:	test   rax,rax
   14000117a:	je     0x14000118f
   14000117c:	mov    r8d,ebp
   14000117f:	mov    rdx,rax
   140001182:	mov    rcx,rbx
   140001185:	call   0x140001080
   14000118a:	test   rax,rax
   14000118d:	jne    0x1400011be
   14000118f:	lea    rcx,[rip+0x7f7a]        # 0x140009110
   140001196:	mov    edx,edi
   140001198:	call   0x140004b2c
   14000119d:	inc    edi
   14000119f:	mov    rbx,rax
   1400011a2:	test   rax,rax
   1400011a5:	jne    0x140001160
   1400011a7:	xor    eax,eax
   1400011a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400011ae:	mov    rbp,QWORD PTR [rsp+0x38]
   1400011b3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400011b8:	add    rsp,0x20
   1400011bc:	pop    rdi
   1400011bd:	ret    
   1400011be:	mov    rax,rbx
   1400011c1:	jmp    0x1400011a9
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	rex push rbx
   1400011d2:	sub    rsp,0x20
   1400011d6:	mov    rbx,rcx
   1400011d9:	mov    rcx,QWORD PTR [rcx]
   1400011dc:	test   rcx,rcx
   1400011df:	je     0x1400011f5
   1400011e1:	call   QWORD PTR [rip+0x4e31]        # 0x140006018
   1400011e7:	xor    eax,eax
   1400011e9:	mov    QWORD PTR [rbx],rax
   1400011ec:	mov    DWORD PTR [rbx+0x8],eax
   1400011ef:	add    rsp,0x20
   1400011f3:	pop    rbx
   1400011f4:	ret    
   1400011f5:	xor    eax,eax
   1400011f7:	mov    DWORD PTR [rbx+0x8],eax
   1400011fa:	add    rsp,0x20
   1400011fe:	pop    rbx
   1400011ff:	ret    
   140001200:	mov    rcx,QWORD PTR [rcx+0x8]
   140001204:	mov    r8,rdx
   140001207:	xor    edx,edx
   140001209:	rex.W jmp QWORD PTR [rip+0x4e20]        # 0x140006030
   140001210:	test   rdx,rdx
   140001213:	je     0x140001225
   140001215:	mov    rcx,QWORD PTR [rcx+0x8]
   140001219:	mov    r8,rdx
   14000121c:	xor    edx,edx
   14000121e:	rex.W jmp QWORD PTR [rip+0x4e13]        # 0x140006038
   140001225:	ret    
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	sub    rsp,0x28
   140001234:	test   rdx,rdx
   140001237:	jne    0x140001246
   140001239:	mov    rax,QWORD PTR [rcx]
   14000123c:	mov    rdx,r8
   14000123f:	add    rsp,0x28
   140001243:	rex.W jmp QWORD PTR [rax]
   140001246:	test   r8,r8
   140001249:	jne    0x140001258
   14000124b:	mov    rax,QWORD PTR [rcx]
   14000124e:	call   QWORD PTR [rax+0x8]
   140001251:	xor    eax,eax
   140001253:	add    rsp,0x28
   140001257:	ret    
   140001258:	mov    rcx,QWORD PTR [rcx+0x8]
   14000125c:	mov    r9,r8
   14000125f:	mov    r8,rdx
   140001262:	xor    edx,edx
   140001264:	add    rsp,0x28
   140001268:	rex.W jmp QWORD PTR [rip+0x4e89]        # 0x1400060f8
   14000126f:	int3   
   140001270:	mov    rcx,QWORD PTR [rcx+0x8]
   140001274:	mov    r8,rdx
   140001277:	xor    edx,edx
   140001279:	rex.W jmp QWORD PTR [rip+0x4e08]        # 0x140006088
   140001280:	mov    QWORD PTR [rsp+0x8],rbx
   140001285:	push   rdi
   140001286:	sub    rsp,0x20
   14000128a:	cmp    BYTE PTR [rcx+0x10],0x0
   14000128e:	lea    rax,[rip+0x54bb]        # 0x140006750
   140001295:	mov    edi,edx
   140001297:	mov    QWORD PTR [rcx],rax
   14000129a:	mov    rbx,rcx
   14000129d:	je     0x1400012ae
   14000129f:	mov    rcx,QWORD PTR [rcx+0x8]
   1400012a3:	test   rcx,rcx
   1400012a6:	je     0x1400012ae
   1400012a8:	call   QWORD PTR [rip+0x4daa]        # 0x140006058
   1400012ae:	test   dil,0x1
   1400012b2:	je     0x1400012bd
   1400012b4:	mov    rcx,rbx
   1400012b7:	call   QWORD PTR [rip+0x4fcb]        # 0x140006288
   1400012bd:	mov    rax,rbx
   1400012c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012c5:	add    rsp,0x20
   1400012c9:	pop    rdi
   1400012ca:	ret    
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	sub    rsp,0x28
   1400012d4:	mov    eax,DWORD PTR [rip+0x844e]        # 0x140009728
   1400012da:	test   al,0x1
   1400012dc:	jne    0x14000131b
   1400012de:	or     eax,0x1
   1400012e1:	mov    DWORD PTR [rip+0x8441],eax        # 0x140009728
   1400012e7:	call   QWORD PTR [rip+0x4d5b]        # 0x140006048
   1400012ed:	lea    rcx,[rip+0x545c]        # 0x140006750
   1400012f4:	mov    QWORD PTR [rip+0x8435],rcx        # 0x140009730
   1400012fb:	lea    rcx,[rip+0x479e]        # 0x140005aa0
   140001302:	mov    BYTE PTR [rip+0x8437],0x0        # 0x140009740
   140001309:	mov    QWORD PTR [rip+0x8428],rax        # 0x140009738
   140001310:	call   0x140004ce8
   140001315:	mov    eax,DWORD PTR [rip+0x840d]        # 0x140009728
   14000131b:	mov    QWORD PTR [rsp+0x20],rbx
   140001320:	test   al,0x2
   140001322:	jne    0x140001389
   140001324:	or     eax,0x2
   140001327:	lea    rbx,[rip+0x841a]        # 0x140009748
   14000132e:	lea    rcx,[rip+0x474b]        # 0x140005a80
   140001335:	mov    DWORD PTR [rip+0x83ed],eax        # 0x140009728
   14000133b:	lea    rax,[rip+0x543e]        # 0x140006780
   140001342:	mov    DWORD PTR [rip+0x841c],0x2        # 0x140009768
   14000134c:	mov    QWORD PTR [rip+0x83f5],rax        # 0x140009748
   140001353:	lea    rax,[rip+0x83d6]        # 0x140009730
   14000135a:	mov    QWORD PTR [rip+0x83f7],rbx        # 0x140009758
   140001361:	mov    QWORD PTR [rip+0x83e8],rax        # 0x140009750
   140001368:	xor    eax,eax
   14000136a:	mov    QWORD PTR [rip+0x83ef],rax        # 0x140009760
   140001371:	mov    DWORD PTR [rip+0x83f9],eax        # 0x140009770
   140001377:	call   0x140004ce8
   14000137c:	mov    rax,rbx
   14000137f:	mov    rbx,QWORD PTR [rsp+0x20]
   140001384:	add    rsp,0x28
   140001388:	ret    
   140001389:	lea    rax,[rip+0x83b8]        # 0x140009748
   140001390:	mov    rbx,QWORD PTR [rsp+0x20]
   140001395:	add    rsp,0x28
   140001399:	ret    
   14000139a:	int3   
   14000139b:	int3   
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	rex push rdi
   1400013a2:	sub    rsp,0x20
   1400013a6:	mov    rdi,rcx
   1400013a9:	test   edx,edx
   1400013ab:	jns    0x1400013b5
   1400013ad:	xor    eax,eax
   1400013af:	add    rsp,0x20
   1400013b3:	pop    rdi
   1400013b4:	ret    
   1400013b5:	mov    eax,0x7fffffff
   1400013ba:	sub    eax,edx
   1400013bc:	cmp    eax,0x1
   1400013bf:	jl     0x1400013ad
   1400013c1:	inc    edx
   1400013c3:	mov    QWORD PTR [rsp+0x30],rbx
   1400013c8:	lea    ebx,[rdx+0x7]
   1400013cb:	and    ebx,0xfffffff8
   1400013ce:	cmp    edx,ebx
   1400013d0:	jg     0x140001432
   1400013d2:	movsxd r8,r8d
   1400013d5:	movsxd rcx,ebx
   1400013d8:	test   ebx,ebx
   1400013da:	jne    0x1400013e0
   1400013dc:	xor    ecx,ecx
   1400013de:	jmp    0x1400013f8
   1400013e0:	xor    edx,edx
   1400013e2:	or     rax,0xffffffffffffffff
   1400013e6:	div    rcx
   1400013e9:	cmp    rax,r8
   1400013ec:	jb     0x140001432
   1400013ee:	imul   rcx,r8
   1400013f2:	cmp    rcx,0xffffffffffffffe7
   1400013f6:	ja     0x140001432
   1400013f8:	lea    rdx,[rcx+0x18]
   1400013fc:	mov    rcx,QWORD PTR [rdi+0x8]
   140001400:	mov    rax,QWORD PTR [rcx]
   140001403:	call   QWORD PTR [rax]
   140001405:	mov    rcx,rax
   140001408:	test   rax,rax
   14000140b:	je     0x140001432
   14000140d:	mov    QWORD PTR [rax],rdi
   140001410:	mov    DWORD PTR [rax+0x10],0x1
   140001417:	lea    eax,[rbx-0x1]
   14000141a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000141f:	mov    DWORD PTR [rcx+0xc],eax
   140001422:	mov    DWORD PTR [rcx+0x8],0x0
   140001429:	mov    rax,rcx
   14000142c:	add    rsp,0x20
   140001430:	pop    rdi
   140001431:	ret    
   140001432:	xor    eax,eax
   140001434:	mov    rbx,QWORD PTR [rsp+0x30]
   140001439:	add    rsp,0x20
   14000143d:	pop    rdi
   14000143e:	ret    
   14000143f:	int3   
   140001440:	mov    rcx,QWORD PTR [rcx+0x8]
   140001444:	mov    rax,QWORD PTR [rcx]
   140001447:	rex.W jmp QWORD PTR [rax+0x8]
   14000144b:	int3   
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	sub    rsp,0x28
   140001454:	mov    r10,rcx
   140001457:	test   r8d,r8d
   14000145a:	jns    0x140001463
   14000145c:	xor    eax,eax
   14000145e:	add    rsp,0x28
   140001462:	ret    
   140001463:	mov    eax,0x7fffffff
   140001468:	sub    eax,r8d
   14000146b:	cmp    eax,0x1
   14000146e:	jl     0x14000145c
   140001470:	inc    r8d
   140001473:	mov    QWORD PTR [rsp+0x20],rbx
   140001478:	lea    ebx,[r8+0x7]
   14000147c:	and    ebx,0xfffffff8
   14000147f:	cmp    r8d,ebx
   140001482:	jg     0x1400014c6
   140001484:	mov    eax,r9d
   140001487:	mov    ecx,ebx
   140001489:	imul   rcx,rax
   14000148d:	mov    eax,0xffffffff
   140001492:	cmp    rcx,rax
   140001495:	ja     0x1400014c6
   140001497:	cmp    ecx,0xffffffe7
   14000149a:	ja     0x1400014c6
   14000149c:	lea    r8d,[rcx+0x18]
   1400014a0:	mov    rcx,QWORD PTR [r10+0x8]
   1400014a4:	mov    r9,QWORD PTR [rcx]
   1400014a7:	call   QWORD PTR [r9+0x10]
   1400014ab:	mov    rcx,rax
   1400014ae:	test   rax,rax
   1400014b1:	je     0x1400014c6
   1400014b3:	lea    eax,[rbx-0x1]
   1400014b6:	mov    rbx,QWORD PTR [rsp+0x20]
   1400014bb:	mov    DWORD PTR [rcx+0xc],eax
   1400014be:	mov    rax,rcx
   1400014c1:	add    rsp,0x28
   1400014c5:	ret    
   1400014c6:	xor    eax,eax
   1400014c8:	mov    rbx,QWORD PTR [rsp+0x20]
   1400014cd:	add    rsp,0x28
   1400014d1:	ret    
   1400014d2:	int3   
   1400014d3:	int3   
   1400014d4:	int3   
   1400014d5:	int3   
   1400014d6:	int3   
   1400014d7:	int3   
   1400014d8:	int3   
   1400014d9:	int3   
   1400014da:	int3   
   1400014db:	int3   
   1400014dc:	int3   
   1400014dd:	int3   
   1400014de:	int3   
   1400014df:	int3   
   1400014e0:	lock inc DWORD PTR [rcx+0x20]
   1400014e4:	lea    rax,[rcx+0x10]
   1400014e8:	ret    
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	mov    rax,rcx
   1400014f3:	ret    
   1400014f4:	int3   
   1400014f5:	int3   
   1400014f6:	int3   
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	rex push rbx
   140001502:	sub    rsp,0x20
   140001506:	lea    rax,[rip+0x5273]        # 0x140006780
   14000150d:	mov    rbx,rcx
   140001510:	mov    BYTE PTR [rip+0x8261],0x0        # 0x140009778
   140001517:	mov    QWORD PTR [rcx],rax
   14000151a:	test   dl,0x1
   14000151d:	je     0x140001525
   14000151f:	call   QWORD PTR [rip+0x4d63]        # 0x140006288
   140001525:	mov    rax,rbx
   140001528:	add    rsp,0x20
   14000152c:	pop    rbx
   14000152d:	ret    
   14000152e:	int3   
   14000152f:	int3   
   140001530:	rex push rbp
   140001532:	push   rbx
   140001533:	push   rsi
   140001534:	push   rdi
   140001535:	push   r14
   140001537:	lea    rbp,[rsp-0x37]
   14000153c:	sub    rsp,0xe0
   140001543:	mov    QWORD PTR [rbp-0x41],0xfffffffffffffffe
   14000154b:	mov    r14,rdx
   14000154e:	cmp    ecx,0x3
   140001551:	je     0x140001567
   140001553:	lea    rcx,[rip+0x4eb6]        # 0x140006410
   14000155a:	call   QWORD PTR [rip+0x4d40]        # 0x1400062a0
   140001560:	xor    eax,eax
   140001562:	jmp    0x140001754
   140001567:	call   0x1400012d0
   14000156c:	mov    rdx,rax
   14000156f:	xor    edi,edi
   140001571:	mov    ecx,edi
   140001573:	test   rax,rax
   140001576:	setne  cl
   140001579:	test   ecx,ecx
   14000157b:	jne    0x140001588
   14000157d:	mov    ecx,0x80004005
   140001582:	call   0x140001050
   140001587:	int3   
   140001588:	mov    rax,QWORD PTR [rax]
   14000158b:	mov    rcx,rdx
   14000158e:	call   QWORD PTR [rax+0x18]
   140001591:	add    rax,0x18
   140001595:	mov    QWORD PTR [rbp+0x7f],rax
   140001599:	lea    rcx,[rbp+0x7f]
   14000159d:	call   0x140002790
   1400015a2:	test   al,al
   1400015a4:	je     0x14000172c
   1400015aa:	call   0x1400012d0
   1400015af:	mov    rdx,rax
   1400015b2:	mov    ecx,edi
   1400015b4:	test   rax,rax
   1400015b7:	setne  cl
   1400015ba:	test   ecx,ecx
   1400015bc:	jne    0x1400015c9
   1400015be:	mov    ecx,0x80004005
   1400015c3:	call   0x140001050
   1400015c8:	int3   
   1400015c9:	mov    rax,QWORD PTR [rax]
   1400015cc:	mov    rcx,rdx
   1400015cf:	call   QWORD PTR [rax+0x18]
   1400015d2:	add    rax,0x18
   1400015d6:	mov    QWORD PTR [rbp+0x77],rax
   1400015da:	lea    rdx,[rip+0x4e7f]        # 0x140006460
   1400015e1:	test   rdx,0xffffffffffff0000
   1400015e8:	jne    0x14000160a
   1400015ea:	movzx  ebx,dx
   1400015ed:	mov    ecx,ebx
   1400015ef:	call   0x140001120
   1400015f4:	test   rax,rax
   1400015f7:	je     0x14000161a
   1400015f9:	mov    r8d,ebx
   1400015fc:	mov    rdx,rax
   1400015ff:	lea    rcx,[rbp+0x77]
   140001603:	call   0x140003820
   140001608:	jmp    0x14000161a
   14000160a:	mov    r8d,0xd9
   140001610:	lea    rcx,[rbp+0x77]
   140001614:	call   0x140003430
   140001619:	nop
   14000161a:	mov    r9,QWORD PTR [r14+0x8]
   14000161e:	mov    r8,QWORD PTR [r14+0x10]
   140001622:	lea    rdx,[rip+0x4fef]        # 0x140006618
   140001629:	lea    rcx,[rbp+0x77]
   14000162d:	call   0x1400041c0
   140001632:	xor    edx,edx
   140001634:	lea    r8d,[rdx+0x68]
   140001638:	lea    rcx,[rbp-0x39]
   14000163c:	call   0x140005022
   140001641:	mov    DWORD PTR [rbp-0x39],0x68
   140001648:	xor    eax,eax
   14000164a:	mov    QWORD PTR [rbp-0x59],rax
   14000164e:	mov    QWORD PTR [rbp-0x51],rax
   140001652:	mov    QWORD PTR [rbp-0x49],rax
   140001656:	mov    rbx,QWORD PTR [rbp+0x77]
   14000165a:	cmp    DWORD PTR [rbx-0x8],0x1
   14000165e:	jle    0x140001670
   140001660:	mov    edx,DWORD PTR [rbx-0x10]
   140001663:	lea    rcx,[rbp+0x77]
   140001667:	call   0x140003300
   14000166c:	mov    rbx,QWORD PTR [rbp+0x77]
   140001670:	lea    rax,[rbp-0x59]
   140001674:	mov    QWORD PTR [rsp+0x48],rax
   140001679:	lea    rax,[rbp-0x39]
   14000167d:	mov    QWORD PTR [rsp+0x40],rax
   140001682:	mov    QWORD PTR [rsp+0x38],rdi
   140001687:	mov    QWORD PTR [rsp+0x30],rdi
   14000168c:	mov    DWORD PTR [rsp+0x28],0x8000020
   140001694:	mov    DWORD PTR [rsp+0x20],edi
   140001698:	xor    r9d,r9d
   14000169b:	xor    r8d,r8d
   14000169e:	mov    rdx,rbx
   1400016a1:	mov    rcx,QWORD PTR [rbp+0x7f]
   1400016a5:	call   QWORD PTR [rip+0x497d]        # 0x140006028
   1400016ab:	mov    r14d,eax
   1400016ae:	test   eax,eax
   1400016b0:	je     0x1400016f1
   1400016b2:	or     edx,0xffffffff
   1400016b5:	mov    rcx,QWORD PTR [rbp-0x59]
   1400016b9:	call   QWORD PTR [rip+0x4981]        # 0x140006040
   1400016bf:	mov    DWORD PTR [rbp+0x67],edi
   1400016c2:	lea    rdx,[rbp+0x67]
   1400016c6:	mov    rcx,QWORD PTR [rbp-0x59]
   1400016ca:	call   QWORD PTR [rip+0x4990]        # 0x140006060
   1400016d0:	test   eax,eax
   1400016d2:	je     0x1400016da
   1400016d4:	cmp    DWORD PTR [rbp+0x67],0x0
   1400016d8:	je     0x1400016dd
   1400016da:	mov    r14d,edi
   1400016dd:	mov    rcx,QWORD PTR [rbp-0x59]
   1400016e1:	call   QWORD PTR [rip+0x49c1]        # 0x1400060a8
   1400016e7:	mov    rcx,QWORD PTR [rbp-0x51]
   1400016eb:	call   QWORD PTR [rip+0x49b7]        # 0x1400060a8
   1400016f1:	movsxd rdx,DWORD PTR [rbx-0xc]
   1400016f5:	mov    rcx,rbx
   1400016f8:	call   QWORD PTR [rip+0x4a5a]        # 0x140006158
   1400016fe:	test   eax,eax
   140001700:	js     0x140001749
   140001702:	cmp    eax,DWORD PTR [rbx-0xc]
   140001705:	jg     0x140001749
   140001707:	mov    DWORD PTR [rbx-0x10],eax
   14000170a:	cdqe   
   14000170c:	mov    WORD PTR [rbx+rax*2],di
   140001710:	test   r14d,r14d
   140001713:	setg   dil
   140001717:	lea    rdx,[rbx-0x18]
   14000171b:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001720:	jg     0x14000172c
   140001722:	mov    rcx,QWORD PTR [rdx]
   140001725:	mov    rax,QWORD PTR [rcx]
   140001728:	call   QWORD PTR [rax+0x8]
   14000172b:	nop
   14000172c:	mov    rdx,QWORD PTR [rbp+0x7f]
   140001730:	add    rdx,0xffffffffffffffe8
   140001734:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001739:	jg     0x140001745
   14000173b:	mov    rcx,QWORD PTR [rdx]
   14000173e:	mov    r8,QWORD PTR [rcx]
   140001741:	call   QWORD PTR [r8+0x8]
   140001745:	mov    eax,edi
   140001747:	jmp    0x140001754
   140001749:	mov    ecx,0x80070057
   14000174e:	call   0x140001050
   140001753:	nop
   140001754:	add    rsp,0xe0
   14000175b:	pop    r14
   14000175d:	pop    rdi
   14000175e:	pop    rsi
   14000175f:	pop    rbx
   140001760:	pop    rbp
   140001761:	ret    
   140001762:	int3   
   140001763:	int3   
   140001764:	int3   
   140001765:	int3   
   140001766:	int3   
   140001767:	int3   
   140001768:	int3   
   140001769:	int3   
   14000176a:	int3   
   14000176b:	int3   
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	mov    QWORD PTR [rsp+0x8],rcx
   140001775:	push   rbx
   140001776:	push   rbp
   140001777:	push   rsi
   140001778:	push   rdi
   140001779:	push   r14
   14000177b:	push   r15
   14000177d:	sub    rsp,0x68
   140001781:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000178a:	mov    rbx,rcx
   14000178d:	xor    r15d,r15d
   140001790:	mov    DWORD PTR [rsp+0x30],r15d
   140001795:	call   0x1400012d0
   14000179a:	mov    rcx,rax
   14000179d:	mov    edx,r15d
   1400017a0:	test   rax,rax
   1400017a3:	setne  dl
   1400017a6:	test   edx,edx
   1400017a8:	jne    0x1400017b5
   1400017aa:	mov    ecx,0x80004005
   1400017af:	call   0x140001050
   1400017b4:	int3   
   1400017b5:	mov    rax,QWORD PTR [rax]
   1400017b8:	call   QWORD PTR [rax+0x18]
   1400017bb:	add    rax,0x18
   1400017bf:	mov    QWORD PTR [rbx],rax
   1400017c2:	mov    edi,0x1
   1400017c7:	mov    DWORD PTR [rsp+0x30],edi
   1400017cb:	mov    rsi,r15
   1400017ce:	mov    DWORD PTR [rsp+0x48],r15d
   1400017d3:	mov    QWORD PTR [rsp+0x50],r15
   1400017d8:	mov    QWORD PTR [rsp+0xb8],r15
   1400017e0:	lea    rax,[rsp+0xb8]
   1400017e8:	mov    QWORD PTR [rsp+0x20],rax
   1400017ed:	mov    r9d,0x20019
   1400017f3:	xor    r8d,r8d
   1400017f6:	lea    rdx,[rip+0x4e33]        # 0x140006630
   1400017fd:	mov    rcx,0xffffffff80000001
   140001804:	call   QWORD PTR [rip+0x47fe]        # 0x140006008
   14000180a:	test   eax,eax
   14000180c:	jne    0x14000197b
   140001812:	mov    rsi,QWORD PTR [rsp+0xb8]
   14000181a:	mov    QWORD PTR [rsp+0x40],rsi
   14000181f:	mov    DWORD PTR [rsp+0x48],r15d
   140001824:	mov    rax,QWORD PTR [rbx]
   140001827:	sub    edi,DWORD PTR [rax-0x8]
   14000182a:	mov    eax,DWORD PTR [rax-0xc]
   14000182d:	sub    eax,0x64
   140001830:	or     eax,edi
   140001832:	jge    0x140001841
   140001834:	mov    edx,0x64
   140001839:	mov    rcx,rbx
   14000183c:	call   0x140003540
   140001841:	mov    r14,QWORD PTR [rbx]
   140001844:	mov    DWORD PTR [rsp+0xa8],0xc8
   14000184f:	mov    ebp,r15d
   140001852:	lea    rax,[rsp+0xa8]
   14000185a:	mov    QWORD PTR [rsp+0x28],rax
   14000185f:	mov    QWORD PTR [rsp+0x20],r14
   140001864:	lea    r9,[rsp+0xb0]
   14000186c:	xor    r8d,r8d
   14000186f:	lea    rdx,[rip+0x4df2]        # 0x140006668
   140001876:	mov    rcx,rsi
   140001879:	call   QWORD PTR [rip+0x4791]        # 0x140006010
   14000187f:	mov    edi,eax
   140001881:	test   eax,eax
   140001883:	jne    0x1400018ce
   140001885:	mov    eax,DWORD PTR [rsp+0xb0]
   14000188c:	dec    eax
   14000188e:	cmp    eax,0x1
   140001891:	jbe    0x14000189a
   140001893:	mov    edi,0xd
   140001898:	jmp    0x1400018ce
   14000189a:	mov    ecx,DWORD PTR [rsp+0xa8]
   1400018a1:	test   r14,r14
   1400018a4:	je     0x1400018c7
   1400018a6:	test   ecx,ecx
   1400018a8:	je     0x1400018c3
   1400018aa:	test   cl,0x1
   1400018ad:	jne    0x1400018bc
   1400018af:	mov    eax,ecx
   1400018b1:	shr    rax,1
   1400018b4:	cmp    WORD PTR [r14+rax*2-0x2],bp
   1400018ba:	je     0x1400018c7
   1400018bc:	mov    edi,0xd
   1400018c1:	jmp    0x1400018ce
   1400018c3:	mov    WORD PTR [r14],r15w
   1400018c7:	mov    ebp,ecx
   1400018c9:	shr    ebp,1
   1400018cb:	mov    edi,r15d
   1400018ce:	lea    eax,[rbp-0x1]
   1400018d1:	cmp    eax,0xffffffff
   1400018d4:	jne    0x1400018ed
   1400018d6:	mov    rcx,QWORD PTR [rbx]
   1400018d9:	test   rcx,rcx
   1400018dc:	jne    0x1400018e3
   1400018de:	mov    eax,r15d
   1400018e1:	jmp    0x1400018f1
   1400018e3:	movsxd rdx,DWORD PTR [rcx-0xc]
   1400018e7:	call   QWORD PTR [rip+0x486b]        # 0x140006158
   1400018ed:	test   eax,eax
   1400018ef:	js     0x140001970
   1400018f1:	mov    rcx,QWORD PTR [rbx]
   1400018f4:	cmp    eax,DWORD PTR [rcx-0xc]
   1400018f7:	jg     0x140001970
   1400018f9:	mov    DWORD PTR [rcx-0x10],eax
   1400018fc:	movsxd rcx,eax
   1400018ff:	mov    rax,QWORD PTR [rbx]
   140001902:	mov    WORD PTR [rax+rcx*2],r15w
   140001907:	test   edi,edi
   140001909:	je     0x140001966
   14000190b:	mov    rax,QWORD PTR [rbx]
   14000190e:	lea    rdx,[rax-0x18]
   140001912:	mov    rdi,QWORD PTR [rdx]
   140001915:	cmp    DWORD PTR [rdx+0x8],0x0
   140001919:	je     0x14000197b
   14000191b:	cmp    DWORD PTR [rdx+0x10],0x0
   14000191f:	jge    0x14000193f
   140001921:	cmp    DWORD PTR [rax-0xc],0x0
   140001925:	jge    0x140001932
   140001927:	mov    ecx,0x80070057
   14000192c:	call   0x140001050
   140001931:	int3   
   140001932:	mov    DWORD PTR [rax-0x10],r15d
   140001936:	mov    rax,QWORD PTR [rbx]
   140001939:	mov    WORD PTR [rax],r15w
   14000193d:	jmp    0x14000197b
   14000193f:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001944:	jg     0x14000194f
   140001946:	mov    rcx,QWORD PTR [rdx]
   140001949:	mov    rax,QWORD PTR [rcx]
   14000194c:	call   QWORD PTR [rax+0x8]
   14000194f:	mov    rax,QWORD PTR [rdi]
   140001952:	mov    rcx,rdi
   140001955:	call   QWORD PTR [rax+0x18]
   140001958:	add    rax,0x18
   14000195c:	mov    QWORD PTR [rbx],rax
   14000195f:	mov    rsi,QWORD PTR [rsp+0x40]
   140001964:	jmp    0x14000197b
   140001966:	mov    rcx,rbx
   140001969:	call   0x140002f60
   14000196e:	jmp    0x14000197b
   140001970:	mov    ecx,0x80070057
   140001975:	call   0x140001050
   14000197a:	nop
   14000197b:	test   rsi,rsi
   14000197e:	je     0x140001989
   140001980:	mov    rcx,rsi
   140001983:	call   QWORD PTR [rip+0x468f]        # 0x140006018
   140001989:	mov    rax,rbx
   14000198c:	add    rsp,0x68
   140001990:	pop    r15
   140001992:	pop    r14
   140001994:	pop    rdi
   140001995:	pop    rsi
   140001996:	pop    rbp
   140001997:	pop    rbx
   140001998:	ret    
   140001999:	int3   
   14000199a:	int3   
   14000199b:	int3   
   14000199c:	int3   
   14000199d:	int3   
   14000199e:	int3   
   14000199f:	int3   
   1400019a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400019a5:	mov    QWORD PTR [rsp+0x8],rcx
   1400019aa:	push   rbp
   1400019ab:	push   rbx
   1400019ac:	push   rsi
   1400019ad:	push   rdi
   1400019ae:	push   r12
   1400019b0:	push   r13
   1400019b2:	push   r14
   1400019b4:	push   r15
   1400019b6:	mov    rbp,rsp
   1400019b9:	sub    rsp,0x58
   1400019bd:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   1400019c5:	mov    r14,rdx
   1400019c8:	mov    rdi,rcx
   1400019cb:	xor    r12d,r12d
   1400019ce:	mov    DWORD PTR [rbp-0x38],r12d
   1400019d2:	mov    QWORD PTR [rcx],r12
   1400019d5:	mov    QWORD PTR [rcx+0x8],r12
   1400019d9:	mov    QWORD PTR [rcx+0x10],r12
   1400019dd:	mov    DWORD PTR [rbp-0x38],0x1
   1400019e4:	mov    DWORD PTR [rbp+0x58],r12d
   1400019e8:	lea    r9,[rbp+0x58]
   1400019ec:	lea    rdx,[rbp+0x60]
   1400019f0:	mov    rcx,r14
   1400019f3:	call   0x140002e50
   1400019f8:	nop
   1400019f9:	mov    rax,QWORD PTR [rbp+0x60]
   1400019fd:	cmp    DWORD PTR [rax-0x10],0x0
   140001a01:	je     0x140001dd1
   140001a07:	movabs r10,0x1fffffffffffffff
   140001a11:	mov    rdx,QWORD PTR [rdi+0x8]
   140001a15:	lea    rcx,[rbp+0x60]
   140001a19:	cmp    rcx,rdx
   140001a1c:	jae    0x140001b2a
   140001a22:	mov    r8,QWORD PTR [rdi]
   140001a25:	lea    rcx,[rbp+0x60]
   140001a29:	cmp    r8,rcx
   140001a2c:	ja     0x140001b2a
   140001a32:	lea    rbx,[rbp+0x60]
   140001a36:	sub    rbx,r8
   140001a39:	sar    rbx,0x3
   140001a3d:	mov    rcx,QWORD PTR [rdi+0x10]
   140001a41:	cmp    rdx,rcx
   140001a44:	jne    0x140001aa3
   140001a46:	mov    rax,rcx
   140001a49:	sub    rax,rdx
   140001a4c:	sar    rax,0x3
   140001a50:	cmp    rax,0x1
   140001a54:	jae    0x140001aa3
   140001a56:	sub    rdx,r8
   140001a59:	sar    rdx,0x3
   140001a5d:	mov    rax,r10
   140001a60:	sub    rax,rdx
   140001a63:	cmp    rax,0x1
   140001a67:	jb     0x140001d7d
   140001a6d:	lea    r9,[rdx+0x1]
   140001a71:	sub    rcx,r8
   140001a74:	sar    rcx,0x3
   140001a78:	mov    rdx,rcx
   140001a7b:	shr    rdx,1
   140001a7e:	mov    rax,r10
   140001a81:	sub    rax,rdx
   140001a84:	cmp    rax,rcx
   140001a87:	jae    0x140001a8e
   140001a89:	mov    rcx,r12
   140001a8c:	jmp    0x140001a91
   140001a8e:	add    rcx,rdx
   140001a91:	cmp    rcx,r9
   140001a94:	cmovb  rcx,r9
   140001a98:	mov    rdx,rcx
   140001a9b:	mov    rcx,rdi
   140001a9e:	call   0x140003630
   140001aa3:	mov    rax,QWORD PTR [rdi]
   140001aa6:	mov    rsi,QWORD PTR [rdi+0x8]
   140001aaa:	mov    QWORD PTR [rbp-0x20],rsi
   140001aae:	mov    QWORD PTR [rbp-0x18],rsi
   140001ab2:	test   rsi,rsi
   140001ab5:	je     0x140001b25
   140001ab7:	mov    rbx,QWORD PTR [rax+rbx*8]
   140001abb:	mov    rcx,QWORD PTR [rbx-0x18]
   140001abf:	mov    rax,QWORD PTR [rcx]
   140001ac2:	call   QWORD PTR [rax+0x20]
   140001ac5:	mov    rcx,rax
   140001ac8:	cmp    DWORD PTR [rbx-0x8],0x0
   140001acc:	jl     0x140001ade
   140001ace:	cmp    rax,QWORD PTR [rbx-0x18]
   140001ad2:	jne    0x140001ade
   140001ad4:	lea    r14,[rbx-0x18]
   140001ad8:	lock inc DWORD PTR [rbx-0x8]
   140001adc:	jmp    0x140001b1a
   140001ade:	mov    rax,QWORD PTR [rax]
   140001ae1:	mov    r8d,0x2
   140001ae7:	mov    edx,DWORD PTR [rbx-0x10]
   140001aea:	call   QWORD PTR [rax]
   140001aec:	mov    r14,rax
   140001aef:	test   rax,rax
   140001af2:	je     0x140001d8b
   140001af8:	mov    ecx,DWORD PTR [rbx-0x10]
   140001afb:	mov    DWORD PTR [rax+0x8],ecx
   140001afe:	mov    ecx,DWORD PTR [rbx-0x10]
   140001b01:	inc    ecx
   140001b03:	movsxd rdx,ecx
   140001b06:	lea    r9,[rdx+rdx*1]
   140001b0a:	mov    r8,rbx
   140001b0d:	add    rdx,rdx
   140001b10:	lea    rcx,[rax+0x18]
   140001b14:	call   QWORD PTR [rip+0x4666]        # 0x140006180
   140001b1a:	lea    rax,[r14+0x18]
   140001b1e:	mov    QWORD PTR [rsi],rax
   140001b21:	mov    r14,QWORD PTR [rbp+0x50]
   140001b25:	jmp    0x140001c13
   140001b2a:	mov    r8,QWORD PTR [rdi+0x10]
   140001b2e:	cmp    rdx,r8
   140001b31:	jne    0x140001b96
   140001b33:	mov    rcx,r8
   140001b36:	sub    rcx,rdx
   140001b39:	sar    rcx,0x3
   140001b3d:	cmp    rcx,0x1
   140001b41:	jae    0x140001b96
   140001b43:	mov    rcx,QWORD PTR [rdi]
   140001b46:	sub    rdx,rcx
   140001b49:	sar    rdx,0x3
   140001b4d:	mov    rax,r10
   140001b50:	sub    rax,rdx
   140001b53:	cmp    rax,0x1
   140001b57:	jb     0x140001d91
   140001b5d:	inc    rdx
   140001b60:	sub    r8,rcx
   140001b63:	sar    r8,0x3
   140001b67:	mov    rcx,r8
   140001b6a:	shr    rcx,1
   140001b6d:	mov    rax,r10
   140001b70:	sub    rax,rcx
   140001b73:	cmp    rax,r8
   140001b76:	jae    0x140001b7d
   140001b78:	mov    r8,r12
   140001b7b:	jmp    0x140001b80
   140001b7d:	add    r8,rcx
   140001b80:	cmp    r8,rdx
   140001b83:	cmovb  r8,rdx
   140001b87:	mov    rdx,r8
   140001b8a:	mov    rcx,rdi
   140001b8d:	call   0x140003630
   140001b92:	mov    rax,QWORD PTR [rbp+0x60]
   140001b96:	mov    rsi,QWORD PTR [rdi+0x8]
   140001b9a:	mov    QWORD PTR [rbp-0x18],rsi
   140001b9e:	mov    QWORD PTR [rbp-0x20],rsi
   140001ba2:	test   rsi,rsi
   140001ba5:	je     0x140001c13
   140001ba7:	lea    rbx,[rax-0x18]
   140001bab:	mov    rcx,QWORD PTR [rbx]
   140001bae:	mov    rax,QWORD PTR [rcx]
   140001bb1:	call   QWORD PTR [rax+0x20]
   140001bb4:	mov    rcx,rax
   140001bb7:	cmp    DWORD PTR [rbx+0x10],0x0
   140001bbb:	jl     0x140001bcb
   140001bbd:	cmp    rax,QWORD PTR [rbx]
   140001bc0:	jne    0x140001bcb
   140001bc2:	mov    r14,rbx
   140001bc5:	lock inc DWORD PTR [rbx+0x10]
   140001bc9:	jmp    0x140001c08
   140001bcb:	mov    rax,QWORD PTR [rax]
   140001bce:	mov    r8d,0x2
   140001bd4:	mov    edx,DWORD PTR [rbx+0x8]
   140001bd7:	call   QWORD PTR [rax]
   140001bd9:	mov    r14,rax
   140001bdc:	test   rax,rax
   140001bdf:	je     0x140001d9f
   140001be5:	mov    ecx,DWORD PTR [rbx+0x8]
   140001be8:	mov    DWORD PTR [rax+0x8],ecx
   140001beb:	mov    ecx,DWORD PTR [rbx+0x8]
   140001bee:	inc    ecx
   140001bf0:	movsxd rdx,ecx
   140001bf3:	lea    r9,[rdx+rdx*1]
   140001bf7:	lea    r8,[rbx+0x18]
   140001bfb:	add    rdx,rdx
   140001bfe:	lea    rcx,[rax+0x18]
   140001c02:	call   QWORD PTR [rip+0x4578]        # 0x140006180
   140001c08:	lea    rax,[r14+0x18]
   140001c0c:	mov    QWORD PTR [rsi],rax
   140001c0f:	mov    r14,QWORD PTR [rbp+0x50]
   140001c13:	add    QWORD PTR [rdi+0x8],0x8
   140001c18:	lea    r9,[rbp+0x58]
   140001c1c:	lea    rdx,[rbp-0x30]
   140001c20:	mov    rcx,r14
   140001c23:	call   0x140002e50
   140001c28:	nop
   140001c29:	mov    r15,QWORD PTR [rax]
   140001c2c:	lea    rdx,[r15-0x18]
   140001c30:	mov    rcx,QWORD PTR [rbp+0x60]
   140001c34:	lea    rbx,[rcx-0x18]
   140001c38:	cmp    rdx,rbx
   140001c3b:	je     0x140001d5c
   140001c41:	cmp    DWORD PTR [rbx+0x10],0x0
   140001c45:	jl     0x140001c7b
   140001c47:	mov    rax,QWORD PTR [rbx]
   140001c4a:	cmp    QWORD PTR [rdx],rax
   140001c4d:	jne    0x140001c7b
   140001c4f:	mov    rcx,rdx
   140001c52:	call   0x1400035a0
   140001c57:	mov    rsi,rax
   140001c5a:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140001c5f:	jg     0x140001c6e
   140001c61:	mov    rcx,QWORD PTR [rbx]
   140001c64:	mov    r8,QWORD PTR [rcx]
   140001c67:	mov    rdx,rbx
   140001c6a:	call   QWORD PTR [r8+0x8]
   140001c6e:	lea    rax,[rsi+0x18]
   140001c72:	mov    QWORD PTR [rbp+0x60],rax
   140001c76:	jmp    0x140001d5c
   140001c7b:	movsxd rsi,DWORD PTR [r15-0x10]
   140001c7f:	test   esi,esi
   140001c81:	jne    0x140001cda
   140001c83:	mov    rsi,QWORD PTR [rbx]
   140001c86:	cmp    DWORD PTR [rbx+0x8],0x0
   140001c8a:	je     0x140001d5c
   140001c90:	cmp    DWORD PTR [rbx+0x10],0x0
   140001c94:	jge    0x140001cb1
   140001c96:	cmp    DWORD PTR [rcx-0xc],0x0
   140001c9a:	jl     0x140001da5
   140001ca0:	mov    DWORD PTR [rcx-0x10],r12d
   140001ca4:	mov    rax,QWORD PTR [rbp+0x60]
   140001ca8:	mov    WORD PTR [rax],r12w
   140001cac:	jmp    0x140001d5c
   140001cb1:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140001cb6:	jg     0x140001cc4
   140001cb8:	mov    rcx,QWORD PTR [rbx]
   140001cbb:	mov    rax,QWORD PTR [rcx]
   140001cbe:	mov    rdx,rbx
   140001cc1:	call   QWORD PTR [rax+0x8]
   140001cc4:	mov    rax,QWORD PTR [rsi]
   140001cc7:	mov    rcx,rsi
   140001cca:	call   QWORD PTR [rax+0x18]
   140001ccd:	add    rax,0x18
   140001cd1:	mov    QWORD PTR [rbp+0x60],rax
   140001cd5:	jmp    0x140001d5c
   140001cda:	test   r15,r15
   140001cdd:	je     0x140001dc6
   140001ce3:	mov    r12d,DWORD PTR [rcx-0x10]
   140001ce7:	mov    r14,r15
   140001cea:	sub    r14,rcx
   140001ced:	sar    r14,1
   140001cf0:	test   esi,esi
   140001cf2:	js     0x140001dbb
   140001cf8:	mov    edx,0x1
   140001cfd:	sub    edx,DWORD PTR [rbx+0x10]
   140001d00:	mov    eax,DWORD PTR [rbx+0xc]
   140001d03:	sub    eax,esi
   140001d05:	or     eax,edx
   140001d07:	jge    0x140001d18
   140001d09:	mov    edx,esi
   140001d0b:	lea    rcx,[rbp+0x60]
   140001d0f:	call   0x140003540
   140001d14:	mov    rcx,QWORD PTR [rbp+0x60]
   140001d18:	lea    rbx,[rsi+rsi*1]
   140001d1c:	movsxd rdx,DWORD PTR [rcx-0xc]
   140001d20:	mov    r9,rbx
   140001d23:	add    rdx,rdx
   140001d26:	cmp    r14,r12
   140001d29:	ja     0x140001d37
   140001d2b:	lea    r8,[rcx+r14*2]
   140001d2f:	call   QWORD PTR [rip+0x454b]        # 0x140006280
   140001d35:	jmp    0x140001d40
   140001d37:	mov    r8,r15
   140001d3a:	call   QWORD PTR [rip+0x4440]        # 0x140006180
   140001d40:	mov    rax,QWORD PTR [rbp+0x60]
   140001d44:	cmp    esi,DWORD PTR [rax-0xc]
   140001d47:	jg     0x140001db0
   140001d49:	mov    DWORD PTR [rax-0x10],esi
   140001d4c:	mov    rax,QWORD PTR [rbp+0x60]
   140001d50:	xor    r12d,r12d
   140001d53:	mov    WORD PTR [rbx+rax*1],r12w
   140001d58:	mov    r14,QWORD PTR [rbp+0x50]
   140001d5c:	mov    rdx,QWORD PTR [rbp-0x30]
   140001d60:	add    rdx,0xffffffffffffffe8
   140001d64:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001d69:	jg     0x1400019f9
   140001d6f:	mov    rcx,QWORD PTR [rdx]
   140001d72:	mov    rax,QWORD PTR [rcx]
   140001d75:	call   QWORD PTR [rax+0x8]
   140001d78:	jmp    0x1400019f9
   140001d7d:	lea    rcx,[rip+0x4994]        # 0x140006718
   140001d84:	call   QWORD PTR [rip+0x439e]        # 0x140006128
   140001d8a:	nop
   140001d8b:	call   0x140003530
   140001d90:	nop
   140001d91:	lea    rcx,[rip+0x4980]        # 0x140006718
   140001d98:	call   QWORD PTR [rip+0x438a]        # 0x140006128
   140001d9e:	nop
   140001d9f:	call   0x140003530
   140001da4:	nop
   140001da5:	mov    ecx,0x80070057
   140001daa:	call   0x140001050
   140001daf:	int3   
   140001db0:	mov    ecx,0x80070057
   140001db5:	call   0x140001050
   140001dba:	int3   
   140001dbb:	mov    ecx,0x80070057
   140001dc0:	call   0x140001050
   140001dc5:	int3   
   140001dc6:	mov    ecx,0x80070057
   140001dcb:	call   0x140001050
   140001dd0:	nop
   140001dd1:	lea    rdx,[rax-0x18]
   140001dd5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001dda:	jg     0x140001de5
   140001ddc:	mov    rcx,QWORD PTR [rdx]
   140001ddf:	mov    rax,QWORD PTR [rcx]
   140001de2:	call   QWORD PTR [rax+0x8]
   140001de5:	mov    rax,rdi
   140001de8:	add    rsp,0x58
   140001dec:	pop    r15
   140001dee:	pop    r14
   140001df0:	pop    r13
   140001df2:	pop    r12
   140001df4:	pop    rdi
   140001df5:	pop    rsi
   140001df6:	pop    rbx
   140001df7:	pop    rbp
   140001df8:	ret    
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	rex push rbp
   140001e02:	push   rsi
   140001e03:	push   rdi
   140001e04:	push   r12
   140001e06:	push   r13
   140001e08:	push   r14
   140001e0a:	push   r15
   140001e0c:	lea    rbp,[rsp-0x27]
   140001e11:	sub    rsp,0x90
   140001e18:	mov    QWORD PTR [rbp+0x17],0xfffffffffffffffe
   140001e20:	mov    QWORD PTR [rsp+0xd0],rbx
   140001e28:	mov    rbx,rdx
   140001e2b:	mov    rdx,rcx
   140001e2e:	xor    r12d,r12d
   140001e31:	mov    edi,r12d
   140001e34:	mov    DWORD PTR [rbp+0x6f],r12d
   140001e38:	mov    r8,QWORD PTR [rbx]
   140001e3b:	mov    eax,r12d
   140001e3e:	test   r8,r8
   140001e41:	setne  al
   140001e44:	test   eax,eax
   140001e46:	jne    0x140001e53
   140001e48:	mov    ecx,0x80004005
   140001e4d:	call   0x140001050
   140001e52:	int3   
   140001e53:	mov    rax,QWORD PTR [rcx]
   140001e56:	sub    r8,rax
   140001e59:	nop    DWORD PTR [rax+0x0]
   140001e60:	movzx  ecx,WORD PTR [rax]
   140001e63:	cmp    cx,WORD PTR [rax+r8*1]
   140001e68:	jne    0x140001e78
   140001e6a:	add    rax,0x2
   140001e6e:	test   cx,cx
   140001e71:	jne    0x140001e60
   140001e73:	mov    esi,r12d
   140001e76:	jmp    0x140001e7d
   140001e78:	sbb    esi,esi
   140001e7a:	or     esi,0x1
   140001e7d:	test   esi,esi
   140001e7f:	je     0x14000224d
   140001e85:	lea    rcx,[rbp-0x21]
   140001e89:	call   0x1400019a0
   140001e8e:	nop
   140001e8f:	mov    rdx,rbx
   140001e92:	lea    rcx,[rbp-0x39]
   140001e96:	call   0x1400019a0
   140001e9b:	nop
   140001e9c:	mov    rdx,QWORD PTR [rbp-0x31]
   140001ea0:	mov    r15,QWORD PTR [rbp-0x39]
   140001ea4:	sub    rdx,r15
   140001ea7:	sar    rdx,0x3
   140001eab:	mov    QWORD PTR [rbp+0x7],rdx
   140001eaf:	mov    r14,QWORD PTR [rbp-0x19]
   140001eb3:	mov    rcx,r14
   140001eb6:	mov    rbx,QWORD PTR [rbp-0x21]
   140001eba:	sub    rcx,rbx
   140001ebd:	sar    rcx,0x3
   140001ec1:	mov    QWORD PTR [rbp+0xf],rcx
   140001ec5:	lea    rax,[rbp+0x7]
   140001ec9:	lea    r8,[rbp+0xf]
   140001ecd:	cmp    rcx,rdx
   140001ed0:	cmovae rax,r8
   140001ed4:	mov    r13,QWORD PTR [rax]
   140001ed7:	test   r13,r13
   140001eda:	cmovne esi,r12d
   140001ede:	je     0x1400021b6
   140001ee4:	test   esi,esi
   140001ee6:	jne    0x1400021b6
   140001eec:	sub    r14,rbx
   140001eef:	sar    r14,0x3
   140001ef3:	cmp    r12,r14
   140001ef6:	jae    0x140001f20
   140001ef8:	mov    rcx,QWORD PTR [rbx+r12*8]
   140001efc:	sub    rcx,0x18
   140001f00:	call   0x1400035a0
   140001f05:	add    rax,0x18
   140001f09:	mov    QWORD PTR [rbp-0x9],rax
   140001f0d:	lea    rcx,[rbp-0x9]
   140001f11:	or     edi,0x1
   140001f14:	lea    rsi,[rip+0x44ed]        # 0x140006408
   140001f1b:	xor    r14d,r14d
   140001f1e:	jmp    0x140001f91
   140001f20:	call   0x1400012d0
   140001f25:	xor    r14d,r14d
   140001f28:	mov    ecx,r14d
   140001f2b:	test   rax,rax
   140001f2e:	setne  cl
   140001f31:	test   ecx,ecx
   140001f33:	je     0x1400021ab
   140001f39:	mov    rdx,QWORD PTR [rax]
   140001f3c:	mov    rcx,rax
   140001f3f:	call   QWORD PTR [rdx+0x18]
   140001f42:	add    rax,0x18
   140001f46:	mov    QWORD PTR [rbp+0x77],rax
   140001f4a:	lea    rsi,[rip+0x44b7]        # 0x140006408
   140001f51:	test   rsi,0xffffffffffff0000
   140001f58:	jne    0x140001f7a
   140001f5a:	movzx  ebx,si
   140001f5d:	mov    ecx,ebx
   140001f5f:	call   0x140001120
   140001f64:	test   rax,rax
   140001f67:	je     0x140001f8a
   140001f69:	mov    r8d,ebx
   140001f6c:	mov    rdx,rax
   140001f6f:	lea    rcx,[rbp+0x77]
   140001f73:	call   0x140003820
   140001f78:	jmp    0x140001f8a
   140001f7a:	xor    r8d,r8d
   140001f7d:	mov    rdx,rsi
   140001f80:	lea    rcx,[rbp+0x77]
   140001f84:	call   0x140003430
   140001f89:	nop
   140001f8a:	lea    rcx,[rbp+0x77]
   140001f8e:	or     edi,0x2
   140001f91:	mov    DWORD PTR [rbp+0x6f],edi
   140001f94:	mov    rcx,QWORD PTR [rcx]
   140001f97:	sub    rcx,0x18
   140001f9b:	call   0x1400035a0
   140001fa0:	add    rax,0x18
   140001fa4:	mov    QWORD PTR [rbp-0x41],rax
   140001fa8:	test   dil,0x2
   140001fac:	je     0x140001fcf
   140001fae:	and    edi,0xfffffffd
   140001fb1:	mov    DWORD PTR [rbp+0x6f],edi
   140001fb4:	mov    rdx,QWORD PTR [rbp+0x77]
   140001fb8:	add    rdx,0xffffffffffffffe8
   140001fbc:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001fc1:	jg     0x140001fcc
   140001fc3:	mov    rcx,QWORD PTR [rdx]
   140001fc6:	mov    rax,QWORD PTR [rcx]
   140001fc9:	call   QWORD PTR [rax+0x8]
   140001fcc:	mov    edi,DWORD PTR [rbp+0x6f]
   140001fcf:	test   dil,0x1
   140001fd3:	je     0x140001ff6
   140001fd5:	and    edi,0xfffffffe
   140001fd8:	mov    DWORD PTR [rbp+0x6f],edi
   140001fdb:	mov    rdx,QWORD PTR [rbp-0x9]
   140001fdf:	add    rdx,0xffffffffffffffe8
   140001fe3:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140001fe8:	jg     0x140001ff3
   140001fea:	mov    rcx,QWORD PTR [rdx]
   140001fed:	mov    rax,QWORD PTR [rcx]
   140001ff0:	call   QWORD PTR [rax+0x8]
   140001ff3:	mov    edi,DWORD PTR [rbp+0x6f]
   140001ff6:	mov    rax,QWORD PTR [rbp-0x31]
   140001ffa:	mov    rcx,QWORD PTR [rbp-0x39]
   140001ffe:	sub    rax,rcx
   140002001:	sar    rax,0x3
   140002005:	cmp    r12,rax
   140002008:	jae    0x140002028
   14000200a:	mov    rcx,QWORD PTR [rcx+r12*8]
   14000200e:	sub    rcx,0x18
   140002012:	call   0x1400035a0
   140002017:	add    rax,0x18
   14000201b:	mov    QWORD PTR [rbp-0x1],rax
   14000201f:	lea    rcx,[rbp-0x1]
   140002023:	or     edi,0x4
   140002026:	jmp    0x14000208f
   140002028:	call   0x1400012d0
   14000202d:	mov    ecx,r14d
   140002030:	test   rax,rax
   140002033:	setne  cl
   140002036:	test   ecx,ecx
   140002038:	je     0x1400021a0
   14000203e:	mov    rdx,QWORD PTR [rax]
   140002041:	mov    rcx,rax
   140002044:	call   QWORD PTR [rdx+0x18]
   140002047:	add    rax,0x18
   14000204b:	mov    QWORD PTR [rbp+0x7f],rax
   14000204f:	test   rsi,0xffffffffffff0000
   140002056:	jne    0x140002078
   140002058:	movzx  ebx,si
   14000205b:	mov    ecx,ebx
   14000205d:	call   0x140001120
   140002062:	test   rax,rax
   140002065:	je     0x140002088
   140002067:	mov    r8d,ebx
   14000206a:	mov    rdx,rax
   14000206d:	lea    rcx,[rbp+0x7f]
   140002071:	call   0x140003820
   140002076:	jmp    0x140002088
   140002078:	xor    r8d,r8d
   14000207b:	mov    rdx,rsi
   14000207e:	lea    rcx,[rbp+0x7f]
   140002082:	call   0x140003430
   140002087:	nop
   140002088:	lea    rcx,[rbp+0x7f]
   14000208c:	or     edi,0x8
   14000208f:	mov    DWORD PTR [rbp+0x6f],edi
   140002092:	mov    rcx,QWORD PTR [rcx]
   140002095:	sub    rcx,0x18
   140002099:	call   0x1400035a0
   14000209e:	lea    rbx,[rax+0x18]
   1400020a2:	mov    QWORD PTR [rbp-0x49],rbx
   1400020a6:	test   dil,0x8
   1400020aa:	je     0x1400020d1
   1400020ac:	and    edi,0xfffffff7
   1400020af:	mov    DWORD PTR [rbp+0x6f],edi
   1400020b2:	mov    rdx,QWORD PTR [rbp+0x7f]
   1400020b6:	add    rdx,0xffffffffffffffe8
   1400020ba:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400020bf:	jg     0x1400020ca
   1400020c1:	mov    rcx,QWORD PTR [rdx]
   1400020c4:	mov    rax,QWORD PTR [rcx]
   1400020c7:	call   QWORD PTR [rax+0x8]
   1400020ca:	mov    edi,DWORD PTR [rbp+0x6f]
   1400020cd:	mov    rbx,QWORD PTR [rbp-0x49]
   1400020d1:	test   dil,0x4
   1400020d5:	je     0x1400020f9
   1400020d7:	and    edi,0xfffffffb
   1400020da:	mov    DWORD PTR [rbp+0x6f],edi
   1400020dd:	mov    rdx,QWORD PTR [rbp-0x1]
   1400020e1:	add    rdx,0xffffffffffffffe8
   1400020e5:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400020ea:	jg     0x1400020f5
   1400020ec:	mov    rcx,QWORD PTR [rdx]
   1400020ef:	mov    rax,QWORD PTR [rcx]
   1400020f2:	call   QWORD PTR [rax+0x8]
   1400020f5:	mov    rbx,QWORD PTR [rbp-0x49]
   1400020f9:	test   r12,r12
   1400020fc:	jne    0x140002119
   1400020fe:	mov    rcx,rbx
   140002101:	call   QWORD PTR [rip+0x4049]        # 0x140006150
   140002107:	mov    edi,eax
   140002109:	mov    rcx,QWORD PTR [rbp-0x41]
   14000210d:	call   QWORD PTR [rip+0x403d]        # 0x140006150
   140002113:	mov    esi,eax
   140002115:	sub    esi,edi
   140002117:	jmp    0x14000214c
   140002119:	mov    eax,r14d
   14000211c:	test   rbx,rbx
   14000211f:	setne  al
   140002122:	test   eax,eax
   140002124:	je     0x140002195
   140002126:	mov    rax,QWORD PTR [rbp-0x41]
   14000212a:	mov    rdx,rbx
   14000212d:	sub    rdx,rax
   140002130:	movzx  ecx,WORD PTR [rax]
   140002133:	cmp    cx,WORD PTR [rax+rdx*1]
   140002137:	jne    0x140002147
   140002139:	add    rax,0x2
   14000213d:	test   cx,cx
   140002140:	jne    0x140002130
   140002142:	mov    esi,r14d
   140002145:	jmp    0x14000214c
   140002147:	sbb    esi,esi
   140002149:	or     esi,0x1
   14000214c:	lea    rdx,[rbx-0x18]
   140002150:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002155:	jg     0x140002161
   140002157:	mov    rcx,QWORD PTR [rdx]
   14000215a:	mov    rax,QWORD PTR [rcx]
   14000215d:	call   QWORD PTR [rax+0x8]
   140002160:	nop
   140002161:	mov    rdx,QWORD PTR [rbp-0x41]
   140002165:	add    rdx,0xffffffffffffffe8
   140002169:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000216e:	jg     0x140002179
   140002170:	mov    rcx,QWORD PTR [rdx]
   140002173:	mov    rax,QWORD PTR [rcx]
   140002176:	call   QWORD PTR [rax+0x8]
   140002179:	inc    r12
   14000217c:	mov    r14,QWORD PTR [rbp-0x19]
   140002180:	mov    rbx,QWORD PTR [rbp-0x21]
   140002184:	mov    r15,QWORD PTR [rbp-0x39]
   140002188:	cmp    r12,r13
   14000218b:	jae    0x1400021b6
   14000218d:	mov    edi,DWORD PTR [rbp+0x6f]
   140002190:	jmp    0x140001ee4
   140002195:	mov    ecx,0x80004005
   14000219a:	call   0x140001050
   14000219f:	nop
   1400021a0:	mov    ecx,0x80004005
   1400021a5:	call   0x140001050
   1400021aa:	nop
   1400021ab:	mov    ecx,0x80004005
   1400021b0:	call   0x140001050
   1400021b5:	nop
   1400021b6:	test   r15,r15
   1400021b9:	je     0x140002215
   1400021bb:	mov    rbx,QWORD PTR [rbp-0x31]
   1400021bf:	cmp    r15,rbx
   1400021c2:	je     0x1400021f4
   1400021c4:	nop    DWORD PTR [rax+0x0]
   1400021c8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400021d0:	mov    rdx,QWORD PTR [r15]
   1400021d3:	sub    rdx,0x18
   1400021d7:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400021dc:	jg     0x1400021e7
   1400021de:	mov    rcx,QWORD PTR [rdx]
   1400021e1:	mov    rax,QWORD PTR [rcx]
   1400021e4:	call   QWORD PTR [rax+0x8]
   1400021e7:	add    r15,0x8
   1400021eb:	cmp    r15,rbx
   1400021ee:	jne    0x1400021d0
   1400021f0:	mov    r15,QWORD PTR [rbp-0x39]
   1400021f4:	mov    rcx,r15
   1400021f7:	call   QWORD PTR [rip+0x408b]        # 0x140006288
   1400021fd:	xorps  xmm0,xmm0
   140002200:	movdqu XMMWORD PTR [rbp-0x39],xmm0
   140002205:	mov    QWORD PTR [rbp-0x29],0x0
   14000220d:	mov    r14,QWORD PTR [rbp-0x19]
   140002211:	mov    rbx,QWORD PTR [rbp-0x21]
   140002215:	test   rbx,rbx
   140002218:	je     0x14000224d
   14000221a:	cmp    rbx,r14
   14000221d:	je     0x140002244
   14000221f:	nop
   140002220:	mov    rdx,QWORD PTR [rbx]
   140002223:	sub    rdx,0x18
   140002227:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000222c:	jg     0x140002237
   14000222e:	mov    rcx,QWORD PTR [rdx]
   140002231:	mov    rax,QWORD PTR [rcx]
   140002234:	call   QWORD PTR [rax+0x8]
   140002237:	add    rbx,0x8
   14000223b:	cmp    rbx,r14
   14000223e:	jne    0x140002220
   140002240:	mov    rbx,QWORD PTR [rbp-0x21]
   140002244:	mov    rcx,rbx
   140002247:	call   QWORD PTR [rip+0x403b]        # 0x140006288
   14000224d:	mov    eax,esi
   14000224f:	mov    rbx,QWORD PTR [rsp+0xd0]
   140002257:	add    rsp,0x90
   14000225e:	pop    r15
   140002260:	pop    r14
   140002262:	pop    r13
   140002264:	pop    r12
   140002266:	pop    rdi
   140002267:	pop    rsi
   140002268:	pop    rbp
   140002269:	ret    
   14000226a:	int3   
   14000226b:	int3   
   14000226c:	int3   
   14000226d:	int3   
   14000226e:	int3   
   14000226f:	int3   
   140002270:	mov    DWORD PTR [rsp+0x10],edx
   140002274:	mov    QWORD PTR [rsp+0x8],rcx
   140002279:	push   rbp
   14000227a:	push   rbx
   14000227b:	push   rsi
   14000227c:	push   rdi
   14000227d:	push   r12
   14000227f:	push   r13
   140002281:	push   r14
   140002283:	push   r15
   140002285:	lea    rbp,[rsp-0x1f]
   14000228a:	sub    rsp,0xd8
   140002291:	mov    QWORD PTR [rbp-0x11],0xfffffffffffffffe
   140002299:	mov    ebx,edx
   14000229b:	xor    esi,esi
   14000229d:	mov    DWORD PTR [rbp-0x49],esi
   1400022a0:	mov    QWORD PTR [rbp-0x41],rsi
   1400022a4:	mov    QWORD PTR [rbp-0x69],rsi
   1400022a8:	lea    rax,[rbp-0x69]
   1400022ac:	mov    QWORD PTR [rsp+0x20],rax
   1400022b1:	mov    r9d,edx
   1400022b4:	xor    r8d,r8d
   1400022b7:	lea    rdx,[rip+0x43d2]        # 0x140006690
   1400022be:	mov    rcx,0xffffffff80000002
   1400022c5:	call   QWORD PTR [rip+0x3d3d]        # 0x140006008
   1400022cb:	test   eax,eax
   1400022cd:	jne    0x14000264e
   1400022d3:	mov    r14,QWORD PTR [rbp-0x69]
   1400022d7:	mov    QWORD PTR [rbp-0x51],r14
   1400022db:	mov    r13d,ebx
   1400022de:	and    r13d,0x300
   1400022e5:	mov    DWORD PTR [rbp-0x49],r13d
   1400022e9:	mov    r12d,esi
   1400022ec:	call   0x1400012d0
   1400022f1:	mov    rdx,rax
   1400022f4:	mov    ecx,esi
   1400022f6:	test   rax,rax
   1400022f9:	setne  cl
   1400022fc:	test   ecx,ecx
   1400022fe:	je     0x140002643
   140002304:	mov    rax,QWORD PTR [rdx]
   140002307:	mov    rcx,rdx
   14000230a:	call   QWORD PTR [rax+0x18]
   14000230d:	lea    rbx,[rax+0x18]
   140002311:	mov    QWORD PTR [rbp-0x79],rbx
   140002315:	mov    DWORD PTR [rbp+0x77],0x104
   14000231c:	mov    ecx,0x1
   140002321:	sub    ecx,DWORD PTR [rbx-0x8]
   140002324:	mov    eax,DWORD PTR [rbx-0xc]
   140002327:	sub    eax,0x104
   14000232c:	or     eax,ecx
   14000232e:	jge    0x140002342
   140002330:	mov    edx,0x104
   140002335:	lea    rcx,[rbp-0x79]
   140002339:	call   0x140003540
   14000233e:	mov    rbx,QWORD PTR [rbp-0x79]
   140002342:	lea    rax,[rbp-0x9]
   140002346:	mov    QWORD PTR [rsp+0x38],rax
   14000234b:	mov    QWORD PTR [rsp+0x30],rsi
   140002350:	mov    QWORD PTR [rsp+0x28],rsi
   140002355:	mov    QWORD PTR [rsp+0x20],rsi
   14000235a:	lea    r9,[rbp+0x77]
   14000235e:	mov    r8,rbx
   140002361:	mov    edx,r12d
   140002364:	mov    rcx,r14
   140002367:	call   QWORD PTR [rip+0x3c93]        # 0x140006000
   14000236d:	mov    edi,eax
   14000236f:	mov    eax,DWORD PTR [rbp+0x77]
   140002372:	cmp    eax,0xffffffff
   140002375:	jne    0x140002384
   140002377:	movsxd rdx,DWORD PTR [rbx-0xc]
   14000237b:	mov    rcx,rbx
   14000237e:	call   QWORD PTR [rip+0x3dd4]        # 0x140006158
   140002384:	test   eax,eax
   140002386:	js     0x140002638
   14000238c:	cmp    eax,DWORD PTR [rbx-0xc]
   14000238f:	jg     0x140002638
   140002395:	mov    DWORD PTR [rbx-0x10],eax
   140002398:	cdqe   
   14000239a:	mov    WORD PTR [rbx+rax*2],si
   14000239e:	test   edi,edi
   1400023a0:	jne    0x14000261e
   1400023a6:	mov    rdi,rsi
   1400023a9:	mov    QWORD PTR [rbp-0x39],rsi
   1400023ad:	mov    QWORD PTR [rbp-0x29],rsi
   1400023b1:	mov    QWORD PTR [rbp-0x59],rsi
   1400023b5:	lea    rax,[rbp-0x59]
   1400023b9:	mov    QWORD PTR [rsp+0x20],rax
   1400023be:	mov    r9d,DWORD PTR [rbp+0x6f]
   1400023c2:	xor    r8d,r8d
   1400023c5:	mov    rdx,rbx
   1400023c8:	mov    rcx,r14
   1400023cb:	call   QWORD PTR [rip+0x3c37]        # 0x140006008
   1400023d1:	test   eax,eax
   1400023d3:	jne    0x1400025b6
   1400023d9:	mov    r14,QWORD PTR [rbp-0x59]
   1400023dd:	mov    QWORD PTR [rbp-0x39],r14
   1400023e1:	mov    DWORD PTR [rbp-0x31],r13d
   1400023e5:	call   0x1400012d0
   1400023ea:	mov    ecx,esi
   1400023ec:	test   rax,rax
   1400023ef:	setne  cl
   1400023f2:	test   ecx,ecx
   1400023f4:	je     0x140002613
   1400023fa:	mov    rdx,QWORD PTR [rax]
   1400023fd:	mov    rcx,rax
   140002400:	call   QWORD PTR [rdx+0x18]
   140002403:	lea    rdi,[rax+0x18]
   140002407:	mov    QWORD PTR [rbp-0x71],rdi
   14000240b:	mov    edx,0x104
   140002410:	mov    DWORD PTR [rbp+0x77],edx
   140002413:	mov    ecx,0x1
   140002418:	sub    ecx,DWORD PTR [rdi-0x8]
   14000241b:	mov    eax,DWORD PTR [rdi-0xc]
   14000241e:	sub    eax,edx
   140002420:	or     eax,ecx
   140002422:	jge    0x140002434
   140002424:	lea    rcx,[rbp-0x71]
   140002428:	call   0x140003540
   14000242d:	mov    edx,DWORD PTR [rbp+0x77]
   140002430:	mov    rdi,QWORD PTR [rbp-0x71]
   140002434:	lea    eax,[rdx+rdx*1]
   140002437:	mov    DWORD PTR [rbp+0x7f],eax
   14000243a:	mov    DWORD PTR [rbp+0x77],esi
   14000243d:	lea    rax,[rbp+0x7f]
   140002441:	mov    QWORD PTR [rsp+0x28],rax
   140002446:	mov    QWORD PTR [rsp+0x20],rdi
   14000244b:	lea    r9,[rbp-0x61]
   14000244f:	xor    r8d,r8d
   140002452:	lea    rdx,[rip+0x426f]        # 0x1400066c8
   140002459:	mov    rcx,r14
   14000245c:	call   QWORD PTR [rip+0x3bae]        # 0x140006010
   140002462:	mov    r14d,eax
   140002465:	test   eax,eax
   140002467:	jne    0x1400024ac
   140002469:	mov    eax,DWORD PTR [rbp-0x61]
   14000246c:	dec    eax
   14000246e:	cmp    eax,0x1
   140002471:	jbe    0x14000247b
   140002473:	mov    r14d,0xd
   140002479:	jmp    0x1400024ac
   14000247b:	mov    ecx,DWORD PTR [rbp+0x7f]
   14000247e:	test   rdi,rdi
   140002481:	je     0x1400024a4
   140002483:	test   ecx,ecx
   140002485:	je     0x1400024a1
   140002487:	test   cl,0x1
   14000248a:	jne    0x140002499
   14000248c:	mov    eax,ecx
   14000248e:	shr    rax,1
   140002491:	cmp    WORD PTR [rdi+rax*2-0x2],0x0
   140002497:	je     0x1400024a4
   140002499:	mov    r14d,0xd
   14000249f:	jmp    0x1400024ac
   1400024a1:	mov    WORD PTR [rdi],si
   1400024a4:	shr    ecx,1
   1400024a6:	mov    DWORD PTR [rbp+0x77],ecx
   1400024a9:	mov    r14d,esi
   1400024ac:	mov    eax,DWORD PTR [rbp+0x77]
   1400024af:	dec    eax
   1400024b1:	cmp    eax,0xffffffff
   1400024b4:	jne    0x1400024c3
   1400024b6:	movsxd rdx,DWORD PTR [rdi-0xc]
   1400024ba:	mov    rcx,rdi
   1400024bd:	call   QWORD PTR [rip+0x3c95]        # 0x140006158
   1400024c3:	test   eax,eax
   1400024c5:	js     0x140002608
   1400024cb:	cmp    eax,DWORD PTR [rdi-0xc]
   1400024ce:	jg     0x140002608
   1400024d4:	mov    DWORD PTR [rdi-0x10],eax
   1400024d7:	cdqe   
   1400024d9:	mov    WORD PTR [rdi+rax*2],si
   1400024dd:	test   r14d,r14d
   1400024e0:	jne    0x14000259a
   1400024e6:	movsxd rdi,DWORD PTR [rbx-0x10]
   1400024ea:	test   edi,edi
   1400024ec:	js     0x1400025fd
   1400024f2:	mov    ecx,0x1
   1400024f7:	sub    ecx,DWORD PTR [rbx-0x8]
   1400024fa:	mov    eax,DWORD PTR [rbx-0xc]
   1400024fd:	sub    eax,edi
   1400024ff:	or     eax,ecx
   140002501:	jge    0x140002512
   140002503:	mov    edx,edi
   140002505:	lea    rcx,[rbp-0x79]
   140002509:	call   0x140003540
   14000250e:	mov    rbx,QWORD PTR [rbp-0x79]
   140002512:	lea    eax,[rdi+0x1]
   140002515:	movsxd rdx,eax
   140002518:	mov    rcx,rbx
   14000251b:	call   QWORD PTR [rip+0x3c57]        # 0x140006178
   140002521:	cmp    edi,DWORD PTR [rbx-0xc]
   140002524:	jg     0x1400025f2
   14000252a:	mov    DWORD PTR [rbx-0x10],edi
   14000252d:	mov    WORD PTR [rbx+rdi*2],si
   140002531:	lea    r8,[rbp-0x71]
   140002535:	lea    rdx,[rbp-0x79]
   140002539:	lea    rcx,[rbp-0x21]
   14000253d:	call   0x1400041f0
   140002542:	nop
   140002543:	mov    rdx,rax
   140002546:	mov    rcx,QWORD PTR [rbp+0x67]
   14000254a:	call   0x140004340
   14000254f:	lea    r9,[rax+0x20]
   140002553:	mov    QWORD PTR [rsp+0x20],rax
   140002558:	lea    rdx,[rbp-0x1]
   14000255c:	mov    rcx,QWORD PTR [rbp+0x67]
   140002560:	call   0x1400043c0
   140002565:	nop
   140002566:	mov    rdx,QWORD PTR [rbp-0x19]
   14000256a:	add    rdx,0xffffffffffffffe8
   14000256e:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002573:	jg     0x14000257e
   140002575:	mov    rcx,QWORD PTR [rdx]
   140002578:	mov    rax,QWORD PTR [rcx]
   14000257b:	call   QWORD PTR [rax+0x8]
   14000257e:	mov    rdx,QWORD PTR [rbp-0x21]
   140002582:	add    rdx,0xffffffffffffffe8
   140002586:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000258b:	jg     0x140002596
   14000258d:	mov    rcx,QWORD PTR [rdx]
   140002590:	mov    rax,QWORD PTR [rcx]
   140002593:	call   QWORD PTR [rax+0x8]
   140002596:	mov    rdi,QWORD PTR [rbp-0x71]
   14000259a:	lea    rdx,[rdi-0x18]
   14000259e:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400025a3:	jg     0x1400025ae
   1400025a5:	mov    rcx,QWORD PTR [rdx]
   1400025a8:	mov    rax,QWORD PTR [rcx]
   1400025ab:	call   QWORD PTR [rax+0x8]
   1400025ae:	mov    rdi,QWORD PTR [rbp-0x39]
   1400025b2:	mov    rbx,QWORD PTR [rbp-0x79]
   1400025b6:	test   rdi,rdi
   1400025b9:	je     0x1400025c5
   1400025bb:	mov    rcx,rdi
   1400025be:	call   QWORD PTR [rip+0x3a54]        # 0x140006018
   1400025c4:	nop
   1400025c5:	lea    rdx,[rbx-0x18]
   1400025c9:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400025ce:	jg     0x1400025d9
   1400025d0:	mov    rcx,QWORD PTR [rdx]
   1400025d3:	mov    rax,QWORD PTR [rcx]
   1400025d6:	call   QWORD PTR [rax+0x8]
   1400025d9:	inc    r12d
   1400025dc:	call   0x1400012d0
   1400025e1:	mov    rdx,rax
   1400025e4:	test   rax,rax
   1400025e7:	je     0x140002643
   1400025e9:	mov    r14,QWORD PTR [rbp-0x69]
   1400025ed:	jmp    0x140002304
   1400025f2:	mov    ecx,0x80070057
   1400025f7:	call   0x140001050
   1400025fc:	int3   
   1400025fd:	mov    ecx,0x80070057
   140002602:	call   0x140001050
   140002607:	int3   
   140002608:	mov    ecx,0x80070057
   14000260d:	call   0x140001050
   140002612:	nop
   140002613:	mov    ecx,0x80004005
   140002618:	call   0x140001050
   14000261d:	nop
   14000261e:	lea    rdx,[rbx-0x18]
   140002622:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002627:	jg     0x140002632
   140002629:	mov    rcx,QWORD PTR [rdx]
   14000262c:	mov    rax,QWORD PTR [rcx]
   14000262f:	call   QWORD PTR [rax+0x8]
   140002632:	mov    rsi,QWORD PTR [rbp-0x51]
   140002636:	jmp    0x14000264e
   140002638:	mov    ecx,0x80070057
   14000263d:	call   0x140001050
   140002642:	nop
   140002643:	mov    ecx,0x80004005
   140002648:	call   0x140001050
   14000264d:	nop
   14000264e:	test   rsi,rsi
   140002651:	je     0x14000265c
   140002653:	mov    rcx,rsi
   140002656:	call   QWORD PTR [rip+0x39bc]        # 0x140006018
   14000265c:	add    rsp,0xd8
   140002663:	pop    r15
   140002665:	pop    r14
   140002667:	pop    r13
   140002669:	pop    r12
   14000266b:	pop    rdi
   14000266c:	pop    rsi
   14000266d:	pop    rbx
   14000266e:	pop    rbp
   14000266f:	ret    
   140002670:	mov    QWORD PTR [rsp+0x8],rbx
   140002675:	push   rdi
   140002676:	sub    rsp,0x20
   14000267a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000267e:	mov    rdi,rcx
   140002681:	sub    rdx,0x18
   140002685:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000268a:	jg     0x140002695
   14000268c:	mov    rcx,QWORD PTR [rdx]
   14000268f:	mov    rax,QWORD PTR [rcx]
   140002692:	call   QWORD PTR [rax+0x8]
   140002695:	mov    rdx,QWORD PTR [rdi]
   140002698:	sub    rdx,0x18
   14000269c:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400026a1:	jg     0x1400026ac
   1400026a3:	mov    rcx,QWORD PTR [rdx]
   1400026a6:	mov    rax,QWORD PTR [rcx]
   1400026a9:	call   QWORD PTR [rax+0x8]
   1400026ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400026b1:	add    rsp,0x20
   1400026b5:	pop    rdi
   1400026b6:	ret    
   1400026b7:	int3   
   1400026b8:	int3   
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	mov    QWORD PTR [rsp+0x8],rcx
   1400026c5:	push   rbx
   1400026c6:	sub    rsp,0x60
   1400026ca:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400026d3:	mov    rbx,rcx
   1400026d6:	xor    eax,eax
   1400026d8:	mov    DWORD PTR [rsp+0x20],eax
   1400026dc:	mov    QWORD PTR [rcx],rax
   1400026df:	mov    QWORD PTR [rcx+0x8],rax
   1400026e3:	call   0x140004170
   1400026e8:	mov    QWORD PTR [rbx],rax
   1400026eb:	mov    DWORD PTR [rsp+0x20],0x1
   1400026f3:	mov    edx,0x20019
   1400026f8:	mov    rcx,rbx
   1400026fb:	call   0x140002270
   140002700:	xor    eax,eax
   140002702:	mov    QWORD PTR [rsp+0x30],rax
   140002707:	mov    QWORD PTR [rsp+0x38],rax
   14000270c:	mov    QWORD PTR [rsp+0x40],rax
   140002711:	mov    QWORD PTR [rsp+0x48],rax
   140002716:	mov    QWORD PTR [rsp+0x50],rax
   14000271b:	mov    QWORD PTR [rsp+0x58],rax
   140002720:	lea    rcx,[rsp+0x30]
   140002725:	call   QWORD PTR [rip+0x39c5]        # 0x1400060f0
   14000272b:	mov    rax,QWORD PTR [rsp+0x30]
   140002730:	cmp    ax,0x9
   140002734:	je     0x14000273c
   140002736:	cmp    ax,0x6
   14000273a:	jne    0x140002749
   14000273c:	mov    edx,0x20219
   140002741:	mov    rcx,rbx
   140002744:	call   0x140002270
   140002749:	mov    rax,rbx
   14000274c:	add    rsp,0x60
   140002750:	pop    rbx
   140002751:	ret    
   140002752:	int3   
   140002753:	int3   
   140002754:	int3   
   140002755:	int3   
   140002756:	int3   
   140002757:	int3   
   140002758:	int3   
   140002759:	int3   
   14000275a:	int3   
   14000275b:	int3   
   14000275c:	int3   
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	rex push rbx
   140002762:	sub    rsp,0x20
   140002766:	mov    r8,QWORD PTR [rcx]
   140002769:	lea    rdx,[rsp+0x30]
   14000276e:	mov    rbx,rcx
   140002771:	mov    r9,r8
   140002774:	mov    r8,QWORD PTR [r8]
   140002777:	call   0x140003720
   14000277c:	mov    rcx,QWORD PTR [rbx]
   14000277f:	add    rsp,0x20
   140002783:	pop    rbx
   140002784:	rex.W jmp QWORD PTR [rip+0x3afd]        # 0x140006288
   14000278b:	int3   
   14000278c:	int3   
   14000278d:	int3   
   14000278e:	int3   
   14000278f:	int3   
   140002790:	rex push rbp
   140002792:	push   rbx
   140002793:	push   rsi
   140002794:	push   rdi
   140002795:	push   r14
   140002797:	mov    rbp,rsp
   14000279a:	sub    rsp,0x60
   14000279e:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   1400027a6:	mov    r14,rcx
   1400027a9:	xor    sil,sil
   1400027ac:	lea    rcx,[rbp-0x18]
   1400027b0:	call   0x1400026c0
   1400027b5:	nop
   1400027b6:	cmp    QWORD PTR [rbp-0x10],0x0
   1400027bb:	je     0x140002b81
   1400027c1:	lea    rcx,[rbp-0x40]
   1400027c5:	call   0x140001770
   1400027ca:	nop
   1400027cb:	mov    rax,QWORD PTR [rbp-0x40]
   1400027cf:	cmp    DWORD PTR [rax-0x10],0x0
   1400027d3:	je     0x1400028a6
   1400027d9:	mov    r11,QWORD PTR [rbp-0x18]
   1400027dd:	mov    r8,QWORD PTR [r11+0x8]
   1400027e1:	mov    r10,r11
   1400027e4:	cmp    BYTE PTR [r8+0x19],sil
   1400027e8:	jne    0x14000287f
   1400027ee:	xchg   ax,ax
   1400027f0:	mov    rcx,QWORD PTR [r8+0x20]
   1400027f4:	mov    r9,rax
   1400027f7:	sub    r9,rcx
   1400027fa:	nop    WORD PTR [rax+rax*1+0x0]
   140002800:	movzx  edx,WORD PTR [rcx]
   140002803:	cmp    dx,WORD PTR [rcx+r9*1]
   140002808:	jne    0x140002817
   14000280a:	add    rcx,0x2
   14000280e:	test   dx,dx
   140002811:	jne    0x140002800
   140002813:	xor    ecx,ecx
   140002815:	jmp    0x14000281c
   140002817:	sbb    ecx,ecx
   140002819:	or     ecx,0x1
   14000281c:	test   ecx,ecx
   14000281e:	jns    0x140002826
   140002820:	mov    r8,QWORD PTR [r8+0x10]
   140002824:	jmp    0x14000282c
   140002826:	mov    r10,r8
   140002829:	mov    r8,QWORD PTR [r8]
   14000282c:	cmp    BYTE PTR [r8+0x19],0x0
   140002831:	je     0x1400027f0
   140002833:	cmp    r10,r11
   140002836:	je     0x14000287f
   140002838:	mov    rdx,QWORD PTR [r10+0x20]
   14000283c:	xor    ecx,ecx
   14000283e:	test   rdx,rdx
   140002841:	setne  cl
   140002844:	test   ecx,ecx
   140002846:	jne    0x140002853
   140002848:	mov    ecx,0x80004005
   14000284d:	call   0x140001050
   140002852:	int3   
   140002853:	sub    rdx,rax
   140002856:	movzx  ecx,WORD PTR [rax]
   140002859:	cmp    cx,WORD PTR [rax+rdx*1]
   14000285d:	jne    0x14000286c
   14000285f:	add    rax,0x2
   140002863:	test   cx,cx
   140002866:	jne    0x140002856
   140002868:	xor    eax,eax
   14000286a:	jmp    0x140002871
   14000286c:	sbb    eax,eax
   14000286e:	or     eax,0x1
   140002871:	test   eax,eax
   140002873:	js     0x14000287f
   140002875:	mov    QWORD PTR [rbp-0x38],r10
   140002879:	lea    rcx,[rbp-0x38]
   14000287d:	jmp    0x140002887
   14000287f:	mov    QWORD PTR [rbp-0x30],r11
   140002883:	lea    rcx,[rbp-0x30]
   140002887:	mov    rcx,QWORD PTR [rcx]
   14000288a:	cmp    rcx,r11
   14000288d:	je     0x1400028a6
   14000288f:	add    rcx,0x28
   140002893:	mov    rdx,r14
   140002896:	call   0x140002c20
   14000289b:	movzx  esi,al
   14000289e:	test   al,al
   1400028a0:	jne    0x140002b68
   1400028a6:	call   0x1400012d0
   1400028ab:	mov    rdx,rax
   1400028ae:	xor    ecx,ecx
   1400028b0:	test   rax,rax
   1400028b3:	setne  cl
   1400028b6:	test   ecx,ecx
   1400028b8:	jne    0x1400028c5
   1400028ba:	mov    ecx,0x80004005
   1400028bf:	call   0x140001050
   1400028c4:	int3   
   1400028c5:	mov    rax,QWORD PTR [rax]
   1400028c8:	mov    rcx,rdx
   1400028cb:	call   QWORD PTR [rax+0x18]
   1400028ce:	lea    rdi,[rax+0x18]
   1400028d2:	mov    QWORD PTR [rbp+0x38],rdi
   1400028d6:	call   0x1400012d0
   1400028db:	mov    rdx,rax
   1400028de:	xor    ecx,ecx
   1400028e0:	test   rax,rax
   1400028e3:	setne  cl
   1400028e6:	test   ecx,ecx
   1400028e8:	jne    0x1400028f5
   1400028ea:	mov    ecx,0x80004005
   1400028ef:	call   0x140001050
   1400028f4:	int3   
   1400028f5:	mov    rax,QWORD PTR [rax]
   1400028f8:	mov    rcx,rdx
   1400028fb:	call   QWORD PTR [rax+0x18]
   1400028fe:	add    rax,0x18
   140002902:	mov    QWORD PTR [rbp+0x40],rax
   140002906:	call   0x1400012d0
   14000290b:	mov    rdx,rax
   14000290e:	xor    ecx,ecx
   140002910:	test   rax,rax
   140002913:	setne  cl
   140002916:	test   ecx,ecx
   140002918:	jne    0x140002925
   14000291a:	mov    ecx,0x80004005
   14000291f:	call   0x140001050
   140002924:	int3   
   140002925:	mov    rax,QWORD PTR [rax]
   140002928:	mov    rcx,rdx
   14000292b:	call   QWORD PTR [rax+0x18]
   14000292e:	add    rax,0x18
   140002932:	mov    QWORD PTR [rbp+0x48],rax
   140002936:	mov    rax,QWORD PTR [rbp-0x18]
   14000293a:	mov    rbx,QWORD PTR [rax]
   14000293d:	cmp    rbx,rax
   140002940:	je     0x140002b1d
   140002946:	cmp    DWORD PTR [rdi-0x10],0x0
   14000294a:	je     0x140002961
   14000294c:	lea    rdx,[rbx+0x20]
   140002950:	lea    rcx,[rbp+0x38]
   140002954:	call   0x140001e00
   140002959:	test   eax,eax
   14000295b:	jns    0x140002ab6
   140002961:	call   0x1400012d0
   140002966:	xor    ecx,ecx
   140002968:	test   rax,rax
   14000296b:	setne  cl
   14000296e:	test   ecx,ecx
   140002970:	je     0x140002b12
   140002976:	mov    rdx,QWORD PTR [rax]
   140002979:	mov    rcx,rax
   14000297c:	call   QWORD PTR [rdx+0x18]
   14000297f:	add    rax,0x18
   140002983:	mov    QWORD PTR [rbp-0x28],rax
   140002987:	lea    rcx,[rbx+0x28]
   14000298b:	lea    rdx,[rbp+0x48]
   14000298f:	call   0x140002c20
   140002994:	test   al,al
   140002996:	je     0x140002a9a
   14000299c:	mov    rdx,QWORD PTR [rbx+0x20]
   1400029a0:	lea    rcx,[rdx-0x18]
   1400029a4:	add    rdi,0xffffffffffffffe8
   1400029a8:	cmp    rcx,rdi
   1400029ab:	je     0x1400029ee
   1400029ad:	cmp    DWORD PTR [rdi+0x10],0x0
   1400029b1:	jl     0x1400029e1
   1400029b3:	mov    rax,QWORD PTR [rdi]
   1400029b6:	cmp    QWORD PTR [rcx],rax
   1400029b9:	jne    0x1400029e1
   1400029bb:	call   0x1400035a0
   1400029c0:	mov    rsi,rax
   1400029c3:	lock add DWORD PTR [rdi+0x10],0xffffffff
   1400029c8:	jg     0x1400029d7
   1400029ca:	mov    rcx,QWORD PTR [rdi]
   1400029cd:	mov    r8,QWORD PTR [rcx]
   1400029d0:	mov    rdx,rdi
   1400029d3:	call   QWORD PTR [r8+0x8]
   1400029d7:	lea    rax,[rsi+0x18]
   1400029db:	mov    QWORD PTR [rbp+0x38],rax
   1400029df:	jmp    0x1400029ee
   1400029e1:	mov    r8d,DWORD PTR [rdx-0x10]
   1400029e5:	lea    rcx,[rbp+0x38]
   1400029e9:	call   0x140003430
   1400029ee:	mov    rdx,QWORD PTR [rbx+0x28]
   1400029f2:	lea    rcx,[rdx-0x18]
   1400029f6:	mov    rdi,QWORD PTR [rbp+0x40]
   1400029fa:	add    rdi,0xffffffffffffffe8
   1400029fe:	cmp    rcx,rdi
   140002a01:	je     0x140002a44
   140002a03:	cmp    DWORD PTR [rdi+0x10],0x0
   140002a07:	jl     0x140002a37
   140002a09:	mov    rax,QWORD PTR [rdi]
   140002a0c:	cmp    QWORD PTR [rcx],rax
   140002a0f:	jne    0x140002a37
   140002a11:	call   0x1400035a0
   140002a16:	mov    rsi,rax
   140002a19:	lock add DWORD PTR [rdi+0x10],0xffffffff
   140002a1e:	jg     0x140002a2d
   140002a20:	mov    rcx,QWORD PTR [rdi]
   140002a23:	mov    r8,QWORD PTR [rcx]
   140002a26:	mov    rdx,rdi
   140002a29:	call   QWORD PTR [r8+0x8]
   140002a2d:	lea    rax,[rsi+0x18]
   140002a31:	mov    QWORD PTR [rbp+0x40],rax
   140002a35:	jmp    0x140002a44
   140002a37:	mov    r8d,DWORD PTR [rdx-0x10]
   140002a3b:	lea    rcx,[rbp+0x40]
   140002a3f:	call   0x140003430
   140002a44:	mov    rdx,QWORD PTR [rbp+0x48]
   140002a48:	lea    rcx,[rdx-0x18]
   140002a4c:	mov    rdi,QWORD PTR [r14]
   140002a4f:	sub    rdi,0x18
   140002a53:	cmp    rcx,rdi
   140002a56:	je     0x140002a97
   140002a58:	cmp    DWORD PTR [rdi+0x10],0x0
   140002a5c:	jl     0x140002a8b
   140002a5e:	mov    rax,QWORD PTR [rdi]
   140002a61:	cmp    QWORD PTR [rcx],rax
   140002a64:	jne    0x140002a8b
   140002a66:	call   0x1400035a0
   140002a6b:	mov    rsi,rax
   140002a6e:	lock add DWORD PTR [rdi+0x10],0xffffffff
   140002a73:	jg     0x140002a82
   140002a75:	mov    rcx,QWORD PTR [rdi]
   140002a78:	mov    r8,QWORD PTR [rcx]
   140002a7b:	mov    rdx,rdi
   140002a7e:	call   QWORD PTR [r8+0x8]
   140002a82:	lea    rax,[rsi+0x18]
   140002a86:	mov    QWORD PTR [r14],rax
   140002a89:	jmp    0x140002a97
   140002a8b:	mov    r8d,DWORD PTR [rdx-0x10]
   140002a8f:	mov    rcx,r14
   140002a92:	call   0x140003430
   140002a97:	mov    sil,0x1
   140002a9a:	mov    rdx,QWORD PTR [rbp-0x28]
   140002a9e:	add    rdx,0xffffffffffffffe8
   140002aa2:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002aa7:	jg     0x140002ab2
   140002aa9:	mov    rcx,QWORD PTR [rdx]
   140002aac:	mov    rax,QWORD PTR [rcx]
   140002aaf:	call   QWORD PTR [rax+0x8]
   140002ab2:	mov    rdi,QWORD PTR [rbp+0x38]
   140002ab6:	cmp    BYTE PTR [rbx+0x19],0x0
   140002aba:	jne    0x140002b06
   140002abc:	mov    rax,QWORD PTR [rbx+0x10]
   140002ac0:	cmp    BYTE PTR [rax+0x19],0x0
   140002ac4:	jne    0x140002ae0
   140002ac6:	mov    rbx,rax
   140002ac9:	mov    rax,QWORD PTR [rax]
   140002acc:	cmp    BYTE PTR [rax+0x19],0x0
   140002ad0:	jne    0x140002b06
   140002ad2:	mov    rbx,rax
   140002ad5:	mov    rax,QWORD PTR [rax]
   140002ad8:	cmp    BYTE PTR [rax+0x19],0x0
   140002adc:	je     0x140002ad2
   140002ade:	jmp    0x140002b06
   140002ae0:	mov    rax,QWORD PTR [rbx+0x8]
   140002ae4:	cmp    BYTE PTR [rax+0x19],0x0
   140002ae8:	jne    0x140002b03
   140002aea:	nop    WORD PTR [rax+rax*1+0x0]
   140002af0:	cmp    rbx,QWORD PTR [rax+0x10]
   140002af4:	jne    0x140002b03
   140002af6:	mov    rbx,rax
   140002af9:	mov    rax,QWORD PTR [rax+0x8]
   140002afd:	cmp    BYTE PTR [rax+0x19],0x0
   140002b01:	je     0x140002af0
   140002b03:	mov    rbx,rax
   140002b06:	cmp    rbx,QWORD PTR [rbp-0x18]
   140002b0a:	jne    0x140002946
   140002b10:	jmp    0x140002b1d
   140002b12:	mov    ecx,0x80004005
   140002b17:	call   0x140001050
   140002b1c:	nop
   140002b1d:	mov    rdx,QWORD PTR [rbp+0x48]
   140002b21:	add    rdx,0xffffffffffffffe8
   140002b25:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002b2a:	jg     0x140002b36
   140002b2c:	mov    rcx,QWORD PTR [rdx]
   140002b2f:	mov    rax,QWORD PTR [rcx]
   140002b32:	call   QWORD PTR [rax+0x8]
   140002b35:	nop
   140002b36:	mov    rdx,QWORD PTR [rbp+0x40]
   140002b3a:	add    rdx,0xffffffffffffffe8
   140002b3e:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002b43:	jg     0x140002b4f
   140002b45:	mov    rcx,QWORD PTR [rdx]
   140002b48:	mov    rax,QWORD PTR [rcx]
   140002b4b:	call   QWORD PTR [rax+0x8]
   140002b4e:	nop
   140002b4f:	mov    rdx,QWORD PTR [rbp+0x38]
   140002b53:	add    rdx,0xffffffffffffffe8
   140002b57:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002b5c:	jg     0x140002b68
   140002b5e:	mov    rcx,QWORD PTR [rdx]
   140002b61:	mov    rax,QWORD PTR [rcx]
   140002b64:	call   QWORD PTR [rax+0x8]
   140002b67:	nop
   140002b68:	mov    rdx,QWORD PTR [rbp-0x40]
   140002b6c:	add    rdx,0xffffffffffffffe8
   140002b70:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002b75:	jg     0x140002b81
   140002b77:	mov    rcx,QWORD PTR [rdx]
   140002b7a:	mov    rax,QWORD PTR [rcx]
   140002b7d:	call   QWORD PTR [rax+0x8]
   140002b80:	nop
   140002b81:	mov    rax,QWORD PTR [rbp-0x18]
   140002b85:	mov    rbx,QWORD PTR [rax+0x8]
   140002b89:	mov    rdi,rbx
   140002b8c:	cmp    BYTE PTR [rbx+0x19],0x0
   140002b90:	jne    0x140002be8
   140002b92:	mov    rdx,QWORD PTR [rdi+0x10]
   140002b96:	lea    rcx,[rbp-0x18]
   140002b9a:	call   0x140004020
   140002b9f:	mov    rdi,QWORD PTR [rdi]
   140002ba2:	mov    rdx,QWORD PTR [rbx+0x28]
   140002ba6:	sub    rdx,0x18
   140002baa:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002baf:	jg     0x140002bba
   140002bb1:	mov    rcx,QWORD PTR [rdx]
   140002bb4:	mov    rax,QWORD PTR [rcx]
   140002bb7:	call   QWORD PTR [rax+0x8]
   140002bba:	mov    rdx,QWORD PTR [rbx+0x20]
   140002bbe:	sub    rdx,0x18
   140002bc2:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002bc7:	jg     0x140002bd2
   140002bc9:	mov    rcx,QWORD PTR [rdx]
   140002bcc:	mov    rax,QWORD PTR [rcx]
   140002bcf:	call   QWORD PTR [rax+0x8]
   140002bd2:	mov    rcx,rbx
   140002bd5:	call   QWORD PTR [rip+0x36ad]        # 0x140006288
   140002bdb:	mov    rbx,rdi
   140002bde:	cmp    BYTE PTR [rdi+0x19],0x0
   140002be2:	je     0x140002b92
   140002be4:	mov    rax,QWORD PTR [rbp-0x18]
   140002be8:	mov    QWORD PTR [rax+0x8],rax
   140002bec:	mov    rax,QWORD PTR [rbp-0x18]
   140002bf0:	mov    QWORD PTR [rax],rax
   140002bf3:	mov    rax,QWORD PTR [rbp-0x18]
   140002bf7:	mov    QWORD PTR [rax+0x10],rax
   140002bfb:	mov    QWORD PTR [rbp-0x10],0x0
   140002c03:	mov    rcx,QWORD PTR [rbp-0x18]
   140002c07:	call   QWORD PTR [rip+0x367b]        # 0x140006288
   140002c0d:	movzx  eax,sil
   140002c11:	add    rsp,0x60
   140002c15:	pop    r14
   140002c17:	pop    rdi
   140002c18:	pop    rsi
   140002c19:	pop    rbx
   140002c1a:	pop    rbp
   140002c1b:	ret    
   140002c1c:	int3   
   140002c1d:	int3   
   140002c1e:	int3   
   140002c1f:	int3   
   140002c20:	rex push rsi
   140002c22:	push   rdi
   140002c23:	push   r14
   140002c25:	sub    rsp,0x4d0
   140002c2c:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   140002c35:	mov    QWORD PTR [rsp+0x500],rbx
   140002c3d:	mov    rax,QWORD PTR [rip+0x63bc]        # 0x140009000
   140002c44:	xor    rax,rsp
   140002c47:	mov    QWORD PTR [rsp+0x4c0],rax
   140002c4f:	mov    r14,rdx
   140002c52:	mov    rbx,rcx
   140002c55:	xor    edx,edx
   140002c57:	mov    r8d,0x208
   140002c5d:	lea    rcx,[rsp+0xa0]
   140002c65:	call   0x140005022
   140002c6a:	xor    edx,edx
   140002c6c:	mov    r8d,0x208
   140002c72:	lea    rcx,[rsp+0x2b0]
   140002c7a:	call   0x140005022
   140002c7f:	xor    edi,edi
   140002c81:	mov    QWORD PTR [rsp+0x40],rdi
   140002c86:	mov    QWORD PTR [rsp+0x38],rdi
   140002c8b:	mov    QWORD PTR [rsp+0x30],rdi
   140002c90:	mov    QWORD PTR [rsp+0x28],rdi
   140002c95:	mov    QWORD PTR [rsp+0x20],0x104
   140002c9e:	lea    r9,[rsp+0x2b0]
   140002ca6:	mov    r8d,0x104
   140002cac:	lea    rdx,[rsp+0xa0]
   140002cb4:	mov    rcx,QWORD PTR [rbx]
   140002cb7:	call   QWORD PTR [rip+0x34a3]        # 0x140006160
   140002cbd:	test   eax,eax
   140002cbf:	jne    0x140002e09
   140002cc5:	lea    rcx,[rsp+0xa0]
   140002ccd:	or     rsi,0xffffffffffffffff
   140002cd1:	mov    rax,rsi
   140002cd4:	inc    rax
   140002cd7:	cmp    WORD PTR [rcx+rax*2],di
   140002cdb:	jne    0x140002cd4
   140002cdd:	mov    r8d,eax
   140002ce0:	lea    rdx,[rsp+0xa0]
   140002ce8:	mov    rcx,r14
   140002ceb:	call   0x140003430
   140002cf0:	lea    rcx,[rsp+0x2b0]
   140002cf8:	mov    rax,rsi
   140002cfb:	nop    DWORD PTR [rax+rax*1+0x0]
   140002d00:	inc    rax
   140002d03:	cmp    WORD PTR [rcx+rax*2],di
   140002d07:	jne    0x140002d00
   140002d09:	mov    r8d,eax
   140002d0c:	lea    rdx,[rsp+0x2b0]
   140002d14:	mov    rcx,r14
   140002d17:	call   0x140003a20
   140002d1c:	lea    rax,[rip+0x39b5]        # 0x1400066d8
   140002d23:	mov    QWORD PTR [rsp+0x58],rax
   140002d28:	lea    rax,[rip+0x39c9]        # 0x1400066f8
   140002d2f:	mov    QWORD PTR [rsp+0x60],rax
   140002d34:	lea    rbx,[rsp+0x58]
   140002d39:	nop    DWORD PTR [rax+0x0]
   140002d40:	mov    r8,QWORD PTR [rbx]
   140002d43:	mov    rdx,r14
   140002d46:	lea    rcx,[rsp+0x50]
   140002d4b:	call   0x140002fe0
   140002d50:	nop
   140002d51:	lea    rdx,[rsp+0x70]
   140002d56:	mov    rcx,QWORD PTR [rsp+0x50]
   140002d5b:	call   QWORD PTR [rip+0x3407]        # 0x140006168
   140002d61:	test   eax,eax
   140002d63:	je     0x140002d94
   140002d65:	mov    rdx,QWORD PTR [rsp+0x50]
   140002d6a:	add    rdx,0xffffffffffffffe8
   140002d6e:	mov    eax,esi
   140002d70:	lock xadd DWORD PTR [rdx+0x10],eax
   140002d75:	dec    eax
   140002d77:	jg     0x140002d83
   140002d79:	mov    rcx,QWORD PTR [rdx]
   140002d7c:	mov    r8,QWORD PTR [rcx]
   140002d7f:	call   QWORD PTR [r8+0x8]
   140002d83:	inc    edi
   140002d85:	add    rbx,0x8
   140002d89:	movsxd rcx,edi
   140002d8c:	cmp    rcx,0x2
   140002d90:	jb     0x140002d40
   140002d92:	jmp    0x140002e09
   140002d94:	mov    rax,QWORD PTR [rsp+0x50]
   140002d99:	lea    rcx,[rax-0x18]
   140002d9d:	mov    rbx,QWORD PTR [r14]
   140002da0:	sub    rbx,0x18
   140002da4:	cmp    rcx,rbx
   140002da7:	je     0x140002df0
   140002da9:	cmp    DWORD PTR [rbx+0x10],0x0
   140002dad:	jl     0x140002ddc
   140002daf:	mov    rdx,QWORD PTR [rbx]
   140002db2:	cmp    QWORD PTR [rcx],rdx
   140002db5:	jne    0x140002ddc
   140002db7:	call   0x1400035a0
   140002dbc:	mov    rdi,rax
   140002dbf:	lock add DWORD PTR [rbx+0x10],0xffffffff
   140002dc4:	jg     0x140002dd3
   140002dc6:	mov    rcx,QWORD PTR [rbx]
   140002dc9:	mov    r8,QWORD PTR [rcx]
   140002dcc:	mov    rdx,rbx
   140002dcf:	call   QWORD PTR [r8+0x8]
   140002dd3:	lea    rax,[rdi+0x18]
   140002dd7:	mov    QWORD PTR [r14],rax
   140002dda:	jmp    0x140002deb
   140002ddc:	mov    r8d,DWORD PTR [rax-0x10]
   140002de0:	mov    rdx,rax
   140002de3:	mov    rcx,r14
   140002de6:	call   0x140003430
   140002deb:	mov    rax,QWORD PTR [rsp+0x50]
   140002df0:	lea    rdx,[rax-0x18]
   140002df4:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002df9:	jg     0x140002e05
   140002dfb:	mov    rcx,QWORD PTR [rdx]
   140002dfe:	mov    r8,QWORD PTR [rcx]
   140002e01:	call   QWORD PTR [r8+0x8]
   140002e05:	mov    al,0x1
   140002e07:	jmp    0x140002e0b
   140002e09:	xor    al,al
   140002e0b:	mov    rcx,QWORD PTR [rsp+0x4c0]
   140002e13:	xor    rcx,rsp
   140002e16:	call   0x140004bc0
   140002e1b:	mov    rbx,QWORD PTR [rsp+0x500]
   140002e23:	add    rsp,0x4d0
   140002e2a:	pop    r14
   140002e2c:	pop    rdi
   140002e2d:	pop    rsi
   140002e2e:	ret    
   140002e2f:	int3   
   140002e30:	mov    rdx,QWORD PTR [rcx]
   140002e33:	sub    rdx,0x18
   140002e37:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140002e3c:	jg     0x140002e48
   140002e3e:	mov    rcx,QWORD PTR [rdx]
   140002e41:	mov    rax,QWORD PTR [rcx]
   140002e44:	rex.W jmp QWORD PTR [rax+0x8]
   140002e48:	ret    
   140002e49:	int3   
   140002e4a:	int3   
   140002e4b:	int3   
   140002e4c:	int3   
   140002e4d:	int3   
   140002e4e:	int3   
   140002e4f:	int3   
   140002e50:	rex push rbx
   140002e52:	push   rsi
   140002e53:	push   rdi
   140002e54:	sub    rsp,0x30
   140002e58:	movsxd rax,DWORD PTR [r9]
   140002e5b:	mov    rbx,r9
   140002e5e:	mov    rdi,rdx
   140002e61:	mov    rsi,rcx
   140002e64:	mov    DWORD PTR [rsp+0x20],0x0
   140002e6c:	test   eax,eax
   140002e6e:	js     0x140002f3e
   140002e74:	mov    rcx,QWORD PTR [rcx]
   140002e77:	mov    QWORD PTR [rsp+0x50],rbp
   140002e7c:	mov    QWORD PTR [rsp+0x58],r14
   140002e81:	lea    r14,[rcx+rax*2]
   140002e85:	movsxd rax,DWORD PTR [rcx-0x10]
   140002e89:	mov    QWORD PTR [rsp+0x60],r15
   140002e8e:	lea    rbp,[rcx+rax*2]
   140002e92:	cmp    r14,rbp
   140002e95:	jae    0x140002ee1
   140002e97:	lea    rdx,[rip+0x37ee]        # 0x14000668c
   140002e9e:	mov    rcx,r14
   140002ea1:	call   QWORD PTR [rip+0x32e1]        # 0x140006188
   140002ea7:	movsxd rcx,eax
   140002eaa:	mov    r15,rax
   140002ead:	lea    rcx,[r14+rcx*2]
   140002eb1:	cmp    rcx,rbp
   140002eb4:	jae    0x140002ee1
   140002eb6:	lea    rdx,[rip+0x37cf]        # 0x14000668c
   140002ebd:	call   QWORD PTR [rip+0x32cd]        # 0x140006190
   140002ec3:	mov    r8d,DWORD PTR [rbx]
   140002ec6:	mov    rdx,rdi
   140002ec9:	lea    ecx,[rax+0x1]
   140002ecc:	add    r8d,r15d
   140002ecf:	mov    r9d,eax
   140002ed2:	add    ecx,r8d
   140002ed5:	mov    DWORD PTR [rbx],ecx
   140002ed7:	mov    rcx,rsi
   140002eda:	call   0x140003140
   140002edf:	jmp    0x140002f24
   140002ee1:	mov    DWORD PTR [rbx],0xffffffff
   140002ee7:	mov    rax,QWORD PTR [rsi]
   140002eea:	mov    rcx,QWORD PTR [rax-0x18]
   140002eee:	test   rcx,rcx
   140002ef1:	je     0x140002f01
   140002ef3:	mov    rax,QWORD PTR [rcx]
   140002ef6:	call   QWORD PTR [rax+0x20]
   140002ef9:	mov    rcx,rax
   140002efc:	test   rax,rax
   140002eff:	jne    0x140002f12
   140002f01:	call   0x1400012d0
   140002f06:	mov    rcx,rax
   140002f09:	mov    rdx,QWORD PTR [rax]
   140002f0c:	call   QWORD PTR [rdx+0x20]
   140002f0f:	mov    rcx,rax
   140002f12:	test   rcx,rcx
   140002f15:	je     0x140002f49
   140002f17:	mov    rax,QWORD PTR [rcx]
   140002f1a:	call   QWORD PTR [rax+0x18]
   140002f1d:	add    rax,0x18
   140002f21:	mov    QWORD PTR [rdi],rax
   140002f24:	mov    r14,QWORD PTR [rsp+0x58]
   140002f29:	mov    rbp,QWORD PTR [rsp+0x50]
   140002f2e:	mov    r15,QWORD PTR [rsp+0x60]
   140002f33:	mov    rax,rdi
   140002f36:	add    rsp,0x30
   140002f3a:	pop    rdi
   140002f3b:	pop    rsi
   140002f3c:	pop    rbx
   140002f3d:	ret    
   140002f3e:	mov    ecx,0x80070057
   140002f43:	call   0x140001050
   140002f48:	int3   
   140002f49:	mov    ecx,0x80004005
   140002f4e:	call   0x140001050
   140002f53:	int3   
   140002f54:	int3   
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	mov    QWORD PTR [rsp+0x8],rbx
   140002f65:	push   rdi
   140002f66:	sub    rsp,0x20
   140002f6a:	mov    rax,QWORD PTR [rcx]
   140002f6d:	mov    rdi,rcx
   140002f70:	movsxd rbx,DWORD PTR [rax-0x10]
   140002f74:	test   ebx,ebx
   140002f76:	js     0x140002fc4
   140002f78:	mov    ecx,0x1
   140002f7d:	sub    ecx,DWORD PTR [rax-0x8]
   140002f80:	mov    eax,DWORD PTR [rax-0xc]
   140002f83:	sub    eax,ebx
   140002f85:	or     ecx,eax
   140002f87:	jge    0x140002f93
   140002f89:	mov    edx,ebx
   140002f8b:	mov    rcx,rdi
   140002f8e:	call   0x140003540
   140002f93:	mov    rcx,QWORD PTR [rdi]
   140002f96:	lea    eax,[rbx+0x1]
   140002f99:	movsxd rdx,eax
   140002f9c:	call   QWORD PTR [rip+0x31d6]        # 0x140006178
   140002fa2:	mov    rax,QWORD PTR [rdi]
   140002fa5:	cmp    ebx,DWORD PTR [rax-0xc]
   140002fa8:	jg     0x140002fcf
   140002faa:	mov    DWORD PTR [rax-0x10],ebx
   140002fad:	mov    rax,QWORD PTR [rdi]
   140002fb0:	xor    edx,edx
   140002fb2:	mov    WORD PTR [rax+rbx*2],dx
   140002fb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140002fbb:	mov    rax,rdi
   140002fbe:	add    rsp,0x20
   140002fc2:	pop    rdi
   140002fc3:	ret    
   140002fc4:	mov    ecx,0x80070057
   140002fc9:	call   0x140001050
   140002fce:	int3   
   140002fcf:	mov    ecx,0x80070057
   140002fd4:	call   0x140001050
   140002fd9:	int3   
   140002fda:	int3   
   140002fdb:	int3   
   140002fdc:	int3   
   140002fdd:	int3   
   140002fde:	int3   
   140002fdf:	int3   
   140002fe0:	mov    QWORD PTR [rsp+0x8],rcx
   140002fe5:	push   r14
   140002fe7:	sub    rsp,0x40
   140002feb:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140002ff4:	mov    QWORD PTR [rsp+0x58],rbx
   140002ff9:	mov    QWORD PTR [rsp+0x60],rsi
   140002ffe:	mov    QWORD PTR [rsp+0x68],rdi
   140003003:	mov    rdi,r8
   140003006:	mov    r14,rdx
   140003009:	mov    rsi,rcx
   14000300c:	xor    ebx,ebx
   14000300e:	mov    DWORD PTR [rsp+0x30],ebx
   140003012:	mov    rax,QWORD PTR [rdx]
   140003015:	mov    rcx,QWORD PTR [rax-0x18]
   140003019:	test   rcx,rcx
   14000301c:	je     0x14000302c
   14000301e:	mov    rax,QWORD PTR [rcx]
   140003021:	call   QWORD PTR [rax+0x20]
   140003024:	mov    rdx,rax
   140003027:	test   rax,rax
   14000302a:	jne    0x14000303d
   14000302c:	call   0x1400012d0
   140003031:	mov    rdx,QWORD PTR [rax]
   140003034:	mov    rcx,rax
   140003037:	call   QWORD PTR [rdx+0x20]
   14000303a:	mov    rdx,rax
   14000303d:	mov    ecx,ebx
   14000303f:	test   rdx,rdx
   140003042:	setne  cl
   140003045:	test   ecx,ecx
   140003047:	jne    0x140003054
   140003049:	mov    ecx,0x80004005
   14000304e:	call   0x140001050
   140003053:	int3   
   140003054:	mov    rax,QWORD PTR [rdx]
   140003057:	mov    rcx,rdx
   14000305a:	call   QWORD PTR [rax+0x18]
   14000305d:	add    rax,0x18
   140003061:	mov    QWORD PTR [rsi],rax
   140003064:	mov    DWORD PTR [rsp+0x30],0x1
   14000306c:	test   rdi,rdi
   14000306f:	je     0x14000307f
   140003071:	or     rbx,0xffffffffffffffff
   140003075:	inc    rbx
   140003078:	cmp    WORD PTR [rdi+rbx*2],0x0
   14000307d:	jne    0x140003075
   14000307f:	mov    rdx,QWORD PTR [r14]
   140003082:	mov    DWORD PTR [rsp+0x20],ebx
   140003086:	mov    r9,rdi
   140003089:	mov    r8d,DWORD PTR [rdx-0x10]
   14000308d:	mov    rcx,rsi
   140003090:	call   0x140003220
   140003095:	mov    rax,rsi
   140003098:	mov    rbx,QWORD PTR [rsp+0x58]
   14000309d:	mov    rsi,QWORD PTR [rsp+0x60]
   1400030a2:	mov    rdi,QWORD PTR [rsp+0x68]
   1400030a7:	add    rsp,0x40
   1400030ab:	pop    r14
   1400030ad:	ret    
   1400030ae:	int3   
   1400030af:	int3   
   1400030b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400030b5:	push   rdi
   1400030b6:	sub    rsp,0x20
   1400030ba:	mov    rax,QWORD PTR [rcx]
   1400030bd:	mov    rbx,rcx
   1400030c0:	cmp    DWORD PTR [rax-0x10],0x0
   1400030c4:	mov    rdi,QWORD PTR [rax-0x18]
   1400030c8:	lea    rdx,[rax-0x18]
   1400030cc:	je     0x140003110
   1400030ce:	cmp    DWORD PTR [rdx+0x10],0x0
   1400030d2:	jge    0x1400030f0
   1400030d4:	cmp    DWORD PTR [rax-0xc],0x0
   1400030d8:	jl     0x14000311b
   1400030da:	xor    ecx,ecx
   1400030dc:	mov    DWORD PTR [rax-0x10],ecx
   1400030df:	mov    rax,QWORD PTR [rbx]
   1400030e2:	mov    WORD PTR [rax],cx
   1400030e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400030ea:	add    rsp,0x20
   1400030ee:	pop    rdi
   1400030ef:	ret    
   1400030f0:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400030f5:	jg     0x140003100
   1400030f7:	mov    rcx,QWORD PTR [rdx]
   1400030fa:	mov    rax,QWORD PTR [rcx]
   1400030fd:	call   QWORD PTR [rax+0x8]
   140003100:	mov    rax,QWORD PTR [rdi]
   140003103:	mov    rcx,rdi
   140003106:	call   QWORD PTR [rax+0x18]
   140003109:	add    rax,0x18
   14000310d:	mov    QWORD PTR [rbx],rax
   140003110:	mov    rbx,QWORD PTR [rsp+0x30]
   140003115:	add    rsp,0x20
   140003119:	pop    rdi
   14000311a:	ret    
   14000311b:	mov    ecx,0x80070057
   140003120:	call   0x140001050
   140003125:	int3   
   140003126:	int3   
   140003127:	int3   
   140003128:	int3   
   140003129:	int3   
   14000312a:	int3   
   14000312b:	int3   
   14000312c:	int3   
   14000312d:	int3   
   14000312e:	int3   
   14000312f:	int3   
   140003130:	jmp    0x1400033b0
   140003135:	int3   
   140003136:	int3   
   140003137:	int3   
   140003138:	int3   
   140003139:	int3   
   14000313a:	int3   
   14000313b:	int3   
   14000313c:	int3   
   14000313d:	int3   
   14000313e:	int3   
   14000313f:	int3   
   140003140:	mov    QWORD PTR [rsp+0x8],rbx
   140003145:	mov    QWORD PTR [rsp+0x10],rsi
   14000314a:	mov    QWORD PTR [rsp+0x18],rdi
   14000314f:	push   r14
   140003151:	sub    rsp,0x30
   140003155:	mov    edi,r8d
   140003158:	xor    r8d,r8d
   14000315b:	mov    ebx,r9d
   14000315e:	test   edi,edi
   140003160:	mov    eax,0x7fffffff
   140003165:	mov    rsi,rdx
   140003168:	cmovs  edi,r8d
   14000316c:	test   r9d,r9d
   14000316f:	mov    r14,rcx
   140003172:	cmovs  ebx,r8d
   140003176:	sub    eax,edi
   140003178:	mov    DWORD PTR [rsp+0x20],r8d
   14000317d:	cmp    eax,ebx
   14000317f:	jl     0x140003209
   140003185:	mov    rdx,QWORD PTR [rcx]
   140003188:	lea    eax,[rdi+rbx*1]
   14000318b:	mov    ecx,DWORD PTR [rdx-0x10]
   14000318e:	cmp    eax,ecx
   140003190:	jle    0x140003196
   140003192:	mov    ebx,ecx
   140003194:	sub    ebx,edi
   140003196:	cmp    edi,ecx
   140003198:	cmovg  ebx,r8d
   14000319c:	test   edi,edi
   14000319e:	jne    0x1400031cd
   1400031a0:	cmp    ebx,ecx
   1400031a2:	jne    0x1400031cd
   1400031a4:	lea    rcx,[rdx-0x18]
   1400031a8:	call   0x1400035a0
   1400031ad:	add    rax,0x18
   1400031b1:	mov    QWORD PTR [rsi],rax
   1400031b4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400031b9:	mov    rdi,QWORD PTR [rsp+0x50]
   1400031be:	mov    rax,rsi
   1400031c1:	mov    rsi,QWORD PTR [rsp+0x48]
   1400031c6:	add    rsp,0x30
   1400031ca:	pop    r14
   1400031cc:	ret    
   1400031cd:	mov    rcx,QWORD PTR [rdx-0x18]
   1400031d1:	test   rcx,rcx
   1400031d4:	je     0x1400031e1
   1400031d6:	mov    rax,QWORD PTR [rcx]
   1400031d9:	call   QWORD PTR [rax+0x20]
   1400031dc:	test   rax,rax
   1400031df:	jne    0x1400031ef
   1400031e1:	call   0x1400012d0
   1400031e6:	mov    rcx,rax
   1400031e9:	mov    rdx,QWORD PTR [rax]
   1400031ec:	call   QWORD PTR [rdx+0x20]
   1400031ef:	mov    rcx,QWORD PTR [r14]
   1400031f2:	movsxd rdx,edi
   1400031f5:	mov    r9,rax
   1400031f8:	lea    rdx,[rcx+rdx*2]
   1400031fc:	mov    r8d,ebx
   1400031ff:	mov    rcx,rsi
   140003202:	call   0x140003970
   140003207:	jmp    0x1400031b4
   140003209:	mov    ecx,0x80070216
   14000320e:	call   0x140001050
   140003213:	int3   
   140003214:	int3   
   140003215:	int3   
   140003216:	int3   
   140003217:	int3   
   140003218:	int3   
   140003219:	int3   
   14000321a:	int3   
   14000321b:	int3   
   14000321c:	int3   
   14000321d:	int3   
   14000321e:	int3   
   14000321f:	int3   
   140003220:	mov    QWORD PTR [rsp+0x10],rbx
   140003225:	mov    QWORD PTR [rsp+0x18],rbp
   14000322a:	mov    QWORD PTR [rsp+0x20],rsi
   14000322f:	push   r12
   140003231:	push   r14
   140003233:	push   r15
   140003235:	sub    rsp,0x20
   140003239:	movsxd rbp,DWORD PTR [rsp+0x60]
   14000323e:	movsxd rbx,r8d
   140003241:	mov    r15,r9
   140003244:	lea    esi,[rbx+rbp*1]
   140003247:	mov    r12,rdx
   14000324a:	mov    r14,rcx
   14000324d:	test   esi,esi
   14000324f:	js     0x1400032dc
   140003255:	mov    rax,QWORD PTR [rcx]
   140003258:	mov    ecx,0x1
   14000325d:	mov    QWORD PTR [rsp+0x40],rdi
   140003262:	sub    ecx,DWORD PTR [rax-0x8]
   140003265:	mov    eax,DWORD PTR [rax-0xc]
   140003268:	sub    eax,esi
   14000326a:	or     ecx,eax
   14000326c:	jge    0x140003278
   14000326e:	mov    edx,esi
   140003270:	mov    rcx,r14
   140003273:	call   0x140003540
   140003278:	mov    rdi,QWORD PTR [r14]
   14000327b:	add    rbx,rbx
   14000327e:	mov    r8,r12
   140003281:	mov    rcx,rdi
   140003284:	mov    r9,rbx
   140003287:	mov    rdx,rbx
   14000328a:	call   QWORD PTR [rip+0x2ef0]        # 0x140006180
   140003290:	mov    rdx,rbp
   140003293:	lea    rcx,[rbx+rdi*1]
   140003297:	add    rdx,rdx
   14000329a:	mov    r8,r15
   14000329d:	mov    r9,rdx
   1400032a0:	call   QWORD PTR [rip+0x2eda]        # 0x140006180
   1400032a6:	mov    rax,QWORD PTR [r14]
   1400032a9:	mov    rdi,QWORD PTR [rsp+0x40]
   1400032ae:	cmp    esi,DWORD PTR [rax-0xc]
   1400032b1:	jg     0x1400032e7
   1400032b3:	mov    rbx,QWORD PTR [rsp+0x48]
   1400032b8:	mov    rbp,QWORD PTR [rsp+0x50]
   1400032bd:	mov    DWORD PTR [rax-0x10],esi
   1400032c0:	mov    rax,QWORD PTR [r14]
   1400032c3:	movsxd rcx,esi
   1400032c6:	mov    rsi,QWORD PTR [rsp+0x58]
   1400032cb:	xor    edx,edx
   1400032cd:	mov    WORD PTR [rax+rcx*2],dx
   1400032d1:	add    rsp,0x20
   1400032d5:	pop    r15
   1400032d7:	pop    r14
   1400032d9:	pop    r12
   1400032db:	ret    
   1400032dc:	mov    ecx,0x80070057
   1400032e1:	call   0x140001050
   1400032e6:	int3   
   1400032e7:	mov    ecx,0x80070057
   1400032ec:	call   0x140001050
   1400032f1:	int3   
   1400032f2:	int3   
   1400032f3:	int3   
   1400032f4:	int3   
   1400032f5:	int3   
   1400032f6:	int3   
   1400032f7:	int3   
   1400032f8:	int3   
   1400032f9:	int3   
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	int3   
   1400032fd:	int3   
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	mov    QWORD PTR [rsp+0x8],rbx
   140003305:	mov    QWORD PTR [rsp+0x10],rbp
   14000330a:	mov    QWORD PTR [rsp+0x18],rsi
   14000330f:	mov    QWORD PTR [rsp+0x20],rdi
   140003314:	push   r14
   140003316:	sub    rsp,0x20
   14000331a:	mov    rbx,QWORD PTR [rcx]
   14000331d:	mov    rsi,rcx
   140003320:	mov    edi,edx
   140003322:	mov    rcx,QWORD PTR [rbx-0x18]
   140003326:	mov    ebp,DWORD PTR [rbx-0x10]
   140003329:	mov    rax,QWORD PTR [rcx]
   14000332c:	call   QWORD PTR [rax+0x20]
   14000332f:	mov    r8d,0x2
   140003335:	mov    edx,edi
   140003337:	mov    r9,QWORD PTR [rax]
   14000333a:	mov    rcx,rax
   14000333d:	call   QWORD PTR [r9]
   140003340:	mov    r14,rax
   140003343:	test   rax,rax
   140003346:	je     0x14000339f
   140003348:	cmp    ebp,edi
   14000334a:	mov    r8,rbx
   14000334d:	cmovl  edi,ebp
   140003350:	inc    edi
   140003352:	movsxd rdx,edi
   140003355:	lea    rdi,[rax+0x18]
   140003359:	add    rdx,rdx
   14000335c:	mov    rcx,rdi
   14000335f:	mov    r9,rdx
   140003362:	call   QWORD PTR [rip+0x2e18]        # 0x140006180
   140003368:	mov    DWORD PTR [r14+0x8],ebp
   14000336c:	lock add DWORD PTR [rbx-0x8],0xffffffff
   140003371:	jg     0x140003381
   140003373:	mov    rcx,QWORD PTR [rbx-0x18]
   140003377:	lea    rdx,[rbx-0x18]
   14000337b:	mov    rax,QWORD PTR [rcx]
   14000337e:	call   QWORD PTR [rax+0x8]
   140003381:	mov    rbx,QWORD PTR [rsp+0x30]
   140003386:	mov    rbp,QWORD PTR [rsp+0x38]
   14000338b:	mov    QWORD PTR [rsi],rdi
   14000338e:	mov    rsi,QWORD PTR [rsp+0x40]
   140003393:	mov    rdi,QWORD PTR [rsp+0x48]
   140003398:	add    rsp,0x20
   14000339c:	pop    r14
   14000339e:	ret    
   14000339f:	call   0x140003530
   1400033a4:	int3   
   1400033a5:	int3   
   1400033a6:	int3   
   1400033a7:	int3   
   1400033a8:	int3   
   1400033a9:	int3   
   1400033aa:	int3   
   1400033ab:	int3   
   1400033ac:	int3   
   1400033ad:	int3   
   1400033ae:	int3   
   1400033af:	int3   
   1400033b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400033b5:	push   rdi
   1400033b6:	sub    rsp,0x20
   1400033ba:	mov    rbx,QWORD PTR [rcx]
   1400033bd:	mov    rdi,rcx
   1400033c0:	test   rbx,rbx
   1400033c3:	je     0x14000341b
   1400033c5:	mov    QWORD PTR [rsp+0x30],rsi
   1400033ca:	mov    rsi,QWORD PTR [rcx+0x8]
   1400033ce:	cmp    rbx,rsi
   1400033d1:	je     0x140003400
   1400033d3:	nop    DWORD PTR [rax+0x0]
   1400033d7:	nop    WORD PTR [rax+rax*1+0x0]
   1400033e0:	mov    rdx,QWORD PTR [rbx]
   1400033e3:	sub    rdx,0x18
   1400033e7:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400033ec:	jg     0x1400033f7
   1400033ee:	mov    rcx,QWORD PTR [rdx]
   1400033f1:	mov    rax,QWORD PTR [rcx]
   1400033f4:	call   QWORD PTR [rax+0x8]
   1400033f7:	add    rbx,0x8
   1400033fb:	cmp    rbx,rsi
   1400033fe:	jne    0x1400033e0
   140003400:	mov    rcx,QWORD PTR [rdi]
   140003403:	call   QWORD PTR [rip+0x2e7f]        # 0x140006288
   140003409:	mov    rsi,QWORD PTR [rsp+0x30]
   14000340e:	xor    eax,eax
   140003410:	mov    QWORD PTR [rdi],rax
   140003413:	mov    QWORD PTR [rdi+0x8],rax
   140003417:	mov    QWORD PTR [rdi+0x10],rax
   14000341b:	mov    rbx,QWORD PTR [rsp+0x38]
   140003420:	add    rsp,0x20
   140003424:	pop    rdi
   140003425:	ret    
   140003426:	int3   
   140003427:	int3   
   140003428:	int3   
   140003429:	int3   
   14000342a:	int3   
   14000342b:	int3   
   14000342c:	int3   
   14000342d:	int3   
   14000342e:	int3   
   14000342f:	int3   
   140003430:	mov    QWORD PTR [rsp+0x18],rbx
   140003435:	mov    QWORD PTR [rsp+0x20],rbp
   14000343a:	push   rdi
   14000343b:	sub    rsp,0x20
   14000343f:	movsxd rbx,r8d
   140003442:	mov    rbp,rdx
   140003445:	mov    rdi,rcx
   140003448:	test   r8d,r8d
   14000344b:	jne    0x140003461
   14000344d:	mov    rbx,QWORD PTR [rsp+0x40]
   140003452:	mov    rbp,QWORD PTR [rsp+0x48]
   140003457:	add    rsp,0x20
   14000345b:	pop    rdi
   14000345c:	jmp    0x1400030b0
   140003461:	test   rdx,rdx
   140003464:	je     0x140003502
   14000346a:	mov    rax,QWORD PTR [rcx]
   14000346d:	mov    QWORD PTR [rsp+0x30],rsi
   140003472:	mov    rsi,rdx
   140003475:	sub    rsi,rax
   140003478:	mov    QWORD PTR [rsp+0x38],r14
   14000347d:	mov    r14d,DWORD PTR [rax-0x10]
   140003481:	sar    rsi,1
   140003484:	test   r8d,r8d
   140003487:	js     0x14000350d
   14000348d:	mov    ecx,0x1
   140003492:	sub    ecx,DWORD PTR [rax-0x8]
   140003495:	mov    eax,DWORD PTR [rax-0xc]
   140003498:	sub    eax,ebx
   14000349a:	or     ecx,eax
   14000349c:	jge    0x1400034a8
   14000349e:	mov    edx,ebx
   1400034a0:	mov    rcx,rdi
   1400034a3:	call   0x140003540
   1400034a8:	mov    rcx,QWORD PTR [rdi]
   1400034ab:	movsxd rdx,DWORD PTR [rcx-0xc]
   1400034af:	add    rdx,rdx
   1400034b2:	cmp    rsi,r14
   1400034b5:	lea    r14,[rbx+rbx*1]
   1400034b9:	mov    r9,r14
   1400034bc:	ja     0x1400034ca
   1400034be:	lea    r8,[rcx+rsi*2]
   1400034c2:	call   QWORD PTR [rip+0x2db8]        # 0x140006280
   1400034c8:	jmp    0x1400034d3
   1400034ca:	mov    r8,rbp
   1400034cd:	call   QWORD PTR [rip+0x2cad]        # 0x140006180
   1400034d3:	mov    rax,QWORD PTR [rdi]
   1400034d6:	cmp    ebx,DWORD PTR [rax-0xc]
   1400034d9:	jg     0x140003518
   1400034db:	mov    rsi,QWORD PTR [rsp+0x30]
   1400034e0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400034e5:	mov    DWORD PTR [rax-0x10],ebx
   1400034e8:	mov    rax,QWORD PTR [rdi]
   1400034eb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400034f0:	xor    ecx,ecx
   1400034f2:	mov    WORD PTR [r14+rax*1],cx
   1400034f7:	mov    r14,QWORD PTR [rsp+0x38]
   1400034fc:	add    rsp,0x20
   140003500:	pop    rdi
   140003501:	ret    
   140003502:	mov    ecx,0x80070057
   140003507:	call   0x140001050
   14000350c:	int3   
   14000350d:	mov    ecx,0x80070057
   140003512:	call   0x140001050
   140003517:	int3   
   140003518:	mov    ecx,0x80070057
   14000351d:	call   0x140001050
   140003522:	int3   
   140003523:	int3   
   140003524:	int3   
   140003525:	int3   
   140003526:	int3   
   140003527:	int3   
   140003528:	int3   
   140003529:	int3   
   14000352a:	int3   
   14000352b:	int3   
   14000352c:	int3   
   14000352d:	int3   
   14000352e:	int3   
   14000352f:	int3   
   140003530:	sub    rsp,0x28
   140003534:	mov    ecx,0x8007000e
   140003539:	call   0x140001050
   14000353e:	int3   
   14000353f:	int3   
   140003540:	mov    r8d,edx
   140003543:	mov    rdx,QWORD PTR [rcx]
   140003546:	mov    r9,rcx
   140003549:	cmp    DWORD PTR [rdx-0x10],r8d
   14000354d:	cmovg  r8d,DWORD PTR [rdx-0x10]
   140003552:	cmp    DWORD PTR [rdx-0x8],0x1
   140003556:	jle    0x140003560
   140003558:	mov    edx,r8d
   14000355b:	jmp    0x140003300
   140003560:	mov    ecx,DWORD PTR [rdx-0xc]
   140003563:	cmp    ecx,r8d
   140003566:	jge    0x140003592
   140003568:	cmp    ecx,0x40000000
   14000356e:	jle    0x140003578
   140003570:	add    ecx,0x100000
   140003576:	jmp    0x140003581
   140003578:	mov    eax,ecx
   14000357a:	cdq    
   14000357b:	sub    eax,edx
   14000357d:	sar    eax,1
   14000357f:	add    ecx,eax
   140003581:	cmp    ecx,r8d
   140003584:	cmovl  ecx,r8d
   140003588:	mov    edx,ecx
   14000358a:	mov    rcx,r9
   14000358d:	jmp    0x140003b40
   140003592:	ret    
   140003593:	int3   
   140003594:	int3   
   140003595:	int3   
   140003596:	int3   
   140003597:	int3   
   140003598:	int3   
   140003599:	int3   
   14000359a:	int3   
   14000359b:	int3   
   14000359c:	int3   
   14000359d:	int3   
   14000359e:	int3   
   14000359f:	int3   
   1400035a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400035a5:	push   rdi
   1400035a6:	sub    rsp,0x20
   1400035aa:	mov    rbx,rcx
   1400035ad:	mov    rcx,QWORD PTR [rcx]
   1400035b0:	mov    rax,QWORD PTR [rcx]
   1400035b3:	call   QWORD PTR [rax+0x20]
   1400035b6:	cmp    DWORD PTR [rbx+0x10],0x0
   1400035ba:	mov    rcx,rax
   1400035bd:	jl     0x1400035d9
   1400035bf:	cmp    rax,QWORD PTR [rbx]
   1400035c2:	jne    0x1400035d9
   1400035c4:	mov    rdi,rbx
   1400035c7:	lock inc DWORD PTR [rbx+0x10]
   1400035cb:	mov    rax,rbx
   1400035ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400035d3:	add    rsp,0x20
   1400035d7:	pop    rdi
   1400035d8:	ret    
   1400035d9:	mov    rax,QWORD PTR [rax]
   1400035dc:	mov    edx,DWORD PTR [rbx+0x8]
   1400035df:	mov    r8d,0x2
   1400035e5:	call   QWORD PTR [rax]
   1400035e7:	mov    rdi,rax
   1400035ea:	test   rax,rax
   1400035ed:	je     0x14000361f
   1400035ef:	mov    eax,DWORD PTR [rbx+0x8]
   1400035f2:	lea    r8,[rbx+0x18]
   1400035f6:	lea    rcx,[rdi+0x18]
   1400035fa:	mov    DWORD PTR [rdi+0x8],eax
   1400035fd:	mov    eax,DWORD PTR [rbx+0x8]
   140003600:	inc    eax
   140003602:	movsxd rdx,eax
   140003605:	add    rdx,rdx
   140003608:	mov    r9,rdx
   14000360b:	call   QWORD PTR [rip+0x2b6f]        # 0x140006180
   140003611:	mov    rbx,QWORD PTR [rsp+0x30]
   140003616:	mov    rax,rdi
   140003619:	add    rsp,0x20
   14000361d:	pop    rdi
   14000361e:	ret    
   14000361f:	call   0x140003530
   140003624:	int3   
   140003625:	int3   
   140003626:	int3   
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	push   r12
   140003632:	push   r14
   140003634:	push   r15
   140003636:	sub    rsp,0x40
   14000363a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140003643:	mov    QWORD PTR [rsp+0x60],rbx
   140003648:	mov    QWORD PTR [rsp+0x70],rsi
   14000364d:	mov    QWORD PTR [rsp+0x78],rdi
   140003652:	mov    r15,rdx
   140003655:	mov    rsi,rcx
   140003658:	xor    edi,edi
   14000365a:	mov    QWORD PTR [rsp+0x68],rdi
   14000365f:	test   rdx,rdx
   140003662:	je     0x140003695
   140003664:	movabs rax,0x1fffffffffffffff
   14000366e:	cmp    rdx,rax
   140003671:	ja     0x14000368e
   140003673:	lea    rcx,[rdx*8+0x0]
   14000367b:	call   QWORD PTR [rip+0x2b17]        # 0x140006198
   140003681:	mov    rdi,rax
   140003684:	mov    QWORD PTR [rsp+0x68],rax
   140003689:	test   rax,rax
   14000368c:	jne    0x140003695
   14000368e:	call   QWORD PTR [rip+0x2a9c]        # 0x140006130
   140003694:	nop
   140003695:	mov    r8,rdi
   140003698:	mov    rdx,QWORD PTR [rsi+0x8]
   14000369c:	mov    rcx,QWORD PTR [rsi]
   14000369f:	call   0x140004980
   1400036a4:	nop
   1400036a5:	mov    r14,QWORD PTR [rsi+0x8]
   1400036a9:	mov    rbx,QWORD PTR [rsi]
   1400036ac:	mov    r12,r14
   1400036af:	sub    r12,rbx
   1400036b2:	sar    r12,0x3
   1400036b6:	test   rbx,rbx
   1400036b9:	je     0x1400036e9
   1400036bb:	cmp    rbx,r14
   1400036be:	je     0x1400036e0
   1400036c0:	mov    rdx,QWORD PTR [rbx]
   1400036c3:	sub    rdx,0x18
   1400036c7:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400036cc:	jg     0x1400036d7
   1400036ce:	mov    rcx,QWORD PTR [rdx]
   1400036d1:	mov    rax,QWORD PTR [rcx]
   1400036d4:	call   QWORD PTR [rax+0x8]
   1400036d7:	add    rbx,0x8
   1400036db:	cmp    rbx,r14
   1400036de:	jne    0x1400036c0
   1400036e0:	mov    rcx,QWORD PTR [rsi]
   1400036e3:	call   QWORD PTR [rip+0x2b9f]        # 0x140006288
   1400036e9:	lea    rax,[rdi+r15*8]
   1400036ed:	mov    QWORD PTR [rsi+0x10],rax
   1400036f1:	lea    rax,[rdi+r12*8]
   1400036f5:	mov    QWORD PTR [rsi+0x8],rax
   1400036f9:	mov    QWORD PTR [rsi],rdi
   1400036fc:	mov    rbx,QWORD PTR [rsp+0x60]
   140003701:	mov    rsi,QWORD PTR [rsp+0x70]
   140003706:	mov    rdi,QWORD PTR [rsp+0x78]
   14000370b:	add    rsp,0x40
   14000370f:	pop    r15
   140003711:	pop    r14
   140003713:	pop    r12
   140003715:	ret    
   140003716:	int3   
   140003717:	int3   
   140003718:	int3   
   140003719:	int3   
   14000371a:	int3   
   14000371b:	int3   
   14000371c:	int3   
   14000371d:	int3   
   14000371e:	int3   
   14000371f:	int3   
   140003720:	mov    QWORD PTR [rsp+0x10],rbx
   140003725:	mov    QWORD PTR [rsp+0x20],r9
   14000372a:	mov    QWORD PTR [rsp+0x18],r8
   14000372f:	push   rdi
   140003730:	sub    rsp,0x20
   140003734:	mov    rdi,rdx
   140003737:	mov    rdx,QWORD PTR [rcx]
   14000373a:	mov    rbx,rcx
   14000373d:	cmp    r8,QWORD PTR [rdx]
   140003740:	jne    0x140003783
   140003742:	cmp    r9,rdx
   140003745:	jne    0x140003783
   140003747:	mov    rdx,QWORD PTR [rdx+0x8]
   14000374b:	call   0x140004020
   140003750:	mov    rax,QWORD PTR [rbx]
   140003753:	mov    QWORD PTR [rax+0x8],rax
   140003757:	mov    rax,QWORD PTR [rbx]
   14000375a:	mov    QWORD PTR [rax],rax
   14000375d:	mov    rax,QWORD PTR [rbx]
   140003760:	mov    QWORD PTR [rax+0x10],rax
   140003764:	mov    rax,QWORD PTR [rbx]
   140003767:	mov    QWORD PTR [rbx+0x8],0x0
   14000376f:	mov    rcx,QWORD PTR [rax]
   140003772:	mov    rax,rdi
   140003775:	mov    QWORD PTR [rdi],rcx
   140003778:	mov    rbx,QWORD PTR [rsp+0x38]
   14000377d:	add    rsp,0x20
   140003781:	pop    rdi
   140003782:	ret    
   140003783:	cmp    r8,r9
   140003786:	je     0x140003809
   14000378c:	nop    DWORD PTR [rax+0x0]
   140003790:	cmp    BYTE PTR [r8+0x19],0x0
   140003795:	mov    rax,r8
   140003798:	jne    0x1400037ed
   14000379a:	mov    rdx,QWORD PTR [r8+0x10]
   14000379e:	cmp    BYTE PTR [rdx+0x19],0x0
   1400037a2:	jne    0x1400037c3
   1400037a4:	mov    rcx,QWORD PTR [rdx]
   1400037a7:	cmp    BYTE PTR [rcx+0x19],0x0
   1400037ab:	jne    0x1400037bc
   1400037ad:	nop    DWORD PTR [rax]
   1400037b0:	mov    rdx,rcx
   1400037b3:	mov    rcx,QWORD PTR [rcx]
   1400037b6:	cmp    BYTE PTR [rcx+0x19],0x0
   1400037ba:	je     0x1400037b0
   1400037bc:	mov    QWORD PTR [rsp+0x40],rdx
   1400037c1:	jmp    0x1400037ed
   1400037c3:	mov    rcx,QWORD PTR [r8+0x8]
   1400037c7:	cmp    BYTE PTR [rcx+0x19],0x0
   1400037cb:	jne    0x1400037e8
   1400037cd:	nop    DWORD PTR [rax]
   1400037d0:	cmp    r8,QWORD PTR [rcx+0x10]
   1400037d4:	jne    0x1400037e8
   1400037d6:	mov    QWORD PTR [rsp+0x40],rcx
   1400037db:	mov    r8,rcx
   1400037de:	mov    rcx,QWORD PTR [rcx+0x8]
   1400037e2:	cmp    BYTE PTR [rcx+0x19],0x0
   1400037e6:	je     0x1400037d0
   1400037e8:	mov    QWORD PTR [rsp+0x40],rcx
   1400037ed:	lea    rdx,[rsp+0x30]
   1400037f2:	mov    r8,rax
   1400037f5:	mov    rcx,rbx
   1400037f8:	call   0x140003b90
   1400037fd:	mov    r8,QWORD PTR [rsp+0x40]
   140003802:	cmp    r8,QWORD PTR [rsp+0x48]
   140003807:	jne    0x140003790
   140003809:	mov    rbx,QWORD PTR [rsp+0x38]
   14000380e:	mov    QWORD PTR [rdi],r8
   140003811:	mov    rax,rdi
   140003814:	add    rsp,0x20
   140003818:	pop    rdi
   140003819:	ret    
   14000381a:	int3   
   14000381b:	int3   
   14000381c:	int3   
   14000381d:	int3   
   14000381e:	int3   
   14000381f:	int3   
   140003820:	mov    QWORD PTR [rsp+0x10],rbx
   140003825:	mov    QWORD PTR [rsp+0x18],rsi
   14000382a:	push   rdi
   14000382b:	sub    rsp,0x20
   14000382f:	mov    eax,r8d
   140003832:	mov    rdi,rdx
   140003835:	mov    ebx,r8d
   140003838:	shr    eax,0x4
   14000383b:	mov    rsi,rcx
   14000383e:	mov    r8d,0x6
   140003844:	inc    ax
   140003847:	mov    rcx,rdi
   14000384a:	movzx  edx,ax
   14000384d:	call   QWORD PTR [rip+0x288d]        # 0x1400060e0
   140003853:	test   rax,rax
   140003856:	je     0x14000391f
   14000385c:	mov    r8d,ebx
   14000385f:	mov    rdx,rax
   140003862:	mov    rcx,rdi
   140003865:	call   0x140001080
   14000386a:	mov    rdi,rax
   14000386d:	test   rax,rax
   140003870:	je     0x14000391f
   140003876:	movzx  ebx,WORD PTR [rax]
   140003879:	test   ebx,ebx
   14000387b:	js     0x140003931
   140003881:	mov    rax,QWORD PTR [rsi]
   140003884:	mov    ecx,0x1
   140003889:	mov    QWORD PTR [rsp+0x30],rbp
   14000388e:	sub    ecx,DWORD PTR [rax-0x8]
   140003891:	mov    eax,DWORD PTR [rax-0xc]
   140003894:	sub    eax,ebx
   140003896:	or     ecx,eax
   140003898:	jge    0x1400038a4
   14000389a:	mov    edx,ebx
   14000389c:	mov    rcx,rsi
   14000389f:	call   0x140003540
   1400038a4:	movzx  eax,WORD PTR [rdi]
   1400038a7:	xor    ebp,ebp
   1400038a9:	lea    r8,[rdi+0x2]
   1400038ad:	cmp    eax,0xffffffff
   1400038b0:	jne    0x1400038cc
   1400038b2:	test   r8,r8
   1400038b5:	jne    0x1400038bb
   1400038b7:	mov    eax,ebp
   1400038b9:	jmp    0x1400038ca
   1400038bb:	or     rax,0xffffffffffffffff
   1400038bf:	nop
   1400038c0:	inc    rax
   1400038c3:	cmp    WORD PTR [r8+rax*2],bp
   1400038c8:	jne    0x1400038c0
   1400038ca:	inc    eax
   1400038cc:	mov    rcx,QWORD PTR [rsi]
   1400038cf:	movsxd r9,eax
   1400038d2:	mov    rdx,rbx
   1400038d5:	call   QWORD PTR [rip+0x2865]        # 0x140006140
   1400038db:	test   eax,eax
   1400038dd:	je     0x1400038f3
   1400038df:	cmp    eax,0xc
   1400038e2:	je     0x140003952
   1400038e4:	cmp    eax,0x16
   1400038e7:	je     0x140003947
   1400038e9:	cmp    eax,0x22
   1400038ec:	je     0x140003947
   1400038ee:	cmp    eax,0x50
   1400038f1:	jne    0x14000393c
   1400038f3:	mov    rcx,QWORD PTR [rsi]
   1400038f6:	cmp    ebx,DWORD PTR [rcx-0xc]
   1400038f9:	jg     0x14000395d
   1400038fb:	mov    DWORD PTR [rcx-0x10],ebx
   1400038fe:	mov    rcx,QWORD PTR [rsi]
   140003901:	mov    eax,0x1
   140003906:	mov    WORD PTR [rcx+rbx*2],bp
   14000390a:	mov    rbp,QWORD PTR [rsp+0x30]
   14000390f:	mov    rbx,QWORD PTR [rsp+0x38]
   140003914:	mov    rsi,QWORD PTR [rsp+0x40]
   140003919:	add    rsp,0x20
   14000391d:	pop    rdi
   14000391e:	ret    
   14000391f:	mov    rbx,QWORD PTR [rsp+0x38]
   140003924:	mov    rsi,QWORD PTR [rsp+0x40]
   140003929:	xor    eax,eax
   14000392b:	add    rsp,0x20
   14000392f:	pop    rdi
   140003930:	ret    
   140003931:	mov    ecx,0x80070057
   140003936:	call   0x140001050
   14000393b:	int3   
   14000393c:	mov    ecx,0x80004005
   140003941:	call   0x140001050
   140003946:	int3   
   140003947:	mov    ecx,0x80070057
   14000394c:	call   0x140001050
   140003951:	int3   
   140003952:	mov    ecx,0x8007000e
   140003957:	call   0x140001050
   14000395c:	int3   
   14000395d:	mov    ecx,0x80070057
   140003962:	call   0x140001050
   140003967:	int3   
   140003968:	int3   
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	mov    QWORD PTR [rsp+0x8],rbx
   140003975:	mov    QWORD PTR [rsp+0x10],rsi
   14000397a:	push   rdi
   14000397b:	sub    rsp,0x20
   14000397f:	movsxd rbx,r8d
   140003982:	mov    rsi,rdx
   140003985:	mov    rdi,rcx
   140003988:	test   r9,r9
   14000398b:	je     0x1400039ee
   14000398d:	test   rdx,rdx
   140003990:	jne    0x140003997
   140003992:	test   r8d,r8d
   140003995:	jne    0x1400039f9
   140003997:	mov    rax,QWORD PTR [r9]
   14000399a:	mov    r8d,0x2
   1400039a0:	mov    edx,ebx
   1400039a2:	mov    rcx,r9
   1400039a5:	call   QWORD PTR [rax]
   1400039a7:	test   rax,rax
   1400039aa:	je     0x140003a04
   1400039ac:	add    rax,0x18
   1400039b0:	mov    QWORD PTR [rdi],rax
   1400039b3:	test   ebx,ebx
   1400039b5:	js     0x140003a0a
   1400039b7:	cmp    ebx,DWORD PTR [rax-0xc]
   1400039ba:	jg     0x140003a0a
   1400039bc:	mov    DWORD PTR [rax-0x10],ebx
   1400039bf:	mov    rax,QWORD PTR [rdi]
   1400039c2:	lea    rdx,[rbx+rbx*1]
   1400039c6:	xor    ecx,ecx
   1400039c8:	mov    r9,rdx
   1400039cb:	mov    r8,rsi
   1400039ce:	mov    WORD PTR [rdx+rax*1],cx
   1400039d2:	mov    rcx,QWORD PTR [rdi]
   1400039d5:	call   QWORD PTR [rip+0x27a5]        # 0x140006180
   1400039db:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039e0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400039e5:	mov    rax,rdi
   1400039e8:	add    rsp,0x20
   1400039ec:	pop    rdi
   1400039ed:	ret    
   1400039ee:	mov    ecx,0x80004005
   1400039f3:	call   0x140001050
   1400039f8:	int3   
   1400039f9:	mov    ecx,0x80070057
   1400039fe:	call   0x140001050
   140003a03:	int3   
   140003a04:	call   0x140003530
   140003a09:	int3   
   140003a0a:	mov    ecx,0x80070057
   140003a0f:	call   0x140001050
   140003a14:	int3   
   140003a15:	int3   
   140003a16:	int3   
   140003a17:	int3   
   140003a18:	int3   
   140003a19:	int3   
   140003a1a:	int3   
   140003a1b:	int3   
   140003a1c:	int3   
   140003a1d:	int3   
   140003a1e:	int3   
   140003a1f:	int3   
   140003a20:	mov    QWORD PTR [rsp+0x20],rbp
   140003a25:	push   rsi
   140003a26:	push   rdi
   140003a27:	push   r15
   140003a29:	sub    rsp,0x20
   140003a2d:	mov    rax,QWORD PTR [rcx]
   140003a30:	mov    rsi,rdx
   140003a33:	mov    rbp,rdx
   140003a36:	mov    r15d,DWORD PTR [rax-0x10]
   140003a3a:	sub    rsi,rax
   140003a3d:	mov    rdi,rcx
   140003a40:	sar    rsi,1
   140003a43:	test   r8d,r8d
   140003a46:	js     0x140003b07
   140003a4c:	mov    QWORD PTR [rsp+0x48],r12
   140003a51:	xor    r12d,r12d
   140003a54:	mov    QWORD PTR [rsp+0x50],r14
   140003a59:	test   rdx,rdx
   140003a5c:	jne    0x140003a63
   140003a5e:	mov    r14d,r12d
   140003a61:	jmp    0x140003a72
   140003a63:	movsxd rdx,r8d
   140003a66:	mov    rcx,rbp
   140003a69:	call   QWORD PTR [rip+0x26e9]        # 0x140006158
   140003a6f:	mov    r14,rax
   140003a72:	mov    ecx,0x7fffffff
   140003a77:	sub    ecx,r14d
   140003a7a:	cmp    ecx,r15d
   140003a7d:	jl     0x140003b12
   140003a83:	mov    QWORD PTR [rsp+0x40],rbx
   140003a88:	lea    ebx,[r15+r14*1]
   140003a8c:	test   ebx,ebx
   140003a8e:	js     0x140003b1d
   140003a94:	mov    rax,QWORD PTR [rdi]
   140003a97:	mov    ecx,0x1
   140003a9c:	sub    ecx,DWORD PTR [rax-0x8]
   140003a9f:	mov    eax,DWORD PTR [rax-0xc]
   140003aa2:	sub    eax,ebx
   140003aa4:	or     ecx,eax
   140003aa6:	jge    0x140003ab2
   140003aa8:	mov    edx,ebx
   140003aaa:	mov    rcx,rdi
   140003aad:	call   0x140003540
   140003ab2:	mov    rax,QWORD PTR [rdi]
   140003ab5:	cmp    rsi,r15
   140003ab8:	ja     0x140003abe
   140003aba:	lea    rbp,[rax+rsi*2]
   140003abe:	movsxd rdx,r14d
   140003ac1:	lea    rcx,[rax+r15*2]
   140003ac5:	mov    r8,rbp
   140003ac8:	add    rdx,rdx
   140003acb:	mov    r9,rdx
   140003ace:	call   QWORD PTR [rip+0x26ac]        # 0x140006180
   140003ad4:	mov    rax,QWORD PTR [rdi]
   140003ad7:	cmp    ebx,DWORD PTR [rax-0xc]
   140003ada:	jg     0x140003b28
   140003adc:	mov    r14,QWORD PTR [rsp+0x50]
   140003ae1:	mov    rbp,QWORD PTR [rsp+0x58]
   140003ae6:	mov    DWORD PTR [rax-0x10],ebx
   140003ae9:	mov    rax,QWORD PTR [rdi]
   140003aec:	movsxd rcx,ebx
   140003aef:	mov    rbx,QWORD PTR [rsp+0x40]
   140003af4:	mov    WORD PTR [rax+rcx*2],r12w
   140003af9:	mov    r12,QWORD PTR [rsp+0x48]
   140003afe:	add    rsp,0x20
   140003b02:	pop    r15
   140003b04:	pop    rdi
   140003b05:	pop    rsi
   140003b06:	ret    
   140003b07:	mov    ecx,0x80070057
   140003b0c:	call   0x140001050
   140003b11:	int3   
   140003b12:	mov    ecx,0x80070057
   140003b17:	call   0x140001050
   140003b1c:	int3   
   140003b1d:	mov    ecx,0x80070057
   140003b22:	call   0x140001050
   140003b27:	int3   
   140003b28:	mov    ecx,0x80070057
   140003b2d:	call   0x140001050
   140003b32:	int3   
   140003b33:	int3   
   140003b34:	int3   
   140003b35:	int3   
   140003b36:	int3   
   140003b37:	int3   
   140003b38:	int3   
   140003b39:	int3   
   140003b3a:	int3   
   140003b3b:	int3   
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	rex push rbx
   140003b42:	sub    rsp,0x20
   140003b46:	mov    r8d,edx
   140003b49:	mov    rdx,QWORD PTR [rcx]
   140003b4c:	mov    rbx,rcx
   140003b4f:	mov    rcx,QWORD PTR [rdx-0x18]
   140003b53:	sub    rdx,0x18
   140003b57:	cmp    DWORD PTR [rdx+0xc],r8d
   140003b5b:	jge    0x140003b86
   140003b5d:	test   r8d,r8d
   140003b60:	jle    0x140003b86
   140003b62:	mov    rax,QWORD PTR [rcx]
   140003b65:	mov    r9d,0x2
   140003b6b:	call   QWORD PTR [rax+0x10]
   140003b6e:	test   rax,rax
   140003b71:	je     0x140003b80
   140003b73:	add    rax,0x18
   140003b77:	mov    QWORD PTR [rbx],rax
   140003b7a:	add    rsp,0x20
   140003b7e:	pop    rbx
   140003b7f:	ret    
   140003b80:	call   0x140003530
   140003b85:	int3   
   140003b86:	call   0x140003530
   140003b8b:	int3   
   140003b8c:	int3   
   140003b8d:	int3   
   140003b8e:	int3   
   140003b8f:	int3   
   140003b90:	mov    QWORD PTR [rsp+0x18],r8
   140003b95:	push   r14
   140003b97:	push   r15
   140003b99:	sub    rsp,0x28
   140003b9d:	cmp    BYTE PTR [r8+0x19],0x0
   140003ba2:	mov    QWORD PTR [rsp+0x40],rbx
   140003ba7:	mov    QWORD PTR [rsp+0x48],rsi
   140003bac:	mov    rsi,r8
   140003baf:	mov    r15,rdx
   140003bb2:	mov    r14,rcx
   140003bb5:	jne    0x140003c10
   140003bb7:	mov    rax,QWORD PTR [r8+0x10]
   140003bbb:	cmp    BYTE PTR [rax+0x19],0x0
   140003bbf:	jne    0x140003be3
   140003bc1:	mov    r8,rax
   140003bc4:	mov    rax,QWORD PTR [rax]
   140003bc7:	cmp    BYTE PTR [rax+0x19],0x0
   140003bcb:	jne    0x140003bdc
   140003bcd:	nop    DWORD PTR [rax]
   140003bd0:	mov    r8,rax
   140003bd3:	mov    rax,QWORD PTR [rax]
   140003bd6:	cmp    BYTE PTR [rax+0x19],0x0
   140003bda:	je     0x140003bd0
   140003bdc:	mov    QWORD PTR [rsp+0x50],r8
   140003be1:	jmp    0x140003c10
   140003be3:	mov    rax,QWORD PTR [r8+0x8]
   140003be7:	cmp    BYTE PTR [rax+0x19],0x0
   140003beb:	jne    0x140003c08
   140003bed:	nop    DWORD PTR [rax]
   140003bf0:	cmp    r8,QWORD PTR [rax+0x10]
   140003bf4:	jne    0x140003c08
   140003bf6:	mov    QWORD PTR [rsp+0x50],rax
   140003bfb:	mov    r8,rax
   140003bfe:	mov    rax,QWORD PTR [rax+0x8]
   140003c02:	cmp    BYTE PTR [rax+0x19],0x0
   140003c06:	je     0x140003bf0
   140003c08:	mov    r8,rax
   140003c0b:	mov    QWORD PTR [rsp+0x50],rax
   140003c10:	mov    rcx,QWORD PTR [rsi]
   140003c13:	mov    QWORD PTR [rsp+0x20],rdi
   140003c18:	cmp    BYTE PTR [rcx+0x19],0x0
   140003c1c:	je     0x140003c24
   140003c1e:	mov    rdi,QWORD PTR [rsi+0x10]
   140003c22:	jmp    0x140003c40
   140003c24:	mov    rax,QWORD PTR [rsi+0x10]
   140003c28:	cmp    BYTE PTR [rax+0x19],0x0
   140003c2c:	je     0x140003c33
   140003c2e:	mov    rdi,rcx
   140003c31:	jmp    0x140003c40
   140003c33:	mov    rdi,QWORD PTR [r8+0x10]
   140003c37:	cmp    r8,rsi
   140003c3a:	jne    0x140003ce3
   140003c40:	cmp    BYTE PTR [rdi+0x19],0x0
   140003c44:	mov    rbx,QWORD PTR [rsi+0x8]
   140003c48:	jne    0x140003c4e
   140003c4a:	mov    QWORD PTR [rdi+0x8],rbx
   140003c4e:	mov    rax,QWORD PTR [r14]
   140003c51:	cmp    QWORD PTR [rax+0x8],rsi
   140003c55:	jne    0x140003c5d
   140003c57:	mov    QWORD PTR [rax+0x8],rdi
   140003c5b:	jmp    0x140003c6b
   140003c5d:	cmp    QWORD PTR [rbx],rsi
   140003c60:	jne    0x140003c67
   140003c62:	mov    QWORD PTR [rbx],rdi
   140003c65:	jmp    0x140003c6b
   140003c67:	mov    QWORD PTR [rbx+0x10],rdi
   140003c6b:	mov    rdx,QWORD PTR [r14]
   140003c6e:	cmp    QWORD PTR [rdx],rsi
   140003c71:	jne    0x140003c9f
   140003c73:	cmp    BYTE PTR [rdi+0x19],0x0
   140003c77:	je     0x140003c7e
   140003c79:	mov    rcx,rbx
   140003c7c:	jmp    0x140003c9c
   140003c7e:	mov    rax,QWORD PTR [rdi]
   140003c81:	mov    rcx,rdi
   140003c84:	cmp    BYTE PTR [rax+0x19],0x0
   140003c88:	jne    0x140003c9c
   140003c8a:	nop    WORD PTR [rax+rax*1+0x0]
   140003c90:	mov    rcx,rax
   140003c93:	mov    rax,QWORD PTR [rax]
   140003c96:	cmp    BYTE PTR [rax+0x19],0x0
   140003c9a:	je     0x140003c90
   140003c9c:	mov    QWORD PTR [rdx],rcx
   140003c9f:	mov    rdx,QWORD PTR [r14]
   140003ca2:	cmp    QWORD PTR [rdx+0x10],rsi
   140003ca6:	jne    0x140003d52
   140003cac:	cmp    BYTE PTR [rdi+0x19],0x0
   140003cb0:	je     0x140003cbe
   140003cb2:	mov    rcx,rbx
   140003cb5:	mov    QWORD PTR [rdx+0x10],rbx
   140003cb9:	jmp    0x140003d52
   140003cbe:	mov    rax,QWORD PTR [rdi+0x10]
   140003cc2:	mov    rcx,rdi
   140003cc5:	cmp    BYTE PTR [rax+0x19],0x0
   140003cc9:	jne    0x140003cdd
   140003ccb:	nop    DWORD PTR [rax+rax*1+0x0]
   140003cd0:	mov    rcx,rax
   140003cd3:	mov    rax,QWORD PTR [rax+0x10]
   140003cd7:	cmp    BYTE PTR [rax+0x19],0x0
   140003cdb:	je     0x140003cd0
   140003cdd:	mov    QWORD PTR [rdx+0x10],rcx
   140003ce1:	jmp    0x140003d52
   140003ce3:	mov    QWORD PTR [rcx+0x8],r8
   140003ce7:	mov    rax,QWORD PTR [rsi]
   140003cea:	mov    QWORD PTR [r8],rax
   140003ced:	cmp    r8,QWORD PTR [rsi+0x10]
   140003cf1:	jne    0x140003cf8
   140003cf3:	mov    rbx,r8
   140003cf6:	jmp    0x140003d19
   140003cf8:	cmp    BYTE PTR [rdi+0x19],0x0
   140003cfc:	mov    rbx,QWORD PTR [r8+0x8]
   140003d00:	jne    0x140003d06
   140003d02:	mov    QWORD PTR [rdi+0x8],rbx
   140003d06:	mov    QWORD PTR [rbx],rdi
   140003d09:	mov    rax,QWORD PTR [rsi+0x10]
   140003d0d:	mov    QWORD PTR [r8+0x10],rax
   140003d11:	mov    rax,QWORD PTR [rsi+0x10]
   140003d15:	mov    QWORD PTR [rax+0x8],r8
   140003d19:	mov    rax,QWORD PTR [r14]
   140003d1c:	cmp    QWORD PTR [rax+0x8],rsi
   140003d20:	jne    0x140003d28
   140003d22:	mov    QWORD PTR [rax+0x8],r8
   140003d26:	jmp    0x140003d3a
   140003d28:	mov    rax,QWORD PTR [rsi+0x8]
   140003d2c:	cmp    QWORD PTR [rax],rsi
   140003d2f:	jne    0x140003d36
   140003d31:	mov    QWORD PTR [rax],r8
   140003d34:	jmp    0x140003d3a
   140003d36:	mov    QWORD PTR [rax+0x10],r8
   140003d3a:	mov    rax,QWORD PTR [rsi+0x8]
   140003d3e:	mov    QWORD PTR [r8+0x8],rax
   140003d42:	movzx  eax,BYTE PTR [rsi+0x18]
   140003d46:	movzx  ecx,BYTE PTR [r8+0x18]
   140003d4b:	mov    BYTE PTR [r8+0x18],al
   140003d4f:	mov    BYTE PTR [rsi+0x18],cl
   140003d52:	cmp    BYTE PTR [rsi+0x18],0x1
   140003d56:	jne    0x140003fa6
   140003d5c:	mov    rax,QWORD PTR [r14]
   140003d5f:	cmp    rdi,QWORD PTR [rax+0x8]
   140003d63:	je     0x140003fa2
   140003d69:	nop    DWORD PTR [rax+0x0]
   140003d70:	cmp    BYTE PTR [rdi+0x18],0x1
   140003d74:	jne    0x140003fa2
   140003d7a:	mov    rcx,QWORD PTR [rbx]
   140003d7d:	cmp    rdi,rcx
   140003d80:	jne    0x140003e75
   140003d86:	mov    rcx,QWORD PTR [rbx+0x10]
   140003d8a:	cmp    BYTE PTR [rcx+0x18],0x0
   140003d8e:	jne    0x140003de4
   140003d90:	mov    BYTE PTR [rcx+0x18],0x1
   140003d94:	mov    rcx,QWORD PTR [rbx+0x10]
   140003d98:	mov    BYTE PTR [rbx+0x18],0x0
   140003d9c:	mov    rax,QWORD PTR [rcx]
   140003d9f:	mov    QWORD PTR [rbx+0x10],rax
   140003da3:	mov    rax,QWORD PTR [rcx]
   140003da6:	cmp    BYTE PTR [rax+0x19],0x0
   140003daa:	jne    0x140003db0
   140003dac:	mov    QWORD PTR [rax+0x8],rbx
   140003db0:	mov    rax,QWORD PTR [rbx+0x8]
   140003db4:	mov    QWORD PTR [rcx+0x8],rax
   140003db8:	mov    rax,QWORD PTR [r14]
   140003dbb:	cmp    rbx,QWORD PTR [rax+0x8]
   140003dbf:	jne    0x140003dc7
   140003dc1:	mov    QWORD PTR [rax+0x8],rcx
   140003dc5:	jmp    0x140003dd9
   140003dc7:	mov    rax,QWORD PTR [rbx+0x8]
   140003dcb:	cmp    rbx,QWORD PTR [rax]
   140003dce:	jne    0x140003dd5
   140003dd0:	mov    QWORD PTR [rax],rcx
   140003dd3:	jmp    0x140003dd9
   140003dd5:	mov    QWORD PTR [rax+0x10],rcx
   140003dd9:	mov    QWORD PTR [rcx],rbx
   140003ddc:	mov    QWORD PTR [rbx+0x8],rcx
   140003de0:	mov    rcx,QWORD PTR [rbx+0x10]
   140003de4:	cmp    BYTE PTR [rcx+0x19],0x0
   140003de8:	jne    0x140003eed
   140003dee:	mov    rax,QWORD PTR [rcx]
   140003df1:	cmp    BYTE PTR [rax+0x18],0x1
   140003df5:	jne    0x140003e05
   140003df7:	mov    rax,QWORD PTR [rcx+0x10]
   140003dfb:	cmp    BYTE PTR [rax+0x18],0x1
   140003dff:	je     0x140003ee9
   140003e05:	mov    rax,QWORD PTR [rcx+0x10]
   140003e09:	cmp    BYTE PTR [rax+0x18],0x1
   140003e0d:	jne    0x140003e29
   140003e0f:	mov    rax,QWORD PTR [rcx]
   140003e12:	mov    rdx,rcx
   140003e15:	mov    BYTE PTR [rax+0x18],0x1
   140003e19:	mov    BYTE PTR [rcx+0x18],0x0
   140003e1d:	mov    rcx,r14
   140003e20:	call   0x140004110
   140003e25:	mov    rcx,QWORD PTR [rbx+0x10]
   140003e29:	movzx  eax,BYTE PTR [rbx+0x18]
   140003e2d:	mov    BYTE PTR [rcx+0x18],al
   140003e30:	mov    BYTE PTR [rbx+0x18],0x1
   140003e34:	mov    rax,QWORD PTR [rcx+0x10]
   140003e38:	mov    BYTE PTR [rax+0x18],0x1
   140003e3c:	mov    rcx,QWORD PTR [rbx+0x10]
   140003e40:	mov    rax,QWORD PTR [rcx]
   140003e43:	mov    QWORD PTR [rbx+0x10],rax
   140003e47:	mov    rax,QWORD PTR [rcx]
   140003e4a:	cmp    BYTE PTR [rax+0x19],0x0
   140003e4e:	jne    0x140003e54
   140003e50:	mov    QWORD PTR [rax+0x8],rbx
   140003e54:	mov    rax,QWORD PTR [rbx+0x8]
   140003e58:	mov    QWORD PTR [rcx+0x8],rax
   140003e5c:	mov    rax,QWORD PTR [r14]
   140003e5f:	cmp    rbx,QWORD PTR [rax+0x8]
   140003e63:	jne    0x140003f06
   140003e69:	mov    QWORD PTR [rax+0x8],rcx
   140003e6d:	mov    QWORD PTR [rcx],rbx
   140003e70:	jmp    0x140003f9e
   140003e75:	cmp    BYTE PTR [rcx+0x18],0x0
   140003e79:	jne    0x140003ed0
   140003e7b:	mov    BYTE PTR [rcx+0x18],0x1
   140003e7f:	mov    rcx,QWORD PTR [rbx]
   140003e82:	mov    BYTE PTR [rbx+0x18],0x0
   140003e86:	mov    rax,QWORD PTR [rcx+0x10]
   140003e8a:	mov    QWORD PTR [rbx],rax
   140003e8d:	mov    rax,QWORD PTR [rcx+0x10]
   140003e91:	cmp    BYTE PTR [rax+0x19],0x0
   140003e95:	jne    0x140003e9b
   140003e97:	mov    QWORD PTR [rax+0x8],rbx
   140003e9b:	mov    rax,QWORD PTR [rbx+0x8]
   140003e9f:	mov    QWORD PTR [rcx+0x8],rax
   140003ea3:	mov    rax,QWORD PTR [r14]
   140003ea6:	cmp    rbx,QWORD PTR [rax+0x8]
   140003eaa:	jne    0x140003eb2
   140003eac:	mov    QWORD PTR [rax+0x8],rcx
   140003eb0:	jmp    0x140003ec5
   140003eb2:	mov    rax,QWORD PTR [rbx+0x8]
   140003eb6:	cmp    rbx,QWORD PTR [rax+0x10]
   140003eba:	jne    0x140003ec2
   140003ebc:	mov    QWORD PTR [rax+0x10],rcx
   140003ec0:	jmp    0x140003ec5
   140003ec2:	mov    QWORD PTR [rax],rcx
   140003ec5:	mov    QWORD PTR [rcx+0x10],rbx
   140003ec9:	mov    QWORD PTR [rbx+0x8],rcx
   140003ecd:	mov    rcx,QWORD PTR [rbx]
   140003ed0:	cmp    BYTE PTR [rcx+0x19],0x0
   140003ed4:	jne    0x140003eed
   140003ed6:	mov    rax,QWORD PTR [rcx+0x10]
   140003eda:	cmp    BYTE PTR [rax+0x18],0x1
   140003ede:	jne    0x140003f23
   140003ee0:	mov    rax,QWORD PTR [rcx]
   140003ee3:	cmp    BYTE PTR [rax+0x18],0x1
   140003ee7:	jne    0x140003f23
   140003ee9:	mov    BYTE PTR [rcx+0x18],0x0
   140003eed:	mov    rax,QWORD PTR [r14]
   140003ef0:	mov    rdi,rbx
   140003ef3:	mov    rbx,QWORD PTR [rbx+0x8]
   140003ef7:	cmp    rdi,QWORD PTR [rax+0x8]
   140003efb:	jne    0x140003d70
   140003f01:	jmp    0x140003fa2
   140003f06:	mov    rax,QWORD PTR [rbx+0x8]
   140003f0a:	cmp    rbx,QWORD PTR [rax]
   140003f0d:	jne    0x140003f1a
   140003f0f:	mov    QWORD PTR [rax],rcx
   140003f12:	mov    QWORD PTR [rcx],rbx
   140003f15:	jmp    0x140003f9e
   140003f1a:	mov    QWORD PTR [rax+0x10],rcx
   140003f1e:	mov    QWORD PTR [rcx],rbx
   140003f21:	jmp    0x140003f9e
   140003f23:	mov    rax,QWORD PTR [rcx]
   140003f26:	cmp    BYTE PTR [rax+0x18],0x1
   140003f2a:	jne    0x140003f46
   140003f2c:	mov    rax,QWORD PTR [rcx+0x10]
   140003f30:	mov    rdx,rcx
   140003f33:	mov    BYTE PTR [rax+0x18],0x1
   140003f37:	mov    BYTE PTR [rcx+0x18],0x0
   140003f3b:	mov    rcx,r14
   140003f3e:	call   0x1400040b0
   140003f43:	mov    rcx,QWORD PTR [rbx]
   140003f46:	movzx  eax,BYTE PTR [rbx+0x18]
   140003f4a:	mov    BYTE PTR [rcx+0x18],al
   140003f4d:	mov    BYTE PTR [rbx+0x18],0x1
   140003f51:	mov    rax,QWORD PTR [rcx]
   140003f54:	mov    BYTE PTR [rax+0x18],0x1
   140003f58:	mov    rcx,QWORD PTR [rbx]
   140003f5b:	mov    rax,QWORD PTR [rcx+0x10]
   140003f5f:	mov    QWORD PTR [rbx],rax
   140003f62:	mov    rax,QWORD PTR [rcx+0x10]
   140003f66:	cmp    BYTE PTR [rax+0x19],0x0
   140003f6a:	jne    0x140003f70
   140003f6c:	mov    QWORD PTR [rax+0x8],rbx
   140003f70:	mov    rax,QWORD PTR [rbx+0x8]
   140003f74:	mov    QWORD PTR [rcx+0x8],rax
   140003f78:	mov    rax,QWORD PTR [r14]
   140003f7b:	cmp    rbx,QWORD PTR [rax+0x8]
   140003f7f:	jne    0x140003f87
   140003f81:	mov    QWORD PTR [rax+0x8],rcx
   140003f85:	jmp    0x140003f9a
   140003f87:	mov    rax,QWORD PTR [rbx+0x8]
   140003f8b:	cmp    rbx,QWORD PTR [rax+0x10]
   140003f8f:	jne    0x140003f97
   140003f91:	mov    QWORD PTR [rax+0x10],rcx
   140003f95:	jmp    0x140003f9a
   140003f97:	mov    QWORD PTR [rax],rcx
   140003f9a:	mov    QWORD PTR [rcx+0x10],rbx
   140003f9e:	mov    QWORD PTR [rbx+0x8],rcx
   140003fa2:	mov    BYTE PTR [rdi+0x18],0x1
   140003fa6:	mov    rdx,QWORD PTR [rsi+0x28]
   140003faa:	sub    rdx,0x18
   140003fae:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140003fb3:	mov    rdi,QWORD PTR [rsp+0x20]
   140003fb8:	jg     0x140003fc3
   140003fba:	mov    rcx,QWORD PTR [rdx]
   140003fbd:	mov    rax,QWORD PTR [rcx]
   140003fc0:	call   QWORD PTR [rax+0x8]
   140003fc3:	mov    rdx,QWORD PTR [rsi+0x20]
   140003fc7:	sub    rdx,0x18
   140003fcb:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140003fd0:	mov    rbx,QWORD PTR [rsp+0x40]
   140003fd5:	jg     0x140003fe0
   140003fd7:	mov    rcx,QWORD PTR [rdx]
   140003fda:	mov    rax,QWORD PTR [rcx]
   140003fdd:	call   QWORD PTR [rax+0x8]
   140003fe0:	mov    rcx,rsi
   140003fe3:	call   QWORD PTR [rip+0x229f]        # 0x140006288
   140003fe9:	mov    rax,QWORD PTR [r14+0x8]
   140003fed:	mov    rsi,QWORD PTR [rsp+0x48]
   140003ff2:	test   rax,rax
   140003ff5:	je     0x140003ffe
   140003ff7:	dec    rax
   140003ffa:	mov    QWORD PTR [r14+0x8],rax
   140003ffe:	mov    rax,QWORD PTR [rsp+0x50]
   140004003:	mov    QWORD PTR [r15],rax
   140004006:	mov    rax,r15
   140004009:	add    rsp,0x28
   14000400d:	pop    r15
   14000400f:	pop    r14
   140004011:	ret    
   140004012:	int3   
   140004013:	int3   
   140004014:	int3   
   140004015:	int3   
   140004016:	int3   
   140004017:	int3   
   140004018:	int3   
   140004019:	int3   
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	mov    QWORD PTR [rsp+0x8],rbx
   140004025:	mov    QWORD PTR [rsp+0x10],rsi
   14000402a:	push   rdi
   14000402b:	sub    rsp,0x20
   14000402f:	cmp    BYTE PTR [rdx+0x19],0x0
   140004033:	mov    rbx,rdx
   140004036:	mov    rsi,rcx
   140004039:	mov    rdi,rdx
   14000403c:	jne    0x140004091
   14000403e:	xchg   ax,ax
   140004040:	mov    rdx,QWORD PTR [rdi+0x10]
   140004044:	mov    rcx,rsi
   140004047:	call   0x140004020
   14000404c:	mov    rdx,QWORD PTR [rbx+0x28]
   140004050:	mov    rdi,QWORD PTR [rdi]
   140004053:	sub    rdx,0x18
   140004057:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000405c:	jg     0x140004067
   14000405e:	mov    rcx,QWORD PTR [rdx]
   140004061:	mov    rax,QWORD PTR [rcx]
   140004064:	call   QWORD PTR [rax+0x8]
   140004067:	mov    rdx,QWORD PTR [rbx+0x20]
   14000406b:	sub    rdx,0x18
   14000406f:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140004074:	jg     0x14000407f
   140004076:	mov    rcx,QWORD PTR [rdx]
   140004079:	mov    rax,QWORD PTR [rcx]
   14000407c:	call   QWORD PTR [rax+0x8]
   14000407f:	mov    rcx,rbx
   140004082:	call   QWORD PTR [rip+0x2200]        # 0x140006288
   140004088:	cmp    BYTE PTR [rdi+0x19],0x0
   14000408c:	mov    rbx,rdi
   14000408f:	je     0x140004040
   140004091:	mov    rbx,QWORD PTR [rsp+0x30]
   140004096:	mov    rsi,QWORD PTR [rsp+0x38]
   14000409b:	add    rsp,0x20
   14000409f:	pop    rdi
   1400040a0:	ret    
   1400040a1:	int3   
   1400040a2:	int3   
   1400040a3:	int3   
   1400040a4:	int3   
   1400040a5:	int3   
   1400040a6:	int3   
   1400040a7:	int3   
   1400040a8:	int3   
   1400040a9:	int3   
   1400040aa:	int3   
   1400040ab:	int3   
   1400040ac:	int3   
   1400040ad:	int3   
   1400040ae:	int3   
   1400040af:	int3   
   1400040b0:	mov    r8,QWORD PTR [rdx+0x10]
   1400040b4:	mov    rax,QWORD PTR [r8]
   1400040b7:	mov    QWORD PTR [rdx+0x10],rax
   1400040bb:	mov    rax,QWORD PTR [r8]
   1400040be:	cmp    BYTE PTR [rax+0x19],0x0
   1400040c2:	jne    0x1400040c8
   1400040c4:	mov    QWORD PTR [rax+0x8],rdx
   1400040c8:	mov    rax,QWORD PTR [rdx+0x8]
   1400040cc:	mov    QWORD PTR [r8+0x8],rax
   1400040d0:	mov    rax,QWORD PTR [rcx]
   1400040d3:	cmp    rdx,QWORD PTR [rax+0x8]
   1400040d7:	jne    0x1400040e5
   1400040d9:	mov    QWORD PTR [rax+0x8],r8
   1400040dd:	mov    QWORD PTR [r8],rdx
   1400040e0:	mov    QWORD PTR [rdx+0x8],r8
   1400040e4:	ret    
   1400040e5:	mov    rax,QWORD PTR [rdx+0x8]
   1400040e9:	cmp    rdx,QWORD PTR [rax]
   1400040ec:	jne    0x1400040f9
   1400040ee:	mov    QWORD PTR [rax],r8
   1400040f1:	mov    QWORD PTR [r8],rdx
   1400040f4:	mov    QWORD PTR [rdx+0x8],r8
   1400040f8:	ret    
   1400040f9:	mov    QWORD PTR [rax+0x10],r8
   1400040fd:	mov    QWORD PTR [r8],rdx
   140004100:	mov    QWORD PTR [rdx+0x8],r8
   140004104:	ret    
   140004105:	int3   
   140004106:	int3   
   140004107:	int3   
   140004108:	int3   
   140004109:	int3   
   14000410a:	int3   
   14000410b:	int3   
   14000410c:	int3   
   14000410d:	int3   
   14000410e:	int3   
   14000410f:	int3   
   140004110:	mov    r8,QWORD PTR [rdx]
   140004113:	mov    rax,QWORD PTR [r8+0x10]
   140004117:	mov    QWORD PTR [rdx],rax
   14000411a:	mov    rax,QWORD PTR [r8+0x10]
   14000411e:	cmp    BYTE PTR [rax+0x19],0x0
   140004122:	jne    0x140004128
   140004124:	mov    QWORD PTR [rax+0x8],rdx
   140004128:	mov    rax,QWORD PTR [rdx+0x8]
   14000412c:	mov    QWORD PTR [r8+0x8],rax
   140004130:	mov    rax,QWORD PTR [rcx]
   140004133:	cmp    rdx,QWORD PTR [rax+0x8]
   140004137:	jne    0x140004146
   140004139:	mov    QWORD PTR [rax+0x8],r8
   14000413d:	mov    QWORD PTR [r8+0x10],rdx
   140004141:	mov    QWORD PTR [rdx+0x8],r8
   140004145:	ret    
   140004146:	mov    rax,QWORD PTR [rdx+0x8]
   14000414a:	cmp    rdx,QWORD PTR [rax+0x10]
   14000414e:	jne    0x14000415d
   140004150:	mov    QWORD PTR [rax+0x10],r8
   140004154:	mov    QWORD PTR [r8+0x10],rdx
   140004158:	mov    QWORD PTR [rdx+0x8],r8
   14000415c:	ret    
   14000415d:	mov    QWORD PTR [rax],r8
   140004160:	mov    QWORD PTR [r8+0x10],rdx
   140004164:	mov    QWORD PTR [rdx+0x8],r8
   140004168:	ret    
   140004169:	int3   
   14000416a:	int3   
   14000416b:	int3   
   14000416c:	int3   
   14000416d:	int3   
   14000416e:	int3   
   14000416f:	int3   
   140004170:	sub    rsp,0x28
   140004174:	mov    ecx,0x30
   140004179:	call   QWORD PTR [rip+0x2019]        # 0x140006198
   14000417f:	test   rax,rax
   140004182:	jne    0x14000418b
   140004184:	call   QWORD PTR [rip+0x1fa6]        # 0x140006130
   14000418a:	int3   
   14000418b:	lea    rcx,[rax+0x8]
   14000418f:	mov    QWORD PTR [rax],rax
   140004192:	test   rcx,rcx
   140004195:	je     0x14000419a
   140004197:	mov    QWORD PTR [rcx],rax
   14000419a:	lea    rcx,[rax+0x10]
   14000419e:	test   rcx,rcx
   1400041a1:	je     0x1400041a6
   1400041a3:	mov    QWORD PTR [rcx],rax
   1400041a6:	mov    WORD PTR [rax+0x18],0x101
   1400041ac:	add    rsp,0x28
   1400041b0:	ret    
   1400041b1:	int3   
   1400041b2:	int3   
   1400041b3:	int3   
   1400041b4:	int3   
   1400041b5:	int3   
   1400041b6:	int3   
   1400041b7:	int3   
   1400041b8:	int3   
   1400041b9:	int3   
   1400041ba:	int3   
   1400041bb:	int3   
   1400041bc:	int3   
   1400041bd:	int3   
   1400041be:	int3   
   1400041bf:	int3   
   1400041c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400041c5:	mov    QWORD PTR [rsp+0x18],r8
   1400041ca:	mov    QWORD PTR [rsp+0x20],r9
   1400041cf:	sub    rsp,0x28
   1400041d3:	lea    r8,[rsp+0x40]
   1400041d8:	call   0x140004250
   1400041dd:	add    rsp,0x28
   1400041e1:	ret    
   1400041e2:	int3   
   1400041e3:	int3   
   1400041e4:	int3   
   1400041e5:	int3   
   1400041e6:	int3   
   1400041e7:	int3   
   1400041e8:	int3   
   1400041e9:	int3   
   1400041ea:	int3   
   1400041eb:	int3   
   1400041ec:	int3   
   1400041ed:	int3   
   1400041ee:	int3   
   1400041ef:	int3   
   1400041f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400041f5:	push   rdi
   1400041f6:	sub    rsp,0x30
   1400041fa:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140004203:	mov    QWORD PTR [rsp+0x48],rbx
   140004208:	mov    rbx,r8
   14000420b:	mov    rdi,rcx
   14000420e:	mov    DWORD PTR [rsp+0x20],0x0
   140004216:	mov    rcx,QWORD PTR [rdx]
   140004219:	sub    rcx,0x18
   14000421d:	call   0x1400035a0
   140004222:	add    rax,0x18
   140004226:	mov    QWORD PTR [rdi],rax
   140004229:	mov    rcx,QWORD PTR [rbx]
   14000422c:	sub    rcx,0x18
   140004230:	call   0x1400035a0
   140004235:	add    rax,0x18
   140004239:	mov    QWORD PTR [rdi+0x8],rax
   14000423d:	mov    rax,rdi
   140004240:	mov    rbx,QWORD PTR [rsp+0x48]
   140004245:	add    rsp,0x30
   140004249:	pop    rdi
   14000424a:	ret    
   14000424b:	int3   
   14000424c:	int3   
   14000424d:	int3   
   14000424e:	int3   
   14000424f:	int3   
   140004250:	rex push rbp
   140004252:	push   rsi
   140004253:	push   rdi
   140004254:	sub    rsp,0x20
   140004258:	mov    rbp,r8
   14000425b:	mov    rsi,rdx
   14000425e:	mov    rdi,rcx
   140004261:	test   rdx,rdx
   140004264:	je     0x14000430d
   14000426a:	mov    rax,QWORD PTR [rcx]
   14000426d:	mov    QWORD PTR [rsp+0x48],r14
   140004272:	mov    rdx,r8
   140004275:	mov    rcx,rsi
   140004278:	mov    QWORD PTR [rsp+0x50],r15
   14000427d:	movsxd r15,DWORD PTR [rax-0x10]
   140004281:	call   QWORD PTR [rip+0x1f51]        # 0x1400061d8
   140004287:	mov    r14d,eax
   14000428a:	test   eax,eax
   14000428c:	js     0x140004318
   140004292:	mov    QWORD PTR [rsp+0x40],rbx
   140004297:	lea    ebx,[rax+r15*1]
   14000429b:	test   ebx,ebx
   14000429d:	js     0x140004323
   1400042a3:	mov    rax,QWORD PTR [rdi]
   1400042a6:	mov    ecx,0x1
   1400042ab:	sub    ecx,DWORD PTR [rax-0x8]
   1400042ae:	mov    eax,DWORD PTR [rax-0xc]
   1400042b1:	sub    eax,ebx
   1400042b3:	or     ecx,eax
   1400042b5:	jge    0x1400042c1
   1400042b7:	mov    edx,ebx
   1400042b9:	mov    rcx,rdi
   1400042bc:	call   0x140003540
   1400042c1:	lea    eax,[r14+0x1]
   1400042c5:	mov    r9,rbp
   1400042c8:	mov    r8,rsi
   1400042cb:	movsxd rdx,eax
   1400042ce:	mov    rax,QWORD PTR [rdi]
   1400042d1:	lea    rcx,[rax+r15*2]
   1400042d5:	call   QWORD PTR [rip+0x1e95]        # 0x140006170
   1400042db:	test   ebx,ebx
   1400042dd:	js     0x14000432e
   1400042df:	mov    rax,QWORD PTR [rdi]
   1400042e2:	cmp    ebx,DWORD PTR [rax-0xc]
   1400042e5:	jg     0x14000432e
   1400042e7:	mov    r14,QWORD PTR [rsp+0x48]
   1400042ec:	mov    r15,QWORD PTR [rsp+0x50]
   1400042f1:	mov    DWORD PTR [rax-0x10],ebx
   1400042f4:	mov    rax,QWORD PTR [rdi]
   1400042f7:	movsxd rcx,ebx
   1400042fa:	mov    rbx,QWORD PTR [rsp+0x40]
   1400042ff:	xor    edx,edx
   140004301:	mov    WORD PTR [rax+rcx*2],dx
   140004305:	add    rsp,0x20
   140004309:	pop    rdi
   14000430a:	pop    rsi
   14000430b:	pop    rbp
   14000430c:	ret    
   14000430d:	mov    ecx,0x80070057
   140004312:	call   0x140001050
   140004317:	int3   
   140004318:	mov    ecx,0x80004005
   14000431d:	call   0x140001050
   140004322:	int3   
   140004323:	mov    ecx,0x80070057
   140004328:	call   0x140001050
   14000432d:	int3   
   14000432e:	mov    ecx,0x80070057
   140004333:	call   0x140001050
   140004338:	int3   
   140004339:	int3   
   14000433a:	int3   
   14000433b:	int3   
   14000433c:	int3   
   14000433d:	int3   
   14000433e:	int3   
   14000433f:	int3   
   140004340:	rex push rdi
   140004342:	sub    rsp,0x30
   140004346:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000434f:	mov    QWORD PTR [rsp+0x40],rbx
   140004354:	mov    QWORD PTR [rsp+0x48],rsi
   140004359:	mov    rsi,rdx
   14000435c:	call   0x140004650
   140004361:	mov    rdi,rax
   140004364:	mov    QWORD PTR [rsp+0x50],rax
   140004369:	mov    WORD PTR [rax+0x18],0x0
   14000436f:	lea    rbx,[rax+0x20]
   140004373:	mov    QWORD PTR [rsp+0x58],rbx
   140004378:	mov    QWORD PTR [rsp+0x28],rbx
   14000437d:	test   rbx,rbx
   140004380:	je     0x1400043aa
   140004382:	mov    rcx,QWORD PTR [rsi]
   140004385:	sub    rcx,0x18
   140004389:	call   0x1400035a0
   14000438e:	add    rax,0x18
   140004392:	mov    QWORD PTR [rbx],rax
   140004395:	mov    rcx,QWORD PTR [rsi+0x8]
   140004399:	sub    rcx,0x18
   14000439d:	call   0x1400035a0
   1400043a2:	add    rax,0x18
   1400043a6:	mov    QWORD PTR [rbx+0x8],rax
   1400043aa:	mov    rax,rdi
   1400043ad:	mov    rbx,QWORD PTR [rsp+0x40]
   1400043b2:	mov    rsi,QWORD PTR [rsp+0x48]
   1400043b7:	add    rsp,0x30
   1400043bb:	pop    rdi
   1400043bc:	ret    
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	rex push rdi
   1400043c2:	push   r14
   1400043c4:	push   r15
   1400043c6:	sub    rsp,0x40
   1400043ca:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   1400043d3:	mov    QWORD PTR [rsp+0x68],rbx
   1400043d8:	mov    QWORD PTR [rsp+0x70],rsi
   1400043dd:	mov    rsi,r9
   1400043e0:	mov    r14,rdx
   1400043e3:	mov    r15,rcx
   1400043e6:	mov    rdi,QWORD PTR [rcx]
   1400043e9:	mov    r8,QWORD PTR [rdi+0x8]
   1400043ed:	mov    r11,rdi
   1400043f0:	mov    r10b,0x1
   1400043f3:	xor    r9d,r9d
   1400043f6:	cmp    BYTE PTR [r8+0x19],r9b
   1400043fa:	jne    0x140004463
   1400043fc:	nop    DWORD PTR [rax+0x0]
   140004400:	mov    r11,r8
   140004403:	mov    rdx,QWORD PTR [r8+0x20]
   140004407:	mov    eax,r9d
   14000440a:	test   rdx,rdx
   14000440d:	setne  al
   140004410:	test   eax,eax
   140004412:	je     0x140004458
   140004414:	mov    rax,QWORD PTR [rsi]
   140004417:	sub    rdx,rax
   14000441a:	nop    WORD PTR [rax+rax*1+0x0]
   140004420:	movzx  ecx,WORD PTR [rax]
   140004423:	cmp    cx,WORD PTR [rax+rdx*1]
   140004427:	jne    0x140004437
   140004429:	add    rax,0x2
   14000442d:	test   cx,cx
   140004430:	jne    0x140004420
   140004432:	mov    eax,r9d
   140004435:	jmp    0x14000443c
   140004437:	sbb    eax,eax
   140004439:	or     eax,0x1
   14000443c:	test   eax,eax
   14000443e:	sets   r10b
   140004442:	test   r10b,r10b
   140004445:	je     0x14000444c
   140004447:	mov    r8,QWORD PTR [r8]
   14000444a:	jmp    0x140004450
   14000444c:	mov    r8,QWORD PTR [r8+0x10]
   140004450:	cmp    BYTE PTR [r8+0x19],r9b
   140004454:	je     0x140004400
   140004456:	jmp    0x140004463
   140004458:	mov    ecx,0x80004005
   14000445d:	call   0x140001050
   140004462:	int3   
   140004463:	mov    rbx,r11
   140004466:	test   r10b,r10b
   140004469:	je     0x14000450a
   14000446f:	cmp    r11,QWORD PTR [rdi]
   140004472:	jne    0x1400044a7
   140004474:	mov    rax,QWORD PTR [rsp+0x80]
   14000447c:	mov    QWORD PTR [rsp+0x28],rax
   140004481:	mov    r9,r11
   140004484:	mov    r8b,0x1
   140004487:	lea    rdx,[rsp+0x60]
   14000448c:	mov    rcx,r15
   14000448f:	call   0x1400046a0
   140004494:	mov    rax,QWORD PTR [rax]
   140004497:	mov    QWORD PTR [r14],rax
   14000449a:	mov    BYTE PTR [r14+0x8],0x1
   14000449f:	mov    rax,r14
   1400044a2:	jmp    0x1400045cd
   1400044a7:	cmp    BYTE PTR [r11+0x19],0x0
   1400044ac:	je     0x1400044b4
   1400044ae:	mov    rbx,QWORD PTR [r11+0x10]
   1400044b2:	jmp    0x14000450a
   1400044b4:	mov    rax,QWORD PTR [r11]
   1400044b7:	cmp    BYTE PTR [rax+0x19],0x0
   1400044bb:	jne    0x1400044df
   1400044bd:	mov    rbx,rax
   1400044c0:	mov    rax,QWORD PTR [rax+0x10]
   1400044c4:	cmp    BYTE PTR [rax+0x19],0x0
   1400044c8:	jne    0x14000450a
   1400044ca:	nop    WORD PTR [rax+rax*1+0x0]
   1400044d0:	mov    rbx,rax
   1400044d3:	mov    rax,QWORD PTR [rax+0x10]
   1400044d7:	cmp    BYTE PTR [rax+0x19],0x0
   1400044db:	je     0x1400044d0
   1400044dd:	jmp    0x14000450a
   1400044df:	mov    rax,QWORD PTR [r11+0x8]
   1400044e3:	cmp    BYTE PTR [rax+0x19],0x0
   1400044e7:	jne    0x140004502
   1400044e9:	nop    DWORD PTR [rax+0x0]
   1400044f0:	cmp    rbx,QWORD PTR [rax]
   1400044f3:	jne    0x140004502
   1400044f5:	mov    rbx,rax
   1400044f8:	mov    rax,QWORD PTR [rax+0x8]
   1400044fc:	cmp    BYTE PTR [rax+0x19],0x0
   140004500:	je     0x1400044f0
   140004502:	cmp    BYTE PTR [rbx+0x19],0x0
   140004506:	cmove  rbx,rax
   14000450a:	mov    rdx,QWORD PTR [rsi]
   14000450d:	mov    eax,r9d
   140004510:	test   rdx,rdx
   140004513:	setne  al
   140004516:	test   eax,eax
   140004518:	jne    0x140004525
   14000451a:	mov    ecx,0x80004005
   14000451f:	call   0x140001050
   140004524:	int3   
   140004525:	mov    rax,QWORD PTR [rbx+0x20]
   140004529:	sub    rdx,rax
   14000452c:	nop    DWORD PTR [rax+0x0]
   140004530:	movzx  ecx,WORD PTR [rax]
   140004533:	cmp    cx,WORD PTR [rax+rdx*1]
   140004537:	jne    0x140004544
   140004539:	add    rax,0x2
   14000453d:	test   cx,cx
   140004540:	jne    0x140004530
   140004542:	jmp    0x14000454b
   140004544:	sbb    r9d,r9d
   140004547:	or     r9d,0x1
   14000454b:	test   r9d,r9d
   14000454e:	jns    0x140004581
   140004550:	mov    rax,QWORD PTR [rsp+0x80]
   140004558:	mov    QWORD PTR [rsp+0x28],rax
   14000455d:	mov    r9,r11
   140004560:	movzx  r8d,r10b
   140004564:	lea    rdx,[rsp+0x38]
   140004569:	mov    rcx,r15
   14000456c:	call   0x1400046a0
   140004571:	mov    rax,QWORD PTR [rax]
   140004574:	mov    QWORD PTR [r14],rax
   140004577:	mov    BYTE PTR [r14+0x8],0x1
   14000457c:	mov    rax,r14
   14000457f:	jmp    0x1400045cd
   140004581:	mov    rsi,QWORD PTR [rsp+0x80]
   140004589:	mov    rdx,QWORD PTR [rsi+0x28]
   14000458d:	sub    rdx,0x18
   140004591:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140004596:	jg     0x1400045a1
   140004598:	mov    rcx,QWORD PTR [rdx]
   14000459b:	mov    rax,QWORD PTR [rcx]
   14000459e:	call   QWORD PTR [rax+0x8]
   1400045a1:	mov    rdx,QWORD PTR [rsi+0x20]
   1400045a5:	sub    rdx,0x18
   1400045a9:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400045ae:	jg     0x1400045b9
   1400045b0:	mov    rcx,QWORD PTR [rdx]
   1400045b3:	mov    rax,QWORD PTR [rcx]
   1400045b6:	call   QWORD PTR [rax+0x8]
   1400045b9:	mov    rcx,rsi
   1400045bc:	call   QWORD PTR [rip+0x1cc6]        # 0x140006288
   1400045c2:	mov    QWORD PTR [r14],rbx
   1400045c5:	mov    BYTE PTR [r14+0x8],0x0
   1400045ca:	mov    rax,r14
   1400045cd:	mov    rbx,QWORD PTR [rsp+0x68]
   1400045d2:	mov    rsi,QWORD PTR [rsp+0x70]
   1400045d7:	add    rsp,0x40
   1400045db:	pop    r15
   1400045dd:	pop    r14
   1400045df:	pop    rdi
   1400045e0:	ret    
   1400045e1:	int3   
   1400045e2:	int3   
   1400045e3:	int3   
   1400045e4:	int3   
   1400045e5:	int3   
   1400045e6:	int3   
   1400045e7:	int3   
   1400045e8:	int3   
   1400045e9:	int3   
   1400045ea:	int3   
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400045f5:	push   rdi
   1400045f6:	sub    rsp,0x20
   1400045fa:	mov    rdi,rdx
   1400045fd:	mov    rdx,QWORD PTR [rdx+0x28]
   140004601:	sub    rdx,0x18
   140004605:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000460a:	jg     0x140004615
   14000460c:	mov    rcx,QWORD PTR [rdx]
   14000460f:	mov    rax,QWORD PTR [rcx]
   140004612:	call   QWORD PTR [rax+0x8]
   140004615:	mov    rdx,QWORD PTR [rdi+0x20]
   140004619:	sub    rdx,0x18
   14000461d:	lock add DWORD PTR [rdx+0x10],0xffffffff
   140004622:	jg     0x14000462d
   140004624:	mov    rcx,QWORD PTR [rdx]
   140004627:	mov    rax,QWORD PTR [rcx]
   14000462a:	call   QWORD PTR [rax+0x8]
   14000462d:	mov    rcx,rdi
   140004630:	mov    rbx,QWORD PTR [rsp+0x30]
   140004635:	add    rsp,0x20
   140004639:	pop    rdi
   14000463a:	rex.W jmp QWORD PTR [rip+0x1c47]        # 0x140006288
   140004641:	int3   
   140004642:	int3   
   140004643:	int3   
   140004644:	int3   
   140004645:	int3   
   140004646:	int3   
   140004647:	int3   
   140004648:	int3   
   140004649:	int3   
   14000464a:	int3   
   14000464b:	int3   
   14000464c:	int3   
   14000464d:	int3   
   14000464e:	int3   
   14000464f:	int3   
   140004650:	rex push rbx
   140004652:	sub    rsp,0x20
   140004656:	mov    rbx,rcx
   140004659:	mov    ecx,0x30
   14000465e:	call   QWORD PTR [rip+0x1b34]        # 0x140006198
   140004664:	mov    rdx,rax
   140004667:	test   rax,rax
   14000466a:	jne    0x140004673
   14000466c:	call   QWORD PTR [rip+0x1abe]        # 0x140006130
   140004672:	int3   
   140004673:	mov    rax,QWORD PTR [rbx]
   140004676:	lea    rcx,[rdx+0x8]
   14000467a:	mov    QWORD PTR [rdx],rax
   14000467d:	test   rcx,rcx
   140004680:	je     0x140004688
   140004682:	mov    rax,QWORD PTR [rbx]
   140004685:	mov    QWORD PTR [rcx],rax
   140004688:	lea    rcx,[rdx+0x10]
   14000468c:	test   rcx,rcx
   14000468f:	je     0x140004697
   140004691:	mov    rax,QWORD PTR [rbx]
   140004694:	mov    QWORD PTR [rcx],rax
   140004697:	mov    rax,rdx
   14000469a:	add    rsp,0x20
   14000469e:	pop    rbx
   14000469f:	ret    
   1400046a0:	rex push rbx
   1400046a2:	sub    rsp,0x20
   1400046a6:	mov    rax,QWORD PTR [rcx+0x8]
   1400046aa:	mov    r10,rcx
   1400046ad:	movabs rcx,0x555555555555554
   1400046b7:	mov    rbx,rdx
   1400046ba:	cmp    rax,rcx
   1400046bd:	jb     0x140004714
   1400046bf:	mov    QWORD PTR [rsp+0x30],rdi
   1400046c4:	mov    rdi,QWORD PTR [rsp+0x58]
   1400046c9:	mov    rdx,QWORD PTR [rdi+0x28]
   1400046cd:	sub    rdx,0x18
   1400046d1:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400046d6:	jg     0x1400046e1
   1400046d8:	mov    rcx,QWORD PTR [rdx]
   1400046db:	mov    rax,QWORD PTR [rcx]
   1400046de:	call   QWORD PTR [rax+0x8]
   1400046e1:	mov    rdx,QWORD PTR [rdi+0x20]
   1400046e5:	sub    rdx,0x18
   1400046e9:	lock add DWORD PTR [rdx+0x10],0xffffffff
   1400046ee:	jg     0x1400046f9
   1400046f0:	mov    rcx,QWORD PTR [rdx]
   1400046f3:	mov    rax,QWORD PTR [rcx]
   1400046f6:	call   QWORD PTR [rax+0x8]
   1400046f9:	mov    rcx,rdi
   1400046fc:	call   QWORD PTR [rip+0x1b86]        # 0x140006288
   140004702:	lea    rcx,[rip+0x2027]        # 0x140006730
   140004709:	call   QWORD PTR [rip+0x1a19]        # 0x140006128
   14000470f:	mov    rdi,QWORD PTR [rsp+0x30]
   140004714:	mov    r11,QWORD PTR [rsp+0x58]
   140004719:	inc    rax
   14000471c:	mov    QWORD PTR [r10+0x8],rax
   140004720:	mov    QWORD PTR [r11+0x8],r9
   140004724:	mov    rax,QWORD PTR [r10]
   140004727:	cmp    r9,rax
   14000472a:	jne    0x14000473b
   14000472c:	mov    QWORD PTR [rax+0x8],r11
   140004730:	mov    rax,QWORD PTR [r10]
   140004733:	mov    QWORD PTR [rax],r11
   140004736:	mov    rax,QWORD PTR [r10]
   140004739:	jmp    0x14000475d
   14000473b:	test   r8b,r8b
   14000473e:	je     0x140004750
   140004740:	mov    QWORD PTR [r9],r11
   140004743:	mov    rax,QWORD PTR [r10]
   140004746:	cmp    r9,QWORD PTR [rax]
   140004749:	jne    0x140004761
   14000474b:	mov    QWORD PTR [rax],r11
   14000474e:	jmp    0x140004761
   140004750:	mov    QWORD PTR [r9+0x10],r11
   140004754:	mov    rax,QWORD PTR [r10]
   140004757:	cmp    r9,QWORD PTR [rax+0x10]
   14000475b:	jne    0x140004761
   14000475d:	mov    QWORD PTR [rax+0x10],r11
   140004761:	mov    rcx,QWORD PTR [r11+0x8]
   140004765:	mov    rax,r11
   140004768:	cmp    BYTE PTR [rcx+0x18],0x0
   14000476c:	jne    0x140004962
   140004772:	mov    rcx,QWORD PTR [rax+0x8]
   140004776:	mov    r8,QWORD PTR [rcx+0x8]
   14000477a:	mov    rdx,QWORD PTR [r8]
   14000477d:	cmp    rcx,rdx
   140004780:	jne    0x140004877
   140004786:	mov    rdx,QWORD PTR [r8+0x10]
   14000478a:	cmp    BYTE PTR [rdx+0x18],0x0
   14000478e:	jne    0x1400047b1
   140004790:	mov    BYTE PTR [rcx+0x18],0x1
   140004794:	mov    BYTE PTR [rdx+0x18],0x1
   140004798:	mov    rcx,QWORD PTR [rax+0x8]
   14000479c:	mov    rdx,QWORD PTR [rcx+0x8]
   1400047a0:	mov    BYTE PTR [rdx+0x18],0x0
   1400047a4:	mov    rcx,QWORD PTR [rax+0x8]
   1400047a8:	mov    rax,QWORD PTR [rcx+0x8]
   1400047ac:	jmp    0x140004954
   1400047b1:	cmp    rax,QWORD PTR [rcx+0x10]
   1400047b5:	jne    0x140004802
   1400047b7:	mov    rdx,QWORD PTR [rcx+0x10]
   1400047bb:	mov    rax,rcx
   1400047be:	mov    rcx,QWORD PTR [rdx]
   1400047c1:	mov    QWORD PTR [rax+0x10],rcx
   1400047c5:	mov    rcx,QWORD PTR [rdx]
   1400047c8:	cmp    BYTE PTR [rcx+0x19],0x0
   1400047cc:	jne    0x1400047d2
   1400047ce:	mov    QWORD PTR [rcx+0x8],rax
   1400047d2:	mov    rcx,QWORD PTR [rax+0x8]
   1400047d6:	mov    QWORD PTR [rdx+0x8],rcx
   1400047da:	mov    rcx,QWORD PTR [r10]
   1400047dd:	cmp    rax,QWORD PTR [rcx+0x8]
   1400047e1:	jne    0x1400047e9
   1400047e3:	mov    QWORD PTR [rcx+0x8],rdx
   1400047e7:	jmp    0x1400047fb
   1400047e9:	mov    rcx,QWORD PTR [rax+0x8]
   1400047ed:	cmp    rax,QWORD PTR [rcx]
   1400047f0:	jne    0x1400047f7
   1400047f2:	mov    QWORD PTR [rcx],rdx
   1400047f5:	jmp    0x1400047fb
   1400047f7:	mov    QWORD PTR [rcx+0x10],rdx
   1400047fb:	mov    QWORD PTR [rdx],rax
   1400047fe:	mov    QWORD PTR [rax+0x8],rdx
   140004802:	mov    rcx,QWORD PTR [rax+0x8]
   140004806:	mov    BYTE PTR [rcx+0x18],0x1
   14000480a:	mov    rcx,QWORD PTR [rax+0x8]
   14000480e:	mov    rdx,QWORD PTR [rcx+0x8]
   140004812:	mov    BYTE PTR [rdx+0x18],0x0
   140004816:	mov    rcx,QWORD PTR [rax+0x8]
   14000481a:	mov    rdx,QWORD PTR [rcx+0x8]
   14000481e:	mov    r8,QWORD PTR [rdx]
   140004821:	mov    rcx,QWORD PTR [r8+0x10]
   140004825:	mov    QWORD PTR [rdx],rcx
   140004828:	mov    rcx,QWORD PTR [r8+0x10]
   14000482c:	cmp    BYTE PTR [rcx+0x19],0x0
   140004830:	jne    0x140004836
   140004832:	mov    QWORD PTR [rcx+0x8],rdx
   140004836:	mov    rcx,QWORD PTR [rdx+0x8]
   14000483a:	mov    QWORD PTR [r8+0x8],rcx
   14000483e:	mov    rcx,QWORD PTR [r10]
   140004841:	cmp    rdx,QWORD PTR [rcx+0x8]
   140004845:	jne    0x140004854
   140004847:	mov    QWORD PTR [rcx+0x8],r8
   14000484b:	mov    QWORD PTR [r8+0x10],rdx
   14000484f:	jmp    0x140004950
   140004854:	mov    rcx,QWORD PTR [rdx+0x8]
   140004858:	cmp    rdx,QWORD PTR [rcx+0x10]
   14000485c:	jne    0x14000486b
   14000485e:	mov    QWORD PTR [rcx+0x10],r8
   140004862:	mov    QWORD PTR [r8+0x10],rdx
   140004866:	jmp    0x140004950
   14000486b:	mov    QWORD PTR [rcx],r8
   14000486e:	mov    QWORD PTR [r8+0x10],rdx
   140004872:	jmp    0x140004950
   140004877:	cmp    BYTE PTR [rdx+0x18],0x0
   14000487b:	jne    0x14000489e
   14000487d:	mov    BYTE PTR [rcx+0x18],0x1
   140004881:	mov    BYTE PTR [rdx+0x18],0x1
   140004885:	mov    rcx,QWORD PTR [rax+0x8]
   140004889:	mov    rdx,QWORD PTR [rcx+0x8]
   14000488d:	mov    BYTE PTR [rdx+0x18],0x0
   140004891:	mov    rcx,QWORD PTR [rax+0x8]
   140004895:	mov    rax,QWORD PTR [rcx+0x8]
   140004899:	jmp    0x140004954
   14000489e:	cmp    rax,QWORD PTR [rcx]
   1400048a1:	jne    0x1400048f0
   1400048a3:	mov    rdx,QWORD PTR [rcx]
   1400048a6:	mov    rax,rcx
   1400048a9:	mov    rcx,QWORD PTR [rdx+0x10]
   1400048ad:	mov    QWORD PTR [rax],rcx
   1400048b0:	mov    rcx,QWORD PTR [rdx+0x10]
   1400048b4:	cmp    BYTE PTR [rcx+0x19],0x0
   1400048b8:	jne    0x1400048be
   1400048ba:	mov    QWORD PTR [rcx+0x8],rax
   1400048be:	mov    rcx,QWORD PTR [rax+0x8]
   1400048c2:	mov    QWORD PTR [rdx+0x8],rcx
   1400048c6:	mov    rcx,QWORD PTR [r10]
   1400048c9:	cmp    rax,QWORD PTR [rcx+0x8]
   1400048cd:	jne    0x1400048d5
   1400048cf:	mov    QWORD PTR [rcx+0x8],rdx
   1400048d3:	jmp    0x1400048e8
   1400048d5:	mov    rcx,QWORD PTR [rax+0x8]
   1400048d9:	cmp    rax,QWORD PTR [rcx+0x10]
   1400048dd:	jne    0x1400048e5
   1400048df:	mov    QWORD PTR [rcx+0x10],rdx
   1400048e3:	jmp    0x1400048e8
   1400048e5:	mov    QWORD PTR [rcx],rdx
   1400048e8:	mov    QWORD PTR [rdx+0x10],rax
   1400048ec:	mov    QWORD PTR [rax+0x8],rdx
   1400048f0:	mov    rcx,QWORD PTR [rax+0x8]
   1400048f4:	mov    BYTE PTR [rcx+0x18],0x1
   1400048f8:	mov    rcx,QWORD PTR [rax+0x8]
   1400048fc:	mov    rdx,QWORD PTR [rcx+0x8]
   140004900:	mov    BYTE PTR [rdx+0x18],0x0
   140004904:	mov    rcx,QWORD PTR [rax+0x8]
   140004908:	mov    rdx,QWORD PTR [rcx+0x8]
   14000490c:	mov    r8,QWORD PTR [rdx+0x10]
   140004910:	mov    rcx,QWORD PTR [r8]
   140004913:	mov    QWORD PTR [rdx+0x10],rcx
   140004917:	mov    rcx,QWORD PTR [r8]
   14000491a:	cmp    BYTE PTR [rcx+0x19],0x0
   14000491e:	jne    0x140004924
   140004920:	mov    QWORD PTR [rcx+0x8],rdx
   140004924:	mov    rcx,QWORD PTR [rdx+0x8]
   140004928:	mov    QWORD PTR [r8+0x8],rcx
   14000492c:	mov    rcx,QWORD PTR [r10]
   14000492f:	cmp    rdx,QWORD PTR [rcx+0x8]
   140004933:	jne    0x14000493b
   140004935:	mov    QWORD PTR [rcx+0x8],r8
   140004939:	jmp    0x14000494d
   14000493b:	mov    rcx,QWORD PTR [rdx+0x8]
   14000493f:	cmp    rdx,QWORD PTR [rcx]
   140004942:	jne    0x140004949
   140004944:	mov    QWORD PTR [rcx],r8
   140004947:	jmp    0x14000494d
   140004949:	mov    QWORD PTR [rcx+0x10],r8
   14000494d:	mov    QWORD PTR [r8],rdx
   140004950:	mov    QWORD PTR [rdx+0x8],r8
   140004954:	mov    rcx,QWORD PTR [rax+0x8]
   140004958:	cmp    BYTE PTR [rcx+0x18],0x0
   14000495c:	je     0x140004772
   140004962:	mov    rax,QWORD PTR [r10]
   140004965:	mov    QWORD PTR [rbx],r11
   140004968:	mov    rcx,QWORD PTR [rax+0x8]
   14000496c:	mov    rax,rbx
   14000496f:	mov    BYTE PTR [rcx+0x18],0x1
   140004973:	add    rsp,0x20
   140004977:	pop    rbx
   140004978:	ret    
   140004979:	int3   
   14000497a:	int3   
   14000497b:	int3   
   14000497c:	int3   
   14000497d:	int3   
   14000497e:	int3   
   14000497f:	int3   
   140004980:	mov    QWORD PTR [rsp+0x20],r9
   140004985:	mov    QWORD PTR [rsp+0x18],r8
   14000498a:	push   rbx
   14000498b:	push   rsi
   14000498c:	push   rdi
   14000498d:	push   r14
   14000498f:	push   r15
   140004991:	sub    rsp,0x30
   140004995:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000499e:	mov    rdi,r8
   1400049a1:	mov    r15,rdx
   1400049a4:	mov    r14,rcx
   1400049a7:	mov    QWORD PTR [rsp+0x78],r8
   1400049ac:	nop    DWORD PTR [rax+0x0]
   1400049b0:	cmp    r14,r15
   1400049b3:	je     0x140004a3f
   1400049b9:	mov    QWORD PTR [rsp+0x60],rdi
   1400049be:	test   rdi,rdi
   1400049c1:	je     0x140004a2d
   1400049c3:	mov    rbx,QWORD PTR [r14]
   1400049c6:	mov    rcx,QWORD PTR [rbx-0x18]
   1400049ca:	mov    rax,QWORD PTR [rcx]
   1400049cd:	call   QWORD PTR [rax+0x20]
   1400049d0:	mov    rcx,rax
   1400049d3:	cmp    DWORD PTR [rbx-0x8],0x0
   1400049d7:	jl     0x1400049e9
   1400049d9:	cmp    rax,QWORD PTR [rbx-0x18]
   1400049dd:	jne    0x1400049e9
   1400049df:	lea    rsi,[rbx-0x18]
   1400049e3:	lock inc DWORD PTR [rbx-0x8]
   1400049e7:	jmp    0x140004a26
   1400049e9:	mov    rax,QWORD PTR [rax]
   1400049ec:	mov    r8d,0x2
   1400049f2:	mov    edx,DWORD PTR [rbx-0x10]
   1400049f5:	call   QWORD PTR [rax]
   1400049f7:	mov    rsi,rax
   1400049fa:	test   rax,rax
   1400049fd:	jne    0x140004a04
   1400049ff:	call   0x140003530
   140004a04:	mov    eax,DWORD PTR [rbx-0x10]
   140004a07:	mov    DWORD PTR [rsi+0x8],eax
   140004a0a:	mov    eax,DWORD PTR [rbx-0x10]
   140004a0d:	inc    eax
   140004a0f:	movsxd rdx,eax
   140004a12:	lea    r9,[rdx+rdx*1]
   140004a16:	mov    r8,rbx
   140004a19:	add    rdx,rdx
   140004a1c:	lea    rcx,[rsi+0x18]
   140004a20:	call   QWORD PTR [rip+0x175a]        # 0x140006180
   140004a26:	lea    rax,[rsi+0x18]
   140004a2a:	mov    QWORD PTR [rdi],rax
   140004a2d:	add    rdi,0x8
   140004a31:	mov    QWORD PTR [rsp+0x70],rdi
   140004a36:	add    r14,0x8
   140004a3a:	jmp    0x1400049b0
   140004a3f:	mov    rax,rdi
   140004a42:	add    rsp,0x30
   140004a46:	pop    r15
   140004a48:	pop    r14
   140004a4a:	pop    rdi
   140004a4b:	pop    rsi
   140004a4c:	pop    rbx
   140004a4d:	ret    
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	mov    QWORD PTR [rsp+0x8],rbx
   140004a55:	push   rdi
   140004a56:	sub    rsp,0x20
   140004a5a:	xor    edx,edx
   140004a5c:	mov    rdi,rcx
   140004a5f:	lea    r8d,[rdx+0x28]
   140004a63:	add    rcx,r8
   140004a66:	call   0x140005022
   140004a6b:	and    QWORD PTR [rdi+0x50],0x0
   140004a70:	and    DWORD PTR [rdi+0x58],0x0
   140004a74:	and    DWORD PTR [rdi+0x5c],0x0
   140004a78:	lea    rax,[rip+0xffffffffffffb581]        # 0x140000000
   140004a7f:	lea    rcx,[rdi+0x28]
   140004a83:	mov    QWORD PTR [rdi+0x10],rax
   140004a87:	mov    QWORD PTR [rdi+0x8],rax
   140004a8b:	lea    rax,[rip+0x18b6]        # 0x140006348
   140004a92:	xor    r8d,r8d
   140004a95:	xor    edx,edx
   140004a97:	mov    DWORD PTR [rdi],0x60
   140004a9d:	mov    QWORD PTR [rdi+0x20],rax
   140004aa1:	mov    DWORD PTR [rdi+0x18],0xc00
   140004aa8:	call   0x140001070
   140004aad:	test   eax,eax
   140004aaf:	jne    0x140004ae7
   140004ab1:	call   QWORD PTR [rip+0x15c1]        # 0x140006078
   140004ab7:	movzx  ecx,ax
   140004aba:	or     ecx,0x80070000
   140004ac0:	test   eax,eax
   140004ac2:	cmovle ecx,eax
   140004ac5:	test   ecx,ecx
   140004ac7:	jns    0x140004ae7
   140004ac9:	call   QWORD PTR [rip+0x15e1]        # 0x1400060b0
   140004acf:	test   eax,eax
   140004ad1:	je     0x140004ae0
   140004ad3:	lea    rcx,[rip+0x1886]        # 0x140006360
   140004ada:	call   QWORD PTR [rip+0x15d8]        # 0x1400060b8
   140004ae0:	mov    BYTE PTR [rip+0x4c3d],0x1        # 0x140009724
   140004ae7:	mov    rax,rdi
   140004aea:	mov    rbx,QWORD PTR [rsp+0x30]
   140004aef:	add    rsp,0x20
   140004af3:	pop    rdi
   140004af4:	ret    
   140004af5:	int3   
   140004af6:	int3   
   140004af7:	int3   
   140004af8:	rex push rbx
   140004afa:	sub    rsp,0x20
   140004afe:	mov    rbx,rcx
   140004b01:	add    rcx,0x28
   140004b05:	call   QWORD PTR [rip+0x1595]        # 0x1400060a0
   140004b0b:	mov    rcx,QWORD PTR [rbx+0x50]
   140004b0f:	test   rcx,rcx
   140004b12:	je     0x140004b1e
   140004b14:	call   0x140004be0
   140004b19:	and    QWORD PTR [rbx+0x50],0x0
   140004b1e:	and    DWORD PTR [rbx+0x58],0x0
   140004b22:	and    DWORD PTR [rbx+0x5c],0x0
   140004b26:	add    rsp,0x20
   140004b2a:	pop    rbx
   140004b2b:	ret    
   140004b2c:	mov    QWORD PTR [rsp+0x8],rbx
   140004b31:	mov    QWORD PTR [rsp+0x10],rbp
   140004b36:	mov    QWORD PTR [rsp+0x18],rsi
   140004b3b:	push   rdi
   140004b3c:	sub    rsp,0x20
   140004b40:	mov    rsi,rcx
   140004b43:	add    rcx,0x28
   140004b47:	movsxd rbx,edx
   140004b4a:	call   QWORD PTR [rip+0x1570]        # 0x1400060c0
   140004b50:	xor    edi,edi
   140004b52:	cmp    ebx,DWORD PTR [rsi+0x58]
   140004b55:	jg     0x140004b64
   140004b57:	test   ebx,ebx
   140004b59:	js     0x140004b64
   140004b5b:	cmp    ebx,DWORD PTR [rsi+0x58]
   140004b5e:	jne    0x140004b86
   140004b60:	mov    rdi,QWORD PTR [rsi+0x10]
   140004b64:	lea    rcx,[rsi+0x28]
   140004b68:	call   QWORD PTR [rip+0x155a]        # 0x1400060c8
   140004b6e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b73:	mov    rbp,QWORD PTR [rsp+0x38]
   140004b78:	mov    rsi,QWORD PTR [rsp+0x40]
   140004b7d:	mov    rax,rdi
   140004b80:	add    rsp,0x20
   140004b84:	pop    rdi
   140004b85:	ret    
   140004b86:	jge    0x140004b92
   140004b88:	mov    rax,QWORD PTR [rsi+0x50]
   140004b8c:	mov    rdi,QWORD PTR [rax+rbx*8]
   140004b90:	jmp    0x140004b64
   140004b92:	xor    r9d,r9d
   140004b95:	xor    r8d,r8d
   140004b98:	mov    ecx,0xc000008c
   140004b9d:	lea    edx,[r9+0x1]
   140004ba1:	call   QWORD PTR [rip+0x14c9]        # 0x140006070
   140004ba7:	int3   
   140004ba8:	jmp    QWORD PTR [rip+0x16da]        # 0x140006288
   140004bae:	int3   
   140004baf:	int3   
   140004bb0:	int3   
   140004bb1:	int3   
   140004bb2:	int3   
   140004bb3:	int3   
   140004bb4:	int3   
   140004bb5:	int3   
   140004bb6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004bc0:	cmp    rcx,QWORD PTR [rip+0x4439]        # 0x140009000
   140004bc7:	jne    0x140004bda
   140004bc9:	rol    rcx,0x10
   140004bcd:	test   cx,0xffff
   140004bd2:	jne    0x140004bd6
   140004bd4:	repz ret 
   140004bd6:	ror    rcx,0x10
   140004bda:	jmp    0x140005074
   140004bdf:	int3   
   140004be0:	jmp    QWORD PTR [rip+0x1562]        # 0x140006148
   140004be6:	int3   
   140004be7:	int3   
   140004be8:	rex push rbx
   140004bea:	sub    rsp,0x20
   140004bee:	cmp    QWORD PTR [rip+0x4baa],0x0        # 0x1400097a0
   140004bf6:	jne    0x140004c2e
   140004bf8:	mov    edx,0x8
   140004bfd:	lea    ecx,[rdx+0x18]
   140004c00:	call   QWORD PTR [rip+0x15b2]        # 0x1400061b8
   140004c06:	mov    rcx,rax
   140004c09:	mov    rbx,rax
   140004c0c:	call   QWORD PTR [rip+0x14fe]        # 0x140006110
   140004c12:	mov    QWORD PTR [rip+0x4b87],rax        # 0x1400097a0
   140004c19:	mov    QWORD PTR [rip+0x4b78],rax        # 0x140009798
   140004c20:	test   rbx,rbx
   140004c23:	jne    0x140004c2a
   140004c25:	lea    eax,[rbx+0x18]
   140004c28:	jmp    0x140004c30
   140004c2a:	and    QWORD PTR [rbx],0x0
   140004c2e:	xor    eax,eax
   140004c30:	add    rsp,0x20
   140004c34:	pop    rbx
   140004c35:	ret    
   140004c36:	int3   
   140004c37:	int3   
   140004c38:	rex push rbx
   140004c3a:	sub    rsp,0x20
   140004c3e:	mov    rbx,rcx
   140004c41:	mov    rcx,QWORD PTR [rip+0x4b58]        # 0x1400097a0
   140004c48:	call   QWORD PTR [rip+0x144a]        # 0x140006098
   140004c4e:	mov    QWORD PTR [rsp+0x38],rax
   140004c53:	cmp    rax,0xffffffffffffffff
   140004c57:	jne    0x140004c64
   140004c59:	mov    rcx,rbx
   140004c5c:	call   QWORD PTR [rip+0x156e]        # 0x1400061d0
   140004c62:	jmp    0x140004ce2
   140004c64:	mov    ecx,0x8
   140004c69:	call   0x140005146
   140004c6e:	nop
   140004c6f:	mov    rcx,QWORD PTR [rip+0x4b2a]        # 0x1400097a0
   140004c76:	call   QWORD PTR [rip+0x141c]        # 0x140006098
   140004c7c:	mov    QWORD PTR [rsp+0x38],rax
   140004c81:	mov    rcx,QWORD PTR [rip+0x4b10]        # 0x140009798
   140004c88:	call   QWORD PTR [rip+0x140a]        # 0x140006098
   140004c8e:	mov    QWORD PTR [rsp+0x40],rax
   140004c93:	mov    rcx,rbx
   140004c96:	call   QWORD PTR [rip+0x1474]        # 0x140006110
   140004c9c:	mov    rcx,rax
   140004c9f:	lea    r8,[rsp+0x40]
   140004ca4:	lea    rdx,[rsp+0x38]
   140004ca9:	call   0x140005152
   140004cae:	mov    rbx,rax
   140004cb1:	mov    rcx,QWORD PTR [rsp+0x38]
   140004cb6:	call   QWORD PTR [rip+0x1454]        # 0x140006110
   140004cbc:	mov    QWORD PTR [rip+0x4add],rax        # 0x1400097a0
   140004cc3:	mov    rcx,QWORD PTR [rsp+0x40]
   140004cc8:	call   QWORD PTR [rip+0x1442]        # 0x140006110
   140004cce:	mov    QWORD PTR [rip+0x4ac3],rax        # 0x140009798
   140004cd5:	mov    ecx,0x8
   140004cda:	call   0x14000514c
   140004cdf:	mov    rax,rbx
   140004ce2:	add    rsp,0x20
   140004ce6:	pop    rbx
   140004ce7:	ret    
   140004ce8:	sub    rsp,0x28
   140004cec:	call   0x140004c38
   140004cf1:	neg    rax
   140004cf4:	sbb    eax,eax
   140004cf6:	neg    eax
   140004cf8:	dec    eax
   140004cfa:	add    rsp,0x28
   140004cfe:	ret    
   140004cff:	int3   
   140004d00:	mov    QWORD PTR [rsp+0x8],rbx
   140004d05:	mov    QWORD PTR [rsp+0x10],rsi
   140004d0a:	push   rdi
   140004d0b:	sub    rsp,0x20
   140004d0f:	mov    esi,edx
   140004d11:	mov    rbx,rcx
   140004d14:	test   dl,0x2
   140004d17:	je     0x140004d44
   140004d19:	lea    rdi,[rcx-0x8]
   140004d1d:	lea    r9,[rip+0x766]        # 0x14000548a
   140004d24:	mov    edx,0x18
   140004d29:	mov    r8d,DWORD PTR [rdi]
   140004d2c:	call   0x140005160
   140004d31:	test   sil,0x1
   140004d35:	je     0x140004d3f
   140004d37:	mov    rcx,rdi
   140004d3a:	call   0x140004ba8
   140004d3f:	mov    rax,rdi
   140004d42:	jmp    0x140004d5a
   140004d44:	call   0x14000548a
   140004d49:	test   sil,0x1
   140004d4d:	je     0x140004d57
   140004d4f:	mov    rcx,rbx
   140004d52:	call   0x140004ba8
   140004d57:	mov    rax,rbx
   140004d5a:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d5f:	mov    rsi,QWORD PTR [rsp+0x38]
   140004d64:	add    rsp,0x20
   140004d68:	pop    rdi
   140004d69:	ret    
   140004d6a:	int3   
   140004d6b:	int3   
   140004d6c:	sub    rsp,0x28
   140004d70:	mov    eax,0x5a4d
   140004d75:	cmp    WORD PTR [rip+0xffffffffffffb284],ax        # 0x140000000
   140004d7c:	je     0x140004d82
   140004d7e:	xor    ecx,ecx
   140004d80:	jmp    0x140004dba
   140004d82:	movsxd rax,DWORD PTR [rip+0xffffffffffffb2b3]        # 0x14000003c
   140004d89:	lea    rcx,[rip+0xffffffffffffb270]        # 0x140000000
   140004d90:	add    rax,rcx
   140004d93:	cmp    DWORD PTR [rax],0x4550
   140004d99:	jne    0x140004d7e
   140004d9b:	mov    ecx,0x20b
   140004da0:	cmp    WORD PTR [rax+0x18],cx
   140004da4:	jne    0x140004d7e
   140004da6:	xor    ecx,ecx
   140004da8:	cmp    DWORD PTR [rax+0x84],0xe
   140004daf:	jbe    0x140004dba
   140004db1:	cmp    DWORD PTR [rax+0xf8],ecx
   140004db7:	setne  cl
   140004dba:	mov    DWORD PTR [rip+0x43c0],ecx        # 0x140009180
   140004dc0:	mov    ecx,0x1
   140004dc5:	call   QWORD PTR [rip+0x1425]        # 0x1400061f0
   140004dcb:	or     rcx,0xffffffffffffffff
   140004dcf:	call   QWORD PTR [rip+0x133b]        # 0x140006110
   140004dd5:	mov    rcx,QWORD PTR [rip+0x145c]        # 0x140006238
   140004ddc:	mov    QWORD PTR [rip+0x49b5],rax        # 0x140009798
   140004de3:	mov    QWORD PTR [rip+0x49b6],rax        # 0x1400097a0
   140004dea:	mov    eax,DWORD PTR [rip+0x4930]        # 0x140009720
   140004df0:	mov    DWORD PTR [rcx],eax
   140004df2:	mov    rdx,QWORD PTR [rip+0x1447]        # 0x140006240
   140004df9:	mov    eax,DWORD PTR [rip+0x4915]        # 0x140009714
   140004dff:	mov    DWORD PTR [rdx],eax
   140004e01:	call   0x1400053f0
   140004e06:	call   0x1400053ec
   140004e0b:	cmp    DWORD PTR [rip+0x41fe],0x0        # 0x140009010
   140004e12:	jne    0x140004e21
   140004e14:	lea    rcx,[rip+0x5d1]        # 0x1400053ec
   140004e1b:	call   QWORD PTR [rip+0x13f7]        # 0x140006218
   140004e21:	cmp    DWORD PTR [rip+0x41ec],0xffffffff        # 0x140009014
   140004e28:	jne    0x140004e33
   140004e2a:	or     ecx,0xffffffff
   140004e2d:	call   QWORD PTR [rip+0x13dd]        # 0x140006210
   140004e33:	xor    eax,eax
   140004e35:	add    rsp,0x28
   140004e39:	ret    
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	sub    rsp,0x38
   140004e40:	lea    rcx,[rip+0x5e1]        # 0x140005428
   140004e47:	call   0x140004ce8
   140004e4c:	mov    eax,DWORD PTR [rip+0x48ca]        # 0x14000971c
   140004e52:	mov    r9d,DWORD PTR [rip+0x48bf]        # 0x140009718
   140004e59:	mov    DWORD PTR [rip+0x433d],eax        # 0x14000919c
   140004e5f:	lea    rax,[rip+0x4336]        # 0x14000919c
   140004e66:	lea    r8,[rip+0x4323]        # 0x140009190
   140004e6d:	lea    rdx,[rip+0x4314]        # 0x140009188
   140004e74:	lea    rcx,[rip+0x4309]        # 0x140009184
   140004e7b:	mov    QWORD PTR [rsp+0x20],rax
   140004e80:	call   QWORD PTR [rip+0x1362]        # 0x1400061e8
   140004e86:	mov    DWORD PTR [rip+0x430c],eax        # 0x140009198
   140004e8c:	test   eax,eax
   140004e8e:	jns    0x140004e9a
   140004e90:	mov    ecx,0x8
   140004e95:	call   0x140005262
   140004e9a:	add    rsp,0x38
   140004e9e:	ret    
   140004e9f:	int3   
   140004ea0:	rex push rdi
   140004ea2:	sub    rsp,0x20
   140004ea6:	mov    rax,QWORD PTR gs:0x30
   140004eaf:	mov    rcx,QWORD PTR [rax+0x8]
   140004eb3:	xor    edi,edi
   140004eb5:	xor    eax,eax
   140004eb7:	lock cmpxchg QWORD PTR [rip+0x48c0],rcx        # 0x140009780
   140004ec0:	je     0x140004ed0
   140004ec2:	cmp    rax,rcx
   140004ec5:	jne    0x140004ece
   140004ec7:	mov    edi,0x1
   140004ecc:	jmp    0x140004ed0
   140004ece:	jmp    0x140004eb5
   140004ed0:	mov    eax,DWORD PTR [rip+0x48b2]        # 0x140009788
   140004ed6:	cmp    eax,0x1
   140004ed9:	jne    0x140004ee5
   140004edb:	lea    ecx,[rax+0x1e]
   140004ede:	call   0x140005262
   140004ee3:	jmp    0x140004f24
   140004ee5:	mov    eax,DWORD PTR [rip+0x489d]        # 0x140009788
   140004eeb:	test   eax,eax
   140004eed:	jne    0x140004f1a
   140004eef:	mov    DWORD PTR [rip+0x488f],0x1        # 0x140009788
   140004ef9:	lea    rdx,[rip+0x1400]        # 0x140006300
   140004f00:	lea    rcx,[rip+0x13d9]        # 0x1400062e0
   140004f07:	call   0x140005460
   140004f0c:	test   eax,eax
   140004f0e:	je     0x140004f24
   140004f10:	mov    eax,0xff
   140004f15:	jmp    0x14000500a
   140004f1a:	mov    DWORD PTR [rip+0x4254],0x1        # 0x140009178
   140004f24:	mov    eax,DWORD PTR [rip+0x485e]        # 0x140009788
   140004f2a:	cmp    eax,0x1
   140004f2d:	jne    0x140004f4c
   140004f2f:	lea    rdx,[rip+0x13a2]        # 0x1400062d8
   140004f36:	lea    rcx,[rip+0x137b]        # 0x1400062b8
   140004f3d:	call   0x140005466
   140004f42:	mov    DWORD PTR [rip+0x483c],0x2        # 0x140009788
   140004f4c:	test   edi,edi
   140004f4e:	jne    0x140004f59
   140004f50:	xor    eax,eax
   140004f52:	xchg   QWORD PTR [rip+0x4827],rax        # 0x140009780
   140004f59:	cmp    QWORD PTR [rip+0x482f],0x0        # 0x140009790
   140004f61:	je     0x140004f85
   140004f63:	lea    rcx,[rip+0x4826]        # 0x140009790
   140004f6a:	call   0x1400052c0
   140004f6f:	test   eax,eax
   140004f71:	je     0x140004f85
   140004f73:	xor    r8d,r8d
   140004f76:	lea    edx,[r8+0x2]
   140004f7a:	xor    ecx,ecx
   140004f7c:	mov    rax,QWORD PTR [rip+0x480d]        # 0x140009790
   140004f83:	call   rax
   140004f85:	mov    rcx,QWORD PTR [rip+0x4204]        # 0x140009190
   140004f8c:	mov    rax,QWORD PTR [rip+0x129d]        # 0x140006230
   140004f93:	mov    QWORD PTR [rax],rcx
   140004f96:	mov    r8,QWORD PTR [rip+0x41f3]        # 0x140009190
   140004f9d:	mov    rdx,QWORD PTR [rip+0x41e4]        # 0x140009188
   140004fa4:	mov    ecx,DWORD PTR [rip+0x41da]        # 0x140009184
   140004faa:	call   0x140001530
   140004faf:	mov    DWORD PTR [rip+0x41c7],eax        # 0x14000917c
   140004fb5:	cmp    DWORD PTR [rip+0x41c4],0x0        # 0x140009180
   140004fbc:	jne    0x140004fc6
   140004fbe:	mov    ecx,eax
   140004fc0:	call   QWORD PTR [rip+0x1232]        # 0x1400061f8
   140004fc6:	cmp    DWORD PTR [rip+0x41ab],0x0        # 0x140009178
   140004fcd:	jne    0x140004fdb
   140004fcf:	call   QWORD PTR [rip+0x1233]        # 0x140006208
   140004fd5:	mov    eax,DWORD PTR [rip+0x41a1]        # 0x14000917c
   140004fdb:	jmp    0x14000500a
   140004fdd:	mov    DWORD PTR [rip+0x4199],eax        # 0x14000917c
   140004fe3:	cmp    DWORD PTR [rip+0x4196],0x0        # 0x140009180
   140004fea:	jne    0x140004ff5
   140004fec:	mov    ecx,eax
   140004fee:	call   QWORD PTR [rip+0x120c]        # 0x140006200
   140004ff4:	int3   
   140004ff5:	cmp    DWORD PTR [rip+0x417c],0x0        # 0x140009178
   140004ffc:	jne    0x14000500a
   140004ffe:	call   QWORD PTR [rip+0x1204]        # 0x140006208
   140005004:	mov    eax,DWORD PTR [rip+0x4172]        # 0x14000917c
   14000500a:	add    rsp,0x20
   14000500e:	pop    rdi
   14000500f:	ret    
   140005010:	sub    rsp,0x28
   140005014:	call   0x140005340
   140005019:	add    rsp,0x28
   14000501d:	jmp    0x140004ea0
   140005022:	jmp    QWORD PTR [rip+0x1178]        # 0x1400061a0
   140005028:	rex push rbx
   14000502a:	sub    rsp,0x20
   14000502e:	mov    rbx,rcx
   140005031:	call   QWORD PTR [rip+0x1079]        # 0x1400060b0
   140005037:	mov    ecx,0x1
   14000503c:	mov    DWORD PTR [rip+0x46ce],eax        # 0x140009710
   140005042:	call   0x14000546c
   140005047:	mov    rcx,rbx
   14000504a:	call   0x140005472
   14000504f:	cmp    DWORD PTR [rip+0x46ba],0x0        # 0x140009710
   140005056:	jne    0x140005062
   140005058:	mov    ecx,0x1
   14000505d:	call   0x14000546c
   140005062:	mov    ecx,0xc0000409
   140005067:	add    rsp,0x20
   14000506b:	pop    rbx
   14000506c:	jmp    0x140005478
   140005071:	int3   
   140005072:	int3   
   140005073:	int3   
   140005074:	mov    QWORD PTR [rsp+0x8],rcx
   140005079:	sub    rsp,0x38
   14000507d:	mov    ecx,0x17
   140005082:	call   0x140005496
   140005087:	test   eax,eax
   140005089:	je     0x140005092
   14000508b:	mov    ecx,0x2
   140005090:	int    0x29
   140005092:	lea    rcx,[rip+0x41a7]        # 0x140009240
   140005099:	call   0x14000547e
   14000509e:	mov    rax,QWORD PTR [rsp+0x38]
   1400050a3:	mov    QWORD PTR [rip+0x428e],rax        # 0x140009338
   1400050aa:	lea    rax,[rsp+0x38]
   1400050af:	add    rax,0x8
   1400050b3:	mov    QWORD PTR [rip+0x421e],rax        # 0x1400092d8
   1400050ba:	mov    rax,QWORD PTR [rip+0x4277]        # 0x140009338
   1400050c1:	mov    QWORD PTR [rip+0x40e8],rax        # 0x1400091b0
   1400050c8:	mov    rax,QWORD PTR [rsp+0x40]
   1400050cd:	mov    QWORD PTR [rip+0x41ec],rax        # 0x1400092c0
   1400050d4:	mov    DWORD PTR [rip+0x40c2],0xc0000409        # 0x1400091a0
   1400050de:	mov    DWORD PTR [rip+0x40bc],0x1        # 0x1400091a4
   1400050e8:	mov    DWORD PTR [rip+0x40c6],0x1        # 0x1400091b8
   1400050f2:	mov    eax,0x8
   1400050f7:	imul   rax,rax,0x0
   1400050fb:	lea    rcx,[rip+0x40be]        # 0x1400091c0
   140005102:	mov    QWORD PTR [rcx+rax*1],0x2
   14000510a:	mov    eax,0x8
   14000510f:	imul   rax,rax,0x0
   140005113:	mov    rcx,QWORD PTR [rip+0x3ee6]        # 0x140009000
   14000511a:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   14000511f:	mov    eax,0x8
   140005124:	imul   rax,rax,0x1
   140005128:	mov    rcx,QWORD PTR [rip+0x3ed9]        # 0x140009008
   14000512f:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140005134:	lea    rcx,[rip+0x12bd]        # 0x1400063f8
   14000513b:	call   0x140005028
   140005140:	add    rsp,0x38
   140005144:	ret    
   140005145:	int3   
   140005146:	jmp    QWORD PTR [rip+0x105c]        # 0x1400061a8
   14000514c:	jmp    QWORD PTR [rip+0x105e]        # 0x1400061b0
   140005152:	jmp    QWORD PTR [rip+0x1068]        # 0x1400061c0
   140005158:	jmp    QWORD PTR [rip+0x106a]        # 0x1400061c8
   14000515e:	int3   
   14000515f:	int3   
   140005160:	mov    rax,rsp
   140005163:	mov    QWORD PTR [rax+0x20],r9
   140005167:	mov    DWORD PTR [rax+0x18],r8d
   14000516b:	mov    QWORD PTR [rax+0x10],rdx
   14000516f:	push   rbx
   140005170:	push   rsi
   140005171:	push   rdi
   140005172:	push   r14
   140005174:	sub    rsp,0x38
   140005178:	mov    r14,r9
   14000517b:	movsxd rdi,r8d
   14000517e:	mov    rsi,rdx
   140005181:	and    DWORD PTR [rax-0x38],0x0
   140005185:	mov    rbx,rdi
   140005188:	imul   rbx,rdx
   14000518c:	add    rbx,rcx
   14000518f:	mov    QWORD PTR [rax+0x8],rbx
   140005193:	dec    edi
   140005195:	mov    DWORD PTR [rsp+0x70],edi
   140005199:	js     0x1400051ab
   14000519b:	sub    rbx,rsi
   14000519e:	mov    QWORD PTR [rsp+0x60],rbx
   1400051a3:	mov    rcx,rbx
   1400051a6:	call   r14
   1400051a9:	jmp    0x140005193
   1400051ab:	mov    DWORD PTR [rsp+0x20],0x1
   1400051b3:	add    rsp,0x38
   1400051b7:	pop    r14
   1400051b9:	pop    rdi
   1400051ba:	pop    rsi
   1400051bb:	pop    rbx
   1400051bc:	ret    
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400051c5:	mov    DWORD PTR [rsp+0x18],r8d
   1400051ca:	mov    QWORD PTR [rsp+0x8],rcx
   1400051cf:	push   rsi
   1400051d0:	push   rdi
   1400051d1:	push   r14
   1400051d3:	sub    rsp,0x40
   1400051d7:	mov    rsi,r9
   1400051da:	mov    edi,r8d
   1400051dd:	mov    r14,rdx
   1400051e0:	mov    rbx,rcx
   1400051e3:	dec    edi
   1400051e5:	mov    DWORD PTR [rsp+0x70],edi
   1400051e9:	js     0x1400051fa
   1400051eb:	sub    rbx,r14
   1400051ee:	mov    QWORD PTR [rsp+0x60],rbx
   1400051f3:	mov    rcx,rbx
   1400051f6:	call   rsi
   1400051f8:	jmp    0x1400051e3
   1400051fa:	jmp    0x1400051fc
   1400051fc:	mov    rbx,QWORD PTR [rsp+0x68]
   140005201:	add    rsp,0x40
   140005205:	pop    r14
   140005207:	pop    rdi
   140005208:	pop    rsi
   140005209:	ret    
   14000520a:	int3   
   14000520b:	int3   
   14000520c:	sub    rsp,0x28
   140005210:	mov    rax,QWORD PTR [rcx]
   140005213:	cmp    DWORD PTR [rax],0xe06d7363
   140005219:	jne    0x140005237
   14000521b:	cmp    DWORD PTR [rax+0x18],0x4
   14000521f:	jne    0x140005237
   140005221:	mov    ecx,DWORD PTR [rax+0x20]
   140005224:	lea    eax,[rcx-0x19930520]
   14000522a:	cmp    eax,0x2
   14000522d:	jbe    0x14000523e
   14000522f:	cmp    ecx,0x1994000
   140005235:	je     0x14000523e
   140005237:	xor    eax,eax
   140005239:	add    rsp,0x28
   14000523d:	ret    
   14000523e:	call   0x140005484
   140005243:	int3   
   140005244:	sub    rsp,0x28
   140005248:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14000520c
   14000524f:	call   0x140005490
   140005254:	xor    eax,eax
   140005256:	add    rsp,0x28
   14000525a:	ret    
   14000525b:	int3   
   14000525c:	jmp    QWORD PTR [rip+0x102e]        # 0x140006290
   140005262:	jmp    QWORD PTR [rip+0xf78]        # 0x1400061e0
   140005268:	int3   
   140005269:	int3   
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	int3   
   14000526d:	int3   
   14000526e:	int3   
   14000526f:	int3   
   140005270:	movsxd r8,DWORD PTR [rcx+0x3c]
   140005274:	xor    r9d,r9d
   140005277:	mov    r10,rdx
   14000527a:	add    r8,rcx
   14000527d:	movzx  eax,WORD PTR [r8+0x14]
   140005282:	movzx  r11d,WORD PTR [r8+0x6]
   140005287:	add    rax,0x18
   14000528b:	add    rax,r8
   14000528e:	test   r11d,r11d
   140005291:	je     0x1400052b1
   140005293:	mov    edx,DWORD PTR [rax+0xc]
   140005296:	cmp    r10,rdx
   140005299:	jb     0x1400052a5
   14000529b:	mov    ecx,DWORD PTR [rax+0x8]
   14000529e:	add    ecx,edx
   1400052a0:	cmp    r10,rcx
   1400052a3:	jb     0x1400052b3
   1400052a5:	inc    r9d
   1400052a8:	add    rax,0x28
   1400052ac:	cmp    r9d,r11d
   1400052af:	jb     0x140005293
   1400052b1:	xor    eax,eax
   1400052b3:	ret    
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	int3   
   1400052b7:	int3   
   1400052b8:	int3   
   1400052b9:	int3   
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400052c5:	push   rdi
   1400052c6:	sub    rsp,0x20
   1400052ca:	mov    rbx,rcx
   1400052cd:	lea    rdi,[rip+0xffffffffffffad2c]        # 0x140000000
   1400052d4:	mov    rcx,rdi
   1400052d7:	call   0x140005310
   1400052dc:	test   eax,eax
   1400052de:	je     0x140005302
   1400052e0:	sub    rbx,rdi
   1400052e3:	mov    rdx,rbx
   1400052e6:	mov    rcx,rdi
   1400052e9:	call   0x140005270
   1400052ee:	test   rax,rax
   1400052f1:	je     0x140005302
   1400052f3:	mov    eax,DWORD PTR [rax+0x24]
   1400052f6:	shr    eax,0x1f
   1400052f9:	not    eax
   1400052fb:	and    eax,0x1
   1400052fe:	jmp    0x140005302
   140005300:	xor    eax,eax
   140005302:	mov    rbx,QWORD PTR [rsp+0x30]
   140005307:	add    rsp,0x20
   14000530b:	pop    rdi
   14000530c:	ret    
   14000530d:	int3   
   14000530e:	int3   
   14000530f:	int3   
   140005310:	mov    rax,rcx
   140005313:	mov    ecx,0x5a4d
   140005318:	cmp    WORD PTR [rax],cx
   14000531b:	je     0x140005320
   14000531d:	xor    eax,eax
   14000531f:	ret    
   140005320:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005324:	add    rcx,rax
   140005327:	xor    eax,eax
   140005329:	cmp    DWORD PTR [rcx],0x4550
   14000532f:	jne    0x14000533d
   140005331:	mov    edx,0x20b
   140005336:	cmp    WORD PTR [rcx+0x18],dx
   14000533a:	sete   al
   14000533d:	ret    
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    QWORD PTR [rsp+0x20],rbx
   140005345:	push   rbp
   140005346:	mov    rbp,rsp
   140005349:	sub    rsp,0x20
   14000534d:	mov    rax,QWORD PTR [rip+0x3cac]        # 0x140009000
   140005354:	and    QWORD PTR [rbp+0x18],0x0
   140005359:	movabs rbx,0x2b992ddfa232
   140005363:	cmp    rax,rbx
   140005366:	jne    0x1400053d7
   140005368:	lea    rcx,[rbp+0x18]
   14000536c:	call   QWORD PTR [rip+0xd66]        # 0x1400060d8
   140005372:	mov    rax,QWORD PTR [rbp+0x18]
   140005376:	mov    QWORD PTR [rbp+0x10],rax
   14000537a:	call   QWORD PTR [rip+0xd98]        # 0x140006118
   140005380:	mov    eax,eax
   140005382:	xor    QWORD PTR [rbp+0x10],rax
   140005386:	call   QWORD PTR [rip+0xd44]        # 0x1400060d0
   14000538c:	lea    rcx,[rbp+0x20]
   140005390:	mov    eax,eax
   140005392:	xor    QWORD PTR [rbp+0x10],rax
   140005396:	call   QWORD PTR [rip+0xd64]        # 0x140006100
   14000539c:	mov    eax,DWORD PTR [rbp+0x20]
   14000539f:	shl    rax,0x20
   1400053a3:	lea    rcx,[rbp+0x10]
   1400053a7:	xor    rax,QWORD PTR [rbp+0x20]
   1400053ab:	xor    rax,QWORD PTR [rbp+0x10]
   1400053af:	xor    rax,rcx
   1400053b2:	movabs rcx,0xffffffffffff
   1400053bc:	and    rax,rcx
   1400053bf:	movabs rcx,0x2b992ddfa233
   1400053c9:	cmp    rax,rbx
   1400053cc:	cmove  rax,rcx
   1400053d0:	mov    QWORD PTR [rip+0x3c29],rax        # 0x140009000
   1400053d7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400053dc:	not    rax
   1400053df:	mov    QWORD PTR [rip+0x3c22],rax        # 0x140009008
   1400053e6:	add    rsp,0x20
   1400053ea:	pop    rbp
   1400053eb:	ret    
   1400053ec:	xor    eax,eax
   1400053ee:	ret    
   1400053ef:	int3   
   1400053f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053f5:	push   rdi
   1400053f6:	sub    rsp,0x20
   1400053fa:	lea    rbx,[rip+0x18d7]        # 0x140006cd8
   140005401:	lea    rdi,[rip+0x18d0]        # 0x140006cd8
   140005408:	jmp    0x140005418
   14000540a:	mov    rax,QWORD PTR [rbx]
   14000540d:	test   rax,rax
   140005410:	je     0x140005414
   140005412:	call   rax
   140005414:	add    rbx,0x8
   140005418:	cmp    rbx,rdi
   14000541b:	jb     0x14000540a
   14000541d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005422:	add    rsp,0x20
   140005426:	pop    rdi
   140005427:	ret    
   140005428:	mov    QWORD PTR [rsp+0x8],rbx
   14000542d:	push   rdi
   14000542e:	sub    rsp,0x20
   140005432:	lea    rbx,[rip+0x18af]        # 0x140006ce8
   140005439:	lea    rdi,[rip+0x18a8]        # 0x140006ce8
   140005440:	jmp    0x140005450
   140005442:	mov    rax,QWORD PTR [rbx]
   140005445:	test   rax,rax
   140005448:	je     0x14000544c
   14000544a:	call   rax
   14000544c:	add    rbx,0x8
   140005450:	cmp    rbx,rdi
   140005453:	jb     0x140005442
   140005455:	mov    rbx,QWORD PTR [rsp+0x30]
   14000545a:	add    rsp,0x20
   14000545e:	pop    rdi
   14000545f:	ret    
   140005460:	jmp    QWORD PTR [rip+0xdba]        # 0x140006220
   140005466:	jmp    QWORD PTR [rip+0xdbc]        # 0x140006228
   14000546c:	jmp    QWORD PTR [rip+0xdd6]        # 0x140006248
   140005472:	jmp    QWORD PTR [rip+0xdd8]        # 0x140006250
   140005478:	jmp    QWORD PTR [rip+0xdda]        # 0x140006258
   14000547e:	jmp    QWORD PTR [rip+0xddc]        # 0x140006260
   140005484:	jmp    QWORD PTR [rip+0xdde]        # 0x140006268
   14000548a:	jmp    QWORD PTR [rip+0xde0]        # 0x140006270
   140005490:	jmp    QWORD PTR [rip+0xde2]        # 0x140006278
   140005496:	jmp    QWORD PTR [rip+0xc6c]        # 0x140006108
   14000549c:	jmp    QWORD PTR [rip+0xdf6]        # 0x140006298
   1400054a2:	jmp    QWORD PTR [rip+0xe00]        # 0x1400062a8
   1400054a8:	mov    rax,rsp
   1400054ab:	mov    QWORD PTR [rax+0x8],rbx
   1400054af:	mov    QWORD PTR [rax+0x10],rbp
   1400054b3:	mov    QWORD PTR [rax+0x18],rsi
   1400054b7:	mov    QWORD PTR [rax+0x20],rdi
   1400054bb:	push   r14
   1400054bd:	sub    rsp,0x20
   1400054c1:	mov    rbx,QWORD PTR [r9+0x38]
   1400054c5:	mov    rsi,rdx
   1400054c8:	mov    r14,r8
   1400054cb:	mov    rbp,rcx
   1400054ce:	lea    r8,[rbx+0x4]
   1400054d2:	mov    rdx,r9
   1400054d5:	mov    rcx,rsi
   1400054d8:	mov    rdi,r9
   1400054db:	call   0x140005538
   1400054e0:	mov    r11d,DWORD PTR [rbx+0x4]
   1400054e4:	mov    r10d,DWORD PTR [rbp+0x4]
   1400054e8:	mov    eax,r11d
   1400054eb:	and    r11d,0x2
   1400054ef:	mov    r8d,0x1
   1400054f5:	and    eax,r8d
   1400054f8:	and    r10b,0x66
   1400054fc:	cmove  r11d,eax
   140005500:	test   r11d,r11d
   140005503:	je     0x140005519
   140005505:	mov    r9,rdi
   140005508:	mov    r8,r14
   14000550b:	mov    rdx,rsi
   14000550e:	mov    rcx,rbp
   140005511:	call   0x1400054a2
   140005516:	mov    r8d,eax
   140005519:	mov    rbx,QWORD PTR [rsp+0x30]
   14000551e:	mov    rbp,QWORD PTR [rsp+0x38]
   140005523:	mov    rsi,QWORD PTR [rsp+0x40]
   140005528:	mov    rdi,QWORD PTR [rsp+0x48]
   14000552d:	mov    eax,r8d
   140005530:	add    rsp,0x20
   140005534:	pop    r14
   140005536:	ret    
   140005537:	int3   
   140005538:	rex push rbx
   14000553a:	sub    rsp,0x20
   14000553e:	mov    r11d,DWORD PTR [r8]
   140005541:	mov    rbx,rdx
   140005544:	mov    r9,rcx
   140005547:	and    r11d,0xfffffff8
   14000554b:	test   BYTE PTR [r8],0x4
   14000554f:	mov    r10,rcx
   140005552:	je     0x140005567
   140005554:	mov    eax,DWORD PTR [r8+0x8]
   140005558:	movsxd r10,DWORD PTR [r8+0x4]
   14000555c:	neg    eax
   14000555e:	add    r10,rcx
   140005561:	movsxd rcx,eax
   140005564:	and    r10,rcx
   140005567:	movsxd rax,r11d
   14000556a:	mov    rdx,QWORD PTR [rax+r10*1]
   14000556e:	mov    rax,QWORD PTR [rbx+0x10]
   140005572:	mov    ecx,DWORD PTR [rax+0x8]
   140005575:	add    rcx,QWORD PTR [rbx+0x8]
   140005579:	test   BYTE PTR [rcx+0x3],0xf
   14000557d:	je     0x14000558b
   14000557f:	movzx  eax,BYTE PTR [rcx+0x3]
   140005583:	and    eax,0xfffffff0
   140005586:	cdqe   
   140005588:	add    r9,rax
   14000558b:	xor    r9,rdx
   14000558e:	mov    rcx,r9
   140005591:	add    rsp,0x20
   140005595:	pop    rbx
   140005596:	jmp    0x140004bc0
   14000559b:	int3   
   14000559c:	int3   
   14000559d:	int3   
   14000559e:	int3   
   14000559f:	int3   
   1400055a0:	lea    rcx,[rdx+0x128]
   1400055a7:	jmp    0x140002e30
   1400055ac:	lea    rcx,[rdx+0x120]
   1400055b3:	jmp    0x140002e30
   1400055b8:	lea    rcx,[rdx+0x120]
   1400055bf:	jmp    0x140002e30
   1400055c4:	int3   
   1400055c5:	int3   
   1400055c6:	int3   
   1400055c7:	int3   
   1400055c8:	int3   
   1400055c9:	int3   
   1400055ca:	int3   
   1400055cb:	int3   
   1400055cc:	int3   
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	rex push rbp
   1400055d2:	sub    rsp,0x20
   1400055d6:	mov    rbp,rdx
   1400055d9:	mov    eax,DWORD PTR [rbp+0x30]
   1400055dc:	and    eax,0x1
   1400055df:	test   eax,eax
   1400055e1:	je     0x1400055f3
   1400055e3:	and    DWORD PTR [rbp+0x30],0xfffffffe
   1400055e7:	mov    rcx,QWORD PTR [rbp+0xa0]
   1400055ee:	call   0x140002e30
   1400055f3:	add    rsp,0x20
   1400055f7:	pop    rbp
   1400055f8:	ret    
   1400055f9:	lea    rcx,[rdx+0x40]
   140005600:	jmp    0x1400011d0
   140005605:	int3   
   140005606:	int3   
   140005607:	int3   
   140005608:	int3   
   140005609:	int3   
   14000560a:	int3   
   14000560b:	int3   
   14000560c:	int3   
   14000560d:	int3   
   14000560e:	int3   
   14000560f:	int3   
   140005610:	rex push rbp
   140005612:	sub    rsp,0x20
   140005616:	mov    rbp,rdx
   140005619:	mov    eax,DWORD PTR [rbp+0x20]
   14000561c:	and    eax,0x1
   14000561f:	test   eax,eax
   140005621:	je     0x140005633
   140005623:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140005627:	mov    rcx,QWORD PTR [rbp+0xa0]
   14000562e:	call   0x140003130
   140005633:	add    rsp,0x20
   140005637:	pop    rbp
   140005638:	ret    
   140005639:	lea    rcx,[rdx+0xb8]
   140005640:	jmp    0x140002e30
   140005645:	rex push rbp
   140005647:	sub    rsp,0x20
   14000564b:	mov    rbp,rdx
   14000564e:	mov    rdx,QWORD PTR [rbp+0x38]
   140005652:	mov    rcx,QWORD PTR [rbp+0x40]
   140005656:	call   0x140001040
   14000565b:	add    rsp,0x20
   14000565f:	pop    rbp
   140005660:	ret    
   140005661:	rex push rbp
   140005663:	sub    rsp,0x20
   140005667:	mov    rbp,rdx
   14000566a:	mov    rdx,QWORD PTR [rbp+0x40]
   14000566e:	mov    rcx,QWORD PTR [rbp+0x38]
   140005672:	call   0x140001040
   140005677:	add    rsp,0x20
   14000567b:	pop    rbp
   14000567c:	ret    
   14000567d:	lea    rcx,[rdx+0x28]
   140005684:	jmp    0x140002e30
   140005689:	int3   
   14000568a:	int3   
   14000568b:	int3   
   14000568c:	int3   
   14000568d:	int3   
   14000568e:	int3   
   14000568f:	int3   
   140005690:	lea    rcx,[rdx+0x48]
   140005697:	jmp    0x140003130
   14000569c:	lea    rcx,[rdx+0x30]
   1400056a3:	jmp    0x140003130
   1400056a8:	rex push rbp
   1400056aa:	sub    rsp,0x20
   1400056ae:	mov    rbp,rdx
   1400056b1:	mov    eax,DWORD PTR [rbp+0xd8]
   1400056b7:	and    eax,0x1
   1400056ba:	test   eax,eax
   1400056bc:	je     0x1400056ce
   1400056be:	and    DWORD PTR [rbp+0xd8],0xfffffffe
   1400056c5:	lea    rcx,[rbp+0x60]
   1400056c9:	call   0x140002e30
   1400056ce:	add    rsp,0x20
   1400056d2:	pop    rbp
   1400056d3:	ret    
   1400056d4:	lea    rcx,[rdx+0xe0]
   1400056db:	jmp    0x140002e30
   1400056e0:	rex push rbp
   1400056e2:	sub    rsp,0x20
   1400056e6:	mov    rbp,rdx
   1400056e9:	mov    eax,DWORD PTR [rbp+0xd8]
   1400056ef:	and    eax,0x2
   1400056f2:	test   eax,eax
   1400056f4:	je     0x140005709
   1400056f6:	and    DWORD PTR [rbp+0xd8],0xfffffffd
   1400056fd:	lea    rcx,[rbp+0xe0]
   140005704:	call   0x140002e30
   140005709:	add    rsp,0x20
   14000570d:	pop    rbp
   14000570e:	ret    
   14000570f:	lea    rcx,[rdx+0x28]
   140005716:	jmp    0x140002e30
   14000571b:	rex push rbp
   14000571d:	sub    rsp,0x20
   140005721:	mov    rbp,rdx
   140005724:	mov    eax,DWORD PTR [rbp+0xd8]
   14000572a:	and    eax,0x4
   14000572d:	test   eax,eax
   14000572f:	je     0x140005741
   140005731:	and    DWORD PTR [rbp+0xd8],0xfffffffb
   140005738:	lea    rcx,[rbp+0x68]
   14000573c:	call   0x140002e30
   140005741:	add    rsp,0x20
   140005745:	pop    rbp
   140005746:	ret    
   140005747:	lea    rcx,[rdx+0xe8]
   14000574e:	jmp    0x140002e30
   140005753:	rex push rbp
   140005755:	sub    rsp,0x20
   140005759:	mov    rbp,rdx
   14000575c:	mov    eax,DWORD PTR [rbp+0xd8]
   140005762:	and    eax,0x8
   140005765:	test   eax,eax
   140005767:	je     0x14000577c
   140005769:	and    DWORD PTR [rbp+0xd8],0xfffffff7
   140005770:	lea    rcx,[rbp+0xe8]
   140005777:	call   0x140002e30
   14000577c:	add    rsp,0x20
   140005780:	pop    rbp
   140005781:	ret    
   140005782:	lea    rcx,[rdx+0x20]
   140005789:	jmp    0x140002e30
   14000578e:	int3   
   14000578f:	int3   
   140005790:	lea    rcx,[rdx+0x68]
   140005797:	jmp    0x1400011d0
   14000579c:	lea    rcx,[rdx+0x40]
   1400057a3:	jmp    0x140002e30
   1400057a8:	lea    rcx,[rdx+0x80]
   1400057af:	jmp    0x1400011d0
   1400057b4:	lea    rcx,[rdx+0x48]
   1400057bb:	jmp    0x140002e30
   1400057c0:	lea    rcx,[rdx+0x98]
   1400057c7:	jmp    0x140002670
   1400057cc:	int3   
   1400057cd:	int3   
   1400057ce:	int3   
   1400057cf:	int3   
   1400057d0:	rex push rbp
   1400057d2:	sub    rsp,0x20
   1400057d6:	mov    rbp,rdx
   1400057d9:	mov    eax,DWORD PTR [rbp+0x20]
   1400057dc:	and    eax,0x1
   1400057df:	test   eax,eax
   1400057e1:	je     0x1400057f0
   1400057e3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   1400057e7:	mov    rcx,QWORD PTR [rbp+0x70]
   1400057eb:	call   0x140002760
   1400057f0:	add    rsp,0x20
   1400057f4:	pop    rbp
   1400057f5:	ret    
   1400057f6:	int3   
   1400057f7:	int3   
   1400057f8:	int3   
   1400057f9:	int3   
   1400057fa:	int3   
   1400057fb:	int3   
   1400057fc:	int3   
   1400057fd:	int3   
   1400057fe:	int3   
   1400057ff:	int3   
   140005800:	lea    rcx,[rdx+0x48]
   140005807:	jmp    0x140002760
   14000580c:	lea    rcx,[rdx+0x20]
   140005813:	jmp    0x140002e30
   140005818:	lea    rcx,[rdx+0x98]
   14000581f:	jmp    0x140002e30
   140005824:	lea    rcx,[rdx+0xa0]
   14000582b:	jmp    0x140002e30
   140005830:	lea    rcx,[rdx+0xa8]
   140005837:	jmp    0x140002e30
   14000583c:	lea    rcx,[rdx+0x38]
   140005843:	jmp    0x140002e30
   140005848:	int3   
   140005849:	int3   
   14000584a:	int3   
   14000584b:	int3   
   14000584c:	int3   
   14000584d:	int3   
   14000584e:	int3   
   14000584f:	int3   
   140005850:	lea    rcx,[rdx+0x50]
   140005857:	jmp    0x140002e30
   14000585c:	int3   
   14000585d:	int3   
   14000585e:	int3   
   14000585f:	int3   
   140005860:	rex push rbp
   140005862:	sub    rsp,0x20
   140005866:	mov    rbp,rdx
   140005869:	mov    eax,DWORD PTR [rbp+0x30]
   14000586c:	and    eax,0x1
   14000586f:	test   eax,eax
   140005871:	je     0x140005880
   140005873:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140005877:	mov    rcx,QWORD PTR [rbp+0x50]
   14000587b:	call   0x140002e30
   140005880:	add    rsp,0x20
   140005884:	pop    rbp
   140005885:	ret    
   140005886:	int3   
   140005887:	int3   
   140005888:	int3   
   140005889:	int3   
   14000588a:	int3   
   14000588b:	int3   
   14000588c:	int3   
   14000588d:	int3   
   14000588e:	int3   
   14000588f:	int3   
   140005890:	mov    QWORD PTR [rsp+0x10],rdx
   140005895:	push   rbp
   140005896:	sub    rsp,0x30
   14000589a:	mov    rbp,rdx
   14000589d:	mov    rcx,QWORD PTR [rbp+0x68]
   1400058a1:	call   QWORD PTR [rip+0x9e1]        # 0x140006288
   1400058a7:	xor    edx,edx
   1400058a9:	xor    ecx,ecx
   1400058ab:	call   0x14000549c
   1400058b0:	nop
   1400058b1:	int3   
   1400058b2:	int3   
   1400058b3:	int3   
   1400058b4:	int3   
   1400058b5:	int3   
   1400058b6:	int3   
   1400058b7:	int3   
   1400058b8:	int3   
   1400058b9:	int3   
   1400058ba:	int3   
   1400058bb:	int3   
   1400058bc:	int3   
   1400058bd:	int3   
   1400058be:	int3   
   1400058bf:	int3   
   1400058c0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400058c7:	jmp    0x140002e30
   1400058cc:	int3   
   1400058cd:	int3   
   1400058ce:	int3   
   1400058cf:	int3   
   1400058d0:	rex push rbp
   1400058d2:	sub    rsp,0x20
   1400058d6:	mov    rbp,rdx
   1400058d9:	mov    rdx,QWORD PTR [rbp+0x58]
   1400058dd:	mov    rcx,QWORD PTR [rbp+0x28]
   1400058e1:	call   0x140001040
   1400058e6:	add    rsp,0x20
   1400058ea:	pop    rbp
   1400058eb:	ret    
   1400058ec:	mov    rcx,QWORD PTR [rdx+0x28]
   1400058f3:	jmp    0x140002e30
   1400058f8:	mov    QWORD PTR [rsp+0x10],rdx
   1400058fd:	push   rbp
   1400058fe:	sub    rsp,0x20
   140005902:	mov    rbp,rdx
   140005905:	mov    rcx,QWORD PTR [rbp+0x50]
   140005909:	call   QWORD PTR [rip+0x979]        # 0x140006288
   14000590f:	xor    edx,edx
   140005911:	xor    ecx,ecx
   140005913:	call   0x14000549c
   140005918:	nop
   140005919:	int3   
   14000591a:	int3   
   14000591b:	int3   
   14000591c:	int3   
   14000591d:	int3   
   14000591e:	int3   
   14000591f:	int3   
   140005920:	mov    QWORD PTR [rsp+0x10],rdx
   140005925:	push   rbp
   140005926:	sub    rsp,0x30
   14000592a:	mov    rbp,rdx
   14000592d:	mov    rdx,QWORD PTR [rbp+0x80]
   140005934:	call   0x1400045f0
   140005939:	xor    edx,edx
   14000593b:	xor    ecx,ecx
   14000593d:	call   0x14000549c
   140005942:	nop
   140005943:	int3   
   140005944:	int3   
   140005945:	int3   
   140005946:	int3   
   140005947:	int3   
   140005948:	int3   
   140005949:	int3   
   14000594a:	int3   
   14000594b:	int3   
   14000594c:	int3   
   14000594d:	int3   
   14000594e:	int3   
   14000594f:	int3   
   140005950:	rex push rbp
   140005952:	sub    rsp,0x20
   140005956:	mov    rbp,rdx
   140005959:	mov    rdx,QWORD PTR [rbp+0x70]
   14000595d:	mov    rcx,QWORD PTR [rbp+0x60]
   140005961:	call   0x140001040
   140005966:	add    rsp,0x20
   14000596a:	pop    rbp
   14000596b:	ret    
   14000596c:	mov    QWORD PTR [rsp+0x10],rdx
   140005971:	push   rbx
   140005972:	push   rbp
   140005973:	push   rdi
   140005974:	sub    rsp,0x20
   140005978:	mov    rbp,rdx
   14000597b:	mov    rbx,QWORD PTR [rbp+0x78]
   14000597f:	mov    rdi,QWORD PTR [rbp+0x70]
   140005983:	cmp    rbx,rdi
   140005986:	je     0x1400059b0
   140005988:	nop    DWORD PTR [rax+rax*1+0x0]
   140005990:	mov    rdx,QWORD PTR [rbx]
   140005993:	sub    rdx,0x18
   140005997:	lock add DWORD PTR [rdx+0x10],0xffffffff
   14000599c:	jg     0x1400059a7
   14000599e:	mov    rcx,QWORD PTR [rdx]
   1400059a1:	mov    rax,QWORD PTR [rcx]
   1400059a4:	call   QWORD PTR [rax+0x8]
   1400059a7:	add    rbx,0x8
   1400059ab:	cmp    rbx,rdi
   1400059ae:	jne    0x140005990
   1400059b0:	xor    edx,edx
   1400059b2:	xor    ecx,ecx
   1400059b4:	call   0x14000549c
   1400059b9:	nop
   1400059ba:	rex push rbp
   1400059bc:	sub    rsp,0x20
   1400059c0:	mov    rbp,rdx
   1400059c3:	mov    ecx,0x8
   1400059c8:	call   0x14000514c
   1400059cd:	nop
   1400059ce:	add    rsp,0x20
   1400059d2:	pop    rbp
   1400059d3:	ret    
   1400059d4:	int3   
   1400059d5:	rex push rbp
   1400059d7:	sub    rsp,0x20
   1400059db:	mov    rbp,rdx
   1400059de:	mov    rax,QWORD PTR [rcx]
   1400059e1:	mov    rdx,rcx
   1400059e4:	mov    ecx,DWORD PTR [rax]
   1400059e6:	call   0x14000525c
   1400059eb:	nop
   1400059ec:	add    rsp,0x20
   1400059f0:	pop    rbp
   1400059f1:	ret    
   1400059f2:	int3   
   1400059f3:	rex push rbp
   1400059f5:	sub    rsp,0x20
   1400059f9:	mov    rbp,rdx
   1400059fc:	cmp    DWORD PTR [rbp+0x20],0x0
   140005a00:	jne    0x140005a18
   140005a02:	mov    r9,QWORD PTR [rbp+0x78]
   140005a06:	mov    r8d,DWORD PTR [rbp+0x70]
   140005a0a:	mov    rdx,QWORD PTR [rbp+0x68]
   140005a0e:	mov    rcx,QWORD PTR [rbp+0x60]
   140005a12:	call   0x1400051c0
   140005a17:	nop
   140005a18:	add    rsp,0x20
   140005a1c:	pop    rbp
   140005a1d:	ret    
   140005a1e:	int3   
   140005a1f:	rex push rbp
   140005a21:	sub    rsp,0x20
   140005a25:	mov    rbp,rdx
   140005a28:	mov    QWORD PTR [rbp+0x38],rcx
   140005a2c:	mov    QWORD PTR [rbp+0x28],rcx
   140005a30:	mov    rax,QWORD PTR [rbp+0x28]
   140005a34:	mov    rcx,QWORD PTR [rax]
   140005a37:	mov    QWORD PTR [rbp+0x30],rcx
   140005a3b:	mov    rax,QWORD PTR [rbp+0x30]
   140005a3f:	cmp    DWORD PTR [rax],0xe06d7363
   140005a45:	je     0x140005a53
   140005a47:	mov    DWORD PTR [rbp+0x20],0x0
   140005a4e:	mov    eax,DWORD PTR [rbp+0x20]
   140005a51:	jmp    0x140005a59
   140005a53:	call   0x140005484
   140005a58:	nop
   140005a59:	add    rsp,0x20
   140005a5d:	pop    rbp
   140005a5e:	ret    
   140005a5f:	int3   
   140005a60:	rex push rbp
   140005a62:	sub    rsp,0x20
   140005a66:	mov    rbp,rdx
   140005a69:	mov    rax,QWORD PTR [rcx]
   140005a6c:	xor    ecx,ecx
   140005a6e:	cmp    DWORD PTR [rax],0xc0000005
   140005a74:	sete   cl
   140005a77:	mov    eax,ecx
   140005a79:	add    rsp,0x20
   140005a7d:	pop    rbp
   140005a7e:	ret    
   140005a7f:	int3   
   140005a80:	lea    rax,[rip+0xcf9]        # 0x140006780
   140005a87:	mov    BYTE PTR [rip+0x3cea],0x0        # 0x140009778
   140005a8e:	mov    QWORD PTR [rip+0x3cb3],rax        # 0x140009748
   140005a95:	ret    
   140005a96:	int3   
   140005a97:	int3   
   140005a98:	int3   
   140005a99:	int3   
   140005a9a:	int3   
   140005a9b:	int3   
   140005a9c:	int3   
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	cmp    BYTE PTR [rip+0x3c99],0x0        # 0x140009740
   140005aa7:	lea    rax,[rip+0xca2]        # 0x140006750
   140005aae:	mov    QWORD PTR [rip+0x3c7b],rax        # 0x140009730
   140005ab5:	je     0x140005aca
   140005ab7:	mov    rcx,QWORD PTR [rip+0x3c7a]        # 0x140009738
   140005abe:	test   rcx,rcx
   140005ac1:	je     0x140005aca
   140005ac3:	rex.W jmp QWORD PTR [rip+0x58e]        # 0x140006058
   140005aca:	ret    
   140005acb:	int3   
   140005acc:	lea    rcx,[rip+0x363d]        # 0x140009110
   140005ad3:	jmp    0x140004af8

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	xchg   esp,eax
   140006001:	jle    0x140006003
   140006003:	add    BYTE PTR [rax],al
   140006005:	add    BYTE PTR [rax],al
   140006007:	add    BYTE PTR [rsi+rdi*2+0x0],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	jo     0x140006090
   140006012:	add    BYTE PTR [rax],al
   140006014:	add    BYTE PTR [rax],al
   140006016:	add    BYTE PTR [rax],al
   140006018:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006019:	jle    0x14000601b
	...
   140006027:	add    dh,ch
   140006029:	jl     0x14000602b
   14000602b:	add    BYTE PTR [rax],al
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    BYTE PTR [rax],al
   140006031:	jge    0x140006033
   140006033:	add    BYTE PTR [rax],al
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    BYTE PTR [rdi*2+0x0],cl
   14000603e:	add    BYTE PTR [rax],al
   140006040:	sbb    BYTE PTR [rbp+0x0],bh
   140006043:	add    BYTE PTR [rax],al
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rsi],ch
   140006049:	jge    0x14000604b
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rax+0x7d],al
   140006052:	add    BYTE PTR [rax],al
   140006054:	add    BYTE PTR [rax],al
   140006056:	add    BYTE PTR [rax],al
   140006058:	push   rdx
   140006059:	jge    0x14000605b
   14000605b:	add    BYTE PTR [rax],al
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rax+0x7d],ah
   140006062:	add    BYTE PTR [rax],al
   140006064:	add    BYTE PTR [rax],al
   140006066:	add    BYTE PTR [rax],al
   140006068:	jbe    0x1400060e7
   14000606a:	add    BYTE PTR [rax],al
   14000606c:	add    BYTE PTR [rax],al
   14000606e:	add    BYTE PTR [rax],al
   140006070:	xchg   esp,eax
   140006071:	jge    0x140006073
   140006073:	add    BYTE PTR [rax],al
   140006075:	add    BYTE PTR [rax],al
   140006077:	add    BYTE PTR [rsi+0x7d],ah
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    dh,bl
   140006081:	jl     0x140006083
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rsi+0x7d],dh
   14000608d:	add    BYTE PTR [rax],al
   14000608f:	add    dl,al
   140006091:	jge    0x140006093
   140006093:	add    BYTE PTR [rax],al
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    dl,dl
   140006099:	jge    0x14000609b
   14000609b:	add    BYTE PTR [rax],al
   14000609d:	add    BYTE PTR [rax],al
   14000609f:	add    dl,ah
   1400060a1:	jge    0x1400060a3
   1400060a3:	add    BYTE PTR [rax],al
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    dl,bh
   1400060a9:	jge    0x1400060ab
   1400060ab:	add    BYTE PTR [rax],al
   1400060ad:	add    BYTE PTR [rax],al
   1400060af:	add    BYTE PTR [rax],cl
   1400060b1:	jle    0x1400060b3
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    BYTE PTR [rsi+rdi*2],bl
   1400060ba:	add    BYTE PTR [rax],al
   1400060bc:	add    BYTE PTR [rax],al
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	xor    bh,BYTE PTR [rsi+0x0]
   1400060c3:	add    BYTE PTR [rax],al
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    BYTE PTR [rdx+0x7e],cl
   1400060ca:	add    BYTE PTR [rax],al
   1400060cc:	add    BYTE PTR [rax],al
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	adc    al,0x82
   1400060d2:	add    BYTE PTR [rax],al
   1400060d4:	add    BYTE PTR [rax],al
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	rex (bad) 
   1400060da:	add    BYTE PTR [rax],al
   1400060dc:	add    BYTE PTR [rax],al
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	(bad)  
   1400060e1:	jl     0x1400060e3
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rsp+rdi*2+0x0],bh
   1400060ee:	add    BYTE PTR [rax],al
   1400060f0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400060f1:	jl     0x1400060f3
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rax+0x7c],bl
   1400060fd:	add    BYTE PTR [rax],al
   1400060ff:	add    dl,bh
   140006101:	add    DWORD PTR [rax],0x0
   140006107:	add    dh,bl
   140006109:	add    DWORD PTR [rax],0x0
   14000610f:	add    dh,cl
   140006111:	add    DWORD PTR [rax],0x0
   140006117:	add    BYTE PTR [rdx],ch
   140006119:	(bad)  
	...
   140006126:	add    BYTE PTR [rax],al
   140006128:	fidivr DWORD PTR [rsi+0x0]
   14000612b:	add    BYTE PTR [rax],al
   14000612d:	add    BYTE PTR [rax],al
   14000612f:	add    al,al
   140006131:	jle    0x140006133
	...
   14000613f:	add    BYTE PTR [rdi+rdi*2],bh
   140006142:	add    BYTE PTR [rax],al
   140006144:	add    BYTE PTR [rax],al
   140006146:	add    BYTE PTR [rax],al
   140006148:	rex.W jg 0x14000614b
   14000614b:	add    BYTE PTR [rax],al
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    BYTE PTR [rdi+rdi*2],dh
   140006152:	add    BYTE PTR [rax],al
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax],al
   140006158:	pop    rsp
   140006159:	jg     0x14000615b
   14000615b:	add    BYTE PTR [rax],al
   14000615d:	add    BYTE PTR [rax],al
   14000615f:	add    BYTE PTR [rsi+0x7f],ah
   140006162:	add    BYTE PTR [rax],al
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	jbe    0x1400061e9
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	test   BYTE PTR [rdi+0x0],bh
   140006173:	add    BYTE PTR [rax],al
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    BYTE PTR [rdx+0x7f],dl
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    BYTE PTR [rsi+0x7f],bl
   140006185:	add    BYTE PTR [rax],al
   140006187:	add    BYTE PTR [rdx+0x7f],ch
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    BYTE PTR [rdi+rdi*2+0x0],dh
   140006196:	add    BYTE PTR [rax],al
   140006198:	mov    esi,0x7f
   14000619d:	add    BYTE PTR [rax],al
   14000619f:	add    al,dl
   1400061a1:	jg     0x1400061a3
   1400061a3:	add    BYTE PTR [rax],al
   1400061a5:	add    BYTE PTR [rax],al
   1400061a7:	add    al,ch
   1400061a9:	jg     0x1400061ab
   1400061ab:	add    BYTE PTR [rax],al
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    al,dh
   1400061b1:	jg     0x1400061b3
   1400061b3:	add    BYTE PTR [rax],al
   1400061b5:	add    BYTE PTR [rax],al
   1400061b7:	add    dl,bh
   1400061b9:	jg     0x1400061bb
   1400061bb:	add    BYTE PTR [rax],al
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    BYTE PTR [rax],cl
   1400061c1:	add    BYTE PTR [rax],0x0
   1400061c4:	add    BYTE PTR [rax],al
   1400061c6:	add    BYTE PTR [rax],al
   1400061c8:	(bad)  
   1400061c9:	add    BYTE PTR [rax],0x0
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	add    BYTE PTR cs:[rax],0x0
   1400061d4:	add    BYTE PTR [rax],al
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	es jg  0x1400061db
   1400061db:	add    BYTE PTR [rax],al
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    BYTE PTR [rsi-0x80],al
   1400061e2:	add    BYTE PTR [rax],al
   1400061e4:	add    BYTE PTR [rax],al
   1400061e6:	add    BYTE PTR [rax],al
   1400061e8:	push   rsp
   1400061e9:	add    BYTE PTR [rax],0x0
   1400061ec:	add    BYTE PTR [rax],al
   1400061ee:	add    BYTE PTR [rax],al
   1400061f0:	data16 add BYTE PTR [rax],0x0
   1400061f4:	add    BYTE PTR [rax],al
   1400061f6:	add    BYTE PTR [rax],al
   1400061f8:	js     0x14000617a
   1400061fa:	add    BYTE PTR [rax],al
   1400061fc:	add    BYTE PTR [rax],al
   1400061fe:	add    BYTE PTR [rax],al
   140006200:	add    BYTE PTR [rax+0x0],0x0
   140006207:	add    BYTE PTR [rax+0x80],cl
   14000620d:	add    BYTE PTR [rax],al
   14000620f:	add    BYTE PTR [rdx+0x80],dl
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    BYTE PTR [rax+0x80],ch
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    BYTE PTR [rax+rax*4+0x0],bh
   140006226:	add    BYTE PTR [rax],al
   140006228:	retf   0x80
   14000622b:	add    BYTE PTR [rax],al
   14000622d:	add    BYTE PTR [rax],al
   14000622f:	add    dh,dl
   140006231:	add    BYTE PTR [rax],0x0
   140006234:	add    BYTE PTR [rax],al
   140006236:	add    BYTE PTR [rax],al
   140006238:	in     al,0x80
   14000623a:	add    BYTE PTR [rax],al
   14000623c:	add    BYTE PTR [rax],al
   14000623e:	add    BYTE PTR [rax],al
   140006240:	out    dx,al
   140006241:	add    BYTE PTR [rax],0x0
   140006244:	add    BYTE PTR [rax],al
   140006246:	add    BYTE PTR [rax],al
   140006248:	cli    
   140006249:	add    BYTE PTR [rax],0x0
   14000624c:	add    BYTE PTR [rax],al
   14000624e:	add    BYTE PTR [rax],al
   140006250:	adc    BYTE PTR [rcx+0x0],al
   140006256:	add    BYTE PTR [rax],al
   140006258:	sub    al,BYTE PTR [rcx+0x0]
   14000625e:	add    BYTE PTR [rax],al
   140006260:	rex.X add DWORD PTR [rax],0x0
   140006267:	add    BYTE PTR [rax-0x7f],ah
   14000626a:	add    BYTE PTR [rax],al
   14000626c:	add    BYTE PTR [rax],al
   14000626e:	add    BYTE PTR [rax],al
   140006270:	je     0x1400061f3
   140006272:	add    BYTE PTR [rax],al
   140006274:	add    BYTE PTR [rax],al
   140006276:	add    BYTE PTR [rax],al
   140006278:	stos   BYTE PTR es:[rdi],al
   140006279:	add    DWORD PTR [rax],0x0
   14000627f:	add    BYTE PTR [rdx],bl
   140006281:	jg     0x140006283
   140006283:	add    BYTE PTR [rax],al
   140006285:	add    BYTE PTR [rax],al
   140006287:	add    BYTE PTR [rdx],cl
   140006289:	jg     0x14000628b
   14000628b:	add    BYTE PTR [rax],al
   14000628d:	add    BYTE PTR [rax],al
   14000628f:	add    BYTE PTR [rax],bh
   140006291:	add    BYTE PTR [rax],0x0
   140006294:	add    BYTE PTR [rax],al
   140006296:	add    BYTE PTR [rax],al
   140006298:	pop    rdx
   140006299:	(bad)  
   14000629a:	add    BYTE PTR [rax],al
   14000629c:	add    BYTE PTR [rax],al
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	push   rax
   1400062a1:	jg     0x1400062a3
   1400062a3:	add    BYTE PTR [rax],al
   1400062a5:	add    BYTE PTR [rax],al
   1400062a7:	add    BYTE PTR [rax-0x7e],dh
	...
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	cmp    al,0x4e
   1400062c2:	add    BYTE PTR [rax+0x1],al
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    BYTE PTR [rax],bl
   1400062c9:	adc    BYTE PTR [rax],al
   1400062cb:	rex add DWORD PTR [rax],eax
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	add    BYTE PTR [rax],dl
   1400062d2:	add    BYTE PTR [rax+0x1],al
	...
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    BYTE PTR [rbp+rcx*2+0x0],ch
   1400062eb:	rex add DWORD PTR [rax],eax
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	call   0x141406340
   1400062f5:	add    BYTE PTR [rax],al
   1400062f7:	add    BYTE PTR [rdx+rdx*2+0x0],al
   1400062fb:	rex add DWORD PTR [rax],eax
	...
   140006312:	add    BYTE PTR [rax],al
   140006314:	jno    0x1400062dc
   140006316:	and    edx,DWORD PTR [rbx+0x0]
   140006319:	add    BYTE PTR [rax],al
   14000631b:	add    BYTE PTR [rdx],al
   14000631d:	add    BYTE PTR [rax],al
   14000631f:	add    BYTE PTR [rbp+0x0],cl
   140006322:	add    BYTE PTR [rax],al
   140006324:	push   rax
   140006325:	push   0x0
   140006327:	add    BYTE PTR [rax+0x5a],dl
   14000632a:	add    BYTE PTR [rax],al
   14000632c:	add    BYTE PTR [rax],al
   14000632e:	add    BYTE PTR [rax],al
   140006330:	jno    0x1400062f8
   140006332:	and    edx,DWORD PTR [rbx+0x0]
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    BYTE PTR [rax+rax*1],cl
   14000633a:	add    BYTE PTR [rax],al
   14000633c:	adc    al,0x0
   14000633e:	add    BYTE PTR [rax],al
   140006340:	movabs al,ds:0x2800005aa000006a
   140006349:	sub    BYTE PTR [rcx-0x2d],cl
   14000634c:	cmp    BYTE PTR [rcx-0x2c],al
   14000634f:	rex.WRXB mov r11b,0xec
   140006352:	fistp  DWORD PTR [rcx-0x7951a1ed]
	...
   140006360:	add    BYTE PTR [r10+0x0],r10b
   140006364:	push   rdx
   140006365:	add    BYTE PTR [rdi+0x0],cl
   140006368:	push   rdx
   140006369:	add    BYTE PTR [rax],ah
   14000636b:	add    BYTE PTR [rdx],bh
   14000636d:	add    BYTE PTR [rax],ah
   14000636f:	add    BYTE PTR [rbp+0x0],dl
   140006372:	outs   dx,BYTE PTR ds:[rsi]
   140006373:	add    BYTE PTR [rcx+0x0],ah
   140006376:	(bad)  
   140006377:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000637b:	add    BYTE PTR [rax],ah
   14000637d:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140006381:	add    BYTE PTR [rax],ah
   140006383:	add    BYTE PTR [rcx+0x0],ch
   140006386:	outs   dx,BYTE PTR ds:[rsi]
   140006387:	add    BYTE PTR [rcx+0x0],ch
   14000638a:	je     0x14000638c
   14000638c:	imul   eax,DWORD PTR [rax],0x6c0061
   140006392:	imul   eax,DWORD PTR [rax],0x65007a
   140006398:	and    BYTE PTR [rax],al
   14000639a:	movsxd eax,DWORD PTR [rax]
   14000639c:	jb     0x14000639e
   14000639e:	imul   eax,DWORD PTR [rax],0x690074
   1400063a4:	movsxd eax,DWORD PTR [rax]
   1400063a6:	(bad)  
   1400063a7:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400063ab:	add    BYTE PTR [rbx+0x0],dh
   1400063ae:	add    BYTE PTR gs:[rbx+0x0],ah
   1400063b2:	je     0x1400063b4
   1400063b4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400063ba:	and    BYTE PTR [rax],al
   1400063bc:	imul   eax,DWORD PTR [rax],0x20006e
   1400063c2:	rex.XB add BYTE PTR [r9+0x0],al
   1400063c6:	je     0x1400063c8
   1400063c8:	ins    BYTE PTR es:[rdi],dx
   1400063c9:	add    BYTE PTR [rdx+0x0],al
   1400063cc:	(bad)  
   1400063cd:	add    BYTE PTR [rbx+0x0],dh
   1400063d0:	add    BYTE PTR gs:[rbp+0x0],cl
   1400063d4:	outs   dx,DWORD PTR ds:[rsi]
   1400063d5:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400063d9:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400063dd:	add    BYTE PTR [rdx],cl
	...
   1400063e7:	add    BYTE PTR [rax+0x140006a],bh
   1400063ed:	add    BYTE PTR [rax],al
   1400063ef:	add    BYTE PTR [rax],al
   1400063f1:	rex.WRB add BYTE PTR [r8+0x1],r8b
   1400063f5:	add    BYTE PTR [rax],al
   1400063f7:	add    BYTE PTR [rax+0x1400091],ah
   1400063fd:	add    BYTE PTR [rax],al
   1400063ff:	add    BYTE PTR [rax-0x6e],al
   140006402:	add    BYTE PTR [rax+0x1],al
	...
   14000640d:	add    BYTE PTR [rax],al
   14000640f:	add    BYTE PTR [rbp+0x0],dh
   140006412:	jae    0x140006414
   140006414:	(bad)  
   140006415:	add    BYTE PTR [rdi+0x0],ah
   140006418:	add    BYTE PTR gs:[rdx],bh
   14000641b:	add    BYTE PTR [rax],ah
   14000641d:	add    BYTE PTR [rbx+0x0],al
   140006420:	outs   dx,DWORD PTR ds:[rsi]
   140006421:	add    BYTE PTR [rdx+0x0],dh
   140006424:	add    BYTE PTR gs:[rax+rax*1+0x50],ch
   140006429:	add    BYTE PTR [rbx+0x0],dl
   14000642c:	xor    al,BYTE PTR [rax]
   14000642e:	push   rax
   14000642f:	add    BYTE PTR [rax+rax*1+0x46],al
   140006433:	add    BYTE PTR [rax],ah
   140006435:	add    BYTE PTR [rcx+0x0],ch
   140006438:	outs   dx,BYTE PTR ds:[rsi]
   140006439:	add    BYTE PTR [rax+0x0],dh
   14000643c:	jne    0x14000643e
   14000643e:	je     0x140006440
   140006440:	add    BYTE PTR cs:[rax+0x0],dh
   140006444:	jae    0x140006446
   140006446:	and    BYTE PTR [rax],al
   140006448:	outs   dx,DWORD PTR ds:[rsi]
   140006449:	add    BYTE PTR [rbp+0x0],dh
   14000644c:	je     0x14000644e
   14000644e:	jo     0x140006450
   140006450:	jne    0x140006452
   140006452:	je     0x140006454
   140006454:	add    BYTE PTR cs:[rax+0x0],dh
   140006458:	add    BYTE PTR fs:[rsi+0x0],ah
   14000645c:	or     al,BYTE PTR [rax]
   14000645e:	add    BYTE PTR [rax],al
   140006460:	sub    eax,0x20007100
   140006465:	add    BYTE PTR [rip+0x53006400],ch        # 0x19300c86b
   14000646b:	add    BYTE PTR [rcx+0x0],al
   14000646e:	rex.RX add BYTE PTR [rbp+0x0],r8b
   140006472:	push   rdx
   140006473:	add    BYTE PTR [rax],ah
   140006475:	add    BYTE PTR [rip+0x4e006400],ch        # 0x18e00c87b
   14000647b:	add    BYTE PTR [rdi+0x0],cl
   14000647e:	push   rax
   14000647f:	add    BYTE PTR [rcx+0x0],al
   140006482:	push   rbp
   140006483:	add    BYTE PTR [rbx+0x0],dl
   140006486:	add    BYTE PTR [r8],r12b
   140006489:	add    BYTE PTR [rip+0x42006400],ch        # 0x18200c88f
   14000648f:	add    BYTE PTR [rcx+0x0],al
   140006492:	push   rsp
   140006493:	add    BYTE PTR [rbx+0x0],al
   140006496:	rex.W add BYTE PTR [rax],spl
   140006499:	add    BYTE PTR [rip+0x45006400],ch        # 0x18500c89f
   14000649f:	add    BYTE PTR [rax+0x0],dl
   1400064a2:	push   rbx
   1400064a3:	add    BYTE PTR [rbx+0x0],al
   1400064a6:	jb     0x1400064a8
   1400064a8:	outs   dx,DWORD PTR ds:[rsi]
   1400064a9:	add    BYTE PTR [rax+0x0],dh
   1400064ac:	and    BYTE PTR [rax],al
   1400064ae:	sub    eax,0x44007300
   1400064b3:	add    BYTE PTR [rbp+0x0],al
   1400064b6:	push   rsi
   1400064b7:	add    BYTE PTR [rcx+0x0],cl
   1400064ba:	rex.XB add BYTE PTR [r13+0x0],al
   1400064be:	cmp    eax,0x64007000
   1400064c3:	add    BYTE PTR [rsi+0x0],ah
   1400064c6:	ja     0x1400064c8
   1400064c8:	jb     0x1400064ca
   1400064ca:	imul   eax,DWORD PTR [rax],0x650074
   1400064d0:	and    BYTE PTR [rax],al
   1400064d2:	sub    eax,0x43006400
   1400064d7:	add    BYTE PTR [rdi+0x0],ch
   1400064da:	ins    DWORD PTR es:[rdi],dx
   1400064db:	add    BYTE PTR [rax+0x0],dh
   1400064de:	(bad)  
   1400064df:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400064e3:	add    BYTE PTR [rdx+0x0],ah
   1400064e6:	imul   eax,DWORD PTR [rax],0x69006c
   1400064ec:	je     0x1400064ee
   1400064ee:	jns    0x1400064f0
   1400064f0:	rex.WR add BYTE PTR [rbp+0x0],r12b
   1400064f4:	jbe    0x1400064f6
   1400064f6:	add    BYTE PTR gs:[rax+rax*1+0x3d],ch
   1400064fb:	add    BYTE PTR [rcx],dh
   1400064fd:	add    BYTE PTR [rsi],ch
   1400064ff:	add    BYTE PTR [rax+rax*1],dh
   140006502:	and    BYTE PTR [rax],al
   140006504:	sub    eax,0x41006400
   140006509:	add    BYTE PTR [rbp+0x0],dh
   14000650c:	je     0x14000650e
   14000650e:	outs   dx,DWORD PTR ds:[rsi]
   14000650f:	add    BYTE PTR [rsi+0x0],al
   140006512:	imul   eax,DWORD PTR [rax],0x74006c
   140006518:	add    BYTE PTR gs:[rdx+0x0],dh
   14000651c:	rex.XB add BYTE PTR [r15+0x0],bpl
   140006520:	ins    BYTE PTR es:[rdi],dx
   140006521:	add    BYTE PTR [rdi+0x0],ch
   140006524:	jb     0x140006526
   140006526:	rex.WB add BYTE PTR [r13+0x0],bpl
   14000652a:	(bad)  
   14000652b:	add    BYTE PTR [rdi+0x0],ah
   14000652e:	add    BYTE PTR gs:[rbx+0x0],dh
   140006532:	cmp    eax,0x61006600
   140006537:	add    BYTE PTR [rax+rax*1+0x73],ch
   14000653b:	add    BYTE PTR [rbp+0x0],ah
   14000653e:	and    BYTE PTR [rax],al
   140006540:	sub    eax,0x41006400
   140006545:	add    BYTE PTR [rbp+0x0],dh
   140006548:	je     0x14000654a
   14000654a:	outs   dx,DWORD PTR ds:[rsi]
   14000654b:	add    BYTE PTR [rsi+0x0],al
   14000654e:	imul   eax,DWORD PTR [rax],0x74006c
   140006554:	add    BYTE PTR gs:[rdx+0x0],dh
   140006558:	rex.RXB add BYTE PTR [r10+0x0],r14b
   14000655c:	(bad)  
   14000655d:	add    BYTE PTR [rcx+0x0],bh
   140006560:	rex.WB add BYTE PTR [r13+0x0],bpl
   140006564:	(bad)  
   140006565:	add    BYTE PTR [rdi+0x0],ah
   140006568:	add    BYTE PTR gs:[rbx+0x0],dh
   14000656c:	cmp    eax,0x61006600
   140006571:	add    BYTE PTR [rax+rax*1+0x73],ch
   140006575:	add    BYTE PTR [rbp+0x0],ah
   140006578:	and    BYTE PTR [rax],al
   14000657a:	sub    eax,0x43006400
   14000657f:	add    BYTE PTR [rdi+0x0],ch
   140006582:	ins    BYTE PTR es:[rdi],dx
   140006583:	add    BYTE PTR [rdi+0x0],ch
   140006586:	jb     0x140006588
   140006588:	rex.WB add BYTE PTR [r13+0x0],bpl
   14000658c:	(bad)  
   14000658d:	add    BYTE PTR [rdi+0x0],ah
   140006590:	add    BYTE PTR gs:[rsi+0x0],al
   140006594:	imul   eax,DWORD PTR [rax],0x74006c
   14000659a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000659e:	cmp    eax,0x46002f00
   1400065a3:	add    BYTE PTR [rax+rax*1+0x61],ch
   1400065a7:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400065ab:	add    BYTE PTR [rbp+0x0],al
   1400065ae:	outs   dx,BYTE PTR ds:[rsi]
   1400065af:	add    BYTE PTR [rbx+0x0],ah
   1400065b2:	outs   dx,DWORD PTR ds:[rsi]
   1400065b3:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400065b7:	add    BYTE PTR [rax],ah
   1400065b9:	add    BYTE PTR [rip+0x47006400],ch        # 0x18700c9bf
   1400065bf:	add    BYTE PTR [rdx+0x0],dh
   1400065c2:	(bad)  
   1400065c3:	add    BYTE PTR [rcx+0x0],bh
   1400065c6:	rex.WB add BYTE PTR [r13+0x0],bpl
   1400065ca:	(bad)  
   1400065cb:	add    BYTE PTR [rdi+0x0],ah
   1400065ce:	add    BYTE PTR gs:[rsi+0x0],al
   1400065d2:	imul   eax,DWORD PTR [rax],0x74006c
   1400065d8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400065dc:	cmp    eax,0x46002f00
   1400065e1:	add    BYTE PTR [rax+rax*1+0x61],ch
   1400065e5:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400065e9:	add    BYTE PTR [rbp+0x0],al
   1400065ec:	outs   dx,BYTE PTR ds:[rsi]
   1400065ed:	add    BYTE PTR [rbx+0x0],ah
   1400065f0:	outs   dx,DWORD PTR ds:[rsi]
   1400065f1:	add    BYTE PTR [rax+rax*1+0x65],ah
   1400065f5:	add    BYTE PTR [rax],ah
   1400065f7:	add    BYTE PTR [rip+0x4f007300],ch        # 0x18f00d8fd
   1400065fd:	add    BYTE PTR [rbp+0x0],dh
   140006600:	je     0x140006602
   140006602:	jo     0x140006604
   140006604:	jne    0x140006606
   140006606:	je     0x140006608
   140006608:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000660c:	ins    BYTE PTR es:[rdi],dx
   14000660d:	add    BYTE PTR [rbp+0x0],ah
   140006610:	cmp    eax,0x0
   140006615:	add    BYTE PTR [rax],al
   140006617:	add    BYTE PTR [rdx],ah
   140006619:	add    BYTE PTR [rip+0x22007300],ah        # 0x16200d91f
   14000661f:	add    BYTE PTR [rax],ah
   140006621:	add    BYTE PTR [rdx],ah
   140006623:	add    BYTE PTR [rip+0x22007300],ah        # 0x16200d929
   140006629:	add    BYTE PTR [rax],al
   14000662b:	add    BYTE PTR [rax],al
   14000662d:	add    BYTE PTR [rax],al
   14000662f:	add    BYTE PTR [rbx+0x0],dl
   140006632:	outs   dx,DWORD PTR ds:[rsi]
   140006633:	add    BYTE PTR [rsi+0x0],ah
   140006636:	je     0x140006638
   140006638:	ja     0x14000663a
   14000663a:	(bad)  
   14000663b:	add    BYTE PTR [rdx+0x0],dh
   14000663e:	add    BYTE PTR gs:[rax+rax*1+0x43],bl
   140006643:	add    BYTE PTR [rdi+0x0],ch
   140006646:	jb     0x140006648
   140006648:	add    BYTE PTR gs:[rax+rax*1+0x5c],ch
   14000664d:	add    BYTE PTR [rbx+0x0],al
   140006650:	outs   dx,DWORD PTR ds:[rsi]
   140006651:	add    BYTE PTR [rdx+0x0],dh
   140006654:	add    BYTE PTR gs:[rax+rax*1+0x50],ch
   140006659:	add    BYTE PTR [rbx+0x0],dl
   14000665c:	xor    al,BYTE PTR [rax]
   14000665e:	push   rax
   14000665f:	add    BYTE PTR [rax+rax*1+0x46],al
   140006663:	add    BYTE PTR [rax],al
   140006665:	add    BYTE PTR [rax],al
   140006667:	add    BYTE PTR [rax+0x0],dl
   14000666a:	jb     0x14000666c
   14000666c:	add    BYTE PTR gs:[rsi+0x0],ah
   140006670:	add    BYTE PTR gs:[rdx+0x0],dh
   140006674:	jb     0x140006676
   140006676:	add    BYTE PTR gs:[rax+rax*1+0x56],ah
   14000667b:	add    BYTE PTR [rbp+0x0],ah
   14000667e:	jb     0x140006680
   140006680:	jae    0x140006682
   140006682:	imul   eax,DWORD PTR [rax],0x6e006f
   140006688:	add    BYTE PTR [rax],al
   14000668a:	add    BYTE PTR [rax],al
   14000668c:	add    BYTE PTR cs:[rax],al
   14000668f:	add    BYTE PTR [rbx+0x0],dl
   140006692:	outs   dx,DWORD PTR ds:[rsi]
   140006693:	add    BYTE PTR [rsi+0x0],ah
   140006696:	je     0x140006698
   140006698:	ja     0x14000669a
   14000669a:	(bad)  
   14000669b:	add    BYTE PTR [rdx+0x0],dh
   14000669e:	add    BYTE PTR gs:[rax+rax*1+0x47],bl
   1400066a3:	add    BYTE PTR [rax+0x0],dl
   1400066a6:	rex.WR add BYTE PTR [rax],r12b
   1400066a9:	add    BYTE PTR [rdi+0x0],al
   1400066ac:	push   0x73006f00
   1400066b1:	add    BYTE PTR [rax+rax*1+0x73],dh
   1400066b5:	add    BYTE PTR [rbx+0x0],ah
   1400066b8:	jb     0x1400066ba
   1400066ba:	imul   eax,DWORD PTR [rax],0x740070
	...
   1400066c8:	rex.RXB add BYTE PTR [r11+0x0],r10b
   1400066cc:	pop    rdi
   1400066cd:	add    BYTE PTR [rax+rax*1+0x4c],al
   1400066d1:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400066d5:	add    BYTE PTR [rax],al
   1400066d7:	add    BYTE PTR [rdi+0x0],ah
   1400066da:	jae    0x1400066dc
   1400066dc:	ja     0x1400066de
   1400066de:	imul   eax,DWORD PTR [rax],0x36006e
   1400066e4:	xor    al,0x0
   1400066e6:	movsxd eax,DWORD PTR [rax]
   1400066e8:	add    BYTE PTR cs:[rbp+0x0],ah
   1400066ec:	js     0x1400066ee
   1400066ee:	add    BYTE PTR gs:[rax],al
   1400066f1:	add    BYTE PTR [rax],al
   1400066f3:	add    BYTE PTR [rax],al
   1400066f5:	add    BYTE PTR [rax],al
   1400066f7:	add    BYTE PTR [rdi+0x0],ah
   1400066fa:	jae    0x1400066fc
   1400066fc:	ja     0x1400066fe
   1400066fe:	imul   eax,DWORD PTR [rax],0x33006e
   140006704:	xor    al,BYTE PTR [rax]
   140006706:	movsxd eax,DWORD PTR [rax]
   140006708:	add    BYTE PTR cs:[rbp+0x0],ah
   14000670c:	js     0x14000670e
   14000670e:	add    BYTE PTR gs:[rax],al
   140006711:	add    BYTE PTR [rax],al
   140006713:	add    BYTE PTR [rax],al
   140006715:	add    BYTE PTR [rax],al
   140006717:	add    BYTE PTR [rsi+0x65],dh
   14000671a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000671e:	cmp    al,0x54
   140006720:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   140006725:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140006729:	add    BYTE PTR [eax],al
   14000672c:	add    BYTE PTR [rax],al
   14000672e:	add    BYTE PTR [rax],al
   140006730:	ins    DWORD PTR es:[rdi],dx
   140006731:	(bad)  
   140006732:	jo     0x140006763
   140006734:	jae    0x14000679b
   140006736:	je     0x140006774
   140006738:	push   rsp
   140006739:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14000673e:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140006742:	add    BYTE PTR [eax],al
   140006745:	add    BYTE PTR [rax],al
   140006747:	add    BYTE PTR [rax+0x6c],al
   14000674a:	add    BYTE PTR [rax+0x1],al
   14000674d:	add    BYTE PTR [rax],al
   14000674f:	add    BYTE PTR [rax],al
   140006751:	adc    al,BYTE PTR [rax]
   140006753:	rex add DWORD PTR [rax],eax
   140006756:	add    BYTE PTR [rax],al
   140006758:	adc    BYTE PTR [rdx],dl
   14000675a:	add    BYTE PTR [rax+0x1],al
   14000675d:	add    BYTE PTR [rax],al
   14000675f:	add    BYTE PTR [rax],dh
   140006761:	adc    al,BYTE PTR [rax]
   140006763:	rex add DWORD PTR [rax],eax
   140006766:	add    BYTE PTR [rax],al
   140006768:	jo     0x14000677c
   14000676a:	add    BYTE PTR [rax+0x1],al
   14000676d:	add    BYTE PTR [rax],al
   14000676f:	add    BYTE PTR [rax+0x1400012],al
   140006775:	add    BYTE PTR [rax],al
   140006777:	add    BYTE PTR [rax+0x140006c],ch
   14000677d:	add    BYTE PTR [rax],al
   14000677f:	add    BYTE PTR [rax+0x1400013],ah
   140006785:	add    BYTE PTR [rax],al
   140006787:	add    BYTE PTR [rax+0x14],al
   14000678a:	add    BYTE PTR [rax+0x1],al
   14000678d:	add    BYTE PTR [rax],al
   14000678f:	add    BYTE PTR [rax+0x14],dl
   140006792:	add    BYTE PTR [rax+0x1],al
   140006795:	add    BYTE PTR [rax],al
   140006797:	add    al,ah
   140006799:	adc    al,0x0
   14000679b:	rex add DWORD PTR [rax],eax
   14000679e:	add    BYTE PTR [rax],al
   1400067a0:	lock adc al,0x0
   1400067a3:	rex add DWORD PTR [rax],eax
   1400067a6:	add    BYTE PTR [rax],al
   1400067a8:	add    BYTE PTR [rip+0x14000],dl        # 0x14001a7ae
   1400067ae:	add    BYTE PTR [rax],al
   1400067b0:	and    al,BYTE PTR [rip+0x31993]        # 0x140038149
   1400067b6:	add    BYTE PTR [rax],al
   1400067b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400067b9:	ja     0x1400067bb
   1400067bb:	add    BYTE PTR [rcx],al
   1400067bd:	add    BYTE PTR [rax],al
   1400067bf:	add    BYTE PTR [rdi+rsi*2+0x70000],bh
   1400067c6:	add    BYTE PTR [rax],al
   1400067c8:	in     al,0x77
   1400067ca:	add    BYTE PTR [rax],al
   1400067cc:	and    BYTE PTR [rax],al
   1400067ce:	add    BYTE PTR [rax],al
   1400067d0:	add    BYTE PTR [rax],al
   1400067d2:	add    BYTE PTR [rax],al
   1400067d4:	add    DWORD PTR [rax],eax
   1400067d6:	add    BYTE PTR [rax],al
   1400067d8:	and    al,BYTE PTR [rip+0x21993]        # 0x140028171
   1400067de:	add    BYTE PTR [rax],al
   1400067e0:	in     al,dx
   1400067e1:	jae    0x1400067e3
   1400067e3:	add    BYTE PTR [rcx],al
   1400067e5:	add    BYTE PTR [rax],al
   1400067e7:	add    BYTE PTR [rax],bl
   1400067e9:	ja     0x1400067eb
   1400067eb:	add    BYTE PTR [rbx],al
   1400067ed:	add    BYTE PTR [rax],al
   1400067ef:	add    BYTE PTR [rax+0x77],al
   1400067f2:	add    BYTE PTR [rax],al
   1400067f4:	xor    BYTE PTR [rax],al
   1400067f6:	add    BYTE PTR [rax],al
   1400067f8:	add    BYTE PTR [rax],al
   1400067fa:	add    BYTE PTR [rax],al
   1400067fc:	add    DWORD PTR [rax],eax
   1400067fe:	add    BYTE PTR [rax],al
   140006800:	and    al,BYTE PTR [rip+0x41993]        # 0x140048199
   140006806:	add    BYTE PTR [rax],al
   140006808:	ins    BYTE PTR es:[rdi],dx
   140006809:	jbe    0x14000680b
   14000680b:	add    BYTE PTR [rcx],al
   14000680d:	add    BYTE PTR [rax],al
   14000680f:	add    BYTE PTR [rsi+rsi*2+0x70000],cl
   140006816:	add    BYTE PTR [rax],al
   140006818:	mov    ah,0x76
   14000681a:	add    BYTE PTR [rax],al
   14000681c:	and    BYTE PTR [rax],al
   14000681e:	add    BYTE PTR [rax],al
   140006820:	add    BYTE PTR [rax],al
   140006822:	add    BYTE PTR [rax],al
   140006824:	add    DWORD PTR [rax],eax
   140006826:	add    BYTE PTR [rax],al
   140006828:	and    al,BYTE PTR [rip+0x11993]        # 0x1400181c1
   14000682e:	add    BYTE PTR [rax],al
   140006830:	enter  0x75,0x0
	...
   14000683c:	add    eax,DWORD PTR [rax]
   14000683e:	add    BYTE PTR [rax],al
   140006840:	shl    BYTE PTR [rbp+0x0],1
   140006843:	add    BYTE PTR [rax],ch
   140006845:	add    BYTE PTR [rax],al
   140006847:	add    BYTE PTR [rax],al
   140006849:	add    BYTE PTR [rax],al
   14000684b:	add    BYTE PTR [rcx],al
   14000684d:	add    BYTE PTR [rax],al
   14000684f:	add    BYTE PTR [rdx],ah
   140006851:	add    eax,0x21993
   140006856:	add    BYTE PTR [rax],al
   140006858:	in     al,dx
   140006859:	jae    0x14000685b
   14000685b:	add    BYTE PTR [rcx],al
   14000685d:	add    BYTE PTR [rax],al
   14000685f:	add    ah,bh
   140006861:	jae    0x140006863
   140006863:	add    BYTE PTR [rip+0x24000000],al        # 0x164006869
   140006869:	je     0x14000686b
   14000686b:	add    BYTE PTR [rax],dh
   14000686d:	add    BYTE PTR [rax],al
   14000686f:	add    BYTE PTR [rax],al
   140006871:	add    BYTE PTR [rax],al
   140006873:	add    BYTE PTR [rcx],al
   140006875:	add    BYTE PTR [rax],al
   140006877:	add    BYTE PTR [rdx],ah
   140006879:	add    eax,0x11993
   14000687e:	add    BYTE PTR [rax],al
   140006880:	int3   
   140006881:	jb     0x140006883
	...
   14000688b:	add    BYTE PTR [rdx],al
   14000688d:	add    BYTE PTR [rax],al
   14000688f:	add    ah,dl
   140006891:	jb     0x140006893
   140006893:	add    BYTE PTR [rax],bh
   140006895:	add    BYTE PTR [rax],al
   140006897:	add    BYTE PTR [rax],al
   140006899:	add    BYTE PTR [rax],al
   14000689b:	add    BYTE PTR [rcx],al
   14000689d:	add    BYTE PTR [rax],al
   14000689f:	add    BYTE PTR [rdx],ah
   1400068a1:	add    eax,0x11993
   1400068a6:	add    BYTE PTR [rax],al
   1400068a8:	sub    al,0x72
	...
   1400068b2:	add    BYTE PTR [rax],al
   1400068b4:	add    eax,0x34000000
   1400068b9:	jb     0x1400068bb
   1400068bb:	add    BYTE PTR [rax+0x0],ch
   1400068be:	add    BYTE PTR [rax],al
   1400068c0:	add    BYTE PTR [rax],al
   1400068c2:	add    BYTE PTR [rax],al
   1400068c4:	add    DWORD PTR [rax],eax
   1400068c6:	add    BYTE PTR [rax],al
   1400068c8:	and    al,BYTE PTR [rip+0x61993]        # 0x140068261
   1400068ce:	add    BYTE PTR [rax],al
   1400068d0:	je     0x140006943
	...
   1400068da:	add    BYTE PTR [rax],al
   1400068dc:	or     eax,0xa4000000
   1400068e1:	jno    0x1400068e3
   1400068e3:	add    BYTE PTR [rax+0x0],al
   1400068e6:	add    BYTE PTR [rax],al
   1400068e8:	add    BYTE PTR [rax],al
   1400068ea:	add    BYTE PTR [rax],al
   1400068ec:	add    DWORD PTR [rax],eax
   1400068ee:	add    BYTE PTR [rax],al
   1400068f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140018289
   1400068f6:	add    BYTE PTR [rax],al
   1400068f8:	rex.R jno 0x1400068fb
	...
   140006903:	add    BYTE PTR [rdx],al
   140006905:	add    BYTE PTR [rax],al
   140006907:	add    BYTE PTR [rcx+rsi*2+0x0],cl
   14000690b:	add    BYTE PTR [rax],ch
   14000690d:	add    BYTE PTR [rax],al
   14000690f:	add    BYTE PTR [rax],al
   140006911:	add    BYTE PTR [rax],al
   140006913:	add    BYTE PTR [rcx],al
   140006915:	add    BYTE PTR [rax],al
   140006917:	add    BYTE PTR [rdx],ah
   140006919:	add    eax,0x51993
   14000691e:	add    BYTE PTR [rax],al
   140006920:	mov    WORD PTR [rax+0x0],?
	...
   14000692b:	add    BYTE PTR [rax],dl
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    BYTE PTR [rax+rsi*2+0xa80000],dh
   140006936:	add    BYTE PTR [rax],al
   140006938:	add    BYTE PTR [rax],al
   14000693a:	add    BYTE PTR [rax],al
   14000693c:	add    DWORD PTR [rax],eax
   14000693e:	add    BYTE PTR [rax],al
   140006940:	and    al,BYTE PTR [rip+0xe1993]        # 0x1400e82d9
   140006946:	add    BYTE PTR [rax],al
   140006948:	cmp    al,0x6f
	...
   140006952:	add    BYTE PTR [rax],al
   140006954:	sbb    BYTE PTR [rax],al
   140006956:	add    BYTE PTR [rax],al
   140006958:	lods   al,BYTE PTR ds:[rsi]
   140006959:	outs   dx,DWORD PTR ds:[rsi]
   14000695a:	add    BYTE PTR [rax],al
   14000695c:	add    BYTE PTR [rax],0x0
   14000695f:	add    BYTE PTR [rax],al
   140006961:	add    BYTE PTR [rax],al
   140006963:	add    BYTE PTR [rcx],al
   140006965:	add    BYTE PTR [rax],al
   140006967:	add    BYTE PTR [rdx],ah
   140006969:	add    eax,0x51993
   14000696e:	add    BYTE PTR [rax],al
   140006970:	sub    BYTE PTR [rsi+0x0],0x0
	...
   14000697c:	(bad)  
   14000697d:	add    BYTE PTR [rax],al
   14000697f:	add    BYTE PTR [rax+0x3000006e],ch
   140006985:	add    BYTE PTR [rax],al
   140006987:	add    BYTE PTR [rax],al
   140006989:	add    BYTE PTR [rax],al
   14000698b:	add    BYTE PTR [rcx],al
   14000698d:	add    BYTE PTR [rax],al
   14000698f:	add    BYTE PTR [rdx],ah
   140006991:	add    eax,0x21993
   140006996:	add    BYTE PTR [rax],al
   140006998:	sub    BYTE PTR [rsi+0x0],ch
	...
   1400069a3:	add    BYTE PTR [rax+rax*1],al
   1400069a6:	add    BYTE PTR [rax],al
   1400069a8:	cmp    BYTE PTR [rsi+0x0],ch
   1400069ab:	add    BYTE PTR [rax],bh
   1400069ad:	add    BYTE PTR [rax],al
   1400069af:	add    BYTE PTR [rax],al
   1400069b1:	add    BYTE PTR [rax],al
   1400069b3:	add    BYTE PTR [rcx],al
   1400069b5:	add    BYTE PTR [rax],al
   1400069b7:	add    BYTE PTR [rdx],ah
   1400069b9:	add    eax,0x31993
   1400069be:	add    BYTE PTR [rax],al
   1400069c0:	mov    ah,0x6d
	...
   1400069ca:	add    BYTE PTR [rax],al
   1400069cc:	or     BYTE PTR [rax],al
   1400069ce:	add    BYTE PTR [rax],al
   1400069d0:	int3   
   1400069d1:	ins    DWORD PTR es:[rdi],dx
   1400069d2:	add    BYTE PTR [rax],al
   1400069d4:	push   0x0
   1400069d9:	add    BYTE PTR [rax],al
   1400069db:	add    BYTE PTR [rcx],al
   1400069dd:	add    BYTE PTR [rax],al
   1400069df:	add    BYTE PTR [rax+0x0],dh
	...
   140006a36:	add    BYTE PTR [rax],al
   140006a38:	add    BYTE PTR [rax+0x14000],dl
	...
   140006a4e:	add    BYTE PTR [rax],al
   140006a50:	push   rdx
   140006a51:	push   rbx
   140006a52:	rex.R push rbx
   140006a54:	or     DWORD PTR [rbx+0x726ca25a],edi
   140006a5a:	outs   dx,DWORD PTR ds:[rsi]
   140006a5b:	rex xchg edi,eax
   140006a5d:	sbb    al,0xc3
   140006a5f:	test   al,0x73
   140006a61:	mov    ebp,0x2b71d
   140006a66:	add    BYTE PTR [rax],al
   140006a68:	cmp    r11b,BYTE PTR [rdi+rsi*2+0x61]
   140006a6d:	ins    BYTE PTR es:[rdi],dx
   140006a6e:	outs   dx,DWORD PTR fs:[rsi]
   140006a70:	pop    rsp
   140006a71:	jbe    0x140006aa4
   140006a73:	(bad)  
   140006a74:	xor    BYTE PTR [rax],dh
   140006a76:	pop    rsp
   140006a77:	push   rdx
   140006a78:	gs ins BYTE PTR es:[rdi],dx
   140006a7a:	gs (bad) 
   140006a7c:	jae    0x140006ae3
   140006a7e:	pop    rsp
   140006a7f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x34367372
   140006a88:	pop    rsp
   140006a89:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140006a8b:	jb     0x140006af2
   140006a8d:	ins    BYTE PTR es:[rdi],dx
   140006a8e:	push   rax
   140006a8f:	push   rbx
   140006a90:	xor    dl,BYTE PTR [rax+0x44]
   140006a93:	rex.RX sub eax,0x2e505041
   140006a99:	jo     0x140006aff
   140006a9b:	(bad)  
	...
   140006aa4:	sbb    DWORD PTR [rax],eax
   140006aa6:	add    BYTE PTR [rax],al
   140006aa8:	sbb    DWORD PTR [rax],eax
	...
   140006ab6:	add    BYTE PTR [rax],al
   140006ab8:	add    DWORD PTR [rax],eax
	...
   140006ac2:	add    BYTE PTR [rax],al
   140006ac4:	and    BYTE PTR [rax+0x6ae00000],dl
   140006aca:	add    BYTE PTR [rax],al
   140006acc:	mov    eax,0x6a
	...
   140006ae5:	add    BYTE PTR [rax],al
   140006ae7:	add    BYTE PTR [rcx],al
   140006ae9:	add    BYTE PTR [rax],al
   140006aeb:	add    al,bh
   140006aed:	push   0x0
	...
   140006af7:	add    BYTE PTR [rax],cl
   140006af9:	imul   eax,DWORD PTR [rax],0x0
	...
   140006b08:	and    BYTE PTR [rax+0x0],dl
   140006b0e:	add    BYTE PTR [rax],al
   140006b10:	add    BYTE PTR [rax],al
   140006b12:	add    BYTE PTR [rax],al
   140006b14:	(bad)  
   140006b15:	(bad)  
   140006b16:	(bad)  
   140006b17:	inc    DWORD PTR [rax]
   140006b19:	add    BYTE PTR [rax],al
   140006b1b:	add    BYTE PTR [rax+0x0],al
   140006b1e:	add    BYTE PTR [rax],al
   140006b20:	loopne 0x140006b8c
	...
   140006b2e:	add    BYTE PTR [rax],al
   140006b30:	cwde   
   140006b31:	imul   eax,DWORD PTR [rax],0x0
	...
   140006b48:	add    al,BYTE PTR [rax]
   140006b4a:	add    BYTE PTR [rax],al
   140006b4c:	sub    BYTE PTR [rax+rax*1+0x0],ch
	...
   140006b58:	rex xchg eax,eax
   140006b5a:	add    BYTE PTR [rax],al
   140006b5c:	add    DWORD PTR [rax],eax
   140006b5e:	add    BYTE PTR [rax],al
   140006b60:	add    BYTE PTR [rax],al
   140006b62:	add    BYTE PTR [rax],al
   140006b64:	(bad)  
   140006b65:	(bad)  
   140006b66:	(bad)  
   140006b67:	inc    DWORD PTR [rax]
   140006b69:	add    BYTE PTR [rax],al
   140006b6b:	add    BYTE PTR [rax+0x0],al
   140006b6e:	add    BYTE PTR [rax],al
   140006b70:	call   0x140006be0
	...
   140006b85:	add    BYTE PTR [rax],al
   140006b87:	add    BYTE PTR [rcx],al
   140006b89:	add    BYTE PTR [rax],al
   140006b8b:	add    BYTE PTR [rax+0x6c],bl
   140006b91:	add    BYTE PTR [rax],al
   140006b93:	add    BYTE PTR [rax],al
   140006b95:	add    BYTE PTR [rax],al
   140006b97:	add    BYTE PTR [rax-0x70],ch
	...
   140006ba2:	add    BYTE PTR [rax],al
   140006ba4:	(bad)  
   140006ba5:	(bad)  
   140006ba6:	(bad)  
   140006ba7:	inc    DWORD PTR [rax]
   140006ba9:	add    BYTE PTR [rax],al
   140006bab:	add    BYTE PTR [rax+0x0],al
   140006bae:	add    BYTE PTR [rax],al
   140006bb0:	sub    BYTE PTR [rax+rax*1+0x0],0x0
	...
   140006bbd:	add    BYTE PTR [rax],al
   140006bbf:	add    BYTE PTR [rax+0x1000090],bh
   140006bc5:	add    BYTE PTR [rax],al
   140006bc7:	add    BYTE PTR [rax],al
   140006bc9:	add    BYTE PTR [rax],al
   140006bcb:	add    bh,bh
   140006bcd:	(bad)  
   140006bce:	(bad)  
   140006bcf:	inc    DWORD PTR [rax]
   140006bd1:	add    BYTE PTR [rax],al
   140006bd3:	add    BYTE PTR [rax+0x0],al
   140006bd6:	add    BYTE PTR [rax],al
   140006bd8:	rex imul eax,DWORD PTR [rax],0x0
	...
   140006bf0:	add    al,BYTE PTR [rax]
   140006bf2:	add    BYTE PTR [rax],al
   140006bf4:	push   0x6c
   140006bf9:	add    BYTE PTR [rax],al
   140006bfb:	add    BYTE PTR [rax],al
   140006bfd:	add    BYTE PTR [rax],al
   140006bff:	add    BYTE PTR [rax+0x90],dl
   140006c05:	add    BYTE PTR [rax],al
   140006c07:	add    BYTE PTR [rax],al
   140006c09:	add    BYTE PTR [rax],al
   140006c0b:	add    bh,bh
   140006c0d:	(bad)  
   140006c0e:	(bad)  
   140006c0f:	inc    DWORD PTR [rax]
   140006c11:	add    BYTE PTR [rax],al
   140006c13:	add    BYTE PTR [rax+0x0],al
   140006c16:	add    BYTE PTR [rax],al
   140006c18:	sub    BYTE PTR [rbx+0x0],0x0
	...
   140006c28:	shr    BYTE PTR [rbx+0x0],0x0
   140006c2c:	add    BYTE PTR [rax+rax*1+0x0],ch
	...
   140006c40:	add    DWORD PTR [rax],eax
	...
   140006c4a:	add    BYTE PTR [rax],al
   140006c4c:	rex xchg eax,eax
   140006c4e:	add    BYTE PTR [rax],al
   140006c50:	call   0x180006cc0
   140006c55:	ins    BYTE PTR es:[rdi],dx
	...
   140006c66:	add    BYTE PTR [rax],al
   140006c68:	pop    rax
   140006c69:	imul   eax,DWORD PTR [rax],0x0
   140006c6c:	cwde   
   140006c6d:	imul   eax,DWORD PTR [rax],0x0
	...
   140006c88:	add    DWORD PTR [rax],eax
   140006c8a:	add    BYTE PTR [rax],al
   140006c8c:	xor    BYTE PTR [rbx+0x0],ch
	...
   140006c97:	add    BYTE PTR [rax],al
   140006c99:	ins    BYTE PTR es:[rdi],dx
	...
   140006ca6:	add    BYTE PTR [rax],al
   140006ca8:	add    DWORD PTR [rax],eax
	...
   140006cb2:	add    BYTE PTR [rax],al
   140006cb4:	mov    eax,0x40000090
   140006cb9:	imul   eax,DWORD PTR [rax],0x0
   140006cbc:	test   al,0x6c
	...
   140006cee:	add    BYTE PTR [rax],al
   140006cf0:	add    DWORD PTR [rcx+rax*1],eax
   140006cf3:	add    BYTE PTR [rdx+rax*2],al
   140006cf6:	add    BYTE PTR [rax],al
   140006cf8:	add    DWORD PTR [rbx],edi
   140006cfa:	or     BYTE PTR [rax],al
   140006cfc:	cmp    esi,DWORD PTR [rsi+rax*1]
   140006cff:	add    BYTE PTR [rdi],cl
   140006d01:	or     BYTE PTR fs:[rax],al
   140006d04:	andps  xmm0,XMMWORD PTR [rdi]
   140006d07:	add    BYTE PTR [rdi],cl
   140006d09:	xor    cl,BYTE PTR [rbx]
   140006d0b:	jo     0x140006d0e
   140006d0d:	adc    al,0x8
   140006d0f:	add    BYTE PTR [rsp+riz*2],dl
   140006d12:	or     BYTE PTR [rax],al
   140006d14:	adc    al,0x54
   140006d16:	(bad)  
   140006d17:	add    BYTE PTR [rsp+rsi*1],dl
   140006d1a:	(bad)  
   140006d1b:	add    BYTE PTR [rdx+rsi*1],dl
   140006d1e:	adc    BYTE PTR [rax+0x1],dh
   140006d21:	(bad)  
   140006d22:	add    al,BYTE PTR [rax]
   140006d24:	(bad)  
   140006d25:	xor    al,BYTE PTR [rdx]
   140006d27:	xor    BYTE PTR [rcx],al
   140006d29:	or     al,BYTE PTR [rax+rax*1]
   140006d2c:	or     dh,BYTE PTR [rsi+rax*1]
   140006d2f:	add    BYTE PTR [rdx],cl
   140006d31:	xor    al,BYTE PTR [rsi]
   140006d33:	jo     0x140006d36
   140006d35:	push   rax
   140006d36:	add    eax,DWORD PTR [rax]
   140006d38:	push   rax
   140006d39:	xor    al,0x4
   140006d3b:	add    BYTE PTR [rdx+rax*2],al
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	add    DWORD PTR [rsi],eax
   140006d42:	add    al,BYTE PTR [rax]
   140006d44:	(bad)  
   140006d45:	xor    al,BYTE PTR [rdx]
   140006d47:	jo     0x140006d6a
   140006d49:	add    eax,0x34050002
   140006d4e:	(bad)  
   140006d4f:	add    BYTE PTR [rax-0x3cffffed],ah
   140006d55:	adc    eax,DWORD PTR [rax]
   140006d57:	add    BYTE PTR [rax+0x6d],al
   140006d5a:	add    BYTE PTR [rax],al
   140006d5c:	and    DWORD PTR [rax],eax
   140006d5e:	add    al,BYTE PTR [rax]
   140006d60:	add    BYTE PTR [rsi+rax*1],dh
   140006d63:	add    BYTE PTR [rax-0x3cffffed],ah
   140006d69:	adc    eax,DWORD PTR [rax]
   140006d6b:	add    BYTE PTR [rax+0x6d],al
   140006d6e:	add    BYTE PTR [rax],al
   140006d70:	and    DWORD PTR [rip+0x34050002],eax        # 0x174056d78
   140006d76:	add    al,0x0
   140006d78:	push   rax
   140006d79:	adc    al,0x0
   140006d7b:	add    BYTE PTR [rbx+0x14],dh
   140006d7e:	add    BYTE PTR [rax],al
   140006d80:	lock ins BYTE PTR es:[rdi],dx
   140006d82:	add    BYTE PTR [rax],al
   140006d84:	and    DWORD PTR [rax],eax
   140006d86:	add    al,BYTE PTR [rax]
   140006d88:	add    BYTE PTR [rsp+rax*1],dh
   140006d8b:	add    BYTE PTR [rax+0x14],dl
   140006d8e:	add    BYTE PTR [rax],al
   140006d90:	jae    0x140006da6
   140006d92:	add    BYTE PTR [rax],al
   140006d94:	lock ins BYTE PTR es:[rdi],dx
   140006d96:	add    BYTE PTR [rax],al
   140006d98:	adc    DWORD PTR [rbx],ebx
   140006d9a:	(bad)  
   140006d9b:	add    BYTE PTR [rbx],dl
   140006d9d:	add    DWORD PTR [rax+rax*1],ebx
   140006da0:	(bad)  
   140006da1:	loopne 0x140006da8
   140006da3:	jo     0x140006da9
   140006da5:	(bad)  
   140006da6:	add    esi,DWORD PTR [rax]
   140006da8:	add    dl,BYTE PTR [rax+0x0]
   140006dab:	add    BYTE PTR [rdx-0x47ffffac],ah
   140006db1:	imul   eax,DWORD PTR [rax],0xffffff00
   140006db7:	jmp    QWORD PTR [rax+0x55]
   140006dbd:	add    BYTE PTR [rax],al
   140006dbf:	add    BYTE PTR [rbp+rdx*2+0x0],ch
   140006dc6:	add    BYTE PTR [rax],al
   140006dc8:	mov    eax,0x30000055
   140006dcd:	adc    eax,0xffff0000
   140006dd2:	(bad)  
   140006dd3:	call   FWORD PTR [rcx+0x15]
   140006dd9:	add    BYTE PTR [rax],al
   140006ddb:	add    dl,bl
   140006ddd:	adc    eax,0x10000
   140006de2:	add    BYTE PTR [rax],al
   140006de4:	sbb    dl,BYTE PTR [rsi]
   140006de6:	add    BYTE PTR [rax],al
   140006de8:	add    al,BYTE PTR [rax]
   140006dea:	add    BYTE PTR [rax],al
   140006dec:	(bad)  
   140006ded:	(bad)  
   140006dee:	add    BYTE PTR [rax],al
   140006df0:	add    BYTE PTR [rax],al
   140006df2:	add    BYTE PTR [rax],al
   140006df4:	sub    al,0x17
   140006df6:	add    BYTE PTR [rax],al
   140006df8:	(bad)  
   140006df9:	(bad)  
   140006dfa:	(bad)  
   140006dfb:	dec    DWORD PTR [rcx+0x17]
   140006dfe:	add    BYTE PTR [rax],al
   140006e00:	add    al,BYTE PTR [rax]
   140006e02:	add    BYTE PTR [rax],al
   140006e04:	push   rsp
   140006e05:	(bad)  
   140006e06:	add    BYTE PTR [rax],al
   140006e08:	(bad)  
   140006e09:	(bad)  
   140006e0a:	(bad)  
   140006e0b:	call   QWORD PTR [rcx]
   140006e0d:	sbb    al,BYTE PTR [rdi]
   140006e0f:	add    BYTE PTR [rcx],dl
   140006e11:	ret    0xf00d
   140006e14:	or     esp,eax
   140006e16:	or     DWORD PTR [rax+0x8],esi
   140006e19:	(bad)  
   140006e1a:	(bad)  
   140006e1b:	push   rax
   140006e1c:	(bad)  
   140006e1d:	xor    BYTE PTR [rax],al
   140006e1f:	add    BYTE PTR [rdx-0x6fffffac],ah
   140006e25:	imul   eax,DWORD PTR [rax],0xffffff00
   140006e2b:	call   rax
   140006e2d:	push   rbp
   140006e2e:	add    BYTE PTR [rax],al
   140006e30:	add    BYTE PTR [rax],al
   140006e32:	add    BYTE PTR [rax],al
   140006e34:	stc    
   140006e35:	push   rbp
   140006e36:	add    BYTE PTR [rax],al
   140006e38:	jo     0x140006e51
   140006e3a:	add    BYTE PTR [rax],al
   140006e3c:	(bad)  
   140006e3d:	(bad)  
   140006e3e:	(bad)  
   140006e3f:	dec    DWORD PTR [rbp+0x17]
   140006e45:	add    BYTE PTR [rax],al
   140006e47:	add    al,bl
   140006e49:	(bad)  
   140006e4a:	add    BYTE PTR [rax],al
   140006e4c:	add    DWORD PTR [rax],eax
   140006e4e:	add    BYTE PTR [rax],al
   140006e50:	jnp    0x140006e6b
   140006e52:	add    BYTE PTR [rax],al
   140006e54:	add    BYTE PTR [rax],al
   140006e56:	add    BYTE PTR [rax],al
   140006e58:	add    DWORD PTR [rsi],eax
   140006e5a:	add    al,BYTE PTR [rax]
   140006e5c:	(bad)  
   140006e5d:	xor    al,BYTE PTR [rdx]
   140006e5f:	push   rax
   140006e60:	adc    DWORD PTR [rip+0xffffffffa21d0009],esp        # 0xe21d6e6f
   140006e66:	(bad)  
   140006e67:	lock adc al,0xe0
   140006e6a:	adc    dl,al
   140006e6c:	adc    al,al
   140006e6e:	(bad)  
   140006e6f:	jo     0x140006e7e
   140006e71:	(bad)  
   140006e72:	or     al,0x30
   140006e74:	or     edx,DWORD PTR [rax+0x0]
   140006e77:	add    BYTE PTR [rdx+0x68000054],ah
   140006e7d:	imul   eax,DWORD PTR [rax],0xffffff00
   140006e83:	call   QWORD PTR [rax]
   140006e85:	push   rsi
   140006e86:	add    BYTE PTR [rax],al
   140006e88:	add    BYTE PTR [rax],al
   140006e8a:	add    BYTE PTR [rax],al
   140006e8c:	cmp    DWORD PTR [rsi+0x0],edx
   140006e8f:	add    BYTE PTR [rcx],al
   140006e91:	add    BYTE PTR [rax],al
   140006e93:	add    BYTE PTR [rbp+0x56],al
   140006e96:	add    BYTE PTR [rax],al
   140006e98:	add    DWORD PTR [rax],eax
   140006e9a:	add    BYTE PTR [rax],al
   140006e9c:	(bad)  
   140006e9d:	push   rsi
   140006e9e:	add    BYTE PTR [rax],al
   140006ea0:	add    DWORD PTR [rax],eax
   140006ea2:	add    BYTE PTR [rax],al
   140006ea4:	jge    0x140006efc
   140006ea6:	add    BYTE PTR [rax],al
   140006ea8:	movabs al,ds:0xcbffffffff000019
   140006eb1:	sbb    DWORD PTR [rax],eax
   140006eb3:	add    BYTE PTR [rax],al
   140006eb5:	add    BYTE PTR [rax],al
   140006eb7:	add    cl,bh
   140006eb9:	sbb    DWORD PTR [rax],eax
   140006ebb:	add    BYTE PTR [rcx],al
   140006ebd:	add    BYTE PTR [rax],al
   140006ebf:	add    BYTE PTR [rdx+0x200001a],dh
   140006ec5:	add    BYTE PTR [rax],al
   140006ec7:	add    BYTE PTR [rip+0x100001b],ah        # 0x141006ee8
   140006ecd:	add    BYTE PTR [rax],al
   140006ecf:	add    BYTE PTR [rdx+0x300001b],ah
   140006ed5:	add    BYTE PTR [rax],al
   140006ed7:	add    BYTE PTR [rbx],dl
   140006ed9:	sbb    al,0x0
   140006edb:	add    BYTE PTR [rcx],al
   140006edd:	add    BYTE PTR [rax],al
   140006edf:	add    BYTE PTR [rcx],ch
   140006ee1:	sbb    al,0x0
   140006ee3:	add    BYTE PTR [rax+rax*1],al
   140006ee6:	add    BYTE PTR [rax],al
   140006ee8:	pop    rsp
   140006ee9:	sbb    eax,0x10000
   140006eee:	add    BYTE PTR [rax],al
   140006ef0:	mov    ebx,DWORD PTR [rip+0x20000]        # 0x140026ef6
   140006ef6:	add    BYTE PTR [rax],al
   140006ef8:	xchg   ecx,eax
   140006ef9:	sbb    eax,0x10000
   140006efe:	add    BYTE PTR [rax],al
   140006f00:	lahf   
   140006f01:	sbb    eax,0x30000
   140006f06:	add    BYTE PTR [rax],al
   140006f08:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140006f09:	sbb    eax,0x40000
   140006f0e:	add    BYTE PTR [rax],al
   140006f10:	rcr    DWORD PTR [rip+0x0],1        # 0x140006f16
   140006f16:	add    BYTE PTR [rax],al
   140006f18:	adc    DWORD PTR [rax],ebp
   140006f1a:	or     eax,DWORD PTR [rax]
   140006f1c:	sub    BYTE PTR [rdx+rbx*1],dh
   140006f1f:	add    BYTE PTR [rax],bl
   140006f21:	add    DWORD PTR [rdx],edx
   140006f23:	add    BYTE PTR [rax+rsi*8],cl
   140006f26:	or     ah,al
   140006f28:	or     al,dl
   140006f2a:	(bad)  
   140006f2b:	rol    BYTE PTR [rax+rsi*2],0x3
   140006f2f:	(bad)  
   140006f30:	add    dl,BYTE PTR [rax+0x0]
   140006f33:	add    BYTE PTR [rdx+0x40000054],ah
   140006f39:	imul   eax,DWORD PTR [rax],0xffffff00
   140006f3f:	call   QWORD PTR [rax+0x56]
   140006f45:	add    BYTE PTR [rax],al
   140006f47:	add    BYTE PTR [rsi+rdx*2+0x10000],bl
   140006f4e:	add    BYTE PTR [rax],al
   140006f50:	test   al,0x56
   140006f52:	add    BYTE PTR [rax],al
   140006f54:	add    al,BYTE PTR [rax]
   140006f56:	add    BYTE PTR [rax],al
   140006f58:	(bad)  
   140006f59:	push   rsi
   140006f5a:	add    BYTE PTR [rax],al
   140006f5c:	add    al,BYTE PTR [rax]
   140006f5e:	add    BYTE PTR [rax],al
   140006f60:	loopne 0x140006fb8
   140006f62:	add    BYTE PTR [rax],al
   140006f64:	add    al,0x0
   140006f66:	add    BYTE PTR [rax],al
   140006f68:	xorps  xmm0,XMMWORD PTR [rax]
   140006f6b:	add    BYTE PTR [rdx],al
   140006f6d:	add    BYTE PTR [rax],al
   140006f6f:	add    BYTE PTR [rdi],cl
   140006f71:	push   rdi
   140006f72:	add    BYTE PTR [rax],al
   140006f74:	add    DWORD PTR [rax],eax
   140006f76:	add    BYTE PTR [rax],al
   140006f78:	xorps  xmm0,XMMWORD PTR [rax]
   140006f7b:	add    BYTE PTR [rdi],al
   140006f7d:	add    BYTE PTR [rax],al
   140006f7f:	add    BYTE PTR [rbx],bl
   140006f81:	push   rdi
   140006f82:	add    BYTE PTR [rax],al
   140006f84:	or     BYTE PTR [rax],al
   140006f86:	add    BYTE PTR [rax],al
   140006f88:	rex.RXB push r15
   140006f8a:	add    BYTE PTR [rax],al
   140006f8c:	or     BYTE PTR [rax],al
   140006f8e:	add    BYTE PTR [rax],al
   140006f90:	push   rbx
   140006f91:	push   rdi
   140006f92:	add    BYTE PTR [rax],al
   140006f94:	or     al,BYTE PTR [rax]
   140006f96:	add    BYTE PTR [rax],al
   140006f98:	(bad)  
   140006f99:	push   rdi
   140006f9a:	add    BYTE PTR [rax],al
   140006f9c:	or     BYTE PTR [rax],al
   140006f9e:	add    BYTE PTR [rax],al
   140006fa0:	(bad)  
   140006fa1:	push   rdi
   140006fa2:	add    BYTE PTR [rax],al
   140006fa4:	(bad)  
   140006fa5:	add    BYTE PTR [rax],al
   140006fa7:	add    BYTE PTR [rdx+0x57],al
   140006fad:	(bad)  
   140006fae:	add    BYTE PTR [rax],al
   140006fb0:	(bad)  
   140006fb1:	(bad)  
   140006fb2:	(bad)  
   140006fb3:	dec    DWORD PTR [rdi+0x1e]
   140006fb9:	add    BYTE PTR [rax],al
   140006fbb:	add    BYTE PTR [rsi+rbx*1+0x10000],bl
   140006fc2:	add    BYTE PTR [rax],al
   140006fc4:	adc    DWORD PTR [rdi],ebx
   140006fc6:	add    BYTE PTR [rax],al
   140006fc8:	add    al,BYTE PTR [rax]
   140006fca:	add    BYTE PTR [rax],al
   140006fcc:	and    BYTE PTR [rdi],bl
   140006fce:	add    BYTE PTR [rax],al
   140006fd0:	add    DWORD PTR [rax],eax
   140006fd2:	add    BYTE PTR [rax],al
   140006fd4:	rex.WX (bad) 
   140006fd6:	add    BYTE PTR [rax],al
   140006fd8:	add    eax,DWORD PTR [rax]
   140006fda:	add    BYTE PTR [rax],al
   140006fdc:	mov    bl,BYTE PTR [rdi]
   140006fde:	add    BYTE PTR [rax],al
   140006fe0:	add    al,BYTE PTR [rax]
   140006fe2:	add    BYTE PTR [rax],al
   140006fe4:	mov    ds,WORD PTR [rdi]
   140006fe6:	add    BYTE PTR [rax],al
   140006fe8:	add    al,0x0
   140006fea:	add    BYTE PTR [rax],al
   140006fec:	test   al,0x1f
   140006fee:	add    BYTE PTR [rax],al
   140006ff0:	(bad)  
   140006ff1:	add    BYTE PTR [rax],al
   140006ff3:	add    bh,cl
   140006ff5:	(bad)  
   140006ff6:	add    BYTE PTR [rax],al
   140006ff8:	(bad)  
   140006ff9:	add    BYTE PTR [rax],al
   140006ffb:	add    BYTE PTR [rbx],ah
   140006ffd:	and    BYTE PTR [rax],al
   140006fff:	add    BYTE PTR [rax],cl
   140007001:	add    BYTE PTR [rax],al
   140007003:	add    BYTE PTR [rax],ch
   140007005:	and    BYTE PTR [rax],al
   140007007:	add    BYTE PTR [rdi],al
   140007009:	add    BYTE PTR [rax],al
   14000700b:	add    BYTE PTR [rdi+0x20],cl
   14000700e:	add    BYTE PTR [rax],al
   140007010:	or     DWORD PTR [rax],eax
   140007012:	add    BYTE PTR [rax],al
   140007014:	mov    BYTE PTR [rax],ah
   140007016:	add    BYTE PTR [rax],al
   140007018:	or     BYTE PTR [rax],al
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	mov    WORD PTR [rax],fs
   14000701e:	add    BYTE PTR [rax],al
   140007020:	or     al,BYTE PTR [rax]
   140007022:	add    BYTE PTR [rax],al
   140007024:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007025:	and    BYTE PTR [rax],al
   140007027:	add    BYTE PTR [rax+rax*1],cl
   14000702a:	add    BYTE PTR [rax],al
   14000702c:	shl    DWORD PTR [rax],1
   14000702e:	add    BYTE PTR [rax],al
   140007030:	or     eax,0x4c000000
   140007035:	and    DWORD PTR [rax],eax
   140007037:	add    BYTE PTR [rdi],al
   140007039:	add    BYTE PTR [rax],al
   14000703b:	add    BYTE PTR [rcx+0x21],ah
   14000703e:	add    BYTE PTR [rax],al
   140007040:	add    DWORD PTR [rax],eax
   140007042:	add    BYTE PTR [rax],al
   140007044:	xchg   ebp,eax
   140007045:	and    DWORD PTR [rax],eax
   140007047:	add    BYTE PTR [rip+0xffffffffa0000000],cl        # 0xe000704d
   14000704d:	and    DWORD PTR [rax],eax
   14000704f:	add    BYTE PTR [rdi],al
   140007051:	add    BYTE PTR [rax],al
   140007053:	add    BYTE PTR [rbx+0x1000021],ch
   140007059:	add    BYTE PTR [rax],al
   14000705b:	add    BYTE PTR [rsi+0x21],dh
   140007061:	add    BYTE PTR [rax],al
   140007063:	add    BYTE PTR [rip+0xffffffffff000022],dl        # 0x13f00708b
   140007069:	(bad)  
   14000706a:	(bad)  
   14000706b:	call   QWORD PTR [rcx]
   14000706d:	sub    DWORD PTR [rdx],ecx
   14000706f:	add    BYTE PTR [rcx],ah
   140007071:	add    DWORD PTR [rbx],ebx
   140007073:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e08469
   140007079:	ror    BYTE PTR [rdi],1
   14000707b:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b607cf2
   140007082:	or     dl,BYTE PTR [rax-0x5e]
   140007085:	push   rsp
   140007086:	add    BYTE PTR [rax],al
   140007088:	sbb    BYTE PTR [rcx+0x0],ch
   14000708b:	add    bh,bh
   14000708d:	(bad)  
   14000708e:	(bad)  
   14000708f:	call   QWORD PTR [rax+0x57]
   140007095:	add    BYTE PTR [rax],al
   140007097:	add    BYTE PTR [rdi+rdx*2+0x10000],bl
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	test   al,0x57
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	add    al,BYTE PTR [rax]
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	mov    ah,0x57
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    eax,DWORD PTR [rax]
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	rcl    BYTE PTR [rdi+0x0],0x0
   1400070b4:	jo     0x1400070d8
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	(bad)  
   1400070b9:	(bad)  
   1400070ba:	(bad)  
   1400070bb:	jmp    QWORD PTR [rdx+riz*1+0x0]
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	adc    eax,0x1000023
   1400070c9:	add    BYTE PTR [rax],al
   1400070cb:	add    BYTE PTR [rcx+0x2000023],dh
   1400070d1:	add    BYTE PTR [rax],al
   1400070d3:	add    BYTE PTR [rbx],cl
   1400070d5:	and    al,0x0
   1400070d7:	add    BYTE PTR [rbx],al
   1400070d9:	add    BYTE PTR [rax],al
   1400070db:	add    BYTE PTR [rbx+0x25],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	add    al,0x0
   1400070e2:	add    BYTE PTR [rax],al
   1400070e4:	and    ax,0x0
   1400070e8:	add    eax,DWORD PTR [rax]
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	(bad)  
   1400070ed:	and    eax,0x20000
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	mov    dh,0x25
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	add    DWORD PTR [rax],eax
   1400070fa:	add    BYTE PTR [rax],al
   1400070fc:	(bad)
   1400070ff:	add    BYTE PTR [rax],al
   140007101:	add    BYTE PTR [rax],al
   140007103:	add    dl,dh
   140007105:	and    eax,0x30000
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	adc    esp,DWORD PTR [rsi]
   14000710e:	add    BYTE PTR [rax],al
   140007110:	add    al,BYTE PTR [rax]
   140007112:	add    BYTE PTR [rax],al
   140007114:	(bad)  
   140007115:	add    BYTE PTR es:[rax],al
   140007118:	add    BYTE PTR [rax],al
   14000711a:	add    BYTE PTR [rax],al
   14000711c:	cmp    BYTE PTR [rsi],ah
   14000711e:	add    BYTE PTR [rax],al
   140007120:	add    DWORD PTR [rax],eax
   140007122:	add    BYTE PTR [rax],al
   140007124:	rex.XB
   140007125:	add    BYTE PTR es:[rax],al
   140007128:	add    BYTE PTR [rax],al
   14000712a:	add    BYTE PTR [rax],al
   14000712c:	rex.WRX
   14000712d:	add    BYTE PTR es:[rax],al
   140007130:	(bad)  
   140007131:	(bad)  
   140007132:	(bad)  
   140007133:	call   QWORD PTR [rcx]
   140007135:	adc    eax,DWORD PTR [rdx]
   140007137:	add    BYTE PTR [rdx],cl
   140007139:	mov    dl,0x6
   14000713b:	xor    BYTE PTR [rdx-0xfffffac],ah
   140007141:	push   0xffffffffffff0000
   140007146:	(bad)  
   140007147:	call   rax
   140007149:	push   rdi
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	shl    BYTE PTR [rsi],0x0
   14000714f:	add    bh,bh
   140007151:	(bad)  
   140007152:	(bad)  
   140007153:	call   rsi
   140007155:	add    BYTE PTR es:[rax],al
   140007158:	add    BYTE PTR [rax],al
   14000715a:	add    BYTE PTR [rax],al
   14000715c:	adc    DWORD PTR [rsi],edx
   14000715e:	(bad)  
   14000715f:	add    BYTE PTR [rsi],cl
   140007161:	mov    dl,0x7
   140007163:	loopne 0x14000716a
   140007165:	jo     0x14000716b
   140007167:	(bad)  
   140007168:	add    esi,DWORD PTR [rax]
   14000716a:	add    dl,BYTE PTR [rax-0x5e]
   14000716d:	push   rsp
   14000716e:	add    BYTE PTR [rax],al
   140007170:	enter  0x68,0x0
   140007174:	(bad)  
   140007175:	(bad)  
   140007176:	(bad)  
   140007177:	inc    DWORD PTR [rax]
   140007179:	pop    rax
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	add    BYTE PTR [rax],al
   14000717e:	add    BYTE PTR [rax],al
   140007180:	or     al,0x58
   140007182:	add    BYTE PTR [rax],al
   140007184:	add    DWORD PTR [rax],eax
   140007186:	add    BYTE PTR [rax],al
   140007188:	sbb    BYTE PTR [rax+0x0],bl
   14000718b:	add    BYTE PTR [rdx],al
   14000718d:	add    BYTE PTR [rax],al
   14000718f:	add    BYTE PTR [rax+rbx*2],ah
   140007192:	add    BYTE PTR [rax],al
   140007194:	add    eax,DWORD PTR [rax]
   140007196:	add    BYTE PTR [rax],al
   140007198:	xor    BYTE PTR [rax+0x0],bl
   14000719b:	add    BYTE PTR [rax+rax*1],al
   14000719e:	add    BYTE PTR [rax],al
   1400071a0:	cmp    al,0x58
   1400071a2:	add    BYTE PTR [rax],al
   1400071a4:	nop
   1400071a5:	(bad)  
   1400071a6:	add    BYTE PTR [rax],al
   1400071a8:	(bad)  
   1400071a9:	(bad)  
   1400071aa:	(bad)  
   1400071ab:	push   QWORD PTR [rsi+0x27]
   1400071b1:	add    BYTE PTR [rax],al
   1400071b3:	add    bl,cl
   1400071b5:	(bad)  
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	add    DWORD PTR [rax],eax
   1400071ba:	add    BYTE PTR [rax],al
   1400071bc:	(bad)  
   1400071bd:	sub    BYTE PTR [rax],al
   1400071bf:	add    BYTE PTR [rdx],al
   1400071c1:	add    BYTE PTR [rax],al
   1400071c3:	add    BYTE PTR [rsi],al
   1400071c5:	sub    DWORD PTR [rax],eax
   1400071c7:	add    BYTE PTR [rbx],al
   1400071c9:	add    BYTE PTR [rax],al
   1400071cb:	add    BYTE PTR [rsi],dh
   1400071cd:	sub    DWORD PTR [rax],eax
   1400071cf:	add    BYTE PTR [rax+rax*1],al
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	xchg   DWORD PTR [rcx],ebp
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	add    eax,0x9a000000
   1400071dd:	sub    al,BYTE PTR [rax]
   1400071df:	add    BYTE PTR [rax+rax*1],al
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	sbb    eax,0x300002b
   1400071e9:	add    BYTE PTR [rax],al
   1400071eb:	add    BYTE PTR [rsi],dh
   1400071ed:	sub    eax,DWORD PTR [rax]
   1400071ef:	add    BYTE PTR [rdx],al
   1400071f1:	add    BYTE PTR [rax],al
   1400071f3:	add    BYTE PTR [rdi+0x2b],cl
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	add    DWORD PTR [rax],eax
   1400071fa:	add    BYTE PTR [rax],al
   1400071fc:	push   0x2b
   140007201:	add    BYTE PTR [rax],al
   140007203:	add    BYTE PTR [rcx-0xffffd5],al
   140007209:	(bad)  
   14000720a:	(bad)  
   14000720b:	call   FWORD PTR [rcx]
   14000720d:	(bad)  
   14000720e:	(bad)  
   14000720f:	add    BYTE PTR [rip+0xc00a034],bl        # 0x14c011249
   140007215:	add    DWORD PTR [rdx+0x3e00500],ebx
   14000721b:	jo     0x14000721f
   14000721d:	(bad)  
   14000721e:	add    BYTE PTR [rax],al
   140007220:	test   al,0x54
   140007222:	add    BYTE PTR [rax],al
   140007224:	movabs al,ds:0xff000004c2000068
   14000722d:	(bad)  
   14000722e:	(bad)  
   14000722f:	call   QWORD PTR [rax+0x58]
   140007232:	add    BYTE PTR [rax],al
   140007234:	and    BYTE PTR [rax+rax*1],ch
   140007237:	add    bh,bh
   140007239:	(bad)  
   14000723a:	(bad)  
   14000723b:	call   QWORD PTR [rcx+0x2d]
   14000723e:	add    BYTE PTR [rax],al
   140007240:	add    BYTE PTR [rax],al
   140007242:	add    BYTE PTR [rax],al
   140007244:	gs sub eax,0xffff0000
   14000724a:	(bad)  
   14000724b:	call   QWORD PTR [rbp+rbp*1+0x0]
   140007252:	add    BYTE PTR [rax],al
   140007254:	lock sub eax,0xffff0000
   14000725a:	(bad)  
   14000725b:	inc    DWORD PTR [rcx]
   14000725d:	or     BYTE PTR [rax+rax*1],al
   140007260:	or     BYTE PTR [rdx+0x4],dl
   140007263:	jo     0x140007268
   140007265:	(bad)  
   140007266:	add    dh,BYTE PTR [rax]
   140007268:	and    DWORD PTR [rdi],edx
   14000726a:	(bad)  
   14000726b:	add    BYTE PTR [rdi],dl
   14000726d:	hlt    
   14000726e:	or     al,0x0
   140007270:	or     ah,ah
   140007272:	or     eax,DWORD PTR [rax]
   140007274:	add    eax,0x50000a54
   140007279:	add    BYTE PTR cs:[rax],al
   14000727c:	ja     0x1400072ac
   14000727e:	add    BYTE PTR [rax],al
   140007280:	pop    rsp
   140007281:	jb     0x140007283
   140007283:	add    BYTE PTR [rcx],ah
   140007285:	add    BYTE PTR [rax],al
   140007287:	add    BYTE PTR [rax+0x2e],dl
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	ja     0x1400072bc
   14000728e:	add    BYTE PTR [rax],al
   140007290:	pop    rsp
   140007291:	jb     0x140007293
   140007293:	add    BYTE PTR [rcx],ah
   140007295:	add    BYTE PTR [rsi],al
   140007297:	add    BYTE PTR [rax],al
   140007299:	hlt    
   14000729a:	or     al,0x0
   14000729c:	add    ah,ah
   14000729e:	or     eax,DWORD PTR [rax]
   1400072a0:	add    BYTE PTR [rdx+rcx*1+0x0],dl
   1400072a4:	push   rax
   1400072a5:	add    BYTE PTR cs:[rax],al
   1400072a8:	ja     0x1400072d8
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	pop    rsp
   1400072ad:	jb     0x1400072af
   1400072af:	add    BYTE PTR [rcx],dl
   1400072b1:	and    ecx,DWORD PTR [rax]
   1400072b3:	add    BYTE PTR [rbx],ah
   1400072b5:	je     0x1400072c4
   1400072b7:	add    BYTE PTR [rsi],bl
   1400072b9:	fs or  al,0x0
   1400072bc:	sbb    DWORD PTR [rbx+rcx*1],esi
   1400072bf:	add    BYTE PTR [rbx],cl
   1400072c1:	jb     0x1400072ca
   1400072c3:	loopne 0x140007267
   1400072c5:	push   rsp
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	js     0x140007332
   1400072ca:	add    BYTE PTR [rax],al
   1400072cc:	(bad)  
   1400072cd:	(bad)  
   1400072ce:	(bad)  
   1400072cf:	jmp    QWORD PTR [rax+0x58]
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	loopne 0x140007305
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	(bad)  
   1400072d9:	(bad)  
   1400072da:	(bad)  
   1400072db:	dec    DWORD PTR [rax+rsi*1]
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	add    BYTE PTR [rax],al
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b41572f2
   1400072ea:	or     al,BYTE PTR [rax]
   1400072ec:	adc    eax,0x15000964
   1400072f1:	xor    al,0x8
   1400072f3:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0844b
   1400072f9:	sbb    DWORD PTR [rdx],ecx
   1400072fb:	add    BYTE PTR [rcx],bl
   1400072fd:	or     eax,DWORD PTR fs:[rax]
   140007300:	sbb    DWORD PTR [rdx+rcx*1+0x0],edx
   140007304:	sbb    DWORD PTR [rcx+rcx*1],esi
   140007307:	add    BYTE PTR [rcx],bl
   140007309:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e086ff
   14000730f:	shl    BYTE PTR [rcx],0x5
   140007312:	add    al,BYTE PTR [rax]
   140007314:	add    eax,0x20000874
   140007319:	xor    al,BYTE PTR [rax]
   14000731b:	add    BYTE PTR [rbp+0x32],bl
   14000731e:	add    BYTE PTR [rax],al
   140007320:	clc    
   140007321:	jb     0x140007323
   140007323:	add    BYTE PTR [rcx],ah
   140007325:	add    BYTE PTR [rax],al
   140007327:	add    BYTE PTR [rax],ah
   140007329:	xor    al,BYTE PTR [rax]
   14000732b:	add    BYTE PTR [rbp+0x32],bl
   14000732e:	add    BYTE PTR [rax],al
   140007330:	clc    
   140007331:	jb     0x140007333
   140007333:	add    BYTE PTR [rcx],al
   140007335:	sbb    cl,BYTE PTR [rdx]
   140007337:	add    BYTE PTR [rdx],bl
   140007339:	je     0x140007344
   14000733b:	add    BYTE PTR [rdx],bl
   14000733d:	or     BYTE PTR fs:[rax],al
   140007340:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140007344:	sbb    dh,BYTE PTR [rsi+rax*1]
   140007347:	add    BYTE PTR [rdx],bl
   140007349:	xor    dl,BYTE PTR [rsi]
   14000734b:	loopne 0x14000734e
   14000734d:	or     al,BYTE PTR [rax+rax*1]
   140007350:	or     dh,BYTE PTR [rdi+rax*1]
   140007353:	add    BYTE PTR [rdx],cl
   140007355:	xor    al,BYTE PTR [rsi]
   140007357:	jo     0x14000737a
   140007359:	add    eax,0x64050002
   14000735e:	(bad)  
   14000735f:	add    BYTE PTR [rax-0x3affffcd],dh
   140007365:	xor    eax,DWORD PTR [rax]
   140007367:	add    BYTE PTR [rbx+rsi*2+0x0],cl
   14000736b:	add    BYTE PTR [rcx],ah
   14000736d:	add    BYTE PTR [rax],al
   14000736f:	add    BYTE PTR [rax-0x3affffcd],dh
   140007375:	xor    eax,DWORD PTR [rax]
   140007377:	add    BYTE PTR [rbx+rsi*2+0x0],cl
   14000737b:	add    BYTE PTR [rcx],al
   14000737d:	clts   
   14000737f:	add    BYTE PTR [rdi],cl
   140007381:	push   rsp
   140007382:	or     DWORD PTR [rax],eax
   140007384:	sysenter 
   140007386:	or     BYTE PTR [rax],al
   140007388:	rdmsr  
   14000738a:	or     esi,DWORD PTR [rax+0x21]
   14000738d:	adc    BYTE PTR [rax+rax*1],al
   140007390:	adc    ah,ah
   140007392:	(bad)  
   140007393:	add    BYTE PTR [rip+0x30000664],al        # 0x1700079fd
   140007399:	xor    al,0x0
   14000739b:	add    BYTE PTR [rbp+0x34],ch
   14000739e:	add    BYTE PTR [rax],al
   1400073a0:	jl     0x140007415
   1400073a2:	add    BYTE PTR [rax],al
   1400073a4:	and    DWORD PTR [rax],eax
   1400073a6:	add    BYTE PTR [rax],al
   1400073a8:	xor    BYTE PTR [rax+rax*1],dh
   1400073ab:	add    BYTE PTR [rbp+0x34],ch
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	jl     0x140007425
   1400073b2:	add    BYTE PTR [rax],al
   1400073b4:	and    DWORD PTR [rax],eax
   1400073b6:	add    al,0x0
   1400073b8:	add    ah,ah
   1400073ba:	(bad)  
   1400073bb:	add    BYTE PTR [rax],al
   1400073bd:	fs (bad) 
   1400073bf:	add    BYTE PTR [rax],dh
   1400073c1:	xor    al,0x0
   1400073c3:	add    BYTE PTR [rbp+0x34],ch
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	jl     0x14000743d
   1400073ca:	add    BYTE PTR [rax],al
   1400073cc:	sbb    DWORD PTR [rdx],esp
   1400073ce:	or     al,BYTE PTR [rax]
   1400073d0:	and    dh,BYTE PTR [rdi+rcx*1+0x0]
   1400073d4:	sbb    eax,0x18000e64
   1400073d9:	xor    al,0xc
   1400073db:	add    BYTE PTR [rdx],cl
   1400073dd:	jb     0x1400073e5
   1400073df:	lock add al,0xe0
   1400073e2:	add    al,al
   1400073e4:	movabs ds:0xff00006850000054,al
   1400073ed:	(bad)  
   1400073ee:	(bad)  
   1400073ef:	inc    DWORD PTR [rax]
   1400073f1:	add    BYTE PTR [rax],al
   1400073f3:	add    bh,bh
   1400073f5:	(bad)  
   1400073f6:	(bad)  
   1400073f7:	inc    DWORD PTR [rax]
	...
   140007401:	add    BYTE PTR [rax],al
   140007403:	add    BYTE PTR [rcx],al
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rcx],al
   140007409:	add    BYTE PTR [rax],al
   14000740b:	add    BYTE PTR [rax],dl
   14000740d:	je     0x14000740f
   14000740f:	add    BYTE PTR [rax+0x0],al
	...
   14000741a:	add    BYTE PTR [rax],al
   14000741c:	nop
   14000741d:	pop    rax
   14000741e:	add    BYTE PTR [rax],al
   140007420:	rex.W add BYTE PTR [rax],al
   140007423:	add    BYTE PTR [rax],dh
   140007425:	add    BYTE PTR ss:[rax],al
   140007428:	(bad)  
   140007429:	(bad)  
   14000742a:	(bad)  
   14000742b:	call   QWORD PTR [rbp+0x36]
   140007431:	add    BYTE PTR [rax],al
   140007433:	add    BYTE PTR [rbp-0xffffca],ah
   140007439:	(bad)  
   14000743a:	(bad)  
   14000743b:	call   QWORD PTR [rax+0x58]
   140007441:	add    BYTE PTR [rax],al
   140007443:	add    BYTE PTR [rbp+0x1000058],bl
   140007449:	add    BYTE PTR [rax],al
   14000744b:	add    BYTE PTR [rcx],bl
   14000744d:	or     al,BYTE PTR [rdx]
   14000744f:	add    BYTE PTR [rdx],cl
   140007451:	push   rdx
   140007452:	(bad)  
   140007453:	push   rax
   140007454:	movabs ds:0x100006850000054,al
   14000745d:	adc    al,0x4
   14000745f:	add    BYTE PTR [rsp+rsi*1],dl
   140007462:	(bad)  
   140007463:	add    BYTE PTR [rdx+rsi*1],dl
   140007466:	adc    BYTE PTR [rax+0x1],dh
   140007469:	clts   
   14000746b:	add    BYTE PTR [rdi],cl
   14000746d:	or     BYTE PTR fs:[rax],al
   140007470:	sysenter 
   140007472:	(bad)  
   140007473:	add    BYTE PTR [rdi],cl
   140007475:	xor    cl,BYTE PTR [rbx]
   140007477:	jo     0x14000749a
   140007479:	add    eax,0x54050002
   14000747e:	(bad)  
   14000747f:	add    BYTE PTR [rax],ah
   140007481:	cmp    BYTE PTR [rax],al
   140007483:	add    BYTE PTR [rcx+0x68000038],cl
   140007489:	je     0x14000748b
   14000748b:	add    BYTE PTR [rcx],ah
   14000748d:	add    BYTE PTR [rax],al
   14000748f:	add    BYTE PTR [rax],ah
   140007491:	cmp    BYTE PTR [rax],al
   140007493:	add    BYTE PTR [rcx+0x68000038],cl
   140007499:	je     0x14000749b
   14000749b:	add    BYTE PTR [rcx],ah
   14000749d:	add    BYTE PTR [rdx],al
   14000749f:	add    BYTE PTR [rax],al
   1400074a1:	push   rsp
   1400074a2:	(bad)  
   1400074a3:	add    BYTE PTR [rax],ah
   1400074a5:	cmp    BYTE PTR [rax],al
   1400074a7:	add    BYTE PTR [rcx+0x68000038],cl
   1400074ad:	je     0x1400074af
   1400074af:	add    BYTE PTR [rcx],al
   1400074b1:	clts   
   1400074b3:	add    BYTE PTR [rdi],cl
   1400074b5:	fs (bad) 
   1400074b7:	add    BYTE PTR [rdi],cl
   1400074b9:	xor    al,0x6
   1400074bb:	add    BYTE PTR [rdi],cl
   1400074bd:	xor    cl,BYTE PTR [rbx]
   1400074bf:	jo     0x1400074c2
   1400074c1:	or     eax,0x540d0006
   1400074c6:	or     eax,DWORD PTR [rax]
   1400074c8:	or     eax,0x7f00932
   1400074cd:	jo     0x1400074d5
   1400074cf:	(bad)  
   1400074d0:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x1040574d8
   1400074d6:	or     DWORD PTR [rax],eax
   1400074d8:	and    BYTE PTR [rdx],bh
   1400074da:	add    BYTE PTR [rax],al
   1400074dc:	rex.WR cmp r8b,BYTE PTR [rax]
   1400074df:	add    al,al
   1400074e1:	je     0x1400074e3
   1400074e3:	add    BYTE PTR [rcx],ah
   1400074e5:	xor    al,0x4
   1400074e7:	add    BYTE PTR [rsp+rsi*1],dh
   1400074ea:	or     BYTE PTR [rax],al
   1400074ec:	add    eax,0x4c000ae4
   1400074f1:	cmp    al,BYTE PTR [rax]
   1400074f3:	add    BYTE PTR [rdx+rdi*1+0x0],dl
   1400074f7:	add    al,dl
   1400074f9:	je     0x1400074fb
   1400074fb:	add    BYTE PTR [rcx],ah
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rax],ah
   140007501:	cmp    al,BYTE PTR [rax]
   140007503:	add    BYTE PTR [rdx+rdi*1+0x0],cl
   140007507:	add    al,al
   140007509:	je     0x14000750b
   14000750b:	add    BYTE PTR [rcx],ah
   14000750d:	add    BYTE PTR [rax+rax*1],al
   140007510:	add    ah,ah
   140007512:	or     al,BYTE PTR [rax]
   140007514:	add    ah,al
   140007516:	or     DWORD PTR [rax],eax
   140007518:	and    BYTE PTR [rdx],bh
   14000751a:	add    BYTE PTR [rax],al
   14000751c:	rex.WR cmp r8b,BYTE PTR [rax]
   14000751f:	add    al,al
   140007521:	je     0x140007523
   140007523:	add    BYTE PTR [rcx],ah
   140007525:	add    BYTE PTR [rsi],al
   140007527:	add    BYTE PTR [rax],al
   140007529:	in     al,0xa
   14000752b:	add    BYTE PTR [rax],al
   14000752d:	(bad)  
   14000752e:	or     DWORD PTR [rax],eax
   140007530:	add    BYTE PTR [rax+rcx*1],dh
   140007533:	add    BYTE PTR [rax],ah
   140007535:	cmp    al,BYTE PTR [rax]
   140007537:	add    BYTE PTR [rdx+rdi*1+0x0],cl
   14000753b:	add    al,al
   14000753d:	je     0x14000753f
   14000753f:	add    BYTE PTR [rcx],al
   140007541:	or     eax,0x420d0003
   140007546:	or     eax,esi
   140007548:	(bad)  
   140007549:	loopne 0x14000754b
   14000754b:	add    BYTE PTR [rcx],ah
   14000754d:	or     al,BYTE PTR [rax+rax*1]
   140007550:	or     ah,BYTE PTR [rcx+rcx*1+0x0]
   140007554:	add    eax,0x90000834
   140007559:	cmp    eax,DWORD PTR [rax]
   14000755b:	add    BYTE PTR [rdx+0x4000003b],ah
   140007561:	jne    0x140007563
   140007563:	add    BYTE PTR [rcx],ah
   140007565:	add    eax,0x74050002
   14000756a:	add    al,0x0
   14000756c:	movabs ds:0x4c00003c1300003b,al
   140007575:	jne    0x140007577
   140007577:	add    BYTE PTR [rcx],ah
   140007579:	add    BYTE PTR [rax],al
   14000757b:	add    BYTE PTR [rdx+0x1300003b],ah
   140007581:	cmp    al,0x0
   140007583:	add    BYTE PTR [rbp+rsi*2+0x0],cl
   140007587:	add    BYTE PTR [rcx],ah
   140007589:	add    BYTE PTR [rdx],al
   14000758b:	add    BYTE PTR [rax],al
   14000758d:	or     DWORD PTR fs:[rax],eax
   140007590:	nop
   140007591:	cmp    eax,DWORD PTR [rax]
   140007593:	add    BYTE PTR [rdx+0x4000003b],ah
   140007599:	jne    0x14000759b
   14000759b:	add    BYTE PTR [rcx],ah
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    BYTE PTR [rax-0x5dffffc5],dl
   1400075a5:	cmp    eax,DWORD PTR [rax]
   1400075a7:	add    BYTE PTR [rax+0x75],al
   1400075aa:	add    BYTE PTR [rax],al
   1400075ac:	add    DWORD PTR [rbx],edx
   1400075ae:	add    DWORD PTR [rax],eax
   1400075b0:	adc    eax,DWORD PTR [rdx+0x0]
   1400075b3:	add    BYTE PTR [rcx],dl
   1400075b5:	sbb    BYTE PTR [rax+rax*1],al
   1400075b8:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400075bb:	add    BYTE PTR [rdx],cl
   1400075bd:	push   rdx
   1400075be:	(bad)  
   1400075bf:	jo     0x140007563
   1400075c1:	push   rsp
   1400075c2:	add    BYTE PTR [rax],al
   1400075c4:	sub    BYTE PTR [rax+0x0],ch
   1400075c7:	add    bh,bh
   1400075c9:	(bad)  
   1400075ca:	(bad)  
   1400075cb:	inc    eax
   1400075cd:	pop    rax
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	lock add BYTE PTR [r8],al
   1400075d4:	(bad)  
   1400075d5:	(bad)  
   1400075d6:	(bad)  
   1400075d7:	jmp    FWORD PTR [rcx]
   1400075d9:	rex.X add BYTE PTR [rax],al
   1400075dc:	add    BYTE PTR [rax],al
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	cmp    eax,0xff000042
   1400075e5:	(bad)  
   1400075e6:	(bad)  
   1400075e7:	inc    DWORD PTR [rcx]
   1400075e9:	or     BYTE PTR [rax+rax*1],al
   1400075ec:	or     BYTE PTR [rdx],dh
   1400075ee:	add    al,0x70
   1400075f0:	add    esp,DWORD PTR [rax+0x2]
   1400075f3:	push   rax
   1400075f4:	and    DWORD PTR [rdx],ebp
   1400075f6:	(bad)  
   1400075f7:	add    BYTE PTR [rdx],ch
   1400075f9:	xor    al,0x8
   1400075fb:	add    BYTE PTR [rax],dl
   1400075fd:	hlt    
   1400075fe:	or     al,BYTE PTR [rax]
   140007600:	add    eax,0x500009e4
   140007605:	rex.X add BYTE PTR [rax],al
   140007608:	ins    DWORD PTR es:[rdi],dx
   140007609:	rex.X add BYTE PTR [rax],al
   14000760c:	call   0x161007686
   140007611:	add    BYTE PTR [rax],al
   140007613:	add    BYTE PTR [rax+0x42],dl
   140007616:	add    BYTE PTR [rax],al
   140007618:	ins    DWORD PTR es:[rdi],dx
   140007619:	rex.X add BYTE PTR [rax],al
   14000761c:	call   0x161007696
   140007621:	add    BYTE PTR [rax+rax*1],al
   140007624:	add    ah,dh
   140007626:	or     al,BYTE PTR [rax]
   140007628:	add    ah,ah
   14000762a:	or     DWORD PTR [rax],eax
   14000762c:	push   rax
   14000762d:	rex.X add BYTE PTR [rax],al
   140007630:	ins    DWORD PTR es:[rdi],dx
   140007631:	rex.X add BYTE PTR [rax],al
   140007634:	call   0x1610076ae
   140007639:	add    BYTE PTR [rsi],al
   14000763b:	add    BYTE PTR [rax],al
   14000763d:	hlt    
   14000763e:	or     al,BYTE PTR [rax]
   140007640:	add    ah,ah
   140007642:	or     DWORD PTR [rax],eax
   140007644:	add    BYTE PTR [rax+rcx*1],dh
   140007647:	add    BYTE PTR [rax+0x42],dl
   14000764a:	add    BYTE PTR [rax],al
   14000764c:	ins    DWORD PTR es:[rdi],dx
   14000764d:	rex.X add BYTE PTR [rax],al
   140007650:	call   0x1590076ca
   140007655:	sbb    DWORD PTR [rsi],eax
   140007657:	add    BYTE PTR [rcx],bl
   140007659:	or     DWORD PTR fs:[rax],eax
   14000765c:	adc    al,0x34
   14000765e:	or     BYTE PTR [rax],al
   140007660:	(bad)  
   140007661:	push   rdx
   140007662:	add    dh,BYTE PTR [rax-0x5e]
   140007665:	push   rsp
   140007666:	add    BYTE PTR [rax],al
   140007668:	add    BYTE PTR [rax+0x0],ch
   14000766b:	add    bh,bh
   14000766d:	(bad)  
   14000766e:	(bad)  
   14000766f:	inc    DWORD PTR [rax]
   140007671:	add    BYTE PTR [rax],al
   140007673:	add    BYTE PTR [rax],al
   140007675:	add    BYTE PTR [rax],al
   140007677:	add    al,dl
   140007679:	pop    rax
   14000767a:	add    BYTE PTR [rax],al
   14000767c:	add    DWORD PTR [rax],eax
   14000767e:	add    BYTE PTR [rax],al
   140007680:	in     al,dx
   140007681:	pop    rax
   140007682:	add    BYTE PTR [rax],al
   140007684:	(bad)  
   140007685:	(bad)  
   140007686:	(bad)  
   140007687:	inc    DWORD PTR [rax]
   140007689:	add    BYTE PTR [rax],al
   14000768b:	add    BYTE PTR [rax],al
   14000768d:	add    BYTE PTR [rax],al
   14000768f:	add    BYTE PTR [rdx],al
   140007691:	add    BYTE PTR [rax],al
   140007693:	add    BYTE PTR [rbx],al
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rcx],al
   140007699:	add    BYTE PTR [rax],al
   14000769b:	add    BYTE PTR [rax+0x40000076],ah
	...
   1400076a9:	add    BYTE PTR [rax],al
   1400076ab:	add    al,bh
   1400076ad:	pop    rax
   1400076ae:	add    BYTE PTR [rax],al
   1400076b0:	cmp    BYTE PTR [rax],al
   1400076b2:	add    BYTE PTR [rax],al
   1400076b4:	rex
   1400076b5:	rex.XB add BYTE PTR [r8],al
   1400076b8:	(bad)  
   1400076b9:	(bad)  
   1400076ba:	(bad)  
   1400076bb:	jmp    FWORD PTR [rdi+0x43]
   1400076be:	add    BYTE PTR [rax],al
   1400076c0:	add    BYTE PTR [rax],al
   1400076c2:	add    BYTE PTR [rax],al
   1400076c4:	jge    0x140007709
   1400076c6:	add    BYTE PTR [rax],al
   1400076c8:	add    DWORD PTR [rax],eax
   1400076ca:	add    BYTE PTR [rax],al
   1400076cc:	xchg   ebp,eax
   1400076cd:	rex.XB add BYTE PTR [r8],al
   1400076d0:	add    al,BYTE PTR [rax]
   1400076d2:	add    BYTE PTR [rax],al
   1400076d4:	stos   BYTE PTR es:[rdi],al
   1400076d5:	rex.XB add BYTE PTR [r8],al
   1400076d8:	(bad)  
   1400076d9:	(bad)  
   1400076da:	(bad)  
   1400076db:	(bad)  
   1400076dc:	clc    
   1400076dd:	pop    rax
   1400076de:	add    BYTE PTR [rax],al
   1400076e0:	add    BYTE PTR [rax],al
   1400076e2:	add    BYTE PTR [rax],al
   1400076e4:	add    eax,0x3000059
   1400076e9:	add    BYTE PTR [rax],al
   1400076eb:	add    BYTE PTR [rcx],bl
   1400076ed:	or     al,BYTE PTR [rdx]
   1400076ef:	add    BYTE PTR [rdx],cl
   1400076f1:	xor    al,BYTE PTR [rsi]
   1400076f3:	push   rax
   1400076f4:	movabs ds:0x1900006800000054,al
   1400076fd:	sbb    eax,0x641d0008
   140007702:	(bad)  
   140007703:	add    BYTE PTR [rax],bl
   140007705:	xor    al,0xd
   140007707:	add    BYTE PTR [rdx],cl
   140007709:	jb     0x140007711
   14000770b:	lock add al,0xe0
   14000770e:	add    dh,BYTE PTR [rax-0x5e]
   140007711:	push   rsp
   140007712:	add    BYTE PTR [rax],al
   140007714:	fsub   DWORD PTR [rdi+0x0]
	...
   14000771f:	add    BYTE PTR [rcx],al
   140007721:	add    BYTE PTR [rax],al
   140007723:	add    BYTE PTR [rcx],al
   140007725:	add    BYTE PTR [rax],al
   140007727:	add    BYTE PTR [rdi+rsi*2],ch
   14000772a:	add    BYTE PTR [rax],al
   14000772c:	add    BYTE PTR [rax],al
	...
   140007737:	add    BYTE PTR [rax],ah
   140007739:	pop    rcx
   14000773a:	add    BYTE PTR [rax],al
   14000773c:	rex.W add BYTE PTR [rax],al
   14000773f:	add    al,al
   140007741:	rex.XB add BYTE PTR [r8],al
   140007744:	(bad)  
   140007745:	(bad)  
   140007746:	(bad)  
   140007747:	jmp    rsi
   140007749:	rex.XB add BYTE PTR [r8],al
   14000774c:	add    BYTE PTR [rax],al
   14000774e:	add    BYTE PTR [rax],al
   140007750:	sub    eax,0x1000059
   140007755:	add    BYTE PTR [rax],al
   140007757:	add    BYTE PTR [rcx],bl
   140007759:	or     al,BYTE PTR [rdx]
   14000775b:	add    BYTE PTR [rdx],cl
   14000775d:	push   rdx
   14000775e:	(bad)  
   14000775f:	push   rax
   140007760:	movabs ds:0x21000067d8000054,al
   140007769:	add    eax,0x74050002
   14000776e:	(bad)  
   14000776f:	add    BYTE PTR [rax-0x40ffffba],ah
   140007775:	rex.RX add BYTE PTR [rax],r8b
   140007778:	and    BYTE PTR [rbp+0x0],ch
   14000777b:	add    BYTE PTR [rcx],ah
   14000777d:	add    BYTE PTR [rax],al
   14000777f:	add    BYTE PTR [rax-0x40ffffba],ah
   140007785:	rex.RX add BYTE PTR [rax],r8b
   140007788:	and    BYTE PTR [rbp+0x0],ch
   14000778b:	add    BYTE PTR [rcx],bl
   14000778d:	(bad)  
   14000778e:	(bad)  
   14000778f:	add    BYTE PTR [rip+0xff01152],dl        # 0x14ff088e7
   140007795:	loopne 0x1400077a4
   140007797:	jo     0x1400077a5
   140007799:	(bad)  
   14000779a:	or     esi,DWORD PTR [rax]
   14000779c:	movabs ds:0xff000067b0000054,al
   1400077a5:	(bad)  
   1400077a6:	(bad)  
   1400077a7:	inc    DWORD PTR [rax]
   1400077a9:	add    BYTE PTR [rax],al
   1400077ab:	add    BYTE PTR [rax],al
   1400077ad:	add    BYTE PTR [rax],al
   1400077af:	add    BYTE PTR [rax+0x59],dl
   1400077b2:	add    BYTE PTR [rax],al
   1400077b4:	(bad)  
   1400077b5:	(bad)  
   1400077b6:	(bad)  
   1400077b7:	inc    DWORD PTR [rax]
   1400077b9:	add    BYTE PTR [rax],al
   1400077bb:	add    BYTE PTR [rax],al
   1400077bd:	add    BYTE PTR [rax],al
   1400077bf:	add    BYTE PTR [rcx],al
   1400077c1:	add    BYTE PTR [rax],al
   1400077c3:	add    BYTE PTR [rdx],al
   1400077c5:	add    BYTE PTR [rax],al
   1400077c7:	add    BYTE PTR [rcx],al
   1400077c9:	add    BYTE PTR [rax],al
   1400077cb:	add    al,dl
   1400077cd:	ja     0x1400077cf
   1400077cf:	add    BYTE PTR [rax+0x0],al
	...
   1400077da:	add    BYTE PTR [rax],al
   1400077dc:	ins    BYTE PTR es:[rdi],dx
   1400077dd:	pop    rcx
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	rex.W add BYTE PTR [rax],al
   1400077e3:	add    BYTE PTR [rax-0xffffb7],al
   1400077e9:	(bad)  
   1400077ea:	(bad)  
   1400077eb:	push   QWORD PTR [rax+0x49]
   1400077f1:	add    BYTE PTR [rax],al
   1400077f3:	add    BYTE PTR [rsi+0x1000049],bh
   1400077f9:	add    BYTE PTR [rax],al
   1400077fb:	add    BYTE PTR [rip+0x4a],ch        # 0x14000784b
   140007801:	add    BYTE PTR [rax],al
   140007803:	add    BYTE PTR [rdi],bh
   140007805:	rex.WX add BYTE PTR [rax],al
   140007808:	(bad)  
   140007809:	(bad)  
   14000780a:	(bad)  
   14000780b:	jmp    FWORD PTR [rcx+rbx*2+0x0]
   14000780f:	add    BYTE PTR [rax],al
   140007811:	add    BYTE PTR [rax],al
   140007813:	add    BYTE PTR [rbx+0x59],bh
   140007816:	add    BYTE PTR [rax],al
   140007818:	add    al,BYTE PTR [rax]
   14000781a:	add    BYTE PTR [rax],al
   14000781c:	sbb    DWORD PTR [rsp+rax*1],ecx
   14000781f:	add    BYTE PTR [rdx+rsi*1],cl
   140007822:	or     BYTE PTR [rax+0x7],dh
   140007825:	push   rax
   140007826:	(bad)  
   140007827:	xor    BYTE PTR [rdx-0x4fffffac],ah
   14000782d:	add    BYTE PTR [eax],al
   140007830:	add    DWORD PTR [rax],eax
   140007832:	add    BYTE PTR [rax],al
   140007834:	adc    DWORD PTR [rsi],eax
   140007836:	add    al,BYTE PTR [rax]
   140007838:	(bad)  
   140007839:	xor    al,BYTE PTR [rdx]
   14000783b:	xor    BYTE PTR [rax+0x51],bl
   14000783e:	add    BYTE PTR [rax],al
   140007840:	add    DWORD PTR [rax],eax
   140007842:	add    BYTE PTR [rax],al
   140007844:	outs   dx,DWORD PTR ds:[rsi]
   140007845:	rex.WR add BYTE PTR [rax],r8b
   140007848:	(bad)  
   140007849:	rex.WR add BYTE PTR [rax],r8b
   14000784c:	mov    edx,0x59
   140007851:	add    BYTE PTR [rax],al
   140007853:	add    BYTE PTR [rcx],al
   140007855:	add    al,0x1
   140007857:	add    BYTE PTR [rdx+riz*2],al
   14000785a:	add    BYTE PTR [rax],al
   14000785c:	or     DWORD PTR [rsi],eax
   14000785e:	add    al,BYTE PTR [rax]
   140007860:	(bad)  
   140007861:	xor    al,BYTE PTR [rdx]
   140007863:	jo     0x1400078bd
   140007865:	push   rcx
   140007866:	add    BYTE PTR [rax],al
   140007868:	add    DWORD PTR [rax],eax
   14000786a:	add    BYTE PTR [rax],al
   14000786c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000786d:	rex.WRX add BYTE PTR [rax],r8b
   140007870:	fisttp QWORD PTR [rdi+0x0]
   140007873:	add    ch,dl
   140007875:	pop    rcx
   140007876:	add    BYTE PTR [rax],al
   140007878:	fisttp QWORD PTR [rdi+0x0]
   14000787b:	add    BYTE PTR [rcx],al
   14000787d:	or     DWORD PTR [rcx],eax
   14000787f:	add    BYTE PTR [rcx],cl
   140007881:	(bad)  
   140007882:	add    BYTE PTR [rax],al
   140007884:	adc    DWORD PTR [rax],ebx
   140007886:	add    eax,0x14621800
   14000788b:	loopne 0x14000789f
   14000788d:	jo     0x1400078a0
   14000788f:	(bad)  
   140007890:	adc    BYTE PTR [rax],dh
   140007892:	add    BYTE PTR [rax],al
   140007894:	pop    rax
   140007895:	push   rcx
   140007896:	add    BYTE PTR [rax],al
   140007898:	add    DWORD PTR [rax],eax
   14000789a:	add    BYTE PTR [rax],al
   14000789c:	xchg   ebx,eax
   14000789d:	push   rcx
   14000789e:	add    BYTE PTR [rax],al
   1400078a0:	mov    bl,0x51
   1400078a2:	add    BYTE PTR [rax],al
   1400078a4:	repz pop rcx
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	add    BYTE PTR [rax],al
   1400078aa:	add    BYTE PTR [rax],al
   1400078ac:	or     DWORD PTR [rdi],edx
   1400078ae:	(bad)  
   1400078af:	add    BYTE PTR [rdi],dl
   1400078b1:	xor    al,0xd
   1400078b3:	add    BYTE PTR [rdi],dl
   1400078b5:	jb     0x1400078ca
   1400078b7:	loopne 0x1400078ca
   1400078b9:	jo     0x1400078cb
   1400078bb:	(bad)  
   1400078bc:	pop    rax
   1400078bd:	push   rcx
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	add    DWORD PTR [rax],eax
   1400078c2:	add    BYTE PTR [rax],al
   1400078c4:	jrcxz  0x140007917
   1400078c6:	add    BYTE PTR [rax],al
   1400078c8:	cld    
   1400078c9:	push   rcx
   1400078ca:	add    BYTE PTR [rax],al
   1400078cc:	(bad)  
   1400078cd:	pop    rdx
   1400078ce:	add    BYTE PTR [rax],al
   1400078d0:	cld    
   1400078d1:	push   rcx
   1400078d2:	add    BYTE PTR [rax],al
   1400078d4:	or     DWORD PTR [rdx],ecx
   1400078d6:	add    al,0x0
   1400078d8:	or     dh,BYTE PTR [rsi+rax*1]
   1400078db:	add    BYTE PTR [rdx],cl
   1400078dd:	xor    al,BYTE PTR [rsi]
   1400078df:	jo     0x140007939
   1400078e1:	push   rcx
   1400078e2:	add    BYTE PTR [rax],al
   1400078e4:	add    DWORD PTR [rax],eax
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	int    0x52
   1400078ea:	add    BYTE PTR [rax],al
   1400078ec:	add    BYTE PTR [rbx+0x0],dl
   1400078ef:	add    BYTE PTR [rax+0x5a],ah
   1400078f2:	add    BYTE PTR [rax],al
   1400078f4:	add    BYTE PTR [rbx+0x0],dl
   1400078f7:	add    BYTE PTR [rcx],al
   1400078f9:	or     eax,0x340d0004
   1400078fe:	or     DWORD PTR [rax],eax
   140007900:	or     eax,0x1500632
   140007905:	sbb    DWORD PTR [rdx],ecx
   140007907:	add    BYTE PTR [rcx],bl
   140007909:	je     0x140007914
   14000790b:	add    BYTE PTR [rcx],bl
   14000790d:	or     BYTE PTR fs:[rax],al
   140007910:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140007914:	sbb    DWORD PTR [rsi+rax*1],esi
   140007917:	add    BYTE PTR [rcx],bl
   140007919:	xor    dl,BYTE PTR [rip+0xe0]        # 0x1400079ff
   14000791f:	add    BYTE PTR [rcx],al
   140007921:	add    BYTE PTR [rax],al
   140007923:	add    BYTE PTR [rax+0x79],dl
	...
   14000793a:	add    BYTE PTR [rax],al
   14000793c:	and    BYTE PTR [rcx+0x0],bh
	...
   140007953:	add    al,ah
   140007955:	nop
   140007956:	add    BYTE PTR [rax],al
   140007958:	add    BYTE PTR [rax],al
   14000795a:	add    BYTE PTR [rax],al
   14000795c:	(bad)  
   14000795d:	(bad)  
   14000795e:	(bad)  
   14000795f:	inc    DWORD PTR [rax]
   140007961:	add    BYTE PTR [rax],al
   140007963:	add    BYTE PTR [rax+rax*1],al
	...
   140007976:	add    BYTE PTR [rax],al
   140007978:	or     BYTE PTR [rdx+0x0],bh
	...
   140007983:	add    BYTE PTR [rdx+0x7e],ah
   140007986:	add    BYTE PTR [rax],al
   140007988:	sub    BYTE PTR [rax+0x0],ah
   14000798b:	add    al,ah
   14000798d:	jns    0x14000798f
	...
   140007997:	add    BYTE PTR [rdx+0x7e],dh
   14000799d:	(bad)  
   14000799e:	add    BYTE PTR [rax],al
   1400079a0:	or     BYTE PTR [rbx+0x0],bh
	...
   1400079ab:	add    ah,bh
   1400079ad:	jle    0x1400079af
   1400079af:	add    BYTE PTR [rax],ch
   1400079b1:	(bad)  
   1400079b2:	add    BYTE PTR [rax],al
   1400079b4:	and    BYTE PTR [rbx+0x0],bh
	...
   1400079bf:	add    dl,bl
   1400079c1:	jg     0x1400079c3
   1400079c3:	add    BYTE PTR [rax+0x61],al
	...
   1400079de:	add    BYTE PTR [rax],al
   1400079e0:	xchg   esp,eax
   1400079e1:	jle    0x1400079e3
   1400079e3:	add    BYTE PTR [rax],al
   1400079e5:	add    BYTE PTR [rax],al
   1400079e7:	add    BYTE PTR [rsi+rdi*2+0x0],al
   1400079ee:	add    BYTE PTR [rax],al
   1400079f0:	jo     0x140007a70
   1400079f2:	add    BYTE PTR [rax],al
   1400079f4:	add    BYTE PTR [rax],al
   1400079f6:	add    BYTE PTR [rax],al
   1400079f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400079f9:	jle    0x1400079fb
	...
   140007a07:	add    dh,ch
   140007a09:	jl     0x140007a0b
   140007a0b:	add    BYTE PTR [rax],al
   140007a0d:	add    BYTE PTR [rax],al
   140007a0f:	add    BYTE PTR [rax],al
   140007a11:	jge    0x140007a13
   140007a13:	add    BYTE PTR [rax],al
   140007a15:	add    BYTE PTR [rax],al
   140007a17:	add    BYTE PTR [rdi*2+0x0],cl
   140007a1e:	add    BYTE PTR [rax],al
   140007a20:	sbb    BYTE PTR [rbp+0x0],bh
   140007a23:	add    BYTE PTR [rax],al
   140007a25:	add    BYTE PTR [rax],al
   140007a27:	add    BYTE PTR [rsi],ch
   140007a29:	jge    0x140007a2b
   140007a2b:	add    BYTE PTR [rax],al
   140007a2d:	add    BYTE PTR [rax],al
   140007a2f:	add    BYTE PTR [rax+0x7d],al
   140007a32:	add    BYTE PTR [rax],al
   140007a34:	add    BYTE PTR [rax],al
   140007a36:	add    BYTE PTR [rax],al
   140007a38:	push   rdx
   140007a39:	jge    0x140007a3b
   140007a3b:	add    BYTE PTR [rax],al
   140007a3d:	add    BYTE PTR [rax],al
   140007a3f:	add    BYTE PTR [rax+0x7d],ah
   140007a42:	add    BYTE PTR [rax],al
   140007a44:	add    BYTE PTR [rax],al
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	jbe    0x140007ac7
   140007a4a:	add    BYTE PTR [rax],al
   140007a4c:	add    BYTE PTR [rax],al
   140007a4e:	add    BYTE PTR [rax],al
   140007a50:	xchg   esp,eax
   140007a51:	jge    0x140007a53
   140007a53:	add    BYTE PTR [rax],al
   140007a55:	add    BYTE PTR [rax],al
   140007a57:	add    BYTE PTR [rsi+0x7d],ah
   140007a5d:	add    BYTE PTR [rax],al
   140007a5f:	add    dh,bl
   140007a61:	jl     0x140007a63
   140007a63:	add    BYTE PTR [rax],al
   140007a65:	add    BYTE PTR [rax],al
   140007a67:	add    BYTE PTR [rsi+0x7d],dh
   140007a6d:	add    BYTE PTR [rax],al
   140007a6f:	add    dl,al
   140007a71:	jge    0x140007a73
   140007a73:	add    BYTE PTR [rax],al
   140007a75:	add    BYTE PTR [rax],al
   140007a77:	add    dl,dl
   140007a79:	jge    0x140007a7b
   140007a7b:	add    BYTE PTR [rax],al
   140007a7d:	add    BYTE PTR [rax],al
   140007a7f:	add    dl,ah
   140007a81:	jge    0x140007a83
   140007a83:	add    BYTE PTR [rax],al
   140007a85:	add    BYTE PTR [rax],al
   140007a87:	add    dl,bh
   140007a89:	jge    0x140007a8b
   140007a8b:	add    BYTE PTR [rax],al
   140007a8d:	add    BYTE PTR [rax],al
   140007a8f:	add    BYTE PTR [rax],cl
   140007a91:	jle    0x140007a93
   140007a93:	add    BYTE PTR [rax],al
   140007a95:	add    BYTE PTR [rax],al
   140007a97:	add    BYTE PTR [rsi+rdi*2],bl
   140007a9a:	add    BYTE PTR [rax],al
   140007a9c:	add    BYTE PTR [rax],al
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	xor    bh,BYTE PTR [rsi+0x0]
   140007aa3:	add    BYTE PTR [rax],al
   140007aa5:	add    BYTE PTR [rax],al
   140007aa7:	add    BYTE PTR [rdx+0x7e],cl
   140007aaa:	add    BYTE PTR [rax],al
   140007aac:	add    BYTE PTR [rax],al
   140007aae:	add    BYTE PTR [rax],al
   140007ab0:	adc    al,0x82
   140007ab2:	add    BYTE PTR [rax],al
   140007ab4:	add    BYTE PTR [rax],al
   140007ab6:	add    BYTE PTR [rax],al
   140007ab8:	rex (bad) 
   140007aba:	add    BYTE PTR [rax],al
   140007abc:	add    BYTE PTR [rax],al
   140007abe:	add    BYTE PTR [rax],al
   140007ac0:	(bad)  
   140007ac1:	jl     0x140007ac3
   140007ac3:	add    BYTE PTR [rax],al
   140007ac5:	add    BYTE PTR [rax],al
   140007ac7:	add    BYTE PTR [rsp+rdi*2+0x0],bh
   140007ace:	add    BYTE PTR [rax],al
   140007ad0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007ad1:	jl     0x140007ad3
   140007ad3:	add    BYTE PTR [rax],al
   140007ad5:	add    BYTE PTR [rax],al
   140007ad7:	add    BYTE PTR [rax+0x7c],bl
   140007add:	add    BYTE PTR [rax],al
   140007adf:	add    dl,bh
   140007ae1:	add    DWORD PTR [rax],0x0
   140007ae7:	add    dh,bl
   140007ae9:	add    DWORD PTR [rax],0x0
   140007aef:	add    dh,cl
   140007af1:	add    DWORD PTR [rax],0x0
   140007af7:	add    BYTE PTR [rdx],ch
   140007af9:	(bad)  
	...
   140007b06:	add    BYTE PTR [rax],al
   140007b08:	fidivr DWORD PTR [rsi+0x0]
   140007b0b:	add    BYTE PTR [rax],al
   140007b0d:	add    BYTE PTR [rax],al
   140007b0f:	add    al,al
   140007b11:	jle    0x140007b13
	...
   140007b1f:	add    BYTE PTR [rdi+rdi*2],bh
   140007b22:	add    BYTE PTR [rax],al
   140007b24:	add    BYTE PTR [rax],al
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	rex.W jg 0x140007b2b
   140007b2b:	add    BYTE PTR [rax],al
   140007b2d:	add    BYTE PTR [rax],al
   140007b2f:	add    BYTE PTR [rdi+rdi*2],dh
   140007b32:	add    BYTE PTR [rax],al
   140007b34:	add    BYTE PTR [rax],al
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	pop    rsp
   140007b39:	jg     0x140007b3b
   140007b3b:	add    BYTE PTR [rax],al
   140007b3d:	add    BYTE PTR [rax],al
   140007b3f:	add    BYTE PTR [rsi+0x7f],ah
   140007b42:	add    BYTE PTR [rax],al
   140007b44:	add    BYTE PTR [rax],al
   140007b46:	add    BYTE PTR [rax],al
   140007b48:	jbe    0x140007bc9
   140007b4a:	add    BYTE PTR [rax],al
   140007b4c:	add    BYTE PTR [rax],al
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	test   BYTE PTR [rdi+0x0],bh
   140007b53:	add    BYTE PTR [rax],al
   140007b55:	add    BYTE PTR [rax],al
   140007b57:	add    BYTE PTR [rdx+0x7f],dl
   140007b5d:	add    BYTE PTR [rax],al
   140007b5f:	add    BYTE PTR [rsi+0x7f],bl
   140007b65:	add    BYTE PTR [rax],al
   140007b67:	add    BYTE PTR [rdx+0x7f],ch
   140007b6d:	add    BYTE PTR [rax],al
   140007b6f:	add    BYTE PTR [rdi+rdi*2+0x0],dh
   140007b76:	add    BYTE PTR [rax],al
   140007b78:	mov    esi,0x7f
   140007b7d:	add    BYTE PTR [rax],al
   140007b7f:	add    al,dl
   140007b81:	jg     0x140007b83
   140007b83:	add    BYTE PTR [rax],al
   140007b85:	add    BYTE PTR [rax],al
   140007b87:	add    al,ch
   140007b89:	jg     0x140007b8b
   140007b8b:	add    BYTE PTR [rax],al
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    al,dh
   140007b91:	jg     0x140007b93
   140007b93:	add    BYTE PTR [rax],al
   140007b95:	add    BYTE PTR [rax],al
   140007b97:	add    dl,bh
   140007b99:	jg     0x140007b9b
   140007b9b:	add    BYTE PTR [rax],al
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    BYTE PTR [rax],cl
   140007ba1:	add    BYTE PTR [rax],0x0
   140007ba4:	add    BYTE PTR [rax],al
   140007ba6:	add    BYTE PTR [rax],al
   140007ba8:	(bad)  
   140007ba9:	add    BYTE PTR [rax],0x0
   140007bac:	add    BYTE PTR [rax],al
   140007bae:	add    BYTE PTR [rax],al
   140007bb0:	add    BYTE PTR cs:[rax],0x0
   140007bb4:	add    BYTE PTR [rax],al
   140007bb6:	add    BYTE PTR [rax],al
   140007bb8:	es jg  0x140007bbb
   140007bbb:	add    BYTE PTR [rax],al
   140007bbd:	add    BYTE PTR [rax],al
   140007bbf:	add    BYTE PTR [rsi-0x80],al
   140007bc2:	add    BYTE PTR [rax],al
   140007bc4:	add    BYTE PTR [rax],al
   140007bc6:	add    BYTE PTR [rax],al
   140007bc8:	push   rsp
   140007bc9:	add    BYTE PTR [rax],0x0
   140007bcc:	add    BYTE PTR [rax],al
   140007bce:	add    BYTE PTR [rax],al
   140007bd0:	data16 add BYTE PTR [rax],0x0
   140007bd4:	add    BYTE PTR [rax],al
   140007bd6:	add    BYTE PTR [rax],al
   140007bd8:	js     0x140007b5a
   140007bda:	add    BYTE PTR [rax],al
   140007bdc:	add    BYTE PTR [rax],al
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	add    BYTE PTR [rax+0x0],0x0
   140007be7:	add    BYTE PTR [rax+0x80],cl
   140007bed:	add    BYTE PTR [rax],al
   140007bef:	add    BYTE PTR [rdx+0x80],dl
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    BYTE PTR [rax+0x80],ch
   140007bfd:	add    BYTE PTR [rax],al
   140007bff:	add    BYTE PTR [rax+rax*4+0x0],bh
   140007c06:	add    BYTE PTR [rax],al
   140007c08:	retf   0x80
   140007c0b:	add    BYTE PTR [rax],al
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    dh,dl
   140007c11:	add    BYTE PTR [rax],0x0
   140007c14:	add    BYTE PTR [rax],al
   140007c16:	add    BYTE PTR [rax],al
   140007c18:	in     al,0x80
   140007c1a:	add    BYTE PTR [rax],al
   140007c1c:	add    BYTE PTR [rax],al
   140007c1e:	add    BYTE PTR [rax],al
   140007c20:	out    dx,al
   140007c21:	add    BYTE PTR [rax],0x0
   140007c24:	add    BYTE PTR [rax],al
   140007c26:	add    BYTE PTR [rax],al
   140007c28:	cli    
   140007c29:	add    BYTE PTR [rax],0x0
   140007c2c:	add    BYTE PTR [rax],al
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	adc    BYTE PTR [rcx+0x0],al
   140007c36:	add    BYTE PTR [rax],al
   140007c38:	sub    al,BYTE PTR [rcx+0x0]
   140007c3e:	add    BYTE PTR [rax],al
   140007c40:	rex.X add DWORD PTR [rax],0x0
   140007c47:	add    BYTE PTR [rax-0x7f],ah
   140007c4a:	add    BYTE PTR [rax],al
   140007c4c:	add    BYTE PTR [rax],al
   140007c4e:	add    BYTE PTR [rax],al
   140007c50:	je     0x140007bd3
   140007c52:	add    BYTE PTR [rax],al
   140007c54:	add    BYTE PTR [rax],al
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	stos   BYTE PTR es:[rdi],al
   140007c59:	add    DWORD PTR [rax],0x0
   140007c5f:	add    BYTE PTR [rdx],bl
   140007c61:	jg     0x140007c63
   140007c63:	add    BYTE PTR [rax],al
   140007c65:	add    BYTE PTR [rax],al
   140007c67:	add    BYTE PTR [rdx],cl
   140007c69:	jg     0x140007c6b
   140007c6b:	add    BYTE PTR [rax],al
   140007c6d:	add    BYTE PTR [rax],al
   140007c6f:	add    BYTE PTR [rax],bh
   140007c71:	add    BYTE PTR [rax],0x0
   140007c74:	add    BYTE PTR [rax],al
   140007c76:	add    BYTE PTR [rax],al
   140007c78:	pop    rdx
   140007c79:	(bad)  
   140007c7a:	add    BYTE PTR [rax],al
   140007c7c:	add    BYTE PTR [rax],al
   140007c7e:	add    BYTE PTR [rax],al
   140007c80:	push   rax
   140007c81:	jg     0x140007c83
   140007c83:	add    BYTE PTR [rax],al
   140007c85:	add    BYTE PTR [rax],al
   140007c87:	add    BYTE PTR [rax-0x7e],dh
	...
   140007c96:	add    BYTE PTR [rax],al
   140007c98:	(bad)  
   140007c99:	add    ecx,DWORD PTR [rax+0x65]
   140007c9c:	(bad)  
   140007c9d:	jo     0x140007cf1
   140007c9f:	gs rex.B ins BYTE PTR es:[rdi],dx
   140007ca2:	ins    BYTE PTR es:[rdi],dx
   140007ca3:	outs   dx,DWORD PTR ds:[rsi]
   140007ca4:	movsxd eax,DWORD PTR [rax]
   140007ca6:	jp     0x140007caa
   140007ca8:	rex.RXB
   140007ca9:	gs je  0x140007cfa
   140007cac:	(bad)  
   140007cad:	je     0x140007d18
   140007caf:	jbe    0x140007d16
   140007cb1:	push   rbx
   140007cb2:	jns    0x140007d27
   140007cb4:	je     0x140007d1b
   140007cb6:	ins    DWORD PTR es:[rdi],dx
   140007cb7:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007cb9:	outs   dx,WORD PTR ds:[rsi]
   140007cbb:	add    BYTE PTR [rsi+0x6e694601],cl
   140007cc1:	fs push rdx
   140007cc3:	gs jae 0x140007d35
   140007cc6:	jne    0x140007d3a
   140007cc8:	movsxd esp,DWORD PTR [rbp+0x45]
   140007ccb:	js     0x140007d24
   140007ccd:	add    BYTE PTR [rdi+0x6e694601],cl
   140007cd3:	fs push rdx
   140007cd5:	gs jae 0x140007d47
   140007cd8:	jne    0x140007d4c
   140007cda:	movsxd esp,DWORD PTR [rbp+0x57]
   140007cdd:	add    BYTE PTR [rsi+0x616f4c03],ch
   140007ce3:	fs push rdx
   140007ce5:	gs jae 0x140007d57
   140007ce8:	jne    0x140007d5c
   140007cea:	movsxd esp,DWORD PTR [rbp+0x0]
   140007ced:	add    bl,bl
   140007cef:	add    BYTE PTR [rbx+0x72],al
   140007cf2:	gs (bad) 
   140007cf4:	je     0x140007d5b
   140007cf6:	push   rax
   140007cf7:	jb     0x140007d68
   140007cf9:	movsxd esp,DWORD PTR [rbp+0x73]
   140007cfc:	jae    0x140007d55
   140007cfe:	add    BYTE PTR [rax],al
   140007d00:	cmp    BYTE PTR [rbx],al
   140007d02:	rex.W
   140007d03:	gs (bad) 
   140007d05:	jo     0x140007d48
   140007d07:	ins    BYTE PTR es:[rdi],dx
   140007d08:	ins    BYTE PTR es:[rdi],dx
   140007d09:	outs   dx,DWORD PTR ds:[rsi]
   140007d0a:	movsxd eax,DWORD PTR [rax]
   140007d0c:	cmp    al,0x3
   140007d0e:	rex.W
   140007d0f:	gs (bad) 
   140007d11:	jo     0x140007d59
   140007d13:	jb     0x140007d7a
   140007d15:	add    BYTE PTR gs:[rax],al
   140007d18:	mov    ecx,0x69615705
   140007d1d:	je     0x140007d65
   140007d1f:	outs   dx,DWORD PTR ds:[rsi]
   140007d20:	jb     0x140007d75
   140007d22:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   140007d29:	push   0x65
   140007d2b:	movsxd esi,DWORD PTR [rax+rax*1-0x57]
   140007d2f:	add    al,BYTE PTR [rdi+0x65]
   140007d32:	je     0x140007d84
   140007d34:	jb     0x140007da5
   140007d36:	movsxd esp,DWORD PTR [rbp+0x73]
   140007d39:	jae    0x140007d83
   140007d3b:	gs (bad) 
   140007d3d:	jo     0x140007d3f
   140007d3f:	add    BYTE PTR [rsi+0x5],bl
   140007d42:	push   rbx
   140007d43:	imul   edi,DWORD PTR [rdx+0x65],0x6552666f
   140007d4a:	jae    0x140007dbb
   140007d4c:	jne    0x140007dc0
   140007d4e:	movsxd esp,DWORD PTR [rbp+0x0]
   140007d51:	add    BYTE PTR [rbx],bh
   140007d53:	add    ecx,DWORD PTR [rax+0x65]
   140007d56:	(bad)  
   140007d57:	jo     0x140007d9d
   140007d59:	gs jae 0x140007dd0
   140007d5c:	jb     0x140007dcd
   140007d5e:	jns    0x140007d60
   140007d60:	xor    eax,DWORD PTR [rdx]
   140007d62:	rex.RXB
   140007d63:	gs je  0x140007dab
   140007d66:	js     0x140007dd1
   140007d68:	je     0x140007dad
   140007d6a:	outs   dx,DWORD PTR ds:[rsi]
   140007d6b:	fs gs push rax
   140007d6e:	jb     0x140007ddf
   140007d70:	movsxd esp,DWORD PTR [rbp+0x73]
   140007d73:	jae    0x140007d75
   140007d75:	add    BYTE PTR [rdx+0x3],dl
   140007d78:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007d7a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007d82:	rex.XB jb 0x140007dee
   140007d85:	je     0x140007df0
   140007d87:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007d8a:	push   rbx
   140007d8b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007d90:	outs   dx,BYTE PTR ds:[rsi]
   140007d91:	rex.RB js 0x140007d94
   140007d94:	rex.XB add al,0x52
   140007d97:	(bad)  
   140007d98:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140007d9f:	jo     0x140007e15
   140007da1:	imul   ebp,DWORD PTR [rdi+0x6e],0x2560000
   140007da8:	rex.RXB
   140007da9:	gs je  0x140007df8
   140007dac:	(bad)  
   140007dad:	jae    0x140007e23
   140007daf:	rex.RB jb 0x140007e24
   140007db2:	outs   dx,DWORD PTR ds:[rsi]
   140007db3:	jb     0x140007db5
   140007db5:	add    BYTE PTR [rcx+0x3],al
   140007db8:	rex.W
   140007db9:	gs (bad) 
   140007dbb:	jo     0x140007e10
   140007dbd:	imul   edi,DWORD PTR [rdx+0x65],0x3c00000
   140007dc4:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007dc6:	movsxd ebp,DWORD PTR [rbx+0x52]
   140007dc9:	gs jae 0x140007e3b
   140007dcc:	jne    0x140007e40
   140007dce:	movsxd esp,DWORD PTR [rbp+0x0]
   140007dd1:	add    bh,bh
   140007dd3:	add    BYTE PTR [rbp+riz*2+0x63],al
   140007dd7:	outs   dx,DWORD PTR ds:[rsi]
   140007dd8:	fs gs push rax
   140007ddb:	outs   dx,DWORD PTR ds:[rsi]
   140007ddc:	imul   ebp,DWORD PTR [rsi+0x74],0x6007265
   140007de3:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   140007de7:	gs je  0x140007e4f
   140007dea:	rex.XB jb 0x140007e56
   140007ded:	je     0x140007e58
   140007def:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007df2:	push   rbx
   140007df3:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007df8:	outs   dx,BYTE PTR ds:[rsi]
   140007df9:	add    BYTE PTR [rdi+0x0],bh
   140007dfc:	rex.XB ins BYTE PTR es:[rdi],dx
   140007dfe:	outs   dx,DWORD PTR ds:[rsi]
   140007dff:	jae    0x140007e66
   140007e01:	rex.W (bad) 
   140007e03:	outs   dx,BYTE PTR ds:[rsi]
   140007e04:	fs ins BYTE PTR es:[rdi],dx
   140007e06:	add    BYTE PTR gs:[rdx+0x3],ch
   140007e0a:	rex.WB jae 0x140007e51
   140007e0d:	gs (bad) 
   140007e0f:	jne    0x140007e78
   140007e11:	addr32 gs jb 0x140007e65
   140007e15:	jb     0x140007e7c
   140007e17:	jae    0x140007e7e
   140007e19:	outs   dx,BYTE PTR ds:[rsi]
   140007e1a:	je     0x140007e1c
   140007e1c:	std    
   140007e1d:	add    ecx,DWORD PTR [rdi+0x75]
   140007e20:	je     0x140007e92
   140007e22:	jne    0x140007e98
   140007e24:	rex.R
   140007e25:	gs (bad) 
   140007e27:	jne    0x140007e90
   140007e29:	push   rbx
   140007e2a:	je     0x140007e9e
   140007e2c:	imul   ebp,DWORD PTR [rsi+0x67],0x29000057
   140007e33:	add    DWORD PTR [rbp+0x6e],eax
   140007e36:	je     0x140007e9d
   140007e38:	jb     0x140007e7d
   140007e3a:	jb     0x140007ea5
   140007e3c:	je     0x140007ea7
   140007e3e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007e41:	push   rbx
   140007e42:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007e47:	outs   dx,BYTE PTR ds:[rsi]
   140007e48:	add    BYTE PTR [rax],al
   140007e4a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007e4b:	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   140007e4f:	jbe    0x140007eb6
   140007e51:	rex.XB jb 0x140007ebd
   140007e54:	je     0x140007ebf
   140007e56:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007e59:	push   rbx
   140007e5a:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007e5f:	outs   dx,BYTE PTR ds:[rsi]
   140007e60:	add    BYTE PTR [rax],al
   140007e62:	rex.WXB
   140007e63:	rex.RB push r10
   140007e65:	rex.WRX
   140007e66:	rex.RB
   140007e67:	xor    r14,QWORD PTR [rdx]
   140007e6a:	cs fs ins BYTE PTR es:[rdi],dx
   140007e6d:	ins    BYTE PTR es:[rdi],dx
   140007e6e:	add    BYTE PTR [rax],al
   140007e70:	xchg   edx,eax
   140007e71:	add    dl,BYTE PTR [rdx+0x65]
   140007e74:	addr32 push rcx
   140007e76:	jne    0x140007edd
   140007e78:	jb     0x140007ef3
   140007e7a:	push   rsi
   140007e7b:	(bad)  
   140007e7c:	ins    BYTE PTR es:[rdi],dx
   140007e7d:	jne    0x140007ee4
   140007e7f:	rex.RB js 0x140007ed9
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	test   DWORD PTR [rdx],eax
   140007e86:	push   rdx
   140007e87:	gs addr32 rex.WRXB jo 0x140007ef1
   140007e8c:	outs   dx,BYTE PTR ds:[rsi]
   140007e8d:	rex.WXB
   140007e8e:	gs jns 0x140007ed6
   140007e91:	js     0x140007eea
   140007e93:	add    BYTE PTR [rbx+0x2],dh
   140007e96:	push   rdx
   140007e97:	rex.RB outs dx,BYTE PTR gs:[esi]
   140007e9b:	jne    0x140007f0a
   140007e9d:	rex.WXB
   140007e9e:	gs jns 0x140007ee6
   140007ea1:	js     0x140007efa
   140007ea3:	add    BYTE PTR [rdx+rax*1+0x52],dl
   140007ea7:	gs rex.XB ins BYTE PTR es:[edi],dx
   140007eab:	outs   dx,DWORD PTR ds:[rsi]
   140007eac:	jae    0x140007f13
   140007eae:	rex.WXB
   140007eaf:	gs jns 0x140007eb2
   140007eb2:	rex.B
   140007eb3:	rex.R push rsi
   140007eb5:	push   r8
   140007eb7:	xor    rsi,QWORD PTR [r10]
   140007eba:	cs fs ins BYTE PTR es:[rdi],dx
   140007ebd:	ins    BYTE PTR es:[rdi],dx
   140007ebe:	add    BYTE PTR [rax],al
   140007ec0:	leave  
   140007ec1:	add    bh,BYTE PTR [rdi]
   140007ec3:	pop    rdi
   140007ec4:	pop    rax
   140007ec5:	(bad)
   140007eca:	ins    BYTE PTR es:[rdi],dx
   140007ecb:	ins    BYTE PTR es:[rdi],dx
   140007ecc:	outs   dx,DWORD PTR ds:[rsi]
   140007ecd:	movsxd eax,DWORD PTR [rax+0x73]
   140007ed0:	je     0x140007f36
   140007ed2:	rex
   140007ed3:	rex pop rcx
   140007ed5:	pop    r8
   140007ed7:	pop    rax
   140007ed8:	pop    rdx
   140007ed9:	add    ah,cl
   140007edb:	add    bh,BYTE PTR [rdi]
   140007edd:	pop    rdi
   140007ede:	pop    rax
   140007edf:	ins    BYTE PTR es:[rdi],dx
   140007ee0:	outs   dx,BYTE PTR gs:[rsi]
   140007ee2:	addr32 je 0x140007f4d
   140007ee5:	pop    rdi
   140007ee6:	gs jb  0x140007f5b
   140007ee9:	outs   dx,DWORD PTR ds:[rsi]
   140007eea:	jb     0x140007f2c
   140007eec:	jae    0x140007f62
   140007eee:	fs rex
   140007ef0:	rex pop rcx
   140007ef2:	pop    r8
   140007ef4:	push   rax
   140007ef5:	rex.RB
   140007ef6:	rex.X
   140007ef7:	rex.R
   140007ef8:	rex pop rdx
   140007efa:	add    BYTE PTR [rax],al
   140007efc:	rex.WRB push r11
   140007efe:	push   rsi
   140007eff:	rex.XB push r8
   140007f01:	xor    DWORD PTR [rdx],esi
   140007f03:	xor    BYTE PTR [rsi],ch
   140007f05:	fs ins BYTE PTR es:[rdi],dx
   140007f07:	ins    BYTE PTR es:[rdi],dx
   140007f08:	add    BYTE PTR [rax],al
   140007f0a:	jb     0x140007f0c
   140007f0c:	(bad)  
   140007f0d:	(bad)  
   140007f0e:	xor    eax,DWORD PTR [rax+0x59]
   140007f11:	pop    r8
   140007f13:	push   rax
   140007f14:	rex.RB
   140007f15:	pop    r8
   140007f17:	rex pop rdx
   140007f19:	add    BYTE PTR [rax+0x6d656d06],bh
   140007f1f:	ins    DWORD PTR es:[rdi],dx
   140007f20:	outs   dx,DWORD PTR ds:[rsi]
   140007f21:	jbe    0x140007f88
   140007f23:	pop    rdi
   140007f24:	jae    0x140007f26
   140007f26:	call   0x1b376de2f
   140007f2b:	movsxd esi,DWORD PTR [rdi+0x70]
   140007f2e:	jb     0x140007f99
   140007f30:	outs   dx,BYTE PTR ds:[rsi]
   140007f31:	je     0x140007f99
   140007f33:	add    BYTE PTR [rcx+0x74775f05],dl
   140007f39:	outs   dx,DWORD PTR ds:[rsi]
   140007f3a:	imul   eax,DWORD PTR [rax],0x6d77077f
   140007f40:	gs ins DWORD PTR es:[rdi],dx
   140007f42:	movsxd esi,DWORD PTR [rax+0x79]
   140007f45:	pop    rdi
   140007f46:	jae    0x140007f48
   140007f48:	push   rax
   140007f49:	(bad)  
   140007f4a:	data16 jb 0x140007fb2
   140007f4d:	add    BYTE PTR gs:[rax],al
   140007f50:	(bad)  
   140007f51:	(bad)  
   140007f52:	ja     0x140007fc4
   140007f54:	jb     0x140007fbf
   140007f56:	outs   dx,BYTE PTR ds:[rsi]
   140007f57:	je     0x140007fbf
   140007f59:	pop    rdi
   140007f5a:	jae    0x140007f5c
   140007f5c:	gs (bad) 
   140007f5e:	ja     0x140007fc3
   140007f60:	jae    0x140007fd0
   140007f62:	ins    BYTE PTR es:[rdi],dx
   140007f63:	outs   dx,BYTE PTR gs:[rsi]
   140007f65:	add    BYTE PTR [rdx+0x73775f05],al
   140007f6b:	jo     0x140007fd9
   140007f6d:	imul   esi,DWORD PTR [rax+rsi*2+0x61],0x735f6874
   140007f75:	add    BYTE PTR [rsi+0x73775f05],al
   140007f7b:	je     0x140007fde
   140007f7d:	je     0x140007fb5
   140007f7f:	xor    al,0x69
   140007f81:	xor    esi,DWORD PTR [rdx]
   140007f83:	add    BYTE PTR [rbp+0x7],cl
   140007f86:	jbe    0x140007ffb
   140007f88:	ja     0x140007ffa
   140007f8a:	jb     0x140007ff5
   140007f8c:	outs   dx,BYTE PTR ds:[rsi]
   140007f8d:	je     0x140007ff5
   140007f8f:	pop    rdi
   140007f90:	jae    0x140007f92
   140007f92:	sbb    al,BYTE PTR [rip+0x7363775f]        # 0x1b363f6f7
   140007f98:	ins    BYTE PTR es:[rdi],dx
   140007f99:	ja     0x14000800d
   140007f9b:	pop    rdi
   140007f9c:	jae    0x140007f9e
   140007f9e:	mov    dh,0x6
   140007fa0:	ins    DWORD PTR es:[rdi],dx
   140007fa1:	gs ins DWORD PTR es:[rdi],dx
   140007fa3:	movsxd esi,DWORD PTR [rax+0x79]
   140007fa6:	pop    rdi
   140007fa7:	jae    0x140007fa9
   140007fa9:	add    BYTE PTR [rdx+0x7],ch
   140007fac:	ja     0x140008011
   140007fae:	jae    0x140008023
   140007fb0:	jo     0x140008020
   140007fb2:	add    BYTE PTR [rax],al
   140007fb4:	pop    rbp
   140007fb5:	(bad)  
   140007fb6:	ja     0x14000801b
   140007fb8:	jae    0x14000801d
   140007fba:	jae    0x14000802c
   140007fbc:	outs   dx,BYTE PTR ds:[rsi]
   140007fbd:	add    BYTE PTR [rax+0x0],dh
   140007fc0:	(bad)  
   140007fc1:	(bad)  
   140007fc2:	xor    al,BYTE PTR [rax+0x59]
   140007fc5:	push   r8
   140007fc7:	rex.RB
   140007fc8:	pop    r8
   140007fca:	pop    rdi
   140007fcb:	rex.WXB
   140007fcc:	rex pop rdx
   140007fce:	add    BYTE PTR [rax],al
   140007fd0:	mov    ecx,0x6d656d06
   140007fd5:	jae    0x14000803c
   140007fd7:	je     0x140007fd9
   140007fd9:	add    BYTE PTR [rbp+0x53],cl
   140007fdc:	push   rsi
   140007fdd:	rex.XB push r10
   140007fdf:	xor    DWORD PTR [rdx],esi
   140007fe1:	xor    BYTE PTR [rsi],ch
   140007fe3:	fs ins BYTE PTR es:[rdi],dx
   140007fe5:	ins    BYTE PTR es:[rdi],dx
   140007fe6:	add    BYTE PTR [rax],al
   140007fe8:	pop    rbx
   140007fe9:	add    ebx,DWORD PTR [rdi+0x6c]
   140007fec:	outs   dx,DWORD PTR ds:[rsi]
   140007fed:	movsxd ebp,DWORD PTR [rbx+0x0]
   140007ff0:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   140007ff7:	movsxd ebp,DWORD PTR [rbx+0x0]
   140007ffa:	or     DWORD PTR [rdx],eax
   140007ffc:	pop    rdi
   140007ffd:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008000:	ins    BYTE PTR es:[rdi],dx
   140008001:	outs   dx,DWORD PTR ds:[rsi]
   140008002:	movsxd ebx,DWORD PTR [rdi+0x63]
   140008005:	jb     0x14000807b
   140008007:	add    BYTE PTR [rdi+0x645f5f01],bl
   14000800d:	ins    BYTE PTR es:[rdi],dx
   14000800e:	ins    BYTE PTR es:[rdi],dx
   14000800f:	outs   dx,DWORD PTR ds:[rsi]
   140008010:	outs   dx,BYTE PTR ds:[rsi]
   140008011:	gs js  0x14000807d
   140008014:	je     0x140008016
   140008016:	pop    rsp
   140008017:	add    DWORD PTR [rdi+0x5f],ebx
   14000801a:	rex.XB pop r15
   14000801c:	jae    0x14000808e
   14000801e:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140008022:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008029:	ins    BYTE PTR es:[rdi],dx
   14000802a:	gs jb  0x14000802d
   14000802d:	add    BYTE PTR [rdx],al
   14000802f:	add    al,0x5f
   140008031:	outs   dx,DWORD PTR ds:[rsi]
   140008032:	outs   dx,BYTE PTR ds:[rsi]
   140008033:	gs js  0x14000809f
   140008036:	je     0x140008038
   140008038:	pop    rax
   140008039:	add    DWORD PTR [rdi+0x58],ebx
   14000803c:	movsxd esi,DWORD PTR [rax+0x74]
   14000803f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x1f20072
   140008048:	pop    rdi
   140008049:	(bad)  
   14000804a:	ins    DWORD PTR es:[rdi],dx
   14000804b:	jae    0x1400080b4
   14000804d:	pop    rdi
   14000804e:	gs js  0x1400080ba
   140008051:	je     0x140008053
   140008053:	add    ah,ah
   140008055:	add    DWORD PTR [rdi+0x5f],ebx
   140008058:	ja     0x1400080c1
   14000805a:	gs je  0x1400080ca
   14000805d:	(bad)  
   14000805e:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008065:	add    dh,cl
   140008067:	add    DWORD PTR [rdi+0x5f],ebx
   14000806a:	jae    0x1400080d1
   14000806c:	je     0x1400080cd
   14000806e:	(bad)  
   14000806f:	jo     0x1400080e1
   140008071:	pop    rdi
   140008072:	je     0x1400080ed
   140008074:	jo     0x1400080db
   140008076:	add    BYTE PTR [rax],al
   140008078:	sbb    BYTE PTR [rsi],al
   14000807a:	gs js  0x1400080e6
   14000807d:	je     0x14000807f
   14000807f:	add    BYTE PTR [rax+0x2],bl
   140008082:	pop    rdi
   140008083:	gs js  0x1400080ef
   140008086:	je     0x140008088
   140008088:	or     al,BYTE PTR [rdx]
   14000808a:	pop    rdi
   14000808b:	movsxd esp,DWORD PTR [rbp+0x78]
   14000808e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x635f021a
   140008096:	outs   dx,DWORD PTR ds:[rsi]
   140008097:	outs   dx,BYTE PTR ds:[rsi]
   140008098:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000809e:	gs (bad) 
   1400080a0:	fs ins BYTE PTR es:[rdi],dx
   1400080a2:	outs   dx,DWORD PTR ds:[rsi]
   1400080a3:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400080a6:	gs add al,dl
   1400080a9:	add    DWORD PTR [rdi+0x5f],ebx
   1400080ac:	jae    0x140008113
   1400080ae:	je     0x140008125
   1400080b0:	jae    0x140008117
   1400080b2:	jb     0x140008121
   1400080b4:	(bad)  
   1400080b5:	je     0x14000811f
   1400080b7:	gs jb  0x14000812c
   1400080ba:	add    BYTE PTR [rax],al
   1400080bc:	loop   0x1400080c0
   1400080be:	pop    rdi
   1400080bf:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400080c6:	ins    DWORD PTR es:[rdi],dx
   1400080c7:	pop    rdi
   1400080c8:	gs add cl,ah
   1400080cb:	add    bl,BYTE PTR [rdi+0x69]
   1400080ce:	outs   dx,BYTE PTR ds:[rsi]
   1400080cf:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xe5006d72
   1400080d7:	add    DWORD PTR [rdi+0x5f],ebx
   1400080da:	ja     0x140008145
   1400080dc:	outs   dx,BYTE PTR ds:[rsi]
   1400080dd:	imul   esi,DWORD PTR [rbp+riz*2+0x6e],0x78000076
   1400080e5:	add    bl,BYTE PTR [rdi+0x66]
   1400080e8:	ins    DWORD PTR es:[rdi],dx
   1400080e9:	outs   dx,DWORD PTR ds:[rsi]
   1400080ea:	fs add BYTE PTR gs:[rax],al
   1400080ee:	sbb    DWORD PTR [rdx],eax
   1400080f0:	pop    rdi
   1400080f1:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400080f4:	ins    DWORD PTR es:[rdi],dx
   1400080f5:	outs   dx,DWORD PTR ds:[rsi]
   1400080f6:	fs add BYTE PTR gs:[rax],al
   1400080fa:	popf   
   1400080fb:	add    DWORD PTR [rdi+0x5f],ebx
   1400080fe:	movsxd esi,DWORD PTR [rdx+0x74]
   140008101:	pop    rdi
   140008102:	fs gs (bad) 
   140008105:	jne    0x14000816e
   140008107:	addr32 gs jb 0x14000816a
   14000810b:	push   0x6b6f6f
   140008110:	pushf  
   140008111:	add    DWORD PTR [rdi+0x5f],ebx
   140008114:	movsxd esi,DWORD PTR [rdx+0x74]
   140008117:	push   rbp
   140008118:	outs   dx,BYTE PTR ds:[rsi]
   140008119:	push   0x6c646e61
   14000811e:	gs fs rex.RB js 0x140008186
   140008123:	gs jo  0x14000819a
   140008126:	imul   ebp,DWORD PTR [rdi+0x6e],0x5f019b00
   14000812d:	pop    rdi
   14000812e:	movsxd esi,DWORD PTR [rdx+0x74]
   140008131:	push   rsp
   140008132:	gs jb  0x1400081a2
   140008135:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000813c:	outs   dx,DWORD PTR ds:[rsi]
   14000813d:	movsxd esp,DWORD PTR [rbp+0x73]
   140008140:	jae    0x140008142
   140008142:	jle    0x140008145
   140008144:	pop    rdi
   140008145:	pop    rdi
   140008146:	movsxd esi,DWORD PTR [rdx+0x74]
   140008149:	rex.XB (bad) 
   14000814b:	jo     0x1400081c1
   14000814d:	jne    0x1400081c1
   14000814f:	gs push rax
   140008151:	jb     0x1400081b8
   140008153:	jbe    0x1400081be
   140008155:	outs   dx,DWORD PTR ds:[rsi]
   140008156:	jne    0x1400081cb
   140008158:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000815a:	outs   dx,BYTE PTR ds:[rsi]
   14000815b:	je     0x1400081c2
   14000815d:	js     0x1400081d3
   14000815f:	add    BYTE PTR [rbx],dh
   140008161:	add    DWORD PTR [rdi],edi
   140008163:	je     0x1400081ca
   140008165:	jb     0x1400081d4
   140008167:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000816e:	pop    rcx
   14000816f:	pop    r8
   140008171:	pop    rax
   140008172:	pop    rdx
   140008173:	add    BYTE PTR [rbx],bl
   140008175:	add    DWORD PTR [rdi],edi
   140008177:	pop    rdi
   140008178:	je     0x1400081f3
   14000817a:	jo     0x1400081e1
   14000817c:	pop    rdi
   14000817d:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   140008184:	outs   dx,DWORD PTR ds:[rsi]
   140008185:	jb     0x1400081e6
   140008187:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000818e:	ins    BYTE PTR es:[rdi],dx
   14000818f:	pop    rdi
   140008190:	ins    DWORD PTR es:[rdi],dx
   140008191:	gs je  0x1400081fc
   140008194:	outs   dx,DWORD PTR ds:[rsi]
   140008195:	fs rex je 0x140008212
   140008199:	jo     0x140008200
   14000819b:	pop    rdi
   14000819c:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   1400081a3:	rex.RB
   1400081a4:	rex.B
   1400081a5:	pop    r8
   1400081a7:	pop    rax
   1400081a8:	pop    rdx
   1400081a9:	add    BYTE PTR [rcx+0x635f5f01],bl
   1400081af:	jb     0x140008225
   1400081b1:	push   rbx
   1400081b2:	gs je  0x14000820a
   1400081b5:	outs   dx,BYTE PTR ds:[rsi]
   1400081b6:	push   0x6c646e61
   1400081bb:	gs fs rex.RB js 0x140008223
   1400081c0:	gs jo  0x140008237
   1400081c3:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400081ca:	gs jb  0x1400081cd
   1400081cd:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a36ec6d4
   1400081d3:	outs   dx,DWORD PTR ds:[rsi]
   1400081d4:	fs gs push rax
   1400081d7:	outs   dx,DWORD PTR ds:[rsi]
   1400081d8:	imul   ebp,DWORD PTR [rsi+0x74],0x70007265
   1400081df:	add    ecx,DWORD PTR [rcx+0x73]
   1400081e2:	push   rax
   1400081e3:	jb     0x140008254
   1400081e5:	movsxd esp,DWORD PTR [rbp+0x73]
   1400081e8:	jae    0x140008259
   1400081ea:	jb     0x140008232
   1400081ec:	gs (bad) 
   1400081ee:	je     0x140008265
   1400081f0:	jb     0x140008257
   1400081f2:	push   rax
   1400081f3:	jb     0x14000825a
   1400081f5:	jae    0x14000825c
   1400081f7:	outs   dx,BYTE PTR ds:[rsi]
   1400081f8:	je     0x1400081fa
   1400081fa:	xor    BYTE PTR [rcx+rdx*2],al
   1400081fd:	jne    0x140008264
   1400081ff:	jb     0x14000827a
   140008201:	push   rax
   140008202:	gs jb  0x14000826b
   140008205:	outs   dx,DWORD PTR ds:[rsi]
   140008206:	jb     0x140008275
   140008208:	(bad)  
   140008209:	outs   dx,BYTE PTR ds:[rsi]
   14000820a:	movsxd esp,DWORD PTR [rbp+0x43]
   14000820d:	outs   dx,DWORD PTR ds:[rsi]
   14000820e:	jne    0x14000827e
   140008210:	je     0x140008277
   140008212:	jb     0x140008214
   140008214:	adc    BYTE PTR [rdx],al
   140008216:	rex.RXB
   140008217:	gs je  0x14000825d
   14000821a:	jne    0x14000828e
   14000821c:	jb     0x140008283
   14000821e:	outs   dx,BYTE PTR ds:[rsi]
   14000821f:	je     0x140008271
   140008221:	jb     0x140008292
   140008223:	movsxd esp,DWORD PTR [rbp+0x73]
   140008226:	jae    0x140008271
   140008228:	add    BYTE PTR fs:[rdx+rax*1],dl
   14000822c:	rex.RXB
   14000822d:	gs je  0x140008273
   140008230:	jne    0x1400082a4
   140008232:	jb     0x140008299
   140008234:	outs   dx,BYTE PTR ds:[rsi]
   140008235:	je     0x14000828b
   140008237:	push   0x64616572
   14000823c:	rex.WB
   14000823d:	add    BYTE PTR fs:[rax],al
   140008240:	fld    QWORD PTR [rdx]
   140008242:	rex.RXB
   140008243:	gs je  0x140008299
   140008246:	jns    0x1400082bb
   140008248:	je     0x1400082af
   14000824a:	ins    DWORD PTR es:[rdi],dx
   14000824b:	push   rsp
   14000824c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008253:	ins    BYTE PTR es:[rdi],dx
   140008254:	gs push rsp
   140008256:	imul   ebp,DWORD PTR [rbp+0x65],0x5f014500
   14000825d:	rex.XB js 0x1400082d8
   140008260:	push   rsp
   140008261:	push   0x45776f72
   140008266:	js     0x1400082cb
   140008268:	gs jo  0x1400082df
   14000826b:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   140008272:	pop    rdi
   140008273:	pop    rdi
   140008274:	rex.XB js 0x1400082ef
   140008277:	rex.RX jb 0x1400082db
   14000827a:	ins    DWORD PTR es:[rdi],dx
   14000827b:	gs rex.W (bad) 
   14000827e:	outs   dx,BYTE PTR ds:[rsi]
   14000827f:	fs ins BYTE PTR es:[rdi],dx
   140008281:	gs jb  0x1400082b7
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   140009006:	add    BYTE PTR [rax],al
   140009008:	int    0x5d
   14000900a:	and    dl,dl
   14000900c:	data16 (bad) 
   14000900e:	(bad)  
   14000900f:	inc    DWORD PTR [rcx]
   140009011:	add    BYTE PTR [rax],al
   140009013:	add    dh,bh
   140009015:	(bad)  
   140009016:	(bad)  
   140009017:	(bad)  
   140009018:	(bad)  
   140009019:	(bad)  
   14000901a:	(bad)  
   14000901b:	inc    DWORD PTR [rax]
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    al,dh
   140009021:	movsxd eax,DWORD PTR [rax]
   140009023:	rex add DWORD PTR [rax],eax
	...
   14000902e:	add    BYTE PTR [rax],al
   140009030:	cs (bad) 
   140009032:	push   r14
   140009034:	je     0x1400090af
   140009036:	jo     0x14000909d
   140009038:	pop    rdi
   140009039:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140009040:	lock movsxd eax,DWORD PTR [rax]
   140009043:	rex add DWORD PTR [rax],eax
	...
   14000904e:	add    BYTE PTR [rax],al
   140009050:	cs (bad) 
   140009052:	push   r14
   140009054:	rex.XB push r15
   140009056:	imul   ebp,DWORD PTR [rsi+0x33],0x61654832
   14000905d:	jo     0x14000909f
   14000905f:	push   r12
   140009061:	rex.WR
   140009062:	rex
   140009063:	add    BYTE PTR [rax],al
   140009066:	add    BYTE PTR [rax],al
   140009068:	lock movsxd eax,DWORD PTR [rax]
   14000906b:	rex add DWORD PTR [rax],eax
	...
   140009076:	add    BYTE PTR [rax],al
   140009078:	cs (bad) 
   14000907a:	push   r13
   14000907c:	rex.WB
   14000907d:	rex.B je 0x1400090ec
   140009080:	rex.WRB
   140009081:	gs ins DWORD PTR es:[rdi],dx
   140009083:	rex.WRB
   140009084:	addr32 jb 0x1400090c7
   140009087:	push   r12
   140009089:	rex.WR
   14000908a:	rex
   14000908b:	add    BYTE PTR [rax],al
   14000908e:	add    BYTE PTR [rax],al
   140009090:	lock movsxd eax,DWORD PTR [rax]
   140009093:	rex add DWORD PTR [rax],eax
	...
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	cs (bad) 
   1400090a2:	push   r13
   1400090a4:	rex.WB
   1400090a5:	rex.B je 0x140009114
   1400090a8:	push   rbx
   1400090a9:	je     0x14000911d
   1400090ab:	imul   ebp,DWORD PTR [rsi+0x67],0x4072674d
   1400090b2:	push   r12
   1400090b4:	rex.WR
   1400090b5:	rex
   1400090b6:	add    al,sil
   1400090b9:	movsxd eax,DWORD PTR [rax]
   1400090bb:	rex add DWORD PTR [rax],eax
	...
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	cs (bad) 
   1400090ca:	push   r14
   1400090cc:	rex.XB
   1400090cd:	rex.B je 0x14000913c
   1400090d0:	push   rbx
   1400090d1:	je     0x140009145
   1400090d3:	imul   ebp,DWORD PTR [rsi+0x67],0x4072674d
   1400090da:	push   r12
   1400090dc:	rex.WR
   1400090dd:	rex
   1400090de:	add    al,sil
   1400090e1:	movsxd eax,DWORD PTR [rax]
   1400090e3:	rex add DWORD PTR [rax],eax
	...
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	cs (bad) 
   1400090f2:	push   r14
   1400090f4:	rex.XB
   1400090f5:	rex.B je 0x140009164
   1400090f8:	rex.RB js 0x14000915e
   1400090fb:	gs jo  0x140009172
   1400090fe:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   140009105:	rex
   140009106:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	add    BYTE PTR [rax],dl
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	adc    eax,0xf0000010
   14000a009:	ins    BYTE PTR es:[rdi],dx
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	sbb    BYTE PTR [rax],dl
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	cmp    BYTE PTR [rax],dl
   14000a012:	add    BYTE PTR [rax],al
   14000a014:	lock ins BYTE PTR es:[rdi],dx
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	push   rax
   14000a019:	adc    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rdx+0x10],ch
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	lock ins BYTE PTR es:[rdi],dx
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	adc    BYTE PTR [rax],0x0
   14000a027:	add    BYTE PTR [rsi],bl
   14000a029:	adc    DWORD PTR [rax],eax
   14000a02b:	add    al,bh
   14000a02d:	ins    BYTE PTR es:[rdi],dx
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	and    BYTE PTR [rcx],dl
   14000a032:	add    BYTE PTR [rax],al
   14000a034:	ret    
   14000a035:	adc    DWORD PTR [rax],eax
   14000a037:	add    BYTE PTR [rbp*2+0x11d00000],cl
   14000a03e:	add    BYTE PTR [rax],al
   14000a040:	add    BYTE PTR [rdx],dl
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	and    BYTE PTR [rbp+0x0],ch
   14000a047:	add    BYTE PTR [rax],dh
   14000a049:	adc    al,BYTE PTR [rax]
   14000a04b:	add    BYTE PTR [rdi+0x12],ch
   14000a04e:	add    BYTE PTR [rax],al
   14000a050:	lock ins BYTE PTR es:[rdi],dx
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	adc    BYTE PTR [rdx],0x0
   14000a057:	add    bl,cl
   14000a059:	adc    al,BYTE PTR [rax]
   14000a05b:	add    BYTE PTR [rax],ch
   14000a05d:	ins    DWORD PTR es:[rdi],dx
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	rcl    BYTE PTR [rdx],1
   14000a062:	add    BYTE PTR [rax],al
   14000a064:	(bad)  
   14000a065:	adc    eax,DWORD PTR [rax]
   14000a067:	add    BYTE PTR [rbp*2+0x13a00000],dh
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	ret    
   14000a071:	adc    eax,DWORD PTR [rax]
   14000a073:	add    BYTE PTR [rax+0x6d],al
   14000a076:	add    BYTE PTR [rax],al
   14000a078:	ret    
   14000a079:	adc    eax,DWORD PTR [rax]
   14000a07b:	add    BYTE PTR [rdx],dh
   14000a07d:	adc    al,0x0
   14000a07f:	add    BYTE PTR [rax+0x6d],cl
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	xor    dl,BYTE PTR [rax+rax*1]
   14000a087:	add    BYTE PTR [rdi],bh
   14000a089:	adc    al,0x0
   14000a08b:	add    BYTE PTR [rbp+rbp*2+0x0],bl
   14000a08f:	add    BYTE PTR [rax+0x14],dl
   14000a092:	add    BYTE PTR [rax],al
   14000a094:	jae    0x14000a0aa
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	lock ins BYTE PTR es:[rdi],dx
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	jae    0x14000a0b2
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	(bad)  
   14000a0a1:	adc    al,0x0
   14000a0a3:	add    BYTE PTR [rax+0x6d],dh
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	(bad)  
   14000a0a9:	adc    al,0x0
   14000a0ab:	add    dl,dl
   14000a0ad:	adc    al,0x0
   14000a0af:	add    BYTE PTR [rbp+rbp*2+0x15000000],al
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	cs adc eax,0x6d200000
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	xor    BYTE PTR [rip+0x17620000],dl        # 0x15762a0c6
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	cwde   
   14000a0c9:	ins    DWORD PTR es:[rdi],dx
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	jo     0x14000a0e5
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	(bad)  
   14000a0d1:	sbb    DWORD PTR [rax],eax
   14000a0d3:	add    BYTE PTR [rsi+rbp*2],cl
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	movabs al,ds:0x6000001dfa000019
   14000a0e1:	outs   dx,BYTE PTR ds:[rsi]
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	add    BYTE PTR [rsi],bl
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	push   0x22
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	sbb    BYTE PTR [rdi+0x0],ch
   14000a0ef:	add    BYTE PTR [rax+0x22],dh
   14000a0f2:	add    BYTE PTR [rax],al
   14000a0f4:	jo     0x14000a11c
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	ins    BYTE PTR es:[rdi],dx
   14000a0f9:	jo     0x14000a0fb
   14000a0fb:	add    BYTE PTR [rax+0x26],dh
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	mov    bh,0x26
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	sub    BYTE PTR [rbp+0x0],ch
   14000a107:	add    al,al
   14000a109:	add    BYTE PTR es:[rax],al
   14000a10c:	push   rbx
   14000a10d:	(bad)  
   14000a10e:	add    BYTE PTR [rax],al
   14000a110:	xor    al,0x71
   14000a112:	add    BYTE PTR [rax],al
   14000a114:	(bad)  
   14000a115:	(bad)  
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	mov    esp,DWORD PTR [rdi]
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	and    BYTE PTR [rbp+0x0],ch
   14000a11f:	add    BYTE PTR [rax+0x1c000027],dl
   14000a125:	sub    al,0x0
   14000a127:	add    BYTE PTR [rcx+rsi*2+0x0],bl
   14000a12b:	add    BYTE PTR [rax],ah
   14000a12d:	sub    al,0x0
   14000a12f:	add    BYTE PTR [rdi],ch
   14000a131:	add    BYTE PTR cs:[rax],al
   14000a134:	or     al,0x72
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	push   rax
   14000a139:	add    BYTE PTR cs:[rax],al
   14000a13c:	ja     0x14000a16c
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	pop    rsp
   14000a141:	jb     0x14000a143
   14000a143:	add    BYTE PTR [rdi+0x2e],dh
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	ds (bad) 
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	push   0x3e000072
   14000a151:	(bad)  
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	rex.WB (bad) 
   14000a156:	add    BYTE PTR [rax],al
   14000a158:	test   BYTE PTR [rdx+0x0],dh
   14000a15b:	add    BYTE PTR [rcx+0x2f],cl
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	push   rsp
   14000a161:	(bad)  
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	xchg   esp,eax
   14000a165:	jb     0x14000a167
   14000a167:	add    BYTE PTR [rax+0x2f],ah
   14000a16a:	add    BYTE PTR [rax],al
   14000a16c:	fisubr DWORD PTR [rdi]
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	sub    BYTE PTR [rbp+0x0],ch
   14000a173:	add    al,ah
   14000a175:	(bad)  
   14000a176:	add    BYTE PTR [rax],al
   14000a178:	scas   eax,DWORD PTR es:[rdi]
   14000a179:	xor    BYTE PTR [rax],al
   14000a17b:	add    BYTE PTR [rax-0x4fffff8e],dh
   14000a181:	xor    BYTE PTR [rax],al
   14000a183:	add    BYTE PTR [rsi],ah
   14000a185:	xor    DWORD PTR [rax],eax
   14000a187:	add    BYTE PTR [rax],ch
   14000a189:	ins    DWORD PTR es:[rdi],dx
   14000a18a:	add    BYTE PTR [rax],al
   14000a18c:	rex xor DWORD PTR [rax],eax
   14000a18f:	add    BYTE PTR [rdx+rsi*1],dl
   14000a192:	add    BYTE PTR [rax],al
   14000a194:	in     al,0x72
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	and    BYTE PTR [rdx],dh
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	pop    rbp
   14000a19d:	xor    al,BYTE PTR [rax]
   14000a19f:	add    al,bh
   14000a1a1:	jb     0x14000a1a3
   14000a1a3:	add    BYTE PTR [rbp+0x32],bl
   14000a1a6:	add    BYTE PTR [rax],al
   14000a1a8:	mov    bl,0x32
   14000a1aa:	add    BYTE PTR [rax],al
   14000a1ac:	adc    BYTE PTR [rbx+0x0],dh
   14000a1af:	add    BYTE PTR [rbx-0xdffffce],dh
   14000a1b5:	xor    al,BYTE PTR [rax]
   14000a1b7:	add    BYTE PTR [rbx+rsi*2],ah
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	add    BYTE PTR [rbx],dh
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a1c1:	xor    eax,DWORD PTR [rax]
   14000a1c3:	add    BYTE PTR [rbx+rsi*2],dh
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	mov    al,0x33
   14000a1ca:	add    BYTE PTR [rax],al
   14000a1cc:	(bad)
   14000a1cf:	add    BYTE PTR [rbx+rsi*2+0x0],cl
   14000a1d3:	add    ch,al
   14000a1d5:	xor    eax,DWORD PTR [rax]
   14000a1d7:	add    BYTE PTR [rbx],bl
   14000a1d9:	xor    al,0x0
   14000a1db:	add    BYTE PTR [rax+0x73],bl
   14000a1de:	add    BYTE PTR [rax],al
   14000a1e0:	sbb    esi,DWORD PTR [rax+rax*1]
   14000a1e3:	add    BYTE PTR [rsi],ah
   14000a1e5:	xor    al,0x0
   14000a1e7:	add    BYTE PTR [rbx+rsi*2+0x0],ch
   14000a1eb:	add    BYTE PTR [rax],dh
   14000a1ed:	xor    al,0x0
   14000a1ef:	add    BYTE PTR [rbp+0x34],ch
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	jl     0x14000a269
   14000a1f6:	add    BYTE PTR [rax],al
   14000a1f8:	ins    DWORD PTR es:[rdi],dx
   14000a1f9:	xor    al,0x0
   14000a1fb:	add    BYTE PTR [rdx],al
   14000a1fd:	xor    eax,0x738c0000
   14000a202:	add    BYTE PTR [rax],al
   14000a204:	add    dh,BYTE PTR [rip+0x350d0000]        # 0x1750da20a
   14000a20a:	add    BYTE PTR [rax],al
   14000a20c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a20d:	jae    0x14000a20f
   14000a20f:	add    BYTE PTR [rip+0x23000035],cl        # 0x16300a24a
   14000a215:	xor    eax,0x73b40000
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	xor    BYTE PTR [rip+0x353f0000],dh        # 0x1753fa222
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	lock ins BYTE PTR es:[rdi],dx
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	movabs al,ds:0x2800003625000035
   14000a231:	ins    DWORD PTR es:[rdi],dx
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	xor    BYTE PTR [rsi],dh
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	(bad)  
   14000a239:	(bad)  
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	int3   
   14000a23d:	jae    0x14000a23f
   14000a23f:	add    BYTE PTR [rax],ah
   14000a241:	(bad)  
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	sbb    bh,BYTE PTR [rax]
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	pop    rsp
   14000a249:	je     0x14000a24b
   14000a24b:	add    BYTE PTR [rax],ah
   14000a24d:	cmp    BYTE PTR [rax],al
   14000a24f:	add    BYTE PTR [rcx+0x68000038],cl
   14000a255:	je     0x14000a257
   14000a257:	add    BYTE PTR [rcx+0x1f000038],cl
   14000a25d:	cmp    DWORD PTR [rax],eax
   14000a25f:	add    BYTE PTR [rax+0x74],bh
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	(bad)  
   14000a265:	cmp    DWORD PTR [rax],eax
   14000a267:	add    BYTE PTR [rcx+rdi*1],bh
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	mov    WORD PTR [rax+rax*1+0x0],?
   14000a270:	cmp    al,0x39
   14000a272:	add    BYTE PTR [rax],al
   14000a274:	push   0xffffffff9c000039
   14000a279:	je     0x14000a27b
   14000a27b:	add    BYTE PTR [rax+0x39],dh
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	adc    eax,0xb000003a
   14000a285:	je     0x14000a287
   14000a287:	add    BYTE PTR [rax],ah
   14000a289:	cmp    al,BYTE PTR [rax]
   14000a28b:	add    BYTE PTR [rdx+rdi*1+0x0],cl
   14000a28f:	add    al,al
   14000a291:	je     0x14000a293
   14000a293:	add    BYTE PTR [rdx+rdi*1+0x0],cl
   14000a297:	add    BYTE PTR [rdx+rdi*1+0x0],dl
   14000a29b:	add    al,dl
   14000a29d:	je     0x14000a29f
   14000a29f:	add    BYTE PTR [rdx+rdi*1+0x0],dl
   14000a2a3:	add    BYTE PTR [rdi],al
   14000a2a5:	cmp    eax,DWORD PTR [rax]
   14000a2a7:	add    ah,ah
   14000a2a9:	je     0x14000a2ab
   14000a2ab:	add    BYTE PTR [rdi],al
   14000a2ad:	cmp    eax,DWORD PTR [rax]
   14000a2af:	add    BYTE PTR [rdx],dl
   14000a2b1:	cmp    eax,DWORD PTR [rax]
   14000a2b3:	add    ah,bh
   14000a2b5:	je     0x14000a2b7
   14000a2b7:	add    BYTE PTR [rdx],dl
   14000a2b9:	cmp    eax,DWORD PTR [rax]
   14000a2bb:	add    BYTE PTR [rip+0xc00003b],bl        # 0x14c00a2fc
   14000a2c1:	jne    0x14000a2c3
   14000a2c3:	add    BYTE PTR [rip+0x3300003b],bl        # 0x17300a304
   14000a2c9:	cmp    eax,DWORD PTR [rax]
   14000a2cb:	add    BYTE PTR [rsi*2+0x3b400000],ah
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	mov    WORD PTR [rbx],?
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	and    BYTE PTR [rbp+0x0],ch
   14000a2db:	add    BYTE PTR [rax-0x5dffffc5],dl
   14000a2e1:	cmp    eax,DWORD PTR [rax]
   14000a2e3:	add    BYTE PTR [rax+0x75],al
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	movabs ds:0x4c00003c1300003b,al
   14000a2f1:	jne    0x14000a2f3
   14000a2f3:	add    BYTE PTR [rbx],dl
   14000a2f5:	cmp    al,0x0
   14000a2f7:	add    BYTE PTR [rdx+0x6400003f],bh
   14000a2fd:	jne    0x14000a2ff
   14000a2ff:	add    BYTE PTR [rdx-0x28ffffc1],bh
   14000a305:	(bad)  
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	js     0x14000a37f
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	xlat   BYTE PTR ds:[rbx]
   14000a30d:	(bad)  
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	idiv   DWORD PTR [rdi]
   14000a312:	add    BYTE PTR [rax],al
   14000a314:	mov    BYTE PTR [rbp+0x0],dh
   14000a317:	add    bh,dh
   14000a319:	(bad)  
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	adc    al,BYTE PTR [rax+0x0]
   14000a31f:	add    BYTE PTR [rbp+rsi*2+0x40200000],bl
   14000a326:	add    BYTE PTR [rax],al
   14000a328:	movabs eax,ds:0x70000074b0000040
   14000a331:	add    BYTE PTR [r8],al
   14000a334:	mov    cl,0x41
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	lock ins BYTE PTR es:[rdi],dx
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	rol    BYTE PTR [rcx+0x0],0x0
   14000a340:	loop   0x14000a383
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	lods   al,BYTE PTR ds:[rsi]
   14000a345:	jne    0x14000a347
   14000a347:	add    al,dh
   14000a349:	add    BYTE PTR [r8],al
   14000a34c:	rex.WXB
   14000a34d:	rex.X add BYTE PTR [rax],al
   14000a350:	mov    ah,0x75
   14000a352:	add    BYTE PTR [rax],al
   14000a354:	push   rax
   14000a355:	rex.X add BYTE PTR [rax],al
   14000a358:	ins    DWORD PTR es:[rdi],dx
   14000a359:	rex.X add BYTE PTR [rax],al
   14000a35c:	call   0x1ad00a3d6
   14000a361:	rex.X add BYTE PTR [rax],al
   14000a364:	or     eax,0xf4000043
   14000a369:	jne    0x14000a36b
   14000a36b:	add    BYTE PTR [rip+0x18000043],cl        # 0x15800a3b4
   14000a371:	rex.XB add BYTE PTR [r8],al
   14000a374:	adc    BYTE PTR [rsi+0x0],dh
   14000a377:	add    BYTE PTR [rax],bl
   14000a379:	rex.XB add BYTE PTR [r8],al
   14000a37c:	and    eax,DWORD PTR [rbx+0x0]
   14000a37f:	add    BYTE PTR [rax],ah
   14000a381:	jbe    0x14000a383
   14000a383:	add    BYTE PTR [rbx],ah
   14000a385:	rex.XB add BYTE PTR [r8],al
   14000a388:	cmp    DWORD PTR [rbx+0x0],eax
   14000a38b:	add    BYTE PTR [rax],bh
   14000a38d:	jbe    0x14000a38f
   14000a38f:	add    BYTE PTR [rax+0x43],al
   14000a392:	add    BYTE PTR [rax],al
   14000a394:	mov    ebp,0x54000043
   14000a399:	jbe    0x14000a39b
   14000a39b:	add    al,al
   14000a39d:	rex.XB add BYTE PTR [r8],al
   14000a3a0:	loop   0x14000a3e7
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	cld    
   14000a3a5:	jbe    0x14000a3a7
   14000a3a7:	add    al,dh
   14000a3a9:	add    BYTE PTR [r8],r8b
   14000a3ac:	rex.B
   14000a3ad:	rex.RX add BYTE PTR [rax],r8b
   14000a3b0:	sub    BYTE PTR [rbp+0x0],ch
   14000a3b3:	add    BYTE PTR [rax+0x46],dl
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	movabs al,ds:0xa000006d20000046
   14000a3c1:	rex.RX add BYTE PTR [rax],r8b
   14000a3c4:	mov    edi,0x20000046
   14000a3c9:	ins    DWORD PTR es:[rdi],dx
   14000a3ca:	add    BYTE PTR [rax],al
   14000a3cc:	mov    edi,0x14000046
   14000a3d1:	rex.RXB add BYTE PTR [r8],r8b
   14000a3d4:	push   0x14000077
   14000a3d9:	rex.RXB add BYTE PTR [r8],r8b
   14000a3dc:	jns    0x14000a427
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	jl     0x14000a459
   14000a3e2:	add    BYTE PTR [rax],al
   14000a3e4:	or     BYTE PTR [rcx+0x0],0x0
   14000a3e8:	rex.WRX
   14000a3e9:	rex.WX add BYTE PTR [rax],al
   14000a3ec:	mov    WORD PTR [rdi+0x0],?
   14000a3ef:	add    BYTE PTR [rax+0x4a],dl
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	cmc    
   14000a3f5:	rex.WX add BYTE PTR [rax],al
   14000a3f8:	sub    BYTE PTR [rbp+0x0],ch
   14000a3fb:	add    al,bh
   14000a3fd:	rex.WX add BYTE PTR [rax],al
   14000a400:	sub    al,0x4b
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	and    BYTE PTR [rbp+0x0],ch
   14000a407:	add    BYTE PTR [rbx+rcx*2],ch
   14000a40a:	add    BYTE PTR [rax],al
   14000a40c:	test   al,0x4b
   14000a40e:	add    BYTE PTR [rax],al
   14000a410:	or     al,0x6d
   14000a412:	add    BYTE PTR [rax],al
   14000a414:	ror    BYTE PTR [rbx+0x0],0x0
   14000a418:	fisttp WORD PTR [rbx+0x0]
   14000a41b:	add    BYTE PTR [rax],dh
   14000a41d:	js     0x14000a41f
   14000a41f:	add    al,ch
   14000a421:	rex.WXB add BYTE PTR [r8],al
   14000a424:	rex.WR add BYTE PTR ss:[rax],r8b
   14000a428:	and    BYTE PTR [rbp+0x0],ch
   14000a42b:	add    BYTE PTR [rax],bh
   14000a42d:	rex.WR add BYTE PTR [rax],r8b
   14000a430:	call   0x17400a481
   14000a435:	js     0x14000a437
   14000a437:	add    al,ch
   14000a439:	rex.WR add BYTE PTR [rax],r8b
   14000a43c:	dec    DWORD PTR [rax+rax*1+0x0]
   14000a440:	lock ins BYTE PTR es:[rdi],dx
   14000a442:	add    BYTE PTR [rax],al
   14000a444:	add    BYTE PTR [rbp+0x0],cl
   14000a447:	add    BYTE PTR [rdx+0x4d],ch
   14000a44a:	add    BYTE PTR [rax],al
   14000a44c:	mov    al,0x74
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	ins    BYTE PTR es:[rdi],dx
   14000a451:	rex.WRB add BYTE PTR [r8],r8b
   14000a454:	cmp    cl,BYTE PTR [rsi+0x0]
   14000a457:	add    al,dh
   14000a459:	ins    BYTE PTR es:[rdi],dx
   14000a45a:	add    BYTE PTR [rax],al
   14000a45c:	cmp    al,0x4e
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	lahf   
   14000a461:	rex.WRX add BYTE PTR [rax],r8b
   14000a464:	push   rsp
   14000a465:	js     0x14000a467
   14000a467:	add    BYTE PTR [rax+0x1000004e],ah
   14000a46d:	push   rax
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	pop    rsp
   14000a471:	js     0x14000a473
   14000a473:	add    BYTE PTR [rax],dl
   14000a475:	push   rax
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	and    dl,BYTE PTR [rax+0x0]
   14000a47b:	add    al,dh
   14000a47d:	ins    BYTE PTR es:[rdi],dx
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	sub    BYTE PTR [rax+0x0],dl
   14000a483:	add    BYTE PTR [rcx+0x50],dh
   14000a486:	add    BYTE PTR [rax],al
   14000a488:	and    BYTE PTR [rbp+0x0],ch
   14000a48b:	add    BYTE PTR [rax+rdx*2+0x0],dh
   14000a48f:	add    BYTE PTR [rbp+0x51],al
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	jl     0x14000a50e
   14000a496:	add    BYTE PTR [rax],al
   14000a498:	(bad)  
   14000a499:	push   rcx
   14000a49a:	add    BYTE PTR [rax],al
   14000a49c:	mov    ebp,0x84000051
   14000a4a1:	js     0x14000a4a3
   14000a4a3:	add    al,al
   14000a4a5:	push   rcx
   14000a4a6:	add    BYTE PTR [rax],al
   14000a4a8:	or     dl,BYTE PTR [rdx+0x0]
   14000a4ab:	add    BYTE PTR [rax+rdi*2+0x520c0000],ch
   14000a4b2:	add    BYTE PTR [rax],al
   14000a4b4:	rex.R push rdx
   14000a4b6:	add    BYTE PTR [rax],al
   14000a4b8:	lock ins BYTE PTR es:[rdi],dx
   14000a4ba:	add    BYTE PTR [rax],al
   14000a4bc:	rex.R push rdx
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	pop    rbx
   14000a4c1:	push   rdx
   14000a4c2:	add    BYTE PTR [rax],al
   14000a4c4:	lock ins BYTE PTR es:[rdi],dx
   14000a4c6:	add    BYTE PTR [rax],al
   14000a4c8:	rcl    BYTE PTR [rdx+0x0],0x0
   14000a4cc:	or     eax,0xd4000053
   14000a4d1:	js     0x14000a4d3
   14000a4d3:	add    BYTE PTR [rax+0x53],al
   14000a4d6:	add    BYTE PTR [rax],al
   14000a4d8:	in     al,dx
   14000a4d9:	push   rbx
   14000a4da:	add    BYTE PTR [rax],al
   14000a4dc:	clc    
   14000a4dd:	js     0x14000a4df
   14000a4df:	add    al,dh
   14000a4e1:	push   rbx
   14000a4e2:	add    BYTE PTR [rax],al
   14000a4e4:	sub    BYTE PTR [rax+rax*1+0x0],dl
   14000a4e8:	sub    BYTE PTR [rbp+0x0],ch
   14000a4eb:	add    BYTE PTR [rax],ch
   14000a4ed:	push   rsp
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	(bad)  
   14000a4f1:	push   rsp
   14000a4f2:	add    BYTE PTR [rax],al
   14000a4f4:	sub    BYTE PTR [rbp+0x0],ch
   14000a4f7:	add    BYTE PTR [rax+0x37000054],ch
   14000a4fd:	push   rbp
   14000a4fe:	add    BYTE PTR [rax],al
   14000a500:	add    al,0x79
   14000a502:	add    BYTE PTR [rax],al
   14000a504:	cmp    BYTE PTR [rbp+0x0],dl
   14000a507:	add    BYTE PTR [rbx+0x20000055],bl
   14000a50d:	ins    DWORD PTR es:[rdi],dx
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	rcl    BYTE PTR [rbp+0x0],1
   14000a513:	add    cl,bh
   14000a515:	push   rbp
   14000a516:	add    BYTE PTR [rax],al
   14000a518:	pop    rax
   14000a519:	outs   dx,BYTE PTR ds:[rsi]
   14000a51a:	add    BYTE PTR [rax],al
   14000a51c:	adc    BYTE PTR [rsi+0x0],dl
   14000a51f:	add    BYTE PTR [rcx],bh
   14000a521:	push   rsi
   14000a522:	add    BYTE PTR [rax],al
   14000a524:	pop    rax
   14000a525:	outs   dx,BYTE PTR ds:[rsi]
   14000a526:	add    BYTE PTR [rax],al
   14000a528:	rex.RB push r14
   14000a52a:	add    BYTE PTR [rax],al
   14000a52c:	(bad)  
   14000a52d:	push   rsi
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	pop    rax
   14000a531:	outs   dx,BYTE PTR ds:[rsi]
   14000a532:	add    BYTE PTR [rax],al
   14000a534:	(bad)  
   14000a535:	push   rsi
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	jge    0x14000a590
   14000a53a:	add    BYTE PTR [rax],al
   14000a53c:	pop    rax
   14000a53d:	outs   dx,BYTE PTR ds:[rsi]
   14000a53e:	add    BYTE PTR [rax],al
   14000a540:	test   al,0x56
   14000a542:	add    BYTE PTR [rax],al
   14000a544:	(bad)  
   14000a545:	push   rsi
   14000a546:	add    BYTE PTR [rax],al
   14000a548:	pop    rax
   14000a549:	outs   dx,BYTE PTR ds:[rsi]
   14000a54a:	add    BYTE PTR [rax],al
   14000a54c:	loopne 0x14000a5a4
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	xorps  xmm0,XMMWORD PTR [rax]
   14000a553:	add    BYTE PTR [rax+0x6e],bl
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	sbb    edx,DWORD PTR [rdi+0x0]
   14000a55b:	add    BYTE PTR [rdi+0x57],al
   14000a55e:	add    BYTE PTR [rax],al
   14000a560:	pop    rax
   14000a561:	outs   dx,BYTE PTR ds:[rsi]
   14000a562:	add    BYTE PTR [rax],al
   14000a564:	push   rbx
   14000a565:	push   rdi
   14000a566:	add    BYTE PTR [rax],al
   14000a568:	(bad)  
   14000a569:	push   rdi
   14000a56a:	add    BYTE PTR [rax],al
   14000a56c:	pop    rax
   14000a56d:	outs   dx,BYTE PTR ds:[rsi]
   14000a56e:	add    BYTE PTR [rax],al
   14000a570:	rcl    BYTE PTR [rdi+0x0],1
   14000a573:	add    dh,dh
   14000a575:	push   rdi
   14000a576:	add    BYTE PTR [rax],al
   14000a578:	pop    rax
   14000a579:	outs   dx,BYTE PTR ds:[rsi]
   14000a57a:	add    BYTE PTR [rax],al
   14000a57c:	(bad)  
   14000a57d:	pop    rax
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	xchg   BYTE PTR [rax+0x0],bl
   14000a583:	add    BYTE PTR [rax+0x6e],bl
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	nop
   14000a589:	pop    rax
   14000a58a:	add    BYTE PTR [rax],al
   14000a58c:	mov    cl,0x58
   14000a58e:	add    BYTE PTR [rax],al
   14000a590:	rex.WR je 0x14000a593
   14000a593:	add    al,dl
   14000a595:	pop    rax
   14000a596:	add    BYTE PTR [rax],al
   14000a598:	in     al,dx
   14000a599:	pop    rax
   14000a59a:	add    BYTE PTR [rax],al
   14000a59c:	pop    rax
   14000a59d:	outs   dx,BYTE PTR ds:[rsi]
   14000a59e:	add    BYTE PTR [rax],al
   14000a5a0:	clc    
   14000a5a1:	pop    rax
   14000a5a2:	add    BYTE PTR [rax],al
   14000a5a4:	sbb    DWORD PTR [rcx+0x0],ebx
   14000a5a7:	add    ah,ch
   14000a5a9:	jbe    0x14000a5ab
   14000a5ab:	add    BYTE PTR [rax],ah
   14000a5ad:	pop    rcx
   14000a5ae:	add    BYTE PTR [rax],al
   14000a5b0:	rex.XB pop r9
   14000a5b2:	add    BYTE PTR [rax],al
   14000a5b4:	pop    rax
   14000a5b5:	ja     0x14000a5b7
   14000a5b7:	add    BYTE PTR [rax+0x59],dl
   14000a5ba:	add    BYTE PTR [rax],al
   14000a5bc:	ins    BYTE PTR es:[rdi],dx
   14000a5bd:	pop    rcx
   14000a5be:	add    BYTE PTR [rax],al
   14000a5c0:	pop    rax
   14000a5c1:	outs   dx,BYTE PTR ds:[rsi]
   14000a5c2:	add    BYTE PTR [rax],al
   14000a5c4:	ins    BYTE PTR es:[rdi],dx
   14000a5c5:	pop    rcx
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	mov    edx,0x1c000059
   14000a5cd:	js     0x14000a5cf
   14000a5cf:	add    BYTE PTR [rdx-0x2affffa7],bh
   14000a5d5:	pop    rcx
   14000a5d6:	add    BYTE PTR [rax],al
   14000a5d8:	pop    rax
   14000a5d9:	outs   dx,BYTE PTR ds:[rsi]
   14000a5da:	add    BYTE PTR [rax],al
   14000a5dc:	(bad)  
   14000a5dd:	pop    rcx
   14000a5de:	add    BYTE PTR [rax],al
   14000a5e0:	repz pop rcx
   14000a5e2:	add    BYTE PTR [rax],al
   14000a5e4:	pop    rax
   14000a5e5:	outs   dx,BYTE PTR ds:[rsi]
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	repz pop rcx
   14000a5ea:	add    BYTE PTR [rax],al
   14000a5ec:	(bad)  
   14000a5ed:	pop    rdx
   14000a5ee:	add    BYTE PTR [rax],al
   14000a5f0:	pop    rax
   14000a5f1:	outs   dx,BYTE PTR ds:[rsi]
   14000a5f2:	add    BYTE PTR [rax],al
   14000a5f4:	(bad)  
   14000a5f5:	pop    rdx
   14000a5f6:	add    BYTE PTR [rax],al
   14000a5f8:	(bad)  
   14000a5f9:	pop    rdx
   14000a5fa:	add    BYTE PTR [rax],al
   14000a5fc:	pop    rax
   14000a5fd:	outs   dx,BYTE PTR ds:[rsi]
   14000a5fe:	add    BYTE PTR [rax],al
   14000a600:	(bad)  
   14000a601:	pop    rdx
   14000a602:	add    BYTE PTR [rax],al
   14000a604:	sbb    BYTE PTR [rdx+0x0],0x0
   14000a608:	pop    rax
   14000a609:	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .rsrc:

000000014000b000 <.rsrc>:
	...
   14000b008:	add    al,0x0
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	add    BYTE PTR [rax],al
   14000b00e:	add    al,BYTE PTR [rax]
   14000b010:	adc    BYTE PTR [rax],al
   14000b012:	add    BYTE PTR [rax],al
   14000b014:	and    BYTE PTR [rax],al
   14000b016:	add    BYTE PTR [rax+0x18],al
   14000b01c:	cmp    BYTE PTR [rax],al
   14000b01e:	add    BYTE PTR [rax+0x0],al
   14000b024:	add    BYTE PTR [rax],al
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	add    al,0x0
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	add    BYTE PTR [rax],al
   14000b02e:	add    DWORD PTR [rax],eax
   14000b030:	add    DWORD PTR [rax],eax
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	push   rax
   14000b035:	add    BYTE PTR [rax],al
   14000b037:	add    BYTE PTR [rax],0x0
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	add    BYTE PTR [rax],al
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	add    al,0x0
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	add    BYTE PTR [rax],al
   14000b046:	add    DWORD PTR [rax],eax
   14000b048:	add    DWORD PTR [rax],eax
   14000b04a:	add    BYTE PTR [rax],al
   14000b04c:	push   0x800000
   14000b051:	add    BYTE PTR [rax],al
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	add    BYTE PTR [rax],al
   14000b057:	add    BYTE PTR [rax+rax*1],al
   14000b05a:	add    BYTE PTR [rax],al
   14000b05c:	add    BYTE PTR [rax],al
   14000b05e:	add    DWORD PTR [rax],eax
   14000b060:	or     DWORD PTR [rax+rax*1],eax
   14000b063:	add    BYTE PTR [rax+0x0],al
   14000b069:	add    BYTE PTR [rax],al
   14000b06b:	add    BYTE PTR [rax],al
   14000b06d:	add    BYTE PTR [rax],al
   14000b06f:	add    BYTE PTR [rax+rax*1],al
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	add    BYTE PTR [rax],al
   14000b076:	add    DWORD PTR [rax],eax
   14000b078:	or     DWORD PTR [rax+rax*1],eax
   14000b07b:	add    BYTE PTR [rax-0x60000000],dl
   14000b081:	mov    al,0x0
   14000b083:	add    dh,bl
   14000b085:	add    eax,0x4e40000
   14000b08a:	add    BYTE PTR [rax],al
   14000b08c:	add    BYTE PTR [rax],al
   14000b08e:	add    BYTE PTR [rax],al
   14000b090:	xor    BYTE PTR [rsi+0x2de0000],0x0
   14000b097:	add    ah,ah
   14000b099:	add    al,0x0
   14000b09b:	add    BYTE PTR [rax],al
   14000b09d:	add    BYTE PTR [rax],al
   14000b09f:	add    dh,bl
   14000b0a1:	add    eax,0x34
   14000b0a6:	push   rsi
   14000b0a7:	add    BYTE PTR [rbx+0x0],dl
   14000b0aa:	pop    rdi
   14000b0ab:	add    BYTE PTR [rsi+0x0],dl
   14000b0ae:	add    BYTE PTR [r10+0x0],r10b
   14000b0b2:	push   rbx
   14000b0b3:	add    BYTE PTR [rcx+0x0],cl
   14000b0b6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000b0ba:	pop    rdi
   14000b0bb:	add    BYTE PTR [rcx+0x0],cl
   14000b0be:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000b0c2:	rex.WRXB add BYTE PTR [r8],r8b
   14000b0c5:	add    BYTE PTR [rax],al
   14000b0c7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000b0cd:	add    BYTE PTR [rcx],al
   14000b0cf:	add    BYTE PTR [rax],al
   14000b0d1:	add    BYTE PTR [rcx],dl
   14000b0d3:	add    bl,ch
   14000b0d5:	add    DWORD PTR [rax],eax
   14000b0d7:	add    BYTE PTR [rax],al
   14000b0d9:	add    BYTE PTR [rcx],dl
   14000b0db:	add    bl,ch
   14000b0dd:	add    DWORD PTR [rax],eax
   14000b0df:	add    BYTE PTR [rdi],bh
   14000b0e1:	add    BYTE PTR [rax],al
   14000b0e3:	add    BYTE PTR [rax],al
   14000b0e5:	add    BYTE PTR [rax],al
   14000b0e7:	add    BYTE PTR [rax+rax*1],al
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	add    DWORD PTR [rax],eax
	...
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	add    BYTE PTR [rax],r8b
   14000b0ff:	add    BYTE PTR [rcx],al
   14000b101:	add    BYTE PTR [rsi+0x0],dl
   14000b104:	(bad)  
   14000b105:	add    BYTE PTR [rdx+0x0],dh
   14000b108:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b10c:	ins    BYTE PTR es:[rdi],dx
   14000b10d:	add    BYTE PTR [rbp+0x0],ah
   14000b110:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b114:	data16 add BYTE PTR [rdi+0x0],ch
   14000b118:	add    BYTE PTR [rax],al
   14000b11a:	add    BYTE PTR [rax],al
   14000b11c:	and    al,0x0
   14000b11e:	add    al,0x0
   14000b120:	add    BYTE PTR [rax],al
   14000b122:	push   rsp
   14000b123:	add    BYTE PTR [rdx+0x0],dh
   14000b126:	(bad)  
   14000b127:	add    BYTE PTR [rsi+0x0],ch
   14000b12a:	jae    0x14000b12c
   14000b12c:	ins    BYTE PTR es:[rdi],dx
   14000b12d:	add    BYTE PTR [rcx+0x0],ah
   14000b130:	je     0x14000b132
   14000b132:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b138:	add    BYTE PTR [rax],al
   14000b13a:	add    BYTE PTR [rax],al
   14000b13c:	or     DWORD PTR [rsp+riz*8],eax
   14000b13f:	add    al,0x3e
   14000b141:	add    eax,0x10000
   14000b146:	push   rbx
   14000b147:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b14b:	add    BYTE PTR [rcx+0x0],ch
   14000b14e:	outs   dx,BYTE PTR ds:[rsi]
   14000b14f:	add    BYTE PTR [rdi+0x0],ah
   14000b152:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b156:	ins    BYTE PTR es:[rdi],dx
   14000b157:	add    BYTE PTR [rbp+0x0],ah
   14000b15a:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b15e:	data16 add BYTE PTR [rdi+0x0],ch
   14000b162:	add    BYTE PTR [rax],al
   14000b164:	sbb    al,BYTE PTR [rip+0x10000]        # 0x14001b16a
   14000b16a:	xor    BYTE PTR [rax],al
   14000b16c:	xor    al,0x0
   14000b16e:	xor    BYTE PTR [rax],al
   14000b170:	cmp    DWORD PTR [rax],eax
   14000b172:	xor    BYTE PTR [rax],al
   14000b174:	xor    al,0x0
   14000b176:	add    BYTE PTR [r8+rax*1],r14b
   14000b17a:	add    BYTE PTR [rax],al
   14000b17c:	rex.WRX add BYTE PTR [rbx],r11b
   14000b17f:	add    BYTE PTR [rcx],al
   14000b181:	add    BYTE PTR [rdx+0x0],al
   14000b184:	jne    0x14000b186
   14000b186:	imul   eax,DWORD PTR [rax],0x74006c
   14000b18c:	and    BYTE PTR [rax],al
   14000b18e:	outs   dx,DWORD PTR ds:[rsi]
   14000b18f:	add    BYTE PTR [rsi+0x0],ch
   14000b192:	add    BYTE PTR [rax],al
   14000b194:	rex.RX add BYTE PTR [rdx+0x0],r14b
   14000b198:	imul   eax,DWORD PTR [rax],0x300020
   14000b19e:	xor    eax,DWORD PTR [rax]
   14000b1a0:	(bad)  
   14000b1a1:	add    BYTE PTR [rcx],dh
   14000b1a3:	add    BYTE PTR [rax+rax*1],dh
   14000b1a6:	(bad)  
   14000b1a7:	add    BYTE PTR [rdx],dh
   14000b1a9:	add    BYTE PTR [rax],dh
   14000b1ab:	add    BYTE PTR [rcx],dh
   14000b1ad:	add    BYTE PTR [rax+rax*1],dh
   14000b1b0:	and    BYTE PTR [rax],al
   14000b1b2:	xor    al,BYTE PTR [rax]
   14000b1b4:	xor    eax,DWORD PTR [rax]
   14000b1b6:	cmp    al,BYTE PTR [rax]
   14000b1b8:	xor    DWORD PTR [rax],eax
   14000b1ba:	xor    al,BYTE PTR [rax]
   14000b1bc:	cmp    al,BYTE PTR [rax]
   14000b1be:	xor    BYTE PTR [rax],al
   14000b1c0:	xor    BYTE PTR [rax],al
   14000b1c2:	add    BYTE PTR cs:[rip+0x3100],dh        # 0x14000e2c9
   14000b1c9:	add    BYTE PTR [rax],al
   14000b1cb:	add    BYTE PTR [rax+rax*1+0x12],al
   14000b1cf:	add    BYTE PTR [rcx],al
   14000b1d1:	add    BYTE PTR [rbx+0x0],al
   14000b1d4:	outs   dx,DWORD PTR ds:[rsi]
   14000b1d5:	add    BYTE PTR [rbp+0x0],ch
   14000b1d8:	jo     0x14000b1da
   14000b1da:	(bad)  
   14000b1db:	add    BYTE PTR [rsi+0x0],ch
   14000b1de:	jns    0x14000b1e0
   14000b1e0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b1e4:	ins    DWORD PTR es:[rdi],dx
   14000b1e5:	add    BYTE PTR [rbp+0x0],ah
   14000b1e8:	add    BYTE PTR [rax],al
   14000b1ea:	add    BYTE PTR [rax],al
   14000b1ec:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b1f0:	jb     0x14000b1f2
   14000b1f2:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000b1f7:	add    BYTE PTR [rbx+0x0],al
   14000b1fa:	outs   dx,DWORD PTR ds:[rsi]
   14000b1fb:	add    BYTE PTR [rdx+0x0],dh
   14000b1fe:	jo     0x14000b200
   14000b200:	outs   dx,DWORD PTR ds:[rsi]
   14000b201:	add    BYTE PTR [rdx+0x0],dh
   14000b204:	(bad)  
   14000b205:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b209:	add    BYTE PTR [rdi+0x0],ch
   14000b20c:	outs   dx,BYTE PTR ds:[rsi]
   14000b20d:	add    BYTE PTR [rax],al
   14000b20f:	add    BYTE PTR [rsi+0x0],ch
   14000b212:	and    eax,DWORD PTR [rax]
   14000b214:	add    DWORD PTR [rax],eax
   14000b216:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b21a:	ins    BYTE PTR es:[rdi],dx
   14000b21b:	add    BYTE PTR [rbp+0x0],ah
   14000b21e:	add    BYTE PTR [rbp+0x0],r12b
   14000b222:	jae    0x14000b224
   14000b224:	movsxd eax,DWORD PTR [rax]
   14000b226:	jb     0x14000b228
   14000b228:	imul   eax,DWORD PTR [rax],0x740070
   14000b22e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b234:	add    BYTE PTR [rax],al
   14000b236:	add    BYTE PTR [rax],al
   14000b238:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b23c:	jb     0x14000b23e
   14000b23e:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000b243:	add    BYTE PTR [rax+0x0],dl
   14000b246:	push   rbx
   14000b247:	add    BYTE PTR [rax],ah
   14000b249:	add    BYTE PTR [rax+rax*1+0x6f],dh
   14000b24d:	add    BYTE PTR [rax],ah
   14000b24f:	add    BYTE PTR [rax+0x0],dl
   14000b252:	add    BYTE PTR [rsi+0x0],r8b
   14000b256:	and    BYTE PTR [rax],al
   14000b258:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b25c:	outs   dx,BYTE PTR ds:[rsi]
   14000b25d:	add    BYTE PTR [rsi+0x0],dh
   14000b260:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b264:	je     0x14000b266
   14000b266:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b26a:	and    BYTE PTR [rax],al
   14000b26c:	sub    BYTE PTR [rax],al
   14000b26e:	add    BYTE PTR ss:[rax+rax*1],dh
   14000b272:	sub    eax,0x69004200
   14000b277:	add    BYTE PTR [rax+rax*1+0x29],dh
   14000b27b:	add    BYTE PTR [rax],al
   14000b27d:	add    BYTE PTR [rax],al
   14000b27f:	add    BYTE PTR [rsi],dh
   14000b281:	add    BYTE PTR [rbx],cl
   14000b283:	add    BYTE PTR [rcx],al
   14000b285:	add    BYTE PTR [rsi+0x0],al
   14000b288:	imul   eax,DWORD PTR [rax],0x65006c
   14000b28e:	push   rsi
   14000b28f:	add    BYTE PTR [rbp+0x0],ah
   14000b292:	jb     0x14000b294
   14000b294:	jae    0x14000b296
   14000b296:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b29c:	add    BYTE PTR [rax],al
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	xor    DWORD PTR [rax],eax
   14000b2a2:	(bad)  
   14000b2a3:	add    BYTE PTR [rsi],ch
   14000b2a5:	add    BYTE PTR [rax],dh
   14000b2a7:	add    BYTE PTR [rsi],ch
   14000b2a9:	add    BYTE PTR [rax],dh
   14000b2ab:	add    BYTE PTR [rsi],ch
   14000b2ad:	add    BYTE PTR [rax+rax*1],dh
   14000b2b0:	cmp    DWORD PTR [rax],eax
   14000b2b2:	xor    DWORD PTR [rax],eax
   14000b2b4:	add    BYTE PTR [rax],al
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	cmp    BYTE PTR [rax],al
   14000b2ba:	or     al,0x0
   14000b2bc:	add    DWORD PTR [rax],eax
   14000b2be:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b2c2:	je     0x14000b2c4
   14000b2c4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b2c8:	outs   dx,BYTE PTR ds:[rsi]
   14000b2c9:	add    BYTE PTR [rcx+0x0],ah
   14000b2cc:	ins    BYTE PTR es:[rdi],dx
   14000b2cd:	add    BYTE PTR [rsi+0x0],cl
   14000b2d0:	(bad)  
   14000b2d1:	add    BYTE PTR [rbp+0x0],ch
   14000b2d4:	add    BYTE PTR gs:[rax],al
   14000b2d7:	add    BYTE PTR [rbx+0x0],al
   14000b2da:	outs   dx,DWORD PTR ds:[rsi]
   14000b2db:	add    BYTE PTR [rdx+0x0],dh
   14000b2de:	add    BYTE PTR gs:[rax+rax*1+0x50],ch
   14000b2e3:	add    BYTE PTR [rbx+0x0],dl
   14000b2e6:	xor    al,BYTE PTR [rax]
   14000b2e8:	push   rax
   14000b2e9:	add    BYTE PTR [rax+rax*1+0x46],al
   14000b2ed:	add    BYTE PTR [rax],al
   14000b2ef:	add    BYTE PTR [rax+rax*1+0x24],ch
   14000b2f3:	add    BYTE PTR [rcx],al
   14000b2f5:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b2f9:	add    BYTE PTR [rdi+0x0],ah
   14000b2fc:	(bad)  
   14000b2fd:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000b301:	add    BYTE PTR [rdi+0x0],ch
   14000b304:	jo     0x14000b306
   14000b306:	jns    0x14000b308
   14000b308:	jb     0x14000b30a
   14000b30a:	imul   eax,DWORD PTR [rax],0x680067
   14000b310:	je     0x14000b312
   14000b312:	add    BYTE PTR [rax],al
   14000b314:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b318:	jo     0x14000b31a
   14000b31a:	jns    0x14000b31c
   14000b31c:	jb     0x14000b31e
   14000b31e:	imul   eax,DWORD PTR [rax],0x680067
   14000b324:	je     0x14000b326
   14000b326:	sub    BYTE PTR [rax],al
   14000b328:	movsxd eax,DWORD PTR [rax]
   14000b32a:	sub    DWORD PTR [rax],eax
   14000b32c:	and    BYTE PTR [rax],al
   14000b32e:	xor    al,BYTE PTR [rax]
   14000b330:	xor    BYTE PTR [rax],al
   14000b332:	xor    DWORD PTR [rax],eax
   14000b334:	xor    al,0x0
   14000b336:	and    BYTE PTR [rax],al
   14000b338:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b33c:	jb     0x14000b33e
   14000b33e:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000b343:	add    BYTE PTR [rbx+0x0],al
   14000b346:	outs   dx,DWORD PTR ds:[rsi]
   14000b347:	add    BYTE PTR [rdx+0x0],dh
   14000b34a:	jo     0x14000b34c
   14000b34c:	outs   dx,DWORD PTR ds:[rsi]
   14000b34d:	add    BYTE PTR [rdx+0x0],dh
   14000b350:	(bad)  
   14000b351:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b355:	add    BYTE PTR [rdi+0x0],ch
   14000b358:	outs   dx,BYTE PTR ds:[rsi]
   14000b359:	add    BYTE PTR [rax],al
   14000b35b:	add    dh,ch
   14000b35d:	add    ebx,esp
   14000b35f:	add    BYTE PTR [rcx],al
   14000b361:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b365:	add    BYTE PTR [rdi+0x0],ah
   14000b368:	(bad)  
   14000b369:	add    BYTE PTR [rax+rax*1+0x54],ch
   14000b36d:	add    BYTE PTR [rdx+0x0],dh
   14000b370:	(bad)  
   14000b371:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000b375:	add    BYTE PTR [rbp+0x0],ch
   14000b378:	(bad)  
   14000b379:	add    BYTE PTR [rdx+0x0],dh
   14000b37c:	imul   eax,DWORD PTR [rax],0x73
   14000b37f:	add    BYTE PTR [rax],al
   14000b381:	add    BYTE PTR [rax],al
   14000b383:	add    BYTE PTR [rbx+0x0],al
   14000b386:	outs   dx,DWORD PTR ds:[rsi]
   14000b387:	add    BYTE PTR [rdx+0x0],dh
   14000b38a:	add    BYTE PTR gs:[rax+rax*1+0x2c],ch
   14000b38f:	add    BYTE PTR [rax],ah
   14000b391:	add    BYTE PTR [rbx+0x0],al
   14000b394:	outs   dx,DWORD PTR ds:[rsi]
   14000b395:	add    BYTE PTR [rdx+0x0],dh
   14000b398:	add    BYTE PTR gs:[rax+rax*1+0x44],ch
   14000b39d:	add    BYTE PTR [rdx+0x0],dl
   14000b3a0:	add    BYTE PTR [r15+0x0],dl
   14000b3a4:	sub    al,0x0
   14000b3a6:	and    BYTE PTR [rax],al
   14000b3a8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b3ac:	jb     0x14000b3ae
   14000b3ae:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000b3b3:	add    BYTE PTR [rax+rax*1+0x45],al
   14000b3b7:	add    BYTE PTR [rbx+0x0],dl
   14000b3ba:	rex.WB add BYTE PTR [r15+0x0],al
   14000b3be:	rex.WRX add BYTE PTR [rbp+0x0],r8b
   14000b3c2:	push   rdx
   14000b3c3:	add    BYTE PTR [rax+rax*1],ch
   14000b3c6:	and    BYTE PTR [rax],al
   14000b3c8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b3cc:	jb     0x14000b3ce
   14000b3ce:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000b3d3:	add    BYTE PTR [rdx+0x0],dl
   14000b3d6:	add    BYTE PTR cs:[rcx+0x0],al
   14000b3da:	add    BYTE PTR cs:[rsi+0x0],dl
   14000b3de:	add    BYTE PTR cs:[rbp+0x0],al
   14000b3e2:	add    BYTE PTR cs:[rax+rax*1],ch
   14000b3e6:	and    BYTE PTR [rax],al
   14000b3e8:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b3ec:	jb     0x14000b3ee
   14000b3ee:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000b3f3:	add    BYTE PTR [rax+0x0],dl
   14000b3f6:	rex.W add BYTE PTR [rdi+0x0],cl
   14000b3fa:	push   rsp
   14000b3fb:	add    BYTE PTR [rdi+0x0],cl
   14000b3fe:	sub    eax,0x41005000
   14000b403:	add    BYTE PTR [rcx+0x0],cl
   14000b406:	rex.WRX add BYTE PTR [rax+r8*1+0x2c],r10b
   14000b40b:	add    BYTE PTR [rax],ah
   14000b40d:	add    BYTE PTR [rbx+0x0],al
   14000b410:	outs   dx,DWORD PTR ds:[rsi]
   14000b411:	add    BYTE PTR [rdx+0x0],dh
   14000b414:	add    BYTE PTR gs:[rax+rax*1+0x54],ch
   14000b419:	add    BYTE PTR [rdx+0x0],dl
   14000b41c:	add    BYTE PTR [r11+0x0],al
   14000b420:	add    BYTE PTR [r8],r12b
   14000b423:	add    BYTE PTR [rcx+0x0],ah
   14000b426:	outs   dx,BYTE PTR ds:[rsi]
   14000b427:	add    BYTE PTR [rax+rax*1+0x20],ah
   14000b42b:	add    BYTE PTR [rbx+0x0],al
   14000b42e:	outs   dx,DWORD PTR ds:[rsi]
   14000b42f:	add    BYTE PTR [rdx+0x0],dh
   14000b432:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000b437:	add    BYTE PTR [rbx+0x0],al
   14000b43a:	add    BYTE PTR [r8+0x0],dl
   14000b43e:	push   rsp
   14000b43f:	add    BYTE PTR [rbp+0x0],dl
   14000b442:	push   rdx
   14000b443:	add    BYTE PTR [rbp+0x0],al
   14000b446:	and    BYTE PTR [rax],al
   14000b448:	(bad)  
   14000b449:	add    BYTE PTR [rdx+0x0],dh
   14000b44c:	add    BYTE PTR gs:[rax],ah
   14000b44f:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b453:	add    BYTE PTR [rcx+0x0],ah
   14000b456:	add    BYTE PTR fs:[rbp+0x0],ah
   14000b45a:	ins    DWORD PTR es:[rdi],dx
   14000b45b:	add    BYTE PTR [rcx+0x0],ah
   14000b45e:	jb     0x14000b460
   14000b460:	imul   eax,DWORD PTR [rax],0x73
   14000b463:	add    BYTE PTR [rax],ah
   14000b465:	add    BYTE PTR [rdi+0x0],ch
   14000b468:	jb     0x14000b46a
   14000b46a:	and    BYTE PTR [rax],al
   14000b46c:	jb     0x14000b46e
   14000b46e:	add    BYTE PTR gs:[rdi+0x0],ah
   14000b472:	imul   eax,DWORD PTR [rax],0x740073
   14000b478:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b47c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14000b481:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b485:	add    BYTE PTR [rcx+0x0],ah
   14000b488:	add    BYTE PTR fs:[rbp+0x0],ah
   14000b48c:	ins    DWORD PTR es:[rdi],dx
   14000b48d:	add    BYTE PTR [rcx+0x0],ah
   14000b490:	jb     0x14000b492
   14000b492:	imul   eax,DWORD PTR [rax],0x73
   14000b495:	add    BYTE PTR [rax],ah
   14000b497:	add    BYTE PTR [rdi+0x0],ch
   14000b49a:	data16 add BYTE PTR [rax],ah
   14000b49d:	add    BYTE PTR [rbx+0x0],al
   14000b4a0:	outs   dx,DWORD PTR ds:[rsi]
   14000b4a1:	add    BYTE PTR [rdx+0x0],dh
   14000b4a4:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000b4a9:	add    BYTE PTR [rbx+0x0],al
   14000b4ac:	outs   dx,DWORD PTR ds:[rsi]
   14000b4ad:	add    BYTE PTR [rdx+0x0],dh
   14000b4b0:	jo     0x14000b4b2
   14000b4b2:	outs   dx,DWORD PTR ds:[rsi]
   14000b4b3:	add    BYTE PTR [rdx+0x0],dh
   14000b4b6:	(bad)  
   14000b4b7:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b4bb:	add    BYTE PTR [rdi+0x0],ch
   14000b4be:	outs   dx,BYTE PTR ds:[rsi]
   14000b4bf:	add    BYTE PTR [rax],ah
   14000b4c1:	add    BYTE PTR [rcx+0x0],ah
   14000b4c4:	outs   dx,BYTE PTR ds:[rsi]
   14000b4c5:	add    BYTE PTR [rax+rax*1+0x2f],ah
   14000b4c9:	add    BYTE PTR [rdi+0x0],ch
   14000b4cc:	jb     0x14000b4ce
   14000b4ce:	and    BYTE PTR [rax],al
   14000b4d0:	imul   eax,DWORD PTR [rax],0x730074
   14000b4d6:	and    BYTE PTR [rax],al
   14000b4d8:	jae    0x14000b4da
   14000b4da:	jne    0x14000b4dc
   14000b4dc:	(bad)  
   14000b4dd:	add    BYTE PTR [rbx+0x0],dh
   14000b4e0:	imul   eax,DWORD PTR [rax],0x690064
   14000b4e6:	(bad)  
   14000b4e7:	add    BYTE PTR [rdx+0x0],dh
   14000b4ea:	imul   eax,DWORD PTR [rax],0x730065
   14000b4f0:	and    BYTE PTR [rax],al
   14000b4f2:	imul   eax,DWORD PTR [rax],0x20006e
   14000b4f8:	rex.XB add BYTE PTR [r9+0x0],spl
   14000b4fc:	outs   dx,BYTE PTR ds:[rsi]
   14000b4fd:	add    BYTE PTR [rcx+0x0],ah
   14000b500:	add    BYTE PTR fs:[rcx+0x0],ah
   14000b504:	sub    al,0x0
   14000b506:	and    BYTE PTR [rax],al
   14000b508:	je     0x14000b50a
   14000b50a:	push   0x20006500
   14000b50f:	add    BYTE PTR [rbp+0x0],dl
   14000b512:	add    BYTE PTR cs:[rbx+0x0],dl
   14000b516:	add    BYTE PTR cs:[rax],ah
   14000b519:	add    BYTE PTR [rcx+0x0],ah
   14000b51c:	outs   dx,BYTE PTR ds:[rsi]
   14000b51d:	add    BYTE PTR [rax+rax*1+0x2f],ah
   14000b521:	add    BYTE PTR [rdi+0x0],ch
   14000b524:	jb     0x14000b526
   14000b526:	and    BYTE PTR [rax],al
   14000b528:	outs   dx,DWORD PTR ds:[rsi]
   14000b529:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000b52d:	add    BYTE PTR [rbp+0x0],ah
   14000b530:	jb     0x14000b532
   14000b532:	and    BYTE PTR [rax],al
   14000b534:	movsxd eax,DWORD PTR [rax]
   14000b536:	outs   dx,DWORD PTR ds:[rsi]
   14000b537:	add    BYTE PTR [rbp+0x0],dh
   14000b53a:	outs   dx,BYTE PTR ds:[rsi]
   14000b53b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b53f:	add    BYTE PTR [rcx+0x0],ch
   14000b542:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b546:	add    BYTE PTR cs:[rax],al
   14000b549:	add    BYTE PTR [rax],al
   14000b54b:	add    BYTE PTR [rax+0x0],cl
   14000b54e:	adc    BYTE PTR [rax],al
   14000b550:	add    DWORD PTR [rax],eax
   14000b552:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000b556:	imul   eax,DWORD PTR [rax],0x690067
   14000b55c:	outs   dx,BYTE PTR ds:[rsi]
   14000b55d:	add    BYTE PTR [rcx+0x0],ah
   14000b560:	ins    BYTE PTR es:[rdi],dx
   14000b561:	add    BYTE PTR [rsi+0x0],al
   14000b564:	imul   eax,DWORD PTR [rax],0x65006c
   14000b56a:	outs   dx,BYTE PTR ds:[rsi]
   14000b56b:	add    BYTE PTR [rcx+0x0],ah
   14000b56e:	ins    DWORD PTR es:[rdi],dx
   14000b56f:	add    BYTE PTR [rbp+0x0],ah
   14000b572:	add    BYTE PTR [rax],al
   14000b574:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b578:	jb     0x14000b57a
   14000b57a:	add    BYTE PTR gs:[rax+rax*1+0x50],ch
   14000b57f:	add    BYTE PTR [rbx+0x0],dl
   14000b582:	xor    al,BYTE PTR [rax]
   14000b584:	push   rax
   14000b585:	add    BYTE PTR [rax+rax*1+0x46],al
   14000b589:	add    BYTE PTR [rsi],ch
   14000b58b:	add    BYTE PTR [rbp+0x0],ah
   14000b58e:	js     0x14000b590
   14000b590:	add    BYTE PTR gs:[rax],al
   14000b593:	add    BYTE PTR [rax+0x0],bl
   14000b596:	sbb    al,0x0
   14000b598:	add    DWORD PTR [rax],eax
   14000b59a:	push   rax
   14000b59b:	add    BYTE PTR [rdx+0x0],dh
   14000b59e:	outs   dx,DWORD PTR ds:[rsi]
   14000b59f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b5a3:	add    BYTE PTR [rbx+0x0],ah
   14000b5a6:	je     0x14000b5a8
   14000b5a8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b5ac:	ins    DWORD PTR es:[rdi],dx
   14000b5ad:	add    BYTE PTR [rbp+0x0],ah
   14000b5b0:	add    BYTE PTR [rax],al
   14000b5b2:	add    BYTE PTR [rax],al
   14000b5b4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b5b8:	jb     0x14000b5ba
   14000b5ba:	add    BYTE PTR gs:[rax+rax*1+0x20],ch
   14000b5bf:	add    BYTE PTR [rdi+0x0],al
   14000b5c2:	jb     0x14000b5c4
   14000b5c4:	(bad)  
   14000b5c5:	add    BYTE PTR [rax+0x0],dh
   14000b5c8:	push   0x63006900
   14000b5cd:	add    BYTE PTR [rbx+0x0],dh
   14000b5d0:	and    BYTE PTR [rax],al
   14000b5d2:	add    BYTE PTR [r8+0x0],sil
   14000b5d6:	jo     0x14000b5d8
   14000b5d8:	ins    BYTE PTR es:[rdi],dx
   14000b5d9:	add    BYTE PTR [rcx+0x0],ch
   14000b5dc:	movsxd eax,DWORD PTR [rax]
   14000b5de:	(bad)  
   14000b5df:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b5e3:	add    BYTE PTR [rdi+0x0],ch
   14000b5e6:	outs   dx,BYTE PTR ds:[rsi]
   14000b5e7:	add    BYTE PTR [rbx+0x0],dh
   14000b5ea:	add    BYTE PTR [rax],al
   14000b5ec:	cmp    al,BYTE PTR [rax]
   14000b5ee:	or     eax,DWORD PTR [rax]
   14000b5f0:	add    DWORD PTR [rax],eax
   14000b5f2:	push   rax
   14000b5f3:	add    BYTE PTR [rdx+0x0],dh
   14000b5f6:	outs   dx,DWORD PTR ds:[rsi]
   14000b5f7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b5fb:	add    BYTE PTR [rbx+0x0],ah
   14000b5fe:	je     0x14000b600
   14000b600:	push   rsi
   14000b601:	add    BYTE PTR [rbp+0x0],ah
   14000b604:	jb     0x14000b606
   14000b606:	jae    0x14000b608
   14000b608:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b60e:	add    BYTE PTR [rax],al
   14000b610:	xor    DWORD PTR [rax],eax
   14000b612:	(bad)  
   14000b613:	add    BYTE PTR [rsi],ch
   14000b615:	add    BYTE PTR [rax],dh
   14000b617:	add    BYTE PTR [rsi],ch
   14000b619:	add    BYTE PTR [rax],dh
   14000b61b:	add    BYTE PTR [rsi],ch
   14000b61d:	add    BYTE PTR [rax+rax*1],dh
   14000b620:	cmp    DWORD PTR [rax],eax
   14000b622:	xor    DWORD PTR [rax],eax
   14000b624:	add    BYTE PTR [rax],al
   14000b626:	add    BYTE PTR [rax],al
   14000b628:	xor    BYTE PTR [rax],al
   14000b62a:	add    al,BYTE PTR [rax]
   14000b62c:	add    DWORD PTR [rax],eax
   14000b62e:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000b632:	outs   dx,BYTE PTR ds:[rsi]
   14000b633:	add    BYTE PTR [rdi+0x0],ah
   14000b636:	jne    0x14000b638
   14000b638:	(bad)  
   14000b639:	add    BYTE PTR [rdi+0x0],ah
   14000b63c:	add    BYTE PTR gs:[rax],ah
   14000b63f:	add    BYTE PTR [rdx+0x0],al
   14000b642:	jne    0x14000b644
   14000b644:	imul   eax,DWORD PTR [rax],0x64006c
   14000b64a:	and    BYTE PTR [rax],al
   14000b64c:	rex.WB add BYTE PTR [r8+rax*1+0x0],al
   14000b651:	add    BYTE PTR [rax],al
   14000b653:	add    BYTE PTR [rax],dh
   14000b655:	add    BYTE PTR [rax],al
   14000b657:	add    BYTE PTR [rsi],ah
   14000b659:	add    BYTE PTR [rdi],al
   14000b65b:	add    BYTE PTR [rcx],al
   14000b65d:	add    BYTE PTR [rax+0x0],dl
   14000b660:	ins    BYTE PTR es:[rdi],dx
   14000b661:	add    BYTE PTR [rcx+0x0],ah
   14000b664:	je     0x14000b666
   14000b666:	data16 add BYTE PTR [rdi+0x0],ch
   14000b66a:	jb     0x14000b66c
   14000b66c:	ins    DWORD PTR es:[rdi],dx
   14000b66d:	add    BYTE PTR [rax],al
   14000b66f:	add    BYTE PTR [rsi],dh
   14000b671:	add    BYTE PTR [rax+rax*1],dh
   14000b674:	sub    eax,0x69004200
   14000b679:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000b67d:	add    BYTE PTR [rax+0x41],dl
   14000b680:	cmp    al,0x61
   14000b682:	jae    0x14000b6f7
   14000b684:	gs ins DWORD PTR es:[rdi],dx
   14000b686:	(bad)  
   14000b687:	ins    BYTE PTR es:[rdi],dx
   14000b688:	jns    0x14000b6aa
   14000b68a:	js     0x14000b6f9
   14000b68c:	ins    BYTE PTR es:[rdi],dx
   14000b68d:	outs   dx,BYTE PTR ds:[rsi]
   14000b68e:	jae    0x14000b6cd
   14000b690:	and    dh,BYTE PTR [rbp+0x72]
   14000b693:	outs   dx,BYTE PTR ds:[rsi]
   14000b694:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b697:	push   0x73616d65
   14000b69c:	sub    eax,0x7263696d
   14000b6a1:	outs   dx,DWORD PTR ds:[rsi]
   14000b6a2:	jae    0x14000b713
   14000b6a4:	data16 je 0x14000b6d4
   14000b6a7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b6aa:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b6ad:	ins    DWORD PTR es:[rdi],dx
   14000b6ae:	cs jbe 0x14000b6e2
   14000b6b1:	and    ah,BYTE PTR [rax]
   14000b6b3:	ins    DWORD PTR es:[rdi],dx
   14000b6b4:	(bad)  
   14000b6b5:	outs   dx,BYTE PTR ds:[rsi]
   14000b6b6:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000b6bd:	jb     0x14000b732
   14000b6bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b6c6:	xor    BYTE PTR [rdx],ah
   14000b6c8:	ds cmp al,0x64
   14000b6cb:	gs jo  0x14000b733
   14000b6ce:	outs   dx,BYTE PTR ds:[rsi]
   14000b6cf:	fs outs dx,BYTE PTR gs:[rsi]
   14000b6d2:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000b6d5:	cmp    al,0x64
   14000b6d7:	gs jo  0x14000b73f
   14000b6da:	outs   dx,BYTE PTR ds:[rsi]
   14000b6db:	fs outs dx,BYTE PTR gs:[rsi]
   14000b6de:	je     0x14000b721
   14000b6e0:	jae    0x14000b755
   14000b6e2:	gs ins DWORD PTR es:[rdi],dx
   14000b6e4:	(bad)  
   14000b6e5:	ins    BYTE PTR es:[rdi],dx
   14000b6e6:	jns    0x14000b726
   14000b6e8:	cmp    al,0x61
   14000b6ea:	jae    0x14000b75f
   14000b6ec:	gs ins DWORD PTR es:[rdi],dx
   14000b6ee:	(bad)  
   14000b6ef:	ins    BYTE PTR es:[rdi],dx
   14000b6f0:	jns    0x14000b73b
   14000b6f2:	fs outs dx,BYTE PTR gs:[rsi]
   14000b6f5:	je     0x14000b760
   14000b6f7:	je     0x14000b772
   14000b6f9:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000b6fd:	gs cmp eax,0x6e697722
   14000b703:	xor    esi,DWORD PTR [rdx]
   14000b705:	and    ah,BYTE PTR [rax]
   14000b707:	outs   dx,BYTE PTR ds:[rsi]
   14000b708:	(bad)  
   14000b709:	ins    DWORD PTR es:[rdi],dx
   14000b70a:	gs cmp eax,0x63694d22
   14000b710:	jb     0x14000b781
   14000b712:	jae    0x14000b783
   14000b714:	data16 je 0x14000b745
   14000b717:	push   rdi
   14000b718:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000b71f:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b721:	ins    DWORD PTR es:[rdi],dx
   14000b722:	ins    DWORD PTR es:[rdi],dx
   14000b723:	outs   dx,DWORD PTR ds:[rsi]
   14000b724:	outs   dx,BYTE PTR ds:[rsi]
   14000b725:	sub    eax,0x746e6f43
   14000b72a:	jb     0x14000b79b
   14000b72c:	ins    BYTE PTR es:[rdi],dx
   14000b72d:	jae    0x14000b751
   14000b72f:	and    BYTE PTR [rsi+0x65],dh
   14000b732:	jb     0x14000b7a7
   14000b734:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000b73b:	xor    BYTE PTR [rsi],ch
   14000b73d:	xor    BYTE PTR [rsi],ch
   14000b73f:	xor    BYTE PTR [rdx],ah
   14000b741:	and    BYTE PTR [rax+0x72],dh
   14000b744:	outs   dx,DWORD PTR ds:[rsi]
   14000b745:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b748:	jae    0x14000b7b9
   14000b74a:	jb     0x14000b78d
   14000b74c:	jb     0x14000b7b1
   14000b74e:	push   0x63657469
   14000b753:	je     0x14000b7ca
   14000b755:	jb     0x14000b7bc
   14000b757:	cmp    eax,0x20222a22
   14000b75c:	jo     0x14000b7d3
   14000b75e:	(bad)  
   14000b75f:	ins    BYTE PTR es:[rdi],dx
   14000b760:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000b767:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000b76b:	and    dh,BYTE PTR [rsi]
   14000b76d:	xor    eax,0x36623539
   14000b772:	xor    al,0x31
   14000b774:	xor    al,0x34
   14000b776:	movsxd esp,DWORD PTR [rbx+0x66]
   14000b779:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000b77d:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000b781:	addr32 jne 0x14000b7e5
   14000b784:	addr32 gs cmp eax,0x3e222a22
   14000b78b:	cmp    al,0x2f
   14000b78d:	(bad)  
   14000b78e:	jae    0x14000b803
   14000b790:	gs ins DWORD PTR es:[rdi],dx
   14000b792:	(bad)  
   14000b793:	ins    BYTE PTR es:[rdi],dx
   14000b794:	jns    0x14000b7df
   14000b796:	fs outs dx,BYTE PTR gs:[rsi]
   14000b799:	je     0x14000b804
   14000b79b:	je     0x14000b816
   14000b79d:	ds cmp al,0x2f
   14000b7a0:	fs gs jo 0x14000b809
   14000b7a4:	outs   dx,BYTE PTR ds:[rsi]
   14000b7a5:	fs outs dx,BYTE PTR gs:[rsi]
   14000b7a8:	je     0x14000b7eb
   14000b7aa:	jae    0x14000b81f
   14000b7ac:	gs ins DWORD PTR es:[rdi],dx
   14000b7ae:	(bad)  
   14000b7af:	ins    BYTE PTR es:[rdi],dx
   14000b7b0:	jns    0x14000b7f0
   14000b7b2:	cmp    al,0x2f
   14000b7b4:	fs gs jo 0x14000b81d
   14000b7b8:	outs   dx,BYTE PTR ds:[rsi]
   14000b7b9:	fs outs dx,BYTE PTR gs:[rsi]
   14000b7bc:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000b7bf:	cmp    al,0x74
   14000b7c1:	jb     0x14000b838
   14000b7c3:	jae    0x14000b839
   14000b7c5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b7c7:	outs   dx,WORD PTR ds:[rsi]
   14000b7c9:	and    BYTE PTR [rax+0x6d],bh
   14000b7cc:	ins    BYTE PTR es:[rdi],dx
   14000b7cd:	outs   dx,BYTE PTR ds:[rsi]
   14000b7ce:	jae    0x14000b80d
   14000b7d0:	and    dh,BYTE PTR [rbp+0x72]
   14000b7d3:	outs   dx,BYTE PTR ds:[rsi]
   14000b7d4:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b7d7:	push   0x73616d65
   14000b7dc:	sub    eax,0x7263696d
   14000b7e1:	outs   dx,DWORD PTR ds:[rsi]
   14000b7e2:	jae    0x14000b853
   14000b7e4:	data16 je 0x14000b814
   14000b7e7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b7ea:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b7ed:	ins    DWORD PTR es:[rdi],dx
   14000b7ee:	cs jbe 0x14000b824
   14000b7f1:	and    bh,BYTE PTR [rsi]
   14000b7f3:	cmp    al,0x73
   14000b7f5:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000b7f9:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   14000b801:	jne    0x14000b868
   14000b803:	jae    0x14000b879
   14000b805:	gs fs push rax
   14000b808:	jb     0x14000b873
   14000b80a:	jbe    0x14000b875
   14000b80c:	ins    BYTE PTR es:[rdi],dx
   14000b80d:	gs addr32 gs jae 0x14000b850
   14000b812:	cmp    al,0x72
   14000b814:	gs jno 0x14000b88c
   14000b817:	gs jae 0x14000b88e
   14000b81a:	gs fs rex.RB js 0x14000b884
   14000b81f:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b822:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000b829:	ins    BYTE PTR es:[rdi],dx
   14000b82a:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000b82e:	gs ins BYTE PTR es:[rdi],dx
   14000b830:	cmp    eax,0x49736122
   14000b835:	outs   dx,BYTE PTR ds:[rsi]
   14000b836:	jbe    0x14000b8a7
   14000b838:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000b83c:	and    BYTE PTR [rbp+0x69],dh
   14000b83f:	movsxd esp,DWORD PTR [r11+0x65]
   14000b843:	jae    0x14000b8b8
   14000b845:	cmp    eax,0x6c616622
   14000b84a:	jae    0x14000b8b1
   14000b84c:	and    bh,BYTE PTR [rsi]
   14000b84e:	cmp    al,0x2f
   14000b850:	jb     0x14000b8b7
   14000b852:	jno    0x14000b8c9
   14000b854:	gs jae 0x14000b8cb
   14000b857:	gs fs rex.RB js 0x14000b8c1
   14000b85c:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b85f:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000b866:	ins    BYTE PTR es:[rdi],dx
   14000b867:	ds cmp al,0x2f
   14000b86a:	jb     0x14000b8d1
   14000b86c:	jno    0x14000b8e3
   14000b86e:	gs jae 0x14000b8e5
   14000b871:	gs fs push rax
   14000b874:	jb     0x14000b8df
   14000b876:	jbe    0x14000b8e1
   14000b878:	ins    BYTE PTR es:[rdi],dx
   14000b879:	gs addr32 gs jae 0x14000b8bc
   14000b87e:	cmp    al,0x2f
   14000b880:	jae    0x14000b8e7
   14000b882:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b885:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   14000b88d:	jne    0x14000b902
   14000b88f:	je     0x14000b8da
   14000b891:	outs   dx,BYTE PTR ds:[rsi]
   14000b892:	outs   dx,WORD PTR ds:[rsi]
   14000b894:	ds cmp al,0x61
   14000b897:	jo     0x14000b909
   14000b899:	ins    BYTE PTR es:[rdi],dx
   14000b89a:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b8a1:	and    BYTE PTR [rax+0x6d],bh
   14000b8a4:	ins    BYTE PTR es:[rdi],dx
   14000b8a5:	outs   dx,BYTE PTR ds:[rsi]
   14000b8a6:	jae    0x14000b8e5
   14000b8a8:	and    dh,BYTE PTR [rbp+0x72]
   14000b8ab:	outs   dx,BYTE PTR ds:[rsi]
   14000b8ac:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b8af:	push   0x73616d65
   14000b8b4:	sub    eax,0x7263696d
   14000b8b9:	outs   dx,DWORD PTR ds:[rsi]
   14000b8ba:	jae    0x14000b92b
   14000b8bc:	data16 je 0x14000b8ec
   14000b8bf:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b8c2:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b8c5:	ins    DWORD PTR es:[rdi],dx
   14000b8c6:	cs jbe 0x14000b8fc
   14000b8c9:	and    bh,BYTE PTR [rsi]
   14000b8cb:	cmp    al,0x77
   14000b8cd:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   14000b8d4:	gs je  0x14000b94b
   14000b8d7:	imul   ebp,DWORD PTR [rsi+0x67],0x643c3e73
   14000b8de:	jo     0x14000b949
   14000b8e0:	rex.B ja 0x14000b944
   14000b8e3:	jb     0x14000b94a
   14000b8e5:	and    BYTE PTR [rax+0x6d],bh
   14000b8e8:	ins    BYTE PTR es:[rdi],dx
   14000b8e9:	outs   dx,BYTE PTR ds:[rsi]
   14000b8ea:	jae    0x14000b929
   14000b8ec:	and    ch,BYTE PTR [rax+0x74]
   14000b8ef:	je     0x14000b961
   14000b8f1:	cmp    ch,BYTE PTR [rdi]
   14000b8f3:	(bad)  
   14000b8f4:	jae    0x14000b959
   14000b8f6:	push   0x73616d65
   14000b8fb:	cs ins DWORD PTR es:[rdi],dx
   14000b8fd:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000b904:	je     0x14000b934
   14000b906:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b909:	(bad)  
   14000b90a:	push   rbx
   14000b90b:	rex.WRB
   14000b90c:	rex.WB (bad) 
   14000b90e:	xor    dh,BYTE PTR [rax]
   14000b910:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a1045
   14000b916:	outs   dx,DWORD PTR fs:[rsi]
   14000b918:	ja     0x14000b98d
   14000b91a:	push   rbx
   14000b91b:	gs je  0x14000b992
   14000b91e:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   14000b925:	jb     0x14000b99c
   14000b927:	gs cmp al,0x2f
   14000b92a:	fs jo  0x14000b996
   14000b92d:	rex.B ja 0x14000b991
   14000b930:	jb     0x14000b997
   14000b932:	ds cmp al,0x2f
   14000b935:	ja     0x14000b9a0
   14000b937:	outs   dx,BYTE PTR ds:[rsi]
   14000b938:	outs   dx,DWORD PTR fs:[rsi]
   14000b93a:	ja     0x14000b9af
   14000b93c:	push   rbx
   14000b93d:	gs je  0x14000b9b4
   14000b940:	imul   ebp,DWORD PTR [rsi+0x67],0x2f3c3e73
   14000b947:	(bad)  
   14000b948:	jo     0x14000b9ba
   14000b94a:	ins    BYTE PTR es:[rdi],dx
   14000b94b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000b952:	ds cmp al,0x2f
   14000b955:	(bad)  
   14000b956:	jae    0x14000b9cb
   14000b958:	gs ins DWORD PTR es:[rdi],dx
   14000b95a:	(bad)  
   14000b95b:	ins    BYTE PTR es:[rdi],dx
   14000b95c:	jns    0x14000b99c
   14000b95e:	push   rax
   14000b95f:	rex.B

Disassembly of section .reloc:

000000014000c000 <.reloc>:
   14000c000:	add    BYTE PTR [rax+0x0],ah
   14000c003:	add    BYTE PTR [rax],bh
   14000c005:	add    BYTE PTR [rax],al
   14000c007:	add    al,al
   14000c009:	movabs ds:0xa2f0a2e8a2d0a2c8,al
   14000c012:	clc    
   14000c013:	movabs ds:0xa400a3f8a3f0a3e8,al
   14000c01c:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000c01e:	push   rax
   14000c01f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c020:	pop    rax
   14000c021:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c022:	(bad)  
   14000c023:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c024:	push   0x78a770a7
   14000c029:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c02a:	and    BYTE PTR [rdi-0x586f5878],0x98
   14000c031:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c032:	movabs al,ds:0x9000aa38a7a8a7
   14000c03b:	add    BYTE PTR [rax+rax*1],dl
   14000c03e:	add    BYTE PTR [rax],al
   14000c040:	and    BYTE PTR [rax-0x5f975fc0],ah
   14000c046:	nop
   14000c047:	.byte 0xa0
   14000c048:	.byte 0xb8
   14000c049:	.byte 0xa0
   14000c04a:	loopne 0x14000bfec
