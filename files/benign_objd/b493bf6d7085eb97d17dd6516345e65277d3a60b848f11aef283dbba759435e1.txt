
b493bf6d7085eb97d17dd6516345e65277d3a60b848f11aef283dbba759435e1.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x4685]        # 0x4056a0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x4686]        # 0x4056b0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x4689]        # 0x4056c0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x464c]        # 0x405690
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x44ef]        # 0x405540
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4621]        # 0x405680
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403838
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401b80
  401081:	mov    rdx,QWORD PTR [rip+0x4558]        # 0x4055e0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x453e]        # 0x4055d0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x45a4]        # 0x405640
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x44db]        # 0x405580
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401760
  4010af:	mov    rax,QWORD PTR [rip+0x443a]        # 0x4054f0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403838
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x939]        # 0x401a60
  401127:	call   0x401a50
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4505]        # 0x405670
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x4495]        # 0x405630
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403850
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x44ba]        # 0x405680
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x43bb]        # 0x4055b0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x8136]        # 0x409338
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x4397]        # 0x4055c0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x42cc]        # 0x405530
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d70
  40127d:	lea    rcx,[rip+0x108c]        # 0x402310
  401284:	call   QWORD PTR [rip+0x80a6]        # 0x409330
  40128a:	mov    rdx,QWORD PTR [rip+0x430f]        # 0x4055a0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402220
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403880
  4012a5:	call   0x401b60
  4012aa:	mov    rax,QWORD PTR [rip+0x428f]        # 0x405540
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x42b1]        # 0x405570
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4037a0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x403780
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4037a0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x403798
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401730
  4013bb:	mov    rax,QWORD PTR [rip+0x419e]        # 0x405560
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x403950
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x403820
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x4189]        # 0x4055c0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x403828
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x419d]        # 0x405600
  401463:	mov    rcx,QWORD PTR [rip+0x4186]        # 0x4055f0
  40146a:	call   0x403818
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7e47]        # 0x4092e0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x4179]        # 0x405620
  4014a7:	mov    rcx,QWORD PTR [rip+0x4162]        # 0x405610
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x403818
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x4037d8
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x41a5]        # 0x405680
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401770
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x4175]        # 0x405680
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401770
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbx
  401531:	sub    rsp,0x20
  401535:	mov    rbx,QWORD PTR [rip+0x7e5c]        # 0x409398
  40153c:	call   rbx
  40153e:	lea    rcx,[rip+0x3abb]        # 0x405000
  401545:	lea    r9,[rax+0x60]
  401549:	mov    r8d,0x28
  40154f:	mov    edx,0x1
  401554:	call   0x4037b0
  401559:	call   rbx
  40155b:	lea    rcx,[rip+0x3ace]        # 0x405030
  401562:	lea    r9,[rax+0x60]
  401566:	mov    r8d,0xcd
  40156c:	mov    edx,0x1
  401571:	add    rsp,0x20
  401575:	pop    rbx
  401576:	jmp    0x4037b0
  40157b:	nop
  40157c:	nop
  40157d:	nop
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x7d1a]        # 0x4092a0
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x7d0a]        # 0x409298
  40158e:	nop
  40158f:	nop
  401590:	jmp    QWORD PTR [rip+0x7cfa]        # 0x409290
  401596:	nop
  401597:	nop
  401598:	jmp    QWORD PTR [rip+0x7cea]        # 0x409288
  40159e:	nop
  40159f:	nop
  4015a0:	jmp    QWORD PTR [rip+0x7cda]        # 0x409280
  4015a6:	nop
  4015a7:	nop
  4015a8:	jmp    QWORD PTR [rip+0x7cca]        # 0x409278
  4015ae:	nop
  4015af:	nop
  4015b0:	jmp    QWORD PTR [rip+0x7cba]        # 0x409270
  4015b6:	nop
  4015b7:	nop
  4015b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4015c0:	push   rbx
  4015c1:	sub    rsp,0x30
  4015c5:	mov    rbx,rcx
  4015c8:	mov    rcx,QWORD PTR [rip+0x7441]        # 0x408a10
  4015cf:	call   0x401b70
  4015d4:	cmp    rax,0xffffffffffffffff
  4015d8:	mov    QWORD PTR [rsp+0x20],rax
  4015dd:	je     0x401655
  4015df:	mov    ecx,0x8
  4015e4:	call   0x403810
  4015e9:	mov    rcx,QWORD PTR [rip+0x7420]        # 0x408a10
  4015f0:	call   0x401b70
  4015f5:	mov    rcx,QWORD PTR [rip+0x741c]        # 0x408a18
  4015fc:	mov    QWORD PTR [rsp+0x20],rax
  401601:	call   0x401b70
  401606:	lea    rdx,[rsp+0x20]
  40160b:	lea    r8,[rsp+0x28]
  401610:	mov    rcx,rbx
  401613:	mov    QWORD PTR [rsp+0x28],rax
  401618:	call   0x403858
  40161d:	mov    rcx,QWORD PTR [rsp+0x20]
  401622:	mov    rbx,rax
  401625:	call   0x401b80
  40162a:	mov    rcx,QWORD PTR [rsp+0x28]
  40162f:	mov    QWORD PTR [rip+0x73da],rax        # 0x408a10
  401636:	call   0x401b80
  40163b:	mov    ecx,0x8
  401640:	mov    QWORD PTR [rip+0x73d1],rax        # 0x408a18
  401647:	call   0x403800
  40164c:	mov    rax,rbx
  40164f:	add    rsp,0x30
  401653:	pop    rbx
  401654:	ret    
  401655:	mov    rax,QWORD PTR [rip+0x3f34]        # 0x405590
  40165c:	mov    rcx,rbx
  40165f:	call   QWORD PTR [rax]
  401661:	add    rsp,0x30
  401665:	pop    rbx
  401666:	ret    
  401667:	nop    WORD PTR [rax+rax*1+0x0]
  401670:	sub    rsp,0x28
  401674:	call   0x4015c0
  401679:	test   rax,rax
  40167c:	sete   al
  40167f:	movzx  eax,al
  401682:	neg    eax
  401684:	add    rsp,0x28
  401688:	ret    
  401689:	nop
  40168a:	nop
  40168b:	nop
  40168c:	nop
  40168d:	nop
  40168e:	nop
  40168f:	nop
  401690:	sub    rsp,0x28
  401694:	mov    rax,QWORD PTR [rip+0x2975]        # 0x404010
  40169b:	mov    rax,QWORD PTR [rax]
  40169e:	test   rax,rax
  4016a1:	je     0x4016c0
  4016a3:	call   rax
  4016a5:	mov    rax,QWORD PTR [rip+0x2964]        # 0x404010
  4016ac:	lea    rdx,[rax+0x8]
  4016b0:	mov    rax,QWORD PTR [rax+0x8]
  4016b4:	mov    QWORD PTR [rip+0x2955],rdx        # 0x404010
  4016bb:	test   rax,rax
  4016be:	jne    0x4016a3
  4016c0:	add    rsp,0x28
  4016c4:	ret    
  4016c5:	nop
  4016c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016d0:	push   rsi
  4016d1:	push   rbx
  4016d2:	sub    rsp,0x28
  4016d6:	mov    rsi,QWORD PTR [rip+0x3e23]        # 0x405500
  4016dd:	mov    rax,QWORD PTR [rsi]
  4016e0:	cmp    eax,0xffffffff
  4016e3:	mov    ebx,eax
  4016e5:	je     0x401710
  4016e7:	test   ebx,ebx
  4016e9:	je     0x4016fa
  4016eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4016f0:	mov    eax,ebx
  4016f2:	call   QWORD PTR [rsi+rax*8]
  4016f5:	sub    ebx,0x1
  4016f8:	jne    0x4016f0
  4016fa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401690
  401701:	add    rsp,0x28
  401705:	pop    rbx
  401706:	pop    rsi
  401707:	jmp    0x401670
  40170c:	nop    DWORD PTR [rax+0x0]
  401710:	xor    ebx,ebx
  401712:	jmp    0x401716
  401714:	mov    ebx,eax
  401716:	lea    edx,[rbx+0x1]
  401719:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40171e:	mov    rax,rdx
  401721:	jne    0x401714
  401723:	jmp    0x4016e7
  401725:	nop
  401726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401730:	mov    eax,DWORD PTR [rip+0x68fa]        # 0x408030
  401736:	test   eax,eax
  401738:	je     0x401740
  40173a:	repz ret 
  40173c:	nop    DWORD PTR [rax+0x0]
  401740:	mov    DWORD PTR [rip+0x68e6],0x1        # 0x408030
  40174a:	jmp    0x4016d0
  40174c:	nop
  40174d:	nop
  40174e:	nop
  40174f:	nop
  401750:	mov    rax,QWORD PTR [rip+0x7c49]        # 0x4093a0
  401757:	rex.W jmp rax
  40175a:	nop
  40175b:	nop
  40175c:	nop
  40175d:	nop
  40175e:	nop
  40175f:	nop
  401760:	xor    eax,eax
  401762:	ret    
  401763:	nop
  401764:	nop
  401765:	nop
  401766:	nop
  401767:	nop
  401768:	nop
  401769:	nop
  40176a:	nop
  40176b:	nop
  40176c:	nop
  40176d:	nop
  40176e:	nop
  40176f:	nop
  401770:	push   r12
  401772:	push   rbp
  401773:	push   rdi
  401774:	push   rsi
  401775:	push   rbx
  401776:	sub    rsp,0x40
  40177a:	mov    rbx,QWORD PTR [rip+0x291f]        # 0x4040a0
  401781:	movabs rax,0x2b992ddfa232
  40178b:	mov    QWORD PTR [rsp+0x20],0x0
  401794:	cmp    rbx,rax
  401797:	je     0x4017b0
  401799:	not    rbx
  40179c:	mov    QWORD PTR [rip+0x290d],rbx        # 0x4040b0
  4017a3:	add    rsp,0x40
  4017a7:	pop    rbx
  4017a8:	pop    rsi
  4017a9:	pop    rdi
  4017aa:	pop    rbp
  4017ab:	pop    r12
  4017ad:	ret    
  4017ae:	xchg   ax,ax
  4017b0:	lea    rcx,[rsp+0x20]
  4017b5:	call   QWORD PTR [rip+0x7b2d]        # 0x4092e8
  4017bb:	mov    r12,QWORD PTR [rsp+0x20]
  4017c0:	call   QWORD PTR [rip+0x7b02]        # 0x4092c8
  4017c6:	mov    ebp,eax
  4017c8:	call   QWORD PTR [rip+0x7b02]        # 0x4092d0
  4017ce:	mov    edi,eax
  4017d0:	call   QWORD PTR [rip+0x7b1a]        # 0x4092f0
  4017d6:	lea    rcx,[rsp+0x30]
  4017db:	mov    esi,eax
  4017dd:	call   QWORD PTR [rip+0x7b25]        # 0x409308
  4017e3:	xor    r12,QWORD PTR [rsp+0x30]
  4017e8:	mov    edx,edi
  4017ea:	movabs rax,0xffffffffffff
  4017f4:	xor    rbp,r12
  4017f7:	mov    rdi,rbp
  4017fa:	xor    rdi,rdx
  4017fd:	mov    edx,esi
  4017ff:	xor    rdi,rdx
  401802:	mov    rsi,rdi
  401805:	and    rsi,rax
  401808:	cmp    rsi,rbx
  40180b:	je     0x401830
  40180d:	mov    rax,rsi
  401810:	not    rax
  401813:	mov    QWORD PTR [rip+0x2886],rsi        # 0x4040a0
  40181a:	mov    QWORD PTR [rip+0x288f],rax        # 0x4040b0
  401821:	add    rsp,0x40
  401825:	pop    rbx
  401826:	pop    rsi
  401827:	pop    rdi
  401828:	pop    rbp
  401829:	pop    r12
  40182b:	ret    
  40182c:	nop    DWORD PTR [rax+0x0]
  401830:	movabs rax,0xffffd466d2205dcc
  40183a:	movabs rsi,0x2b992ddfa233
  401844:	jmp    0x401813
  401846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401850:	push   rbp
  401851:	push   rsi
  401852:	push   rbx
  401853:	mov    rbp,rsp
  401856:	sub    rsp,0x70
  40185a:	mov    rsi,rcx
  40185d:	lea    rcx,[rip+0x681c]        # 0x408080
  401864:	call   QWORD PTR [rip+0x7aae]        # 0x409318
  40186a:	mov    rbx,QWORD PTR [rip+0x6907]        # 0x408178
  401871:	xor    r8d,r8d
  401874:	lea    rdx,[rbp-0x28]
  401878:	mov    rcx,rbx
  40187b:	call   QWORD PTR [rip+0x7a9f]        # 0x409320
  401881:	test   rax,rax
  401884:	mov    r9,rax
  401887:	je     0x401930
  40188d:	lea    rax,[rbp-0x20]
  401891:	mov    QWORD PTR [rsp+0x38],0x0
  40189a:	mov    r8,rbx
  40189d:	mov    rdx,QWORD PTR [rbp-0x28]
  4018a1:	xor    ecx,ecx
  4018a3:	mov    QWORD PTR [rsp+0x30],rax
  4018a8:	lea    rax,[rbp-0x18]
  4018ac:	mov    QWORD PTR [rsp+0x28],rax
  4018b1:	lea    rax,[rip+0x67c8]        # 0x408080
  4018b8:	mov    QWORD PTR [rsp+0x20],rax
  4018bd:	call   QWORD PTR [rip+0x7a65]        # 0x409328
  4018c3:	mov    rax,QWORD PTR [rip+0x68ae]        # 0x408178
  4018ca:	xor    ecx,ecx
  4018cc:	mov    QWORD PTR [rip+0x682d],rsi        # 0x408100
  4018d3:	mov    DWORD PTR [rip+0x6ca3],0xc0000409        # 0x408580
  4018dd:	mov    DWORD PTR [rip+0x6c9d],0x1        # 0x408584
  4018e7:	mov    QWORD PTR [rip+0x6ca2],rax        # 0x408590
  4018ee:	mov    rax,QWORD PTR [rip+0x27ab]        # 0x4040a0
  4018f5:	mov    QWORD PTR [rbp-0x10],rax
  4018f9:	mov    rax,QWORD PTR [rip+0x27b0]        # 0x4040b0
  401900:	mov    QWORD PTR [rbp-0x8],rax
  401904:	call   QWORD PTR [rip+0x7a26]        # 0x409330
  40190a:	lea    rcx,[rip+0x380f]        # 0x405120
  401911:	call   QWORD PTR [rip+0x7a39]        # 0x409350
  401917:	call   QWORD PTR [rip+0x79a3]        # 0x4092c0
  40191d:	mov    edx,0xc0000409
  401922:	mov    rcx,rax
  401925:	call   QWORD PTR [rip+0x7a15]        # 0x409340
  40192b:	call   0x4037f8
  401930:	mov    rax,QWORD PTR [rbp+0x18]
  401934:	mov    QWORD PTR [rip+0x683d],rax        # 0x408178
  40193b:	lea    rax,[rbp+0x8]
  40193f:	mov    QWORD PTR [rip+0x67d2],rax        # 0x408118
  401946:	jmp    0x4018c3
  40194b:	nop
  40194c:	nop
  40194d:	nop
  40194e:	nop
  40194f:	nop
  401950:	sub    rsp,0x28
  401954:	test   edx,edx
  401956:	je     0x401970
  401958:	cmp    edx,0x3
  40195b:	je     0x401970
  40195d:	mov    eax,0x1
  401962:	add    rsp,0x28
  401966:	ret    
  401967:	nop    WORD PTR [rax+rax*1+0x0]
  401970:	call   0x402660
  401975:	mov    eax,0x1
  40197a:	add    rsp,0x28
  40197e:	ret    
  40197f:	nop
  401980:	push   rsi
  401981:	push   rbx
  401982:	sub    rsp,0x28
  401986:	mov    rax,QWORD PTR [rip+0x3b53]        # 0x4054e0
  40198d:	cmp    DWORD PTR [rax],0x2
  401990:	je     0x401998
  401992:	mov    DWORD PTR [rax],0x2
  401998:	cmp    edx,0x2
  40199b:	je     0x4019b0
  40199d:	cmp    edx,0x1
  4019a0:	je     0x4019e2
  4019a2:	mov    eax,0x1
  4019a7:	add    rsp,0x28
  4019ab:	pop    rbx
  4019ac:	pop    rsi
  4019ad:	ret    
  4019ae:	xchg   ax,ax
  4019b0:	lea    rbx,[rip+0x86a9]        # 0x40a060
  4019b7:	lea    rsi,[rip+0x86a2]        # 0x40a060
  4019be:	cmp    rbx,rsi
  4019c1:	je     0x4019a2
  4019c3:	mov    rax,QWORD PTR [rbx]
  4019c6:	test   rax,rax
  4019c9:	je     0x4019cd
  4019cb:	call   rax
  4019cd:	add    rbx,0x8
  4019d1:	cmp    rbx,rsi
  4019d4:	jne    0x4019c3
  4019d6:	mov    eax,0x1
  4019db:	add    rsp,0x28
  4019df:	pop    rbx
  4019e0:	pop    rsi
  4019e1:	ret    
  4019e2:	call   0x402660
  4019e7:	jmp    0x4019a2
  4019e9:	nop    DWORD PTR [rax+0x0]
  4019f0:	xor    eax,eax
  4019f2:	ret    
  4019f3:	nop
  4019f4:	nop
  4019f5:	nop
  4019f6:	nop
  4019f7:	nop
  4019f8:	nop
  4019f9:	nop
  4019fa:	nop
  4019fb:	nop
  4019fc:	nop
  4019fd:	nop
  4019fe:	nop
  4019ff:	nop
  401a00:	sub    rsp,0x58
  401a04:	mov    rax,QWORD PTR [rip+0x6c55]        # 0x408660
  401a0b:	test   rax,rax
  401a0e:	je     0x401a3c
  401a10:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401a19:	mov    DWORD PTR [rsp+0x20],ecx
  401a1d:	lea    rcx,[rsp+0x20]
  401a22:	mov    QWORD PTR [rsp+0x28],rdx
  401a27:	movsd  QWORD PTR [rsp+0x30],xmm2
  401a2d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401a33:	movsd  QWORD PTR [rsp+0x40],xmm0
  401a39:	call   rax
  401a3b:	nop
  401a3c:	add    rsp,0x58
  401a40:	ret    
  401a41:	nop    DWORD PTR [rax+rax*1+0x0]
  401a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a50:	mov    QWORD PTR [rip+0x6c09],rcx        # 0x408660
  401a57:	jmp    0x403830
  401a5c:	nop    DWORD PTR [rax+0x0]
  401a60:	push   rsi
  401a61:	push   rbx
  401a62:	sub    rsp,0x78
  401a66:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a6b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a70:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a76:	cmp    DWORD PTR [rcx],0x6
  401a79:	ja     0x401b50
  401a7f:	mov    edx,DWORD PTR [rcx]
  401a81:	lea    rax,[rip+0x37dc]        # 0x405264
  401a88:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401a8c:	add    rax,rdx
  401a8f:	jmp    rax
  401a91:	lea    rbx,[rip+0x36a8]        # 0x405140
  401a98:	nop    DWORD PTR [rax+rax*1+0x0]
  401aa0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401aa6:	mov    rsi,QWORD PTR [rcx+0x8]
  401aaa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401aaf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401ab4:	call   0x403848
  401ab9:	movsd  QWORD PTR [rsp+0x30],xmm8
  401ac0:	lea    rcx,[rax+0x60]
  401ac4:	lea    rdx,[rip+0x376d]        # 0x405238
  401acb:	movsd  QWORD PTR [rsp+0x28],xmm7
  401ad1:	mov    r9,rsi
  401ad4:	mov    r8,rbx
  401ad7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401add:	call   0x4037d0
  401ae2:	nop
  401ae3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401ae8:	xor    eax,eax
  401aea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401aef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401af5:	add    rsp,0x78
  401af9:	pop    rbx
  401afa:	pop    rsi
  401afb:	ret    
  401afc:	nop    DWORD PTR [rax+0x0]
  401b00:	lea    rbx,[rip+0x3658]        # 0x40515f
  401b07:	jmp    0x401aa0
  401b09:	nop    DWORD PTR [rax+0x0]
  401b10:	lea    rbx,[rip+0x3669]        # 0x405180
  401b17:	jmp    0x401aa0
  401b19:	nop    DWORD PTR [rax+0x0]
  401b20:	lea    rbx,[rip+0x36c9]        # 0x4051f0
  401b27:	jmp    0x401aa0
  401b2c:	nop    DWORD PTR [rax+0x0]
  401b30:	lea    rbx,[rip+0x3691]        # 0x4051c8
  401b37:	jmp    0x401aa0
  401b3c:	nop    DWORD PTR [rax+0x0]
  401b40:	lea    rbx,[rip+0x3659]        # 0x4051a0
  401b47:	jmp    0x401aa0
  401b4c:	nop    DWORD PTR [rax+0x0]
  401b50:	lea    rbx,[rip+0x36cf]        # 0x405226
  401b57:	jmp    0x401aa0
  401b5c:	nop
  401b5d:	nop
  401b5e:	nop
  401b5f:	nop
  401b60:	fninit 
  401b62:	ret    
  401b63:	nop
  401b64:	nop
  401b65:	nop
  401b66:	nop
  401b67:	nop
  401b68:	nop
  401b69:	nop
  401b6a:	nop
  401b6b:	nop
  401b6c:	nop
  401b6d:	nop
  401b6e:	nop
  401b6f:	nop
  401b70:	mov    rax,rcx
  401b73:	ret    
  401b74:	xchg   ax,ax
  401b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b80:	mov    rax,rcx
  401b83:	ret    
  401b84:	nop
  401b85:	nop
  401b86:	nop
  401b87:	nop
  401b88:	nop
  401b89:	nop
  401b8a:	nop
  401b8b:	nop
  401b8c:	nop
  401b8d:	nop
  401b8e:	nop
  401b8f:	nop
  401b90:	push   rsi
  401b91:	push   rbx
  401b92:	sub    rsp,0x38
  401b96:	lea    rax,[rsp+0x58]
  401b9b:	mov    rbx,rcx
  401b9e:	mov    QWORD PTR [rsp+0x58],rdx
  401ba3:	mov    QWORD PTR [rsp+0x60],r8
  401ba8:	mov    QWORD PTR [rsp+0x68],r9
  401bad:	mov    QWORD PTR [rsp+0x28],rax
  401bb2:	call   0x403848
  401bb7:	lea    rcx,[rip+0x36c2]        # 0x405280
  401bbe:	lea    r9,[rax+0x60]
  401bc2:	mov    r8d,0x1b
  401bc8:	mov    edx,0x1
  401bcd:	call   0x4037b0
  401bd2:	mov    rsi,QWORD PTR [rsp+0x28]
  401bd7:	call   0x403848
  401bdc:	lea    rcx,[rax+0x60]
  401be0:	mov    rdx,rbx
  401be3:	mov    r8,rsi
  401be6:	call   0x403770
  401beb:	call   0x4037f8
  401bf0:	nop
  401bf1:	nop    DWORD PTR [rax+rax*1+0x0]
  401bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c00:	push   r13
  401c02:	push   r12
  401c04:	push   rbp
  401c05:	push   rdi
  401c06:	push   rsi
  401c07:	push   rbx
  401c08:	sub    rsp,0x58
  401c0c:	movsxd rbp,DWORD PTR [rip+0x6a71]        # 0x408684
  401c13:	mov    rbx,rcx
  401c16:	mov    rsi,rdx
  401c19:	mov    rdi,r8
  401c1c:	test   ebp,ebp
  401c1e:	jle    0x401d1a
  401c24:	mov    rax,QWORD PTR [rip+0x6a5d]        # 0x408688
  401c2b:	xor    r9d,r9d
  401c2e:	add    rax,0x8
  401c32:	mov    r10,QWORD PTR [rax]
  401c35:	cmp    rbx,r10
  401c38:	jb     0x401c4e
  401c3a:	mov    rdx,QWORD PTR [rax+0x8]
  401c3e:	mov    r11d,DWORD PTR [rdx+0x8]
  401c42:	add    r10,r11
  401c45:	cmp    rbx,r10
  401c48:	jb     0x401d00
  401c4e:	add    r9d,0x1
  401c52:	add    rax,0x18
  401c56:	cmp    r9d,ebp
  401c59:	jne    0x401c32
  401c5b:	mov    rcx,rbx
  401c5e:	call   0x402870
  401c63:	test   rax,rax
  401c66:	mov    r12,rax
  401c69:	je     0x401d52
  401c6f:	lea    rbp,[rbp+rbp*2+0x0]
  401c74:	shl    rbp,0x3
  401c78:	mov    r13,rbp
  401c7b:	add    r13,QWORD PTR [rip+0x6a06]        # 0x408688
  401c82:	mov    QWORD PTR [r13+0x10],rax
  401c86:	mov    DWORD PTR [r13+0x0],0x0
  401c8e:	call   0x402990
  401c93:	mov    edx,DWORD PTR [r12+0xc]
  401c98:	mov    r8d,0x30
  401c9e:	add    rax,rdx
  401ca1:	lea    rdx,[rsp+0x20]
  401ca6:	mov    QWORD PTR [r13+0x8],rax
  401caa:	mov    rax,QWORD PTR [rip+0x69d7]        # 0x408688
  401cb1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401cb6:	call   QWORD PTR [rip+0x76a4]        # 0x409360
  401cbc:	test   rax,rax
  401cbf:	je     0x401d35
  401cc1:	mov    eax,DWORD PTR [rsp+0x44]
  401cc5:	lea    edx,[rax-0x4]
  401cc8:	and    edx,0xfffffffb
  401ccb:	je     0x401cf9
  401ccd:	sub    eax,0x40
  401cd0:	and    eax,0xffffffbf
  401cd3:	je     0x401cf9
  401cd5:	mov    r9,rbp
  401cd8:	add    r9,QWORD PTR [rip+0x69a9]        # 0x408688
  401cdf:	mov    r8d,0x40
  401ce5:	mov    rdx,QWORD PTR [rsp+0x38]
  401cea:	mov    rcx,QWORD PTR [rsp+0x20]
  401cef:	call   QWORD PTR [rip+0x7663]        # 0x409358
  401cf5:	test   eax,eax
  401cf7:	je     0x401d21
  401cf9:	add    DWORD PTR [rip+0x6984],0x1        # 0x408684
  401d00:	mov    r8,rdi
  401d03:	mov    rdx,rsi
  401d06:	mov    rcx,rbx
  401d09:	add    rsp,0x58
  401d0d:	pop    rbx
  401d0e:	pop    rsi
  401d0f:	pop    rdi
  401d10:	pop    rbp
  401d11:	pop    r12
  401d13:	pop    r13
  401d15:	jmp    0x403798
  401d1a:	xor    ebp,ebp
  401d1c:	jmp    0x401c5b
  401d21:	call   QWORD PTR [rip+0x75b1]        # 0x4092d8
  401d27:	lea    rcx,[rip+0x35ca]        # 0x4052f8
  401d2e:	mov    edx,eax
  401d30:	call   0x401b90
  401d35:	mov    rax,QWORD PTR [rip+0x694c]        # 0x408688
  401d3c:	mov    edx,DWORD PTR [r12+0x8]
  401d41:	lea    rcx,[rip+0x3578]        # 0x4052c0
  401d48:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d4d:	call   0x401b90
  401d52:	lea    rcx,[rip+0x3547]        # 0x4052a0
  401d59:	mov    rdx,rbx
  401d5c:	call   0x401b90
  401d61:	nop
  401d62:	nop    DWORD PTR [rax+0x0]
  401d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d70:	push   rbp
  401d71:	push   r14
  401d73:	push   r13
  401d75:	push   r12
  401d77:	push   rdi
  401d78:	push   rsi
  401d79:	push   rbx
  401d7a:	mov    rbp,rsp
  401d7d:	sub    rsp,0x60
  401d81:	mov    ebx,DWORD PTR [rip+0x68f9]        # 0x408680
  401d87:	test   ebx,ebx
  401d89:	je     0x401da0
  401d8b:	mov    rsp,rbp
  401d8e:	pop    rbx
  401d8f:	pop    rsi
  401d90:	pop    rdi
  401d91:	pop    r12
  401d93:	pop    r13
  401d95:	pop    r14
  401d97:	pop    rbp
  401d98:	ret    
  401d99:	nop    DWORD PTR [rax+0x0]
  401da0:	mov    DWORD PTR [rip+0x68d6],0x1        # 0x408680
  401daa:	call   0x4028c0
  401daf:	cdqe   
  401db1:	lea    rax,[rax+rax*2]
  401db5:	lea    rax,[rax*8+0x1e]
  401dbd:	and    rax,0xfffffffffffffff0
  401dc1:	call   0x402ae0
  401dc6:	mov    rsi,QWORD PTR [rip+0x3743]        # 0x405510
  401dcd:	mov    rbx,QWORD PTR [rip+0x374c]        # 0x405520
  401dd4:	sub    rsp,rax
  401dd7:	mov    DWORD PTR [rip+0x68a3],0x0        # 0x408684
  401de1:	lea    rax,[rsp+0x20]
  401de6:	mov    QWORD PTR [rip+0x689b],rax        # 0x408688
  401ded:	mov    rax,rsi
  401df0:	sub    rax,rbx
  401df3:	cmp    rax,0x7
  401df7:	jle    0x401d8b
  401df9:	cmp    rax,0xb
  401dfd:	jle    0x401e25
  401dff:	mov    r11d,DWORD PTR [rbx]
  401e02:	test   r11d,r11d
  401e05:	jne    0x401f50
  401e0b:	mov    r10d,DWORD PTR [rbx+0x4]
  401e0f:	test   r10d,r10d
  401e12:	jne    0x401f50
  401e18:	mov    r9d,DWORD PTR [rbx+0x8]
  401e1c:	test   r9d,r9d
  401e1f:	jne    0x401e3c
  401e21:	add    rbx,0xc
  401e25:	mov    r8d,DWORD PTR [rbx]
  401e28:	test   r8d,r8d
  401e2b:	jne    0x401f50
  401e31:	mov    ecx,DWORD PTR [rbx+0x4]
  401e34:	test   ecx,ecx
  401e36:	jne    0x401f50
  401e3c:	mov    edx,DWORD PTR [rbx+0x8]
  401e3f:	cmp    edx,0x1
  401e42:	jne    0x40205c
  401e48:	add    rbx,0xc
  401e4c:	cmp    rbx,rsi
  401e4f:	jae    0x401d8b
  401e55:	mov    r12,QWORD PTR [rip+0x36e4]        # 0x405540
  401e5c:	lea    r13,[rbp-0x30]
  401e60:	movabs r14,0xffffffff00000000
  401e6a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e6d:	mov    eax,DWORD PTR [rbx]
  401e6f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e73:	add    rax,r12
  401e76:	add    rcx,r12
  401e79:	cmp    edx,0x10
  401e7c:	mov    r8,QWORD PTR [rax]
  401e7f:	je     0x401fc6
  401e85:	jbe    0x401f8d
  401e8b:	cmp    edx,0x20
  401e8e:	je     0x40200f
  401e94:	cmp    edx,0x40
  401e97:	jne    0x401ffb
  401e9d:	sub    r8,rax
  401ea0:	mov    rdx,r13
  401ea3:	mov    rdi,r13
  401ea6:	mov    rax,r8
  401ea9:	add    rax,QWORD PTR [rcx]
  401eac:	mov    r8d,0x8
  401eb2:	mov    QWORD PTR [rbp-0x30],rax
  401eb6:	call   0x401c00
  401ebb:	add    rbx,0xc
  401ebf:	cmp    rbx,rsi
  401ec2:	jb     0x401e6a
  401ec4:	mov    eax,DWORD PTR [rip+0x67ba]        # 0x408684
  401eca:	xor    ebx,ebx
  401ecc:	xor    esi,esi
  401ece:	test   eax,eax
  401ed0:	jle    0x401d8b
  401ed6:	mov    r14,QWORD PTR [rip+0x7483]        # 0x409360
  401edd:	lea    r13,[rbp-0x34]
  401ee1:	mov    r12,QWORD PTR [rip+0x7470]        # 0x409358
  401ee8:	jmp    0x401f03
  401eea:	nop    WORD PTR [rax+rax*1+0x0]
  401ef0:	add    esi,0x1
  401ef3:	add    rbx,0x18
  401ef7:	cmp    esi,DWORD PTR [rip+0x6787]        # 0x408684
  401efd:	jge    0x401d8b
  401f03:	mov    rax,rbx
  401f06:	add    rax,QWORD PTR [rip+0x677b]        # 0x408688
  401f0d:	mov    edx,DWORD PTR [rax]
  401f0f:	test   edx,edx
  401f11:	je     0x401ef0
  401f13:	mov    rcx,QWORD PTR [rax+0x8]
  401f17:	mov    r8d,0x30
  401f1d:	mov    rdx,rdi
  401f20:	call   r14
  401f23:	test   rax,rax
  401f26:	je     0x40203e
  401f2c:	mov    rax,QWORD PTR [rip+0x6755]        # 0x408688
  401f33:	mov    r9,r13
  401f36:	mov    rdx,QWORD PTR [rbp-0x18]
  401f3a:	mov    rcx,QWORD PTR [rbp-0x30]
  401f3e:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f42:	call   r12
  401f45:	jmp    0x401ef0
  401f47:	nop    WORD PTR [rax+rax*1+0x0]
  401f50:	cmp    rbx,rsi
  401f53:	jae    0x401d8b
  401f59:	mov    r12,QWORD PTR [rip+0x35e0]        # 0x405540
  401f60:	lea    rdi,[rbp-0x30]
  401f64:	mov    ecx,DWORD PTR [rbx+0x4]
  401f67:	mov    eax,DWORD PTR [rbx]
  401f69:	mov    r8d,0x4
  401f6f:	mov    rdx,rdi
  401f72:	add    rbx,0x8
  401f76:	add    rcx,r12
  401f79:	add    eax,DWORD PTR [rcx]
  401f7b:	mov    DWORD PTR [rbp-0x30],eax
  401f7e:	call   0x401c00
  401f83:	cmp    rbx,rsi
  401f86:	jb     0x401f64
  401f88:	jmp    0x401ec4
  401f8d:	cmp    edx,0x8
  401f90:	jne    0x401ffb
  401f92:	movzx  edx,BYTE PTR [rcx]
  401f95:	mov    rdi,r13
  401f98:	mov    r10,rdx
  401f9b:	or     r10,0xffffffffffffff00
  401fa2:	test   dl,dl
  401fa4:	cmovs  rdx,r10
  401fa8:	sub    rdx,rax
  401fab:	lea    rax,[r8+rdx*1]
  401faf:	mov    r8d,0x1
  401fb5:	mov    rdx,r13
  401fb8:	mov    QWORD PTR [rbp-0x30],rax
  401fbc:	call   0x401c00
  401fc1:	jmp    0x401ebb
  401fc6:	movzx  edx,WORD PTR [rcx]
  401fc9:	mov    rdi,r13
  401fcc:	mov    r10,rdx
  401fcf:	or     r10,0xffffffffffff0000
  401fd6:	test   dx,dx
  401fd9:	cmovs  rdx,r10
  401fdd:	sub    rdx,rax
  401fe0:	lea    rax,[r8+rdx*1]
  401fe4:	mov    r8d,0x2
  401fea:	mov    rdx,r13
  401fed:	mov    QWORD PTR [rbp-0x30],rax
  401ff1:	call   0x401c00
  401ff6:	jmp    0x401ebb
  401ffb:	lea    rcx,[rip+0x3356]        # 0x405358
  402002:	mov    QWORD PTR [rbp-0x30],0x0
  40200a:	call   0x401b90
  40200f:	mov    edx,DWORD PTR [rcx]
  402011:	mov    rdi,r13
  402014:	mov    r10,rdx
  402017:	or     r10,r14
  40201a:	test   edx,edx
  40201c:	cmovs  rdx,r10
  402020:	sub    rdx,rax
  402023:	lea    rax,[r8+rdx*1]
  402027:	mov    r8d,0x4
  40202d:	mov    rdx,r13
  402030:	mov    QWORD PTR [rbp-0x30],rax
  402034:	call   0x401c00
  402039:	jmp    0x401ebb
  40203e:	add    rbx,QWORD PTR [rip+0x6643]        # 0x408688
  402045:	lea    rcx,[rip+0x3274]        # 0x4052c0
  40204c:	mov    rax,QWORD PTR [rbx+0x10]
  402050:	mov    r8,QWORD PTR [rbx+0x8]
  402054:	mov    edx,DWORD PTR [rax+0x8]
  402057:	call   0x401b90
  40205c:	lea    rcx,[rip+0x32bd]        # 0x405320
  402063:	call   0x401b90
  402068:	nop
  402069:	nop
  40206a:	nop
  40206b:	nop
  40206c:	nop
  40206d:	nop
  40206e:	nop
  40206f:	nop
  402070:	sub    rsp,0x28
  402074:	mov    eax,DWORD PTR [rcx]
  402076:	cmp    eax,0xc0000091
  40207b:	ja     0x4020e0
  40207d:	cmp    eax,0xc000008d
  402082:	jae    0x4020ff
  402084:	cmp    eax,0xc0000008
  402089:	je     0x4021a0
  40208f:	ja     0x402170
  402095:	cmp    eax,0x80000002
  40209a:	je     0x4021a0
  4020a0:	cmp    eax,0xc0000005
  4020a5:	jne    0x40217e
  4020ab:	xor    edx,edx
  4020ad:	mov    ecx,0xb
  4020b2:	call   0x403790
  4020b7:	cmp    rax,0x1
  4020bb:	je     0x402200
  4020c1:	test   rax,rax
  4020c4:	je     0x4021e0
  4020ca:	mov    ecx,0xb
  4020cf:	call   rax
  4020d1:	xor    eax,eax
  4020d3:	add    rsp,0x28
  4020d7:	ret    
  4020d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4020e0:	cmp    eax,0xc0000094
  4020e5:	je     0x4021b0
  4020eb:	ja     0x402130
  4020ed:	cmp    eax,0xc0000092
  4020f2:	je     0x4021a0
  4020f8:	cmp    eax,0xc0000093
  4020fd:	jne    0x40217e
  4020ff:	xor    edx,edx
  402101:	mov    ecx,0x8
  402106:	call   0x403790
  40210b:	cmp    rax,0x1
  40210f:	mov    rdx,rax
  402112:	je     0x402188
  402114:	test   rdx,rdx
  402117:	mov    eax,0x1
  40211c:	je     0x4020d3
  40211e:	mov    ecx,0x8
  402123:	call   rdx
  402125:	xor    eax,eax
  402127:	add    rsp,0x28
  40212b:	ret    
  40212c:	nop    DWORD PTR [rax+0x0]
  402130:	cmp    eax,0xc0000095
  402135:	je     0x4021a0
  402137:	cmp    eax,0xc0000096
  40213c:	jne    0x40217e
  40213e:	xor    edx,edx
  402140:	mov    ecx,0x4
  402145:	call   0x403790
  40214a:	cmp    rax,0x1
  40214e:	je     0x4021ea
  402154:	test   rax,rax
  402157:	je     0x4021e0
  40215d:	mov    ecx,0x4
  402162:	call   rax
  402164:	xor    eax,eax
  402166:	jmp    0x4020d3
  40216b:	nop    DWORD PTR [rax+rax*1+0x0]
  402170:	cmp    eax,0xc000001d
  402175:	je     0x40213e
  402177:	cmp    eax,0xc000008c
  40217c:	je     0x4021a0
  40217e:	mov    eax,0x1
  402183:	add    rsp,0x28
  402187:	ret    
  402188:	mov    edx,0x1
  40218d:	mov    ecx,0x8
  402192:	call   0x403790
  402197:	call   0x401b60
  40219c:	nop    DWORD PTR [rax+0x0]
  4021a0:	xor    eax,eax
  4021a2:	add    rsp,0x28
  4021a6:	ret    
  4021a7:	nop    WORD PTR [rax+rax*1+0x0]
  4021b0:	xor    edx,edx
  4021b2:	mov    ecx,0x8
  4021b7:	call   0x403790
  4021bc:	cmp    rax,0x1
  4021c0:	mov    rdx,rax
  4021c3:	jne    0x402114
  4021c9:	mov    edx,0x1
  4021ce:	mov    ecx,0x8
  4021d3:	call   0x403790
  4021d8:	xor    eax,eax
  4021da:	jmp    0x4020d3
  4021df:	nop
  4021e0:	mov    eax,0x4
  4021e5:	add    rsp,0x28
  4021e9:	ret    
  4021ea:	mov    edx,0x1
  4021ef:	mov    ecx,0x4
  4021f4:	call   0x403790
  4021f9:	xor    eax,eax
  4021fb:	jmp    0x4020d3
  402200:	mov    edx,0x1
  402205:	mov    ecx,0xb
  40220a:	call   0x403790
  40220f:	xor    eax,eax
  402211:	jmp    0x4020d3
  402216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402220:	push   r12
  402222:	push   rbp
  402223:	push   rdi
  402224:	push   rsi
  402225:	push   rbx
  402226:	sub    rsp,0x20
  40222a:	call   0x402990
  40222f:	mov    rbp,rax
  402232:	mov    eax,DWORD PTR [rip+0x6490]        # 0x4086c8
  402238:	test   eax,eax
  40223a:	jne    0x402261
  40223c:	test   rbp,rbp
  40223f:	je     0x402261
  402241:	lea    rcx,[rip+0x3148]        # 0x405390
  402248:	mov    DWORD PTR [rip+0x6476],0x1        # 0x4086c8
  402252:	call   0x4027d0
  402257:	test   rax,rax
  40225a:	je     0x402270
  40225c:	mov    eax,0x1
  402261:	add    rsp,0x20
  402265:	pop    rbx
  402266:	pop    rsi
  402267:	pop    rdi
  402268:	pop    rbp
  402269:	pop    r12
  40226b:	ret    
  40226c:	nop    DWORD PTR [rax+0x0]
  402270:	lea    rbx,[rip+0x6589]        # 0x408800
  402277:	mov    ecx,0x30
  40227c:	lea    rdx,[rip+0x647d]        # 0x408700
  402283:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402070
  40228a:	xor    esi,esi
  40228c:	mov    rdi,rbx
  40228f:	rep stos QWORD PTR es:[rdi],rax
  402292:	mov    rdi,rdx
  402295:	sub    r12,rbp
  402298:	mov    cl,0x20
  40229a:	rep stos QWORD PTR es:[rdi],rax
  40229d:	mov    rdi,rdx
  4022a0:	jmp    0x4022d0
  4022a2:	mov    BYTE PTR [rdi],0x9
  4022a5:	mov    DWORD PTR [rdi+0x4],r12d
  4022a9:	add    rsi,0x1
  4022ad:	mov    edx,DWORD PTR [rax+0xc]
  4022b0:	add    rbx,0xc
  4022b4:	mov    DWORD PTR [rbx-0xc],edx
  4022b7:	add    edx,DWORD PTR [rax+0x8]
  4022ba:	mov    rax,rdi
  4022bd:	sub    rax,rbp
  4022c0:	add    rdi,0x8
  4022c4:	mov    DWORD PTR [rbx-0x4],eax
  4022c7:	mov    DWORD PTR [rbx-0x8],edx
  4022ca:	cmp    rsi,0x20
  4022ce:	je     0x402305
  4022d0:	mov    rcx,rsi
  4022d3:	call   0x402900
  4022d8:	test   rax,rax
  4022db:	jne    0x4022a2
  4022dd:	test   rsi,rsi
  4022e0:	je     0x40225c
  4022e6:	mov    edx,esi
  4022e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022f0:	mov    r8,rbp
  4022f3:	lea    rcx,[rip+0x6506]        # 0x408800
  4022fa:	call   QWORD PTR [rip+0x7010]        # 0x409310
  402300:	jmp    0x40225c
  402305:	mov    edx,0x20
  40230a:	jmp    0x4022f0
  40230c:	nop    DWORD PTR [rax+0x0]
  402310:	push   rbx
  402311:	sub    rsp,0x20
  402315:	mov    rdx,QWORD PTR [rcx]
  402318:	mov    eax,DWORD PTR [rdx]
  40231a:	mov    r8d,eax
  40231d:	and    r8d,0x20ffffff
  402324:	cmp    r8d,0x20474343
  40232b:	je     0x402430
  402331:	cmp    eax,0xc0000091
  402336:	mov    rbx,rcx
  402339:	ja     0x4023c0
  40233f:	cmp    eax,0xc000008d
  402344:	jae    0x4023d7
  40234a:	cmp    eax,0xc0000008
  40234f:	je     0x402383
  402351:	ja     0x402390
  402353:	cmp    eax,0x80000002
  402358:	je     0x402383
  40235a:	cmp    eax,0xc0000005
  40235f:	jne    0x4023a2
  402361:	xor    edx,edx
  402363:	mov    ecx,0xb
  402368:	call   0x403790
  40236d:	cmp    rax,0x1
  402371:	je     0x4024a0
  402377:	test   rax,rax
  40237a:	je     0x4023a2
  40237c:	mov    ecx,0xb
  402381:	call   rax
  402383:	mov    eax,0xffffffff
  402388:	add    rsp,0x20
  40238c:	pop    rbx
  40238d:	ret    
  40238e:	xchg   ax,ax
  402390:	cmp    eax,0xc000001d
  402395:	je     0x402456
  40239b:	cmp    eax,0xc000008c
  4023a0:	je     0x402383
  4023a2:	mov    rax,QWORD PTR [rip+0x6317]        # 0x4086c0
  4023a9:	test   rax,rax
  4023ac:	je     0x402388
  4023ae:	mov    rcx,rbx
  4023b1:	add    rsp,0x20
  4023b5:	pop    rbx
  4023b6:	rex.W jmp rax
  4023b9:	nop    DWORD PTR [rax+0x0]
  4023c0:	cmp    eax,0xc0000094
  4023c5:	je     0x402402
  4023c7:	ja     0x402440
  4023c9:	cmp    eax,0xc0000092
  4023ce:	je     0x402383
  4023d0:	cmp    eax,0xc0000093
  4023d5:	jne    0x4023a2
  4023d7:	xor    edx,edx
  4023d9:	mov    ecx,0x8
  4023de:	call   0x403790
  4023e3:	cmp    rax,0x1
  4023e7:	jne    0x402414
  4023e9:	mov    edx,0x1
  4023ee:	mov    ecx,0x8
  4023f3:	call   0x403790
  4023f8:	call   0x401b60
  4023fd:	jmp    0x402383
  402402:	xor    edx,edx
  402404:	mov    ecx,0x8
  402409:	call   0x403790
  40240e:	cmp    rax,0x1
  402412:	je     0x402482
  402414:	test   rax,rax
  402417:	je     0x4023a2
  402419:	mov    ecx,0x8
  40241e:	call   rax
  402420:	mov    eax,0xffffffff
  402425:	jmp    0x402388
  40242a:	nop    WORD PTR [rax+rax*1+0x0]
  402430:	test   BYTE PTR [rdx+0x4],0x1
  402434:	jne    0x402331
  40243a:	jmp    0x402383
  40243f:	nop
  402440:	cmp    eax,0xc0000095
  402445:	je     0x402383
  40244b:	cmp    eax,0xc0000096
  402450:	jne    0x4023a2
  402456:	xor    edx,edx
  402458:	mov    ecx,0x4
  40245d:	call   0x403790
  402462:	cmp    rax,0x1
  402466:	je     0x4024b4
  402468:	test   rax,rax
  40246b:	je     0x4023a2
  402471:	mov    ecx,0x4
  402476:	call   rax
  402478:	mov    eax,0xffffffff
  40247d:	jmp    0x402388
  402482:	mov    edx,0x1
  402487:	mov    ecx,0x8
  40248c:	call   0x403790
  402491:	jmp    0x402383
  402496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024a0:	mov    edx,0x1
  4024a5:	mov    ecx,0xb
  4024aa:	call   0x403790
  4024af:	jmp    0x402383
  4024b4:	mov    edx,0x1
  4024b9:	mov    ecx,0x4
  4024be:	call   0x403790
  4024c3:	jmp    0x402383
  4024c8:	nop
  4024c9:	nop
  4024ca:	nop
  4024cb:	nop
  4024cc:	nop
  4024cd:	nop
  4024ce:	nop
  4024cf:	nop
  4024d0:	push   rbp
  4024d1:	push   rdi
  4024d2:	push   rsi
  4024d3:	push   rbx
  4024d4:	sub    rsp,0x28
  4024d8:	lea    rcx,[rip+0x64c1]        # 0x4089a0
  4024df:	call   QWORD PTR [rip+0x6dd3]        # 0x4092b8
  4024e5:	mov    rbx,QWORD PTR [rip+0x6494]        # 0x408980
  4024ec:	test   rbx,rbx
  4024ef:	je     0x402524
  4024f1:	mov    rbp,QWORD PTR [rip+0x6e50]        # 0x409348
  4024f8:	mov    rdi,QWORD PTR [rip+0x6dd9]        # 0x4092d8
  4024ff:	nop
  402500:	mov    ecx,DWORD PTR [rbx]
  402502:	call   rbp
  402504:	mov    rsi,rax
  402507:	call   rdi
  402509:	test   eax,eax
  40250b:	jne    0x40251b
  40250d:	test   rsi,rsi
  402510:	je     0x40251b
  402512:	mov    rax,QWORD PTR [rbx+0x8]
  402516:	mov    rcx,rsi
  402519:	call   rax
  40251b:	mov    rbx,QWORD PTR [rbx+0x10]
  40251f:	test   rbx,rbx
  402522:	jne    0x402500
  402524:	mov    rax,QWORD PTR [rip+0x6dd5]        # 0x409300
  40252b:	lea    rcx,[rip+0x646e]        # 0x4089a0
  402532:	add    rsp,0x28
  402536:	pop    rbx
  402537:	pop    rsi
  402538:	pop    rdi
  402539:	pop    rbp
  40253a:	rex.W jmp rax
  40253d:	nop    DWORD PTR [rax]
  402540:	push   rdi
  402541:	push   rsi
  402542:	push   rbx
  402543:	sub    rsp,0x20
  402547:	mov    eax,DWORD PTR [rip+0x643b]        # 0x408988
  40254d:	test   eax,eax
  40254f:	jne    0x402560
  402551:	add    rsp,0x20
  402555:	pop    rbx
  402556:	pop    rsi
  402557:	pop    rdi
  402558:	ret    
  402559:	nop    DWORD PTR [rax+0x0]
  402560:	mov    rsi,rdx
  402563:	mov    edi,ecx
  402565:	mov    edx,0x18
  40256a:	mov    ecx,0x1
  40256f:	call   0x4037e0
  402574:	test   rax,rax
  402577:	mov    rbx,rax
  40257a:	je     0x4025b8
  40257c:	mov    DWORD PTR [rax],edi
  40257e:	mov    QWORD PTR [rax+0x8],rsi
  402582:	lea    rcx,[rip+0x6417]        # 0x4089a0
  402589:	call   QWORD PTR [rip+0x6d29]        # 0x4092b8
  40258f:	mov    rax,QWORD PTR [rip+0x63ea]        # 0x408980
  402596:	lea    rcx,[rip+0x6403]        # 0x4089a0
  40259d:	mov    QWORD PTR [rip+0x63dc],rbx        # 0x408980
  4025a4:	mov    QWORD PTR [rbx+0x10],rax
  4025a8:	call   QWORD PTR [rip+0x6d52]        # 0x409300
  4025ae:	xor    eax,eax
  4025b0:	add    rsp,0x20
  4025b4:	pop    rbx
  4025b5:	pop    rsi
  4025b6:	pop    rdi
  4025b7:	ret    
  4025b8:	mov    eax,0xffffffff
  4025bd:	jmp    0x402551
  4025bf:	nop
  4025c0:	push   rbx
  4025c1:	sub    rsp,0x20
  4025c5:	mov    eax,DWORD PTR [rip+0x63bd]        # 0x408988
  4025cb:	test   eax,eax
  4025cd:	jne    0x4025e0
  4025cf:	xor    eax,eax
  4025d1:	add    rsp,0x20
  4025d5:	pop    rbx
  4025d6:	ret    
  4025d7:	nop    WORD PTR [rax+rax*1+0x0]
  4025e0:	mov    ebx,ecx
  4025e2:	lea    rcx,[rip+0x63b7]        # 0x4089a0
  4025e9:	call   QWORD PTR [rip+0x6cc9]        # 0x4092b8
  4025ef:	mov    rdx,QWORD PTR [rip+0x638a]        # 0x408980
  4025f6:	test   rdx,rdx
  4025f9:	je     0x402617
  4025fb:	mov    eax,DWORD PTR [rdx]
  4025fd:	cmp    eax,ebx
  4025ff:	jne    0x40260e
  402601:	jmp    0x40264f
  402603:	mov    r8d,DWORD PTR [rax]
  402606:	cmp    r8d,ebx
  402609:	je     0x402630
  40260b:	mov    rdx,rax
  40260e:	mov    rax,QWORD PTR [rdx+0x10]
  402612:	test   rax,rax
  402615:	jne    0x402603
  402617:	lea    rcx,[rip+0x6382]        # 0x4089a0
  40261e:	call   QWORD PTR [rip+0x6cdc]        # 0x409300
  402624:	xor    eax,eax
  402626:	add    rsp,0x20
  40262a:	pop    rbx
  40262b:	ret    
  40262c:	nop    DWORD PTR [rax+0x0]
  402630:	mov    rcx,rax
  402633:	mov    rax,QWORD PTR [rax+0x10]
  402637:	mov    QWORD PTR [rdx+0x10],rax
  40263b:	call   0x4037c0
  402640:	lea    rcx,[rip+0x6359]        # 0x4089a0
  402647:	call   QWORD PTR [rip+0x6cb3]        # 0x409300
  40264d:	jmp    0x402624
  40264f:	mov    rax,QWORD PTR [rdx+0x10]
  402653:	mov    rcx,rdx
  402656:	mov    QWORD PTR [rip+0x6323],rax        # 0x408980
  40265d:	jmp    0x40263b
  40265f:	nop
  402660:	push   rbx
  402661:	sub    rsp,0x20
  402665:	cmp    edx,0x1
  402668:	je     0x402700
  40266e:	jb     0x4026a0
  402670:	cmp    edx,0x2
  402673:	je     0x402690
  402675:	cmp    edx,0x3
  402678:	jne    0x402695
  40267a:	mov    eax,DWORD PTR [rip+0x6308]        # 0x408988
  402680:	test   eax,eax
  402682:	je     0x402695
  402684:	call   0x4024d0
  402689:	jmp    0x402695
  40268b:	nop    DWORD PTR [rax+rax*1+0x0]
  402690:	call   0x401b60
  402695:	mov    eax,0x1
  40269a:	add    rsp,0x20
  40269e:	pop    rbx
  40269f:	ret    
  4026a0:	mov    eax,DWORD PTR [rip+0x62e2]        # 0x408988
  4026a6:	test   eax,eax
  4026a8:	jne    0x402730
  4026ae:	mov    eax,DWORD PTR [rip+0x62d4]        # 0x408988
  4026b4:	cmp    eax,0x1
  4026b7:	jne    0x402695
  4026b9:	mov    rcx,QWORD PTR [rip+0x62c0]        # 0x408980
  4026c0:	test   rcx,rcx
  4026c3:	je     0x4026d6
  4026c5:	mov    rbx,QWORD PTR [rcx+0x10]
  4026c9:	call   0x4037c0
  4026ce:	test   rbx,rbx
  4026d1:	mov    rcx,rbx
  4026d4:	jne    0x4026c5
  4026d6:	lea    rcx,[rip+0x62c3]        # 0x4089a0
  4026dd:	mov    QWORD PTR [rip+0x6298],0x0        # 0x408980
  4026e8:	mov    DWORD PTR [rip+0x6296],0x0        # 0x408988
  4026f2:	call   QWORD PTR [rip+0x6bb8]        # 0x4092b0
  4026f8:	jmp    0x402695
  4026fa:	nop    WORD PTR [rax+rax*1+0x0]
  402700:	mov    eax,DWORD PTR [rip+0x6282]        # 0x408988
  402706:	test   eax,eax
  402708:	je     0x402720
  40270a:	mov    eax,0x1
  40270f:	mov    DWORD PTR [rip+0x626f],0x1        # 0x408988
  402719:	add    rsp,0x20
  40271d:	pop    rbx
  40271e:	ret    
  40271f:	nop
  402720:	lea    rcx,[rip+0x6279]        # 0x4089a0
  402727:	call   QWORD PTR [rip+0x6bcb]        # 0x4092f8
  40272d:	jmp    0x40270a
  40272f:	nop
  402730:	call   0x4024d0
  402735:	jmp    0x4026ae
  40273a:	nop
  40273b:	nop
  40273c:	nop
  40273d:	nop
  40273e:	nop
  40273f:	nop
  402740:	movsxd rax,DWORD PTR [rcx+0x3c]
  402744:	add    rcx,rax
  402747:	xor    eax,eax
  402749:	cmp    DWORD PTR [rcx],0x4550
  40274f:	je     0x402753
  402751:	repz ret 
  402753:	xor    eax,eax
  402755:	cmp    WORD PTR [rcx+0x18],0x20b
  40275b:	sete   al
  40275e:	ret    
  40275f:	nop
  402760:	cmp    WORD PTR [rcx],0x5a4d
  402765:	je     0x402770
  402767:	xor    eax,eax
  402769:	ret    
  40276a:	nop    WORD PTR [rax+rax*1+0x0]
  402770:	jmp    0x402740
  402772:	nop    DWORD PTR [rax+0x0]
  402776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402780:	movsxd rax,DWORD PTR [rcx+0x3c]
  402784:	add    rcx,rax
  402787:	movzx  eax,WORD PTR [rcx+0x14]
  40278b:	lea    rax,[rcx+rax*1+0x18]
  402790:	movzx  ecx,WORD PTR [rcx+0x6]
  402794:	test   ecx,ecx
  402796:	je     0x4027c1
  402798:	sub    ecx,0x1
  40279b:	lea    rcx,[rcx+rcx*4]
  40279f:	lea    r9,[rax+rcx*8+0x28]
  4027a4:	mov    r8d,DWORD PTR [rax+0xc]
  4027a8:	cmp    r8,rdx
  4027ab:	mov    rcx,r8
  4027ae:	ja     0x4027b8
  4027b0:	add    ecx,DWORD PTR [rax+0x8]
  4027b3:	cmp    rdx,rcx
  4027b6:	jb     0x4027c3
  4027b8:	add    rax,0x28
  4027bc:	cmp    rax,r9
  4027bf:	jne    0x4027a4
  4027c1:	xor    eax,eax
  4027c3:	repz ret 
  4027c5:	nop
  4027c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027d0:	push   rdi
  4027d1:	push   rsi
  4027d2:	push   rbx
  4027d3:	sub    rsp,0x20
  4027d7:	mov    rsi,rcx
  4027da:	call   0x403780
  4027df:	cmp    rax,0x8
  4027e3:	ja     0x402800
  4027e5:	mov    rbx,QWORD PTR [rip+0x2d54]        # 0x405540
  4027ec:	xor    edi,edi
  4027ee:	cmp    WORD PTR [rbx],0x5a4d
  4027f3:	je     0x402810
  4027f5:	mov    rax,rdi
  4027f8:	add    rsp,0x20
  4027fc:	pop    rbx
  4027fd:	pop    rsi
  4027fe:	pop    rdi
  4027ff:	ret    
  402800:	xor    edi,edi
  402802:	mov    rax,rdi
  402805:	add    rsp,0x20
  402809:	pop    rbx
  40280a:	pop    rsi
  40280b:	pop    rdi
  40280c:	ret    
  40280d:	nop    DWORD PTR [rax]
  402810:	mov    rcx,rbx
  402813:	call   0x402740
  402818:	test   eax,eax
  40281a:	je     0x4027f5
  40281c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402820:	add    rdx,rbx
  402823:	movzx  eax,WORD PTR [rdx+0x14]
  402827:	lea    rbx,[rdx+rax*1+0x18]
  40282c:	movzx  eax,WORD PTR [rdx+0x6]
  402830:	test   eax,eax
  402832:	je     0x4027f5
  402834:	sub    eax,0x1
  402837:	lea    rax,[rax+rax*4]
  40283b:	lea    rdi,[rbx+rax*8+0x28]
  402840:	jmp    0x40284b
  402842:	add    rbx,0x28
  402846:	cmp    rbx,rdi
  402849:	je     0x402800
  40284b:	mov    r8d,0x8
  402851:	mov    rdx,rsi
  402854:	mov    rcx,rbx
  402857:	call   0x403778
  40285c:	test   eax,eax
  40285e:	jne    0x402842
  402860:	mov    rdi,rbx
  402863:	mov    rax,rdi
  402866:	add    rsp,0x20
  40286a:	pop    rbx
  40286b:	pop    rsi
  40286c:	pop    rdi
  40286d:	ret    
  40286e:	xchg   ax,ax
  402870:	push   rsi
  402871:	push   rbx
  402872:	sub    rsp,0x28
  402876:	mov    rbx,QWORD PTR [rip+0x2cc3]        # 0x405540
  40287d:	cmp    WORD PTR [rbx],0x5a4d
  402882:	je     0x402890
  402884:	xor    eax,eax
  402886:	add    rsp,0x28
  40288a:	pop    rbx
  40288b:	pop    rsi
  40288c:	ret    
  40288d:	nop    DWORD PTR [rax]
  402890:	mov    rsi,rcx
  402893:	mov    rcx,rbx
  402896:	call   0x402740
  40289b:	test   eax,eax
  40289d:	je     0x402884
  40289f:	sub    rsi,rbx
  4028a2:	mov    rcx,rbx
  4028a5:	mov    rdx,rsi
  4028a8:	add    rsp,0x28
  4028ac:	pop    rbx
  4028ad:	pop    rsi
  4028ae:	jmp    0x402780
  4028b3:	nop    DWORD PTR [rax]
  4028b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028c0:	push   rbx
  4028c1:	sub    rsp,0x20
  4028c5:	mov    rbx,QWORD PTR [rip+0x2c74]        # 0x405540
  4028cc:	xor    eax,eax
  4028ce:	cmp    WORD PTR [rbx],0x5a4d
  4028d3:	je     0x4028e0
  4028d5:	add    rsp,0x20
  4028d9:	pop    rbx
  4028da:	ret    
  4028db:	nop    DWORD PTR [rax+rax*1+0x0]
  4028e0:	mov    rcx,rbx
  4028e3:	call   0x402740
  4028e8:	test   eax,eax
  4028ea:	je     0x4028d5
  4028ec:	movsxd rax,DWORD PTR [rbx+0x3c]
  4028f0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4028f5:	add    rsp,0x20
  4028f9:	pop    rbx
  4028fa:	ret    
  4028fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402900:	push   rdi
  402901:	push   rsi
  402902:	push   rbx
  402903:	sub    rsp,0x20
  402907:	mov    rsi,QWORD PTR [rip+0x2c32]        # 0x405540
  40290e:	xor    edi,edi
  402910:	mov    rbx,rcx
  402913:	cmp    WORD PTR [rsi],0x5a4d
  402918:	je     0x402925
  40291a:	mov    rax,rdi
  40291d:	add    rsp,0x20
  402921:	pop    rbx
  402922:	pop    rsi
  402923:	pop    rdi
  402924:	ret    
  402925:	mov    rcx,rsi
  402928:	call   0x402740
  40292d:	test   eax,eax
  40292f:	je     0x40291a
  402931:	movsxd rax,DWORD PTR [rsi+0x3c]
  402935:	add    rsi,rax
  402938:	movzx  eax,WORD PTR [rsi+0x14]
  40293c:	lea    rdx,[rsi+rax*1+0x18]
  402941:	movzx  eax,WORD PTR [rsi+0x6]
  402945:	test   eax,eax
  402947:	je     0x40291a
  402949:	sub    eax,0x1
  40294c:	lea    rax,[rax+rax*4]
  402950:	lea    rax,[rdx+rax*8+0x28]
  402955:	test   BYTE PTR [rdx+0x27],0x20
  402959:	je     0x402964
  40295b:	test   rbx,rbx
  40295e:	je     0x402980
  402960:	sub    rbx,0x1
  402964:	add    rdx,0x28
  402968:	cmp    rdx,rax
  40296b:	jne    0x402955
  40296d:	xor    edi,edi
  40296f:	mov    rax,rdi
  402972:	add    rsp,0x20
  402976:	pop    rbx
  402977:	pop    rsi
  402978:	pop    rdi
  402979:	ret    
  40297a:	nop    WORD PTR [rax+rax*1+0x0]
  402980:	mov    rdi,rdx
  402983:	mov    rax,rdi
  402986:	add    rsp,0x20
  40298a:	pop    rbx
  40298b:	pop    rsi
  40298c:	pop    rdi
  40298d:	ret    
  40298e:	xchg   ax,ax
  402990:	push   rsi
  402991:	push   rbx
  402992:	sub    rsp,0x28
  402996:	mov    rsi,QWORD PTR [rip+0x2ba3]        # 0x405540
  40299d:	xor    ebx,ebx
  40299f:	cmp    WORD PTR [rsi],0x5a4d
  4029a4:	je     0x4029b0
  4029a6:	mov    rax,rbx
  4029a9:	add    rsp,0x28
  4029ad:	pop    rbx
  4029ae:	pop    rsi
  4029af:	ret    
  4029b0:	mov    rcx,rsi
  4029b3:	call   0x402740
  4029b8:	test   eax,eax
  4029ba:	cmovne rbx,rsi
  4029be:	mov    rax,rbx
  4029c1:	add    rsp,0x28
  4029c5:	pop    rbx
  4029c6:	pop    rsi
  4029c7:	ret    
  4029c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029d0:	push   rsi
  4029d1:	push   rbx
  4029d2:	sub    rsp,0x28
  4029d6:	mov    rbx,QWORD PTR [rip+0x2b63]        # 0x405540
  4029dd:	xor    eax,eax
  4029df:	cmp    WORD PTR [rbx],0x5a4d
  4029e4:	je     0x4029f0
  4029e6:	add    rsp,0x28
  4029ea:	pop    rbx
  4029eb:	pop    rsi
  4029ec:	ret    
  4029ed:	nop    DWORD PTR [rax]
  4029f0:	mov    rsi,rcx
  4029f3:	mov    rcx,rbx
  4029f6:	call   0x402740
  4029fb:	test   eax,eax
  4029fd:	je     0x4029e6
  4029ff:	sub    rsi,rbx
  402a02:	mov    rcx,rbx
  402a05:	mov    rdx,rsi
  402a08:	call   0x402780
  402a0d:	test   rax,rax
  402a10:	je     0x402a21
  402a12:	mov    eax,DWORD PTR [rax+0x24]
  402a15:	not    eax
  402a17:	shr    eax,0x1f
  402a1a:	add    rsp,0x28
  402a1e:	pop    rbx
  402a1f:	pop    rsi
  402a20:	ret    
  402a21:	xor    eax,eax
  402a23:	jmp    0x4029e6
  402a25:	nop
  402a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a30:	push   rbp
  402a31:	push   rdi
  402a32:	push   rsi
  402a33:	push   rbx
  402a34:	sub    rsp,0x28
  402a38:	mov    rdi,QWORD PTR [rip+0x2b01]        # 0x405540
  402a3f:	xor    ebp,ebp
  402a41:	mov    esi,ecx
  402a43:	cmp    WORD PTR [rdi],0x5a4d
  402a48:	je     0x402a60
  402a4a:	mov    rax,rbp
  402a4d:	add    rsp,0x28
  402a51:	pop    rbx
  402a52:	pop    rsi
  402a53:	pop    rdi
  402a54:	pop    rbp
  402a55:	ret    
  402a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a60:	mov    rcx,rdi
  402a63:	call   0x402740
  402a68:	test   eax,eax
  402a6a:	je     0x402a4a
  402a6c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a70:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a77:	test   edx,edx
  402a79:	je     0x402a4a
  402a7b:	mov    ebx,edx
  402a7d:	mov    rcx,rdi
  402a80:	mov    rdx,rbx
  402a83:	call   0x402780
  402a88:	test   rax,rax
  402a8b:	je     0x402a4a
  402a8d:	add    rbx,rdi
  402a90:	mov    rdx,rbx
  402a93:	jne    0x402aa7
  402a95:	jmp    0x402a4a
  402a97:	nop    WORD PTR [rax+rax*1+0x0]
  402aa0:	sub    esi,0x1
  402aa3:	add    rdx,0x14
  402aa7:	mov    ecx,DWORD PTR [rdx+0x4]
  402aaa:	test   ecx,ecx
  402aac:	jne    0x402ab5
  402aae:	mov    eax,DWORD PTR [rdx+0xc]
  402ab1:	test   eax,eax
  402ab3:	je     0x402ad0
  402ab5:	test   esi,esi
  402ab7:	jg     0x402aa0
  402ab9:	mov    ebp,DWORD PTR [rdx+0xc]
  402abc:	add    rbp,rdi
  402abf:	mov    rax,rbp
  402ac2:	add    rsp,0x28
  402ac6:	pop    rbx
  402ac7:	pop    rsi
  402ac8:	pop    rdi
  402ac9:	pop    rbp
  402aca:	ret    
  402acb:	nop    DWORD PTR [rax+rax*1+0x0]
  402ad0:	xor    ebp,ebp
  402ad2:	mov    rax,rbp
  402ad5:	add    rsp,0x28
  402ad9:	pop    rbx
  402ada:	pop    rsi
  402adb:	pop    rdi
  402adc:	pop    rbp
  402add:	ret    
  402ade:	nop
  402adf:	nop
  402ae0:	push   rcx
  402ae1:	push   rax
  402ae2:	cmp    rax,0x1000
  402ae8:	lea    rcx,[rsp+0x18]
  402aed:	jb     0x402b08
  402aef:	sub    rcx,0x1000
  402af6:	or     QWORD PTR [rcx],0x0
  402afa:	sub    rax,0x1000
  402b00:	cmp    rax,0x1000
  402b06:	ja     0x402aef
  402b08:	sub    rcx,rax
  402b0b:	or     QWORD PTR [rcx],0x0
  402b0f:	pop    rax
  402b10:	pop    rcx
  402b11:	ret    
  402b12:	nop
  402b13:	nop
  402b14:	nop
  402b15:	nop
  402b16:	nop
  402b17:	nop
  402b18:	nop
  402b19:	nop
  402b1a:	nop
  402b1b:	nop
  402b1c:	nop
  402b1d:	nop
  402b1e:	nop
  402b1f:	nop
  402b20:	push   r13
  402b22:	push   r12
  402b24:	push   rbp
  402b25:	push   rdi
  402b26:	push   rsi
  402b27:	push   rbx
  402b28:	mov    r12d,edx
  402b2b:	mov    ebp,r8d
  402b2e:	mov    edi,edx
  402b30:	sub    r12d,ecx
  402b33:	sub    ebp,edx
  402b35:	mov    eax,r12d
  402b38:	cdq    
  402b39:	idiv   ebp
  402b3b:	test   edx,edx
  402b3d:	mov    r13d,edx
  402b40:	je     0x402bc5
  402b46:	mov    eax,ebp
  402b48:	jmp    0x402b53
  402b4a:	nop    WORD PTR [rax+rax*1+0x0]
  402b50:	mov    r13d,edx
  402b53:	cdq    
  402b54:	idiv   r13d
  402b57:	mov    eax,r13d
  402b5a:	test   edx,edx
  402b5c:	jne    0x402b50
  402b5e:	mov    eax,r8d
  402b61:	sub    eax,ecx
  402b63:	cdq    
  402b64:	idiv   r13d
  402b67:	test   r13d,r13d
  402b6a:	jle    0x402bbc
  402b6c:	movsxd rdx,edi
  402b6f:	xor    esi,esi
  402b71:	lea    rdx,[r9+rdx*8]
  402b75:	test   eax,eax
  402b77:	lea    ecx,[rdi+rsi*1]
  402b7a:	jle    0x402bb3
  402b7c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  402b80:	xor    r10d,r10d
  402b83:	mov    r11d,ecx
  402b86:	lea    r8d,[rcx+rbp*1]
  402b8a:	sub    r11d,r12d
  402b8d:	cmp    edi,ecx
  402b8f:	mov    ecx,r11d
  402b92:	cmovg  ecx,r8d
  402b96:	add    r10d,0x1
  402b9a:	movsxd r11,ecx
  402b9d:	cmp    r10d,eax
  402ba0:	lea    r8,[r9+r11*8]
  402ba4:	mov    r11,QWORD PTR [r8]
  402ba7:	mov    QWORD PTR [r8],rbx
  402baa:	mov    QWORD PTR [rdx+rsi*8],r11
  402bae:	mov    rbx,r11
  402bb1:	jne    0x402b83
  402bb3:	add    rsi,0x1
  402bb7:	cmp    r13d,esi
  402bba:	jg     0x402b75
  402bbc:	pop    rbx
  402bbd:	pop    rsi
  402bbe:	pop    rdi
  402bbf:	pop    rbp
  402bc0:	pop    r12
  402bc2:	pop    r13
  402bc4:	ret    
  402bc5:	mov    r13d,ebp
  402bc8:	jmp    0x402b5e
  402bca:	nop    WORD PTR [rax+rax*1+0x0]
  402bd0:	push   rdi
  402bd1:	push   rsi
  402bd2:	push   rbx
  402bd3:	sub    rsp,0x30
  402bd7:	mov    rax,QWORD PTR [rip+0x2972]        # 0x405550
  402bde:	mov    QWORD PTR [rsp+0x58],rdx
  402be3:	mov    QWORD PTR [rsp+0x60],r8
  402be8:	lea    rsi,[rsp+0x58]
  402bed:	mov    QWORD PTR [rsp+0x68],r9
  402bf2:	mov    rbx,rcx
  402bf5:	mov    rax,QWORD PTR [rax]
  402bf8:	mov    QWORD PTR [rsp+0x28],rsi
  402bfd:	mov    rax,QWORD PTR [rax]
  402c00:	mov    rdi,QWORD PTR [rax]
  402c03:	call   0x403848
  402c08:	lea    rdx,[rip+0x2791]        # 0x4053a0
  402c0f:	lea    rcx,[rax+0x60]
  402c13:	mov    r8,rdi
  402c16:	call   0x4037d0
  402c1b:	test   rbx,rbx
  402c1e:	je     0x402c34
  402c20:	call   0x403848
  402c25:	lea    rcx,[rax+0x60]
  402c29:	mov    r8,rsi
  402c2c:	mov    rdx,rbx
  402c2f:	call   0x403770
  402c34:	call   0x403848
  402c39:	lea    rdx,[rax+0x60]
  402c3d:	mov    ecx,0xa
  402c42:	call   0x4037c8
  402c47:	nop
  402c48:	add    rsp,0x30
  402c4c:	pop    rbx
  402c4d:	pop    rsi
  402c4e:	pop    rdi
  402c4f:	ret    
  402c50:	push   r15
  402c52:	push   r14
  402c54:	push   r13
  402c56:	push   r12
  402c58:	push   rbp
  402c59:	push   rdi
  402c5a:	push   rsi
  402c5b:	push   rbx
  402c5c:	sub    rsp,0x48
  402c60:	mov    eax,DWORD PTR [rip+0x1406]        # 0x40406c
  402c66:	mov    rbp,QWORD PTR [rip+0x13f3]        # 0x404060
  402c6d:	mov    QWORD PTR [rsp+0x90],rcx
  402c75:	mov    QWORD PTR [rsp+0x98],rdx
  402c7d:	mov    edx,0x3d
  402c82:	mov    r14,r8
  402c85:	mov    QWORD PTR [rsp+0xa8],r9
  402c8d:	mov    r13d,DWORD PTR [rsp+0xb0]
  402c95:	mov    DWORD PTR [rsp+0x38],eax
  402c99:	mov    rcx,rbp
  402c9c:	add    eax,0x1
  402c9f:	mov    DWORD PTR [rsp+0x3c],eax
  402ca3:	mov    DWORD PTR [rip+0x13c3],eax        # 0x40406c
  402ca9:	call   0x403788
  402cae:	test   rax,rax
  402cb1:	mov    QWORD PTR [rsp+0x30],rax
  402cb6:	je     0x402e94
  402cbc:	mov    rdi,rax
  402cbf:	add    rax,0x1
  402cc3:	sub    rdi,rbp
  402cc6:	mov    QWORD PTR [rsp+0x30],rax
  402ccb:	mov    r15,QWORD PTR [r14]
  402cce:	test   r15,r15
  402cd1:	je     0x402edb
  402cd7:	lea    rbx,[r14+0x20]
  402cdb:	mov    r12d,0xffffffff
  402ce1:	mov    DWORD PTR [rsp+0x2c],0x0
  402ce9:	xor    esi,esi
  402ceb:	jmp    0x402d05
  402ced:	nop    DWORD PTR [rax]
  402cf0:	test   r13d,r13d
  402cf3:	je     0x402d2e
  402cf5:	add    rbx,0x20
  402cf9:	mov    r15,QWORD PTR [rbx-0x20]
  402cfd:	add    esi,0x1
  402d00:	test   r15,r15
  402d03:	je     0x402d70
  402d05:	mov    r8,rdi
  402d08:	mov    rdx,r15
  402d0b:	mov    rcx,rbp
  402d0e:	call   0x403778
  402d13:	test   eax,eax
  402d15:	jne    0x402cf5
  402d17:	mov    rcx,r15
  402d1a:	call   0x403780
  402d1f:	cmp    rax,rdi
  402d22:	je     0x402e1d
  402d28:	cmp    rdi,0x1
  402d2c:	je     0x402cf0
  402d2e:	cmp    r12d,0xffffffff
  402d32:	je     0x402dd0
  402d38:	movsxd rax,r12d
  402d3b:	shl    rax,0x5
  402d3f:	add    rax,r14
  402d42:	mov    edx,DWORD PTR [rax+0x8]
  402d45:	cmp    DWORD PTR [rbx-0x18],edx
  402d48:	je     0x402de0
  402d4e:	add    rbx,0x20
  402d52:	mov    r15,QWORD PTR [rbx-0x20]
  402d56:	add    esi,0x1
  402d59:	mov    DWORD PTR [rsp+0x2c],0x1
  402d61:	test   r15,r15
  402d64:	jne    0x402d05
  402d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d70:	mov    r9d,DWORD PTR [rsp+0x2c]
  402d75:	test   r9d,r9d
  402d78:	je     0x402e10
  402d7e:	mov    r8d,DWORD PTR [rip+0x12eb]        # 0x404070
  402d85:	test   r8d,r8d
  402d88:	je     0x402da8
  402d8a:	mov    rax,QWORD PTR [rsp+0x98]
  402d92:	cmp    BYTE PTR [rax],0x3a
  402d95:	je     0x402da8
  402d97:	lea    rcx,[rip+0x2692]        # 0x405430
  402d9e:	mov    r8,rbp
  402da1:	mov    edx,edi
  402da3:	call   0x402bd0
  402da8:	mov    DWORD PTR [rip+0x12b6],0x0        # 0x404068
  402db2:	mov    eax,0x3f
  402db7:	add    rsp,0x48
  402dbb:	pop    rbx
  402dbc:	pop    rsi
  402dbd:	pop    rdi
  402dbe:	pop    rbp
  402dbf:	pop    r12
  402dc1:	pop    r13
  402dc3:	pop    r14
  402dc5:	pop    r15
  402dc7:	ret    
  402dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402dd0:	mov    r12d,esi
  402dd3:	jmp    0x402cf5
  402dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402de0:	mov    rdx,QWORD PTR [rax+0x10]
  402de4:	cmp    QWORD PTR [rbx-0x10],rdx
  402de8:	jne    0x402d4e
  402dee:	mov    eax,DWORD PTR [rax+0x18]
  402df1:	cmp    DWORD PTR [rbx-0x8],eax
  402df4:	mov    eax,0x1
  402df9:	cmove  eax,DWORD PTR [rsp+0x2c]
  402dfe:	mov    DWORD PTR [rsp+0x2c],eax
  402e02:	jmp    0x402cf5
  402e07:	nop    WORD PTR [rax+rax*1+0x0]
  402e10:	cmp    r12d,0xffffffff
  402e14:	je     0x402edb
  402e1a:	mov    esi,r12d
  402e1d:	movsxd rax,esi
  402e20:	shl    rax,0x5
  402e24:	add    r14,rax
  402e27:	cmp    QWORD PTR [rsp+0x30],0x0
  402e2d:	mov    eax,DWORD PTR [r14+0x8]
  402e31:	setne  cl
  402e34:	je     0x402ea4
  402e36:	test   eax,eax
  402e38:	jne    0x402ea4
  402e3a:	mov    ecx,DWORD PTR [rip+0x1230]        # 0x404070
  402e40:	test   ecx,ecx
  402e42:	jne    0x402e74
  402e44:	cmp    QWORD PTR [r14+0x10],0x0
  402e49:	je     0x402fa4
  402e4f:	mov    DWORD PTR [rip+0x120f],0x0        # 0x404068
  402e59:	mov    rax,QWORD PTR [rsp+0x98]
  402e61:	cmp    BYTE PTR [rax],0x3a
  402e64:	je     0x402f91
  402e6a:	mov    eax,0x3f
  402e6f:	jmp    0x402db7
  402e74:	mov    rax,QWORD PTR [rsp+0x98]
  402e7c:	cmp    BYTE PTR [rax],0x3a
  402e7f:	je     0x402e44
  402e81:	lea    rcx,[rip+0x2578]        # 0x405400
  402e88:	mov    r8,rbp
  402e8b:	mov    edx,edi
  402e8d:	call   0x402bd0
  402e92:	jmp    0x402e44
  402e94:	mov    rcx,rbp
  402e97:	call   0x403780
  402e9c:	mov    rdi,rax
  402e9f:	jmp    0x402ccb
  402ea4:	lea    edx,[rax-0x1]
  402ea7:	cmp    edx,0x1
  402eaa:	jbe    0x402f17
  402eac:	cmp    QWORD PTR [rsp+0xa8],0x0
  402eb5:	je     0x402ec1
  402eb7:	mov    rax,QWORD PTR [rsp+0xa8]
  402ebf:	mov    DWORD PTR [rax],esi
  402ec1:	mov    rax,QWORD PTR [r14+0x10]
  402ec5:	test   rax,rax
  402ec8:	je     0x402f9b
  402ece:	mov    edx,DWORD PTR [r14+0x18]
  402ed2:	mov    DWORD PTR [rax],edx
  402ed4:	xor    eax,eax
  402ed6:	jmp    0x402db7
  402edb:	test   r13d,r13d
  402ede:	jne    0x402ff2
  402ee4:	mov    eax,DWORD PTR [rip+0x1186]        # 0x404070
  402eea:	test   eax,eax
  402eec:	je     0x402da8
  402ef2:	mov    rax,QWORD PTR [rsp+0x98]
  402efa:	cmp    BYTE PTR [rax],0x3a
  402efd:	je     0x402da8
  402f03:	lea    rcx,[rip+0x24b6]        # 0x4053c0
  402f0a:	mov    rdx,rbp
  402f0d:	call   0x402bd0
  402f12:	jmp    0x402da8
  402f17:	test   cl,cl
  402f19:	je     0x402fb3
  402f1f:	mov    rdx,QWORD PTR [rsp+0x30]
  402f24:	cmp    eax,0x1
  402f27:	mov    QWORD PTR [rip+0x5b22],rdx        # 0x408a50
  402f2e:	jne    0x402eac
  402f34:	mov    r15,QWORD PTR [rsp+0x30]
  402f39:	test   r15,r15
  402f3c:	jne    0x402eac
  402f42:	mov    edx,DWORD PTR [rip+0x1128]        # 0x404070
  402f48:	test   edx,edx
  402f4a:	je     0x402f68
  402f4c:	mov    rax,QWORD PTR [rsp+0x98]
  402f54:	cmp    BYTE PTR [rax],0x3a
  402f57:	je     0x402f68
  402f59:	lea    rcx,[rip+0x2500]        # 0x405460
  402f60:	mov    rdx,rbp
  402f63:	call   0x402bd0
  402f68:	cmp    QWORD PTR [r14+0x10],0x0
  402f6d:	je     0x402fe6
  402f6f:	mov    DWORD PTR [rip+0x10ef],0x0        # 0x404068
  402f79:	mov    rax,QWORD PTR [rsp+0x98]
  402f81:	sub    DWORD PTR [rip+0x10e4],0x1        # 0x40406c
  402f88:	cmp    BYTE PTR [rax],0x3a
  402f8b:	jne    0x402e6a
  402f91:	mov    eax,0x3a
  402f96:	jmp    0x402db7
  402f9b:	mov    eax,DWORD PTR [r14+0x18]
  402f9f:	jmp    0x402db7
  402fa4:	mov    eax,DWORD PTR [r14+0x18]
  402fa8:	mov    DWORD PTR [rip+0x10ba],eax        # 0x404068
  402fae:	jmp    0x402e59
  402fb3:	cmp    eax,0x1
  402fb6:	jne    0x402eac
  402fbc:	mov    eax,DWORD PTR [rsp+0x38]
  402fc0:	mov    rdx,QWORD PTR [rsp+0x90]
  402fc8:	add    eax,0x2
  402fcb:	mov    DWORD PTR [rip+0x109b],eax        # 0x40406c
  402fd1:	movsxd rax,DWORD PTR [rsp+0x3c]
  402fd6:	mov    r15,QWORD PTR [rdx+rax*8]
  402fda:	mov    QWORD PTR [rip+0x5a6f],r15        # 0x408a50
  402fe1:	jmp    0x402f39
  402fe6:	mov    eax,DWORD PTR [r14+0x18]
  402fea:	mov    DWORD PTR [rip+0x1078],eax        # 0x404068
  402ff0:	jmp    0x402f79
  402ff2:	mov    eax,DWORD PTR [rsp+0x38]
  402ff6:	mov    DWORD PTR [rip+0x1070],eax        # 0x40406c
  402ffc:	mov    eax,0xffffffff
  403001:	jmp    0x402db7
  403006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403010:	push   r15
  403012:	push   r14
  403014:	push   r13
  403016:	push   r12
  403018:	push   rbp
  403019:	push   rdi
  40301a:	push   rsi
  40301b:	push   rbx
  40301c:	sub    rsp,0x38
  403020:	test   r8,r8
  403023:	mov    edi,ecx
  403025:	mov    r15,rdx
  403028:	mov    QWORD PTR [rsp+0x90],r8
  403030:	mov    QWORD PTR [rsp+0x98],r9
  403038:	je     0x40330e
  40303e:	mov    r9d,DWORD PTR [rip+0x1027]        # 0x40406c
  403045:	test   r9d,r9d
  403048:	je     0x4032a0
  40304e:	cmp    DWORD PTR [rip+0xffb],0xffffffff        # 0x404050
  403055:	je     0x403214
  40305b:	mov    edx,DWORD PTR [rip+0x59f7]        # 0x408a58
  403061:	test   edx,edx
  403063:	jne    0x403214
  403069:	mov    rax,QWORD PTR [rsp+0x90]
  403071:	movzx  eax,BYTE PTR [rax]
  403074:	cmp    al,0x2d
  403076:	je     0x403248
  40307c:	cmp    al,0x2b
  40307e:	je     0x403324
  403084:	mov    r8d,DWORD PTR [rip+0xfc5]        # 0x404050
  40308b:	test   r8d,r8d
  40308e:	jne    0x403324
  403094:	sub    eax,0x2b
  403097:	test   al,0xfd
  403099:	je     0x403250
  40309f:	test   edx,edx
  4030a1:	mov    QWORD PTR [rip+0x59a4],0x0        # 0x408a50
  4030ac:	jne    0x403280
  4030b2:	mov    r14d,DWORD PTR [rsp+0xa8]
  4030ba:	mov    ebp,DWORD PTR [rsp+0xa8]
  4030c1:	and    r14d,0x2
  4030c5:	and    ebp,0x1
  4030c8:	jmp    0x40314e
  4030cd:	nop    DWORD PTR [rax]
  4030d0:	lea    rax,[rip+0x22de]        # 0x4053b5
  4030d7:	test   r14d,r14d
  4030da:	mov    edx,r14d
  4030dd:	mov    QWORD PTR [rip+0xf7c],rax        # 0x404060
  4030e4:	jne    0x4033f0
  4030ea:	test   ebp,ebp
  4030ec:	je     0x40330e
  4030f2:	mov    r12d,DWORD PTR [rip+0xf5f]        # 0x404058
  4030f9:	cmp    r12d,0xffffffff
  4030fd:	je     0x403270
  403103:	mov    r13d,DWORD PTR [rip+0xf4a]        # 0x404054
  40310a:	cmp    r13d,0xffffffff
  40310e:	je     0x403145
  403110:	mov    edx,r13d
  403113:	mov    r9,r15
  403116:	mov    r8d,ebx
  403119:	mov    ecx,r12d
  40311c:	call   0x402b20
  403121:	mov    esi,DWORD PTR [rip+0xf45]        # 0x40406c
  403127:	mov    eax,r12d
  40312a:	mov    edx,DWORD PTR [rip+0x5928]        # 0x408a58
  403130:	sub    eax,r13d
  403133:	mov    DWORD PTR [rip+0xf17],0xffffffff        # 0x404054
  40313d:	add    eax,esi
  40313f:	mov    DWORD PTR [rip+0xf13],eax        # 0x404058
  403145:	add    esi,0x1
  403148:	mov    DWORD PTR [rip+0xf1e],esi        # 0x40406c
  40314e:	test   edx,edx
  403150:	jne    0x403164
  403152:	mov    rsi,QWORD PTR [rip+0xf07]        # 0x404060
  403159:	movzx  eax,BYTE PTR [rsi]
  40315c:	test   al,al
  40315e:	jne    0x40335e
  403164:	movsxd rbx,DWORD PTR [rip+0xf01]        # 0x40406c
  40316b:	mov    DWORD PTR [rip+0x58e3],0x0        # 0x408a58
  403175:	cmp    ebx,edi
  403177:	mov    esi,ebx
  403179:	jge    0x4032c0
  40317f:	movsxd rax,ebx
  403182:	mov    r13,QWORD PTR [r15+rax*8]
  403186:	cmp    BYTE PTR [r13+0x0],0x2d
  40318b:	mov    QWORD PTR [rip+0xece],r13        # 0x404060
  403192:	jne    0x4030d0
  403198:	movzx  eax,BYTE PTR [r13+0x1]
  40319d:	test   al,al
  40319f:	jne    0x403331
  4031a5:	mov    rcx,QWORD PTR [rsp+0x90]
  4031ad:	mov    edx,0x2d
  4031b2:	call   0x403788
  4031b7:	test   rax,rax
  4031ba:	je     0x4030d0
  4031c0:	cmp    DWORD PTR [rip+0xe91],0xffffffff        # 0x404058
  4031c7:	mov    rsi,r13
  4031ca:	je     0x4031e4
  4031cc:	cmp    DWORD PTR [rip+0xe81],0xffffffff        # 0x404054
  4031d3:	mov    eax,0x2d
  4031d8:	jne    0x40335e
  4031de:	mov    DWORD PTR [rip+0xe70],ebx        # 0x404054
  4031e4:	cmp    QWORD PTR [rsp+0x98],0x0
  4031ed:	je     0x4035dc
  4031f3:	cmp    rsi,QWORD PTR [r15+rbx*8]
  4031f7:	mov    eax,0x2d
  4031fc:	je     0x40342e
  403202:	add    rsi,0x1
  403206:	xor    edx,edx
  403208:	mov    QWORD PTR [rip+0xe51],rsi        # 0x404060
  40320f:	jmp    0x4033b2
  403214:	lea    rcx,[rip+0x218a]        # 0x4053a5
  40321b:	call   0x4037a8
  403220:	test   rax,rax
  403223:	mov    edx,DWORD PTR [rip+0x582f]        # 0x408a58
  403229:	setne  al
  40322c:	movzx  eax,al
  40322f:	mov    DWORD PTR [rip+0xe1b],eax        # 0x404050
  403235:	mov    rax,QWORD PTR [rsp+0x90]
  40323d:	movzx  eax,BYTE PTR [rax]
  403240:	cmp    al,0x2d
  403242:	jne    0x40307c
  403248:	or     DWORD PTR [rsp+0xa8],0x2
  403250:	add    QWORD PTR [rsp+0x90],0x1
  403259:	test   edx,edx
  40325b:	mov    QWORD PTR [rip+0x57ea],0x0        # 0x408a50
  403266:	je     0x4030b2
  40326c:	jmp    0x403280
  40326e:	xchg   ax,ax
  403270:	mov    DWORD PTR [rip+0xde2],ebx        # 0x404058
  403276:	jmp    0x403145
  40327b:	nop    DWORD PTR [rax+rax*1+0x0]
  403280:	mov    DWORD PTR [rip+0xdca],0xffffffff        # 0x404054
  40328a:	mov    DWORD PTR [rip+0xdc4],0xffffffff        # 0x404058
  403294:	jmp    0x4030b2
  403299:	nop    DWORD PTR [rax+0x0]
  4032a0:	mov    DWORD PTR [rip+0x57ae],0x1        # 0x408a58
  4032aa:	mov    DWORD PTR [rip+0xdb8],0x1        # 0x40406c
  4032b4:	jmp    0x40304e
  4032b9:	nop    DWORD PTR [rax+0x0]
  4032c0:	mov    esi,DWORD PTR [rip+0xd8e]        # 0x404054
  4032c6:	lea    rax,[rip+0x20e8]        # 0x4053b5
  4032cd:	mov    QWORD PTR [rip+0xd8c],rax        # 0x404060
  4032d4:	cmp    esi,0xffffffff
  4032d7:	je     0x40340a
  4032dd:	mov    edi,DWORD PTR [rip+0xd75]        # 0x404058
  4032e3:	mov    r9,r15
  4032e6:	mov    r8d,ebx
  4032e9:	mov    edx,esi
  4032eb:	mov    ecx,edi
  4032ed:	sub    edi,esi
  4032ef:	call   0x402b20
  4032f4:	add    DWORD PTR [rip+0xd72],edi        # 0x40406c
  4032fa:	mov    DWORD PTR [rip+0xd50],0xffffffff        # 0x404054
  403304:	mov    DWORD PTR [rip+0xd4a],0xffffffff        # 0x404058
  40330e:	mov    eax,0xffffffff
  403313:	add    rsp,0x38
  403317:	pop    rbx
  403318:	pop    rsi
  403319:	pop    rdi
  40331a:	pop    rbp
  40331b:	pop    r12
  40331d:	pop    r13
  40331f:	pop    r14
  403321:	pop    r15
  403323:	ret    
  403324:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  40332c:	jmp    0x403094
  403331:	mov    ebp,DWORD PTR [rip+0xd21]        # 0x404058
  403337:	cmp    ebp,0xffffffff
  40333a:	je     0x40334b
  40333c:	cmp    DWORD PTR [rip+0xd11],0xffffffff        # 0x404054
  403343:	jne    0x40334b
  403345:	mov    DWORD PTR [rip+0xd09],ebx        # 0x404054
  40334b:	lea    rsi,[r13+0x1]
  40334f:	cmp    al,0x2d
  403351:	mov    QWORD PTR [rip+0xd08],rsi        # 0x404060
  403358:	je     0x40350f
  40335e:	cmp    QWORD PTR [rsp+0x98],0x0
  403367:	je     0x40342e
  40336d:	movsxd rdx,DWORD PTR [rip+0xcf8]        # 0x40406c
  403374:	cmp    rsi,QWORD PTR [r15+rdx*8]
  403378:	je     0x40342e
  40337e:	cmp    al,0x2d
  403380:	je     0x403202
  403386:	test   BYTE PTR [rsp+0xa8],0x4
  40338e:	je     0x40342e
  403394:	xor    edx,edx
  403396:	cmp    al,0x3a
  403398:	je     0x4033b2
  40339a:	mov    rcx,QWORD PTR [rsp+0x90]
  4033a2:	movsx  edx,al
  4033a5:	call   0x403788
  4033aa:	xor    edx,edx
  4033ac:	test   rax,rax
  4033af:	setne  dl
  4033b2:	mov    DWORD PTR [rsp+0x20],edx
  4033b6:	mov    r9,QWORD PTR [rsp+0xa0]
  4033be:	mov    rcx,r15
  4033c1:	mov    r8,QWORD PTR [rsp+0x98]
  4033c9:	mov    rdx,QWORD PTR [rsp+0x90]
  4033d1:	call   0x402c50
  4033d6:	cmp    eax,0xffffffff
  4033d9:	je     0x403424
  4033db:	lea    rcx,[rip+0x1fd3]        # 0x4053b5
  4033e2:	mov    QWORD PTR [rip+0xc77],rcx        # 0x404060
  4033e9:	jmp    0x403313
  4033ee:	xchg   ax,ax
  4033f0:	add    ebx,0x1
  4033f3:	mov    QWORD PTR [rip+0x5656],r13        # 0x408a50
  4033fa:	mov    eax,0x1
  4033ff:	mov    DWORD PTR [rip+0xc67],ebx        # 0x40406c
  403405:	jmp    0x403313
  40340a:	mov    eax,DWORD PTR [rip+0xc48]        # 0x404058
  403410:	cmp    eax,0xffffffff
  403413:	je     0x4032fa
  403419:	mov    DWORD PTR [rip+0xc4d],eax        # 0x40406c
  40341f:	jmp    0x4032fa
  403424:	mov    rsi,QWORD PTR [rip+0xc35]        # 0x404060
  40342b:	movzx  eax,BYTE PTR [rsi]
  40342e:	lea    rbp,[rsi+0x1]
  403432:	movsx  ebx,al
  403435:	cmp    ebx,0x3a
  403438:	mov    QWORD PTR [rip+0xc21],rbp        # 0x404060
  40343f:	je     0x4034a4
  403441:	cmp    ebx,0x2d
  403444:	je     0x4035e7
  40344a:	mov    rcx,QWORD PTR [rsp+0x90]
  403452:	mov    edx,ebx
  403454:	call   0x403788
  403459:	test   rax,rax
  40345c:	je     0x4034a4
  40345e:	cmp    ebx,0x57
  403461:	jne    0x403506
  403467:	cmp    QWORD PTR [rsp+0x98],0x0
  403470:	je     0x403506
  403476:	movzx  edx,BYTE PTR [rax+0x1]
  40347a:	cmp    dl,0x3b
  40347d:	je     0x403560
  403483:	cmp    dl,0x3a
  403486:	je     0x4035fb
  40348c:	cmp    BYTE PTR [rsi+0x1],0x0
  403490:	mov    eax,ebx
  403492:	jne    0x403313
  403498:	add    DWORD PTR [rip+0xbcd],0x1        # 0x40406c
  40349f:	jmp    0x403313
  4034a4:	cmp    BYTE PTR [rsi+0x1],0x0
  4034a8:	jne    0x4034b1
  4034aa:	add    DWORD PTR [rip+0xbbb],0x1        # 0x40406c
  4034b1:	mov    ecx,DWORD PTR [rip+0xbb9]        # 0x404070
  4034b7:	test   ecx,ecx
  4034b9:	je     0x4034d6
  4034bb:	mov    rax,QWORD PTR [rsp+0x90]
  4034c3:	cmp    BYTE PTR [rax],0x3a
  4034c6:	je     0x4034d6
  4034c8:	lea    rcx,[rip+0x1f11]        # 0x4053e0
  4034cf:	mov    edx,ebx
  4034d1:	call   0x402bd0
  4034d6:	mov    DWORD PTR [rip+0xb8c],ebx        # 0x404068
  4034dc:	mov    eax,0x3f
  4034e1:	jmp    0x403313
  4034e6:	mov    rcx,QWORD PTR [rsp+0x90]
  4034ee:	mov    edx,0x2d
  4034f3:	call   0x403788
  4034f8:	test   rax,rax
  4034fb:	je     0x40330e
  403501:	mov    ebx,0x2d
  403506:	movzx  edx,BYTE PTR [rax+0x1]
  40350a:	jmp    0x403483
  40350f:	cmp    BYTE PTR [r13+0x2],0x0
  403514:	jne    0x4031e4
  40351a:	mov    esi,DWORD PTR [rip+0xb34]        # 0x404054
  403520:	lea    r8d,[rbx+0x1]
  403524:	lea    rax,[rip+0x1e8a]        # 0x4053b5
  40352b:	mov    DWORD PTR [rip+0xb3a],r8d        # 0x40406c
  403532:	mov    QWORD PTR [rip+0xb27],rax        # 0x404060
  403539:	cmp    esi,0xffffffff
  40353c:	je     0x4032fa
  403542:	mov    ecx,ebp
  403544:	mov    r9,r15
  403547:	mov    edx,esi
  403549:	call   0x402b20
  40354e:	sub    ebp,esi
  403550:	add    DWORD PTR [rip+0xb16],ebp        # 0x40406c
  403556:	jmp    0x4032fa
  40355b:	nop    DWORD PTR [rax+rax*1+0x0]
  403560:	cmp    BYTE PTR [rsi+0x1],0x0
  403564:	jne    0x4036b5
  40356a:	mov    eax,DWORD PTR [rip+0xafc]        # 0x40406c
  403570:	add    eax,0x1
  403573:	cmp    edi,eax
  403575:	mov    DWORD PTR [rip+0xaf1],eax        # 0x40406c
  40357b:	jg     0x4036a8
  403581:	mov    edx,DWORD PTR [rip+0xae9]        # 0x404070
  403587:	lea    rax,[rip+0x1e27]        # 0x4053b5
  40358e:	mov    QWORD PTR [rip+0xacb],rax        # 0x404060
  403595:	test   edx,edx
  403597:	je     0x4035b7
  403599:	mov    rax,QWORD PTR [rsp+0x90]
  4035a1:	cmp    BYTE PTR [rax],0x3a
  4035a4:	je     0x4035b7
  4035a6:	lea    rcx,[rip+0x1ef3]        # 0x4054a0
  4035ad:	mov    edx,0x57
  4035b2:	call   0x402bd0
  4035b7:	mov    rax,QWORD PTR [rsp+0x90]
  4035bf:	mov    DWORD PTR [rip+0xa9f],0x57        # 0x404068
  4035c9:	cmp    BYTE PTR [rax],0x3a
  4035cc:	je     0x40369e
  4035d2:	mov    eax,0x3f
  4035d7:	jmp    0x403313
  4035dc:	lea    rbp,[rsi+0x1]
  4035e0:	mov    QWORD PTR [rip+0xa79],rbp        # 0x404060
  4035e7:	cmp    BYTE PTR [rsi+0x1],0x0
  4035eb:	je     0x4034e6
  4035f1:	mov    ebx,0x2d
  4035f6:	jmp    0x4034b1
  4035fb:	mov    QWORD PTR [rip+0x544a],0x0        # 0x408a50
  403606:	cmp    BYTE PTR [rsi+0x1],0x0
  40360a:	je     0x403637
  40360c:	mov    eax,DWORD PTR [rip+0xa5a]        # 0x40406c
  403612:	mov    QWORD PTR [rip+0x5437],rbp        # 0x408a50
  403619:	lea    rcx,[rip+0x1d95]        # 0x4053b5
  403620:	add    eax,0x1
  403623:	mov    DWORD PTR [rip+0xa43],eax        # 0x40406c
  403629:	mov    eax,ebx
  40362b:	mov    QWORD PTR [rip+0xa2e],rcx        # 0x404060
  403632:	jmp    0x403313
  403637:	cmp    BYTE PTR [rax+0x2],0x3a
  40363b:	mov    eax,DWORD PTR [rip+0xa2b]        # 0x40406c
  403641:	je     0x403619
  403643:	add    eax,0x1
  403646:	cmp    edi,eax
  403648:	mov    DWORD PTR [rip+0xa1e],eax        # 0x40406c
  40364e:	jg     0x4036e2
  403654:	lea    rax,[rip+0x1d5a]        # 0x4053b5
  40365b:	mov    QWORD PTR [rip+0x9fe],rax        # 0x404060
  403662:	mov    eax,DWORD PTR [rip+0xa08]        # 0x404070
  403668:	test   eax,eax
  40366a:	je     0x403687
  40366c:	mov    rax,QWORD PTR [rsp+0x90]
  403674:	cmp    BYTE PTR [rax],0x3a
  403677:	je     0x403687
  403679:	lea    rcx,[rip+0x1e20]        # 0x4054a0
  403680:	mov    edx,ebx
  403682:	call   0x402bd0
  403687:	mov    rax,QWORD PTR [rsp+0x90]
  40368f:	mov    DWORD PTR [rip+0x9d3],ebx        # 0x404068
  403695:	cmp    BYTE PTR [rax],0x3a
  403698:	jne    0x4035d2
  40369e:	mov    eax,0x3a
  4036a3:	jmp    0x403313
  4036a8:	cdqe   
  4036aa:	mov    rax,QWORD PTR [r15+rax*8]
  4036ae:	mov    QWORD PTR [rip+0x9ab],rax        # 0x404060
  4036b5:	mov    r9,QWORD PTR [rsp+0xa0]
  4036bd:	mov    r8,QWORD PTR [rsp+0x98]
  4036c5:	mov    rcx,r15
  4036c8:	mov    rdx,QWORD PTR [rsp+0x90]
  4036d0:	mov    DWORD PTR [rsp+0x20],0x0
  4036d8:	call   0x402c50
  4036dd:	jmp    0x4033db
  4036e2:	movsxd rdx,eax
  4036e5:	mov    rdx,QWORD PTR [r15+rdx*8]
  4036e9:	mov    QWORD PTR [rip+0x5360],rdx        # 0x408a50
  4036f0:	jmp    0x403619
  4036f5:	nop
  4036f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403700:	sub    rsp,0x38
  403704:	xor    r9d,r9d
  403707:	mov    DWORD PTR [rsp+0x28],0x0
  40370f:	mov    QWORD PTR [rsp+0x20],0x0
  403718:	call   0x403010
  40371d:	add    rsp,0x38
  403721:	ret    
  403722:	nop    DWORD PTR [rax+0x0]
  403726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403730:	sub    rsp,0x38
  403734:	mov    rax,QWORD PTR [rsp+0x60]
  403739:	mov    DWORD PTR [rsp+0x28],0x1
  403741:	mov    QWORD PTR [rsp+0x20],rax
  403746:	call   0x403010
  40374b:	add    rsp,0x38
  40374f:	ret    
  403750:	sub    rsp,0x38
  403754:	mov    rax,QWORD PTR [rsp+0x60]
  403759:	mov    DWORD PTR [rsp+0x28],0x5
  403761:	mov    QWORD PTR [rsp+0x20],rax
  403766:	call   0x403010
  40376b:	add    rsp,0x38
  40376f:	ret    
  403770:	jmp    QWORD PTR [rip+0x5d0a]        # 0x409480
  403776:	nop
  403777:	nop
  403778:	jmp    QWORD PTR [rip+0x5cfa]        # 0x409478
  40377e:	nop
  40377f:	nop
  403780:	jmp    QWORD PTR [rip+0x5cea]        # 0x409470
  403786:	nop
  403787:	nop
  403788:	jmp    QWORD PTR [rip+0x5cda]        # 0x409468
  40378e:	nop
  40378f:	nop
  403790:	jmp    QWORD PTR [rip+0x5cca]        # 0x409460
  403796:	nop
  403797:	nop
  403798:	jmp    QWORD PTR [rip+0x5cba]        # 0x409458
  40379e:	nop
  40379f:	nop
  4037a0:	jmp    QWORD PTR [rip+0x5caa]        # 0x409450
  4037a6:	nop
  4037a7:	nop
  4037a8:	jmp    QWORD PTR [rip+0x5c9a]        # 0x409448
  4037ae:	nop
  4037af:	nop
  4037b0:	jmp    QWORD PTR [rip+0x5c8a]        # 0x409440
  4037b6:	nop
  4037b7:	nop
  4037b8:	jmp    QWORD PTR [rip+0x5c7a]        # 0x409438
  4037be:	nop
  4037bf:	nop
  4037c0:	jmp    QWORD PTR [rip+0x5c6a]        # 0x409430
  4037c6:	nop
  4037c7:	nop
  4037c8:	jmp    QWORD PTR [rip+0x5c5a]        # 0x409428
  4037ce:	nop
  4037cf:	nop
  4037d0:	jmp    QWORD PTR [rip+0x5c4a]        # 0x409420
  4037d6:	nop
  4037d7:	nop
  4037d8:	jmp    QWORD PTR [rip+0x5c3a]        # 0x409418
  4037de:	nop
  4037df:	nop
  4037e0:	jmp    QWORD PTR [rip+0x5c2a]        # 0x409410
  4037e6:	nop
  4037e7:	nop
  4037e8:	jmp    QWORD PTR [rip+0x5c1a]        # 0x409408
  4037ee:	nop
  4037ef:	nop
  4037f0:	jmp    QWORD PTR [rip+0x5c0a]        # 0x409400
  4037f6:	nop
  4037f7:	nop
  4037f8:	jmp    QWORD PTR [rip+0x5bfa]        # 0x4093f8
  4037fe:	nop
  4037ff:	nop
  403800:	jmp    QWORD PTR [rip+0x5bea]        # 0x4093f0
  403806:	nop
  403807:	nop
  403808:	jmp    QWORD PTR [rip+0x5bda]        # 0x4093e8
  40380e:	nop
  40380f:	nop
  403810:	jmp    QWORD PTR [rip+0x5bca]        # 0x4093e0
  403816:	nop
  403817:	nop
  403818:	jmp    QWORD PTR [rip+0x5bba]        # 0x4093d8
  40381e:	nop
  40381f:	nop
  403820:	jmp    QWORD PTR [rip+0x5ba2]        # 0x4093c8
  403826:	nop
  403827:	nop
  403828:	jmp    QWORD PTR [rip+0x5b92]        # 0x4093c0
  40382e:	nop
  40382f:	nop
  403830:	jmp    QWORD PTR [rip+0x5b7a]        # 0x4093b0
  403836:	nop
  403837:	nop
  403838:	jmp    QWORD PTR [rip+0x5b6a]        # 0x4093a8
  40383e:	nop
  40383f:	nop
  403840:	jmp    QWORD PTR [rip+0x5b5a]        # 0x4093a0
  403846:	nop
  403847:	nop
  403848:	jmp    QWORD PTR [rip+0x5b4a]        # 0x409398
  40384e:	nop
  40384f:	nop
  403850:	jmp    QWORD PTR [rip+0x5b32]        # 0x409388
  403856:	nop
  403857:	nop
  403858:	jmp    QWORD PTR [rip+0x5b22]        # 0x409380
  40385e:	nop
  40385f:	nop
  403860:	jmp    QWORD PTR [rip+0x5b0a]        # 0x409370
  403866:	nop
  403867:	nop
  403868:	nop    DWORD PTR [rax+rax*1+0x0]
  403870:	mov    rax,QWORD PTR [rip+0x5179]        # 0x4089f0
  403877:	ret    
  403878:	nop    DWORD PTR [rax+rax*1+0x0]
  403880:	mov    rax,rcx
  403883:	xchg   QWORD PTR [rip+0x5166],rax        # 0x4089f0
  40388a:	ret    
  40388b:	nop
  40388c:	nop
  40388d:	nop
  40388e:	nop
  40388f:	nop
  403890:	jmp    QWORD PTR [rip+0x5aca]        # 0x409360
  403896:	nop
  403897:	nop
  403898:	jmp    QWORD PTR [rip+0x5aba]        # 0x409358
  40389e:	nop
  40389f:	nop
  4038a0:	jmp    QWORD PTR [rip+0x5aaa]        # 0x409350
  4038a6:	nop
  4038a7:	nop
  4038a8:	jmp    QWORD PTR [rip+0x5a9a]        # 0x409348
  4038ae:	nop
  4038af:	nop
  4038b0:	jmp    QWORD PTR [rip+0x5a8a]        # 0x409340
  4038b6:	nop
  4038b7:	nop
  4038b8:	jmp    QWORD PTR [rip+0x5a7a]        # 0x409338
  4038be:	nop
  4038bf:	nop
  4038c0:	jmp    QWORD PTR [rip+0x5a6a]        # 0x409330
  4038c6:	nop
  4038c7:	nop
  4038c8:	jmp    QWORD PTR [rip+0x5a5a]        # 0x409328
  4038ce:	nop
  4038cf:	nop
  4038d0:	jmp    QWORD PTR [rip+0x5a4a]        # 0x409320
  4038d6:	nop
  4038d7:	nop
  4038d8:	jmp    QWORD PTR [rip+0x5a3a]        # 0x409318
  4038de:	nop
  4038df:	nop
  4038e0:	jmp    QWORD PTR [rip+0x5a2a]        # 0x409310
  4038e6:	nop
  4038e7:	nop
  4038e8:	jmp    QWORD PTR [rip+0x5a1a]        # 0x409308
  4038ee:	nop
  4038ef:	nop
  4038f0:	jmp    QWORD PTR [rip+0x5a0a]        # 0x409300
  4038f6:	nop
  4038f7:	nop
  4038f8:	jmp    QWORD PTR [rip+0x59fa]        # 0x4092f8
  4038fe:	nop
  4038ff:	nop
  403900:	jmp    QWORD PTR [rip+0x59ea]        # 0x4092f0
  403906:	nop
  403907:	nop
  403908:	jmp    QWORD PTR [rip+0x59da]        # 0x4092e8
  40390e:	nop
  40390f:	nop
  403910:	jmp    QWORD PTR [rip+0x59ca]        # 0x4092e0
  403916:	nop
  403917:	nop
  403918:	jmp    QWORD PTR [rip+0x59ba]        # 0x4092d8
  40391e:	nop
  40391f:	nop
  403920:	jmp    QWORD PTR [rip+0x59aa]        # 0x4092d0
  403926:	nop
  403927:	nop
  403928:	jmp    QWORD PTR [rip+0x599a]        # 0x4092c8
  40392e:	nop
  40392f:	nop
  403930:	jmp    QWORD PTR [rip+0x598a]        # 0x4092c0
  403936:	nop
  403937:	nop
  403938:	jmp    QWORD PTR [rip+0x597a]        # 0x4092b8
  40393e:	nop
  40393f:	nop
  403940:	jmp    QWORD PTR [rip+0x596a]        # 0x4092b0
  403946:	nop
  403947:	nop
  403948:	nop    DWORD PTR [rax+rax*1+0x0]
  403950:	push   rbp
  403951:	push   rdi
  403952:	push   rsi
  403953:	push   rbx
  403954:	sub    rsp,0x58
  403958:	movaps XMMWORD PTR [rsp+0x30],xmm6
  40395d:	movaps XMMWORD PTR [rsp+0x40],xmm7
  403962:	xor    edi,edi
  403964:	mov    ebx,ecx
  403966:	mov    rsi,rdx
  403969:	call   0x401730
  40396e:	jmp    0x40397e
  403970:	cmp    eax,0x75
  403973:	mov    edi,0x1
  403978:	jne    0x403abd
  40397e:	lea    r8,[rip+0x1779]        # 0x4050fe
  403985:	mov    rdx,rsi
  403988:	mov    ecx,ebx
  40398a:	call   0x403700
  40398f:	cmp    eax,0xffffffff
  403992:	jne    0x403970
  403994:	mov    rbp,QWORD PTR [rip+0x1d35]        # 0x4056d0
  40399b:	mov    edx,ebx
  40399d:	movsxd rax,DWORD PTR [rbp+0x0]
  4039a1:	sub    edx,eax
  4039a3:	cmp    edx,0x1
  4039a6:	jle    0x403abd
  4039ac:	mov    rcx,QWORD PTR [rsi+rax*8]
  4039b0:	lea    edx,[rax+0x1]
  4039b3:	mov    DWORD PTR [rbp+0x0],edx
  4039b6:	call   0x4037f0
  4039bb:	movsxd rax,DWORD PTR [rbp+0x0]
  4039bf:	movapd xmm6,xmm0
  4039c3:	mov    rcx,QWORD PTR [rsi+rax*8]
  4039c7:	lea    edx,[rax+0x1]
  4039ca:	mov    DWORD PTR [rbp+0x0],edx
  4039cd:	call   0x4037f0
  4039d2:	movsxd rax,DWORD PTR [rbp+0x0]
  4039d6:	movapd xmm7,xmm0
  4039da:	sub    ebx,eax
  4039dc:	test   ebx,ebx
  4039de:	jle    0x403a81
  4039e4:	mov    rcx,QWORD PTR [rsi+rax*8]
  4039e8:	lea    edx,[rax+0x1]
  4039eb:	mov    DWORD PTR [rbp+0x0],edx
  4039ee:	call   0x4037e8
  4039f3:	movsxd rcx,eax
  4039f6:	call   0x4015b0
  4039fb:	movapd xmm2,xmm7
  4039ff:	mov    rcx,rax
  403a02:	movapd xmm1,xmm6
  403a06:	mov    rbx,rax
  403a09:	lea    rbp,[rsp+0x28]
  403a0e:	call   0x401588
  403a13:	mov    rsi,QWORD PTR [rip+0x597e]        # 0x409398
  403a1a:	jmp    0x403a2e
  403a1c:	nop    DWORD PTR [rax+0x0]
  403a20:	movsd  xmm1,QWORD PTR [rsp+0x28]
  403a26:	mov    rcx,rbx
  403a29:	call   0x401598
  403a2e:	call   rsi
  403a30:	lea    rdx,[rip+0x16c9]        # 0x405100
  403a37:	mov    rcx,rax
  403a3a:	mov    r8,rbp
  403a3d:	call   0x4037b8
  403a42:	cmp    eax,0x1
  403a45:	je     0x403a20
  403a47:	test   edi,edi
  403a49:	jne    0x403a95
  403a4b:	call   rsi
  403a4d:	lea    r9,[rip+0x16b0]        # 0x405104
  403a54:	lea    rcx,[rax+0x30]
  403a58:	mov    rdx,rbx
  403a5b:	mov    r8,r9
  403a5e:	call   0x4015a8
  403a63:	mov    rcx,rbx
  403a66:	call   0x4015a0
  403a6b:	nop
  403a6c:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  403a71:	xor    eax,eax
  403a73:	movaps xmm7,XMMWORD PTR [rsp+0x40]
  403a78:	add    rsp,0x58
  403a7c:	pop    rbx
  403a7d:	pop    rsi
  403a7e:	pop    rdi
  403a7f:	pop    rbp
  403a80:	ret    
  403a81:	movapd xmm3,xmm0
  403a85:	subsd  xmm3,xmm6
  403a89:	cvttsd2si ecx,xmm3
  403a8d:	movsxd rcx,ecx
  403a90:	jmp    0x4039f6
  403a95:	mov    rcx,rbx
  403a98:	call   0x401580
  403a9d:	ucomisd xmm0,QWORD PTR [rip+0x1663]        # 0x405108
  403aa5:	jbe    0x403a4b
  403aa7:	movsd  xmm1,QWORD PTR [rip+0x1661]        # 0x405110
  403aaf:	mov    rcx,rbx
  403ab2:	divsd  xmm1,xmm0
  403ab6:	call   0x401590
  403abb:	jmp    0x403a4b
  403abd:	call   0x401530
  403ac2:	xor    ecx,ecx
  403ac4:	call   0x4037d8
  403ac9:	nop
  403aca:	nop
  403acb:	nop
  403acc:	nop
  403acd:	nop
  403ace:	nop
  403acf:	nop
  403ad0:	(bad)  
  403ad1:	(bad)  
  403ad2:	(bad)  
  403ad3:	(bad)  
  403ad4:	(bad)  
  403ad5:	(bad)  
  403ad6:	(bad)  
  403ad7:	inc    DWORD PTR [rax]
  403ad9:	add    BYTE PTR [rax],al
  403adb:	add    BYTE PTR [rax],al
  403add:	add    BYTE PTR [rax],al
  403adf:	add    bh,bh
  403ae1:	(bad)  
  403ae2:	(bad)  
  403ae3:	(bad)  
  403ae4:	(bad)  
  403ae5:	(bad)  
  403ae6:	(bad)  
  403ae7:	inc    DWORD PTR [rax]
  403ae9:	add    BYTE PTR [rax],al
  403aeb:	add    BYTE PTR [rax],al
  403aed:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	call   0x40804f
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	(bad)  
  404054:	(bad)  
  404055:	(bad)  
  404056:	(bad)  
  404057:	(bad)  
  404058:	(bad)  
  404059:	(bad)  
  40405a:	(bad)  
  40405b:	inc    DWORD PTR [rax]
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rbp+0x4053],dh
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rdi],bh
  404069:	add    BYTE PTR [rax],al
  40406b:	add    BYTE PTR [rcx],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rcx],al
	...
  40407d:	add    BYTE PTR [rax],al
  40407f:	add    bh,bh
  404081:	(bad)  
  404082:	(bad)  
  404083:	inc    DWORD PTR [rax]
	...
  40408d:	add    BYTE PTR [rax],al
  40408f:	add    BYTE PTR [rax+0x38],dh
  404092:	add    BYTE PTR [rax],al
  404095:	add    BYTE PTR [rax],al
  404097:	add    BYTE PTR [rax+0x4038],al
  40409d:	add    BYTE PTR [rax],al
  40409f:	add    BYTE PTR [rdx],dh
  4040a1:	movabs ds:0x2b992ddf,al
  4040aa:	add    BYTE PTR [rax],al
  4040ac:	add    BYTE PTR [rax],al
  4040ae:	add    BYTE PTR [rax],al
  4040b0:	int    0x5d
  4040b2:	and    dl,dl
  4040b4:	data16 (bad) 
  4040b6:	(bad)  
  4040b7:	inc    DWORD PTR [rax]
  4040b9:	add    BYTE PTR [rax],al
  4040bb:	add    BYTE PTR [rax],al
  4040bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	push   rbp
  405001:	jae    0x405064
  405003:	cmp    ah,BYTE PTR gs:[eax]
  405007:	addr32 jae 0x405076
  40500a:	sub    eax,0x74736968
  40500f:	outs   dx,DWORD PTR ds:[rsi]
  405010:	addr32 jb 0x405074
  405013:	ins    DWORD PTR es:[rdi],dx
  405014:	and    BYTE PTR [rbx+0x2d],bl
  405017:	jne    0x405076
  405019:	and    BYTE PTR [rax+0x6d],bh
  40501c:	imul   ebp,DWORD PTR [rsi+0x20],0x78616d78
  405023:	and    BYTE PTR [rbx+0x6e],bl
  405026:	pop    rbp
  405027:	or     al,BYTE PTR [rax]
  405029:	add    BYTE PTR [rax],al
  40502b:	add    BYTE PTR [rax],al
  40502d:	add    BYTE PTR [rax],al
  40502f:	add    BYTE PTR [rbx+0x6f],al
  405032:	ins    DWORD PTR es:[rdi],dx
  405033:	jo     0x4050aa
  405035:	je     0x40509c
  405037:	jae    0x405059
  405039:	(bad)  
  40503a:	and    BYTE PTR [rax+0x69],ch
  40503d:	jae    0x4050b3
  40503f:	outs   dx,DWORD PTR ds:[rsi]
  405040:	addr32 jb 0x4050a4
  405043:	ins    DWORD PTR es:[rdi],dx
  405044:	and    BYTE PTR [rdi+0x66],ch
  405047:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40504b:	and    BYTE PTR [rcx+riz*2+0x74],ah
  40504f:	(bad)  
  405050:	and    BYTE PTR [rdi+0x6e],ch
  405053:	and    BYTE PTR [rbx+0x74],dh
  405056:	imul   ebp,DWORD PTR fs:[rsi+0x20],0x6e697375
  40505e:	and    BYTE PTR [esi+0x20],ch
  405062:	(bad)  
  405063:	imul   ebp,DWORD PTR [rsi+0x73],0x6f726620
  40506a:	ins    DWORD PTR es:[rdi],dx
  40506b:	and    BYTE PTR [rax+0x6d],bh
  40506e:	imul   ebp,DWORD PTR [rsi+0x20],0x78206f74
  405075:	ins    DWORD PTR es:[rdi],dx
  405076:	(bad)  
  405077:	js     0x4050a7
  405079:	or     cl,BYTE PTR [rcx+0x66]
  40507c:	and    BYTE PTR [rsi+0x20],ch
  40507f:	imul   esi,DWORD PTR [rbx+0x20],0x70736e75
  405086:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40508a:	imul   esp,DWORD PTR [rbp+0x64],0x65687420
  405091:	outs   dx,BYTE PTR ds:[rsi]
  405092:	and    BYTE PTR [rdx+0x69],ah
  405095:	outs   dx,BYTE PTR ds:[rsi]
  405096:	jae    0x4050b8
  405098:	outs   dx,DWORD PTR ds:[rsi]
  405099:	data16 and BYTE PTR [rcx+0x6e],ch
  40509d:	je     0x405104
  40509f:	addr32 gs jb 0x4050c3
  4050a3:	ja     0x40510e
  4050a5:	fs je  0x405110
  4050a8:	and    BYTE PTR [rcx+0x72],ah
  4050ab:	and    BYTE PTR gs:[rbp+0x73],dh
  4050af:	gs fs or cl,BYTE PTR cs:[rcx+0x66]
  4050b5:	and    BYTE PTR [rip+0x73692075],ch        # 0x73a97130
  4050bb:	and    BYTE PTR [rdi+0x69],ah
  4050be:	jbe    0x405125
  4050c0:	outs   dx,BYTE PTR ds:[rsi]
  4050c1:	sub    al,0x20
  4050c3:	push   0x6f747369
  4050c8:	addr32 jb 0x40512c
  4050cb:	ins    DWORD PTR es:[rdi],dx
  4050cc:	and    BYTE PTR [rcx+0x73],ch
  4050cf:	and    BYTE PTR [rsi+0x6f],ch
  4050d2:	jb     0x405141
  4050d4:	(bad)  
  4050d5:	ins    BYTE PTR es:[rdi],dx
  4050d6:	imul   edi,DWORD PTR [rdx+0x65],0x6f732064
  4050dd:	and    BYTE PTR [rax+rbp*2+0x61],dh
  4050e1:	je     0x405103
  4050e3:	jae    0x40515a
  4050e5:	ins    DWORD PTR es:[rdi],dx
  4050e6:	and    BYTE PTR [rdi+0x66],ch
  4050e9:	and    BYTE PTR [rcx+0x6c],ah
  4050ec:	ins    BYTE PTR es:[rdi],dx
  4050ed:	and    BYTE PTR [rdx+0x69],ah
  4050f0:	outs   dx,BYTE PTR ds:[rsi]
  4050f1:	jae    0x405113
  4050f3:	imul   esi,DWORD PTR [rbx+0x20],0x74696e75
  4050fa:	jns    0x40512a
  4050fc:	or     al,BYTE PTR [rax]
  4050fe:	jne    0x405100
  405100:	and    eax,0x2500676c
  405105:	add    BYTE PTR [eax],al
	...
  405114:	add    BYTE PTR [rax],al
  405116:	lock (bad) 
	...
  405120:	add    BYTE PTR [rbp+0x40],0x0
  405127:	add    BYTE PTR [rax+0x4080],al
  40512d:	add    BYTE PTR [rax],al
  40512f:	add    BYTE PTR [rax+0x4019],al
	...
  40513d:	add    BYTE PTR [rax],al
  40513f:	add    BYTE PTR [rcx+0x72],al
  405142:	addr32 jne 0x4051b2
  405145:	outs   dx,BYTE PTR gs:[rsi]
  405147:	je     0x405169
  405149:	outs   dx,DWORD PTR fs:[rsi]
  40514b:	ins    DWORD PTR es:[rdi],dx
  40514c:	(bad)  
  40514d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  405154:	jb     0x405176
  405156:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40515a:	rex.B
  40515b:	rex.WB
  40515c:	rex.WRX sub QWORD PTR [rax],r8
  40515f:	rex.B jb 0x4051c9
  405162:	jne    0x4051d1
  405164:	outs   dx,BYTE PTR gs:[rsi]
  405166:	je     0x405188
  405168:	jae    0x4051d3
  40516a:	outs   dx,BYTE PTR ds:[rsi]
  40516b:	addr32 jne 0x4051da
  40516e:	(bad)  
  40516f:	jb     0x4051da
  405171:	je     0x4051ec
  405173:	and    BYTE PTR [rax],ch
  405175:	push   rbx
  405176:	rex.WB
  405177:	rex.RXB
  405178:	rex.WRX sub QWORD PTR [rax],r8
  40517b:	add    BYTE PTR [rax],al
  40517d:	add    BYTE PTR [rax],al
  40517f:	add    BYTE PTR [rdi+0x76],cl
  405182:	gs jb  0x4051eb
  405185:	ins    BYTE PTR es:[rdi],dx
  405186:	outs   dx,DWORD PTR ds:[rsi]
  405187:	ja     0x4051a9
  405189:	jb     0x4051ec
  40518b:	outs   dx,BYTE PTR ds:[rsi]
  40518c:	and    BYTE PTR gs:[ebp+0x72],ah
  405191:	jb     0x405202
  405193:	jb     0x4051b5
  405195:	sub    BYTE PTR [rdi+0x56],cl
  405198:	rex.RB push r10
  40519a:	rex.RX
  40519b:	rex.WR
  40519c:	rex.WRXB push r15
  40519e:	sub    DWORD PTR [rax],eax
  4051a0:	push   rax
  4051a1:	(bad)  
  4051a2:	jb     0x405218
  4051a4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4051ab:	jae    0x4051cd
  4051ad:	outs   dx,DWORD PTR ds:[rsi]
  4051ae:	data16 and BYTE PTR [rbx+0x69],dh
  4051b2:	outs   dx,BYTE PTR ds:[esi]
  4051b4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4051bb:	and    BYTE PTR gs:[rax],ch
  4051be:	push   rax
  4051bf:	rex.WR
  4051c0:	rex.WRXB push r11
  4051c2:	push   rbx
  4051c3:	sub    DWORD PTR [rax],eax
  4051c5:	add    BYTE PTR [rax],al
  4051c7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  4051cb:	(bad)  
  4051cc:	ins    BYTE PTR es:[rdi],dx
  4051cd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4051d1:	jae    0x4051f3
  4051d3:	outs   dx,DWORD PTR ds:[rsi]
  4051d4:	data16 and BYTE PTR [rbx+0x69],dh
  4051d8:	outs   dx,BYTE PTR ds:[esi]
  4051da:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4051e1:	and    BYTE PTR gs:[rax],ch
  4051e4:	push   rsp
  4051e5:	rex.WR
  4051e6:	rex.WRXB push r11
  4051e8:	push   rbx
  4051e9:	sub    DWORD PTR [rax],eax
  4051eb:	add    BYTE PTR [rax],al
  4051ed:	add    BYTE PTR [rax],al
  4051ef:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4051f3:	and    BYTE PTR [rdx+0x65],dh
  4051f6:	jae    0x40526d
  4051f8:	ins    BYTE PTR es:[rdi],dx
  4051f9:	je     0x40521b
  4051fb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405202:	jae    0x405271
  405204:	(bad)  
  405205:	ins    BYTE PTR es:[rdi],dx
  405206:	ins    BYTE PTR es:[rdi],dx
  405207:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40520b:	(bad)  
  40520c:	and    BYTE PTR gs:[rdx+0x65],dh
  405210:	jo     0x405284
  405212:	gs jae 0x40527a
  405215:	outs   dx,BYTE PTR ds:[rsi]
  405216:	je     0x40527d
  405218:	and    BYTE PTR fs:[rax],ch
  40521b:	push   rbp
  40521c:	rex.WRX
  40521d:	rex.R
  40521e:	rex.RB push r10
  405220:	rex.RX
  405221:	rex.WR
  405222:	rex.WRXB push r15
  405224:	sub    DWORD PTR [rax],eax
  405226:	push   rbp
  405227:	outs   dx,BYTE PTR ds:[rsi]
  405228:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40522c:	outs   dx,BYTE PTR ds:[rsi]
  40522d:	and    BYTE PTR [rbp+0x72],ah
  405230:	jb     0x4052a1
  405232:	jb     0x405234
  405234:	add    BYTE PTR [rax],al
  405236:	add    BYTE PTR [rax],al
  405238:	pop    rdi
  405239:	ins    DWORD PTR es:[rdi],dx
  40523a:	(bad)  
  40523b:	je     0x4052a5
  40523d:	gs jb  0x4052b2
  405240:	sub    BYTE PTR [rcx],ch
  405242:	cmp    ah,BYTE PTR [rax]
  405244:	and    eax,0x6e692073
  405249:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657ac2
  40524f:	sub    al,0x20
  405251:	and    eax,0x20202967
  405256:	sub    BYTE PTR [rdx+0x65],dh
  405259:	je     0x4052d1
  40525b:	(bad)  
  40525c:	ins    BYTE PTR es:[rdi],dx
  40525d:	cmp    eax,0xa296725
  405262:	add    BYTE PTR [rax],al
  405264:	in     al,dx
  405265:	enter  0xffff,0x2d
  405269:	enter  0xffff,0x9c
  40526d:	enter  0xffff,0xac
  405271:	enter  0xffff,0xbc
  405275:	enter  0xffff,0xcc
  405279:	enter  0xffff,0xdc
  40527d:	enter  0xffff,0x4d
  405281:	imul   ebp,DWORD PTR [rsi+0x67],0x36772d77
  405288:	xor    al,0x20
  40528a:	jb     0x405301
  40528c:	outs   dx,BYTE PTR ds:[rsi]
  40528d:	je     0x4052f8
  40528f:	ins    DWORD PTR es:[rdi],dx
  405290:	and    BYTE PTR gs:[rsi+0x61],ah
  405294:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40529c:	add    BYTE PTR [rax],al
  40529e:	add    BYTE PTR [rax],al
  4052a0:	rex.B
  4052a1:	fs fs jb 0x40530a
  4052a5:	jae    0x40531a
  4052a7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8731d
  4052ad:	jae    0x4052cf
  4052af:	outs   dx,BYTE PTR ds:[rsi]
  4052b0:	outs   dx,DWORD PTR ds:[rsi]
  4052b1:	and    BYTE PTR [rcx+0x6d],ch
  4052b4:	(bad)  
  4052b5:	addr32 gs sub eax,0x74636573
  4052bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  4052c3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4052ca:	jne    0x405331
  4052cc:	jb     0x405347
  4052ce:	and    BYTE PTR [rsi+0x61],ah
  4052d1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4052d9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a27343
  4052df:	je     0x405346
  4052e1:	jae    0x405303
  4052e3:	(bad)  
  4052e4:	je     0x405306
  4052e6:	(bad)  
  4052e7:	fs fs jb 0x405350
  4052eb:	jae    0x405360
  4052ed:	and    BYTE PTR [rip+0x70],ah        # 0x405363
  4052f3:	add    BYTE PTR [rax],al
  4052f5:	add    BYTE PTR [rax],al
  4052f7:	add    BYTE PTR [rax],ah
  4052f9:	and    BYTE PTR [rsi+0x69],dl
  4052fc:	jb     0x405372
  4052fe:	jne    0x405361
  405300:	ins    BYTE PTR es:[rdi],dx
  405301:	push   rax
  405302:	jb     0x405373
  405304:	je     0x40536b
  405306:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40530a:	(bad)  
  40530b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405313:	push   0x646f6320
  405318:	and    BYTE PTR gs:[rax],dh
  40531b:	js     0x405342
  40531d:	js     0x40531f
  40531f:	add    BYTE PTR [rax],ah
  405321:	and    BYTE PTR [rbp+0x6e],dl
  405324:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405328:	outs   dx,BYTE PTR ds:[rsi]
  405329:	and    BYTE PTR [rax+0x73],dh
  40532c:	gs jne 0x405393
  40532f:	outs   dx,DWORD PTR ds:[rsi]
  405330:	and    BYTE PTR [rdx+0x65],dh
  405333:	ins    BYTE PTR es:[rdi],dx
  405334:	outs   dx,DWORD PTR ds:[rsi]
  405335:	movsxd esp,DWORD PTR [rcx+0x74]
  405338:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40533f:	je     0x4053b0
  405341:	movsxd ebp,DWORD PTR [rdi+0x6c]
  405344:	and    BYTE PTR [rsi+0x65],dh
  405347:	jb     0x4053bc
  405349:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405350:	or     al,BYTE PTR [rax]
  405352:	add    BYTE PTR [rax],al
  405354:	add    BYTE PTR [rax],al
  405356:	add    BYTE PTR [rax],al
  405358:	and    BYTE PTR [rax],ah
  40535a:	push   rbp
  40535b:	outs   dx,BYTE PTR ds:[rsi]
  40535c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405360:	outs   dx,BYTE PTR ds:[rsi]
  405361:	and    BYTE PTR [rax+0x73],dh
  405364:	gs jne 0x4053cb
  405367:	outs   dx,DWORD PTR ds:[rsi]
  405368:	and    BYTE PTR [rdx+0x65],dh
  40536b:	ins    BYTE PTR es:[rdi],dx
  40536c:	outs   dx,DWORD PTR ds:[rsi]
  40536d:	movsxd esp,DWORD PTR [rcx+0x74]
  405370:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405377:	and    BYTE PTR [rbx+0x69],dh
  40537a:	jp     0x4053e1
  40537c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a81e6
	...
  40538e:	add    BYTE PTR [rax],al
  405390:	cs jo  0x4053f7
  405393:	(bad)  
  405394:	je     0x4053f7
	...
  40539e:	add    BYTE PTR [rax],al
  4053a0:	and    eax,0x203a73
  4053a5:	push   rax
  4053a6:	rex.WRXB push r11
  4053a8:	rex.WB pop r8
  4053aa:	rex.WR pop rcx
  4053ac:	pop    rdi
  4053ad:	rex.XB
  4053ae:	rex.WRXB push r10
  4053b0:	push   rdx
  4053b1:	rex.RB
  4053b2:	rex.XB push r12
	...
  4053c0:	jne    0x405430
  4053c2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4053c6:	outs   dx,BYTE PTR ds:[rsi]
  4053c7:	and    BYTE PTR [rdi+0x70],ch
  4053ca:	je     0x405435
  4053cc:	outs   dx,DWORD PTR ds:[rsi]
  4053cd:	outs   dx,BYTE PTR ds:[rsi]
  4053ce:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73657401
	...
  4053e0:	jne    0x405450
  4053e2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4053e6:	outs   dx,BYTE PTR ds:[rsi]
  4053e7:	and    BYTE PTR [rdi+0x70],ch
  4053ea:	je     0x405455
  4053ec:	outs   dx,DWORD PTR ds:[rsi]
  4053ed:	outs   dx,BYTE PTR ds:[rsi]
  4053ee:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63657421
	...
  405400:	outs   dx,DWORD PTR ds:[rsi]
  405401:	jo     0x405477
  405403:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  40540a:	jae    0x40547a
  40540c:	(bad)  
  40540d:	je     0x40542f
  40540f:	je     0x405472
  405411:	imul   esp,DWORD PTR [rbp+0x20],0x61
  405415:	outs   dx,BYTE PTR ds:[rsi]
  405416:	and    BYTE PTR [rcx+0x72],ah
  405419:	addr32 jne 0x405489
  40541c:	outs   dx,BYTE PTR gs:[rsi]
  40541e:	je     0x405440
  405420:	sub    eax,0x2e25202d
  405425:	sub    dh,BYTE PTR [rbx+0x0]
	...
  405430:	(bad)  
  405431:	ins    DWORD PTR es:[rdi],dx
  405432:	(bad)  
  405433:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  40543a:	outs   dx,DWORD PTR ds:[rsi]
  40543b:	jo     0x4054b1
  40543d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  405444:	and    eax,0x732a2e
	...
  40545d:	add    BYTE PTR [rax],al
  40545f:	add    BYTE PTR [rdi+0x70],ch
  405462:	je     0x4054cd
  405464:	outs   dx,DWORD PTR ds:[rsi]
  405465:	outs   dx,BYTE PTR ds:[rsi]
  405466:	and    BYTE PTR [rdx+0x65],dh
  405469:	jno    0x4054e0
  40546b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  405472:	and    BYTE PTR [rcx+0x72],ah
  405475:	addr32 jne 0x4054e5
  405478:	outs   dx,BYTE PTR gs:[rsi]
  40547a:	je     0x40549c
  40547c:	sub    eax,0x7325202d
	...
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rdi+0x70],ch
  4054a2:	je     0x40550d
  4054a4:	outs   dx,DWORD PTR ds:[rsi]
  4054a5:	outs   dx,BYTE PTR ds:[rsi]
  4054a6:	and    BYTE PTR [rdx+0x65],dh
  4054a9:	jno    0x405520
  4054ab:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  4054b2:	and    BYTE PTR [rcx+0x72],ah
  4054b5:	addr32 jne 0x405525
  4054b8:	outs   dx,BYTE PTR gs:[rsi]
  4054ba:	je     0x4054dc
  4054bc:	sub    eax,0x6325202d
	...
  4054dd:	add    BYTE PTR [rax],al
  4054df:	add    BYTE PTR [rax+0x40],al
  4054e2:	add    BYTE PTR [rax],al
	...
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    BYTE PTR [rax+0x4040],al
	...
  4054fd:	add    BYTE PTR [rax],al
  4054ff:	add    al,dl
  405501:	cmp    al,BYTE PTR [rax+0x0]
	...
  405510:	(bad)  
  405511:	pop    rdx
  405512:	add    BYTE PTR [rax],al
	...
  40551d:	add    BYTE PTR [rax],al
  40551f:	add    BYTE PTR [rax+0x5a],ah
  405522:	add    BYTE PTR [rax],al
	...
  40552d:	add    BYTE PTR [rax],al
  40552f:	add    BYTE PTR [rax],dh
  405531:	push   rcx
  405532:	add    BYTE PTR [rax],al
	...
  405541:	add    BYTE PTR [rax+0x0],al
	...
  405550:	js     0x4054e5
  405552:	add    BYTE PTR [rax],al
	...
  40555d:	add    BYTE PTR [rax],al
  40555f:	add    BYTE PTR [rax+0x4093],dl
	...
  40556d:	add    BYTE PTR [rax],al
  40556f:	add    BYTE PTR [rax+0x4093],bh
	...
  40557d:	add    BYTE PTR [rax],al
  40557f:	add    al,dl
  405581:	xchg   ebx,eax
  405582:	add    BYTE PTR [rax],al
	...
  40558d:	add    BYTE PTR [rax],al
  40558f:	add    al,ch
  405591:	xchg   ebx,eax
  405592:	add    BYTE PTR [rax],al
	...
  40559d:	add    BYTE PTR [rax],al
  40559f:	add    al,al
  4055a1:	xchg   BYTE PTR [rax+0x0],al
	...
  4055b0:	sub    BYTE PTR [rdx+0x40],cl
	...
  4055be:	add    BYTE PTR [rax],al
  4055c0:	and    BYTE PTR [rdx+0x40],cl
	...
  4055ce:	add    BYTE PTR [rax],al
  4055d0:	adc    BYTE PTR [rdx+0x40],cl
	...
  4055de:	add    BYTE PTR [rax],al
  4055e0:	sbb    BYTE PTR [rdx+0x40],cl
	...
  4055ee:	add    BYTE PTR [rax],al
  4055f0:	add    BYTE PTR [rax+0x40],ah
	...
  4055fe:	add    BYTE PTR [rax],al
  405600:	adc    BYTE PTR [rax+0x40],ah
	...
  40560e:	add    BYTE PTR [rax],al
  405610:	sbb    BYTE PTR [rax+0x40],ah
	...
  40561e:	add    BYTE PTR [rax],al
  405620:	xor    BYTE PTR [rax+0x40],ah
	...
  40562e:	add    BYTE PTR [rax],al
  405630:	rex add BYTE PTR [rax+0x0],0x0
	...
  40563d:	add    BYTE PTR [rax],al
  40563f:	add    BYTE PTR [rax+0x4086],dl
	...
  40564d:	add    BYTE PTR [rax],al
  40564f:	add    BYTE PTR [rax],dl
  405651:	and    eax,DWORD PTR [rax+0x0]
	...
  405660:	(bad)  
  405661:	sbb    al,BYTE PTR [rax+0x0]
	...
  405670:	xchg   BYTE PTR [rax+0x0],al
	...
  405680:	jo     0x405608
  405682:	add    BYTE PTR [rax],al
	...
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rax-0x80],dl
  405692:	add    BYTE PTR [rax],al
	...
  40569d:	add    BYTE PTR [rax],al
  40569f:	add    BYTE PTR [rax-0x7a],bl
  4056a2:	add    BYTE PTR [rax],al
	...
  4056ad:	add    BYTE PTR [rax],al
  4056af:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4056bf:	add    BYTE PTR [rax-0x7a],dl
  4056c2:	add    BYTE PTR [rax],al
	...
  4056cd:	add    BYTE PTR [rax],al
  4056cf:	add    BYTE PTR [rax+rax*2+0x40],ch
	...
  4056df:	add    BYTE PTR [rdi+0x43],al
  4056e2:	rex.XB cmp spl,BYTE PTR [r8]
  4056e5:	sub    BYTE PTR [rdi+0x4e],al
  4056e8:	push   rbp
  4056e9:	sub    DWORD PTR [rax],esp
  4056eb:	xor    al,0x2e
  4056ed:	cmp    DWORD PTR [rsi],ebp
  4056ef:	xor    al,0x0
	...
  4056fd:	add    BYTE PTR [rax],al
  4056ff:	add    BYTE PTR [rdi+0x43],al
  405702:	rex.XB cmp spl,BYTE PTR [r8]
  405705:	sub    BYTE PTR [rdi+0x4e],al
  405708:	push   rbp
  405709:	sub    DWORD PTR [rax],esp
  40570b:	xor    al,0x2e
  40570d:	cmp    DWORD PTR [rsi],ebp
  40570f:	xor    al,0x0
	...
  40571d:	add    BYTE PTR [rax],al
  40571f:	add    BYTE PTR [rdi+0x43],al
  405722:	rex.XB cmp spl,BYTE PTR [r8]
  405725:	sub    BYTE PTR [rdi+0x4e],al
  405728:	push   rbp
  405729:	sub    DWORD PTR [rax],esp
  40572b:	xor    al,0x2e
  40572d:	cmp    DWORD PTR [rsi],ebp
  40572f:	xor    al,0x0
	...
  40573d:	add    BYTE PTR [rax],al
  40573f:	add    BYTE PTR [rdi+0x43],al
  405742:	rex.XB cmp spl,BYTE PTR [r8]
  405745:	sub    BYTE PTR [rdi+0x4e],al
  405748:	push   rbp
  405749:	sub    DWORD PTR [rax],esp
  40574b:	xor    al,0x2e
  40574d:	cmp    DWORD PTR [rsi],ebp
  40574f:	xor    al,0x0
	...
  40575d:	add    BYTE PTR [rax],al
  40575f:	add    BYTE PTR [rdi+0x43],al
  405762:	rex.XB cmp spl,BYTE PTR [r8]
  405765:	sub    BYTE PTR [rdi+0x4e],al
  405768:	push   rbp
  405769:	sub    DWORD PTR [rax],esp
  40576b:	xor    al,0x2e
  40576d:	cmp    DWORD PTR [rsi],ebp
  40576f:	xor    al,0x0
	...
  40577d:	add    BYTE PTR [rax],al
  40577f:	add    BYTE PTR [rdi+0x43],al
  405782:	rex.XB cmp spl,BYTE PTR [r8]
  405785:	sub    BYTE PTR [rdi+0x4e],al
  405788:	push   rbp
  405789:	sub    DWORD PTR [rax],esp
  40578b:	xor    al,0x2e
  40578d:	cmp    DWORD PTR [rsi],ebp
  40578f:	xor    al,0x0
	...
  40579d:	add    BYTE PTR [rax],al
  40579f:	add    BYTE PTR [rdi+0x43],al
  4057a2:	rex.XB cmp spl,BYTE PTR [r8]
  4057a5:	sub    BYTE PTR [rdi+0x4e],al
  4057a8:	push   rbp
  4057a9:	sub    DWORD PTR [rax],esp
  4057ab:	xor    al,0x2e
  4057ad:	cmp    DWORD PTR [rsi],ebp
  4057af:	xor    al,0x0
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rdi+0x43],al
  4057c2:	rex.XB cmp spl,BYTE PTR [r8]
  4057c5:	sub    BYTE PTR [rdi+0x4e],al
  4057c8:	push   rbp
  4057c9:	sub    DWORD PTR [rax],esp
  4057cb:	xor    al,0x2e
  4057cd:	cmp    DWORD PTR [rsi],ebp
  4057cf:	xor    al,0x0
	...
  4057dd:	add    BYTE PTR [rax],al
  4057df:	add    BYTE PTR [rdi+0x43],al
  4057e2:	rex.XB cmp spl,BYTE PTR [r8]
  4057e5:	sub    BYTE PTR [rdi+0x4e],al
  4057e8:	push   rbp
  4057e9:	sub    DWORD PTR [rax],esp
  4057eb:	xor    al,0x2e
  4057ed:	cmp    DWORD PTR [rsi],ebp
  4057ef:	xor    al,0x0
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    BYTE PTR [rdi+0x43],al
  405802:	rex.XB cmp spl,BYTE PTR [r8]
  405805:	sub    BYTE PTR [rdi+0x4e],al
  405808:	push   rbp
  405809:	sub    DWORD PTR [rax],esp
  40580b:	xor    al,0x2e
  40580d:	cmp    DWORD PTR [rsi],ebp
  40580f:	xor    al,0x0
	...
  40581d:	add    BYTE PTR [rax],al
  40581f:	add    BYTE PTR [rdi+0x43],al
  405822:	rex.XB cmp spl,BYTE PTR [r8]
  405825:	sub    BYTE PTR [rdi+0x4e],al
  405828:	push   rbp
  405829:	sub    DWORD PTR [rax],esp
  40582b:	xor    al,0x2e
  40582d:	cmp    DWORD PTR [rsi],ebp
  40582f:	xor    al,0x0
	...
  40583d:	add    BYTE PTR [rax],al
  40583f:	add    BYTE PTR [rdi+0x43],al
  405842:	rex.XB cmp spl,BYTE PTR [r8]
  405845:	sub    BYTE PTR [rdi+0x4e],al
  405848:	push   rbp
  405849:	sub    DWORD PTR [rax],esp
  40584b:	xor    al,0x2e
  40584d:	cmp    DWORD PTR [rsi],ebp
  40584f:	xor    al,0x0
	...
  40585d:	add    BYTE PTR [rax],al
  40585f:	add    BYTE PTR [rdi+0x43],al
  405862:	rex.XB cmp spl,BYTE PTR [r8]
  405865:	sub    BYTE PTR [rdi+0x4e],al
  405868:	push   rbp
  405869:	sub    DWORD PTR [rax],esp
  40586b:	xor    al,0x2e
  40586d:	cmp    DWORD PTR [rsi],ebp
  40586f:	xor    al,0x0
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    BYTE PTR [rdi+0x43],al
  405882:	rex.XB cmp spl,BYTE PTR [r8]
  405885:	sub    BYTE PTR [rdi+0x4e],al
  405888:	push   rbp
  405889:	sub    DWORD PTR [rax],esp
  40588b:	xor    al,0x2e
  40588d:	cmp    DWORD PTR [rsi],ebp
  40588f:	xor    al,0x0
	...
  40589d:	add    BYTE PTR [rax],al
  40589f:	add    BYTE PTR [rdi+0x43],al
  4058a2:	rex.XB cmp spl,BYTE PTR [r8]
  4058a5:	sub    BYTE PTR [rdi+0x4e],al
  4058a8:	push   rbp
  4058a9:	sub    DWORD PTR [rax],esp
  4058ab:	xor    al,0x2e
  4058ad:	cmp    DWORD PTR [rsi],ebp
  4058af:	xor    al,0x0
	...
  4058bd:	add    BYTE PTR [rax],al
  4058bf:	add    BYTE PTR [rdi+0x43],al
  4058c2:	rex.XB cmp spl,BYTE PTR [r8]
  4058c5:	sub    BYTE PTR [rdi+0x4e],al
  4058c8:	push   rbp
  4058c9:	sub    DWORD PTR [rax],esp
  4058cb:	xor    al,0x2e
  4058cd:	cmp    DWORD PTR [rsi],ebp
  4058cf:	xor    al,0x0
	...
  4058dd:	add    BYTE PTR [rax],al
  4058df:	add    BYTE PTR [rdi+0x43],al
  4058e2:	rex.XB cmp spl,BYTE PTR [r8]
  4058e5:	sub    BYTE PTR [rdi+0x4e],al
  4058e8:	push   rbp
  4058e9:	sub    DWORD PTR [rax],esp
  4058eb:	xor    al,0x2e
  4058ed:	cmp    DWORD PTR [rsi],ebp
  4058ef:	xor    al,0x0
	...
  4058fd:	add    BYTE PTR [rax],al
  4058ff:	add    BYTE PTR [rdi+0x43],al
  405902:	rex.XB cmp spl,BYTE PTR [r8]
  405905:	sub    BYTE PTR [rdi+0x4e],al
  405908:	push   rbp
  405909:	sub    DWORD PTR [rax],esp
  40590b:	xor    al,0x2e
  40590d:	cmp    DWORD PTR [rsi],ebp
  40590f:	xor    al,0x0
	...
  40591d:	add    BYTE PTR [rax],al
  40591f:	add    BYTE PTR [rdi+0x43],al
  405922:	rex.XB cmp spl,BYTE PTR [r8]
  405925:	sub    BYTE PTR [rdi+0x4e],al
  405928:	push   rbp
  405929:	sub    DWORD PTR [rax],esp
  40592b:	xor    al,0x2e
  40592d:	cmp    DWORD PTR [rsi],ebp
  40592f:	xor    al,0x0
	...
  40593d:	add    BYTE PTR [rax],al
  40593f:	add    BYTE PTR [rdi+0x43],al
  405942:	rex.XB cmp spl,BYTE PTR [r8]
  405945:	sub    BYTE PTR [rdi+0x4e],al
  405948:	push   rbp
  405949:	sub    DWORD PTR [rax],esp
  40594b:	xor    al,0x2e
  40594d:	cmp    DWORD PTR [rsi],ebp
  40594f:	xor    al,0x0
	...
  40595d:	add    BYTE PTR [rax],al
  40595f:	add    BYTE PTR [rdi+0x43],al
  405962:	rex.XB cmp spl,BYTE PTR [r8]
  405965:	sub    BYTE PTR [rdi+0x4e],al
  405968:	push   rbp
  405969:	sub    DWORD PTR [rax],esp
  40596b:	xor    al,0x2e
  40596d:	cmp    DWORD PTR [rsi],ebp
  40596f:	xor    al,0x0
	...
  40597d:	add    BYTE PTR [rax],al
  40597f:	add    BYTE PTR [rdi+0x43],al
  405982:	rex.XB cmp spl,BYTE PTR [r8]
  405985:	sub    BYTE PTR [rdi+0x4e],al
  405988:	push   rbp
  405989:	sub    DWORD PTR [rax],esp
  40598b:	xor    al,0x2e
  40598d:	cmp    DWORD PTR [rsi],ebp
  40598f:	xor    al,0x0
	...
  40599d:	add    BYTE PTR [rax],al
  40599f:	add    BYTE PTR [rdi+0x43],al
  4059a2:	rex.XB cmp spl,BYTE PTR [r8]
  4059a5:	sub    BYTE PTR [rdi+0x4e],al
  4059a8:	push   rbp
  4059a9:	sub    DWORD PTR [rax],esp
  4059ab:	xor    al,0x2e
  4059ad:	cmp    DWORD PTR [rsi],ebp
  4059af:	xor    al,0x0
	...
  4059bd:	add    BYTE PTR [rax],al
  4059bf:	add    BYTE PTR [rdi+0x43],al
  4059c2:	rex.XB cmp spl,BYTE PTR [r8]
  4059c5:	sub    BYTE PTR [rdi+0x4e],al
  4059c8:	push   rbp
  4059c9:	sub    DWORD PTR [rax],esp
  4059cb:	xor    al,0x2e
  4059cd:	cmp    DWORD PTR [rsi],ebp
  4059cf:	xor    al,0x0
	...
  4059dd:	add    BYTE PTR [rax],al
  4059df:	add    BYTE PTR [rdi+0x43],al
  4059e2:	rex.XB cmp spl,BYTE PTR [r8]
  4059e5:	sub    BYTE PTR [rdi+0x4e],al
  4059e8:	push   rbp
  4059e9:	sub    DWORD PTR [rax],esp
  4059eb:	xor    al,0x2e
  4059ed:	cmp    DWORD PTR [rsi],ebp
  4059ef:	xor    al,0x0
	...
  4059fd:	add    BYTE PTR [rax],al
  4059ff:	add    BYTE PTR [rdi+0x43],al
  405a02:	rex.XB cmp spl,BYTE PTR [r8]
  405a05:	sub    BYTE PTR [rdi+0x4e],al
  405a08:	push   rbp
  405a09:	sub    DWORD PTR [rax],esp
  405a0b:	xor    al,0x2e
  405a0d:	cmp    DWORD PTR [rsi],ebp
  405a0f:	xor    al,0x0
	...
  405a1d:	add    BYTE PTR [rax],al
  405a1f:	add    BYTE PTR [rdi+0x43],al
  405a22:	rex.XB cmp spl,BYTE PTR [r8]
  405a25:	sub    BYTE PTR [rdi+0x4e],al
  405a28:	push   rbp
  405a29:	sub    DWORD PTR [rax],esp
  405a2b:	xor    al,0x2e
  405a2d:	cmp    DWORD PTR [rsi],ebp
  405a2f:	xor    al,0x0
	...
  405a3d:	add    BYTE PTR [rax],al
  405a3f:	add    BYTE PTR [rdi+0x43],al
  405a42:	rex.XB cmp spl,BYTE PTR [r8]
  405a45:	sub    BYTE PTR [rdi+0x4e],al
  405a48:	push   rbp
  405a49:	sub    DWORD PTR [rax],esp
  405a4b:	xor    al,0x2e
  405a4d:	cmp    DWORD PTR [rsi],ebp
  405a4f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x157b0000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffffc0000070
  406055:	adc    eax,0x16670000
  40605a:	add    BYTE PTR [rax],al
  40605c:	mov    BYTE PTR [rax+0x0],dh
  40605f:	add    BYTE PTR [rax+0x16],dh
  406062:	add    BYTE PTR [rax],al
  406064:	mov    DWORD PTR [rsi],edx
  406066:	add    BYTE PTR [rax],al
  406068:	nop
  406069:	jo     0x40606b
  40606b:	add    BYTE PTR [rax-0x3affffea],dl
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	cwde   
  406075:	jo     0x406077
  406077:	add    al,dl
  406079:	(bad)  
  40607a:	add    BYTE PTR [rax],al
  40607c:	and    eax,0xa0000017
  406081:	jo     0x406083
  406083:	add    BYTE PTR [rax],dh
  406085:	(bad)  
  406086:	add    BYTE PTR [rax],al
  406088:	rex.WR (bad) 
  40608a:	add    BYTE PTR [rax],al
  40608c:	lods   al,BYTE PTR ds:[rsi]
  40608d:	jo     0x40608f
  40608f:	add    BYTE PTR [rax+0x17],dl
  406092:	add    BYTE PTR [rax],al
  406094:	pop    rdx
  406095:	(bad)  
  406096:	add    BYTE PTR [rax],al
  406098:	mov    al,0x70
  40609a:	add    BYTE PTR [rax],al
  40609c:	(bad)  
  40609d:	(bad)  
  40609e:	add    BYTE PTR [rax],al
  4060a0:	movsxd edx,DWORD PTR [rdi]
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	mov    ah,0x70
  4060a6:	add    BYTE PTR [rax],al
  4060a8:	jo     0x4060c1
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	rex.RX sbb BYTE PTR [rax],r8b
  4060af:	add    BYTE PTR [rax+0x50000070],bh
  4060b5:	sbb    BYTE PTR [rax],al
  4060b7:	add    BYTE PTR [rbx+0x19],cl
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	enter  0x70,0x0
  4060c0:	push   rax
  4060c1:	sbb    DWORD PTR [rax],eax
  4060c3:	add    BYTE PTR [rdi+0x19],bh
  4060c6:	add    BYTE PTR [rax],al
  4060c8:	fdiv   DWORD PTR [rax+0x0]
  4060cb:	add    BYTE PTR [rax-0x16ffffe7],al
  4060d1:	sbb    DWORD PTR [rax],eax
  4060d3:	add    al,ah
  4060d5:	jo     0x4060d7
  4060d7:	add    al,dh
  4060d9:	sbb    DWORD PTR [rax],eax
  4060db:	add    bl,dh
  4060dd:	sbb    DWORD PTR [rax],eax
  4060df:	add    ah,ch
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax],al
  4060e5:	sbb    al,BYTE PTR [rax]
  4060e7:	add    BYTE PTR [rcx+0x1a],al
  4060ea:	add    BYTE PTR [rax],al
  4060ec:	lock jo 0x4060ef
  4060ef:	add    BYTE PTR [rax+0x1a],dl
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	pop    rsp
  4060f5:	sbb    al,BYTE PTR [rax]
  4060f7:	add    al,bh
  4060f9:	jo     0x4060fb
  4060fb:	add    BYTE PTR [rax+0x1a],ah
  4060fe:	add    BYTE PTR [rax],al
  406100:	pop    rsp
  406101:	sbb    eax,DWORD PTR [rax]
  406103:	add    ah,bh
  406105:	jo     0x406107
  406107:	add    BYTE PTR [rax+0x1b],ah
  40610a:	add    BYTE PTR [rax],al
  40610c:	movsxd ebx,DWORD PTR [rbx]
  40610e:	add    BYTE PTR [rax],al
  406110:	adc    al,0x71
  406112:	add    BYTE PTR [rax],al
  406114:	jo     0x406131
  406116:	add    BYTE PTR [rax],al
  406118:	je     0x406135
  40611a:	add    BYTE PTR [rax],al
  40611c:	sbb    BYTE PTR [rcx+0x0],dh
  40611f:	add    BYTE PTR [rax-0x7bffffe5],al
  406125:	sbb    eax,DWORD PTR [rax]
  406127:	add    BYTE PTR [rcx+rsi*2],bl
  40612a:	add    BYTE PTR [rax],al
  40612c:	nop
  40612d:	sbb    eax,DWORD PTR [rax]
  40612f:	add    cl,dh
  406131:	sbb    eax,DWORD PTR [rax]
  406133:	add    BYTE PTR [rax],ah
  406135:	jno    0x406137
  406137:	add    BYTE PTR [rax],al
  406139:	sbb    al,0x0
  40613b:	add    BYTE PTR [rdx+0x1d],ah
  40613e:	add    BYTE PTR [rax],al
  406140:	sub    al,0x71
  406142:	add    BYTE PTR [rax],al
  406144:	jo     0x406163
  406146:	add    BYTE PTR [rax],al
  406148:	imul   esp,DWORD PTR [rax],0x71400000
  40614e:	add    BYTE PTR [rax],al
  406150:	jo     0x406172
  406152:	add    BYTE PTR [rax],al
  406154:	(bad)  
  406155:	and    al,BYTE PTR [rax]
  406157:	add    BYTE PTR [rax+0x71],bl
  40615a:	add    BYTE PTR [rax],al
  40615c:	and    BYTE PTR [rdx],ah
  40615e:	add    BYTE PTR [rax],al
  406160:	or     al,0x23
  406162:	add    BYTE PTR [rax],al
  406164:	(bad)  
  406165:	jno    0x406167
  406167:	add    BYTE PTR [rax],dl
  406169:	and    eax,DWORD PTR [rax]
  40616b:	add    al,cl
  40616d:	and    al,0x0
  40616f:	add    BYTE PTR [rax+0x71],dh
  406172:	add    BYTE PTR [rax],al
  406174:	shl    BYTE PTR [rax+rax*1],1
  406177:	add    BYTE PTR [rip+0x78000025],bh        # 0x784061a2
  40617d:	jno    0x40617f
  40617f:	add    BYTE PTR [rax+0x25],al
  406182:	add    BYTE PTR [rax],al
  406184:	mov    edi,0x88000025
  406189:	jno    0x40618b
  40618b:	add    al,al
  40618d:	and    eax,0x265f0000
  406192:	add    BYTE PTR [rax],al
  406194:	xchg   esp,eax
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax+0x26],ah
  40619a:	add    BYTE PTR [rax],al
  40619c:	cmp    ah,BYTE PTR [rdi]
  40619e:	add    BYTE PTR [rax],al
  4061a0:	pushf  
  4061a1:	jno    0x4061a3
  4061a3:	add    BYTE PTR [rax+0x27],al
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	pop    rdi
  4061a9:	(bad)  
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4061ad:	jno    0x4061af
  4061af:	add    BYTE PTR [rax+0x27],ah
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	jb     0x4061dd
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	test   al,0x71
  4061ba:	add    BYTE PTR [rax],al
  4061bc:	and    BYTE PTR [rdi],0x0
  4061bf:	add    ch,al
  4061c1:	(bad)  
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	lods   al,BYTE PTR ds:[rsi]
  4061c5:	jno    0x4061c7
  4061c7:	add    al,dl
  4061c9:	(bad)  
  4061ca:	add    BYTE PTR [rax],al
  4061cc:	outs   dx,BYTE PTR ds:[rsi]
  4061cd:	sub    BYTE PTR [rax],al
  4061cf:	add    BYTE PTR [rax+0x70000071],dh
  4061d5:	sub    BYTE PTR [rax],al
  4061d7:	add    BYTE PTR [rbx-0x43ffffd8],dh
  4061dd:	jno    0x4061df
  4061df:	add    al,al
  4061e1:	sub    BYTE PTR [rax],al
  4061e3:	add    bl,bh
  4061e5:	sub    BYTE PTR [rax],al
  4061e7:	add    al,cl
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax],al
  4061ed:	sub    DWORD PTR [rax],eax
  4061ef:	add    BYTE PTR [rsi-0x2fffffd7],cl
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax-0x37ffffd7],dl
  4061fd:	sub    DWORD PTR [rax],eax
  4061ff:	add    ah,bl
  406201:	jno    0x406203
  406203:	add    al,dl
  406205:	sub    DWORD PTR [rax],eax
  406207:	add    BYTE PTR [rip+0xffffffffe800002a],ah        # 0xffffffffe8406237
  40620d:	jno    0x40620f
  40620f:	add    BYTE PTR [rax],dh
  406211:	sub    al,BYTE PTR [rax]
  406213:	add    dh,bl
  406215:	sub    al,BYTE PTR [rax]
  406217:	add    ah,dh
  406219:	jno    0x40621b
  40621b:	add    BYTE PTR [rax],ah
  40621d:	sub    eax,DWORD PTR [rax]
  40621f:	add    dl,cl
  406221:	sub    eax,DWORD PTR [rax]
  406223:	add    BYTE PTR [rdx+rsi*2],al
  406226:	add    BYTE PTR [rax],al
  406228:	shr    BYTE PTR [rbx],1
  40622a:	add    BYTE PTR [rax],al
  40622c:	push   rax
  40622d:	sub    al,0x0
  40622f:	add    BYTE PTR [rdx+rsi*2],dl
  406232:	add    BYTE PTR [rax],al
  406234:	push   rax
  406235:	sub    al,0x0
  406237:	add    BYTE PTR [rsi],al
  406239:	xor    BYTE PTR [rax],al
  40623b:	add    BYTE PTR [rax],ah
  40623d:	jb     0x40623f
  40623f:	add    BYTE PTR [rax],dl
  406241:	xor    BYTE PTR [rax],al
  406243:	add    ch,dh
  406245:	add    BYTE PTR ss:[rax],al
  406248:	cmp    BYTE PTR [rdx+0x0],dh
  40624b:	add    BYTE PTR [rax],al
  40624d:	(bad)  
  40624e:	add    BYTE PTR [rax],al
  406250:	and    dh,BYTE PTR [rdi]
  406252:	add    BYTE PTR [rax],al
  406254:	push   rax
  406255:	jb     0x406257
  406257:	add    BYTE PTR [rax],dh
  406259:	(bad)  
  40625a:	add    BYTE PTR [rax],al
  40625c:	push   rax
  40625d:	(bad)  
  40625e:	add    BYTE PTR [rax],al
  406260:	pop    rax
  406261:	jb     0x406263
  406263:	add    BYTE PTR [rax+0x37],dl
  406266:	add    BYTE PTR [rax],al
  406268:	jo     0x4062a1
  40626a:	add    BYTE PTR [rax],al
  40626c:	(bad)  
  40626d:	jb     0x40626f
  40626f:	add    BYTE PTR [rax+0x38],dh
  406272:	add    BYTE PTR [rax],al
  406274:	js     0x4062ae
  406276:	add    BYTE PTR [rax],al
  406278:	push   0xffffffff80000072
  40627d:	cmp    BYTE PTR [rax],al
  40627f:	add    BYTE PTR [rbx+0x6c000038],cl
  406285:	jb     0x406287
  406287:	add    BYTE PTR [rax+0x39],dl
  40628a:	add    BYTE PTR [rax],al
  40628c:	retf   0x3a
  40628f:	add    BYTE PTR [rax+0x70],dh
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	(bad)  
  407031:	cmp    BYTE PTR [rax],al
  407033:	add    BYTE PTR [rcx],al
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax],dl
  407041:	and    eax,DWORD PTR [rax]
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	(bad)  
  407051:	cmp    BYTE PTR [rax],al
  407053:	add    BYTE PTR [rcx],al
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	adc    BYTE PTR [rbx],ah
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457070
  40706e:	add    DWORD PTR [rax],esi
  407070:	add    DWORD PTR [rdx],edx
  407072:	or     DWORD PTR [rax],eax
  407074:	adc    bh,BYTE PTR [rax+0x4]
  407077:	add    BYTE PTR [rip+0x8000368],cl        # 0x84073e5
  40707d:	movabs ds:0x5001700260033004,al
  407086:	add    BYTE PTR [rax],al
  407088:	add    DWORD PTR [rip+0x52050002],eax        # 0x52457090
  40708e:	add    DWORD PTR [rax],esi
  407090:	add    DWORD PTR [rcx+rax*1],eax
  407093:	add    BYTE PTR [rdx+rax*2],al
  407096:	add    BYTE PTR [rax],al
  407098:	add    DWORD PTR [rcx+rax*1],eax
  40709b:	add    BYTE PTR [rdx+rax*2],al
  40709e:	add    BYTE PTR [rax],al
  4070a0:	add    DWORD PTR [rsi],eax
  4070a2:	add    eax,DWORD PTR [rax]
  4070a4:	(bad)  
  4070a5:	rex.X add sil,BYTE PTR [rax]
  4070a8:	add    DWORD PTR [rax+0x0],esp
  4070ab:	add    BYTE PTR [rcx],al
  4070ad:	add    BYTE PTR [rax],al
  4070af:	add    BYTE PTR [rcx],al
  4070b1:	add    BYTE PTR [rax],al
  4070b3:	add    BYTE PTR [rcx],al
  4070b5:	add    BYTE PTR [rax],al
  4070b7:	add    BYTE PTR [rcx],al
  4070b9:	or     al,BYTE PTR [rsi]
  4070bb:	add    BYTE PTR [rdx],cl
  4070bd:	jb     0x4070c5
  4070bf:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07525
  4070c5:	push   rax
  4070c6:	add    al,al
  4070c8:	add    DWORD PTR [rdx],ecx
  4070ca:	add    eax,0x6d20a05
  4070cf:	add    eax,DWORD PTR [rbx]
  4070d1:	xor    BYTE PTR [rdx],al
  4070d3:	(bad)  
  4070d4:	add    DWORD PTR [rax+0x0],edx
  4070d7:	add    BYTE PTR [rcx],al
  4070d9:	add    al,0x1
  4070db:	add    BYTE PTR [rdx+rax*2],al
  4070de:	add    BYTE PTR [rax],al
  4070e0:	add    DWORD PTR [rsi],eax
  4070e2:	add    eax,DWORD PTR [rax]
  4070e4:	(bad)  
  4070e5:	rex.X add sil,BYTE PTR [rax]
  4070e8:	add    DWORD PTR [rax+0x0],esp
  4070eb:	add    BYTE PTR [rcx],al
  4070ed:	add    BYTE PTR [rax],al
  4070ef:	add    BYTE PTR [rcx],al
  4070f1:	add    al,0x1
  4070f3:	add    BYTE PTR [rdx+riz*4],al
  4070f6:	add    BYTE PTR [rax],al
  4070f8:	add    DWORD PTR [rax],eax
  4070fa:	add    BYTE PTR [rax],al
  4070fc:	add    DWORD PTR [rsi],edx
  4070fe:	or     DWORD PTR [rax],eax
  407100:	(bad)  
  407101:	mov    BYTE PTR [rsi],al
  407103:	add    BYTE PTR [rax],dl
  407105:	js     0x40710c
  407107:	add    BYTE PTR [rbx],cl
  407109:	push   0xffffffffe2060004
  40710e:	add    dh,BYTE PTR [rax]
  407110:	add    DWORD PTR [rax+0x0],esp
  407113:	add    BYTE PTR [rcx],al
  407115:	add    BYTE PTR [rax],al
  407117:	add    BYTE PTR [rcx],al
  407119:	add    BYTE PTR [rax],al
  40711b:	add    BYTE PTR [rcx],al
  40711d:	add    BYTE PTR [rax],al
  40711f:	add    BYTE PTR [rcx],al
  407121:	(bad)  
  407122:	add    eax,DWORD PTR [rax]
  407124:	(bad)  
  407125:	(bad)  
  407127:	xor    BYTE PTR [rcx],al
  407129:	(bad)  
  40712a:	add    BYTE PTR [rax],al
  40712c:	add    DWORD PTR [rdi+rax*1],ecx
  40712f:	add    BYTE PTR [rdx+riz*4],cl
  407132:	or     BYTE PTR [rax],dh
  407134:	(bad)  
  407135:	(bad)  
  407136:	(bad)  
  407137:	jo     0x40713e
  407139:	push   rax
  40713a:	add    al,0xc0
  40713c:	add    dl,al
  40713e:	add    BYTE PTR [rax],al
  407140:	add    DWORD PTR [rcx],edx
  407142:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e2359
  407148:	or     dh,BYTE PTR [rax]
  40714a:	or     DWORD PTR [rax+0x8],esp
  40714d:	jo     0x407156
  40714f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2207526
  407156:	add    BYTE PTR [rax],al
  407158:	add    DWORD PTR [rcx+rax*1],eax
  40715b:	add    BYTE PTR [rdx+rax*2],al
  40715e:	add    BYTE PTR [rax],al
  407160:	add    DWORD PTR [rdx],ecx
  407162:	(bad)  
  407163:	add    BYTE PTR [rdx],cl
  407165:	xor    al,BYTE PTR [rsi]
  407167:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075cd
  40716d:	push   rax
  40716e:	add    al,al
  407170:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457178
  407176:	add    DWORD PTR [rax],esi
  407178:	add    DWORD PTR [rax],ecx
  40717a:	add    eax,0x4420800
  40717f:	xor    BYTE PTR [rbx],al
  407181:	(bad)  
  407182:	add    dh,BYTE PTR [rax+0x1]
  407185:	push   rax
  407186:	add    BYTE PTR [rax],al
  407188:	add    DWORD PTR [rdi],eax
  40718a:	add    al,0x0
  40718c:	(bad)  
  40718d:	xor    al,BYTE PTR [rbx]
  40718f:	xor    BYTE PTR [rdx],al
  407191:	(bad)  
  407192:	add    DWORD PTR [rax+0x1],esi
  407195:	add    eax,0x32050002
  40719a:	add    DWORD PTR [rax],esi
  40719c:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571a4
  4071a2:	add    DWORD PTR [rax],esi
  4071a4:	add    DWORD PTR [rax],eax
  4071a6:	add    BYTE PTR [rax],al
  4071a8:	add    DWORD PTR [rax],eax
  4071aa:	add    BYTE PTR [rax],al
  4071ac:	add    DWORD PTR [rax],eax
  4071ae:	add    BYTE PTR [rax],al
  4071b0:	add    DWORD PTR [rdi],eax
  4071b2:	add    al,0x0
  4071b4:	(bad)  
  4071b5:	xor    al,BYTE PTR [rbx]
  4071b7:	xor    BYTE PTR [rdx],al
  4071b9:	(bad)  
  4071ba:	add    DWORD PTR [rax+0x1],esi
  4071bd:	(bad)  
  4071be:	add    eax,DWORD PTR [rax]
  4071c0:	(bad)  
  4071c1:	rex.X add sil,BYTE PTR [rax]
  4071c4:	add    DWORD PTR [rax+0x0],esp
  4071c7:	add    BYTE PTR [rcx],al
  4071c9:	add    eax,0x32050002
  4071ce:	add    DWORD PTR [rax],esi
  4071d0:	add    DWORD PTR [rdi],eax
  4071d2:	add    al,0x0
  4071d4:	(bad)  
  4071d5:	xor    al,BYTE PTR [rbx]
  4071d7:	xor    BYTE PTR [rdx],al
  4071d9:	(bad)  
  4071da:	add    DWORD PTR [rax+0x1],esi
  4071dd:	(bad)  
  4071de:	add    eax,DWORD PTR [rax]
  4071e0:	(bad)  
  4071e1:	rex.X add sil,BYTE PTR [rax]
  4071e4:	add    DWORD PTR [rax+0x0],esp
  4071e7:	add    BYTE PTR [rcx],al
  4071e9:	(bad)  
  4071ea:	add    eax,DWORD PTR [rax]
  4071ec:	(bad)  
  4071ed:	rex.X add sil,BYTE PTR [rax]
  4071f0:	add    DWORD PTR [rax+0x0],esp
  4071f3:	add    BYTE PTR [rcx],al
  4071f5:	or     BYTE PTR [rip+0x4420800],al        # 0x48279fb
  4071fb:	xor    BYTE PTR [rbx],al
  4071fd:	(bad)  
  4071fe:	add    dh,BYTE PTR [rax+0x1]
  407201:	push   rax
  407202:	add    BYTE PTR [rax],al
  407204:	add    DWORD PTR [rax],ecx
  407206:	(bad)  
  407207:	add    BYTE PTR [rax],cl
  407209:	xor    BYTE PTR [rdi],al
  40720b:	(bad)  
  40720c:	(bad)  
  40720d:	jo     0x407214
  40720f:	push   rax
  407210:	add    al,0xc0
  407212:	add    dl,al
  407214:	add    DWORD PTR [rdi],eax
  407216:	add    al,0x0
  407218:	(bad)  
  407219:	push   rdx
  40721a:	add    esi,DWORD PTR [rax]
  40721c:	add    ah,BYTE PTR [rax+0x1]
  40721f:	jo     0x407222
  407221:	adc    BYTE PTR [rcx],cl
  407223:	add    BYTE PTR [rax],dl
  407225:	(bad)  
  407226:	or     al,0x30
  407228:	or     esp,DWORD PTR [rax+0xa]
  40722b:	jo     0x407236
  40722d:	push   rax
  40722e:	or     al,al
  407230:	(bad)  
  407231:	rol    BYTE PTR [rax+riz*8],1
  407234:	add    dh,al
  407236:	add    BYTE PTR [rax],al
  407238:	add    DWORD PTR [rax],edx
  40723a:	or     DWORD PTR [rax],eax
  40723c:	adc    BYTE PTR [rdx+0xc],ah
  40723f:	xor    BYTE PTR [rbx],cl
  407241:	(bad)  
  407242:	or     dh,BYTE PTR [rax+0x9]
  407245:	push   rax
  407246:	or     al,al
  407248:	(bad)  
  407249:	rol    BYTE PTR [rax+riz*8],1
  40724c:	add    dh,al
  40724e:	add    BYTE PTR [rax],al
  407250:	add    DWORD PTR [rcx+rax*1],eax
  407253:	add    BYTE PTR [rdx+riz*2],al
  407256:	add    BYTE PTR [rax],al
  407258:	add    DWORD PTR [rcx+rax*1],eax
  40725b:	add    BYTE PTR [rdx+riz*2],al
  40725e:	add    BYTE PTR [rax],al
  407260:	add    DWORD PTR [rcx+rax*1],eax
  407263:	add    BYTE PTR [rdx+riz*2],al
  407266:	add    BYTE PTR [rax],al
  407268:	add    DWORD PTR [rax],eax
  40726a:	add    BYTE PTR [rax],al
  40726c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	fcomp  DWORD PTR [rax-0x6d900000]
  409012:	add    BYTE PTR [rax],al
  409014:	nop
  409015:	nop
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	rex.R cdq 
  409022:	add    BYTE PTR [rax],al
  409024:	mov    al,0x92
  409026:	add    BYTE PTR [rax],al
  409028:	push   rax
  409029:	xchg   ecx,eax
	...
  409032:	add    BYTE PTR [rax],al
  409034:	loopne 0x408fcf
  409036:	add    BYTE PTR [rax],al
  409038:	jo     0x408fcd
	...
  40904e:	add    BYTE PTR [rax],al
  409050:	nop
  409051:	xchg   esp,eax
  409052:	add    BYTE PTR [rax],al
  409054:	add    BYTE PTR [rax],al
  409056:	add    BYTE PTR [rax],al
  409058:	test   al,0x94
  40905a:	add    BYTE PTR [rax],al
  40905c:	add    BYTE PTR [rax],al
  40905e:	add    BYTE PTR [rax],al
  409060:	rcl    BYTE PTR [rax+rax*1+0x0],0x0
  409068:	fcom   DWORD PTR [rax+rax*1+0x0]
  40906f:	add    ah,dh
  409071:	xchg   esp,eax
  409072:	add    BYTE PTR [rax],al
  409074:	add    BYTE PTR [rax],al
  409076:	add    BYTE PTR [rax],al
  409078:	or     al,0x95
  40907a:	add    BYTE PTR [rax],al
  40907c:	add    BYTE PTR [rax],al
  40907e:	add    BYTE PTR [rax],al
  409080:	xor    BYTE PTR [rbp+0x0],dl
	...
  40908e:	add    BYTE PTR [rax],al
  409090:	rex.R xchg ebp,eax
  409092:	add    BYTE PTR [rax],al
  409094:	add    BYTE PTR [rax],al
  409096:	add    BYTE PTR [rax],al
  409098:	pop    rsp
  409099:	xchg   ebp,eax
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	je     0x409037
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	mov    BYTE PTR [rbp+0x0],dl
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	sahf   
  4090b1:	xchg   ebp,eax
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	mov    ah,0x95
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	(bad)  
  4090c1:	xchg   ebp,eax
  4090c2:	add    BYTE PTR [rax],al
  4090c4:	add    BYTE PTR [rax],al
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	(bad)  
  4090c9:	xchg   ebp,eax
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	lock xchg ebp,eax
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    BYTE PTR [rax],al
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	add    BYTE PTR [rsi+0x0],dl
  4090de:	add    BYTE PTR [rax],al
  4090e0:	sbb    al,0x96
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	xor    al,0x96
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rax],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	rex.WRX xchg rsi,rax
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	fs xchg esi,eax
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	add    BYTE PTR [rax],al
  4090fe:	add    BYTE PTR [rax],al
  409100:	js     0x409098
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	xchg   edx,eax
  409109:	xchg   esi,eax
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409111:	xchg   esi,eax
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	(bad)  
  409119:	xchg   esi,eax
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	int3   
  409121:	xchg   esi,eax
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	loopne 0x4090c0
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	out    dx,al
  409131:	xchg   esi,eax
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rax],al
  409136:	add    BYTE PTR [rax],al
  409138:	or     dl,BYTE PTR [rdi+0x0]
  40913e:	add    BYTE PTR [rax],al
  409140:	sbb    al,0x97
	...
  40914e:	add    BYTE PTR [rax],al
  409150:	sub    al,0x97
  409152:	add    BYTE PTR [rax],al
  409154:	add    BYTE PTR [rax],al
  409156:	add    BYTE PTR [rax],al
  409158:	rex.R xchg edi,eax
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    BYTE PTR [rax],al
  40915e:	add    BYTE PTR [rax],al
  409160:	rex.WRX xchg rdi,rax
  409162:	add    BYTE PTR [rax],al
  409164:	add    BYTE PTR [rax],al
  409166:	add    BYTE PTR [rax],al
  409168:	pop    rsp
  409169:	xchg   edi,eax
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    BYTE PTR [rax],al
  40916e:	add    BYTE PTR [rax],al
  409170:	ins    BYTE PTR es:[rdi],dx
  409171:	xchg   edi,eax
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	js     0x409111
  40917a:	add    BYTE PTR [rax],al
  40917c:	add    BYTE PTR [rax],al
  40917e:	add    BYTE PTR [rax],al
  409180:	xchg   BYTE PTR [rdi+0x0],dl
  409186:	add    BYTE PTR [rax],al
  409188:	xchg   esi,eax
  409189:	xchg   edi,eax
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	test   al,0x97
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax],al
  409196:	add    BYTE PTR [rax],al
  409198:	mov    esp,0x97
  40919d:	add    BYTE PTR [rax],al
  40919f:	add    dh,al
  4091a1:	xchg   edi,eax
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    BYTE PTR [rax],al
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	(bad)  
  4091a9:	xchg   edi,eax
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	ficom  WORD PTR [rdi+0x0]
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	call   0x409254
  4091bd:	add    BYTE PTR [rax],al
  4091bf:	add    ah,dh
  4091c1:	xchg   edi,eax
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	cld    
  4091c9:	xchg   edi,eax
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	add    BYTE PTR [rax],al
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	(bad)  
  4091d1:	cwde   
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	add    BYTE PTR [rax],al
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	adc    BYTE PTR [rax+0x0],bl
  4091de:	add    BYTE PTR [rax],al
  4091e0:	sbb    BYTE PTR [rax+0x0],bl
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	and    BYTE PTR [rax+0x0],bl
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	sub    BYTE PTR [rax+0x0],bl
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	xor    bl,BYTE PTR [rax+0x0]
  4091fe:	add    BYTE PTR [rax],al
  409200:	cmp    bl,BYTE PTR [rax+0x0]
  409206:	add    BYTE PTR [rax],al
  409208:	rex.R cwde 
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	rex.WR cdqe 
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	push   rsp
  409219:	cwde   
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	pop    rsi
  409221:	cwde   
  409222:	add    BYTE PTR [rax],al
  409224:	add    BYTE PTR [rax],al
  409226:	add    BYTE PTR [rax],al
  409228:	push   0x98
  40922d:	add    BYTE PTR [rax],al
  40922f:	add    BYTE PTR [rdx-0x68],dh
  409232:	add    BYTE PTR [rax],al
  409234:	add    BYTE PTR [rax],al
  409236:	add    BYTE PTR [rax],al
  409238:	jl     0x4091d2
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	xchg   BYTE PTR [rax+0x0],bl
  409246:	add    BYTE PTR [rax],al
  409248:	nop
  409249:	cwde   
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	(bad)  
  409251:	cwde   
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409259:	cwde   
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	scas   al,BYTE PTR es:[rdi]
  409261:	cwde   
	...
  40926e:	add    BYTE PTR [rax],al
  409270:	nop
  409271:	xchg   esp,eax
  409272:	add    BYTE PTR [rax],al
  409274:	add    BYTE PTR [rax],al
  409276:	add    BYTE PTR [rax],al
  409278:	test   al,0x94
  40927a:	add    BYTE PTR [rax],al
  40927c:	add    BYTE PTR [rax],al
  40927e:	add    BYTE PTR [rax],al
  409280:	rcl    BYTE PTR [rax+rax*1+0x0],0x0
  409288:	fcom   DWORD PTR [rax+rax*1+0x0]
  40928f:	add    ah,dh
  409291:	xchg   esp,eax
  409292:	add    BYTE PTR [rax],al
  409294:	add    BYTE PTR [rax],al
  409296:	add    BYTE PTR [rax],al
  409298:	or     al,0x95
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	xor    BYTE PTR [rbp+0x0],dl
	...
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	rex.R xchg ebp,eax
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	pop    rsp
  4092b9:	xchg   ebp,eax
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	add    BYTE PTR [rax],al
  4092be:	add    BYTE PTR [rax],al
  4092c0:	je     0x409257
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	mov    BYTE PTR [rbp+0x0],dl
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	sahf   
  4092d1:	xchg   ebp,eax
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	mov    ah,0x95
  4092da:	add    BYTE PTR [rax],al
  4092dc:	add    BYTE PTR [rax],al
  4092de:	add    BYTE PTR [rax],al
  4092e0:	(bad)  
  4092e1:	xchg   ebp,eax
  4092e2:	add    BYTE PTR [rax],al
  4092e4:	add    BYTE PTR [rax],al
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	(bad)  
  4092e9:	xchg   ebp,eax
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	add    BYTE PTR [rax],al
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	lock xchg ebp,eax
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	add    BYTE PTR [rax],al
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	add    BYTE PTR [rsi+0x0],dl
  4092fe:	add    BYTE PTR [rax],al
  409300:	sbb    al,0x96
  409302:	add    BYTE PTR [rax],al
  409304:	add    BYTE PTR [rax],al
  409306:	add    BYTE PTR [rax],al
  409308:	xor    al,0x96
  40930a:	add    BYTE PTR [rax],al
  40930c:	add    BYTE PTR [rax],al
  40930e:	add    BYTE PTR [rax],al
  409310:	rex.WRX xchg rsi,rax
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	fs xchg esi,eax
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	js     0x4092b8
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	xchg   edx,eax
  409329:	xchg   esi,eax
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    BYTE PTR [rax],al
  40932e:	add    BYTE PTR [rax],al
  409330:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409331:	xchg   esi,eax
  409332:	add    BYTE PTR [rax],al
  409334:	add    BYTE PTR [rax],al
  409336:	add    BYTE PTR [rax],al
  409338:	(bad)  
  409339:	xchg   esi,eax
  40933a:	add    BYTE PTR [rax],al
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	int3   
  409341:	xchg   esi,eax
  409342:	add    BYTE PTR [rax],al
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rax],al
  409348:	loopne 0x4092e0
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	out    dx,al
  409351:	xchg   esi,eax
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	or     dl,BYTE PTR [rdi+0x0]
  40935e:	add    BYTE PTR [rax],al
  409360:	sbb    al,0x97
	...
  40936e:	add    BYTE PTR [rax],al
  409370:	sub    al,0x97
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	rex.R xchg edi,eax
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	rex.WRX xchg rdi,rax
  409382:	add    BYTE PTR [rax],al
  409384:	add    BYTE PTR [rax],al
  409386:	add    BYTE PTR [rax],al
  409388:	pop    rsp
  409389:	xchg   edi,eax
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	ins    BYTE PTR es:[rdi],dx
  409391:	xchg   edi,eax
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	js     0x409331
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
  40939e:	add    BYTE PTR [rax],al
  4093a0:	xchg   BYTE PTR [rdi+0x0],dl
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	xchg   esi,eax
  4093a9:	xchg   edi,eax
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	add    BYTE PTR [rax],al
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	test   al,0x97
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	add    BYTE PTR [rax],al
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	mov    esp,0x97
  4093bd:	add    BYTE PTR [rax],al
  4093bf:	add    dh,al
  4093c1:	xchg   edi,eax
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	add    BYTE PTR [rax],al
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	(bad)  
  4093c9:	xchg   edi,eax
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	add    BYTE PTR [rax],al
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	ficom  WORD PTR [rdi+0x0]
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	call   0x409474
  4093dd:	add    BYTE PTR [rax],al
  4093df:	add    ah,dh
  4093e1:	xchg   edi,eax
  4093e2:	add    BYTE PTR [rax],al
  4093e4:	add    BYTE PTR [rax],al
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	cld    
  4093e9:	xchg   edi,eax
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	(bad)  
  4093f1:	cwde   
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	adc    BYTE PTR [rax+0x0],bl
  4093fe:	add    BYTE PTR [rax],al
  409400:	sbb    BYTE PTR [rax+0x0],bl
  409406:	add    BYTE PTR [rax],al
  409408:	and    BYTE PTR [rax+0x0],bl
  40940e:	add    BYTE PTR [rax],al
  409410:	sub    BYTE PTR [rax+0x0],bl
  409416:	add    BYTE PTR [rax],al
  409418:	xor    bl,BYTE PTR [rax+0x0]
  40941e:	add    BYTE PTR [rax],al
  409420:	cmp    bl,BYTE PTR [rax+0x0]
  409426:	add    BYTE PTR [rax],al
  409428:	rex.R cwde 
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	rex.WR cdqe 
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	push   rsp
  409439:	cwde   
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	pop    rsi
  409441:	cwde   
  409442:	add    BYTE PTR [rax],al
  409444:	add    BYTE PTR [rax],al
  409446:	add    BYTE PTR [rax],al
  409448:	push   0x98
  40944d:	add    BYTE PTR [rax],al
  40944f:	add    BYTE PTR [rdx-0x68],dh
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	jl     0x4093f2
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
  40945e:	add    BYTE PTR [rax],al
  409460:	xchg   BYTE PTR [rax+0x0],bl
  409466:	add    BYTE PTR [rax],al
  409468:	nop
  409469:	cwde   
  40946a:	add    BYTE PTR [rax],al
  40946c:	add    BYTE PTR [rax],al
  40946e:	add    BYTE PTR [rax],al
  409470:	(bad)  
  409471:	cwde   
  409472:	add    BYTE PTR [rax],al
  409474:	add    BYTE PTR [rax],al
  409476:	add    BYTE PTR [rax],al
  409478:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409479:	cwde   
  40947a:	add    BYTE PTR [rax],al
  40947c:	add    BYTE PTR [rax],al
  40947e:	add    BYTE PTR [rax],al
  409480:	scas   al,BYTE PTR es:[rdi]
  409481:	cwde   
	...
  40948e:	add    BYTE PTR [rax],al
  409490:	mov    esp,0x6c736702
  409495:	pop    rdi
  409496:	push   0x6f747369
  40949b:	addr32 jb 0x4094ff
  40949e:	ins    DWORD PTR es:[rdi],dx
  40949f:	pop    rdi
  4094a0:	(bad)  
  4094a1:	ins    BYTE PTR es:[rdi],dx
  4094a2:	ins    BYTE PTR es:[rdi],dx
  4094a3:	outs   dx,DWORD PTR ds:[rsi]
  4094a4:	movsxd eax,DWORD PTR [rax]
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	(bad)
  4094ab:	jae    0x409519
  4094ad:	pop    rdi
  4094ae:	push   0x6f747369
  4094b3:	addr32 jb 0x409517
  4094b6:	ins    DWORD PTR es:[rdi],dx
  4094b7:	pop    rdi
  4094b8:	data16 jo 0x40952d
  4094bb:	imul   ebp,DWORD PTR [rsi+0x74],0x2c70066
  4094c2:	addr32 jae 0x409531
  4094c5:	pop    rdi
  4094c6:	push   0x6f747369
  4094cb:	addr32 jb 0x40952f
  4094ce:	ins    DWORD PTR es:[rdi],dx
  4094cf:	pop    rdi
  4094d0:	data16 jb 0x409538
  4094d3:	add    BYTE PTR gs:[rax],al
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	int3   
  4094d9:	add    ah,BYTE PTR [rdi+0x73]
  4094dc:	ins    BYTE PTR es:[rdi],dx
  4094dd:	pop    rdi
  4094de:	push   0x6f747369
  4094e3:	addr32 jb 0x409547
  4094e6:	ins    DWORD PTR es:[rdi],dx
  4094e7:	pop    rdi
  4094e8:	imul   ebp,DWORD PTR [rsi+0x63],0x656d6572
  4094ef:	outs   dx,BYTE PTR ds:[rsi]
  4094f0:	je     0x4094f2
  4094f2:	add    BYTE PTR [rax],al
  4094f4:	fild   DWORD PTR [rdx]
  4094f6:	addr32 jae 0x409565
  4094f9:	pop    rdi
  4094fa:	push   0x6f747369
  4094ff:	addr32 jb 0x409563
  409502:	ins    DWORD PTR es:[rdi],dx
  409503:	pop    rdi
  409504:	jae    0x409569
  409506:	(bad)  
  409507:	ins    BYTE PTR es:[rdi],dx
  409508:	add    BYTE PTR gs:[rax],al
  40950b:	add    ch,bl
  40950d:	add    ah,BYTE PTR [rdi+0x73]
  409510:	ins    BYTE PTR es:[rdi],dx
  409511:	pop    rdi
  409512:	push   0x6f747369
  409517:	addr32 jb 0x40957b
  40951a:	ins    DWORD PTR es:[rdi],dx
  40951b:	pop    rdi
  40951c:	jae    0x409583
  40951e:	je     0x40957f
  409520:	jb     0x409583
  409522:	outs   dx,BYTE PTR ds:[rsi]
  409523:	addr32 gs jae 0x409586
  409527:	jne    0x409597
  409529:	imul   esp,DWORD PTR [rsi+0x6f],0x6d72
  409530:	loope  0x409534
  409532:	addr32 jae 0x4095a1
  409535:	pop    rdi
  409536:	push   0x6f747369
  40953b:	addr32 jb 0x40959f
  40953e:	ins    DWORD PTR es:[rdi],dx
  40953f:	pop    rdi
  409540:	jae    0x4095b7
  409542:	ins    DWORD PTR es:[rdi],dx
  409543:	add    al,bl
  409545:	add    BYTE PTR [rbp+riz*2+0x6c],al
  409549:	gs je  0x4095b1
  40954c:	rex.XB jb 0x4095b8
  40954f:	je     0x4095ba
  409551:	movsxd esp,DWORD PTR [rcx+0x6c]
  409554:	push   rbx
  409555:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40955a:	outs   dx,BYTE PTR ds:[rsi]
  40955b:	add    al,bh
  40955d:	add    BYTE PTR [rbp+0x6e],al
  409560:	je     0x4095c7
  409562:	jb     0x4095a7
  409564:	jb     0x4095cf
  409566:	je     0x4095d1
  409568:	movsxd esp,DWORD PTR [rcx+0x6c]
  40956b:	push   rbx
  40956c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409571:	outs   dx,BYTE PTR ds:[rsi]
  409572:	add    BYTE PTR [rax],al
  409574:	int    0x1
  409576:	rex.RXB
  409577:	gs je  0x4095bd
  40957a:	jne    0x4095ee
  40957c:	jb     0x4095e3
  40957e:	outs   dx,BYTE PTR ds:[rsi]
  40957f:	je     0x4095d1
  409581:	jb     0x4095f2
  409583:	movsxd esp,DWORD PTR [rbp+0x73]
  409586:	jae    0x409588
  409588:	(bad)  
  409589:	add    DWORD PTR [rdi+0x65],eax
  40958c:	je     0x4095d1
  40958e:	jne    0x409602
  409590:	jb     0x4095f7
  409592:	outs   dx,BYTE PTR ds:[rsi]
  409593:	je     0x4095e5
  409595:	jb     0x409606
  409597:	movsxd esp,DWORD PTR [rbp+0x73]
  40959a:	jae    0x4095e5
  40959c:	fs add dl,dl
  40959f:	add    DWORD PTR [rdi+0x65],eax
  4095a2:	je     0x4095e7
  4095a4:	jne    0x409618
  4095a6:	jb     0x40960d
  4095a8:	outs   dx,BYTE PTR ds:[rsi]
  4095a9:	je     0x4095ff
  4095ab:	push   0x64616572
  4095b0:	rex.WB
  4095b1:	add    BYTE PTR fs:[rax],al
  4095b4:	adc    BYTE PTR [rdx],al
  4095b6:	rex.RXB
  4095b7:	gs je  0x409606
  4095ba:	(bad)  
  4095bb:	jae    0x409631
  4095bd:	rex.RB jb 0x409632
  4095c0:	outs   dx,DWORD PTR ds:[rsi]
  4095c1:	jb     0x4095c3
  4095c3:	add    BYTE PTR [rbx+0x2],dh
  4095c6:	rex.RXB
  4095c7:	gs je  0x40961d
  4095ca:	je     0x40962d
  4095cc:	jb     0x409642
  4095ce:	jne    0x409640
  4095d0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4095d2:	outs   dx,WORD PTR ds:[rsi]
  4095d4:	add    BYTE PTR [r10+0x74654702],cl
  4095db:	push   rbx
  4095dc:	jns    0x409651
  4095de:	je     0x409645
  4095e0:	ins    DWORD PTR es:[rdi],dx
  4095e1:	push   rsp
  4095e2:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4095e9:	ins    BYTE PTR es:[rdi],dx
  4095ea:	gs push rsp
  4095ec:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4095f3:	gs je  0x40964a
  4095f6:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4095fd:	je     0x4095ff
  4095ff:	add    cl,bh
  409601:	add    cl,BYTE PTR [rcx+0x6e]
  409604:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  40960c:	rex.XB jb 0x409678
  40960f:	je     0x40967a
  409611:	movsxd esp,DWORD PTR [rcx+0x6c]
  409614:	push   rbx
  409615:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40961a:	outs   dx,BYTE PTR ds:[rsi]
  40961b:	add    BYTE PTR [rbx+0x3],cl
  40961e:	rex.WR
  40961f:	gs (bad) 
  409621:	jbe    0x409688
  409623:	rex.XB jb 0x40968f
  409626:	je     0x409691
  409628:	movsxd esp,DWORD PTR [rcx+0x6c]
  40962b:	push   rbx
  40962c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409631:	outs   dx,BYTE PTR ds:[rsi]
  409632:	add    BYTE PTR [rax],al
  409634:	mov    ebx,0x65755103
  409639:	jb     0x4096b4
  40963b:	push   rax
  40963c:	gs jb  0x4096a5
  40963f:	outs   dx,DWORD PTR ds:[rsi]
  409640:	jb     0x4096af
  409642:	(bad)  
  409643:	outs   dx,BYTE PTR ds:[rsi]
  409644:	movsxd esp,DWORD PTR [rbp+0x43]
  409647:	outs   dx,DWORD PTR ds:[rsi]
  409648:	jne    0x4096b8
  40964a:	je     0x4096b1
  40964c:	jb     0x40964e
  40964e:	add    DWORD PTR [rdx+rdx*2],eax
  409651:	je     0x4096bf
  409653:	rex.B
  409654:	fs fs rex.RX jne 0x4096c7
  409659:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40965d:	outs   dx,BYTE PTR ds:[rsi]
  40965e:	push   rsp
  40965f:	(bad)  
  409660:	(bad)  
  409661:	ins    BYTE PTR es:[rdi],dx
  409662:	add    BYTE PTR gs:[rdx],al
  409665:	add    al,0x52
  409667:	je     0x4096d5
  409669:	rex.XB (bad) 
  40966b:	jo     0x4096e1
  40966d:	jne    0x4096e1
  40966f:	rex.XB outs dx,DWORD PTR gs:[rsi]
  409672:	outs   dx,BYTE PTR ds:[rsi]
  409673:	je     0x4096da
  409675:	js     0x4096eb
  409677:	add    BYTE PTR [rcx],cl
  409679:	add    al,0x52
  40967b:	je     0x4096e9
  40967d:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40967f:	outs   dx,DWORD PTR ds:[rsi]
  409680:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409684:	jne    0x4096f4
  409686:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40968a:	outs   dx,BYTE PTR ds:[rsi]
  40968b:	rex.RB outs dx,BYTE PTR ds:[rsi]
  40968d:	je     0x409701
  40968f:	jns    0x409691
  409691:	add    BYTE PTR [rax],dl
  409693:	add    al,0x52
  409695:	je     0x409703
  409697:	push   rsi
  409698:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40969f:	outs   dx,BYTE PTR ds:[rsi]
  4096a0:	ja     0x40970b
  4096a2:	outs   dx,BYTE PTR ds:[rsi]
  4096a3:	add    BYTE PTR fs:[rax],al
  4096a6:	lahf   
  4096a7:	add    al,0x53
  4096a9:	gs je  0x409701
  4096ac:	outs   dx,BYTE PTR ds:[rsi]
  4096ad:	push   0x6c646e61
  4096b2:	gs fs rex.RB js 0x40971a
  4096b7:	gs jo  0x40972e
  4096ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4096c1:	gs jb  0x4096c4
  4096c4:	lods   al,BYTE PTR ds:[rsi]
  4096c5:	add    al,0x53
  4096c7:	ins    BYTE PTR es:[rdi],dx
  4096c8:	gs gs jo 0x4096cc
  4096cc:	mov    edx,0x72655404
  4096d1:	ins    DWORD PTR es:[rdi],dx
  4096d2:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4096d9:	outs   dx,DWORD PTR ds:[rsi]
  4096da:	movsxd esp,DWORD PTR [rbp+0x73]
  4096dd:	jae    0x4096df
  4096df:	add    cl,al
  4096e1:	add    al,0x54
  4096e3:	ins    BYTE PTR es:[rdi],dx
  4096e4:	jae    0x40972d
  4096e6:	gs je  0x40973f
  4096e9:	(bad)  
  4096ea:	ins    BYTE PTR es:[rdi],dx
  4096eb:	jne    0x409752
  4096ed:	add    dh,cl
  4096ef:	add    al,0x55
  4096f1:	outs   dx,BYTE PTR ds:[rsi]
  4096f2:	push   0x6c646e61
  4096f7:	gs fs rex.RB js 0x40975f
  4096fc:	gs jo  0x409773
  4096ff:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409706:	gs jb  0x409709
  409709:	add    ah,ch
  40970b:	add    al,0x56
  40970d:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409714:	jb     0x409785
  409716:	je     0x40977d
  409718:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  40971c:	out    dx,al
  40971d:	add    al,0x56
  40971f:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  409726:	jne    0x40978d
  409728:	jb     0x4097a3
  40972a:	add    BYTE PTR [rax],al
  40972c:	(bad)  
  40972d:	add    BYTE PTR [rdi+0x5f],bl
  409730:	rex.XB pop r15
  409732:	jae    0x4097a4
  409734:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409738:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40973f:	ins    BYTE PTR es:[rdi],dx
  409740:	gs jb  0x409743
  409743:	add    BYTE PTR [rsi+0x0],al
  409746:	pop    rdi
  409747:	pop    rdi
  409748:	(bad)  
  409749:	jb     0x4097b2
  40974b:	jbe    0x40974d
  40974d:	add    BYTE PTR [rsi+0x0],cl
  409750:	pop    rdi
  409751:	pop    rdi
  409752:	fs ins BYTE PTR es:[rdi],dx
  409754:	ins    BYTE PTR es:[rdi],dx
  409755:	outs   dx,DWORD PTR ds:[rsi]
  409756:	outs   dx,BYTE PTR ds:[rsi]
  409757:	gs js  0x4097c3
  40975a:	je     0x40975c
  40975c:	push   rcx
  40975d:	add    BYTE PTR [rdi+0x5f],bl
  409760:	addr32 gs je 0x4097d1
  409764:	(bad)  
  409765:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40976c:	push   rdx
  40976d:	add    BYTE PTR [rdi+0x5f],bl
  409770:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409777:	add    BYTE PTR [rbx+0x0],dl
  40977a:	pop    rdi
  40977b:	pop    rdi
  40977c:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409783:	movsxd eax,DWORD PTR [rax]
  409785:	add    BYTE PTR [rdx+0x0],bl
  409788:	pop    rdi
  409789:	pop    rdi
  40978a:	ins    BYTE PTR es:[rdi],dx
  40978b:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40978e:	jbe    0x4097ef
  409790:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409797:	add    BYTE PTR [rdi+0x5f],bl
  40979a:	jae    0x409801
  40979c:	je     0x4097fd
  40979e:	(bad)  
  40979f:	jo     0x409811
  4097a1:	pop    rdi
  4097a2:	je     0x40981d
  4097a4:	jo     0x40980b
  4097a6:	add    BYTE PTR [rax],al
  4097a8:	(bad)  
  4097a9:	add    BYTE PTR [rdi+0x5f],bl
  4097ac:	jae    0x409813
  4097ae:	je     0x409825
  4097b0:	jae    0x409817
  4097b2:	jb     0x409821
  4097b4:	(bad)  
  4097b5:	je     0x40981f
  4097b7:	gs jb  0x40982c
  4097ba:	add    BYTE PTR [rax],al
  4097bc:	jno    0x4097be
  4097be:	pop    rdi
  4097bf:	(bad)  
  4097c0:	movsxd ebp,DWORD PTR [rbp+0x64]
  4097c3:	ins    BYTE PTR es:[rdi],dx
  4097c4:	outs   dx,BYTE PTR ds:[rsi]
  4097c5:	add    BYTE PTR [rax+0x0],bh
  4097c8:	pop    rdi
  4097c9:	(bad)  
  4097ca:	ins    DWORD PTR es:[rdi],dx
  4097cb:	jae    0x409834
  4097cd:	pop    rdi
  4097ce:	gs js  0x40983a
  4097d1:	je     0x4097d3
  4097d3:	add    BYTE PTR [rdx+0x65635f00],cl
  4097d9:	js     0x409844
  4097db:	je     0x4097dd
  4097dd:	add    dl,bl
  4097df:	add    BYTE PTR [rdi+0x66],bl
  4097e2:	ins    DWORD PTR es:[rdi],dx
  4097e3:	outs   dx,DWORD PTR ds:[rsi]
  4097e4:	fs add BYTE PTR gs:[rax],al
  4097e8:	sbb    al,BYTE PTR [rcx]
  4097ea:	pop    rdi
  4097eb:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4097f2:	ins    DWORD PTR es:[rdi],dx
  4097f3:	add    BYTE PTR [rax+0x6f6c5f01],al
  4097f9:	movsxd ebp,DWORD PTR [rbx+0x0]
  4097fc:	and    eax,0x6e6f5f02
  409801:	gs js  0x40986d
  409804:	je     0x409806
  409806:	(bad)
  40980a:	outs   dx,BYTE PTR ds:[rsi]
  40980b:	ins    BYTE PTR es:[rdi],dx
  40980c:	outs   dx,DWORD PTR ds:[rsi]
  40980d:	movsxd ebp,DWORD PTR [rbx+0x0]
  409810:	jg     0x409815
  409812:	(bad)  
  409813:	(bad)  
  409814:	outs   dx,DWORD PTR ds:[rsi]
  409815:	jb     0x40988b
  409817:	add    BYTE PTR [rbx+0x6f746103],cl
  40981d:	data16 add BYTE PTR [rax],al
  409820:	mov    WORD PTR [rbx],es
  409822:	(bad)  
  409823:	je     0x409894
  409825:	imul   eax,DWORD PTR [rax],0x63039000
  40982b:	(bad)  
  40982c:	ins    BYTE PTR es:[rdi],dx
  40982d:	ins    BYTE PTR es:[rdi],dx
  40982e:	outs   dx,DWORD PTR ds:[rsi]
  40982f:	movsxd eax,DWORD PTR [rax]
  409831:	add    BYTE PTR [rbp+0x69786503],bl
  409837:	je     0x409839
  409839:	add    BYTE PTR [rax+0x72706603],dh
  40983f:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  409846:	data16 jo 0x4098be
  409849:	je     0x4098ae
  40984b:	add    BYTE PTR [rdi+0x65726603],dh
  409851:	add    BYTE PTR gs:[rax],al
  409854:	mov    ebx,0x63736603
  409859:	(bad)  
  40985a:	outs   dx,BYTE PTR ds:[rsi]
  40985b:	data16 add BYTE PTR [rax],al
  40985e:	ret    0x6603
  409861:	ja     0x4098d5
  409863:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  40986b:	gs je  0x4098d3
  40986e:	outs   dx,BYTE PTR ds:[rsi]
  40986f:	jbe    0x409871
  409871:	add    al,dh
  409873:	add    ebp,DWORD PTR [rbp+0x61]
  409876:	ins    BYTE PTR es:[rdi],dx
  409877:	ins    BYTE PTR es:[rdi],dx
  409878:	outs   dx,DWORD PTR ds:[rsi]
  409879:	movsxd eax,DWORD PTR [rax]
  40987b:	add    al,bh
  40987d:	add    ebp,DWORD PTR [rbp+0x65]
  409880:	ins    DWORD PTR es:[rdi],dx
  409881:	movsxd esi,DWORD PTR [rax+0x79]
  409884:	add    BYTE PTR [rax],al
  409886:	(bad)  
  409887:	add    al,0x73
  409889:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409890:	and    eax,DWORD PTR [rbx+rsi*2]
  409893:	je     0x409907
  409895:	movsxd ebp,DWORD PTR [rax+0x72]
  409898:	add    BYTE PTR [rax],al
  40989a:	sub    eax,DWORD PTR [rbx+rsi*2]
  40989d:	je     0x409911
  40989f:	ins    BYTE PTR es:[rdi],dx
  4098a0:	outs   dx,BYTE PTR gs:[rsi]
  4098a2:	add    BYTE PTR [rax],al
  4098a4:	cs add al,0x73
  4098a7:	je     0x40991b
  4098a9:	outs   dx,BYTE PTR ds:[rsi]
  4098aa:	movsxd ebp,DWORD PTR [rbp+0x70]
  4098ad:	add    BYTE PTR [rsi+0x4],cl
  4098b0:	jbe    0x409918
  4098b2:	jo     0x409926
  4098b4:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  4098bb:	add    BYTE PTR [rax],al
  4098bd:	nop
  4098be:	add    BYTE PTR [rax],al
  4098c0:	add    BYTE PTR [rax-0x70000000],dl
  4098c6:	add    BYTE PTR [rax],al
  4098c8:	add    BYTE PTR [rax-0x70000000],dl
  4098ce:	add    BYTE PTR [rax],al
  4098d0:	add    BYTE PTR [rax-0x70000000],dl
  4098d6:	add    BYTE PTR [rax],al
  4098d8:	ins    BYTE PTR es:[rdi],dx
  4098d9:	imul   esp,DWORD PTR [rdx+0x67],0x312d6c73
  4098e0:	cmp    DWORD PTR [rsi],ebp
  4098e2:	fs ins BYTE PTR es:[rdi],dx
  4098e4:	ins    BYTE PTR es:[rdi],dx
  4098e5:	add    BYTE PTR [rax],al
  4098e7:	add    BYTE PTR [rax+rdx*4],dl
  4098ea:	add    BYTE PTR [rax],al
  4098ec:	adc    al,0x90
  4098ee:	add    BYTE PTR [rax],al
  4098f0:	adc    al,0x90
  4098f2:	add    BYTE PTR [rax],al
  4098f4:	adc    al,0x90
  4098f6:	add    BYTE PTR [rax],al
  4098f8:	adc    al,0x90
  4098fa:	add    BYTE PTR [rax],al
  4098fc:	adc    al,0x90
  4098fe:	add    BYTE PTR [rax],al
  409900:	adc    al,0x90
  409902:	add    BYTE PTR [rax],al
  409904:	adc    al,0x90
  409906:	add    BYTE PTR [rax],al
  409908:	adc    al,0x90
  40990a:	add    BYTE PTR [rax],al
  40990c:	adc    al,0x90
  40990e:	add    BYTE PTR [rax],al
  409910:	adc    al,0x90
  409912:	add    BYTE PTR [rax],al
  409914:	adc    al,0x90
  409916:	add    BYTE PTR [rax],al
  409918:	adc    al,0x90
  40991a:	add    BYTE PTR [rax],al
  40991c:	adc    al,0x90
  40991e:	add    BYTE PTR [rax],al
  409920:	adc    al,0x90
  409922:	add    BYTE PTR [rax],al
  409924:	adc    al,0x90
  409926:	add    BYTE PTR [rax],al
  409928:	adc    al,0x90
  40992a:	add    BYTE PTR [rax],al
  40992c:	adc    al,0x90
  40992e:	add    BYTE PTR [rax],al
  409930:	adc    al,0x90
  409932:	add    BYTE PTR [rax],al
  409934:	adc    al,0x90
  409936:	add    BYTE PTR [rax],al
  409938:	adc    al,0x90
  40993a:	add    BYTE PTR [rax],al
  40993c:	adc    al,0x90
  40993e:	add    BYTE PTR [rax],al
  409940:	adc    al,0x90
  409942:	add    BYTE PTR [rax],al
  409944:	rex.WXB
  409945:	rex.RB push r10
  409947:	rex.WRX
  409948:	rex.RB
  409949:	xor    r14,QWORD PTR [rdx]
  40994c:	cs fs ins BYTE PTR es:[rdi],dx
  40994f:	ins    BYTE PTR es:[rdi],dx
  409950:	add    BYTE PTR [rax],al
  409952:	add    BYTE PTR [rax],al
  409954:	sub    BYTE PTR [rax-0x6fd80000],dl
  40995a:	add    BYTE PTR [rax],al
  40995c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409962:	add    BYTE PTR [rax],al
  409964:	sub    BYTE PTR [rax-0x6fd80000],dl
  40996a:	add    BYTE PTR [rax],al
  40996c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409972:	add    BYTE PTR [rax],al
  409974:	sub    BYTE PTR [rax-0x6fd80000],dl
  40997a:	add    BYTE PTR [rax],al
  40997c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409982:	add    BYTE PTR [rax],al
  409984:	sub    BYTE PTR [rax-0x6fd80000],dl
  40998a:	add    BYTE PTR [rax],al
  40998c:	sub    BYTE PTR [rax-0x6fd80000],dl
  409992:	add    BYTE PTR [rax],al
  409994:	sub    BYTE PTR [rax-0x6fd80000],dl
  40999a:	add    BYTE PTR [rax],al
  40999c:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099a2:	add    BYTE PTR [rax],al
  4099a4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099aa:	add    BYTE PTR [rax],al
  4099ac:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099b2:	add    BYTE PTR [rax],al
  4099b4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ba:	add    BYTE PTR [rax],al
  4099bc:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099c2:	add    BYTE PTR [rax],al
  4099c4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ca:	add    BYTE PTR [rax],al
  4099cc:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099d2:	add    BYTE PTR [rax],al
  4099d4:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099da:	add    BYTE PTR [rax],al
  4099dc:	sub    BYTE PTR [rax+0x736d0000],dl
  4099e2:	jbe    0x409a47
  4099e4:	jb     0x409a5a
  4099e6:	cs fs ins BYTE PTR es:[rdi],dx
  4099e9:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax+0x17],dl
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x4019],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax+0x19],dl
  40a04a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
