
9e8cece950c181dd27eb143dc8d06361508b0087685108f4fb6f0959824c51df.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x28
   140001004:	call   QWORD PTR [rip+0x5106]        # 0x140006110
   14000100a:	lea    rcx,[rip+0x54a7]        # 0x1400064b8
   140001011:	mov    BYTE PTR [rip+0x8758],0x0        # 0x140009770
   140001018:	mov    QWORD PTR [rip+0x8741],rcx        # 0x140009760
   14000101f:	lea    rcx,[rip+0x49fa]        # 0x140005a20
   140001026:	mov    QWORD PTR [rip+0x873b],rax        # 0x140009768
   14000102d:	add    rsp,0x28
   140001031:	jmp    0x140004d08
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	lea    rcx,[rip+0x4a19]        # 0x140005a60
   140001047:	jmp    0x140004d08
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	rex push rbx
   140001052:	sub    rsp,0x20
   140001056:	xor    edx,edx
   140001058:	lea    rcx,[rip+0x8749]        # 0x1400097a8
   14000105f:	lea    r8d,[rdx+0x28]
   140001063:	call   QWORD PTR [rip+0x51e7]        # 0x140006250
   140001069:	and    QWORD PTR [rip+0x875f],0x0        # 0x1400097d0
   140001071:	lea    rax,[rip+0xffffffffffffef88]        # 0x140000000
   140001078:	and    DWORD PTR [rip+0x8759],0x0        # 0x1400097d8
   14000107f:	lea    rcx,[rip+0x8722]        # 0x1400097a8
   140001086:	and    DWORD PTR [rip+0x874f],0x0        # 0x1400097dc
   14000108d:	mov    ebx,0x1
   140001092:	mov    QWORD PTR [rip+0x86f7],rax        # 0x140009790
   140001099:	mov    QWORD PTR [rip+0x86e8],rax        # 0x140009788
   1400010a0:	lea    rax,[rip+0x5649]        # 0x1400066f0
   1400010a7:	mov    QWORD PTR [rip+0x86f2],rax        # 0x1400097a0
   1400010ae:	mov    DWORD PTR [rip+0x86c8],0x60        # 0x140009780
   1400010b8:	mov    BYTE PTR [rip+0x86da],bl        # 0x140009798
   1400010be:	mov    DWORD PTR [rip+0x86d4],0x800        # 0x14000979c
   1400010c8:	call   0x14000473c
   1400010cd:	movzx  ecx,BYTE PTR [rip+0x8650]        # 0x140009724
   1400010d4:	test   eax,eax
   1400010d6:	cmovs  ecx,ebx
   1400010d9:	mov    BYTE PTR [rip+0x8645],cl        # 0x140009724
   1400010df:	lea    rcx,[rip+0x499a]        # 0x140005a80
   1400010e6:	add    rsp,0x20
   1400010ea:	pop    rbx
   1400010eb:	jmp    0x140004d08
   1400010f0:	sub    rsp,0x28
   1400010f4:	xor    edx,edx
   1400010f6:	lea    rcx,[rip+0x86eb]        # 0x1400097e8
   1400010fd:	lea    r8d,[rdx+0x28]
   140001101:	call   QWORD PTR [rip+0x5149]        # 0x140006250
   140001107:	and    QWORD PTR [rip+0x8709],0x0        # 0x140009818
   14000110f:	lea    rcx,[rip+0x86d2]        # 0x1400097e8
   140001116:	and    DWORD PTR [rip+0x8703],0x0        # 0x140009820
   14000111d:	and    DWORD PTR [rip+0x8700],0x0        # 0x140009824
   140001124:	and    QWORD PTR [rip+0x86e4],0x0        # 0x140009810
   14000112c:	mov    DWORD PTR [rip+0x86aa],0x48        # 0x1400097e0
   140001136:	call   0x14000473c
   14000113b:	test   eax,eax
   14000113d:	jns    0x14000114d
   14000113f:	and    DWORD PTR [rip+0x869a],0x0        # 0x1400097e0
   140001146:	mov    BYTE PTR [rip+0x85d7],0x1        # 0x140009724
   14000114d:	lea    rcx,[rip+0x497c]        # 0x140005ad0
   140001154:	add    rsp,0x28
   140001158:	jmp    0x140004d08
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	int3   
   140001161:	int3   
   140001162:	int3   
   140001163:	int3   
   140001164:	int3   
   140001165:	int3   
   140001166:	int3   
   140001167:	int3   
   140001168:	sub    rsp,0x38
   14000116c:	and    QWORD PTR [rsp+0x20],0x0
   140001172:	movzx  r9d,dx
   140001176:	mov    edx,0x2b
   14000117b:	call   QWORD PTR [rip+0x4e7f]        # 0x140006000
   140001181:	add    rsp,0x38
   140001185:	ret    
   140001186:	int3   
   140001187:	int3   
   140001188:	int3   
   140001189:	int3   
   14000118a:	int3   
   14000118b:	int3   
   14000118c:	sub    rsp,0x48
   140001190:	xor    r11d,r11d
   140001193:	test   r9,r9
   140001196:	je     0x1400011bc
   140001198:	cmp    WORD PTR [r9],r11w
   14000119c:	jne    0x1400011a4
   14000119e:	lea    eax,[r11+0xe]
   1400011a2:	jmp    0x1400011c1
   1400011a4:	or     rax,0xffffffffffffffff
   1400011a8:	inc    rax
   1400011ab:	cmp    WORD PTR [r9+rax*2],r11w
   1400011b0:	jne    0x1400011a8
   1400011b2:	lea    rax,[rax*2+0x2]
   1400011ba:	jmp    0x1400011c1
   1400011bc:	mov    eax,0xa
   1400011c1:	test   r9,r9
   1400011c4:	je     0x1400011d7
   1400011c6:	cmp    WORD PTR [r9],r11w
   1400011ca:	lea    r10,[rip+0x530f]        # 0x1400064e0
   1400011d1:	cmove  r9,r10
   1400011d5:	jmp    0x1400011de
   1400011d7:	lea    r9,[rip+0x5312]        # 0x1400064f0
   1400011de:	mov    QWORD PTR [rsp+0x30],r11
   1400011e3:	mov    QWORD PTR [rsp+0x28],rax
   1400011e8:	mov    QWORD PTR [rsp+0x20],r9
   1400011ed:	movzx  r9d,dx
   1400011f1:	mov    edx,0x2b
   1400011f6:	call   QWORD PTR [rip+0x4e04]        # 0x140006000
   1400011fc:	add    rsp,0x48
   140001200:	ret    
   140001201:	int3   
   140001202:	int3   
   140001203:	int3   
   140001204:	int3   
   140001205:	int3   
   140001206:	int3   
   140001207:	int3   
   140001208:	mov    r11,rsp
   14000120b:	mov    DWORD PTR [r11+0x20],r9d
   14000120f:	sub    rsp,0x48
   140001213:	and    QWORD PTR [r11-0x18],0x0
   140001218:	lea    rax,[r11+0x20]
   14000121c:	movzx  r9d,dx
   140001220:	mov    edx,0x2b
   140001225:	mov    QWORD PTR [r11-0x20],0x4
   14000122d:	mov    QWORD PTR [r11-0x28],rax
   140001231:	call   QWORD PTR [rip+0x4dc9]        # 0x140006000
   140001237:	add    rsp,0x48
   14000123b:	ret    
   14000123c:	int3   
   14000123d:	int3   
   14000123e:	int3   
   14000123f:	int3   
   140001240:	int3   
   140001241:	int3   
   140001242:	int3   
   140001243:	int3   
   140001244:	int3   
   140001245:	int3   
   140001246:	int3   
   140001247:	int3   
   140001248:	int3   
   140001249:	int3   
   14000124a:	int3   
   14000124b:	int3   
   14000124c:	int3   
   14000124d:	int3   
   14000124e:	int3   
   14000124f:	int3   
   140001250:	mov    QWORD PTR [rsp+0x8],rbx
   140001255:	mov    QWORD PTR [rsp+0x10],rsi
   14000125a:	push   rdi
   14000125b:	sub    rsp,0x20
   14000125f:	and    DWORD PTR [r8],0x0
   140001263:	mov    rbx,rdx
   140001266:	sub    ecx,0x4
   140001269:	je     0x140001280
   14000126b:	cmp    ecx,0x1
   14000126e:	je     0x140001277
   140001270:	mov    eax,0x57
   140001275:	jmp    0x1400012bf
   140001277:	xor    edi,edi
   140001279:	xor    eax,eax
   14000127b:	xor    sil,sil
   14000127e:	jmp    0x1400012a1
   140001280:	mov    rcx,r9
   140001283:	call   QWORD PTR [rip+0x4d7f]        # 0x140006008
   140001289:	mov    rcx,rax
   14000128c:	mov    rdi,rax
   14000128f:	call   QWORD PTR [rip+0x4d7b]        # 0x140006010
   140001295:	mov    rcx,rdi
   140001298:	mov    sil,al
   14000129b:	call   QWORD PTR [rip+0x4d77]        # 0x140006018
   1400012a1:	test   BYTE PTR [rbx+0x1a],0x2
   1400012a5:	je     0x1400012b2
   1400012a7:	mov    rcx,QWORD PTR [rbx+0x10]
   1400012ab:	test   rcx,rcx
   1400012ae:	cmovne rbx,rcx
   1400012b2:	mov    QWORD PTR [rbx+0x10],rdi
   1400012b6:	mov    BYTE PTR [rbx+0x19],sil
   1400012ba:	mov    DWORD PTR [rbx+0x1c],eax
   1400012bd:	xor    eax,eax
   1400012bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400012c4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400012c9:	add    rsp,0x20
   1400012cd:	pop    rdi
   1400012ce:	ret    
   1400012cf:	int3   
   1400012d0:	int3   
   1400012d1:	int3   
   1400012d2:	int3   
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	rex push rbx
   1400012da:	sub    rsp,0x30
   1400012de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400012e7:	mov    bl,cl
   1400012e9:	mov    eax,DWORD PTR [rip+0x853d]        # 0x14000982c
   1400012ef:	test   al,0x1
   1400012f1:	jne    0x14000132b
   1400012f3:	or     eax,0x1
   1400012f6:	mov    DWORD PTR [rip+0x8530],eax        # 0x14000982c
   1400012fc:	and    QWORD PTR [rip+0x852c],0x0        # 0x140009830
   140001304:	and    QWORD PTR [rip+0x852c],0x0        # 0x140009838
   14000130c:	xorps  xmm0,xmm0
   14000130f:	movdqa XMMWORD PTR [rip+0x8529],xmm0        # 0x140009840
   140001317:	and    QWORD PTR [rip+0x8539],0x0        # 0x140009858
   14000131f:	lea    rcx,[rip+0x46ea]        # 0x140005a10
   140001326:	call   0x140004d08
   14000132b:	test   bl,bl
   14000132d:	je     0x140001336
   14000132f:	call   0x140003110
   140001334:	jmp    0x14000133c
   140001336:	call   0x1400034d8
   14000133b:	nop
   14000133c:	add    rsp,0x30
   140001340:	pop    rbx
   140001341:	ret    
   140001342:	int3   
   140001343:	int3   
   140001344:	int3   
   140001345:	int3   
   140001346:	int3   
   140001347:	int3   
   140001348:	mov    rax,rsp
   14000134b:	push   rdi
   14000134c:	sub    rsp,0x30
   140001350:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140001358:	mov    QWORD PTR [rax+0x10],rbx
   14000135c:	mov    QWORD PTR [rax+0x18],rbp
   140001360:	mov    QWORD PTR [rax+0x20],rsi
   140001364:	lea    rbp,[rip+0x7cb5]        # 0x140009020
   14000136b:	mov    rcx,QWORD PTR [rip+0x7cae]        # 0x140009020
   140001372:	cmp    rcx,rbp
   140001375:	je     0x140001398
   140001377:	test   BYTE PTR [rcx+0x1c],0x1
   14000137b:	je     0x140001398
   14000137d:	cmp    BYTE PTR [rcx+0x19],0x5
   140001381:	jb     0x140001398
   140001383:	mov    edx,0xf
   140001388:	lea    r8,[rip+0x5199]        # 0x140006528
   14000138f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001393:	call   0x140001168
   140001398:	xor    r8d,r8d
   14000139b:	mov    edx,0x41000001
   1400013a0:	lea    rcx,[rsp+0x40]
   1400013a5:	call   0x140003600
   1400013aa:	nop
   1400013ab:	mov    rcx,QWORD PTR [rax]
   1400013ae:	call   0x140004074
   1400013b3:	nop
   1400013b4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400013b9:	or     eax,0xffffffff
   1400013bc:	lock xadd DWORD PTR [rsi-0x8],eax
   1400013c1:	sub    eax,0x1
   1400013c4:	jg     0x1400013e3
   1400013c6:	mov    rdi,QWORD PTR [rsi-0x18]
   1400013ca:	mov    rax,QWORD PTR [rdi]
   1400013cd:	mov    rbx,QWORD PTR [rax+0x8]
   1400013d1:	mov    rcx,rbx
   1400013d4:	call   QWORD PTR [rip+0x4f76]        # 0x140006350
   1400013da:	lea    rdx,[rsi-0x18]
   1400013de:	mov    rcx,rdi
   1400013e1:	call   rbx
   1400013e3:	mov    rcx,QWORD PTR [rip+0x7c36]        # 0x140009020
   1400013ea:	cmp    rcx,rbp
   1400013ed:	je     0x140001410
   1400013ef:	test   BYTE PTR [rcx+0x1c],0x1
   1400013f3:	je     0x140001410
   1400013f5:	cmp    BYTE PTR [rcx+0x19],0x5
   1400013f9:	jb     0x140001410
   1400013fb:	mov    edx,0x10
   140001400:	lea    r8,[rip+0x5121]        # 0x140006528
   140001407:	mov    rcx,QWORD PTR [rcx+0x10]
   14000140b:	call   0x140001168
   140001410:	xor    eax,eax
   140001412:	mov    rbx,QWORD PTR [rsp+0x48]
   140001417:	mov    rbp,QWORD PTR [rsp+0x50]
   14000141c:	mov    rsi,QWORD PTR [rsp+0x58]
   140001421:	add    rsp,0x30
   140001425:	pop    rdi
   140001426:	ret    
   140001427:	int3   
   140001428:	int3   
   140001429:	int3   
   14000142a:	int3   
   14000142b:	int3   
   14000142c:	int3   
   14000142d:	int3   
   14000142e:	int3   
   14000142f:	int3   
   140001430:	rex push rbp
   140001432:	push   rbx
   140001433:	push   rsi
   140001434:	push   rdi
   140001435:	push   r12
   140001437:	push   r13
   140001439:	push   r14
   14000143b:	mov    rbp,rsp
   14000143e:	sub    rsp,0x40
   140001442:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14000144a:	lea    r12,[rip+0x7bcf]        # 0x140009020
   140001451:	lea    r13,[rip+0x50d0]        # 0x140006528
   140001458:	mov    rcx,QWORD PTR [rip+0x7bc1]        # 0x140009020
   14000145f:	cmp    rcx,r12
   140001462:	je     0x140001481
   140001464:	test   BYTE PTR [rcx+0x1c],0x1
   140001468:	je     0x140001481
   14000146a:	cmp    BYTE PTR [rcx+0x19],0x5
   14000146e:	jb     0x140001481
   140001470:	mov    edx,0x13
   140001475:	mov    r8,r13
   140001478:	mov    rcx,QWORD PTR [rcx+0x10]
   14000147c:	call   0x140001168
   140001481:	call   0x1400038bc
   140001486:	test   al,al
   140001488:	je     0x14000150f
   14000148e:	mov    rcx,QWORD PTR [rip+0x7b8b]        # 0x140009020
   140001495:	cmp    rcx,r12
   140001498:	je     0x1400014b7
   14000149a:	test   BYTE PTR [rcx+0x1c],0x1
   14000149e:	je     0x1400014b7
   1400014a0:	cmp    BYTE PTR [rcx+0x19],0x4
   1400014a4:	jb     0x1400014b7
   1400014a6:	mov    edx,0x14
   1400014ab:	mov    r8,r13
   1400014ae:	mov    rcx,QWORD PTR [rcx+0x10]
   1400014b2:	call   0x140001168
   1400014b7:	mov    esi,0x800710dd
   1400014bc:	xor    r8d,r8d
   1400014bf:	mov    edx,0xc1000008
   1400014c4:	lea    rcx,[rbp-0x20]
   1400014c8:	call   0x140003600
   1400014cd:	nop
   1400014ce:	mov    rcx,QWORD PTR [rax]
   1400014d1:	call   0x140004074
   1400014d6:	nop
   1400014d7:	mov    r14,QWORD PTR [rbp-0x20]
   1400014db:	or     eax,0xffffffff
   1400014de:	lock xadd DWORD PTR [r14-0x8],eax
   1400014e4:	sub    eax,0x1
   1400014e7:	jg     0x14000169a
   1400014ed:	mov    rdi,QWORD PTR [r14-0x18]
   1400014f1:	mov    rax,QWORD PTR [rdi]
   1400014f4:	mov    rbx,QWORD PTR [rax+0x8]
   1400014f8:	mov    rcx,rbx
   1400014fb:	call   QWORD PTR [rip+0x4e4f]        # 0x140006350
   140001501:	lea    rdx,[r14-0x18]
   140001505:	mov    rcx,rdi
   140001508:	call   rbx
   14000150a:	jmp    0x14000169a
   14000150f:	lea    rcx,[rbp+0x58]
   140001513:	call   0x1400042f4
   140001518:	nop
   140001519:	mov    rbx,QWORD PTR [rbp+0x58]
   14000151d:	mov    rax,QWORD PTR [rbx]
   140001520:	mov    rdi,QWORD PTR [rax+0x18]
   140001524:	mov    rcx,rdi
   140001527:	call   QWORD PTR [rip+0x4e23]        # 0x140006350
   14000152d:	lea    rdx,[rbp+0x48]
   140001531:	mov    rcx,rbx
   140001534:	call   rdi
   140001536:	mov    ebx,eax
   140001538:	test   eax,eax
   14000153a:	jns    0x140001589
   14000153c:	mov    rcx,QWORD PTR [rip+0x7add]        # 0x140009020
   140001543:	cmp    rcx,r12
   140001546:	je     0x140001568
   140001548:	test   BYTE PTR [rcx+0x1c],0x1
   14000154c:	je     0x140001568
   14000154e:	cmp    BYTE PTR [rcx+0x19],0x2
   140001552:	jb     0x140001568
   140001554:	mov    edx,0x15
   140001559:	mov    r9d,eax
   14000155c:	mov    r8,r13
   14000155f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001563:	call   0x140001208
   140001568:	mov    edx,ebx
   14000156a:	lea    rcx,[rbp+0x50]
   14000156e:	call   0x1400029f0
   140001573:	mov    ecx,DWORD PTR [rax]
   140001575:	mov    DWORD PTR [rbp+0x40],ecx
   140001578:	lea    rdx,[rip+0x6491]        # 0x140007a10
   14000157f:	lea    rcx,[rbp+0x40]
   140001583:	call   0x140004dac
   140001588:	int3   
   140001589:	cmp    DWORD PTR [rbp+0x48],0x0
   14000158d:	je     0x140001605
   14000158f:	mov    rcx,QWORD PTR [rip+0x7a8a]        # 0x140009020
   140001596:	cmp    rcx,r12
   140001599:	je     0x1400015b8
   14000159b:	test   BYTE PTR [rcx+0x1c],0x1
   14000159f:	je     0x1400015b8
   1400015a1:	cmp    BYTE PTR [rcx+0x19],0x4
   1400015a5:	jb     0x1400015b8
   1400015a7:	mov    edx,0x16
   1400015ac:	mov    r8,r13
   1400015af:	mov    rcx,QWORD PTR [rcx+0x10]
   1400015b3:	call   0x140001168
   1400015b8:	xor    r8d,r8d
   1400015bb:	mov    edx,0x41000003
   1400015c0:	lea    rcx,[rbp-0x18]
   1400015c4:	call   0x140003600
   1400015c9:	nop
   1400015ca:	mov    rcx,QWORD PTR [rax]
   1400015cd:	call   0x140004074
   1400015d2:	nop
   1400015d3:	mov    rsi,QWORD PTR [rbp-0x18]
   1400015d7:	or     eax,0xffffffff
   1400015da:	lock xadd DWORD PTR [rsi-0x8],eax
   1400015df:	sub    eax,0x1
   1400015e2:	jg     0x140001601
   1400015e4:	mov    rdi,QWORD PTR [rsi-0x18]
   1400015e8:	mov    rax,QWORD PTR [rdi]
   1400015eb:	mov    rbx,QWORD PTR [rax+0x8]
   1400015ef:	mov    rcx,rbx
   1400015f2:	call   QWORD PTR [rip+0x4d58]        # 0x140006350
   1400015f8:	lea    rdx,[rsi-0x18]
   1400015fc:	mov    rcx,rdi
   1400015ff:	call   rbx
   140001601:	xor    esi,esi
   140001603:	jmp    0x14000167c
   140001605:	mov    rcx,QWORD PTR [rip+0x7a14]        # 0x140009020
   14000160c:	cmp    rcx,r12
   14000160f:	je     0x14000162e
   140001611:	test   BYTE PTR [rcx+0x1c],0x1
   140001615:	je     0x14000162e
   140001617:	cmp    BYTE PTR [rcx+0x19],0x4
   14000161b:	jb     0x14000162e
   14000161d:	mov    edx,0x17
   140001622:	mov    r8,r13
   140001625:	mov    rcx,QWORD PTR [rcx+0x10]
   140001629:	call   0x140001168
   14000162e:	xor    r8d,r8d
   140001631:	mov    edx,0x41000004
   140001636:	lea    rcx,[rbp-0x10]
   14000163a:	call   0x140003600
   14000163f:	nop
   140001640:	mov    rcx,QWORD PTR [rax]
   140001643:	call   0x140004074
   140001648:	nop
   140001649:	mov    rsi,QWORD PTR [rbp-0x10]
   14000164d:	or     eax,0xffffffff
   140001650:	lock xadd DWORD PTR [rsi-0x8],eax
   140001655:	sub    eax,0x1
   140001658:	jg     0x140001677
   14000165a:	mov    rdi,QWORD PTR [rsi-0x18]
   14000165e:	mov    rax,QWORD PTR [rdi]
   140001661:	mov    rbx,QWORD PTR [rax+0x8]
   140001665:	mov    rcx,rbx
   140001668:	call   QWORD PTR [rip+0x4ce2]        # 0x140006350
   14000166e:	lea    rdx,[rsi-0x18]
   140001672:	mov    rcx,rdi
   140001675:	call   rbx
   140001677:	mov    esi,0x1
   14000167c:	mov    rbx,QWORD PTR [rbp+0x58]
   140001680:	test   rbx,rbx
   140001683:	je     0x14000169a
   140001685:	mov    rax,QWORD PTR [rbx]
   140001688:	mov    rdi,QWORD PTR [rax+0x10]
   14000168c:	mov    rcx,rdi
   14000168f:	call   QWORD PTR [rip+0x4cbb]        # 0x140006350
   140001695:	mov    rcx,rbx
   140001698:	call   rdi
   14000169a:	mov    rcx,QWORD PTR [rip+0x797f]        # 0x140009020
   1400016a1:	cmp    rcx,r12
   1400016a4:	je     0x1400016c3
   1400016a6:	test   BYTE PTR [rcx+0x1c],0x1
   1400016aa:	je     0x1400016c3
   1400016ac:	cmp    BYTE PTR [rcx+0x19],0x5
   1400016b0:	jb     0x1400016c3
   1400016b2:	mov    edx,0x18
   1400016b7:	mov    r8,r13
   1400016ba:	mov    rcx,QWORD PTR [rcx+0x10]
   1400016be:	call   0x140001168
   1400016c3:	mov    eax,esi
   1400016c5:	add    rsp,0x40
   1400016c9:	pop    r14
   1400016cb:	pop    r13
   1400016cd:	pop    r12
   1400016cf:	pop    rdi
   1400016d0:	pop    rsi
   1400016d1:	pop    rbx
   1400016d2:	pop    rbp
   1400016d3:	ret    
   1400016d4:	int3   
   1400016d5:	int3   
   1400016d6:	int3   
   1400016d7:	int3   
   1400016d8:	int3   
   1400016d9:	int3   
   1400016da:	int3   
   1400016db:	int3   
   1400016dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400016e1:	push   rdi
   1400016e2:	sub    rsp,0x20
   1400016e6:	mov    rdi,QWORD PTR [rcx]
   1400016e9:	test   rdi,rdi
   1400016ec:	je     0x140001703
   1400016ee:	mov    rax,QWORD PTR [rdi]
   1400016f1:	mov    rbx,QWORD PTR [rax+0x10]
   1400016f5:	mov    rcx,rbx
   1400016f8:	call   QWORD PTR [rip+0x4c52]        # 0x140006350
   1400016fe:	mov    rcx,rdi
   140001701:	call   rbx
   140001703:	mov    rbx,QWORD PTR [rsp+0x30]
   140001708:	add    rsp,0x20
   14000170c:	pop    rdi
   14000170d:	ret    
   14000170e:	int3   
   14000170f:	int3   
   140001710:	int3   
   140001711:	int3   
   140001712:	int3   
   140001713:	int3   
   140001714:	rex push rbp
   140001716:	push   rbx
   140001717:	push   rsi
   140001718:	push   rdi
   140001719:	push   r12
   14000171b:	push   r14
   14000171d:	push   r15
   14000171f:	mov    rbp,rsp
   140001722:	sub    rsp,0x40
   140001726:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   14000172e:	mov    r15b,cl
   140001731:	call   0x1400038bc
   140001736:	test   al,al
   140001738:	je     0x14000177b
   14000173a:	lea    r14,[rip+0x78df]        # 0x140009020
   140001741:	mov    rcx,QWORD PTR [rip+0x78d8]        # 0x140009020
   140001748:	cmp    rcx,r14
   14000174b:	je     0x140001771
   14000174d:	mov    sil,0x1
   140001750:	test   BYTE PTR [rcx+0x1c],sil
   140001754:	je     0x140001771
   140001756:	cmp    BYTE PTR [rcx+0x19],0x4
   14000175a:	jb     0x140001771
   14000175c:	mov    edx,0x19
   140001761:	lea    r8,[rip+0x4dc0]        # 0x140006528
   140001768:	mov    rcx,QWORD PTR [rcx+0x10]
   14000176c:	call   0x140001168
   140001771:	mov    eax,0x800710dd
   140001776:	jmp    0x140001b47
   14000177b:	call   0x1400036f4
   140001780:	test   al,al
   140001782:	jne    0x1400017c5
   140001784:	lea    r14,[rip+0x7895]        # 0x140009020
   14000178b:	mov    rcx,QWORD PTR [rip+0x788e]        # 0x140009020
   140001792:	cmp    rcx,r14
   140001795:	je     0x1400017bb
   140001797:	mov    sil,0x1
   14000179a:	test   BYTE PTR [rcx+0x1c],sil
   14000179e:	je     0x1400017bb
   1400017a0:	cmp    BYTE PTR [rcx+0x19],0x4
   1400017a4:	jb     0x1400017bb
   1400017a6:	mov    edx,0x1a
   1400017ab:	lea    r8,[rip+0x4d76]        # 0x140006528
   1400017b2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400017b6:	call   0x140001168
   1400017bb:	mov    eax,0x800702e4
   1400017c0:	jmp    0x140001b47
   1400017c5:	lea    rcx,[rbp-0x18]
   1400017c9:	call   0x1400042f4
   1400017ce:	nop
   1400017cf:	mov    rbx,QWORD PTR [rbp-0x18]
   1400017d3:	mov    rax,QWORD PTR [rbx]
   1400017d6:	mov    rdi,QWORD PTR [rax+0x18]
   1400017da:	mov    rcx,rdi
   1400017dd:	call   QWORD PTR [rip+0x4b6d]        # 0x140006350
   1400017e3:	lea    rdx,[rbp+0x58]
   1400017e7:	mov    rcx,rbx
   1400017ea:	call   rdi
   1400017ec:	mov    ebx,eax
   1400017ee:	test   eax,eax
   1400017f0:	jns    0x14000184d
   1400017f2:	lea    r14,[rip+0x7827]        # 0x140009020
   1400017f9:	mov    rcx,QWORD PTR [rip+0x7820]        # 0x140009020
   140001800:	cmp    rcx,r14
   140001803:	je     0x14000182c
   140001805:	mov    sil,0x1
   140001808:	test   BYTE PTR [rcx+0x1c],sil
   14000180c:	je     0x14000182c
   14000180e:	cmp    BYTE PTR [rcx+0x19],0x2
   140001812:	jb     0x14000182c
   140001814:	mov    edx,0x1b
   140001819:	mov    r9d,eax
   14000181c:	lea    r8,[rip+0x4d05]        # 0x140006528
   140001823:	mov    rcx,QWORD PTR [rcx+0x10]
   140001827:	call   0x140001208
   14000182c:	mov    edx,ebx
   14000182e:	lea    rcx,[rbp-0x20]
   140001832:	call   0x1400029f0
   140001837:	mov    ecx,DWORD PTR [rax]
   140001839:	mov    DWORD PTR [rbp+0x50],ecx
   14000183c:	lea    rdx,[rip+0x61cd]        # 0x140007a10
   140001843:	lea    rcx,[rbp+0x50]
   140001847:	call   0x140004dac
   14000184c:	int3   
   14000184d:	movzx  r12d,r15b
   140001851:	xor    eax,eax
   140001853:	cmp    DWORD PTR [rbp+0x58],eax
   140001856:	setne  al
   140001859:	cmp    eax,r12d
   14000185c:	jne    0x1400018a6
   14000185e:	lea    r14,[rip+0x77bb]        # 0x140009020
   140001865:	mov    rcx,QWORD PTR [rip+0x77b4]        # 0x140009020
   14000186c:	cmp    rcx,r14
   14000186f:	je     0x140001b1e
   140001875:	mov    sil,0x1
   140001878:	test   BYTE PTR [rcx+0x1c],sil
   14000187c:	je     0x140001b1e
   140001882:	cmp    BYTE PTR [rcx+0x19],0x4
   140001886:	jb     0x140001b1e
   14000188c:	mov    edx,0x1c
   140001891:	lea    r8,[rip+0x4c90]        # 0x140006528
   140001898:	mov    rcx,QWORD PTR [rcx+0x10]
   14000189c:	call   0x140001168
   1400018a1:	jmp    0x140001b1e
   1400018a6:	call   0x1400040f4
   1400018ab:	mov    ebx,eax
   1400018ad:	lea    r14,[rip+0x776c]        # 0x140009020
   1400018b4:	mov    sil,0x1
   1400018b7:	mov    rcx,QWORD PTR [rip+0x7762]        # 0x140009020
   1400018be:	cmp    rcx,r14
   1400018c1:	je     0x1400018ee
   1400018c3:	test   BYTE PTR [rcx+0x1c],sil
   1400018c7:	je     0x1400018ee
   1400018c9:	cmp    BYTE PTR [rcx+0x19],0x4
   1400018cd:	jb     0x1400018ee
   1400018cf:	mov    edx,0x1d
   1400018d4:	mov    r9d,eax
   1400018d7:	lea    r8,[rip+0x4c4a]        # 0x140006528
   1400018de:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018e2:	call   0x140001208
   1400018e7:	mov    rcx,QWORD PTR [rip+0x7732]        # 0x140009020
   1400018ee:	test   ebx,ebx
   1400018f0:	je     0x140001941
   1400018f2:	cmp    rcx,r14
   1400018f5:	je     0x140001919
   1400018f7:	test   BYTE PTR [rcx+0x1c],sil
   1400018fb:	je     0x140001919
   1400018fd:	cmp    BYTE PTR [rcx+0x19],0x4
   140001901:	jb     0x140001919
   140001903:	mov    edx,0x1e
   140001908:	lea    r8,[rip+0x4c19]        # 0x140006528
   14000190f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001913:	call   0x140001168
   140001918:	nop
   140001919:	mov    rbx,QWORD PTR [rbp-0x18]
   14000191d:	test   rbx,rbx
   140001920:	je     0x140001937
   140001922:	mov    rax,QWORD PTR [rbx]
   140001925:	mov    rdi,QWORD PTR [rax+0x10]
   140001929:	mov    rcx,rdi
   14000192c:	call   QWORD PTR [rip+0x4a1e]        # 0x140006350
   140001932:	mov    rcx,rbx
   140001935:	call   rdi
   140001937:	mov    eax,0x800704ec
   14000193c:	jmp    0x140001b47
   140001941:	test   r15b,r15b
   140001944:	je     0x140001a00
   14000194a:	mov    rbx,QWORD PTR [rbp-0x18]
   14000194e:	mov    rax,QWORD PTR [rbx]
   140001951:	mov    rdi,QWORD PTR [rax+0x28]
   140001955:	mov    rcx,rdi
   140001958:	call   QWORD PTR [rip+0x49f2]        # 0x140006350
   14000195e:	lea    rdx,[rbp+0x48]
   140001962:	mov    rcx,rbx
   140001965:	call   rdi
   140001967:	mov    ebx,eax
   140001969:	test   eax,eax
   14000196b:	jns    0x1400019be
   14000196d:	mov    rcx,QWORD PTR [rip+0x76ac]        # 0x140009020
   140001974:	cmp    rcx,r14
   140001977:	je     0x14000199d
   140001979:	test   BYTE PTR [rcx+0x1c],sil
   14000197d:	je     0x14000199d
   14000197f:	cmp    BYTE PTR [rcx+0x19],0x2
   140001983:	jb     0x14000199d
   140001985:	mov    edx,0x1f
   14000198a:	mov    r9d,eax
   14000198d:	lea    r8,[rip+0x4b94]        # 0x140006528
   140001994:	mov    rcx,QWORD PTR [rcx+0x10]
   140001998:	call   0x140001208
   14000199d:	mov    edx,ebx
   14000199f:	lea    rcx,[rbp-0x20]
   1400019a3:	call   0x1400029f0
   1400019a8:	mov    ecx,DWORD PTR [rax]
   1400019aa:	mov    DWORD PTR [rbp+0x50],ecx
   1400019ad:	lea    rdx,[rip+0x605c]        # 0x140007a10
   1400019b4:	lea    rcx,[rbp+0x50]
   1400019b8:	call   0x140004dac
   1400019bd:	int3   
   1400019be:	mov    rcx,QWORD PTR [rip+0x765b]        # 0x140009020
   1400019c5:	cmp    rcx,r14
   1400019c8:	je     0x1400019fb
   1400019ca:	test   BYTE PTR [rcx+0x1c],sil
   1400019ce:	je     0x1400019fb
   1400019d0:	cmp    BYTE PTR [rcx+0x19],0x4
   1400019d4:	jb     0x1400019fb
   1400019d6:	mov    edx,0x20
   1400019db:	mov    r9d,DWORD PTR [rbp+0x48]
   1400019df:	lea    r8,[rip+0x4b42]        # 0x140006528
   1400019e6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400019ea:	call   0x140001208
   1400019ef:	mov    edx,DWORD PTR [rbp+0x48]
   1400019f2:	mov    rcx,QWORD PTR [rip+0x7627]        # 0x140009020
   1400019f9:	jmp    0x140001a05
   1400019fb:	mov    edx,DWORD PTR [rbp+0x48]
   1400019fe:	jmp    0x140001a05
   140001a00:	xor    edx,edx
   140001a02:	mov    DWORD PTR [rbp+0x48],edx
   140001a05:	test   edx,edx
   140001a07:	je     0x140001aab
   140001a0d:	cmp    edx,0x1
   140001a10:	je     0x140001a5c
   140001a12:	cmp    rcx,r14
   140001a15:	je     0x140001a38
   140001a17:	test   BYTE PTR [rcx+0x1c],sil
   140001a1b:	je     0x140001a38
   140001a1d:	cmp    BYTE PTR [rcx+0x19],0x2
   140001a21:	jb     0x140001a38
   140001a23:	mov    edx,0x23
   140001a28:	lea    r8,[rip+0x4af9]        # 0x140006528
   140001a2f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a33:	call   0x140001168
   140001a38:	mov    edx,0x80070507
   140001a3d:	lea    rcx,[rbp-0x20]
   140001a41:	call   0x1400029f0
   140001a46:	mov    ecx,DWORD PTR [rax]
   140001a48:	mov    DWORD PTR [rbp+0x50],ecx
   140001a4b:	lea    rdx,[rip+0x5fbe]        # 0x140007a10
   140001a52:	lea    rcx,[rbp+0x50]
   140001a56:	call   0x140004dac
   140001a5b:	int3   
   140001a5c:	cmp    rcx,r14
   140001a5f:	je     0x140001a83
   140001a61:	test   BYTE PTR [rcx+0x1c],sil
   140001a65:	je     0x140001a83
   140001a67:	cmp    BYTE PTR [rcx+0x19],0x4
   140001a6b:	jb     0x140001a83
   140001a6d:	mov    edx,0x22
   140001a72:	lea    r8,[rip+0x4aaf]        # 0x140006528
   140001a79:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a7d:	call   0x140001168
   140001a82:	nop
   140001a83:	mov    rbx,QWORD PTR [rbp-0x18]
   140001a87:	test   rbx,rbx
   140001a8a:	je     0x140001aa1
   140001a8c:	mov    rax,QWORD PTR [rbx]
   140001a8f:	mov    rdi,QWORD PTR [rax+0x10]
   140001a93:	mov    rcx,rdi
   140001a96:	call   QWORD PTR [rip+0x48b4]        # 0x140006350
   140001a9c:	mov    rcx,rbx
   140001a9f:	call   rdi
   140001aa1:	mov    eax,0x8007000a
   140001aa6:	jmp    0x140001b47
   140001aab:	mov    rbx,QWORD PTR [rbp-0x18]
   140001aaf:	mov    rax,QWORD PTR [rbx]
   140001ab2:	mov    rdi,QWORD PTR [rax+0x20]
   140001ab6:	mov    rcx,rdi
   140001ab9:	call   QWORD PTR [rip+0x4891]        # 0x140006350
   140001abf:	mov    edx,r12d
   140001ac2:	mov    rcx,rbx
   140001ac5:	call   rdi
   140001ac7:	mov    ebx,eax
   140001ac9:	test   eax,eax
   140001acb:	jns    0x140001b1e
   140001acd:	mov    rcx,QWORD PTR [rip+0x754c]        # 0x140009020
   140001ad4:	cmp    rcx,r14
   140001ad7:	je     0x140001afd
   140001ad9:	test   BYTE PTR [rcx+0x1c],sil
   140001add:	je     0x140001afd
   140001adf:	cmp    BYTE PTR [rcx+0x19],0x2
   140001ae3:	jb     0x140001afd
   140001ae5:	mov    edx,0x21
   140001aea:	mov    r9d,eax
   140001aed:	lea    r8,[rip+0x4a34]        # 0x140006528
   140001af4:	mov    rcx,QWORD PTR [rcx+0x10]
   140001af8:	call   0x140001208
   140001afd:	mov    edx,ebx
   140001aff:	lea    rcx,[rbp-0x20]
   140001b03:	call   0x1400029f0
   140001b08:	mov    ecx,DWORD PTR [rax]
   140001b0a:	mov    DWORD PTR [rbp+0x50],ecx
   140001b0d:	lea    rdx,[rip+0x5efc]        # 0x140007a10
   140001b14:	lea    rcx,[rbp+0x50]
   140001b18:	call   0x140004dac
   140001b1d:	int3   
   140001b1e:	xor    esi,esi
   140001b20:	test   r15b,r15b
   140001b23:	sete   sil
   140001b27:	mov    rbx,QWORD PTR [rbp-0x18]
   140001b2b:	test   rbx,rbx
   140001b2e:	je     0x140001b45
   140001b30:	mov    rcx,QWORD PTR [rbx]
   140001b33:	mov    rdi,QWORD PTR [rcx+0x10]
   140001b37:	mov    rcx,rdi
   140001b3a:	call   QWORD PTR [rip+0x4810]        # 0x140006350
   140001b40:	mov    rcx,rbx
   140001b43:	call   rdi
   140001b45:	mov    eax,esi
   140001b47:	add    rsp,0x40
   140001b4b:	pop    r15
   140001b4d:	pop    r14
   140001b4f:	pop    r12
   140001b51:	pop    rdi
   140001b52:	pop    rsi
   140001b53:	pop    rbx
   140001b54:	pop    rbp
   140001b55:	ret    
   140001b56:	int3   
   140001b57:	int3   
   140001b58:	int3   
   140001b59:	int3   
   140001b5a:	int3   
   140001b5b:	int3   
   140001b5c:	mov    rax,rsp
   140001b5f:	push   rbp
   140001b60:	push   rsi
   140001b61:	push   rdi
   140001b62:	push   r14
   140001b64:	push   r15
   140001b66:	mov    rbp,rsp
   140001b69:	sub    rsp,0x50
   140001b6d:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   140001b75:	mov    QWORD PTR [rax+0x8],rbx
   140001b79:	mov    bl,cl
   140001b7b:	lea    r15,[rip+0x749e]        # 0x140009020
   140001b82:	mov    rcx,QWORD PTR [rip+0x7497]        # 0x140009020
   140001b89:	cmp    rcx,r15
   140001b8c:	je     0x140001baf
   140001b8e:	test   BYTE PTR [rcx+0x1c],0x1
   140001b92:	je     0x140001baf
   140001b94:	cmp    BYTE PTR [rcx+0x19],0x5
   140001b98:	jb     0x140001baf
   140001b9a:	mov    edx,0x24
   140001b9f:	lea    r8,[rip+0x4982]        # 0x140006528
   140001ba6:	mov    rcx,QWORD PTR [rcx+0x10]
   140001baa:	call   0x140001168
   140001baf:	mov    cl,bl
   140001bb1:	call   0x140001714
   140001bb6:	mov    esi,eax
   140001bb8:	cmp    eax,0x8007000a
   140001bbd:	je     0x140001ce9
   140001bc3:	cmp    eax,0x800702e4
   140001bc8:	je     0x140001cc8
   140001bce:	cmp    eax,0x800704ec
   140001bd3:	je     0x140001ca7
   140001bd9:	cmp    eax,0x800710dd
   140001bde:	je     0x140001c86
   140001be4:	test   eax,eax
   140001be6:	je     0x140001c62
   140001be8:	cmp    eax,0x1
   140001beb:	je     0x140001c3e
   140001bed:	mov    rcx,QWORD PTR [rip+0x742c]        # 0x140009020
   140001bf4:	cmp    rcx,r15
   140001bf7:	je     0x140001c1a
   140001bf9:	test   BYTE PTR [rcx+0x1c],0x1
   140001bfd:	je     0x140001c1a
   140001bff:	cmp    BYTE PTR [rcx+0x19],0x2
   140001c03:	jb     0x140001c1a
   140001c05:	mov    edx,0x25
   140001c0a:	lea    r8,[rip+0x4917]        # 0x140006528
   140001c11:	mov    rcx,QWORD PTR [rcx+0x10]
   140001c15:	call   0x140001168
   140001c1a:	mov    edx,0x8007050c
   140001c1f:	lea    rcx,[rbp+0x40]
   140001c23:	call   0x1400029f0
   140001c28:	mov    ecx,DWORD PTR [rax]
   140001c2a:	mov    DWORD PTR [rbp+0x38],ecx
   140001c2d:	lea    rdx,[rip+0x5ddc]        # 0x140007a10
   140001c34:	lea    rcx,[rbp+0x38]
   140001c38:	call   0x140004dac
   140001c3d:	int3   
   140001c3e:	xor    r8d,r8d
   140001c41:	mov    edx,0x41000004
   140001c46:	lea    rcx,[rbp+0x48]
   140001c4a:	call   0x140003600
   140001c4f:	nop
   140001c50:	mov    rcx,QWORD PTR [rax]
   140001c53:	call   0x140004074
   140001c58:	nop
   140001c59:	mov    r14,QWORD PTR [rbp+0x48]
   140001c5d:	jmp    0x140001d08
   140001c62:	xor    r8d,r8d
   140001c65:	mov    edx,0x41000003
   140001c6a:	lea    rcx,[rbp-0x30]
   140001c6e:	call   0x140003600
   140001c73:	nop
   140001c74:	mov    rcx,QWORD PTR [rax]
   140001c77:	call   0x140004074
   140001c7c:	nop
   140001c7d:	mov    r14,QWORD PTR [rbp-0x30]
   140001c81:	jmp    0x140001d08
   140001c86:	xor    r8d,r8d
   140001c89:	mov    edx,0xc1000008
   140001c8e:	lea    rcx,[rbp-0x28]
   140001c92:	call   0x140003600
   140001c97:	nop
   140001c98:	mov    rcx,QWORD PTR [rax]
   140001c9b:	call   0x140004074
   140001ca0:	nop
   140001ca1:	mov    r14,QWORD PTR [rbp-0x28]
   140001ca5:	jmp    0x140001d08
   140001ca7:	xor    r8d,r8d
   140001caa:	mov    edx,0xc1000005
   140001caf:	lea    rcx,[rbp-0x20]
   140001cb3:	call   0x140003600
   140001cb8:	nop
   140001cb9:	mov    rcx,QWORD PTR [rax]
   140001cbc:	call   0x140004074
   140001cc1:	nop
   140001cc2:	mov    r14,QWORD PTR [rbp-0x20]
   140001cc6:	jmp    0x140001d08
   140001cc8:	xor    r8d,r8d
   140001ccb:	mov    edx,0xc1000007
   140001cd0:	lea    rcx,[rbp-0x18]
   140001cd4:	call   0x140003600
   140001cd9:	nop
   140001cda:	mov    rcx,QWORD PTR [rax]
   140001cdd:	call   0x140004074
   140001ce2:	nop
   140001ce3:	mov    r14,QWORD PTR [rbp-0x18]
   140001ce7:	jmp    0x140001d08
   140001ce9:	xor    r8d,r8d
   140001cec:	mov    edx,0xc1000006
   140001cf1:	lea    rcx,[rbp-0x10]
   140001cf5:	call   0x140003600
   140001cfa:	nop
   140001cfb:	mov    rcx,QWORD PTR [rax]
   140001cfe:	call   0x140004074
   140001d03:	nop
   140001d04:	mov    r14,QWORD PTR [rbp-0x10]
   140001d08:	or     eax,0xffffffff
   140001d0b:	lock xadd DWORD PTR [r14-0x8],eax
   140001d11:	sub    eax,0x1
   140001d14:	jg     0x140001d33
   140001d16:	mov    rdi,QWORD PTR [r14-0x18]
   140001d1a:	mov    rax,QWORD PTR [rdi]
   140001d1d:	mov    rbx,QWORD PTR [rax+0x8]
   140001d21:	mov    rcx,rbx
   140001d24:	call   QWORD PTR [rip+0x4626]        # 0x140006350
   140001d2a:	lea    rdx,[r14-0x18]
   140001d2e:	mov    rcx,rdi
   140001d31:	call   rbx
   140001d33:	mov    rcx,QWORD PTR [rip+0x72e6]        # 0x140009020
   140001d3a:	cmp    rcx,r15
   140001d3d:	je     0x140001d60
   140001d3f:	test   BYTE PTR [rcx+0x1c],0x1
   140001d43:	je     0x140001d60
   140001d45:	cmp    BYTE PTR [rcx+0x19],0x5
   140001d49:	jb     0x140001d60
   140001d4b:	mov    edx,0x26
   140001d50:	lea    r8,[rip+0x47d1]        # 0x140006528
   140001d57:	mov    rcx,QWORD PTR [rcx+0x10]
   140001d5b:	call   0x140001168
   140001d60:	mov    eax,esi
   140001d62:	mov    rbx,QWORD PTR [rsp+0x80]
   140001d6a:	add    rsp,0x50
   140001d6e:	pop    r15
   140001d70:	pop    r14
   140001d72:	pop    rdi
   140001d73:	pop    rsi
   140001d74:	pop    rbp
   140001d75:	ret    
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	int3   
   140001d79:	int3   
   140001d7a:	int3   
   140001d7b:	int3   
   140001d7c:	rex push rbp
   140001d7e:	push   rsi
   140001d7f:	push   rdi
   140001d80:	push   r14
   140001d82:	push   r15
   140001d84:	sub    rsp,0x40
   140001d88:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001d91:	mov    QWORD PTR [rsp+0x70],rbx
   140001d96:	mov    rsi,rdx
   140001d99:	mov    edi,ecx
   140001d9b:	lea    r14,[rip+0x727e]        # 0x140009020
   140001da2:	lea    r15,[rip+0x477f]        # 0x140006528
   140001da9:	mov    ebp,0x1
   140001dae:	mov    rcx,QWORD PTR [rip+0x726b]        # 0x140009020
   140001db5:	cmp    rcx,r14
   140001db8:	je     0x140001dd5
   140001dba:	test   BYTE PTR [rcx+0x1c],bpl
   140001dbe:	je     0x140001dd5
   140001dc0:	cmp    BYTE PTR [rcx+0x19],0x5
   140001dc4:	jb     0x140001dd5
   140001dc6:	lea    edx,[rbp+0x26]
   140001dc9:	mov    r8,r15
   140001dcc:	mov    rcx,QWORD PTR [rcx+0x10]
   140001dd0:	call   0x140001168
   140001dd5:	mov    edx,0x2
   140001dda:	xor    ecx,ecx
   140001ddc:	call   QWORD PTR [rip+0x454e]        # 0x140006330
   140001de2:	mov    ebx,eax
   140001de4:	test   eax,eax
   140001de6:	jns    0x140001e45
   140001de8:	mov    rcx,QWORD PTR [rip+0x7231]        # 0x140009020
   140001def:	cmp    rcx,r14
   140001df2:	je     0x140001e18
   140001df4:	test   BYTE PTR [rcx+0x1c],bpl
   140001df8:	je     0x140001e18
   140001dfa:	cmp    BYTE PTR [rcx+0x19],0x2
   140001dfe:	jb     0x140001e18
   140001e00:	mov    edx,0xa
   140001e05:	mov    r9d,eax
   140001e08:	lea    r8,[rip+0x47f9]        # 0x140006608
   140001e0f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001e13:	call   0x140001208
   140001e18:	mov    edx,ebx
   140001e1a:	lea    rcx,[rsp+0x88]
   140001e22:	call   0x1400029f0
   140001e27:	mov    ecx,DWORD PTR [rax]
   140001e29:	mov    DWORD PTR [rsp+0x80],ecx
   140001e30:	lea    rdx,[rip+0x5bd9]        # 0x140007a10
   140001e37:	lea    rcx,[rsp+0x80]
   140001e3f:	call   0x140004dac
   140001e44:	nop
   140001e45:	lea    rcx,[rsp+0x20]
   140001e4a:	call   0x1400042f4
   140001e4f:	nop
   140001e50:	mov    cl,bpl
   140001e53:	call   0x1400012d8
   140001e58:	mov    rcx,QWORD PTR [rip+0x71c1]        # 0x140009020
   140001e5f:	cmp    rcx,r14
   140001e62:	je     0x140001eb4
   140001e64:	test   BYTE PTR [rcx+0x1c],bpl
   140001e68:	je     0x140001e88
   140001e6a:	cmp    BYTE PTR [rcx+0x19],0x5
   140001e6e:	jb     0x140001e88
   140001e70:	mov    edx,0xb
   140001e75:	mov    r8,r15
   140001e78:	mov    rcx,QWORD PTR [rcx+0x10]
   140001e7c:	call   0x140001168
   140001e81:	mov    rcx,QWORD PTR [rip+0x7198]        # 0x140009020
   140001e88:	cmp    rcx,r14
   140001e8b:	je     0x140001eb4
   140001e8d:	test   BYTE PTR [rcx+0x1c],bpl
   140001e91:	je     0x140001eb4
   140001e93:	cmp    BYTE PTR [rcx+0x19],0x4
   140001e97:	jb     0x140001eb4
   140001e99:	mov    edx,0xc
   140001e9e:	mov    r9d,edi
   140001ea1:	mov    r8,r15
   140001ea4:	mov    rcx,QWORD PTR [rcx+0x10]
   140001ea8:	call   0x140001208
   140001ead:	mov    rcx,QWORD PTR [rip+0x716c]        # 0x140009020
   140001eb4:	mov    ebx,0x4
   140001eb9:	cmp    edi,ebp
   140001ebb:	jne    0x140001ec4
   140001ebd:	xor    ebx,ebx
   140001ebf:	jmp    0x140001f62
   140001ec4:	cmp    edi,0x2
   140001ec7:	jne    0x140001f62
   140001ecd:	cmp    rcx,r14
   140001ed0:	je     0x140001ef7
   140001ed2:	test   BYTE PTR [rcx+0x1c],bpl
   140001ed6:	je     0x140001ef7
   140001ed8:	cmp    BYTE PTR [rcx+0x19],bl
   140001edb:	jb     0x140001ef7
   140001edd:	lea    edx,[rdi+0xb]
   140001ee0:	mov    r9,QWORD PTR [rsi+0x8]
   140001ee4:	mov    r8,r15
   140001ee7:	mov    rcx,QWORD PTR [rcx+0x10]
   140001eeb:	call   0x14000118c
   140001ef0:	mov    rcx,QWORD PTR [rip+0x7129]        # 0x140009020
   140001ef7:	mov    rdi,QWORD PTR [rsi+0x8]
   140001efb:	movzx  eax,WORD PTR [rdi]
   140001efe:	sub    ax,0x2d
   140001f02:	mov    edx,0xfffd
   140001f07:	test   dx,ax
   140001f0a:	jne    0x140001f62
   140001f0c:	add    rdi,0x2
   140001f10:	mov    rdx,rdi
   140001f13:	lea    rcx,[rip+0x45e6]        # 0x140006500
   140001f1a:	call   QWORD PTR [rip+0x43a0]        # 0x1400062c0
   140001f20:	test   eax,eax
   140001f22:	jne    0x140001f28
   140001f24:	mov    ebx,ebp
   140001f26:	jmp    0x140001f5b
   140001f28:	mov    rdx,rdi
   140001f2b:	lea    rcx,[rip+0x45de]        # 0x140006510
   140001f32:	call   QWORD PTR [rip+0x4388]        # 0x1400062c0
   140001f38:	test   eax,eax
   140001f3a:	jne    0x140001f41
   140001f3c:	lea    ebx,[rax+0x2]
   140001f3f:	jmp    0x140001f5b
   140001f41:	mov    rdx,rdi
   140001f44:	lea    rcx,[rip+0x45d5]        # 0x140006520
   140001f4b:	call   QWORD PTR [rip+0x436f]        # 0x1400062c0
   140001f51:	mov    ecx,0x3
   140001f56:	test   eax,eax
   140001f58:	cmove  ebx,ecx
   140001f5b:	mov    rcx,QWORD PTR [rip+0x70be]        # 0x140009020
   140001f62:	cmp    rcx,r14
   140001f65:	je     0x140001fb7
   140001f67:	test   BYTE PTR [rcx+0x1c],bpl
   140001f6b:	je     0x140001f8b
   140001f6d:	cmp    BYTE PTR [rcx+0x19],0x5
   140001f71:	jb     0x140001f8b
   140001f73:	mov    edx,0xe
   140001f78:	mov    r8,r15
   140001f7b:	mov    rcx,QWORD PTR [rcx+0x10]
   140001f7f:	call   0x140001168
   140001f84:	mov    rcx,QWORD PTR [rip+0x7095]        # 0x140009020
   140001f8b:	cmp    rcx,r14
   140001f8e:	je     0x140001fb7
   140001f90:	test   BYTE PTR [rcx+0x1c],bpl
   140001f94:	je     0x140001fb7
   140001f96:	cmp    BYTE PTR [rcx+0x19],0x4
   140001f9a:	jb     0x140001fb7
   140001f9c:	mov    edx,0x28
   140001fa1:	mov    r9d,ebx
   140001fa4:	mov    r8,r15
   140001fa7:	mov    rcx,QWORD PTR [rcx+0x10]
   140001fab:	call   0x140001208
   140001fb0:	mov    rcx,QWORD PTR [rip+0x7069]        # 0x140009020
   140001fb7:	test   ebx,ebx
   140001fb9:	je     0x1400020a4
   140001fbf:	sub    ebx,0x1
   140001fc2:	je     0x14000209f
   140001fc8:	sub    ebx,0x1
   140001fcb:	je     0x140002096
   140001fd1:	sub    ebx,0x1
   140001fd4:	je     0x14000208f
   140001fda:	cmp    ebx,0x1
   140001fdd:	je     0x140002031
   140001fdf:	cmp    rcx,r14
   140001fe2:	je     0x140002001
   140001fe4:	test   BYTE PTR [rcx+0x1c],bpl
   140001fe8:	je     0x140002001
   140001fea:	cmp    BYTE PTR [rcx+0x19],0x2
   140001fee:	jb     0x140002001
   140001ff0:	mov    edx,0x29
   140001ff5:	mov    r8,r15
   140001ff8:	mov    rcx,QWORD PTR [rcx+0x10]
   140001ffc:	call   0x140001168
   140002001:	mov    edx,0x80004001
   140002006:	lea    rcx,[rsp+0x88]
   14000200e:	call   0x1400029f0
   140002013:	mov    ecx,DWORD PTR [rax]
   140002015:	mov    DWORD PTR [rsp+0x80],ecx
   14000201c:	lea    rdx,[rip+0x59ed]        # 0x140007a10
   140002023:	lea    rcx,[rsp+0x80]
   14000202b:	call   0x140004dac
   140002030:	int3   
   140002031:	cmp    rcx,r14
   140002034:	je     0x140002053
   140002036:	test   BYTE PTR [rcx+0x1c],bpl
   14000203a:	je     0x140002053
   14000203c:	cmp    BYTE PTR [rcx+0x19],0x5
   140002040:	jb     0x140002053
   140002042:	mov    edx,0x11
   140002047:	mov    r8,r15
   14000204a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000204e:	call   0x140001168
   140002053:	call   0x140001348
   140002058:	mov    rcx,QWORD PTR [rip+0x6fc1]        # 0x140009020
   14000205f:	cmp    rcx,r14
   140002062:	je     0x140002088
   140002064:	test   BYTE PTR [rcx+0x1c],bpl
   140002068:	je     0x140002088
   14000206a:	cmp    BYTE PTR [rcx+0x19],0x5
   14000206e:	jb     0x140002088
   140002070:	mov    edx,0x12
   140002075:	mov    r8,r15
   140002078:	mov    rcx,QWORD PTR [rcx+0x10]
   14000207c:	call   0x140001168
   140002081:	mov    rcx,QWORD PTR [rip+0x6f98]        # 0x140009020
   140002088:	mov    esi,0x80070057
   14000208d:	jmp    0x1400020b2
   14000208f:	call   0x140001348
   140002094:	jmp    0x1400020a9
   140002096:	xor    ecx,ecx
   140002098:	call   0x140001b5c
   14000209d:	jmp    0x1400020a9
   14000209f:	mov    cl,bpl
   1400020a2:	jmp    0x140002098
   1400020a4:	call   0x140001430
   1400020a9:	mov    rcx,QWORD PTR [rip+0x6f70]        # 0x140009020
   1400020b0:	mov    esi,eax
   1400020b2:	cmp    rcx,r14
   1400020b5:	je     0x1400020d5
   1400020b7:	test   BYTE PTR [rcx+0x1c],bpl
   1400020bb:	je     0x1400020d5
   1400020bd:	cmp    BYTE PTR [rcx+0x19],0x5
   1400020c1:	jb     0x1400020d5
   1400020c3:	mov    edx,0x2a
   1400020c8:	mov    r8,r15
   1400020cb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400020cf:	call   0x140001168
   1400020d4:	nop
   1400020d5:	mov    rbx,QWORD PTR [rsp+0x20]
   1400020da:	test   rbx,rbx
   1400020dd:	je     0x1400020f5
   1400020df:	mov    rax,QWORD PTR [rbx]
   1400020e2:	mov    rdi,QWORD PTR [rax+0x10]
   1400020e6:	mov    rcx,rdi
   1400020e9:	call   QWORD PTR [rip+0x4261]        # 0x140006350
   1400020ef:	mov    rcx,rbx
   1400020f2:	call   rdi
   1400020f4:	nop
   1400020f5:	call   QWORD PTR [rip+0x4225]        # 0x140006320
   1400020fb:	mov    eax,esi
   1400020fd:	mov    rbx,QWORD PTR [rsp+0x70]
   140002102:	add    rsp,0x40
   140002106:	pop    r15
   140002108:	pop    r14
   14000210a:	pop    rdi
   14000210b:	pop    rsi
   14000210c:	pop    rbp
   14000210d:	ret    
   14000210e:	int3   
   14000210f:	int3   
   140002110:	int3   
   140002111:	int3   
   140002112:	int3   
   140002113:	int3   
   140002114:	rex push rsi
   140002116:	push   rdi
   140002117:	push   r14
   140002119:	sub    rsp,0x30
   14000211d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002126:	mov    QWORD PTR [rsp+0x50],rbx
   14000212b:	mov    edi,ecx
   14000212d:	lea    r14,[rip+0x6eec]        # 0x140009020
   140002134:	mov    rcx,QWORD PTR [rip+0x6ee5]        # 0x140009020
   14000213b:	cmp    rcx,r14
   14000213e:	je     0x140002162
   140002140:	test   BYTE PTR [rcx+0x1c],0x1
   140002144:	je     0x140002162
   140002146:	cmp    BYTE PTR [rcx+0x19],0x5
   14000214a:	jb     0x140002162
   14000214c:	mov    edx,0x2b
   140002151:	lea    r8,[rip+0x43d0]        # 0x140006528
   140002158:	mov    rcx,QWORD PTR [rcx+0x10]
   14000215c:	call   0x140001168
   140002161:	nop
   140002162:	mov    r8b,0x1
   140002165:	mov    edx,edi
   140002167:	lea    rcx,[rsp+0x68]
   14000216c:	call   0x140003600
   140002171:	nop
   140002172:	xor    r8d,r8d
   140002175:	mov    edx,0xc1000002
   14000217a:	lea    rcx,[rsp+0x60]
   14000217f:	call   0x140003600
   140002184:	nop
   140002185:	mov    rax,QWORD PTR [rip+0x6e9c]        # 0x140009028
   14000218c:	mov    rbx,QWORD PTR [rax+0x18]
   140002190:	mov    rcx,rbx
   140002193:	call   QWORD PTR [rip+0x41b7]        # 0x140006350
   140002199:	lea    rcx,[rip+0x6e88]        # 0x140009028
   1400021a0:	call   rbx
   1400021a2:	add    rax,0x18
   1400021a6:	mov    QWORD PTR [rsp+0x58],rax
   1400021ab:	mov    r9,QWORD PTR [rsp+0x68]
   1400021b0:	mov    r8d,edi
   1400021b3:	mov    rdx,QWORD PTR [rsp+0x60]
   1400021b8:	lea    rcx,[rsp+0x58]
   1400021bd:	call   0x1400025e4
   1400021c2:	mov    rbx,QWORD PTR [rsp+0x58]
   1400021c7:	mov    rcx,rbx
   1400021ca:	call   0x140004074
   1400021cf:	nop
   1400021d0:	lea    rsi,[rbx-0x18]
   1400021d4:	or     eax,0xffffffff
   1400021d7:	lock xadd DWORD PTR [rsi+0x10],eax
   1400021dc:	sub    eax,0x1
   1400021df:	jg     0x1400021fd
   1400021e1:	mov    rdi,QWORD PTR [rsi]
   1400021e4:	mov    rax,QWORD PTR [rdi]
   1400021e7:	mov    rbx,QWORD PTR [rax+0x8]
   1400021eb:	mov    rcx,rbx
   1400021ee:	call   QWORD PTR [rip+0x415c]        # 0x140006350
   1400021f4:	mov    rdx,rsi
   1400021f7:	mov    rcx,rdi
   1400021fa:	call   rbx
   1400021fc:	nop
   1400021fd:	mov    rsi,QWORD PTR [rsp+0x60]
   140002202:	or     eax,0xffffffff
   140002205:	lock xadd DWORD PTR [rsi-0x8],eax
   14000220a:	sub    eax,0x1
   14000220d:	jg     0x14000222d
   14000220f:	mov    rdi,QWORD PTR [rsi-0x18]
   140002213:	mov    rax,QWORD PTR [rdi]
   140002216:	mov    rbx,QWORD PTR [rax+0x8]
   14000221a:	mov    rcx,rbx
   14000221d:	call   QWORD PTR [rip+0x412d]        # 0x140006350
   140002223:	lea    rdx,[rsi-0x18]
   140002227:	mov    rcx,rdi
   14000222a:	call   rbx
   14000222c:	nop
   14000222d:	mov    rsi,QWORD PTR [rsp+0x68]
   140002232:	or     eax,0xffffffff
   140002235:	lock xadd DWORD PTR [rsi-0x8],eax
   14000223a:	sub    eax,0x1
   14000223d:	jg     0x14000225d
   14000223f:	mov    rdi,QWORD PTR [rsi-0x18]
   140002243:	mov    rax,QWORD PTR [rdi]
   140002246:	mov    rbx,QWORD PTR [rax+0x8]
   14000224a:	mov    rcx,rbx
   14000224d:	call   QWORD PTR [rip+0x40fd]        # 0x140006350
   140002253:	lea    rdx,[rsi-0x18]
   140002257:	mov    rcx,rdi
   14000225a:	call   rbx
   14000225c:	nop
   14000225d:	jmp    0x140002266
   14000225f:	lea    r14,[rip+0x6dba]        # 0x140009020
   140002266:	mov    rcx,QWORD PTR [rip+0x6db3]        # 0x140009020
   14000226d:	cmp    rcx,r14
   140002270:	je     0x140002293
   140002272:	test   BYTE PTR [rcx+0x1c],0x1
   140002276:	je     0x140002293
   140002278:	cmp    BYTE PTR [rcx+0x19],0x5
   14000227c:	jb     0x140002293
   14000227e:	mov    edx,0x2d
   140002283:	lea    r8,[rip+0x429e]        # 0x140006528
   14000228a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000228e:	call   0x140001168
   140002293:	mov    rbx,QWORD PTR [rsp+0x50]
   140002298:	add    rsp,0x30
   14000229c:	pop    r14
   14000229e:	pop    rdi
   14000229f:	pop    rsi
   1400022a0:	ret    
   1400022a1:	int3   
   1400022a2:	int3   
   1400022a3:	int3   
   1400022a4:	int3   
   1400022a5:	int3   
   1400022a6:	int3   
   1400022a7:	int3   
   1400022a8:	mov    rax,rsp
   1400022ab:	push   rdi
   1400022ac:	push   r14
   1400022ae:	push   r15
   1400022b0:	sub    rsp,0xb0
   1400022b7:	mov    QWORD PTR [rax-0x70],0xfffffffffffffffe
   1400022bf:	mov    QWORD PTR [rax+0x18],rbx
   1400022c3:	mov    QWORD PTR [rax+0x20],rsi
   1400022c7:	mov    rax,QWORD PTR [rip+0x6d3a]        # 0x140009008
   1400022ce:	xor    rax,rsp
   1400022d1:	mov    QWORD PTR [rsp+0xa0],rax
   1400022d9:	mov    r15,rdx
   1400022dc:	mov    r14d,ecx
   1400022df:	xor    edi,edi
   1400022e1:	mov    QWORD PTR [rip+0x7458],rdi        # 0x140009740
   1400022e8:	mov    QWORD PTR [rip+0x7441],rdi        # 0x140009730
   1400022ef:	mov    QWORD PTR [rip+0x744e],0x1        # 0x140009748
   1400022fa:	lea    rax,[rip+0x4237]        # 0x140006538
   140002301:	mov    QWORD PTR [rip+0x7450],rax        # 0x140009758
   140002308:	lea    rbx,[rip+0x7421]        # 0x140009730
   14000230f:	mov    QWORD PTR [rip+0x6d0a],rbx        # 0x140009020
   140002316:	lea    rsi,[rip+0x743b]        # 0x140009758
   14000231d:	mov    r8,QWORD PTR [rsi]
   140002320:	lea    rsi,[rsi+0x8]
   140002324:	mov    QWORD PTR [rsp+0x48],r8
   140002329:	mov    QWORD PTR [rsp+0x50],rdi
   14000232e:	mov    QWORD PTR [rbx+0x20],r8
   140002332:	lea    rax,[rbx+0x8]
   140002336:	mov    QWORD PTR [rsp+0x38],rax
   14000233b:	mov    QWORD PTR [rsp+0x30],rdi
   140002340:	mov    QWORD PTR [rsp+0x28],rdi
   140002345:	lea    rax,[rsp+0x48]
   14000234a:	mov    QWORD PTR [rsp+0x20],rax
   14000234f:	mov    r9d,0x1
   140002355:	mov    rdx,rbx
   140002358:	lea    rcx,[rip+0xffffffffffffeef1]        # 0x140001250
   14000235f:	call   QWORD PTR [rip+0x3cbb]        # 0x140006020
   140002365:	mov    rbx,QWORD PTR [rbx]
   140002368:	test   rbx,rbx
   14000236b:	jne    0x14000231d
   14000236d:	lea    rsi,[rip+0x6cac]        # 0x140009020
   140002374:	mov    rcx,QWORD PTR [rip+0x6ca5]        # 0x140009020
   14000237b:	cmp    rcx,rsi
   14000237e:	je     0x1400023a0
   140002380:	test   BYTE PTR [rcx+0x1c],0x1
   140002384:	je     0x1400023a0
   140002386:	cmp    BYTE PTR [rcx+0x19],0x5
   14000238a:	jb     0x1400023a0
   14000238c:	lea    edx,[rbx+0x2e]
   14000238f:	lea    r8,[rip+0x4192]        # 0x140006528
   140002396:	mov    rcx,QWORD PTR [rcx+0x10]
   14000239a:	call   0x140001168
   14000239f:	nop
   1400023a0:	call   QWORD PTR [rip+0x3d2a]        # 0x1400060d0
   1400023a6:	mov    r9d,eax
   1400023a9:	lea    r8,[rip+0x4270]        # 0x140006620
   1400023b0:	mov    edx,0x20
   1400023b5:	lea    rcx,[rsp+0x60]
   1400023ba:	call   QWORD PTR [rip+0x3ea0]        # 0x140006260
   1400023c0:	cmp    eax,0xffffffff
   1400023c3:	jne    0x140002416
   1400023c5:	mov    rcx,QWORD PTR [rip+0x6c54]        # 0x140009020
   1400023cc:	cmp    rcx,rsi
   1400023cf:	je     0x1400023f0
   1400023d1:	test   BYTE PTR [rcx+0x1c],0x1
   1400023d5:	je     0x1400023f0
   1400023d7:	cmp    BYTE PTR [rcx+0x19],0x2
   1400023db:	jb     0x1400023f0
   1400023dd:	lea    edx,[rax+0xc]
   1400023e0:	lea    r8,[rip+0x4241]        # 0x140006628
   1400023e7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400023eb:	call   0x140001168
   1400023f0:	mov    edx,0x80004005
   1400023f5:	lea    rcx,[rsp+0x40]
   1400023fa:	call   0x1400029f0
   1400023ff:	mov    ecx,DWORD PTR [rax]
   140002401:	mov    DWORD PTR [rsp+0x44],ecx
   140002405:	lea    rdx,[rip+0x5604]        # 0x140007a10
   14000240c:	lea    rcx,[rsp+0x44]
   140002411:	call   0x140004dac
   140002416:	lea    rdx,[rsp+0x60]
   14000241b:	xor    ecx,ecx
   14000241d:	call   QWORD PTR [rip+0x3e35]        # 0x140006258
   140002423:	test   rax,rax
   140002426:	jne    0x140002458
   140002428:	mov    rcx,QWORD PTR [rip+0x6bf1]        # 0x140009020
   14000242f:	cmp    rcx,rsi
   140002432:	je     0x140002458
   140002434:	test   BYTE PTR [rcx+0x1c],0x1
   140002438:	je     0x140002458
   14000243a:	cmp    BYTE PTR [rcx+0x19],0x3
   14000243e:	jb     0x140002458
   140002440:	lea    edx,[rax+0xc]
   140002443:	lea    r9,[rsp+0x60]
   140002448:	lea    r8,[rip+0x41d9]        # 0x140006628
   14000244f:	mov    rcx,QWORD PTR [rcx+0x10]
   140002453:	call   0x14000118c
   140002458:	xor    r8d,r8d
   14000245b:	xor    edx,edx
   14000245d:	mov    ecx,0x100
   140002462:	call   QWORD PTR [rip+0x3c70]        # 0x1400060d8
   140002468:	test   eax,eax
   14000246a:	jne    0x1400024a9
   14000246c:	mov    rax,QWORD PTR [rip+0x6bad]        # 0x140009020
   140002473:	cmp    rax,rsi
   140002476:	je     0x1400024a9
   140002478:	test   BYTE PTR [rax+0x1c],0x1
   14000247c:	je     0x1400024a9
   14000247e:	cmp    BYTE PTR [rax+0x19],0x3
   140002482:	jb     0x1400024a9
   140002484:	call   QWORD PTR [rip+0x3c06]        # 0x140006090
   14000248a:	mov    r9d,eax
   14000248d:	mov    edx,0xd
   140002492:	lea    r8,[rip+0x418f]        # 0x140006628
   140002499:	mov    rcx,QWORD PTR [rip+0x6b80]        # 0x140009020
   1400024a0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400024a4:	call   0x140001208
   1400024a9:	mov    rdx,r15
   1400024ac:	mov    ecx,r14d
   1400024af:	call   0x140001d7c
   1400024b4:	mov    r14d,eax
   1400024b7:	jmp    0x1400024c7
   1400024b9:	xor    edi,edi
   1400024bb:	lea    rsi,[rip+0x6b5e]        # 0x140009020
   1400024c2:	mov    r14d,DWORD PTR [rsp+0x40]
   1400024c7:	mov    rcx,QWORD PTR [rip+0x6b52]        # 0x140009020
   1400024ce:	cmp    rcx,rsi
   1400024d1:	je     0x140002524
   1400024d3:	test   BYTE PTR [rcx+0x1c],0x1
   1400024d7:	je     0x1400024fe
   1400024d9:	cmp    BYTE PTR [rcx+0x19],0x4
   1400024dd:	jb     0x1400024fe
   1400024df:	mov    edx,0x2f
   1400024e4:	mov    r9d,r14d
   1400024e7:	lea    r8,[rip+0x403a]        # 0x140006528
   1400024ee:	mov    rcx,QWORD PTR [rcx+0x10]
   1400024f2:	call   0x140001208
   1400024f7:	mov    rcx,QWORD PTR [rip+0x6b22]        # 0x140009020
   1400024fe:	cmp    rcx,rsi
   140002501:	je     0x140002524
   140002503:	test   BYTE PTR [rcx+0x1c],0x1
   140002507:	je     0x140002524
   140002509:	cmp    BYTE PTR [rcx+0x19],0x5
   14000250d:	jb     0x140002524
   14000250f:	mov    edx,0x30
   140002514:	lea    r8,[rip+0x400d]        # 0x140006528
   14000251b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000251f:	call   0x140001168
   140002524:	xor    ecx,ecx
   140002526:	call   0x1400012d8
   14000252b:	mov    rbx,QWORD PTR [rip+0x6aee]        # 0x140009020
   140002532:	cmp    rbx,rsi
   140002535:	je     0x14000255b
   140002537:	jmp    0x14000254f
   140002539:	mov    rcx,QWORD PTR [rbx+0x8]
   14000253d:	test   rcx,rcx
   140002540:	je     0x14000254c
   140002542:	call   QWORD PTR [rip+0x3ae0]        # 0x140006028
   140002548:	mov    QWORD PTR [rbx+0x8],rdi
   14000254c:	mov    rbx,QWORD PTR [rbx]
   14000254f:	test   rbx,rbx
   140002552:	jne    0x140002539
   140002554:	mov    QWORD PTR [rip+0x6ac5],rsi        # 0x140009020
   14000255b:	mov    eax,r14d
   14000255e:	mov    rcx,QWORD PTR [rsp+0xa0]
   140002566:	xor    rcx,rsp
   140002569:	call   0x140004c40
   14000256e:	lea    r11,[rsp+0xb0]
   140002576:	mov    rbx,QWORD PTR [r11+0x30]
   14000257a:	mov    rsi,QWORD PTR [r11+0x38]
   14000257e:	mov    rsp,r11
   140002581:	pop    r15
   140002583:	pop    r14
   140002585:	pop    rdi
   140002586:	ret    
   140002587:	int3   
   140002588:	int3   
   140002589:	int3   
   14000258a:	int3   
   14000258b:	int3   
   14000258c:	int3   
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	mov    QWORD PTR [rsp+0x8],rbx
   140002595:	mov    QWORD PTR [rsp+0x10],rsi
   14000259a:	push   rdi
   14000259b:	sub    rsp,0x20
   14000259f:	mov    rsi,QWORD PTR [rcx]
   1400025a2:	or     eax,0xffffffff
   1400025a5:	lock xadd DWORD PTR [rsi-0x8],eax
   1400025aa:	sub    eax,0x1
   1400025ad:	jg     0x1400025cc
   1400025af:	mov    rdi,QWORD PTR [rsi-0x18]
   1400025b3:	mov    rax,QWORD PTR [rdi]
   1400025b6:	mov    rbx,QWORD PTR [rax+0x8]
   1400025ba:	mov    rcx,rbx
   1400025bd:	call   QWORD PTR [rip+0x3d8d]        # 0x140006350
   1400025c3:	lea    rdx,[rsi-0x18]
   1400025c7:	mov    rcx,rdi
   1400025ca:	call   rbx
   1400025cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025d1:	mov    rsi,QWORD PTR [rsp+0x38]
   1400025d6:	add    rsp,0x20
   1400025da:	pop    rdi
   1400025db:	ret    
   1400025dc:	int3   
   1400025dd:	int3   
   1400025de:	int3   
   1400025df:	int3   
   1400025e0:	int3   
   1400025e1:	int3   
   1400025e2:	int3   
   1400025e3:	int3   
   1400025e4:	mov    rax,rsp
   1400025e7:	mov    QWORD PTR [rax+0x10],rdx
   1400025eb:	mov    QWORD PTR [rax+0x18],r8
   1400025ef:	mov    QWORD PTR [rax+0x20],r9
   1400025f3:	push   rbx
   1400025f4:	sub    rsp,0x60
   1400025f8:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140002600:	mov    rbx,rcx
   140002603:	test   rdx,rdx
   140002606:	jne    0x140002613
   140002608:	mov    ecx,0x80070057
   14000260d:	call   0x1400029fc
   140002612:	int3   
   140002613:	lea    rax,[rsp+0x80]
   14000261b:	mov    QWORD PTR [rsp+0x48],rax
   140002620:	and    QWORD PTR [rsp+0x40],0x0
   140002626:	lea    rax,[rsp+0x48]
   14000262b:	mov    QWORD PTR [rsp+0x30],rax
   140002630:	and    DWORD PTR [rsp+0x28],0x0
   140002635:	lea    rax,[rsp+0x40]
   14000263a:	mov    QWORD PTR [rsp+0x20],rax
   14000263f:	xor    r9d,r9d
   140002642:	xor    r8d,r8d
   140002645:	mov    ecx,0x500
   14000264a:	call   QWORD PTR [rip+0x3a28]        # 0x140006078
   140002650:	test   eax,eax
   140002652:	jne    0x14000265a
   140002654:	call   0x14000280c
   140002659:	int3   
   14000265a:	mov    rdx,QWORD PTR [rsp+0x40]
   14000265f:	mov    rcx,rbx
   140002662:	call   0x1400026a4
   140002667:	nop
   140002668:	mov    rcx,QWORD PTR [rsp+0x40]
   14000266d:	call   QWORD PTR [rip+0x3a0d]        # 0x140006080
   140002673:	add    rsp,0x60
   140002677:	pop    rbx
   140002678:	ret    
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	rex push rbx
   140002682:	sub    rsp,0x20
   140002686:	mov    rbx,rcx
   140002689:	mov    rcx,QWORD PTR [rcx]
   14000268c:	call   QWORD PTR [rip+0x39ee]        # 0x140006080
   140002692:	and    QWORD PTR [rbx],0x0
   140002696:	add    rsp,0x20
   14000269a:	pop    rbx
   14000269b:	ret    
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	int3   
   1400026a1:	int3   
   1400026a2:	int3   
   1400026a3:	int3   
   1400026a4:	mov    rax,rsp
   1400026a7:	mov    QWORD PTR [rax+0x8],rbx
   1400026ab:	mov    QWORD PTR [rax+0x10],rbp
   1400026af:	mov    QWORD PTR [rax+0x18],rsi
   1400026b3:	mov    QWORD PTR [rax+0x20],rdi
   1400026b7:	push   r12
   1400026b9:	push   r14
   1400026bb:	push   r15
   1400026bd:	sub    rsp,0x20
   1400026c1:	mov    rsi,rcx
   1400026c4:	xor    r12d,r12d
   1400026c7:	or     rcx,0xffffffffffffffff
   1400026cb:	mov    r14,rdx
   1400026ce:	test   rdx,rdx
   1400026d1:	je     0x14000275d
   1400026d7:	mov    rbx,rcx
   1400026da:	inc    rbx
   1400026dd:	cmp    WORD PTR [rdx+rbx*2],r12w
   1400026e2:	jne    0x1400026da
   1400026e4:	test   ebx,ebx
   1400026e6:	je     0x14000275d
   1400026e8:	mov    rax,QWORD PTR [rsi]
   1400026eb:	mov    rbp,rdx
   1400026ee:	sub    rbp,rax
   1400026f1:	mov    ecx,0x1
   1400026f6:	sar    rbp,1
   1400026f9:	sub    ecx,DWORD PTR [rax-0x8]
   1400026fc:	mov    edi,DWORD PTR [rax-0x10]
   1400026ff:	mov    eax,DWORD PTR [rax-0xc]
   140002702:	sub    eax,ebx
   140002704:	or     ecx,eax
   140002706:	jge    0x140002712
   140002708:	mov    edx,ebx
   14000270a:	mov    rcx,rsi
   14000270d:	call   0x140002824
   140002712:	mov    rcx,QWORD PTR [rsi]
   140002715:	cmp    rbp,rdi
   140002718:	movsxd rax,ebx
   14000271b:	lea    rdi,[rax+rax*1]
   14000271f:	mov    r9,rdi
   140002722:	mov    rdx,rdi
   140002725:	ja     0x140002733
   140002727:	lea    r8,[rcx+rbp*2]
   14000272b:	call   QWORD PTR [rip+0x3b7f]        # 0x1400062b0
   140002731:	jmp    0x14000273c
   140002733:	mov    r8,r14
   140002736:	call   QWORD PTR [rip+0x3b7c]        # 0x1400062b8
   14000273c:	test   ebx,ebx
   14000273e:	js     0x1400027ed
   140002744:	mov    rax,QWORD PTR [rsi]
   140002747:	cmp    ebx,DWORD PTR [rax-0xc]
   14000274a:	jg     0x1400027ed
   140002750:	mov    DWORD PTR [rax-0x10],ebx
   140002753:	mov    rax,QWORD PTR [rsi]
   140002756:	mov    WORD PTR [rdi+rax*1],r12w
   14000275b:	jmp    0x1400027cb
   14000275d:	mov    rax,QWORD PTR [rsi]
   140002760:	lea    r14,[rax-0x18]
   140002764:	mov    r15,QWORD PTR [r14]
   140002767:	cmp    DWORD PTR [r14+0x8],r12d
   14000276b:	je     0x1400027cb
   14000276d:	cmp    DWORD PTR [r14+0x10],r12d
   140002771:	jge    0x140002786
   140002773:	cmp    DWORD PTR [rax-0xc],r12d
   140002777:	jl     0x1400027f8
   140002779:	mov    DWORD PTR [rax-0x10],r12d
   14000277d:	mov    rax,QWORD PTR [rsi]
   140002780:	mov    WORD PTR [rax],r12w
   140002784:	jmp    0x1400027cb
   140002786:	mov    eax,ecx
   140002788:	lock xadd DWORD PTR [r14+0x10],eax
   14000278e:	add    eax,ecx
   140002790:	test   eax,eax
   140002792:	jg     0x1400027af
   140002794:	mov    rdi,QWORD PTR [r14]
   140002797:	mov    rax,QWORD PTR [rdi]
   14000279a:	mov    rbx,QWORD PTR [rax+0x8]
   14000279e:	mov    rcx,rbx
   1400027a1:	call   QWORD PTR [rip+0x3ba9]        # 0x140006350
   1400027a7:	mov    rdx,r14
   1400027aa:	mov    rcx,rdi
   1400027ad:	call   rbx
   1400027af:	mov    rax,QWORD PTR [r15]
   1400027b2:	mov    rbx,QWORD PTR [rax+0x18]
   1400027b6:	mov    rcx,rbx
   1400027b9:	call   QWORD PTR [rip+0x3b91]        # 0x140006350
   1400027bf:	mov    rcx,r15
   1400027c2:	call   rbx
   1400027c4:	add    rax,0x18
   1400027c8:	mov    QWORD PTR [rsi],rax
   1400027cb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400027d0:	mov    rax,rsi
   1400027d3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400027d8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400027dd:	mov    rdi,QWORD PTR [rsp+0x58]
   1400027e2:	add    rsp,0x20
   1400027e6:	pop    r15
   1400027e8:	pop    r14
   1400027ea:	pop    r12
   1400027ec:	ret    
   1400027ed:	mov    ecx,0x80070057
   1400027f2:	call   0x1400029fc
   1400027f7:	int3   
   1400027f8:	mov    ecx,0x80070057
   1400027fd:	call   0x1400029fc
   140002802:	int3   
   140002803:	int3   
   140002804:	int3   
   140002805:	int3   
   140002806:	int3   
   140002807:	int3   
   140002808:	int3   
   140002809:	int3   
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	sub    rsp,0x28
   140002810:	mov    ecx,0x8007000e
   140002815:	call   0x1400029fc
   14000281a:	int3   
   14000281b:	int3   
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	int3   
   140002821:	int3   
   140002822:	int3   
   140002823:	int3   
   140002824:	sub    rsp,0x28
   140002828:	mov    rax,QWORD PTR [rcx]
   14000282b:	mov    r8d,edx
   14000282e:	mov    r9,rcx
   140002831:	cmp    DWORD PTR [rax-0x10],edx
   140002834:	cmovg  r8d,DWORD PTR [rax-0x10]
   140002839:	cmp    DWORD PTR [rax-0x8],0x1
   14000283d:	jle    0x14000284b
   14000283f:	mov    edx,r8d
   140002842:	add    rsp,0x28
   140002846:	jmp    0x140002888
   14000284b:	mov    ecx,DWORD PTR [rax-0xc]
   14000284e:	cmp    ecx,r8d
   140002851:	jge    0x14000287d
   140002853:	cmp    ecx,0x40000000
   140002859:	jle    0x140002863
   14000285b:	add    ecx,0x100000
   140002861:	jmp    0x14000286c
   140002863:	mov    eax,ecx
   140002865:	cdq    
   140002866:	sub    eax,edx
   140002868:	sar    eax,1
   14000286a:	add    ecx,eax
   14000286c:	cmp    ecx,r8d
   14000286f:	cmovl  ecx,r8d
   140002873:	mov    edx,ecx
   140002875:	mov    rcx,r9
   140002878:	call   0x140002964
   14000287d:	add    rsp,0x28
   140002881:	ret    
   140002882:	int3   
   140002883:	int3   
   140002884:	int3   
   140002885:	int3   
   140002886:	int3   
   140002887:	int3   
   140002888:	mov    QWORD PTR [rsp+0x8],rbx
   14000288d:	mov    QWORD PTR [rsp+0x10],rbp
   140002892:	mov    QWORD PTR [rsp+0x18],rsi
   140002897:	push   rdi
   140002898:	push   r14
   14000289a:	push   r15
   14000289c:	sub    rsp,0x20
   1400028a0:	mov    rsi,QWORD PTR [rcx]
   1400028a3:	mov    r14,rcx
   1400028a6:	mov    ebp,edx
   1400028a8:	mov    rdi,QWORD PTR [rsi-0x18]
   1400028ac:	mov    r15d,DWORD PTR [rsi-0x10]
   1400028b0:	mov    rax,QWORD PTR [rdi]
   1400028b3:	mov    rbx,QWORD PTR [rax+0x20]
   1400028b7:	mov    rcx,rbx
   1400028ba:	call   QWORD PTR [rip+0x3a90]        # 0x140006350
   1400028c0:	mov    rcx,rdi
   1400028c3:	call   rbx
   1400028c5:	mov    rdi,rax
   1400028c8:	mov    rcx,QWORD PTR [rax]
   1400028cb:	mov    rbx,QWORD PTR [rcx]
   1400028ce:	mov    rcx,rbx
   1400028d1:	call   QWORD PTR [rip+0x3a79]        # 0x140006350
   1400028d7:	mov    r8d,0x2
   1400028dd:	mov    edx,ebp
   1400028df:	mov    rcx,rdi
   1400028e2:	call   rbx
   1400028e4:	mov    rbx,rax
   1400028e7:	test   rax,rax
   1400028ea:	je     0x140002958
   1400028ec:	cmp    r15d,ebp
   1400028ef:	mov    r8,rsi
   1400028f2:	cmovl  ebp,r15d
   1400028f6:	inc    ebp
   1400028f8:	movsxd rdx,ebp
   1400028fb:	lea    rbp,[rax+0x18]
   1400028ff:	add    rdx,rdx
   140002902:	mov    rcx,rbp
   140002905:	mov    r9,rdx
   140002908:	call   QWORD PTR [rip+0x39aa]        # 0x1400062b8
   14000290e:	or     eax,0xffffffff
   140002911:	mov    DWORD PTR [rbx+0x8],r15d
   140002915:	lock xadd DWORD PTR [rsi-0x8],eax
   14000291a:	sub    eax,0x1
   14000291d:	jg     0x14000293c
   14000291f:	mov    rdi,QWORD PTR [rsi-0x18]
   140002923:	mov    rax,QWORD PTR [rdi]
   140002926:	mov    rbx,QWORD PTR [rax+0x8]
   14000292a:	mov    rcx,rbx
   14000292d:	call   QWORD PTR [rip+0x3a1d]        # 0x140006350
   140002933:	lea    rdx,[rsi-0x18]
   140002937:	mov    rcx,rdi
   14000293a:	call   rbx
   14000293c:	mov    rbx,QWORD PTR [rsp+0x40]
   140002941:	mov    rsi,QWORD PTR [rsp+0x50]
   140002946:	mov    QWORD PTR [r14],rbp
   140002949:	mov    rbp,QWORD PTR [rsp+0x48]
   14000294e:	add    rsp,0x20
   140002952:	pop    r15
   140002954:	pop    r14
   140002956:	pop    rdi
   140002957:	ret    
   140002958:	call   0x14000280c
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	int3   
   140002961:	int3   
   140002962:	int3   
   140002963:	int3   
   140002964:	mov    rax,rsp
   140002967:	mov    QWORD PTR [rax+0x8],rbx
   14000296b:	mov    QWORD PTR [rax+0x10],rsi
   14000296f:	mov    QWORD PTR [rax+0x18],rdi
   140002973:	mov    QWORD PTR [rax+0x20],r14
   140002977:	push   r15
   140002979:	sub    rsp,0x20
   14000297d:	mov    rdi,QWORD PTR [rcx]
   140002980:	mov    esi,edx
   140002982:	mov    r14,rcx
   140002985:	mov    r15,QWORD PTR [rdi-0x18]
   140002989:	cmp    DWORD PTR [rdi-0xc],edx
   14000298c:	jge    0x1400029e1
   14000298e:	test   edx,edx
   140002990:	jle    0x1400029e1
   140002992:	mov    rax,QWORD PTR [r15]
   140002995:	mov    rbx,QWORD PTR [rax+0x10]
   140002999:	mov    rcx,rbx
   14000299c:	call   QWORD PTR [rip+0x39ae]        # 0x140006350
   1400029a2:	mov    r9d,0x2
   1400029a8:	lea    rdx,[rdi-0x18]
   1400029ac:	mov    r8d,esi
   1400029af:	mov    rcx,r15
   1400029b2:	call   rbx
   1400029b4:	test   rax,rax
   1400029b7:	je     0x1400029db
   1400029b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400029be:	add    rax,0x18
   1400029c2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400029c7:	mov    rdi,QWORD PTR [rsp+0x40]
   1400029cc:	mov    QWORD PTR [r14],rax
   1400029cf:	mov    r14,QWORD PTR [rsp+0x48]
   1400029d4:	add    rsp,0x20
   1400029d8:	pop    r15
   1400029da:	ret    
   1400029db:	call   0x14000280c
   1400029e0:	int3   
   1400029e1:	call   0x14000280c
   1400029e6:	int3   
   1400029e7:	int3   
   1400029e8:	int3   
   1400029e9:	int3   
   1400029ea:	int3   
   1400029eb:	int3   
   1400029ec:	int3   
   1400029ed:	int3   
   1400029ee:	int3   
   1400029ef:	int3   
   1400029f0:	mov    DWORD PTR [rcx],edx
   1400029f2:	mov    rax,rcx
   1400029f5:	ret    
   1400029f6:	int3   
   1400029f7:	int3   
   1400029f8:	int3   
   1400029f9:	int3   
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	sub    rsp,0x28
   140002a00:	mov    edx,ecx
   140002a02:	lea    rcx,[rsp+0x40]
   140002a07:	call   0x1400029f0
   140002a0c:	lea    rdx,[rip+0x4fa5]        # 0x1400079b8
   140002a13:	mov    ecx,DWORD PTR [rax]
   140002a15:	mov    DWORD PTR [rsp+0x38],ecx
   140002a19:	lea    rcx,[rsp+0x38]
   140002a1e:	call   0x140004dac
   140002a23:	int3   
   140002a24:	int3   
   140002a25:	int3   
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	mov    r11,rsp
   140002a2f:	sub    rsp,0x58
   140002a33:	and    QWORD PTR [r11-0x18],0x0
   140002a38:	lea    rax,[r11+0x28]
   140002a3c:	mov    QWORD PTR [r11-0x20],0x4
   140002a44:	lea    r8,[rip+0x3bbd]        # 0x140006608
   140002a4b:	mov    QWORD PTR [r11-0x28],rax
   140002a4f:	mov    edx,0x16
   140002a54:	mov    QWORD PTR [r11-0x30],0x10
   140002a5c:	mov    QWORD PTR [r11-0x38],r9
   140002a60:	movzx  r9d,dx
   140002a64:	mov    edx,0x2b
   140002a69:	call   QWORD PTR [rip+0x3591]        # 0x140006000
   140002a6f:	add    rsp,0x58
   140002a73:	ret    
   140002a74:	int3   
   140002a75:	int3   
   140002a76:	int3   
   140002a77:	int3   
   140002a78:	int3   
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	sub    rsp,0x48
   140002a80:	test   r9,r9
   140002a83:	je     0x140002a98
   140002a85:	or     rdx,0xffffffffffffffff
   140002a89:	inc    rdx
   140002a8c:	cmp    BYTE PTR [r9+rdx*1],0x0
   140002a91:	jne    0x140002a89
   140002a93:	inc    rdx
   140002a96:	jmp    0x140002a9d
   140002a98:	mov    edx,0x5
   140002a9d:	test   r9,r9
   140002aa0:	lea    rax,[rip+0x3aa1]        # 0x140006548
   140002aa7:	mov    r8d,0x22
   140002aad:	cmovne rax,r9
   140002ab1:	and    QWORD PTR [rsp+0x30],0x0
   140002ab7:	mov    QWORD PTR [rsp+0x28],rdx
   140002abc:	mov    edx,0x2b
   140002ac1:	movzx  r9d,r8w
   140002ac5:	lea    r8,[rip+0x3b3c]        # 0x140006608
   140002acc:	mov    QWORD PTR [rsp+0x20],rax
   140002ad1:	call   QWORD PTR [rip+0x3529]        # 0x140006000
   140002ad7:	add    rsp,0x48
   140002adb:	ret    
   140002adc:	int3   
   140002add:	int3   
   140002ade:	int3   
   140002adf:	int3   
   140002ae0:	int3   
   140002ae1:	int3   
   140002ae2:	int3   
   140002ae3:	int3   
   140002ae4:	rex.W jmp QWORD PTR [rip+0x3835]        # 0x140006320
   140002aeb:	int3   
   140002aec:	int3   
   140002aed:	int3   
   140002aee:	int3   
   140002aef:	int3   
   140002af0:	int3   
   140002af1:	int3   
   140002af2:	int3   
   140002af3:	int3   
   140002af4:	rex push rbx
   140002af6:	sub    rsp,0x20
   140002afa:	mov    rbx,rcx
   140002afd:	mov    rcx,QWORD PTR [rcx]
   140002b00:	call   QWORD PTR [rip+0x3792]        # 0x140006298
   140002b06:	and    QWORD PTR [rbx],0x0
   140002b0a:	add    rsp,0x20
   140002b0e:	pop    rbx
   140002b0f:	ret    
   140002b10:	int3   
   140002b11:	int3   
   140002b12:	int3   
   140002b13:	int3   
   140002b14:	int3   
   140002b15:	int3   
   140002b16:	int3   
   140002b17:	int3   
   140002b18:	mov    rax,rsp
   140002b1b:	push   rbp
   140002b1c:	mov    rbp,rsp
   140002b1f:	sub    rsp,0x60
   140002b23:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   140002b2b:	mov    QWORD PTR [rax+0x10],rbx
   140002b2f:	mov    QWORD PTR [rax+0x18],rdi
   140002b33:	mov    rax,QWORD PTR [rip+0x64ce]        # 0x140009008
   140002b3a:	xor    rax,rsp
   140002b3d:	mov    QWORD PTR [rbp-0x8],rax
   140002b41:	mov    rdi,rcx
   140002b44:	mov    QWORD PTR [rbp-0x20],rcx
   140002b48:	and    DWORD PTR [rbp-0x2c],0x0
   140002b4c:	lea    rcx,[rbp-0x18]
   140002b50:	call   QWORD PTR [rip+0x37c2]        # 0x140006318
   140002b56:	mov    ebx,eax
   140002b58:	test   eax,eax
   140002b5a:	jns    0x140002bb4
   140002b5c:	lea    rax,[rip+0x64bd]        # 0x140009020
   140002b63:	mov    rcx,QWORD PTR [rip+0x64b6]        # 0x140009020
   140002b6a:	cmp    rcx,rax
   140002b6d:	je     0x140002b93
   140002b6f:	test   BYTE PTR [rcx+0x1c],0x1
   140002b73:	je     0x140002b93
   140002b75:	cmp    BYTE PTR [rcx+0x19],0x2
   140002b79:	jb     0x140002b93
   140002b7b:	mov    edx,0xb
   140002b80:	mov    r9d,ebx
   140002b83:	lea    r8,[rip+0x3a7e]        # 0x140006608
   140002b8a:	mov    rcx,QWORD PTR [rcx+0x10]
   140002b8e:	call   0x140001208
   140002b93:	mov    edx,ebx
   140002b95:	lea    rcx,[rbp-0x30]
   140002b99:	call   0x1400029f0
   140002b9e:	mov    ecx,DWORD PTR [rax]
   140002ba0:	mov    DWORD PTR [rbp-0x40],ecx
   140002ba3:	lea    rdx,[rip+0x4e66]        # 0x140007a10
   140002baa:	lea    rcx,[rbp-0x40]
   140002bae:	call   0x140004dac
   140002bb3:	int3   
   140002bb4:	and    QWORD PTR [rbp-0x38],0x0
   140002bb9:	lea    rdx,[rbp-0x38]
   140002bbd:	lea    rcx,[rbp-0x18]
   140002bc1:	call   QWORD PTR [rip+0x3771]        # 0x140006338
   140002bc7:	mov    ebx,eax
   140002bc9:	test   eax,eax
   140002bcb:	jns    0x140002c25
   140002bcd:	lea    rax,[rip+0x644c]        # 0x140009020
   140002bd4:	mov    rcx,QWORD PTR [rip+0x6445]        # 0x140009020
   140002bdb:	cmp    rcx,rax
   140002bde:	je     0x140002c04
   140002be0:	test   BYTE PTR [rcx+0x1c],0x1
   140002be4:	je     0x140002c04
   140002be6:	cmp    BYTE PTR [rcx+0x19],0x2
   140002bea:	jb     0x140002c04
   140002bec:	mov    edx,0xc
   140002bf1:	mov    r9d,ebx
   140002bf4:	lea    r8,[rip+0x3a0d]        # 0x140006608
   140002bfb:	mov    rcx,QWORD PTR [rcx+0x10]
   140002bff:	call   0x140001208
   140002c04:	mov    edx,ebx
   140002c06:	lea    rcx,[rbp-0x30]
   140002c0a:	call   0x1400029f0
   140002c0f:	mov    ecx,DWORD PTR [rax]
   140002c11:	mov    DWORD PTR [rbp-0x40],ecx
   140002c14:	lea    rdx,[rip+0x4df5]        # 0x140007a10
   140002c1b:	lea    rcx,[rbp-0x40]
   140002c1f:	call   0x140004dac
   140002c24:	int3   
   140002c25:	mov    rax,QWORD PTR [rip+0x63fc]        # 0x140009028
   140002c2c:	mov    rbx,QWORD PTR [rax+0x18]
   140002c30:	mov    rcx,rbx
   140002c33:	call   QWORD PTR [rip+0x3717]        # 0x140006350
   140002c39:	lea    rcx,[rip+0x63e8]        # 0x140009028
   140002c40:	call   rbx
   140002c42:	add    rax,0x18
   140002c46:	mov    QWORD PTR [rdi],rax
   140002c49:	mov    DWORD PTR [rbp-0x2c],0x1
   140002c50:	mov    r8,QWORD PTR [rbp-0x38]
   140002c54:	lea    rdx,[rip+0x38f5]        # 0x140006550
   140002c5b:	mov    rcx,rdi
   140002c5e:	call   0x140003dfc
   140002c63:	nop
   140002c64:	mov    rcx,QWORD PTR [rbp-0x38]
   140002c68:	call   QWORD PTR [rip+0x36d2]        # 0x140006340
   140002c6e:	mov    rax,rdi
   140002c71:	mov    rcx,QWORD PTR [rbp-0x8]
   140002c75:	xor    rcx,rsp
   140002c78:	call   0x140004c40
   140002c7d:	lea    r11,[rsp+0x60]
   140002c82:	mov    rbx,QWORD PTR [r11+0x18]
   140002c86:	mov    rdi,QWORD PTR [r11+0x20]
   140002c8a:	mov    rsp,r11
   140002c8d:	pop    rbp
   140002c8e:	ret    
   140002c8f:	int3   
   140002c90:	int3   
   140002c91:	int3   
   140002c92:	int3   
   140002c93:	int3   
   140002c94:	int3   
   140002c95:	int3   
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	rex push rbx
   140002c9a:	sub    rsp,0x20
   140002c9e:	mov    rbx,rcx
   140002ca1:	mov    rcx,QWORD PTR [rcx]
   140002ca4:	call   QWORD PTR [rip+0x3696]        # 0x140006340
   140002caa:	and    QWORD PTR [rbx],0x0
   140002cae:	add    rsp,0x20
   140002cb2:	pop    rbx
   140002cb3:	ret    
   140002cb4:	int3   
   140002cb5:	int3   
   140002cb6:	int3   
   140002cb7:	int3   
   140002cb8:	int3   
   140002cb9:	int3   
   140002cba:	int3   
   140002cbb:	int3   
   140002cbc:	mov    QWORD PTR [rsp+0x8],rcx
   140002cc1:	push   rbp
   140002cc2:	push   rbx
   140002cc3:	push   rsi
   140002cc4:	push   rdi
   140002cc5:	push   r14
   140002cc7:	push   r15
   140002cc9:	mov    rbp,rsp
   140002ccc:	sub    rsp,0x58
   140002cd0:	mov    QWORD PTR [rbp-0x18],0xfffffffffffffffe
   140002cd8:	mov    rsi,rcx
   140002cdb:	xor    edi,edi
   140002cdd:	mov    DWORD PTR [rbp-0x28],edi
   140002ce0:	mov    rax,QWORD PTR [rip+0x6341]        # 0x140009028
   140002ce7:	mov    rbx,QWORD PTR [rax+0x18]
   140002ceb:	mov    rcx,rbx
   140002cee:	call   QWORD PTR [rip+0x365c]        # 0x140006350
   140002cf4:	lea    rcx,[rip+0x632d]        # 0x140009028
   140002cfb:	call   rbx
   140002cfd:	add    rax,0x18
   140002d01:	mov    QWORD PTR [rsi],rax
   140002d04:	lea    r14d,[rdi+0x1]
   140002d08:	mov    DWORD PTR [rbp-0x28],r14d
   140002d0c:	mov    edx,r14d
   140002d0f:	sub    edx,DWORD PTR [rax-0x8]
   140002d12:	mov    eax,DWORD PTR [rax-0xc]
   140002d15:	mov    ebx,0x105
   140002d1a:	sub    eax,ebx
   140002d1c:	or     eax,edx
   140002d1e:	jge    0x140002d2a
   140002d20:	mov    edx,ebx
   140002d22:	mov    rcx,rsi
   140002d25:	call   0x140002824
   140002d2a:	mov    rdx,QWORD PTR [rsi]
   140002d2d:	mov    ecx,ebx
   140002d2f:	call   QWORD PTR [rip+0x3353]        # 0x140006088
   140002d35:	dec    eax
   140002d37:	cmp    eax,0x103
   140002d3c:	ja     0x140002f0b
   140002d42:	mov    rcx,QWORD PTR [rsi]
   140002d45:	or     r15,0xffffffffffffffff
   140002d49:	test   rcx,rcx
   140002d4c:	jne    0x140002d52
   140002d4e:	mov    eax,edi
   140002d50:	jmp    0x140002d66
   140002d52:	mov    rax,r15
   140002d55:	inc    rax
   140002d58:	cmp    WORD PTR [rcx+rax*2],di
   140002d5c:	jne    0x140002d55
   140002d5e:	test   eax,eax
   140002d60:	js     0x140002f00
   140002d66:	cmp    eax,DWORD PTR [rcx-0xc]
   140002d69:	jg     0x140002f00
   140002d6f:	mov    DWORD PTR [rcx-0x10],eax
   140002d72:	movsxd rdx,eax
   140002d75:	mov    rax,QWORD PTR [rsi]
   140002d78:	mov    WORD PTR [rax+rdx*2],di
   140002d7c:	mov    rax,QWORD PTR [rip+0x62a5]        # 0x140009028
   140002d83:	mov    rbx,QWORD PTR [rax+0x18]
   140002d87:	mov    rcx,rbx
   140002d8a:	call   QWORD PTR [rip+0x35c0]        # 0x140006350
   140002d90:	lea    rcx,[rip+0x6291]        # 0x140009028
   140002d97:	call   rbx
   140002d99:	add    rax,0x18
   140002d9d:	mov    QWORD PTR [rbp-0x20],rax
   140002da1:	call   QWORD PTR [rip+0x32f1]        # 0x140006098
   140002da7:	mov    DWORD PTR [rsp+0x28],eax
   140002dab:	mov    DWORD PTR [rsp+0x20],0x271b
   140002db3:	xor    r9d,r9d
   140002db6:	lea    r8d,[r9+0xa]
   140002dba:	lea    rdx,[rip+0x37bf]        # 0x140006580
   140002dc1:	lea    rcx,[rbp-0x20]
   140002dc5:	call   0x140003dfc
   140002dca:	mov    r8,QWORD PTR [rsi]
   140002dcd:	mov    ecx,DWORD PTR [r8-0x10]
   140002dd1:	mov    rbx,QWORD PTR [rbp-0x20]
   140002dd5:	test   rbx,rbx
   140002dd8:	jne    0x140002dde
   140002dda:	mov    eax,edi
   140002ddc:	jmp    0x140002dea
   140002dde:	mov    rax,r15
   140002de1:	inc    rax
   140002de4:	cmp    WORD PTR [rbx+rax*2],di
   140002de8:	jne    0x140002de1
   140002dea:	lea    edx,[rcx+0x1]
   140002ded:	add    edx,eax
   140002def:	mov    ecx,r14d
   140002df2:	sub    ecx,DWORD PTR [r8-0x8]
   140002df6:	mov    eax,DWORD PTR [r8-0xc]
   140002dfa:	sub    eax,edx
   140002dfc:	or     eax,ecx
   140002dfe:	jge    0x140002e08
   140002e00:	mov    rcx,rsi
   140002e03:	call   0x140002824
   140002e08:	mov    rdx,rbx
   140002e0b:	mov    rcx,QWORD PTR [rsi]
   140002e0e:	call   QWORD PTR [rip+0x3374]        # 0x140006188
   140002e14:	mov    r8d,eax
   140002e17:	mov    rdx,QWORD PTR [rsi]
   140002e1a:	test   rdx,rdx
   140002e1d:	jne    0x140002e23
   140002e1f:	mov    ecx,edi
   140002e21:	jmp    0x140002e37
   140002e23:	mov    rcx,r15
   140002e26:	inc    rcx
   140002e29:	cmp    WORD PTR [rdx+rcx*2],di
   140002e2d:	jne    0x140002e26
   140002e2f:	test   ecx,ecx
   140002e31:	js     0x140002ef5
   140002e37:	cmp    ecx,DWORD PTR [rdx-0xc]
   140002e3a:	jg     0x140002ef5
   140002e40:	mov    DWORD PTR [rdx-0x10],ecx
   140002e43:	movsxd rcx,ecx
   140002e46:	mov    rax,QWORD PTR [rsi]
   140002e49:	mov    WORD PTR [rax+rcx*2],di
   140002e4d:	test   r8d,r8d
   140002e50:	jne    0x140002ebe
   140002e52:	call   QWORD PTR [rip+0x3238]        # 0x140006090
   140002e58:	mov    ebx,eax
   140002e5a:	lea    rdx,[rip+0x61bf]        # 0x140009020
   140002e61:	mov    rcx,QWORD PTR [rip+0x61b8]        # 0x140009020
   140002e68:	cmp    rcx,rdx
   140002e6b:	je     0x140002e91
   140002e6d:	test   BYTE PTR [rcx+0x1c],r14b
   140002e71:	je     0x140002e91
   140002e73:	cmp    BYTE PTR [rcx+0x19],0x2
   140002e77:	jb     0x140002e91
   140002e79:	mov    edx,0xe
   140002e7e:	mov    r9d,eax
   140002e81:	lea    r8,[rip+0x3780]        # 0x140006608
   140002e88:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e8c:	call   0x140001208
   140002e91:	movzx  edx,bx
   140002e94:	or     edx,0x80070000
   140002e9a:	test   ebx,ebx
   140002e9c:	cmovle edx,ebx
   140002e9f:	lea    rcx,[rbp+0x50]
   140002ea3:	call   0x1400029f0
   140002ea8:	mov    ecx,DWORD PTR [rax]
   140002eaa:	mov    DWORD PTR [rbp+0x40],ecx
   140002ead:	lea    rdx,[rip+0x4b5c]        # 0x140007a10
   140002eb4:	lea    rcx,[rbp+0x40]
   140002eb8:	call   0x140004dac
   140002ebd:	nop
   140002ebe:	lea    r14,[rbx-0x18]
   140002ec2:	mov    eax,r15d
   140002ec5:	lock xadd DWORD PTR [r14+0x10],eax
   140002ecb:	add    eax,r15d
   140002ece:	test   eax,eax
   140002ed0:	jg     0x140002eed
   140002ed2:	mov    rdi,QWORD PTR [r14]
   140002ed5:	mov    rax,QWORD PTR [rdi]
   140002ed8:	mov    rbx,QWORD PTR [rax+0x8]
   140002edc:	mov    rcx,rbx
   140002edf:	call   QWORD PTR [rip+0x346b]        # 0x140006350
   140002ee5:	mov    rdx,r14
   140002ee8:	mov    rcx,rdi
   140002eeb:	call   rbx
   140002eed:	mov    rax,rsi
   140002ef0:	jmp    0x140002f77
   140002ef5:	mov    ecx,0x80070057
   140002efa:	call   0x1400029fc
   140002eff:	nop
   140002f00:	mov    ecx,0x80070057
   140002f05:	call   0x1400029fc
   140002f0a:	int3   
   140002f0b:	call   QWORD PTR [rip+0x317f]        # 0x140006090
   140002f11:	mov    ebx,eax
   140002f13:	lea    rdx,[rip+0x6106]        # 0x140009020
   140002f1a:	mov    rcx,QWORD PTR [rip+0x60ff]        # 0x140009020
   140002f21:	cmp    rcx,rdx
   140002f24:	je     0x140002f4a
   140002f26:	test   BYTE PTR [rcx+0x1c],r14b
   140002f2a:	je     0x140002f4a
   140002f2c:	cmp    BYTE PTR [rcx+0x19],0x2
   140002f30:	jb     0x140002f4a
   140002f32:	mov    edx,0xd
   140002f37:	mov    r9d,eax
   140002f3a:	lea    r8,[rip+0x36c7]        # 0x140006608
   140002f41:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f45:	call   0x140001208
   140002f4a:	movzx  edx,bx
   140002f4d:	or     edx,0x80070000
   140002f53:	test   ebx,ebx
   140002f55:	cmovle edx,ebx
   140002f58:	lea    rcx,[rbp-0x24]
   140002f5c:	call   0x1400029f0
   140002f61:	mov    ecx,DWORD PTR [rax]
   140002f63:	mov    DWORD PTR [rbp+0x48],ecx
   140002f66:	lea    rdx,[rip+0x4aa3]        # 0x140007a10
   140002f6d:	lea    rcx,[rbp+0x48]
   140002f71:	call   0x140004dac
   140002f76:	nop
   140002f77:	add    rsp,0x58
   140002f7b:	pop    r15
   140002f7d:	pop    r14
   140002f7f:	pop    rdi
   140002f80:	pop    rsi
   140002f81:	pop    rbx
   140002f82:	pop    rbp
   140002f83:	ret    
   140002f84:	int3   
   140002f85:	int3   
   140002f86:	int3   
   140002f87:	int3   
   140002f88:	int3   
   140002f89:	int3   
   140002f8a:	int3   
   140002f8b:	int3   
   140002f8c:	mov    QWORD PTR [rsp+0x8],rcx
   140002f91:	sub    rsp,0x38
   140002f95:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002f9e:	lea    rax,[rip+0x688b]        # 0x140009830
   140002fa5:	mov    QWORD PTR [rsp+0x40],rax
   140002faa:	call   0x1400034d8
   140002faf:	nop
   140002fb0:	mov    rcx,QWORD PTR [rip+0x68a1]        # 0x140009858
   140002fb7:	call   QWORD PTR [rip+0x32db]        # 0x140006298
   140002fbd:	and    QWORD PTR [rip+0x6893],0x0        # 0x140009858
   140002fc5:	mov    rcx,QWORD PTR [rip+0x686c]        # 0x140009838
   140002fcc:	test   rcx,rcx
   140002fcf:	je     0x140002fd7
   140002fd1:	call   QWORD PTR [rip+0x32f1]        # 0x1400062c8
   140002fd7:	and    QWORD PTR [rip+0x6859],0x0        # 0x140009838
   140002fdf:	xorps  xmm0,xmm0
   140002fe2:	movdqa XMMWORD PTR [rip+0x6856],xmm0        # 0x140009840
   140002fea:	add    rsp,0x38
   140002fee:	ret    
   140002fef:	int3   
   140002ff0:	int3   
   140002ff1:	int3   
   140002ff2:	int3   
   140002ff3:	int3   
   140002ff4:	int3   
   140002ff5:	int3   
   140002ff6:	int3   
   140002ff7:	int3   
   140002ff8:	rex push rbx
   140002ffa:	sub    rsp,0x50
   140002ffe:	movaps XMMWORD PTR [rsp+0x40],xmm6
   140003003:	mov    rax,QWORD PTR [rip+0x5ffe]        # 0x140009008
   14000300a:	xor    rax,rsp
   14000300d:	mov    QWORD PTR [rsp+0x38],rax
   140003012:	movups xmm6,XMMWORD PTR [rdx]
   140003015:	or     DWORD PTR [rsp+0x30],0xffffffff
   14000301a:	lea    rax,[rsp+0x20]
   14000301f:	mov    r8,QWORD PTR [rip+0x681a]        # 0x140009840
   140003026:	mov    DWORD PTR [rsp+0x34],0x5
   14000302e:	movups XMMWORD PTR [rsp+0x20],xmm6
   140003033:	cmp    rax,r8
   140003036:	jae    0x1400030ad
   140003038:	mov    r9,QWORD PTR [rip+0x67f9]        # 0x140009838
   14000303f:	lea    rax,[rsp+0x20]
   140003044:	cmp    r9,rax
   140003047:	ja     0x1400030ad
   140003049:	lea    rcx,[rsp+0x20]
   14000304e:	movabs rax,0x2aaaaaaaaaaaaaab
   140003058:	sub    rcx,r9
   14000305b:	imul   rcx
   14000305e:	mov    rbx,rdx
   140003061:	sar    rbx,0x2
   140003065:	mov    rax,rbx
   140003068:	shr    rax,0x3f
   14000306c:	add    rbx,rax
   14000306f:	cmp    r8,QWORD PTR [rip+0x67d2]        # 0x140009848
   140003076:	jne    0x140003092
   140003078:	lea    rcx,[rip+0x67b9]        # 0x140009838
   14000307f:	call   0x140003ad8
   140003084:	mov    r8,QWORD PTR [rip+0x67b5]        # 0x140009840
   14000308b:	mov    r9,QWORD PTR [rip+0x67a6]        # 0x140009838
   140003092:	lea    rax,[rbx+rbx*2]
   140003096:	test   r8,r8
   140003099:	je     0x1400030e5
   14000309b:	movups xmm0,XMMWORD PTR [r9+rax*8]
   1400030a0:	movups XMMWORD PTR [r8],xmm0
   1400030a4:	movsd  xmm1,QWORD PTR [r9+rax*8+0x10]
   1400030ab:	jmp    0x1400030d8
   1400030ad:	cmp    r8,QWORD PTR [rip+0x6794]        # 0x140009848
   1400030b4:	jne    0x1400030c9
   1400030b6:	lea    rcx,[rip+0x677b]        # 0x140009838
   1400030bd:	call   0x140003ad8
   1400030c2:	mov    r8,QWORD PTR [rip+0x6777]        # 0x140009840
   1400030c9:	test   r8,r8
   1400030cc:	je     0x1400030e5
   1400030ce:	movsd  xmm1,QWORD PTR [rsp+0x30]
   1400030d4:	movups XMMWORD PTR [r8],xmm6
   1400030d8:	movsd  QWORD PTR [r8+0x10],xmm1
   1400030de:	mov    r8,QWORD PTR [rip+0x675b]        # 0x140009840
   1400030e5:	add    r8,0x18
   1400030e9:	mov    QWORD PTR [rip+0x6750],r8        # 0x140009840
   1400030f0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400030f5:	xor    rcx,rsp
   1400030f8:	call   0x140004c40
   1400030fd:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140003102:	add    rsp,0x50
   140003106:	pop    rbx
   140003107:	ret    
   140003108:	int3   
   140003109:	int3   
   14000310a:	int3   
   14000310b:	int3   
   14000310c:	int3   
   14000310d:	int3   
   14000310e:	int3   
   14000310f:	int3   
   140003110:	mov    QWORD PTR [rsp+0x8],rcx
   140003115:	push   rbp
   140003116:	push   rbx
   140003117:	push   rsi
   140003118:	push   rdi
   140003119:	push   r14
   14000311b:	mov    rbp,rsp
   14000311e:	sub    rsp,0x40
   140003122:	mov    QWORD PTR [rbp-0x8],0xfffffffffffffffe
   14000312a:	lea    rsi,[rip+0x5eef]        # 0x140009020
   140003131:	lea    r14,[rip+0x34d0]        # 0x140006608
   140003138:	mov    dil,0x1
   14000313b:	mov    rbx,QWORD PTR [rip+0x5ede]        # 0x140009020
   140003142:	cmp    rbx,rsi
   140003145:	je     0x14000316b
   140003147:	test   BYTE PTR [rbx+0x1c],dil
   14000314b:	je     0x14000316b
   14000314d:	cmp    BYTE PTR [rbx+0x19],0x5
   140003151:	jb     0x14000316b
   140003153:	mov    edx,0x10
   140003158:	mov    r8,r14
   14000315b:	mov    rcx,QWORD PTR [rbx+0x10]
   14000315f:	call   0x140001168
   140003164:	mov    rbx,QWORD PTR [rip+0x5eb5]        # 0x140009020
   14000316b:	mov    ecx,0x484
   140003170:	call   QWORD PTR [rip+0x312a]        # 0x1400062a0
   140003176:	mov    QWORD PTR [rip+0x66db],rax        # 0x140009858
   14000317d:	test   rax,rax
   140003180:	jne    0x1400031c6
   140003182:	cmp    rbx,rsi
   140003185:	je     0x1400031a2
   140003187:	test   BYTE PTR [rbx+0x1c],dil
   14000318b:	je     0x1400031a2
   14000318d:	cmp    BYTE PTR [rbx+0x19],0x2
   140003191:	jb     0x1400031a2
   140003193:	lea    edx,[rax+0x11]
   140003196:	mov    r8,r14
   140003199:	mov    rcx,QWORD PTR [rbx+0x10]
   14000319d:	call   0x140001168
   1400031a2:	mov    edx,0x80004005
   1400031a7:	lea    rcx,[rbp+0x48]
   1400031ab:	call   0x1400029f0
   1400031b0:	mov    ecx,DWORD PTR [rax]
   1400031b2:	mov    DWORD PTR [rbp+0x30],ecx
   1400031b5:	lea    rdx,[rip+0x4854]        # 0x140007a10
   1400031bc:	lea    rcx,[rbp+0x30]
   1400031c0:	call   0x140004dac
   1400031c5:	int3   
   1400031c6:	xor    edx,edx
   1400031c8:	mov    r8d,0x484
   1400031ce:	mov    rcx,rax
   1400031d1:	call   0x140004da0
   1400031d6:	mov    rax,QWORD PTR [rip+0x667b]        # 0x140009858
   1400031dd:	mov    DWORD PTR [rax],0x484
   1400031e3:	mov    rax,QWORD PTR [rip+0x666e]        # 0x140009858
   1400031ea:	mov    DWORD PTR [rax+0x2c],0x20000
   1400031f1:	mov    rax,QWORD PTR [rip+0x6660]        # 0x140009858
   1400031f8:	mov    DWORD PTR [rax+0x74],0x78
   1400031ff:	mov    rax,QWORD PTR [rip+0x6652]        # 0x140009858
   140003206:	mov    DWORD PTR [rax+0x70],0x27a
   14000320d:	mov    rax,QWORD PTR [rip+0x6644]        # 0x140009858
   140003214:	mov    DWORD PTR [rax+0x40],0x20800
   14000321b:	lea    rcx,[rbp-0x10]
   14000321f:	call   0x140002cbc
   140003224:	nop
   140003225:	mov    rdx,QWORD PTR [rbp-0x10]
   140003229:	mov    eax,DWORD PTR [rdx-0x10]
   14000322c:	cmp    eax,0x104
   140003231:	jbe    0x140003280
   140003233:	mov    rcx,QWORD PTR [rip+0x5de6]        # 0x140009020
   14000323a:	cmp    rcx,rsi
   14000323d:	je     0x14000325c
   14000323f:	test   BYTE PTR [rcx+0x1c],dil
   140003243:	je     0x14000325c
   140003245:	cmp    BYTE PTR [rcx+0x19],0x2
   140003249:	jb     0x14000325c
   14000324b:	mov    edx,0x12
   140003250:	mov    r8,r14
   140003253:	mov    rcx,QWORD PTR [rcx+0x10]
   140003257:	call   0x140001168
   14000325c:	mov    edx,0x80004005
   140003261:	lea    rcx,[rbp-0x20]
   140003265:	call   0x1400029f0
   14000326a:	mov    ecx,DWORD PTR [rax]
   14000326c:	mov    DWORD PTR [rbp+0x38],ecx
   14000326f:	lea    rdx,[rip+0x479a]        # 0x140007a10
   140003276:	lea    rcx,[rbp+0x38]
   14000327a:	call   0x140004dac
   14000327f:	int3   
   140003280:	inc    eax
   140003282:	movsxd r8,eax
   140003285:	add    r8,r8
   140003288:	mov    rax,QWORD PTR [rip+0x65c9]        # 0x140009858
   14000328f:	mov    ecx,DWORD PTR [rax+0x70]
   140003292:	add    rcx,rax
   140003295:	call   0x14000540a
   14000329a:	lea    rdx,[rip+0x3347]        # 0x1400065e8
   1400032a1:	call   0x140002ff8
   1400032a6:	lea    rdx,[rip+0x334b]        # 0x1400065f8
   1400032ad:	call   0x140002ff8
   1400032b2:	lea    rcx,[rbp-0x18]
   1400032b6:	call   0x140002b18
   1400032bb:	nop
   1400032bc:	mov    r8,QWORD PTR [rip+0x6595]        # 0x140009858
   1400032c3:	mov    rdx,QWORD PTR [rbp-0x18]
   1400032c7:	lea    rcx,[rip+0x6562]        # 0x140009830
   1400032ce:	call   QWORD PTR [rip+0x2d5c]        # 0x140006030
   1400032d4:	mov    ebx,eax
   1400032d6:	test   eax,eax
   1400032d8:	je     0x140003333
   1400032da:	mov    rcx,QWORD PTR [rip+0x5d3f]        # 0x140009020
   1400032e1:	cmp    rcx,rsi
   1400032e4:	je     0x140003306
   1400032e6:	test   BYTE PTR [rcx+0x1c],dil
   1400032ea:	je     0x140003306
   1400032ec:	cmp    BYTE PTR [rcx+0x19],0x2
   1400032f0:	jb     0x140003306
   1400032f2:	mov    edx,0x13
   1400032f7:	mov    r9d,eax
   1400032fa:	mov    r8,r14
   1400032fd:	mov    rcx,QWORD PTR [rcx+0x10]
   140003301:	call   0x140001208
   140003306:	movzx  edx,bx
   140003309:	or     edx,0x80070000
   14000330f:	test   ebx,ebx
   140003311:	cmovle edx,ebx
   140003314:	lea    rcx,[rbp-0x1c]
   140003318:	call   0x1400029f0
   14000331d:	mov    ecx,DWORD PTR [rax]
   14000331f:	mov    DWORD PTR [rbp+0x40],ecx
   140003322:	lea    rdx,[rip+0x46e7]        # 0x140007a10
   140003329:	lea    rcx,[rbp+0x40]
   14000332d:	call   0x140004dac
   140003332:	int3   
   140003333:	mov    dl,dil
   140003336:	call   0x1400033dc
   14000333b:	mov    rcx,QWORD PTR [rip+0x5cde]        # 0x140009020
   140003342:	cmp    rcx,rsi
   140003345:	je     0x140003365
   140003347:	test   BYTE PTR [rcx+0x1c],dil
   14000334b:	je     0x140003365
   14000334d:	cmp    BYTE PTR [rcx+0x19],0x5
   140003351:	jb     0x140003365
   140003353:	mov    edx,0x14
   140003358:	mov    r8,r14
   14000335b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000335f:	call   0x140001168
   140003364:	nop
   140003365:	mov    rsi,QWORD PTR [rbp-0x18]
   140003369:	or     r14d,0xffffffff
   14000336d:	mov    eax,r14d
   140003370:	lock xadd DWORD PTR [rsi-0x8],eax
   140003375:	add    eax,r14d
   140003378:	test   eax,eax
   14000337a:	jg     0x14000339a
   14000337c:	mov    rdi,QWORD PTR [rsi-0x18]
   140003380:	mov    rax,QWORD PTR [rdi]
   140003383:	mov    rbx,QWORD PTR [rax+0x8]
   140003387:	mov    rcx,rbx
   14000338a:	call   QWORD PTR [rip+0x2fc0]        # 0x140006350
   140003390:	lea    rdx,[rsi-0x18]
   140003394:	mov    rcx,rdi
   140003397:	call   rbx
   140003399:	nop
   14000339a:	mov    rsi,QWORD PTR [rbp-0x10]
   14000339e:	mov    eax,r14d
   1400033a1:	lock xadd DWORD PTR [rsi-0x8],eax
   1400033a6:	add    eax,r14d
   1400033a9:	test   eax,eax
   1400033ab:	jg     0x1400033ca
   1400033ad:	mov    rdi,QWORD PTR [rsi-0x18]
   1400033b1:	mov    rax,QWORD PTR [rdi]
   1400033b4:	mov    rbx,QWORD PTR [rax+0x8]
   1400033b8:	mov    rcx,rbx
   1400033bb:	call   QWORD PTR [rip+0x2f8f]        # 0x140006350
   1400033c1:	lea    rdx,[rsi-0x18]
   1400033c5:	mov    rcx,rdi
   1400033c8:	call   rbx
   1400033ca:	add    rsp,0x40
   1400033ce:	pop    r14
   1400033d0:	pop    rdi
   1400033d1:	pop    rsi
   1400033d2:	pop    rbx
   1400033d3:	pop    rbp
   1400033d4:	ret    
   1400033d5:	int3   
   1400033d6:	int3   
   1400033d7:	int3   
   1400033d8:	int3   
   1400033d9:	int3   
   1400033da:	int3   
   1400033db:	int3   
   1400033dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400033e1:	mov    QWORD PTR [rsp+0x10],rbp
   1400033e6:	push   rdi
   1400033e7:	sub    rsp,0x30
   1400033eb:	mov    dil,dl
   1400033ee:	mov    rcx,QWORD PTR [rip+0x5c2b]        # 0x140009020
   1400033f5:	lea    rbp,[rip+0x5c24]        # 0x140009020
   1400033fc:	cmp    rcx,rbp
   1400033ff:	je     0x140003429
   140003401:	test   BYTE PTR [rcx+0x1c],0x1
   140003405:	je     0x140003429
   140003407:	cmp    BYTE PTR [rcx+0x19],0x5
   14000340b:	jb     0x140003429
   14000340d:	mov    rcx,QWORD PTR [rcx+0x10]
   140003411:	lea    r8,[rip+0x31f0]        # 0x140006608
   140003418:	mov    edx,0x15
   14000341d:	call   0x140001168
   140003422:	mov    rcx,QWORD PTR [rip+0x5bf7]        # 0x140009020
   140003429:	mov    rbx,QWORD PTR [rip+0x6408]        # 0x140009838
   140003430:	cmp    rbx,QWORD PTR [rip+0x6409]        # 0x140009840
   140003437:	je     0x14000349b
   140003439:	movzx  edi,dil
   14000343d:	mov    rax,QWORD PTR [rip+0x63ec]        # 0x140009830
   140003444:	mov    r9,rbx
   140003447:	mov    r8d,DWORD PTR [rbx+0x14]
   14000344b:	mov    ecx,edi
   14000344d:	mov    edx,DWORD PTR [rbx+0x10]
   140003450:	mov    QWORD PTR [rsp+0x20],rax
   140003455:	call   QWORD PTR [rip+0x2bdd]        # 0x140006038
   14000345b:	test   eax,eax
   14000345d:	je     0x140003487
   14000345f:	mov    rcx,QWORD PTR [rip+0x5bba]        # 0x140009020
   140003466:	cmp    rcx,rbp
   140003469:	je     0x14000348e
   14000346b:	test   BYTE PTR [rcx+0x1c],0x1
   14000346f:	je     0x14000348e
   140003471:	cmp    BYTE PTR [rcx+0x19],0x3
   140003475:	jb     0x14000348e
   140003477:	mov    rcx,QWORD PTR [rcx+0x10]
   14000347b:	mov    r9,rbx
   14000347e:	mov    DWORD PTR [rsp+0x20],eax
   140003482:	call   0x140002a2c
   140003487:	mov    rcx,QWORD PTR [rip+0x5b92]        # 0x140009020
   14000348e:	add    rbx,0x18
   140003492:	cmp    rbx,QWORD PTR [rip+0x63a7]        # 0x140009840
   140003499:	jne    0x14000343d
   14000349b:	cmp    rcx,rbp
   14000349e:	je     0x1400034c1
   1400034a0:	test   BYTE PTR [rcx+0x1c],0x1
   1400034a4:	je     0x1400034c1
   1400034a6:	cmp    BYTE PTR [rcx+0x19],0x5
   1400034aa:	jb     0x1400034c1
   1400034ac:	mov    rcx,QWORD PTR [rcx+0x10]
   1400034b0:	lea    r8,[rip+0x3151]        # 0x140006608
   1400034b7:	mov    edx,0x17
   1400034bc:	call   0x140001168
   1400034c1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400034c6:	mov    rbp,QWORD PTR [rsp+0x48]
   1400034cb:	add    rsp,0x30
   1400034cf:	pop    rdi
   1400034d0:	ret    
   1400034d1:	int3   
   1400034d2:	int3   
   1400034d3:	int3   
   1400034d4:	int3   
   1400034d5:	int3   
   1400034d6:	int3   
   1400034d7:	int3   
   1400034d8:	mov    QWORD PTR [rsp+0x18],rbx
   1400034dd:	mov    QWORD PTR [rsp+0x8],rcx
   1400034e2:	push   rsi
   1400034e3:	sub    rsp,0x20
   1400034e7:	mov    rcx,QWORD PTR [rip+0x5b32]        # 0x140009020
   1400034ee:	lea    rsi,[rip+0x5b2b]        # 0x140009020
   1400034f5:	cmp    rcx,rsi
   1400034f8:	je     0x140003522
   1400034fa:	test   BYTE PTR [rcx+0x1c],0x1
   1400034fe:	je     0x140003522
   140003500:	cmp    BYTE PTR [rcx+0x19],0x5
   140003504:	jb     0x140003522
   140003506:	mov    rcx,QWORD PTR [rcx+0x10]
   14000350a:	lea    r8,[rip+0x30f7]        # 0x140006608
   140003511:	mov    edx,0x18
   140003516:	call   0x140001168
   14000351b:	mov    rcx,QWORD PTR [rip+0x5afe]        # 0x140009020
   140003522:	cmp    QWORD PTR [rip+0x6306],0x0        # 0x140009830
   14000352a:	je     0x14000357e
   14000352c:	xor    edx,edx
   14000352e:	call   0x1400033dc
   140003533:	mov    r8,QWORD PTR [rip+0x631e]        # 0x140009858
   14000353a:	mov    r9d,0x1
   140003540:	mov    rcx,QWORD PTR [rip+0x62e9]        # 0x140009830
   140003547:	xor    edx,edx
   140003549:	call   QWORD PTR [rip+0x2af1]        # 0x140006040
   14000354f:	mov    ebx,eax
   140003551:	test   eax,eax
   140003553:	je     0x14000356f
   140003555:	mov    rcx,QWORD PTR [rip+0x5ac4]        # 0x140009020
   14000355c:	cmp    rcx,rsi
   14000355f:	je     0x1400035c7
   140003561:	test   BYTE PTR [rcx+0x1c],0x1
   140003565:	je     0x1400035c7
   140003567:	cmp    BYTE PTR [rcx+0x19],0x2
   14000356b:	jb     0x1400035c7
   14000356d:	jmp    0x1400035af
   14000356f:	and    QWORD PTR [rip+0x62b9],0x0        # 0x140009830
   140003577:	mov    rcx,QWORD PTR [rip+0x5aa2]        # 0x140009020
   14000357e:	cmp    rcx,rsi
   140003581:	je     0x1400035a4
   140003583:	test   BYTE PTR [rcx+0x1c],0x1
   140003587:	je     0x1400035a4
   140003589:	cmp    BYTE PTR [rcx+0x19],0x5
   14000358d:	jb     0x1400035a4
   14000358f:	mov    rcx,QWORD PTR [rcx+0x10]
   140003593:	lea    r8,[rip+0x306e]        # 0x140006608
   14000359a:	mov    edx,0x1a
   14000359f:	call   0x140001168
   1400035a4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400035a9:	add    rsp,0x20
   1400035ad:	pop    rsi
   1400035ae:	ret    
   1400035af:	mov    rcx,QWORD PTR [rcx+0x10]
   1400035b3:	lea    r8,[rip+0x304e]        # 0x140006608
   1400035ba:	mov    edx,0x19
   1400035bf:	mov    r9d,eax
   1400035c2:	call   0x140001208
   1400035c7:	movzx  edx,bx
   1400035ca:	lea    rcx,[rsp+0x38]
   1400035cf:	or     edx,0x80070000
   1400035d5:	test   ebx,ebx
   1400035d7:	cmovle edx,ebx
   1400035da:	call   0x1400029f0
   1400035df:	lea    rdx,[rip+0x442a]        # 0x140007a10
   1400035e6:	mov    ecx,DWORD PTR [rax]
   1400035e8:	mov    DWORD PTR [rsp+0x30],ecx
   1400035ec:	lea    rcx,[rsp+0x30]
   1400035f1:	call   0x140004dac
   1400035f6:	int3   
   1400035f7:	int3   
   1400035f8:	int3   
   1400035f9:	int3   
   1400035fa:	int3   
   1400035fb:	int3   
   1400035fc:	int3   
   1400035fd:	int3   
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	mov    rax,rsp
   140003603:	push   rbx
   140003604:	sub    rsp,0x60
   140003608:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003610:	mov    rbx,rcx
   140003613:	and    DWORD PTR [rsp+0x40],0x0
   140003618:	neg    r8b
   14000361b:	sbb    ecx,ecx
   14000361d:	and    ecx,0x8ff
   140003623:	add    ecx,0xb00
   140003629:	and    QWORD PTR [rax-0x20],0x0
   14000362e:	and    QWORD PTR [rax-0x38],0x0
   140003633:	and    DWORD PTR [rax-0x40],0x0
   140003637:	lea    rax,[rax-0x20]
   14000363b:	mov    QWORD PTR [rsp+0x20],rax
   140003640:	xor    r9d,r9d
   140003643:	mov    r8d,edx
   140003646:	xor    edx,edx
   140003648:	call   QWORD PTR [rip+0x2a2a]        # 0x140006078
   14000364e:	test   eax,eax
   140003650:	jne    0x1400036ca
   140003652:	call   QWORD PTR [rip+0x2a38]        # 0x140006090
   140003658:	mov    ebx,eax
   14000365a:	lea    rax,[rip+0x59bf]        # 0x140009020
   140003661:	mov    rcx,QWORD PTR [rip+0x59b8]        # 0x140009020
   140003668:	cmp    rcx,rax
   14000366b:	je     0x140003691
   14000366d:	test   BYTE PTR [rcx+0x1c],0x1
   140003671:	je     0x140003691
   140003673:	cmp    BYTE PTR [rcx+0x19],0x2
   140003677:	jb     0x140003691
   140003679:	mov    edx,0x1b
   14000367e:	mov    r9d,ebx
   140003681:	lea    r8,[rip+0x2f80]        # 0x140006608
   140003688:	mov    rcx,QWORD PTR [rcx+0x10]
   14000368c:	call   0x140001208
   140003691:	movzx  edx,bx
   140003694:	or     edx,0x80070000
   14000369a:	test   ebx,ebx
   14000369c:	cmovle edx,ebx
   14000369f:	lea    rcx,[rsp+0x88]
   1400036a7:	call   0x1400029f0
   1400036ac:	mov    ecx,DWORD PTR [rax]
   1400036ae:	mov    DWORD PTR [rsp+0x80],ecx
   1400036b5:	lea    rdx,[rip+0x4354]        # 0x140007a10
   1400036bc:	lea    rcx,[rsp+0x80]
   1400036c4:	call   0x140004dac
   1400036c9:	int3   
   1400036ca:	mov    rdx,QWORD PTR [rsp+0x48]
   1400036cf:	mov    rcx,rbx
   1400036d2:	call   0x140003998
   1400036d7:	nop
   1400036d8:	mov    rcx,QWORD PTR [rsp+0x48]
   1400036dd:	call   QWORD PTR [rip+0x299d]        # 0x140006080
   1400036e3:	mov    rax,rbx
   1400036e6:	add    rsp,0x60
   1400036ea:	pop    rbx
   1400036eb:	ret    
   1400036ec:	int3   
   1400036ed:	int3   
   1400036ee:	int3   
   1400036ef:	int3   
   1400036f0:	int3   
   1400036f1:	int3   
   1400036f2:	int3   
   1400036f3:	int3   
   1400036f4:	rex push rbp
   1400036f6:	push   rbx
   1400036f7:	mov    rbp,rsp
   1400036fa:	sub    rsp,0x48
   1400036fe:	mov    QWORD PTR [rbp-0x10],0xfffffffffffffffe
   140003706:	and    QWORD PTR [rbp-0x18],0x0
   14000370b:	call   QWORD PTR [rip+0x2997]        # 0x1400060a8
   140003711:	mov    rcx,rax
   140003714:	lea    r8,[rbp-0x18]
   140003718:	mov    edx,0x8
   14000371d:	call   QWORD PTR [rip+0x2925]        # 0x140006048
   140003723:	test   eax,eax
   140003725:	jne    0x140003795
   140003727:	call   QWORD PTR [rip+0x2963]        # 0x140006090
   14000372d:	mov    ebx,eax
   14000372f:	lea    rcx,[rip+0x58ea]        # 0x140009020
   140003736:	mov    r10,QWORD PTR [rip+0x58e3]        # 0x140009020
   14000373d:	cmp    r10,rcx
   140003740:	je     0x140003768
   140003742:	test   BYTE PTR [r10+0x1c],0x1
   140003747:	je     0x140003768
   140003749:	cmp    BYTE PTR [r10+0x19],0x2
   14000374e:	jb     0x140003768
   140003750:	mov    edx,0x1c
   140003755:	mov    r9d,eax
   140003758:	lea    r8,[rip+0x2ea9]        # 0x140006608
   14000375f:	mov    rcx,QWORD PTR [r10+0x10]
   140003763:	call   0x140001208
   140003768:	movzx  edx,bx
   14000376b:	or     edx,0x80070000
   140003771:	test   ebx,ebx
   140003773:	cmovle edx,ebx
   140003776:	lea    rcx,[rbp+0x30]
   14000377a:	call   0x1400029f0
   14000377f:	mov    ecx,DWORD PTR [rax]
   140003781:	mov    DWORD PTR [rbp+0x18],ecx
   140003784:	lea    rdx,[rip+0x4285]        # 0x140007a10
   14000378b:	lea    rcx,[rbp+0x18]
   14000378f:	call   0x140004dac
   140003794:	int3   
   140003795:	lea    rax,[rbp+0x20]
   140003799:	mov    QWORD PTR [rsp+0x20],rax
   14000379e:	mov    r9d,0x4
   1400037a4:	lea    r8,[rbp+0x28]
   1400037a8:	lea    edx,[r9+0x10]
   1400037ac:	mov    rcx,QWORD PTR [rbp-0x18]
   1400037b0:	call   QWORD PTR [rip+0x289a]        # 0x140006050
   1400037b6:	test   eax,eax
   1400037b8:	jne    0x140003828
   1400037ba:	call   QWORD PTR [rip+0x28d0]        # 0x140006090
   1400037c0:	mov    ebx,eax
   1400037c2:	lea    rcx,[rip+0x5857]        # 0x140009020
   1400037c9:	mov    r10,QWORD PTR [rip+0x5850]        # 0x140009020
   1400037d0:	cmp    r10,rcx
   1400037d3:	je     0x1400037fb
   1400037d5:	test   BYTE PTR [r10+0x1c],0x1
   1400037da:	je     0x1400037fb
   1400037dc:	cmp    BYTE PTR [r10+0x19],0x2
   1400037e1:	jb     0x1400037fb
   1400037e3:	mov    edx,0x1d
   1400037e8:	mov    r9d,eax
   1400037eb:	lea    r8,[rip+0x2e16]        # 0x140006608
   1400037f2:	mov    rcx,QWORD PTR [r10+0x10]
   1400037f6:	call   0x140001208
   1400037fb:	movzx  edx,bx
   1400037fe:	or     edx,0x80070000
   140003804:	test   ebx,ebx
   140003806:	cmovle edx,ebx
   140003809:	lea    rcx,[rbp+0x30]
   14000380d:	call   0x1400029f0
   140003812:	mov    ecx,DWORD PTR [rax]
   140003814:	mov    DWORD PTR [rbp+0x18],ecx
   140003817:	lea    rdx,[rip+0x41f2]        # 0x140007a10
   14000381e:	lea    rcx,[rbp+0x18]
   140003822:	call   0x140004dac
   140003827:	int3   
   140003828:	cmp    DWORD PTR [rbp+0x20],0x4
   14000382c:	je     0x140003886
   14000382e:	lea    rcx,[rip+0x57eb]        # 0x140009020
   140003835:	mov    rax,QWORD PTR [rip+0x57e4]        # 0x140009020
   14000383c:	cmp    rax,rcx
   14000383f:	je     0x140003862
   140003841:	test   BYTE PTR [rax+0x1c],0x1
   140003845:	je     0x140003862
   140003847:	cmp    BYTE PTR [rax+0x19],0x2
   14000384b:	jb     0x140003862
   14000384d:	mov    edx,0x1e
   140003852:	lea    r8,[rip+0x2daf]        # 0x140006608
   140003859:	mov    rcx,QWORD PTR [rax+0x10]
   14000385d:	call   0x140001168
   140003862:	mov    edx,0x80004005
   140003867:	lea    rcx,[rbp+0x30]
   14000386b:	call   0x1400029f0
   140003870:	mov    ecx,DWORD PTR [rax]
   140003872:	mov    DWORD PTR [rbp+0x18],ecx
   140003875:	lea    rdx,[rip+0x4194]        # 0x140007a10
   14000387c:	lea    rcx,[rbp+0x18]
   140003880:	call   0x140004dac
   140003885:	int3   
   140003886:	mov    rcx,QWORD PTR [rbp-0x18]
   14000388a:	test   rcx,rcx
   14000388d:	je     0x14000389b
   14000388f:	call   QWORD PTR [rip+0x280b]        # 0x1400060a0
   140003895:	xor    ecx,ecx
   140003897:	mov    QWORD PTR [rbp-0x18],rcx
   14000389b:	cmp    DWORD PTR [rbp+0x28],0x0
   14000389f:	setne  bl
   1400038a2:	test   rcx,rcx
   1400038a5:	je     0x1400038ad
   1400038a7:	call   QWORD PTR [rip+0x27f3]        # 0x1400060a0
   1400038ad:	mov    al,bl
   1400038af:	add    rsp,0x48
   1400038b3:	pop    rbx
   1400038b4:	pop    rbp
   1400038b5:	ret    
   1400038b6:	int3   
   1400038b7:	int3   
   1400038b8:	int3   
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	mov    QWORD PTR [rsp+0x20],rbx
   1400038c1:	push   rdi
   1400038c2:	sub    rsp,0x20
   1400038c6:	lea    rcx,[rsp+0x30]
   1400038cb:	call   QWORD PTR [rip+0x2a2f]        # 0x140006300
   1400038d1:	xor    ebx,ebx
   1400038d3:	cmp    eax,0xc0000225
   1400038d8:	jne    0x1400038e0
   1400038da:	mov    eax,ebx
   1400038dc:	mov    BYTE PTR [rsp+0x30],bl
   1400038e0:	mov    ecx,eax
   1400038e2:	call   QWORD PTR [rip+0x2a20]        # 0x140006308
   1400038e8:	mov    edi,eax
   1400038ea:	test   eax,eax
   1400038ec:	je     0x14000390f
   1400038ee:	mov    rcx,QWORD PTR [rip+0x572b]        # 0x140009020
   1400038f5:	lea    rax,[rip+0x5724]        # 0x140009020
   1400038fc:	cmp    rcx,rax
   1400038ff:	je     0x140003939
   140003901:	test   BYTE PTR [rcx+0x1c],0x1
   140003905:	je     0x140003939
   140003907:	cmp    BYTE PTR [rcx+0x19],0x2
   14000390b:	jb     0x140003939
   14000390d:	jmp    0x140003921
   14000390f:	cmp    BYTE PTR [rsp+0x30],bl
   140003913:	mov    rbx,QWORD PTR [rsp+0x48]
   140003918:	setne  al
   14000391b:	add    rsp,0x20
   14000391f:	pop    rdi
   140003920:	ret    
   140003921:	mov    rcx,QWORD PTR [rcx+0x10]
   140003925:	lea    r8,[rip+0x2cdc]        # 0x140006608
   14000392c:	mov    edx,0x1f
   140003931:	mov    r9d,edi
   140003934:	call   0x140001208
   140003939:	movzx  edx,di
   14000393c:	lea    rcx,[rsp+0x40]
   140003941:	or     edx,0x80070000
   140003947:	test   edi,edi
   140003949:	cmovle edx,edi
   14000394c:	call   0x1400029f0
   140003951:	lea    rdx,[rip+0x40b8]        # 0x140007a10
   140003958:	mov    ecx,DWORD PTR [rax]
   14000395a:	mov    DWORD PTR [rsp+0x38],ecx
   14000395e:	lea    rcx,[rsp+0x38]
   140003963:	call   0x140004dac
   140003968:	int3   
   140003969:	int3   
   14000396a:	int3   
   14000396b:	int3   
   14000396c:	int3   
   14000396d:	int3   
   14000396e:	int3   
   14000396f:	int3   
   140003970:	sub    rsp,0x48
   140003974:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000397d:	xor    edx,edx
   14000397f:	xor    ecx,ecx
   140003981:	call   0x140004dac
   140003986:	nop
   140003987:	mov    eax,DWORD PTR [rsp+0x50]
   14000398b:	add    rsp,0x48
   14000398f:	ret    
   140003990:	int3   
   140003991:	int3   
   140003992:	int3   
   140003993:	int3   
   140003994:	int3   
   140003995:	int3   
   140003996:	int3   
   140003997:	int3   
   140003998:	mov    rax,rsp
   14000399b:	mov    QWORD PTR [rax+0x8],rcx
   14000399f:	push   rdi
   1400039a0:	push   r14
   1400039a2:	push   r15
   1400039a4:	sub    rsp,0x30
   1400039a8:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   1400039b0:	mov    QWORD PTR [rax+0x10],rbx
   1400039b4:	mov    QWORD PTR [rax+0x18],rbp
   1400039b8:	mov    QWORD PTR [rax+0x20],rsi
   1400039bc:	mov    rsi,rdx
   1400039bf:	mov    rdi,rcx
   1400039c2:	mov    rax,QWORD PTR [rip+0x565f]        # 0x140009028
   1400039c9:	mov    rbx,QWORD PTR [rax+0x18]
   1400039cd:	mov    rcx,rbx
   1400039d0:	call   QWORD PTR [rip+0x297a]        # 0x140006350
   1400039d6:	lea    rcx,[rip+0x564b]        # 0x140009028
   1400039dd:	call   rbx
   1400039df:	add    rax,0x18
   1400039e3:	mov    QWORD PTR [rdi],rax
   1400039e6:	test   rsi,rsi
   1400039e9:	je     0x140003a73
   1400039ef:	test   rsi,0xffffffffffff0000
   1400039f6:	jne    0x140003a73
   1400039f8:	movzx  ebp,si
   1400039fb:	xor    edx,edx
   1400039fd:	call   0x1400046b4
   140003a02:	mov    rbx,rax
   140003a05:	mov    r15d,0x1
   140003a0b:	mov    esi,r15d
   140003a0e:	test   rax,rax
   140003a11:	je     0x140003a5c
   140003a13:	mov    r14d,ebp
   140003a16:	shr    r14d,0x4
   140003a1a:	xor    r9d,r9d
   140003a1d:	lea    eax,[r15+r14*1]
   140003a21:	movzx  r8d,ax
   140003a25:	lea    edx,[r9+0x6]
   140003a29:	mov    rcx,rbx
   140003a2c:	call   QWORD PTR [rip+0x2696]        # 0x1400060c8
   140003a32:	test   rax,rax
   140003a35:	je     0x140003a4a
   140003a37:	mov    r8d,ebp
   140003a3a:	mov    rdx,rax
   140003a3d:	mov    rcx,rbx
   140003a40:	call   0x140003fb8
   140003a45:	test   rax,rax
   140003a48:	jne    0x140003a5e
   140003a4a:	mov    edx,esi
   140003a4c:	call   0x1400046b4
   140003a51:	mov    rbx,rax
   140003a54:	add    esi,r15d
   140003a57:	test   rax,rax
   140003a5a:	jne    0x140003a1a
   140003a5c:	xor    ebx,ebx
   140003a5e:	test   rbx,rbx
   140003a61:	je     0x140003a7f
   140003a63:	mov    r8d,ebp
   140003a66:	mov    rdx,rbx
   140003a69:	mov    rcx,rdi
   140003a6c:	call   0x140003cbc
   140003a71:	jmp    0x140003a7f
   140003a73:	mov    rdx,rsi
   140003a76:	mov    rcx,rdi
   140003a79:	call   0x1400026a4
   140003a7e:	nop
   140003a7f:	mov    rax,rdi
   140003a82:	mov    rbx,QWORD PTR [rsp+0x58]
   140003a87:	mov    rbp,QWORD PTR [rsp+0x60]
   140003a8c:	mov    rsi,QWORD PTR [rsp+0x68]
   140003a91:	add    rsp,0x30
   140003a95:	pop    r15
   140003a97:	pop    r14
   140003a99:	pop    rdi
   140003a9a:	ret    
   140003a9b:	int3   
   140003a9c:	int3   
   140003a9d:	int3   
   140003a9e:	int3   
   140003a9f:	int3   
   140003aa0:	int3   
   140003aa1:	int3   
   140003aa2:	int3   
   140003aa3:	int3   
   140003aa4:	rex push rbx
   140003aa6:	sub    rsp,0x20
   140003aaa:	mov    rbx,rcx
   140003aad:	mov    rcx,QWORD PTR [rcx]
   140003ab0:	test   rcx,rcx
   140003ab3:	je     0x140003abb
   140003ab5:	call   QWORD PTR [rip+0x280d]        # 0x1400062c8
   140003abb:	and    QWORD PTR [rbx],0x0
   140003abf:	and    QWORD PTR [rbx+0x8],0x0
   140003ac4:	and    QWORD PTR [rbx+0x10],0x0
   140003ac9:	add    rsp,0x20
   140003acd:	pop    rbx
   140003ace:	ret    
   140003acf:	int3   
   140003ad0:	int3   
   140003ad1:	int3   
   140003ad2:	int3   
   140003ad3:	int3   
   140003ad4:	int3   
   140003ad5:	int3   
   140003ad6:	int3   
   140003ad7:	int3   
   140003ad8:	sub    rsp,0x28
   140003adc:	mov    rdx,QWORD PTR [rcx+0x8]
   140003ae0:	movabs r10,0x2aaaaaaaaaaaaaab
   140003aea:	sub    rdx,QWORD PTR [rcx]
   140003aed:	mov    rax,r10
   140003af0:	imul   rdx
   140003af3:	mov    r9,rcx
   140003af6:	mov    r8,rdx
   140003af9:	sar    r8,0x2
   140003afd:	mov    rax,r8
   140003b00:	shr    rax,0x3f
   140003b04:	add    r8,rax
   140003b07:	movabs rax,0xaaaaaaaaaaaaaa9
   140003b11:	cmp    r8,rax
   140003b14:	ja     0x140003b6c
   140003b16:	mov    rcx,QWORD PTR [rcx+0x10]
   140003b1a:	mov    rax,r10
   140003b1d:	sub    rcx,QWORD PTR [r9]
   140003b20:	inc    r8
   140003b23:	imul   rcx
   140003b26:	sar    rdx,0x2
   140003b2a:	mov    rax,rdx
   140003b2d:	shr    rax,0x3f
   140003b31:	add    rdx,rax
   140003b34:	cmp    r8,rdx
   140003b37:	jbe    0x140003b67
   140003b39:	mov    rcx,rdx
   140003b3c:	movabs rax,0xaaaaaaaaaaaaaaa
   140003b46:	shr    rcx,1
   140003b49:	sub    rax,rcx
   140003b4c:	cmp    rax,rdx
   140003b4f:	jae    0x140003b55
   140003b51:	xor    edx,edx
   140003b53:	jmp    0x140003b58
   140003b55:	add    rdx,rcx
   140003b58:	cmp    rdx,r8
   140003b5b:	mov    rcx,r9
   140003b5e:	cmovb  rdx,r8
   140003b62:	call   0x140003b78
   140003b67:	add    rsp,0x28
   140003b6b:	ret    
   140003b6c:	call   0x140003c94
   140003b71:	int3   
   140003b72:	int3   
   140003b73:	int3   
   140003b74:	int3   
   140003b75:	int3   
   140003b76:	int3   
   140003b77:	int3   
   140003b78:	mov    rax,rsp
   140003b7b:	push   r14
   140003b7d:	sub    rsp,0x50
   140003b81:	mov    QWORD PTR [rax-0x28],0xfffffffffffffffe
   140003b89:	mov    QWORD PTR [rax+0x8],rbx
   140003b8d:	mov    QWORD PTR [rax+0x18],rsi
   140003b91:	mov    QWORD PTR [rax+0x20],rdi
   140003b95:	mov    rdi,rdx
   140003b98:	mov    rsi,rcx
   140003b9b:	movabs rax,0xaaaaaaaaaaaaaaa
   140003ba5:	cmp    rdx,rax
   140003ba8:	jbe    0x140003bb0
   140003baa:	call   0x140003c94
   140003baf:	int3   
   140003bb0:	mov    rcx,QWORD PTR [rcx+0x10]
   140003bb4:	sub    rcx,QWORD PTR [rsi]
   140003bb7:	movabs r14,0x2aaaaaaaaaaaaaab
   140003bc1:	mov    rax,r14
   140003bc4:	imul   rcx
   140003bc7:	sar    rdx,0x2
   140003bcb:	mov    rax,rdx
   140003bce:	shr    rax,0x3f
   140003bd2:	add    rdx,rax
   140003bd5:	cmp    rdx,rdi
   140003bd8:	jae    0x140003c77
   140003bde:	xor    ebx,ebx
   140003be0:	mov    QWORD PTR [rsp+0x68],rbx
   140003be5:	test   rdi,rdi
   140003be8:	je     0x140003c20
   140003bea:	lea    rcx,[rdi+rdi*2]
   140003bee:	shl    rcx,0x3
   140003bf2:	call   0x140004874
   140003bf7:	mov    rbx,rax
   140003bfa:	mov    QWORD PTR [rsp+0x68],rax
   140003bff:	test   rax,rax
   140003c02:	jne    0x140003c20
   140003c04:	lea    rcx,[rsp+0x38]
   140003c09:	call   0x140003f84
   140003c0e:	lea    rdx,[rip+0x3e83]        # 0x140007a98
   140003c15:	lea    rcx,[rsp+0x38]
   140003c1a:	call   0x140004dac
   140003c1f:	nop
   140003c20:	mov    r8,rbx
   140003c23:	mov    rdx,QWORD PTR [rsi+0x8]
   140003c27:	mov    rcx,QWORD PTR [rsi]
   140003c2a:	call   0x140003edc
   140003c2f:	nop
   140003c30:	mov    rcx,QWORD PTR [rsi]
   140003c33:	mov    rdx,QWORD PTR [rsi+0x8]
   140003c37:	sub    rdx,rcx
   140003c3a:	mov    rax,r14
   140003c3d:	imul   rdx
   140003c40:	mov    r14,rdx
   140003c43:	sar    r14,0x2
   140003c47:	mov    rax,r14
   140003c4a:	shr    rax,0x3f
   140003c4e:	add    r14,rax
   140003c51:	test   rcx,rcx
   140003c54:	je     0x140003c5c
   140003c56:	call   QWORD PTR [rip+0x266c]        # 0x1400062c8
   140003c5c:	lea    rax,[rdi+rdi*2]
   140003c60:	lea    rcx,[rbx+rax*8]
   140003c64:	mov    QWORD PTR [rsi+0x10],rcx
   140003c68:	lea    rax,[r14+r14*2]
   140003c6c:	lea    rcx,[rbx+rax*8]
   140003c70:	mov    QWORD PTR [rsi+0x8],rcx
   140003c74:	mov    QWORD PTR [rsi],rbx
   140003c77:	mov    rbx,QWORD PTR [rsp+0x60]
   140003c7c:	mov    rsi,QWORD PTR [rsp+0x70]
   140003c81:	mov    rdi,QWORD PTR [rsp+0x78]
   140003c86:	add    rsp,0x50
   140003c8a:	pop    r14
   140003c8c:	ret    
   140003c8d:	int3   
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	int3   
   140003c91:	int3   
   140003c92:	int3   
   140003c93:	int3   
   140003c94:	sub    rsp,0x28
   140003c98:	lea    rcx,[rip+0x2931]        # 0x1400065d0
   140003c9f:	call   0x140004808
   140003ca4:	int3   
   140003ca5:	int3   
   140003ca6:	int3   
   140003ca7:	int3   
   140003ca8:	int3   
   140003ca9:	int3   
   140003caa:	int3   
   140003cab:	int3   
   140003cac:	mov    rcx,rdx
   140003caf:	rex.W jmp QWORD PTR [rip+0x2612]        # 0x1400062c8
   140003cb6:	int3   
   140003cb7:	int3   
   140003cb8:	int3   
   140003cb9:	int3   
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	mov    rax,rsp
   140003cbf:	mov    QWORD PTR [rax+0x8],rbx
   140003cc3:	mov    QWORD PTR [rax+0x10],rbp
   140003cc7:	mov    QWORD PTR [rax+0x18],rsi
   140003ccb:	mov    QWORD PTR [rax+0x20],rdi
   140003ccf:	push   r14
   140003cd1:	sub    rsp,0x20
   140003cd5:	xor    r9d,r9d
   140003cd8:	mov    eax,r8d
   140003cdb:	mov    rsi,rdx
   140003cde:	shr    eax,0x4
   140003ce1:	mov    ebx,r8d
   140003ce4:	mov    rdi,rcx
   140003ce7:	mov    rcx,rsi
   140003cea:	lea    r14d,[r9+0x1]
   140003cee:	add    ax,r14w
   140003cf2:	lea    edx,[r9+0x6]
   140003cf6:	movzx  r8d,ax
   140003cfa:	call   QWORD PTR [rip+0x23c8]        # 0x1400060c8
   140003d00:	xor    ebp,ebp
   140003d02:	test   rax,rax
   140003d05:	je     0x140003daa
   140003d0b:	mov    r8d,ebx
   140003d0e:	mov    rdx,rax
   140003d11:	mov    rcx,rsi
   140003d14:	call   0x140003fb8
   140003d19:	mov    rsi,rax
   140003d1c:	test   rax,rax
   140003d1f:	je     0x140003daa
   140003d25:	movzx  ebx,WORD PTR [rax]
   140003d28:	mov    ecx,r14d
   140003d2b:	mov    rax,QWORD PTR [rdi]
   140003d2e:	sub    ecx,DWORD PTR [rax-0x8]
   140003d31:	mov    eax,DWORD PTR [rax-0xc]
   140003d34:	sub    eax,ebx
   140003d36:	or     ecx,eax
   140003d38:	jge    0x140003d44
   140003d3a:	mov    edx,ebx
   140003d3c:	mov    rcx,rdi
   140003d3f:	call   0x140002824
   140003d44:	movzx  ecx,WORD PTR [rsi]
   140003d47:	lea    r8,[rsi+0x2]
   140003d4b:	or     rax,0xffffffffffffffff
   140003d4f:	cmp    ecx,eax
   140003d51:	jne    0x140003d61
   140003d53:	inc    rax
   140003d56:	cmp    WORD PTR [r8+rax*2],bp
   140003d5b:	jne    0x140003d53
   140003d5d:	lea    ecx,[r14+rax*1]
   140003d61:	movsxd r9,ecx
   140003d64:	lea    rsi,[rbx+rbx*1]
   140003d68:	mov    rcx,QWORD PTR [rdi]
   140003d6b:	add    r9,r9
   140003d6e:	mov    rdx,rsi
   140003d71:	call   QWORD PTR [rip+0x2541]        # 0x1400062b8
   140003d77:	test   eax,eax
   140003d79:	je     0x140003d8f
   140003d7b:	cmp    eax,0xc
   140003d7e:	je     0x140003ddd
   140003d80:	cmp    eax,0x16
   140003d83:	je     0x140003dd2
   140003d85:	cmp    eax,0x22
   140003d88:	je     0x140003dd2
   140003d8a:	cmp    eax,0x50
   140003d8d:	jne    0x140003dc7
   140003d8f:	test   ebx,ebx
   140003d91:	js     0x140003de8
   140003d93:	mov    rcx,QWORD PTR [rdi]
   140003d96:	cmp    ebx,DWORD PTR [rcx-0xc]
   140003d99:	jg     0x140003de8
   140003d9b:	mov    DWORD PTR [rcx-0x10],ebx
   140003d9e:	mov    eax,r14d
   140003da1:	mov    rcx,QWORD PTR [rdi]
   140003da4:	mov    WORD PTR [rsi+rcx*1],bp
   140003da8:	jmp    0x140003dac
   140003daa:	xor    eax,eax
   140003dac:	mov    rbx,QWORD PTR [rsp+0x30]
   140003db1:	mov    rbp,QWORD PTR [rsp+0x38]
   140003db6:	mov    rsi,QWORD PTR [rsp+0x40]
   140003dbb:	mov    rdi,QWORD PTR [rsp+0x48]
   140003dc0:	add    rsp,0x20
   140003dc4:	pop    r14
   140003dc6:	ret    
   140003dc7:	mov    ecx,0x80004005
   140003dcc:	call   0x1400029fc
   140003dd1:	int3   
   140003dd2:	mov    ecx,0x80070057
   140003dd7:	call   0x1400029fc
   140003ddc:	int3   
   140003ddd:	mov    ecx,0x8007000e
   140003de2:	call   0x1400029fc
   140003de7:	int3   
   140003de8:	mov    ecx,0x80070057
   140003ded:	call   0x1400029fc
   140003df2:	int3   
   140003df3:	int3   
   140003df4:	int3   
   140003df5:	int3   
   140003df6:	int3   
   140003df7:	int3   
   140003df8:	int3   
   140003df9:	int3   
   140003dfa:	int3   
   140003dfb:	int3   
   140003dfc:	mov    rax,rsp
   140003dff:	mov    QWORD PTR [rax+0x10],rdx
   140003e03:	mov    QWORD PTR [rax+0x18],r8
   140003e07:	mov    QWORD PTR [rax+0x20],r9
   140003e0b:	push   rbx
   140003e0c:	push   rbp
   140003e0d:	push   rsi
   140003e0e:	push   rdi
   140003e0f:	push   r14
   140003e11:	sub    rsp,0x20
   140003e15:	xor    ebp,ebp
   140003e17:	lea    r14,[rax+0x18]
   140003e1b:	mov    rsi,rdx
   140003e1e:	mov    rdi,rcx
   140003e21:	test   rdx,rdx
   140003e24:	je     0x140003e8c
   140003e26:	mov    rdx,r14
   140003e29:	mov    rcx,rsi
   140003e2c:	call   QWORD PTR [rip+0x2446]        # 0x140006278
   140003e32:	movsxd rbx,eax
   140003e35:	cmp    ebx,0xffffffff
   140003e38:	je     0x140003e97
   140003e3a:	mov    rax,QWORD PTR [rdi]
   140003e3d:	lea    ecx,[rbp+0x1]
   140003e40:	sub    ecx,DWORD PTR [rax-0x8]
   140003e43:	mov    eax,DWORD PTR [rax-0xc]
   140003e46:	sub    eax,ebx
   140003e48:	or     ecx,eax
   140003e4a:	jge    0x140003e56
   140003e4c:	mov    edx,ebx
   140003e4e:	mov    rcx,rdi
   140003e51:	call   0x140002824
   140003e56:	mov    rcx,QWORD PTR [rdi]
   140003e59:	lea    eax,[rbx+0x1]
   140003e5c:	movsxd rdx,eax
   140003e5f:	mov    r9,r14
   140003e62:	mov    r8,rsi
   140003e65:	call   QWORD PTR [rip+0x2405]        # 0x140006270
   140003e6b:	test   ebx,ebx
   140003e6d:	js     0x140003ea2
   140003e6f:	mov    rax,QWORD PTR [rdi]
   140003e72:	cmp    ebx,DWORD PTR [rax-0xc]
   140003e75:	jg     0x140003ea2
   140003e77:	mov    DWORD PTR [rax-0x10],ebx
   140003e7a:	mov    rax,QWORD PTR [rdi]
   140003e7d:	mov    WORD PTR [rax+rbx*2],bp
   140003e81:	add    rsp,0x20
   140003e85:	pop    r14
   140003e87:	pop    rdi
   140003e88:	pop    rsi
   140003e89:	pop    rbp
   140003e8a:	pop    rbx
   140003e8b:	ret    
   140003e8c:	mov    ecx,0x80070057
   140003e91:	call   0x1400029fc
   140003e96:	int3   
   140003e97:	mov    ecx,0x8007000e
   140003e9c:	call   0x1400029fc
   140003ea1:	int3   
   140003ea2:	mov    ecx,0x80070057
   140003ea7:	call   0x1400029fc
   140003eac:	int3   
   140003ead:	int3   
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	int3   
   140003eb1:	int3   
   140003eb2:	int3   
   140003eb3:	int3   
   140003eb4:	rex push rbx
   140003eb6:	sub    rsp,0x20
   140003eba:	mov    rbx,rcx
   140003ebd:	call   QWORD PTR [rip+0x23bd]        # 0x140006280
   140003ec3:	lea    rax,[rip+0x25ae]        # 0x140006478
   140003eca:	mov    QWORD PTR [rbx],rax
   140003ecd:	mov    rax,rbx
   140003ed0:	add    rsp,0x20
   140003ed4:	pop    rbx
   140003ed5:	ret    
   140003ed6:	int3   
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	sub    rsp,0x38
   140003ee0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003ee9:	jmp    0x140003f0a
   140003eeb:	test   r8,r8
   140003eee:	je     0x140003f02
   140003ef0:	movups xmm0,XMMWORD PTR [rcx]
   140003ef3:	movups XMMWORD PTR [r8],xmm0
   140003ef7:	movsd  xmm1,QWORD PTR [rcx+0x10]
   140003efc:	movsd  QWORD PTR [r8+0x10],xmm1
   140003f02:	add    r8,0x18
   140003f06:	add    rcx,0x18
   140003f0a:	cmp    rcx,rdx
   140003f0d:	jne    0x140003eeb
   140003f0f:	mov    rax,r8
   140003f12:	add    rsp,0x38
   140003f16:	ret    
   140003f17:	int3   
   140003f18:	int3   
   140003f19:	int3   
   140003f1a:	int3   
   140003f1b:	int3   
   140003f1c:	int3   
   140003f1d:	int3   
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	lea    rax,[rip+0x2551]        # 0x140006478
   140003f27:	mov    QWORD PTR [rcx],rax
   140003f2a:	rex.W jmp QWORD PTR [rip+0x235f]        # 0x140006290
   140003f31:	int3   
   140003f32:	int3   
   140003f33:	int3   
   140003f34:	int3   
   140003f35:	int3   
   140003f36:	int3   
   140003f37:	int3   
   140003f38:	int3   
   140003f39:	int3   
   140003f3a:	int3   
   140003f3b:	int3   
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	mov    QWORD PTR [rsp+0x8],rbx
   140003f45:	push   rdi
   140003f46:	sub    rsp,0x20
   140003f4a:	lea    rax,[rip+0x2527]        # 0x140006478
   140003f51:	mov    ebx,edx
   140003f53:	mov    QWORD PTR [rcx],rax
   140003f56:	mov    rdi,rcx
   140003f59:	call   QWORD PTR [rip+0x2331]        # 0x140006290
   140003f5f:	test   bl,0x1
   140003f62:	je     0x140003f6d
   140003f64:	mov    rcx,rdi
   140003f67:	call   QWORD PTR [rip+0x235b]        # 0x1400062c8
   140003f6d:	mov    rax,rdi
   140003f70:	mov    rbx,QWORD PTR [rsp+0x30]
   140003f75:	add    rsp,0x20
   140003f79:	pop    rdi
   140003f7a:	ret    
   140003f7b:	int3   
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	int3   
   140003f81:	int3   
   140003f82:	int3   
   140003f83:	int3   
   140003f84:	rex push rbx
   140003f86:	sub    rsp,0x30
   140003f8a:	and    QWORD PTR [rsp+0x20],0x0
   140003f90:	lea    rdx,[rsp+0x20]
   140003f95:	mov    rbx,rcx
   140003f98:	call   QWORD PTR [rip+0x22ea]        # 0x140006288
   140003f9e:	lea    rax,[rip+0x24d3]        # 0x140006478
   140003fa5:	mov    QWORD PTR [rbx],rax
   140003fa8:	mov    rax,rbx
   140003fab:	add    rsp,0x30
   140003faf:	pop    rbx
   140003fb0:	ret    
   140003fb1:	int3   
   140003fb2:	int3   
   140003fb3:	int3   
   140003fb4:	int3   
   140003fb5:	int3   
   140003fb6:	int3   
   140003fb7:	int3   
   140003fb8:	mov    QWORD PTR [rsp+0x8],rbx
   140003fbd:	mov    QWORD PTR [rsp+0x10],rbp
   140003fc2:	mov    QWORD PTR [rsp+0x18],rsi
   140003fc7:	push   rdi
   140003fc8:	sub    rsp,0x20
   140003fcc:	mov    edi,r8d
   140003fcf:	mov    rsi,rdx
   140003fd2:	mov    rbp,rcx
   140003fd5:	call   QWORD PTR [rip+0x20e5]        # 0x1400060c0
   140003fdb:	test   rax,rax
   140003fde:	jne    0x140003fe4
   140003fe0:	xor    eax,eax
   140003fe2:	jmp    0x140004031
   140003fe4:	mov    rcx,rax
   140003fe7:	call   QWORD PTR [rip+0x20cb]        # 0x1400060b8
   140003fed:	mov    rbx,rax
   140003ff0:	test   rax,rax
   140003ff3:	je     0x140003fe0
   140003ff5:	mov    rdx,rsi
   140003ff8:	mov    rcx,rbp
   140003ffb:	call   QWORD PTR [rip+0x20af]        # 0x1400060b0
   140004001:	mov    ecx,eax
   140004003:	add    rcx,rbx
   140004006:	and    edi,0xf
   140004009:	jbe    0x140004020
   14000400b:	cmp    rbx,rcx
   14000400e:	jae    0x140003fe0
   140004010:	movzx  eax,WORD PTR [rbx]
   140004013:	lea    rbx,[rbx+rax*2]
   140004017:	add    rbx,0x2
   14000401b:	add    edi,0xffffffff
   14000401e:	jne    0x14000400b
   140004020:	cmp    rbx,rcx
   140004023:	jae    0x140003fe0
   140004025:	movzx  eax,WORD PTR [rbx]
   140004028:	neg    ax
   14000402b:	sbb    rax,rax
   14000402e:	and    rax,rbx
   140004031:	mov    rbx,QWORD PTR [rsp+0x30]
   140004036:	mov    rbp,QWORD PTR [rsp+0x38]
   14000403b:	mov    rsi,QWORD PTR [rsp+0x40]
   140004040:	add    rsp,0x20
   140004044:	pop    rdi
   140004045:	ret    
   140004046:	int3   
   140004047:	int3   
   140004048:	int3   
   140004049:	int3   
   14000404a:	int3   
   14000404b:	int3   
   14000404c:	rex push rbx
   14000404e:	sub    rsp,0x20
   140004052:	mov    rbx,rcx
   140004055:	mov    rcx,QWORD PTR [rcx]
   140004058:	test   rcx,rcx
   14000405b:	je     0x140004067
   14000405d:	call   QWORD PTR [rip+0x203d]        # 0x1400060a0
   140004063:	and    QWORD PTR [rbx],0x0
   140004067:	add    rsp,0x20
   14000406b:	pop    rbx
   14000406c:	ret    
   14000406d:	int3   
   14000406e:	int3   
   14000406f:	int3   
   140004070:	int3   
   140004071:	int3   
   140004072:	int3   
   140004073:	int3   
   140004074:	sub    rsp,0x28
   140004078:	mov    rdx,rcx
   14000407b:	lea    rcx,[rip+0x2596]        # 0x140006618
   140004082:	call   QWORD PTR [rip+0x21e0]        # 0x140006268
   140004088:	test   eax,eax
   14000408a:	jg     0x1400040ad
   14000408c:	mov    rcx,QWORD PTR [rip+0x4f8d]        # 0x140009020
   140004093:	lea    rax,[rip+0x4f86]        # 0x140009020
   14000409a:	cmp    rcx,rax
   14000409d:	je     0x1400040c7
   14000409f:	test   BYTE PTR [rcx+0x1c],0x1
   1400040a3:	je     0x1400040c7
   1400040a5:	cmp    BYTE PTR [rcx+0x19],0x2
   1400040a9:	jb     0x1400040c7
   1400040ab:	jmp    0x1400040b2
   1400040ad:	add    rsp,0x28
   1400040b1:	ret    
   1400040b2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400040b6:	lea    r8,[rip+0x256b]        # 0x140006628
   1400040bd:	mov    edx,0xa
   1400040c2:	call   0x140001168
   1400040c7:	mov    edx,0x80004005
   1400040cc:	lea    rcx,[rsp+0x40]
   1400040d1:	call   0x1400029f0
   1400040d6:	lea    rdx,[rip+0x3933]        # 0x140007a10
   1400040dd:	mov    ecx,DWORD PTR [rax]
   1400040df:	mov    DWORD PTR [rsp+0x38],ecx
   1400040e3:	lea    rcx,[rsp+0x38]
   1400040e8:	call   0x140004dac
   1400040ed:	int3   
   1400040ee:	int3   
   1400040ef:	int3   
   1400040f0:	int3   
   1400040f1:	int3   
   1400040f2:	int3   
   1400040f3:	int3   
   1400040f4:	rex push rbp
   1400040f6:	push   rbx
   1400040f7:	push   rsi
   1400040f8:	push   rdi
   1400040f9:	push   r12
   1400040fb:	mov    rbp,rsp
   1400040fe:	sub    rsp,0x50
   140004102:	mov    QWORD PTR [rbp-0x20],0xfffffffffffffffe
   14000410a:	lea    r12,[rip+0x4f0f]        # 0x140009020
   140004111:	mov    rcx,QWORD PTR [rip+0x4f08]        # 0x140009020
   140004118:	cmp    rcx,r12
   14000411b:	je     0x14000413e
   14000411d:	test   BYTE PTR [rcx+0x1c],0x1
   140004121:	je     0x14000413e
   140004123:	cmp    BYTE PTR [rcx+0x19],0x5
   140004127:	jb     0x14000413e
   140004129:	mov    edx,0xa
   14000412e:	lea    r8,[rip+0x259b]        # 0x1400066d0
   140004135:	mov    rcx,QWORD PTR [rcx+0x10]
   140004139:	call   0x140001168
   14000413e:	xor    esi,esi
   140004140:	xor    edi,edi
   140004142:	mov    QWORD PTR [rbp-0x18],rdi
   140004146:	and    QWORD PTR [rbp-0x10],rsi
   14000414a:	and    QWORD PTR [rbp-0x8],rsi
   14000414e:	and    QWORD PTR [rbp+0x30],rdi
   140004152:	lea    rax,[rbp+0x30]
   140004156:	mov    QWORD PTR [rsp+0x20],rax
   14000415b:	mov    r9d,0x20019
   140004161:	xor    r8d,r8d
   140004164:	lea    rdx,[rip+0x24d5]        # 0x140006640
   14000416b:	mov    rcx,0xffffffff80000002
   140004172:	call   QWORD PTR [rip+0x1ee8]        # 0x140006060
   140004178:	mov    ebx,eax
   14000417a:	test   eax,eax
   14000417c:	jne    0x140004186
   14000417e:	mov    rdi,QWORD PTR [rbp+0x30]
   140004182:	mov    QWORD PTR [rbp-0x18],rdi
   140004186:	cmp    ebx,0x2
   140004189:	je     0x1400042a3
   14000418f:	test   ebx,ebx
   140004191:	je     0x1400041f0
   140004193:	mov    rcx,QWORD PTR [rip+0x4e86]        # 0x140009020
   14000419a:	cmp    rcx,r12
   14000419d:	je     0x1400041c3
   14000419f:	test   BYTE PTR [rcx+0x1c],0x1
   1400041a3:	je     0x1400041c3
   1400041a5:	cmp    BYTE PTR [rcx+0x19],0x2
   1400041a9:	jb     0x1400041c3
   1400041ab:	mov    edx,0xb
   1400041b0:	mov    r9d,ebx
   1400041b3:	lea    r8,[rip+0x2516]        # 0x1400066d0
   1400041ba:	mov    rcx,QWORD PTR [rcx+0x10]
   1400041be:	call   0x140001208
   1400041c3:	movzx  edx,bx
   1400041c6:	or     edx,0x80070000
   1400041cc:	test   ebx,ebx
   1400041ce:	cmovle edx,ebx
   1400041d1:	lea    rcx,[rbp+0x38]
   1400041d5:	call   0x1400029f0
   1400041da:	mov    ecx,DWORD PTR [rax]
   1400041dc:	mov    DWORD PTR [rbp+0x30],ecx
   1400041df:	lea    rdx,[rip+0x382a]        # 0x140007a10
   1400041e6:	lea    rcx,[rbp+0x30]
   1400041ea:	call   0x140004dac
   1400041ef:	int3   
   1400041f0:	mov    DWORD PTR [rbp+0x30],0x4
   1400041f7:	lea    rax,[rbp+0x30]
   1400041fb:	mov    QWORD PTR [rsp+0x28],rax
   140004200:	lea    rax,[rbp+0x40]
   140004204:	mov    QWORD PTR [rsp+0x20],rax
   140004209:	lea    r9,[rbp+0x38]
   14000420d:	xor    r8d,r8d
   140004210:	lea    rdx,[rip+0x2491]        # 0x1400066a8
   140004217:	mov    rcx,rdi
   14000421a:	call   QWORD PTR [rip+0x1e48]        # 0x140006068
   140004220:	mov    ebx,eax
   140004222:	test   eax,eax
   140004224:	jne    0x140004233
   140004226:	cmp    DWORD PTR [rbp+0x38],0x4
   14000422a:	je     0x140004231
   14000422c:	lea    ebx,[rax+0xd]
   14000422f:	jmp    0x14000423c
   140004231:	xor    ebx,ebx
   140004233:	cmp    ebx,0x2
   140004236:	je     0x1400042a3
   140004238:	test   ebx,ebx
   14000423a:	je     0x140004299
   14000423c:	mov    rcx,QWORD PTR [rip+0x4ddd]        # 0x140009020
   140004243:	cmp    rcx,r12
   140004246:	je     0x14000426c
   140004248:	test   BYTE PTR [rcx+0x1c],0x1
   14000424c:	je     0x14000426c
   14000424e:	cmp    BYTE PTR [rcx+0x19],0x2
   140004252:	jb     0x14000426c
   140004254:	mov    edx,0xc
   140004259:	mov    r9d,ebx
   14000425c:	lea    r8,[rip+0x246d]        # 0x1400066d0
   140004263:	mov    rcx,QWORD PTR [rcx+0x10]
   140004267:	call   0x140001208
   14000426c:	movzx  edx,bx
   14000426f:	or     edx,0x80070000
   140004275:	test   ebx,ebx
   140004277:	cmovle edx,ebx
   14000427a:	lea    rcx,[rbp+0x38]
   14000427e:	call   0x1400029f0
   140004283:	mov    ecx,DWORD PTR [rax]
   140004285:	mov    DWORD PTR [rbp+0x30],ecx
   140004288:	lea    rdx,[rip+0x3781]        # 0x140007a10
   14000428f:	lea    rcx,[rbp+0x30]
   140004293:	call   0x140004dac
   140004298:	int3   
   140004299:	mov    eax,DWORD PTR [rbp+0x40]
   14000429c:	neg    eax
   14000429e:	sbb    esi,esi
   1400042a0:	add    esi,0x2
   1400042a3:	mov    rcx,QWORD PTR [rip+0x4d76]        # 0x140009020
   1400042aa:	cmp    rcx,r12
   1400042ad:	je     0x1400042d1
   1400042af:	test   BYTE PTR [rcx+0x1c],0x1
   1400042b3:	je     0x1400042d1
   1400042b5:	cmp    BYTE PTR [rcx+0x19],0x5
   1400042b9:	jb     0x1400042d1
   1400042bb:	mov    edx,0xd
   1400042c0:	lea    r8,[rip+0x2409]        # 0x1400066d0
   1400042c7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400042cb:	call   0x140001168
   1400042d0:	nop
   1400042d1:	test   rdi,rdi
   1400042d4:	je     0x1400042df
   1400042d6:	mov    rcx,rdi
   1400042d9:	call   QWORD PTR [rip+0x1d79]        # 0x140006058
   1400042df:	mov    eax,esi
   1400042e1:	add    rsp,0x50
   1400042e5:	pop    r12
   1400042e7:	pop    rdi
   1400042e8:	pop    rsi
   1400042e9:	pop    rbx
   1400042ea:	pop    rbp
   1400042eb:	ret    
   1400042ec:	int3   
   1400042ed:	int3   
   1400042ee:	int3   
   1400042ef:	int3   
   1400042f0:	int3   
   1400042f1:	int3   
   1400042f2:	int3   
   1400042f3:	int3   
   1400042f4:	mov    rax,rsp
   1400042f7:	mov    QWORD PTR [rax+0x8],rcx
   1400042fb:	push   rdi
   1400042fc:	sub    rsp,0x40
   140004300:	mov    QWORD PTR [rax-0x10],0xfffffffffffffffe
   140004308:	mov    QWORD PTR [rax+0x20],rbx
   14000430c:	mov    rbx,rcx
   14000430f:	and    DWORD PTR [rax-0x18],0x0
   140004313:	and    QWORD PTR [rcx],0x0
   140004317:	mov    DWORD PTR [rax-0x18],0x1
   14000431e:	mov    QWORD PTR [rax-0x28],rcx
   140004322:	lea    r9,[rip+0x2397]        # 0x1400066c0
   140004329:	xor    edx,edx
   14000432b:	lea    r8d,[rdx+0x1]
   14000432f:	lea    rcx,[rip+0x23aa]        # 0x1400066e0
   140004336:	call   QWORD PTR [rip+0x1fec]        # 0x140006328
   14000433c:	mov    edi,eax
   14000433e:	test   eax,eax
   140004340:	jns    0x14000439d
   140004342:	lea    rax,[rip+0x4cd7]        # 0x140009020
   140004349:	mov    rcx,QWORD PTR [rip+0x4cd0]        # 0x140009020
   140004350:	cmp    rcx,rax
   140004353:	je     0x140004379
   140004355:	test   BYTE PTR [rcx+0x1c],0x1
   140004359:	je     0x140004379
   14000435b:	cmp    BYTE PTR [rcx+0x19],0x2
   14000435f:	jb     0x140004379
   140004361:	mov    edx,0xe
   140004366:	mov    r9d,edi
   140004369:	lea    r8,[rip+0x2360]        # 0x1400066d0
   140004370:	mov    rcx,QWORD PTR [rcx+0x10]
   140004374:	call   0x140001208
   140004379:	mov    edx,edi
   14000437b:	lea    rcx,[rsp+0x60]
   140004380:	call   0x1400029f0
   140004385:	mov    ecx,DWORD PTR [rax]
   140004387:	mov    DWORD PTR [rsp+0x58],ecx
   14000438b:	lea    rdx,[rip+0x367e]        # 0x140007a10
   140004392:	lea    rcx,[rsp+0x58]
   140004397:	call   0x140004dac
   14000439c:	int3   
   14000439d:	mov    rax,rbx
   1400043a0:	mov    rbx,QWORD PTR [rsp+0x68]
   1400043a5:	add    rsp,0x40
   1400043a9:	pop    rdi
   1400043aa:	ret    
   1400043ab:	int3   
   1400043ac:	int3   
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	int3   
   1400043b1:	int3   
   1400043b2:	int3   
   1400043b3:	int3   
   1400043b4:	rex push rbx
   1400043b6:	sub    rsp,0x20
   1400043ba:	mov    rbx,rcx
   1400043bd:	mov    rcx,QWORD PTR [rcx]
   1400043c0:	test   rcx,rcx
   1400043c3:	je     0x1400043cf
   1400043c5:	call   QWORD PTR [rip+0x1c8d]        # 0x140006058
   1400043cb:	and    QWORD PTR [rbx],0x0
   1400043cf:	add    rsp,0x20
   1400043d3:	pop    rbx
   1400043d4:	ret    
   1400043d5:	int3   
   1400043d6:	int3   
   1400043d7:	int3   
   1400043d8:	int3   
   1400043d9:	int3   
   1400043da:	int3   
   1400043db:	int3   
   1400043dc:	int3   
   1400043dd:	int3   
   1400043de:	int3   
   1400043df:	int3   
   1400043e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400043e5:	push   rdi
   1400043e6:	sub    rsp,0x20
   1400043ea:	mov    rdi,rcx
   1400043ed:	test   edx,edx
   1400043ef:	js     0x140004465
   1400043f1:	mov    eax,0x7fffffff
   1400043f6:	sub    eax,edx
   1400043f8:	cmp    eax,0x1
   1400043fb:	jl     0x140004465
   1400043fd:	inc    edx
   1400043ff:	lea    ebx,[rdx+0x7]
   140004402:	and    ebx,0xfffffff8
   140004405:	cmp    edx,ebx
   140004407:	jg     0x140004465
   140004409:	movsxd rcx,r8d
   14000440c:	movsxd r8,ebx
   14000440f:	test   ebx,ebx
   140004411:	jne    0x140004418
   140004413:	xor    r8d,r8d
   140004416:	jmp    0x140004430
   140004418:	xor    edx,edx
   14000441a:	or     rax,0xffffffffffffffff
   14000441e:	div    r8
   140004421:	cmp    rax,rcx
   140004424:	jb     0x140004465
   140004426:	imul   r8,rcx
   14000442a:	cmp    r8,0xffffffffffffffe7
   14000442e:	ja     0x140004465
   140004430:	mov    rcx,QWORD PTR [rdi+0x8]
   140004434:	add    r8,0x18
   140004438:	xor    edx,edx
   14000443a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000443e:	call   QWORD PTR [rip+0x1cd4]        # 0x140006118
   140004444:	mov    rcx,rax
   140004447:	test   rax,rax
   14000444a:	je     0x140004465
   14000444c:	and    DWORD PTR [rcx+0x8],0x0
   140004450:	mov    QWORD PTR [rax],rdi
   140004453:	mov    DWORD PTR [rax+0x10],0x1
   14000445a:	lea    eax,[rbx-0x1]
   14000445d:	mov    DWORD PTR [rcx+0xc],eax
   140004460:	mov    rax,rcx
   140004463:	jmp    0x140004467
   140004465:	xor    eax,eax
   140004467:	mov    rbx,QWORD PTR [rsp+0x30]
   14000446c:	add    rsp,0x20
   140004470:	pop    rdi
   140004471:	ret    
   140004472:	int3   
   140004473:	int3   
   140004474:	int3   
   140004475:	int3   
   140004476:	int3   
   140004477:	int3   
   140004478:	int3   
   140004479:	int3   
   14000447a:	int3   
   14000447b:	int3   
   14000447c:	int3   
   14000447d:	int3   
   14000447e:	int3   
   14000447f:	int3   
   140004480:	sub    rsp,0x28
   140004484:	test   rdx,rdx
   140004487:	je     0x14000449c
   140004489:	mov    rcx,QWORD PTR [rcx+0x8]
   14000448d:	mov    r8,rdx
   140004490:	xor    edx,edx
   140004492:	mov    rcx,QWORD PTR [rcx+0x8]
   140004496:	call   QWORD PTR [rip+0x1c84]        # 0x140006120
   14000449c:	add    rsp,0x28
   1400044a0:	ret    
   1400044a1:	int3   
   1400044a2:	int3   
   1400044a3:	int3   
   1400044a4:	int3   
   1400044a5:	int3   
   1400044a6:	int3   
   1400044a7:	int3   
   1400044a8:	int3   
   1400044a9:	int3   
   1400044aa:	int3   
   1400044ab:	int3   
   1400044ac:	int3   
   1400044ad:	int3   
   1400044ae:	int3   
   1400044af:	int3   
   1400044b0:	rex push rbx
   1400044b2:	sub    rsp,0x20
   1400044b6:	mov    r10,rcx
   1400044b9:	test   r8d,r8d
   1400044bc:	js     0x14000451f
   1400044be:	mov    eax,0x7fffffff
   1400044c3:	sub    eax,r8d
   1400044c6:	cmp    eax,0x1
   1400044c9:	jl     0x14000451f
   1400044cb:	inc    r8d
   1400044ce:	lea    ebx,[r8+0x7]
   1400044d2:	and    ebx,0xfffffff8
   1400044d5:	cmp    r8d,ebx
   1400044d8:	jg     0x14000451f
   1400044da:	mov    eax,r9d
   1400044dd:	mov    ecx,ebx
   1400044df:	imul   rcx,rax
   1400044e3:	mov    eax,0xffffffff
   1400044e8:	cmp    rcx,rax
   1400044eb:	ja     0x14000451f
   1400044ed:	cmp    ecx,0xffffffe7
   1400044f0:	ja     0x14000451f
   1400044f2:	lea    eax,[rcx+0x18]
   1400044f5:	mov    rcx,QWORD PTR [r10+0x8]
   1400044f9:	mov    r9d,eax
   1400044fc:	mov    rcx,QWORD PTR [rcx+0x8]
   140004500:	test   rdx,rdx
   140004503:	jne    0x140004510
   140004505:	mov    r8d,r9d
   140004508:	call   QWORD PTR [rip+0x1c0a]        # 0x140006118
   14000450e:	jmp    0x14000452d
   140004510:	mov    r8,rdx
   140004513:	xor    edx,edx
   140004515:	test   eax,eax
   140004517:	jne    0x140004527
   140004519:	call   QWORD PTR [rip+0x1c01]        # 0x140006120
   14000451f:	xor    eax,eax
   140004521:	add    rsp,0x20
   140004525:	pop    rbx
   140004526:	ret    
   140004527:	call   QWORD PTR [rip+0x1bfb]        # 0x140006128
   14000452d:	mov    rcx,rax
   140004530:	test   rax,rax
   140004533:	je     0x14000451f
   140004535:	lea    eax,[rbx-0x1]
   140004538:	mov    DWORD PTR [rcx+0xc],eax
   14000453b:	mov    rax,rcx
   14000453e:	jmp    0x140004521
   140004540:	int3   
   140004541:	int3   
   140004542:	int3   
   140004543:	int3   
   140004544:	int3   
   140004545:	int3   
   140004546:	int3   
   140004547:	int3   
   140004548:	int3   
   140004549:	int3   
   14000454a:	int3   
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	lock inc DWORD PTR [rcx+0x20]
   140004554:	lea    rax,[rcx+0x10]
   140004558:	ret    
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	mov    rax,rcx
   140004563:	ret    
   140004564:	int3   
   140004565:	int3   
   140004566:	int3   
   140004567:	int3   
   140004568:	int3   
   140004569:	int3   
   14000456a:	int3   
   14000456b:	int3   
   14000456c:	int3   
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	rex push rbx
   140004572:	sub    rsp,0x20
   140004576:	lea    rax,[rip+0x1f0b]        # 0x140006488
   14000457d:	mov    rbx,rcx
   140004580:	mov    QWORD PTR [rcx],rax
   140004583:	test   dl,0x1
   140004586:	je     0x14000458e
   140004588:	call   QWORD PTR [rip+0x1d3a]        # 0x1400062c8
   14000458e:	mov    rax,rbx
   140004591:	add    rsp,0x20
   140004595:	pop    rbx
   140004596:	ret    
   140004597:	int3   
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400045a4:	mov    r8,rdx
   1400045a7:	xor    edx,edx
   1400045a9:	rex.W jmp QWORD PTR [rip+0x1b68]        # 0x140006118
   1400045b0:	int3   
   1400045b1:	int3   
   1400045b2:	int3   
   1400045b3:	int3   
   1400045b4:	int3   
   1400045b5:	int3   
   1400045b6:	int3   
   1400045b7:	int3   
   1400045b8:	int3   
   1400045b9:	int3   
   1400045ba:	int3   
   1400045bb:	int3   
   1400045bc:	int3   
   1400045bd:	int3   
   1400045be:	int3   
   1400045bf:	int3   
   1400045c0:	sub    rsp,0x28
   1400045c4:	test   rdx,rdx
   1400045c7:	je     0x1400045d8
   1400045c9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400045cd:	mov    r8,rdx
   1400045d0:	xor    edx,edx
   1400045d2:	call   QWORD PTR [rip+0x1b48]        # 0x140006120
   1400045d8:	add    rsp,0x28
   1400045dc:	ret    
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	int3   
   1400045e1:	int3   
   1400045e2:	int3   
   1400045e3:	int3   
   1400045e4:	int3   
   1400045e5:	int3   
   1400045e6:	int3   
   1400045e7:	int3   
   1400045e8:	int3   
   1400045e9:	int3   
   1400045ea:	int3   
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	sub    rsp,0x28
   1400045f4:	mov    rcx,QWORD PTR [rcx+0x8]
   1400045f8:	test   rdx,rdx
   1400045fb:	jne    0x140004608
   1400045fd:	add    rsp,0x28
   140004601:	rex.W jmp QWORD PTR [rip+0x1b10]        # 0x140006118
   140004608:	test   r8,r8
   14000460b:	jne    0x14000461f
   14000460d:	mov    r8,rdx
   140004610:	xor    edx,edx
   140004612:	call   QWORD PTR [rip+0x1b08]        # 0x140006120
   140004618:	xor    eax,eax
   14000461a:	add    rsp,0x28
   14000461e:	ret    
   14000461f:	mov    r9,r8
   140004622:	mov    r8,rdx
   140004625:	xor    edx,edx
   140004627:	add    rsp,0x28
   14000462b:	rex.W jmp QWORD PTR [rip+0x1af6]        # 0x140006128
   140004632:	int3   
   140004633:	int3   
   140004634:	int3   
   140004635:	int3   
   140004636:	int3   
   140004637:	int3   
   140004638:	int3   
   140004639:	int3   
   14000463a:	int3   
   14000463b:	int3   
   14000463c:	int3   
   14000463d:	int3   
   14000463e:	int3   
   14000463f:	int3   
   140004640:	mov    rcx,QWORD PTR [rcx+0x8]
   140004644:	mov    r8,rdx
   140004647:	xor    edx,edx
   140004649:	rex.W jmp QWORD PTR [rip+0x1ae0]        # 0x140006130
   140004650:	int3   
   140004651:	int3   
   140004652:	int3   
   140004653:	int3   
   140004654:	int3   
   140004655:	int3   
   140004656:	int3   
   140004657:	int3   
   140004658:	int3   
   140004659:	int3   
   14000465a:	int3   
   14000465b:	int3   
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	mov    QWORD PTR [rsp+0x8],rbx
   140004665:	push   rdi
   140004666:	sub    rsp,0x20
   14000466a:	cmp    BYTE PTR [rcx+0x10],0x0
   14000466e:	lea    rax,[rip+0x1e43]        # 0x1400064b8
   140004675:	mov    QWORD PTR [rcx],rax
   140004678:	mov    edi,edx
   14000467a:	mov    rbx,rcx
   14000467d:	je     0x14000468e
   14000467f:	mov    rcx,QWORD PTR [rcx+0x8]
   140004683:	test   rcx,rcx
   140004686:	je     0x14000468e
   140004688:	call   QWORD PTR [rip+0x1a7a]        # 0x140006108
   14000468e:	test   dil,0x1
   140004692:	je     0x14000469d
   140004694:	mov    rcx,rbx
   140004697:	call   QWORD PTR [rip+0x1c2b]        # 0x1400062c8
   14000469d:	mov    rax,rbx
   1400046a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046a5:	add    rsp,0x20
   1400046a9:	pop    rdi
   1400046aa:	ret    
   1400046ab:	int3   
   1400046ac:	int3   
   1400046ad:	int3   
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	int3   
   1400046b1:	int3   
   1400046b2:	int3   
   1400046b3:	int3   
   1400046b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400046b9:	push   rdi
   1400046ba:	sub    rsp,0x20
   1400046be:	lea    rcx,[rip+0x50e3]        # 0x1400097a8
   1400046c5:	movsxd rbx,edx
   1400046c8:	call   QWORD PTR [rip+0x1a1a]        # 0x1400060e8
   1400046ce:	mov    eax,DWORD PTR [rip+0x5104]        # 0x1400097d8
   1400046d4:	xor    edi,edi
   1400046d6:	cmp    ebx,eax
   1400046d8:	jg     0x1400046e9
   1400046da:	test   ebx,ebx
   1400046dc:	js     0x1400046e9
   1400046de:	cmp    ebx,eax
   1400046e0:	jne    0x140004704
   1400046e2:	mov    rdi,QWORD PTR [rip+0x50a7]        # 0x140009790
   1400046e9:	lea    rcx,[rip+0x50b8]        # 0x1400097a8
   1400046f0:	call   QWORD PTR [rip+0x19ea]        # 0x1400060e0
   1400046f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400046fb:	mov    rax,rdi
   1400046fe:	add    rsp,0x20
   140004702:	pop    rdi
   140004703:	ret    
   140004704:	jge    0x140004713
   140004706:	mov    rax,QWORD PTR [rip+0x50c3]        # 0x1400097d0
   14000470d:	mov    rdi,QWORD PTR [rax+rbx*8]
   140004711:	jmp    0x1400046e9
   140004713:	call   0x140004720
   140004718:	int3   
   140004719:	int3   
   14000471a:	int3   
   14000471b:	int3   
   14000471c:	int3   
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	xor    r9d,r9d
   140004723:	xor    r8d,r8d
   140004726:	mov    ecx,0xc000008c
   14000472b:	lea    edx,[r9+0x1]
   14000472f:	rex.W jmp QWORD PTR [rip+0x19ba]        # 0x1400060f0
   140004736:	int3   
   140004737:	int3   
   140004738:	int3   
   140004739:	int3   
   14000473a:	int3   
   14000473b:	int3   
   14000473c:	sub    rsp,0x38
   140004740:	call   QWORD PTR [rip+0x19ba]        # 0x140006100
   140004746:	xor    eax,eax
   140004748:	mov    DWORD PTR [rsp+0x20],eax
   14000474c:	jmp    0x140004757
   14000474e:	mov    eax,0x8007000e
   140004753:	mov    DWORD PTR [rsp+0x20],eax
   140004757:	add    rsp,0x38
   14000475b:	ret    
   14000475c:	int3   
   14000475d:	int3   
   14000475e:	int3   
   14000475f:	int3   
   140004760:	int3   
   140004761:	int3   
   140004762:	int3   
   140004763:	int3   
   140004764:	rex push rbx
   140004766:	sub    rsp,0x20
   14000476a:	mov    rbx,rcx
   14000476d:	call   0x140004d94
   140004772:	lea    rax,[rip+0x1cc7]        # 0x140006440
   140004779:	mov    QWORD PTR [rbx],rax
   14000477c:	mov    rax,rbx
   14000477f:	add    rsp,0x20
   140004783:	pop    rbx
   140004784:	ret    
   140004785:	int3   
   140004786:	int3   
   140004787:	int3   
   140004788:	int3   
   140004789:	int3   
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	mov    QWORD PTR [rsp+0x8],rcx
   140004791:	push   rbx
   140004792:	sub    rsp,0x20
   140004796:	mov    QWORD PTR [rsp+0x30],rdx
   14000479b:	mov    rbx,rcx
   14000479e:	lea    rdx,[rsp+0x30]
   1400047a3:	call   0x140004d88
   1400047a8:	lea    rax,[rip+0x1c91]        # 0x140006440
   1400047af:	mov    QWORD PTR [rbx],rax
   1400047b2:	mov    rax,rbx
   1400047b5:	add    rsp,0x20
   1400047b9:	pop    rbx
   1400047ba:	ret    
   1400047bb:	int3   
   1400047bc:	int3   
   1400047bd:	int3   
   1400047be:	int3   
   1400047bf:	int3   
   1400047c0:	int3   
   1400047c1:	int3   
   1400047c2:	int3   
   1400047c3:	int3   
   1400047c4:	jmp    0x140004d7c
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	int3   
   1400047cd:	int3   
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400047d5:	push   rdi
   1400047d6:	sub    rsp,0x20
   1400047da:	mov    ebx,edx
   1400047dc:	mov    rdi,rcx
   1400047df:	call   0x140004d7c
   1400047e4:	test   bl,0x1
   1400047e7:	je     0x1400047f1
   1400047e9:	mov    rcx,rdi
   1400047ec:	call   0x140004c28
   1400047f1:	mov    rax,rdi
   1400047f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400047f9:	add    rsp,0x20
   1400047fd:	pop    rdi
   1400047fe:	ret    
   1400047ff:	int3   
   140004800:	int3   
   140004801:	int3   
   140004802:	int3   
   140004803:	int3   
   140004804:	int3   
   140004805:	int3   
   140004806:	int3   
   140004807:	int3   
   140004808:	sub    rsp,0x48
   14000480c:	mov    rdx,rcx
   14000480f:	lea    rcx,[rsp+0x20]
   140004814:	call   0x14000478c
   140004819:	lea    rdx,[rip+0x30f8]        # 0x140007918
   140004820:	lea    rcx,[rsp+0x20]
   140004825:	call   0x140004dac
   14000482a:	int3   
   14000482b:	int3   
   14000482c:	int3   
   14000482d:	int3   
   14000482e:	int3   
   14000482f:	int3   
   140004830:	int3   
   140004831:	int3   
   140004832:	int3   
   140004833:	int3   
   140004834:	rex push rbx
   140004836:	sub    rsp,0x20
   14000483a:	lea    rax,[rip+0x1c0f]        # 0x140006450
   140004841:	mov    r8d,0x1
   140004847:	lea    rdx,[rsp+0x30]
   14000484c:	mov    QWORD PTR [rsp+0x30],rax
   140004851:	mov    rbx,rcx
   140004854:	call   0x140004db8
   140004859:	lea    rax,[rip+0x1c18]        # 0x140006478
   140004860:	mov    QWORD PTR [rbx],rax
   140004863:	mov    rax,rbx
   140004866:	add    rsp,0x20
   14000486a:	pop    rbx
   14000486b:	ret    
   14000486c:	int3   
   14000486d:	int3   
   14000486e:	int3   
   14000486f:	int3   
   140004870:	int3   
   140004871:	int3   
   140004872:	int3   
   140004873:	int3   
   140004874:	rex push rbx
   140004876:	sub    rsp,0x40
   14000487a:	mov    rbx,rcx
   14000487d:	jmp    0x14000488e
   14000487f:	mov    rcx,rbx
   140004882:	call   0x140004dc4
   140004887:	test   eax,eax
   140004889:	je     0x14000489f
   14000488b:	mov    rcx,rbx
   14000488e:	call   QWORD PTR [rip+0x1a0c]        # 0x1400062a0
   140004894:	test   rax,rax
   140004897:	je     0x14000487f
   140004899:	add    rsp,0x40
   14000489d:	pop    rbx
   14000489e:	ret    
   14000489f:	mov    eax,DWORD PTR [rip+0x48c3]        # 0x140009168
   1400048a5:	test   al,0x1
   1400048a7:	jne    0x1400048ca
   1400048a9:	or     eax,0x1
   1400048ac:	lea    rcx,[rip+0x489d]        # 0x140009150
   1400048b3:	mov    DWORD PTR [rip+0x48af],eax        # 0x140009168
   1400048b9:	call   0x140004834
   1400048be:	lea    rcx,[rip+0x12fb]        # 0x140005bc0
   1400048c5:	call   0x140004d08
   1400048ca:	lea    rdx,[rip+0x487f]        # 0x140009150
   1400048d1:	lea    rcx,[rsp+0x20]
   1400048d6:	call   0x140003eb4
   1400048db:	lea    rdx,[rip+0x31b6]        # 0x140007a98
   1400048e2:	lea    rcx,[rsp+0x20]
   1400048e7:	call   0x140004dac
   1400048ec:	int3   
   1400048ed:	int3   
   1400048ee:	int3   
   1400048ef:	int3   
   1400048f0:	int3   
   1400048f1:	int3   
   1400048f2:	int3   
   1400048f3:	int3   
   1400048f4:	int3   
   1400048f5:	int3   
   1400048f6:	int3   
   1400048f7:	int3   
   1400048f8:	int3   
   1400048f9:	int3   
   1400048fa:	int3   
   1400048fb:	int3   
   1400048fc:	int3   
   1400048fd:	int3   
   1400048fe:	int3   
   1400048ff:	int3   
   140004900:	sub    rsp,0x28
   140004904:	mov    eax,0x5a4d
   140004909:	cmp    WORD PTR [rip+0xffffffffffffb6f0],ax        # 0x140000000
   140004910:	je     0x140004916
   140004912:	xor    eax,eax
   140004914:	jmp    0x140004965
   140004916:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb71f]        # 0x14000003c
   14000491d:	lea    rax,[rip+0xffffffffffffb6dc]        # 0x140000000
   140004924:	add    rcx,rax
   140004927:	cmp    DWORD PTR [rcx],0x4550
   14000492d:	jne    0x140004912
   14000492f:	movzx  eax,WORD PTR [rcx+0x18]
   140004933:	cmp    eax,0x10b
   140004938:	je     0x140004954
   14000493a:	cmp    eax,0x20b
   14000493f:	jne    0x140004912
   140004941:	xor    eax,eax
   140004943:	cmp    DWORD PTR [rcx+0x84],0xe
   14000494a:	jbe    0x140004965
   14000494c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004952:	jmp    0x140004962
   140004954:	xor    eax,eax
   140004956:	cmp    DWORD PTR [rcx+0x74],0xe
   14000495a:	jbe    0x140004965
   14000495c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004962:	setne  al
   140004965:	mov    ecx,0x1
   14000496a:	mov    DWORD PTR [rip+0x4820],eax        # 0x140009190
   140004970:	call   0x140004e98
   140004975:	mov    ecx,eax
   140004977:	call   QWORD PTR [rip+0x187b]        # 0x1400061f8
   14000497d:	mov    rcx,QWORD PTR [rip+0x1834]        # 0x1400061b8
   140004984:	or     rax,0xffffffffffffffff
   140004988:	mov    QWORD PTR [rip+0x4ee1],rax        # 0x140009870
   14000498f:	mov    QWORD PTR [rip+0x4ee2],rax        # 0x140009878
   140004996:	mov    eax,DWORD PTR [rip+0x4808]        # 0x1400091a4
   14000499c:	mov    DWORD PTR [rcx],eax
   14000499e:	mov    rcx,QWORD PTR [rip+0x188b]        # 0x140006230
   1400049a5:	mov    eax,DWORD PTR [rip+0x47ed]        # 0x140009198
   1400049ab:	mov    DWORD PTR [rcx],eax
   1400049ad:	call   0x140004ef0
   1400049b2:	cmp    DWORD PTR [rip+0x4647],0x0        # 0x140009000
   1400049b9:	jne    0x1400049c8
   1400049bb:	lea    rcx,[rip+0x52e]        # 0x140004ef0
   1400049c2:	call   QWORD PTR [rip+0x1858]        # 0x140006220
   1400049c8:	xor    eax,eax
   1400049ca:	add    rsp,0x28
   1400049ce:	ret    
   1400049cf:	int3   
   1400049d0:	int3   
   1400049d1:	int3   
   1400049d2:	int3   
   1400049d3:	int3   
   1400049d4:	int3   
   1400049d5:	int3   
   1400049d6:	int3   
   1400049d7:	int3   
   1400049d8:	int3   
   1400049d9:	int3   
   1400049da:	int3   
   1400049db:	int3   
   1400049dc:	int3   
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	sub    rsp,0x38
   1400049e4:	mov    eax,DWORD PTR [rip+0x47b6]        # 0x1400091a0
   1400049ea:	lea    r8,[rip+0x4797]        # 0x140009188
   1400049f1:	mov    r9d,DWORD PTR [rip+0x47a4]        # 0x14000919c
   1400049f8:	lea    rdx,[rip+0x4781]        # 0x140009180
   1400049ff:	mov    DWORD PTR [rip+0x478f],eax        # 0x140009194
   140004a05:	lea    rcx,[rip+0x476c]        # 0x140009178
   140004a0c:	lea    rax,[rip+0x4781]        # 0x140009194
   140004a13:	mov    QWORD PTR [rsp+0x20],rax
   140004a18:	call   QWORD PTR [rip+0x17e2]        # 0x140006200
   140004a1e:	mov    DWORD PTR [rip+0x4758],eax        # 0x14000917c
   140004a24:	add    rsp,0x38
   140004a28:	ret    
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	mov    rax,rsp
   140004a33:	mov    QWORD PTR [rax+0x8],rbx
   140004a37:	mov    QWORD PTR [rax+0x10],rsi
   140004a3b:	mov    QWORD PTR [rax+0x18],rdi
   140004a3f:	mov    QWORD PTR [rax+0x20],r12
   140004a43:	push   r14
   140004a45:	sub    rsp,0x30
   140004a49:	mov    rax,QWORD PTR gs:0x30
   140004a52:	mov    rbx,QWORD PTR [rax+0x8]
   140004a56:	xor    r14d,r14d
   140004a59:	xor    eax,eax
   140004a5b:	lock cmpxchg QWORD PTR [rip+0x4dfc],rbx        # 0x140009860
   140004a64:	je     0x140004a82
   140004a66:	cmp    rax,rbx
   140004a69:	jne    0x140004a75
   140004a6b:	mov    ebx,0x1
   140004a70:	mov    r14d,ebx
   140004a73:	jmp    0x140004a87
   140004a75:	mov    ecx,0x3e8
   140004a7a:	call   QWORD PTR [rip+0x16b8]        # 0x140006138
   140004a80:	jmp    0x140004a59
   140004a82:	mov    ebx,0x1
   140004a87:	mov    eax,DWORD PTR [rip+0x4ddb]        # 0x140009868
   140004a8d:	cmp    eax,ebx
   140004a8f:	jne    0x140004a9d
   140004a91:	mov    ecx,0x1f
   140004a96:	call   0x140004ee4
   140004a9b:	jmp    0x140004b06
   140004a9d:	mov    eax,DWORD PTR [rip+0x4dc5]        # 0x140009868
   140004aa3:	test   eax,eax
   140004aa5:	jne    0x140004b00
   140004aa7:	mov    DWORD PTR [rip+0x4dbb],ebx        # 0x140009868
   140004aad:	lea    r12,[rip+0x18fc]        # 0x1400063b0
   140004ab4:	lea    rdi,[rip+0x18dd]        # 0x140006398
   140004abb:	mov    QWORD PTR [rsp+0x28],rdi
   140004ac0:	mov    DWORD PTR [rsp+0x20],eax
   140004ac4:	cmp    rdi,r12
   140004ac7:	jae    0x140004af2
   140004ac9:	test   eax,eax
   140004acb:	jne    0x140004af6
   140004acd:	mov    rsi,QWORD PTR [rdi]
   140004ad0:	test   rsi,rsi
   140004ad3:	je     0x140004ae7
   140004ad5:	mov    rcx,rsi
   140004ad8:	mov    rax,QWORD PTR [rip+0x1871]        # 0x140006350
   140004adf:	call   rax
   140004ae1:	call   rsi
   140004ae3:	mov    DWORD PTR [rsp+0x20],eax
   140004ae7:	add    rdi,0x8
   140004aeb:	mov    QWORD PTR [rsp+0x28],rdi
   140004af0:	jmp    0x140004ac4
   140004af2:	test   eax,eax
   140004af4:	je     0x140004b06
   140004af6:	mov    eax,0xff
   140004afb:	jmp    0x140004be7
   140004b00:	mov    DWORD PTR [rip+0x466a],ebx        # 0x140009170
   140004b06:	mov    eax,DWORD PTR [rip+0x4d5c]        # 0x140009868
   140004b0c:	cmp    eax,ebx
   140004b0e:	jne    0x140004b2d
   140004b10:	lea    rdx,[rip+0x1879]        # 0x140006390
   140004b17:	lea    rcx,[rip+0x1842]        # 0x140006360
   140004b1e:	call   0x1400050ba
   140004b23:	mov    DWORD PTR [rip+0x4d3b],0x2        # 0x140009868
   140004b2d:	test   r14d,r14d
   140004b30:	jne    0x140004b3b
   140004b32:	xor    eax,eax
   140004b34:	xchg   QWORD PTR [rip+0x4d25],rax        # 0x140009860
   140004b3b:	cmp    QWORD PTR [rip+0x4d3d],0x0        # 0x140009880
   140004b43:	je     0x140004b73
   140004b45:	lea    rcx,[rip+0x4d34]        # 0x140009880
   140004b4c:	call   0x140004f50
   140004b51:	test   eax,eax
   140004b53:	je     0x140004b73
   140004b55:	mov    rbx,QWORD PTR [rip+0x4d24]        # 0x140009880
   140004b5c:	mov    rcx,rbx
   140004b5f:	mov    rax,QWORD PTR [rip+0x17ea]        # 0x140006350
   140004b66:	call   rax
   140004b68:	xor    r8d,r8d
   140004b6b:	lea    edx,[r8+0x2]
   140004b6f:	xor    ecx,ecx
   140004b71:	call   rbx
   140004b73:	mov    r8,QWORD PTR [rip+0x460e]        # 0x140009188
   140004b7a:	mov    rdx,QWORD PTR [rip+0x45ff]        # 0x140009180
   140004b81:	mov    ecx,DWORD PTR [rip+0x45f1]        # 0x140009178
   140004b87:	call   0x1400022a8
   140004b8c:	mov    DWORD PTR [rip+0x45da],eax        # 0x14000916c
   140004b92:	cmp    DWORD PTR [rip+0x45f7],0x0        # 0x140009190
   140004b99:	jne    0x140004ba3
   140004b9b:	mov    ecx,eax
   140004b9d:	call   QWORD PTR [rip+0x164d]        # 0x1400061f0
   140004ba3:	cmp    DWORD PTR [rip+0x45c6],0x0        # 0x140009170
   140004baa:	jne    0x140004bb8
   140004bac:	call   QWORD PTR [rip+0x1636]        # 0x1400061e8
   140004bb2:	mov    eax,DWORD PTR [rip+0x45b4]        # 0x14000916c
   140004bb8:	jmp    0x140004be7
   140004bba:	mov    DWORD PTR [rip+0x45ac],eax        # 0x14000916c
   140004bc0:	cmp    DWORD PTR [rip+0x45c9],0x0        # 0x140009190
   140004bc7:	jne    0x140004bd2
   140004bc9:	mov    ecx,eax
   140004bcb:	call   QWORD PTR [rip+0x16ff]        # 0x1400062d0
   140004bd1:	int3   
   140004bd2:	cmp    DWORD PTR [rip+0x4597],0x0        # 0x140009170
   140004bd9:	jne    0x140004be7
   140004bdb:	call   QWORD PTR [rip+0x1607]        # 0x1400061e8
   140004be1:	mov    eax,DWORD PTR [rip+0x4585]        # 0x14000916c
   140004be7:	mov    rbx,QWORD PTR [rsp+0x40]
   140004bec:	mov    rsi,QWORD PTR [rsp+0x48]
   140004bf1:	mov    rdi,QWORD PTR [rsp+0x50]
   140004bf6:	mov    r12,QWORD PTR [rsp+0x58]
   140004bfb:	add    rsp,0x30
   140004bff:	pop    r14
   140004c01:	ret    
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	int3   
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	sub    rsp,0x28
   140004c14:	call   0x140004fe4
   140004c19:	add    rsp,0x28
   140004c1d:	jmp    0x140004a30
   140004c22:	int3   
   140004c23:	int3   
   140004c24:	int3   
   140004c25:	int3   
   140004c26:	int3   
   140004c27:	int3   
   140004c28:	jmp    QWORD PTR [rip+0x169a]        # 0x1400062c8
   140004c2e:	int3   
   140004c2f:	int3   
   140004c30:	int3   
   140004c31:	int3   
   140004c32:	int3   
   140004c33:	int3   
   140004c34:	int3   
   140004c35:	int3   
   140004c36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004c40:	cmp    rcx,QWORD PTR [rip+0x43c1]        # 0x140009008
   140004c47:	jne    0x140004c59
   140004c49:	rol    rcx,0x10
   140004c4d:	test   cx,0xffff
   140004c52:	jne    0x140004c55
   140004c54:	ret    
   140004c55:	ror    rcx,0x10
   140004c59:	jmp    0x140005130
   140004c5e:	int3   
   140004c5f:	int3   
   140004c60:	int3   
   140004c61:	int3   
   140004c62:	int3   
   140004c63:	int3   
   140004c64:	mov    QWORD PTR [rsp+0x8],rbx
   140004c69:	push   rdi
   140004c6a:	sub    rsp,0x20
   140004c6e:	mov    rdi,rcx
   140004c71:	mov    rax,QWORD PTR [rip+0x4c00]        # 0x140009878
   140004c78:	mov    QWORD PTR [rsp+0x38],rax
   140004c7d:	cmp    rax,0xffffffffffffffff
   140004c81:	jne    0x140004c9a
   140004c83:	mov    rbx,QWORD PTR [rip+0x1536]        # 0x1400061c0
   140004c8a:	mov    rcx,rbx
   140004c8d:	call   QWORD PTR [rip+0x16bd]        # 0x140006350
   140004c93:	mov    rcx,rdi
   140004c96:	call   rbx
   140004c98:	jmp    0x140004cf7
   140004c9a:	mov    ecx,0x8
   140004c9f:	call   0x1400052a8
   140004ca4:	nop
   140004ca5:	mov    rax,QWORD PTR [rip+0x4bcc]        # 0x140009878
   140004cac:	mov    QWORD PTR [rsp+0x38],rax
   140004cb1:	mov    rax,QWORD PTR [rip+0x4bb8]        # 0x140009870
   140004cb8:	mov    QWORD PTR [rsp+0x40],rax
   140004cbd:	lea    r8,[rsp+0x40]
   140004cc2:	lea    rdx,[rsp+0x38]
   140004cc7:	mov    rcx,rdi
   140004cca:	call   0x1400052c0
   140004ccf:	mov    rbx,rax
   140004cd2:	mov    rdx,QWORD PTR [rsp+0x38]
   140004cd7:	mov    QWORD PTR [rip+0x4b9a],rdx        # 0x140009878
   140004cde:	mov    rdx,QWORD PTR [rsp+0x40]
   140004ce3:	mov    QWORD PTR [rip+0x4b86],rdx        # 0x140009870
   140004cea:	mov    ecx,0x8
   140004cef:	call   0x1400052b4
   140004cf4:	mov    rax,rbx
   140004cf7:	mov    rbx,QWORD PTR [rsp+0x30]
   140004cfc:	add    rsp,0x20
   140004d00:	pop    rdi
   140004d01:	ret    
   140004d02:	int3   
   140004d03:	int3   
   140004d04:	int3   
   140004d05:	int3   
   140004d06:	int3   
   140004d07:	int3   
   140004d08:	sub    rsp,0x28
   140004d0c:	call   0x140004c64
   140004d11:	neg    rax
   140004d14:	sbb    eax,eax
   140004d16:	neg    eax
   140004d18:	dec    eax
   140004d1a:	add    rsp,0x28
   140004d1e:	ret    
   140004d1f:	int3   
   140004d20:	int3   
   140004d21:	int3   
   140004d22:	int3   
   140004d23:	int3   
   140004d24:	int3   
   140004d25:	int3   
   140004d26:	int3   
   140004d27:	int3   
   140004d28:	int3   
   140004d29:	int3   
   140004d2a:	int3   
   140004d2b:	int3   
   140004d2c:	int3   
   140004d2d:	int3   
   140004d2e:	int3   
   140004d2f:	int3   
   140004d30:	mov    QWORD PTR [rsp+0x8],rbx
   140004d35:	push   rdi
   140004d36:	sub    rsp,0x20
   140004d3a:	mov    ebx,edx
   140004d3c:	mov    rdi,rcx
   140004d3f:	call   QWORD PTR [rip+0x146b]        # 0x1400061b0
   140004d45:	test   bl,0x1
   140004d48:	je     0x140004d52
   140004d4a:	mov    rcx,rdi
   140004d4d:	call   0x140004c28
   140004d52:	mov    rax,rdi
   140004d55:	mov    rbx,QWORD PTR [rsp+0x30]
   140004d5a:	add    rsp,0x20
   140004d5e:	pop    rdi
   140004d5f:	ret    
   140004d60:	int3   
   140004d61:	int3   
   140004d62:	int3   
   140004d63:	int3   
   140004d64:	int3   
   140004d65:	int3   
   140004d66:	int3   
   140004d67:	int3   
   140004d68:	int3   
   140004d69:	int3   
   140004d6a:	int3   
   140004d6b:	int3   
   140004d6c:	int3   
   140004d6d:	int3   
   140004d6e:	int3   
   140004d6f:	int3   
   140004d70:	jmp    QWORD PTR [rip+0x1532]        # 0x1400062a8
   140004d76:	int3   
   140004d77:	int3   
   140004d78:	int3   
   140004d79:	int3   
   140004d7a:	int3   
   140004d7b:	int3   
   140004d7c:	jmp    QWORD PTR [rip+0x150e]        # 0x140006290
   140004d82:	int3   
   140004d83:	int3   
   140004d84:	int3   
   140004d85:	int3   
   140004d86:	int3   
   140004d87:	int3   
   140004d88:	jmp    QWORD PTR [rip+0x14fa]        # 0x140006288
   140004d8e:	int3   
   140004d8f:	int3   
   140004d90:	int3   
   140004d91:	int3   
   140004d92:	int3   
   140004d93:	int3   
   140004d94:	jmp    QWORD PTR [rip+0x14e6]        # 0x140006280
   140004d9a:	int3   
   140004d9b:	int3   
   140004d9c:	int3   
   140004d9d:	int3   
   140004d9e:	int3   
   140004d9f:	int3   
   140004da0:	jmp    QWORD PTR [rip+0x14aa]        # 0x140006250
   140004da6:	int3   
   140004da7:	int3   
   140004da8:	int3   
   140004da9:	int3   
   140004daa:	int3   
   140004dab:	int3   
   140004dac:	jmp    QWORD PTR [rip+0x1496]        # 0x140006248
   140004db2:	int3   
   140004db3:	int3   
   140004db4:	int3   
   140004db5:	int3   
   140004db6:	int3   
   140004db7:	int3   
   140004db8:	jmp    QWORD PTR [rip+0x1482]        # 0x140006240
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	int3   
   140004dc1:	int3   
   140004dc2:	int3   
   140004dc3:	int3   
   140004dc4:	jmp    QWORD PTR [rip+0x146e]        # 0x140006238
   140004dca:	int3   
   140004dcb:	int3   
   140004dcc:	int3   
   140004dcd:	int3   
   140004dce:	int3   
   140004dcf:	int3   
   140004dd0:	sub    rsp,0x28
   140004dd4:	mov    rax,QWORD PTR [rcx]
   140004dd7:	cmp    DWORD PTR [rax],0xe06d7363
   140004ddd:	jne    0x140004e02
   140004ddf:	cmp    DWORD PTR [rax+0x18],0x4
   140004de3:	jne    0x140004e02
   140004de5:	mov    ecx,DWORD PTR [rax+0x20]
   140004de8:	lea    eax,[rcx-0x19930520]
   140004dee:	cmp    eax,0x2
   140004df1:	jbe    0x140004dfb
   140004df3:	cmp    ecx,0x1994000
   140004df9:	jne    0x140004e02
   140004dfb:	call   QWORD PTR [rip+0x13a7]        # 0x1400061a8
   140004e01:	int3   
   140004e02:	xor    eax,eax
   140004e04:	add    rsp,0x28
   140004e08:	ret    
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	sub    rsp,0x28
   140004e14:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140004dd0
   140004e1b:	call   QWORD PTR [rip+0x131f]        # 0x140006140
   140004e21:	xor    eax,eax
   140004e23:	add    rsp,0x28
   140004e27:	ret    
   140004e28:	int3   
   140004e29:	int3   
   140004e2a:	int3   
   140004e2b:	int3   
   140004e2c:	int3   
   140004e2d:	int3   
   140004e2e:	jmp    QWORD PTR [rip+0x13dc]        # 0x140006210
   140004e34:	int3   
   140004e35:	int3   
   140004e36:	int3   
   140004e37:	int3   
   140004e38:	int3   
   140004e39:	int3   
   140004e3a:	int3   
   140004e3b:	int3   
   140004e3c:	sub    rsp,0x18
   140004e40:	xor    edx,edx
   140004e42:	lea    rax,[rcx-0x1]
   140004e46:	cmp    rax,0xfffffffffffffffd
   140004e4a:	ja     0x140004e88
   140004e4c:	mov    eax,0x5a4d
   140004e51:	cmp    WORD PTR [rcx],ax
   140004e54:	jne    0x140004e80
   140004e56:	cmp    DWORD PTR [rcx+0x3c],edx
   140004e59:	jl     0x140004e80
   140004e5b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140004e62:	jae    0x140004e80
   140004e64:	movsxd rax,DWORD PTR [rcx+0x3c]
   140004e68:	add    rax,rcx
   140004e6b:	mov    QWORD PTR [rsp],rax
   140004e6f:	cmp    DWORD PTR [rax],0x4550
   140004e75:	cmovne rax,rdx
   140004e79:	mov    rdx,rax
   140004e7c:	mov    QWORD PTR [rsp],rax
   140004e80:	jmp    0x140004e88
   140004e82:	xor    edx,edx
   140004e84:	mov    QWORD PTR [rsp],rdx
   140004e88:	mov    rax,rdx
   140004e8b:	add    rsp,0x18
   140004e8f:	ret    
   140004e90:	int3   
   140004e91:	int3   
   140004e92:	int3   
   140004e93:	int3   
   140004e94:	int3   
   140004e95:	int3   
   140004e96:	int3   
   140004e97:	int3   
   140004e98:	rex push rbx
   140004e9a:	sub    rsp,0x20
   140004e9e:	mov    ebx,ecx
   140004ea0:	xor    ecx,ecx
   140004ea2:	call   QWORD PTR [rip+0x12a0]        # 0x140006148
   140004ea8:	test   rax,rax
   140004eab:	je     0x140004ed5
   140004ead:	mov    rcx,rax
   140004eb0:	call   0x140004e3c
   140004eb5:	test   rax,rax
   140004eb8:	je     0x140004ed5
   140004eba:	mov    ecx,0x2
   140004ebf:	cmp    WORD PTR [rax+0x5c],cx
   140004ec3:	jne    0x140004ec9
   140004ec5:	mov    eax,ecx
   140004ec7:	jmp    0x140004ed7
   140004ec9:	cmp    WORD PTR [rax+0x5c],0x3
   140004ece:	mov    eax,0x1
   140004ed3:	je     0x140004ed7
   140004ed5:	mov    eax,ebx
   140004ed7:	add    rsp,0x20
   140004edb:	pop    rbx
   140004edc:	ret    
   140004edd:	int3   
   140004ede:	int3   
   140004edf:	int3   
   140004ee0:	int3   
   140004ee1:	int3   
   140004ee2:	int3   
   140004ee3:	int3   
   140004ee4:	jmp    QWORD PTR [rip+0x131e]        # 0x140006208
   140004eea:	int3   
   140004eeb:	int3   
   140004eec:	int3   
   140004eed:	int3   
   140004eee:	int3   
   140004eef:	int3   
   140004ef0:	xor    eax,eax
   140004ef2:	ret    
   140004ef3:	int3   
   140004ef4:	int3   
   140004ef5:	int3   
   140004ef6:	int3   
   140004ef7:	int3   
   140004ef8:	int3   
   140004ef9:	int3   
   140004efa:	int3   
   140004efb:	int3   
   140004efc:	int3   
   140004efd:	int3   
   140004efe:	int3   
   140004eff:	int3   
   140004f00:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004f04:	xor    r9d,r9d
   140004f07:	add    r8,rcx
   140004f0a:	mov    r10,rdx
   140004f0d:	movzx  eax,WORD PTR [r8+0x14]
   140004f12:	movzx  r11d,WORD PTR [r8+0x6]
   140004f17:	add    rax,0x18
   140004f1b:	add    rax,r8
   140004f1e:	test   r11d,r11d
   140004f21:	je     0x140004f41
   140004f23:	mov    edx,DWORD PTR [rax+0xc]
   140004f26:	cmp    r10,rdx
   140004f29:	jb     0x140004f35
   140004f2b:	mov    ecx,DWORD PTR [rax+0x8]
   140004f2e:	add    ecx,edx
   140004f30:	cmp    r10,rcx
   140004f33:	jb     0x140004f43
   140004f35:	inc    r9d
   140004f38:	add    rax,0x28
   140004f3c:	cmp    r9d,r11d
   140004f3f:	jb     0x140004f23
   140004f41:	xor    eax,eax
   140004f43:	ret    
   140004f44:	int3   
   140004f45:	int3   
   140004f46:	int3   
   140004f47:	int3   
   140004f48:	int3   
   140004f49:	int3   
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	int3   
   140004f4d:	int3   
   140004f4e:	int3   
   140004f4f:	int3   
   140004f50:	mov    QWORD PTR [rsp+0x8],rbx
   140004f55:	push   rdi
   140004f56:	sub    rsp,0x20
   140004f5a:	mov    rbx,rcx
   140004f5d:	lea    rdi,[rip+0xffffffffffffb09c]        # 0x140000000
   140004f64:	mov    rcx,rdi
   140004f67:	call   0x140004fb0
   140004f6c:	test   eax,eax
   140004f6e:	je     0x140004f92
   140004f70:	sub    rbx,rdi
   140004f73:	mov    rdx,rbx
   140004f76:	mov    rcx,rdi
   140004f79:	call   0x140004f00
   140004f7e:	test   rax,rax
   140004f81:	je     0x140004f92
   140004f83:	mov    eax,DWORD PTR [rax+0x24]
   140004f86:	shr    eax,0x1f
   140004f89:	not    eax
   140004f8b:	and    eax,0x1
   140004f8e:	jmp    0x140004f92
   140004f90:	xor    eax,eax
   140004f92:	mov    rbx,QWORD PTR [rsp+0x30]
   140004f97:	add    rsp,0x20
   140004f9b:	pop    rdi
   140004f9c:	ret    
   140004f9d:	int3   
   140004f9e:	int3   
   140004f9f:	int3   
   140004fa0:	int3   
   140004fa1:	int3   
   140004fa2:	int3   
   140004fa3:	int3   
   140004fa4:	int3   
   140004fa5:	int3   
   140004fa6:	int3   
   140004fa7:	int3   
   140004fa8:	int3   
   140004fa9:	int3   
   140004faa:	int3   
   140004fab:	int3   
   140004fac:	int3   
   140004fad:	int3   
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	mov    rax,rcx
   140004fb3:	mov    ecx,0x5a4d
   140004fb8:	cmp    WORD PTR [rax],cx
   140004fbb:	je     0x140004fc0
   140004fbd:	xor    eax,eax
   140004fbf:	ret    
   140004fc0:	movsxd rcx,DWORD PTR [rax+0x3c]
   140004fc4:	add    rcx,rax
   140004fc7:	xor    eax,eax
   140004fc9:	cmp    DWORD PTR [rcx],0x4550
   140004fcf:	jne    0x140004fdd
   140004fd1:	mov    edx,0x20b
   140004fd6:	cmp    WORD PTR [rcx+0x18],dx
   140004fda:	sete   al
   140004fdd:	ret    
   140004fde:	int3   
   140004fdf:	int3   
   140004fe0:	int3   
   140004fe1:	int3   
   140004fe2:	int3   
   140004fe3:	int3   
   140004fe4:	mov    QWORD PTR [rsp+0x20],rbx
   140004fe9:	push   rbp
   140004fea:	mov    rbp,rsp
   140004fed:	sub    rsp,0x20
   140004ff1:	and    QWORD PTR [rbp+0x18],0x0
   140004ff6:	movabs rbx,0x2b992ddfa232
   140005000:	mov    rax,QWORD PTR [rip+0x4001]        # 0x140009008
   140005007:	cmp    rax,rbx
   14000500a:	jne    0x14000509f
   140005010:	lea    rcx,[rbp+0x18]
   140005014:	call   QWORD PTR [rip+0x1146]        # 0x140006160
   14000501a:	mov    rax,QWORD PTR [rbp+0x18]
   14000501e:	mov    QWORD PTR [rbp+0x10],rax
   140005022:	call   QWORD PTR [rip+0x1070]        # 0x140006098
   140005028:	mov    eax,eax
   14000502a:	xor    QWORD PTR [rbp+0x10],rax
   14000502e:	call   QWORD PTR [rip+0x1124]        # 0x140006158
   140005034:	mov    eax,eax
   140005036:	xor    QWORD PTR [rbp+0x10],rax
   14000503a:	call   QWORD PTR [rip+0x1128]        # 0x140006168
   140005040:	mov    eax,eax
   140005042:	shl    rax,0x18
   140005046:	xor    QWORD PTR [rbp+0x10],rax
   14000504a:	call   QWORD PTR [rip+0x1118]        # 0x140006168
   140005050:	mov    eax,eax
   140005052:	lea    rcx,[rbp+0x10]
   140005056:	xor    rax,QWORD PTR [rbp+0x10]
   14000505a:	xor    rax,rcx
   14000505d:	lea    rcx,[rbp+0x20]
   140005061:	mov    QWORD PTR [rbp+0x10],rax
   140005065:	call   QWORD PTR [rip+0x10e5]        # 0x140006150
   14000506b:	mov    eax,DWORD PTR [rbp+0x20]
   14000506e:	movabs rcx,0xffffffffffff
   140005078:	shl    rax,0x20
   14000507c:	xor    rax,QWORD PTR [rbp+0x20]
   140005080:	xor    rax,QWORD PTR [rbp+0x10]
   140005084:	and    rax,rcx
   140005087:	movabs rcx,0x2b992ddfa233
   140005091:	cmp    rax,rbx
   140005094:	cmove  rax,rcx
   140005098:	mov    QWORD PTR [rip+0x3f69],rax        # 0x140009008
   14000509f:	mov    rbx,QWORD PTR [rsp+0x48]
   1400050a4:	not    rax
   1400050a7:	mov    QWORD PTR [rip+0x3f62],rax        # 0x140009010
   1400050ae:	add    rsp,0x20
   1400050b2:	pop    rbp
   1400050b3:	ret    
   1400050b4:	int3   
   1400050b5:	int3   
   1400050b6:	int3   
   1400050b7:	int3   
   1400050b8:	int3   
   1400050b9:	int3   
   1400050ba:	jmp    QWORD PTR [rip+0x1168]        # 0x140006228
   1400050c0:	int3   
   1400050c1:	int3   
   1400050c2:	int3   
   1400050c3:	int3   
   1400050c4:	int3   
   1400050c5:	int3   
   1400050c6:	jmp    QWORD PTR [rip+0x114c]        # 0x140006218
   1400050cc:	int3   
   1400050cd:	int3   
   1400050ce:	int3   
   1400050cf:	int3   
   1400050d0:	int3   
   1400050d1:	int3   
   1400050d2:	int3   
   1400050d3:	int3   
   1400050d4:	int3   
   1400050d5:	int3   
   1400050d6:	int3   
   1400050d7:	int3   
   1400050d8:	int3   
   1400050d9:	int3   
   1400050da:	int3   
   1400050db:	int3   
   1400050dc:	int3   
   1400050dd:	int3   
   1400050de:	int3   
   1400050df:	int3   
   1400050e0:	ret    0x0
   1400050e3:	int3   
   1400050e4:	int3   
   1400050e5:	int3   
   1400050e6:	int3   
   1400050e7:	int3   
   1400050e8:	int3   
   1400050e9:	int3   
   1400050ea:	int3   
   1400050eb:	int3   
   1400050ec:	rex push rbx
   1400050ee:	sub    rsp,0x20
   1400050f2:	mov    rbx,rcx
   1400050f5:	xor    ecx,ecx
   1400050f7:	call   QWORD PTR [rip+0x1043]        # 0x140006140
   1400050fd:	mov    rcx,rbx
   140005100:	call   QWORD PTR [rip+0x106a]        # 0x140006170
   140005106:	call   QWORD PTR [rip+0xf9c]        # 0x1400060a8
   14000510c:	mov    rcx,rax
   14000510f:	mov    edx,0xc0000409
   140005114:	add    rsp,0x20
   140005118:	pop    rbx
   140005119:	rex.W jmp QWORD PTR [rip+0x1058]        # 0x140006178
   140005120:	int3   
   140005121:	int3   
   140005122:	int3   
   140005123:	int3   
   140005124:	int3   
   140005125:	int3   
   140005126:	int3   
   140005127:	int3   
   140005128:	int3   
   140005129:	int3   
   14000512a:	int3   
   14000512b:	int3   
   14000512c:	int3   
   14000512d:	int3   
   14000512e:	int3   
   14000512f:	int3   
   140005130:	mov    QWORD PTR [rsp+0x8],rcx
   140005135:	sub    rsp,0x88
   14000513c:	lea    rcx,[rip+0x410d]        # 0x140009250
   140005143:	call   QWORD PTR [rip+0x11af]        # 0x1400062f8
   140005149:	mov    rax,QWORD PTR [rip+0x41f8]        # 0x140009348
   140005150:	mov    QWORD PTR [rsp+0x48],rax
   140005155:	xor    r8d,r8d
   140005158:	lea    rdx,[rsp+0x50]
   14000515d:	mov    rcx,QWORD PTR [rsp+0x48]
   140005162:	call   QWORD PTR [rip+0x1188]        # 0x1400062f0
   140005168:	mov    QWORD PTR [rsp+0x40],rax
   14000516d:	cmp    QWORD PTR [rsp+0x40],0x0
   140005173:	je     0x1400051b7
   140005175:	mov    QWORD PTR [rsp+0x38],0x0
   14000517e:	lea    rax,[rsp+0x58]
   140005183:	mov    QWORD PTR [rsp+0x30],rax
   140005188:	lea    rax,[rsp+0x60]
   14000518d:	mov    QWORD PTR [rsp+0x28],rax
   140005192:	lea    rax,[rip+0x40b7]        # 0x140009250
   140005199:	mov    QWORD PTR [rsp+0x20],rax
   14000519e:	mov    r9,QWORD PTR [rsp+0x40]
   1400051a3:	mov    r8,QWORD PTR [rsp+0x48]
   1400051a8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400051ad:	xor    ecx,ecx
   1400051af:	call   QWORD PTR [rip+0x1133]        # 0x1400062e8
   1400051b5:	jmp    0x1400051da
   1400051b7:	mov    rax,QWORD PTR [rip+0x412a]        # 0x1400092e8
   1400051be:	mov    rax,QWORD PTR [rax]
   1400051c1:	mov    QWORD PTR [rip+0x4180],rax        # 0x140009348
   1400051c8:	mov    rax,QWORD PTR [rip+0x4119]        # 0x1400092e8
   1400051cf:	add    rax,0x8
   1400051d3:	mov    QWORD PTR [rip+0x410e],rax        # 0x1400092e8
   1400051da:	mov    rax,QWORD PTR [rip+0x4167]        # 0x140009348
   1400051e1:	mov    QWORD PTR [rip+0x3fd8],rax        # 0x1400091c0
   1400051e8:	mov    rax,QWORD PTR [rsp+0x90]
   1400051f0:	mov    QWORD PTR [rip+0x40d9],rax        # 0x1400092d0
   1400051f7:	mov    DWORD PTR [rip+0x3faf],0xc0000409        # 0x1400091b0
   140005201:	mov    DWORD PTR [rip+0x3fa9],0x1        # 0x1400091b4
   14000520b:	mov    DWORD PTR [rip+0x3fb3],0x3        # 0x1400091c8
   140005215:	mov    eax,0x8
   14000521a:	imul   rax,rax,0x0
   14000521e:	lea    rcx,[rip+0x3fab]        # 0x1400091d0
   140005225:	mov    QWORD PTR [rcx+rax*1],0x2
   14000522d:	mov    eax,0x8
   140005232:	imul   rax,rax,0x1
   140005236:	lea    rcx,[rip+0x3f93]        # 0x1400091d0
   14000523d:	mov    rdx,QWORD PTR [rip+0x3dc4]        # 0x140009008
   140005244:	mov    QWORD PTR [rcx+rax*1],rdx
   140005248:	mov    eax,0x8
   14000524d:	imul   rax,rax,0x2
   140005251:	lea    rcx,[rip+0x3f78]        # 0x1400091d0
   140005258:	mov    rdx,QWORD PTR [rip+0x3db1]        # 0x140009010
   14000525f:	mov    QWORD PTR [rcx+rax*1],rdx
   140005263:	mov    eax,0x8
   140005268:	imul   rax,rax,0x0
   14000526c:	mov    rcx,QWORD PTR [rip+0x3d95]        # 0x140009008
   140005273:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140005278:	mov    eax,0x8
   14000527d:	imul   rax,rax,0x1
   140005281:	mov    rcx,QWORD PTR [rip+0x3d88]        # 0x140009010
   140005288:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000528d:	lea    rcx,[rip+0x11d4]        # 0x140006468
   140005294:	call   0x1400050ec
   140005299:	add    rsp,0x88
   1400052a0:	ret    
   1400052a1:	int3   
   1400052a2:	int3   
   1400052a3:	int3   
   1400052a4:	int3   
   1400052a5:	int3   
   1400052a6:	int3   
   1400052a7:	int3   
   1400052a8:	jmp    QWORD PTR [rip+0xf2a]        # 0x1400061d8
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	int3   
   1400052b1:	int3   
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	jmp    QWORD PTR [rip+0xf16]        # 0x1400061d0
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	jmp    QWORD PTR [rip+0xf02]        # 0x1400061c8
   1400052c6:	int3   
   1400052c7:	int3   
   1400052c8:	int3   
   1400052c9:	int3   
   1400052ca:	int3   
   1400052cb:	int3   
   1400052cc:	int3   
   1400052cd:	int3   
   1400052ce:	int3   
   1400052cf:	int3   
   1400052d0:	int3   
   1400052d1:	int3   
   1400052d2:	int3   
   1400052d3:	int3   
   1400052d4:	int3   
   1400052d5:	int3   
   1400052d6:	int3   
   1400052d7:	int3   
   1400052d8:	sub    rsp,0x28
   1400052dc:	mov    r8,QWORD PTR [r9+0x38]
   1400052e0:	mov    rcx,rdx
   1400052e3:	mov    rdx,r9
   1400052e6:	call   0x1400052fc
   1400052eb:	mov    eax,0x1
   1400052f0:	add    rsp,0x28
   1400052f4:	ret    
   1400052f5:	int3   
   1400052f6:	int3   
   1400052f7:	int3   
   1400052f8:	int3   
   1400052f9:	int3   
   1400052fa:	int3   
   1400052fb:	int3   
   1400052fc:	rex push rbx
   1400052fe:	sub    rsp,0x20
   140005302:	mov    r11d,DWORD PTR [r8]
   140005305:	mov    rbx,rdx
   140005308:	and    r11d,0xfffffff8
   14000530c:	mov    r9,rcx
   14000530f:	test   BYTE PTR [r8],0x4
   140005313:	mov    r10,rcx
   140005316:	je     0x14000532b
   140005318:	mov    eax,DWORD PTR [r8+0x8]
   14000531c:	movsxd r10,DWORD PTR [r8+0x4]
   140005320:	neg    eax
   140005322:	add    r10,rcx
   140005325:	movsxd rcx,eax
   140005328:	and    r10,rcx
   14000532b:	movsxd rax,r11d
   14000532e:	mov    rdx,QWORD PTR [rax+r10*1]
   140005332:	mov    rax,QWORD PTR [rbx+0x10]
   140005336:	mov    ecx,DWORD PTR [rax+0x8]
   140005339:	add    rcx,QWORD PTR [rbx+0x8]
   14000533d:	test   BYTE PTR [rcx+0x3],0xf
   140005341:	je     0x14000534f
   140005343:	movzx  eax,BYTE PTR [rcx+0x3]
   140005347:	and    eax,0xfffffff0
   14000534a:	cdqe   
   14000534c:	add    r9,rax
   14000534f:	xor    r9,rdx
   140005352:	mov    rcx,r9
   140005355:	add    rsp,0x20
   140005359:	pop    rbx
   14000535a:	jmp    0x140004c40
   14000535f:	int3   
   140005360:	int3   
   140005361:	int3   
   140005362:	int3   
   140005363:	int3   
   140005364:	int3   
   140005365:	int3   
   140005366:	jmp    QWORD PTR [rip+0xe74]        # 0x1400061e0
   14000536c:	int3   
   14000536d:	int3   
   14000536e:	int3   
   14000536f:	int3   
   140005370:	int3   
   140005371:	int3   
   140005372:	int3   
   140005373:	int3   
   140005374:	mov    rax,rsp
   140005377:	mov    QWORD PTR [rax+0x8],rbx
   14000537b:	mov    QWORD PTR [rax+0x10],rbp
   14000537f:	mov    QWORD PTR [rax+0x18],rsi
   140005383:	mov    QWORD PTR [rax+0x20],rdi
   140005387:	push   r14
   140005389:	sub    rsp,0x20
   14000538d:	mov    rbx,QWORD PTR [r9+0x38]
   140005391:	mov    rsi,rdx
   140005394:	mov    r14,r8
   140005397:	mov    rbp,rcx
   14000539a:	mov    rdx,r9
   14000539d:	mov    rcx,rsi
   1400053a0:	mov    rdi,r9
   1400053a3:	lea    r8,[rbx+0x4]
   1400053a7:	call   0x1400052fc
   1400053ac:	mov    r11d,DWORD PTR [rbx+0x4]
   1400053b0:	mov    r8d,0x1
   1400053b6:	mov    r10d,DWORD PTR [rbp+0x4]
   1400053ba:	mov    eax,r11d
   1400053bd:	and    eax,r8d
   1400053c0:	and    r11d,0x2
   1400053c4:	and    r10b,0x66
   1400053c8:	cmove  r11d,eax
   1400053cc:	test   r11d,r11d
   1400053cf:	je     0x1400053e5
   1400053d1:	mov    r9,rdi
   1400053d4:	mov    r8,r14
   1400053d7:	mov    rdx,rsi
   1400053da:	mov    rcx,rbp
   1400053dd:	call   0x140005366
   1400053e2:	mov    r8d,eax
   1400053e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053ea:	mov    eax,r8d
   1400053ed:	mov    rbp,QWORD PTR [rsp+0x38]
   1400053f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400053f7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400053fc:	add    rsp,0x20
   140005400:	pop    r14
   140005402:	ret    
   140005403:	int3   
   140005404:	int3   
   140005405:	int3   
   140005406:	int3   
   140005407:	int3   
   140005408:	int3   
   140005409:	int3   
   14000540a:	jmp    QWORD PTR [rip+0xec8]        # 0x1400062d8
   140005410:	int3   
   140005411:	int3   
   140005412:	int3   
   140005413:	int3   
   140005414:	int3   
   140005415:	int3   
   140005416:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005420:	jmp    rax
   140005422:	int3   
   140005423:	int3   
   140005424:	int3   
   140005425:	int3   
   140005426:	int3   
   140005427:	int3   
   140005428:	int3   
   140005429:	int3   
   14000542a:	int3   
   14000542b:	int3   
   14000542c:	int3   
   14000542d:	int3   
   14000542e:	int3   
   14000542f:	int3   
   140005430:	int3   
   140005431:	int3   
   140005432:	int3   
   140005433:	int3   
   140005434:	int3   
   140005435:	int3   
   140005436:	mov    QWORD PTR [rsp+0x10],rdx
   14000543b:	push   rbp
   14000543c:	sub    rsp,0x20
   140005440:	mov    rbp,rdx
   140005443:	call   0x140003970
   140005448:	lea    rdx,[rip+0x3bd1]        # 0x140009020
   14000544f:	mov    rcx,QWORD PTR [rip+0x3bca]        # 0x140009020
   140005456:	cmp    rcx,rdx
   140005459:	je     0x140005480
   14000545b:	test   BYTE PTR [rcx+0x1c],0x1
   14000545f:	je     0x140005480
   140005461:	cmp    BYTE PTR [rcx+0x19],0x2
   140005465:	jb     0x140005480
   140005467:	mov    edx,0xa
   14000546c:	mov    r9d,eax
   14000546f:	lea    r8,[rip+0x10b2]        # 0x140006528
   140005476:	mov    rcx,QWORD PTR [rcx+0x10]
   14000547a:	call   0x140001208
   14000547f:	nop
   140005480:	lea    rax,[rip+0xffffffffffffbeb5]        # 0x14000133c
   140005487:	add    rsp,0x20
   14000548b:	pop    rbp
   14000548c:	ret    
   14000548d:	int3   
   14000548e:	int3   
   14000548f:	int3   
   140005490:	int3   
   140005491:	int3   
   140005492:	int3   
   140005493:	int3   
   140005494:	lea    rcx,[rdx+0x40]
   14000549b:	jmp    0x140002590
   1400054a0:	int3   
   1400054a1:	int3   
   1400054a2:	int3   
   1400054a3:	int3   
   1400054a4:	int3   
   1400054a5:	int3   
   1400054a6:	lea    rcx,[rdx+0x20]
   1400054ad:	jmp    0x140002590
   1400054b2:	lea    rcx,[rdx+0x98]
   1400054b9:	jmp    0x1400016dc
   1400054be:	lea    rcx,[rdx+0x28]
   1400054c5:	jmp    0x140002590
   1400054ca:	lea    rcx,[rdx+0x30]
   1400054d1:	jmp    0x140002590
   1400054d6:	int3   
   1400054d7:	int3   
   1400054d8:	int3   
   1400054d9:	int3   
   1400054da:	int3   
   1400054db:	int3   
   1400054dc:	lea    rcx,[rdx+0x28]
   1400054e3:	jmp    0x1400016dc
   1400054e8:	int3   
   1400054e9:	int3   
   1400054ea:	int3   
   1400054eb:	int3   
   1400054ec:	int3   
   1400054ed:	int3   
   1400054ee:	lea    rcx,[rdx+0x20]
   1400054f5:	jmp    0x140002590
   1400054fa:	lea    rcx,[rdx+0x98]
   140005501:	jmp    0x140002590
   140005506:	lea    rcx,[rdx+0x30]
   14000550d:	jmp    0x140002590
   140005512:	lea    rcx,[rdx+0x40]
   140005519:	jmp    0x140002590
   14000551e:	lea    rcx,[rdx+0x38]
   140005525:	jmp    0x140002590
   14000552a:	lea    rcx,[rdx+0x28]
   140005531:	jmp    0x140002590
   140005536:	int3   
   140005537:	int3   
   140005538:	int3   
   140005539:	int3   
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	lea    rcx,[rdx+0x30]
   140005543:	jmp    0x140002ae4
   140005548:	lea    rcx,[rdx+0x20]
   14000554f:	jmp    0x1400016dc
   140005554:	int3   
   140005555:	int3   
   140005556:	int3   
   140005557:	int3   
   140005558:	int3   
   140005559:	int3   
   14000555a:	lea    rcx,[rdx+0x68]
   140005561:	jmp    0x140002590
   140005566:	lea    rcx,[rdx+0x60]
   14000556d:	jmp    0x140002590
   140005572:	lea    rcx,[rdx+0x58]
   140005579:	jmp    0x140002590
   14000557e:	mov    QWORD PTR [rsp+0x10],rdx
   140005583:	push   rbp
   140005584:	sub    rsp,0x20
   140005588:	mov    rbp,rdx
   14000558b:	lea    rax,[rip+0x3a8e]        # 0x140009020
   140005592:	mov    rcx,QWORD PTR [rip+0x3a87]        # 0x140009020
   140005599:	cmp    rcx,rax
   14000559c:	je     0x1400055bf
   14000559e:	test   BYTE PTR [rcx+0x1c],0x1
   1400055a2:	je     0x1400055bf
   1400055a4:	cmp    BYTE PTR [rcx+0x19],0x2
   1400055a8:	jb     0x1400055bf
   1400055aa:	mov    edx,0x2c
   1400055af:	lea    r8,[rip+0xf72]        # 0x140006528
   1400055b6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400055ba:	call   0x140001168
   1400055bf:	call   0x140003970
   1400055c4:	nop
   1400055c5:	lea    rax,[rip+0xffffffffffffcc93]        # 0x14000225f
   1400055cc:	add    rsp,0x20
   1400055d0:	pop    rbp
   1400055d1:	ret    
   1400055d2:	int3   
   1400055d3:	int3   
   1400055d4:	int3   
   1400055d5:	int3   
   1400055d6:	int3   
   1400055d7:	int3   
   1400055d8:	int3   
   1400055d9:	mov    QWORD PTR [rsp+0x10],rdx
   1400055de:	push   rbp
   1400055df:	sub    rsp,0x40
   1400055e3:	mov    rbp,rdx
   1400055e6:	call   0x140003970
   1400055eb:	mov    DWORD PTR [rbp+0x40],eax
   1400055ee:	mov    ecx,eax
   1400055f0:	call   0x140002114
   1400055f5:	nop
   1400055f6:	lea    rax,[rip+0xffffffffffffcebc]        # 0x1400024b9
   1400055fd:	add    rsp,0x40
   140005601:	pop    rbp
   140005602:	ret    
   140005603:	int3   
   140005604:	int3   
   140005605:	int3   
   140005606:	int3   
   140005607:	int3   
   140005608:	int3   
   140005609:	int3   
   14000560a:	lea    rcx,[rdx+0x40]
   140005611:	jmp    0x140002680
   140005616:	int3   
   140005617:	int3   
   140005618:	int3   
   140005619:	int3   
   14000561a:	int3   
   14000561b:	int3   
   14000561c:	lea    rcx,[rdx+0x28]
   140005623:	jmp    0x140002c98
   140005628:	rex push rbp
   14000562a:	sub    rsp,0x20
   14000562e:	mov    rbp,rdx
   140005631:	mov    eax,DWORD PTR [rbp+0x34]
   140005634:	and    eax,0x1
   140005637:	test   eax,eax
   140005639:	je     0x140005648
   14000563b:	and    DWORD PTR [rbp+0x34],0xfffffffe
   14000563f:	mov    rcx,QWORD PTR [rbp+0x40]
   140005643:	call   0x140002590
   140005648:	add    rsp,0x20
   14000564c:	pop    rbp
   14000564d:	ret    
   14000564e:	int3   
   14000564f:	int3   
   140005650:	int3   
   140005651:	int3   
   140005652:	int3   
   140005653:	int3   
   140005654:	rex push rbp
   140005656:	sub    rsp,0x20
   14000565a:	mov    rbp,rdx
   14000565d:	mov    eax,DWORD PTR [rbp+0x30]
   140005660:	and    eax,0x1
   140005663:	test   eax,eax
   140005665:	je     0x140005677
   140005667:	and    DWORD PTR [rbp+0x30],0xfffffffe
   14000566b:	mov    rcx,QWORD PTR [rbp+0x90]
   140005672:	call   0x140002590
   140005677:	add    rsp,0x20
   14000567b:	pop    rbp
   14000567c:	ret    
   14000567d:	lea    rcx,[rdx+0x38]
   140005684:	jmp    0x140002590
   140005689:	int3   
   14000568a:	int3   
   14000568b:	int3   
   14000568c:	int3   
   14000568d:	int3   
   14000568e:	int3   
   14000568f:	mov    rcx,QWORD PTR [rdx+0x40]
   140005696:	add    rcx,0x8
   14000569a:	jmp    0x140003aa4
   14000569f:	mov    rcx,QWORD PTR [rdx+0x40]
   1400056a6:	add    rcx,0x28
   1400056aa:	jmp    0x140002af4
   1400056af:	mov    QWORD PTR [rsp+0x10],rdx
   1400056b4:	push   rbp
   1400056b5:	sub    rsp,0x20
   1400056b9:	mov    rbp,rdx
   1400056bc:	call   0x140003970
   1400056c1:	lea    rdx,[rip+0x3958]        # 0x140009020
   1400056c8:	mov    rcx,QWORD PTR [rip+0x3951]        # 0x140009020
   1400056cf:	cmp    rcx,rdx
   1400056d2:	je     0x1400056f9
   1400056d4:	test   BYTE PTR [rcx+0x1c],0x1
   1400056d8:	je     0x1400056f9
   1400056da:	cmp    BYTE PTR [rcx+0x19],0x3
   1400056de:	jb     0x1400056f9
   1400056e0:	mov    edx,0xf
   1400056e5:	mov    r9d,eax
   1400056e8:	lea    r8,[rip+0xf19]        # 0x140006608
   1400056ef:	mov    rcx,QWORD PTR [rcx+0x10]
   1400056f3:	call   0x140001208
   1400056f8:	nop
   1400056f9:	lea    rax,[rip+0xffffffffffffd8b0]        # 0x140002fb0
   140005700:	add    rsp,0x20
   140005704:	pop    rbp
   140005705:	ret    
   140005706:	int3   
   140005707:	int3   
   140005708:	int3   
   140005709:	int3   
   14000570a:	int3   
   14000570b:	int3   
   14000570c:	int3   
   14000570d:	lea    rcx,[rdx+0x30]
   140005714:	jmp    0x140002590
   140005719:	lea    rcx,[rdx+0x28]
   140005720:	jmp    0x140002590
   140005725:	int3   
   140005726:	int3   
   140005727:	int3   
   140005728:	int3   
   140005729:	int3   
   14000572a:	int3   
   14000572b:	lea    rcx,[rdx+0x48]
   140005732:	jmp    0x140002680
   140005737:	int3   
   140005738:	int3   
   140005739:	int3   
   14000573a:	int3   
   14000573b:	int3   
   14000573c:	int3   
   14000573d:	lea    rcx,[rdx+0x30]
   140005744:	jmp    0x14000404c
   140005749:	int3   
   14000574a:	int3   
   14000574b:	int3   
   14000574c:	int3   
   14000574d:	int3   
   14000574e:	int3   
   14000574f:	mov    QWORD PTR [rsp+0x10],rdx
   140005754:	push   rbx
   140005755:	push   rbp
   140005756:	sub    rsp,0x28
   14000575a:	mov    rbp,rdx
   14000575d:	lea    rax,[rip+0x38bc]        # 0x140009020
   140005764:	mov    rcx,QWORD PTR [rip+0x38b5]        # 0x140009020
   14000576b:	cmp    rcx,rax
   14000576e:	je     0x14000579a
   140005770:	test   BYTE PTR [rcx+0x1c],0x1
   140005774:	je     0x14000579a
   140005776:	cmp    BYTE PTR [rcx+0x19],0x2
   14000577a:	jb     0x14000579a
   14000577c:	mov    rbx,QWORD PTR [rbp+0x20]
   140005780:	mov    edx,0x20
   140005785:	mov    r9d,DWORD PTR [rbx]
   140005788:	lea    r8,[rip+0xe79]        # 0x140006608
   14000578f:	mov    rcx,QWORD PTR [rcx+0x10]
   140005793:	call   0x140001208
   140005798:	jmp    0x14000579e
   14000579a:	mov    rbx,QWORD PTR [rbp+0x20]
   14000579e:	mov    eax,DWORD PTR [rbx]
   1400057a0:	mov    DWORD PTR [rbp+0x50],eax
   1400057a3:	lea    rax,[rip+0xffffffffffffe1dd]        # 0x140003987
   1400057aa:	add    rsp,0x28
   1400057ae:	pop    rbp
   1400057af:	pop    rbx
   1400057b0:	ret    
   1400057b1:	int3   
   1400057b2:	mov    QWORD PTR [rsp+0x10],rdx
   1400057b7:	push   rbx
   1400057b8:	push   rbp
   1400057b9:	sub    rsp,0x28
   1400057bd:	mov    rbp,rdx
   1400057c0:	lea    rax,[rip+0x3859]        # 0x140009020
   1400057c7:	mov    rcx,QWORD PTR [rip+0x3852]        # 0x140009020
   1400057ce:	cmp    rcx,rax
   1400057d1:	je     0x1400057fd
   1400057d3:	test   BYTE PTR [rcx+0x1c],0x1
   1400057d7:	je     0x1400057fd
   1400057d9:	cmp    BYTE PTR [rcx+0x19],0x2
   1400057dd:	jb     0x1400057fd
   1400057df:	mov    edx,0x21
   1400057e4:	mov    rbx,QWORD PTR [rbp+0x28]
   1400057e8:	mov    r9d,DWORD PTR [rbx]
   1400057eb:	lea    r8,[rip+0xe16]        # 0x140006608
   1400057f2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400057f6:	call   0x140001208
   1400057fb:	jmp    0x140005801
   1400057fd:	mov    rbx,QWORD PTR [rbp+0x28]
   140005801:	mov    eax,DWORD PTR [rbx]
   140005803:	mov    DWORD PTR [rbp+0x50],eax
   140005806:	lea    rax,[rip+0xffffffffffffe17a]        # 0x140003987
   14000580d:	add    rsp,0x28
   140005811:	pop    rbp
   140005812:	pop    rbx
   140005813:	ret    
   140005814:	int3   
   140005815:	mov    QWORD PTR [rsp+0x10],rdx
   14000581a:	push   rbx
   14000581b:	push   rbp
   14000581c:	push   rdi
   14000581d:	sub    rsp,0x20
   140005821:	mov    rbp,rdx
   140005824:	lea    rcx,[rip+0x37f5]        # 0x140009020
   14000582b:	mov    rax,QWORD PTR [rip+0x37ee]        # 0x140009020
   140005832:	cmp    rax,rcx
   140005835:	je     0x14000586f
   140005837:	test   BYTE PTR [rax+0x1c],0x1
   14000583b:	je     0x14000586f
   14000583d:	cmp    BYTE PTR [rax+0x19],0x2
   140005841:	jb     0x14000586f
   140005843:	mov    rdi,QWORD PTR [rbp+0x38]
   140005847:	mov    rax,QWORD PTR [rdi]
   14000584a:	mov    rbx,QWORD PTR [rax+0x8]
   14000584e:	mov    rcx,rbx
   140005851:	call   QWORD PTR [rip+0xaf9]        # 0x140006350
   140005857:	mov    rcx,rdi
   14000585a:	call   rbx
   14000585c:	mov    r9,rax
   14000585f:	mov    rcx,QWORD PTR [rip+0x37ba]        # 0x140009020
   140005866:	mov    rcx,QWORD PTR [rcx+0x10]
   14000586a:	call   0x140002a7c
   14000586f:	mov    DWORD PTR [rbp+0x50],0x80004005
   140005876:	lea    rax,[rip+0xffffffffffffe10a]        # 0x140003987
   14000587d:	add    rsp,0x20
   140005881:	pop    rdi
   140005882:	pop    rbp
   140005883:	pop    rbx
   140005884:	ret    
   140005885:	int3   
   140005886:	mov    QWORD PTR [rsp+0x10],rdx
   14000588b:	push   rbp
   14000588c:	sub    rsp,0x20
   140005890:	mov    rbp,rdx
   140005893:	lea    rax,[rip+0x3786]        # 0x140009020
   14000589a:	mov    rcx,QWORD PTR [rip+0x377f]        # 0x140009020
   1400058a1:	cmp    rcx,rax
   1400058a4:	je     0x1400058c7
   1400058a6:	test   BYTE PTR [rcx+0x1c],0x1
   1400058aa:	je     0x1400058c7
   1400058ac:	cmp    BYTE PTR [rcx+0x19],0x2
   1400058b0:	jb     0x1400058c7
   1400058b2:	mov    edx,0x23
   1400058b7:	lea    r8,[rip+0xd4a]        # 0x140006608
   1400058be:	mov    rcx,QWORD PTR [rcx+0x10]
   1400058c2:	call   0x140001168
   1400058c7:	mov    DWORD PTR [rbp+0x50],0x80004005
   1400058ce:	lea    rax,[rip+0xffffffffffffe0b2]        # 0x140003987
   1400058d5:	add    rsp,0x20
   1400058d9:	pop    rbp
   1400058da:	ret    
   1400058db:	int3   
   1400058dc:	int3   
   1400058dd:	int3   
   1400058de:	int3   
   1400058df:	int3   
   1400058e0:	int3   
   1400058e1:	int3   
   1400058e2:	mov    rcx,QWORD PTR [rdx+0x50]
   1400058e9:	jmp    0x140002590
   1400058ee:	int3   
   1400058ef:	int3   
   1400058f0:	int3   
   1400058f1:	int3   
   1400058f2:	int3   
   1400058f3:	int3   
   1400058f4:	mov    QWORD PTR [rsp+0x10],rdx
   1400058f9:	push   rbp
   1400058fa:	sub    rsp,0x30
   1400058fe:	mov    rbp,rdx
   140005901:	mov    rdx,QWORD PTR [rbp+0x68]
   140005905:	call   0x140003cac
   14000590a:	xor    edx,edx
   14000590c:	xor    ecx,ecx
   14000590e:	call   0x140004dac
   140005913:	nop
   140005914:	int3   
   140005915:	int3   
   140005916:	int3   
   140005917:	int3   
   140005918:	int3   
   140005919:	int3   
   14000591a:	mov    QWORD PTR [rsp+0x10],rdx
   14000591f:	push   rbp
   140005920:	sub    rsp,0x20
   140005924:	mov    rbp,rdx
   140005927:	xor    edx,edx
   140005929:	xor    ecx,ecx
   14000592b:	call   0x140004dac
   140005930:	nop
   140005931:	int3   
   140005932:	int3   
   140005933:	int3   
   140005934:	int3   
   140005935:	int3   
   140005936:	int3   
   140005937:	lea    rcx,[rdx+0x38]
   14000593e:	jmp    0x1400043b4
   140005943:	int3   
   140005944:	int3   
   140005945:	int3   
   140005946:	int3   
   140005947:	int3   
   140005948:	int3   
   140005949:	rex push rbp
   14000594b:	sub    rsp,0x20
   14000594f:	mov    rbp,rdx
   140005952:	mov    eax,DWORD PTR [rbp+0x30]
   140005955:	and    eax,0x1
   140005958:	test   eax,eax
   14000595a:	je     0x140005969
   14000595c:	and    DWORD PTR [rbp+0x30],0xfffffffe
   140005960:	mov    rcx,QWORD PTR [rbp+0x50]
   140005964:	call   0x1400016dc
   140005969:	add    rsp,0x20
   14000596d:	pop    rbp
   14000596e:	ret    
   14000596f:	int3   
   140005970:	int3   
   140005971:	int3   
   140005972:	int3   
   140005973:	int3   
   140005974:	int3   
   140005975:	rex push rbp
   140005977:	sub    rsp,0x20
   14000597b:	mov    rbp,rdx
   14000597e:	mov    rax,QWORD PTR [rcx]
   140005981:	xor    ecx,ecx
   140005983:	cmp    DWORD PTR [rax],0xc0000017
   140005989:	sete   cl
   14000598c:	mov    eax,ecx
   14000598e:	add    rsp,0x20
   140005992:	pop    rbp
   140005993:	ret    
   140005994:	int3   
   140005995:	int3   
   140005996:	int3   
   140005997:	int3   
   140005998:	int3   
   140005999:	int3   
   14000599a:	int3   
   14000599b:	rex push rbp
   14000599d:	sub    rsp,0x20
   1400059a1:	mov    rbp,rdx
   1400059a4:	mov    rax,QWORD PTR [rcx]
   1400059a7:	mov    rdx,rcx
   1400059aa:	mov    ecx,DWORD PTR [rax]
   1400059ac:	call   0x140004e2e
   1400059b1:	nop
   1400059b2:	add    rsp,0x20
   1400059b6:	pop    rbp
   1400059b7:	ret    
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	int3   
   1400059bf:	rex push rbp
   1400059c1:	sub    rsp,0x20
   1400059c5:	mov    rbp,rdx
   1400059c8:	mov    ecx,0x8
   1400059cd:	call   0x1400052b4
   1400059d2:	nop
   1400059d3:	add    rsp,0x20
   1400059d7:	pop    rbp
   1400059d8:	ret    
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	rex push rbp
   1400059e2:	sub    rsp,0x20
   1400059e6:	mov    rbp,rdx
   1400059e9:	mov    rax,QWORD PTR [rcx]
   1400059ec:	xor    ecx,ecx
   1400059ee:	cmp    DWORD PTR [rax],0xc0000005
   1400059f4:	sete   cl
   1400059f7:	mov    eax,ecx
   1400059f9:	add    rsp,0x20
   1400059fd:	pop    rbp
   1400059fe:	ret    
   1400059ff:	int3   
   140005a00:	int3   
   140005a01:	int3   
   140005a02:	int3   
   140005a03:	int3   
   140005a04:	int3   
   140005a05:	int3   
   140005a06:	int3   
   140005a07:	int3   
   140005a08:	int3   
   140005a09:	int3   
   140005a0a:	int3   
   140005a0b:	int3   
   140005a0c:	int3   
   140005a0d:	int3   
   140005a0e:	int3   
   140005a0f:	int3   
   140005a10:	jmp    0x140002f8c
   140005a15:	int3   
   140005a16:	int3   
   140005a17:	int3   
   140005a18:	int3   
   140005a19:	int3   
   140005a1a:	int3   
   140005a1b:	int3   
   140005a1c:	int3   
   140005a1d:	int3   
   140005a1e:	int3   
   140005a1f:	int3   
   140005a20:	sub    rsp,0x28
   140005a24:	cmp    BYTE PTR [rip+0x3d45],0x0        # 0x140009770
   140005a2b:	lea    rax,[rip+0xa86]        # 0x1400064b8
   140005a32:	mov    QWORD PTR [rip+0x3d27],rax        # 0x140009760
   140005a39:	je     0x140005a4d
   140005a3b:	mov    rcx,QWORD PTR [rip+0x3d26]        # 0x140009768
   140005a42:	test   rcx,rcx
   140005a45:	je     0x140005a4d
   140005a47:	call   QWORD PTR [rip+0x6bb]        # 0x140006108
   140005a4d:	add    rsp,0x28
   140005a51:	ret    
   140005a52:	int3   
   140005a53:	int3   
   140005a54:	int3   
   140005a55:	int3   
   140005a56:	int3   
   140005a57:	int3   
   140005a58:	int3   
   140005a59:	int3   
   140005a5a:	int3   
   140005a5b:	int3   
   140005a5c:	int3   
   140005a5d:	int3   
   140005a5e:	int3   
   140005a5f:	int3   
   140005a60:	lea    rax,[rip+0xa21]        # 0x140006488
   140005a67:	mov    QWORD PTR [rip+0x35ba],rax        # 0x140009028
   140005a6e:	ret    
   140005a6f:	int3   
   140005a70:	int3   
   140005a71:	int3   
   140005a72:	int3   
   140005a73:	int3   
   140005a74:	int3   
   140005a75:	int3   
   140005a76:	int3   
   140005a77:	int3   
   140005a78:	int3   
   140005a79:	int3   
   140005a7a:	int3   
   140005a7b:	int3   
   140005a7c:	int3   
   140005a7d:	int3   
   140005a7e:	int3   
   140005a7f:	int3   
   140005a80:	sub    rsp,0x28
   140005a84:	lea    rcx,[rip+0x3d1d]        # 0x1400097a8
   140005a8b:	call   QWORD PTR [rip+0x667]        # 0x1400060f8
   140005a91:	mov    rcx,QWORD PTR [rip+0x3d38]        # 0x1400097d0
   140005a98:	test   rcx,rcx
   140005a9b:	je     0x140005aab
   140005a9d:	call   QWORD PTR [rip+0x7f5]        # 0x140006298
   140005aa3:	and    QWORD PTR [rip+0x3d25],0x0        # 0x1400097d0
   140005aab:	and    DWORD PTR [rip+0x3d26],0x0        # 0x1400097d8
   140005ab2:	and    DWORD PTR [rip+0x3d23],0x0        # 0x1400097dc
   140005ab9:	add    rsp,0x28
   140005abd:	ret    
   140005abe:	int3   
   140005abf:	int3   
   140005ac0:	int3   
   140005ac1:	int3   
   140005ac2:	int3   
   140005ac3:	int3   
   140005ac4:	int3   
   140005ac5:	int3   
   140005ac6:	int3   
   140005ac7:	int3   
   140005ac8:	int3   
   140005ac9:	int3   
   140005aca:	int3   
   140005acb:	int3   
   140005acc:	int3   
   140005acd:	int3   
   140005ace:	int3   
   140005acf:	int3   
   140005ad0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ad5:	mov    QWORD PTR [rsp+0x10],rsi
   140005ada:	push   rdi
   140005adb:	sub    rsp,0x20
   140005adf:	cmp    DWORD PTR [rip+0x3cfa],0x48        # 0x1400097e0
   140005ae6:	mov    rsi,QWORD PTR [rip+0x3c9b]        # 0x140009788
   140005aed:	jne    0x140005b6e
   140005aef:	mov    eax,DWORD PTR [rip+0x3d2b]        # 0x140009820
   140005af5:	xor    ebx,ebx
   140005af7:	test   eax,eax
   140005af9:	jle    0x140005b32
   140005afb:	xor    edi,edi
   140005afd:	test   rdi,rdi
   140005b00:	js     0x140005ba6
   140005b06:	cmp    ebx,eax
   140005b08:	jge    0x140005ba6
   140005b0e:	mov    rax,QWORD PTR [rip+0x3d03]        # 0x140009818
   140005b15:	mov    rdx,rsi
   140005b18:	movzx  ecx,WORD PTR [rdi+rax*1]
   140005b1c:	call   QWORD PTR [rip+0x676]        # 0x140006198
   140005b22:	mov    eax,DWORD PTR [rip+0x3cf8]        # 0x140009820
   140005b28:	inc    ebx
   140005b2a:	add    rdi,0x2
   140005b2e:	cmp    ebx,eax
   140005b30:	jl     0x140005afd
   140005b32:	mov    rcx,QWORD PTR [rip+0x3cdf]        # 0x140009818
   140005b39:	test   rcx,rcx
   140005b3c:	je     0x140005b4c
   140005b3e:	call   QWORD PTR [rip+0x754]        # 0x140006298
   140005b44:	and    QWORD PTR [rip+0x3ccc],0x0        # 0x140009818
   140005b4c:	and    DWORD PTR [rip+0x3ccd],0x0        # 0x140009820
   140005b53:	lea    rcx,[rip+0x3c8e]        # 0x1400097e8
   140005b5a:	and    DWORD PTR [rip+0x3cc3],0x0        # 0x140009824
   140005b61:	call   QWORD PTR [rip+0x591]        # 0x1400060f8
   140005b67:	and    DWORD PTR [rip+0x3c72],0x0        # 0x1400097e0
   140005b6e:	mov    rcx,QWORD PTR [rip+0x3ca3]        # 0x140009818
   140005b75:	test   rcx,rcx
   140005b78:	je     0x140005b88
   140005b7a:	call   QWORD PTR [rip+0x718]        # 0x140006298
   140005b80:	and    QWORD PTR [rip+0x3c90],0x0        # 0x140009818
   140005b88:	and    DWORD PTR [rip+0x3c91],0x0        # 0x140009820
   140005b8f:	and    DWORD PTR [rip+0x3c8e],0x0        # 0x140009824
   140005b96:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b9b:	mov    rsi,QWORD PTR [rsp+0x38]
   140005ba0:	add    rsp,0x20
   140005ba4:	pop    rdi
   140005ba5:	ret    
   140005ba6:	call   0x140004720
   140005bab:	int3   
   140005bac:	int3   
   140005bad:	int3   
   140005bae:	int3   
   140005baf:	int3   
   140005bb0:	int3   
   140005bb1:	int3   
   140005bb2:	int3   
   140005bb3:	int3   
   140005bb4:	int3   
   140005bb5:	int3   
   140005bb6:	int3   
   140005bb7:	int3   
   140005bb8:	int3   
   140005bb9:	int3   
   140005bba:	int3   
   140005bbb:	int3   
   140005bbc:	int3   
   140005bbd:	int3   
   140005bbe:	int3   
   140005bbf:	int3   
   140005bc0:	lea    rax,[rip+0x8b1]        # 0x140006478
   140005bc7:	lea    rcx,[rip+0x3582]        # 0x140009150
   140005bce:	mov    QWORD PTR [rip+0x357b],rax        # 0x140009150
   140005bd5:	jmp    0x140004d7c

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	test   al,0x7e
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	mov    eax,0x7e
   14000600d:	add    BYTE PTR [rax],al
   14000600f:	add    al,dl
   140006011:	jle    0x140006013
   140006013:	add    BYTE PTR [rax],al
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    dh,ah
   140006019:	jle    0x14000601b
   14000601b:	add    BYTE PTR [rax],al
   14000601d:	add    BYTE PTR [rax],al
   14000601f:	add    ah,bh
   140006021:	jle    0x140006023
   140006023:	add    BYTE PTR [rax],al
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    BYTE PTR [rdx],dl
   140006029:	jg     0x14000602b
   14000602b:	add    BYTE PTR [rax],al
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    BYTE PTR [rdx],ch
   140006031:	jg     0x140006033
   140006033:	add    BYTE PTR [rax],al
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    BYTE PTR [rax],bh
   140006039:	jg     0x14000603b
   14000603b:	add    BYTE PTR [rax],al
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    BYTE PTR [rsi+0x7f],al
   140006042:	add    BYTE PTR [rax],al
   140006044:	add    BYTE PTR [rax],al
   140006046:	add    BYTE PTR [rax],al
   140006048:	push   rsi
   140006049:	jg     0x14000604b
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rdx+0x7f],ch
   140006052:	add    BYTE PTR [rax],al
   140006054:	add    BYTE PTR [rax],al
   140006056:	add    BYTE PTR [rax],al
   140006058:	cmp    BYTE PTR [rdi+0x0],0x0
   14000605c:	add    BYTE PTR [rax],al
   14000605e:	add    BYTE PTR [rax],al
   140006060:	mov    ?,WORD PTR [rdi+0x0]
   140006063:	add    BYTE PTR [rax],al
   140006065:	add    BYTE PTR [rax],al
   140006067:	add    BYTE PTR [rsi+0x7f],bl
	...
   140006075:	add    BYTE PTR [rax],al
   140006077:	add    al,al
   140006079:	jg     0x14000607b
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    dl,dl
   140006081:	jg     0x140006083
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    dh,bl
   140006089:	jg     0x14000608b
   14000608b:	add    BYTE PTR [rax],al
   14000608d:	add    BYTE PTR [rax],al
   14000608f:	add    dh,ch
   140006091:	jg     0x140006093
   140006093:	add    BYTE PTR [rax],al
   140006095:	add    BYTE PTR [rax],al
   140006097:	add    dh,bh
   140006099:	jg     0x14000609b
   14000609b:	add    BYTE PTR [rax],al
   14000609d:	add    BYTE PTR [rax],al
   14000609f:	add    BYTE PTR [rax+rax*4],dl
   1400060a2:	add    BYTE PTR [rax],al
   1400060a4:	add    BYTE PTR [rax],al
   1400060a6:	add    BYTE PTR [rax],al
   1400060a8:	and    al,BYTE PTR [rax+0x0]
   1400060ae:	add    BYTE PTR [rax],al
   1400060b0:	add    BYTE PTR ss:[rax],0x0
   1400060b4:	add    BYTE PTR [rax],al
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	rex.W add BYTE PTR [rax],0x0
   1400060bc:	add    BYTE PTR [rax],al
   1400060be:	add    BYTE PTR [rax],al
   1400060c0:	pop    rax
   1400060c1:	add    BYTE PTR [rax],0x0
   1400060c4:	add    BYTE PTR [rax],al
   1400060c6:	add    BYTE PTR [rax],al
   1400060c8:	push   0x80
   1400060cd:	add    BYTE PTR [rax],al
   1400060cf:	add    BYTE PTR [rdx-0x80],bh
   1400060d2:	add    BYTE PTR [rax],al
   1400060d4:	add    BYTE PTR [rax],al
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	nop
   1400060d9:	add    BYTE PTR [rax],0x0
   1400060dc:	add    BYTE PTR [rax],al
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	mov    esp,0x84
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rsp+rax*4+0x0],ah
   1400060ee:	add    BYTE PTR [rax],al
   1400060f0:	xchg   edx,eax
   1400060f1:	test   BYTE PTR [rax],al
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rdx-0x7c],bh
   1400060fa:	add    BYTE PTR [rax],al
   1400060fc:	add    BYTE PTR [rax],al
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	pop    rsi
   140006101:	test   BYTE PTR [rax],al
   140006103:	add    BYTE PTR [rax],al
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rax-0x7c],dl
   14000610a:	add    BYTE PTR [rax],al
   14000610c:	add    BYTE PTR [rax],al
   14000610e:	add    BYTE PTR [rax],al
   140006110:	test   BYTE PTR ds:[rax],al
   140006113:	add    BYTE PTR [rax],al
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    BYTE PTR [rdx],dh
   140006119:	test   BYTE PTR [rax],al
   14000611b:	add    BYTE PTR [rax],al
   14000611d:	add    BYTE PTR [rax],al
   14000611f:	add    BYTE PTR [rsi],ah
   140006121:	test   BYTE PTR [rax],al
   140006123:	add    BYTE PTR [rax],al
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    BYTE PTR [rax],bl
   140006129:	test   BYTE PTR [rax],al
   14000612b:	add    BYTE PTR [rax],al
   14000612d:	add    BYTE PTR [rax],al
   14000612f:	add    BYTE PTR [rsp+rax*4],cl
   140006132:	add    BYTE PTR [rax],al
   140006134:	add    BYTE PTR [rax],al
   140006136:	add    BYTE PTR [rax],al
   140006138:	(bad)  
   140006139:	test   BYTE PTR [rax],al
   14000613b:	add    BYTE PTR [rax],al
   14000613d:	add    BYTE PTR [rax],al
   14000613f:	add    ah,bl
   140006141:	test   BYTE PTR [rax],al
   140006143:	add    BYTE PTR [rax],al
   140006145:	add    BYTE PTR [rax],al
   140006147:	add    dl,bh
   140006149:	test   BYTE PTR [rax],al
   14000614b:	add    BYTE PTR [rax],al
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    BYTE PTR [rsi],cl
   140006151:	test   DWORD PTR [rax],eax
   140006153:	add    BYTE PTR [rax],al
   140006155:	add    BYTE PTR [rax],al
   140006157:	add    BYTE PTR [rax],ch
   140006159:	test   DWORD PTR [rax],eax
   14000615b:	add    BYTE PTR [rax],al
   14000615d:	add    BYTE PTR [rax],al
   14000615f:	add    BYTE PTR [rsi],bh
   140006161:	test   DWORD PTR [rax],eax
   140006163:	add    BYTE PTR [rax],al
   140006165:	add    BYTE PTR [rax],al
   140006167:	add    BYTE PTR [rax-0x7b],bl
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	push   0x85
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    BYTE PTR [rbp+rax*4+0x0],al
	...
   140006186:	add    BYTE PTR [rax],al
   140006188:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140006189:	add    DWORD PTR [rax],0x0
	...
   140006198:	adc    al,BYTE PTR [rbx+0x0]
	...
   1400061a6:	add    BYTE PTR [rax],al
   1400061a8:	inc    BYTE PTR [rdx+0x0]
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	out    0x82,al
   1400061b2:	add    BYTE PTR [rax],al
   1400061b4:	add    BYTE PTR [rax],al
   1400061b6:	add    BYTE PTR [rax],al
   1400061b8:	(bad)  
   1400061b9:	(bad)  
   1400061ba:	add    BYTE PTR [rax],al
   1400061bc:	add    BYTE PTR [rax],al
   1400061be:	add    BYTE PTR [rax],al
   1400061c0:	fadd   QWORD PTR [rdx+0x0]
   1400061c6:	add    BYTE PTR [rax],al
   1400061c8:	(bad)  
   1400061c9:	(bad)  
   1400061ca:	add    BYTE PTR [rax],al
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	(bad)
   1400061d4:	add    BYTE PTR [rax],al
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	mov    esp,0x82
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    dl,dl
   1400061e1:	test   DWORD PTR [rax],eax
   1400061e3:	add    BYTE PTR [rax],al
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    BYTE PTR [rax-0x7e],bl
   1400061ea:	add    BYTE PTR [rax],al
   1400061ec:	add    BYTE PTR [rax],al
   1400061ee:	add    BYTE PTR [rax],al
   1400061f0:	rex.W (bad) 
   1400061f2:	add    BYTE PTR [rax],al
   1400061f4:	add    BYTE PTR [rax],al
   1400061f6:	add    BYTE PTR [rax],al
   1400061f8:	ss (bad) 
   1400061fa:	add    BYTE PTR [rax],al
   1400061fc:	add    BYTE PTR [rax],al
   1400061fe:	add    BYTE PTR [rax],al
   140006200:	and    al,0x82
   140006202:	add    BYTE PTR [rax],al
   140006204:	add    BYTE PTR [rax],al
   140006206:	add    BYTE PTR [rax],al
   140006208:	(bad)  
   140006209:	(bad)  
   14000620a:	add    BYTE PTR [rax],al
   14000620c:	add    BYTE PTR [rax],al
   14000620e:	add    BYTE PTR [rax],al
   140006210:	or     BYTE PTR [rdx+0x0],al
   140006216:	add    BYTE PTR [rax],al
   140006218:	(bad)  
   140006219:	(bad)  
   14000621a:	add    BYTE PTR [rax],al
   14000621c:	add    BYTE PTR [rax],al
   14000621e:	add    BYTE PTR [rax],al
   140006220:	(bad)  
   140006222:	add    BYTE PTR [rax],al
   140006224:	add    BYTE PTR [rax],al
   140006226:	add    BYTE PTR [rax],al
   140006228:	jbe    0x1400061ac
   14000622a:	add    BYTE PTR [rax],al
   14000622c:	add    BYTE PTR [rax],al
   14000622e:	add    BYTE PTR [rax],al
   140006230:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006231:	(bad)  
   140006232:	add    BYTE PTR [rax],al
   140006234:	add    BYTE PTR [rax],al
   140006236:	add    BYTE PTR [rax],al
   140006238:	cld    
   140006239:	add    DWORD PTR [rax],0x0
   14000623f:	add    ah,bl
   140006241:	add    DWORD PTR [rax],0x0
   140006247:	add    dh,al
   140006249:	add    DWORD PTR [rax],0x0
   14000624f:	add    BYTE PTR [rcx+rax*4+0x0],bh
   140006256:	add    BYTE PTR [rax],al
   140006258:	scas   al,BYTE PTR es:[rdi]
   140006259:	add    DWORD PTR [rax],0x0
   14000625f:	add    BYTE PTR [rax+0x81],ah
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    BYTE PTR [rcx+rax*4+0x0],dl
   14000626e:	add    BYTE PTR [rax],al
   140006270:	xchg   BYTE PTR [rcx+0x0],al
   140006276:	add    BYTE PTR [rax],al
   140006278:	js     0x1400061fb
   14000627a:	add    BYTE PTR [rax],al
   14000627c:	add    BYTE PTR [rax],al
   14000627e:	add    BYTE PTR [rax],al
   140006280:	pop    rdx
   140006281:	add    DWORD PTR [rax],0x0
   140006287:	add    BYTE PTR [rdx],bh
   140006289:	add    DWORD PTR [rax],0x0
   14000628f:	add    BYTE PTR [rdx],ah
   140006291:	add    DWORD PTR [rax],0x0
   140006297:	add    BYTE PTR [rdx],bl
   140006299:	add    DWORD PTR [rax],0x0
   14000629f:	add    BYTE PTR [rax],dl
   1400062a1:	add    DWORD PTR [rax],0x0
   1400062a7:	add    dl,dh
   1400062a9:	add    BYTE PTR [rax],0x0
   1400062ac:	add    BYTE PTR [rax],al
   1400062ae:	add    BYTE PTR [rax],al
   1400062b0:	out    0x80,al
   1400062b2:	add    BYTE PTR [rax],al
   1400062b4:	add    BYTE PTR [rax],al
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	fiadd  DWORD PTR [rax+0x0]
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	(bad)  
   1400062c1:	add    BYTE PTR [rax],0x0
   1400062c4:	add    BYTE PTR [rax],al
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	mov    esi,0x80
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    BYTE PTR [rax-0x7e],dl
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	add    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	call   0x140006362
	...
   1400062e5:	add    BYTE PTR [rax],al
   1400062e7:	add    dh,ch
   1400062e9:	add    DWORD PTR [rax],0x0
   1400062ec:	add    BYTE PTR [rax],al
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	(bad)  
   1400062f1:	add    DWORD PTR [rax],0x0
   1400062f4:	add    BYTE PTR [rax],al
   1400062f6:	add    BYTE PTR [rax],al
   1400062f8:	rol    BYTE PTR [rbx+0x0],0x0
   1400062ff:	add    BYTE PTR [rax+0x85],dh
   140006305:	add    BYTE PTR [rax],al
   140006307:	add    BYTE PTR [rax+0x85],bl
	...
   140006315:	add    BYTE PTR [rax],al
   140006317:	add    BYTE PTR [rsi-0x7d],dl
   14000631a:	add    BYTE PTR [rax],al
   14000631c:	add    BYTE PTR [rax],al
   14000631e:	add    BYTE PTR [rax],al
   140006320:	rex.R add DWORD PTR [rax],0x0
   140006324:	add    BYTE PTR [rax],al
   140006326:	add    BYTE PTR [rax],al
   140006328:	mov    BYTE PTR [rbx+0x0],al
   14000632e:	add    BYTE PTR [rax],al
   140006330:	xor    al,BYTE PTR [rbx+0x0]
   140006336:	add    BYTE PTR [rax],al
   140006338:	add    WORD PTR [rax],0x0
   14000633c:	add    BYTE PTR [rax],al
   14000633e:	add    BYTE PTR [rax],al
   140006340:	js     0x1400062c5
	...
   14000634e:	add    BYTE PTR [rax],al
   140006350:	loopne 0x1400063a2
   140006352:	add    BYTE PTR [rax+0x1],al
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rax],ah
   140006359:	push   rsp
   14000635a:	add    BYTE PTR [rax+0x1],al
	...
   140006365:	add    BYTE PTR [rax],al
   140006367:	add    al,ah
   140006369:	rex.WB add BYTE PTR [r8+0x1],al
   14000636d:	add    BYTE PTR [rax],al
   14000636f:	add    BYTE PTR [rax],al
   140006371:	adc    BYTE PTR [rax],al
   140006373:	rex add DWORD PTR [rax],eax
   140006376:	add    BYTE PTR [rax],al
   140006378:	adc    BYTE PTR [rax],al
   14000637b:	rex add DWORD PTR [rax],eax
   14000637e:	add    BYTE PTR [rax],al
   140006380:	push   rax
   140006381:	adc    BYTE PTR [rax],al
   140006383:	rex add DWORD PTR [rax],eax
   140006386:	add    BYTE PTR [rax],al
   140006388:	lock adc BYTE PTR [rax],al
   14000638b:	rex add DWORD PTR [rax],eax
	...
   14000639e:	add    BYTE PTR [rax],al
   1400063a0:	add    BYTE PTR [rcx+0x0],cl
   1400063a3:	rex add DWORD PTR [rax],eax
   1400063a6:	add    BYTE PTR [rax],al
   1400063a8:	adc    BYTE PTR [rsi+0x0],cl
   1400063ab:	rex add DWORD PTR [rax],eax
	...
   1400063b6:	add    BYTE PTR [rax],al
   1400063b8:	add    BYTE PTR [rax],dl
   1400063ba:	add    BYTE PTR [rax],al
   1400063bc:	adc    BYTE PTR [rax],al
   1400063bf:	add    BYTE PTR [rax+0x10],dl
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	lock adc BYTE PTR [rax],al
   1400063c7:	add    BYTE PTR [rax+0x12],dl
   1400063ca:	add    BYTE PTR [rax],al
   1400063cc:	rex (bad) 
   1400063ce:	add    BYTE PTR [rax],al
   1400063d0:	loopne 0x140006415
   1400063d2:	add    BYTE PTR [rax],al
   1400063d4:	add    BYTE PTR [rax+rax*1+0x0],0xb0
   1400063d9:	add    BYTE PTR [rax],r8b
   1400063dc:	push   rax
   1400063dd:	add    BYTE PTR [r8],r8b
   1400063e0:	(bad)  
   1400063e1:	add    BYTE PTR [r8],r8b
   1400063e4:	jo     0x14000642b
   1400063e6:	add    BYTE PTR [rax],al
   1400063e8:	movabs al,ds:0xf0000045c0000045
   1400063f1:	add    BYTE PTR [r8],r8b
   1400063f4:	rex
   1400063f5:	rex.RX add BYTE PTR [rax],r8b
   1400063f8:	(bad)  
   1400063f9:	rex.RX add BYTE PTR [rax],r8b
   1400063fc:	rol    BYTE PTR [rdi+0x0],1
   1400063ff:	add    BYTE PTR [rax],al
   140006401:	rex.WB add BYTE PTR [r8],al
   140006404:	loopne 0x14000644f
   140006406:	add    BYTE PTR [rax],al
   140006408:	adc    BYTE PTR [rax+rax*1+0x0],cl
   14000640c:	xor    BYTE PTR [rbp+0x0],cl
   14000640f:	add    BYTE PTR [rax+0x4d],dh
   140006412:	add    BYTE PTR [rax],al
   140006414:	ror    BYTE PTR [rbp+0x0],1
   140006417:	add    BYTE PTR [rax],dl
   140006419:	rex.WRX add BYTE PTR [rax],r8b
   14000641c:	lock rex.WRX add BYTE PTR [rax],r8b
   140006420:	loopne 0x140006472
   140006422:	add    BYTE PTR [rax],al
   140006424:	xor    BYTE PTR [rcx+0x0],dl
   140006427:	add    BYTE PTR [rax],dl
   140006429:	pop    rdx
   14000642a:	add    BYTE PTR [rax],al
   14000642c:	and    BYTE PTR [rdx+0x0],bl
   14000642f:	add    BYTE PTR [rax+0x5a],ah
   140006432:	add    BYTE PTR [rax],al
   140006434:	sbb    BYTE PTR [rdx+0x0],0x0
   140006438:	rcr    BYTE PTR [rdx+0x0],1
   14000643b:	add    al,al
   14000643d:	pop    rbx
   14000643e:	add    BYTE PTR [rax],al
   140006440:	rol    BYTE PTR [rdi+0x0],1
   140006443:	rex add DWORD PTR [rax],eax
   140006446:	add    BYTE PTR [rax],al
   140006448:	jo     0x140006497
   14000644a:	add    BYTE PTR [rax+0x1],al
   14000644d:	add    BYTE PTR [rax],al
   14000644f:	add    BYTE PTR [rdx+0x61],ah
   140006452:	and    BYTE PTR fs:[rcx+0x6c],ah
   140006456:	ins    BYTE PTR es:[rdi],dx
   140006457:	outs   dx,DWORD PTR ds:[rsi]
   140006458:	movsxd esp,DWORD PTR [rcx+0x74]
   14000645b:	imul   ebp,DWORD PTR [rdi+0x6e],0x4d300000
   140006462:	add    BYTE PTR [rax+0x1],al
   140006465:	add    BYTE PTR [rax],al
   140006467:	add    BYTE PTR [rax+0x1400091],dh
   14000646d:	add    BYTE PTR [rax],al
   14000646f:	add    BYTE PTR [rax-0x6e],dl
   140006472:	add    BYTE PTR [rax+0x1],al
   140006475:	add    BYTE PTR [rax],al
   140006477:	add    BYTE PTR [rax+0x3f],al
   14000647a:	add    BYTE PTR [rax+0x1],al
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rax+0x4d],dh
   140006482:	add    BYTE PTR [rax+0x1],al
   140006485:	add    BYTE PTR [rax],al
   140006487:	add    al,ah
   140006489:	rex.XB add BYTE PTR [r8+0x1],al
   14000648d:	add    BYTE PTR [rax],al
   14000648f:	add    BYTE PTR [rax+0x1400044],al
   140006495:	add    BYTE PTR [rax],al
   140006497:	add    BYTE PTR [rax+0x1400044],dh
   14000649d:	add    BYTE PTR [rax],al
   14000649f:	add    BYTE PTR [rax+0x45],dl
   1400064a2:	add    BYTE PTR [rax+0x1],al
   1400064a5:	add    BYTE PTR [rax],al
   1400064a7:	add    BYTE PTR [rax+0x45],ah
   1400064aa:	add    BYTE PTR [rax+0x1],al
   1400064ad:	add    BYTE PTR [rax],al
   1400064af:	add    BYTE PTR [rax+0x45],dh
   1400064b2:	add    BYTE PTR [rax+0x1],al
   1400064b5:	add    BYTE PTR [rax],al
   1400064b7:	add    BYTE PTR [rax+0x1400045],ah
   1400064bd:	add    BYTE PTR [rax],al
   1400064bf:	add    al,al
   1400064c1:	add    BYTE PTR [r8+0x1],r8b
   1400064c5:	add    BYTE PTR [rax],al
   1400064c7:	add    al,dh
   1400064c9:	add    BYTE PTR [r8+0x1],r8b
   1400064cd:	add    BYTE PTR [rax],al
   1400064cf:	add    BYTE PTR [rax+0x46],al
   1400064d2:	add    BYTE PTR [rax+0x1],al
   1400064d5:	add    BYTE PTR [rax],al
   1400064d7:	add    BYTE PTR [rax+0x46],ah
   1400064da:	add    BYTE PTR [rax+0x1],al
   1400064dd:	add    BYTE PTR [rax],al
   1400064df:	add    BYTE PTR [rax+rax*1],bh
   1400064e2:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   1400064e6:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   1400064eb:	add    BYTE PTR [rax],al
   1400064ed:	add    BYTE PTR [rax],al
   1400064ef:	add    BYTE PTR [rsi+0x0],cl
   1400064f2:	push   rbp
   1400064f3:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   1400064ff:	add    BYTE PTR [rbp+0x0],ah
   140006502:	outs   dx,BYTE PTR ds:[rsi]
   140006503:	add    BYTE PTR [rcx+0x0],ah
   140006506:	(bad)  
   140006507:	add    BYTE PTR [rax+rax*1+0x65],ch
   14000650b:	add    BYTE PTR [rax],al
   14000650d:	add    BYTE PTR [rax],al
   14000650f:	add    BYTE PTR [rax+rax*1+0x69],ah
   140006513:	add    BYTE PTR [rbx+0x0],dh
   140006516:	(bad)  
   140006517:	add    BYTE PTR [rdx+0x0],ah
   14000651a:	ins    BYTE PTR es:[rdi],dx
   14000651b:	add    BYTE PTR [rbp+0x0],ah
   14000651e:	add    BYTE PTR [rax],al
   140006520:	(bad)  
   140006521:	add    BYTE PTR [rax],al
   140006523:	add    BYTE PTR [rax],al
   140006525:	add    BYTE PTR [rax],al
   140006527:	add    BYTE PTR [rsi+rdi*2-0x57],ah
   14000652b:	(bad)  
   14000652c:	(bad)  
   14000652e:	mov    ebp,0xdc707b49
   140006533:	pop    rcx
   140006534:	mov    ecx,0x62589df8
   140006539:	rcr    dh,0xa8
   14000653c:	push   rbp
   14000653d:	push   rcx
   14000653e:	leave  
   14000653f:	movabs rsi,0x4e73107d47480a86
   140006549:	push   rbp
   14000654a:	rex.WR
   14000654b:	rex.WR add BYTE PTR [rax],r8b
   14000654e:	add    BYTE PTR [rax],al
   140006550:	jo     0x140006552
   140006552:	ja     0x140006554
   140006554:	ins    BYTE PTR es:[rdi],dx
   140006555:	add    BYTE PTR [rcx+0x0],ah
   140006558:	jne    0x14000655a
   14000655a:	outs   dx,BYTE PTR ds:[rsi]
   14000655b:	add    BYTE PTR [rbx+0x0],ah
   14000655e:	push   0x72006500
   140006563:	add    BYTE PTR [rsi],ch
   140006565:	add    BYTE PTR [rbp+0x0],ah
   140006568:	js     0x14000656a
   14000656a:	add    BYTE PTR gs:[rip+0x50005700],ch        # 0x19000bc71
   140006571:	add    BYTE PTR [rax+0x0],dl
   140006574:	sub    eax,0x77002500
   140006579:	add    BYTE PTR [rbx+0x0],dh
   14000657c:	add    BYTE PTR [rax],al
   14000657e:	add    BYTE PTR [rax],al
   140006580:	jo     0x140006582
   140006582:	ja     0x140006584
   140006584:	ins    BYTE PTR es:[rdi],dx
   140006585:	add    BYTE PTR [rcx+0x0],ah
   140006588:	jne    0x14000658a
   14000658a:	outs   dx,BYTE PTR ds:[rsi]
   14000658b:	add    BYTE PTR [rbx+0x0],ah
   14000658e:	push   0x72006500
   140006593:	add    BYTE PTR [rsi],ch
   140006595:	add    BYTE PTR [rbp+0x0],ah
   140006598:	js     0x14000659a
   14000659a:	add    BYTE PTR gs:[rip+0x50005700],ch        # 0x19000bca1
   1400065a1:	add    BYTE PTR [rax+0x0],dl
   1400065a4:	rex.WR add BYTE PTR [rdi+0x0],r13b
   1400065a8:	add    BYTE PTR [eip+0x64002500],ch        # 0x1a4008aaf
   1400065af:	add    BYTE PTR [rsi],ch
   1400065b1:	add    BYTE PTR [rip+0x2e006400],ah        # 0x16e00c9b7
   1400065b7:	add    BYTE PTR [rip+0x2d006400],ah        # 0x16d00c9bd
   1400065bd:	add    BYTE PTR [rip+0x75006c00],ah        # 0x1b500d1c3
   1400065c3:	add    BYTE PTR [rsi],ch
   1400065c5:	add    BYTE PTR [rbp+0x0],ah
   1400065c8:	je     0x1400065ca
   1400065ca:	ins    BYTE PTR es:[rdi],dx
   1400065cb:	add    BYTE PTR [rax],al
   1400065cd:	add    BYTE PTR [rax],al
   1400065cf:	add    BYTE PTR [rsi+0x65],dh
   1400065d2:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400065d6:	cmp    al,0x54
   1400065d8:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   1400065dd:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   1400065e1:	add    BYTE PTR [eax],al
   1400065e4:	add    BYTE PTR [rax],al
   1400065e6:	add    BYTE PTR [rax],al
   1400065e8:	outs   dx,DWORD PTR ds:[rsi]
   1400065e9:	call   0x152ceb4a8
   1400065ee:	jno    0x14000663d
   1400065f0:	cwde   
   1400065f1:	mov    ah,0x87
   1400065f3:	cmp    DWORD PTR [rcx],edx
   1400065f5:	mov    ebx,0xc062e82c
   1400065fa:	fisubr WORD PTR [rax+0x48c95155]
   140006600:	mov    esi,0x47480a86
   140006605:	jge    0x140006617
   140006607:	jae    0x140006610
   140006609:	add    ecx,DWORD PTR [rdx]
   14000660b:	hlt    
   14000660c:	jo     0x1400065d0
   14000660e:	sbb    edx,ebx
   140006610:	(bad)  
   140006611:	movabs ds:0x257768b532e17d,al
   14000661a:	jae    0x14000661c
   14000661c:	add    BYTE PTR [rax],al
   14000661e:	add    BYTE PTR [rax],al
   140006620:	add    BYTE PTR cs:[rip+0x7500],ah        # 0x14000db27
   140006627:	add    dh,bl
   140006629:	or     eax,0xfe4cfa8e
   14000662e:	jmp    0x140006603
   140006630:	or     eax,0x6e7f243c
   140006635:	mov    DWORD PTR [rbp-0x6f],ebx
	...
   140006640:	push   rbx
   140006641:	add    BYTE PTR [rdi+0x0],ch
   140006644:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140006649:	add    BYTE PTR [rcx+0x0],ah
   14000664c:	jb     0x14000664e
   14000664e:	add    BYTE PTR gs:[rax+rax*1+0x50],bl
   140006653:	add    BYTE PTR [rdi+0x0],ch
   140006656:	ins    BYTE PTR es:[rdi],dx
   140006657:	add    BYTE PTR [rcx+0x0],ch
   14000665a:	movsxd eax,DWORD PTR [rax]
   14000665c:	imul   eax,DWORD PTR [rax],0x730065
   140006662:	pop    rsp
   140006663:	add    BYTE PTR [rbp+0x0],cl
   140006666:	imul   eax,DWORD PTR [rax],0x720063
   14000666c:	outs   dx,DWORD PTR ds:[rsi]
   14000666d:	add    BYTE PTR [rbx+0x0],dh
   140006670:	outs   dx,DWORD PTR ds:[rsi]
   140006671:	add    BYTE PTR [rsi+0x0],ah
   140006674:	je     0x140006676
   140006676:	pop    rsp
   140006677:	add    BYTE PTR [rax+0x0],dl
   14000667a:	outs   dx,DWORD PTR ds:[rsi]
   14000667b:	add    BYTE PTR [rdx+0x0],dh
   14000667e:	je     0x140006680
   140006680:	(bad)  
   140006681:	add    BYTE PTR [rdx+0x0],ah
   140006684:	ins    BYTE PTR es:[rdi],dx
   140006685:	add    BYTE PTR [rbp+0x0],ah
   140006688:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   14000668c:	add    BYTE PTR gs:[rdx+0x0],dh
   140006690:	(bad)  
   140006691:	add    BYTE PTR [rax+rax*1+0x69],dh
   140006695:	add    BYTE PTR [rsi+0x0],ch
   140006698:	add    BYTE PTR [ebx+0x0],dl
   14000669c:	jns    0x14000669e
   14000669e:	jae    0x1400066a0
   1400066a0:	je     0x1400066a2
   1400066a2:	add    BYTE PTR gs:[rbp+0x0],ch
   1400066a6:	add    BYTE PTR [rax],al
   1400066a8:	rex.WR add BYTE PTR [rcx+0x0],r12b
   1400066ac:	jne    0x1400066ae
   1400066ae:	outs   dx,BYTE PTR ds:[rsi]
   1400066af:	add    BYTE PTR [rbx+0x0],ah
   1400066b2:	push   0x72006500
	...
   1400066bf:	add    BYTE PTR [rbx],ah
   1400066c1:	cmp    ebp,DWORD PTR [rbx-0x53]
   1400066c4:	rex.WX (bad) 
   1400066c6:	sub    al,0x4b
   1400066c8:	sbb    DWORD PTR [rdi-0x4b63eb3f],0x2e
   1400066cf:	jg     0x14000669c
   1400066d1:	mov    ch,bl
   1400066d3:	loopne 0x1400066c4
   1400066d5:	mov    dh,0x40
   1400066d7:	jne    0x1400066eb
   1400066d9:	addr32 icebp 
   1400066db:	cmp    eax,0xc2ac672
   1400066e0:	add    eax,0xf0698f7d
   1400066e5:	(bad)  
   1400066e6:	add    cl,BYTE PTR [rcx-0x76]
   1400066e9:	movsxd ebp,DWORD PTR [rsi-0x38b22b09]
   1400066ef:	cld    
   1400066f0:	loopne 0x14000672f
   1400066f2:	cmp    QWORD PTR [rdi+0x3c],r13
   1400066f6:	rcl    BYTE PTR [rcx],cl
   1400066f8:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   1400066ff:	mov    bh,0x22
   140006701:	add    eax,0x11993
   140006706:	add    BYTE PTR [rax],al
   140006708:	rex jb 0x14000670b
	...
   140006713:	add    BYTE PTR [rbx],al
   140006715:	add    BYTE PTR [rax],al
   140006717:	add    BYTE PTR [rax+0x72],cl
   14000671a:	add    BYTE PTR [rax],al
   14000671c:	push   rax
   14000671d:	add    BYTE PTR [rax],al
   14000671f:	add    BYTE PTR [rax],al
   140006721:	add    BYTE PTR [rax],al
   140006723:	add    BYTE PTR [rcx],al
   140006725:	add    BYTE PTR [rax],al
   140006727:	add    BYTE PTR [rdx],ah
   140006729:	add    eax,0x21993
   14000672e:	add    BYTE PTR [rax],al
   140006730:	or     BYTE PTR [rsi+0x0],ch
   140006733:	add    BYTE PTR [rcx],al
   140006735:	add    BYTE PTR [rax],al
   140006737:	add    ah,al
   140006739:	jno    0x14000673b
   14000673b:	add    BYTE PTR [rsi],al
   14000673d:	add    BYTE PTR [rax],al
   14000673f:	add    al,dh
   140006741:	jno    0x140006743
   140006743:	add    BYTE PTR [rax+0x0],bl
   140006746:	add    BYTE PTR [rax],al
   140006748:	add    BYTE PTR [rax],al
   14000674a:	add    BYTE PTR [rax],al
   14000674c:	add    DWORD PTR [rax],eax
   14000674e:	add    BYTE PTR [rax],al
   140006750:	and    al,BYTE PTR [rip+0x51993]        # 0x1400580e9
   140006756:	add    BYTE PTR [rax],al
   140006758:	fdiv   DWORD PTR [rax+0x0]
   14000675b:	add    BYTE PTR [rcx],al
   14000675d:	add    BYTE PTR [rax],al
   14000675f:	add    BYTE PTR [rax],al
   140006761:	jno    0x140006763
   140006763:	add    BYTE PTR [rax+rax*1],cl
   140006766:	add    BYTE PTR [rax],al
   140006768:	xor    BYTE PTR [rcx+0x0],dh
   14000676b:	add    BYTE PTR [rax],ah
   14000676d:	add    BYTE PTR [rax],al
   14000676f:	add    BYTE PTR [rax],al
   140006771:	add    BYTE PTR [rax],al
   140006773:	add    BYTE PTR [rcx],al
   140006775:	add    BYTE PTR [rax],al
   140006777:	add    BYTE PTR [rdx],ah
   140006779:	add    eax,0x21993
   14000677e:	add    BYTE PTR [rax],al
   140006780:	test   BYTE PTR [rax+0x0],dh
	...
   14000678b:	add    BYTE PTR [rip+0xffffffff98000000],al        # 0xd8006791
   140006791:	jo     0x140006793
   140006793:	add    BYTE PTR [rax],ch
   140006795:	add    BYTE PTR [rax],al
   140006797:	add    BYTE PTR [rax],al
   140006799:	add    BYTE PTR [rax],al
   14000679b:	add    BYTE PTR [rcx],al
   14000679d:	add    BYTE PTR [rax],al
   14000679f:	add    BYTE PTR [rdx],ah
   1400067a1:	add    eax,0x61993
   1400067a6:	add    BYTE PTR [rax],al
   1400067a8:	int3   
   1400067a9:	outs   dx,DWORD PTR ds:[rsi]
	...
   1400067b2:	add    BYTE PTR [rax],al
   1400067b4:	or     eax,0x0
   1400067b9:	jo     0x1400067bb
   1400067bb:	add    BYTE PTR [rax+0x0],cl
   1400067be:	add    BYTE PTR [rax],al
   1400067c0:	add    BYTE PTR [rax],al
   1400067c2:	add    BYTE PTR [rax],al
   1400067c4:	add    DWORD PTR [rax],eax
   1400067c6:	add    BYTE PTR [rax],al
   1400067c8:	and    al,BYTE PTR [rip+0x11993]        # 0x140018161
   1400067ce:	add    BYTE PTR [rax],al
   1400067d0:	jo     0x140006841
	...
   1400067da:	add    BYTE PTR [rax],al
   1400067dc:	(bad)  
   1400067dd:	add    BYTE PTR [rax],al
   1400067df:	add    BYTE PTR [rax+0x6f],bh
   1400067e2:	add    BYTE PTR [rax],al
   1400067e4:	xor    BYTE PTR [rax],al
   1400067e6:	add    BYTE PTR [rax],al
   1400067e8:	add    BYTE PTR [rax],al
   1400067ea:	add    BYTE PTR [rax],al
   1400067ec:	add    DWORD PTR [rax],eax
   1400067ee:	add    BYTE PTR [rax],al
   1400067f0:	and    al,BYTE PTR [rip+0x41993]        # 0x140048189
   1400067f6:	add    BYTE PTR [rax],al
   1400067f8:	fsubr  QWORD PTR [rsi+0x0]
	...
   140006803:	add    BYTE PTR [rcx],cl
   140006805:	add    BYTE PTR [rax],al
   140006807:	add    BYTE PTR [rax],al
   140006809:	outs   dx,DWORD PTR ds:[rsi]
   14000680a:	add    BYTE PTR [rax],al
   14000680c:	cmp    BYTE PTR [rax],al
   14000680e:	add    BYTE PTR [rax],al
   140006810:	add    BYTE PTR [rax],al
   140006812:	add    BYTE PTR [rax],al
   140006814:	add    DWORD PTR [rax],eax
   140006816:	add    BYTE PTR [rax],al
   140006818:	and    al,BYTE PTR [rip+0x11993]        # 0x1400181b1
   14000681e:	add    BYTE PTR [rax],al
   140006820:	pushf  
   140006821:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000682a:	add    BYTE PTR [rax],al
   14000682c:	add    eax,DWORD PTR [rax]
   14000682e:	add    BYTE PTR [rax],al
   140006830:	test   al,0x6e
   140006832:	add    BYTE PTR [rax],al
   140006834:	and    BYTE PTR [rax],al
   140006836:	add    BYTE PTR [rax],al
   140006838:	add    BYTE PTR [rax],al
   14000683a:	add    BYTE PTR [rax],al
   14000683c:	add    DWORD PTR [rax],eax
   14000683e:	add    BYTE PTR [rax],al
   140006840:	and    al,BYTE PTR [rip+0x21993]        # 0x1400281d9
   140006846:	add    BYTE PTR [rax],al
   140006848:	or     BYTE PTR [rsi+0x0],ch
   14000684b:	add    BYTE PTR [rcx],al
   14000684d:	add    BYTE PTR [rax],al
   14000684f:	add    BYTE PTR [rax],bl
   140006851:	outs   dx,BYTE PTR ds:[rsi]
   140006852:	add    BYTE PTR [rax],al
   140006854:	(bad)  
   140006855:	add    BYTE PTR [rax],al
   140006857:	add    BYTE PTR [rax+0x6e],al
   14000685a:	add    BYTE PTR [rax],al
   14000685c:	and    BYTE PTR [rax],al
   14000685e:	add    BYTE PTR [rax],al
   140006860:	add    BYTE PTR [rax],al
   140006862:	add    BYTE PTR [rax],al
   140006864:	add    DWORD PTR [rax],eax
   140006866:	add    BYTE PTR [rax],al
   140006868:	and    al,BYTE PTR [rip+0x21993]        # 0x140028201
   14000686e:	add    BYTE PTR [rax],al
   140006870:	or     BYTE PTR [rsi+0x0],ch
   140006873:	add    BYTE PTR [rcx],al
   140006875:	add    BYTE PTR [rax],al
   140006877:	add    BYTE PTR [rax],ah
   140006879:	ja     0x14000687b
   14000687b:	add    BYTE PTR [rip+0x48000000],al        # 0x188006881
   140006881:	ja     0x140006883
   140006883:	add    BYTE PTR [rax],ah
   140006885:	add    BYTE PTR [rax],al
   140006887:	add    BYTE PTR [rax],al
   140006889:	add    BYTE PTR [rax],al
   14000688b:	add    BYTE PTR [rcx],al
   14000688d:	add    BYTE PTR [rax],al
   14000688f:	add    BYTE PTR [rdx],ah
   140006891:	add    eax,0x21993
   140006896:	add    BYTE PTR [rax],al
   140006898:	or     BYTE PTR [rsi+0x0],ch
   14000689b:	add    BYTE PTR [rcx],al
   14000689d:	add    BYTE PTR [rax],al
   14000689f:	add    BYTE PTR [rsi+rsi*2+0x50000],al
   1400068a6:	add    BYTE PTR [rax],al
   1400068a8:	mov    al,0x76
   1400068aa:	add    BYTE PTR [rax],al
   1400068ac:	xor    BYTE PTR [rax],al
   1400068ae:	add    BYTE PTR [rax],al
   1400068b0:	add    BYTE PTR [rax],al
   1400068b2:	add    BYTE PTR [rax],al
   1400068b4:	add    DWORD PTR [rax],eax
   1400068b6:	add    BYTE PTR [rax],al
   1400068b8:	and    al,BYTE PTR [rip+0x11993]        # 0x140018251
   1400068be:	add    BYTE PTR [rax],al
   1400068c0:	rex.W jbe 0x1400068c3
	...
   1400068cb:	add    BYTE PTR [rbx],al
   1400068cd:	add    BYTE PTR [rax],al
   1400068cf:	add    BYTE PTR [rax+0x76],dl
   1400068d2:	add    BYTE PTR [rax],al
   1400068d4:	and    BYTE PTR [rax],al
   1400068d6:	add    BYTE PTR [rax],al
   1400068d8:	add    BYTE PTR [rax],al
   1400068da:	add    BYTE PTR [rax],al
   1400068dc:	add    DWORD PTR [rax],eax
   1400068de:	add    BYTE PTR [rax],al
   1400068e0:	and    al,BYTE PTR [rip+0x21993]        # 0x140028279
   1400068e6:	add    BYTE PTR [rax],al
   1400068e8:	xor    al,0x73
	...
   1400068f2:	add    BYTE PTR [rax],al
   1400068f4:	(bad)  
   1400068f5:	add    BYTE PTR [rax],al
   1400068f7:	add    BYTE PTR [rax+0x73],cl
   1400068fa:	add    BYTE PTR [rax],al
   1400068fc:	add    BYTE PTR [rax],al
   1400068ff:	add    BYTE PTR [rax],al
   140006901:	add    BYTE PTR [rax],al
   140006903:	add    BYTE PTR [rcx],al
   140006905:	add    BYTE PTR [rax],al
   140006907:	add    BYTE PTR [rdx],ah
   140006909:	add    eax,0x21993
   14000690e:	add    BYTE PTR [rax],al
   140006910:	loopne 0x140006984
	...
   14000691a:	add    BYTE PTR [rax],al
   14000691c:	add    al,0x0
   14000691e:	add    BYTE PTR [rax],al
   140006920:	lock jb 0x140006923
   140006923:	add    BYTE PTR [rax],bh
   140006925:	add    BYTE PTR [rax],al
   140006927:	add    BYTE PTR [rax],al
   140006929:	add    BYTE PTR [rax],al
   14000692b:	add    BYTE PTR [rcx],al
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    BYTE PTR [rdx],ah
   140006931:	add    eax,0x21993
   140006936:	add    BYTE PTR [rax],al
   140006938:	rex.R je 0x14000693b
	...
   140006943:	add    BYTE PTR [rip+0x58000000],al        # 0x198006949
   140006949:	je     0x14000694b
   14000694b:	add    BYTE PTR [rax],bh
   14000694d:	add    BYTE PTR [rax],al
   14000694f:	add    BYTE PTR [rax],al
   140006951:	add    BYTE PTR [rax],al
   140006953:	add    BYTE PTR [rcx],al
   140006955:	add    BYTE PTR [rax],al
   140006957:	add    BYTE PTR [rdx],ah
   140006959:	add    eax,0x21993
   14000695e:	add    BYTE PTR [rax],al
   140006960:	or     BYTE PTR [rsi+0x0],ch
   140006963:	add    BYTE PTR [rcx],al
   140006965:	add    BYTE PTR [rax],al
   140006967:	add    BYTE PTR [rsi*2+0xc0000],ah
   14000696e:	add    BYTE PTR [rax],al
   140006970:	nop
   140006971:	jne    0x140006973
   140006973:	add    BYTE PTR [rax],dh
   140006975:	add    BYTE PTR [rax],al
   140006977:	add    BYTE PTR [rax],al
   140006979:	add    BYTE PTR [rax],al
   14000697b:	add    BYTE PTR [rcx],al
   14000697d:	add    BYTE PTR [rax],al
   14000697f:	add    BYTE PTR [rdx],ah
   140006981:	add    eax,0x41993
   140006986:	add    BYTE PTR [rax],al
   140006988:	mov    BYTE PTR [rbx+0x0],dh
   14000698b:	add    BYTE PTR [rcx],al
   14000698d:	add    BYTE PTR [rax],al
   14000698f:	add    BYTE PTR [rax+0x7000073],ch
   140006995:	add    BYTE PTR [rax],al
   140006997:	add    al,dl
   140006999:	jae    0x14000699b
   14000699b:	add    BYTE PTR [rax],ah
   14000699d:	add    BYTE PTR [rax],al
   14000699f:	add    BYTE PTR [rax],al
   1400069a1:	add    BYTE PTR [rax],al
   1400069a3:	add    BYTE PTR [rcx],al
   1400069a5:	add    BYTE PTR [rax],al
   1400069a7:	add    BYTE PTR [rdx],ah
   1400069a9:	add    eax,0x11993
   1400069ae:	add    BYTE PTR [rax],al
   1400069b0:	lods   al,BYTE PTR ds:[rsi]
   1400069b1:	je     0x1400069b3
	...
   1400069bb:	add    BYTE PTR [rbx],al
   1400069bd:	add    BYTE PTR [rax],al
   1400069bf:	add    BYTE PTR [rax+0x50000074],bh
   1400069c5:	add    BYTE PTR [rax],al
   1400069c7:	add    BYTE PTR [rax],al
   1400069c9:	add    BYTE PTR [rax],al
   1400069cb:	add    BYTE PTR [rcx],al
   1400069cd:	add    BYTE PTR [rax],al
   1400069cf:	add    BYTE PTR [rdx],ah
   1400069d1:	add    eax,0x11993
   1400069d6:	add    BYTE PTR [rax],al
   1400069d8:	in     al,0x74
	...
   1400069e2:	add    BYTE PTR [rax],al
   1400069e4:	add    eax,DWORD PTR [rax]
   1400069e6:	add    BYTE PTR [rax],al
   1400069e8:	lock je 0x1400069eb
   1400069eb:	add    BYTE PTR [rax],bh
   1400069ed:	add    BYTE PTR [rax],al
   1400069ef:	add    BYTE PTR [rax],al
   1400069f1:	add    BYTE PTR [rax],al
   1400069f3:	add    BYTE PTR [rcx],al
   1400069f5:	add    BYTE PTR [rax],al
   1400069f7:	add    BYTE PTR [rdx],ah
   1400069f9:	add    eax,0x11993
   1400069fe:	add    BYTE PTR [rax],al
   140006a00:	in     al,dx
   140006a01:	ja     0x140006a03
	...
   140006a0b:	add    BYTE PTR [rdx],al
   140006a0d:	add    BYTE PTR [rax],al
   140006a0f:	add    al,bh
   140006a11:	ja     0x140006a13
   140006a13:	add    BYTE PTR [rax],bh
   140006a15:	add    BYTE PTR [rax],al
   140006a17:	add    BYTE PTR [rax],al
   140006a19:	add    BYTE PTR [rax],al
   140006a1b:	add    BYTE PTR [rcx],al
   140006a1d:	add    BYTE PTR [rax],al
   140006a1f:	add    BYTE PTR [rdx],ah
   140006a21:	add    eax,0x11993
   140006a26:	add    BYTE PTR [rax],al
   140006a28:	mov    ah,0x77
	...
   140006a32:	add    BYTE PTR [rax],al
   140006a34:	add    eax,DWORD PTR [rax]
   140006a36:	add    BYTE PTR [rax],al
   140006a38:	shl    BYTE PTR [rdi+0x0],0x0
   140006a3c:	xor    BYTE PTR [rax],al
   140006a3e:	add    BYTE PTR [rax],al
   140006a40:	add    BYTE PTR [rax],al
   140006a42:	add    BYTE PTR [rax],al
   140006a44:	add    DWORD PTR [rax],eax
	...
   140006a52:	add    BYTE PTR [rax],al
   140006a54:	cmp    edi,DWORD PTR [rdx]
   140006a56:	lahf   
   140006a57:	push   rbp
   140006a58:	add    BYTE PTR [rax],al
   140006a5a:	add    BYTE PTR [rax],al
   140006a5c:	add    al,BYTE PTR [rax]
   140006a5e:	add    BYTE PTR [rax],al
   140006a60:	(bad)  
   140006a61:	add    BYTE PTR [rax],al
   140006a63:	add    BYTE PTR [rax+0x6b],dl
   140006a66:	add    BYTE PTR [rax],al
   140006a68:	push   rax
   140006a69:	pop    rbx
   140006a6a:	add    BYTE PTR [rax],al
   140006a6c:	add    BYTE PTR [rax],al
   140006a6e:	add    BYTE PTR [rax],al
   140006a70:	cmp    edi,DWORD PTR [rdx]
   140006a72:	lahf   
   140006a73:	push   rbp
   140006a74:	add    BYTE PTR [rax],al
   140006a76:	add    BYTE PTR [rax],al
   140006a78:	or     eax,0x40000000
   140006a7d:	add    al,BYTE PTR [rax]
   140006a7f:	add    BYTE PTR [rbx+rbp*2+0x5b8c0000],cl
	...
   140006aae:	add    BYTE PTR [rax],al
   140006ab0:	movabs al,ds:0x0
	...
   140006b05:	add    BYTE PTR [rax],al
   140006b07:	add    BYTE PTR [rax],cl
   140006b09:	nop
   140006b0a:	add    BYTE PTR [rax+0x1],al
	...
   140006b1d:	add    BYTE PTR [rax],al
   140006b1f:	add    BYTE PTR [rax+0x63],dl
   140006b22:	add    BYTE PTR [rax+0x1],al
   140006b25:	add    BYTE PTR [rax],al
   140006b27:	add    BYTE PTR [rax+0x63],bl
   140006b2a:	add    BYTE PTR [rax+0x1],al
   140006b2d:	add    BYTE PTR [rax],al
   140006b2f:	add    BYTE PTR [rax+0x1400063],bh
   140006b35:	add    BYTE PTR [rax],al
   140006b37:	add    BYTE PTR [rdx],ah
	...
   140006b41:	xor    eax,0x0
	...
   140006b4e:	add    BYTE PTR [rax],al
   140006b50:	push   rdx
   140006b51:	push   rbx
   140006b52:	rex.R push rbx
   140006b54:	ret    
   140006b55:	popf   
   140006b56:	(bad)  
   140006b57:	addr32 jg 0x140006b68
   140006b5a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140006b5b:	rex.WXB movabs r9,0x10ce4533c53f628
   140006b65:	add    BYTE PTR [rax],al
   140006b67:	add    BYTE PTR [rax+0x77],dh
   140006b6a:	ins    BYTE PTR es:[rdi],dx
   140006b6b:	(bad)  
   140006b6c:	jne    0x140006bdc
   140006b6e:	movsxd ebp,DWORD PTR [rax+0x65]
   140006b71:	jb     0x140006ba1
   140006b73:	jo     0x140006bd9
   140006b75:	(bad)  
	...
   140006b8a:	add    BYTE PTR [rax],al
   140006b8c:	rex.RXB
   140006b8d:	rex.XB push r12
   140006b8f:	rex.WR add BYTE PTR [rax],r10b
   140006b92:	add    BYTE PTR [rax],al
   140006b94:	pop    rbp
   140006b95:	add    DWORD PTR [rax],eax
   140006b97:	add    BYTE PTR [rsi],ch
   140006b99:	je     0x140006c00
   140006b9b:	js     0x140006c11
   140006b9d:	and    al,0x64
   140006b9f:	imul   eax,DWORD PTR [rax],0x60000000
   140006ba5:	adc    DWORD PTR [rax],eax
   140006ba7:	add    BYTE PTR [rax+0x2e000042],dh
   140006bad:	je     0x140006c14
   140006baf:	js     0x140006c25
   140006bb1:	and    al,0x6d
   140006bb3:	outs   dx,BYTE PTR ds:[rsi]
   140006bb4:	add    BYTE PTR [rax],al
   140006bb6:	add    BYTE PTR [rax],al
   140006bb8:	adc    BYTE PTR [rax+rax*1+0x0],dl
   140006bbc:	adc    al,BYTE PTR [rax]
   140006bbe:	add    BYTE PTR [rax],al
   140006bc0:	cs je  0x140006c28
   140006bc3:	js     0x140006c39
   140006bc5:	and    al,0x6d
   140006bc7:	outs   dx,BYTE PTR ds:[rsi]
   140006bc8:	and    al,0x30
   140006bca:	xor    BYTE PTR [rax],al
   140006bcc:	xor    BYTE PTR [rax+rax*1+0x0],dl
   140006bd0:	rol    BYTE PTR [rip+0x742e0000],1        # 0x1b42e6bd6
   140006bd6:	gs js  0x140006c4d
   140006bd9:	and    al,0x78
   140006bdb:	add    BYTE PTR [rax],al
   140006bdd:	pop    rdx
   140006bde:	add    BYTE PTR [rax],al
   140006be0:	fiadd  DWORD PTR [rcx]
   140006be2:	add    BYTE PTR [rax],al
   140006be4:	cs je  0x140006c4c
   140006be7:	js     0x140006c5d
   140006be9:	and    al,0x79
   140006beb:	add    BYTE PTR fs:[rax],al
   140006bee:	add    BYTE PTR [rax],al
   140006bf0:	add    BYTE PTR [rax+0x0],ah
   140006bf3:	add    BYTE PTR [rax+0x3],dl
   140006bf6:	add    BYTE PTR [rax],al
   140006bf8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140006c01:	add    BYTE PTR [rax],al
   140006c03:	add    BYTE PTR [rax+0x63],dl
   140006c06:	add    BYTE PTR [rax],al
   140006c08:	adc    BYTE PTR [rax],al
   140006c0a:	add    BYTE PTR [rax],al
   140006c0c:	xor    BYTE PTR cs:[rax],dh
   140006c0f:	movsxd esp,DWORD PTR [rsi+0x67]
   140006c12:	add    BYTE PTR [rax],al
   140006c14:	(bad)  
   140006c15:	movsxd eax,DWORD PTR [rax]
   140006c17:	add    BYTE PTR [rax],cl
   140006c19:	add    BYTE PTR [rax],al
   140006c1b:	add    BYTE PTR [rsi],ch
   140006c1d:	rex.XB push r10
   140006c1f:	push   rsp
   140006c20:	and    al,0x58
   140006c22:	rex.XB
   140006c23:	add    BYTE PTR [r8],al
   140006c26:	add    BYTE PTR [rax],al
   140006c28:	push   0x8000063
   140006c2d:	add    BYTE PTR [rax],al
   140006c2f:	add    BYTE PTR [rsi],ch
   140006c31:	rex.XB push r10
   140006c33:	push   rsp
   140006c34:	and    al,0x58
   140006c36:	rex.XB
   140006c37:	rex.B
   140006c38:	add    BYTE PTR [r8],al
   140006c3b:	add    BYTE PTR [rax+0x63],dh
   140006c3e:	add    BYTE PTR [rax],al
   140006c40:	and    BYTE PTR [rax],al
   140006c42:	add    BYTE PTR [rax],al
   140006c44:	cs rex.XB push r10
   140006c47:	push   rsp
   140006c48:	and    al,0x58
   140006c4a:	rex.XB
   140006c4b:	rex.WR add BYTE PTR [rax],r8b
   140006c4e:	add    BYTE PTR [rax],al
   140006c50:	nop
   140006c51:	movsxd eax,DWORD PTR [rax]
   140006c53:	add    BYTE PTR [rax],cl
   140006c55:	add    BYTE PTR [rax],al
   140006c57:	add    BYTE PTR [rsi],ch
   140006c59:	rex.XB push r10
   140006c5b:	push   rsp
   140006c5c:	and    al,0x58
   140006c5e:	rex.XB pop r10
   140006c60:	add    BYTE PTR [rax],al
   140006c62:	add    BYTE PTR [rax],al
   140006c64:	cwde   
   140006c65:	movsxd eax,DWORD PTR [rax]
   140006c67:	add    BYTE PTR [rax],cl
   140006c69:	add    BYTE PTR [rax],al
   140006c6b:	add    BYTE PTR [rsi],ch
   140006c6d:	rex.XB push r10
   140006c6f:	push   rsp
   140006c70:	and    al,0x58
   140006c72:	rex.WB
   140006c73:	add    BYTE PTR [r8],al
   140006c76:	add    BYTE PTR [rax],al
   140006c78:	movabs al,ds:0x2e00000008000063
   140006c81:	rex.XB push r10
   140006c83:	push   rsp
   140006c84:	and    al,0x58
   140006c86:	rex.WB
   140006c87:	rex.B
   140006c88:	add    BYTE PTR [r8],al
   140006c8b:	add    BYTE PTR [rax+0x8000063],ch
   140006c91:	add    BYTE PTR [rax],al
   140006c93:	add    BYTE PTR [rsi],ch
   140006c95:	rex.XB push r10
   140006c97:	push   rsp
   140006c98:	and    al,0x58
   140006c9a:	rex.WB pop r9
   140006c9c:	add    BYTE PTR [rax],al
   140006c9e:	add    BYTE PTR [rax],al
   140006ca0:	mov    al,0x63
   140006ca2:	add    BYTE PTR [rax],al
   140006ca4:	or     BYTE PTR [rax],al
   140006ca6:	add    BYTE PTR [rax],al
   140006ca8:	cs rex.XB push r10
   140006cab:	push   rsp
   140006cac:	and    al,0x58
   140006cae:	rex.WB pop r10
   140006cb0:	add    BYTE PTR [rax],al
   140006cb2:	add    BYTE PTR [rax],al
   140006cb4:	mov    eax,0x88000063
   140006cb9:	add    BYTE PTR [rax],al
   140006cbb:	add    BYTE PTR [rsi],ch
   140006cbd:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140006cc5:	add    BYTE PTR [rax],al
   140006cc7:	add    BYTE PTR [rax+0x64],al
   140006cca:	add    BYTE PTR [rax],al
   140006ccc:	adc    BYTE PTR [rdi],al
   140006cce:	add    BYTE PTR [rax],al
   140006cd0:	cs jb  0x140006d37
   140006cd3:	(bad)  
   140006cd4:	je     0x140006d37
   140006cd6:	add    BYTE PTR [rax],al
   140006cd8:	push   rax
   140006cd9:	imul   eax,DWORD PTR [rax],0x0
   140006cdc:	jl     0x140006ce0
   140006cde:	add    BYTE PTR [rax],al
   140006ce0:	cs jb  0x140006d47
   140006ce3:	(bad)  
   140006ce4:	je     0x140006d47
   140006ce6:	and    al,0x7a
   140006ce8:	jp     0x140006d64
   140006cea:	fs (bad) 
   140006cec:	add    BYTE PTR [eax],al
   140006cef:	add    al,dl
   140006cf1:	ins    DWORD PTR es:[rdi],dx
   140006cf2:	add    BYTE PTR [rax],al
   140006cf4:	sbb    al,0xb
   140006cf6:	add    BYTE PTR [rax],al
   140006cf8:	cs js  0x140006d5f
   140006cfb:	(bad)  
   140006cfc:	je     0x140006d5f
   140006cfe:	add    BYTE PTR [rax],al
   140006d00:	lock js 0x140006d03
   140006d03:	add    ah,al
   140006d05:	add    DWORD PTR [rax],eax
   140006d07:	add    BYTE PTR [rsi],ch
   140006d09:	js     0x140006d6f
   140006d0b:	(bad)  
   140006d0c:	je     0x140006d6f
   140006d0e:	and    al,0x78
   140006d10:	add    BYTE PTR [rax],al
   140006d12:	add    BYTE PTR [rax],al
   140006d14:	mov    eax,0x8c00007a
   140006d19:	add    BYTE PTR [rax],al
   140006d1b:	add    BYTE PTR [rsi],ch
   140006d1d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   140006d25:	add    BYTE PTR [rax],al
   140006d27:	add    BYTE PTR [rbx+rdi*2+0x0],al
   140006d2b:	add    BYTE PTR [rax+rax*1],dl
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140006d39:	add    BYTE PTR [rax],al
   140006d3b:	add    BYTE PTR [rax+0x7b],bl
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	push   rax
   140006d41:	add    eax,DWORD PTR [rax]
   140006d43:	add    BYTE PTR [rsi],ch
   140006d45:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140006d4d:	add    BYTE PTR [rax],al
   140006d4f:	add    BYTE PTR [rax+0x4a00007e],ch
   140006d55:	(bad)  
   140006d56:	add    BYTE PTR [rax],al
   140006d58:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   140006d61:	add    BYTE PTR [rax],al
   140006d63:	add    BYTE PTR [rax],al
   140006d65:	nop
   140006d66:	add    BYTE PTR [rax],al
   140006d68:	pop    rax
   140006d69:	add    BYTE PTR [rax],al
   140006d6b:	add    BYTE PTR [rsi],ch
   140006d6d:	fs (bad) 
   140006d6f:	je     0x140006dd2
   140006d71:	add    BYTE PTR [rax],al
   140006d73:	add    BYTE PTR [rax-0x70],bl
   140006d76:	add    BYTE PTR [rax],al
   140006d78:	lock add BYTE PTR [rax],al
   140006d7b:	add    BYTE PTR [rsi],ch
   140006d7d:	fs (bad) 
   140006d7f:	je     0x140006de2
   140006d81:	and    al,0x72
   140006d83:	add    BYTE PTR [rax-0x6f],dl
   140006d86:	add    BYTE PTR [rax],al
   140006d88:	cmp    BYTE PTR [rdi],al
   140006d8a:	add    BYTE PTR [rax],al
   140006d8c:	cs (bad) 
   140006d8f:	jae    0x140006d91
   140006d91:	add    BYTE PTR [rax],al
   140006d93:	add    BYTE PTR [rax],al
   140006d95:	movabs al,ds:0x702e000005400000
   140006d9e:	fs (bad) 
   140006da0:	je     0x140006e03
   140006da2:	add    BYTE PTR [rax],al
   140006da4:	add    BYTE PTR [rax+0xf00000],dh
   140006daa:	add    BYTE PTR [rax],al
   140006dac:	cs jb  0x140006e22
   140006daf:	jb     0x140006e14
   140006db1:	and    al,0x30
   140006db3:	xor    DWORD PTR [rax],eax
   140006db5:	add    BYTE PTR [rax],al
   140006db7:	add    al,dh
   140006db9:	mov    al,0x0
   140006dbb:	add    BYTE PTR [rax+0x7],ch
   140006dbe:	add    BYTE PTR [rax],al
   140006dc0:	cs jb  0x140006e36
   140006dc3:	jb     0x140006e28
   140006dc5:	and    al,0x30
   140006dc7:	xor    al,BYTE PTR [rax]
   140006dc9:	add    BYTE PTR [rax],al
   140006dcb:	add    BYTE PTR [rax],al
   140006dcd:	add    BYTE PTR [rax],al
   140006dcf:	add    BYTE PTR [rcx],al
   140006dd1:	add    al,0x1
   140006dd3:	add    BYTE PTR [rdx+riz*2],al
   140006dd6:	add    BYTE PTR [rax],al
   140006dd8:	add    DWORD PTR [rcx+rax*1],eax
   140006ddb:	add    BYTE PTR [rdx+rax*4],al
   140006dde:	add    BYTE PTR [rax],al
   140006de0:	add    DWORD PTR [rbx],ecx
   140006de2:	add    DWORD PTR [rax],eax
   140006de4:	or     eax,DWORD PTR [rdx+0xf010000]
   140006dea:	(bad)  
   140006deb:	add    BYTE PTR [rdi],cl
   140006ded:	fs (bad) 
   140006def:	add    BYTE PTR [rdi],cl
   140006df1:	xor    al,0x6
   140006df3:	add    BYTE PTR [rdi],cl
   140006df5:	xor    cl,BYTE PTR [rbx]
   140006df7:	jo     0x140006e12
   140006df9:	lar    eax,WORD PTR [rax]
   140006dfc:	(bad)  
   140006dfd:	push   rdx
   140006dfe:	add    dh,BYTE PTR [rax]
   140006e00:	push   bx
   140006e02:	add    BYTE PTR [rax],al
   140006e04:	rex push 0xffffffffffff0000
   140006e0a:	(bad)  
   140006e0b:	inc    DWORD PTR [rax]
   140006e0d:	add    BYTE PTR [rax],al
   140006e0f:	add    bh,bh
   140006e11:	(bad)  
   140006e12:	(bad)  
   140006e13:	inc    DWORD PTR [rax]
	...
   140006e1d:	add    BYTE PTR [rax],al
   140006e1f:	add    BYTE PTR [rcx],al
   140006e21:	add    BYTE PTR [rax],al
   140006e23:	add    BYTE PTR [rcx],al
   140006e25:	add    BYTE PTR [rax],al
   140006e27:	add    BYTE PTR [rsi+rbp*2],ch
   140006e2a:	add    BYTE PTR [rax],al
   140006e2c:	add    BYTE PTR [rax],al
	...
   140006e37:	add    BYTE PTR [rsi],dh
   140006e39:	push   rsp
   140006e3a:	add    BYTE PTR [rax],al
   140006e3c:	cmp    BYTE PTR [rax],al
   140006e3e:	add    BYTE PTR [rax],al
   140006e40:	fcom   DWORD PTR [rdx]
   140006e42:	add    BYTE PTR [rax],al
   140006e44:	(bad)  
   140006e45:	(bad)  
   140006e46:	(bad)  
   140006e47:	(bad)  
   140006e48:	jmp    0x140006e5f
   140006e4d:	add    BYTE PTR [rax],al
   140006e4f:	add    BYTE PTR [rbx+rdx*1],bh
   140006e52:	add    BYTE PTR [rax],al
   140006e54:	(bad)  
   140006e55:	(bad)  
   140006e56:	(bad)  
   140006e57:	push   QWORD PTR [rsi]
   140006e59:	push   rsp
   140006e5a:	add    BYTE PTR [rax],al
   140006e5c:	add    BYTE PTR [rax],al
   140006e5e:	add    BYTE PTR [rax],al
   140006e60:	rex.XB push r12
   140006e62:	add    BYTE PTR [rax],al
   140006e64:	add    DWORD PTR [rax],eax
   140006e66:	add    BYTE PTR [rax],al
   140006e68:	adc    BYTE PTR [rax+rax*1+0x0],0x0
   140006e6d:	add    BYTE PTR [rax],al
   140006e6f:	add    BYTE PTR [rcx],bl
   140006e71:	or     al,BYTE PTR [rdx]
   140006e73:	add    BYTE PTR [rdx],cl
   140006e75:	xor    al,BYTE PTR [rsi]
   140006e77:	push   rax
   140006e78:	push   bx
   140006e7a:	add    BYTE PTR [rax],al
   140006e7c:	rex push 0x1c110000
   140006e82:	or     BYTE PTR [rax],al
   140006e84:	sbb    al,0x64
   140006e86:	or     eax,DWORD PTR [rax]
   140006e88:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   140006e8c:	adc    al,0x34
   140006e8e:	or     DWORD PTR [rax],eax
   140006e90:	or     BYTE PTR [rdx+0x4],dl
   140006e93:	jo     0x140006efb
   140006e95:	push   rbx
   140006e96:	add    BYTE PTR [rax],al
   140006e98:	sbb    BYTE PTR [rax+0x0],ch
   140006e9b:	add    bh,bh
   140006e9d:	(bad)  
   140006e9e:	(bad)  
   140006e9f:	call   QWORD PTR [rsp+rdx*2+0x0]
   140006ea6:	add    BYTE PTR [rax],al
   140006ea8:	adc    rax,QWORD PTR [rax]
   140006eab:	add    bh,bh
   140006ead:	(bad)  
   140006eae:	(bad)  
   140006eaf:	jmp    FWORD PTR [rbx+0x13]
   140006eb5:	add    BYTE PTR [rax],al
   140006eb7:	add    BYTE PTR [rbx+rdx*1-0x10000],dh
   140006ebe:	(bad)  
   140006ebf:	call   QWORD PTR [rcx]
   140006ec1:	sbb    cl,BYTE PTR [rax]
   140006ec3:	add    BYTE PTR [rdx],dl
   140006ec5:	jb     0x140006ed2
   140006ec7:	loopne 0x140006ed2
   140006ec9:	rol    BYTE PTR [rdi],1
   140006ecb:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143607342
   140006ed2:	add    dl,BYTE PTR [rax+0x66]
   140006ed5:	push   rbx
   140006ed6:	add    BYTE PTR [rax],al
   140006ed8:	lock add BYTE PTR [eax],al
   140006edc:	(bad)  
   140006edd:	(bad)  
   140006ede:	(bad)  
   140006edf:	jmp    QWORD PTR [rsi-0xffffac]
   140006ee5:	(bad)  
   140006ee6:	(bad)  
   140006ee7:	push   QWORD PTR [rdx+0x1000054]
   140006eed:	add    BYTE PTR [rax],al
   140006eef:	add    BYTE PTR [rsi+0x1000054],bh
   140006ef5:	add    BYTE PTR [rax],al
   140006ef7:	add    dl,cl
   140006ef9:	push   rsp
   140006efa:	add    BYTE PTR [rax],al
   140006efc:	add    BYTE PTR [rax],al
   140006efe:	add    BYTE PTR [rax],al
   140006f00:	xor    BYTE PTR [rax+rax*1],dl
   140006f03:	add    bh,bh
   140006f05:	(bad)  
   140006f06:	(bad)  
   140006f07:	dec    esi
   140006f09:	adc    al,0x0
   140006f0b:	add    BYTE PTR [rax],al
   140006f0d:	add    BYTE PTR [rax],al
   140006f0f:	add    bh,dl
   140006f11:	adc    al,0x0
   140006f13:	add    bh,bh
   140006f15:	(bad)  
   140006f16:	(bad)  
   140006f17:	call   FWORD PTR [rcx]
   140006f19:	adc    eax,0x10000
   140006f1e:	add    BYTE PTR [rax],al
   140006f20:	retf   0x15
   140006f23:	add    BYTE PTR [rdx],al
   140006f25:	add    BYTE PTR [rax],al
   140006f27:	add    bl,dl
   140006f29:	adc    eax,0x10000
   140006f2e:	add    BYTE PTR [rax],al
   140006f30:	rex (bad) 
   140006f32:	add    BYTE PTR [rax],al
   140006f34:	add    eax,DWORD PTR [rax]
   140006f36:	add    BYTE PTR [rax],al
   140006f38:	rex.WB (bad) 
   140006f3a:	add    BYTE PTR [rax],al
   140006f3c:	add    DWORD PTR [rax],eax
   140006f3e:	add    BYTE PTR [rax],al
   140006f40:	jl     0x140006f58
   140006f42:	add    BYTE PTR [rax],al
   140006f44:	(bad)  
   140006f45:	(bad)  
   140006f46:	(bad)  
   140006f47:	inc    DWORD PTR [rcx]
   140006f49:	or     al,BYTE PTR [rax+rax*1]
   140006f4c:	or     dh,BYTE PTR [rsi+rax*1]
   140006f4f:	add    BYTE PTR [rdx],cl
   140006f51:	xor    al,BYTE PTR [rsi]
   140006f53:	jo     0x140006f66
   140006f55:	sbb    cl,BYTE PTR [rax]
   140006f57:	add    BYTE PTR [rdx],dl
   140006f59:	jb     0x140006f66
   140006f5b:	lock or eax,esp
   140006f5e:	(bad)  
   140006f5f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436073d6
   140006f66:	add    dl,BYTE PTR [rax+0x66]
   140006f69:	push   rbx
   140006f6a:	add    BYTE PTR [rax],al
   140006f6c:	enter  0x67,0x0
   140006f70:	(bad)  
   140006f71:	(bad)  
   140006f72:	(bad)  
   140006f73:	(bad)  
   140006f74:	fcom   QWORD PTR [rax+rax*1+0x0]
   140006f78:	adc    al,0x17
   140006f7a:	add    BYTE PTR [rax],al
   140006f7c:	(bad)  
   140006f7d:	(bad)  
   140006f7e:	(bad)  
   140006f7f:	dec    edi
   140006f81:	(bad)  
   140006f82:	add    BYTE PTR [rax],al
   140006f84:	add    BYTE PTR [rax],al
   140006f86:	add    BYTE PTR [rax],al
   140006f88:	sbb    DWORD PTR [rcx],ebx
   140006f8a:	add    BYTE PTR [rax],al
   140006f8c:	(bad)  
   140006f8d:	(bad)  
   140006f8e:	(bad)  
   140006f8f:	inc    DWORD PTR [rcx+0x19]
   140006f92:	add    BYTE PTR [rax],al
   140006f94:	add    BYTE PTR [rax],al
   140006f96:	add    BYTE PTR [rax],al
   140006f98:	sbb    DWORD PTR [rdx],0x0
   140006f9b:	add    bh,bh
   140006f9d:	(bad)  
   140006f9e:	(bad)  
   140006f9f:	jmp    FWORD PTR [rbx+0x1a]
   140006fa5:	add    BYTE PTR [rax],al
   140006fa7:	add    BYTE PTR [rdi],ah
   140006fa9:	sbb    eax,DWORD PTR [rax]
   140006fab:	add    bh,bh
   140006fad:	(bad)  
   140006fae:	(bad)  
   140006faf:	call   QWORD PTR [rcx]
   140006fb1:	sbb    eax,0x341d0008
   140006fb6:	adc    BYTE PTR [rax],al
   140006fb8:	adc    DWORD PTR [rdx-0x1ff70ff6],edx
   140006fbe:	(bad)  
   140006fbf:	jo     0x140006fc6
   140006fc1:	(bad)  
   140006fc2:	add    al,0x50
   140006fc4:	push   bx
   140006fc6:	add    BYTE PTR [rax],al
   140006fc8:	movabs al,ds:0xeeffffffff000067
   140006fd1:	push   rsp
   140006fd2:	add    BYTE PTR [rax],al
   140006fd4:	(bad)  
   140006fd5:	(bad)  
   140006fd6:	(bad)  
   140006fd7:	(bad)  
   140006fd8:	cli    
   140006fd9:	push   rsp
   140006fda:	add    BYTE PTR [rax],al
   140006fdc:	(bad)  
   140006fdd:	(bad)  
   140006fde:	(bad)  
   140006fdf:	inc    DWORD PTR [rsi]
   140006fe1:	push   rbp
   140006fe2:	add    BYTE PTR [rax],al
   140006fe4:	(bad)  
   140006fe5:	(bad)  
   140006fe6:	(bad)  
   140006fe7:	call   QWORD PTR [rdx]
   140006fe9:	push   rbp
   140006fea:	add    BYTE PTR [rax],al
   140006fec:	(bad)  
   140006fed:	(bad)  
   140006fee:	(bad)  
   140006fef:	call   FWORD PTR [rsi]
   140006ff1:	push   rbp
   140006ff2:	add    BYTE PTR [rax],al
   140006ff4:	(bad)  
   140006ff5:	(bad)  
   140006ff6:	(bad)  
   140006ff7:	jmp    FWORD PTR [rdx]
   140006ff9:	push   rbp
   140006ffa:	add    BYTE PTR [rax],al
   140006ffc:	add    BYTE PTR [rax],al
   140006ffe:	add    BYTE PTR [rax],al
   140007000:	pop    rsp
   140007001:	sbb    eax,DWORD PTR [rax]
   140007003:	add    bh,bh
   140007005:	(bad)  
   140007006:	(bad)  
   140007007:	call   QWORD PTR [rax+0x1c]
   14000700a:	add    BYTE PTR [rax],al
   14000700c:	add    DWORD PTR [rax],eax
   14000700e:	add    BYTE PTR [rax],al
   140007010:	pop    rcx
   140007011:	sbb    al,0x0
   140007013:	add    bh,bh
   140007015:	(bad)  
   140007016:	(bad)  
   140007017:	push   QWORD PTR [rsp+rbx*1+0x0]
   14000701b:	add    BYTE PTR [rax],al
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    BYTE PTR [rbp+0x1c],bh
   140007022:	add    BYTE PTR [rax],al
   140007024:	(bad)  
   140007025:	(bad)  
   140007026:	(bad)  
   140007027:	call   FWORD PTR [rax+0x500001c]
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	add    BYTE PTR [rcx-0xffffe4],ah
   140007035:	(bad)  
   140007036:	(bad)  
   140007037:	(bad)  
   140007038:	mov    ecx,0x200001c
   14000703d:	add    BYTE PTR [rax],al
   14000703f:	add    dl,al
   140007041:	sbb    al,0x0
   140007043:	add    bh,bh
   140007045:	(bad)  
   140007046:	(bad)  
   140007047:	(bad)  
   140007048:	ficomp DWORD PTR [rax+rax*1]
   14000704b:	add    BYTE PTR [rax+rax*1],al
   14000704e:	add    BYTE PTR [rax],al
   140007050:	jrcxz  0x14000706e
   140007052:	add    BYTE PTR [rax],al
   140007054:	(bad)  
   140007055:	(bad)  
   140007056:	(bad)  
   140007057:	(bad)  
   140007058:	sti    
   140007059:	sbb    al,0x0
   14000705b:	add    BYTE PTR [rbx],al
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    BYTE PTR [rbx*1-0x10000],al
   140007066:	(bad)  
   140007067:	call   QWORD PTR [rcx]
   140007069:	sbb    cl,BYTE PTR [rax]
   14000706b:	add    BYTE PTR [rdx],bl
   14000706d:	xor    al,0xe
   14000706f:	add    BYTE PTR [rdx+rsi*2],cl
   140007072:	or     al,dh
   140007074:	(bad)  
   140007075:	loopne 0x14000707b
   140007077:	jo     0x14000707c
   140007079:	(bad)  
   14000707a:	add    dl,BYTE PTR [rax+0x66]
   14000707d:	push   rbx
   14000707e:	add    BYTE PTR [rax],al
   140007080:	js     0x1400070e9
   140007082:	add    BYTE PTR [rax],al
   140007084:	(bad)  
   140007085:	(bad)  
   140007086:	(bad)  
   140007087:	(bad)  
   140007088:	cmp    al,0x55
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	add    BYTE PTR [rax],al
   14000708e:	add    BYTE PTR [rax],al
   140007090:	rex.W push rbp
   140007092:	add    BYTE PTR [rax],al
   140007094:	add    BYTE PTR [rax],al
   140007096:	add    BYTE PTR [rax],al
   140007098:	jl     0x1400070b7
   14000709a:	add    BYTE PTR [rax],al
   14000709c:	(bad)  
   14000709d:	(bad)  
   14000709e:	(bad)  
   14000709f:	inc    DWORD PTR [rbp+0x1e]
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	add    BYTE PTR [rax],al
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	push   rax
   1400070a9:	(bad)  
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    DWORD PTR [rax],eax
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	(bad)  
   1400070b1:	and    BYTE PTR [rax],al
   1400070b3:	add    BYTE PTR [rax],al
   1400070b5:	add    BYTE PTR [rax],al
   1400070b7:	add    ch,dh
   1400070b9:	and    BYTE PTR [rax],al
   1400070bb:	add    bh,bh
   1400070bd:	(bad)  
   1400070be:	(bad)  
   1400070bf:	call   FWORD PTR [rcx]
   1400070c1:	(bad)  
   1400070c2:	(bad)  
   1400070c3:	add    BYTE PTR [rdi],dl
   1400070c5:	xor    al,0xa
   1400070c7:	add    BYTE PTR [rcx],cl
   1400070c9:	push   rdx
   1400070ca:	add    eax,0x27003e0
   1400070cf:	(bad)  
   1400070d0:	push   bx
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	push   rax
   1400070d5:	add    BYTE PTR [eax],al
   1400070d8:	(bad)  
   1400070d9:	(bad)  
   1400070da:	(bad)  
   1400070db:	inc    DWORD PTR [rax]
   1400070dd:	add    BYTE PTR [rax],al
   1400070df:	add    BYTE PTR [rax],al
   1400070e1:	add    BYTE PTR [rax],al
   1400070e3:	add    BYTE PTR [rdx+0x55],bl
   1400070e6:	add    BYTE PTR [rax],al
   1400070e8:	add    DWORD PTR [rax],eax
   1400070ea:	add    BYTE PTR [rax],al
   1400070ec:	push   bp
   1400070ee:	add    BYTE PTR [rax],al
   1400070f0:	add    al,BYTE PTR [rax]
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	jb     0x14000714b
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	(bad)  
   1400070f9:	(bad)  
   1400070fa:	(bad)  
   1400070fb:	inc    DWORD PTR [rax]
   1400070fd:	add    BYTE PTR [rax],al
   1400070ff:	add    BYTE PTR [rax],al
   140007101:	add    BYTE PTR [rax],al
   140007103:	add    BYTE PTR [rbx],al
   140007105:	add    BYTE PTR [rax],al
   140007107:	add    BYTE PTR [rax+rax*1],al
   14000710a:	add    BYTE PTR [rax],al
   14000710c:	add    DWORD PTR [rax],eax
   14000710e:	add    BYTE PTR [rax],al
   140007110:	adc    al,0x71
   140007112:	add    BYTE PTR [rax],al
   140007114:	add    BYTE PTR [rax],al
	...
   14000711f:	add    BYTE PTR [rsi+0x55],bh
   140007122:	add    BYTE PTR [rax],al
   140007124:	cmp    BYTE PTR [rax],al
	...
   14000712e:	add    BYTE PTR [rax],al
   140007130:	adc    al,0x21
   140007132:	add    BYTE PTR [rax],al
   140007134:	(bad)  
   140007135:	(bad)  
   140007136:	(bad)  
   140007137:	jmp    QWORD PTR [rdx+0x21]
   14000713a:	add    BYTE PTR [rax],al
   14000713c:	add    BYTE PTR [rax],al
   14000713e:	add    BYTE PTR [rax],al
   140007140:	jb     0x140007163
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    DWORD PTR [rax],eax
   140007146:	add    BYTE PTR [rax],al
   140007148:	test   DWORD PTR [rcx],esp
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	add    al,BYTE PTR [rax]
   14000714e:	add    BYTE PTR [rax],al
   140007150:	stos   DWORD PTR es:[rdi],eax
   140007151:	and    DWORD PTR [rax],eax
   140007153:	add    BYTE PTR [rbx],al
   140007155:	add    BYTE PTR [rax],al
   140007157:	add    al,dl
   140007159:	and    DWORD PTR [rax],eax
   14000715b:	add    BYTE PTR [rdx],al
   14000715d:	add    BYTE PTR [rax],al
   14000715f:	add    ch,bh
   140007161:	and    DWORD PTR [rax],eax
   140007163:	add    BYTE PTR [rcx],al
   140007165:	add    BYTE PTR [rax],al
   140007167:	add    BYTE PTR [rip+0x22],ch        # 0x14000718f
   14000716d:	add    BYTE PTR [rax],al
   14000716f:	add    BYTE PTR [rbp+0x22],bl
   140007172:	add    BYTE PTR [rax],al
   140007174:	(bad)  
   140007175:	(bad)  
   140007176:	(bad)  
   140007177:	(bad)  
   140007178:	jle    0x1400071cf
   14000717a:	add    BYTE PTR [rax],al
   14000717c:	add    BYTE PTR [rax],al
   14000717e:	add    BYTE PTR [rax],al
   140007180:	mov    edx,DWORD PTR [rbp+0x0]
   140007183:	add    BYTE PTR [rax+rax*1],al
   140007186:	add    BYTE PTR [rax],al
   140007188:	(bad)
   14000718b:	add    BYTE PTR [rax],al
   14000718d:	add    BYTE PTR [rax],al
   14000718f:	add    BYTE PTR [rcx],bl
   140007191:	or     al,BYTE PTR [rdx]
   140007193:	add    BYTE PTR [rdx],cl
   140007195:	xor    al,BYTE PTR [rsi]
   140007197:	push   rax
   140007198:	push   bx
   14000719a:	add    BYTE PTR [rax],al
   14000719c:	push   rax
   14000719d:	add    BYTE PTR [eax],al
   1400071a0:	sbb    DWORD PTR [rcx],esi
   1400071a2:	or     DWORD PTR [rax],eax
   1400071a4:	(bad)  
   1400071a5:	fs sbb eax,0x1c341b00
   1400071ab:	add    BYTE PTR [rdi],cl
   1400071ad:	add    DWORD PTR [rsi],edx
   1400071af:	add    BYTE PTR [rax],cl
   1400071b1:	lock (bad) 
   1400071b3:	loopne 0x1400071b9
   1400071b5:	jo     0x1400071b7
   1400071b7:	add    BYTE PTR [rbx+rdx*2+0x0],dh
   1400071bb:	add    BYTE PTR [rax],ch
   1400071bd:	add    BYTE PTR [eax],al
   1400071c0:	movabs ds:0x0,eax
   1400071c9:	add    BYTE PTR [rax],al
   1400071cb:	add    BYTE PTR [rcx],al
   1400071cd:	add    BYTE PTR [rax],al
   1400071cf:	add    BYTE PTR [rcx],al
   1400071d1:	add    BYTE PTR [rax],al
   1400071d3:	add    al,bl
   1400071d5:	jno    0x1400071d7
   1400071d7:	add    BYTE PTR [rax+0x0],al
	...
   1400071e2:	add    BYTE PTR [rax],al
   1400071e4:	fst    DWORD PTR [rbp+0x0]
   1400071e7:	add    BYTE PTR [rax+0x0],bl
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	add    BYTE PTR [rax],al
   1400071ee:	add    BYTE PTR [rax],al
   1400071f0:	test   al,0x22
   1400071f2:	add    BYTE PTR [rax],al
   1400071f4:	(bad)  
   1400071f5:	(bad)  
   1400071f6:	(bad)  
   1400071f7:	jmp    QWORD PTR [rax+0x23]
   1400071fd:	add    BYTE PTR [rax],al
   1400071ff:	add    BYTE PTR [rdi-0xffffdc],dh
   140007205:	(bad)  
   140007206:	(bad)  
   140007207:	(bad)  
   140007208:	fst    DWORD PTR [rbp+0x0]
   14000720b:	add    BYTE PTR [rax],al
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    dh,ah
   140007211:	push   rbp
   140007212:	add    BYTE PTR [rax],al
   140007214:	add    DWORD PTR [rax],eax
   140007216:	add    BYTE PTR [rax],al
   140007218:	not    BYTE PTR [rbp+0x0]
   14000721b:	add    BYTE PTR [rax],al
   14000721d:	add    BYTE PTR [rax],al
   14000721f:	add    BYTE PTR [rcx],bl
   140007221:	or     al,BYTE PTR [rdx]
   140007223:	add    BYTE PTR [rdx],cl
   140007225:	jb     0x14000722d
   140007227:	push   rax
   140007228:	push   bx
   14000722a:	add    BYTE PTR [rax],al
   14000722c:	sub    BYTE PTR [rdi+0x0],ah
   14000722f:	add    BYTE PTR [rcx],dl
   140007231:	sbb    al,0x2
   140007233:	add    BYTE PTR [rdx+rsi*4],dl
   140007236:	adc    BYTE PTR [rax],dh
   140007238:	push   bx
   14000723a:	add    BYTE PTR [rax],al
   14000723c:	add    BYTE PTR [rdi+0x0],ah
   14000723f:	add    bh,bh
   140007241:	(bad)  
   140007242:	(bad)  
   140007243:	dec    DWORD PTR [rdx]
   140007245:	push   rsi
   140007246:	add    BYTE PTR [rax],al
   140007248:	in     al,0x25
   14000724a:	add    BYTE PTR [rax],al
   14000724c:	(bad)  
   14000724d:	(bad)  
   14000724e:	(bad)  
   14000724f:	jmp    QWORD PTR [rsi]
   140007251:	add    BYTE PTR es:[rax],al
   140007254:	add    BYTE PTR [rax],al
   140007256:	add    BYTE PTR [rax],al
   140007258:	push   0xffffffffff000026
   14000725d:	(bad)  
   14000725e:	(bad)  
   14000725f:	inc    DWORD PTR [rcx]
   140007261:	(bad)  
   140007262:	add    al,BYTE PTR [rax]
   140007264:	(bad)  
   140007265:	xor    al,BYTE PTR [rdx]
   140007267:	xor    BYTE PTR [rcx],al
   140007269:	sbb    eax,0x741d000c
   14000726e:	or     eax,DWORD PTR [rax]
   140007270:	sbb    eax,0x1d000a64
   140007275:	push   rsp
   140007276:	or     DWORD PTR [rax],eax
   140007278:	sbb    eax,0x1d000834
   14000727d:	xor    bl,BYTE PTR [rcx]
   14000727f:	lock (bad) 
   140007281:	loopne 0x140007298
   140007283:	rol    BYTE PTR [rcx],0x4
   140007286:	add    DWORD PTR [rax],eax
   140007288:	add    al,0x42
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	add    DWORD PTR [rax],ebx
   14000728e:	or     al,BYTE PTR [rax]
   140007290:	sbb    BYTE PTR [rdx+rcx*1+0x0],ah
   140007294:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140007298:	sbb    BYTE PTR [rax+rcx*1],dh
   14000729b:	add    BYTE PTR [rax],bl
   14000729d:	xor    dl,BYTE PTR [rax+rsi*8]
   1400072a0:	adc    ah,al
   1400072a2:	adc    BYTE PTR [rax+0x1],dh
   1400072a5:	sbb    DWORD PTR [rdx],ecx
   1400072a7:	add    BYTE PTR [rcx],bl
   1400072a9:	in     al,0x9
   1400072ab:	add    BYTE PTR [rcx],bl
   1400072ad:	je     0x1400072b7
   1400072af:	add    BYTE PTR [rcx],bl
   1400072b1:	fs (bad) 
   1400072b3:	add    BYTE PTR [rcx],bl
   1400072b5:	xor    al,0x6
   1400072b7:	add    BYTE PTR [rcx],bl
   1400072b9:	xor    dl,BYTE PTR [rip+0x10701f0]        # 0x1410774af
   1400072bf:	add    BYTE PTR [rdi],al
   1400072c1:	movabs ds:0x741b000629190000,al
   1400072ca:	adc    BYTE PTR [rax],al
   1400072cc:	(bad)  
   1400072cd:	xor    al,0xf
   1400072cf:	add    BYTE PTR [rbx],cl
   1400072d1:	mov    dl,0x4
   1400072d3:	push   rax
   1400072d4:	je     0x140007329
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	or     BYTE PTR [rcx+0x0],ch
   1400072db:	add    BYTE PTR [rdx+0x0],bl
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	(bad)  
   1400072e1:	(bad)  
   1400072e2:	(bad)  
   1400072e3:	jmp    FWORD PTR [rax]
   1400072e5:	push   rsi
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	add    BYTE PTR [rax],al
   1400072ea:	add    BYTE PTR [rax],al
   1400072ec:	sbb    al,0x56
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	sbb    BYTE PTR [rbx],ch
   1400072f2:	add    BYTE PTR [rax],al
   1400072f4:	(bad)  
   1400072f5:	(bad)  
   1400072f6:	(bad)  
   1400072f7:	inc    DWORD PTR [rbx+rbp*1+0x0]
   1400072fb:	add    BYTE PTR [rax],al
   1400072fd:	add    BYTE PTR [rax],al
   1400072ff:	add    BYTE PTR [rcx+0x100002b],bh
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    BYTE PTR [rsp+rbp*1+0x0],ah
   14000730b:	add    BYTE PTR [rax],al
   14000730d:	add    BYTE PTR [rax],al
   14000730f:	add    BYTE PTR [rcx],al
   140007311:	(bad)  
   140007312:	add    al,BYTE PTR [rax]
   140007314:	(bad)  
   140007315:	xor    al,BYTE PTR [rdx]
   140007317:	push   rax
   140007318:	adc    DWORD PTR [rdi+rax*1],ebx
   14000731b:	add    BYTE PTR [rdx+riz*4],dl
   14000731e:	or     eax,0x9e00bf0
   140007323:	jo     0x14000732d
   140007325:	(bad)  
   140007326:	(bad)  
   140007327:	xor    BYTE PTR [rsi],al
   140007329:	push   rax
   14000732a:	add    BYTE PTR [rax],al
   14000732c:	push   bx
   14000732e:	add    BYTE PTR [rax],al
   140007330:	loopne 0x14000739a
   140007332:	add    BYTE PTR [rax],al
   140007334:	(bad)  
   140007335:	(bad)  
   140007336:	(bad)  
   140007337:	call   QWORD PTR [rsi+rdx*2+0x0]
   14000733b:	add    BYTE PTR [rax],al
   14000733d:	add    BYTE PTR [rax],al
   14000733f:	add    BYTE PTR [rbp+0x56],bh
   140007342:	add    BYTE PTR [rax],al
   140007344:	add    BYTE PTR [rax],al
   140007346:	add    BYTE PTR [rax],al
   140007348:	mov    esp,0xff00002c
   14000734d:	(bad)  
   14000734e:	(bad)  
   14000734f:	(bad)  
   140007350:	fld    TBYTE PTR [rax+rax*1]
   140007353:	add    BYTE PTR [rax],al
   140007355:	add    BYTE PTR [rax],al
   140007357:	add    BYTE PTR [rcx+0x100002d],ah
   14000735d:	add    BYTE PTR [rax],al
   14000735f:	add    BYTE PTR [rsi+0x2e],bh
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    ch,dh
   140007369:	add    BYTE PTR cs:[rax],al
   14000736c:	add    DWORD PTR [rax],eax
   14000736e:	add    BYTE PTR [rax],al
   140007370:	add    BYTE PTR [rdi],ch
   140007372:	add    BYTE PTR [rax],al
   140007374:	add    BYTE PTR [rax],al
   140007376:	add    BYTE PTR [rax],al
   140007378:	sbb    DWORD PTR [rdx],edx
   14000737a:	add    DWORD PTR [rax],eax
   14000737c:	or     DWORD PTR [rdx+0x0],esp
   14000737f:	add    BYTE PTR [rsi+0x53],ah
   140007382:	add    BYTE PTR [rax],al
   140007384:	sub    BYTE PTR [rcx+0x0],0x0
   140007388:	(bad)  
   140007389:	(bad)  
   14000738a:	(bad)  
   14000738b:	dec    DWORD PTR [rdi+0x56]
   140007391:	add    BYTE PTR [rax],al
   140007393:	add    BYTE PTR [rdi+0x1000056],bl
   140007399:	add    BYTE PTR [rax],al
   14000739b:	add    BYTE PTR [rax],al
   14000739d:	add    BYTE PTR [rax],al
   14000739f:	add    BYTE PTR [rcx],al
   1400073a1:	add    BYTE PTR [rax],al
   1400073a3:	add    BYTE PTR [rax],al
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rdx],al
   1400073a9:	add    BYTE PTR [rax],al
   1400073ab:	add    BYTE PTR [rdx],al
   1400073ad:	add    BYTE PTR [rax],al
   1400073af:	add    BYTE PTR [rbx],al
   1400073b1:	add    BYTE PTR [rax],al
   1400073b3:	add    BYTE PTR [rcx],al
   1400073b5:	add    BYTE PTR [rax],al
   1400073b7:	add    BYTE PTR [rbx+rsi*2+0x400000],bh
	...
   1400073c6:	add    BYTE PTR [rax],al
   1400073c8:	scas   eax,DWORD PTR es:[rdi]
   1400073c9:	push   rsi
   1400073ca:	add    BYTE PTR [rax],al
   1400073cc:	cmp    BYTE PTR [rax],al
   1400073ce:	add    BYTE PTR [rax],al
   1400073d0:	mov    WORD PTR [rdi],gs
   1400073d2:	add    BYTE PTR [rax],al
   1400073d4:	(bad)  
   1400073d5:	(bad)  
   1400073d6:	(bad)  
   1400073d7:	jmp    FWORD PTR [rdx+0x200002f]
   1400073dd:	add    BYTE PTR [rax],al
   1400073df:	add    BYTE PTR [rax+0x2f],dh
   1400073e5:	add    BYTE PTR [rax],al
   1400073e7:	add    ch,al
   1400073e9:	(bad)  
   1400073ea:	add    BYTE PTR [rax],al
   1400073ec:	(bad)  
   1400073ed:	(bad)  
   1400073ee:	(bad)  
   1400073ef:	jmp    FWORD PTR [rdi+0x56]
   1400073f5:	add    BYTE PTR [rax],al
   1400073f7:	add    BYTE PTR [rsi+rdx*2+0x30000],bh
   1400073fe:	add    BYTE PTR [rax],al
   140007400:	stc    
   140007401:	push   rsi
   140007402:	add    BYTE PTR [rax],al
   140007404:	add    BYTE PTR [rax],al
   140007406:	add    BYTE PTR [rax],al
   140007408:	sbb    DWORD PTR [rdx],ecx
   14000740a:	add    al,BYTE PTR [rax]
   14000740c:	or     dh,BYTE PTR [rdx]
   14000740e:	(bad)  
   14000740f:	push   rax
   140007410:	push   bx
   140007412:	add    BYTE PTR [rax],al
   140007414:	sub    BYTE PTR [rcx+0x0],0x0
   140007418:	sbb    DWORD PTR [rdx],ebx
   14000741a:	add    al,0x0
   14000741c:	or     ebp,DWORD PTR [rax+0x4]
   14000741f:	add    BYTE PTR [rsi],al
   140007421:	xchg   edx,eax
   140007422:	add    dh,BYTE PTR [rax]
   140007424:	fcom   DWORD PTR [rdx+0x0]
   140007427:	add    BYTE PTR [rax],bh
   140007429:	add    BYTE PTR [rax],al
   14000742b:	add    BYTE PTR [rcx],dl
   14000742d:	sbb    al,BYTE PTR [rsi]
   14000742f:	add    BYTE PTR [rdx],dl
   140007431:	jb     0x14000743e
   140007433:	loopne 0x14000743e
   140007435:	jo     0x14000743f
   140007437:	(bad)  
   140007438:	(bad)  
   140007439:	xor    BYTE PTR [rsi],al
   14000743b:	push   rax
   14000743c:	push   bx
   14000743e:	add    BYTE PTR [rax],al
   140007440:	xor    BYTE PTR [rcx+0x0],ch
   140007443:	add    bh,bh
   140007445:	(bad)  
   140007446:	(bad)  
   140007447:	dec    DWORD PTR [rip+0x57]        # 0x1400074a4
   14000744d:	add    BYTE PTR [rax],al
   14000744f:	add    BYTE PTR [rcx],bl
   140007451:	push   rdi
   140007452:	add    BYTE PTR [rax],al
   140007454:	add    BYTE PTR [rax],al
   140007456:	add    BYTE PTR [rax],al
   140007458:	adc    BYTE PTR [rcx],dh
   14000745a:	add    BYTE PTR [rax],al
   14000745c:	(bad)  
   14000745d:	(bad)  
   14000745e:	(bad)  
   14000745f:	jmp    QWORD PTR [rip+0x32]        # 0x140007497
   140007465:	add    BYTE PTR [rax],al
   140007467:	add    BYTE PTR [rdx+rsi*1+0x10000],bh
   14000746e:	add    BYTE PTR [rax],al
   140007470:	xor    eax,DWORD PTR gs:[rax]
   140007473:	add    BYTE PTR [rax],al
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rdx-0xffffcd],bl
   14000747d:	(bad)  
   14000747e:	(bad)  
   14000747f:	inc    DWORD PTR [rcx]
   140007481:	clts   
   140007483:	add    BYTE PTR [rdi],cl
   140007485:	push   rsp
   140007486:	or     DWORD PTR [rax],eax
   140007488:	sysenter 
   14000748a:	or     BYTE PTR [rax],al
   14000748c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000748f:	jo     0x140007492
   140007491:	(bad)  
   140007493:	add    BYTE PTR [rdi],cl
   140007495:	xor    al,0x8
   140007497:	add    BYTE PTR [rdi],cl
   140007499:	xor    cl,BYTE PTR [rbx]
   14000749b:	(bad)  
   14000749c:	adc    DWORD PTR [rax],edx
   14000749e:	add    al,BYTE PTR [rax]
   1400074a0:	or     BYTE PTR [rdx+0x53663004],dh
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	test   al,0x69
   1400074aa:	add    BYTE PTR [rax],al
   1400074ac:	(bad)  
   1400074ad:	(bad)  
   1400074ae:	(bad)  
   1400074af:	jmp    FWORD PTR [rbx]
   1400074b1:	push   rdi
   1400074b2:	add    BYTE PTR [rax],al
   1400074b4:	add    BYTE PTR [rax],al
   1400074b6:	add    BYTE PTR [rax],al
   1400074b8:	add    BYTE PTR [rsi],dh
   1400074ba:	add    BYTE PTR [rax],al
   1400074bc:	(bad)  
   1400074bd:	(bad)  
   1400074be:	(bad)  
   1400074bf:	jmp    FWORD PTR [rsi]
   1400074c1:	add    BYTE PTR ss:[rax],al
   1400074c4:	add    BYTE PTR [rax],al
   1400074c6:	add    BYTE PTR [rax],al
   1400074c8:	fdiv   DWORD PTR [rsi]
   1400074ca:	add    BYTE PTR [rax],al
   1400074cc:	(bad)  
   1400074cd:	(bad)  
   1400074ce:	(bad)  
   1400074cf:	call   QWORD PTR [rcx]
   1400074d1:	adc    al,BYTE PTR [rbx]
   1400074d3:	add    BYTE PTR [rdx],cl
   1400074d5:	(bad)  
   1400074d6:	add    esi,DWORD PTR [rax]
   1400074d8:	add    dl,BYTE PTR [rax+0x0]
   1400074db:	add    BYTE PTR [rsi+0x53],ah
   1400074de:	add    BYTE PTR [rax],al
   1400074e0:	shr    BYTE PTR [rcx+0x0],1
   1400074e3:	add    bh,bh
   1400074e5:	(bad)  
   1400074e6:	(bad)  
   1400074e7:	(bad)  
   1400074e8:	cmp    eax,0x57
   1400074ed:	add    BYTE PTR [rax],al
   1400074ef:	add    ah,dh
   1400074f1:	add    BYTE PTR ss:[rax],al
   1400074f4:	(bad)  
   1400074f5:	(bad)  
   1400074f6:	(bad)  
   1400074f7:	dec    DWORD PTR [rbx]
   1400074f9:	(bad)  
   1400074fa:	add    BYTE PTR [rax],al
   1400074fc:	add    BYTE PTR [rax],al
   1400074fe:	add    BYTE PTR [rax],al
   140007500:	movabs ds:0x1ffffffff000038,al
   140007509:	or     al,BYTE PTR [rax+rax*1]
   14000750c:	or     dh,BYTE PTR [rcx+rcx*1]
   14000750f:	add    BYTE PTR [rdx],cl
   140007511:	xor    al,BYTE PTR [rsi]
   140007513:	jo     0x14000752e
   140007515:	or     eax,0x82040001
   14000751a:	add    BYTE PTR [rax],al
   14000751c:	push   bx
   14000751e:	add    BYTE PTR [rax],al
   140007520:	pop    rax
   140007521:	imul   eax,DWORD PTR [rax],0x0
   140007527:	add    BYTE PTR [rax],al
   140007529:	add    BYTE PTR [rax],al
   14000752b:	add    BYTE PTR [rcx],al
   14000752d:	add    BYTE PTR [rax],al
   14000752f:	add    BYTE PTR [rax+rax*1],al
   140007532:	add    BYTE PTR [rax],al
   140007534:	cmp    BYTE PTR [rbp+0x0],dh
   140007537:	add    BYTE PTR [rcx],cl
   140007539:	add    BYTE PTR [rax],al
   14000753b:	add    al,dl
   14000753d:	nop
   14000753e:	add    BYTE PTR [rax],al
   140007540:	and    BYTE PTR [rax],al
   140007542:	add    BYTE PTR [rax],al
   140007544:	rex.WRXB push r15
   140007546:	add    BYTE PTR [rax],al
   140007548:	rex.W add BYTE PTR [rax],al
   14000754b:	add    BYTE PTR [rcx],cl
   14000754d:	add    BYTE PTR [rax],al
   14000754f:	add    BYTE PTR [rax+0x28000090],ch
   140007555:	add    BYTE PTR [rax],al
   140007557:	add    BYTE PTR [rdx+0x48000057],dh
   14000755d:	add    BYTE PTR [rax],al
   14000755f:	add    BYTE PTR [rcx],cl
   140007561:	add    BYTE PTR [rax],al
   140007563:	add    BYTE PTR [rax],ch
   140007565:	xchg   ecx,eax
   140007566:	add    BYTE PTR [rax],al
   140007568:	cmp    BYTE PTR [rax],al
   14000756a:	add    BYTE PTR [rax],al
   14000756c:	adc    eax,0x48000058
   140007571:	add    BYTE PTR [rax],al
   140007573:	add    BYTE PTR [rax+0x0],al
	...
   14000757e:	add    BYTE PTR [rax],al
   140007580:	xchg   BYTE PTR [rax+0x0],bl
   140007583:	add    BYTE PTR [rax],bh
	...
   14000758d:	add    BYTE PTR [rax],al
   14000758f:	add    BYTE PTR [rax+0x39],dh
   140007592:	add    BYTE PTR [rax],al
   140007594:	(bad)  
   140007595:	(bad)  
   140007596:	(bad)  
   140007597:	(bad)  
   140007598:	jge    0x1400075d3
   14000759a:	add    BYTE PTR [rax],al
   14000759c:	add    BYTE PTR [rax],al
   14000759e:	add    BYTE PTR [rax],al
   1400075a0:	xchg   DWORD PTR [rcx],edi
   1400075a2:	add    BYTE PTR [rax],al
   1400075a4:	(bad)  
   1400075a5:	(bad)  
   1400075a6:	(bad)  
   1400075a7:	dec    DWORD PTR [rdi+0x57]
   1400075aa:	add    BYTE PTR [rax],al
   1400075ac:	add    BYTE PTR [rax],al
   1400075ae:	add    BYTE PTR [rax],al
   1400075b0:	pop    rbp
   1400075b1:	push   rdi
   1400075b2:	add    BYTE PTR [rax],al
   1400075b4:	add    DWORD PTR [rax],eax
   1400075b6:	add    BYTE PTR [rax],al
   1400075b8:	movabs ds:0xc000000000000057,eax
   1400075c1:	push   rdi
   1400075c2:	add    BYTE PTR [rax],al
   1400075c4:	add    DWORD PTR [rax],eax
   1400075c6:	add    BYTE PTR [rax],al
   1400075c8:	(bad)  
   1400075c9:	pop    rax
   1400075ca:	add    BYTE PTR [rax],al
   1400075cc:	add    BYTE PTR [rax],al
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	and    al,0x58
   1400075d2:	add    BYTE PTR [rax],al
   1400075d4:	add    DWORD PTR [rax],eax
   1400075d6:	add    BYTE PTR [rax],al
   1400075d8:	jbe    0x140007632
   1400075da:	add    BYTE PTR [rax],al
   1400075dc:	add    BYTE PTR [rax],al
   1400075de:	add    BYTE PTR [rax],al
   1400075e0:	xchg   ebx,eax
   1400075e1:	pop    rax
   1400075e2:	add    BYTE PTR [rax],al
   1400075e4:	add    DWORD PTR [rax],eax
   1400075e6:	add    BYTE PTR [rax],al
   1400075e8:	(bad)  
   1400075e9:	pop    rax
   1400075ea:	add    BYTE PTR [rax],al
   1400075ec:	add    BYTE PTR [rax],al
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	sbb    DWORD PTR [rbx],ecx
   1400075f2:	add    eax,DWORD PTR [rax]
   1400075f4:	or     eax,DWORD PTR [rdx+0x7]
   1400075f7:	push   rax
   1400075f8:	(bad)  
   1400075f9:	xor    BYTE PTR [rax],al
   1400075fb:	add    BYTE PTR [rsi+0x53],ah
   1400075fe:	add    BYTE PTR [rax],al
   140007600:	pop    rax
   140007601:	imul   eax,DWORD PTR [rax],0x40c1900
   140007607:	add    BYTE PTR [rdx+rsi*1],cl
   14000760a:	or     BYTE PTR [rax+0x7],dh
   14000760d:	push   rax
   14000760e:	(bad)  
   14000760f:	xor    BYTE PTR [rsi+0x53],ah
   140007612:	add    BYTE PTR [rax],al
   140007614:	pop    rax
   140007615:	imul   eax,DWORD PTR [rax],0x20a1900
   14000761b:	add    BYTE PTR [rdx],cl
   14000761d:	xor    al,BYTE PTR [rsi]
   14000761f:	push   rax
   140007620:	push   bx
   140007622:	add    BYTE PTR [rax],al
   140007624:	pop    rax
   140007625:	imul   eax,DWORD PTR [rax],0xa241100
   14000762b:	add    BYTE PTR [rsp+riz*2],ah
   14000762e:	or     eax,0xc542000
   140007633:	add    BYTE PTR [rsp+rsi*1],bl
   140007636:	or     eax,DWORD PTR [rax]
   140007638:	adc    BYTE PTR [rdx+0xc],dl
   14000763b:	lock or ah,al
   14000763e:	or     BYTE PTR [rax+0x66],dh
   140007641:	push   rbx
   140007642:	add    BYTE PTR [rax],al
   140007644:	mov    eax,0xff000068
   140007649:	(bad)  
   14000764a:	(bad)  
   14000764b:	jmp    rdx
   14000764d:	pop    rax
   14000764e:	add    BYTE PTR [rax],al
   140007650:	cwde   
   140007651:	cmp    DWORD PTR [rax],eax
   140007653:	add    bh,bh
   140007655:	(bad)  
   140007656:	(bad)  
   140007657:	jmp    rsi
   140007659:	cmp    DWORD PTR [rax],eax
   14000765b:	add    BYTE PTR [rax],al
   14000765d:	add    BYTE PTR [rax],al
   14000765f:	add    BYTE PTR [rdi+0x3a],bh
   140007662:	add    BYTE PTR [rax],al
   140007664:	(bad)  
   140007665:	(bad)  
   140007666:	(bad)  
   140007667:	call   FWORD PTR [rcx]
   140007669:	sbb    eax,0x741d0008
   14000766e:	ltr    WORD PTR [rcx]
   140007671:	fs (bad) 
   140007673:	add    BYTE PTR [rip+0x9000c34],dl        # 0x1490082ad
   140007679:	xchg   edx,eax
   14000767a:	add    eax,0x5366e0
   14000767f:	add    BYTE PTR [rax+0x68],dl
   140007685:	add    BYTE PTR [rax],al
   140007687:	add    BYTE PTR [rax],al
   140007689:	add    BYTE PTR [rax],al
   14000768b:	add    BYTE PTR [rcx],al
   14000768d:	add    BYTE PTR [rax],al
   14000768f:	add    BYTE PTR [rcx],al
   140007691:	add    BYTE PTR [rax],al
   140007693:	add    BYTE PTR [rax+0x40000076],bl
	...
   1400076a1:	add    BYTE PTR [rax],al
   1400076a3:	add    ah,dh
   1400076a5:	pop    rax
   1400076a6:	add    BYTE PTR [rax],al
   1400076a8:	rex.W add BYTE PTR [rax],al
   1400076ab:	add    BYTE PTR [rax],al
   1400076ad:	add    BYTE PTR [rax],al
   1400076af:	add    BYTE PTR [rax+0x3b],bh
   1400076b2:	add    BYTE PTR [rax],al
   1400076b4:	(bad)  
   1400076b5:	(bad)  
   1400076b6:	(bad)  
   1400076b7:	jmp    QWORD PTR [rax]
   1400076b9:	cmp    al,0x0
   1400076bb:	add    BYTE PTR [rax],al
   1400076bd:	add    BYTE PTR [rax],al
   1400076bf:	add    BYTE PTR [rax],dh
   1400076c1:	cmp    al,0x0
   1400076c3:	add    bh,bh
   1400076c5:	(bad)  
   1400076c6:	(bad)  
   1400076c7:	push   rsp
   1400076c9:	pop    rax
   1400076ca:	add    BYTE PTR [rax],al
   1400076cc:	add    BYTE PTR [rax],al
   1400076ce:	add    BYTE PTR [rax],al
   1400076d0:	add    DWORD PTR [rcx+0x0],ebx
   1400076d3:	add    BYTE PTR [rcx],al
   1400076d5:	add    BYTE PTR [rax],al
   1400076d7:	add    BYTE PTR [rcx],bl
   1400076d9:	or     al,BYTE PTR [rdx]
   1400076db:	add    BYTE PTR [rdx],cl
   1400076dd:	push   rdx
   1400076de:	(bad)  
   1400076df:	push   rax
   1400076e0:	push   bx
   1400076e2:	add    BYTE PTR [rax],al
   1400076e4:	nop
   1400076e5:	push   0x19010000
   1400076ea:	or     al,BYTE PTR [rax]
   1400076ec:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   1400076f0:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   1400076f4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400076f8:	sbb    DWORD PTR [rsi+rax*1],esi
   1400076fb:	add    BYTE PTR [rcx],bl
   1400076fd:	xor    dl,BYTE PTR [rip+0x61901e0]        # 0x1461978e3
   140007703:	add    BYTE PTR [rcx],bl
   140007705:	xor    dl,BYTE PTR [rip+0x127013e0]        # 0x152708aeb
   14000770b:	(bad)  
   14000770c:	adc    DWORD PTR [rax+0x10],edx
   14000770f:	xor    BYTE PTR [rcx],bl
   140007711:	or     eax,0x62040001
   140007716:	add    BYTE PTR [rax],al
   140007718:	push   bx
   14000771a:	add    BYTE PTR [rax],al
   14000771c:	push   0x68
   140007721:	add    BYTE PTR [rax],al
   140007723:	add    BYTE PTR [rax],al
   140007725:	add    BYTE PTR [rax],al
   140007727:	add    BYTE PTR [rcx],al
   140007729:	add    BYTE PTR [rax],al
   14000772b:	add    BYTE PTR [rcx],al
   14000772d:	add    BYTE PTR [rax],al
   14000772f:	add    BYTE PTR [rdi+rsi*2],dh
   140007732:	add    BYTE PTR [rax],al
   140007734:	add    BYTE PTR [rax],al
	...
   14000773f:	add    BYTE PTR [rdx],bl
   140007741:	pop    rcx
   140007742:	add    BYTE PTR [rax],al
   140007744:	cmp    BYTE PTR [rax],al
   140007746:	add    BYTE PTR [rax],al
   140007748:	fdivr  QWORD PTR [rsi]
   14000774a:	add    BYTE PTR [rax],al
   14000774c:	(bad)  
   14000774d:	(bad)  
   14000774e:	(bad)  
   14000774f:	(bad)  
   140007750:	jmp    0x140007793
   140007755:	add    BYTE PTR [rax],al
   140007757:	add    BYTE PTR [rdi],cl
   140007759:	(bad)  
   14000775a:	add    BYTE PTR [rax],al
   14000775c:	(bad)  
   14000775d:	(bad)  
   14000775e:	(bad)  
   14000775f:	call   FWORD PTR [rdx]
   140007761:	pop    rcx
   140007762:	add    BYTE PTR [rax],al
   140007764:	add    BYTE PTR [rax],al
   140007766:	add    BYTE PTR [rax],al
   140007768:	(bad)  
   140007769:	pop    rcx
   14000776a:	add    BYTE PTR [rax],al
   14000776c:	add    DWORD PTR [rax],eax
   14000776e:	add    BYTE PTR [rax],al
   140007770:	sbb    DWORD PTR [rdx],ecx
   140007772:	add    al,BYTE PTR [rax]
   140007774:	or     dh,BYTE PTR [rdx]
   140007776:	(bad)  
   140007777:	push   rax
   140007778:	push   bx
   14000777a:	add    BYTE PTR [rax],al
   14000777c:	push   0x1000068
   140007781:	(bad)  
   140007782:	add    al,BYTE PTR [rax]
   140007784:	(bad)  
   140007785:	push   rdx
   140007786:	add    dh,BYTE PTR [rax]
   140007788:	add    DWORD PTR [rax+rcx*1],edx
   14000778b:	add    BYTE PTR [rsp+riz*2],dl
   14000778e:	or     BYTE PTR [rax],al
   140007790:	adc    al,0x54
   140007792:	(bad)  
   140007793:	add    BYTE PTR [rsp+rsi*1],dl
   140007796:	(bad)  
   140007797:	add    BYTE PTR [rdx+rsi*1],dl
   14000779a:	adc    BYTE PTR [rax+0x11],dh
   14000779d:	(bad)  
   14000779e:	(bad)  
   14000779f:	add    BYTE PTR [rsi],cl
   1400077a1:	xchg   edx,eax
   1400077a2:	(bad)  
   1400077a3:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143607c1a
   1400077aa:	add    dl,BYTE PTR [rax+0x66]
   1400077ad:	push   rbx
   1400077ae:	add    BYTE PTR [rax],al
   1400077b0:	and    BYTE PTR [rdx+0x0],ch
   1400077b3:	add    bh,bh
   1400077b5:	(bad)  
   1400077b6:	(bad)  
   1400077b7:	push   QWORD PTR [rdi]
   1400077b9:	pop    rcx
   1400077ba:	add    BYTE PTR [rax],al
   1400077bc:	add    BYTE PTR [rax],al
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	hlt    
   1400077c1:	add    BYTE PTR [rax],al
   1400077c4:	(bad)  
   1400077c5:	(bad)  
   1400077c6:	(bad)  
   1400077c7:	dec    DWORD PTR [rsi+0x41]
   1400077ca:	add    BYTE PTR [rax],al
   1400077cc:	add    BYTE PTR [rax],al
   1400077ce:	add    BYTE PTR [rax],al
   1400077d0:	rol    DWORD PTR [rdx+0x0],1
   1400077d3:	add    bh,bh
   1400077d5:	(bad)  
   1400077d6:	(bad)  
   1400077d7:	call   QWORD PTR [rcx]
   1400077d9:	sbb    BYTE PTR [rax+rax*1],al
   1400077dc:	sbb    BYTE PTR [rcx*1+0x8720c00],dh
   1400077e3:	jo     0x14000784b
   1400077e5:	push   rbx
   1400077e6:	add    BYTE PTR [rax],al
   1400077e8:	clc    
   1400077e9:	imul   eax,DWORD PTR [rax],0xffffff00
   1400077ef:	dec    DWORD PTR [rcx+0x59]
   1400077f2:	add    BYTE PTR [rax],al
   1400077f4:	add    BYTE PTR [rax],al
   1400077f6:	add    BYTE PTR [rax],al
   1400077f8:	hlt    
   1400077f9:	rex.X add BYTE PTR [rax],al
   1400077fc:	(bad)  
   1400077fd:	(bad)  
   1400077fe:	(bad)  
   1400077ff:	dec    DWORD PTR [rdi]
   140007801:	rex.XB add BYTE PTR [r8],al
   140007804:	add    BYTE PTR [rax],al
   140007806:	add    BYTE PTR [rax],al
   140007808:	or     DWORD PTR [rcx+rax*1],eax
   14000780b:	add    BYTE PTR [rdx+riz*2],al
   14000780e:	add    BYTE PTR [rax],al
   140007810:	(bad)  
   140007811:	push   rax
   140007812:	add    BYTE PTR [rax],al
   140007814:	add    DWORD PTR [rax],eax
   140007816:	add    BYTE PTR [rax],al
   140007818:	rex
   140007819:	rex.RXB add BYTE PTR [r8],r8b
   14000781c:	rex.WRX
   14000781d:	rex.RXB add BYTE PTR [r8],r8b
   140007820:	jne    0x14000787b
   140007822:	add    BYTE PTR [rax],al
   140007824:	rex.WRX
   140007825:	rex.RXB add BYTE PTR [r8],r8b
   140007828:	add    DWORD PTR [rdx],ecx
   14000782a:	add    al,BYTE PTR [rax]
   14000782c:	or     dh,BYTE PTR [rdx]
   14000782e:	(bad)  
   14000782f:	xor    BYTE PTR [rcx],al
   140007831:	(bad)  
   140007832:	add    al,BYTE PTR [rax]
   140007834:	(bad)  
   140007835:	jb     0x140007839
   140007837:	xor    BYTE PTR [rcx],cl
   140007839:	sbb    DWORD PTR [rdx],ecx
   14000783b:	add    BYTE PTR [rcx],bl
   14000783d:	(bad)  
   14000783e:	or     eax,DWORD PTR [rax]
   140007840:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140007844:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140007848:	sbb    DWORD PTR [rax+rcx*1],esi
   14000784b:	add    BYTE PTR [rcx],bl
   14000784d:	push   rdx
   14000784e:	adc    eax,0x50c6e0
   140007853:	add    BYTE PTR [rcx],al
   140007855:	add    BYTE PTR [rax],al
   140007857:	add    BYTE PTR [rcx+0x4a],cl
   14000785a:	add    BYTE PTR [rax],al
   14000785c:	mov    edx,0x9b00004b
   140007861:	pop    rcx
   140007862:	add    BYTE PTR [rax],al
   140007864:	mov    edx,0x100004b
   140007869:	add    BYTE PTR [rax],al
   14000786b:	add    BYTE PTR [rcx],dl
   14000786d:	or     al,BYTE PTR [rax+rax*1]
   140007870:	or     dh,BYTE PTR [rsi+rax*1]
   140007873:	add    BYTE PTR [rdx],cl
   140007875:	xor    al,BYTE PTR [rsi]
   140007877:	jo     0x14000783f
   140007879:	push   rax
   14000787a:	add    BYTE PTR [rax],al
   14000787c:	add    DWORD PTR [rax],eax
   14000787e:	add    BYTE PTR [rax],al
   140007880:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007881:	rex.WR add BYTE PTR [rax],r8b
   140007884:	(bad)  
   140007885:	rex.WR add BYTE PTR [rax],r8b
   140007888:	mov    edi,0x59
   14000788d:	add    BYTE PTR [rax],al
   14000788f:	add    BYTE PTR [rcx],cl
   140007891:	add    al,0x1
   140007893:	add    BYTE PTR [rdx+riz*1],al
   140007896:	add    BYTE PTR [rax],al
   140007898:	(bad)  
   140007899:	push   rax
   14000789a:	add    BYTE PTR [rax],al
   14000789c:	add    DWORD PTR [rax],eax
   14000789e:	add    BYTE PTR [rax],al
   1400078a0:	rex.WR
   1400078a1:	rex.WRX add BYTE PTR [rax],r8b
   1400078a4:	(bad)  
   1400078a5:	rex.WRX add BYTE PTR [rax],r8b
   1400078a8:	add    DWORD PTR [rax],eax
   1400078aa:	add    BYTE PTR [rax],al
   1400078ac:	(bad)  
   1400078ad:	rex.WRX add BYTE PTR [rax],r8b
   1400078b0:	or     DWORD PTR [rdx],ecx
   1400078b2:	add    al,0x0
   1400078b4:	or     dh,BYTE PTR [rsi+rax*1]
   1400078b7:	add    BYTE PTR [rdx],cl
   1400078b9:	xor    al,BYTE PTR [rsi]
   1400078bb:	jo     0x140007883
   1400078bd:	push   rax
   1400078be:	add    BYTE PTR [rax],al
   1400078c0:	add    DWORD PTR [rax],eax
   1400078c2:	add    BYTE PTR [rax],al
   1400078c4:	pop    rbp
   1400078c5:	rex.WRXB add BYTE PTR [r8],r8b
   1400078c8:	nop
   1400078c9:	rex.WRXB add BYTE PTR [r8],r8b
   1400078cc:	loopne 0x140007927
   1400078ce:	add    BYTE PTR [rax],al
   1400078d0:	nop
   1400078d1:	rex.WRXB add BYTE PTR [r8],r8b
   1400078d4:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d78de
   1400078da:	or     DWORD PTR [rax],eax
   1400078dc:	or     eax,0x1500632
   1400078e1:	or     al,0x2
   1400078e3:	add    BYTE PTR [rcx+rax*1],cl
   1400078e6:	adc    DWORD PTR [rax],eax
   1400078e8:	add    DWORD PTR [rax],eax
	...
   1400078f2:	add    BYTE PTR [rax],al
   1400078f4:	pop    rax
   1400078f5:	nop
   1400078f6:	add    BYTE PTR [rax],al
   1400078f8:	add    BYTE PTR [rax],al
   1400078fa:	add    BYTE PTR [rax],al
   1400078fc:	(bad)  
   1400078fd:	(bad)  
   1400078fe:	(bad)  
   1400078ff:	inc    DWORD PTR [rax]
   140007901:	add    BYTE PTR [rax],al
   140007903:	add    BYTE PTR [rax],bl
   140007905:	add    BYTE PTR [rax],al
   140007907:	add    BYTE PTR [rdi+rax*2+0x0],ah
	...
   14000791b:	add    ah,al
   14000791d:	rex.RXB add BYTE PTR [r8],r8b
   140007920:	add    BYTE PTR [rax],al
   140007922:	add    BYTE PTR [rax],al
   140007924:	cmp    BYTE PTR [rcx+0x0],bh
	...
   140007937:	add    BYTE PTR [rbx],al
   140007939:	add    BYTE PTR [rax],al
   14000793b:	add    BYTE PTR [rax+0x79],bl
   14000793e:	add    BYTE PTR [rax],al
   140007940:	lock js 0x140007943
   140007943:	add    BYTE PTR [rax+0x7a],cl
	...
   14000795a:	add    BYTE PTR [rax],al
   14000795c:	adc    BYTE PTR [rax+0x0],0x0
   140007963:	add    bh,bh
   140007965:	(bad)  
   140007966:	(bad)  
   140007967:	inc    DWORD PTR [rax]
   140007969:	add    BYTE PTR [rax],al
   14000796b:	add    BYTE PTR [rax],bl
   14000796d:	add    BYTE PTR [rax],al
   14000796f:	add    BYTE PTR [rdi+rax*2+0x0],ah
	...
   140007983:	add    BYTE PTR [rax+0x90],ch
   140007989:	add    BYTE PTR [rax],al
   14000798b:	add    bh,bh
   14000798d:	(bad)  
   14000798e:	(bad)  
   14000798f:	inc    DWORD PTR [rax]
   140007991:	add    BYTE PTR [rax],al
   140007993:	add    BYTE PTR [rax+rax*1],al
	...
   1400079a6:	add    BYTE PTR [rax],al
   1400079a8:	add    DWORD PTR [rax],eax
   1400079aa:	add    BYTE PTR [rax],al
   1400079ac:	cmp    BYTE PTR [rcx+0x0],0x0
	...
   1400079c4:	test   al,0x79
	...
   1400079d6:	add    BYTE PTR [rax],al
   1400079d8:	add    DWORD PTR [rax],eax
   1400079da:	add    BYTE PTR [rax],al
   1400079dc:	call   0x140007a5a
	...
   1400079e9:	add    BYTE PTR [rax],al
   1400079eb:	add    al,dl
   1400079ed:	nop
   1400079ee:	add    BYTE PTR [rax],al
   1400079f0:	add    BYTE PTR [rax],al
   1400079f2:	add    BYTE PTR [rax],al
   1400079f4:	(bad)  
   1400079f5:	(bad)  
   1400079f6:	(bad)  
   1400079f7:	inc    DWORD PTR [rax]
   1400079f9:	add    BYTE PTR [rax],al
   1400079fb:	add    BYTE PTR [rax+rax*1],al
	...
   140007a1a:	add    BYTE PTR [rax],al
   140007a1c:	fdivr  DWORD PTR [rcx+0x0]
	...
   140007a2f:	add    BYTE PTR [rdx],al
   140007a31:	add    BYTE PTR [rax],al
   140007a33:	add    BYTE PTR [rax+0x7a],dh
   140007a36:	add    BYTE PTR [rax],al
   140007a38:	rex.W jp 0x140007a3b
	...
   140007a4b:	add    BYTE PTR [rax],ch
   140007a4d:	xchg   ecx,eax
   140007a4e:	add    BYTE PTR [rax],al
   140007a50:	add    BYTE PTR [rax],al
   140007a52:	add    BYTE PTR [rax],al
   140007a54:	(bad)  
   140007a55:	(bad)  
   140007a56:	(bad)  
   140007a57:	inc    DWORD PTR [rax]
   140007a59:	add    BYTE PTR [rax],al
   140007a5b:	add    BYTE PTR [rax],bl
   140007a5d:	add    BYTE PTR [rax],al
   140007a5f:	add    BYTE PTR [rbp+rcx*2+0x0],dl
	...
   140007a6e:	add    BYTE PTR [rax],al
   140007a70:	adc    BYTE PTR [rax],al
   140007a72:	add    BYTE PTR [rax],al
   140007a74:	add    BYTE PTR [rcx+0x0],dl
   140007a7a:	add    BYTE PTR [rax],al
   140007a7c:	(bad)  
   140007a7d:	(bad)  
   140007a7e:	(bad)  
   140007a7f:	inc    DWORD PTR [rax]
   140007a81:	add    BYTE PTR [rax],al
   140007a83:	add    BYTE PTR [rax],bl
   140007a85:	add    BYTE PTR [rax],al
   140007a87:	add    BYTE PTR [rsi+rdi*1+0x0],dh
	...
   140007a9a:	add    BYTE PTR [rax],al
   140007a9c:	and    BYTE PTR [rdi],bh
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	add    BYTE PTR [rax],al
   140007aa2:	add    BYTE PTR [rax],al
   140007aa4:	xor    BYTE PTR [rdx+0x0],bh
	...
   140007ab7:	add    BYTE PTR [rax+0x7b],bl
	...
   140007ac2:	add    BYTE PTR [rax],al
   140007ac4:	mov    dl,0x7f
   140007ac6:	add    BYTE PTR [rax],al
   140007ac8:	add    BYTE PTR [rax+0x0],ah
   140007acb:	add    al,dl
   140007acd:	jnp    0x140007acf
	...
   140007ad7:	add    BYTE PTR [rax+0x78000080],dh
   140007add:	(bad)  
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	add    BYTE PTR [rbp+0x0],bh
	...
   140007aeb:	add    BYTE PTR [rax-0x57ffff7e],dh
   140007af1:	(bad)  
   140007af2:	add    BYTE PTR [rax],al
   140007af4:	lock jl 0x140007af7
	...
   140007aff:	add    BYTE PTR [rsi],ah
   140007b01:	add    DWORD PTR [rax],0x0
   140007b04:	cwde   
   140007b05:	(bad)  
   140007b06:	add    BYTE PTR [rax],al
   140007b08:	jo     0x140007b88
	...
   140007b12:	add    BYTE PTR [rax],al
   140007b14:	pushf  
   140007b15:	add    DWORD PTR [rax],0x0
   140007b18:	sbb    BYTE PTR [rbx+0x0],ah
   140007b1b:	add    al,ah
   140007b1d:	jl     0x140007b1f
	...
   140007b27:	add    BYTE PTR [rbx+rax*4+0x61880000],dh
   140007b2e:	add    BYTE PTR [rax],al
   140007b30:	rex jle 0x140007b33
	...
   140007b3b:	add    BYTE PTR [rdx],al
   140007b3d:	test   BYTE PTR [rax],al
   140007b3f:	add    al,ch
   140007b41:	(bad)  
	...
   140007b56:	add    BYTE PTR [rax],al
   140007b58:	test   al,0x7e
   140007b5a:	add    BYTE PTR [rax],al
   140007b5c:	add    BYTE PTR [rax],al
   140007b5e:	add    BYTE PTR [rax],al
   140007b60:	mov    eax,0x7e
   140007b65:	add    BYTE PTR [rax],al
   140007b67:	add    al,dl
   140007b69:	jle    0x140007b6b
   140007b6b:	add    BYTE PTR [rax],al
   140007b6d:	add    BYTE PTR [rax],al
   140007b6f:	add    dh,ah
   140007b71:	jle    0x140007b73
   140007b73:	add    BYTE PTR [rax],al
   140007b75:	add    BYTE PTR [rax],al
   140007b77:	add    ah,bh
   140007b79:	jle    0x140007b7b
   140007b7b:	add    BYTE PTR [rax],al
   140007b7d:	add    BYTE PTR [rax],al
   140007b7f:	add    BYTE PTR [rdx],dl
   140007b81:	jg     0x140007b83
   140007b83:	add    BYTE PTR [rax],al
   140007b85:	add    BYTE PTR [rax],al
   140007b87:	add    BYTE PTR [rdx],ch
   140007b89:	jg     0x140007b8b
   140007b8b:	add    BYTE PTR [rax],al
   140007b8d:	add    BYTE PTR [rax],al
   140007b8f:	add    BYTE PTR [rax],bh
   140007b91:	jg     0x140007b93
   140007b93:	add    BYTE PTR [rax],al
   140007b95:	add    BYTE PTR [rax],al
   140007b97:	add    BYTE PTR [rsi+0x7f],al
   140007b9a:	add    BYTE PTR [rax],al
   140007b9c:	add    BYTE PTR [rax],al
   140007b9e:	add    BYTE PTR [rax],al
   140007ba0:	push   rsi
   140007ba1:	jg     0x140007ba3
   140007ba3:	add    BYTE PTR [rax],al
   140007ba5:	add    BYTE PTR [rax],al
   140007ba7:	add    BYTE PTR [rdx+0x7f],ch
   140007baa:	add    BYTE PTR [rax],al
   140007bac:	add    BYTE PTR [rax],al
   140007bae:	add    BYTE PTR [rax],al
   140007bb0:	cmp    BYTE PTR [rdi+0x0],0x0
   140007bb4:	add    BYTE PTR [rax],al
   140007bb6:	add    BYTE PTR [rax],al
   140007bb8:	mov    ?,WORD PTR [rdi+0x0]
   140007bbb:	add    BYTE PTR [rax],al
   140007bbd:	add    BYTE PTR [rax],al
   140007bbf:	add    BYTE PTR [rsi+0x7f],bl
	...
   140007bcd:	add    BYTE PTR [rax],al
   140007bcf:	add    al,al
   140007bd1:	jg     0x140007bd3
   140007bd3:	add    BYTE PTR [rax],al
   140007bd5:	add    BYTE PTR [rax],al
   140007bd7:	add    dl,dl
   140007bd9:	jg     0x140007bdb
   140007bdb:	add    BYTE PTR [rax],al
   140007bdd:	add    BYTE PTR [rax],al
   140007bdf:	add    dh,bl
   140007be1:	jg     0x140007be3
   140007be3:	add    BYTE PTR [rax],al
   140007be5:	add    BYTE PTR [rax],al
   140007be7:	add    dh,ch
   140007be9:	jg     0x140007beb
   140007beb:	add    BYTE PTR [rax],al
   140007bed:	add    BYTE PTR [rax],al
   140007bef:	add    dh,bh
   140007bf1:	jg     0x140007bf3
   140007bf3:	add    BYTE PTR [rax],al
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    BYTE PTR [rax+rax*4],dl
   140007bfa:	add    BYTE PTR [rax],al
   140007bfc:	add    BYTE PTR [rax],al
   140007bfe:	add    BYTE PTR [rax],al
   140007c00:	and    al,BYTE PTR [rax+0x0]
   140007c06:	add    BYTE PTR [rax],al
   140007c08:	add    BYTE PTR ss:[rax],0x0
   140007c0c:	add    BYTE PTR [rax],al
   140007c0e:	add    BYTE PTR [rax],al
   140007c10:	rex.W add BYTE PTR [rax],0x0
   140007c14:	add    BYTE PTR [rax],al
   140007c16:	add    BYTE PTR [rax],al
   140007c18:	pop    rax
   140007c19:	add    BYTE PTR [rax],0x0
   140007c1c:	add    BYTE PTR [rax],al
   140007c1e:	add    BYTE PTR [rax],al
   140007c20:	push   0x80
   140007c25:	add    BYTE PTR [rax],al
   140007c27:	add    BYTE PTR [rdx-0x80],bh
   140007c2a:	add    BYTE PTR [rax],al
   140007c2c:	add    BYTE PTR [rax],al
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	nop
   140007c31:	add    BYTE PTR [rax],0x0
   140007c34:	add    BYTE PTR [rax],al
   140007c36:	add    BYTE PTR [rax],al
   140007c38:	mov    esp,0x84
   140007c3d:	add    BYTE PTR [rax],al
   140007c3f:	add    BYTE PTR [rsp+rax*4+0x0],ah
   140007c46:	add    BYTE PTR [rax],al
   140007c48:	xchg   edx,eax
   140007c49:	test   BYTE PTR [rax],al
   140007c4b:	add    BYTE PTR [rax],al
   140007c4d:	add    BYTE PTR [rax],al
   140007c4f:	add    BYTE PTR [rdx-0x7c],bh
   140007c52:	add    BYTE PTR [rax],al
   140007c54:	add    BYTE PTR [rax],al
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	pop    rsi
   140007c59:	test   BYTE PTR [rax],al
   140007c5b:	add    BYTE PTR [rax],al
   140007c5d:	add    BYTE PTR [rax],al
   140007c5f:	add    BYTE PTR [rax-0x7c],dl
   140007c62:	add    BYTE PTR [rax],al
   140007c64:	add    BYTE PTR [rax],al
   140007c66:	add    BYTE PTR [rax],al
   140007c68:	test   BYTE PTR ds:[rax],al
   140007c6b:	add    BYTE PTR [rax],al
   140007c6d:	add    BYTE PTR [rax],al
   140007c6f:	add    BYTE PTR [rdx],dh
   140007c71:	test   BYTE PTR [rax],al
   140007c73:	add    BYTE PTR [rax],al
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rsi],ah
   140007c79:	test   BYTE PTR [rax],al
   140007c7b:	add    BYTE PTR [rax],al
   140007c7d:	add    BYTE PTR [rax],al
   140007c7f:	add    BYTE PTR [rax],bl
   140007c81:	test   BYTE PTR [rax],al
   140007c83:	add    BYTE PTR [rax],al
   140007c85:	add    BYTE PTR [rax],al
   140007c87:	add    BYTE PTR [rsp+rax*4],cl
   140007c8a:	add    BYTE PTR [rax],al
   140007c8c:	add    BYTE PTR [rax],al
   140007c8e:	add    BYTE PTR [rax],al
   140007c90:	(bad)  
   140007c91:	test   BYTE PTR [rax],al
   140007c93:	add    BYTE PTR [rax],al
   140007c95:	add    BYTE PTR [rax],al
   140007c97:	add    ah,bl
   140007c99:	test   BYTE PTR [rax],al
   140007c9b:	add    BYTE PTR [rax],al
   140007c9d:	add    BYTE PTR [rax],al
   140007c9f:	add    dl,bh
   140007ca1:	test   BYTE PTR [rax],al
   140007ca3:	add    BYTE PTR [rax],al
   140007ca5:	add    BYTE PTR [rax],al
   140007ca7:	add    BYTE PTR [rsi],cl
   140007ca9:	test   DWORD PTR [rax],eax
   140007cab:	add    BYTE PTR [rax],al
   140007cad:	add    BYTE PTR [rax],al
   140007caf:	add    BYTE PTR [rax],ch
   140007cb1:	test   DWORD PTR [rax],eax
   140007cb3:	add    BYTE PTR [rax],al
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	add    BYTE PTR [rsi],bh
   140007cb9:	test   DWORD PTR [rax],eax
   140007cbb:	add    BYTE PTR [rax],al
   140007cbd:	add    BYTE PTR [rax],al
   140007cbf:	add    BYTE PTR [rax-0x7b],bl
   140007cc2:	add    BYTE PTR [rax],al
   140007cc4:	add    BYTE PTR [rax],al
   140007cc6:	add    BYTE PTR [rax],al
   140007cc8:	push   0x85
   140007ccd:	add    BYTE PTR [rax],al
   140007ccf:	add    BYTE PTR [rbp+rax*4+0x0],al
	...
   140007cde:	add    BYTE PTR [rax],al
   140007ce0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007ce1:	add    DWORD PTR [rax],0x0
	...
   140007cf0:	adc    al,BYTE PTR [rbx+0x0]
	...
   140007cfe:	add    BYTE PTR [rax],al
   140007d00:	inc    BYTE PTR [rdx+0x0]
   140007d06:	add    BYTE PTR [rax],al
   140007d08:	out    0x82,al
   140007d0a:	add    BYTE PTR [rax],al
   140007d0c:	add    BYTE PTR [rax],al
   140007d0e:	add    BYTE PTR [rax],al
   140007d10:	(bad)  
   140007d11:	(bad)  
   140007d12:	add    BYTE PTR [rax],al
   140007d14:	add    BYTE PTR [rax],al
   140007d16:	add    BYTE PTR [rax],al
   140007d18:	fadd   QWORD PTR [rdx+0x0]
   140007d1e:	add    BYTE PTR [rax],al
   140007d20:	(bad)  
   140007d21:	(bad)  
   140007d22:	add    BYTE PTR [rax],al
   140007d24:	add    BYTE PTR [rax],al
   140007d26:	add    BYTE PTR [rax],al
   140007d28:	(bad)
   140007d2c:	add    BYTE PTR [rax],al
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	mov    esp,0x82
   140007d35:	add    BYTE PTR [rax],al
   140007d37:	add    dl,dl
   140007d39:	test   DWORD PTR [rax],eax
   140007d3b:	add    BYTE PTR [rax],al
   140007d3d:	add    BYTE PTR [rax],al
   140007d3f:	add    BYTE PTR [rax-0x7e],bl
   140007d42:	add    BYTE PTR [rax],al
   140007d44:	add    BYTE PTR [rax],al
   140007d46:	add    BYTE PTR [rax],al
   140007d48:	rex.W (bad) 
   140007d4a:	add    BYTE PTR [rax],al
   140007d4c:	add    BYTE PTR [rax],al
   140007d4e:	add    BYTE PTR [rax],al
   140007d50:	ss (bad) 
   140007d52:	add    BYTE PTR [rax],al
   140007d54:	add    BYTE PTR [rax],al
   140007d56:	add    BYTE PTR [rax],al
   140007d58:	and    al,0x82
   140007d5a:	add    BYTE PTR [rax],al
   140007d5c:	add    BYTE PTR [rax],al
   140007d5e:	add    BYTE PTR [rax],al
   140007d60:	(bad)  
   140007d61:	(bad)  
   140007d62:	add    BYTE PTR [rax],al
   140007d64:	add    BYTE PTR [rax],al
   140007d66:	add    BYTE PTR [rax],al
   140007d68:	or     BYTE PTR [rdx+0x0],al
   140007d6e:	add    BYTE PTR [rax],al
   140007d70:	(bad)  
   140007d71:	(bad)  
   140007d72:	add    BYTE PTR [rax],al
   140007d74:	add    BYTE PTR [rax],al
   140007d76:	add    BYTE PTR [rax],al
   140007d78:	(bad)  
   140007d7a:	add    BYTE PTR [rax],al
   140007d7c:	add    BYTE PTR [rax],al
   140007d7e:	add    BYTE PTR [rax],al
   140007d80:	jbe    0x140007d04
   140007d82:	add    BYTE PTR [rax],al
   140007d84:	add    BYTE PTR [rax],al
   140007d86:	add    BYTE PTR [rax],al
   140007d88:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007d89:	(bad)  
   140007d8a:	add    BYTE PTR [rax],al
   140007d8c:	add    BYTE PTR [rax],al
   140007d8e:	add    BYTE PTR [rax],al
   140007d90:	cld    
   140007d91:	add    DWORD PTR [rax],0x0
   140007d97:	add    ah,bl
   140007d99:	add    DWORD PTR [rax],0x0
   140007d9f:	add    dh,al
   140007da1:	add    DWORD PTR [rax],0x0
   140007da7:	add    BYTE PTR [rcx+rax*4+0x0],bh
   140007dae:	add    BYTE PTR [rax],al
   140007db0:	scas   al,BYTE PTR es:[rdi]
   140007db1:	add    DWORD PTR [rax],0x0
   140007db7:	add    BYTE PTR [rax+0x81],ah
   140007dbd:	add    BYTE PTR [rax],al
   140007dbf:	add    BYTE PTR [rcx+rax*4+0x0],dl
   140007dc6:	add    BYTE PTR [rax],al
   140007dc8:	xchg   BYTE PTR [rcx+0x0],al
   140007dce:	add    BYTE PTR [rax],al
   140007dd0:	js     0x140007d53
   140007dd2:	add    BYTE PTR [rax],al
   140007dd4:	add    BYTE PTR [rax],al
   140007dd6:	add    BYTE PTR [rax],al
   140007dd8:	pop    rdx
   140007dd9:	add    DWORD PTR [rax],0x0
   140007ddf:	add    BYTE PTR [rdx],bh
   140007de1:	add    DWORD PTR [rax],0x0
   140007de7:	add    BYTE PTR [rdx],ah
   140007de9:	add    DWORD PTR [rax],0x0
   140007def:	add    BYTE PTR [rdx],bl
   140007df1:	add    DWORD PTR [rax],0x0
   140007df7:	add    BYTE PTR [rax],dl
   140007df9:	add    DWORD PTR [rax],0x0
   140007dff:	add    dl,dh
   140007e01:	add    BYTE PTR [rax],0x0
   140007e04:	add    BYTE PTR [rax],al
   140007e06:	add    BYTE PTR [rax],al
   140007e08:	out    0x80,al
   140007e0a:	add    BYTE PTR [rax],al
   140007e0c:	add    BYTE PTR [rax],al
   140007e0e:	add    BYTE PTR [rax],al
   140007e10:	fiadd  DWORD PTR [rax+0x0]
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	(bad)  
   140007e19:	add    BYTE PTR [rax],0x0
   140007e1c:	add    BYTE PTR [rax],al
   140007e1e:	add    BYTE PTR [rax],al
   140007e20:	mov    esi,0x80
   140007e25:	add    BYTE PTR [rax],al
   140007e27:	add    BYTE PTR [rax-0x7e],dl
   140007e2a:	add    BYTE PTR [rax],al
   140007e2c:	add    BYTE PTR [rax],al
   140007e2e:	add    BYTE PTR [rax],al
   140007e30:	call   0x140007eba
	...
   140007e3d:	add    BYTE PTR [rax],al
   140007e3f:	add    dh,ch
   140007e41:	add    DWORD PTR [rax],0x0
   140007e44:	add    BYTE PTR [rax],al
   140007e46:	add    BYTE PTR [rax],al
   140007e48:	(bad)  
   140007e49:	add    DWORD PTR [rax],0x0
   140007e4c:	add    BYTE PTR [rax],al
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	rol    BYTE PTR [rbx+0x0],0x0
   140007e57:	add    BYTE PTR [rax+0x85],dh
   140007e5d:	add    BYTE PTR [rax],al
   140007e5f:	add    BYTE PTR [rax+0x85],bl
	...
   140007e6d:	add    BYTE PTR [rax],al
   140007e6f:	add    BYTE PTR [rsi-0x7d],dl
   140007e72:	add    BYTE PTR [rax],al
   140007e74:	add    BYTE PTR [rax],al
   140007e76:	add    BYTE PTR [rax],al
   140007e78:	rex.R add DWORD PTR [rax],0x0
   140007e7c:	add    BYTE PTR [rax],al
   140007e7e:	add    BYTE PTR [rax],al
   140007e80:	mov    BYTE PTR [rbx+0x0],al
   140007e86:	add    BYTE PTR [rax],al
   140007e88:	xor    al,BYTE PTR [rbx+0x0]
   140007e8e:	add    BYTE PTR [rax],al
   140007e90:	add    WORD PTR [rax],0x0
   140007e94:	add    BYTE PTR [rax],al
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	js     0x140007e1d
	...
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	and    BYTE PTR [rbx],al
   140007eaa:	push   rsp
   140007eab:	jb     0x140007f0e
   140007ead:	movsxd esp,DWORD PTR [rbp+0x4d]
   140007eb0:	gs jae 0x140007f26
   140007eb3:	(bad)  
   140007eb4:	add    BYTE PTR gs:[eax],al
   140007eb8:	jb     0x140007ebb
   140007eba:	rex.RXB
   140007ebb:	gs je  0x140007f12
   140007ebe:	jb     0x140007f21
   140007ec0:	movsxd esp,DWORD PTR [rbp+0x4c]
   140007ec3:	outs   dx,DWORD PTR ds:[rsi]
   140007ec4:	addr32 addr32 gs jb 0x140007f11
   140007ec9:	(bad)  
   140007eca:	outs   dx,BYTE PTR ds:[rsi]
   140007ecb:	fs ins BYTE PTR es:[rdi],dx
   140007ecd:	add    BYTE PTR gs:[rax],al
   140007ed0:	jno    0x140007ed3
   140007ed2:	rex.RXB
   140007ed3:	gs je  0x140007f2a
   140007ed6:	jb     0x140007f39
   140007ed8:	movsxd esp,DWORD PTR [rbp+0x45]
   140007edb:	outs   dx,BYTE PTR ds:[rsi]
   140007edc:	(bad)  
   140007edd:	(bad)  
   140007ede:	ins    BYTE PTR es:[rdi],dx
   140007edf:	gs rex.WR
   140007ee1:	gs jbe 0x140007f49
   140007ee4:	ins    BYTE PTR es:[rdi],dx
   140007ee5:	add    BYTE PTR [rax+0x1],dh
   140007ee8:	rex.RXB
   140007ee9:	gs je  0x140007f40
   140007eec:	jb     0x140007f4f
   140007eee:	movsxd esp,DWORD PTR [rbp+0x45]
   140007ef1:	outs   dx,BYTE PTR ds:[rsi]
   140007ef2:	(bad)  
   140007ef3:	(bad)  
   140007ef4:	ins    BYTE PTR es:[rdi],dx
   140007ef5:	gs rex.RX ins BYTE PTR es:[rdi],dx
   140007ef8:	(bad)  
   140007ef9:	addr32 jae 0x140007efc
   140007efc:	scas   eax,DWORD PTR es:[rdi]
   140007efd:	add    dl,BYTE PTR [rdx+0x65]
   140007f00:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   140007f08:	(bad)  
   140007f09:	movsxd esp,DWORD PTR [rbp+0x47]
   140007f0c:	jne    0x140007f77
   140007f0e:	fs jae 0x140007f68
   140007f11:	add    BYTE PTR [rip+0x726e5503],ch        # 0x1b26ed41a
   140007f17:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   140007f20:	(bad)  
   140007f21:	movsxd esp,DWORD PTR [rbp+0x47]
   140007f24:	jne    0x140007f8f
   140007f26:	fs jae 0x140007f29
   140007f29:	add    ch,dh
   140007f2b:	add    dl,BYTE PTR [rbx+0x74]
   140007f2e:	(bad)  
   140007f2f:	jb     0x140007fa5
   140007f31:	push   rsp
   140007f32:	jb     0x140007f95
   140007f34:	movsxd esp,DWORD PTR [rbp+0x57]
   140007f37:	add    BYTE PTR [rip+0x616e4501],al        # 0x1a16ec43e
   140007f3d:	(bad)  
   140007f3e:	ins    BYTE PTR es:[rdi],dx
   140007f3f:	gs push rsp
   140007f41:	jb     0x140007fa4
   140007f43:	movsxd esp,DWORD PTR [rbp+0x0]
   140007f46:	outs   dx,BYTE PTR ds:[rsi]
   140007f47:	add    BYTE PTR [rbx+0x6f],al
   140007f4a:	outs   dx,BYTE PTR ds:[rsi]
   140007f4b:	je     0x140007fbf
   140007f4d:	outs   dx,DWORD PTR ds:[rsi]
   140007f4e:	ins    BYTE PTR es:[rdi],dx
   140007f4f:	push   rsp
   140007f50:	jb     0x140007fb3
   140007f52:	movsxd esp,DWORD PTR [rbp+0x57]
   140007f55:	add    BYTE PTR [rbx],dl
   140007f57:	add    cl,BYTE PTR [rdi+0x70]
   140007f5a:	outs   dx,BYTE PTR gs:[rsi]
   140007f5c:	push   rax
   140007f5d:	jb     0x140007fce
   140007f5f:	movsxd esp,DWORD PTR [rbp+0x73]
   140007f62:	jae    0x140007fb8
   140007f64:	outs   dx,DWORD PTR ds:[rsi]
   140007f65:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140007f69:	add    BYTE PTR [rdi+0x1],ch
   140007f6c:	rex.RXB
   140007f6d:	gs je  0x140007fc4
   140007f70:	outs   dx,DWORD PTR ds:[rsi]
   140007f71:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   140007f75:	outs   dx,BYTE PTR ds:[rsi]
   140007f76:	outs   dx,WORD PTR ds:[rsi]
   140007f78:	jb     0x140007fe7
   140007f7a:	(bad)  
   140007f7b:	je     0x140007fe6
   140007f7d:	outs   dx,DWORD PTR ds:[rsi]
   140007f7e:	outs   dx,BYTE PTR ds:[rsi]
   140007f7f:	add    BYTE PTR [rbp+0x2],dl
   140007f82:	push   rdx
   140007f83:	gs rex.XB ins BYTE PTR es:[edi],dx
   140007f87:	outs   dx,DWORD PTR ds:[rsi]
   140007f88:	jae    0x140007fef
   140007f8a:	rex.WXB
   140007f8b:	gs jns 0x140007f8e
   140007f8e:	xchg   BYTE PTR [rdx],al
   140007f90:	push   rdx
   140007f91:	gs addr32 rex.WRXB jo 0x140007ffb
   140007f96:	outs   dx,BYTE PTR ds:[rsi]
   140007f97:	rex.WXB
   140007f98:	gs jns 0x140007fe0
   140007f9b:	js     0x140007ff4
   140007f9d:	add    BYTE PTR [rbx+0x67655202],dl
   140007fa3:	push   rcx
   140007fa4:	jne    0x14000800b
   140007fa6:	jb     0x140008021
   140007fa8:	push   rsi
   140007fa9:	(bad)  
   140007faa:	ins    BYTE PTR es:[rdi],dx
   140007fab:	jne    0x140008012
   140007fad:	rex.RB js 0x140008007
   140007fb0:	add    BYTE PTR [rax],al
   140007fb2:	rex.B
   140007fb3:	rex.R push rsi
   140007fb5:	push   r8
   140007fb7:	xor    rsi,QWORD PTR [r10]
   140007fba:	cs fs ins BYTE PTR es:[rdi],dx
   140007fbd:	ins    BYTE PTR es:[rdi],dx
   140007fbe:	add    BYTE PTR [rax],al
   140007fc0:	movabs al,ds:0x4d74616d726f4601
   140007fc9:	gs jae 0x14000803f
   140007fcc:	(bad)  
   140007fcd:	addr32 gs push rdi
   140007fd0:	add    BYTE PTR [rax],al
   140007fd2:	mov    ecx,0x636f4c03
   140007fd7:	(bad)  
   140007fd8:	ins    BYTE PTR es:[rdi],dx
   140007fd9:	rex.RX jb 0x140008041
   140007fdc:	gs add ch,ch
   140007fdf:	add    al,BYTE PTR [rdi+0x65]
   140007fe2:	je     0x140008038
   140007fe4:	gs ins DWORD PTR es:[rdi],dx
   140007fe6:	jo     0x140008038
   140007fe8:	(bad)  
   140007fe9:	je     0x140008053
   140007feb:	push   rdi
   140007fec:	add    BYTE PTR [rax],al
   140007fee:	push   rdi
   140007fef:	add    al,BYTE PTR [rdi+0x65]
   140007ff2:	je     0x140008040
   140007ff4:	(bad)  
   140007ff5:	jae    0x14000806b
   140007ff7:	rex.RB jb 0x14000806c
   140007ffa:	outs   dx,DWORD PTR ds:[rsi]
   140007ffb:	jb     0x140007ffd
   140007ffd:	add    BYTE PTR [rcx],dl
   140007fff:	add    al,BYTE PTR [rdi+0x65]
   140008002:	je     0x140008047
   140008004:	jne    0x140008078
   140008006:	jb     0x14000806d
   140008008:	outs   dx,BYTE PTR ds:[rsi]
   140008009:	je     0x14000805b
   14000800b:	jb     0x14000807c
   14000800d:	movsxd esp,DWORD PTR [rbp+0x73]
   140008010:	jae    0x14000805b
   140008012:	add    BYTE PTR fs:[rbp+0x0],bh
   140008016:	rex.XB ins BYTE PTR es:[rdi],dx
   140008018:	outs   dx,DWORD PTR ds:[rsi]
   140008019:	jae    0x140008080
   14000801b:	rex.W (bad) 
   14000801d:	outs   dx,BYTE PTR ds:[rsi]
   14000801e:	fs ins BYTE PTR es:[rdi],dx
   140008020:	add    BYTE PTR gs:[rax],dl
   140008023:	add    al,BYTE PTR [rdi+0x65]
   140008026:	je     0x14000806b
   140008028:	jne    0x14000809c
   14000802a:	jb     0x140008091
   14000802c:	outs   dx,BYTE PTR ds:[rsi]
   14000802d:	je     0x14000807f
   14000802f:	jb     0x1400080a0
   140008031:	movsxd esp,DWORD PTR [rbp+0x73]
   140008034:	jae    0x140008036
   140008036:	ins    BYTE PTR es:[rdi],dx
   140008037:	add    eax,0x657a6953
   14000803c:	outs   dx,DWORD PTR ds:[rsi]
   14000803d:	push   dx
   14000803f:	gs jae 0x1400080b1
   140008042:	jne    0x1400080b6
   140008044:	movsxd esp,DWORD PTR [rbp+0x0]
   140008047:	add    ah,al
   140008049:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   14000804d:	imul   edx,DWORD PTR [rdx+0x65],0x73
   140008051:	outs   dx,DWORD PTR ds:[rsi]
   140008052:	jne    0x1400080c6
   140008054:	movsxd esp,DWORD PTR [rbp+0x0]
   140008057:	add    BYTE PTR [rdx+0x616f4c03],dh
   14000805d:	fs push rdx
   14000805f:	gs jae 0x1400080d1
   140008062:	jne    0x1400080d6
   140008064:	movsxd esp,DWORD PTR [rbp+0x0]
   140008067:	add    BYTE PTR [rsi+0x6e694601],cl
   14000806d:	fs push rdx
   14000806f:	gs jae 0x1400080e1
   140008072:	jne    0x1400080e6
   140008074:	movsxd esp,DWORD PTR [rbp+0x45]
   140008077:	js     0x1400080d0
   140008079:	add    cl,bh
   14000807b:	add    DWORD PTR [rdi+0x65],eax
   14000807e:	je     0x1400080c3
   140008080:	outs   dx,DWORD PTR ds:[rsi]
   140008081:	outs   dx,BYTE PTR ds:[rsi]
   140008082:	jae    0x1400080f3
   140008084:	ins    BYTE PTR es:[rdi],dx
   140008085:	gs rex.WRXB jne 0x1400080fd
   140008089:	jo     0x140008100
   14000808b:	je     0x1400080d0
   14000808d:	push   rax
   14000808e:	add    BYTE PTR [rax],al
   140008090:	rex.WRB add rax,0x54746553
   140008096:	push   0x64616572
   14000809b:	push   rax
   14000809c:	jb     0x140008103
   14000809e:	data16 gs jb 0x140008114
   1400080a2:	gs fs push rbp
   1400080a5:	rex.WB
   1400080a6:	rex.WR (bad) 
   1400080a8:	outs   dx,BYTE PTR ds:[rsi]
   1400080a9:	addr32 jne 0x14000810d
   1400080ac:	addr32 gs jae 0x1400080b0
   1400080b0:	rex.WXB
   1400080b1:	rex.RB push r10
   1400080b3:	rex.WRX
   1400080b4:	rex.RB
   1400080b5:	xor    r14,QWORD PTR [rdx]
   1400080b8:	cs fs ins BYTE PTR es:[rdi],dx
   1400080bb:	ins    BYTE PTR es:[rdi],dx
   1400080bc:	add    BYTE PTR [rax],al
   1400080be:	adc    al,0x0
   1400080c0:	(bad)  
   1400080c1:	(bad)  
   1400080c2:	xor    eax,DWORD PTR [rax+0x59]
   1400080c5:	pop    r8
   1400080c7:	push   rax
   1400080c8:	rex.RB
   1400080c9:	pop    r8
   1400080cb:	rex pop rdx
   1400080cd:	add    BYTE PTR [rdx+0x63775f03],cl
   1400080d3:	jae    0x14000813e
   1400080d5:	movsxd ebp,DWORD PTR [rbp+0x70]
   1400080d8:	add    BYTE PTR [rax],al
   1400080da:	xchg   ebx,eax
   1400080db:	add    al,0x6d
   1400080dd:	gs ins DWORD PTR es:[rdi],dx
   1400080df:	movsxd esi,DWORD PTR [rax+0x79]
   1400080e2:	pop    rdi
   1400080e3:	jae    0x1400080e5
   1400080e5:	add    BYTE PTR [rbp+0x6d656d04],dl
   1400080eb:	ins    DWORD PTR es:[rdi],dx
   1400080ec:	outs   dx,DWORD PTR ds:[rsi]
   1400080ed:	jbe    0x140008154
   1400080ef:	pop    rdi
   1400080f0:	jae    0x1400080f2
   1400080f2:	xor    DWORD PTR [rax],eax
   1400080f4:	(bad)  
   1400080f5:	ja     0x14000815f
   1400080f7:	(bad)  
   1400080f8:	je     0x14000813a
   1400080fa:	gs js  0x140008160
   1400080fd:	gs jo  0x140008174
   140008100:	imul   ebp,DWORD PTR [rdi+0x6e],0x45554040
   140008107:	rex.X
   140008108:	push   r8
   14000810a:	rex.RB
   14000810b:	rex.X
   14000810c:	rex.R pop rax
   14000810e:	pop    rdx
   14000810f:	add    BYTE PTR [rsi+0x6c616d04],al
   140008115:	ins    BYTE PTR es:[rdi],dx
   140008116:	outs   dx,DWORD PTR ds:[rsi]
   140008117:	movsxd eax,DWORD PTR [rax]
   140008119:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000811d:	jb     0x140008184
   14000811f:	add    BYTE PTR gs:[rax],al
   140008122:	adc    DWORD PTR [rax],eax
   140008124:	(bad)  
   140008125:	(bad)  
   140008126:	xor    DWORD PTR [rbp+0x78],esp
   140008129:	movsxd esp,DWORD PTR [rbp+0x70]
   14000812c:	je     0x140008197
   14000812e:	outs   dx,DWORD PTR ds:[rsi]
   14000812f:	outs   dx,BYTE PTR ds:[rsi]
   140008130:	rex
   140008131:	rex push rbp
   140008133:	rex.RB
   140008134:	rex.B
   140008135:	rex.B
   140008136:	rex pop rax
   140008138:	pop    rdx
   140008139:	add    BYTE PTR [rdx],cl
   14000813b:	add    BYTE PTR [rdi],bh
   14000813d:	(bad)  
   14000813e:	xor    BYTE PTR [rbp+0x78],ah
   140008141:	movsxd esp,DWORD PTR [rbp+0x70]
   140008144:	je     0x1400081af
   140008146:	outs   dx,DWORD PTR ds:[rsi]
   140008147:	outs   dx,BYTE PTR ds:[rsi]
   140008148:	rex
   140008149:	rex push rcx
   14000814b:	rex.RB
   14000814c:	rex.B
   14000814d:	rex.B
   14000814e:	rex
   14000814f:	rex.B
   140008150:	rex.RB
   140008151:	rex.X push rcx
   140008153:	rex.RB
   140008154:	rex.X
   140008155:	rex.R
   140008156:	rex pop rdx
   140008158:	add    BYTE PTR [rax],al
   14000815a:	or     al,0x0
   14000815c:	(bad)  
   14000815d:	(bad)  
   14000815e:	xor    BYTE PTR [rbp+0x78],ah
   140008161:	movsxd esp,DWORD PTR [rbp+0x70]
   140008164:	je     0x1400081cf
   140008166:	outs   dx,DWORD PTR ds:[rsi]
   140008167:	outs   dx,BYTE PTR ds:[rsi]
   140008168:	rex
   140008169:	rex push rcx
   14000816b:	rex.RB
   14000816c:	rex.B
   14000816d:	rex.B
   14000816e:	rex
   14000816f:	rex.B
   140008170:	rex.RB
   140008171:	rex.X push rsi
   140008173:	xor    BYTE PTR [rax+0x40],al
   140008176:	pop    rdx
   140008177:	add    BYTE PTR [rax+0x3],ah
   14000817a:	pop    rdi
   14000817b:	jbe    0x1400081f0
   14000817d:	movsxd esi,DWORD PTR [rdi+0x70]
   140008180:	jb     0x1400081eb
   140008182:	outs   dx,BYTE PTR ds:[rsi]
   140008183:	je     0x1400081eb
   140008185:	add    dl,bh
   140008187:	add    al,0x76
   140008189:	jae    0x140008202
   14000818b:	jo     0x1400081ff
   14000818d:	imul   ebp,DWORD PTR [rsi+0x74],0x735f66
   140008194:	and    DWORD PTR [rip+0x69727077],eax        # 0x1a972f211
   14000819a:	outs   dx,BYTE PTR ds:[rsi]
   14000819b:	je     0x140008203
   14000819d:	pop    rdi
   14000819e:	jae    0x1400081a0
   1400081a0:	fadd   QWORD PTR [rbx+rsi*2]
   1400081a3:	ja     0x140008215
   1400081a5:	jb     0x140008210
   1400081a7:	outs   dx,BYTE PTR ds:[rsi]
   1400081a8:	je     0x140008210
   1400081aa:	pop    rdi
   1400081ab:	jae    0x1400081ad
   1400081ad:	add    dl,ch
   1400081af:	add    ebx,DWORD PTR [rdi+0x77]
   1400081b2:	jae    0x140008219
   1400081b4:	je     0x140008222
   1400081b6:	outs   dx,DWORD PTR ds:[rsi]
   1400081b7:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400081ba:	add    BYTE PTR gs:[rsi+0x6d656d04],dl
   1400081c1:	jae    0x140008228
   1400081c3:	je     0x1400081c5
   1400081c5:	add    BYTE PTR [rbx+0x0],cl
   1400081c8:	pop    rdi
   1400081c9:	rex.XB js 0x140008244
   1400081cc:	push   rsp
   1400081cd:	push   0x45776f72
   1400081d2:	js     0x140008237
   1400081d4:	gs jo  0x14000824b
   1400081d7:	imul   ebp,DWORD PTR [rdi+0x6e],0xb0000
   1400081de:	(bad)  
   1400081df:	(bad)  
   1400081e0:	xor    BYTE PTR [rbp+0x78],ah
   1400081e3:	movsxd esp,DWORD PTR [rbp+0x70]
   1400081e6:	je     0x140008251
   1400081e8:	outs   dx,DWORD PTR ds:[rsi]
   1400081e9:	outs   dx,BYTE PTR ds:[rsi]
   1400081ea:	rex
   1400081eb:	rex push rcx
   1400081ed:	rex.RB
   1400081ee:	rex.B
   1400081ef:	rex.B
   1400081f0:	rex
   1400081f1:	rex.B
   1400081f2:	rex.RB
   1400081f3:	rex.X push rcx
   1400081f5:	rex.RB
   1400081f6:	rex.X
   1400081f7:	rex.R
   1400081f8:	rex.W
   1400081f9:	rex pop rdx
   1400081fb:	add    BYTE PTR [rdi+0x61635f00],bh
   140008201:	ins    BYTE PTR es:[rdi],dx
   140008202:	ins    BYTE PTR es:[rdi],dx
   140008203:	outs   dx,BYTE PTR ds:[rsi]
   140008204:	gs ja  0x14000826f
   140008207:	add    BYTE PTR [rbp+0x0],dl
   14000820a:	pop    rdi
   14000820b:	pop    rax
   14000820c:	movsxd esi,DWORD PTR [rax+0x74]
   14000820f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140008218:	pop    rdi
   140008219:	(bad)  
   14000821a:	ins    DWORD PTR es:[rdi],dx
   14000821b:	jae    0x140008284
   14000821d:	pop    rdi
   14000821e:	gs js  0x14000828a
   140008221:	je     0x140008223
   140008223:	add    BYTE PTR [rbp+0x775f5f00],bl
   140008229:	addr32 gs je 0x14000829a
   14000822d:	(bad)  
   14000822e:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140008235:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000823b:	gs je  0x14000829d
   14000823e:	(bad)  
   14000823f:	jo     0x1400082b1
   140008241:	pop    rdi
   140008242:	je     0x1400082bd
   140008244:	jo     0x1400082ab
   140008246:	add    BYTE PTR [rax],al
   140008248:	xor    al,BYTE PTR [riz*2+0x746978]
   14000824f:	add    BYTE PTR [rsi],cl
   140008251:	add    DWORD PTR [rdi+0x65],ebx
   140008254:	js     0x1400082bf
   140008256:	je     0x140008258
   140008258:	rol    DWORD PTR [rax],0x5f
   14000825b:	movsxd esp,DWORD PTR [rbp+0x78]
   14000825e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140008266:	jae    0x1400082cd
   140008268:	je     0x1400082df
   14000826a:	jae    0x1400082d1
   14000826c:	jb     0x1400082db
   14000826e:	(bad)  
   14000826f:	je     0x1400082d9
   140008271:	gs jb  0x1400082e6
   140008274:	add    BYTE PTR [rax],al
   140008276:	jge    0x140008279
   140008278:	pop    rdi
   140008279:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140008280:	ins    DWORD PTR es:[rdi],dx
   140008281:	add    BYTE PTR [rdi+0x0],dl
   140008284:	pop    rdi
   140008285:	pop    rdi
   140008286:	rex.XB pop r15
   140008288:	jae    0x1400082fa
   14000828a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000828e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008295:	ins    BYTE PTR es:[rdi],dx
   140008296:	gs jb  0x140008299
   140008299:	add    BYTE PTR [rdi],ah
   14000829b:	add    DWORD PTR [rdi+0x66],ebx
   14000829e:	ins    DWORD PTR es:[rdi],dx
   14000829f:	outs   dx,DWORD PTR ds:[rsi]
   1400082a0:	fs add BYTE PTR gs:[rax],al
   1400082a4:	rol    BYTE PTR [rax],cl
   1400082a6:	pop    rdi
   1400082a7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400082aa:	ins    DWORD PTR es:[rdi],dx
   1400082ab:	outs   dx,DWORD PTR ds:[rsi]
   1400082ac:	fs add BYTE PTR gs:[rax],al
   1400082b0:	ins    DWORD PTR es:[rdi],dx
   1400082b1:	jae    0x140008329
   1400082b3:	movsxd esi,DWORD PTR [rdx+0x74]
   1400082b6:	cs fs ins BYTE PTR es:[rdi],dx
   1400082b9:	ins    BYTE PTR es:[rdi],dx
   1400082ba:	add    BYTE PTR [rax],al
   1400082bc:	out    0x1,al
   1400082be:	pop    rdi
   1400082bf:	ins    BYTE PTR es:[rdi],dx
   1400082c0:	outs   dx,DWORD PTR ds:[rsi]
   1400082c1:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400082c4:	add    ebx,DWORD PTR [r15+0x75]
   1400082c8:	outs   dx,BYTE PTR ds:[rsi]
   1400082c9:	ins    BYTE PTR es:[rdi],dx
   1400082ca:	outs   dx,DWORD PTR ds:[rsi]
   1400082cb:	movsxd ebp,DWORD PTR [rbx+0x0]
   1400082ce:	jnp    0x1400082d0
   1400082d0:	pop    rdi
   1400082d1:	pop    rdi
   1400082d2:	fs ins BYTE PTR es:[rdi],dx
   1400082d4:	ins    BYTE PTR es:[rdi],dx
   1400082d5:	outs   dx,DWORD PTR ds:[rsi]
   1400082d6:	outs   dx,BYTE PTR ds:[rsi]
   1400082d7:	gs js  0x140008343
   1400082da:	je     0x1400082dc
   1400082dc:	nop
   1400082dd:	add    bl,BYTE PTR [rdi+0x6f]
   1400082e0:	outs   dx,BYTE PTR ds:[rsi]
   1400082e1:	gs js  0x14000834d
   1400082e4:	je     0x1400082e6
   1400082e6:	adc    al,BYTE PTR [rax]
   1400082e8:	(bad)  
   1400082e9:	(bad)  
   1400082ea:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   1400082ee:	gs pop rdi
   1400082f0:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   1400082f7:	rex.RB
   1400082f8:	rex.B
   1400082f9:	rex.B
   1400082fa:	rex pop rax
   1400082fc:	pop    rdx
   1400082fd:	add    BYTE PTR [rdi],ch
   1400082ff:	add    BYTE PTR [rdi],bh
   140008301:	je     0x140008368
   140008303:	jb     0x140008372
   140008305:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000830c:	pop    rcx
   14000830d:	pop    r8
   14000830f:	pop    rax
   140008310:	pop    rdx
   140008311:	add    BYTE PTR [rbx+rax*1+0x55],dh
   140008315:	outs   dx,BYTE PTR ds:[rsi]
   140008316:	jb     0x14000837d
   140008318:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   140008320:	(bad)  
   140008321:	jae    0x140008396
   140008323:	add    BYTE PTR [r8],al
   140008326:	push   rbp
   140008327:	push   rbx
   140008328:	rex.RB push r10
   14000832a:	xor    esi,DWORD PTR [rdx]
   14000832c:	cs fs ins BYTE PTR es:[rdi],dx
   14000832f:	ins    BYTE PTR es:[rdi],dx
   140008330:	add    BYTE PTR [rax],al
   140008332:	(bad)  
   140008333:	add    BYTE PTR [rbx+0x6f],al
   140008336:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008338:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008340:	rex.RB js 0x140008343
   140008343:	add    BYTE PTR [rax+0x556f4300],dl
   140008349:	outs   dx,BYTE PTR ds:[rsi]
   14000834a:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140008351:	imul   edi,DWORD PTR [rdx+0x65],0x2a0000
   140008358:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000835a:	rex.XB jb 0x1400083c2
   14000835d:	(bad)  
   14000835e:	je     0x1400083c5
   140008360:	rex.RXB jne 0x1400083cc
   140008363:	add    BYTE PTR fs:[rax],al
   140008366:	or     al,BYTE PTR [rdx]
   140008368:	push   rbx
   140008369:	je     0x1400083dd
   14000836b:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f7246
   140008372:	rex.XB
   140008373:	rex.WR push rbx
   140008375:	rex.WB
   140008376:	add    BYTE PTR [rax+rax*1+0x61546f43],r9b
   14000837e:	jae    0x1400083eb
   140008380:	rex.WRB
   140008381:	gs ins DWORD PTR es:[rdi],dx
   140008383:	rex.RX jb 0x1400083eb
   140008386:	add    BYTE PTR gs:[rbx],ch
   140008389:	add    BYTE PTR [rbx+0x6f],al
   14000838c:	rex.XB jb 0x1400083f4
   14000838f:	(bad)  
   140008390:	je     0x1400083f7
   140008392:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140008394:	jae    0x14000840a
   140008396:	(bad)  
   140008397:	outs   dx,BYTE PTR ds:[rsi]
   140008398:	movsxd esp,DWORD PTR [rbp+0x0]
   14000839b:	add    BYTE PTR [rdi+0x6c],ch
   14000839e:	xor    esi,DWORD PTR gs:[rdx]
   1400083a1:	cs fs ins BYTE PTR es:[rdi],dx
   1400083a4:	ins    BYTE PTR es:[rdi],dx
   1400083a5:	add    BYTE PTR [rdi],dh
   1400083a7:	add    BYTE PTR [rax+0x61],dl
   1400083aa:	je     0x140008414
   1400083ac:	rex.B jo 0x14000841f
   1400083af:	outs   dx,BYTE PTR gs:[rsi]
   1400083b1:	fs push rdi
   1400083b3:	add    BYTE PTR [rbx+0x48],dl
   1400083b6:	rex.WR push rdi
   1400083b8:	push   r8
   1400083ba:	rex.WB
   1400083bb:	cs fs ins BYTE PTR es:[rdi],dx
   1400083be:	ins    BYTE PTR es:[rdi],dx
   1400083bf:	add    dh,al
   1400083c1:	add    dl,BYTE PTR [rdx+0x74]
   1400083c4:	ins    BYTE PTR es:[rdi],dx
   1400083c5:	rex.XB (bad) 
   1400083c7:	jo     0x14000843d
   1400083c9:	jne    0x14000843d
   1400083cb:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400083ce:	outs   dx,BYTE PTR ds:[rsi]
   1400083cf:	je     0x140008436
   1400083d1:	js     0x140008447
   1400083d3:	add    BYTE PTR [rdi+0x4],dh
   1400083d6:	push   rdx
   1400083d7:	je     0x140008445
   1400083d9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400083db:	outs   dx,DWORD PTR ds:[rsi]
   1400083dc:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400083e0:	jne    0x140008450
   1400083e2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400083e6:	outs   dx,BYTE PTR ds:[rsi]
   1400083e7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400083e9:	je     0x14000845d
   1400083eb:	jns    0x1400083ed
   1400083ed:	add    BYTE PTR [rbx+0x6c745205],cl
   1400083f3:	push   rsi
   1400083f4:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400083fb:	outs   dx,BYTE PTR ds:[rsi]
   1400083fc:	ja     0x140008467
   1400083fe:	outs   dx,BYTE PTR ds:[rsi]
   1400083ff:	add    BYTE PTR fs:[rax],al
   140008402:	outs   dx,BYTE PTR ds:[rsi]
   140008403:	je     0x140008469
   140008405:	ins    BYTE PTR es:[rdi],dx
   140008406:	ins    BYTE PTR es:[rdi],dx
   140008407:	cs fs ins BYTE PTR es:[rdi],dx
   14000840a:	ins    BYTE PTR es:[rdi],dx
   14000840b:	add    BYTE PTR [rbp+0x3],al
   14000840e:	rex.W
   14000840f:	gs (bad) 
   140008411:	jo     0x140008466
   140008413:	imul   edi,DWORD PTR [rdx+0x65],0x3430000
   14000841a:	rex.W
   14000841b:	gs (bad) 
   14000841d:	jo     0x140008471
   14000841f:	gs rex.B ins BYTE PTR es:[rdi],dx
   140008422:	ins    BYTE PTR es:[rdi],dx
   140008423:	outs   dx,DWORD PTR ds:[rsi]
   140008424:	movsxd eax,DWORD PTR [rax]
   140008426:	rex add ecx,DWORD PTR [rax+0x65]
   14000842a:	(bad)  
   14000842b:	jo     0x140008473
   14000842d:	jb     0x140008494
   14000842f:	add    BYTE PTR gs:[rax],al
   140008432:	cmp    al,0x3
   140008434:	rex.W
   140008435:	gs (bad) 
   140008437:	jo     0x14000847a
   140008439:	ins    BYTE PTR es:[rdi],dx
   14000843a:	ins    BYTE PTR es:[rdi],dx
   14000843b:	outs   dx,DWORD PTR ds:[rsi]
   14000843c:	movsxd eax,DWORD PTR [rax]
   14000843e:	stos   DWORD PTR es:[rdi],eax
   14000843f:	add    al,BYTE PTR [rdi+0x65]
   140008442:	je     0x140008494
   140008444:	jb     0x1400084b5
   140008446:	movsxd esp,DWORD PTR [rbp+0x73]
   140008449:	jae    0x140008493
   14000844b:	gs (bad) 
   14000844d:	jo     0x14000844f
   14000844f:	add    BYTE PTR [rdi],bh
   140008451:	add    ecx,DWORD PTR [rax+0x65]
   140008454:	(bad)  
   140008455:	jo     0x14000849b
   140008457:	gs jae 0x1400084ce
   14000845a:	jb     0x1400084cb
   14000845c:	jns    0x14000845e
   14000845e:	push   rsp
   14000845f:	add    ecx,DWORD PTR [rcx+0x6e]
   140008462:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000846a:	rex.XB jb 0x1400084d6
   14000846d:	je     0x1400084d8
   14000846f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008472:	push   rbx
   140008473:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008478:	outs   dx,BYTE PTR ds:[rsi]
   140008479:	add    BYTE PTR [rip+0x6c654401],al        # 0x1ac65c880
   14000847f:	gs je  0x1400084e7
   140008482:	rex.XB jb 0x1400084ee
   140008485:	je     0x1400084f0
   140008487:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000848a:	push   rbx
   14000848b:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008490:	outs   dx,BYTE PTR ds:[rsi]
   140008491:	add    BYTE PTR [rsp+rax*1+0x52],cl
   140008495:	(bad)  
   140008496:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   14000849d:	jo     0x140008513
   14000849f:	imul   ebp,DWORD PTR [rdi+0x6e],0x1290000
   1400084a6:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400084a8:	je     0x14000850f
   1400084aa:	jb     0x1400084ef
   1400084ac:	jb     0x140008517
   1400084ae:	je     0x140008519
   1400084b0:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400084b3:	push   rbx
   1400084b4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400084b9:	outs   dx,BYTE PTR ds:[rsi]
   1400084ba:	add    BYTE PTR [rax],al
   1400084bc:	test   eax,0x61654c03
   1400084c1:	jbe    0x140008528
   1400084c3:	rex.XB jb 0x14000852f
   1400084c6:	je     0x140008531
   1400084c8:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400084cb:	push   rbx
   1400084cc:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400084d1:	outs   dx,BYTE PTR ds:[rsi]
   1400084d2:	add    BYTE PTR [rax],al
   1400084d4:	ins    DWORD PTR es:[rdi],dx
   1400084d5:	add    eax,0x65656c53
   1400084da:	jo     0x1400084dc
   1400084dc:	pop    rsi
   1400084dd:	add    eax,0x55746553
   1400084e2:	outs   dx,BYTE PTR ds:[rsi]
   1400084e3:	push   0x6c646e61
   1400084e8:	gs fs rex.RB js 0x140008550
   1400084ed:	gs jo  0x140008564
   1400084f0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400084f7:	gs jb  0x1400084fa
   1400084fa:	outs   dx,BYTE PTR ds:[rsi]
   1400084fb:	add    al,BYTE PTR [rdi+0x65]
   1400084fe:	je     0x14000854d
   140008500:	outs   dx,DWORD PTR ds:[rsi]
   140008501:	fs jne 0x140008570
   140008504:	gs rex.W (bad) 
   140008507:	outs   dx,BYTE PTR ds:[rsi]
   140008508:	fs ins BYTE PTR es:[rdi],dx
   14000850a:	gs push rdi
   14000850c:	add    BYTE PTR [rax],al
   14000850e:	ss add al,0x51
   140008511:	jne    0x140008578
   140008513:	jb     0x14000858e
   140008515:	push   rax
   140008516:	gs jb  0x14000857f
   140008519:	outs   dx,DWORD PTR ds:[rsi]
   14000851a:	jb     0x140008589
   14000851c:	(bad)  
   14000851d:	outs   dx,BYTE PTR ds:[rsi]
   14000851e:	movsxd esp,DWORD PTR [rbp+0x43]
   140008521:	outs   dx,DWORD PTR ds:[rsi]
   140008522:	jne    0x140008592
   140008524:	je     0x14000858b
   140008526:	jb     0x140008528
   140008528:	adc    eax,0x74654702
   14000852d:	rex.XB jne 0x1400085a2
   140008530:	jb     0x140008597
   140008532:	outs   dx,BYTE PTR ds:[rsi]
   140008533:	je     0x140008589
   140008535:	push   0x64616572
   14000853a:	rex.WB
   14000853b:	add    BYTE PTR fs:[rax],al
   14000853e:	loopne 0x140008542
   140008540:	rex.RXB
   140008541:	gs je  0x140008597
   140008544:	jns    0x1400085b9
   140008546:	je     0x1400085ad
   140008548:	ins    DWORD PTR es:[rdi],dx
   140008549:	push   rsp
   14000854a:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008551:	ins    BYTE PTR es:[rdi],dx
   140008552:	gs push rsp
   140008554:	imul   ebp,DWORD PTR [rbp+0x65],0x4702fd00
   14000855b:	gs je  0x1400085b2
   14000855e:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140008565:	je     0x140008567
   140008567:	add    BYTE PTR [rsi+0x686e5505],bl
   14000856d:	(bad)  
   14000856e:	outs   dx,BYTE PTR ds:[rsi]
   14000856f:	fs ins BYTE PTR es:[rdi],dx
   140008571:	gs fs rex.RB js 0x1400085d9
   140008576:	gs jo  0x1400085ed
   140008579:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008580:	gs jb  0x140008583
   140008583:	add    BYTE PTR [rbp+rax*1+0x54],bh
   140008587:	gs jb  0x1400085f7
   14000858a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140008591:	outs   dx,DWORD PTR ds:[rsi]
   140008592:	movsxd esp,DWORD PTR [rbp+0x73]
   140008595:	jae    0x140008597
   140008597:	add    BYTE PTR [rdx+0x6c745204],cl
   14000859d:	rex.WRX je 0x1400085f3
   1400085a0:	je     0x140008603
   1400085a2:	je     0x140008619
   1400085a4:	jae    0x1400085fa
   1400085a6:	outs   dx,DWORD PTR ds:[rsi]
   1400085a7:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400085a9:	jae    0x1400085f0
   1400085ab:	jb     0x14000861f
   1400085ad:	outs   dx,DWORD PTR ds:[rsi]
   1400085ae:	jb     0x1400085b0
   1400085b0:	retf   0x5202
   1400085b3:	je     0x140008621
   1400085b5:	rex.XB push 0x506b6365
   1400085bb:	outs   dx,DWORD PTR ds:[rsi]
   1400085bc:	jb     0x140008632
   1400085be:	(bad)  
   1400085bf:	(bad)  
   1400085c0:	ins    BYTE PTR es:[rdi],dx
   1400085c1:	gs rex.WRXB jo 0x14000862a
   1400085c5:	jb     0x140008628
   1400085c7:	je     0x140008632
   1400085c9:	outs   dx,BYTE PTR ds:[rsi]
   1400085ca:	addr32 push rbx
   1400085cc:	jns    0x140008641
   1400085ce:	je     0x140008635
   1400085d0:	ins    DWORD PTR es:[rdi],dx
   1400085d1:	add    BYTE PTR [rbx+0x0],bl
   1400085d4:	pop    rdi
   1400085d5:	pop    rdi
   1400085d6:	rex.XB js 0x140008651
   1400085d9:	rex.RX jb 0x14000863d
   1400085dc:	ins    DWORD PTR es:[rdi],dx
   1400085dd:	gs rex.W (bad) 
   1400085e0:	outs   dx,BYTE PTR ds:[rsi]
   1400085e1:	fs ins BYTE PTR es:[rdi],dx
   1400085e3:	gs jb  0x140008619
   1400085e6:	add    BYTE PTR [rax],al
   1400085e8:	xchg   edx,eax
   1400085e9:	add    al,0x6d
   1400085eb:	gs ins DWORD PTR es:[rdi],dx
   1400085ed:	movsxd esi,DWORD PTR [rax+0x79]
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
   140009019:	add    BYTE PTR [rax],al
   14000901b:	add    BYTE PTR [rax],al
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    BYTE PTR [rax],ah
   140009021:	nop
   140009022:	add    BYTE PTR [rax+0x1],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    BYTE PTR [rax+0x1400064],cl
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    BYTE PTR [rax-0x69],ah
   140009032:	add    BYTE PTR [rax+0x1],al
   140009035:	add    BYTE PTR [rax],al
   140009037:	add    BYTE PTR [rax],ch
   140009039:	nop
   14000903a:	add    BYTE PTR [rax+0x1],al
	...
   140009045:	add    BYTE PTR [rax],al
   140009047:	add    BYTE PTR [rdx],al
	...
   140009055:	add    BYTE PTR [rax],al
   140009057:	add    BYTE PTR [rax+0x64],ah
   14000905a:	add    BYTE PTR [rax+0x1],al
	...
   140009065:	add    BYTE PTR [rax],al
   140009067:	add    BYTE PTR [rsi],ch
   140009069:	(bad)  
   14000906a:	push   r14
   14000906c:	ins    BYTE PTR es:[rdi],dx
   14000906d:	outs   dx,DWORD PTR ds:[rsi]
   14000906e:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   140009076:	jb     0x1400090b8
   140009078:	jae    0x1400090ee
   14000907a:	fs rex
   14000907c:	add    BYTE PTR [rax],al
   14000907f:	add    BYTE PTR [rax+0x64],ah
   140009082:	add    BYTE PTR [rax+0x1],al
	...
   14000908d:	add    BYTE PTR [rax],al
   14000908f:	add    BYTE PTR [rsi],ch
   140009091:	(bad)  
   140009092:	push   r14
   140009094:	ins    BYTE PTR es:[rdi],dx
   140009095:	outs   dx,BYTE PTR gs:[rsi]
   140009097:	addr32 je 0x140009102
   14000909a:	pop    rdi
   14000909b:	gs jb  0x140009110
   14000909e:	outs   dx,DWORD PTR ds:[rsi]
   14000909f:	jb     0x1400090e1
   1400090a1:	jae    0x140009117
   1400090a3:	fs rex
   1400090a5:	add    BYTE PTR [rax],al
   1400090a8:	(bad)  
   1400090a9:	add    BYTE PTR fs:[rax+0x1],al
	...
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    BYTE PTR [rsi],ch
   1400090b9:	(bad)  
   1400090ba:	push   r14
   1400090bc:	rex.XB
   1400090bd:	rex.B je 0x14000912c
   1400090c0:	rex.RB js 0x140009126
   1400090c3:	gs jo  0x14000913a
   1400090c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x4c544140
   1400090cd:	rex
   1400090ce:	add    BYTE PTR [rax+0x64],spl
   1400090d2:	add    BYTE PTR [rax+0x1],al
	...
   1400090dd:	add    BYTE PTR [rax],al
   1400090df:	add    BYTE PTR [rsi],ch
   1400090e1:	(bad)  
   1400090e2:	push   r14
   1400090e4:	rex.XB
   1400090e5:	rex.RB js 0x14000914b
   1400090e8:	gs jo  0x14000915f
   1400090eb:	imul   ebp,DWORD PTR [rdi+0x6e],0x69747540
   1400090f2:	ins    BYTE PTR es:[rdi],dx
   1400090f3:	jae    0x140009135
   1400090f5:	jo     0x14000916e
   1400090f7:	ins    BYTE PTR es:[rdi],dx
   1400090f8:	movsxd ebp,DWORD PTR [rbp+0x64]
   1400090fb:	rex
   1400090fc:	add    BYTE PTR [rax],al
   1400090ff:	add    BYTE PTR [rax+0x64],ah
   140009102:	add    BYTE PTR [rax+0x1],al
	...
   14000910d:	add    BYTE PTR [rax],al
   14000910f:	add    BYTE PTR [rsi],ch
   140009111:	(bad)  
   140009112:	push   r14
   140009114:	(bad)
   140009119:	ins    BYTE PTR es:[rdi],dx
   14000911a:	ins    BYTE PTR es:[rdi],dx
   14000911b:	outs   dx,DWORD PTR ds:[rsi]
   14000911c:	movsxd eax,DWORD PTR [rax+0x73]
   14000911f:	je     0x140009185
   140009121:	rex
   140009122:	add    BYTE PTR [rax],al
   140009125:	add    BYTE PTR [rax],al
   140009127:	add    BYTE PTR [rax+0x64],ah
   14000912a:	add    BYTE PTR [rax+0x1],al
	...
   140009135:	add    BYTE PTR [rax],al
   140009137:	add    BYTE PTR [rsi],ch
   140009139:	(bad)  
   14000913a:	push   r14
   14000913c:	gs js  0x1400091a2
   14000913f:	gs jo  0x1400091b6
   140009142:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	add    BYTE PTR [rax],dl
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	adc    BYTE PTR ss:[rax],al
   14000a007:	add    BYTE PTR [rdx+rsi*2+0x10500000],al
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	lock adc BYTE PTR [rax],al
   14000a013:	add    BYTE PTR [rax+0x72],ah
   14000a016:	add    BYTE PTR [rax],al
   14000a018:	lock adc BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rbp+0x11],bl
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	test   BYTE PTR [rdx+0x0],dh
   14000a023:	add    BYTE PTR [rax+0x11],ch
   14000a026:	add    BYTE PTR [rax],al
   14000a028:	xchg   BYTE PTR [rcx],dl
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	shr    BYTE PTR [rbp+0x0],1
   14000a02f:	add    BYTE PTR [rcx+rdx*1+0x12010000],cl
   14000a036:	add    BYTE PTR [rax],al
   14000a038:	fsubr  DWORD PTR [rbp+0x0]
   14000a03b:	add    BYTE PTR [rax],cl
   14000a03d:	adc    al,BYTE PTR [rax]
   14000a03f:	add    BYTE PTR [rdx+rdx*1],bh
   14000a042:	add    BYTE PTR [rax],al
   14000a044:	loopne 0x14000a0b3
   14000a046:	add    BYTE PTR [rax],al
   14000a048:	push   rax
   14000a049:	adc    al,BYTE PTR [rax]
   14000a04b:	add    bh,cl
   14000a04d:	adc    al,BYTE PTR [rax]
   14000a04f:	add    al,ch
   14000a051:	ins    DWORD PTR es:[rdi],dx
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	fcom   DWORD PTR [rdx]
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	rex.X adc eax,DWORD PTR [rax]
   14000a05b:	add    al,bh
   14000a05d:	ins    DWORD PTR es:[rdi],dx
   14000a05e:	add    BYTE PTR [rax],al
   14000a060:	adc    rax,QWORD PTR [rax]
   14000a063:	add    BYTE PTR [rdi],ah
   14000a065:	adc    al,0x0
   14000a067:	add    BYTE PTR [rax+0x3000006e],al
   14000a06d:	adc    al,0x0
   14000a06f:	add    ah,dl
   14000a071:	(bad)  
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	shr    BYTE PTR [rsi+0x0],0x0
   14000a078:	fcom   QWORD PTR [rsi]
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	(bad)  
   14000a07d:	(bad)  
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	adc    al,0x17
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	push   rsi
   14000a089:	sbb    eax,DWORD PTR [rax]
   14000a08b:	add    BYTE PTR [rdi+rbp*2+0x0],dl
   14000a08f:	add    BYTE PTR [rbx+rbx*1+0x0],bl
   14000a093:	add    BYTE PTR [rsi+0x1d],dh
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	mov    al,0x6f
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	jl     0x14000a0bb
   14000a09e:	add    BYTE PTR [rax],al
   14000a0a0:	(bad)  
   14000a0a1:	and    DWORD PTR [rax],eax
   14000a0a3:	add    BYTE PTR [rax+0x70],ch
   14000a0a6:	add    BYTE PTR [rax],al
   14000a0a8:	adc    al,0x21
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	movabs eax,ds:0xa8000070c0000022
   14000a0b5:	and    al,BYTE PTR [rax]
   14000a0b7:	add    BYTE PTR [rdi-0x5fffffdb],al
   14000a0bd:	jno    0x14000a0bf
   14000a0bf:	add    BYTE PTR [rax-0x23ffffdb],dl
   14000a0c5:	and    eax,0x6de80000
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	in     al,0x25
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	jns    0x14000a0f8
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	xor    BYTE PTR [rdx+0x0],dh
   14000a0d7:	add    BYTE PTR [rax-0x63ffffda],al
   14000a0dd:	add    BYTE PTR es:[rax],al
   14000a0e0:	(bad)  
   14000a0e1:	jb     0x14000a0e3
   14000a0e3:	add    BYTE PTR [rsi+riz*1+0x28030000],ah
   14000a0ea:	add    BYTE PTR [rax],al
   14000a0ec:	push   0xc000072
   14000a0f1:	sub    BYTE PTR [rax],al
   14000a0f3:	add    BYTE PTR [rbx],bl
   14000a0f5:	sub    BYTE PTR [rax],al
   14000a0f7:	add    BYTE PTR [rdx+rsi*2+0x28240000],al
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	(bad)  
   14000a101:	sub    BYTE PTR [rax],al
   14000a103:	add    BYTE PTR [rdx+rsi*2+0x28880000],al
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	pop    rsi
   14000a10d:	sub    DWORD PTR [rax],eax
   14000a10f:	add    BYTE PTR [rdx+rsi*2+0x29640000],cl
   14000a116:	add    BYTE PTR [rax],al
   14000a118:	out    0x29,eax
   14000a11a:	add    BYTE PTR [rax],al
   14000a11c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a11d:	jb     0x14000a11f
   14000a11f:	add    ah,bh
   14000a121:	sub    DWORD PTR [rax],eax
   14000a123:	add    BYTE PTR [rdx+rbp*1],ah
   14000a126:	add    BYTE PTR [rax],al
   14000a128:	test   BYTE PTR [rdx+0x0],dh
   14000a12b:	add    BYTE PTR [rdx+rbp*1],ch
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	je     0x14000a15c
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	mov    esp,0x7c000072
   14000a139:	sub    al,BYTE PTR [rax]
   14000a13b:	add    ah,bl
   14000a13d:	sub    al,BYTE PTR [rax]
   14000a13f:	add    al,bl
   14000a141:	ins    DWORD PTR es:[rdi],dx
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	hlt    
   14000a145:	sub    al,BYTE PTR [rax]
   14000a147:	add    BYTE PTR [rax],dl
   14000a149:	sub    eax,DWORD PTR [rax]
   14000a14b:	add    BYTE PTR [rax+0x72],ah
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	sbb    BYTE PTR [rbx],ch
   14000a152:	add    BYTE PTR [rax],al
   14000a154:	nop
   14000a155:	sub    al,0x0
   14000a157:	add    ah,al
   14000a159:	jb     0x14000a15b
   14000a15b:	add    BYTE PTR [rax-0x4bffffd4],bl
   14000a161:	sub    al,0x0
   14000a163:	add    BYTE PTR [rax+0x72],ah
   14000a166:	add    BYTE PTR [rax],al
   14000a168:	mov    esp,0x8500002c
   14000a16d:	(bad)  
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	sbb    BYTE PTR [rbx+0x0],dh
   14000a173:	add    BYTE PTR [rdi+rbp*1+0x2fef0000],cl
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	js     0x14000a1f1
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	clc    
   14000a181:	(bad)  
   14000a182:	add    BYTE PTR [rax],al
   14000a184:	or     BYTE PTR [rcx],dh
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	sbb    BYTE PTR [rax+rax*1+0x0],dh
   14000a18c:	adc    BYTE PTR [rcx],dh
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	(bad)  
   14000a191:	xor    eax,DWORD PTR [rax]
   14000a193:	add    BYTE PTR [rsp+rsi*2],ch
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	fdiv   QWORD PTR [rbx]
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	shl    DWORD PTR [rax+rax*1],1
   14000a19f:	add    BYTE PTR [rax-0x27ffff8c],al
   14000a1a5:	xor    al,0x0
   14000a1a7:	add    bh,dh
   14000a1a9:	xor    eax,0x74900000
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	add    BYTE PTR [rsi],dh
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	in     al,dx
   14000a1b5:	add    BYTE PTR ss:[rax],al
   14000a1b8:	pushf  
   14000a1b9:	je     0x14000a1bb
   14000a1bb:	add    ah,dh
   14000a1bd:	add    BYTE PTR ss:[rax],al
   14000a1c0:	mov    dh,0x38
   14000a1c2:	add    BYTE PTR [rax],al
   14000a1c4:	shl    BYTE PTR [rax+rax*1+0x0],1
   14000a1c8:	mov    esp,0x69000038
   14000a1cd:	cmp    DWORD PTR [rax],eax
   14000a1cf:	add    BYTE PTR [rax],cl
   14000a1d1:	jne    0x14000a1d3
   14000a1d3:	add    BYTE PTR [rax+0x39],dh
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	nop
   14000a1d9:	cmp    DWORD PTR [rax],eax
   14000a1db:	add    BYTE PTR [rsi*2+0x39980000],dl
   14000a1e2:	add    BYTE PTR [rax],al
   14000a1e4:	fwait
   14000a1e5:	cmp    al,BYTE PTR [rax]
   14000a1e7:	add    BYTE PTR [rax],ch
   14000a1e9:	jbe    0x14000a1eb
   14000a1eb:	add    BYTE PTR [rdx+rdi*1+0x3acf0000],ah
   14000a1f2:	add    BYTE PTR [rax],al
   14000a1f4:	(bad)  
   14000a1f5:	jb     0x14000a1f7
   14000a1f7:	add    al,bl
   14000a1f9:	cmp    al,BYTE PTR [rax]
   14000a1fb:	add    BYTE PTR [rdx+0x3b],dh
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	test   BYTE PTR [rdx+0x0],dh
   14000a203:	add    BYTE PTR [rax+0x3b],bh
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	lea    edi,[rax+rax*1]
   14000a20b:	add    BYTE PTR [rax+0x76],ch
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	xchg   esp,eax
   14000a211:	cmp    al,0x0
   14000a213:	add    BYTE PTR [rbp-0x7bffffc4],ah
   14000a219:	jb     0x14000a21b
   14000a21b:	add    BYTE PTR [rsp+rdi*1+0x3df30000],bh
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	call   0x13c00a29f
   14000a229:	cmp    eax,0x3ead0000
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	add    BYTE PTR [rdi+0x0],dh
   14000a233:	add    BYTE PTR [rsi+rdi*1+0x3ed60000],dh
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	(bad)  
   14000a23d:	jb     0x14000a23f
   14000a23f:	add    ah,bl
   14000a241:	add    BYTE PTR ds:[rax],al
   14000a244:	(bad)  
   14000a245:	(bad)  
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	adc    BYTE PTR [rdi+0x0],dh
   14000a24b:	add    BYTE PTR [rax+0x3f],al
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	jnp    0x14000a291
   14000a252:	add    BYTE PTR [rax],al
   14000a254:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	test   BYTE PTR [rdi],bh
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	mov    cl,0x3f
   14000a25e:	add    BYTE PTR [rax],al
   14000a260:	xor    BYTE PTR [rdi+0x0],0x0
   14000a264:	mov    eax,0x4600003f
   14000a269:	add    BYTE PTR [rax],al
   14000a26c:	mov    BYTE PTR [rdi+0x0],dh
   14000a26f:	add    BYTE PTR [rax+rax*2+0x0],cl
   14000a273:	add    BYTE PTR [rbp+0x40],ch
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	(bad)  
   14000a279:	jb     0x14000a27b
   14000a27b:	add    BYTE PTR [rax+rax*2+0x0],dh
   14000a27f:	add    dh,ch
   14000a281:	add    BYTE PTR [rax],al
   14000a284:	test   BYTE PTR [rdx+0x0],dh
   14000a287:	add    ah,dh
   14000a289:	add    BYTE PTR [rax],al
   14000a28c:	in     al,dx
   14000a28d:	rex.X add BYTE PTR [rax],al
   14000a290:	pushf  
   14000a291:	ja     0x14000a293
   14000a293:	add    ah,dh
   14000a295:	rex.X add BYTE PTR [rax],al
   14000a298:	lods   al,BYTE PTR ds:[rsi]
   14000a299:	rex.XB add BYTE PTR [r8],al
   14000a29c:	fdiv   DWORD PTR [rdi+0x0]
   14000a29f:	add    BYTE PTR [rbx+rax*2+0x43d50000],dh
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	(bad)  
   14000a2a9:	jb     0x14000a2ab
   14000a2ab:	add    al,ah
   14000a2ad:	rex.XB add BYTE PTR [r8],al
   14000a2b0:	jb     0x14000a2f6
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	add    BYTE PTR [rax+rax*1+0x0],0xa1
   14000a2bd:	add    BYTE PTR [rax],r8b
   14000a2c0:	test   BYTE PTR [rdx+0x0],dh
   14000a2c3:	add    BYTE PTR [rax+0x40000044],dh
   14000a2c9:	add    BYTE PTR [r8],r8b
   14000a2cc:	(bad)  
   14000a2cd:	jb     0x14000a2cf
   14000a2cf:	add    BYTE PTR [rax+0x45],dh
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	xchg   edi,eax
   14000a2d5:	add    BYTE PTR [r8],r8b
   14000a2d8:	(bad)  
   14000a2d9:	jb     0x14000a2db
   14000a2db:	add    al,al
   14000a2dd:	add    BYTE PTR [r8],r8b
   14000a2e0:	fld    QWORD PTR [rbp+0x0]
   14000a2e3:	add    BYTE PTR [rdx+rsi*2+0x45f00000],al
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	xor    al,BYTE PTR [rsi+0x0]
   14000a2ef:	add    BYTE PTR [rdx+rsi*2+0x46600000],al
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	stos   DWORD PTR es:[rdi],eax
   14000a2f9:	rex.RX add BYTE PTR [rax],r8b
   14000a2fc:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	mov    ah,0x46
   14000a302:	add    BYTE PTR [rax],al
   14000a304:	sbb    DWORD PTR [rdi+0x0],eax
   14000a307:	add    BYTE PTR [rax+0x6f],cl
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	cmp    al,0x47
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	pop    rsp
   14000a311:	rex.RXB add BYTE PTR [r8],r8b
   14000a314:	or     BYTE PTR [rax+0x0],bh
   14000a317:	add    BYTE PTR [rdi+rax*2+0x0],ah
   14000a31b:	add    BYTE PTR [rbp+0x60000047],al
   14000a321:	jb     0x14000a323
   14000a323:	add    BYTE PTR [rdi+rax*2+0x47bb0000],cl
   14000a32a:	add    BYTE PTR [rax],al
   14000a32c:	sub    BYTE PTR [rax+0x0],bh
   14000a32f:	add    al,dl
   14000a331:	rex.RXB add BYTE PTR [r8],r8b
   14000a334:	inc    DWORD PTR [rdi+0x0]
   14000a337:	add    BYTE PTR [rax+0x6f],cl
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	or     BYTE PTR [rax+0x0],cl
   14000a33f:	add    BYTE PTR [rbx],ch
   14000a341:	rex.W add BYTE PTR [rax],al
   14000a344:	fsubr  DWORD PTR [rbp+0x0]
   14000a347:	add    BYTE PTR [rax+rcx*2],dh
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	ins    BYTE PTR es:[rdi],dx
   14000a34d:	rex.W add BYTE PTR [rax],al
   14000a350:	(bad)  
   14000a351:	jb     0x14000a353
   14000a353:	add    BYTE PTR [rax+rcx*2+0x0],dh
   14000a357:	add    ch,ch
   14000a359:	rex.W add BYTE PTR [rax],al
   14000a35c:	xor    BYTE PTR [rax+0x0],bh
   14000a35f:	add    BYTE PTR [rax],al
   14000a361:	rex.WB add BYTE PTR [r8],al
   14000a364:	iret   
   14000a365:	rex.WB add BYTE PTR [r8],al
   14000a368:	test   BYTE PTR [rdx+0x0],dh
   14000a36b:	add    al,ah
   14000a36d:	rex.WB add BYTE PTR [r8],al
   14000a370:	sub    DWORD PTR [rdx+0x0],ecx
   14000a373:	add    al,dl
   14000a375:	ins    DWORD PTR es:[rdi],dx
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	xor    BYTE PTR [rdx+0x0],cl
   14000a37b:	add    BYTE PTR [rdx],al
   14000a37d:	rex.WR add BYTE PTR [rax],r8b
   14000a380:	cmp    BYTE PTR [rax+0x0],bh
   14000a383:	add    BYTE PTR [rax],dl
   14000a385:	rex.WR add BYTE PTR [rax],r8b
   14000a388:	and    cl,BYTE PTR [rax+rax*1+0x0]
   14000a38c:	test   BYTE PTR [rdx+0x0],dh
   14000a38f:	add    BYTE PTR [rax+0x4c],al
   14000a392:	add    BYTE PTR [rax],al
   14000a394:	pop    rsi
   14000a395:	rex.WR add BYTE PTR [rax],r8b
   14000a398:	push   0x64000078
   14000a39d:	rex.WR add BYTE PTR [rax],r8b
   14000a3a0:	add    cl,BYTE PTR [rbp+0x0]
   14000a3a3:	add    BYTE PTR [rax+rdi*2+0x0],ch
   14000a3a7:	add    BYTE PTR [rax],cl
   14000a3a9:	rex.WRB add BYTE PTR [r8],r8b
   14000a3ac:	(bad)  
   14000a3ad:	rex.WRB add BYTE PTR [r8],r8b
   14000a3b0:	test   BYTE PTR [rdx+0x0],dh
   14000a3b3:	add    BYTE PTR [rax],dh
   14000a3b5:	rex.WRB add BYTE PTR [r8],r8b
   14000a3b8:	(bad)  
   14000a3b9:	rex.WRB add BYTE PTR [r8],r8b
   14000a3bc:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	ror    BYTE PTR [rbp+0x0],1
   14000a3c3:	add    BYTE PTR [rcx],cl
   14000a3c5:	rex.WRX add BYTE PTR [rax],r8b
   14000a3c8:	test   BYTE PTR [rdx+0x0],dh
   14000a3cb:	add    BYTE PTR [rax],dl
   14000a3cd:	rex.WRX add BYTE PTR [rax],r8b
   14000a3d0:	sub    BYTE PTR [rsi+0x0],cl
   14000a3d3:	add    BYTE PTR [rdx+rsi*2+0x4e3c0000],al
   14000a3da:	add    BYTE PTR [rax],al
   14000a3dc:	nop
   14000a3dd:	rex.WRX add BYTE PTR [rax],r8b
   14000a3e0:	nop
   14000a3e1:	js     0x14000a3e3
   14000a3e3:	add    BYTE PTR [rax-0x22ffffb2],bl
   14000a3e9:	rex.WRX add BYTE PTR [rax],r8b
   14000a3ec:	(bad)  
   14000a3ed:	jb     0x14000a3ef
   14000a3ef:	add    BYTE PTR [rax+0x4f],dl
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	popf   
   14000a3f5:	rex.WRXB add BYTE PTR [r8],r8b
   14000a3f8:	mov    al,0x78
   14000a3fa:	add    BYTE PTR [rax],al
   14000a3fc:	in     al,0x4f
   14000a3fe:	add    BYTE PTR [rax],al
   14000a400:	mov    ah,0x50
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	(bad)  
   14000a405:	js     0x14000a407
   14000a407:	add    ah,ch
   14000a409:	push   rax
   14000a40a:	add    BYTE PTR [rax],al
   14000a40c:	and    BYTE PTR [rcx+0x0],dl
   14000a40f:	add    BYTE PTR [rax+0x72],ah
   14000a412:	add    BYTE PTR [rax],al
   14000a414:	xor    BYTE PTR [rcx+0x0],dl
   14000a417:	add    BYTE PTR [rcx-0x1fffffae],ah
   14000a41d:	js     0x14000a41f
   14000a41f:	add    al,bl
   14000a421:	push   rdx
   14000a422:	add    BYTE PTR [rax],al
   14000a424:	cmc    
   14000a425:	push   rdx
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	test   BYTE PTR [rdx+0x0],dh
   14000a42b:	add    ah,bh
   14000a42d:	push   rdx
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	pop    rdi
   14000a431:	push   rbx
   14000a432:	add    BYTE PTR [rax],al
   14000a434:	(bad)  
   14000a435:	jb     0x14000a437
   14000a437:	add    BYTE PTR [rbx+rdx*2+0x0],dh
   14000a43b:	add    BYTE PTR [rbx],al
   14000a43d:	push   rsp
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	call   0x16000a4bb
   14000a445:	push   rsp
   14000a446:	add    BYTE PTR [rax],al
   14000a448:	and    dl,BYTE PTR [rax+rax*1+0x0]
   14000a44c:	call   0x17600a4c9
   14000a451:	push   rsp
   14000a452:	add    BYTE PTR [rax],al
   14000a454:	mov    ss,WORD PTR [rax+rax*1+0x0]
   14000a458:	jo     0x14000a4c8
   14000a45a:	add    BYTE PTR [rax],al
   14000a45c:	jle    0x14000a4b3
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	rcl    DWORD PTR [rbp+0x0],cl
   14000a463:	add    BYTE PTR [rax-0x26ffff8f],dl
   14000a469:	push   rbp
   14000a46a:	add    BYTE PTR [rax],al
   14000a46c:	add    al,0x56
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	and    BYTE PTR [rdx+0x0],dh
   14000a473:	add    BYTE PTR [rax],ch
   14000a475:	push   rsi
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	rex.WRX push rsi
   14000a47a:	add    BYTE PTR [rax],al
   14000a47c:	adc    BYTE PTR [rbx+0x0],dh
   14000a47f:	add    BYTE PTR [rsi+rdx*2+0x0],dl
   14000a483:	add    BYTE PTR [rbp+0x56],bh
   14000a486:	add    BYTE PTR [rax],al
   14000a488:	adc    BYTE PTR [rbx+0x0],dh
   14000a48b:	add    BYTE PTR [rdi+0x7000056],ch
   14000a491:	push   rdi
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	or     BYTE PTR [rax+rax*1+0x0],dh
   14000a498:	rex.WRXB push r15
   14000a49a:	add    BYTE PTR [rax],al
   14000a49c:	mov    dl,0x57
   14000a49e:	add    BYTE PTR [rax],al
   14000a4a0:	lock jne 0x14000a4a3
   14000a4a3:	add    BYTE PTR [rdx+0x15000057],dh
   14000a4a9:	pop    rax
   14000a4aa:	add    BYTE PTR [rax],al
   14000a4ac:	lock jne 0x14000a4af
   14000a4af:	add    BYTE PTR [rip+0xffffffff86000058],dl        # 0xc600a50d
   14000a4b5:	pop    rax
   14000a4b6:	add    BYTE PTR [rax],al
   14000a4b8:	add    al,0x76
   14000a4ba:	add    BYTE PTR [rax],al
   14000a4bc:	xchg   BYTE PTR [rax+0x0],bl
   14000a4bf:	add    ah,bl
   14000a4c1:	pop    rax
   14000a4c2:	add    BYTE PTR [rax],al
   14000a4c4:	sbb    BYTE PTR [rsi+0x0],dh
   14000a4c7:	add    ah,dh
   14000a4c9:	pop    rax
   14000a4ca:	add    BYTE PTR [rax],al
   14000a4cc:	adc    al,0x59
   14000a4ce:	add    BYTE PTR [rax],al
   14000a4d0:	fdiv   DWORD PTR [rsi+0x0]
   14000a4d3:	add    BYTE PTR [rdx],bl
   14000a4d5:	pop    rcx
   14000a4d6:	add    BYTE PTR [rax],al
   14000a4d8:	xor    DWORD PTR [rcx+0x0],ebx
   14000a4db:	add    BYTE PTR [rax+0x77],dh
   14000a4de:	add    BYTE PTR [rax],al
   14000a4e0:	rex.WB pop r9
   14000a4e2:	add    BYTE PTR [rax],al
   14000a4e4:	outs   dx,DWORD PTR ds:[rsi]
   14000a4e5:	pop    rcx
   14000a4e6:	add    BYTE PTR [rax],al
   14000a4e8:	adc    BYTE PTR [rbx+0x0],dh
   14000a4eb:	add    BYTE PTR [rbp+0x59],dh
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	xchg   ebp,eax
   14000a4f1:	pop    rcx
   14000a4f2:	add    BYTE PTR [rax],al
   14000a4f4:	adc    BYTE PTR [rbx+0x0],dh
   14000a4f7:	add    BYTE PTR [rbx-0x46ffffa7],bl
   14000a4fd:	pop    rcx
   14000a4fe:	add    BYTE PTR [rax],al
   14000a500:	adc    BYTE PTR [rbx+0x0],dh
   14000a503:	add    BYTE PTR [rdi-0x25ffffa7],bh
   14000a509:	pop    rcx
   14000a50a:	add    BYTE PTR [rax],al
   14000a50c:	adc    BYTE PTR [rbx+0x0],dh
   14000a50f:	add    al,ah
   14000a511:	pop    rcx
   14000a512:	add    BYTE PTR [rax],al
   14000a514:	add    BYTE PTR [rdx+0x0],bl
   14000a517:	add    BYTE PTR [rax],dl
   14000a519:	jae    0x14000a51b
   14000a51b:	add    BYTE PTR [rax],ah
   14000a51d:	pop    rdx
   14000a51e:	add    BYTE PTR [rax],al
   14000a520:	push   rdx
   14000a521:	pop    rdx
   14000a522:	add    BYTE PTR [rax],al
   14000a524:	test   BYTE PTR [rdx+0x0],dh
   14000a527:	add    BYTE PTR [rax-0x41ffffa6],al
   14000a52d:	pop    rdx
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	test   BYTE PTR [rdx+0x0],dh
   14000a533:	add    al,dl
   14000a535:	pop    rdx
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	lods   al,BYTE PTR ds:[rsi]
   14000a539:	pop    rbx
   14000a53a:	add    BYTE PTR [rax],al
   14000a53c:	.byte 0xe8
   14000a53d:	ins    DWORD PTR es:[rdi],dx
	...

Disassembly of section .rsrc:

000000014000b000 <.rsrc>:
	...
   14000b00c:	add    DWORD PTR [rax],eax
   14000b00e:	add    al,BYTE PTR [rax]
   14000b010:	call   0x16880b015
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	adc    BYTE PTR [rax],0x0
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	add    BYTE PTR [rax],al
   14000b01f:	sbb    BYTE PTR [rax],0x0
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	pop    rax
   14000b025:	add    BYTE PTR [rax],al
   14000b027:	add    BYTE PTR [rax],0x0
	...
   14000b036:	add    DWORD PTR [rax],eax
   14000b038:	add    DWORD PTR [rax],eax
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	jo     0x14000b03e
   14000b03e:	add    BYTE PTR [rax+0x0],al
	...
   14000b04c:	add    BYTE PTR [rax],al
   14000b04e:	add    DWORD PTR [rax],eax
   14000b050:	add    DWORD PTR [rax],eax
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	mov    BYTE PTR [rax],al
   14000b056:	add    BYTE PTR [rax+0x0],al
	...
   14000b064:	add    BYTE PTR [rax],al
   14000b066:	add    DWORD PTR [rax],eax
   14000b068:	add    DWORD PTR [rax],eax
   14000b06a:	add    BYTE PTR [rax],al
   14000b06c:	movabs al,ds:0x800000
	...
   14000b07d:	add    BYTE PTR [rcx],al
   14000b07f:	add    BYTE PTR [rcx],cl
   14000b081:	add    al,0x0
   14000b083:	add    BYTE PTR [rax+0x0],bh
	...
   14000b095:	add    BYTE PTR [rcx],al
   14000b097:	add    BYTE PTR [rcx],cl
   14000b099:	add    al,0x0
   14000b09b:	add    al,cl
	...
   14000b0ad:	add    BYTE PTR [rcx],al
   14000b0af:	add    BYTE PTR [rcx],cl
   14000b0b1:	add    al,0x0
   14000b0b3:	add    al,bl
   14000b0b5:	add    BYTE PTR [rax],al
   14000b0b7:	add    BYTE PTR [rax-0x37ffff49],dl
	...
   14000b0c5:	add    BYTE PTR [rax],al
   14000b0c7:	add    BYTE PTR [rax-0x2bffff4d],bh
   14000b0cd:	add    eax,DWORD PTR [rax]
	...
   14000b0d7:	add    al,dh
   14000b0d9:	mov    al,0x0
   14000b0db:	add    dh,al
   14000b0dd:	add    al,BYTE PTR [rax]
	...
   14000b0e7:	add    BYTE PTR [rbx],al
   14000b0e9:	add    BYTE PTR [rbp+0x0],cl
   14000b0ec:	push   rbp
   14000b0ed:	add    BYTE PTR [rcx+0x0],cl
   14000b0f0:	cmp    al,0x3f
   14000b0f2:	js     0x14000b161
   14000b0f4:	ins    BYTE PTR es:[rdi],dx
   14000b0f5:	and    BYTE PTR [rsi+0x65],dh
   14000b0f8:	jb     0x14000b16d
   14000b0fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b101:	xor    BYTE PTR [rdx],ah
   14000b103:	and    BYTE PTR [rbp+0x6e],ah
   14000b106:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000b109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000b110:	rex.RX sub eax,0x73202238
   14000b116:	je     0x14000b179
   14000b118:	outs   dx,BYTE PTR ds:[rsi]
   14000b119:	fs (bad) 
   14000b11b:	ins    BYTE PTR es:[rdi],dx
   14000b11c:	outs   dx,DWORD PTR ds:[rsi]
   14000b11d:	outs   dx,BYTE PTR ds:[rsi]
   14000b11e:	gs cmp eax,0x73657922
   14000b124:	and    bh,BYTE PTR [rdi]
   14000b126:	ds or  eax,0x2d213c0a
   14000b12c:	sub    eax,0x706f4320
   14000b131:	jns    0x14000b1a5
   14000b133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000b13a:	sub    DWORD PTR [rax],esp
   14000b13c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000b144:	je     0x14000b166
   14000b146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b148:	jb     0x14000b1ba
   14000b14a:	outs   dx,DWORD PTR ds:[rsi]
   14000b14b:	jb     0x14000b1ae
   14000b14d:	je     0x14000b1b8
   14000b14f:	outs   dx,DWORD PTR ds:[rsi]
   14000b150:	outs   dx,BYTE PTR ds:[rsi]
   14000b151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0def84
   14000b157:	cmp    al,0x61
   14000b159:	jae    0x14000b1ce
   14000b15b:	gs ins DWORD PTR es:[rdi],dx
   14000b15d:	(bad)  
   14000b15e:	ins    BYTE PTR es:[rdi],dx
   14000b15f:	jns    0x14000b181
   14000b161:	js     0x14000b1d0
   14000b163:	ins    BYTE PTR es:[rdi],dx
   14000b164:	outs   dx,BYTE PTR ds:[rsi]
   14000b165:	jae    0x14000b1a4
   14000b167:	and    dh,BYTE PTR [rbp+0x72]
   14000b16a:	outs   dx,BYTE PTR ds:[rsi]
   14000b16b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b16e:	push   0x73616d65
   14000b173:	sub    eax,0x7263696d
   14000b178:	outs   dx,DWORD PTR ds:[rsi]
   14000b179:	jae    0x14000b1ea
   14000b17b:	data16 je 0x14000b1ab
   14000b17e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b181:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b184:	ins    DWORD PTR es:[rdi],dx
   14000b185:	cs jbe 0x14000b1b9
   14000b188:	and    ah,BYTE PTR [rax]
   14000b18a:	ins    DWORD PTR es:[rdi],dx
   14000b18b:	(bad)  
   14000b18c:	outs   dx,BYTE PTR ds:[rsi]
   14000b18d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000b194:	jb     0x14000b209
   14000b196:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b19d:	xor    BYTE PTR [rdx],ah
   14000b19f:	ds or  eax,0x2020200a
   14000b1a5:	and    BYTE PTR [rcx+riz*2],bh
   14000b1a8:	jae    0x14000b21d
   14000b1aa:	gs ins DWORD PTR es:[rdi],dx
   14000b1ac:	(bad)  
   14000b1ad:	ins    BYTE PTR es:[rdi],dx
   14000b1ae:	jns    0x14000b1f9
   14000b1b0:	fs outs dx,BYTE PTR gs:[rsi]
   14000b1b3:	je     0x14000b21e
   14000b1b5:	je     0x14000b230
   14000b1b7:	or     eax,0x2020200a
   14000b1bc:	and    BYTE PTR [rax],ah
   14000b1be:	and    BYTE PTR [rax],ah
   14000b1c0:	and    BYTE PTR [rsi+0x65],dh
   14000b1c3:	jb     0x14000b238
   14000b1c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000b1cc:	xor    BYTE PTR [rsi],ch
   14000b1ce:	xor    BYTE PTR [rsi],ch
   14000b1d0:	xor    BYTE PTR [rdx],ah
   14000b1d2:	or     eax,0x2020200a
   14000b1d7:	and    BYTE PTR [rax],ah
   14000b1d9:	and    BYTE PTR [rax],ah
   14000b1db:	and    BYTE PTR [rax+0x72],dh
   14000b1de:	outs   dx,DWORD PTR ds:[rsi]
   14000b1df:	movsxd esp,DWORD PTR [rbp+0x73]
   14000b1e2:	jae    0x14000b253
   14000b1e4:	jb     0x14000b227
   14000b1e6:	jb     0x14000b24b
   14000b1e8:	push   0x63657469
   14000b1ed:	je     0x14000b264
   14000b1ef:	jb     0x14000b256
   14000b1f1:	cmp    eax,0x646d6122
   14000b1f6:	ss xor al,0x22
   14000b1f9:	or     eax,0x2020200a
   14000b1fe:	and    BYTE PTR [rax],ah
   14000b200:	and    BYTE PTR [rax],ah
   14000b202:	and    BYTE PTR [rsi+0x61],ch
   14000b205:	ins    DWORD PTR es:[rdi],dx
   14000b206:	gs cmp eax,0x6c777022
   14000b20c:	(bad)  
   14000b20d:	jne    0x14000b27d
   14000b20f:	movsxd ebp,DWORD PTR [rax+0x65]
   14000b212:	jb     0x14000b242
   14000b214:	movsxd ebp,DWORD PTR [rbp+0x64]
   14000b217:	ins    BYTE PTR es:[rdi],dx
   14000b218:	imul   ebp,DWORD PTR [rsi+0x65],0x6c6f6f74
   14000b21f:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020d22f
   14000b225:	and    BYTE PTR [rax],ah
   14000b227:	and    BYTE PTR [rax],ah
   14000b229:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000b22d:	gs cmp eax,0x6e697722
   14000b233:	xor    esi,DWORD PTR [rdx]
   14000b235:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020d245
   14000b23b:	and    BYTE PTR [rdi],ch
   14000b23d:	ds or  eax,0x65643c0a
   14000b243:	jae    0x14000b2a8
   14000b245:	jb     0x14000b2b0
   14000b247:	jo     0x14000b2bd
   14000b249:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f503e
   14000b250:	je     0x14000b2b3
   14000b252:	(bad)  
   14000b253:	ins    BYTE PTR es:[rdi],dx
   14000b254:	and    BYTE PTR gs:[rdi+0x6f],dl
   14000b258:	jb     0x14000b2c5
   14000b25a:	jae    0x14000b2cc
   14000b25c:	(bad)  
   14000b25d:	movsxd esp,DWORD PTR [rbp+0x20]
   14000b260:	rex.WR (bad) 
   14000b262:	jne    0x14000b2d2
   14000b264:	movsxd ebp,DWORD PTR [rax+0x65]
   14000b267:	jb     0x14000b289
   14000b269:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b26b:	ins    DWORD PTR es:[rdi],dx
   14000b26c:	ins    DWORD PTR es:[rdi],dx
   14000b26d:	(bad)  
   14000b26e:	outs   dx,BYTE PTR ds:[rsi]
   14000b26f:	fs sub eax,0x656e694c
   14000b275:	and    BYTE PTR [rdi+rbp*2+0x6f],dl
   14000b279:	ins    BYTE PTR es:[rdi],dx
   14000b27a:	cmp    al,0x2f
   14000b27c:	fs gs jae 0x14000b2e3
   14000b280:	jb     0x14000b2eb
   14000b282:	jo     0x14000b2f8
   14000b284:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   14000b28b:	je     0x14000b2ff
   14000b28d:	jne    0x14000b302
   14000b28f:	je     0x14000b2da
   14000b291:	outs   dx,BYTE PTR ds:[rsi]
   14000b292:	outs   dx,WORD PTR ds:[rsi]
   14000b294:	and    BYTE PTR [rax+0x6d],bh
   14000b297:	ins    BYTE PTR es:[rdi],dx
   14000b298:	outs   dx,BYTE PTR ds:[rsi]
   14000b299:	jae    0x14000b2d8
   14000b29b:	and    dh,BYTE PTR [rbp+0x72]
   14000b29e:	outs   dx,BYTE PTR ds:[rsi]
   14000b29f:	cmp    dh,BYTE PTR [rbx+0x63]
   14000b2a2:	push   0x73616d65
   14000b2a7:	sub    eax,0x7263696d
   14000b2ac:	outs   dx,DWORD PTR ds:[rsi]
   14000b2ad:	jae    0x14000b31e
   14000b2af:	data16 je 0x14000b2df
   14000b2b2:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000b2b5:	cmp    ah,BYTE PTR [rcx+0x73]
   14000b2b8:	ins    DWORD PTR es:[rdi],dx
   14000b2b9:	cs jbe 0x14000b2ef
   14000b2bc:	and    bh,BYTE PTR [rsi]
   14000b2be:	or     eax,0x2020200a
   14000b2c3:	and    BYTE PTR [rbx+rsi*2],bh
   14000b2c6:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000b2ca:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000b2d2:	and    BYTE PTR [rax],ah
   14000b2d4:	and    BYTE PTR [rax],ah
   14000b2d6:	and    BYTE PTR [rax],ah
   14000b2d8:	cmp    al,0x72
   14000b2da:	gs jno 0x14000b352
   14000b2dd:	gs jae 0x14000b354
   14000b2e0:	gs fs push rax
   14000b2e3:	jb     0x14000b34e
   14000b2e5:	jbe    0x14000b350
   14000b2e7:	ins    BYTE PTR es:[rdi],dx
   14000b2e8:	gs addr32 gs jae 0x14000b32b
   14000b2ed:	or     eax,0x2020200a
   14000b2f2:	and    BYTE PTR [rax],ah
   14000b2f4:	and    BYTE PTR [rax],ah
   14000b2f6:	and    BYTE PTR [rax],ah
   14000b2f8:	and    BYTE PTR [rax],ah
   14000b2fa:	and    BYTE PTR [rdx+rsi*2],bh
   14000b2fd:	gs jno 0x14000b375
   14000b300:	gs jae 0x14000b377
   14000b303:	gs fs rex.RB js 0x14000b36d
   14000b308:	movsxd esi,DWORD PTR [rbp+0x74]
   14000b30b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000b312:	ins    BYTE PTR es:[rdi],dx
   14000b313:	or     eax,0x2020200a
   14000b318:	and    BYTE PTR [rax],ah
   14000b31a:	and    BYTE PTR [rax],ah
   14000b31c:	and    BYTE PTR [rax],ah
   14000b31e:	and    BYTE PTR [rax],ah
   14000b320:	and    BYTE PTR [rax],ah
   14000b322:	and    BYTE PTR [rax],ah
   14000b324:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000b328:	gs ins BYTE PTR es:[rdi],dx
   14000b32a:	cmp    eax,0x49736122
   14000b32f:	outs   dx,BYTE PTR ds:[rsi]
   14000b330:	jbe    0x14000b3a1
   14000b332:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000b336:	or     eax,0x2020200a
   14000b33b:	and    BYTE PTR [rax],ah
   14000b33d:	and    BYTE PTR [rax],ah
   14000b33f:	and    BYTE PTR [rax],ah
   14000b341:	and    BYTE PTR [rax],ah
   14000b343:	and    BYTE PTR [rax],ah
   14000b345:	and    BYTE PTR [rax],ah
   14000b347:	and    BYTE PTR [rbp+0x69],dh
   14000b34a:	movsxd esp,DWORD PTR [r11+0x65]
   14000b34e:	jae    0x14000b3c3
   14000b350:	cmp    eax,0x6c616622
   14000b355:	jae    0x14000b3bc
   14000b357:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020d367
   14000b35d:	and    BYTE PTR [rax],ah
   14000b35f:	and    BYTE PTR [rax],ah
   14000b361:	and    BYTE PTR [rax],ah
   14000b363:	and    BYTE PTR [rax],ah
   14000b365:	and    BYTE PTR [rdi],ch
   14000b367:	ds or  eax,0x2020200a
   14000b36d:	and    BYTE PTR [rax],ah
   14000b36f:	and    BYTE PTR [rax],ah
   14000b371:	and    BYTE PTR [rdi+rbp*1],bh
   14000b374:	jb     0x14000b3db
   14000b376:	jno    0x14000b3ed
   14000b378:	gs jae 0x14000b3ef
   14000b37b:	gs fs push rax
   14000b37e:	jb     0x14000b3e9
   14000b380:	jbe    0x14000b3eb
   14000b382:	ins    BYTE PTR es:[rdi],dx
   14000b383:	gs addr32 gs jae 0x14000b3c6
   14000b388:	or     eax,0x2020200a
   14000b38d:	and    BYTE PTR [rdi+rbp*1],bh
   14000b390:	jae    0x14000b3f7
   14000b392:	movsxd esi,DWORD PTR [rbp+0x72]
   14000b395:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000b39d:	je     0x14000b411
   14000b39f:	jne    0x14000b414
   14000b3a1:	je     0x14000b3ec
   14000b3a3:	outs   dx,BYTE PTR ds:[rsi]
   14000b3a4:	outs   dx,WORD PTR ds:[rsi]
   14000b3a6:	ds or  eax,0x612f3c0a
   14000b3ac:	jae    0x14000b421
   14000b3ae:	gs ins DWORD PTR es:[rdi],dx
   14000b3b0:	(bad)  
   14000b3b1:	ins    BYTE PTR es:[rdi],dx
   14000b3b2:	jns    0x14000b3f2
   14000b3b4:	or     eax,0xd400000a
   14000b3b9:	add    esi,DWORD PTR [rax+rax*1]
   14000b3bc:	add    BYTE PTR [rax],al
   14000b3be:	push   rsi
   14000b3bf:	add    BYTE PTR [rbx+0x0],dl
   14000b3c2:	pop    rdi
   14000b3c3:	add    BYTE PTR [rsi+0x0],dl
   14000b3c6:	add    BYTE PTR [r10+0x0],r10b
   14000b3ca:	push   rbx
   14000b3cb:	add    BYTE PTR [rcx+0x0],cl
   14000b3ce:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000b3d2:	pop    rdi
   14000b3d3:	add    BYTE PTR [rcx+0x0],cl
   14000b3d6:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000b3da:	rex.WRXB add BYTE PTR [r8],r8b
   14000b3dd:	add    BYTE PTR [rax],al
   14000b3df:	add    BYTE PTR [rbp+0xfeef04],bh
   14000b3e5:	add    BYTE PTR [rcx],al
   14000b3e7:	add    BYTE PTR [rax],al
   14000b3e9:	add    BYTE PTR [rdx],cl
   14000b3eb:	add    BYTE PTR [rax],al
   14000b3ed:	add    BYTE PTR [rax],bpl
   14000b3f0:	add    BYTE PTR [rax],al
   14000b3f2:	or     al,BYTE PTR [rax]
   14000b3f4:	add    BYTE PTR [rax+0x0],al
   14000b3f7:	sub    BYTE PTR [rdi],bh
   14000b3f9:	add    BYTE PTR [rax],al
   14000b3fb:	add    BYTE PTR [rax],al
   14000b3fd:	add    BYTE PTR [rax],al
   14000b3ff:	add    BYTE PTR [rax+rax*1],al
   14000b402:	add    al,0x0
   14000b404:	add    DWORD PTR [rax],eax
	...
   14000b412:	add    BYTE PTR [rax],al
   14000b414:	xor    al,BYTE PTR [rbx]
   14000b416:	add    BYTE PTR [rax],al
   14000b418:	add    DWORD PTR [rax],eax
   14000b41a:	push   rbx
   14000b41b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14000b41f:	add    BYTE PTR [rcx+0x0],ch
   14000b422:	outs   dx,BYTE PTR ds:[rsi]
   14000b423:	add    BYTE PTR [rdi+0x0],ah
   14000b426:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b42a:	ins    BYTE PTR es:[rdi],dx
   14000b42b:	add    BYTE PTR [rbp+0x0],ah
   14000b42e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b432:	data16 add BYTE PTR [rdi+0x0],ch
   14000b436:	add    BYTE PTR [rax],al
   14000b438:	(bad)  
   14000b439:	add    eax,DWORD PTR [rax]
   14000b43b:	add    BYTE PTR [rcx],al
   14000b43d:	add    BYTE PTR [rax],dh
   14000b43f:	add    BYTE PTR [rax+rax*1],dh
   14000b442:	xor    BYTE PTR [rax],al
   14000b444:	cmp    DWORD PTR [rax],eax
   14000b446:	xor    BYTE PTR [rax],al
   14000b448:	xor    al,0x0
   14000b44a:	rex.X add BYTE PTR [rax],sil
   14000b44d:	add    BYTE PTR [rax],al
   14000b44f:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000b453:	add    BYTE PTR [rcx],al
   14000b455:	add    BYTE PTR [rbx+0x0],al
   14000b458:	outs   dx,DWORD PTR ds:[rsi]
   14000b459:	add    BYTE PTR [rbp+0x0],ch
   14000b45c:	jo     0x14000b45e
   14000b45e:	(bad)  
   14000b45f:	add    BYTE PTR [rsi+0x0],ch
   14000b462:	jns    0x14000b464
   14000b464:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b468:	ins    DWORD PTR es:[rdi],dx
   14000b469:	add    BYTE PTR [rbp+0x0],ah
   14000b46c:	add    BYTE PTR [rax],al
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b474:	movsxd eax,DWORD PTR [rax]
   14000b476:	jb     0x14000b478
   14000b478:	outs   dx,DWORD PTR ds:[rsi]
   14000b479:	add    BYTE PTR [rbx+0x0],dh
   14000b47c:	outs   dx,DWORD PTR ds:[rsi]
   14000b47d:	add    BYTE PTR [rsi+0x0],ah
   14000b480:	je     0x14000b482
   14000b482:	and    BYTE PTR [rax],al
   14000b484:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b488:	jb     0x14000b48a
   14000b48a:	jo     0x14000b48c
   14000b48c:	outs   dx,DWORD PTR ds:[rsi]
   14000b48d:	add    BYTE PTR [rdx+0x0],dh
   14000b490:	(bad)  
   14000b491:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b495:	add    BYTE PTR [rdi+0x0],ch
   14000b498:	outs   dx,BYTE PTR ds:[rsi]
   14000b499:	add    BYTE PTR [rax],al
   14000b49b:	add    BYTE PTR [rax+0x1003000],cl
   14000b4a1:	add    BYTE PTR [rsi+0x0],al
   14000b4a4:	imul   eax,DWORD PTR [rax],0x65006c
   14000b4aa:	add    BYTE PTR [rbp+0x0],r12b
   14000b4ae:	jae    0x14000b4b0
   14000b4b0:	movsxd eax,DWORD PTR [rax]
   14000b4b2:	jb     0x14000b4b4
   14000b4b4:	imul   eax,DWORD PTR [rax],0x740070
   14000b4ba:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b4c0:	add    BYTE PTR [rax],al
   14000b4c2:	add    BYTE PTR [rax],al
   14000b4c4:	push   rdi
   14000b4c5:	add    BYTE PTR [rcx+0x0],ch
   14000b4c8:	outs   dx,BYTE PTR ds:[rsi]
   14000b4c9:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14000b4cd:	add    BYTE PTR [rdi+0x0],dh
   14000b4d0:	jae    0x14000b4d2
   14000b4d2:	and    BYTE PTR [rax],al
   14000b4d4:	push   rsp
   14000b4d5:	add    BYTE PTR [rdi+0x0],ch
   14000b4d8:	and    BYTE PTR [rax],al
   14000b4da:	rex.RXB add BYTE PTR [r15+0x0],r13b
   14000b4de:	and    BYTE PTR [rax],al
   14000b4e0:	push   rbx
   14000b4e1:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000b4e5:	add    BYTE PTR [rdx+0x0],dh
   14000b4e8:	je     0x14000b4ea
   14000b4ea:	jne    0x14000b4ec
   14000b4ec:	jo     0x14000b4ee
   14000b4ee:	and    BYTE PTR [rax],al
   14000b4f0:	rex.WRXB add BYTE PTR [r8+0x0],r14b
   14000b4f4:	je     0x14000b4f6
   14000b4f6:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b4fc:	jae    0x14000b4fe
   14000b4fe:	and    BYTE PTR [rax],al
   14000b500:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b504:	ins    DWORD PTR es:[rdi],dx
   14000b505:	add    BYTE PTR [rbp+0x0],ch
   14000b508:	(bad)  
   14000b509:	add    BYTE PTR [rsi+0x0],ch
   14000b50c:	add    BYTE PTR fs:[rax],ah
   14000b50f:	add    BYTE PTR [rax+rax*1+0x69],cl
   14000b513:	add    BYTE PTR [rsi+0x0],ch
   14000b516:	add    BYTE PTR gs:[rax],ah
   14000b519:	add    BYTE PTR [rax+rax*1+0x6f],dl
   14000b51d:	add    BYTE PTR [rdi+0x0],ch
   14000b520:	ins    BYTE PTR es:[rdi],dx
   14000b521:	add    BYTE PTR [rax],al
   14000b523:	add    BYTE PTR [rsi+0x0],ah
   14000b526:	and    eax,DWORD PTR [rax]
   14000b528:	add    DWORD PTR [rax],eax
   14000b52a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b52e:	ins    BYTE PTR es:[rdi],dx
   14000b52f:	add    BYTE PTR [rbp+0x0],ah
   14000b532:	push   rsi
   14000b533:	add    BYTE PTR [rbp+0x0],ah
   14000b536:	jb     0x14000b538
   14000b538:	jae    0x14000b53a
   14000b53a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b540:	add    BYTE PTR [rax],al
   14000b542:	add    BYTE PTR [rax],al
   14000b544:	xor    DWORD PTR [rax],eax
   14000b546:	xor    BYTE PTR [rax],al
   14000b548:	add    BYTE PTR cs:[rax],dh
   14000b54b:	add    BYTE PTR [rsi],ch
   14000b54d:	add    BYTE PTR [rcx],dh
   14000b54f:	add    BYTE PTR [rax],dh
   14000b551:	add    BYTE PTR [rdx],dh
   14000b553:	add    BYTE PTR [rax+rax*1],dh
   14000b556:	xor    BYTE PTR [rax],al
   14000b558:	add    BYTE PTR cs:[rcx],dh
   14000b55b:	add    BYTE PTR [rsi],dh
   14000b55d:	add    BYTE PTR [rbx],dh
   14000b55f:	add    BYTE PTR [rax],bh
   14000b561:	add    BYTE PTR [rax+rax*1],dh
   14000b564:	and    BYTE PTR [rax],al
   14000b566:	sub    BYTE PTR [rax],al
   14000b568:	je     0x14000b56a
   14000b56a:	push   0x2e003100
   14000b56f:	add    BYTE PTR [rcx],dh
   14000b571:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700e577
   14000b577:	add    BYTE PTR [rax],dh
   14000b579:	add    BYTE PTR [rcx],bh
   14000b57b:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700e681
   14000b581:	add    BYTE PTR [rax],dh
   14000b583:	add    BYTE PTR [rax],dh
   14000b585:	add    BYTE PTR [rcx],ch
   14000b587:	add    BYTE PTR [rax],al
   14000b589:	add    BYTE PTR [rax],al
   14000b58b:	add    BYTE PTR [rsi],bh
   14000b58d:	add    BYTE PTR [rdi],cl
   14000b58f:	add    BYTE PTR [rcx],al
   14000b591:	add    BYTE PTR [rcx+0x0],cl
   14000b594:	outs   dx,BYTE PTR ds:[rsi]
   14000b595:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b599:	add    BYTE PTR [rdx+0x0],dh
   14000b59c:	outs   dx,BYTE PTR ds:[rsi]
   14000b59d:	add    BYTE PTR [rcx+0x0],ah
   14000b5a0:	ins    BYTE PTR es:[rdi],dx
   14000b5a1:	add    BYTE PTR [rsi+0x0],cl
   14000b5a4:	(bad)  
   14000b5a5:	add    BYTE PTR [rbp+0x0],ch
   14000b5a8:	add    BYTE PTR gs:[rax],al
   14000b5ab:	add    BYTE PTR [rax+0x0],dh
   14000b5ae:	ja     0x14000b5b0
   14000b5b0:	ins    BYTE PTR es:[rdi],dx
   14000b5b1:	add    BYTE PTR [rcx+0x0],ah
   14000b5b4:	jne    0x14000b5b6
   14000b5b6:	outs   dx,BYTE PTR ds:[rsi]
   14000b5b7:	add    BYTE PTR [rbx+0x0],ah
   14000b5ba:	push   0x72006500
   14000b5bf:	add    BYTE PTR [rsi],ch
   14000b5c1:	add    BYTE PTR [rbp+0x0],ah
   14000b5c4:	js     0x14000b5c6
   14000b5c6:	add    BYTE PTR gs:[rax],al
   14000b5c9:	add    BYTE PTR [rax],al
   14000b5cb:	add    BYTE PTR [rax+0x1002e00],al
   14000b5d1:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b5d5:	add    BYTE PTR [rdi+0x0],ah
   14000b5d8:	(bad)  
   14000b5d9:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000b5dd:	add    BYTE PTR [rdi+0x0],ch
   14000b5e0:	jo     0x14000b5e2
   14000b5e2:	jns    0x14000b5e4
   14000b5e4:	jb     0x14000b5e6
   14000b5e6:	imul   eax,DWORD PTR [rax],0x680067
   14000b5ec:	je     0x14000b5ee
   14000b5ee:	add    BYTE PTR [rax],al
   14000b5f0:	test   eax,0x4d002000
   14000b5f5:	add    BYTE PTR [rcx+0x0],ch
   14000b5f8:	movsxd eax,DWORD PTR [rax]
   14000b5fa:	jb     0x14000b5fc
   14000b5fc:	outs   dx,DWORD PTR ds:[rsi]
   14000b5fd:	add    BYTE PTR [rbx+0x0],dh
   14000b600:	outs   dx,DWORD PTR ds:[rsi]
   14000b601:	add    BYTE PTR [rsi+0x0],ah
   14000b604:	je     0x14000b606
   14000b606:	and    BYTE PTR [rax],al
   14000b608:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b60c:	jb     0x14000b60e
   14000b60e:	jo     0x14000b610
   14000b610:	outs   dx,DWORD PTR ds:[rsi]
   14000b611:	add    BYTE PTR [rdx+0x0],dh
   14000b614:	(bad)  
   14000b615:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b619:	add    BYTE PTR [rdi+0x0],ch
   14000b61c:	outs   dx,BYTE PTR ds:[rsi]
   14000b61d:	add    BYTE PTR [rsi],ch
   14000b61f:	add    BYTE PTR [rax],ah
   14000b621:	add    BYTE PTR [rcx+0x0],al
   14000b624:	ins    BYTE PTR es:[rdi],dx
   14000b625:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000b629:	add    BYTE PTR [rdx+0x0],dh
   14000b62c:	imul   eax,DWORD PTR [rax],0x680067
   14000b632:	je     0x14000b634
   14000b634:	jae    0x14000b636
   14000b636:	and    BYTE PTR [rax],al
   14000b638:	jb     0x14000b63a
   14000b63a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b63e:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b642:	jbe    0x14000b644
   14000b644:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000b649:	add    BYTE PTR [rax],al
   14000b64b:	add    BYTE PTR [rsi+0x0],al
   14000b64e:	sldt   WORD PTR [rcx]
   14000b651:	add    BYTE PTR [rdi+0x0],cl
   14000b654:	jb     0x14000b656
   14000b656:	imul   eax,DWORD PTR [rax],0x690067
   14000b65c:	outs   dx,BYTE PTR ds:[rsi]
   14000b65d:	add    BYTE PTR [rcx+0x0],ah
   14000b660:	ins    BYTE PTR es:[rdi],dx
   14000b661:	add    BYTE PTR [rsi+0x0],al
   14000b664:	imul   eax,DWORD PTR [rax],0x65006c
   14000b66a:	outs   dx,BYTE PTR ds:[rsi]
   14000b66b:	add    BYTE PTR [rcx+0x0],ah
   14000b66e:	ins    DWORD PTR es:[rdi],dx
   14000b66f:	add    BYTE PTR [rbp+0x0],ah
   14000b672:	add    BYTE PTR [rax],al
   14000b674:	jo     0x14000b676
   14000b676:	ja     0x14000b678
   14000b678:	ins    BYTE PTR es:[rdi],dx
   14000b679:	add    BYTE PTR [rcx+0x0],ah
   14000b67c:	jne    0x14000b67e
   14000b67e:	outs   dx,BYTE PTR ds:[rsi]
   14000b67f:	add    BYTE PTR [rbx+0x0],ah
   14000b682:	push   0x72006500
   14000b687:	add    BYTE PTR [rsi],ch
   14000b689:	add    BYTE PTR [rbp+0x0],ah
   14000b68c:	js     0x14000b68e
   14000b68e:	add    BYTE PTR gs:[rax],al
   14000b691:	add    BYTE PTR [rax],al
   14000b693:	add    BYTE PTR [rdx+0x0],ch
   14000b696:	and    eax,0x50000100
   14000b69b:	add    BYTE PTR [rdx+0x0],dh
   14000b69e:	outs   dx,DWORD PTR ds:[rsi]
   14000b69f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b6a3:	add    BYTE PTR [rbx+0x0],ah
   14000b6a6:	je     0x14000b6a8
   14000b6a8:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b6ac:	ins    DWORD PTR es:[rdi],dx
   14000b6ad:	add    BYTE PTR [rbp+0x0],ah
   14000b6b0:	add    BYTE PTR [rax],al
   14000b6b2:	add    BYTE PTR [rax],al
   14000b6b4:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b6b8:	movsxd eax,DWORD PTR [rax]
   14000b6ba:	jb     0x14000b6bc
   14000b6bc:	outs   dx,DWORD PTR ds:[rsi]
   14000b6bd:	add    BYTE PTR [rbx+0x0],dh
   14000b6c0:	outs   dx,DWORD PTR ds:[rsi]
   14000b6c1:	add    BYTE PTR [rsi+0x0],ah
   14000b6c4:	je     0x14000b6c6
   14000b6c6:	scas   al,BYTE PTR es:[rdi]
   14000b6c7:	add    BYTE PTR [rax],ah
   14000b6c9:	add    BYTE PTR [rdi+0x0],dl
   14000b6cc:	imul   eax,DWORD PTR [rax],0x64006e
   14000b6d2:	outs   dx,DWORD PTR ds:[rsi]
   14000b6d3:	add    BYTE PTR [rdi+0x0],dh
   14000b6d6:	jae    0x14000b6d8
   14000b6d8:	scas   al,BYTE PTR es:[rdi]
   14000b6d9:	add    BYTE PTR [rax],ah
   14000b6db:	add    BYTE PTR [rdi+0x0],cl
   14000b6de:	jo     0x14000b6e0
   14000b6e0:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b6e4:	(bad)  
   14000b6e5:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b6e9:	add    BYTE PTR [rsi+0x0],ch
   14000b6ec:	add    BYTE PTR [eax],ah
   14000b6ef:	add    BYTE PTR [rbx+0x0],dl
   14000b6f2:	jns    0x14000b6f4
   14000b6f4:	jae    0x14000b6f6
   14000b6f6:	je     0x14000b6f8
   14000b6f8:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b6fc:	add    BYTE PTR [rax],al
   14000b6fe:	add    BYTE PTR [rax],al
   14000b700:	rex.RX add BYTE PTR [rcx],r10b
   14000b703:	add    BYTE PTR [rcx],al
   14000b705:	add    BYTE PTR [rax+0x0],dl
   14000b708:	jb     0x14000b70a
   14000b70a:	outs   dx,DWORD PTR ds:[rsi]
   14000b70b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b70f:	add    BYTE PTR [rbx+0x0],ah
   14000b712:	je     0x14000b714
   14000b714:	push   rsi
   14000b715:	add    BYTE PTR [rbp+0x0],ah
   14000b718:	jb     0x14000b71a
   14000b71a:	jae    0x14000b71c
   14000b71c:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b722:	add    BYTE PTR [rax],al
   14000b724:	xor    DWORD PTR [rax],eax
   14000b726:	xor    BYTE PTR [rax],al
   14000b728:	add    BYTE PTR cs:[rax],dh
   14000b72b:	add    BYTE PTR [rsi],ch
   14000b72d:	add    BYTE PTR [rcx],dh
   14000b72f:	add    BYTE PTR [rax],dh
   14000b731:	add    BYTE PTR [rdx],dh
   14000b733:	add    BYTE PTR [rax+rax*1],dh
   14000b736:	xor    BYTE PTR [rax],al
   14000b738:	add    BYTE PTR cs:[rcx],dh
   14000b73b:	add    BYTE PTR [rsi],dh
   14000b73d:	add    BYTE PTR [rbx],dh
   14000b73f:	add    BYTE PTR [rax],bh
   14000b741:	add    BYTE PTR [rax+rax*1],dh
   14000b744:	add    BYTE PTR [rax],al
   14000b746:	add    BYTE PTR [rax],al
   14000b748:	add    BYTE PTR [rax],r8b
   14000b74b:	add    BYTE PTR [rcx],al
   14000b74d:	add    BYTE PTR [rsi+0x0],dl
   14000b750:	(bad)  
   14000b751:	add    BYTE PTR [rdx+0x0],dh
   14000b754:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b758:	ins    BYTE PTR es:[rdi],dx
   14000b759:	add    BYTE PTR [rbp+0x0],ah
   14000b75c:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b760:	data16 add BYTE PTR [rdi+0x0],ch
   14000b764:	add    BYTE PTR [rax],al
   14000b766:	add    BYTE PTR [rax],al
   14000b768:	and    al,0x0
   14000b76a:	add    al,0x0
   14000b76c:	add    BYTE PTR [rax],al
   14000b76e:	push   rsp
   14000b76f:	add    BYTE PTR [rdx+0x0],dh
   14000b772:	(bad)  
   14000b773:	add    BYTE PTR [rsi+0x0],ch
   14000b776:	jae    0x14000b778
   14000b778:	ins    BYTE PTR es:[rdi],dx
   14000b779:	add    BYTE PTR [rcx+0x0],ah
   14000b77c:	je     0x14000b77e
   14000b77e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b784:	add    BYTE PTR [rax],al
   14000b786:	add    BYTE PTR [rax],al
   14000b788:	or     DWORD PTR [rax+rsi*4],eax
   14000b78b:	add    al,0x0
   14000b78d:	add    BYTE PTR [rax],al
   14000b78f:	add    ch,cl
   14000b791:	dec    ch
   14000b793:	dec    al
   14000b795:	add    BYTE PTR [rax],al
   14000b797:	add    BYTE PTR [rax],al
   14000b799:	add    BYTE PTR [rcx],al
   14000b79b:	add    BYTE PTR [rax],al
   14000b79d:	add    BYTE PTR [rax],al
   14000b79f:	add    BYTE PTR [rcx],dl
   14000b7a1:	add    BYTE PTR [rax],al
   14000b7a3:	add    BYTE PTR [rax],al
   14000b7a5:	add    BYTE PTR [rax],al
   14000b7a7:	add    BYTE PTR [rdx],al
   14000b7a9:	add    BYTE PTR [rax],al
   14000b7ab:	add    BYTE PTR [rcx],cl
   14000b7ad:	xchg   rcx,rax
   14000b7af:	fstp   TBYTE PTR [rip+0x334234a8]        # 0x17342ec5d
   14000b7b5:	outs   dx,BYTE PTR ds:[rsi]
   14000b7b6:	mov    BYTE PTR [rcx+0x4d],bl
   14000b7b9:	ret    
   14000b7ba:	(bad)  
   14000b7bb:	movabs al,ds:0xc61cc5a92c44dab3
   14000b7c4:	(bad)  
   14000b7c5:	rex.RXB or BYTE PTR [r14d-0x39],r11b
   14000b7ca:	inc    BYTE PTR [rbx+0x0]
	...
   14000b7e4:	mov    BYTE PTR [rax],al
   14000b7e6:	add    BYTE PTR [rax],al
   14000b7e8:	(bad)  
   14000b7e9:	add    BYTE PTR [rax],al
   14000b7eb:	add    BYTE PTR [rax+0x8000000],bl
   14000b7f1:	add    BYTE PTR [rax],al
   14000b7f3:	add    BYTE PTR [rax+0xe000000],ah
   14000b7f9:	add    BYTE PTR [rax],al
   14000b7fb:	add    BYTE PTR [rax+0x8000000],dh
	...
   14000b809:	add    BYTE PTR [rax],al
   14000b80b:	add    BYTE PTR [rax+0xc000000],bh
   14000b811:	add    BYTE PTR [rax],al
   14000b813:	add    BYTE PTR [rax],al
   14000b815:	add    BYTE PTR [rax],al
   14000b817:	add    BYTE PTR [rbp+0x0],cl
   14000b81a:	push   rbp
   14000b81b:	add    BYTE PTR [rcx+0x0],cl
	...
   14000b826:	add    BYTE PTR [rax],al
   14000b828:	adc    BYTE PTR [rax],al
   14000b82a:	add    BYTE PTR [rax],al
   14000b82c:	sbb    BYTE PTR [rax],al
   14000b82e:	add    BYTE PTR [rax],al
   14000b830:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000b834:	rex.WB add BYTE PTR [r8],al
	...
   14000b83f:	add    BYTE PTR [rbx],cl
   14000b841:	add    BYTE PTR [rax],al
   14000b843:	add    BYTE PTR [rax],dl
   14000b845:	add    BYTE PTR [rax],al
   14000b847:	add    BYTE PTR [rbp+0x0],ah
   14000b84a:	outs   dx,BYTE PTR ds:[rsi]
   14000b84b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193010d51
   14000b851:	add    BYTE PTR [rax],al
   14000b853:	add    BYTE PTR [rax],al
   14000b855:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000c000 <.reloc>:
   14000c000:	add    BYTE PTR [rax+0x0],ah
   14000c003:	add    BYTE PTR [rax+0x0],cl
   14000c006:	add    BYTE PTR [rax],al
   14000c008:	push   rax
   14000c009:	movabs ds:0xa378a370a368a358,eax
   14000c012:	and    BYTE PTR [rbx-0x5c5f5c78],0xa8
   14000c019:	movabs ds:0xa468a460a448a440,eax
   14000c022:	jo     0x14000bfc8
   14000c024:	js     0x14000bfca
   14000c026:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   14000c02e:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14000c037:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c038:	enter  0xd0a4,0xa4
   14000c03c:	fsub   DWORD PTR [rax+rcx*1+0x28ab20ab]
   14000c043:	stos   DWORD PTR es:[rdi],eax
   14000c044:	xor    BYTE PTR [rbx-0x70000000],ch
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	sbb    al,0x0
   14000c04e:	add    BYTE PTR [rax],al
   14000c050:	and    BYTE PTR [rax-0x5fcf5fd8],ah
   14000c056:	cmp    BYTE PTR [rax-0x5f7f5fa8],ah
   14000c05c:	test   al,0xa0
   14000c05e:	shl    BYTE PTR [rax-0x5ed75f00],1
