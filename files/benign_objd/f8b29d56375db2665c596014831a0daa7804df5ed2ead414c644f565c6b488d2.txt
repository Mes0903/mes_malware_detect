
f8b29d56375db2665c596014831a0daa7804df5ed2ead414c644f565c6b488d2.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x8b45]        # 0x409b60
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x8b46]        # 0x409b70
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x8b49]        # 0x409b80
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x8b0c]        # 0x409b50
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x896f]        # 0x4099c0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x8ae1]        # 0x409b40
  40105f:	mov    DWORD PTR [rip+0xbfa3],edx        # 0x40d008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4073f0
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402280
  401081:	mov    rdx,QWORD PTR [rip+0x89c8]        # 0x409a50
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x89ae]        # 0x409a40
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x8a34]        # 0x409ad0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x894b]        # 0x4099f0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401e60
  4010af:	mov    rax,QWORD PTR [rip+0x889a]        # 0x409950
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4073f0
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x1039]        # 0x402160
  401127:	call   0x402150
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x8995]        # 0x409b00
  40116b:	lea    r8,[rip+0xbea6]        # 0x40d018
  401172:	lea    rdx,[rip+0xbea7]        # 0x40d020
  401179:	lea    rcx,[rip+0xbea8]        # 0x40d028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0xbe78],eax        # 0x40d000
  401188:	lea    rax,[rip+0xbe71]        # 0x40d000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x8925]        # 0x409ac0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x407408
  4011a3:	mov    DWORD PTR [rip+0xbe67],eax        # 0x40d010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x897a]        # 0x409b40
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x882b]        # 0x409a20
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0xe216]        # 0x40f418
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x8807]        # 0x409a30
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0xbdba],0x1        # 0x40d004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x873c]        # 0x4099a0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402470
  40127d:	lea    rcx,[rip+0x178c]        # 0x402a10
  401284:	call   QWORD PTR [rip+0xe186]        # 0x40f410
  40128a:	mov    rdx,QWORD PTR [rip+0x877f]        # 0x409a10
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402920
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x407430
  4012a5:	call   0x402260
  4012aa:	mov    rax,QWORD PTR [rip+0x870f]        # 0x4099c0
  4012b1:	mov    QWORD PTR [rip+0xd3e0],rax        # 0x40e698
  4012b8:	mov    rax,QWORD PTR [rip+0x8721]        # 0x4099e0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0xd379],rax        # 0x40e690
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x6cca],eax        # 0x408000
  401336:	mov    r12d,DWORD PTR [rip+0xbceb]        # 0x40d028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x407340
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0xbcc2]        # 0x40d020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x407308
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x407340
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x407338
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0xbc6a],rbp        # 0x40d020
  4013b6:	call   0x401e30
  4013bb:	mov    rax,QWORD PTR [rip+0x860e]        # 0x4099d0
  4013c2:	mov    rdx,QWORD PTR [rip+0xbc4f]        # 0x40d018
  4013c9:	mov    ecx,DWORD PTR [rip+0xbc59]        # 0x40d028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0xbc3c]        # 0x40d018
  4013dc:	mov    rdx,QWORD PTR [rip+0xbc3d]        # 0x40d020
  4013e3:	call   0x407500
  4013e8:	mov    ecx,DWORD PTR [rip+0xbc1a]        # 0x40d008
  4013ee:	mov    DWORD PTR [rip+0xbc18],eax        # 0x40d00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0xbc02]        # 0x40d004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4073d8
  40140b:	mov    eax,DWORD PTR [rip+0xbbfb]        # 0x40d00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x85f9]        # 0x409a30
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4073e0
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x862d]        # 0x409a90
  401463:	mov    rcx,QWORD PTR [rip+0x8616]        # 0x409a80
  40146a:	call   0x4073c8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0xdf27]        # 0x40f3c0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x8609]        # 0x409ab0
  4014a7:	mov    rcx,QWORD PTR [rip+0x85f2]        # 0x409aa0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4073c8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x407390
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x8665]        # 0x409b40
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401e70
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x8635]        # 0x409b40
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401e70
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x58
  401536:	movaps XMMWORD PTR [rsp+0x20],xmm6
  40153b:	movaps XMMWORD PTR [rsp+0x30],xmm7
  401540:	movaps XMMWORD PTR [rsp+0x40],xmm8
  401546:	movapd xmm8,xmm0
  40154b:	mov    rcx,QWORD PTR [rip+0xbd06]        # 0x40d258
  401552:	movapd xmm7,xmm1
  401556:	test   rcx,rcx
  401559:	je     0x4015b0
  40155b:	movsd  xmm6,QWORD PTR [rip+0x7be5]        # 0x409148
  401563:	mulsd  xmm0,xmm6
  401567:	movapd xmm1,xmm0
  40156b:	movq   rdx,xmm0
  401570:	call   0x407330
  401575:	mov    ecx,0x9
  40157a:	call   0x407328
  40157f:	mulsd  xmm6,xmm7
  401583:	mov    rcx,QWORD PTR [rip+0xbcce]        # 0x40d258
  40158a:	movaps xmm7,XMMWORD PTR [rsp+0x30]
  40158f:	movaps xmm8,XMMWORD PTR [rsp+0x40]
  401595:	movapd xmm1,xmm6
  401599:	movq   rdx,xmm6
  40159e:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  4015a3:	add    rsp,0x58
  4015a7:	pop    rbx
  4015a8:	pop    rsi
  4015a9:	jmp    0x407330
  4015ae:	xchg   ax,ax
  4015b0:	mov    rsi,QWORD PTR [rip+0xdeb9]        # 0x40f470
  4015b7:	call   rsi
  4015b9:	movapd xmm1,xmm8
  4015be:	lea    rcx,[rip+0xbc5b]        # 0x40d220
  4015c5:	mov    r9d,0x53
  4015cb:	mov    r8d,0x4e
  4015d1:	mov    rbx,rax
  4015d4:	call   0x401c38
  4015d9:	lea    rdx,[rbx+0x30]
  4015dd:	mov    rcx,rax
  4015e0:	call   0x407360
  4015e5:	mov    ecx,0x9
  4015ea:	call   0x407328
  4015ef:	call   rsi
  4015f1:	movapd xmm1,xmm7
  4015f5:	lea    rcx,[rip+0xbc24]        # 0x40d220
  4015fc:	mov    rbx,rax
  4015ff:	mov    r9d,0x57
  401605:	mov    r8d,0x45
  40160b:	call   0x401c38
  401610:	lea    rdx,[rbx+0x30]
  401614:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  401619:	mov    rcx,rax
  40161c:	movaps xmm7,XMMWORD PTR [rsp+0x30]
  401621:	movaps xmm8,XMMWORD PTR [rsp+0x40]
  401627:	add    rsp,0x58
  40162b:	pop    rbx
  40162c:	pop    rsi
  40162d:	jmp    0x407360
  401632:	nop
  401633:	nop
  401634:	nop
  401635:	nop
  401636:	nop
  401637:	nop
  401638:	nop
  401639:	nop
  40163a:	nop
  40163b:	nop
  40163c:	nop
  40163d:	nop
  40163e:	nop
  40163f:	nop
  401640:	push   rbp
  401641:	push   rdi
  401642:	push   rsi
  401643:	push   rbx
  401644:	sub    rsp,0x68
  401648:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40164d:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401652:	test   ecx,ecx
  401654:	mov    ebp,ecx
  401656:	mov    rdi,rdx
  401659:	jle    0x401963
  40165f:	mov    rcx,QWORD PTR [rdx]
  401662:	call   0x401c48
  401667:	cmp    ebp,0x1
  40166a:	mov    rbx,rax
  40166d:	jle    0x401697
  40166f:	lea    eax,[rbp-0x2]
  401672:	lea    rsi,[rdi+0x8]
  401676:	lea    rbp,[rdi+rax*8+0x10]
  40167b:	mov    rdi,rbx
  40167e:	xchg   ax,ax
  401680:	mov    rcx,QWORD PTR [rsi]
  401683:	add    rsi,0x8
  401687:	call   0x401c48
  40168c:	cmp    rsi,rbp
  40168f:	mov    QWORD PTR [rdi],rax
  401692:	mov    rdi,rax
  401695:	jne    0x401680
  401697:	call   0x401c68
  40169c:	lea    r9,[rsp+0x38]
  4016a1:	lea    r8,[rip+0xd218]        # 0x40e8c0
  4016a8:	mov    rdx,rbx
  4016ab:	mov    rcx,rax
  4016ae:	call   0x401c70
  4016b3:	test   eax,eax
  4016b5:	jne    0x4017f1
  4016bb:	lea    r8,[rip+0x7ad8]        # 0x40919a
  4016c2:	xor    ecx,ecx
  4016c4:	mov    rdx,rbx
  4016c7:	call   0x401c40
  4016cc:	test   rax,rax
  4016cf:	mov    rdi,rax
  4016d2:	je     0x4017d0
  4016d8:	call   0x401c50
  4016dd:	mov    rdx,QWORD PTR [rax]
  4016e0:	mov    rsi,rax
  4016e3:	test   rdx,rdx
  4016e6:	jne    0x401700
  4016e8:	jmp    0x4017b0
  4016ed:	nop    DWORD PTR [rax]
  4016f0:	add    rsi,0x18
  4016f4:	mov    rdx,QWORD PTR [rsi]
  4016f7:	test   rdx,rdx
  4016fa:	je     0x4017b0
  401700:	mov    rcx,rdi
  401703:	call   0x407310
  401708:	test   eax,eax
  40170a:	jne    0x4016f0
  40170c:	mov    rcx,QWORD PTR [rsi+0x8]
  401710:	call   0x4073a0
  401715:	movsd  xmm6,QWORD PTR [rip+0x7b3b]        # 0x409258
  40171d:	movsd  QWORD PTR [rip+0xcf9b],xmm0        # 0x40e6c0
  401725:	movapd xmm2,xmm6
  401729:	divsd  xmm2,xmm0
  40172d:	movsd  QWORD PTR [rip+0xcf93],xmm2        # 0x40e6c8
  401735:	movsd  xmm7,QWORD PTR [rsp+0x38]
  40173b:	movapd xmm1,xmm6
  40173f:	subsd  xmm1,xmm7
  401743:	sqrtsd xmm0,xmm1
  401747:	ucomisd xmm0,xmm0
  40174b:	jp     0x401a26
  401751:	addsd  xmm6,xmm0
  401755:	divsd  xmm7,xmm6
  401759:	movsd  QWORD PTR [rip+0xd167],xmm7        # 0x40e8c8
  401761:	call   0x401a40
  401766:	lea    r8,[rip+0x7a34]        # 0x4091a1
  40176d:	xor    ecx,ecx
  40176f:	mov    rdx,rbx
  401772:	call   0x401c40
  401777:	test   eax,eax
  401779:	jne    0x401810
  40177f:	test   rbx,rbx
  401782:	je     0x401797
  401784:	mov    rsi,QWORD PTR [rbx]
  401787:	mov    rcx,rbx
  40178a:	call   0x401c78
  40178f:	test   rsi,rsi
  401792:	mov    rbx,rsi
  401795:	jne    0x401784
  401797:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  40179c:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4017a1:	add    rsp,0x68
  4017a5:	pop    rbx
  4017a6:	pop    rsi
  4017a7:	pop    rdi
  4017a8:	pop    rbp
  4017a9:	ret    
  4017aa:	nop    WORD PTR [rax+rax*1+0x0]
  4017b0:	lea    rdx,[rip+0x7a7d]        # 0x409234
  4017b7:	mov    r8,rdi
  4017ba:	mov    ecx,0x1
  4017bf:	call   0x401ca0
  4017c4:	jmp    0x40170c
  4017c9:	nop    DWORD PTR [rax+0x0]
  4017d0:	movsd  xmm3,QWORD PTR [rip+0x7a80]        # 0x409258
  4017d8:	movsd  QWORD PTR [rip+0xcee8],xmm3        # 0x40e6c8
  4017e0:	movapd xmm6,xmm3
  4017e4:	movsd  QWORD PTR [rip+0xced4],xmm3        # 0x40e6c0
  4017ec:	jmp    0x401735
  4017f1:	lea    rdx,[rip+0x798c]        # 0x409184
  4017f8:	mov    ecx,0x1
  4017fd:	call   0x401ca0
  401802:	jmp    0x4016bb
  401807:	nop    WORD PTR [rax+rax*1+0x0]
  401810:	lea    r8,[rip+0x7991]        # 0x4091a8
  401817:	xor    ecx,ecx
  401819:	mov    rdx,rbx
  40181c:	call   0x401c40
  401821:	lea    r8,[rip+0x7987]        # 0x4091af
  401828:	xor    ecx,ecx
  40182a:	mov    rdx,rbx
  40182d:	mov    QWORD PTR [rip+0xd0a4],rax        # 0x40e8d8
  401834:	call   0x401c40
  401839:	lea    r8,[rip+0x7976]        # 0x4091b6
  401840:	xor    ecx,ecx
  401842:	mov    rdx,rbx
  401845:	mov    QWORD PTR [rip+0xd084],rax        # 0x40e8d0
  40184c:	call   0x401c40
  401851:	test   eax,eax
  401853:	jne    0x401920
  401859:	lea    r8,[rip+0x796b]        # 0x4091cb
  401860:	xor    ecx,ecx
  401862:	mov    rdx,rbx
  401865:	pxor   xmm6,xmm6
  401869:	call   0x401c40
  40186e:	mov    QWORD PTR [rsp+0x28],rax
  401873:	movsd  xmm0,QWORD PTR [rsp+0x28]
  401879:	ucomisd xmm0,xmm6
  40187d:	movsd  QWORD PTR [rip+0xd07b],xmm0        # 0x40e900
  401885:	jp     0x40188d
  401887:	je     0x4019db
  40188d:	lea    r8,[rip+0x793a]        # 0x4091ce
  401894:	mov    rdx,rbx
  401897:	xor    ecx,ecx
  401899:	call   0x401c40
  40189e:	mov    QWORD PTR [rip+0xd03b],rax        # 0x40e8e0
  4018a5:	call   0x401a60
  4018aa:	call   0x401ac0
  4018af:	lea    r8,[rip+0x7938]        # 0x4091ee
  4018b6:	xor    ecx,ecx
  4018b8:	mov    rdx,rbx
  4018bb:	call   0x401c40
  4018c0:	test   eax,eax
  4018c2:	mov    DWORD PTR [rip+0xd278],eax        # 0x40eb40
  4018c8:	jle    0x401984
  4018ce:	lea    r8,[rip+0x791e]        # 0x4091f3
  4018d5:	xor    ecx,ecx
  4018d7:	mov    rdx,rbx
  4018da:	call   0x401c40
  4018df:	mov    QWORD PTR [rsp+0x28],rax
  4018e4:	movsd  xmm0,QWORD PTR [rsp+0x28]
  4018ea:	ucomisd xmm0,xmm6
  4018ee:	movsd  QWORD PTR [rip+0xcfa2],xmm0        # 0x40e898
  4018f6:	jp     0x40177f
  4018fc:	jne    0x40177f
  401902:	lea    rdx,[rip+0x78f1]        # 0x4091fa
  401909:	mov    ecx,0x1
  40190e:	call   0x401ca0
  401913:	jmp    0x40177f
  401918:	nop    DWORD PTR [rax+rax*1+0x0]
  401920:	lea    r8,[rip+0x7896]        # 0x4091bd
  401927:	mov    rdx,rbx
  40192a:	xor    ecx,ecx
  40192c:	pxor   xmm6,xmm6
  401930:	call   0x401c40
  401935:	lea    r8,[rip+0x7888]        # 0x4091c4
  40193c:	mov    rdx,rbx
  40193f:	xor    ecx,ecx
  401941:	mov    QWORD PTR [rip+0xcfa8],rax        # 0x40e8f0
  401948:	call   0x401c40
  40194d:	mov    QWORD PTR [rip+0xcf94],rax        # 0x40e8e8
  401954:	call   0x401b60
  401959:	call   0x401a60
  40195e:	jmp    0x4018af
  401963:	lea    rdx,[rip+0x77f6]        # 0x409160
  40196a:	mov    ecx,0x1
  40196f:	call   0x401ca0
  401974:	mov    rcx,QWORD PTR [rdi]
  401977:	call   0x401c48
  40197c:	mov    rbx,rax
  40197f:	jmp    0x401697
  401984:	lea    r8,[rip+0x7880]        # 0x40920b
  40198b:	xor    ecx,ecx
  40198d:	mov    rdx,rbx
  401990:	call   0x401c40
  401995:	mov    QWORD PTR [rsp+0x28],rax
  40199a:	movsd  xmm1,QWORD PTR [rip+0x78be]        # 0x409260
  4019a2:	movsd  xmm5,QWORD PTR [rsp+0x28]
  4019a8:	andpd  xmm5,xmm1
  4019ac:	movapd xmm1,xmm5
  4019b0:	ucomisd xmm1,xmm6
  4019b4:	jp     0x4019b8
  4019b6:	je     0x4019f1
  4019b8:	movsd  xmm0,QWORD PTR [rip+0xcf40]        # 0x40e900
  4019c0:	divsd  xmm0,xmm1
  4019c4:	addsd  xmm0,QWORD PTR [rip+0x78a4]        # 0x409270
  4019cc:	cvttsd2si eax,xmm0
  4019d0:	mov    DWORD PTR [rip+0xd16e],eax        # 0x40eb44
  4019d6:	jmp    0x40177f
  4019db:	lea    rdx,[rip+0x77ef]        # 0x4091d1
  4019e2:	mov    ecx,0x1
  4019e7:	call   0x401ca0
  4019ec:	jmp    0x4018af
  4019f1:	lea    r8,[rip+0x781a]        # 0x409212
  4019f8:	xor    ecx,ecx
  4019fa:	mov    rdx,rbx
  4019fd:	call   0x401c40
  401a02:	test   eax,eax
  401a04:	mov    DWORD PTR [rip+0xd13a],eax        # 0x40eb44
  401a0a:	jg     0x40177f
  401a10:	lea    rdx,[rip+0x7800]        # 0x409217
  401a17:	mov    ecx,0x1
  401a1c:	call   0x401ca0
  401a21:	jmp    0x40177f
  401a26:	movapd xmm0,xmm1
  401a2a:	call   0x403300
  401a2f:	jmp    0x401751
  401a34:	nop
  401a35:	nop
  401a36:	nop
  401a37:	nop
  401a38:	nop
  401a39:	nop
  401a3a:	nop
  401a3b:	nop
  401a3c:	nop
  401a3d:	nop
  401a3e:	nop
  401a3f:	nop
  401a40:	mov    rax,QWORD PTR [rip+0x7ec9]        # 0x409910
  401a47:	mov    rcx,QWORD PTR [rip+0x7ed2]        # 0x409920
  401a4e:	movsd  xmm2,QWORD PTR [rax+0x8]
  401a53:	movsd  xmm1,QWORD PTR [rax]
  401a57:	jmp    0x401c98
  401a5c:	nop    DWORD PTR [rax+0x0]
  401a60:	sub    rsp,0x38
  401a64:	mov    rax,QWORD PTR [rip+0x7ea5]        # 0x409910
  401a6b:	movsd  xmm0,QWORD PTR [rip+0x780d]        # 0x409280
  401a73:	mov    rdx,QWORD PTR [rip+0x7ea6]        # 0x409920
  401a7a:	mov    rcx,QWORD PTR [rip+0x7eaf]        # 0x409930
  401a81:	movsd  xmm3,QWORD PTR [rax+0x10]
  401a86:	movsd  xmm2,QWORD PTR [rax+0x18]
  401a8b:	mov    DWORD PTR [rsp+0x28],0x0
  401a93:	movsd  xmm1,QWORD PTR [rax+0x20]
  401a98:	divsd  xmm3,xmm0
  401a9c:	divsd  xmm1,xmm0
  401aa0:	divsd  xmm2,xmm0
  401aa4:	movsd  QWORD PTR [rsp+0x20],xmm1
  401aaa:	call   0x401c88
  401aaf:	nop
  401ab0:	add    rsp,0x38
  401ab4:	ret    
  401ab5:	nop
  401ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ac0:	push   rbx
  401ac1:	sub    rsp,0x50
  401ac5:	mov    rbx,QWORD PTR [rip+0x7e44]        # 0x409910
  401acc:	mov    rcx,QWORD PTR [rip+0x7e5d]        # 0x409930
  401ad3:	lea    rax,[rsp+0x48]
  401ad8:	lea    r9,[rsp+0x40]
  401add:	lea    r8,[rsp+0x38]
  401ae2:	movsd  xmm1,QWORD PTR [rbx+0x40]
  401ae7:	mov    QWORD PTR [rsp+0x20],rax
  401aec:	call   0x401c80
  401af1:	pxor   xmm1,xmm1
  401af5:	movsd  xmm3,QWORD PTR [rsp+0x48]
  401afb:	movsd  xmm2,QWORD PTR [rip+0x7785]        # 0x409288
  401b03:	movapd xmm0,xmm1
  401b07:	movsd  xmm1,QWORD PTR [rip+0x7781]        # 0x409290
  401b0f:	cmplesd xmm0,xmm3
  401b14:	andpd  xmm2,xmm0
  401b18:	andnpd xmm0,xmm1
  401b1c:	movsd  xmm1,QWORD PTR [rip+0x775c]        # 0x409280
  401b24:	orpd   xmm2,xmm0
  401b28:	movsd  xmm0,QWORD PTR [rsp+0x38]
  401b2e:	mulsd  xmm0,xmm1
  401b32:	addsd  xmm2,xmm3
  401b36:	movsd  QWORD PTR [rbx+0x30],xmm0
  401b3b:	movsd  xmm0,QWORD PTR [rsp+0x40]
  401b41:	mulsd  xmm0,xmm1
  401b45:	mulsd  xmm1,xmm2
  401b49:	movsd  QWORD PTR [rbx+0x28],xmm0
  401b4e:	movsd  QWORD PTR [rbx+0x38],xmm1
  401b53:	add    rsp,0x50
  401b57:	pop    rbx
  401b58:	ret    
  401b59:	nop    DWORD PTR [rax+0x0]
  401b60:	push   rbx
  401b61:	sub    rsp,0x70
  401b65:	movaps XMMWORD PTR [rsp+0x60],xmm6
  401b6a:	lea    rax,[rsp+0x50]
  401b6f:	mov    rbx,QWORD PTR [rip+0x7d9a]        # 0x409910
  401b76:	movsd  xmm6,QWORD PTR [rip+0x7702]        # 0x409280
  401b7e:	mov    rcx,QWORD PTR [rip+0x7d9b]        # 0x409920
  401b85:	movsd  xmm3,QWORD PTR [rbx+0x30]
  401b8a:	movsd  xmm2,QWORD PTR [rbx+0x10]
  401b8f:	movsd  xmm1,QWORD PTR [rbx+0x18]
  401b94:	mov    QWORD PTR [rsp+0x38],rax
  401b99:	lea    rax,[rsp+0x48]
  401b9e:	divsd  xmm3,xmm6
  401ba2:	mov    QWORD PTR [rsp+0x30],rax
  401ba7:	lea    rax,[rsp+0x58]
  401bac:	mov    QWORD PTR [rsp+0x28],rax
  401bb1:	movsd  xmm0,QWORD PTR [rbx+0x28]
  401bb6:	divsd  xmm2,xmm6
  401bba:	divsd  xmm0,xmm6
  401bbe:	divsd  xmm1,xmm6
  401bc2:	movsd  QWORD PTR [rsp+0x20],xmm0
  401bc8:	call   0x401c90
  401bcd:	pxor   xmm1,xmm1
  401bd1:	movsd  xmm3,QWORD PTR [rsp+0x50]
  401bd7:	movsd  xmm2,QWORD PTR [rip+0x76a9]        # 0x409288
  401bdf:	cmplesd xmm1,xmm3
  401be4:	movapd xmm0,xmm1
  401be8:	andpd  xmm2,xmm1
  401bec:	movsd  xmm1,QWORD PTR [rip+0x769c]        # 0x409290
  401bf4:	andnpd xmm0,xmm1
  401bf8:	orpd   xmm2,xmm0
  401bfc:	movsd  xmm0,QWORD PTR [rsp+0x48]
  401c02:	addsd  xmm2,xmm3
  401c06:	mulsd  xmm0,xmm6
  401c0a:	mulsd  xmm6,xmm2
  401c0e:	movsd  QWORD PTR [rbx+0x20],xmm0
  401c13:	movsd  xmm0,QWORD PTR [rsp+0x58]
  401c19:	movsd  QWORD PTR [rbx+0x40],xmm0
  401c1e:	movsd  QWORD PTR [rbx+0x38],xmm6
  401c23:	movaps xmm6,XMMWORD PTR [rsp+0x60]
  401c28:	add    rsp,0x70
  401c2c:	pop    rbx
  401c2d:	ret    
  401c2e:	nop
  401c2f:	nop
  401c30:	jmp    QWORD PTR [rip+0xd74a]        # 0x40f380
  401c36:	nop
  401c37:	nop
  401c38:	jmp    QWORD PTR [rip+0xd73a]        # 0x40f378
  401c3e:	nop
  401c3f:	nop
  401c40:	jmp    QWORD PTR [rip+0xd72a]        # 0x40f370
  401c46:	nop
  401c47:	nop
  401c48:	jmp    QWORD PTR [rip+0xd71a]        # 0x40f368
  401c4e:	nop
  401c4f:	nop
  401c50:	jmp    QWORD PTR [rip+0xd70a]        # 0x40f360
  401c56:	nop
  401c57:	nop
  401c58:	jmp    QWORD PTR [rip+0xd6fa]        # 0x40f358
  401c5e:	nop
  401c5f:	nop
  401c60:	jmp    QWORD PTR [rip+0xd6ea]        # 0x40f350
  401c66:	nop
  401c67:	nop
  401c68:	jmp    QWORD PTR [rip+0xd6da]        # 0x40f348
  401c6e:	nop
  401c6f:	nop
  401c70:	jmp    QWORD PTR [rip+0xd6ca]        # 0x40f340
  401c76:	nop
  401c77:	nop
  401c78:	jmp    QWORD PTR [rip+0xd6ba]        # 0x40f338
  401c7e:	nop
  401c7f:	nop
  401c80:	jmp    QWORD PTR [rip+0xd6aa]        # 0x40f330
  401c86:	nop
  401c87:	nop
  401c88:	jmp    QWORD PTR [rip+0xd69a]        # 0x40f328
  401c8e:	nop
  401c8f:	nop
  401c90:	jmp    QWORD PTR [rip+0xd68a]        # 0x40f320
  401c96:	nop
  401c97:	nop
  401c98:	jmp    QWORD PTR [rip+0xd67a]        # 0x40f318
  401c9e:	nop
  401c9f:	nop
  401ca0:	jmp    QWORD PTR [rip+0xd662]        # 0x40f308
  401ca6:	nop
  401ca7:	nop
  401ca8:	jmp    QWORD PTR [rip+0xd652]        # 0x40f300
  401cae:	nop
  401caf:	nop
  401cb0:	jmp    QWORD PTR [rip+0xd642]        # 0x40f2f8
  401cb6:	nop
  401cb7:	nop
  401cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cc0:	push   rbx
  401cc1:	sub    rsp,0x30
  401cc5:	mov    rbx,rcx
  401cc8:	mov    rcx,QWORD PTR [rip+0xce79]        # 0x40eb48
  401ccf:	call   0x402270
  401cd4:	cmp    rax,0xffffffffffffffff
  401cd8:	mov    QWORD PTR [rsp+0x20],rax
  401cdd:	je     0x401d55
  401cdf:	mov    ecx,0x8
  401ce4:	call   0x4073c0
  401ce9:	mov    rcx,QWORD PTR [rip+0xce58]        # 0x40eb48
  401cf0:	call   0x402270
  401cf5:	mov    rcx,QWORD PTR [rip+0xce54]        # 0x40eb50
  401cfc:	mov    QWORD PTR [rsp+0x20],rax
  401d01:	call   0x402270
  401d06:	lea    rdx,[rsp+0x20]
  401d0b:	lea    r8,[rsp+0x28]
  401d10:	mov    rcx,rbx
  401d13:	mov    QWORD PTR [rsp+0x28],rax
  401d18:	call   0x407410
  401d1d:	mov    rcx,QWORD PTR [rsp+0x20]
  401d22:	mov    rbx,rax
  401d25:	call   0x402280
  401d2a:	mov    rcx,QWORD PTR [rsp+0x28]
  401d2f:	mov    QWORD PTR [rip+0xce12],rax        # 0x40eb48
  401d36:	call   0x402280
  401d3b:	mov    ecx,0x8
  401d40:	mov    QWORD PTR [rip+0xce09],rax        # 0x40eb50
  401d47:	call   0x4073b0
  401d4c:	mov    rax,rbx
  401d4f:	add    rsp,0x30
  401d53:	pop    rbx
  401d54:	ret    
  401d55:	mov    rax,QWORD PTR [rip+0x7ca4]        # 0x409a00
  401d5c:	mov    rcx,rbx
  401d5f:	call   QWORD PTR [rax]
  401d61:	add    rsp,0x30
  401d65:	pop    rbx
  401d66:	ret    
  401d67:	nop    WORD PTR [rax+rax*1+0x0]
  401d70:	sub    rsp,0x28
  401d74:	call   0x401cc0
  401d79:	test   rax,rax
  401d7c:	sete   al
  401d7f:	movzx  eax,al
  401d82:	neg    eax
  401d84:	add    rsp,0x28
  401d88:	ret    
  401d89:	nop
  401d8a:	nop
  401d8b:	nop
  401d8c:	nop
  401d8d:	nop
  401d8e:	nop
  401d8f:	nop
  401d90:	sub    rsp,0x28
  401d94:	mov    rax,QWORD PTR [rip+0x6285]        # 0x408020
  401d9b:	mov    rax,QWORD PTR [rax]
  401d9e:	test   rax,rax
  401da1:	je     0x401dc0
  401da3:	call   rax
  401da5:	mov    rax,QWORD PTR [rip+0x6274]        # 0x408020
  401dac:	lea    rdx,[rax+0x8]
  401db0:	mov    rax,QWORD PTR [rax+0x8]
  401db4:	mov    QWORD PTR [rip+0x6265],rdx        # 0x408020
  401dbb:	test   rax,rax
  401dbe:	jne    0x401da3
  401dc0:	add    rsp,0x28
  401dc4:	ret    
  401dc5:	nop
  401dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dd0:	push   rsi
  401dd1:	push   rbx
  401dd2:	sub    rsp,0x28
  401dd6:	mov    rsi,QWORD PTR [rip+0x7b83]        # 0x409960
  401ddd:	mov    rax,QWORD PTR [rsi]
  401de0:	cmp    eax,0xffffffff
  401de3:	mov    ebx,eax
  401de5:	je     0x401e10
  401de7:	test   ebx,ebx
  401de9:	je     0x401dfa
  401deb:	nop    DWORD PTR [rax+rax*1+0x0]
  401df0:	mov    eax,ebx
  401df2:	call   QWORD PTR [rsi+rax*8]
  401df5:	sub    ebx,0x1
  401df8:	jne    0x401df0
  401dfa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401d90
  401e01:	add    rsp,0x28
  401e05:	pop    rbx
  401e06:	pop    rsi
  401e07:	jmp    0x401d70
  401e0c:	nop    DWORD PTR [rax+0x0]
  401e10:	xor    ebx,ebx
  401e12:	jmp    0x401e16
  401e14:	mov    ebx,eax
  401e16:	lea    edx,[rbx+0x1]
  401e19:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401e1e:	mov    rax,rdx
  401e21:	jne    0x401e14
  401e23:	jmp    0x401de7
  401e25:	nop
  401e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e30:	mov    eax,DWORD PTR [rip+0xb44a]        # 0x40d280
  401e36:	test   eax,eax
  401e38:	je     0x401e40
  401e3a:	repz ret 
  401e3c:	nop    DWORD PTR [rax+0x0]
  401e40:	mov    DWORD PTR [rip+0xb436],0x1        # 0x40d280
  401e4a:	jmp    0x401dd0
  401e4c:	nop
  401e4d:	nop
  401e4e:	nop
  401e4f:	nop
  401e50:	mov    rax,QWORD PTR [rip+0xd621]        # 0x40f478
  401e57:	rex.W jmp rax
  401e5a:	nop
  401e5b:	nop
  401e5c:	nop
  401e5d:	nop
  401e5e:	nop
  401e5f:	nop
  401e60:	xor    eax,eax
  401e62:	ret    
  401e63:	nop
  401e64:	nop
  401e65:	nop
  401e66:	nop
  401e67:	nop
  401e68:	nop
  401e69:	nop
  401e6a:	nop
  401e6b:	nop
  401e6c:	nop
  401e6d:	nop
  401e6e:	nop
  401e6f:	nop
  401e70:	push   r12
  401e72:	push   rbp
  401e73:	push   rdi
  401e74:	push   rsi
  401e75:	push   rbx
  401e76:	sub    rsp,0x40
  401e7a:	mov    rbx,QWORD PTR [rip+0x622f]        # 0x4080b0
  401e81:	movabs rax,0x2b992ddfa232
  401e8b:	mov    QWORD PTR [rsp+0x20],0x0
  401e94:	cmp    rbx,rax
  401e97:	je     0x401eb0
  401e99:	not    rbx
  401e9c:	mov    QWORD PTR [rip+0x621d],rbx        # 0x4080c0
  401ea3:	add    rsp,0x40
  401ea7:	pop    rbx
  401ea8:	pop    rsi
  401ea9:	pop    rdi
  401eaa:	pop    rbp
  401eab:	pop    r12
  401ead:	ret    
  401eae:	xchg   ax,ax
  401eb0:	lea    rcx,[rsp+0x20]
  401eb5:	call   QWORD PTR [rip+0xd50d]        # 0x40f3c8
  401ebb:	mov    r12,QWORD PTR [rsp+0x20]
  401ec0:	call   QWORD PTR [rip+0xd4e2]        # 0x40f3a8
  401ec6:	mov    ebp,eax
  401ec8:	call   QWORD PTR [rip+0xd4e2]        # 0x40f3b0
  401ece:	mov    edi,eax
  401ed0:	call   QWORD PTR [rip+0xd4fa]        # 0x40f3d0
  401ed6:	lea    rcx,[rsp+0x30]
  401edb:	mov    esi,eax
  401edd:	call   QWORD PTR [rip+0xd505]        # 0x40f3e8
  401ee3:	xor    r12,QWORD PTR [rsp+0x30]
  401ee8:	mov    edx,edi
  401eea:	movabs rax,0xffffffffffff
  401ef4:	xor    rbp,r12
  401ef7:	mov    rdi,rbp
  401efa:	xor    rdi,rdx
  401efd:	mov    edx,esi
  401eff:	xor    rdi,rdx
  401f02:	mov    rsi,rdi
  401f05:	and    rsi,rax
  401f08:	cmp    rsi,rbx
  401f0b:	je     0x401f30
  401f0d:	mov    rax,rsi
  401f10:	not    rax
  401f13:	mov    QWORD PTR [rip+0x6196],rsi        # 0x4080b0
  401f1a:	mov    QWORD PTR [rip+0x619f],rax        # 0x4080c0
  401f21:	add    rsp,0x40
  401f25:	pop    rbx
  401f26:	pop    rsi
  401f27:	pop    rdi
  401f28:	pop    rbp
  401f29:	pop    r12
  401f2b:	ret    
  401f2c:	nop    DWORD PTR [rax+0x0]
  401f30:	movabs rax,0xffffd466d2205dcc
  401f3a:	movabs rsi,0x2b992ddfa233
  401f44:	jmp    0x401f13
  401f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f50:	push   rbp
  401f51:	push   rsi
  401f52:	push   rbx
  401f53:	mov    rbp,rsp
  401f56:	sub    rsp,0x70
  401f5a:	mov    rsi,rcx
  401f5d:	lea    rcx,[rip+0xb35c]        # 0x40d2c0
  401f64:	call   QWORD PTR [rip+0xd48e]        # 0x40f3f8
  401f6a:	mov    rbx,QWORD PTR [rip+0xb447]        # 0x40d3b8
  401f71:	xor    r8d,r8d
  401f74:	lea    rdx,[rbp-0x28]
  401f78:	mov    rcx,rbx
  401f7b:	call   QWORD PTR [rip+0xd47f]        # 0x40f400
  401f81:	test   rax,rax
  401f84:	mov    r9,rax
  401f87:	je     0x402030
  401f8d:	lea    rax,[rbp-0x20]
  401f91:	mov    QWORD PTR [rsp+0x38],0x0
  401f9a:	mov    r8,rbx
  401f9d:	mov    rdx,QWORD PTR [rbp-0x28]
  401fa1:	xor    ecx,ecx
  401fa3:	mov    QWORD PTR [rsp+0x30],rax
  401fa8:	lea    rax,[rbp-0x18]
  401fac:	mov    QWORD PTR [rsp+0x28],rax
  401fb1:	lea    rax,[rip+0xb308]        # 0x40d2c0
  401fb8:	mov    QWORD PTR [rsp+0x20],rax
  401fbd:	call   QWORD PTR [rip+0xd445]        # 0x40f408
  401fc3:	mov    rax,QWORD PTR [rip+0xb3ee]        # 0x40d3b8
  401fca:	xor    ecx,ecx
  401fcc:	mov    QWORD PTR [rip+0xb36d],rsi        # 0x40d340
  401fd3:	mov    DWORD PTR [rip+0xb7e3],0xc0000409        # 0x40d7c0
  401fdd:	mov    DWORD PTR [rip+0xb7dd],0x1        # 0x40d7c4
  401fe7:	mov    QWORD PTR [rip+0xb7e2],rax        # 0x40d7d0
  401fee:	mov    rax,QWORD PTR [rip+0x60bb]        # 0x4080b0
  401ff5:	mov    QWORD PTR [rbp-0x10],rax
  401ff9:	mov    rax,QWORD PTR [rip+0x60c0]        # 0x4080c0
  402000:	mov    QWORD PTR [rbp-0x8],rax
  402004:	call   QWORD PTR [rip+0xd406]        # 0x40f410
  40200a:	lea    rcx,[rip+0x728f]        # 0x4092a0
  402011:	call   QWORD PTR [rip+0xd419]        # 0x40f430
  402017:	call   QWORD PTR [rip+0xd383]        # 0x40f3a0
  40201d:	mov    edx,0xc0000409
  402022:	mov    rcx,rax
  402025:	call   QWORD PTR [rip+0xd3f5]        # 0x40f420
  40202b:	call   0x4073a8
  402030:	mov    rax,QWORD PTR [rbp+0x18]
  402034:	mov    QWORD PTR [rip+0xb37d],rax        # 0x40d3b8
  40203b:	lea    rax,[rbp+0x8]
  40203f:	mov    QWORD PTR [rip+0xb312],rax        # 0x40d358
  402046:	jmp    0x401fc3
  40204b:	nop
  40204c:	nop
  40204d:	nop
  40204e:	nop
  40204f:	nop
  402050:	sub    rsp,0x28
  402054:	test   edx,edx
  402056:	je     0x402070
  402058:	cmp    edx,0x3
  40205b:	je     0x402070
  40205d:	mov    eax,0x1
  402062:	add    rsp,0x28
  402066:	ret    
  402067:	nop    WORD PTR [rax+rax*1+0x0]
  402070:	call   0x402d60
  402075:	mov    eax,0x1
  40207a:	add    rsp,0x28
  40207e:	ret    
  40207f:	nop
  402080:	push   rsi
  402081:	push   rbx
  402082:	sub    rsp,0x28
  402086:	mov    rax,QWORD PTR [rip+0x78b3]        # 0x409940
  40208d:	cmp    DWORD PTR [rax],0x2
  402090:	je     0x402098
  402092:	mov    DWORD PTR [rax],0x2
  402098:	cmp    edx,0x2
  40209b:	je     0x4020b0
  40209d:	cmp    edx,0x1
  4020a0:	je     0x4020e2
  4020a2:	mov    eax,0x1
  4020a7:	add    rsp,0x28
  4020ab:	pop    rbx
  4020ac:	pop    rsi
  4020ad:	ret    
  4020ae:	xchg   ax,ax
  4020b0:	lea    rbx,[rip+0xdfa9]        # 0x410060
  4020b7:	lea    rsi,[rip+0xdfa2]        # 0x410060
  4020be:	cmp    rbx,rsi
  4020c1:	je     0x4020a2
  4020c3:	mov    rax,QWORD PTR [rbx]
  4020c6:	test   rax,rax
  4020c9:	je     0x4020cd
  4020cb:	call   rax
  4020cd:	add    rbx,0x8
  4020d1:	cmp    rbx,rsi
  4020d4:	jne    0x4020c3
  4020d6:	mov    eax,0x1
  4020db:	add    rsp,0x28
  4020df:	pop    rbx
  4020e0:	pop    rsi
  4020e1:	ret    
  4020e2:	call   0x402d60
  4020e7:	jmp    0x4020a2
  4020e9:	nop    DWORD PTR [rax+0x0]
  4020f0:	xor    eax,eax
  4020f2:	ret    
  4020f3:	nop
  4020f4:	nop
  4020f5:	nop
  4020f6:	nop
  4020f7:	nop
  4020f8:	nop
  4020f9:	nop
  4020fa:	nop
  4020fb:	nop
  4020fc:	nop
  4020fd:	nop
  4020fe:	nop
  4020ff:	nop
  402100:	sub    rsp,0x58
  402104:	mov    rax,QWORD PTR [rip+0xb795]        # 0x40d8a0
  40210b:	test   rax,rax
  40210e:	je     0x40213c
  402110:	movsd  xmm0,QWORD PTR [rsp+0x80]
  402119:	mov    DWORD PTR [rsp+0x20],ecx
  40211d:	lea    rcx,[rsp+0x20]
  402122:	mov    QWORD PTR [rsp+0x28],rdx
  402127:	movsd  QWORD PTR [rsp+0x30],xmm2
  40212d:	movsd  QWORD PTR [rsp+0x38],xmm3
  402133:	movsd  QWORD PTR [rsp+0x40],xmm0
  402139:	call   rax
  40213b:	nop
  40213c:	add    rsp,0x58
  402140:	ret    
  402141:	nop    DWORD PTR [rax+rax*1+0x0]
  402146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402150:	mov    QWORD PTR [rip+0xb749],rcx        # 0x40d8a0
  402157:	jmp    0x4073e8
  40215c:	nop    DWORD PTR [rax+0x0]
  402160:	push   rsi
  402161:	push   rbx
  402162:	sub    rsp,0x78
  402166:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40216b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402170:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402176:	cmp    DWORD PTR [rcx],0x6
  402179:	ja     0x402250
  40217f:	mov    edx,DWORD PTR [rcx]
  402181:	lea    rax,[rip+0x725c]        # 0x4093e4
  402188:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40218c:	add    rax,rdx
  40218f:	jmp    rax
  402191:	lea    rbx,[rip+0x7128]        # 0x4092c0
  402198:	nop    DWORD PTR [rax+rax*1+0x0]
  4021a0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4021a6:	mov    rsi,QWORD PTR [rcx+0x8]
  4021aa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4021af:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4021b4:	call   0x407400
  4021b9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4021c0:	lea    rcx,[rax+0x60]
  4021c4:	lea    rdx,[rip+0x71ed]        # 0x4093b8
  4021cb:	movsd  QWORD PTR [rsp+0x28],xmm7
  4021d1:	mov    r9,rsi
  4021d4:	mov    r8,rbx
  4021d7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4021dd:	call   0x407368
  4021e2:	nop
  4021e3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4021e8:	xor    eax,eax
  4021ea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4021ef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4021f5:	add    rsp,0x78
  4021f9:	pop    rbx
  4021fa:	pop    rsi
  4021fb:	ret    
  4021fc:	nop    DWORD PTR [rax+0x0]
  402200:	lea    rbx,[rip+0x70d8]        # 0x4092df
  402207:	jmp    0x4021a0
  402209:	nop    DWORD PTR [rax+0x0]
  402210:	lea    rbx,[rip+0x70e9]        # 0x409300
  402217:	jmp    0x4021a0
  402219:	nop    DWORD PTR [rax+0x0]
  402220:	lea    rbx,[rip+0x7149]        # 0x409370
  402227:	jmp    0x4021a0
  40222c:	nop    DWORD PTR [rax+0x0]
  402230:	lea    rbx,[rip+0x7111]        # 0x409348
  402237:	jmp    0x4021a0
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	lea    rbx,[rip+0x70d9]        # 0x409320
  402247:	jmp    0x4021a0
  40224c:	nop    DWORD PTR [rax+0x0]
  402250:	lea    rbx,[rip+0x714f]        # 0x4093a6
  402257:	jmp    0x4021a0
  40225c:	nop
  40225d:	nop
  40225e:	nop
  40225f:	nop
  402260:	fninit 
  402262:	ret    
  402263:	nop
  402264:	nop
  402265:	nop
  402266:	nop
  402267:	nop
  402268:	nop
  402269:	nop
  40226a:	nop
  40226b:	nop
  40226c:	nop
  40226d:	nop
  40226e:	nop
  40226f:	nop
  402270:	mov    rax,rcx
  402273:	ret    
  402274:	xchg   ax,ax
  402276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402280:	mov    rax,rcx
  402283:	ret    
  402284:	nop
  402285:	nop
  402286:	nop
  402287:	nop
  402288:	nop
  402289:	nop
  40228a:	nop
  40228b:	nop
  40228c:	nop
  40228d:	nop
  40228e:	nop
  40228f:	nop
  402290:	push   rsi
  402291:	push   rbx
  402292:	sub    rsp,0x38
  402296:	lea    rax,[rsp+0x58]
  40229b:	mov    rbx,rcx
  40229e:	mov    QWORD PTR [rsp+0x58],rdx
  4022a3:	mov    QWORD PTR [rsp+0x60],r8
  4022a8:	mov    QWORD PTR [rsp+0x68],r9
  4022ad:	mov    QWORD PTR [rsp+0x28],rax
  4022b2:	call   0x407400
  4022b7:	lea    rcx,[rip+0x7142]        # 0x409400
  4022be:	lea    r9,[rax+0x60]
  4022c2:	mov    r8d,0x1b
  4022c8:	mov    edx,0x1
  4022cd:	call   0x407350
  4022d2:	mov    rsi,QWORD PTR [rsp+0x28]
  4022d7:	call   0x407400
  4022dc:	lea    rcx,[rax+0x60]
  4022e0:	mov    rdx,rbx
  4022e3:	mov    r8,rsi
  4022e6:	call   0x4072f0
  4022eb:	call   0x4073a8
  4022f0:	nop
  4022f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4022f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402300:	push   r13
  402302:	push   r12
  402304:	push   rbp
  402305:	push   rdi
  402306:	push   rsi
  402307:	push   rbx
  402308:	sub    rsp,0x58
  40230c:	movsxd rbp,DWORD PTR [rip+0xb5b1]        # 0x40d8c4
  402313:	mov    rbx,rcx
  402316:	mov    rsi,rdx
  402319:	mov    rdi,r8
  40231c:	test   ebp,ebp
  40231e:	jle    0x40241a
  402324:	mov    rax,QWORD PTR [rip+0xb59d]        # 0x40d8c8
  40232b:	xor    r9d,r9d
  40232e:	add    rax,0x8
  402332:	mov    r10,QWORD PTR [rax]
  402335:	cmp    rbx,r10
  402338:	jb     0x40234e
  40233a:	mov    rdx,QWORD PTR [rax+0x8]
  40233e:	mov    r11d,DWORD PTR [rdx+0x8]
  402342:	add    r10,r11
  402345:	cmp    rbx,r10
  402348:	jb     0x402400
  40234e:	add    r9d,0x1
  402352:	add    rax,0x18
  402356:	cmp    r9d,ebp
  402359:	jne    0x402332
  40235b:	mov    rcx,rbx
  40235e:	call   0x402f70
  402363:	test   rax,rax
  402366:	mov    r12,rax
  402369:	je     0x402452
  40236f:	lea    rbp,[rbp+rbp*2+0x0]
  402374:	shl    rbp,0x3
  402378:	mov    r13,rbp
  40237b:	add    r13,QWORD PTR [rip+0xb546]        # 0x40d8c8
  402382:	mov    QWORD PTR [r13+0x10],rax
  402386:	mov    DWORD PTR [r13+0x0],0x0
  40238e:	call   0x403090
  402393:	mov    edx,DWORD PTR [r12+0xc]
  402398:	mov    r8d,0x30
  40239e:	add    rax,rdx
  4023a1:	lea    rdx,[rsp+0x20]
  4023a6:	mov    QWORD PTR [r13+0x8],rax
  4023aa:	mov    rax,QWORD PTR [rip+0xb517]        # 0x40d8c8
  4023b1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  4023b6:	call   QWORD PTR [rip+0xd084]        # 0x40f440
  4023bc:	test   rax,rax
  4023bf:	je     0x402435
  4023c1:	mov    eax,DWORD PTR [rsp+0x44]
  4023c5:	lea    edx,[rax-0x4]
  4023c8:	and    edx,0xfffffffb
  4023cb:	je     0x4023f9
  4023cd:	sub    eax,0x40
  4023d0:	and    eax,0xffffffbf
  4023d3:	je     0x4023f9
  4023d5:	mov    r9,rbp
  4023d8:	add    r9,QWORD PTR [rip+0xb4e9]        # 0x40d8c8
  4023df:	mov    r8d,0x40
  4023e5:	mov    rdx,QWORD PTR [rsp+0x38]
  4023ea:	mov    rcx,QWORD PTR [rsp+0x20]
  4023ef:	call   QWORD PTR [rip+0xd043]        # 0x40f438
  4023f5:	test   eax,eax
  4023f7:	je     0x402421
  4023f9:	add    DWORD PTR [rip+0xb4c4],0x1        # 0x40d8c4
  402400:	mov    r8,rdi
  402403:	mov    rdx,rsi
  402406:	mov    rcx,rbx
  402409:	add    rsp,0x58
  40240d:	pop    rbx
  40240e:	pop    rsi
  40240f:	pop    rdi
  402410:	pop    rbp
  402411:	pop    r12
  402413:	pop    r13
  402415:	jmp    0x407338
  40241a:	xor    ebp,ebp
  40241c:	jmp    0x40235b
  402421:	call   QWORD PTR [rip+0xcf91]        # 0x40f3b8
  402427:	lea    rcx,[rip+0x704a]        # 0x409478
  40242e:	mov    edx,eax
  402430:	call   0x402290
  402435:	mov    rax,QWORD PTR [rip+0xb48c]        # 0x40d8c8
  40243c:	mov    edx,DWORD PTR [r12+0x8]
  402441:	lea    rcx,[rip+0x6ff8]        # 0x409440
  402448:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40244d:	call   0x402290
  402452:	lea    rcx,[rip+0x6fc7]        # 0x409420
  402459:	mov    rdx,rbx
  40245c:	call   0x402290
  402461:	nop
  402462:	nop    DWORD PTR [rax+0x0]
  402466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402470:	push   rbp
  402471:	push   r14
  402473:	push   r13
  402475:	push   r12
  402477:	push   rdi
  402478:	push   rsi
  402479:	push   rbx
  40247a:	mov    rbp,rsp
  40247d:	sub    rsp,0x60
  402481:	mov    ebx,DWORD PTR [rip+0xb439]        # 0x40d8c0
  402487:	test   ebx,ebx
  402489:	je     0x4024a0
  40248b:	mov    rsp,rbp
  40248e:	pop    rbx
  40248f:	pop    rsi
  402490:	pop    rdi
  402491:	pop    r12
  402493:	pop    r13
  402495:	pop    r14
  402497:	pop    rbp
  402498:	ret    
  402499:	nop    DWORD PTR [rax+0x0]
  4024a0:	mov    DWORD PTR [rip+0xb416],0x1        # 0x40d8c0
  4024aa:	call   0x402fc0
  4024af:	cdqe   
  4024b1:	lea    rax,[rax+rax*2]
  4024b5:	lea    rax,[rax*8+0x1e]
  4024bd:	and    rax,0xfffffffffffffff0
  4024c1:	call   0x4031e0
  4024c6:	mov    rsi,QWORD PTR [rip+0x74a3]        # 0x409970
  4024cd:	mov    rbx,QWORD PTR [rip+0x74ac]        # 0x409980
  4024d4:	sub    rsp,rax
  4024d7:	mov    DWORD PTR [rip+0xb3e3],0x0        # 0x40d8c4
  4024e1:	lea    rax,[rsp+0x20]
  4024e6:	mov    QWORD PTR [rip+0xb3db],rax        # 0x40d8c8
  4024ed:	mov    rax,rsi
  4024f0:	sub    rax,rbx
  4024f3:	cmp    rax,0x7
  4024f7:	jle    0x40248b
  4024f9:	cmp    rax,0xb
  4024fd:	jle    0x402525
  4024ff:	mov    r11d,DWORD PTR [rbx]
  402502:	test   r11d,r11d
  402505:	jne    0x402650
  40250b:	mov    r10d,DWORD PTR [rbx+0x4]
  40250f:	test   r10d,r10d
  402512:	jne    0x402650
  402518:	mov    r9d,DWORD PTR [rbx+0x8]
  40251c:	test   r9d,r9d
  40251f:	jne    0x40253c
  402521:	add    rbx,0xc
  402525:	mov    r8d,DWORD PTR [rbx]
  402528:	test   r8d,r8d
  40252b:	jne    0x402650
  402531:	mov    ecx,DWORD PTR [rbx+0x4]
  402534:	test   ecx,ecx
  402536:	jne    0x402650
  40253c:	mov    edx,DWORD PTR [rbx+0x8]
  40253f:	cmp    edx,0x1
  402542:	jne    0x40275c
  402548:	add    rbx,0xc
  40254c:	cmp    rbx,rsi
  40254f:	jae    0x40248b
  402555:	mov    r12,QWORD PTR [rip+0x7464]        # 0x4099c0
  40255c:	lea    r13,[rbp-0x30]
  402560:	movabs r14,0xffffffff00000000
  40256a:	mov    ecx,DWORD PTR [rbx+0x4]
  40256d:	mov    eax,DWORD PTR [rbx]
  40256f:	movzx  edx,BYTE PTR [rbx+0x8]
  402573:	add    rax,r12
  402576:	add    rcx,r12
  402579:	cmp    edx,0x10
  40257c:	mov    r8,QWORD PTR [rax]
  40257f:	je     0x4026c6
  402585:	jbe    0x40268d
  40258b:	cmp    edx,0x20
  40258e:	je     0x40270f
  402594:	cmp    edx,0x40
  402597:	jne    0x4026fb
  40259d:	sub    r8,rax
  4025a0:	mov    rdx,r13
  4025a3:	mov    rdi,r13
  4025a6:	mov    rax,r8
  4025a9:	add    rax,QWORD PTR [rcx]
  4025ac:	mov    r8d,0x8
  4025b2:	mov    QWORD PTR [rbp-0x30],rax
  4025b6:	call   0x402300
  4025bb:	add    rbx,0xc
  4025bf:	cmp    rbx,rsi
  4025c2:	jb     0x40256a
  4025c4:	mov    eax,DWORD PTR [rip+0xb2fa]        # 0x40d8c4
  4025ca:	xor    ebx,ebx
  4025cc:	xor    esi,esi
  4025ce:	test   eax,eax
  4025d0:	jle    0x40248b
  4025d6:	mov    r14,QWORD PTR [rip+0xce63]        # 0x40f440
  4025dd:	lea    r13,[rbp-0x34]
  4025e1:	mov    r12,QWORD PTR [rip+0xce50]        # 0x40f438
  4025e8:	jmp    0x402603
  4025ea:	nop    WORD PTR [rax+rax*1+0x0]
  4025f0:	add    esi,0x1
  4025f3:	add    rbx,0x18
  4025f7:	cmp    esi,DWORD PTR [rip+0xb2c7]        # 0x40d8c4
  4025fd:	jge    0x40248b
  402603:	mov    rax,rbx
  402606:	add    rax,QWORD PTR [rip+0xb2bb]        # 0x40d8c8
  40260d:	mov    edx,DWORD PTR [rax]
  40260f:	test   edx,edx
  402611:	je     0x4025f0
  402613:	mov    rcx,QWORD PTR [rax+0x8]
  402617:	mov    r8d,0x30
  40261d:	mov    rdx,rdi
  402620:	call   r14
  402623:	test   rax,rax
  402626:	je     0x40273e
  40262c:	mov    rax,QWORD PTR [rip+0xb295]        # 0x40d8c8
  402633:	mov    r9,r13
  402636:	mov    rdx,QWORD PTR [rbp-0x18]
  40263a:	mov    rcx,QWORD PTR [rbp-0x30]
  40263e:	mov    r8d,DWORD PTR [rax+rbx*1]
  402642:	call   r12
  402645:	jmp    0x4025f0
  402647:	nop    WORD PTR [rax+rax*1+0x0]
  402650:	cmp    rbx,rsi
  402653:	jae    0x40248b
  402659:	mov    r12,QWORD PTR [rip+0x7360]        # 0x4099c0
  402660:	lea    rdi,[rbp-0x30]
  402664:	mov    ecx,DWORD PTR [rbx+0x4]
  402667:	mov    eax,DWORD PTR [rbx]
  402669:	mov    r8d,0x4
  40266f:	mov    rdx,rdi
  402672:	add    rbx,0x8
  402676:	add    rcx,r12
  402679:	add    eax,DWORD PTR [rcx]
  40267b:	mov    DWORD PTR [rbp-0x30],eax
  40267e:	call   0x402300
  402683:	cmp    rbx,rsi
  402686:	jb     0x402664
  402688:	jmp    0x4025c4
  40268d:	cmp    edx,0x8
  402690:	jne    0x4026fb
  402692:	movzx  edx,BYTE PTR [rcx]
  402695:	mov    rdi,r13
  402698:	mov    r10,rdx
  40269b:	or     r10,0xffffffffffffff00
  4026a2:	test   dl,dl
  4026a4:	cmovs  rdx,r10
  4026a8:	sub    rdx,rax
  4026ab:	lea    rax,[r8+rdx*1]
  4026af:	mov    r8d,0x1
  4026b5:	mov    rdx,r13
  4026b8:	mov    QWORD PTR [rbp-0x30],rax
  4026bc:	call   0x402300
  4026c1:	jmp    0x4025bb
  4026c6:	movzx  edx,WORD PTR [rcx]
  4026c9:	mov    rdi,r13
  4026cc:	mov    r10,rdx
  4026cf:	or     r10,0xffffffffffff0000
  4026d6:	test   dx,dx
  4026d9:	cmovs  rdx,r10
  4026dd:	sub    rdx,rax
  4026e0:	lea    rax,[r8+rdx*1]
  4026e4:	mov    r8d,0x2
  4026ea:	mov    rdx,r13
  4026ed:	mov    QWORD PTR [rbp-0x30],rax
  4026f1:	call   0x402300
  4026f6:	jmp    0x4025bb
  4026fb:	lea    rcx,[rip+0x6dd6]        # 0x4094d8
  402702:	mov    QWORD PTR [rbp-0x30],0x0
  40270a:	call   0x402290
  40270f:	mov    edx,DWORD PTR [rcx]
  402711:	mov    rdi,r13
  402714:	mov    r10,rdx
  402717:	or     r10,r14
  40271a:	test   edx,edx
  40271c:	cmovs  rdx,r10
  402720:	sub    rdx,rax
  402723:	lea    rax,[r8+rdx*1]
  402727:	mov    r8d,0x4
  40272d:	mov    rdx,r13
  402730:	mov    QWORD PTR [rbp-0x30],rax
  402734:	call   0x402300
  402739:	jmp    0x4025bb
  40273e:	add    rbx,QWORD PTR [rip+0xb183]        # 0x40d8c8
  402745:	lea    rcx,[rip+0x6cf4]        # 0x409440
  40274c:	mov    rax,QWORD PTR [rbx+0x10]
  402750:	mov    r8,QWORD PTR [rbx+0x8]
  402754:	mov    edx,DWORD PTR [rax+0x8]
  402757:	call   0x402290
  40275c:	lea    rcx,[rip+0x6d3d]        # 0x4094a0
  402763:	call   0x402290
  402768:	nop
  402769:	nop
  40276a:	nop
  40276b:	nop
  40276c:	nop
  40276d:	nop
  40276e:	nop
  40276f:	nop
  402770:	sub    rsp,0x28
  402774:	mov    eax,DWORD PTR [rcx]
  402776:	cmp    eax,0xc0000091
  40277b:	ja     0x4027e0
  40277d:	cmp    eax,0xc000008d
  402782:	jae    0x4027ff
  402784:	cmp    eax,0xc0000008
  402789:	je     0x4028a0
  40278f:	ja     0x402870
  402795:	cmp    eax,0x80000002
  40279a:	je     0x4028a0
  4027a0:	cmp    eax,0xc0000005
  4027a5:	jne    0x40287e
  4027ab:	xor    edx,edx
  4027ad:	mov    ecx,0xb
  4027b2:	call   0x407320
  4027b7:	cmp    rax,0x1
  4027bb:	je     0x402900
  4027c1:	test   rax,rax
  4027c4:	je     0x4028e0
  4027ca:	mov    ecx,0xb
  4027cf:	call   rax
  4027d1:	xor    eax,eax
  4027d3:	add    rsp,0x28
  4027d7:	ret    
  4027d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4027e0:	cmp    eax,0xc0000094
  4027e5:	je     0x4028b0
  4027eb:	ja     0x402830
  4027ed:	cmp    eax,0xc0000092
  4027f2:	je     0x4028a0
  4027f8:	cmp    eax,0xc0000093
  4027fd:	jne    0x40287e
  4027ff:	xor    edx,edx
  402801:	mov    ecx,0x8
  402806:	call   0x407320
  40280b:	cmp    rax,0x1
  40280f:	mov    rdx,rax
  402812:	je     0x402888
  402814:	test   rdx,rdx
  402817:	mov    eax,0x1
  40281c:	je     0x4027d3
  40281e:	mov    ecx,0x8
  402823:	call   rdx
  402825:	xor    eax,eax
  402827:	add    rsp,0x28
  40282b:	ret    
  40282c:	nop    DWORD PTR [rax+0x0]
  402830:	cmp    eax,0xc0000095
  402835:	je     0x4028a0
  402837:	cmp    eax,0xc0000096
  40283c:	jne    0x40287e
  40283e:	xor    edx,edx
  402840:	mov    ecx,0x4
  402845:	call   0x407320
  40284a:	cmp    rax,0x1
  40284e:	je     0x4028ea
  402854:	test   rax,rax
  402857:	je     0x4028e0
  40285d:	mov    ecx,0x4
  402862:	call   rax
  402864:	xor    eax,eax
  402866:	jmp    0x4027d3
  40286b:	nop    DWORD PTR [rax+rax*1+0x0]
  402870:	cmp    eax,0xc000001d
  402875:	je     0x40283e
  402877:	cmp    eax,0xc000008c
  40287c:	je     0x4028a0
  40287e:	mov    eax,0x1
  402883:	add    rsp,0x28
  402887:	ret    
  402888:	mov    edx,0x1
  40288d:	mov    ecx,0x8
  402892:	call   0x407320
  402897:	call   0x402260
  40289c:	nop    DWORD PTR [rax+0x0]
  4028a0:	xor    eax,eax
  4028a2:	add    rsp,0x28
  4028a6:	ret    
  4028a7:	nop    WORD PTR [rax+rax*1+0x0]
  4028b0:	xor    edx,edx
  4028b2:	mov    ecx,0x8
  4028b7:	call   0x407320
  4028bc:	cmp    rax,0x1
  4028c0:	mov    rdx,rax
  4028c3:	jne    0x402814
  4028c9:	mov    edx,0x1
  4028ce:	mov    ecx,0x8
  4028d3:	call   0x407320
  4028d8:	xor    eax,eax
  4028da:	jmp    0x4027d3
  4028df:	nop
  4028e0:	mov    eax,0x4
  4028e5:	add    rsp,0x28
  4028e9:	ret    
  4028ea:	mov    edx,0x1
  4028ef:	mov    ecx,0x4
  4028f4:	call   0x407320
  4028f9:	xor    eax,eax
  4028fb:	jmp    0x4027d3
  402900:	mov    edx,0x1
  402905:	mov    ecx,0xb
  40290a:	call   0x407320
  40290f:	xor    eax,eax
  402911:	jmp    0x4027d3
  402916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402920:	push   r12
  402922:	push   rbp
  402923:	push   rdi
  402924:	push   rsi
  402925:	push   rbx
  402926:	sub    rsp,0x20
  40292a:	call   0x403090
  40292f:	mov    rbp,rax
  402932:	mov    eax,DWORD PTR [rip+0xafd0]        # 0x40d908
  402938:	test   eax,eax
  40293a:	jne    0x402961
  40293c:	test   rbp,rbp
  40293f:	je     0x402961
  402941:	lea    rcx,[rip+0x6bc8]        # 0x409510
  402948:	mov    DWORD PTR [rip+0xafb6],0x1        # 0x40d908
  402952:	call   0x402ed0
  402957:	test   rax,rax
  40295a:	je     0x402970
  40295c:	mov    eax,0x1
  402961:	add    rsp,0x20
  402965:	pop    rbx
  402966:	pop    rsi
  402967:	pop    rdi
  402968:	pop    rbp
  402969:	pop    r12
  40296b:	ret    
  40296c:	nop    DWORD PTR [rax+0x0]
  402970:	lea    rbx,[rip+0xb0c9]        # 0x40da40
  402977:	mov    ecx,0x30
  40297c:	lea    rdx,[rip+0xafbd]        # 0x40d940
  402983:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402770
  40298a:	xor    esi,esi
  40298c:	mov    rdi,rbx
  40298f:	rep stos QWORD PTR es:[rdi],rax
  402992:	mov    rdi,rdx
  402995:	sub    r12,rbp
  402998:	mov    cl,0x20
  40299a:	rep stos QWORD PTR es:[rdi],rax
  40299d:	mov    rdi,rdx
  4029a0:	jmp    0x4029d0
  4029a2:	mov    BYTE PTR [rdi],0x9
  4029a5:	mov    DWORD PTR [rdi+0x4],r12d
  4029a9:	add    rsi,0x1
  4029ad:	mov    edx,DWORD PTR [rax+0xc]
  4029b0:	add    rbx,0xc
  4029b4:	mov    DWORD PTR [rbx-0xc],edx
  4029b7:	add    edx,DWORD PTR [rax+0x8]
  4029ba:	mov    rax,rdi
  4029bd:	sub    rax,rbp
  4029c0:	add    rdi,0x8
  4029c4:	mov    DWORD PTR [rbx-0x4],eax
  4029c7:	mov    DWORD PTR [rbx-0x8],edx
  4029ca:	cmp    rsi,0x20
  4029ce:	je     0x402a05
  4029d0:	mov    rcx,rsi
  4029d3:	call   0x403000
  4029d8:	test   rax,rax
  4029db:	jne    0x4029a2
  4029dd:	test   rsi,rsi
  4029e0:	je     0x40295c
  4029e6:	mov    edx,esi
  4029e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029f0:	mov    r8,rbp
  4029f3:	lea    rcx,[rip+0xb046]        # 0x40da40
  4029fa:	call   QWORD PTR [rip+0xc9f0]        # 0x40f3f0
  402a00:	jmp    0x40295c
  402a05:	mov    edx,0x20
  402a0a:	jmp    0x4029f0
  402a0c:	nop    DWORD PTR [rax+0x0]
  402a10:	push   rbx
  402a11:	sub    rsp,0x20
  402a15:	mov    rdx,QWORD PTR [rcx]
  402a18:	mov    eax,DWORD PTR [rdx]
  402a1a:	mov    r8d,eax
  402a1d:	and    r8d,0x20ffffff
  402a24:	cmp    r8d,0x20474343
  402a2b:	je     0x402b30
  402a31:	cmp    eax,0xc0000091
  402a36:	mov    rbx,rcx
  402a39:	ja     0x402ac0
  402a3f:	cmp    eax,0xc000008d
  402a44:	jae    0x402ad7
  402a4a:	cmp    eax,0xc0000008
  402a4f:	je     0x402a83
  402a51:	ja     0x402a90
  402a53:	cmp    eax,0x80000002
  402a58:	je     0x402a83
  402a5a:	cmp    eax,0xc0000005
  402a5f:	jne    0x402aa2
  402a61:	xor    edx,edx
  402a63:	mov    ecx,0xb
  402a68:	call   0x407320
  402a6d:	cmp    rax,0x1
  402a71:	je     0x402ba0
  402a77:	test   rax,rax
  402a7a:	je     0x402aa2
  402a7c:	mov    ecx,0xb
  402a81:	call   rax
  402a83:	mov    eax,0xffffffff
  402a88:	add    rsp,0x20
  402a8c:	pop    rbx
  402a8d:	ret    
  402a8e:	xchg   ax,ax
  402a90:	cmp    eax,0xc000001d
  402a95:	je     0x402b56
  402a9b:	cmp    eax,0xc000008c
  402aa0:	je     0x402a83
  402aa2:	mov    rax,QWORD PTR [rip+0xae57]        # 0x40d900
  402aa9:	test   rax,rax
  402aac:	je     0x402a88
  402aae:	mov    rcx,rbx
  402ab1:	add    rsp,0x20
  402ab5:	pop    rbx
  402ab6:	rex.W jmp rax
  402ab9:	nop    DWORD PTR [rax+0x0]
  402ac0:	cmp    eax,0xc0000094
  402ac5:	je     0x402b02
  402ac7:	ja     0x402b40
  402ac9:	cmp    eax,0xc0000092
  402ace:	je     0x402a83
  402ad0:	cmp    eax,0xc0000093
  402ad5:	jne    0x402aa2
  402ad7:	xor    edx,edx
  402ad9:	mov    ecx,0x8
  402ade:	call   0x407320
  402ae3:	cmp    rax,0x1
  402ae7:	jne    0x402b14
  402ae9:	mov    edx,0x1
  402aee:	mov    ecx,0x8
  402af3:	call   0x407320
  402af8:	call   0x402260
  402afd:	jmp    0x402a83
  402b02:	xor    edx,edx
  402b04:	mov    ecx,0x8
  402b09:	call   0x407320
  402b0e:	cmp    rax,0x1
  402b12:	je     0x402b82
  402b14:	test   rax,rax
  402b17:	je     0x402aa2
  402b19:	mov    ecx,0x8
  402b1e:	call   rax
  402b20:	mov    eax,0xffffffff
  402b25:	jmp    0x402a88
  402b2a:	nop    WORD PTR [rax+rax*1+0x0]
  402b30:	test   BYTE PTR [rdx+0x4],0x1
  402b34:	jne    0x402a31
  402b3a:	jmp    0x402a83
  402b3f:	nop
  402b40:	cmp    eax,0xc0000095
  402b45:	je     0x402a83
  402b4b:	cmp    eax,0xc0000096
  402b50:	jne    0x402aa2
  402b56:	xor    edx,edx
  402b58:	mov    ecx,0x4
  402b5d:	call   0x407320
  402b62:	cmp    rax,0x1
  402b66:	je     0x402bb4
  402b68:	test   rax,rax
  402b6b:	je     0x402aa2
  402b71:	mov    ecx,0x4
  402b76:	call   rax
  402b78:	mov    eax,0xffffffff
  402b7d:	jmp    0x402a88
  402b82:	mov    edx,0x1
  402b87:	mov    ecx,0x8
  402b8c:	call   0x407320
  402b91:	jmp    0x402a83
  402b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ba0:	mov    edx,0x1
  402ba5:	mov    ecx,0xb
  402baa:	call   0x407320
  402baf:	jmp    0x402a83
  402bb4:	mov    edx,0x1
  402bb9:	mov    ecx,0x4
  402bbe:	call   0x407320
  402bc3:	jmp    0x402a83
  402bc8:	nop
  402bc9:	nop
  402bca:	nop
  402bcb:	nop
  402bcc:	nop
  402bcd:	nop
  402bce:	nop
  402bcf:	nop
  402bd0:	push   rbp
  402bd1:	push   rdi
  402bd2:	push   rsi
  402bd3:	push   rbx
  402bd4:	sub    rsp,0x28
  402bd8:	lea    rcx,[rip+0xb001]        # 0x40dbe0
  402bdf:	call   QWORD PTR [rip+0xc7b3]        # 0x40f398
  402be5:	mov    rbx,QWORD PTR [rip+0xafd4]        # 0x40dbc0
  402bec:	test   rbx,rbx
  402bef:	je     0x402c24
  402bf1:	mov    rbp,QWORD PTR [rip+0xc830]        # 0x40f428
  402bf8:	mov    rdi,QWORD PTR [rip+0xc7b9]        # 0x40f3b8
  402bff:	nop
  402c00:	mov    ecx,DWORD PTR [rbx]
  402c02:	call   rbp
  402c04:	mov    rsi,rax
  402c07:	call   rdi
  402c09:	test   eax,eax
  402c0b:	jne    0x402c1b
  402c0d:	test   rsi,rsi
  402c10:	je     0x402c1b
  402c12:	mov    rax,QWORD PTR [rbx+0x8]
  402c16:	mov    rcx,rsi
  402c19:	call   rax
  402c1b:	mov    rbx,QWORD PTR [rbx+0x10]
  402c1f:	test   rbx,rbx
  402c22:	jne    0x402c00
  402c24:	mov    rax,QWORD PTR [rip+0xc7b5]        # 0x40f3e0
  402c2b:	lea    rcx,[rip+0xafae]        # 0x40dbe0
  402c32:	add    rsp,0x28
  402c36:	pop    rbx
  402c37:	pop    rsi
  402c38:	pop    rdi
  402c39:	pop    rbp
  402c3a:	rex.W jmp rax
  402c3d:	nop    DWORD PTR [rax]
  402c40:	push   rdi
  402c41:	push   rsi
  402c42:	push   rbx
  402c43:	sub    rsp,0x20
  402c47:	mov    eax,DWORD PTR [rip+0xaf7b]        # 0x40dbc8
  402c4d:	test   eax,eax
  402c4f:	jne    0x402c60
  402c51:	add    rsp,0x20
  402c55:	pop    rbx
  402c56:	pop    rsi
  402c57:	pop    rdi
  402c58:	ret    
  402c59:	nop    DWORD PTR [rax+0x0]
  402c60:	mov    rsi,rdx
  402c63:	mov    edi,ecx
  402c65:	mov    edx,0x18
  402c6a:	mov    ecx,0x1
  402c6f:	call   0x407398
  402c74:	test   rax,rax
  402c77:	mov    rbx,rax
  402c7a:	je     0x402cb8
  402c7c:	mov    DWORD PTR [rax],edi
  402c7e:	mov    QWORD PTR [rax+0x8],rsi
  402c82:	lea    rcx,[rip+0xaf57]        # 0x40dbe0
  402c89:	call   QWORD PTR [rip+0xc709]        # 0x40f398
  402c8f:	mov    rax,QWORD PTR [rip+0xaf2a]        # 0x40dbc0
  402c96:	lea    rcx,[rip+0xaf43]        # 0x40dbe0
  402c9d:	mov    QWORD PTR [rip+0xaf1c],rbx        # 0x40dbc0
  402ca4:	mov    QWORD PTR [rbx+0x10],rax
  402ca8:	call   QWORD PTR [rip+0xc732]        # 0x40f3e0
  402cae:	xor    eax,eax
  402cb0:	add    rsp,0x20
  402cb4:	pop    rbx
  402cb5:	pop    rsi
  402cb6:	pop    rdi
  402cb7:	ret    
  402cb8:	mov    eax,0xffffffff
  402cbd:	jmp    0x402c51
  402cbf:	nop
  402cc0:	push   rbx
  402cc1:	sub    rsp,0x20
  402cc5:	mov    eax,DWORD PTR [rip+0xaefd]        # 0x40dbc8
  402ccb:	test   eax,eax
  402ccd:	jne    0x402ce0
  402ccf:	xor    eax,eax
  402cd1:	add    rsp,0x20
  402cd5:	pop    rbx
  402cd6:	ret    
  402cd7:	nop    WORD PTR [rax+rax*1+0x0]
  402ce0:	mov    ebx,ecx
  402ce2:	lea    rcx,[rip+0xaef7]        # 0x40dbe0
  402ce9:	call   QWORD PTR [rip+0xc6a9]        # 0x40f398
  402cef:	mov    rdx,QWORD PTR [rip+0xaeca]        # 0x40dbc0
  402cf6:	test   rdx,rdx
  402cf9:	je     0x402d17
  402cfb:	mov    eax,DWORD PTR [rdx]
  402cfd:	cmp    eax,ebx
  402cff:	jne    0x402d0e
  402d01:	jmp    0x402d4f
  402d03:	mov    r8d,DWORD PTR [rax]
  402d06:	cmp    r8d,ebx
  402d09:	je     0x402d30
  402d0b:	mov    rdx,rax
  402d0e:	mov    rax,QWORD PTR [rdx+0x10]
  402d12:	test   rax,rax
  402d15:	jne    0x402d03
  402d17:	lea    rcx,[rip+0xaec2]        # 0x40dbe0
  402d1e:	call   QWORD PTR [rip+0xc6bc]        # 0x40f3e0
  402d24:	xor    eax,eax
  402d26:	add    rsp,0x20
  402d2a:	pop    rbx
  402d2b:	ret    
  402d2c:	nop    DWORD PTR [rax+0x0]
  402d30:	mov    rcx,rax
  402d33:	mov    rax,QWORD PTR [rax+0x10]
  402d37:	mov    QWORD PTR [rdx+0x10],rax
  402d3b:	call   0x407358
  402d40:	lea    rcx,[rip+0xae99]        # 0x40dbe0
  402d47:	call   QWORD PTR [rip+0xc693]        # 0x40f3e0
  402d4d:	jmp    0x402d24
  402d4f:	mov    rax,QWORD PTR [rdx+0x10]
  402d53:	mov    rcx,rdx
  402d56:	mov    QWORD PTR [rip+0xae63],rax        # 0x40dbc0
  402d5d:	jmp    0x402d3b
  402d5f:	nop
  402d60:	push   rbx
  402d61:	sub    rsp,0x20
  402d65:	cmp    edx,0x1
  402d68:	je     0x402e00
  402d6e:	jb     0x402da0
  402d70:	cmp    edx,0x2
  402d73:	je     0x402d90
  402d75:	cmp    edx,0x3
  402d78:	jne    0x402d95
  402d7a:	mov    eax,DWORD PTR [rip+0xae48]        # 0x40dbc8
  402d80:	test   eax,eax
  402d82:	je     0x402d95
  402d84:	call   0x402bd0
  402d89:	jmp    0x402d95
  402d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d90:	call   0x402260
  402d95:	mov    eax,0x1
  402d9a:	add    rsp,0x20
  402d9e:	pop    rbx
  402d9f:	ret    
  402da0:	mov    eax,DWORD PTR [rip+0xae22]        # 0x40dbc8
  402da6:	test   eax,eax
  402da8:	jne    0x402e30
  402dae:	mov    eax,DWORD PTR [rip+0xae14]        # 0x40dbc8
  402db4:	cmp    eax,0x1
  402db7:	jne    0x402d95
  402db9:	mov    rcx,QWORD PTR [rip+0xae00]        # 0x40dbc0
  402dc0:	test   rcx,rcx
  402dc3:	je     0x402dd6
  402dc5:	mov    rbx,QWORD PTR [rcx+0x10]
  402dc9:	call   0x407358
  402dce:	test   rbx,rbx
  402dd1:	mov    rcx,rbx
  402dd4:	jne    0x402dc5
  402dd6:	lea    rcx,[rip+0xae03]        # 0x40dbe0
  402ddd:	mov    QWORD PTR [rip+0xadd8],0x0        # 0x40dbc0
  402de8:	mov    DWORD PTR [rip+0xadd6],0x0        # 0x40dbc8
  402df2:	call   QWORD PTR [rip+0xc598]        # 0x40f390
  402df8:	jmp    0x402d95
  402dfa:	nop    WORD PTR [rax+rax*1+0x0]
  402e00:	mov    eax,DWORD PTR [rip+0xadc2]        # 0x40dbc8
  402e06:	test   eax,eax
  402e08:	je     0x402e20
  402e0a:	mov    eax,0x1
  402e0f:	mov    DWORD PTR [rip+0xadaf],0x1        # 0x40dbc8
  402e19:	add    rsp,0x20
  402e1d:	pop    rbx
  402e1e:	ret    
  402e1f:	nop
  402e20:	lea    rcx,[rip+0xadb9]        # 0x40dbe0
  402e27:	call   QWORD PTR [rip+0xc5ab]        # 0x40f3d8
  402e2d:	jmp    0x402e0a
  402e2f:	nop
  402e30:	call   0x402bd0
  402e35:	jmp    0x402dae
  402e3a:	nop
  402e3b:	nop
  402e3c:	nop
  402e3d:	nop
  402e3e:	nop
  402e3f:	nop
  402e40:	movsxd rax,DWORD PTR [rcx+0x3c]
  402e44:	add    rcx,rax
  402e47:	xor    eax,eax
  402e49:	cmp    DWORD PTR [rcx],0x4550
  402e4f:	je     0x402e53
  402e51:	repz ret 
  402e53:	xor    eax,eax
  402e55:	cmp    WORD PTR [rcx+0x18],0x20b
  402e5b:	sete   al
  402e5e:	ret    
  402e5f:	nop
  402e60:	cmp    WORD PTR [rcx],0x5a4d
  402e65:	je     0x402e70
  402e67:	xor    eax,eax
  402e69:	ret    
  402e6a:	nop    WORD PTR [rax+rax*1+0x0]
  402e70:	jmp    0x402e40
  402e72:	nop    DWORD PTR [rax+0x0]
  402e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e80:	movsxd rax,DWORD PTR [rcx+0x3c]
  402e84:	add    rcx,rax
  402e87:	movzx  eax,WORD PTR [rcx+0x14]
  402e8b:	lea    rax,[rcx+rax*1+0x18]
  402e90:	movzx  ecx,WORD PTR [rcx+0x6]
  402e94:	test   ecx,ecx
  402e96:	je     0x402ec1
  402e98:	sub    ecx,0x1
  402e9b:	lea    rcx,[rcx+rcx*4]
  402e9f:	lea    r9,[rax+rcx*8+0x28]
  402ea4:	mov    r8d,DWORD PTR [rax+0xc]
  402ea8:	cmp    r8,rdx
  402eab:	mov    rcx,r8
  402eae:	ja     0x402eb8
  402eb0:	add    ecx,DWORD PTR [rax+0x8]
  402eb3:	cmp    rdx,rcx
  402eb6:	jb     0x402ec3
  402eb8:	add    rax,0x28
  402ebc:	cmp    rax,r9
  402ebf:	jne    0x402ea4
  402ec1:	xor    eax,eax
  402ec3:	repz ret 
  402ec5:	nop
  402ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ed0:	push   rdi
  402ed1:	push   rsi
  402ed2:	push   rbx
  402ed3:	sub    rsp,0x20
  402ed7:	mov    rsi,rcx
  402eda:	call   0x407308
  402edf:	cmp    rax,0x8
  402ee3:	ja     0x402f00
  402ee5:	mov    rbx,QWORD PTR [rip+0x6ad4]        # 0x4099c0
  402eec:	xor    edi,edi
  402eee:	cmp    WORD PTR [rbx],0x5a4d
  402ef3:	je     0x402f10
  402ef5:	mov    rax,rdi
  402ef8:	add    rsp,0x20
  402efc:	pop    rbx
  402efd:	pop    rsi
  402efe:	pop    rdi
  402eff:	ret    
  402f00:	xor    edi,edi
  402f02:	mov    rax,rdi
  402f05:	add    rsp,0x20
  402f09:	pop    rbx
  402f0a:	pop    rsi
  402f0b:	pop    rdi
  402f0c:	ret    
  402f0d:	nop    DWORD PTR [rax]
  402f10:	mov    rcx,rbx
  402f13:	call   0x402e40
  402f18:	test   eax,eax
  402f1a:	je     0x402ef5
  402f1c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402f20:	add    rdx,rbx
  402f23:	movzx  eax,WORD PTR [rdx+0x14]
  402f27:	lea    rbx,[rdx+rax*1+0x18]
  402f2c:	movzx  eax,WORD PTR [rdx+0x6]
  402f30:	test   eax,eax
  402f32:	je     0x402ef5
  402f34:	sub    eax,0x1
  402f37:	lea    rax,[rax+rax*4]
  402f3b:	lea    rdi,[rbx+rax*8+0x28]
  402f40:	jmp    0x402f4b
  402f42:	add    rbx,0x28
  402f46:	cmp    rbx,rdi
  402f49:	je     0x402f00
  402f4b:	mov    r8d,0x8
  402f51:	mov    rdx,rsi
  402f54:	mov    rcx,rbx
  402f57:	call   0x407300
  402f5c:	test   eax,eax
  402f5e:	jne    0x402f42
  402f60:	mov    rdi,rbx
  402f63:	mov    rax,rdi
  402f66:	add    rsp,0x20
  402f6a:	pop    rbx
  402f6b:	pop    rsi
  402f6c:	pop    rdi
  402f6d:	ret    
  402f6e:	xchg   ax,ax
  402f70:	push   rsi
  402f71:	push   rbx
  402f72:	sub    rsp,0x28
  402f76:	mov    rbx,QWORD PTR [rip+0x6a43]        # 0x4099c0
  402f7d:	cmp    WORD PTR [rbx],0x5a4d
  402f82:	je     0x402f90
  402f84:	xor    eax,eax
  402f86:	add    rsp,0x28
  402f8a:	pop    rbx
  402f8b:	pop    rsi
  402f8c:	ret    
  402f8d:	nop    DWORD PTR [rax]
  402f90:	mov    rsi,rcx
  402f93:	mov    rcx,rbx
  402f96:	call   0x402e40
  402f9b:	test   eax,eax
  402f9d:	je     0x402f84
  402f9f:	sub    rsi,rbx
  402fa2:	mov    rcx,rbx
  402fa5:	mov    rdx,rsi
  402fa8:	add    rsp,0x28
  402fac:	pop    rbx
  402fad:	pop    rsi
  402fae:	jmp    0x402e80
  402fb3:	nop    DWORD PTR [rax]
  402fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fc0:	push   rbx
  402fc1:	sub    rsp,0x20
  402fc5:	mov    rbx,QWORD PTR [rip+0x69f4]        # 0x4099c0
  402fcc:	xor    eax,eax
  402fce:	cmp    WORD PTR [rbx],0x5a4d
  402fd3:	je     0x402fe0
  402fd5:	add    rsp,0x20
  402fd9:	pop    rbx
  402fda:	ret    
  402fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  402fe0:	mov    rcx,rbx
  402fe3:	call   0x402e40
  402fe8:	test   eax,eax
  402fea:	je     0x402fd5
  402fec:	movsxd rax,DWORD PTR [rbx+0x3c]
  402ff0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402ff5:	add    rsp,0x20
  402ff9:	pop    rbx
  402ffa:	ret    
  402ffb:	nop    DWORD PTR [rax+rax*1+0x0]
  403000:	push   rdi
  403001:	push   rsi
  403002:	push   rbx
  403003:	sub    rsp,0x20
  403007:	mov    rsi,QWORD PTR [rip+0x69b2]        # 0x4099c0
  40300e:	xor    edi,edi
  403010:	mov    rbx,rcx
  403013:	cmp    WORD PTR [rsi],0x5a4d
  403018:	je     0x403025
  40301a:	mov    rax,rdi
  40301d:	add    rsp,0x20
  403021:	pop    rbx
  403022:	pop    rsi
  403023:	pop    rdi
  403024:	ret    
  403025:	mov    rcx,rsi
  403028:	call   0x402e40
  40302d:	test   eax,eax
  40302f:	je     0x40301a
  403031:	movsxd rax,DWORD PTR [rsi+0x3c]
  403035:	add    rsi,rax
  403038:	movzx  eax,WORD PTR [rsi+0x14]
  40303c:	lea    rdx,[rsi+rax*1+0x18]
  403041:	movzx  eax,WORD PTR [rsi+0x6]
  403045:	test   eax,eax
  403047:	je     0x40301a
  403049:	sub    eax,0x1
  40304c:	lea    rax,[rax+rax*4]
  403050:	lea    rax,[rdx+rax*8+0x28]
  403055:	test   BYTE PTR [rdx+0x27],0x20
  403059:	je     0x403064
  40305b:	test   rbx,rbx
  40305e:	je     0x403080
  403060:	sub    rbx,0x1
  403064:	add    rdx,0x28
  403068:	cmp    rdx,rax
  40306b:	jne    0x403055
  40306d:	xor    edi,edi
  40306f:	mov    rax,rdi
  403072:	add    rsp,0x20
  403076:	pop    rbx
  403077:	pop    rsi
  403078:	pop    rdi
  403079:	ret    
  40307a:	nop    WORD PTR [rax+rax*1+0x0]
  403080:	mov    rdi,rdx
  403083:	mov    rax,rdi
  403086:	add    rsp,0x20
  40308a:	pop    rbx
  40308b:	pop    rsi
  40308c:	pop    rdi
  40308d:	ret    
  40308e:	xchg   ax,ax
  403090:	push   rsi
  403091:	push   rbx
  403092:	sub    rsp,0x28
  403096:	mov    rsi,QWORD PTR [rip+0x6923]        # 0x4099c0
  40309d:	xor    ebx,ebx
  40309f:	cmp    WORD PTR [rsi],0x5a4d
  4030a4:	je     0x4030b0
  4030a6:	mov    rax,rbx
  4030a9:	add    rsp,0x28
  4030ad:	pop    rbx
  4030ae:	pop    rsi
  4030af:	ret    
  4030b0:	mov    rcx,rsi
  4030b3:	call   0x402e40
  4030b8:	test   eax,eax
  4030ba:	cmovne rbx,rsi
  4030be:	mov    rax,rbx
  4030c1:	add    rsp,0x28
  4030c5:	pop    rbx
  4030c6:	pop    rsi
  4030c7:	ret    
  4030c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4030d0:	push   rsi
  4030d1:	push   rbx
  4030d2:	sub    rsp,0x28
  4030d6:	mov    rbx,QWORD PTR [rip+0x68e3]        # 0x4099c0
  4030dd:	xor    eax,eax
  4030df:	cmp    WORD PTR [rbx],0x5a4d
  4030e4:	je     0x4030f0
  4030e6:	add    rsp,0x28
  4030ea:	pop    rbx
  4030eb:	pop    rsi
  4030ec:	ret    
  4030ed:	nop    DWORD PTR [rax]
  4030f0:	mov    rsi,rcx
  4030f3:	mov    rcx,rbx
  4030f6:	call   0x402e40
  4030fb:	test   eax,eax
  4030fd:	je     0x4030e6
  4030ff:	sub    rsi,rbx
  403102:	mov    rcx,rbx
  403105:	mov    rdx,rsi
  403108:	call   0x402e80
  40310d:	test   rax,rax
  403110:	je     0x403121
  403112:	mov    eax,DWORD PTR [rax+0x24]
  403115:	not    eax
  403117:	shr    eax,0x1f
  40311a:	add    rsp,0x28
  40311e:	pop    rbx
  40311f:	pop    rsi
  403120:	ret    
  403121:	xor    eax,eax
  403123:	jmp    0x4030e6
  403125:	nop
  403126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403130:	push   rbp
  403131:	push   rdi
  403132:	push   rsi
  403133:	push   rbx
  403134:	sub    rsp,0x28
  403138:	mov    rdi,QWORD PTR [rip+0x6881]        # 0x4099c0
  40313f:	xor    ebp,ebp
  403141:	mov    esi,ecx
  403143:	cmp    WORD PTR [rdi],0x5a4d
  403148:	je     0x403160
  40314a:	mov    rax,rbp
  40314d:	add    rsp,0x28
  403151:	pop    rbx
  403152:	pop    rsi
  403153:	pop    rdi
  403154:	pop    rbp
  403155:	ret    
  403156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403160:	mov    rcx,rdi
  403163:	call   0x402e40
  403168:	test   eax,eax
  40316a:	je     0x40314a
  40316c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403170:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403177:	test   edx,edx
  403179:	je     0x40314a
  40317b:	mov    ebx,edx
  40317d:	mov    rcx,rdi
  403180:	mov    rdx,rbx
  403183:	call   0x402e80
  403188:	test   rax,rax
  40318b:	je     0x40314a
  40318d:	add    rbx,rdi
  403190:	mov    rdx,rbx
  403193:	jne    0x4031a7
  403195:	jmp    0x40314a
  403197:	nop    WORD PTR [rax+rax*1+0x0]
  4031a0:	sub    esi,0x1
  4031a3:	add    rdx,0x14
  4031a7:	mov    ecx,DWORD PTR [rdx+0x4]
  4031aa:	test   ecx,ecx
  4031ac:	jne    0x4031b5
  4031ae:	mov    eax,DWORD PTR [rdx+0xc]
  4031b1:	test   eax,eax
  4031b3:	je     0x4031d0
  4031b5:	test   esi,esi
  4031b7:	jg     0x4031a0
  4031b9:	mov    ebp,DWORD PTR [rdx+0xc]
  4031bc:	add    rbp,rdi
  4031bf:	mov    rax,rbp
  4031c2:	add    rsp,0x28
  4031c6:	pop    rbx
  4031c7:	pop    rsi
  4031c8:	pop    rdi
  4031c9:	pop    rbp
  4031ca:	ret    
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031d0:	xor    ebp,ebp
  4031d2:	mov    rax,rbp
  4031d5:	add    rsp,0x28
  4031d9:	pop    rbx
  4031da:	pop    rsi
  4031db:	pop    rdi
  4031dc:	pop    rbp
  4031dd:	ret    
  4031de:	nop
  4031df:	nop
  4031e0:	push   rcx
  4031e1:	push   rax
  4031e2:	cmp    rax,0x1000
  4031e8:	lea    rcx,[rsp+0x18]
  4031ed:	jb     0x403208
  4031ef:	sub    rcx,0x1000
  4031f6:	or     QWORD PTR [rcx],0x0
  4031fa:	sub    rax,0x1000
  403200:	cmp    rax,0x1000
  403206:	ja     0x4031ef
  403208:	sub    rcx,rax
  40320b:	or     QWORD PTR [rcx],0x0
  40320f:	pop    rax
  403210:	pop    rcx
  403211:	ret    
  403212:	nop
  403213:	nop
  403214:	nop
  403215:	nop
  403216:	nop
  403217:	nop
  403218:	nop
  403219:	nop
  40321a:	nop
  40321b:	nop
  40321c:	nop
  40321d:	nop
  40321e:	nop
  40321f:	nop
  403220:	push   rbx
  403221:	sub    rsp,0x60
  403225:	lea    r8,[rip+0x4e34]        # 0x408060
  40322c:	lea    rax,[rsp+0x50]
  403231:	lea    r9,[rsp+0x4c]
  403236:	mov    QWORD PTR [rsp+0x20],rax
  40323b:	call   0x403990
  403240:	mov    edx,eax
  403242:	and    edx,0x7
  403245:	cmp    edx,0x6
  403248:	ja     0x403275
  40324a:	lea    rcx,[rip+0x62cf]        # 0x409520
  403251:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  403255:	add    rcx,rdx
  403258:	jmp    rcx
  40325a:	nop    WORD PTR [rax+rax*1+0x0]
  403260:	mov    ebx,DWORD PTR [rsp+0x54]
  403264:	mov    edx,DWORD PTR [rsp+0x50]
  403268:	or     ebx,0x7ff00000
  40326e:	shl    rbx,0x20
  403272:	or     rbx,rdx
  403275:	test   al,0x8
  403277:	je     0x40328e
  403279:	mov    rax,rbx
  40327c:	mov    ebx,ebx
  40327e:	shr    rax,0x20
  403282:	or     eax,0x80000000
  403287:	shl    rax,0x20
  40328b:	or     rbx,rax
  40328e:	mov    QWORD PTR [rsp+0x38],rbx
  403293:	movsd  xmm0,QWORD PTR [rsp+0x38]
  403299:	add    rsp,0x60
  40329d:	pop    rbx
  40329e:	ret    
  40329f:	nop
  4032a0:	movabs rbx,0x7ff8000000000000
  4032aa:	jmp    0x403275
  4032ac:	nop    DWORD PTR [rax+0x0]
  4032b0:	xor    ebx,ebx
  4032b2:	jmp    0x403275
  4032b4:	mov    ebx,DWORD PTR [rsp+0x4c]
  4032b8:	mov    edx,DWORD PTR [rsp+0x54]
  4032bc:	add    ebx,0x433
  4032c2:	and    edx,0xffefffff
  4032c8:	shl    ebx,0x14
  4032cb:	or     ebx,edx
  4032cd:	mov    edx,DWORD PTR [rsp+0x50]
  4032d1:	shl    rbx,0x20
  4032d5:	or     rbx,rdx
  4032d8:	jmp    0x403275
  4032da:	nop    WORD PTR [rax+rax*1+0x0]
  4032e0:	mov    ebx,DWORD PTR [rsp+0x54]
  4032e4:	mov    edx,DWORD PTR [rsp+0x50]
  4032e8:	shl    rbx,0x20
  4032ec:	or     rbx,rdx
  4032ef:	jmp    0x403275
  4032f1:	movabs rbx,0x7ff0000000000000
  4032fb:	jmp    0x403275
  403300:	push   rbx
  403301:	sub    rsp,0x60
  403305:	movaps XMMWORD PTR [rsp+0x50],xmm6
  40330a:	movq   QWORD PTR [rsp+0x48],xmm0
  403310:	movq   rbx,xmm0
  403315:	mov    eax,DWORD PTR [rsp+0x4c]
  403319:	mov    edx,eax
  40331b:	and    eax,0x7ff00000
  403320:	and    edx,0xfffff
  403326:	or     edx,DWORD PTR [rsp+0x48]
  40332a:	mov    ecx,edx
  40332c:	or     ecx,eax
  40332e:	je     0x403380
  403330:	test   eax,eax
  403332:	jne    0x4033a0
  403334:	mov    rax,rbx
  403337:	shr    rax,0x20
  40333b:	test   eax,eax
  40333d:	js     0x4033c2
  403343:	mov    QWORD PTR [rsp+0x38],rbx
  403348:	movsd  xmm0,QWORD PTR [rip+0x6218]        # 0x409568
  403350:	movsd  xmm1,QWORD PTR [rsp+0x38]
  403356:	ucomisd xmm1,xmm0
  40335a:	jp     0x40335e
  40335c:	je     0x403373
  40335e:	mov    QWORD PTR [rsp+0x38],rbx
  403363:	fld    QWORD PTR [rsp+0x38]
  403367:	fsqrt  
  403369:	fstp   QWORD PTR [rsp+0x38]
  40336d:	movsd  xmm0,QWORD PTR [rsp+0x38]
  403373:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  403378:	add    rsp,0x60
  40337c:	pop    rbx
  40337d:	ret    
  40337e:	xchg   ax,ax
  403380:	shr    rbx,0x20
  403384:	pxor   xmm0,xmm0
  403388:	test   ebx,ebx
  40338a:	jns    0x403373
  40338c:	movsd  xmm0,QWORD PTR [rip+0x61c4]        # 0x409558
  403394:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  403399:	add    rsp,0x60
  40339d:	pop    rbx
  40339e:	ret    
  40339f:	nop
  4033a0:	cmp    eax,0x7ff00000
  4033a5:	jne    0x403334
  4033a7:	movq   rax,xmm0
  4033ac:	shr    rax,0x20
  4033b0:	test   edx,edx
  4033b2:	je     0x403410
  4033b4:	test   eax,eax
  4033b6:	js     0x4033c2
  4033b8:	movsd  xmm6,QWORD PTR [rip+0x6190]        # 0x409550
  4033c0:	jmp    0x4033ca
  4033c2:	movsd  xmm6,QWORD PTR [rip+0x617e]        # 0x409548
  4033ca:	call   0x4073d0
  4033cf:	mov    QWORD PTR [rsp+0x38],rbx
  4033d4:	pxor   xmm3,xmm3
  4033d8:	mov    DWORD PTR [rax],0x21
  4033de:	movsd  xmm2,QWORD PTR [rsp+0x38]
  4033e4:	movsd  QWORD PTR [rsp+0x20],xmm6
  4033ea:	lea    rdx,[rip+0x614f]        # 0x409540
  4033f1:	mov    ecx,0x1
  4033f6:	call   0x402100
  4033fb:	movapd xmm0,xmm6
  4033ff:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  403404:	add    rsp,0x60
  403408:	pop    rbx
  403409:	ret    
  40340a:	nop    WORD PTR [rax+rax*1+0x0]
  403410:	test   eax,eax
  403412:	js     0x4033c2
  403414:	movsd  xmm0,QWORD PTR [rip+0x6144]        # 0x409560
  40341c:	jmp    0x403373
  403421:	nop
  403422:	nop
  403423:	nop
  403424:	nop
  403425:	nop
  403426:	nop
  403427:	nop
  403428:	nop
  403429:	nop
  40342a:	nop
  40342b:	nop
  40342c:	nop
  40342d:	nop
  40342e:	nop
  40342f:	nop
  403430:	push   rsi
  403431:	push   rbx
  403432:	sub    rsp,0x28
  403436:	movsxd rax,DWORD PTR [rcx+0x14]
  40343a:	lea    rdx,[rcx+0x18]
  40343e:	mov    rbx,rcx
  403441:	lea    r9,[rdx+rax*4]
  403445:	mov    rcx,rax
  403448:	jmp    0x403460
  40344a:	nop    WORD PTR [rax+rax*1+0x0]
  403450:	add    rdx,0x4
  403454:	mov    DWORD PTR [rdx-0x4],0x0
  40345b:	cmp    r9,rdx
  40345e:	jbe    0x403480
  403460:	mov    r8d,DWORD PTR [rdx]
  403463:	cmp    r8d,0xffffffff
  403467:	je     0x403450
  403469:	add    r8d,0x1
  40346d:	mov    rax,rbx
  403470:	mov    DWORD PTR [rdx],r8d
  403473:	add    rsp,0x28
  403477:	pop    rbx
  403478:	pop    rsi
  403479:	ret    
  40347a:	nop    WORD PTR [rax+rax*1+0x0]
  403480:	cmp    ecx,DWORD PTR [rbx+0xc]
  403483:	jge    0x4034a0
  403485:	add    ecx,0x1
  403488:	mov    DWORD PTR [rbx+0x14],ecx
  40348b:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  403493:	mov    rax,rbx
  403496:	add    rsp,0x28
  40349a:	pop    rbx
  40349b:	pop    rsi
  40349c:	ret    
  40349d:	nop    DWORD PTR [rax]
  4034a0:	mov    eax,DWORD PTR [rbx+0x8]
  4034a3:	lea    ecx,[rax+0x1]
  4034a6:	call   0x4065c0
  4034ab:	mov    rsi,rax
  4034ae:	lea    rcx,[rax+0x10]
  4034b2:	movsxd rax,DWORD PTR [rbx+0x14]
  4034b6:	lea    rdx,[rbx+0x10]
  4034ba:	lea    r8,[rax*4+0x8]
  4034c2:	call   0x407338
  4034c7:	mov    rcx,rbx
  4034ca:	mov    rbx,rsi
  4034cd:	call   0x4066d0
  4034d2:	movsxd rax,DWORD PTR [rsi+0x14]
  4034d6:	mov    rcx,rax
  4034d9:	jmp    0x403485
  4034db:	nop    DWORD PTR [rax+rax*1+0x0]
  4034e0:	push   r15
  4034e2:	push   r14
  4034e4:	push   r13
  4034e6:	push   r12
  4034e8:	push   rbp
  4034e9:	push   rdi
  4034ea:	push   rsi
  4034eb:	push   rbx
  4034ec:	sub    rsp,0x48
  4034f0:	mov    rdi,rdx
  4034f3:	mov    r12,r8
  4034f6:	lea    rdx,[rsp+0x3c]
  4034fb:	lea    r8,[rsp+0x38]
  403500:	movsd  xmm0,QWORD PTR [rcx]
  403504:	mov    r13,r9
  403507:	call   0x406ea0
  40350c:	mov    r10d,DWORD PTR [rsp+0x38]
  403511:	mov    esi,DWORD PTR [rdi]
  403513:	mov    rbx,rax
  403516:	mov    edx,DWORD PTR [rsp+0x3c]
  40351a:	sub    r10d,esi
  40351d:	add    edx,r10d
  403520:	test   r10d,r10d
  403523:	mov    DWORD PTR [rsp+0x38],r10d
  403528:	mov    DWORD PTR [rsp+0x3c],edx
  40352c:	jle    0x4036f0
  403532:	cmp    esi,0x35
  403535:	je     0x403720
  40353b:	cmp    DWORD PTR [rsp+0xb8],0x1
  403543:	je     0x4035f4
  403549:	cmp    DWORD PTR [rsp+0xb8],0x2
  403551:	je     0x403580
  403553:	mov    eax,r10d
  403556:	sub    eax,0x1
  403559:	jne    0x4037f0
  40355f:	mov    ecx,DWORD PTR [rsp+0xb0]
  403566:	xor    r15d,r15d
  403569:	test   ecx,ecx
  40356b:	je     0x403677
  403571:	test   BYTE PTR [rbx+0x18],0x2
  403575:	je     0x40373e
  40357b:	nop    DWORD PTR [rax+rax*1+0x0]
  403580:	mov    edx,r10d
  403583:	mov    rcx,rbx
  403586:	call   0x407260
  40358b:	mov    edx,DWORD PTR [rsp+0x38]
  40358f:	mov    rcx,rbx
  403592:	mov    r14d,eax
  403595:	call   0x405f10
  40359a:	mov    rcx,rbx
  40359d:	call   0x403430
  4035a2:	mov    edx,esi
  4035a4:	mov    rbx,rax
  4035a7:	and    edx,0x1f
  4035aa:	jne    0x4037e0
  4035b0:	mov    eax,DWORD PTR [rbx+0x14]
  4035b3:	sub    eax,0x1
  4035b6:	cdqe   
  4035b8:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  4035bd:	xor    eax,0x1f
  4035c0:	cmp    edx,eax
  4035c2:	je     0x403870
  4035c8:	test   r14d,r14d
  4035cb:	jne    0x4035d5
  4035cd:	mov    r14d,DWORD PTR [rbx+0x18]
  4035d1:	and    r14d,0x1
  4035d5:	mov    edx,0x1
  4035da:	mov    rcx,rbx
  4035dd:	mov    ebp,0x20
  4035e2:	call   0x405f10
  4035e7:	mov    eax,DWORD PTR [rsp+0x3c]
  4035eb:	lea    edx,[rax+0x1]
  4035ee:	mov    DWORD PTR [rsp+0x3c],edx
  4035f2:	jmp    0x40361f
  4035f4:	mov    edx,r10d
  4035f7:	mov    rcx,rax
  4035fa:	call   0x407260
  4035ff:	test   eax,eax
  403601:	mov    r14d,eax
  403604:	jne    0x403693
  40360a:	mov    edx,DWORD PTR [rsp+0x38]
  40360e:	mov    rcx,rbx
  403611:	xor    r14d,r14d
  403614:	xor    ebp,ebp
  403616:	call   0x405f10
  40361b:	mov    edx,DWORD PTR [rsp+0x3c]
  40361f:	mov    eax,DWORD PTR [rdi+0x4]
  403622:	cmp    eax,edx
  403624:	jle    0x4036b0
  40362a:	mov    r8d,eax
  40362d:	mov    DWORD PTR [rsp+0x3c],eax
  403631:	sub    r8d,edx
  403634:	cmp    esi,r8d
  403637:	jge    0x403770
  40363d:	mov    rdi,QWORD PTR [rsp+0xc0]
  403645:	mov    DWORD PTR [rbx+0x14],0x0
  40364c:	mov    edx,eax
  40364e:	xor    ebp,ebp
  403650:	mov    DWORD PTR [rdi],0x50
  403656:	mov    DWORD PTR [r12],edx
  40365a:	mov    r8,rbx
  40365d:	mov    edx,esi
  40365f:	mov    rcx,r13
  403662:	mov    r15d,0x1
  403668:	call   0x4071f0
  40366d:	mov    rax,QWORD PTR [rsp+0xc0]
  403675:	or     DWORD PTR [rax],ebp
  403677:	mov    rcx,rbx
  40367a:	call   0x4066d0
  40367f:	mov    eax,r15d
  403682:	add    rsp,0x48
  403686:	pop    rbx
  403687:	pop    rsi
  403688:	pop    rdi
  403689:	pop    rbp
  40368a:	pop    r12
  40368c:	pop    r13
  40368e:	pop    r14
  403690:	pop    r15
  403692:	ret    
  403693:	mov    edx,DWORD PTR [rsp+0x38]
  403697:	mov    rcx,rbx
  40369a:	mov    ebp,0x10
  40369f:	call   0x405f10
  4036a4:	jmp    0x40361b
  4036a9:	nop    DWORD PTR [rax+0x0]
  4036b0:	mov    eax,DWORD PTR [rdi+0x8]
  4036b3:	cmp    eax,edx
  4036b5:	jge    0x403656
  4036b7:	add    eax,0x1
  4036ba:	xor    ebp,ebp
  4036bc:	mov    DWORD PTR [rsp+0x3c],eax
  4036c0:	mov    rax,QWORD PTR [rsp+0xc0]
  4036c8:	mov    DWORD PTR [rax],0xa3
  4036ce:	call   0x4073d0
  4036d3:	mov    DWORD PTR [rax],0x22
  4036d9:	mov    DWORD PTR [rbx+0x14],0x0
  4036e0:	mov    edx,DWORD PTR [rsp+0x3c]
  4036e4:	jmp    0x403656
  4036e9:	nop    DWORD PTR [rax+0x0]
  4036f0:	mov    r9d,DWORD PTR [rsp+0xb0]
  4036f8:	xor    r15d,r15d
  4036fb:	test   r9d,r9d
  4036fe:	je     0x403677
  403704:	test   r10d,r10d
  403707:	jne    0x403850
  40370d:	xor    r14d,r14d
  403710:	xor    ebp,ebp
  403712:	jmp    0x40361f
  403717:	nop    WORD PTR [rax+rax*1+0x0]
  403720:	mov    r8d,DWORD PTR [rsp+0xb0]
  403728:	xor    r15d,r15d
  40372b:	test   r8d,r8d
  40372e:	je     0x403677
  403734:	cmp    DWORD PTR [rdi+0xc],0x1
  403738:	jne    0x403677
  40373e:	mov    edx,r10d
  403741:	mov    rcx,rbx
  403744:	call   0x407260
  403749:	test   eax,eax
  40374b:	mov    r14d,eax
  40374e:	je     0x40360a
  403754:	mov    edx,DWORD PTR [rsp+0x38]
  403758:	mov    rcx,rbx
  40375b:	mov    ebp,0x10
  403760:	call   0x405f10
  403765:	mov    edx,DWORD PTR [rsp+0x3c]
  403769:	jmp    0x40361f
  40376e:	xchg   ax,ax
  403770:	mov    edx,DWORD PTR [rdi+0x10]
  403773:	test   edx,edx
  403775:	jne    0x40363d
  40377b:	lea    edi,[r8-0x1]
  40377f:	test   r14d,r14d
  403782:	sete   al
  403785:	test   edi,edi
  403787:	jle    0x40382c
  40378d:	test   al,al
  40378f:	jne    0x403810
  403791:	mov    ecx,edi
  403793:	sar    edi,0x5
  403796:	mov    eax,0x1
  40379b:	movsxd rdi,edi
  40379e:	shl    eax,cl
  4037a0:	mov    edx,r8d
  4037a3:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  4037a7:	mov    rcx,rbx
  4037aa:	mov    edi,eax
  4037ac:	call   0x405f10
  4037b1:	mov    rax,QWORD PTR [rsp+0xc0]
  4037b9:	test   edi,edi
  4037bb:	mov    DWORD PTR [rax],0x2
  4037c1:	jne    0x403880
  4037c7:	test   r14d,r14d
  4037ca:	mov    edx,DWORD PTR [rsp+0x3c]
  4037ce:	je     0x403656
  4037d4:	mov    ebp,0x50
  4037d9:	jmp    0x403656
  4037de:	xchg   ax,ax
  4037e0:	mov    eax,0x20
  4037e5:	sub    eax,edx
  4037e7:	mov    edx,eax
  4037e9:	jmp    0x4035b0
  4037ee:	xchg   ax,ax
  4037f0:	mov    edx,eax
  4037f2:	sar    edx,0x5
  4037f5:	movsxd rdx,edx
  4037f8:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  4037fc:	bt     edx,eax
  4037ff:	jb     0x403580
  403805:	jmp    0x40373e
  40380a:	nop    WORD PTR [rax+rax*1+0x0]
  403810:	mov    edx,edi
  403812:	mov    rcx,rbx
  403815:	mov    DWORD PTR [rsp+0x2c],r8d
  40381a:	call   0x407260
  40381f:	mov    r8d,DWORD PTR [rsp+0x2c]
  403824:	test   eax,eax
  403826:	mov    r14d,eax
  403829:	sete   al
  40382c:	test   al,al
  40382e:	je     0x403791
  403834:	mov    eax,DWORD PTR [rsp+0xb0]
  40383b:	xor    r15d,r15d
  40383e:	test   eax,eax
  403840:	je     0x403677
  403846:	jmp    0x403791
  40384b:	nop    DWORD PTR [rax+rax*1+0x0]
  403850:	mov    edx,r10d
  403853:	mov    rcx,rbx
  403856:	neg    edx
  403858:	call   0x406ad0
  40385d:	mov    edx,DWORD PTR [rsp+0x3c]
  403861:	mov    rbx,rax
  403864:	jmp    0x40370d
  403869:	nop    DWORD PTR [rax+0x0]
  403870:	mov    edx,DWORD PTR [rsp+0x3c]
  403874:	mov    ebp,0x20
  403879:	jmp    0x40361f
  40387e:	xchg   ax,ax
  403880:	mov    rcx,rbx
  403883:	mov    ebp,0x60
  403888:	call   0x403430
  40388d:	mov    edx,DWORD PTR [rsp+0x3c]
  403891:	mov    rbx,rax
  403894:	jmp    0x403656
  403899:	nop    DWORD PTR [rax+0x0]
  4038a0:	movsxd rdx,DWORD PTR [rcx+0x14]
  4038a4:	lea    rax,[rcx+0x18]
  4038a8:	lea    rcx,[rax+rdx*4]
  4038ac:	jmp    0x4038c0
  4038ae:	xchg   ax,ax
  4038b0:	add    rax,0x4
  4038b4:	mov    DWORD PTR [rax-0x4],0xffffffff
  4038bb:	cmp    rcx,rax
  4038be:	jbe    0x4038d0
  4038c0:	mov    edx,DWORD PTR [rax]
  4038c2:	test   edx,edx
  4038c4:	je     0x4038b0
  4038c6:	sub    edx,0x1
  4038c9:	mov    DWORD PTR [rax],edx
  4038cb:	ret    
  4038cc:	nop    DWORD PTR [rax+0x0]
  4038d0:	repz ret 
  4038d2:	nop    DWORD PTR [rax+0x0]
  4038d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038e0:	push   rbx
  4038e1:	sub    rsp,0x30
  4038e5:	lea    ebx,[rdx+0x1f]
  4038e8:	mov    rax,rcx
  4038eb:	sar    ebx,0x5
  4038ee:	cmp    ebx,DWORD PTR [rcx+0x8]
  4038f1:	jg     0x403970
  4038f3:	mov    r9d,edx
  4038f6:	sar    r9d,0x5
  4038fa:	and    edx,0x1f
  4038fd:	je     0x403950
  4038ff:	add    r9d,0x1
  403903:	lea    r8,[rax+0x18]
  403907:	mov    DWORD PTR [rax+0x14],r9d
  40390b:	movsxd r9,r9d
  40390e:	lea    r9,[r8+r9*4]
  403912:	cmp    r8,r9
  403915:	jae    0x403935
  403917:	nop    WORD PTR [rax+rax*1+0x0]
  403920:	add    r8,0x4
  403924:	mov    DWORD PTR [r8-0x4],0xffffffff
  40392c:	cmp    r8,r9
  40392f:	jb     0x403920
  403931:	test   edx,edx
  403933:	je     0x403940
  403935:	mov    ecx,0x20
  40393a:	sub    ecx,edx
  40393c:	shr    DWORD PTR [r8-0x4],cl
  403940:	add    rsp,0x30
  403944:	pop    rbx
  403945:	ret    
  403946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403950:	lea    r8,[rax+0x18]
  403954:	mov    DWORD PTR [rax+0x14],r9d
  403958:	movsxd r9,r9d
  40395b:	lea    r9,[r8+r9*4]
  40395f:	cmp    r8,r9
  403962:	jb     0x403920
  403964:	jmp    0x403940
  403966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403970:	mov    DWORD PTR [rsp+0x2c],edx
  403974:	call   0x4066d0
  403979:	mov    ecx,ebx
  40397b:	call   0x4065c0
  403980:	mov    edx,DWORD PTR [rsp+0x2c]
  403984:	jmp    0x4038f3
  403989:	nop    DWORD PTR [rax+0x0]
  403990:	push   r15
  403992:	push   r14
  403994:	push   r13
  403996:	push   r12
  403998:	push   rbp
  403999:	push   rdi
  40399a:	push   rsi
  40399b:	push   rbx
  40399c:	sub    rsp,0x138
  4039a3:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  4039ab:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  4039b3:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  4039bc:	movaps XMMWORD PTR [rsp+0x100],xmm9
  4039c5:	movaps XMMWORD PTR [rsp+0x110],xmm10
  4039ce:	movaps XMMWORD PTR [rsp+0x120],xmm11
  4039d7:	mov    rdi,rcx
  4039da:	mov    QWORD PTR [rsp+0x190],r8
  4039e2:	mov    QWORD PTR [rsp+0x188],rdx
  4039ea:	mov    QWORD PTR [rsp+0x198],r9
  4039f2:	call   0x407348
  4039f7:	mov    rbp,QWORD PTR [rax]
  4039fa:	mov    rcx,rbp
  4039fd:	call   0x407308
  403a02:	mov    r14,rax
  403a05:	mov    rax,QWORD PTR [rsp+0x190]
  403a0d:	mov    DWORD PTR [rsp+0xa4],0x0
  403a18:	mov    QWORD PTR [rsp+0xb0],0x0
  403a24:	mov    QWORD PTR [rsp+0xc8],0x0
  403a30:	lea    rcx,[rip+0x5b55]        # 0x40958c
  403a37:	mov    QWORD PTR [rsp+0xc0],rdi
  403a3f:	mov    eax,DWORD PTR [rax]
  403a41:	mov    DWORD PTR [rsp+0x40],eax
  403a45:	mov    rax,rdi
  403a48:	movzx  r8d,BYTE PTR [rax]
  403a4c:	cmp    r8b,0x2d
  403a50:	ja     0x403c00
  403a56:	movzx  edx,r8b
  403a5a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  403a5e:	add    rdx,rcx
  403a61:	jmp    rdx
  403a63:	mov    DWORD PTR [rsp+0xa4],0x6
  403a6e:	mov    QWORD PTR [rsp+0xc0],rdi
  403a76:	xor    r8d,r8d
  403a79:	mov    DWORD PTR [rsp+0x58],0x0
  403a81:	cmp    QWORD PTR [rsp+0x188],0x0
  403a8a:	je     0x403a9f
  403a8c:	mov    rax,QWORD PTR [rsp+0xc0]
  403a94:	mov    rsi,QWORD PTR [rsp+0x188]
  403a9c:	mov    QWORD PTR [rsi],rax
  403a9f:	mov    eax,DWORD PTR [rsp+0x58]
  403aa3:	test   eax,eax
  403aa5:	jne    0x403b20
  403aa7:	test   r8,r8
  403aaa:	je     0x403aca
  403aac:	mov    rcx,QWORD PTR [rsp+0x1a0]
  403ab4:	mov    edx,DWORD PTR [rsp+0x40]
  403ab8:	call   0x4071f0
  403abd:	mov    rcx,QWORD PTR [rsp+0xc8]
  403ac5:	call   0x4066d0
  403aca:	mov    eax,DWORD PTR [rsp+0xa4]
  403ad1:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  403ad9:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  403ae1:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  403aea:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  403af3:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  403afc:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  403b05:	add    rsp,0x138
  403b0c:	pop    rbx
  403b0d:	pop    rsi
  403b0e:	pop    rdi
  403b0f:	pop    rbp
  403b10:	pop    r12
  403b12:	pop    r13
  403b14:	pop    r14
  403b16:	pop    r15
  403b18:	ret    
  403b19:	nop    DWORD PTR [rax+0x0]
  403b20:	or     DWORD PTR [rsp+0xa4],0x8
  403b28:	jmp    0x403aa7
  403b2d:	nop    DWORD PTR [rax]
  403b30:	mov    rdx,rax
  403b33:	mov    DWORD PTR [rsp+0x58],0x0
  403b3b:	add    rax,0x1
  403b3f:	mov    QWORD PTR [rsp+0xc0],rax
  403b47:	movzx  r8d,BYTE PTR [rdx+0x1]
  403b4c:	test   r8b,r8b
  403b4f:	je     0x403a63
  403b55:	xor    r12d,r12d
  403b58:	cmp    r8b,0x30
  403b5c:	mov    r15,rax
  403b5f:	je     0x403c18
  403b65:	mov    rax,QWORD PTR [rsp+0x190]
  403b6d:	mov    eax,DWORD PTR [rax+0x10]
  403b70:	mov    DWORD PTR [rsp+0x84],eax
  403b77:	movsx  eax,r8b
  403b7b:	lea    edx,[rax-0x30]
  403b7e:	cmp    edx,0x9
  403b81:	ja     0x403c73
  403b87:	lea    rcx,[r15+0x1]
  403b8b:	xor    edx,edx
  403b8d:	xor    esi,esi
  403b8f:	xor    ebx,ebx
  403b91:	jmp    0x403bc5
  403b93:	lea    eax,[rsi+rsi*4]
  403b96:	movsx  r8d,r8b
  403b9a:	lea    esi,[r8+rax*2-0x30]
  403b9f:	mov    QWORD PTR [rsp+0xc0],rcx
  403ba7:	movsx  eax,BYTE PTR [rcx]
  403baa:	add    ebx,0x1
  403bad:	mov    r9,rcx
  403bb0:	lea    rcx,[rcx+0x1]
  403bb4:	lea    r10d,[rax-0x30]
  403bb8:	mov    r8d,eax
  403bbb:	cmp    r10d,0x9
  403bbf:	ja     0x403c80
  403bc5:	cmp    ebx,0x8
  403bc8:	jle    0x403b93
  403bca:	cmp    ebx,0xf
  403bcd:	jg     0x403b9f
  403bcf:	lea    eax,[rdx+rdx*4]
  403bd2:	movsx  r8d,r8b
  403bd6:	lea    edx,[r8+rax*2-0x30]
  403bdb:	jmp    0x403b9f
  403bdd:	nop    DWORD PTR [rax]
  403be0:	add    rax,0x1
  403be4:	mov    QWORD PTR [rsp+0xc0],rax
  403bec:	movzx  r8d,BYTE PTR [rax]
  403bf0:	cmp    r8b,0x2d
  403bf4:	jbe    0x403a56
  403bfa:	nop    WORD PTR [rax+rax*1+0x0]
  403c00:	xor    r12d,r12d
  403c03:	cmp    r8b,0x30
  403c07:	mov    DWORD PTR [rsp+0x58],0x0
  403c0f:	mov    r15,rax
  403c12:	jne    0x403b65
  403c18:	movzx  edx,BYTE PTR [rax+0x1]
  403c1c:	cmp    dl,0x58
  403c1f:	je     0x404ddf
  403c25:	add    rax,0x1
  403c29:	cmp    dl,0x78
  403c2c:	je     0x404ddf
  403c32:	mov    r15,rax
  403c35:	mov    QWORD PTR [rsp+0xc0],rax
  403c3d:	add    rax,0x1
  403c41:	movzx  edx,BYTE PTR [rax-0x1]
  403c45:	cmp    dl,0x30
  403c48:	je     0x403c32
  403c4a:	xor    r8d,r8d
  403c4d:	test   dl,dl
  403c4f:	je     0x403a81
  403c55:	mov    r8d,edx
  403c58:	mov    r12d,0x1
  403c5e:	jmp    0x403b65
  403c63:	mov    rdx,rax
  403c66:	mov    DWORD PTR [rsp+0x58],0x1
  403c6e:	jmp    0x403b3b
  403c73:	mov    r9,r15
  403c76:	xor    edx,edx
  403c78:	xor    esi,esi
  403c7a:	xor    ebx,ebx
  403c7c:	nop    DWORD PTR [rax+0x0]
  403c80:	movsx  ecx,BYTE PTR [rbp+0x0]
  403c84:	cmp    ecx,eax
  403c86:	je     0x404084
  403c8c:	mov    ebp,ebx
  403c8e:	xor    ecx,ecx
  403c90:	xor    r13d,r13d
  403c93:	xor    r11d,r11d
  403c96:	mov    r8d,eax
  403c99:	and    r8d,0xffffffdf
  403c9d:	cmp    r8d,0x45
  403ca1:	je     0x403da0
  403ca7:	xor    r8d,r8d
  403caa:	test   ebp,ebp
  403cac:	jne    0x403f15
  403cb2:	or     ecx,r12d
  403cb5:	jne    0x403f08
  403cbb:	test   r11d,r11d
  403cbe:	jne    0x403ed3
  403cc4:	cmp    eax,0x4e
  403cc7:	je     0x403ce1
  403cc9:	jle    0x403eca
  403ccf:	cmp    eax,0x69
  403cd2:	je     0x40506a
  403cd8:	cmp    eax,0x6e
  403cdb:	jne    0x403ed3
  403ce1:	lea    rbx,[rsp+0xc0]
  403ce9:	lea    rdx,[rip+0x5899]        # 0x409589
  403cf0:	mov    rcx,rbx
  403cf3:	call   0x4071a0
  403cf8:	test   eax,eax
  403cfa:	je     0x403ed3
  403d00:	mov    rax,QWORD PTR [rsp+0x190]
  403d08:	mov    rsi,QWORD PTR [rsp+0x198]
  403d10:	xor    ebp,ebp
  403d12:	mov    rdx,QWORD PTR [rsp+0xc0]
  403d1a:	mov    DWORD PTR [rsp+0xa4],0x4
  403d25:	mov    eax,DWORD PTR [rax+0x8]
  403d28:	mov    DWORD PTR [rsp+0x44],eax
  403d2c:	add    eax,0x1
  403d2f:	mov    DWORD PTR [rsi],eax
  403d31:	cmp    BYTE PTR [rdx],0x28
  403d34:	je     0x405446
  403d3a:	nop    WORD PTR [rax+rax*1+0x0]
  403d40:	mov    rsi,QWORD PTR [rsp+0x198]
  403d48:	mov    DWORD PTR [rsi],eax
  403d4a:	mov    r8,QWORD PTR [rsp+0xc8]
  403d52:	test   ebp,ebp
  403d54:	je     0x403a81
  403d5a:	mov    r9d,DWORD PTR [rsp+0x84]
  403d62:	test   r9d,r9d
  403d65:	jne    0x404494
  403d6b:	mov    eax,DWORD PTR [rsp+0xa4]
  403d72:	mov    ecx,DWORD PTR [r8+0x14]
  403d76:	xor    edx,edx
  403d78:	and    eax,0xfffffff8
  403d7b:	test   ecx,ecx
  403d7d:	setg   dl
  403d80:	add    edx,edx
  403d82:	or     eax,edx
  403d84:	test   al,0x30
  403d86:	jne    0x403ef3
  403d8c:	mov    DWORD PTR [rsp+0xa4],eax
  403d93:	jmp    0x403a81
  403d98:	nop    DWORD PTR [rax+rax*1+0x0]
  403da0:	mov    eax,ebp
  403da2:	or     eax,ecx
  403da4:	or     eax,r12d
  403da7:	je     0x403ed3
  403dad:	mov    rdi,QWORD PTR [rsp+0xc0]
  403db5:	lea    rax,[rdi+0x1]
  403db9:	mov    QWORD PTR [rsp+0xc0],rax
  403dc1:	movsx  eax,BYTE PTR [rdi+0x1]
  403dc5:	cmp    al,0x2b
  403dc7:	je     0x404f88
  403dcd:	cmp    al,0x2d
  403dcf:	je     0x404391
  403dd5:	mov    DWORD PTR [rsp+0x44],0x0
  403ddd:	lea    r8d,[rax-0x30]
  403de1:	cmp    r8d,0x9
  403de5:	ja     0x4044c0
  403deb:	cmp    eax,0x30
  403dee:	jne    0x403e15
  403df0:	mov    rax,QWORD PTR [rsp+0xc0]
  403df8:	lea    r8,[rax+0x1]
  403dfc:	nop    DWORD PTR [rax+0x0]
  403e00:	mov    QWORD PTR [rsp+0xc0],r8
  403e08:	movsx  eax,BYTE PTR [r8]
  403e0c:	add    r8,0x1
  403e10:	cmp    eax,0x30
  403e13:	je     0x403e00
  403e15:	lea    r9d,[rax-0x31]
  403e19:	xor    r8d,r8d
  403e1c:	cmp    r9d,0x8
  403e20:	ja     0x403caa
  403e26:	lea    r9d,[rax-0x30]
  403e2a:	mov    rax,QWORD PTR [rsp+0xc0]
  403e32:	lea    r10,[rax+0x1]
  403e36:	mov    QWORD PTR [rsp+0x50],rax
  403e3b:	mov    QWORD PTR [rsp+0xc0],r10
  403e43:	mov    QWORD PTR [rsp+0x48],r10
  403e48:	mov    r10,rax
  403e4b:	movsx  eax,BYTE PTR [rax+0x1]
  403e4f:	lea    r8d,[rax-0x30]
  403e53:	cmp    r8d,0x9
  403e57:	ja     0x403e93
  403e59:	lea    r8,[r10+0x2]
  403e5d:	mov    DWORD PTR [rsp+0x5c],r11d
  403e62:	lea    r9d,[r9+r9*4]
  403e66:	mov    QWORD PTR [rsp+0xc0],r8
  403e6e:	mov    r11,r8
  403e71:	add    r8,0x1
  403e75:	lea    r9d,[rax+r9*2-0x30]
  403e7a:	movsx  eax,BYTE PTR [r8-0x1]
  403e7f:	lea    r10d,[rax-0x30]
  403e83:	cmp    r10d,0x9
  403e87:	jbe    0x403e62
  403e89:	mov    QWORD PTR [rsp+0x48],r11
  403e8e:	mov    r11d,DWORD PTR [rsp+0x5c]
  403e93:	mov    r8,QWORD PTR [rsp+0x48]
  403e98:	sub    r8,QWORD PTR [rsp+0x50]
  403e9d:	cmp    r8,0x8
  403ea1:	jg     0x40505f
  403ea7:	cmp    r9d,0x4e1f
  403eae:	jg     0x40505f
  403eb4:	mov    r10d,DWORD PTR [rsp+0x44]
  403eb9:	mov    r8d,r10d
  403ebc:	neg    r8d
  403ebf:	xor    r8d,r9d
  403ec2:	add    r8d,r10d
  403ec5:	jmp    0x403caa
  403eca:	cmp    eax,0x49
  403ecd:	je     0x40506a
  403ed3:	mov    DWORD PTR [rsp+0xa4],0x6
  403ede:	mov    QWORD PTR [rsp+0xc0],rdi
  403ee6:	mov    r8,QWORD PTR [rsp+0xc8]
  403eee:	jmp    0x403a81
  403ef3:	or     eax,0x40
  403ef6:	mov    DWORD PTR [rsp+0xa4],eax
  403efd:	call   0x4073d0
  403f02:	mov    DWORD PTR [rax],0x22
  403f08:	mov    r8,QWORD PTR [rsp+0xc8]
  403f10:	jmp    0x403a81
  403f15:	mov    rax,QWORD PTR [rsp+0x190]
  403f1d:	mov    ecx,DWORD PTR [rsp+0x58]
  403f21:	sub    r8d,r13d
  403f24:	mov    DWORD PTR [rsp+0xa4],0x1
  403f2f:	mov    DWORD PTR [rsp+0x68],r8d
  403f34:	mov    eax,DWORD PTR [rax+0xc]
  403f37:	mov    DWORD PTR [rsp+0x44],eax
  403f3b:	and    eax,0x3
  403f3e:	mov    edi,eax
  403f40:	sub    edi,ecx
  403f42:	cmp    eax,0x2
  403f45:	mov    DWORD PTR [rsp+0x6c],edi
  403f49:	je     0x403f63
  403f4b:	lea    edi,[rcx+0x1]
  403f4e:	cmp    eax,0x3
  403f51:	mov    DWORD PTR [rsp+0x6c],edi
  403f55:	je     0x403f63
  403f57:	test   eax,eax
  403f59:	sete   al
  403f5c:	movzx  eax,al
  403f5f:	mov    DWORD PTR [rsp+0x6c],eax
  403f63:	pxor   xmm0,xmm0
  403f67:	mov    eax,esi
  403f69:	test   ebx,ebx
  403f6b:	cmove  ebx,ebp
  403f6e:	mov    edi,0x10
  403f73:	cmp    ebp,0x10
  403f76:	cmovle edi,ebp
  403f79:	cvtsi2sd xmm0,rax
  403f7e:	cmp    edi,0x9
  403f81:	movsd  QWORD PTR [rsp+0xb0],xmm0
  403f8a:	jle    0x403fb3
  403f8c:	pxor   xmm1,xmm1
  403f90:	lea    eax,[rdi-0x9]
  403f93:	mov    rcx,QWORD PTR [rip+0x5ac6]        # 0x409a60
  403f9a:	cdqe   
  403f9c:	cvtsi2sd xmm1,rdx
  403fa1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  403fa6:	addsd  xmm0,xmm1
  403faa:	movsd  QWORD PTR [rsp+0xb0],xmm0
  403fb3:	cmp    ebp,0xf
  403fb6:	jg     0x404125
  403fbc:	cmp    DWORD PTR [rsp+0x40],0x35
  403fc1:	jg     0x404125
  403fc7:	cmp    DWORD PTR [rsp+0x68],0x0
  403fcc:	je     0x404fb0
  403fd2:	jle    0x404439
  403fd8:	cmp    DWORD PTR [rsp+0x68],0x16
  403fdd:	jg     0x404fda
  403fe3:	movsxd rcx,DWORD PTR [rsp+0x68]
  403fe8:	mov    edx,DWORD PTR [rsp+0xb0]
  403fef:	lea    rax,[rip+0x568a]        # 0x409680
  403ff6:	test   edx,edx
  403ff8:	mov    r8d,DWORD PTR [rax+rcx*4]
  403ffc:	je     0x4050ce
  404002:	tzcnt  edx,edx
  404006:	mov    eax,0x35
  40400b:	sub    eax,edx
  40400d:	mov    rdx,QWORD PTR [rip+0x5a4c]        # 0x409a60
  404014:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40401d:	add    eax,r8d
  404020:	cmp    eax,0x35
  404023:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  404028:	lea    rdx,[rsp+0xa4]
  404030:	setle  al
  404033:	movzx  eax,al
  404036:	lea    rcx,[rsp+0xb0]
  40403e:	mov    QWORD PTR [rsp+0x30],rdx
  404043:	mov    edx,DWORD PTR [rsp+0x6c]
  404047:	mov    DWORD PTR [rsp+0x20],eax
  40404b:	mov    DWORD PTR [rsp+0x28],edx
  40404f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404058:	mov    r9,QWORD PTR [rsp+0x1a0]
  404060:	mov    r8,QWORD PTR [rsp+0x198]
  404068:	mov    rdx,QWORD PTR [rsp+0x190]
  404070:	call   0x4034e0
  404075:	test   eax,eax
  404077:	jne    0x403f08
  40407d:	xor    eax,eax
  40407f:	jmp    0x404129
  404084:	movzx  r8d,BYTE PTR [rbp+0x1]
  404089:	test   r8b,r8b
  40408c:	je     0x40530d
  404092:	cmp    r8b,BYTE PTR [r9+0x1]
  404096:	jne    0x403c8c
  40409c:	mov    eax,0x2
  4040a1:	jmp    0x4040b2
  4040a3:	add    rax,0x1
  4040a7:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  4040ac:	jne    0x4042b0
  4040b2:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  4040b8:	test   r8b,r8b
  4040bb:	jne    0x4040a3
  4040bd:	lea    r8,[r9+rax*1]
  4040c1:	test   ebx,ebx
  4040c3:	mov    QWORD PTR [rsp+0xc0],r8
  4040cb:	movsx  eax,BYTE PTR [r8]
  4040cf:	je     0x4043ae
  4040d5:	lea    r8d,[rax-0x30]
  4040d9:	xor    ecx,ecx
  4040db:	xor    r13d,r13d
  4040de:	mov    ebp,ebx
  4040e0:	cmp    r8d,0x9
  4040e4:	ja     0x40411a
  4040e6:	test   r8d,r8d
  4040e9:	lea    eax,[rcx+0x1]
  4040ec:	mov    r9d,r8d
  4040ef:	jne    0x40528d
  4040f5:	mov    r8,QWORD PTR [rsp+0xc0]
  4040fd:	mov    ecx,eax
  4040ff:	lea    rax,[r8+0x1]
  404103:	mov    QWORD PTR [rsp+0xc0],rax
  40410b:	movsx  eax,BYTE PTR [r8+0x1]
  404110:	lea    r8d,[rax-0x30]
  404114:	cmp    r8d,0x9
  404118:	jbe    0x4040e6
  40411a:	mov    r11d,0x1
  404120:	jmp    0x403c96
  404125:	mov    eax,DWORD PTR [rsp+0x68]
  404129:	mov    edx,ebp
  40412b:	sub    edx,edi
  40412d:	add    edx,eax
  40412f:	cmp    edx,0x0
  404132:	jle    0x404e6a
  404138:	mov    eax,edx
  40413a:	and    eax,0xf
  40413d:	je     0x40415f
  40413f:	mov    rcx,QWORD PTR [rip+0x591a]        # 0x409a60
  404146:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40414f:	cdqe   
  404151:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  404156:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40415f:	and    edx,0xfffffff0
  404162:	jne    0x4042c1
  404168:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404171:	xor    edi,edi
  404173:	lea    rdx,[rsp+0xac]
  40417b:	lea    r8,[rsp+0xa8]
  404183:	call   0x406ea0
  404188:	mov    edx,DWORD PTR [rsp+0xa8]
  40418f:	mov    r13d,DWORD PTR [rsp+0x40]
  404194:	add    edi,DWORD PTR [rsp+0xac]
  40419b:	mov    QWORD PTR [rsp+0xc8],rax
  4041a3:	mov    r12d,edx
  4041a6:	sub    r12d,r13d
  4041a9:	test   r12d,r12d
  4041ac:	mov    DWORD PTR [rsp+0xac],edi
  4041b3:	jle    0x4041dc
  4041b5:	mov    edx,r12d
  4041b8:	mov    rcx,rax
  4041bb:	call   0x405f10
  4041c0:	mov    edi,DWORD PTR [rsp+0xac]
  4041c7:	mov    DWORD PTR [rsp+0xa8],r13d
  4041cf:	mov    edx,r13d
  4041d2:	add    edi,r12d
  4041d5:	mov    DWORD PTR [rsp+0xac],edi
  4041dc:	lea    eax,[rdi+rdx*1]
  4041df:	sub    eax,DWORD PTR [rsp+0x40]
  4041e3:	mov    ecx,eax
  4041e5:	mov    DWORD PTR [rsp+0x8c],eax
  4041ec:	mov    rax,QWORD PTR [rsp+0x190]
  4041f4:	mov    eax,DWORD PTR [rax+0x8]
  4041f7:	mov    DWORD PTR [rsp+0x44],eax
  4041fb:	add    eax,0x1
  4041fe:	cmp    ecx,eax
  404200:	jg     0x404da5
  404206:	mov    rax,QWORD PTR [rsp+0x190]
  40420e:	mov    eax,DWORD PTR [rax+0x4]
  404211:	cmp    ecx,eax
  404213:	mov    DWORD PTR [rsp+0x50],eax
  404217:	jge    0x404fa3
  40421d:	sub    edi,eax
  40421f:	cmp    edi,0x0
  404222:	jle    0x40440c
  404228:	mov    rcx,QWORD PTR [rsp+0xc8]
  404230:	mov    edx,edi
  404232:	call   0x406ad0
  404237:	add    DWORD PTR [rsp+0xa8],edi
  40423e:	mov    QWORD PTR [rsp+0xc8],rax
  404246:	mov    eax,DWORD PTR [rsp+0x50]
  40424a:	mov    DWORD PTR [rsp+0xac],eax
  404251:	mov    eax,DWORD PTR [rsp+0x84]
  404258:	test   eax,eax
  40425a:	je     0x4044d0
  404260:	mov    eax,DWORD PTR [rsp+0x8c]
  404267:	add    eax,0x1
  40426a:	cmp    DWORD PTR [rsp+0x50],eax
  40426e:	jle    0x4044d0
  404274:	mov    r8,QWORD PTR [rsp+0xc8]
  40427c:	mov    rax,QWORD PTR [rsp+0x198]
  404284:	mov    esi,DWORD PTR [rsp+0x50]
  404288:	mov    DWORD PTR [rsp+0xa4],0x50
  404293:	mov    DWORD PTR [r8+0x14],0x0
  40429b:	mov    DWORD PTR [r8+0x18],0x0
  4042a3:	mov    DWORD PTR [rax],esi
  4042a5:	jmp    0x403d5a
  4042aa:	nop    WORD PTR [rax+rax*1+0x0]
  4042b0:	mov    eax,ecx
  4042b2:	mov    ebp,ebx
  4042b4:	xor    ecx,ecx
  4042b6:	xor    r13d,r13d
  4042b9:	xor    r11d,r11d
  4042bc:	jmp    0x403c96
  4042c1:	sar    edx,0x4
  4042c4:	cmp    edx,0xf
  4042c7:	jle    0x405393
  4042cd:	mov    rax,QWORD PTR [rip+0x56bc]        # 0x409990
  4042d4:	mov    ecx,edx
  4042d6:	xor    r8d,r8d
  4042d9:	movsd  xmm1,QWORD PTR [rax+0x20]
  4042de:	xchg   ax,ax
  4042e0:	mov    eax,DWORD PTR [rsp+0xb4]
  4042e7:	sub    ecx,0x10
  4042ea:	mov    r9d,eax
  4042ed:	and    eax,0x800fffff
  4042f2:	or     eax,0x3ff00000
  4042f7:	and    r9d,0x7ff00000
  4042fe:	mov    DWORD PTR [rsp+0xb4],eax
  404305:	shr    r9d,0x14
  404309:	cmp    ecx,0xf
  40430c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404315:	lea    r8d,[r8+r9*1-0x3ff]
  40431d:	mulsd  xmm0,xmm1
  404321:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40432a:	jg     0x4042e0
  40432c:	and    edx,0xf
  40432f:	mov    eax,DWORD PTR [rsp+0xb4]
  404336:	mov    ecx,eax
  404338:	and    eax,0x800fffff
  40433d:	or     eax,0x3ff00000
  404342:	and    ecx,0x7ff00000
  404348:	shr    ecx,0x14
  40434b:	mov    DWORD PTR [rsp+0xb4],eax
  404352:	test   edx,edx
  404354:	lea    edi,[r8+rcx*1-0x3ff]
  40435c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404365:	mov    rax,QWORD PTR [rip+0x5624]        # 0x409990
  40436c:	je     0x404173
  404372:	test   dl,0x1
  404375:	je     0x40437b
  404377:	mulsd  xmm0,QWORD PTR [rax]
  40437b:	add    rax,0x8
  40437f:	sar    edx,1
  404381:	jne    0x404372
  404383:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40438c:	jmp    0x404173
  404391:	mov    DWORD PTR [rsp+0x44],0x1
  404399:	lea    rax,[rdi+0x2]
  40439d:	mov    QWORD PTR [rsp+0xc0],rax
  4043a5:	movsx  eax,BYTE PTR [rdi+0x2]
  4043a9:	jmp    0x403ddd
  4043ae:	cmp    eax,0x30
  4043b1:	jne    0x4053f5
  4043b7:	add    r8,0x1
  4043bb:	xor    ecx,ecx
  4043bd:	nop    DWORD PTR [rax]
  4043c0:	mov    QWORD PTR [rsp+0xc0],r8
  4043c8:	movsx  eax,BYTE PTR [r8]
  4043cc:	add    ecx,0x1
  4043cf:	add    r8,0x1
  4043d3:	cmp    eax,0x30
  4043d6:	je     0x4043c0
  4043d8:	lea    r8d,[rax-0x31]
  4043dc:	cmp    r8d,0x8
  4043e0:	ja     0x405055
  4043e6:	mov    r15,QWORD PTR [rsp+0xc0]
  4043ee:	lea    r9d,[rax-0x30]
  4043f2:	lea    r13d,[rcx+0x1]
  4043f6:	mov    ebp,0x1
  4043fb:	mov    r8,r15
  4043fe:	lea    eax,[rsi+rsi*4]
  404401:	xor    ecx,ecx
  404403:	lea    esi,[r9+rax*2]
  404407:	jmp    0x4040ff
  40440c:	je     0x404246
  404412:	add    edx,edi
  404414:	test   edx,edx
  404416:	mov    DWORD PTR [rsp+0xa8],edx
  40441d:	jle    0x4053b6
  404423:	mov    rcx,QWORD PTR [rsp+0xc8]
  40442b:	neg    edi
  40442d:	mov    edx,edi
  40442f:	call   0x405f10
  404434:	jmp    0x404246
  404439:	mov    edx,DWORD PTR [rsp+0x68]
  40443d:	cmp    edx,0xffffffea
  404440:	mov    eax,edx
  404442:	jl     0x404129
  404448:	mov    rdx,QWORD PTR [rip+0x5611]        # 0x409a60
  40444f:	neg    eax
  404451:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40445a:	cdqe   
  40445c:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  404461:	lea    rax,[rsp+0xa4]
  404469:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404472:	lea    rcx,[rsp+0xb0]
  40447a:	mov    DWORD PTR [rsp+0x20],0x0
  404482:	mov    QWORD PTR [rsp+0x30],rax
  404487:	mov    eax,DWORD PTR [rsp+0x6c]
  40448b:	mov    DWORD PTR [rsp+0x28],eax
  40448f:	jmp    0x404058
  404494:	mov    DWORD PTR [r8+0x14],0x0
  40449c:	mov    DWORD PTR [rsp+0xa4],0x50
  4044a7:	call   0x4073d0
  4044ac:	mov    r8,QWORD PTR [rsp+0xc8]
  4044b4:	mov    DWORD PTR [rax],0x22
  4044ba:	jmp    0x403a81
  4044bf:	nop
  4044c0:	mov    QWORD PTR [rsp+0xc0],rdi
  4044c8:	xor    r8d,r8d
  4044cb:	jmp    0x403caa
  4044d0:	mov    eax,DWORD PTR [rsp+0x50]
  4044d4:	mov    DWORD PTR [rsp+0x44],0x1
  4044dc:	mov    DWORD PTR [rsp+0x8c],eax
  4044e3:	mov    r8d,ebp
  4044e6:	mov    edx,ebx
  4044e8:	mov    DWORD PTR [rsp+0x20],r14d
  4044ed:	mov    r9d,esi
  4044f0:	mov    rcx,r15
  4044f3:	call   0x406fe0
  4044f8:	mov    QWORD PTR [rsp+0x70],rax
  4044fd:	add    rax,0x10
  404501:	mov    QWORD PTR [rsp+0x78],rax
  404506:	mov    eax,DWORD PTR [rsp+0x40]
  40450a:	movsd  xmm8,QWORD PTR [rip+0x51cd]        # 0x4096e0
  404513:	movsd  xmm9,QWORD PTR [rip+0x51d4]        # 0x4096f0
  40451c:	add    eax,0x1
  40451f:	movapd xmm11,xmm8
  404524:	mov    DWORD PTR [rsp+0x80],eax
  40452b:	mov    eax,DWORD PTR [rsp+0x68]
  40452f:	movsd  xmm10,QWORD PTR [rip+0x51d8]        # 0x409710
  404538:	mov    edx,eax
  40453a:	neg    edx
  40453c:	test   eax,eax
  40453e:	mov    eax,0x0
  404543:	cmovs  eax,edx
  404546:	xor    ebp,ebp
  404548:	mov    DWORD PTR [rsp+0x5c],eax
  40454c:	jmp    0x404790
  404551:	mov    rcx,rsi
  404554:	call   0x406ad0
  404559:	mov    rsi,rax
  40455c:	test   r15d,r15d
  40455f:	je     0x40456f
  404561:	mov    rcx,rdi
  404564:	mov    edx,r15d
  404567:	call   0x406960
  40456c:	mov    rdi,rax
  40456f:	test   r12d,r12d
  404572:	jle    0x404582
  404574:	mov    rcx,rdi
  404577:	mov    edx,r12d
  40457a:	call   0x406ad0
  40457f:	mov    rdi,rax
  404582:	test   r14d,r14d
  404585:	jle    0x404595
  404587:	mov    rcx,r13
  40458a:	mov    edx,r14d
  40458d:	call   0x406ad0
  404592:	mov    r13,rax
  404595:	mov    rdx,rdi
  404598:	mov    rcx,rsi
  40459b:	call   0x406c40
  4045a0:	cmp    DWORD PTR [rax+0x14],0x1
  4045a4:	mov    rbx,rax
  4045a7:	jle    0x404940
  4045ad:	mov    ebp,DWORD PTR [rbx+0x10]
  4045b0:	mov    rdx,r13
  4045b3:	mov    DWORD PTR [rbx+0x10],0x0
  4045ba:	mov    rcx,rbx
  4045bd:	call   0x406bf0
  4045c2:	test   eax,eax
  4045c4:	jg     0x4048d0
  4045ca:	mov    ecx,DWORD PTR [rsp+0x6c]
  4045ce:	test   ecx,ecx
  4045d0:	je     0x4048d0
  4045d6:	mov    eax,ecx
  4045d8:	and    eax,0x1
  4045db:	xor    eax,ebp
  4045dd:	mov    DWORD PTR [rsp+0x60],eax
  4045e1:	je     0x4050eb
  4045e7:	test   ebp,ebp
  4045e9:	je     0x404b41
  4045ef:	movsd  xmm6,QWORD PTR [rip+0x50e9]        # 0x4096e0
  4045f7:	mov    DWORD PTR [rsp+0xa4],0x21
  404602:	xor    r12d,r12d
  404605:	mov    DWORD PTR [rsp+0x88],0x20
  404610:	xor    r14d,r14d
  404613:	movapd xmm7,xmm6
  404617:	mov    eax,DWORD PTR [rsp+0xa8]
  40461e:	mov    edx,DWORD PTR [rsp+0xac]
  404625:	mov    r8d,DWORD PTR [rsp+0x44]
  40462a:	add    edx,eax
  40462c:	test   r8d,r8d
  40462f:	mov    DWORD PTR [rsp+0x48],edx
  404633:	jne    0x40463f
  404635:	cmp    DWORD PTR [rsp+0x40],eax
  404639:	jg     0x404cf5
  40463f:	lea    rdx,[rsp+0x9c]
  404647:	lea    r8,[rsp+0xa0]
  40464f:	movapd xmm0,xmm6
  404653:	call   0x406ea0
  404658:	mov    edx,DWORD PTR [rsp+0x9c]
  40465f:	mov    r15,rax
  404662:	test   edx,edx
  404664:	js     0x404d30
  40466a:	je     0x404677
  40466c:	mov    rcx,rax
  40466f:	call   0x406ad0
  404674:	mov    r15,rax
  404677:	mov    rbp,QWORD PTR [rsp+0xc8]
  40467f:	test   r14d,r14d
  404682:	mov    rdx,r15
  404685:	mov    rcx,rbp
  404688:	je     0x404a70
  40468e:	call   0x406c40
  404693:	mov    ecx,DWORD PTR [rsp+0x44]
  404697:	mov    QWORD PTR [rsp+0xc8],rax
  40469f:	mov    edx,DWORD PTR [rbp+0x14]
  4046a2:	test   ecx,ecx
  4046a4:	jne    0x404c10
  4046aa:	sub    edx,0x1
  4046ad:	cmp    edx,DWORD PTR [rax+0x14]
  4046b0:	jge    0x4046cd
  4046b2:	movsxd rdx,edx
  4046b5:	add    rdx,0x4
  4046b9:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  4046be:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  4046c3:	xor    ecx,0x1f
  4046c6:	xor    edx,0x1f
  4046c9:	cmp    ecx,edx
  4046cb:	jle    0x4046f0
  4046cd:	mov    ecx,DWORD PTR [rsp+0x50]
  4046d1:	cmp    DWORD PTR [rsp+0x8c],ecx
  4046d8:	jne    0x404af0
  4046de:	sub    DWORD PTR [rsp+0xa8],0x1
  4046e6:	mov    DWORD PTR [rsp+0x44],0x1
  4046ee:	xchg   ax,ax
  4046f0:	mov    rcx,r15
  4046f3:	call   0x4066d0
  4046f8:	mov    rcx,rbp
  4046fb:	call   0x4066d0
  404700:	mov    r14d,DWORD PTR [rsp+0x60]
  404705:	test   r14d,r14d
  404708:	jne    0x404950
  40470e:	test   r12d,r12d
  404711:	je     0x404758
  404713:	mov    eax,DWORD PTR [rsp+0xa8]
  40471a:	add    eax,DWORD PTR [rsp+0xac]
  404721:	cmp    DWORD PTR [rsp+0x48],eax
  404725:	jne    0x404758
  404727:	mulsd  xmm6,QWORD PTR [rip+0x4fd9]        # 0x409708
  40472f:	movapd xmm0,xmm7
  404733:	subsd  xmm0,QWORD PTR [rip+0x4fbd]        # 0x4096f8
  40473b:	movapd xmm1,xmm6
  40473f:	xorpd  xmm1,xmm10
  404744:	ucomisd xmm1,xmm0
  404748:	jbe    0x404cc2
  40474e:	ucomisd xmm7,xmm6
  404752:	ja     0x404ce2
  404758:	mov    r12d,DWORD PTR [rsp+0x44]
  40475d:	test   r12d,r12d
  404760:	je     0x404b25
  404766:	mov    DWORD PTR [rsp+0x44],0x1
  40476e:	xor    ebp,ebp
  404770:	mov    rcx,rsi
  404773:	call   0x4066d0
  404778:	mov    rcx,rdi
  40477b:	call   0x4066d0
  404780:	mov    rcx,r13
  404783:	call   0x4066d0
  404788:	mov    rcx,rbx
  40478b:	call   0x4066d0
  404790:	mov    rsi,QWORD PTR [rsp+0x70]
  404795:	mov    r15d,0x0
  40479b:	mov    ecx,DWORD PTR [rsi+0x8]
  40479e:	call   0x4065c0
  4047a3:	lea    rcx,[rax+0x10]
  4047a7:	mov    rdi,rax
  4047aa:	movsxd rax,DWORD PTR [rsi+0x14]
  4047ae:	mov    rdx,QWORD PTR [rsp+0x78]
  4047b3:	lea    r8,[rax*4+0x8]
  4047bb:	call   0x407338
  4047c0:	mov    rax,QWORD PTR [rsp+0xc8]
  4047c8:	mov    ecx,DWORD PTR [rax+0x8]
  4047cb:	call   0x4065c0
  4047d0:	mov    rdx,QWORD PTR [rsp+0xc8]
  4047d8:	lea    rcx,[rax+0x10]
  4047dc:	mov    rsi,rax
  4047df:	movsxd rax,DWORD PTR [rdx+0x14]
  4047e3:	add    rdx,0x10
  4047e7:	lea    r8,[rax*4+0x8]
  4047ef:	call   0x407338
  4047f4:	mov    eax,DWORD PTR [rsp+0xa8]
  4047fb:	mov    ecx,0x1
  404800:	mov    ebx,DWORD PTR [rsp+0xac]
  404807:	sub    eax,ebp
  404809:	add    ebx,ebp
  40480b:	mov    DWORD PTR [rsp+0x48],eax
  40480f:	call   0x406800
  404814:	mov    r13,rax
  404817:	mov    eax,DWORD PTR [rsp+0x68]
  40481b:	test   eax,eax
  40481d:	cmovg  r15d,eax
  404821:	test   ebx,ebx
  404823:	js     0x404ae0
  404829:	mov    eax,DWORD PTR [rsp+0x5c]
  40482d:	mov    edx,r15d
  404830:	lea    r14d,[rax+rbx*1]
  404834:	mov    ecx,DWORD PTR [rsp+0x48]
  404838:	mov    eax,DWORD PTR [rsp+0x80]
  40483f:	add    ebx,ecx
  404841:	sub    ebx,DWORD PTR [rsp+0x40]
  404845:	sub    eax,ecx
  404847:	cmp    DWORD PTR [rsp+0x50],ebx
  40484b:	jle    0x404853
  40484d:	sub    ebx,DWORD PTR [rsp+0x50]
  404851:	add    eax,ebx
  404853:	lea    ebx,[r14+rax*1]
  404857:	lea    r12d,[rdx+rax*1]
  40485b:	cmp    ebx,r12d
  40485e:	mov    eax,r12d
  404861:	cmovle eax,ebx
  404864:	cmp    eax,r14d
  404867:	cmovg  eax,r14d
  40486b:	test   eax,eax
  40486d:	jle    0x404877
  40486f:	sub    ebx,eax
  404871:	sub    r12d,eax
  404874:	sub    r14d,eax
  404877:	mov    eax,DWORD PTR [rsp+0x5c]
  40487b:	test   eax,eax
  40487d:	je     0x4048ac
  40487f:	mov    rcx,r13
  404882:	mov    edx,eax
  404884:	call   0x406960
  404889:	mov    rdx,rsi
  40488c:	mov    rcx,rax
  40488f:	mov    r13,rax
  404892:	call   0x406830
  404897:	mov    rcx,rsi
  40489a:	mov    QWORD PTR [rsp+0x60],rax
  40489f:	call   0x4066d0
  4048a4:	mov    rax,QWORD PTR [rsp+0x60]
  4048a9:	mov    rsi,rax
  4048ac:	sub    ebx,ebp
  4048ae:	cmp    ebx,0x0
  4048b1:	mov    edx,ebx
  4048b3:	jg     0x404551
  4048b9:	je     0x40455c
  4048bf:	neg    edx
  4048c1:	mov    rcx,rsi
  4048c4:	call   0x405f10
  4048c9:	jmp    0x40455c
  4048ce:	xchg   ax,ax
  4048d0:	test   eax,eax
  4048d2:	js     0x405102
  4048d8:	je     0x4051ce
  4048de:	mov    rdx,r13
  4048e1:	mov    rcx,rbx
  4048e4:	call   0x4070e0
  4048e9:	ucomisd xmm9,xmm0
  4048ee:	jb     0x404c20
  4048f4:	test   ebp,ebp
  4048f6:	jne    0x404d50
  4048fc:	mov    DWORD PTR [rsp+0x60],0x0
  404904:	cmp    DWORD PTR [rsp+0x48],0x1
  404909:	jg     0x404919
  40490b:	mov    r9d,DWORD PTR [rsp+0x44]
  404910:	test   r9d,r9d
  404913:	jne    0x4052da
  404919:	movapd xmm6,xmm8
  40491e:	xor    r12d,r12d
  404921:	mov    DWORD PTR [rsp+0x88],0x10
  40492c:	movapd xmm7,xmm8
  404931:	mov    r14d,0x1
  404937:	jmp    0x404617
  40493c:	nop    DWORD PTR [rax+0x0]
  404940:	mov    r15d,DWORD PTR [rax+0x18]
  404944:	test   r15d,r15d
  404947:	jne    0x4045ad
  40494d:	nop    DWORD PTR [rax]
  404950:	mov    ebp,DWORD PTR [rsp+0x44]
  404954:	test   ebp,ebp
  404956:	je     0x404e48
  40495c:	mov    eax,DWORD PTR [rsp+0xac]
  404963:	mov    ebp,0x1
  404968:	mov    rdx,QWORD PTR [rsp+0x198]
  404970:	mov    rcx,rsi
  404973:	mov    DWORD PTR [rdx],eax
  404975:	call   0x4066d0
  40497a:	mov    rcx,rdi
  40497d:	call   0x4066d0
  404982:	mov    rcx,r13
  404985:	call   0x4066d0
  40498a:	mov    rcx,QWORD PTR [rsp+0x70]
  40498f:	call   0x4066d0
  404994:	mov    rcx,rbx
  404997:	call   0x4066d0
  40499c:	mov    rax,QWORD PTR [rsp+0x190]
  4049a4:	mov    esi,DWORD PTR [rsp+0xac]
  4049ab:	cmp    DWORD PTR [rax+0x8],esi
  4049ae:	jge    0x403d4a
  4049b4:	mov    rax,QWORD PTR [rsp+0x190]
  4049bc:	mov    eax,DWORD PTR [rax+0xc]
  4049bf:	mov    DWORD PTR [rsp+0x44],eax
  4049c3:	and    eax,0x3
  4049c6:	cmp    eax,0x2
  4049c9:	je     0x4051bb
  4049cf:	cmp    eax,0x3
  4049d2:	je     0x4051a8
  4049d8:	cmp    eax,0x1
  4049db:	je     0x404da7
  4049e1:	mov    rcx,QWORD PTR [rsp+0xc8]
  4049e9:	call   0x4066d0
  4049ee:	mov    rax,QWORD PTR [rsp+0x190]
  4049f6:	mov    rsi,QWORD PTR [rsp+0x198]
  4049fe:	mov    QWORD PTR [rsp+0xc8],0x0
  404a0a:	mov    DWORD PTR [rsp+0xa4],0x11
  404a15:	mov    eax,DWORD PTR [rax+0x8]
  404a18:	mov    DWORD PTR [rsi],eax
  404a1a:	mov    rax,QWORD PTR [rsp+0x190]
  404a22:	mov    rsi,QWORD PTR [rsp+0x1a0]
  404a2a:	mov    ecx,DWORD PTR [rax]
  404a2c:	lea    eax,[rcx+0x1f]
  404a2f:	sar    eax,0x5
  404a32:	cdqe   
  404a34:	lea    rdx,[rsi+rax*4]
  404a38:	mov    rax,rsi
  404a3b:	cmp    rsi,rdx
  404a3e:	jae    0x404a50
  404a40:	add    rax,0x4
  404a44:	mov    DWORD PTR [rax-0x4],0xffffffff
  404a4b:	cmp    rdx,rax
  404a4e:	ja     0x404a40
  404a50:	and    ecx,0x1f
  404a53:	je     0x404a61
  404a55:	mov    eax,0x20
  404a5a:	sub    eax,ecx
  404a5c:	mov    ecx,eax
  404a5e:	shr    DWORD PTR [rdx-0x4],cl
  404a61:	xor    r8d,r8d
  404a64:	jmp    0x403d52
  404a69:	nop    DWORD PTR [rax+0x0]
  404a70:	call   0x4054e0
  404a75:	mov    edx,DWORD PTR [rax+0x14]
  404a78:	mov    QWORD PTR [rsp+0xc8],rax
  404a80:	sub    edx,0x1
  404a83:	cmp    edx,DWORD PTR [rbp+0x14]
  404a86:	jge    0x404aa7
  404a88:	movsxd rdx,edx
  404a8b:	add    rdx,0x4
  404a8f:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  404a94:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  404a99:	xor    ecx,0x1f
  404a9c:	xor    edx,0x1f
  404a9f:	cmp    ecx,edx
  404aa1:	jge    0x4046f0
  404aa7:	mov    edx,DWORD PTR [rsp+0x44]
  404aab:	test   edx,edx
  404aad:	je     0x404d80
  404ab3:	mov    eax,DWORD PTR [rsp+0xa8]
  404aba:	add    eax,0x1
  404abd:	cmp    DWORD PTR [rsp+0x40],eax
  404ac1:	mov    DWORD PTR [rsp+0xa8],eax
  404ac8:	setne  al
  404acb:	movzx  eax,al
  404ace:	mov    DWORD PTR [rsp+0x44],eax
  404ad2:	jmp    0x4046f0
  404ad7:	nop    WORD PTR [rax+rax*1+0x0]
  404ae0:	mov    edx,r15d
  404ae3:	mov    r14d,DWORD PTR [rsp+0x5c]
  404ae8:	sub    edx,ebx
  404aea:	jmp    0x404834
  404aef:	nop
  404af0:	mov    edx,0x1
  404af5:	mov    rcx,rax
  404af8:	call   0x406ad0
  404afd:	mov    rcx,r15
  404b00:	mov    QWORD PTR [rsp+0xc8],rax
  404b08:	sub    DWORD PTR [rsp+0xac],0x1
  404b10:	sub    DWORD PTR [rsp+0x8c],0x1
  404b18:	call   0x4066d0
  404b1d:	mov    rcx,rbp
  404b20:	call   0x4066d0
  404b25:	mov    rcx,QWORD PTR [rsp+0xc8]
  404b2d:	call   0x406010
  404b32:	mov    DWORD PTR [rsp+0x44],0x0
  404b3a:	mov    ebp,eax
  404b3c:	jmp    0x404770
  404b41:	mov    edx,DWORD PTR [rsp+0x50]
  404b45:	cmp    DWORD PTR [rsp+0x8c],edx
  404b4c:	mov    DWORD PTR [rsp+0xa4],0x11
  404b57:	je     0x404904
  404b5d:	xor    ecx,ecx
  404b5f:	cmp    DWORD PTR [rsp+0x40],0x1f
  404b64:	mov    r9,QWORD PTR [rsp+0xc8]
  404b6c:	mov    eax,DWORD PTR [rsp+0x40]
  404b70:	jle    0x404bac
  404b72:	mov    r14d,DWORD PTR [r9+0x18]
  404b76:	test   r14d,r14d
  404b79:	jne    0x404904
  404b7f:	lea    rdx,[r9+0x1c]
  404b83:	mov    eax,DWORD PTR [rsp+0x40]
  404b87:	xor    ecx,ecx
  404b89:	jmp    0x404ba1
  404b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  404b90:	add    rdx,0x4
  404b94:	mov    r12d,DWORD PTR [rdx-0x4]
  404b98:	test   r12d,r12d
  404b9b:	jne    0x404904
  404ba1:	sub    eax,0x20
  404ba4:	add    ecx,0x1
  404ba7:	cmp    eax,0x1f
  404baa:	jg     0x404b90
  404bac:	cmp    eax,0x1
  404baf:	jle    0x404bd3
  404bb1:	movsxd rcx,ecx
  404bb4:	sub    eax,0x1
  404bb7:	lea    r8,[r9+rcx*4]
  404bbb:	xor    ecx,ecx
  404bbd:	mov    edx,DWORD PTR [r8+0x18]
  404bc1:	tzcnt  ecx,edx
  404bc5:	shr    edx,cl
  404bc7:	cmp    eax,ecx
  404bc9:	mov    DWORD PTR [r8+0x18],edx
  404bcd:	jg     0x404904
  404bd3:	mov    eax,DWORD PTR [rsp+0x8c]
  404bda:	mov    rcx,r9
  404bdd:	sub    eax,0x1
  404be0:	mov    DWORD PTR [rsp+0xac],eax
  404be7:	mov    eax,DWORD PTR [rsp+0x40]
  404beb:	mov    edx,eax
  404bed:	mov    DWORD PTR [rsp+0xa8],eax
  404bf4:	call   0x4038e0
  404bf9:	mov    QWORD PTR [rsp+0xc8],rax
  404c01:	jmp    0x404950
  404c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c10:	mov    DWORD PTR [rsp+0x44],0x1
  404c18:	jmp    0x4046f0
  404c1d:	nop    DWORD PTR [rax]
  404c20:	movapd xmm7,xmm0
  404c24:	cmp    ebp,0x1
  404c27:	movsd  xmm1,QWORD PTR [rip+0x4ac9]        # 0x4096f8
  404c2f:	sbb    eax,eax
  404c31:	and    eax,0x10
  404c34:	movsd  xmm0,QWORD PTR [rip+0x4ac4]        # 0x409700
  404c3c:	mulsd  xmm7,xmm1
  404c40:	add    eax,0x10
  404c43:	xor    r14d,r14d
  404c46:	cmp    ebp,0x1
  404c49:	mov    DWORD PTR [rsp+0x88],eax
  404c50:	setb   r14b
  404c54:	ucomisd xmm0,xmm7
  404c58:	jbe    0x404d40
  404c5e:	cvttsd2si r12d,xmm7
  404c63:	pxor   xmm6,xmm6
  404c67:	mov    eax,DWORD PTR [rsp+0x6c]
  404c6b:	cmp    eax,0x1
  404c6e:	cvtsi2sd xmm6,r12d
  404c73:	subsd  xmm7,xmm6
  404c77:	je     0x404f95
  404c7d:	cmp    eax,0x2
  404c80:	jne    0x404e39
  404c86:	test   r14d,r14d
  404c89:	jne    0x404cb5
  404c8b:	ucomisd xmm7,QWORD PTR [rip+0x4a55]        # 0x4096e8
  404c93:	jbe    0x404cb5
  404c95:	pxor   xmm6,xmm6
  404c99:	add    r12d,0x1
  404c9d:	mov    eax,0x30
  404ca2:	sub    eax,DWORD PTR [rsp+0x88]
  404ca9:	cvtsi2sd xmm6,r12d
  404cae:	mov    DWORD PTR [rsp+0x88],eax
  404cb5:	mov    DWORD PTR [rsp+0x60],0x0
  404cbd:	jmp    0x404617
  404cc2:	ucomisd xmm0,xmm6
  404cc6:	jbe    0x404758
  404ccc:	movsd  xmm0,QWORD PTR [rip+0x4a0c]        # 0x4096e0
  404cd4:	subsd  xmm0,xmm6
  404cd8:	ucomisd xmm0,xmm7
  404cdc:	jbe    0x404758
  404ce2:	mov    eax,DWORD PTR [rsp+0x88]
  404ce9:	or     DWORD PTR [rsp+0xa4],eax
  404cf0:	jmp    0x404950
  404cf5:	mov    r15d,DWORD PTR [rsp+0x40]
  404cfa:	mov    rcx,QWORD PTR [rsp+0xc8]
  404d02:	mov    ebp,r15d
  404d05:	sub    ebp,eax
  404d07:	mov    edx,ebp
  404d09:	call   0x406ad0
  404d0e:	sub    DWORD PTR [rsp+0xac],ebp
  404d15:	mov    QWORD PTR [rsp+0xc8],rax
  404d1d:	mov    DWORD PTR [rsp+0xa8],r15d
  404d25:	jmp    0x40463f
  404d2a:	nop    WORD PTR [rax+rax*1+0x0]
  404d30:	neg    edx
  404d32:	mov    rcx,rax
  404d35:	call   0x405f10
  404d3a:	jmp    0x404677
  404d3f:	nop
  404d40:	movapd xmm6,xmm7
  404d44:	xor    r12d,r12d
  404d47:	jmp    0x404cb5
  404d4c:	nop    DWORD PTR [rax+0x0]
  404d50:	movapd xmm6,xmm11
  404d55:	xor    r12d,r12d
  404d58:	movapd xmm7,xmm11
  404d5d:	mov    DWORD PTR [rsp+0x88],0x20
  404d68:	mov    DWORD PTR [rsp+0x60],0x0
  404d70:	xor    r14d,r14d
  404d73:	jmp    0x404617
  404d78:	nop    DWORD PTR [rax+rax*1+0x0]
  404d80:	mov    edx,0x1
  404d85:	mov    rcx,rax
  404d88:	xor    r12d,r12d
  404d8b:	call   0x405f10
  404d90:	add    DWORD PTR [rsp+0xac],0x1
  404d98:	add    DWORD PTR [rsp+0x8c],0x1
  404da0:	jmp    0x4046f0
  404da5:	xor    ebp,ebp
  404da7:	mov    rax,QWORD PTR [rsp+0xc8]
  404daf:	mov    DWORD PTR [rsp+0xa4],0xa3
  404dba:	mov    DWORD PTR [rax+0x14],0x0
  404dc1:	call   0x4073d0
  404dc6:	mov    DWORD PTR [rax],0x22
  404dcc:	mov    rax,QWORD PTR [rsp+0x190]
  404dd4:	mov    eax,DWORD PTR [rax+0x8]
  404dd7:	add    eax,0x1
  404dda:	jmp    0x403d40
  404ddf:	mov    eax,DWORD PTR [rsp+0x58]
  404de3:	mov    r8,QWORD PTR [rsp+0x198]
  404deb:	lea    rcx,[rsp+0xc0]
  404df3:	mov    rdx,QWORD PTR [rsp+0x190]
  404dfb:	lea    r9,[rsp+0xc8]
  404e03:	mov    DWORD PTR [rsp+0x20],eax
  404e07:	call   0x405640
  404e0c:	cmp    eax,0x6
  404e0f:	mov    DWORD PTR [rsp+0xa4],eax
  404e16:	mov    r8,QWORD PTR [rsp+0xc8]
  404e1e:	jne    0x403a81
  404e24:	mov    QWORD PTR [rsp+0xc0],rdi
  404e2c:	mov    DWORD PTR [rsp+0x58],0x0
  404e34:	jmp    0x403a81
  404e39:	ucomisd xmm7,xmm1
  404e3d:	jae    0x404c95
  404e43:	jmp    0x404cb5
  404e48:	mov    eax,DWORD PTR [rsp+0xa8]
  404e4f:	mov    ebp,DWORD PTR [rsp+0x40]
  404e53:	sub    ebp,eax
  404e55:	cmp    ebp,0x0
  404e58:	jne    0x405021
  404e5e:	mov    eax,DWORD PTR [rsp+0xac]
  404e65:	jmp    0x404968
  404e6a:	je     0x404168
  404e70:	neg    edx
  404e72:	mov    eax,edx
  404e74:	and    eax,0xf
  404e77:	je     0x404e99
  404e79:	mov    rcx,QWORD PTR [rip+0x4be0]        # 0x409a60
  404e80:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404e89:	cdqe   
  404e8b:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  404e90:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404e99:	and    edx,0xfffffff0
  404e9c:	je     0x404168
  404ea2:	mov    eax,edx
  404ea4:	sar    eax,0x4
  404ea7:	cmp    eax,0xf
  404eaa:	jle    0x405478
  404eb0:	mov    rdx,QWORD PTR [rip+0x4bb9]        # 0x409a70
  404eb7:	mov    ecx,eax
  404eb9:	xor    r8d,r8d
  404ebc:	movsd  xmm1,QWORD PTR [rdx+0x20]
  404ec1:	mov    edx,DWORD PTR [rsp+0xb4]
  404ec8:	sub    ecx,0x10
  404ecb:	mov    r9d,edx
  404ece:	and    edx,0x800fffff
  404ed4:	or     edx,0x3ff00000
  404eda:	and    r9d,0x7ff00000
  404ee1:	mov    DWORD PTR [rsp+0xb4],edx
  404ee8:	shr    r9d,0x14
  404eec:	cmp    ecx,0xf
  404eef:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404ef8:	lea    r8d,[r8+r9*1-0x3ff]
  404f00:	mulsd  xmm0,xmm1
  404f04:	movsd  QWORD PTR [rsp+0xb0],xmm0
  404f0d:	jg     0x404ec1
  404f0f:	and    eax,0xf
  404f12:	mov    edx,DWORD PTR [rsp+0xb4]
  404f19:	mov    ecx,edx
  404f1b:	and    edx,0x800fffff
  404f21:	and    ecx,0x7ff00000
  404f27:	or     edx,0x3ff00000
  404f2d:	shr    ecx,0x14
  404f30:	mov    DWORD PTR [rsp+0xb4],edx
  404f37:	test   eax,eax
  404f39:	lea    edi,[r8+rcx*1-0x3ff]
  404f41:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  404f4a:	jle    0x404173
  404f50:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  404f59:	mov    rdx,QWORD PTR [rip+0x4b10]        # 0x409a70
  404f60:	movapd xmm0,xmm1
  404f64:	test   al,0x1
  404f66:	je     0x404f70
  404f68:	mulsd  xmm1,QWORD PTR [rdx]
  404f6c:	movapd xmm0,xmm1
  404f70:	sar    eax,1
  404f72:	add    rdx,0x8
  404f76:	test   eax,eax
  404f78:	jg     0x404f64
  404f7a:	movsd  QWORD PTR [rsp+0xb0],xmm1
  404f83:	jmp    0x404173
  404f88:	mov    DWORD PTR [rsp+0x44],0x0
  404f90:	jmp    0x404399
  404f95:	test   r14d,r14d
  404f98:	je     0x404cb5
  404f9e:	jmp    0x404c8b
  404fa3:	mov    DWORD PTR [rsp+0x44],0x0
  404fab:	jmp    0x4044e3
  404fb0:	lea    rax,[rsp+0xa4]
  404fb8:	lea    rcx,[rsp+0xb0]
  404fc0:	mov    DWORD PTR [rsp+0x20],0x1
  404fc8:	mov    QWORD PTR [rsp+0x30],rax
  404fcd:	mov    eax,DWORD PTR [rsp+0x6c]
  404fd1:	mov    DWORD PTR [rsp+0x28],eax
  404fd5:	jmp    0x404058
  404fda:	mov    ecx,DWORD PTR [rsp+0x68]
  404fde:	mov    edx,0x25
  404fe3:	sub    edx,ebp
  404fe5:	cmp    ecx,edx
  404fe7:	mov    eax,ecx
  404fe9:	jg     0x404129
  404fef:	mov    rdx,QWORD PTR [rip+0x4a6a]        # 0x409a60
  404ff6:	mov    eax,0xf
  404ffb:	sub    eax,ebp
  404ffd:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  405006:	movsxd rcx,eax
  405009:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  40500e:	mov    ecx,DWORD PTR [rsp+0x68]
  405012:	sub    ecx,eax
  405014:	movsxd rax,ecx
  405017:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  40501c:	jmp    0x404461
  405021:	mov    edx,ebp
  405023:	jle    0x40537f
  405029:	mov    rcx,QWORD PTR [rsp+0xc8]
  405031:	call   0x406ad0
  405036:	mov    QWORD PTR [rsp+0xc8],rax
  40503e:	mov    eax,DWORD PTR [rsp+0xac]
  405045:	sub    eax,ebp
  405047:	xor    ebp,ebp
  405049:	mov    DWORD PTR [rsp+0xac],eax
  405050:	jmp    0x404968
  405055:	xor    ebp,ebp
  405057:	xor    r13d,r13d
  40505a:	jmp    0x40411a
  40505f:	mov    r9d,0x4e1f
  405065:	jmp    0x403eb4
  40506a:	lea    rbx,[rsp+0xc0]
  405072:	lea    rdx,[rip+0x4507]        # 0x409580
  405079:	mov    rcx,rbx
  40507c:	call   0x4071a0
  405081:	test   eax,eax
  405083:	je     0x403ed3
  405089:	lea    rdx,[rip+0x44f3]        # 0x409583
  405090:	mov    rcx,rbx
  405093:	sub    QWORD PTR [rsp+0xc0],0x1
  40509c:	call   0x4071a0
  4050a1:	test   eax,eax
  4050a3:	jne    0x4050ae
  4050a5:	add    QWORD PTR [rsp+0xc0],0x1
  4050ae:	mov    rax,QWORD PTR [rsp+0x190]
  4050b6:	mov    DWORD PTR [rsp+0xa4],0x3
  4050c1:	xor    ebp,ebp
  4050c3:	mov    eax,DWORD PTR [rax+0x8]
  4050c6:	add    eax,0x1
  4050c9:	jmp    0x403d40
  4050ce:	mov    edx,DWORD PTR [rsp+0xb4]
  4050d5:	mov    eax,0x15
  4050da:	or     edx,0x100000
  4050e0:	tzcnt  edx,edx
  4050e4:	sub    eax,edx
  4050e6:	jmp    0x40400d
  4050eb:	cmp    ebp,0x1
  4050ee:	sbb    eax,eax
  4050f0:	and    eax,0x10
  4050f3:	add    eax,0x11
  4050f6:	mov    DWORD PTR [rsp+0xa4],eax
  4050fd:	jmp    0x404950
  405102:	cmp    ebp,0x1
  405105:	sbb    eax,eax
  405107:	and    eax,0x10
  40510a:	add    eax,0x11
  40510d:	test   ebp,ebp
  40510f:	mov    DWORD PTR [rsp+0xa4],eax
  405116:	jne    0x404950
  40511c:	cmp    DWORD PTR [rsp+0x48],0x1
  405121:	jg     0x404950
  405127:	mov    ebp,DWORD PTR [rsp+0x44]
  40512b:	test   ebp,ebp
  40512d:	jne    0x404950
  405133:	mov    edx,DWORD PTR [rsp+0x8c]
  40513a:	cmp    DWORD PTR [rsp+0x50],edx
  40513e:	je     0x404950
  405144:	mov    rcx,rbx
  405147:	mov    edx,0x1
  40514c:	call   0x406ad0
  405151:	mov    rdx,r13
  405154:	mov    rcx,rax
  405157:	mov    rbx,rax
  40515a:	call   0x406bf0
  40515f:	test   eax,eax
  405161:	jle    0x404e48
  405167:	mov    DWORD PTR [rsp+0xa4],0x11
  405172:	mov    DWORD PTR [rsp+0x44],0x0
  40517a:	mov    eax,DWORD PTR [rsp+0x40]
  40517e:	mov    rcx,QWORD PTR [rsp+0xc8]
  405186:	sub    DWORD PTR [rsp+0xac],eax
  40518d:	mov    edx,eax
  40518f:	mov    DWORD PTR [rsp+0xa8],eax
  405196:	call   0x4038e0
  40519b:	mov    QWORD PTR [rsp+0xc8],rax
  4051a3:	jmp    0x404950
  4051a8:	mov    r10d,DWORD PTR [rsp+0x58]
  4051ad:	test   r10d,r10d
  4051b0:	jne    0x404da7
  4051b6:	jmp    0x4049e1
  4051bb:	mov    r11d,DWORD PTR [rsp+0x58]
  4051c0:	test   r11d,r11d
  4051c3:	je     0x404da7
  4051c9:	jmp    0x4049e1
  4051ce:	test   ebp,ebp
  4051d0:	je     0x405317
  4051d6:	mov    r11d,DWORD PTR [rsp+0x44]
  4051db:	test   r11d,r11d
  4051de:	je     0x4053e5
  4051e4:	mov    ecx,DWORD PTR [rsp+0xa8]
  4051eb:	mov    r8,QWORD PTR [rsp+0xc8]
  4051f3:	mov    edx,ecx
  4051f5:	lea    rax,[r8+0x18]
  4051f9:	sar    edx,0x5
  4051fc:	movsxd rdx,edx
  4051ff:	lea    rdx,[rax+rdx*4]
  405203:	cmp    rax,rdx
  405206:	jae    0x405233
  405208:	cmp    DWORD PTR [r8+0x18],0xffffffff
  40520d:	lea    rax,[r8+0x1c]
  405211:	je     0x40522e
  405213:	jmp    0x4053e5
  405218:	nop    DWORD PTR [rax+rax*1+0x0]
  405220:	add    rax,0x4
  405224:	cmp    DWORD PTR [rax-0x4],0xffffffff
  405228:	jne    0x4053e5
  40522e:	cmp    rdx,rax
  405231:	ja     0x405220
  405233:	and    ecx,0x1f
  405236:	je     0x40524a
  405238:	or     edx,0xffffffff
  40523b:	shl    edx,cl
  40523d:	or     edx,DWORD PTR [rax]
  40523f:	mov    eax,edx
  405241:	add    eax,0x1
  405244:	jne    0x4053e5
  40524a:	mov    eax,DWORD PTR [rsp+0x40]
  40524e:	mov    edx,DWORD PTR [rsp+0x50]
  405252:	mov    DWORD PTR [r8+0x14],0x1
  40525a:	mov    DWORD PTR [r8+0x18],0x1
  405262:	mov    DWORD PTR [rsp+0xa8],0x1
  40526d:	mov    DWORD PTR [rsp+0xa4],0x21
  405278:	lea    eax,[rax+rdx*1-0x1]
  40527c:	mov    DWORD PTR [rsp+0xac],eax
  405283:	mov    eax,0x1
  405288:	jmp    0x404e4f
  40528d:	add    r13d,eax
  405290:	cmp    eax,0x1
  405293:	je     0x4052bc
  405295:	add    ecx,ebp
  405297:	mov    r10d,ecx
  40529a:	jmp    0x4052a5
  40529c:	lea    esi,[rsi+rsi*4]
  40529f:	add    esi,esi
  4052a1:	cmp    ebp,ecx
  4052a3:	je     0x4052bf
  4052a5:	add    ebp,0x1
  4052a8:	lea    eax,[rbp-0x1]
  4052ab:	cmp    eax,0x8
  4052ae:	jle    0x40529c
  4052b0:	cmp    ebp,0x10
  4052b3:	jg     0x4052a1
  4052b5:	lea    edx,[rdx+rdx*4]
  4052b8:	add    edx,edx
  4052ba:	jmp    0x4052a1
  4052bc:	mov    r10d,ebp
  4052bf:	cmp    r10d,0x8
  4052c3:	lea    ebp,[r10+0x1]
  4052c7:	jg     0x40539b
  4052cd:	mov    r8,QWORD PTR [rsp+0xc0]
  4052d5:	jmp    0x4043fe
  4052da:	mov    r9,QWORD PTR [rsp+0xc8]
  4052e2:	mov    DWORD PTR [rsp+0x44],0x1
  4052ea:	mov    eax,DWORD PTR [rsp+0x50]
  4052ee:	mov    DWORD PTR [r9+0x14],0x0
  4052f6:	mov    DWORD PTR [rsp+0xa4],0x50
  405301:	mov    DWORD PTR [rsp+0xac],eax
  405308:	jmp    0x404950
  40530d:	mov    eax,0x1
  405312:	jmp    0x4040bd
  405317:	cmp    DWORD PTR [rsp+0x48],0x1
  40531c:	je     0x4053fc
  405322:	mov    DWORD PTR [rsp+0xa4],0x21
  40532d:	mov    r10d,DWORD PTR [rsp+0x44]
  405332:	test   r10d,r10d
  405335:	jne    0x405345
  405337:	mov    edx,DWORD PTR [rsp+0x40]
  40533b:	cmp    DWORD PTR [rsp+0x48],edx
  40533f:	jl     0x404e48
  405345:	mov    r9,QWORD PTR [rsp+0xc8]
  40534d:	mov    eax,DWORD PTR [r9+0x18]
  405351:	test   al,0x1
  405353:	je     0x404950
  405359:	test   ebp,ebp
  40535b:	jne    0x405480
  405361:	cmp    DWORD PTR [rsp+0x48],0x1
  405366:	je     0x4052ea
  405368:	sub    eax,0x1
  40536b:	mov    DWORD PTR [rsp+0xa4],0x11
  405376:	mov    DWORD PTR [r9+0x18],eax
  40537a:	jmp    0x404950
  40537f:	mov    rcx,QWORD PTR [rsp+0xc8]
  405387:	neg    edx
  405389:	call   0x405f10
  40538e:	jmp    0x40503e
  405393:	xor    r8d,r8d
  405396:	jmp    0x40432f
  40539b:	cmp    ebp,0x10
  40539e:	jg     0x4053a7
  4053a0:	lea    eax,[rdx+rdx*4]
  4053a3:	lea    edx,[r8+rax*2]
  4053a7:	mov    r8,QWORD PTR [rsp+0xc0]
  4053af:	xor    ecx,ecx
  4053b1:	jmp    0x4040ff
  4053b6:	cmp    edx,0xffffffff
  4053b9:	jl     0x404274
  4053bf:	mov    rax,QWORD PTR [rsp+0xc8]
  4053c7:	mov    DWORD PTR [rsp+0xa8],0x1
  4053d2:	mov    DWORD PTR [rax+0x14],0x1
  4053d9:	mov    DWORD PTR [rax+0x18],0x1
  4053e0:	jmp    0x404246
  4053e5:	mov    DWORD PTR [rsp+0xa4],0x11
  4053f0:	jmp    0x40532d
  4053f5:	xor    ecx,ecx
  4053f7:	jmp    0x4043d8
  4053fc:	mov    edx,DWORD PTR [rsp+0x8c]
  405403:	cmp    DWORD PTR [rsp+0x50],edx
  405407:	jne    0x4054cd
  40540d:	mov    rax,QWORD PTR [rsp+0xc8]
  405415:	mov    DWORD PTR [rsp+0xa4],0x21
  405420:	cmp    DWORD PTR [rax+0x14],0x1
  405424:	jne    0x404950
  40542a:	cmp    DWORD PTR [rax+0x18],0x1
  40542e:	mov    eax,DWORD PTR [rsp+0x48]
  405432:	cmovne eax,DWORD PTR [rsp+0x84]
  40543a:	mov    DWORD PTR [rsp+0x84],eax
  405441:	jmp    0x404950
  405446:	mov    r8,QWORD PTR [rsp+0x1a0]
  40544e:	mov    rdx,QWORD PTR [rsp+0x190]
  405456:	mov    rcx,rbx
  405459:	call   0x4060e0
  40545e:	mov    DWORD PTR [rsp+0xa4],eax
  405465:	mov    rax,QWORD PTR [rsp+0x190]
  40546d:	mov    eax,DWORD PTR [rax+0x8]
  405470:	add    eax,0x1
  405473:	jmp    0x403d40
  405478:	xor    r8d,r8d
  40547b:	jmp    0x404f12
  405480:	mov    rcx,r9
  405483:	call   0x403430
  405488:	mov    edx,DWORD PTR [rax+0x14]
  40548b:	mov    ecx,DWORD PTR [rsp+0xa8]
  405492:	mov    QWORD PTR [rsp+0xc8],rax
  40549a:	sub    edx,0x1
  40549d:	movsxd rdx,edx
  4054a0:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  4054a5:	mov    eax,ecx
  4054a7:	neg    eax
  4054a9:	and    eax,0x1f
  4054ac:	xor    edx,0x1f
  4054af:	cmp    edx,eax
  4054b1:	je     0x4054bd
  4054b3:	add    ecx,0x1
  4054b6:	mov    DWORD PTR [rsp+0xa8],ecx
  4054bd:	mov    DWORD PTR [rsp+0xa4],0x21
  4054c8:	jmp    0x404950
  4054cd:	mov    DWORD PTR [rsp+0xa4],0x1
  4054d8:	jmp    0x40517a
  4054dd:	nop
  4054de:	nop
  4054df:	nop
  4054e0:	push   r13
  4054e2:	push   r12
  4054e4:	push   rbp
  4054e5:	push   rdi
  4054e6:	push   rsi
  4054e7:	push   rbx
  4054e8:	sub    rsp,0x28
  4054ec:	mov    eax,DWORD PTR [rdx+0x14]
  4054ef:	cmp    DWORD PTR [rcx+0x14],eax
  4054f2:	mov    rsi,rcx
  4054f5:	mov    rdi,rdx
  4054f8:	jge    0x405500
  4054fa:	mov    rsi,rdx
  4054fd:	mov    rdi,rcx
  405500:	mov    ecx,DWORD PTR [rsi+0x8]
  405503:	xor    r12d,r12d
  405506:	call   0x4065c0
  40550b:	movsxd rcx,DWORD PTR [rsi+0x14]
  40550f:	mov    rbx,rax
  405512:	lea    r11,[rdi+0x18]
  405516:	lea    r8,[rbx+0x18]
  40551a:	mov    DWORD PTR [rax+0x14],ecx
  40551d:	movsxd rdx,DWORD PTR [rdi+0x14]
  405521:	lea    rax,[rsi+0x18]
  405525:	lea    rdi,[r8+rdx*4]
  405529:	mov    rbp,rdx
  40552c:	nop    DWORD PTR [rax+0x0]
  405530:	mov    r10d,DWORD PTR [rax]
  405533:	mov    r9d,DWORD PTR [r11]
  405536:	add    r8,0x4
  40553a:	add    rax,0x4
  40553e:	add    r11,0x4
  405542:	movzx  r13d,r9w
  405546:	movzx  edx,r10w
  40554a:	shr    r9d,0x10
  40554e:	add    edx,r13d
  405551:	shr    r10d,0x10
  405555:	add    edx,r12d
  405558:	add    r10d,r9d
  40555b:	mov    r9d,edx
  40555e:	mov    WORD PTR [r8-0x4],dx
  405563:	and    r9d,0x10000
  40556a:	shr    r9d,0x10
  40556e:	add    r9d,r10d
  405571:	mov    r12d,r9d
  405574:	mov    WORD PTR [r8-0x2],r9w
  405579:	and    r12d,0x10000
  405580:	shr    r12d,0x10
  405584:	cmp    rdi,r8
  405587:	ja     0x405530
  405589:	mov    edx,DWORD PTR [rsi+0x14]
  40558c:	sub    edx,ebp
  40558e:	movsxd rdx,edx
  405591:	lea    r11,[rdi+rdx*4]
  405595:	cmp    r11,r8
  405598:	jbe    0x4055db
  40559a:	nop    WORD PTR [rax+rax*1+0x0]
  4055a0:	mov    r9d,DWORD PTR [rax]
  4055a3:	add    r8,0x4
  4055a7:	add    rax,0x4
  4055ab:	movzx  r10d,r9w
  4055af:	shr    r9d,0x10
  4055b3:	add    r10d,r12d
  4055b6:	mov    edx,r10d
  4055b9:	mov    WORD PTR [r8-0x4],r10w
  4055be:	and    edx,0x10000
  4055c4:	shr    edx,0x10
  4055c7:	add    edx,r9d
  4055ca:	mov    WORD PTR [r8-0x2],dx
  4055cf:	mov    r12d,edx
  4055d2:	shr    r12d,0x10
  4055d6:	cmp    r11,r8
  4055d9:	ja     0x4055a0
  4055db:	test   r12d,r12d
  4055de:	je     0x4055f3
  4055e0:	cmp    ecx,DWORD PTR [rbx+0xc]
  4055e3:	je     0x405603
  4055e5:	lea    eax,[rcx+0x1]
  4055e8:	mov    DWORD PTR [rbx+0x14],eax
  4055eb:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  4055f3:	mov    rax,rbx
  4055f6:	add    rsp,0x28
  4055fa:	pop    rbx
  4055fb:	pop    rsi
  4055fc:	pop    rdi
  4055fd:	pop    rbp
  4055fe:	pop    r12
  405600:	pop    r13
  405602:	ret    
  405603:	mov    eax,DWORD PTR [rbx+0x8]
  405606:	lea    ecx,[rax+0x1]
  405609:	call   0x4065c0
  40560e:	mov    rsi,rax
  405611:	lea    rcx,[rax+0x10]
  405615:	movsxd rax,DWORD PTR [rbx+0x14]
  405619:	lea    rdx,[rbx+0x10]
  40561d:	lea    r8,[rax*4+0x8]
  405625:	call   0x407338
  40562a:	mov    rcx,rbx
  40562d:	mov    rbx,rsi
  405630:	call   0x4066d0
  405635:	movsxd rcx,DWORD PTR [rsi+0x14]
  405639:	jmp    0x4055e5
  40563b:	nop
  40563c:	nop
  40563d:	nop
  40563e:	nop
  40563f:	nop
  405640:	push   r15
  405642:	push   r14
  405644:	push   r13
  405646:	push   r12
  405648:	push   rbp
  405649:	push   rdi
  40564a:	push   rsi
  40564b:	push   rbx
  40564c:	sub    rsp,0x28
  405650:	mov    r14,rcx
  405653:	mov    r13,rdx
  405656:	mov    QWORD PTR [rsp+0x80],r8
  40565e:	mov    QWORD PTR [rsp+0x88],r9
  405666:	call   0x407348
  40566b:	mov    rdi,QWORD PTR [rip+0x433e]        # 0x4099b0
  405672:	mov    rsi,QWORD PTR [rax]
  405675:	cmp    BYTE PTR [rdi+0x30],0x0
  405679:	je     0x405aa0
  40567f:	mov    rax,QWORD PTR [rsp+0x88]
  405687:	xor    r8d,r8d
  40568a:	mov    QWORD PTR [rax],0x0
  405691:	mov    rbx,QWORD PTR [r14]
  405694:	movzx  edx,BYTE PTR [rbx+0x2]
  405698:	lea    rax,[rbx+0x3]
  40569c:	add    rbx,0x2
  4056a0:	cmp    dl,0x30
  4056a3:	jne    0x4056b9
  4056a5:	mov    rbx,rax
  4056a8:	add    rax,0x1
  4056ac:	movzx  edx,BYTE PTR [rax-0x1]
  4056b0:	add    r8d,0x1
  4056b4:	cmp    dl,0x30
  4056b7:	je     0x4056a5
  4056b9:	cmp    BYTE PTR [rdi+rdx*1],0x0
  4056bd:	jne    0x405810
  4056c3:	movzx  r9d,BYTE PTR [rsi]
  4056c7:	test   r9b,r9b
  4056ca:	je     0x405d0a
  4056d0:	movzx  edx,BYTE PTR [rbx]
  4056d3:	cmp    r9b,dl
  4056d6:	jne    0x405ab3
  4056dc:	mov    eax,0x1
  4056e1:	jmp    0x4056f1
  4056e3:	add    rax,0x1
  4056e7:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  4056eb:	jne    0x405ab0
  4056f1:	movzx  edx,BYTE PTR [rsi+rax*1]
  4056f5:	test   dl,dl
  4056f7:	jne    0x4056e3
  4056f9:	add    rax,rbx
  4056fc:	movzx  ecx,BYTE PTR [rax]
  4056ff:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  405704:	mov    rdx,rcx
  405707:	test   r10b,r10b
  40570a:	jne    0x405b90
  405710:	cmp    dl,0x50
  405713:	je     0x4059c0
  405719:	cmp    dl,0x70
  40571c:	je     0x4059c0
  405722:	mov    rbp,rax
  405725:	mov    r11d,0x1
  40572b:	xor    r12d,r12d
  40572e:	xor    r15d,r15d
  405731:	xor    r10d,r10d
  405734:	test   r8d,r8d
  405737:	jne    0x40573d
  405739:	lea    rax,[rbx-0x1]
  40573d:	test   r11d,r11d
  405740:	mov    QWORD PTR [r14],rax
  405743:	jne    0x405a70
  405749:	test   r10d,r10d
  40574c:	je     0x405880
  405752:	test   r15d,r15d
  405755:	mov    eax,DWORD PTR [r13+0xc]
  405759:	jne    0x405b00
  40575f:	cmp    eax,0x2
  405762:	je     0x405da8
  405768:	cmp    eax,0x3
  40576b:	je     0x405d92
  405771:	cmp    eax,0x1
  405774:	je     0x405b78
  40577a:	mov    esi,DWORD PTR [r13+0x0]
  40577e:	mov    ebx,esi
  405780:	and    esi,0x1f
  405783:	sar    ebx,0x5
  405786:	cmp    esi,0x1
  405789:	mov    edi,ebx
  40578b:	sbb    edi,0xffffffff
  40578e:	xor    ecx,ecx
  405790:	mov    eax,edi
  405792:	sar    eax,1
  405794:	je     0x4057a7
  405796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057a0:	add    ecx,0x1
  4057a3:	sar    eax,1
  4057a5:	jne    0x4057a0
  4057a7:	call   0x4065c0
  4057ac:	mov    rcx,QWORD PTR [rsp+0x88]
  4057b4:	test   ebx,ebx
  4057b6:	mov    QWORD PTR [rcx],rax
  4057b9:	mov    DWORD PTR [rax+0x14],edi
  4057bc:	jle    0x405ec8
  4057c2:	lea    ecx,[rbx-0x1]
  4057c5:	lea    rdx,[rax+0x18]
  4057c9:	lea    rcx,[rax+rcx*4+0x1c]
  4057ce:	xchg   ax,ax
  4057d0:	mov    DWORD PTR [rdx],0xffffffff
  4057d6:	add    rdx,0x4
  4057da:	cmp    rdx,rcx
  4057dd:	jne    0x4057d0
  4057df:	mov    edx,ebx
  4057e1:	cmp    edi,ebx
  4057e3:	jle    0x4057f8
  4057e5:	movsxd r8,edx
  4057e8:	mov    edx,0x20
  4057ed:	mov    ecx,edx
  4057ef:	sub    ecx,esi
  4057f1:	sar    edx,cl
  4057f3:	mov    DWORD PTR [rax+r8*4+0x18],edx
  4057f8:	mov    eax,DWORD PTR [r13+0x4]
  4057fc:	mov    rdi,QWORD PTR [rsp+0x80]
  405804:	mov    DWORD PTR [rdi],eax
  405806:	mov    eax,0x11
  40580b:	jmp    0x405a72
  405810:	movzx  eax,BYTE PTR [rbx]
  405813:	movzx  r9d,BYTE PTR [rsi]
  405817:	add    r8d,0x1
  40581b:	xor    r11d,r11d
  40581e:	xor    r12d,r12d
  405821:	movzx  r10d,BYTE PTR [rdi+rax*1]
  405826:	mov    rdx,rax
  405829:	test   r10b,r10b
  40582c:	mov    rax,rbx
  40582f:	je     0x405841
  405831:	add    rax,0x1
  405835:	movzx  ecx,BYTE PTR [rax]
  405838:	cmp    BYTE PTR [rdi+rcx*1],0x0
  40583c:	mov    rdx,rcx
  40583f:	jne    0x405831
  405841:	cmp    dl,r9b
  405844:	je     0x405ac0
  40584a:	test   r12,r12
  40584d:	movzx  edx,BYTE PTR [rax]
  405850:	je     0x405859
  405852:	sub    r12d,eax
  405855:	shl    r12d,0x2
  405859:	cmp    dl,0x50
  40585c:	je     0x4059c9
  405862:	cmp    dl,0x70
  405865:	je     0x4059c9
  40586b:	test   r11d,r11d
  40586e:	mov    QWORD PTR [r14],rax
  405871:	mov    rbp,rax
  405874:	jne    0x405a70
  40587a:	nop    WORD PTR [rax+rax*1+0x0]
  405880:	mov    rax,rbp
  405883:	xor    ecx,ecx
  405885:	sub    rax,rbx
  405888:	sub    eax,0x1
  40588b:	cmp    eax,0x7
  40588e:	jle    0x40589a
  405890:	sar    eax,1
  405892:	add    ecx,0x1
  405895:	cmp    eax,0x7
  405898:	jg     0x405890
  40589a:	call   0x4065c0
  40589f:	cmp    BYTE PTR [rsi+0x1],0x0
  4058a3:	mov    r14,rax
  4058a6:	lea    r15,[rax+0x18]
  4058aa:	je     0x405dbe
  4058b0:	mov    edx,0x1
  4058b5:	jmp    0x4058c3
  4058b7:	nop    WORD PTR [rax+rax*1+0x0]
  4058c0:	mov    rdx,rax
  4058c3:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  4058c8:	lea    rax,[rdx+0x1]
  4058cc:	jne    0x4058c0
  4058ce:	cmp    rbx,rbp
  4058d1:	jae    0x405dc5
  4058d7:	add    rsi,rdx
  4058da:	mov    rax,r15
  4058dd:	xor    r9d,r9d
  4058e0:	xor    r8d,r8d
  4058e3:	jmp    0x405911
  4058e5:	cmp    r8d,0x20
  4058e9:	je     0x405a83
  4058ef:	movzx  r10d,cl
  4058f3:	mov    ecx,r8d
  4058f6:	add    r8d,0x4
  4058fa:	movzx  r10d,BYTE PTR [rdi+r10*1]
  4058ff:	mov    rbp,r11
  405902:	and    r10d,0xf
  405906:	shl    r10d,cl
  405909:	or     r9d,r10d
  40590c:	cmp    rbx,rbp
  40590f:	jae    0x405928
  405911:	movzx  ecx,BYTE PTR [rbp-0x1]
  405915:	lea    r11,[rbp-0x1]
  405919:	cmp    cl,BYTE PTR [rsi]
  40591b:	jne    0x4058e5
  40591d:	sub    r11,rdx
  405920:	mov    rbp,r11
  405923:	cmp    rbx,rbp
  405926:	jb     0x405911
  405928:	bsr    edx,r9d
  40592c:	xor    edx,0x1f
  40592f:	mov    DWORD PTR [rax],r9d
  405932:	add    rax,0x4
  405936:	mov    esi,DWORD PTR [r13+0x0]
  40593a:	sub    rax,r15
  40593d:	sar    rax,0x2
  405941:	mov    DWORD PTR [r14+0x14],eax
  405945:	shl    eax,0x5
  405948:	sub    eax,edx
  40594a:	cmp    eax,esi
  40594c:	jg     0x405bf8
  405952:	mov    edi,0x0
  405957:	jl     0x405bce
  40595d:	cmp    r12d,DWORD PTR [r13+0x8]
  405961:	jg     0x405b70
  405967:	mov    eax,DWORD PTR [r13+0x4]
  40596b:	cmp    r12d,eax
  40596e:	jge    0x405c59
  405974:	mov    ebx,eax
  405976:	sub    ebx,r12d
  405979:	cmp    esi,ebx
  40597b:	jg     0x405cb7
  405981:	mov    edx,DWORD PTR [r13+0xc]
  405985:	cmp    edx,0x2
  405988:	je     0x405e92
  40598e:	cmp    edx,0x3
  405991:	je     0x405e6f
  405997:	cmp    edx,0x1
  40599a:	je     0x405ea2
  4059a0:	mov    rcx,r14
  4059a3:	call   0x4066d0
  4059a8:	call   0x4073d0
  4059ad:	mov    DWORD PTR [rax],0x22
  4059b3:	mov    eax,0x50
  4059b8:	jmp    0x405a72
  4059bd:	nop    DWORD PTR [rax]
  4059c0:	xor    r12d,r12d
  4059c3:	mov    r11d,0x1
  4059c9:	movzx  edx,BYTE PTR [rax+0x1]
  4059cd:	cmp    dl,0x2b
  4059d0:	je     0x405bf0
  4059d6:	cmp    dl,0x2d
  4059d9:	je     0x405ad1
  4059df:	movzx  edx,BYTE PTR [rdi+rdx*1]
  4059e3:	xor    r15d,r15d
  4059e6:	lea    r9,[rax+0x1]
  4059ea:	lea    ecx,[rdx-0x1]
  4059ed:	cmp    cl,0x18
  4059f0:	ja     0x405aef
  4059f6:	lea    rcx,[r9+0x1]
  4059fa:	movzx  r9d,BYTE PTR [r9+0x1]
  4059ff:	sub    edx,0x10
  405a02:	xor    r10d,r10d
  405a05:	movzx  ebp,BYTE PTR [rdi+r9*1]
  405a0a:	mov    r9d,ebp
  405a0d:	sub    r9d,0x1
  405a11:	cmp    r9b,0x18
  405a15:	ja     0x405a51
  405a17:	nop    WORD PTR [rax+rax*1+0x0]
  405a20:	test   edx,0xf8000000
  405a26:	mov    r9d,0x1
  405a2c:	lea    edx,[rdx+rdx*4]
  405a2f:	cmovne r10d,r9d
  405a33:	add    rcx,0x1
  405a37:	movzx  r9d,BYTE PTR [rcx]
  405a3b:	lea    edx,[rbp+rdx*2-0x10]
  405a3f:	movzx  ebp,BYTE PTR [rdi+r9*1]
  405a44:	mov    r9d,ebp
  405a47:	sub    r9d,0x1
  405a4b:	cmp    r9b,0x18
  405a4f:	jbe    0x405a20
  405a51:	mov    r9d,r15d
  405a54:	mov    rbp,rax
  405a57:	mov    rax,rcx
  405a5a:	neg    r9d
  405a5d:	xor    edx,r9d
  405a60:	add    edx,r15d
  405a63:	add    r12d,edx
  405a66:	jmp    0x405734
  405a6b:	nop    DWORD PTR [rax+rax*1+0x0]
  405a70:	xor    eax,eax
  405a72:	add    rsp,0x28
  405a76:	pop    rbx
  405a77:	pop    rsi
  405a78:	pop    rdi
  405a79:	pop    rbp
  405a7a:	pop    r12
  405a7c:	pop    r13
  405a7e:	pop    r14
  405a80:	pop    r15
  405a82:	ret    
  405a83:	mov    DWORD PTR [rax],r9d
  405a86:	mov    r8d,0x4
  405a8c:	movzx  r10d,BYTE PTR [rbp-0x1]
  405a91:	add    rax,0x4
  405a95:	xor    r9d,r9d
  405a98:	xor    ecx,ecx
  405a9a:	jmp    0x4058fa
  405a9f:	nop
  405aa0:	call   0x406050
  405aa5:	jmp    0x40567f
  405aaa:	nop    WORD PTR [rax+rax*1+0x0]
  405ab0:	mov    edx,r9d
  405ab3:	mov    rax,rbx
  405ab6:	jmp    0x405710
  405abb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ac0:	test   r12,r12
  405ac3:	je     0x405dd5
  405ac9:	movzx  edx,BYTE PTR [rax]
  405acc:	jmp    0x405852
  405ad1:	mov    r15d,0x1
  405ad7:	movzx  edx,BYTE PTR [rax+0x2]
  405adb:	lea    r9,[rax+0x2]
  405adf:	movzx  edx,BYTE PTR [rdi+rdx*1]
  405ae3:	lea    ecx,[rdx-0x1]
  405ae6:	cmp    cl,0x18
  405ae9:	jbe    0x4059f6
  405aef:	mov    rbp,rax
  405af2:	xor    r10d,r10d
  405af5:	jmp    0x405734
  405afa:	nop    WORD PTR [rax+rax*1+0x0]
  405b00:	cmp    eax,0x2
  405b03:	je     0x405ca1
  405b09:	cmp    eax,0x3
  405b0c:	jne    0x4059a8
  405b12:	mov    r10d,DWORD PTR [rsp+0x90]
  405b1a:	test   r10d,r10d
  405b1d:	je     0x4059a8
  405b23:	xor    ecx,ecx
  405b25:	call   0x4065c0
  405b2a:	mov    r14,rax
  405b2d:	mov    DWORD PTR [rax+0x14],0x1
  405b34:	mov    DWORD PTR [rax+0x18],0x1
  405b3b:	mov    eax,DWORD PTR [r13+0x4]
  405b3f:	mov    rdi,QWORD PTR [rsp+0x88]
  405b47:	mov    QWORD PTR [rdi],r14
  405b4a:	mov    rdi,QWORD PTR [rsp+0x80]
  405b52:	mov    DWORD PTR [rdi],eax
  405b54:	call   0x4073d0
  405b59:	mov    DWORD PTR [rax],0x22
  405b5f:	mov    eax,0x62
  405b64:	jmp    0x405a72
  405b69:	nop    DWORD PTR [rax+0x0]
  405b70:	mov    rcx,r14
  405b73:	call   0x4066d0
  405b78:	call   0x4073d0
  405b7d:	mov    DWORD PTR [rax],0x22
  405b83:	mov    eax,0xa3
  405b88:	jmp    0x405a72
  405b8d:	nop    DWORD PTR [rax]
  405b90:	cmp    cl,0x30
  405b93:	mov    rbx,rax
  405b96:	jne    0x405bb6
  405b98:	nop    DWORD PTR [rax+rax*1+0x0]
  405ba0:	add    rbx,0x1
  405ba4:	movzx  ecx,BYTE PTR [rbx]
  405ba7:	cmp    cl,0x30
  405baa:	je     0x405ba0
  405bac:	movzx  edx,cl
  405baf:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  405bb4:	mov    edx,ecx
  405bb6:	xor    r11d,r11d
  405bb9:	test   r10b,r10b
  405bbc:	mov    r12,rax
  405bbf:	sete   r11b
  405bc3:	mov    r8d,0x1
  405bc9:	jmp    0x405829
  405bce:	mov    ebx,esi
  405bd0:	mov    rcx,r14
  405bd3:	sub    ebx,eax
  405bd5:	mov    edx,ebx
  405bd7:	sub    r12d,ebx
  405bda:	call   0x406ad0
  405bdf:	mov    r14,rax
  405be2:	lea    r15,[rax+0x18]
  405be6:	jmp    0x40595d
  405beb:	nop    DWORD PTR [rax+rax*1+0x0]
  405bf0:	xor    r15d,r15d
  405bf3:	jmp    0x405ad7
  405bf8:	mov    ebx,eax
  405bfa:	mov    rcx,r14
  405bfd:	xor    edi,edi
  405bff:	sub    ebx,esi
  405c01:	mov    edx,ebx
  405c03:	call   0x407260
  405c08:	test   eax,eax
  405c0a:	je     0x405c47
  405c0c:	lea    ecx,[rbx-0x1]
  405c0f:	mov    r8d,0x1
  405c15:	mov    dil,0x1
  405c18:	mov    eax,ecx
  405c1a:	shl    r8d,cl
  405c1d:	sar    eax,0x5
  405c20:	cdqe   
  405c22:	test   DWORD PTR [r15+rax*4],r8d
  405c26:	je     0x405c47
  405c28:	test   ecx,ecx
  405c2a:	jle    0x405e3f
  405c30:	mov    edx,ecx
  405c32:	mov    rcx,r14
  405c35:	call   0x407260
  405c3a:	test   eax,eax
  405c3c:	je     0x405e3f
  405c42:	mov    edi,0x3
  405c47:	mov    edx,ebx
  405c49:	mov    rcx,r14
  405c4c:	add    r12d,ebx
  405c4f:	call   0x405f10
  405c54:	jmp    0x40595d
  405c59:	mov    ebx,0x1
  405c5e:	test   edi,edi
  405c60:	je     0x405c84
  405c62:	mov    eax,DWORD PTR [r13+0xc]
  405c66:	cmp    eax,0x2
  405c69:	je     0x405d11
  405c6f:	cmp    eax,0x3
  405c72:	je     0x405d24
  405c78:	cmp    eax,0x1
  405c7b:	je     0x405e49
  405c81:	or     ebx,0x10
  405c84:	mov    rax,QWORD PTR [rsp+0x88]
  405c8c:	mov    QWORD PTR [rax],r14
  405c8f:	mov    rax,QWORD PTR [rsp+0x80]
  405c97:	mov    DWORD PTR [rax],r12d
  405c9a:	mov    eax,ebx
  405c9c:	jmp    0x405a72
  405ca1:	mov    r11d,DWORD PTR [rsp+0x90]
  405ca9:	test   r11d,r11d
  405cac:	jne    0x4059a8
  405cb2:	jmp    0x405b23
  405cb7:	test   edi,edi
  405cb9:	lea    ebp,[rbx-0x1]
  405cbc:	jne    0x405e35
  405cc2:	test   ebp,ebp
  405cc4:	jle    0x405cd2
  405cc6:	mov    edx,ebp
  405cc8:	mov    rcx,r14
  405ccb:	call   0x407260
  405cd0:	mov    edi,eax
  405cd2:	mov    eax,ebp
  405cd4:	mov    ecx,ebp
  405cd6:	mov    edx,edi
  405cd8:	sar    eax,0x5
  405cdb:	mov    r8d,0x1
  405ce1:	or     edx,0x2
  405ce4:	cdqe   
  405ce6:	shl    r8d,cl
  405ce9:	mov    rcx,r14
  405cec:	test   DWORD PTR [r15+rax*4],r8d
  405cf0:	cmovne edi,edx
  405cf3:	mov    edx,ebx
  405cf5:	sub    esi,ebx
  405cf7:	call   0x405f10
  405cfc:	mov    ebx,0x2
  405d01:	mov    r12d,DWORD PTR [r13+0x4]
  405d05:	jmp    0x405c5e
  405d0a:	xor    eax,eax
  405d0c:	jmp    0x4056f9
  405d11:	mov    eax,0x1
  405d16:	sub    eax,DWORD PTR [rsp+0x90]
  405d1d:	mov    DWORD PTR [rsp+0x90],eax
  405d24:	mov    eax,DWORD PTR [rsp+0x90]
  405d2b:	test   eax,eax
  405d2d:	je     0x405c81
  405d33:	mov    rcx,r14
  405d36:	movsxd rdi,DWORD PTR [r14+0x14]
  405d3a:	call   0x403430
  405d3f:	cmp    ebx,0x2
  405d42:	mov    r14,rax
  405d45:	lea    r8,[rax+0x18]
  405d49:	je     0x405ecf
  405d4f:	cmp    edi,DWORD PTR [rax+0x14]
  405d52:	jl     0x405d6d
  405d54:	and    esi,0x1f
  405d57:	je     0x405d88
  405d59:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  405d5f:	mov    edx,0x20
  405d64:	sub    edx,esi
  405d66:	xor    eax,0x1f
  405d69:	cmp    edx,eax
  405d6b:	jle    0x405d88
  405d6d:	mov    edx,0x1
  405d72:	mov    rcx,r14
  405d75:	add    r12d,0x1
  405d79:	call   0x405f10
  405d7e:	cmp    r12d,DWORD PTR [r13+0x8]
  405d82:	jg     0x405b70
  405d88:	mov    ebx,0x21
  405d8d:	jmp    0x405c84
  405d92:	mov    r8d,DWORD PTR [rsp+0x90]
  405d9a:	test   r8d,r8d
  405d9d:	jne    0x405b78
  405da3:	jmp    0x40577a
  405da8:	mov    r9d,DWORD PTR [rsp+0x90]
  405db0:	test   r9d,r9d
  405db3:	je     0x405b78
  405db9:	jmp    0x40577a
  405dbe:	xor    edx,edx
  405dc0:	jmp    0x4058ce
  405dc5:	mov    rax,r15
  405dc8:	mov    edx,0x20
  405dcd:	xor    r9d,r9d
  405dd0:	jmp    0x40592f
  405dd5:	movzx  edx,BYTE PTR [rsi+0x1]
  405dd9:	test   dl,dl
  405ddb:	je     0x405f04
  405de1:	cmp    dl,BYTE PTR [rax+0x1]
  405de4:	jne    0x405e64
  405de6:	mov    r12d,0x2
  405dec:	jmp    0x405dfb
  405dee:	xchg   ax,ax
  405df0:	add    r12,0x1
  405df4:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  405df9:	jne    0x405e64
  405dfb:	movzx  edx,BYTE PTR [rsi+r12*1]
  405e00:	test   dl,dl
  405e02:	jne    0x405df0
  405e04:	add    r12,rax
  405e07:	movzx  eax,BYTE PTR [r12]
  405e0c:	cmp    BYTE PTR [rdi+rax*1],0x0
  405e10:	mov    rdx,rax
  405e13:	mov    rax,r12
  405e16:	je     0x405852
  405e1c:	nop    DWORD PTR [rax+0x0]
  405e20:	add    rax,0x1
  405e24:	movzx  ecx,BYTE PTR [rax]
  405e27:	cmp    BYTE PTR [rdi+rcx*1],0x0
  405e2b:	mov    rdx,rcx
  405e2e:	jne    0x405e20
  405e30:	jmp    0x405852
  405e35:	mov    edi,0x1
  405e3a:	jmp    0x405cd2
  405e3f:	mov    edi,0x2
  405e44:	jmp    0x405c47
  405e49:	test   dil,0x2
  405e4d:	je     0x405c81
  405e53:	or     edi,DWORD PTR [r15]
  405e56:	and    edi,0x1
  405e59:	jne    0x405d33
  405e5f:	jmp    0x405c81
  405e64:	movzx  edx,BYTE PTR [rax]
  405e67:	xor    r12d,r12d
  405e6a:	jmp    0x405859
  405e6f:	mov    edx,DWORD PTR [rsp+0x90]
  405e76:	test   edx,edx
  405e78:	je     0x4059a0
  405e7e:	mov    DWORD PTR [r14+0x14],0x1
  405e86:	mov    DWORD PTR [r15],0x1
  405e8d:	jmp    0x405b3f
  405e92:	mov    ecx,DWORD PTR [rsp+0x90]
  405e99:	test   ecx,ecx
  405e9b:	je     0x405e7e
  405e9d:	jmp    0x4059a0
  405ea2:	cmp    ebx,esi
  405ea4:	jne    0x4059a0
  405eaa:	cmp    esi,0x1
  405ead:	jle    0x405e7e
  405eaf:	lea    edx,[rsi-0x1]
  405eb2:	mov    rcx,r14
  405eb5:	call   0x407260
  405eba:	test   eax,eax
  405ebc:	je     0x4059a0
  405ec2:	mov    eax,DWORD PTR [r13+0x4]
  405ec6:	jmp    0x405e7e
  405ec8:	xor    edx,edx
  405eca:	jmp    0x4057e1
  405ecf:	mov    eax,DWORD PTR [r13+0x0]
  405ed3:	mov    bl,0x22
  405ed5:	sub    eax,0x1
  405ed8:	cmp    eax,esi
  405eda:	jne    0x405c84
  405ee0:	mov    edx,esi
  405ee2:	mov    eax,0x1
  405ee7:	mov    ecx,esi
  405ee9:	sar    edx,0x5
  405eec:	shl    eax,cl
  405eee:	movsxd rdx,edx
  405ef1:	and    eax,DWORD PTR [r8+rdx*4]
  405ef5:	cmp    eax,0x1
  405ef8:	sbb    ebx,ebx
  405efa:	not    ebx
  405efc:	add    ebx,0x22
  405eff:	jmp    0x405c84
  405f04:	mov    r12d,0x1
  405f0a:	jmp    0x405e04
  405f0f:	nop
  405f10:	push   rbp
  405f11:	push   rdi
  405f12:	push   rsi
  405f13:	push   rbx
  405f14:	mov    rsi,rcx
  405f17:	lea    r10,[rcx+0x18]
  405f1b:	movsxd rcx,DWORD PTR [rcx+0x14]
  405f1f:	mov    eax,edx
  405f21:	sar    eax,0x5
  405f24:	cmp    eax,ecx
  405f26:	jge    0x405fb0
  405f2c:	cdqe   
  405f2e:	and    edx,0x1f
  405f31:	lea    rbx,[r10+rcx*4]
  405f35:	lea    rdi,[r10+rax*4]
  405f39:	je     0x405fc3
  405f3f:	mov    r9d,DWORD PTR [rdi]
  405f42:	lea    r8,[rdi+0x4]
  405f46:	mov    ebp,0x20
  405f4b:	mov    ecx,edx
  405f4d:	sub    ebp,edx
  405f4f:	shr    r9d,cl
  405f52:	cmp    rbx,r8
  405f55:	jbe    0x406008
  405f5b:	mov    r11,r10
  405f5e:	xchg   ax,ax
  405f60:	mov    eax,DWORD PTR [r8]
  405f63:	mov    ecx,ebp
  405f65:	add    r11,0x4
  405f69:	add    r8,0x4
  405f6d:	shl    eax,cl
  405f6f:	mov    ecx,edx
  405f71:	or     eax,r9d
  405f74:	mov    DWORD PTR [r11-0x4],eax
  405f78:	mov    r9d,DWORD PTR [r8-0x4]
  405f7c:	shr    r9d,cl
  405f7f:	cmp    rbx,r8
  405f82:	ja     0x405f60
  405f84:	sub    rbx,rdi
  405f87:	lea    rax,[rbx-0x5]
  405f8b:	shr    rax,0x2
  405f8f:	lea    rax,[r10+rax*4+0x4]
  405f94:	test   r9d,r9d
  405f97:	mov    DWORD PTR [rax],r9d
  405f9a:	je     0x405fa0
  405f9c:	add    rax,0x4
  405fa0:	sub    rax,r10
  405fa3:	shr    rax,0x2
  405fa7:	jmp    0x405ffc
  405fa9:	nop    DWORD PTR [rax+0x0]
  405fb0:	mov    DWORD PTR [rsi+0x14],0x0
  405fb7:	mov    DWORD PTR [rsi+0x18],0x0
  405fbe:	pop    rbx
  405fbf:	pop    rsi
  405fc0:	pop    rdi
  405fc1:	pop    rbp
  405fc2:	ret    
  405fc3:	cmp    rbx,rdi
  405fc6:	mov    rdx,r10
  405fc9:	mov    rax,rdi
  405fcc:	jbe    0x405fb0
  405fce:	xchg   ax,ax
  405fd0:	add    rax,0x4
  405fd4:	mov    r8d,DWORD PTR [rax-0x4]
  405fd8:	add    rdx,0x4
  405fdc:	cmp    rbx,rax
  405fdf:	mov    DWORD PTR [rdx-0x4],r8d
  405fe3:	ja     0x405fd0
  405fe5:	not    rdi
  405fe8:	lea    rax,[rdi+rbx*1]
  405fec:	shr    rax,0x2
  405ff0:	lea    rax,[rax*4+0x4]
  405ff8:	shr    rax,0x2
  405ffc:	test   eax,eax
  405ffe:	mov    DWORD PTR [rsi+0x14],eax
  406001:	je     0x405fb7
  406003:	pop    rbx
  406004:	pop    rsi
  406005:	pop    rdi
  406006:	pop    rbp
  406007:	ret    
  406008:	mov    rax,r10
  40600b:	jmp    0x405f94
  40600d:	nop    DWORD PTR [rax]
  406010:	movsxd rax,DWORD PTR [rcx+0x14]
  406014:	lea    rdx,[rcx+0x18]
  406018:	lea    r8,[rdx+rax*4]
  40601c:	cmp    rdx,r8
  40601f:	jae    0x40604b
  406021:	mov    ecx,DWORD PTR [rcx+0x18]
  406024:	xor    eax,eax
  406026:	test   ecx,ecx
  406028:	je     0x406036
  40602a:	jmp    0x406044
  40602c:	nop    DWORD PTR [rax+0x0]
  406030:	mov    ecx,DWORD PTR [rdx]
  406032:	test   ecx,ecx
  406034:	jne    0x406044
  406036:	add    rdx,0x4
  40603a:	add    eax,0x20
  40603d:	cmp    r8,rdx
  406040:	ja     0x406030
  406042:	repz ret 
  406044:	tzcnt  ecx,ecx
  406048:	add    eax,ecx
  40604a:	ret    
  40604b:	xor    eax,eax
  40604d:	ret    
  40604e:	nop
  40604f:	nop
  406050:	lea    r8,[rip+0x36f7]        # 0x40974e
  406057:	lea    rdx,[rip+0x8b62]        # 0x40ebc0
  40605e:	mov    ecx,0x10
  406063:	mov    eax,0x30
  406068:	nop    DWORD PTR [rax+rax*1+0x0]
  406070:	mov    BYTE PTR [rdx+rax*1],cl
  406073:	movzx  eax,BYTE PTR [r8+0x1]
  406078:	add    ecx,0x1
  40607b:	add    r8,0x1
  40607f:	test   al,al
  406081:	jne    0x406070
  406083:	lea    r8,[rip+0x36bd]        # 0x409747
  40608a:	mov    ecx,0x1a
  40608f:	mov    eax,0x61
  406094:	mov    BYTE PTR [rdx+rax*1],cl
  406097:	movzx  eax,BYTE PTR [r8+0x1]
  40609c:	add    ecx,0x1
  40609f:	add    r8,0x1
  4060a3:	test   al,al
  4060a5:	jne    0x406094
  4060a7:	lea    r8,[rip+0x3692]        # 0x409740
  4060ae:	mov    ecx,0x1a
  4060b3:	mov    eax,0x41
  4060b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4060c0:	mov    BYTE PTR [rdx+rax*1],cl
  4060c3:	movzx  eax,BYTE PTR [r8+0x1]
  4060c8:	add    ecx,0x1
  4060cb:	add    r8,0x1
  4060cf:	test   al,al
  4060d1:	jne    0x4060c0
  4060d3:	ret    
  4060d4:	nop
  4060d5:	nop
  4060d6:	nop
  4060d7:	nop
  4060d8:	nop
  4060d9:	nop
  4060da:	nop
  4060db:	nop
  4060dc:	nop
  4060dd:	nop
  4060de:	nop
  4060df:	nop
  4060e0:	push   r15
  4060e2:	push   r14
  4060e4:	push   r13
  4060e6:	push   r12
  4060e8:	push   rbp
  4060e9:	push   rdi
  4060ea:	push   rsi
  4060eb:	push   rbx
  4060ec:	sub    rsp,0x48
  4060f0:	mov    r14,QWORD PTR [rip+0x38b9]        # 0x4099b0
  4060f7:	mov    QWORD PTR [rsp+0x90],rcx
  4060ff:	cmp    BYTE PTR [r14+0x30],0x0
  406104:	je     0x4063d6
  40610a:	mov    eax,DWORD PTR [rdx]
  40610c:	mov    edx,eax
  40610e:	sar    edx,0x5
  406111:	and    eax,0x1f
  406114:	movsxd rdx,edx
  406117:	mov    DWORD PTR [rsp+0x3c],eax
  40611b:	mov    rax,QWORD PTR [rsp+0x90]
  406123:	lea    rdi,[r8+rdx*4]
  406127:	lea    rdx,[rdi+0x4]
  40612b:	mov    rax,QWORD PTR [rax]
  40612e:	cmove  rdx,rdi
  406132:	mov    QWORD PTR [rsp+0x30],rdx
  406137:	lea    rsi,[rdx-0x4]
  40613b:	mov    DWORD PTR [rdx-0x4],0x0
  406142:	jmp    0x406148
  406144:	add    rax,0x1
  406148:	movzx  edx,BYTE PTR [rax+0x1]
  40614c:	mov    ecx,edx
  40614e:	sub    edx,0x1
  406151:	cmp    edx,0x1f
  406154:	jbe    0x406144
  406156:	cmp    cl,0x30
  406159:	je     0x4063f4
  40615f:	movzx  edx,BYTE PTR [rax+0x1]
  406163:	xor    r9d,r9d
  406166:	xor    r15d,r15d
  406169:	xor    r12d,r12d
  40616c:	test   edx,edx
  40616e:	mov    rbp,rsi
  406171:	mov    r11,rsi
  406174:	lea    rbx,[rax+0x1]
  406178:	je     0x406220
  40617e:	xchg   ax,ax
  406180:	mov    ecx,edx
  406182:	movzx  ecx,BYTE PTR [r14+rcx*1]
  406187:	test   cl,cl
  406189:	jne    0x4062f4
  40618f:	cmp    edx,0x20
  406192:	ja     0x4063a5
  406198:	cmp    r12d,r15d
  40619b:	jle    0x406335
  4061a1:	cmp    r9d,0x7
  4061a5:	jg     0x4061fa
  4061a7:	cmp    r11,rbp
  4061aa:	jae    0x4061fa
  4061ac:	mov    edi,0x8
  4061b1:	mov    edx,DWORD PTR [r11]
  4061b4:	mov    r13d,0x20
  4061ba:	sub    edi,r9d
  4061bd:	mov    QWORD PTR [rsp+0x28],rax
  4061c2:	mov    r9,r11
  4061c5:	shl    edi,0x2
  4061c8:	sub    r13d,edi
  4061cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4061d0:	mov    r10d,DWORD PTR [r9+0x4]
  4061d4:	mov    ecx,r13d
  4061d7:	add    r9,0x4
  4061db:	mov    eax,r10d
  4061de:	shl    eax,cl
  4061e0:	mov    ecx,edi
  4061e2:	or     edx,eax
  4061e4:	mov    DWORD PTR [r9-0x4],edx
  4061e8:	mov    edx,r10d
  4061eb:	shr    edx,cl
  4061ed:	mov    DWORD PTR [r9],edx
  4061f0:	cmp    rbp,r9
  4061f3:	ja     0x4061d0
  4061f5:	mov    rax,QWORD PTR [rsp+0x28]
  4061fa:	cmp    r11,r8
  4061fd:	ja     0x406320
  406203:	mov    rax,rbx
  406206:	mov    r9d,0x8
  40620c:	nop    DWORD PTR [rax+0x0]
  406210:	movzx  edx,BYTE PTR [rax+0x1]
  406214:	lea    rbx,[rax+0x1]
  406218:	test   edx,edx
  40621a:	jne    0x406180
  406220:	test   r12d,r12d
  406223:	mov    eax,0x4
  406228:	je     0x4062e3
  40622e:	mov    r10,r11
  406231:	cmp    r9d,0x7
  406235:	jg     0x406283
  406237:	cmp    rbp,r11
  40623a:	jbe    0x406283
  40623c:	mov    edi,0x8
  406241:	mov    eax,DWORD PTR [r11]
  406244:	mov    r12d,0x20
  40624a:	sub    edi,r9d
  40624d:	mov    r9,r11
  406250:	shl    edi,0x2
  406253:	sub    r12d,edi
  406256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406260:	mov    ebx,DWORD PTR [r9+0x4]
  406264:	mov    ecx,r12d
  406267:	add    r9,0x4
  40626b:	mov    edx,ebx
  40626d:	shl    edx,cl
  40626f:	mov    ecx,edi
  406271:	or     eax,edx
  406273:	mov    DWORD PTR [r9-0x4],eax
  406277:	mov    eax,ebx
  406279:	shr    eax,cl
  40627b:	mov    DWORD PTR [r9],eax
  40627e:	cmp    rbp,r9
  406281:	ja     0x406260
  406283:	cmp    r8,r11
  406286:	jae    0x406424
  40628c:	mov    rax,r8
  40628f:	nop
  406290:	add    r10,0x4
  406294:	mov    edx,DWORD PTR [r10-0x4]
  406298:	add    rax,0x4
  40629c:	cmp    rsi,r10
  40629f:	mov    DWORD PTR [rax-0x4],edx
  4062a2:	jae    0x406290
  4062a4:	add    rax,0x4
  4062a8:	mov    DWORD PTR [rax-0x4],0x0
  4062af:	cmp    rsi,rax
  4062b2:	jae    0x4062a4
  4062b4:	mov    rax,QWORD PTR [rsp+0x30]
  4062b9:	mov    eax,DWORD PTR [rax-0x4]
  4062bc:	test   eax,eax
  4062be:	je     0x4062d3
  4062c0:	jmp    0x40641a
  4062c5:	sub    rsi,0x4
  4062c9:	mov    eax,DWORD PTR [rsi]
  4062cb:	test   eax,eax
  4062cd:	jne    0x40641a
  4062d3:	cmp    r8,rsi
  4062d6:	jne    0x4062c5
  4062d8:	mov    DWORD PTR [rsi],0x1
  4062de:	mov    eax,0x5
  4062e3:	add    rsp,0x48
  4062e7:	pop    rbx
  4062e8:	pop    rsi
  4062e9:	pop    rdi
  4062ea:	pop    rbp
  4062eb:	pop    r12
  4062ed:	pop    r13
  4062ef:	pop    r14
  4062f1:	pop    r15
  4062f3:	ret    
  4062f4:	add    r9d,0x1
  4062f8:	add    r12d,0x1
  4062fc:	cmp    r9d,0x8
  406300:	jg     0x406380
  406302:	mov    eax,DWORD PTR [r11]
  406305:	shl    eax,0x4
  406308:	and    ecx,0xf
  40630b:	or     ecx,eax
  40630d:	mov    rax,rbx
  406310:	mov    DWORD PTR [r11],ecx
  406313:	jmp    0x406210
  406318:	nop    DWORD PTR [rax+rax*1+0x0]
  406320:	lea    rbp,[r11-0x4]
  406324:	mov    DWORD PTR [r11-0x4],0x0
  40632c:	mov    r15d,r12d
  40632f:	xor    r9d,r9d
  406332:	mov    r11,rbp
  406335:	movzx  edx,BYTE PTR [rax+0x2]
  406339:	mov    rax,rbx
  40633c:	cmp    dl,0x20
  40633f:	ja     0x40634e
  406341:	add    rax,0x1
  406345:	movzx  edx,BYTE PTR [rax+0x1]
  406349:	cmp    dl,0x20
  40634c:	jbe    0x406341
  40634e:	cmp    dl,0x30
  406351:	jne    0x406210
  406357:	movzx  edx,BYTE PTR [rax+0x2]
  40635b:	and    edx,0xffffffdf
  40635e:	cmp    dl,0x58
  406361:	jne    0x406210
  406367:	cmp    BYTE PTR [rax+0x3],0x21
  40636b:	lea    rdx,[rax+0x2]
  40636f:	cmovae rax,rdx
  406373:	jmp    0x406210
  406378:	nop    DWORD PTR [rax+rax*1+0x0]
  406380:	cmp    r11,r8
  406383:	mov    rax,rbx
  406386:	jbe    0x406210
  40638c:	mov    DWORD PTR [r11-0x4],0x0
  406394:	xor    eax,eax
  406396:	sub    r11,0x4
  40639a:	mov    r9d,0x1
  4063a0:	jmp    0x406308
  4063a5:	cmp    edx,0x29
  4063a8:	mov    rcx,rbx
  4063ab:	sete   dl
  4063ae:	test   r12d,r12d
  4063b1:	je     0x406450
  4063b7:	test   dl,dl
  4063b9:	je     0x406454
  4063bf:	mov    rbx,QWORD PTR [rsp+0x90]
  4063c7:	add    rax,0x2
  4063cb:	mov    r10,r11
  4063ce:	mov    QWORD PTR [rbx],rax
  4063d1:	jmp    0x406231
  4063d6:	mov    QWORD PTR [rsp+0x30],r8
  4063db:	mov    QWORD PTR [rsp+0x28],rdx
  4063e0:	call   0x406050
  4063e5:	mov    r8,QWORD PTR [rsp+0x30]
  4063ea:	mov    rdx,QWORD PTR [rsp+0x28]
  4063ef:	jmp    0x40610a
  4063f4:	movzx  edx,BYTE PTR [rax+0x2]
  4063f8:	and    edx,0xffffffdf
  4063fb:	cmp    dl,0x58
  4063fe:	jne    0x40615f
  406404:	movzx  edx,BYTE PTR [rax+0x3]
  406408:	cmp    dl,0x20
  40640b:	jbe    0x40615f
  406411:	add    rax,0x2
  406415:	jmp    0x406163
  40641a:	mov    eax,0x5
  40641f:	jmp    0x4062e3
  406424:	mov    edx,DWORD PTR [rsp+0x3c]
  406428:	test   edx,edx
  40642a:	je     0x4062b4
  406430:	mov    ecx,0x20
  406435:	sub    ecx,DWORD PTR [rsp+0x3c]
  406439:	mov    rbx,QWORD PTR [rsp+0x30]
  40643e:	mov    eax,0xffffffff
  406443:	shr    eax,cl
  406445:	and    eax,DWORD PTR [rbx-0x4]
  406448:	mov    DWORD PTR [rbx-0x4],eax
  40644b:	jmp    0x4062bc
  406450:	test   dl,dl
  406452:	jne    0x406472
  406454:	movsx  eax,BYTE PTR [rbx+0x1]
  406458:	lea    rcx,[rbx+0x1]
  40645c:	test   eax,eax
  40645e:	jne    0x40646d
  406460:	jmp    0x40648b
  406462:	add    rcx,0x1
  406466:	movsx  eax,BYTE PTR [rcx]
  406469:	test   eax,eax
  40646b:	je     0x40648b
  40646d:	cmp    eax,0x29
  406470:	jne    0x406462
  406472:	mov    rax,QWORD PTR [rsp+0x90]
  40647a:	add    rcx,0x1
  40647e:	mov    QWORD PTR [rax],rcx
  406481:	mov    eax,0x4
  406486:	jmp    0x4062e3
  40648b:	mov    al,0x4
  40648d:	jmp    0x4062e3
  406492:	nop
  406493:	nop
  406494:	nop
  406495:	nop
  406496:	nop
  406497:	nop
  406498:	nop
  406499:	nop
  40649a:	nop
  40649b:	nop
  40649c:	nop
  40649d:	nop
  40649e:	nop
  40649f:	nop
  4064a0:	push   rsi
  4064a1:	push   rbx
  4064a2:	sub    rsp,0x28
  4064a6:	mov    eax,DWORD PTR [rip+0x8124]        # 0x40e5d0
  4064ac:	movsxd rsi,ecx
  4064af:	cmp    eax,0x2
  4064b2:	je     0x40651d
  4064b4:	test   eax,eax
  4064b6:	je     0x4064e2
  4064b8:	cmp    eax,0x1
  4064bb:	jne    0x4064db
  4064bd:	mov    rbx,QWORD PTR [rip+0x8f54]        # 0x40f418
  4064c4:	mov    ecx,0x1
  4064c9:	call   rbx
  4064cb:	mov    eax,DWORD PTR [rip+0x80ff]        # 0x40e5d0
  4064d1:	cmp    eax,0x1
  4064d4:	je     0x4064c4
  4064d6:	cmp    eax,0x2
  4064d9:	je     0x40651d
  4064db:	add    rsp,0x28
  4064df:	pop    rbx
  4064e0:	pop    rsi
  4064e1:	ret    
  4064e2:	mov    al,0x1
  4064e4:	xchg   DWORD PTR [rip+0x80e6],eax        # 0x40e5d0
  4064ea:	test   eax,eax
  4064ec:	jne    0x406540
  4064ee:	lea    rcx,[rip+0x810b]        # 0x40e600
  4064f5:	mov    rbx,QWORD PTR [rip+0x8edc]        # 0x40f3d8
  4064fc:	call   rbx
  4064fe:	lea    rcx,[rip+0x8123]        # 0x40e628
  406505:	call   rbx
  406507:	lea    rcx,[rip+0x62]        # 0x406570
  40650e:	call   0x401d70
  406513:	mov    DWORD PTR [rip+0x80b3],0x2        # 0x40e5d0
  40651d:	lea    rdx,[rsi+rsi*4]
  406521:	lea    rax,[rip+0x80d8]        # 0x40e600
  406528:	lea    rcx,[rax+rdx*8]
  40652c:	mov    rax,QWORD PTR [rip+0x8e65]        # 0x40f398
  406533:	add    rsp,0x28
  406537:	pop    rbx
  406538:	pop    rsi
  406539:	rex.W jmp rax
  40653c:	nop    DWORD PTR [rax+0x0]
  406540:	cmp    eax,0x2
  406543:	je     0x406560
  406545:	mov    eax,DWORD PTR [rip+0x8085]        # 0x40e5d0
  40654b:	cmp    eax,0x1
  40654e:	je     0x4064bd
  406554:	jmp    0x4064d6
  406556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406560:	mov    DWORD PTR [rip+0x8066],0x2        # 0x40e5d0
  40656a:	jmp    0x40651d
  40656c:	nop    DWORD PTR [rax+0x0]
  406570:	push   rbx
  406571:	sub    rsp,0x20
  406575:	mov    eax,0x3
  40657a:	xchg   DWORD PTR [rip+0x8050],eax        # 0x40e5d0
  406580:	cmp    eax,0x2
  406583:	je     0x406590
  406585:	add    rsp,0x20
  406589:	pop    rbx
  40658a:	ret    
  40658b:	nop    DWORD PTR [rax+rax*1+0x0]
  406590:	mov    rbx,QWORD PTR [rip+0x8df9]        # 0x40f390
  406597:	lea    rcx,[rip+0x8062]        # 0x40e600
  40659e:	call   rbx
  4065a0:	lea    rcx,[rip+0x8081]        # 0x40e628
  4065a7:	mov    rax,rbx
  4065aa:	add    rsp,0x20
  4065ae:	pop    rbx
  4065af:	rex.W jmp rax
  4065b2:	nop    DWORD PTR [rax+0x0]
  4065b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4065c0:	push   rdi
  4065c1:	push   rsi
  4065c2:	push   rbx
  4065c3:	sub    rsp,0x20
  4065c7:	mov    ebx,ecx
  4065c9:	xor    ecx,ecx
  4065cb:	call   0x4064a0
  4065d0:	cmp    ebx,0x9
  4065d3:	jg     0x406610
  4065d5:	lea    rdx,[rip+0x7fa4]        # 0x40e580
  4065dc:	movsxd rcx,ebx
  4065df:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4065e3:	test   rdi,rdi
  4065e6:	je     0x406670
  4065ec:	cmp    DWORD PTR [rip+0x7fdd],0x2        # 0x40e5d0
  4065f3:	mov    r8,QWORD PTR [rdi]
  4065f6:	mov    QWORD PTR [rdx+rcx*8],r8
  4065fa:	jne    0x406656
  4065fc:	lea    rcx,[rip+0x7ffd]        # 0x40e600
  406603:	call   QWORD PTR [rip+0x8dd7]        # 0x40f3e0
  406609:	jmp    0x406656
  40660b:	nop    DWORD PTR [rax+rax*1+0x0]
  406610:	mov    eax,0x1
  406615:	mov    ecx,ebx
  406617:	shl    eax,cl
  406619:	mov    esi,eax
  40661b:	lea    eax,[rax-0x1]
  40661e:	cdqe   
  406620:	lea    rdx,[rax*4+0x27]
  406628:	shr    rdx,0x3
  40662c:	mov    edx,edx
  40662e:	lea    rcx,[rdx*8+0x0]
  406636:	call   0x407340
  40663b:	test   rax,rax
  40663e:	mov    rdi,rax
  406641:	je     0x4066ca
  406647:	cmp    DWORD PTR [rip+0x7f82],0x2        # 0x40e5d0
  40664e:	mov    DWORD PTR [rdi+0x8],ebx
  406651:	mov    DWORD PTR [rdi+0xc],esi
  406654:	je     0x4065fc
  406656:	mov    DWORD PTR [rdi+0x14],0x0
  40665d:	mov    DWORD PTR [rdi+0x10],0x0
  406664:	mov    rax,rdi
  406667:	add    rsp,0x20
  40666b:	pop    rbx
  40666c:	pop    rsi
  40666d:	pop    rdi
  40666e:	ret    
  40666f:	nop
  406670:	mov    ecx,ebx
  406672:	mov    eax,0x1
  406677:	mov    rdi,QWORD PTR [rip+0x1a12]        # 0x408090
  40667e:	shl    eax,cl
  406680:	lea    rcx,[rip+0x75f9]        # 0x40dc80
  406687:	lea    edx,[rax-0x1]
  40668a:	mov    esi,eax
  40668c:	mov    rax,rdi
  40668f:	movsxd rdx,edx
  406692:	sub    rax,rcx
  406695:	lea    rdx,[rdx*4+0x27]
  40669d:	mov    rcx,rax
  4066a0:	sar    rcx,0x3
  4066a4:	shr    rdx,0x3
  4066a8:	mov    edx,edx
  4066aa:	add    rcx,rdx
  4066ad:	cmp    rcx,0x120
  4066b4:	ja     0x40662e
  4066ba:	lea    rdx,[rdi+rdx*8]
  4066be:	mov    QWORD PTR [rip+0x19cb],rdx        # 0x408090
  4066c5:	jmp    0x406647
  4066ca:	xor    eax,eax
  4066cc:	jmp    0x406667
  4066ce:	xchg   ax,ax
  4066d0:	push   rbx
  4066d1:	sub    rsp,0x20
  4066d5:	test   rcx,rcx
  4066d8:	je     0x406709
  4066da:	cmp    DWORD PTR [rcx+0x8],0x9
  4066de:	jg     0x406710
  4066e0:	mov    rbx,rcx
  4066e3:	xor    ecx,ecx
  4066e5:	call   0x4064a0
  4066ea:	movsxd rdx,DWORD PTR [rbx+0x8]
  4066ee:	lea    rax,[rip+0x7e8b]        # 0x40e580
  4066f5:	cmp    DWORD PTR [rip+0x7ed4],0x2        # 0x40e5d0
  4066fc:	mov    rcx,QWORD PTR [rax+rdx*8]
  406700:	mov    QWORD PTR [rax+rdx*8],rbx
  406704:	mov    QWORD PTR [rbx],rcx
  406707:	je     0x406720
  406709:	add    rsp,0x20
  40670d:	pop    rbx
  40670e:	ret    
  40670f:	nop
  406710:	add    rsp,0x20
  406714:	pop    rbx
  406715:	jmp    0x407358
  40671a:	nop    WORD PTR [rax+rax*1+0x0]
  406720:	mov    rax,QWORD PTR [rip+0x8cb9]        # 0x40f3e0
  406727:	lea    rcx,[rip+0x7ed2]        # 0x40e600
  40672e:	add    rsp,0x20
  406732:	pop    rbx
  406733:	rex.W jmp rax
  406736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406740:	push   rbp
  406741:	push   rdi
  406742:	push   rsi
  406743:	push   rbx
  406744:	sub    rsp,0x28
  406748:	mov    esi,DWORD PTR [rcx+0x14]
  40674b:	xor    r9d,r9d
  40674e:	lea    r10,[rcx+0x18]
  406752:	mov    rdi,rcx
  406755:	movsxd rbx,r8d
  406758:	movsxd rdx,edx
  40675b:	nop    DWORD PTR [rax+rax*1+0x0]
  406760:	mov    eax,DWORD PTR [r10+r9*4]
  406764:	imul   rax,rdx
  406768:	add    rax,rbx
  40676b:	mov    rbx,rax
  40676e:	mov    DWORD PTR [r10+r9*4],eax
  406772:	add    r9,0x1
  406776:	shr    rbx,0x20
  40677a:	cmp    esi,r9d
  40677d:	jg     0x406760
  40677f:	test   rbx,rbx
  406782:	mov    rax,rdi
  406785:	je     0x40679c
  406787:	cmp    esi,DWORD PTR [rdi+0xc]
  40678a:	jge    0x4067a5
  40678c:	movsxd rax,esi
  40678f:	add    esi,0x1
  406792:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  406796:	mov    DWORD PTR [rdi+0x14],esi
  406799:	mov    rax,rdi
  40679c:	add    rsp,0x28
  4067a0:	pop    rbx
  4067a1:	pop    rsi
  4067a2:	pop    rdi
  4067a3:	pop    rbp
  4067a4:	ret    
  4067a5:	mov    eax,DWORD PTR [rdi+0x8]
  4067a8:	lea    ecx,[rax+0x1]
  4067ab:	call   0x4065c0
  4067b0:	test   rax,rax
  4067b3:	mov    rbp,rax
  4067b6:	je     0x4067ee
  4067b8:	lea    rcx,[rax+0x10]
  4067bc:	movsxd rax,DWORD PTR [rdi+0x14]
  4067c0:	lea    rdx,[rdi+0x10]
  4067c4:	lea    r8,[rax*4+0x8]
  4067cc:	call   0x407338
  4067d1:	mov    rcx,rdi
  4067d4:	mov    rdi,rbp
  4067d7:	call   0x4066d0
  4067dc:	movsxd rax,esi
  4067df:	add    esi,0x1
  4067e2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4067e6:	mov    DWORD PTR [rdi+0x14],esi
  4067e9:	mov    rax,rdi
  4067ec:	jmp    0x40679c
  4067ee:	xor    eax,eax
  4067f0:	jmp    0x40679c
  4067f2:	nop    DWORD PTR [rax+0x0]
  4067f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406800:	push   rbx
  406801:	sub    rsp,0x20
  406805:	mov    ebx,ecx
  406807:	mov    ecx,0x1
  40680c:	call   0x4065c0
  406811:	test   rax,rax
  406814:	je     0x406820
  406816:	mov    DWORD PTR [rax+0x18],ebx
  406819:	mov    DWORD PTR [rax+0x14],0x1
  406820:	add    rsp,0x20
  406824:	pop    rbx
  406825:	ret    
  406826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406830:	push   r14
  406832:	push   r13
  406834:	push   r12
  406836:	push   rbp
  406837:	push   rdi
  406838:	push   rsi
  406839:	push   rbx
  40683a:	sub    rsp,0x20
  40683e:	movsxd r13,DWORD PTR [rcx+0x14]
  406842:	movsxd rbx,DWORD PTR [rdx+0x14]
  406846:	mov    r12,rcx
  406849:	mov    r14,rdx
  40684c:	cmp    r13d,ebx
  40684f:	jl     0x406951
  406855:	mov    eax,ebx
  406857:	movsxd rbx,r13d
  40685a:	movsxd r13,eax
  40685d:	xor    eax,eax
  40685f:	lea    esi,[rbx+r13*1]
  406863:	cmp    esi,DWORD PTR [r12+0xc]
  406868:	setg   al
  40686b:	add    eax,DWORD PTR [r12+0x8]
  406870:	mov    ecx,eax
  406872:	call   0x4065c0
  406877:	test   rax,rax
  40687a:	je     0x40695c
  406880:	lea    rdi,[rax+0x18]
  406884:	movsxd rdx,esi
  406887:	lea    rbp,[rdi+rdx*4]
  40688b:	mov    r8,rdi
  40688e:	cmp    rdi,rbp
  406891:	jae    0x4068a3
  406893:	mov    DWORD PTR [r8],0x0
  40689a:	add    r8,0x4
  40689e:	cmp    rbp,r8
  4068a1:	ja     0x406893
  4068a3:	lea    rdx,[r14+0x18]
  4068a7:	add    r12,0x18
  4068ab:	lea    rbx,[r12+rbx*4]
  4068af:	lea    r13,[rdx+r13*4]
  4068b3:	cmp    rdx,r13
  4068b6:	jae    0x406919
  4068b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068c0:	add    rdx,0x4
  4068c4:	mov    r11d,DWORD PTR [rdx-0x4]
  4068c8:	test   r11d,r11d
  4068cb:	je     0x406910
  4068cd:	mov    r9,rdi
  4068d0:	mov    r8,r12
  4068d3:	xor    r10d,r10d
  4068d6:	jmp    0x4068e3
  4068d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4068e0:	mov    r9,r14
  4068e3:	add    r8,0x4
  4068e7:	mov    ecx,DWORD PTR [r8-0x4]
  4068eb:	mov    r14d,DWORD PTR [r9]
  4068ee:	imul   rcx,r11
  4068f2:	add    rcx,r14
  4068f5:	lea    r14,[r9+0x4]
  4068f9:	add    rcx,r10
  4068fc:	mov    r10,rcx
  4068ff:	mov    DWORD PTR [r14-0x4],ecx
  406903:	shr    r10,0x20
  406907:	cmp    rbx,r8
  40690a:	ja     0x4068e0
  40690c:	mov    DWORD PTR [r9+0x4],r10d
  406910:	add    rdi,0x4
  406914:	cmp    r13,rdx
  406917:	ja     0x4068c0
  406919:	test   esi,esi
  40691b:	jle    0x40693f
  40691d:	mov    r8d,DWORD PTR [rbp-0x4]
  406921:	lea    rdx,[rbp-0x4]
  406925:	test   r8d,r8d
  406928:	je     0x40693a
  40692a:	jmp    0x40693f
  40692c:	nop    DWORD PTR [rax+0x0]
  406930:	sub    rdx,0x4
  406934:	mov    ecx,DWORD PTR [rdx]
  406936:	test   ecx,ecx
  406938:	jne    0x40693f
  40693a:	sub    esi,0x1
  40693d:	jne    0x406930
  40693f:	mov    DWORD PTR [rax+0x14],esi
  406942:	add    rsp,0x20
  406946:	pop    rbx
  406947:	pop    rsi
  406948:	pop    rdi
  406949:	pop    rbp
  40694a:	pop    r12
  40694c:	pop    r13
  40694e:	pop    r14
  406950:	ret    
  406951:	mov    r12,rdx
  406954:	mov    r14,rcx
  406957:	jmp    0x40685d
  40695c:	xor    eax,eax
  40695e:	jmp    0x406942
  406960:	push   rbp
  406961:	push   rdi
  406962:	push   rsi
  406963:	push   rbx
  406964:	sub    rsp,0x28
  406968:	mov    eax,edx
  40696a:	mov    rbp,rcx
  40696d:	mov    ebx,edx
  40696f:	and    eax,0x3
  406972:	jne    0x406a00
  406978:	sar    ebx,0x2
  40697b:	mov    rax,rbp
  40697e:	test   ebx,ebx
  406980:	je     0x4069cc
  406982:	mov    rdi,QWORD PTR [rip+0x72b7]        # 0x40dc40
  406989:	test   rdi,rdi
  40698c:	jne    0x4069a2
  40698e:	jmp    0x406a4d
  406993:	sar    ebx,1
  406995:	je     0x4069c9
  406997:	mov    rsi,QWORD PTR [rdi]
  40699a:	test   rsi,rsi
  40699d:	je     0x4069d5
  40699f:	mov    rdi,rsi
  4069a2:	test   bl,0x1
  4069a5:	je     0x406993
  4069a7:	mov    rdx,rdi
  4069aa:	mov    rcx,rbp
  4069ad:	call   0x406830
  4069b2:	test   rax,rax
  4069b5:	mov    rsi,rax
  4069b8:	je     0x406a23
  4069ba:	mov    rcx,rbp
  4069bd:	mov    rbp,rsi
  4069c0:	call   0x4066d0
  4069c5:	sar    ebx,1
  4069c7:	jne    0x406997
  4069c9:	mov    rax,rbp
  4069cc:	add    rsp,0x28
  4069d0:	pop    rbx
  4069d1:	pop    rsi
  4069d2:	pop    rdi
  4069d3:	pop    rbp
  4069d4:	ret    
  4069d5:	mov    ecx,0x1
  4069da:	call   0x4064a0
  4069df:	mov    rsi,QWORD PTR [rdi]
  4069e2:	test   rsi,rsi
  4069e5:	je     0x406a2e
  4069e7:	cmp    DWORD PTR [rip+0x7be2],0x2        # 0x40e5d0
  4069ee:	jne    0x40699f
  4069f0:	lea    rcx,[rip+0x7c31]        # 0x40e628
  4069f7:	call   QWORD PTR [rip+0x89e3]        # 0x40f3e0
  4069fd:	jmp    0x40699f
  4069ff:	nop
  406a00:	sub    eax,0x1
  406a03:	lea    rdx,[rip+0x2d76]        # 0x409780
  406a0a:	xor    r8d,r8d
  406a0d:	cdqe   
  406a0f:	mov    edx,DWORD PTR [rdx+rax*4]
  406a12:	call   0x406740
  406a17:	test   rax,rax
  406a1a:	mov    rbp,rax
  406a1d:	jne    0x406978
  406a23:	xor    eax,eax
  406a25:	add    rsp,0x28
  406a29:	pop    rbx
  406a2a:	pop    rsi
  406a2b:	pop    rdi
  406a2c:	pop    rbp
  406a2d:	ret    
  406a2e:	mov    rdx,rdi
  406a31:	mov    rcx,rdi
  406a34:	call   0x406830
  406a39:	test   rax,rax
  406a3c:	mov    rsi,rax
  406a3f:	mov    QWORD PTR [rdi],rax
  406a42:	je     0x406a23
  406a44:	mov    QWORD PTR [rax],0x0
  406a4b:	jmp    0x4069e7
  406a4d:	mov    ecx,0x1
  406a52:	call   0x4064a0
  406a57:	mov    rdi,QWORD PTR [rip+0x71e2]        # 0x40dc40
  406a5e:	test   rdi,rdi
  406a61:	je     0x406a82
  406a63:	cmp    DWORD PTR [rip+0x7b66],0x2        # 0x40e5d0
  406a6a:	jne    0x4069a2
  406a70:	lea    rcx,[rip+0x7bb1]        # 0x40e628
  406a77:	call   QWORD PTR [rip+0x8963]        # 0x40f3e0
  406a7d:	jmp    0x4069a2
  406a82:	mov    ecx,0x1
  406a87:	call   0x4065c0
  406a8c:	test   rax,rax
  406a8f:	mov    rdi,rax
  406a92:	je     0x406ab2
  406a94:	mov    DWORD PTR [rax+0x18],0x271
  406a9b:	mov    DWORD PTR [rax+0x14],0x1
  406aa2:	mov    QWORD PTR [rip+0x7197],rax        # 0x40dc40
  406aa9:	mov    QWORD PTR [rax],0x0
  406ab0:	jmp    0x406a63
  406ab2:	mov    QWORD PTR [rip+0x7183],0x0        # 0x40dc40
  406abd:	xor    eax,eax
  406abf:	jmp    0x406a25
  406ac4:	xchg   ax,ax
  406ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ad0:	push   r13
  406ad2:	push   r12
  406ad4:	push   rbp
  406ad5:	push   rdi
  406ad6:	push   rsi
  406ad7:	push   rbx
  406ad8:	sub    rsp,0x28
  406adc:	mov    rdi,rcx
  406adf:	mov    ebp,edx
  406ae1:	mov    esi,edx
  406ae3:	mov    r12d,DWORD PTR [rdi+0x14]
  406ae7:	sar    ebp,0x5
  406aea:	mov    eax,DWORD PTR [rdi+0xc]
  406aed:	mov    ecx,DWORD PTR [rcx+0x8]
  406af0:	add    r12d,ebp
  406af3:	lea    ebx,[r12+0x1]
  406af8:	cmp    ebx,eax
  406afa:	jle    0x406b09
  406afc:	nop    DWORD PTR [rax+0x0]
  406b00:	add    eax,eax
  406b02:	add    ecx,0x1
  406b05:	cmp    ebx,eax
  406b07:	jg     0x406b00
  406b09:	call   0x4065c0
  406b0e:	test   rax,rax
  406b11:	mov    r13,rax
  406b14:	je     0x406bdf
  406b1a:	test   ebp,ebp
  406b1c:	lea    r8,[rax+0x18]
  406b20:	jle    0x406bd7
  406b26:	lea    eax,[rbp-0x1]
  406b29:	lea    r9,[r8+rax*4+0x4]
  406b2e:	xchg   ax,ax
  406b30:	add    r8,0x4
  406b34:	mov    DWORD PTR [r8-0x4],0x0
  406b3c:	cmp    r8,r9
  406b3f:	jne    0x406b30
  406b41:	movsxd rax,DWORD PTR [rdi+0x14]
  406b45:	lea    r8,[rdi+0x18]
  406b49:	mov    edx,esi
  406b4b:	and    edx,0x1f
  406b4e:	lea    rbp,[r8+rax*4]
  406b52:	je     0x406bc0
  406b54:	mov    eax,0x20
  406b59:	xor    r11d,r11d
  406b5c:	sub    eax,edx
  406b5e:	jmp    0x406b63
  406b60:	mov    r9,rsi
  406b63:	mov    r10d,DWORD PTR [r8]
  406b66:	mov    ecx,edx
  406b68:	lea    rsi,[r9+0x4]
  406b6c:	add    r8,0x4
  406b70:	shl    r10d,cl
  406b73:	mov    ecx,eax
  406b75:	or     r10d,r11d
  406b78:	mov    DWORD PTR [rsi-0x4],r10d
  406b7c:	mov    r11d,DWORD PTR [r8-0x4]
  406b80:	shr    r11d,cl
  406b83:	cmp    rbp,r8
  406b86:	ja     0x406b60
  406b88:	add    r12d,0x2
  406b8c:	test   r11d,r11d
  406b8f:	mov    DWORD PTR [r9+0x4],r11d
  406b93:	cmovne ebx,r12d
  406b97:	sub    ebx,0x1
  406b9a:	mov    rcx,rdi
  406b9d:	mov    DWORD PTR [r13+0x14],ebx
  406ba1:	call   0x4066d0
  406ba6:	mov    rax,r13
  406ba9:	add    rsp,0x28
  406bad:	pop    rbx
  406bae:	pop    rsi
  406baf:	pop    rdi
  406bb0:	pop    rbp
  406bb1:	pop    r12
  406bb3:	pop    r13
  406bb5:	ret    
  406bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bc0:	add    r8,0x4
  406bc4:	mov    edx,DWORD PTR [r8-0x4]
  406bc8:	add    r9,0x4
  406bcc:	cmp    rbp,r8
  406bcf:	mov    DWORD PTR [r9-0x4],edx
  406bd3:	ja     0x406bc0
  406bd5:	jmp    0x406b97
  406bd7:	mov    r9,r8
  406bda:	jmp    0x406b41
  406bdf:	xor    eax,eax
  406be1:	jmp    0x406ba9
  406be3:	nop    DWORD PTR [rax]
  406be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406bf0:	movsxd r8,DWORD PTR [rdx+0x14]
  406bf4:	mov    eax,DWORD PTR [rcx+0x14]
  406bf7:	sub    eax,r8d
  406bfa:	test   eax,eax
  406bfc:	jne    0x406c32
  406bfe:	shl    r8,0x2
  406c02:	add    rcx,0x18
  406c06:	lea    rax,[rcx+r8*1]
  406c0a:	lea    rdx,[rdx+r8*1+0x18]
  406c0f:	jmp    0x406c16
  406c11:	cmp    rcx,rax
  406c14:	jae    0x406c30
  406c16:	sub    rdx,0x4
  406c1a:	sub    rax,0x4
  406c1e:	mov    r9d,DWORD PTR [rdx]
  406c21:	cmp    DWORD PTR [rax],r9d
  406c24:	je     0x406c11
  406c26:	sbb    eax,eax
  406c28:	or     eax,0x1
  406c2b:	ret    
  406c2c:	nop    DWORD PTR [rax+0x0]
  406c30:	xor    eax,eax
  406c32:	repz ret 
  406c34:	xchg   ax,ax
  406c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c40:	push   rdi
  406c41:	push   rsi
  406c42:	push   rbx
  406c43:	sub    rsp,0x20
  406c47:	mov    rsi,rcx
  406c4a:	mov    rdi,rdx
  406c4d:	call   0x406bf0
  406c52:	test   eax,eax
  406c54:	je     0x406d40
  406c5a:	mov    ebx,0x0
  406c5f:	js     0x406d62
  406c65:	mov    ecx,DWORD PTR [rsi+0x8]
  406c68:	call   0x4065c0
  406c6d:	test   rax,rax
  406c70:	je     0x406d72
  406c76:	movsxd rdx,DWORD PTR [rsi+0x14]
  406c7a:	lea    rcx,[rsi+0x18]
  406c7e:	mov    DWORD PTR [rax+0x10],ebx
  406c81:	lea    r10,[rdi+0x18]
  406c85:	xor    r9d,r9d
  406c88:	mov    rbx,rdx
  406c8b:	lea    rsi,[rcx+rdx*4]
  406c8f:	movsxd rdx,DWORD PTR [rdi+0x14]
  406c93:	lea    rdi,[r10+rdx*4]
  406c97:	lea    rdx,[rax+0x18]
  406c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  406ca0:	add    rcx,0x4
  406ca4:	add    r10,0x4
  406ca8:	mov    r11d,DWORD PTR [r10-0x4]
  406cac:	mov    r8d,DWORD PTR [rcx-0x4]
  406cb0:	add    rdx,0x4
  406cb4:	sub    r8,r11
  406cb7:	sub    r8,r9
  406cba:	mov    r9,r8
  406cbd:	mov    r11d,r8d
  406cc0:	mov    DWORD PTR [rdx-0x4],r8d
  406cc4:	shr    r9,0x20
  406cc8:	and    r9d,0x1
  406ccc:	cmp    rdi,r10
  406ccf:	ja     0x406ca0
  406cd1:	cmp    rsi,rcx
  406cd4:	mov    rdi,rdx
  406cd7:	mov    r10,rcx
  406cda:	jbe    0x406d16
  406cdc:	nop    DWORD PTR [rax+0x0]
  406ce0:	add    rcx,0x4
  406ce4:	mov    r8d,DWORD PTR [rcx-0x4]
  406ce8:	add    rdx,0x4
  406cec:	sub    r8,r9
  406cef:	mov    r9,r8
  406cf2:	mov    r11d,r8d
  406cf5:	mov    DWORD PTR [rdx-0x4],r8d
  406cf9:	shr    r9,0x20
  406cfd:	and    r9d,0x1
  406d01:	cmp    rsi,rcx
  406d04:	ja     0x406ce0
  406d06:	not    r10
  406d09:	lea    rdx,[r10+rsi*1]
  406d0d:	shr    rdx,0x2
  406d11:	lea    rdx,[rdi+rdx*4+0x4]
  406d16:	sub    rdx,0x4
  406d1a:	test   r11d,r11d
  406d1d:	jne    0x406d2d
  406d1f:	nop
  406d20:	sub    rdx,0x4
  406d24:	mov    ecx,DWORD PTR [rdx]
  406d26:	sub    ebx,0x1
  406d29:	test   ecx,ecx
  406d2b:	je     0x406d20
  406d2d:	mov    DWORD PTR [rax+0x14],ebx
  406d30:	add    rsp,0x20
  406d34:	pop    rbx
  406d35:	pop    rsi
  406d36:	pop    rdi
  406d37:	ret    
  406d38:	nop    DWORD PTR [rax+rax*1+0x0]
  406d40:	xor    ecx,ecx
  406d42:	call   0x4065c0
  406d47:	test   rax,rax
  406d4a:	je     0x406d72
  406d4c:	mov    DWORD PTR [rax+0x14],0x1
  406d53:	mov    DWORD PTR [rax+0x18],0x0
  406d5a:	add    rsp,0x20
  406d5e:	pop    rbx
  406d5f:	pop    rsi
  406d60:	pop    rdi
  406d61:	ret    
  406d62:	mov    rax,rsi
  406d65:	mov    bl,0x1
  406d67:	mov    rsi,rdi
  406d6a:	mov    rdi,rax
  406d6d:	jmp    0x406c65
  406d72:	xor    eax,eax
  406d74:	jmp    0x406d30
  406d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d80:	push   rsi
  406d81:	push   rbx
  406d82:	sub    rsp,0x18
  406d86:	movsxd rax,DWORD PTR [rcx+0x14]
  406d8a:	lea    r10,[rcx+0x18]
  406d8e:	mov    ecx,0x20
  406d93:	lea    r9,[r10+rax*4]
  406d97:	mov    eax,DWORD PTR [r9-0x4]
  406d9b:	lea    rbx,[r9-0x4]
  406d9f:	bsr    r8d,eax
  406da3:	xor    r8d,0x1f
  406da7:	sub    ecx,r8d
  406daa:	cmp    r8d,0xa
  406dae:	mov    DWORD PTR [rdx],ecx
  406db0:	jg     0x406e00
  406db2:	mov    ecx,0xb
  406db7:	mov    r11d,eax
  406dba:	xor    esi,esi
  406dbc:	sub    ecx,r8d
  406dbf:	shr    r11d,cl
  406dc2:	or     r11d,0x3ff00000
  406dc9:	shl    r11,0x20
  406dcd:	cmp    r10,rbx
  406dd0:	jae    0x406dd8
  406dd2:	mov    esi,DWORD PTR [r9-0x8]
  406dd6:	shr    esi,cl
  406dd8:	lea    ecx,[r8+0x15]
  406ddc:	shl    eax,cl
  406dde:	mov    edx,eax
  406de0:	mov    eax,esi
  406de2:	or     eax,edx
  406de4:	or     rax,r11
  406de7:	mov    QWORD PTR [rsp+0x8],rax
  406dec:	movsd  xmm0,QWORD PTR [rsp+0x8]
  406df2:	add    rsp,0x18
  406df6:	pop    rbx
  406df7:	pop    rsi
  406df8:	ret    
  406df9:	nop    DWORD PTR [rax+0x0]
  406e00:	cmp    r10,rbx
  406e03:	jae    0x406e60
  406e05:	mov    r11d,r8d
  406e08:	lea    rsi,[r9-0x8]
  406e0c:	mov    edx,DWORD PTR [r9-0x8]
  406e10:	sub    r11d,0xb
  406e14:	je     0x406e82
  406e16:	mov    ebx,0x2b
  406e1b:	mov    ecx,r11d
  406e1e:	sub    ebx,r8d
  406e21:	shl    eax,cl
  406e23:	mov    r8d,edx
  406e26:	mov    ecx,ebx
  406e28:	shr    r8d,cl
  406e2b:	or     eax,r8d
  406e2e:	xor    r8d,r8d
  406e31:	or     eax,0x3ff00000
  406e36:	shl    rax,0x20
  406e3a:	cmp    r10,rsi
  406e3d:	jae    0x406e46
  406e3f:	mov    r8d,DWORD PTR [r9-0xc]
  406e43:	shr    r8d,cl
  406e46:	mov    ecx,r11d
  406e49:	shl    edx,cl
  406e4b:	or     r8d,edx
  406e4e:	movabs rdx,0xffffffff00000000
  406e58:	and    rax,rdx
  406e5b:	or     rax,r8
  406e5e:	jmp    0x406de7
  406e60:	mov    r11d,r8d
  406e63:	sub    r11d,0xb
  406e67:	je     0x406e80
  406e69:	mov    ecx,r11d
  406e6c:	xor    r8d,r8d
  406e6f:	xor    edx,edx
  406e71:	shl    eax,cl
  406e73:	or     eax,0x3ff00000
  406e78:	shl    rax,0x20
  406e7c:	jmp    0x406e46
  406e7e:	xchg   ax,ax
  406e80:	xor    edx,edx
  406e82:	or     eax,0x3ff00000
  406e87:	shl    rax,0x20
  406e8b:	or     rax,rdx
  406e8e:	jmp    0x406de7
  406e93:	nop    DWORD PTR [rax]
  406e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ea0:	push   rdi
  406ea1:	push   rsi
  406ea2:	push   rbx
  406ea3:	sub    rsp,0x20
  406ea7:	mov    ecx,0x1
  406eac:	movq   rbx,xmm0
  406eb1:	mov    rdi,rdx
  406eb4:	mov    rsi,r8
  406eb7:	call   0x4065c0
  406ebc:	test   rax,rax
  406ebf:	je     0x406fa5
  406ec5:	mov    r9,rbx
  406ec8:	shr    r9,0x20
  406ecc:	mov    r10d,r9d
  406ecf:	and    r9d,0x7fffffff
  406ed6:	and    r10d,0xfffff
  406edd:	shr    r9d,0x14
  406ee1:	mov    edx,r10d
  406ee4:	or     edx,0x100000
  406eea:	test   r9d,r9d
  406eed:	cmovne r10d,edx
  406ef1:	test   ebx,ebx
  406ef3:	jne    0x406f34
  406ef5:	xor    ecx,ecx
  406ef7:	mov    DWORD PTR [rax+0x14],0x1
  406efe:	mov    edx,0x1
  406f03:	tzcnt  ecx,r10d
  406f08:	shr    r10d,cl
  406f0b:	test   r9d,r9d
  406f0e:	lea    r11d,[rcx+0x20]
  406f12:	mov    DWORD PTR [rax+0x18],r10d
  406f16:	je     0x406f73
  406f18:	lea    edx,[r11+r9*1-0x433]
  406f20:	mov    DWORD PTR [rdi],edx
  406f22:	mov    edx,0x35
  406f27:	sub    edx,r11d
  406f2a:	mov    DWORD PTR [rsi],edx
  406f2c:	add    rsp,0x20
  406f30:	pop    rbx
  406f31:	pop    rsi
  406f32:	pop    rdi
  406f33:	ret    
  406f34:	xor    r11d,r11d
  406f37:	tzcnt  r11d,ebx
  406f3c:	mov    ecx,r11d
  406f3f:	shr    ebx,cl
  406f41:	test   r11d,r11d
  406f44:	je     0x406fa0
  406f46:	mov    ecx,0x20
  406f4b:	mov    edx,r10d
  406f4e:	sub    ecx,r11d
  406f51:	shl    edx,cl
  406f53:	mov    ecx,r11d
  406f56:	or     ebx,edx
  406f58:	shr    r10d,cl
  406f5b:	mov    DWORD PTR [rax+0x18],ebx
  406f5e:	cmp    r10d,0x1
  406f62:	mov    DWORD PTR [rax+0x1c],r10d
  406f66:	sbb    edx,edx
  406f68:	add    edx,0x2
  406f6b:	test   r9d,r9d
  406f6e:	mov    DWORD PTR [rax+0x14],edx
  406f71:	jne    0x406f18
  406f73:	movsxd rcx,edx
  406f76:	shl    edx,0x5
  406f79:	sub    r11d,0x432
  406f80:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  406f85:	mov    DWORD PTR [rdi],r11d
  406f88:	xor    ecx,0x1f
  406f8b:	sub    edx,ecx
  406f8d:	mov    DWORD PTR [rsi],edx
  406f8f:	add    rsp,0x20
  406f93:	pop    rbx
  406f94:	pop    rsi
  406f95:	pop    rdi
  406f96:	ret    
  406f97:	nop    WORD PTR [rax+rax*1+0x0]
  406fa0:	mov    DWORD PTR [rax+0x18],ebx
  406fa3:	jmp    0x406f5e
  406fa5:	xor    eax,eax
  406fa7:	jmp    0x406f2c
  406fa9:	nop    DWORD PTR [rax+0x0]
  406fb0:	mov    rax,rcx
  406fb3:	lea    rcx,[rdx+0x1]
  406fb7:	movzx  edx,BYTE PTR [rdx]
  406fba:	test   dl,dl
  406fbc:	mov    BYTE PTR [rax],dl
  406fbe:	je     0x406fd2
  406fc0:	add    rcx,0x1
  406fc4:	movzx  edx,BYTE PTR [rcx-0x1]
  406fc8:	add    rax,0x1
  406fcc:	test   dl,dl
  406fce:	mov    BYTE PTR [rax],dl
  406fd0:	jne    0x406fc0
  406fd2:	repz ret 
  406fd4:	nop
  406fd5:	nop
  406fd6:	nop
  406fd7:	nop
  406fd8:	nop
  406fd9:	nop
  406fda:	nop
  406fdb:	nop
  406fdc:	nop
  406fdd:	nop
  406fde:	nop
  406fdf:	nop
  406fe0:	push   r13
  406fe2:	push   r12
  406fe4:	push   rbp
  406fe5:	push   rdi
  406fe6:	push   rsi
  406fe7:	push   rbx
  406fe8:	sub    rsp,0x28
  406fec:	mov    rsi,rcx
  406fef:	lea    ecx,[r8+0x8]
  406ff3:	mov    ebp,edx
  406ff5:	mov    edx,0x38e38e39
  406ffa:	mov    edi,r8d
  406ffd:	mov    ebx,r9d
  407000:	mov    eax,ecx
  407002:	sar    ecx,0x1f
  407005:	imul   edx
  407007:	sar    edx,1
  407009:	sub    edx,ecx
  40700b:	cmp    edx,0x1
  40700e:	jle    0x4070d4
  407014:	mov    eax,0x1
  407019:	xor    ecx,ecx
  40701b:	nop    DWORD PTR [rax+rax*1+0x0]
  407020:	add    eax,eax
  407022:	add    ecx,0x1
  407025:	cmp    edx,eax
  407027:	jg     0x407020
  407029:	call   0x4065c0
  40702e:	cmp    ebp,0x9
  407031:	mov    DWORD PTR [rax+0x18],ebx
  407034:	mov    DWORD PTR [rax+0x14],0x1
  40703b:	jle    0x4070c0
  407041:	lea    rbx,[rsi+0x9]
  407045:	lea    r12d,[rbp-0xa]
  407049:	lea    r13,[rsi+r12*1+0xa]
  40704e:	mov    rsi,rbx
  407051:	add    rsi,0x1
  407055:	movsx  r8d,BYTE PTR [rsi-0x1]
  40705a:	mov    edx,0xa
  40705f:	mov    rcx,rax
  407062:	sub    r8d,0x30
  407066:	call   0x406740
  40706b:	cmp    rsi,r13
  40706e:	jne    0x407051
  407070:	movsxd rdx,DWORD PTR [rsp+0x80]
  407078:	lea    r9,[r12+rdx*1+0x1]
  40707d:	add    rbx,r9
  407080:	cmp    edi,ebp
  407082:	jle    0x4070af
  407084:	sub    edi,0x1
  407087:	sub    edi,ebp
  407089:	lea    rsi,[rbx+rdi*1+0x1]
  40708e:	xchg   ax,ax
  407090:	add    rbx,0x1
  407094:	movsx  r8d,BYTE PTR [rbx-0x1]
  407099:	mov    edx,0xa
  40709e:	mov    rcx,rax
  4070a1:	sub    r8d,0x30
  4070a5:	call   0x406740
  4070aa:	cmp    rbx,rsi
  4070ad:	jne    0x407090
  4070af:	add    rsp,0x28
  4070b3:	pop    rbx
  4070b4:	pop    rsi
  4070b5:	pop    rdi
  4070b6:	pop    rbp
  4070b7:	pop    r12
  4070b9:	pop    r13
  4070bb:	ret    
  4070bc:	nop    DWORD PTR [rax+0x0]
  4070c0:	movsxd rdx,DWORD PTR [rsp+0x80]
  4070c8:	mov    ebp,0x9
  4070cd:	lea    rbx,[rsi+rdx*1+0x9]
  4070d2:	jmp    0x407080
  4070d4:	xor    ecx,ecx
  4070d6:	jmp    0x407029
  4070db:	nop    DWORD PTR [rax+rax*1+0x0]
  4070e0:	push   rdi
  4070e1:	push   rsi
  4070e2:	push   rbx
  4070e3:	sub    rsp,0x50
  4070e7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4070ec:	mov    rsi,rdx
  4070ef:	lea    rdx,[rsp+0x38]
  4070f4:	mov    rdi,rcx
  4070f7:	call   0x406d80
  4070fc:	lea    rdx,[rsp+0x3c]
  407101:	mov    rcx,rsi
  407104:	movq   rbx,xmm0
  407109:	movapd xmm6,xmm0
  40710d:	call   0x406d80
  407112:	mov    eax,DWORD PTR [rsp+0x38]
  407116:	sub    eax,DWORD PTR [rsp+0x3c]
  40711a:	movq   rcx,xmm0
  40711f:	mov    r8d,eax
  407122:	mov    eax,DWORD PTR [rdi+0x14]
  407125:	sub    eax,DWORD PTR [rsi+0x14]
  407128:	shl    eax,0x5
  40712b:	add    eax,r8d
  40712e:	test   eax,eax
  407130:	jle    0x407170
  407132:	movq   rdx,xmm6
  407137:	shl    eax,0x14
  40713a:	shr    rdx,0x20
  40713e:	add    eax,edx
  407140:	shl    rax,0x20
  407144:	mov    rdx,rax
  407147:	mov    eax,ebx
  407149:	or     rax,rdx
  40714c:	mov    QWORD PTR [rsp+0x28],rax
  407151:	movsd  xmm6,QWORD PTR [rsp+0x28]
  407157:	divsd  xmm6,xmm0
  40715b:	movapd xmm0,xmm6
  40715f:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  407164:	add    rsp,0x50
  407168:	pop    rbx
  407169:	pop    rsi
  40716a:	pop    rdi
  40716b:	ret    
  40716c:	nop    DWORD PTR [rax+0x0]
  407170:	movq   rdx,xmm0
  407175:	shl    eax,0x14
  407178:	shr    rdx,0x20
  40717c:	mov    ebx,edx
  40717e:	sub    ebx,eax
  407180:	mov    rax,rbx
  407183:	shl    rax,0x20
  407187:	mov    rdx,rax
  40718a:	mov    eax,ecx
  40718c:	or     rax,rdx
  40718f:	mov    QWORD PTR [rsp+0x28],rax
  407194:	movsd  xmm0,QWORD PTR [rsp+0x28]
  40719a:	jmp    0x407157
  40719c:	nop    DWORD PTR [rax+0x0]
  4071a0:	mov    r8,QWORD PTR [rcx]
  4071a3:	jmp    0x4071be
  4071a5:	movsx  eax,BYTE PTR [r8]
  4071a9:	lea    r11d,[rax-0x41]
  4071ad:	lea    r10d,[rax+0x20]
  4071b1:	cmp    r11d,0x19
  4071b5:	cmovbe eax,r10d
  4071b9:	cmp    eax,r9d
  4071bc:	jne    0x4071e0
  4071be:	add    rdx,0x1
  4071c2:	movsx  r9d,BYTE PTR [rdx-0x1]
  4071c7:	add    r8,0x1
  4071cb:	test   r9d,r9d
  4071ce:	jne    0x4071a5
  4071d0:	mov    QWORD PTR [rcx],r8
  4071d3:	mov    eax,0x1
  4071d8:	ret    
  4071d9:	nop    DWORD PTR [rax+0x0]
  4071e0:	xor    eax,eax
  4071e2:	ret    
  4071e3:	nop    DWORD PTR [rax]
  4071e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071f0:	sub    edx,0x1
  4071f3:	lea    rax,[r8+0x18]
  4071f7:	sar    edx,0x5
  4071fa:	movsxd rdx,edx
  4071fd:	lea    r11,[rcx+rdx*4+0x4]
  407202:	movsxd rdx,DWORD PTR [r8+0x14]
  407206:	lea    r10,[rax+rdx*4]
  40720a:	cmp    rax,r10
  40720d:	jae    0x40724b
  40720f:	mov    rdx,rcx
  407212:	add    rax,0x4
  407216:	mov    r9d,DWORD PTR [rax-0x4]
  40721a:	add    rdx,0x4
  40721e:	cmp    r10,rax
  407221:	mov    DWORD PTR [rdx-0x4],r9d
  407225:	ja     0x407212
  407227:	sub    r10,r8
  40722a:	lea    rax,[r10-0x19]
  40722e:	shr    rax,0x2
  407232:	lea    rcx,[rcx+rax*4+0x4]
  407237:	cmp    r11,rcx
  40723a:	jbe    0x407250
  40723c:	nop    DWORD PTR [rax+0x0]
  407240:	add    rcx,0x4
  407244:	mov    DWORD PTR [rcx-0x4],0x0
  40724b:	cmp    r11,rcx
  40724e:	ja     0x407240
  407250:	repz ret 
  407252:	nop    DWORD PTR [rax+0x0]
  407256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407260:	movsxd rax,DWORD PTR [rcx+0x14]
  407264:	mov    r9d,edx
  407267:	lea    r8,[rcx+0x18]
  40726b:	sar    r9d,0x5
  40726f:	cmp    eax,r9d
  407272:	jge    0x4072a1
  407274:	lea    r9,[r8+rax*4]
  407278:	cmp    r8,r9
  40727b:	jae    0x4072e6
  40727d:	mov    eax,DWORD PTR [r9-0x4]
  407281:	lea    rdx,[r9-0x4]
  407285:	test   eax,eax
  407287:	je     0x40729a
  407289:	jmp    0x4072e0
  40728b:	nop    DWORD PTR [rax+rax*1+0x0]
  407290:	sub    rdx,0x4
  407294:	mov    ecx,DWORD PTR [rdx]
  407296:	test   ecx,ecx
  407298:	jne    0x4072e0
  40729a:	cmp    r8,rdx
  40729d:	jb     0x407290
  40729f:	repz ret 
  4072a1:	jle    0x4072d0
  4072a3:	mov    ecx,edx
  4072a5:	movsxd r9,r9d
  4072a8:	and    ecx,0x1f
  4072ab:	lea    r9,[r8+r9*4]
  4072af:	je     0x407278
  4072b1:	mov    r10d,DWORD PTR [r9]
  4072b4:	mov    eax,r10d
  4072b7:	shr    eax,cl
  4072b9:	shl    eax,cl
  4072bb:	mov    edx,eax
  4072bd:	mov    eax,0x1
  4072c2:	cmp    edx,r10d
  4072c5:	je     0x407278
  4072c7:	repz ret 
  4072c9:	nop    DWORD PTR [rax+0x0]
  4072d0:	movsxd r9,r9d
  4072d3:	lea    r9,[r8+r9*4]
  4072d7:	jmp    0x407278
  4072d9:	nop    DWORD PTR [rax+0x0]
  4072e0:	mov    eax,0x1
  4072e5:	ret    
  4072e6:	xor    eax,eax
  4072e8:	ret    
  4072e9:	nop
  4072ea:	nop
  4072eb:	nop
  4072ec:	nop
  4072ed:	nop
  4072ee:	nop
  4072ef:	nop
  4072f0:	jmp    QWORD PTR [rip+0x829a]        # 0x40f590
  4072f6:	nop
  4072f7:	nop
  4072f8:	jmp    QWORD PTR [rip+0x828a]        # 0x40f588
  4072fe:	nop
  4072ff:	nop
  407300:	jmp    QWORD PTR [rip+0x827a]        # 0x40f580
  407306:	nop
  407307:	nop
  407308:	jmp    QWORD PTR [rip+0x826a]        # 0x40f578
  40730e:	nop
  40730f:	nop
  407310:	jmp    QWORD PTR [rip+0x825a]        # 0x40f570
  407316:	nop
  407317:	nop
  407318:	jmp    QWORD PTR [rip+0x824a]        # 0x40f568
  40731e:	nop
  40731f:	nop
  407320:	jmp    QWORD PTR [rip+0x823a]        # 0x40f560
  407326:	nop
  407327:	nop
  407328:	jmp    QWORD PTR [rip+0x822a]        # 0x40f558
  40732e:	nop
  40732f:	nop
  407330:	jmp    QWORD PTR [rip+0x821a]        # 0x40f550
  407336:	nop
  407337:	nop
  407338:	jmp    QWORD PTR [rip+0x820a]        # 0x40f548
  40733e:	nop
  40733f:	nop
  407340:	jmp    QWORD PTR [rip+0x81fa]        # 0x40f540
  407346:	nop
  407347:	nop
  407348:	jmp    QWORD PTR [rip+0x81ea]        # 0x40f538
  40734e:	nop
  40734f:	nop
  407350:	jmp    QWORD PTR [rip+0x81da]        # 0x40f530
  407356:	nop
  407357:	nop
  407358:	jmp    QWORD PTR [rip+0x81ca]        # 0x40f528
  40735e:	nop
  40735f:	nop
  407360:	jmp    QWORD PTR [rip+0x81ba]        # 0x40f520
  407366:	nop
  407367:	nop
  407368:	jmp    QWORD PTR [rip+0x81aa]        # 0x40f518
  40736e:	nop
  40736f:	nop
  407370:	jmp    QWORD PTR [rip+0x819a]        # 0x40f510
  407376:	nop
  407377:	nop
  407378:	jmp    QWORD PTR [rip+0x818a]        # 0x40f508
  40737e:	nop
  40737f:	nop
  407380:	jmp    QWORD PTR [rip+0x817a]        # 0x40f500
  407386:	nop
  407387:	nop
  407388:	jmp    QWORD PTR [rip+0x816a]        # 0x40f4f8
  40738e:	nop
  40738f:	nop
  407390:	jmp    QWORD PTR [rip+0x815a]        # 0x40f4f0
  407396:	nop
  407397:	nop
  407398:	jmp    QWORD PTR [rip+0x814a]        # 0x40f4e8
  40739e:	nop
  40739f:	nop
  4073a0:	jmp    QWORD PTR [rip+0x813a]        # 0x40f4e0
  4073a6:	nop
  4073a7:	nop
  4073a8:	jmp    QWORD PTR [rip+0x812a]        # 0x40f4d8
  4073ae:	nop
  4073af:	nop
  4073b0:	jmp    QWORD PTR [rip+0x811a]        # 0x40f4d0
  4073b6:	nop
  4073b7:	nop
  4073b8:	jmp    QWORD PTR [rip+0x810a]        # 0x40f4c8
  4073be:	nop
  4073bf:	nop
  4073c0:	jmp    QWORD PTR [rip+0x80fa]        # 0x40f4c0
  4073c6:	nop
  4073c7:	nop
  4073c8:	jmp    QWORD PTR [rip+0x80ea]        # 0x40f4b8
  4073ce:	nop
  4073cf:	nop
  4073d0:	jmp    QWORD PTR [rip+0x80d2]        # 0x40f4a8
  4073d6:	nop
  4073d7:	nop
  4073d8:	jmp    QWORD PTR [rip+0x80c2]        # 0x40f4a0
  4073de:	nop
  4073df:	nop
  4073e0:	jmp    QWORD PTR [rip+0x80b2]        # 0x40f498
  4073e6:	nop
  4073e7:	nop
  4073e8:	jmp    QWORD PTR [rip+0x809a]        # 0x40f488
  4073ee:	nop
  4073ef:	nop
  4073f0:	jmp    QWORD PTR [rip+0x808a]        # 0x40f480
  4073f6:	nop
  4073f7:	nop
  4073f8:	jmp    QWORD PTR [rip+0x807a]        # 0x40f478
  4073fe:	nop
  4073ff:	nop
  407400:	jmp    QWORD PTR [rip+0x806a]        # 0x40f470
  407406:	nop
  407407:	nop
  407408:	jmp    QWORD PTR [rip+0x8052]        # 0x40f460
  40740e:	nop
  40740f:	nop
  407410:	jmp    QWORD PTR [rip+0x8042]        # 0x40f458
  407416:	nop
  407417:	nop
  407418:	jmp    QWORD PTR [rip+0x8032]        # 0x40f450
  40741e:	nop
  40741f:	nop
  407420:	mov    rax,QWORD PTR [rip+0x7259]        # 0x40e680
  407427:	ret    
  407428:	nop    DWORD PTR [rax+rax*1+0x0]
  407430:	mov    rax,rcx
  407433:	xchg   QWORD PTR [rip+0x7246],rax        # 0x40e680
  40743a:	ret    
  40743b:	nop
  40743c:	nop
  40743d:	nop
  40743e:	nop
  40743f:	nop
  407440:	jmp    QWORD PTR [rip+0x7ffa]        # 0x40f440
  407446:	nop
  407447:	nop
  407448:	jmp    QWORD PTR [rip+0x7fea]        # 0x40f438
  40744e:	nop
  40744f:	nop
  407450:	jmp    QWORD PTR [rip+0x7fda]        # 0x40f430
  407456:	nop
  407457:	nop
  407458:	jmp    QWORD PTR [rip+0x7fca]        # 0x40f428
  40745e:	nop
  40745f:	nop
  407460:	jmp    QWORD PTR [rip+0x7fba]        # 0x40f420
  407466:	nop
  407467:	nop
  407468:	jmp    QWORD PTR [rip+0x7faa]        # 0x40f418
  40746e:	nop
  40746f:	nop
  407470:	jmp    QWORD PTR [rip+0x7f9a]        # 0x40f410
  407476:	nop
  407477:	nop
  407478:	jmp    QWORD PTR [rip+0x7f8a]        # 0x40f408
  40747e:	nop
  40747f:	nop
  407480:	jmp    QWORD PTR [rip+0x7f7a]        # 0x40f400
  407486:	nop
  407487:	nop
  407488:	jmp    QWORD PTR [rip+0x7f6a]        # 0x40f3f8
  40748e:	nop
  40748f:	nop
  407490:	jmp    QWORD PTR [rip+0x7f5a]        # 0x40f3f0
  407496:	nop
  407497:	nop
  407498:	jmp    QWORD PTR [rip+0x7f4a]        # 0x40f3e8
  40749e:	nop
  40749f:	nop
  4074a0:	jmp    QWORD PTR [rip+0x7f3a]        # 0x40f3e0
  4074a6:	nop
  4074a7:	nop
  4074a8:	jmp    QWORD PTR [rip+0x7f2a]        # 0x40f3d8
  4074ae:	nop
  4074af:	nop
  4074b0:	jmp    QWORD PTR [rip+0x7f1a]        # 0x40f3d0
  4074b6:	nop
  4074b7:	nop
  4074b8:	jmp    QWORD PTR [rip+0x7f0a]        # 0x40f3c8
  4074be:	nop
  4074bf:	nop
  4074c0:	jmp    QWORD PTR [rip+0x7efa]        # 0x40f3c0
  4074c6:	nop
  4074c7:	nop
  4074c8:	jmp    QWORD PTR [rip+0x7eea]        # 0x40f3b8
  4074ce:	nop
  4074cf:	nop
  4074d0:	jmp    QWORD PTR [rip+0x7eda]        # 0x40f3b0
  4074d6:	nop
  4074d7:	nop
  4074d8:	jmp    QWORD PTR [rip+0x7eca]        # 0x40f3a8
  4074de:	nop
  4074df:	nop
  4074e0:	jmp    QWORD PTR [rip+0x7eba]        # 0x40f3a0
  4074e6:	nop
  4074e7:	nop
  4074e8:	jmp    QWORD PTR [rip+0x7eaa]        # 0x40f398
  4074ee:	nop
  4074ef:	nop
  4074f0:	jmp    QWORD PTR [rip+0x7e9a]        # 0x40f390
  4074f6:	nop
  4074f7:	nop
  4074f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407500:	push   r15
  407502:	push   r14
  407504:	push   r13
  407506:	push   r12
  407508:	push   rbp
  407509:	push   rdi
  40750a:	push   rsi
  40750b:	push   rbx
  40750c:	sub    rsp,0x158
  407513:	movaps XMMWORD PTR [rsp+0x120],xmm6
  40751b:	movaps XMMWORD PTR [rsp+0x130],xmm7
  407523:	movaps XMMWORD PTR [rsp+0x140],xmm8
  40752c:	mov    r13,rdx
  40752f:	mov    r12d,ecx
  407532:	call   0x401e30
  407537:	mov    rcx,QWORD PTR [r13+0x0]
  40753b:	mov    edx,0x2f
  407540:	call   0x4072f8
  407545:	mov    rbp,QWORD PTR [rip+0x25d4]        # 0x409b20
  40754c:	test   rax,rax
  40754f:	mov    QWORD PTR [rbp+0x8],rax
  407553:	je     0x4079ce
  407559:	lea    rbx,[rax+0x1]
  40755d:	mov    QWORD PTR [rbp+0x8],rbx
  407561:	lea    rdi,[rip+0x1a98]        # 0x409000
  407568:	mov    ecx,0x3
  40756d:	mov    rsi,rbx
  407570:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407572:	sete   al
  407575:	cmp    r12d,0x1
  407579:	movzx  eax,al
  40757c:	mov    DWORD PTR [rip+0x5cde],eax        # 0x40d260
  407582:	jle    0x407ed3
  407588:	mov    rax,r13
  40758b:	sub    r12d,0x1
  40758f:	test   r12d,r12d
  407592:	jle    0x4075d0
  407594:	mov    rbx,QWORD PTR [rax+0x8]
  407598:	lea    rsi,[rax+0x8]
  40759c:	movzx  eax,BYTE PTR [rbx]
  40759f:	cmp    al,0x2d
  4075a1:	je     0x4076c0
  4075a7:	cmp    al,0x2b
  4075a9:	je     0x407730
  4075af:	movsxd rax,DWORD PTR [rip+0x5a8e]        # 0x40d044
  4075b6:	sub    r12d,0x1
  4075ba:	test   r12d,r12d
  4075bd:	lea    edx,[rax+0x1]
  4075c0:	mov    QWORD PTR [r13+rax*8+0x0],rbx
  4075c5:	mov    rax,rsi
  4075c8:	mov    DWORD PTR [rip+0x5a76],edx        # 0x40d044
  4075ce:	jg     0x407594
  4075d0:	mov    ecx,DWORD PTR [rip+0x5a72]        # 0x40d048
  4075d6:	lea    rdx,[rip+0x5aa3]        # 0x40d080
  4075dd:	call   0x401640
  4075e2:	mov    rsi,QWORD PTR [rip+0x25b7]        # 0x409ba0
  4075e9:	cmp    DWORD PTR [rsi],0x0
  4075ec:	je     0x4078cb
  4075f2:	cmp    DWORD PTR [rip+0x5a4b],0x0        # 0x40d044
  4075f9:	jne    0x4079db
  4075ff:	mov    rbx,QWORD PTR [rip+0x230a]        # 0x409910
  407606:	movsd  xmm1,QWORD PTR [rbx+0x28]
  40760b:	movsd  xmm0,QWORD PTR [rbx+0x30]
  407610:	call   0x401530
  407615:	mov    ecx,0xa
  40761a:	call   0x407328
  40761f:	mov    eax,DWORD PTR [rsi]
  407621:	movsd  xmm6,QWORD PTR [rbx+0x20]
  407626:	lea    edx,[rax-0x1]
  407629:	test   eax,eax
  40762b:	mov    DWORD PTR [rsi],edx
  40762d:	je     0x407728
  407633:	mov    rdi,QWORD PTR [rip+0x24d6]        # 0x409b10
  40763a:	nop    WORD PTR [rax+rax*1+0x0]
  407640:	addsd  xmm6,QWORD PTR [rdi]
  407644:	movapd xmm0,xmm6
  407648:	call   0x401cb0
  40764d:	movapd xmm6,xmm0
  407651:	movsd  QWORD PTR [rbx+0x20],xmm0
  407656:	call   0x401a60
  40765b:	call   0x401ac0
  407660:	movsd  xmm1,QWORD PTR [rbx+0x28]
  407665:	movsd  xmm0,QWORD PTR [rbx+0x30]
  40766a:	call   0x401530
  40766f:	mov    ecx,0xa
  407674:	call   0x407328
  407679:	mov    eax,DWORD PTR [rsi]
  40767b:	lea    edx,[rax-0x1]
  40767e:	test   eax,eax
  407680:	mov    DWORD PTR [rsi],edx
  407682:	jne    0x407640
  407684:	jmp    0x407728
  407689:	nop    DWORD PTR [rax+0x0]
  407690:	cmp    r8b,0x46
  407694:	je     0x4077b7
  40769a:	jle    0x407785
  4076a0:	cmp    r8b,0x49
  4076a4:	jne    0x4077fb
  4076aa:	mov    DWORD PTR [rip+0x5bac],0x1        # 0x40d260
  4076b4:	mov    rbx,rdi
  4076b7:	nop    WORD PTR [rax+rax*1+0x0]
  4076c0:	movsx  r8d,BYTE PTR [rbx+0x1]
  4076c5:	lea    rdi,[rbx+0x1]
  4076c9:	cmp    r8b,0x61
  4076cd:	je     0x4077d7
  4076d3:	jle    0x407690
  4076d5:	cmp    r8b,0x70
  4076d9:	je     0x4077e9
  4076df:	jg     0x407760
  4076e1:	cmp    r8b,0x66
  4076e5:	je     0x40781a
  4076eb:	cmp    r8b,0x6c
  4076ef:	jne    0x407801
  4076f5:	movsx  r8d,BYTE PTR [rbx+0x2]
  4076fa:	cmp    r8b,0x65
  4076fe:	je     0x407982
  407704:	test   r8b,r8b
  407707:	je     0x407982
  40770d:	cmp    r8b,0x75
  407711:	je     0x407efe
  407717:	lea    rdx,[rip+0x199f]        # 0x4090bd
  40771e:	mov    ecx,0x1
  407723:	call   0x401ca0
  407728:	xor    ecx,ecx
  40772a:	call   0x407390
  40772f:	nop
  407730:	movsxd rax,DWORD PTR [rip+0x5911]        # 0x40d048
  407737:	cmp    eax,0x31
  40773a:	jg     0x407899
  407740:	lea    edx,[rax+0x1]
  407743:	add    rbx,0x1
  407747:	mov    DWORD PTR [rip+0x58fb],edx        # 0x40d048
  40774d:	lea    rdx,[rip+0x592c]        # 0x40d080
  407754:	mov    QWORD PTR [rdx+rax*8],rbx
  407758:	mov    rax,rsi
  40775b:	jmp    0x40758b
  407760:	cmp    r8b,0x74
  407764:	jne    0x40784d
  40776a:	movsx  eax,BYTE PTR [rbx+0x2]
  40776e:	test   al,al
  407770:	je     0x4078b2
  407776:	add    rbx,0x2
  40777a:	mov    DWORD PTR [rip+0x898],eax        # 0x408018
  407780:	jmp    0x4076c0
  407785:	test   r8b,r8b
  407788:	jne    0x407801
  40778a:	cmp    BYTE PTR [rbx],0x2d
  40778d:	mov    rax,rsi
  407790:	jne    0x40758b
  407796:	movsxd rdx,DWORD PTR [rip+0x58a7]        # 0x40d044
  40779d:	lea    rdi,[rip+0x18a2]        # 0x409046
  4077a4:	lea    ecx,[rdx+0x1]
  4077a7:	mov    QWORD PTR [r13+rdx*8+0x0],rdi
  4077ac:	mov    DWORD PTR [rip+0x5892],ecx        # 0x40d044
  4077b2:	jmp    0x40758b
  4077b7:	sub    r12d,0x1
  4077bb:	test   r12d,r12d
  4077be:	jle    0x40783a
  4077c0:	mov    rax,QWORD PTR [rsi+0x8]
  4077c4:	mov    rbx,rdi
  4077c7:	add    rsi,0x8
  4077cb:	mov    QWORD PTR [rip+0x83e],rax        # 0x408010
  4077d2:	jmp    0x4076c0
  4077d7:	mov    DWORD PTR [rip+0x5a87],0x1        # 0x40d268
  4077e1:	mov    rbx,rdi
  4077e4:	jmp    0x4076c0
  4077e9:	mov    DWORD PTR [rip+0x5a71],0x1        # 0x40d264
  4077f3:	mov    rbx,rdi
  4077f6:	jmp    0x4076c0
  4077fb:	cmp    r8b,0x57
  4077ff:	je     0x407853
  407801:	lea    rdx,[rip+0x18ce]        # 0x4090d6
  407808:	mov    ecx,0x1
  40780d:	call   0x401ca0
  407812:	mov    rax,rsi
  407815:	jmp    0x40758b
  40781a:	sub    r12d,0x1
  40781e:	test   r12d,r12d
  407821:	jle    0x40783a
  407823:	mov    rax,QWORD PTR [rsi+0x8]
  407827:	mov    rbx,rdi
  40782a:	add    rsi,0x8
  40782e:	mov    QWORD PTR [rip+0x5a23],rax        # 0x40d258
  407835:	jmp    0x4076c0
  40783a:	lea    rdx,[rip+0x1840]        # 0x409081
  407841:	mov    ecx,0x1
  407846:	call   0x401ca0
  40784b:	jmp    0x407823
  40784d:	cmp    r8b,0x77
  407851:	jne    0x407801
  407853:	movsx  ecx,BYTE PTR [rbx+0x2]
  407857:	mov    eax,ecx
  407859:	mov    DWORD PTR [rip+0x57e1],ecx        # 0x40d040
  40785f:	sub    eax,0x30
  407862:	cmp    al,0x9
  407864:	ja     0x407880
  407866:	xor    edx,edx
  407868:	cmp    r8b,0x57
  40786c:	sete   dl
  40786f:	sub    ecx,0x30
  407872:	add    rbx,0x2
  407876:	call   0x401c30
  40787b:	jmp    0x4076c0
  407880:	lea    rdx,[rip+0x17d9]        # 0x409060
  407887:	mov    ecx,0x1
  40788c:	mov    rbx,rdi
  40788f:	call   0x401ca0
  407894:	jmp    0x4076c0
  407899:	lea    rdx,[rip+0x184a]        # 0x4090ea
  4078a0:	mov    ecx,0x1
  4078a5:	call   0x401ca0
  4078aa:	mov    rax,rsi
  4078ad:	jmp    0x40758b
  4078b2:	lea    rdx,[rip+0x178f]        # 0x409048
  4078b9:	mov    ecx,0x1
  4078be:	mov    rbx,rdi
  4078c1:	call   0x401ca0
  4078c6:	jmp    0x4076c0
  4078cb:	mov    rdi,QWORD PTR [rip+0x22be]        # 0x409b90
  4078d2:	cmp    DWORD PTR [rdi],0x0
  4078d5:	je     0x407a05
  4078db:	cmp    DWORD PTR [rip+0x5762],0x0        # 0x40d044
  4078e2:	jne    0x4079db
  4078e8:	mov    rbx,QWORD PTR [rip+0x2021]        # 0x409910
  4078ef:	movsd  xmm0,QWORD PTR [rbx+0x18]
  4078f4:	movsd  xmm1,QWORD PTR [rbx+0x10]
  4078f9:	movsd  xmm7,QWORD PTR [rbx+0x30]
  4078fe:	movsd  xmm8,QWORD PTR [rbx+0x28]
  407904:	call   0x401530
  407909:	mov    ecx,0xa
  40790e:	call   0x407328
  407913:	mov    eax,DWORD PTR [rdi]
  407915:	pxor   xmm0,xmm0
  407919:	movsd  xmm6,QWORD PTR [rbx+0x40]
  40791e:	cvtsi2sd xmm0,eax
  407922:	sub    eax,0x1
  407925:	test   eax,eax
  407927:	mov    DWORD PTR [rdi],eax
  407929:	divsd  xmm6,xmm0
  40792d:	movsd  QWORD PTR [rbx+0x40],xmm6
  407932:	je     0x407965
  407934:	call   0x401ac0
  407939:	movsd  xmm1,QWORD PTR [rbx+0x28]
  40793e:	movsd  xmm0,QWORD PTR [rbx+0x30]
  407943:	call   0x401530
  407948:	mov    ecx,0xa
  40794d:	call   0x407328
  407952:	movsd  xmm2,QWORD PTR [rbx+0x40]
  407957:	sub    DWORD PTR [rdi],0x1
  40795a:	addsd  xmm2,xmm6
  40795e:	movsd  QWORD PTR [rbx+0x40],xmm2
  407963:	jne    0x407934
  407965:	movapd xmm1,xmm8
  40796a:	movapd xmm0,xmm7
  40796e:	call   0x401530
  407973:	mov    ecx,0xa
  407978:	call   0x407328
  40797d:	jmp    0x407728
  407982:	call   0x401c60
  407987:	mov    rdx,QWORD PTR [rax]
  40798a:	mov    rbx,rax
  40798d:	test   rdx,rdx
  407990:	je     0x407728
  407996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079a0:	mov    rax,QWORD PTR [rbx+0x18]
  4079a4:	mov    r9,QWORD PTR [rbx+0x10]
  4079a8:	lea    rcx,[rip+0x16eb]        # 0x40909a
  4079af:	mov    r8,QWORD PTR [rbx+0x8]
  4079b3:	add    rbx,0x20
  4079b7:	mov    QWORD PTR [rsp+0x20],rax
  4079bc:	call   0x407330
  4079c1:	mov    rdx,QWORD PTR [rbx]
  4079c4:	test   rdx,rdx
  4079c7:	jne    0x4079a0
  4079c9:	jmp    0x407728
  4079ce:	mov    rbx,QWORD PTR [r13+0x0]
  4079d2:	mov    QWORD PTR [rbp+0x8],rbx
  4079d6:	jmp    0x407561
  4079db:	lea    rdx,[rip+0x1726]        # 0x409108
  4079e2:	mov    ecx,0x1
  4079e7:	call   0x401ca0
  4079ec:	cmp    DWORD PTR [rsi],0x0
  4079ef:	jne    0x4075ff
  4079f5:	mov    rdi,QWORD PTR [rip+0x2194]        # 0x409b90
  4079fc:	cmp    DWORD PTR [rdi],0x0
  4079ff:	jne    0x4078e8
  407a05:	mov    eax,DWORD PTR [rip+0x5639]        # 0x40d044
  407a0b:	test   eax,eax
  407a0d:	jne    0x407f37
  407a13:	lea    rax,[rip+0x162c]        # 0x409046
  407a1a:	mov    DWORD PTR [rip+0x5620],0x0        # 0x40d044
  407a24:	mov    QWORD PTR [r13+0x0],rax
  407a28:	mov    rcx,QWORD PTR [r13+0x0]
  407a2c:	mov    rax,QWORD PTR [rip+0x7a3d]        # 0x40f470
  407a33:	mov    rbx,QWORD PTR [rip+0x1ed6]        # 0x409910
  407a3a:	movsd  xmm7,QWORD PTR [rip+0x1706]        # 0x409148
  407a42:	cmp    BYTE PTR [rcx],0x2d
  407a45:	mov    QWORD PTR [rsp+0x38],rax
  407a4a:	mov    r14,rax
  407a4d:	je     0x407de8
  407a53:	lea    rdx,[rip+0x16dc]        # 0x409136
  407a5a:	call   0x407370
  407a5f:	test   rax,rax
  407a62:	mov    rdi,rax
  407a65:	je     0x407f45
  407a6b:	mov    rax,QWORD PTR [r13+0x0]
  407a6f:	mov    QWORD PTR [rbp+0x0],rax
  407a73:	xor    eax,eax
  407a75:	lea    r12,[rsp+0x50]
  407a7a:	jmp    0x407b9e
  407a7f:	nop
  407a80:	call   0x401ca8
  407a85:	mov    rcx,QWORD PTR [rsp+0x48]
  407a8a:	mov    rdx,rsi
  407a8d:	movsd  QWORD PTR [rbx+0x30],xmm0
  407a92:	call   0x401ca8
  407a97:	movsd  QWORD PTR [rbx+0x28],xmm0
  407a9c:	call   0x401b60
  407aa1:	mov    rax,QWORD PTR [rsp+0x48]
  407aa6:	cmp    BYTE PTR [rax],0x0
  407aa9:	jne    0x407ab9
  407aab:	cmp    rax,r12
  407aae:	jbe    0x407ab9
  407ab0:	sub    rax,0x1
  407ab4:	mov    QWORD PTR [rsp+0x48],rax
  407ab9:	mov    ecx,DWORD PTR [rip+0x57a5]        # 0x40d264
  407abf:	test   ecx,ecx
  407ac1:	je     0x407ae5
  407ac3:	pxor   xmm0,xmm0
  407ac7:	movsd  xmm1,QWORD PTR [rbx+0x20]
  407acc:	ucomisd xmm0,xmm1
  407ad0:	ja     0x407e13
  407ad6:	movsd  xmm1,QWORD PTR [rbx+0x38]
  407adb:	ucomisd xmm0,xmm1
  407adf:	ja     0x407e01
  407ae5:	mov    edx,DWORD PTR [rip+0x577d]        # 0x40d268
  407aeb:	test   edx,edx
  407aed:	jne    0x407c80
  407af3:	mov    eax,DWORD PTR [rip+0x5767]        # 0x40d260
  407af9:	test   eax,eax
  407afb:	je     0x407d60
  407b01:	mov    rcx,QWORD PTR [rip+0x5750]        # 0x40d258
  407b08:	test   rcx,rcx
  407b0b:	je     0x407e60
  407b11:	movsd  xmm6,QWORD PTR [rip+0x162f]        # 0x409148
  407b19:	movsd  xmm0,QWORD PTR [rbx+0x20]
  407b1e:	mulsd  xmm0,xmm6
  407b22:	movapd xmm1,xmm0
  407b26:	movq   rdx,xmm0
  407b2b:	call   0x407330
  407b30:	mov    ecx,0x9
  407b35:	call   0x407328
  407b3a:	mulsd  xmm6,QWORD PTR [rbx+0x38]
  407b3f:	mov    rcx,QWORD PTR [rip+0x5712]        # 0x40d258
  407b46:	movapd xmm1,xmm6
  407b4a:	movq   rdx,xmm6
  407b4f:	call   0x407330
  407b54:	mov    ecx,0x9
  407b59:	call   0x407328
  407b5e:	mov    rax,QWORD PTR [rip+0x1fcb]        # 0x409b30
  407b65:	movsd  xmm0,QWORD PTR [rbx+0x40]
  407b6a:	mov    rcx,QWORD PTR [rip+0x49f]        # 0x408010
  407b71:	mulsd  xmm0,QWORD PTR [rax]
  407b75:	movapd xmm1,xmm0
  407b79:	movq   rdx,xmm0
  407b7e:	call   0x407330
  407b83:	mov    r15,QWORD PTR [rip+0x78e6]        # 0x40f470
  407b8a:	call   r15
  407b8d:	mov    rcx,QWORD PTR [rsp+0x48]
  407b92:	lea    rdx,[rax+0x30]
  407b96:	call   0x407360
  407b9b:	mov    eax,DWORD PTR [rbp+0x10]
  407b9e:	add    eax,0x1
  407ba1:	mov    r8,rdi
  407ba4:	mov    edx,0xc8
  407ba9:	mov    rcx,r12
  407bac:	mov    DWORD PTR [rbp+0x10],eax
  407baf:	call   0x407378
  407bb4:	test   rax,rax
  407bb7:	mov    r15,rax
  407bba:	mov    QWORD PTR [rsp+0x48],rax
  407bbf:	je     0x407db0
  407bc5:	mov    edx,0xa
  407bca:	mov    rcx,rax
  407bcd:	call   0x407318
  407bd2:	test   rax,rax
  407bd5:	je     0x407e25
  407bdb:	movsx  eax,BYTE PTR [r15]
  407bdf:	cmp    eax,DWORD PTR [rip+0x433]        # 0x408018
  407be5:	je     0x407c60
  407be7:	lea    rsi,[rsp+0x48]
  407bec:	mov    rcx,r15
  407bef:	mov    rdx,rsi
  407bf2:	call   0x401ca8
  407bf7:	mov    rcx,QWORD PTR [rsp+0x48]
  407bfc:	mov    rdx,rsi
  407bff:	movsd  QWORD PTR [rbx+0x18],xmm0
  407c04:	call   0x401ca8
  407c09:	mov    r8d,DWORD PTR [rip+0x5650]        # 0x40d260
  407c10:	movsd  QWORD PTR [rbx+0x10],xmm0
  407c15:	mov    rdx,rsi
  407c18:	mov    rcx,QWORD PTR [rsp+0x48]
  407c1d:	test   r8d,r8d
  407c20:	jne    0x407a80
  407c26:	call   0x401ca8
  407c2b:	mov    rcx,QWORD PTR [rsp+0x48]
  407c30:	mov    rdx,rsi
  407c33:	movsd  QWORD PTR [rbx+0x20],xmm0
  407c38:	call   0x403220
  407c3d:	mov    rax,QWORD PTR [rip+0x1f6c]        # 0x409bb0
  407c44:	mulsd  xmm0,QWORD PTR [rax]
  407c48:	movsd  QWORD PTR [rbx+0x40],xmm0
  407c4d:	call   0x401a60
  407c52:	call   0x401ac0
  407c57:	jmp    0x407aa1
  407c5c:	nop    DWORD PTR [rax+0x0]
  407c60:	call   QWORD PTR [rip+0x780a]        # 0x40f470
  407c66:	lea    rdx,[rax+0x30]
  407c6a:	mov    rcx,r12
  407c6d:	call   0x407360
  407c72:	jmp    0x407b9b
  407c77:	nop    WORD PTR [rax+rax*1+0x0]
  407c80:	movsd  xmm1,QWORD PTR [rbx+0x10]
  407c85:	movsd  xmm0,QWORD PTR [rbx+0x18]
  407c8a:	call   0x401530
  407c8f:	mov    ecx,0x9
  407c94:	call   0x407328
  407c99:	movsd  xmm1,QWORD PTR [rbx+0x28]
  407c9e:	movsd  xmm0,QWORD PTR [rbx+0x30]
  407ca3:	call   0x401530
  407ca8:	mov    ecx,0x9
  407cad:	call   0x407328
  407cb2:	mov    rcx,QWORD PTR [rip+0x559f]        # 0x40d258
  407cb9:	test   rcx,rcx
  407cbc:	jne    0x407b11
  407cc2:	mov    r15,QWORD PTR [rip+0x77a7]        # 0x40f470
  407cc9:	call   r15
  407ccc:	movsd  xmm1,QWORD PTR [rbx+0x20]
  407cd1:	lea    rcx,[rip+0x5548]        # 0x40d220
  407cd8:	xor    r9d,r9d
  407cdb:	xor    r8d,r8d
  407cde:	mov    rsi,rax
  407ce1:	call   0x401c38
  407ce6:	lea    rdx,[rsi+0x30]
  407cea:	mov    rcx,rax
  407ced:	call   0x407360
  407cf2:	mov    ecx,0x9
  407cf7:	call   0x407328
  407cfc:	call   r15
  407cff:	movsd  xmm1,QWORD PTR [rbx+0x38]
  407d04:	lea    rcx,[rip+0x5515]        # 0x40d220
  407d0b:	xor    r9d,r9d
  407d0e:	xor    r8d,r8d
  407d11:	mov    rsi,rax
  407d14:	call   0x401c38
  407d19:	lea    rdx,[rsi+0x30]
  407d1d:	mov    rcx,rax
  407d20:	call   0x407360
  407d25:	mov    ecx,0x9
  407d2a:	call   0x407328
  407d2f:	mov    rax,QWORD PTR [rip+0x1dfa]        # 0x409b30
  407d36:	movsd  xmm0,QWORD PTR [rbx+0x40]
  407d3b:	mov    rcx,QWORD PTR [rip+0x2ce]        # 0x408010
  407d42:	mulsd  xmm0,QWORD PTR [rax]
  407d46:	movapd xmm1,xmm0
  407d4a:	movq   rdx,xmm0
  407d4f:	call   0x407330
  407d54:	jmp    0x407b8a
  407d59:	nop    DWORD PTR [rax+0x0]
  407d60:	movsd  xmm1,QWORD PTR [rbx+0x28]
  407d65:	movsd  xmm0,QWORD PTR [rbx+0x30]
  407d6a:	call   0x401530
  407d6f:	mov    ecx,0x9
  407d74:	call   0x407328
  407d79:	mov    rcx,QWORD PTR [rip+0x54d8]        # 0x40d258
  407d80:	test   rcx,rcx
  407d83:	je     0x407e9e
  407d89:	movsd  xmm0,QWORD PTR [rbx+0x38]
  407d8e:	mulsd  xmm0,xmm7
  407d92:	movapd xmm1,xmm0
  407d96:	movq   rdx,xmm0
  407d9b:	call   0x407330
  407da0:	mov    r15,QWORD PTR [rsp+0x38]
  407da5:	jmp    0x407b8a
  407daa:	nop    WORD PTR [rax+rax*1+0x0]
  407db0:	mov    rcx,rdi
  407db3:	call   0x407388
  407db8:	mov    QWORD PTR [rbp+0x0],0x0
  407dc0:	mov    eax,DWORD PTR [rip+0x527e]        # 0x40d044
  407dc6:	add    r13,0x8
  407dca:	lea    edx,[rax-0x1]
  407dcd:	test   eax,eax
  407dcf:	mov    DWORD PTR [rip+0x526f],edx        # 0x40d044
  407dd5:	je     0x407728
  407ddb:	mov    rcx,QWORD PTR [r13+0x0]
  407ddf:	cmp    BYTE PTR [rcx],0x2d
  407de2:	jne    0x407a53
  407de8:	call   QWORD PTR [rip+0x7682]        # 0x40f470
  407dee:	mov    rdi,rax
  407df1:	lea    rax,[rip+0x1336]        # 0x40912e
  407df8:	mov    QWORD PTR [rbp+0x0],rax
  407dfc:	jmp    0x407a73
  407e01:	addsd  xmm1,QWORD PTR [rip+0x1347]        # 0x409150
  407e09:	movsd  QWORD PTR [rbx+0x38],xmm1
  407e0e:	jmp    0x407ae5
  407e13:	addsd  xmm1,QWORD PTR [rip+0x1335]        # 0x409150
  407e1b:	movsd  QWORD PTR [rbx+0x20],xmm1
  407e20:	jmp    0x407ad6
  407e25:	mov    rcx,r15
  407e28:	call   0x407308
  407e2d:	mov    r9d,0xa
  407e33:	mov    WORD PTR [r15+rax*1],r9w
  407e38:	jmp    0x407e45
  407e3a:	nop    WORD PTR [rax+rax*1+0x0]
  407e40:	cmp    eax,0xa
  407e43:	je     0x407e52
  407e45:	mov    rcx,rdi
  407e48:	call   0x407380
  407e4d:	cmp    eax,0xffffffff
  407e50:	jne    0x407e40
  407e52:	mov    r15,QWORD PTR [rsp+0x48]
  407e57:	jmp    0x407bdb
  407e5c:	nop    DWORD PTR [rax+0x0]
  407e60:	call   r14
  407e63:	movsd  xmm1,QWORD PTR [rbx+0x20]
  407e68:	lea    rcx,[rip+0x53b1]        # 0x40d220
  407e6f:	xor    r9d,r9d
  407e72:	xor    r8d,r8d
  407e75:	mov    rsi,rax
  407e78:	call   0x401c38
  407e7d:	lea    rdx,[rsi+0x30]
  407e81:	mov    rcx,rax
  407e84:	mov    r15,r14
  407e87:	call   0x407360
  407e8c:	mov    ecx,0x9
  407e91:	call   0x407328
  407e96:	call   r14
  407e99:	jmp    0x407cff
  407e9e:	mov    r15,QWORD PTR [rip+0x75cb]        # 0x40f470
  407ea5:	call   r15
  407ea8:	movsd  xmm1,QWORD PTR [rbx+0x38]
  407ead:	lea    rcx,[rip+0x536c]        # 0x40d220
  407eb4:	mov    rsi,rax
  407eb7:	xor    r9d,r9d
  407eba:	xor    r8d,r8d
  407ebd:	call   0x401c38
  407ec2:	lea    rdx,[rsi+0x30]
  407ec6:	mov    rcx,rax
  407ec9:	call   0x407360
  407ece:	jmp    0x407b8a
  407ed3:	call   0x401c58
  407ed8:	mov    rsi,rax
  407edb:	call   QWORD PTR [rip+0x758f]        # 0x40f470
  407ee1:	lea    rdx,[rip+0x1120]        # 0x409008
  407ee8:	lea    rcx,[rax+0x60]
  407eec:	mov    r9,rbx
  407eef:	mov    r8,rsi
  407ef2:	call   0x407368
  407ef7:	xor    ecx,ecx
  407ef9:	call   0x407390
  407efe:	call   0x401c50
  407f03:	mov    rdx,QWORD PTR [rax]
  407f06:	mov    rbx,rax
  407f09:	test   rdx,rdx
  407f0c:	je     0x407728
  407f12:	mov    r9,QWORD PTR [rbx+0x10]
  407f16:	mov    r8,QWORD PTR [rbx+0x8]
  407f1a:	lea    rcx,[rip+0x118d]        # 0x4090ae
  407f21:	add    rbx,0x18
  407f25:	call   0x407330
  407f2a:	mov    rdx,QWORD PTR [rbx]
  407f2d:	test   rdx,rdx
  407f30:	jne    0x407f12
  407f32:	jmp    0x407728
  407f37:	sub    eax,0x1
  407f3a:	mov    DWORD PTR [rip+0x5104],eax        # 0x40d044
  407f40:	jmp    0x407a28
  407f45:	mov    rdx,QWORD PTR [r13+0x0]
  407f49:	lea    r8,[rip+0x11e8]        # 0x409138
  407f50:	mov    ecx,0xfffffffe
  407f55:	call   0x401ca0
  407f5a:	jmp    0x407dc0
  407f5f:	nop
  407f60:	(bad)  
  407f61:	(bad)  
  407f62:	(bad)  
  407f63:	(bad)  
  407f64:	(bad)  
  407f65:	(bad)  
  407f66:	(bad)  
  407f67:	inc    DWORD PTR [rax]
  407f69:	add    BYTE PTR [rax],al
  407f6b:	add    BYTE PTR [rax],al
  407f6d:	add    BYTE PTR [rax],al
  407f6f:	add    bh,bh
  407f71:	(bad)  
  407f72:	(bad)  
  407f73:	(bad)  
  407f74:	(bad)  
  407f75:	(bad)  
  407f76:	(bad)  
  407f77:	inc    DWORD PTR [rax]
  407f79:	add    BYTE PTR [rax],al
  407f7b:	add    BYTE PTR [rax],al
  407f7d:	add    BYTE PTR [rax],al
	...
