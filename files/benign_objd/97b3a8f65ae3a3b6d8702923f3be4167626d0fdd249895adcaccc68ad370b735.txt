
97b3a8f65ae3a3b6d8702923f3be4167626d0fdd249895adcaccc68ad370b735.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x44a5]        # 0x4054c0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x44a6]        # 0x4054d0
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x44a9]        # 0x4054e0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x446c]        # 0x4054b0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x431f]        # 0x405370
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4441]        # 0x4054a0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402b98
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401b50
  401081:	mov    rdx,QWORD PTR [rip+0x4378]        # 0x405400
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x435e]        # 0x4053f0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x43c4]        # 0x405460
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x42fb]        # 0x4053a0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401730
  4010af:	mov    rax,QWORD PTR [rip+0x426a]        # 0x405320
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402b98
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x909]        # 0x401a30
  401127:	call   0x401a20
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4325]        # 0x405490
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x42b5]        # 0x405450
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402bb0
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x42da]        # 0x4054a0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x41db]        # 0x4053d0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x817e]        # 0x409380
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x41b7]        # 0x4053e0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x40fc]        # 0x405360
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401d40
  40127d:	lea    rcx,[rip+0x105c]        # 0x4022e0
  401284:	call   QWORD PTR [rip+0x80ee]        # 0x409378
  40128a:	mov    rdx,QWORD PTR [rip+0x412f]        # 0x4053c0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4021f0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402be0
  4012a5:	call   0x401b30
  4012aa:	mov    rax,QWORD PTR [rip+0x40bf]        # 0x405370
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x40d1]        # 0x405390
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1cca],eax        # 0x403000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402b20
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402b08
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402b20
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402b18
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401700
  4013bb:	mov    rax,QWORD PTR [rip+0x3fbe]        # 0x405380
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x402cb0
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402b80
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x3fa9]        # 0x4053e0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402b88
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x3fbd]        # 0x405420
  401463:	mov    rcx,QWORD PTR [rip+0x3fa6]        # 0x405410
  40146a:	call   0x402b78
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7e8f]        # 0x409328
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x3f99]        # 0x405440
  4014a7:	mov    rcx,QWORD PTR [rip+0x3f82]        # 0x405430
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402b78
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402b40
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x3fc5]        # 0x4054a0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401740
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x3f95]        # 0x4054a0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401740
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	jmp    QWORD PTR [rip+0x7daa]        # 0x4092e0
  401536:	nop
  401537:	nop
  401538:	jmp    QWORD PTR [rip+0x7d9a]        # 0x4092d8
  40153e:	nop
  40153f:	nop
  401540:	jmp    QWORD PTR [rip+0x7d82]        # 0x4092c8
  401546:	nop
  401547:	nop
  401548:	jmp    QWORD PTR [rip+0x7d72]        # 0x4092c0
  40154e:	nop
  40154f:	nop
  401550:	jmp    QWORD PTR [rip+0x7d62]        # 0x4092b8
  401556:	nop
  401557:	nop
  401558:	jmp    QWORD PTR [rip+0x7d52]        # 0x4092b0
  40155e:	nop
  40155f:	nop
  401560:	jmp    QWORD PTR [rip+0x7d42]        # 0x4092a8
  401566:	nop
  401567:	nop
  401568:	jmp    QWORD PTR [rip+0x7d32]        # 0x4092a0
  40156e:	nop
  40156f:	nop
  401570:	jmp    QWORD PTR [rip+0x7d22]        # 0x409298
  401576:	nop
  401577:	nop
  401578:	jmp    QWORD PTR [rip+0x7d12]        # 0x409290
  40157e:	nop
  40157f:	nop
  401580:	jmp    QWORD PTR [rip+0x7d02]        # 0x409288
  401586:	nop
  401587:	nop
  401588:	jmp    QWORD PTR [rip+0x7cf2]        # 0x409280
  40158e:	nop
  40158f:	nop
  401590:	push   rbx
  401591:	sub    rsp,0x30
  401595:	mov    rbx,rcx
  401598:	mov    rcx,QWORD PTR [rip+0x7471]        # 0x408a10
  40159f:	call   0x401b40
  4015a4:	cmp    rax,0xffffffffffffffff
  4015a8:	mov    QWORD PTR [rsp+0x20],rax
  4015ad:	je     0x401625
  4015af:	mov    ecx,0x8
  4015b4:	call   0x402b70
  4015b9:	mov    rcx,QWORD PTR [rip+0x7450]        # 0x408a10
  4015c0:	call   0x401b40
  4015c5:	mov    rcx,QWORD PTR [rip+0x744c]        # 0x408a18
  4015cc:	mov    QWORD PTR [rsp+0x20],rax
  4015d1:	call   0x401b40
  4015d6:	lea    rdx,[rsp+0x20]
  4015db:	lea    r8,[rsp+0x28]
  4015e0:	mov    rcx,rbx
  4015e3:	mov    QWORD PTR [rsp+0x28],rax
  4015e8:	call   0x402bb8
  4015ed:	mov    rcx,QWORD PTR [rsp+0x20]
  4015f2:	mov    rbx,rax
  4015f5:	call   0x401b50
  4015fa:	mov    rcx,QWORD PTR [rsp+0x28]
  4015ff:	mov    QWORD PTR [rip+0x740a],rax        # 0x408a10
  401606:	call   0x401b50
  40160b:	mov    ecx,0x8
  401610:	mov    QWORD PTR [rip+0x7401],rax        # 0x408a18
  401617:	call   0x402b58
  40161c:	mov    rax,rbx
  40161f:	add    rsp,0x30
  401623:	pop    rbx
  401624:	ret    
  401625:	mov    rax,QWORD PTR [rip+0x3d84]        # 0x4053b0
  40162c:	mov    rcx,rbx
  40162f:	call   QWORD PTR [rax]
  401631:	add    rsp,0x30
  401635:	pop    rbx
  401636:	ret    
  401637:	nop    WORD PTR [rax+rax*1+0x0]
  401640:	sub    rsp,0x28
  401644:	call   0x401590
  401649:	test   rax,rax
  40164c:	sete   al
  40164f:	movzx  eax,al
  401652:	neg    eax
  401654:	add    rsp,0x28
  401658:	ret    
  401659:	nop
  40165a:	nop
  40165b:	nop
  40165c:	nop
  40165d:	nop
  40165e:	nop
  40165f:	nop
  401660:	sub    rsp,0x28
  401664:	mov    rax,QWORD PTR [rip+0x35d5]        # 0x404c40
  40166b:	mov    rax,QWORD PTR [rax]
  40166e:	test   rax,rax
  401671:	je     0x401690
  401673:	call   rax
  401675:	mov    rax,QWORD PTR [rip+0x35c4]        # 0x404c40
  40167c:	lea    rdx,[rax+0x8]
  401680:	mov    rax,QWORD PTR [rax+0x8]
  401684:	mov    QWORD PTR [rip+0x35b5],rdx        # 0x404c40
  40168b:	test   rax,rax
  40168e:	jne    0x401673
  401690:	add    rsp,0x28
  401694:	ret    
  401695:	nop
  401696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016a0:	push   rsi
  4016a1:	push   rbx
  4016a2:	sub    rsp,0x28
  4016a6:	mov    rsi,QWORD PTR [rip+0x3c83]        # 0x405330
  4016ad:	mov    rax,QWORD PTR [rsi]
  4016b0:	cmp    eax,0xffffffff
  4016b3:	mov    ebx,eax
  4016b5:	je     0x4016e0
  4016b7:	test   ebx,ebx
  4016b9:	je     0x4016ca
  4016bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4016c0:	mov    eax,ebx
  4016c2:	call   QWORD PTR [rsi+rax*8]
  4016c5:	sub    ebx,0x1
  4016c8:	jne    0x4016c0
  4016ca:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401660
  4016d1:	add    rsp,0x28
  4016d5:	pop    rbx
  4016d6:	pop    rsi
  4016d7:	jmp    0x401640
  4016dc:	nop    DWORD PTR [rax+0x0]
  4016e0:	xor    ebx,ebx
  4016e2:	jmp    0x4016e6
  4016e4:	mov    ebx,eax
  4016e6:	lea    edx,[rbx+0x1]
  4016e9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4016ee:	mov    rax,rdx
  4016f1:	jne    0x4016e4
  4016f3:	jmp    0x4016b7
  4016f5:	nop
  4016f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401700:	mov    eax,DWORD PTR [rip+0x692a]        # 0x408030
  401706:	test   eax,eax
  401708:	je     0x401710
  40170a:	repz ret 
  40170c:	nop    DWORD PTR [rax+0x0]
  401710:	mov    DWORD PTR [rip+0x6916],0x1        # 0x408030
  40171a:	jmp    0x4016a0
  40171c:	nop
  40171d:	nop
  40171e:	nop
  40171f:	nop
  401720:	mov    rax,QWORD PTR [rip+0x7cb9]        # 0x4093e0
  401727:	rex.W jmp rax
  40172a:	nop
  40172b:	nop
  40172c:	nop
  40172d:	nop
  40172e:	nop
  40172f:	nop
  401730:	xor    eax,eax
  401732:	ret    
  401733:	nop
  401734:	nop
  401735:	nop
  401736:	nop
  401737:	nop
  401738:	nop
  401739:	nop
  40173a:	nop
  40173b:	nop
  40173c:	nop
  40173d:	nop
  40173e:	nop
  40173f:	nop
  401740:	push   r12
  401742:	push   rbp
  401743:	push   rdi
  401744:	push   rsi
  401745:	push   rbx
  401746:	sub    rsp,0x40
  40174a:	mov    rbx,QWORD PTR [rip+0x354f]        # 0x404ca0
  401751:	movabs rax,0x2b992ddfa232
  40175b:	mov    QWORD PTR [rsp+0x20],0x0
  401764:	cmp    rbx,rax
  401767:	je     0x401780
  401769:	not    rbx
  40176c:	mov    QWORD PTR [rip+0x353d],rbx        # 0x404cb0
  401773:	add    rsp,0x40
  401777:	pop    rbx
  401778:	pop    rsi
  401779:	pop    rdi
  40177a:	pop    rbp
  40177b:	pop    r12
  40177d:	ret    
  40177e:	xchg   ax,ax
  401780:	lea    rcx,[rsp+0x20]
  401785:	call   QWORD PTR [rip+0x7ba5]        # 0x409330
  40178b:	mov    r12,QWORD PTR [rsp+0x20]
  401790:	call   QWORD PTR [rip+0x7b7a]        # 0x409310
  401796:	mov    ebp,eax
  401798:	call   QWORD PTR [rip+0x7b7a]        # 0x409318
  40179e:	mov    edi,eax
  4017a0:	call   QWORD PTR [rip+0x7b92]        # 0x409338
  4017a6:	lea    rcx,[rsp+0x30]
  4017ab:	mov    esi,eax
  4017ad:	call   QWORD PTR [rip+0x7b9d]        # 0x409350
  4017b3:	xor    r12,QWORD PTR [rsp+0x30]
  4017b8:	mov    edx,edi
  4017ba:	movabs rax,0xffffffffffff
  4017c4:	xor    rbp,r12
  4017c7:	mov    rdi,rbp
  4017ca:	xor    rdi,rdx
  4017cd:	mov    edx,esi
  4017cf:	xor    rdi,rdx
  4017d2:	mov    rsi,rdi
  4017d5:	and    rsi,rax
  4017d8:	cmp    rsi,rbx
  4017db:	je     0x401800
  4017dd:	mov    rax,rsi
  4017e0:	not    rax
  4017e3:	mov    QWORD PTR [rip+0x34b6],rsi        # 0x404ca0
  4017ea:	mov    QWORD PTR [rip+0x34bf],rax        # 0x404cb0
  4017f1:	add    rsp,0x40
  4017f5:	pop    rbx
  4017f6:	pop    rsi
  4017f7:	pop    rdi
  4017f8:	pop    rbp
  4017f9:	pop    r12
  4017fb:	ret    
  4017fc:	nop    DWORD PTR [rax+0x0]
  401800:	movabs rax,0xffffd466d2205dcc
  40180a:	movabs rsi,0x2b992ddfa233
  401814:	jmp    0x4017e3
  401816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401820:	push   rbp
  401821:	push   rsi
  401822:	push   rbx
  401823:	mov    rbp,rsp
  401826:	sub    rsp,0x70
  40182a:	mov    rsi,rcx
  40182d:	lea    rcx,[rip+0x684c]        # 0x408080
  401834:	call   QWORD PTR [rip+0x7b26]        # 0x409360
  40183a:	mov    rbx,QWORD PTR [rip+0x6937]        # 0x408178
  401841:	xor    r8d,r8d
  401844:	lea    rdx,[rbp-0x28]
  401848:	mov    rcx,rbx
  40184b:	call   QWORD PTR [rip+0x7b17]        # 0x409368
  401851:	test   rax,rax
  401854:	mov    r9,rax
  401857:	je     0x401900
  40185d:	lea    rax,[rbp-0x20]
  401861:	mov    QWORD PTR [rsp+0x38],0x0
  40186a:	mov    r8,rbx
  40186d:	mov    rdx,QWORD PTR [rbp-0x28]
  401871:	xor    ecx,ecx
  401873:	mov    QWORD PTR [rsp+0x30],rax
  401878:	lea    rax,[rbp-0x18]
  40187c:	mov    QWORD PTR [rsp+0x28],rax
  401881:	lea    rax,[rip+0x67f8]        # 0x408080
  401888:	mov    QWORD PTR [rsp+0x20],rax
  40188d:	call   QWORD PTR [rip+0x7add]        # 0x409370
  401893:	mov    rax,QWORD PTR [rip+0x68de]        # 0x408178
  40189a:	xor    ecx,ecx
  40189c:	mov    QWORD PTR [rip+0x685d],rsi        # 0x408100
  4018a3:	mov    DWORD PTR [rip+0x6cd3],0xc0000409        # 0x408580
  4018ad:	mov    DWORD PTR [rip+0x6ccd],0x1        # 0x408584
  4018b7:	mov    QWORD PTR [rip+0x6cd2],rax        # 0x408590
  4018be:	mov    rax,QWORD PTR [rip+0x33db]        # 0x404ca0
  4018c5:	mov    QWORD PTR [rbp-0x10],rax
  4018c9:	mov    rax,QWORD PTR [rip+0x33e0]        # 0x404cb0
  4018d0:	mov    QWORD PTR [rbp-0x8],rax
  4018d4:	call   QWORD PTR [rip+0x7a9e]        # 0x409378
  4018da:	lea    rcx,[rip+0x379f]        # 0x405080
  4018e1:	call   QWORD PTR [rip+0x7ab1]        # 0x409398
  4018e7:	call   QWORD PTR [rip+0x7a1b]        # 0x409308
  4018ed:	mov    edx,0xc0000409
  4018f2:	mov    rcx,rax
  4018f5:	call   QWORD PTR [rip+0x7a8d]        # 0x409388
  4018fb:	call   0x402b50
  401900:	mov    rax,QWORD PTR [rbp+0x18]
  401904:	mov    QWORD PTR [rip+0x686d],rax        # 0x408178
  40190b:	lea    rax,[rbp+0x8]
  40190f:	mov    QWORD PTR [rip+0x6802],rax        # 0x408118
  401916:	jmp    0x401893
  40191b:	nop
  40191c:	nop
  40191d:	nop
  40191e:	nop
  40191f:	nop
  401920:	sub    rsp,0x28
  401924:	test   edx,edx
  401926:	je     0x401940
  401928:	cmp    edx,0x3
  40192b:	je     0x401940
  40192d:	mov    eax,0x1
  401932:	add    rsp,0x28
  401936:	ret    
  401937:	nop    WORD PTR [rax+rax*1+0x0]
  401940:	call   0x402630
  401945:	mov    eax,0x1
  40194a:	add    rsp,0x28
  40194e:	ret    
  40194f:	nop
  401950:	push   rsi
  401951:	push   rbx
  401952:	sub    rsp,0x28
  401956:	mov    rax,QWORD PTR [rip+0x39b3]        # 0x405310
  40195d:	cmp    DWORD PTR [rax],0x2
  401960:	je     0x401968
  401962:	mov    DWORD PTR [rax],0x2
  401968:	cmp    edx,0x2
  40196b:	je     0x401980
  40196d:	cmp    edx,0x1
  401970:	je     0x4019b2
  401972:	mov    eax,0x1
  401977:	add    rsp,0x28
  40197b:	pop    rbx
  40197c:	pop    rsi
  40197d:	ret    
  40197e:	xchg   ax,ax
  401980:	lea    rbx,[rip+0x86d9]        # 0x40a060
  401987:	lea    rsi,[rip+0x86d2]        # 0x40a060
  40198e:	cmp    rbx,rsi
  401991:	je     0x401972
  401993:	mov    rax,QWORD PTR [rbx]
  401996:	test   rax,rax
  401999:	je     0x40199d
  40199b:	call   rax
  40199d:	add    rbx,0x8
  4019a1:	cmp    rbx,rsi
  4019a4:	jne    0x401993
  4019a6:	mov    eax,0x1
  4019ab:	add    rsp,0x28
  4019af:	pop    rbx
  4019b0:	pop    rsi
  4019b1:	ret    
  4019b2:	call   0x402630
  4019b7:	jmp    0x401972
  4019b9:	nop    DWORD PTR [rax+0x0]
  4019c0:	xor    eax,eax
  4019c2:	ret    
  4019c3:	nop
  4019c4:	nop
  4019c5:	nop
  4019c6:	nop
  4019c7:	nop
  4019c8:	nop
  4019c9:	nop
  4019ca:	nop
  4019cb:	nop
  4019cc:	nop
  4019cd:	nop
  4019ce:	nop
  4019cf:	nop
  4019d0:	sub    rsp,0x58
  4019d4:	mov    rax,QWORD PTR [rip+0x6c85]        # 0x408660
  4019db:	test   rax,rax
  4019de:	je     0x401a0c
  4019e0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4019e9:	mov    DWORD PTR [rsp+0x20],ecx
  4019ed:	lea    rcx,[rsp+0x20]
  4019f2:	mov    QWORD PTR [rsp+0x28],rdx
  4019f7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4019fd:	movsd  QWORD PTR [rsp+0x38],xmm3
  401a03:	movsd  QWORD PTR [rsp+0x40],xmm0
  401a09:	call   rax
  401a0b:	nop
  401a0c:	add    rsp,0x58
  401a10:	ret    
  401a11:	nop    DWORD PTR [rax+rax*1+0x0]
  401a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a20:	mov    QWORD PTR [rip+0x6c39],rcx        # 0x408660
  401a27:	jmp    0x402b90
  401a2c:	nop    DWORD PTR [rax+0x0]
  401a30:	push   rsi
  401a31:	push   rbx
  401a32:	sub    rsp,0x78
  401a36:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401a3b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401a40:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401a46:	cmp    DWORD PTR [rcx],0x6
  401a49:	ja     0x401b20
  401a4f:	mov    edx,DWORD PTR [rcx]
  401a51:	lea    rax,[rip+0x376c]        # 0x4051c4
  401a58:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401a5c:	add    rax,rdx
  401a5f:	jmp    rax
  401a61:	lea    rbx,[rip+0x3638]        # 0x4050a0
  401a68:	nop    DWORD PTR [rax+rax*1+0x0]
  401a70:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401a76:	mov    rsi,QWORD PTR [rcx+0x8]
  401a7a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401a7f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401a84:	call   0x402ba8
  401a89:	movsd  QWORD PTR [rsp+0x30],xmm8
  401a90:	lea    rcx,[rax+0x60]
  401a94:	lea    rdx,[rip+0x36fd]        # 0x405198
  401a9b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401aa1:	mov    r9,rsi
  401aa4:	mov    r8,rbx
  401aa7:	movsd  QWORD PTR [rsp+0x20],xmm6
  401aad:	call   0x402b38
  401ab2:	nop
  401ab3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401ab8:	xor    eax,eax
  401aba:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401abf:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401ac5:	add    rsp,0x78
  401ac9:	pop    rbx
  401aca:	pop    rsi
  401acb:	ret    
  401acc:	nop    DWORD PTR [rax+0x0]
  401ad0:	lea    rbx,[rip+0x35e8]        # 0x4050bf
  401ad7:	jmp    0x401a70
  401ad9:	nop    DWORD PTR [rax+0x0]
  401ae0:	lea    rbx,[rip+0x35f9]        # 0x4050e0
  401ae7:	jmp    0x401a70
  401ae9:	nop    DWORD PTR [rax+0x0]
  401af0:	lea    rbx,[rip+0x3659]        # 0x405150
  401af7:	jmp    0x401a70
  401afc:	nop    DWORD PTR [rax+0x0]
  401b00:	lea    rbx,[rip+0x3621]        # 0x405128
  401b07:	jmp    0x401a70
  401b0c:	nop    DWORD PTR [rax+0x0]
  401b10:	lea    rbx,[rip+0x35e9]        # 0x405100
  401b17:	jmp    0x401a70
  401b1c:	nop    DWORD PTR [rax+0x0]
  401b20:	lea    rbx,[rip+0x365f]        # 0x405186
  401b27:	jmp    0x401a70
  401b2c:	nop
  401b2d:	nop
  401b2e:	nop
  401b2f:	nop
  401b30:	fninit 
  401b32:	ret    
  401b33:	nop
  401b34:	nop
  401b35:	nop
  401b36:	nop
  401b37:	nop
  401b38:	nop
  401b39:	nop
  401b3a:	nop
  401b3b:	nop
  401b3c:	nop
  401b3d:	nop
  401b3e:	nop
  401b3f:	nop
  401b40:	mov    rax,rcx
  401b43:	ret    
  401b44:	xchg   ax,ax
  401b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b50:	mov    rax,rcx
  401b53:	ret    
  401b54:	nop
  401b55:	nop
  401b56:	nop
  401b57:	nop
  401b58:	nop
  401b59:	nop
  401b5a:	nop
  401b5b:	nop
  401b5c:	nop
  401b5d:	nop
  401b5e:	nop
  401b5f:	nop
  401b60:	push   rsi
  401b61:	push   rbx
  401b62:	sub    rsp,0x38
  401b66:	lea    rax,[rsp+0x58]
  401b6b:	mov    rbx,rcx
  401b6e:	mov    QWORD PTR [rsp+0x58],rdx
  401b73:	mov    QWORD PTR [rsp+0x60],r8
  401b78:	mov    QWORD PTR [rsp+0x68],r9
  401b7d:	mov    QWORD PTR [rsp+0x28],rax
  401b82:	call   0x402ba8
  401b87:	lea    rcx,[rip+0x3652]        # 0x4051e0
  401b8e:	lea    r9,[rax+0x60]
  401b92:	mov    r8d,0x1b
  401b98:	mov    edx,0x1
  401b9d:	call   0x402b28
  401ba2:	mov    rsi,QWORD PTR [rsp+0x28]
  401ba7:	call   0x402ba8
  401bac:	lea    rcx,[rax+0x60]
  401bb0:	mov    rdx,rbx
  401bb3:	mov    r8,rsi
  401bb6:	call   0x402af8
  401bbb:	call   0x402b50
  401bc0:	nop
  401bc1:	nop    DWORD PTR [rax+rax*1+0x0]
  401bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bd0:	push   r13
  401bd2:	push   r12
  401bd4:	push   rbp
  401bd5:	push   rdi
  401bd6:	push   rsi
  401bd7:	push   rbx
  401bd8:	sub    rsp,0x58
  401bdc:	movsxd rbp,DWORD PTR [rip+0x6aa1]        # 0x408684
  401be3:	mov    rbx,rcx
  401be6:	mov    rsi,rdx
  401be9:	mov    rdi,r8
  401bec:	test   ebp,ebp
  401bee:	jle    0x401cea
  401bf4:	mov    rax,QWORD PTR [rip+0x6a8d]        # 0x408688
  401bfb:	xor    r9d,r9d
  401bfe:	add    rax,0x8
  401c02:	mov    r10,QWORD PTR [rax]
  401c05:	cmp    rbx,r10
  401c08:	jb     0x401c1e
  401c0a:	mov    rdx,QWORD PTR [rax+0x8]
  401c0e:	mov    r11d,DWORD PTR [rdx+0x8]
  401c12:	add    r10,r11
  401c15:	cmp    rbx,r10
  401c18:	jb     0x401cd0
  401c1e:	add    r9d,0x1
  401c22:	add    rax,0x18
  401c26:	cmp    r9d,ebp
  401c29:	jne    0x401c02
  401c2b:	mov    rcx,rbx
  401c2e:	call   0x402840
  401c33:	test   rax,rax
  401c36:	mov    r12,rax
  401c39:	je     0x401d22
  401c3f:	lea    rbp,[rbp+rbp*2+0x0]
  401c44:	shl    rbp,0x3
  401c48:	mov    r13,rbp
  401c4b:	add    r13,QWORD PTR [rip+0x6a36]        # 0x408688
  401c52:	mov    QWORD PTR [r13+0x10],rax
  401c56:	mov    DWORD PTR [r13+0x0],0x0
  401c5e:	call   0x402960
  401c63:	mov    edx,DWORD PTR [r12+0xc]
  401c68:	mov    r8d,0x30
  401c6e:	add    rax,rdx
  401c71:	lea    rdx,[rsp+0x20]
  401c76:	mov    QWORD PTR [r13+0x8],rax
  401c7a:	mov    rax,QWORD PTR [rip+0x6a07]        # 0x408688
  401c81:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401c86:	call   QWORD PTR [rip+0x771c]        # 0x4093a8
  401c8c:	test   rax,rax
  401c8f:	je     0x401d05
  401c91:	mov    eax,DWORD PTR [rsp+0x44]
  401c95:	lea    edx,[rax-0x4]
  401c98:	and    edx,0xfffffffb
  401c9b:	je     0x401cc9
  401c9d:	sub    eax,0x40
  401ca0:	and    eax,0xffffffbf
  401ca3:	je     0x401cc9
  401ca5:	mov    r9,rbp
  401ca8:	add    r9,QWORD PTR [rip+0x69d9]        # 0x408688
  401caf:	mov    r8d,0x40
  401cb5:	mov    rdx,QWORD PTR [rsp+0x38]
  401cba:	mov    rcx,QWORD PTR [rsp+0x20]
  401cbf:	call   QWORD PTR [rip+0x76db]        # 0x4093a0
  401cc5:	test   eax,eax
  401cc7:	je     0x401cf1
  401cc9:	add    DWORD PTR [rip+0x69b4],0x1        # 0x408684
  401cd0:	mov    r8,rdi
  401cd3:	mov    rdx,rsi
  401cd6:	mov    rcx,rbx
  401cd9:	add    rsp,0x58
  401cdd:	pop    rbx
  401cde:	pop    rsi
  401cdf:	pop    rdi
  401ce0:	pop    rbp
  401ce1:	pop    r12
  401ce3:	pop    r13
  401ce5:	jmp    0x402b18
  401cea:	xor    ebp,ebp
  401cec:	jmp    0x401c2b
  401cf1:	call   QWORD PTR [rip+0x7629]        # 0x409320
  401cf7:	lea    rcx,[rip+0x355a]        # 0x405258
  401cfe:	mov    edx,eax
  401d00:	call   0x401b60
  401d05:	mov    rax,QWORD PTR [rip+0x697c]        # 0x408688
  401d0c:	mov    edx,DWORD PTR [r12+0x8]
  401d11:	lea    rcx,[rip+0x3508]        # 0x405220
  401d18:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401d1d:	call   0x401b60
  401d22:	lea    rcx,[rip+0x34d7]        # 0x405200
  401d29:	mov    rdx,rbx
  401d2c:	call   0x401b60
  401d31:	nop
  401d32:	nop    DWORD PTR [rax+0x0]
  401d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d40:	push   rbp
  401d41:	push   r14
  401d43:	push   r13
  401d45:	push   r12
  401d47:	push   rdi
  401d48:	push   rsi
  401d49:	push   rbx
  401d4a:	mov    rbp,rsp
  401d4d:	sub    rsp,0x60
  401d51:	mov    ebx,DWORD PTR [rip+0x6929]        # 0x408680
  401d57:	test   ebx,ebx
  401d59:	je     0x401d70
  401d5b:	mov    rsp,rbp
  401d5e:	pop    rbx
  401d5f:	pop    rsi
  401d60:	pop    rdi
  401d61:	pop    r12
  401d63:	pop    r13
  401d65:	pop    r14
  401d67:	pop    rbp
  401d68:	ret    
  401d69:	nop    DWORD PTR [rax+0x0]
  401d70:	mov    DWORD PTR [rip+0x6906],0x1        # 0x408680
  401d7a:	call   0x402890
  401d7f:	cdqe   
  401d81:	lea    rax,[rax+rax*2]
  401d85:	lea    rax,[rax*8+0x1e]
  401d8d:	and    rax,0xfffffffffffffff0
  401d91:	call   0x402ab0
  401d96:	mov    rsi,QWORD PTR [rip+0x35a3]        # 0x405340
  401d9d:	mov    rbx,QWORD PTR [rip+0x35ac]        # 0x405350
  401da4:	sub    rsp,rax
  401da7:	mov    DWORD PTR [rip+0x68d3],0x0        # 0x408684
  401db1:	lea    rax,[rsp+0x20]
  401db6:	mov    QWORD PTR [rip+0x68cb],rax        # 0x408688
  401dbd:	mov    rax,rsi
  401dc0:	sub    rax,rbx
  401dc3:	cmp    rax,0x7
  401dc7:	jle    0x401d5b
  401dc9:	cmp    rax,0xb
  401dcd:	jle    0x401df5
  401dcf:	mov    r11d,DWORD PTR [rbx]
  401dd2:	test   r11d,r11d
  401dd5:	jne    0x401f20
  401ddb:	mov    r10d,DWORD PTR [rbx+0x4]
  401ddf:	test   r10d,r10d
  401de2:	jne    0x401f20
  401de8:	mov    r9d,DWORD PTR [rbx+0x8]
  401dec:	test   r9d,r9d
  401def:	jne    0x401e0c
  401df1:	add    rbx,0xc
  401df5:	mov    r8d,DWORD PTR [rbx]
  401df8:	test   r8d,r8d
  401dfb:	jne    0x401f20
  401e01:	mov    ecx,DWORD PTR [rbx+0x4]
  401e04:	test   ecx,ecx
  401e06:	jne    0x401f20
  401e0c:	mov    edx,DWORD PTR [rbx+0x8]
  401e0f:	cmp    edx,0x1
  401e12:	jne    0x40202c
  401e18:	add    rbx,0xc
  401e1c:	cmp    rbx,rsi
  401e1f:	jae    0x401d5b
  401e25:	mov    r12,QWORD PTR [rip+0x3544]        # 0x405370
  401e2c:	lea    r13,[rbp-0x30]
  401e30:	movabs r14,0xffffffff00000000
  401e3a:	mov    ecx,DWORD PTR [rbx+0x4]
  401e3d:	mov    eax,DWORD PTR [rbx]
  401e3f:	movzx  edx,BYTE PTR [rbx+0x8]
  401e43:	add    rax,r12
  401e46:	add    rcx,r12
  401e49:	cmp    edx,0x10
  401e4c:	mov    r8,QWORD PTR [rax]
  401e4f:	je     0x401f96
  401e55:	jbe    0x401f5d
  401e5b:	cmp    edx,0x20
  401e5e:	je     0x401fdf
  401e64:	cmp    edx,0x40
  401e67:	jne    0x401fcb
  401e6d:	sub    r8,rax
  401e70:	mov    rdx,r13
  401e73:	mov    rdi,r13
  401e76:	mov    rax,r8
  401e79:	add    rax,QWORD PTR [rcx]
  401e7c:	mov    r8d,0x8
  401e82:	mov    QWORD PTR [rbp-0x30],rax
  401e86:	call   0x401bd0
  401e8b:	add    rbx,0xc
  401e8f:	cmp    rbx,rsi
  401e92:	jb     0x401e3a
  401e94:	mov    eax,DWORD PTR [rip+0x67ea]        # 0x408684
  401e9a:	xor    ebx,ebx
  401e9c:	xor    esi,esi
  401e9e:	test   eax,eax
  401ea0:	jle    0x401d5b
  401ea6:	mov    r14,QWORD PTR [rip+0x74fb]        # 0x4093a8
  401ead:	lea    r13,[rbp-0x34]
  401eb1:	mov    r12,QWORD PTR [rip+0x74e8]        # 0x4093a0
  401eb8:	jmp    0x401ed3
  401eba:	nop    WORD PTR [rax+rax*1+0x0]
  401ec0:	add    esi,0x1
  401ec3:	add    rbx,0x18
  401ec7:	cmp    esi,DWORD PTR [rip+0x67b7]        # 0x408684
  401ecd:	jge    0x401d5b
  401ed3:	mov    rax,rbx
  401ed6:	add    rax,QWORD PTR [rip+0x67ab]        # 0x408688
  401edd:	mov    edx,DWORD PTR [rax]
  401edf:	test   edx,edx
  401ee1:	je     0x401ec0
  401ee3:	mov    rcx,QWORD PTR [rax+0x8]
  401ee7:	mov    r8d,0x30
  401eed:	mov    rdx,rdi
  401ef0:	call   r14
  401ef3:	test   rax,rax
  401ef6:	je     0x40200e
  401efc:	mov    rax,QWORD PTR [rip+0x6785]        # 0x408688
  401f03:	mov    r9,r13
  401f06:	mov    rdx,QWORD PTR [rbp-0x18]
  401f0a:	mov    rcx,QWORD PTR [rbp-0x30]
  401f0e:	mov    r8d,DWORD PTR [rax+rbx*1]
  401f12:	call   r12
  401f15:	jmp    0x401ec0
  401f17:	nop    WORD PTR [rax+rax*1+0x0]
  401f20:	cmp    rbx,rsi
  401f23:	jae    0x401d5b
  401f29:	mov    r12,QWORD PTR [rip+0x3440]        # 0x405370
  401f30:	lea    rdi,[rbp-0x30]
  401f34:	mov    ecx,DWORD PTR [rbx+0x4]
  401f37:	mov    eax,DWORD PTR [rbx]
  401f39:	mov    r8d,0x4
  401f3f:	mov    rdx,rdi
  401f42:	add    rbx,0x8
  401f46:	add    rcx,r12
  401f49:	add    eax,DWORD PTR [rcx]
  401f4b:	mov    DWORD PTR [rbp-0x30],eax
  401f4e:	call   0x401bd0
  401f53:	cmp    rbx,rsi
  401f56:	jb     0x401f34
  401f58:	jmp    0x401e94
  401f5d:	cmp    edx,0x8
  401f60:	jne    0x401fcb
  401f62:	movzx  edx,BYTE PTR [rcx]
  401f65:	mov    rdi,r13
  401f68:	mov    r10,rdx
  401f6b:	or     r10,0xffffffffffffff00
  401f72:	test   dl,dl
  401f74:	cmovs  rdx,r10
  401f78:	sub    rdx,rax
  401f7b:	lea    rax,[r8+rdx*1]
  401f7f:	mov    r8d,0x1
  401f85:	mov    rdx,r13
  401f88:	mov    QWORD PTR [rbp-0x30],rax
  401f8c:	call   0x401bd0
  401f91:	jmp    0x401e8b
  401f96:	movzx  edx,WORD PTR [rcx]
  401f99:	mov    rdi,r13
  401f9c:	mov    r10,rdx
  401f9f:	or     r10,0xffffffffffff0000
  401fa6:	test   dx,dx
  401fa9:	cmovs  rdx,r10
  401fad:	sub    rdx,rax
  401fb0:	lea    rax,[r8+rdx*1]
  401fb4:	mov    r8d,0x2
  401fba:	mov    rdx,r13
  401fbd:	mov    QWORD PTR [rbp-0x30],rax
  401fc1:	call   0x401bd0
  401fc6:	jmp    0x401e8b
  401fcb:	lea    rcx,[rip+0x32e6]        # 0x4052b8
  401fd2:	mov    QWORD PTR [rbp-0x30],0x0
  401fda:	call   0x401b60
  401fdf:	mov    edx,DWORD PTR [rcx]
  401fe1:	mov    rdi,r13
  401fe4:	mov    r10,rdx
  401fe7:	or     r10,r14
  401fea:	test   edx,edx
  401fec:	cmovs  rdx,r10
  401ff0:	sub    rdx,rax
  401ff3:	lea    rax,[r8+rdx*1]
  401ff7:	mov    r8d,0x4
  401ffd:	mov    rdx,r13
  402000:	mov    QWORD PTR [rbp-0x30],rax
  402004:	call   0x401bd0
  402009:	jmp    0x401e8b
  40200e:	add    rbx,QWORD PTR [rip+0x6673]        # 0x408688
  402015:	lea    rcx,[rip+0x3204]        # 0x405220
  40201c:	mov    rax,QWORD PTR [rbx+0x10]
  402020:	mov    r8,QWORD PTR [rbx+0x8]
  402024:	mov    edx,DWORD PTR [rax+0x8]
  402027:	call   0x401b60
  40202c:	lea    rcx,[rip+0x324d]        # 0x405280
  402033:	call   0x401b60
  402038:	nop
  402039:	nop
  40203a:	nop
  40203b:	nop
  40203c:	nop
  40203d:	nop
  40203e:	nop
  40203f:	nop
  402040:	sub    rsp,0x28
  402044:	mov    eax,DWORD PTR [rcx]
  402046:	cmp    eax,0xc0000091
  40204b:	ja     0x4020b0
  40204d:	cmp    eax,0xc000008d
  402052:	jae    0x4020cf
  402054:	cmp    eax,0xc0000008
  402059:	je     0x402170
  40205f:	ja     0x402140
  402065:	cmp    eax,0x80000002
  40206a:	je     0x402170
  402070:	cmp    eax,0xc0000005
  402075:	jne    0x40214e
  40207b:	xor    edx,edx
  40207d:	mov    ecx,0xb
  402082:	call   0x402b10
  402087:	cmp    rax,0x1
  40208b:	je     0x4021d0
  402091:	test   rax,rax
  402094:	je     0x4021b0
  40209a:	mov    ecx,0xb
  40209f:	call   rax
  4020a1:	xor    eax,eax
  4020a3:	add    rsp,0x28
  4020a7:	ret    
  4020a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4020b0:	cmp    eax,0xc0000094
  4020b5:	je     0x402180
  4020bb:	ja     0x402100
  4020bd:	cmp    eax,0xc0000092
  4020c2:	je     0x402170
  4020c8:	cmp    eax,0xc0000093
  4020cd:	jne    0x40214e
  4020cf:	xor    edx,edx
  4020d1:	mov    ecx,0x8
  4020d6:	call   0x402b10
  4020db:	cmp    rax,0x1
  4020df:	mov    rdx,rax
  4020e2:	je     0x402158
  4020e4:	test   rdx,rdx
  4020e7:	mov    eax,0x1
  4020ec:	je     0x4020a3
  4020ee:	mov    ecx,0x8
  4020f3:	call   rdx
  4020f5:	xor    eax,eax
  4020f7:	add    rsp,0x28
  4020fb:	ret    
  4020fc:	nop    DWORD PTR [rax+0x0]
  402100:	cmp    eax,0xc0000095
  402105:	je     0x402170
  402107:	cmp    eax,0xc0000096
  40210c:	jne    0x40214e
  40210e:	xor    edx,edx
  402110:	mov    ecx,0x4
  402115:	call   0x402b10
  40211a:	cmp    rax,0x1
  40211e:	je     0x4021ba
  402124:	test   rax,rax
  402127:	je     0x4021b0
  40212d:	mov    ecx,0x4
  402132:	call   rax
  402134:	xor    eax,eax
  402136:	jmp    0x4020a3
  40213b:	nop    DWORD PTR [rax+rax*1+0x0]
  402140:	cmp    eax,0xc000001d
  402145:	je     0x40210e
  402147:	cmp    eax,0xc000008c
  40214c:	je     0x402170
  40214e:	mov    eax,0x1
  402153:	add    rsp,0x28
  402157:	ret    
  402158:	mov    edx,0x1
  40215d:	mov    ecx,0x8
  402162:	call   0x402b10
  402167:	call   0x401b30
  40216c:	nop    DWORD PTR [rax+0x0]
  402170:	xor    eax,eax
  402172:	add    rsp,0x28
  402176:	ret    
  402177:	nop    WORD PTR [rax+rax*1+0x0]
  402180:	xor    edx,edx
  402182:	mov    ecx,0x8
  402187:	call   0x402b10
  40218c:	cmp    rax,0x1
  402190:	mov    rdx,rax
  402193:	jne    0x4020e4
  402199:	mov    edx,0x1
  40219e:	mov    ecx,0x8
  4021a3:	call   0x402b10
  4021a8:	xor    eax,eax
  4021aa:	jmp    0x4020a3
  4021af:	nop
  4021b0:	mov    eax,0x4
  4021b5:	add    rsp,0x28
  4021b9:	ret    
  4021ba:	mov    edx,0x1
  4021bf:	mov    ecx,0x4
  4021c4:	call   0x402b10
  4021c9:	xor    eax,eax
  4021cb:	jmp    0x4020a3
  4021d0:	mov    edx,0x1
  4021d5:	mov    ecx,0xb
  4021da:	call   0x402b10
  4021df:	xor    eax,eax
  4021e1:	jmp    0x4020a3
  4021e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021f0:	push   r12
  4021f2:	push   rbp
  4021f3:	push   rdi
  4021f4:	push   rsi
  4021f5:	push   rbx
  4021f6:	sub    rsp,0x20
  4021fa:	call   0x402960
  4021ff:	mov    rbp,rax
  402202:	mov    eax,DWORD PTR [rip+0x64c0]        # 0x4086c8
  402208:	test   eax,eax
  40220a:	jne    0x402231
  40220c:	test   rbp,rbp
  40220f:	je     0x402231
  402211:	lea    rcx,[rip+0x30d8]        # 0x4052f0
  402218:	mov    DWORD PTR [rip+0x64a6],0x1        # 0x4086c8
  402222:	call   0x4027a0
  402227:	test   rax,rax
  40222a:	je     0x402240
  40222c:	mov    eax,0x1
  402231:	add    rsp,0x20
  402235:	pop    rbx
  402236:	pop    rsi
  402237:	pop    rdi
  402238:	pop    rbp
  402239:	pop    r12
  40223b:	ret    
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	lea    rbx,[rip+0x65b9]        # 0x408800
  402247:	mov    ecx,0x30
  40224c:	lea    rdx,[rip+0x64ad]        # 0x408700
  402253:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402040
  40225a:	xor    esi,esi
  40225c:	mov    rdi,rbx
  40225f:	rep stos QWORD PTR es:[rdi],rax
  402262:	mov    rdi,rdx
  402265:	sub    r12,rbp
  402268:	mov    cl,0x20
  40226a:	rep stos QWORD PTR es:[rdi],rax
  40226d:	mov    rdi,rdx
  402270:	jmp    0x4022a0
  402272:	mov    BYTE PTR [rdi],0x9
  402275:	mov    DWORD PTR [rdi+0x4],r12d
  402279:	add    rsi,0x1
  40227d:	mov    edx,DWORD PTR [rax+0xc]
  402280:	add    rbx,0xc
  402284:	mov    DWORD PTR [rbx-0xc],edx
  402287:	add    edx,DWORD PTR [rax+0x8]
  40228a:	mov    rax,rdi
  40228d:	sub    rax,rbp
  402290:	add    rdi,0x8
  402294:	mov    DWORD PTR [rbx-0x4],eax
  402297:	mov    DWORD PTR [rbx-0x8],edx
  40229a:	cmp    rsi,0x20
  40229e:	je     0x4022d5
  4022a0:	mov    rcx,rsi
  4022a3:	call   0x4028d0
  4022a8:	test   rax,rax
  4022ab:	jne    0x402272
  4022ad:	test   rsi,rsi
  4022b0:	je     0x40222c
  4022b6:	mov    edx,esi
  4022b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022c0:	mov    r8,rbp
  4022c3:	lea    rcx,[rip+0x6536]        # 0x408800
  4022ca:	call   QWORD PTR [rip+0x7088]        # 0x409358
  4022d0:	jmp    0x40222c
  4022d5:	mov    edx,0x20
  4022da:	jmp    0x4022c0
  4022dc:	nop    DWORD PTR [rax+0x0]
  4022e0:	push   rbx
  4022e1:	sub    rsp,0x20
  4022e5:	mov    rdx,QWORD PTR [rcx]
  4022e8:	mov    eax,DWORD PTR [rdx]
  4022ea:	mov    r8d,eax
  4022ed:	and    r8d,0x20ffffff
  4022f4:	cmp    r8d,0x20474343
  4022fb:	je     0x402400
  402301:	cmp    eax,0xc0000091
  402306:	mov    rbx,rcx
  402309:	ja     0x402390
  40230f:	cmp    eax,0xc000008d
  402314:	jae    0x4023a7
  40231a:	cmp    eax,0xc0000008
  40231f:	je     0x402353
  402321:	ja     0x402360
  402323:	cmp    eax,0x80000002
  402328:	je     0x402353
  40232a:	cmp    eax,0xc0000005
  40232f:	jne    0x402372
  402331:	xor    edx,edx
  402333:	mov    ecx,0xb
  402338:	call   0x402b10
  40233d:	cmp    rax,0x1
  402341:	je     0x402470
  402347:	test   rax,rax
  40234a:	je     0x402372
  40234c:	mov    ecx,0xb
  402351:	call   rax
  402353:	mov    eax,0xffffffff
  402358:	add    rsp,0x20
  40235c:	pop    rbx
  40235d:	ret    
  40235e:	xchg   ax,ax
  402360:	cmp    eax,0xc000001d
  402365:	je     0x402426
  40236b:	cmp    eax,0xc000008c
  402370:	je     0x402353
  402372:	mov    rax,QWORD PTR [rip+0x6347]        # 0x4086c0
  402379:	test   rax,rax
  40237c:	je     0x402358
  40237e:	mov    rcx,rbx
  402381:	add    rsp,0x20
  402385:	pop    rbx
  402386:	rex.W jmp rax
  402389:	nop    DWORD PTR [rax+0x0]
  402390:	cmp    eax,0xc0000094
  402395:	je     0x4023d2
  402397:	ja     0x402410
  402399:	cmp    eax,0xc0000092
  40239e:	je     0x402353
  4023a0:	cmp    eax,0xc0000093
  4023a5:	jne    0x402372
  4023a7:	xor    edx,edx
  4023a9:	mov    ecx,0x8
  4023ae:	call   0x402b10
  4023b3:	cmp    rax,0x1
  4023b7:	jne    0x4023e4
  4023b9:	mov    edx,0x1
  4023be:	mov    ecx,0x8
  4023c3:	call   0x402b10
  4023c8:	call   0x401b30
  4023cd:	jmp    0x402353
  4023d2:	xor    edx,edx
  4023d4:	mov    ecx,0x8
  4023d9:	call   0x402b10
  4023de:	cmp    rax,0x1
  4023e2:	je     0x402452
  4023e4:	test   rax,rax
  4023e7:	je     0x402372
  4023e9:	mov    ecx,0x8
  4023ee:	call   rax
  4023f0:	mov    eax,0xffffffff
  4023f5:	jmp    0x402358
  4023fa:	nop    WORD PTR [rax+rax*1+0x0]
  402400:	test   BYTE PTR [rdx+0x4],0x1
  402404:	jne    0x402301
  40240a:	jmp    0x402353
  40240f:	nop
  402410:	cmp    eax,0xc0000095
  402415:	je     0x402353
  40241b:	cmp    eax,0xc0000096
  402420:	jne    0x402372
  402426:	xor    edx,edx
  402428:	mov    ecx,0x4
  40242d:	call   0x402b10
  402432:	cmp    rax,0x1
  402436:	je     0x402484
  402438:	test   rax,rax
  40243b:	je     0x402372
  402441:	mov    ecx,0x4
  402446:	call   rax
  402448:	mov    eax,0xffffffff
  40244d:	jmp    0x402358
  402452:	mov    edx,0x1
  402457:	mov    ecx,0x8
  40245c:	call   0x402b10
  402461:	jmp    0x402353
  402466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402470:	mov    edx,0x1
  402475:	mov    ecx,0xb
  40247a:	call   0x402b10
  40247f:	jmp    0x402353
  402484:	mov    edx,0x1
  402489:	mov    ecx,0x4
  40248e:	call   0x402b10
  402493:	jmp    0x402353
  402498:	nop
  402499:	nop
  40249a:	nop
  40249b:	nop
  40249c:	nop
  40249d:	nop
  40249e:	nop
  40249f:	nop
  4024a0:	push   rbp
  4024a1:	push   rdi
  4024a2:	push   rsi
  4024a3:	push   rbx
  4024a4:	sub    rsp,0x28
  4024a8:	lea    rcx,[rip+0x64f1]        # 0x4089a0
  4024af:	call   QWORD PTR [rip+0x6e4b]        # 0x409300
  4024b5:	mov    rbx,QWORD PTR [rip+0x64c4]        # 0x408980
  4024bc:	test   rbx,rbx
  4024bf:	je     0x4024f4
  4024c1:	mov    rbp,QWORD PTR [rip+0x6ec8]        # 0x409390
  4024c8:	mov    rdi,QWORD PTR [rip+0x6e51]        # 0x409320
  4024cf:	nop
  4024d0:	mov    ecx,DWORD PTR [rbx]
  4024d2:	call   rbp
  4024d4:	mov    rsi,rax
  4024d7:	call   rdi
  4024d9:	test   eax,eax
  4024db:	jne    0x4024eb
  4024dd:	test   rsi,rsi
  4024e0:	je     0x4024eb
  4024e2:	mov    rax,QWORD PTR [rbx+0x8]
  4024e6:	mov    rcx,rsi
  4024e9:	call   rax
  4024eb:	mov    rbx,QWORD PTR [rbx+0x10]
  4024ef:	test   rbx,rbx
  4024f2:	jne    0x4024d0
  4024f4:	mov    rax,QWORD PTR [rip+0x6e4d]        # 0x409348
  4024fb:	lea    rcx,[rip+0x649e]        # 0x4089a0
  402502:	add    rsp,0x28
  402506:	pop    rbx
  402507:	pop    rsi
  402508:	pop    rdi
  402509:	pop    rbp
  40250a:	rex.W jmp rax
  40250d:	nop    DWORD PTR [rax]
  402510:	push   rdi
  402511:	push   rsi
  402512:	push   rbx
  402513:	sub    rsp,0x20
  402517:	mov    eax,DWORD PTR [rip+0x646b]        # 0x408988
  40251d:	test   eax,eax
  40251f:	jne    0x402530
  402521:	add    rsp,0x20
  402525:	pop    rbx
  402526:	pop    rsi
  402527:	pop    rdi
  402528:	ret    
  402529:	nop    DWORD PTR [rax+0x0]
  402530:	mov    rsi,rdx
  402533:	mov    edi,ecx
  402535:	mov    edx,0x18
  40253a:	mov    ecx,0x1
  40253f:	call   0x402b48
  402544:	test   rax,rax
  402547:	mov    rbx,rax
  40254a:	je     0x402588
  40254c:	mov    DWORD PTR [rax],edi
  40254e:	mov    QWORD PTR [rax+0x8],rsi
  402552:	lea    rcx,[rip+0x6447]        # 0x4089a0
  402559:	call   QWORD PTR [rip+0x6da1]        # 0x409300
  40255f:	mov    rax,QWORD PTR [rip+0x641a]        # 0x408980
  402566:	lea    rcx,[rip+0x6433]        # 0x4089a0
  40256d:	mov    QWORD PTR [rip+0x640c],rbx        # 0x408980
  402574:	mov    QWORD PTR [rbx+0x10],rax
  402578:	call   QWORD PTR [rip+0x6dca]        # 0x409348
  40257e:	xor    eax,eax
  402580:	add    rsp,0x20
  402584:	pop    rbx
  402585:	pop    rsi
  402586:	pop    rdi
  402587:	ret    
  402588:	mov    eax,0xffffffff
  40258d:	jmp    0x402521
  40258f:	nop
  402590:	push   rbx
  402591:	sub    rsp,0x20
  402595:	mov    eax,DWORD PTR [rip+0x63ed]        # 0x408988
  40259b:	test   eax,eax
  40259d:	jne    0x4025b0
  40259f:	xor    eax,eax
  4025a1:	add    rsp,0x20
  4025a5:	pop    rbx
  4025a6:	ret    
  4025a7:	nop    WORD PTR [rax+rax*1+0x0]
  4025b0:	mov    ebx,ecx
  4025b2:	lea    rcx,[rip+0x63e7]        # 0x4089a0
  4025b9:	call   QWORD PTR [rip+0x6d41]        # 0x409300
  4025bf:	mov    rdx,QWORD PTR [rip+0x63ba]        # 0x408980
  4025c6:	test   rdx,rdx
  4025c9:	je     0x4025e7
  4025cb:	mov    eax,DWORD PTR [rdx]
  4025cd:	cmp    eax,ebx
  4025cf:	jne    0x4025de
  4025d1:	jmp    0x40261f
  4025d3:	mov    r8d,DWORD PTR [rax]
  4025d6:	cmp    r8d,ebx
  4025d9:	je     0x402600
  4025db:	mov    rdx,rax
  4025de:	mov    rax,QWORD PTR [rdx+0x10]
  4025e2:	test   rax,rax
  4025e5:	jne    0x4025d3
  4025e7:	lea    rcx,[rip+0x63b2]        # 0x4089a0
  4025ee:	call   QWORD PTR [rip+0x6d54]        # 0x409348
  4025f4:	xor    eax,eax
  4025f6:	add    rsp,0x20
  4025fa:	pop    rbx
  4025fb:	ret    
  4025fc:	nop    DWORD PTR [rax+0x0]
  402600:	mov    rcx,rax
  402603:	mov    rax,QWORD PTR [rax+0x10]
  402607:	mov    QWORD PTR [rdx+0x10],rax
  40260b:	call   0x402b30
  402610:	lea    rcx,[rip+0x6389]        # 0x4089a0
  402617:	call   QWORD PTR [rip+0x6d2b]        # 0x409348
  40261d:	jmp    0x4025f4
  40261f:	mov    rax,QWORD PTR [rdx+0x10]
  402623:	mov    rcx,rdx
  402626:	mov    QWORD PTR [rip+0x6353],rax        # 0x408980
  40262d:	jmp    0x40260b
  40262f:	nop
  402630:	push   rbx
  402631:	sub    rsp,0x20
  402635:	cmp    edx,0x1
  402638:	je     0x4026d0
  40263e:	jb     0x402670
  402640:	cmp    edx,0x2
  402643:	je     0x402660
  402645:	cmp    edx,0x3
  402648:	jne    0x402665
  40264a:	mov    eax,DWORD PTR [rip+0x6338]        # 0x408988
  402650:	test   eax,eax
  402652:	je     0x402665
  402654:	call   0x4024a0
  402659:	jmp    0x402665
  40265b:	nop    DWORD PTR [rax+rax*1+0x0]
  402660:	call   0x401b30
  402665:	mov    eax,0x1
  40266a:	add    rsp,0x20
  40266e:	pop    rbx
  40266f:	ret    
  402670:	mov    eax,DWORD PTR [rip+0x6312]        # 0x408988
  402676:	test   eax,eax
  402678:	jne    0x402700
  40267e:	mov    eax,DWORD PTR [rip+0x6304]        # 0x408988
  402684:	cmp    eax,0x1
  402687:	jne    0x402665
  402689:	mov    rcx,QWORD PTR [rip+0x62f0]        # 0x408980
  402690:	test   rcx,rcx
  402693:	je     0x4026a6
  402695:	mov    rbx,QWORD PTR [rcx+0x10]
  402699:	call   0x402b30
  40269e:	test   rbx,rbx
  4026a1:	mov    rcx,rbx
  4026a4:	jne    0x402695
  4026a6:	lea    rcx,[rip+0x62f3]        # 0x4089a0
  4026ad:	mov    QWORD PTR [rip+0x62c8],0x0        # 0x408980
  4026b8:	mov    DWORD PTR [rip+0x62c6],0x0        # 0x408988
  4026c2:	call   QWORD PTR [rip+0x6c30]        # 0x4092f8
  4026c8:	jmp    0x402665
  4026ca:	nop    WORD PTR [rax+rax*1+0x0]
  4026d0:	mov    eax,DWORD PTR [rip+0x62b2]        # 0x408988
  4026d6:	test   eax,eax
  4026d8:	je     0x4026f0
  4026da:	mov    eax,0x1
  4026df:	mov    DWORD PTR [rip+0x629f],0x1        # 0x408988
  4026e9:	add    rsp,0x20
  4026ed:	pop    rbx
  4026ee:	ret    
  4026ef:	nop
  4026f0:	lea    rcx,[rip+0x62a9]        # 0x4089a0
  4026f7:	call   QWORD PTR [rip+0x6c43]        # 0x409340
  4026fd:	jmp    0x4026da
  4026ff:	nop
  402700:	call   0x4024a0
  402705:	jmp    0x40267e
  40270a:	nop
  40270b:	nop
  40270c:	nop
  40270d:	nop
  40270e:	nop
  40270f:	nop
  402710:	movsxd rax,DWORD PTR [rcx+0x3c]
  402714:	add    rcx,rax
  402717:	xor    eax,eax
  402719:	cmp    DWORD PTR [rcx],0x4550
  40271f:	je     0x402723
  402721:	repz ret 
  402723:	xor    eax,eax
  402725:	cmp    WORD PTR [rcx+0x18],0x20b
  40272b:	sete   al
  40272e:	ret    
  40272f:	nop
  402730:	cmp    WORD PTR [rcx],0x5a4d
  402735:	je     0x402740
  402737:	xor    eax,eax
  402739:	ret    
  40273a:	nop    WORD PTR [rax+rax*1+0x0]
  402740:	jmp    0x402710
  402742:	nop    DWORD PTR [rax+0x0]
  402746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402750:	movsxd rax,DWORD PTR [rcx+0x3c]
  402754:	add    rcx,rax
  402757:	movzx  eax,WORD PTR [rcx+0x14]
  40275b:	lea    rax,[rcx+rax*1+0x18]
  402760:	movzx  ecx,WORD PTR [rcx+0x6]
  402764:	test   ecx,ecx
  402766:	je     0x402791
  402768:	sub    ecx,0x1
  40276b:	lea    rcx,[rcx+rcx*4]
  40276f:	lea    r9,[rax+rcx*8+0x28]
  402774:	mov    r8d,DWORD PTR [rax+0xc]
  402778:	cmp    r8,rdx
  40277b:	mov    rcx,r8
  40277e:	ja     0x402788
  402780:	add    ecx,DWORD PTR [rax+0x8]
  402783:	cmp    rdx,rcx
  402786:	jb     0x402793
  402788:	add    rax,0x28
  40278c:	cmp    rax,r9
  40278f:	jne    0x402774
  402791:	xor    eax,eax
  402793:	repz ret 
  402795:	nop
  402796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027a0:	push   rdi
  4027a1:	push   rsi
  4027a2:	push   rbx
  4027a3:	sub    rsp,0x20
  4027a7:	mov    rsi,rcx
  4027aa:	call   0x402b08
  4027af:	cmp    rax,0x8
  4027b3:	ja     0x4027d0
  4027b5:	mov    rbx,QWORD PTR [rip+0x2bb4]        # 0x405370
  4027bc:	xor    edi,edi
  4027be:	cmp    WORD PTR [rbx],0x5a4d
  4027c3:	je     0x4027e0
  4027c5:	mov    rax,rdi
  4027c8:	add    rsp,0x20
  4027cc:	pop    rbx
  4027cd:	pop    rsi
  4027ce:	pop    rdi
  4027cf:	ret    
  4027d0:	xor    edi,edi
  4027d2:	mov    rax,rdi
  4027d5:	add    rsp,0x20
  4027d9:	pop    rbx
  4027da:	pop    rsi
  4027db:	pop    rdi
  4027dc:	ret    
  4027dd:	nop    DWORD PTR [rax]
  4027e0:	mov    rcx,rbx
  4027e3:	call   0x402710
  4027e8:	test   eax,eax
  4027ea:	je     0x4027c5
  4027ec:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4027f0:	add    rdx,rbx
  4027f3:	movzx  eax,WORD PTR [rdx+0x14]
  4027f7:	lea    rbx,[rdx+rax*1+0x18]
  4027fc:	movzx  eax,WORD PTR [rdx+0x6]
  402800:	test   eax,eax
  402802:	je     0x4027c5
  402804:	sub    eax,0x1
  402807:	lea    rax,[rax+rax*4]
  40280b:	lea    rdi,[rbx+rax*8+0x28]
  402810:	jmp    0x40281b
  402812:	add    rbx,0x28
  402816:	cmp    rbx,rdi
  402819:	je     0x4027d0
  40281b:	mov    r8d,0x8
  402821:	mov    rdx,rsi
  402824:	mov    rcx,rbx
  402827:	call   0x402b00
  40282c:	test   eax,eax
  40282e:	jne    0x402812
  402830:	mov    rdi,rbx
  402833:	mov    rax,rdi
  402836:	add    rsp,0x20
  40283a:	pop    rbx
  40283b:	pop    rsi
  40283c:	pop    rdi
  40283d:	ret    
  40283e:	xchg   ax,ax
  402840:	push   rsi
  402841:	push   rbx
  402842:	sub    rsp,0x28
  402846:	mov    rbx,QWORD PTR [rip+0x2b23]        # 0x405370
  40284d:	cmp    WORD PTR [rbx],0x5a4d
  402852:	je     0x402860
  402854:	xor    eax,eax
  402856:	add    rsp,0x28
  40285a:	pop    rbx
  40285b:	pop    rsi
  40285c:	ret    
  40285d:	nop    DWORD PTR [rax]
  402860:	mov    rsi,rcx
  402863:	mov    rcx,rbx
  402866:	call   0x402710
  40286b:	test   eax,eax
  40286d:	je     0x402854
  40286f:	sub    rsi,rbx
  402872:	mov    rcx,rbx
  402875:	mov    rdx,rsi
  402878:	add    rsp,0x28
  40287c:	pop    rbx
  40287d:	pop    rsi
  40287e:	jmp    0x402750
  402883:	nop    DWORD PTR [rax]
  402886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402890:	push   rbx
  402891:	sub    rsp,0x20
  402895:	mov    rbx,QWORD PTR [rip+0x2ad4]        # 0x405370
  40289c:	xor    eax,eax
  40289e:	cmp    WORD PTR [rbx],0x5a4d
  4028a3:	je     0x4028b0
  4028a5:	add    rsp,0x20
  4028a9:	pop    rbx
  4028aa:	ret    
  4028ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4028b0:	mov    rcx,rbx
  4028b3:	call   0x402710
  4028b8:	test   eax,eax
  4028ba:	je     0x4028a5
  4028bc:	movsxd rax,DWORD PTR [rbx+0x3c]
  4028c0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4028c5:	add    rsp,0x20
  4028c9:	pop    rbx
  4028ca:	ret    
  4028cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4028d0:	push   rdi
  4028d1:	push   rsi
  4028d2:	push   rbx
  4028d3:	sub    rsp,0x20
  4028d7:	mov    rsi,QWORD PTR [rip+0x2a92]        # 0x405370
  4028de:	xor    edi,edi
  4028e0:	mov    rbx,rcx
  4028e3:	cmp    WORD PTR [rsi],0x5a4d
  4028e8:	je     0x4028f5
  4028ea:	mov    rax,rdi
  4028ed:	add    rsp,0x20
  4028f1:	pop    rbx
  4028f2:	pop    rsi
  4028f3:	pop    rdi
  4028f4:	ret    
  4028f5:	mov    rcx,rsi
  4028f8:	call   0x402710
  4028fd:	test   eax,eax
  4028ff:	je     0x4028ea
  402901:	movsxd rax,DWORD PTR [rsi+0x3c]
  402905:	add    rsi,rax
  402908:	movzx  eax,WORD PTR [rsi+0x14]
  40290c:	lea    rdx,[rsi+rax*1+0x18]
  402911:	movzx  eax,WORD PTR [rsi+0x6]
  402915:	test   eax,eax
  402917:	je     0x4028ea
  402919:	sub    eax,0x1
  40291c:	lea    rax,[rax+rax*4]
  402920:	lea    rax,[rdx+rax*8+0x28]
  402925:	test   BYTE PTR [rdx+0x27],0x20
  402929:	je     0x402934
  40292b:	test   rbx,rbx
  40292e:	je     0x402950
  402930:	sub    rbx,0x1
  402934:	add    rdx,0x28
  402938:	cmp    rdx,rax
  40293b:	jne    0x402925
  40293d:	xor    edi,edi
  40293f:	mov    rax,rdi
  402942:	add    rsp,0x20
  402946:	pop    rbx
  402947:	pop    rsi
  402948:	pop    rdi
  402949:	ret    
  40294a:	nop    WORD PTR [rax+rax*1+0x0]
  402950:	mov    rdi,rdx
  402953:	mov    rax,rdi
  402956:	add    rsp,0x20
  40295a:	pop    rbx
  40295b:	pop    rsi
  40295c:	pop    rdi
  40295d:	ret    
  40295e:	xchg   ax,ax
  402960:	push   rsi
  402961:	push   rbx
  402962:	sub    rsp,0x28
  402966:	mov    rsi,QWORD PTR [rip+0x2a03]        # 0x405370
  40296d:	xor    ebx,ebx
  40296f:	cmp    WORD PTR [rsi],0x5a4d
  402974:	je     0x402980
  402976:	mov    rax,rbx
  402979:	add    rsp,0x28
  40297d:	pop    rbx
  40297e:	pop    rsi
  40297f:	ret    
  402980:	mov    rcx,rsi
  402983:	call   0x402710
  402988:	test   eax,eax
  40298a:	cmovne rbx,rsi
  40298e:	mov    rax,rbx
  402991:	add    rsp,0x28
  402995:	pop    rbx
  402996:	pop    rsi
  402997:	ret    
  402998:	nop    DWORD PTR [rax+rax*1+0x0]
  4029a0:	push   rsi
  4029a1:	push   rbx
  4029a2:	sub    rsp,0x28
  4029a6:	mov    rbx,QWORD PTR [rip+0x29c3]        # 0x405370
  4029ad:	xor    eax,eax
  4029af:	cmp    WORD PTR [rbx],0x5a4d
  4029b4:	je     0x4029c0
  4029b6:	add    rsp,0x28
  4029ba:	pop    rbx
  4029bb:	pop    rsi
  4029bc:	ret    
  4029bd:	nop    DWORD PTR [rax]
  4029c0:	mov    rsi,rcx
  4029c3:	mov    rcx,rbx
  4029c6:	call   0x402710
  4029cb:	test   eax,eax
  4029cd:	je     0x4029b6
  4029cf:	sub    rsi,rbx
  4029d2:	mov    rcx,rbx
  4029d5:	mov    rdx,rsi
  4029d8:	call   0x402750
  4029dd:	test   rax,rax
  4029e0:	je     0x4029f1
  4029e2:	mov    eax,DWORD PTR [rax+0x24]
  4029e5:	not    eax
  4029e7:	shr    eax,0x1f
  4029ea:	add    rsp,0x28
  4029ee:	pop    rbx
  4029ef:	pop    rsi
  4029f0:	ret    
  4029f1:	xor    eax,eax
  4029f3:	jmp    0x4029b6
  4029f5:	nop
  4029f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a00:	push   rbp
  402a01:	push   rdi
  402a02:	push   rsi
  402a03:	push   rbx
  402a04:	sub    rsp,0x28
  402a08:	mov    rdi,QWORD PTR [rip+0x2961]        # 0x405370
  402a0f:	xor    ebp,ebp
  402a11:	mov    esi,ecx
  402a13:	cmp    WORD PTR [rdi],0x5a4d
  402a18:	je     0x402a30
  402a1a:	mov    rax,rbp
  402a1d:	add    rsp,0x28
  402a21:	pop    rbx
  402a22:	pop    rsi
  402a23:	pop    rdi
  402a24:	pop    rbp
  402a25:	ret    
  402a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402a30:	mov    rcx,rdi
  402a33:	call   0x402710
  402a38:	test   eax,eax
  402a3a:	je     0x402a1a
  402a3c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402a40:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402a47:	test   edx,edx
  402a49:	je     0x402a1a
  402a4b:	mov    ebx,edx
  402a4d:	mov    rcx,rdi
  402a50:	mov    rdx,rbx
  402a53:	call   0x402750
  402a58:	test   rax,rax
  402a5b:	je     0x402a1a
  402a5d:	add    rbx,rdi
  402a60:	mov    rdx,rbx
  402a63:	jne    0x402a77
  402a65:	jmp    0x402a1a
  402a67:	nop    WORD PTR [rax+rax*1+0x0]
  402a70:	sub    esi,0x1
  402a73:	add    rdx,0x14
  402a77:	mov    ecx,DWORD PTR [rdx+0x4]
  402a7a:	test   ecx,ecx
  402a7c:	jne    0x402a85
  402a7e:	mov    eax,DWORD PTR [rdx+0xc]
  402a81:	test   eax,eax
  402a83:	je     0x402aa0
  402a85:	test   esi,esi
  402a87:	jg     0x402a70
  402a89:	mov    ebp,DWORD PTR [rdx+0xc]
  402a8c:	add    rbp,rdi
  402a8f:	mov    rax,rbp
  402a92:	add    rsp,0x28
  402a96:	pop    rbx
  402a97:	pop    rsi
  402a98:	pop    rdi
  402a99:	pop    rbp
  402a9a:	ret    
  402a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402aa0:	xor    ebp,ebp
  402aa2:	mov    rax,rbp
  402aa5:	add    rsp,0x28
  402aa9:	pop    rbx
  402aaa:	pop    rsi
  402aab:	pop    rdi
  402aac:	pop    rbp
  402aad:	ret    
  402aae:	nop
  402aaf:	nop
  402ab0:	push   rcx
  402ab1:	push   rax
  402ab2:	cmp    rax,0x1000
  402ab8:	lea    rcx,[rsp+0x18]
  402abd:	jb     0x402ad8
  402abf:	sub    rcx,0x1000
  402ac6:	or     QWORD PTR [rcx],0x0
  402aca:	sub    rax,0x1000
  402ad0:	cmp    rax,0x1000
  402ad6:	ja     0x402abf
  402ad8:	sub    rcx,rax
  402adb:	or     QWORD PTR [rcx],0x0
  402adf:	pop    rax
  402ae0:	pop    rcx
  402ae1:	ret    
  402ae2:	nop
  402ae3:	nop
  402ae4:	nop
  402ae5:	nop
  402ae6:	nop
  402ae7:	nop
  402ae8:	nop
  402ae9:	nop
  402aea:	nop
  402aeb:	nop
  402aec:	nop
  402aed:	nop
  402aee:	nop
  402aef:	nop
  402af0:	jmp    QWORD PTR [rip+0x69aa]        # 0x4094a0
  402af6:	nop
  402af7:	nop
  402af8:	jmp    QWORD PTR [rip+0x699a]        # 0x409498
  402afe:	nop
  402aff:	nop
  402b00:	jmp    QWORD PTR [rip+0x698a]        # 0x409490
  402b06:	nop
  402b07:	nop
  402b08:	jmp    QWORD PTR [rip+0x697a]        # 0x409488
  402b0e:	nop
  402b0f:	nop
  402b10:	jmp    QWORD PTR [rip+0x696a]        # 0x409480
  402b16:	nop
  402b17:	nop
  402b18:	jmp    QWORD PTR [rip+0x695a]        # 0x409478
  402b1e:	nop
  402b1f:	nop
  402b20:	jmp    QWORD PTR [rip+0x694a]        # 0x409470
  402b26:	nop
  402b27:	nop
  402b28:	jmp    QWORD PTR [rip+0x693a]        # 0x409468
  402b2e:	nop
  402b2f:	nop
  402b30:	jmp    QWORD PTR [rip+0x692a]        # 0x409460
  402b36:	nop
  402b37:	nop
  402b38:	jmp    QWORD PTR [rip+0x691a]        # 0x409458
  402b3e:	nop
  402b3f:	nop
  402b40:	jmp    QWORD PTR [rip+0x690a]        # 0x409450
  402b46:	nop
  402b47:	nop
  402b48:	jmp    QWORD PTR [rip+0x68fa]        # 0x409448
  402b4e:	nop
  402b4f:	nop
  402b50:	jmp    QWORD PTR [rip+0x68ea]        # 0x409440
  402b56:	nop
  402b57:	nop
  402b58:	jmp    QWORD PTR [rip+0x68da]        # 0x409438
  402b5e:	nop
  402b5f:	nop
  402b60:	jmp    QWORD PTR [rip+0x68ca]        # 0x409430
  402b66:	nop
  402b67:	nop
  402b68:	jmp    QWORD PTR [rip+0x68ba]        # 0x409428
  402b6e:	nop
  402b6f:	nop
  402b70:	jmp    QWORD PTR [rip+0x68aa]        # 0x409420
  402b76:	nop
  402b77:	nop
  402b78:	jmp    QWORD PTR [rip+0x689a]        # 0x409418
  402b7e:	nop
  402b7f:	nop
  402b80:	jmp    QWORD PTR [rip+0x6882]        # 0x409408
  402b86:	nop
  402b87:	nop
  402b88:	jmp    QWORD PTR [rip+0x6872]        # 0x409400
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x685a]        # 0x4093f0
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x684a]        # 0x4093e8
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x683a]        # 0x4093e0
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x682a]        # 0x4093d8
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x6812]        # 0x4093c8
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x6802]        # 0x4093c0
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0x67f2]        # 0x4093b8
  402bc6:	nop
  402bc7:	nop
  402bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd0:	mov    rax,QWORD PTR [rip+0x5e19]        # 0x4089f0
  402bd7:	ret    
  402bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  402be0:	mov    rax,rcx
  402be3:	xchg   QWORD PTR [rip+0x5e06],rax        # 0x4089f0
  402bea:	ret    
  402beb:	nop
  402bec:	nop
  402bed:	nop
  402bee:	nop
  402bef:	nop
  402bf0:	jmp    QWORD PTR [rip+0x67b2]        # 0x4093a8
  402bf6:	nop
  402bf7:	nop
  402bf8:	jmp    QWORD PTR [rip+0x67a2]        # 0x4093a0
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x6792]        # 0x409398
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x6782]        # 0x409390
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x6772]        # 0x409388
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x6762]        # 0x409380
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x6752]        # 0x409378
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x6742]        # 0x409370
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x6732]        # 0x409368
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x6722]        # 0x409360
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x6712]        # 0x409358
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x6702]        # 0x409350
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x66f2]        # 0x409348
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x66e2]        # 0x409340
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x66d2]        # 0x409338
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x66c2]        # 0x409330
  402c6e:	nop
  402c6f:	nop
  402c70:	jmp    QWORD PTR [rip+0x66b2]        # 0x409328
  402c76:	nop
  402c77:	nop
  402c78:	jmp    QWORD PTR [rip+0x66a2]        # 0x409320
  402c7e:	nop
  402c7f:	nop
  402c80:	jmp    QWORD PTR [rip+0x6692]        # 0x409318
  402c86:	nop
  402c87:	nop
  402c88:	jmp    QWORD PTR [rip+0x6682]        # 0x409310
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x6672]        # 0x409308
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x6662]        # 0x409300
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x6652]        # 0x4092f8
  402ca6:	nop
  402ca7:	nop
  402ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  402cb0:	push   rbp
  402cb1:	push   r13
  402cb3:	push   r12
  402cb5:	push   rdi
  402cb6:	push   rsi
  402cb7:	push   rbx
  402cb8:	mov    rbp,rsp
  402cbb:	sub    rsp,0x68
  402cbf:	mov    r12d,ecx
  402cc2:	mov    r13,rdx
  402cc5:	call   0x401700
  402cca:	cmp    r12d,0x1
  402cce:	je     0x402f29
  402cd4:	jle    0x402ced
  402cd6:	mov    rdx,QWORD PTR [r13+0x8]
  402cda:	movzx  eax,BYTE PTR [rdx]
  402cdd:	cmp    al,0x2d
  402cdf:	je     0x402eca
  402ce5:	cmp    al,0x2e
  402ce7:	je     0x402d9f
  402ced:	mov    rdi,QWORD PTR [rip+0x66e4]        # 0x4093d8
  402cf4:	call   rdi
  402cf6:	lea    rsi,[rax+0x60]
  402cfa:	call   rdi
  402cfc:	lea    rbx,[rax+0x30]
  402d00:	call   rdi
  402d02:	mov    rdx,rbx
  402d05:	mov    rcx,rax
  402d08:	mov    QWORD PTR [rsp+0x20],r13
  402d0d:	mov    r9d,r12d
  402d10:	mov    r8,rsi
  402d13:	call   0x401568
  402d18:	mov    rax,QWORD PTR [rip+0x27d1]        # 0x4054f0
  402d1f:	mov    rdx,rbp
  402d22:	mov    rcx,QWORD PTR [rax]
  402d25:	add    rcx,0x770
  402d2c:	call   0x402b60
  402d31:	test   eax,eax
  402d33:	mov    ebx,eax
  402d35:	je     0x402dd3
  402d3b:	mov    rax,QWORD PTR [rip+0x27ae]        # 0x4054f0
  402d42:	xor    ecx,ecx
  402d44:	mov    rax,QWORD PTR [rax]
  402d47:	mov    DWORD PTR [rax+0xac4],0x1
  402d51:	call   0x401570
  402d56:	lea    rdx,[rbp-0x18]
  402d5a:	lea    rcx,[rbp-0x1c]
  402d5e:	call   0x401550
  402d63:	mov    esi,DWORD PTR [rbp-0x1c]
  402d66:	test   esi,esi
  402d68:	jne    0x402d71
  402d6a:	mov    eax,DWORD PTR [rbp-0x18]
  402d6d:	test   eax,eax
  402d6f:	je     0x402d90
  402d71:	mov    edi,DWORD PTR [rbp-0x18]
  402d74:	call   QWORD PTR [rip+0x665e]        # 0x4093d8
  402d7a:	lea    rdx,[rip+0x22a7]        # 0x405028
  402d81:	lea    rcx,[rax+0x60]
  402d85:	mov    r9d,esi
  402d88:	mov    r8d,edi
  402d8b:	call   0x402b38
  402d90:	mov    eax,ebx
  402d92:	add    rsp,0x68
  402d96:	pop    rbx
  402d97:	pop    rsi
  402d98:	pop    rdi
  402d99:	pop    r12
  402d9b:	pop    r13
  402d9d:	pop    rbp
  402d9e:	ret    
  402d9f:	cmp    BYTE PTR [rdx+0x1],0x0
  402da3:	jne    0x402ced
  402da9:	mov    rax,QWORD PTR [rip+0x2750]        # 0x405500
  402db0:	mov    rbx,QWORD PTR [rax]
  402db3:	call   QWORD PTR [rip+0x661f]        # 0x4093d8
  402db9:	lea    rdx,[rip+0x280]        # 0x403040
  402dc0:	lea    rcx,[rax+0x30]
  402dc4:	mov    r8,rbx
  402dc7:	call   0x402b38
  402dcc:	xor    ecx,ecx
  402dce:	call   0x402b40
  402dd3:	lea    rcx,[rip+0x2226]        # 0x405000
  402dda:	xor    r8d,r8d
  402ddd:	xor    edx,edx
  402ddf:	call   0x401548
  402de4:	mov    rsi,QWORD PTR [rip+0x2705]        # 0x4054f0
  402deb:	lea    rdx,[rip+0x1dce]        # 0x404bc0
  402df2:	mov    rcx,QWORD PTR [rsi]
  402df5:	mov    DWORD PTR [rcx+0x40],0x1
  402dfc:	mov    DWORD PTR [rcx+0x1e0],0x1
  402e06:	add    rcx,0x28c
  402e0d:	mov    DWORD PTR [rcx-0x210],0x1
  402e17:	call   0x401578
  402e1c:	mov    rax,QWORD PTR [rsi]
  402e1f:	lea    rcx,[rax+0x28c]
  402e26:	call   0x401558
  402e2b:	lea    rdx,[rbp-0x10]
  402e2f:	lea    rcx,[rbp-0x14]
  402e33:	lea    r8,[rbp-0xc]
  402e37:	call   0x401530
  402e3c:	cmp    DWORD PTR [rbp-0x10],0x4
  402e40:	mov    rdi,rax
  402e43:	jle    0x402e63
  402e45:	lea    rcx,[rip+0x21cb]        # 0x405017
  402e4c:	xor    r8d,r8d
  402e4f:	xor    edx,edx
  402e51:	call   0x401548
  402e56:	mov    rax,QWORD PTR [rsi]
  402e59:	mov    DWORD PTR [rax+0x98],0x1
  402e63:	mov    r9d,DWORD PTR [rbp-0xc]
  402e67:	mov    r8d,DWORD PTR [rbp-0x10]
  402e6b:	mov    rcx,rdi
  402e6e:	mov    edx,DWORD PTR [rbp-0x14]
  402e71:	call   0x401560
  402e76:	call   0x401538
  402e7b:	call   0x401588
  402e80:	call   0x401540
  402e85:	mov    rax,QWORD PTR [rip+0x2664]        # 0x4054f0
  402e8c:	mov    rax,QWORD PTR [rax]
  402e8f:	cmp    DWORD PTR [rax+0x228],0x0
  402e96:	je     0x402d3b
  402e9c:	cmp    DWORD PTR [rax+0x4c],0x0
  402ea0:	jne    0x402d3b
  402ea6:	cmp    DWORD PTR [rax+0x1f8],0x0
  402ead:	jne    0x402d3b
  402eb3:	cmp    DWORD PTR [rax+0x1f4],0x0
  402eba:	jne    0x402d3b
  402ec0:	call   0x401580
  402ec5:	jmp    0x402d3b
  402eca:	cmp    BYTE PTR [rdx+0x1],0x0
  402ece:	jne    0x402ced
  402ed4:	mov    rax,QWORD PTR [rip+0x2625]        # 0x405500
  402edb:	mov    rbx,QWORD PTR [rax]
  402ede:	call   QWORD PTR [rip+0x64f4]        # 0x4093d8
  402ee4:	lea    rcx,[rax+0x30]
  402ee8:	lea    rax,[rip+0xad1]        # 0x4039c0
  402eef:	lea    r9,[rip+0x19ca]        # 0x4048c0
  402ef6:	lea    rdx,[rip+0x1ac3]        # 0x4049c0
  402efd:	mov    r8,rbx
  402f00:	mov    QWORD PTR [rsp+0x30],rax
  402f05:	lea    rax,[rip+0xeb4]        # 0x403dc0
  402f0c:	mov    QWORD PTR [rsp+0x28],rax
  402f11:	lea    rax,[rip+0x13a8]        # 0x4042c0
  402f18:	mov    QWORD PTR [rsp+0x20],rax
  402f1d:	call   0x402b38
  402f22:	xor    ecx,ecx
  402f24:	call   0x402b40
  402f29:	xor    ecx,ecx
  402f2b:	call   0x402af0
  402f30:	test   eax,eax
  402f32:	je     0x402ced
  402f38:	mov    rax,QWORD PTR [rip+0x25c1]        # 0x405500
  402f3f:	mov    rbx,QWORD PTR [rax]
  402f42:	call   QWORD PTR [rip+0x6490]        # 0x4093d8
  402f48:	lea    rdx,[rip+0x531]        # 0x403480
  402f4f:	lea    rcx,[rax+0x30]
  402f53:	mov    r8,rbx
  402f56:	call   0x402b38
  402f5b:	xor    ecx,ecx
  402f5d:	call   0x402b40
  402f62:	nop
  402f63:	nop
  402f64:	nop
  402f65:	nop
  402f66:	nop
  402f67:	nop
  402f68:	nop
  402f69:	nop
  402f6a:	nop
  402f6b:	nop
  402f6c:	nop
  402f6d:	nop
  402f6e:	nop
  402f6f:	nop
  402f70:	(bad)  
  402f71:	(bad)  
  402f72:	(bad)  
  402f73:	(bad)  
  402f74:	(bad)  
  402f75:	(bad)  
  402f76:	(bad)  
  402f77:	inc    DWORD PTR [rax]
  402f79:	add    BYTE PTR [rax],al
  402f7b:	add    BYTE PTR [rax],al
  402f7d:	add    BYTE PTR [rax],al
  402f7f:	add    bh,bh
  402f81:	(bad)  
  402f82:	(bad)  
  402f83:	(bad)  
  402f84:	(bad)  
  402f85:	(bad)  
  402f86:	(bad)  
  402f87:	inc    DWORD PTR [rax]
  402f89:	add    BYTE PTR [rax],al
  402f8b:	add    BYTE PTR [rax],al
  402f8d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000403000 <.data>:
  403000:	or     al,BYTE PTR [rax]
	...
  40303e:	add    BYTE PTR [rax],al
  403040:	or     dl,BYTE PTR [rcx+0x68]
  403043:	jne    0x4030b1
  403045:	ins    BYTE PTR es:[rdi],dx
  403046:	and    BYTE PTR [rip+0x450a2e73],ah        # 0x454a5ebf
  40304c:	js     0x4030b1
  40304e:	gs jo  0x4030c5
  403051:	and    BYTE PTR [rsi+0x6f],ah
  403054:	jb     0x403076
  403056:	(bad)  
  403057:	rex.RX
  403058:	cs (bad) 
  40305a:	and    BYTE PTR [rcx+0x6e],ah
  40305d:	and    BYTE PTR fs:[rdi],ah
  403060:	push   rax
  403061:	rex.RXB (bad) 
  403063:	sub    al,0x20
  403065:	jne    0x4030d7
  403067:	jo     0x4030ce
  403069:	jb     0x403098
  40306b:	movsxd esp,DWORD PTR [rcx+0x73]
  40306e:	and    BYTE PTR gs:[rdi+0x70],ch
  403072:	je     0x4030dd
  403074:	outs   dx,DWORD PTR ds:[rsi]
  403075:	outs   dx,BYTE PTR ds:[rsi]
  403076:	jae    0x403098
  403078:	je     0x4030db
  40307a:	imul   esp,DWORD PTR [rbp+0x20],0x61
  40307e:	outs   dx,BYTE PTR ds:[rsi]
  40307f:	and    BYTE PTR [rcx+0x72],ah
  403082:	addr32 jne 0x4030f2
  403085:	outs   dx,BYTE PTR gs:[rsi]
  403087:	je     0x4030b7
  403089:	or     cl,BYTE PTR [rdx]
  40308b:	and    BYTE PTR [rcx+0x6e],ch
  40308e:	movsxd ebp,DWORD PTR [rcx+0x64]
  403091:	outs   dx,BYTE PTR gs:[rsi]
  403093:	movsxd esp,DWORD PTR [rbp+0x73]
  403096:	and    BYTE PTR [rax],ah
  403098:	and    BYTE PTR [rax],ah
  40309a:	and    BYTE PTR [rbp+0x61],ch
  40309d:	je     0x403107
  40309f:	gs ins DWORD PTR es:[rdi],dx
  4030a1:	(bad)  
  4030a2:	je     0x40310d
  4030a4:	movsxd esp,DWORD PTR [rcx+0x20]
  4030a7:	and    BYTE PTR [rax],ah
  4030a9:	and    BYTE PTR [rdi+0x46],cl
  4030ac:	rex.RX pop rdi
  4030ae:	outs   dx,WORD PTR ds:[rsi]
  4030b0:	jb     0x40311f
  4030b2:	(bad)  
  4030b3:	je     0x4030d5
  4030b5:	and    BYTE PTR [rax],ah
  4030b7:	and    BYTE PTR [rax],ah
  4030b9:	jo     0x40312a
  4030bb:	imul   ebp,DWORD PTR [rsi+0x74],0x696c5f73
  4030c2:	data16 je 0x40312a
  4030c5:	and    BYTE PTR fs:[rax],ah
  4030c8:	jae    0x40313f
  4030ca:	ins    DWORD PTR es:[rdi],dx
  4030cb:	ins    DWORD PTR es:[rdi],dx
  4030cc:	(bad)  
  4030cd:	jb     0x403148
  4030cf:	or     ah,BYTE PTR [rax]
  4030d1:	data16 (bad) 
  4030d3:	movsxd esp,DWORD PTR [rbp+0x74]
  4030d6:	pop    rdi
  4030d7:	fs jne 0x403147
  4030da:	jo     0x4030e6
  4030dc:	or     ah,BYTE PTR [rax]
  4030de:	rex.RX (bad) 
  4030e0:	jb     0x403147
  4030e2:	(bad)  
  4030e3:	and    BYTE PTR [rax],ah
  4030e5:	and    BYTE PTR [rax],ah
  4030e7:	and    BYTE PTR [rax],ah
  4030e9:	and    BYTE PTR [rax],ah
  4030eb:	and    BYTE PTR [rax],ah
  4030ed:	rex.RX
  4030ee:	rex.B jb 0x403156
  4030f1:	(bad)  
  4030f2:	pop    rdi
  4030f3:	je     0x403164
  4030f5:	je     0x403158
  4030f7:	ins    BYTE PTR es:[rdi],dx
  4030f8:	and    BYTE PTR [rax],ah
  4030fa:	and    BYTE PTR [rax],ah
  4030fc:	rex.RX movsxd r13d,DWORD PTR [rdi+0x69]
  403100:	outs   dx,BYTE PTR ds:[rsi]
  403101:	movsxd ebp,DWORD PTR [rcx+0x64]
  403104:	outs   dx,BYTE PTR gs:[rsi]
  403106:	je     0x403128
  403108:	and    BYTE PTR [rax],ah
  40310a:	and    BYTE PTR [rsi+0x64],al
  40310d:	pop    rdi
  40310e:	movsxd esp,DWORD PTR [rsp+riz*2+0x5f]
  403112:	imul   ebp,DWORD PTR [rsi+0x20],0x20202020
  403119:	and    BYTE PTR [rsi+0x44],al
  40311c:	pop    rdi
  40311d:	movsxd esp,DWORD PTR [rsp+riz*2+0x5f]
  403121:	outs   dx,DWORD PTR ds:[rsi]
  403122:	jne    0x403198
  403124:	or     ah,BYTE PTR [rax]
  403126:	rex.RX
  403127:	rex.RX pop rdi
  403129:	fs jne 0x403199
  40312c:	jo     0x40318d
  40312e:	js     0x4031a2
  403130:	imul   esp,DWORD PTR [rdi+riz*2+0x65],0x44494620
  403138:	jae    0x40315a
  40313a:	and    BYTE PTR [rax],ah
  40313c:	and    BYTE PTR [rax],ah
  40313e:	and    BYTE PTR [rax],ah
  403140:	and    BYTE PTR [rax],ah
  403142:	and    BYTE PTR [rax],ah
  403144:	rex.RX ins DWORD PTR es:[rdi],dx
  403146:	gs jb  0x4031b0
  403149:	gs jae 0x40316c
  40314c:	and    BYTE PTR [rax],ah
  40314e:	and    BYTE PTR [rax],ah
  403150:	and    BYTE PTR [rax],ah
  403152:	and    BYTE PTR [rsi+0x6e],al
  403155:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  40315d:	and    BYTE PTR [rax],ah
  40315f:	and    BYTE PTR [rax],ah
  403161:	and    BYTE PTR [rsi+0x4e],al
  403164:	imul   esp,DWORD PTR gs:[rdi+0x68],0x7265765f
  40316c:	je     0x4031d3
  40316e:	js     0x40317a
  403170:	and    BYTE PTR [rsi+0x4f],al
  403173:	jo     0x4031e9
  403175:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202073
  40317c:	and    BYTE PTR [rax],ah
  40317e:	and    BYTE PTR [rax],ah
  403180:	rex.RX push rax
  403182:	outs   dx,DWORD PTR ds:[rsi]
  403183:	imul   ebp,DWORD PTR [rsi+0x74],0x61656e5f
  40318a:	jb     0x4031ac
  40318c:	and    BYTE PTR [rax],ah
  40318e:	and    BYTE PTR [rsi+0x51],al
  403191:	fs gs ins BYTE PTR es:[rdi],dx
  403194:	(bad)  
  403195:	jne    0x403205
  403197:	and    BYTE PTR [rax],ah
  403199:	and    BYTE PTR [rax],ah
  40319b:	and    BYTE PTR [rax],ah
  40319d:	and    BYTE PTR [rsi+0x73],al
  4031a0:	jne    0x40320f
  4031a2:	ins    DWORD PTR es:[rdi],dx
  4031a3:	(bad)  
  4031a4:	jb     0x40321f
  4031a6:	and    BYTE PTR [rax],ah
  4031a8:	and    BYTE PTR [rax],ah
  4031aa:	and    BYTE PTR [rax],ah
  4031ac:	and    BYTE PTR [rsi+0x53],al
  4031af:	imul   edi,DWORD PTR [rdx+0x65],0x7646200a
  4031b6:	gs jb  0x40322d
  4031b9:	imul   esp,DWORD PTR [rbx+0x65],0x20202073
  4031c0:	and    BYTE PTR [rax],ah
  4031c2:	and    BYTE PTR [rsi+0x78],al
  4031c5:	je     0x403239
  4031c7:	gs ins DWORD PTR es:[rdi],dx
  4031c9:	gs jae 0x4031ec
  4031cc:	and    BYTE PTR [rax],ah
  4031ce:	and    BYTE PTR [rax],ah
  4031d0:	and    BYTE PTR [rax],ah
  4031d2:	rex.RX
  4031d3:	rex.WRB (bad) 
  4031d5:	jo     0x403243
  4031d7:	or     cl,BYTE PTR gs:[rdx]
  4031da:	and    BYTE PTR [rdi+0x76],al
  4031dd:	gs jb  0x403254
  4031e0:	imul   esp,DWORD PTR [rbx+0x65],0x20202073
  4031e7:	and    BYTE PTR [rax],ah
  4031e9:	and    BYTE PTR [rdi+0x70],al
  4031ec:	outs   dx,DWORD PTR ds:[rsi]
  4031ed:	imul   ebp,DWORD PTR [rsi+0x74],0x20202073
  4031f4:	and    BYTE PTR [rax],ah
  4031f6:	and    BYTE PTR [rax],ah
  4031f8:	and    BYTE PTR [rdi+0x61],al
  4031fb:	ins    BYTE PTR es:[rdi],dx
  4031fc:	ins    BYTE PTR es:[rdi],dx
  4031fd:	pop    rdi
  4031fe:	jo     0x40326f
  403200:	imul   ebp,DWORD PTR [rsi+0x74],0x20202073
  403207:	and    BYTE PTR [rdi+0x6e],al
  40320a:	outs   dx,DWORD PTR ds:[rsi]
  40320b:	pop    rdi
  40320c:	jo     0x40327a
  40320e:	(bad)  
  40320f:	outs   dx,BYTE PTR ds:[rsi]
  403210:	gs jae 0x403233
  403213:	and    BYTE PTR [rax],ah
  403215:	and    BYTE PTR [rax],ah
  403217:	rex.RXB imul r13d,DWORD PTR [r14+0x6e],0x200a7265
  40321f:	rex.RXB movsxd r12d,DWORD PTR [r13+0x6e]
  403223:	je     0x403297
  403225:	jne    0x403294
  403227:	jae    0x403249
  403229:	and    BYTE PTR [rax],ah
  40322b:	and    BYTE PTR [rax],ah
  40322d:	and    BYTE PTR [rdi+0x68],al
  403230:	jns    0x4032a2
  403232:	gs jb  0x4032a5
  403235:	ins    BYTE PTR es:[rdi],dx
  403236:	(bad)  
  403237:	outs   dx,BYTE PTR ds:[rsi]
  403238:	gs jae 0x40325b
  40323b:	and    BYTE PTR [rax],ah
  40323d:	rex.RXB jb 0x4032a9
  403240:	fs addr32 gs jae 0x403265
  403245:	and    BYTE PTR [rax],ah
  403247:	and    BYTE PTR [rax],ah
  403249:	and    BYTE PTR [rax],ah
  40324b:	and    BYTE PTR [rdi+0x6f],al
  40324e:	jne    0x4032c4
  403250:	gs jb  0x403273
  403253:	and    BYTE PTR [rax],ah
  403255:	and    BYTE PTR [rax],ah
  403257:	and    BYTE PTR [rax],ah
  403259:	and    BYTE PTR [rax],ah
  40325b:	rex.RXB
  40325c:	rex.R jb 0x4032ce
  40325f:	jo     0x4032c0
  403261:	imul   ebp,DWORD PTR fs:[rbp+0xa],0x72744720
  403269:	(bad)  
  40326a:	outs   dx,BYTE PTR ds:[rsi]
  40326b:	jae    0x4032dd
  40326d:	(bad)  
  40326e:	jb     0x4032d5
  403270:	outs   dx,BYTE PTR ds:[rsi]
  403271:	je     0x40327d
  403273:	or     ah,BYTE PTR [rax]
  403275:	push   rax
  403276:	rex.B jb 0x4032de
  403279:	(bad)  
  40327a:	pop    rdi
  40327b:	imul   esp,DWORD PTR [rbp+0x65],0x70
  40327f:	and    BYTE PTR [rax],ah
  403281:	and    BYTE PTR [rax],ah
  403283:	and    BYTE PTR [rax+0x64],dl
  403286:	jb     0x4032f7
  403288:	jo     0x4032aa
  40328a:	xor    BYTE PTR fs:[rdx],bh
  40328d:	xor    BYTE PTR [rax+rsi*1+0x20],al
  403291:	and    BYTE PTR [rax],ah
  403293:	push   rax
  403294:	outs   dx,DWORD PTR ds:[esi]
  403296:	outs   dx,DWORD PTR ds:[rsi]
  403297:	and    BYTE PTR fs:[rax],ah
  40329a:	and    BYTE PTR [rax],ah
  40329c:	and    BYTE PTR [rax],ah
  40329e:	and    BYTE PTR [rax],ah
  4032a0:	and    BYTE PTR [rax],ah
  4032a2:	push   rax
  4032a3:	rex.RX (bad) 
  4032a5:	movsxd esp,DWORD PTR [rbp+0x74]
  4032a8:	pop    rdi
  4032a9:	(bad)  
  4032aa:	jb     0x403311
  4032ac:	(bad)  
  4032ad:	pop    rdi
  4032ae:	imul   esp,DWORD PTR [rbp+0x65],0x70
  4032b2:	or     ah,BYTE PTR [rax]
  4032b4:	push   rax
  4032b5:	rex.RXB outs dx,DWORD PTR ds:[rsi]
  4032b7:	outs   dx,DWORD PTR ds:[rsi]
  4032b8:	fs pop rdi
  4032ba:	outs   dx,BYTE PTR ds:[rsi]
  4032bb:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  4032c3:	and    BYTE PTR [rax+0x4d],dl
  4032c6:	gs jb  0x403330
  4032c9:	gs pop rdi
  4032cb:	imul   esp,DWORD PTR [rbp+0x65],0x70
  4032cf:	and    BYTE PTR [rax],ah
  4032d1:	and    BYTE PTR [rax+0x6f],dl
  4032d4:	jne    0x40334a
  4032d6:	jo     0x40334d
  4032d8:	je     0x403339
  4032da:	outs   dx,WORD PTR ds:[rsi]
  4032dc:	jb     0x403341
  4032de:	gs and BYTE PTR fs:[rax+0x70],dl
  4032e3:	jb     0x40334a
  4032e5:	movsxd ebp,DWORD PTR [rcx+0x73]
  4032e8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746f6e5f
  4032ef:	or     cl,BYTE PTR [rdx]
  4032f1:	and    BYTE PTR [rcx+0x47],dl
  4032f4:	outs   dx,DWORD PTR ds:[rsi]
  4032f5:	outs   dx,DWORD PTR ds:[rsi]
  4032f6:	fs pop rdi
  4032f8:	jo     0x403369
  4032fa:	imul   ebp,DWORD PTR [rsi+0x74],0x20202020
  403301:	push   rcx
  403302:	rex.WX outs dx,DWORD PTR ds:[rsi]
  403304:	addr32 ins BYTE PTR es:[edi],dx
  403307:	and    BYTE PTR gs:[rax],ah
  40330a:	and    BYTE PTR [rax],ah
  40330c:	and    BYTE PTR [rax],ah
  40330e:	and    BYTE PTR [rax],ah
  403310:	push   rcx
  403311:	jae    0x403378
  403313:	(bad)  
  403314:	jb     0x403379
  403316:	push   0x7473315f
  40331b:	and    BYTE PTR [rax],ah
  40331d:	and    BYTE PTR [rax],ah
  40331f:	push   rcx
  403320:	je     0x403394
  403322:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  403329:	je     0x403390
  40332b:	and    BYTE PTR [rax],ah
  40332d:	and    BYTE PTR [rcx+0x75],dl
  403330:	jo     0x4033a2
  403332:	gs jb  0x403379
  403335:	gs ins BYTE PTR es:[rdi],dx
  403337:	(bad)  
  403338:	jne    0x4033a8
  40333a:	(bad)  
  40333b:	jns    0x403347
  40333d:	and    BYTE PTR [rcx+0x56],dl
  403340:	gs jb  0x4033b7
  403343:	gs js  0x4033a5
  403346:	outs   dx,DWORD PTR ds:[esi]
  403348:	outs   dx,DWORD PTR ds:[rsi]
  403349:	and    BYTE PTR fs:[rax],ah
  40334c:	and    BYTE PTR [rcx+0x7a],dl
  40334f:	imul   ebp,DWORD PTR [rsi+0x66],0x74696e69
  403356:	or     cl,BYTE PTR gs:[rdx]
  403359:	and    BYTE PTR [rsp+rsi*1+0x5f],dl
  40335d:	je     0x4033d1
  40335f:	(bad)  
  403360:	movsxd esp,DWORD PTR [rbp+0x20]
  403363:	and    BYTE PTR [rax],ah
  403365:	and    BYTE PTR [rax],ah
  403367:	and    BYTE PTR [rax],ah
  403369:	push   rsp
  40336a:	movsxd ebp,DWORD PTR [rax+0x65]
  40336d:	movsxd ebp,DWORD PTR [rbx+0x5f]
  403370:	outs   dx,DWORD PTR ds:[rsi]
  403371:	data16 je 0x4033d9
  403374:	outs   dx,BYTE PTR ds:[rsi]
  403375:	and    BYTE PTR [rax],ah
  403377:	and    BYTE PTR [rbx+rsi*2+0x74],dl
  40337b:	(bad)  
  40337c:	je     0x4033e7
  40337e:	jae    0x4033f4
  403380:	imul   esp,DWORD PTR [rbx+0x73],0x20202020
  403387:	push   rsp
  403388:	jbe    0x4033ef
  40338a:	jb     0x4033f5
  40338c:	data16 jns 0x4033af
  40338f:	and    BYTE PTR [rax],ah
  403391:	and    BYTE PTR [rax],ah
  403393:	and    BYTE PTR [rax],ah
  403395:	and    BYTE PTR [rdx+rdi*2+0x5f],dl
  403399:	jae    0x40340f
  40339b:	outs   dx,DWORD PTR fs:[rsi]
  40339d:	jne    0x403413
  40339f:	or     ah,BYTE PTR [rax]
  4033a1:	push   rsp
  4033a2:	rex.RX (bad) 
  4033a4:	movsxd esp,DWORD PTR [rbp+0x74]
  4033a7:	pop    rdi
  4033a8:	ins    BYTE PTR es:[rdi],dx
  4033a9:	outs   dx,DWORD PTR ds:[rsi]
  4033aa:	and    BYTE PTR [eax],ah
  4033ad:	and    BYTE PTR [rax],ah
  4033af:	and    BYTE PTR [rcx+rcx*2+0x6e],dl
  4033b3:	jo     0x40342a
  4033b5:	je     0x403416
  4033b7:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2020
  4033be:	and    BYTE PTR [rax+rdx*2+0x6f],dl
  4033c2:	imul   ebp,DWORD PTR [rsi+0x74],0x6172745f
  4033c9:	movsxd esp,DWORD PTR [rbp+0x20]
  4033cc:	and    BYTE PTR [rax],ah
  4033ce:	push   rsp
  4033cf:	rex.WRB
  4033d0:	gs jb  0x40343a
  4033d3:	gs pop rdi
  4033d5:	je     0x403449
  4033d7:	(bad)  
  4033d8:	movsxd esp,DWORD PTR [rbp+0x20]
  4033db:	and    BYTE PTR [rax],ah
  4033dd:	push   rsp
  4033de:	rex.WRXB jne 0x403455
  4033e1:	jo     0x403458
  4033e3:	je     0x403444
  4033e5:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x5420
  4033ec:	push   rdi
  4033ed:	imul   esp,DWORD PTR [rbp+riz*2+0x5f],0x63617274
  4033f5:	and    BYTE PTR gs:[rax],ah
  4033f8:	and    BYTE PTR [rax],ah
  4033fa:	push   rsp
  4033fb:	push   rsi
  4033fc:	gs jb  0x403473
  4033ff:	gs js  0x403461
  403402:	jae    0x403478
  403404:	outs   dx,DWORD PTR ds:[rsi]
  403405:	jo     0x403427
  403407:	and    BYTE PTR [rax],ah
  403409:	push   rsp
  40340a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40340c:	outs   dx,BYTE PTR ds:[rsi]
  40340d:	gs pop rdi
  40340f:	jae    0x403485
  403411:	outs   dx,DWORD PTR ds:[rsi]
  403412:	jo     0x40341e
  403414:	or     ah,BYTE PTR [rax]
  403416:	rex.B outs dx,BYTE PTR ds:[rsi]
  403418:	ins    BYTE PTR es:[edi],dx
  40341a:	gs pop rdi
  40341c:	ins    DWORD PTR es:[rdi],dx
  40341d:	(bad)  
  40341e:	js     0x403440
  403420:	and    BYTE PTR [rax],ah
  403422:	and    BYTE PTR [rax],ah
  403424:	and    BYTE PTR [rbx+0x65],al
  403427:	outs   dx,BYTE PTR ds:[rsi]
  403428:	je     0x40349c
  40342a:	jne    0x403499
  40342c:	pop    rdi
  40342d:	jae    0x403498
  40342f:	jp     0x403496
  403431:	and    BYTE PTR [rax],ah
  403433:	and    BYTE PTR [rdx+0x61],dl
  403436:	outs   dx,BYTE PTR ds:[rsi]
  403437:	outs   dx,DWORD PTR fs:[rsi]
  403439:	ins    DWORD PTR es:[rdi],dx
  40343a:	pop    rdi
  40343b:	imul   esi,DWORD PTR fs:[rbx+0x74],0x20202020
  403443:	push   rdi
  403444:	imul   esp,DWORD PTR [rbp+riz*2+0x5f],0x7374756f
  40344c:	imul   esp,DWORD PTR [rbp+riz*2+0xa],0x0
	...
  403480:	or     dh,BYTE PTR [rcx+0x64]
  403483:	gs ins BYTE PTR es:[rdi],dx
  403485:	(bad)  
  403486:	jne    0x4034f6
  403488:	(bad)  
  403489:	jns    0x4034b8
  40348b:	and    BYTE PTR [rbx+0x6f],ah
  40348e:	ins    DWORD PTR es:[rdi],dx
  40348f:	jo     0x403506
  403491:	je     0x4034f8
  403493:	and    BYTE PTR [rax+rbp*2+0x65],dh
  403497:	and    BYTE PTR [rbp+riz*2+0x6c],al
  40349b:	(bad)  
  40349c:	jne    0x40350c
  40349e:	(bad)  
  40349f:	jns    0x4034c1
  4034a1:	je     0x403515
  4034a3:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  4034aa:	je     0x403515
  4034ac:	outs   dx,DWORD PTR ds:[rsi]
  4034ad:	outs   dx,BYTE PTR ds:[rsi]
  4034ae:	and    BYTE PTR cs:[rax],ah
  4034b1:	push   rcx
  4034b2:	push   0x206c6c75
  4034b7:	and    eax,0x20200a73
  4034bc:	and    BYTE PTR [rax],ah
  4034be:	imul   ebp,DWORD PTR [rsi+0x70],0x28207475
  4034c5:	jae    0x40353b
  4034c7:	imul   ebp,DWORD PTR fs:[rsi+0x29],0x6964203a
  4034cf:	ins    DWORD PTR es:[rdi],dx
  4034d0:	outs   dx,BYTE PTR gs:[rsi]
  4034d2:	jae    0x40353d
  4034d4:	outs   dx,DWORD PTR ds:[rsi]
  4034d5:	outs   dx,BYTE PTR ds:[rsi]
  4034d6:	sub    al,0x20
  4034d8:	outs   dx,BYTE PTR ds:[rsi]
  4034d9:	jne    0x403548
  4034db:	(bad)  
  4034dc:	gs jb  0x4034ff
  4034df:	outs   dx,DWORD PTR ds:[rsi]
  4034e0:	data16 and BYTE PTR [rax+0x6f],dh
  4034e4:	imul   ebp,DWORD PTR [rsi+0x74],0x70202c73
  4034eb:	outs   dx,DWORD PTR ds:[rsi]
  4034ec:	imul   ebp,DWORD PTR [rsi+0x74],0x6f6f6320
  4034f3:	jb     0x403559
  4034f5:	imul   ebp,DWORD PTR [rsi+0x61],0xa736574
  4034fc:	and    BYTE PTR [rax],ah
  4034fe:	and    BYTE PTR [rax],ah
  403500:	movsxd ebp,DWORD PTR [rdi+0x6d]
  403503:	ins    DWORD PTR es:[rdi],dx
  403504:	outs   dx,BYTE PTR gs:[rsi]
  403506:	je     0x40357b
  403508:	and    BYTE PTR [rbx+0x74],dh
  40350b:	(bad)  
  40350c:	jb     0x403582
  40350e:	and    BYTE PTR [rdi+0x69],dh
  403511:	je     0x40357b
  403513:	and    BYTE PTR [rcx+0x20],ah
  403516:	outs   dx,BYTE PTR ds:[rsi]
  403517:	outs   dx,DWORD PTR ds:[rsi]
  403518:	outs   dx,BYTE PTR ds:[rsi]
  403519:	sub    eax,0x656d756e
  40351e:	jb     0x403589
  403520:	movsxd esp,DWORD PTR [rax]
  403522:	movsxd ebp,DWORD PTR [rax+0x61]
  403525:	jb     0x403588
  403527:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  40352b:	or     cl,BYTE PTR [rdx]
  40352d:	outs   dx,DWORD PTR ds:[rsi]
  40352e:	jo     0x4035a4
  403530:	imul   ebp,DWORD PTR [rdi+0x6e],0x71282073
  403537:	fs gs ins BYTE PTR es:[rdi],dx
  40353a:	(bad)  
  40353b:	jne    0x4035ab
  40353d:	cs push 0x3a296d74
  403543:	or     ah,BYTE PTR [rax]
  403545:	and    BYTE PTR [rax],ah
  403547:	and    BYTE PTR [rcx+0x75],dl
  40354a:	and    BYTE PTR [rax],ah
  40354c:	and    BYTE PTR [rip+0x72756620],ch        # 0x72b59b72
  403552:	je     0x4035bc
  403554:	gs jae 0x4035cb
  403557:	sub    eax,0x65746973
  40355c:	and    BYTE PTR [rbp+riz*2+0x6c],al
  403560:	(bad)  
  403561:	jne    0x4035d1
  403563:	(bad)  
  403564:	jns    0x403586
  403566:	je     0x4035da
  403568:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  40356f:	je     0x4035da
  403571:	outs   dx,DWORD PTR ds:[rsi]
  403572:	outs   dx,BYTE PTR ds:[rsi]
  403573:	or     ah,BYTE PTR [rax]
  403575:	and    BYTE PTR [rax],ah
  403577:	and    BYTE PTR [rcx+0x74],dl
  40357a:	and    BYTE PTR [rax],ah
  40357c:	and    BYTE PTR [rip+0x69727420],ch        # 0x69b2a9a2
  403582:	(bad)  
  403583:	outs   dx,BYTE PTR ds:[rsi]
  403584:	addr32 jne 0x4035f3
  403587:	(bad)  
  403588:	je     0x4035ef
  40358a:	and    BYTE PTR fs:[rdi+0x75],ch
  40358e:	je     0x403600
  403590:	jne    0x403606
  403592:	or     ah,BYTE PTR [rax]
  403594:	and    BYTE PTR [rax],ah
  403596:	and    BYTE PTR [rcx+0x4a],dl
  403599:	and    BYTE PTR [rax],ah
  40359b:	and    BYTE PTR [rip+0x676f6a20],ch        # 0x67af9fc1
  4035a1:	ins    BYTE PTR es:[edi],dx
  4035a3:	gs and BYTE PTR fs:[rcx+0x6e],ch
  4035a8:	jo     0x40361f
  4035aa:	je     0x4035cc
  4035ac:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  4035b3:	and    BYTE PTR [rdi+0x66],ch
  4035b6:	and    BYTE PTR [rbp+0x65],ch
  4035b9:	jb     0x403622
  4035bb:	gs and BYTE PTR fs:[rsi+0x61],ah
  4035c0:	movsxd esp,DWORD PTR [rbp+0x74]
  4035c3:	jae    0x4035cf
  4035c5:	and    BYTE PTR [rax],ah
  4035c7:	and    BYTE PTR [rax],ah
  4035c9:	push   rsp
  4035ca:	jbe    0x4035ec
  4035cc:	and    BYTE PTR [rax],ah
  4035ce:	sub    eax,0x72657620
  4035d3:	imul   esp,DWORD PTR [rsi+0x79],0x73657220
  4035da:	jne    0x403648
  4035dc:	je     0x403618
  4035de:	and    BYTE PTR [rbx+0x74],dh
  4035e1:	jb     0x403658
  4035e3:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  4035e7:	gs sub al,0x20
  4035ea:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4035ed:	jbe    0x403654
  4035ef:	js     0x40365a
  4035f1:	je     0x40366c
  4035f3:	sub    al,0x20
  4035f5:	(bad)  
  4035f6:	outs   dx,BYTE PTR ds:[rsi]
  4035f7:	and    BYTE PTR fs:[rcx+0x6e],ch
  4035fb:	sub    eax,0x63726963
  403600:	ins    BYTE PTR es:[rdi],dx
  403601:	and    BYTE PTR gs:[rbp+riz*2+0x73],dh
  403606:	je     0x403612
  403608:	and    BYTE PTR [rax],ah
  40360a:	and    BYTE PTR [rax],ah
  40360c:	and    BYTE PTR cs:[rax],ah
  40360f:	and    BYTE PTR [rax],ah
  403611:	sub    eax,0x6e6f6320
  403616:	movsxd ebp,DWORD PTR [rcx+0x73]
  403619:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ch
  40361e:	je     0x403640
  403620:	outs   dx,DWORD PTR ds:[rsi]
  403621:	data16 and BYTE PTR [rcx+0x6c],ah
  403625:	ins    BYTE PTR es:[rdi],dx
  403626:	and    BYTE PTR [rdi+0x70],ch
  403629:	je     0x403694
  40362b:	outs   dx,DWORD PTR ds:[rsi]
  40362c:	outs   dx,BYTE PTR ds:[rsi]
  40362d:	jae    0x403639
  40362f:	and    BYTE PTR [rax],ah
  403631:	and    BYTE PTR [rax],ah
  403633:	sub    eax,0x20202020
  403638:	sub    eax,0x656e6f20
  40363d:	sub    eax,0x656e696c
  403642:	and    BYTE PTR [rbp+riz*2+0x73],ah
  403646:	movsxd esi,DWORD PTR [rdx+0x69]
  403649:	jo     0x4036bf
  40364b:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
  403652:	(bad)  
  403653:	ins    BYTE PTR es:[rdi],dx
  403654:	ins    BYTE PTR es:[rdi],dx
  403655:	and    BYTE PTR [rdi+0x70],ch
  403658:	je     0x4036c3
  40365a:	outs   dx,DWORD PTR ds:[rsi]
  40365b:	outs   dx,BYTE PTR ds:[rsi]
  40365c:	jae    0x403668
  40365e:	or     ch,BYTE PTR [rdi+0x75]
  403661:	je     0x4036d3
  403663:	jne    0x4036d9
  403665:	and    BYTE PTR [rdi+0x70],ch
  403668:	je     0x4036d3
  40366a:	outs   dx,DWORD PTR ds:[rsi]
  40366b:	outs   dx,BYTE PTR ds:[rsi]
  40366c:	jae    0x40368e
  40366e:	sub    BYTE PTR [rbx+0x75],dh
  403671:	(bad)
  403676:	cmp    cl,BYTE PTR [rdx]
  403678:	and    BYTE PTR [rax],ah
  40367a:	and    BYTE PTR [rax],ah
  40367c:	jae    0x40369e
  40367e:	and    BYTE PTR [rax],ah
  403680:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5a9a6
  403686:	ins    DWORD PTR es:[rdi],dx
  403687:	(bad)  
  403688:	jb     0x403703
  40368a:	and    BYTE PTR [rdi+0x66],ch
  40368d:	and    BYTE PTR [rdx+0x65],dh
  403690:	jae    0x403707
  403692:	ins    BYTE PTR es:[rdi],dx
  403693:	je     0x403708
  403695:	and    BYTE PTR [rax],ch
  403697:	fs gs data16 (bad) 
  40369b:	jne    0x403709
  40369d:	je     0x4036c8
  40369f:	or     ah,BYTE PTR [rax]
  4036a1:	and    BYTE PTR [rax],ah
  4036a3:	and    BYTE PTR [rcx+0x20],ch
  4036a6:	and    BYTE PTR [rax],ah
  4036a8:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5acce
  4036ae:	je     0x403719
  4036b0:	movsxd esp,DWORD PTR [rbp+0x73]
  4036b3:	and    BYTE PTR [rcx+0x6e],ch
  4036b6:	movsxd ebp,DWORD PTR [rcx+0x64]
  4036b9:	outs   dx,BYTE PTR gs:[rsi]
  4036bb:	je     0x4036dd
  4036bd:	je     0x40372e
  4036bf:	and    BYTE PTR [rbp+0x61],ah
  4036c2:	movsxd ebp,DWORD PTR [rax+0x20]
  4036c5:	rex.R
  4036c6:	gs ins BYTE PTR es:[rdi],dx
  4036c8:	(bad)  
  4036c9:	jne    0x403739
  4036cb:	(bad)  
  4036cc:	jns    0x4036ee
  4036ce:	jb     0x403735
  4036d0:	imul   ebp,DWORD PTR [edi+0x6e],0x2020200a
  4036d8:	and    BYTE PTR [rsi+0x78],al
  4036db:	and    BYTE PTR [rax],ah
  4036dd:	and    BYTE PTR [rip+0x74786520],ch        # 0x74b89c03
  4036e3:	jb     0x40374a
  4036e5:	ins    DWORD PTR es:[rdi],dx
  4036e6:	and    BYTE PTR gs:[rax+0x6f],dh
  4036ea:	imul   ebp,DWORD PTR [rsi+0x74],0x76282073
  4036f1:	gs jb  0x403768
  4036f4:	imul   esp,DWORD PTR [rbx+0x65],0x666f2073
  4036fb:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4036ff:	and    BYTE PTR [rbx+0x6f],ah
  403702:	outs   dx,BYTE PTR ds:[rsi]
  403703:	jbe    0x40376a
  403705:	js     0x403727
  403707:	push   0x296c6c75
  40370c:	or     ah,BYTE PTR [rax]
  40370e:	and    BYTE PTR [rax],ah
  403710:	and    BYTE PTR [rdi+0x20],ch
  403713:	and    BYTE PTR [rax],ah
  403715:	and    BYTE PTR [rip+0x46464f20],ch        # 0x4686863b
  40371b:	and    BYTE PTR [rsi+0x6f],ah
  40371e:	jb     0x40378d
  403720:	(bad)  
  403721:	je     0x403743
  403723:	sub    BYTE PTR [rbx+0x68],dh
  403726:	outs   dx,DWORD PTR ds:[rsi]
  403727:	ja     0x40379c
  403729:	and    BYTE PTR [rax+rbp*2+0x65],dh
  40372d:	and    BYTE PTR [rax+0x6f],dh
  403730:	imul   ebp,DWORD PTR [rsi+0x74],0x696c2073
  403737:	data16 je 0x40379f
  40373a:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40373f:	(bad)  
  403740:	and    BYTE PTR [rax+0x61],dh
  403743:	jb     0x4037a6
  403745:	(bad)  
  403746:	outs   dx,DWORD PTR ds:[rsi]
  403747:	ins    BYTE PTR es:[rdi],dx
  403748:	outs   dx,DWORD PTR ds:[rsi]
  403749:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20202020
  403751:	rex.RXB and BYTE PTR [r8],r12b
  403754:	and    BYTE PTR [rax],ah
  403756:	sub    eax,0x6f654720
  40375b:	ins    DWORD PTR es:[rdi],dx
  40375c:	jbe    0x4037c7
  40375e:	gs ja  0x403781
  403761:	outs   dx,DWORD PTR ds:[rsi]
  403762:	jne    0x4037d8
  403764:	jo     0x4037db
  403766:	je     0x403788
  403768:	sub    BYTE PTR [rdx],dh
  40376a:	sub    eax,0x6e612064
  40376f:	and    BYTE PTR fs:[rbx],dh
  403772:	sub    eax,0x6f702064
  403777:	imul   ebp,DWORD PTR [rsi+0x74],0x696c2073
  40377e:	data16 je 0x4037e6
  403781:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  403786:	(bad)  
  403787:	and    BYTE PTR [rax+0x61],dh
  40378a:	jb     0x4037ed
  40378c:	(bad)  
  40378d:	outs   dx,DWORD PTR ds:[rsi]
  40378e:	ins    BYTE PTR es:[rdi],dx
  40378f:	outs   dx,DWORD PTR ds:[rsi]
  403790:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20202020
  403798:	ins    DWORD PTR es:[rdi],dx
  403799:	and    BYTE PTR [rax],ah
  40379b:	and    BYTE PTR [rax],ah
  40379d:	sub    eax,0x74614d20
  4037a2:	push   0x74616d65
  4037a7:	imul   esp,DWORD PTR [rbx+0x61],0x74756f20
  4037ae:	jo     0x403825
  4037b0:	je     0x4037d2
  4037b2:	sub    BYTE PTR [rdx],dh
  4037b4:	sub    eax,0x6e692064
  4037b9:	jo     0x403830
  4037bb:	je     0x403830
  4037bd:	and    BYTE PTR [rcx+rbp*2+0x66],ch
  4037c1:	je     0x403828
  4037c3:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4037c8:	(bad)  
  4037c9:	and    BYTE PTR [rax+0x61],dh
  4037cc:	jb     0x40382f
  4037ce:	(bad)  
  4037cf:	outs   dx,DWORD PTR ds:[rsi]
  4037d0:	ins    BYTE PTR es:[rdi],dx
  4037d1:	outs   dx,DWORD PTR ds:[rsi]
  4037d2:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20202020
  4037da:	push   rcx
  4037db:	push   rsi
  4037dc:	outs   dx,BYTE PTR ds:[rsi]
  4037dd:	and    BYTE PTR [rax],ah
  4037df:	sub    eax,0x69727020
  4037e4:	outs   dx,BYTE PTR ds:[rsi]
  4037e5:	je     0x403807
  4037e7:	rex.R
  4037e8:	gs ins BYTE PTR es:[rdi],dx
  4037ea:	(bad)  
  4037eb:	jne    0x40385b
  4037ed:	(bad)  
  4037ee:	jns    0x403810
  4037f0:	jb     0x403857
  4037f2:	imul   ebp,DWORD PTR [edi+0x6e],0x68742073
  4037fa:	(bad)  
  4037fb:	je     0x40381d
  4037fd:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  403804:	and    BYTE PTR [rax+0x6f],dh
  403807:	imul   ebp,DWORD PTR [rsi+0x74],0x202c6e20
  40380e:	sub    eax,0x6669206e
  403813:	and    BYTE PTR [rsi+0x6f],ch
  403816:	je     0x403822
  403818:	and    BYTE PTR [rax],ah
  40381a:	and    BYTE PTR [rax],ah
  40381c:	push   rsp
  40381d:	rex.WRXB and BYTE PTR [r14+0x69],r12b
  403821:	ins    BYTE PTR es:[rdi],dx
  403822:	gs sub eax,0x74756f20
  403828:	jo     0x40389f
  40382a:	je     0x40384c
  40382c:	jb     0x403893
  40382e:	jae    0x4038a5
  403830:	ins    BYTE PTR es:[rdi],dx
  403831:	je     0x4038a6
  403833:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  403837:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x6d20
  40383e:	(bad)  
  40383f:	jns    0x403861
  403841:	(bad)  
  403842:	and    BYTE PTR gs:[rbp+0x6e],ah
  403846:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  40384a:	gs and BYTE PTR fs:[rcx+0x6e],ch
  40384f:	and    BYTE PTR [rbx+0x69],dh
  403852:	outs   dx,BYTE PTR ds:[rsi]
  403853:	ins    BYTE PTR es:[edi],dx
  403855:	and    BYTE PTR gs:[rcx+0x75],dh
  403859:	outs   dx,DWORD PTR ds:[rsi]
  40385a:	je     0x4038c1
  40385c:	jae    0x403868
  40385e:	or     ah,BYTE PTR [rbp+0x78]
  403861:	(bad)  
  403862:	ins    DWORD PTR es:[rdi],dx
  403863:	jo     0x4038d1
  403865:	gs jae 0x4038a2
  403868:	or     ah,BYTE PTR [rax]
  40386a:	and    BYTE PTR [rax],ah
  40386c:	and    BYTE PTR [rdx+0x62],dh
  40386f:	outs   dx,DWORD PTR ds:[rsi]
  403870:	js     0x403892
  403872:	movsxd esp,DWORD PTR [rax]
  403874:	push   rax
  403875:	xor    BYTE PTR [rax],ah
  403877:	xor    r12b,BYTE PTR [rax]
  40387a:	jl     0x40389c
  40387c:	jno    0x4038e2
  40387e:	gs ins BYTE PTR es:[rdi],dx
  403880:	(bad)  
  403881:	jne    0x4038f1
  403883:	(bad)  
  403884:	jns    0x4038a6
  403886:	jae    0x4038a8
  403888:	outs   dx,DWORD PTR ds:[rsi]
  403889:	and    BYTE PTR [rax],ah
  40388b:	and    BYTE PTR [rax],ah
  40388d:	and    BYTE PTR [rax],ah
  40388f:	and    BYTE PTR [rax],ah
  403891:	and    BYTE PTR [rax],ah
  403893:	jb     0x4038f7
  403895:	outs   dx,DWORD PTR ds:[rsi]
  403896:	js     0x4038b8
  403898:	movsxd esp,DWORD PTR [rax]
  40389a:	push   rax
  40389b:	xor    BYTE PTR [rax],ah
  40389d:	xor    r12b,BYTE PTR [rax]
  4038a0:	jl     0x4038c2
  4038a2:	jno    0x403908
  4038a4:	gs ins BYTE PTR es:[rdi],dx
  4038a6:	(bad)  
  4038a7:	jne    0x403917
  4038a9:	(bad)  
  4038aa:	jns    0x4038cc
  4038ac:	imul   ecx,DWORD PTR [rdx],0x20202020
  4038b2:	jb     0x403916
  4038b4:	outs   dx,DWORD PTR ds:[rsi]
  4038b5:	js     0x4038d7
  4038b7:	movsxd esp,DWORD PTR [rax]
  4038b9:	push   rax
  4038ba:	xor    BYTE PTR [rax],ah
  4038bc:	xor    r12b,BYTE PTR [rax]
  4038bf:	jl     0x4038e1
  4038c1:	jno    0x403927
  4038c3:	gs ins BYTE PTR es:[rdi],dx
  4038c5:	(bad)  
  4038c6:	jne    0x403936
  4038c8:	(bad)  
  4038c9:	jns    0x4038eb
  4038cb:	rex.RX jbe 0x4038ee
  4038ce:	and    BYTE PTR [rax],ah
  4038d0:	and    BYTE PTR [rax],ah
  4038d2:	and    BYTE PTR [rax],ah
  4038d4:	and    BYTE PTR [rax],ah
  4038d6:	and    BYTE PTR [rax],ah
  4038d8:	jb     0x40393c
  4038da:	outs   dx,DWORD PTR ds:[rsi]
  4038db:	js     0x4038fd
  4038dd:	movsxd esp,DWORD PTR [rax]
  4038df:	push   rax
  4038e0:	xor    BYTE PTR [rax],ah
  4038e2:	xor    r12b,BYTE PTR [rax]
  4038e5:	jl     0x403907
  4038e7:	jno    0x40394d
  4038e9:	gs ins BYTE PTR es:[rdi],dx
  4038eb:	(bad)  
  4038ec:	jne    0x40395c
  4038ee:	(bad)  
  4038ef:	jns    0x403911
  4038f1:	jae    0x403913
  4038f3:	push   rcx
  4038f4:	jne    0x403916
  4038f6:	rex.RX jbe 0x403903
  4038f9:	and    BYTE PTR [rax],ah
  4038fb:	and    BYTE PTR [rax],ah
  4038fd:	jb     0x403961
  4038ff:	outs   dx,DWORD PTR ds:[rsi]
  403900:	js     0x403922
  403902:	movsxd esp,DWORD PTR [rax]
  403904:	rex.RXB xor DWORD PTR [r8],r12d
  403907:	and    BYTE PTR fs:[rdx+rsi*1+0x20],al
  40390c:	jl     0x40392e
  40390e:	jno    0x403974
  403910:	gs ins BYTE PTR es:[rdi],dx
  403912:	(bad)  
  403913:	jne    0x403983
  403915:	(bad)  
  403916:	jns    0x403938
  403918:	jae    0x40393a
  40391a:	imul   esp,DWORD PTR [rax],0x20202020
  403920:	and    BYTE PTR [rax],ah
  403922:	and    BYTE PTR [rdx+0x62],dh
  403925:	outs   dx,DWORD PTR ds:[rsi]
  403926:	js     0x403948
  403928:	movsxd esp,DWORD PTR [rax]
  40392a:	rex.RXB xor DWORD PTR [r8],r12d
  40392d:	and    BYTE PTR fs:[rdx+rsi*1+0x20],al
  403932:	jl     0x403954
  403934:	jno    0x40399a
  403936:	gs ins BYTE PTR es:[rdi],dx
  403938:	(bad)  
  403939:	jne    0x4039a9
  40393b:	(bad)  
  40393c:	jns    0x40395e
  40393e:	push   rcx
  40393f:	je     0x40394b
  403941:	and    BYTE PTR [rax],ah
  403943:	and    BYTE PTR [rax],ah
  403945:	jb     0x4039a9
  403947:	outs   dx,DWORD PTR ds:[rsi]
  403948:	js     0x40396a
  40394a:	xor    r13,QWORD PTR [r12+rsi*1]
  40394e:	and    BYTE PTR [rdx+0x20],bh
  403951:	xor    DWORD PTR [rax],esi
  403953:	xor    BYTE PTR [rax],ah
  403955:	xor    r12b,BYTE PTR [rax]
  403958:	jl     0x40397a
  40395a:	jno    0x4039c0
  40395c:	gs ins BYTE PTR es:[rdi],dx
  40395e:	(bad)  
  40395f:	jne    0x4039cf
  403961:	(bad)  
  403962:	jns    0x403984
  403964:	jae    0x403986
  403966:	and    BYTE PTR [rax],ah
  403968:	and    BYTE PTR [rax],ah
  40396a:	and    BYTE PTR [rdx+0x62],dh
  40396d:	outs   dx,DWORD PTR ds:[rsi]
  40396e:	js     0x403990
  403970:	xor    r13,QWORD PTR [r12+rsi*1]
  403974:	and    BYTE PTR [rdx+0x20],bh
  403977:	xor    DWORD PTR [rax],esi
  403979:	xor    BYTE PTR [rax],ah
  40397b:	xor    r12b,BYTE PTR [rax]
  40397e:	jl     0x4039a0
  403980:	jno    0x4039e6
  403982:	gs ins BYTE PTR es:[rdi],dx
  403984:	(bad)  
  403985:	jne    0x4039f5
  403987:	(bad)  
  403988:	jns    0x4039aa
  40398a:	jae    0x4039ac
  40398c:	push   rcx
  40398d:	je     0x403999
  40398f:	or     al,BYTE PTR [rax]
	...
  4039bd:	add    BYTE PTR [rax],al
  4039bf:	add    BYTE PTR [rdi+0x65],al
  4039c2:	outs   dx,DWORD PTR ds:[rsi]
  4039c3:	ins    DWORD PTR es:[rdi],dx
  4039c4:	jbe    0x403a2f
  4039c6:	gs ja  0x4039e9
  4039c9:	outs   dx,DWORD PTR ds:[rsi]
  4039ca:	jo     0x403a40
  4039cc:	imul   ebp,DWORD PTR [rdi+0x6e],0x32282073
  4039d3:	sub    eax,0x6e612064
  4039d8:	and    BYTE PTR fs:[rbx],dh
  4039db:	sub    eax,0x200a2964
  4039e0:	and    BYTE PTR [rax],ah
  4039e2:	and    BYTE PTR [rdi+0x61],al
  4039e5:	and    BYTE PTR [rax],ah
  4039e7:	and    BYTE PTR [rip+0x6c6c6120],ch        # 0x6cac9b0d
  4039ed:	and    BYTE PTR [rax+0x6f],dh
  4039f0:	imul   ebp,DWORD PTR [rsi+0x74],0x73612073
  4039f7:	and    BYTE PTR [rdi+rbp*2+0x74],ah
  4039fb:	jae    0x403a07
  4039fd:	and    BYTE PTR [rax],ah
  4039ff:	and    BYTE PTR [rax],ah
  403a01:	and    BYTE PTR [rdi+0x70],al
  403a04:	and    BYTE PTR [rax],ah
  403a06:	sub    eax,0x6f632020
  403a0b:	jo     0x403a79
  403a0d:	(bad)  
  403a0e:	outs   dx,BYTE PTR ds:[rsi]
  403a0f:	(bad)  
  403a10:	jb     0x403a32
  403a12:	jo     0x403a83
  403a14:	imul   ebp,DWORD PTR [rsi+0x74],0x6e612073
  403a1b:	and    BYTE PTR fs:[rsi+0x65],dh
  403a1f:	jb     0x403a95
  403a21:	imul   esp,DWORD PTR [rbx+0x65],0x73612073
  403a28:	and    BYTE PTR [rdx+0x61],dh
  403a2b:	imul   ebp,DWORD PTR fs:[rcx+0xa],0x20202020
  403a33:	and    BYTE PTR [rdi+0x76],al
  403a36:	and    BYTE PTR [rax],ah
  403a38:	sub    eax,0x65762020
  403a3d:	jb     0x403ab3
  403a3f:	imul   esp,DWORD PTR [rbx+0x65],0x73612073
  403a46:	and    BYTE PTR [rbx+0x70],dh
  403a49:	push   0x73657265
  403a4e:	or     ah,BYTE PTR [rax]
  403a50:	and    BYTE PTR [rax],ah
  403a52:	and    BYTE PTR [rdi+0x69],al
  403a55:	and    BYTE PTR [rax],ah
  403a57:	and    BYTE PTR [rip+0x6e6e6920],ch        # 0x6eaea37d
  403a5d:	gs jb  0x403a80
  403a60:	jo     0x403ace
  403a62:	(bad)  
  403a63:	outs   dx,BYTE PTR ds:[rsi]
  403a64:	gs jae 0x403a87
  403a67:	outs   dx,DWORD PTR ds:[rsi]
  403a68:	outs   dx,BYTE PTR ds:[rsi]
  403a69:	ins    BYTE PTR es:[rdi],dx
  403a6a:	jns    0x403a76
  403a6c:	and    BYTE PTR [rax],ah
  403a6e:	and    BYTE PTR [rax],ah
  403a70:	and    BYTE PTR [rdi+0x6e],al
  403a73:	and    BYTE PTR [rax],ah
  403a75:	sub    eax,0x6f6e2020
  403a7a:	and    BYTE PTR [rax+0x6c],dh
  403a7d:	(bad)  
  403a7e:	outs   dx,BYTE PTR ds:[rsi]
  403a7f:	gs jae 0x403a8c
  403a82:	and    BYTE PTR [rax],ah
  403a84:	and    BYTE PTR [rax],ah
  403a86:	and    BYTE PTR [rdi+0x6f],al
  403a89:	and    BYTE PTR [rax],ah
  403a8b:	sub    eax,0x756f2020
  403a90:	je     0x403af7
  403a92:	jb     0x403ab4
  403a94:	jo     0x403b02
  403a96:	(bad)  
  403a97:	outs   dx,BYTE PTR ds:[rsi]
  403a98:	gs jae 0x403abb
  403a9b:	outs   dx,DWORD PTR ds:[rsi]
  403a9c:	outs   dx,BYTE PTR ds:[rsi]
  403a9d:	ins    BYTE PTR es:[rdi],dx
  403a9e:	jns    0x403aaa
  403aa0:	and    BYTE PTR [rax],ah
  403aa2:	and    BYTE PTR [rax],ah
  403aa4:	rex.RXB movsxd r9d,DWORD PTR [r9]
  403aa7:	and    BYTE PTR [rax],ah
  403aa9:	and    BYTE PTR [rip+0x6e656320],ch        # 0x6ea59dcf
  403aaf:	je     0x403b23
  403ab1:	jne    0x403b20
  403ab3:	jae    0x403abf
  403ab5:	and    BYTE PTR [rax],ah
  403ab7:	and    BYTE PTR [rax],ah
  403ab9:	rex.RXB push 0x2d202020
  403abf:	and    BYTE PTR [rax+0x79],ch
  403ac2:	jo     0x403b29
  403ac4:	jb     0x403b36
  403ac6:	ins    BYTE PTR es:[rdi],dx
  403ac7:	(bad)  
  403ac8:	outs   dx,BYTE PTR ds:[rsi]
  403ac9:	and    BYTE PTR gs:[rcx+0x6e],ch
  403acd:	je     0x403b34
  403acf:	jb     0x403b44
  403ad1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  403ad6:	outs   dx,BYTE PTR ds:[rsi]
  403ad7:	jae    0x403ae3
  403ad9:	and    BYTE PTR [rax],ah
  403adb:	and    BYTE PTR [rax],ah
  403add:	rex.RXB jb 0x403b00
  403ae0:	and    BYTE PTR [rax],ah
  403ae2:	sub    eax,0x64697220
  403ae7:	addr32 gs jae 0x403af5
  403aeb:	and    BYTE PTR [rax],ah
  403aed:	and    BYTE PTR [rax],ah
  403aef:	rex.RXB
  403af0:	rex.R outs dx,BYTE PTR ds:[rsi]
  403af2:	and    BYTE PTR [rax],ah
  403af4:	sub    eax,0x6f726420
  403af9:	jo     0x403b1b
  403afb:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  403b03:	outs   dx,BYTE PTR ds:[rsi]
  403b04:	and    BYTE PTR [rsi+0x20],ch
  403b07:	imul   ebp,DWORD PTR [rsi+0x20],0x20642d33
  403b0e:	(bad)  
  403b0f:	outs   dx,BYTE PTR ds:[rsi]
  403b10:	and    BYTE PTR fs:[rbp*1+0x756f2064],dh
  403b18:	je     0x403b8a
  403b1a:	jne    0x403b90
  403b1c:	or     ah,BYTE PTR [rax]
  403b1e:	and    BYTE PTR [rax],ah
  403b20:	and    BYTE PTR [rdi+0x74],al
  403b23:	and    BYTE PTR [rax],ah
  403b25:	and    BYTE PTR [rip+0x61727420],ch        # 0x61b2af4b
  403b2b:	outs   dx,BYTE PTR ds:[rsi]
  403b2c:	jae    0x403b9e
  403b2e:	(bad)  
  403b2f:	jb     0x403b96
  403b31:	outs   dx,BYTE PTR ds:[rsi]
  403b32:	je     0x403b54
  403b34:	outs   dx,DWORD PTR ds:[rsi]
  403b35:	jne    0x403bab
  403b37:	gs jb  0x403b5a
  403b3a:	jb     0x403ba5
  403b3c:	fs addr32 gs jae 0x403b61
  403b41:	je     0x403bb2
  403b43:	and    BYTE PTR [rsi+0x69],dh
  403b46:	gs ja  0x403b69
  403b49:	xor    ebp,DWORD PTR [rip+0x65442064]        # 0x65845bb3
  403b4f:	ins    BYTE PTR es:[rdi],dx
  403b50:	(bad)  
  403b51:	jne    0x403bc1
  403b53:	(bad)  
  403b54:	jns    0x403b60
  403b56:	or     dl,BYTE PTR [rax+0x72]
  403b59:	imul   ebp,DWORD PTR [rsi+0x74],0x74706f20
  403b60:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  403b67:	and    BYTE PTR [rax],ah
  403b69:	and    BYTE PTR [rax+0x41],dl
  403b6c:	outs   dx,BYTE PTR ds:[rsi]
  403b6d:	and    BYTE PTR [rax],ah
  403b6f:	sub    eax,0x65656b20
  403b74:	jo     0x403b96
  403b76:	outs   dx,BYTE PTR ds:[rsi]
  403b77:	and    BYTE PTR [rcx+riz*2+0x72],ch
  403b7b:	addr32 gs jae 0x403bf3
  403b7f:	and    BYTE PTR [rbp+riz*2+0x6c],al
  403b83:	(bad)  
  403b84:	jne    0x403bf4
  403b86:	(bad)  
  403b87:	jns    0x403ba9
  403b89:	jb     0x403bf0
  403b8b:	imul   ebp,DWORD PTR [edi+0x6e],0x79622073
  403b93:	and    BYTE PTR [rcx+0x72],ah
  403b96:	gs (bad) 
  403b98:	or     ah,BYTE PTR [rax]
  403b9a:	and    BYTE PTR [rax],ah
  403b9c:	and    BYTE PTR [rax+0x64],dl
  403b9f:	imul   edi,DWORD PTR [rdx],0x6e
  403ba2:	and    BYTE PTR [rip+0x6f726420],ch        # 0x6fb29fc8
  403ba8:	jo     0x403bca
  403baa:	data16 (bad) 
  403bac:	movsxd esp,DWORD PTR [rbp+0x74]
  403baf:	and    BYTE PTR [rcx+0x66],ch
  403bb2:	and    BYTE PTR [rsi+0x6f],ch
  403bb5:	jb     0x403c24
  403bb7:	(bad)  
  403bb8:	ins    BYTE PTR es:[rdi],dx
  403bb9:	pop    rbx
  403bba:	imul   ebx,DWORD PTR [rbp+0x20],0x3c
  403bbe:	cmp    eax,0x28206e20
  403bc3:	fs gs data16 (bad) 
  403bc7:	jne    0x403c35
  403bc9:	je     0x403beb
  403bcb:	xor    BYTE PTR [rsi],ch
  403bcd:	xor    BYTE PTR [rcx],ch
  403bcf:	or     ah,BYTE PTR [rax]
  403bd1:	and    BYTE PTR [rax],ah
  403bd3:	and    BYTE PTR [rax+0x44],dl
  403bd6:	imul   edi,DWORD PTR [rdx],0x6e
  403bd9:	and    BYTE PTR [rip+0x6f726420],ch        # 0x6fb29fff
  403bdf:	jo     0x403c01
  403be1:	data16 (bad) 
  403be3:	movsxd esp,DWORD PTR [rbp+0x74]
  403be6:	and    BYTE PTR [rcx+0x66],ch
  403be9:	and    BYTE PTR [rsi+0x6f],ch
  403bec:	jb     0x403c5b
  403bee:	(bad)  
  403bef:	ins    BYTE PTR es:[rdi],dx
  403bf0:	pop    rbx
  403bf1:	imul   ebx,DWORD PTR [rbp+0x20],0x3e
  403bf5:	cmp    eax,0x200a6e20
  403bfa:	and    BYTE PTR [rax],ah
  403bfc:	and    BYTE PTR [rax+0x67],dl
  403bff:	and    BYTE PTR [rax],ah
  403c01:	and    BYTE PTR [rip+0x69727020],ch        # 0x69b2ac27
  403c07:	outs   dx,BYTE PTR ds:[rsi]
  403c08:	je     0x403c2a
  403c0a:	outs   dx,DWORD PTR ds:[esi]
  403c0c:	outs   dx,DWORD PTR ds:[rsi]
  403c0d:	and    BYTE PTR fs:[rbp+riz*2+0x6c],al
  403c12:	(bad)  
  403c13:	jne    0x403c83
  403c15:	(bad)  
  403c16:	jns    0x403c38
  403c18:	jb     0x403c7f
  403c1a:	imul   ebp,DWORD PTR [edi+0x6e],0x6e282073
  403c22:	gs gs fs jae 0x403c47
  403c27:	(bad)  
  403c28:	push   rcx
  403c29:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  403c2b:	(bad)  
  403c2c:	and    BYTE PTR [rdi+0x72],ch
  403c2f:	and    BYTE PTR [rdi],ah
  403c31:	push   rcx
  403c32:	push   rsi
  403c33:	outs   dx,BYTE PTR ds:[rsi]
  403c34:	(bad)  
  403c35:	sub    DWORD PTR [rdx],ecx
  403c37:	and    BYTE PTR [rax],ah
  403c39:	and    BYTE PTR [rax],ah
  403c3b:	push   rax
  403c3c:	rex.RX outs dx,BYTE PTR ds:[rsi]
  403c3e:	and    BYTE PTR [rax],ah
  403c40:	sub    eax,0x65656b20
  403c45:	jo     0x403c67
  403c47:	rex.R
  403c48:	gs ins BYTE PTR es:[rdi],dx
  403c4a:	(bad)  
  403c4b:	jne    0x403cbb
  403c4d:	(bad)  
  403c4e:	jns    0x403c70
  403c50:	jb     0x403cb7
  403c52:	imul   ebp,DWORD PTR [edi+0x6e],0x68772073
  403c5a:	outs   dx,DWORD PTR ds:[rsi]
  403c5b:	jae    0x403cc2
  403c5d:	and    BYTE PTR [rcx+0x72],ah
  403c60:	gs (bad) 
  403c62:	and    BYTE PTR [rcx+0x73],ch
  403c65:	and    BYTE PTR [rcx+0x74],ah
  403c68:	and    BYTE PTR [rbp+riz*2+0x61],ch
  403c6c:	jae    0x403ce2
  403c6e:	and    BYTE PTR [rsi+0xa],ch
  403c71:	and    BYTE PTR [rax],ah
  403c73:	and    BYTE PTR [rax],ah
  403c75:	push   rax
  403c76:	rex.RXB and BYTE PTR [r8],r12b
  403c79:	and    BYTE PTR [rip+0x69727020],ch        # 0x69b2ac9f
  403c7f:	outs   dx,BYTE PTR ds:[rsi]
  403c80:	je     0x403ca2
  403c82:	outs   dx,BYTE PTR ds:[rsi]
  403c83:	imul   esp,DWORD PTR gs:[rdi+0x68],0x73726f62
  403c8b:	and    BYTE PTR [rdi+0x66],ch
  403c8e:	and    BYTE PTR [rdi+0x6f],ah
  403c91:	outs   dx,DWORD PTR ds:[rsi]
  403c92:	and    BYTE PTR fs:[rdx+0x65],dh
  403c96:	imul   ebp,DWORD PTR [edi+0x6e],0x6e282073
  403c9e:	gs gs fs jae 0x403cc3
  403ca3:	(bad)  
  403ca4:	push   rcx
  403ca5:	rex.RXB outs dx,BYTE PTR ds:[rsi]
  403ca7:	(bad)  
  403ca8:	and    BYTE PTR [rdi+0x72],ch
  403cab:	and    BYTE PTR [rdi],ah
  403cad:	push   rcx
  403cae:	push   rsi
  403caf:	outs   dx,BYTE PTR ds:[rsi]
  403cb0:	(bad)  
  403cb1:	sub    DWORD PTR [rdx],ecx
  403cb3:	and    BYTE PTR [rax],ah
  403cb5:	and    BYTE PTR [rax],ah
  403cb7:	push   rax
  403cb8:	rex.WRB outs dx,BYTE PTR ds:[rsi]
  403cba:	and    BYTE PTR [rax],ah
  403cbc:	sub    eax,0x65656b20
  403cc1:	jo     0x403ce3
  403cc3:	outs   dx,BYTE PTR ds:[rsi]
  403cc4:	and    BYTE PTR [rbp+riz*2+0x6c],al
  403cc8:	(bad)  
  403cc9:	jne    0x403d39
  403ccb:	(bad)  
  403ccc:	jns    0x403cee
  403cce:	jb     0x403d35
  403cd0:	imul   ebp,DWORD PTR [edi+0x6e],0x69772073
  403cd8:	je     0x403d42
  403cda:	and    BYTE PTR [rbp+0x6f],ch
  403cdd:	jae    0x403d53
  403cdf:	and    BYTE PTR [rbp+0x65],ch
  403ce2:	jb     0x403d4b
  403ce4:	gs jae 0x403cf1
  403ce7:	and    BYTE PTR [rax],ah
  403ce9:	and    BYTE PTR [rax],ah
  403ceb:	push   rax
  403cec:	outs   dx,DWORD PTR ds:[rsi]
  403ced:	and    BYTE PTR [rax],ah
  403cef:	and    BYTE PTR [rip+0x726f6620],ch        # 0x72afa315
  403cf5:	movsxd esp,DWORD PTR [rbp+0x20]
  403cf8:	outs   dx,DWORD PTR ds:[rsi]
  403cf9:	jne    0x403d6f
  403cfb:	jo     0x403d72
  403cfd:	je     0x403d2d
  403cff:	and    BYTE PTR [rax],ah
  403d01:	rex.WB
  403d02:	data16 and BYTE PTR [rbp+0x72],ah
  403d06:	jb     0x403d77
  403d08:	jb     0x403d36
  403d0a:	and    BYTE PTR [rdi+0x75],ch
  403d0d:	je     0x403d7f
  403d0f:	jne    0x403d85
  403d11:	and    BYTE PTR [rsi+0x65],ch
  403d14:	imul   esp,DWORD PTR [rdi+0x68],0x68726f62
  403d1b:	outs   dx,DWORD PTR ds:[rsi]
  403d1c:	outs   dx,DWORD PTR ds:[rsi]
  403d1d:	and    BYTE PTR fs:[rdi+0x66],ch
  403d21:	and    BYTE PTR [rsi+0x61],ah
  403d24:	movsxd esp,DWORD PTR [rbp+0x74]
  403d27:	or     ah,BYTE PTR [rax]
  403d29:	and    BYTE PTR [rax],ah
  403d2b:	and    BYTE PTR [rax+0x70],dl
  403d2e:	and    BYTE PTR [rax],ah
  403d30:	and    BYTE PTR [rip+0x206f6420],ch        # 0x20afa156
  403d36:	outs   dx,BYTE PTR ds:[rsi]
  403d37:	outs   dx,DWORD PTR ds:[rsi]
  403d38:	je     0x403d5a
  403d3a:	jb     0x403da1
  403d3c:	jo     0x403dad
  403d3e:	jb     0x403db4
  403d40:	and    BYTE PTR [rax+0x72],dh
  403d43:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  403d47:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  403d4e:	(bad)  
  403d4f:	ins    BYTE PTR es:[rdi],dx
  403d50:	gs ins DWORD PTR es:[rdi],dx
  403d52:	jae    0x403d5e
  403d54:	or     ah,BYTE PTR [rax]
  403d56:	and    BYTE PTR [rax],ah
  403d58:	and    BYTE PTR [rsi],ch
  403d5a:	and    BYTE PTR [rax],ah
  403d5c:	and    BYTE PTR [rax],ah
  403d5e:	sub    eax,0x73696c20
  403d63:	je     0x403d85
  403d65:	outs   dx,DWORD PTR ds:[rsi]
  403d66:	data16 and BYTE PTR [rcx+0x6c],ah
  403d6a:	ins    BYTE PTR es:[rdi],dx
  403d6b:	and    BYTE PTR [rdi+0x70],ch
  403d6e:	je     0x403dd9
  403d70:	outs   dx,DWORD PTR ds:[rsi]
  403d71:	outs   dx,BYTE PTR ds:[rsi]
  403d72:	jae    0x403d7e
  403d74:	and    BYTE PTR [rax],ah
  403d76:	and    BYTE PTR [rax],ah
  403d78:	sub    eax,0x20202020
  403d7d:	sub    eax,0x656e6f20
  403d82:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  403d86:	and    BYTE PTR gs:[rbp+riz*2+0x73],ah
  403d8b:	movsxd esi,DWORD PTR [rdx+0x69]
  403d8e:	jo     0x403e04
  403d90:	imul   ebp,DWORD PTR [rdi+0x6e],0x666f2073
  403d97:	and    BYTE PTR [rcx+0x6c],ah
  403d9a:	ins    BYTE PTR es:[rdi],dx
  403d9b:	and    BYTE PTR [rdi+0x70],ch
  403d9e:	je     0x403e09
  403da0:	outs   dx,DWORD PTR ds:[rsi]
  403da1:	outs   dx,BYTE PTR ds:[rsi]
  403da2:	jae    0x403dae
	...
  403dc0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  403dc2:	jb     0x403e29
  403dc4:	and    BYTE PTR [rsi+0x6f],ah
  403dc7:	jb     0x403e36
  403dc9:	(bad)  
  403dca:	je     0x403e3f
  403dcc:	cmp    cl,BYTE PTR [rdx]
  403dce:	and    BYTE PTR [rax],ah
  403dd0:	and    BYTE PTR [rax],ah
  403dd2:	rex.RX (bad) 
  403dd4:	and    BYTE PTR [rax],ah
  403dd6:	and    BYTE PTR [rip+0x65726120],ch        # 0x65b29efc
  403ddc:	(bad)  
  403ddd:	and    BYTE PTR [rsi+0x6f],ah
  403de0:	jb     0x403e02
  403de2:	gs (bad) 
  403de4:	movsxd ebp,DWORD PTR [rax+0x20]
  403de7:	rex.R
  403de8:	gs ins BYTE PTR es:[rdi],dx
  403dea:	(bad)  
  403deb:	jne    0x403e5b
  403ded:	(bad)  
  403dee:	jns    0x403e10
  403df0:	jb     0x403e57
  403df2:	imul   ebp,DWORD PTR [edi+0x6e],0x2020200a
  403dfa:	and    BYTE PTR [rsi+0x41],al
  403dfd:	and    BYTE PTR [rax],ah
  403dff:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6dafa125
  403e05:	jo     0x403e7c
  403e07:	je     0x403e6e
  403e09:	and    BYTE PTR [rdi+rbp*2+0x74],dh
  403e0d:	(bad)  
  403e0e:	ins    BYTE PTR es:[rdi],dx
  403e0f:	and    BYTE PTR [rcx+0x72],ah
  403e12:	gs (bad) 
  403e14:	and    BYTE PTR [rsi+0x6f],ah
  403e17:	jb     0x403e39
  403e19:	outs   dx,DWORD PTR ds:[rsi]
  403e1a:	jo     0x403e90
  403e1c:	imul   ebp,DWORD PTR [rdi+0x6e],0x27732720
  403e23:	or     ah,BYTE PTR [rax]
  403e25:	and    BYTE PTR [rax],ah
  403e27:	and    BYTE PTR [rsi+0x63],al
  403e2a:	and    BYTE PTR [rax],ah
  403e2c:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa152
  403e32:	outs   dx,BYTE PTR ds:[rsi]
  403e33:	je     0x403e55
  403e35:	jo     0x403ea3
  403e37:	jne    0x403eac
  403e39:	and    BYTE PTR [rbx+0x6f],ah
  403e3c:	imul   ebp,DWORD PTR [rsi+0x63],0x6e656469
  403e43:	je     0x403e65
  403e45:	jo     0x403eb6
  403e47:	imul   ebp,DWORD PTR [rsi+0x74],0x6f662073
  403e4e:	jb     0x403e70
  403e50:	gs (bad) 
  403e52:	movsxd ebp,DWORD PTR [rax+0x20]
  403e55:	rex.R
  403e56:	gs ins BYTE PTR es:[rdi],dx
  403e58:	(bad)  
  403e59:	jne    0x403ec9
  403e5b:	(bad)  
  403e5c:	jns    0x403e7e
  403e5e:	jb     0x403ec5
  403e60:	imul   ebp,DWORD PTR [edi+0x6e],0x2020200a
  403e68:	and    BYTE PTR [rsi+0x64],al
  403e6b:	and    BYTE PTR [rax],ah
  403e6d:	and    BYTE PTR [rip+0x65737520],ch        # 0x65b3b393
  403e73:	and    BYTE PTR [rbx+0x64],ah
  403e76:	and    BYTE PTR fs:[rsi+0x6f],ah
  403e7a:	jb     0x403ee9
  403e7c:	(bad)  
  403e7d:	je     0x403e9f
  403e7f:	outs   dx,WORD PTR ds:[rsi]
  403e81:	jb     0x403ea3
  403e83:	imul   ebp,DWORD PTR [rsi+0x70],0x28207475
  403e8a:	push   0x676f6d6f
  403e8f:	outs   dx,BYTE PTR gs:[rsi]
  403e91:	outs   dx,DWORD PTR gs:[rsi]
  403e93:	jne    0x403f08
  403e95:	and    BYTE PTR [rdi+0x69],dh
  403e98:	je     0x403f02
  403e9a:	and    BYTE PTR [rdi+0x66],ch
  403e9d:	data16 jae 0x403f05
  403ea0:	je     0x403ec2
  403ea2:	imul   si,WORD PTR [rdx+0x73],0x2974
  403ea8:	or     ah,BYTE PTR [rax]
  403eaa:	and    BYTE PTR [rax],ah
  403eac:	and    BYTE PTR [rsi+0x44],al
  403eaf:	and    BYTE PTR [rax],ah
  403eb1:	and    BYTE PTR [rip+0x65737520],ch        # 0x65b3b3d7
  403eb7:	and    BYTE PTR [rbx+0x64],ah
  403eba:	and    BYTE PTR fs:[rsi+0x6f],ah
  403ebe:	jb     0x403f2d
  403ec0:	(bad)  
  403ec1:	je     0x403ee3
  403ec3:	outs   dx,WORD PTR ds:[rsi]
  403ec5:	jb     0x403ee7
  403ec7:	outs   dx,BYTE PTR ds:[rsi]
  403ec8:	jne    0x403f37
  403eca:	gs jb  0x403f36
  403ecd:	movsxd esp,DWORD PTR [rax]
  403ecf:	outs   dx,DWORD PTR ds:[rsi]
  403ed0:	jne    0x403f46
  403ed2:	jo     0x403f49
  403ed4:	je     0x403ef6
  403ed6:	sub    BYTE PTR [rdi+0x66],ch
  403ed9:	data16 jae 0x403f41
  403edc:	je     0x403efe
  403ede:	imul   si,WORD PTR [rdx+0x73],0x2974
  403ee4:	or     ah,BYTE PTR [rax]
  403ee6:	and    BYTE PTR [rax],ah
  403ee8:	and    BYTE PTR [rsi+0x46],al
  403eeb:	and    BYTE PTR [rax],ah
  403eed:	and    BYTE PTR [rip+0x63616620],ch        # 0x63a1a513
  403ef3:	gs je  0x403f16
  403ef6:	fs jne 0x403f66
  403ef9:	jo     0x403f1b
  403efb:	ja     0x403f66
  403efd:	je     0x403f67
  403eff:	outs   dx,DWORD PTR ds:[rsi]
  403f00:	jne    0x403f76
  403f02:	and    BYTE PTR [rdx+0x69],dh
  403f05:	fs addr32 gs jae 0x403f14
  403f0a:	and    BYTE PTR [rax],ah
  403f0c:	and    BYTE PTR [rax],ah
  403f0e:	rex.RX
  403f0f:	rex.WB and BYTE PTR [r8],spl
  403f12:	and    BYTE PTR [rip+0x20444920],ch        # 0x20848838
  403f18:	outs   dx,DWORD PTR ds:[rsi]
  403f19:	data16 and BYTE PTR [rbp+0x61],ah
  403f1d:	movsxd ebp,DWORD PTR [rax+0x20]
  403f20:	rex.R
  403f21:	gs ins BYTE PTR es:[rdi],dx
  403f23:	(bad)  
  403f24:	jne    0x403f94
  403f26:	(bad)  
  403f27:	jns    0x403f49
  403f29:	jb     0x403f90
  403f2b:	imul   ebp,DWORD PTR [edi+0x6e],0x2020200a
  403f33:	and    BYTE PTR [rsi+0x6d],al
  403f36:	and    BYTE PTR [rax],ah
  403f38:	and    BYTE PTR [rip+0x72656d20],ch        # 0x72a5ac5e
  403f3e:	and    BYTE PTR gs:[ebx+0x6f],ah
  403f43:	jne    0x403fb3
  403f45:	je     0x403f67
  403f47:	outs   dx,WORD PTR ds:[rsi]
  403f49:	jb     0x403f6b
  403f4b:	gs (bad) 
  403f4d:	movsxd ebp,DWORD PTR [rax+0x20]
  403f50:	rex.R
  403f51:	gs ins BYTE PTR es:[rdi],dx
  403f53:	(bad)  
  403f54:	jne    0x403fc4
  403f56:	(bad)  
  403f57:	jns    0x403f79
  403f59:	jb     0x403fc0
  403f5b:	imul   ebp,DWORD PTR [edi+0x6e],0x31352820
  403f63:	xor    DWORD PTR [rax],esp
  403f65:	ins    DWORD PTR es:[rdi],dx
  403f66:	(bad)  
  403f67:	js     0x403f92
  403f69:	or     ah,BYTE PTR [rax]
  403f6b:	and    BYTE PTR [rax],ah
  403f6d:	and    BYTE PTR [rsi+0x4d],al
  403f70:	and    BYTE PTR [rax],ah
  403f72:	and    BYTE PTR [rip+0x70614d20],ch        # 0x70a18c98
  403f78:	ins    BYTE PTR es:[rdi],dx
  403f79:	and    BYTE PTR gs:[rdi+0x75],ch
  403f7d:	je     0x403fef
  403f7f:	jne    0x403ff5
  403f81:	and    BYTE PTR [rax],ch
  403f83:	xor    ch,BYTE PTR [rip+0x6e6f2064]        # 0x6eaf5fed
  403f89:	ins    BYTE PTR es:[rdi],dx
  403f8a:	jns    0x403fb8
  403f8c:	and    BYTE PTR [rcx+rbp*2+0x66],ch
  403f90:	je     0x403ff7
  403f92:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  403f97:	(bad)  
  403f98:	and    BYTE PTR [rax+0x61],dh
  403f9b:	jb     0x403ffe
  403f9d:	(bad)  
  403f9e:	outs   dx,DWORD PTR ds:[rsi]
  403f9f:	ins    BYTE PTR es:[rdi],dx
  403fa0:	outs   dx,DWORD PTR ds:[rsi]
  403fa1:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20202020
  403fa9:	rex.RX outs dx,BYTE PTR ds:[rsi]
  403fab:	and    BYTE PTR [rax],ah
  403fad:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa2d3
  403fb3:	outs   dx,BYTE PTR ds:[rsi]
  403fb4:	je     0x403fd6
  403fb6:	jo     0x404024
  403fb8:	jne    0x40402d
  403fba:	and    BYTE PTR [rsi+0x65],ch
  403fbd:	imul   esp,DWORD PTR [rdi+0x68],0x69726f62
  403fc4:	outs   dx,BYTE PTR ds:[rsi]
  403fc5:	and    BYTE PTR [edx+0x65],dh
  403fc9:	imul   ebp,DWORD PTR [edi+0x6e],0x726f6620
  403fd1:	and    BYTE PTR [rbp+0x61],ah
  403fd4:	movsxd ebp,DWORD PTR [rax+0x20]
  403fd7:	rex.R
  403fd8:	gs ins BYTE PTR es:[rdi],dx
  403fda:	(bad)  
  403fdb:	jne    0x40404b
  403fdd:	(bad)  
  403fde:	jns    0x404000
  403fe0:	jb     0x404047
  403fe2:	imul   ebp,DWORD PTR [edi+0x6e],0x2020200a
  403fea:	and    BYTE PTR [rsi+0x4e],al
  403fed:	and    BYTE PTR [rax],ah
  403fef:	and    BYTE PTR [rip+0x756f6320],ch        # 0x75afa315
  403ff5:	outs   dx,BYTE PTR ds:[rsi]
  403ff6:	je     0x404018
  403ff8:	jo     0x404066
  403ffa:	jne    0x40406f
  403ffc:	and    BYTE PTR [rsi+0x65],ch
  403fff:	imul   esp,DWORD PTR [rdi+0x68],0x69726f62
  404006:	outs   dx,BYTE PTR ds:[rsi]
  404007:	and    BYTE PTR [edx+0x65],dh
  40400b:	imul   ebp,DWORD PTR [edi+0x6e],0x726f6620
  404013:	and    BYTE PTR [rbp+0x61],ah
  404016:	movsxd ebp,DWORD PTR [rax+0x20]
  404019:	jo     0x40408a
  40401b:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  404022:	and    BYTE PTR [rsi+0x4f],al
  404025:	and    BYTE PTR [rax],ah
  404027:	and    BYTE PTR [rip+0x74706f20],ch        # 0x74b0af4d
  40402d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e612073
  404034:	and    BYTE PTR fs:[rax+0x72],dh
  404038:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  40403c:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e6f6320
  404043:	jae    0x4040b9
  404045:	(bad)  
  404046:	outs   dx,BYTE PTR ds:[rsi]
  404047:	je     0x4040bc
  404049:	or     ah,BYTE PTR [rax]
  40404b:	and    BYTE PTR [rax],ah
  40404d:	and    BYTE PTR [rsi+0x50],al
  404050:	and    BYTE PTR [rax],ah
  404052:	and    BYTE PTR [rip+0x61656e20],ch        # 0x61a5ae78
  404058:	jb     0x4040bf
  40405a:	jae    0x4040d0
  40405c:	and    BYTE PTR [rax+0x6f],dh
  40405f:	imul   ebp,DWORD PTR [rsi+0x74],0x646e6120
  404066:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  40406a:	je     0x4040cd
  40406c:	outs   dx,BYTE PTR ds:[rsi]
  40406d:	movsxd esp,DWORD PTR [rbp+0x20]
  404070:	outs   dx,WORD PTR ds:[rsi]
  404072:	jb     0x404094
  404074:	gs (bad) 
  404076:	movsxd ebp,DWORD PTR [rax+0x20]
  404079:	movsxd ebp,DWORD PTR [rdi+0x69]
  40407c:	outs   dx,BYTE PTR ds:[rsi]
  40407d:	movsxd ebp,DWORD PTR [rcx+0x64]
  404080:	outs   dx,BYTE PTR gs:[rsi]
  404082:	je     0x4040a4
  404084:	jo     0x4040f5
  404086:	imul   ebp,DWORD PTR [rsi+0x74],0x2020200a
  40408d:	and    BYTE PTR [rsi+0x51],al
  404090:	and    BYTE PTR [rax],ah
  404092:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6dafa3b8
  404098:	ins    DWORD PTR es:[rdi],dx
  404099:	(bad)  
  40409a:	outs   dx,BYTE PTR ds:[rsi]
  40409b:	and    BYTE PTR fs:[rbp+0x73],dh
  40409f:	gs and BYTE PTR fs:[rsi+0x6f],ah
  4040a4:	jb     0x4040c6
  4040a6:	jno    0x40410c
  4040a8:	gs ins BYTE PTR es:[rdi],dx
  4040aa:	(bad)  
  4040ab:	jne    0x40411b
  4040ad:	(bad)  
  4040ae:	jns    0x4040ba
  4040b0:	and    BYTE PTR [rax],ah
  4040b2:	and    BYTE PTR [rax],ah
  4040b4:	rex.RX jae 0x4040d7
  4040b7:	and    BYTE PTR [rax],ah
  4040b9:	sub    eax,0x6d757320
  4040be:	ins    DWORD PTR es:[rdi],dx
  4040bf:	(bad)  
  4040c0:	jb     0x40413b
  4040c2:	cmp    ah,BYTE PTR [rax]
  4040c4:	and    ebp,DWORD PTR [rcx+0x6e]
  4040c7:	je     0x4040e9
  4040c9:	sub    BYTE PTR [rax],bh
  4040cb:	sub    DWORD PTR [rax+riz*1],ebp
  4040ce:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  4040d6:	outs   dx,BYTE PTR ds:[rsi]
  4040d7:	sub    al,0x20
  4040d9:	and    esi,DWORD PTR [rax+0x6f]
  4040dc:	imul   ebp,DWORD PTR [rsi+0x74],0x74202c73
  4040e3:	outs   dx,DWORD PTR ds:[rsi]
  4040e4:	je     0x404106
  4040e6:	jbe    0x40414d
  4040e8:	jb     0x40415e
  4040ea:	imul   esp,DWORD PTR [rbx+0x65],0x74202c73
  4040f1:	outs   dx,DWORD PTR ds:[rsi]
  4040f2:	je     0x404114
  4040f4:	data16 (bad) 
  4040f6:	movsxd esp,DWORD PTR [rbp+0x74]
  4040f9:	jae    0x404127
  4040fb:	or     ah,BYTE PTR [rax]
  4040fd:	and    BYTE PTR [rax],ah
  4040ff:	and    BYTE PTR [rax],ah
  404101:	and    BYTE PTR [rax],ah
  404103:	and    BYTE PTR [rax],ah
  404105:	and    BYTE PTR [rax],ah
  404107:	and    BYTE PTR [rax],ah
  404109:	and    BYTE PTR [rax],ah
  40410b:	and    BYTE PTR [rax],ah
  40410d:	and    BYTE PTR [rax],ah
  40410f:	and    BYTE PTR [rsi+0x6f],ah
  404112:	jb     0x404134
  404114:	outs   dx,DWORD PTR ds:[rsi]
  404115:	jne    0x40418b
  404117:	jo     0x40418e
  404119:	je     0x404155
  40411b:	and    BYTE PTR [rbx],ah
  40411d:	jbe    0x404184
  40411f:	jb     0x404195
  404121:	imul   esp,DWORD PTR [rbx+0x65],0x23202c73
  404128:	rex.R
  404129:	gs ins BYTE PTR es:[rdi],dx
  40412b:	(bad)  
  40412c:	jne    0x40419c
  40412e:	(bad)  
  40412f:	jns    0x404151
  404131:	jb     0x404198
  404133:	imul   ebp,DWORD PTR [edi+0x6e],0x200a2c73
  40413b:	and    BYTE PTR [rax],ah
  40413d:	and    BYTE PTR [rax],ah
  40413f:	and    BYTE PTR [rax],ah
  404141:	and    BYTE PTR [rax],ah
  404143:	and    BYTE PTR [rax],ah
  404145:	and    BYTE PTR [rax],ah
  404147:	and    BYTE PTR [rax],ah
  404149:	and    BYTE PTR [rax],ah
  40414b:	and    BYTE PTR [rax],ah
  40414d:	and    BYTE PTR [rax],ah
  40414f:	and    BYTE PTR [rax],ah
  404151:	and    BYTE PTR [rax],ah
  404153:	and    BYTE PTR [rax],ah
  404155:	and    BYTE PTR [rax],ah
  404157:	and    BYTE PTR [rax],ah
  404159:	and    BYTE PTR [rbx],ah
  40415b:	movsxd ebp,DWORD PTR [rdi+0x69]
  40415e:	outs   dx,BYTE PTR ds:[rsi]
  40415f:	movsxd ebp,DWORD PTR [rcx+0x64]
  404162:	outs   dx,BYTE PTR gs:[rsi]
  404164:	je     0x404186
  404166:	jo     0x4041d7
  404168:	imul   ebp,DWORD PTR [rsi+0x74],0x23202c73
  40416f:	outs   dx,BYTE PTR ds:[rsi]
  404170:	outs   dx,DWORD PTR ds:[rsi]
  404171:	outs   dx,BYTE PTR ds:[rsi]
  404172:	sub    eax,0x706d6973
  404177:	ins    BYTE PTR es:[rdi],dx
  404178:	imul   esp,DWORD PTR [rbx+0x69],0x72206c61
  40417f:	imul   ebp,DWORD PTR gs:[edi+0x6e],0x20200a73
  404188:	and    BYTE PTR [rax],ah
  40418a:	and    BYTE PTR [rax],ah
  40418c:	and    BYTE PTR [rax],ah
  40418e:	and    BYTE PTR [rax],ah
  404190:	and    BYTE PTR [rax],ah
  404192:	and    BYTE PTR [rax],ah
  404194:	and    BYTE PTR [rax],ah
  404196:	and    BYTE PTR [rax],ah
  404198:	and    BYTE PTR [rax],ah
  40419a:	and    esi,DWORD PTR [rdx+0x65]
  40419d:	(bad)  
  40419e:	ins    BYTE PTR es:[rdi],dx
  40419f:	and    BYTE PTR [rax],ch
  4041a1:	xor    ch,BYTE PTR [rcx]
  4041a3:	sub    al,0x20
  4041a5:	ins    DWORD PTR es:[rdi],dx
  4041a6:	(bad)  
  4041a7:	js     0x4041c9
  4041a9:	outs   dx,DWORD PTR ds:[rsi]
  4041aa:	jne    0x404220
  4041ac:	gs jb  0x4041cf
  4041af:	jo     0x40421d
  4041b1:	(bad)  
  4041b2:	outs   dx,BYTE PTR ds:[rsi]
  4041b3:	gs sub al,0x20
  4041b6:	ins    DWORD PTR es:[rdi],dx
  4041b7:	imul   ebp,DWORD PTR [rsi+0x20],0x74726576
  4041be:	gs js  0x4041cb
  4041c1:	and    BYTE PTR [rax],ah
  4041c3:	and    BYTE PTR [rax],ah
  4041c5:	rex.RX push rbx
  4041c7:	and    BYTE PTR [rax],ah
  4041c9:	and    BYTE PTR [rip+0x7a697320],ch        # 0x7aa9b4ef
  4041cf:	gs jae 0x40420c
  4041d2:	and    BYTE PTR [rax],ah
  4041d4:	and    BYTE PTR [rbx],ah
  4041d6:	imul   ebp,DWORD PTR [rsi+0x74],0x29302820
  4041dd:	or     ah,BYTE PTR [rax]
  4041df:	and    BYTE PTR [rax],ah
  4041e1:	and    BYTE PTR [rax],ah
  4041e3:	and    BYTE PTR [rax],ah
  4041e5:	and    BYTE PTR [rax],ah
  4041e7:	and    BYTE PTR [rax],ah
  4041e9:	and    BYTE PTR [rax],ah
  4041eb:	and    BYTE PTR [rax],ah
  4041ed:	and    BYTE PTR [rax],ah
  4041ef:	and    BYTE PTR [rax],ah
  4041f1:	and    BYTE PTR [rbx],ah
  4041f3:	jb     0x40425a
  4041f5:	(bad)  
  4041f6:	ins    BYTE PTR es:[rdi],dx
  4041f7:	sub    BYTE PTR [rdx],dh
  4041f9:	sub    DWORD PTR [rax],esp
  4041fb:	je     0x40426c
  4041fd:	je     0x40421f
  4041ff:	(bad)  
  404200:	jb     0x404267
  404202:	(bad)  
  404203:	sub    al,0x20
  404205:	xor    BYTE PTR [rdx],cl
  404207:	and    BYTE PTR [rax],ah
  404209:	and    BYTE PTR [rax],ah
  40420b:	rex.RX jbe 0x40422e
  40420e:	and    BYTE PTR [rax],ah
  404210:	sub    eax,0x756f6320
  404215:	outs   dx,BYTE PTR ds:[rsi]
  404216:	je     0x404238
  404218:	jo     0x404286
  40421a:	jne    0x40428f
  40421c:	and    BYTE PTR [rsi+0x65],dh
  40421f:	jb     0x404295
  404221:	imul   esp,DWORD PTR [rbx+0x65],0x6f662073
  404228:	jb     0x40424a
  40422a:	gs (bad) 
  40422c:	movsxd ebp,DWORD PTR [rax+0x20]
  40422f:	rex.R
  404230:	gs ins BYTE PTR es:[rdi],dx
  404232:	(bad)  
  404233:	jne    0x4042a3
  404235:	(bad)  
  404236:	jns    0x404258
  404238:	jb     0x40429f
  40423a:	imul   ebp,DWORD PTR [edi+0x6e],0x2020200a
  404242:	and    BYTE PTR [rsi+0x78],al
  404245:	and    BYTE PTR [rax],ah
  404247:	and    BYTE PTR [rip+0x74786520],ch        # 0x74b8a76d
  40424d:	jb     0x4042b4
  40424f:	ins    DWORD PTR es:[rdi],dx
  404250:	and    BYTE PTR gs:[rax+0x6f],dh
  404254:	imul   ebp,DWORD PTR [rsi+0x74],0x666f2073
  40425b:	and    BYTE PTR [rbp+riz*2+0x6c],al
  40425f:	(bad)  
  404260:	jne    0x4042d0
  404262:	(bad)  
  404263:	jns    0x404285
  404265:	je     0x4042d9
  404267:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  40426e:	je     0x4042d9
  404270:	outs   dx,DWORD PTR ds:[rsi]
  404271:	outs   dx,BYTE PTR ds:[rsi]
  404272:	and    BYTE PTR [rax],ch
  404274:	outs   dx,DWORD PTR ds:[rsi]
  404275:	outs   dx,BYTE PTR ds:[rsi]
  404276:	and    BYTE PTR [rbx+0x6f],ah
  404279:	outs   dx,BYTE PTR ds:[rsi]
  40427a:	jbe    0x4042e1
  40427c:	js     0x40429e
  40427e:	push   0x296c6c75
  404283:	or     cl,BYTE PTR [rdx]
	...
  4042bd:	add    BYTE PTR [rax],al
  4042bf:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  4042c3:	movsxd esp,DWORD PTR [rbp+0x20]
  4042c6:	outs   dx,DWORD PTR ds:[rsi]
  4042c7:	jo     0x40433d
  4042c9:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  4042d0:	and    BYTE PTR [rax],ah
  4042d2:	and    BYTE PTR [rsp+rsi*1+0x20],dl
  4042d6:	and    BYTE PTR [rax],ah
  4042d8:	sub    eax,0x61727420
  4042dd:	movsxd esp,DWORD PTR [rbp+0x20]
  4042e0:	(bad)  
  4042e1:	je     0x404303
  4042e3:	ins    BYTE PTR es:[rdi],dx
  4042e4:	gs jbe 0x40434c
  4042e7:	ins    BYTE PTR es:[rdi],dx
  4042e8:	and    BYTE PTR [rsi+0x2c],ch
  4042eb:	and    BYTE PTR [rdi*1+0x2c6c6c61],dh
  4042f2:	and    BYTE PTR [rip+0x6d656d3d],dh        # 0x6da5b035
  4042f8:	(bad)  
  4042f9:	addr32 (bad) 
  4042fb:	jne    0x404370
  4042fd:	jae    0x40432b
  4042ff:	and    BYTE PTR [rip+0x65203d31],ch        # 0x65608036
  404305:	jbe    0x40436c
  404307:	outs   dx,BYTE PTR ds:[rsi]
  404308:	je     0x40437d
  40430a:	or     ah,BYTE PTR [rax]
  40430c:	and    BYTE PTR [rax],ah
  40430e:	and    BYTE PTR [rbx+riz*2+0x20],dl
  404312:	and    BYTE PTR [rax],ah
  404314:	sub    eax,0x65686320
  404319:	movsxd ebp,DWORD PTR [rbx+0x20]
  40431c:	data16 jb 0x404384
  40431f:	jno    0x404396
  404321:	outs   dx,BYTE PTR gs:[rsi]
  404323:	je     0x404391
  404325:	jns    0x404347
  404327:	fs jne 0x40439c
  40432a:	imul   ebp,DWORD PTR [rsi+0x67],0x65786520
  404331:	movsxd esi,DWORD PTR [rbp+0x74]
  404334:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020200a
  40433b:	and    BYTE PTR [rbx+rsi*2+0x20],dl
  40433f:	and    BYTE PTR [rax],ah
  404341:	sub    eax,0x69727020
  404346:	outs   dx,BYTE PTR ds:[rsi]
  404347:	je     0x404369
  404349:	jae    0x4043bf
  40434b:	(bad)  
  40434c:	je     0x4043b7
  40434e:	jae    0x4043c4
  404350:	imul   esp,DWORD PTR [rbx+0x73],0x2020200a
  404357:	and    BYTE PTR [rsi+rsi*2+0x20],dl
  40435b:	and    BYTE PTR [rax],ah
  40435d:	sub    eax,0x72657620
  404362:	imul   esp,DWORD PTR [rsi+0x79],0x73657220
  404369:	jne    0x4043d7
  40436b:	je     0x4043a7
  40436d:	and    BYTE PTR [rbx+0x74],dh
  404370:	jb     0x4043e7
  404372:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  404376:	gs sub al,0x20
  404379:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40437c:	jbe    0x4043e3
  40437e:	js     0x4043e9
  404380:	je     0x4043fb
  404382:	sub    al,0x20
  404384:	(bad)  
  404385:	outs   dx,BYTE PTR ds:[rsi]
  404386:	and    BYTE PTR fs:[rcx+0x6e],ch
  40438a:	sub    eax,0x63726963
  40438f:	ins    BYTE PTR es:[rdi],dx
  404390:	and    BYTE PTR gs:[rbp+riz*2+0x73],dh
  404395:	je     0x4043a1
  404397:	and    BYTE PTR [rax],ah
  404399:	and    BYTE PTR [rax],ah
  40439b:	push   rsp
  40439c:	jp     0x4043be
  40439e:	and    BYTE PTR [rax],ah
  4043a0:	sub    eax,0x6e657320
  4043a5:	and    BYTE PTR fs:[rcx+0x6c],ah
  4043a9:	ins    BYTE PTR es:[rdi],dx
  4043aa:	and    BYTE PTR [rdi+0x75],ch
  4043ad:	je     0x40441f
  4043af:	jne    0x404425
  4043b1:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4043b5:	jae    0x40442b
  4043b7:	outs   dx,DWORD PTR fs:[rsi]
  4043b9:	jne    0x40442f
  4043bb:	or     ah,BYTE PTR [rax]
  4043bd:	and    BYTE PTR [rax],ah
  4043bf:	and    BYTE PTR [rsi+rax*2+0x6e],dl
  4043c3:	and    BYTE PTR [rax],ah
  4043c5:	sub    eax,0x70657220
  4043ca:	outs   dx,DWORD PTR ds:[rsi]
  4043cb:	jb     0x404441
  4043cd:	and    BYTE PTR [rbx+0x75],dh
  4043d0:	ins    DWORD PTR es:[rdi],dx
  4043d1:	ins    DWORD PTR es:[rdi],dx
  4043d2:	(bad)  
  4043d3:	jb     0x40444e
  4043d5:	and    BYTE PTR [rdi+0x68],dh
  4043d8:	outs   dx,BYTE PTR gs:[rsi]
  4043da:	and    BYTE PTR [rsi+0x20],ch
  4043dd:	outs   dx,DWORD PTR ds:[rsi]
  4043de:	jb     0x404400
  4043e0:	ins    DWORD PTR es:[rdi],dx
  4043e1:	outs   dx,DWORD PTR ds:[rsi]
  4043e2:	jb     0x404449
  4043e4:	and    BYTE PTR [rsi+0x61],ah
  4043e7:	movsxd esp,DWORD PTR [rbp+0x74]
  4043ea:	jae    0x40440c
  4043ec:	movsxd esi,DWORD PTR [rdx+0x65]
  4043ef:	(bad)  
  4043f0:	je     0x404457
  4043f2:	or     ah,BYTE PTR fs:[rax]
  4043f5:	and    BYTE PTR [rax],ah
  4043f7:	and    BYTE PTR [rcx+rcx*2+0x20],dl
  4043fb:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x202d
  404402:	imul   ebp,DWORD PTR [rsi+0x70],0x64207475
  404409:	(bad)  
  40440a:	je     0x40446d
  40440c:	and    BYTE PTR [rsi+0x72],ah
  40440f:	outs   dx,DWORD PTR ds:[rsi]
  404410:	ins    DWORD PTR es:[rdi],dx
  404411:	and    BYTE PTR [rsi+0x69],ah
  404414:	ins    BYTE PTR es:[rdi],dx
  404415:	gs sub al,0x20
  404418:	outs   dx,BYTE PTR ds:[rsi]
  404419:	outs   dx,DWORD PTR ds:[rsi]
  40441a:	and    BYTE PTR [rbx+0x70],dh
  40441d:	(bad)  
  40441e:	movsxd esp,DWORD PTR [rbp+0x73]
  404421:	and    BYTE PTR [rdi+0x72],ch
  404424:	and    BYTE PTR [rbx+0x69],dh
  404427:	outs   dx,BYTE PTR ds:[rsi]
  404428:	ins    BYTE PTR es:[edi],dx
  40442a:	and    BYTE PTR gs:[rcx+0x75],dh
  40442e:	outs   dx,DWORD PTR ds:[rsi]
  40442f:	je     0x404496
  404431:	jae    0x40443d
  404433:	and    BYTE PTR [rax],ah
  404435:	and    BYTE PTR [rax],ah
  404437:	push   rsp
  404438:	rex.WRXB and BYTE PTR [r14+0x69],r12b
  40443c:	ins    BYTE PTR es:[rdi],dx
  40443d:	and    BYTE PTR gs:[rip+0x74756f20],ch        # 0x74b5b364
  404444:	jo     0x4044bb
  404446:	je     0x404468
  404448:	jb     0x4044af
  40444a:	jae    0x4044c1
  40444c:	ins    BYTE PTR es:[rdi],dx
  40444d:	je     0x4044c2
  40444f:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  404453:	imul   bp,WORD PTR [rbp+riz*2+0x2c],0x6d20
  40445a:	(bad)  
  40445b:	jns    0x40447d
  40445d:	(bad)  
  40445e:	and    BYTE PTR gs:[rbp+0x6e],ah
  404462:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  404466:	gs and BYTE PTR fs:[rcx+0x6e],ch
  40446b:	and    BYTE PTR [rbx+0x69],dh
  40446e:	outs   dx,BYTE PTR ds:[rsi]
  40446f:	ins    BYTE PTR es:[edi],dx
  404471:	and    BYTE PTR gs:[rcx+0x75],dh
  404475:	outs   dx,DWORD PTR ds:[rsi]
  404476:	je     0x4044dd
  404478:	jae    0x404484
  40447a:	and    BYTE PTR [rax],ah
  40447c:	and    BYTE PTR [rax],ah
  40447e:	push   rsp
  40447f:	push   rax
  404480:	outs   dx,BYTE PTR ds:[rsi]
  404481:	and    BYTE PTR [rax],ah
  404483:	sub    eax,0x72757420
  404488:	outs   dx,BYTE PTR ds:[rsi]
  404489:	and    BYTE PTR [rdi+0x6e],ch
  40448c:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  404490:	movsxd ebp,DWORD PTR [rcx+0x6e]
  404493:	and    BYTE PTR [edi+0x68],dh
  404497:	outs   dx,BYTE PTR gs:[rsi]
  404499:	and    BYTE PTR [rax+0x6f],dh
  40449c:	imul   ebp,DWORD PTR [rsi+0x74],0x61206e20
  4044a3:	fs fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4044ab:	push   0xa6c6c75
  4044b0:	and    BYTE PTR [rax],ah
  4044b2:	and    BYTE PTR [rax],ah
  4044b4:	and    BYTE PTR [rbp+rcx*2+0x6e],dl
  4044b8:	and    BYTE PTR [rip+0x72757420],ch        # 0x72b5b8de
  4044be:	outs   dx,BYTE PTR ds:[rsi]
  4044bf:	and    BYTE PTR [rdi+0x6e],ch
  4044c2:	and    BYTE PTR [rdx+rsi*2+0x61],dh
  4044c6:	movsxd ebp,DWORD PTR [rcx+0x6e]
  4044c9:	and    BYTE PTR [ecx+0x74],ah
  4044cd:	and    BYTE PTR [rbp+0x65],ch
  4044d0:	jb     0x404539
  4044d2:	and    BYTE PTR gs:[rsi+0xa],ch
  4044d6:	and    BYTE PTR [rax],ah
  4044d8:	and    BYTE PTR [rax],ah
  4044da:	and    BYTE PTR [rdi+rdx*2+0x6e],dl
  4044de:	and    BYTE PTR [rip+0x61727420],ch        # 0x61b2b904
  4044e4:	movsxd esp,DWORD PTR [rbp+0x20]
  4044e7:	ins    DWORD PTR es:[rdi],dx
  4044e8:	gs jb  0x404552
  4044eb:	and    BYTE PTR gs:[rsi+0x61],ah
  4044ef:	movsxd esp,DWORD PTR [rbp+0x74]
  4044f2:	jae    0x404514
  4044f4:	ja     0x40455e
  4044f6:	outs   dx,BYTE PTR gs:[rsi]
  4044f8:	and    BYTE PTR [rdi+0x69],dh
  4044fb:	fs je  0x404566
  4044fe:	and    BYTE PTR [rsi],bh
  404500:	and    BYTE PTR [rsi+0xa],ch
  404503:	and    BYTE PTR [rax],ah
  404505:	and    BYTE PTR [rax],ah
  404507:	push   rsp
  404508:	push   rsi
  404509:	outs   dx,BYTE PTR ds:[rsi]
  40450a:	and    BYTE PTR [rax],ah
  40450c:	sub    eax,0x6f747320
  404511:	jo     0x404533
  404513:	jno    0x40457d
  404515:	jne    0x404583
  404517:	ins    BYTE PTR es:[rdi],dx
  404518:	and    BYTE PTR [rcx+0x66],ah
  40451b:	je     0x404582
  40451d:	jb     0x40453f
  40451f:	(bad)  
  404520:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x696f7020
  404529:	outs   dx,BYTE PTR ds:[rsi]
  40452a:	je     0x40454c
  40452c:	outs   dx,BYTE PTR ds:[rsi]
  40452d:	sub    al,0x20
  40452f:	sub    eax,0x6f66206e
  404534:	jb     0x404556
  404536:	(bad)  
  404537:	outs   dx,WORD PTR gs:[rsi]
  40453a:	jb     0x4045a1
  40453c:	and    BYTE PTR [rax],ch
  40453e:	jae    0x4045a5
  404540:	and    BYTE PTR gs:[rbx+rax*2+0x6e],dl
  404545:	sub    DWORD PTR [rdx],ecx
  404547:	and    BYTE PTR [rax],ah
  404549:	and    BYTE PTR [rax],ah
  40454b:	and    BYTE PTR [rbx+rax*2+0x6e],dl
  40454f:	and    BYTE PTR [rip+0x6f747320],ch        # 0x6fb4b875
  404555:	jo     0x404577
  404557:	jno    0x4045c1
  404559:	jne    0x4045c7
  40455b:	ins    BYTE PTR es:[rdi],dx
  40455c:	and    BYTE PTR [rcx+0x66],ah
  40455f:	je     0x4045c6
  404561:	jb     0x404583
  404563:	(bad)  
  404564:	jne    0x4045cf
  404566:	ins    BYTE PTR es:[rdi],dx
  404567:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6e6f6320
  40456f:	and    BYTE PTR gs:[rsi+0x6f],ah
  404573:	jb     0x404595
  404575:	jo     0x4045e6
  404577:	imul   ebp,DWORD PTR [rsi+0x74],0x28206e20
  40457e:	jae    0x4045e5
  404580:	and    BYTE PTR gs:[rsi+rdx*2+0x6e],dl
  404585:	sub    DWORD PTR [rdx],ecx
  404587:	or     dl,BYTE PTR [rax+0x72]
  40458a:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  40458e:	imul   ebp,DWORD PTR [rdi+0x6e],0x74706f20
  404595:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  40459c:	and    BYTE PTR [rax],ah
  40459e:	and    BYTE PTR [rbx+0x6e],al
  4045a1:	and    BYTE PTR [rax],ah
  4045a3:	and    BYTE PTR [rip+0x64617220],ch        # 0x64a1b7c9
  4045a9:	imul   esi,DWORD PTR [rbp+0x73],0x20666f20
  4045b0:	movsxd esp,DWORD PTR [rbp+0x6e]
  4045b3:	je     0x404627
  4045b5:	jne    0x404624
  4045b7:	and    BYTE PTR [rax],ch
  4045b9:	jb     0x40462a
  4045bb:	jne    0x40462b
  4045bd:	outs   dx,DWORD PTR fs:[rsi]
  4045bf:	data16 data16 and BYTE PTR [rcx+0x64],ah
  4045c4:	fs gs sub DWORD PTR fs:[rsi],ebp
  4045c9:	and    BYTE PTR [rax],ah
  4045cb:	rex.WRB
  4045cc:	gs jb  0x404636
  4045cf:	and    BYTE PTR gs:[rsi+0x61],ah
  4045d3:	movsxd esp,DWORD PTR [rbp+0x74]
  4045d6:	jae    0x4045f8
  4045d8:	imul   esp,DWORD PTR [rsi+0x20],0x2d6e6f6e
  4045df:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4045e2:	jbe    0x404649
  4045e4:	js     0x4045f0
  4045e6:	and    BYTE PTR [rax],ah
  4045e8:	and    BYTE PTR [rax],ah
  4045ea:	and    BYTE PTR [rcx+0x6e],al
  4045ed:	and    BYTE PTR [rax],ah
  4045ef:	sub    eax,0x736f6320
  4045f4:	imul   ebp,DWORD PTR [rsi+0x65],0x20666f20
  4045fb:	ins    DWORD PTR es:[rdi],dx
  4045fc:	(bad)  
  4045fd:	js     0x404668
  4045ff:	ins    DWORD PTR es:[rdi],dx
  404600:	jne    0x40466f
  404602:	and    BYTE PTR [rcx+0x6e],ah
  404605:	ins    BYTE PTR es:[edi],dx
  404607:	gs and BYTE PTR cs:[rax],ah
  40460b:	rex.WRB
  40460c:	gs jb  0x404676
  40460f:	and    BYTE PTR gs:[rsi+0x61],ah
  404613:	movsxd esp,DWORD PTR [rbp+0x74]
  404616:	jae    0x404638
  404618:	imul   esp,DWORD PTR [rsi+0x20],0x69736f63
  40461f:	outs   dx,BYTE PTR ds:[rsi]
  404620:	and    BYTE PTR gs:[rsi],bh
  404623:	and    BYTE PTR [rsi+0x20],ch
  404626:	outs   dx,DWORD PTR ds:[rsi]
  404627:	jb     0x404649
  404629:	outs   dx,BYTE PTR ds:[rsi]
  40462a:	outs   dx,DWORD PTR ds:[rsi]
  40462b:	outs   dx,BYTE PTR ds:[rsi]
  40462c:	sub    eax,0x766e6f63
  404631:	gs js  0x40463e
  404634:	and    BYTE PTR [rax],ah
  404636:	and    BYTE PTR [rax],ah
  404638:	and    BYTE PTR [rax],ah
  40463a:	and    BYTE PTR [rax],ah
  40463c:	and    BYTE PTR [rax],ah
  40463e:	and    BYTE PTR [rbx+0x2d],al
  404641:	xor    BYTE PTR [rax],ah
  404643:	jb     0x4046b4
  404645:	jne    0x4046b5
  404647:	outs   dx,DWORD PTR fs:[rsi]
  404649:	data16 data16 sub al,0x20
  40464d:	rex.B sub eax,0x39392e30
  404653:	(bad)  
  404654:	rex.XB sub eax,0x31302e30
  40465a:	and    BYTE PTR [rax+0x72],dh
  40465d:	gs sub eax,0x6772656d
  404663:	gs sub al,0x20
  404666:	xor    BYTE PTR [r14],bpl
  404669:	cmp    DWORD PTR [rcx],edi
  40466b:	(bad)  
  40466c:	rex.XB xor BYTE PTR [r14],bpl
  40466f:	xor    BYTE PTR [rcx],dh
  404671:	and    BYTE PTR [rax+0x6f],dh
  404674:	jae    0x4046ea
  404676:	sub    eax,0x6772656d
  40467b:	or     ah,BYTE PTR gs:[rax]
  40467e:	and    BYTE PTR [rax],ah
  404680:	and    BYTE PTR [rdx+0x6e],dl
  404683:	and    BYTE PTR [rax],ah
  404685:	and    BYTE PTR [rip+0x6e617220],ch        # 0x6ea1b8ab
  40468b:	outs   dx,DWORD PTR fs:[rsi]
  40468d:	ins    DWORD PTR es:[rdi],dx
  40468e:	ins    BYTE PTR es:[rdi],dx
  40468f:	jns    0x4046b1
  404691:	jo     0x4046f8
  404693:	jb     0x404709
  404695:	jne    0x404709
  404697:	(bad)  
  404698:	and    BYTE PTR [rbx+0x6f],ah
  40469b:	ins    DWORD PTR es:[rdi],dx
  40469c:	jo     0x404713
  40469e:	je     0x404701
  4046a0:	je     0x40470b
  4046a2:	outs   dx,DWORD PTR ds:[rsi]
  4046a3:	outs   dx,BYTE PTR ds:[rsi]
  4046a4:	jae    0x4046c6
  4046a6:	(bad)  
  4046a7:	jns    0x4046c9
  4046a9:	(bad)  
  4046aa:	and    BYTE PTR [rsi+0x61],ah
  4046ad:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  4046b1:	and    BYTE PTR [rdi+0x66],ch
  4046b4:	and    BYTE PTR [rbx+0x31],bl
  4046b7:	sub    eax,0x2b312c6e
  4046bc:	outs   dx,BYTE PTR ds:[rsi]
  4046bd:	pop    rbp
  4046be:	or     ah,BYTE PTR [rax]
  4046c0:	and    BYTE PTR [rax],ah
  4046c2:	and    BYTE PTR [rdi+0x6e],dl
  4046c5:	and    BYTE PTR [rax],ah
  4046c7:	and    BYTE PTR [rip+0x6e696d20],ch        # 0x6ea9b3ed
  4046cd:	and    BYTE PTR [rsi+0x61],ah
  4046d0:	movsxd esp,DWORD PTR [rbp+0x74]
  4046d3:	and    BYTE PTR [rdi+0x69],dh
  4046d6:	fs je  0x404741
  4046d9:	and    BYTE PTR [rsi+0x6f],ah
  4046dc:	jb     0x4046fe
  4046de:	outs   dx,DWORD PTR ds:[rsi]
  4046df:	jne    0x404755
  4046e1:	jae    0x40474c
  4046e3:	fs and BYTE PTR gs:[rax+0x6f],dh
  4046e8:	imul   ebp,DWORD PTR [rsi+0x74],0x65622820
  4046ef:	outs   dx,WORD PTR ds:[rsi]
  4046f1:	jb     0x404758
  4046f3:	and    BYTE PTR [rdx+0x6f],dh
  4046f6:	jne    0x404766
  4046f8:	outs   dx,DWORD PTR fs:[rsi]
  4046fa:	data16 sub WORD PTR [rdx],cx
  4046fe:	or     cl,BYTE PTR [rdi+0x75]
  404701:	je     0x404773
  404703:	jne    0x404779
  404705:	and    BYTE PTR [rsi+0x6f],ah
  404708:	jb     0x404777
  40470a:	(bad)  
  40470b:	je     0x404780
  40470d:	and    BYTE PTR [rax],ch
  40470f:	ins    DWORD PTR es:[rdi],dx
  404710:	(bad)  
  404711:	jns    0x404733
  404713:	(bad)  
  404714:	and    BYTE PTR gs:[rbx+0x6f],ah
  404718:	ins    DWORD PTR es:[rdi],dx
  404719:	(bad)  
  40471a:	imul   ebp,DWORD PTR [rsi+0x65],0x69203b64
  404721:	data16 and BYTE PTR [rsi+0x6f],ch
  404725:	outs   dx,BYTE PTR ds:[rsi]
  404726:	gs sub al,0x20
  404729:	jo     0x40479d
  40472b:	outs   dx,DWORD PTR ds:[rsi]
  40472c:	fs jne 0x404792
  40472f:	gs jae 0x404752
  404732:	(bad)  
  404733:	and    BYTE PTR [rbx+0x75],dh
  404736:	ins    DWORD PTR es:[rdi],dx
  404737:	ins    DWORD PTR es:[rdi],dx
  404738:	(bad)  
  404739:	jb     0x4047b4
  40473b:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40473f:	jae    0x4047b5
  404741:	outs   dx,DWORD PTR fs:[rsi]
  404743:	jne    0x4047b9
  404745:	sub    DWORD PTR [rdx],edi
  404747:	or     ah,BYTE PTR [rax]
  404749:	and    BYTE PTR [rax],ah
  40474b:	and    BYTE PTR [rsi+0x20],ah
  40474e:	and    BYTE PTR [rax],ah
  404750:	and    BYTE PTR [rip+0x63616620],ch        # 0x63a1ad76
  404756:	gs je  0x404779
  404759:	fs jne 0x4047c9
  40475c:	jo     0x404768
  40475e:	and    BYTE PTR [rax],ah
  404760:	and    BYTE PTR [rax],ah
  404762:	rex.RXB and BYTE PTR [r8],r12b
  404765:	and    BYTE PTR [rax],ah
  404767:	sub    eax,0x6f654720
  40476c:	ins    DWORD PTR es:[rdi],dx
  40476d:	jbe    0x4047d8
  40476f:	gs ja  0x404792
  404772:	outs   dx,DWORD PTR ds:[rsi]
  404773:	jne    0x4047e9
  404775:	jo     0x4047ec
  404777:	je     0x404799
  404779:	sub    BYTE PTR [rbx+0x65],dh
  40477c:	and    BYTE PTR gs:[rdx+0x65],ah
  404780:	ins    BYTE PTR es:[rdi],dx
  404781:	outs   dx,DWORD PTR ds:[rsi]
  404782:	ja     0x4047ad
  404784:	or     ah,BYTE PTR [rax]
  404786:	and    BYTE PTR [rax],ah
  404788:	and    BYTE PTR [rcx+0x20],ch
  40478b:	and    BYTE PTR [rax],ah
  40478d:	and    BYTE PTR [rip+0x72657620],ch        # 0x72a5bdb3
  404793:	je     0x4047fe
  404795:	movsxd esp,DWORD PTR [rbp+0x73]
  404798:	and    BYTE PTR [rcx+0x6e],ch
  40479b:	movsxd ebp,DWORD PTR [rcx+0x64]
  40479e:	outs   dx,BYTE PTR gs:[rsi]
  4047a0:	je     0x4047c2
  4047a2:	je     0x404813
  4047a4:	and    BYTE PTR [rbp+0x61],ah
  4047a7:	movsxd ebp,DWORD PTR [rax+0x20]
  4047aa:	rex.R
  4047ab:	gs ins BYTE PTR es:[rdi],dx
  4047ad:	(bad)  
  4047ae:	jne    0x40481e
  4047b0:	(bad)  
  4047b1:	jns    0x4047d3
  4047b3:	jb     0x40481a
  4047b5:	imul   ebp,DWORD PTR [edi+0x6e],0x2020200a
  4047bd:	and    BYTE PTR [rbp+0x20],ch
  4047c0:	and    BYTE PTR [rax],ah
  4047c2:	and    BYTE PTR [rip+0x74614d20],ch        # 0x74a194e8
  4047c8:	push   0x74616d65
  4047cd:	imul   esp,DWORD PTR [rbx+0x61],0x74756f20
  4047d4:	jo     0x40484b
  4047d6:	je     0x4047f8
  4047d8:	sub    BYTE PTR [rdx],dh
  4047da:	sub    eax,0x6e6f2064
  4047df:	ins    BYTE PTR es:[rdi],dx
  4047e0:	jns    0x40480e
  4047e2:	and    BYTE PTR [rcx+rbp*2+0x66],ch
  4047e6:	je     0x40484d
  4047e8:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  4047ed:	(bad)  
  4047ee:	and    BYTE PTR [rax+0x61],dh
  4047f1:	jb     0x404854
  4047f3:	(bad)  
  4047f4:	outs   dx,DWORD PTR ds:[rsi]
  4047f5:	ins    BYTE PTR es:[rdi],dx
  4047f6:	outs   dx,DWORD PTR ds:[rsi]
  4047f7:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20202020
  4047ff:	outs   dx,DWORD PTR ds:[rsi]
  404800:	and    BYTE PTR [rax],ah
  404802:	and    BYTE PTR [rax],ah
  404804:	sub    eax,0x46464f20
  404809:	and    BYTE PTR [rsi+0x6f],ah
  40480c:	jb     0x40487b
  40480e:	(bad)  
  40480f:	je     0x404831
  404811:	sub    BYTE PTR [rcx+rbp*2+0x6d],ah
  404815:	sub    al,0x20
  404817:	jo     0x404888
  404819:	imul   ebp,DWORD PTR [rsi+0x74],0x61202c73
  404820:	outs   dx,BYTE PTR ds:[rsi]
  404821:	and    BYTE PTR fs:[rsi+0x61],ah
  404825:	movsxd esp,DWORD PTR [rbp+0x74]
  404828:	jae    0x40484a
  40482a:	(bad)  
  40482b:	jae    0x40484d
  40482d:	(bad)  
  40482e:	and    BYTE PTR [rax+0x61],dh
  404831:	jb     0x404894
  404833:	(bad)  
  404834:	outs   dx,DWORD PTR ds:[rsi]
  404835:	ins    BYTE PTR es:[rdi],dx
  404836:	outs   dx,DWORD PTR ds:[rsi]
  404837:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20202020
  40483f:	jo     0x404861
  404841:	and    BYTE PTR [rax],ah
  404843:	and    BYTE PTR [rip+0x696f7020],ch        # 0x69afb869
  404849:	outs   dx,BYTE PTR ds:[rsi]
  40484a:	je     0x40486c
  40484c:	movsxd ebp,DWORD PTR [rdi+0x6f]
  40484f:	jb     0x4048b5
  404851:	imul   ebp,DWORD PTR [rsi+0x61],0x20736574
  404858:	sub    BYTE PTR [rcx+rbp*2+0x66],ch
  40485c:	je     0x4048c3
  40485e:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  404863:	(bad)  
  404864:	and    BYTE PTR [rax+0x61],dh
  404867:	jb     0x4048ca
  404869:	(bad)  
  40486a:	outs   dx,DWORD PTR ds:[rsi]
  40486b:	ins    BYTE PTR es:[rdi],dx
  40486c:	outs   dx,DWORD PTR ds:[rsi]
  40486d:	imul   esp,DWORD PTR [rcx+rbp*1+0xa],0x20202020
  404875:	jae    0x404897
  404877:	and    BYTE PTR [rax],ah
  404879:	and    BYTE PTR [rip+0x6d757320],ch        # 0x6db5bb9f
  40487f:	ins    DWORD PTR es:[rdi],dx
  404880:	(bad)  
  404881:	jb     0x4048fc
  404883:	and    BYTE PTR [rax],ch
  404885:	jae    0x4048fb
  404887:	fs gs jb 0x4048fd
  40488b:	sub    DWORD PTR [rdx],ecx
  40488d:	or     al,BYTE PTR [rax]
	...
  4048bf:	add    BYTE PTR [rax],ah
  4048c1:	and    BYTE PTR [rax],ah
  4048c3:	and    BYTE PTR [rcx+0x73],dl
  4048c6:	and    BYTE PTR [rax],ah
  4048c8:	and    BYTE PTR [rip+0x61657320],ch        # 0x61a5bbee
  4048ce:	jb     0x404933
  4048d0:	push   0x6c6c6120
  4048d5:	and    BYTE PTR [rax+0x6f],dh
  4048d8:	imul   ebp,DWORD PTR [rsi+0x74],0x6f662073
  4048df:	jb     0x404901
  4048e1:	je     0x40494b
  4048e3:	and    BYTE PTR gs:[rcx+0x6e],ch
  4048e7:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x6973206c
  4048ef:	ins    DWORD PTR es:[rdi],dx
  4048f0:	jo     0x40495e
  4048f2:	gs js  0x4048ff
  4048f5:	and    BYTE PTR [rax],ah
  4048f7:	and    BYTE PTR [rax],ah
  4048f9:	push   rcx
  4048fa:	jp     0x40491c
  4048fc:	and    BYTE PTR [rax],ah
  4048fe:	sub    eax,0x64646120
  404903:	and    BYTE PTR [rax+0x6f],dh
  404906:	imul   ebp,DWORD PTR [rsi+0x74],0x2d74612d
  40490d:	imul   ebp,DWORD PTR [rsi+0x66],0x74696e69
  404914:	jns    0x404936
  404916:	je     0x404987
  404918:	and    BYTE PTR [rbp+riz*2+0x6c],al
  40491c:	(bad)  
  40491d:	jne    0x40498d
  40491f:	(bad)  
  404920:	jns    0x404942
  404922:	je     0x404996
  404924:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  40492b:	je     0x404996
  40492d:	outs   dx,DWORD PTR ds:[rsi]
  40492e:	outs   dx,BYTE PTR ds:[rsi]
  40492f:	or     ah,BYTE PTR [rax]
  404931:	and    BYTE PTR [rax],ah
  404933:	and    BYTE PTR [rcx+0x47],dl
  404936:	outs   dx,BYTE PTR ds:[rsi]
  404937:	and    BYTE PTR [rax],ah
  404939:	sub    eax,0x69727020
  40493e:	outs   dx,BYTE PTR ds:[rsi]
  40493f:	je     0x404961
  404941:	rex.R
  404942:	gs ins BYTE PTR es:[rdi],dx
  404944:	(bad)  
  404945:	jne    0x4049b5
  404947:	(bad)  
  404948:	jns    0x40496a
  40494a:	jb     0x4049b1
  40494c:	imul   ebp,DWORD PTR [edi+0x6e],0x20666920
  404954:	jbe    0x4049bf
  404956:	jae    0x4049c1
  404958:	(bad)  
  404959:	ins    BYTE PTR es:[rdi],dx
  40495a:	and    BYTE PTR gs:[rsi+0x72],ah
  40495e:	outs   dx,DWORD PTR ds:[rsi]
  40495f:	ins    DWORD PTR es:[rdi],dx
  404960:	and    BYTE PTR [rax+0x6f],dh
  404963:	imul   ebp,DWORD PTR [rsi+0x74],0x202c6e20
  40496a:	sub    eax,0x6669206e
  40496f:	and    BYTE PTR [rsi+0x6f],ch
  404972:	je     0x40497e
  404974:	and    BYTE PTR [rax],ah
  404976:	and    BYTE PTR [rax],ah
  404978:	push   rcx
  404979:	push   rsi
  40497a:	outs   dx,BYTE PTR ds:[rsi]
  40497b:	and    BYTE PTR [rax],ah
  40497d:	sub    eax,0x69727020
  404982:	outs   dx,BYTE PTR ds:[rsi]
  404983:	je     0x4049a5
  404985:	rex.R
  404986:	gs ins BYTE PTR es:[rdi],dx
  404988:	(bad)  
  404989:	jne    0x4049f9
  40498b:	(bad)  
  40498c:	jns    0x4049ae
  40498e:	jb     0x4049f5
  404990:	imul   ebp,DWORD PTR [edi+0x6e],0x68742073
  404998:	(bad)  
  404999:	je     0x4049bb
  40499b:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4049a2:	and    BYTE PTR [rax+0x6f],dh
  4049a5:	imul   ebp,DWORD PTR [rsi+0x74],0x202c6e20
  4049ac:	sub    eax,0x6669206e
  4049b1:	and    BYTE PTR [rsi+0x6f],ch
  4049b4:	je     0x4049c0
  4049b6:	or     al,BYTE PTR [rax]
	...
  4049c0:	or     dh,BYTE PTR [rcx+0x64]
  4049c3:	gs ins BYTE PTR es:[rdi],dx
  4049c5:	(bad)  
  4049c6:	jne    0x404a36
  4049c8:	(bad)  
  4049c9:	jns    0x4049f8
  4049cb:	and    BYTE PTR [rbx+0x6f],ah
  4049ce:	ins    DWORD PTR es:[rdi],dx
  4049cf:	jo     0x404a46
  4049d1:	je     0x404a38
  4049d3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4049d7:	and    BYTE PTR [rbp+riz*2+0x6c],al
  4049db:	(bad)  
  4049dc:	jne    0x404a4c
  4049de:	(bad)  
  4049df:	jns    0x404a01
  4049e1:	je     0x404a55
  4049e3:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  4049ea:	je     0x404a55
  4049ec:	outs   dx,DWORD PTR ds:[rsi]
  4049ed:	outs   dx,BYTE PTR ds:[rsi]
  4049ee:	or     ah,BYTE PTR [rax]
  4049f0:	and    BYTE PTR [rax],ah
  4049f2:	and    BYTE PTR [rax+0x74],ch
  4049f5:	je     0x404a67
  4049f7:	cmp    ch,BYTE PTR [rdi]
  4049f9:	(bad)  
  4049fa:	ja     0x404a73
  4049fc:	ja     0x404a2c
  4049fe:	jno    0x404a68
  404a00:	jne    0x404a6e
  404a02:	ins    BYTE PTR es:[rdi],dx
  404a03:	outs   dx,DWORD PTR cs:[rsi]
  404a05:	jb     0x404a6e
  404a07:	and    BYTE PTR [rax],ah
  404a09:	and    eax,0x690a0a73
  404a0e:	outs   dx,BYTE PTR ds:[rsi]
  404a0f:	jo     0x404a86
  404a11:	je     0x404a33
  404a13:	sub    BYTE PTR [rbx+0x74],dh
  404a16:	imul   ebp,DWORD PTR fs:[rsi+0x29],0x20200a3a
  404a1e:	and    BYTE PTR [rax],ah
  404a20:	imul   si,WORD PTR [rdx+0x73],0x2074
  404a26:	ins    BYTE PTR es:[rdi],dx
  404a27:	imul   ebp,DWORD PTR [rsi+0x65],0x64203a73
  404a2e:	imul   ebp,DWORD PTR [rbp+0x65],0x6f69736e
  404a35:	outs   dx,BYTE PTR ds:[rsi]
  404a36:	and    BYTE PTR [rcx+0x6e],ah
  404a39:	and    BYTE PTR fs:[rsi+0x75],ch
  404a3d:	ins    DWORD PTR es:[rdi],dx
  404a3e:	(bad)  
  404a3f:	gs jb  0x404a62
  404a42:	outs   dx,DWORD PTR ds:[rsi]
  404a43:	data16 and BYTE PTR [rax+0x6f],dh
  404a47:	imul   ebp,DWORD PTR [rsi+0x74],0x6f282073
  404a4e:	jb     0x404a70
  404a50:	jbe    0x404abb
  404a52:	movsxd esp,DWORD PTR [rbp+0x2d]
  404a55:	jbe    0x404abc
  404a57:	jb     0x404acc
  404a59:	(bad)  
  404a5a:	sub    DWORD PTR [rsi],ebp
  404a5c:	or     ah,BYTE PTR [rax]
  404a5e:	and    BYTE PTR [rax],ah
  404a60:	and    BYTE PTR [rdi+0x74],ch
  404a63:	push   0x6c207265
  404a68:	imul   ebp,DWORD PTR [rsi+0x65],0x70203a73
  404a6f:	outs   dx,DWORD PTR ds:[rsi]
  404a70:	imul   ebp,DWORD PTR [rsi+0x74],0x6f6f6320
  404a77:	jb     0x404add
  404a79:	imul   ebp,DWORD PTR [rsi+0x61],0x2c736574
  404a80:	and    BYTE PTR [rdx+0x65],ah
  404a83:	jae    0x404af9
  404a85:	and    BYTE PTR [rcx+0x66],ch
  404a88:	and    BYTE PTR [rdi+0x6e],ch
  404a8b:	and    BYTE PTR gs:[rax+0x6f],dh
  404a8f:	imul   ebp,DWORD PTR [rsi+0x74],0x72657020
  404a96:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  404a9a:	or     ah,BYTE PTR gs:[rax]
  404a9d:	and    BYTE PTR [rax],ah
  404a9f:	and    BYTE PTR [rbx+0x6f],ah
  404aa2:	ins    DWORD PTR es:[rdi],dx
  404aa3:	ins    DWORD PTR es:[rdi],dx
  404aa4:	outs   dx,BYTE PTR gs:[rsi]
  404aa6:	je     0x404b1b
  404aa8:	cmp    ah,BYTE PTR [rax]
  404aaa:	and    BYTE PTR [rax],ah
  404aac:	and    BYTE PTR [rbx+0x74],dh
  404aaf:	(bad)  
  404ab0:	jb     0x404b26
  404ab2:	and    BYTE PTR [rdi+0x69],dh
  404ab5:	je     0x404b1f
  404ab7:	and    BYTE PTR [rcx+0x20],ah
  404aba:	outs   dx,BYTE PTR ds:[rsi]
  404abb:	outs   dx,DWORD PTR ds:[rsi]
  404abc:	outs   dx,BYTE PTR ds:[rsi]
  404abd:	sub    eax,0x656d756e
  404ac2:	jb     0x404b2d
  404ac4:	movsxd esp,DWORD PTR [rax]
  404ac6:	movsxd ebp,DWORD PTR [rax+0x61]
  404ac9:	jb     0x404b2c
  404acb:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  404acf:	or     cl,BYTE PTR [rdx]
  404ad1:	outs   dx,DWORD PTR ds:[rsi]
  404ad2:	jo     0x404b48
  404ad4:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  404adb:	and    BYTE PTR [rax],ah
  404add:	and    BYTE PTR [rcx+0x75],dl
  404ae0:	and    BYTE PTR [rax],ah
  404ae2:	and    BYTE PTR [rip+0x6d6f6320],ch        # 0x6dafae08
  404ae8:	jo     0x404b5f
  404aea:	je     0x404b51
  404aec:	and    BYTE PTR [rsi+0x75],ah
  404aef:	jb     0x404b65
  404af1:	push   0x2d747365
  404af6:	jae    0x404b61
  404af8:	je     0x404b5f
  404afa:	and    BYTE PTR [rbp+riz*2+0x6c],al
  404afe:	(bad)  
  404aff:	jne    0x404b6f
  404b01:	(bad)  
  404b02:	jns    0x404b24
  404b04:	je     0x404b78
  404b06:	imul   esp,DWORD PTR [rcx+0x6e],0x616c7567
  404b0d:	je     0x404b78
  404b0f:	outs   dx,DWORD PTR ds:[rsi]
  404b10:	outs   dx,BYTE PTR ds:[rsi]
  404b11:	or     ah,BYTE PTR [rax]
  404b13:	and    BYTE PTR [rax],ah
  404b15:	and    BYTE PTR [rcx+0x74],dl
  404b18:	and    BYTE PTR [rax],ah
  404b1a:	and    BYTE PTR [rip+0x69727420],ch        # 0x69b2bf40
  404b20:	(bad)  
  404b21:	outs   dx,BYTE PTR ds:[rsi]
  404b22:	addr32 jne 0x404b91
  404b25:	(bad)  
  404b26:	je     0x404b8d
  404b28:	and    BYTE PTR fs:[rdi+0x75],ch
  404b2c:	je     0x404b9e
  404b2e:	jne    0x404ba4
  404b30:	or     ah,BYTE PTR [rax]
  404b32:	and    BYTE PTR [rax],ah
  404b34:	and    BYTE PTR [rcx+0x4a],dl
  404b37:	and    BYTE PTR [rax],ah
  404b39:	and    BYTE PTR [rip+0x676f6a20],ch        # 0x67afb55f
  404b3f:	ins    BYTE PTR es:[edi],dx
  404b41:	gs and BYTE PTR fs:[rcx+0x6e],ch
  404b46:	jo     0x404bbd
  404b48:	je     0x404b6a
  404b4a:	imul   ebp,DWORD PTR [rsi+0x73],0x64616574
  404b51:	and    BYTE PTR [rdi+0x66],ch
  404b54:	and    BYTE PTR [rbp+0x65],ch
  404b57:	jb     0x404bc0
  404b59:	gs and BYTE PTR fs:[rsi+0x61],ah
  404b5e:	movsxd esp,DWORD PTR [rbp+0x74]
  404b61:	jae    0x404b6d
  404b63:	or     dl,BYTE PTR [rcx+0x68]
  404b66:	jne    0x404bd4
  404b68:	ins    BYTE PTR es:[rdi],dx
  404b69:	and    BYTE PTR [rbx+0x6f],ah
  404b6c:	outs   dx,BYTE PTR ds:[rsi]
  404b6d:	je     0x404be1
  404b6f:	outs   dx,DWORD PTR ds:[rsi]
  404b70:	ins    BYTE PTR es:[rdi],dx
  404b71:	and    BYTE PTR [rdi+0x70],ch
  404b74:	je     0x404bdf
  404b76:	outs   dx,DWORD PTR ds:[rsi]
  404b77:	outs   dx,BYTE PTR ds:[rsi]
  404b78:	jae    0x404bb4
  404b7a:	or     ah,BYTE PTR [rax]
  404b7c:	and    BYTE PTR [rax],ah
  404b7e:	and    BYTE PTR [rcx+0x4a],dl
  404b81:	outs   dx,BYTE PTR ds:[rsi]
  404b82:	and    BYTE PTR [rax],ah
  404b84:	sub    eax,0x6e617220
  404b89:	outs   dx,DWORD PTR fs:[rsi]
  404b8b:	ins    DWORD PTR es:[rdi],dx
  404b8c:	ins    BYTE PTR es:[rdi],dx
  404b8d:	jns    0x404baf
  404b8f:	push   0x6f
  404b91:	addr32 ins BYTE PTR es:[edi],dx
  404b94:	and    BYTE PTR gs:[rcx+0x6e],ch
  404b98:	jo     0x404c0f
  404b9a:	je     0x404bbc
  404b9c:	imul   ebp,DWORD PTR [rsi+0x20],0x676e6172
  404ba3:	and    BYTE PTR gs:[rbx+0x2d],bl
  404ba7:	outs   dx,BYTE PTR ds:[rsi]
  404ba8:	sub    al,0x6e
  404baa:	pop    rbp
  404bab:	or     ah,BYTE PTR [rip+0x25732573]        # 0x25b37124
  404bb1:	jae    0x404bd8
  404bb3:	jae    0x404bb5
	...
  404bbd:	add    BYTE PTR [rax],al
  404bbf:	add    BYTE PTR [rax],ah
  404bc1:	and    BYTE PTR fs:[rsi+0x20],ch
  404bc5:	jbe    0x404be7
  404bc7:	rex.W and BYTE PTR [rbp+0x20],dl
  404bcb:	push   rcx
  404bcc:	(bad)  
  404bcd:	and    BYTE PTR [rcx+0x42],dl
  404bd0:	and    BYTE PTR [rcx+0x63],dl
  404bd3:	and    BYTE PTR [rcx+0x66],dl
  404bd6:	and    BYTE PTR [rcx+0x67],dl
  404bd9:	and    BYTE PTR [rcx+0x69],dl
  404bdc:	and    BYTE PTR [rcx+0x6d],dl
  404bdf:	and    BYTE PTR [rcx+0x72],dl
  404be2:	and    BYTE PTR [rcx+0x52],dl
  404be5:	and    BYTE PTR [rcx+0x76],dl
  404be8:	and    BYTE PTR [rcx+0x78],dl
  404beb:	and    BYTE PTR [rdx+rdx*2+0x20],dl
  404bef:	and    BYTE PTR [r14+0x20],r10b
  404bf3:	rex.RX
  404bf4:	rex.XB and BYTE PTR [r14+0x69],al
  404bf8:	and    BYTE PTR [rsi+0x6f],al
  404bfb:	and    BYTE PTR [rsi+0x74],al
  404bfe:	and    BYTE PTR [rsi+0x70],al
  404c01:	and    BYTE PTR [rsi+0x56],al
  404c04:	and    BYTE PTR [rcx+0x30],dl
  404c07:	and    BYTE PTR [rcx+0x31],dl
  404c0a:	and    BYTE PTR [rcx+0x32],dl
  404c0d:	and    BYTE PTR [rcx+0x33],dl
  404c10:	and    BYTE PTR [rcx+0x34],dl
  404c13:	and    BYTE PTR [rcx+0x35],dl
  404c16:	and    BYTE PTR [rcx+0x36],dl
  404c19:	and    BYTE PTR [rcx+0x37],dl
  404c1c:	and    BYTE PTR [rcx+0x38],dl
  404c1f:	and    BYTE PTR [rcx+0x39],dl
  404c22:	and    BYTE PTR [rax],al
	...
  404c40:	mov    BYTE PTR [rdi],ch
  404c42:	add    BYTE PTR [rax],al
	...
  404c4d:	add    BYTE PTR [rax],al
  404c4f:	add    bh,bh
  404c51:	(bad)  
  404c52:	(bad)  
  404c53:	(bad)  
  404c54:	(bad)  
  404c55:	(bad)  
  404c56:	(bad)  
  404c57:	inc    DWORD PTR [rax]
  404c59:	add    BYTE PTR [rax],al
  404c5b:	add    BYTE PTR [rax],al
  404c5d:	add    BYTE PTR [rax],al
  404c5f:	add    bh,bh
	...
  404c6d:	add    BYTE PTR [rax],al
  404c6f:	add    BYTE PTR [rdx],al
	...
  404c7d:	add    BYTE PTR [rax],al
  404c7f:	add    bh,bh
  404c81:	(bad)  
  404c82:	(bad)  
  404c83:	inc    DWORD PTR [rax]
	...
  404c8d:	add    BYTE PTR [rax],al
  404c8f:	add    al,dl
  404c91:	sub    eax,DWORD PTR [rax+0x0]
  404c94:	add    BYTE PTR [rax],al
  404c96:	add    BYTE PTR [rax],al
  404c98:	loopne 0x404cc5
  404c9a:	add    BYTE PTR [rax],al
  404c9d:	add    BYTE PTR [rax],al
  404c9f:	add    BYTE PTR [rdx],dh
  404ca1:	movabs ds:0x2b992ddf,al
  404caa:	add    BYTE PTR [rax],al
  404cac:	add    BYTE PTR [rax],al
  404cae:	add    BYTE PTR [rax],al
  404cb0:	int    0x5d
  404cb2:	and    dl,dl
  404cb4:	data16 (bad) 
  404cb6:	(bad)  
  404cb7:	inc    DWORD PTR [rax]
  404cb9:	add    BYTE PTR [rax],al
  404cbb:	add    BYTE PTR [rax],al
  404cbd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	fs gs ins BYTE PTR es:[rdi],dx
  405003:	(bad)  
  405004:	jne    0x405074
  405006:	(bad)  
  405007:	jns    0x405029
  405009:	and    BYTE PTR [rcx+0x62],dl
  40500c:	(bad)  
  40500d:	outs   dx,DWORD PTR ds:[rsi]
  40500e:	jne    0x40507e
  405010:	fs sub eax,0x7473616c
  405016:	add    BYTE PTR [rcx+0x78],dl
  405019:	(bad)  
  40501a:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6d]
  40501e:	gs jb  0x405088
  405021:	add    BYTE PTR gs:[rax],al
  405024:	add    BYTE PTR [rax],al
  405026:	add    BYTE PTR [rax],al
  405028:	jno    0x405092
  40502a:	jne    0x405098
  40502c:	ins    BYTE PTR es:[rdi],dx
  40502d:	and    BYTE PTR [rcx+0x6e],ch
  405030:	je     0x405097
  405032:	jb     0x4050a2
  405034:	(bad)  
  405035:	ins    BYTE PTR es:[rdi],dx
  405036:	and    BYTE PTR [rdi+0x61],dh
  405039:	jb     0x4050a9
  40503b:	imul   ebp,DWORD PTR [rsi+0x67],0x616d2820
  405042:	imul   ebp,DWORD PTR [rsi+0x29],0x6964203a
  405049:	and    BYTE PTR fs:[rsi+0x6f],ch
  40504d:	je     0x40506f
  40504f:	data16 jb 0x4050b7
  405052:	and    BYTE PTR gs:[rip+0x79622064],ah        # 0x79a270bd
  405059:	je     0x4050c0
  40505b:	jae    0x40507d
  40505d:	outs   dx,DWORD PTR ds:[rsi]
  40505e:	data16 and BYTE PTR [rdi+rbp*2+0x6e],ch
  405063:	and    BYTE PTR [ebp+0x65],ch
  405067:	ins    DWORD PTR es:[rdi],dx
  405068:	outs   dx,DWORD PTR ds:[rsi]
  405069:	jb     0x4050e4
  40506b:	and    BYTE PTR [rax],ch
  40506d:	and    eax,0x69702064
  405072:	movsxd esp,DWORD PTR gs:[rbp+0x73]
  405076:	sub    DWORD PTR [rdx],ecx
	...
  405080:	add    BYTE PTR [rbp+0x40],0x0
  405087:	add    BYTE PTR [rax+0x4080],al
  40508d:	add    BYTE PTR [rax],al
  40508f:	add    BYTE PTR [rax+0x19],dl
  405092:	add    BYTE PTR [rax],al
	...
  40509d:	add    BYTE PTR [rax],al
  40509f:	add    BYTE PTR [rcx+0x72],al
  4050a2:	addr32 jne 0x405112
  4050a5:	outs   dx,BYTE PTR gs:[rsi]
  4050a7:	je     0x4050c9
  4050a9:	outs   dx,DWORD PTR fs:[rsi]
  4050ab:	ins    DWORD PTR es:[rdi],dx
  4050ac:	(bad)  
  4050ad:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4050b4:	jb     0x4050d6
  4050b6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4050ba:	rex.B
  4050bb:	rex.WB
  4050bc:	rex.WRX sub QWORD PTR [rax],r8
  4050bf:	rex.B jb 0x405129
  4050c2:	jne    0x405131
  4050c4:	outs   dx,BYTE PTR gs:[rsi]
  4050c6:	je     0x4050e8
  4050c8:	jae    0x405133
  4050ca:	outs   dx,BYTE PTR ds:[rsi]
  4050cb:	addr32 jne 0x40513a
  4050ce:	(bad)  
  4050cf:	jb     0x40513a
  4050d1:	je     0x40514c
  4050d3:	and    BYTE PTR [rax],ch
  4050d5:	push   rbx
  4050d6:	rex.WB
  4050d7:	rex.RXB
  4050d8:	rex.WRX sub QWORD PTR [rax],r8
  4050db:	add    BYTE PTR [rax],al
  4050dd:	add    BYTE PTR [rax],al
  4050df:	add    BYTE PTR [rdi+0x76],cl
  4050e2:	gs jb  0x40514b
  4050e5:	ins    BYTE PTR es:[rdi],dx
  4050e6:	outs   dx,DWORD PTR ds:[rsi]
  4050e7:	ja     0x405109
  4050e9:	jb     0x40514c
  4050eb:	outs   dx,BYTE PTR ds:[rsi]
  4050ec:	and    BYTE PTR gs:[ebp+0x72],ah
  4050f1:	jb     0x405162
  4050f3:	jb     0x405115
  4050f5:	sub    BYTE PTR [rdi+0x56],cl
  4050f8:	rex.RB push r10
  4050fa:	rex.RX
  4050fb:	rex.WR
  4050fc:	rex.WRXB push r15
  4050fe:	sub    DWORD PTR [rax],eax
  405100:	push   rax
  405101:	(bad)  
  405102:	jb     0x405178
  405104:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40510b:	jae    0x40512d
  40510d:	outs   dx,DWORD PTR ds:[rsi]
  40510e:	data16 and BYTE PTR [rbx+0x69],dh
  405112:	outs   dx,BYTE PTR ds:[esi]
  405114:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40511b:	and    BYTE PTR gs:[rax],ch
  40511e:	push   rax
  40511f:	rex.WR
  405120:	rex.WRXB push r11
  405122:	push   rbx
  405123:	sub    DWORD PTR [rax],eax
  405125:	add    BYTE PTR [rax],al
  405127:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40512b:	(bad)  
  40512c:	ins    BYTE PTR es:[rdi],dx
  40512d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405131:	jae    0x405153
  405133:	outs   dx,DWORD PTR ds:[rsi]
  405134:	data16 and BYTE PTR [rbx+0x69],dh
  405138:	outs   dx,BYTE PTR ds:[esi]
  40513a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405141:	and    BYTE PTR gs:[rax],ch
  405144:	push   rsp
  405145:	rex.WR
  405146:	rex.WRXB push r11
  405148:	push   rbx
  405149:	sub    DWORD PTR [rax],eax
  40514b:	add    BYTE PTR [rax],al
  40514d:	add    BYTE PTR [rax],al
  40514f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405153:	and    BYTE PTR [rdx+0x65],dh
  405156:	jae    0x4051cd
  405158:	ins    BYTE PTR es:[rdi],dx
  405159:	je     0x40517b
  40515b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405162:	jae    0x4051d1
  405164:	(bad)  
  405165:	ins    BYTE PTR es:[rdi],dx
  405166:	ins    BYTE PTR es:[rdi],dx
  405167:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40516b:	(bad)  
  40516c:	and    BYTE PTR gs:[rdx+0x65],dh
  405170:	jo     0x4051e4
  405172:	gs jae 0x4051da
  405175:	outs   dx,BYTE PTR ds:[rsi]
  405176:	je     0x4051dd
  405178:	and    BYTE PTR fs:[rax],ch
  40517b:	push   rbp
  40517c:	rex.WRX
  40517d:	rex.R
  40517e:	rex.RB push r10
  405180:	rex.RX
  405181:	rex.WR
  405182:	rex.WRXB push r15
  405184:	sub    DWORD PTR [rax],eax
  405186:	push   rbp
  405187:	outs   dx,BYTE PTR ds:[rsi]
  405188:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40518c:	outs   dx,BYTE PTR ds:[rsi]
  40518d:	and    BYTE PTR [rbp+0x72],ah
  405190:	jb     0x405201
  405192:	jb     0x405194
  405194:	add    BYTE PTR [rax],al
  405196:	add    BYTE PTR [rax],al
  405198:	pop    rdi
  405199:	ins    DWORD PTR es:[rdi],dx
  40519a:	(bad)  
  40519b:	je     0x405205
  40519d:	gs jb  0x405212
  4051a0:	sub    BYTE PTR [rcx],ch
  4051a2:	cmp    ah,BYTE PTR [rax]
  4051a4:	and    eax,0x6e692073
  4051a9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657a22
  4051af:	sub    al,0x20
  4051b1:	and    eax,0x20202967
  4051b6:	sub    BYTE PTR [rdx+0x65],dh
  4051b9:	je     0x405231
  4051bb:	(bad)  
  4051bc:	ins    BYTE PTR es:[rdi],dx
  4051bd:	cmp    eax,0xa296725
  4051c2:	add    BYTE PTR [rax],al
  4051c4:	pop    rsp
  4051c5:	leave  
  4051c6:	(bad)  
  4051c7:	call   FWORD PTR [rbp+0xcffffc8]
  4051cd:	leave  
  4051ce:	(bad)  
  4051cf:	call   FWORD PTR [rcx+rcx*8]
  4051d2:	(bad)  
  4051d3:	jmp    FWORD PTR [rcx+rcx*8]
  4051d6:	(bad)  
  4051d7:	(bad)  
  4051d8:	cmp    al,0xc9
  4051da:	(bad)  
  4051db:	dec    DWORD PTR [rcx+rcx*8-0x1]
  4051df:	dec    DWORD PTR [rbp+0x69]
  4051e2:	outs   dx,BYTE PTR ds:[rsi]
  4051e3:	addr32 ja 0x405213
  4051e6:	ja     0x40521e
  4051e8:	xor    al,0x20
  4051ea:	jb     0x405261
  4051ec:	outs   dx,BYTE PTR ds:[rsi]
  4051ed:	je     0x405258
  4051ef:	ins    DWORD PTR es:[rdi],dx
  4051f0:	and    BYTE PTR gs:[rsi+0x61],ah
  4051f4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4051fc:	add    BYTE PTR [rax],al
  4051fe:	add    BYTE PTR [rax],al
  405200:	rex.B
  405201:	fs fs jb 0x40526a
  405205:	jae    0x40527a
  405207:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8727d
  40520d:	jae    0x40522f
  40520f:	outs   dx,BYTE PTR ds:[rsi]
  405210:	outs   dx,DWORD PTR ds:[rsi]
  405211:	and    BYTE PTR [rcx+0x6d],ch
  405214:	(bad)  
  405215:	addr32 gs sub eax,0x74636573
  40521c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405223:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40522a:	jne    0x405291
  40522c:	jb     0x4052a7
  40522e:	and    BYTE PTR [rsi+0x61],ah
  405231:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405239:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a272a3
  40523f:	je     0x4052a6
  405241:	jae    0x405263
  405243:	(bad)  
  405244:	je     0x405266
  405246:	(bad)  
  405247:	fs fs jb 0x4052b0
  40524b:	jae    0x4052c0
  40524d:	and    BYTE PTR [rip+0x70],ah        # 0x4052c3
  405253:	add    BYTE PTR [rax],al
  405255:	add    BYTE PTR [rax],al
  405257:	add    BYTE PTR [rax],ah
  405259:	and    BYTE PTR [rsi+0x69],dl
  40525c:	jb     0x4052d2
  40525e:	jne    0x4052c1
  405260:	ins    BYTE PTR es:[rdi],dx
  405261:	push   rax
  405262:	jb     0x4052d3
  405264:	je     0x4052cb
  405266:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40526a:	(bad)  
  40526b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405273:	push   0x646f6320
  405278:	and    BYTE PTR gs:[rax],dh
  40527b:	js     0x4052a2
  40527d:	js     0x40527f
  40527f:	add    BYTE PTR [rax],ah
  405281:	and    BYTE PTR [rbp+0x6e],dl
  405284:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405288:	outs   dx,BYTE PTR ds:[rsi]
  405289:	and    BYTE PTR [rax+0x73],dh
  40528c:	gs jne 0x4052f3
  40528f:	outs   dx,DWORD PTR ds:[rsi]
  405290:	and    BYTE PTR [rdx+0x65],dh
  405293:	ins    BYTE PTR es:[rdi],dx
  405294:	outs   dx,DWORD PTR ds:[rsi]
  405295:	movsxd esp,DWORD PTR [rcx+0x74]
  405298:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40529f:	je     0x405310
  4052a1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4052a4:	and    BYTE PTR [rsi+0x65],dh
  4052a7:	jb     0x40531c
  4052a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4052b0:	or     al,BYTE PTR [rax]
  4052b2:	add    BYTE PTR [rax],al
  4052b4:	add    BYTE PTR [rax],al
  4052b6:	add    BYTE PTR [rax],al
  4052b8:	and    BYTE PTR [rax],ah
  4052ba:	push   rbp
  4052bb:	outs   dx,BYTE PTR ds:[rsi]
  4052bc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4052c0:	outs   dx,BYTE PTR ds:[rsi]
  4052c1:	and    BYTE PTR [rax+0x73],dh
  4052c4:	gs jne 0x40532b
  4052c7:	outs   dx,DWORD PTR ds:[rsi]
  4052c8:	and    BYTE PTR [rdx+0x65],dh
  4052cb:	ins    BYTE PTR es:[rdi],dx
  4052cc:	outs   dx,DWORD PTR ds:[rsi]
  4052cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4052d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4052d7:	and    BYTE PTR [rbx+0x69],dh
  4052da:	jp     0x405341
  4052dc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8146
	...
  4052ee:	add    BYTE PTR [rax],al
  4052f0:	cs jo  0x405357
  4052f3:	(bad)  
  4052f4:	je     0x405357
	...
  4052fe:	add    BYTE PTR [rax],al
  405300:	rex sbb eax,0x0
	...
  40530e:	add    BYTE PTR [rax],al
  405310:	jo     0x40535e
  405312:	add    BYTE PTR [rax],al
	...
  40531d:	add    BYTE PTR [rax],al
  40531f:	add    BYTE PTR [rax+0x404c],al
	...
  40532d:	add    BYTE PTR [rax],al
  40532f:	add    BYTE PTR [rax+0x2f],dh
  405332:	add    BYTE PTR [rax],al
	...
  40533d:	add    BYTE PTR [rax],al
  40533f:	add    BYTE PTR [rax+rbx*2+0x40],dl
	...
  40534e:	add    BYTE PTR [rax],al
  405350:	jo     0x4053aa
  405352:	add    BYTE PTR [rax],al
	...
  40535d:	add    BYTE PTR [rax],al
  40535f:	add    BYTE PTR [rax+0x4050],dl
	...
  405371:	add    BYTE PTR [rax+0x0],al
	...
  405380:	rcl    BYTE PTR [rbx+0x40],1
	...
  40538e:	add    BYTE PTR [rax],al
  405390:	clc    
  405391:	xchg   ebx,eax
  405392:	add    BYTE PTR [rax],al
	...
  40539d:	add    BYTE PTR [rax],al
  40539f:	add    BYTE PTR [rax],dl
  4053a1:	xchg   esp,eax
  4053a2:	add    BYTE PTR [rax],al
	...
  4053ad:	add    BYTE PTR [rax],al
  4053af:	add    BYTE PTR [rax],ch
  4053b1:	xchg   esp,eax
  4053b2:	add    BYTE PTR [rax],al
	...
  4053bd:	add    BYTE PTR [rax],al
  4053bf:	add    al,al
  4053c1:	xchg   BYTE PTR [rax+0x0],al
	...
  4053d0:	sub    BYTE PTR [rdx+0x40],cl
	...
  4053de:	add    BYTE PTR [rax],al
  4053e0:	and    BYTE PTR [rdx+0x40],cl
	...
  4053ee:	add    BYTE PTR [rax],al
  4053f0:	adc    BYTE PTR [rdx+0x40],cl
	...
  4053fe:	add    BYTE PTR [rax],al
  405400:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40540e:	add    BYTE PTR [rax],al
  405410:	add    BYTE PTR [rax+0x40],ah
	...
  40541e:	add    BYTE PTR [rax],al
  405420:	adc    BYTE PTR [rax+0x40],ah
	...
  40542e:	add    BYTE PTR [rax],al
  405430:	sbb    BYTE PTR [rax+0x40],ah
	...
  40543e:	add    BYTE PTR [rax],al
  405440:	xor    BYTE PTR [rax+0x40],ah
	...
  40544e:	add    BYTE PTR [rax],al
  405450:	rex add BYTE PTR [rax+0x0],0x0
	...
  40545d:	add    BYTE PTR [rax],al
  40545f:	add    BYTE PTR [rax+0x4086],dl
	...
  40546d:	add    BYTE PTR [rax],al
  40546f:	add    al,ah
  405471:	and    al,BYTE PTR [rax+0x0]
	...
  405480:	xor    BYTE PTR [rdx],bl
  405482:	add    BYTE PTR [rax],al
	...
  40548d:	add    BYTE PTR [rax],al
  40548f:	add    BYTE PTR [rax-0x7a],al
  405492:	add    BYTE PTR [rax],al
	...
  40549d:	add    BYTE PTR [rax],al
  40549f:	add    BYTE PTR [rax-0x7a],dh
  4054a2:	add    BYTE PTR [rax],al
	...
  4054ad:	add    BYTE PTR [rax],al
  4054af:	add    BYTE PTR [rax-0x80],dl
  4054b2:	add    BYTE PTR [rax],al
	...
  4054bd:	add    BYTE PTR [rax],al
  4054bf:	add    BYTE PTR [rax-0x7a],bl
  4054c2:	add    BYTE PTR [rax],al
	...
  4054cd:	add    BYTE PTR [rax],al
  4054cf:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  4054df:	add    BYTE PTR [rax-0x7a],dl
  4054e2:	add    BYTE PTR [rax],al
	...
  4054ed:	add    BYTE PTR [rax],al
  4054ef:	add    al,dl
  4054f1:	xchg   edx,eax
  4054f2:	add    BYTE PTR [rax],al
	...
  4054fd:	add    BYTE PTR [rax],al
  4054ff:	add    al,ch
  405501:	xchg   edx,eax
  405502:	add    BYTE PTR [rax],al
	...
  40550d:	add    BYTE PTR [rax],al
  40550f:	add    BYTE PTR [rdi+0x43],al
  405512:	rex.XB cmp spl,BYTE PTR [r8]
  405515:	sub    BYTE PTR [rdi+0x4e],al
  405518:	push   rbp
  405519:	sub    DWORD PTR [rax],esp
  40551b:	xor    al,0x2e
  40551d:	cmp    DWORD PTR [rsi],ebp
  40551f:	xor    al,0x0
	...
  40552d:	add    BYTE PTR [rax],al
  40552f:	add    BYTE PTR [rdi+0x43],al
  405532:	rex.XB cmp spl,BYTE PTR [r8]
  405535:	sub    BYTE PTR [rdi+0x4e],al
  405538:	push   rbp
  405539:	sub    DWORD PTR [rax],esp
  40553b:	xor    al,0x2e
  40553d:	cmp    DWORD PTR [rsi],ebp
  40553f:	xor    al,0x0
	...
  40554d:	add    BYTE PTR [rax],al
  40554f:	add    BYTE PTR [rdi+0x43],al
  405552:	rex.XB cmp spl,BYTE PTR [r8]
  405555:	sub    BYTE PTR [rdi+0x4e],al
  405558:	push   rbp
  405559:	sub    DWORD PTR [rax],esp
  40555b:	xor    al,0x2e
  40555d:	cmp    DWORD PTR [rsi],ebp
  40555f:	xor    al,0x0
	...
  40556d:	add    BYTE PTR [rax],al
  40556f:	add    BYTE PTR [rdi+0x43],al
  405572:	rex.XB cmp spl,BYTE PTR [r8]
  405575:	sub    BYTE PTR [rdi+0x4e],al
  405578:	push   rbp
  405579:	sub    DWORD PTR [rax],esp
  40557b:	xor    al,0x2e
  40557d:	cmp    DWORD PTR [rsi],ebp
  40557f:	xor    al,0x0
	...
  40558d:	add    BYTE PTR [rax],al
  40558f:	add    BYTE PTR [rdi+0x43],al
  405592:	rex.XB cmp spl,BYTE PTR [r8]
  405595:	sub    BYTE PTR [rdi+0x4e],al
  405598:	push   rbp
  405599:	sub    DWORD PTR [rax],esp
  40559b:	xor    al,0x2e
  40559d:	cmp    DWORD PTR [rsi],ebp
  40559f:	xor    al,0x0
	...
  4055ad:	add    BYTE PTR [rax],al
  4055af:	add    BYTE PTR [rdi+0x43],al
  4055b2:	rex.XB cmp spl,BYTE PTR [r8]
  4055b5:	sub    BYTE PTR [rdi+0x4e],al
  4055b8:	push   rbp
  4055b9:	sub    DWORD PTR [rax],esp
  4055bb:	xor    al,0x2e
  4055bd:	cmp    DWORD PTR [rsi],ebp
  4055bf:	xor    al,0x0
	...
  4055cd:	add    BYTE PTR [rax],al
  4055cf:	add    BYTE PTR [rdi+0x43],al
  4055d2:	rex.XB cmp spl,BYTE PTR [r8]
  4055d5:	sub    BYTE PTR [rdi+0x4e],al
  4055d8:	push   rbp
  4055d9:	sub    DWORD PTR [rax],esp
  4055db:	xor    al,0x2e
  4055dd:	cmp    DWORD PTR [rsi],ebp
  4055df:	xor    al,0x0
	...
  4055ed:	add    BYTE PTR [rax],al
  4055ef:	add    BYTE PTR [rdi+0x43],al
  4055f2:	rex.XB cmp spl,BYTE PTR [r8]
  4055f5:	sub    BYTE PTR [rdi+0x4e],al
  4055f8:	push   rbp
  4055f9:	sub    DWORD PTR [rax],esp
  4055fb:	xor    al,0x2e
  4055fd:	cmp    DWORD PTR [rsi],ebp
  4055ff:	xor    al,0x0
	...
  40560d:	add    BYTE PTR [rax],al
  40560f:	add    BYTE PTR [rdi+0x43],al
  405612:	rex.XB cmp spl,BYTE PTR [r8]
  405615:	sub    BYTE PTR [rdi+0x4e],al
  405618:	push   rbp
  405619:	sub    DWORD PTR [rax],esp
  40561b:	xor    al,0x2e
  40561d:	cmp    DWORD PTR [rsi],ebp
  40561f:	xor    al,0x0
	...
  40562d:	add    BYTE PTR [rax],al
  40562f:	add    BYTE PTR [rdi+0x43],al
  405632:	rex.XB cmp spl,BYTE PTR [r8]
  405635:	sub    BYTE PTR [rdi+0x4e],al
  405638:	push   rbp
  405639:	sub    DWORD PTR [rax],esp
  40563b:	xor    al,0x2e
  40563d:	cmp    DWORD PTR [rsi],ebp
  40563f:	xor    al,0x0
	...
  40564d:	add    BYTE PTR [rax],al
  40564f:	add    BYTE PTR [rdi+0x43],al
  405652:	rex.XB cmp spl,BYTE PTR [r8]
  405655:	sub    BYTE PTR [rdi+0x4e],al
  405658:	push   rbp
  405659:	sub    DWORD PTR [rax],esp
  40565b:	xor    al,0x2e
  40565d:	cmp    DWORD PTR [rsi],ebp
  40565f:	xor    al,0x0
	...
  40566d:	add    BYTE PTR [rax],al
  40566f:	add    BYTE PTR [rdi+0x43],al
  405672:	rex.XB cmp spl,BYTE PTR [r8]
  405675:	sub    BYTE PTR [rdi+0x4e],al
  405678:	push   rbp
  405679:	sub    DWORD PTR [rax],esp
  40567b:	xor    al,0x2e
  40567d:	cmp    DWORD PTR [rsi],ebp
  40567f:	xor    al,0x0
	...
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rdi+0x43],al
  405692:	rex.XB cmp spl,BYTE PTR [r8]
  405695:	sub    BYTE PTR [rdi+0x4e],al
  405698:	push   rbp
  405699:	sub    DWORD PTR [rax],esp
  40569b:	xor    al,0x2e
  40569d:	cmp    DWORD PTR [rsi],ebp
  40569f:	xor    al,0x0
	...
  4056ad:	add    BYTE PTR [rax],al
  4056af:	add    BYTE PTR [rdi+0x43],al
  4056b2:	rex.XB cmp spl,BYTE PTR [r8]
  4056b5:	sub    BYTE PTR [rdi+0x4e],al
  4056b8:	push   rbp
  4056b9:	sub    DWORD PTR [rax],esp
  4056bb:	xor    al,0x2e
  4056bd:	cmp    DWORD PTR [rsi],ebp
  4056bf:	xor    al,0x0
	...
  4056cd:	add    BYTE PTR [rax],al
  4056cf:	add    BYTE PTR [rdi+0x43],al
  4056d2:	rex.XB cmp spl,BYTE PTR [r8]
  4056d5:	sub    BYTE PTR [rdi+0x4e],al
  4056d8:	push   rbp
  4056d9:	sub    DWORD PTR [rax],esp
  4056db:	xor    al,0x2e
  4056dd:	cmp    DWORD PTR [rsi],ebp
  4056df:	xor    al,0x0
	...
  4056ed:	add    BYTE PTR [rax],al
  4056ef:	add    BYTE PTR [rdi+0x43],al
  4056f2:	rex.XB cmp spl,BYTE PTR [r8]
  4056f5:	sub    BYTE PTR [rdi+0x4e],al
  4056f8:	push   rbp
  4056f9:	sub    DWORD PTR [rax],esp
  4056fb:	xor    al,0x2e
  4056fd:	cmp    DWORD PTR [rsi],ebp
  4056ff:	xor    al,0x0
	...
  40570d:	add    BYTE PTR [rax],al
  40570f:	add    BYTE PTR [rdi+0x43],al
  405712:	rex.XB cmp spl,BYTE PTR [r8]
  405715:	sub    BYTE PTR [rdi+0x4e],al
  405718:	push   rbp
  405719:	sub    DWORD PTR [rax],esp
  40571b:	xor    al,0x2e
  40571d:	cmp    DWORD PTR [rsi],ebp
  40571f:	xor    al,0x0
	...
  40572d:	add    BYTE PTR [rax],al
  40572f:	add    BYTE PTR [rdi+0x43],al
  405732:	rex.XB cmp spl,BYTE PTR [r8]
  405735:	sub    BYTE PTR [rdi+0x4e],al
  405738:	push   rbp
  405739:	sub    DWORD PTR [rax],esp
  40573b:	xor    al,0x2e
  40573d:	cmp    DWORD PTR [rsi],ebp
  40573f:	xor    al,0x0
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rdi+0x43],al
  405752:	rex.XB cmp spl,BYTE PTR [r8]
  405755:	sub    BYTE PTR [rdi+0x4e],al
  405758:	push   rbp
  405759:	sub    DWORD PTR [rax],esp
  40575b:	xor    al,0x2e
  40575d:	cmp    DWORD PTR [rsi],ebp
  40575f:	xor    al,0x0
	...
  40576d:	add    BYTE PTR [rax],al
  40576f:	add    BYTE PTR [rdi+0x43],al
  405772:	rex.XB cmp spl,BYTE PTR [r8]
  405775:	sub    BYTE PTR [rdi+0x4e],al
  405778:	push   rbp
  405779:	sub    DWORD PTR [rax],esp
  40577b:	xor    al,0x2e
  40577d:	cmp    DWORD PTR [rsi],ebp
  40577f:	xor    al,0x0
	...
  40578d:	add    BYTE PTR [rax],al
  40578f:	add    BYTE PTR [rdi+0x43],al
  405792:	rex.XB cmp spl,BYTE PTR [r8]
  405795:	sub    BYTE PTR [rdi+0x4e],al
  405798:	push   rbp
  405799:	sub    DWORD PTR [rax],esp
  40579b:	xor    al,0x2e
  40579d:	cmp    DWORD PTR [rsi],ebp
  40579f:	xor    al,0x0
	...
  4057ad:	add    BYTE PTR [rax],al
  4057af:	add    BYTE PTR [rdi+0x43],al
  4057b2:	rex.XB cmp spl,BYTE PTR [r8]
  4057b5:	sub    BYTE PTR [rdi+0x4e],al
  4057b8:	push   rbp
  4057b9:	sub    DWORD PTR [rax],esp
  4057bb:	xor    al,0x2e
  4057bd:	cmp    DWORD PTR [rsi],ebp
  4057bf:	xor    al,0x0
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rdi+0x43],al
  4057d2:	rex.XB cmp spl,BYTE PTR [r8]
  4057d5:	sub    BYTE PTR [rdi+0x4e],al
  4057d8:	push   rbp
  4057d9:	sub    DWORD PTR [rax],esp
  4057db:	xor    al,0x2e
  4057dd:	cmp    DWORD PTR [rsi],ebp
  4057df:	xor    al,0x0
	...
  4057ed:	add    BYTE PTR [rax],al
  4057ef:	add    BYTE PTR [rdi+0x43],al
  4057f2:	rex.XB cmp spl,BYTE PTR [r8]
  4057f5:	sub    BYTE PTR [rdi+0x4e],al
  4057f8:	push   rbp
  4057f9:	sub    DWORD PTR [rax],esp
  4057fb:	xor    al,0x2e
  4057fd:	cmp    DWORD PTR [rsi],ebp
  4057ff:	xor    al,0x0
	...
  40580d:	add    BYTE PTR [rax],al
  40580f:	add    BYTE PTR [rdi+0x43],al
  405812:	rex.XB cmp spl,BYTE PTR [r8]
  405815:	sub    BYTE PTR [rdi+0x4e],al
  405818:	push   rbp
  405819:	sub    DWORD PTR [rax],esp
  40581b:	xor    al,0x2e
  40581d:	cmp    DWORD PTR [rsi],ebp
  40581f:	xor    al,0x0
	...
  40582d:	add    BYTE PTR [rax],al
  40582f:	add    BYTE PTR [rdi+0x43],al
  405832:	rex.XB cmp spl,BYTE PTR [r8]
  405835:	sub    BYTE PTR [rdi+0x4e],al
  405838:	push   rbp
  405839:	sub    DWORD PTR [rax],esp
  40583b:	xor    al,0x2e
  40583d:	cmp    DWORD PTR [rsi],ebp
  40583f:	xor    al,0x0
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rdi+0x43],al
  405852:	rex.XB cmp spl,BYTE PTR [r8]
  405855:	sub    BYTE PTR [rdi+0x4e],al
  405858:	push   rbp
  405859:	sub    DWORD PTR [rax],esp
  40585b:	xor    al,0x2e
  40585d:	cmp    DWORD PTR [rsi],ebp
  40585f:	xor    al,0x0
	...
  405875:	add    BYTE PTR [rax],al
  405877:	add    BYTE PTR [rcx],al
  405879:	add    BYTE PTR [rax],al
  40587b:	add    al,dl
  40587d:	xchg   edx,eax
  40587e:	add    BYTE PTR [rax],al
  405880:	lock push rsp
  405882:	add    BYTE PTR [rax],al
  405884:	add    BYTE PTR [rax],al
  405887:	add    al,ch
  405889:	xchg   edx,eax
  40588a:	add    BYTE PTR [rax],al
  40588c:	add    BYTE PTR [rbp+0x0],dl
  40588f:	add    BYTE PTR [rax+0x0],al
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax+0x37000015],dl
  40604d:	(bad)  
  40604e:	add    BYTE PTR [rax],al
  406050:	jl     0x4060c2
  406052:	add    BYTE PTR [rax],al
  406054:	rex (bad) 
  406056:	add    BYTE PTR [rax],al
  406058:	pop    rcx
  406059:	(bad)  
  40605a:	add    BYTE PTR [rax],al
  40605c:	test   BYTE PTR [rax+0x0],dh
  40605f:	add    BYTE PTR [rax+0x16],ah
  406062:	add    BYTE PTR [rax],al
  406064:	xchg   ebp,eax
  406065:	(bad)  
  406066:	add    BYTE PTR [rax],al
  406068:	mov    WORD PTR [rax+0x0],?
  40606b:	add    BYTE PTR [rax-0xaffffea],ah
  406071:	(bad)  
  406072:	add    BYTE PTR [rax],al
  406074:	xchg   esp,eax
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax],al
  406079:	(bad)  
  40607a:	add    BYTE PTR [rax],al
  40607c:	sbb    al,0x17
  40607e:	add    BYTE PTR [rax],al
  406080:	movabs al,ds:0x2a00001720000070
  406089:	(bad)  
  40608a:	add    BYTE PTR [rax],al
  40608c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  40608d:	jo     0x40608f
  40608f:	add    BYTE PTR [rax],dh
  406091:	(bad)  
  406092:	add    BYTE PTR [rax],al
  406094:	xor    edx,DWORD PTR [rdi]
  406096:	add    BYTE PTR [rax],al
  406098:	test   al,0x70
  40609a:	add    BYTE PTR [rax],al
  40609c:	rex (bad) 
  40609e:	add    BYTE PTR [rax],al
  4060a0:	(bad)  
  4060a1:	sbb    BYTE PTR [rax],al
  4060a3:	add    BYTE PTR [rax+rsi*2+0x18200000],ch
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	sbb    ebx,DWORD PTR [rcx]
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	mov    esp,0x20000070
  4060b5:	sbb    DWORD PTR [rax],eax
  4060b7:	add    BYTE PTR [rdi+0x19],cl
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	int3   
  4060bd:	jo     0x4060bf
  4060bf:	add    BYTE PTR [rax+0x19],dl
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	mov    ecx,0xd4000019
  4060c9:	jo     0x4060cb
  4060cb:	add    al,al
  4060cd:	sbb    DWORD PTR [rax],eax
  4060cf:	add    bl,al
  4060d1:	sbb    DWORD PTR [rax],eax
  4060d3:	add    al,ah
  4060d5:	jo     0x4060d7
  4060d7:	add    al,dl
  4060d9:	sbb    DWORD PTR [rax],eax
  4060db:	add    BYTE PTR [rcx],dl
  4060dd:	sbb    al,BYTE PTR [rax]
  4060df:	add    ah,ah
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax],ah
  4060e5:	sbb    al,BYTE PTR [rax]
  4060e7:	add    BYTE PTR [rdx+rbx*1],ch
  4060ea:	add    BYTE PTR [rax],al
  4060ec:	in     al,dx
  4060ed:	jo     0x4060ef
  4060ef:	add    BYTE PTR [rax],dh
  4060f1:	sbb    al,BYTE PTR [rax]
  4060f3:	add    BYTE PTR [rbx+rbx*1],ch
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	lock jo 0x4060fb
  4060fb:	add    BYTE PTR [rax],dh
  4060fd:	sbb    eax,DWORD PTR [rax]
  4060ff:	add    BYTE PTR [rbx],dh
  406101:	sbb    eax,DWORD PTR [rax]
  406103:	add    BYTE PTR [rax],cl
  406105:	jno    0x406107
  406107:	add    BYTE PTR [rax+0x1b],al
  40610a:	add    BYTE PTR [rax],al
  40610c:	sbb    r8d,DWORD PTR [rax]
  40610f:	add    BYTE PTR [rcx+rsi*2],cl
  406112:	add    BYTE PTR [rax],al
  406114:	push   rax
  406115:	sbb    eax,DWORD PTR [rax]
  406117:	add    BYTE PTR [rbx+rbx*1+0x0],dl
  40611b:	add    BYTE PTR [rax],dl
  40611d:	jno    0x40611f
  40611f:	add    BYTE PTR [rax+0x1b],ah
  406122:	add    BYTE PTR [rax],al
  406124:	rcr    DWORD PTR [rbx],0x0
  406127:	add    BYTE PTR [rcx+rsi*2],dl
  40612a:	add    BYTE PTR [rax],al
  40612c:	rcr    BYTE PTR [rbx],1
  40612e:	add    BYTE PTR [rax],al
  406130:	xor    bl,BYTE PTR [rip+0x71200000]        # 0x71606136
  406136:	add    BYTE PTR [rax],al
  406138:	rex sbb eax,0x20390000
  40613e:	add    BYTE PTR [rax],al
  406140:	xor    al,0x71
  406142:	add    BYTE PTR [rax],al
  406144:	and    BYTE PTR [rax],al
  406147:	add    dh,ah
  406149:	and    DWORD PTR [rax],eax
  40614b:	add    BYTE PTR [rcx+rsi*2+0x0],cl
  40614f:	add    al,dh
  406151:	and    DWORD PTR [rax],eax
  406153:	add    ah,bl
  406155:	and    al,BYTE PTR [rax]
  406157:	add    BYTE PTR [rcx+rsi*2+0x0],dl
  40615b:	add    al,ah
  40615d:	and    al,BYTE PTR [rax]
  40615f:	add    BYTE PTR [rax+0x64000024],bl
  406165:	jno    0x406167
  406167:	add    BYTE PTR [rax+0xd000024],ah
  40616d:	and    eax,0x716c0000
  406172:	add    BYTE PTR [rax],al
  406174:	adc    BYTE PTR [rip+0x258f0000],ah        # 0x25cf617a
  40617a:	add    BYTE PTR [rax],al
  40617c:	jl     0x4061ef
  40617e:	add    BYTE PTR [rax],al
  406180:	nop
  406181:	and    eax,0x262f0000
  406186:	add    BYTE PTR [rax],al
  406188:	mov    BYTE PTR [rcx+0x0],dh
  40618b:	add    BYTE PTR [rax],dh
  40618d:	add    BYTE PTR es:[rax],al
  406190:	or     ah,BYTE PTR [rdi]
  406192:	add    BYTE PTR [rax],al
  406194:	nop
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax],dl
  406199:	(bad)  
  40619a:	add    BYTE PTR [rax],al
  40619c:	(bad)  
  40619d:	(bad)  
  40619e:	add    BYTE PTR [rax],al
  4061a0:	cwde   
  4061a1:	jno    0x4061a3
  4061a3:	add    BYTE PTR [rax],dh
  4061a5:	(bad)  
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	rex.X (bad) 
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	pushf  
  4061ad:	jno    0x4061af
  4061af:	add    BYTE PTR [rax+0x27],dl
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	xchg   ebp,eax
  4061b5:	(bad)  
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	movabs al,ds:0x3e000027a0000071
  4061c1:	sub    BYTE PTR [rax],al
  4061c3:	add    BYTE PTR [rcx+rsi*2+0x28400000],ah
  4061ca:	add    BYTE PTR [rax],al
  4061cc:	sub    DWORD PTR [rax],0x0
  4061cf:	add    BYTE PTR [rax-0x6fffff8f],dh
  4061d5:	sub    BYTE PTR [rax],al
  4061d7:	add    bl,cl
  4061d9:	sub    BYTE PTR [rax],al
  4061db:	add    BYTE PTR [rcx+rsi*2+0x28d00000],bh
  4061e2:	add    BYTE PTR [rax],al
  4061e4:	pop    rsi
  4061e5:	sub    DWORD PTR [rax],eax
  4061e7:	add    ah,al
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax+0x29],ah
  4061ee:	add    BYTE PTR [rax],al
  4061f0:	cwde   
  4061f1:	sub    DWORD PTR [rax],eax
  4061f3:	add    al,dl
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax-0xaffffd7],ah
  4061fd:	sub    DWORD PTR [rax],eax
  4061ff:	add    ah,bl
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax],al
  406205:	sub    al,BYTE PTR [rax]
  406207:	add    BYTE PTR [rsi-0x17ffffd6],ch
  40620d:	jno    0x40620f
  40620f:	add    al,dl
  406211:	sub    eax,DWORD PTR [rax]
  406213:	add    al,bl
  406215:	sub    eax,DWORD PTR [rax]
  406217:	add    al,bh
  406219:	jno    0x40621b
  40621b:	add    al,ah
  40621d:	sub    eax,DWORD PTR [rax]
  40621f:	add    bl,ch
  406221:	sub    eax,DWORD PTR [rax]
  406223:	add    ah,bh
  406225:	jno    0x406227
  406227:	add    BYTE PTR [rax+0x6300002c],dh
  40622d:	(bad)  
  40622e:	add    BYTE PTR [rax],al
  406230:	.byte 0x68
  406231:	jo     0x406233
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	shr    BYTE PTR [rbx],0x0
  407033:	add    BYTE PTR [rcx],al
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    al,ah
  407041:	and    al,BYTE PTR [rax]
  407043:	add    ah,ch
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	shr    BYTE PTR [rbx],0x0
  407053:	add    BYTE PTR [rcx],al
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	loopne 0x407084
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rdi],ecx
  40706a:	or     BYTE PTR [rip+0x30bc20f],al        # 0x34c327f
  407070:	or     BYTE PTR [rax],dh
  407072:	(bad)  
  407073:	(bad)  
  407074:	(bad)  
  407075:	jo     0x40707c
  407077:	rol    BYTE PTR [rbx],0xd0
  40707a:	add    DWORD PTR [rax+0x1],edx
  40707d:	add    eax,0x52050002
  407082:	add    DWORD PTR [rax],esi
  407084:	add    DWORD PTR [rcx+rax*1],eax
  407087:	add    BYTE PTR [rdx+rax*2],al
  40708a:	add    BYTE PTR [rax],al
  40708c:	add    DWORD PTR [rcx+rax*1],eax
  40708f:	add    BYTE PTR [rdx+rax*2],al
  407092:	add    BYTE PTR [rax],al
  407094:	add    DWORD PTR [rsi],eax
  407096:	add    eax,DWORD PTR [rax]
  407098:	(bad)  
  407099:	rex.X add sil,BYTE PTR [rax]
  40709c:	add    DWORD PTR [rax+0x0],esp
  40709f:	add    BYTE PTR [rcx],al
  4070a1:	add    BYTE PTR [rax],al
  4070a3:	add    BYTE PTR [rcx],al
  4070a5:	add    BYTE PTR [rax],al
  4070a7:	add    BYTE PTR [rcx],al
  4070a9:	add    BYTE PTR [rax],al
  4070ab:	add    BYTE PTR [rcx],al
  4070ad:	or     al,BYTE PTR [rsi]
  4070af:	add    BYTE PTR [rdx],cl
  4070b1:	jb     0x4070b9
  4070b3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07519
  4070b9:	push   rax
  4070ba:	add    al,al
  4070bc:	add    DWORD PTR [rdx],ecx
  4070be:	add    eax,0x6d20a05
  4070c3:	add    eax,DWORD PTR [rbx]
  4070c5:	xor    BYTE PTR [rdx],al
  4070c7:	(bad)  
  4070c8:	add    DWORD PTR [rax+0x0],edx
  4070cb:	add    BYTE PTR [rcx],al
  4070cd:	add    al,0x1
  4070cf:	add    BYTE PTR [rdx+rax*2],al
  4070d2:	add    BYTE PTR [rax],al
  4070d4:	add    DWORD PTR [rsi],eax
  4070d6:	add    eax,DWORD PTR [rax]
  4070d8:	(bad)  
  4070d9:	rex.X add sil,BYTE PTR [rax]
  4070dc:	add    DWORD PTR [rax+0x0],esp
  4070df:	add    BYTE PTR [rcx],al
  4070e1:	add    BYTE PTR [rax],al
  4070e3:	add    BYTE PTR [rcx],al
  4070e5:	add    al,0x1
  4070e7:	add    BYTE PTR [rdx+riz*4],al
  4070ea:	add    BYTE PTR [rax],al
  4070ec:	add    DWORD PTR [rax],eax
  4070ee:	add    BYTE PTR [rax],al
  4070f0:	add    DWORD PTR [rsi],edx
  4070f2:	or     DWORD PTR [rax],eax
  4070f4:	(bad)  
  4070f5:	mov    BYTE PTR [rsi],al
  4070f7:	add    BYTE PTR [rax],dl
  4070f9:	js     0x407100
  4070fb:	add    BYTE PTR [rbx],cl
  4070fd:	push   0xffffffffe2060004
  407102:	add    dh,BYTE PTR [rax]
  407104:	add    DWORD PTR [rax+0x0],esp
  407107:	add    BYTE PTR [rcx],al
  407109:	add    BYTE PTR [rax],al
  40710b:	add    BYTE PTR [rcx],al
  40710d:	add    BYTE PTR [rax],al
  40710f:	add    BYTE PTR [rcx],al
  407111:	add    BYTE PTR [rax],al
  407113:	add    BYTE PTR [rcx],al
  407115:	(bad)  
  407116:	add    eax,DWORD PTR [rax]
  407118:	(bad)  
  407119:	(bad)  
  40711b:	xor    BYTE PTR [rcx],al
  40711d:	(bad)  
  40711e:	add    BYTE PTR [rax],al
  407120:	add    DWORD PTR [rdi+rax*1],ecx
  407123:	add    BYTE PTR [rdx+riz*4],cl
  407126:	or     BYTE PTR [rax],dh
  407128:	(bad)  
  407129:	(bad)  
  40712a:	(bad)  
  40712b:	jo     0x407132
  40712d:	push   rax
  40712e:	add    al,0xc0
  407130:	add    dl,al
  407132:	add    BYTE PTR [rax],al
  407134:	add    DWORD PTR [rcx],edx
  407136:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e234d
  40713c:	or     dh,BYTE PTR [rax]
  40713e:	or     DWORD PTR [rax+0x8],esp
  407141:	jo     0x40714a
  407143:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220751a
  40714a:	add    BYTE PTR [rax],al
  40714c:	add    DWORD PTR [rcx+rax*1],eax
  40714f:	add    BYTE PTR [rdx+rax*2],al
  407152:	add    BYTE PTR [rax],al
  407154:	add    DWORD PTR [rdx],ecx
  407156:	(bad)  
  407157:	add    BYTE PTR [rdx],cl
  407159:	xor    al,BYTE PTR [rsi]
  40715b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075c1
  407161:	push   rax
  407162:	add    al,al
  407164:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245716c
  40716a:	add    DWORD PTR [rax],esi
  40716c:	add    DWORD PTR [rax],ecx
  40716e:	add    eax,0x4420800
  407173:	xor    BYTE PTR [rbx],al
  407175:	(bad)  
  407176:	add    dh,BYTE PTR [rax+0x1]
  407179:	push   rax
  40717a:	add    BYTE PTR [rax],al
  40717c:	add    DWORD PTR [rdi],eax
  40717e:	add    al,0x0
  407180:	(bad)  
  407181:	xor    al,BYTE PTR [rbx]
  407183:	xor    BYTE PTR [rdx],al
  407185:	(bad)  
  407186:	add    DWORD PTR [rax+0x1],esi
  407189:	add    eax,0x32050002
  40718e:	add    DWORD PTR [rax],esi
  407190:	add    DWORD PTR [rip+0x32050002],eax        # 0x32457198
  407196:	add    DWORD PTR [rax],esi
  407198:	add    DWORD PTR [rax],eax
  40719a:	add    BYTE PTR [rax],al
  40719c:	add    DWORD PTR [rax],eax
  40719e:	add    BYTE PTR [rax],al
  4071a0:	add    DWORD PTR [rax],eax
  4071a2:	add    BYTE PTR [rax],al
  4071a4:	add    DWORD PTR [rdi],eax
  4071a6:	add    al,0x0
  4071a8:	(bad)  
  4071a9:	xor    al,BYTE PTR [rbx]
  4071ab:	xor    BYTE PTR [rdx],al
  4071ad:	(bad)  
  4071ae:	add    DWORD PTR [rax+0x1],esi
  4071b1:	(bad)  
  4071b2:	add    eax,DWORD PTR [rax]
  4071b4:	(bad)  
  4071b5:	rex.X add sil,BYTE PTR [rax]
  4071b8:	add    DWORD PTR [rax+0x0],esp
  4071bb:	add    BYTE PTR [rcx],al
  4071bd:	add    eax,0x32050002
  4071c2:	add    DWORD PTR [rax],esi
  4071c4:	add    DWORD PTR [rdi],eax
  4071c6:	add    al,0x0
  4071c8:	(bad)  
  4071c9:	xor    al,BYTE PTR [rbx]
  4071cb:	xor    BYTE PTR [rdx],al
  4071cd:	(bad)  
  4071ce:	add    DWORD PTR [rax+0x1],esi
  4071d1:	(bad)  
  4071d2:	add    eax,DWORD PTR [rax]
  4071d4:	(bad)  
  4071d5:	rex.X add sil,BYTE PTR [rax]
  4071d8:	add    DWORD PTR [rax+0x0],esp
  4071db:	add    BYTE PTR [rcx],al
  4071dd:	(bad)  
  4071de:	add    eax,DWORD PTR [rax]
  4071e0:	(bad)  
  4071e1:	rex.X add sil,BYTE PTR [rax]
  4071e4:	add    DWORD PTR [rax+0x0],esp
  4071e7:	add    BYTE PTR [rcx],al
  4071e9:	or     BYTE PTR [rip+0x4420800],al        # 0x48279ef
  4071ef:	xor    BYTE PTR [rbx],al
  4071f1:	(bad)  
  4071f2:	add    dh,BYTE PTR [rax+0x1]
  4071f5:	push   rax
  4071f6:	add    BYTE PTR [rax],al
  4071f8:	add    DWORD PTR [rax],eax
  4071fa:	add    BYTE PTR [rax],al
  4071fc:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	or     al,0x99
  40900e:	add    BYTE PTR [rax],al
  409010:	adc    BYTE PTR [rdx-0x6f380000],0x0
	...
  40901f:	add    BYTE PTR [rax-0x67],bh
  409022:	add    BYTE PTR [rax],al
  409024:	clc    
  409025:	xchg   edx,eax
  409026:	add    BYTE PTR [rax],al
  409028:	mov    BYTE PTR [rcx+0x0],dl
  40902e:	add    BYTE PTR [rax],al
  409030:	add    BYTE PTR [rax],al
  409032:	add    BYTE PTR [rax],al
  409034:	add    BYTE PTR [rdx-0x6c480000],bl
	...
  40904e:	add    BYTE PTR [rax],al
  409050:	mov    al,0x94
  409052:	add    BYTE PTR [rax],al
  409054:	add    BYTE PTR [rax],al
  409056:	add    BYTE PTR [rax],al
  409058:	(bad)  
  409059:	xchg   esp,eax
  40905a:	add    BYTE PTR [rax],al
  40905c:	add    BYTE PTR [rax],al
  40905e:	add    BYTE PTR [rax],al
  409060:	fcom   DWORD PTR [rax+rax*1+0x0]
  409067:	add    al,ch
  409069:	xchg   esp,eax
  40906a:	add    BYTE PTR [rax],al
  40906c:	add    BYTE PTR [rax],al
  40906e:	add    BYTE PTR [rax],al
  409070:	clc    
  409071:	xchg   esp,eax
  409072:	add    BYTE PTR [rax],al
  409074:	add    BYTE PTR [rax],al
  409076:	add    BYTE PTR [rax],al
  409078:	add    al,0x95
  40907a:	add    BYTE PTR [rax],al
  40907c:	add    BYTE PTR [rax],al
  40907e:	add    BYTE PTR [rax],al
  409080:	adc    BYTE PTR [rbp+0x0],dl
  409086:	add    BYTE PTR [rax],al
  409088:	and    BYTE PTR [rbp+0x0],dl
  40908e:	add    BYTE PTR [rax],al
  409090:	xor    al,0x95
  409092:	add    BYTE PTR [rax],al
  409094:	add    BYTE PTR [rax],al
  409096:	add    BYTE PTR [rax],al
  409098:	rex xchg ebp,eax
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	push   rsp
  4090a1:	xchg   ebp,eax
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	pop    rsp
  4090a9:	xchg   ebp,eax
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    BYTE PTR [rax],al
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	push   0x95
  4090b5:	add    BYTE PTR [rax],al
  4090b7:	add    BYTE PTR [rax-0x6b],bh
	...
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	mov    BYTE PTR [rbp+0x0],dl
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	movabs al,ds:0xb800000000000095
  4090d9:	xchg   ebp,eax
  4090da:	add    BYTE PTR [rax],al
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	int3   
  4090e1:	xchg   ebp,eax
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	loop   0x40907f
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rax],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	clc    
  4090f1:	xchg   ebp,eax
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	or     BYTE PTR [rsi+0x0],dl
  4090fe:	add    BYTE PTR [rax],al
  409100:	sbb    dl,BYTE PTR [rsi+0x0]
  409106:	add    BYTE PTR [rax],al
  409108:	xor    al,0x96
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	rex.R xchg esi,eax
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	(bad)  
  409119:	xchg   esi,eax
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	js     0x4090b8
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	xchg   edx,eax
  409129:	xchg   esi,eax
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	test   al,0x96
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rax],al
  409136:	add    BYTE PTR [rax],al
  409138:	mov    esp,0x96
  40913d:	add    BYTE PTR [rax],al
  40913f:	add    dh,dl
  409141:	xchg   esi,eax
  409142:	add    BYTE PTR [rax],al
  409144:	add    BYTE PTR [rax],al
  409146:	add    BYTE PTR [rax],al
  409148:	(bad)  
  409149:	xchg   esi,eax
  40914a:	add    BYTE PTR [rax],al
  40914c:	add    BYTE PTR [rax],al
  40914e:	add    BYTE PTR [rax],al
  409150:	or     BYTE PTR [rdi+0x0],dl
  409156:	add    BYTE PTR [rax],al
  409158:	adc    BYTE PTR [rdi+0x0],dl
  40915e:	add    BYTE PTR [rax],al
  409160:	and    al,0x97
  409162:	add    BYTE PTR [rax],al
  409164:	add    BYTE PTR [rax],al
  409166:	add    BYTE PTR [rax],al
  409168:	xor    dl,BYTE PTR [rdi+0x0]
  40916e:	add    BYTE PTR [rax],al
  409170:	rex.WRX xchg rdi,rax
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	(bad)  
  409179:	xchg   edi,eax
	...
  409186:	add    BYTE PTR [rax],al
  409188:	jo     0x409121
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	mov    BYTE PTR [rdi+0x0],dl
  409196:	add    BYTE PTR [rax],al
  409198:	xchg   esi,eax
  409199:	xchg   edi,eax
  40919a:	add    BYTE PTR [rax],al
  40919c:	add    BYTE PTR [rax],al
  40919e:	add    BYTE PTR [rax],al
  4091a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091a1:	xchg   edi,eax
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    BYTE PTR [rax],al
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	mov    dl,0x97
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	rcl    BYTE PTR [rdi+0x0],0x0
  4091b7:	add    al,dl
  4091b9:	xchg   edi,eax
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    BYTE PTR [rax],al
  4091be:	add    BYTE PTR [rax],al
  4091c0:	loop   0x409159
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	not    BYTE PTR [rdi+0x0]
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	add    BYTE PTR [rax+0x0],bl
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	(bad)  
  4091d9:	cwde   
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rax],al
  4091de:	add    BYTE PTR [rax],al
  4091e0:	sbb    BYTE PTR [rax+0x0],bl
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	and    bl,BYTE PTR [rax+0x0]
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	cs cwde 
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	ss cwde 
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	add    BYTE PTR [rax],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	rex cwde 
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	rex.WX cdqe 
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	push   rsp
  409211:	cwde   
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	pop    rsp
  409219:	cwde   
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	cbw    
  409222:	add    BYTE PTR [rax],al
  409224:	add    BYTE PTR [rax],al
  409226:	add    BYTE PTR [rax],al
  409228:	outs   dx,BYTE PTR ds:[rsi]
  409229:	cwde   
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    BYTE PTR [rax],al
  40922e:	add    BYTE PTR [rax],al
  409230:	js     0x4091ca
  409232:	add    BYTE PTR [rax],al
  409234:	add    BYTE PTR [rax],al
  409236:	add    BYTE PTR [rax],al
  409238:	sbb    BYTE PTR [rax+0x0],0x0
  40923f:	add    BYTE PTR [rdx+0x98],cl
  409245:	add    BYTE PTR [rax],al
  409247:	add    BYTE PTR [rax+rbx*4+0x0],dl
  40924e:	add    BYTE PTR [rax],al
  409250:	sahf   
  409251:	cwde   
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	test   al,0x98
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	mov    dl,0x98
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	mov    esp,0x98
  40926d:	add    BYTE PTR [rax],al
  40926f:	add    al,cl
  409271:	cwde   
	...
  40927e:	add    BYTE PTR [rax],al
  409280:	mov    al,0x94
  409282:	add    BYTE PTR [rax],al
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	(bad)  
  409289:	xchg   esp,eax
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	fcom   DWORD PTR [rax+rax*1+0x0]
  409297:	add    al,ch
  409299:	xchg   esp,eax
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	clc    
  4092a1:	xchg   esp,eax
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	add    al,0x95
  4092aa:	add    BYTE PTR [rax],al
  4092ac:	add    BYTE PTR [rax],al
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	adc    BYTE PTR [rbp+0x0],dl
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	and    BYTE PTR [rbp+0x0],dl
  4092be:	add    BYTE PTR [rax],al
  4092c0:	xor    al,0x95
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	rex xchg ebp,eax
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    BYTE PTR [rax],al
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	push   rsp
  4092d1:	xchg   ebp,eax
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	pop    rsp
  4092d9:	xchg   ebp,eax
  4092da:	add    BYTE PTR [rax],al
  4092dc:	add    BYTE PTR [rax],al
  4092de:	add    BYTE PTR [rax],al
  4092e0:	push   0x95
  4092e5:	add    BYTE PTR [rax],al
  4092e7:	add    BYTE PTR [rax-0x6b],bh
	...
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	mov    BYTE PTR [rbp+0x0],dl
  4092fe:	add    BYTE PTR [rax],al
  409300:	movabs al,ds:0xb800000000000095
  409309:	xchg   ebp,eax
  40930a:	add    BYTE PTR [rax],al
  40930c:	add    BYTE PTR [rax],al
  40930e:	add    BYTE PTR [rax],al
  409310:	int3   
  409311:	xchg   ebp,eax
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	loop   0x4092af
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	clc    
  409321:	xchg   ebp,eax
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	or     BYTE PTR [rsi+0x0],dl
  40932e:	add    BYTE PTR [rax],al
  409330:	sbb    dl,BYTE PTR [rsi+0x0]
  409336:	add    BYTE PTR [rax],al
  409338:	xor    al,0x96
  40933a:	add    BYTE PTR [rax],al
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	rex.R xchg esi,eax
  409342:	add    BYTE PTR [rax],al
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rax],al
  409348:	(bad)  
  409349:	xchg   esi,eax
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	js     0x4092e8
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	xchg   edx,eax
  409359:	xchg   esi,eax
  40935a:	add    BYTE PTR [rax],al
  40935c:	add    BYTE PTR [rax],al
  40935e:	add    BYTE PTR [rax],al
  409360:	test   al,0x96
  409362:	add    BYTE PTR [rax],al
  409364:	add    BYTE PTR [rax],al
  409366:	add    BYTE PTR [rax],al
  409368:	mov    esp,0x96
  40936d:	add    BYTE PTR [rax],al
  40936f:	add    dh,dl
  409371:	xchg   esi,eax
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	(bad)  
  409379:	xchg   esi,eax
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	or     BYTE PTR [rdi+0x0],dl
  409386:	add    BYTE PTR [rax],al
  409388:	adc    BYTE PTR [rdi+0x0],dl
  40938e:	add    BYTE PTR [rax],al
  409390:	and    al,0x97
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	xor    dl,BYTE PTR [rdi+0x0]
  40939e:	add    BYTE PTR [rax],al
  4093a0:	rex.WRX xchg rdi,rax
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	add    BYTE PTR [rax],al
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	(bad)  
  4093a9:	xchg   edi,eax
	...
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	jo     0x409351
  4093ba:	add    BYTE PTR [rax],al
  4093bc:	add    BYTE PTR [rax],al
  4093be:	add    BYTE PTR [rax],al
  4093c0:	mov    BYTE PTR [rdi+0x0],dl
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	xchg   esi,eax
  4093c9:	xchg   edi,eax
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	add    BYTE PTR [rax],al
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4093d1:	xchg   edi,eax
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	add    BYTE PTR [rax],al
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	mov    dl,0x97
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
  4093de:	add    BYTE PTR [rax],al
  4093e0:	rcl    BYTE PTR [rdi+0x0],0x0
  4093e7:	add    al,dl
  4093e9:	xchg   edi,eax
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	loop   0x409389
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	not    BYTE PTR [rdi+0x0]
  4093fe:	add    BYTE PTR [rax],al
  409400:	add    BYTE PTR [rax+0x0],bl
  409406:	add    BYTE PTR [rax],al
  409408:	(bad)  
  409409:	cwde   
  40940a:	add    BYTE PTR [rax],al
  40940c:	add    BYTE PTR [rax],al
  40940e:	add    BYTE PTR [rax],al
  409410:	sbb    BYTE PTR [rax+0x0],bl
  409416:	add    BYTE PTR [rax],al
  409418:	and    bl,BYTE PTR [rax+0x0]
  40941e:	add    BYTE PTR [rax],al
  409420:	cs cwde 
  409422:	add    BYTE PTR [rax],al
  409424:	add    BYTE PTR [rax],al
  409426:	add    BYTE PTR [rax],al
  409428:	ss cwde 
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	rex cwde 
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	rex.WX cdqe 
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	push   rsp
  409441:	cwde   
  409442:	add    BYTE PTR [rax],al
  409444:	add    BYTE PTR [rax],al
  409446:	add    BYTE PTR [rax],al
  409448:	pop    rsp
  409449:	cwde   
  40944a:	add    BYTE PTR [rax],al
  40944c:	add    BYTE PTR [rax],al
  40944e:	add    BYTE PTR [rax],al
  409450:	cbw    
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	outs   dx,BYTE PTR ds:[rsi]
  409459:	cwde   
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
  40945e:	add    BYTE PTR [rax],al
  409460:	js     0x4093fa
  409462:	add    BYTE PTR [rax],al
  409464:	add    BYTE PTR [rax],al
  409466:	add    BYTE PTR [rax],al
  409468:	sbb    BYTE PTR [rax+0x0],0x0
  40946f:	add    BYTE PTR [rdx+0x98],cl
  409475:	add    BYTE PTR [rax],al
  409477:	add    BYTE PTR [rax+rbx*4+0x0],dl
  40947e:	add    BYTE PTR [rax],al
  409480:	sahf   
  409481:	cwde   
  409482:	add    BYTE PTR [rax],al
  409484:	add    BYTE PTR [rax],al
  409486:	add    BYTE PTR [rax],al
  409488:	test   al,0x98
  40948a:	add    BYTE PTR [rax],al
  40948c:	add    BYTE PTR [rax],al
  40948e:	add    BYTE PTR [rax],al
  409490:	mov    dl,0x98
  409492:	add    BYTE PTR [rax],al
  409494:	add    BYTE PTR [rax],al
  409496:	add    BYTE PTR [rax],al
  409498:	mov    esp,0x98
  40949d:	add    BYTE PTR [rax],al
  40949f:	add    al,cl
  4094a1:	cwde   
	...
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	sbb    al,0x0
  4094b2:	jno    0x40951c
  4094b4:	pop    rdi
  4094b5:	movsxd ebp,DWORD PTR [rax+0x65]
  4094b8:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4094bb:	outs   dx,DWORD PTR ds:[rsi]
  4094bc:	jne    0x409532
  4094be:	jo     0x409535
  4094c0:	je     0x4094c2
  4094c2:	add    BYTE PTR [rax],al
  4094c4:	(bad)  
  4094c5:	add    BYTE PTR [rcx+0x68],dh
  4094c8:	pop    rdi
  4094c9:	movsxd ebp,DWORD PTR [rax+0x65]
  4094cc:	movsxd ebp,DWORD PTR [rbx+0x5f]
  4094cf:	jo     0x409540
  4094d1:	imul   ebp,DWORD PTR [rsi+0x74],0x73
  4094d8:	and    al,BYTE PTR [rax]
  4094da:	jno    0x409544
  4094dc:	pop    rdi
  4094dd:	movsxd ebp,DWORD PTR [rax+0x65]
  4094e0:	movsxd ebp,DWORD PTR [rbx+0x66]
  4094e3:	ins    BYTE PTR es:[rdi],dx
  4094e4:	(bad)  
  4094e5:	addr32 jae 0x4094e8
  4094e8:	add    BYTE PTR gs:[rcx+0x68],dh
  4094ec:	pop    rdi
  4094ed:	data16 jb 0x409555
  4094f0:	gs jno 0x40955b
  4094f3:	jne    0x409561
  4094f5:	ins    BYTE PTR es:[rdi],dx
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	ja     0x4094fa
  4094fa:	jno    0x409564
  4094fc:	pop    rdi
  4094fd:	imul   ebp,DWORD PTR [rsi+0x69],0x415f74
  409504:	js     0x409506
  409506:	jno    0x409570
  409508:	pop    rdi
  409509:	imul   ebp,DWORD PTR [rsi+0x69],0x425f74
  409510:	jnp    0x409512
  409512:	jno    0x40957c
  409514:	pop    rdi
  409515:	imul   ebp,DWORD PTR [rsi+0x69],0x616c6674
  40951c:	addr32 jae 0x40951f
  40951f:	add    BYTE PTR [rbx+0x5f687100],bl
  409525:	ins    DWORD PTR es:[rdi],dx
  409526:	gs ins DWORD PTR es:[rdi],dx
  409528:	data16 jb 0x409590
  40952b:	gs jae 0x409596
  40952e:	outs   dx,DWORD PTR ds:[rsi]
  40952f:	jb     0x4095a5
  409531:	add    BYTE PTR [rax],al
  409533:	add    dl,al
  409535:	add    BYTE PTR [rcx+0x68],dh
  409538:	pop    rdi
  409539:	outs   dx,DWORD PTR ds:[rsi]
  40953a:	jo     0x4095b0
  40953c:	imul   ebp,DWORD PTR [rdi+0x6e],0x71010e00
  409543:	push   0x6f72705f
  409548:	fs jne 0x4095ae
  40954b:	gs pop rdi
  40954d:	outs   dx,DWORD PTR ds:[rsi]
  40954e:	jne    0x4095c4
  409550:	jo     0x4095c7
  409552:	je     0x409554
  409554:	adc    eax,DWORD PTR [rcx]
  409556:	jno    0x4095c0
  409558:	pop    rdi
  409559:	jno    0x4095c3
  40955b:	add    BYTE PTR [rip+0x5f687101],dl        # 0x5fa90662
  409561:	jno    0x4095cb
  409563:	jne    0x4095d1
  409565:	ins    BYTE PTR es:[rdi],dx
  409566:	add    BYTE PTR [rax],al
  409568:	sbb    eax,DWORD PTR [rcx]
  40956a:	jno    0x4095d4
  40956c:	pop    rdi
  40956d:	jb     0x4095d4
  40956f:	(bad)  
  409570:	fs jo  0x4095e2
  409573:	imul   ebp,DWORD PTR [rsi+0x74],0x16b0073
  40957a:	jno    0x4095e4
  40957c:	pop    rdi
  40957d:	jbe    0x4095e4
  40957f:	jb     0x4095f4
  409581:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  409588:	fadd   DWORD PTR [rax]
  40958a:	rex.R
  40958b:	gs ins BYTE PTR es:[rdi],dx
  40958d:	gs je  0x4095f5
  409590:	rex.XB jb 0x4095fc
  409593:	je     0x4095fe
  409595:	movsxd esp,DWORD PTR [rcx+0x6c]
  409598:	push   rbx
  409599:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40959e:	outs   dx,BYTE PTR ds:[rsi]
  40959f:	add    al,bh
  4095a1:	add    BYTE PTR [rbp+0x6e],al
  4095a4:	je     0x40960b
  4095a6:	jb     0x4095eb
  4095a8:	jb     0x409613
  4095aa:	je     0x409615
  4095ac:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095af:	push   rbx
  4095b0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095b5:	outs   dx,BYTE PTR ds:[rsi]
  4095b6:	add    BYTE PTR [rax],al
  4095b8:	int    0x1
  4095ba:	rex.RXB
  4095bb:	gs je  0x409601
  4095be:	jne    0x409632
  4095c0:	jb     0x409627
  4095c2:	outs   dx,BYTE PTR ds:[rsi]
  4095c3:	je     0x409615
  4095c5:	jb     0x409636
  4095c7:	movsxd esp,DWORD PTR [rbp+0x73]
  4095ca:	jae    0x4095cc
  4095cc:	(bad)  
  4095cd:	add    DWORD PTR [rdi+0x65],eax
  4095d0:	je     0x409615
  4095d2:	jne    0x409646
  4095d4:	jb     0x40963b
  4095d6:	outs   dx,BYTE PTR ds:[rsi]
  4095d7:	je     0x409629
  4095d9:	jb     0x40964a
  4095db:	movsxd esp,DWORD PTR [rbp+0x73]
  4095de:	jae    0x409629
  4095e0:	fs add dl,dl
  4095e3:	add    DWORD PTR [rdi+0x65],eax
  4095e6:	je     0x40962b
  4095e8:	jne    0x40965c
  4095ea:	jb     0x409651
  4095ec:	outs   dx,BYTE PTR ds:[rsi]
  4095ed:	je     0x409643
  4095ef:	push   0x64616572
  4095f4:	rex.WB
  4095f5:	add    BYTE PTR fs:[rax],al
  4095f8:	adc    BYTE PTR [rdx],al
  4095fa:	rex.RXB
  4095fb:	gs je  0x40964a
  4095fe:	(bad)  
  4095ff:	jae    0x409675
  409601:	rex.RB jb 0x409676
  409604:	outs   dx,DWORD PTR ds:[rsi]
  409605:	jb     0x409607
  409607:	add    BYTE PTR [rbx+0x2],dh
  40960a:	rex.RXB
  40960b:	gs je  0x409661
  40960e:	je     0x409671
  409610:	jb     0x409686
  409612:	jne    0x409684
  409614:	rex.WB outs dx,BYTE PTR ds:[rsi]
  409616:	outs   dx,WORD PTR ds:[rsi]
  409618:	add    BYTE PTR [r10+0x74654702],cl
  40961f:	push   rbx
  409620:	jns    0x409695
  409622:	je     0x409689
  409624:	ins    DWORD PTR es:[rdi],dx
  409625:	push   rsp
  409626:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  40962d:	ins    BYTE PTR es:[rdi],dx
  40962e:	gs push rsp
  409630:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  409637:	gs je  0x40968e
  40963a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  409641:	je     0x409643
  409643:	add    cl,bh
  409645:	add    cl,BYTE PTR [rcx+0x6e]
  409648:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  409650:	rex.XB jb 0x4096bc
  409653:	je     0x4096be
  409655:	movsxd esp,DWORD PTR [rcx+0x6c]
  409658:	push   rbx
  409659:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40965e:	outs   dx,BYTE PTR ds:[rsi]
  40965f:	add    BYTE PTR [rbx+0x3],cl
  409662:	rex.WR
  409663:	gs (bad) 
  409665:	jbe    0x4096cc
  409667:	rex.XB jb 0x4096d3
  40966a:	je     0x4096d5
  40966c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40966f:	push   rbx
  409670:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409675:	outs   dx,BYTE PTR ds:[rsi]
  409676:	add    BYTE PTR [rax],al
  409678:	mov    ebx,0x65755103
  40967d:	jb     0x4096f8
  40967f:	push   rax
  409680:	gs jb  0x4096e9
  409683:	outs   dx,DWORD PTR ds:[rsi]
  409684:	jb     0x4096f3
  409686:	(bad)  
  409687:	outs   dx,BYTE PTR ds:[rsi]
  409688:	movsxd esp,DWORD PTR [rbp+0x43]
  40968b:	outs   dx,DWORD PTR ds:[rsi]
  40968c:	jne    0x4096fc
  40968e:	je     0x4096f5
  409690:	jb     0x409692
  409692:	add    DWORD PTR [rdx+rdx*2],eax
  409695:	je     0x409703
  409697:	rex.B
  409698:	fs fs rex.RX jne 0x40970b
  40969d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096a1:	outs   dx,BYTE PTR ds:[rsi]
  4096a2:	push   rsp
  4096a3:	(bad)  
  4096a4:	(bad)  
  4096a5:	ins    BYTE PTR es:[rdi],dx
  4096a6:	add    BYTE PTR gs:[rdx],al
  4096a9:	add    al,0x52
  4096ab:	je     0x409719
  4096ad:	rex.XB (bad) 
  4096af:	jo     0x409725
  4096b1:	jne    0x409725
  4096b3:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4096b6:	outs   dx,BYTE PTR ds:[rsi]
  4096b7:	je     0x40971e
  4096b9:	js     0x40972f
  4096bb:	add    BYTE PTR [rcx],cl
  4096bd:	add    al,0x52
  4096bf:	je     0x40972d
  4096c1:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4096c3:	outs   dx,DWORD PTR ds:[rsi]
  4096c4:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4096c8:	jne    0x409738
  4096ca:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4096ce:	outs   dx,BYTE PTR ds:[rsi]
  4096cf:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4096d1:	je     0x409745
  4096d3:	jns    0x4096d5
  4096d5:	add    BYTE PTR [rax],dl
  4096d7:	add    al,0x52
  4096d9:	je     0x409747
  4096db:	push   rsi
  4096dc:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4096e3:	outs   dx,BYTE PTR ds:[rsi]
  4096e4:	ja     0x40974f
  4096e6:	outs   dx,BYTE PTR ds:[rsi]
  4096e7:	add    BYTE PTR fs:[rax],al
  4096ea:	lahf   
  4096eb:	add    al,0x53
  4096ed:	gs je  0x409745
  4096f0:	outs   dx,BYTE PTR ds:[rsi]
  4096f1:	push   0x6c646e61
  4096f6:	gs fs rex.RB js 0x40975e
  4096fb:	gs jo  0x409772
  4096fe:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409705:	gs jb  0x409708
  409708:	lods   al,BYTE PTR ds:[rsi]
  409709:	add    al,0x53
  40970b:	ins    BYTE PTR es:[rdi],dx
  40970c:	gs gs jo 0x409710
  409710:	mov    edx,0x72655404
  409715:	ins    DWORD PTR es:[rdi],dx
  409716:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40971d:	outs   dx,DWORD PTR ds:[rsi]
  40971e:	movsxd esp,DWORD PTR [rbp+0x73]
  409721:	jae    0x409723
  409723:	add    cl,al
  409725:	add    al,0x54
  409727:	ins    BYTE PTR es:[rdi],dx
  409728:	jae    0x409771
  40972a:	gs je  0x409783
  40972d:	(bad)  
  40972e:	ins    BYTE PTR es:[rdi],dx
  40972f:	jne    0x409796
  409731:	add    dh,cl
  409733:	add    al,0x55
  409735:	outs   dx,BYTE PTR ds:[rsi]
  409736:	push   0x6c646e61
  40973b:	gs fs rex.RB js 0x4097a3
  409740:	gs jo  0x4097b7
  409743:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  40974a:	gs jb  0x40974d
  40974d:	add    ah,ch
  40974f:	add    al,0x56
  409751:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  409758:	jb     0x4097c9
  40975a:	je     0x4097c1
  40975c:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  409760:	out    dx,al
  409761:	add    al,0x56
  409763:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40976a:	jne    0x4097d1
  40976c:	jb     0x4097e7
  40976e:	add    BYTE PTR [rax],al
  409770:	(bad)  
  409771:	add    BYTE PTR [rdi+0x5f],bl
  409774:	rex.XB pop r15
  409776:	jae    0x4097e8
  409778:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  40977c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409783:	ins    BYTE PTR es:[rdi],dx
  409784:	gs jb  0x409787
  409787:	add    BYTE PTR [rsi+0x0],cl
  40978a:	pop    rdi
  40978b:	pop    rdi
  40978c:	fs ins BYTE PTR es:[rdi],dx
  40978e:	ins    BYTE PTR es:[rdi],dx
  40978f:	outs   dx,DWORD PTR ds:[rsi]
  409790:	outs   dx,BYTE PTR ds:[rsi]
  409791:	gs js  0x4097fd
  409794:	je     0x409796
  409796:	push   rcx
  409797:	add    BYTE PTR [rdi+0x5f],bl
  40979a:	addr32 gs je 0x40980b
  40979e:	(bad)  
  40979f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4097a6:	push   rdx
  4097a7:	add    BYTE PTR [rdi+0x5f],bl
  4097aa:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4097b1:	add    BYTE PTR [rbx+0x0],dl
  4097b4:	pop    rdi
  4097b5:	pop    rdi
  4097b6:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4097bd:	movsxd eax,DWORD PTR [rax]
  4097bf:	add    BYTE PTR [rdx+0x0],bl
  4097c2:	pop    rdi
  4097c3:	pop    rdi
  4097c4:	ins    BYTE PTR es:[rdi],dx
  4097c5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4097c8:	jbe    0x409829
  4097ca:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  4097d1:	add    BYTE PTR [rdi+0x5f],bl
  4097d4:	jae    0x40983b
  4097d6:	je     0x409837
  4097d8:	(bad)  
  4097d9:	jo     0x40984b
  4097db:	pop    rdi
  4097dc:	je     0x409857
  4097de:	jo     0x409845
  4097e0:	add    BYTE PTR [rax],al
  4097e2:	(bad)  
  4097e3:	add    BYTE PTR [rdi+0x5f],bl
  4097e6:	jae    0x40984d
  4097e8:	je     0x40985f
  4097ea:	jae    0x409851
  4097ec:	jb     0x40985b
  4097ee:	(bad)  
  4097ef:	je     0x409859
  4097f1:	gs jb  0x409866
  4097f4:	add    BYTE PTR [rax],al
  4097f6:	jno    0x4097f8
  4097f8:	pop    rdi
  4097f9:	(bad)  
  4097fa:	movsxd ebp,DWORD PTR [rbp+0x64]
  4097fd:	ins    BYTE PTR es:[rdi],dx
  4097fe:	outs   dx,BYTE PTR ds:[rsi]
  4097ff:	add    BYTE PTR [rax+0x0],bh
  409802:	pop    rdi
  409803:	(bad)  
  409804:	ins    DWORD PTR es:[rdi],dx
  409805:	jae    0x40986e
  409807:	pop    rdi
  409808:	gs js  0x409874
  40980b:	je     0x40980d
  40980d:	add    BYTE PTR [rdx+0x65635f00],cl
  409813:	js     0x40987e
  409815:	je     0x409817
  409817:	add    dl,bl
  409819:	add    BYTE PTR [rdi+0x66],bl
  40981c:	ins    DWORD PTR es:[rdi],dx
  40981d:	outs   dx,DWORD PTR ds:[rsi]
  40981e:	fs add BYTE PTR gs:[rax],al
  409822:	sbb    al,BYTE PTR [rcx]
  409824:	pop    rdi
  409825:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  40982c:	ins    DWORD PTR es:[rdi],dx
  40982d:	add    BYTE PTR [rax+0x6f6c5f01],al
  409833:	movsxd ebp,DWORD PTR [rbx+0x0]
  409836:	and    eax,0x6e6f5f02
  40983b:	gs js  0x4098a7
  40983e:	je     0x409840
  409840:	push   rdx
  409841:	add    bl,BYTE PTR [rdi+0x73]
  409844:	gs je  0x4098b1
  409847:	ins    DWORD PTR es:[rdi],dx
  409848:	jo     0x40984a
  40984a:	(bad)
  40984e:	outs   dx,BYTE PTR ds:[rsi]
  40984f:	ins    BYTE PTR es:[rdi],dx
  409850:	outs   dx,DWORD PTR ds:[rsi]
  409851:	movsxd ebp,DWORD PTR [rbx+0x0]
  409854:	jg     0x409859
  409856:	(bad)  
  409857:	(bad)  
  409858:	outs   dx,DWORD PTR ds:[rsi]
  409859:	jb     0x4098cf
  40985b:	add    BYTE PTR [rax+0x6c616303],dl
  409861:	ins    BYTE PTR es:[rdi],dx
  409862:	outs   dx,DWORD PTR ds:[rsi]
  409863:	movsxd eax,DWORD PTR [rax]
  409865:	add    BYTE PTR [rbp+0x69786503],bl
  40986b:	je     0x40986d
  40986d:	add    BYTE PTR [rax+0x72706603],dh
  409873:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  40987a:	data16 jb 0x4098e2
  40987d:	add    BYTE PTR gs:[rax],al
  409880:	ret    0x6603
  409883:	ja     0x4098f7
  409885:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40988d:	(bad)  
  40988e:	ins    BYTE PTR es:[rdi],dx
  40988f:	ins    BYTE PTR es:[rdi],dx
  409890:	outs   dx,DWORD PTR ds:[rsi]
  409891:	movsxd eax,DWORD PTR [rax]
  409893:	add    al,bh
  409895:	add    ebp,DWORD PTR [rbp+0x65]
  409898:	ins    DWORD PTR es:[rdi],dx
  409899:	movsxd esi,DWORD PTR [rax+0x79]
  40989c:	add    BYTE PTR [rax],al
  40989e:	(bad)  
  40989f:	add    al,0x73
  4098a1:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  4098a8:	sub    eax,DWORD PTR [rbx+rsi*2]
  4098ab:	je     0x40991f
  4098ad:	ins    BYTE PTR es:[rdi],dx
  4098ae:	outs   dx,BYTE PTR gs:[rsi]
  4098b0:	add    BYTE PTR [rax],al
  4098b2:	cs add al,0x73
  4098b5:	je     0x409929
  4098b7:	outs   dx,BYTE PTR ds:[rsi]
  4098b8:	movsxd ebp,DWORD PTR [rbp+0x70]
  4098bb:	add    BYTE PTR [rsi+0x4],cl
  4098be:	jbe    0x409926
  4098c0:	jo     0x409934
  4098c2:	imul   ebp,DWORD PTR [rsi+0x74],0xde000066
  4098c9:	add    al,0x5f
  4098cb:	imul   esi,DWORD PTR [rbx+0x61],0x797474
  4098d2:	add    BYTE PTR [rax],al
  4098d4:	add    BYTE PTR [rax-0x70000000],dl
  4098da:	add    BYTE PTR [rax],al
  4098dc:	add    BYTE PTR [rax-0x70000000],dl
  4098e2:	add    BYTE PTR [rax],al
  4098e4:	add    BYTE PTR [rax-0x70000000],dl
  4098ea:	add    BYTE PTR [rax],al
  4098ec:	add    BYTE PTR [rax-0x70000000],dl
  4098f2:	add    BYTE PTR [rax],al
  4098f4:	add    BYTE PTR [rax-0x70000000],dl
  4098fa:	add    BYTE PTR [rax],al
  4098fc:	add    BYTE PTR [rax-0x70000000],dl
  409902:	add    BYTE PTR [rax],al
  409904:	add    BYTE PTR [rax-0x70000000],dl
  40990a:	add    BYTE PTR [rax],al
  40990c:	ins    BYTE PTR es:[rdi],dx
  40990d:	imul   esp,DWORD PTR [rdx+0x71],0x6c6c7568
  409914:	sub    eax,0x6c642e35
  409919:	ins    BYTE PTR es:[rdi],dx
  40991a:	add    BYTE PTR [rax],al
  40991c:	adc    al,0x90
  40991e:	add    BYTE PTR [rax],al
  409920:	adc    al,0x90
  409922:	add    BYTE PTR [rax],al
  409924:	adc    al,0x90
  409926:	add    BYTE PTR [rax],al
  409928:	adc    al,0x90
  40992a:	add    BYTE PTR [rax],al
  40992c:	adc    al,0x90
  40992e:	add    BYTE PTR [rax],al
  409930:	adc    al,0x90
  409932:	add    BYTE PTR [rax],al
  409934:	adc    al,0x90
  409936:	add    BYTE PTR [rax],al
  409938:	adc    al,0x90
  40993a:	add    BYTE PTR [rax],al
  40993c:	adc    al,0x90
  40993e:	add    BYTE PTR [rax],al
  409940:	adc    al,0x90
  409942:	add    BYTE PTR [rax],al
  409944:	adc    al,0x90
  409946:	add    BYTE PTR [rax],al
  409948:	adc    al,0x90
  40994a:	add    BYTE PTR [rax],al
  40994c:	adc    al,0x90
  40994e:	add    BYTE PTR [rax],al
  409950:	adc    al,0x90
  409952:	add    BYTE PTR [rax],al
  409954:	adc    al,0x90
  409956:	add    BYTE PTR [rax],al
  409958:	adc    al,0x90
  40995a:	add    BYTE PTR [rax],al
  40995c:	adc    al,0x90
  40995e:	add    BYTE PTR [rax],al
  409960:	adc    al,0x90
  409962:	add    BYTE PTR [rax],al
  409964:	adc    al,0x90
  409966:	add    BYTE PTR [rax],al
  409968:	adc    al,0x90
  40996a:	add    BYTE PTR [rax],al
  40996c:	adc    al,0x90
  40996e:	add    BYTE PTR [rax],al
  409970:	adc    al,0x90
  409972:	add    BYTE PTR [rax],al
  409974:	adc    al,0x90
  409976:	add    BYTE PTR [rax],al
  409978:	rex.WXB
  409979:	rex.RB push r10
  40997b:	rex.WRX
  40997c:	rex.RB
  40997d:	xor    r14,QWORD PTR [rdx]
  409980:	cs fs ins BYTE PTR es:[rdi],dx
  409983:	ins    BYTE PTR es:[rdi],dx
  409984:	add    BYTE PTR [rax],al
  409986:	add    BYTE PTR [rax],al
  409988:	sub    BYTE PTR [rax-0x6fd80000],dl
  40998e:	add    BYTE PTR [rax],al
  409990:	sub    BYTE PTR [rax-0x6fd80000],dl
  409996:	add    BYTE PTR [rax],al
  409998:	sub    BYTE PTR [rax-0x6fd80000],dl
  40999e:	add    BYTE PTR [rax],al
  4099a0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099a6:	add    BYTE PTR [rax],al
  4099a8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ae:	add    BYTE PTR [rax],al
  4099b0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099b6:	add    BYTE PTR [rax],al
  4099b8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099be:	add    BYTE PTR [rax],al
  4099c0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099c6:	add    BYTE PTR [rax],al
  4099c8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ce:	add    BYTE PTR [rax],al
  4099d0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099d6:	add    BYTE PTR [rax],al
  4099d8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099de:	add    BYTE PTR [rax],al
  4099e0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099e6:	add    BYTE PTR [rax],al
  4099e8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099ee:	add    BYTE PTR [rax],al
  4099f0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099f6:	add    BYTE PTR [rax],al
  4099f8:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099fe:	add    BYTE PTR [rax],al
  409a00:	ins    DWORD PTR es:[rdi],dx
  409a01:	jae    0x409a79
  409a03:	movsxd esi,DWORD PTR [rdx+0x74]
  409a06:	cs fs ins BYTE PTR es:[rdi],dx
  409a09:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    BYTE PTR [rax],ah
  40a029:	(bad)  
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax+0x19],dl
  40a042:	add    BYTE PTR [rax],al
  40a045:	add    BYTE PTR [rax],al
  40a047:	add    BYTE PTR [rax],ah
  40a049:	sbb    DWORD PTR [rax+0x0],eax
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
