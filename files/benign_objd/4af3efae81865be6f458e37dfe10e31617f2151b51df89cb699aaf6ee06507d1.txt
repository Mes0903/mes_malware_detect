
4af3efae81865be6f458e37dfe10e31617f2151b51df89cb699aaf6ee06507d1.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x1aed5]        # 0x41bef0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x1aed6]        # 0x41bf00
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x1aed9]        # 0x41bf10
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x1ae9c]        # 0x41bee0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x1acff]        # 0x41bd50
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x1ae71]        # 0x41bed0
  40105f:	mov    DWORD PTR [rip+0x1dfa3],edx        # 0x41f008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4160d8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x40bc90
  401081:	mov    rdx,QWORD PTR [rip+0x1ad68]        # 0x41bdf0
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x1ad4e]        # 0x41bde0
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x1add4]        # 0x41be70
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x1aceb]        # 0x41bd90
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x40b870
  4010af:	mov    rax,QWORD PTR [rip+0x1ac2a]        # 0x41bce0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4160d8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xaa49]        # 0x40bb70
  401127:	call   0x40bb60
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x1ad35]        # 0x41bea0
  40116b:	lea    r8,[rip+0x1dea6]        # 0x41f018
  401172:	lea    rdx,[rip+0x1dea7]        # 0x41f020
  401179:	lea    rcx,[rip+0x1dea8]        # 0x41f028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x1de78],eax        # 0x41f000
  401188:	lea    rax,[rip+0x1de71]        # 0x41f000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x1acc5]        # 0x41be60
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4160f0
  4011a3:	mov    DWORD PTR [rip+0x1de67],eax        # 0x41f010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x1ad0a]        # 0x41bed0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x1abcb]        # 0x41bdc0
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x2225e]        # 0x423460
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x1aba7]        # 0x41bdd0
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x1ddba],0x1        # 0x41f004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x1aacc]        # 0x41bd30
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x40be80
  40127d:	lea    rcx,[rip+0xb19c]        # 0x40c420
  401284:	call   QWORD PTR [rip+0x221ce]        # 0x423458
  40128a:	mov    rdx,QWORD PTR [rip+0x1ab1f]        # 0x41bdb0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x40c330
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x416120
  4012a5:	call   0x40bc70
  4012aa:	mov    rax,QWORD PTR [rip+0x1aa9f]        # 0x41bd50
  4012b1:	mov    QWORD PTR [rip+0x20780],rax        # 0x421a38
  4012b8:	mov    rax,QWORD PTR [rip+0x1aac1]        # 0x41bd80
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x20719],rax        # 0x421a30
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x15cca],eax        # 0x417000
  401336:	mov    r12d,DWORD PTR [rip+0x1dceb]        # 0x41f028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x415fe8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x1dcc2]        # 0x41f020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x415f68
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x415fe8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x415fe0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x1dc6a],rbp        # 0x41f020
  4013b6:	call   0x40b840
  4013bb:	mov    rax,QWORD PTR [rip+0x1a99e]        # 0x41bd60
  4013c2:	mov    rdx,QWORD PTR [rip+0x1dc4f]        # 0x41f018
  4013c9:	mov    ecx,DWORD PTR [rip+0x1dc59]        # 0x41f028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x1dc3c]        # 0x41f018
  4013dc:	mov    rdx,QWORD PTR [rip+0x1dc3d]        # 0x41f020
  4013e3:	call   0x416310
  4013e8:	mov    ecx,DWORD PTR [rip+0x1dc1a]        # 0x41f008
  4013ee:	mov    DWORD PTR [rip+0x1dc18],eax        # 0x41f00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x1dc02]        # 0x41f004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4160c0
  40140b:	mov    eax,DWORD PTR [rip+0x1dbfb]        # 0x41f00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x1a999]        # 0x41bdd0
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4160c8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x1a9cd]        # 0x41be30
  401463:	mov    rcx,QWORD PTR [rip+0x1a9b6]        # 0x41be20
  40146a:	call   0x4160b0
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x21f5f]        # 0x4233f8
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x1a9a9]        # 0x41be50
  4014a7:	mov    rcx,QWORD PTR [rip+0x1a992]        # 0x41be40
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4160b0
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x416058
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x1a9f5]        # 0x41bed0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x40b880
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x1a9c5]        # 0x41bed0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x40b880
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	xor    eax,eax
  401532:	ret    
  401533:	nop    DWORD PTR [rax]
  401536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401540:	sub    rsp,0x38
  401544:	mov    QWORD PTR [rsp+0x50],r8
  401549:	lea    r8,[rsp+0x50]
  40154e:	mov    QWORD PTR [rsp+0x58],r9
  401553:	mov    QWORD PTR [rsp+0x28],r8
  401558:	call   0x40cf60
  40155d:	add    rsp,0x38
  401561:	ret    
  401562:	nop    DWORD PTR [rax+0x0]
  401566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401570:	mov    rdx,QWORD PTR [rdx]
  401573:	mov    rcx,QWORD PTR [rcx]
  401576:	jmp    0x415f88
  40157b:	nop    DWORD PTR [rax+rax*1+0x0]
  401580:	mov    rdx,QWORD PTR [rdx]
  401583:	mov    rcx,QWORD PTR [rcx]
  401586:	jmp    0x415f88
  40158b:	nop    DWORD PTR [rax+rax*1+0x0]
  401590:	sub    rsp,0x38
  401594:	mov    QWORD PTR [rsp+0x48],rdx
  401599:	lea    rdx,[rsp+0x48]
  40159e:	mov    QWORD PTR [rsp+0x50],r8
  4015a3:	mov    QWORD PTR [rsp+0x58],r9
  4015a8:	mov    QWORD PTR [rsp+0x28],rdx
  4015ad:	call   0x40cf90
  4015b2:	add    rsp,0x38
  4015b6:	ret    
  4015b7:	nop    WORD PTR [rax+rax*1+0x0]
  4015c0:	sub    rsp,0x38
  4015c4:	mov    QWORD PTR [rsp+0x50],r8
  4015c9:	lea    r8,[rsp+0x50]
  4015ce:	mov    QWORD PTR [rsp+0x58],r9
  4015d3:	mov    QWORD PTR [rsp+0x28],r8
  4015d8:	call   0x40cfd0
  4015dd:	add    rsp,0x38
  4015e1:	ret    
  4015e2:	nop    DWORD PTR [rax+0x0]
  4015e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015f0:	push   rbx
  4015f1:	sub    rsp,0x20
  4015f5:	mov    eax,DWORD PTR [rdx]
  4015f7:	mov    rbx,rcx
  4015fa:	mov    rcx,QWORD PTR [rcx]
  4015fd:	test   rcx,rcx
  401600:	je     0x401606
  401602:	test   eax,eax
  401604:	jne    0x401621
  401606:	add    eax,0x64
  401609:	mov    DWORD PTR [rdx],eax
  40160b:	movsxd rcx,eax
  40160e:	call   0x415fe8
  401613:	mov    QWORD PTR [rbx],rax
  401616:	test   rax,rax
  401619:	je     0x401633
  40161b:	add    rsp,0x20
  40161f:	pop    rbx
  401620:	ret    
  401621:	add    eax,0x64
  401624:	mov    DWORD PTR [rdx],eax
  401626:	movsxd rdx,eax
  401629:	call   0x415fb0
  40162e:	mov    QWORD PTR [rbx],rax
  401631:	jmp    0x401616
  401633:	mov    rbx,QWORD PTR [rip+0x2040e]        # 0x421a48
  40163a:	call   QWORD PTR [rip+0x21e88]        # 0x4234c8
  401640:	lea    rdx,[rip+0x169d9]        # 0x418020
  401647:	lea    rcx,[rax+0x60]
  40164b:	mov    r8,rbx
  40164e:	call   0x401540
  401653:	mov    ecx,0x3
  401658:	call   0x416058
  40165d:	nop
  40165e:	xchg   ax,ax
  401660:	push   rdi
  401661:	push   rsi
  401662:	push   rbx
  401663:	sub    rsp,0x20
  401667:	lea    esi,[rdx-0x1]
  40166a:	test   esi,esi
  40166c:	jle    0x4016a2
  40166e:	movsxd rax,esi
  401671:	mov    rdi,QWORD PTR [rip+0x15db0]        # 0x417428
  401678:	lea    rbx,[rcx+rax*1]
  40167c:	movsx  edx,BYTE PTR [rbx]
  40167f:	jmp    0x401695
  401681:	movsx  edx,BYTE PTR [rbx-0x1]
  401685:	sub    esi,0x1
  401688:	cmp    dl,0x5f
  40168b:	je     0x4016b0
  40168d:	sub    rbx,0x1
  401691:	test   esi,esi
  401693:	je     0x4016a2
  401695:	mov    rcx,rdi
  401698:	call   0x415f90
  40169d:	test   rax,rax
  4016a0:	jne    0x401681
  4016a2:	xor    eax,eax
  4016a4:	add    rsp,0x20
  4016a8:	pop    rbx
  4016a9:	pop    rsi
  4016aa:	pop    rdi
  4016ab:	ret    
  4016ac:	nop    DWORD PTR [rax+0x0]
  4016b0:	mov    eax,0x1
  4016b5:	add    rsp,0x20
  4016b9:	pop    rbx
  4016ba:	pop    rsi
  4016bb:	pop    rdi
  4016bc:	ret    
  4016bd:	nop    DWORD PTR [rax]
  4016c0:	push   r14
  4016c2:	push   r13
  4016c4:	push   r12
  4016c6:	push   rbp
  4016c7:	push   rdi
  4016c8:	push   rsi
  4016c9:	push   rbx
  4016ca:	sub    rsp,0x40
  4016ce:	lea    rax,[rip+0x16979]        # 0x41804e
  4016d5:	lea    r12,[rip+0x1696e]        # 0x41804a
  4016dc:	lea    rsi,[rip+0x1696b]        # 0x41804e
  4016e3:	lea    rbp,[rsp+0x20]
  4016e8:	mov    rdi,rcx
  4016eb:	mov    QWORD PTR [rsp+0x38],0x0
  4016f4:	mov    QWORD PTR [rsp+0x20],rax
  4016f9:	lea    rax,[rip+0x1694a]        # 0x41804a
  401700:	mov    QWORD PTR [rsp+0x28],rax
  401705:	lea    rax,[rip+0x16946]        # 0x418052
  40170c:	mov    QWORD PTR [rsp+0x30],rax
  401711:	mov    rbx,rdi
  401714:	mov    r14,rdi
  401717:	nop    WORD PTR [rax+rax*1+0x0]
  401720:	mov    rdx,rsi
  401723:	mov    rcx,r14
  401726:	call   0x415f38
  40172b:	test   rax,rax
  40172e:	mov    r13,rax
  401731:	je     0x401780
  401733:	cmp    r14,rax
  401736:	jae    0x4017ce
  40173c:	mov    r9,rbx
  40173f:	mov    r8,r14
  401742:	add    r8,0x1
  401746:	movzx  r10d,BYTE PTR [r8-0x1]
  40174b:	add    r9,0x1
  40174f:	cmp    r8,r13
  401752:	mov    BYTE PTR [r9-0x1],r10b
  401756:	jne    0x401742
  401758:	mov    rax,r13
  40175b:	sub    rax,r14
  40175e:	add    rax,rbx
  401761:	mov    BYTE PTR [rax],0x2d
  401764:	mov    rcx,rsi
  401767:	lea    rbx,[rax+0x1]
  40176b:	call   0x415f68
  401770:	lea    r14,[r13+rax*1+0x0]
  401775:	jmp    0x401720
  401777:	nop    WORD PTR [rax+rax*1+0x0]
  401780:	cmp    rdi,r14
  401783:	jb     0x4017ab
  401785:	add    rbp,0x8
  401789:	test   r12,r12
  40178c:	je     0x4017bf
  40178e:	mov    rsi,r12
  401791:	mov    r12,QWORD PTR [rbp+0x8]
  401795:	jmp    0x401711
  40179a:	nop    WORD PTR [rax+rax*1+0x0]
  4017a0:	add    rbx,0x1
  4017a4:	add    r14,0x1
  4017a8:	mov    BYTE PTR [rbx-0x1],al
  4017ab:	movzx  eax,BYTE PTR [r14]
  4017af:	test   al,al
  4017b1:	jne    0x4017a0
  4017b3:	add    rbp,0x8
  4017b7:	test   r12,r12
  4017ba:	mov    BYTE PTR [rbx],0x0
  4017bd:	jne    0x40178e
  4017bf:	add    rsp,0x40
  4017c3:	pop    rbx
  4017c4:	pop    rsi
  4017c5:	pop    rdi
  4017c6:	pop    rbp
  4017c7:	pop    r12
  4017c9:	pop    r13
  4017cb:	pop    r14
  4017cd:	ret    
  4017ce:	mov    rax,rbx
  4017d1:	jmp    0x401761
  4017d3:	nop    DWORD PTR [rax]
  4017d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017e0:	push   rsi
  4017e1:	push   rbx
  4017e2:	sub    rsp,0x28
  4017e6:	movzx  eax,BYTE PTR [rcx]
  4017e9:	mov    rbx,rcx
  4017ec:	mov    rsi,rdx
  4017ef:	test   al,al
  4017f1:	je     0x401811
  4017f3:	movsx  edx,al
  4017f6:	mov    rcx,rsi
  4017f9:	call   0x415f90
  4017fe:	test   rax,rax
  401801:	je     0x401806
  401803:	mov    BYTE PTR [rbx],0x20
  401806:	add    rbx,0x1
  40180a:	movzx  eax,BYTE PTR [rbx]
  40180d:	test   al,al
  40180f:	jne    0x4017f3
  401811:	add    rsp,0x28
  401815:	pop    rbx
  401816:	pop    rsi
  401817:	ret    
  401818:	nop    DWORD PTR [rax+rax*1+0x0]
  401820:	push   r15
  401822:	push   r14
  401824:	push   r13
  401826:	push   r12
  401828:	push   rbp
  401829:	push   rdi
  40182a:	push   rsi
  40182b:	push   rbx
  40182c:	sub    rsp,0x28
  401830:	mov    rbx,rcx
  401833:	mov    r13d,edx
  401836:	mov    r14,r8
  401839:	mov    rbp,r9
  40183c:	call   0x416038
  401841:	test   rax,rax
  401844:	je     0x4018bf
  401846:	lea    r12d,[r13-0x1]
  40184a:	add    DWORD PTR [rbp+0x0],0x1
  40184e:	mov    r15d,0x3
  401854:	movsxd r12,r12d
  401857:	jmp    0x4018a7
  401859:	nop    DWORD PTR [rax+0x0]
  401860:	lea    rsi,[rbx+rax*1-0x2]
  401865:	lea    rdi,[rip+0x167ea]        # 0x418056
  40186c:	mov    rcx,r15
  40186f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401871:	jne    0x4018b5
  401873:	add    DWORD PTR [rbp+0x0],0x1
  401877:	mov    rcx,rbx
  40187a:	call   0x415f68
  40187f:	mov    rcx,rbx
  401882:	mov    BYTE PTR [rbx+rax*1-0x2],0x0
  401887:	call   0x415f68
  40188c:	cmp    rax,r12
  40188f:	jae    0x4018bc
  401891:	mov    edx,r13d
  401894:	lea    rcx,[rbx+rax*1]
  401898:	mov    r8,r14
  40189b:	sub    edx,eax
  40189d:	call   0x416038
  4018a2:	test   rax,rax
  4018a5:	je     0x4018bc
  4018a7:	mov    rcx,rbx
  4018aa:	call   0x415f68
  4018af:	cmp    rax,0x1
  4018b3:	ja     0x401860
  4018b5:	cmp    BYTE PTR [rbx+rax*1-0x1],0x5c
  4018ba:	je     0x4018d0
  4018bc:	mov    rax,rbx
  4018bf:	add    rsp,0x28
  4018c3:	pop    rbx
  4018c4:	pop    rsi
  4018c5:	pop    rdi
  4018c6:	pop    rbp
  4018c7:	pop    r12
  4018c9:	pop    r13
  4018cb:	pop    r14
  4018cd:	pop    r15
  4018cf:	ret    
  4018d0:	mov    rdx,r14
  4018d3:	mov    ecx,0x5c
  4018d8:	call   0x415f08
  4018dd:	mov    rcx,rbx
  4018e0:	call   0x415f68
  4018e5:	mov    BYTE PTR [rbx+rax*1-0x1],0x0
  4018ea:	jmp    0x4018bc
  4018ec:	nop    DWORD PTR [rax+0x0]
  4018f0:	push   r12
  4018f2:	push   rbp
  4018f3:	push   rdi
  4018f4:	push   rsi
  4018f5:	push   rbx
  4018f6:	sub    rsp,0x30
  4018fa:	mov    rbp,rdx
  4018fd:	mov    edx,DWORD PTR [rdx]
  4018ff:	lea    rax,[rsp+0x2c]
  401904:	test   r9,r9
  401907:	mov    rbx,r9
  40190a:	mov    rsi,rcx
  40190d:	cmove  rbx,rax
  401911:	mov    r12,r8
  401914:	test   edx,edx
  401916:	je     0x4019a5
  40191c:	mov    rcx,QWORD PTR [rsi]
  40191f:	mov    r9,rbx
  401922:	mov    r8,r12
  401925:	call   0x401820
  40192a:	test   rax,rax
  40192d:	jne    0x40196a
  40192f:	jmp    0x40198e
  401931:	mov    rcx,r12
  401934:	call   0x416048
  401939:	test   eax,eax
  40193b:	jne    0x4019a0
  40193d:	mov    rdx,rbp
  401940:	mov    rcx,rsi
  401943:	call   0x4015f0
  401948:	mov    rdi,QWORD PTR [rsi]
  40194b:	mov    rcx,rdi
  40194e:	call   0x415f68
  401953:	mov    edx,DWORD PTR [rbp+0x0]
  401956:	lea    rcx,[rdi+rax*1]
  40195a:	mov    r9,rbx
  40195d:	mov    r8,r12
  401960:	sub    edx,eax
  401962:	call   0x401820
  401967:	sub    DWORD PTR [rbx],0x1
  40196a:	mov    rdi,QWORD PTR [rsi]
  40196d:	mov    rcx,rdi
  401970:	call   0x415f68
  401975:	cmp    BYTE PTR [rdi+rax*1-0x1],0xa
  40197a:	jne    0x401931
  40197c:	lea    rdx,[rip+0x166d6]        # 0x418059
  401983:	mov    rcx,rdi
  401986:	call   0x4017e0
  40198b:	mov    rax,QWORD PTR [rsi]
  40198e:	add    rsp,0x30
  401992:	pop    rbx
  401993:	pop    rsi
  401994:	pop    rdi
  401995:	pop    rbp
  401996:	pop    r12
  401998:	ret    
  401999:	nop    DWORD PTR [rax+0x0]
  4019a0:	mov    rdi,QWORD PTR [rsi]
  4019a3:	jmp    0x40197c
  4019a5:	mov    rdx,rbp
  4019a8:	call   0x4015f0
  4019ad:	mov    edx,DWORD PTR [rbp+0x0]
  4019b0:	jmp    0x40191c
  4019b5:	nop
  4019b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019c0:	push   rbx
  4019c1:	sub    rsp,0x20
  4019c5:	movsxd rcx,ecx
  4019c8:	mov    rbx,rdx
  4019cb:	call   0x415fe8
  4019d0:	test   rax,rax
  4019d3:	je     0x4019db
  4019d5:	add    rsp,0x20
  4019d9:	pop    rbx
  4019da:	ret    
  4019db:	mov    rcx,rbx
  4019de:	call   0x4162d0
  4019e3:	nop
  4019e4:	xchg   ax,ax
  4019e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4019f0:	push   rsi
  4019f1:	push   rbx
  4019f2:	sub    rsp,0x28
  4019f6:	mov    rbx,rcx
  4019f9:	call   0x415f68
  4019fe:	lea    r9d,[rax+0x1]
  401a02:	mov    rsi,rax
  401a05:	movsxd rcx,r9d
  401a08:	call   0x415fe8
  401a0d:	test   rax,rax
  401a10:	je     0x401a28
  401a12:	lea    r8,[rsi+0x1]
  401a16:	mov    rdx,rbx
  401a19:	mov    rcx,rax
  401a1c:	call   0x415fe0
  401a21:	add    rsp,0x28
  401a25:	pop    rbx
  401a26:	pop    rsi
  401a27:	ret    
  401a28:	lea    rcx,[rip+0x1662e]        # 0x41805d
  401a2f:	call   0x4162d0
  401a34:	nop
  401a35:	nop
  401a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a40:	movsx  edx,BYTE PTR [rcx]
  401a43:	test   dl,dl
  401a45:	je     0x401a88
  401a47:	xor    r8d,r8d
  401a4a:	nop    WORD PTR [rax+rax*1+0x0]
  401a50:	mov    eax,r8d
  401a53:	add    rcx,0x1
  401a57:	shl    eax,0x5
  401a5a:	sub    eax,r8d
  401a5d:	lea    r8d,[rax+rdx*1]
  401a61:	movsx  edx,BYTE PTR [rcx]
  401a64:	test   dl,dl
  401a66:	jne    0x401a50
  401a68:	mov    eax,r8d
  401a6b:	mov    edx,0x446f8657
  401a70:	mul    edx
  401a72:	mov    eax,r8d
  401a75:	sub    eax,edx
  401a77:	shr    eax,1
  401a79:	add    eax,edx
  401a7b:	shr    eax,0x6
  401a7e:	imul   eax,eax,0x65
  401a81:	sub    r8d,eax
  401a84:	mov    eax,r8d
  401a87:	ret    
  401a88:	xor    eax,eax
  401a8a:	ret    
  401a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401a90:	push   rsi
  401a91:	push   rbx
  401a92:	sub    rsp,0x28
  401a96:	movsx  edx,BYTE PTR [rcx]
  401a99:	mov    rsi,rcx
  401a9c:	test   dl,dl
  401a9e:	je     0x401b2b
  401aa4:	mov    r9,rcx
  401aa7:	xor    r8d,r8d
  401aaa:	nop    WORD PTR [rax+rax*1+0x0]
  401ab0:	mov    eax,r8d
  401ab3:	add    r9,0x1
  401ab7:	shl    eax,0x5
  401aba:	sub    eax,r8d
  401abd:	lea    r8d,[rax+rdx*1]
  401ac1:	movsx  edx,BYTE PTR [r9]
  401ac5:	test   dl,dl
  401ac7:	jne    0x401ab0
  401ac9:	mov    eax,r8d
  401acc:	mov    edx,0x446f8657
  401ad1:	mul    edx
  401ad3:	mov    eax,r8d
  401ad6:	sub    eax,edx
  401ad8:	shr    eax,1
  401ada:	add    edx,eax
  401adc:	shr    edx,0x6
  401adf:	imul   edx,edx,0x65
  401ae2:	sub    r8d,edx
  401ae5:	mov    edx,r8d
  401ae8:	lea    rax,[rip+0x204d1]        # 0x421fc0
  401aef:	mov    rbx,QWORD PTR [rax+rdx*8]
  401af3:	test   rbx,rbx
  401af6:	jne    0x401b09
  401af8:	jmp    0x401b22
  401afa:	nop    WORD PTR [rax+rax*1+0x0]
  401b00:	mov    rbx,QWORD PTR [rbx+0x20]
  401b04:	test   rbx,rbx
  401b07:	je     0x401b22
  401b09:	mov    rdx,QWORD PTR [rbx]
  401b0c:	mov    rcx,rsi
  401b0f:	call   0x415f88
  401b14:	test   eax,eax
  401b16:	jne    0x401b00
  401b18:	mov    rax,rbx
  401b1b:	add    rsp,0x28
  401b1f:	pop    rbx
  401b20:	pop    rsi
  401b21:	ret    
  401b22:	xor    eax,eax
  401b24:	add    rsp,0x28
  401b28:	pop    rbx
  401b29:	pop    rsi
  401b2a:	ret    
  401b2b:	xor    edx,edx
  401b2d:	jmp    0x401ae8
  401b2f:	nop
  401b30:	push   rdi
  401b31:	push   rsi
  401b32:	push   rbx
  401b33:	sub    rsp,0x20
  401b37:	xor    ebx,ebx
  401b39:	test   rcx,rcx
  401b3c:	je     0x401b60
  401b3e:	call   0x401a90
  401b43:	test   rax,rax
  401b46:	je     0x401b60
  401b48:	mov    rsi,QWORD PTR [rax+0x8]
  401b4c:	lea    rdi,[rip+0x16513]        # 0x418066
  401b53:	mov    ecx,0xf
  401b58:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401b5a:	sete   bl
  401b5d:	movzx  ebx,bl
  401b60:	mov    eax,ebx
  401b62:	add    rsp,0x20
  401b66:	pop    rbx
  401b67:	pop    rsi
  401b68:	pop    rdi
  401b69:	ret    
  401b6a:	nop    WORD PTR [rax+rax*1+0x0]
  401b70:	push   rbx
  401b71:	sub    rsp,0x20
  401b75:	xor    ebx,ebx
  401b77:	test   rcx,rcx
  401b7a:	je     0x401b9c
  401b7c:	call   0x401a90
  401b81:	test   rax,rax
  401b84:	je     0x401b9c
  401b86:	mov    rcx,QWORD PTR [rax+0x8]
  401b8a:	mov    edx,0x21
  401b8f:	xor    ebx,ebx
  401b91:	call   0x415f90
  401b96:	test   rax,rax
  401b99:	setne  bl
  401b9c:	mov    eax,ebx
  401b9e:	add    rsp,0x20
  401ba2:	pop    rbx
  401ba3:	ret    
  401ba4:	xchg   ax,ax
  401ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bb0:	push   r12
  401bb2:	push   rbp
  401bb3:	push   rdi
  401bb4:	push   rsi
  401bb5:	push   rbx
  401bb6:	sub    rsp,0x20
  401bba:	movzx  eax,BYTE PTR [rcx]
  401bbd:	lea    rdx,[rip+0x1ffbc]        # 0x421b80
  401bc4:	and    eax,0x7f
  401bc7:	mov    rbx,QWORD PTR [rdx+rax*8]
  401bcb:	test   rbx,rbx
  401bce:	je     0x401c15
  401bd0:	mov    r12,rcx
  401bd3:	xor    edi,edi
  401bd5:	xor    ebp,ebp
  401bd7:	nop    WORD PTR [rax+rax*1+0x0]
  401be0:	mov    esi,DWORD PTR [rbx]
  401be2:	cmp    esi,edi
  401be4:	jle    0x401bfe
  401be6:	mov    rdx,QWORD PTR [rbx+0x8]
  401bea:	movsxd r8,esi
  401bed:	mov    rcx,r12
  401bf0:	call   0x415f60
  401bf5:	test   eax,eax
  401bf7:	cmove  edi,esi
  401bfa:	cmove  rbp,rbx
  401bfe:	mov    rbx,QWORD PTR [rbx+0x30]
  401c02:	test   rbx,rbx
  401c05:	jne    0x401be0
  401c07:	mov    rax,rbp
  401c0a:	add    rsp,0x20
  401c0e:	pop    rbx
  401c0f:	pop    rsi
  401c10:	pop    rdi
  401c11:	pop    rbp
  401c12:	pop    r12
  401c14:	ret    
  401c15:	xor    ebp,ebp
  401c17:	jmp    0x401c07
  401c19:	nop    DWORD PTR [rax+0x0]
  401c20:	push   r14
  401c22:	push   r13
  401c24:	push   r12
  401c26:	push   rbp
  401c27:	push   rdi
  401c28:	push   rsi
  401c29:	push   rbx
  401c2a:	sub    rsp,0x20
  401c2e:	mov    rax,QWORD PTR [rip+0x1e12b]        # 0x41fd60
  401c35:	test   edx,edx
  401c37:	mov    rsi,rcx
  401c3a:	jne    0x401c77
  401c3c:	mov    rax,QWORD PTR [rip+0x1d425]        # 0x41f068
  401c43:	mov    rdx,QWORD PTR [rip+0x20376]        # 0x421fc0
  401c4a:	mov    DWORD PTR [rip+0x1e114],0x1        # 0x41fd68
  401c54:	mov    DWORD PTR [rip+0x1e0fa],0x0        # 0x41fd58
  401c5e:	mov    QWORD PTR [rip+0x1e0e7],0x0        # 0x41fd50
  401c69:	mov    QWORD PTR [rip+0x1e0f0],rax        # 0x41fd60
  401c70:	mov    QWORD PTR [rip+0x1e0d1],rdx        # 0x41fd48
  401c77:	test   rax,rax
  401c7a:	jne    0x401cd8
  401c7c:	jmp    0x401f48
  401c81:	mov    rbx,QWORD PTR [rip+0x1e0d8]        # 0x41fd60
  401c88:	test   rbx,rbx
  401c8b:	je     0x401f02
  401c91:	mov    rcx,rsi
  401c94:	xor    ebp,ebp
  401c96:	call   0x415f68
  401c9b:	mov    rdi,QWORD PTR [rbx]
  401c9e:	mov    r12,rax
  401ca1:	mov    rcx,rdi
  401ca4:	call   0x415f68
  401ca9:	cmp    r12,rax
  401cac:	ja     0x401cc4
  401cae:	mov    r8,r12
  401cb1:	mov    rdx,rdi
  401cb4:	mov    rcx,rsi
  401cb7:	call   0x415f60
  401cbc:	test   eax,eax
  401cbe:	je     0x401f11
  401cc4:	mov    rax,QWORD PTR [rbx+0x70]
  401cc8:	mov    QWORD PTR [rip+0x1e091],rax        # 0x41fd60
  401ccf:	test   rbp,rbp
  401cd2:	jne    0x401e21
  401cd8:	mov    eax,DWORD PTR [rip+0x1e08a]        # 0x41fd68
  401cde:	test   eax,eax
  401ce0:	jne    0x401c81
  401ce2:	mov    rbx,QWORD PTR [rip+0x1e05f]        # 0x41fd48
  401ce9:	test   rbx,rbx
  401cec:	jne    0x401d3a
  401cee:	mov    eax,DWORD PTR [rip+0x1e064]        # 0x41fd58
  401cf4:	cmp    eax,0x63
  401cf7:	jg     0x401ed1
  401cfd:	add    eax,0x1
  401d00:	lea    r8,[rip+0x202b9]        # 0x421fc0
  401d07:	jmp    0x401d1c
  401d09:	nop    DWORD PTR [rax+0x0]
  401d10:	add    eax,0x1
  401d13:	cmp    eax,0x65
  401d16:	je     0x401ec0
  401d1c:	movsxd rdx,eax
  401d1f:	mov    ecx,eax
  401d21:	mov    rdx,QWORD PTR [r8+rdx*8]
  401d25:	test   rdx,rdx
  401d28:	je     0x401d10
  401d2a:	mov    rbx,rdx
  401d2d:	mov    DWORD PTR [rip+0x1e025],eax        # 0x41fd58
  401d33:	mov    QWORD PTR [rip+0x1e00e],rdx        # 0x41fd48
  401d3a:	mov    rdi,QWORD PTR [rip+0x1e00f]        # 0x41fd50
  401d41:	mov    rbp,rsi
  401d44:	test   rdi,rdi
  401d47:	je     0x401d4f
  401d49:	movsxd rbp,DWORD PTR [rdi]
  401d4c:	add    rbp,rsi
  401d4f:	mov    rcx,rbp
  401d52:	call   0x415f68
  401d57:	mov    r12,QWORD PTR [rbx]
  401d5a:	mov    r13,rax
  401d5d:	mov    rcx,r12
  401d60:	call   0x415f68
  401d65:	cmp    r13,rax
  401d68:	mov    r14,rax
  401d6b:	ja     0x401e33
  401d71:	mov    r8,r13
  401d74:	mov    rdx,rbp
  401d77:	mov    rcx,r12
  401d7a:	call   0x415f60
  401d7f:	test   eax,eax
  401d81:	jne    0x401e33
  401d87:	test   rdi,rdi
  401d8a:	je     0x401f28
  401d90:	mov    eax,DWORD PTR [rdi]
  401d92:	lea    ecx,[rax+r14*1+0x1]
  401d97:	movsxd rcx,ecx
  401d9a:	call   0x415fe8
  401d9f:	test   rax,rax
  401da2:	mov    rbp,rax
  401da5:	je     0x401f69
  401dab:	mov    rdx,QWORD PTR [rdi+0x8]
  401daf:	mov    rcx,rbp
  401db2:	call   0x415f80
  401db7:	mov    rdx,QWORD PTR [rbx]
  401dba:	mov    rcx,rbp
  401dbd:	call   0x415f98
  401dc2:	mov    rax,QWORD PTR [rbx+0x20]
  401dc6:	test   rax,rax
  401dc9:	mov    QWORD PTR [rip+0x1df78],rax        # 0x41fd48
  401dd0:	jne    0x401e21
  401dd2:	mov    edx,DWORD PTR [rip+0x1df80]        # 0x41fd58
  401dd8:	cmp    edx,0x63
  401ddb:	jg     0x401e54
  401ddd:	add    edx,0x1
  401de0:	lea    r8,[rip+0x201d9]        # 0x421fc0
  401de7:	jmp    0x401dfc
  401de9:	nop    DWORD PTR [rax+0x0]
  401df0:	add    edx,0x1
  401df3:	cmp    edx,0x65
  401df6:	je     0x401ee2
  401dfc:	movsxd r9,edx
  401dff:	mov    r10d,edx
  401e02:	mov    r9,QWORD PTR [r8+r9*8]
  401e06:	test   r9,r9
  401e09:	je     0x401df0
  401e0b:	test   rbp,rbp
  401e0e:	mov    DWORD PTR [rip+0x1df44],edx        # 0x41fd58
  401e14:	mov    QWORD PTR [rip+0x1df2d],r9        # 0x41fd48
  401e1b:	je     0x401cd8
  401e21:	mov    rax,rbp
  401e24:	add    rsp,0x20
  401e28:	pop    rbx
  401e29:	pop    rsi
  401e2a:	pop    rdi
  401e2b:	pop    rbp
  401e2c:	pop    r12
  401e2e:	pop    r13
  401e30:	pop    r14
  401e32:	ret    
  401e33:	mov    rax,QWORD PTR [rbx+0x20]
  401e37:	xor    ebp,ebp
  401e39:	test   rax,rax
  401e3c:	mov    QWORD PTR [rip+0x1df05],rax        # 0x41fd48
  401e43:	jne    0x401cd8
  401e49:	mov    edx,DWORD PTR [rip+0x1df09]        # 0x41fd58
  401e4f:	cmp    edx,0x63
  401e52:	jle    0x401ddd
  401e54:	test   rdi,rdi
  401e57:	jne    0x401ccf
  401e5d:	mov    rcx,rsi
  401e60:	call   0x401bb0
  401e65:	test   rax,rax
  401e68:	mov    QWORD PTR [rip+0x1dee1],rax        # 0x41fd50
  401e6f:	je     0x401ccf
  401e75:	mov    rcx,QWORD PTR [rax+0x8]
  401e79:	call   0x415f68
  401e7e:	cmp    rax,0x1
  401e82:	mov    rbx,rax
  401e85:	jbe    0x401f59
  401e8b:	mov    rcx,rsi
  401e8e:	call   0x415f68
  401e93:	cmp    rbx,rax
  401e96:	jae    0x401f59
  401e9c:	mov    rax,QWORD PTR [rip+0x2011d]        # 0x421fc0
  401ea3:	mov    DWORD PTR [rip+0x1deab],0x0        # 0x41fd58
  401ead:	mov    QWORD PTR [rip+0x1de94],rax        # 0x41fd48
  401eb4:	jmp    0x401ccf
  401eb9:	nop    DWORD PTR [rax+0x0]
  401ec0:	mov    DWORD PTR [rip+0x1de92],ecx        # 0x41fd58
  401ec6:	mov    QWORD PTR [rip+0x1de77],0x0        # 0x41fd48
  401ed1:	xor    eax,eax
  401ed3:	add    rsp,0x20
  401ed7:	pop    rbx
  401ed8:	pop    rsi
  401ed9:	pop    rdi
  401eda:	pop    rbp
  401edb:	pop    r12
  401edd:	pop    r13
  401edf:	pop    r14
  401ee1:	ret    
  401ee2:	test   rdi,rdi
  401ee5:	mov    DWORD PTR [rip+0x1de6c],r10d        # 0x41fd58
  401eec:	mov    QWORD PTR [rip+0x1de51],0x0        # 0x41fd48
  401ef7:	jne    0x401ccf
  401efd:	jmp    0x401e5d
  401f02:	mov    DWORD PTR [rip+0x1de5c],0x0        # 0x41fd68
  401f0c:	jmp    0x401ce2
  401f11:	mov    rcx,rdi
  401f14:	call   0x4019f0
  401f19:	mov    rbx,QWORD PTR [rip+0x1de40]        # 0x41fd60
  401f20:	mov    rbp,rax
  401f23:	jmp    0x401cc4
  401f28:	lea    ecx,[r14+0x1]
  401f2c:	movsxd rcx,ecx
  401f2f:	call   0x415fe8
  401f34:	test   rax,rax
  401f37:	mov    rbp,rax
  401f3a:	je     0x401f69
  401f3c:	lea    rdx,[rip+0x16132]        # 0x418075
  401f43:	jmp    0x401daf
  401f48:	mov    DWORD PTR [rip+0x1de16],0x0        # 0x41fd68
  401f52:	xor    eax,eax
  401f54:	jmp    0x401cde
  401f59:	mov    QWORD PTR [rip+0x1ddec],0x0        # 0x41fd50
  401f64:	jmp    0x401ccf
  401f69:	lea    rcx,[rip+0x16106]        # 0x418076
  401f70:	call   0x4162d0
  401f75:	nop
  401f76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f80:	push   rbp
  401f81:	push   rdi
  401f82:	push   rsi
  401f83:	push   rbx
  401f84:	sub    rsp,0x28
  401f88:	mov    rbx,QWORD PTR [rip+0x1d0d9]        # 0x41f068
  401f8f:	test   rbx,rbx
  401f92:	je     0x401fe0
  401f94:	movsxd rdi,edx
  401f97:	mov    rbp,rcx
  401f9a:	jmp    0x401fa9
  401f9c:	nop    DWORD PTR [rax+0x0]
  401fa0:	mov    rbx,QWORD PTR [rbx+0x70]
  401fa4:	test   rbx,rbx
  401fa7:	je     0x401fe0
  401fa9:	mov    rsi,QWORD PTR [rbx]
  401fac:	mov    rcx,rsi
  401faf:	call   0x415f68
  401fb4:	cmp    rax,rdi
  401fb7:	jne    0x401fa0
  401fb9:	mov    r8,rdi
  401fbc:	mov    rdx,rbp
  401fbf:	mov    rcx,rsi
  401fc2:	call   0x415f60
  401fc7:	test   eax,eax
  401fc9:	jne    0x401fa0
  401fcb:	mov    rax,rbx
  401fce:	add    rsp,0x28
  401fd2:	pop    rbx
  401fd3:	pop    rsi
  401fd4:	pop    rdi
  401fd5:	pop    rbp
  401fd6:	ret    
  401fd7:	nop    WORD PTR [rax+rax*1+0x0]
  401fe0:	xor    eax,eax
  401fe2:	add    rsp,0x28
  401fe6:	pop    rbx
  401fe7:	pop    rsi
  401fe8:	pop    rdi
  401fe9:	pop    rbp
  401fea:	ret    
  401feb:	nop    DWORD PTR [rax+rax*1+0x0]
  401ff0:	push   rsi
  401ff1:	push   rbx
  401ff2:	sub    rsp,0x28
  401ff6:	mov    rbx,QWORD PTR [rip+0x1d04b]        # 0x41f048
  401ffd:	mov    rsi,rcx
  402000:	test   rbx,rbx
  402003:	jne    0x402019
  402005:	jmp    0x402032
  402007:	nop    WORD PTR [rax+rax*1+0x0]
  402010:	mov    rbx,QWORD PTR [rbx+0x10]
  402014:	test   rbx,rbx
  402017:	je     0x402032
  402019:	mov    rcx,QWORD PTR [rbx]
  40201c:	mov    rdx,rsi
  40201f:	call   0x415f88
  402024:	test   eax,eax
  402026:	jne    0x402010
  402028:	mov    rax,rbx
  40202b:	add    rsp,0x28
  40202f:	pop    rbx
  402030:	pop    rsi
  402031:	ret    
  402032:	xor    eax,eax
  402034:	add    rsp,0x28
  402038:	pop    rbx
  402039:	pop    rsi
  40203a:	ret    
  40203b:	nop    DWORD PTR [rax+rax*1+0x0]
  402040:	mov    rax,QWORD PTR [rip+0x1d019]        # 0x41f060
  402047:	test   rax,rax
  40204a:	je     0x402060
  40204c:	mov    QWORD PTR [rax+0x70],rcx
  402050:	mov    QWORD PTR [rip+0x1d009],rcx        # 0x41f060
  402057:	mov    QWORD PTR [rcx+0x70],0x0
  40205f:	ret    
  402060:	mov    QWORD PTR [rip+0x1d001],rcx        # 0x41f068
  402067:	mov    QWORD PTR [rip+0x1cff2],rcx        # 0x41f060
  40206e:	mov    QWORD PTR [rcx+0x70],0x0
  402076:	ret    
  402077:	nop    WORD PTR [rax+rax*1+0x0]
  402080:	push   rbx
  402081:	sub    rsp,0x20
  402085:	mov    rbx,rcx
  402088:	mov    rcx,QWORD PTR [rcx+0x58]
  40208c:	test   rcx,rcx
  40208f:	je     0x4020a4
  402091:	call   0x416010
  402096:	mov    rcx,QWORD PTR [rbx+0x68]
  40209a:	add    rsp,0x20
  40209e:	pop    rbx
  40209f:	jmp    0x416010
  4020a4:	mov    rcx,QWORD PTR [rbx+0x8]
  4020a8:	call   0x416010
  4020ad:	mov    rcx,QWORD PTR [rbx+0x10]
  4020b1:	call   0x416010
  4020b6:	mov    rcx,QWORD PTR [rbx+0x20]
  4020ba:	test   rcx,rcx
  4020bd:	je     0x4020c4
  4020bf:	call   0x416010
  4020c4:	mov    rcx,QWORD PTR [rbx+0x28]
  4020c8:	test   rcx,rcx
  4020cb:	je     0x4020d2
  4020cd:	call   0x416010
  4020d2:	mov    rcx,QWORD PTR [rbx+0x48]
  4020d6:	test   rcx,rcx
  4020d9:	je     0x4020e0
  4020db:	call   0x416010
  4020e0:	mov    rcx,QWORD PTR [rbx+0x50]
  4020e4:	test   rcx,rcx
  4020e7:	je     0x4020ee
  4020e9:	call   0x416010
  4020ee:	mov    rcx,QWORD PTR [rbx+0x18]
  4020f2:	test   rcx,rcx
  4020f5:	je     0x4020fc
  4020f7:	call   0x416010
  4020fc:	mov    rcx,QWORD PTR [rbx+0x40]
  402100:	test   rcx,rcx
  402103:	je     0x40210a
  402105:	call   0x416010
  40210a:	mov    rcx,QWORD PTR [rbx+0x38]
  40210e:	test   rcx,rcx
  402111:	je     0x402130
  402113:	call   0x416010
  402118:	mov    rcx,QWORD PTR [rbx+0x30]
  40211c:	test   rcx,rcx
  40211f:	je     0x402130
  402121:	add    rsp,0x20
  402125:	pop    rbx
  402126:	jmp    0x416010
  40212b:	nop    DWORD PTR [rax+rax*1+0x0]
  402130:	add    rsp,0x20
  402134:	pop    rbx
  402135:	ret    
  402136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402140:	push   rsi
  402141:	push   rbx
  402142:	sub    rsp,0x28
  402146:	lea    rdx,[rip+0x15f39]        # 0x418086
  40214d:	mov    rsi,rcx
  402150:	call   0x415f40
  402155:	add    rsi,rax
  402158:	mov    rcx,rsi
  40215b:	call   0x415f68
  402160:	cmp    BYTE PTR [rsi],0x0
  402163:	lea    rbx,[rsi+rax*1-0x1]
  402168:	jne    0x40217c
  40216a:	jmp    0x402190
  40216c:	nop    DWORD PTR [rax+0x0]
  402170:	mov    BYTE PTR [rbx],0x0
  402173:	sub    rbx,0x1
  402177:	cmp    BYTE PTR [rsi],0x0
  40217a:	je     0x402190
  40217c:	movsx  edx,BYTE PTR [rbx]
  40217f:	lea    rcx,[rip+0x15f00]        # 0x418086
  402186:	call   0x415f90
  40218b:	test   rax,rax
  40218e:	jne    0x402170
  402190:	mov    rax,rsi
  402193:	add    rsp,0x28
  402197:	pop    rbx
  402198:	pop    rsi
  402199:	ret    
  40219a:	nop    WORD PTR [rax+rax*1+0x0]
  4021a0:	push   rbp
  4021a1:	push   rdi
  4021a2:	push   rsi
  4021a3:	push   rbx
  4021a4:	sub    rsp,0x28
  4021a8:	movzx  eax,BYTE PTR [rdx]
  4021ab:	xor    edi,edi
  4021ad:	mov    rbp,rcx
  4021b0:	mov    rsi,rdx
  4021b3:	test   al,al
  4021b5:	jne    0x4021d0
  4021b7:	jmp    0x402205
  4021b9:	nop    DWORD PTR [rax+0x0]
  4021c0:	mov    edi,0x1
  4021c5:	add    rsi,0x1
  4021c9:	movzx  eax,BYTE PTR [rsi]
  4021cc:	test   al,al
  4021ce:	je     0x402205
  4021d0:	movsx  ebx,al
  4021d3:	lea    rcx,[rip+0x15eac]        # 0x418086
  4021da:	mov    edx,ebx
  4021dc:	call   0x415f90
  4021e1:	test   rax,rax
  4021e4:	je     0x402210
  4021e6:	test   edi,edi
  4021e8:	jne    0x4021c0
  4021ea:	add    rsi,0x1
  4021ee:	mov    rdx,rbp
  4021f1:	mov    ecx,0x20
  4021f6:	call   0x416020
  4021fb:	movzx  eax,BYTE PTR [rsi]
  4021fe:	mov    dil,0x1
  402201:	test   al,al
  402203:	jne    0x4021d0
  402205:	add    rsp,0x28
  402209:	pop    rbx
  40220a:	pop    rsi
  40220b:	pop    rdi
  40220c:	pop    rbp
  40220d:	ret    
  40220e:	xchg   ax,ax
  402210:	mov    rdx,rbp
  402213:	mov    ecx,ebx
  402215:	xor    edi,edi
  402217:	call   0x416020
  40221c:	jmp    0x4021c5
  40221e:	xchg   ax,ax
  402220:	push   rbx
  402221:	sub    rsp,0x20
  402225:	call   0x402140
  40222a:	mov    rbx,rax
  40222d:	mov    rcx,rax
  402230:	call   0x415f68
  402235:	mov    rcx,rbx
  402238:	mov    edx,eax
  40223a:	add    rsp,0x20
  40223e:	pop    rbx
  40223f:	jmp    0x401f80
  402244:	xchg   ax,ax
  402246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402250:	push   rsi
  402251:	push   rbx
  402252:	sub    rsp,0x28
  402256:	mov    rsi,rdx
  402259:	lea    rdx,[rip+0x15e26]        # 0x418086
  402260:	mov    QWORD PTR [r8],0x0
  402267:	mov    rbx,r8
  40226a:	call   0x415f30
  40226f:	test   rax,rax
  402272:	mov    QWORD PTR [rsi],rax
  402275:	je     0x4022a4
  402277:	lea    rdx,[rip+0x15e0c]        # 0x41808a
  40227e:	xor    ecx,ecx
  402280:	call   0x415f30
  402285:	test   rax,rax
  402288:	mov    QWORD PTR [rbx],rax
  40228b:	je     0x4022a4
  40228d:	mov    rcx,rax
  402290:	call   0x402140
  402295:	mov    QWORD PTR [rbx],rax
  402298:	cmp    BYTE PTR [rax],0x0
  40229b:	jne    0x4022a4
  40229d:	mov    QWORD PTR [rbx],0x0
  4022a4:	add    rsp,0x28
  4022a8:	pop    rbx
  4022a9:	pop    rsi
  4022aa:	ret    
  4022ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4022b0:	push   rbx
  4022b1:	sub    rsp,0x20
  4022b5:	mov    rbx,rcx
  4022b8:	jmp    0x4022d5
  4022ba:	nop    WORD PTR [rax+rax*1+0x0]
  4022c0:	lea    rcx,[rip+0x15dbf]        # 0x418086
  4022c7:	add    rbx,0x1
  4022cb:	call   0x415f90
  4022d0:	test   rax,rax
  4022d3:	je     0x4022f0
  4022d5:	movsx  edx,BYTE PTR [rbx]
  4022d8:	test   dl,dl
  4022da:	jne    0x4022c0
  4022dc:	mov    eax,0x1
  4022e1:	add    rsp,0x20
  4022e5:	pop    rbx
  4022e6:	ret    
  4022e7:	nop    WORD PTR [rax+rax*1+0x0]
  4022f0:	xor    eax,eax
  4022f2:	add    rsp,0x20
  4022f6:	pop    rbx
  4022f7:	ret    
  4022f8:	nop    DWORD PTR [rax+rax*1+0x0]
  402300:	push   r14
  402302:	push   r13
  402304:	push   r12
  402306:	push   rbp
  402307:	push   rdi
  402308:	push   rsi
  402309:	push   rbx
  40230a:	sub    rsp,0x40
  40230e:	movzx  esi,BYTE PTR [rcx]
  402311:	mov    rdi,QWORD PTR [rsp+0xa8]
  402319:	mov    rbx,rcx
  40231c:	mov    r12,rdx
  40231f:	mov    r13,r8
  402322:	mov    ebp,r9d
  402325:	cmp    sil,0x5f
  402329:	je     0x402410
  40232f:	call   0x415f68
  402334:	movzx  r10d,BYTE PTR [rbx+rax*1-0x1]
  40233a:	mov    r14,rax
  40233d:	cmp    r10b,0x5f
  402341:	je     0x402410
  402347:	lea    rcx,[rip+0x15d89]        # 0x4180d7
  40234e:	movsx  edx,r10b
  402352:	call   0x415f90
  402357:	test   rax,rax
  40235a:	je     0x4023c1
  40235c:	mov    edx,r14d
  40235f:	mov    rcx,rbx
  402362:	call   0x401660
  402367:	test   eax,eax
  402369:	jne    0x4023c1
  40236b:	test   rdi,rdi
  40236e:	mov    esi,0x11
  402373:	je     0x4023b0
  402375:	mov    rax,QWORD PTR [rip+0x150a4]        # 0x417420
  40237c:	mov    r8,QWORD PTR [rip+0x1f6c5]        # 0x421a48
  402383:	lea    rdx,[rip+0x15d5e]        # 0x4180e8
  40238a:	mov    DWORD PTR [rsp+0x20],ebp
  40238e:	mov    r9,rbx
  402391:	mov    rcx,rdi
  402394:	mov    QWORD PTR [rsp+0x30],rax
  402399:	mov    rax,QWORD PTR [rsp+0xa0]
  4023a1:	mov    QWORD PTR [rsp+0x28],rax
  4023a6:	call   0x401540
  4023ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4023b0:	mov    eax,esi
  4023b2:	add    rsp,0x40
  4023b6:	pop    rbx
  4023b7:	pop    rsi
  4023b8:	pop    rdi
  4023b9:	pop    rbp
  4023ba:	pop    r12
  4023bc:	pop    r13
  4023be:	pop    r14
  4023c0:	ret    
  4023c1:	mov    rcx,QWORD PTR [rip+0x15060]        # 0x417428
  4023c8:	movsx  edx,sil
  4023cc:	call   0x415f90
  4023d1:	test   rax,rax
  4023d4:	je     0x402450
  4023d6:	test   rdi,rdi
  4023d9:	mov    esi,0x11
  4023de:	je     0x4023b0
  4023e0:	mov    rax,QWORD PTR [rsp+0xa0]
  4023e8:	mov    r8,QWORD PTR [rip+0x1f659]        # 0x421a48
  4023ef:	lea    rdx,[rip+0x15d22]        # 0x418118
  4023f6:	mov    DWORD PTR [rsp+0x20],ebp
  4023fa:	mov    r9,rbx
  4023fd:	mov    rcx,rdi
  402400:	mov    QWORD PTR [rsp+0x28],rax
  402405:	call   0x401540
  40240a:	jmp    0x4023b0
  40240c:	nop    DWORD PTR [rax+0x0]
  402410:	test   rdi,rdi
  402413:	mov    esi,0x11
  402418:	je     0x4023b0
  40241a:	mov    rax,QWORD PTR [rsp+0xa0]
  402422:	mov    r8,QWORD PTR [rip+0x1f61f]        # 0x421a48
  402429:	lea    rdx,[rip+0x15c60]        # 0x418090
  402430:	mov    DWORD PTR [rsp+0x20],ebp
  402434:	mov    r9,rbx
  402437:	mov    rcx,rdi
  40243a:	mov    QWORD PTR [rsp+0x28],rax
  40243f:	call   0x401540
  402444:	jmp    0x4023b0
  402449:	nop    DWORD PTR [rax+0x0]
  402450:	mov    rcx,rbx
  402453:	call   0x401a90
  402458:	test   rax,rax
  40245b:	mov    rsi,rax
  40245e:	je     0x4024d4
  402460:	test   rdi,rdi
  402463:	je     0x4024a9
  402465:	mov    eax,DWORD PTR [rip+0x1fecd]        # 0x422338
  40246b:	test   eax,eax
  40246d:	je     0x4024a9
  40246f:	mov    rax,QWORD PTR [rsp+0xa0]
  402477:	mov    DWORD PTR [rsp+0x30],ebp
  40247b:	lea    rdx,[rip+0x15cde]        # 0x418160
  402482:	mov    r8,QWORD PTR [rip+0x1f5bf]        # 0x421a48
  402489:	mov    r9,rbx
  40248c:	mov    rcx,rdi
  40248f:	mov    QWORD PTR [rsp+0x38],rax
  402494:	mov    rax,QWORD PTR [rsi+0x18]
  402498:	mov    QWORD PTR [rsp+0x28],rax
  40249d:	mov    eax,DWORD PTR [rsi+0x10]
  4024a0:	mov    DWORD PTR [rsp+0x20],eax
  4024a4:	call   0x401540
  4024a9:	mov    rcx,QWORD PTR [rsi+0x8]
  4024ad:	call   0x416010
  4024b2:	mov    rcx,r12
  4024b5:	call   0x4019f0
  4024ba:	mov    QWORD PTR [rsi+0x8],rax
  4024be:	mov    rax,QWORD PTR [rsp+0xa0]
  4024c6:	mov    DWORD PTR [rsi+0x10],ebp
  4024c9:	mov    QWORD PTR [rsi+0x18],rax
  4024cd:	xor    esi,esi
  4024cf:	jmp    0x4023b0
  4024d4:	mov    ecx,0x28
  4024d9:	call   0x415fe8
  4024de:	test   rax,rax
  4024e1:	mov    rsi,rax
  4024e4:	je     0x402553
  4024e6:	mov    rcx,rbx
  4024e9:	call   0x4019f0
  4024ee:	mov    QWORD PTR [rsi],rax
  4024f1:	movsx  edx,BYTE PTR [rax]
  4024f4:	xor    r8d,r8d
  4024f7:	test   dl,dl
  4024f9:	je     0x402518
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402500:	mov    ecx,r8d
  402503:	add    rax,0x1
  402507:	shl    ecx,0x5
  40250a:	sub    ecx,r8d
  40250d:	lea    r8d,[rcx+rdx*1]
  402511:	movsx  edx,BYTE PTR [rax]
  402514:	test   dl,dl
  402516:	jne    0x402500
  402518:	mov    eax,r8d
  40251b:	mov    edx,0x446f8657
  402520:	lea    rcx,[rip+0x1fa99]        # 0x421fc0
  402527:	mul    edx
  402529:	mov    eax,r8d
  40252c:	sub    eax,edx
  40252e:	shr    eax,1
  402530:	add    eax,edx
  402532:	mov    edx,r8d
  402535:	shr    eax,0x6
  402538:	imul   eax,eax,0x65
  40253b:	sub    edx,eax
  40253d:	mov    rax,QWORD PTR [rcx+rdx*8]
  402541:	mov    QWORD PTR [rcx+rdx*8],rsi
  402545:	add    DWORD PTR [r13+0x0],0x1
  40254a:	mov    QWORD PTR [rsi+0x20],rax
  40254e:	jmp    0x4024b2
  402553:	lea    rcx,[rip+0x15c51]        # 0x4181ab
  40255a:	call   0x4162d0
  40255f:	nop
  402560:	push   r13
  402562:	push   r12
  402564:	push   rbp
  402565:	push   rdi
  402566:	push   rsi
  402567:	push   rbx
  402568:	sub    rsp,0x48
  40256c:	mov    rsi,QWORD PTR [rsp+0xa8]
  402574:	mov    rbx,rcx
  402577:	mov    r12,rdx
  40257a:	mov    rdi,r8
  40257d:	mov    ebp,r9d
  402580:	call   0x415f68
  402585:	mov    BYTE PTR [rbx+rax*1-0x1],0x0
  40258a:	movsx  edx,BYTE PTR [rbx]
  40258d:	mov    rcx,QWORD PTR [rip+0x14e94]        # 0x417428
  402594:	call   0x415f90
  402599:	test   rax,rax
  40259c:	je     0x4025e1
  40259e:	test   rsi,rsi
  4025a1:	mov    edi,0x11
  4025a6:	je     0x4025d2
  4025a8:	mov    rax,QWORD PTR [rsp+0xa0]
  4025b0:	mov    r8,QWORD PTR [rip+0x1f491]        # 0x421a48
  4025b7:	lea    rdx,[rip+0x15b5a]        # 0x418118
  4025be:	mov    DWORD PTR [rsp+0x20],ebp
  4025c2:	mov    r9,rbx
  4025c5:	mov    rcx,rsi
  4025c8:	mov    QWORD PTR [rsp+0x28],rax
  4025cd:	call   0x401540
  4025d2:	mov    eax,edi
  4025d4:	add    rsp,0x48
  4025d8:	pop    rbx
  4025d9:	pop    rsi
  4025da:	pop    rdi
  4025db:	pop    rbp
  4025dc:	pop    r12
  4025de:	pop    r13
  4025e0:	ret    
  4025e1:	mov    rcx,rbx
  4025e4:	call   0x401bb0
  4025e9:	test   rax,rax
  4025ec:	mov    r13,rax
  4025ef:	je     0x402605
  4025f1:	mov    rcx,QWORD PTR [rax+0x8]
  4025f5:	mov    rdx,rbx
  4025f8:	call   0x415f88
  4025fd:	test   eax,eax
  4025ff:	je     0x402690
  402605:	mov    ecx,0x38
  40260a:	call   0x415fe8
  40260f:	test   rax,rax
  402612:	mov    r13,rax
  402615:	je     0x4026f1
  40261b:	mov    rcx,rbx
  40261e:	call   0x4019f0
  402623:	mov    rcx,rbx
  402626:	mov    QWORD PTR [r13+0x8],rax
  40262a:	call   0x415f68
  40262f:	mov    DWORD PTR [r13+0x0],eax
  402633:	movzx  eax,BYTE PTR [rbx]
  402636:	lea    rdx,[rip+0x1f543]        # 0x421b80
  40263d:	mov    QWORD PTR [r13+0x30],0x0
  402645:	and    eax,0x7f
  402648:	mov    rcx,QWORD PTR [rdx+rax*8]
  40264c:	test   rcx,rcx
  40264f:	je     0x4026e5
  402655:	mov    rcx,QWORD PTR [rcx+0x28]
  402659:	mov    QWORD PTR [rcx+0x30],r13
  40265d:	mov    rax,QWORD PTR [rdx+rax*8]
  402661:	mov    QWORD PTR [rax+0x28],r13
  402665:	add    DWORD PTR [rdi],0x1
  402668:	mov    rcx,r12
  40266b:	xor    edi,edi
  40266d:	call   0x4019f0
  402672:	mov    QWORD PTR [r13+0x10],rax
  402676:	mov    rax,QWORD PTR [rsp+0xa0]
  40267e:	mov    DWORD PTR [r13+0x18],ebp
  402682:	mov    QWORD PTR [r13+0x20],rax
  402686:	jmp    0x4025d2
  40268b:	nop    DWORD PTR [rax+rax*1+0x0]
  402690:	test   rsi,rsi
  402693:	je     0x4026da
  402695:	mov    eax,DWORD PTR [rip+0x1fc9d]        # 0x422338
  40269b:	test   eax,eax
  40269d:	je     0x4026da
  40269f:	mov    rax,QWORD PTR [rsp+0xa0]
  4026a7:	mov    DWORD PTR [rsp+0x30],ebp
  4026ab:	lea    rdx,[rip+0x15b06]        # 0x4181b8
  4026b2:	mov    r8,QWORD PTR [rip+0x1f38f]        # 0x421a48
  4026b9:	mov    r9,rbx
  4026bc:	mov    rcx,rsi
  4026bf:	mov    QWORD PTR [rsp+0x38],rax
  4026c4:	mov    rax,QWORD PTR [r13+0x20]
  4026c8:	mov    QWORD PTR [rsp+0x28],rax
  4026cd:	mov    eax,DWORD PTR [r13+0x18]
  4026d1:	mov    DWORD PTR [rsp+0x20],eax
  4026d5:	call   0x401540
  4026da:	mov    rcx,QWORD PTR [r13+0x10]
  4026de:	call   0x416010
  4026e3:	jmp    0x402668
  4026e5:	mov    QWORD PTR [rdx+rax*8],r13
  4026e9:	mov    rax,r13
  4026ec:	jmp    0x402661
  4026f1:	lea    rcx,[rip+0x15b0e]        # 0x418206
  4026f8:	call   0x4162d0
  4026fd:	nop
  4026fe:	xchg   ax,ax
  402700:	push   r13
  402702:	push   r12
  402704:	push   rbp
  402705:	push   rdi
  402706:	push   rsi
  402707:	push   rbx
  402708:	sub    rsp,0x38
  40270c:	mov    rdi,QWORD PTR [rsp+0xa8]
  402714:	mov    r12,rdx
  402717:	mov    edx,0x5b
  40271c:	mov    rsi,rcx
  40271f:	mov    r13,r8
  402722:	mov    ebp,r9d
  402725:	call   0x415f90
  40272a:	test   rax,rax
  40272d:	mov    rbx,rax
  402730:	je     0x402800
  402736:	mov    BYTE PTR [rax],0x0
  402739:	mov    rcx,rsi
  40273c:	call   0x4022b0
  402741:	test   eax,eax
  402743:	je     0x4027b0
  402745:	add    rbx,0x1
  402749:	mov    edx,0x5d
  40274e:	mov    rcx,rbx
  402751:	call   0x415f90
  402756:	test   rax,rax
  402759:	je     0x402860
  40275f:	mov    BYTE PTR [rax],0x0
  402762:	movsx  edx,bpl
  402766:	mov    rcx,rbx
  402769:	lea    rsi,[rax+0x1]
  40276d:	call   0x415f90
  402772:	test   rax,rax
  402775:	je     0x402850
  40277b:	lea    rcx,[rax+0x1]
  40277f:	mov    BYTE PTR [rax],0x0
  402782:	call   0x402140
  402787:	mov    QWORD PTR [r13+0x0],rax
  40278b:	mov    rcx,rbx
  40278e:	call   0x402140
  402793:	mov    QWORD PTR [r12],rax
  402797:	mov    rax,rsi
  40279a:	add    rsp,0x38
  40279e:	pop    rbx
  40279f:	pop    rsi
  4027a0:	pop    rdi
  4027a1:	pop    rbp
  4027a2:	pop    r12
  4027a4:	pop    r13
  4027a6:	ret    
  4027a7:	nop    WORD PTR [rax+rax*1+0x0]
  4027b0:	test   rdi,rdi
  4027b3:	je     0x40283b
  4027b9:	mov    eax,DWORD PTR [rsp+0x98]
  4027c0:	mov    r9,QWORD PTR [rsp+0x90]
  4027c8:	lea    rdx,[rip+0x15a89]        # 0x418258
  4027cf:	mov    r8,QWORD PTR [rip+0x1f272]        # 0x421a48
  4027d6:	mov    rcx,rdi
  4027d9:	mov    DWORD PTR [rsp+0x28],eax
  4027dd:	mov    rax,QWORD PTR [rsp+0xa0]
  4027e5:	mov    QWORD PTR [rsp+0x20],rax
  4027ea:	call   0x401540
  4027ef:	xor    eax,eax
  4027f1:	add    rsp,0x38
  4027f5:	pop    rbx
  4027f6:	pop    rsi
  4027f7:	pop    rdi
  4027f8:	pop    rbp
  4027f9:	pop    r12
  4027fb:	pop    r13
  4027fd:	ret    
  4027fe:	xchg   ax,ax
  402800:	test   rdi,rdi
  402803:	je     0x40283b
  402805:	mov    eax,DWORD PTR [rsp+0x98]
  40280c:	mov    r9,QWORD PTR [rsp+0x90]
  402814:	lea    rdx,[rip+0x159fd]        # 0x418218
  40281b:	mov    r8,QWORD PTR [rip+0x1f226]        # 0x421a48
  402822:	mov    rcx,rdi
  402825:	mov    DWORD PTR [rsp+0x28],eax
  402829:	mov    rax,QWORD PTR [rsp+0xa0]
  402831:	mov    QWORD PTR [rsp+0x20],rax
  402836:	call   0x401540
  40283b:	xor    eax,eax
  40283d:	add    rsp,0x38
  402841:	pop    rbx
  402842:	pop    rsi
  402843:	pop    rdi
  402844:	pop    rbp
  402845:	pop    r12
  402847:	pop    r13
  402849:	ret    
  40284a:	nop    WORD PTR [rax+rax*1+0x0]
  402850:	mov    QWORD PTR [r13+0x0],0x0
  402858:	jmp    0x40278b
  40285d:	nop    DWORD PTR [rax]
  402860:	test   rdi,rdi
  402863:	je     0x40283b
  402865:	mov    eax,DWORD PTR [rsp+0x98]
  40286c:	mov    r9,QWORD PTR [rsp+0x90]
  402874:	lea    rdx,[rip+0x15a2d]        # 0x4182a8
  40287b:	mov    r8,QWORD PTR [rip+0x1f1c6]        # 0x421a48
  402882:	mov    rcx,rdi
  402885:	mov    DWORD PTR [rsp+0x28],eax
  402889:	mov    rax,QWORD PTR [rsp+0xa0]
  402891:	mov    QWORD PTR [rsp+0x20],rax
  402896:	call   0x401540
  40289b:	xor    eax,eax
  40289d:	jmp    0x40279a
  4028a2:	nop    DWORD PTR [rax+0x0]
  4028a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4028b0:	push   rdi
  4028b1:	push   rsi
  4028b2:	push   rbx
  4028b3:	sub    rsp,0x50
  4028b7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4028bc:	mov    rbx,rdx
  4028bf:	mov    rsi,r8
  4028c2:	mov    rdi,r9
  4028c5:	cmp    BYTE PTR [rcx],0x0
  4028c8:	jne    0x402910
  4028ca:	xor    eax,eax
  4028cc:	test   rbx,rbx
  4028cf:	je     0x4028d6
  4028d1:	cmp    BYTE PTR [rbx],0x0
  4028d4:	jne    0x4028e3
  4028d6:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4028db:	add    rsp,0x50
  4028df:	pop    rbx
  4028e0:	pop    rsi
  4028e1:	pop    rdi
  4028e2:	ret    
  4028e3:	lea    rdx,[rsp+0x38]
  4028e8:	mov    rcx,rbx
  4028eb:	call   0x40cc30
  4028f0:	mov    rax,QWORD PTR [rsp+0x38]
  4028f5:	movapd xmm6,xmm0
  4028f9:	cmp    BYTE PTR [rax],0x0
  4028fc:	je     0x402950
  4028fe:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  402903:	mov    eax,0x2
  402908:	add    rsp,0x50
  40290c:	pop    rbx
  40290d:	pop    rsi
  40290e:	pop    rdi
  40290f:	ret    
  402910:	lea    rdx,[rsp+0x38]
  402915:	call   0x40cc30
  40291a:	mov    rax,QWORD PTR [rsp+0x38]
  40291f:	cmp    BYTE PTR [rax],0x0
  402922:	jne    0x4028fe
  402924:	mov    ecx,0x8
  402929:	movsd  QWORD PTR [rsp+0x28],xmm0
  40292f:	call   0x415fe8
  402934:	test   rax,rax
  402937:	movsd  xmm0,QWORD PTR [rsp+0x28]
  40293d:	je     0x40298a
  40293f:	mov    QWORD PTR [rsi],rax
  402942:	movsd  QWORD PTR [rax],xmm0
  402946:	jmp    0x4028ca
  402948:	nop    DWORD PTR [rax+rax*1+0x0]
  402950:	mov    rax,QWORD PTR [rsi]
  402953:	test   rax,rax
  402956:	je     0x402962
  402958:	movsd  xmm0,QWORD PTR [rax]
  40295c:	ucomisd xmm0,xmm6
  402960:	ja     0x402980
  402962:	mov    ecx,0x8
  402967:	call   0x415fe8
  40296c:	test   rax,rax
  40296f:	je     0x40298a
  402971:	mov    QWORD PTR [rdi],rax
  402974:	movsd  QWORD PTR [rax],xmm6
  402978:	xor    eax,eax
  40297a:	jmp    0x4028d6
  40297f:	nop
  402980:	mov    eax,0x1
  402985:	jmp    0x4028d6
  40298a:	lea    rcx,[rip+0x15950]        # 0x4182e1
  402991:	call   0x4162d0
  402996:	nop
  402997:	nop    WORD PTR [rax+rax*1+0x0]
  4029a0:	push   r15
  4029a2:	push   r14
  4029a4:	push   r13
  4029a6:	push   r12
  4029a8:	push   rbp
  4029a9:	push   rdi
  4029aa:	push   rsi
  4029ab:	push   rbx
  4029ac:	sub    rsp,0xb8
  4029b3:	cmp    BYTE PTR [rcx],0x28
  4029b6:	mov    r12,rcx
  4029b9:	mov    rbx,rdx
  4029bc:	mov    r14,r8
  4029bf:	mov    r13d,r9d
  4029c2:	je     0x402b40
  4029c8:	mov    edx,0x28
  4029cd:	call   0x415f90
  4029d2:	mov    edx,0x29
  4029d7:	mov    rdi,rax
  4029da:	mov    rcx,r12
  4029dd:	call   0x415f90
  4029e2:	mov    BYTE PTR [rdi],0x0
  4029e5:	movsx  edx,BYTE PTR [r12]
  4029ea:	mov    rsi,rax
  4029ed:	mov    rcx,QWORD PTR [rip+0x14a34]        # 0x417428
  4029f4:	call   0x415f90
  4029f9:	test   rax,rax
  4029fc:	je     0x402b85
  402a02:	cmp    QWORD PTR [rsp+0x128],0x0
  402a0b:	je     0x402b30
  402a11:	mov    rax,QWORD PTR [rsp+0x120]
  402a19:	mov    r8,QWORD PTR [rip+0x1f028]        # 0x421a48
  402a20:	lea    rdx,[rip+0x15919]        # 0x418340
  402a27:	mov    rcx,QWORD PTR [rsp+0x128]
  402a2f:	mov    DWORD PTR [rsp+0x20],r13d
  402a34:	mov    r9,r12
  402a37:	mov    QWORD PTR [rsp+0x28],rax
  402a3c:	call   0x401540
  402a41:	mov    eax,0x11
  402a46:	add    rsp,0xb8
  402a4d:	pop    rbx
  402a4e:	pop    rsi
  402a4f:	pop    rdi
  402a50:	pop    rbp
  402a51:	pop    r12
  402a53:	pop    r13
  402a55:	pop    r14
  402a57:	pop    r15
  402a59:	ret    
  402a5a:	nop    WORD PTR [rax+rax*1+0x0]
  402a60:	test   r15d,r15d
  402a63:	jne    0x402c58
  402a69:	cmp    BYTE PTR [rbx],0x5b
  402a6c:	mov    rbp,r12
  402a6f:	mov    r15,r14
  402a72:	mov    r12,QWORD PTR [rsp+0x100]
  402a7a:	mov    r14,QWORD PTR [rsp+0x110]
  402a82:	mov    r13d,DWORD PTR [rsp+0x118]
  402a8a:	jne    0x40321c
  402a90:	cmp    QWORD PTR [rsp+0x128],0x0
  402a99:	je     0x402acb
  402a9b:	mov    rax,QWORD PTR [rsp+0x120]
  402aa3:	mov    r8,QWORD PTR [rip+0x1ef9e]        # 0x421a48
  402aaa:	lea    rdx,[rip+0x15a57]        # 0x418508
  402ab1:	mov    rcx,QWORD PTR [rsp+0x128]
  402ab9:	mov    DWORD PTR [rsp+0x20],r13d
  402abe:	mov    r9,r12
  402ac1:	mov    QWORD PTR [rsp+0x28],rax
  402ac6:	call   0x401540
  402acb:	test   rbp,rbp
  402ace:	mov    rax,rbp
  402ad1:	je     0x402adb
  402ad3:	mov    rcx,rax
  402ad6:	call   0x416010
  402adb:	test   r15,r15
  402ade:	je     0x402ae8
  402ae0:	mov    rcx,r15
  402ae3:	call   0x416010
  402ae8:	mov    rcx,QWORD PTR [rsp+0x90]
  402af0:	test   rcx,rcx
  402af3:	je     0x402afa
  402af5:	call   0x416010
  402afa:	mov    rcx,QWORD PTR [rsp+0x98]
  402b02:	test   rcx,rcx
  402b05:	je     0x402b0c
  402b07:	call   0x416010
  402b0c:	mov    rcx,QWORD PTR [rsp+0xa0]
  402b14:	test   rcx,rcx
  402b17:	je     0x402b1e
  402b19:	call   0x416010
  402b1e:	mov    rcx,QWORD PTR [rsp+0xa8]
  402b26:	test   rcx,rcx
  402b29:	je     0x402b30
  402b2b:	call   0x416010
  402b30:	mov    eax,0x11
  402b35:	jmp    0x402a46
  402b3a:	nop    WORD PTR [rax+rax*1+0x0]
  402b40:	cmp    QWORD PTR [rsp+0x128],0x0
  402b49:	je     0x402b30
  402b4b:	mov    rax,QWORD PTR [rsp+0x120]
  402b53:	mov    DWORD PTR [rsp+0x20],r9d
  402b58:	mov    r9,rcx
  402b5b:	mov    r8,QWORD PTR [rip+0x1eee6]        # 0x421a48
  402b62:	mov    rcx,QWORD PTR [rsp+0x128]
  402b6a:	lea    rdx,[rip+0x15787]        # 0x4182f8
  402b71:	mov    QWORD PTR [rsp+0x28],rax
  402b76:	call   0x401540
  402b7b:	mov    eax,0x11
  402b80:	jmp    0x402a46
  402b85:	test   rsi,rsi
  402b88:	je     0x402d60
  402b8e:	lea    rax,[rdi+0x1]
  402b92:	mov    rcx,rsi
  402b95:	mov    rdi,rax
  402b98:	mov    QWORD PTR [rsp+0x78],rax
  402b9d:	call   0x415f68
  402ba2:	cmp    rax,0x1
  402ba6:	ja     0x402d60
  402bac:	cmp    rsi,rdi
  402baf:	je     0x402d60
  402bb5:	lea    rax,[rsp+0x88]
  402bbd:	mov    BYTE PTR [rsi],0x0
  402bc0:	xor    edi,edi
  402bc2:	xor    esi,esi
  402bc4:	mov    QWORD PTR [rsp+0x100],r12
  402bcc:	mov    QWORD PTR [rsp+0x110],r14
  402bd4:	mov    QWORD PTR [rsp+0x48],rax
  402bd9:	lea    rax,[rsp+0x80]
  402be1:	mov    QWORD PTR [rsp+0x90],0x0
  402bed:	mov    QWORD PTR [rsp+0x98],0x0
  402bf9:	mov    QWORD PTR [rsp+0xa0],0x0
  402c05:	mov    r12,rsi
  402c08:	mov    QWORD PTR [rsp+0x50],rax
  402c0d:	lea    rax,[rsp+0xa8]
  402c15:	mov    QWORD PTR [rsp+0xa8],0x0
  402c21:	mov    r14,rdi
  402c24:	mov    DWORD PTR [rsp+0x118],r13d
  402c2c:	mov    QWORD PTR [rsp+0x68],rax
  402c31:	lea    rax,[rsp+0xa0]
  402c39:	mov    QWORD PTR [rsp+0x70],rax
  402c3e:	lea    rax,[rsp+0x98]
  402c46:	mov    QWORD PTR [rsp+0x58],rax
  402c4b:	lea    rax,[rsp+0x90]
  402c53:	mov    QWORD PTR [rsp+0x60],rax
  402c58:	mov    r13,QWORD PTR [rip+0x14821]        # 0x417480
  402c5f:	test   r13,r13
  402c62:	je     0x402a69
  402c68:	lea    rdi,[rip+0x14811]        # 0x417480
  402c6f:	xor    ebp,ebp
  402c71:	xor    r15d,r15d
  402c74:	jmp    0x402c93
  402c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c80:	add    rdi,0x10
  402c84:	mov    r13,QWORD PTR [rdi]
  402c87:	add    ebp,0x1
  402c8a:	test   r13,r13
  402c8d:	je     0x402a60
  402c93:	mov    rcx,r13
  402c96:	call   0x415f68
  402c9b:	mov    rdx,rbx
  402c9e:	mov    r8,rax
  402ca1:	mov    rcx,r13
  402ca4:	mov    rsi,rax
  402ca7:	call   0x415f60
  402cac:	test   eax,eax
  402cae:	jne    0x402c80
  402cb0:	mov    rax,QWORD PTR [rsp+0x128]
  402cb8:	movsx  r9d,BYTE PTR [rdi+0x8]
  402cbd:	lea    rcx,[rbx+rsi*1]
  402cc1:	mov    r8,QWORD PTR [rsp+0x48]
  402cc6:	mov    rdx,QWORD PTR [rsp+0x50]
  402ccb:	mov    QWORD PTR [rsp+0x38],rax
  402cd0:	mov    rax,QWORD PTR [rsp+0x120]
  402cd8:	mov    QWORD PTR [rsp+0x30],rax
  402cdd:	mov    eax,DWORD PTR [rsp+0x118]
  402ce4:	mov    DWORD PTR [rsp+0x28],eax
  402ce8:	mov    rax,QWORD PTR [rsp+0x100]
  402cf0:	mov    QWORD PTR [rsp+0x20],rax
  402cf5:	call   0x402700
  402cfa:	test   rax,rax
  402cfd:	je     0x402fed
  402d03:	mov    rcx,rax
  402d06:	call   0x402140
  402d0b:	test   ebp,ebp
  402d0d:	mov    rbx,rax
  402d10:	jne    0x402db0
  402d16:	test   r14,r14
  402d19:	jne    0x403001
  402d1f:	test   r12,r12
  402d22:	jne    0x403001
  402d28:	mov    rcx,QWORD PTR [rsp+0x80]
  402d30:	xor    r14d,r14d
  402d33:	call   0x4019f0
  402d38:	mov    rcx,QWORD PTR [rsp+0x88]
  402d40:	mov    r12,rax
  402d43:	test   rcx,rcx
  402d46:	je     0x402d50
  402d48:	call   0x4019f0
  402d4d:	mov    r14,rax
  402d50:	mov    r15d,0x1
  402d56:	jmp    0x402c80
  402d5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d60:	cmp    QWORD PTR [rsp+0x128],0x0
  402d69:	je     0x402b30
  402d6f:	mov    rax,QWORD PTR [rsp+0x120]
  402d77:	mov    r8,QWORD PTR [rip+0x1ecca]        # 0x421a48
  402d7e:	lea    rdx,[rip+0x15603]        # 0x418388
  402d85:	mov    rcx,QWORD PTR [rsp+0x128]
  402d8d:	mov    DWORD PTR [rsp+0x28],r13d
  402d92:	mov    r9,r12
  402d95:	mov    QWORD PTR [rsp+0x20],rax
  402d9a:	call   0x401540
  402d9f:	mov    eax,0x11
  402da4:	jmp    0x402a46
  402da9:	nop    DWORD PTR [rax+0x0]
  402db0:	cmp    ebp,0x1
  402db3:	jne    0x402ed0
  402db9:	cmp    QWORD PTR [rsp+0x98],0x0
  402dc2:	jne    0x403181
  402dc8:	cmp    QWORD PTR [rsp+0x90],0x0
  402dd1:	jne    0x403181
  402dd7:	mov    r9,QWORD PTR [rsp+0x58]
  402ddc:	mov    r8,QWORD PTR [rsp+0x60]
  402de1:	mov    rdx,QWORD PTR [rsp+0x88]
  402de9:	mov    rcx,QWORD PTR [rsp+0x80]
  402df1:	call   0x4028b0
  402df6:	test   eax,eax
  402df8:	mov    esi,eax
  402dfa:	je     0x402d50
  402e00:	test   r12,r12
  402e03:	je     0x402e0d
  402e05:	mov    rcx,r12
  402e08:	call   0x416010
  402e0d:	test   r14,r14
  402e10:	je     0x402e1a
  402e12:	mov    rcx,r14
  402e15:	call   0x416010
  402e1a:	mov    rcx,QWORD PTR [rsp+0x90]
  402e22:	test   rcx,rcx
  402e25:	je     0x402e2c
  402e27:	call   0x416010
  402e2c:	mov    rcx,QWORD PTR [rsp+0x98]
  402e34:	test   rcx,rcx
  402e37:	je     0x402e3e
  402e39:	call   0x416010
  402e3e:	mov    rcx,QWORD PTR [rsp+0xa0]
  402e46:	test   rcx,rcx
  402e49:	je     0x402e50
  402e4b:	call   0x416010
  402e50:	mov    rcx,QWORD PTR [rsp+0xa8]
  402e58:	test   rcx,rcx
  402e5b:	je     0x402e62
  402e5d:	call   0x416010
  402e62:	cmp    esi,0x1
  402e65:	je     0x4031c3
  402e6b:	cmp    esi,0x2
  402e6e:	jne    0x402d50
  402e74:	cmp    QWORD PTR [rsp+0x128],0x0
  402e7d:	mov    r12,QWORD PTR [rsp+0x100]
  402e85:	mov    r13d,DWORD PTR [rsp+0x118]
  402e8d:	je     0x402b30
  402e93:	mov    rax,QWORD PTR [rsp+0x120]
  402e9b:	mov    r8,QWORD PTR [rip+0x1eba6]        # 0x421a48
  402ea2:	lea    rdx,[rip+0x1559f]        # 0x418448
  402ea9:	mov    rcx,QWORD PTR [rsp+0x128]
  402eb1:	mov    DWORD PTR [rsp+0x28],r13d
  402eb6:	mov    r9,r12
  402eb9:	mov    QWORD PTR [rsp+0x20],rax
  402ebe:	call   0x401540
  402ec3:	mov    eax,0x11
  402ec8:	jmp    0x402a46
  402ecd:	nop    DWORD PTR [rax]
  402ed0:	cmp    ebp,0x2
  402ed3:	jne    0x402d50
  402ed9:	cmp    QWORD PTR [rsp+0xa8],0x0
  402ee2:	jne    0x4030b7
  402ee8:	cmp    QWORD PTR [rsp+0xa0],0x0
  402ef1:	jne    0x4030b7
  402ef7:	mov    r9,QWORD PTR [rsp+0x68]
  402efc:	mov    r8,QWORD PTR [rsp+0x70]
  402f01:	mov    rdx,QWORD PTR [rsp+0x88]
  402f09:	mov    rcx,QWORD PTR [rsp+0x80]
  402f11:	call   0x4028b0
  402f16:	test   eax,eax
  402f18:	mov    esi,eax
  402f1a:	je     0x402d50
  402f20:	test   r12,r12
  402f23:	je     0x402f2d
  402f25:	mov    rcx,r12
  402f28:	call   0x416010
  402f2d:	test   r14,r14
  402f30:	je     0x402f3a
  402f32:	mov    rcx,r14
  402f35:	call   0x416010
  402f3a:	mov    rcx,QWORD PTR [rsp+0x90]
  402f42:	test   rcx,rcx
  402f45:	je     0x402f4c
  402f47:	call   0x416010
  402f4c:	mov    rcx,QWORD PTR [rsp+0x98]
  402f54:	test   rcx,rcx
  402f57:	je     0x402f5e
  402f59:	call   0x416010
  402f5e:	mov    rcx,QWORD PTR [rsp+0xa0]
  402f66:	test   rcx,rcx
  402f69:	je     0x402f70
  402f6b:	call   0x416010
  402f70:	mov    rcx,QWORD PTR [rsp+0xa8]
  402f78:	test   rcx,rcx
  402f7b:	je     0x402f82
  402f7d:	call   0x416010
  402f82:	cmp    esi,0x1
  402f85:	je     0x40305e
  402f8b:	cmp    esi,0x2
  402f8e:	jne    0x402d50
  402f94:	cmp    QWORD PTR [rsp+0x128],0x0
  402f9d:	mov    r12,QWORD PTR [rsp+0x100]
  402fa5:	mov    r13d,DWORD PTR [rsp+0x118]
  402fad:	je     0x402b30
  402fb3:	mov    rax,QWORD PTR [rsp+0x120]
  402fbb:	mov    r8,QWORD PTR [rip+0x1ea86]        # 0x421a48
  402fc2:	lea    rdx,[rip+0x154ff]        # 0x4184c8
  402fc9:	mov    rcx,QWORD PTR [rsp+0x128]
  402fd1:	mov    DWORD PTR [rsp+0x28],r13d
  402fd6:	mov    r9,r12
  402fd9:	mov    QWORD PTR [rsp+0x20],rax
  402fde:	call   0x401540
  402fe3:	mov    eax,0x11
  402fe8:	jmp    0x402a46
  402fed:	test   r12,r12
  402ff0:	mov    rax,r12
  402ff3:	mov    r15,r14
  402ff6:	jne    0x402ad3
  402ffc:	jmp    0x402adb
  403001:	cmp    QWORD PTR [rsp+0x128],0x0
  40300a:	mov    r12,QWORD PTR [rsp+0x100]
  403012:	mov    r13d,DWORD PTR [rsp+0x118]
  40301a:	je     0x402b30
  403020:	mov    rax,QWORD PTR [rsp+0x120]
  403028:	mov    r9,QWORD PTR [rip+0x14451]        # 0x417480
  40302f:	mov    DWORD PTR [rsp+0x28],r13d
  403034:	mov    QWORD PTR [rsp+0x20],r12
  403039:	mov    QWORD PTR [rsp+0x30],rax
  40303e:	mov    r8,QWORD PTR [rip+0x1ea03]        # 0x421a48
  403045:	mov    rcx,QWORD PTR [rsp+0x128]
  40304d:	lea    rdx,[rip+0x1536c]        # 0x4183c0
  403054:	call   0x401540
  403059:	jmp    0x402b30
  40305e:	cmp    QWORD PTR [rsp+0x128],0x0
  403067:	mov    r12,QWORD PTR [rsp+0x100]
  40306f:	mov    r13d,DWORD PTR [rsp+0x118]
  403077:	je     0x402b30
  40307d:	mov    rax,QWORD PTR [rsp+0x120]
  403085:	mov    r8,QWORD PTR [rip+0x1e9bc]        # 0x421a48
  40308c:	lea    rdx,[rip+0x153f5]        # 0x418488
  403093:	mov    rcx,QWORD PTR [rsp+0x128]
  40309b:	mov    DWORD PTR [rsp+0x28],r13d
  4030a0:	mov    r9,r12
  4030a3:	mov    QWORD PTR [rsp+0x20],rax
  4030a8:	call   0x401540
  4030ad:	mov    eax,0x11
  4030b2:	jmp    0x402a46
  4030b7:	cmp    QWORD PTR [rsp+0x128],0x0
  4030c0:	mov    rbp,r12
  4030c3:	mov    r15,r14
  4030c6:	mov    r12,QWORD PTR [rsp+0x100]
  4030ce:	mov    r13d,DWORD PTR [rsp+0x118]
  4030d6:	je     0x403111
  4030d8:	mov    rax,QWORD PTR [rsp+0x120]
  4030e0:	mov    r9,QWORD PTR [rip+0x143b9]        # 0x4174a0
  4030e7:	lea    rdx,[rip+0x152d2]        # 0x4183c0
  4030ee:	mov    r8,QWORD PTR [rip+0x1e953]        # 0x421a48
  4030f5:	mov    rcx,QWORD PTR [rsp+0x128]
  4030fd:	mov    DWORD PTR [rsp+0x28],r13d
  403102:	mov    QWORD PTR [rsp+0x20],r12
  403107:	mov    QWORD PTR [rsp+0x30],rax
  40310c:	call   0x401540
  403111:	test   rbp,rbp
  403114:	je     0x40311e
  403116:	mov    rcx,rbp
  403119:	call   0x416010
  40311e:	test   r15,r15
  403121:	je     0x40312b
  403123:	mov    rcx,r15
  403126:	call   0x416010
  40312b:	mov    rcx,QWORD PTR [rsp+0x90]
  403133:	test   rcx,rcx
  403136:	je     0x40313d
  403138:	call   0x416010
  40313d:	mov    rcx,QWORD PTR [rsp+0x98]
  403145:	test   rcx,rcx
  403148:	je     0x40314f
  40314a:	call   0x416010
  40314f:	mov    rcx,QWORD PTR [rsp+0xa0]
  403157:	test   rcx,rcx
  40315a:	je     0x403161
  40315c:	call   0x416010
  403161:	mov    rcx,QWORD PTR [rsp+0xa8]
  403169:	test   rcx,rcx
  40316c:	je     0x402b30
  403172:	call   0x416010
  403177:	mov    eax,0x11
  40317c:	jmp    0x402a46
  403181:	cmp    QWORD PTR [rsp+0x128],0x0
  40318a:	mov    r12,QWORD PTR [rsp+0x100]
  403192:	mov    r13d,DWORD PTR [rsp+0x118]
  40319a:	je     0x402b30
  4031a0:	mov    rax,QWORD PTR [rsp+0x120]
  4031a8:	mov    DWORD PTR [rsp+0x28],r13d
  4031ad:	mov    QWORD PTR [rsp+0x20],r12
  4031b2:	mov    r9,QWORD PTR [rip+0x142d7]        # 0x417490
  4031b9:	mov    QWORD PTR [rsp+0x30],rax
  4031be:	jmp    0x40303e
  4031c3:	cmp    QWORD PTR [rsp+0x128],0x0
  4031cc:	mov    r12,QWORD PTR [rsp+0x100]
  4031d4:	mov    r13d,DWORD PTR [rsp+0x118]
  4031dc:	je     0x402b30
  4031e2:	mov    rax,QWORD PTR [rsp+0x120]
  4031ea:	mov    r8,QWORD PTR [rip+0x1e857]        # 0x421a48
  4031f1:	lea    rdx,[rip+0x15210]        # 0x418408
  4031f8:	mov    rcx,QWORD PTR [rsp+0x128]
  403200:	mov    DWORD PTR [rsp+0x28],r13d
  403205:	mov    r9,r12
  403208:	mov    QWORD PTR [rsp+0x20],rax
  40320d:	call   0x401540
  403212:	mov    eax,0x11
  403217:	jmp    0x402a46
  40321c:	xor    eax,eax
  40321e:	or     rcx,0xffffffffffffffff
  403222:	mov    rdi,r12
  403225:	repnz scas al,BYTE PTR es:[rdi]
  403227:	mov    rax,rcx
  40322a:	mov    rcx,r12
  40322d:	not    rax
  403230:	lea    rdx,[rax-0x1]
  403234:	call   0x401f80
  403239:	test   rax,rax
  40323c:	mov    rsi,rax
  40323f:	je     0x40338a
  403245:	cmp    QWORD PTR [rsp+0x128],0x0
  40324e:	je     0x40329c
  403250:	cmp    DWORD PTR [rip+0x1f0e1],0x0        # 0x422338
  403257:	je     0x40329c
  403259:	mov    rax,QWORD PTR [rsp+0x120]
  403261:	mov    DWORD PTR [rsp+0x30],r13d
  403266:	lea    rdx,[rip+0x152e3]        # 0x418550
  40326d:	mov    r8,QWORD PTR [rip+0x1e7d4]        # 0x421a48
  403274:	mov    rcx,QWORD PTR [rsp+0x128]
  40327c:	mov    r9,r12
  40327f:	mov    QWORD PTR [rsp+0x38],rax
  403284:	mov    rax,QWORD PTR [rsi+0x80]
  40328b:	mov    QWORD PTR [rsp+0x28],rax
  403290:	mov    eax,DWORD PTR [rsi+0x78]
  403293:	mov    DWORD PTR [rsp+0x20],eax
  403297:	call   0x401540
  40329c:	mov    rcx,rsi
  40329f:	call   0x402080
  4032a4:	mov    rax,QWORD PTR [rsp+0x90]
  4032ac:	mov    QWORD PTR [rsi+0x58],0x0
  4032b4:	mov    edx,0x3b
  4032b9:	mov    QWORD PTR [rsi+0x18],rbp
  4032bd:	mov    QWORD PTR [rsi+0x40],r15
  4032c1:	mov    rcx,rbx
  4032c4:	mov    QWORD PTR [rsi+0x20],rax
  4032c8:	mov    rax,QWORD PTR [rsp+0x98]
  4032d0:	mov    QWORD PTR [rsi+0x28],rax
  4032d4:	mov    rax,QWORD PTR [rsp+0xa0]
  4032dc:	mov    QWORD PTR [rsi+0x48],rax
  4032e0:	mov    rax,QWORD PTR [rsp+0xa8]
  4032e8:	mov    QWORD PTR [rsi+0x50],rax
  4032ec:	call   0x415f90
  4032f1:	test   rax,rax
  4032f4:	je     0x40335e
  4032f6:	mov    rcx,QWORD PTR [rsp+0x78]
  4032fb:	mov    BYTE PTR [rax],0x0
  4032fe:	lea    rdi,[rax+0x1]
  403302:	call   0x4019f0
  403307:	mov    rcx,rbx
  40330a:	mov    QWORD PTR [rsi+0x8],rax
  40330e:	call   0x402140
  403313:	mov    rcx,rax
  403316:	call   0x4019f0
  40331b:	test   rdi,rdi
  40331e:	mov    QWORD PTR [rsi+0x10],rax
  403322:	je     0x403380
  403324:	mov    rcx,rdi
  403327:	call   0x402140
  40332c:	mov    rcx,rax
  40332f:	call   0x4019f0
  403334:	mov    rcx,r12
  403337:	mov    QWORD PTR [rsi+0x38],rax
  40333b:	call   0x4019f0
  403340:	mov    QWORD PTR [rsi+0x30],rax
  403344:	mov    rax,QWORD PTR [rsp+0x120]
  40334c:	mov    DWORD PTR [rsi+0x78],r13d
  403350:	mov    QWORD PTR [rsi+0x80],rax
  403357:	xor    eax,eax
  403359:	jmp    0x402a46
  40335e:	mov    rcx,QWORD PTR [rsp+0x78]
  403363:	call   0x4019f0
  403368:	mov    rcx,rbx
  40336b:	mov    QWORD PTR [rsi+0x8],rax
  40336f:	call   0x402140
  403374:	mov    rcx,rax
  403377:	call   0x4019f0
  40337c:	mov    QWORD PTR [rsi+0x10],rax
  403380:	mov    QWORD PTR [rsi+0x38],0x0
  403388:	jmp    0x403344
  40338a:	mov    ecx,0x88
  40338f:	call   0x415fe8
  403394:	test   rax,rax
  403397:	mov    rsi,rax
  40339a:	je     0x4033cf
  40339c:	mov    rcx,r12
  40339f:	call   0x4019f0
  4033a4:	mov    QWORD PTR [rsi],rax
  4033a7:	mov    rax,QWORD PTR [rip+0x1bcb2]        # 0x41f060
  4033ae:	test   rax,rax
  4033b1:	je     0x4033db
  4033b3:	mov    QWORD PTR [rax+0x70],rsi
  4033b7:	mov    QWORD PTR [rip+0x1bca2],rsi        # 0x41f060
  4033be:	mov    QWORD PTR [rsi+0x70],0x0
  4033c6:	add    DWORD PTR [r14],0x1
  4033ca:	jmp    0x4032a4
  4033cf:	lea    rcx,[rip+0x151c9]        # 0x41859f
  4033d6:	call   0x4162d0
  4033db:	mov    QWORD PTR [rip+0x1bc86],rsi        # 0x41f068
  4033e2:	mov    QWORD PTR [rip+0x1bc77],rsi        # 0x41f060
  4033e9:	jmp    0x4033be
  4033eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4033f0:	push   r15
  4033f2:	push   r14
  4033f4:	push   r13
  4033f6:	push   r12
  4033f8:	push   rbp
  4033f9:	push   rdi
  4033fa:	push   rsi
  4033fb:	push   rbx
  4033fc:	sub    rsp,0x78
  403400:	mov    rbx,rcx
  403403:	mov    rsi,rdx
  403406:	mov    edx,0x5b
  40340b:	mov    r12,r8
  40340e:	mov    ebp,r9d
  403411:	call   0x415f90
  403416:	mov    edx,0x5d
  40341b:	mov    rdi,rax
  40341e:	mov    rcx,rbx
  403421:	call   0x415f90
  403426:	mov    BYTE PTR [rdi],0x0
  403429:	movsx  edx,BYTE PTR [rbx]
  40342c:	mov    r13,rax
  40342f:	mov    rcx,QWORD PTR [rip+0x13ff2]        # 0x417428
  403436:	mov    QWORD PTR [rsp+0x68],rax
  40343b:	call   0x415f90
  403440:	test   rax,rax
  403443:	je     0x403490
  403445:	cmp    QWORD PTR [rsp+0xe8],0x0
  40344e:	mov    esi,0x11
  403453:	je     0x403477
  403455:	mov    r8,QWORD PTR [rip+0x1e5ec]        # 0x421a48
  40345c:	mov    rcx,QWORD PTR [rsp+0xe8]
  403464:	lea    rdx,[rip+0x15145]        # 0x4185b0
  40346b:	mov    DWORD PTR [rsp+0x20],ebp
  40346f:	mov    r9,rbx
  403472:	call   0x401540
  403477:	mov    eax,esi
  403479:	add    rsp,0x78
  40347d:	pop    rbx
  40347e:	pop    rsi
  40347f:	pop    rdi
  403480:	pop    rbp
  403481:	pop    r12
  403483:	pop    r13
  403485:	pop    r14
  403487:	pop    r15
  403489:	ret    
  40348a:	nop    WORD PTR [rax+rax*1+0x0]
  403490:	test   r13,r13
  403493:	je     0x4034e0
  403495:	mov    rcx,r13
  403498:	call   0x415f68
  40349d:	cmp    rax,0x1
  4034a1:	jbe    0x403520
  4034a3:	cmp    QWORD PTR [rsp+0xe8],0x0
  4034ac:	mov    esi,0x11
  4034b1:	je     0x403477
  4034b3:	mov    r9,QWORD PTR [rsp+0xe0]
  4034bb:	mov    r8,QWORD PTR [rip+0x1e586]        # 0x421a48
  4034c2:	lea    rdx,[rip+0x15157]        # 0x418620
  4034c9:	mov    rcx,QWORD PTR [rsp+0xe8]
  4034d1:	mov    DWORD PTR [rsp+0x20],ebp
  4034d5:	call   0x401540
  4034da:	jmp    0x403477
  4034dc:	nop    DWORD PTR [rax+0x0]
  4034e0:	cmp    QWORD PTR [rsp+0xe8],0x0
  4034e9:	mov    esi,0x11
  4034ee:	je     0x403477
  4034f0:	mov    r9,QWORD PTR [rsp+0xe0]
  4034f8:	mov    r8,QWORD PTR [rip+0x1e549]        # 0x421a48
  4034ff:	lea    rdx,[rip+0x150ea]        # 0x4185f0
  403506:	mov    rcx,QWORD PTR [rsp+0xe8]
  40350e:	mov    DWORD PTR [rsp+0x20],ebp
  403512:	call   0x401540
  403517:	jmp    0x403477
  40351c:	nop    DWORD PTR [rax+0x0]
  403520:	mov    BYTE PTR [r13+0x0],0x0
  403525:	mov    ecx,0x140
  40352a:	call   0x415fe8
  40352f:	test   rax,rax
  403532:	mov    r15,rax
  403535:	je     0x403806
  40353b:	lea    rax,[rsp+0x68]
  403540:	xor    r14d,r14d
  403543:	xor    r13d,r13d
  403546:	mov    DWORD PTR [rsp+0x4c],0x14
  40354e:	mov    QWORD PTR [rsp+0x50],rax
  403553:	jmp    0x403606
  403558:	nop    DWORD PTR [rax+rax*1+0x0]
  403560:	test   r13d,r13d
  403563:	je     0x403576
  403565:	movsd  xmm1,QWORD PTR [r15+r14*1-0x10]
  40356c:	ucomisd xmm1,xmm0
  403570:	jae    0x403734
  403576:	lea    rdx,[rip+0x15160]        # 0x4186dd
  40357d:	mov    rcx,r8
  403580:	mov    QWORD PTR [rsp+0x58],r8
  403585:	call   0x415f40
  40358a:	mov    r8,QWORD PTR [rsp+0x58]
  40358f:	mov    rdx,QWORD PTR [rsp+0x50]
  403594:	lea    rsi,[r8+rax*1]
  403598:	mov    rcx,rsi
  40359b:	call   0x40cc30
  4035a0:	mov    r8,QWORD PTR [rsp+0x68]
  4035a5:	mov    rax,QWORD PTR [rsp+0x40]
  4035aa:	cmp    rsi,r8
  4035ad:	movsd  QWORD PTR [rax+0x8],xmm0
  4035b2:	je     0x4036de
  4035b8:	lea    rdx,[rip+0x1515a]        # 0x418719
  4035bf:	mov    rcx,r8
  4035c2:	mov    QWORD PTR [rsp+0x40],r8
  4035c7:	add    r13d,0x1
  4035cb:	call   0x415f40
  4035d0:	cmp    DWORD PTR [rsp+0x4c],r13d
  4035d5:	mov    r8,QWORD PTR [rsp+0x40]
  4035da:	lea    rsi,[r8+rax*1]
  4035de:	jg     0x403602
  4035e0:	add    DWORD PTR [rsp+0x4c],0x14
  4035e5:	mov    rcx,r15
  4035e8:	movsxd rdx,DWORD PTR [rsp+0x4c]
  4035ed:	shl    rdx,0x4
  4035f1:	call   0x415fb0
  4035f6:	test   rax,rax
  4035f9:	mov    r15,rax
  4035fc:	je     0x40377c
  403602:	add    r14,0x10
  403606:	mov    rdx,QWORD PTR [rsp+0x50]
  40360b:	lea    rax,[r15+r14*1]
  40360f:	mov    rcx,rsi
  403612:	mov    QWORD PTR [rsp+0x40],rax
  403617:	call   0x40cc30
  40361c:	mov    r8,QWORD PTR [rsp+0x68]
  403621:	mov    rax,QWORD PTR [rsp+0x40]
  403626:	cmp    rsi,r8
  403629:	movsd  QWORD PTR [rax],xmm0
  40362d:	jne    0x403560
  403633:	mov    rcx,rbx
  403636:	call   0x415f68
  40363b:	mov    rcx,rbx
  40363e:	mov    edx,eax
  403640:	call   0x401f80
  403645:	test   rax,rax
  403648:	mov    rsi,rax
  40364b:	je     0x4037b0
  403651:	cmp    QWORD PTR [rsp+0xe8],0x0
  40365a:	je     0x4036a8
  40365c:	mov    eax,DWORD PTR [rip+0x1ecd6]        # 0x422338
  403662:	test   eax,eax
  403664:	je     0x4036a8
  403666:	mov    rax,QWORD PTR [rsp+0xe0]
  40366e:	mov    DWORD PTR [rsp+0x30],ebp
  403672:	lea    rdx,[rip+0x14ae7]        # 0x418160
  403679:	mov    r8,QWORD PTR [rip+0x1e3c8]        # 0x421a48
  403680:	mov    rcx,QWORD PTR [rsp+0xe8]
  403688:	mov    r9,rbx
  40368b:	mov    QWORD PTR [rsp+0x38],rax
  403690:	mov    rax,QWORD PTR [rsi+0x80]
  403697:	mov    QWORD PTR [rsp+0x28],rax
  40369c:	mov    eax,DWORD PTR [rsi+0x78]
  40369f:	mov    DWORD PTR [rsp+0x20],eax
  4036a3:	call   0x401540
  4036a8:	mov    rcx,rsi
  4036ab:	call   0x402080
  4036b0:	lea    rcx,[rdi+0x1]
  4036b4:	call   0x4019f0
  4036b9:	mov    QWORD PTR [rsi+0x68],rax
  4036bd:	mov    rax,QWORD PTR [rsp+0xe0]
  4036c5:	mov    DWORD PTR [rsi+0x60],r13d
  4036c9:	mov    QWORD PTR [rsi+0x58],r15
  4036cd:	mov    DWORD PTR [rsi+0x78],ebp
  4036d0:	mov    QWORD PTR [rsi+0x80],rax
  4036d7:	xor    esi,esi
  4036d9:	jmp    0x403477
  4036de:	cmp    QWORD PTR [rsp+0xe8],0x0
  4036e7:	je     0x403722
  4036e9:	movsd  xmm0,QWORD PTR [rax]
  4036ed:	mov    rax,QWORD PTR [rsp+0xe0]
  4036f5:	lea    rdx,[rip+0x14fe4]        # 0x4186e0
  4036fc:	mov    r8,QWORD PTR [rip+0x1e345]        # 0x421a48
  403703:	mov    rcx,QWORD PTR [rsp+0xe8]
  40370b:	movapd xmm3,xmm0
  40370f:	movq   r9,xmm0
  403714:	mov    DWORD PTR [rsp+0x28],ebp
  403718:	mov    QWORD PTR [rsp+0x20],rax
  40371d:	call   0x401540
  403722:	mov    rcx,r15
  403725:	mov    esi,0x11
  40372a:	call   0x416010
  40372f:	jmp    0x403477
  403734:	cmp    QWORD PTR [rsp+0xe8],0x0
  40373d:	je     0x403722
  40373f:	mov    rax,QWORD PTR [rsp+0xe0]
  403747:	mov    r8,QWORD PTR [rip+0x1e2fa]        # 0x421a48
  40374e:	movsd  QWORD PTR [rsp+0x20],xmm0
  403754:	mov    rcx,QWORD PTR [rsp+0xe8]
  40375c:	movapd xmm3,xmm1
  403760:	movq   r9,xmm1
  403765:	lea    rdx,[rip+0x14f2c]        # 0x418698
  40376c:	mov    DWORD PTR [rsp+0x30],ebp
  403770:	mov    QWORD PTR [rsp+0x28],rax
  403775:	call   0x401540
  40377a:	jmp    0x403722
  40377c:	cmp    QWORD PTR [rsp+0xe8],0x0
  403785:	mov    esi,0x12
  40378a:	je     0x403477
  403790:	mov    r8,QWORD PTR [rip+0x1e2b1]        # 0x421a48
  403797:	mov    rcx,QWORD PTR [rsp+0xe8]
  40379f:	lea    rdx,[rip+0x14eca]        # 0x418670
  4037a6:	call   0x401540
  4037ab:	jmp    0x403477
  4037b0:	mov    ecx,0x88
  4037b5:	call   0x415fe8
  4037ba:	test   rax,rax
  4037bd:	mov    rsi,rax
  4037c0:	je     0x403806
  4037c2:	mov    rcx,rbx
  4037c5:	call   0x4019f0
  4037ca:	mov    QWORD PTR [rsi],rax
  4037cd:	mov    rax,QWORD PTR [rip+0x1b88c]        # 0x41f060
  4037d4:	test   rax,rax
  4037d7:	je     0x4037f6
  4037d9:	mov    QWORD PTR [rax+0x70],rsi
  4037dd:	mov    QWORD PTR [rip+0x1b87c],rsi        # 0x41f060
  4037e4:	mov    QWORD PTR [rsi+0x70],0x0
  4037ec:	add    DWORD PTR [r12],0x1
  4037f1:	jmp    0x4036b0
  4037f6:	mov    QWORD PTR [rip+0x1b86b],rsi        # 0x41f068
  4037fd:	mov    QWORD PTR [rip+0x1b85c],rsi        # 0x41f060
  403804:	jmp    0x4037e4
  403806:	lea    rcx,[rip+0x14e53]        # 0x418660
  40380d:	call   0x4162d0
  403812:	nop
  403813:	nop    DWORD PTR [rax]
  403816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403820:	push   r13
  403822:	push   r12
  403824:	push   rbp
  403825:	push   rdi
  403826:	push   rsi
  403827:	push   rbx
  403828:	sub    rsp,0x48
  40382c:	mov    rdi,QWORD PTR [rsp+0xa0]
  403834:	mov    rsi,rdx
  403837:	mov    r13,rcx
  40383a:	mov    edx,0x3b
  40383f:	mov    rcx,rsi
  403842:	mov    r12d,r8d
  403845:	mov    rbp,r9
  403848:	call   0x415f90
  40384d:	test   rax,rax
  403850:	je     0x4038e0
  403856:	mov    rcx,r13
  403859:	call   0x401ff0
  40385e:	test   rax,rax
  403861:	mov    rbx,rax
  403864:	je     0x403920
  40386a:	test   rdi,rdi
  40386d:	je     0x4038ac
  40386f:	mov    eax,DWORD PTR [rip+0x1eac3]        # 0x422338
  403875:	test   eax,eax
  403877:	je     0x4038ac
  403879:	mov    QWORD PTR [rsp+0x38],rbp
  40387e:	mov    DWORD PTR [rsp+0x30],r12d
  403883:	lea    rdx,[rip+0x14ec6]        # 0x418750
  40388a:	mov    rax,QWORD PTR [rbx+0x20]
  40388e:	mov    r8,QWORD PTR [rip+0x1e1b3]        # 0x421a48
  403895:	mov    r9,r13
  403898:	mov    rcx,rdi
  40389b:	mov    QWORD PTR [rsp+0x28],rax
  4038a0:	mov    eax,DWORD PTR [rbx+0x18]
  4038a3:	mov    DWORD PTR [rsp+0x20],eax
  4038a7:	call   0x401540
  4038ac:	mov    rcx,QWORD PTR [rbx+0x8]
  4038b0:	call   0x416010
  4038b5:	mov    rcx,rsi
  4038b8:	call   0x4019f0
  4038bd:	mov    DWORD PTR [rbx+0x18],r12d
  4038c1:	mov    QWORD PTR [rbx+0x8],rax
  4038c5:	mov    QWORD PTR [rbx+0x20],rbp
  4038c9:	xor    ebx,ebx
  4038cb:	mov    eax,ebx
  4038cd:	add    rsp,0x48
  4038d1:	pop    rbx
  4038d2:	pop    rsi
  4038d3:	pop    rdi
  4038d4:	pop    rbp
  4038d5:	pop    r12
  4038d7:	pop    r13
  4038d9:	ret    
  4038da:	nop    WORD PTR [rax+rax*1+0x0]
  4038e0:	test   rdi,rdi
  4038e3:	mov    ebx,0x11
  4038e8:	je     0x4038cb
  4038ea:	mov    r8,QWORD PTR [rip+0x1e157]        # 0x421a48
  4038f1:	lea    rdx,[rip+0x14e28]        # 0x418720
  4038f8:	mov    QWORD PTR [rsp+0x28],rbp
  4038fd:	mov    DWORD PTR [rsp+0x20],r12d
  403902:	mov    r9d,0x3b
  403908:	mov    rcx,rdi
  40390b:	call   0x401540
  403910:	mov    eax,ebx
  403912:	add    rsp,0x48
  403916:	pop    rbx
  403917:	pop    rsi
  403918:	pop    rdi
  403919:	pop    rbp
  40391a:	pop    r12
  40391c:	pop    r13
  40391e:	ret    
  40391f:	nop
  403920:	mov    ecx,0x28
  403925:	call   0x415fe8
  40392a:	test   rax,rax
  40392d:	mov    rbx,rax
  403930:	je     0x403971
  403932:	mov    rcx,r13
  403935:	call   0x4019f0
  40393a:	mov    QWORD PTR [rbx],rax
  40393d:	mov    rax,QWORD PTR [rip+0x1b6fc]        # 0x41f040
  403944:	test   rax,rax
  403947:	je     0x403961
  403949:	mov    QWORD PTR [rax+0x10],rbx
  40394d:	mov    QWORD PTR [rip+0x1b6ec],rbx        # 0x41f040
  403954:	mov    QWORD PTR [rbx+0x10],0x0
  40395c:	jmp    0x4038b5
  403961:	mov    QWORD PTR [rip+0x1b6e0],rbx        # 0x41f048
  403968:	mov    QWORD PTR [rip+0x1b6d1],rbx        # 0x41f040
  40396f:	jmp    0x403954
  403971:	lea    rcx,[rip+0x14e28]        # 0x4187a0
  403978:	call   0x4162d0
  40397d:	nop
  40397e:	xchg   ax,ax
  403980:	push   rsi
  403981:	push   rbx
  403982:	sub    rsp,0x28
  403986:	mov    rsi,rdx
  403989:	call   0x416000
  40398e:	mov    rbx,rax
  403991:	mov    eax,0x2
  403996:	test   rbx,rbx
  403999:	je     0x4039d8
  40399b:	lea    rdx,[rip+0x146e4]        # 0x418086
  4039a2:	mov    rcx,rsi
  4039a5:	call   0x415f30
  4039aa:	test   rax,rax
  4039ad:	jne    0x4039c4
  4039af:	jmp    0x4039e0
  4039b1:	lea    rdx,[rip+0x146ce]        # 0x418086
  4039b8:	xor    ecx,ecx
  4039ba:	call   0x415f30
  4039bf:	test   rax,rax
  4039c2:	je     0x4039e0
  4039c4:	mov    rdx,rax
  4039c7:	mov    rcx,rbx
  4039ca:	call   0x415f88
  4039cf:	test   eax,eax
  4039d1:	jne    0x4039b1
  4039d3:	mov    eax,0x1
  4039d8:	add    rsp,0x28
  4039dc:	pop    rbx
  4039dd:	pop    rsi
  4039de:	ret    
  4039df:	nop
  4039e0:	xor    eax,eax
  4039e2:	add    rsp,0x28
  4039e6:	pop    rbx
  4039e7:	pop    rsi
  4039e8:	ret    
  4039e9:	nop    DWORD PTR [rax+0x0]
  4039f0:	push   r12
  4039f2:	push   rbp
  4039f3:	push   rdi
  4039f4:	push   rsi
  4039f5:	push   rbx
  4039f6:	sub    rsp,0x20
  4039fa:	test   r8d,r8d
  4039fd:	mov    rdi,rcx
  403a00:	mov    rbp,rdx
  403a03:	jne    0x403a20
  403a05:	call   0x416000
  403a0a:	xor    edx,edx
  403a0c:	test   rax,rax
  403a0f:	je     0x403a20
  403a11:	mov    eax,edx
  403a13:	add    rsp,0x20
  403a17:	pop    rbx
  403a18:	pop    rsi
  403a19:	pop    rdi
  403a1a:	pop    rbp
  403a1b:	pop    r12
  403a1d:	ret    
  403a1e:	xchg   ax,ax
  403a20:	mov    rcx,rdi
  403a23:	call   0x415f68
  403a28:	mov    rcx,rbp
  403a2b:	mov    rsi,rax
  403a2e:	call   0x415f68
  403a33:	lea    rcx,[rsi+rax*1+0x2]
  403a38:	mov    r12,rax
  403a3b:	call   0x415fe8
  403a40:	test   rax,rax
  403a43:	mov    rbx,rax
  403a46:	je     0x403a80
  403a48:	mov    r8,rsi
  403a4b:	mov    rdx,rdi
  403a4e:	mov    rcx,rax
  403a51:	call   0x415fe0
  403a56:	lea    rcx,[rbx+rsi*1+0x1]
  403a5b:	lea    r8,[r12+0x1]
  403a60:	mov    rdx,rbp
  403a63:	mov    BYTE PTR [rbx+rsi*1],0x3d
  403a67:	call   0x415fe0
  403a6c:	mov    rcx,rbx
  403a6f:	add    rsp,0x20
  403a73:	pop    rbx
  403a74:	pop    rsi
  403a75:	pop    rdi
  403a76:	pop    rbp
  403a77:	pop    r12
  403a79:	jmp    0x415ef0
  403a7e:	xchg   ax,ax
  403a80:	mov    edx,0x1
  403a85:	mov    eax,edx
  403a87:	add    rsp,0x20
  403a8b:	pop    rbx
  403a8c:	pop    rsi
  403a8d:	pop    rdi
  403a8e:	pop    rbp
  403a8f:	pop    r12
  403a91:	ret    
  403a92:	nop    DWORD PTR [rax+0x0]
  403a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403aa0:	sub    rsp,0x28
  403aa4:	xor    ecx,ecx
  403aa6:	mov    r8d,0x800
  403aac:	lea    rdx,[rip+0x1c2cd]        # 0x41fd80
  403ab3:	call   QWORD PTR [rip+0x1f927]        # 0x4233e0
  403ab9:	test   eax,eax
  403abb:	je     0x403b00
  403abd:	lea    rcx,[rip+0x1c2bc]        # 0x41fd80
  403ac4:	mov    edx,0x5c
  403ac9:	call   0x415f48
  403ace:	test   rax,rax
  403ad1:	je     0x403aef
  403ad3:	lea    rcx,[rip+0x1c2a6]        # 0x41fd80
  403ada:	mov    BYTE PTR [rax],0x0
  403add:	mov    edx,0x5c
  403ae2:	call   0x415f48
  403ae7:	test   rax,rax
  403aea:	je     0x403aef
  403aec:	mov    BYTE PTR [rax],0x0
  403aef:	lea    rax,[rip+0x1c28a]        # 0x41fd80
  403af6:	add    rsp,0x28
  403afa:	ret    
  403afb:	nop    DWORD PTR [rax+rax*1+0x0]
  403b00:	mov    eax,0x3a63
  403b05:	mov    BYTE PTR [rip+0x1c276],0x0        # 0x41fd82
  403b0c:	mov    WORD PTR [rip+0x1c26d],ax        # 0x41fd80
  403b13:	lea    rax,[rip+0x1c266]        # 0x41fd80
  403b1a:	add    rsp,0x28
  403b1e:	ret    
  403b1f:	nop
  403b20:	push   r15
  403b22:	push   r14
  403b24:	push   r13
  403b26:	push   r12
  403b28:	push   rbp
  403b29:	push   rdi
  403b2a:	push   rsi
  403b2b:	push   rbx
  403b2c:	sub    rsp,0xb8
  403b33:	mov    r13,rdx
  403b36:	lea    rdx,[rip+0x14c6e]        # 0x4187ab
  403b3d:	mov    QWORD PTR [rsp+0x100],rcx
  403b45:	mov    QWORD PTR [rsp+0x110],r8
  403b4d:	mov    QWORD PTR [rsp+0x118],r9
  403b55:	mov    QWORD PTR [rsp+0x98],0x0
  403b61:	mov    DWORD PTR [rsp+0x8c],0x0
  403b6c:	mov    DWORD PTR [rsp+0x90],0x0
  403b77:	mov    DWORD PTR [rsp+0x94],0x0
  403b82:	mov    DWORD PTR [rsp+0x84],0x0
  403b8d:	mov    DWORD PTR [rsp+0x88],0x0
  403b98:	call   0x416030
  403b9d:	test   rax,rax
  403ba0:	mov    rbx,rax
  403ba3:	je     0x404040
  403ba9:	lea    r12,[rsp+0x88]
  403bb1:	lea    rbp,[rsp+0x98]
  403bb9:	lea    r15,[rsp+0x84]
  403bc1:	xor    r14d,r14d
  403bc4:	mov    rdx,r12
  403bc7:	mov    rcx,rbp
  403bca:	call   0x4015f0
  403bcf:	mov    rcx,QWORD PTR [rsp+0x100]
  403bd7:	call   0x4019f0
  403bdc:	mov    QWORD PTR [rsp+0x58],rax
  403be1:	lea    rax,[rsp+0xa0]
  403be9:	mov    DWORD PTR [rsp+0x30],0x0
  403bf1:	mov    DWORD PTR [rsp+0x70],0x0
  403bf9:	mov    DWORD PTR [rsp+0x44],0x0
  403c01:	mov    QWORD PTR [rsp+0x48],rax
  403c06:	lea    rax,[rsp+0xa8]
  403c0e:	mov    DWORD PTR [rsp+0x74],0x0
  403c16:	mov    DWORD PTR [rsp+0x38],0x0
  403c1e:	mov    QWORD PTR [rsp+0x50],rax
  403c23:	lea    rax,[rsp+0x8c]
  403c2b:	mov    QWORD PTR [rsp+0x78],rax
  403c30:	lea    rax,[rsp+0x94]
  403c38:	mov    QWORD PTR [rsp+0x60],rax
  403c3d:	lea    rax,[rsp+0x90]
  403c45:	mov    QWORD PTR [rsp+0x68],rax
  403c4a:	nop    WORD PTR [rax+rax*1+0x0]
  403c50:	mov    rcx,rbx
  403c53:	call   0x416048
  403c58:	test   eax,eax
  403c5a:	jne    0x403cf0
  403c60:	mov    r9,r15
  403c63:	mov    r8,rbx
  403c66:	mov    rdx,r12
  403c69:	mov    rcx,rbp
  403c6c:	call   0x4018f0
  403c71:	test   rax,rax
  403c74:	je     0x403cf0
  403c76:	cmp    DWORD PTR [rsp+0x84],0x1
  403c7e:	je     0x403e90
  403c84:	mov    rsi,QWORD PTR [rsp+0x98]
  403c8c:	mov    rcx,rsi
  403c8f:	call   0x415f68
  403c94:	cmp    rax,0xffffffffffffffff
  403c98:	jne    0x403d80
  403c9e:	test   r13,r13
  403ca1:	mov    r14d,0x1
  403ca7:	je     0x403c50
  403ca9:	mov    rax,QWORD PTR [rsp+0x100]
  403cb1:	mov    r9,QWORD PTR [rip+0x136b8]        # 0x417370
  403cb8:	lea    rdx,[rip+0x14af3]        # 0x4187b2
  403cbf:	mov    r8,QWORD PTR [rip+0x1dd82]        # 0x421a48
  403cc6:	mov    rcx,r13
  403cc9:	mov    QWORD PTR [rsp+0x28],rax
  403cce:	mov    eax,DWORD PTR [rsp+0x84]
  403cd5:	mov    DWORD PTR [rsp+0x20],eax
  403cd9:	call   0x401540
  403cde:	mov    rcx,rbx
  403ce1:	call   0x416048
  403ce6:	test   eax,eax
  403ce8:	je     0x403c60
  403cee:	xchg   ax,ax
  403cf0:	mov    rcx,rbx
  403cf3:	call   0x416050
  403cf8:	mov    rcx,QWORD PTR [rsp+0x98]
  403d00:	call   0x416010
  403d05:	cmp    QWORD PTR [rsp+0x110],0x0
  403d0e:	je     0x403d21
  403d10:	mov    rdi,QWORD PTR [rsp+0x110]
  403d18:	mov    eax,DWORD PTR [rsp+0x8c]
  403d1f:	add    DWORD PTR [rdi],eax
  403d21:	cmp    QWORD PTR [rsp+0x118],0x0
  403d2a:	je     0x403d3d
  403d2c:	mov    rdi,QWORD PTR [rsp+0x118]
  403d34:	mov    eax,DWORD PTR [rsp+0x90]
  403d3b:	add    DWORD PTR [rdi],eax
  403d3d:	cmp    QWORD PTR [rsp+0x120],0x0
  403d46:	je     0x403d59
  403d48:	mov    rdi,QWORD PTR [rsp+0x120]
  403d50:	mov    eax,DWORD PTR [rsp+0x94]
  403d57:	add    DWORD PTR [rdi],eax
  403d59:	cmp    r14d,0x1
  403d5d:	sbb    eax,eax
  403d5f:	not    eax
  403d61:	and    eax,0x11
  403d64:	add    rsp,0xb8
  403d6b:	pop    rbx
  403d6c:	pop    rsi
  403d6d:	pop    rdi
  403d6e:	pop    rbp
  403d6f:	pop    r12
  403d71:	pop    r13
  403d73:	pop    r14
  403d75:	pop    r15
  403d77:	ret    
  403d78:	nop    DWORD PTR [rax+rax*1+0x0]
  403d80:	mov    rcx,rsi
  403d83:	call   0x4016c0
  403d88:	mov    rsi,QWORD PTR [rsp+0x98]
  403d90:	mov    edx,0x23
  403d95:	mov    rcx,rsi
  403d98:	call   0x415f90
  403d9d:	test   rax,rax
  403da0:	je     0x403dad
  403da2:	mov    BYTE PTR [rax],0x0
  403da5:	mov    rsi,QWORD PTR [rsp+0x98]
  403dad:	cmp    BYTE PTR [rsi],0x21
  403db0:	je     0x403ed0
  403db6:	mov    edx,DWORD PTR [rsp+0x44]
  403dba:	test   edx,edx
  403dbc:	je     0x403dcc
  403dbe:	mov    eax,DWORD PTR [rip+0x1e544]        # 0x422308
  403dc4:	test   eax,eax
  403dc6:	je     0x403c50
  403dcc:	mov    eax,DWORD PTR [rsp+0x30]
  403dd0:	or     eax,DWORD PTR [rsp+0x38]
  403dd4:	jne    0x403c50
  403dda:	mov    r8,QWORD PTR [rsp+0x48]
  403ddf:	mov    rdx,QWORD PTR [rsp+0x50]
  403de4:	mov    rcx,rsi
  403de7:	call   0x402250
  403dec:	mov    rsi,QWORD PTR [rsp+0xa8]
  403df4:	test   rsi,rsi
  403df7:	je     0x404021
  403dfd:	mov    rdi,QWORD PTR [rsp+0xa0]
  403e05:	test   rdi,rdi
  403e08:	je     0x4040f0
  403e0e:	mov    rcx,rsi
  403e11:	call   0x415f68
  403e16:	cdqe   
  403e18:	cmp    BYTE PTR [rsi+rax*1-0x1],0x2d
  403e1d:	je     0x40417d
  403e23:	mov    edx,0x5b
  403e28:	mov    rcx,rsi
  403e2b:	call   0x415f90
  403e30:	test   rax,rax
  403e33:	je     0x404050
  403e39:	mov    rax,QWORD PTR [rsp+0x58]
  403e3e:	mov    r9d,DWORD PTR [rsp+0x84]
  403e46:	mov    rdx,rdi
  403e49:	mov    r8,QWORD PTR [rsp+0x60]
  403e4e:	mov    QWORD PTR [rsp+0x28],r13
  403e53:	mov    rcx,rsi
  403e56:	mov    QWORD PTR [rsp+0x20],rax
  403e5b:	call   0x4033f0
  403e60:	test   eax,eax
  403e62:	je     0x404021
  403e68:	cmp    eax,0x11
  403e6b:	jne    0x4045c0
  403e71:	mov    DWORD PTR [rsp+0x30],0x0
  403e79:	mov    DWORD PTR [rsp+0x38],0x0
  403e81:	mov    r14d,0x1
  403e87:	jmp    0x403c50
  403e8c:	nop    DWORD PTR [rax+0x0]
  403e90:	mov    rax,QWORD PTR [rsp+0x98]
  403e98:	lea    rsi,[rip+0x1490f]        # 0x4187ae
  403e9f:	mov    ecx,0x3
  403ea4:	mov    rdi,rax
  403ea7:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403ea9:	mov    rsi,rax
  403eac:	seta   cl
  403eaf:	setb   dl
  403eb2:	cmp    cl,dl
  403eb4:	jne    0x403c8c
  403eba:	mov    BYTE PTR [rax],0x20
  403ebd:	mov    BYTE PTR [rax+0x1],0x20
  403ec1:	mov    BYTE PTR [rax+0x2],0x20
  403ec5:	jmp    0x403c84
  403eca:	nop    WORD PTR [rax+rax*1+0x0]
  403ed0:	lea    rcx,[rsi+0x1]
  403ed4:	lea    rdx,[rip+0x141ab]        # 0x418086
  403edb:	call   0x415f30
  403ee0:	test   rax,rax
  403ee3:	mov    QWORD PTR [rsp+0xa8],rax
  403eeb:	je     0x404140
  403ef1:	lea    rdi,[rip+0x148fe]        # 0x4187f6
  403ef8:	mov    ecx,0x4
  403efd:	mov    rsi,rax
  403f00:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403f02:	jne    0x403fa0
  403f08:	lea    rdx,[rip+0x14177]        # 0x418086
  403f0f:	xor    ecx,ecx
  403f11:	movzx  esi,BYTE PTR [rax+0x3]
  403f15:	call   0x415f30
  403f1a:	lea    rdx,[rip+0x148e0]        # 0x418801
  403f21:	xor    ecx,ecx
  403f23:	mov    QWORD PTR [rsp+0xa8],rax
  403f2b:	call   0x415f30
  403f30:	mov    rcx,QWORD PTR [rsp+0xa8]
  403f38:	mov    QWORD PTR [rsp+0xa0],rax
  403f40:	test   rcx,rcx
  403f43:	je     0x4040ad
  403f49:	test   rax,rax
  403f4c:	je     0x404272
  403f52:	mov    edx,DWORD PTR [rsp+0x70]
  403f56:	test   edx,edx
  403f58:	je     0x4041a9
  403f5e:	test   r13,r13
  403f61:	mov    r14d,0x1
  403f67:	je     0x403c50
  403f6d:	mov    rax,QWORD PTR [rsp+0x100]
  403f75:	mov    r9d,DWORD PTR [rsp+0x84]
  403f7d:	lea    rdx,[rip+0x148ec]        # 0x418870
  403f84:	mov    r8,QWORD PTR [rip+0x1dabd]        # 0x421a48
  403f8b:	mov    rcx,r13
  403f8e:	mov    QWORD PTR [rsp+0x20],rax
  403f93:	call   0x401540
  403f98:	jmp    0x403c50
  403f9d:	nop    DWORD PTR [rax]
  403fa0:	lea    rdi,[rip+0x14853]        # 0x4187fa
  403fa7:	mov    ecx,0x7
  403fac:	mov    rsi,rax
  403faf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403fb1:	je     0x403f08
  403fb7:	lea    rdi,[rip+0x14922]        # 0x4188e0
  403fbe:	mov    ecx,0x7
  403fc3:	mov    rsi,rax
  403fc6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403fc8:	jne    0x4041e0
  403fce:	mov    eax,DWORD PTR [rsp+0x70]
  403fd2:	test   eax,eax
  403fd4:	jne    0x4042b1
  403fda:	test   r13,r13
  403fdd:	je     0x40446b
  403fe3:	mov    rax,QWORD PTR [rsp+0x100]
  403feb:	mov    r9d,DWORD PTR [rsp+0x84]
  403ff3:	lea    rdx,[rip+0x148ee]        # 0x4188e8
  403ffa:	mov    r8,QWORD PTR [rip+0x1da47]        # 0x421a48
  404001:	mov    rcx,r13
  404004:	mov    r14d,0x1
  40400a:	mov    QWORD PTR [rsp+0x20],rax
  40400f:	call   0x401540
  404014:	mov    DWORD PTR [rsp+0x30],0x0
  40401c:	jmp    0x403c50
  404021:	mov    DWORD PTR [rsp+0x30],0x0
  404029:	mov    DWORD PTR [rsp+0x38],0x0
  404031:	jmp    0x403c50
  404036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404040:	mov    eax,0x10
  404045:	jmp    0x403d64
  40404a:	nop    WORD PTR [rax+rax*1+0x0]
  404050:	mov    edx,0x28
  404055:	mov    rcx,rsi
  404058:	call   0x415f90
  40405d:	test   rax,rax
  404060:	mov    rax,QWORD PTR [rsp+0x58]
  404065:	mov    QWORD PTR [rsp+0x28],r13
  40406a:	mov    r9d,DWORD PTR [rsp+0x84]
  404072:	mov    QWORD PTR [rsp+0x20],rax
  404077:	je     0x4042c6
  40407d:	mov    r8,QWORD PTR [rsp+0x60]
  404082:	mov    rdx,rdi
  404085:	mov    rcx,rsi
  404088:	call   0x4029a0
  40408d:	test   eax,eax
  40408f:	mov    eax,0x1
  404094:	mov    DWORD PTR [rsp+0x30],0x0
  40409c:	mov    DWORD PTR [rsp+0x38],0x0
  4040a4:	cmovne r14d,eax
  4040a8:	jmp    0x403c50
  4040ad:	test   r13,r13
  4040b0:	mov    r14d,0x1
  4040b6:	je     0x403c50
  4040bc:	mov    rax,QWORD PTR [rsp+0x100]
  4040c4:	mov    r9d,DWORD PTR [rsp+0x84]
  4040cc:	lea    rdx,[rip+0x14735]        # 0x418808
  4040d3:	mov    r8,QWORD PTR [rip+0x1d96e]        # 0x421a48
  4040da:	mov    rcx,r13
  4040dd:	mov    QWORD PTR [rsp+0x20],rax
  4040e2:	call   0x401540
  4040e7:	jmp    0x403c50
  4040ec:	nop    DWORD PTR [rax+0x0]
  4040f0:	test   r13,r13
  4040f3:	je     0x403e71
  4040f9:	mov    rax,QWORD PTR [rsp+0x100]
  404101:	mov    r9d,DWORD PTR [rsp+0x84]
  404109:	lea    rdx,[rip+0x14a00]        # 0x418b10
  404110:	mov    r8,QWORD PTR [rip+0x1d931]        # 0x421a48
  404117:	mov    QWORD PTR [rsp+0x20],rax
  40411c:	mov    rcx,r13
  40411f:	mov    r14d,0x1
  404125:	call   0x401540
  40412a:	mov    DWORD PTR [rsp+0x30],0x0
  404132:	mov    DWORD PTR [rsp+0x38],0x0
  40413a:	jmp    0x403c50
  40413f:	nop
  404140:	test   r13,r13
  404143:	mov    r14d,0x1
  404149:	je     0x403c50
  40414f:	mov    eax,DWORD PTR [rsp+0x84]
  404156:	mov    r9,QWORD PTR [rsp+0x100]
  40415e:	lea    rdx,[rip+0x1466b]        # 0x4187d0
  404165:	mov    r8,QWORD PTR [rip+0x1d8dc]        # 0x421a48
  40416c:	mov    rcx,r13
  40416f:	mov    DWORD PTR [rsp+0x20],eax
  404173:	call   0x401540
  404178:	jmp    0x403c50
  40417d:	mov    rax,QWORD PTR [rsp+0x58]
  404182:	mov    r9d,DWORD PTR [rsp+0x84]
  40418a:	mov    rdx,rdi
  40418d:	mov    r8,QWORD PTR [rsp+0x68]
  404192:	mov    QWORD PTR [rsp+0x28],r13
  404197:	mov    rcx,rsi
  40419a:	mov    QWORD PTR [rsp+0x20],rax
  40419f:	call   0x402560
  4041a4:	jmp    0x40408d
  4041a9:	mov    rdx,rax
  4041ac:	call   0x403980
  4041b1:	cmp    eax,0x2
  4041b4:	je     0x40432e
  4041ba:	xor    edx,edx
  4041bc:	cmp    sil,0x6e
  4041c0:	mov    DWORD PTR [rsp+0x70],0x1
  4041c8:	sete   dl
  4041cb:	cmp    edx,eax
  4041cd:	mov    eax,0x1
  4041d2:	cmovne eax,DWORD PTR [rsp+0x30]
  4041d7:	mov    DWORD PTR [rsp+0x30],eax
  4041db:	jmp    0x403c50
  4041e0:	lea    rdi,[rip+0x1472b]        # 0x418912
  4041e7:	mov    ecx,0x7
  4041ec:	mov    rsi,rax
  4041ef:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4041f1:	je     0x404388
  4041f7:	lea    rdi,[rip+0x14783]        # 0x418981
  4041fe:	mov    ecx,0xa
  404203:	mov    rsi,rax
  404206:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404208:	je     0x4042db
  40420e:	lea    rdi,[rip+0x147a8]        # 0x4189bd
  404215:	mov    ecx,0x5
  40421a:	mov    rsi,rax
  40421d:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40421f:	jne    0x4043f2
  404225:	mov    r11d,DWORD PTR [rsp+0x44]
  40422a:	test   r11d,r11d
  40422d:	je     0x4044c3
  404233:	test   r13,r13
  404236:	mov    r14d,0x1
  40423c:	je     0x403c50
  404242:	mov    rax,QWORD PTR [rsp+0x100]
  40424a:	mov    r9d,DWORD PTR [rsp+0x84]
  404252:	lea    rdx,[rip+0x1476f]        # 0x4189c8
  404259:	mov    r8,QWORD PTR [rip+0x1d7e8]        # 0x421a48
  404260:	mov    rcx,r13
  404263:	mov    QWORD PTR [rsp+0x20],rax
  404268:	call   0x401540
  40426d:	jmp    0x403c50
  404272:	test   r13,r13
  404275:	mov    r14d,0x1
  40427b:	je     0x403c50
  404281:	mov    rax,QWORD PTR [rsp+0x100]
  404289:	mov    r9d,DWORD PTR [rsp+0x84]
  404291:	lea    rdx,[rip+0x145a8]        # 0x418840
  404298:	mov    r8,QWORD PTR [rip+0x1d7a9]        # 0x421a48
  40429f:	mov    rcx,r13
  4042a2:	mov    QWORD PTR [rsp+0x20],rax
  4042a7:	call   0x401540
  4042ac:	jmp    0x403c50
  4042b1:	mov    DWORD PTR [rsp+0x30],0x0
  4042b9:	mov    DWORD PTR [rsp+0x70],0x0
  4042c1:	jmp    0x403c50
  4042c6:	mov    r8,QWORD PTR [rsp+0x78]
  4042cb:	mov    rdx,rdi
  4042ce:	mov    rcx,rsi
  4042d1:	call   0x402300
  4042d6:	jmp    0x40408d
  4042db:	mov    esi,DWORD PTR [rsp+0x74]
  4042df:	test   esi,esi
  4042e1:	jne    0x404456
  4042e7:	test   r13,r13
  4042ea:	je     0x403e79
  4042f0:	mov    rax,QWORD PTR [rsp+0x100]
  4042f8:	mov    r9d,DWORD PTR [rsp+0x84]
  404300:	lea    rdx,[rip+0x14689]        # 0x418990
  404307:	mov    r8,QWORD PTR [rip+0x1d73a]        # 0x421a48
  40430e:	mov    rcx,r13
  404311:	mov    r14d,0x1
  404317:	mov    QWORD PTR [rsp+0x20],rax
  40431c:	call   0x401540
  404321:	mov    DWORD PTR [rsp+0x38],0x0
  404329:	jmp    0x403c50
  40432e:	test   r13,r13
  404331:	je     0x4044a8
  404337:	mov    rax,QWORD PTR [rsp+0x100]
  40433f:	mov    r9,QWORD PTR [rsp+0xa8]
  404347:	lea    rdx,[rip+0x1455a]        # 0x4188a8
  40434e:	mov    r8,QWORD PTR [rip+0x1d6f3]        # 0x421a48
  404355:	mov    rcx,r13
  404358:	mov    r14d,0x1
  40435e:	mov    QWORD PTR [rsp+0x28],rax
  404363:	mov    eax,DWORD PTR [rsp+0x84]
  40436a:	mov    DWORD PTR [rsp+0x20],eax
  40436e:	call   0x401540
  404373:	mov    DWORD PTR [rsp+0x30],0x1
  40437b:	mov    DWORD PTR [rsp+0x70],0x1
  404383:	jmp    0x403c50
  404388:	lea    rdx,[rip+0x13cf7]        # 0x418086
  40438f:	xor    ecx,ecx
  404391:	call   0x415f30
  404396:	test   rax,rax
  404399:	mov    QWORD PTR [rsp+0xa8],rax
  4043a1:	je     0x4045eb
  4043a7:	mov    edi,DWORD PTR [rsp+0x74]
  4043ab:	test   edi,edi
  4043ad:	je     0x40447e
  4043b3:	test   r13,r13
  4043b6:	mov    r14d,0x1
  4043bc:	je     0x403c50
  4043c2:	mov    rax,QWORD PTR [rsp+0x100]
  4043ca:	mov    r9d,DWORD PTR [rsp+0x84]
  4043d2:	lea    rdx,[rip+0x14577]        # 0x418950
  4043d9:	mov    r8,QWORD PTR [rip+0x1d668]        # 0x421a48
  4043e0:	mov    rcx,r13
  4043e3:	mov    QWORD PTR [rsp+0x20],rax
  4043e8:	call   0x401540
  4043ed:	jmp    0x403c50
  4043f2:	lea    rdi,[rip+0x145fd]        # 0x4189f6
  4043f9:	mov    ecx,0x8
  4043fe:	mov    rsi,rax
  404401:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404403:	jne    0x4044d0
  404409:	mov    r10d,DWORD PTR [rsp+0x44]
  40440e:	test   r10d,r10d
  404411:	jne    0x4045de
  404417:	test   r13,r13
  40441a:	mov    r14d,0x1
  404420:	je     0x403c50
  404426:	mov    rax,QWORD PTR [rsp+0x100]
  40442e:	mov    r9d,DWORD PTR [rsp+0x84]
  404436:	lea    rdx,[rip+0x145c3]        # 0x418a00
  40443d:	mov    r8,QWORD PTR [rip+0x1d604]        # 0x421a48
  404444:	mov    rcx,r13
  404447:	mov    QWORD PTR [rsp+0x20],rax
  40444c:	call   0x401540
  404451:	jmp    0x403c50
  404456:	mov    DWORD PTR [rsp+0x74],0x0
  40445e:	mov    DWORD PTR [rsp+0x38],0x0
  404466:	jmp    0x403c50
  40446b:	mov    DWORD PTR [rsp+0x30],0x0
  404473:	mov    r14d,0x1
  404479:	jmp    0x403c50
  40447e:	mov    rdx,QWORD PTR [rip+0x1d5bb]        # 0x421a40
  404485:	mov    rcx,rax
  404488:	mov    edi,0x1
  40448d:	call   0x415f88
  404492:	test   eax,eax
  404494:	mov    eax,DWORD PTR [rsp+0x38]
  404498:	mov    DWORD PTR [rsp+0x74],edi
  40449c:	cmovne eax,edi
  40449f:	mov    DWORD PTR [rsp+0x38],eax
  4044a3:	jmp    0x403c50
  4044a8:	mov    DWORD PTR [rsp+0x30],0x1
  4044b0:	mov    DWORD PTR [rsp+0x70],0x1
  4044b8:	mov    r14d,0x1
  4044be:	jmp    0x403c50
  4044c3:	mov    DWORD PTR [rsp+0x44],0x1
  4044cb:	jmp    0x403c50
  4044d0:	mov    r9d,DWORD PTR [rsp+0x44]
  4044d5:	test   r9d,r9d
  4044d8:	je     0x4044ea
  4044da:	mov    r8d,DWORD PTR [rip+0x1de27]        # 0x422308
  4044e1:	test   r8d,r8d
  4044e4:	je     0x403c50
  4044ea:	mov    edi,DWORD PTR [rsp+0x30]
  4044ee:	or     edi,DWORD PTR [rsp+0x38]
  4044f2:	jne    0x403c50
  4044f8:	lea    rdi,[rip+0x1452c]        # 0x418a2b
  4044ff:	mov    ecx,0x8
  404504:	mov    rsi,rax
  404507:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404509:	je     0x40462a
  40450f:	lea    rdi,[rip+0x14521]        # 0x418a37
  404516:	mov    ecx,0x4
  40451b:	mov    rsi,rax
  40451e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404520:	je     0x40492a
  404526:	lea    rdi,[rip+0x1450e]        # 0x418a3b
  40452d:	mov    ecx,0x9
  404532:	mov    rsi,rax
  404535:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404537:	je     0x4048e3
  40453d:	lea    rdi,[rip+0x14500]        # 0x418a44
  404544:	mov    ecx,0x8
  404549:	mov    rsi,rax
  40454c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40454e:	jne    0x404896
  404554:	cmp    DWORD PTR [rsp+0x128],0x5
  40455c:	jle    0x40467b
  404562:	test   r13,r13
  404565:	je     0x403e71
  40456b:	mov    eax,DWORD PTR [rsp+0x84]
  404572:	mov    r8,QWORD PTR [rip+0x1d4cf]        # 0x421a48
  404579:	lea    rdx,[rip+0x144d0]        # 0x418a50
  404580:	mov    r9d,0x5
  404586:	mov    rcx,r13
  404589:	mov    r14d,0x1
  40458f:	mov    DWORD PTR [rsp+0x28],eax
  404593:	mov    rax,QWORD PTR [rsp+0x100]
  40459b:	mov    QWORD PTR [rsp+0x20],rax
  4045a0:	call   0x401540
  4045a5:	mov    DWORD PTR [rsp+0x30],0x0
  4045ad:	mov    DWORD PTR [rsp+0x38],0x0
  4045b5:	jmp    0x403c50
  4045ba:	nop    WORD PTR [rax+rax*1+0x0]
  4045c0:	mov    rcx,rbx
  4045c3:	mov    esi,eax
  4045c5:	call   0x416050
  4045ca:	mov    rcx,QWORD PTR [rsp+0x98]
  4045d2:	call   0x416010
  4045d7:	mov    eax,esi
  4045d9:	jmp    0x403d64
  4045de:	mov    DWORD PTR [rsp+0x44],0x0
  4045e6:	jmp    0x403c50
  4045eb:	test   r13,r13
  4045ee:	mov    r14d,0x1
  4045f4:	je     0x403c50
  4045fa:	mov    rax,QWORD PTR [rsp+0x100]
  404602:	mov    r9d,DWORD PTR [rsp+0x84]
  40460a:	lea    rdx,[rip+0x1430f]        # 0x418920
  404611:	mov    r8,QWORD PTR [rip+0x1d430]        # 0x421a48
  404618:	mov    rcx,r13
  40461b:	mov    QWORD PTR [rsp+0x20],rax
  404620:	call   0x401540
  404625:	jmp    0x403c50
  40462a:	lea    rdx,[rip+0x141d0]        # 0x418801
  404631:	xor    ecx,ecx
  404633:	call   0x415f30
  404638:	test   rax,rax
  40463b:	mov    QWORD PTR [rsp+0xa8],rax
  404643:	je     0x404021
  404649:	mov    ecx,DWORD PTR [rip+0x1dcd9]        # 0x422328
  40464f:	test   ecx,ecx
  404651:	jne    0x404021
  404657:	lea    rcx,[rip+0x143d5]        # 0x418a33
  40465e:	mov    rdx,rax
  404661:	call   0x401590
  404666:	mov    DWORD PTR [rsp+0x30],0x0
  40466e:	mov    DWORD PTR [rsp+0x38],0x0
  404676:	jmp    0x403c50
  40467b:	lea    rdx,[rip+0x13a04]        # 0x418086
  404682:	xor    ecx,ecx
  404684:	call   0x415f30
  404689:	test   rax,rax
  40468c:	mov    rdi,rax
  40468f:	mov    QWORD PTR [rsp+0xa8],rax
  404697:	je     0x404865
  40469d:	mov    rcx,QWORD PTR [rsp+0x100]
  4046a5:	call   0x415f68
  4046aa:	mov    rcx,rdi
  4046ad:	mov    rsi,rax
  4046b0:	mov    QWORD PTR [rsp+0x30],rax
  4046b5:	call   0x415f68
  4046ba:	lea    ecx,[rsi+rax*1+0x1]
  4046be:	mov    QWORD PTR [rsp+0x38],rax
  4046c3:	movsxd rcx,ecx
  4046c6:	call   0x415fe8
  4046cb:	test   rax,rax
  4046ce:	mov    rsi,rax
  4046d1:	je     0x404859
  4046d7:	mov    edx,0x2f
  4046dc:	mov    rcx,rdi
  4046df:	call   0x415f90
  4046e4:	test   rax,rax
  4046e7:	je     0x4047c7
  4046ed:	mov    r8,QWORD PTR [rsp+0x38]
  4046f2:	mov    rdx,rdi
  4046f5:	mov    rcx,rsi
  4046f8:	add    r8,0x1
  4046fc:	call   0x415fe0
  404701:	mov    eax,DWORD PTR [rsp+0x128]
  404708:	mov    r9,QWORD PTR [rsp+0x118]
  404710:	mov    rdx,r13
  404713:	mov    r8,QWORD PTR [rsp+0x110]
  40471b:	mov    rcx,rsi
  40471e:	add    eax,0x1
  404721:	mov    DWORD PTR [rsp+0x28],eax
  404725:	mov    rax,QWORD PTR [rsp+0x120]
  40472d:	mov    QWORD PTR [rsp+0x20],rax
  404732:	call   0x403b20
  404737:	cmp    eax,0x12
  40473a:	je     0x4047a0
  40473c:	cmp    eax,0x10
  40473f:	je     0x404768
  404741:	test   eax,eax
  404743:	je     0x40474b
  404745:	mov    r14d,0x1
  40474b:	mov    rcx,rsi
  40474e:	call   0x416010
  404753:	mov    DWORD PTR [rsp+0x30],0x0
  40475b:	mov    DWORD PTR [rsp+0x38],0x0
  404763:	jmp    0x403c50
  404768:	test   r13,r13
  40476b:	je     0x404745
  40476d:	mov    rax,QWORD PTR [rsp+0x100]
  404775:	mov    r8,QWORD PTR [rip+0x1d2cc]        # 0x421a48
  40477c:	lea    rdx,[rip+0x1434d]        # 0x418ad0
  404783:	mov    r9,rsi
  404786:	mov    rcx,r13
  404789:	mov    QWORD PTR [rsp+0x28],rax
  40478e:	mov    eax,DWORD PTR [rsp+0x84]
  404795:	mov    DWORD PTR [rsp+0x20],eax
  404799:	call   0x401540
  40479e:	jmp    0x404745
  4047a0:	mov    rcx,rbx
  4047a3:	call   0x416050
  4047a8:	mov    rcx,QWORD PTR [rsp+0x98]
  4047b0:	call   0x416010
  4047b5:	mov    rcx,rsi
  4047b8:	call   0x416010
  4047bd:	mov    eax,0x12
  4047c2:	jmp    0x403d64
  4047c7:	mov    edx,0x5c
  4047cc:	mov    rcx,rdi
  4047cf:	call   0x415f90
  4047d4:	test   rax,rax
  4047d7:	jne    0x4046ed
  4047dd:	mov    rax,QWORD PTR [rsp+0x30]
  4047e2:	mov    rdx,QWORD PTR [rsp+0x100]
  4047ea:	mov    rcx,rsi
  4047ed:	lea    r8,[rax+0x1]
  4047f1:	call   0x415fe0
  4047f6:	mov    rax,QWORD PTR [rsp+0x30]
  4047fb:	lea    r8,[rsi+rax*1-0x1]
  404800:	cmp    r8,rsi
  404803:	je     0x40482d
  404805:	movsx  edx,BYTE PTR [r8]
  404809:	lea    rcx,[rip+0x142bd]        # 0x418acd
  404810:	mov    QWORD PTR [rsp+0x30],r8
  404815:	call   0x415f90
  40481a:	test   rax,rax
  40481d:	mov    r8,QWORD PTR [rsp+0x30]
  404822:	jne    0x404848
  404824:	sub    r8,0x1
  404828:	cmp    r8,rsi
  40482b:	jne    0x404805
  40482d:	movsx  edx,BYTE PTR [rsi]
  404830:	lea    rcx,[rip+0x14296]        # 0x418acd
  404837:	call   0x415f90
  40483c:	test   rax,rax
  40483f:	je     0x404988
  404845:	mov    r8,rsi
  404848:	lea    rcx,[r8+0x1]
  40484c:	mov    rdx,rdi
  40484f:	call   0x415f80
  404854:	jmp    0x404701
  404859:	lea    rcx,[rip+0x14261]        # 0x418ac1
  404860:	call   0x4162d0
  404865:	test   r13,r13
  404868:	je     0x403e71
  40486e:	mov    rax,QWORD PTR [rsp+0x100]
  404876:	mov    r9d,DWORD PTR [rsp+0x84]
  40487e:	lea    rdx,[rip+0x1420b]        # 0x418a90
  404885:	mov    r8,QWORD PTR [rip+0x1d1bc]        # 0x421a48
  40488c:	mov    QWORD PTR [rsp+0x20],rax
  404891:	jmp    0x40411c
  404896:	test   r13,r13
  404899:	je     0x403e71
  40489f:	mov    eax,DWORD PTR [rsp+0x84]
  4048a6:	mov    r9,QWORD PTR [rsp+0x100]
  4048ae:	lea    rdx,[rip+0x13f1b]        # 0x4187d0
  4048b5:	mov    r8,QWORD PTR [rip+0x1d18c]        # 0x421a48
  4048bc:	mov    rcx,r13
  4048bf:	mov    r14d,0x1
  4048c5:	mov    DWORD PTR [rsp+0x20],eax
  4048c9:	call   0x401540
  4048ce:	mov    DWORD PTR [rsp+0x30],0x0
  4048d6:	mov    DWORD PTR [rsp+0x38],0x0
  4048de:	jmp    0x403c50
  4048e3:	mov    r8,QWORD PTR [rsp+0x48]
  4048e8:	mov    rdx,QWORD PTR [rsp+0x50]
  4048ed:	xor    ecx,ecx
  4048ef:	call   0x402250
  4048f4:	mov    rcx,QWORD PTR [rsp+0xa8]
  4048fc:	test   rcx,rcx
  4048ff:	je     0x404896
  404901:	mov    rdx,QWORD PTR [rsp+0xa0]
  404909:	test   rdx,rdx
  40490c:	je     0x404896
  40490e:	mov    r9,QWORD PTR [rsp+0x58]
  404913:	mov    r8d,DWORD PTR [rsp+0x84]
  40491b:	mov    QWORD PTR [rsp+0x20],r13
  404920:	call   0x403820
  404925:	jmp    0x40408d
  40492a:	lea    rdx,[rip+0x13755]        # 0x418086
  404931:	xor    ecx,ecx
  404933:	call   0x415f30
  404938:	lea    rdx,[rip+0x13747]        # 0x418086
  40493f:	xor    ecx,ecx
  404941:	mov    QWORD PTR [rsp+0xa8],rax
  404949:	call   0x415f30
  40494e:	mov    rcx,QWORD PTR [rsp+0xa8]
  404956:	mov    QWORD PTR [rsp+0xa0],rax
  40495e:	test   rcx,rcx
  404961:	je     0x4049c1
  404963:	test   rax,rax
  404966:	je     0x404990
  404968:	xor    r8d,r8d
  40496b:	mov    rdx,rax
  40496e:	call   0x4039f0
  404973:	mov    DWORD PTR [rsp+0x30],0x0
  40497b:	mov    DWORD PTR [rsp+0x38],0x0
  404983:	jmp    0x403c50
  404988:	mov    rcx,rsi
  40498b:	jmp    0x40484c
  404990:	test   r13,r13
  404993:	je     0x403e71
  404999:	mov    rax,QWORD PTR [rsp+0x100]
  4049a1:	mov    r9d,DWORD PTR [rsp+0x84]
  4049a9:	lea    rdx,[rip+0x13e90]        # 0x418840
  4049b0:	mov    r8,QWORD PTR [rip+0x1d091]        # 0x421a48
  4049b7:	mov    QWORD PTR [rsp+0x20],rax
  4049bc:	jmp    0x40411c
  4049c1:	test   r13,r13
  4049c4:	je     0x403e71
  4049ca:	mov    rax,QWORD PTR [rsp+0x100]
  4049d2:	mov    r9d,DWORD PTR [rsp+0x84]
  4049da:	lea    rdx,[rip+0x13e27]        # 0x418808
  4049e1:	mov    r8,QWORD PTR [rip+0x1d060]        # 0x421a48
  4049e8:	mov    QWORD PTR [rsp+0x20],rax
  4049ed:	jmp    0x40411c
  4049f2:	nop    DWORD PTR [rax+0x0]
  4049f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a00:	movsd  xmm0,QWORD PTR [rip+0x161b8]        # 0x41abc0
  404a08:	mov    QWORD PTR [rcx+0x320],0x0
  404a13:	mov    QWORD PTR [rcx],0x0
  404a1a:	movsd  QWORD PTR [rcx+0x640],xmm0
  404a22:	ret    
  404a23:	nop    DWORD PTR [rax]
  404a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a30:	push   rsi
  404a31:	push   rbx
  404a32:	sub    rsp,0x28
  404a36:	mov    rsi,rcx
  404a39:	mov    rbx,rcx
  404a3c:	mov    rcx,QWORD PTR [rcx]
  404a3f:	test   rcx,rcx
  404a42:	je     0x404a5e
  404a44:	cmp    rcx,QWORD PTR [rip+0x1291d]        # 0x417368
  404a4b:	je     0x404a52
  404a4d:	call   0x416010
  404a52:	add    rbx,0x8
  404a56:	mov    rcx,QWORD PTR [rbx]
  404a59:	test   rcx,rcx
  404a5c:	jne    0x404a44
  404a5e:	mov    rcx,QWORD PTR [rsi+0x320]
  404a65:	lea    rbx,[rsi+0x320]
  404a6c:	test   rcx,rcx
  404a6f:	je     0x404a8b
  404a71:	cmp    rcx,QWORD PTR [rip+0x128f0]        # 0x417368
  404a78:	je     0x404a7f
  404a7a:	call   0x416010
  404a7f:	add    rbx,0x8
  404a83:	mov    rcx,QWORD PTR [rbx]
  404a86:	test   rcx,rcx
  404a89:	jne    0x404a71
  404a8b:	mov    QWORD PTR [rsi],0x0
  404a92:	mov    QWORD PTR [rsi+0x320],0x0
  404a9d:	add    rsp,0x28
  404aa1:	pop    rbx
  404aa2:	pop    rsi
  404aa3:	ret    
  404aa4:	xchg   ax,ax
  404aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ab0:	push   rdi
  404ab1:	push   rsi
  404ab2:	push   rbx
  404ab3:	sub    rsp,0x30
  404ab7:	mov    esi,0x1
  404abc:	movsd  xmm0,QWORD PTR [rcx+0x640]
  404ac4:	mov    rdi,rcx
  404ac7:	mov    rcx,QWORD PTR [rip+0x1d822]        # 0x4222f0
  404ace:	mov    rbx,rdi
  404ad1:	movapd xmm1,xmm0
  404ad5:	movq   rdx,xmm0
  404ada:	call   0x401590
  404adf:	mov    rcx,QWORD PTR [rdi]
  404ae2:	test   rcx,rcx
  404ae5:	jne    0x404b11
  404ae7:	jmp    0x404b71
  404aec:	nop    DWORD PTR [rax+0x0]
  404af0:	cmp    BYTE PTR [rcx],0x0
  404af3:	je     0x404b16
  404af5:	mov    rdx,QWORD PTR [rbx-0x8]
  404af9:	call   0x415f88
  404afe:	test   eax,eax
  404b00:	jne    0x404b16
  404b02:	add    esi,0x1
  404b05:	add    rbx,0x8
  404b09:	mov    rcx,QWORD PTR [rbx]
  404b0c:	test   rcx,rcx
  404b0f:	je     0x404b56
  404b11:	cmp    rdi,rbx
  404b14:	jb     0x404af0
  404b16:	cmp    esi,0x1
  404b19:	je     0x404b31
  404b1b:	mov    rdx,QWORD PTR [rip+0x12926]        # 0x417448
  404b22:	lea    rcx,[rip+0x14023]        # 0x418b4c
  404b29:	mov    r8d,esi
  404b2c:	call   0x401590
  404b31:	mov    rdx,QWORD PTR [rbx]
  404b34:	mov    esi,0x1
  404b39:	cmp    BYTE PTR [rdx],0x0
  404b3c:	je     0x404b05
  404b3e:	lea    rcx,[rip+0x1400c]        # 0x418b51
  404b45:	add    rbx,0x8
  404b49:	call   0x401590
  404b4e:	mov    rcx,QWORD PTR [rbx]
  404b51:	test   rcx,rcx
  404b54:	jne    0x404b11
  404b56:	cmp    esi,0x1
  404b59:	je     0x404b71
  404b5b:	mov    rdx,QWORD PTR [rip+0x128e6]        # 0x417448
  404b62:	lea    rcx,[rip+0x13fe3]        # 0x418b4c
  404b69:	mov    r8d,esi
  404b6c:	call   0x401590
  404b71:	mov    rcx,QWORD PTR [rdi+0x320]
  404b78:	lea    rsi,[rdi+0x320]
  404b7f:	xor    edi,edi
  404b81:	mov    r8d,0x1
  404b87:	mov    rbx,rsi
  404b8a:	test   rcx,rcx
  404b8d:	jne    0x404bc0
  404b8f:	jmp    0x404c44
  404b94:	cmp    BYTE PTR [rcx],0x0
  404b97:	je     0x404bc5
  404b99:	mov    rdx,QWORD PTR [rbx-0x8]
  404b9d:	mov    DWORD PTR [rsp+0x2c],r8d
  404ba2:	call   0x415f88
  404ba7:	test   eax,eax
  404ba9:	mov    r8d,DWORD PTR [rsp+0x2c]
  404bae:	jne    0x404bc5
  404bb0:	add    r8d,0x1
  404bb4:	add    rbx,0x8
  404bb8:	mov    rcx,QWORD PTR [rbx]
  404bbb:	test   rcx,rcx
  404bbe:	je     0x404c13
  404bc0:	cmp    rsi,rbx
  404bc3:	jb     0x404b94
  404bc5:	cmp    r8d,0x1
  404bc9:	je     0x404bde
  404bcb:	mov    rdx,QWORD PTR [rip+0x12876]        # 0x417448
  404bd2:	lea    rcx,[rip+0x13f73]        # 0x418b4c
  404bd9:	call   0x401590
  404bde:	mov    rdx,QWORD PTR [rbx]
  404be1:	mov    r8d,0x1
  404be7:	cmp    BYTE PTR [rdx],0x0
  404bea:	je     0x404bb4
  404bec:	test   edi,edi
  404bee:	je     0x404c33
  404bf0:	lea    rcx,[rip+0x13f5a]        # 0x418b51
  404bf7:	add    rbx,0x8
  404bfb:	mov    edi,0x1
  404c00:	call   0x401590
  404c05:	mov    rcx,QWORD PTR [rbx]
  404c08:	mov    r8d,0x1
  404c0e:	test   rcx,rcx
  404c11:	jne    0x404bc0
  404c13:	cmp    r8d,0x1
  404c17:	je     0x404c44
  404c19:	mov    rdx,QWORD PTR [rip+0x12828]        # 0x417448
  404c20:	lea    rcx,[rip+0x13f25]        # 0x418b4c
  404c27:	add    rsp,0x30
  404c2b:	pop    rbx
  404c2c:	pop    rsi
  404c2d:	pop    rdi
  404c2e:	jmp    0x401590
  404c33:	lea    rcx,[rip+0x13f1b]        # 0x418b55
  404c3a:	call   0x401590
  404c3f:	mov    rdx,QWORD PTR [rbx]
  404c42:	jmp    0x404bf0
  404c44:	add    rsp,0x30
  404c48:	pop    rbx
  404c49:	pop    rsi
  404c4a:	pop    rdi
  404c4b:	ret    
  404c4c:	nop    DWORD PTR [rax+0x0]
  404c50:	push   rbx
  404c51:	sub    rsp,0x20
  404c55:	cmp    QWORD PTR [rcx],0x0
  404c59:	mov    rbx,rcx
  404c5c:	je     0x404cc7
  404c5e:	mov    rax,rcx
  404c61:	xor    edx,edx
  404c63:	add    rax,0x8
  404c67:	add    edx,0x1
  404c6a:	cmp    QWORD PTR [rax],0x0
  404c6e:	jne    0x404c63
  404c70:	movsxd rdx,edx
  404c73:	lea    r9,[rip+0xffffffffffffc8f6]        # 0x401570
  404c7a:	mov    rcx,rbx
  404c7d:	mov    r8d,0x8
  404c83:	call   0x415fb8
  404c88:	cmp    QWORD PTR [rbx+0x320],0x0
  404c90:	lea    rcx,[rbx+0x320]
  404c97:	je     0x404ccb
  404c99:	mov    rax,rcx
  404c9c:	xor    edx,edx
  404c9e:	xchg   ax,ax
  404ca0:	add    rax,0x8
  404ca4:	add    edx,0x1
  404ca7:	cmp    QWORD PTR [rax],0x0
  404cab:	jne    0x404ca0
  404cad:	movsxd rdx,edx
  404cb0:	lea    r9,[rip+0xffffffffffffc8b9]        # 0x401570
  404cb7:	mov    r8d,0x8
  404cbd:	add    rsp,0x20
  404cc1:	pop    rbx
  404cc2:	jmp    0x415fb8
  404cc7:	xor    edx,edx
  404cc9:	jmp    0x404c73
  404ccb:	xor    edx,edx
  404ccd:	jmp    0x404cb0
  404ccf:	nop
  404cd0:	push   rbp
  404cd1:	push   rdi
  404cd2:	push   rsi
  404cd3:	push   rbx
  404cd4:	sub    rsp,0x28
  404cd8:	mov    rbx,QWORD PTR [rcx]
  404cdb:	lea    rbp,[rcx+0x320]
  404ce2:	mov    rdi,rcx
  404ce5:	test   rbx,rbx
  404ce8:	je     0x404d54
  404cea:	mov    rsi,QWORD PTR [rbp+0x0]
  404cee:	test   rsi,rsi
  404cf1:	je     0x404d54
  404cf3:	mov    rdx,rbx
  404cf6:	mov    rcx,rsi
  404cf9:	call   0x415f88
  404cfe:	test   eax,eax
  404d00:	jne    0x404d60
  404d02:	mov    rax,QWORD PTR [rip+0x1265f]        # 0x417368
  404d09:	cmp    rsi,rax
  404d0c:	je     0x404d20
  404d0e:	mov    rcx,rsi
  404d11:	call   0x416010
  404d16:	mov    rbx,QWORD PTR [rdi]
  404d19:	mov    rax,QWORD PTR [rip+0x12648]        # 0x417368
  404d20:	cmp    rax,rbx
  404d23:	je     0x404d34
  404d25:	mov    rcx,rbx
  404d28:	call   0x416010
  404d2d:	mov    rbx,QWORD PTR [rip+0x12634]        # 0x417368
  404d34:	mov    QWORD PTR [rbp+0x0],rbx
  404d38:	mov    rbx,QWORD PTR [rdi+0x8]
  404d3c:	add    rbp,0x8
  404d40:	mov    rax,QWORD PTR [rip+0x12621]        # 0x417368
  404d47:	add    rdi,0x8
  404d4b:	mov    QWORD PTR [rdi-0x8],rax
  404d4f:	test   rbx,rbx
  404d52:	jne    0x404cea
  404d54:	add    rsp,0x28
  404d58:	pop    rbx
  404d59:	pop    rsi
  404d5a:	pop    rdi
  404d5b:	pop    rbp
  404d5c:	ret    
  404d5d:	nop    DWORD PTR [rax]
  404d60:	js     0x404d70
  404d62:	mov    rbx,QWORD PTR [rdi+0x8]
  404d66:	add    rdi,0x8
  404d6a:	jmp    0x404ce5
  404d6f:	nop
  404d70:	add    rbp,0x8
  404d74:	jmp    0x404ce5
  404d79:	nop    DWORD PTR [rax+0x0]
  404d80:	push   rbp
  404d81:	push   rdi
  404d82:	push   rsi
  404d83:	push   rbx
  404d84:	sub    rsp,0x28
  404d88:	mov    rbx,rcx
  404d8b:	mov    esi,edx
  404d8d:	call   0x401a90
  404d92:	test   rax,rax
  404d95:	je     0x404da4
  404d97:	mov    rax,QWORD PTR [rax+0x8]
  404d9b:	add    rsp,0x28
  404d9f:	pop    rbx
  404da0:	pop    rsi
  404da1:	pop    rdi
  404da2:	pop    rbp
  404da3:	ret    
  404da4:	mov    rcx,rbx
  404da7:	call   0x415f68
  404dac:	cmp    rax,0x2
  404db0:	jbe    0x404dbd
  404db2:	cmp    BYTE PTR [rbx+rax*1-0x1],0x73
  404db7:	je     0x404e9c
  404dbd:	test   esi,esi
  404dbf:	je     0x404e95
  404dc5:	mov    rcx,rbx
  404dc8:	call   0x401bb0
  404dcd:	test   rax,rax
  404dd0:	mov    rdi,rax
  404dd3:	je     0x404e95
  404dd9:	movsxd rsi,DWORD PTR [rax]
  404ddc:	add    rsi,rbx
  404ddf:	cmp    BYTE PTR [rsi],0x0
  404de2:	je     0x404e03
  404de4:	jmp    0x404e82
  404de9:	nop    DWORD PTR [rax+0x0]
  404df0:	lea    rdx,[rip+0x1b791]        # 0x420588
  404df7:	lea    rcx,[rip+0x1b782]        # 0x420580
  404dfe:	call   0x4015f0
  404e03:	mov    rcx,QWORD PTR [rdi+0x10]
  404e07:	call   0x415f68
  404e0c:	mov    rcx,rsi
  404e0f:	mov    rbx,rax
  404e12:	call   0x415f68
  404e17:	movsxd rdx,DWORD PTR [rip+0x1b76a]        # 0x420588
  404e1e:	lea    r8,[rbx+rax*1+0x2]
  404e23:	cmp    r8,rdx
  404e26:	ja     0x404df0
  404e28:	mov    rcx,rsi
  404e2b:	call   0x4019f0
  404e30:	mov    rdx,QWORD PTR [rdi+0x10]
  404e34:	mov    rcx,QWORD PTR [rip+0x1b745]        # 0x420580
  404e3b:	mov    rbx,rax
  404e3e:	call   0x415f80
  404e43:	mov    rsi,QWORD PTR [rip+0x1b736]        # 0x420580
  404e4a:	mov    rcx,rsi
  404e4d:	call   0x415f68
  404e52:	mov    edx,0x20
  404e57:	mov    WORD PTR [rsi+rax*1],dx
  404e5b:	mov    rcx,QWORD PTR [rip+0x1b71e]        # 0x420580
  404e62:	mov    rdx,rbx
  404e65:	call   0x415f98
  404e6a:	mov    rcx,rbx
  404e6d:	call   0x416010
  404e72:	mov    rax,QWORD PTR [rip+0x1b707]        # 0x420580
  404e79:	add    rsp,0x28
  404e7d:	pop    rbx
  404e7e:	pop    rsi
  404e7f:	pop    rdi
  404e80:	pop    rbp
  404e81:	ret    
  404e82:	xor    edx,edx
  404e84:	mov    rcx,rsi
  404e87:	call   0x404d80
  404e8c:	test   rax,rax
  404e8f:	jne    0x404e03
  404e95:	xor    eax,eax
  404e97:	jmp    0x404d9b
  404e9c:	mov    rcx,rbx
  404e9f:	call   0x4019f0
  404ea4:	mov    rbp,rax
  404ea7:	mov    rcx,rax
  404eaa:	call   0x415f68
  404eaf:	mov    edx,esi
  404eb1:	mov    BYTE PTR [rbp+rax*1-0x1],0x0
  404eb6:	mov    rcx,rbp
  404eb9:	call   0x404d80
  404ebe:	test   rax,rax
  404ec1:	jne    0x404ed8
  404ec3:	jmp    0x404f13
  404ec5:	lea    rdx,[rip+0x1b6bc]        # 0x420588
  404ecc:	lea    rcx,[rip+0x1b6ad]        # 0x420580
  404ed3:	call   0x4015f0
  404ed8:	mov    rcx,rbp
  404edb:	call   0x415f68
  404ee0:	movsxd r9,DWORD PTR [rip+0x1b6a1]        # 0x420588
  404ee7:	lea    r8,[rax+0x1]
  404eeb:	cmp    r8,r9
  404eee:	ja     0x404ec5
  404ef0:	mov    rcx,QWORD PTR [rip+0x1b689]        # 0x420580
  404ef7:	mov    rdx,rbp
  404efa:	call   0x415fe0
  404eff:	mov    rcx,rbp
  404f02:	call   0x416010
  404f07:	mov    rax,QWORD PTR [rip+0x1b672]        # 0x420580
  404f0e:	jmp    0x404d9b
  404f13:	mov    rcx,rbp
  404f16:	call   0x415f68
  404f1b:	cmp    rax,0x2
  404f1f:	jbe    0x404f33
  404f21:	lea    rax,[rbp+rax*1-0x1]
  404f26:	movzx  edx,BYTE PTR [rax]
  404f29:	cmp    dl,0x65
  404f2c:	je     0x404f84
  404f2e:	cmp    dl,0x69
  404f31:	je     0x404f40
  404f33:	mov    rcx,rbp
  404f36:	call   0x416010
  404f3b:	jmp    0x404dbd
  404f40:	mov    BYTE PTR [rax],0x79
  404f43:	mov    edx,esi
  404f45:	mov    rcx,rbp
  404f48:	call   0x404d80
  404f4d:	test   rax,rax
  404f50:	jne    0x404f67
  404f52:	jmp    0x404f33
  404f54:	lea    rdx,[rip+0x1b62d]        # 0x420588
  404f5b:	lea    rcx,[rip+0x1b61e]        # 0x420580
  404f62:	call   0x4015f0
  404f67:	mov    rcx,rbp
  404f6a:	call   0x415f68
  404f6f:	lea    r8,[rax+0x1]
  404f73:	movsxd rax,DWORD PTR [rip+0x1b60e]        # 0x420588
  404f7a:	cmp    r8,rax
  404f7d:	ja     0x404f54
  404f7f:	jmp    0x404ef0
  404f84:	mov    BYTE PTR [rax],0x0
  404f87:	mov    edx,esi
  404f89:	mov    rcx,rbp
  404f8c:	call   0x404d80
  404f91:	test   rax,rax
  404f94:	jne    0x404fb3
  404f96:	jmp    0x404fd0
  404f98:	nop    DWORD PTR [rax+rax*1+0x0]
  404fa0:	lea    rdx,[rip+0x1b5e1]        # 0x420588
  404fa7:	lea    rcx,[rip+0x1b5d2]        # 0x420580
  404fae:	call   0x4015f0
  404fb3:	mov    rcx,rbp
  404fb6:	call   0x415f68
  404fbb:	lea    r8,[rax+0x1]
  404fbf:	movsxd rax,DWORD PTR [rip+0x1b5c2]        # 0x420588
  404fc6:	cmp    r8,rax
  404fc9:	ja     0x404fa0
  404fcb:	jmp    0x404ef0
  404fd0:	xor    eax,eax
  404fd2:	or     rcx,0xffffffffffffffff
  404fd6:	mov    rdi,rbp
  404fd9:	repnz scas al,BYTE PTR es:[rdi]
  404fdb:	mov    rax,rcx
  404fde:	not    rax
  404fe1:	lea    rdx,[rax-0x1]
  404fe5:	cmp    rdx,0x2
  404fe9:	jbe    0x404f33
  404fef:	lea    rax,[rbp+rax*1-0x2]
  404ff4:	movzx  edx,BYTE PTR [rax]
  404ff7:	jmp    0x404f2e
  404ffc:	nop    DWORD PTR [rax+0x0]
  405000:	mov    r8,QWORD PTR [rdx]
  405003:	mov    rax,rcx
  405006:	test   r8,r8
  405009:	je     0x40506c
  40500b:	nop    DWORD PTR [rax+rax*1+0x0]
  405010:	mov    r9,QWORD PTR [rip+0x12351]        # 0x417368
  405017:	cmp    r8,r9
  40501a:	je     0x405060
  40501c:	mov    r8,QWORD PTR [rax]
  40501f:	test   r8,r8
  405022:	jne    0x40503c
  405024:	jmp    0x405070
  405026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405030:	add    rax,0x8
  405034:	mov    r8,QWORD PTR [rax]
  405037:	test   r8,r8
  40503a:	je     0x405070
  40503c:	cmp    r9,r8
  40503f:	jne    0x405030
  405041:	mov    r8,rax
  405044:	sub    r8,rcx
  405047:	cmp    r8,0x317
  40504e:	jg     0x405090
  405050:	mov    r8,QWORD PTR [rdx]
  405053:	mov    QWORD PTR [rax],r8
  405056:	mov    r8,QWORD PTR [rip+0x1230b]        # 0x417368
  40505d:	mov    QWORD PTR [rdx],r8
  405060:	add    rdx,0x8
  405064:	mov    r8,QWORD PTR [rdx]
  405067:	test   r8,r8
  40506a:	jne    0x405010
  40506c:	xor    eax,eax
  40506e:	ret    
  40506f:	nop
  405070:	mov    r8,rax
  405073:	sub    r8,rcx
  405076:	cmp    r8,0x317
  40507d:	jg     0x405090
  40507f:	mov    QWORD PTR [rax+0x8],0x0
  405087:	jmp    0x405050
  405089:	nop    DWORD PTR [rax+0x0]
  405090:	mov    eax,0x2
  405095:	ret    
  405096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050a0:	push   rsi
  4050a1:	push   rbx
  4050a2:	sub    rsp,0x28
  4050a6:	mov    rsi,rcx
  4050a9:	mov    rcx,QWORD PTR [rdx]
  4050ac:	mov    rbx,rdx
  4050af:	test   rcx,rcx
  4050b2:	jne    0x4050d9
  4050b4:	jmp    0x4050f5
  4050b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050c0:	add    rbx,0x8
  4050c4:	add    rsi,0x8
  4050c8:	call   0x4019f0
  4050cd:	mov    QWORD PTR [rsi-0x8],rax
  4050d1:	mov    rcx,QWORD PTR [rbx]
  4050d4:	test   rcx,rcx
  4050d7:	je     0x4050f5
  4050d9:	cmp    rcx,QWORD PTR [rip+0x12288]        # 0x417368
  4050e0:	jne    0x4050c0
  4050e2:	add    rbx,0x8
  4050e6:	mov    QWORD PTR [rsi],rcx
  4050e9:	add    rsi,0x8
  4050ed:	mov    rcx,QWORD PTR [rbx]
  4050f0:	test   rcx,rcx
  4050f3:	jne    0x4050d9
  4050f5:	mov    QWORD PTR [rsi],0x0
  4050fc:	add    rsp,0x28
  405100:	pop    rbx
  405101:	pop    rsi
  405102:	ret    
  405103:	nop    DWORD PTR [rax]
  405106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405110:	push   rsi
  405111:	push   rbx
  405112:	sub    rsp,0x28
  405116:	movsd  xmm0,QWORD PTR [rdx+0x640]
  40511e:	mov    rbx,rcx
  405121:	mov    rsi,rdx
  405124:	movsd  QWORD PTR [rcx+0x640],xmm0
  40512c:	call   0x4050a0
  405131:	lea    rdx,[rsi+0x320]
  405138:	lea    rcx,[rbx+0x320]
  40513f:	add    rsp,0x28
  405143:	pop    rbx
  405144:	pop    rsi
  405145:	jmp    0x4050a0
  40514a:	nop    WORD PTR [rax+rax*1+0x0]
  405150:	push   rsi
  405151:	push   rbx
  405152:	sub    rsp,0x28
  405156:	movsd  xmm0,QWORD PTR [rcx+0x640]
  40515e:	mov    rbx,rcx
  405161:	mov    rsi,rdx
  405164:	mulsd  xmm0,QWORD PTR [rdx+0x640]
  40516c:	movsd  QWORD PTR [rcx+0x640],xmm0
  405174:	call   0x405000
  405179:	test   eax,eax
  40517b:	je     0x405184
  40517d:	add    rsp,0x28
  405181:	pop    rbx
  405182:	pop    rsi
  405183:	ret    
  405184:	lea    rdx,[rsi+0x320]
  40518b:	lea    rcx,[rbx+0x320]
  405192:	add    rsp,0x28
  405196:	pop    rbx
  405197:	pop    rsi
  405198:	jmp    0x405000
  40519d:	nop    DWORD PTR [rax]
  4051a0:	push   rsi
  4051a1:	push   rbx
  4051a2:	sub    rsp,0x28
  4051a6:	movsd  xmm0,QWORD PTR [rcx+0x640]
  4051ae:	mov    rsi,rdx
  4051b1:	lea    rdx,[rdx+0x320]
  4051b8:	mov    rbx,rcx
  4051bb:	divsd  xmm0,QWORD PTR [rdx+0x320]
  4051c3:	movsd  QWORD PTR [rcx+0x640],xmm0
  4051cb:	call   0x405000
  4051d0:	test   eax,eax
  4051d2:	je     0x4051e0
  4051d4:	add    rsp,0x28
  4051d8:	pop    rbx
  4051d9:	pop    rsi
  4051da:	ret    
  4051db:	nop    DWORD PTR [rax+rax*1+0x0]
  4051e0:	lea    rcx,[rbx+0x320]
  4051e7:	mov    rdx,rsi
  4051ea:	add    rsp,0x28
  4051ee:	pop    rbx
  4051ef:	pop    rsi
  4051f0:	jmp    0x405000
  4051f5:	nop
  4051f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405200:	push   r13
  405202:	push   r12
  405204:	push   rbp
  405205:	push   rdi
  405206:	push   rsi
  405207:	push   rbx
  405208:	sub    rsp,0x678
  40520f:	lea    rsi,[rcx+0x320]
  405216:	test   edx,edx
  405218:	mov    rax,rcx
  40521b:	cmove  rsi,rcx
  40521f:	mov    rcx,QWORD PTR [rsi]
  405222:	test   rcx,rcx
  405225:	je     0x40533b
  40522b:	mov    r12d,edx
  40522e:	mov    rbp,rax
  405231:	mov    r13d,0x2
  405237:	lea    rdi,[rsp+0x20]
  40523c:	jmp    0x405260
  40523e:	xchg   ax,ax
  405240:	call   0x4051a0
  405245:	mov    rcx,rdi
  405248:	mov    ebx,eax
  40524a:	call   0x404a30
  40524f:	test   ebx,ebx
  405251:	jne    0x4052f0
  405257:	mov    rcx,QWORD PTR [rsi]
  40525a:	mov    r13d,0x1
  405260:	cmp    BYTE PTR [rcx],0x0
  405263:	je     0x405305
  405269:	mov    edx,0x1
  40526e:	call   0x404d80
  405273:	test   rax,rax
  405276:	mov    rbx,rax
  405279:	je     0x405320
  40527f:	mov    edx,0x21
  405284:	mov    rcx,rax
  405287:	call   0x415f90
  40528c:	test   rax,rax
  40528f:	jne    0x405305
  405291:	mov    rcx,QWORD PTR [rsi]
  405294:	cmp    rcx,QWORD PTR [rip+0x120cd]        # 0x417368
  40529b:	je     0x4052ac
  40529d:	call   0x416010
  4052a2:	mov    rax,QWORD PTR [rip+0x120bf]        # 0x417368
  4052a9:	mov    QWORD PTR [rsi],rax
  4052ac:	xor    r9d,r9d
  4052af:	xor    r8d,r8d
  4052b2:	mov    rdx,rbx
  4052b5:	mov    rcx,rdi
  4052b8:	call   0x40aa90
  4052bd:	test   eax,eax
  4052bf:	jne    0x4052f0
  4052c1:	test   r12d,r12d
  4052c4:	mov    rdx,rdi
  4052c7:	mov    rcx,rbp
  4052ca:	jne    0x405240
  4052d0:	call   0x405150
  4052d5:	mov    rcx,rdi
  4052d8:	mov    ebx,eax
  4052da:	call   0x404a30
  4052df:	test   ebx,ebx
  4052e1:	je     0x405257
  4052e7:	nop    WORD PTR [rax+rax*1+0x0]
  4052f0:	mov    eax,0x4
  4052f5:	add    rsp,0x678
  4052fc:	pop    rbx
  4052fd:	pop    rsi
  4052fe:	pop    rdi
  4052ff:	pop    rbp
  405300:	pop    r12
  405302:	pop    r13
  405304:	ret    
  405305:	add    rsi,0x8
  405309:	mov    rcx,QWORD PTR [rsi]
  40530c:	test   rcx,rcx
  40530f:	jne    0x405260
  405315:	mov    eax,r13d
  405318:	jmp    0x4052f5
  40531a:	nop    WORD PTR [rax+rax*1+0x0]
  405320:	cmp    QWORD PTR [rip+0x19d48],0x0        # 0x41f070
  405328:	jne    0x4052f0
  40532a:	mov    rcx,QWORD PTR [rsi]
  40532d:	call   0x4019f0
  405332:	mov    QWORD PTR [rip+0x19d37],rax        # 0x41f070
  405339:	jmp    0x4052f0
  40533b:	mov    r13d,0x2
  405341:	jmp    0x405315
  405343:	nop    DWORD PTR [rax]
  405346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405350:	push   rsi
  405351:	push   rbx
  405352:	sub    rsp,0x28
  405356:	mov    rsi,rcx
  405359:	mov    rcx,QWORD PTR [rip+0x19d10]        # 0x41f070
  405360:	test   rcx,rcx
  405363:	je     0x40536a
  405365:	call   0x416010
  40536a:	mov    QWORD PTR [rip+0x19cfb],0x0        # 0x41f070
  405375:	xor    edx,edx
  405377:	mov    rcx,rsi
  40537a:	call   0x405200
  40537f:	test   al,0x4
  405381:	mov    ebx,eax
  405383:	je     0x4053a0
  405385:	cmp    QWORD PTR [rip+0x19ce3],0x1        # 0x41f070
  40538d:	sbb    eax,eax
  40538f:	and    eax,0xfffffffc
  405392:	add    eax,0x7
  405395:	add    rsp,0x28
  405399:	pop    rbx
  40539a:	pop    rsi
  40539b:	ret    
  40539c:	nop    DWORD PTR [rax+0x0]
  4053a0:	mov    edx,0x1
  4053a5:	mov    rcx,rsi
  4053a8:	call   0x405200
  4053ad:	or     eax,ebx
  4053af:	test   al,0x4
  4053b1:	jne    0x405385
  4053b3:	and    eax,0x1
  4053b6:	jne    0x405375
  4053b8:	add    rsp,0x28
  4053bc:	pop    rbx
  4053bd:	pop    rsi
  4053be:	ret    
  4053bf:	nop
  4053c0:	push   rbp
  4053c1:	push   rdi
  4053c2:	push   rsi
  4053c3:	push   rbx
  4053c4:	sub    rsp,0x28
  4053c8:	mov    rbx,rcx
  4053cb:	mov    rcx,QWORD PTR [rcx]
  4053ce:	mov    rsi,rdx
  4053d1:	mov    rbp,r8
  4053d4:	test   rcx,rcx
  4053d7:	je     0x40542a
  4053d9:	mov    rax,QWORD PTR [rip+0x11f88]        # 0x417368
  4053e0:	mov    edi,0x1
  4053e5:	cmp    rcx,rax
  4053e8:	je     0x4053fb
  4053ea:	call   rbp
  4053ec:	xor    edi,edi
  4053ee:	test   eax,eax
  4053f0:	mov    rax,QWORD PTR [rip+0x11f71]        # 0x417368
  4053f7:	setne  dil
  4053fb:	mov    rcx,QWORD PTR [rsi]
  4053fe:	cmp    rcx,rax
  405401:	je     0x40540c
  405403:	call   rbp
  405405:	test   eax,eax
  405407:	je     0x405480
  405409:	mov    rax,QWORD PTR [rsi]
  40540c:	mov    rcx,QWORD PTR [rbx]
  40540f:	mov    edx,0x1
  405414:	test   rax,rax
  405417:	je     0x405440
  405419:	test   edi,edi
  40541b:	jne    0x405444
  40541d:	test   edx,edx
  40541f:	je     0x405450
  405421:	add    rsi,0x8
  405425:	test   rcx,rcx
  405428:	jne    0x4053d9
  40542a:	cmp    QWORD PTR [rsi],0x0
  40542e:	jne    0x4053d9
  405430:	xor    eax,eax
  405432:	add    rsp,0x28
  405436:	pop    rbx
  405437:	pop    rsi
  405438:	pop    rdi
  405439:	pop    rbp
  40543a:	ret    
  40543b:	nop    DWORD PTR [rax+rax*1+0x0]
  405440:	test   edi,edi
  405442:	je     0x405470
  405444:	add    rbx,0x8
  405448:	mov    rcx,QWORD PTR [rbx]
  40544b:	jmp    0x4053d4
  40544d:	nop    DWORD PTR [rax]
  405450:	mov    rdx,rax
  405453:	call   0x415f88
  405458:	test   eax,eax
  40545a:	jne    0x405470
  40545c:	add    rbx,0x8
  405460:	add    rsi,0x8
  405464:	mov    rcx,QWORD PTR [rbx]
  405467:	jmp    0x4053d4
  40546c:	nop    DWORD PTR [rax+0x0]
  405470:	mov    eax,0x1
  405475:	add    rsp,0x28
  405479:	pop    rbx
  40547a:	pop    rsi
  40547b:	pop    rdi
  40547c:	pop    rbp
  40547d:	ret    
  40547e:	xchg   ax,ax
  405480:	mov    rcx,QWORD PTR [rbx]
  405483:	test   rcx,rcx
  405486:	je     0x405470
  405488:	mov    rax,QWORD PTR [rsi]
  40548b:	xor    edx,edx
  40548d:	jmp    0x405414
  40548f:	nop
  405490:	push   rdi
  405491:	push   rsi
  405492:	push   rbx
  405493:	sub    rsp,0x20
  405497:	mov    rsi,rdx
  40549a:	mov    rbx,rcx
  40549d:	mov    rdi,r8
  4054a0:	call   0x4053c0
  4054a5:	test   eax,eax
  4054a7:	mov    edx,0x1
  4054ac:	jne    0x4054cb
  4054ae:	lea    rdx,[rsi+0x320]
  4054b5:	lea    rcx,[rbx+0x320]
  4054bc:	mov    r8,rdi
  4054bf:	call   0x4053c0
  4054c4:	xor    edx,edx
  4054c6:	test   eax,eax
  4054c8:	setne  dl
  4054cb:	mov    eax,edx
  4054cd:	add    rsp,0x20
  4054d1:	pop    rbx
  4054d2:	pop    rsi
  4054d3:	pop    rdi
  4054d4:	ret    
  4054d5:	nop
  4054d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054e0:	push   rbx
  4054e1:	sub    rsp,0x30
  4054e5:	mov    rbx,rcx
  4054e8:	call   0x405350
  4054ed:	test   eax,eax
  4054ef:	jne    0x405509
  4054f1:	mov    rcx,rbx
  4054f4:	mov    DWORD PTR [rsp+0x2c],eax
  4054f8:	call   0x404c50
  4054fd:	mov    rcx,rbx
  405500:	call   0x404cd0
  405505:	mov    eax,DWORD PTR [rsp+0x2c]
  405509:	add    rsp,0x30
  40550d:	pop    rbx
  40550e:	ret    
  40550f:	nop
  405510:	push   r15
  405512:	push   r14
  405514:	push   r13
  405516:	push   r12
  405518:	push   rbp
  405519:	push   rdi
  40551a:	push   rsi
  40551b:	push   rbx
  40551c:	sub    rsp,0x58
  405520:	movaps XMMWORD PTR [rsp+0x40],xmm6
  405525:	test   edx,edx
  405527:	mov    rsi,rcx
  40552a:	mov    DWORD PTR [rsp+0xa8],edx
  405531:	je     0x4056c0
  405537:	xor    edi,edi
  405539:	cmp    QWORD PTR [rcx],0x0
  40553d:	mov    r14,rcx
  405540:	je     0x40554f
  405542:	add    r14,0x8
  405546:	add    edi,0x1
  405549:	cmp    QWORD PTR [r14],0x0
  40554d:	jne    0x405542
  40554f:	cmp    QWORD PTR [rsi+0x320],0x0
  405557:	lea    rax,[rsi+0x320]
  40555e:	mov    QWORD PTR [rsp+0x30],rax
  405563:	je     0x4056eb
  405569:	mov    r15,rax
  40556c:	xor    ebp,ebp
  40556e:	xchg   ax,ax
  405570:	add    r15,0x8
  405574:	add    ebp,0x1
  405577:	cmp    QWORD PTR [r15],0x0
  40557b:	jne    0x405570
  40557d:	cmp    DWORD PTR [rsp+0xa8],0x1
  405585:	movsd  xmm6,QWORD PTR [rsi+0x640]
  40558d:	jle    0x4056f7
  405593:	lea    eax,[rbp-0x1]
  405596:	movapd xmm0,xmm6
  40559a:	mov    DWORD PTR [rsp+0x3c],0x1
  4055a2:	lea    rax,[rsi+rax*8+0x328]
  4055aa:	mov    QWORD PTR [rsp+0x28],rax
  4055af:	lea    eax,[rdi-0x1]
  4055b2:	lea    r12,[rsi+rax*8+0x8]
  4055b7:	mulsd  xmm0,xmm6
  4055bb:	test   edi,edi
  4055bd:	movsd  QWORD PTR [rsi+0x640],xmm0
  4055c5:	je     0x405607
  4055c7:	mov    r13,rsi
  4055ca:	nop    WORD PTR [rax+rax*1+0x0]
  4055d0:	mov    rcx,QWORD PTR [r13+0x0]
  4055d4:	cmp    rcx,QWORD PTR [rip+0x11d8d]        # 0x417368
  4055db:	je     0x4055fe
  4055dd:	mov    rax,r14
  4055e0:	sub    rax,rsi
  4055e3:	cmp    rax,0x31f
  4055e9:	jg     0x405670
  4055ef:	lea    rbx,[r14+0x8]
  4055f3:	call   0x4019f0
  4055f8:	mov    QWORD PTR [r14],rax
  4055fb:	mov    r14,rbx
  4055fe:	add    r13,0x8
  405602:	cmp    r13,r12
  405605:	jne    0x4055d0
  405607:	test   ebp,ebp
  405609:	je     0x405646
  40560b:	mov    rbx,QWORD PTR [rsp+0x30]
  405610:	mov    rcx,QWORD PTR [rbx]
  405613:	cmp    rcx,QWORD PTR [rip+0x11d4e]        # 0x417368
  40561a:	je     0x40563b
  40561c:	lea    r13,[r15+0x8]
  405620:	call   0x4019f0
  405625:	mov    QWORD PTR [r15],rax
  405628:	mov    rax,r13
  40562b:	sub    rax,QWORD PTR [rsp+0x30]
  405630:	cmp    rax,0x31f
  405636:	jg     0x4056a0
  405638:	mov    r15,r13
  40563b:	add    rbx,0x8
  40563f:	cmp    rbx,QWORD PTR [rsp+0x28]
  405644:	jne    0x405610
  405646:	add    DWORD PTR [rsp+0x3c],0x1
  40564b:	mov    eax,DWORD PTR [rsp+0x3c]
  40564f:	cmp    eax,DWORD PTR [rsp+0xa8]
  405656:	je     0x4056f7
  40565c:	movsd  xmm0,QWORD PTR [rsi+0x640]
  405664:	jmp    0x4055b7
  405669:	nop    DWORD PTR [rax+0x0]
  405670:	mov    QWORD PTR [r15],0x0
  405677:	mov    eax,0x2
  40567c:	mov    QWORD PTR [r14],0x0
  405683:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  405688:	add    rsp,0x58
  40568c:	pop    rbx
  40568d:	pop    rsi
  40568e:	pop    rdi
  40568f:	pop    rbp
  405690:	pop    r12
  405692:	pop    r13
  405694:	pop    r14
  405696:	pop    r15
  405698:	ret    
  405699:	nop    DWORD PTR [rax+0x0]
  4056a0:	mov    QWORD PTR [r15+0x8],0x0
  4056a8:	mov    eax,0x2
  4056ad:	mov    QWORD PTR [r14],0x0
  4056b4:	jmp    0x405683
  4056b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056c0:	call   0x404a30
  4056c5:	movsd  xmm1,QWORD PTR [rip+0x154f3]        # 0x41abc0
  4056cd:	mov    QWORD PTR [rsi+0x320],0x0
  4056d8:	mov    QWORD PTR [rsi],0x0
  4056df:	xor    eax,eax
  4056e1:	movsd  QWORD PTR [rsi+0x640],xmm1
  4056e9:	jmp    0x405683
  4056eb:	mov    r15,QWORD PTR [rsp+0x30]
  4056f0:	xor    ebp,ebp
  4056f2:	jmp    0x40557d
  4056f7:	mov    QWORD PTR [r14],0x0
  4056fe:	xor    eax,eax
  405700:	mov    QWORD PTR [r15],0x0
  405707:	jmp    0x405683
  40570c:	nop    DWORD PTR [rax+0x0]
  405710:	push   rbx
  405711:	sub    rsp,0x680
  405718:	movsd  xmm0,QWORD PTR [rip+0x154a0]        # 0x41abc0
  405720:	mov    rbx,rcx
  405723:	mov    QWORD PTR [rsp+0x350],0x0
  40572f:	mov    QWORD PTR [rsp+0x30],0x0
  405738:	movsd  QWORD PTR [rsp+0x670],xmm0
  405741:	call   0x4054e0
  405746:	test   eax,eax
  405748:	je     0x405753
  40574a:	add    rsp,0x680
  405751:	pop    rbx
  405752:	ret    
  405753:	lea    rdx,[rsp+0x30]
  405758:	lea    r8,[rip+0xffffffffffffbdd1]        # 0x401530
  40575f:	mov    rcx,rbx
  405762:	call   0x405490
  405767:	test   eax,eax
  405769:	je     0x405780
  40576b:	mov    eax,0x5
  405770:	add    rsp,0x680
  405777:	pop    rbx
  405778:	ret    
  405779:	nop    DWORD PTR [rax+0x0]
  405780:	mov    rcx,rbx
  405783:	mov    DWORD PTR [rsp+0x2c],eax
  405787:	call   0x404a30
  40578c:	mov    eax,DWORD PTR [rsp+0x2c]
  405790:	jmp    0x40574a
  405792:	nop    DWORD PTR [rax+0x0]
  405796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057a0:	push   r12
  4057a2:	push   rbp
  4057a3:	push   rdi
  4057a4:	push   rsi
  4057a5:	push   rbx
  4057a6:	sub    rsp,0x20
  4057aa:	mov    ebp,ecx
  4057ac:	mov    rsi,rdx
  4057af:	mov    rcx,QWORD PTR [rdx]
  4057b2:	mov    rdx,QWORD PTR [rip+0x11baf]        # 0x417368
  4057b9:	mov    r12,r8
  4057bc:	cmp    rcx,rdx
  4057bf:	jne    0x405884
  4057c5:	add    rsi,0x8
  4057c9:	mov    rax,QWORD PTR [rsi]
  4057cc:	cmp    rax,rcx
  4057cf:	je     0x4057c5
  4057d1:	test   rax,rax
  4057d4:	je     0x40588c
  4057da:	mov    rbx,rsi
  4057dd:	xor    edi,edi
  4057df:	jmp    0x405806
  4057e1:	mov    rdx,QWORD PTR [rbx]
  4057e4:	mov    rcx,QWORD PTR [rsi]
  4057e7:	call   0x415f88
  4057ec:	test   eax,eax
  4057ee:	jne    0x405840
  4057f0:	add    edi,0x1
  4057f3:	add    rbx,0x8
  4057f7:	mov    rax,QWORD PTR [rbx]
  4057fa:	test   rax,rax
  4057fd:	je     0x405850
  4057ff:	mov    rdx,QWORD PTR [rip+0x11b62]        # 0x417368
  405806:	cmp    rdx,rax
  405809:	je     0x4057f3
  40580b:	cmp    edi,ebp
  40580d:	jne    0x4057e1
  40580f:	mov    rcx,QWORD PTR [rsi]
  405812:	mov    rsi,rbx
  405815:	lea    rdi,[r12+0x8]
  40581a:	call   0x4019f0
  40581f:	mov    QWORD PTR [r12],rax
  405823:	mov    rdx,QWORD PTR [rbx]
  405826:	mov    r12,rdi
  405829:	mov    rcx,QWORD PTR [rsi]
  40582c:	xor    edi,edi
  40582e:	call   0x415f88
  405833:	test   eax,eax
  405835:	je     0x4057f0
  405837:	nop    WORD PTR [rax+rax*1+0x0]
  405840:	mov    eax,0x6
  405845:	add    rsp,0x20
  405849:	pop    rbx
  40584a:	pop    rsi
  40584b:	pop    rdi
  40584c:	pop    rbp
  40584d:	pop    r12
  40584f:	ret    
  405850:	cmp    edi,ebp
  405852:	je     0x40586d
  405854:	test   edi,edi
  405856:	jne    0x405840
  405858:	xor    eax,eax
  40585a:	mov    QWORD PTR [r12],0x0
  405862:	add    rsp,0x20
  405866:	pop    rbx
  405867:	pop    rsi
  405868:	pop    rdi
  405869:	pop    rbp
  40586a:	pop    r12
  40586c:	ret    
  40586d:	mov    rax,QWORD PTR [rsi]
  405870:	mov    rbx,r12
  405873:	mov    rcx,rax
  405876:	add    r12,0x8
  40587a:	call   0x4019f0
  40587f:	mov    QWORD PTR [rbx],rax
  405882:	jmp    0x405858
  405884:	mov    rax,rcx
  405887:	jmp    0x4057d1
  40588c:	test   ebp,ebp
  40588e:	jne    0x405858
  405890:	mov    rbx,r12
  405893:	jmp    0x405873
  405895:	nop
  405896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4058a0:	push   rdi
  4058a1:	push   rsi
  4058a2:	push   rbx
  4058a3:	sub    rsp,0x680
  4058aa:	movaps XMMWORD PTR [rsp+0x670],xmm6
  4058b2:	mov    rbx,rcx
  4058b5:	mov    esi,edx
  4058b7:	movsd  xmm2,QWORD PTR [rip+0x15301]        # 0x41abc0
  4058bf:	mov    QWORD PTR [rsp+0x340],0x0
  4058cb:	mov    QWORD PTR [rsp+0x20],0x0
  4058d4:	movsd  QWORD PTR [rsp+0x660],xmm2
  4058dd:	call   0x4054e0
  4058e2:	test   eax,eax
  4058e4:	jne    0x405943
  4058e6:	test   sil,0x1
  4058ea:	movsd  xmm0,QWORD PTR [rbx+0x640]
  4058f2:	jne    0x405903
  4058f4:	pxor   xmm1,xmm1
  4058f8:	mov    eax,0x6
  4058fd:	ucomisd xmm1,xmm0
  405901:	ja     0x405943
  405903:	pxor   xmm1,xmm1
  405907:	lea    rdi,[rsp+0x20]
  40590c:	movsd  xmm6,QWORD PTR [rip+0x152ac]        # 0x41abc0
  405914:	cvtsi2sd xmm1,esi
  405918:	movapd xmm3,xmm6
  40591c:	divsd  xmm3,xmm1
  405920:	movapd xmm1,xmm3
  405924:	call   0x40d510
  405929:	mov    r8,rdi
  40592c:	mov    rdx,rbx
  40592f:	mov    ecx,esi
  405931:	movsd  QWORD PTR [rsp+0x660],xmm0
  40593a:	call   0x4057a0
  40593f:	test   eax,eax
  405941:	je     0x405960
  405943:	movaps xmm6,XMMWORD PTR [rsp+0x670]
  40594b:	add    rsp,0x680
  405952:	pop    rbx
  405953:	pop    rsi
  405954:	pop    rdi
  405955:	ret    
  405956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405960:	lea    rdx,[rbx+0x320]
  405967:	lea    r8,[rdi+0x320]
  40596e:	mov    ecx,esi
  405970:	call   0x4057a0
  405975:	test   eax,eax
  405977:	jne    0x405943
  405979:	mov    rcx,rbx
  40597c:	call   0x404a30
  405981:	movsd  QWORD PTR [rbx+0x640],xmm6
  405989:	mov    QWORD PTR [rbx+0x320],0x0
  405994:	mov    QWORD PTR [rbx],0x0
  40599b:	mov    rdx,rdi
  40599e:	mov    rcx,rbx
  4059a1:	call   0x405150
  4059a6:	jmp    0x405943
  4059a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4059b0:	movsd  xmm0,QWORD PTR [rip+0x15208]        # 0x41abc0
  4059b8:	mov    rax,QWORD PTR [rcx+0x320]
  4059bf:	lea    rdx,[rcx+0x320]
  4059c6:	divsd  xmm0,QWORD PTR [rcx+0x640]
  4059ce:	test   rax,rax
  4059d1:	movsd  QWORD PTR [rcx+0x640],xmm0
  4059d9:	je     0x405a3f
  4059db:	xor    r9d,r9d
  4059de:	xchg   ax,ax
  4059e0:	add    rdx,0x8
  4059e4:	add    r9d,0x1
  4059e8:	cmp    QWORD PTR [rdx],0x0
  4059ec:	jne    0x4059e0
  4059ee:	mov    rdx,QWORD PTR [rcx]
  4059f1:	mov    r8,rcx
  4059f4:	test   rdx,rdx
  4059f7:	je     0x405a4f
  4059f9:	xor    r10d,r10d
  4059fc:	nop    DWORD PTR [rax+0x0]
  405a00:	add    r8,0x8
  405a04:	add    r10d,0x1
  405a08:	cmp    QWORD PTR [r8],0x0
  405a0c:	jne    0x405a00
  405a0e:	cmp    r9d,r10d
  405a11:	cmovl  r9,r10
  405a15:	lea    r8,[rcx+r9*8+0x8]
  405a1a:	jmp    0x405a2a
  405a1c:	nop    DWORD PTR [rax+0x0]
  405a20:	mov    rdx,QWORD PTR [rcx]
  405a23:	mov    rax,QWORD PTR [rcx+0x320]
  405a2a:	mov    QWORD PTR [rcx],rax
  405a2d:	mov    QWORD PTR [rcx+0x320],rdx
  405a34:	add    rcx,0x8
  405a38:	cmp    rcx,r8
  405a3b:	jne    0x405a20
  405a3d:	repz ret 
  405a3f:	mov    rdx,QWORD PTR [rcx]
  405a42:	xor    r9d,r9d
  405a45:	mov    r8,rcx
  405a48:	test   rdx,rdx
  405a4b:	jne    0x4059f9
  405a4d:	jmp    0x405a15
  405a4f:	xor    r10d,r10d
  405a52:	jmp    0x405a0e
  405a54:	xchg   ax,ax
  405a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a60:	push   rsi
  405a61:	push   rbx
  405a62:	sub    rsp,0x68
  405a66:	movaps XMMWORD PTR [rsp+0x30],xmm6
  405a6b:	movaps XMMWORD PTR [rsp+0x40],xmm7
  405a70:	movaps XMMWORD PTR [rsp+0x50],xmm8
  405a76:	mov    rsi,rcx
  405a79:	mov    rcx,rdx
  405a7c:	mov    rbx,rdx
  405a7f:	call   0x405710
  405a84:	test   eax,eax
  405a86:	jne    0x405b0e
  405a8c:	movsd  xmm6,QWORD PTR [rbx+0x640]
  405a94:	movapd xmm0,xmm6
  405a98:	call   0x40cd10
  405a9d:	ucomisd xmm0,xmm6
  405aa1:	jp     0x405aa9
  405aa3:	je     0x405b54
  405aa9:	movsd  xmm0,QWORD PTR [rip+0x1511f]        # 0x41abd0
  405ab1:	movsd  xmm8,QWORD PTR [rip+0x15106]        # 0x41abc0
  405aba:	andpd  xmm0,xmm6
  405abe:	movapd xmm7,xmm8
  405ac3:	divsd  xmm7,xmm0
  405ac7:	movapd xmm0,xmm7
  405acb:	call   0x40cd10
  405ad0:	subsd  xmm7,xmm0
  405ad4:	movsd  xmm0,QWORD PTR [rip+0x15104]        # 0x41abe0
  405adc:	ucomisd xmm0,xmm7
  405ae0:	jbe    0x405b25
  405ae2:	divsd  xmm8,xmm6
  405ae7:	mov    rcx,rsi
  405aea:	cvttsd2si edx,xmm8
  405aef:	mov    eax,edx
  405af1:	sar    eax,0x1f
  405af4:	xor    edx,eax
  405af6:	sub    edx,eax
  405af8:	call   0x4058a0
  405afd:	test   eax,eax
  405aff:	jne    0x405b0e
  405b01:	pxor   xmm0,xmm0
  405b05:	ucomisd xmm0,xmm8
  405b0a:	ja     0x405b77
  405b0c:	xor    eax,eax
  405b0e:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  405b13:	movaps xmm7,XMMWORD PTR [rsp+0x40]
  405b18:	movaps xmm8,XMMWORD PTR [rsp+0x50]
  405b1e:	add    rsp,0x68
  405b22:	pop    rbx
  405b23:	pop    rsi
  405b24:	ret    
  405b25:	mov    rcx,rsi
  405b28:	call   0x405710
  405b2d:	test   eax,eax
  405b2f:	jne    0x405b0e
  405b31:	movapd xmm1,xmm6
  405b35:	movsd  xmm0,QWORD PTR [rsi+0x640]
  405b3d:	mov    DWORD PTR [rsp+0x2c],eax
  405b41:	call   0x40d510
  405b46:	mov    eax,DWORD PTR [rsp+0x2c]
  405b4a:	movsd  QWORD PTR [rsi+0x640],xmm0
  405b52:	jmp    0x405b0e
  405b54:	cvttsd2si edx,xmm6
  405b58:	mov    rcx,rsi
  405b5b:	mov    eax,edx
  405b5d:	sar    eax,0x1f
  405b60:	xor    edx,eax
  405b62:	sub    edx,eax
  405b64:	call   0x405510
  405b69:	test   eax,eax
  405b6b:	jne    0x405b0e
  405b6d:	pxor   xmm0,xmm0
  405b71:	ucomisd xmm0,xmm6
  405b75:	jbe    0x405b0c
  405b77:	mov    rcx,rsi
  405b7a:	call   0x4059b0
  405b7f:	xor    eax,eax
  405b81:	jmp    0x405b0e
  405b83:	nop    DWORD PTR [rax]
  405b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b90:	push   rsi
  405b91:	push   rbx
  405b92:	sub    rsp,0x38
  405b96:	mov    rbx,rcx
  405b99:	mov    rsi,rdx
  405b9c:	call   0x4054e0
  405ba1:	test   eax,eax
  405ba3:	je     0x405bb0
  405ba5:	add    rsp,0x38
  405ba9:	pop    rbx
  405baa:	pop    rsi
  405bab:	ret    
  405bac:	nop    DWORD PTR [rax+0x0]
  405bb0:	mov    rcx,rsi
  405bb3:	call   0x4054e0
  405bb8:	test   eax,eax
  405bba:	jne    0x405ba5
  405bbc:	lea    r8,[rip+0xffffffffffffb96d]        # 0x401530
  405bc3:	mov    rdx,rsi
  405bc6:	mov    rcx,rbx
  405bc9:	call   0x405490
  405bce:	test   eax,eax
  405bd0:	je     0x405be0
  405bd2:	mov    eax,0x4
  405bd7:	add    rsp,0x38
  405bdb:	pop    rbx
  405bdc:	pop    rsi
  405bdd:	ret    
  405bde:	xchg   ax,ax
  405be0:	movsd  xmm0,QWORD PTR [rbx+0x640]
  405be8:	mov    rcx,rsi
  405beb:	mov    DWORD PTR [rsp+0x2c],eax
  405bef:	addsd  xmm0,QWORD PTR [rsi+0x640]
  405bf7:	movsd  QWORD PTR [rbx+0x640],xmm0
  405bff:	call   0x404a30
  405c04:	mov    eax,DWORD PTR [rsp+0x2c]
  405c08:	jmp    0x405ba5
  405c0a:	nop    WORD PTR [rax+rax*1+0x0]
  405c10:	movapd xmm4,xmm1
  405c14:	subsd  xmm1,xmm0
  405c18:	subsd  xmm4,QWORD PTR [rsp+0x28]
  405c1e:	divsd  xmm4,xmm1
  405c22:	movsd  xmm1,QWORD PTR [rip+0x14f96]        # 0x41abc0
  405c2a:	subsd  xmm1,xmm4
  405c2e:	mulsd  xmm2,xmm4
  405c32:	mulsd  xmm3,xmm1
  405c36:	addsd  xmm2,xmm3
  405c3a:	movapd xmm0,xmm2
  405c3e:	ret    
  405c3f:	nop
  405c40:	push   r12
  405c42:	push   rbp
  405c43:	push   rdi
  405c44:	push   rsi
  405c45:	push   rbx
  405c46:	sub    rsp,0x680
  405c4d:	movaps XMMWORD PTR [rsp+0x670],xmm6
  405c55:	mov    rsi,rcx
  405c58:	mov    rbx,rdx
  405c5b:	mov    ebp,r8d
  405c5e:	cmp    QWORD PTR [rdx+0x58],0x0
  405c63:	je     0x405d05
  405c69:	mov    rdx,QWORD PTR [rdx+0x68]
  405c6d:	lea    rdi,[rsp+0x20]
  405c72:	xor    r9d,r9d
  405c75:	xor    r8d,r8d
  405c78:	mov    rcx,rdi
  405c7b:	call   0x40aa90
  405c80:	test   eax,eax
  405c82:	mov    r9d,0xc
  405c88:	je     0x405ca3
  405c8a:	movaps xmm6,XMMWORD PTR [rsp+0x670]
  405c92:	mov    eax,r9d
  405c95:	add    rsp,0x680
  405c9c:	pop    rbx
  405c9d:	pop    rsi
  405c9e:	pop    rdi
  405c9f:	pop    rbp
  405ca0:	pop    r12
  405ca2:	ret    
  405ca3:	test   ebp,ebp
  405ca5:	jne    0x405d70
  405cab:	mov    rcx,rsi
  405cae:	call   0x405710
  405cb3:	test   eax,eax
  405cb5:	mov    r9d,eax
  405cb8:	jne    0x405c8a
  405cba:	mov    ecx,DWORD PTR [rbx+0x60]
  405cbd:	movsd  xmm1,QWORD PTR [rsi+0x640]
  405cc5:	cmp    ecx,0x1
  405cc8:	jle    0x405cfd
  405cca:	mov    rax,QWORD PTR [rbx+0x58]
  405cce:	sub    ecx,0x1
  405cd1:	xor    r8d,r8d
  405cd4:	movsd  xmm0,QWORD PTR [rax]
  405cd8:	lea    rdx,[rax+0x10]
  405cdc:	ucomisd xmm1,xmm0
  405ce0:	jb     0x405cf1
  405ce2:	movsd  xmm2,QWORD PTR [rax+0x10]
  405ce7:	ucomisd xmm2,xmm1
  405ceb:	jae    0x405ee0
  405cf1:	add    r8d,0x1
  405cf5:	mov    rax,rdx
  405cf8:	cmp    r8d,ecx
  405cfb:	jne    0x405cd4
  405cfd:	mov    r9d,0xb
  405d03:	jmp    0x405c8a
  405d05:	test   r8d,r8d
  405d08:	jne    0x405d54
  405d0a:	add    rbx,0x8
  405d0e:	mov    rcx,rsi
  405d11:	call   0x4054e0
  405d16:	test   eax,eax
  405d18:	mov    r9d,eax
  405d1b:	jne    0x405c8a
  405d21:	mov    rdx,QWORD PTR [rbx+0x10]
  405d25:	test   rdx,rdx
  405d28:	je     0x405e10
  405d2e:	lea    rdi,[rsp+0x20]
  405d33:	xor    r9d,r9d
  405d36:	xor    r8d,r8d
  405d39:	mov    rcx,rdi
  405d3c:	call   0x40aa90
  405d41:	test   eax,eax
  405d43:	je     0x405f30
  405d49:	mov    r9d,0xc
  405d4f:	jmp    0x405c8a
  405d54:	cmp    QWORD PTR [rdx+0x38],0x0
  405d59:	mov    r9d,0xd
  405d5f:	je     0x405c8a
  405d65:	add    rbx,0x30
  405d69:	jmp    0x405d0e
  405d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  405d70:	mov    rdx,rdi
  405d73:	mov    rcx,rsi
  405d76:	call   0x4051a0
  405d7b:	test   eax,eax
  405d7d:	mov    r9d,eax
  405d80:	jne    0x405c8a
  405d86:	mov    rcx,rsi
  405d89:	call   0x405710
  405d8e:	cmp    eax,0x5
  405d91:	mov    r9d,0xa
  405d97:	je     0x405c8a
  405d9d:	test   eax,eax
  405d9f:	mov    r9d,eax
  405da2:	jne    0x405c8a
  405da8:	mov    ecx,DWORD PTR [rbx+0x60]
  405dab:	movsd  xmm0,QWORD PTR [rsi+0x640]
  405db3:	cmp    ecx,0x1
  405db6:	jle    0x405cfd
  405dbc:	mov    rax,QWORD PTR [rbx+0x58]
  405dc0:	sub    ecx,0x1
  405dc3:	xor    edx,edx
  405dc5:	add    rax,0x10
  405dc9:	nop    DWORD PTR [rax+0x0]
  405dd0:	movsd  xmm2,QWORD PTR [rax-0x8]
  405dd5:	lea    r8,[rax-0x10]
  405dd9:	movsd  xmm1,QWORD PTR [rax+0x8]
  405dde:	ucomisd xmm0,xmm2
  405de2:	jb     0x405dee
  405de4:	ucomisd xmm1,xmm0
  405de8:	jae    0x405f76
  405dee:	ucomisd xmm0,xmm1
  405df2:	jb     0x405dfe
  405df4:	ucomisd xmm2,xmm0
  405df8:	jae    0x405f76
  405dfe:	add    edx,0x1
  405e01:	add    rax,0x10
  405e05:	cmp    edx,ecx
  405e07:	jne    0x405dd0
  405e09:	jmp    0x405cfd
  405e0e:	xchg   ax,ax
  405e10:	movsd  xmm0,QWORD PTR [rsi+0x640]
  405e18:	mov    rax,QWORD PTR [rbx+0x20]
  405e1c:	test   rax,rax
  405e1f:	je     0x405e2b
  405e21:	ucomisd xmm0,QWORD PTR [rax]
  405e25:	ja     0x405cfd
  405e2b:	mov    rax,QWORD PTR [rbx+0x18]
  405e2f:	test   rax,rax
  405e32:	je     0x405e42
  405e34:	movsd  xmm1,QWORD PTR [rax]
  405e38:	ucomisd xmm1,xmm0
  405e3c:	ja     0x405cfd
  405e42:	mov    rax,QWORD PTR [rbx]
  405e45:	mov    rdx,QWORD PTR [rbx+0x8]
  405e49:	lea    rdi,[rsp+0x20]
  405e4e:	mov    rbp,QWORD PTR [rip+0x191fb]        # 0x41f050
  405e55:	mov    r12,QWORD PTR [rip+0x191fc]        # 0x41f058
  405e5c:	xor    r9d,r9d
  405e5f:	xor    r8d,r8d
  405e62:	mov    rcx,rdi
  405e65:	mov    QWORD PTR [rip+0x191e4],rsi        # 0x41f050
  405e6c:	mov    QWORD PTR [rip+0x191e5],rax        # 0x41f058
  405e73:	call   0x40aa90
  405e78:	cmp    eax,0xe
  405e7b:	mov    QWORD PTR [rip+0x191d6],r12        # 0x41f058
  405e82:	mov    QWORD PTR [rip+0x191c7],rbp        # 0x41f050
  405e89:	je     0x405fcb
  405e8f:	test   eax,eax
  405e91:	mov    r9d,0xf
  405e97:	jne    0x405c8a
  405e9d:	nop    DWORD PTR [rax]
  405ea0:	mov    rcx,rsi
  405ea3:	call   0x404a30
  405ea8:	movsd  xmm4,QWORD PTR [rip+0x14d10]        # 0x41abc0
  405eb0:	mov    QWORD PTR [rsi+0x320],0x0
  405ebb:	mov    QWORD PTR [rsi],0x0
  405ec2:	mov    rdx,rdi
  405ec5:	mov    rcx,rsi
  405ec8:	movsd  QWORD PTR [rsi+0x640],xmm4
  405ed0:	call   0x405150
  405ed5:	xor    r9d,r9d
  405ed8:	jmp    0x405c8a
  405edd:	nop    DWORD PTR [rax]
  405ee0:	movapd xmm3,xmm2
  405ee4:	subsd  xmm2,xmm0
  405ee8:	movsd  xmm0,QWORD PTR [rip+0x14cd0]        # 0x41abc0
  405ef0:	subsd  xmm3,xmm1
  405ef4:	movapd xmm1,xmm3
  405ef8:	divsd  xmm1,xmm2
  405efc:	movsd  xmm2,QWORD PTR [rax+0x8]
  405f01:	subsd  xmm0,xmm1
  405f05:	mulsd  xmm2,xmm1
  405f09:	mulsd  xmm0,QWORD PTR [rdx+0x8]
  405f0e:	addsd  xmm0,xmm2
  405f12:	mulsd  xmm0,QWORD PTR [rsp+0x660]
  405f1b:	movsd  QWORD PTR [rsp+0x660],xmm0
  405f24:	jmp    0x405ea0
  405f29:	nop    DWORD PTR [rax+0x0]
  405f30:	mov    rcx,rdi
  405f33:	call   0x4054e0
  405f38:	test   eax,eax
  405f3a:	jne    0x405d49
  405f40:	lea    r8,[rip+0xffffffffffffb5e9]        # 0x401530
  405f47:	mov    rdx,rsi
  405f4a:	mov    rcx,rdi
  405f4d:	call   0x405490
  405f52:	test   eax,eax
  405f54:	mov    r9d,0xa
  405f5a:	jne    0x405c8a
  405f60:	movsd  xmm0,QWORD PTR [rsi+0x640]
  405f68:	divsd  xmm0,QWORD PTR [rsp+0x660]
  405f71:	jmp    0x405e18
  405f76:	movapd xmm5,xmm1
  405f7a:	mov    rcx,rdi
  405f7d:	subsd  xmm1,xmm2
  405f81:	movsd  xmm6,QWORD PTR [r8]
  405f86:	subsd  xmm5,xmm0
  405f8a:	movapd xmm0,xmm5
  405f8e:	divsd  xmm0,xmm1
  405f92:	movapd xmm1,xmm0
  405f96:	mulsd  xmm6,xmm0
  405f9a:	movsd  xmm0,QWORD PTR [rip+0x14c1e]        # 0x41abc0
  405fa2:	subsd  xmm0,xmm1
  405fa6:	mulsd  xmm0,QWORD PTR [rax]
  405faa:	addsd  xmm6,xmm0
  405fae:	call   0x404a30
  405fb3:	mov    rcx,rsi
  405fb6:	call   0x404a30
  405fbb:	movsd  QWORD PTR [rsi+0x640],xmm6
  405fc3:	xor    r9d,r9d
  405fc6:	jmp    0x405c8a
  405fcb:	mov    r9d,0xe
  405fd1:	jmp    0x405c8a
  405fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fe0:	push   rbp
  405fe1:	push   rdi
  405fe2:	push   rsi
  405fe3:	push   rbx
  405fe4:	sub    rsp,0x28
  405fe8:	mov    rbp,rdx
  405feb:	call   0x402140
  405ff0:	mov    rdx,QWORD PTR [rip+0x11439]        # 0x417430
  405ff7:	lea    rcx,[rip+0x12b5a]        # 0x418b58
  405ffe:	mov    rbx,rax
  406001:	call   0x401590
  406006:	mov    rcx,rbx
  406009:	mov    edx,0x1
  40600e:	call   0x404d80
  406013:	test   rax,rax
  406016:	mov    rbx,rax
  406019:	mov    rdi,QWORD PTR [rip+0x1d4a8]        # 0x4234c8
  406020:	jne    0x406076
  406022:	jmp    0x406095
  406024:	mov    edx,0x21
  406029:	mov    rcx,rbx
  40602c:	call   0x415f90
  406031:	test   rax,rax
  406034:	jne    0x406095
  406036:	call   rdi
  406038:	lea    rcx,[rax+0x30]
  40603c:	mov    rdx,rbx
  40603f:	call   0x4021a0
  406044:	call   rdi
  406046:	lea    rcx,[rip+0x12b0e]        # 0x418b5b
  40604d:	lea    r9,[rax+0x30]
  406051:	mov    r8d,0x3
  406057:	mov    edx,0x1
  40605c:	call   0x416008
  406061:	mov    rcx,rbx
  406064:	mov    edx,0x1
  406069:	call   0x404d80
  40606e:	test   rax,rax
  406071:	mov    rbx,rax
  406074:	je     0x406095
  406076:	mov    rdx,QWORD PTR [rip+0x113ab]        # 0x417428
  40607d:	mov    rcx,rbx
  406080:	call   0x415f40
  406085:	mov    rcx,rbx
  406088:	mov    rsi,rax
  40608b:	call   0x415f68
  406090:	cmp    rsi,rax
  406093:	jne    0x406024
  406095:	mov    rcx,rbp
  406098:	call   0x404ab0
  40609d:	mov    ecx,0xa
  4060a2:	add    rsp,0x28
  4060a6:	pop    rbx
  4060a7:	pop    rsi
  4060a8:	pop    rdi
  4060a9:	pop    rbp
  4060aa:	jmp    0x415fc8
  4060af:	nop
  4060b0:	push   r13
  4060b2:	push   r12
  4060b4:	push   rbp
  4060b5:	push   rdi
  4060b6:	push   rsi
  4060b7:	push   rbx
  4060b8:	sub    rsp,0x38
  4060bc:	cmp    QWORD PTR [rcx+0x58],0x0
  4060c1:	mov    rbx,rcx
  4060c4:	je     0x4061c0
  4060ca:	mov    rdx,QWORD PTR [rip+0x1135f]        # 0x417430
  4060d1:	lea    rcx,[rip+0x12a88]        # 0x418b60
  4060d8:	call   0x401590
  4060dd:	mov    edx,DWORD PTR [rbx+0x60]
  4060e0:	test   edx,edx
  4060e2:	jle    0x4061ad
  4060e8:	lea    r13,[rip+0x1c231]        # 0x422320
  4060ef:	lea    r12,[rip+0x1c1fa]        # 0x4222f0
  4060f6:	xor    esi,esi
  4060f8:	xor    ebp,ebp
  4060fa:	nop    WORD PTR [rax+rax*1+0x0]
  406100:	mov    eax,DWORD PTR [r13+0x1c]
  406104:	test   eax,eax
  406106:	jle    0x406114
  406108:	lea    rcx,[rip+0x12a73]        # 0x418b82
  40610f:	call   0x401590
  406114:	mov    rdx,QWORD PTR [rbx]
  406117:	lea    rcx,[rip+0x12a6b]        # 0x418b89
  40611e:	call   0x401590
  406123:	mov    rax,QWORD PTR [rbx+0x58]
  406127:	mov    rcx,QWORD PTR [r12]
  40612b:	movsd  xmm0,QWORD PTR [rax+rsi*1]
  406130:	movapd xmm1,xmm0
  406134:	movq   rdx,xmm0
  406139:	call   0x401590
  40613e:	lea    rcx,[rip+0x12a48]        # 0x418b8d
  406145:	call   0x401590
  40614a:	mov    rax,QWORD PTR [rbx+0x58]
  40614e:	mov    rcx,QWORD PTR [r12]
  406152:	movsd  xmm0,QWORD PTR [rax+rsi*1+0x8]
  406158:	movq   rdx,xmm0
  40615d:	movapd xmm1,xmm0
  406161:	call   0x401590
  406166:	mov    rdi,QWORD PTR [rbx+0x68]
  40616a:	mov    rcx,QWORD PTR [rip+0x112b7]        # 0x417428
  406171:	movsx  edx,BYTE PTR [rdi]
  406174:	call   0x415f90
  406179:	test   rax,rax
  40617c:	je     0x40618e
  40617e:	lea    rcx,[rip+0x12a0d]        # 0x418b92
  406185:	call   0x401590
  40618a:	mov    rdi,QWORD PTR [rbx+0x68]
  40618e:	lea    rcx,[rip+0x12a00]        # 0x418b95
  406195:	mov    rdx,rdi
  406198:	add    ebp,0x1
  40619b:	add    rsi,0x10
  40619f:	call   0x401590
  4061a4:	cmp    ebp,DWORD PTR [rbx+0x60]
  4061a7:	jl     0x406100
  4061ad:	add    rsp,0x38
  4061b1:	pop    rbx
  4061b2:	pop    rsi
  4061b3:	pop    rdi
  4061b4:	pop    rbp
  4061b5:	pop    r12
  4061b7:	pop    r13
  4061b9:	ret    
  4061ba:	nop    WORD PTR [rax+rax*1+0x0]
  4061c0:	mov    rax,QWORD PTR [rcx+0x10]
  4061c4:	mov    rdx,QWORD PTR [rip+0x11265]        # 0x417430
  4061cb:	mov    QWORD PTR [rsp+0x20],rax
  4061d0:	mov    r9,QWORD PTR [rcx+0x8]
  4061d4:	mov    r8,QWORD PTR [rcx]
  4061d7:	lea    rcx,[rip+0x129bc]        # 0x418b9a
  4061de:	call   0x401590
  4061e3:	nop
  4061e4:	add    rsp,0x38
  4061e8:	pop    rbx
  4061e9:	pop    rsi
  4061ea:	pop    rdi
  4061eb:	pop    rbp
  4061ec:	pop    r12
  4061ee:	pop    r13
  4061f0:	ret    
  4061f1:	nop    DWORD PTR [rax+rax*1+0x0]
  4061f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406200:	push   rsi
  406201:	push   rbx
  406202:	sub    rsp,0x28
  406206:	mov    rdx,QWORD PTR [rip+0x11223]        # 0x417430
  40620d:	mov    rbx,rcx
  406210:	lea    rcx,[rip+0x12992]        # 0x418ba9
  406217:	call   0x401590
  40621c:	mov    rsi,QWORD PTR [rbx+0x8]
  406220:	mov    rbx,QWORD PTR [rip+0x1d2a1]        # 0x4234c8
  406227:	call   rbx
  406229:	lea    rcx,[rax+0x30]
  40622d:	mov    rdx,rsi
  406230:	call   0x4021a0
  406235:	call   rbx
  406237:	lea    rdx,[rax+0x30]
  40623b:	mov    ecx,0xa
  406240:	add    rsp,0x28
  406244:	pop    rbx
  406245:	pop    rsi
  406246:	jmp    0x416020
  40624b:	nop    DWORD PTR [rax+rax*1+0x0]
  406250:	push   rdi
  406251:	push   rsi
  406252:	push   rbx
  406253:	sub    rsp,0x670
  40625a:	mov    rbx,rdx
  40625d:	mov    rsi,r8
  406260:	mov    rdi,rcx
  406263:	mov    r8d,0x1
  406269:	mov    rdx,rsi
  40626c:	mov    rcx,rbx
  40626f:	call   0x405c40
  406274:	test   eax,eax
  406276:	je     0x4062a2
  406278:	cmp    eax,0xa
  40627b:	je     0x4062f2
  40627d:	cmp    eax,0xb
  406280:	je     0x4063b0
  406286:	lea    rcx,[rip+0x129b3]        # 0x418c40
  40628d:	call   0x401590
  406292:	mov    eax,0x1
  406297:	add    rsp,0x670
  40629e:	pop    rbx
  40629f:	pop    rsi
  4062a0:	pop    rdi
  4062a1:	ret    
  4062a2:	mov    rcx,rbx
  4062a5:	call   0x4054e0
  4062aa:	test   eax,eax
  4062ac:	jne    0x406278
  4062ae:	mov    eax,DWORD PTR [rip+0x1c088]        # 0x42233c
  4062b4:	cmp    eax,0x2
  4062b7:	je     0x4063e0
  4062bd:	cmp    eax,0x1
  4062c0:	je     0x406400
  4062c6:	mov    rcx,rbx
  4062c9:	call   0x404ab0
  4062ce:	cmp    DWORD PTR [rip+0x1c067],0x2        # 0x42233c
  4062d5:	je     0x4063d0
  4062db:	mov    ecx,0xa
  4062e0:	call   0x415fc8
  4062e5:	xor    eax,eax
  4062e7:	add    rsp,0x670
  4062ee:	pop    rbx
  4062ef:	pop    rsi
  4062f0:	pop    rdi
  4062f1:	ret    
  4062f2:	lea    rcx,[rip+0x128c0]        # 0x418bb9
  4062f9:	call   0x401590
  4062fe:	cmp    QWORD PTR [rsi+0x58],0x0
  406303:	je     0x406430
  406309:	mov    rsi,QWORD PTR [rsi+0x68]
  40630d:	test   rsi,rsi
  406310:	je     0x40639b
  406316:	cmp    BYTE PTR [rsi],0x0
  406319:	lea    rax,[rip+0x12897]        # 0x418bb7
  406320:	lea    rcx,[rip+0x128a9]        # 0x418bd0
  406327:	cmove  rsi,rax
  40632b:	mov    rdx,rsi
  40632e:	call   0x401590
  406333:	mov    eax,DWORD PTR [rip+0x1c003]        # 0x42233c
  406339:	cmp    eax,0x2
  40633c:	je     0x406456
  406342:	cmp    eax,0x1
  406345:	je     0x406421
  40634b:	mov    rcx,rbx
  40634e:	call   0x404ab0
  406353:	mov    eax,DWORD PTR [rip+0x1bfe3]        # 0x42233c
  406359:	cmp    eax,0x2
  40635c:	je     0x406442
  406362:	cmp    eax,0x1
  406365:	je     0x406410
  40636b:	mov    ecx,0xa
  406370:	call   0x415fc8
  406375:	lea    rbx,[rsp+0x20]
  40637a:	xor    r9d,r9d
  40637d:	xor    r8d,r8d
  406380:	mov    rdx,rsi
  406383:	mov    rcx,rbx
  406386:	call   0x40aa90
  40638b:	mov    rcx,rbx
  40638e:	call   0x4054e0
  406393:	mov    rcx,rbx
  406396:	call   0x404ab0
  40639b:	mov    ecx,0xa
  4063a0:	call   0x415fc8
  4063a5:	mov    eax,0x1
  4063aa:	jmp    0x406297
  4063af:	nop
  4063b0:	lea    rcx,[rip+0x12859]        # 0x418c10
  4063b7:	mov    rdx,rdi
  4063ba:	call   0x401590
  4063bf:	mov    eax,0x1
  4063c4:	add    rsp,0x670
  4063cb:	pop    rbx
  4063cc:	pop    rsi
  4063cd:	pop    rdi
  4063ce:	ret    
  4063cf:	nop
  4063d0:	mov    ecx,0x29
  4063d5:	call   0x415fc8
  4063da:	jmp    0x4062db
  4063df:	nop
  4063e0:	mov    r8,QWORD PTR [rsi+0x30]
  4063e4:	lea    rcx,[rip+0x1288a]        # 0x418c75
  4063eb:	mov    rdx,rdi
  4063ee:	call   0x401590
  4063f3:	jmp    0x4062c6
  4063f8:	nop    DWORD PTR [rax+rax*1+0x0]
  406400:	mov    ecx,0x9
  406405:	call   0x415fc8
  40640a:	jmp    0x4062c6
  40640f:	nop
  406410:	lea    rcx,[rip+0x127f2]        # 0x418c09
  406417:	call   0x401590
  40641c:	jmp    0x406375
  406421:	mov    ecx,0x9
  406426:	call   0x415fc8
  40642b:	jmp    0x40634b
  406430:	mov    rsi,QWORD PTR [rsi+0x40]
  406434:	test   rsi,rsi
  406437:	jne    0x406316
  40643d:	jmp    0x40639b
  406442:	lea    rcx,[rip+0x127b8]        # 0x418c01
  406449:	mov    rdx,rsi
  40644c:	call   0x401590
  406451:	jmp    0x406375
  406456:	lea    rcx,[rip+0x1279d]        # 0x418bfa
  40645d:	mov    rdx,rdi
  406460:	call   0x401590
  406465:	jmp    0x40634b
  40646a:	nop    WORD PTR [rax+rax*1+0x0]
  406470:	push   rbp
  406471:	push   rdi
  406472:	push   rsi
  406473:	push   rbx
  406474:	sub    rsp,0x28
  406478:	mov    rdi,rcx
  40647b:	lea    rcx,[rip+0x127fd]        # 0x418c7f
  406482:	mov    rsi,rdx
  406485:	mov    rbp,r8
  406488:	mov    rbx,r9
  40648b:	call   0x401590
  406490:	mov    eax,DWORD PTR [rip+0x1bea6]        # 0x42233c
  406496:	cmp    eax,0x2
  406499:	je     0x4064f0
  40649b:	cmp    eax,0x1
  40649e:	je     0x406501
  4064a0:	mov    rcx,rsi
  4064a3:	call   0x404ab0
  4064a8:	mov    eax,DWORD PTR [rip+0x1be8e]        # 0x42233c
  4064ae:	cmp    eax,0x2
  4064b1:	je     0x406510
  4064b3:	cmp    eax,0x1
  4064b6:	je     0x4064e0
  4064b8:	mov    ecx,0xa
  4064bd:	call   0x415fc8
  4064c2:	mov    rcx,rbx
  4064c5:	call   0x404ab0
  4064ca:	mov    ecx,0xa
  4064cf:	add    rsp,0x28
  4064d3:	pop    rbx
  4064d4:	pop    rsi
  4064d5:	pop    rdi
  4064d6:	pop    rbp
  4064d7:	jmp    0x415fc8
  4064dc:	nop    DWORD PTR [rax+0x0]
  4064e0:	lea    rcx,[rip+0x12722]        # 0x418c09
  4064e7:	call   0x401590
  4064ec:	jmp    0x4064c2
  4064ee:	xchg   ax,ax
  4064f0:	lea    rcx,[rip+0x12703]        # 0x418bfa
  4064f7:	mov    rdx,rdi
  4064fa:	call   0x401590
  4064ff:	jmp    0x4064a0
  406501:	mov    ecx,0x9
  406506:	call   0x415fc8
  40650b:	jmp    0x4064a0
  40650d:	nop    DWORD PTR [rax]
  406510:	lea    rcx,[rip+0x126ea]        # 0x418c01
  406517:	mov    rdx,rbp
  40651a:	call   0x401590
  40651f:	jmp    0x4064c2
  406521:	nop    DWORD PTR [rax+rax*1+0x0]
  406526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406530:	sub    rsp,0x28
  406534:	movsx  edx,cl
  406537:	mov    rcx,QWORD PTR [rip+0x10eea]        # 0x417428
  40653e:	call   0x415f90
  406543:	test   rax,rax
  406546:	setne  al
  406549:	movzx  eax,al
  40654c:	add    rsp,0x28
  406550:	ret    
  406551:	nop    DWORD PTR [rax+rax*1+0x0]
  406556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406560:	push   rbx
  406561:	sub    rsp,0x30
  406565:	mov    QWORD PTR [rsp+0x20],0x0
  40656e:	mov    QWORD PTR [rsp+0x28],0x0
  406577:	jmp    0x406584
  406579:	nop    DWORD PTR [rax+0x0]
  406580:	add    rcx,0x1
  406584:	movsx  eax,BYTE PTR [rcx]
  406587:	mov    edx,eax
  406589:	sub    eax,0x30
  40658c:	cmp    eax,0x9
  40658f:	jbe    0x406580
  406591:	xor    eax,eax
  406593:	cmp    dl,0x7c
  406596:	je     0x4065a0
  406598:	add    rsp,0x30
  40659c:	pop    rbx
  40659d:	ret    
  40659e:	xchg   ax,ax
  4065a0:	lea    rbx,[rcx+0x1]
  4065a4:	lea    rdx,[rsp+0x20]
  4065a9:	mov    rcx,rbx
  4065ac:	call   0x40cc30
  4065b1:	lea    rdx,[rsp+0x28]
  4065b6:	mov    r8d,0xa
  4065bc:	mov    rcx,rbx
  4065bf:	call   0x415f28
  4065c4:	mov    rax,QWORD PTR [rsp+0x28]
  4065c9:	cmp    QWORD PTR [rsp+0x20],rax
  4065ce:	sete   al
  4065d1:	movzx  eax,al
  4065d4:	add    rsp,0x30
  4065d8:	pop    rbx
  4065d9:	ret    
  4065da:	nop    WORD PTR [rax+rax*1+0x0]
  4065e0:	push   rdi
  4065e1:	push   rsi
  4065e2:	sub    rsp,0x48
  4065e6:	lea    rdi,[rip+0x126a8]        # 0x418c95
  4065ed:	mov    r9,rcx
  4065f0:	mov    ecx,0x4
  4065f5:	mov    rsi,r9
  4065f8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4065fa:	jne    0x406610
  4065fc:	mov    DWORD PTR [rip+0x1bcf6],0xf        # 0x4222fc
  406606:	xor    eax,eax
  406608:	add    rsp,0x48
  40660c:	pop    rsi
  40660d:	pop    rdi
  40660e:	ret    
  40660f:	nop
  406610:	lea    rdx,[rsp+0x38]
  406615:	mov    r8d,0xa
  40661b:	mov    rcx,r9
  40661e:	mov    rdi,r9
  406621:	call   0x415f28
  406626:	mov    esi,eax
  406628:	mov    rax,QWORD PTR [rsp+0x38]
  40662d:	cmp    BYTE PTR [rax],0x0
  406630:	jne    0x406643
  406632:	test   esi,esi
  406634:	jle    0x4066a2
  406636:	cmp    esi,0xf
  406639:	jg     0x406672
  40663b:	mov    DWORD PTR [rip+0x1bcbb],esi        # 0x4222fc
  406641:	jmp    0x406606
  406643:	mov    rsi,QWORD PTR [rip+0x1b3fe]        # 0x421a48
  40664a:	call   QWORD PTR [rip+0x1ce78]        # 0x4234c8
  406650:	lea    rdx,[rip+0x12649]        # 0x418ca0
  406657:	lea    rcx,[rax+0x60]
  40665b:	mov    r9,rdi
  40665e:	mov    r8,rsi
  406661:	call   0x401540
  406666:	mov    eax,0xffffffff
  40666b:	add    rsp,0x48
  40666f:	pop    rsi
  406670:	pop    rdi
  406671:	ret    
  406672:	mov    rdi,QWORD PTR [rip+0x1b3cf]        # 0x421a48
  406679:	call   QWORD PTR [rip+0x1ce49]        # 0x4234c8
  40667f:	lea    rdx,[rip+0x1269a]        # 0x418d20
  406686:	lea    rcx,[rax+0x60]
  40668a:	mov    DWORD PTR [rsp+0x20],0xf
  406692:	mov    r9d,esi
  406695:	mov    r8,rdi
  406698:	call   0x401540
  40669d:	jmp    0x4065fc
  4066a2:	mov    rsi,QWORD PTR [rip+0x1b39f]        # 0x421a48
  4066a9:	call   QWORD PTR [rip+0x1ce19]        # 0x4234c8
  4066af:	lea    rdx,[rip+0x12632]        # 0x418ce8
  4066b6:	lea    rcx,[rax+0x60]
  4066ba:	mov    r8,rsi
  4066bd:	call   0x401540
  4066c2:	jmp    0x406666
  4066c4:	xchg   ax,ax
  4066c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066d0:	sub    rsp,0x28
  4066d4:	mov    edx,DWORD PTR [rip+0x1bc26]        # 0x422300
  4066da:	lea    rcx,[rip+0x1267f]        # 0x418d60
  4066e1:	call   0x415f90
  4066e6:	test   rax,rax
  4066e9:	mov    eax,DWORD PTR [rip+0x1bc0d]        # 0x4222fc
  4066ef:	je     0x4066fa
  4066f1:	sub    eax,0x1
  4066f4:	mov    DWORD PTR [rip+0x1bc02],eax        # 0x4222fc
  4066fa:	test   eax,eax
  4066fc:	mov    ecx,0x4
  406701:	jle    0x40672f
  406703:	pxor   xmm0,xmm0
  406707:	cvtsi2sd xmm0,eax
  40670b:	call   0x415ff0
  406710:	call   0x40cd10
  406715:	movsd  xmm1,QWORD PTR [rip+0x144cb]        # 0x41abe8
  40671d:	ucomisd xmm0,xmm1
  406721:	jae    0x406764
  406723:	cvttsd2si rcx,xmm0
  406728:	add    rcx,0x5
  40672c:	movsxd rcx,ecx
  40672f:	call   0x415fe8
  406734:	test   rax,rax
  406737:	je     0x40677c
  406739:	mov    r9d,DWORD PTR [rip+0x1bbc0]        # 0x422300
  406740:	mov    r8d,DWORD PTR [rip+0x1bbb5]        # 0x4222fc
  406747:	lea    rdx,[rip+0x12624]        # 0x418d72
  40674e:	mov    rcx,rax
  406751:	mov    QWORD PTR [rip+0x1bb98],rax        # 0x4222f0
  406758:	call   0x4015c0
  40675d:	xor    eax,eax
  40675f:	add    rsp,0x28
  406763:	ret    
  406764:	subsd  xmm0,xmm1
  406768:	movabs rax,0x8000000000000000
  406772:	cvttsd2si rcx,xmm0
  406777:	xor    rcx,rax
  40677a:	jmp    0x406728
  40677c:	lea    rcx,[rip+0x125e0]        # 0x418d63
  406783:	call   0x4162d0
  406788:	nop
  406789:	nop    DWORD PTR [rax+0x0]
  406790:	push   rbp
  406791:	push   rdi
  406792:	push   rsi
  406793:	push   rbx
  406794:	sub    rsp,0x98
  40679b:	cmp    QWORD PTR [rip+0x195cd],0x0        # 0x41fd70
  4067a3:	je     0x406baf
  4067a9:	mov    rsi,QWORD PTR [rip+0x1bb40]        # 0x4222f0
  4067b0:	cmp    BYTE PTR [rsi],0x25
  4067b3:	je     0x4069a0
  4067b9:	mov    rbx,QWORD PTR [rip+0x1b288]        # 0x421a48
  4067c0:	mov    edi,0x1
  4067c5:	call   QWORD PTR [rip+0x1ccfd]        # 0x4234c8
  4067cb:	lea    rdx,[rip+0x125ce]        # 0x418da0
  4067d2:	lea    rcx,[rax+0x60]
  4067d6:	mov    r8,rbx
  4067d9:	call   0x401540
  4067de:	mov    rbp,QWORD PTR [rip+0x1bb0b]        # 0x4222f0
  4067e5:	mov    edx,0x2e
  4067ea:	mov    rcx,rbp
  4067ed:	call   0x415f90
  4067f2:	test   rax,rax
  4067f5:	mov    rbx,rax
  4067f8:	je     0x40682f
  4067fa:	mov    edx,0x2e
  4067ff:	mov    rcx,rbp
  406802:	call   0x415f48
  406807:	cmp    rax,rbx
  40680a:	je     0x40682f
  40680c:	mov    rbx,QWORD PTR [rip+0x1b235]        # 0x421a48
  406813:	add    edi,0x1
  406816:	call   QWORD PTR [rip+0x1ccac]        # 0x4234c8
  40681c:	lea    rdx,[rip+0x125f5]        # 0x418e18
  406823:	lea    rcx,[rax+0x60]
  406827:	mov    r8,rbx
  40682a:	call   0x401540
  40682f:	movzx  ebx,BYTE PTR [rsi]
  406832:	mov    rbp,QWORD PTR [rip+0x1cc8f]        # 0x4234c8
  406839:	test   bl,bl
  40683b:	jne    0x40684b
  40683d:	jmp    0x406891
  40683f:	nop
  406840:	add    rsi,0x1
  406844:	movzx  ebx,BYTE PTR [rsi]
  406847:	test   bl,bl
  406849:	je     0x406891
  40684b:	lea    rcx,[rip+0x12631]        # 0x418e83
  406852:	movsx  edx,bl
  406855:	call   0x415f90
  40685a:	test   rax,rax
  40685d:	je     0x406891
  40685f:	cmp    bl,BYTE PTR [rip+0x19507]        # 0x41fd6c
  406865:	jne    0x406840
  406867:	mov    rbx,QWORD PTR [rip+0x1b1da]        # 0x421a48
  40686e:	add    rsi,0x1
  406872:	add    edi,0x1
  406875:	call   rbp
  406877:	lea    rdx,[rip+0x125da]        # 0x418e58
  40687e:	lea    rcx,[rax+0x60]
  406882:	mov    r8,rbx
  406885:	call   0x401540
  40688a:	movzx  ebx,BYTE PTR [rsi]
  40688d:	test   bl,bl
  40688f:	jne    0x40684b
  406891:	mov    rbp,QWORD PTR [rip+0x1ba58]        # 0x4222f0
  406898:	lea    rdx,[rip+0x125eb]        # 0x418e8a
  40689f:	mov    rcx,rbp
  4068a2:	call   0x415f38
  4068a7:	test   rax,rax
  4068aa:	mov    rbx,rax
  4068ad:	je     0x4069f0
  4068b3:	mov    rbp,QWORD PTR [rip+0x1b18e]        # 0x421a48
  4068ba:	add    edi,0x1
  4068bd:	call   QWORD PTR [rip+0x1cc05]        # 0x4234c8
  4068c3:	lea    rdx,[rip+0x125c6]        # 0x418e90
  4068ca:	lea    rcx,[rax+0x60]
  4068ce:	mov    r9,rbx
  4068d1:	mov    r8,rbp
  4068d4:	call   0x401540
  4068d9:	lea    rdx,[rip+0x12618]        # 0x418ef8
  4068e0:	mov    rcx,rsi
  4068e3:	call   0x415f40
  4068e8:	mov    rcx,rsi
  4068eb:	movsxd rbx,eax
  4068ee:	call   0x415f68
  4068f3:	cmp    rbx,rax
  4068f6:	jb     0x406a51
  4068fc:	test   edi,edi
  4068fe:	jne    0x406d1d
  406904:	lea    rdi,[rsp+0x38]
  406909:	mov    r8d,0xa
  40690f:	mov    rcx,rsi
  406912:	mov    rdx,rdi
  406915:	call   0x415f28
  40691a:	mov    rbx,QWORD PTR [rsp+0x38]
  40691f:	mov    DWORD PTR [rip+0x1b9d3],eax        # 0x4222f8
  406925:	cmp    BYTE PTR [rbx],0x2e
  406928:	je     0x406b20
  40692e:	mov    DWORD PTR [rip+0x1b9c4],0x6        # 0x4222fc
  406938:	movzx  esi,BYTE PTR [rbx]
  40693b:	test   sil,sil
  40693e:	je     0x406a80
  406944:	mov    rbp,QWORD PTR [rip+0x19425]        # 0x41fd70
  40694b:	movsx  edi,sil
  40694f:	mov    edx,edi
  406951:	mov    rcx,rbp
  406954:	call   0x415f90
  406959:	test   rax,rax
  40695c:	je     0x406ced
  406962:	cmp    BYTE PTR [rbx+0x1],0x0
  406966:	jne    0x406b44
  40696c:	mov    edx,DWORD PTR [rip+0x1b98a]        # 0x4222fc
  406972:	mov    DWORD PTR [rip+0x1b988],edi        # 0x422300
  406978:	test   edx,edx
  40697a:	jne    0x406989
  40697c:	and    esi,0xffffffdf
  40697f:	cmp    sil,0x47
  406983:	je     0x406b70
  406989:	xor    eax,eax
  40698b:	add    rsp,0x98
  406992:	pop    rbx
  406993:	pop    rsi
  406994:	pop    rdi
  406995:	pop    rbp
  406996:	ret    
  406997:	nop    WORD PTR [rax+rax*1+0x0]
  4069a0:	mov    edx,0x25
  4069a5:	mov    rcx,rsi
  4069a8:	call   0x415f48
  4069ad:	cmp    rsi,rax
  4069b0:	je     0x406ba1
  4069b6:	mov    rbx,QWORD PTR [rip+0x1b08b]        # 0x421a48
  4069bd:	add    rsi,0x1
  4069c1:	mov    edi,0x1
  4069c6:	call   QWORD PTR [rip+0x1cafc]        # 0x4234c8
  4069cc:	lea    rdx,[rip+0x12405]        # 0x418dd8
  4069d3:	lea    rcx,[rax+0x60]
  4069d7:	mov    r8,rbx
  4069da:	call   0x401540
  4069df:	mov    rbp,QWORD PTR [rip+0x1b90a]        # 0x4222f0
  4069e6:	jmp    0x4067e5
  4069eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4069f0:	lea    rdx,[rip+0x12496]        # 0x418e8d
  4069f7:	mov    rcx,rbp
  4069fa:	call   0x415f38
  4069ff:	test   rax,rax
  406a02:	mov    rbx,rax
  406a05:	jne    0x4068b3
  406a0b:	lea    rdx,[rip+0x124ad]        # 0x418ebf
  406a12:	mov    rcx,rbp
  406a15:	call   0x415f50
  406a1a:	test   rax,rax
  406a1d:	je     0x4068d9
  406a23:	movsx  ebp,BYTE PTR [rax]
  406a26:	mov    rbx,QWORD PTR [rip+0x1b01b]        # 0x421a48
  406a2d:	add    edi,0x1
  406a30:	call   QWORD PTR [rip+0x1ca92]        # 0x4234c8
  406a36:	lea    rdx,[rip+0x1248b]        # 0x418ec8
  406a3d:	lea    rcx,[rax+0x60]
  406a41:	mov    r8,rbx
  406a44:	mov    r9d,ebp
  406a47:	call   0x401540
  406a4c:	jmp    0x4068d9
  406a51:	movsx  ebp,BYTE PTR [rsi+rbx*1]
  406a55:	mov    rbx,QWORD PTR [rip+0x1afec]        # 0x421a48
  406a5c:	add    edi,0x1
  406a5f:	call   QWORD PTR [rip+0x1ca63]        # 0x4234c8
  406a65:	lea    rdx,[rip+0x124d4]        # 0x418f40
  406a6c:	lea    rcx,[rax+0x60]
  406a70:	mov    r8,rbx
  406a73:	mov    r9d,ebp
  406a76:	call   0x401540
  406a7b:	jmp    0x4068fc
  406a80:	mov    rbx,QWORD PTR [rip+0x1afc1]        # 0x421a48
  406a87:	mov    rsi,QWORD PTR [rip+0x1ca3a]        # 0x4234c8
  406a8e:	call   rsi
  406a90:	lea    rdx,[rip+0x12556]        # 0x418fed
  406a97:	lea    rcx,[rax+0x60]
  406a9b:	mov    r8,rbx
  406a9e:	call   0x401540
  406aa3:	mov    eax,DWORD PTR [rip+0x1b853]        # 0x4222fc
  406aa9:	test   eax,eax
  406aab:	jne    0x406ac5
  406aad:	mov    eax,DWORD PTR [rip+0x1b84d]        # 0x422300
  406ab3:	and    eax,0xffffffdf
  406ab6:	cmp    eax,0x47
  406ab9:	jne    0x406ac5
  406abb:	mov    DWORD PTR [rip+0x1b837],0x1        # 0x4222fc
  406ac5:	mov    rdi,QWORD PTR [rip+0x1b824]        # 0x4222f0
  406acc:	mov    rbx,QWORD PTR [rip+0x1af75]        # 0x421a48
  406ad3:	call   rsi
  406ad5:	lea    rdx,[rip+0x124a4]        # 0x418f80
  406adc:	lea    rcx,[rax+0x60]
  406ae0:	mov    r9,rdi
  406ae3:	mov    r8,rbx
  406ae6:	call   0x401540
  406aeb:	mov    rbx,QWORD PTR [rip+0x1af56]        # 0x421a48
  406af2:	call   rsi
  406af4:	lea    rdx,[rip+0x124b5]        # 0x418fb0
  406afb:	lea    rcx,[rax+0x60]
  406aff:	mov    r8,rbx
  406b02:	call   0x401540
  406b07:	mov    eax,0xffffffff
  406b0c:	add    rsp,0x98
  406b13:	pop    rbx
  406b14:	pop    rsi
  406b15:	pop    rdi
  406b16:	pop    rbp
  406b17:	ret    
  406b18:	nop    DWORD PTR [rax+rax*1+0x0]
  406b20:	movsx  eax,BYTE PTR [rbx+0x1]
  406b24:	sub    eax,0x30
  406b27:	cmp    eax,0x9
  406b2a:	jbe    0x406b7f
  406b2c:	add    rbx,0x1
  406b30:	mov    DWORD PTR [rip+0x1b7c2],0x0        # 0x4222fc
  406b3a:	mov    QWORD PTR [rsp+0x38],rbx
  406b3f:	jmp    0x406938
  406b44:	mov    rdi,QWORD PTR [rip+0x1aefd]        # 0x421a48
  406b4b:	mov    rsi,QWORD PTR [rip+0x1c976]        # 0x4234c8
  406b52:	call   rsi
  406b54:	lea    r9,[rbx+0x1]
  406b58:	lea    rcx,[rax+0x60]
  406b5c:	lea    rdx,[rip+0x124a5]        # 0x419008
  406b63:	mov    r8,rdi
  406b66:	call   0x401540
  406b6b:	jmp    0x406aa3
  406b70:	mov    DWORD PTR [rip+0x1b782],0x1        # 0x4222fc
  406b7a:	jmp    0x406989
  406b7f:	lea    rcx,[rbx+0x1]
  406b83:	mov    r8d,0xa
  406b89:	mov    rdx,rdi
  406b8c:	call   0x415f28
  406b91:	mov    rbx,QWORD PTR [rsp+0x38]
  406b96:	mov    DWORD PTR [rip+0x1b760],eax        # 0x4222fc
  406b9c:	jmp    0x406938
  406ba1:	mov    rbp,rsi
  406ba4:	xor    edi,edi
  406ba6:	add    rsi,0x1
  406baa:	jmp    0x4067e5
  406baf:	mov    ecx,0x9
  406bb4:	call   0x415fe8
  406bb9:	test   rax,rax
  406bbc:	je     0x406ddf
  406bc2:	movsd  xmm0,QWORD PTR [rip+0x14026]        # 0x41abf0
  406bca:	lea    rbx,[rsp+0x40]
  406bcf:	mov    r9d,0x66
  406bd5:	lea    rdx,[rip+0x121af]        # 0x418d8b
  406bdc:	mov    DWORD PTR [rax],0x45654767
  406be2:	mov    WORD PTR [rax+0x4],r9w
  406be7:	movapd xmm2,xmm0
  406beb:	movq   r8,xmm0
  406bf0:	mov    rcx,rbx
  406bf3:	mov    QWORD PTR [rip+0x19176],rax        # 0x41fd70
  406bfa:	call   0x4015c0
  406bff:	mov    rdx,rbx
  406c02:	mov    ecx,DWORD PTR [rdx]
  406c04:	add    rdx,0x4
  406c08:	lea    eax,[rcx-0x1010101]
  406c0e:	not    ecx
  406c10:	and    eax,ecx
  406c12:	and    eax,0x80808080
  406c17:	je     0x406c02
  406c19:	mov    ecx,eax
  406c1b:	shr    ecx,0x10
  406c1e:	test   eax,0x8080
  406c23:	cmove  eax,ecx
  406c26:	lea    rcx,[rdx+0x2]
  406c2a:	cmove  rdx,rcx
  406c2e:	add    al,al
  406c30:	sbb    rdx,0x3
  406c34:	sub    rdx,rbx
  406c37:	cmp    rdx,0x3
  406c3b:	je     0x406d93
  406c41:	movsd  xmm0,QWORD PTR [rip+0x13faf]        # 0x41abf8
  406c49:	lea    rdx,[rip+0x12140]        # 0x418d90
  406c50:	mov    rcx,rbx
  406c53:	lea    rdi,[rip+0x12139]        # 0x418d93
  406c5a:	mov    rsi,rbx
  406c5d:	movapd xmm2,xmm0
  406c61:	movq   r8,xmm0
  406c66:	call   0x4015c0
  406c6b:	mov    ecx,0x7
  406c70:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406c72:	je     0x406d70
  406c78:	movsd  xmm0,QWORD PTR [rip+0x13f80]        # 0x41ac00
  406c80:	lea    rdx,[rip+0x12113]        # 0x418d9a
  406c87:	mov    rcx,rbx
  406c8a:	movapd xmm2,xmm0
  406c8e:	movq   r8,xmm0
  406c93:	call   0x4015c0
  406c98:	mov    rdx,rbx
  406c9b:	mov    ecx,DWORD PTR [rdx]
  406c9d:	add    rdx,0x4
  406ca1:	lea    eax,[rcx-0x1010101]
  406ca7:	not    ecx
  406ca9:	and    eax,ecx
  406cab:	and    eax,0x80808080
  406cb0:	je     0x406c9b
  406cb2:	mov    ecx,eax
  406cb4:	shr    ecx,0x10
  406cb7:	test   eax,0x8080
  406cbc:	cmove  eax,ecx
  406cbf:	lea    rcx,[rdx+0x2]
  406cc3:	cmove  rdx,rcx
  406cc7:	add    al,al
  406cc9:	sbb    rdx,0x3
  406ccd:	sub    rdx,rbx
  406cd0:	cmp    rdx,0x2
  406cd4:	jbe    0x406ce1
  406cd6:	cmp    BYTE PTR [rsp+0x40],0x31
  406cdb:	je     0x406dc8
  406ce1:	mov    BYTE PTR [rip+0x19084],0x27        # 0x41fd6c
  406ce8:	jmp    0x4067a9
  406ced:	mov    rbx,QWORD PTR [rip+0x1ad54]        # 0x421a48
  406cf4:	mov    rsi,QWORD PTR [rip+0x1c7cd]        # 0x4234c8
  406cfb:	call   rsi
  406cfd:	lea    rdx,[rip+0x1233c]        # 0x419040
  406d04:	lea    rcx,[rax+0x60]
  406d08:	mov    QWORD PTR [rsp+0x20],rbp
  406d0d:	mov    r9d,edi
  406d10:	mov    r8,rbx
  406d13:	call   0x401540
  406d18:	jmp    0x406aa3
  406d1d:	mov    rsi,QWORD PTR [rip+0x1ad24]        # 0x421a48
  406d24:	mov    rdi,QWORD PTR [rip+0x1b5c5]        # 0x4222f0
  406d2b:	mov    rbx,QWORD PTR [rip+0x1c796]        # 0x4234c8
  406d32:	call   rbx
  406d34:	lea    rdx,[rip+0x12245]        # 0x418f80
  406d3b:	lea    rcx,[rax+0x60]
  406d3f:	mov    r8,rsi
  406d42:	mov    r9,rdi
  406d45:	call   0x401540
  406d4a:	mov    rsi,QWORD PTR [rip+0x1acf7]        # 0x421a48
  406d51:	call   rbx
  406d53:	lea    rdx,[rip+0x12256]        # 0x418fb0
  406d5a:	lea    rcx,[rax+0x60]
  406d5e:	mov    r8,rsi
  406d61:	call   0x401540
  406d66:	mov    eax,0xffffffff
  406d6b:	jmp    0x40698b
  406d70:	mov    rsi,QWORD PTR [rip+0x18ff9]        # 0x41fd70
  406d77:	mov    rcx,rsi
  406d7a:	call   0x415f68
  406d7f:	mov    ecx,0x4161
  406d84:	add    rax,rsi
  406d87:	mov    WORD PTR [rax],cx
  406d8a:	mov    BYTE PTR [rax+0x2],0x0
  406d8e:	jmp    0x406c78
  406d93:	cmp    BYTE PTR [rsp+0x40],0x31
  406d98:	jne    0x406c41
  406d9e:	cmp    BYTE PTR [rsp+0x42],0x32
  406da3:	jne    0x406c41
  406da9:	mov    rsi,QWORD PTR [rip+0x18fc0]        # 0x41fd70
  406db0:	mov    rcx,rsi
  406db3:	call   0x415f68
  406db8:	mov    r8d,0x46
  406dbe:	mov    WORD PTR [rsi+rax*1],r8w
  406dc3:	jmp    0x406c41
  406dc8:	cmp    BYTE PTR [rsp+0x42],0x32
  406dcd:	jne    0x406ce1
  406dd3:	mov    BYTE PTR [rip+0x18f92],0x0        # 0x41fd6c
  406dda:	jmp    0x4067a9
  406ddf:	lea    rcx,[rip+0x11f94]        # 0x418d7a
  406de6:	call   0x4162d0
  406deb:	nop
  406dec:	nop    DWORD PTR [rax+0x0]
  406df0:	push   rdi
  406df1:	push   rsi
  406df2:	push   rbx
  406df3:	sub    rsp,0x40
  406df7:	movaps XMMWORD PTR [rsp+0x30],xmm6
  406dfc:	movsd  QWORD PTR [rsp+0x28],xmm0
  406e02:	mov    eax,DWORD PTR [rsp+0x2c]
  406e06:	mov    ecx,eax
  406e08:	and    ecx,0x7fffffff
  406e0e:	or     ecx,DWORD PTR [rsp+0x28]
  406e12:	sete   r8b
  406e16:	and    eax,0x7ff00000
  406e1b:	sete   cl
  406e1e:	or     ecx,r8d
  406e21:	cmp    eax,0x7ff00000
  406e26:	sete   al
  406e29:	cmp    cl,al
  406e2b:	jb     0x406f80
  406e31:	mov    edi,DWORD PTR [rip+0x1b4c5]        # 0x4222fc
  406e37:	mov    eax,DWORD PTR [rip+0x1b4bb]        # 0x4222f8
  406e3d:	mov    rsi,rdx
  406e40:	mov    edx,DWORD PTR [rip+0x1b4ba]        # 0x422300
  406e46:	lea    rcx,[rip+0x1224c]        # 0x419099
  406e4d:	movapd xmm6,xmm0
  406e51:	lea    ebx,[rdi+0x9]
  406e54:	cmp    ebx,eax
  406e56:	cmovl  ebx,eax
  406e59:	call   0x415f90
  406e5e:	test   rax,rax
  406e61:	je     0x406e93
  406e63:	movsd  xmm0,QWORD PTR [rip+0x13d65]        # 0x41abd0
  406e6b:	add    edi,0x2
  406e6e:	andpd  xmm0,xmm6
  406e72:	ucomisd xmm0,QWORD PTR [rip+0x13d46]        # 0x41abc0
  406e7a:	jbe    0x406e8e
  406e7c:	call   0x415ff0
  406e81:	call   0x40cd10
  406e86:	cvttsd2si eax,xmm0
  406e8a:	lea    edi,[rdi+rax*1+0x1]
  406e8e:	cmp    ebx,edi
  406e90:	cmovl  ebx,edi
  406e93:	mov    rdi,QWORD PTR [rip+0x1b456]        # 0x4222f0
  406e9a:	mov    edx,0x27
  406e9f:	mov    rcx,rdi
  406ea2:	call   0x415f90
  406ea7:	test   rax,rax
  406eaa:	je     0x406ecf
  406eac:	mov    edx,DWORD PTR [rip+0x1b44e]        # 0x422300
  406eb2:	lea    rcx,[rip+0x121bb]        # 0x419074
  406eb9:	call   0x415f90
  406ebe:	test   rax,rax
  406ec1:	je     0x406ecf
  406ec3:	lea    eax,[rbx+rbx*2]
  406ec6:	mov    ebx,eax
  406ec8:	shr    ebx,0x1f
  406ecb:	add    ebx,eax
  406ecd:	sar    ebx,1
  406ecf:	movsxd rcx,ebx
  406ed2:	call   0x415fe8
  406ed7:	test   rax,rax
  406eda:	mov    rbx,rax
  406edd:	je     0x406f95
  406ee3:	movapd xmm2,xmm6
  406ee7:	movq   r8,xmm6
  406eec:	mov    rdx,rdi
  406eef:	mov    rcx,rax
  406ef2:	call   0x4015c0
  406ef7:	test   rsi,rsi
  406efa:	je     0x406f57
  406efc:	lea    rdx,[rip+0x1218b]        # 0x41908e
  406f03:	mov    rcx,rbx
  406f06:	call   0x415f40
  406f0b:	mov    rdx,rbx
  406f0e:	mov    ecx,DWORD PTR [rdx]
  406f10:	add    rdx,0x4
  406f14:	lea    r8d,[rcx-0x1010101]
  406f1b:	not    ecx
  406f1d:	and    r8d,ecx
  406f20:	and    r8d,0x80808080
  406f27:	je     0x406f0e
  406f29:	mov    ecx,r8d
  406f2c:	shr    ecx,0x10
  406f2f:	test   r8d,0x8080
  406f36:	cmove  r8d,ecx
  406f3a:	lea    rcx,[rdx+0x2]
  406f3e:	cmove  rdx,rcx
  406f42:	add    r8b,r8b
  406f45:	sbb    rdx,0x3
  406f49:	sub    rdx,rbx
  406f4c:	cmp    rax,rdx
  406f4f:	setne  al
  406f52:	movzx  eax,al
  406f55:	mov    DWORD PTR [rsi],eax
  406f57:	mov    rcx,rbx
  406f5a:	xor    edx,edx
  406f5c:	call   0x40cc30
  406f61:	mov    rcx,rbx
  406f64:	movapd xmm6,xmm0
  406f68:	call   0x416010
  406f6d:	movapd xmm0,xmm6
  406f71:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  406f76:	add    rsp,0x40
  406f7a:	pop    rbx
  406f7b:	pop    rsi
  406f7c:	pop    rdi
  406f7d:	ret    
  406f7e:	xchg   ax,ax
  406f80:	test   rdx,rdx
  406f83:	movapd xmm6,xmm0
  406f87:	je     0x406f6d
  406f89:	mov    DWORD PTR [rdx],0x1
  406f8f:	movapd xmm6,xmm0
  406f93:	jmp    0x406f6d
  406f95:	lea    rcx,[rip+0x120dd]        # 0x419079
  406f9c:	call   0x4162d0
  406fa1:	nop
  406fa2:	nop    DWORD PTR [rax+0x0]
  406fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fb0:	push   rdi
  406fb1:	push   rsi
  406fb2:	push   rbx
  406fb3:	sub    rsp,0x60
  406fb7:	movaps XMMWORD PTR [rsp+0x30],xmm6
  406fbc:	movaps XMMWORD PTR [rsp+0x40],xmm7
  406fc1:	movaps XMMWORD PTR [rsp+0x50],xmm8
  406fc7:	mov    rbx,rdx
  406fca:	lea    rdx,[rsp+0x2c]
  406fcf:	mov    esi,r8d
  406fd2:	movapd xmm6,xmm0
  406fd6:	call   0x406df0
  406fdb:	test   esi,esi
  406fdd:	movapd xmm7,xmm0
  406fe1:	je     0x407070
  406fe7:	movsd  xmm8,QWORD PTR [rip+0x13bd0]        # 0x41abc0
  406ff0:	ucomisd xmm0,xmm8
  406ff5:	jp     0x4070e0
  406ffb:	jne    0x4070e0
  407001:	movsx  edx,BYTE PTR [rbx]
  407004:	mov    rcx,QWORD PTR [rip+0x1041d]        # 0x417428
  40700b:	call   0x415f90
  407010:	test   rax,rax
  407013:	je     0x4070e0
  407019:	lea    rdx,[rip+0x1208b]        # 0x4190ab
  407020:	mov    rcx,rbx
  407023:	call   0x415f50
  407028:	test   rax,rax
  40702b:	jne    0x40708d
  40702d:	mov    edx,DWORD PTR [rip+0x1b2fd]        # 0x422330
  407033:	test   edx,edx
  407035:	je     0x407100
  40703b:	ucomisd xmm7,xmm8
  407040:	movsx  edx,BYTE PTR [rbx]
  407043:	mov    rcx,QWORD PTR [rip+0x103de]        # 0x417428
  40704a:	jp     0x40704e
  40704c:	je     0x4070b5
  40704e:	call   0x415f90
  407053:	test   rax,rax
  407056:	je     0x407163
  40705c:	lea    rcx,[rip+0x12042]        # 0x4190a5
  407063:	mov    rdx,rbx
  407066:	call   0x401590
  40706b:	jmp    0x40709d
  40706d:	nop    DWORD PTR [rax]
  407070:	lea    rdx,[rip+0x12034]        # 0x4190ab
  407077:	mov    rcx,rbx
  40707a:	call   0x415f50
  40707f:	test   rax,rax
  407082:	movsd  xmm8,QWORD PTR [rip+0x13b35]        # 0x41abc0
  40708b:	je     0x40703b
  40708d:	lea    rcx,[rip+0x12008]        # 0x41909c
  407094:	mov    rdx,rbx
  407097:	call   0x401590
  40709c:	nop
  40709d:	movaps xmm6,XMMWORD PTR [rsp+0x30]
  4070a2:	movaps xmm7,XMMWORD PTR [rsp+0x40]
  4070a7:	movaps xmm8,XMMWORD PTR [rsp+0x50]
  4070ad:	add    rsp,0x60
  4070b1:	pop    rbx
  4070b2:	pop    rsi
  4070b3:	pop    rdi
  4070b4:	ret    
  4070b5:	call   0x415f90
  4070ba:	test   rax,rax
  4070bd:	je     0x407163
  4070c3:	call   QWORD PTR [rip+0x1c3ff]        # 0x4234c8
  4070c9:	lea    rdx,[rax+0x30]
  4070cd:	mov    rcx,rbx
  4070d0:	call   0x416018
  4070d5:	jmp    0x40709d
  4070d7:	nop    WORD PTR [rax+rax*1+0x0]
  4070e0:	mov    rcx,QWORD PTR [rip+0x1b209]        # 0x4222f0
  4070e7:	movapd xmm1,xmm6
  4070eb:	movq   rdx,xmm6
  4070f0:	call   0x401590
  4070f5:	jmp    0x407019
  4070fa:	nop    WORD PTR [rax+rax*1+0x0]
  407100:	lea    rsi,[rip+0x11f9b]        # 0x4190a2
  407107:	mov    ecx,0x2
  40710c:	mov    rdi,rbx
  40710f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407111:	jne    0x40703b
  407117:	mov    rcx,rbx
  40711a:	call   0x406560
  40711f:	test   eax,eax
  407121:	je     0x40703b
  407127:	ucomisd xmm7,xmm8
  40712c:	mov    edx,0x1
  407131:	setp   al
  407134:	cmovne eax,edx
  407137:	test   al,al
  407139:	je     0x40703b
  40713f:	mov    eax,DWORD PTR [rsp+0x2c]
  407143:	test   eax,eax
  407145:	jne    0x40703b
  40714b:	call   QWORD PTR [rip+0x1c377]        # 0x4234c8
  407151:	lea    rcx,[rbx+0x1]
  407155:	lea    rdx,[rax+0x30]
  407159:	call   0x416018
  40715e:	jmp    0x40709d
  407163:	lea    rcx,[rip+0x119e7]        # 0x418b51
  40716a:	mov    rdx,rbx
  40716d:	call   0x401590
  407172:	jmp    0x40709d
  407177:	nop    WORD PTR [rax+rax*1+0x0]
  407180:	push   r13
  407182:	push   r12
  407184:	push   rbp
  407185:	push   rdi
  407186:	push   rsi
  407187:	push   rbx
  407188:	sub    rsp,0x678
  40718f:	mov    rdi,r8
  407192:	mov    rbx,rdx
  407195:	mov    rsi,r9
  407198:	call   0x402140
  40719d:	mov    rcx,rdi
  4071a0:	mov    rbp,rax
  4071a3:	call   0x402140
  4071a8:	lea    r8,[rip+0xffffffffffffa981]        # 0x401b30
  4071af:	mov    rdx,rsi
  4071b2:	mov    rcx,rbx
  4071b5:	mov    r12,rax
  4071b8:	call   0x405490
  4071bd:	test   eax,eax
  4071bf:	je     0x4072d1
  4071c5:	movsd  xmm0,QWORD PTR [rip+0x139f3]        # 0x41abc0
  4071cd:	mov    r10,QWORD PTR [rbx]
  4071d0:	lea    rdi,[rsp+0x20]
  4071d5:	mov    rdx,rbx
  4071d8:	divsd  xmm0,QWORD PTR [rbx+0x640]
  4071e0:	lea    rax,[rdi+0x320]
  4071e7:	test   r10,r10
  4071ea:	movsd  QWORD PTR [rsp+0x660],xmm0
  4071f3:	je     0x407208
  4071f5:	add    rdx,0x8
  4071f9:	mov    QWORD PTR [rax],r10
  4071fc:	add    rax,0x8
  407200:	mov    r10,QWORD PTR [rdx]
  407203:	test   r10,r10
  407206:	jne    0x4071f5
  407208:	mov    r10,QWORD PTR [rbx+0x320]
  40720f:	mov    QWORD PTR [rax],0x0
  407216:	mov    r11,rdi
  407219:	lea    rax,[rbx+0x320]
  407220:	test   r10,r10
  407223:	je     0x407238
  407225:	add    rax,0x8
  407229:	mov    QWORD PTR [r11],r10
  40722c:	add    r11,0x8
  407230:	mov    r10,QWORD PTR [rax]
  407233:	test   r10,r10
  407236:	jne    0x407225
  407238:	mov    ecx,DWORD PTR [rip+0x1b0f6]        # 0x422334
  40723e:	mov    QWORD PTR [r11],0x0
  407245:	test   ecx,ecx
  407247:	jne    0x40743e
  40724d:	lea    r8,[rip+0xffffffffffffa8dc]        # 0x401b30
  407254:	mov    rdx,rsi
  407257:	mov    rcx,rdi
  40725a:	call   0x405490
  40725f:	test   eax,eax
  407261:	jne    0x40743e
  407267:	mov    edx,DWORD PTR [rip+0x1b0cf]        # 0x42233c
  40726d:	test   edx,edx
  40726f:	jle    0x40727b
  407271:	mov    ecx,0x9
  407276:	call   0x415fc8
  40727b:	lea    rcx,[rip+0x11e39]        # 0x4190bb
  407282:	mov    rbx,rdi
  407285:	call   0x401590
  40728a:	mov    eax,DWORD PTR [rip+0x1b0ac]        # 0x42233c
  407290:	cmp    eax,0x2
  407293:	jne    0x4072e0
  407295:	mov    edx,0x2f
  40729a:	mov    rcx,rbp
  40729d:	mov    rbx,rdi
  4072a0:	call   0x415f90
  4072a5:	lea    rdi,[rip+0x11e07]        # 0x4190b3
  4072ac:	test   rax,rax
  4072af:	lea    rdx,[rip+0x11df8]        # 0x4190ae
  4072b6:	lea    r13,[rip+0x10db8]        # 0x418075
  4072bd:	lea    rax,[rip+0x11df5]        # 0x4190b9
  4072c4:	cmove  rdi,rdx
  4072c8:	cmovne r13,rax
  4072cc:	jmp    0x40739a
  4072d1:	mov    eax,DWORD PTR [rip+0x1b065]        # 0x42233c
  4072d7:	cmp    eax,0x2
  4072da:	je     0x407390
  4072e0:	cmp    eax,0x1
  4072e3:	je     0x407411
  4072e9:	xor    edi,edi
  4072eb:	xor    r13d,r13d
  4072ee:	movsd  xmm0,QWORD PTR [rbx+0x640]
  4072f6:	mov    rcx,QWORD PTR [rip+0x1aff3]        # 0x4222f0
  4072fd:	divsd  xmm0,QWORD PTR [rsi+0x640]
  407305:	movapd xmm1,xmm0
  407309:	movq   rdx,xmm0
  40730e:	call   0x401590
  407313:	mov    eax,DWORD PTR [rip+0x1b00b]        # 0x422324
  407319:	test   eax,eax
  40731b:	jne    0x40736d
  40731d:	mov    eax,DWORD PTR [rip+0x1b019]        # 0x42233c
  407323:	cmp    eax,0x2
  407326:	je     0x407424
  40732c:	cmp    eax,0x1
  40732f:	je     0x407400
  407335:	mov    ecx,0xa
  40733a:	call   0x415fc8
  40733f:	movsd  xmm0,QWORD PTR [rsi+0x640]
  407347:	mov    rcx,QWORD PTR [rip+0x1afa2]        # 0x4222f0
  40734e:	divsd  xmm0,QWORD PTR [rbx+0x640]
  407356:	movapd xmm1,xmm0
  40735a:	movq   rdx,xmm0
  40735f:	call   0x401590
  407364:	cmp    DWORD PTR [rip+0x1afd1],0x2        # 0x42233c
  40736b:	je     0x4073e0
  40736d:	mov    ecx,0xa
  407372:	call   0x415fc8
  407377:	xor    eax,eax
  407379:	add    rsp,0x678
  407380:	pop    rbx
  407381:	pop    rsi
  407382:	pop    rdi
  407383:	pop    rbp
  407384:	pop    r12
  407386:	pop    r13
  407388:	ret    
  407389:	nop    DWORD PTR [rax+0x0]
  407390:	lea    rdi,[rip+0x10cde]        # 0x418075
  407397:	mov    r13,rdi
  40739a:	lea    rcx,[rip+0x11d4b]        # 0x4190ec
  4073a1:	mov    r9,r13
  4073a4:	mov    r8,rbp
  4073a7:	mov    rdx,rdi
  4073aa:	call   0x401590
  4073af:	cmp    DWORD PTR [rip+0x1af86],0x2        # 0x42233c
  4073b6:	jne    0x4072ee
  4073bc:	movsd  xmm0,QWORD PTR [rbx+0x640]
  4073c4:	mov    r8d,0x1
  4073ca:	mov    rdx,r12
  4073cd:	divsd  xmm0,QWORD PTR [rsi+0x640]
  4073d5:	call   0x406fb0
  4073da:	jmp    0x407313
  4073df:	nop
  4073e0:	mov    ecx,0x29
  4073e5:	call   0x415fc8
  4073ea:	pxor   xmm0,xmm0
  4073ee:	xor    r8d,r8d
  4073f1:	mov    rdx,r12
  4073f4:	call   0x406fb0
  4073f9:	jmp    0x40736d
  4073fe:	xchg   ax,ax
  407400:	lea    rcx,[rip+0x11ce0]        # 0x4190e7
  407407:	call   0x401590
  40740c:	jmp    0x40733f
  407411:	lea    rcx,[rip+0x11cba]        # 0x4190d2
  407418:	xor    edi,edi
  40741a:	xor    r13d,r13d
  40741d:	call   0x401590
  407422:	jmp    0x4073af
  407424:	lea    rcx,[rip+0x11cab]        # 0x4190d6
  40742b:	mov    r9,r13
  40742e:	mov    r8,rbp
  407431:	mov    rdx,rdi
  407434:	call   0x401590
  407439:	jmp    0x40733f
  40743e:	mov    r9,rsi
  407441:	mov    r8,r12
  407444:	mov    rdx,rbx
  407447:	mov    rcx,rbp
  40744a:	call   0x406470
  40744f:	mov    eax,0xffffffff
  407454:	jmp    0x407379
  407459:	nop    DWORD PTR [rax+0x0]
  407460:	push   rdi
  407461:	push   rsi
  407462:	push   rbx
  407463:	sub    rsp,0xcd0
  40746a:	movaps XMMWORD PTR [rsp+0xcc0],xmm6
  407472:	test   edx,edx
  407474:	mov    rbx,rcx
  407477:	jne    0x407621
  40747d:	mov    r9,QWORD PTR [rbx+0x58]
  407481:	test   r9,r9
  407484:	je     0x407530
  40748a:	mov    edx,DWORD PTR [rbx+0x60]
  40748d:	cmp    edx,0x1
  407490:	jle    0x407650
  407496:	movsd  xmm0,QWORD PTR [r9+0x18]
  40749c:	pxor   xmm2,xmm2
  4074a0:	subsd  xmm0,QWORD PTR [r9+0x8]
  4074a6:	movsd  xmm3,QWORD PTR [rip+0x13712]        # 0x41abc0
  4074ae:	ucomisd xmm0,xmm2
  4074b2:	jbe    0x407635
  4074b8:	cmp    edx,0x2
  4074bb:	je     0x4075f0
  4074c1:	lea    r8d,[rdx-0x3]
  4074c5:	lea    rax,[r9+0x20]
  4074c9:	movapd xmm6,xmm2
  4074cd:	movsd  xmm4,QWORD PTR [rip+0x136eb]        # 0x41abc0
  4074d5:	add    r8,0x3
  4074d9:	movsd  xmm5,QWORD PTR [rip+0x13727]        # 0x41ac08
  4074e1:	shl    r8,0x4
  4074e5:	add    r8,r9
  4074e8:	jmp    0x40750d
  4074ea:	nop    WORD PTR [rax+rax*1+0x0]
  4074f0:	ucomisd xmm3,xmm1
  4074f4:	jp     0x407603
  4074fa:	jne    0x407603
  407500:	add    rax,0x10
  407504:	cmp    rax,r8
  407507:	je     0x4075f0
  40750d:	movsd  xmm0,QWORD PTR [rax+0x8]
  407512:	movapd xmm1,xmm4
  407516:	subsd  xmm0,QWORD PTR [rax-0x8]
  40751b:	ucomisd xmm0,xmm2
  40751f:	ja     0x4074f0
  407521:	cmpltsd xmm0,xmm6
  407526:	movapd xmm1,xmm0
  40752a:	andpd  xmm1,xmm5
  40752e:	jmp    0x4074f0
  407530:	mov    rdx,QWORD PTR [rbx+0x18]
  407534:	xor    r9d,r9d
  407537:	xor    r8d,r8d
  40753a:	lea    rsi,[rsp+0x20]
  40753f:	test   rdx,rdx
  407542:	je     0x4076f1
  407548:	mov    rcx,rsi
  40754b:	call   0x40aa90
  407550:	test   eax,eax
  407552:	jne    0x4076bf
  407558:	movsd  xmm0,QWORD PTR [rsp+0x660]
  407561:	mov    rax,QWORD PTR [rbx+0x28]
  407565:	test   rax,rax
  407568:	je     0x4077b1
  40756e:	mov    rdx,QWORD PTR [rbx+0x20]
  407572:	test   rdx,rdx
  407575:	je     0x4076d7
  40757b:	movsd  xmm1,QWORD PTR [rax]
  40757f:	addsd  xmm1,QWORD PTR [rdx]
  407583:	mulsd  xmm1,QWORD PTR [rip+0x13685]        # 0x41ac10
  40758b:	mulsd  xmm0,xmm1
  40758f:	movsd  QWORD PTR [rsp+0x660],xmm0
  407598:	lea    rdi,[rsp+0x670]
  4075a0:	mov    rdx,rsi
  4075a3:	mov    rcx,rdi
  4075a6:	call   0x405110
  4075ab:	xor    r8d,r8d
  4075ae:	mov    rdx,rbx
  4075b1:	mov    rcx,rsi
  4075b4:	call   0x405c40
  4075b9:	test   eax,eax
  4075bb:	je     0x407661
  4075c1:	mov    r9,QWORD PTR [rbx+0x10]
  4075c5:	mov    r8,QWORD PTR [rbx+0x8]
  4075c9:	lea    rcx,[rip+0x11bd0]        # 0x4191a0
  4075d0:	mov    rdx,QWORD PTR [rbx]
  4075d3:	call   0x401590
  4075d8:	mov    rcx,rsi
  4075db:	call   0x404a30
  4075e0:	mov    rcx,rdi
  4075e3:	call   0x404a30
  4075e8:	nop
  4075e9:	nop    DWORD PTR [rax+0x0]
  4075f0:	movaps xmm6,XMMWORD PTR [rsp+0xcc0]
  4075f8:	add    rsp,0xcd0
  4075ff:	pop    rbx
  407600:	pop    rsi
  407601:	pop    rdi
  407602:	ret    
  407603:	movsd  xmm0,QWORD PTR [rax]
  407607:	mov    rdx,QWORD PTR [rbx]
  40760a:	lea    rcx,[rip+0x11b27]        # 0x419138
  407611:	movapd xmm2,xmm0
  407615:	movq   r8,xmm0
  40761a:	call   0x401590
  40761f:	jmp    0x4075f0
  407621:	mov    rdx,QWORD PTR [rcx]
  407624:	lea    rcx,[rip+0x11acc]        # 0x4190f7
  40762b:	call   0x401590
  407630:	jmp    0x40747d
  407635:	movapd xmm3,xmm0
  407639:	movsd  xmm0,QWORD PTR [rip+0x135c7]        # 0x41ac08
  407641:	cmpltsd xmm3,xmm2
  407646:	andpd  xmm3,xmm0
  40764a:	jmp    0x4074b8
  40764f:	nop
  407650:	mov    rdx,QWORD PTR [rbx]
  407653:	lea    rcx,[rip+0x11ab6]        # 0x419110
  40765a:	call   0x401590
  40765f:	jmp    0x4075f0
  407661:	mov    rcx,rsi
  407664:	call   0x4054e0
  407669:	test   eax,eax
  40766b:	jne    0x4076a8
  40766d:	cmp    QWORD PTR [rbx+0x38],0x0
  407672:	je     0x40778d
  407678:	mov    r8d,0x1
  40767e:	mov    rdx,rbx
  407681:	mov    rcx,rsi
  407684:	call   0x405c40
  407689:	test   eax,eax
  40768b:	je     0x407733
  407691:	mov    r9,QWORD PTR [rbx+0x38]
  407695:	mov    r8,QWORD PTR [rbx+0x30]
  407699:	lea    rcx,[rip+0x11b80]        # 0x419220
  4076a0:	mov    rdx,QWORD PTR [rbx]
  4076a3:	jmp    0x4075d3
  4076a8:	mov    r9,QWORD PTR [rbx+0x10]
  4076ac:	mov    r8,QWORD PTR [rbx+0x8]
  4076b0:	lea    rcx,[rip+0x11b11]        # 0x4191c8
  4076b7:	mov    rdx,QWORD PTR [rbx]
  4076ba:	jmp    0x4075d3
  4076bf:	mov    r8,QWORD PTR [rbx+0x18]
  4076c3:	mov    rdx,QWORD PTR [rbx]
  4076c6:	lea    rcx,[rip+0x11aa3]        # 0x419170
  4076cd:	call   0x401590
  4076d2:	jmp    0x4075f0
  4076d7:	mulsd  xmm0,QWORD PTR [rax]
  4076db:	subsd  xmm0,QWORD PTR [rip+0x134dd]        # 0x41abc0
  4076e3:	movsd  QWORD PTR [rsp+0x660],xmm0
  4076ec:	jmp    0x407598
  4076f1:	lea    rdx,[rip+0x11a9d]        # 0x419195
  4076f8:	mov    rcx,rsi
  4076fb:	call   0x40aa90
  407700:	test   eax,eax
  407702:	je     0x407558
  407708:	movsd  xmm0,QWORD PTR [rip+0x134b0]        # 0x41abc0
  407710:	mov    QWORD PTR [rsp+0x340],0x0
  40771c:	mov    QWORD PTR [rsp+0x20],0x0
  407725:	movsd  QWORD PTR [rsp+0x660],xmm0
  40772e:	jmp    0x407561
  407733:	mov    rdx,rdi
  407736:	mov    rcx,rsi
  407739:	call   0x4051a0
  40773e:	mov    rcx,rsi
  407741:	call   0x405710
  407746:	test   eax,eax
  407748:	jne    0x407771
  40774a:	movsd  xmm0,QWORD PTR [rsp+0x660]
  407753:	movsd  xmm1,QWORD PTR [rip+0x13475]        # 0x41abd0
  40775b:	subsd  xmm0,QWORD PTR [rip+0x1345d]        # 0x41abc0
  407763:	andpd  xmm0,xmm1
  407767:	ucomisd xmm0,QWORD PTR [rip+0x134b1]        # 0x41ac20
  40776f:	jbe    0x407780
  407771:	mov    rdx,QWORD PTR [rbx]
  407774:	lea    rcx,[rip+0x11acd]        # 0x419248
  40777b:	call   0x401590
  407780:	mov    rcx,rsi
  407783:	call   0x404a30
  407788:	jmp    0x4075f0
  40778d:	mov    rdx,QWORD PTR [rbx]
  407790:	lea    rcx,[rip+0x11a61]        # 0x4191f8
  407797:	call   0x401590
  40779c:	mov    rcx,rsi
  40779f:	call   0x404a30
  4077a4:	mov    rcx,rdi
  4077a7:	call   0x404a30
  4077ac:	jmp    0x4075f0
  4077b1:	mov    rax,QWORD PTR [rbx+0x20]
  4077b5:	test   rax,rax
  4077b8:	je     0x4077d4
  4077ba:	mulsd  xmm0,QWORD PTR [rax]
  4077be:	addsd  xmm0,QWORD PTR [rip+0x133fa]        # 0x41abc0
  4077c6:	movsd  QWORD PTR [rsp+0x660],xmm0
  4077cf:	jmp    0x407598
  4077d4:	mulsd  xmm0,QWORD PTR [rip+0x1343c]        # 0x41ac18
  4077dc:	movsd  QWORD PTR [rsp+0x660],xmm0
  4077e5:	jmp    0x407598
  4077ea:	nop    WORD PTR [rax+rax*1+0x0]
  4077f0:	push   r12
  4077f2:	push   rbp
  4077f3:	push   rdi
  4077f4:	push   rsi
  4077f5:	push   rbx
  4077f6:	sub    rsp,0x670
  4077fd:	mov    edi,DWORD PTR [rsp+0x6e8]
  407804:	test   r9,r9
  407807:	je     0x40782e
  407809:	cmp    edi,0x1
  40780c:	mov    rsi,r9
  40780f:	mov    rbx,r8
  407812:	mov    rbp,rcx
  407815:	je     0x407950
  40781b:	cmp    edi,0x2
  40781e:	je     0x407840
  407820:	cmp    edi,0x1
  407823:	lea    r12,[rsp+0x20]
  407828:	je     0x4078e4
  40782e:	add    rsp,0x670
  407835:	pop    rbx
  407836:	pop    rsi
  407837:	pop    rdi
  407838:	pop    rbp
  407839:	pop    r12
  40783b:	ret    
  40783c:	nop    DWORD PTR [rax+0x0]
  407840:	mov    rcx,r8
  407843:	call   0x415f38
  407848:	test   rax,rax
  40784b:	je     0x40782e
  40784d:	mov    rax,QWORD PTR [rsp+0x6e0]
  407855:	mov    ebp,DWORD PTR [rax]
  407857:	mov    rax,QWORD PTR [rsp+0x6d0]
  40785f:	cmp    ebp,DWORD PTR [rax]
  407861:	je     0x407900
  407867:	mov    rax,QWORD PTR [rsp+0x6c8]
  40786f:	mov    rax,QWORD PTR [rax]
  407872:	movsxd r12,ebp
  407875:	mov    rcx,QWORD PTR [rsp+0x6c0]
  40787d:	mov    edx,0x21
  407882:	shl    r12,0x4
  407886:	mov    QWORD PTR [rax+r12*1],rbx
  40788a:	call   0x415f90
  40788f:	test   rax,rax
  407892:	mov    rax,QWORD PTR [rsp+0x6c8]
  40789a:	mov    rax,QWORD PTR [rax]
  40789d:	je     0x4079c3
  4078a3:	lea    rbx,[rip+0x119f7]        # 0x4192a1
  4078aa:	mov    QWORD PTR [rax+r12*1+0x8],rbx
  4078af:	mov    rax,QWORD PTR [rsp+0x6e0]
  4078b7:	add    ebp,0x1
  4078ba:	mov    rcx,rsi
  4078bd:	mov    DWORD PTR [rax],ebp
  4078bf:	call   0x415f68
  4078c4:	mov    rsi,QWORD PTR [rsp+0x6d8]
  4078cc:	cmp    eax,DWORD PTR [rsi]
  4078ce:	jle    0x407820
  4078d4:	cmp    edi,0x1
  4078d7:	mov    DWORD PTR [rsi],eax
  4078d9:	lea    r12,[rsp+0x20]
  4078de:	jne    0x40782e
  4078e4:	mov    rcx,r12
  4078e7:	call   0x404a30
  4078ec:	nop
  4078ed:	add    rsp,0x670
  4078f4:	pop    rbx
  4078f5:	pop    rsi
  4078f6:	pop    rdi
  4078f7:	pop    rbp
  4078f8:	pop    r12
  4078fa:	ret    
  4078fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407900:	mov    rax,QWORD PTR [rsp+0x6d0]
  407908:	add    ebp,0x64
  40790b:	movsxd rdx,ebp
  40790e:	shl    rdx,0x4
  407912:	mov    DWORD PTR [rax],ebp
  407914:	mov    rax,QWORD PTR [rsp+0x6c8]
  40791c:	mov    rcx,QWORD PTR [rax]
  40791f:	call   0x415fb0
  407924:	mov    rcx,QWORD PTR [rsp+0x6c8]
  40792c:	test   rax,rax
  40792f:	mov    QWORD PTR [rcx],rax
  407932:	je     0x4079d5
  407938:	mov    rcx,QWORD PTR [rsp+0x6e0]
  407940:	mov    ebp,DWORD PTR [rcx]
  407942:	jmp    0x407872
  407947:	nop    WORD PTR [rax+rax*1+0x0]
  407950:	lea    r12,[rsp+0x20]
  407955:	movsd  xmm0,QWORD PTR [rip+0x13263]        # 0x41abc0
  40795d:	xor    r9d,r9d
  407960:	xor    r8d,r8d
  407963:	mov    rdx,rsi
  407966:	mov    rcx,r12
  407969:	movsd  QWORD PTR [rsp+0x660],xmm0
  407972:	mov    QWORD PTR [rsp+0x340],0x0
  40797e:	mov    QWORD PTR [rsp+0x20],0x0
  407987:	call   0x40aa90
  40798c:	test   eax,eax
  40798e:	jne    0x4078e4
  407994:	mov    rcx,r12
  407997:	call   0x4054e0
  40799c:	test   eax,eax
  40799e:	jne    0x4078e4
  4079a4:	lea    r8,[rip+0xffffffffffffa185]        # 0x401b30
  4079ab:	mov    rdx,r12
  4079ae:	mov    rcx,rbp
  4079b1:	call   0x405490
  4079b6:	test   eax,eax
  4079b8:	je     0x40784d
  4079be:	jmp    0x4078e4
  4079c3:	mov    rbx,QWORD PTR [rsp+0x6c0]
  4079cb:	mov    QWORD PTR [rax+r12*1+0x8],rbx
  4079d0:	jmp    0x4078af
  4079d5:	mov    rbx,QWORD PTR [rip+0x1a06c]        # 0x421a48
  4079dc:	call   QWORD PTR [rip+0x1bae6]        # 0x4234c8
  4079e2:	lea    rdx,[rip+0x1188f]        # 0x419278
  4079e9:	lea    rcx,[rax+0x60]
  4079ed:	mov    r8,rbx
  4079f0:	call   0x401540
  4079f5:	mov    ecx,0x3
  4079fa:	call   0x416058
  4079ff:	nop
  407a00:	mov    eax,0x14
  407a05:	ret    
  407a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a10:	push   r15
  407a12:	push   r14
  407a14:	push   r13
  407a16:	push   r12
  407a18:	push   rbp
  407a19:	push   rdi
  407a1a:	push   rsi
  407a1b:	push   rbx
  407a1c:	sub    rsp,0x88
  407a23:	mov    rdi,rcx
  407a26:	mov    ecx,0x640
  407a2b:	mov    rbx,rdx
  407a2e:	call   0x415fe8
  407a33:	test   rax,rax
  407a36:	je     0x407d5b
  407a3c:	test   rdi,rdi
  407a3f:	mov    QWORD PTR [rsp+0x78],rax
  407a44:	mov    DWORD PTR [rsp+0x6c],0x64
  407a4c:	mov    DWORD PTR [rsp+0x70],0x0
  407a54:	mov    DWORD PTR [rsp+0x74],0x0
  407a5c:	mov    esi,0x1
  407a61:	je     0x407d45
  407a67:	lea    rax,[rip+0x1a552]        # 0x421fc0
  407a6e:	lea    r14,[rsp+0x74]
  407a73:	lea    r13,[rsp+0x70]
  407a78:	lea    r12,[rsp+0x6c]
  407a7d:	lea    rbp,[rsp+0x78]
  407a82:	mov    QWORD PTR [rsp+0x50],rax
  407a87:	lea    rax,[rip+0x1a85a]        # 0x4222e8
  407a8e:	mov    QWORD PTR [rsp+0x58],rax
  407a93:	mov    rax,QWORD PTR [rsp+0x50]
  407a98:	mov    r15,QWORD PTR [rax]
  407a9b:	test   r15,r15
  407a9e:	je     0x407adb
  407aa0:	mov    r8,QWORD PTR [r15]
  407aa3:	mov    DWORD PTR [rsp+0x48],esi
  407aa7:	mov    rcx,rdi
  407aaa:	mov    QWORD PTR [rsp+0x40],r14
  407aaf:	mov    QWORD PTR [rsp+0x38],r13
  407ab4:	mov    QWORD PTR [rsp+0x30],r12
  407ab9:	mov    QWORD PTR [rsp+0x28],rbp
  407abe:	mov    rdx,QWORD PTR [r15+0x8]
  407ac2:	mov    r9,r8
  407ac5:	mov    QWORD PTR [rsp+0x20],rdx
  407aca:	mov    rdx,rbx
  407acd:	call   0x4077f0
  407ad2:	mov    r15,QWORD PTR [r15+0x20]
  407ad6:	test   r15,r15
  407ad9:	jne    0x407aa0
  407adb:	add    QWORD PTR [rsp+0x50],0x8
  407ae1:	mov    rax,QWORD PTR [rsp+0x50]
  407ae6:	cmp    rax,QWORD PTR [rsp+0x58]
  407aeb:	jne    0x407a93
  407aed:	mov    rbp,QWORD PTR [rip+0x17574]        # 0x41f068
  407af4:	test   rbp,rbp
  407af7:	je     0x407b8e
  407afd:	lea    rax,[rsp+0x78]
  407b02:	lea    r15,[rsp+0x74]
  407b07:	lea    r14,[rsp+0x70]
  407b0c:	lea    r13,[rsp+0x6c]
  407b11:	mov    QWORD PTR [rsp+0x50],rax
  407b16:	jmp    0x407b5d
  407b18:	mov    rax,QWORD PTR [rsp+0x50]
  407b1d:	mov    r9,QWORD PTR [rbp+0x68]
  407b21:	mov    DWORD PTR [rsp+0x48],esi
  407b25:	mov    QWORD PTR [rsp+0x40],r15
  407b2a:	mov    QWORD PTR [rsp+0x38],r14
  407b2f:	mov    QWORD PTR [rsp+0x30],r13
  407b34:	mov    QWORD PTR [rsp+0x28],rax
  407b39:	lea    rax,[rip+0x11780]        # 0x4192c0
  407b40:	mov    QWORD PTR [rsp+0x20],rax
  407b45:	mov    r8,QWORD PTR [rbp+0x0]
  407b49:	mov    rdx,rbx
  407b4c:	mov    rcx,rdi
  407b4f:	call   0x4077f0
  407b54:	mov    rbp,QWORD PTR [rbp+0x70]
  407b58:	test   rbp,rbp
  407b5b:	je     0x407b8e
  407b5d:	cmp    QWORD PTR [rbp+0x58],0x0
  407b62:	jne    0x407b18
  407b64:	mov    rax,QWORD PTR [rsp+0x50]
  407b69:	mov    r9,QWORD PTR [rbp+0x40]
  407b6d:	mov    DWORD PTR [rsp+0x48],esi
  407b71:	mov    QWORD PTR [rsp+0x40],r15
  407b76:	mov    QWORD PTR [rsp+0x38],r14
  407b7b:	mov    QWORD PTR [rsp+0x30],r13
  407b80:	mov    QWORD PTR [rsp+0x28],rax
  407b85:	lea    rax,[rip+0x11747]        # 0x4192d3
  407b8c:	jmp    0x407b40
  407b8e:	mov    r12,QWORD PTR [rip+0x174b3]        # 0x41f048
  407b95:	test   r12,r12
  407b98:	je     0x407c28
  407b9e:	lea    rax,[rsp+0x78]
  407ba3:	lea    r15,[rsp+0x74]
  407ba8:	lea    r14,[rsp+0x70]
  407bad:	lea    r13,[rsp+0x6c]
  407bb2:	mov    QWORD PTR [rsp+0x50],rax
  407bb7:	nop    WORD PTR [rax+rax*1+0x0]
  407bc0:	mov    rcx,QWORD PTR [r12+0x8]
  407bc5:	call   0x4019f0
  407bca:	mov    edx,0x3b
  407bcf:	mov    rcx,rax
  407bd2:	mov    rbp,rax
  407bd5:	call   0x415f90
  407bda:	mov    BYTE PTR [rax],0x0
  407bdd:	mov    rax,QWORD PTR [rsp+0x50]
  407be2:	mov    r9,rbp
  407be5:	mov    DWORD PTR [rsp+0x48],esi
  407be9:	mov    QWORD PTR [rsp+0x40],r15
  407bee:	mov    rdx,rbx
  407bf1:	mov    QWORD PTR [rsp+0x38],r14
  407bf6:	mov    QWORD PTR [rsp+0x30],r13
  407bfb:	mov    rcx,rdi
  407bfe:	mov    QWORD PTR [rsp+0x28],rax
  407c03:	mov    rax,QWORD PTR [r12+0x8]
  407c08:	mov    QWORD PTR [rsp+0x20],rax
  407c0d:	mov    r8,QWORD PTR [r12]
  407c11:	call   0x4077f0
  407c16:	mov    rcx,rbp
  407c19:	call   0x416010
  407c1e:	mov    r12,QWORD PTR [r12+0x10]
  407c23:	test   r12,r12
  407c26:	jne    0x407bc0
  407c28:	movsxd rdx,DWORD PTR [rsp+0x74]
  407c2d:	mov    rcx,QWORD PTR [rsp+0x78]
  407c32:	lea    r9,[rip+0xffffffffffff9947]        # 0x401580
  407c39:	mov    r8d,0x10
  407c3f:	call   0x415fb8
  407c44:	mov    eax,DWORD PTR [rsp+0x74]
  407c48:	test   eax,eax
  407c4a:	jne    0x407c5c
  407c4c:	lea    rcx,[rip+0x1168c]        # 0x4192df
  407c53:	call   0x401590
  407c58:	mov    eax,DWORD PTR [rsp+0x74]
  407c5c:	cmp    eax,0x14
  407c5f:	mov    r13,QWORD PTR [rip+0x1b862]        # 0x4234c8
  407c66:	jg     0x407d20
  407c6c:	call   r13
  407c6f:	lea    rsi,[rax+0x30]
  407c73:	mov    eax,DWORD PTR [rsp+0x74]
  407c77:	xor    edi,edi
  407c79:	xor    r12d,r12d
  407c7c:	test   eax,eax
  407c7e:	jle    0x407cf6
  407c80:	mov    rax,QWORD PTR [rsp+0x78]
  407c85:	mov    rdx,rsi
  407c88:	mov    rbp,rdi
  407c8b:	mov    rcx,QWORD PTR [rax+rdi*1]
  407c8f:	call   0x416018
  407c94:	add    rbp,QWORD PTR [rsp+0x78]
  407c99:	mov    rcx,QWORD PTR [rbp+0x0]
  407c9d:	call   0x415f68
  407ca2:	cmp    DWORD PTR [rsp+0x70],eax
  407ca6:	mov    ebx,eax
  407ca8:	jl     0x407cce
  407caa:	nop    WORD PTR [rax+rax*1+0x0]
  407cb0:	mov    rdx,rsi
  407cb3:	mov    ecx,0x20
  407cb8:	add    ebx,0x1
  407cbb:	call   0x415fd0
  407cc0:	cmp    DWORD PTR [rsp+0x70],ebx
  407cc4:	jge    0x407cb0
  407cc6:	mov    rbp,rdi
  407cc9:	add    rbp,QWORD PTR [rsp+0x78]
  407cce:	mov    rdx,QWORD PTR [rbp+0x8]
  407cd2:	mov    rcx,rsi
  407cd5:	add    r12d,0x1
  407cd9:	add    rdi,0x10
  407cdd:	call   0x4021a0
  407ce2:	mov    rdx,rsi
  407ce5:	mov    ecx,0xa
  407cea:	call   0x416020
  407cef:	cmp    DWORD PTR [rsp+0x74],r12d
  407cf4:	jg     0x407c80
  407cf6:	call   r13
  407cf9:	add    rax,0x30
  407cfd:	cmp    rsi,rax
  407d00:	je     0x407d0c
  407d02:	mov    rcx,rsi
  407d05:	call   QWORD PTR [rip+0x1b825]        # 0x423530
  407d0b:	nop
  407d0c:	add    rsp,0x88
  407d13:	pop    rbx
  407d14:	pop    rsi
  407d15:	pop    rdi
  407d16:	pop    rbp
  407d17:	pop    r12
  407d19:	pop    r13
  407d1b:	pop    r14
  407d1d:	pop    r15
  407d1f:	ret    
  407d20:	lea    rdx,[rip+0x115d2]        # 0x4192f9
  407d27:	mov    rcx,QWORD PTR [rip+0x1a252]        # 0x421f80
  407d2e:	call   QWORD PTR [rip+0x1b804]        # 0x423538
  407d34:	test   rax,rax
  407d37:	mov    rsi,rax
  407d3a:	jne    0x407c73
  407d40:	jmp    0x407c6c
  407d45:	lea    rax,[rip+0x10329]        # 0x418075
  407d4c:	test   rbx,rbx
  407d4f:	mov    sil,0x2
  407d52:	cmove  rbx,rax
  407d56:	jmp    0x407a67
  407d5b:	lea    rcx,[rip+0x11550]        # 0x4192b2
  407d62:	call   0x4162d0
  407d67:	nop
  407d68:	nop    DWORD PTR [rax+rax*1+0x0]
  407d70:	sub    rsp,0x38
  407d74:	mov    rdx,QWORD PTR [rip+0x19ccd]        # 0x421a48
  407d7b:	lea    rcx,[rip+0x1157e]        # 0x419300
  407d82:	call   0x401590
  407d87:	call   QWORD PTR [rip+0x1b73b]        # 0x4234c8
  407d8d:	lea    rcx,[rax+0x30]
  407d91:	lea    rax,[rip+0x11c18]        # 0x4199b0
  407d98:	lea    rdx,[rip+0x11591]        # 0x419330
  407d9f:	mov    DWORD PTR [rsp+0x20],0x8
  407da7:	mov    r9d,0x67
  407dad:	mov    r8d,0x8
  407db3:	mov    QWORD PTR [rsp+0x28],rax
  407db8:	call   0x401540
  407dbd:	xor    ecx,ecx
  407dbf:	call   0x416058
  407dc4:	nop
  407dc5:	nop
  407dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407dd0:	push   rbx
  407dd1:	sub    rsp,0x20
  407dd5:	mov    rbx,QWORD PTR [rip+0x19c6c]        # 0x421a48
  407ddc:	call   QWORD PTR [rip+0x1b6e6]        # 0x4234c8
  407de2:	lea    rdx,[rip+0x11be7]        # 0x4199d0
  407de9:	lea    rcx,[rax+0x60]
  407ded:	mov    r8,rbx
  407df0:	call   0x401540
  407df5:	mov    ecx,0x3
  407dfa:	call   0x416058
  407dff:	nop
  407e00:	push   rsi
  407e01:	push   rbx
  407e02:	sub    rsp,0x28
  407e06:	mov    rsi,rcx
  407e09:	mov    rcx,QWORD PTR [rcx]
  407e0c:	mov    rbx,r8
  407e0f:	test   rcx,rcx
  407e12:	je     0x407e19
  407e14:	call   0x416010
  407e19:	mov    edx,DWORD PTR [rip+0x1a509]        # 0x422328
  407e1f:	lea    rcx,[rip+0x1024f]        # 0x418075
  407e26:	test   edx,edx
  407e28:	cmove  rcx,rbx
  407e2c:	call   0x40b690
  407e31:	test   rax,rax
  407e34:	mov    QWORD PTR [rsi],rax
  407e37:	je     0x407e53
  407e39:	cmp    BYTE PTR [rax],0x0
  407e3c:	jne    0x407e45
  407e3e:	add    rsp,0x28
  407e42:	pop    rbx
  407e43:	pop    rsi
  407e44:	ret    
  407e45:	mov    rcx,rax
  407e48:	call   0x40b698
  407e4d:	cmp    QWORD PTR [rsi],0x0
  407e51:	jne    0x407e3e
  407e53:	mov    eax,DWORD PTR [rip+0x1a4cf]        # 0x422328
  407e59:	test   eax,eax
  407e5b:	je     0x407e64
  407e5d:	xor    ecx,ecx
  407e5f:	call   0x416058
  407e64:	mov    ecx,0xa
  407e69:	call   0x415fc8
  407e6e:	jmp    0x407e5d
  407e70:	push   rbp
  407e71:	push   rdi
  407e72:	push   rsi
  407e73:	push   rbx
  407e74:	sub    rsp,0x38
  407e78:	lea    rcx,[rip+0x11b78]        # 0x4199f7
  407e7f:	call   0x416000
  407e84:	test   rax,rax
  407e87:	je     0x407e8e
  407e89:	cmp    BYTE PTR [rax],0x0
  407e8c:	jne    0x407ebb
  407e8e:	lea    rdx,[rip+0x10916]        # 0x4187ab
  407e95:	lea    rcx,[rip+0x11b14]        # 0x4199b0
  407e9c:	lea    rbx,[rip+0x11b0d]        # 0x4199b0
  407ea3:	call   0x416030
  407ea8:	test   rax,rax
  407eab:	mov    rsi,rax
  407eae:	je     0x407ec4
  407eb0:	mov    rcx,rsi
  407eb3:	call   0x416050
  407eb8:	mov    rax,rbx
  407ebb:	add    rsp,0x38
  407ebf:	pop    rbx
  407ec0:	pop    rsi
  407ec1:	pop    rdi
  407ec2:	pop    rbp
  407ec3:	ret    
  407ec4:	call   0x403aa0
  407ec9:	mov    rcx,rax
  407ecc:	mov    rdi,rax
  407ecf:	call   0x415f68
  407ed4:	lea    r8d,[rax+0x20]
  407ed8:	mov    rsi,rax
  407edb:	movsxd rcx,r8d
  407ede:	call   0x415fe8
  407ee3:	test   rax,rax
  407ee6:	mov    rbx,rax
  407ee9:	je     0x4080b7
  407eef:	mov    r8,rsi
  407ef2:	mov    rdx,rdi
  407ef5:	mov    rcx,rax
  407ef8:	call   0x415fe0
  407efd:	lea    rax,[rbx+rsi*1+0x1]
  407f02:	movabs rdi,0x752f65726168732f
  407f0c:	mov    BYTE PTR [rbx+rsi*1],0x5c
  407f10:	mov    ecx,0x7374
  407f15:	lea    rdx,[rip+0x1088f]        # 0x4187ab
  407f1c:	mov    QWORD PTR [rax],rdi
  407f1f:	movabs rdi,0x6665642f7374696e
  407f29:	mov    WORD PTR [rax+0x1c],cx
  407f2d:	mov    QWORD PTR [rax+0x8],rdi
  407f31:	movabs rdi,0x736e6f6974696e69
  407f3b:	mov    DWORD PTR [rax+0x18],0x696e752e
  407f42:	mov    QWORD PTR [rax+0x10],rdi
  407f46:	mov    BYTE PTR [rax+0x1e],0x0
  407f4a:	mov    rcx,rbx
  407f4d:	call   0x416030
  407f52:	test   rax,rax
  407f55:	mov    rsi,rax
  407f58:	jne    0x407eb0
  407f5e:	lea    rcx,[rip+0x11aac]        # 0x419a11
  407f65:	call   0x416000
  407f6a:	test   rax,rax
  407f6d:	mov    rsi,rax
  407f70:	je     0x408097
  407f76:	mov    rcx,rax
  407f79:	call   0x415f68
  407f7e:	lea    edx,[rax+0x20]
  407f81:	movsxd rcx,edx
  407f84:	call   0x415fe8
  407f89:	test   rax,rax
  407f8c:	mov    rdi,rax
  407f8f:	je     0x4080b7
  407f95:	mov    edx,0x3b
  407f9a:	mov    rcx,rsi
  407f9d:	lea    rbp,[rsp+0x20]
  407fa2:	call   0x415f90
  407fa7:	cmp    rax,0x1
  407fab:	mov    rdx,rbp
  407fae:	mov    rcx,rsi
  407fb1:	sbb    eax,eax
  407fb3:	add    eax,0x3b
  407fb6:	mov    WORD PTR [rsp+0x20],ax
  407fbb:	call   0x415f30
  407fc0:	test   rax,rax
  407fc3:	je     0x40808f
  407fc9:	nop    DWORD PTR [rax+0x0]
  407fd0:	mov    rdx,rax
  407fd3:	mov    rcx,rdi
  407fd6:	call   0x415f80
  407fdb:	mov    r9,rdi
  407fde:	mov    r10d,DWORD PTR [r9]
  407fe1:	add    r9,0x4
  407fe5:	lea    r8d,[r10-0x1010101]
  407fec:	not    r10d
  407fef:	and    r8d,r10d
  407ff2:	and    r8d,0x80808080
  407ff9:	je     0x407fde
  407ffb:	mov    eax,r8d
  407ffe:	movabs rdx,0x752f65726168732f
  408008:	mov    rcx,rdi
  40800b:	shr    eax,0x10
  40800e:	test   r8d,0x8080
  408015:	cmove  r8d,eax
  408019:	lea    rax,[r9+0x2]
  40801d:	cmove  r9,rax
  408021:	add    r8b,r8b
  408024:	sbb    r9,0x3
  408028:	sub    r9,rdi
  40802b:	lea    rax,[rdi+r9*1+0x1]
  408030:	mov    BYTE PTR [rdi+r9*1],0x2f
  408035:	mov    QWORD PTR [rax],rdx
  408038:	movabs rdx,0x6665642f7374696e
  408042:	mov    DWORD PTR [rax+0x18],0x696e752e
  408049:	mov    QWORD PTR [rax+0x8],rdx
  40804d:	movabs rdx,0x736e6f6974696e69
  408057:	mov    BYTE PTR [rax+0x1e],0x0
  40805b:	mov    QWORD PTR [rax+0x10],rdx
  40805f:	mov    edx,0x7374
  408064:	mov    WORD PTR [rax+0x1c],dx
  408068:	lea    rdx,[rip+0x1073c]        # 0x4187ab
  40806f:	call   0x416030
  408074:	test   rax,rax
  408077:	mov    rsi,rax
  40807a:	jne    0x40809f
  40807c:	xor    ecx,ecx
  40807e:	mov    rdx,rbp
  408081:	call   0x415f30
  408086:	test   rax,rax
  408089:	jne    0x407fd0
  40808f:	mov    rcx,rdi
  408092:	call   0x416010
  408097:	mov    rax,rbx
  40809a:	jmp    0x407ebb
  40809f:	mov    rcx,rdi
  4080a2:	call   0x4019f0
  4080a7:	mov    rcx,rdi
  4080aa:	mov    rbx,rax
  4080ad:	call   0x416010
  4080b2:	jmp    0x407eb0
  4080b7:	lea    rcx,[rip+0x11943]        # 0x419a01
  4080be:	call   0x4162d0
  4080c3:	nop
  4080c4:	xchg   ax,ax
  4080c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080d0:	push   r13
  4080d2:	push   r12
  4080d4:	push   rbp
  4080d5:	push   rdi
  4080d6:	push   rsi
  4080d7:	push   rbx
  4080d8:	sub    rsp,0x28
  4080dc:	mov    edi,ecx
  4080de:	lea    rcx,[rip+0x11931]        # 0x419a16
  4080e5:	call   0x416000
  4080ea:	test   rax,rax
  4080ed:	je     0x408110
  4080ef:	cmp    BYTE PTR [rax],0x0
  4080f2:	je     0x408110
  4080f4:	test   edi,edi
  4080f6:	mov    rbx,rax
  4080f9:	je     0x408290
  4080ff:	mov    rax,rbx
  408102:	add    rsp,0x28
  408106:	pop    rbx
  408107:	pop    rsi
  408108:	pop    rdi
  408109:	pop    rbp
  40810a:	pop    r12
  40810c:	pop    r13
  40810e:	ret    
  40810f:	nop
  408110:	lea    rcx,[rip+0x11960]        # 0x419a77
  408117:	call   0x416000
  40811c:	test   rax,rax
  40811f:	mov    rsi,rax
  408122:	je     0x408200
  408128:	mov    rcx,rax
  40812b:	call   0x415f68
  408130:	mov    rbp,QWORD PTR [rip+0xf319]        # 0x417450
  408137:	mov    r12,rax
  40813a:	mov    rcx,rbp
  40813d:	call   0x415f68
  408142:	lea    ecx,[r12+rax*1+0x2]
  408147:	movsxd rcx,ecx
  40814a:	call   0x415fe8
  40814f:	test   rax,rax
  408152:	mov    rbx,rax
  408155:	je     0x4082e1
  40815b:	lea    r8,[r12+0x1]
  408160:	mov    rdx,rsi
  408163:	mov    rcx,rax
  408166:	call   0x415fe0
  40816b:	mov    r8,rbx
  40816e:	mov    r9d,DWORD PTR [r8]
  408171:	add    r8,0x4
  408175:	lea    eax,[r9-0x1010101]
  40817c:	not    r9d
  40817f:	and    eax,r9d
  408182:	and    eax,0x80808080
  408187:	je     0x40816e
  408189:	mov    edx,eax
  40818b:	shr    edx,0x10
  40818e:	test   eax,0x8080
  408193:	cmove  eax,edx
  408196:	lea    rdx,[r8+0x2]
  40819a:	cmove  r8,rdx
  40819e:	add    al,al
  4081a0:	mov    eax,0x2f
  4081a5:	sbb    r8,0x3
  4081a9:	mov    rdx,rbp
  4081ac:	sub    r8,rbx
  4081af:	lea    rcx,[rbx+r8*1+0x1]
  4081b4:	mov    WORD PTR [rbx+r8*1],ax
  4081b9:	call   0x415f80
  4081be:	test   edi,edi
  4081c0:	jne    0x4080ff
  4081c6:	lea    rdx,[rip+0x105de]        # 0x4187ab
  4081cd:	mov    rcx,rbx
  4081d0:	call   0x416030
  4081d5:	test   rax,rax
  4081d8:	je     0x4082d2
  4081de:	mov    rcx,rax
  4081e1:	call   0x416050
  4081e6:	mov    rax,rbx
  4081e9:	add    rsp,0x28
  4081ed:	pop    rbx
  4081ee:	pop    rsi
  4081ef:	pop    rdi
  4081f0:	pop    rbp
  4081f1:	pop    r12
  4081f3:	pop    r13
  4081f5:	ret    
  4081f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408200:	lea    rcx,[rip+0x11875]        # 0x419a7c
  408207:	call   0x416000
  40820c:	test   rax,rax
  40820f:	mov    r13,rax
  408212:	je     0x4082da
  408218:	lea    rcx,[rip+0x11867]        # 0x419a86
  40821f:	call   0x416000
  408224:	test   rax,rax
  408227:	mov    r12,rax
  40822a:	je     0x4082da
  408230:	mov    rcx,r13
  408233:	call   0x415f68
  408238:	mov    rcx,r12
  40823b:	mov    rsi,rax
  40823e:	call   0x415f68
  408243:	mov    rbp,QWORD PTR [rip+0xf206]        # 0x417450
  40824a:	mov    rbx,rax
  40824d:	mov    rcx,rbp
  408250:	call   0x415f68
  408255:	mov    r8,rax
  408258:	lea    eax,[rsi+rbx*1+0x2]
  40825c:	add    r8d,eax
  40825f:	movsxd rcx,r8d
  408262:	call   0x415fe8
  408267:	test   rax,rax
  40826a:	mov    rbx,rax
  40826d:	je     0x4082e1
  40826f:	mov    rdx,r13
  408272:	mov    r8,rsi
  408275:	mov    rcx,rax
  408278:	call   0x415fe0
  40827d:	lea    rcx,[rbx+rsi*1]
  408281:	mov    rdx,r12
  408284:	call   0x415f80
  408289:	jmp    0x40816b
  40828e:	xchg   ax,ax
  408290:	lea    rdx,[rip+0x10514]        # 0x4187ab
  408297:	mov    rcx,rax
  40829a:	call   0x416030
  40829f:	test   rax,rax
  4082a2:	jne    0x4081de
  4082a8:	mov    rsi,QWORD PTR [rip+0x19799]        # 0x421a48
  4082af:	call   QWORD PTR [rip+0x1b213]        # 0x4234c8
  4082b5:	lea    rdx,[rip+0x1176c]        # 0x419a28
  4082bc:	lea    rcx,[rax+0x60]
  4082c0:	mov    r9,rbx
  4082c3:	mov    r8,rsi
  4082c6:	xor    ebx,ebx
  4082c8:	call   0x401540
  4082cd:	jmp    0x4080ff
  4082d2:	mov    rcx,rbx
  4082d5:	call   0x416010
  4082da:	xor    ebx,ebx
  4082dc:	jmp    0x4080ff
  4082e1:	lea    rcx,[rip+0x117a7]        # 0x419a8f
  4082e8:	call   0x4162d0
  4082ed:	nop
  4082ee:	xchg   ax,ax
  4082f0:	sub    rsp,0x48
  4082f4:	mov    ecx,0x1
  4082f9:	call   0x4080d0
  4082fe:	mov    QWORD PTR [rsp+0x30],rax
  408303:	lea    rax,[rip+0x116a6]        # 0x4199b0
  40830a:	lea    r9,[rip+0x11792]        # 0x419aa3
  408311:	lea    r8,[rip+0x11798]        # 0x419ab0
  408318:	lea    rdx,[rip+0x1179f]        # 0x419abe
  40831f:	lea    rcx,[rip+0x117a2]        # 0x419ac8
  408326:	mov    QWORD PTR [rsp+0x28],rax
  40832b:	mov    rax,QWORD PTR [rip+0x1970e]        # 0x421a40
  408332:	mov    QWORD PTR [rsp+0x20],rax
  408337:	call   0x401590
  40833c:	nop
  40833d:	add    rsp,0x48
  408341:	ret    
  408342:	nop    DWORD PTR [rax+0x0]
  408346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408350:	push   r15
  408352:	push   r14
  408354:	push   r13
  408356:	push   r12
  408358:	push   rbp
  408359:	push   rdi
  40835a:	push   rsi
  40835b:	push   rbx
  40835c:	sub    rsp,0x58
  408360:	mov    r12,QWORD PTR [rip+0x13bb9]        # 0x41bf20
  408367:	lea    rbx,[rip+0x11912]        # 0x419c80
  40836e:	lea    rbp,[rsp+0x4c]
  408373:	mov    esi,ecx
  408375:	mov    rdi,rdx
  408378:	mov    QWORD PTR [rsp+0xb0],r8
  408380:	mov    QWORD PTR [rsp+0xb8],r9
  408388:	mov    r13,r12
  40838b:	mov    r15,r12
  40838e:	mov    r14,r12
  408391:	mov    r8,QWORD PTR [rip+0xefc8]        # 0x417360
  408398:	lea    r9,[rip+0xeca1]        # 0x417040
  40839f:	mov    QWORD PTR [rsp+0x20],rbp
  4083a4:	mov    rdx,rdi
  4083a7:	mov    ecx,esi
  4083a9:	call   0x40b650
  4083ae:	cmp    eax,0xffffffff
  4083b1:	je     0x4085e1
  4083b7:	cmp    eax,0x76
  4083ba:	ja     0x4085d0
  4083c0:	mov    eax,eax
  4083c2:	movsxd rax,DWORD PTR [rbx+rax*4]
  4083c6:	add    rax,rbx
  4083c9:	jmp    rax
  4083cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4083d0:	mov    DWORD PTR [rip+0x19f62],0x2        # 0x42233c
  4083da:	jmp    0x408391
  4083dc:	nop    DWORD PTR [rax+0x0]
  4083e0:	mov    DWORD PTR [rip+0x19f3a],0x1        # 0x422324
  4083ea:	mov    DWORD PTR [rip+0x19f34],0x1        # 0x422328
  4083f4:	mov    DWORD PTR [rip+0x19f36],0x1        # 0x422334
  4083fe:	mov    DWORD PTR [rip+0x19f34],0x0        # 0x42233c
  408408:	jmp    0x408391
  40840a:	nop    WORD PTR [rax+rax*1+0x0]
  408410:	mov    DWORD PTR [rip+0x19f1a],0x1        # 0x422334
  40841a:	jmp    0x408391
  40841f:	nop
  408420:	mov    DWORD PTR [rip+0x19f02],0x1        # 0x42232c
  40842a:	jmp    0x408391
  40842f:	nop
  408430:	mov    DWORD PTR [rip+0x19eee],0x1        # 0x422328
  40843a:	jmp    0x408391
  40843f:	nop
  408440:	mov    DWORD PTR [rip+0x1970a],0x0        # 0x421b54
  40844a:	jmp    0x408391
  40844f:	nop
  408450:	mov    rax,QWORD PTR [r13+0x0]
  408454:	mov    QWORD PTR [rip+0x19e95],rax        # 0x4222f0
  40845b:	jmp    0x408391
  408460:	mov    DWORD PTR [rip+0x19eb6],0x0        # 0x422320
  40846a:	jmp    0x408391
  40846f:	nop
  408470:	mov    DWORD PTR [rip+0x196da],0x1        # 0x421b54
  40847a:	jmp    0x408391
  40847f:	nop
  408480:	mov    rax,QWORD PTR [r12]
  408484:	mov    QWORD PTR [rip+0x195b5],rax        # 0x421a40
  40848b:	jmp    0x408391
  408490:	xor    edx,edx
  408492:	cmp    QWORD PTR [rip+0x195e6],0x0        # 0x421a80
  40849a:	lea    rcx,[rip+0x195df]        # 0x421a80
  4084a1:	lea    rax,[rip+0x195e0]        # 0x421a88
  4084a8:	mov    r8d,0x1
  4084ae:	je     0x4084cb
  4084b0:	add    rax,0x8
  4084b4:	add    edx,0x1
  4084b7:	cmp    QWORD PTR [rax-0x8],0x0
  4084bc:	jne    0x4084b0
  4084be:	cmp    edx,0x19
  4084c1:	je     0x408686
  4084c7:	lea    r8d,[rdx+0x1]
  4084cb:	mov    rax,QWORD PTR [r14]
  4084ce:	test   rax,rax
  4084d1:	je     0x4084dc
  4084d3:	cmp    BYTE PTR [rax],0x0
  4084d6:	jne    0x4085d5
  4084dc:	mov    QWORD PTR [rsp+0x38],rcx
  4084e1:	mov    DWORD PTR [rsp+0x34],edx
  4084e5:	mov    DWORD PTR [rsp+0x30],r8d
  4084ea:	call   0x407e70
  4084ef:	movsxd rdx,DWORD PTR [rsp+0x34]
  4084f4:	mov    rcx,QWORD PTR [rsp+0x38]
  4084f9:	mov    r8d,DWORD PTR [rsp+0x30]
  4084fe:	mov    QWORD PTR [rcx+rdx*8],rax
  408502:	movsxd r8,r8d
  408505:	mov    QWORD PTR [rcx+r8*8],0x0
  40850d:	jmp    0x408391
  408512:	mov    QWORD PTR [rip+0x19dd3],0x0        # 0x4222f0
  40851d:	mov    DWORD PTR [rip+0x19dd9],0x65        # 0x422300
  408527:	jmp    0x408391
  40852c:	nop    DWORD PTR [rax+0x0]
  408530:	mov    rcx,QWORD PTR [r15]
  408533:	call   0x4065e0
  408538:	test   eax,eax
  40853a:	js     0x4086a2
  408540:	mov    QWORD PTR [rip+0x19da5],0x0        # 0x4222f0
  40854b:	jmp    0x408391
  408550:	mov    DWORD PTR [rip+0x19dde],0x1        # 0x422338
  40855a:	jmp    0x408391
  40855f:	nop
  408560:	call   0x4082f0
  408565:	mov    ecx,0x3
  40856a:	call   0x416058
  40856f:	nop
  408570:	mov    DWORD PTR [rip+0x19db6],0x1        # 0x422330
  40857a:	jmp    0x408391
  40857f:	nop
  408580:	call   0x407d70
  408585:	mov    DWORD PTR [rip+0x19d95],0x1        # 0x422324
  40858f:	jmp    0x408391
  408594:	mov    rax,QWORD PTR [rip+0x13995]        # 0x41bf30
  40859b:	lea    edx,[rsi-0x2]
  40859e:	movsxd rax,DWORD PTR [rax]
  4085a1:	cmp    edx,eax
  4085a3:	je     0x408638
  4085a9:	sub    esi,0x1
  4085ac:	cmp    eax,esi
  4085ae:	je     0x40860e
  4085b0:	cmp    edx,eax
  4085b2:	jle    0x4085f6
  4085b4:	call   QWORD PTR [rip+0x1af0e]        # 0x4234c8
  4085ba:	lea    rdx,[rip+0x1168f]        # 0x419c50
  4085c1:	lea    rcx,[rax+0x60]
  4085c5:	call   0x401540
  4085ca:	nop    WORD PTR [rax+rax*1+0x0]
  4085d0:	call   0x407dd0
  4085d5:	movsxd rdx,edx
  4085d8:	mov    QWORD PTR [rcx+rdx*8],rax
  4085dc:	jmp    0x408502
  4085e1:	mov    ebx,DWORD PTR [rip+0x19d51]        # 0x422338
  4085e7:	test   ebx,ebx
  4085e9:	je     0x408594
  4085eb:	mov    rax,QWORD PTR [rip+0x1393e]        # 0x41bf30
  4085f2:	cmp    DWORD PTR [rax],esi
  4085f4:	jne    0x40866b
  4085f6:	mov    ebx,0x1
  4085fb:	mov    eax,ebx
  4085fd:	add    rsp,0x58
  408601:	pop    rbx
  408602:	pop    rsi
  408603:	pop    rdi
  408604:	pop    rbp
  408605:	pop    r12
  408607:	pop    r13
  408609:	pop    r14
  40860b:	pop    r15
  40860d:	ret    
  40860e:	mov    rax,QWORD PTR [rdi+rax*8]
  408612:	mov    rdi,QWORD PTR [rsp+0xb0]
  40861a:	mov    DWORD PTR [rip+0x19d04],0x1        # 0x422328
  408624:	mov    QWORD PTR [rdi],rax
  408627:	mov    rax,QWORD PTR [rsp+0xb8]
  40862f:	mov    QWORD PTR [rax],0x0
  408636:	jmp    0x4085fb
  408638:	movsxd rdx,edx
  40863b:	mov    rsi,QWORD PTR [rsp+0xb0]
  408643:	mov    DWORD PTR [rip+0x19cdb],0x1        # 0x422328
  40864d:	mov    rax,QWORD PTR [rdi+rdx*8]
  408651:	mov    QWORD PTR [rsi],rax
  408654:	mov    rcx,QWORD PTR [rdi+rdx*8+0x8]
  408659:	call   0x4019f0
  40865e:	mov    rdi,QWORD PTR [rsp+0xb8]
  408666:	mov    QWORD PTR [rdi],rax
  408669:	jmp    0x4085fb
  40866b:	call   QWORD PTR [rip+0x1ae57]        # 0x4234c8
  408671:	lea    rdx,[rip+0x11598]        # 0x419c10
  408678:	lea    rcx,[rax+0x60]
  40867c:	call   0x401540
  408681:	call   0x407dd0
  408686:	call   QWORD PTR [rip+0x1ae3c]        # 0x4234c8
  40868c:	lea    rdx,[rip+0x1154d]        # 0x419be0
  408693:	lea    rcx,[rax+0x60]
  408697:	mov    r8d,0x19
  40869d:	call   0x401540
  4086a2:	mov    ecx,0x3
  4086a7:	call   0x416058
  4086ac:	nop
  4086ad:	nop    DWORD PTR [rax]
  4086b0:	push   rbx
  4086b1:	sub    rsp,0x20
  4086b5:	test   ecx,ecx
  4086b7:	js     0x4086e0
  4086b9:	test   ecx,ecx
  4086bb:	mov    ebx,ecx
  4086bd:	je     0x4086cf
  4086bf:	nop
  4086c0:	mov    ecx,0x20
  4086c5:	call   0x415fc8
  4086ca:	sub    ebx,0x1
  4086cd:	jne    0x4086c0
  4086cf:	lea    rcx,[rip+0x11786]        # 0x419e5c
  4086d6:	add    rsp,0x20
  4086da:	pop    rbx
  4086db:	jmp    0x415fc0
  4086e0:	add    rsp,0x20
  4086e4:	pop    rbx
  4086e5:	ret    
  4086e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086f0:	push   rbp
  4086f1:	push   rdi
  4086f2:	push   rsi
  4086f3:	push   rbx
  4086f4:	sub    rsp,0x38
  4086f8:	mov    eax,DWORD PTR [rip+0x19c22]        # 0x422320
  4086fe:	mov    rdi,rcx
  408701:	mov    rbx,rdx
  408704:	mov    ebp,r8d
  408707:	test   eax,eax
  408709:	je     0x408740
  40870b:	mov    edx,0x3b
  408710:	mov    rcx,rbx
  408713:	call   0x415f90
  408718:	test   rax,rax
  40871b:	je     0x408740
  40871d:	lea    rcx,[rip+0x1173a]        # 0x419e5e
  408724:	call   0x401590
  408729:	mov    eax,0x1
  40872e:	add    rsp,0x38
  408732:	pop    rbx
  408733:	pop    rsi
  408734:	pop    rdi
  408735:	pop    rbp
  408736:	ret    
  408737:	nop    WORD PTR [rax+rax*1+0x0]
  408740:	lea    r9,[rsp+0x24]
  408745:	lea    r8,[rsp+0x28]
  40874a:	mov    rdx,rbx
  40874d:	mov    rcx,rdi
  408750:	call   0x40aa90
  408755:	test   eax,eax
  408757:	mov    esi,eax
  408759:	je     0x4087d0
  40875b:	test   ebp,ebp
  40875d:	js     0x408870
  408763:	cmp    eax,0x7
  408766:	je     0x408830
  40876c:	movsxd rax,DWORD PTR [rsp+0x24]
  408771:	test   eax,eax
  408773:	jle    0x408820
  408779:	add    rax,rbx
  40877c:	mov    rcx,rbx
  40877f:	movzx  edi,BYTE PTR [rax]
  408782:	mov    BYTE PTR [rax],0x0
  408785:	call   0x415f68
  40878a:	lea    ecx,[rbp+rax*1-0x1]
  40878e:	call   0x4086b0
  408793:	movsxd rax,DWORD PTR [rsp+0x24]
  408798:	mov    BYTE PTR [rbx+rax*1],dil
  40879c:	mov    rdx,QWORD PTR [rsp+0x28]
  4087a1:	lea    rcx,[rip+0x103b0]        # 0x418b58
  4087a8:	call   0x401590
  4087ad:	cmp    esi,0x7
  4087b0:	je     0x40884f
  4087b6:	mov    ecx,0xa
  4087bb:	call   0x415fc8
  4087c0:	mov    eax,0x1
  4087c5:	add    rsp,0x38
  4087c9:	pop    rbx
  4087ca:	pop    rsi
  4087cb:	pop    rdi
  4087cc:	pop    rbp
  4087cd:	ret    
  4087ce:	xchg   ax,ax
  4087d0:	mov    rcx,rdi
  4087d3:	call   0x4054e0
  4087d8:	mov    ebx,eax
  4087da:	xor    eax,eax
  4087dc:	test   ebx,ebx
  4087de:	je     0x40872e
  4087e4:	lea    rax,[rip+0xeb95]        # 0x417380
  4087eb:	movsxd rdx,ebx
  4087ee:	lea    rcx,[rip+0x10363]        # 0x418b58
  4087f5:	mov    rdx,QWORD PTR [rax+rdx*8]
  4087f9:	call   0x401590
  4087fe:	cmp    ebx,0x7
  408801:	jne    0x4087b6
  408803:	mov    rdx,QWORD PTR [rip+0x16866]        # 0x41f070
  40880a:	lea    rcx,[rip+0x11674]        # 0x419e85
  408811:	call   0x401590
  408816:	jmp    0x4087b6
  408818:	nop    DWORD PTR [rax+rax*1+0x0]
  408820:	mov    ecx,ebp
  408822:	call   0x4086b0
  408827:	jmp    0x40879c
  40882c:	nop    DWORD PTR [rax+0x0]
  408830:	cmp    QWORD PTR [rip+0x16838],0x0        # 0x41f070
  408838:	je     0x40876c
  40883e:	mov    rdx,QWORD PTR [rsp+0x28]
  408843:	lea    rcx,[rip+0x1030e]        # 0x418b58
  40884a:	call   0x401590
  40884f:	mov    rdx,QWORD PTR [rip+0x1681a]        # 0x41f070
  408856:	test   rdx,rdx
  408859:	je     0x4087b6
  40885f:	lea    rcx,[rip+0x1161f]        # 0x419e85
  408866:	call   0x401590
  40886b:	jmp    0x4087b6
  408870:	lea    rcx,[rip+0x115fe]        # 0x419e75
  408877:	mov    rdx,rbx
  40887a:	call   0x401590
  40887f:	jmp    0x40879c
  408884:	xchg   ax,ax
  408886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408890:	push   r15
  408892:	push   r14
  408894:	mov    eax,0x1318
  408899:	push   r13
  40889b:	push   r12
  40889d:	push   rbp
  40889e:	push   rdi
  40889f:	push   rsi
  4088a0:	push   rbx
  4088a1:	call   0x40cbf0
  4088a6:	sub    rsp,rax
  4088a9:	movsd  xmm0,QWORD PTR [rip+0x1230f]        # 0x41abc0
  4088b1:	cmp    edx,0xfffffffe
  4088b4:	mov    QWORD PTR [rsp+0x1360],rcx
  4088bc:	mov    r12d,edx
  4088bf:	setne  r14b
  4088c3:	test   rcx,rcx
  4088c6:	movsd  QWORD PTR [rsp+0x670],xmm0
  4088cf:	mov    QWORD PTR [rsp+0x350],0x0
  4088db:	mov    QWORD PTR [rsp+0x30],0x0
  4088e4:	movsd  QWORD PTR [rsp+0xcc0],xmm0
  4088ed:	mov    QWORD PTR [rsp+0x9a0],0x0
  4088f9:	movsd  QWORD PTR [rsp+0x1308],xmm0
  408902:	mov    QWORD PTR [rsp+0x680],0x0
  40890e:	mov    QWORD PTR [rsp+0xfe8],0x0
  40891a:	mov    QWORD PTR [rsp+0xcc8],0x0
  408926:	je     0x408b5f
  40892c:	lea    r13,[rsp+0x680]
  408934:	lea    rax,[rsp+0x30]
  408939:	mov    rsi,QWORD PTR [rsp+0x1360]
  408941:	xor    ebp,ebp
  408943:	mov    QWORD PTR [rsp+0x28],rax
  408948:	lea    r15,[r13+0x648]
  40894f:	jmp    0x4089de
  408954:	movsxd rdi,ebp
  408957:	xor    r9d,r9d
  40895a:	xor    r8d,r8d
  40895d:	imul   rdi,rdi,0x648
  408964:	mov    rdx,rsi
  408967:	add    rdi,r13
  40896a:	mov    rcx,rdi
  40896d:	call   0x40aa90
  408972:	test   eax,eax
  408974:	jne    0x408a50
  40897a:	mov    rcx,rdi
  40897d:	call   0x4054e0
  408982:	test   eax,eax
  408984:	jne    0x408a50
  40898a:	mov    rdx,QWORD PTR [rsp+0x28]
  40898f:	lea    r8,[rip+0xffffffffffff91da]        # 0x401b70
  408996:	mov    rcx,rdi
  408999:	call   0x405490
  40899e:	test   eax,eax
  4089a0:	jne    0x408a50
  4089a6:	test   ebp,ebp
  4089a8:	jne    0x408a80
  4089ae:	test   rbx,rbx
  4089b1:	je     0x408aa7
  4089b7:	test   r12d,r12d
  4089ba:	js     0x4089c9
  4089bc:	mov    rcx,rsi
  4089bf:	call   0x415f68
  4089c4:	lea    r12d,[r12+rax*1+0x1]
  4089c9:	mov    BYTE PTR [rbx],0x3b
  4089cc:	add    rbx,0x1
  4089d0:	mov    ebp,0x1
  4089d5:	mov    rsi,rbx
  4089d8:	je     0x408aa7
  4089de:	mov    edx,0x3b
  4089e3:	mov    rcx,rsi
  4089e6:	call   0x415f90
  4089eb:	test   rax,rax
  4089ee:	mov    rbx,rax
  4089f1:	je     0x4089f6
  4089f3:	mov    BYTE PTR [rax],0x0
  4089f6:	lea    rdx,[rip+0xf689]        # 0x418086
  4089fd:	mov    rcx,rsi
  408a00:	call   0x415f40
  408a05:	cmp    BYTE PTR [rsi+rax*1],0x0
  408a09:	je     0x408ab3
  408a0f:	test   r14b,r14b
  408a12:	je     0x408954
  408a18:	movsxd rcx,ebp
  408a1b:	mov    r8d,r12d
  408a1e:	mov    rdx,rsi
  408a21:	imul   rcx,rcx,0x648
  408a28:	add    rcx,r13
  408a2b:	call   0x4086f0
  408a30:	test   eax,eax
  408a32:	je     0x4089a6
  408a38:	lea    rcx,[rip+0x1146a]        # 0x419ea9
  408a3f:	mov    rdx,rsi
  408a42:	call   0x401590
  408a47:	nop    WORD PTR [rax+rax*1+0x0]
  408a50:	mov    rcx,r13
  408a53:	call   0x404a30
  408a58:	lea    rcx,[r13+0x648]
  408a5f:	call   0x404a30
  408a64:	mov    eax,0x1
  408a69:	add    rsp,0x1318
  408a70:	pop    rbx
  408a71:	pop    rsi
  408a72:	pop    rdi
  408a73:	pop    rbp
  408a74:	pop    r12
  408a76:	pop    r13
  408a78:	pop    r14
  408a7a:	pop    r15
  408a7c:	ret    
  408a7d:	nop    DWORD PTR [rax]
  408a80:	lea    r8,[rip+0xffffffffffff90a9]        # 0x401b30
  408a87:	mov    rdx,r15
  408a8a:	mov    rcx,r13
  408a8d:	call   0x405490
  408a92:	test   eax,eax
  408a94:	jne    0x408af2
  408a96:	mov    rcx,r15
  408a99:	call   0x404a30
  408a9e:	test   rbx,rbx
  408aa1:	jne    0x4089b7
  408aa7:	mov    rcx,r13
  408aaa:	call   0x404a30
  408aaf:	xor    eax,eax
  408ab1:	jmp    0x408a69
  408ab3:	test   rbx,rbx
  408ab6:	je     0x408aa7
  408ab8:	test   r14b,r14b
  408abb:	jne    0x408acc
  408abd:	mov    rcx,r13
  408ac0:	call   0x404a30
  408ac5:	mov    eax,0x1
  408aca:	jmp    0x408a69
  408acc:	mov    ecx,r12d
  408acf:	call   0x4086b0
  408ad4:	lea    rcx,[rip+0x113b0]        # 0x419e8b
  408adb:	call   0x415fc0
  408ae0:	mov    rcx,r13
  408ae3:	call   0x404a30
  408ae8:	mov    eax,0x1
  408aed:	jmp    0x408a69
  408af2:	test   r14b,r14b
  408af5:	je     0x408a50
  408afb:	mov    rcx,QWORD PTR [rsp+0x1360]
  408b03:	mov    edx,0x3b
  408b08:	mov    ebx,DWORD PTR [rip+0x1982e]        # 0x42233c
  408b0e:	mov    DWORD PTR [rip+0x19824],0x2        # 0x42233c
  408b18:	call   0x415f90
  408b1d:	mov    rcx,QWORD PTR [rsp+0x1360]
  408b25:	mov    BYTE PTR [rax],0x0
  408b28:	call   0x402140
  408b2d:	mov    rcx,rsi
  408b30:	mov    rdi,rax
  408b33:	call   0x402140
  408b38:	mov    ecx,r12d
  408b3b:	mov    rsi,rax
  408b3e:	call   0x4086b0
  408b43:	mov    r9,r15
  408b46:	mov    r8,rsi
  408b49:	mov    rdx,r13
  408b4c:	mov    rcx,rdi
  408b4f:	call   0x406470
  408b54:	mov    DWORD PTR [rip+0x197e2],ebx        # 0x42233c
  408b5a:	jmp    0x408a50
  408b5f:	lea    r13,[rsp+0x680]
  408b67:	jmp    0x408aa7
  408b6c:	nop    DWORD PTR [rax+0x0]
  408b70:	push   rsi
  408b71:	push   rbx
  408b72:	sub    rsp,0x38
  408b76:	mov    eax,DWORD PTR [rip+0x197a4]        # 0x422320
  408b7c:	mov    rsi,rcx
  408b7f:	mov    rbx,rdx
  408b82:	test   eax,eax
  408b84:	je     0x408bb3
  408b86:	mov    edx,0x3b
  408b8b:	mov    rcx,rbx
  408b8e:	mov    DWORD PTR [rsp+0x2c],r8d
  408b93:	call   0x415f90
  408b98:	test   rax,rax
  408b9b:	mov    r8d,DWORD PTR [rsp+0x2c]
  408ba0:	je     0x408bb3
  408ba2:	mov    edx,r8d
  408ba5:	mov    rcx,rbx
  408ba8:	add    rsp,0x38
  408bac:	pop    rbx
  408bad:	pop    rsi
  408bae:	jmp    0x408890
  408bb3:	mov    rdx,rbx
  408bb6:	mov    rcx,rsi
  408bb9:	add    rsp,0x38
  408bbd:	pop    rbx
  408bbe:	pop    rsi
  408bbf:	jmp    0x4086f0
  408bc4:	xchg   ax,ax
  408bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408bd0:	push   rdi
  408bd1:	push   rsi
  408bd2:	push   rbx
  408bd3:	sub    rsp,0x20
  408bd7:	mov    rbx,QWORD PTR [rip+0x1646a]        # 0x41f048
  408bde:	mov    edi,ecx
  408be0:	test   rbx,rbx
  408be3:	jne    0x408c53
  408be5:	jmp    0x408c81
  408bea:	nop    WORD PTR [rax+rax*1+0x0]
  408bf0:	mov    rcx,QWORD PTR [rbx+0x8]
  408bf4:	mov    edx,0xfffffffe
  408bf9:	call   0x408890
  408bfe:	test   eax,eax
  408c00:	jne    0x408c70
  408c02:	mov    rsi,QWORD PTR [rbx]
  408c05:	mov    rcx,rsi
  408c08:	call   0x401a90
  408c0d:	test   rax,rax
  408c10:	je     0x408c24
  408c12:	lea    rcx,[rip+0x112e7]        # 0x419f00
  408c19:	mov    rdx,rsi
  408c1c:	call   0x401590
  408c21:	mov    rsi,QWORD PTR [rbx]
  408c24:	mov    rcx,rsi
  408c27:	call   0x415f68
  408c2c:	mov    rcx,rsi
  408c2f:	mov    edx,eax
  408c31:	call   0x401f80
  408c36:	test   rax,rax
  408c39:	je     0x408c4a
  408c3b:	lea    rcx,[rip+0x112ee]        # 0x419f30
  408c42:	mov    rdx,rsi
  408c45:	call   0x401590
  408c4a:	mov    rbx,QWORD PTR [rbx+0x10]
  408c4e:	test   rbx,rbx
  408c51:	je     0x408c81
  408c53:	test   edi,edi
  408c55:	je     0x408bf0
  408c57:	mov    rdx,QWORD PTR [rbx]
  408c5a:	lea    rcx,[rip+0x11266]        # 0x419ec7
  408c61:	call   0x401590
  408c66:	jmp    0x408bf0
  408c68:	nop    DWORD PTR [rax+rax*1+0x0]
  408c70:	mov    rdx,QWORD PTR [rbx]
  408c73:	lea    rcx,[rip+0x11266]        # 0x419ee0
  408c7a:	call   0x401590
  408c7f:	jmp    0x408c02
  408c81:	add    rsp,0x20
  408c85:	pop    rbx
  408c86:	pop    rsi
  408c87:	pop    rdi
  408c88:	ret    
  408c89:	nop    DWORD PTR [rax+0x0]
  408c90:	push   r14
  408c92:	push   r13
  408c94:	mov    eax,0x1310
  408c99:	push   r12
  408c9b:	push   rbp
  408c9c:	push   rdi
  408c9d:	push   rsi
  408c9e:	push   rbx
  408c9f:	call   0x40cbf0
  408ca4:	sub    rsp,rax
  408ca7:	mov    rbx,QWORD PTR [rip+0x163ba]        # 0x41f068
  408cae:	movsd  xmm0,QWORD PTR [rip+0x11f0a]        # 0x41abc0
  408cb6:	mov    edi,ecx
  408cb8:	mov    QWORD PTR [rsp+0xfe0],0x0
  408cc4:	mov    QWORD PTR [rsp+0xcc0],0x0
  408cd0:	movsd  QWORD PTR [rsp+0x1300],xmm0
  408cd9:	test   rbx,rbx
  408cdc:	je     0x408cf1
  408cde:	mov    rcx,rbx
  408ce1:	mov    edx,edi
  408ce3:	call   0x407460
  408ce8:	mov    rbx,QWORD PTR [rbx+0x70]
  408cec:	test   rbx,rbx
  408cef:	jne    0x408cde
  408cf1:	lea    rbp,[rip+0x192c8]        # 0x421fc0
  408cf8:	lea    r14,[rip+0x195e9]        # 0x4222e8
  408cff:	lea    rsi,[rsp+0x20]
  408d04:	lea    r13,[rsp+0xcc0]
  408d0c:	lea    r12,[rsp+0x670]
  408d14:	mov    ecx,edi
  408d16:	call   0x408bd0
  408d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d20:	mov    rbx,QWORD PTR [rbp+0x0]
  408d24:	test   rbx,rbx
  408d27:	jne    0x408d89
  408d29:	jmp    0x408e40
  408d2e:	xchg   ax,ax
  408d30:	mov    rdx,QWORD PTR [rbx]
  408d33:	xor    r9d,r9d
  408d36:	xor    r8d,r8d
  408d39:	mov    rcx,rsi
  408d3c:	call   0x40aa90
  408d41:	test   eax,eax
  408d43:	jne    0x408d51
  408d45:	mov    rcx,rsi
  408d48:	call   0x4054e0
  408d4d:	test   eax,eax
  408d4f:	je     0x408da0
  408d51:	mov    rcx,QWORD PTR [rbx]
  408d54:	call   0x402220
  408d59:	test   rax,rax
  408d5c:	je     0x408e20
  408d62:	mov    rdx,QWORD PTR [rbx]
  408d65:	lea    rcx,[rip+0x11204]        # 0x419f70
  408d6c:	mov    r8,rdx
  408d6f:	call   0x401590
  408d74:	mov    rcx,rsi
  408d77:	call   0x404a30
  408d7c:	mov    rbx,QWORD PTR [rbx+0x20]
  408d80:	test   rbx,rbx
  408d83:	je     0x408e40
  408d89:	test   edi,edi
  408d8b:	je     0x408d30
  408d8d:	mov    rdx,QWORD PTR [rbx]
  408d90:	lea    rcx,[rip+0x111c6]        # 0x419f5d
  408d97:	call   0x401590
  408d9c:	jmp    0x408d30
  408d9e:	xchg   ax,ax
  408da0:	lea    r8,[rip+0xffffffffffff8dc9]        # 0x401b70
  408da7:	mov    rdx,r13
  408daa:	mov    rcx,rsi
  408dad:	call   0x405490
  408db2:	test   eax,eax
  408db4:	jne    0x408d51
  408db6:	mov    ecx,DWORD PTR [rip+0x18d98]        # 0x421b54
  408dbc:	mov    rdx,QWORD PTR [rbx]
  408dbf:	xor    eax,eax
  408dc1:	test   ecx,ecx
  408dc3:	mov    rcx,r12
  408dc6:	sete   al
  408dc9:	xor    r9d,r9d
  408dcc:	xor    r8d,r8d
  408dcf:	mov    DWORD PTR [rip+0x18d7f],eax        # 0x421b54
  408dd5:	call   0x40aa90
  408dda:	mov    rcx,r12
  408ddd:	call   0x4054e0
  408de2:	lea    r8,[rip+0xffffffffffff8747]        # 0x401530
  408de9:	mov    rdx,r12
  408dec:	mov    rcx,rsi
  408def:	call   0x405490
  408df4:	test   eax,eax
  408df6:	jne    0x408f75
  408dfc:	mov    rcx,r12
  408dff:	call   0x404a30
  408e04:	mov    edx,DWORD PTR [rip+0x18d4a]        # 0x421b54
  408e0a:	xor    eax,eax
  408e0c:	test   edx,edx
  408e0e:	sete   al
  408e11:	mov    DWORD PTR [rip+0x18d3d],eax        # 0x421b54
  408e17:	jmp    0x408d74
  408e1c:	nop    DWORD PTR [rax+0x0]
  408e20:	mov    r8,QWORD PTR [rbx+0x8]
  408e24:	mov    rdx,QWORD PTR [rbx]
  408e27:	lea    rcx,[rip+0x1116a]        # 0x419f98
  408e2e:	call   0x401590
  408e33:	jmp    0x408d74
  408e38:	nop    DWORD PTR [rax+rax*1+0x0]
  408e40:	add    rbp,0x8
  408e44:	cmp    rbp,r14
  408e47:	jne    0x408d20
  408e4d:	lea    rbp,[rip+0x18d2c]        # 0x421b80
  408e54:	lea    r13,[rip+0x19125]        # 0x421f80
  408e5b:	lea    rsi,[rsp+0x20]
  408e60:	lea    r12,[rsp+0xcc0]
  408e68:	nop    DWORD PTR [rax+rax*1+0x0]
  408e70:	mov    rbx,QWORD PTR [rbp+0x0]
  408e74:	test   rbx,rbx
  408e77:	jne    0x408ec7
  408e79:	jmp    0x408f40
  408e7e:	xchg   ax,ax
  408e80:	mov    rdx,QWORD PTR [rbx+0x8]
  408e84:	xor    r9d,r9d
  408e87:	xor    r8d,r8d
  408e8a:	mov    rcx,rsi
  408e8d:	call   0x40aa90
  408e92:	test   eax,eax
  408e94:	jne    0x408ea2
  408e96:	mov    rcx,rsi
  408e99:	call   0x4054e0
  408e9e:	test   eax,eax
  408ea0:	je     0x408ee0
  408ea2:	mov    rdx,QWORD PTR [rbx+0x8]
  408ea6:	mov    r8,QWORD PTR [rbx+0x10]
  408eaa:	lea    rcx,[rip+0x1114f]        # 0x41a000
  408eb1:	call   0x401590
  408eb6:	mov    rcx,rsi
  408eb9:	call   0x404a30
  408ebe:	mov    rbx,QWORD PTR [rbx+0x30]
  408ec2:	test   rbx,rbx
  408ec5:	je     0x408f40
  408ec7:	test   edi,edi
  408ec9:	je     0x408e80
  408ecb:	mov    rdx,QWORD PTR [rbx+0x8]
  408ecf:	lea    rcx,[rip+0x11087]        # 0x419f5d
  408ed6:	call   0x401590
  408edb:	jmp    0x408e80
  408edd:	nop    DWORD PTR [rax]
  408ee0:	lea    r8,[rip+0xffffffffffff8c89]        # 0x401b70
  408ee7:	mov    rdx,r12
  408eea:	mov    rcx,rsi
  408eed:	call   0x405490
  408ef2:	test   eax,eax
  408ef4:	jne    0x408ea2
  408ef6:	mov    r8,QWORD PTR [rbx+0x10]
  408efa:	movzx  eax,BYTE PTR [r8]
  408efe:	test   al,al
  408f00:	je     0x408eb6
  408f02:	mov    r9,r8
  408f05:	xor    edx,edx
  408f07:	jmp    0x408f28
  408f09:	nop    DWORD PTR [rax+0x0]
  408f10:	cmp    al,0x28
  408f12:	je     0x408f31
  408f14:	test   edx,edx
  408f16:	jne    0x408f1c
  408f18:	cmp    al,0x2f
  408f1a:	je     0x408f60
  408f1c:	add    r9,0x1
  408f20:	movzx  eax,BYTE PTR [r9]
  408f24:	test   al,al
  408f26:	je     0x408eb6
  408f28:	cmp    al,0x29
  408f2a:	jne    0x408f10
  408f2c:	sub    edx,0x1
  408f2f:	jmp    0x408f1c
  408f31:	add    edx,0x1
  408f34:	jmp    0x408f1c
  408f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f40:	add    rbp,0x8
  408f44:	cmp    rbp,r13
  408f47:	jne    0x408e70
  408f4d:	add    rsp,0x1310
  408f54:	pop    rbx
  408f55:	pop    rsi
  408f56:	pop    rdi
  408f57:	pop    rbp
  408f58:	pop    r12
  408f5a:	pop    r13
  408f5c:	pop    r14
  408f5e:	ret    
  408f5f:	nop
  408f60:	mov    rdx,QWORD PTR [rbx+0x8]
  408f64:	lea    rcx,[rip+0x110bd]        # 0x41a028
  408f6b:	call   0x401590
  408f70:	jmp    0x408eb6
  408f75:	mov    rdx,QWORD PTR [rbx]
  408f78:	lea    rcx,[rip+0x11041]        # 0x419fc0
  408f7f:	call   0x401590
  408f84:	jmp    0x408dfc
  408f89:	nop    DWORD PTR [rax+0x0]
  408f90:	push   r15
  408f92:	push   r14
  408f94:	push   r13
  408f96:	push   r12
  408f98:	push   rbp
  408f99:	push   rdi
  408f9a:	push   rsi
  408f9b:	push   rbx
  408f9c:	sub    rsp,0xd78
  408fa3:	movaps XMMWORD PTR [rsp+0xce0],xmm6
  408fab:	movaps XMMWORD PTR [rsp+0xcf0],xmm7
  408fb3:	movaps XMMWORD PTR [rsp+0xd00],xmm8
  408fbc:	movaps XMMWORD PTR [rsp+0xd10],xmm9
  408fc5:	movaps XMMWORD PTR [rsp+0xd20],xmm10
  408fce:	movaps XMMWORD PTR [rsp+0xd30],xmm11
  408fd7:	movaps XMMWORD PTR [rsp+0xd40],xmm12
  408fe0:	movaps XMMWORD PTR [rsp+0xd50],xmm13
  408fe9:	movaps XMMWORD PTR [rsp+0xd60],xmm14
  408ff2:	mov    r14,rdx
  408ff5:	mov    r12,r8
  408ff8:	movsd  xmm2,QWORD PTR [rip+0x11bc0]        # 0x41abc0
  409000:	mov    QWORD PTR [rsp+0xdc0],rcx
  409008:	mov    rcx,r8
  40900b:	mov    QWORD PTR [rsp+0x360],0x0
  409017:	mov    QWORD PTR [rsp+0x40],0x0
  409020:	movsd  QWORD PTR [rsp+0x680],xmm2
  409029:	movsd  xmm6,QWORD PTR [rdx+0x640]
  409031:	call   0x415f68
  409036:	mov    r9d,DWORD PTR [rip+0x192ef]        # 0x42232c
  40903d:	test   r9d,r9d
  409040:	je     0x409070
  409042:	lea    rax,[r12+rax*1-0x1]
  409047:	cmp    BYTE PTR [rax],0x3b
  40904a:	je     0x4094cd
  409050:	mov    edx,0x3b
  409055:	mov    rcx,r12
  409058:	call   0x415f48
  40905d:	test   rax,rax
  409060:	je     0x409070
  409062:	lea    r15,[rax+0x1]
  409066:	jmp    0x409073
  409068:	nop    DWORD PTR [rax+rax*1+0x0]
  409070:	xor    r15d,r15d
  409073:	pxor   xmm8,xmm8
  409078:	xor    r13d,r13d
  40907b:	mov    edi,0x1
  409080:	movsd  xmm13,QWORD PTR [rip+0x11b87]        # 0x41ac10
  409089:	xor    esi,esi
  40908b:	lea    rbp,[rsp+0x40]
  409090:	movsd  xmm9,QWORD PTR [rip+0x11b27]        # 0x41abc0
  409099:	movapd xmm12,xmm8
  40909e:	movapd xmm14,xmm13
  4090a3:	movsd  xmm11,QWORD PTR [rip+0x11b24]        # 0x41abd0
  4090ac:	movsd  xmm10,QWORD PTR [rip+0x11b2b]        # 0x41abe0
  4090b5:	jmp    0x4090f9
  4090b7:	nop    WORD PTR [rax+rax*1+0x0]
  4090c0:	test   edi,edi
  4090c2:	je     0x409350
  4090c8:	mov    rcx,QWORD PTR [rip+0x19221]        # 0x4222f0
  4090cf:	movapd xmm1,xmm7
  4090d3:	movq   rdx,xmm7
  4090d8:	mov    r13d,0x1
  4090de:	call   0x401590
  4090e3:	mov    rcx,rbp
  4090e6:	xor    edi,edi
  4090e8:	call   0x404a30
  4090ed:	test   rbx,rbx
  4090f0:	je     0x4091fa
  4090f6:	mov    r12,rbx
  4090f9:	mov    edx,0x3b
  4090fe:	mov    rcx,r12
  409101:	call   0x415f90
  409106:	test   rax,rax
  409109:	je     0x409340
  40910f:	lea    rbx,[rax+0x1]
  409113:	mov    BYTE PTR [rax],0x0
  409116:	mov    rcx,r12
  409119:	call   0x402140
  40911e:	cmp    BYTE PTR [rax],0x0
  409121:	mov    r8d,0xffffffff
  409127:	mov    rcx,rbp
  40912a:	cmovne rsi,rax
  40912e:	mov    rdx,rsi
  409131:	call   0x4086f0
  409136:	test   eax,eax
  409138:	mov    r12d,eax
  40913b:	jne    0x409458
  409141:	test   edi,edi
  409143:	jne    0x4092b0
  409149:	test   rbx,rbx
  40914c:	je     0x409270
  409152:	movsd  xmm7,QWORD PTR [rsp+0x680]
  40915b:	lea    rdx,[rsp+0x38]
  409160:	divsd  xmm6,xmm7
  409164:	movapd xmm0,xmm6
  409168:	call   0x40cec0
  40916d:	movapd xmm6,xmm0
  409171:	xor    edx,edx
  409173:	mulsd  xmm6,xmm7
  409177:	movapd xmm0,xmm6
  40917b:	divsd  xmm0,xmm7
  40917f:	call   0x406df0
  409184:	ucomisd xmm0,xmm9
  409189:	jp     0x409243
  40918f:	jne    0x409243
  409195:	movsd  xmm7,QWORD PTR [rsp+0x38]
  40919b:	movapd xmm6,xmm8
  4091a0:	addsd  xmm7,xmm9
  4091a5:	movsd  QWORD PTR [rsp+0x38],xmm7
  4091ab:	mov    edx,DWORD PTR [rip+0x1918b]        # 0x42233c
  4091b1:	test   edx,edx
  4091b3:	je     0x4090c0
  4091b9:	ucomisd xmm7,xmm8
  4091be:	jp     0x4091c6
  4091c0:	je     0x4090e3
  4091c6:	test   r13d,r13d
  4091c9:	jne    0x409360
  4091cf:	movapd xmm0,xmm7
  4091d3:	mov    r8d,0x1
  4091d9:	mov    rdx,rsi
  4091dc:	xor    edi,edi
  4091de:	mov    r13d,0x1
  4091e4:	call   0x406fb0
  4091e9:	mov    rcx,rbp
  4091ec:	call   0x404a30
  4091f1:	test   rbx,rbx
  4091f4:	jne    0x4090f6
  4091fa:	test   r13d,r13d
  4091fd:	je     0x409504
  409203:	ucomisd xmm12,xmm8
  409208:	jp     0x40920c
  40920a:	je     0x409234
  40920c:	mov    eax,DWORD PTR [rip+0x1912a]        # 0x42233c
  409212:	test   eax,eax
  409214:	je     0x4094d5
  40921a:	ucomisd xmm12,xmm8
  40921f:	mov    rdx,rsi
  409222:	jbe    0x40956c
  409228:	lea    rcx,[rip+0x10e3e]        # 0x41a06d
  40922f:	call   0x401590
  409234:	mov    ecx,0xa
  409239:	call   0x415fc8
  40923e:	jmp    0x409467
  409243:	movapd xmm0,xmm6
  409247:	movsd  xmm7,QWORD PTR [rsp+0x38]
  40924d:	divsd  xmm0,QWORD PTR [r14+0x640]
  409256:	andpd  xmm0,xmm11
  40925b:	ucomisd xmm10,xmm0
  409260:	jbe    0x4091ab
  409266:	movapd xmm6,xmm8
  40926b:	jmp    0x4091ab
  409270:	movapd xmm7,xmm6
  409274:	mov    ecx,DWORD PTR [rip+0x190b2]        # 0x42232c
  40927a:	divsd  xmm7,QWORD PTR [rsp+0x680]
  409283:	test   ecx,ecx
  409285:	movsd  QWORD PTR [rsp+0x38],xmm7
  40928b:	jne    0x4091ab
  409291:	movapd xmm0,xmm7
  409295:	xor    edx,edx
  409297:	call   0x406df0
  40929c:	movapd xmm7,xmm0
  4092a0:	movsd  QWORD PTR [rsp+0x38],xmm0
  4092a6:	jmp    0x4091ab
  4092ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4092b0:	lea    r8,[rip+0xffffffffffff8879]        # 0x401b30
  4092b7:	mov    rdx,rbp
  4092ba:	mov    rcx,r14
  4092bd:	call   0x405490
  4092c2:	test   eax,eax
  4092c4:	jne    0x409442
  4092ca:	mov    r8d,DWORD PTR [rip+0x1905b]        # 0x42232c
  4092d1:	test   r8d,r8d
  4092d4:	je     0x40931c
  4092d6:	test   r15,r15
  4092d9:	movsd  QWORD PTR [rsp+0x38],xmm6
  4092df:	je     0x4092eb
  4092e1:	cmp    BYTE PTR [r15],0x0
  4092e5:	jne    0x4093c0
  4092eb:	movsd  xmm7,QWORD PTR [rsp+0x680]
  4092f4:	movapd xmm1,xmm6
  4092f8:	divsd  xmm1,xmm7
  4092fc:	addsd  xmm1,xmm13
  409301:	movapd xmm0,xmm1
  409305:	call   0x40cd10
  40930a:	mulsd  xmm0,xmm7
  40930e:	movapd xmm12,xmm0
  409313:	subsd  xmm12,xmm6
  409318:	movapd xmm6,xmm0
  40931c:	mov    eax,DWORD PTR [rip+0x1901a]        # 0x42233c
  409322:	cmp    eax,0x2
  409325:	je     0x409390
  409327:	cmp    eax,0x1
  40932a:	jne    0x409149
  409330:	mov    ecx,0x9
  409335:	call   0x415fc8
  40933a:	jmp    0x409149
  40933f:	nop
  409340:	xor    ebx,ebx
  409342:	jmp    0x409116
  409347:	nop    WORD PTR [rax+rax*1+0x0]
  409350:	mov    ecx,0x3b
  409355:	call   0x415fc8
  40935a:	jmp    0x4090c8
  40935f:	nop
  409360:	call   QWORD PTR [rip+0x1a162]        # 0x4234c8
  409366:	lea    rcx,[rip+0x10cf9]        # 0x41a066
  40936d:	lea    r9,[rax+0x30]
  409371:	mov    r8d,0x3
  409377:	mov    edx,0x1
  40937c:	call   0x416008
  409381:	jmp    0x4091cf
  409386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409390:	mov    rcx,QWORD PTR [rsp+0xdc0]
  409398:	call   0x402140
  40939d:	lea    rcx,[rip+0xf856]        # 0x418bfa
  4093a4:	mov    rdx,rax
  4093a7:	mov    QWORD PTR [rsp+0xdc0],rax
  4093af:	call   0x401590
  4093b4:	jmp    0x409149
  4093b9:	nop    DWORD PTR [rax+0x0]
  4093c0:	mov    rcx,r15
  4093c3:	call   0x402140
  4093c8:	mov    r15,rax
  4093cb:	lea    rax,[rsp+0x690]
  4093d3:	mov    r8d,0xffffffff
  4093d9:	movsd  xmm3,QWORD PTR [rip+0x117df]        # 0x41abc0
  4093e1:	mov    rdx,r15
  4093e4:	mov    rcx,rax
  4093e7:	mov    QWORD PTR [rsp+0x9b0],0x0
  4093f3:	mov    QWORD PTR [rsp+0x690],0x0
  4093ff:	movsd  QWORD PTR [rsp+0xcd0],xmm3
  409408:	mov    QWORD PTR [rsp+0x28],rax
  40940d:	call   0x4086f0
  409412:	test   eax,eax
  409414:	jne    0x40957d
  40941a:	movsd  xmm7,QWORD PTR [rsp+0xcd0]
  409423:	movapd xmm1,xmm6
  409427:	divsd  xmm1,xmm7
  40942b:	addsd  xmm1,xmm14
  409430:	movapd xmm0,xmm1
  409434:	call   0x40cd10
  409439:	mulsd  xmm0,xmm7
  40943d:	jmp    0x40930e
  409442:	mov    rcx,QWORD PTR [rsp+0xdc0]
  40944a:	mov    r9,rbp
  40944d:	mov    r8,rsi
  409450:	mov    rdx,r14
  409453:	call   0x406470
  409458:	mov    rcx,rbp
  40945b:	mov    r12d,0x1
  409461:	call   0x404a30
  409466:	nop
  409467:	movaps xmm6,XMMWORD PTR [rsp+0xce0]
  40946f:	mov    eax,r12d
  409472:	movaps xmm7,XMMWORD PTR [rsp+0xcf0]
  40947a:	movaps xmm8,XMMWORD PTR [rsp+0xd00]
  409483:	movaps xmm9,XMMWORD PTR [rsp+0xd10]
  40948c:	movaps xmm10,XMMWORD PTR [rsp+0xd20]
  409495:	movaps xmm11,XMMWORD PTR [rsp+0xd30]
  40949e:	movaps xmm12,XMMWORD PTR [rsp+0xd40]
  4094a7:	movaps xmm13,XMMWORD PTR [rsp+0xd50]
  4094b0:	movaps xmm14,XMMWORD PTR [rsp+0xd60]
  4094b9:	add    rsp,0xd78
  4094c0:	pop    rbx
  4094c1:	pop    rsi
  4094c2:	pop    rdi
  4094c3:	pop    rbp
  4094c4:	pop    r12
  4094c6:	pop    r13
  4094c8:	pop    r14
  4094ca:	pop    r15
  4094cc:	ret    
  4094cd:	mov    BYTE PTR [rax],0x0
  4094d0:	jmp    0x409050
  4094d5:	xor    eax,eax
  4094d7:	lea    rcx,[rip+0x10bd1]        # 0x41a0af
  4094de:	mov    edx,0x3b
  4094e3:	ucomisd xmm12,xmm8
  4094e8:	seta   al
  4094eb:	lea    r8d,[rax+rax*1+0x2b]
  4094f0:	call   0x401590
  4094f5:	mov    ecx,0xa
  4094fa:	call   0x415fc8
  4094ff:	jmp    0x409467
  409504:	mov    rbx,QWORD PTR [rip+0x19fbd]        # 0x4234c8
  40950b:	call   rbx
  40950d:	lea    rcx,[rip+0x10b56]        # 0x41a06a
  409514:	lea    r9,[rax+0x30]
  409518:	mov    r8d,0x2
  40951e:	mov    edx,0x1
  409523:	call   0x416008
  409528:	movsx  edx,BYTE PTR [rsi]
  40952b:	mov    rcx,QWORD PTR [rip+0xdef6]        # 0x417428
  409532:	call   0x415f90
  409537:	test   rax,rax
  40953a:	je     0x409559
  40953c:	call   rbx
  40953e:	lea    rcx,[rip+0x10b6f]        # 0x41a0b4
  409545:	lea    r9,[rax+0x30]
  409549:	mov    r8d,0x2
  40954f:	mov    edx,0x1
  409554:	call   0x416008
  409559:	call   rbx
  40955b:	lea    rdx,[rax+0x30]
  40955f:	mov    rcx,rsi
  409562:	call   0x416018
  409567:	jmp    0x409203
  40956c:	lea    rcx,[rip+0x10b1d]        # 0x41a090
  409573:	call   0x401590
  409578:	jmp    0x409234
  40957d:	mov    rcx,QWORD PTR [rsp+0x28]
  409582:	mov    r12d,0x1
  409588:	call   0x404a30
  40958d:	jmp    0x409467
  409592:	nop    DWORD PTR [rax+0x0]
  409596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4095a0:	push   rdi
  4095a1:	push   rsi
  4095a2:	push   rbx
  4095a3:	sub    rsp,0x470
  4095aa:	mov    rbx,rdx
  4095ad:	call   0x402140
  4095b2:	test   rbx,rbx
  4095b5:	je     0x4095ce
  4095b7:	lea    rdi,[rip+0x10af9]        # 0x41a0b7
  4095be:	mov    ecx,0x2
  4095c3:	mov    rsi,rax
  4095c6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4095c8:	je     0x409730
  4095ce:	lea    rsi,[rip+0x10ae4]        # 0x41a0b9
  4095d5:	mov    ecx,0x6
  4095da:	mov    rdi,rax
  4095dd:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4095df:	seta   bl
  4095e2:	setb   dl
  4095e5:	sub    ebx,edx
  4095e7:	movsx  ebx,bl
  4095ea:	test   ebx,ebx
  4095ec:	jne    0x409633
  4095ee:	movsx  edx,BYTE PTR [rax+0x6]
  4095f2:	lea    rcx,[rip+0xea8d]        # 0x418086
  4095f9:	lea    rsi,[rax+0x6]
  4095fd:	call   0x415f90
  409602:	test   rax,rax
  409605:	je     0x409626
  409607:	mov    rcx,rsi
  40960a:	call   0x402140
  40960f:	cmp    BYTE PTR [rax],0x0
  409612:	jne    0x409710
  409618:	lea    rcx,[rip+0x10aa1]        # 0x41a0c0
  40961f:	mov    bl,0x1
  409621:	call   0x401590
  409626:	mov    eax,ebx
  409628:	add    rsp,0x470
  40962f:	pop    rbx
  409630:	pop    rsi
  409631:	pop    rdi
  409632:	ret    
  409633:	lea    rsi,[rip+0x10ade]        # 0x41a118
  40963a:	mov    ecx,0x4
  40963f:	mov    rdi,rax
  409642:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409644:	seta   bl
  409647:	setb   dl
  40964a:	sub    ebx,edx
  40964c:	movsx  ebx,bl
  40964f:	test   ebx,ebx
  409651:	jne    0x409750
  409657:	movsx  edx,BYTE PTR [rax+0x4]
  40965b:	lea    rcx,[rip+0xea24]        # 0x418086
  409662:	lea    rsi,[rax+0x4]
  409666:	call   0x415f90
  40966b:	test   rax,rax
  40966e:	je     0x409626
  409670:	mov    rcx,rsi
  409673:	call   0x402140
  409678:	cmp    BYTE PTR [rax],0x0
  40967b:	mov    rbx,rax
  40967e:	je     0x409760
  409684:	mov    rcx,rax
  409687:	call   0x402220
  40968c:	test   rax,rax
  40968f:	je     0x4097d1
  409695:	mov    rdx,QWORD PTR [rax+0x80]
  40969c:	mov    r9d,DWORD PTR [rax+0x78]
  4096a0:	lea    rbx,[rsp+0x80]
  4096a8:	mov    r8,QWORD PTR [rip+0x188d1]        # 0x421f80
  4096af:	mov    QWORD PTR [rsp+0x20],rdx
  4096b4:	lea    rdx,[rip+0x10fd8]        # 0x41a693
  4096bb:	mov    rcx,rbx
  4096be:	call   0x4015c0
  4096c3:	mov    rcx,rbx
  4096c6:	mov    ebx,0x1
  4096cb:	call   0x415f20
  4096d0:	test   eax,eax
  4096d2:	je     0x409626
  4096d8:	mov    rdi,QWORD PTR [rip+0x188a1]        # 0x421f80
  4096df:	mov    rsi,QWORD PTR [rip+0x18362]        # 0x421a48
  4096e6:	call   QWORD PTR [rip+0x19ddc]        # 0x4234c8
  4096ec:	lea    rdx,[rip+0x10fad]        # 0x41a6a0
  4096f3:	lea    rcx,[rax+0x60]
  4096f7:	mov    r9,rdi
  4096fa:	mov    r8,rsi
  4096fd:	call   0x401540
  409702:	jmp    0x409626
  409707:	nop    WORD PTR [rax+rax*1+0x0]
  409710:	mov    rdx,rax
  409713:	xor    ecx,ecx
  409715:	mov    ebx,0x1
  40971a:	call   0x407a10
  40971f:	mov    eax,ebx
  409721:	add    rsp,0x470
  409728:	pop    rbx
  409729:	pop    rsi
  40972a:	pop    rdi
  40972b:	ret    
  40972c:	nop    DWORD PTR [rax+0x0]
  409730:	mov    rcx,rbx
  409733:	xor    edx,edx
  409735:	mov    ebx,0x1
  40973a:	call   0x407a10
  40973f:	mov    eax,ebx
  409741:	add    rsp,0x470
  409748:	pop    rbx
  409749:	pop    rsi
  40974a:	pop    rdi
  40974b:	ret    
  40974c:	nop    DWORD PTR [rax+0x0]
  409750:	xor    ebx,ebx
  409752:	mov    eax,ebx
  409754:	add    rsp,0x470
  40975b:	pop    rbx
  40975c:	pop    rsi
  40975d:	pop    rdi
  40975e:	ret    
  40975f:	nop
  409760:	lea    rax,[rip+0x10950]        # 0x41a0b7
  409767:	mov    r9,QWORD PTR [rip+0xdcca]        # 0x417438
  40976e:	mov    rdx,QWORD PTR [rip+0xdccb]        # 0x417440
  409775:	lea    rcx,[rip+0x109a4]        # 0x41a120
  40977c:	mov    ebx,0x1
  409781:	mov    QWORD PTR [rsp+0x68],rax
  409786:	lea    rax,[rip+0x10ef1]        # 0x41a67e
  40978d:	mov    QWORD PTR [rsp+0x78],r9
  409792:	mov    QWORD PTR [rsp+0x70],rdx
  409797:	mov    r8,rdx
  40979a:	mov    QWORD PTR [rsp+0x60],r9
  40979f:	mov    QWORD PTR [rsp+0x58],r9
  4097a4:	mov    QWORD PTR [rsp+0x50],rdx
  4097a9:	mov    QWORD PTR [rsp+0x48],rax
  4097ae:	mov    QWORD PTR [rsp+0x40],r9
  4097b3:	mov    QWORD PTR [rsp+0x38],rdx
  4097b8:	mov    QWORD PTR [rsp+0x30],r9
  4097bd:	mov    QWORD PTR [rsp+0x28],rdx
  4097c2:	mov    QWORD PTR [rsp+0x20],r9
  4097c7:	call   0x401590
  4097cc:	jmp    0x409626
  4097d1:	mov    rcx,rbx
  4097d4:	call   0x401a90
  4097d9:	test   rax,rax
  4097dc:	je     0x4097eb
  4097de:	mov    r9d,DWORD PTR [rax+0x10]
  4097e2:	mov    rdx,QWORD PTR [rax+0x18]
  4097e6:	jmp    0x4096a0
  4097eb:	mov    rcx,rbx
  4097ee:	call   0x401bb0
  4097f3:	test   rax,rax
  4097f6:	mov    r8,rax
  4097f9:	je     0x409818
  4097fb:	xor    eax,eax
  4097fd:	or     rcx,0xffffffffffffffff
  409801:	mov    rdi,rbx
  409804:	repnz scas al,BYTE PTR es:[rdi]
  409806:	movsxd rax,DWORD PTR [r8]
  409809:	mov    rdx,rcx
  40980c:	not    rdx
  40980f:	sub    rdx,0x1
  409813:	cmp    rdx,rax
  409816:	je     0x409832
  409818:	mov    rcx,rbx
  40981b:	call   0x401ff0
  409820:	test   rax,rax
  409823:	je     0x40983f
  409825:	mov    r9d,DWORD PTR [rax+0x18]
  409829:	mov    rdx,QWORD PTR [rax+0x20]
  40982d:	jmp    0x4096a0
  409832:	mov    r9d,DWORD PTR [r8+0x18]
  409836:	mov    rdx,QWORD PTR [r8+0x20]
  40983a:	jmp    0x4096a0
  40983f:	lea    rcx,[rip+0x10e3a]        # 0x41a680
  409846:	mov    rdx,rbx
  409849:	mov    ebx,0x1
  40984e:	call   0x401590
  409853:	jmp    0x409626
  409858:	nop    DWORD PTR [rax+rax*1+0x0]
  409860:	sub    rsp,0x28
  409864:	lea    rdx,[rip+0xe80a]        # 0x418075
  40986b:	mov    ecx,0x2
  409870:	call   0x415fa8
  409875:	test   rax,rax
  409878:	je     0x4098a3
  40987a:	mov    rcx,rax
  40987d:	call   0x4019f0
  409882:	mov    edx,0x2e
  409887:	mov    rcx,rax
  40988a:	mov    QWORD PTR [rip+0x181af],rax        # 0x421a40
  409891:	call   0x415f90
  409896:	test   rax,rax
  409899:	je     0x40989e
  40989b:	mov    BYTE PTR [rax],0x0
  40989e:	add    rsp,0x28
  4098a2:	ret    
  4098a3:	lea    rcx,[rip+0x10e27]        # 0x41a6d1
  4098aa:	call   0x416000
  4098af:	test   rax,rax
  4098b2:	jne    0x40987a
  4098b4:	lea    rcx,[rip+0x10e1f]        # 0x41a6da
  4098bb:	call   0x416000
  4098c0:	test   rax,rax
  4098c3:	jne    0x40987a
  4098c5:	lea    rax,[rip+0x10e13]        # 0x41a6df
  4098cc:	mov    QWORD PTR [rip+0x1816d],rax        # 0x421a40
  4098d3:	add    rsp,0x28
  4098d7:	ret    
  4098d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4098e0:	push   rdi
  4098e1:	push   rsi
  4098e2:	push   rbx
  4098e3:	sub    rsp,0x20
  4098e7:	mov    rax,QWORD PTR [rcx]
  4098ea:	test   rax,rax
  4098ed:	je     0x4098f4
  4098ef:	cmp    BYTE PTR [rax],0x0
  4098f2:	jne    0x409900
  4098f4:	xor    esi,esi
  4098f6:	mov    eax,esi
  4098f8:	add    rsp,0x20
  4098fc:	pop    rbx
  4098fd:	pop    rsi
  4098fe:	pop    rdi
  4098ff:	ret    
  409900:	mov    rbx,rcx
  409903:	mov    rcx,rax
  409906:	call   0x402140
  40990b:	mov    rcx,rax
  40990e:	call   0x401ff0
  409913:	test   rax,rax
  409916:	mov    rdi,rax
  409919:	je     0x4098f4
  40991b:	mov    rcx,QWORD PTR [rax+0x8]
  40991f:	mov    edx,0xfffffffe
  409924:	call   0x408890
  409929:	test   eax,eax
  40992b:	mov    esi,eax
  40992d:	jne    0x409950
  40992f:	mov    rcx,QWORD PTR [rbx]
  409932:	call   0x416010
  409937:	mov    rcx,QWORD PTR [rdi+0x8]
  40993b:	call   0x4019f0
  409940:	mov    QWORD PTR [rbx],rax
  409943:	mov    eax,esi
  409945:	add    rsp,0x20
  409949:	pop    rbx
  40994a:	pop    rsi
  40994b:	pop    rdi
  40994c:	ret    
  40994d:	nop    DWORD PTR [rax]
  409950:	call   QWORD PTR [rip+0x19b72]        # 0x4234c8
  409956:	lea    rcx,[rip+0x10d8b]        # 0x41a6e8
  40995d:	lea    r9,[rax+0x30]
  409961:	mov    r8d,0x26
  409967:	mov    edx,0x1
  40996c:	mov    esi,0x1
  409971:	call   0x416008
  409976:	mov    eax,esi
  409978:	add    rsp,0x20
  40997c:	pop    rbx
  40997d:	pop    rsi
  40997e:	pop    rdi
  40997f:	ret    
  409980:	push   rdi
  409981:	push   rsi
  409982:	push   rbx
  409983:	sub    rsp,0x20
  409987:	mov    edx,0x5c
  40998c:	mov    rbx,rcx
  40998f:	call   0x415f48
  409994:	test   rax,rax
  409997:	je     0x409a00
  409999:	lea    rbx,[rax+0x1]
  40999d:	mov    edx,0x2e
  4099a2:	mov    rcx,rbx
  4099a5:	call   0x415f48
  4099aa:	test   rax,rax
  4099ad:	mov    rsi,rax
  4099b0:	je     0x4099c0
  4099b2:	mov    rcx,rax
  4099b5:	call   0x415f68
  4099ba:	cmp    rax,0x4
  4099be:	je     0x4099d0
  4099c0:	mov    rax,rbx
  4099c3:	add    rsp,0x20
  4099c7:	pop    rbx
  4099c8:	pop    rsi
  4099c9:	pop    rdi
  4099ca:	ret    
  4099cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4099d0:	movsx  ecx,BYTE PTR [rsi+0x1]
  4099d4:	mov    rdi,QWORD PTR [rip+0x19cdd]        # 0x4236b8
  4099db:	call   rdi
  4099dd:	cmp    eax,0x65
  4099e0:	jne    0x4099c0
  4099e2:	movsx  ecx,BYTE PTR [rsi+0x2]
  4099e6:	call   rdi
  4099e8:	cmp    eax,0x78
  4099eb:	jne    0x4099c0
  4099ed:	movsx  ecx,BYTE PTR [rsi+0x3]
  4099f1:	call   rdi
  4099f3:	cmp    eax,0x65
  4099f6:	jne    0x4099c0
  4099f8:	mov    BYTE PTR [rsi],0x0
  4099fb:	jmp    0x4099c0
  4099fd:	nop    DWORD PTR [rax]
  409a00:	mov    edx,0x2f
  409a05:	mov    rcx,rbx
  409a08:	call   0x415f48
  409a0d:	test   rax,rax
  409a10:	jne    0x409999
  409a12:	jmp    0x40999d
  409a14:	xchg   ax,ax
  409a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a20:	push   rbp
  409a21:	push   rdi
  409a22:	push   rsi
  409a23:	push   rbx
  409a24:	sub    rsp,0x78
  409a28:	lea    rdx,[rip+0xed7c]        # 0x4187ab
  409a2f:	lea    rcx,[rip+0x10cd9]        # 0x41a70f
  409a36:	call   0x416030
  409a3b:	test   rax,rax
  409a3e:	mov    rsi,rax
  409a41:	je     0x409b02
  409a47:	lea    rbx,[rsp+0x20]
  409a4c:	nop    DWORD PTR [rax+0x0]
  409a50:	mov    rcx,rsi
  409a53:	call   0x416048
  409a58:	test   eax,eax
  409a5a:	jne    0x409af0
  409a60:	mov    r8,rsi
  409a63:	mov    edx,0x50
  409a68:	mov    rcx,rbx
  409a6b:	call   0x416038
  409a70:	test   rax,rax
  409a73:	je     0x409af0
  409a75:	mov    edx,0x23
  409a7a:	mov    rcx,rbx
  409a7d:	call   0x415f90
  409a82:	test   rax,rax
  409a85:	je     0x409a8a
  409a87:	mov    BYTE PTR [rax],0x0
  409a8a:	mov    edx,0x9
  409a8f:	mov    rcx,rbx
  409a92:	call   0x415f90
  409a97:	test   rax,rax
  409a9a:	je     0x409a50
  409a9c:	lea    rcx,[rax+0x1]
  409aa0:	mov    BYTE PTR [rax],0x0
  409aa3:	call   0x402140
  409aa8:	mov    rdi,QWORD PTR [rip+0x17f91]        # 0x421a40
  409aaf:	mov    rcx,rbx
  409ab2:	mov    rbp,rax
  409ab5:	call   0x402140
  409aba:	mov    rcx,rax
  409abd:	mov    rdx,rdi
  409ac0:	call   0x415f88
  409ac5:	test   eax,eax
  409ac7:	jne    0x409a50
  409ac9:	mov    rcx,rbp
  409acc:	call   0x4019f0
  409ad1:	mov    rcx,rsi
  409ad4:	mov    QWORD PTR [rip+0x17f65],rax        # 0x421a40
  409adb:	call   0x416048
  409ae0:	test   eax,eax
  409ae2:	je     0x409a60
  409ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  409af0:	mov    rcx,rsi
  409af3:	call   0x416050
  409af8:	nop
  409af9:	add    rsp,0x78
  409afd:	pop    rbx
  409afe:	pop    rsi
  409aff:	pop    rdi
  409b00:	pop    rbp
  409b01:	ret    
  409b02:	call   0x403aa0
  409b07:	mov    rcx,rax
  409b0a:	mov    rdi,rax
  409b0d:	call   0x415f68
  409b12:	lea    r8d,[rax+0x20]
  409b16:	mov    rsi,rax
  409b19:	movsxd rcx,r8d
  409b1c:	call   0x415fe8
  409b21:	test   rax,rax
  409b24:	mov    rbx,rax
  409b27:	je     0x409bbc
  409b2d:	mov    r8,rsi
  409b30:	mov    rdx,rdi
  409b33:	mov    rcx,rax
  409b36:	call   0x415fe0
  409b3b:	lea    rax,[rbx+rsi*1+0x1]
  409b40:	movabs rdi,0x752f65726168732f
  409b4a:	mov    BYTE PTR [rbx+rsi*1],0x5c
  409b4e:	lea    rdx,[rip+0xec56]        # 0x4187ab
  409b55:	mov    rcx,rbx
  409b58:	mov    QWORD PTR [rax],rdi
  409b5b:	movabs rdi,0x636f6c2f7374696e
  409b65:	mov    QWORD PTR [rax+0x8],rdi
  409b69:	movabs rdi,0x70616d2e656c61
  409b73:	mov    QWORD PTR [rax+0x10],rdi
  409b77:	call   0x416030
  409b7c:	mov    rcx,rbx
  409b7f:	mov    rsi,rax
  409b82:	call   0x416010
  409b87:	test   rsi,rsi
  409b8a:	jne    0x409a47
  409b90:	mov    rbx,QWORD PTR [rip+0x17eb1]        # 0x421a48
  409b97:	call   QWORD PTR [rip+0x1992b]        # 0x4234c8
  409b9d:	lea    r9,[rip+0x10b6b]        # 0x41a70f
  409ba4:	lea    rcx,[rax+0x60]
  409ba8:	lea    rdx,[rip+0x10b89]        # 0x41a738
  409baf:	mov    r8,rbx
  409bb2:	call   0x401540
  409bb7:	jmp    0x409af9
  409bbc:	lea    rcx,[rip+0x10b64]        # 0x41a727
  409bc3:	call   0x4162d0
  409bc8:	nop
  409bc9:	nop
  409bca:	nop
  409bcb:	nop
  409bcc:	nop
  409bcd:	nop
  409bce:	nop
  409bcf:	nop
  409bd0:	sub    rsp,0x28
  409bd4:	call   0x40d320
  409bd9:	divsd  xmm0,QWORD PTR [rip+0x11577]        # 0x41b158
  409be1:	add    rsp,0x28
  409be5:	ret    
  409be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409bf0:	push   rsi
  409bf1:	push   rbx
  409bf2:	sub    rsp,0x28
  409bf6:	movsxd rbx,DWORD PTR [rip+0x169c7]        # 0x4205c4
  409bfd:	cmp    ebx,0x63
  409c00:	jg     0x409c50
  409c02:	lea    rsi,[rip+0x18737]        # 0x422340
  409c09:	lea    rdx,[rip+0x11030]        # 0x41ac40
  409c10:	mov    ecx,0x648
  409c15:	call   0x4019c0
  409c1a:	mov    QWORD PTR [rsi+rbx*8],rax
  409c1e:	movsxd rax,DWORD PTR [rip+0x1699f]        # 0x4205c4
  409c25:	mov    rcx,QWORD PTR [rsi+rax*8]
  409c29:	test   rcx,rcx
  409c2c:	je     0x409c50
  409c2e:	call   0x404a00
  409c33:	movsxd rax,DWORD PTR [rip+0x1698a]        # 0x4205c4
  409c3a:	lea    edx,[rax+0x1]
  409c3d:	mov    rax,QWORD PTR [rsi+rax*8]
  409c41:	mov    DWORD PTR [rip+0x1697d],edx        # 0x4205c4
  409c47:	add    rsp,0x28
  409c4b:	pop    rbx
  409c4c:	pop    rsi
  409c4d:	ret    
  409c4e:	xchg   ax,ax
  409c50:	xor    eax,eax
  409c52:	add    rsp,0x28
  409c56:	pop    rbx
  409c57:	pop    rsi
  409c58:	ret    
  409c59:	nop    DWORD PTR [rax+0x0]
  409c60:	push   rbx
  409c61:	sub    rsp,0x30
  409c65:	movaps XMMWORD PTR [rsp+0x20],xmm6
  409c6a:	movapd xmm6,xmm0
  409c6e:	mov    rbx,rdx
  409c71:	call   0x409bf0
  409c76:	test   rax,rax
  409c79:	je     0x409c94
  409c7b:	movsd  QWORD PTR [rax+0x640],xmm6
  409c83:	mov    DWORD PTR [rbx],0x0
  409c89:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  409c8e:	add    rsp,0x30
  409c92:	pop    rbx
  409c93:	ret    
  409c94:	mov    DWORD PTR [rbx],0xe
  409c9a:	jmp    0x409c89
  409c9c:	nop    DWORD PTR [rax+0x0]
  409ca0:	push   rdi
  409ca1:	push   rsi
  409ca2:	push   rbx
  409ca3:	sub    rsp,0x670
  409caa:	mov    eax,DWORD PTR [rdx+0x10]
  409cad:	mov    rdi,rcx
  409cb0:	mov    rsi,rdx
  409cb3:	cmp    eax,0x1
  409cb6:	je     0x409cd0
  409cb8:	and    eax,0xfffffffd
  409cbb:	mov    ebx,0x9
  409cc0:	je     0x409d32
  409cc2:	mov    eax,ebx
  409cc4:	add    rsp,0x670
  409ccb:	pop    rbx
  409ccc:	pop    rsi
  409ccd:	pop    rdi
  409cce:	ret    
  409ccf:	nop
  409cd0:	call   0x405710
  409cd5:	cmp    eax,0x5
  409cd8:	mov    ebx,eax
  409cda:	mov    DWORD PTR [rip+0x168e8],eax        # 0x4205c8
  409ce0:	jne    0x409d42
  409ce2:	lea    rbx,[rsp+0x20]
  409ce7:	mov    rcx,rbx
  409cea:	call   0x404a00
  409cef:	lea    rcx,[rip+0x10f57]        # 0x41ac4d
  409cf6:	call   0x4019f0
  409cfb:	mov    rdx,rbx
  409cfe:	mov    rcx,rdi
  409d01:	mov    QWORD PTR [rsp+0x340],rax
  409d09:	mov    QWORD PTR [rsp+0x348],0x0
  409d15:	call   0x405150
  409d1a:	mov    rcx,rbx
  409d1d:	mov    DWORD PTR [rip+0x168a5],eax        # 0x4205c8
  409d23:	call   0x404a30
  409d28:	mov    ebx,DWORD PTR [rip+0x1689a]        # 0x4205c8
  409d2e:	test   ebx,ebx
  409d30:	jne    0x409cc2
  409d32:	mov    rcx,rdi
  409d35:	call   0x405710
  409d3a:	mov    ebx,eax
  409d3c:	mov    DWORD PTR [rip+0x16886],eax        # 0x4205c8
  409d42:	test   ebx,ebx
  409d44:	jne    0x409cc2
  409d4a:	mov    rbx,QWORD PTR [rip+0x197b7]        # 0x423508
  409d51:	call   rbx
  409d53:	movsd  xmm0,QWORD PTR [rdi+0x640]
  409d5b:	mov    DWORD PTR [rax],0x0
  409d61:	call   QWORD PTR [rsi+0x8]
  409d64:	movsd  QWORD PTR [rdi+0x640],xmm0
  409d6c:	call   rbx
  409d6e:	mov    ebx,DWORD PTR [rax]
  409d70:	test   ebx,ebx
  409d72:	je     0x409d90
  409d74:	mov    ebx,0x8
  409d79:	mov    eax,ebx
  409d7b:	add    rsp,0x670
  409d82:	pop    rbx
  409d83:	pop    rsi
  409d84:	pop    rdi
  409d85:	ret    
  409d86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d90:	cmp    DWORD PTR [rsi+0x10],0x2
  409d94:	jne    0x409cc2
  409d9a:	lea    rcx,[rip+0x10eac]        # 0x41ac4d
  409da1:	call   0x4019f0
  409da6:	mov    QWORD PTR [rdi+0x8],0x0
  409dae:	mov    QWORD PTR [rdi],rax
  409db1:	jmp    0x409cc2
  409db6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409dc0:	push   r15
  409dc2:	push   r14
  409dc4:	push   r13
  409dc6:	push   r12
  409dc8:	push   rbp
  409dc9:	push   rdi
  409dca:	push   rsi
  409dcb:	push   rbx
  409dcc:	sub    rsp,0x48
  409dd0:	movsxd rbx,DWORD PTR [rdx]
  409dd3:	cmp    ebx,0xffffffff
  409dd6:	je     0x409e60
  409ddc:	add    rbx,QWORD PTR [rdx+0x8]
  409de0:	mov    r14,rdx
  409de3:	mov    rbp,rcx
  409de6:	movzx  r12d,BYTE PTR [rbx]
  409dea:	test   r12b,r12b
  409ded:	jne    0x409e02
  409def:	jmp    0x409e50
  409df1:	add    rbx,0x1
  409df5:	add    DWORD PTR [r14],0x1
  409df9:	movzx  r12d,BYTE PTR [rbx]
  409dfd:	test   r12b,r12b
  409e00:	je     0x409e50
  409e02:	movsx  r13d,r12b
  409e06:	lea    rcx,[rip+0x10e47]        # 0x41ac54
  409e0d:	mov    edx,r13d
  409e10:	call   0x415f90
  409e15:	test   rax,rax
  409e18:	jne    0x409df1
  409e1a:	lea    rsi,[rip+0x10e67]        # 0x41ac88
  409e21:	mov    ecx,0x2
  409e26:	mov    rdi,rbx
  409e29:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  409e2b:	jne    0x409e64
  409e2d:	add    DWORD PTR [r14],0x2
  409e31:	mov    eax,0x106
  409e36:	add    rsp,0x48
  409e3a:	pop    rbx
  409e3b:	pop    rsi
  409e3c:	pop    rdi
  409e3d:	pop    rbp
  409e3e:	pop    r12
  409e40:	pop    r13
  409e42:	pop    r14
  409e44:	pop    r15
  409e46:	ret    
  409e47:	nop    WORD PTR [rax+rax*1+0x0]
  409e50:	mov    DWORD PTR [r14],0xffffffff
  409e57:	mov    eax,0x10e
  409e5c:	jmp    0x409e36
  409e5e:	xchg   ax,ax
  409e60:	xor    eax,eax
  409e62:	jmp    0x409e36
  409e64:	cmp    r12b,0x2d
  409e68:	je     0x409f44
  409e6e:	cmp    r12b,0x2a
  409e72:	je     0x409f28
  409e78:	movzx  eax,BYTE PTR [rip+0xd681]        # 0x417500
  409e7f:	lea    r8,[rip+0xd67a]        # 0x417500
  409e86:	test   al,al
  409e88:	je     0x409eb8
  409e8a:	cmp    r12b,al
  409e8d:	je     0x409f62
  409e93:	mov    rax,r8
  409e96:	xor    ecx,ecx
  409e98:	jmp    0x409ead
  409e9a:	nop    WORD PTR [rax+rax*1+0x0]
  409ea0:	add    rax,0x8
  409ea4:	cmp    r12b,dl
  409ea7:	je     0x409f64
  409ead:	movzx  edx,BYTE PTR [rax+0x8]
  409eb1:	add    ecx,0x1
  409eb4:	test   dl,dl
  409eb6:	jne    0x409ea0
  409eb8:	lea    rcx,[rip+0x10d99]        # 0x41ac58
  409ebf:	mov    edx,r13d
  409ec2:	call   0x415f90
  409ec7:	test   rax,rax
  409eca:	je     0x409f75
  409ed0:	lea    rdx,[rsp+0x38]
  409ed5:	mov    rcx,rbx
  409ed8:	call   0x40cc30
  409edd:	mov    rax,QWORD PTR [rsp+0x38]
  409ee2:	movsd  QWORD PTR [rbp+0x0],xmm0
  409ee7:	cmp    rax,rbx
  409eea:	je     0x409f75
  409ef0:	mov    rdx,rax
  409ef3:	sub    rdx,rbx
  409ef6:	add    DWORD PTR [r14],edx
  409ef9:	movsx  edx,BYTE PTR [rax]
  409efc:	mov    eax,0x102
  409f01:	test   dl,dl
  409f03:	je     0x409e36
  409f09:	lea    rcx,[rip+0x10d48]        # 0x41ac58
  409f10:	call   0x415f90
  409f15:	cmp    rax,0x1
  409f19:	sbb    eax,eax
  409f1b:	and    eax,0xfffffff1
  409f1e:	add    eax,0x111
  409f23:	jmp    0x409e36
  409f28:	mov    rax,QWORD PTR [rip+0x12021]        # 0x41bf50
  409f2f:	add    DWORD PTR [r14],0x1
  409f33:	cmp    DWORD PTR [rax],0x1
  409f36:	sbb    eax,eax
  409f38:	not    eax
  409f3a:	add    eax,0x108
  409f3f:	jmp    0x409e36
  409f44:	mov    rax,QWORD PTR [rip+0x12005]        # 0x41bf50
  409f4b:	add    DWORD PTR [r14],0x1
  409f4f:	cmp    DWORD PTR [rax+0x4],0x1
  409f53:	sbb    eax,eax
  409f55:	and    eax,0xfffffffa
  409f58:	add    eax,0x113
  409f5d:	jmp    0x409e36
  409f62:	xor    ecx,ecx
  409f64:	movsxd rcx,ecx
  409f67:	add    DWORD PTR [r14],0x1
  409f6b:	mov    eax,DWORD PTR [r8+rcx*8+0x4]
  409f70:	jmp    0x409e36
  409f75:	lea    rdx,[rip+0x10ce9]        # 0x41ac65
  409f7c:	mov    rcx,rbx
  409f7f:	call   0x415f78
  409f84:	test   eax,eax
  409f86:	mov    rsi,rax
  409f89:	mov    r13d,eax
  409f8c:	je     0x409fa2
  409f8e:	movsx  edx,BYTE PTR [rbx]
  409f91:	lea    rcx,[rip+0x10cdb]        # 0x41ac73
  409f98:	call   0x415f90
  409f9d:	test   rax,rax
  409fa0:	je     0x409fad
  409fa2:	add    DWORD PTR [r14],0x1
  409fa6:	xor    eax,eax
  409fa8:	jmp    0x409e36
  409fad:	movsxd r12,esi
  409fb0:	lea    rcx,[rip+0x10cbc]        # 0x41ac73
  409fb7:	lea    rax,[rbx+r12*1-0x1]
  409fbc:	movsx  edx,BYTE PTR [rax]
  409fbf:	mov    QWORD PTR [rsp+0x20],rax
  409fc4:	call   0x415f90
  409fc9:	test   rax,rax
  409fcc:	je     0x409fd8
  409fce:	add    DWORD PTR [r14],esi
  409fd1:	xor    eax,eax
  409fd3:	jmp    0x409e36
  409fd8:	mov    r10,QWORD PTR [rip+0xd4e1]        # 0x4174c0
  409fdf:	xor    edi,edi
  409fe1:	lea    r15,[rip+0xd4d8]        # 0x4174c0
  409fe8:	test   r10,r10
  409feb:	jne    0x409fff
  409fed:	jmp    0x40a042
  409fef:	nop
  409ff0:	add    r15,0x10
  409ff4:	mov    r10,QWORD PTR [r15]
  409ff7:	add    edi,0x1
  409ffa:	test   r10,r10
  409ffd:	je     0x40a042
  409fff:	mov    rcx,r10
  40a002:	mov    QWORD PTR [rsp+0x28],r10
  40a007:	call   0x415f68
  40a00c:	cmp    r12,rax
  40a00f:	mov    r10,QWORD PTR [rsp+0x28]
  40a014:	jne    0x409ff0
  40a016:	mov    r8,r12
  40a019:	mov    rdx,rbx
  40a01c:	mov    rcx,r10
  40a01f:	call   0x415f60
  40a024:	test   eax,eax
  40a026:	jne    0x409ff0
  40a028:	movsxd rax,edi
  40a02b:	lea    rdi,[rip+0xd48e]        # 0x4174c0
  40a032:	add    DWORD PTR [r14],esi
  40a035:	shl    rax,0x4
  40a039:	mov    eax,DWORD PTR [rdi+rax*1+0x8]
  40a03d:	jmp    0x409e36
  40a042:	mov    r10,QWORD PTR [rip+0xd537]        # 0x417580
  40a049:	test   r10,r10
  40a04c:	je     0x40a0bc
  40a04e:	lea    rdi,[rip+0xd543]        # 0x417598
  40a055:	xor    r15d,r15d
  40a058:	jmp    0x40a071
  40a05a:	nop    WORD PTR [rax+rax*1+0x0]
  40a060:	add    rdi,0x18
  40a064:	mov    r10,QWORD PTR [rdi-0x18]
  40a068:	add    r15d,0x1
  40a06c:	test   r10,r10
  40a06f:	je     0x40a0bc
  40a071:	mov    rcx,r10
  40a074:	mov    QWORD PTR [rsp+0x28],r10
  40a079:	call   0x415f68
  40a07e:	cmp    r12,rax
  40a081:	mov    r10,QWORD PTR [rsp+0x28]
  40a086:	jne    0x40a060
  40a088:	mov    r8,r12
  40a08b:	mov    rdx,rbx
  40a08e:	mov    rcx,r10
  40a091:	call   0x415f60
  40a096:	test   eax,eax
  40a098:	jne    0x40a060
  40a09a:	movsxd rax,r15d
  40a09d:	lea    rdx,[rip+0xd4dc]        # 0x417580
  40a0a4:	imul   rax,rax,0x18
  40a0a8:	add    rax,rdx
  40a0ab:	mov    QWORD PTR [rbp+0x0],rax
  40a0af:	mov    eax,0x104
  40a0b4:	add    DWORD PTR [r14],esi
  40a0b7:	jmp    0x409e36
  40a0bc:	mov    rax,QWORD PTR [rip+0x11dfd]        # 0x41bec0
  40a0c3:	mov    r10,QWORD PTR [rax]
  40a0c6:	test   r10,r10
  40a0c9:	je     0x40a0e5
  40a0cb:	xor    eax,eax
  40a0cd:	or     rcx,0xffffffffffffffff
  40a0d1:	mov    rdi,r10
  40a0d4:	repnz scas al,BYTE PTR es:[rdi]
  40a0d6:	mov    rax,rcx
  40a0d9:	not    rax
  40a0dc:	sub    rax,0x1
  40a0e0:	cmp    r12,rax
  40a0e3:	je     0x40a105
  40a0e5:	mov    edx,esi
  40a0e7:	mov    rcx,rbx
  40a0ea:	call   0x401f80
  40a0ef:	mov    QWORD PTR [rbp+0x0],rax
  40a0f3:	add    DWORD PTR [r14],esi
  40a0f6:	test   rax,rax
  40a0f9:	je     0x40a14b
  40a0fb:	mov    eax,0x105
  40a100:	jmp    0x409e36
  40a105:	mov    r8,r12
  40a108:	mov    rdx,rbx
  40a10b:	mov    rcx,r10
  40a10e:	call   0x415f60
  40a113:	test   eax,eax
  40a115:	jne    0x40a0e5
  40a117:	call   0x409bf0
  40a11c:	test   rax,rax
  40a11f:	mov    rbx,rax
  40a122:	je     0x40a217
  40a128:	mov    rax,QWORD PTR [rip+0x11e11]        # 0x41bf40
  40a12f:	mov    rcx,rbx
  40a132:	mov    rdx,QWORD PTR [rax]
  40a135:	call   0x405110
  40a13a:	mov    QWORD PTR [rbp+0x0],rbx
  40a13e:	mov    eax,0x103
  40a143:	add    DWORD PTR [r14],esi
  40a146:	jmp    0x409e36
  40a14b:	mov    rax,QWORD PTR [rsp+0x20]
  40a150:	lea    rcx,[rip+0x10b20]        # 0x41ac77
  40a157:	movsx  edx,BYTE PTR [rax]
  40a15a:	call   0x415f90
  40a15f:	test   rax,rax
  40a162:	je     0x40a221
  40a168:	mov    edx,esi
  40a16a:	mov    rcx,rbx
  40a16d:	call   0x401660
  40a172:	test   eax,eax
  40a174:	jne    0x40a221
  40a17a:	lea    r13d,[rsi-0x1]
  40a17e:	mov    rax,QWORD PTR [rsp+0x20]
  40a183:	lea    rcx,[rip+0x10ace]        # 0x41ac58
  40a18a:	movsxd r12,r13d
  40a18d:	movsx  edx,BYTE PTR [rbx+r12*1-0x1]
  40a193:	movsx  edi,BYTE PTR [rax]
  40a196:	call   0x415f90
  40a19b:	mov    rdx,rax
  40a19e:	sub    edi,0x30
  40a1a1:	mov    eax,0x112
  40a1a6:	test   rdx,rdx
  40a1a9:	jne    0x409e36
  40a1af:	call   0x409bf0
  40a1b4:	test   rax,rax
  40a1b7:	mov    rsi,rax
  40a1ba:	je     0x40a217
  40a1bc:	movsxd r14,edi
  40a1bf:	test   edi,edi
  40a1c1:	mov    QWORD PTR [rax+r14*8],0x0
  40a1c9:	je     0x40a209
  40a1cb:	add    r13d,0x1
  40a1cf:	jmp    0x40a1d4
  40a1d1:	movsxd r14,edi
  40a1d4:	lea    rdx,[rip+0x10aa5]        # 0x41ac80
  40a1db:	lea    r14,[rsi+r14*8]
  40a1df:	mov    ecx,r13d
  40a1e2:	sub    edi,0x1
  40a1e5:	call   0x4019c0
  40a1ea:	mov    r8,r12
  40a1ed:	mov    QWORD PTR [r14-0x8],rax
  40a1f1:	mov    rdx,rbx
  40a1f4:	mov    rcx,rax
  40a1f7:	call   0x415f58
  40a1fc:	mov    rax,QWORD PTR [r14-0x8]
  40a200:	test   edi,edi
  40a202:	mov    BYTE PTR [rax+r12*1],0x0
  40a207:	jne    0x40a1d1
  40a209:	mov    QWORD PTR [rbp+0x0],rsi
  40a20d:	mov    eax,0x103
  40a212:	jmp    0x409e36
  40a217:	mov    eax,0x110
  40a21c:	jmp    0x409e36
  40a221:	call   0x409bf0
  40a226:	test   rax,rax
  40a229:	mov    rsi,rax
  40a22c:	je     0x40a217
  40a22e:	mov    QWORD PTR [rsi+0x8],0x0
  40a236:	mov    edi,0x1
  40a23b:	movsxd r12,r13d
  40a23e:	mov    r14d,0x1
  40a244:	jmp    0x40a1cb
  40a249:	nop    DWORD PTR [rax+0x0]
  40a250:	push   r15
  40a252:	push   r14
  40a254:	push   r13
  40a256:	push   r12
  40a258:	push   rbp
  40a259:	push   rdi
  40a25a:	push   rsi
  40a25b:	push   rbx
  40a25c:	sub    rsp,0x898
  40a263:	movaps XMMWORD PTR [rsp+0x830],xmm6
  40a26b:	movaps XMMWORD PTR [rsp+0x840],xmm7
  40a273:	movaps XMMWORD PTR [rsp+0x850],xmm8
  40a27c:	movaps XMMWORD PTR [rsp+0x860],xmm9
  40a285:	movaps XMMWORD PTR [rsp+0x870],xmm10
  40a28e:	movaps XMMWORD PTR [rsp+0x880],xmm11
  40a297:	mov    r13d,0xc8
  40a29d:	xor    edi,edi
  40a29f:	mov    ebp,0xfffffffe
  40a2a4:	lea    r12,[rsp+0x60]
  40a2a9:	lea    rbx,[rsp+0x1f0]
  40a2b1:	lea    rax,[rsp+0x50]
  40a2b6:	movsd  xmm6,QWORD PTR [rip+0x10eb2]        # 0x41b170
  40a2be:	mov    QWORD PTR [rsp+0x8e0],rcx
  40a2c6:	mov    QWORD PTR [rsp+0x28],rbx
  40a2cb:	mov    r14,r12
  40a2ce:	mov    rsi,r12
  40a2d1:	movapd xmm10,xmm6
  40a2d6:	mov    DWORD PTR [rsp+0x34],0x0
  40a2de:	movapd xmm9,xmm6
  40a2e3:	mov    QWORD PTR [rsp+0x40],rax
  40a2e8:	movapd xmm8,xmm6
  40a2ed:	mov    QWORD PTR [rsp+0x20],r12
  40a2f2:	movapd xmm7,xmm6
  40a2f6:	lea    rax,[r13+r13*1+0x0]
  40a2fb:	mov    WORD PTR [r14],di
  40a2ff:	lea    rdx,[rsi+rax*1-0x2]
  40a304:	cmp    r14,rdx
  40a307:	jb     0x40a3b7
  40a30d:	sub    r14,rsi
  40a310:	sar    r14,1
  40a313:	cmp    r13,0x270f
  40a31a:	lea    rbx,[r14+0x1]
  40a31e:	ja     0x40a9b2
  40a324:	cmp    rax,0x2710
  40a32a:	mov    r13d,0x2710
  40a330:	cmovbe r13,rax
  40a334:	lea    rax,[r13+r13*4+0x0]
  40a339:	lea    rcx,[rax+rax*1+0x7]
  40a33e:	call   0x415fe8
  40a343:	test   rax,rax
  40a346:	mov    r15,rax
  40a349:	je     0x40a9b2
  40a34f:	lea    r14,[rbx+rbx*1]
  40a353:	mov    rdx,rsi
  40a356:	mov    rcx,rax
  40a359:	lea    r12,[r15+r13*2]
  40a35d:	shl    rbx,0x3
  40a361:	mov    r8,r14
  40a364:	call   0x415fe0
  40a369:	mov    rdx,QWORD PTR [rsp+0x28]
  40a36e:	lea    rax,[r13+r13*1+0x0]
  40a373:	mov    r8,rbx
  40a376:	mov    rcx,r12
  40a379:	mov    QWORD PTR [rsp+0x38],rax
  40a37e:	call   0x415fe0
  40a383:	cmp    rsi,QWORD PTR [rsp+0x20]
  40a388:	je     0x40a392
  40a38a:	mov    rcx,rsi
  40a38d:	call   0x416010
  40a392:	mov    rax,QWORD PTR [rsp+0x38]
  40a397:	lea    r14,[r15+r14*1-0x2]
  40a39c:	lea    rbx,[r12+rbx*1-0x8]
  40a3a1:	lea    rax,[r15+rax*1-0x2]
  40a3a6:	cmp    r14,rax
  40a3a9:	jae    0x40a9cd
  40a3af:	mov    QWORD PTR [rsp+0x28],r12
  40a3b4:	mov    rsi,r15
  40a3b7:	cmp    edi,0x20
  40a3ba:	je     0x40a9c1
  40a3c0:	lea    r15,[rip+0x10b39]        # 0x41af00
  40a3c7:	movsxd r9,edi
  40a3ca:	movsx  r8d,WORD PTR [r15+r9*2]
  40a3cf:	cmp    r8d,0xffffffef
  40a3d3:	mov    edi,r8d
  40a3d6:	je     0x40a41d
  40a3d8:	cmp    ebp,0xfffffffe
  40a3db:	je     0x40a680
  40a3e1:	test   ebp,ebp
  40a3e3:	jle    0x40a620
  40a3e9:	cmp    ebp,0x115
  40a3ef:	mov    eax,0x2
  40a3f4:	jle    0x40a5e1
  40a3fa:	add    r8d,eax
  40a3fd:	cmp    r8d,0xab
  40a404:	ja     0x40a41d
  40a406:	lea    rdx,[rip+0x10973]        # 0x41ad80
  40a40d:	movsxd r8,r8d
  40a410:	movsx  edx,BYTE PTR [rdx+r8*1]
  40a415:	cmp    edx,eax
  40a417:	je     0x40a630
  40a41d:	lea    rax,[rip+0x10b5c]        # 0x41af80
  40a424:	movzx  edx,BYTE PTR [rax+r9*1]
  40a429:	test   edx,edx
  40a42b:	mov    rax,rdx
  40a42e:	je     0x40a4e2
  40a434:	movsxd rdi,edx
  40a437:	lea    rdx,[rip+0x10b82]        # 0x41afc0
  40a43e:	movzx  ecx,BYTE PTR [rdx+rdi*1]
  40a442:	mov    edx,0x1
  40a447:	sub    edx,ecx
  40a449:	cmp    al,0x21
  40a44b:	mov    r15d,ecx
  40a44e:	movsxd rdx,edx
  40a451:	movsd  xmm0,QWORD PTR [rbx+rdx*8]
  40a456:	ja     0x40a578
  40a45c:	lea    rdx,[rip+0x10829]        # 0x41ac8c
  40a463:	movsxd rax,DWORD PTR [rdx+rax*4]
  40a467:	add    rdx,rax
  40a46a:	jmp    rdx
  40a46c:	nop    DWORD PTR [rax+0x0]
  40a470:	cmp    ebp,0x0
  40a473:	jg     0x40a664
  40a479:	jne    0x40a4e9
  40a47b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a480:	mov    r12,QWORD PTR [rsp+0x20]
  40a485:	mov    ebx,0x1
  40a48a:	cmp    rsi,r12
  40a48d:	je     0x40a498
  40a48f:	mov    rcx,rsi
  40a492:	call   0x416010
  40a497:	nop
  40a498:	movaps xmm6,XMMWORD PTR [rsp+0x830]
  40a4a0:	mov    eax,ebx
  40a4a2:	movaps xmm7,XMMWORD PTR [rsp+0x840]
  40a4aa:	movaps xmm8,XMMWORD PTR [rsp+0x850]
  40a4b3:	movaps xmm9,XMMWORD PTR [rsp+0x860]
  40a4bc:	movaps xmm10,XMMWORD PTR [rsp+0x870]
  40a4c5:	movaps xmm11,XMMWORD PTR [rsp+0x880]
  40a4ce:	add    rsp,0x898
  40a4d5:	pop    rbx
  40a4d6:	pop    rsi
  40a4d7:	pop    rdi
  40a4d8:	pop    rbp
  40a4d9:	pop    r12
  40a4db:	pop    r13
  40a4dd:	pop    r14
  40a4df:	pop    r15
  40a4e1:	ret    
  40a4e2:	cmp    DWORD PTR [rsp+0x34],0x3
  40a4e7:	je     0x40a470
  40a4e9:	movsx  eax,di
  40a4ec:	jmp    0x40a506
  40a4ee:	xchg   ax,ax
  40a4f0:	cmp    r14,rsi
  40a4f3:	je     0x40a480
  40a4f5:	sub    r14,0x2
  40a4f9:	movsx  rax,WORD PTR [r14]
  40a4fd:	sub    rbx,0x8
  40a501:	movsx  eax,WORD PTR [r15+rax*2]
  40a506:	cmp    eax,0xffffffef
  40a509:	je     0x40a4f0
  40a50b:	add    eax,0x1
  40a50e:	cmp    eax,0xab
  40a513:	ja     0x40a4f0
  40a515:	lea    rdx,[rip+0x10864]        # 0x41ad80
  40a51c:	cdqe   
  40a51e:	cmp    BYTE PTR [rdx+rax*1],0x1
  40a522:	jne    0x40a4f0
  40a524:	lea    rdx,[rip+0x10915]        # 0x41ae40
  40a52b:	movzx  edi,BYTE PTR [rdx+rax*1]
  40a52f:	test   edi,edi
  40a531:	je     0x40a4f0
  40a533:	mov    rdx,QWORD PTR [rsp+0x50]
  40a538:	mov    rax,rbx
  40a53b:	mov    DWORD PTR [rsp+0x34],0x3
  40a543:	add    rbx,0x8
  40a547:	mov    QWORD PTR [rax+0x8],rdx
  40a54b:	jmp    0x40a5d8
  40a550:	mov    r12,QWORD PTR [rbx-0x10]
  40a554:	mov    rdx,QWORD PTR [rbx]
  40a557:	mov    rcx,r12
  40a55a:	call   0x405150
  40a55f:	test   eax,eax
  40a561:	mov    DWORD PTR [rip+0x16061],eax        # 0x4205c8
  40a567:	jne    0x40a770
  40a56d:	mov    QWORD PTR [rsp+0x38],r12
  40a572:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40a578:	movzx  r9d,r15b
  40a57c:	lea    rdx,[r9*8+0x0]
  40a584:	add    r9,r9
  40a587:	mov    rax,r9
  40a58a:	neg    rdx
  40a58d:	neg    rax
  40a590:	add    r14,rax
  40a593:	lea    rax,[rip+0x10a66]        # 0x41b000
  40a59a:	add    rdx,rbx
  40a59d:	lea    rbx,[rdx+0x8]
  40a5a1:	movsd  QWORD PTR [rdx+0x8],xmm0
  40a5a6:	lea    rdx,[rip+0x1093f]        # 0x41aeec
  40a5ad:	movzx  eax,BYTE PTR [rax+rdi*1]
  40a5b1:	movzx  ecx,WORD PTR [r14]
  40a5b5:	sub    eax,0x19
  40a5b8:	cdqe   
  40a5ba:	movsx  r8d,BYTE PTR [rdx+rax*1]
  40a5bf:	movsx  edx,cx
  40a5c2:	add    edx,r8d
  40a5c5:	cmp    edx,0xab
  40a5cb:	jbe    0x40a5f4
  40a5cd:	lea    rdx,[rip+0x1099e]        # 0x41af72
  40a5d4:	movsx  edi,BYTE PTR [rdx+rax*1]
  40a5d8:	add    r14,0x2
  40a5dc:	jmp    0x40a2f6
  40a5e1:	lea    rdx,[rip+0x10a58]        # 0x41b040
  40a5e8:	movsxd rax,ebp
  40a5eb:	movzx  eax,BYTE PTR [rdx+rax*1]
  40a5ef:	jmp    0x40a3fa
  40a5f4:	lea    r8,[rip+0x10785]        # 0x41ad80
  40a5fb:	movsxd rdx,edx
  40a5fe:	movsx  r8w,BYTE PTR [r8+rdx*1]
  40a604:	cmp    cx,r8w
  40a608:	jne    0x40a5cd
  40a60a:	lea    rax,[rip+0x1082f]        # 0x41ae40
  40a611:	movzx  edi,BYTE PTR [rax+rdx*1]
  40a615:	jmp    0x40a5d8
  40a617:	nop    WORD PTR [rax+rax*1+0x0]
  40a620:	xor    eax,eax
  40a622:	xor    ebp,ebp
  40a624:	jmp    0x40a3fa
  40a629:	nop    DWORD PTR [rax+0x0]
  40a630:	lea    rax,[rip+0x10809]        # 0x41ae40
  40a637:	movzx  edi,BYTE PTR [rax+r8*1]
  40a63c:	test   edi,edi
  40a63e:	je     0x40a6ad
  40a640:	mov    eax,DWORD PTR [rsp+0x34]
  40a644:	mov    ebp,0xfffffffe
  40a649:	cmp    eax,0x1
  40a64c:	adc    eax,0xffffffff
  40a64f:	add    rbx,0x8
  40a653:	mov    DWORD PTR [rsp+0x34],eax
  40a657:	mov    rax,QWORD PTR [rsp+0x50]
  40a65c:	mov    QWORD PTR [rbx],rax
  40a65f:	jmp    0x40a5d8
  40a664:	mov    ebp,0xfffffffe
  40a669:	jmp    0x40a4e9
  40a66e:	movsd  xmm0,QWORD PTR [rbx]
  40a672:	jmp    0x40a578
  40a677:	nop    WORD PTR [rax+rax*1+0x0]
  40a680:	mov    rdx,QWORD PTR [rsp+0x8e0]
  40a688:	mov    rcx,QWORD PTR [rsp+0x40]
  40a68d:	mov    QWORD PTR [rsp+0x48],r9
  40a692:	mov    DWORD PTR [rsp+0x38],r8d
  40a697:	call   0x409dc0
  40a69c:	mov    r9,QWORD PTR [rsp+0x48]
  40a6a1:	mov    ebp,eax
  40a6a3:	mov    r8d,DWORD PTR [rsp+0x38]
  40a6a8:	jmp    0x40a3e1
  40a6ad:	movsd  xmm0,QWORD PTR [rbx+0x8]
  40a6b2:	xor    eax,eax
  40a6b4:	xor    edx,edx
  40a6b6:	xor    edi,edi
  40a6b8:	jmp    0x40a590
  40a6bd:	mov    rax,QWORD PTR [rsp+0x8e0]
  40a6c5:	mov    r12,QWORD PTR [rsp+0x20]
  40a6ca:	mov    ebx,0x1
  40a6cf:	mov    DWORD PTR [rip+0x15eef],0xe        # 0x4205c8
  40a6d9:	mov    DWORD PTR [rax+0x18],0xe
  40a6e0:	jmp    0x40a48a
  40a6e5:	mov    rax,QWORD PTR [rsp+0x8e0]
  40a6ed:	mov    r12,QWORD PTR [rsp+0x20]
  40a6f2:	mov    ebx,0x1
  40a6f7:	mov    DWORD PTR [rip+0x15ec7],0x14        # 0x4205c8
  40a701:	mov    DWORD PTR [rax+0x18],0x14
  40a708:	jmp    0x40a48a
  40a70d:	movsd  xmm0,QWORD PTR [rbx-0x8]
  40a712:	jmp    0x40a578
  40a717:	movsd  xmm0,QWORD PTR [rbx-0x10]
  40a71c:	divsd  xmm0,QWORD PTR [rbx]
  40a720:	jmp    0x40a578
  40a725:	mov    rax,QWORD PTR [rsp+0x8e0]
  40a72d:	mov    r12,QWORD PTR [rsp+0x20]
  40a732:	mov    ebx,0x1
  40a737:	mov    DWORD PTR [rip+0x15e87],0x13        # 0x4205c8
  40a741:	mov    DWORD PTR [rax+0x18],0x13
  40a748:	jmp    0x40a48a
  40a74d:	mov    r12,QWORD PTR [rbx]
  40a750:	mov    rdx,QWORD PTR [rbx-0x8]
  40a754:	mov    r8d,0x1
  40a75a:	mov    rcx,r12
  40a75d:	call   0x405c40
  40a762:	test   eax,eax
  40a764:	mov    DWORD PTR [rip+0x15e5e],eax        # 0x4205c8
  40a76a:	je     0x40a56d
  40a770:	mov    rcx,QWORD PTR [rsp+0x8e0]
  40a778:	mov    r12,QWORD PTR [rsp+0x20]
  40a77d:	mov    ebx,0x1
  40a782:	mov    DWORD PTR [rcx+0x18],eax
  40a785:	jmp    0x40a48a
  40a78a:	nop    WORD PTR [rax+rax*1+0x0]
  40a790:	mov    rdx,QWORD PTR [rbx]
  40a793:	movsd  xmm0,QWORD PTR [rdx+0x640]
  40a79b:	xorpd  xmm0,xmm10
  40a7a0:	movsd  QWORD PTR [rdx+0x640],xmm0
  40a7a8:	mov    r12,QWORD PTR [rbx-0x18]
  40a7ac:	mov    rcx,r12
  40a7af:	call   0x405a60
  40a7b4:	test   eax,eax
  40a7b6:	mov    DWORD PTR [rip+0x15e0c],eax        # 0x4205c8
  40a7bc:	je     0x40a56d
  40a7c2:	jmp    0x40a770
  40a7c4:	mov    r12,QWORD PTR [rbx-0x10]
  40a7c8:	mov    rdx,QWORD PTR [rbx]
  40a7cb:	mov    rcx,r12
  40a7ce:	call   0x4051a0
  40a7d3:	test   eax,eax
  40a7d5:	mov    DWORD PTR [rip+0x15ded],eax        # 0x4205c8
  40a7db:	je     0x40a56d
  40a7e1:	jmp    0x40a770
  40a7e3:	mov    rdx,QWORD PTR [rbx]
  40a7e6:	mov    r12,QWORD PTR [rbx-0x10]
  40a7ea:	movsd  xmm0,QWORD PTR [rdx+0x640]
  40a7f2:	xorpd  xmm0,xmm9
  40a7f7:	movsd  QWORD PTR [rdx+0x640],xmm0
  40a7ff:	mov    rcx,r12
  40a802:	call   0x405b90
  40a807:	test   eax,eax
  40a809:	mov    DWORD PTR [rip+0x15db9],eax        # 0x4205c8
  40a80f:	je     0x40a56d
  40a815:	jmp    0x40a770
  40a81a:	nop    WORD PTR [rax+rax*1+0x0]
  40a820:	mov    r12,QWORD PTR [rbx-0x8]
  40a824:	jmp    0x40a554
  40a829:	mov    r12,QWORD PTR [rbx-0x10]
  40a82d:	mov    rdx,QWORD PTR [rbx]
  40a830:	jmp    0x40a7ac
  40a835:	mov    rdx,QWORD PTR [rbx]
  40a838:	movsd  xmm0,QWORD PTR [rdx+0x640]
  40a840:	xorpd  xmm0,xmm6
  40a844:	jmp    0x40a7a0
  40a849:	movsd  xmm11,QWORD PTR [rbx]
  40a84e:	call   0x409bf0
  40a853:	test   rax,rax
  40a856:	je     0x40a6bd
  40a85c:	mov    QWORD PTR [rsp+0x38],rax
  40a861:	movsd  QWORD PTR [rax+0x640],xmm11
  40a86a:	mov    DWORD PTR [rip+0x15d54],0x0        # 0x4205c8
  40a874:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40a87a:	jmp    0x40a578
  40a87f:	mov    r12,QWORD PTR [rbx]
  40a882:	mov    edx,0x3
  40a887:	mov    rcx,r12
  40a88a:	call   0x4058a0
  40a88f:	test   eax,eax
  40a891:	mov    DWORD PTR [rip+0x15d31],eax        # 0x4205c8
  40a897:	je     0x40a56d
  40a89d:	jmp    0x40a770
  40a8a2:	mov    r12,QWORD PTR [rbx]
  40a8a5:	mov    edx,0x2
  40a8aa:	jmp    0x40a887
  40a8ac:	mov    r12,QWORD PTR [rbx]
  40a8af:	mov    rdx,QWORD PTR [rbx-0x8]
  40a8b3:	xor    r8d,r8d
  40a8b6:	jmp    0x40a75a
  40a8bb:	mov    r12,QWORD PTR [rbx]
  40a8be:	mov    rdx,QWORD PTR [rbx-0x8]
  40a8c2:	mov    rcx,r12
  40a8c5:	call   0x409ca0
  40a8ca:	test   eax,eax
  40a8cc:	mov    DWORD PTR [rip+0x15cf6],eax        # 0x4205c8
  40a8d2:	je     0x40a56d
  40a8d8:	jmp    0x40a770
  40a8dd:	nop    DWORD PTR [rax]
  40a8e0:	mov    r12,QWORD PTR [rbx]
  40a8e3:	mov    rcx,r12
  40a8e6:	call   0x4059b0
  40a8eb:	mov    QWORD PTR [rsp+0x38],r12
  40a8f0:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40a8f6:	jmp    0x40a578
  40a8fb:	mov    rax,QWORD PTR [rbx]
  40a8fe:	movsd  xmm1,QWORD PTR [rax+0x640]
  40a906:	mov    QWORD PTR [rsp+0x38],rax
  40a90b:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40a911:	xorpd  xmm1,xmm8
  40a916:	movsd  QWORD PTR [rax+0x640],xmm1
  40a91e:	jmp    0x40a578
  40a923:	mov    rax,QWORD PTR [rbx]
  40a926:	movsd  xmm1,QWORD PTR [rax+0x640]
  40a92e:	mov    QWORD PTR [rsp+0x38],rax
  40a933:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40a939:	xorpd  xmm1,xmm7
  40a93d:	movsd  QWORD PTR [rax+0x640],xmm1
  40a945:	jmp    0x40a578
  40a94a:	mov    r12,QWORD PTR [rsp+0x20]
  40a94f:	call   0x409bf0
  40a954:	test   rax,rax
  40a957:	je     0x40a9df
  40a95d:	mov    rcx,QWORD PTR [rsp+0x8e0]
  40a965:	movsd  xmm2,QWORD PTR [rip+0x107f3]        # 0x41b160
  40a96d:	mov    DWORD PTR [rip+0x15c51],0x0        # 0x4205c8
  40a977:	xor    ebx,ebx
  40a979:	movsd  QWORD PTR [rax+0x640],xmm2
  40a981:	mov    QWORD PTR [rcx+0x10],rax
  40a985:	jmp    0x40a48a
  40a98a:	mov    r12,QWORD PTR [rbx-0x10]
  40a98e:	mov    rdx,QWORD PTR [rbx]
  40a991:	jmp    0x40a7ff
  40a996:	mov    rax,QWORD PTR [rbx-0x8]
  40a99a:	mov    rcx,QWORD PTR [rsp+0x8e0]
  40a9a2:	xor    ebx,ebx
  40a9a4:	mov    r12,QWORD PTR [rsp+0x20]
  40a9a9:	mov    QWORD PTR [rcx+0x10],rax
  40a9ad:	jmp    0x40a48a
  40a9b2:	mov    r12,QWORD PTR [rsp+0x20]
  40a9b7:	mov    ebx,0x2
  40a9bc:	jmp    0x40a48a
  40a9c1:	mov    r12,QWORD PTR [rsp+0x20]
  40a9c6:	xor    ebx,ebx
  40a9c8:	jmp    0x40a48a
  40a9cd:	mov    r12,QWORD PTR [rsp+0x20]
  40a9d2:	mov    rsi,r15
  40a9d5:	mov    ebx,0x1
  40a9da:	jmp    0x40a48a
  40a9df:	mov    rax,QWORD PTR [rsp+0x8e0]
  40a9e7:	mov    DWORD PTR [rip+0x15bd7],0xe        # 0x4205c8
  40a9f1:	mov    ebx,0x1
  40a9f6:	mov    QWORD PTR [rax+0x10],0x0
  40a9fe:	mov    DWORD PTR [rax+0x18],0xe
  40aa05:	jmp    0x40a48a
  40aa0a:	nop    WORD PTR [rax+rax*1+0x0]
  40aa10:	ret    
  40aa11:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa20:	push   rsi
  40aa21:	push   rbx
  40aa22:	sub    rsp,0x28
  40aa26:	mov    eax,DWORD PTR [rip+0x15b98]        # 0x4205c4
  40aa2c:	cmp    eax,DWORD PTR [rip+0x15b8e]        # 0x4205c0
  40aa32:	mov    esi,ecx
  40aa34:	jle    0x40aa3c
  40aa36:	mov    DWORD PTR [rip+0x15b84],eax        # 0x4205c0
  40aa3c:	cmp    eax,esi
  40aa3e:	lea    rbx,[rip+0x178fb]        # 0x422340
  40aa45:	jle    0x40aa7e
  40aa47:	nop    WORD PTR [rax+rax*1+0x0]
  40aa50:	sub    eax,0x1
  40aa53:	mov    DWORD PTR [rip+0x15b6b],eax        # 0x4205c4
  40aa59:	cdqe   
  40aa5b:	mov    rcx,QWORD PTR [rbx+rax*8]
  40aa5f:	call   0x404a30
  40aa64:	movsxd rax,DWORD PTR [rip+0x15b59]        # 0x4205c4
  40aa6b:	mov    rcx,QWORD PTR [rbx+rax*8]
  40aa6f:	call   0x416010
  40aa74:	mov    eax,DWORD PTR [rip+0x15b4a]        # 0x4205c4
  40aa7a:	cmp    eax,esi
  40aa7c:	jg     0x40aa50
  40aa7e:	add    rsp,0x28
  40aa82:	pop    rbx
  40aa83:	pop    rsi
  40aa84:	ret    
  40aa85:	nop
  40aa86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa90:	push   r13
  40aa92:	push   r12
  40aa94:	push   rbp
  40aa95:	push   rdi
  40aa96:	push   rsi
  40aa97:	push   rbx
  40aa98:	sub    rsp,0x58
  40aa9c:	mov    r12d,DWORD PTR [rip+0x15b21]        # 0x4205c4
  40aaa3:	mov    rbp,rdx
  40aaa6:	mov    rdi,rcx
  40aaa9:	mov    rsi,r8
  40aaac:	mov    r13,r9
  40aaaf:	call   0x404a00
  40aab4:	lea    rcx,[rsp+0x20]
  40aab9:	mov    DWORD PTR [rsp+0x20],0x0
  40aac1:	mov    QWORD PTR [rsp+0x28],rbp
  40aac6:	mov    DWORD PTR [rsp+0x38],0x1
  40aace:	call   0x40a250
  40aad3:	test   eax,eax
  40aad5:	mov    ebx,eax
  40aad7:	je     0x40ab24
  40aad9:	cmp    DWORD PTR [rsp+0x20],0xffffffff
  40aade:	je     0x40ab60
  40aae4:	test   rsi,rsi
  40aae7:	je     0x40aafc
  40aae9:	movsxd rdx,DWORD PTR [rsp+0x38]
  40aaee:	mov    rax,QWORD PTR [rip+0x113bb]        # 0x41beb0
  40aaf5:	mov    rax,QWORD PTR [rax+rdx*8]
  40aaf9:	mov    QWORD PTR [rsi],rax
  40aafc:	test   r13,r13
  40aaff:	je     0x40ab09
  40ab01:	mov    eax,DWORD PTR [rsp+0x20]
  40ab05:	mov    DWORD PTR [r13+0x0],eax
  40ab09:	mov    ecx,r12d
  40ab0c:	call   0x40aa20
  40ab11:	mov    ebx,DWORD PTR [rsp+0x38]
  40ab15:	mov    eax,ebx
  40ab17:	add    rsp,0x58
  40ab1b:	pop    rbx
  40ab1c:	pop    rsi
  40ab1d:	pop    rdi
  40ab1e:	pop    rbp
  40ab1f:	pop    r12
  40ab21:	pop    r13
  40ab23:	ret    
  40ab24:	test   rsi,rsi
  40ab27:	je     0x40ab30
  40ab29:	mov    QWORD PTR [rsi],0x0
  40ab30:	mov    rdx,QWORD PTR [rsp+0x30]
  40ab35:	mov    rcx,rdi
  40ab38:	call   0x405150
  40ab3d:	mov    rcx,QWORD PTR [rsp+0x30]
  40ab42:	call   0x404a30
  40ab47:	mov    ecx,r12d
  40ab4a:	call   0x40aa20
  40ab4f:	mov    eax,ebx
  40ab51:	add    rsp,0x58
  40ab55:	pop    rbx
  40ab56:	pop    rsi
  40ab57:	pop    rdi
  40ab58:	pop    rbp
  40ab59:	pop    r12
  40ab5b:	pop    r13
  40ab5d:	ret    
  40ab5e:	xchg   ax,ax
  40ab60:	mov    rcx,rbp
  40ab63:	call   0x415f68
  40ab68:	test   rsi,rsi
  40ab6b:	mov    DWORD PTR [rsp+0x20],eax
  40ab6f:	jne    0x40aae9
  40ab75:	jmp    0x40aafc
  40ab77:	nop
  40ab78:	nop
  40ab79:	nop
  40ab7a:	nop
  40ab7b:	nop
  40ab7c:	nop
  40ab7d:	nop
  40ab7e:	nop
  40ab7f:	nop
  40ab80:	push   r13
  40ab82:	push   r12
  40ab84:	push   rbp
  40ab85:	push   rdi
  40ab86:	push   rsi
  40ab87:	push   rbx
  40ab88:	movsxd rax,DWORD PTR [rip+0x15a51]        # 0x4205e0
  40ab8f:	mov    ebp,DWORD PTR [rip+0x15a4f]        # 0x4205e4
  40ab95:	mov    edi,DWORD PTR [rip+0x15a35]        # 0x4205d0
  40ab9b:	mov    ebx,ebp
  40ab9d:	lea    r9,[rcx+rax*8]
  40aba1:	mov    r11,rax
  40aba4:	mov    esi,edi
  40aba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40abb0:	cmp    r11d,ebx
  40abb3:	jle    0x40ac01
  40abb5:	cmp    esi,r11d
  40abb8:	jle    0x40ac01
  40abba:	mov    r12d,esi
  40abbd:	mov    r13d,r11d
  40abc0:	sub    r12d,r11d
  40abc3:	sub    r13d,ebx
  40abc6:	cmp    r12d,r13d
  40abc9:	jg     0x40ac20
  40abcb:	test   r12d,r12d
  40abce:	jle    0x40abf9
  40abd0:	movsxd rax,ebx
  40abd3:	lea    rdx,[rcx+rax*8]
  40abd7:	xor    eax,eax
  40abd9:	nop    DWORD PTR [rax+0x0]
  40abe0:	mov    r8,QWORD PTR [rdx+rax*8]
  40abe4:	mov    r10,QWORD PTR [r9+rax*8]
  40abe8:	mov    QWORD PTR [rdx+rax*8],r10
  40abec:	mov    QWORD PTR [r9+rax*8],r8
  40abf0:	add    rax,0x1
  40abf4:	cmp    r12d,eax
  40abf7:	jg     0x40abe0
  40abf9:	add    ebx,r12d
  40abfc:	cmp    r11d,ebx
  40abff:	jg     0x40abb5
  40ac01:	mov    eax,edi
  40ac03:	mov    DWORD PTR [rip+0x159d7],edi        # 0x4205e0
  40ac09:	sub    eax,r11d
  40ac0c:	add    ebp,eax
  40ac0e:	mov    DWORD PTR [rip+0x159d0],ebp        # 0x4205e4
  40ac14:	pop    rbx
  40ac15:	pop    rsi
  40ac16:	pop    rdi
  40ac17:	pop    rbp
  40ac18:	pop    r12
  40ac1a:	pop    r13
  40ac1c:	ret    
  40ac1d:	nop    DWORD PTR [rax]
  40ac20:	test   r13d,r13d
  40ac23:	jle    0x40ac59
  40ac25:	movsxd rax,ebx
  40ac28:	lea    r8,[rcx+rax*8]
  40ac2c:	mov    eax,ebx
  40ac2e:	sub    eax,r11d
  40ac31:	add    eax,esi
  40ac33:	cdqe   
  40ac35:	lea    rdx,[rcx+rax*8]
  40ac39:	xor    eax,eax
  40ac3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac40:	mov    r10,QWORD PTR [r8+rax*8]
  40ac44:	mov    r12,QWORD PTR [rdx+rax*8]
  40ac48:	mov    QWORD PTR [r8+rax*8],r12
  40ac4c:	mov    QWORD PTR [rdx+rax*8],r10
  40ac50:	add    rax,0x1
  40ac54:	cmp    r13d,eax
  40ac57:	jg     0x40ac40
  40ac59:	sub    esi,r13d
  40ac5c:	jmp    0x40abb0
  40ac61:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac70:	push   r15
  40ac72:	push   r14
  40ac74:	push   r13
  40ac76:	push   r12
  40ac78:	push   rbp
  40ac79:	push   rdi
  40ac7a:	push   rsi
  40ac7b:	push   rbx
  40ac7c:	sub    rsp,0x68
  40ac80:	mov    QWORD PTR [rip+0x1594d],0x0        # 0x4205d8
  40ac8b:	mov    QWORD PTR [rsp+0xc0],r8
  40ac93:	mov    r8d,DWORD PTR [rip+0x15936]        # 0x4205d0
  40ac9a:	mov    ebp,ecx
  40ac9c:	mov    r12,rdx
  40ac9f:	mov    r15,r9
  40aca2:	test   r8d,r8d
  40aca5:	je     0x40afb0
  40acab:	mov    rbx,QWORD PTR [rip+0x15946]        # 0x4205f8
  40acb2:	test   rbx,rbx
  40acb5:	je     0x40ae77
  40acbb:	cmp    BYTE PTR [rbx],0x0
  40acbe:	je     0x40ae70
  40acc4:	test   r15,r15
  40acc7:	je     0x40af00
  40accd:	movsxd rax,DWORD PTR [rip+0x158fc]        # 0x4205d0
  40acd4:	lea    rdi,[rax*8+0x0]
  40acdc:	mov    DWORD PTR [rsp+0x34],eax
  40ace0:	mov    QWORD PTR [rsp+0x40],rax
  40ace5:	mov    rax,QWORD PTR [r12+rax*8]
  40ace9:	mov    QWORD PTR [rsp+0x48],rdi
  40acee:	mov    QWORD PTR [rsp+0x38],rax
  40acf3:	movzx  eax,BYTE PTR [rax+0x1]
  40acf7:	cmp    al,0x2d
  40acf9:	mov    BYTE PTR [rsp+0x5a],al
  40acfd:	je     0x40ad60
  40acff:	mov    r14d,DWORD PTR [rsp+0xd8]
  40ad07:	test   r14d,r14d
  40ad0a:	je     0x40af00
  40ad10:	mov    rax,QWORD PTR [rsp+0x38]
  40ad15:	cmp    BYTE PTR [rax+0x2],0x0
  40ad19:	jne    0x40ad60
  40ad1b:	mov    rax,QWORD PTR [rsp+0xc0]
  40ad23:	movzx  ecx,BYTE PTR [rax]
  40ad26:	test   cl,cl
  40ad28:	je     0x40ad60
  40ad2a:	movzx  r8d,BYTE PTR [rsp+0x5a]
  40ad30:	cmp    r8b,cl
  40ad33:	je     0x40b425
  40ad39:	mov    rax,QWORD PTR [rsp+0xc0]
  40ad41:	jmp    0x40ad4c
  40ad43:	cmp    r8b,dl
  40ad46:	je     0x40b450
  40ad4c:	add    rax,0x1
  40ad50:	movzx  edx,BYTE PTR [rax]
  40ad53:	test   dl,dl
  40ad55:	jne    0x40ad43
  40ad57:	nop    WORD PTR [rax+rax*1+0x0]
  40ad60:	movzx  eax,BYTE PTR [rbx]
  40ad63:	mov    rsi,rbx
  40ad66:	cmp    al,0x3d
  40ad68:	mov    BYTE PTR [rsp+0x5b],al
  40ad6c:	jne    0x40b08f
  40ad72:	mov    r13,QWORD PTR [r15]
  40ad75:	test   r13,r13
  40ad78:	je     0x40b364
  40ad7e:	mov    r14,rsi
  40ad81:	xor    ecx,ecx
  40ad83:	xor    eax,eax
  40ad85:	mov    QWORD PTR [rsp+0x50],rsi
  40ad8a:	mov    DWORD PTR [rsp+0xb0],ebp
  40ad91:	sub    r14,rbx
  40ad94:	mov    rbp,r13
  40ad97:	xor    edi,edi
  40ad99:	mov    esi,ecx
  40ad9b:	mov    r13,rax
  40ad9e:	jmp    0x40adb4
  40ada0:	mov    esi,0x1
  40ada5:	add    r15,0x20
  40ada9:	mov    rbp,QWORD PTR [r15]
  40adac:	add    edi,0x1
  40adaf:	test   rbp,rbp
  40adb2:	je     0x40adf2
  40adb4:	mov    r8,r14
  40adb7:	mov    rdx,rbx
  40adba:	mov    rcx,rbp
  40adbd:	call   0x415f60
  40adc2:	test   eax,eax
  40adc4:	jne    0x40ada5
  40adc6:	mov    rcx,rbp
  40adc9:	call   0x415f68
  40adce:	cmp    rax,r14
  40add1:	je     0x40b2c0
  40add7:	test   r13,r13
  40adda:	jne    0x40ada0
  40addc:	mov    r13,r15
  40addf:	add    r15,0x20
  40ade3:	mov    rbp,QWORD PTR [r15]
  40ade6:	mov    DWORD PTR [rsp+0x5c],edi
  40adea:	add    edi,0x1
  40aded:	test   rbp,rbp
  40adf0:	jne    0x40adb4
  40adf2:	mov    eax,esi
  40adf4:	mov    ebp,DWORD PTR [rsp+0xb0]
  40adfb:	mov    rsi,QWORD PTR [rsp+0x50]
  40ae00:	test   eax,eax
  40ae02:	je     0x40b221
  40ae08:	mov    r13d,DWORD PTR [rip+0xc8b5]        # 0x4176c4
  40ae0f:	test   r13d,r13d
  40ae12:	je     0x40ae47
  40ae14:	mov    rbx,QWORD PTR [r12]
  40ae18:	call   QWORD PTR [rip+0x186aa]        # 0x4234c8
  40ae1e:	mov    r9,QWORD PTR [rsp+0x38]
  40ae23:	lea    rcx,[rax+0x60]
  40ae27:	lea    rdx,[rip+0x10365]        # 0x41b193
  40ae2e:	mov    r8,rbx
  40ae31:	call   0x416028
  40ae36:	mov    eax,DWORD PTR [rip+0x15794]        # 0x4205d0
  40ae3c:	mov    rbx,QWORD PTR [rip+0x157b5]        # 0x4205f8
  40ae43:	mov    DWORD PTR [rsp+0x34],eax
  40ae47:	mov    rcx,rbx
  40ae4a:	call   0x415f68
  40ae4f:	add    rax,rbx
  40ae52:	mov    QWORD PTR [rip+0x1579f],rax        # 0x4205f8
  40ae59:	mov    eax,DWORD PTR [rsp+0x34]
  40ae5d:	add    eax,0x1
  40ae60:	mov    DWORD PTR [rip+0x1576a],eax        # 0x4205d0
  40ae66:	mov    eax,0x3f
  40ae6b:	jmp    0x40b068
  40ae70:	mov    r8d,DWORD PTR [rip+0x15759]        # 0x4205d0
  40ae77:	mov    eax,DWORD PTR [rip+0x15773]        # 0x4205f0
  40ae7d:	cmp    eax,0x1
  40ae80:	je     0x40b0f0
  40ae86:	cmp    ebp,r8d
  40ae89:	je     0x40b0a4
  40ae8f:	movsxd rdx,r8d
  40ae92:	lea    rdi,[rip+0x102f7]        # 0x41b190
  40ae99:	mov    ecx,0x3
  40ae9e:	mov    rdx,QWORD PTR [r12+rdx*8]
  40aea2:	mov    rsi,rdx
  40aea5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40aea7:	jne    0x40b040
  40aead:	mov    eax,DWORD PTR [rip+0x15731]        # 0x4205e4
  40aeb3:	mov    edx,DWORD PTR [rip+0x15727]        # 0x4205e0
  40aeb9:	add    r8d,0x1
  40aebd:	mov    DWORD PTR [rip+0x1570c],r8d        # 0x4205d0
  40aec4:	cmp    eax,edx
  40aec6:	je     0x40b2f0
  40aecc:	cmp    r8d,edx
  40aecf:	je     0x40aedf
  40aed1:	mov    rcx,r12
  40aed4:	call   0x40ab80
  40aed9:	mov    eax,DWORD PTR [rip+0x15705]        # 0x4205e4
  40aedf:	cmp    ebp,eax
  40aee1:	mov    DWORD PTR [rip+0x156f9],ebp        # 0x4205e0
  40aee7:	mov    DWORD PTR [rip+0x156e3],ebp        # 0x4205d0
  40aeed:	jne    0x40b0b8
  40aef3:	mov    eax,0xffffffff
  40aef8:	jmp    0x40b068
  40aefd:	nop    DWORD PTR [rax]
  40af00:	mov    rax,QWORD PTR [rsp+0xc0]
  40af08:	lea    r8,[rbx+0x1]
  40af0c:	mov    QWORD PTR [rip+0x156e5],r8        # 0x4205f8
  40af13:	movzx  edx,BYTE PTR [rax]
  40af16:	movsx  eax,BYTE PTR [rbx]
  40af19:	test   dl,dl
  40af1b:	je     0x40af43
  40af1d:	cmp    al,dl
  40af1f:	mov    rdx,QWORD PTR [rsp+0xc0]
  40af27:	jne    0x40af38
  40af29:	jmp    0x40b190
  40af2e:	xchg   ax,ax
  40af30:	cmp    al,cl
  40af32:	je     0x40b190
  40af38:	add    rdx,0x1
  40af3c:	movzx  ecx,BYTE PTR [rdx]
  40af3f:	test   cl,cl
  40af41:	jne    0x40af30
  40af43:	cmp    BYTE PTR [rbx+0x1],0x0
  40af47:	jne    0x40af5f
  40af49:	mov    ecx,0x1
  40af4e:	xor    edx,edx
  40af50:	add    DWORD PTR [rip+0x15679],0x1        # 0x4205d0
  40af57:	test   cl,cl
  40af59:	je     0x40b1d0
  40af5f:	mov    edx,DWORD PTR [rip+0xc75f]        # 0x4176c4
  40af65:	movsx  ebx,al
  40af68:	test   edx,edx
  40af6a:	je     0x40af9a
  40af6c:	cmp    QWORD PTR [rip+0x15674],0x0        # 0x4205e8
  40af74:	mov    rsi,QWORD PTR [r12]
  40af78:	je     0x40b45b
  40af7e:	call   QWORD PTR [rip+0x18544]        # 0x4234c8
  40af84:	lea    rdx,[rip+0x102f6]        # 0x41b281
  40af8b:	lea    rcx,[rax+0x60]
  40af8f:	mov    r9d,ebx
  40af92:	mov    r8,rsi
  40af95:	call   0x416028
  40af9a:	mov    DWORD PTR [rip+0xc720],ebx        # 0x4176c0
  40afa0:	mov    eax,0x3f
  40afa5:	jmp    0x40b068
  40afaa:	nop    WORD PTR [rax+rax*1+0x0]
  40afb0:	lea    rcx,[rip+0x101c9]        # 0x41b180
  40afb7:	mov    DWORD PTR [rip+0x1560f],0x1        # 0x4205d0
  40afc1:	mov    DWORD PTR [rip+0x15615],0x1        # 0x4205e0
  40afcb:	mov    DWORD PTR [rip+0x1560f],0x1        # 0x4205e4
  40afd5:	mov    QWORD PTR [rip+0x15618],0x0        # 0x4205f8
  40afe0:	call   0x416000
  40afe5:	mov    rdi,QWORD PTR [rsp+0xc0]
  40afed:	mov    QWORD PTR [rip+0x155f4],rax        # 0x4205e8
  40aff4:	movzx  edx,BYTE PTR [rdi]
  40aff7:	cmp    dl,0x2d
  40affa:	je     0x40b2d1
  40b000:	cmp    dl,0x2b
  40b003:	je     0x40b300
  40b009:	test   rax,rax
  40b00c:	je     0x40b0c5
  40b012:	mov    DWORD PTR [rip+0x155d4],0x0        # 0x4205f0
  40b01c:	mov    rbx,QWORD PTR [rip+0x155d5]        # 0x4205f8
  40b023:	test   rbx,rbx
  40b026:	jne    0x40acbb
  40b02c:	mov    eax,DWORD PTR [rip+0x155be]        # 0x4205f0
  40b032:	mov    r8d,DWORD PTR [rip+0x15597]        # 0x4205d0
  40b039:	jmp    0x40ae86
  40b03e:	xchg   ax,ax
  40b040:	cmp    BYTE PTR [rdx],0x2d
  40b043:	je     0x40b160
  40b049:	test   eax,eax
  40b04b:	je     0x40aef3
  40b051:	add    r8d,0x1
  40b055:	mov    QWORD PTR [rip+0x1557c],rdx        # 0x4205d8
  40b05c:	mov    eax,0x1
  40b061:	mov    DWORD PTR [rip+0x15568],r8d        # 0x4205d0
  40b068:	add    rsp,0x68
  40b06c:	pop    rbx
  40b06d:	pop    rsi
  40b06e:	pop    rdi
  40b06f:	pop    rbp
  40b070:	pop    r12
  40b072:	pop    r13
  40b074:	pop    r14
  40b076:	pop    r15
  40b078:	ret    
  40b079:	nop    DWORD PTR [rax+0x0]
  40b080:	add    rsi,0x1
  40b084:	movzx  eax,BYTE PTR [rsi]
  40b087:	cmp    al,0x3d
  40b089:	je     0x40ad72
  40b08f:	test   al,al
  40b091:	jne    0x40b080
  40b093:	mov    r13,QWORD PTR [r15]
  40b096:	test   r13,r13
  40b099:	jne    0x40ad7e
  40b09f:	jmp    0x40b364
  40b0a4:	mov    ebp,DWORD PTR [rip+0x15536]        # 0x4205e0
  40b0aa:	mov    eax,DWORD PTR [rip+0x15534]        # 0x4205e4
  40b0b0:	cmp    ebp,eax
  40b0b2:	je     0x40aef3
  40b0b8:	mov    DWORD PTR [rip+0x15512],eax        # 0x4205d0
  40b0be:	mov    eax,0xffffffff
  40b0c3:	jmp    0x40b068
  40b0c5:	mov    rbx,QWORD PTR [rip+0x1552c]        # 0x4205f8
  40b0cc:	mov    DWORD PTR [rip+0x1551a],0x1        # 0x4205f0
  40b0d6:	test   rbx,rbx
  40b0d9:	jne    0x40acbb
  40b0df:	mov    r8d,DWORD PTR [rip+0x154ea]        # 0x4205d0
  40b0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b0f0:	mov    edx,DWORD PTR [rip+0x154ee]        # 0x4205e4
  40b0f6:	mov    eax,DWORD PTR [rip+0x154e4]        # 0x4205e0
  40b0fc:	cmp    edx,eax
  40b0fe:	je     0x40b410
  40b104:	cmp    eax,r8d
  40b107:	je     0x40b118
  40b109:	mov    rcx,r12
  40b10c:	call   0x40ab80
  40b111:	mov    r8d,DWORD PTR [rip+0x154b8]        # 0x4205d0
  40b118:	cmp    ebp,r8d
  40b11b:	jle    0x40b4dc
  40b121:	movsxd rax,r8d
  40b124:	lea    rdx,[r12+rax*8]
  40b128:	mov    eax,r8d
  40b12b:	jmp    0x40b141
  40b12d:	nop    DWORD PTR [rax]
  40b130:	add    eax,0x1
  40b133:	add    rdx,0x8
  40b137:	cmp    eax,ebp
  40b139:	mov    DWORD PTR [rip+0x15491],eax        # 0x4205d0
  40b13f:	je     0x40b1b0
  40b141:	mov    rcx,QWORD PTR [rdx]
  40b144:	cmp    BYTE PTR [rcx],0x2d
  40b147:	jne    0x40b130
  40b149:	cmp    BYTE PTR [rcx+0x1],0x0
  40b14d:	je     0x40b130
  40b14f:	mov    r8d,DWORD PTR [rip+0x1547a]        # 0x4205d0
  40b156:	jmp    0x40b1b3
  40b158:	nop    DWORD PTR [rax+rax*1+0x0]
  40b160:	movzx  ecx,BYTE PTR [rdx+0x1]
  40b164:	test   cl,cl
  40b166:	je     0x40b049
  40b16c:	cmp    cl,0x2d
  40b16f:	sete   al
  40b172:	xor    ecx,ecx
  40b174:	test   r15,r15
  40b177:	setne  cl
  40b17a:	and    rax,rcx
  40b17d:	lea    rbx,[rdx+rax*1+0x1]
  40b182:	mov    QWORD PTR [rip+0x1546f],rbx        # 0x4205f8
  40b189:	jmp    0x40acc4
  40b18e:	xchg   ax,ax
  40b190:	test   rdx,rdx
  40b193:	sete   r9b
  40b197:	cmp    al,0x3a
  40b199:	sete   cl
  40b19c:	or     ecx,r9d
  40b19f:	cmp    BYTE PTR [rbx+0x1],0x0
  40b1a3:	je     0x40af50
  40b1a9:	jmp    0x40af57
  40b1ae:	xchg   ax,ax
  40b1b0:	mov    r8d,eax
  40b1b3:	cmp    ebp,r8d
  40b1b6:	mov    DWORD PTR [rip+0x15424],eax        # 0x4205e0
  40b1bc:	mov    eax,0x1
  40b1c1:	jne    0x40ae8f
  40b1c7:	jmp    0x40b0a4
  40b1cc:	nop    DWORD PTR [rax+0x0]
  40b1d0:	cmp    BYTE PTR [rdx+0x1],0x3a
  40b1d4:	jne    0x40b068
  40b1da:	cmp    BYTE PTR [rdx+0x2],0x3a
  40b1de:	je     0x40b4c6
  40b1e4:	cmp    BYTE PTR [rbx+0x1],0x0
  40b1e8:	jne    0x40b47c
  40b1ee:	movsxd rdx,DWORD PTR [rip+0x153db]        # 0x4205d0
  40b1f5:	cmp    edx,ebp
  40b1f7:	je     0x40b558
  40b1fd:	lea    ecx,[rdx+0x1]
  40b200:	mov    rdx,QWORD PTR [r12+rdx*8]
  40b204:	mov    DWORD PTR [rip+0x153c6],ecx        # 0x4205d0
  40b20a:	mov    QWORD PTR [rip+0x153c7],rdx        # 0x4205d8
  40b211:	mov    QWORD PTR [rip+0x153dc],0x0        # 0x4205f8
  40b21c:	jmp    0x40b068
  40b221:	test   r13,r13
  40b224:	je     0x40b364
  40b22a:	mov    edi,DWORD PTR [rsp+0x5c]
  40b22e:	mov    r15,r13
  40b231:	mov    eax,DWORD PTR [rsp+0x34]
  40b235:	add    eax,0x1
  40b238:	mov    DWORD PTR [rip+0x15392],eax        # 0x4205d0
  40b23e:	cmp    BYTE PTR [rsi],0x0
  40b241:	je     0x40b318
  40b247:	mov    ebp,DWORD PTR [r15+0x8]
  40b24b:	test   ebp,ebp
  40b24d:	jne    0x40b48f
  40b253:	mov    r11d,DWORD PTR [rip+0xc46a]        # 0x4176c4
  40b25a:	test   r11d,r11d
  40b25d:	je     0x40b2a4
  40b25f:	mov    rax,QWORD PTR [rsp+0x40]
  40b264:	mov    rax,QWORD PTR [r12+rax*8]
  40b268:	cmp    BYTE PTR [rax+0x1],0x2d
  40b26c:	je     0x40b529
  40b272:	movsx  esi,BYTE PTR [rax]
  40b275:	mov    rbx,QWORD PTR [r12]
  40b279:	mov    rdi,QWORD PTR [r15]
  40b27c:	call   QWORD PTR [rip+0x18246]        # 0x4234c8
  40b282:	lea    rdx,[rip+0xff5f]        # 0x41b1e8
  40b289:	lea    rcx,[rax+0x60]
  40b28d:	mov    r8,rbx
  40b290:	mov    QWORD PTR [rsp+0x20],rdi
  40b295:	mov    r9d,esi
  40b298:	call   0x416028
  40b29d:	mov    rbx,QWORD PTR [rip+0x15354]        # 0x4205f8
  40b2a4:	mov    rcx,rbx
  40b2a7:	call   0x415f68
  40b2ac:	add    rax,rbx
  40b2af:	mov    QWORD PTR [rip+0x15342],rax        # 0x4205f8
  40b2b6:	mov    eax,0x3f
  40b2bb:	jmp    0x40b068
  40b2c0:	mov    rsi,QWORD PTR [rsp+0x50]
  40b2c5:	mov    ebp,DWORD PTR [rsp+0xb0]
  40b2cc:	jmp    0x40b231
  40b2d1:	mov    DWORD PTR [rip+0x15315],0x2        # 0x4205f0
  40b2db:	add    QWORD PTR [rsp+0xc0],0x1
  40b2e4:	jmp    0x40b01c
  40b2e9:	nop    DWORD PTR [rax+0x0]
  40b2f0:	mov    DWORD PTR [rip+0x152ed],r8d        # 0x4205e4
  40b2f7:	mov    eax,r8d
  40b2fa:	jmp    0x40aedf
  40b2ff:	nop
  40b300:	mov    DWORD PTR [rip+0x152e6],0x0        # 0x4205f0
  40b30a:	add    QWORD PTR [rsp+0xc0],0x1
  40b313:	jmp    0x40b01c
  40b318:	cmp    DWORD PTR [r15+0x8],0x1
  40b31d:	je     0x40b49f
  40b323:	mov    rcx,rbx
  40b326:	call   0x415f68
  40b32b:	add    rbx,rax
  40b32e:	cmp    QWORD PTR [rsp+0xd0],0x0
  40b337:	mov    QWORD PTR [rip+0x152ba],rbx        # 0x4205f8
  40b33e:	je     0x40b34a
  40b340:	mov    rax,QWORD PTR [rsp+0xd0]
  40b348:	mov    DWORD PTR [rax],edi
  40b34a:	mov    rax,QWORD PTR [r15+0x10]
  40b34e:	test   rax,rax
  40b351:	je     0x40b4e4
  40b357:	mov    edx,DWORD PTR [r15+0x18]
  40b35b:	mov    DWORD PTR [rax],edx
  40b35d:	xor    eax,eax
  40b35f:	jmp    0x40b068
  40b364:	cmp    BYTE PTR [rsp+0x5a],0x2d
  40b369:	sete   r8b
  40b36d:	je     0x40b3b8
  40b36f:	mov    r9d,DWORD PTR [rsp+0xd8]
  40b377:	test   r9d,r9d
  40b37a:	je     0x40b3b8
  40b37c:	mov    rax,QWORD PTR [rsp+0xc0]
  40b384:	movzx  edx,BYTE PTR [rax]
  40b387:	test   dl,dl
  40b389:	je     0x40b3b8
  40b38b:	movzx  r9d,BYTE PTR [rsp+0x5b]
  40b391:	cmp    r9b,dl
  40b394:	je     0x40b612
  40b39a:	mov    rax,QWORD PTR [rsp+0xc0]
  40b3a2:	jmp    0x40b3ad
  40b3a4:	cmp    r9b,cl
  40b3a7:	je     0x40b431
  40b3ad:	add    rax,0x1
  40b3b1:	movzx  ecx,BYTE PTR [rax]
  40b3b4:	test   cl,cl
  40b3b6:	jne    0x40b3a4
  40b3b8:	mov    ecx,DWORD PTR [rip+0xc306]        # 0x4176c4
  40b3be:	test   ecx,ecx
  40b3c0:	je     0x40b402
  40b3c2:	test   r8b,r8b
  40b3c5:	jne    0x40b589
  40b3cb:	mov    rax,QWORD PTR [rsp+0x38]
  40b3d0:	mov    rsi,QWORD PTR [r12]
  40b3d4:	movsx  edi,BYTE PTR [rax]
  40b3d7:	call   QWORD PTR [rip+0x180eb]        # 0x4234c8
  40b3dd:	lea    rdx,[rip+0xfe7c]        # 0x41b260
  40b3e4:	lea    rcx,[rax+0x60]
  40b3e8:	mov    QWORD PTR [rsp+0x20],rbx
  40b3ed:	mov    r8,rsi
  40b3f0:	mov    r9d,edi
  40b3f3:	call   0x416028
  40b3f8:	mov    eax,DWORD PTR [rip+0x151d2]        # 0x4205d0
  40b3fe:	mov    DWORD PTR [rsp+0x34],eax
  40b402:	lea    rax,[rip+0xfe77]        # 0x41b280
  40b409:	jmp    0x40ae52
  40b40e:	xchg   ax,ax
  40b410:	cmp    edx,r8d
  40b413:	je     0x40b118
  40b419:	mov    DWORD PTR [rip+0x151c4],r8d        # 0x4205e4
  40b420:	jmp    0x40b118
  40b425:	movzx  eax,BYTE PTR [rbx]
  40b428:	movzx  edx,BYTE PTR [rsp+0x5a]
  40b42d:	mov    BYTE PTR [rsp+0x5b],al
  40b431:	lea    r8,[rbx+0x1]
  40b435:	movsx  eax,BYTE PTR [rsp+0x5b]
  40b43a:	mov    QWORD PTR [rip+0x151b7],r8        # 0x4205f8
  40b441:	jmp    0x40af1d
  40b446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b450:	movzx  eax,BYTE PTR [rbx]
  40b453:	mov    edx,ecx
  40b455:	mov    BYTE PTR [rsp+0x5b],al
  40b459:	jmp    0x40b431
  40b45b:	call   QWORD PTR [rip+0x18067]        # 0x4234c8
  40b461:	lea    rdx,[rip+0xfe33]        # 0x41b29b
  40b468:	lea    rcx,[rax+0x60]
  40b46c:	mov    r9d,ebx
  40b46f:	mov    r8,rsi
  40b472:	call   0x416028
  40b477:	jmp    0x40af9a
  40b47c:	mov    QWORD PTR [rip+0x15155],r8        # 0x4205d8
  40b483:	add    DWORD PTR [rip+0x15146],0x1        # 0x4205d0
  40b48a:	jmp    0x40b211
  40b48f:	add    rsi,0x1
  40b493:	mov    QWORD PTR [rip+0x1513e],rsi        # 0x4205d8
  40b49a:	jmp    0x40b323
  40b49f:	cmp    ebp,eax
  40b4a1:	jle    0x40b4ed
  40b4a3:	mov    eax,DWORD PTR [rsp+0x34]
  40b4a7:	add    eax,0x2
  40b4aa:	mov    DWORD PTR [rip+0x15120],eax        # 0x4205d0
  40b4b0:	mov    rax,QWORD PTR [rsp+0x48]
  40b4b5:	mov    rax,QWORD PTR [r12+rax*1+0x8]
  40b4ba:	mov    QWORD PTR [rip+0x15117],rax        # 0x4205d8
  40b4c1:	jmp    0x40b323
  40b4c6:	cmp    BYTE PTR [rbx+0x1],0x0
  40b4ca:	jne    0x40b47c
  40b4cc:	mov    QWORD PTR [rip+0x15101],0x0        # 0x4205d8
  40b4d7:	jmp    0x40b211
  40b4dc:	mov    eax,r8d
  40b4df:	jmp    0x40b1b3
  40b4e4:	mov    eax,DWORD PTR [r15+0x18]
  40b4e8:	jmp    0x40b068
  40b4ed:	mov    r10d,DWORD PTR [rip+0xc1d0]        # 0x4176c4
  40b4f4:	test   r10d,r10d
  40b4f7:	jne    0x40b5b8
  40b4fd:	mov    rcx,rbx
  40b500:	call   0x415f68
  40b505:	add    rax,rbx
  40b508:	mov    QWORD PTR [rip+0x150e9],rax        # 0x4205f8
  40b50f:	mov    rax,QWORD PTR [rsp+0xc0]
  40b517:	cmp    BYTE PTR [rax],0x3a
  40b51a:	setne  al
  40b51d:	movzx  eax,al
  40b520:	lea    eax,[rax+rax*4+0x3a]
  40b524:	jmp    0x40b068
  40b529:	mov    rbx,QWORD PTR [r12]
  40b52d:	mov    rsi,QWORD PTR [r15]
  40b530:	call   QWORD PTR [rip+0x17f92]        # 0x4234c8
  40b536:	lea    rdx,[rip+0xfc7b]        # 0x41b1b8
  40b53d:	lea    rcx,[rax+0x60]
  40b541:	mov    r8,rbx
  40b544:	mov    r9,rsi
  40b547:	call   0x416028
  40b54c:	mov    rbx,QWORD PTR [rip+0x150a5]        # 0x4205f8
  40b553:	jmp    0x40b2a4
  40b558:	movsx  ebx,al
  40b55b:	mov    eax,DWORD PTR [rip+0xc163]        # 0x4176c4
  40b561:	test   eax,eax
  40b563:	jne    0x40b5ed
  40b569:	mov    rax,QWORD PTR [rsp+0xc0]
  40b571:	mov    DWORD PTR [rip+0xc149],ebx        # 0x4176c0
  40b577:	cmp    BYTE PTR [rax],0x3a
  40b57a:	setne  al
  40b57d:	movzx  eax,al
  40b580:	lea    eax,[rax+rax*4+0x3a]
  40b584:	jmp    0x40b211
  40b589:	mov    rsi,QWORD PTR [r12]
  40b58d:	call   QWORD PTR [rip+0x17f35]        # 0x4234c8
  40b593:	lea    rdx,[rip+0xfca6]        # 0x41b240
  40b59a:	lea    rcx,[rax+0x60]
  40b59e:	mov    r9,rbx
  40b5a1:	mov    r8,rsi
  40b5a4:	call   0x416028
  40b5a9:	mov    eax,DWORD PTR [rip+0x15021]        # 0x4205d0
  40b5af:	mov    DWORD PTR [rsp+0x34],eax
  40b5b3:	jmp    0x40b402
  40b5b8:	mov    rax,QWORD PTR [rsp+0x40]
  40b5bd:	mov    rbx,QWORD PTR [r12]
  40b5c1:	mov    rsi,QWORD PTR [r12+rax*8]
  40b5c5:	call   QWORD PTR [rip+0x17efd]        # 0x4234c8
  40b5cb:	lea    rdx,[rip+0xfc46]        # 0x41b218
  40b5d2:	lea    rcx,[rax+0x60]
  40b5d6:	mov    r8,rbx
  40b5d9:	mov    r9,rsi
  40b5dc:	call   0x416028
  40b5e1:	mov    rbx,QWORD PTR [rip+0x15010]        # 0x4205f8
  40b5e8:	jmp    0x40b4fd
  40b5ed:	mov    rsi,QWORD PTR [r12]
  40b5f1:	call   QWORD PTR [rip+0x17ed1]        # 0x4234c8
  40b5f7:	lea    rdx,[rip+0xfcba]        # 0x41b2b8
  40b5fe:	lea    rcx,[rax+0x60]
  40b602:	mov    r9d,ebx
  40b605:	mov    r8,rsi
  40b608:	call   0x416028
  40b60d:	jmp    0x40b569
  40b612:	movzx  edx,BYTE PTR [rsp+0x5b]
  40b617:	jmp    0x40b431
  40b61c:	nop    DWORD PTR [rax+0x0]
  40b620:	sub    rsp,0x38
  40b624:	xor    r9d,r9d
  40b627:	mov    DWORD PTR [rsp+0x28],0x0
  40b62f:	mov    QWORD PTR [rsp+0x20],0x0
  40b638:	call   0x40ac70
  40b63d:	add    rsp,0x38
  40b641:	ret    
  40b642:	nop
  40b643:	nop
  40b644:	nop
  40b645:	nop
  40b646:	nop
  40b647:	nop
  40b648:	nop
  40b649:	nop
  40b64a:	nop
  40b64b:	nop
  40b64c:	nop
  40b64d:	nop
  40b64e:	nop
  40b64f:	nop
  40b650:	sub    rsp,0x38
  40b654:	mov    rax,QWORD PTR [rsp+0x60]
  40b659:	mov    DWORD PTR [rsp+0x28],0x0
  40b661:	mov    QWORD PTR [rsp+0x20],rax
  40b666:	call   0x40ac70
  40b66b:	add    rsp,0x38
  40b66f:	ret    
  40b670:	sub    rsp,0x38
  40b674:	mov    rax,QWORD PTR [rsp+0x60]
  40b679:	mov    DWORD PTR [rsp+0x28],0x1
  40b681:	mov    QWORD PTR [rsp+0x20],rax
  40b686:	call   0x40ac70
  40b68b:	add    rsp,0x38
  40b68f:	ret    
  40b690:	jmp    QWORD PTR [rip+0x1805a]        # 0x4236f0
  40b696:	nop
  40b697:	nop
  40b698:	jmp    QWORD PTR [rip+0x1804a]        # 0x4236e8
  40b69e:	nop
  40b69f:	nop
  40b6a0:	jmp    QWORD PTR [rip+0x17df2]        # 0x423498
  40b6a6:	nop
  40b6a7:	nop
  40b6a8:	jmp    QWORD PTR [rip+0x17db2]        # 0x423460
  40b6ae:	nop
  40b6af:	nop
  40b6b0:	jmp    QWORD PTR [rip+0x17da2]        # 0x423458
  40b6b6:	nop
  40b6b7:	nop
  40b6b8:	jmp    QWORD PTR [rip+0x17d3a]        # 0x4233f8
  40b6be:	nop
  40b6bf:	nop
  40b6c0:	jmp    QWORD PTR [rip+0x17d1a]        # 0x4233e0
  40b6c6:	nop
  40b6c7:	nop
  40b6c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b6d0:	push   rbx
  40b6d1:	sub    rsp,0x30
  40b6d5:	mov    rbx,rcx
  40b6d8:	mov    rcx,QWORD PTR [rip+0x16f81]        # 0x422660
  40b6df:	call   0x40bc80
  40b6e4:	cmp    rax,0xffffffffffffffff
  40b6e8:	mov    QWORD PTR [rsp+0x20],rax
  40b6ed:	je     0x40b765
  40b6ef:	mov    ecx,0x8
  40b6f4:	call   0x4160a8
  40b6f9:	mov    rcx,QWORD PTR [rip+0x16f60]        # 0x422660
  40b700:	call   0x40bc80
  40b705:	mov    rcx,QWORD PTR [rip+0x16f5c]        # 0x422668
  40b70c:	mov    QWORD PTR [rsp+0x20],rax
  40b711:	call   0x40bc80
  40b716:	lea    rdx,[rsp+0x20]
  40b71b:	lea    r8,[rsp+0x28]
  40b720:	mov    rcx,rbx
  40b723:	mov    QWORD PTR [rsp+0x28],rax
  40b728:	call   0x4160f8
  40b72d:	mov    rcx,QWORD PTR [rsp+0x20]
  40b732:	mov    rbx,rax
  40b735:	call   0x40bc90
  40b73a:	mov    rcx,QWORD PTR [rsp+0x28]
  40b73f:	mov    QWORD PTR [rip+0x16f1a],rax        # 0x422660
  40b746:	call   0x40bc90
  40b74b:	mov    ecx,0x8
  40b750:	mov    QWORD PTR [rip+0x16f11],rax        # 0x422668
  40b757:	call   0x416088
  40b75c:	mov    rax,rbx
  40b75f:	add    rsp,0x30
  40b763:	pop    rbx
  40b764:	ret    
  40b765:	mov    rax,QWORD PTR [rip+0x10634]        # 0x41bda0
  40b76c:	mov    rcx,rbx
  40b76f:	call   QWORD PTR [rax]
  40b771:	add    rsp,0x30
  40b775:	pop    rbx
  40b776:	ret    
  40b777:	nop    WORD PTR [rax+rax*1+0x0]
  40b780:	sub    rsp,0x28
  40b784:	call   0x40b6d0
  40b789:	test   rax,rax
  40b78c:	sete   al
  40b78f:	movzx  eax,al
  40b792:	neg    eax
  40b794:	add    rsp,0x28
  40b798:	ret    
  40b799:	nop
  40b79a:	nop
  40b79b:	nop
  40b79c:	nop
  40b79d:	nop
  40b79e:	nop
  40b79f:	nop
  40b7a0:	sub    rsp,0x28
  40b7a4:	mov    rax,QWORD PTR [rip+0xbf25]        # 0x4176d0
  40b7ab:	mov    rax,QWORD PTR [rax]
  40b7ae:	test   rax,rax
  40b7b1:	je     0x40b7d0
  40b7b3:	call   rax
  40b7b5:	mov    rax,QWORD PTR [rip+0xbf14]        # 0x4176d0
  40b7bc:	lea    rdx,[rax+0x8]
  40b7c0:	mov    rax,QWORD PTR [rax+0x8]
  40b7c4:	mov    QWORD PTR [rip+0xbf05],rdx        # 0x4176d0
  40b7cb:	test   rax,rax
  40b7ce:	jne    0x40b7b3
  40b7d0:	add    rsp,0x28
  40b7d4:	ret    
  40b7d5:	nop
  40b7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7e0:	push   rsi
  40b7e1:	push   rbx
  40b7e2:	sub    rsp,0x28
  40b7e6:	mov    rsi,QWORD PTR [rip+0x10503]        # 0x41bcf0
  40b7ed:	mov    rax,QWORD PTR [rsi]
  40b7f0:	cmp    eax,0xffffffff
  40b7f3:	mov    ebx,eax
  40b7f5:	je     0x40b820
  40b7f7:	test   ebx,ebx
  40b7f9:	je     0x40b80a
  40b7fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b800:	mov    eax,ebx
  40b802:	call   QWORD PTR [rsi+rax*8]
  40b805:	sub    ebx,0x1
  40b808:	jne    0x40b800
  40b80a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x40b7a0
  40b811:	add    rsp,0x28
  40b815:	pop    rbx
  40b816:	pop    rsi
  40b817:	jmp    0x40b780
  40b81c:	nop    DWORD PTR [rax+0x0]
  40b820:	xor    ebx,ebx
  40b822:	jmp    0x40b826
  40b824:	mov    ebx,eax
  40b826:	lea    edx,[rbx+0x1]
  40b829:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40b82e:	mov    rax,rdx
  40b831:	jne    0x40b824
  40b833:	jmp    0x40b7f7
  40b835:	nop
  40b836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b840:	mov    eax,DWORD PTR [rip+0x14dba]        # 0x420600
  40b846:	test   eax,eax
  40b848:	je     0x40b850
  40b84a:	repz ret 
  40b84c:	nop    DWORD PTR [rax+0x0]
  40b850:	mov    DWORD PTR [rip+0x14da6],0x1        # 0x420600
  40b85a:	jmp    0x40b7e0
  40b85c:	nop
  40b85d:	nop
  40b85e:	nop
  40b85f:	nop
  40b860:	mov    rax,QWORD PTR [rip+0x17c69]        # 0x4234d0
  40b867:	rex.W jmp rax
  40b86a:	nop
  40b86b:	nop
  40b86c:	nop
  40b86d:	nop
  40b86e:	nop
  40b86f:	nop
  40b870:	xor    eax,eax
  40b872:	ret    
  40b873:	nop
  40b874:	nop
  40b875:	nop
  40b876:	nop
  40b877:	nop
  40b878:	nop
  40b879:	nop
  40b87a:	nop
  40b87b:	nop
  40b87c:	nop
  40b87d:	nop
  40b87e:	nop
  40b87f:	nop
  40b880:	push   r12
  40b882:	push   rbp
  40b883:	push   rdi
  40b884:	push   rsi
  40b885:	push   rbx
  40b886:	sub    rsp,0x40
  40b88a:	mov    rbx,QWORD PTR [rip+0xbf1f]        # 0x4177b0
  40b891:	movabs rax,0x2b992ddfa232
  40b89b:	mov    QWORD PTR [rsp+0x20],0x0
  40b8a4:	cmp    rbx,rax
  40b8a7:	je     0x40b8c0
  40b8a9:	not    rbx
  40b8ac:	mov    QWORD PTR [rip+0xbf0d],rbx        # 0x4177c0
  40b8b3:	add    rsp,0x40
  40b8b7:	pop    rbx
  40b8b8:	pop    rsi
  40b8b9:	pop    rdi
  40b8ba:	pop    rbp
  40b8bb:	pop    r12
  40b8bd:	ret    
  40b8be:	xchg   ax,ax
  40b8c0:	lea    rcx,[rsp+0x20]
  40b8c5:	call   QWORD PTR [rip+0x17b35]        # 0x423400
  40b8cb:	mov    r12,QWORD PTR [rsp+0x20]
  40b8d0:	call   QWORD PTR [rip+0x17af2]        # 0x4233c8
  40b8d6:	mov    ebp,eax
  40b8d8:	call   QWORD PTR [rip+0x17af2]        # 0x4233d0
  40b8de:	mov    edi,eax
  40b8e0:	call   QWORD PTR [rip+0x17b22]        # 0x423408
  40b8e6:	lea    rcx,[rsp+0x30]
  40b8eb:	mov    esi,eax
  40b8ed:	call   QWORD PTR [rip+0x17b3d]        # 0x423430
  40b8f3:	xor    r12,QWORD PTR [rsp+0x30]
  40b8f8:	mov    edx,edi
  40b8fa:	movabs rax,0xffffffffffff
  40b904:	xor    rbp,r12
  40b907:	mov    rdi,rbp
  40b90a:	xor    rdi,rdx
  40b90d:	mov    edx,esi
  40b90f:	xor    rdi,rdx
  40b912:	mov    rsi,rdi
  40b915:	and    rsi,rax
  40b918:	cmp    rsi,rbx
  40b91b:	je     0x40b940
  40b91d:	mov    rax,rsi
  40b920:	not    rax
  40b923:	mov    QWORD PTR [rip+0xbe86],rsi        # 0x4177b0
  40b92a:	mov    QWORD PTR [rip+0xbe8f],rax        # 0x4177c0
  40b931:	add    rsp,0x40
  40b935:	pop    rbx
  40b936:	pop    rsi
  40b937:	pop    rdi
  40b938:	pop    rbp
  40b939:	pop    r12
  40b93b:	ret    
  40b93c:	nop    DWORD PTR [rax+0x0]
  40b940:	movabs rax,0xffffd466d2205dcc
  40b94a:	movabs rsi,0x2b992ddfa233
  40b954:	jmp    0x40b923
  40b956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b960:	push   rbp
  40b961:	push   rsi
  40b962:	push   rbx
  40b963:	mov    rbp,rsp
  40b966:	sub    rsp,0x70
  40b96a:	mov    rsi,rcx
  40b96d:	lea    rcx,[rip+0x14ccc]        # 0x420640
  40b974:	call   QWORD PTR [rip+0x17ac6]        # 0x423440
  40b97a:	mov    rbx,QWORD PTR [rip+0x14db7]        # 0x420738
  40b981:	xor    r8d,r8d
  40b984:	lea    rdx,[rbp-0x28]
  40b988:	mov    rcx,rbx
  40b98b:	call   QWORD PTR [rip+0x17ab7]        # 0x423448
  40b991:	test   rax,rax
  40b994:	mov    r9,rax
  40b997:	je     0x40ba40
  40b99d:	lea    rax,[rbp-0x20]
  40b9a1:	mov    QWORD PTR [rsp+0x38],0x0
  40b9aa:	mov    r8,rbx
  40b9ad:	mov    rdx,QWORD PTR [rbp-0x28]
  40b9b1:	xor    ecx,ecx
  40b9b3:	mov    QWORD PTR [rsp+0x30],rax
  40b9b8:	lea    rax,[rbp-0x18]
  40b9bc:	mov    QWORD PTR [rsp+0x28],rax
  40b9c1:	lea    rax,[rip+0x14c78]        # 0x420640
  40b9c8:	mov    QWORD PTR [rsp+0x20],rax
  40b9cd:	call   QWORD PTR [rip+0x17a7d]        # 0x423450
  40b9d3:	mov    rax,QWORD PTR [rip+0x14d5e]        # 0x420738
  40b9da:	xor    ecx,ecx
  40b9dc:	mov    QWORD PTR [rip+0x14cdd],rsi        # 0x4206c0
  40b9e3:	mov    DWORD PTR [rip+0x15153],0xc0000409        # 0x420b40
  40b9ed:	mov    DWORD PTR [rip+0x1514d],0x1        # 0x420b44
  40b9f7:	mov    QWORD PTR [rip+0x15152],rax        # 0x420b50
  40b9fe:	mov    rax,QWORD PTR [rip+0xbdab]        # 0x4177b0
  40ba05:	mov    QWORD PTR [rbp-0x10],rax
  40ba09:	mov    rax,QWORD PTR [rip+0xbdb0]        # 0x4177c0
  40ba10:	mov    QWORD PTR [rbp-0x8],rax
  40ba14:	call   QWORD PTR [rip+0x17a3e]        # 0x423458
  40ba1a:	lea    rcx,[rip+0xf8bf]        # 0x41b2e0
  40ba21:	call   QWORD PTR [rip+0x17a51]        # 0x423478
  40ba27:	call   QWORD PTR [rip+0x17993]        # 0x4233c0
  40ba2d:	mov    edx,0xc0000409
  40ba32:	mov    rcx,rax
  40ba35:	call   QWORD PTR [rip+0x17a2d]        # 0x423468
  40ba3b:	call   0x416080
  40ba40:	mov    rax,QWORD PTR [rbp+0x18]
  40ba44:	mov    QWORD PTR [rip+0x14ced],rax        # 0x420738
  40ba4b:	lea    rax,[rbp+0x8]
  40ba4f:	mov    QWORD PTR [rip+0x14c82],rax        # 0x4206d8
  40ba56:	jmp    0x40b9d3
  40ba5b:	nop
  40ba5c:	nop
  40ba5d:	nop
  40ba5e:	nop
  40ba5f:	nop
  40ba60:	sub    rsp,0x28
  40ba64:	test   edx,edx
  40ba66:	je     0x40ba80
  40ba68:	cmp    edx,0x3
  40ba6b:	je     0x40ba80
  40ba6d:	mov    eax,0x1
  40ba72:	add    rsp,0x28
  40ba76:	ret    
  40ba77:	nop    WORD PTR [rax+rax*1+0x0]
  40ba80:	call   0x40c770
  40ba85:	mov    eax,0x1
  40ba8a:	add    rsp,0x28
  40ba8e:	ret    
  40ba8f:	nop
  40ba90:	push   rsi
  40ba91:	push   rbx
  40ba92:	sub    rsp,0x28
  40ba96:	mov    rax,QWORD PTR [rip+0x10233]        # 0x41bcd0
  40ba9d:	cmp    DWORD PTR [rax],0x2
  40baa0:	je     0x40baa8
  40baa2:	mov    DWORD PTR [rax],0x2
  40baa8:	cmp    edx,0x2
  40baab:	je     0x40bac0
  40baad:	cmp    edx,0x1
  40bab0:	je     0x40baf2
  40bab2:	mov    eax,0x1
  40bab7:	add    rsp,0x28
  40babb:	pop    rbx
  40babc:	pop    rsi
  40babd:	ret    
  40babe:	xchg   ax,ax
  40bac0:	lea    rbx,[rip+0x18599]        # 0x424060
  40bac7:	lea    rsi,[rip+0x18592]        # 0x424060
  40bace:	cmp    rbx,rsi
  40bad1:	je     0x40bab2
  40bad3:	mov    rax,QWORD PTR [rbx]
  40bad6:	test   rax,rax
  40bad9:	je     0x40badd
  40badb:	call   rax
  40badd:	add    rbx,0x8
  40bae1:	cmp    rbx,rsi
  40bae4:	jne    0x40bad3
  40bae6:	mov    eax,0x1
  40baeb:	add    rsp,0x28
  40baef:	pop    rbx
  40baf0:	pop    rsi
  40baf1:	ret    
  40baf2:	call   0x40c770
  40baf7:	jmp    0x40bab2
  40baf9:	nop    DWORD PTR [rax+0x0]
  40bb00:	xor    eax,eax
  40bb02:	ret    
  40bb03:	nop
  40bb04:	nop
  40bb05:	nop
  40bb06:	nop
  40bb07:	nop
  40bb08:	nop
  40bb09:	nop
  40bb0a:	nop
  40bb0b:	nop
  40bb0c:	nop
  40bb0d:	nop
  40bb0e:	nop
  40bb0f:	nop
  40bb10:	sub    rsp,0x58
  40bb14:	mov    rax,QWORD PTR [rip+0x15105]        # 0x420c20
  40bb1b:	test   rax,rax
  40bb1e:	je     0x40bb4c
  40bb20:	movsd  xmm0,QWORD PTR [rsp+0x80]
  40bb29:	mov    DWORD PTR [rsp+0x20],ecx
  40bb2d:	lea    rcx,[rsp+0x20]
  40bb32:	mov    QWORD PTR [rsp+0x28],rdx
  40bb37:	movsd  QWORD PTR [rsp+0x30],xmm2
  40bb3d:	movsd  QWORD PTR [rsp+0x38],xmm3
  40bb43:	movsd  QWORD PTR [rsp+0x40],xmm0
  40bb49:	call   rax
  40bb4b:	nop
  40bb4c:	add    rsp,0x58
  40bb50:	ret    
  40bb51:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bb60:	mov    QWORD PTR [rip+0x150b9],rcx        # 0x420c20
  40bb67:	jmp    0x4160d0
  40bb6c:	nop    DWORD PTR [rax+0x0]
  40bb70:	push   rsi
  40bb71:	push   rbx
  40bb72:	sub    rsp,0x78
  40bb76:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40bb7b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  40bb80:	movaps XMMWORD PTR [rsp+0x60],xmm8
  40bb86:	cmp    DWORD PTR [rcx],0x6
  40bb89:	ja     0x40bc60
  40bb8f:	mov    edx,DWORD PTR [rcx]
  40bb91:	lea    rax,[rip+0xf88c]        # 0x41b424
  40bb98:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40bb9c:	add    rax,rdx
  40bb9f:	jmp    rax
  40bba1:	lea    rbx,[rip+0xf758]        # 0x41b300
  40bba8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbb0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  40bbb6:	mov    rsi,QWORD PTR [rcx+0x8]
  40bbba:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40bbbf:	movsd  xmm6,QWORD PTR [rcx+0x10]
  40bbc4:	call   0x4160e8
  40bbc9:	movsd  QWORD PTR [rsp+0x30],xmm8
  40bbd0:	lea    rcx,[rax+0x60]
  40bbd4:	lea    rdx,[rip+0xf81d]        # 0x41b3f8
  40bbdb:	movsd  QWORD PTR [rsp+0x28],xmm7
  40bbe1:	mov    r9,rsi
  40bbe4:	mov    r8,rbx
  40bbe7:	movsd  QWORD PTR [rsp+0x20],xmm6
  40bbed:	call   0x416028
  40bbf2:	nop
  40bbf3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  40bbf8:	xor    eax,eax
  40bbfa:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40bbff:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  40bc05:	add    rsp,0x78
  40bc09:	pop    rbx
  40bc0a:	pop    rsi
  40bc0b:	ret    
  40bc0c:	nop    DWORD PTR [rax+0x0]
  40bc10:	lea    rbx,[rip+0xf708]        # 0x41b31f
  40bc17:	jmp    0x40bbb0
  40bc19:	nop    DWORD PTR [rax+0x0]
  40bc20:	lea    rbx,[rip+0xf719]        # 0x41b340
  40bc27:	jmp    0x40bbb0
  40bc29:	nop    DWORD PTR [rax+0x0]
  40bc30:	lea    rbx,[rip+0xf779]        # 0x41b3b0
  40bc37:	jmp    0x40bbb0
  40bc3c:	nop    DWORD PTR [rax+0x0]
  40bc40:	lea    rbx,[rip+0xf741]        # 0x41b388
  40bc47:	jmp    0x40bbb0
  40bc4c:	nop    DWORD PTR [rax+0x0]
  40bc50:	lea    rbx,[rip+0xf709]        # 0x41b360
  40bc57:	jmp    0x40bbb0
  40bc5c:	nop    DWORD PTR [rax+0x0]
  40bc60:	lea    rbx,[rip+0xf77f]        # 0x41b3e6
  40bc67:	jmp    0x40bbb0
  40bc6c:	nop
  40bc6d:	nop
  40bc6e:	nop
  40bc6f:	nop
  40bc70:	fninit 
  40bc72:	ret    
  40bc73:	nop
  40bc74:	nop
  40bc75:	nop
  40bc76:	nop
  40bc77:	nop
  40bc78:	nop
  40bc79:	nop
  40bc7a:	nop
  40bc7b:	nop
  40bc7c:	nop
  40bc7d:	nop
  40bc7e:	nop
  40bc7f:	nop
  40bc80:	mov    rax,rcx
  40bc83:	ret    
  40bc84:	xchg   ax,ax
  40bc86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc90:	mov    rax,rcx
  40bc93:	ret    
  40bc94:	nop
  40bc95:	nop
  40bc96:	nop
  40bc97:	nop
  40bc98:	nop
  40bc99:	nop
  40bc9a:	nop
  40bc9b:	nop
  40bc9c:	nop
  40bc9d:	nop
  40bc9e:	nop
  40bc9f:	nop
  40bca0:	push   rsi
  40bca1:	push   rbx
  40bca2:	sub    rsp,0x38
  40bca6:	lea    rax,[rsp+0x58]
  40bcab:	mov    rbx,rcx
  40bcae:	mov    QWORD PTR [rsp+0x58],rdx
  40bcb3:	mov    QWORD PTR [rsp+0x60],r8
  40bcb8:	mov    QWORD PTR [rsp+0x68],r9
  40bcbd:	mov    QWORD PTR [rsp+0x28],rax
  40bcc2:	call   0x4160e8
  40bcc7:	lea    rcx,[rip+0xf772]        # 0x41b440
  40bcce:	lea    r9,[rax+0x60]
  40bcd2:	mov    r8d,0x1b
  40bcd8:	mov    edx,0x1
  40bcdd:	call   0x416008
  40bce2:	mov    rsi,QWORD PTR [rsp+0x28]
  40bce7:	call   0x4160e8
  40bcec:	lea    rcx,[rax+0x60]
  40bcf0:	mov    rdx,rbx
  40bcf3:	mov    r8,rsi
  40bcf6:	call   0x415f00
  40bcfb:	call   0x416080
  40bd00:	nop
  40bd01:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd10:	push   r13
  40bd12:	push   r12
  40bd14:	push   rbp
  40bd15:	push   rdi
  40bd16:	push   rsi
  40bd17:	push   rbx
  40bd18:	sub    rsp,0x58
  40bd1c:	movsxd rbp,DWORD PTR [rip+0x14f21]        # 0x420c44
  40bd23:	mov    rbx,rcx
  40bd26:	mov    rsi,rdx
  40bd29:	mov    rdi,r8
  40bd2c:	test   ebp,ebp
  40bd2e:	jle    0x40be2a
  40bd34:	mov    rax,QWORD PTR [rip+0x14f0d]        # 0x420c48
  40bd3b:	xor    r9d,r9d
  40bd3e:	add    rax,0x8
  40bd42:	mov    r10,QWORD PTR [rax]
  40bd45:	cmp    rbx,r10
  40bd48:	jb     0x40bd5e
  40bd4a:	mov    rdx,QWORD PTR [rax+0x8]
  40bd4e:	mov    r11d,DWORD PTR [rdx+0x8]
  40bd52:	add    r10,r11
  40bd55:	cmp    rbx,r10
  40bd58:	jb     0x40be10
  40bd5e:	add    r9d,0x1
  40bd62:	add    rax,0x18
  40bd66:	cmp    r9d,ebp
  40bd69:	jne    0x40bd42
  40bd6b:	mov    rcx,rbx
  40bd6e:	call   0x40c980
  40bd73:	test   rax,rax
  40bd76:	mov    r12,rax
  40bd79:	je     0x40be62
  40bd7f:	lea    rbp,[rbp+rbp*2+0x0]
  40bd84:	shl    rbp,0x3
  40bd88:	mov    r13,rbp
  40bd8b:	add    r13,QWORD PTR [rip+0x14eb6]        # 0x420c48
  40bd92:	mov    QWORD PTR [r13+0x10],rax
  40bd96:	mov    DWORD PTR [r13+0x0],0x0
  40bd9e:	call   0x40caa0
  40bda3:	mov    edx,DWORD PTR [r12+0xc]
  40bda8:	mov    r8d,0x30
  40bdae:	add    rax,rdx
  40bdb1:	lea    rdx,[rsp+0x20]
  40bdb6:	mov    QWORD PTR [r13+0x8],rax
  40bdba:	mov    rax,QWORD PTR [rip+0x14e87]        # 0x420c48
  40bdc1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  40bdc6:	call   QWORD PTR [rip+0x176bc]        # 0x423488
  40bdcc:	test   rax,rax
  40bdcf:	je     0x40be45
  40bdd1:	mov    eax,DWORD PTR [rsp+0x44]
  40bdd5:	lea    edx,[rax-0x4]
  40bdd8:	and    edx,0xfffffffb
  40bddb:	je     0x40be09
  40bddd:	sub    eax,0x40
  40bde0:	and    eax,0xffffffbf
  40bde3:	je     0x40be09
  40bde5:	mov    r9,rbp
  40bde8:	add    r9,QWORD PTR [rip+0x14e59]        # 0x420c48
  40bdef:	mov    r8d,0x40
  40bdf5:	mov    rdx,QWORD PTR [rsp+0x38]
  40bdfa:	mov    rcx,QWORD PTR [rsp+0x20]
  40bdff:	call   QWORD PTR [rip+0x1767b]        # 0x423480
  40be05:	test   eax,eax
  40be07:	je     0x40be31
  40be09:	add    DWORD PTR [rip+0x14e34],0x1        # 0x420c44
  40be10:	mov    r8,rdi
  40be13:	mov    rdx,rsi
  40be16:	mov    rcx,rbx
  40be19:	add    rsp,0x58
  40be1d:	pop    rbx
  40be1e:	pop    rsi
  40be1f:	pop    rdi
  40be20:	pop    rbp
  40be21:	pop    r12
  40be23:	pop    r13
  40be25:	jmp    0x415fe0
  40be2a:	xor    ebp,ebp
  40be2c:	jmp    0x40bd6b
  40be31:	call   QWORD PTR [rip+0x175a1]        # 0x4233d8
  40be37:	lea    rcx,[rip+0xf67a]        # 0x41b4b8
  40be3e:	mov    edx,eax
  40be40:	call   0x40bca0
  40be45:	mov    rax,QWORD PTR [rip+0x14dfc]        # 0x420c48
  40be4c:	mov    edx,DWORD PTR [r12+0x8]
  40be51:	lea    rcx,[rip+0xf628]        # 0x41b480
  40be58:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40be5d:	call   0x40bca0
  40be62:	lea    rcx,[rip+0xf5f7]        # 0x41b460
  40be69:	mov    rdx,rbx
  40be6c:	call   0x40bca0
  40be71:	nop
  40be72:	nop    DWORD PTR [rax+0x0]
  40be76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be80:	push   rbp
  40be81:	push   r14
  40be83:	push   r13
  40be85:	push   r12
  40be87:	push   rdi
  40be88:	push   rsi
  40be89:	push   rbx
  40be8a:	mov    rbp,rsp
  40be8d:	sub    rsp,0x60
  40be91:	mov    ebx,DWORD PTR [rip+0x14da9]        # 0x420c40
  40be97:	test   ebx,ebx
  40be99:	je     0x40beb0
  40be9b:	mov    rsp,rbp
  40be9e:	pop    rbx
  40be9f:	pop    rsi
  40bea0:	pop    rdi
  40bea1:	pop    r12
  40bea3:	pop    r13
  40bea5:	pop    r14
  40bea7:	pop    rbp
  40bea8:	ret    
  40bea9:	nop    DWORD PTR [rax+0x0]
  40beb0:	mov    DWORD PTR [rip+0x14d86],0x1        # 0x420c40
  40beba:	call   0x40c9d0
  40bebf:	cdqe   
  40bec1:	lea    rax,[rax+rax*2]
  40bec5:	lea    rax,[rax*8+0x1e]
  40becd:	and    rax,0xfffffffffffffff0
  40bed1:	call   0x40cbf0
  40bed6:	mov    rsi,QWORD PTR [rip+0xfe23]        # 0x41bd00
  40bedd:	mov    rbx,QWORD PTR [rip+0xfe2c]        # 0x41bd10
  40bee4:	sub    rsp,rax
  40bee7:	mov    DWORD PTR [rip+0x14d53],0x0        # 0x420c44
  40bef1:	lea    rax,[rsp+0x20]
  40bef6:	mov    QWORD PTR [rip+0x14d4b],rax        # 0x420c48
  40befd:	mov    rax,rsi
  40bf00:	sub    rax,rbx
  40bf03:	cmp    rax,0x7
  40bf07:	jle    0x40be9b
  40bf09:	cmp    rax,0xb
  40bf0d:	jle    0x40bf35
  40bf0f:	mov    r11d,DWORD PTR [rbx]
  40bf12:	test   r11d,r11d
  40bf15:	jne    0x40c060
  40bf1b:	mov    r10d,DWORD PTR [rbx+0x4]
  40bf1f:	test   r10d,r10d
  40bf22:	jne    0x40c060
  40bf28:	mov    r9d,DWORD PTR [rbx+0x8]
  40bf2c:	test   r9d,r9d
  40bf2f:	jne    0x40bf4c
  40bf31:	add    rbx,0xc
  40bf35:	mov    r8d,DWORD PTR [rbx]
  40bf38:	test   r8d,r8d
  40bf3b:	jne    0x40c060
  40bf41:	mov    ecx,DWORD PTR [rbx+0x4]
  40bf44:	test   ecx,ecx
  40bf46:	jne    0x40c060
  40bf4c:	mov    edx,DWORD PTR [rbx+0x8]
  40bf4f:	cmp    edx,0x1
  40bf52:	jne    0x40c16c
  40bf58:	add    rbx,0xc
  40bf5c:	cmp    rbx,rsi
  40bf5f:	jae    0x40be9b
  40bf65:	mov    r12,QWORD PTR [rip+0xfde4]        # 0x41bd50
  40bf6c:	lea    r13,[rbp-0x30]
  40bf70:	movabs r14,0xffffffff00000000
  40bf7a:	mov    ecx,DWORD PTR [rbx+0x4]
  40bf7d:	mov    eax,DWORD PTR [rbx]
  40bf7f:	movzx  edx,BYTE PTR [rbx+0x8]
  40bf83:	add    rax,r12
  40bf86:	add    rcx,r12
  40bf89:	cmp    edx,0x10
  40bf8c:	mov    r8,QWORD PTR [rax]
  40bf8f:	je     0x40c0d6
  40bf95:	jbe    0x40c09d
  40bf9b:	cmp    edx,0x20
  40bf9e:	je     0x40c11f
  40bfa4:	cmp    edx,0x40
  40bfa7:	jne    0x40c10b
  40bfad:	sub    r8,rax
  40bfb0:	mov    rdx,r13
  40bfb3:	mov    rdi,r13
  40bfb6:	mov    rax,r8
  40bfb9:	add    rax,QWORD PTR [rcx]
  40bfbc:	mov    r8d,0x8
  40bfc2:	mov    QWORD PTR [rbp-0x30],rax
  40bfc6:	call   0x40bd10
  40bfcb:	add    rbx,0xc
  40bfcf:	cmp    rbx,rsi
  40bfd2:	jb     0x40bf7a
  40bfd4:	mov    eax,DWORD PTR [rip+0x14c6a]        # 0x420c44
  40bfda:	xor    ebx,ebx
  40bfdc:	xor    esi,esi
  40bfde:	test   eax,eax
  40bfe0:	jle    0x40be9b
  40bfe6:	mov    r14,QWORD PTR [rip+0x1749b]        # 0x423488
  40bfed:	lea    r13,[rbp-0x34]
  40bff1:	mov    r12,QWORD PTR [rip+0x17488]        # 0x423480
  40bff8:	jmp    0x40c013
  40bffa:	nop    WORD PTR [rax+rax*1+0x0]
  40c000:	add    esi,0x1
  40c003:	add    rbx,0x18
  40c007:	cmp    esi,DWORD PTR [rip+0x14c37]        # 0x420c44
  40c00d:	jge    0x40be9b
  40c013:	mov    rax,rbx
  40c016:	add    rax,QWORD PTR [rip+0x14c2b]        # 0x420c48
  40c01d:	mov    edx,DWORD PTR [rax]
  40c01f:	test   edx,edx
  40c021:	je     0x40c000
  40c023:	mov    rcx,QWORD PTR [rax+0x8]
  40c027:	mov    r8d,0x30
  40c02d:	mov    rdx,rdi
  40c030:	call   r14
  40c033:	test   rax,rax
  40c036:	je     0x40c14e
  40c03c:	mov    rax,QWORD PTR [rip+0x14c05]        # 0x420c48
  40c043:	mov    r9,r13
  40c046:	mov    rdx,QWORD PTR [rbp-0x18]
  40c04a:	mov    rcx,QWORD PTR [rbp-0x30]
  40c04e:	mov    r8d,DWORD PTR [rax+rbx*1]
  40c052:	call   r12
  40c055:	jmp    0x40c000
  40c057:	nop    WORD PTR [rax+rax*1+0x0]
  40c060:	cmp    rbx,rsi
  40c063:	jae    0x40be9b
  40c069:	mov    r12,QWORD PTR [rip+0xfce0]        # 0x41bd50
  40c070:	lea    rdi,[rbp-0x30]
  40c074:	mov    ecx,DWORD PTR [rbx+0x4]
  40c077:	mov    eax,DWORD PTR [rbx]
  40c079:	mov    r8d,0x4
  40c07f:	mov    rdx,rdi
  40c082:	add    rbx,0x8
  40c086:	add    rcx,r12
  40c089:	add    eax,DWORD PTR [rcx]
  40c08b:	mov    DWORD PTR [rbp-0x30],eax
  40c08e:	call   0x40bd10
  40c093:	cmp    rbx,rsi
  40c096:	jb     0x40c074
  40c098:	jmp    0x40bfd4
  40c09d:	cmp    edx,0x8
  40c0a0:	jne    0x40c10b
  40c0a2:	movzx  edx,BYTE PTR [rcx]
  40c0a5:	mov    rdi,r13
  40c0a8:	mov    r10,rdx
  40c0ab:	or     r10,0xffffffffffffff00
  40c0b2:	test   dl,dl
  40c0b4:	cmovs  rdx,r10
  40c0b8:	sub    rdx,rax
  40c0bb:	lea    rax,[r8+rdx*1]
  40c0bf:	mov    r8d,0x1
  40c0c5:	mov    rdx,r13
  40c0c8:	mov    QWORD PTR [rbp-0x30],rax
  40c0cc:	call   0x40bd10
  40c0d1:	jmp    0x40bfcb
  40c0d6:	movzx  edx,WORD PTR [rcx]
  40c0d9:	mov    rdi,r13
  40c0dc:	mov    r10,rdx
  40c0df:	or     r10,0xffffffffffff0000
  40c0e6:	test   dx,dx
  40c0e9:	cmovs  rdx,r10
  40c0ed:	sub    rdx,rax
  40c0f0:	lea    rax,[r8+rdx*1]
  40c0f4:	mov    r8d,0x2
  40c0fa:	mov    rdx,r13
  40c0fd:	mov    QWORD PTR [rbp-0x30],rax
  40c101:	call   0x40bd10
  40c106:	jmp    0x40bfcb
  40c10b:	lea    rcx,[rip+0xf406]        # 0x41b518
  40c112:	mov    QWORD PTR [rbp-0x30],0x0
  40c11a:	call   0x40bca0
  40c11f:	mov    edx,DWORD PTR [rcx]
  40c121:	mov    rdi,r13
  40c124:	mov    r10,rdx
  40c127:	or     r10,r14
  40c12a:	test   edx,edx
  40c12c:	cmovs  rdx,r10
  40c130:	sub    rdx,rax
  40c133:	lea    rax,[r8+rdx*1]
  40c137:	mov    r8d,0x4
  40c13d:	mov    rdx,r13
  40c140:	mov    QWORD PTR [rbp-0x30],rax
  40c144:	call   0x40bd10
  40c149:	jmp    0x40bfcb
  40c14e:	add    rbx,QWORD PTR [rip+0x14af3]        # 0x420c48
  40c155:	lea    rcx,[rip+0xf324]        # 0x41b480
  40c15c:	mov    rax,QWORD PTR [rbx+0x10]
  40c160:	mov    r8,QWORD PTR [rbx+0x8]
  40c164:	mov    edx,DWORD PTR [rax+0x8]
  40c167:	call   0x40bca0
  40c16c:	lea    rcx,[rip+0xf36d]        # 0x41b4e0
  40c173:	call   0x40bca0
  40c178:	nop
  40c179:	nop
  40c17a:	nop
  40c17b:	nop
  40c17c:	nop
  40c17d:	nop
  40c17e:	nop
  40c17f:	nop
  40c180:	sub    rsp,0x28
  40c184:	mov    eax,DWORD PTR [rcx]
  40c186:	cmp    eax,0xc0000091
  40c18b:	ja     0x40c1f0
  40c18d:	cmp    eax,0xc000008d
  40c192:	jae    0x40c20f
  40c194:	cmp    eax,0xc0000008
  40c199:	je     0x40c2b0
  40c19f:	ja     0x40c280
  40c1a5:	cmp    eax,0x80000002
  40c1aa:	je     0x40c2b0
  40c1b0:	cmp    eax,0xc0000005
  40c1b5:	jne    0x40c28e
  40c1bb:	xor    edx,edx
  40c1bd:	mov    ecx,0xb
  40c1c2:	call   0x415fa0
  40c1c7:	cmp    rax,0x1
  40c1cb:	je     0x40c310
  40c1d1:	test   rax,rax
  40c1d4:	je     0x40c2f0
  40c1da:	mov    ecx,0xb
  40c1df:	call   rax
  40c1e1:	xor    eax,eax
  40c1e3:	add    rsp,0x28
  40c1e7:	ret    
  40c1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c1f0:	cmp    eax,0xc0000094
  40c1f5:	je     0x40c2c0
  40c1fb:	ja     0x40c240
  40c1fd:	cmp    eax,0xc0000092
  40c202:	je     0x40c2b0
  40c208:	cmp    eax,0xc0000093
  40c20d:	jne    0x40c28e
  40c20f:	xor    edx,edx
  40c211:	mov    ecx,0x8
  40c216:	call   0x415fa0
  40c21b:	cmp    rax,0x1
  40c21f:	mov    rdx,rax
  40c222:	je     0x40c298
  40c224:	test   rdx,rdx
  40c227:	mov    eax,0x1
  40c22c:	je     0x40c1e3
  40c22e:	mov    ecx,0x8
  40c233:	call   rdx
  40c235:	xor    eax,eax
  40c237:	add    rsp,0x28
  40c23b:	ret    
  40c23c:	nop    DWORD PTR [rax+0x0]
  40c240:	cmp    eax,0xc0000095
  40c245:	je     0x40c2b0
  40c247:	cmp    eax,0xc0000096
  40c24c:	jne    0x40c28e
  40c24e:	xor    edx,edx
  40c250:	mov    ecx,0x4
  40c255:	call   0x415fa0
  40c25a:	cmp    rax,0x1
  40c25e:	je     0x40c2fa
  40c264:	test   rax,rax
  40c267:	je     0x40c2f0
  40c26d:	mov    ecx,0x4
  40c272:	call   rax
  40c274:	xor    eax,eax
  40c276:	jmp    0x40c1e3
  40c27b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c280:	cmp    eax,0xc000001d
  40c285:	je     0x40c24e
  40c287:	cmp    eax,0xc000008c
  40c28c:	je     0x40c2b0
  40c28e:	mov    eax,0x1
  40c293:	add    rsp,0x28
  40c297:	ret    
  40c298:	mov    edx,0x1
  40c29d:	mov    ecx,0x8
  40c2a2:	call   0x415fa0
  40c2a7:	call   0x40bc70
  40c2ac:	nop    DWORD PTR [rax+0x0]
  40c2b0:	xor    eax,eax
  40c2b2:	add    rsp,0x28
  40c2b6:	ret    
  40c2b7:	nop    WORD PTR [rax+rax*1+0x0]
  40c2c0:	xor    edx,edx
  40c2c2:	mov    ecx,0x8
  40c2c7:	call   0x415fa0
  40c2cc:	cmp    rax,0x1
  40c2d0:	mov    rdx,rax
  40c2d3:	jne    0x40c224
  40c2d9:	mov    edx,0x1
  40c2de:	mov    ecx,0x8
  40c2e3:	call   0x415fa0
  40c2e8:	xor    eax,eax
  40c2ea:	jmp    0x40c1e3
  40c2ef:	nop
  40c2f0:	mov    eax,0x4
  40c2f5:	add    rsp,0x28
  40c2f9:	ret    
  40c2fa:	mov    edx,0x1
  40c2ff:	mov    ecx,0x4
  40c304:	call   0x415fa0
  40c309:	xor    eax,eax
  40c30b:	jmp    0x40c1e3
  40c310:	mov    edx,0x1
  40c315:	mov    ecx,0xb
  40c31a:	call   0x415fa0
  40c31f:	xor    eax,eax
  40c321:	jmp    0x40c1e3
  40c326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c330:	push   r12
  40c332:	push   rbp
  40c333:	push   rdi
  40c334:	push   rsi
  40c335:	push   rbx
  40c336:	sub    rsp,0x20
  40c33a:	call   0x40caa0
  40c33f:	mov    rbp,rax
  40c342:	mov    eax,DWORD PTR [rip+0x14940]        # 0x420c88
  40c348:	test   eax,eax
  40c34a:	jne    0x40c371
  40c34c:	test   rbp,rbp
  40c34f:	je     0x40c371
  40c351:	lea    rcx,[rip+0xf1f8]        # 0x41b550
  40c358:	mov    DWORD PTR [rip+0x14926],0x1        # 0x420c88
  40c362:	call   0x40c8e0
  40c367:	test   rax,rax
  40c36a:	je     0x40c380
  40c36c:	mov    eax,0x1
  40c371:	add    rsp,0x20
  40c375:	pop    rbx
  40c376:	pop    rsi
  40c377:	pop    rdi
  40c378:	pop    rbp
  40c379:	pop    r12
  40c37b:	ret    
  40c37c:	nop    DWORD PTR [rax+0x0]
  40c380:	lea    rbx,[rip+0x14a39]        # 0x420dc0
  40c387:	mov    ecx,0x30
  40c38c:	lea    rdx,[rip+0x1492d]        # 0x420cc0
  40c393:	lea    r12,[rip+0xfffffffffffffde6]        # 0x40c180
  40c39a:	xor    esi,esi
  40c39c:	mov    rdi,rbx
  40c39f:	rep stos QWORD PTR es:[rdi],rax
  40c3a2:	mov    rdi,rdx
  40c3a5:	sub    r12,rbp
  40c3a8:	mov    cl,0x20
  40c3aa:	rep stos QWORD PTR es:[rdi],rax
  40c3ad:	mov    rdi,rdx
  40c3b0:	jmp    0x40c3e0
  40c3b2:	mov    BYTE PTR [rdi],0x9
  40c3b5:	mov    DWORD PTR [rdi+0x4],r12d
  40c3b9:	add    rsi,0x1
  40c3bd:	mov    edx,DWORD PTR [rax+0xc]
  40c3c0:	add    rbx,0xc
  40c3c4:	mov    DWORD PTR [rbx-0xc],edx
  40c3c7:	add    edx,DWORD PTR [rax+0x8]
  40c3ca:	mov    rax,rdi
  40c3cd:	sub    rax,rbp
  40c3d0:	add    rdi,0x8
  40c3d4:	mov    DWORD PTR [rbx-0x4],eax
  40c3d7:	mov    DWORD PTR [rbx-0x8],edx
  40c3da:	cmp    rsi,0x20
  40c3de:	je     0x40c415
  40c3e0:	mov    rcx,rsi
  40c3e3:	call   0x40ca10
  40c3e8:	test   rax,rax
  40c3eb:	jne    0x40c3b2
  40c3ed:	test   rsi,rsi
  40c3f0:	je     0x40c36c
  40c3f6:	mov    edx,esi
  40c3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c400:	mov    r8,rbp
  40c403:	lea    rcx,[rip+0x149b6]        # 0x420dc0
  40c40a:	call   QWORD PTR [rip+0x17028]        # 0x423438
  40c410:	jmp    0x40c36c
  40c415:	mov    edx,0x20
  40c41a:	jmp    0x40c400
  40c41c:	nop    DWORD PTR [rax+0x0]
  40c420:	push   rbx
  40c421:	sub    rsp,0x20
  40c425:	mov    rdx,QWORD PTR [rcx]
  40c428:	mov    eax,DWORD PTR [rdx]
  40c42a:	mov    r8d,eax
  40c42d:	and    r8d,0x20ffffff
  40c434:	cmp    r8d,0x20474343
  40c43b:	je     0x40c540
  40c441:	cmp    eax,0xc0000091
  40c446:	mov    rbx,rcx
  40c449:	ja     0x40c4d0
  40c44f:	cmp    eax,0xc000008d
  40c454:	jae    0x40c4e7
  40c45a:	cmp    eax,0xc0000008
  40c45f:	je     0x40c493
  40c461:	ja     0x40c4a0
  40c463:	cmp    eax,0x80000002
  40c468:	je     0x40c493
  40c46a:	cmp    eax,0xc0000005
  40c46f:	jne    0x40c4b2
  40c471:	xor    edx,edx
  40c473:	mov    ecx,0xb
  40c478:	call   0x415fa0
  40c47d:	cmp    rax,0x1
  40c481:	je     0x40c5b0
  40c487:	test   rax,rax
  40c48a:	je     0x40c4b2
  40c48c:	mov    ecx,0xb
  40c491:	call   rax
  40c493:	mov    eax,0xffffffff
  40c498:	add    rsp,0x20
  40c49c:	pop    rbx
  40c49d:	ret    
  40c49e:	xchg   ax,ax
  40c4a0:	cmp    eax,0xc000001d
  40c4a5:	je     0x40c566
  40c4ab:	cmp    eax,0xc000008c
  40c4b0:	je     0x40c493
  40c4b2:	mov    rax,QWORD PTR [rip+0x147c7]        # 0x420c80
  40c4b9:	test   rax,rax
  40c4bc:	je     0x40c498
  40c4be:	mov    rcx,rbx
  40c4c1:	add    rsp,0x20
  40c4c5:	pop    rbx
  40c4c6:	rex.W jmp rax
  40c4c9:	nop    DWORD PTR [rax+0x0]
  40c4d0:	cmp    eax,0xc0000094
  40c4d5:	je     0x40c512
  40c4d7:	ja     0x40c550
  40c4d9:	cmp    eax,0xc0000092
  40c4de:	je     0x40c493
  40c4e0:	cmp    eax,0xc0000093
  40c4e5:	jne    0x40c4b2
  40c4e7:	xor    edx,edx
  40c4e9:	mov    ecx,0x8
  40c4ee:	call   0x415fa0
  40c4f3:	cmp    rax,0x1
  40c4f7:	jne    0x40c524
  40c4f9:	mov    edx,0x1
  40c4fe:	mov    ecx,0x8
  40c503:	call   0x415fa0
  40c508:	call   0x40bc70
  40c50d:	jmp    0x40c493
  40c512:	xor    edx,edx
  40c514:	mov    ecx,0x8
  40c519:	call   0x415fa0
  40c51e:	cmp    rax,0x1
  40c522:	je     0x40c592
  40c524:	test   rax,rax
  40c527:	je     0x40c4b2
  40c529:	mov    ecx,0x8
  40c52e:	call   rax
  40c530:	mov    eax,0xffffffff
  40c535:	jmp    0x40c498
  40c53a:	nop    WORD PTR [rax+rax*1+0x0]
  40c540:	test   BYTE PTR [rdx+0x4],0x1
  40c544:	jne    0x40c441
  40c54a:	jmp    0x40c493
  40c54f:	nop
  40c550:	cmp    eax,0xc0000095
  40c555:	je     0x40c493
  40c55b:	cmp    eax,0xc0000096
  40c560:	jne    0x40c4b2
  40c566:	xor    edx,edx
  40c568:	mov    ecx,0x4
  40c56d:	call   0x415fa0
  40c572:	cmp    rax,0x1
  40c576:	je     0x40c5c4
  40c578:	test   rax,rax
  40c57b:	je     0x40c4b2
  40c581:	mov    ecx,0x4
  40c586:	call   rax
  40c588:	mov    eax,0xffffffff
  40c58d:	jmp    0x40c498
  40c592:	mov    edx,0x1
  40c597:	mov    ecx,0x8
  40c59c:	call   0x415fa0
  40c5a1:	jmp    0x40c493
  40c5a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c5b0:	mov    edx,0x1
  40c5b5:	mov    ecx,0xb
  40c5ba:	call   0x415fa0
  40c5bf:	jmp    0x40c493
  40c5c4:	mov    edx,0x1
  40c5c9:	mov    ecx,0x4
  40c5ce:	call   0x415fa0
  40c5d3:	jmp    0x40c493
  40c5d8:	nop
  40c5d9:	nop
  40c5da:	nop
  40c5db:	nop
  40c5dc:	nop
  40c5dd:	nop
  40c5de:	nop
  40c5df:	nop
  40c5e0:	push   rbp
  40c5e1:	push   rdi
  40c5e2:	push   rsi
  40c5e3:	push   rbx
  40c5e4:	sub    rsp,0x28
  40c5e8:	lea    rcx,[rip+0x14971]        # 0x420f60
  40c5ef:	call   QWORD PTR [rip+0x16dc3]        # 0x4233b8
  40c5f5:	mov    rbx,QWORD PTR [rip+0x14944]        # 0x420f40
  40c5fc:	test   rbx,rbx
  40c5ff:	je     0x40c634
  40c601:	mov    rbp,QWORD PTR [rip+0x16e68]        # 0x423470
  40c608:	mov    rdi,QWORD PTR [rip+0x16dc9]        # 0x4233d8
  40c60f:	nop
  40c610:	mov    ecx,DWORD PTR [rbx]
  40c612:	call   rbp
  40c614:	mov    rsi,rax
  40c617:	call   rdi
  40c619:	test   eax,eax
  40c61b:	jne    0x40c62b
  40c61d:	test   rsi,rsi
  40c620:	je     0x40c62b
  40c622:	mov    rax,QWORD PTR [rbx+0x8]
  40c626:	mov    rcx,rsi
  40c629:	call   rax
  40c62b:	mov    rbx,QWORD PTR [rbx+0x10]
  40c62f:	test   rbx,rbx
  40c632:	jne    0x40c610
  40c634:	mov    rax,QWORD PTR [rip+0x16de5]        # 0x423420
  40c63b:	lea    rcx,[rip+0x1491e]        # 0x420f60
  40c642:	add    rsp,0x28
  40c646:	pop    rbx
  40c647:	pop    rsi
  40c648:	pop    rdi
  40c649:	pop    rbp
  40c64a:	rex.W jmp rax
  40c64d:	nop    DWORD PTR [rax]
  40c650:	push   rdi
  40c651:	push   rsi
  40c652:	push   rbx
  40c653:	sub    rsp,0x20
  40c657:	mov    eax,DWORD PTR [rip+0x148eb]        # 0x420f48
  40c65d:	test   eax,eax
  40c65f:	jne    0x40c670
  40c661:	add    rsp,0x20
  40c665:	pop    rbx
  40c666:	pop    rsi
  40c667:	pop    rdi
  40c668:	ret    
  40c669:	nop    DWORD PTR [rax+0x0]
  40c670:	mov    rsi,rdx
  40c673:	mov    edi,ecx
  40c675:	mov    edx,0x18
  40c67a:	mov    ecx,0x1
  40c67f:	call   0x416060
  40c684:	test   rax,rax
  40c687:	mov    rbx,rax
  40c68a:	je     0x40c6c8
  40c68c:	mov    DWORD PTR [rax],edi
  40c68e:	mov    QWORD PTR [rax+0x8],rsi
  40c692:	lea    rcx,[rip+0x148c7]        # 0x420f60
  40c699:	call   QWORD PTR [rip+0x16d19]        # 0x4233b8
  40c69f:	mov    rax,QWORD PTR [rip+0x1489a]        # 0x420f40
  40c6a6:	lea    rcx,[rip+0x148b3]        # 0x420f60
  40c6ad:	mov    QWORD PTR [rip+0x1488c],rbx        # 0x420f40
  40c6b4:	mov    QWORD PTR [rbx+0x10],rax
  40c6b8:	call   QWORD PTR [rip+0x16d62]        # 0x423420
  40c6be:	xor    eax,eax
  40c6c0:	add    rsp,0x20
  40c6c4:	pop    rbx
  40c6c5:	pop    rsi
  40c6c6:	pop    rdi
  40c6c7:	ret    
  40c6c8:	mov    eax,0xffffffff
  40c6cd:	jmp    0x40c661
  40c6cf:	nop
  40c6d0:	push   rbx
  40c6d1:	sub    rsp,0x20
  40c6d5:	mov    eax,DWORD PTR [rip+0x1486d]        # 0x420f48
  40c6db:	test   eax,eax
  40c6dd:	jne    0x40c6f0
  40c6df:	xor    eax,eax
  40c6e1:	add    rsp,0x20
  40c6e5:	pop    rbx
  40c6e6:	ret    
  40c6e7:	nop    WORD PTR [rax+rax*1+0x0]
  40c6f0:	mov    ebx,ecx
  40c6f2:	lea    rcx,[rip+0x14867]        # 0x420f60
  40c6f9:	call   QWORD PTR [rip+0x16cb9]        # 0x4233b8
  40c6ff:	mov    rdx,QWORD PTR [rip+0x1483a]        # 0x420f40
  40c706:	test   rdx,rdx
  40c709:	je     0x40c727
  40c70b:	mov    eax,DWORD PTR [rdx]
  40c70d:	cmp    eax,ebx
  40c70f:	jne    0x40c71e
  40c711:	jmp    0x40c75f
  40c713:	mov    r8d,DWORD PTR [rax]
  40c716:	cmp    r8d,ebx
  40c719:	je     0x40c740
  40c71b:	mov    rdx,rax
  40c71e:	mov    rax,QWORD PTR [rdx+0x10]
  40c722:	test   rax,rax
  40c725:	jne    0x40c713
  40c727:	lea    rcx,[rip+0x14832]        # 0x420f60
  40c72e:	call   QWORD PTR [rip+0x16cec]        # 0x423420
  40c734:	xor    eax,eax
  40c736:	add    rsp,0x20
  40c73a:	pop    rbx
  40c73b:	ret    
  40c73c:	nop    DWORD PTR [rax+0x0]
  40c740:	mov    rcx,rax
  40c743:	mov    rax,QWORD PTR [rax+0x10]
  40c747:	mov    QWORD PTR [rdx+0x10],rax
  40c74b:	call   0x416010
  40c750:	lea    rcx,[rip+0x14809]        # 0x420f60
  40c757:	call   QWORD PTR [rip+0x16cc3]        # 0x423420
  40c75d:	jmp    0x40c734
  40c75f:	mov    rax,QWORD PTR [rdx+0x10]
  40c763:	mov    rcx,rdx
  40c766:	mov    QWORD PTR [rip+0x147d3],rax        # 0x420f40
  40c76d:	jmp    0x40c74b
  40c76f:	nop
  40c770:	push   rbx
  40c771:	sub    rsp,0x20
  40c775:	cmp    edx,0x1
  40c778:	je     0x40c810
  40c77e:	jb     0x40c7b0
  40c780:	cmp    edx,0x2
  40c783:	je     0x40c7a0
  40c785:	cmp    edx,0x3
  40c788:	jne    0x40c7a5
  40c78a:	mov    eax,DWORD PTR [rip+0x147b8]        # 0x420f48
  40c790:	test   eax,eax
  40c792:	je     0x40c7a5
  40c794:	call   0x40c5e0
  40c799:	jmp    0x40c7a5
  40c79b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c7a0:	call   0x40bc70
  40c7a5:	mov    eax,0x1
  40c7aa:	add    rsp,0x20
  40c7ae:	pop    rbx
  40c7af:	ret    
  40c7b0:	mov    eax,DWORD PTR [rip+0x14792]        # 0x420f48
  40c7b6:	test   eax,eax
  40c7b8:	jne    0x40c840
  40c7be:	mov    eax,DWORD PTR [rip+0x14784]        # 0x420f48
  40c7c4:	cmp    eax,0x1
  40c7c7:	jne    0x40c7a5
  40c7c9:	mov    rcx,QWORD PTR [rip+0x14770]        # 0x420f40
  40c7d0:	test   rcx,rcx
  40c7d3:	je     0x40c7e6
  40c7d5:	mov    rbx,QWORD PTR [rcx+0x10]
  40c7d9:	call   0x416010
  40c7de:	test   rbx,rbx
  40c7e1:	mov    rcx,rbx
  40c7e4:	jne    0x40c7d5
  40c7e6:	lea    rcx,[rip+0x14773]        # 0x420f60
  40c7ed:	mov    QWORD PTR [rip+0x14748],0x0        # 0x420f40
  40c7f8:	mov    DWORD PTR [rip+0x14746],0x0        # 0x420f48
  40c802:	call   QWORD PTR [rip+0x16ba8]        # 0x4233b0
  40c808:	jmp    0x40c7a5
  40c80a:	nop    WORD PTR [rax+rax*1+0x0]
  40c810:	mov    eax,DWORD PTR [rip+0x14732]        # 0x420f48
  40c816:	test   eax,eax
  40c818:	je     0x40c830
  40c81a:	mov    eax,0x1
  40c81f:	mov    DWORD PTR [rip+0x1471f],0x1        # 0x420f48
  40c829:	add    rsp,0x20
  40c82d:	pop    rbx
  40c82e:	ret    
  40c82f:	nop
  40c830:	lea    rcx,[rip+0x14729]        # 0x420f60
  40c837:	call   QWORD PTR [rip+0x16bd3]        # 0x423410
  40c83d:	jmp    0x40c81a
  40c83f:	nop
  40c840:	call   0x40c5e0
  40c845:	jmp    0x40c7be
  40c84a:	nop
  40c84b:	nop
  40c84c:	nop
  40c84d:	nop
  40c84e:	nop
  40c84f:	nop
  40c850:	movsxd rax,DWORD PTR [rcx+0x3c]
  40c854:	add    rcx,rax
  40c857:	xor    eax,eax
  40c859:	cmp    DWORD PTR [rcx],0x4550
  40c85f:	je     0x40c863
  40c861:	repz ret 
  40c863:	xor    eax,eax
  40c865:	cmp    WORD PTR [rcx+0x18],0x20b
  40c86b:	sete   al
  40c86e:	ret    
  40c86f:	nop
  40c870:	cmp    WORD PTR [rcx],0x5a4d
  40c875:	je     0x40c880
  40c877:	xor    eax,eax
  40c879:	ret    
  40c87a:	nop    WORD PTR [rax+rax*1+0x0]
  40c880:	jmp    0x40c850
  40c882:	nop    DWORD PTR [rax+0x0]
  40c886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c890:	movsxd rax,DWORD PTR [rcx+0x3c]
  40c894:	add    rcx,rax
  40c897:	movzx  eax,WORD PTR [rcx+0x14]
  40c89b:	lea    rax,[rcx+rax*1+0x18]
  40c8a0:	movzx  ecx,WORD PTR [rcx+0x6]
  40c8a4:	test   ecx,ecx
  40c8a6:	je     0x40c8d1
  40c8a8:	sub    ecx,0x1
  40c8ab:	lea    rcx,[rcx+rcx*4]
  40c8af:	lea    r9,[rax+rcx*8+0x28]
  40c8b4:	mov    r8d,DWORD PTR [rax+0xc]
  40c8b8:	cmp    r8,rdx
  40c8bb:	mov    rcx,r8
  40c8be:	ja     0x40c8c8
  40c8c0:	add    ecx,DWORD PTR [rax+0x8]
  40c8c3:	cmp    rdx,rcx
  40c8c6:	jb     0x40c8d3
  40c8c8:	add    rax,0x28
  40c8cc:	cmp    rax,r9
  40c8cf:	jne    0x40c8b4
  40c8d1:	xor    eax,eax
  40c8d3:	repz ret 
  40c8d5:	nop
  40c8d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c8e0:	push   rdi
  40c8e1:	push   rsi
  40c8e2:	push   rbx
  40c8e3:	sub    rsp,0x20
  40c8e7:	mov    rsi,rcx
  40c8ea:	call   0x415f68
  40c8ef:	cmp    rax,0x8
  40c8f3:	ja     0x40c910
  40c8f5:	mov    rbx,QWORD PTR [rip+0xf454]        # 0x41bd50
  40c8fc:	xor    edi,edi
  40c8fe:	cmp    WORD PTR [rbx],0x5a4d
  40c903:	je     0x40c920
  40c905:	mov    rax,rdi
  40c908:	add    rsp,0x20
  40c90c:	pop    rbx
  40c90d:	pop    rsi
  40c90e:	pop    rdi
  40c90f:	ret    
  40c910:	xor    edi,edi
  40c912:	mov    rax,rdi
  40c915:	add    rsp,0x20
  40c919:	pop    rbx
  40c91a:	pop    rsi
  40c91b:	pop    rdi
  40c91c:	ret    
  40c91d:	nop    DWORD PTR [rax]
  40c920:	mov    rcx,rbx
  40c923:	call   0x40c850
  40c928:	test   eax,eax
  40c92a:	je     0x40c905
  40c92c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  40c930:	add    rdx,rbx
  40c933:	movzx  eax,WORD PTR [rdx+0x14]
  40c937:	lea    rbx,[rdx+rax*1+0x18]
  40c93c:	movzx  eax,WORD PTR [rdx+0x6]
  40c940:	test   eax,eax
  40c942:	je     0x40c905
  40c944:	sub    eax,0x1
  40c947:	lea    rax,[rax+rax*4]
  40c94b:	lea    rdi,[rbx+rax*8+0x28]
  40c950:	jmp    0x40c95b
  40c952:	add    rbx,0x28
  40c956:	cmp    rbx,rdi
  40c959:	je     0x40c910
  40c95b:	mov    r8d,0x8
  40c961:	mov    rdx,rsi
  40c964:	mov    rcx,rbx
  40c967:	call   0x415f60
  40c96c:	test   eax,eax
  40c96e:	jne    0x40c952
  40c970:	mov    rdi,rbx
  40c973:	mov    rax,rdi
  40c976:	add    rsp,0x20
  40c97a:	pop    rbx
  40c97b:	pop    rsi
  40c97c:	pop    rdi
  40c97d:	ret    
  40c97e:	xchg   ax,ax
  40c980:	push   rsi
  40c981:	push   rbx
  40c982:	sub    rsp,0x28
  40c986:	mov    rbx,QWORD PTR [rip+0xf3c3]        # 0x41bd50
  40c98d:	cmp    WORD PTR [rbx],0x5a4d
  40c992:	je     0x40c9a0
  40c994:	xor    eax,eax
  40c996:	add    rsp,0x28
  40c99a:	pop    rbx
  40c99b:	pop    rsi
  40c99c:	ret    
  40c99d:	nop    DWORD PTR [rax]
  40c9a0:	mov    rsi,rcx
  40c9a3:	mov    rcx,rbx
  40c9a6:	call   0x40c850
  40c9ab:	test   eax,eax
  40c9ad:	je     0x40c994
  40c9af:	sub    rsi,rbx
  40c9b2:	mov    rcx,rbx
  40c9b5:	mov    rdx,rsi
  40c9b8:	add    rsp,0x28
  40c9bc:	pop    rbx
  40c9bd:	pop    rsi
  40c9be:	jmp    0x40c890
  40c9c3:	nop    DWORD PTR [rax]
  40c9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c9d0:	push   rbx
  40c9d1:	sub    rsp,0x20
  40c9d5:	mov    rbx,QWORD PTR [rip+0xf374]        # 0x41bd50
  40c9dc:	xor    eax,eax
  40c9de:	cmp    WORD PTR [rbx],0x5a4d
  40c9e3:	je     0x40c9f0
  40c9e5:	add    rsp,0x20
  40c9e9:	pop    rbx
  40c9ea:	ret    
  40c9eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9f0:	mov    rcx,rbx
  40c9f3:	call   0x40c850
  40c9f8:	test   eax,eax
  40c9fa:	je     0x40c9e5
  40c9fc:	movsxd rax,DWORD PTR [rbx+0x3c]
  40ca00:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  40ca05:	add    rsp,0x20
  40ca09:	pop    rbx
  40ca0a:	ret    
  40ca0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca10:	push   rdi
  40ca11:	push   rsi
  40ca12:	push   rbx
  40ca13:	sub    rsp,0x20
  40ca17:	mov    rsi,QWORD PTR [rip+0xf332]        # 0x41bd50
  40ca1e:	xor    edi,edi
  40ca20:	mov    rbx,rcx
  40ca23:	cmp    WORD PTR [rsi],0x5a4d
  40ca28:	je     0x40ca35
  40ca2a:	mov    rax,rdi
  40ca2d:	add    rsp,0x20
  40ca31:	pop    rbx
  40ca32:	pop    rsi
  40ca33:	pop    rdi
  40ca34:	ret    
  40ca35:	mov    rcx,rsi
  40ca38:	call   0x40c850
  40ca3d:	test   eax,eax
  40ca3f:	je     0x40ca2a
  40ca41:	movsxd rax,DWORD PTR [rsi+0x3c]
  40ca45:	add    rsi,rax
  40ca48:	movzx  eax,WORD PTR [rsi+0x14]
  40ca4c:	lea    rdx,[rsi+rax*1+0x18]
  40ca51:	movzx  eax,WORD PTR [rsi+0x6]
  40ca55:	test   eax,eax
  40ca57:	je     0x40ca2a
  40ca59:	sub    eax,0x1
  40ca5c:	lea    rax,[rax+rax*4]
  40ca60:	lea    rax,[rdx+rax*8+0x28]
  40ca65:	test   BYTE PTR [rdx+0x27],0x20
  40ca69:	je     0x40ca74
  40ca6b:	test   rbx,rbx
  40ca6e:	je     0x40ca90
  40ca70:	sub    rbx,0x1
  40ca74:	add    rdx,0x28
  40ca78:	cmp    rdx,rax
  40ca7b:	jne    0x40ca65
  40ca7d:	xor    edi,edi
  40ca7f:	mov    rax,rdi
  40ca82:	add    rsp,0x20
  40ca86:	pop    rbx
  40ca87:	pop    rsi
  40ca88:	pop    rdi
  40ca89:	ret    
  40ca8a:	nop    WORD PTR [rax+rax*1+0x0]
  40ca90:	mov    rdi,rdx
  40ca93:	mov    rax,rdi
  40ca96:	add    rsp,0x20
  40ca9a:	pop    rbx
  40ca9b:	pop    rsi
  40ca9c:	pop    rdi
  40ca9d:	ret    
  40ca9e:	xchg   ax,ax
  40caa0:	push   rsi
  40caa1:	push   rbx
  40caa2:	sub    rsp,0x28
  40caa6:	mov    rsi,QWORD PTR [rip+0xf2a3]        # 0x41bd50
  40caad:	xor    ebx,ebx
  40caaf:	cmp    WORD PTR [rsi],0x5a4d
  40cab4:	je     0x40cac0
  40cab6:	mov    rax,rbx
  40cab9:	add    rsp,0x28
  40cabd:	pop    rbx
  40cabe:	pop    rsi
  40cabf:	ret    
  40cac0:	mov    rcx,rsi
  40cac3:	call   0x40c850
  40cac8:	test   eax,eax
  40caca:	cmovne rbx,rsi
  40cace:	mov    rax,rbx
  40cad1:	add    rsp,0x28
  40cad5:	pop    rbx
  40cad6:	pop    rsi
  40cad7:	ret    
  40cad8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cae0:	push   rsi
  40cae1:	push   rbx
  40cae2:	sub    rsp,0x28
  40cae6:	mov    rbx,QWORD PTR [rip+0xf263]        # 0x41bd50
  40caed:	xor    eax,eax
  40caef:	cmp    WORD PTR [rbx],0x5a4d
  40caf4:	je     0x40cb00
  40caf6:	add    rsp,0x28
  40cafa:	pop    rbx
  40cafb:	pop    rsi
  40cafc:	ret    
  40cafd:	nop    DWORD PTR [rax]
  40cb00:	mov    rsi,rcx
  40cb03:	mov    rcx,rbx
  40cb06:	call   0x40c850
  40cb0b:	test   eax,eax
  40cb0d:	je     0x40caf6
  40cb0f:	sub    rsi,rbx
  40cb12:	mov    rcx,rbx
  40cb15:	mov    rdx,rsi
  40cb18:	call   0x40c890
  40cb1d:	test   rax,rax
  40cb20:	je     0x40cb31
  40cb22:	mov    eax,DWORD PTR [rax+0x24]
  40cb25:	not    eax
  40cb27:	shr    eax,0x1f
  40cb2a:	add    rsp,0x28
  40cb2e:	pop    rbx
  40cb2f:	pop    rsi
  40cb30:	ret    
  40cb31:	xor    eax,eax
  40cb33:	jmp    0x40caf6
  40cb35:	nop
  40cb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb40:	push   rbp
  40cb41:	push   rdi
  40cb42:	push   rsi
  40cb43:	push   rbx
  40cb44:	sub    rsp,0x28
  40cb48:	mov    rdi,QWORD PTR [rip+0xf201]        # 0x41bd50
  40cb4f:	xor    ebp,ebp
  40cb51:	mov    esi,ecx
  40cb53:	cmp    WORD PTR [rdi],0x5a4d
  40cb58:	je     0x40cb70
  40cb5a:	mov    rax,rbp
  40cb5d:	add    rsp,0x28
  40cb61:	pop    rbx
  40cb62:	pop    rsi
  40cb63:	pop    rdi
  40cb64:	pop    rbp
  40cb65:	ret    
  40cb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb70:	mov    rcx,rdi
  40cb73:	call   0x40c850
  40cb78:	test   eax,eax
  40cb7a:	je     0x40cb5a
  40cb7c:	movsxd rax,DWORD PTR [rdi+0x3c]
  40cb80:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  40cb87:	test   edx,edx
  40cb89:	je     0x40cb5a
  40cb8b:	mov    ebx,edx
  40cb8d:	mov    rcx,rdi
  40cb90:	mov    rdx,rbx
  40cb93:	call   0x40c890
  40cb98:	test   rax,rax
  40cb9b:	je     0x40cb5a
  40cb9d:	add    rbx,rdi
  40cba0:	mov    rdx,rbx
  40cba3:	jne    0x40cbb7
  40cba5:	jmp    0x40cb5a
  40cba7:	nop    WORD PTR [rax+rax*1+0x0]
  40cbb0:	sub    esi,0x1
  40cbb3:	add    rdx,0x14
  40cbb7:	mov    ecx,DWORD PTR [rdx+0x4]
  40cbba:	test   ecx,ecx
  40cbbc:	jne    0x40cbc5
  40cbbe:	mov    eax,DWORD PTR [rdx+0xc]
  40cbc1:	test   eax,eax
  40cbc3:	je     0x40cbe0
  40cbc5:	test   esi,esi
  40cbc7:	jg     0x40cbb0
  40cbc9:	mov    ebp,DWORD PTR [rdx+0xc]
  40cbcc:	add    rbp,rdi
  40cbcf:	mov    rax,rbp
  40cbd2:	add    rsp,0x28
  40cbd6:	pop    rbx
  40cbd7:	pop    rsi
  40cbd8:	pop    rdi
  40cbd9:	pop    rbp
  40cbda:	ret    
  40cbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbe0:	xor    ebp,ebp
  40cbe2:	mov    rax,rbp
  40cbe5:	add    rsp,0x28
  40cbe9:	pop    rbx
  40cbea:	pop    rsi
  40cbeb:	pop    rdi
  40cbec:	pop    rbp
  40cbed:	ret    
  40cbee:	nop
  40cbef:	nop
  40cbf0:	push   rcx
  40cbf1:	push   rax
  40cbf2:	cmp    rax,0x1000
  40cbf8:	lea    rcx,[rsp+0x18]
  40cbfd:	jb     0x40cc18
  40cbff:	sub    rcx,0x1000
  40cc06:	or     QWORD PTR [rcx],0x0
  40cc0a:	sub    rax,0x1000
  40cc10:	cmp    rax,0x1000
  40cc16:	ja     0x40cbff
  40cc18:	sub    rcx,rax
  40cc1b:	or     QWORD PTR [rcx],0x0
  40cc1f:	pop    rax
  40cc20:	pop    rcx
  40cc21:	ret    
  40cc22:	nop
  40cc23:	nop
  40cc24:	nop
  40cc25:	nop
  40cc26:	nop
  40cc27:	nop
  40cc28:	nop
  40cc29:	nop
  40cc2a:	nop
  40cc2b:	nop
  40cc2c:	nop
  40cc2d:	nop
  40cc2e:	nop
  40cc2f:	nop
  40cc30:	push   rbx
  40cc31:	sub    rsp,0x60
  40cc35:	lea    r8,[rip+0xaad4]        # 0x417710
  40cc3c:	lea    rax,[rsp+0x50]
  40cc41:	lea    r9,[rsp+0x4c]
  40cc46:	mov    QWORD PTR [rsp+0x20],rax
  40cc4b:	call   0x40e1a0
  40cc50:	mov    edx,eax
  40cc52:	and    edx,0x7
  40cc55:	cmp    edx,0x6
  40cc58:	ja     0x40cc85
  40cc5a:	lea    rcx,[rip+0xe8ff]        # 0x41b560
  40cc61:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40cc65:	add    rcx,rdx
  40cc68:	jmp    rcx
  40cc6a:	nop    WORD PTR [rax+rax*1+0x0]
  40cc70:	mov    ebx,DWORD PTR [rsp+0x54]
  40cc74:	mov    edx,DWORD PTR [rsp+0x50]
  40cc78:	or     ebx,0x7ff00000
  40cc7e:	shl    rbx,0x20
  40cc82:	or     rbx,rdx
  40cc85:	test   al,0x8
  40cc87:	je     0x40cc9e
  40cc89:	mov    rax,rbx
  40cc8c:	mov    ebx,ebx
  40cc8e:	shr    rax,0x20
  40cc92:	or     eax,0x80000000
  40cc97:	shl    rax,0x20
  40cc9b:	or     rbx,rax
  40cc9e:	mov    QWORD PTR [rsp+0x38],rbx
  40cca3:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40cca9:	add    rsp,0x60
  40ccad:	pop    rbx
  40ccae:	ret    
  40ccaf:	nop
  40ccb0:	movabs rbx,0x7ff8000000000000
  40ccba:	jmp    0x40cc85
  40ccbc:	nop    DWORD PTR [rax+0x0]
  40ccc0:	xor    ebx,ebx
  40ccc2:	jmp    0x40cc85
  40ccc4:	mov    ebx,DWORD PTR [rsp+0x4c]
  40ccc8:	mov    edx,DWORD PTR [rsp+0x54]
  40cccc:	add    ebx,0x433
  40ccd2:	and    edx,0xffefffff
  40ccd8:	shl    ebx,0x14
  40ccdb:	or     ebx,edx
  40ccdd:	mov    edx,DWORD PTR [rsp+0x50]
  40cce1:	shl    rbx,0x20
  40cce5:	or     rbx,rdx
  40cce8:	jmp    0x40cc85
  40ccea:	nop    WORD PTR [rax+rax*1+0x0]
  40ccf0:	mov    ebx,DWORD PTR [rsp+0x54]
  40ccf4:	mov    edx,DWORD PTR [rsp+0x50]
  40ccf8:	shl    rbx,0x20
  40ccfc:	or     rbx,rdx
  40ccff:	jmp    0x40cc85
  40cd01:	movabs rbx,0x7ff0000000000000
  40cd0b:	jmp    0x40cc85
  40cd10:	push   rbx
  40cd11:	sub    rsp,0x10
  40cd15:	movsd  QWORD PTR [rsp+0x8],xmm0
  40cd1b:	mov    r9,QWORD PTR [rsp+0x8]
  40cd20:	mov    rdx,r9
  40cd23:	mov    r10d,r9d
  40cd26:	shr    rdx,0x20
  40cd2a:	mov    eax,edx
  40cd2c:	mov    r11d,edx
  40cd2f:	sar    eax,0x14
  40cd32:	and    eax,0x7ff
  40cd37:	lea    r8d,[rax-0x3ff]
  40cd3e:	cmp    r8d,0x33
  40cd42:	jle    0x40cd60
  40cd44:	cmp    r8d,0x400
  40cd4b:	je     0x40ce25
  40cd51:	add    rsp,0x10
  40cd55:	pop    rbx
  40cd56:	ret    
  40cd57:	nop    WORD PTR [rax+rax*1+0x0]
  40cd60:	cmp    r8d,0x13
  40cd64:	jg     0x40cdd0
  40cd66:	test   r8d,r8d
  40cd69:	js     0x40ce30
  40cd6f:	mov    eax,0xfffff
  40cd74:	mov    ecx,r8d
  40cd77:	shr    eax,cl
  40cd79:	test   r9d,r9d
  40cd7c:	jne    0x40cd82
  40cd7e:	test   eax,edx
  40cd80:	je     0x40cd51
  40cd82:	movsd  xmm1,QWORD PTR [rip+0xe7f6]        # 0x41b580
  40cd8a:	xorpd  xmm2,xmm2
  40cd8e:	addsd  xmm1,xmm0
  40cd92:	ucomisd xmm2,xmm1
  40cd96:	jae    0x40cd51
  40cd98:	xor    r9d,r9d
  40cd9b:	test   edx,edx
  40cd9d:	jns    0x40cdab
  40cd9f:	mov    r9d,0x100000
  40cda5:	mov    ecx,r8d
  40cda8:	sar    r9d,cl
  40cdab:	add    edx,r9d
  40cdae:	not    eax
  40cdb0:	and    eax,edx
  40cdb2:	shl    rax,0x20
  40cdb6:	mov    QWORD PTR [rsp+0x8],rax
  40cdbb:	movsd  xmm0,QWORD PTR [rsp+0x8]
  40cdc1:	add    rsp,0x10
  40cdc5:	pop    rbx
  40cdc6:	ret    
  40cdc7:	nop    WORD PTR [rax+rax*1+0x0]
  40cdd0:	lea    ecx,[rax-0x413]
  40cdd6:	mov    ebx,0xffffffff
  40cddb:	shr    ebx,cl
  40cddd:	test   ebx,r9d
  40cde0:	je     0x40cd51
  40cde6:	movsd  xmm1,QWORD PTR [rip+0xe792]        # 0x41b580
  40cdee:	xorpd  xmm2,xmm2
  40cdf2:	addsd  xmm1,xmm0
  40cdf6:	ucomisd xmm2,xmm1
  40cdfa:	jae    0x40cd51
  40ce00:	test   edx,edx
  40ce02:	js     0x40ce90
  40ce08:	not    ebx
  40ce0a:	shl    r11,0x20
  40ce0e:	and    r10d,ebx
  40ce11:	or     r11,r10
  40ce14:	mov    QWORD PTR [rsp+0x8],r11
  40ce19:	movsd  xmm0,QWORD PTR [rsp+0x8]
  40ce1f:	add    rsp,0x10
  40ce23:	pop    rbx
  40ce24:	ret    
  40ce25:	addsd  xmm0,xmm0
  40ce29:	add    rsp,0x10
  40ce2d:	pop    rbx
  40ce2e:	ret    
  40ce2f:	nop
  40ce30:	movsd  xmm2,QWORD PTR [rip+0xe748]        # 0x41b580
  40ce38:	xorpd  xmm1,xmm1
  40ce3c:	addsd  xmm2,xmm0
  40ce40:	ucomisd xmm2,xmm1
  40ce44:	jbe    0x40cd51
  40ce4a:	test   edx,edx
  40ce4c:	js     0x40ce60
  40ce4e:	movapd xmm0,xmm1
  40ce52:	jmp    0x40cd51
  40ce57:	nop    WORD PTR [rax+rax*1+0x0]
  40ce60:	and    edx,0x7fffffff
  40ce66:	or     edx,r9d
  40ce69:	je     0x40cd51
  40ce6f:	movabs rax,0xbff0000000000000
  40ce79:	mov    QWORD PTR [rsp+0x8],rax
  40ce7e:	movsd  xmm0,QWORD PTR [rsp+0x8]
  40ce84:	jmp    0x40cd51
  40ce89:	nop    DWORD PTR [rax+0x0]
  40ce90:	cmp    r8d,0x14
  40ce94:	je     0x40ceaf
  40ce96:	mov    ecx,0x433
  40ce9b:	mov    r10d,0x1
  40cea1:	sub    ecx,eax
  40cea3:	shl    r10d,cl
  40cea6:	add    r10d,r9d
  40cea9:	jae    0x40ce08
  40ceaf:	lea    r11d,[rdx+0x1]
  40ceb3:	jmp    0x40ce08
  40ceb8:	nop
  40ceb9:	nop
  40ceba:	nop
  40cebb:	nop
  40cebc:	nop
  40cebd:	nop
  40cebe:	nop
  40cebf:	nop
  40cec0:	sub    rsp,0x28
  40cec4:	movsd  QWORD PTR [rsp+0x8],xmm0
  40ceca:	fld    QWORD PTR [rsp+0x8]
  40cece:	sub    rsp,0x8
  40ced2:	fnstcw WORD PTR [rsp+0x4]
  40ced6:	movzx  eax,WORD PTR [rsp+0x4]
  40cedb:	or     ah,0xc
  40cede:	mov    WORD PTR [rsp],ax
  40cee2:	fldcw  WORD PTR [rsp]
  40cee5:	frndint 
  40cee7:	fldcw  WORD PTR [rsp+0x4]
  40ceeb:	add    rsp,0x8
  40ceef:	test   rdx,rdx
  40cef2:	fstp   QWORD PTR [rsp+0x8]
  40cef6:	je     0x40cf02
  40cef8:	movsd  xmm2,QWORD PTR [rsp+0x8]
  40cefe:	movsd  QWORD PTR [rdx],xmm2
  40cf02:	movsd  QWORD PTR [rsp+0x18],xmm0
  40cf08:	mov    eax,DWORD PTR [rsp+0x1c]
  40cf0c:	mov    ecx,eax
  40cf0e:	and    eax,0x7ff00000
  40cf13:	and    ecx,0xfffff
  40cf19:	or     ecx,DWORD PTR [rsp+0x18]
  40cf1d:	mov    edx,ecx
  40cf1f:	or     edx,eax
  40cf21:	sete   r8b
  40cf25:	test   eax,eax
  40cf27:	sete   dl
  40cf2a:	or     edx,r8d
  40cf2d:	xor    edx,0x1
  40cf30:	cmp    eax,0x7ff00000
  40cf35:	sete   al
  40cf38:	and    edx,eax
  40cf3a:	test   ecx,ecx
  40cf3c:	setne  al
  40cf3f:	cmp    dl,al
  40cf41:	jbe    0x40cf50
  40cf43:	pxor   xmm0,xmm0
  40cf47:	add    rsp,0x28
  40cf4b:	ret    
  40cf4c:	nop    DWORD PTR [rax+0x0]
  40cf50:	subsd  xmm0,QWORD PTR [rsp+0x8]
  40cf56:	add    rsp,0x28
  40cf5a:	ret    
  40cf5b:	nop
  40cf5c:	nop
  40cf5d:	nop
  40cf5e:	nop
  40cf5f:	nop
  40cf60:	sub    rsp,0x38
  40cf64:	mov    r9,rdx
  40cf67:	mov    QWORD PTR [rsp+0x20],r8
  40cf6c:	mov    rdx,rcx
  40cf6f:	xor    r8d,r8d
  40cf72:	mov    ecx,0x6000
  40cf77:	call   0x411980
  40cf7c:	add    rsp,0x38
  40cf80:	ret    
  40cf81:	nop
  40cf82:	nop
  40cf83:	nop
  40cf84:	nop
  40cf85:	nop
  40cf86:	nop
  40cf87:	nop
  40cf88:	nop
  40cf89:	nop
  40cf8a:	nop
  40cf8b:	nop
  40cf8c:	nop
  40cf8d:	nop
  40cf8e:	nop
  40cf8f:	nop
  40cf90:	push   rsi
  40cf91:	push   rbx
  40cf92:	sub    rsp,0x38
  40cf96:	mov    rbx,rcx
  40cf99:	mov    rsi,rdx
  40cf9c:	call   0x4160e8
  40cfa1:	lea    rdx,[rax+0x30]
  40cfa5:	mov    QWORD PTR [rsp+0x20],rsi
  40cfaa:	mov    r9,rbx
  40cfad:	xor    r8d,r8d
  40cfb0:	mov    ecx,0x6000
  40cfb5:	call   0x411980
  40cfba:	add    rsp,0x38
  40cfbe:	pop    rbx
  40cfbf:	pop    rsi
  40cfc0:	ret    
  40cfc1:	nop
  40cfc2:	nop
  40cfc3:	nop
  40cfc4:	nop
  40cfc5:	nop
  40cfc6:	nop
  40cfc7:	nop
  40cfc8:	nop
  40cfc9:	nop
  40cfca:	nop
  40cfcb:	nop
  40cfcc:	nop
  40cfcd:	nop
  40cfce:	nop
  40cfcf:	nop
  40cfd0:	push   rbx
  40cfd1:	sub    rsp,0x30
  40cfd5:	mov    rbx,rcx
  40cfd8:	mov    r9,rdx
  40cfdb:	mov    QWORD PTR [rsp+0x20],r8
  40cfe0:	mov    rdx,rcx
  40cfe3:	xor    r8d,r8d
  40cfe6:	mov    ecx,0x4000
  40cfeb:	call   0x411980
  40cff0:	movsxd rdx,eax
  40cff3:	mov    BYTE PTR [rbx+rdx*1],0x0
  40cff7:	add    rsp,0x30
  40cffb:	pop    rbx
  40cffc:	ret    
  40cffd:	nop
  40cffe:	nop
  40cfff:	nop
  40d000:	push   rbx
  40d001:	add    rsp,0xffffffffffffff80
  40d005:	movaps XMMWORD PTR [rsp+0x70],xmm6
  40d00a:	movq   QWORD PTR [rsp+0x68],xmm0
  40d010:	movq   rbx,xmm0
  40d015:	mov    eax,DWORD PTR [rsp+0x6c]
  40d019:	mov    edx,eax
  40d01b:	and    eax,0x7ff00000
  40d020:	and    edx,0xfffff
  40d026:	or     edx,DWORD PTR [rsp+0x68]
  40d02a:	mov    ecx,edx
  40d02c:	or     ecx,eax
  40d02e:	je     0x40d037
  40d030:	cmp    eax,0x7ff00000
  40d035:	je     0x40d070
  40d037:	mov    QWORD PTR [rsp+0x30],rbx
  40d03c:	lea    rcx,[rsp+0x50]
  40d041:	lea    rdx,[rsp+0x40]
  40d046:	fld    QWORD PTR [rsp+0x30]
  40d04a:	fstp   TBYTE PTR [rsp+0x40]
  40d04e:	call   0x40d100
  40d053:	fld    TBYTE PTR [rsp+0x50]
  40d057:	fstp   QWORD PTR [rsp+0x38]
  40d05b:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40d061:	movaps xmm6,XMMWORD PTR [rsp+0x70]
  40d066:	sub    rsp,0xffffffffffffff80
  40d06a:	pop    rbx
  40d06b:	ret    
  40d06c:	nop    DWORD PTR [rax+0x0]
  40d070:	test   edx,edx
  40d072:	je     0x40d0b1
  40d074:	call   0x4160b8
  40d079:	pxor   xmm3,xmm3
  40d07d:	mov    DWORD PTR [rax],0x21
  40d083:	mov    QWORD PTR [rsp+0x30],rbx
  40d088:	lea    rdx,[rip+0xe501]        # 0x41b590
  40d08f:	mov    QWORD PTR [rsp+0x20],rbx
  40d094:	movsd  xmm2,QWORD PTR [rsp+0x30]
  40d09a:	mov    ecx,0x1
  40d09f:	call   0x40bb10
  40d0a4:	mov    QWORD PTR [rsp+0x30],rbx
  40d0a9:	movsd  xmm0,QWORD PTR [rsp+0x30]
  40d0af:	jmp    0x40d061
  40d0b1:	call   0x4160b8
  40d0b6:	movsd  xmm6,QWORD PTR [rip+0xe4da]        # 0x41b598
  40d0be:	mov    DWORD PTR [rax],0x21
  40d0c4:	pxor   xmm3,xmm3
  40d0c8:	mov    QWORD PTR [rsp+0x30],rbx
  40d0cd:	movsd  QWORD PTR [rsp+0x20],xmm6
  40d0d3:	lea    rdx,[rip+0xe4b6]        # 0x41b590
  40d0da:	mov    ecx,0x1
  40d0df:	movsd  xmm2,QWORD PTR [rsp+0x30]
  40d0e5:	call   0x40bb10
  40d0ea:	movapd xmm0,xmm6
  40d0ee:	jmp    0x40d061
  40d0f3:	nop
  40d0f4:	nop
  40d0f5:	nop
  40d0f6:	nop
  40d0f7:	nop
  40d0f8:	nop
  40d0f9:	nop
  40d0fa:	nop
  40d0fb:	nop
  40d0fc:	nop
  40d0fd:	nop
  40d0fe:	nop
  40d0ff:	nop
  40d100:	fld    TBYTE PTR [rdx]
  40d102:	fcos   
  40d104:	fnstsw ax
  40d106:	test   eax,0x400
  40d10b:	je     0x40d122
  40d10d:	fldpi  
  40d10f:	fadd   st,st(0)
  40d111:	fxch   st(1)
  40d113:	fprem1 
  40d115:	fnstsw ax
  40d117:	test   eax,0x400
  40d11c:	jne    0x40d113
  40d11e:	fstp   st(1)
  40d120:	fcos   
  40d122:	mov    rax,rcx
  40d125:	mov    QWORD PTR [rcx+0x8],0x0
  40d12d:	fstp   TBYTE PTR [rcx]
  40d12f:	ret    
  40d130:	sub    rsp,0x78
  40d134:	movaps XMMWORD PTR [rsp+0x50],xmm6
  40d139:	movaps XMMWORD PTR [rsp+0x60],xmm7
  40d13e:	movsd  QWORD PTR [rsp+0x48],xmm0
  40d144:	movapd xmm6,xmm0
  40d148:	mov    eax,DWORD PTR [rsp+0x4c]
  40d14c:	movsd  xmm0,QWORD PTR [rip+0xe45c]        # 0x41b5b0
  40d154:	mov    edx,eax
  40d156:	and    eax,0x7ff00000
  40d15b:	and    edx,0xfffff
  40d161:	or     edx,DWORD PTR [rsp+0x48]
  40d165:	mov    ecx,edx
  40d167:	or     ecx,eax
  40d169:	je     0x40d205
  40d16f:	cmp    eax,0x7ff00000
  40d174:	je     0x40d214
  40d17a:	ucomisd xmm6,QWORD PTR [rip+0xe43e]        # 0x41b5c0
  40d182:	ja     0x40d285
  40d188:	movsd  xmm0,QWORD PTR [rip+0xe428]        # 0x41b5b8
  40d190:	ucomisd xmm0,xmm6
  40d194:	ja     0x40d272
  40d19a:	movsd  QWORD PTR [rsp+0x30],xmm6
  40d1a0:	fld    QWORD PTR [rsp+0x30]
  40d1a4:	fldl2e 
  40d1a6:	fmul   st,st(1)
  40d1a8:	sub    rsp,0x8
  40d1ac:	fnstcw WORD PTR [rsp+0x4]
  40d1b0:	movzx  eax,WORD PTR [rsp+0x4]
  40d1b5:	or     ah,0xc
  40d1b8:	mov    WORD PTR [rsp],ax
  40d1bc:	fldcw  WORD PTR [rsp]
  40d1bf:	frndint 
  40d1c1:	fld    st(1)
  40d1c3:	frndint 
  40d1c5:	fldcw  WORD PTR [rsp+0x4]
  40d1c9:	add    rsp,0x8
  40d1cd:	fld    st(1)
  40d1cf:	fld    TBYTE PTR [rip+0xa57b]        # 0x417750
  40d1d5:	fld    st(2)
  40d1d7:	fmul   st,st(1)
  40d1d9:	fsubrp st(2),st
  40d1db:	fld    st(4)
  40d1dd:	fsub   st,st(3)
  40d1df:	fmulp  st(1),st
  40d1e1:	faddp  st(1),st
  40d1e3:	fld    TBYTE PTR [rip+0xa557]        # 0x417740
  40d1e9:	fmul   st,st(4)
  40d1eb:	faddp  st(1),st
  40d1ed:	f2xm1  
  40d1ef:	fld1   
  40d1f1:	faddp  st(1),st
  40d1f3:	fstp   st(1)
  40d1f5:	fscale 
  40d1f7:	fstp   st(1)
  40d1f9:	fstp   st(1)
  40d1fb:	fstp   QWORD PTR [rsp+0x38]
  40d1ff:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40d205:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  40d20a:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  40d20f:	add    rsp,0x78
  40d213:	ret    
  40d214:	test   edx,edx
  40d216:	jne    0x40d2d0
  40d21c:	movq   rax,xmm6
  40d221:	shr    rax,0x20
  40d225:	test   eax,eax
  40d227:	js     0x40d303
  40d22d:	call   0x4160b8
  40d232:	movsd  xmm7,QWORD PTR [rip+0xe36e]        # 0x41b5a8
  40d23a:	mov    DWORD PTR [rax],0x22
  40d240:	mov    ecx,0x4
  40d245:	pxor   xmm3,xmm3
  40d249:	movsd  QWORD PTR [rsp+0x20],xmm7
  40d24f:	lea    rdx,[rip+0xe34a]        # 0x41b5a0
  40d256:	movapd xmm2,xmm6
  40d25a:	call   0x40bb10
  40d25f:	movapd xmm0,xmm7
  40d263:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  40d268:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  40d26d:	add    rsp,0x78
  40d271:	ret    
  40d272:	pxor   xmm0,xmm0
  40d276:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  40d27b:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  40d280:	add    rsp,0x78
  40d284:	ret    
  40d285:	call   0x4160b8
  40d28a:	movsd  xmm7,QWORD PTR [rip+0xe316]        # 0x41b5a8
  40d292:	mov    DWORD PTR [rax],0x22
  40d298:	pxor   xmm3,xmm3
  40d29c:	lea    rdx,[rip+0xe2fd]        # 0x41b5a0
  40d2a3:	movsd  QWORD PTR [rsp+0x20],xmm7
  40d2a9:	movapd xmm2,xmm6
  40d2ad:	mov    ecx,0x3
  40d2b2:	call   0x40bb10
  40d2b7:	movapd xmm0,xmm7
  40d2bb:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  40d2c0:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  40d2c5:	add    rsp,0x78
  40d2c9:	ret    
  40d2ca:	nop    WORD PTR [rax+rax*1+0x0]
  40d2d0:	call   0x4160b8
  40d2d5:	pxor   xmm3,xmm3
  40d2d9:	mov    DWORD PTR [rax],0x21
  40d2df:	movapd xmm2,xmm6
  40d2e3:	movsd  QWORD PTR [rsp+0x20],xmm6
  40d2e9:	lea    rdx,[rip+0xe2b0]        # 0x41b5a0
  40d2f0:	mov    ecx,0x1
  40d2f5:	call   0x40bb10
  40d2fa:	movapd xmm0,xmm6
  40d2fe:	jmp    0x40d205
  40d303:	call   0x4160b8
  40d308:	pxor   xmm7,xmm7
  40d30c:	mov    DWORD PTR [rax],0x22
  40d312:	mov    ecx,0x3
  40d317:	jmp    0x40d245
  40d31c:	nop
  40d31d:	nop
  40d31e:	nop
  40d31f:	nop
  40d320:	push   rbx
  40d321:	add    rsp,0xffffffffffffff80
  40d325:	movaps XMMWORD PTR [rsp+0x70],xmm6
  40d32a:	movq   QWORD PTR [rsp+0x68],xmm0
  40d330:	movq   rbx,xmm0
  40d335:	mov    eax,DWORD PTR [rsp+0x6c]
  40d339:	mov    edx,eax
  40d33b:	and    eax,0x7ff00000
  40d340:	and    edx,0xfffff
  40d346:	or     edx,DWORD PTR [rsp+0x68]
  40d34a:	mov    ecx,edx
  40d34c:	or     ecx,eax
  40d34e:	je     0x40d3a2
  40d350:	cmp    eax,0x7ff00000
  40d355:	je     0x40d3f0
  40d35b:	movq   rax,xmm0
  40d360:	shr    rax,0x20
  40d364:	test   eax,eax
  40d366:	js     0x40d410
  40d36c:	mov    QWORD PTR [rsp+0x30],rbx
  40d371:	lea    rcx,[rsp+0x50]
  40d376:	lea    rdx,[rsp+0x40]
  40d37b:	fld    QWORD PTR [rsp+0x30]
  40d37f:	fstp   TBYTE PTR [rsp+0x40]
  40d383:	call   0x412460
  40d388:	nop
  40d389:	movaps xmm6,XMMWORD PTR [rsp+0x70]
  40d38e:	fld    TBYTE PTR [rsp+0x50]
  40d392:	fstp   QWORD PTR [rsp+0x38]
  40d396:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40d39c:	sub    rsp,0xffffffffffffff80
  40d3a0:	pop    rbx
  40d3a1:	ret    
  40d3a2:	call   0x4160b8
  40d3a7:	movsd  xmm6,QWORD PTR [rip+0xe229]        # 0x41b5d8
  40d3af:	mov    QWORD PTR [rsp+0x30],rbx
  40d3b4:	pxor   xmm3,xmm3
  40d3b8:	mov    DWORD PTR [rax],0x22
  40d3be:	movsd  xmm2,QWORD PTR [rsp+0x30]
  40d3c4:	lea    rdx,[rip+0xe205]        # 0x41b5d0
  40d3cb:	movsd  QWORD PTR [rsp+0x20],xmm6
  40d3d1:	mov    ecx,0x3
  40d3d6:	call   0x40bb10
  40d3db:	movapd xmm0,xmm6
  40d3df:	movaps xmm6,XMMWORD PTR [rsp+0x70]
  40d3e4:	sub    rsp,0xffffffffffffff80
  40d3e8:	pop    rbx
  40d3e9:	ret    
  40d3ea:	nop    WORD PTR [rax+rax*1+0x0]
  40d3f0:	test   edx,edx
  40d3f2:	je     0x40d450
  40d3f4:	movq   rax,xmm0
  40d3f9:	shr    rax,0x20
  40d3fd:	test   eax,eax
  40d3ff:	js     0x40d410
  40d401:	movsd  xmm0,QWORD PTR [rip+0xe1d7]        # 0x41b5e0
  40d409:	jmp    0x40d3df
  40d40b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d410:	call   0x4160b8
  40d415:	movsd  xmm6,QWORD PTR [rip+0xe1c3]        # 0x41b5e0
  40d41d:	mov    QWORD PTR [rsp+0x30],rbx
  40d422:	pxor   xmm3,xmm3
  40d426:	mov    DWORD PTR [rax],0x21
  40d42c:	movsd  xmm2,QWORD PTR [rsp+0x30]
  40d432:	lea    rdx,[rip+0xe197]        # 0x41b5d0
  40d439:	movsd  QWORD PTR [rsp+0x20],xmm6
  40d43f:	mov    ecx,0x1
  40d444:	call   0x40bb10
  40d449:	movapd xmm0,xmm6
  40d44d:	jmp    0x40d3df
  40d44f:	nop
  40d450:	movq   rax,xmm0
  40d455:	shr    rax,0x20
  40d459:	test   eax,eax
  40d45b:	js     0x40d410
  40d45d:	movsd  xmm0,QWORD PTR [rip+0xe183]        # 0x41b5e8
  40d465:	jmp    0x40d3df
  40d46a:	nop
  40d46b:	nop
  40d46c:	nop
  40d46d:	nop
  40d46e:	nop
  40d46f:	nop
  40d470:	sub    rsp,0x28
  40d474:	movsd  QWORD PTR [rsp+0x8],xmm0
  40d47a:	fld    QWORD PTR [rsp+0x8]
  40d47e:	push   rax
  40d47f:	sub    rsp,0x8
  40d483:	fnstcw WORD PTR [rsp+0x4]
  40d487:	movzx  eax,WORD PTR [rsp+0x4]
  40d48c:	or     ah,0xc
  40d48f:	mov    WORD PTR [rsp],ax
  40d493:	fldcw  WORD PTR [rsp]
  40d496:	frndint 
  40d498:	fldcw  WORD PTR [rsp+0x4]
  40d49c:	add    rsp,0x8
  40d4a0:	pop    rax
  40d4a1:	test   rdx,rdx
  40d4a4:	fstp   QWORD PTR [rsp+0x8]
  40d4a8:	je     0x40d4b4
  40d4aa:	movsd  xmm2,QWORD PTR [rsp+0x8]
  40d4b0:	movsd  QWORD PTR [rdx],xmm2
  40d4b4:	movsd  QWORD PTR [rsp+0x18],xmm0
  40d4ba:	mov    eax,DWORD PTR [rsp+0x1c]
  40d4be:	mov    ecx,eax
  40d4c0:	and    eax,0x7ff00000
  40d4c5:	and    ecx,0xfffff
  40d4cb:	or     ecx,DWORD PTR [rsp+0x18]
  40d4cf:	mov    edx,ecx
  40d4d1:	or     edx,eax
  40d4d3:	sete   r8b
  40d4d7:	test   eax,eax
  40d4d9:	sete   dl
  40d4dc:	or     edx,r8d
  40d4df:	xor    edx,0x1
  40d4e2:	cmp    eax,0x7ff00000
  40d4e7:	sete   al
  40d4ea:	and    edx,eax
  40d4ec:	test   ecx,ecx
  40d4ee:	setne  al
  40d4f1:	cmp    dl,al
  40d4f3:	jbe    0x40d500
  40d4f5:	pxor   xmm0,xmm0
  40d4f9:	add    rsp,0x28
  40d4fd:	ret    
  40d4fe:	xchg   ax,ax
  40d500:	subsd  xmm0,QWORD PTR [rsp+0x8]
  40d506:	add    rsp,0x28
  40d50a:	ret    
  40d50b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d510:	push   rdi
  40d511:	push   rsi
  40d512:	push   rbx
  40d513:	sub    rsp,0xc0
  40d51a:	movaps XMMWORD PTR [rsp+0x80],xmm6
  40d522:	movaps XMMWORD PTR [rsp+0x90],xmm7
  40d52a:	movaps XMMWORD PTR [rsp+0xa0],xmm8
  40d533:	movaps XMMWORD PTR [rsp+0xb0],xmm9
  40d53c:	mov    ecx,0x4000
  40d541:	movsd  QWORD PTR [rsp+0x70],xmm0
  40d547:	movapd xmm8,xmm0
  40d54c:	mov    eax,DWORD PTR [rsp+0x74]
  40d550:	movapd xmm7,xmm1
  40d554:	mov    edx,eax
  40d556:	and    eax,0x7ff00000
  40d55b:	and    edx,0xfffff
  40d561:	or     edx,DWORD PTR [rsp+0x70]
  40d565:	mov    edi,edx
  40d567:	or     edi,eax
  40d569:	je     0x40d577
  40d56b:	test   eax,eax
  40d56d:	mov    cx,0x4400
  40d571:	jne    0x40d671
  40d577:	movsd  QWORD PTR [rsp+0x78],xmm7
  40d57d:	mov    eax,DWORD PTR [rsp+0x7c]
  40d581:	movsd  xmm0,QWORD PTR [rip+0xe097]        # 0x41b620
  40d589:	mov    edx,eax
  40d58b:	and    eax,0x7ff00000
  40d590:	and    edx,0xfffff
  40d596:	or     edx,DWORD PTR [rsp+0x78]
  40d59a:	mov    esi,edx
  40d59c:	or     esi,eax
  40d59e:	je     0x40d613
  40d5a0:	test   eax,eax
  40d5a2:	jne    0x40d640
  40d5a8:	mov    r8d,0x4400
  40d5ae:	movsd  xmm6,QWORD PTR [rip+0xe06a]        # 0x41b620
  40d5b6:	ucomisd xmm8,xmm6
  40d5bb:	jp     0x40d5bf
  40d5bd:	je     0x40d60f
  40d5bf:	cmp    ecx,0x100
  40d5c5:	jne    0x40d6a0
  40d5cb:	movq   rax,xmm8
  40d5d0:	shr    rax,0x20
  40d5d4:	test   eax,eax
  40d5d6:	js     0x40d880
  40d5dc:	movsd  xmm6,QWORD PTR [rip+0xe01c]        # 0x41b600
  40d5e4:	call   0x4160b8
  40d5e9:	mov    DWORD PTR [rax],0x21
  40d5ef:	movsd  QWORD PTR [rsp+0x20],xmm6
  40d5f5:	movapd xmm3,xmm7
  40d5f9:	movapd xmm2,xmm8
  40d5fe:	lea    rdx,[rip+0xdfeb]        # 0x41b5f0
  40d605:	mov    ecx,0x1
  40d60a:	call   0x40bb10
  40d60f:	movapd xmm0,xmm6
  40d613:	movaps xmm6,XMMWORD PTR [rsp+0x80]
  40d61b:	movaps xmm7,XMMWORD PTR [rsp+0x90]
  40d623:	movaps xmm8,XMMWORD PTR [rsp+0xa0]
  40d62c:	movaps xmm9,XMMWORD PTR [rsp+0xb0]
  40d635:	add    rsp,0xc0
  40d63c:	pop    rbx
  40d63d:	pop    rsi
  40d63e:	pop    rdi
  40d63f:	ret    
  40d640:	cmp    eax,0x7ff00000
  40d645:	mov    r8d,0x400
  40d64b:	jne    0x40d5ae
  40d651:	test   edx,edx
  40d653:	mov    r8w,0x500
  40d658:	je     0x40d5ae
  40d65e:	ucomisd xmm8,xmm0
  40d663:	jp     0x40d5cb
  40d669:	jne    0x40d5cb
  40d66f:	jmp    0x40d613
  40d671:	cmp    eax,0x7ff00000
  40d676:	mov    cx,0x400
  40d67a:	jne    0x40d577
  40d680:	cmp    edx,0x1
  40d683:	sbb    ecx,ecx
  40d685:	and    ecx,0x400
  40d68b:	add    ecx,0x100
  40d691:	jmp    0x40d577
  40d696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d6a0:	cmp    ecx,0x4000
  40d6a6:	je     0x40d740
  40d6ac:	cmp    r8d,0x500
  40d6b3:	je     0x40d710
  40d6b5:	cmp    ecx,0x500
  40d6bb:	jne    0x40d792
  40d6c1:	movq   rax,xmm8
  40d6c6:	shr    rax,0x20
  40d6ca:	test   eax,eax
  40d6cc:	js     0x40d9b0
  40d6d2:	movapd xmm0,xmm7
  40d6d6:	mov    edx,0xffffffff
  40d6db:	call   0x4124b0
  40d6e0:	lea    rdx,[rsp+0x68]
  40d6e5:	call   0x40d470
  40d6ea:	movq   rax,xmm7
  40d6ef:	shr    rax,0x20
  40d6f3:	test   eax,eax
  40d6f5:	pxor   xmm9,xmm9
  40d6fa:	js     0x40d788
  40d700:	movsd  xmm0,QWORD PTR [rip+0xdf10]        # 0x41b618
  40d708:	jmp    0x40d613
  40d70d:	nop    DWORD PTR [rax]
  40d710:	cmp    ecx,0x500
  40d716:	je     0x40d6ea
  40d718:	movq   rax,xmm8
  40d71d:	shr    rax,0x20
  40d721:	test   eax,eax
  40d723:	js     0x40da20
  40d729:	movq   rax,xmm7
  40d72e:	shr    rax,0x20
  40d732:	ucomisd xmm8,xmm6
  40d737:	ja     0x40d6f3
  40d739:	jmp    0x40d77b
  40d73b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d740:	cmp    r8d,0x500
  40d747:	je     0x40d772
  40d749:	movq   rax,xmm8
  40d74e:	shr    rax,0x20
  40d752:	test   eax,eax
  40d754:	js     0x40d914
  40d75a:	movapd xmm0,xmm7
  40d75e:	mov    edx,0xffffffff
  40d763:	call   0x4124b0
  40d768:	lea    rdx,[rsp+0x68]
  40d76d:	call   0x40d470
  40d772:	movq   rax,xmm7
  40d777:	shr    rax,0x20
  40d77b:	test   eax,eax
  40d77d:	pxor   xmm9,xmm9
  40d782:	js     0x40d700
  40d788:	movapd xmm0,xmm9
  40d78d:	jmp    0x40d613
  40d792:	lea    rbx,[rsp+0x68]
  40d797:	pxor   xmm9,xmm9
  40d79c:	movapd xmm0,xmm7
  40d7a0:	mov    rdx,rbx
  40d7a3:	call   0x40d470
  40d7a8:	ucomisd xmm0,xmm9
  40d7ad:	jp     0x40d890
  40d7b3:	jne    0x40d890
  40d7b9:	movsd  xmm0,QWORD PTR [rsp+0x68]
  40d7bf:	movsd  xmm1,QWORD PTR [rip+0xde81]        # 0x41b648
  40d7c7:	ucomisd xmm1,xmm0
  40d7cb:	jb     0x40d7db
  40d7cd:	ucomisd xmm0,QWORD PTR [rip+0xde8b]        # 0x41b660
  40d7d5:	jae    0x40dac0
  40d7db:	movsd  xmm0,QWORD PTR [rip+0xde6d]        # 0x41b650
  40d7e3:	lea    rsi,[rsp+0x50]
  40d7e8:	lea    rdi,[rsp+0x40]
  40d7ed:	andpd  xmm0,xmm8
  40d7f2:	mov    rdx,rdi
  40d7f5:	mov    rcx,rsi
  40d7f8:	movsd  QWORD PTR [rsp+0x30],xmm0
  40d7fe:	fld    QWORD PTR [rsp+0x30]
  40d802:	fstp   TBYTE PTR [rsp+0x40]
  40d806:	call   0x4125c0
  40d80b:	mov    rdx,rdi
  40d80e:	mov    rcx,rsi
  40d811:	movsd  QWORD PTR [rsp+0x30],xmm7
  40d817:	fld    TBYTE PTR [rsp+0x50]
  40d81b:	fld    QWORD PTR [rsp+0x30]
  40d81f:	fmulp  st(1),st
  40d821:	fstp   TBYTE PTR [rsp+0x40]
  40d825:	call   0x4123e0
  40d82a:	movq   rax,xmm8
  40d82f:	fld    TBYTE PTR [rsp+0x50]
  40d833:	shr    rax,0x20
  40d837:	test   eax,eax
  40d839:	fstp   QWORD PTR [rsp+0x38]
  40d83d:	movsd  xmm6,QWORD PTR [rsp+0x38]
  40d843:	jns    0x40d60f
  40d849:	movapd xmm0,xmm7
  40d84d:	mov    edx,0xffffffff
  40d852:	call   0x4124b0
  40d857:	mov    rdx,rbx
  40d85a:	call   0x40d470
  40d85f:	ucomisd xmm0,xmm9
  40d864:	jp     0x40d86c
  40d866:	je     0x40d60f
  40d86c:	movsd  xmm4,QWORD PTR [rip+0xddbc]        # 0x41b630
  40d874:	xorpd  xmm6,xmm4
  40d878:	jmp    0x40d60f
  40d87d:	nop    DWORD PTR [rax]
  40d880:	movsd  xmm6,QWORD PTR [rip+0xdd70]        # 0x41b5f8
  40d888:	jmp    0x40d5e4
  40d88d:	nop    DWORD PTR [rax]
  40d890:	movq   rax,xmm8
  40d895:	shr    rax,0x20
  40d899:	test   eax,eax
  40d89b:	js     0x40dad3
  40d8a1:	ucomisd xmm7,QWORD PTR [rip+0xdd97]        # 0x41b640
  40d8a9:	jp     0x40d8b1
  40d8ab:	je     0x40da00
  40d8b1:	movsd  xmm0,QWORD PTR [rip+0xdd97]        # 0x41b650
  40d8b9:	lea    rbx,[rsp+0x50]
  40d8be:	lea    rsi,[rsp+0x40]
  40d8c3:	andpd  xmm8,xmm0
  40d8c8:	mov    rdx,rsi
  40d8cb:	mov    rcx,rbx
  40d8ce:	movsd  QWORD PTR [rsp+0x30],xmm8
  40d8d5:	fld    QWORD PTR [rsp+0x30]
  40d8d9:	fstp   TBYTE PTR [rsp+0x40]
  40d8dd:	call   0x4125c0
  40d8e2:	mov    rdx,rsi
  40d8e5:	mov    rcx,rbx
  40d8e8:	movsd  QWORD PTR [rsp+0x30],xmm7
  40d8ee:	fld    TBYTE PTR [rsp+0x50]
  40d8f2:	fld    QWORD PTR [rsp+0x30]
  40d8f6:	fmulp  st(1),st
  40d8f8:	fstp   TBYTE PTR [rsp+0x40]
  40d8fc:	call   0x4123e0
  40d901:	fld    TBYTE PTR [rsp+0x50]
  40d905:	fstp   QWORD PTR [rsp+0x38]
  40d909:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40d90f:	jmp    0x40d613
  40d914:	lea    rbx,[rsp+0x68]
  40d919:	pxor   xmm9,xmm9
  40d91e:	movapd xmm0,xmm7
  40d922:	mov    rdx,rbx
  40d925:	call   0x40d470
  40d92a:	ucomisd xmm0,xmm9
  40d92f:	jp     0x40d933
  40d931:	je     0x40d95f
  40d933:	movq   rax,xmm7
  40d938:	shr    rax,0x20
  40d93c:	test   eax,eax
  40d93e:	jns    0x40d788
  40d944:	movsd  xmm0,QWORD PTR [rip+0xdce4]        # 0x41b630
  40d94c:	xorpd  xmm8,xmm0
  40d951:	divsd  xmm6,xmm8
  40d956:	movapd xmm0,xmm6
  40d95a:	jmp    0x40d613
  40d95f:	movapd xmm0,xmm7
  40d963:	mov    edx,0xffffffff
  40d968:	call   0x4124b0
  40d96d:	mov    rdx,rbx
  40d970:	call   0x40d470
  40d975:	ucomisd xmm0,xmm9
  40d97a:	mov    edx,0x1
  40d97f:	setp   al
  40d982:	cmove  edx,eax
  40d985:	movq   rax,xmm7
  40d98a:	shr    rax,0x20
  40d98e:	test   eax,eax
  40d990:	js     0x40daeb
  40d996:	test   dl,dl
  40d998:	je     0x40d788
  40d99e:	movsd  xmm0,QWORD PTR [rip+0xdc62]        # 0x41b608
  40d9a6:	jmp    0x40d613
  40d9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9b0:	lea    rbx,[rsp+0x68]
  40d9b5:	pxor   xmm9,xmm9
  40d9ba:	movapd xmm0,xmm7
  40d9be:	mov    rdx,rbx
  40d9c1:	call   0x40d470
  40d9c6:	ucomisd xmm0,xmm9
  40d9cb:	jp     0x40d9cf
  40d9cd:	je     0x40da43
  40d9cf:	movq   rax,xmm7
  40d9d4:	shr    rax,0x20
  40d9d8:	test   eax,eax
  40d9da:	js     0x40d944
  40d9e0:	movsd  xmm4,QWORD PTR [rip+0xdc48]        # 0x41b630
  40d9e8:	movapd xmm0,xmm8
  40d9ed:	xorpd  xmm0,xmm4
  40d9f1:	jmp    0x40d613
  40d9f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40da00:	movsd  QWORD PTR [rsp+0x30],xmm8
  40da07:	fld    QWORD PTR [rsp+0x30]
  40da0b:	fsqrt  
  40da0d:	fstp   QWORD PTR [rsp+0x30]
  40da11:	movsd  xmm0,QWORD PTR [rsp+0x30]
  40da17:	jmp    0x40d613
  40da1c:	nop    DWORD PTR [rax+0x0]
  40da20:	movsd  xmm0,QWORD PTR [rip+0xdc08]        # 0x41b630
  40da28:	xorpd  xmm8,xmm0
  40da2d:	ucomisd xmm8,xmm6
  40da32:	jp     0x40d729
  40da38:	je     0x40d60f
  40da3e:	jmp    0x40d729
  40da43:	movapd xmm0,xmm7
  40da47:	mov    edx,0xffffffff
  40da4c:	call   0x4124b0
  40da51:	mov    rdx,rbx
  40da54:	call   0x40d470
  40da59:	ucomisd xmm0,xmm9
  40da5e:	mov    edx,0x1
  40da63:	setp   al
  40da66:	cmove  edx,eax
  40da69:	movq   rax,xmm7
  40da6e:	shr    rax,0x20
  40da72:	mov    ecx,eax
  40da74:	shr    ecx,0x1f
  40da77:	cmp    cl,dl
  40da79:	ja     0x40d788
  40da7f:	not    eax
  40da81:	shr    eax,0x1f
  40da84:	test   dl,dl
  40da86:	je     0x40da98
  40da88:	test   al,al
  40da8a:	movsd  xmm0,QWORD PTR [rip+0xdb7e]        # 0x41b610
  40da92:	jne    0x40d613
  40da98:	cmp    al,dl
  40da9a:	ja     0x40d700
  40daa0:	test   cl,cl
  40daa2:	jne    0x40d996
  40daa8:	test   dl,dl
  40daaa:	movsd  xmm0,QWORD PTR [rip+0xdb5e]        # 0x41b610
  40dab2:	jne    0x40d613
  40dab8:	jmp    0x40d700
  40dabd:	nop    DWORD PTR [rax]
  40dac0:	cvttsd2si edx,xmm7
  40dac4:	movapd xmm0,xmm8
  40dac9:	call   0x40fe50
  40dace:	jmp    0x40d613
  40dad3:	call   0x4160b8
  40dad8:	movsd  xmm6,QWORD PTR [rip+0xdb18]        # 0x41b5f8
  40dae0:	mov    DWORD PTR [rax],0x21
  40dae6:	jmp    0x40d5ef
  40daeb:	test   dl,dl
  40daed:	je     0x40d700
  40daf3:	movsd  xmm0,QWORD PTR [rip+0xdb15]        # 0x41b610
  40dafb:	jmp    0x40d613
  40db00:	push   rbx
  40db01:	add    rsp,0xffffffffffffff80
  40db05:	movaps XMMWORD PTR [rsp+0x70],xmm6
  40db0a:	movq   QWORD PTR [rsp+0x68],xmm0
  40db10:	movq   rbx,xmm0
  40db15:	mov    eax,DWORD PTR [rsp+0x6c]
  40db19:	mov    edx,eax
  40db1b:	and    eax,0x7ff00000
  40db20:	and    edx,0xfffff
  40db26:	or     edx,DWORD PTR [rsp+0x68]
  40db2a:	mov    ecx,edx
  40db2c:	or     ecx,eax
  40db2e:	je     0x40db37
  40db30:	cmp    eax,0x7ff00000
  40db35:	je     0x40db70
  40db37:	mov    QWORD PTR [rsp+0x30],rbx
  40db3c:	lea    rcx,[rsp+0x50]
  40db41:	lea    rdx,[rsp+0x40]
  40db46:	fld    QWORD PTR [rsp+0x30]
  40db4a:	fstp   TBYTE PTR [rsp+0x40]
  40db4e:	call   0x40dc00
  40db53:	fld    TBYTE PTR [rsp+0x50]
  40db57:	fstp   QWORD PTR [rsp+0x38]
  40db5b:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40db61:	movaps xmm6,XMMWORD PTR [rsp+0x70]
  40db66:	sub    rsp,0xffffffffffffff80
  40db6a:	pop    rbx
  40db6b:	ret    
  40db6c:	nop    DWORD PTR [rax+0x0]
  40db70:	test   edx,edx
  40db72:	je     0x40dbb1
  40db74:	call   0x4160b8
  40db79:	pxor   xmm3,xmm3
  40db7d:	mov    DWORD PTR [rax],0x21
  40db83:	mov    QWORD PTR [rsp+0x30],rbx
  40db88:	lea    rdx,[rip+0xdae1]        # 0x41b670
  40db8f:	mov    QWORD PTR [rsp+0x20],rbx
  40db94:	movsd  xmm2,QWORD PTR [rsp+0x30]
  40db9a:	mov    ecx,0x1
  40db9f:	call   0x40bb10
  40dba4:	mov    QWORD PTR [rsp+0x30],rbx
  40dba9:	movsd  xmm0,QWORD PTR [rsp+0x30]
  40dbaf:	jmp    0x40db61
  40dbb1:	call   0x4160b8
  40dbb6:	movsd  xmm6,QWORD PTR [rip+0xdaba]        # 0x41b678
  40dbbe:	mov    DWORD PTR [rax],0x21
  40dbc4:	pxor   xmm3,xmm3
  40dbc8:	mov    QWORD PTR [rsp+0x30],rbx
  40dbcd:	movsd  QWORD PTR [rsp+0x20],xmm6
  40dbd3:	lea    rdx,[rip+0xda96]        # 0x41b670
  40dbda:	mov    ecx,0x1
  40dbdf:	movsd  xmm2,QWORD PTR [rsp+0x30]
  40dbe5:	call   0x40bb10
  40dbea:	movapd xmm0,xmm6
  40dbee:	jmp    0x40db61
  40dbf3:	nop
  40dbf4:	nop
  40dbf5:	nop
  40dbf6:	nop
  40dbf7:	nop
  40dbf8:	nop
  40dbf9:	nop
  40dbfa:	nop
  40dbfb:	nop
  40dbfc:	nop
  40dbfd:	nop
  40dbfe:	nop
  40dbff:	nop
  40dc00:	fld    TBYTE PTR [rdx]
  40dc02:	fsin   
  40dc04:	fnstsw ax
  40dc06:	test   eax,0x400
  40dc0b:	jne    0x40dc1b
  40dc0d:	mov    rax,rcx
  40dc10:	mov    QWORD PTR [rcx+0x8],0x0
  40dc18:	fstp   TBYTE PTR [rcx]
  40dc1a:	ret    
  40dc1b:	fldpi  
  40dc1d:	fadd   st,st(0)
  40dc1f:	fxch   st(1)
  40dc21:	fprem1 
  40dc23:	fnstsw ax
  40dc25:	test   eax,0x400
  40dc2a:	jne    0x40dc21
  40dc2c:	fstp   st(1)
  40dc2e:	fsin   
  40dc30:	mov    rax,rcx
  40dc33:	mov    QWORD PTR [rcx+0x8],0x0
  40dc3b:	fstp   TBYTE PTR [rcx]
  40dc3d:	ret    
  40dc3e:	nop
  40dc3f:	nop
  40dc40:	push   rsi
  40dc41:	push   rbx
  40dc42:	sub    rsp,0x28
  40dc46:	movsxd rax,DWORD PTR [rcx+0x14]
  40dc4a:	lea    rdx,[rcx+0x18]
  40dc4e:	mov    rbx,rcx
  40dc51:	lea    r9,[rdx+rax*4]
  40dc55:	mov    rcx,rax
  40dc58:	jmp    0x40dc70
  40dc5a:	nop    WORD PTR [rax+rax*1+0x0]
  40dc60:	add    rdx,0x4
  40dc64:	mov    DWORD PTR [rdx-0x4],0x0
  40dc6b:	cmp    r9,rdx
  40dc6e:	jbe    0x40dc90
  40dc70:	mov    r8d,DWORD PTR [rdx]
  40dc73:	cmp    r8d,0xffffffff
  40dc77:	je     0x40dc60
  40dc79:	add    r8d,0x1
  40dc7d:	mov    rax,rbx
  40dc80:	mov    DWORD PTR [rdx],r8d
  40dc83:	add    rsp,0x28
  40dc87:	pop    rbx
  40dc88:	pop    rsi
  40dc89:	ret    
  40dc8a:	nop    WORD PTR [rax+rax*1+0x0]
  40dc90:	cmp    ecx,DWORD PTR [rbx+0xc]
  40dc93:	jge    0x40dcb0
  40dc95:	add    ecx,0x1
  40dc98:	mov    DWORD PTR [rbx+0x14],ecx
  40dc9b:	mov    DWORD PTR [rbx+rax*4+0x18],0x1
  40dca3:	mov    rax,rbx
  40dca6:	add    rsp,0x28
  40dcaa:	pop    rbx
  40dcab:	pop    rsi
  40dcac:	ret    
  40dcad:	nop    DWORD PTR [rax]
  40dcb0:	mov    eax,DWORD PTR [rbx+0x8]
  40dcb3:	lea    ecx,[rax+0x1]
  40dcb6:	call   0x414c30
  40dcbb:	mov    rsi,rax
  40dcbe:	lea    rcx,[rax+0x10]
  40dcc2:	movsxd rax,DWORD PTR [rbx+0x14]
  40dcc6:	lea    rdx,[rbx+0x10]
  40dcca:	lea    r8,[rax*4+0x8]
  40dcd2:	call   0x415fe0
  40dcd7:	mov    rcx,rbx
  40dcda:	mov    rbx,rsi
  40dcdd:	call   0x414d40
  40dce2:	movsxd rax,DWORD PTR [rsi+0x14]
  40dce6:	mov    rcx,rax
  40dce9:	jmp    0x40dc95
  40dceb:	nop    DWORD PTR [rax+rax*1+0x0]
  40dcf0:	push   r15
  40dcf2:	push   r14
  40dcf4:	push   r13
  40dcf6:	push   r12
  40dcf8:	push   rbp
  40dcf9:	push   rdi
  40dcfa:	push   rsi
  40dcfb:	push   rbx
  40dcfc:	sub    rsp,0x48
  40dd00:	mov    rdi,rdx
  40dd03:	mov    r12,r8
  40dd06:	lea    rdx,[rsp+0x3c]
  40dd0b:	lea    r8,[rsp+0x38]
  40dd10:	movsd  xmm0,QWORD PTR [rcx]
  40dd14:	mov    r13,r9
  40dd17:	call   0x415510
  40dd1c:	mov    r10d,DWORD PTR [rsp+0x38]
  40dd21:	mov    esi,DWORD PTR [rdi]
  40dd23:	mov    rbx,rax
  40dd26:	mov    edx,DWORD PTR [rsp+0x3c]
  40dd2a:	sub    r10d,esi
  40dd2d:	add    edx,r10d
  40dd30:	test   r10d,r10d
  40dd33:	mov    DWORD PTR [rsp+0x38],r10d
  40dd38:	mov    DWORD PTR [rsp+0x3c],edx
  40dd3c:	jle    0x40df00
  40dd42:	cmp    esi,0x35
  40dd45:	je     0x40df30
  40dd4b:	cmp    DWORD PTR [rsp+0xb8],0x1
  40dd53:	je     0x40de04
  40dd59:	cmp    DWORD PTR [rsp+0xb8],0x2
  40dd61:	je     0x40dd90
  40dd63:	mov    eax,r10d
  40dd66:	sub    eax,0x1
  40dd69:	jne    0x40e000
  40dd6f:	mov    ecx,DWORD PTR [rsp+0xb0]
  40dd76:	xor    r15d,r15d
  40dd79:	test   ecx,ecx
  40dd7b:	je     0x40de87
  40dd81:	test   BYTE PTR [rbx+0x18],0x2
  40dd85:	je     0x40df4e
  40dd8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd90:	mov    edx,r10d
  40dd93:	mov    rcx,rbx
  40dd96:	call   0x4158d0
  40dd9b:	mov    edx,DWORD PTR [rsp+0x38]
  40dd9f:	mov    rcx,rbx
  40dda2:	mov    r14d,eax
  40dda5:	call   0x414580
  40ddaa:	mov    rcx,rbx
  40ddad:	call   0x40dc40
  40ddb2:	mov    edx,esi
  40ddb4:	mov    rbx,rax
  40ddb7:	and    edx,0x1f
  40ddba:	jne    0x40dff0
  40ddc0:	mov    eax,DWORD PTR [rbx+0x14]
  40ddc3:	sub    eax,0x1
  40ddc6:	cdqe   
  40ddc8:	bsr    eax,DWORD PTR [rbx+rax*4+0x18]
  40ddcd:	xor    eax,0x1f
  40ddd0:	cmp    edx,eax
  40ddd2:	je     0x40e080
  40ddd8:	test   r14d,r14d
  40dddb:	jne    0x40dde5
  40dddd:	mov    r14d,DWORD PTR [rbx+0x18]
  40dde1:	and    r14d,0x1
  40dde5:	mov    edx,0x1
  40ddea:	mov    rcx,rbx
  40dded:	mov    ebp,0x20
  40ddf2:	call   0x414580
  40ddf7:	mov    eax,DWORD PTR [rsp+0x3c]
  40ddfb:	lea    edx,[rax+0x1]
  40ddfe:	mov    DWORD PTR [rsp+0x3c],edx
  40de02:	jmp    0x40de2f
  40de04:	mov    edx,r10d
  40de07:	mov    rcx,rax
  40de0a:	call   0x4158d0
  40de0f:	test   eax,eax
  40de11:	mov    r14d,eax
  40de14:	jne    0x40dea3
  40de1a:	mov    edx,DWORD PTR [rsp+0x38]
  40de1e:	mov    rcx,rbx
  40de21:	xor    r14d,r14d
  40de24:	xor    ebp,ebp
  40de26:	call   0x414580
  40de2b:	mov    edx,DWORD PTR [rsp+0x3c]
  40de2f:	mov    eax,DWORD PTR [rdi+0x4]
  40de32:	cmp    eax,edx
  40de34:	jle    0x40dec0
  40de3a:	mov    r8d,eax
  40de3d:	mov    DWORD PTR [rsp+0x3c],eax
  40de41:	sub    r8d,edx
  40de44:	cmp    esi,r8d
  40de47:	jge    0x40df80
  40de4d:	mov    rdi,QWORD PTR [rsp+0xc0]
  40de55:	mov    DWORD PTR [rbx+0x14],0x0
  40de5c:	mov    edx,eax
  40de5e:	xor    ebp,ebp
  40de60:	mov    DWORD PTR [rdi],0x50
  40de66:	mov    DWORD PTR [r12],edx
  40de6a:	mov    r8,rbx
  40de6d:	mov    edx,esi
  40de6f:	mov    rcx,r13
  40de72:	mov    r15d,0x1
  40de78:	call   0x415860
  40de7d:	mov    rax,QWORD PTR [rsp+0xc0]
  40de85:	or     DWORD PTR [rax],ebp
  40de87:	mov    rcx,rbx
  40de8a:	call   0x414d40
  40de8f:	mov    eax,r15d
  40de92:	add    rsp,0x48
  40de96:	pop    rbx
  40de97:	pop    rsi
  40de98:	pop    rdi
  40de99:	pop    rbp
  40de9a:	pop    r12
  40de9c:	pop    r13
  40de9e:	pop    r14
  40dea0:	pop    r15
  40dea2:	ret    
  40dea3:	mov    edx,DWORD PTR [rsp+0x38]
  40dea7:	mov    rcx,rbx
  40deaa:	mov    ebp,0x10
  40deaf:	call   0x414580
  40deb4:	jmp    0x40de2b
  40deb9:	nop    DWORD PTR [rax+0x0]
  40dec0:	mov    eax,DWORD PTR [rdi+0x8]
  40dec3:	cmp    eax,edx
  40dec5:	jge    0x40de66
  40dec7:	add    eax,0x1
  40deca:	xor    ebp,ebp
  40decc:	mov    DWORD PTR [rsp+0x3c],eax
  40ded0:	mov    rax,QWORD PTR [rsp+0xc0]
  40ded8:	mov    DWORD PTR [rax],0xa3
  40dede:	call   0x4160b8
  40dee3:	mov    DWORD PTR [rax],0x22
  40dee9:	mov    DWORD PTR [rbx+0x14],0x0
  40def0:	mov    edx,DWORD PTR [rsp+0x3c]
  40def4:	jmp    0x40de66
  40def9:	nop    DWORD PTR [rax+0x0]
  40df00:	mov    r9d,DWORD PTR [rsp+0xb0]
  40df08:	xor    r15d,r15d
  40df0b:	test   r9d,r9d
  40df0e:	je     0x40de87
  40df14:	test   r10d,r10d
  40df17:	jne    0x40e060
  40df1d:	xor    r14d,r14d
  40df20:	xor    ebp,ebp
  40df22:	jmp    0x40de2f
  40df27:	nop    WORD PTR [rax+rax*1+0x0]
  40df30:	mov    r8d,DWORD PTR [rsp+0xb0]
  40df38:	xor    r15d,r15d
  40df3b:	test   r8d,r8d
  40df3e:	je     0x40de87
  40df44:	cmp    DWORD PTR [rdi+0xc],0x1
  40df48:	jne    0x40de87
  40df4e:	mov    edx,r10d
  40df51:	mov    rcx,rbx
  40df54:	call   0x4158d0
  40df59:	test   eax,eax
  40df5b:	mov    r14d,eax
  40df5e:	je     0x40de1a
  40df64:	mov    edx,DWORD PTR [rsp+0x38]
  40df68:	mov    rcx,rbx
  40df6b:	mov    ebp,0x10
  40df70:	call   0x414580
  40df75:	mov    edx,DWORD PTR [rsp+0x3c]
  40df79:	jmp    0x40de2f
  40df7e:	xchg   ax,ax
  40df80:	mov    edx,DWORD PTR [rdi+0x10]
  40df83:	test   edx,edx
  40df85:	jne    0x40de4d
  40df8b:	lea    edi,[r8-0x1]
  40df8f:	test   r14d,r14d
  40df92:	sete   al
  40df95:	test   edi,edi
  40df97:	jle    0x40e03c
  40df9d:	test   al,al
  40df9f:	jne    0x40e020
  40dfa1:	mov    ecx,edi
  40dfa3:	sar    edi,0x5
  40dfa6:	mov    eax,0x1
  40dfab:	movsxd rdi,edi
  40dfae:	shl    eax,cl
  40dfb0:	mov    edx,r8d
  40dfb3:	and    eax,DWORD PTR [rbx+rdi*4+0x18]
  40dfb7:	mov    rcx,rbx
  40dfba:	mov    edi,eax
  40dfbc:	call   0x414580
  40dfc1:	mov    rax,QWORD PTR [rsp+0xc0]
  40dfc9:	test   edi,edi
  40dfcb:	mov    DWORD PTR [rax],0x2
  40dfd1:	jne    0x40e090
  40dfd7:	test   r14d,r14d
  40dfda:	mov    edx,DWORD PTR [rsp+0x3c]
  40dfde:	je     0x40de66
  40dfe4:	mov    ebp,0x50
  40dfe9:	jmp    0x40de66
  40dfee:	xchg   ax,ax
  40dff0:	mov    eax,0x20
  40dff5:	sub    eax,edx
  40dff7:	mov    edx,eax
  40dff9:	jmp    0x40ddc0
  40dffe:	xchg   ax,ax
  40e000:	mov    edx,eax
  40e002:	sar    edx,0x5
  40e005:	movsxd rdx,edx
  40e008:	mov    edx,DWORD PTR [rbx+rdx*4+0x18]
  40e00c:	bt     edx,eax
  40e00f:	jb     0x40dd90
  40e015:	jmp    0x40df4e
  40e01a:	nop    WORD PTR [rax+rax*1+0x0]
  40e020:	mov    edx,edi
  40e022:	mov    rcx,rbx
  40e025:	mov    DWORD PTR [rsp+0x2c],r8d
  40e02a:	call   0x4158d0
  40e02f:	mov    r8d,DWORD PTR [rsp+0x2c]
  40e034:	test   eax,eax
  40e036:	mov    r14d,eax
  40e039:	sete   al
  40e03c:	test   al,al
  40e03e:	je     0x40dfa1
  40e044:	mov    eax,DWORD PTR [rsp+0xb0]
  40e04b:	xor    r15d,r15d
  40e04e:	test   eax,eax
  40e050:	je     0x40de87
  40e056:	jmp    0x40dfa1
  40e05b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e060:	mov    edx,r10d
  40e063:	mov    rcx,rbx
  40e066:	neg    edx
  40e068:	call   0x415140
  40e06d:	mov    edx,DWORD PTR [rsp+0x3c]
  40e071:	mov    rbx,rax
  40e074:	jmp    0x40df1d
  40e079:	nop    DWORD PTR [rax+0x0]
  40e080:	mov    edx,DWORD PTR [rsp+0x3c]
  40e084:	mov    ebp,0x20
  40e089:	jmp    0x40de2f
  40e08e:	xchg   ax,ax
  40e090:	mov    rcx,rbx
  40e093:	mov    ebp,0x60
  40e098:	call   0x40dc40
  40e09d:	mov    edx,DWORD PTR [rsp+0x3c]
  40e0a1:	mov    rbx,rax
  40e0a4:	jmp    0x40de66
  40e0a9:	nop    DWORD PTR [rax+0x0]
  40e0b0:	movsxd rdx,DWORD PTR [rcx+0x14]
  40e0b4:	lea    rax,[rcx+0x18]
  40e0b8:	lea    rcx,[rax+rdx*4]
  40e0bc:	jmp    0x40e0d0
  40e0be:	xchg   ax,ax
  40e0c0:	add    rax,0x4
  40e0c4:	mov    DWORD PTR [rax-0x4],0xffffffff
  40e0cb:	cmp    rcx,rax
  40e0ce:	jbe    0x40e0e0
  40e0d0:	mov    edx,DWORD PTR [rax]
  40e0d2:	test   edx,edx
  40e0d4:	je     0x40e0c0
  40e0d6:	sub    edx,0x1
  40e0d9:	mov    DWORD PTR [rax],edx
  40e0db:	ret    
  40e0dc:	nop    DWORD PTR [rax+0x0]
  40e0e0:	repz ret 
  40e0e2:	nop    DWORD PTR [rax+0x0]
  40e0e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e0f0:	push   rbx
  40e0f1:	sub    rsp,0x30
  40e0f5:	lea    ebx,[rdx+0x1f]
  40e0f8:	mov    rax,rcx
  40e0fb:	sar    ebx,0x5
  40e0fe:	cmp    ebx,DWORD PTR [rcx+0x8]
  40e101:	jg     0x40e180
  40e103:	mov    r9d,edx
  40e106:	sar    r9d,0x5
  40e10a:	and    edx,0x1f
  40e10d:	je     0x40e160
  40e10f:	add    r9d,0x1
  40e113:	lea    r8,[rax+0x18]
  40e117:	mov    DWORD PTR [rax+0x14],r9d
  40e11b:	movsxd r9,r9d
  40e11e:	lea    r9,[r8+r9*4]
  40e122:	cmp    r8,r9
  40e125:	jae    0x40e145
  40e127:	nop    WORD PTR [rax+rax*1+0x0]
  40e130:	add    r8,0x4
  40e134:	mov    DWORD PTR [r8-0x4],0xffffffff
  40e13c:	cmp    r8,r9
  40e13f:	jb     0x40e130
  40e141:	test   edx,edx
  40e143:	je     0x40e150
  40e145:	mov    ecx,0x20
  40e14a:	sub    ecx,edx
  40e14c:	shr    DWORD PTR [r8-0x4],cl
  40e150:	add    rsp,0x30
  40e154:	pop    rbx
  40e155:	ret    
  40e156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e160:	lea    r8,[rax+0x18]
  40e164:	mov    DWORD PTR [rax+0x14],r9d
  40e168:	movsxd r9,r9d
  40e16b:	lea    r9,[r8+r9*4]
  40e16f:	cmp    r8,r9
  40e172:	jb     0x40e130
  40e174:	jmp    0x40e150
  40e176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e180:	mov    DWORD PTR [rsp+0x2c],edx
  40e184:	call   0x414d40
  40e189:	mov    ecx,ebx
  40e18b:	call   0x414c30
  40e190:	mov    edx,DWORD PTR [rsp+0x2c]
  40e194:	jmp    0x40e103
  40e199:	nop    DWORD PTR [rax+0x0]
  40e1a0:	push   r15
  40e1a2:	push   r14
  40e1a4:	push   r13
  40e1a6:	push   r12
  40e1a8:	push   rbp
  40e1a9:	push   rdi
  40e1aa:	push   rsi
  40e1ab:	push   rbx
  40e1ac:	sub    rsp,0x138
  40e1b3:	movaps XMMWORD PTR [rsp+0xd0],xmm6
  40e1bb:	movaps XMMWORD PTR [rsp+0xe0],xmm7
  40e1c3:	movaps XMMWORD PTR [rsp+0xf0],xmm8
  40e1cc:	movaps XMMWORD PTR [rsp+0x100],xmm9
  40e1d5:	movaps XMMWORD PTR [rsp+0x110],xmm10
  40e1de:	movaps XMMWORD PTR [rsp+0x120],xmm11
  40e1e7:	mov    rdi,rcx
  40e1ea:	mov    QWORD PTR [rsp+0x190],r8
  40e1f2:	mov    QWORD PTR [rsp+0x188],rdx
  40e1fa:	mov    QWORD PTR [rsp+0x198],r9
  40e202:	call   0x415ff8
  40e207:	mov    rbp,QWORD PTR [rax]
  40e20a:	mov    rcx,rbp
  40e20d:	call   0x415f68
  40e212:	mov    r14,rax
  40e215:	mov    rax,QWORD PTR [rsp+0x190]
  40e21d:	mov    DWORD PTR [rsp+0xa4],0x0
  40e228:	mov    QWORD PTR [rsp+0xb0],0x0
  40e234:	mov    QWORD PTR [rsp+0xc8],0x0
  40e240:	lea    rcx,[rip+0xd445]        # 0x41b68c
  40e247:	mov    QWORD PTR [rsp+0xc0],rdi
  40e24f:	mov    eax,DWORD PTR [rax]
  40e251:	mov    DWORD PTR [rsp+0x40],eax
  40e255:	mov    rax,rdi
  40e258:	movzx  r8d,BYTE PTR [rax]
  40e25c:	cmp    r8b,0x2d
  40e260:	ja     0x40e410
  40e266:	movzx  edx,r8b
  40e26a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  40e26e:	add    rdx,rcx
  40e271:	jmp    rdx
  40e273:	mov    DWORD PTR [rsp+0xa4],0x6
  40e27e:	mov    QWORD PTR [rsp+0xc0],rdi
  40e286:	xor    r8d,r8d
  40e289:	mov    DWORD PTR [rsp+0x58],0x0
  40e291:	cmp    QWORD PTR [rsp+0x188],0x0
  40e29a:	je     0x40e2af
  40e29c:	mov    rax,QWORD PTR [rsp+0xc0]
  40e2a4:	mov    rsi,QWORD PTR [rsp+0x188]
  40e2ac:	mov    QWORD PTR [rsi],rax
  40e2af:	mov    eax,DWORD PTR [rsp+0x58]
  40e2b3:	test   eax,eax
  40e2b5:	jne    0x40e330
  40e2b7:	test   r8,r8
  40e2ba:	je     0x40e2da
  40e2bc:	mov    rcx,QWORD PTR [rsp+0x1a0]
  40e2c4:	mov    edx,DWORD PTR [rsp+0x40]
  40e2c8:	call   0x415860
  40e2cd:	mov    rcx,QWORD PTR [rsp+0xc8]
  40e2d5:	call   0x414d40
  40e2da:	mov    eax,DWORD PTR [rsp+0xa4]
  40e2e1:	movaps xmm6,XMMWORD PTR [rsp+0xd0]
  40e2e9:	movaps xmm7,XMMWORD PTR [rsp+0xe0]
  40e2f1:	movaps xmm8,XMMWORD PTR [rsp+0xf0]
  40e2fa:	movaps xmm9,XMMWORD PTR [rsp+0x100]
  40e303:	movaps xmm10,XMMWORD PTR [rsp+0x110]
  40e30c:	movaps xmm11,XMMWORD PTR [rsp+0x120]
  40e315:	add    rsp,0x138
  40e31c:	pop    rbx
  40e31d:	pop    rsi
  40e31e:	pop    rdi
  40e31f:	pop    rbp
  40e320:	pop    r12
  40e322:	pop    r13
  40e324:	pop    r14
  40e326:	pop    r15
  40e328:	ret    
  40e329:	nop    DWORD PTR [rax+0x0]
  40e330:	or     DWORD PTR [rsp+0xa4],0x8
  40e338:	jmp    0x40e2b7
  40e33d:	nop    DWORD PTR [rax]
  40e340:	mov    rdx,rax
  40e343:	mov    DWORD PTR [rsp+0x58],0x0
  40e34b:	add    rax,0x1
  40e34f:	mov    QWORD PTR [rsp+0xc0],rax
  40e357:	movzx  r8d,BYTE PTR [rdx+0x1]
  40e35c:	test   r8b,r8b
  40e35f:	je     0x40e273
  40e365:	xor    r12d,r12d
  40e368:	cmp    r8b,0x30
  40e36c:	mov    r15,rax
  40e36f:	je     0x40e428
  40e375:	mov    rax,QWORD PTR [rsp+0x190]
  40e37d:	mov    eax,DWORD PTR [rax+0x10]
  40e380:	mov    DWORD PTR [rsp+0x84],eax
  40e387:	movsx  eax,r8b
  40e38b:	lea    edx,[rax-0x30]
  40e38e:	cmp    edx,0x9
  40e391:	ja     0x40e483
  40e397:	lea    rcx,[r15+0x1]
  40e39b:	xor    edx,edx
  40e39d:	xor    esi,esi
  40e39f:	xor    ebx,ebx
  40e3a1:	jmp    0x40e3d5
  40e3a3:	lea    eax,[rsi+rsi*4]
  40e3a6:	movsx  r8d,r8b
  40e3aa:	lea    esi,[r8+rax*2-0x30]
  40e3af:	mov    QWORD PTR [rsp+0xc0],rcx
  40e3b7:	movsx  eax,BYTE PTR [rcx]
  40e3ba:	add    ebx,0x1
  40e3bd:	mov    r9,rcx
  40e3c0:	lea    rcx,[rcx+0x1]
  40e3c4:	lea    r10d,[rax-0x30]
  40e3c8:	mov    r8d,eax
  40e3cb:	cmp    r10d,0x9
  40e3cf:	ja     0x40e490
  40e3d5:	cmp    ebx,0x8
  40e3d8:	jle    0x40e3a3
  40e3da:	cmp    ebx,0xf
  40e3dd:	jg     0x40e3af
  40e3df:	lea    eax,[rdx+rdx*4]
  40e3e2:	movsx  r8d,r8b
  40e3e6:	lea    edx,[r8+rax*2-0x30]
  40e3eb:	jmp    0x40e3af
  40e3ed:	nop    DWORD PTR [rax]
  40e3f0:	add    rax,0x1
  40e3f4:	mov    QWORD PTR [rsp+0xc0],rax
  40e3fc:	movzx  r8d,BYTE PTR [rax]
  40e400:	cmp    r8b,0x2d
  40e404:	jbe    0x40e266
  40e40a:	nop    WORD PTR [rax+rax*1+0x0]
  40e410:	xor    r12d,r12d
  40e413:	cmp    r8b,0x30
  40e417:	mov    DWORD PTR [rsp+0x58],0x0
  40e41f:	mov    r15,rax
  40e422:	jne    0x40e375
  40e428:	movzx  edx,BYTE PTR [rax+0x1]
  40e42c:	cmp    dl,0x58
  40e42f:	je     0x40f5ef
  40e435:	add    rax,0x1
  40e439:	cmp    dl,0x78
  40e43c:	je     0x40f5ef
  40e442:	mov    r15,rax
  40e445:	mov    QWORD PTR [rsp+0xc0],rax
  40e44d:	add    rax,0x1
  40e451:	movzx  edx,BYTE PTR [rax-0x1]
  40e455:	cmp    dl,0x30
  40e458:	je     0x40e442
  40e45a:	xor    r8d,r8d
  40e45d:	test   dl,dl
  40e45f:	je     0x40e291
  40e465:	mov    r8d,edx
  40e468:	mov    r12d,0x1
  40e46e:	jmp    0x40e375
  40e473:	mov    rdx,rax
  40e476:	mov    DWORD PTR [rsp+0x58],0x1
  40e47e:	jmp    0x40e34b
  40e483:	mov    r9,r15
  40e486:	xor    edx,edx
  40e488:	xor    esi,esi
  40e48a:	xor    ebx,ebx
  40e48c:	nop    DWORD PTR [rax+0x0]
  40e490:	movsx  ecx,BYTE PTR [rbp+0x0]
  40e494:	cmp    ecx,eax
  40e496:	je     0x40e894
  40e49c:	mov    ebp,ebx
  40e49e:	xor    ecx,ecx
  40e4a0:	xor    r13d,r13d
  40e4a3:	xor    r11d,r11d
  40e4a6:	mov    r8d,eax
  40e4a9:	and    r8d,0xffffffdf
  40e4ad:	cmp    r8d,0x45
  40e4b1:	je     0x40e5b0
  40e4b7:	xor    r8d,r8d
  40e4ba:	test   ebp,ebp
  40e4bc:	jne    0x40e725
  40e4c2:	or     ecx,r12d
  40e4c5:	jne    0x40e718
  40e4cb:	test   r11d,r11d
  40e4ce:	jne    0x40e6e3
  40e4d4:	cmp    eax,0x4e
  40e4d7:	je     0x40e4f1
  40e4d9:	jle    0x40e6da
  40e4df:	cmp    eax,0x69
  40e4e2:	je     0x40f87a
  40e4e8:	cmp    eax,0x6e
  40e4eb:	jne    0x40e6e3
  40e4f1:	lea    rbx,[rsp+0xc0]
  40e4f9:	lea    rdx,[rip+0xd189]        # 0x41b689
  40e500:	mov    rcx,rbx
  40e503:	call   0x415810
  40e508:	test   eax,eax
  40e50a:	je     0x40e6e3
  40e510:	mov    rax,QWORD PTR [rsp+0x190]
  40e518:	mov    rsi,QWORD PTR [rsp+0x198]
  40e520:	xor    ebp,ebp
  40e522:	mov    rdx,QWORD PTR [rsp+0xc0]
  40e52a:	mov    DWORD PTR [rsp+0xa4],0x4
  40e535:	mov    eax,DWORD PTR [rax+0x8]
  40e538:	mov    DWORD PTR [rsp+0x44],eax
  40e53c:	add    eax,0x1
  40e53f:	mov    DWORD PTR [rsi],eax
  40e541:	cmp    BYTE PTR [rdx],0x28
  40e544:	je     0x40fc56
  40e54a:	nop    WORD PTR [rax+rax*1+0x0]
  40e550:	mov    rsi,QWORD PTR [rsp+0x198]
  40e558:	mov    DWORD PTR [rsi],eax
  40e55a:	mov    r8,QWORD PTR [rsp+0xc8]
  40e562:	test   ebp,ebp
  40e564:	je     0x40e291
  40e56a:	mov    r9d,DWORD PTR [rsp+0x84]
  40e572:	test   r9d,r9d
  40e575:	jne    0x40eca4
  40e57b:	mov    eax,DWORD PTR [rsp+0xa4]
  40e582:	mov    ecx,DWORD PTR [r8+0x14]
  40e586:	xor    edx,edx
  40e588:	and    eax,0xfffffff8
  40e58b:	test   ecx,ecx
  40e58d:	setg   dl
  40e590:	add    edx,edx
  40e592:	or     eax,edx
  40e594:	test   al,0x30
  40e596:	jne    0x40e703
  40e59c:	mov    DWORD PTR [rsp+0xa4],eax
  40e5a3:	jmp    0x40e291
  40e5a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5b0:	mov    eax,ebp
  40e5b2:	or     eax,ecx
  40e5b4:	or     eax,r12d
  40e5b7:	je     0x40e6e3
  40e5bd:	mov    rdi,QWORD PTR [rsp+0xc0]
  40e5c5:	lea    rax,[rdi+0x1]
  40e5c9:	mov    QWORD PTR [rsp+0xc0],rax
  40e5d1:	movsx  eax,BYTE PTR [rdi+0x1]
  40e5d5:	cmp    al,0x2b
  40e5d7:	je     0x40f798
  40e5dd:	cmp    al,0x2d
  40e5df:	je     0x40eba1
  40e5e5:	mov    DWORD PTR [rsp+0x44],0x0
  40e5ed:	lea    r8d,[rax-0x30]
  40e5f1:	cmp    r8d,0x9
  40e5f5:	ja     0x40ecd0
  40e5fb:	cmp    eax,0x30
  40e5fe:	jne    0x40e625
  40e600:	mov    rax,QWORD PTR [rsp+0xc0]
  40e608:	lea    r8,[rax+0x1]
  40e60c:	nop    DWORD PTR [rax+0x0]
  40e610:	mov    QWORD PTR [rsp+0xc0],r8
  40e618:	movsx  eax,BYTE PTR [r8]
  40e61c:	add    r8,0x1
  40e620:	cmp    eax,0x30
  40e623:	je     0x40e610
  40e625:	lea    r9d,[rax-0x31]
  40e629:	xor    r8d,r8d
  40e62c:	cmp    r9d,0x8
  40e630:	ja     0x40e4ba
  40e636:	lea    r9d,[rax-0x30]
  40e63a:	mov    rax,QWORD PTR [rsp+0xc0]
  40e642:	lea    r10,[rax+0x1]
  40e646:	mov    QWORD PTR [rsp+0x50],rax
  40e64b:	mov    QWORD PTR [rsp+0xc0],r10
  40e653:	mov    QWORD PTR [rsp+0x48],r10
  40e658:	mov    r10,rax
  40e65b:	movsx  eax,BYTE PTR [rax+0x1]
  40e65f:	lea    r8d,[rax-0x30]
  40e663:	cmp    r8d,0x9
  40e667:	ja     0x40e6a3
  40e669:	lea    r8,[r10+0x2]
  40e66d:	mov    DWORD PTR [rsp+0x5c],r11d
  40e672:	lea    r9d,[r9+r9*4]
  40e676:	mov    QWORD PTR [rsp+0xc0],r8
  40e67e:	mov    r11,r8
  40e681:	add    r8,0x1
  40e685:	lea    r9d,[rax+r9*2-0x30]
  40e68a:	movsx  eax,BYTE PTR [r8-0x1]
  40e68f:	lea    r10d,[rax-0x30]
  40e693:	cmp    r10d,0x9
  40e697:	jbe    0x40e672
  40e699:	mov    QWORD PTR [rsp+0x48],r11
  40e69e:	mov    r11d,DWORD PTR [rsp+0x5c]
  40e6a3:	mov    r8,QWORD PTR [rsp+0x48]
  40e6a8:	sub    r8,QWORD PTR [rsp+0x50]
  40e6ad:	cmp    r8,0x8
  40e6b1:	jg     0x40f86f
  40e6b7:	cmp    r9d,0x4e1f
  40e6be:	jg     0x40f86f
  40e6c4:	mov    r10d,DWORD PTR [rsp+0x44]
  40e6c9:	mov    r8d,r10d
  40e6cc:	neg    r8d
  40e6cf:	xor    r8d,r9d
  40e6d2:	add    r8d,r10d
  40e6d5:	jmp    0x40e4ba
  40e6da:	cmp    eax,0x49
  40e6dd:	je     0x40f87a
  40e6e3:	mov    DWORD PTR [rsp+0xa4],0x6
  40e6ee:	mov    QWORD PTR [rsp+0xc0],rdi
  40e6f6:	mov    r8,QWORD PTR [rsp+0xc8]
  40e6fe:	jmp    0x40e291
  40e703:	or     eax,0x40
  40e706:	mov    DWORD PTR [rsp+0xa4],eax
  40e70d:	call   0x4160b8
  40e712:	mov    DWORD PTR [rax],0x22
  40e718:	mov    r8,QWORD PTR [rsp+0xc8]
  40e720:	jmp    0x40e291
  40e725:	mov    rax,QWORD PTR [rsp+0x190]
  40e72d:	mov    ecx,DWORD PTR [rsp+0x58]
  40e731:	sub    r8d,r13d
  40e734:	mov    DWORD PTR [rsp+0xa4],0x1
  40e73f:	mov    DWORD PTR [rsp+0x68],r8d
  40e744:	mov    eax,DWORD PTR [rax+0xc]
  40e747:	mov    DWORD PTR [rsp+0x44],eax
  40e74b:	and    eax,0x3
  40e74e:	mov    edi,eax
  40e750:	sub    edi,ecx
  40e752:	cmp    eax,0x2
  40e755:	mov    DWORD PTR [rsp+0x6c],edi
  40e759:	je     0x40e773
  40e75b:	lea    edi,[rcx+0x1]
  40e75e:	cmp    eax,0x3
  40e761:	mov    DWORD PTR [rsp+0x6c],edi
  40e765:	je     0x40e773
  40e767:	test   eax,eax
  40e769:	sete   al
  40e76c:	movzx  eax,al
  40e76f:	mov    DWORD PTR [rsp+0x6c],eax
  40e773:	pxor   xmm0,xmm0
  40e777:	mov    eax,esi
  40e779:	test   ebx,ebx
  40e77b:	cmove  ebx,ebp
  40e77e:	mov    edi,0x10
  40e783:	cmp    ebp,0x10
  40e786:	cmovle edi,ebp
  40e789:	cvtsi2sd xmm0,rax
  40e78e:	cmp    edi,0x9
  40e791:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40e79a:	jle    0x40e7c3
  40e79c:	pxor   xmm1,xmm1
  40e7a0:	lea    eax,[rdi-0x9]
  40e7a3:	mov    rcx,QWORD PTR [rip+0xd656]        # 0x41be00
  40e7aa:	cdqe   
  40e7ac:	cvtsi2sd xmm1,rdx
  40e7b1:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  40e7b6:	addsd  xmm0,xmm1
  40e7ba:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40e7c3:	cmp    ebp,0xf
  40e7c6:	jg     0x40e935
  40e7cc:	cmp    DWORD PTR [rsp+0x40],0x35
  40e7d1:	jg     0x40e935
  40e7d7:	cmp    DWORD PTR [rsp+0x68],0x0
  40e7dc:	je     0x40f7c0
  40e7e2:	jle    0x40ec49
  40e7e8:	cmp    DWORD PTR [rsp+0x68],0x16
  40e7ed:	jg     0x40f7ea
  40e7f3:	movsxd rcx,DWORD PTR [rsp+0x68]
  40e7f8:	mov    edx,DWORD PTR [rsp+0xb0]
  40e7ff:	lea    rax,[rip+0xcf7a]        # 0x41b780
  40e806:	test   edx,edx
  40e808:	mov    r8d,DWORD PTR [rax+rcx*4]
  40e80c:	je     0x40f8de
  40e812:	tzcnt  edx,edx
  40e816:	mov    eax,0x35
  40e81b:	sub    eax,edx
  40e81d:	mov    rdx,QWORD PTR [rip+0xd5dc]        # 0x41be00
  40e824:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40e82d:	add    eax,r8d
  40e830:	cmp    eax,0x35
  40e833:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  40e838:	lea    rdx,[rsp+0xa4]
  40e840:	setle  al
  40e843:	movzx  eax,al
  40e846:	lea    rcx,[rsp+0xb0]
  40e84e:	mov    QWORD PTR [rsp+0x30],rdx
  40e853:	mov    edx,DWORD PTR [rsp+0x6c]
  40e857:	mov    DWORD PTR [rsp+0x20],eax
  40e85b:	mov    DWORD PTR [rsp+0x28],edx
  40e85f:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40e868:	mov    r9,QWORD PTR [rsp+0x1a0]
  40e870:	mov    r8,QWORD PTR [rsp+0x198]
  40e878:	mov    rdx,QWORD PTR [rsp+0x190]
  40e880:	call   0x40dcf0
  40e885:	test   eax,eax
  40e887:	jne    0x40e718
  40e88d:	xor    eax,eax
  40e88f:	jmp    0x40e939
  40e894:	movzx  r8d,BYTE PTR [rbp+0x1]
  40e899:	test   r8b,r8b
  40e89c:	je     0x40fb1d
  40e8a2:	cmp    r8b,BYTE PTR [r9+0x1]
  40e8a6:	jne    0x40e49c
  40e8ac:	mov    eax,0x2
  40e8b1:	jmp    0x40e8c2
  40e8b3:	add    rax,0x1
  40e8b7:	cmp    r8b,BYTE PTR [r9+rax*1-0x1]
  40e8bc:	jne    0x40eac0
  40e8c2:	movzx  r8d,BYTE PTR [rbp+rax*1+0x0]
  40e8c8:	test   r8b,r8b
  40e8cb:	jne    0x40e8b3
  40e8cd:	lea    r8,[r9+rax*1]
  40e8d1:	test   ebx,ebx
  40e8d3:	mov    QWORD PTR [rsp+0xc0],r8
  40e8db:	movsx  eax,BYTE PTR [r8]
  40e8df:	je     0x40ebbe
  40e8e5:	lea    r8d,[rax-0x30]
  40e8e9:	xor    ecx,ecx
  40e8eb:	xor    r13d,r13d
  40e8ee:	mov    ebp,ebx
  40e8f0:	cmp    r8d,0x9
  40e8f4:	ja     0x40e92a
  40e8f6:	test   r8d,r8d
  40e8f9:	lea    eax,[rcx+0x1]
  40e8fc:	mov    r9d,r8d
  40e8ff:	jne    0x40fa9d
  40e905:	mov    r8,QWORD PTR [rsp+0xc0]
  40e90d:	mov    ecx,eax
  40e90f:	lea    rax,[r8+0x1]
  40e913:	mov    QWORD PTR [rsp+0xc0],rax
  40e91b:	movsx  eax,BYTE PTR [r8+0x1]
  40e920:	lea    r8d,[rax-0x30]
  40e924:	cmp    r8d,0x9
  40e928:	jbe    0x40e8f6
  40e92a:	mov    r11d,0x1
  40e930:	jmp    0x40e4a6
  40e935:	mov    eax,DWORD PTR [rsp+0x68]
  40e939:	mov    edx,ebp
  40e93b:	sub    edx,edi
  40e93d:	add    edx,eax
  40e93f:	cmp    edx,0x0
  40e942:	jle    0x40f67a
  40e948:	mov    eax,edx
  40e94a:	and    eax,0xf
  40e94d:	je     0x40e96f
  40e94f:	mov    rcx,QWORD PTR [rip+0xd4aa]        # 0x41be00
  40e956:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40e95f:	cdqe   
  40e961:	mulsd  xmm0,QWORD PTR [rcx+rax*8]
  40e966:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40e96f:	and    edx,0xfffffff0
  40e972:	jne    0x40ead1
  40e978:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40e981:	xor    edi,edi
  40e983:	lea    rdx,[rsp+0xac]
  40e98b:	lea    r8,[rsp+0xa8]
  40e993:	call   0x415510
  40e998:	mov    edx,DWORD PTR [rsp+0xa8]
  40e99f:	mov    r13d,DWORD PTR [rsp+0x40]
  40e9a4:	add    edi,DWORD PTR [rsp+0xac]
  40e9ab:	mov    QWORD PTR [rsp+0xc8],rax
  40e9b3:	mov    r12d,edx
  40e9b6:	sub    r12d,r13d
  40e9b9:	test   r12d,r12d
  40e9bc:	mov    DWORD PTR [rsp+0xac],edi
  40e9c3:	jle    0x40e9ec
  40e9c5:	mov    edx,r12d
  40e9c8:	mov    rcx,rax
  40e9cb:	call   0x414580
  40e9d0:	mov    edi,DWORD PTR [rsp+0xac]
  40e9d7:	mov    DWORD PTR [rsp+0xa8],r13d
  40e9df:	mov    edx,r13d
  40e9e2:	add    edi,r12d
  40e9e5:	mov    DWORD PTR [rsp+0xac],edi
  40e9ec:	lea    eax,[rdi+rdx*1]
  40e9ef:	sub    eax,DWORD PTR [rsp+0x40]
  40e9f3:	mov    ecx,eax
  40e9f5:	mov    DWORD PTR [rsp+0x8c],eax
  40e9fc:	mov    rax,QWORD PTR [rsp+0x190]
  40ea04:	mov    eax,DWORD PTR [rax+0x8]
  40ea07:	mov    DWORD PTR [rsp+0x44],eax
  40ea0b:	add    eax,0x1
  40ea0e:	cmp    ecx,eax
  40ea10:	jg     0x40f5b5
  40ea16:	mov    rax,QWORD PTR [rsp+0x190]
  40ea1e:	mov    eax,DWORD PTR [rax+0x4]
  40ea21:	cmp    ecx,eax
  40ea23:	mov    DWORD PTR [rsp+0x50],eax
  40ea27:	jge    0x40f7b3
  40ea2d:	sub    edi,eax
  40ea2f:	cmp    edi,0x0
  40ea32:	jle    0x40ec1c
  40ea38:	mov    rcx,QWORD PTR [rsp+0xc8]
  40ea40:	mov    edx,edi
  40ea42:	call   0x415140
  40ea47:	add    DWORD PTR [rsp+0xa8],edi
  40ea4e:	mov    QWORD PTR [rsp+0xc8],rax
  40ea56:	mov    eax,DWORD PTR [rsp+0x50]
  40ea5a:	mov    DWORD PTR [rsp+0xac],eax
  40ea61:	mov    eax,DWORD PTR [rsp+0x84]
  40ea68:	test   eax,eax
  40ea6a:	je     0x40ece0
  40ea70:	mov    eax,DWORD PTR [rsp+0x8c]
  40ea77:	add    eax,0x1
  40ea7a:	cmp    DWORD PTR [rsp+0x50],eax
  40ea7e:	jle    0x40ece0
  40ea84:	mov    r8,QWORD PTR [rsp+0xc8]
  40ea8c:	mov    rax,QWORD PTR [rsp+0x198]
  40ea94:	mov    esi,DWORD PTR [rsp+0x50]
  40ea98:	mov    DWORD PTR [rsp+0xa4],0x50
  40eaa3:	mov    DWORD PTR [r8+0x14],0x0
  40eaab:	mov    DWORD PTR [r8+0x18],0x0
  40eab3:	mov    DWORD PTR [rax],esi
  40eab5:	jmp    0x40e56a
  40eaba:	nop    WORD PTR [rax+rax*1+0x0]
  40eac0:	mov    eax,ecx
  40eac2:	mov    ebp,ebx
  40eac4:	xor    ecx,ecx
  40eac6:	xor    r13d,r13d
  40eac9:	xor    r11d,r11d
  40eacc:	jmp    0x40e4a6
  40ead1:	sar    edx,0x4
  40ead4:	cmp    edx,0xf
  40ead7:	jle    0x40fba3
  40eadd:	mov    rax,QWORD PTR [rip+0xd23c]        # 0x41bd20
  40eae4:	mov    ecx,edx
  40eae6:	xor    r8d,r8d
  40eae9:	movsd  xmm1,QWORD PTR [rax+0x20]
  40eaee:	xchg   ax,ax
  40eaf0:	mov    eax,DWORD PTR [rsp+0xb4]
  40eaf7:	sub    ecx,0x10
  40eafa:	mov    r9d,eax
  40eafd:	and    eax,0x800fffff
  40eb02:	or     eax,0x3ff00000
  40eb07:	and    r9d,0x7ff00000
  40eb0e:	mov    DWORD PTR [rsp+0xb4],eax
  40eb15:	shr    r9d,0x14
  40eb19:	cmp    ecx,0xf
  40eb1c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40eb25:	lea    r8d,[r8+r9*1-0x3ff]
  40eb2d:	mulsd  xmm0,xmm1
  40eb31:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40eb3a:	jg     0x40eaf0
  40eb3c:	and    edx,0xf
  40eb3f:	mov    eax,DWORD PTR [rsp+0xb4]
  40eb46:	mov    ecx,eax
  40eb48:	and    eax,0x800fffff
  40eb4d:	or     eax,0x3ff00000
  40eb52:	and    ecx,0x7ff00000
  40eb58:	shr    ecx,0x14
  40eb5b:	mov    DWORD PTR [rsp+0xb4],eax
  40eb62:	test   edx,edx
  40eb64:	lea    edi,[r8+rcx*1-0x3ff]
  40eb6c:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40eb75:	mov    rax,QWORD PTR [rip+0xd1a4]        # 0x41bd20
  40eb7c:	je     0x40e983
  40eb82:	test   dl,0x1
  40eb85:	je     0x40eb8b
  40eb87:	mulsd  xmm0,QWORD PTR [rax]
  40eb8b:	add    rax,0x8
  40eb8f:	sar    edx,1
  40eb91:	jne    0x40eb82
  40eb93:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40eb9c:	jmp    0x40e983
  40eba1:	mov    DWORD PTR [rsp+0x44],0x1
  40eba9:	lea    rax,[rdi+0x2]
  40ebad:	mov    QWORD PTR [rsp+0xc0],rax
  40ebb5:	movsx  eax,BYTE PTR [rdi+0x2]
  40ebb9:	jmp    0x40e5ed
  40ebbe:	cmp    eax,0x30
  40ebc1:	jne    0x40fc05
  40ebc7:	add    r8,0x1
  40ebcb:	xor    ecx,ecx
  40ebcd:	nop    DWORD PTR [rax]
  40ebd0:	mov    QWORD PTR [rsp+0xc0],r8
  40ebd8:	movsx  eax,BYTE PTR [r8]
  40ebdc:	add    ecx,0x1
  40ebdf:	add    r8,0x1
  40ebe3:	cmp    eax,0x30
  40ebe6:	je     0x40ebd0
  40ebe8:	lea    r8d,[rax-0x31]
  40ebec:	cmp    r8d,0x8
  40ebf0:	ja     0x40f865
  40ebf6:	mov    r15,QWORD PTR [rsp+0xc0]
  40ebfe:	lea    r9d,[rax-0x30]
  40ec02:	lea    r13d,[rcx+0x1]
  40ec06:	mov    ebp,0x1
  40ec0b:	mov    r8,r15
  40ec0e:	lea    eax,[rsi+rsi*4]
  40ec11:	xor    ecx,ecx
  40ec13:	lea    esi,[r9+rax*2]
  40ec17:	jmp    0x40e90f
  40ec1c:	je     0x40ea56
  40ec22:	add    edx,edi
  40ec24:	test   edx,edx
  40ec26:	mov    DWORD PTR [rsp+0xa8],edx
  40ec2d:	jle    0x40fbc6
  40ec33:	mov    rcx,QWORD PTR [rsp+0xc8]
  40ec3b:	neg    edi
  40ec3d:	mov    edx,edi
  40ec3f:	call   0x414580
  40ec44:	jmp    0x40ea56
  40ec49:	mov    edx,DWORD PTR [rsp+0x68]
  40ec4d:	cmp    edx,0xffffffea
  40ec50:	mov    eax,edx
  40ec52:	jl     0x40e939
  40ec58:	mov    rdx,QWORD PTR [rip+0xd1a1]        # 0x41be00
  40ec5f:	neg    eax
  40ec61:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40ec6a:	cdqe   
  40ec6c:	divsd  xmm0,QWORD PTR [rdx+rax*8]
  40ec71:	lea    rax,[rsp+0xa4]
  40ec79:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40ec82:	lea    rcx,[rsp+0xb0]
  40ec8a:	mov    DWORD PTR [rsp+0x20],0x0
  40ec92:	mov    QWORD PTR [rsp+0x30],rax
  40ec97:	mov    eax,DWORD PTR [rsp+0x6c]
  40ec9b:	mov    DWORD PTR [rsp+0x28],eax
  40ec9f:	jmp    0x40e868
  40eca4:	mov    DWORD PTR [r8+0x14],0x0
  40ecac:	mov    DWORD PTR [rsp+0xa4],0x50
  40ecb7:	call   0x4160b8
  40ecbc:	mov    r8,QWORD PTR [rsp+0xc8]
  40ecc4:	mov    DWORD PTR [rax],0x22
  40ecca:	jmp    0x40e291
  40eccf:	nop
  40ecd0:	mov    QWORD PTR [rsp+0xc0],rdi
  40ecd8:	xor    r8d,r8d
  40ecdb:	jmp    0x40e4ba
  40ece0:	mov    eax,DWORD PTR [rsp+0x50]
  40ece4:	mov    DWORD PTR [rsp+0x44],0x1
  40ecec:	mov    DWORD PTR [rsp+0x8c],eax
  40ecf3:	mov    r8d,ebp
  40ecf6:	mov    edx,ebx
  40ecf8:	mov    DWORD PTR [rsp+0x20],r14d
  40ecfd:	mov    r9d,esi
  40ed00:	mov    rcx,r15
  40ed03:	call   0x415650
  40ed08:	mov    QWORD PTR [rsp+0x70],rax
  40ed0d:	add    rax,0x10
  40ed11:	mov    QWORD PTR [rsp+0x78],rax
  40ed16:	mov    eax,DWORD PTR [rsp+0x40]
  40ed1a:	movsd  xmm8,QWORD PTR [rip+0xcabd]        # 0x41b7e0
  40ed23:	movsd  xmm9,QWORD PTR [rip+0xcac4]        # 0x41b7f0
  40ed2c:	add    eax,0x1
  40ed2f:	movapd xmm11,xmm8
  40ed34:	mov    DWORD PTR [rsp+0x80],eax
  40ed3b:	mov    eax,DWORD PTR [rsp+0x68]
  40ed3f:	movsd  xmm10,QWORD PTR [rip+0xcac8]        # 0x41b810
  40ed48:	mov    edx,eax
  40ed4a:	neg    edx
  40ed4c:	test   eax,eax
  40ed4e:	mov    eax,0x0
  40ed53:	cmovs  eax,edx
  40ed56:	xor    ebp,ebp
  40ed58:	mov    DWORD PTR [rsp+0x5c],eax
  40ed5c:	jmp    0x40efa0
  40ed61:	mov    rcx,rsi
  40ed64:	call   0x415140
  40ed69:	mov    rsi,rax
  40ed6c:	test   r15d,r15d
  40ed6f:	je     0x40ed7f
  40ed71:	mov    rcx,rdi
  40ed74:	mov    edx,r15d
  40ed77:	call   0x414fd0
  40ed7c:	mov    rdi,rax
  40ed7f:	test   r12d,r12d
  40ed82:	jle    0x40ed92
  40ed84:	mov    rcx,rdi
  40ed87:	mov    edx,r12d
  40ed8a:	call   0x415140
  40ed8f:	mov    rdi,rax
  40ed92:	test   r14d,r14d
  40ed95:	jle    0x40eda5
  40ed97:	mov    rcx,r13
  40ed9a:	mov    edx,r14d
  40ed9d:	call   0x415140
  40eda2:	mov    r13,rax
  40eda5:	mov    rdx,rdi
  40eda8:	mov    rcx,rsi
  40edab:	call   0x4152b0
  40edb0:	cmp    DWORD PTR [rax+0x14],0x1
  40edb4:	mov    rbx,rax
  40edb7:	jle    0x40f150
  40edbd:	mov    ebp,DWORD PTR [rbx+0x10]
  40edc0:	mov    rdx,r13
  40edc3:	mov    DWORD PTR [rbx+0x10],0x0
  40edca:	mov    rcx,rbx
  40edcd:	call   0x415260
  40edd2:	test   eax,eax
  40edd4:	jg     0x40f0e0
  40edda:	mov    ecx,DWORD PTR [rsp+0x6c]
  40edde:	test   ecx,ecx
  40ede0:	je     0x40f0e0
  40ede6:	mov    eax,ecx
  40ede8:	and    eax,0x1
  40edeb:	xor    eax,ebp
  40eded:	mov    DWORD PTR [rsp+0x60],eax
  40edf1:	je     0x40f8fb
  40edf7:	test   ebp,ebp
  40edf9:	je     0x40f351
  40edff:	movsd  xmm6,QWORD PTR [rip+0xc9d9]        # 0x41b7e0
  40ee07:	mov    DWORD PTR [rsp+0xa4],0x21
  40ee12:	xor    r12d,r12d
  40ee15:	mov    DWORD PTR [rsp+0x88],0x20
  40ee20:	xor    r14d,r14d
  40ee23:	movapd xmm7,xmm6
  40ee27:	mov    eax,DWORD PTR [rsp+0xa8]
  40ee2e:	mov    edx,DWORD PTR [rsp+0xac]
  40ee35:	mov    r8d,DWORD PTR [rsp+0x44]
  40ee3a:	add    edx,eax
  40ee3c:	test   r8d,r8d
  40ee3f:	mov    DWORD PTR [rsp+0x48],edx
  40ee43:	jne    0x40ee4f
  40ee45:	cmp    DWORD PTR [rsp+0x40],eax
  40ee49:	jg     0x40f505
  40ee4f:	lea    rdx,[rsp+0x9c]
  40ee57:	lea    r8,[rsp+0xa0]
  40ee5f:	movapd xmm0,xmm6
  40ee63:	call   0x415510
  40ee68:	mov    edx,DWORD PTR [rsp+0x9c]
  40ee6f:	mov    r15,rax
  40ee72:	test   edx,edx
  40ee74:	js     0x40f540
  40ee7a:	je     0x40ee87
  40ee7c:	mov    rcx,rax
  40ee7f:	call   0x415140
  40ee84:	mov    r15,rax
  40ee87:	mov    rbp,QWORD PTR [rsp+0xc8]
  40ee8f:	test   r14d,r14d
  40ee92:	mov    rdx,r15
  40ee95:	mov    rcx,rbp
  40ee98:	je     0x40f280
  40ee9e:	call   0x4152b0
  40eea3:	mov    ecx,DWORD PTR [rsp+0x44]
  40eea7:	mov    QWORD PTR [rsp+0xc8],rax
  40eeaf:	mov    edx,DWORD PTR [rbp+0x14]
  40eeb2:	test   ecx,ecx
  40eeb4:	jne    0x40f420
  40eeba:	sub    edx,0x1
  40eebd:	cmp    edx,DWORD PTR [rax+0x14]
  40eec0:	jge    0x40eedd
  40eec2:	movsxd rdx,edx
  40eec5:	add    rdx,0x4
  40eec9:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  40eece:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  40eed3:	xor    ecx,0x1f
  40eed6:	xor    edx,0x1f
  40eed9:	cmp    ecx,edx
  40eedb:	jle    0x40ef00
  40eedd:	mov    ecx,DWORD PTR [rsp+0x50]
  40eee1:	cmp    DWORD PTR [rsp+0x8c],ecx
  40eee8:	jne    0x40f300
  40eeee:	sub    DWORD PTR [rsp+0xa8],0x1
  40eef6:	mov    DWORD PTR [rsp+0x44],0x1
  40eefe:	xchg   ax,ax
  40ef00:	mov    rcx,r15
  40ef03:	call   0x414d40
  40ef08:	mov    rcx,rbp
  40ef0b:	call   0x414d40
  40ef10:	mov    r14d,DWORD PTR [rsp+0x60]
  40ef15:	test   r14d,r14d
  40ef18:	jne    0x40f160
  40ef1e:	test   r12d,r12d
  40ef21:	je     0x40ef68
  40ef23:	mov    eax,DWORD PTR [rsp+0xa8]
  40ef2a:	add    eax,DWORD PTR [rsp+0xac]
  40ef31:	cmp    DWORD PTR [rsp+0x48],eax
  40ef35:	jne    0x40ef68
  40ef37:	mulsd  xmm6,QWORD PTR [rip+0xc8c9]        # 0x41b808
  40ef3f:	movapd xmm0,xmm7
  40ef43:	subsd  xmm0,QWORD PTR [rip+0xc8ad]        # 0x41b7f8
  40ef4b:	movapd xmm1,xmm6
  40ef4f:	xorpd  xmm1,xmm10
  40ef54:	ucomisd xmm1,xmm0
  40ef58:	jbe    0x40f4d2
  40ef5e:	ucomisd xmm7,xmm6
  40ef62:	ja     0x40f4f2
  40ef68:	mov    r12d,DWORD PTR [rsp+0x44]
  40ef6d:	test   r12d,r12d
  40ef70:	je     0x40f335
  40ef76:	mov    DWORD PTR [rsp+0x44],0x1
  40ef7e:	xor    ebp,ebp
  40ef80:	mov    rcx,rsi
  40ef83:	call   0x414d40
  40ef88:	mov    rcx,rdi
  40ef8b:	call   0x414d40
  40ef90:	mov    rcx,r13
  40ef93:	call   0x414d40
  40ef98:	mov    rcx,rbx
  40ef9b:	call   0x414d40
  40efa0:	mov    rsi,QWORD PTR [rsp+0x70]
  40efa5:	mov    r15d,0x0
  40efab:	mov    ecx,DWORD PTR [rsi+0x8]
  40efae:	call   0x414c30
  40efb3:	lea    rcx,[rax+0x10]
  40efb7:	mov    rdi,rax
  40efba:	movsxd rax,DWORD PTR [rsi+0x14]
  40efbe:	mov    rdx,QWORD PTR [rsp+0x78]
  40efc3:	lea    r8,[rax*4+0x8]
  40efcb:	call   0x415fe0
  40efd0:	mov    rax,QWORD PTR [rsp+0xc8]
  40efd8:	mov    ecx,DWORD PTR [rax+0x8]
  40efdb:	call   0x414c30
  40efe0:	mov    rdx,QWORD PTR [rsp+0xc8]
  40efe8:	lea    rcx,[rax+0x10]
  40efec:	mov    rsi,rax
  40efef:	movsxd rax,DWORD PTR [rdx+0x14]
  40eff3:	add    rdx,0x10
  40eff7:	lea    r8,[rax*4+0x8]
  40efff:	call   0x415fe0
  40f004:	mov    eax,DWORD PTR [rsp+0xa8]
  40f00b:	mov    ecx,0x1
  40f010:	mov    ebx,DWORD PTR [rsp+0xac]
  40f017:	sub    eax,ebp
  40f019:	add    ebx,ebp
  40f01b:	mov    DWORD PTR [rsp+0x48],eax
  40f01f:	call   0x414e70
  40f024:	mov    r13,rax
  40f027:	mov    eax,DWORD PTR [rsp+0x68]
  40f02b:	test   eax,eax
  40f02d:	cmovg  r15d,eax
  40f031:	test   ebx,ebx
  40f033:	js     0x40f2f0
  40f039:	mov    eax,DWORD PTR [rsp+0x5c]
  40f03d:	mov    edx,r15d
  40f040:	lea    r14d,[rax+rbx*1]
  40f044:	mov    ecx,DWORD PTR [rsp+0x48]
  40f048:	mov    eax,DWORD PTR [rsp+0x80]
  40f04f:	add    ebx,ecx
  40f051:	sub    ebx,DWORD PTR [rsp+0x40]
  40f055:	sub    eax,ecx
  40f057:	cmp    DWORD PTR [rsp+0x50],ebx
  40f05b:	jle    0x40f063
  40f05d:	sub    ebx,DWORD PTR [rsp+0x50]
  40f061:	add    eax,ebx
  40f063:	lea    ebx,[r14+rax*1]
  40f067:	lea    r12d,[rdx+rax*1]
  40f06b:	cmp    ebx,r12d
  40f06e:	mov    eax,r12d
  40f071:	cmovle eax,ebx
  40f074:	cmp    eax,r14d
  40f077:	cmovg  eax,r14d
  40f07b:	test   eax,eax
  40f07d:	jle    0x40f087
  40f07f:	sub    ebx,eax
  40f081:	sub    r12d,eax
  40f084:	sub    r14d,eax
  40f087:	mov    eax,DWORD PTR [rsp+0x5c]
  40f08b:	test   eax,eax
  40f08d:	je     0x40f0bc
  40f08f:	mov    rcx,r13
  40f092:	mov    edx,eax
  40f094:	call   0x414fd0
  40f099:	mov    rdx,rsi
  40f09c:	mov    rcx,rax
  40f09f:	mov    r13,rax
  40f0a2:	call   0x414ea0
  40f0a7:	mov    rcx,rsi
  40f0aa:	mov    QWORD PTR [rsp+0x60],rax
  40f0af:	call   0x414d40
  40f0b4:	mov    rax,QWORD PTR [rsp+0x60]
  40f0b9:	mov    rsi,rax
  40f0bc:	sub    ebx,ebp
  40f0be:	cmp    ebx,0x0
  40f0c1:	mov    edx,ebx
  40f0c3:	jg     0x40ed61
  40f0c9:	je     0x40ed6c
  40f0cf:	neg    edx
  40f0d1:	mov    rcx,rsi
  40f0d4:	call   0x414580
  40f0d9:	jmp    0x40ed6c
  40f0de:	xchg   ax,ax
  40f0e0:	test   eax,eax
  40f0e2:	js     0x40f912
  40f0e8:	je     0x40f9de
  40f0ee:	mov    rdx,r13
  40f0f1:	mov    rcx,rbx
  40f0f4:	call   0x415750
  40f0f9:	ucomisd xmm9,xmm0
  40f0fe:	jb     0x40f430
  40f104:	test   ebp,ebp
  40f106:	jne    0x40f560
  40f10c:	mov    DWORD PTR [rsp+0x60],0x0
  40f114:	cmp    DWORD PTR [rsp+0x48],0x1
  40f119:	jg     0x40f129
  40f11b:	mov    r9d,DWORD PTR [rsp+0x44]
  40f120:	test   r9d,r9d
  40f123:	jne    0x40faea
  40f129:	movapd xmm6,xmm8
  40f12e:	xor    r12d,r12d
  40f131:	mov    DWORD PTR [rsp+0x88],0x10
  40f13c:	movapd xmm7,xmm8
  40f141:	mov    r14d,0x1
  40f147:	jmp    0x40ee27
  40f14c:	nop    DWORD PTR [rax+0x0]
  40f150:	mov    r15d,DWORD PTR [rax+0x18]
  40f154:	test   r15d,r15d
  40f157:	jne    0x40edbd
  40f15d:	nop    DWORD PTR [rax]
  40f160:	mov    ebp,DWORD PTR [rsp+0x44]
  40f164:	test   ebp,ebp
  40f166:	je     0x40f658
  40f16c:	mov    eax,DWORD PTR [rsp+0xac]
  40f173:	mov    ebp,0x1
  40f178:	mov    rdx,QWORD PTR [rsp+0x198]
  40f180:	mov    rcx,rsi
  40f183:	mov    DWORD PTR [rdx],eax
  40f185:	call   0x414d40
  40f18a:	mov    rcx,rdi
  40f18d:	call   0x414d40
  40f192:	mov    rcx,r13
  40f195:	call   0x414d40
  40f19a:	mov    rcx,QWORD PTR [rsp+0x70]
  40f19f:	call   0x414d40
  40f1a4:	mov    rcx,rbx
  40f1a7:	call   0x414d40
  40f1ac:	mov    rax,QWORD PTR [rsp+0x190]
  40f1b4:	mov    esi,DWORD PTR [rsp+0xac]
  40f1bb:	cmp    DWORD PTR [rax+0x8],esi
  40f1be:	jge    0x40e55a
  40f1c4:	mov    rax,QWORD PTR [rsp+0x190]
  40f1cc:	mov    eax,DWORD PTR [rax+0xc]
  40f1cf:	mov    DWORD PTR [rsp+0x44],eax
  40f1d3:	and    eax,0x3
  40f1d6:	cmp    eax,0x2
  40f1d9:	je     0x40f9cb
  40f1df:	cmp    eax,0x3
  40f1e2:	je     0x40f9b8
  40f1e8:	cmp    eax,0x1
  40f1eb:	je     0x40f5b7
  40f1f1:	mov    rcx,QWORD PTR [rsp+0xc8]
  40f1f9:	call   0x414d40
  40f1fe:	mov    rax,QWORD PTR [rsp+0x190]
  40f206:	mov    rsi,QWORD PTR [rsp+0x198]
  40f20e:	mov    QWORD PTR [rsp+0xc8],0x0
  40f21a:	mov    DWORD PTR [rsp+0xa4],0x11
  40f225:	mov    eax,DWORD PTR [rax+0x8]
  40f228:	mov    DWORD PTR [rsi],eax
  40f22a:	mov    rax,QWORD PTR [rsp+0x190]
  40f232:	mov    rsi,QWORD PTR [rsp+0x1a0]
  40f23a:	mov    ecx,DWORD PTR [rax]
  40f23c:	lea    eax,[rcx+0x1f]
  40f23f:	sar    eax,0x5
  40f242:	cdqe   
  40f244:	lea    rdx,[rsi+rax*4]
  40f248:	mov    rax,rsi
  40f24b:	cmp    rsi,rdx
  40f24e:	jae    0x40f260
  40f250:	add    rax,0x4
  40f254:	mov    DWORD PTR [rax-0x4],0xffffffff
  40f25b:	cmp    rdx,rax
  40f25e:	ja     0x40f250
  40f260:	and    ecx,0x1f
  40f263:	je     0x40f271
  40f265:	mov    eax,0x20
  40f26a:	sub    eax,ecx
  40f26c:	mov    ecx,eax
  40f26e:	shr    DWORD PTR [rdx-0x4],cl
  40f271:	xor    r8d,r8d
  40f274:	jmp    0x40e562
  40f279:	nop    DWORD PTR [rax+0x0]
  40f280:	call   0x40fcf0
  40f285:	mov    edx,DWORD PTR [rax+0x14]
  40f288:	mov    QWORD PTR [rsp+0xc8],rax
  40f290:	sub    edx,0x1
  40f293:	cmp    edx,DWORD PTR [rbp+0x14]
  40f296:	jge    0x40f2b7
  40f298:	movsxd rdx,edx
  40f29b:	add    rdx,0x4
  40f29f:	bsr    ecx,DWORD PTR [rax+rdx*4+0x8]
  40f2a4:	bsr    edx,DWORD PTR [rbp+rdx*4+0x8]
  40f2a9:	xor    ecx,0x1f
  40f2ac:	xor    edx,0x1f
  40f2af:	cmp    ecx,edx
  40f2b1:	jge    0x40ef00
  40f2b7:	mov    edx,DWORD PTR [rsp+0x44]
  40f2bb:	test   edx,edx
  40f2bd:	je     0x40f590
  40f2c3:	mov    eax,DWORD PTR [rsp+0xa8]
  40f2ca:	add    eax,0x1
  40f2cd:	cmp    DWORD PTR [rsp+0x40],eax
  40f2d1:	mov    DWORD PTR [rsp+0xa8],eax
  40f2d8:	setne  al
  40f2db:	movzx  eax,al
  40f2de:	mov    DWORD PTR [rsp+0x44],eax
  40f2e2:	jmp    0x40ef00
  40f2e7:	nop    WORD PTR [rax+rax*1+0x0]
  40f2f0:	mov    edx,r15d
  40f2f3:	mov    r14d,DWORD PTR [rsp+0x5c]
  40f2f8:	sub    edx,ebx
  40f2fa:	jmp    0x40f044
  40f2ff:	nop
  40f300:	mov    edx,0x1
  40f305:	mov    rcx,rax
  40f308:	call   0x415140
  40f30d:	mov    rcx,r15
  40f310:	mov    QWORD PTR [rsp+0xc8],rax
  40f318:	sub    DWORD PTR [rsp+0xac],0x1
  40f320:	sub    DWORD PTR [rsp+0x8c],0x1
  40f328:	call   0x414d40
  40f32d:	mov    rcx,rbp
  40f330:	call   0x414d40
  40f335:	mov    rcx,QWORD PTR [rsp+0xc8]
  40f33d:	call   0x414680
  40f342:	mov    DWORD PTR [rsp+0x44],0x0
  40f34a:	mov    ebp,eax
  40f34c:	jmp    0x40ef80
  40f351:	mov    edx,DWORD PTR [rsp+0x50]
  40f355:	cmp    DWORD PTR [rsp+0x8c],edx
  40f35c:	mov    DWORD PTR [rsp+0xa4],0x11
  40f367:	je     0x40f114
  40f36d:	xor    ecx,ecx
  40f36f:	cmp    DWORD PTR [rsp+0x40],0x1f
  40f374:	mov    r9,QWORD PTR [rsp+0xc8]
  40f37c:	mov    eax,DWORD PTR [rsp+0x40]
  40f380:	jle    0x40f3bc
  40f382:	mov    r14d,DWORD PTR [r9+0x18]
  40f386:	test   r14d,r14d
  40f389:	jne    0x40f114
  40f38f:	lea    rdx,[r9+0x1c]
  40f393:	mov    eax,DWORD PTR [rsp+0x40]
  40f397:	xor    ecx,ecx
  40f399:	jmp    0x40f3b1
  40f39b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f3a0:	add    rdx,0x4
  40f3a4:	mov    r12d,DWORD PTR [rdx-0x4]
  40f3a8:	test   r12d,r12d
  40f3ab:	jne    0x40f114
  40f3b1:	sub    eax,0x20
  40f3b4:	add    ecx,0x1
  40f3b7:	cmp    eax,0x1f
  40f3ba:	jg     0x40f3a0
  40f3bc:	cmp    eax,0x1
  40f3bf:	jle    0x40f3e3
  40f3c1:	movsxd rcx,ecx
  40f3c4:	sub    eax,0x1
  40f3c7:	lea    r8,[r9+rcx*4]
  40f3cb:	xor    ecx,ecx
  40f3cd:	mov    edx,DWORD PTR [r8+0x18]
  40f3d1:	tzcnt  ecx,edx
  40f3d5:	shr    edx,cl
  40f3d7:	cmp    eax,ecx
  40f3d9:	mov    DWORD PTR [r8+0x18],edx
  40f3dd:	jg     0x40f114
  40f3e3:	mov    eax,DWORD PTR [rsp+0x8c]
  40f3ea:	mov    rcx,r9
  40f3ed:	sub    eax,0x1
  40f3f0:	mov    DWORD PTR [rsp+0xac],eax
  40f3f7:	mov    eax,DWORD PTR [rsp+0x40]
  40f3fb:	mov    edx,eax
  40f3fd:	mov    DWORD PTR [rsp+0xa8],eax
  40f404:	call   0x40e0f0
  40f409:	mov    QWORD PTR [rsp+0xc8],rax
  40f411:	jmp    0x40f160
  40f416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f420:	mov    DWORD PTR [rsp+0x44],0x1
  40f428:	jmp    0x40ef00
  40f42d:	nop    DWORD PTR [rax]
  40f430:	movapd xmm7,xmm0
  40f434:	cmp    ebp,0x1
  40f437:	movsd  xmm1,QWORD PTR [rip+0xc3b9]        # 0x41b7f8
  40f43f:	sbb    eax,eax
  40f441:	and    eax,0x10
  40f444:	movsd  xmm0,QWORD PTR [rip+0xc3b4]        # 0x41b800
  40f44c:	mulsd  xmm7,xmm1
  40f450:	add    eax,0x10
  40f453:	xor    r14d,r14d
  40f456:	cmp    ebp,0x1
  40f459:	mov    DWORD PTR [rsp+0x88],eax
  40f460:	setb   r14b
  40f464:	ucomisd xmm0,xmm7
  40f468:	jbe    0x40f550
  40f46e:	cvttsd2si r12d,xmm7
  40f473:	pxor   xmm6,xmm6
  40f477:	mov    eax,DWORD PTR [rsp+0x6c]
  40f47b:	cmp    eax,0x1
  40f47e:	cvtsi2sd xmm6,r12d
  40f483:	subsd  xmm7,xmm6
  40f487:	je     0x40f7a5
  40f48d:	cmp    eax,0x2
  40f490:	jne    0x40f649
  40f496:	test   r14d,r14d
  40f499:	jne    0x40f4c5
  40f49b:	ucomisd xmm7,QWORD PTR [rip+0xc345]        # 0x41b7e8
  40f4a3:	jbe    0x40f4c5
  40f4a5:	pxor   xmm6,xmm6
  40f4a9:	add    r12d,0x1
  40f4ad:	mov    eax,0x30
  40f4b2:	sub    eax,DWORD PTR [rsp+0x88]
  40f4b9:	cvtsi2sd xmm6,r12d
  40f4be:	mov    DWORD PTR [rsp+0x88],eax
  40f4c5:	mov    DWORD PTR [rsp+0x60],0x0
  40f4cd:	jmp    0x40ee27
  40f4d2:	ucomisd xmm0,xmm6
  40f4d6:	jbe    0x40ef68
  40f4dc:	movsd  xmm0,QWORD PTR [rip+0xc2fc]        # 0x41b7e0
  40f4e4:	subsd  xmm0,xmm6
  40f4e8:	ucomisd xmm0,xmm7
  40f4ec:	jbe    0x40ef68
  40f4f2:	mov    eax,DWORD PTR [rsp+0x88]
  40f4f9:	or     DWORD PTR [rsp+0xa4],eax
  40f500:	jmp    0x40f160
  40f505:	mov    r15d,DWORD PTR [rsp+0x40]
  40f50a:	mov    rcx,QWORD PTR [rsp+0xc8]
  40f512:	mov    ebp,r15d
  40f515:	sub    ebp,eax
  40f517:	mov    edx,ebp
  40f519:	call   0x415140
  40f51e:	sub    DWORD PTR [rsp+0xac],ebp
  40f525:	mov    QWORD PTR [rsp+0xc8],rax
  40f52d:	mov    DWORD PTR [rsp+0xa8],r15d
  40f535:	jmp    0x40ee4f
  40f53a:	nop    WORD PTR [rax+rax*1+0x0]
  40f540:	neg    edx
  40f542:	mov    rcx,rax
  40f545:	call   0x414580
  40f54a:	jmp    0x40ee87
  40f54f:	nop
  40f550:	movapd xmm6,xmm7
  40f554:	xor    r12d,r12d
  40f557:	jmp    0x40f4c5
  40f55c:	nop    DWORD PTR [rax+0x0]
  40f560:	movapd xmm6,xmm11
  40f565:	xor    r12d,r12d
  40f568:	movapd xmm7,xmm11
  40f56d:	mov    DWORD PTR [rsp+0x88],0x20
  40f578:	mov    DWORD PTR [rsp+0x60],0x0
  40f580:	xor    r14d,r14d
  40f583:	jmp    0x40ee27
  40f588:	nop    DWORD PTR [rax+rax*1+0x0]
  40f590:	mov    edx,0x1
  40f595:	mov    rcx,rax
  40f598:	xor    r12d,r12d
  40f59b:	call   0x414580
  40f5a0:	add    DWORD PTR [rsp+0xac],0x1
  40f5a8:	add    DWORD PTR [rsp+0x8c],0x1
  40f5b0:	jmp    0x40ef00
  40f5b5:	xor    ebp,ebp
  40f5b7:	mov    rax,QWORD PTR [rsp+0xc8]
  40f5bf:	mov    DWORD PTR [rsp+0xa4],0xa3
  40f5ca:	mov    DWORD PTR [rax+0x14],0x0
  40f5d1:	call   0x4160b8
  40f5d6:	mov    DWORD PTR [rax],0x22
  40f5dc:	mov    rax,QWORD PTR [rsp+0x190]
  40f5e4:	mov    eax,DWORD PTR [rax+0x8]
  40f5e7:	add    eax,0x1
  40f5ea:	jmp    0x40e550
  40f5ef:	mov    eax,DWORD PTR [rsp+0x58]
  40f5f3:	mov    r8,QWORD PTR [rsp+0x198]
  40f5fb:	lea    rcx,[rsp+0xc0]
  40f603:	mov    rdx,QWORD PTR [rsp+0x190]
  40f60b:	lea    r9,[rsp+0xc8]
  40f613:	mov    DWORD PTR [rsp+0x20],eax
  40f617:	call   0x413cb0
  40f61c:	cmp    eax,0x6
  40f61f:	mov    DWORD PTR [rsp+0xa4],eax
  40f626:	mov    r8,QWORD PTR [rsp+0xc8]
  40f62e:	jne    0x40e291
  40f634:	mov    QWORD PTR [rsp+0xc0],rdi
  40f63c:	mov    DWORD PTR [rsp+0x58],0x0
  40f644:	jmp    0x40e291
  40f649:	ucomisd xmm7,xmm1
  40f64d:	jae    0x40f4a5
  40f653:	jmp    0x40f4c5
  40f658:	mov    eax,DWORD PTR [rsp+0xa8]
  40f65f:	mov    ebp,DWORD PTR [rsp+0x40]
  40f663:	sub    ebp,eax
  40f665:	cmp    ebp,0x0
  40f668:	jne    0x40f831
  40f66e:	mov    eax,DWORD PTR [rsp+0xac]
  40f675:	jmp    0x40f178
  40f67a:	je     0x40e978
  40f680:	neg    edx
  40f682:	mov    eax,edx
  40f684:	and    eax,0xf
  40f687:	je     0x40f6a9
  40f689:	mov    rcx,QWORD PTR [rip+0xc770]        # 0x41be00
  40f690:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40f699:	cdqe   
  40f69b:	divsd  xmm0,QWORD PTR [rcx+rax*8]
  40f6a0:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40f6a9:	and    edx,0xfffffff0
  40f6ac:	je     0x40e978
  40f6b2:	mov    eax,edx
  40f6b4:	sar    eax,0x4
  40f6b7:	cmp    eax,0xf
  40f6ba:	jle    0x40fc88
  40f6c0:	mov    rdx,QWORD PTR [rip+0xc749]        # 0x41be10
  40f6c7:	mov    ecx,eax
  40f6c9:	xor    r8d,r8d
  40f6cc:	movsd  xmm1,QWORD PTR [rdx+0x20]
  40f6d1:	mov    edx,DWORD PTR [rsp+0xb4]
  40f6d8:	sub    ecx,0x10
  40f6db:	mov    r9d,edx
  40f6de:	and    edx,0x800fffff
  40f6e4:	or     edx,0x3ff00000
  40f6ea:	and    r9d,0x7ff00000
  40f6f1:	mov    DWORD PTR [rsp+0xb4],edx
  40f6f8:	shr    r9d,0x14
  40f6fc:	cmp    ecx,0xf
  40f6ff:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40f708:	lea    r8d,[r8+r9*1-0x3ff]
  40f710:	mulsd  xmm0,xmm1
  40f714:	movsd  QWORD PTR [rsp+0xb0],xmm0
  40f71d:	jg     0x40f6d1
  40f71f:	and    eax,0xf
  40f722:	mov    edx,DWORD PTR [rsp+0xb4]
  40f729:	mov    ecx,edx
  40f72b:	and    edx,0x800fffff
  40f731:	and    ecx,0x7ff00000
  40f737:	or     edx,0x3ff00000
  40f73d:	shr    ecx,0x14
  40f740:	mov    DWORD PTR [rsp+0xb4],edx
  40f747:	test   eax,eax
  40f749:	lea    edi,[r8+rcx*1-0x3ff]
  40f751:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40f75a:	jle    0x40e983
  40f760:	movsd  xmm1,QWORD PTR [rsp+0xb0]
  40f769:	mov    rdx,QWORD PTR [rip+0xc6a0]        # 0x41be10
  40f770:	movapd xmm0,xmm1
  40f774:	test   al,0x1
  40f776:	je     0x40f780
  40f778:	mulsd  xmm1,QWORD PTR [rdx]
  40f77c:	movapd xmm0,xmm1
  40f780:	sar    eax,1
  40f782:	add    rdx,0x8
  40f786:	test   eax,eax
  40f788:	jg     0x40f774
  40f78a:	movsd  QWORD PTR [rsp+0xb0],xmm1
  40f793:	jmp    0x40e983
  40f798:	mov    DWORD PTR [rsp+0x44],0x0
  40f7a0:	jmp    0x40eba9
  40f7a5:	test   r14d,r14d
  40f7a8:	je     0x40f4c5
  40f7ae:	jmp    0x40f49b
  40f7b3:	mov    DWORD PTR [rsp+0x44],0x0
  40f7bb:	jmp    0x40ecf3
  40f7c0:	lea    rax,[rsp+0xa4]
  40f7c8:	lea    rcx,[rsp+0xb0]
  40f7d0:	mov    DWORD PTR [rsp+0x20],0x1
  40f7d8:	mov    QWORD PTR [rsp+0x30],rax
  40f7dd:	mov    eax,DWORD PTR [rsp+0x6c]
  40f7e1:	mov    DWORD PTR [rsp+0x28],eax
  40f7e5:	jmp    0x40e868
  40f7ea:	mov    ecx,DWORD PTR [rsp+0x68]
  40f7ee:	mov    edx,0x25
  40f7f3:	sub    edx,ebp
  40f7f5:	cmp    ecx,edx
  40f7f7:	mov    eax,ecx
  40f7f9:	jg     0x40e939
  40f7ff:	mov    rdx,QWORD PTR [rip+0xc5fa]        # 0x41be00
  40f806:	mov    eax,0xf
  40f80b:	sub    eax,ebp
  40f80d:	movsd  xmm0,QWORD PTR [rsp+0xb0]
  40f816:	movsxd rcx,eax
  40f819:	mulsd  xmm0,QWORD PTR [rdx+rcx*8]
  40f81e:	mov    ecx,DWORD PTR [rsp+0x68]
  40f822:	sub    ecx,eax
  40f824:	movsxd rax,ecx
  40f827:	mulsd  xmm0,QWORD PTR [rdx+rax*8]
  40f82c:	jmp    0x40ec71
  40f831:	mov    edx,ebp
  40f833:	jle    0x40fb8f
  40f839:	mov    rcx,QWORD PTR [rsp+0xc8]
  40f841:	call   0x415140
  40f846:	mov    QWORD PTR [rsp+0xc8],rax
  40f84e:	mov    eax,DWORD PTR [rsp+0xac]
  40f855:	sub    eax,ebp
  40f857:	xor    ebp,ebp
  40f859:	mov    DWORD PTR [rsp+0xac],eax
  40f860:	jmp    0x40f178
  40f865:	xor    ebp,ebp
  40f867:	xor    r13d,r13d
  40f86a:	jmp    0x40e92a
  40f86f:	mov    r9d,0x4e1f
  40f875:	jmp    0x40e6c4
  40f87a:	lea    rbx,[rsp+0xc0]
  40f882:	lea    rdx,[rip+0xbdf7]        # 0x41b680
  40f889:	mov    rcx,rbx
  40f88c:	call   0x415810
  40f891:	test   eax,eax
  40f893:	je     0x40e6e3
  40f899:	lea    rdx,[rip+0xbde3]        # 0x41b683
  40f8a0:	mov    rcx,rbx
  40f8a3:	sub    QWORD PTR [rsp+0xc0],0x1
  40f8ac:	call   0x415810
  40f8b1:	test   eax,eax
  40f8b3:	jne    0x40f8be
  40f8b5:	add    QWORD PTR [rsp+0xc0],0x1
  40f8be:	mov    rax,QWORD PTR [rsp+0x190]
  40f8c6:	mov    DWORD PTR [rsp+0xa4],0x3
  40f8d1:	xor    ebp,ebp
  40f8d3:	mov    eax,DWORD PTR [rax+0x8]
  40f8d6:	add    eax,0x1
  40f8d9:	jmp    0x40e550
  40f8de:	mov    edx,DWORD PTR [rsp+0xb4]
  40f8e5:	mov    eax,0x15
  40f8ea:	or     edx,0x100000
  40f8f0:	tzcnt  edx,edx
  40f8f4:	sub    eax,edx
  40f8f6:	jmp    0x40e81d
  40f8fb:	cmp    ebp,0x1
  40f8fe:	sbb    eax,eax
  40f900:	and    eax,0x10
  40f903:	add    eax,0x11
  40f906:	mov    DWORD PTR [rsp+0xa4],eax
  40f90d:	jmp    0x40f160
  40f912:	cmp    ebp,0x1
  40f915:	sbb    eax,eax
  40f917:	and    eax,0x10
  40f91a:	add    eax,0x11
  40f91d:	test   ebp,ebp
  40f91f:	mov    DWORD PTR [rsp+0xa4],eax
  40f926:	jne    0x40f160
  40f92c:	cmp    DWORD PTR [rsp+0x48],0x1
  40f931:	jg     0x40f160
  40f937:	mov    ebp,DWORD PTR [rsp+0x44]
  40f93b:	test   ebp,ebp
  40f93d:	jne    0x40f160
  40f943:	mov    edx,DWORD PTR [rsp+0x8c]
  40f94a:	cmp    DWORD PTR [rsp+0x50],edx
  40f94e:	je     0x40f160
  40f954:	mov    rcx,rbx
  40f957:	mov    edx,0x1
  40f95c:	call   0x415140
  40f961:	mov    rdx,r13
  40f964:	mov    rcx,rax
  40f967:	mov    rbx,rax
  40f96a:	call   0x415260
  40f96f:	test   eax,eax
  40f971:	jle    0x40f658
  40f977:	mov    DWORD PTR [rsp+0xa4],0x11
  40f982:	mov    DWORD PTR [rsp+0x44],0x0
  40f98a:	mov    eax,DWORD PTR [rsp+0x40]
  40f98e:	mov    rcx,QWORD PTR [rsp+0xc8]
  40f996:	sub    DWORD PTR [rsp+0xac],eax
  40f99d:	mov    edx,eax
  40f99f:	mov    DWORD PTR [rsp+0xa8],eax
  40f9a6:	call   0x40e0f0
  40f9ab:	mov    QWORD PTR [rsp+0xc8],rax
  40f9b3:	jmp    0x40f160
  40f9b8:	mov    r10d,DWORD PTR [rsp+0x58]
  40f9bd:	test   r10d,r10d
  40f9c0:	jne    0x40f5b7
  40f9c6:	jmp    0x40f1f1
  40f9cb:	mov    r11d,DWORD PTR [rsp+0x58]
  40f9d0:	test   r11d,r11d
  40f9d3:	je     0x40f5b7
  40f9d9:	jmp    0x40f1f1
  40f9de:	test   ebp,ebp
  40f9e0:	je     0x40fb27
  40f9e6:	mov    r11d,DWORD PTR [rsp+0x44]
  40f9eb:	test   r11d,r11d
  40f9ee:	je     0x40fbf5
  40f9f4:	mov    ecx,DWORD PTR [rsp+0xa8]
  40f9fb:	mov    r8,QWORD PTR [rsp+0xc8]
  40fa03:	mov    edx,ecx
  40fa05:	lea    rax,[r8+0x18]
  40fa09:	sar    edx,0x5
  40fa0c:	movsxd rdx,edx
  40fa0f:	lea    rdx,[rax+rdx*4]
  40fa13:	cmp    rax,rdx
  40fa16:	jae    0x40fa43
  40fa18:	cmp    DWORD PTR [r8+0x18],0xffffffff
  40fa1d:	lea    rax,[r8+0x1c]
  40fa21:	je     0x40fa3e
  40fa23:	jmp    0x40fbf5
  40fa28:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa30:	add    rax,0x4
  40fa34:	cmp    DWORD PTR [rax-0x4],0xffffffff
  40fa38:	jne    0x40fbf5
  40fa3e:	cmp    rdx,rax
  40fa41:	ja     0x40fa30
  40fa43:	and    ecx,0x1f
  40fa46:	je     0x40fa5a
  40fa48:	or     edx,0xffffffff
  40fa4b:	shl    edx,cl
  40fa4d:	or     edx,DWORD PTR [rax]
  40fa4f:	mov    eax,edx
  40fa51:	add    eax,0x1
  40fa54:	jne    0x40fbf5
  40fa5a:	mov    eax,DWORD PTR [rsp+0x40]
  40fa5e:	mov    edx,DWORD PTR [rsp+0x50]
  40fa62:	mov    DWORD PTR [r8+0x14],0x1
  40fa6a:	mov    DWORD PTR [r8+0x18],0x1
  40fa72:	mov    DWORD PTR [rsp+0xa8],0x1
  40fa7d:	mov    DWORD PTR [rsp+0xa4],0x21
  40fa88:	lea    eax,[rax+rdx*1-0x1]
  40fa8c:	mov    DWORD PTR [rsp+0xac],eax
  40fa93:	mov    eax,0x1
  40fa98:	jmp    0x40f65f
  40fa9d:	add    r13d,eax
  40faa0:	cmp    eax,0x1
  40faa3:	je     0x40facc
  40faa5:	add    ecx,ebp
  40faa7:	mov    r10d,ecx
  40faaa:	jmp    0x40fab5
  40faac:	lea    esi,[rsi+rsi*4]
  40faaf:	add    esi,esi
  40fab1:	cmp    ebp,ecx
  40fab3:	je     0x40facf
  40fab5:	add    ebp,0x1
  40fab8:	lea    eax,[rbp-0x1]
  40fabb:	cmp    eax,0x8
  40fabe:	jle    0x40faac
  40fac0:	cmp    ebp,0x10
  40fac3:	jg     0x40fab1
  40fac5:	lea    edx,[rdx+rdx*4]
  40fac8:	add    edx,edx
  40faca:	jmp    0x40fab1
  40facc:	mov    r10d,ebp
  40facf:	cmp    r10d,0x8
  40fad3:	lea    ebp,[r10+0x1]
  40fad7:	jg     0x40fbab
  40fadd:	mov    r8,QWORD PTR [rsp+0xc0]
  40fae5:	jmp    0x40ec0e
  40faea:	mov    r9,QWORD PTR [rsp+0xc8]
  40faf2:	mov    DWORD PTR [rsp+0x44],0x1
  40fafa:	mov    eax,DWORD PTR [rsp+0x50]
  40fafe:	mov    DWORD PTR [r9+0x14],0x0
  40fb06:	mov    DWORD PTR [rsp+0xa4],0x50
  40fb11:	mov    DWORD PTR [rsp+0xac],eax
  40fb18:	jmp    0x40f160
  40fb1d:	mov    eax,0x1
  40fb22:	jmp    0x40e8cd
  40fb27:	cmp    DWORD PTR [rsp+0x48],0x1
  40fb2c:	je     0x40fc0c
  40fb32:	mov    DWORD PTR [rsp+0xa4],0x21
  40fb3d:	mov    r10d,DWORD PTR [rsp+0x44]
  40fb42:	test   r10d,r10d
  40fb45:	jne    0x40fb55
  40fb47:	mov    edx,DWORD PTR [rsp+0x40]
  40fb4b:	cmp    DWORD PTR [rsp+0x48],edx
  40fb4f:	jl     0x40f658
  40fb55:	mov    r9,QWORD PTR [rsp+0xc8]
  40fb5d:	mov    eax,DWORD PTR [r9+0x18]
  40fb61:	test   al,0x1
  40fb63:	je     0x40f160
  40fb69:	test   ebp,ebp
  40fb6b:	jne    0x40fc90
  40fb71:	cmp    DWORD PTR [rsp+0x48],0x1
  40fb76:	je     0x40fafa
  40fb78:	sub    eax,0x1
  40fb7b:	mov    DWORD PTR [rsp+0xa4],0x11
  40fb86:	mov    DWORD PTR [r9+0x18],eax
  40fb8a:	jmp    0x40f160
  40fb8f:	mov    rcx,QWORD PTR [rsp+0xc8]
  40fb97:	neg    edx
  40fb99:	call   0x414580
  40fb9e:	jmp    0x40f84e
  40fba3:	xor    r8d,r8d
  40fba6:	jmp    0x40eb3f
  40fbab:	cmp    ebp,0x10
  40fbae:	jg     0x40fbb7
  40fbb0:	lea    eax,[rdx+rdx*4]
  40fbb3:	lea    edx,[r8+rax*2]
  40fbb7:	mov    r8,QWORD PTR [rsp+0xc0]
  40fbbf:	xor    ecx,ecx
  40fbc1:	jmp    0x40e90f
  40fbc6:	cmp    edx,0xffffffff
  40fbc9:	jl     0x40ea84
  40fbcf:	mov    rax,QWORD PTR [rsp+0xc8]
  40fbd7:	mov    DWORD PTR [rsp+0xa8],0x1
  40fbe2:	mov    DWORD PTR [rax+0x14],0x1
  40fbe9:	mov    DWORD PTR [rax+0x18],0x1
  40fbf0:	jmp    0x40ea56
  40fbf5:	mov    DWORD PTR [rsp+0xa4],0x11
  40fc00:	jmp    0x40fb3d
  40fc05:	xor    ecx,ecx
  40fc07:	jmp    0x40ebe8
  40fc0c:	mov    edx,DWORD PTR [rsp+0x8c]
  40fc13:	cmp    DWORD PTR [rsp+0x50],edx
  40fc17:	jne    0x40fcdd
  40fc1d:	mov    rax,QWORD PTR [rsp+0xc8]
  40fc25:	mov    DWORD PTR [rsp+0xa4],0x21
  40fc30:	cmp    DWORD PTR [rax+0x14],0x1
  40fc34:	jne    0x40f160
  40fc3a:	cmp    DWORD PTR [rax+0x18],0x1
  40fc3e:	mov    eax,DWORD PTR [rsp+0x48]
  40fc42:	cmovne eax,DWORD PTR [rsp+0x84]
  40fc4a:	mov    DWORD PTR [rsp+0x84],eax
  40fc51:	jmp    0x40f160
  40fc56:	mov    r8,QWORD PTR [rsp+0x1a0]
  40fc5e:	mov    rdx,QWORD PTR [rsp+0x190]
  40fc66:	mov    rcx,rbx
  40fc69:	call   0x414750
  40fc6e:	mov    DWORD PTR [rsp+0xa4],eax
  40fc75:	mov    rax,QWORD PTR [rsp+0x190]
  40fc7d:	mov    eax,DWORD PTR [rax+0x8]
  40fc80:	add    eax,0x1
  40fc83:	jmp    0x40e550
  40fc88:	xor    r8d,r8d
  40fc8b:	jmp    0x40f722
  40fc90:	mov    rcx,r9
  40fc93:	call   0x40dc40
  40fc98:	mov    edx,DWORD PTR [rax+0x14]
  40fc9b:	mov    ecx,DWORD PTR [rsp+0xa8]
  40fca2:	mov    QWORD PTR [rsp+0xc8],rax
  40fcaa:	sub    edx,0x1
  40fcad:	movsxd rdx,edx
  40fcb0:	bsr    edx,DWORD PTR [rax+rdx*4+0x18]
  40fcb5:	mov    eax,ecx
  40fcb7:	neg    eax
  40fcb9:	and    eax,0x1f
  40fcbc:	xor    edx,0x1f
  40fcbf:	cmp    edx,eax
  40fcc1:	je     0x40fccd
  40fcc3:	add    ecx,0x1
  40fcc6:	mov    DWORD PTR [rsp+0xa8],ecx
  40fccd:	mov    DWORD PTR [rsp+0xa4],0x21
  40fcd8:	jmp    0x40f160
  40fcdd:	mov    DWORD PTR [rsp+0xa4],0x1
  40fce8:	jmp    0x40f98a
  40fced:	nop
  40fcee:	nop
  40fcef:	nop
  40fcf0:	push   r13
  40fcf2:	push   r12
  40fcf4:	push   rbp
  40fcf5:	push   rdi
  40fcf6:	push   rsi
  40fcf7:	push   rbx
  40fcf8:	sub    rsp,0x28
  40fcfc:	mov    eax,DWORD PTR [rdx+0x14]
  40fcff:	cmp    DWORD PTR [rcx+0x14],eax
  40fd02:	mov    rsi,rcx
  40fd05:	mov    rdi,rdx
  40fd08:	jge    0x40fd10
  40fd0a:	mov    rsi,rdx
  40fd0d:	mov    rdi,rcx
  40fd10:	mov    ecx,DWORD PTR [rsi+0x8]
  40fd13:	xor    r12d,r12d
  40fd16:	call   0x414c30
  40fd1b:	movsxd rcx,DWORD PTR [rsi+0x14]
  40fd1f:	mov    rbx,rax
  40fd22:	lea    r11,[rdi+0x18]
  40fd26:	lea    r8,[rbx+0x18]
  40fd2a:	mov    DWORD PTR [rax+0x14],ecx
  40fd2d:	movsxd rdx,DWORD PTR [rdi+0x14]
  40fd31:	lea    rax,[rsi+0x18]
  40fd35:	lea    rdi,[r8+rdx*4]
  40fd39:	mov    rbp,rdx
  40fd3c:	nop    DWORD PTR [rax+0x0]
  40fd40:	mov    r10d,DWORD PTR [rax]
  40fd43:	mov    r9d,DWORD PTR [r11]
  40fd46:	add    r8,0x4
  40fd4a:	add    rax,0x4
  40fd4e:	add    r11,0x4
  40fd52:	movzx  r13d,r9w
  40fd56:	movzx  edx,r10w
  40fd5a:	shr    r9d,0x10
  40fd5e:	add    edx,r13d
  40fd61:	shr    r10d,0x10
  40fd65:	add    edx,r12d
  40fd68:	add    r10d,r9d
  40fd6b:	mov    r9d,edx
  40fd6e:	mov    WORD PTR [r8-0x4],dx
  40fd73:	and    r9d,0x10000
  40fd7a:	shr    r9d,0x10
  40fd7e:	add    r9d,r10d
  40fd81:	mov    r12d,r9d
  40fd84:	mov    WORD PTR [r8-0x2],r9w
  40fd89:	and    r12d,0x10000
  40fd90:	shr    r12d,0x10
  40fd94:	cmp    rdi,r8
  40fd97:	ja     0x40fd40
  40fd99:	mov    edx,DWORD PTR [rsi+0x14]
  40fd9c:	sub    edx,ebp
  40fd9e:	movsxd rdx,edx
  40fda1:	lea    r11,[rdi+rdx*4]
  40fda5:	cmp    r11,r8
  40fda8:	jbe    0x40fdeb
  40fdaa:	nop    WORD PTR [rax+rax*1+0x0]
  40fdb0:	mov    r9d,DWORD PTR [rax]
  40fdb3:	add    r8,0x4
  40fdb7:	add    rax,0x4
  40fdbb:	movzx  r10d,r9w
  40fdbf:	shr    r9d,0x10
  40fdc3:	add    r10d,r12d
  40fdc6:	mov    edx,r10d
  40fdc9:	mov    WORD PTR [r8-0x4],r10w
  40fdce:	and    edx,0x10000
  40fdd4:	shr    edx,0x10
  40fdd7:	add    edx,r9d
  40fdda:	mov    WORD PTR [r8-0x2],dx
  40fddf:	mov    r12d,edx
  40fde2:	shr    r12d,0x10
  40fde6:	cmp    r11,r8
  40fde9:	ja     0x40fdb0
  40fdeb:	test   r12d,r12d
  40fdee:	je     0x40fe03
  40fdf0:	cmp    ecx,DWORD PTR [rbx+0xc]
  40fdf3:	je     0x40fe13
  40fdf5:	lea    eax,[rcx+0x1]
  40fdf8:	mov    DWORD PTR [rbx+0x14],eax
  40fdfb:	mov    DWORD PTR [rbx+rcx*4+0x18],0x1
  40fe03:	mov    rax,rbx
  40fe06:	add    rsp,0x28
  40fe0a:	pop    rbx
  40fe0b:	pop    rsi
  40fe0c:	pop    rdi
  40fe0d:	pop    rbp
  40fe0e:	pop    r12
  40fe10:	pop    r13
  40fe12:	ret    
  40fe13:	mov    eax,DWORD PTR [rbx+0x8]
  40fe16:	lea    ecx,[rax+0x1]
  40fe19:	call   0x414c30
  40fe1e:	mov    rsi,rax
  40fe21:	lea    rcx,[rax+0x10]
  40fe25:	movsxd rax,DWORD PTR [rbx+0x14]
  40fe29:	lea    rdx,[rbx+0x10]
  40fe2d:	lea    r8,[rax*4+0x8]
  40fe35:	call   0x415fe0
  40fe3a:	mov    rcx,rbx
  40fe3d:	mov    rbx,rsi
  40fe40:	call   0x414d40
  40fe45:	movsxd rcx,DWORD PTR [rsi+0x14]
  40fe49:	jmp    0x40fdf5
  40fe4b:	nop
  40fe4c:	nop
  40fe4d:	nop
  40fe4e:	nop
  40fe4f:	nop
  40fe50:	sub    rsp,0x78
  40fe54:	movaps XMMWORD PTR [rsp+0x50],xmm6
  40fe59:	movaps XMMWORD PTR [rsp+0x60],xmm7
  40fe5e:	movsd  QWORD PTR [rsp+0x48],xmm0
  40fe64:	movapd xmm7,xmm0
  40fe68:	mov    eax,DWORD PTR [rsp+0x4c]
  40fe6c:	mov    ecx,eax
  40fe6e:	and    eax,0x7ff00000
  40fe73:	and    ecx,0xfffff
  40fe79:	or     ecx,DWORD PTR [rsp+0x48]
  40fe7d:	mov    r9d,ecx
  40fe80:	or     r9d,eax
  40fe83:	je     0x40ff20
  40fe89:	cmp    eax,0x7ff00000
  40fe8e:	je     0x40ff83
  40fe94:	movsd  xmm1,QWORD PTR [rip+0xb9bc]        # 0x41b858
  40fe9c:	mov    ecx,0x0
  40fea1:	ucomisd xmm0,xmm1
  40fea5:	setnp  al
  40fea8:	cmovne eax,ecx
  40feab:	test   al,al
  40fead:	jne    0x40ff70
  40feb3:	test   edx,edx
  40feb5:	je     0x40ff70
  40febb:	movsd  xmm0,QWORD PTR [rip+0xb9bd]        # 0x41b880
  40fec3:	test   edx,edx
  40fec5:	mov    eax,edx
  40fec7:	andpd  xmm0,xmm7
  40fecb:	js     0x410010
  40fed1:	cmp    eax,0x1
  40fed4:	je     0x40ff00
  40fed6:	test   al,0x1
  40fed8:	movapd xmm3,xmm1
  40fedc:	jne    0x410023
  40fee2:	movapd xmm2,xmm0
  40fee6:	movapd xmm0,xmm3
  40feea:	shr    eax,1
  40feec:	nop    DWORD PTR [rax+0x0]
  40fef0:	test   al,0x1
  40fef2:	mulsd  xmm2,xmm2
  40fef6:	je     0x40fefc
  40fef8:	mulsd  xmm0,xmm2
  40fefc:	shr    eax,1
  40fefe:	jne    0x40fef0
  40ff00:	and    edx,0x1
  40ff03:	je     0x40ff74
  40ff05:	movq   rax,xmm7
  40ff0a:	test   rax,rax
  40ff0d:	jns    0x40ff74
  40ff0f:	movsd  xmm2,QWORD PTR [rip+0xb979]        # 0x41b890
  40ff17:	xorpd  xmm0,xmm2
  40ff1b:	jmp    0x40ff74
  40ff1d:	nop    DWORD PTR [rax]
  40ff20:	movsd  xmm1,QWORD PTR [rip+0xb930]        # 0x41b858
  40ff28:	mov    ecx,0x0
  40ff2d:	ucomisd xmm0,xmm1
  40ff31:	setnp  al
  40ff34:	cmovne eax,ecx
  40ff37:	test   al,al
  40ff39:	jne    0x40ff70
  40ff3b:	test   edx,edx
  40ff3d:	je     0x40ff70
  40ff3f:	mov    eax,edx
  40ff41:	and    eax,0x1
  40ff44:	test   edx,edx
  40ff46:	js     0x410080
  40ff4c:	test   eax,eax
  40ff4e:	je     0x40ff61
  40ff50:	movq   rax,xmm7
  40ff55:	shr    rax,0x20
  40ff59:	test   eax,eax
  40ff5b:	js     0x4100c0
  40ff61:	pxor   xmm0,xmm0
  40ff65:	jmp    0x40ff74
  40ff67:	nop    WORD PTR [rax+rax*1+0x0]
  40ff70:	movapd xmm0,xmm1
  40ff74:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  40ff79:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  40ff7e:	add    rsp,0x78
  40ff82:	ret    
  40ff83:	test   ecx,ecx
  40ff85:	je     0x410030
  40ff8b:	movsd  xmm1,QWORD PTR [rip+0xb8c5]        # 0x41b858
  40ff93:	mov    ecx,0x0
  40ff98:	ucomisd xmm0,xmm1
  40ff9c:	setnp  al
  40ff9f:	cmovne eax,ecx
  40ffa2:	test   al,al
  40ffa4:	jne    0x40ff70
  40ffa6:	test   edx,edx
  40ffa8:	je     0x40ff70
  40ffaa:	movq   rax,xmm7
  40ffaf:	shr    rax,0x20
  40ffb3:	test   eax,eax
  40ffb5:	js     0x4100d0
  40ffbb:	movsd  xmm6,QWORD PTR [rip+0xb88d]        # 0x41b850
  40ffc3:	mov    DWORD PTR [rsp+0x3c],edx
  40ffc7:	call   0x4160b8
  40ffcc:	mov    edx,DWORD PTR [rsp+0x3c]
  40ffd0:	pxor   xmm3,xmm3
  40ffd4:	mov    DWORD PTR [rax],0x21
  40ffda:	movapd xmm2,xmm7
  40ffde:	movsd  QWORD PTR [rsp+0x20],xmm6
  40ffe4:	mov    ecx,0x1
  40ffe9:	cvtsi2sd xmm3,edx
  40ffed:	lea    rdx,[rip+0xb84c]        # 0x41b840
  40fff4:	call   0x40bb10
  40fff9:	movapd xmm0,xmm6
  40fffd:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  410002:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  410007:	add    rsp,0x78
  41000b:	ret    
  41000c:	nop    DWORD PTR [rax+0x0]
  410010:	movapd xmm4,xmm1
  410014:	neg    eax
  410016:	divsd  xmm4,xmm0
  41001a:	movapd xmm0,xmm4
  41001e:	jmp    0x40fed1
  410023:	movapd xmm3,xmm0
  410027:	jmp    0x40fee2
  41002c:	nop    DWORD PTR [rax+0x0]
  410030:	movsd  xmm1,QWORD PTR [rip+0xb820]        # 0x41b858
  410038:	mov    r8d,edx
  41003b:	and    r8d,0x1
  41003f:	mov    ecx,0x0
  410044:	ucomisd xmm0,xmm1
  410048:	setnp  al
  41004b:	cmovne eax,ecx
  41004e:	test   al,al
  410050:	jne    0x40ff70
  410056:	test   edx,edx
  410058:	je     0x40ff70
  41005e:	movq   rax,xmm7
  410063:	shr    rax,0x20
  410067:	test   eax,eax
  410069:	js     0x4100e0
  41006b:	test   edx,edx
  41006d:	movsd  xmm0,QWORD PTR [rip+0xb7fb]        # 0x41b870
  410075:	jns    0x40ff74
  41007b:	jmp    0x40ff61
  410080:	test   eax,eax
  410082:	je     0x410140
  410088:	movq   rax,xmm7
  41008d:	movsd  xmm0,QWORD PTR [rip+0xb7db]        # 0x41b870
  410095:	shr    rax,0x20
  410099:	test   eax,eax
  41009b:	jns    0x40ff74
  4100a1:	movsd  xmm0,QWORD PTR [rip+0xb7bf]        # 0x41b868
  4100a9:	jmp    0x40ff74
  4100ae:	xchg   ax,ax
  4100b0:	test   r8d,r8d
  4100b3:	pxor   xmm0,xmm0
  4100b7:	je     0x40ff74
  4100bd:	nop    DWORD PTR [rax]
  4100c0:	movsd  xmm0,QWORD PTR [rip+0xb798]        # 0x41b860
  4100c8:	jmp    0x40ff74
  4100cd:	nop    DWORD PTR [rax]
  4100d0:	movsd  xmm6,QWORD PTR [rip+0xb770]        # 0x41b848
  4100d8:	jmp    0x40ffc3
  4100dd:	nop    DWORD PTR [rax]
  4100e0:	mov    eax,r8d
  4100e3:	mov    ecx,edx
  4100e5:	xor    eax,0x1
  4100e8:	shr    ecx,0x1f
  4100eb:	and    eax,0x1
  4100ee:	je     0x4100fc
  4100f0:	test   cl,cl
  4100f2:	pxor   xmm0,xmm0
  4100f6:	jne    0x40ff74
  4100fc:	not    edx
  4100fe:	shr    edx,0x1f
  410101:	test   r8d,r8d
  410104:	je     0x410116
  410106:	test   dl,dl
  410108:	movsd  xmm0,QWORD PTR [rip+0xb758]        # 0x41b868
  410110:	jne    0x40ff74
  410116:	test   al,al
  410118:	je     0x41012a
  41011a:	test   dl,dl
  41011c:	movsd  xmm0,QWORD PTR [rip+0xb74c]        # 0x41b870
  410124:	jne    0x40ff74
  41012a:	test   cl,cl
  41012c:	jne    0x4100b0
  41012e:	test   r8d,r8d
  410131:	movsd  xmm0,QWORD PTR [rip+0xb72f]        # 0x41b868
  410139:	jne    0x40ff74
  41013f:	nop
  410140:	movsd  xmm0,QWORD PTR [rip+0xb728]        # 0x41b870
  410148:	jmp    0x40ff74
  41014d:	nop
  41014e:	nop
  41014f:	nop
  410150:	sub    rsp,0x58
  410154:	mov    rax,QWORD PTR [rdx]
  410157:	mov    r11,rdx
  41015a:	mov    edx,DWORD PTR [rdx+0x8]
  41015d:	mov    r10,rdx
  410160:	and    r10w,0x7fff
  410166:	jne    0x410184
  410168:	mov    rdx,rax
  41016b:	shr    rdx,0x20
  41016f:	or     eax,edx
  410171:	jne    0x4101f0
  410173:	mov    DWORD PTR [rsp+0x44],0x0
  41017b:	movzx  eax,WORD PTR [r11+0x8]
  410180:	xor    edx,edx
  410182:	jmp    0x4101ab
  410184:	cmp    r10w,0x7fff
  41018a:	je     0x410210
  410190:	movzx  eax,WORD PTR [r11+0x8]
  410195:	mov    DWORD PTR [rsp+0x44],0x1
  41019d:	mov    edx,eax
  41019f:	and    edx,0x7fff
  4101a5:	sub    edx,0x403e
  4101ab:	and    eax,0x8000
  4101b0:	mov    r10,QWORD PTR [rsp+0x80]
  4101b8:	mov    DWORD PTR [r10],eax
  4101bb:	lea    rax,[rsp+0x48]
  4101c0:	mov    QWORD PTR [rsp+0x30],r9
  4101c5:	mov    DWORD PTR [rsp+0x20],ecx
  4101c9:	lea    r9,[rsp+0x44]
  4101ce:	lea    rcx,[rip+0x758b]        # 0x417760
  4101d5:	mov    DWORD PTR [rsp+0x28],r8d
  4101da:	mov    QWORD PTR [rsp+0x38],rax
  4101df:	mov    r8,r11
  4101e2:	call   0x412840
  4101e7:	add    rsp,0x58
  4101eb:	ret    
  4101ec:	nop    DWORD PTR [rax+0x0]
  4101f0:	test   edx,edx
  4101f2:	js     0x410190
  4101f4:	mov    DWORD PTR [rsp+0x44],0x2
  4101fc:	movzx  eax,WORD PTR [r11+0x8]
  410201:	mov    edx,0xffffbfc3
  410206:	jmp    0x4101ab
  410208:	nop    DWORD PTR [rax+rax*1+0x0]
  410210:	mov    rdx,rax
  410213:	shr    rdx,0x20
  410217:	and    edx,0x7fffffff
  41021d:	or     edx,eax
  41021f:	jne    0x410235
  410221:	mov    DWORD PTR [rsp+0x44],0x3
  410229:	movzx  eax,WORD PTR [r11+0x8]
  41022e:	xor    edx,edx
  410230:	jmp    0x4101ab
  410235:	mov    DWORD PTR [rsp+0x44],0x4
  41023d:	xor    edx,edx
  41023f:	xor    eax,eax
  410241:	jmp    0x4101b0
  410246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410250:	push   rbx
  410251:	sub    rsp,0x20
  410255:	mov    rbx,rdx
  410258:	mov    edx,DWORD PTR [rdx+0x8]
  41025b:	test   dh,0x40
  41025e:	jne    0x410268
  410260:	mov    eax,DWORD PTR [rbx+0x24]
  410263:	cmp    DWORD PTR [rbx+0x28],eax
  410266:	jle    0x41027a
  410268:	and    dh,0x20
  41026b:	jne    0x410290
  41026d:	movsxd rax,DWORD PTR [rbx+0x24]
  410271:	mov    rdx,QWORD PTR [rbx]
  410274:	mov    BYTE PTR [rdx+rax*1],cl
  410277:	mov    eax,DWORD PTR [rbx+0x24]
  41027a:	add    eax,0x1
  41027d:	mov    DWORD PTR [rbx+0x24],eax
  410280:	add    rsp,0x20
  410284:	pop    rbx
  410285:	ret    
  410286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410290:	mov    rdx,QWORD PTR [rbx]
  410293:	call   0x416020
  410298:	mov    eax,DWORD PTR [rbx+0x24]
  41029b:	add    eax,0x1
  41029e:	mov    DWORD PTR [rbx+0x24],eax
  4102a1:	add    rsp,0x20
  4102a5:	pop    rbx
  4102a6:	ret    
  4102a7:	nop    WORD PTR [rax+rax*1+0x0]
  4102b0:	push   r14
  4102b2:	push   r13
  4102b4:	push   r12
  4102b6:	push   rbp
  4102b7:	push   rdi
  4102b8:	push   rsi
  4102b9:	push   rbx
  4102ba:	sub    rsp,0x40
  4102be:	lea    r14,[rsp+0x2c]
  4102c3:	lea    r13,[rsp+0x30]
  4102c8:	mov    ebx,edx
  4102ca:	mov    rsi,r8
  4102cd:	xor    edx,edx
  4102cf:	mov    r12,rcx
  4102d2:	mov    r8,r14
  4102d5:	mov    rcx,r13
  4102d8:	call   0x415d50
  4102dd:	mov    ebp,DWORD PTR [rsi+0x10]
  4102e0:	cmp    ebp,ebx
  4102e2:	jge    0x410389
  4102e8:	test   ebp,ebp
  4102ea:	js     0x410389
  4102f0:	mov    eax,DWORD PTR [rsi+0xc]
  4102f3:	cmp    ebp,eax
  4102f5:	jge    0x410396
  4102fb:	sub    eax,ebp
  4102fd:	test   eax,eax
  4102ff:	mov    DWORD PTR [rsi+0xc],eax
  410302:	jle    0x410310
  410304:	test   BYTE PTR [rsi+0x9],0x4
  410308:	je     0x4103a2
  41030e:	xchg   ax,ax
  410310:	test   ebp,ebp
  410312:	jle    0x41036d
  410314:	add    r12,0x2
  410318:	movzx  edx,WORD PTR [r12-0x2]
  41031e:	mov    r8,r14
  410321:	mov    rcx,r13
  410324:	call   0x415d50
  410329:	test   eax,eax
  41032b:	jle    0x41036d
  41032d:	sub    eax,0x1
  410330:	mov    rbx,r13
  410333:	lea    rdi,[r13+rax*1+0x1]
  410338:	nop    DWORD PTR [rax+rax*1+0x0]
  410340:	add    rbx,0x1
  410344:	movsx  ecx,BYTE PTR [rbx-0x1]
  410348:	mov    rdx,rsi
  41034b:	call   0x410250
  410350:	cmp    rbx,rdi
  410353:	jne    0x410340
  410355:	sub    ebp,0x1
  410358:	jmp    0x410310
  41035a:	nop    WORD PTR [rax+rax*1+0x0]
  410360:	mov    rdx,rsi
  410363:	mov    ecx,0x20
  410368:	call   0x410250
  41036d:	mov    eax,DWORD PTR [rsi+0xc]
  410370:	lea    edx,[rax-0x1]
  410373:	test   eax,eax
  410375:	mov    DWORD PTR [rsi+0xc],edx
  410378:	jg     0x410360
  41037a:	add    rsp,0x40
  41037e:	pop    rbx
  41037f:	pop    rsi
  410380:	pop    rdi
  410381:	pop    rbp
  410382:	pop    r12
  410384:	pop    r13
  410386:	pop    r14
  410388:	ret    
  410389:	mov    eax,DWORD PTR [rsi+0xc]
  41038c:	mov    ebp,ebx
  41038e:	cmp    ebp,eax
  410390:	jl     0x4102fb
  410396:	mov    DWORD PTR [rsi+0xc],0xffffffff
  41039d:	jmp    0x410310
  4103a2:	sub    eax,0x1
  4103a5:	mov    DWORD PTR [rsi+0xc],eax
  4103a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4103b0:	mov    rdx,rsi
  4103b3:	mov    ecx,0x20
  4103b8:	call   0x410250
  4103bd:	mov    eax,DWORD PTR [rsi+0xc]
  4103c0:	lea    edx,[rax-0x1]
  4103c3:	test   eax,eax
  4103c5:	mov    DWORD PTR [rsi+0xc],edx
  4103c8:	jne    0x4103b0
  4103ca:	jmp    0x410310
  4103cf:	nop
  4103d0:	push   rdi
  4103d1:	push   rsi
  4103d2:	push   rbx
  4103d3:	sub    rsp,0x20
  4103d7:	mov    edi,DWORD PTR [r8+0x10]
  4103db:	mov    rsi,rcx
  4103de:	mov    rbx,r8
  4103e1:	cmp    edi,edx
  4103e3:	jge    0x410460
  4103e5:	test   edi,edi
  4103e7:	js     0x410460
  4103e9:	mov    eax,DWORD PTR [rbx+0xc]
  4103ec:	cmp    edi,eax
  4103ee:	jge    0x410469
  4103f0:	sub    eax,edi
  4103f2:	test   eax,eax
  4103f4:	mov    DWORD PTR [rbx+0xc],eax
  4103f7:	jle    0x4104c2
  4103fd:	test   BYTE PTR [rbx+0x9],0x4
  410401:	jne    0x410490
  410407:	sub    eax,0x1
  41040a:	mov    DWORD PTR [rbx+0xc],eax
  41040d:	nop    DWORD PTR [rax]
  410410:	mov    rdx,rbx
  410413:	mov    ecx,0x20
  410418:	call   0x410250
  41041d:	mov    eax,DWORD PTR [rbx+0xc]
  410420:	mov    edx,eax
  410422:	sub    eax,0x1
  410425:	test   edx,edx
  410427:	mov    DWORD PTR [rbx+0xc],eax
  41042a:	jne    0x410410
  41042c:	test   edi,edi
  41042e:	lea    edx,[rdi-0x1]
  410431:	je     0x4104b0
  410433:	lea    rdi,[rsi+rdx*1+0x1]
  410438:	nop    DWORD PTR [rax+rax*1+0x0]
  410440:	add    rsi,0x1
  410444:	movsx  ecx,BYTE PTR [rsi-0x1]
  410448:	mov    rdx,rbx
  41044b:	call   0x410250
  410450:	cmp    rsi,rdi
  410453:	jne    0x410440
  410455:	jmp    0x4104ad
  410457:	nop    WORD PTR [rax+rax*1+0x0]
  410460:	mov    eax,DWORD PTR [rbx+0xc]
  410463:	mov    edi,edx
  410465:	cmp    edi,eax
  410467:	jl     0x4103f0
  410469:	test   edi,edi
  41046b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  410472:	lea    edx,[rdi-0x1]
  410475:	jne    0x410433
  410477:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  41047e:	add    rsp,0x20
  410482:	pop    rbx
  410483:	pop    rsi
  410484:	pop    rdi
  410485:	ret    
  410486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410490:	test   edi,edi
  410492:	lea    edx,[rdi-0x1]
  410495:	jne    0x410433
  410497:	sub    eax,0x1
  41049a:	mov    DWORD PTR [rbx+0xc],eax
  41049d:	nop    DWORD PTR [rax]
  4104a0:	mov    rdx,rbx
  4104a3:	mov    ecx,0x20
  4104a8:	call   0x410250
  4104ad:	mov    eax,DWORD PTR [rbx+0xc]
  4104b0:	lea    edx,[rax-0x1]
  4104b3:	test   eax,eax
  4104b5:	mov    DWORD PTR [rbx+0xc],edx
  4104b8:	jg     0x4104a0
  4104ba:	add    rsp,0x20
  4104be:	pop    rbx
  4104bf:	pop    rsi
  4104c0:	pop    rdi
  4104c1:	ret    
  4104c2:	test   edi,edi
  4104c4:	lea    edx,[rdi-0x1]
  4104c7:	jne    0x410433
  4104cd:	sub    eax,0x1
  4104d0:	mov    DWORD PTR [rbx+0xc],eax
  4104d3:	jmp    0x41047e
  4104d5:	nop
  4104d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104e0:	sub    rsp,0x38
  4104e4:	test   ecx,ecx
  4104e6:	mov    DWORD PTR [r8+0x10],0xffffffff
  4104ee:	je     0x410534
  4104f0:	lea    rcx,[rsp+0x20]
  4104f5:	mov    r11d,DWORD PTR [r8+0x8]
  4104f9:	mov    BYTE PTR [rsp+0x20],0x2d
  4104fe:	lea    r10,[rcx+0x1]
  410502:	and    r11d,0x20
  410506:	xor    r9d,r9d
  410509:	movzx  eax,BYTE PTR [rdx+r9*1]
  41050e:	and    eax,0xffffffdf
  410511:	or     eax,r11d
  410514:	mov    BYTE PTR [r10+r9*1],al
  410518:	add    r9,0x1
  41051c:	cmp    r9,0x3
  410520:	jne    0x410509
  410522:	lea    rdx,[r10+0x3]
  410526:	sub    rdx,rcx
  410529:	call   0x4103d0
  41052e:	nop
  41052f:	add    rsp,0x38
  410533:	ret    
  410534:	mov    r11d,DWORD PTR [r8+0x8]
  410538:	test   r11d,0x100
  41053f:	je     0x410551
  410541:	lea    rcx,[rsp+0x20]
  410546:	mov    BYTE PTR [rsp+0x20],0x2b
  41054b:	lea    r10,[rcx+0x1]
  41054f:	jmp    0x410502
  410551:	test   r11b,0x40
  410555:	je     0x410570
  410557:	lea    rcx,[rsp+0x20]
  41055c:	mov    BYTE PTR [rsp+0x20],0x20
  410561:	lea    r10,[rcx+0x1]
  410565:	jmp    0x410502
  410567:	nop    WORD PTR [rax+rax*1+0x0]
  410570:	lea    rcx,[rsp+0x20]
  410575:	mov    r10,rcx
  410578:	jmp    0x410502
  41057a:	nop    WORD PTR [rax+rax*1+0x0]
  410580:	push   rbp
  410581:	push   r12
  410583:	push   rdi
  410584:	push   rsi
  410585:	push   rbx
  410586:	mov    rbp,rsp
  410589:	sub    rsp,0x30
  41058d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  410591:	mov    rsi,rcx
  410594:	je     0x410630
  41059a:	movzx  edx,WORD PTR [rcx+0x18]
  41059e:	test   dx,dx
  4105a1:	je     0x410602
  4105a3:	movsxd rax,DWORD PTR [rsi+0x14]
  4105a7:	mov    r12,rsp
  4105aa:	add    rax,0xf
  4105ae:	and    rax,0xfffffffffffffff0
  4105b2:	call   0x40cbf0
  4105b7:	sub    rsp,rax
  4105ba:	lea    r8,[rbp-0x4]
  4105be:	mov    DWORD PTR [rbp-0x4],0x0
  4105c5:	lea    rbx,[rsp+0x20]
  4105ca:	mov    rcx,rbx
  4105cd:	call   0x415d50
  4105d2:	test   eax,eax
  4105d4:	jle    0x410620
  4105d6:	sub    eax,0x1
  4105d9:	lea    rdi,[rbx+rax*1+0x1]
  4105de:	xchg   ax,ax
  4105e0:	add    rbx,0x1
  4105e4:	movsx  ecx,BYTE PTR [rbx-0x1]
  4105e8:	mov    rdx,rsi
  4105eb:	call   0x410250
  4105f0:	cmp    rbx,rdi
  4105f3:	jne    0x4105e0
  4105f5:	mov    rsp,r12
  4105f8:	mov    rsp,rbp
  4105fb:	pop    rbx
  4105fc:	pop    rsi
  4105fd:	pop    rdi
  4105fe:	pop    r12
  410600:	pop    rbp
  410601:	ret    
  410602:	mov    rdx,rsi
  410605:	mov    ecx,0x2e
  41060a:	call   0x410250
  41060f:	nop
  410610:	mov    rsp,rbp
  410613:	pop    rbx
  410614:	pop    rsi
  410615:	pop    rdi
  410616:	pop    r12
  410618:	pop    rbp
  410619:	ret    
  41061a:	nop    WORD PTR [rax+rax*1+0x0]
  410620:	mov    rdx,rsi
  410623:	mov    ecx,0x2e
  410628:	call   0x410250
  41062d:	jmp    0x4105f5
  41062f:	nop
  410630:	mov    DWORD PTR [rbp-0x4],0x0
  410637:	call   0x415ff8
  41063c:	mov    rdx,QWORD PTR [rax]
  41063f:	lea    rcx,[rbp-0x6]
  410643:	lea    r9,[rbp-0x4]
  410647:	mov    r8d,0x10
  41064d:	call   0x415ad0
  410652:	test   eax,eax
  410654:	jle    0x410666
  410656:	movzx  edx,WORD PTR [rbp-0x6]
  41065a:	mov    WORD PTR [rsi+0x18],dx
  41065e:	mov    DWORD PTR [rsi+0x14],eax
  410661:	jmp    0x41059e
  410666:	movzx  edx,WORD PTR [rsi+0x18]
  41066a:	jmp    0x41065e
  41066c:	nop    DWORD PTR [rax+0x0]
  410670:	push   r12
  410672:	push   rbp
  410673:	push   rdi
  410674:	push   rsi
  410675:	push   rbx
  410676:	sub    rsp,0x20
  41067a:	mov    esi,r8d
  41067d:	mov    ebp,ecx
  41067f:	mov    rdi,rdx
  410682:	test   esi,esi
  410684:	mov    rbx,r9
  410687:	mov    r8d,DWORD PTR [r9+0xc]
  41068b:	jle    0x410862
  410691:	cmp    esi,r8d
  410694:	jg     0x4107d0
  41069a:	sub    r8d,esi
  41069d:	mov    DWORD PTR [r9+0xc],r8d
  4106a1:	test   r8d,r8d
  4106a4:	js     0x4107d0
  4106aa:	mov    eax,DWORD PTR [rbx+0x10]
  4106ad:	cmp    eax,r8d
  4106b0:	jge    0x4107d0
  4106b6:	sub    r8d,eax
  4106b9:	test   r8d,r8d
  4106bc:	mov    DWORD PTR [rbx+0xc],r8d
  4106c0:	jle    0x4107dd
  4106c6:	test   eax,eax
  4106c8:	jle    0x410915
  4106ce:	sub    r8d,0x1
  4106d2:	test   esi,esi
  4106d4:	mov    DWORD PTR [rbx+0xc],r8d
  4106d8:	jle    0x4106e4
  4106da:	test   BYTE PTR [rbx+0x9],0x10
  4106de:	jne    0x4107ef
  4106e4:	test   r8d,r8d
  4106e7:	jle    0x41072d
  4106e9:	test   ebp,ebp
  4106eb:	jne    0x4106fb
  4106ed:	mov    eax,DWORD PTR [rbx+0x8]
  4106f0:	test   eax,0x1c0
  4106f5:	je     0x4108f5
  4106fb:	sub    r8d,0x1
  4106ff:	test   r8d,r8d
  410702:	mov    DWORD PTR [rbx+0xc],r8d
  410706:	jle    0x41072d
  410708:	test   DWORD PTR [rbx+0x8],0x600
  41070f:	jne    0x41072d
  410711:	jmp    0x410720
  410713:	mov    rdx,rbx
  410716:	mov    ecx,0x20
  41071b:	call   0x410250
  410720:	mov    eax,DWORD PTR [rbx+0xc]
  410723:	lea    edx,[rax-0x1]
  410726:	test   eax,eax
  410728:	mov    DWORD PTR [rbx+0xc],edx
  41072b:	jg     0x410713
  41072d:	test   ebp,ebp
  41072f:	jne    0x410850
  410735:	mov    eax,DWORD PTR [rbx+0x8]
  410738:	test   ah,0x1
  41073b:	jne    0x410880
  410741:	test   al,0x40
  410743:	jne    0x410903
  410749:	mov    edx,DWORD PTR [rbx+0xc]
  41074c:	test   edx,edx
  41074e:	jle    0x410763
  410750:	mov    eax,DWORD PTR [rbx+0x8]
  410753:	and    eax,0x600
  410758:	cmp    eax,0x200
  41075d:	je     0x410892
  410763:	test   esi,esi
  410765:	jle    0x4108c2
  41076b:	lea    r12,[rbx+0x20]
  41076f:	mov    ebp,0x55555556
  410774:	movzx  eax,BYTE PTR [rdi]
  410777:	mov    ecx,0x30
  41077c:	test   al,al
  41077e:	je     0x410787
  410780:	add    rdi,0x1
  410784:	movsx  ecx,al
  410787:	mov    rdx,rbx
  41078a:	call   0x410250
  41078f:	sub    esi,0x1
  410792:	je     0x4109b0
  410798:	test   BYTE PTR [rbx+0x9],0x10
  41079c:	je     0x410774
  41079e:	cmp    WORD PTR [rbx+0x20],0x0
  4107a3:	je     0x410774
  4107a5:	mov    eax,esi
  4107a7:	imul   ebp
  4107a9:	mov    eax,esi
  4107ab:	sar    eax,0x1f
  4107ae:	sub    edx,eax
  4107b0:	lea    eax,[rdx+rdx*2]
  4107b3:	cmp    esi,eax
  4107b5:	jne    0x410774
  4107b7:	mov    r8,rbx
  4107ba:	mov    edx,0x1
  4107bf:	mov    rcx,r12
  4107c2:	call   0x4102b0
  4107c7:	jmp    0x410774
  4107c9:	nop    DWORD PTR [rax+0x0]
  4107d0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4107d7:	mov    r8d,0xffffffff
  4107dd:	test   esi,esi
  4107df:	jle    0x41072d
  4107e5:	test   BYTE PTR [rbx+0x9],0x10
  4107e9:	je     0x41072d
  4107ef:	cmp    WORD PTR [rbx+0x20],0x0
  4107f4:	je     0x4106e4
  4107fa:	lea    ecx,[rsi+0x2]
  4107fd:	mov    edx,0x55555556
  410802:	mov    eax,ecx
  410804:	sar    ecx,0x1f
  410807:	imul   edx
  410809:	sub    edx,ecx
  41080b:	cmp    edx,0x1
  41080e:	jle    0x4106e4
  410814:	test   r8d,r8d
  410817:	jle    0x41072d
  41081d:	mov    eax,r8d
  410820:	sub    eax,edx
  410822:	add    eax,0x1
  410825:	jmp    0x410839
  410827:	nop    WORD PTR [rax+rax*1+0x0]
  410830:	test   r8d,r8d
  410833:	je     0x4109a4
  410839:	sub    r8d,0x1
  41083d:	cmp    r8d,eax
  410840:	jne    0x410830
  410842:	mov    DWORD PTR [rbx+0xc],r8d
  410846:	jmp    0x4106e4
  41084b:	nop    DWORD PTR [rax+rax*1+0x0]
  410850:	mov    rdx,rbx
  410853:	mov    ecx,0x2d
  410858:	call   0x410250
  41085d:	jmp    0x410749
  410862:	test   r8d,r8d
  410865:	jle    0x4106a1
  41086b:	sub    r8d,0x1
  41086f:	mov    DWORD PTR [r9+0xc],r8d
  410873:	jmp    0x4106aa
  410878:	nop    DWORD PTR [rax+rax*1+0x0]
  410880:	mov    rdx,rbx
  410883:	mov    ecx,0x2b
  410888:	call   0x410250
  41088d:	jmp    0x410749
  410892:	sub    edx,0x1
  410895:	mov    DWORD PTR [rbx+0xc],edx
  410898:	nop    DWORD PTR [rax+rax*1+0x0]
  4108a0:	mov    rdx,rbx
  4108a3:	mov    ecx,0x30
  4108a8:	call   0x410250
  4108ad:	mov    eax,DWORD PTR [rbx+0xc]
  4108b0:	lea    edx,[rax-0x1]
  4108b3:	test   eax,eax
  4108b5:	mov    DWORD PTR [rbx+0xc],edx
  4108b8:	jg     0x4108a0
  4108ba:	test   esi,esi
  4108bc:	jg     0x41076b
  4108c2:	mov    rdx,rbx
  4108c5:	mov    ecx,0x30
  4108ca:	call   0x410250
  4108cf:	mov    eax,DWORD PTR [rbx+0x10]
  4108d2:	test   eax,eax
  4108d4:	jg     0x410942
  4108d6:	test   BYTE PTR [rbx+0x9],0x8
  4108da:	jne    0x410942
  4108dc:	test   esi,esi
  4108de:	jne    0x410986
  4108e4:	sub    eax,0x1
  4108e7:	mov    DWORD PTR [rbx+0x10],eax
  4108ea:	add    rsp,0x20
  4108ee:	pop    rbx
  4108ef:	pop    rsi
  4108f0:	pop    rdi
  4108f1:	pop    rbp
  4108f2:	pop    r12
  4108f4:	ret    
  4108f5:	test   ah,0x6
  4108f8:	je     0x410720
  4108fe:	jmp    0x410738
  410903:	mov    rdx,rbx
  410906:	mov    ecx,0x20
  41090b:	call   0x410250
  410910:	jmp    0x410749
  410915:	mov    eax,DWORD PTR [rbx+0x8]
  410918:	test   ah,0x8
  41091b:	jne    0x4106ce
  410921:	test   esi,esi
  410923:	jle    0x4106e9
  410929:	test   ah,0x10
  41092c:	je     0x4106e9
  410932:	cmp    WORD PTR [rbx+0x20],0x0
  410937:	jne    0x4107fa
  41093d:	jmp    0x4106e9
  410942:	mov    rcx,rbx
  410945:	call   0x410580
  41094a:	test   esi,esi
  41094c:	je     0x41096b
  41094e:	jmp    0x410983
  410950:	movzx  eax,BYTE PTR [rdi]
  410953:	mov    ecx,0x30
  410958:	test   al,al
  41095a:	je     0x410963
  41095c:	add    rdi,0x1
  410960:	movsx  ecx,al
  410963:	mov    rdx,rbx
  410966:	call   0x410250
  41096b:	mov    eax,DWORD PTR [rbx+0x10]
  41096e:	lea    edx,[rax-0x1]
  410971:	test   eax,eax
  410973:	mov    DWORD PTR [rbx+0x10],edx
  410976:	jg     0x410950
  410978:	add    rsp,0x20
  41097c:	pop    rbx
  41097d:	pop    rsi
  41097e:	pop    rdi
  41097f:	pop    rbp
  410980:	pop    r12
  410982:	ret    
  410983:	mov    eax,DWORD PTR [rbx+0x10]
  410986:	add    eax,esi
  410988:	mov    DWORD PTR [rbx+0x10],eax
  41098b:	nop    DWORD PTR [rax+rax*1+0x0]
  410990:	mov    rdx,rbx
  410993:	mov    ecx,0x30
  410998:	call   0x410250
  41099d:	add    esi,0x1
  4109a0:	jne    0x410990
  4109a2:	jmp    0x41096b
  4109a4:	mov    DWORD PTR [rbx+0xc],0x0
  4109ab:	jmp    0x41072d
  4109b0:	mov    eax,DWORD PTR [rbx+0x10]
  4109b3:	test   eax,eax
  4109b5:	jle    0x4109c1
  4109b7:	mov    rcx,rbx
  4109ba:	call   0x410580
  4109bf:	jmp    0x41096b
  4109c1:	test   BYTE PTR [rbx+0x9],0x8
  4109c5:	jne    0x4109b7
  4109c7:	jmp    0x4108e4
  4109cc:	nop    DWORD PTR [rax+0x0]
  4109d0:	push   rsi
  4109d1:	push   rbx
  4109d2:	sub    rsp,0x68
  4109d6:	mov    r8d,DWORD PTR [rdx+0x10]
  4109da:	fld    TBYTE PTR [rcx]
  4109dc:	mov    rbx,rdx
  4109df:	test   r8d,r8d
  4109e2:	js     0x410a80
  4109e8:	lea    rdx,[rsp+0x30]
  4109ed:	lea    r9,[rsp+0x4c]
  4109f2:	mov    ecx,0x3
  4109f7:	fstp   TBYTE PTR [rsp+0x50]
  4109fb:	mov    rax,QWORD PTR [rsp+0x50]
  410a00:	mov    QWORD PTR [rsp+0x30],rax
  410a05:	mov    rax,QWORD PTR [rsp+0x58]
  410a0a:	mov    QWORD PTR [rsp+0x38],rax
  410a0f:	lea    rax,[rsp+0x48]
  410a14:	mov    QWORD PTR [rsp+0x20],rax
  410a19:	call   0x410150
  410a1e:	mov    r8d,DWORD PTR [rsp+0x4c]
  410a23:	mov    rsi,rax
  410a26:	cmp    r8d,0xffff8000
  410a2d:	je     0x410a92
  410a2f:	mov    ecx,DWORD PTR [rsp+0x48]
  410a33:	mov    rdx,rax
  410a36:	mov    r9,rbx
  410a39:	call   0x410670
  410a3e:	mov    eax,DWORD PTR [rbx+0xc]
  410a41:	lea    edx,[rax-0x1]
  410a44:	test   eax,eax
  410a46:	mov    DWORD PTR [rbx+0xc],edx
  410a49:	jle    0x410a6e
  410a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  410a50:	mov    rdx,rbx
  410a53:	mov    ecx,0x20
  410a58:	call   0x410250
  410a5d:	mov    r8d,DWORD PTR [rbx+0xc]
  410a61:	lea    r9d,[r8-0x1]
  410a65:	test   r8d,r8d
  410a68:	mov    DWORD PTR [rbx+0xc],r9d
  410a6c:	jg     0x410a50
  410a6e:	mov    rcx,rsi
  410a71:	call   0x4126a0
  410a76:	nop
  410a77:	add    rsp,0x68
  410a7b:	pop    rbx
  410a7c:	pop    rsi
  410a7d:	ret    
  410a7e:	xchg   ax,ax
  410a80:	mov    DWORD PTR [rdx+0x10],0x6
  410a87:	mov    r8d,0x6
  410a8d:	jmp    0x4109e8
  410a92:	mov    ecx,DWORD PTR [rsp+0x48]
  410a96:	mov    r8,rbx
  410a99:	mov    rdx,rax
  410a9c:	call   0x4104e0
  410aa1:	mov    rcx,rsi
  410aa4:	call   0x4126a0
  410aa9:	nop
  410aaa:	add    rsp,0x68
  410aae:	pop    rbx
  410aaf:	pop    rsi
  410ab0:	ret    
  410ab1:	nop    DWORD PTR [rax+rax*1+0x0]
  410ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ac0:	push   rbp
  410ac1:	push   r13
  410ac3:	push   r12
  410ac5:	push   rdi
  410ac6:	push   rsi
  410ac7:	push   rbx
  410ac8:	sub    rsp,0x28
  410acc:	lea    rbp,[rsp+0x80]
  410ad4:	mov    ebx,DWORD PTR [rdx+0x10]
  410ad7:	mov    r11d,DWORD PTR [rdx+0x8]
  410adb:	mov    r8d,0x0
  410ae1:	mov    rsi,rdx
  410ae4:	test   ebx,ebx
  410ae6:	cmovns r8d,ebx
  410aea:	add    r8d,0x17
  410aee:	test   r11d,0x1000
  410af5:	je     0x410b02
  410af7:	cmp    WORD PTR [rdx+0x20],0x0
  410afc:	jne    0x410cf2
  410b02:	movsxd r13,DWORD PTR [rsi+0xc]
  410b06:	movsxd rax,r8d
  410b09:	cmp    r8d,r13d
  410b0c:	cmovl  rax,r13
  410b10:	add    rax,0x1e
  410b14:	and    rax,0xfffffffffffffff0
  410b18:	call   0x40cbf0
  410b1d:	sub    rsp,rax
  410b20:	test   r11b,0x80
  410b24:	lea    r12,[rsp+0x20]
  410b29:	je     0x410b3c
  410b2b:	test   rcx,rcx
  410b2e:	js     0x410d80
  410b34:	and    r11b,0x7f
  410b38:	mov    DWORD PTR [rsi+0x8],r11d
  410b3c:	test   rcx,rcx
  410b3f:	je     0x410d88
  410b45:	mov    r10d,r11d
  410b48:	mov    r8,r12
  410b4b:	movabs r9,0xcccccccccccccccd
  410b55:	and    r10d,0x1000
  410b5c:	jmp    0x410b93
  410b5e:	xchg   ax,ax
  410b60:	cmp    r12,rdi
  410b63:	je     0x410b90
  410b65:	test   r10d,r10d
  410b68:	je     0x410b90
  410b6a:	cmp    WORD PTR [rsi+0x20],0x0
  410b6f:	je     0x410b90
  410b71:	mov    rax,rdi
  410b74:	sub    rax,r12
  410b77:	cqo    
  410b79:	shr    rdx,0x3e
  410b7d:	add    rax,rdx
  410b80:	and    eax,0x3
  410b83:	sub    rax,rdx
  410b86:	cmp    rax,0x3
  410b8a:	je     0x410cd0
  410b90:	mov    r8,rdi
  410b93:	mov    rax,rcx
  410b96:	lea    rdi,[r8+0x1]
  410b9a:	mul    r9
  410b9d:	shr    rdx,0x3
  410ba1:	lea    rax,[rdx+rdx*4]
  410ba5:	add    rax,rax
  410ba8:	sub    rcx,rax
  410bab:	add    ecx,0x30
  410bae:	test   rdx,rdx
  410bb1:	mov    BYTE PTR [r8],cl
  410bb4:	mov    rcx,rdx
  410bb7:	jne    0x410b60
  410bb9:	test   ebx,ebx
  410bbb:	jle    0x410bf5
  410bbd:	mov    rax,r12
  410bc0:	sub    rax,rdi
  410bc3:	add    eax,ebx
  410bc5:	test   eax,eax
  410bc7:	jle    0x410bf5
  410bc9:	sub    eax,0x1
  410bcc:	mov    rdx,rax
  410bcf:	lea    rcx,[rdi+rax*1+0x1]
  410bd4:	mov    rax,rdi
  410bd7:	nop    WORD PTR [rax+rax*1+0x0]
  410be0:	add    rax,0x1
  410be4:	mov    BYTE PTR [rax-0x1],0x30
  410be8:	cmp    rax,rcx
  410beb:	jne    0x410be0
  410bed:	movsxd rax,edx
  410bf0:	lea    rdi,[rdi+rax*1+0x1]
  410bf5:	cmp    r12,rdi
  410bf8:	jne    0x410c05
  410bfa:	test   ebx,ebx
  410bfc:	je     0x410c05
  410bfe:	mov    BYTE PTR [rdi],0x30
  410c01:	add    rdi,0x1
  410c05:	test   r13d,r13d
  410c08:	jle    0x410c6e
  410c0a:	mov    rax,r12
  410c0d:	sub    rax,rdi
  410c10:	add    r13d,eax
  410c13:	test   r13d,r13d
  410c16:	mov    DWORD PTR [rsi+0xc],r13d
  410c1a:	jle    0x410c6e
  410c1c:	test   r11d,0x1c0
  410c23:	je     0x410c2d
  410c25:	sub    r13d,0x1
  410c29:	mov    DWORD PTR [rsi+0xc],r13d
  410c2d:	test   ebx,ebx
  410c2f:	js     0x410d30
  410c35:	test   r11d,0x400
  410c3c:	jne    0x410c6e
  410c3e:	mov    eax,DWORD PTR [rsi+0xc]
  410c41:	lea    edx,[rax-0x1]
  410c44:	test   eax,eax
  410c46:	mov    DWORD PTR [rsi+0xc],edx
  410c49:	jle    0x410c6e
  410c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  410c50:	mov    rdx,rsi
  410c53:	mov    ecx,0x20
  410c58:	call   0x410250
  410c5d:	mov    eax,DWORD PTR [rsi+0xc]
  410c60:	lea    edx,[rax-0x1]
  410c63:	test   eax,eax
  410c65:	mov    DWORD PTR [rsi+0xc],edx
  410c68:	jg     0x410c50
  410c6a:	mov    r11d,DWORD PTR [rsi+0x8]
  410c6e:	test   r11b,0x80
  410c72:	je     0x410ce0
  410c74:	lea    rbx,[rdi+0x1]
  410c78:	mov    BYTE PTR [rdi],0x2d
  410c7b:	cmp    r12,rbx
  410c7e:	jae    0x410cae
  410c80:	sub    rbx,0x1
  410c84:	movsx  ecx,BYTE PTR [rbx]
  410c87:	mov    rdx,rsi
  410c8a:	call   0x410250
  410c8f:	cmp    rbx,r12
  410c92:	jne    0x410c80
  410c94:	mov    eax,DWORD PTR [rsi+0xc]
  410c97:	lea    edx,[rax-0x1]
  410c9a:	test   eax,eax
  410c9c:	mov    DWORD PTR [rsi+0xc],edx
  410c9f:	jle    0x410cbb
  410ca1:	mov    rdx,rsi
  410ca4:	mov    ecx,0x20
  410ca9:	call   0x410250
  410cae:	mov    eax,DWORD PTR [rsi+0xc]
  410cb1:	lea    edx,[rax-0x1]
  410cb4:	test   eax,eax
  410cb6:	mov    DWORD PTR [rsi+0xc],edx
  410cb9:	jg     0x410ca1
  410cbb:	lea    rsp,[rbp-0x58]
  410cbf:	pop    rbx
  410cc0:	pop    rsi
  410cc1:	pop    rdi
  410cc2:	pop    r12
  410cc4:	pop    r13
  410cc6:	pop    rbp
  410cc7:	ret    
  410cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  410cd0:	lea    rdi,[r8+0x2]
  410cd4:	mov    BYTE PTR [r8+0x1],0x2c
  410cd9:	jmp    0x410b90
  410cde:	xchg   ax,ax
  410ce0:	test   r11d,0x100
  410ce7:	je     0x410d10
  410ce9:	lea    rbx,[rdi+0x1]
  410ced:	mov    BYTE PTR [rdi],0x2b
  410cf0:	jmp    0x410c7b
  410cf2:	mov    eax,r8d
  410cf5:	mov    edx,0x55555556
  410cfa:	imul   edx
  410cfc:	mov    eax,r8d
  410cff:	sar    eax,0x1f
  410d02:	sub    edx,eax
  410d04:	add    r8d,edx
  410d07:	jmp    0x410b02
  410d0c:	nop    DWORD PTR [rax+0x0]
  410d10:	and    r11d,0x40
  410d14:	mov    rbx,rdi
  410d17:	je     0x410c7b
  410d1d:	add    rbx,0x1
  410d21:	mov    BYTE PTR [rdi],0x20
  410d24:	jmp    0x410c7b
  410d29:	nop    DWORD PTR [rax+0x0]
  410d30:	mov    eax,r11d
  410d33:	and    eax,0x600
  410d38:	cmp    eax,0x200
  410d3d:	jne    0x410c35
  410d43:	mov    eax,DWORD PTR [rsi+0xc]
  410d46:	lea    ecx,[rax-0x1]
  410d49:	test   eax,eax
  410d4b:	mov    DWORD PTR [rsi+0xc],ecx
  410d4e:	jle    0x410c6e
  410d54:	lea    rdx,[rdi+rcx*1+0x1]
  410d59:	mov    rax,rdi
  410d5c:	nop    DWORD PTR [rax+0x0]
  410d60:	add    rax,0x1
  410d64:	mov    BYTE PTR [rax-0x1],0x30
  410d68:	cmp    rax,rdx
  410d6b:	jne    0x410d60
  410d6d:	lea    rdi,[rdi+rcx*1+0x1]
  410d72:	mov    DWORD PTR [rsi+0xc],0xffffffff
  410d79:	jmp    0x410c6e
  410d7e:	xchg   ax,ax
  410d80:	neg    rcx
  410d83:	jmp    0x410b3c
  410d88:	mov    rdi,r12
  410d8b:	jmp    0x410bb9
  410d90:	push   rdi
  410d91:	push   rsi
  410d92:	push   rbx
  410d93:	sub    rsp,0x20
  410d97:	mov    rsi,r9
  410d9a:	lea    r9d,[r8-0x1]
  410d9e:	mov    r8d,0x66666667
  410da4:	mov    r10,rdx
  410da7:	mov    eax,r9d
  410daa:	movsxd rbx,r9d
  410dad:	sar    r9d,0x1f
  410db1:	imul   r8d
  410db4:	sar    edx,0x2
  410db7:	mov    r8d,edx
  410dba:	sub    r8d,r9d
  410dbd:	mov    r9d,0x1
  410dc3:	je     0x410deb
  410dc5:	mov    r11d,0x66666667
  410dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  410dd0:	mov    eax,r8d
  410dd3:	sar    r8d,0x1f
  410dd7:	add    r9d,0x1
  410ddb:	imul   r11d
  410dde:	mov    eax,edx
  410de0:	sar    eax,0x2
  410de3:	sub    eax,r8d
  410de6:	mov    r8d,eax
  410de9:	jne    0x410dd0
  410deb:	mov    edi,DWORD PTR [rsi+0x2c]
  410dee:	mov    eax,DWORD PTR [rsi+0xc]
  410df1:	cmp    r9d,edi
  410df4:	cmovge edi,r9d
  410df8:	lea    edx,[rdi+0x2]
  410dfb:	cmp    eax,edx
  410dfd:	jg     0x410e52
  410dff:	mov    DWORD PTR [rsi+0xc],0xffffffff
  410e06:	mov    r9,rsi
  410e09:	mov    rdx,r10
  410e0c:	mov    r8d,0x1
  410e12:	call   0x410670
  410e17:	mov    ecx,DWORD PTR [rsi+0x8]
  410e1a:	mov    eax,DWORD PTR [rsi+0x2c]
  410e1d:	mov    rdx,rsi
  410e20:	mov    DWORD PTR [rsi+0x10],eax
  410e23:	mov    eax,ecx
  410e25:	and    ecx,0x20
  410e28:	or     eax,0x1c0
  410e2d:	or     ecx,0x45
  410e30:	mov    DWORD PTR [rsi+0x8],eax
  410e33:	call   0x410250
  410e38:	lea    r9d,[rdi+0x1]
  410e3c:	add    DWORD PTR [rsi+0xc],r9d
  410e40:	mov    rdx,rsi
  410e43:	mov    rcx,rbx
  410e46:	add    rsp,0x20
  410e4a:	pop    rbx
  410e4b:	pop    rsi
  410e4c:	pop    rdi
  410e4d:	jmp    0x410ac0
  410e52:	sub    eax,edx
  410e54:	mov    DWORD PTR [rsi+0xc],eax
  410e57:	jmp    0x410e06
  410e59:	nop    DWORD PTR [rax+0x0]
  410e60:	push   rsi
  410e61:	push   rbx
  410e62:	sub    rsp,0x68
  410e66:	mov    eax,DWORD PTR [rdx+0x10]
  410e69:	fld    TBYTE PTR [rcx]
  410e6b:	mov    rbx,rdx
  410e6e:	test   eax,eax
  410e70:	lea    r8d,[rax+0x1]
  410e74:	js     0x410ee0
  410e76:	lea    rdx,[rsp+0x30]
  410e7b:	lea    r9,[rsp+0x4c]
  410e80:	mov    ecx,0x2
  410e85:	fstp   TBYTE PTR [rsp+0x50]
  410e89:	mov    rax,QWORD PTR [rsp+0x50]
  410e8e:	mov    QWORD PTR [rsp+0x30],rax
  410e93:	mov    rax,QWORD PTR [rsp+0x58]
  410e98:	mov    QWORD PTR [rsp+0x38],rax
  410e9d:	lea    rax,[rsp+0x48]
  410ea2:	mov    QWORD PTR [rsp+0x20],rax
  410ea7:	call   0x410150
  410eac:	mov    r8d,DWORD PTR [rsp+0x4c]
  410eb1:	mov    rsi,rax
  410eb4:	cmp    r8d,0xffff8000
  410ebb:	je     0x410ef0
  410ebd:	mov    ecx,DWORD PTR [rsp+0x48]
  410ec1:	mov    r9,rbx
  410ec4:	mov    rdx,rax
  410ec7:	call   0x410d90
  410ecc:	mov    rcx,rsi
  410ecf:	call   0x4126a0
  410ed4:	nop
  410ed5:	add    rsp,0x68
  410ed9:	pop    rbx
  410eda:	pop    rsi
  410edb:	ret    
  410edc:	nop    DWORD PTR [rax+0x0]
  410ee0:	mov    DWORD PTR [rdx+0x10],0x6
  410ee7:	mov    r8d,0x7
  410eed:	jmp    0x410e76
  410eef:	nop
  410ef0:	mov    ecx,DWORD PTR [rsp+0x48]
  410ef4:	mov    r8,rbx
  410ef7:	mov    rdx,rax
  410efa:	call   0x4104e0
  410eff:	mov    rcx,rsi
  410f02:	call   0x4126a0
  410f07:	nop
  410f08:	add    rsp,0x68
  410f0c:	pop    rbx
  410f0d:	pop    rsi
  410f0e:	ret    
  410f0f:	nop
  410f10:	push   rsi
  410f11:	push   rbx
  410f12:	sub    rsp,0x78
  410f16:	mov    r8d,DWORD PTR [rdx+0x10]
  410f1a:	fld    TBYTE PTR [rcx]
  410f1c:	mov    rbx,rdx
  410f1f:	test   r8d,r8d
  410f22:	js     0x411060
  410f28:	je     0x411040
  410f2e:	lea    rdx,[rsp+0x40]
  410f33:	lea    r9,[rsp+0x5c]
  410f38:	mov    ecx,0x2
  410f3d:	fstp   TBYTE PTR [rsp+0x60]
  410f41:	mov    rax,QWORD PTR [rsp+0x60]
  410f46:	mov    QWORD PTR [rsp+0x40],rax
  410f4b:	mov    rax,QWORD PTR [rsp+0x68]
  410f50:	mov    QWORD PTR [rsp+0x48],rax
  410f55:	lea    rax,[rsp+0x58]
  410f5a:	mov    QWORD PTR [rsp+0x20],rax
  410f5f:	call   0x410150
  410f64:	mov    r8d,DWORD PTR [rsp+0x5c]
  410f69:	mov    rsi,rax
  410f6c:	cmp    r8d,0xffff8000
  410f73:	je     0x411080
  410f79:	cmp    r8d,0xfffffffd
  410f7d:	jl     0x411000
  410f83:	mov    eax,DWORD PTR [rbx+0x10]
  410f86:	cmp    r8d,eax
  410f89:	jg     0x411000
  410f8b:	test   BYTE PTR [rbx+0x9],0x8
  410f8f:	jne    0x411072
  410f95:	mov    rcx,rsi
  410f98:	mov    DWORD PTR [rsp+0x3c],r8d
  410f9d:	call   0x415f68
  410fa2:	mov    r8d,DWORD PTR [rsp+0x3c]
  410fa7:	sub    eax,r8d
  410faa:	test   eax,eax
  410fac:	mov    DWORD PTR [rbx+0x10],eax
  410faf:	js     0x411091
  410fb5:	mov    ecx,DWORD PTR [rsp+0x58]
  410fb9:	mov    rdx,rsi
  410fbc:	mov    r9,rbx
  410fbf:	call   0x410670
  410fc4:	mov    eax,DWORD PTR [rbx+0xc]
  410fc7:	lea    edx,[rax-0x1]
  410fca:	test   eax,eax
  410fcc:	mov    DWORD PTR [rbx+0xc],edx
  410fcf:	jle    0x41102d
  410fd1:	mov    rdx,rbx
  410fd4:	mov    ecx,0x20
  410fd9:	call   0x410250
  410fde:	mov    r8d,DWORD PTR [rbx+0xc]
  410fe2:	lea    r9d,[r8-0x1]
  410fe6:	test   r8d,r8d
  410fe9:	mov    DWORD PTR [rbx+0xc],r9d
  410fed:	jg     0x410fd1
  410fef:	mov    rcx,rsi
  410ff2:	call   0x4126a0
  410ff7:	nop
  410ff8:	add    rsp,0x78
  410ffc:	pop    rbx
  410ffd:	pop    rsi
  410ffe:	ret    
  410fff:	nop
  411000:	test   BYTE PTR [rbx+0x9],0x8
  411004:	jne    0x411052
  411006:	mov    rcx,rsi
  411009:	mov    DWORD PTR [rsp+0x3c],r8d
  41100e:	call   0x415f68
  411013:	mov    r8d,DWORD PTR [rsp+0x3c]
  411018:	sub    eax,0x1
  41101b:	mov    DWORD PTR [rbx+0x10],eax
  41101e:	mov    ecx,DWORD PTR [rsp+0x58]
  411022:	mov    r9,rbx
  411025:	mov    rdx,rsi
  411028:	call   0x410d90
  41102d:	mov    rcx,rsi
  411030:	call   0x4126a0
  411035:	nop
  411036:	add    rsp,0x78
  41103a:	pop    rbx
  41103b:	pop    rsi
  41103c:	ret    
  41103d:	nop    DWORD PTR [rax]
  411040:	mov    DWORD PTR [rdx+0x10],0x1
  411047:	mov    r8d,0x1
  41104d:	jmp    0x410f2e
  411052:	sub    DWORD PTR [rbx+0x10],0x1
  411056:	jmp    0x41101e
  411058:	nop    DWORD PTR [rax+rax*1+0x0]
  411060:	mov    DWORD PTR [rdx+0x10],0x6
  411067:	mov    r8d,0x6
  41106d:	jmp    0x410f2e
  411072:	sub    eax,r8d
  411075:	mov    DWORD PTR [rbx+0x10],eax
  411078:	jmp    0x410fb5
  41107d:	nop    DWORD PTR [rax]
  411080:	mov    ecx,DWORD PTR [rsp+0x58]
  411084:	mov    r8,rbx
  411087:	mov    rdx,rax
  41108a:	call   0x4104e0
  41108f:	jmp    0x41102d
  411091:	mov    edx,DWORD PTR [rbx+0xc]
  411094:	test   edx,edx
  411096:	jle    0x410fb5
  41109c:	add    eax,edx
  41109e:	mov    DWORD PTR [rbx+0xc],eax
  4110a1:	jmp    0x410fb5
  4110a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110b0:	push   rbp
  4110b1:	push   r14
  4110b3:	push   r13
  4110b5:	push   r12
  4110b7:	push   rdi
  4110b8:	push   rsi
  4110b9:	push   rbx
  4110ba:	mov    rbp,rsp
  4110bd:	sub    rsp,0x20
  4110c1:	mov    r10d,0x12
  4110c7:	mov    eax,0x18
  4110cc:	cmp    ecx,0x6f
  4110cf:	mov    rbx,r8
  4110d2:	mov    r8d,DWORD PTR [r8+0x10]
  4110d6:	mov    r11d,ecx
  4110d9:	setne  cl
  4110dc:	mov    edi,DWORD PTR [rbx+0x8]
  4110df:	movzx  ecx,cl
  4110e2:	cmovne eax,r10d
  4110e6:	mov    r10b,0x0
  4110e9:	add    ecx,0x3
  4110ec:	test   r8d,r8d
  4110ef:	mov    r9,rdx
  4110f2:	cmovns r10d,r8d
  4110f6:	add    r10d,eax
  4110f9:	test   edi,0x1000
  4110ff:	je     0x41110c
  411101:	cmp    WORD PTR [rbx+0x20],0x0
  411106:	jne    0x4112d3
  41110c:	movsxd r12,DWORD PTR [rbx+0xc]
  411110:	movsxd rax,r10d
  411113:	cmp    r10d,r12d
  411116:	cmovl  rax,r12
  41111a:	add    rax,0x1e
  41111e:	and    rax,0xfffffffffffffff0
  411122:	call   0x40cbf0
  411127:	xor    edx,edx
  411129:	sub    rsp,rax
  41112c:	cmp    r11d,0x6f
  411130:	lea    rsi,[rsp+0x20]
  411135:	setne  dl
  411138:	test   r9,r9
  41113b:	lea    edx,[rdx*8+0x7]
  411142:	mov    r10,rsi
  411145:	je     0x4113f2
  41114b:	mov    r13d,r11d
  41114e:	and    r13d,0x20
  411152:	jmp    0x411160
  411154:	shr    r9,cl
  411157:	mov    BYTE PTR [r10-0x1],r14b
  41115b:	test   r9,r9
  41115e:	je     0x411185
  411160:	mov    eax,edx
  411162:	add    r10,0x1
  411166:	and    eax,r9d
  411169:	lea    r14d,[rax+0x30]
  41116d:	cmp    r14b,0x39
  411171:	jbe    0x411154
  411173:	add    eax,0x37
  411176:	shr    r9,cl
  411179:	or     eax,r13d
  41117c:	test   r9,r9
  41117f:	mov    BYTE PTR [r10-0x1],al
  411183:	jne    0x411160
  411185:	cmp    rsi,r10
  411188:	je     0x4113f2
  41118e:	test   r8d,r8d
  411191:	jle    0x411352
  411197:	mov    rax,rsi
  41119a:	sub    rax,r10
  41119d:	add    eax,r8d
  4111a0:	test   eax,eax
  4111a2:	jle    0x411352
  4111a8:	sub    eax,0x1
  4111ab:	mov    rdx,rax
  4111ae:	lea    rcx,[r10+rax*1+0x1]
  4111b3:	mov    rax,r10
  4111b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4111c0:	add    rax,0x1
  4111c4:	mov    BYTE PTR [rax-0x1],0x30
  4111c8:	cmp    rax,rcx
  4111cb:	jne    0x4111c0
  4111cd:	movsxd rax,edx
  4111d0:	lea    r10,[r10+rax*1+0x1]
  4111d5:	cmp    rsi,r10
  4111d8:	jne    0x4111f0
  4111da:	test   r8d,r8d
  4111dd:	je     0x4111f0
  4111df:	mov    BYTE PTR [r10],0x30
  4111e3:	add    r10,0x1
  4111e7:	nop    WORD PTR [rax+rax*1+0x0]
  4111f0:	mov    rax,r10
  4111f3:	sub    rax,rsi
  4111f6:	cmp    r12d,eax
  4111f9:	jle    0x411320
  4111ff:	sub    r12d,eax
  411202:	test   r12d,r12d
  411205:	mov    DWORD PTR [rbx+0xc],r12d
  411209:	jle    0x411457
  41120f:	cmp    r11d,0x6f
  411213:	mov    edx,DWORD PTR [rbx+0x8]
  411216:	je     0x4113e0
  41121c:	test   dh,0x8
  41121f:	je     0x4113a0
  411225:	lea    r13d,[r12-0x2]
  41122a:	test   r13d,r13d
  41122d:	jle    0x411238
  41122f:	test   r8d,r8d
  411232:	js     0x4112ed
  411238:	test   r13d,r13d
  41123b:	mov    BYTE PTR [r10],r11b
  41123e:	lea    rdi,[r10+0x2]
  411242:	mov    BYTE PTR [r10+0x1],0x30
  411247:	jle    0x411348
  41124d:	and    dh,0x4
  411250:	jne    0x411373
  411256:	lea    r14d,[r13-0x1]
  41125a:	mov    r12d,r14d
  41125d:	nop    DWORD PTR [rax]
  411260:	sub    r12d,0x1
  411264:	mov    rdx,rbx
  411267:	mov    ecx,0x20
  41126c:	call   0x410250
  411271:	lea    eax,[r12+0x1]
  411276:	test   eax,eax
  411278:	jg     0x411260
  41127a:	test   r14d,r14d
  41127d:	lea    r13d,[r14-0x1]
  411281:	mov    r12d,0x0
  411287:	cmovns r12d,r14d
  41128b:	sub    r13d,r12d
  41128e:	cmp    rsi,rdi
  411291:	jb     0x411380
  411297:	nop    WORD PTR [rax+rax*1+0x0]
  4112a0:	test   r13d,r13d
  4112a3:	lea    esi,[r13-0x1]
  4112a7:	jle    0x4112c5
  4112a9:	nop    DWORD PTR [rax+0x0]
  4112b0:	mov    rdx,rbx
  4112b3:	mov    ecx,0x20
  4112b8:	sub    esi,0x1
  4112bb:	call   0x410250
  4112c0:	cmp    esi,0xffffffff
  4112c3:	jne    0x4112b0
  4112c5:	mov    rsp,rbp
  4112c8:	pop    rbx
  4112c9:	pop    rsi
  4112ca:	pop    rdi
  4112cb:	pop    r12
  4112cd:	pop    r13
  4112cf:	pop    r14
  4112d1:	pop    rbp
  4112d2:	ret    
  4112d3:	mov    eax,r10d
  4112d6:	mov    edx,0x55555556
  4112db:	imul   edx
  4112dd:	mov    eax,r10d
  4112e0:	sar    eax,0x1f
  4112e3:	sub    edx,eax
  4112e5:	add    r10d,edx
  4112e8:	jmp    0x41110c
  4112ed:	mov    eax,edx
  4112ef:	and    eax,0x600
  4112f4:	cmp    eax,0x200
  4112f9:	je     0x411400
  4112ff:	mov    r12d,r13d
  411302:	test   dh,0x8
  411305:	mov    r13d,r12d
  411308:	mov    rdi,r10
  41130b:	je     0x41124d
  411311:	mov    r13d,r12d
  411314:	jmp    0x411238
  411319:	nop    DWORD PTR [rax+0x0]
  411320:	mov    DWORD PTR [rbx+0xc],0xffffffff
  411327:	mov    r13d,0xffffffff
  41132d:	cmp    r11d,0x6f
  411331:	je     0x411345
  411333:	mov    edx,DWORD PTR [rbx+0x8]
  411336:	mov    eax,edx
  411338:	and    eax,0x800
  41133d:	test   eax,eax
  41133f:	jne    0x411238
  411345:	mov    rdi,r10
  411348:	cmp    rsi,rdi
  41134b:	jb     0x411380
  41134d:	jmp    0x4112c5
  411352:	cmp    r11d,0x6f
  411356:	jne    0x4111d5
  41135c:	test   BYTE PTR [rbx+0x9],0x8
  411360:	je     0x4111d5
  411366:	mov    BYTE PTR [r10],0x30
  41136a:	add    r10,0x1
  41136e:	jmp    0x4111d5
  411373:	cmp    rsi,rdi
  411376:	jae    0x41145f
  41137c:	nop    DWORD PTR [rax+0x0]
  411380:	sub    rdi,0x1
  411384:	movsx  ecx,BYTE PTR [rdi]
  411387:	mov    rdx,rbx
  41138a:	call   0x410250
  41138f:	cmp    rsi,rdi
  411392:	jb     0x411380
  411394:	jmp    0x4112a0
  411399:	nop    DWORD PTR [rax+0x0]
  4113a0:	test   r8d,r8d
  4113a3:	jns    0x411302
  4113a9:	mov    eax,edx
  4113ab:	and    eax,0x600
  4113b0:	cmp    eax,0x200
  4113b5:	je     0x41144e
  4113bb:	cmp    r11d,0x6f
  4113bf:	jne    0x411302
  4113c5:	and    dh,0x4
  4113c8:	jne    0x4113ea
  4113ca:	lea    r14d,[r12-0x1]
  4113cf:	mov    rdi,r10
  4113d2:	jmp    0x41125a
  4113d7:	nop    WORD PTR [rax+rax*1+0x0]
  4113e0:	test   r8d,r8d
  4113e3:	js     0x4113a9
  4113e5:	and    dh,0x4
  4113e8:	je     0x4113ca
  4113ea:	mov    rdi,r10
  4113ed:	mov    r13d,r12d
  4113f0:	jmp    0x41138f
  4113f2:	and    edi,0xfffff7ff
  4113f8:	mov    DWORD PTR [rbx+0x8],edi
  4113fb:	jmp    0x41118e
  411400:	lea    r8d,[r12-0x3]
  411405:	mov    r12d,r8d
  411408:	mov    eax,r12d
  41140b:	lea    rcx,[r10+rax*1+0x1]
  411410:	mov    rax,r10
  411413:	add    rax,0x1
  411417:	mov    BYTE PTR [rax-0x1],0x30
  41141b:	cmp    rax,rcx
  41141e:	jne    0x411413
  411420:	movsxd rax,r8d
  411423:	cmp    r11d,0x6f
  411427:	lea    r10,[r10+rax*1+0x1]
  41142c:	je     0x411440
  41142e:	mov    eax,edx
  411430:	mov    r13d,0xffffffff
  411436:	and    eax,0x800
  41143b:	jmp    0x41133d
  411440:	mov    rdi,r10
  411443:	mov    r13d,0xffffffff
  411449:	jmp    0x411348
  41144e:	sub    r12d,0x1
  411452:	mov    r8d,r12d
  411455:	jmp    0x411408
  411457:	mov    r13d,r12d
  41145a:	jmp    0x41132d
  41145f:	lea    esi,[r13-0x1]
  411463:	jmp    0x4112b0
  411468:	nop    DWORD PTR [rax+rax*1+0x0]
  411470:	push   r13
  411472:	push   r12
  411474:	push   rbp
  411475:	push   rdi
  411476:	push   rsi
  411477:	push   rbx
  411478:	sub    rsp,0x68
  41147c:	mov    r9,QWORD PTR [rcx]
  41147f:	mov    r10d,DWORD PTR [rcx+0x8]
  411483:	mov    rbx,rdx
  411486:	mov    rax,r9
  411489:	mov    QWORD PTR [rsp+0x30],r9
  41148e:	mov    DWORD PTR [rsp+0x38],r10d
  411493:	shr    rax,0x20
  411497:	mov    r8,r10
  41149a:	and    eax,0x7fffffff
  41149f:	or     r9d,eax
  4114a2:	lea    eax,[r10+r10*1]
  4114a6:	mov    edx,r9d
  4114a9:	neg    edx
  4114ab:	and    eax,0xfffe
  4114b0:	or     edx,r9d
  4114b3:	shr    edx,0x1f
  4114b6:	or     edx,eax
  4114b8:	mov    eax,0xfffe
  4114bd:	sub    eax,edx
  4114bf:	sar    eax,0x10
  4114c2:	test   eax,eax
  4114c4:	jne    0x4118b0
  4114ca:	movzx  esi,WORD PTR [rsp+0x38]
  4114cf:	mov    ecx,esi
  4114d1:	and    ecx,0x8000
  4114d7:	je     0x4114e0
  4114d9:	or     DWORD PTR [rbx+0x8],0x80
  4114e0:	and    r8w,0x7fff
  4114e6:	cmp    r8w,0x7fff
  4114ec:	jne    0x411510
  4114ee:	test   r9d,r9d
  4114f1:	jne    0x411510
  4114f3:	lea    rdx,[rip+0xa3aa]        # 0x41b8a4
  4114fa:	mov    r8,rbx
  4114fd:	call   0x4104e0
  411502:	jmp    0x411885
  411507:	nop    WORD PTR [rax+rax*1+0x0]
  411510:	and    si,0x7fff
  411515:	jne    0x411640
  41151b:	mov    rax,QWORD PTR [rsp+0x30]
  411520:	test   rax,rax
  411523:	jne    0x4118cf
  411529:	mov    r9d,DWORD PTR [rbx+0x10]
  41152d:	cmp    r9d,0xe
  411531:	jbe    0x41194c
  411537:	xor    esi,esi
  411539:	mov    r8d,DWORD PTR [rbx+0x8]
  41153d:	lea    rbp,[rsp+0x40]
  411542:	test   r9d,r9d
  411545:	jle    0x41195c
  41154b:	lea    rax,[rbp+0x1]
  41154f:	mov    BYTE PTR [rsp+0x40],0x2e
  411554:	mov    r10d,DWORD PTR [rbx+0xc]
  411558:	lea    rdi,[rax+0x1]
  41155c:	mov    BYTE PTR [rax],0x30
  41155f:	mov    r12d,0x2
  411565:	test   r10d,r10d
  411568:	jg     0x41176c
  41156e:	xchg   ax,ax
  411570:	test   r8b,0x80
  411574:	jne    0x411830
  41157a:	test   r8d,0x100
  411581:	jne    0x411920
  411587:	and    r8d,0x40
  41158b:	jne    0x411932
  411591:	mov    rdx,rbx
  411594:	mov    ecx,0x30
  411599:	call   0x410250
  41159e:	mov    ecx,DWORD PTR [rbx+0x8]
  4115a1:	mov    rdx,rbx
  4115a4:	and    ecx,0x20
  4115a7:	or     ecx,0x58
  4115aa:	call   0x410250
  4115af:	mov    eax,DWORD PTR [rbx+0xc]
  4115b2:	test   eax,eax
  4115b4:	jle    0x4115dc
  4115b6:	test   BYTE PTR [rbx+0x9],0x2
  4115ba:	je     0x4115dc
  4115bc:	sub    eax,0x1
  4115bf:	mov    DWORD PTR [rbx+0xc],eax
  4115c2:	mov    rdx,rbx
  4115c5:	mov    ecx,0x30
  4115ca:	call   0x410250
  4115cf:	mov    eax,DWORD PTR [rbx+0xc]
  4115d2:	lea    edx,[rax-0x1]
  4115d5:	test   eax,eax
  4115d7:	mov    DWORD PTR [rbx+0xc],edx
  4115da:	jg     0x4115c2
  4115dc:	cmp    rdi,rbp
  4115df:	lea    r13,[rsp+0x2e]
  4115e4:	ja     0x411619
  4115e6:	jmp    0x41184f
  4115eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4115f0:	movzx  eax,WORD PTR [rbx+0x20]
  4115f4:	test   ax,ax
  4115f7:	mov    WORD PTR [rsp+0x2e],ax
  4115fc:	je     0x411610
  4115fe:	mov    r8,rbx
  411601:	mov    edx,0x1
  411606:	mov    rcx,r13
  411609:	call   0x4102b0
  41160e:	xchg   ax,ax
  411610:	cmp    rdi,rbp
  411613:	je     0x41184f
  411619:	sub    rdi,0x1
  41161d:	movsx  ecx,BYTE PTR [rdi]
  411620:	cmp    ecx,0x2e
  411623:	je     0x411892
  411629:	cmp    ecx,0x2c
  41162c:	je     0x4115f0
  41162e:	mov    rdx,rbx
  411631:	call   0x410250
  411636:	jmp    0x411610
  411638:	nop    DWORD PTR [rax+rax*1+0x0]
  411640:	mov    r9d,DWORD PTR [rbx+0x10]
  411644:	sub    si,0x3fff
  411649:	mov    rax,QWORD PTR [rsp+0x30]
  41164e:	cmp    r9d,0xe
  411652:	ja     0x4118fd
  411658:	test   rax,rax
  41165b:	js     0x411665
  41165d:	nop    DWORD PTR [rax]
  411660:	add    rax,rax
  411663:	jns    0x411660
  411665:	mov    ecx,0xe
  41166a:	mov    edx,0x4
  41166f:	shr    rax,1
  411672:	sub    ecx,r9d
  411675:	shl    ecx,0x2
  411678:	shl    rdx,cl
  41167b:	add    rax,rdx
  41167e:	js     0x411944
  411684:	add    rax,rax
  411687:	mov    ecx,0xf
  41168c:	sub    ecx,r9d
  41168f:	shl    ecx,0x2
  411692:	shr    rax,cl
  411695:	mov    r8d,DWORD PTR [rbx+0x8]
  411699:	lea    rbp,[rsp+0x40]
  41169e:	mov    rdi,rbp
  4116a1:	mov    r11d,r8d
  4116a4:	mov    r10d,r8d
  4116a7:	and    r11d,0x800
  4116ae:	and    r10d,0x20
  4116b2:	jmp    0x4116e3
  4116b4:	mov    ecx,DWORD PTR [rbx+0x10]
  4116b7:	test   ecx,ecx
  4116b9:	jle    0x4116c1
  4116bb:	sub    ecx,0x1
  4116be:	mov    DWORD PTR [rbx+0x10],ecx
  4116c1:	shr    rax,0x4
  4116c5:	mov    r9,rdi
  4116c8:	test   edx,edx
  4116ca:	je     0x411734
  4116cc:	cmp    edx,0x9
  4116cf:	lea    rdi,[r9+0x1]
  4116d3:	jle    0x411747
  4116d5:	add    edx,0x37
  4116d8:	or     edx,r10d
  4116db:	mov    BYTE PTR [r9],dl
  4116de:	test   rax,rax
  4116e1:	je     0x411750
  4116e3:	mov    edx,eax
  4116e5:	and    edx,0xf
  4116e8:	cmp    edx,eax
  4116ea:	jne    0x4116b4
  4116ec:	cmp    rdi,rbp
  4116ef:	ja     0x411702
  4116f1:	test   r11d,r11d
  4116f4:	jne    0x411702
  4116f6:	mov    r12d,DWORD PTR [rbx+0x10]
  4116fa:	mov    r9,rdi
  4116fd:	test   r12d,r12d
  411700:	jle    0x411709
  411702:	lea    r9,[rdi+0x1]
  411706:	mov    BYTE PTR [rdi],0x2e
  411709:	cmp    rax,0x1
  41170d:	jbe    0x411919
  411713:	lea    ecx,[rsi-0x1]
  411716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411720:	shr    rax,1
  411723:	mov    esi,ecx
  411725:	cmp    rax,0x1
  411729:	lea    ecx,[rsi-0x1]
  41172c:	jne    0x411720
  41172e:	xor    al,al
  411730:	test   edx,edx
  411732:	jne    0x4116cc
  411734:	cmp    r9,rbp
  411737:	ja     0x411743
  411739:	mov    ecx,DWORD PTR [rbx+0x10]
  41173c:	mov    rdi,r9
  41173f:	test   ecx,ecx
  411741:	js     0x4116de
  411743:	lea    rdi,[r9+0x1]
  411747:	add    edx,0x30
  41174a:	jmp    0x4116db
  41174c:	nop    DWORD PTR [rax+0x0]
  411750:	cmp    rdi,rbp
  411753:	je     0x411953
  411759:	mov    r10d,DWORD PTR [rbx+0xc]
  41175d:	mov    r12d,0x2
  411763:	test   r10d,r10d
  411766:	jle    0x411570
  41176c:	mov    edx,DWORD PTR [rbx+0x10]
  41176f:	mov    rax,rdi
  411772:	movsx  r11d,si
  411776:	sub    rax,rbp
  411779:	lea    ecx,[rdx+rax*1]
  41177c:	test   edx,edx
  41177e:	mov    edx,r8d
  411781:	cmovg  eax,ecx
  411784:	and    edx,0x1c0
  41178a:	mov    ecx,0x66666667
  41178f:	cmp    edx,0x1
  411792:	sbb    edx,edx
  411794:	lea    r9d,[rax+rdx*1+0x6]
  411799:	mov    eax,r11d
  41179c:	imul   ecx
  41179e:	mov    eax,r11d
  4117a1:	sar    eax,0x1f
  4117a4:	mov    ecx,edx
  4117a6:	sar    ecx,0x2
  4117a9:	sub    ecx,eax
  4117ab:	je     0x4117d0
  4117ad:	mov    r11d,0x66666667
  4117b3:	mov    eax,ecx
  4117b5:	sar    ecx,0x1f
  4117b8:	add    r9d,0x1
  4117bc:	imul   r11d
  4117bf:	add    r12d,0x1
  4117c3:	sar    edx,0x2
  4117c6:	sub    edx,ecx
  4117c8:	mov    ecx,edx
  4117ca:	jne    0x4117b3
  4117cc:	movsx  r12d,r12w
  4117d0:	cmp    r10d,r9d
  4117d3:	jle    0x4118a0
  4117d9:	sub    r10d,r9d
  4117dc:	test   r8d,0x600
  4117e3:	jne    0x411910
  4117e9:	lea    eax,[r10-0x1]
  4117ed:	test   r10d,r10d
  4117f0:	mov    DWORD PTR [rbx+0xc],eax
  4117f3:	jle    0x411570
  4117f9:	nop    DWORD PTR [rax+0x0]
  411800:	mov    rdx,rbx
  411803:	mov    ecx,0x20
  411808:	call   0x410250
  41180d:	mov    eax,DWORD PTR [rbx+0xc]
  411810:	lea    edx,[rax-0x1]
  411813:	test   eax,eax
  411815:	mov    DWORD PTR [rbx+0xc],edx
  411818:	jg     0x411800
  41181a:	mov    r8d,DWORD PTR [rbx+0x8]
  41181e:	test   r8b,0x80
  411822:	je     0x41157a
  411828:	nop    DWORD PTR [rax+rax*1+0x0]
  411830:	mov    rdx,rbx
  411833:	mov    ecx,0x2d
  411838:	call   0x410250
  41183d:	jmp    0x411591
  411842:	mov    rdx,rbx
  411845:	mov    ecx,0x30
  41184a:	call   0x410250
  41184f:	mov    eax,DWORD PTR [rbx+0x10]
  411852:	lea    edx,[rax-0x1]
  411855:	test   eax,eax
  411857:	mov    DWORD PTR [rbx+0x10],edx
  41185a:	jg     0x411842
  41185c:	mov    ecx,DWORD PTR [rbx+0x8]
  41185f:	mov    rdx,rbx
  411862:	and    ecx,0x20
  411865:	or     ecx,0x50
  411868:	call   0x410250
  41186d:	add    DWORD PTR [rbx+0xc],r12d
  411871:	or     DWORD PTR [rbx+0x8],0x1c0
  411878:	movsx  rcx,si
  41187c:	mov    rdx,rbx
  41187f:	call   0x410ac0
  411884:	nop
  411885:	add    rsp,0x68
  411889:	pop    rbx
  41188a:	pop    rsi
  41188b:	pop    rdi
  41188c:	pop    rbp
  41188d:	pop    r12
  41188f:	pop    r13
  411891:	ret    
  411892:	mov    rcx,rbx
  411895:	call   0x410580
  41189a:	jmp    0x411610
  41189f:	nop
  4118a0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  4118a7:	jmp    0x411570
  4118ac:	nop    DWORD PTR [rax+0x0]
  4118b0:	lea    rdx,[rip+0x9fe9]        # 0x41b8a0
  4118b7:	mov    r8,rbx
  4118ba:	xor    ecx,ecx
  4118bc:	call   0x4104e0
  4118c1:	nop
  4118c2:	add    rsp,0x68
  4118c6:	pop    rbx
  4118c7:	pop    rsi
  4118c8:	pop    rdi
  4118c9:	pop    rbp
  4118ca:	pop    r12
  4118cc:	pop    r13
  4118ce:	ret    
  4118cf:	js     0x411971
  4118d5:	mov    edx,0xffffc001
  4118da:	nop    WORD PTR [rax+rax*1+0x0]
  4118e0:	mov    esi,edx
  4118e2:	sub    edx,0x1
  4118e5:	add    rax,rax
  4118e8:	jns    0x4118e0
  4118ea:	mov    r9d,DWORD PTR [rbx+0x10]
  4118ee:	cmp    r9d,0xe
  4118f2:	jbe    0x411665
  4118f8:	jmp    0x411695
  4118fd:	test   rax,rax
  411900:	jne    0x411695
  411906:	jmp    0x411539
  41190b:	nop    DWORD PTR [rax+rax*1+0x0]
  411910:	mov    DWORD PTR [rbx+0xc],r10d
  411914:	jmp    0x411570
  411919:	xor    eax,eax
  41191b:	jmp    0x4116c8
  411920:	mov    rdx,rbx
  411923:	mov    ecx,0x2b
  411928:	call   0x410250
  41192d:	jmp    0x411591
  411932:	mov    rdx,rbx
  411935:	mov    ecx,0x20
  41193a:	call   0x410250
  41193f:	jmp    0x411591
  411944:	add    esi,0x1
  411947:	jmp    0x411687
  41194c:	xor    eax,eax
  41194e:	jmp    0x411660
  411953:	mov    r9d,DWORD PTR [rbx+0x10]
  411957:	jmp    0x411542
  41195c:	test   r8d,0x800
  411963:	mov    rax,rbp
  411966:	je     0x411554
  41196c:	jmp    0x41154b
  411971:	mov    esi,0xffffc002
  411976:	jmp    0x4118ea
  41197b:	nop    DWORD PTR [rax+rax*1+0x0]
  411980:	push   r15
  411982:	push   r14
  411984:	push   r13
  411986:	push   r12
  411988:	push   rbp
  411989:	push   rdi
  41198a:	push   rsi
  41198b:	push   rbx
  41198c:	sub    rsp,0xb8
  411993:	mov    r13,QWORD PTR [rsp+0x120]
  41199b:	mov    r15d,ecx
  41199e:	mov    rdi,rdx
  4119a1:	mov    esi,r8d
  4119a4:	mov    rbx,r9
  4119a7:	and    r15d,0x6000
  4119ae:	call   0x4160b8
  4119b3:	mov    eax,DWORD PTR [rax]
  4119b5:	lea    rcx,[rip+0x9f01]        # 0x41b8bd
  4119bc:	xor    edx,edx
  4119be:	mov    QWORD PTR [rsp+0x80],rdi
  4119c6:	mov    DWORD PTR [rsp+0x88],r15d
  4119ce:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  4119d9:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4119e4:	mov    DWORD PTR [rsp+0x34],eax
  4119e8:	xor    eax,eax
  4119ea:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  4119f5:	mov    WORD PTR [rsp+0x98],ax
  4119fd:	mov    DWORD PTR [rsp+0x9c],0x0
  411a08:	mov    WORD PTR [rsp+0xa0],dx
  411a10:	mov    DWORD PTR [rsp+0xa4],0x0
  411a1b:	mov    DWORD PTR [rsp+0xa8],esi
  411a22:	call   0x416000
  411a27:	test   rax,rax
  411a2a:	je     0x411a3c
  411a2c:	movsx  edx,BYTE PTR [rax]
  411a2f:	mov    eax,0x2
  411a34:	sub    edx,0x30
  411a37:	cmp    edx,0x2
  411a3a:	jbe    0x411a49
  411a3c:	call   0x4161f0
  411a41:	and    eax,0x1
  411a44:	neg    eax
  411a46:	add    eax,0x3
  411a49:	lea    rdi,[rsp+0x70]
  411a4e:	mov    DWORD PTR [rsp+0xac],eax
  411a55:	movzx  eax,BYTE PTR [rbx]
  411a58:	lea    rsi,[rsp+0x6e]
  411a5d:	lea    r12,[rsp+0x80]
  411a65:	lea    rbp,[rip+0x9e68]        # 0x41b8d4
  411a6c:	mov    QWORD PTR [rsp+0x28],rdi
  411a71:	lea    rdi,[rsp+0x50]
  411a76:	mov    QWORD PTR [rsp+0x38],rsi
  411a7b:	mov    QWORD PTR [rsp+0x20],rdi
  411a80:	mov    edi,r15d
  411a83:	or     edi,0x200
  411a89:	mov    DWORD PTR [rsp+0x48],edi
  411a8d:	nop    DWORD PTR [rax]
  411a90:	movsx  ecx,al
  411a93:	lea    rsi,[rbx+0x1]
  411a97:	test   ecx,ecx
  411a99:	je     0x411b1a
  411a9b:	cmp    ecx,0x25
  411a9e:	jne    0x411b00
  411aa0:	movzx  eax,BYTE PTR [rbx+0x1]
  411aa4:	xor    r10d,r10d
  411aa7:	xor    r14d,r14d
  411aaa:	mov    DWORD PTR [rsp+0x88],r15d
  411ab2:	mov    DWORD PTR [rsp+0x90],0xffffffff
  411abd:	mov    rdi,rsi
  411ac0:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  411acb:	lea    r11,[r12+0xc]
  411ad0:	test   al,al
  411ad2:	je     0x411c7b
  411ad8:	lea    edx,[rax-0x20]
  411adb:	lea    rbx,[rdi+0x1]
  411adf:	movsx  ecx,al
  411ae2:	cmp    dl,0x5a
  411ae5:	ja     0x4120f0
  411aeb:	movzx  edx,dl
  411aee:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  411af3:	add    rdx,rbp
  411af6:	jmp    rdx
  411af8:	nop    DWORD PTR [rax+rax*1+0x0]
  411b00:	mov    rdx,r12
  411b03:	call   0x410250
  411b08:	movzx  eax,BYTE PTR [rbx+0x1]
  411b0c:	mov    rbx,rsi
  411b0f:	lea    rsi,[rbx+0x1]
  411b13:	movsx  ecx,al
  411b16:	test   ecx,ecx
  411b18:	jne    0x411a9b
  411b1a:	mov    eax,DWORD PTR [rsp+0xa4]
  411b21:	add    rsp,0xb8
  411b28:	pop    rbx
  411b29:	pop    rsi
  411b2a:	pop    rdi
  411b2b:	pop    rbp
  411b2c:	pop    r12
  411b2e:	pop    r13
  411b30:	pop    r14
  411b32:	pop    r15
  411b34:	ret    
  411b35:	sub    r10d,0x2
  411b39:	mov    rax,r13
  411b3c:	cmp    r10d,0x1
  411b40:	jbe    0x412133
  411b46:	mov    rsi,QWORD PTR [rax]
  411b49:	add    r13,0x8
  411b4d:	test   rsi,rsi
  411b50:	je     0x411c15
  411b56:	mov    rcx,rsi
  411b59:	call   0x415f68
  411b5e:	mov    edx,eax
  411b60:	mov    r8,r12
  411b63:	mov    rcx,rsi
  411b66:	call   0x4103d0
  411b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  411b70:	movzx  eax,BYTE PTR [rbx]
  411b73:	jmp    0x411a90
  411b78:	nop    DWORD PTR [rax+rax*1+0x0]
  411b80:	test   r14d,r14d
  411b83:	jne    0x411b93
  411b85:	cmp    DWORD PTR [rsp+0x88],r15d
  411b8d:	je     0x4122fb
  411b93:	mov    rdx,QWORD PTR [r13+0x0]
  411b97:	lea    rsi,[r13+0x8]
  411b9b:	mov    r8,r12
  411b9e:	mov    ecx,0x78
  411ba3:	mov    QWORD PTR [rsp+0x78],0x0
  411bac:	mov    r13,rsi
  411baf:	mov    QWORD PTR [rsp+0x70],rdx
  411bb4:	call   0x4110b0
  411bb9:	jmp    0x411b70
  411bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  411bc0:	cmp    r10d,0x5
  411bc4:	mov    rax,QWORD PTR [r13+0x0]
  411bc8:	je     0x41223a
  411bce:	cmp    r10d,0x1
  411bd2:	je     0x4122c4
  411bd8:	cmp    r10d,0x2
  411bdc:	je     0x411be8
  411bde:	cmp    r10d,0x3
  411be2:	je     0x41236c
  411be8:	mov    edx,DWORD PTR [rsp+0xa4]
  411bef:	add    r13,0x8
  411bf3:	mov    DWORD PTR [rax],edx
  411bf5:	jmp    0x411b70
  411bfa:	nop    WORD PTR [rax+rax*1+0x0]
  411c00:	mov    ecx,DWORD PTR [rsp+0x34]
  411c04:	call   0x415f70
  411c09:	test   rax,rax
  411c0c:	mov    rsi,rax
  411c0f:	jne    0x411b56
  411c15:	mov    edx,0x6
  411c1a:	lea    rsi,[rip+0x9c95]        # 0x41b8b6
  411c21:	jmp    0x411b60
  411c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c30:	movzx  eax,BYTE PTR [rdi+0x1]
  411c34:	mov    r10d,0x2
  411c3a:	mov    r14d,0x4
  411c40:	cmp    al,0x6c
  411c42:	jne    0x411c70
  411c44:	lea    rbx,[rdi+0x2]
  411c48:	movzx  eax,BYTE PTR [rdi+0x2]
  411c4c:	mov    r10d,0x3
  411c52:	mov    r14d,0x4
  411c58:	jmp    0x411c70
  411c5a:	nop    WORD PTR [rax+rax*1+0x0]
  411c60:	movzx  eax,BYTE PTR [rdi+0x1]
  411c64:	mov    r10d,0x3
  411c6a:	mov    r14d,0x4
  411c70:	test   al,al
  411c72:	mov    rdi,rbx
  411c75:	jne    0x411ad8
  411c7b:	mov    rbx,rdi
  411c7e:	jmp    0x411a90
  411c83:	mov    eax,DWORD PTR [rsp+0x88]
  411c8a:	mov    rdx,r13
  411c8d:	add    r13,0x8
  411c91:	or     eax,0x20
  411c94:	test   al,0x4
  411c96:	mov    DWORD PTR [rsp+0x88],eax
  411c9d:	je     0x411efb
  411ca3:	mov    rax,QWORD PTR [rdx]
  411ca6:	mov    rcx,QWORD PTR [rsp+0x20]
  411cab:	mov    rdx,r12
  411cae:	fld    TBYTE PTR [rax]
  411cb0:	fstp   TBYTE PTR [rsp+0x50]
  411cb4:	call   0x410f10
  411cb9:	jmp    0x411b70
  411cbe:	xchg   ax,ax
  411cc0:	movzx  eax,BYTE PTR [rdi+0x1]
  411cc4:	mov    r10d,0x1
  411cca:	mov    r14d,0x4
  411cd0:	cmp    al,0x68
  411cd2:	jne    0x411c70
  411cd4:	lea    rbx,[rdi+0x2]
  411cd8:	movzx  eax,BYTE PTR [rdi+0x2]
  411cdc:	mov    r10d,0x5
  411ce2:	mov    r14d,0x4
  411ce8:	jmp    0x411c70
  411cea:	nop    WORD PTR [rax+rax*1+0x0]
  411cf0:	mov    eax,DWORD PTR [rsp+0x88]
  411cf7:	mov    rdx,r13
  411cfa:	add    r13,0x8
  411cfe:	or     eax,0x20
  411d01:	test   al,0x4
  411d03:	mov    DWORD PTR [rsp+0x88],eax
  411d0a:	je     0x411f29
  411d10:	mov    rax,QWORD PTR [rdx]
  411d13:	mov    rcx,QWORD PTR [rsp+0x20]
  411d18:	mov    rdx,r12
  411d1b:	fld    TBYTE PTR [rax]
  411d1d:	fstp   TBYTE PTR [rsp+0x50]
  411d21:	call   0x4109d0
  411d26:	jmp    0x411b70
  411d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  411d30:	mov    eax,DWORD PTR [rsp+0x88]
  411d37:	mov    rdx,r13
  411d3a:	add    r13,0x8
  411d3e:	or     eax,0x20
  411d41:	test   al,0x4
  411d43:	mov    DWORD PTR [rsp+0x88],eax
  411d4a:	je     0x411f57
  411d50:	mov    rax,QWORD PTR [rdx]
  411d53:	mov    rcx,QWORD PTR [rsp+0x20]
  411d58:	mov    rdx,r12
  411d5b:	fld    TBYTE PTR [rax]
  411d5d:	fstp   TBYTE PTR [rsp+0x50]
  411d61:	call   0x410e60
  411d66:	jmp    0x411b70
  411d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  411d70:	cmp    r10d,0x3
  411d74:	je     0x41224c
  411d7a:	cmp    r10d,0x2
  411d7e:	je     0x4122e9
  411d84:	mov    eax,DWORD PTR [r13+0x0]
  411d88:	cmp    r10d,0x1
  411d8c:	lea    rdx,[r13+0x8]
  411d90:	mov    QWORD PTR [rsp+0x70],rax
  411d95:	je     0x41232b
  411d9b:	cmp    r10d,0x5
  411d9f:	mov    r13,rdx
  411da2:	je     0x412380
  411da8:	cmp    ecx,0x75
  411dab:	je     0x41228c
  411db1:	mov    r8,r12
  411db4:	mov    rdx,rax
  411db7:	call   0x4110b0
  411dbc:	jmp    0x411b70
  411dc1:	sub    r10d,0x2
  411dc5:	mov    rax,r13
  411dc8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  411dd3:	cmp    r10d,0x1
  411dd7:	jbe    0x411f7b
  411ddd:	mov    eax,DWORD PTR [rax]
  411ddf:	mov    rcx,QWORD PTR [rsp+0x28]
  411de4:	mov    r8,r12
  411de7:	mov    edx,0x1
  411dec:	add    r13,0x8
  411df0:	mov    BYTE PTR [rsp+0x70],al
  411df4:	call   0x4103d0
  411df9:	jmp    0x411b70
  411dfe:	xchg   ax,ax
  411e00:	mov    eax,DWORD PTR [rsp+0x88]
  411e07:	mov    rdx,r13
  411e0a:	add    r13,0x8
  411e0e:	or     eax,0x20
  411e11:	test   al,0x4
  411e13:	mov    DWORD PTR [rsp+0x88],eax
  411e1a:	je     0x411fb8
  411e20:	mov    rax,QWORD PTR [rdx]
  411e23:	mov    rcx,QWORD PTR [rsp+0x20]
  411e28:	mov    rdx,r12
  411e2b:	fld    TBYTE PTR [rax]
  411e2d:	fstp   TBYTE PTR [rsp+0x50]
  411e31:	call   0x411470
  411e36:	jmp    0x411b70
  411e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  411e40:	or     DWORD PTR [rsp+0x88],0x80
  411e4b:	cmp    r10d,0x3
  411e4f:	je     0x412228
  411e55:	cmp    r10d,0x2
  411e59:	je     0x4122d7
  411e5f:	movsxd rcx,DWORD PTR [r13+0x0]
  411e63:	cmp    r10d,0x1
  411e67:	lea    rax,[r13+0x8]
  411e6b:	mov    QWORD PTR [rsp+0x70],rcx
  411e70:	je     0x41233d
  411e76:	cmp    r10d,0x5
  411e7a:	mov    r13,rax
  411e7d:	je     0x41238f
  411e83:	mov    rax,rcx
  411e86:	mov    rdx,r12
  411e89:	sar    rax,0x3f
  411e8d:	mov    QWORD PTR [rsp+0x78],rax
  411e92:	call   0x410ac0
  411e97:	jmp    0x411b70
  411e9c:	nop    DWORD PTR [rax+0x0]
  411ea0:	or     DWORD PTR [rsp+0x88],0x4
  411ea8:	movzx  eax,BYTE PTR [rdi+0x1]
  411eac:	mov    r14d,0x4
  411eb2:	jmp    0x411c70
  411eb7:	nop    WORD PTR [rax+rax*1+0x0]
  411ec0:	movzx  eax,BYTE PTR [rdi+0x1]
  411ec4:	cmp    al,0x36
  411ec6:	je     0x412208
  411ecc:	cmp    al,0x33
  411ece:	je     0x41229c
  411ed4:	mov    r10d,0x3
  411eda:	mov    r14d,0x4
  411ee0:	jmp    0x411c70
  411ee5:	mov    eax,DWORD PTR [rsp+0x88]
  411eec:	mov    rdx,r13
  411eef:	add    r13,0x8
  411ef3:	test   al,0x4
  411ef5:	jne    0x411ca3
  411efb:	mov    rcx,QWORD PTR [rsp+0x20]
  411f00:	fld    QWORD PTR [rdx]
  411f02:	mov    rdx,r12
  411f05:	fstp   TBYTE PTR [rsp+0x50]
  411f09:	call   0x410f10
  411f0e:	jmp    0x411b70
  411f13:	mov    eax,DWORD PTR [rsp+0x88]
  411f1a:	mov    rdx,r13
  411f1d:	add    r13,0x8
  411f21:	test   al,0x4
  411f23:	jne    0x411d10
  411f29:	mov    rcx,QWORD PTR [rsp+0x20]
  411f2e:	fld    QWORD PTR [rdx]
  411f30:	mov    rdx,r12
  411f33:	fstp   TBYTE PTR [rsp+0x50]
  411f37:	call   0x4109d0
  411f3c:	jmp    0x411b70
  411f41:	mov    eax,DWORD PTR [rsp+0x88]
  411f48:	mov    rdx,r13
  411f4b:	add    r13,0x8
  411f4f:	test   al,0x4
  411f51:	jne    0x411d50
  411f57:	mov    rcx,QWORD PTR [rsp+0x20]
  411f5c:	fld    QWORD PTR [rdx]
  411f5e:	mov    rdx,r12
  411f61:	fstp   TBYTE PTR [rsp+0x50]
  411f65:	call   0x410e60
  411f6a:	jmp    0x411b70
  411f6f:	nop
  411f70:	mov    DWORD PTR [rsp+0x90],0xffffffff
  411f7b:	mov    eax,DWORD PTR [r13+0x0]
  411f7f:	mov    rcx,QWORD PTR [rsp+0x28]
  411f84:	lea    rsi,[r13+0x8]
  411f88:	mov    r8,r12
  411f8b:	mov    edx,0x1
  411f90:	mov    r13,rsi
  411f93:	mov    WORD PTR [rsp+0x70],ax
  411f98:	call   0x4102b0
  411f9d:	jmp    0x411b70
  411fa2:	mov    eax,DWORD PTR [rsp+0x88]
  411fa9:	mov    rdx,r13
  411fac:	add    r13,0x8
  411fb0:	test   al,0x4
  411fb2:	jne    0x411e20
  411fb8:	mov    rcx,QWORD PTR [rsp+0x20]
  411fbd:	fld    QWORD PTR [rdx]
  411fbf:	mov    rdx,r12
  411fc2:	fstp   TBYTE PTR [rsp+0x50]
  411fc6:	call   0x411470
  411fcb:	jmp    0x411b70
  411fd0:	test   r14d,r14d
  411fd3:	jne    0x412170
  411fd9:	or     DWORD PTR [rsp+0x88],0x200
  411fe4:	movzx  eax,BYTE PTR [rdi+0x1]
  411fe8:	jmp    0x411c70
  411fed:	nop    DWORD PTR [rax]
  411ff0:	cmp    r14d,0x1
  411ff4:	jbe    0x41225e
  411ffa:	movzx  eax,BYTE PTR [rdi+0x1]
  411ffe:	mov    r14d,0x4
  412004:	jmp    0x411c70
  412009:	nop    DWORD PTR [rax+0x0]
  412010:	test   r14d,r14d
  412013:	jne    0x412099
  412019:	or     DWORD PTR [rsp+0x88],0x400
  412024:	movzx  eax,BYTE PTR [rdi+0x1]
  412028:	jmp    0x411c70
  41202d:	nop    DWORD PTR [rax]
  412030:	test   r14d,r14d
  412033:	jne    0x412099
  412035:	or     DWORD PTR [rsp+0x88],0x100
  412040:	movzx  eax,BYTE PTR [rdi+0x1]
  412044:	jmp    0x411c70
  412049:	nop    DWORD PTR [rax+0x0]
  412050:	test   r14d,r14d
  412053:	jne    0x412099
  412055:	or     DWORD PTR [rsp+0x88],0x800
  412060:	movzx  eax,BYTE PTR [rdi+0x1]
  412064:	jmp    0x411c70
  412069:	nop    DWORD PTR [rax+0x0]
  412070:	test   r14d,r14d
  412073:	jne    0x412099
  412075:	or     DWORD PTR [rsp+0x88],0x40
  41207d:	movzx  eax,BYTE PTR [rdi+0x1]
  412081:	jmp    0x411c70
  412086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412090:	test   r14d,r14d
  412093:	je     0x4121a2
  412099:	movzx  eax,BYTE PTR [rdi+0x1]
  41209d:	jmp    0x411c70
  4120a2:	mov    rdx,r12
  4120a5:	call   0x410250
  4120aa:	jmp    0x411b70
  4120af:	nop
  4120b0:	test   r11,r11
  4120b3:	je     0x411ffa
  4120b9:	test   r14d,0xfffffffd
  4120c0:	jne    0x412190
  4120c6:	mov    eax,DWORD PTR [r13+0x0]
  4120ca:	lea    rdx,[r13+0x8]
  4120ce:	test   eax,eax
  4120d0:	mov    DWORD PTR [r11],eax
  4120d3:	js     0x412350
  4120d9:	movzx  eax,BYTE PTR [rdi+0x1]
  4120dd:	mov    r13,rdx
  4120e0:	xor    r11d,r11d
  4120e3:	jmp    0x411c70
  4120e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4120f0:	sub    eax,0x30
  4120f3:	cmp    al,0x9
  4120f5:	ja     0x412316
  4120fb:	cmp    r14d,0x3
  4120ff:	ja     0x412316
  412105:	test   r14d,r14d
  412108:	jne    0x41217a
  41210a:	mov    r14d,0x1
  412110:	test   r11,r11
  412113:	je     0x412099
  412115:	mov    eax,DWORD PTR [r11]
  412118:	test   eax,eax
  41211a:	js     0x41227d
  412120:	lea    eax,[rax+rax*4]
  412123:	lea    eax,[rcx+rax*2-0x30]
  412127:	mov    DWORD PTR [r11],eax
  41212a:	movzx  eax,BYTE PTR [rdi+0x1]
  41212e:	jmp    0x411c70
  412133:	mov    rsi,QWORD PTR [r13+0x0]
  412137:	lea    rax,[rip+0x976a]        # 0x41b8a8
  41213e:	lea    rdi,[r13+0x8]
  412142:	mov    r13,rdi
  412145:	test   rsi,rsi
  412148:	cmove  rsi,rax
  41214c:	mov    rcx,rsi
  41214f:	call   0x415ef8
  412154:	mov    r8,r12
  412157:	mov    edx,eax
  412159:	mov    rcx,rsi
  41215c:	call   0x4102b0
  412161:	jmp    0x411b70
  412166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412170:	cmp    r14d,0x3
  412174:	ja     0x412316
  41217a:	cmp    r14d,0x2
  41217e:	mov    eax,0x3
  412183:	cmove  r14d,eax
  412187:	jmp    0x412110
  412189:	nop    DWORD PTR [rax+0x0]
  412190:	movzx  eax,BYTE PTR [rdi+0x1]
  412194:	xor    r11d,r11d
  412197:	mov    r14d,0x4
  41219d:	jmp    0x411c70
  4121a2:	mov    DWORD PTR [rsp+0x4c],r10d
  4121a7:	mov    QWORD PTR [rsp+0x40],r11
  4121ac:	or     DWORD PTR [rsp+0x88],0x1000
  4121b7:	mov    DWORD PTR [rsp+0x70],0x0
  4121bf:	call   0x415ff8
  4121c4:	mov    r9,QWORD PTR [rsp+0x28]
  4121c9:	mov    rdx,QWORD PTR [rax+0x8]
  4121cd:	mov    r8d,0x10
  4121d3:	mov    rcx,QWORD PTR [rsp+0x38]
  4121d8:	call   0x415ad0
  4121dd:	test   eax,eax
  4121df:	mov    r11,QWORD PTR [rsp+0x40]
  4121e4:	mov    r10d,DWORD PTR [rsp+0x4c]
  4121e9:	jle    0x4121f8
  4121eb:	movzx  edx,WORD PTR [rsp+0x6e]
  4121f0:	mov    WORD PTR [rsp+0xa0],dx
  4121f8:	mov    DWORD PTR [rsp+0x9c],eax
  4121ff:	movzx  eax,BYTE PTR [rdi+0x1]
  412203:	jmp    0x411c70
  412208:	cmp    BYTE PTR [rdi+0x2],0x34
  41220c:	je     0x41239f
  412212:	mov    eax,0x36
  412217:	mov    r10d,0x3
  41221d:	mov    r14d,0x4
  412223:	jmp    0x411c70
  412228:	mov    rcx,QWORD PTR [r13+0x0]
  41222c:	add    r13,0x8
  412230:	mov    QWORD PTR [rsp+0x70],rcx
  412235:	jmp    0x411e83
  41223a:	mov    edx,DWORD PTR [rsp+0xa4]
  412241:	add    r13,0x8
  412245:	mov    BYTE PTR [rax],dl
  412247:	jmp    0x411b70
  41224c:	mov    rax,QWORD PTR [r13+0x0]
  412250:	add    r13,0x8
  412254:	mov    QWORD PTR [rsp+0x70],rax
  412259:	jmp    0x411da8
  41225e:	mov    DWORD PTR [rsp+0x90],0x0
  412269:	movzx  eax,BYTE PTR [rdi+0x1]
  41226d:	lea    r11,[r12+0x10]
  412272:	mov    r14d,0x2
  412278:	jmp    0x411c70
  41227d:	sub    ecx,0x30
  412280:	movzx  eax,BYTE PTR [rdi+0x1]
  412284:	mov    DWORD PTR [r11],ecx
  412287:	jmp    0x411c70
  41228c:	mov    rdx,r12
  41228f:	mov    rcx,rax
  412292:	call   0x410ac0
  412297:	jmp    0x411b70
  41229c:	cmp    BYTE PTR [rdi+0x2],0x32
  4122a0:	mov    eax,0x33
  4122a5:	jne    0x411ed4
  4122ab:	lea    rbx,[rdi+0x3]
  4122af:	movzx  eax,BYTE PTR [rdi+0x3]
  4122b3:	mov    r10d,0x2
  4122b9:	mov    r14d,0x4
  4122bf:	jmp    0x411c70
  4122c4:	mov    edx,DWORD PTR [rsp+0xa4]
  4122cb:	add    r13,0x8
  4122cf:	mov    WORD PTR [rax],dx
  4122d2:	jmp    0x411b70
  4122d7:	movsxd rcx,DWORD PTR [r13+0x0]
  4122db:	add    r13,0x8
  4122df:	mov    QWORD PTR [rsp+0x70],rcx
  4122e4:	jmp    0x411e83
  4122e9:	mov    eax,DWORD PTR [r13+0x0]
  4122ed:	add    r13,0x8
  4122f1:	mov    QWORD PTR [rsp+0x70],rax
  4122f6:	jmp    0x411da8
  4122fb:	mov    eax,DWORD PTR [rsp+0x48]
  4122ff:	mov    DWORD PTR [rsp+0x90],0x10
  41230a:	mov    DWORD PTR [rsp+0x88],eax
  412311:	jmp    0x411b93
  412316:	mov    rdx,r12
  412319:	mov    ecx,0x25
  41231e:	mov    rbx,rsi
  412321:	call   0x410250
  412326:	jmp    0x411b70
  41232b:	movzx  eax,WORD PTR [rsp+0x70]
  412330:	mov    r13,rdx
  412333:	mov    QWORD PTR [rsp+0x70],rax
  412338:	jmp    0x411da8
  41233d:	movsx  rcx,WORD PTR [rsp+0x70]
  412343:	mov    r13,rax
  412346:	mov    QWORD PTR [rsp+0x70],rcx
  41234b:	jmp    0x411e83
  412350:	test   r14d,r14d
  412353:	jne    0x4123b8
  412355:	or     DWORD PTR [rsp+0x88],0x400
  412360:	neg    DWORD PTR [rsp+0x8c]
  412367:	jmp    0x4120d9
  41236c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  412374:	add    r13,0x8
  412378:	mov    QWORD PTR [rax],rdx
  41237b:	jmp    0x411b70
  412380:	movzx  eax,BYTE PTR [rsp+0x70]
  412385:	mov    QWORD PTR [rsp+0x70],rax
  41238a:	jmp    0x411da8
  41238f:	movsx  rcx,BYTE PTR [rsp+0x70]
  412395:	mov    QWORD PTR [rsp+0x70],rcx
  41239a:	jmp    0x411e83
  41239f:	lea    rbx,[rdi+0x3]
  4123a3:	movzx  eax,BYTE PTR [rdi+0x3]
  4123a7:	mov    r10d,0x3
  4123ad:	mov    r14d,0x4
  4123b3:	jmp    0x411c70
  4123b8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  4123c3:	movzx  eax,BYTE PTR [rdi+0x1]
  4123c7:	mov    r13,rdx
  4123ca:	xor    r11d,r11d
  4123cd:	jmp    0x411c70
  4123d2:	nop
  4123d3:	nop
  4123d4:	nop
  4123d5:	nop
  4123d6:	nop
  4123d7:	nop
  4123d8:	nop
  4123d9:	nop
  4123da:	nop
  4123db:	nop
  4123dc:	nop
  4123dd:	nop
  4123de:	nop
  4123df:	nop
  4123e0:	fld    TBYTE PTR [rdx]
  4123e2:	fxam   
  4123e4:	fstsw  ax
  4123e7:	mov    dh,0x45
  4123e9:	and    dh,ah
  4123eb:	cmp    dh,0x5
  4123ee:	je     0x41242f
  4123f0:	fld    st(0)
  4123f2:	sub    rsp,0x8
  4123f6:	fnstcw WORD PTR [rsp+0x4]
  4123fa:	movzx  eax,WORD PTR [rsp+0x4]
  4123ff:	or     ah,0xc
  412402:	mov    WORD PTR [rsp],ax
  412406:	fldcw  WORD PTR [rsp]
  412409:	frndint 
  41240b:	fldcw  WORD PTR [rsp+0x4]
  41240f:	add    rsp,0x8
  412413:	fsub   st(1),st
  412415:	fxch   st(1)
  412417:	f2xm1  
  412419:	fld1   
  41241b:	faddp  st(1),st
  41241d:	fscale 
  41241f:	fstp   st(1)
  412421:	mov    rax,rcx
  412424:	mov    QWORD PTR [rcx+0x8],0x0
  41242c:	fstp   TBYTE PTR [rcx]
  41242e:	ret    
  41242f:	test   eax,0x200
  412434:	je     0x41243a
  412436:	fstp   st(0)
  412438:	fldz   
  41243a:	mov    rax,rcx
  41243d:	mov    QWORD PTR [rcx+0x8],0x0
  412445:	fstp   TBYTE PTR [rcx]
  412447:	ret    
  412448:	nop
  412449:	nop
  41244a:	nop
  41244b:	nop
  41244c:	nop
  41244d:	nop
  41244e:	nop
  41244f:	nop
  412450:	add    BYTE PTR [rax],al
  412452:	add    BYTE PTR [rax],al
  412454:	add    BYTE PTR [rax],al
  412456:	lock (bad) 
  412458:	pop    rdx
  41245a:	cmc    
  41245b:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  41245f:	(bad)  
  412460:	fldln2 
  412462:	fld    TBYTE PTR [rdx]
  412464:	fld    st(0)
  412466:	fsub   QWORD PTR [rip+0xffffffffffffffe4]        # 0x412450
  41246c:	fld    st(0)
  41246e:	fabs   
  412470:	fcomp  QWORD PTR [rip+0xffffffffffffffe2]        # 0x412458
  412476:	fnstsw ax
  412478:	and    ah,0x45
  41247b:	je     0x41248f
  41247d:	fstp   st(1)
  41247f:	fyl2xp1 
  412481:	mov    rax,rcx
  412484:	mov    QWORD PTR [rcx+0x8],0x0
  41248c:	fstp   TBYTE PTR [rcx]
  41248e:	ret    
  41248f:	fstp   st(0)
  412491:	fyl2x  
  412493:	mov    rax,rcx
  412496:	mov    QWORD PTR [rcx+0x8],0x0
  41249e:	fstp   TBYTE PTR [rcx]
  4124a0:	ret    
  4124a1:	nop
  4124a2:	nop
  4124a3:	nop
  4124a4:	nop
  4124a5:	nop
  4124a6:	nop
  4124a7:	nop
  4124a8:	nop
  4124a9:	nop
  4124aa:	nop
  4124ab:	nop
  4124ac:	nop
  4124ad:	nop
  4124ae:	nop
  4124af:	nop
  4124b0:	sub    rsp,0x48
  4124b4:	movsd  QWORD PTR [rsp+0x30],xmm0
  4124ba:	mov    eax,DWORD PTR [rsp+0x34]
  4124be:	movapd xmm1,xmm0
  4124c2:	mov    ecx,eax
  4124c4:	and    ecx,0x7ff00000
  4124ca:	cmp    ecx,0x7ff00000
  4124d0:	sete   r8b
  4124d4:	and    eax,0xfffff
  4124d9:	or     eax,ecx
  4124db:	or     eax,DWORD PTR [rsp+0x30]
  4124df:	sete   r9b
  4124e3:	test   ecx,ecx
  4124e5:	sete   al
  4124e8:	or     eax,r9d
  4124eb:	cmp    r8b,al
  4124ee:	ja     0x412589
  4124f4:	pxor   xmm2,xmm2
  4124f8:	ucomisd xmm0,xmm2
  4124fc:	jp     0x412508
  4124fe:	movapd xmm1,xmm0
  412502:	je     0x412589
  412508:	pxor   xmm3,xmm3
  41250c:	movsd  QWORD PTR [rsp+0x20],xmm0
  412512:	fld    QWORD PTR [rsp+0x20]
  412516:	cvtsi2sd xmm3,edx
  41251a:	movsd  QWORD PTR [rsp+0x28],xmm3
  412520:	fld    QWORD PTR [rsp+0x28]
  412524:	fxch   st(1)
  412526:	fscale 
  412528:	fstp   st(1)
  41252a:	fstp   QWORD PTR [rsp+0x20]
  41252e:	movsd  xmm4,QWORD PTR [rsp+0x20]
  412534:	movsd  QWORD PTR [rsp+0x38],xmm4
  41253a:	mov    eax,DWORD PTR [rsp+0x3c]
  41253e:	mov    edx,eax
  412540:	and    edx,0x7ff00000
  412546:	cmp    edx,0x7ff00000
  41254c:	sete   cl
  41254f:	and    eax,0xfffff
  412554:	or     eax,edx
  412556:	or     eax,DWORD PTR [rsp+0x38]
  41255a:	sete   r8b
  41255e:	test   edx,edx
  412560:	sete   al
  412563:	or     eax,r8d
  412566:	cmp    cl,al
  412568:	ja     0x412578
  41256a:	movsd  xmm5,QWORD PTR [rsp+0x20]
  412570:	ucomisd xmm5,xmm2
  412574:	jp     0x412592
  412576:	jne    0x412592
  412578:	call   0x4160b8
  41257d:	movsd  xmm1,QWORD PTR [rsp+0x20]
  412583:	mov    DWORD PTR [rax],0x22
  412589:	movapd xmm0,xmm1
  41258d:	add    rsp,0x48
  412591:	ret    
  412592:	movsd  xmm1,QWORD PTR [rsp+0x20]
  412598:	movapd xmm0,xmm1
  41259c:	add    rsp,0x48
  4125a0:	ret    
  4125a1:	nop
  4125a2:	nop
  4125a3:	nop
  4125a4:	nop
  4125a5:	nop
  4125a6:	nop
  4125a7:	nop
  4125a8:	nop
  4125a9:	nop
  4125aa:	nop
  4125ab:	nop
  4125ac:	nop
  4125ad:	nop
  4125ae:	nop
  4125af:	nop
  4125b0:	add    BYTE PTR [rax],al
  4125b2:	add    BYTE PTR [rax],al
  4125b4:	add    BYTE PTR [rax],al
  4125b6:	lock (bad) 
  4125b8:	pop    rdx
  4125ba:	cmc    
  4125bb:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  4125bf:	(bad)  
  4125c0:	fld    QWORD PTR [rip+0xffffffffffffffea]        # 0x4125b0
  4125c6:	fld    TBYTE PTR [rdx]
  4125c8:	fxam   
  4125ca:	fnstsw ax
  4125cc:	fld    st(0)
  4125ce:	sahf   
  4125cf:	jb     0x412608
  4125d1:	fsub   st,st(2)
  4125d3:	fld    st(0)
  4125d5:	fabs   
  4125d7:	fcomp  QWORD PTR [rip+0xffffffffffffffdb]        # 0x4125b8
  4125dd:	fnstsw ax
  4125df:	and    ah,0x45
  4125e2:	je     0x4125f6
  4125e4:	fstp   st(1)
  4125e6:	fyl2xp1 
  4125e8:	mov    rax,rcx
  4125eb:	mov    QWORD PTR [rcx+0x8],0x0
  4125f3:	fstp   TBYTE PTR [rcx]
  4125f5:	ret    
  4125f6:	fstp   st(0)
  4125f8:	fyl2x  
  4125fa:	mov    rax,rcx
  4125fd:	mov    QWORD PTR [rcx+0x8],0x0
  412605:	fstp   TBYTE PTR [rcx]
  412607:	ret    
  412608:	jp     0x4125d1
  41260a:	fstp   st(1)
  41260c:	fstp   st(1)
  41260e:	mov    rax,rcx
  412611:	mov    QWORD PTR [rcx+0x8],0x0
  412619:	fstp   TBYTE PTR [rcx]
  41261b:	ret    
  41261c:	nop
  41261d:	nop
  41261e:	nop
  41261f:	nop
  412620:	push   rbx
  412621:	sub    rsp,0x20
  412625:	xor    ebx,ebx
  412627:	cmp    ecx,0x1b
  41262a:	jle    0x41263d
  41262c:	mov    eax,0x4
  412631:	add    eax,eax
  412633:	add    ebx,0x1
  412636:	lea    edx,[rax+0x17]
  412639:	cmp    edx,ecx
  41263b:	jl     0x412631
  41263d:	mov    ecx,ebx
  41263f:	call   0x414c30
  412644:	mov    DWORD PTR [rax],ebx
  412646:	add    rax,0x4
  41264a:	add    rsp,0x20
  41264e:	pop    rbx
  41264f:	ret    
  412650:	push   rsi
  412651:	push   rbx
  412652:	sub    rsp,0x28
  412656:	mov    rbx,rcx
  412659:	mov    ecx,r8d
  41265c:	mov    rsi,rdx
  41265f:	call   0x412620
  412664:	movzx  ecx,BYTE PTR [rbx]
  412667:	lea    r8,[rbx+0x1]
  41266b:	test   cl,cl
  41266d:	mov    BYTE PTR [rax],cl
  41266f:	mov    rcx,rax
  412672:	je     0x412689
  412674:	add    r8,0x1
  412678:	movzx  r9d,BYTE PTR [r8-0x1]
  41267d:	add    rcx,0x1
  412681:	test   r9b,r9b
  412684:	mov    BYTE PTR [rcx],r9b
  412687:	jne    0x412674
  412689:	test   rsi,rsi
  41268c:	je     0x412691
  41268e:	mov    QWORD PTR [rsi],rcx
  412691:	add    rsp,0x28
  412695:	pop    rbx
  412696:	pop    rsi
  412697:	ret    
  412698:	nop    DWORD PTR [rax+rax*1+0x0]
  4126a0:	mov    edx,0x1
  4126a5:	mov    rax,rcx
  4126a8:	mov    ecx,DWORD PTR [rcx-0x4]
  4126ab:	shl    edx,cl
  4126ad:	mov    DWORD PTR [rax+0x4],ecx
  4126b0:	lea    rcx,[rax-0x4]
  4126b4:	mov    DWORD PTR [rax+0x8],edx
  4126b7:	jmp    0x414d40
  4126bc:	nop    DWORD PTR [rax+0x0]
  4126c0:	push   r15
  4126c2:	push   r14
  4126c4:	push   r13
  4126c6:	push   r12
  4126c8:	push   rbp
  4126c9:	push   rdi
  4126ca:	push   rsi
  4126cb:	push   rbx
  4126cc:	sub    rsp,0x38
  4126d0:	xor    eax,eax
  4126d2:	mov    edi,DWORD PTR [rdx+0x14]
  4126d5:	cmp    edi,DWORD PTR [rcx+0x14]
  4126d8:	mov    r15,rdx
  4126db:	jg     0x412829
  4126e1:	sub    edi,0x1
  4126e4:	lea    rbx,[rdx+0x18]
  4126e8:	lea    r12,[rcx+0x18]
  4126ec:	movsxd r13,edi
  4126ef:	xor    edx,edx
  4126f1:	shl    r13,0x2
  4126f5:	lea    rbp,[rbx+r13*1]
  4126f9:	add    r13,r12
  4126fc:	mov    eax,DWORD PTR [rbp+0x0]
  4126ff:	lea    r8d,[rax+0x1]
  412703:	mov    eax,DWORD PTR [r13+0x0]
  412707:	div    r8d
  41270a:	test   eax,eax
  41270c:	mov    r14d,eax
  41270f:	mov    DWORD PTR [rsp+0x2c],eax
  412713:	je     0x4127a7
  412719:	mov    edx,eax
  41271b:	mov    rsi,rbx
  41271e:	mov    r11,r12
  412721:	xor    eax,eax
  412723:	xor    r10d,r10d
  412726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412730:	add    rsi,0x4
  412734:	mov    r8d,DWORD PTR [rsi-0x4]
  412738:	mov    r9d,DWORD PTR [r11]
  41273b:	add    r11,0x4
  41273f:	imul   r8,rdx
  412743:	add    r8,rax
  412746:	mov    rax,r8
  412749:	mov    r8d,r8d
  41274c:	sub    r9,r8
  41274f:	shr    rax,0x20
  412753:	sub    r9,r10
  412756:	mov    r10,r9
  412759:	mov    DWORD PTR [r11-0x4],r9d
  41275d:	shr    r10,0x20
  412761:	and    r10d,0x1
  412765:	cmp    rbp,rsi
  412768:	jae    0x412730
  41276a:	mov    r11d,DWORD PTR [r13+0x0]
  41276e:	test   r11d,r11d
  412771:	jne    0x4127a7
  412773:	lea    rax,[r13-0x4]
  412777:	cmp    r12,rax
  41277a:	jae    0x4127a4
  41277c:	mov    r10d,DWORD PTR [r13-0x4]
  412780:	test   r10d,r10d
  412783:	je     0x412798
  412785:	jmp    0x4127a4
  412787:	nop    WORD PTR [rax+rax*1+0x0]
  412790:	mov    r9d,DWORD PTR [rax]
  412793:	test   r9d,r9d
  412796:	jne    0x4127a4
  412798:	sub    rax,0x4
  41279c:	sub    edi,0x1
  41279f:	cmp    r12,rax
  4127a2:	jb     0x412790
  4127a4:	mov    DWORD PTR [rcx+0x14],edi
  4127a7:	mov    rdx,r15
  4127aa:	mov    rsi,rcx
  4127ad:	call   0x415260
  4127b2:	test   eax,eax
  4127b4:	js     0x412825
  4127b6:	lea    eax,[r14+0x1]
  4127ba:	mov    rcx,r12
  4127bd:	xor    edx,edx
  4127bf:	mov    DWORD PTR [rsp+0x2c],eax
  4127c3:	add    rbx,0x4
  4127c7:	mov    eax,DWORD PTR [rcx]
  4127c9:	mov    r8d,DWORD PTR [rbx-0x4]
  4127cd:	add    rcx,0x4
  4127d1:	sub    rax,r8
  4127d4:	sub    rax,rdx
  4127d7:	mov    rdx,rax
  4127da:	mov    DWORD PTR [rcx-0x4],eax
  4127dd:	shr    rdx,0x20
  4127e1:	and    edx,0x1
  4127e4:	cmp    rbp,rbx
  4127e7:	jae    0x4127c3
  4127e9:	movsxd rax,edi
  4127ec:	lea    rdx,[r12+rax*4]
  4127f0:	mov    r8d,DWORD PTR [rdx]
  4127f3:	test   r8d,r8d
  4127f6:	jne    0x412825
  4127f8:	lea    rax,[rdx-0x4]
  4127fc:	cmp    r12,rax
  4127ff:	jae    0x412822
  412801:	mov    ecx,DWORD PTR [rdx-0x4]
  412804:	test   ecx,ecx
  412806:	je     0x412816
  412808:	jmp    0x412822
  41280a:	nop    WORD PTR [rax+rax*1+0x0]
  412810:	mov    edx,DWORD PTR [rax]
  412812:	test   edx,edx
  412814:	jne    0x412822
  412816:	sub    rax,0x4
  41281a:	sub    edi,0x1
  41281d:	cmp    r12,rax
  412820:	jb     0x412810
  412822:	mov    DWORD PTR [rsi+0x14],edi
  412825:	mov    eax,DWORD PTR [rsp+0x2c]
  412829:	add    rsp,0x38
  41282d:	pop    rbx
  41282e:	pop    rsi
  41282f:	pop    rdi
  412830:	pop    rbp
  412831:	pop    r12
  412833:	pop    r13
  412835:	pop    r14
  412837:	pop    r15
  412839:	ret    
  41283a:	nop
  41283b:	nop
  41283c:	nop
  41283d:	nop
  41283e:	nop
  41283f:	nop
  412840:	push   r15
  412842:	push   r14
  412844:	push   r13
  412846:	push   r12
  412848:	push   rbp
  412849:	push   rdi
  41284a:	push   rsi
  41284b:	push   rbx
  41284c:	sub    rsp,0xb8
  412853:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  41285b:	mov    r12d,DWORD PTR [r9]
  41285e:	mov    eax,r12d
  412861:	and    eax,0xffffffcf
  412864:	mov    DWORD PTR [r9],eax
  412867:	mov    eax,r12d
  41286a:	and    eax,0x7
  41286d:	cmp    eax,0x4
  412870:	ja     0x413ca3
  412876:	mov    r13d,edx
  412879:	lea    rdx,[rip+0x91d0]        # 0x41ba50
  412880:	mov    QWORD PTR [rsp+0x28],r9
  412885:	mov    r15,r8
  412888:	mov    rbp,rcx
  41288b:	movsxd rax,DWORD PTR [rdx+rax*4]
  41288f:	add    rdx,rax
  412892:	jmp    rdx
  412894:	mov    edi,DWORD PTR [rcx]
  412896:	xor    ecx,ecx
  412898:	cmp    edi,0x20
  41289b:	jle    0x4128ab
  41289d:	mov    eax,0x20
  4128a2:	add    eax,eax
  4128a4:	add    ecx,0x1
  4128a7:	cmp    edi,eax
  4128a9:	jg     0x4128a2
  4128ab:	call   0x414c30
  4128b0:	mov    rsi,rax
  4128b3:	lea    eax,[rdi-0x1]
  4128b6:	lea    r9,[rsi+0x18]
  4128ba:	sar    eax,0x5
  4128bd:	cdqe   
  4128bf:	mov    rdx,r9
  4128c2:	lea    r11,[r15+rax*4]
  4128c6:	mov    rax,r15
  4128c9:	nop    DWORD PTR [rax+0x0]
  4128d0:	mov    ecx,DWORD PTR [rax]
  4128d2:	add    rax,0x4
  4128d6:	add    rdx,0x4
  4128da:	cmp    r11,rax
  4128dd:	mov    DWORD PTR [rdx-0x4],ecx
  4128e0:	jae    0x4128d0
  4128e2:	sub    rdx,r9
  4128e5:	sar    rdx,0x2
  4128e9:	mov    r14d,edx
  4128ec:	movsxd rdx,edx
  4128ef:	lea    rax,[r9+rdx*4-0x4]
  4128f4:	jmp    0x41290f
  4128f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412900:	sub    rax,0x4
  412904:	test   edx,edx
  412906:	mov    r14d,edx
  412909:	je     0x412e10
  41290f:	mov    r8d,DWORD PTR [rax]
  412912:	lea    edx,[r14-0x1]
  412916:	test   r8d,r8d
  412919:	je     0x412900
  41291b:	movsxd rdx,edx
  41291e:	mov    DWORD PTR [rsi+0x14],r14d
  412922:	shl    r14d,0x5
  412926:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  41292b:	xor    eax,0x1f
  41292e:	sub    r14d,eax
  412931:	mov    rcx,rsi
  412934:	call   0x414680
  412939:	test   eax,eax
  41293b:	mov    DWORD PTR [rsp+0x9c],eax
  412942:	mov    r11d,r13d
  412945:	jne    0x412e20
  41294b:	mov    ecx,DWORD PTR [rsi+0x14]
  41294e:	test   ecx,ecx
  412950:	jne    0x412a00
  412956:	mov    rcx,rsi
  412959:	call   0x414d40
  41295e:	mov    rax,QWORD PTR [rsp+0x130]
  412966:	mov    rdx,QWORD PTR [rsp+0x138]
  41296e:	lea    rcx,[rip+0x90d8]        # 0x41ba4d
  412975:	mov    r8d,0x1
  41297b:	mov    DWORD PTR [rax],0x1
  412981:	call   0x412650
  412986:	nop
  412987:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  41298f:	add    rsp,0xb8
  412996:	pop    rbx
  412997:	pop    rsi
  412998:	pop    rdi
  412999:	pop    rbp
  41299a:	pop    r12
  41299c:	pop    r13
  41299e:	pop    r14
  4129a0:	pop    r15
  4129a2:	ret    
  4129a3:	mov    rax,QWORD PTR [rsp+0x130]
  4129ab:	mov    rdx,QWORD PTR [rsp+0x138]
  4129b3:	lea    rcx,[rip+0x908f]        # 0x41ba49
  4129ba:	mov    r8d,0x3
  4129c0:	mov    DWORD PTR [rax],0xffff8000
  4129c6:	call   0x412650
  4129cb:	jmp    0x412987
  4129cd:	nop    DWORD PTR [rax]
  4129d0:	mov    rax,QWORD PTR [rsp+0x130]
  4129d8:	mov    rdx,QWORD PTR [rsp+0x138]
  4129e0:	lea    rcx,[rip+0x9059]        # 0x41ba40
  4129e7:	mov    r8d,0x8
  4129ed:	mov    DWORD PTR [rax],0xffff8000
  4129f3:	call   0x412650
  4129f8:	jmp    0x412987
  4129fa:	nop    WORD PTR [rax+rax*1+0x0]
  412a00:	lea    rdx,[rsp+0x9c]
  412a08:	mov    rcx,rsi
  412a0b:	mov    DWORD PTR [rsp+0x30],r11d
  412a10:	call   0x4153f0
  412a15:	movq   rdx,xmm0
  412a1a:	movq   r9,xmm0
  412a1f:	mov    r11d,DWORD PTR [rsp+0x30]
  412a24:	pxor   xmm0,xmm0
  412a28:	shr    rdx,0x20
  412a2c:	mov    r9d,r9d
  412a2f:	and    edx,0xfffff
  412a35:	lea    ecx,[r11+r14*1-0x1]
  412a3a:	or     edx,0x3ff00000
  412a40:	mov    rax,rdx
  412a43:	cvtsi2sd xmm0,ecx
  412a47:	shl    rax,0x20
  412a4b:	mov    ebx,ecx
  412a4d:	or     r9,rax
  412a50:	sar    ebx,0x1f
  412a53:	mov    QWORD PTR [rsp+0x30],r9
  412a58:	mov    eax,ebx
  412a5a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  412a60:	xor    eax,ecx
  412a62:	sub    eax,ebx
  412a64:	subsd  xmm1,QWORD PTR [rip+0x8ffc]        # 0x41ba68
  412a6c:	sub    eax,0x435
  412a71:	test   eax,eax
  412a73:	mulsd  xmm0,QWORD PTR [rip+0x9005]        # 0x41ba80
  412a7b:	mulsd  xmm1,QWORD PTR [rip+0x8fed]        # 0x41ba70
  412a83:	addsd  xmm1,QWORD PTR [rip+0x8fed]        # 0x41ba78
  412a8b:	addsd  xmm1,xmm0
  412a8f:	jle    0x412aa5
  412a91:	pxor   xmm0,xmm0
  412a95:	cvtsi2sd xmm0,eax
  412a99:	mulsd  xmm0,QWORD PTR [rip+0x8fe7]        # 0x41ba88
  412aa1:	addsd  xmm1,xmm0
  412aa5:	cvttsd2si eax,xmm1
  412aa9:	pxor   xmm6,xmm6
  412aad:	ucomisd xmm6,xmm1
  412ab1:	mov    DWORD PTR [rsp+0x30],eax
  412ab5:	ja     0x413343
  412abb:	mov    eax,ecx
  412abd:	mov    r9d,r9d
  412ac0:	mov    DWORD PTR [rsp+0x6c],0x1
  412ac8:	shl    eax,0x14
  412acb:	add    eax,edx
  412acd:	shl    rax,0x20
  412ad1:	or     r9,rax
  412ad4:	cmp    DWORD PTR [rsp+0x30],0x16
  412ad9:	mov    QWORD PTR [rsp+0x80],r9
  412ae1:	ja     0x412b10
  412ae3:	movsxd rax,DWORD PTR [rsp+0x30]
  412ae8:	mov    rdx,QWORD PTR [rip+0x9311]        # 0x41be00
  412aef:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  412af4:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  412afd:	jbe    0x412e60
  412b03:	sub    DWORD PTR [rsp+0x30],0x1
  412b08:	mov    DWORD PTR [rsp+0x6c],0x0
  412b10:	mov    eax,r14d
  412b13:	mov    DWORD PTR [rsp+0x50],0x0
  412b1b:	sub    eax,ecx
  412b1d:	sub    eax,0x1
  412b20:	mov    DWORD PTR [rsp+0x40],eax
  412b24:	js     0x413330
  412b2a:	mov    eax,DWORD PTR [rsp+0x30]
  412b2e:	test   eax,eax
  412b30:	js     0x413310
  412b36:	add    DWORD PTR [rsp+0x40],eax
  412b3a:	mov    DWORD PTR [rsp+0x88],eax
  412b41:	mov    DWORD PTR [rsp+0x58],0x0
  412b49:	cmp    DWORD PTR [rsp+0x120],0x9
  412b51:	ja     0x412e40
  412b57:	cmp    DWORD PTR [rsp+0x120],0x5
  412b5f:	jle    0x412e4b
  412b65:	sub    DWORD PTR [rsp+0x120],0x4
  412b6d:	xor    eax,eax
  412b6f:	cmp    DWORD PTR [rsp+0x120],0x3
  412b77:	je     0x413504
  412b7d:	jle    0x413263
  412b83:	cmp    DWORD PTR [rsp+0x120],0x4
  412b8b:	mov    DWORD PTR [rsp+0x60],0x1
  412b93:	je     0x412e70
  412b99:	cmp    DWORD PTR [rsp+0x120],0x5
  412ba1:	jne    0x413279
  412ba7:	mov    ebx,DWORD PTR [rsp+0x30]
  412bab:	add    ebx,DWORD PTR [rsp+0x128]
  412bb2:	mov    DWORD PTR [rsp+0x8c],ebx
  412bb9:	add    ebx,0x1
  412bbc:	test   ebx,ebx
  412bbe:	mov    DWORD PTR [rsp+0x68],ebx
  412bc2:	mov    ecx,ebx
  412bc4:	jle    0x413740
  412bca:	cmp    ebx,0xe
  412bcd:	mov    DWORD PTR [rsp+0x9c],ebx
  412bd4:	setbe  bl
  412bd7:	and    ebx,eax
  412bd9:	mov    QWORD PTR [rsp+0x78],r9
  412bde:	mov    DWORD PTR [rsp+0x70],r11d
  412be3:	call   0x412620
  412be8:	mov    QWORD PTR [rsp+0x48],rax
  412bed:	mov    eax,DWORD PTR [rbp+0xc]
  412bf0:	mov    r11d,DWORD PTR [rsp+0x70]
  412bf5:	mov    r9,QWORD PTR [rsp+0x78]
  412bfa:	sub    eax,0x1
  412bfd:	mov    DWORD PTR [rsp+0x38],eax
  412c01:	je     0x412c28
  412c03:	mov    ecx,DWORD PTR [rsp+0x38]
  412c07:	mov    eax,0x2
  412c0c:	test   ecx,ecx
  412c0e:	cmovns eax,ecx
  412c11:	and    r12d,0x8
  412c15:	mov    DWORD PTR [rsp+0x38],eax
  412c19:	je     0x412c28
  412c1b:	mov    eax,0x3
  412c20:	sub    eax,DWORD PTR [rsp+0x38]
  412c24:	mov    DWORD PTR [rsp+0x38],eax
  412c28:	test   bl,bl
  412c2a:	je     0x412f20
  412c30:	mov    eax,DWORD PTR [rsp+0x38]
  412c34:	or     eax,DWORD PTR [rsp+0x30]
  412c38:	jne    0x412f20
  412c3e:	mov    eax,DWORD PTR [rsp+0x6c]
  412c42:	mov    DWORD PTR [rsp+0x9c],0x0
  412c4d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  412c56:	test   eax,eax
  412c58:	je     0x412c6c
  412c5a:	movsd  xmm0,QWORD PTR [rip+0x8e36]        # 0x41ba98
  412c62:	ucomisd xmm0,xmm4
  412c66:	ja     0x413a9b
  412c6c:	movapd xmm0,xmm4
  412c70:	mov    r12d,DWORD PTR [rsp+0x68]
  412c75:	addsd  xmm0,xmm4
  412c79:	addsd  xmm0,QWORD PTR [rip+0x8e2f]        # 0x41bab0
  412c81:	movq   rdx,xmm0
  412c86:	movq   rax,xmm0
  412c8b:	shr    rdx,0x20
  412c8f:	mov    eax,eax
  412c91:	sub    edx,0x3400000
  412c97:	shl    rdx,0x20
  412c9b:	or     rax,rdx
  412c9e:	test   r12d,r12d
  412ca1:	je     0x412ed7
  412ca7:	mov    r9d,DWORD PTR [rsp+0x68]
  412cac:	movapd xmm0,xmm4
  412cb0:	xor    ecx,ecx
  412cb2:	mov    ebx,DWORD PTR [rsp+0x60]
  412cb6:	lea    edx,[r9-0x1]
  412cba:	movsxd rdx,edx
  412cbd:	test   ebx,ebx
  412cbf:	je     0x4137e3
  412cc5:	mov    r10,QWORD PTR [rip+0x9134]        # 0x41be00
  412ccc:	movsd  xmm1,QWORD PTR [rip+0x8dfc]        # 0x41bad0
  412cd4:	mov    QWORD PTR [rsp+0x38],rax
  412cd9:	cvttsd2si eax,xmm0
  412cdd:	pxor   xmm2,xmm2
  412ce1:	mov    DWORD PTR [rsp+0x9c],0x0
  412cec:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  412cf2:	mov    rdx,QWORD PTR [rsp+0x48]
  412cf7:	mov    rbx,rdx
  412cfa:	add    rbx,0x1
  412cfe:	cvtsi2sd xmm2,eax
  412d02:	add    eax,0x30
  412d05:	mov    BYTE PTR [rdx],al
  412d07:	movsd  xmm5,QWORD PTR [rsp+0x38]
  412d0d:	subsd  xmm0,xmm2
  412d11:	subsd  xmm1,xmm5
  412d15:	ucomisd xmm1,xmm0
  412d19:	ja     0x412db4
  412d1f:	movsd  xmm5,QWORD PTR [rip+0x8d71]        # 0x41ba98
  412d27:	movapd xmm2,xmm5
  412d2b:	subsd  xmm2,xmm0
  412d2f:	ucomisd xmm1,xmm2
  412d33:	ja     0x4138b7
  412d39:	mov    eax,DWORD PTR [rsp+0x9c]
  412d40:	movsd  xmm3,QWORD PTR [rip+0x8d58]        # 0x41baa0
  412d48:	add    eax,0x1
  412d4b:	cmp    r9d,eax
  412d4e:	mov    DWORD PTR [rsp+0x9c],eax
  412d55:	jg     0x412d8c
  412d57:	jmp    0x412f0e
  412d5c:	nop    DWORD PTR [rax+0x0]
  412d60:	movapd xmm2,xmm5
  412d64:	subsd  xmm2,xmm0
  412d68:	ucomisd xmm1,xmm2
  412d6c:	ja     0x4138b7
  412d72:	mov    eax,DWORD PTR [rsp+0x9c]
  412d79:	add    eax,0x1
  412d7c:	cmp    r9d,eax
  412d7f:	mov    DWORD PTR [rsp+0x9c],eax
  412d86:	jle    0x412f0e
  412d8c:	mulsd  xmm0,xmm3
  412d90:	add    rbx,0x1
  412d94:	pxor   xmm2,xmm2
  412d98:	mulsd  xmm1,xmm3
  412d9c:	cvttsd2si eax,xmm0
  412da0:	cvtsi2sd xmm2,eax
  412da4:	add    eax,0x30
  412da7:	mov    BYTE PTR [rbx-0x1],al
  412daa:	subsd  xmm0,xmm2
  412dae:	ucomisd xmm1,xmm0
  412db2:	jbe    0x412d60
  412db4:	ucomisd xmm0,xmm6
  412db8:	lea    ebp,[rcx+0x1]
  412dbb:	jp     0x412dc3
  412dbd:	je     0x413717
  412dc3:	mov    r15d,0x10
  412dc9:	nop    DWORD PTR [rax+0x0]
  412dd0:	mov    rcx,rsi
  412dd3:	call   0x414d40
  412dd8:	cmp    QWORD PTR [rsp+0x138],0x0
  412de1:	mov    rax,QWORD PTR [rsp+0x130]
  412de9:	mov    BYTE PTR [rbx],0x0
  412dec:	mov    DWORD PTR [rax],ebp
  412dee:	je     0x412dfb
  412df0:	mov    rax,QWORD PTR [rsp+0x138]
  412df8:	mov    QWORD PTR [rax],rbx
  412dfb:	mov    rax,QWORD PTR [rsp+0x28]
  412e00:	or     DWORD PTR [rax],r15d
  412e03:	mov    rax,QWORD PTR [rsp+0x48]
  412e08:	jmp    0x412987
  412e0d:	nop    DWORD PTR [rax]
  412e10:	mov    DWORD PTR [rsi+0x14],0x0
  412e17:	jmp    0x412931
  412e1c:	nop    DWORD PTR [rax+0x0]
  412e20:	mov    edx,eax
  412e22:	mov    rcx,rsi
  412e25:	call   0x414580
  412e2a:	mov    eax,DWORD PTR [rsp+0x9c]
  412e31:	lea    r11d,[r13+rax*1+0x0]
  412e36:	sub    r14d,eax
  412e39:	jmp    0x41294b
  412e3e:	xchg   ax,ax
  412e40:	mov    DWORD PTR [rsp+0x120],0x0
  412e4b:	add    ecx,0x3fe
  412e51:	cmp    ecx,0x7f7
  412e57:	setbe  al
  412e5a:	jmp    0x412b6f
  412e5f:	nop
  412e60:	mov    DWORD PTR [rsp+0x6c],0x0
  412e68:	jmp    0x412b10
  412e6d:	nop    DWORD PTR [rax]
  412e70:	mov    edx,DWORD PTR [rsp+0x128]
  412e77:	test   edx,edx
  412e79:	jle    0x41372b
  412e7f:	cmp    DWORD PTR [rsp+0x128],0xe
  412e87:	setbe  bl
  412e8a:	mov    ecx,DWORD PTR [rsp+0x128]
  412e91:	and    ebx,eax
  412e93:	mov    DWORD PTR [rsp+0x9c],ecx
  412e9a:	mov    DWORD PTR [rsp+0x8c],ecx
  412ea1:	mov    DWORD PTR [rsp+0x68],ecx
  412ea5:	jmp    0x412bd9
  412eaa:	movapd xmm0,xmm4
  412eae:	addsd  xmm0,xmm4
  412eb2:	addsd  xmm0,QWORD PTR [rip+0x8bf6]        # 0x41bab0
  412eba:	movq   rdx,xmm0
  412ebf:	movq   rax,xmm0
  412ec4:	shr    rdx,0x20
  412ec8:	mov    eax,eax
  412eca:	sub    edx,0x3400000
  412ed0:	shl    rdx,0x20
  412ed4:	or     rax,rdx
  412ed7:	movapd xmm1,xmm4
  412edb:	mov    QWORD PTR [rsp+0x38],rax
  412ee0:	movsd  xmm0,QWORD PTR [rsp+0x38]
  412ee6:	subsd  xmm1,QWORD PTR [rip+0x8bca]        # 0x41bab8
  412eee:	ucomisd xmm1,xmm0
  412ef2:	ja     0x4137d4
  412ef8:	movsd  xmm2,QWORD PTR [rip+0x8bc0]        # 0x41bac0
  412f00:	xorpd  xmm0,xmm2
  412f04:	ucomisd xmm0,xmm1
  412f08:	ja     0x4132ed
  412f0e:	movq   r9,xmm4
  412f13:	mov    DWORD PTR [rsp+0x38],0x0
  412f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  412f20:	test   r11d,r11d
  412f23:	js     0x412fc2
  412f29:	movsxd rax,DWORD PTR [rsp+0x30]
  412f2e:	cmp    eax,DWORD PTR [rbp+0x14]
  412f31:	jg     0x412fc2
  412f37:	mov    ebx,DWORD PTR [rsp+0x68]
  412f3b:	mov    rdx,QWORD PTR [rip+0x8ebe]        # 0x41be00
  412f42:	test   ebx,ebx
  412f44:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  412f49:	jg     0x413653
  412f4f:	mov    eax,DWORD PTR [rsp+0x128]
  412f56:	shr    eax,0x1f
  412f59:	test   al,al
  412f5b:	je     0x413653
  412f61:	test   ebx,ebx
  412f63:	jne    0x4132ed
  412f69:	mulsd  xmm2,QWORD PTR [rip+0x8b47]        # 0x41bab8
  412f71:	mov    QWORD PTR [rsp+0x38],r9
  412f76:	movsd  xmm5,QWORD PTR [rsp+0x38]
  412f7c:	ucomisd xmm2,xmm5
  412f80:	jae    0x4132ed
  412f86:	mov    ebp,DWORD PTR [rsp+0x30]
  412f8a:	xor    r12d,r12d
  412f8d:	xor    edi,edi
  412f8f:	add    ebp,0x2
  412f92:	mov    rax,QWORD PTR [rsp+0x48]
  412f97:	mov    r15d,0x20
  412f9d:	lea    rbx,[rax+0x1]
  412fa1:	mov    BYTE PTR [rax],0x31
  412fa4:	mov    rcx,r12
  412fa7:	call   0x414d40
  412fac:	test   rdi,rdi
  412faf:	je     0x412dd0
  412fb5:	mov    rcx,rdi
  412fb8:	call   0x414d40
  412fbd:	jmp    0x412dd0
  412fc2:	mov    r9d,DWORD PTR [rsp+0x60]
  412fc7:	test   r9d,r9d
  412fca:	je     0x4134d0
  412fd0:	mov    edx,DWORD PTR [rbp+0x4]
  412fd3:	sub    edi,r14d
  412fd6:	mov    ecx,r11d
  412fd9:	lea    eax,[rdi+0x1]
  412fdc:	sub    ecx,edi
  412fde:	cmp    ecx,edx
  412fe0:	mov    DWORD PTR [rsp+0x9c],eax
  412fe7:	jge    0x41301c
  412fe9:	mov    ebx,DWORD PTR [rsp+0x120]
  412ff0:	lea    ecx,[rbx-0x3]
  412ff3:	and    ecx,0xfffffffd
  412ff6:	je     0x41301c
  412ff8:	mov    ebx,DWORD PTR [rsp+0x68]
  412ffc:	sub    r11d,edx
  412fff:	lea    eax,[r11+0x1]
  413003:	test   ebx,ebx
  413005:	mov    DWORD PTR [rsp+0x9c],eax
  41300c:	setg   cl
  41300f:	cmp    ebx,eax
  413011:	setl   dl
  413014:	test   cl,dl
  413016:	je     0x41375f
  41301c:	cmp    DWORD PTR [rsp+0x120],0x1
  413024:	jle    0x41375f
  41302a:	mov    ebx,DWORD PTR [rsp+0x58]
  41302e:	mov    eax,DWORD PTR [rsp+0x68]
  413032:	mov    r12d,ebx
  413035:	sub    eax,0x1
  413038:	sub    r12d,eax
  41303b:	cmp    ebx,eax
  41303d:	jge    0x413053
  41303f:	mov    edx,eax
  413041:	sub    edx,DWORD PTR [rsp+0x58]
  413045:	xor    r12d,r12d
  413048:	add    DWORD PTR [rsp+0x88],edx
  41304f:	mov    DWORD PTR [rsp+0x58],eax
  413053:	mov    eax,DWORD PTR [rsp+0x68]
  413057:	test   eax,eax
  413059:	js     0x4139f2
  41305f:	mov    ebx,DWORD PTR [rsp+0x50]
  413063:	mov    DWORD PTR [rsp+0x9c],eax
  41306a:	mov    ecx,0x1
  41306f:	add    DWORD PTR [rsp+0x50],eax
  413073:	add    DWORD PTR [rsp+0x40],eax
  413077:	call   0x414e70
  41307c:	mov    rdi,rax
  41307f:	mov    ecx,DWORD PTR [rsp+0x40]
  413083:	test   ecx,ecx
  413085:	mov    eax,ecx
  413087:	jle    0x4130a5
  413089:	test   ebx,ebx
  41308b:	jle    0x4130a5
  41308d:	cmp    ecx,ebx
  41308f:	cmovg  eax,ebx
  413092:	sub    DWORD PTR [rsp+0x50],eax
  413096:	sub    ecx,eax
  413098:	mov    DWORD PTR [rsp+0x9c],eax
  41309f:	sub    ebx,eax
  4130a1:	mov    DWORD PTR [rsp+0x40],ecx
  4130a5:	mov    r8d,DWORD PTR [rsp+0x58]
  4130aa:	test   r8d,r8d
  4130ad:	jle    0x4130fb
  4130af:	mov    ecx,DWORD PTR [rsp+0x60]
  4130b3:	test   ecx,ecx
  4130b5:	je     0x4134f0
  4130bb:	test   r12d,r12d
  4130be:	jle    0x4130ee
  4130c0:	mov    rcx,rdi
  4130c3:	mov    edx,r12d
  4130c6:	call   0x414fd0
  4130cb:	mov    rdx,rsi
  4130ce:	mov    rcx,rax
  4130d1:	mov    rdi,rax
  4130d4:	call   0x414ea0
  4130d9:	mov    rcx,rsi
  4130dc:	mov    QWORD PTR [rsp+0x70],rax
  4130e1:	call   0x414d40
  4130e6:	mov    rax,QWORD PTR [rsp+0x70]
  4130eb:	mov    rsi,rax
  4130ee:	mov    edx,DWORD PTR [rsp+0x58]
  4130f2:	sub    edx,r12d
  4130f5:	jne    0x4134f4
  4130fb:	mov    ecx,0x1
  413100:	call   0x414e70
  413105:	mov    r12,rax
  413108:	mov    eax,DWORD PTR [rsp+0x88]
  41310f:	test   eax,eax
  413111:	jle    0x413240
  413117:	mov    rcx,r12
  41311a:	mov    edx,eax
  41311c:	call   0x414fd0
  413121:	cmp    DWORD PTR [rsp+0x120],0x1
  413129:	mov    r12,rax
  41312c:	jg     0x413138
  41312e:	cmp    r14d,0x1
  413132:	je     0x4131fc
  413138:	xor    ebp,ebp
  41313a:	mov    eax,DWORD PTR [r12+0x14]
  41313f:	sub    eax,0x1
  413142:	cdqe   
  413144:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  41314a:	xor    eax,0x1f
  41314d:	sub    eax,DWORD PTR [rsp+0x40]
  413151:	mov    edx,DWORD PTR [rsp+0x50]
  413155:	sub    eax,0x4
  413158:	and    eax,0x1f
  41315b:	add    edx,eax
  41315d:	mov    r13d,eax
  413160:	mov    DWORD PTR [rsp+0x9c],eax
  413167:	test   edx,edx
  413169:	mov    ecx,eax
  41316b:	jle    0x41317f
  41316d:	mov    rcx,rsi
  413170:	call   0x415140
  413175:	mov    ecx,DWORD PTR [rsp+0x9c]
  41317c:	mov    rsi,rax
  41317f:	mov    edx,DWORD PTR [rsp+0x40]
  413183:	add    edx,ecx
  413185:	test   edx,edx
  413187:	jle    0x413194
  413189:	mov    rcx,r12
  41318c:	call   0x415140
  413191:	mov    r12,rax
  413194:	mov    eax,DWORD PTR [rsp+0x6c]
  413198:	test   eax,eax
  41319a:	jne    0x413511
  4131a0:	mov    r14d,DWORD PTR [rsp+0x68]
  4131a5:	test   r14d,r14d
  4131a8:	jg     0x413361
  4131ae:	cmp    DWORD PTR [rsp+0x120],0x2
  4131b6:	jle    0x413361
  4131bc:	mov    r11d,DWORD PTR [rsp+0x68]
  4131c1:	test   r11d,r11d
  4131c4:	jne    0x4132f2
  4131ca:	xor    r8d,r8d
  4131cd:	mov    rcx,r12
  4131d0:	mov    edx,0x5
  4131d5:	call   0x414db0
  4131da:	mov    rcx,rsi
  4131dd:	mov    rdx,rax
  4131e0:	mov    r12,rax
  4131e3:	call   0x415260
  4131e8:	test   eax,eax
  4131ea:	jle    0x4132f2
  4131f0:	mov    ebp,DWORD PTR [rsp+0x30]
  4131f4:	add    ebp,0x2
  4131f7:	jmp    0x412f92
  4131fc:	mov    eax,DWORD PTR [rbp+0x4]
  4131ff:	add    eax,0x1
  413202:	cmp    r13d,eax
  413205:	jle    0x413138
  41320b:	add    DWORD PTR [rsp+0x50],0x1
  413210:	add    DWORD PTR [rsp+0x40],0x1
  413215:	mov    ebp,0x1
  41321a:	nop    WORD PTR [rax+rax*1+0x0]
  413220:	mov    edx,DWORD PTR [rsp+0x88]
  413227:	mov    eax,0x1f
  41322c:	test   edx,edx
  41322e:	je     0x41314d
  413234:	jmp    0x41313a
  413239:	nop    DWORD PTR [rax+0x0]
  413240:	cmp    DWORD PTR [rsp+0x120],0x1
  413248:	jg     0x413250
  41324a:	cmp    r14d,0x1
  41324e:	je     0x413254
  413250:	xor    ebp,ebp
  413252:	jmp    0x413220
  413254:	mov    eax,DWORD PTR [rbp+0x4]
  413257:	xor    ebp,ebp
  413259:	add    eax,0x1
  41325c:	cmp    r13d,eax
  41325f:	jle    0x413220
  413261:	jmp    0x41320b
  413263:	cmp    DWORD PTR [rsp+0x120],0x2
  41326b:	mov    DWORD PTR [rsp+0x60],0x0
  413273:	je     0x412e70
  413279:	pxor   xmm0,xmm0
  41327d:	mov    QWORD PTR [rsp+0x60],r9
  413282:	mov    DWORD PTR [rsp+0x68],r11d
  413287:	cvtsi2sd xmm0,edi
  41328b:	mulsd  xmm0,QWORD PTR [rip+0x87fd]        # 0x41ba90
  413293:	cvttsd2si ecx,xmm0
  413297:	add    ecx,0x3
  41329a:	mov    DWORD PTR [rsp+0x9c],ecx
  4132a1:	call   0x412620
  4132a6:	mov    QWORD PTR [rsp+0x48],rax
  4132ab:	mov    eax,DWORD PTR [rbp+0xc]
  4132ae:	mov    r11d,DWORD PTR [rsp+0x68]
  4132b3:	mov    r9,QWORD PTR [rsp+0x60]
  4132b8:	sub    eax,0x1
  4132bb:	mov    DWORD PTR [rsp+0x38],eax
  4132bf:	jne    0x41376d
  4132c5:	mov    eax,0xffffffff
  4132ca:	mov    DWORD PTR [rsp+0x60],0x1
  4132d2:	mov    DWORD PTR [rsp+0x128],0x0
  4132dd:	mov    DWORD PTR [rsp+0x8c],eax
  4132e4:	mov    DWORD PTR [rsp+0x68],eax
  4132e8:	jmp    0x412f20
  4132ed:	xor    r12d,r12d
  4132f0:	xor    edi,edi
  4132f2:	mov    ebp,DWORD PTR [rsp+0x128]
  4132f9:	mov    rbx,QWORD PTR [rsp+0x48]
  4132fe:	mov    r15d,0x10
  413304:	neg    ebp
  413306:	jmp    0x412fa4
  41330b:	nop    DWORD PTR [rax+rax*1+0x0]
  413310:	mov    eax,DWORD PTR [rsp+0x30]
  413314:	sub    DWORD PTR [rsp+0x50],eax
  413318:	mov    DWORD PTR [rsp+0x88],0x0
  413323:	neg    eax
  413325:	mov    DWORD PTR [rsp+0x58],eax
  413329:	jmp    0x412b49
  41332e:	xchg   ax,ax
  413330:	neg    eax
  413332:	mov    DWORD PTR [rsp+0x40],0x0
  41333a:	mov    DWORD PTR [rsp+0x50],eax
  41333e:	jmp    0x412b2a
  413343:	pxor   xmm0,xmm0
  413347:	cvtsi2sd xmm0,eax
  41334b:	ucomisd xmm0,xmm1
  41334f:	jp     0x413357
  413351:	je     0x412abb
  413357:	sub    DWORD PTR [rsp+0x30],0x1
  41335c:	jmp    0x412abb
  413361:	mov    r10d,DWORD PTR [rsp+0x60]
  413366:	test   r10d,r10d
  413369:	je     0x413570
  41336f:	lea    edx,[rbx+r13*1]
  413373:	test   edx,edx
  413375:	jle    0x413382
  413377:	mov    rcx,rdi
  41337a:	call   0x415140
  41337f:	mov    rdi,rax
  413382:	test   ebp,ebp
  413384:	mov    r13,rdi
  413387:	jne    0x413a25
  41338d:	mov    DWORD PTR [rsp+0x9c],0x1
  413398:	mov    rbx,QWORD PTR [rsp+0x48]
  41339d:	mov    QWORD PTR [rsp+0x40],r12
  4133a2:	mov    QWORD PTR [rsp+0x50],r15
  4133a7:	jmp    0x41346e
  4133ac:	nop    DWORD PTR [rax+0x0]
  4133b0:	mov    rcx,r8
  4133b3:	call   0x414d40
  4133b8:	mov    eax,r12d
  4133bb:	or     eax,DWORD PTR [rsp+0x120]
  4133c2:	jne    0x4133da
  4133c4:	mov    ecx,DWORD PTR [rsp+0x38]
  4133c8:	test   ecx,ecx
  4133ca:	jne    0x4133da
  4133cc:	mov    rax,QWORD PTR [rsp+0x50]
  4133d1:	test   BYTE PTR [rax],0x1
  4133d4:	je     0x413b95
  4133da:	test   r14d,r14d
  4133dd:	js     0x4138f0
  4133e3:	or     r14d,DWORD PTR [rsp+0x120]
  4133eb:	jne    0x4133fb
  4133ed:	mov    rax,QWORD PTR [rsp+0x50]
  4133f2:	test   BYTE PTR [rax],0x1
  4133f5:	je     0x4138f0
  4133fb:	test   r12d,r12d
  4133fe:	jle    0x41340b
  413400:	cmp    DWORD PTR [rsp+0x38],0x2
  413405:	jne    0x413aff
  41340b:	add    rbx,0x1
  41340f:	mov    BYTE PTR [rbx-0x1],bpl
  413413:	mov    eax,DWORD PTR [rsp+0x68]
  413417:	cmp    DWORD PTR [rsp+0x9c],eax
  41341e:	je     0x413a8b
  413424:	xor    r8d,r8d
  413427:	mov    rcx,rsi
  41342a:	mov    edx,0xa
  41342f:	call   0x414db0
  413434:	xor    r8d,r8d
  413437:	cmp    rdi,r13
  41343a:	mov    rsi,rax
  41343d:	mov    edx,0xa
  413442:	mov    rcx,rdi
  413445:	je     0x4134e0
  41344b:	call   0x414db0
  413450:	mov    rcx,r13
  413453:	xor    r8d,r8d
  413456:	mov    edx,0xa
  41345b:	mov    rdi,rax
  41345e:	call   0x414db0
  413463:	mov    r13,rax
  413466:	add    DWORD PTR [rsp+0x9c],0x1
  41346e:	mov    r12,QWORD PTR [rsp+0x40]
  413473:	mov    rcx,rsi
  413476:	mov    rdx,r12
  413479:	call   0x4126c0
  41347e:	mov    rdx,rdi
  413481:	mov    rcx,rsi
  413484:	mov    r15d,eax
  413487:	lea    ebp,[rax+0x30]
  41348a:	call   0x415260
  41348f:	mov    rcx,r12
  413492:	mov    rdx,r13
  413495:	mov    r14d,eax
  413498:	call   0x4152b0
  41349d:	mov    r9d,DWORD PTR [rax+0x10]
  4134a1:	mov    r8,rax
  4134a4:	mov    r12d,0x1
  4134aa:	test   r9d,r9d
  4134ad:	jne    0x4133b0
  4134b3:	mov    rdx,rax
  4134b6:	mov    rcx,rsi
  4134b9:	mov    QWORD PTR [rsp+0x58],rax
  4134be:	call   0x415260
  4134c3:	mov    r8,QWORD PTR [rsp+0x58]
  4134c8:	mov    r12d,eax
  4134cb:	jmp    0x4133b0
  4134d0:	mov    r12d,DWORD PTR [rsp+0x58]
  4134d5:	mov    ebx,DWORD PTR [rsp+0x50]
  4134d9:	xor    edi,edi
  4134db:	jmp    0x41307f
  4134e0:	call   0x414db0
  4134e5:	mov    rdi,rax
  4134e8:	mov    r13,rax
  4134eb:	jmp    0x413466
  4134f0:	mov    edx,DWORD PTR [rsp+0x58]
  4134f4:	mov    rcx,rsi
  4134f7:	call   0x414fd0
  4134fc:	mov    rsi,rax
  4134ff:	jmp    0x4130fb
  413504:	mov    DWORD PTR [rsp+0x60],0x0
  41350c:	jmp    0x412ba7
  413511:	mov    rdx,r12
  413514:	mov    rcx,rsi
  413517:	call   0x415260
  41351c:	test   eax,eax
  41351e:	jns    0x4131a0
  413524:	xor    r8d,r8d
  413527:	mov    rcx,rsi
  41352a:	mov    edx,0xa
  41352f:	sub    DWORD PTR [rsp+0x30],0x1
  413534:	call   0x414db0
  413539:	mov    rsi,rax
  41353c:	mov    eax,DWORD PTR [rsp+0x60]
  413540:	test   eax,eax
  413542:	jne    0x413c08
  413548:	mov    eax,DWORD PTR [rsp+0x8c]
  41354f:	test   eax,eax
  413551:	jg     0x413565
  413553:	cmp    DWORD PTR [rsp+0x120],0x2
  41355b:	mov    DWORD PTR [rsp+0x68],eax
  41355f:	jg     0x4131bc
  413565:	mov    eax,DWORD PTR [rsp+0x8c]
  41356c:	mov    DWORD PTR [rsp+0x68],eax
  413570:	mov    DWORD PTR [rsp+0x9c],0x1
  41357b:	mov    rbx,QWORD PTR [rsp+0x48]
  413580:	mov    r13d,DWORD PTR [rsp+0x68]
  413585:	jmp    0x4135ab
  413587:	nop    WORD PTR [rax+rax*1+0x0]
  413590:	mov    rcx,rsi
  413593:	xor    r8d,r8d
  413596:	mov    edx,0xa
  41359b:	call   0x414db0
  4135a0:	add    DWORD PTR [rsp+0x9c],0x1
  4135a8:	mov    rsi,rax
  4135ab:	mov    rdx,r12
  4135ae:	mov    rcx,rsi
  4135b1:	add    rbx,0x1
  4135b5:	call   0x4126c0
  4135ba:	lea    ebp,[rax+0x30]
  4135bd:	mov    BYTE PTR [rbx-0x1],bpl
  4135c1:	cmp    DWORD PTR [rsp+0x9c],r13d
  4135c9:	jl     0x413590
  4135cb:	xor    r14d,r14d
  4135ce:	mov    eax,DWORD PTR [rsp+0x38]
  4135d2:	test   eax,eax
  4135d4:	je     0x41399c
  4135da:	cmp    eax,0x2
  4135dd:	je     0x4139cc
  4135e3:	cmp    DWORD PTR [rsi+0x14],0x1
  4135e7:	jle    0x413b63
  4135ed:	movzx  edx,BYTE PTR [rbx-0x1]
  4135f1:	mov    rcx,QWORD PTR [rsp+0x48]
  4135f6:	jmp    0x413610
  4135f8:	nop    DWORD PTR [rax+rax*1+0x0]
  413600:	cmp    rax,rcx
  413603:	je     0x4137bc
  413609:	movzx  edx,BYTE PTR [rax-0x1]
  41360d:	mov    rbx,rax
  413610:	cmp    dl,0x39
  413613:	lea    rax,[rbx-0x1]
  413617:	je     0x413600
  413619:	add    edx,0x1
  41361c:	mov    r15d,0x20
  413622:	mov    BYTE PTR [rax],dl
  413624:	mov    rcx,r12
  413627:	call   0x414d40
  41362c:	test   rdi,rdi
  41362f:	je     0x41371f
  413635:	cmp    r14,rdi
  413638:	je     0x413647
  41363a:	test   r14,r14
  41363d:	je     0x413647
  41363f:	mov    rcx,r14
  413642:	call   0x414d40
  413647:	mov    ebp,DWORD PTR [rsp+0x30]
  41364b:	add    ebp,0x1
  41364e:	jmp    0x412fb5
  413653:	mov    QWORD PTR [rsp+0x40],r9
  413658:	mov    rdi,QWORD PTR [rsp+0x48]
  41365d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  413663:	mov    DWORD PTR [rsp+0x9c],0x1
  41366e:	movapd xmm1,xmm0
  413672:	mov    rbx,rdi
  413675:	add    rbx,0x1
  413679:	divsd  xmm1,xmm2
  41367d:	cvttsd2si eax,xmm1
  413681:	pxor   xmm1,xmm1
  413685:	cvtsi2sd xmm1,eax
  413689:	lea    edx,[rax+0x30]
  41368c:	mov    BYTE PTR [rdi],dl
  41368e:	mulsd  xmm1,xmm2
  413692:	subsd  xmm0,xmm1
  413696:	ucomisd xmm0,xmm6
  41369a:	jp     0x41369e
  41369c:	je     0x413710
  41369e:	mov    edx,DWORD PTR [rsp+0x9c]
  4136a5:	cmp    DWORD PTR [rsp+0x68],edx
  4136a9:	je     0x413797
  4136af:	movsd  xmm3,QWORD PTR [rip+0x83e9]        # 0x41baa0
  4136b7:	movapd xmm4,xmm6
  4136bb:	mov    ecx,DWORD PTR [rsp+0x68]
  4136bf:	jmp    0x4136d0
  4136c1:	mov    edx,DWORD PTR [rsp+0x9c]
  4136c8:	cmp    ecx,edx
  4136ca:	je     0x413797
  4136d0:	mulsd  xmm0,xmm3
  4136d4:	add    edx,0x1
  4136d7:	add    rbx,0x1
  4136db:	mov    DWORD PTR [rsp+0x9c],edx
  4136e2:	movapd xmm1,xmm0
  4136e6:	divsd  xmm1,xmm2
  4136ea:	cvttsd2si eax,xmm1
  4136ee:	pxor   xmm1,xmm1
  4136f2:	cvtsi2sd xmm1,eax
  4136f6:	lea    edx,[rax+0x30]
  4136f9:	mov    BYTE PTR [rbx-0x1],dl
  4136fc:	mulsd  xmm1,xmm2
  413700:	subsd  xmm0,xmm1
  413704:	ucomisd xmm0,xmm6
  413708:	jp     0x4136c1
  41370a:	ucomisd xmm0,xmm4
  41370e:	jne    0x4136c1
  413710:	mov    ebp,DWORD PTR [rsp+0x30]
  413714:	add    ebp,0x1
  413717:	xor    r15d,r15d
  41371a:	jmp    0x412dd0
  41371f:	mov    ebp,DWORD PTR [rsp+0x30]
  413723:	add    ebp,0x1
  413726:	jmp    0x412dd0
  41372b:	mov    ebx,0x1
  413730:	mov    DWORD PTR [rsp+0x128],0x1
  41373b:	jmp    0x412e8a
  413740:	cmp    DWORD PTR [rsp+0x68],0xe
  413745:	mov    DWORD PTR [rsp+0x9c],0x1
  413750:	mov    ecx,0x1
  413755:	setbe  bl
  413758:	and    ebx,eax
  41375a:	jmp    0x412bd9
  41375f:	mov    r12d,DWORD PTR [rsp+0x58]
  413764:	mov    ebx,DWORD PTR [rsp+0x50]
  413768:	jmp    0x41306a
  41376d:	mov    eax,0xffffffff
  413772:	xor    ebx,ebx
  413774:	mov    DWORD PTR [rsp+0x60],0x1
  41377c:	mov    DWORD PTR [rsp+0x8c],eax
  413783:	mov    DWORD PTR [rsp+0x68],eax
  413787:	mov    DWORD PTR [rsp+0x128],0x0
  413792:	jmp    0x412c03
  413797:	mov    r10d,DWORD PTR [rsp+0x38]
  41379c:	test   r10d,r10d
  41379f:	je     0x413a5e
  4137a5:	cmp    DWORD PTR [rsp+0x38],0x1
  4137aa:	je     0x413b51
  4137b0:	mov    ebp,DWORD PTR [rsp+0x30]
  4137b4:	add    ebp,0x1
  4137b7:	jmp    0x412dc3
  4137bc:	mov    rax,QWORD PTR [rsp+0x48]
  4137c1:	add    DWORD PTR [rsp+0x30],0x1
  4137c6:	mov    r15d,0x20
  4137cc:	mov    BYTE PTR [rax],0x31
  4137cf:	jmp    0x413624
  4137d4:	mov    ebp,0x2
  4137d9:	xor    r12d,r12d
  4137dc:	xor    edi,edi
  4137de:	jmp    0x412f92
  4137e3:	mov    r10,QWORD PTR [rip+0x8616]        # 0x41be00
  4137ea:	mov    QWORD PTR [rsp+0x38],rax
  4137ef:	movsd  xmm3,QWORD PTR [rsp+0x38]
  4137f5:	mov    DWORD PTR [rsp+0x9c],0x1
  413800:	mov    rbx,QWORD PTR [rsp+0x48]
  413805:	movsd  xmm1,QWORD PTR [rip+0x8293]        # 0x41baa0
  41380d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  413813:	jmp    0x413823
  413815:	mulsd  xmm0,xmm1
  413819:	add    edx,0x1
  41381c:	mov    DWORD PTR [rsp+0x9c],edx
  413823:	cvttsd2si eax,xmm0
  413827:	test   eax,eax
  413829:	je     0x413837
  41382b:	pxor   xmm2,xmm2
  41382f:	cvtsi2sd xmm2,eax
  413833:	subsd  xmm0,xmm2
  413837:	add    rbx,0x1
  41383b:	add    eax,0x30
  41383e:	mov    BYTE PTR [rbx-0x1],al
  413841:	mov    edx,DWORD PTR [rsp+0x9c]
  413848:	cmp    edx,r9d
  41384b:	jne    0x413815
  41384d:	movsd  xmm1,QWORD PTR [rip+0x827b]        # 0x41bad0
  413855:	movapd xmm2,xmm3
  413859:	addsd  xmm2,xmm1
  41385d:	ucomisd xmm0,xmm2
  413861:	ja     0x4138b7
  413863:	subsd  xmm1,xmm3
  413867:	ucomisd xmm1,xmm0
  41386b:	jbe    0x412f0e
  413871:	ucomisd xmm0,xmm6
  413875:	jp     0x413bfd
  41387b:	jne    0x413bfd
  413881:	xor    r15d,r15d
  413884:	jmp    0x413897
  413886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413890:	movzx  eax,BYTE PTR [rbx-0x2]
  413894:	mov    rbx,rdx
  413897:	cmp    al,0x30
  413899:	lea    rdx,[rbx-0x1]
  41389d:	je     0x413890
  41389f:	lea    ebp,[rcx+0x1]
  4138a2:	jmp    0x412dd0
  4138a7:	test   al,0x1
  4138a9:	mov    ecx,DWORD PTR [rsp+0x30]
  4138ad:	movzx  eax,BYTE PTR [rbx-0x1]
  4138b1:	je     0x413bfd
  4138b7:	mov    r8,QWORD PTR [rsp+0x48]
  4138bc:	jmp    0x4138d0
  4138be:	xchg   ax,ax
  4138c0:	cmp    rdx,r8
  4138c3:	je     0x413a0c
  4138c9:	movzx  eax,BYTE PTR [rdx-0x1]
  4138cd:	mov    rbx,rdx
  4138d0:	cmp    al,0x39
  4138d2:	lea    rdx,[rbx-0x1]
  4138d6:	je     0x4138c0
  4138d8:	mov    QWORD PTR [rsp+0x48],r8
  4138dd:	add    eax,0x1
  4138e0:	mov    BYTE PTR [rdx],al
  4138e2:	lea    ebp,[rcx+0x1]
  4138e5:	mov    r15d,0x20
  4138eb:	jmp    0x412dd0
  4138f0:	mov    edx,DWORD PTR [rsp+0x38]
  4138f4:	mov    eax,r12d
  4138f7:	mov    r14d,ebp
  4138fa:	mov    r12,QWORD PTR [rsp+0x40]
  4138ff:	test   edx,edx
  413901:	je     0x413b31
  413907:	cmp    DWORD PTR [rsi+0x14],0x1
  41390b:	jle    0x413b27
  413911:	cmp    DWORD PTR [rsp+0x38],0x2
  413916:	jne    0x413967
  413918:	jmp    0x413b46
  41391d:	nop    DWORD PTR [rax]
  413920:	add    rbx,0x1
  413924:	xor    r8d,r8d
  413927:	mov    rcx,r13
  41392a:	mov    BYTE PTR [rbx-0x1],r14b
  41392e:	mov    edx,0xa
  413933:	call   0x414db0
  413938:	cmp    rdi,r13
  41393b:	mov    rcx,rsi
  41393e:	mov    edx,0xa
  413943:	cmove  rdi,rax
  413947:	xor    r8d,r8d
  41394a:	mov    rbp,rax
  41394d:	call   0x414db0
  413952:	mov    rdx,r12
  413955:	mov    rcx,rax
  413958:	mov    rsi,rax
  41395b:	call   0x4126c0
  413960:	lea    r14d,[rax+0x30]
  413964:	mov    r13,rbp
  413967:	mov    rdx,r13
  41396a:	mov    rcx,r12
  41396d:	call   0x415260
  413972:	test   eax,eax
  413974:	jg     0x413920
  413976:	cmp    r14d,0x39
  41397a:	je     0x413b76
  413980:	add    r14d,0x1
  413984:	mov    r15d,0x20
  41398a:	mov    BYTE PTR [rbx],r14b
  41398d:	mov    r14,rdi
  413990:	add    rbx,0x1
  413994:	mov    rdi,r13
  413997:	jmp    0x413624
  41399c:	mov    rcx,rsi
  41399f:	mov    edx,0x1
  4139a4:	call   0x415140
  4139a9:	mov    rdx,r12
  4139ac:	mov    rcx,rax
  4139af:	mov    rsi,rax
  4139b2:	call   0x415260
  4139b7:	cmp    eax,0x0
  4139ba:	jg     0x4135ed
  4139c0:	jne    0x4139cc
  4139c2:	and    bpl,0x1
  4139c6:	jne    0x4135ed
  4139cc:	cmp    DWORD PTR [rsi+0x14],0x1
  4139d0:	mov    r15d,0x10
  4139d6:	jg     0x4139e3
  4139d8:	jmp    0x413c6d
  4139dd:	nop    DWORD PTR [rax]
  4139e0:	mov    rbx,rax
  4139e3:	cmp    BYTE PTR [rbx-0x1],0x30
  4139e7:	lea    rax,[rbx-0x1]
  4139eb:	je     0x4139e0
  4139ed:	jmp    0x413624
  4139f2:	mov    ebx,DWORD PTR [rsp+0x50]
  4139f6:	mov    DWORD PTR [rsp+0x9c],0x0
  413a01:	xor    eax,eax
  413a03:	sub    ebx,DWORD PTR [rsp+0x68]
  413a07:	jmp    0x41306a
  413a0c:	mov    QWORD PTR [rsp+0x48],r8
  413a11:	add    ecx,0x1
  413a14:	mov    BYTE PTR [r8],0x30
  413a18:	mov    rdx,r8
  413a1b:	mov    eax,0x31
  413a20:	jmp    0x4138e0
  413a25:	mov    ecx,DWORD PTR [rdi+0x8]
  413a28:	call   0x414c30
  413a2d:	lea    rcx,[rax+0x10]
  413a31:	mov    rbx,rax
  413a34:	movsxd rax,DWORD PTR [rdi+0x14]
  413a38:	lea    rdx,[rdi+0x10]
  413a3c:	lea    r8,[rax*4+0x8]
  413a44:	call   0x415fe0
  413a49:	mov    edx,0x1
  413a4e:	mov    rcx,rbx
  413a51:	call   0x415140
  413a56:	mov    r13,rax
  413a59:	jmp    0x41338d
  413a5e:	addsd  xmm0,xmm0
  413a62:	ucomisd xmm0,xmm2
  413a66:	ja     0x413b51
  413a6c:	ucomisd xmm2,xmm0
  413a70:	jp     0x413a78
  413a72:	je     0x4138a7
  413a78:	movzx  eax,BYTE PTR [rbx-0x1]
  413a7c:	mov    ecx,DWORD PTR [rsp+0x30]
  413a80:	mov    r15d,0x10
  413a86:	jmp    0x413897
  413a8b:	mov    r14,rdi
  413a8e:	mov    r12,QWORD PTR [rsp+0x40]
  413a93:	mov    rdi,r13
  413a96:	jmp    0x4135ce
  413a9b:	mov    eax,DWORD PTR [rsp+0x68]
  413a9f:	test   eax,eax
  413aa1:	je     0x412eaa
  413aa7:	mov    r9d,DWORD PTR [rsp+0x8c]
  413aaf:	test   r9d,r9d
  413ab2:	jle    0x412f0e
  413ab8:	movsd  xmm0,QWORD PTR [rip+0x7fe0]        # 0x41baa0
  413ac0:	mov    ecx,0xffffffff
  413ac5:	movsd  xmm1,QWORD PTR [rip+0x7fdb]        # 0x41baa8
  413acd:	mulsd  xmm0,xmm4
  413ad1:	mulsd  xmm1,xmm0
  413ad5:	addsd  xmm1,QWORD PTR [rip+0x7fd3]        # 0x41bab0
  413add:	movq   rdx,xmm1
  413ae2:	movq   rax,xmm1
  413ae7:	shr    rdx,0x20
  413aeb:	mov    eax,eax
  413aed:	sub    edx,0x3400000
  413af3:	shl    rdx,0x20
  413af7:	or     rax,rdx
  413afa:	jmp    0x412cb2
  413aff:	cmp    ebp,0x39
  413b02:	mov    r12,QWORD PTR [rsp+0x40]
  413b07:	mov    rax,rbx
  413b0a:	je     0x413b79
  413b0c:	add    ebp,0x1
  413b0f:	mov    r14,rdi
  413b12:	add    rbx,0x1
  413b16:	mov    BYTE PTR [rax],bpl
  413b19:	mov    rdi,r13
  413b1c:	mov    r15d,0x20
  413b22:	jmp    0x413624
  413b27:	cmp    DWORD PTR [rsi+0x18],0x0
  413b2b:	jne    0x413911
  413b31:	test   eax,eax
  413b33:	jg     0x413bc9
  413b39:	xor    r15d,r15d
  413b3c:	cmp    DWORD PTR [rsi+0x14],0x1
  413b40:	jle    0x413c48
  413b46:	mov    r15d,0x10
  413b4c:	jmp    0x41398a
  413b51:	movzx  eax,BYTE PTR [rbx-0x1]
  413b55:	mov    ecx,DWORD PTR [rsp+0x30]
  413b59:	mov    r8,QWORD PTR [rsp+0x48]
  413b5e:	jmp    0x4138d0
  413b63:	mov    eax,DWORD PTR [rsi+0x18]
  413b66:	test   eax,eax
  413b68:	jne    0x4135ed
  413b6e:	xor    r15d,r15d
  413b71:	jmp    0x4139e3
  413b76:	mov    rax,rbx
  413b79:	mov    r14,rdi
  413b7c:	add    rbx,0x1
  413b80:	mov    rdi,r13
  413b83:	mov    BYTE PTR [rax],0x39
  413b86:	mov    edx,0x39
  413b8b:	mov    rcx,QWORD PTR [rsp+0x48]
  413b90:	jmp    0x413610
  413b95:	cmp    ebp,0x39
  413b98:	mov    r12,QWORD PTR [rsp+0x40]
  413b9d:	mov    rax,rbx
  413ba0:	je     0x413b76
  413ba2:	test   r14d,r14d
  413ba5:	jle    0x413c80
  413bab:	mov    ebp,r15d
  413bae:	mov    r15d,0x20
  413bb4:	add    ebp,0x31
  413bb7:	mov    r14,rdi
  413bba:	add    rbx,0x1
  413bbe:	mov    BYTE PTR [rax],bpl
  413bc1:	mov    rdi,r13
  413bc4:	jmp    0x413624
  413bc9:	mov    rcx,rsi
  413bcc:	mov    edx,0x1
  413bd1:	call   0x415140
  413bd6:	mov    rdx,r12
  413bd9:	mov    rcx,rax
  413bdc:	mov    rsi,rax
  413bdf:	call   0x415260
  413be4:	cmp    eax,0x0
  413be7:	jle    0x413c5a
  413be9:	cmp    ebp,0x39
  413bec:	je     0x413b76
  413bee:	lea    r14d,[rbp+0x1]
  413bf2:	mov    r15d,0x20
  413bf8:	jmp    0x413b3c
  413bfd:	mov    r15d,0x10
  413c03:	jmp    0x413897
  413c08:	xor    r8d,r8d
  413c0b:	mov    rcx,rdi
  413c0e:	mov    edx,0xa
  413c13:	call   0x414db0
  413c18:	mov    rdi,rax
  413c1b:	mov    eax,DWORD PTR [rsp+0x8c]
  413c22:	test   eax,eax
  413c24:	jg     0x413c38
  413c26:	cmp    DWORD PTR [rsp+0x120],0x2
  413c2e:	mov    DWORD PTR [rsp+0x68],eax
  413c32:	jg     0x4131bc
  413c38:	mov    eax,DWORD PTR [rsp+0x8c]
  413c3f:	mov    DWORD PTR [rsp+0x68],eax
  413c43:	jmp    0x41336f
  413c48:	cmp    DWORD PTR [rsi+0x18],0x0
  413c4c:	mov    eax,0x10
  413c51:	cmovne r15d,eax
  413c55:	jmp    0x41398a
  413c5a:	jne    0x413c62
  413c5c:	test   bpl,0x1
  413c60:	jne    0x413be9
  413c62:	mov    r15d,0x20
  413c68:	jmp    0x413b3c
  413c6d:	cmp    DWORD PTR [rsi+0x18],0x1
  413c71:	sbb    r15d,r15d
  413c74:	not    r15d
  413c77:	and    r15d,0x10
  413c7b:	jmp    0x4139e3
  413c80:	cmp    DWORD PTR [rsi+0x14],0x1
  413c84:	mov    r15d,0x10
  413c8a:	jg     0x413bb7
  413c90:	cmp    DWORD PTR [rsi+0x18],0x1
  413c94:	sbb    r15d,r15d
  413c97:	not    r15d
  413c9a:	and    r15d,0x10
  413c9e:	jmp    0x413bb7
  413ca3:	xor    eax,eax
  413ca5:	jmp    0x412987
  413caa:	nop
  413cab:	nop
  413cac:	nop
  413cad:	nop
  413cae:	nop
  413caf:	nop
  413cb0:	push   r15
  413cb2:	push   r14
  413cb4:	push   r13
  413cb6:	push   r12
  413cb8:	push   rbp
  413cb9:	push   rdi
  413cba:	push   rsi
  413cbb:	push   rbx
  413cbc:	sub    rsp,0x28
  413cc0:	mov    r14,rcx
  413cc3:	mov    r13,rdx
  413cc6:	mov    QWORD PTR [rsp+0x80],r8
  413cce:	mov    QWORD PTR [rsp+0x88],r9
  413cd6:	call   0x415ff8
  413cdb:	mov    rdi,QWORD PTR [rip+0x805e]        # 0x41bd40
  413ce2:	mov    rsi,QWORD PTR [rax]
  413ce5:	cmp    BYTE PTR [rdi+0x30],0x0
  413ce9:	je     0x414110
  413cef:	mov    rax,QWORD PTR [rsp+0x88]
  413cf7:	xor    r8d,r8d
  413cfa:	mov    QWORD PTR [rax],0x0
  413d01:	mov    rbx,QWORD PTR [r14]
  413d04:	movzx  edx,BYTE PTR [rbx+0x2]
  413d08:	lea    rax,[rbx+0x3]
  413d0c:	add    rbx,0x2
  413d10:	cmp    dl,0x30
  413d13:	jne    0x413d29
  413d15:	mov    rbx,rax
  413d18:	add    rax,0x1
  413d1c:	movzx  edx,BYTE PTR [rax-0x1]
  413d20:	add    r8d,0x1
  413d24:	cmp    dl,0x30
  413d27:	je     0x413d15
  413d29:	cmp    BYTE PTR [rdi+rdx*1],0x0
  413d2d:	jne    0x413e80
  413d33:	movzx  r9d,BYTE PTR [rsi]
  413d37:	test   r9b,r9b
  413d3a:	je     0x41437a
  413d40:	movzx  edx,BYTE PTR [rbx]
  413d43:	cmp    r9b,dl
  413d46:	jne    0x414123
  413d4c:	mov    eax,0x1
  413d51:	jmp    0x413d61
  413d53:	add    rax,0x1
  413d57:	cmp    dl,BYTE PTR [rbx+rax*1-0x1]
  413d5b:	jne    0x414120
  413d61:	movzx  edx,BYTE PTR [rsi+rax*1]
  413d65:	test   dl,dl
  413d67:	jne    0x413d53
  413d69:	add    rax,rbx
  413d6c:	movzx  ecx,BYTE PTR [rax]
  413d6f:	movzx  r10d,BYTE PTR [rdi+rcx*1]
  413d74:	mov    rdx,rcx
  413d77:	test   r10b,r10b
  413d7a:	jne    0x414200
  413d80:	cmp    dl,0x50
  413d83:	je     0x414030
  413d89:	cmp    dl,0x70
  413d8c:	je     0x414030
  413d92:	mov    rbp,rax
  413d95:	mov    r11d,0x1
  413d9b:	xor    r12d,r12d
  413d9e:	xor    r15d,r15d
  413da1:	xor    r10d,r10d
  413da4:	test   r8d,r8d
  413da7:	jne    0x413dad
  413da9:	lea    rax,[rbx-0x1]
  413dad:	test   r11d,r11d
  413db0:	mov    QWORD PTR [r14],rax
  413db3:	jne    0x4140e0
  413db9:	test   r10d,r10d
  413dbc:	je     0x413ef0
  413dc2:	test   r15d,r15d
  413dc5:	mov    eax,DWORD PTR [r13+0xc]
  413dc9:	jne    0x414170
  413dcf:	cmp    eax,0x2
  413dd2:	je     0x414418
  413dd8:	cmp    eax,0x3
  413ddb:	je     0x414402
  413de1:	cmp    eax,0x1
  413de4:	je     0x4141e8
  413dea:	mov    esi,DWORD PTR [r13+0x0]
  413dee:	mov    ebx,esi
  413df0:	and    esi,0x1f
  413df3:	sar    ebx,0x5
  413df6:	cmp    esi,0x1
  413df9:	mov    edi,ebx
  413dfb:	sbb    edi,0xffffffff
  413dfe:	xor    ecx,ecx
  413e00:	mov    eax,edi
  413e02:	sar    eax,1
  413e04:	je     0x413e17
  413e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e10:	add    ecx,0x1
  413e13:	sar    eax,1
  413e15:	jne    0x413e10
  413e17:	call   0x414c30
  413e1c:	mov    rcx,QWORD PTR [rsp+0x88]
  413e24:	test   ebx,ebx
  413e26:	mov    QWORD PTR [rcx],rax
  413e29:	mov    DWORD PTR [rax+0x14],edi
  413e2c:	jle    0x414538
  413e32:	lea    ecx,[rbx-0x1]
  413e35:	lea    rdx,[rax+0x18]
  413e39:	lea    rcx,[rax+rcx*4+0x1c]
  413e3e:	xchg   ax,ax
  413e40:	mov    DWORD PTR [rdx],0xffffffff
  413e46:	add    rdx,0x4
  413e4a:	cmp    rdx,rcx
  413e4d:	jne    0x413e40
  413e4f:	mov    edx,ebx
  413e51:	cmp    edi,ebx
  413e53:	jle    0x413e68
  413e55:	movsxd r8,edx
  413e58:	mov    edx,0x20
  413e5d:	mov    ecx,edx
  413e5f:	sub    ecx,esi
  413e61:	sar    edx,cl
  413e63:	mov    DWORD PTR [rax+r8*4+0x18],edx
  413e68:	mov    eax,DWORD PTR [r13+0x4]
  413e6c:	mov    rdi,QWORD PTR [rsp+0x80]
  413e74:	mov    DWORD PTR [rdi],eax
  413e76:	mov    eax,0x11
  413e7b:	jmp    0x4140e2
  413e80:	movzx  eax,BYTE PTR [rbx]
  413e83:	movzx  r9d,BYTE PTR [rsi]
  413e87:	add    r8d,0x1
  413e8b:	xor    r11d,r11d
  413e8e:	xor    r12d,r12d
  413e91:	movzx  r10d,BYTE PTR [rdi+rax*1]
  413e96:	mov    rdx,rax
  413e99:	test   r10b,r10b
  413e9c:	mov    rax,rbx
  413e9f:	je     0x413eb1
  413ea1:	add    rax,0x1
  413ea5:	movzx  ecx,BYTE PTR [rax]
  413ea8:	cmp    BYTE PTR [rdi+rcx*1],0x0
  413eac:	mov    rdx,rcx
  413eaf:	jne    0x413ea1
  413eb1:	cmp    dl,r9b
  413eb4:	je     0x414130
  413eba:	test   r12,r12
  413ebd:	movzx  edx,BYTE PTR [rax]
  413ec0:	je     0x413ec9
  413ec2:	sub    r12d,eax
  413ec5:	shl    r12d,0x2
  413ec9:	cmp    dl,0x50
  413ecc:	je     0x414039
  413ed2:	cmp    dl,0x70
  413ed5:	je     0x414039
  413edb:	test   r11d,r11d
  413ede:	mov    QWORD PTR [r14],rax
  413ee1:	mov    rbp,rax
  413ee4:	jne    0x4140e0
  413eea:	nop    WORD PTR [rax+rax*1+0x0]
  413ef0:	mov    rax,rbp
  413ef3:	xor    ecx,ecx
  413ef5:	sub    rax,rbx
  413ef8:	sub    eax,0x1
  413efb:	cmp    eax,0x7
  413efe:	jle    0x413f0a
  413f00:	sar    eax,1
  413f02:	add    ecx,0x1
  413f05:	cmp    eax,0x7
  413f08:	jg     0x413f00
  413f0a:	call   0x414c30
  413f0f:	cmp    BYTE PTR [rsi+0x1],0x0
  413f13:	mov    r14,rax
  413f16:	lea    r15,[rax+0x18]
  413f1a:	je     0x41442e
  413f20:	mov    edx,0x1
  413f25:	jmp    0x413f33
  413f27:	nop    WORD PTR [rax+rax*1+0x0]
  413f30:	mov    rdx,rax
  413f33:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x0
  413f38:	lea    rax,[rdx+0x1]
  413f3c:	jne    0x413f30
  413f3e:	cmp    rbx,rbp
  413f41:	jae    0x414435
  413f47:	add    rsi,rdx
  413f4a:	mov    rax,r15
  413f4d:	xor    r9d,r9d
  413f50:	xor    r8d,r8d
  413f53:	jmp    0x413f81
  413f55:	cmp    r8d,0x20
  413f59:	je     0x4140f3
  413f5f:	movzx  r10d,cl
  413f63:	mov    ecx,r8d
  413f66:	add    r8d,0x4
  413f6a:	movzx  r10d,BYTE PTR [rdi+r10*1]
  413f6f:	mov    rbp,r11
  413f72:	and    r10d,0xf
  413f76:	shl    r10d,cl
  413f79:	or     r9d,r10d
  413f7c:	cmp    rbx,rbp
  413f7f:	jae    0x413f98
  413f81:	movzx  ecx,BYTE PTR [rbp-0x1]
  413f85:	lea    r11,[rbp-0x1]
  413f89:	cmp    cl,BYTE PTR [rsi]
  413f8b:	jne    0x413f55
  413f8d:	sub    r11,rdx
  413f90:	mov    rbp,r11
  413f93:	cmp    rbx,rbp
  413f96:	jb     0x413f81
  413f98:	bsr    edx,r9d
  413f9c:	xor    edx,0x1f
  413f9f:	mov    DWORD PTR [rax],r9d
  413fa2:	add    rax,0x4
  413fa6:	mov    esi,DWORD PTR [r13+0x0]
  413faa:	sub    rax,r15
  413fad:	sar    rax,0x2
  413fb1:	mov    DWORD PTR [r14+0x14],eax
  413fb5:	shl    eax,0x5
  413fb8:	sub    eax,edx
  413fba:	cmp    eax,esi
  413fbc:	jg     0x414268
  413fc2:	mov    edi,0x0
  413fc7:	jl     0x41423e
  413fcd:	cmp    r12d,DWORD PTR [r13+0x8]
  413fd1:	jg     0x4141e0
  413fd7:	mov    eax,DWORD PTR [r13+0x4]
  413fdb:	cmp    r12d,eax
  413fde:	jge    0x4142c9
  413fe4:	mov    ebx,eax
  413fe6:	sub    ebx,r12d
  413fe9:	cmp    esi,ebx
  413feb:	jg     0x414327
  413ff1:	mov    edx,DWORD PTR [r13+0xc]
  413ff5:	cmp    edx,0x2
  413ff8:	je     0x414502
  413ffe:	cmp    edx,0x3
  414001:	je     0x4144df
  414007:	cmp    edx,0x1
  41400a:	je     0x414512
  414010:	mov    rcx,r14
  414013:	call   0x414d40
  414018:	call   0x4160b8
  41401d:	mov    DWORD PTR [rax],0x22
  414023:	mov    eax,0x50
  414028:	jmp    0x4140e2
  41402d:	nop    DWORD PTR [rax]
  414030:	xor    r12d,r12d
  414033:	mov    r11d,0x1
  414039:	movzx  edx,BYTE PTR [rax+0x1]
  41403d:	cmp    dl,0x2b
  414040:	je     0x414260
  414046:	cmp    dl,0x2d
  414049:	je     0x414141
  41404f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  414053:	xor    r15d,r15d
  414056:	lea    r9,[rax+0x1]
  41405a:	lea    ecx,[rdx-0x1]
  41405d:	cmp    cl,0x18
  414060:	ja     0x41415f
  414066:	lea    rcx,[r9+0x1]
  41406a:	movzx  r9d,BYTE PTR [r9+0x1]
  41406f:	sub    edx,0x10
  414072:	xor    r10d,r10d
  414075:	movzx  ebp,BYTE PTR [rdi+r9*1]
  41407a:	mov    r9d,ebp
  41407d:	sub    r9d,0x1
  414081:	cmp    r9b,0x18
  414085:	ja     0x4140c1
  414087:	nop    WORD PTR [rax+rax*1+0x0]
  414090:	test   edx,0xf8000000
  414096:	mov    r9d,0x1
  41409c:	lea    edx,[rdx+rdx*4]
  41409f:	cmovne r10d,r9d
  4140a3:	add    rcx,0x1
  4140a7:	movzx  r9d,BYTE PTR [rcx]
  4140ab:	lea    edx,[rbp+rdx*2-0x10]
  4140af:	movzx  ebp,BYTE PTR [rdi+r9*1]
  4140b4:	mov    r9d,ebp
  4140b7:	sub    r9d,0x1
  4140bb:	cmp    r9b,0x18
  4140bf:	jbe    0x414090
  4140c1:	mov    r9d,r15d
  4140c4:	mov    rbp,rax
  4140c7:	mov    rax,rcx
  4140ca:	neg    r9d
  4140cd:	xor    edx,r9d
  4140d0:	add    edx,r15d
  4140d3:	add    r12d,edx
  4140d6:	jmp    0x413da4
  4140db:	nop    DWORD PTR [rax+rax*1+0x0]
  4140e0:	xor    eax,eax
  4140e2:	add    rsp,0x28
  4140e6:	pop    rbx
  4140e7:	pop    rsi
  4140e8:	pop    rdi
  4140e9:	pop    rbp
  4140ea:	pop    r12
  4140ec:	pop    r13
  4140ee:	pop    r14
  4140f0:	pop    r15
  4140f2:	ret    
  4140f3:	mov    DWORD PTR [rax],r9d
  4140f6:	mov    r8d,0x4
  4140fc:	movzx  r10d,BYTE PTR [rbp-0x1]
  414101:	add    rax,0x4
  414105:	xor    r9d,r9d
  414108:	xor    ecx,ecx
  41410a:	jmp    0x413f6a
  41410f:	nop
  414110:	call   0x4146c0
  414115:	jmp    0x413cef
  41411a:	nop    WORD PTR [rax+rax*1+0x0]
  414120:	mov    edx,r9d
  414123:	mov    rax,rbx
  414126:	jmp    0x413d80
  41412b:	nop    DWORD PTR [rax+rax*1+0x0]
  414130:	test   r12,r12
  414133:	je     0x414445
  414139:	movzx  edx,BYTE PTR [rax]
  41413c:	jmp    0x413ec2
  414141:	mov    r15d,0x1
  414147:	movzx  edx,BYTE PTR [rax+0x2]
  41414b:	lea    r9,[rax+0x2]
  41414f:	movzx  edx,BYTE PTR [rdi+rdx*1]
  414153:	lea    ecx,[rdx-0x1]
  414156:	cmp    cl,0x18
  414159:	jbe    0x414066
  41415f:	mov    rbp,rax
  414162:	xor    r10d,r10d
  414165:	jmp    0x413da4
  41416a:	nop    WORD PTR [rax+rax*1+0x0]
  414170:	cmp    eax,0x2
  414173:	je     0x414311
  414179:	cmp    eax,0x3
  41417c:	jne    0x414018
  414182:	mov    r10d,DWORD PTR [rsp+0x90]
  41418a:	test   r10d,r10d
  41418d:	je     0x414018
  414193:	xor    ecx,ecx
  414195:	call   0x414c30
  41419a:	mov    r14,rax
  41419d:	mov    DWORD PTR [rax+0x14],0x1
  4141a4:	mov    DWORD PTR [rax+0x18],0x1
  4141ab:	mov    eax,DWORD PTR [r13+0x4]
  4141af:	mov    rdi,QWORD PTR [rsp+0x88]
  4141b7:	mov    QWORD PTR [rdi],r14
  4141ba:	mov    rdi,QWORD PTR [rsp+0x80]
  4141c2:	mov    DWORD PTR [rdi],eax
  4141c4:	call   0x4160b8
  4141c9:	mov    DWORD PTR [rax],0x22
  4141cf:	mov    eax,0x62
  4141d4:	jmp    0x4140e2
  4141d9:	nop    DWORD PTR [rax+0x0]
  4141e0:	mov    rcx,r14
  4141e3:	call   0x414d40
  4141e8:	call   0x4160b8
  4141ed:	mov    DWORD PTR [rax],0x22
  4141f3:	mov    eax,0xa3
  4141f8:	jmp    0x4140e2
  4141fd:	nop    DWORD PTR [rax]
  414200:	cmp    cl,0x30
  414203:	mov    rbx,rax
  414206:	jne    0x414226
  414208:	nop    DWORD PTR [rax+rax*1+0x0]
  414210:	add    rbx,0x1
  414214:	movzx  ecx,BYTE PTR [rbx]
  414217:	cmp    cl,0x30
  41421a:	je     0x414210
  41421c:	movzx  edx,cl
  41421f:	movzx  r10d,BYTE PTR [rdi+rdx*1]
  414224:	mov    edx,ecx
  414226:	xor    r11d,r11d
  414229:	test   r10b,r10b
  41422c:	mov    r12,rax
  41422f:	sete   r11b
  414233:	mov    r8d,0x1
  414239:	jmp    0x413e99
  41423e:	mov    ebx,esi
  414240:	mov    rcx,r14
  414243:	sub    ebx,eax
  414245:	mov    edx,ebx
  414247:	sub    r12d,ebx
  41424a:	call   0x415140
  41424f:	mov    r14,rax
  414252:	lea    r15,[rax+0x18]
  414256:	jmp    0x413fcd
  41425b:	nop    DWORD PTR [rax+rax*1+0x0]
  414260:	xor    r15d,r15d
  414263:	jmp    0x414147
  414268:	mov    ebx,eax
  41426a:	mov    rcx,r14
  41426d:	xor    edi,edi
  41426f:	sub    ebx,esi
  414271:	mov    edx,ebx
  414273:	call   0x4158d0
  414278:	test   eax,eax
  41427a:	je     0x4142b7
  41427c:	lea    ecx,[rbx-0x1]
  41427f:	mov    r8d,0x1
  414285:	mov    dil,0x1
  414288:	mov    eax,ecx
  41428a:	shl    r8d,cl
  41428d:	sar    eax,0x5
  414290:	cdqe   
  414292:	test   DWORD PTR [r15+rax*4],r8d
  414296:	je     0x4142b7
  414298:	test   ecx,ecx
  41429a:	jle    0x4144af
  4142a0:	mov    edx,ecx
  4142a2:	mov    rcx,r14
  4142a5:	call   0x4158d0
  4142aa:	test   eax,eax
  4142ac:	je     0x4144af
  4142b2:	mov    edi,0x3
  4142b7:	mov    edx,ebx
  4142b9:	mov    rcx,r14
  4142bc:	add    r12d,ebx
  4142bf:	call   0x414580
  4142c4:	jmp    0x413fcd
  4142c9:	mov    ebx,0x1
  4142ce:	test   edi,edi
  4142d0:	je     0x4142f4
  4142d2:	mov    eax,DWORD PTR [r13+0xc]
  4142d6:	cmp    eax,0x2
  4142d9:	je     0x414381
  4142df:	cmp    eax,0x3
  4142e2:	je     0x414394
  4142e8:	cmp    eax,0x1
  4142eb:	je     0x4144b9
  4142f1:	or     ebx,0x10
  4142f4:	mov    rax,QWORD PTR [rsp+0x88]
  4142fc:	mov    QWORD PTR [rax],r14
  4142ff:	mov    rax,QWORD PTR [rsp+0x80]
  414307:	mov    DWORD PTR [rax],r12d
  41430a:	mov    eax,ebx
  41430c:	jmp    0x4140e2
  414311:	mov    r11d,DWORD PTR [rsp+0x90]
  414319:	test   r11d,r11d
  41431c:	jne    0x414018
  414322:	jmp    0x414193
  414327:	test   edi,edi
  414329:	lea    ebp,[rbx-0x1]
  41432c:	jne    0x4144a5
  414332:	test   ebp,ebp
  414334:	jle    0x414342
  414336:	mov    edx,ebp
  414338:	mov    rcx,r14
  41433b:	call   0x4158d0
  414340:	mov    edi,eax
  414342:	mov    eax,ebp
  414344:	mov    ecx,ebp
  414346:	mov    edx,edi
  414348:	sar    eax,0x5
  41434b:	mov    r8d,0x1
  414351:	or     edx,0x2
  414354:	cdqe   
  414356:	shl    r8d,cl
  414359:	mov    rcx,r14
  41435c:	test   DWORD PTR [r15+rax*4],r8d
  414360:	cmovne edi,edx
  414363:	mov    edx,ebx
  414365:	sub    esi,ebx
  414367:	call   0x414580
  41436c:	mov    ebx,0x2
  414371:	mov    r12d,DWORD PTR [r13+0x4]
  414375:	jmp    0x4142ce
  41437a:	xor    eax,eax
  41437c:	jmp    0x413d69
  414381:	mov    eax,0x1
  414386:	sub    eax,DWORD PTR [rsp+0x90]
  41438d:	mov    DWORD PTR [rsp+0x90],eax
  414394:	mov    eax,DWORD PTR [rsp+0x90]
  41439b:	test   eax,eax
  41439d:	je     0x4142f1
  4143a3:	mov    rcx,r14
  4143a6:	movsxd rdi,DWORD PTR [r14+0x14]
  4143aa:	call   0x40dc40
  4143af:	cmp    ebx,0x2
  4143b2:	mov    r14,rax
  4143b5:	lea    r8,[rax+0x18]
  4143b9:	je     0x41453f
  4143bf:	cmp    edi,DWORD PTR [rax+0x14]
  4143c2:	jl     0x4143dd
  4143c4:	and    esi,0x1f
  4143c7:	je     0x4143f8
  4143c9:	bsr    eax,DWORD PTR [r8+rdi*4-0x4]
  4143cf:	mov    edx,0x20
  4143d4:	sub    edx,esi
  4143d6:	xor    eax,0x1f
  4143d9:	cmp    edx,eax
  4143db:	jle    0x4143f8
  4143dd:	mov    edx,0x1
  4143e2:	mov    rcx,r14
  4143e5:	add    r12d,0x1
  4143e9:	call   0x414580
  4143ee:	cmp    r12d,DWORD PTR [r13+0x8]
  4143f2:	jg     0x4141e0
  4143f8:	mov    ebx,0x21
  4143fd:	jmp    0x4142f4
  414402:	mov    r8d,DWORD PTR [rsp+0x90]
  41440a:	test   r8d,r8d
  41440d:	jne    0x4141e8
  414413:	jmp    0x413dea
  414418:	mov    r9d,DWORD PTR [rsp+0x90]
  414420:	test   r9d,r9d
  414423:	je     0x4141e8
  414429:	jmp    0x413dea
  41442e:	xor    edx,edx
  414430:	jmp    0x413f3e
  414435:	mov    rax,r15
  414438:	mov    edx,0x20
  41443d:	xor    r9d,r9d
  414440:	jmp    0x413f9f
  414445:	movzx  edx,BYTE PTR [rsi+0x1]
  414449:	test   dl,dl
  41444b:	je     0x414574
  414451:	cmp    dl,BYTE PTR [rax+0x1]
  414454:	jne    0x4144d4
  414456:	mov    r12d,0x2
  41445c:	jmp    0x41446b
  41445e:	xchg   ax,ax
  414460:	add    r12,0x1
  414464:	cmp    dl,BYTE PTR [rax+r12*1-0x1]
  414469:	jne    0x4144d4
  41446b:	movzx  edx,BYTE PTR [rsi+r12*1]
  414470:	test   dl,dl
  414472:	jne    0x414460
  414474:	add    r12,rax
  414477:	movzx  eax,BYTE PTR [r12]
  41447c:	cmp    BYTE PTR [rdi+rax*1],0x0
  414480:	mov    rdx,rax
  414483:	mov    rax,r12
  414486:	je     0x413ec2
  41448c:	nop    DWORD PTR [rax+0x0]
  414490:	add    rax,0x1
  414494:	movzx  ecx,BYTE PTR [rax]
  414497:	cmp    BYTE PTR [rdi+rcx*1],0x0
  41449b:	mov    rdx,rcx
  41449e:	jne    0x414490
  4144a0:	jmp    0x413ec2
  4144a5:	mov    edi,0x1
  4144aa:	jmp    0x414342
  4144af:	mov    edi,0x2
  4144b4:	jmp    0x4142b7
  4144b9:	test   dil,0x2
  4144bd:	je     0x4142f1
  4144c3:	or     edi,DWORD PTR [r15]
  4144c6:	and    edi,0x1
  4144c9:	jne    0x4143a3
  4144cf:	jmp    0x4142f1
  4144d4:	movzx  edx,BYTE PTR [rax]
  4144d7:	xor    r12d,r12d
  4144da:	jmp    0x413ec9
  4144df:	mov    edx,DWORD PTR [rsp+0x90]
  4144e6:	test   edx,edx
  4144e8:	je     0x414010
  4144ee:	mov    DWORD PTR [r14+0x14],0x1
  4144f6:	mov    DWORD PTR [r15],0x1
  4144fd:	jmp    0x4141af
  414502:	mov    ecx,DWORD PTR [rsp+0x90]
  414509:	test   ecx,ecx
  41450b:	je     0x4144ee
  41450d:	jmp    0x414010
  414512:	cmp    ebx,esi
  414514:	jne    0x414010
  41451a:	cmp    esi,0x1
  41451d:	jle    0x4144ee
  41451f:	lea    edx,[rsi-0x1]
  414522:	mov    rcx,r14
  414525:	call   0x4158d0
  41452a:	test   eax,eax
  41452c:	je     0x414010
  414532:	mov    eax,DWORD PTR [r13+0x4]
  414536:	jmp    0x4144ee
  414538:	xor    edx,edx
  41453a:	jmp    0x413e51
  41453f:	mov    eax,DWORD PTR [r13+0x0]
  414543:	mov    bl,0x22
  414545:	sub    eax,0x1
  414548:	cmp    eax,esi
  41454a:	jne    0x4142f4
  414550:	mov    edx,esi
  414552:	mov    eax,0x1
  414557:	mov    ecx,esi
  414559:	sar    edx,0x5
  41455c:	shl    eax,cl
  41455e:	movsxd rdx,edx
  414561:	and    eax,DWORD PTR [r8+rdx*4]
  414565:	cmp    eax,0x1
  414568:	sbb    ebx,ebx
  41456a:	not    ebx
  41456c:	add    ebx,0x22
  41456f:	jmp    0x4142f4
  414574:	mov    r12d,0x1
  41457a:	jmp    0x414474
  41457f:	nop
  414580:	push   rbp
  414581:	push   rdi
  414582:	push   rsi
  414583:	push   rbx
  414584:	mov    rsi,rcx
  414587:	lea    r10,[rcx+0x18]
  41458b:	movsxd rcx,DWORD PTR [rcx+0x14]
  41458f:	mov    eax,edx
  414591:	sar    eax,0x5
  414594:	cmp    eax,ecx
  414596:	jge    0x414620
  41459c:	cdqe   
  41459e:	and    edx,0x1f
  4145a1:	lea    rbx,[r10+rcx*4]
  4145a5:	lea    rdi,[r10+rax*4]
  4145a9:	je     0x414633
  4145af:	mov    r9d,DWORD PTR [rdi]
  4145b2:	lea    r8,[rdi+0x4]
  4145b6:	mov    ebp,0x20
  4145bb:	mov    ecx,edx
  4145bd:	sub    ebp,edx
  4145bf:	shr    r9d,cl
  4145c2:	cmp    rbx,r8
  4145c5:	jbe    0x414678
  4145cb:	mov    r11,r10
  4145ce:	xchg   ax,ax
  4145d0:	mov    eax,DWORD PTR [r8]
  4145d3:	mov    ecx,ebp
  4145d5:	add    r11,0x4
  4145d9:	add    r8,0x4
  4145dd:	shl    eax,cl
  4145df:	mov    ecx,edx
  4145e1:	or     eax,r9d
  4145e4:	mov    DWORD PTR [r11-0x4],eax
  4145e8:	mov    r9d,DWORD PTR [r8-0x4]
  4145ec:	shr    r9d,cl
  4145ef:	cmp    rbx,r8
  4145f2:	ja     0x4145d0
  4145f4:	sub    rbx,rdi
  4145f7:	lea    rax,[rbx-0x5]
  4145fb:	shr    rax,0x2
  4145ff:	lea    rax,[r10+rax*4+0x4]
  414604:	test   r9d,r9d
  414607:	mov    DWORD PTR [rax],r9d
  41460a:	je     0x414610
  41460c:	add    rax,0x4
  414610:	sub    rax,r10
  414613:	shr    rax,0x2
  414617:	jmp    0x41466c
  414619:	nop    DWORD PTR [rax+0x0]
  414620:	mov    DWORD PTR [rsi+0x14],0x0
  414627:	mov    DWORD PTR [rsi+0x18],0x0
  41462e:	pop    rbx
  41462f:	pop    rsi
  414630:	pop    rdi
  414631:	pop    rbp
  414632:	ret    
  414633:	cmp    rbx,rdi
  414636:	mov    rdx,r10
  414639:	mov    rax,rdi
  41463c:	jbe    0x414620
  41463e:	xchg   ax,ax
  414640:	add    rax,0x4
  414644:	mov    r8d,DWORD PTR [rax-0x4]
  414648:	add    rdx,0x4
  41464c:	cmp    rbx,rax
  41464f:	mov    DWORD PTR [rdx-0x4],r8d
  414653:	ja     0x414640
  414655:	not    rdi
  414658:	lea    rax,[rdi+rbx*1]
  41465c:	shr    rax,0x2
  414660:	lea    rax,[rax*4+0x4]
  414668:	shr    rax,0x2
  41466c:	test   eax,eax
  41466e:	mov    DWORD PTR [rsi+0x14],eax
  414671:	je     0x414627
  414673:	pop    rbx
  414674:	pop    rsi
  414675:	pop    rdi
  414676:	pop    rbp
  414677:	ret    
  414678:	mov    rax,r10
  41467b:	jmp    0x414604
  41467d:	nop    DWORD PTR [rax]
  414680:	movsxd rax,DWORD PTR [rcx+0x14]
  414684:	lea    rdx,[rcx+0x18]
  414688:	lea    r8,[rdx+rax*4]
  41468c:	cmp    rdx,r8
  41468f:	jae    0x4146bb
  414691:	mov    ecx,DWORD PTR [rcx+0x18]
  414694:	xor    eax,eax
  414696:	test   ecx,ecx
  414698:	je     0x4146a6
  41469a:	jmp    0x4146b4
  41469c:	nop    DWORD PTR [rax+0x0]
  4146a0:	mov    ecx,DWORD PTR [rdx]
  4146a2:	test   ecx,ecx
  4146a4:	jne    0x4146b4
  4146a6:	add    rdx,0x4
  4146aa:	add    eax,0x20
  4146ad:	cmp    r8,rdx
  4146b0:	ja     0x4146a0
  4146b2:	repz ret 
  4146b4:	tzcnt  ecx,ecx
  4146b8:	add    eax,ecx
  4146ba:	ret    
  4146bb:	xor    eax,eax
  4146bd:	ret    
  4146be:	nop
  4146bf:	nop
  4146c0:	lea    r8,[rip+0x7427]        # 0x41baee
  4146c7:	lea    rdx,[rip+0xdff2]        # 0x4226c0
  4146ce:	mov    ecx,0x10
  4146d3:	mov    eax,0x30
  4146d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4146e0:	mov    BYTE PTR [rdx+rax*1],cl
  4146e3:	movzx  eax,BYTE PTR [r8+0x1]
  4146e8:	add    ecx,0x1
  4146eb:	add    r8,0x1
  4146ef:	test   al,al
  4146f1:	jne    0x4146e0
  4146f3:	lea    r8,[rip+0x73ed]        # 0x41bae7
  4146fa:	mov    ecx,0x1a
  4146ff:	mov    eax,0x61
  414704:	mov    BYTE PTR [rdx+rax*1],cl
  414707:	movzx  eax,BYTE PTR [r8+0x1]
  41470c:	add    ecx,0x1
  41470f:	add    r8,0x1
  414713:	test   al,al
  414715:	jne    0x414704
  414717:	lea    r8,[rip+0x73c2]        # 0x41bae0
  41471e:	mov    ecx,0x1a
  414723:	mov    eax,0x41
  414728:	nop    DWORD PTR [rax+rax*1+0x0]
  414730:	mov    BYTE PTR [rdx+rax*1],cl
  414733:	movzx  eax,BYTE PTR [r8+0x1]
  414738:	add    ecx,0x1
  41473b:	add    r8,0x1
  41473f:	test   al,al
  414741:	jne    0x414730
  414743:	ret    
  414744:	nop
  414745:	nop
  414746:	nop
  414747:	nop
  414748:	nop
  414749:	nop
  41474a:	nop
  41474b:	nop
  41474c:	nop
  41474d:	nop
  41474e:	nop
  41474f:	nop
  414750:	push   r15
  414752:	push   r14
  414754:	push   r13
  414756:	push   r12
  414758:	push   rbp
  414759:	push   rdi
  41475a:	push   rsi
  41475b:	push   rbx
  41475c:	sub    rsp,0x48
  414760:	mov    r14,QWORD PTR [rip+0x75d9]        # 0x41bd40
  414767:	mov    QWORD PTR [rsp+0x90],rcx
  41476f:	cmp    BYTE PTR [r14+0x30],0x0
  414774:	je     0x414a46
  41477a:	mov    eax,DWORD PTR [rdx]
  41477c:	mov    edx,eax
  41477e:	sar    edx,0x5
  414781:	and    eax,0x1f
  414784:	movsxd rdx,edx
  414787:	mov    DWORD PTR [rsp+0x3c],eax
  41478b:	mov    rax,QWORD PTR [rsp+0x90]
  414793:	lea    rdi,[r8+rdx*4]
  414797:	lea    rdx,[rdi+0x4]
  41479b:	mov    rax,QWORD PTR [rax]
  41479e:	cmove  rdx,rdi
  4147a2:	mov    QWORD PTR [rsp+0x30],rdx
  4147a7:	lea    rsi,[rdx-0x4]
  4147ab:	mov    DWORD PTR [rdx-0x4],0x0
  4147b2:	jmp    0x4147b8
  4147b4:	add    rax,0x1
  4147b8:	movzx  edx,BYTE PTR [rax+0x1]
  4147bc:	mov    ecx,edx
  4147be:	sub    edx,0x1
  4147c1:	cmp    edx,0x1f
  4147c4:	jbe    0x4147b4
  4147c6:	cmp    cl,0x30
  4147c9:	je     0x414a64
  4147cf:	movzx  edx,BYTE PTR [rax+0x1]
  4147d3:	xor    r9d,r9d
  4147d6:	xor    r15d,r15d
  4147d9:	xor    r12d,r12d
  4147dc:	test   edx,edx
  4147de:	mov    rbp,rsi
  4147e1:	mov    r11,rsi
  4147e4:	lea    rbx,[rax+0x1]
  4147e8:	je     0x414890
  4147ee:	xchg   ax,ax
  4147f0:	mov    ecx,edx
  4147f2:	movzx  ecx,BYTE PTR [r14+rcx*1]
  4147f7:	test   cl,cl
  4147f9:	jne    0x414964
  4147ff:	cmp    edx,0x20
  414802:	ja     0x414a15
  414808:	cmp    r12d,r15d
  41480b:	jle    0x4149a5
  414811:	cmp    r9d,0x7
  414815:	jg     0x41486a
  414817:	cmp    r11,rbp
  41481a:	jae    0x41486a
  41481c:	mov    edi,0x8
  414821:	mov    edx,DWORD PTR [r11]
  414824:	mov    r13d,0x20
  41482a:	sub    edi,r9d
  41482d:	mov    QWORD PTR [rsp+0x28],rax
  414832:	mov    r9,r11
  414835:	shl    edi,0x2
  414838:	sub    r13d,edi
  41483b:	nop    DWORD PTR [rax+rax*1+0x0]
  414840:	mov    r10d,DWORD PTR [r9+0x4]
  414844:	mov    ecx,r13d
  414847:	add    r9,0x4
  41484b:	mov    eax,r10d
  41484e:	shl    eax,cl
  414850:	mov    ecx,edi
  414852:	or     edx,eax
  414854:	mov    DWORD PTR [r9-0x4],edx
  414858:	mov    edx,r10d
  41485b:	shr    edx,cl
  41485d:	mov    DWORD PTR [r9],edx
  414860:	cmp    rbp,r9
  414863:	ja     0x414840
  414865:	mov    rax,QWORD PTR [rsp+0x28]
  41486a:	cmp    r11,r8
  41486d:	ja     0x414990
  414873:	mov    rax,rbx
  414876:	mov    r9d,0x8
  41487c:	nop    DWORD PTR [rax+0x0]
  414880:	movzx  edx,BYTE PTR [rax+0x1]
  414884:	lea    rbx,[rax+0x1]
  414888:	test   edx,edx
  41488a:	jne    0x4147f0
  414890:	test   r12d,r12d
  414893:	mov    eax,0x4
  414898:	je     0x414953
  41489e:	mov    r10,r11
  4148a1:	cmp    r9d,0x7
  4148a5:	jg     0x4148f3
  4148a7:	cmp    rbp,r11
  4148aa:	jbe    0x4148f3
  4148ac:	mov    edi,0x8
  4148b1:	mov    eax,DWORD PTR [r11]
  4148b4:	mov    r12d,0x20
  4148ba:	sub    edi,r9d
  4148bd:	mov    r9,r11
  4148c0:	shl    edi,0x2
  4148c3:	sub    r12d,edi
  4148c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4148d0:	mov    ebx,DWORD PTR [r9+0x4]
  4148d4:	mov    ecx,r12d
  4148d7:	add    r9,0x4
  4148db:	mov    edx,ebx
  4148dd:	shl    edx,cl
  4148df:	mov    ecx,edi
  4148e1:	or     eax,edx
  4148e3:	mov    DWORD PTR [r9-0x4],eax
  4148e7:	mov    eax,ebx
  4148e9:	shr    eax,cl
  4148eb:	mov    DWORD PTR [r9],eax
  4148ee:	cmp    rbp,r9
  4148f1:	ja     0x4148d0
  4148f3:	cmp    r8,r11
  4148f6:	jae    0x414a94
  4148fc:	mov    rax,r8
  4148ff:	nop
  414900:	add    r10,0x4
  414904:	mov    edx,DWORD PTR [r10-0x4]
  414908:	add    rax,0x4
  41490c:	cmp    rsi,r10
  41490f:	mov    DWORD PTR [rax-0x4],edx
  414912:	jae    0x414900
  414914:	add    rax,0x4
  414918:	mov    DWORD PTR [rax-0x4],0x0
  41491f:	cmp    rsi,rax
  414922:	jae    0x414914
  414924:	mov    rax,QWORD PTR [rsp+0x30]
  414929:	mov    eax,DWORD PTR [rax-0x4]
  41492c:	test   eax,eax
  41492e:	je     0x414943
  414930:	jmp    0x414a8a
  414935:	sub    rsi,0x4
  414939:	mov    eax,DWORD PTR [rsi]
  41493b:	test   eax,eax
  41493d:	jne    0x414a8a
  414943:	cmp    r8,rsi
  414946:	jne    0x414935
  414948:	mov    DWORD PTR [rsi],0x1
  41494e:	mov    eax,0x5
  414953:	add    rsp,0x48
  414957:	pop    rbx
  414958:	pop    rsi
  414959:	pop    rdi
  41495a:	pop    rbp
  41495b:	pop    r12
  41495d:	pop    r13
  41495f:	pop    r14
  414961:	pop    r15
  414963:	ret    
  414964:	add    r9d,0x1
  414968:	add    r12d,0x1
  41496c:	cmp    r9d,0x8
  414970:	jg     0x4149f0
  414972:	mov    eax,DWORD PTR [r11]
  414975:	shl    eax,0x4
  414978:	and    ecx,0xf
  41497b:	or     ecx,eax
  41497d:	mov    rax,rbx
  414980:	mov    DWORD PTR [r11],ecx
  414983:	jmp    0x414880
  414988:	nop    DWORD PTR [rax+rax*1+0x0]
  414990:	lea    rbp,[r11-0x4]
  414994:	mov    DWORD PTR [r11-0x4],0x0
  41499c:	mov    r15d,r12d
  41499f:	xor    r9d,r9d
  4149a2:	mov    r11,rbp
  4149a5:	movzx  edx,BYTE PTR [rax+0x2]
  4149a9:	mov    rax,rbx
  4149ac:	cmp    dl,0x20
  4149af:	ja     0x4149be
  4149b1:	add    rax,0x1
  4149b5:	movzx  edx,BYTE PTR [rax+0x1]
  4149b9:	cmp    dl,0x20
  4149bc:	jbe    0x4149b1
  4149be:	cmp    dl,0x30
  4149c1:	jne    0x414880
  4149c7:	movzx  edx,BYTE PTR [rax+0x2]
  4149cb:	and    edx,0xffffffdf
  4149ce:	cmp    dl,0x58
  4149d1:	jne    0x414880
  4149d7:	cmp    BYTE PTR [rax+0x3],0x21
  4149db:	lea    rdx,[rax+0x2]
  4149df:	cmovae rax,rdx
  4149e3:	jmp    0x414880
  4149e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4149f0:	cmp    r11,r8
  4149f3:	mov    rax,rbx
  4149f6:	jbe    0x414880
  4149fc:	mov    DWORD PTR [r11-0x4],0x0
  414a04:	xor    eax,eax
  414a06:	sub    r11,0x4
  414a0a:	mov    r9d,0x1
  414a10:	jmp    0x414978
  414a15:	cmp    edx,0x29
  414a18:	mov    rcx,rbx
  414a1b:	sete   dl
  414a1e:	test   r12d,r12d
  414a21:	je     0x414ac0
  414a27:	test   dl,dl
  414a29:	je     0x414ac4
  414a2f:	mov    rbx,QWORD PTR [rsp+0x90]
  414a37:	add    rax,0x2
  414a3b:	mov    r10,r11
  414a3e:	mov    QWORD PTR [rbx],rax
  414a41:	jmp    0x4148a1
  414a46:	mov    QWORD PTR [rsp+0x30],r8
  414a4b:	mov    QWORD PTR [rsp+0x28],rdx
  414a50:	call   0x4146c0
  414a55:	mov    r8,QWORD PTR [rsp+0x30]
  414a5a:	mov    rdx,QWORD PTR [rsp+0x28]
  414a5f:	jmp    0x41477a
  414a64:	movzx  edx,BYTE PTR [rax+0x2]
  414a68:	and    edx,0xffffffdf
  414a6b:	cmp    dl,0x58
  414a6e:	jne    0x4147cf
  414a74:	movzx  edx,BYTE PTR [rax+0x3]
  414a78:	cmp    dl,0x20
  414a7b:	jbe    0x4147cf
  414a81:	add    rax,0x2
  414a85:	jmp    0x4147d3
  414a8a:	mov    eax,0x5
  414a8f:	jmp    0x414953
  414a94:	mov    edx,DWORD PTR [rsp+0x3c]
  414a98:	test   edx,edx
  414a9a:	je     0x414924
  414aa0:	mov    ecx,0x20
  414aa5:	sub    ecx,DWORD PTR [rsp+0x3c]
  414aa9:	mov    rbx,QWORD PTR [rsp+0x30]
  414aae:	mov    eax,0xffffffff
  414ab3:	shr    eax,cl
  414ab5:	and    eax,DWORD PTR [rbx-0x4]
  414ab8:	mov    DWORD PTR [rbx-0x4],eax
  414abb:	jmp    0x41492c
  414ac0:	test   dl,dl
  414ac2:	jne    0x414ae2
  414ac4:	movsx  eax,BYTE PTR [rbx+0x1]
  414ac8:	lea    rcx,[rbx+0x1]
  414acc:	test   eax,eax
  414ace:	jne    0x414add
  414ad0:	jmp    0x414afb
  414ad2:	add    rcx,0x1
  414ad6:	movsx  eax,BYTE PTR [rcx]
  414ad9:	test   eax,eax
  414adb:	je     0x414afb
  414add:	cmp    eax,0x29
  414ae0:	jne    0x414ad2
  414ae2:	mov    rax,QWORD PTR [rsp+0x90]
  414aea:	add    rcx,0x1
  414aee:	mov    QWORD PTR [rax],rcx
  414af1:	mov    eax,0x4
  414af6:	jmp    0x414953
  414afb:	mov    al,0x4
  414afd:	jmp    0x414953
  414b02:	nop
  414b03:	nop
  414b04:	nop
  414b05:	nop
  414b06:	nop
  414b07:	nop
  414b08:	nop
  414b09:	nop
  414b0a:	nop
  414b0b:	nop
  414b0c:	nop
  414b0d:	nop
  414b0e:	nop
  414b0f:	nop
  414b10:	push   rsi
  414b11:	push   rbx
  414b12:	sub    rsp,0x28
  414b16:	mov    eax,DWORD PTR [rip+0xce34]        # 0x421950
  414b1c:	movsxd rsi,ecx
  414b1f:	cmp    eax,0x2
  414b22:	je     0x414b8d
  414b24:	test   eax,eax
  414b26:	je     0x414b52
  414b28:	cmp    eax,0x1
  414b2b:	jne    0x414b4b
  414b2d:	mov    rbx,QWORD PTR [rip+0xe92c]        # 0x423460
  414b34:	mov    ecx,0x1
  414b39:	call   rbx
  414b3b:	mov    eax,DWORD PTR [rip+0xce0f]        # 0x421950
  414b41:	cmp    eax,0x1
  414b44:	je     0x414b34
  414b46:	cmp    eax,0x2
  414b49:	je     0x414b8d
  414b4b:	add    rsp,0x28
  414b4f:	pop    rbx
  414b50:	pop    rsi
  414b51:	ret    
  414b52:	mov    al,0x1
  414b54:	xchg   DWORD PTR [rip+0xcdf6],eax        # 0x421950
  414b5a:	test   eax,eax
  414b5c:	jne    0x414bb0
  414b5e:	lea    rcx,[rip+0xce1b]        # 0x421980
  414b65:	mov    rbx,QWORD PTR [rip+0xe8a4]        # 0x423410
  414b6c:	call   rbx
  414b6e:	lea    rcx,[rip+0xce33]        # 0x4219a8
  414b75:	call   rbx
  414b77:	lea    rcx,[rip+0x62]        # 0x414be0
  414b7e:	call   0x40b780
  414b83:	mov    DWORD PTR [rip+0xcdc3],0x2        # 0x421950
  414b8d:	lea    rdx,[rsi+rsi*4]
  414b91:	lea    rax,[rip+0xcde8]        # 0x421980
  414b98:	lea    rcx,[rax+rdx*8]
  414b9c:	mov    rax,QWORD PTR [rip+0xe815]        # 0x4233b8
  414ba3:	add    rsp,0x28
  414ba7:	pop    rbx
  414ba8:	pop    rsi
  414ba9:	rex.W jmp rax
  414bac:	nop    DWORD PTR [rax+0x0]
  414bb0:	cmp    eax,0x2
  414bb3:	je     0x414bd0
  414bb5:	mov    eax,DWORD PTR [rip+0xcd95]        # 0x421950
  414bbb:	cmp    eax,0x1
  414bbe:	je     0x414b2d
  414bc4:	jmp    0x414b46
  414bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414bd0:	mov    DWORD PTR [rip+0xcd76],0x2        # 0x421950
  414bda:	jmp    0x414b8d
  414bdc:	nop    DWORD PTR [rax+0x0]
  414be0:	push   rbx
  414be1:	sub    rsp,0x20
  414be5:	mov    eax,0x3
  414bea:	xchg   DWORD PTR [rip+0xcd60],eax        # 0x421950
  414bf0:	cmp    eax,0x2
  414bf3:	je     0x414c00
  414bf5:	add    rsp,0x20
  414bf9:	pop    rbx
  414bfa:	ret    
  414bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  414c00:	mov    rbx,QWORD PTR [rip+0xe7a9]        # 0x4233b0
  414c07:	lea    rcx,[rip+0xcd72]        # 0x421980
  414c0e:	call   rbx
  414c10:	lea    rcx,[rip+0xcd91]        # 0x4219a8
  414c17:	mov    rax,rbx
  414c1a:	add    rsp,0x20
  414c1e:	pop    rbx
  414c1f:	rex.W jmp rax
  414c22:	nop    DWORD PTR [rax+0x0]
  414c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c30:	push   rdi
  414c31:	push   rsi
  414c32:	push   rbx
  414c33:	sub    rsp,0x20
  414c37:	mov    ebx,ecx
  414c39:	xor    ecx,ecx
  414c3b:	call   0x414b10
  414c40:	cmp    ebx,0x9
  414c43:	jg     0x414c80
  414c45:	lea    rdx,[rip+0xccb4]        # 0x421900
  414c4c:	movsxd rcx,ebx
  414c4f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  414c53:	test   rdi,rdi
  414c56:	je     0x414ce0
  414c5c:	cmp    DWORD PTR [rip+0xcced],0x2        # 0x421950
  414c63:	mov    r8,QWORD PTR [rdi]
  414c66:	mov    QWORD PTR [rdx+rcx*8],r8
  414c6a:	jne    0x414cc6
  414c6c:	lea    rcx,[rip+0xcd0d]        # 0x421980
  414c73:	call   QWORD PTR [rip+0xe7a7]        # 0x423420
  414c79:	jmp    0x414cc6
  414c7b:	nop    DWORD PTR [rax+rax*1+0x0]
  414c80:	mov    eax,0x1
  414c85:	mov    ecx,ebx
  414c87:	shl    eax,cl
  414c89:	mov    esi,eax
  414c8b:	lea    eax,[rax-0x1]
  414c8e:	cdqe   
  414c90:	lea    rdx,[rax*4+0x27]
  414c98:	shr    rdx,0x3
  414c9c:	mov    edx,edx
  414c9e:	lea    rcx,[rdx*8+0x0]
  414ca6:	call   0x415fe8
  414cab:	test   rax,rax
  414cae:	mov    rdi,rax
  414cb1:	je     0x414d3a
  414cb7:	cmp    DWORD PTR [rip+0xcc92],0x2        # 0x421950
  414cbe:	mov    DWORD PTR [rdi+0x8],ebx
  414cc1:	mov    DWORD PTR [rdi+0xc],esi
  414cc4:	je     0x414c6c
  414cc6:	mov    DWORD PTR [rdi+0x14],0x0
  414ccd:	mov    DWORD PTR [rdi+0x10],0x0
  414cd4:	mov    rax,rdi
  414cd7:	add    rsp,0x20
  414cdb:	pop    rbx
  414cdc:	pop    rsi
  414cdd:	pop    rdi
  414cde:	ret    
  414cdf:	nop
  414ce0:	mov    ecx,ebx
  414ce2:	mov    eax,0x1
  414ce7:	mov    rdi,QWORD PTR [rip+0x2a92]        # 0x417780
  414cee:	shl    eax,cl
  414cf0:	lea    rcx,[rip+0xc309]        # 0x421000
  414cf7:	lea    edx,[rax-0x1]
  414cfa:	mov    esi,eax
  414cfc:	mov    rax,rdi
  414cff:	movsxd rdx,edx
  414d02:	sub    rax,rcx
  414d05:	lea    rdx,[rdx*4+0x27]
  414d0d:	mov    rcx,rax
  414d10:	sar    rcx,0x3
  414d14:	shr    rdx,0x3
  414d18:	mov    edx,edx
  414d1a:	add    rcx,rdx
  414d1d:	cmp    rcx,0x120
  414d24:	ja     0x414c9e
  414d2a:	lea    rdx,[rdi+rdx*8]
  414d2e:	mov    QWORD PTR [rip+0x2a4b],rdx        # 0x417780
  414d35:	jmp    0x414cb7
  414d3a:	xor    eax,eax
  414d3c:	jmp    0x414cd7
  414d3e:	xchg   ax,ax
  414d40:	push   rbx
  414d41:	sub    rsp,0x20
  414d45:	test   rcx,rcx
  414d48:	je     0x414d79
  414d4a:	cmp    DWORD PTR [rcx+0x8],0x9
  414d4e:	jg     0x414d80
  414d50:	mov    rbx,rcx
  414d53:	xor    ecx,ecx
  414d55:	call   0x414b10
  414d5a:	movsxd rdx,DWORD PTR [rbx+0x8]
  414d5e:	lea    rax,[rip+0xcb9b]        # 0x421900
  414d65:	cmp    DWORD PTR [rip+0xcbe4],0x2        # 0x421950
  414d6c:	mov    rcx,QWORD PTR [rax+rdx*8]
  414d70:	mov    QWORD PTR [rax+rdx*8],rbx
  414d74:	mov    QWORD PTR [rbx],rcx
  414d77:	je     0x414d90
  414d79:	add    rsp,0x20
  414d7d:	pop    rbx
  414d7e:	ret    
  414d7f:	nop
  414d80:	add    rsp,0x20
  414d84:	pop    rbx
  414d85:	jmp    0x416010
  414d8a:	nop    WORD PTR [rax+rax*1+0x0]
  414d90:	mov    rax,QWORD PTR [rip+0xe689]        # 0x423420
  414d97:	lea    rcx,[rip+0xcbe2]        # 0x421980
  414d9e:	add    rsp,0x20
  414da2:	pop    rbx
  414da3:	rex.W jmp rax
  414da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414db0:	push   rbp
  414db1:	push   rdi
  414db2:	push   rsi
  414db3:	push   rbx
  414db4:	sub    rsp,0x28
  414db8:	mov    esi,DWORD PTR [rcx+0x14]
  414dbb:	xor    r9d,r9d
  414dbe:	lea    r10,[rcx+0x18]
  414dc2:	mov    rdi,rcx
  414dc5:	movsxd rbx,r8d
  414dc8:	movsxd rdx,edx
  414dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  414dd0:	mov    eax,DWORD PTR [r10+r9*4]
  414dd4:	imul   rax,rdx
  414dd8:	add    rax,rbx
  414ddb:	mov    rbx,rax
  414dde:	mov    DWORD PTR [r10+r9*4],eax
  414de2:	add    r9,0x1
  414de6:	shr    rbx,0x20
  414dea:	cmp    esi,r9d
  414ded:	jg     0x414dd0
  414def:	test   rbx,rbx
  414df2:	mov    rax,rdi
  414df5:	je     0x414e0c
  414df7:	cmp    esi,DWORD PTR [rdi+0xc]
  414dfa:	jge    0x414e15
  414dfc:	movsxd rax,esi
  414dff:	add    esi,0x1
  414e02:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  414e06:	mov    DWORD PTR [rdi+0x14],esi
  414e09:	mov    rax,rdi
  414e0c:	add    rsp,0x28
  414e10:	pop    rbx
  414e11:	pop    rsi
  414e12:	pop    rdi
  414e13:	pop    rbp
  414e14:	ret    
  414e15:	mov    eax,DWORD PTR [rdi+0x8]
  414e18:	lea    ecx,[rax+0x1]
  414e1b:	call   0x414c30
  414e20:	test   rax,rax
  414e23:	mov    rbp,rax
  414e26:	je     0x414e5e
  414e28:	lea    rcx,[rax+0x10]
  414e2c:	movsxd rax,DWORD PTR [rdi+0x14]
  414e30:	lea    rdx,[rdi+0x10]
  414e34:	lea    r8,[rax*4+0x8]
  414e3c:	call   0x415fe0
  414e41:	mov    rcx,rdi
  414e44:	mov    rdi,rbp
  414e47:	call   0x414d40
  414e4c:	movsxd rax,esi
  414e4f:	add    esi,0x1
  414e52:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  414e56:	mov    DWORD PTR [rdi+0x14],esi
  414e59:	mov    rax,rdi
  414e5c:	jmp    0x414e0c
  414e5e:	xor    eax,eax
  414e60:	jmp    0x414e0c
  414e62:	nop    DWORD PTR [rax+0x0]
  414e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e70:	push   rbx
  414e71:	sub    rsp,0x20
  414e75:	mov    ebx,ecx
  414e77:	mov    ecx,0x1
  414e7c:	call   0x414c30
  414e81:	test   rax,rax
  414e84:	je     0x414e90
  414e86:	mov    DWORD PTR [rax+0x18],ebx
  414e89:	mov    DWORD PTR [rax+0x14],0x1
  414e90:	add    rsp,0x20
  414e94:	pop    rbx
  414e95:	ret    
  414e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414ea0:	push   r14
  414ea2:	push   r13
  414ea4:	push   r12
  414ea6:	push   rbp
  414ea7:	push   rdi
  414ea8:	push   rsi
  414ea9:	push   rbx
  414eaa:	sub    rsp,0x20
  414eae:	movsxd r13,DWORD PTR [rcx+0x14]
  414eb2:	movsxd rbx,DWORD PTR [rdx+0x14]
  414eb6:	mov    r12,rcx
  414eb9:	mov    r14,rdx
  414ebc:	cmp    r13d,ebx
  414ebf:	jl     0x414fc1
  414ec5:	mov    eax,ebx
  414ec7:	movsxd rbx,r13d
  414eca:	movsxd r13,eax
  414ecd:	xor    eax,eax
  414ecf:	lea    esi,[rbx+r13*1]
  414ed3:	cmp    esi,DWORD PTR [r12+0xc]
  414ed8:	setg   al
  414edb:	add    eax,DWORD PTR [r12+0x8]
  414ee0:	mov    ecx,eax
  414ee2:	call   0x414c30
  414ee7:	test   rax,rax
  414eea:	je     0x414fcc
  414ef0:	lea    rdi,[rax+0x18]
  414ef4:	movsxd rdx,esi
  414ef7:	lea    rbp,[rdi+rdx*4]
  414efb:	mov    r8,rdi
  414efe:	cmp    rdi,rbp
  414f01:	jae    0x414f13
  414f03:	mov    DWORD PTR [r8],0x0
  414f0a:	add    r8,0x4
  414f0e:	cmp    rbp,r8
  414f11:	ja     0x414f03
  414f13:	lea    rdx,[r14+0x18]
  414f17:	add    r12,0x18
  414f1b:	lea    rbx,[r12+rbx*4]
  414f1f:	lea    r13,[rdx+r13*4]
  414f23:	cmp    rdx,r13
  414f26:	jae    0x414f89
  414f28:	nop    DWORD PTR [rax+rax*1+0x0]
  414f30:	add    rdx,0x4
  414f34:	mov    r11d,DWORD PTR [rdx-0x4]
  414f38:	test   r11d,r11d
  414f3b:	je     0x414f80
  414f3d:	mov    r9,rdi
  414f40:	mov    r8,r12
  414f43:	xor    r10d,r10d
  414f46:	jmp    0x414f53
  414f48:	nop    DWORD PTR [rax+rax*1+0x0]
  414f50:	mov    r9,r14
  414f53:	add    r8,0x4
  414f57:	mov    ecx,DWORD PTR [r8-0x4]
  414f5b:	mov    r14d,DWORD PTR [r9]
  414f5e:	imul   rcx,r11
  414f62:	add    rcx,r14
  414f65:	lea    r14,[r9+0x4]
  414f69:	add    rcx,r10
  414f6c:	mov    r10,rcx
  414f6f:	mov    DWORD PTR [r14-0x4],ecx
  414f73:	shr    r10,0x20
  414f77:	cmp    rbx,r8
  414f7a:	ja     0x414f50
  414f7c:	mov    DWORD PTR [r9+0x4],r10d
  414f80:	add    rdi,0x4
  414f84:	cmp    r13,rdx
  414f87:	ja     0x414f30
  414f89:	test   esi,esi
  414f8b:	jle    0x414faf
  414f8d:	mov    r8d,DWORD PTR [rbp-0x4]
  414f91:	lea    rdx,[rbp-0x4]
  414f95:	test   r8d,r8d
  414f98:	je     0x414faa
  414f9a:	jmp    0x414faf
  414f9c:	nop    DWORD PTR [rax+0x0]
  414fa0:	sub    rdx,0x4
  414fa4:	mov    ecx,DWORD PTR [rdx]
  414fa6:	test   ecx,ecx
  414fa8:	jne    0x414faf
  414faa:	sub    esi,0x1
  414fad:	jne    0x414fa0
  414faf:	mov    DWORD PTR [rax+0x14],esi
  414fb2:	add    rsp,0x20
  414fb6:	pop    rbx
  414fb7:	pop    rsi
  414fb8:	pop    rdi
  414fb9:	pop    rbp
  414fba:	pop    r12
  414fbc:	pop    r13
  414fbe:	pop    r14
  414fc0:	ret    
  414fc1:	mov    r12,rdx
  414fc4:	mov    r14,rcx
  414fc7:	jmp    0x414ecd
  414fcc:	xor    eax,eax
  414fce:	jmp    0x414fb2
  414fd0:	push   rbp
  414fd1:	push   rdi
  414fd2:	push   rsi
  414fd3:	push   rbx
  414fd4:	sub    rsp,0x28
  414fd8:	mov    eax,edx
  414fda:	mov    rbp,rcx
  414fdd:	mov    ebx,edx
  414fdf:	and    eax,0x3
  414fe2:	jne    0x415070
  414fe8:	sar    ebx,0x2
  414feb:	mov    rax,rbp
  414fee:	test   ebx,ebx
  414ff0:	je     0x41503c
  414ff2:	mov    rdi,QWORD PTR [rip+0xbfc7]        # 0x420fc0
  414ff9:	test   rdi,rdi
  414ffc:	jne    0x415012
  414ffe:	jmp    0x4150bd
  415003:	sar    ebx,1
  415005:	je     0x415039
  415007:	mov    rsi,QWORD PTR [rdi]
  41500a:	test   rsi,rsi
  41500d:	je     0x415045
  41500f:	mov    rdi,rsi
  415012:	test   bl,0x1
  415015:	je     0x415003
  415017:	mov    rdx,rdi
  41501a:	mov    rcx,rbp
  41501d:	call   0x414ea0
  415022:	test   rax,rax
  415025:	mov    rsi,rax
  415028:	je     0x415093
  41502a:	mov    rcx,rbp
  41502d:	mov    rbp,rsi
  415030:	call   0x414d40
  415035:	sar    ebx,1
  415037:	jne    0x415007
  415039:	mov    rax,rbp
  41503c:	add    rsp,0x28
  415040:	pop    rbx
  415041:	pop    rsi
  415042:	pop    rdi
  415043:	pop    rbp
  415044:	ret    
  415045:	mov    ecx,0x1
  41504a:	call   0x414b10
  41504f:	mov    rsi,QWORD PTR [rdi]
  415052:	test   rsi,rsi
  415055:	je     0x41509e
  415057:	cmp    DWORD PTR [rip+0xc8f2],0x2        # 0x421950
  41505e:	jne    0x41500f
  415060:	lea    rcx,[rip+0xc941]        # 0x4219a8
  415067:	call   QWORD PTR [rip+0xe3b3]        # 0x423420
  41506d:	jmp    0x41500f
  41506f:	nop
  415070:	sub    eax,0x1
  415073:	lea    rdx,[rip+0x6a86]        # 0x41bb00
  41507a:	xor    r8d,r8d
  41507d:	cdqe   
  41507f:	mov    edx,DWORD PTR [rdx+rax*4]
  415082:	call   0x414db0
  415087:	test   rax,rax
  41508a:	mov    rbp,rax
  41508d:	jne    0x414fe8
  415093:	xor    eax,eax
  415095:	add    rsp,0x28
  415099:	pop    rbx
  41509a:	pop    rsi
  41509b:	pop    rdi
  41509c:	pop    rbp
  41509d:	ret    
  41509e:	mov    rdx,rdi
  4150a1:	mov    rcx,rdi
  4150a4:	call   0x414ea0
  4150a9:	test   rax,rax
  4150ac:	mov    rsi,rax
  4150af:	mov    QWORD PTR [rdi],rax
  4150b2:	je     0x415093
  4150b4:	mov    QWORD PTR [rax],0x0
  4150bb:	jmp    0x415057
  4150bd:	mov    ecx,0x1
  4150c2:	call   0x414b10
  4150c7:	mov    rdi,QWORD PTR [rip+0xbef2]        # 0x420fc0
  4150ce:	test   rdi,rdi
  4150d1:	je     0x4150f2
  4150d3:	cmp    DWORD PTR [rip+0xc876],0x2        # 0x421950
  4150da:	jne    0x415012
  4150e0:	lea    rcx,[rip+0xc8c1]        # 0x4219a8
  4150e7:	call   QWORD PTR [rip+0xe333]        # 0x423420
  4150ed:	jmp    0x415012
  4150f2:	mov    ecx,0x1
  4150f7:	call   0x414c30
  4150fc:	test   rax,rax
  4150ff:	mov    rdi,rax
  415102:	je     0x415122
  415104:	mov    DWORD PTR [rax+0x18],0x271
  41510b:	mov    DWORD PTR [rax+0x14],0x1
  415112:	mov    QWORD PTR [rip+0xbea7],rax        # 0x420fc0
  415119:	mov    QWORD PTR [rax],0x0
  415120:	jmp    0x4150d3
  415122:	mov    QWORD PTR [rip+0xbe93],0x0        # 0x420fc0
  41512d:	xor    eax,eax
  41512f:	jmp    0x415095
  415134:	xchg   ax,ax
  415136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415140:	push   r13
  415142:	push   r12
  415144:	push   rbp
  415145:	push   rdi
  415146:	push   rsi
  415147:	push   rbx
  415148:	sub    rsp,0x28
  41514c:	mov    rdi,rcx
  41514f:	mov    ebp,edx
  415151:	mov    esi,edx
  415153:	mov    r12d,DWORD PTR [rdi+0x14]
  415157:	sar    ebp,0x5
  41515a:	mov    eax,DWORD PTR [rdi+0xc]
  41515d:	mov    ecx,DWORD PTR [rcx+0x8]
  415160:	add    r12d,ebp
  415163:	lea    ebx,[r12+0x1]
  415168:	cmp    ebx,eax
  41516a:	jle    0x415179
  41516c:	nop    DWORD PTR [rax+0x0]
  415170:	add    eax,eax
  415172:	add    ecx,0x1
  415175:	cmp    ebx,eax
  415177:	jg     0x415170
  415179:	call   0x414c30
  41517e:	test   rax,rax
  415181:	mov    r13,rax
  415184:	je     0x41524f
  41518a:	test   ebp,ebp
  41518c:	lea    r8,[rax+0x18]
  415190:	jle    0x415247
  415196:	lea    eax,[rbp-0x1]
  415199:	lea    r9,[r8+rax*4+0x4]
  41519e:	xchg   ax,ax
  4151a0:	add    r8,0x4
  4151a4:	mov    DWORD PTR [r8-0x4],0x0
  4151ac:	cmp    r8,r9
  4151af:	jne    0x4151a0
  4151b1:	movsxd rax,DWORD PTR [rdi+0x14]
  4151b5:	lea    r8,[rdi+0x18]
  4151b9:	mov    edx,esi
  4151bb:	and    edx,0x1f
  4151be:	lea    rbp,[r8+rax*4]
  4151c2:	je     0x415230
  4151c4:	mov    eax,0x20
  4151c9:	xor    r11d,r11d
  4151cc:	sub    eax,edx
  4151ce:	jmp    0x4151d3
  4151d0:	mov    r9,rsi
  4151d3:	mov    r10d,DWORD PTR [r8]
  4151d6:	mov    ecx,edx
  4151d8:	lea    rsi,[r9+0x4]
  4151dc:	add    r8,0x4
  4151e0:	shl    r10d,cl
  4151e3:	mov    ecx,eax
  4151e5:	or     r10d,r11d
  4151e8:	mov    DWORD PTR [rsi-0x4],r10d
  4151ec:	mov    r11d,DWORD PTR [r8-0x4]
  4151f0:	shr    r11d,cl
  4151f3:	cmp    rbp,r8
  4151f6:	ja     0x4151d0
  4151f8:	add    r12d,0x2
  4151fc:	test   r11d,r11d
  4151ff:	mov    DWORD PTR [r9+0x4],r11d
  415203:	cmovne ebx,r12d
  415207:	sub    ebx,0x1
  41520a:	mov    rcx,rdi
  41520d:	mov    DWORD PTR [r13+0x14],ebx
  415211:	call   0x414d40
  415216:	mov    rax,r13
  415219:	add    rsp,0x28
  41521d:	pop    rbx
  41521e:	pop    rsi
  41521f:	pop    rdi
  415220:	pop    rbp
  415221:	pop    r12
  415223:	pop    r13
  415225:	ret    
  415226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415230:	add    r8,0x4
  415234:	mov    edx,DWORD PTR [r8-0x4]
  415238:	add    r9,0x4
  41523c:	cmp    rbp,r8
  41523f:	mov    DWORD PTR [r9-0x4],edx
  415243:	ja     0x415230
  415245:	jmp    0x415207
  415247:	mov    r9,r8
  41524a:	jmp    0x4151b1
  41524f:	xor    eax,eax
  415251:	jmp    0x415219
  415253:	nop    DWORD PTR [rax]
  415256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415260:	movsxd r8,DWORD PTR [rdx+0x14]
  415264:	mov    eax,DWORD PTR [rcx+0x14]
  415267:	sub    eax,r8d
  41526a:	test   eax,eax
  41526c:	jne    0x4152a2
  41526e:	shl    r8,0x2
  415272:	add    rcx,0x18
  415276:	lea    rax,[rcx+r8*1]
  41527a:	lea    rdx,[rdx+r8*1+0x18]
  41527f:	jmp    0x415286
  415281:	cmp    rcx,rax
  415284:	jae    0x4152a0
  415286:	sub    rdx,0x4
  41528a:	sub    rax,0x4
  41528e:	mov    r9d,DWORD PTR [rdx]
  415291:	cmp    DWORD PTR [rax],r9d
  415294:	je     0x415281
  415296:	sbb    eax,eax
  415298:	or     eax,0x1
  41529b:	ret    
  41529c:	nop    DWORD PTR [rax+0x0]
  4152a0:	xor    eax,eax
  4152a2:	repz ret 
  4152a4:	xchg   ax,ax
  4152a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4152b0:	push   rdi
  4152b1:	push   rsi
  4152b2:	push   rbx
  4152b3:	sub    rsp,0x20
  4152b7:	mov    rsi,rcx
  4152ba:	mov    rdi,rdx
  4152bd:	call   0x415260
  4152c2:	test   eax,eax
  4152c4:	je     0x4153b0
  4152ca:	mov    ebx,0x0
  4152cf:	js     0x4153d2
  4152d5:	mov    ecx,DWORD PTR [rsi+0x8]
  4152d8:	call   0x414c30
  4152dd:	test   rax,rax
  4152e0:	je     0x4153e2
  4152e6:	movsxd rdx,DWORD PTR [rsi+0x14]
  4152ea:	lea    rcx,[rsi+0x18]
  4152ee:	mov    DWORD PTR [rax+0x10],ebx
  4152f1:	lea    r10,[rdi+0x18]
  4152f5:	xor    r9d,r9d
  4152f8:	mov    rbx,rdx
  4152fb:	lea    rsi,[rcx+rdx*4]
  4152ff:	movsxd rdx,DWORD PTR [rdi+0x14]
  415303:	lea    rdi,[r10+rdx*4]
  415307:	lea    rdx,[rax+0x18]
  41530b:	nop    DWORD PTR [rax+rax*1+0x0]
  415310:	add    rcx,0x4
  415314:	add    r10,0x4
  415318:	mov    r11d,DWORD PTR [r10-0x4]
  41531c:	mov    r8d,DWORD PTR [rcx-0x4]
  415320:	add    rdx,0x4
  415324:	sub    r8,r11
  415327:	sub    r8,r9
  41532a:	mov    r9,r8
  41532d:	mov    r11d,r8d
  415330:	mov    DWORD PTR [rdx-0x4],r8d
  415334:	shr    r9,0x20
  415338:	and    r9d,0x1
  41533c:	cmp    rdi,r10
  41533f:	ja     0x415310
  415341:	cmp    rsi,rcx
  415344:	mov    rdi,rdx
  415347:	mov    r10,rcx
  41534a:	jbe    0x415386
  41534c:	nop    DWORD PTR [rax+0x0]
  415350:	add    rcx,0x4
  415354:	mov    r8d,DWORD PTR [rcx-0x4]
  415358:	add    rdx,0x4
  41535c:	sub    r8,r9
  41535f:	mov    r9,r8
  415362:	mov    r11d,r8d
  415365:	mov    DWORD PTR [rdx-0x4],r8d
  415369:	shr    r9,0x20
  41536d:	and    r9d,0x1
  415371:	cmp    rsi,rcx
  415374:	ja     0x415350
  415376:	not    r10
  415379:	lea    rdx,[r10+rsi*1]
  41537d:	shr    rdx,0x2
  415381:	lea    rdx,[rdi+rdx*4+0x4]
  415386:	sub    rdx,0x4
  41538a:	test   r11d,r11d
  41538d:	jne    0x41539d
  41538f:	nop
  415390:	sub    rdx,0x4
  415394:	mov    ecx,DWORD PTR [rdx]
  415396:	sub    ebx,0x1
  415399:	test   ecx,ecx
  41539b:	je     0x415390
  41539d:	mov    DWORD PTR [rax+0x14],ebx
  4153a0:	add    rsp,0x20
  4153a4:	pop    rbx
  4153a5:	pop    rsi
  4153a6:	pop    rdi
  4153a7:	ret    
  4153a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4153b0:	xor    ecx,ecx
  4153b2:	call   0x414c30
  4153b7:	test   rax,rax
  4153ba:	je     0x4153e2
  4153bc:	mov    DWORD PTR [rax+0x14],0x1
  4153c3:	mov    DWORD PTR [rax+0x18],0x0
  4153ca:	add    rsp,0x20
  4153ce:	pop    rbx
  4153cf:	pop    rsi
  4153d0:	pop    rdi
  4153d1:	ret    
  4153d2:	mov    rax,rsi
  4153d5:	mov    bl,0x1
  4153d7:	mov    rsi,rdi
  4153da:	mov    rdi,rax
  4153dd:	jmp    0x4152d5
  4153e2:	xor    eax,eax
  4153e4:	jmp    0x4153a0
  4153e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4153f0:	push   rsi
  4153f1:	push   rbx
  4153f2:	sub    rsp,0x18
  4153f6:	movsxd rax,DWORD PTR [rcx+0x14]
  4153fa:	lea    r10,[rcx+0x18]
  4153fe:	mov    ecx,0x20
  415403:	lea    r9,[r10+rax*4]
  415407:	mov    eax,DWORD PTR [r9-0x4]
  41540b:	lea    rbx,[r9-0x4]
  41540f:	bsr    r8d,eax
  415413:	xor    r8d,0x1f
  415417:	sub    ecx,r8d
  41541a:	cmp    r8d,0xa
  41541e:	mov    DWORD PTR [rdx],ecx
  415420:	jg     0x415470
  415422:	mov    ecx,0xb
  415427:	mov    r11d,eax
  41542a:	xor    esi,esi
  41542c:	sub    ecx,r8d
  41542f:	shr    r11d,cl
  415432:	or     r11d,0x3ff00000
  415439:	shl    r11,0x20
  41543d:	cmp    r10,rbx
  415440:	jae    0x415448
  415442:	mov    esi,DWORD PTR [r9-0x8]
  415446:	shr    esi,cl
  415448:	lea    ecx,[r8+0x15]
  41544c:	shl    eax,cl
  41544e:	mov    edx,eax
  415450:	mov    eax,esi
  415452:	or     eax,edx
  415454:	or     rax,r11
  415457:	mov    QWORD PTR [rsp+0x8],rax
  41545c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  415462:	add    rsp,0x18
  415466:	pop    rbx
  415467:	pop    rsi
  415468:	ret    
  415469:	nop    DWORD PTR [rax+0x0]
  415470:	cmp    r10,rbx
  415473:	jae    0x4154d0
  415475:	mov    r11d,r8d
  415478:	lea    rsi,[r9-0x8]
  41547c:	mov    edx,DWORD PTR [r9-0x8]
  415480:	sub    r11d,0xb
  415484:	je     0x4154f2
  415486:	mov    ebx,0x2b
  41548b:	mov    ecx,r11d
  41548e:	sub    ebx,r8d
  415491:	shl    eax,cl
  415493:	mov    r8d,edx
  415496:	mov    ecx,ebx
  415498:	shr    r8d,cl
  41549b:	or     eax,r8d
  41549e:	xor    r8d,r8d
  4154a1:	or     eax,0x3ff00000
  4154a6:	shl    rax,0x20
  4154aa:	cmp    r10,rsi
  4154ad:	jae    0x4154b6
  4154af:	mov    r8d,DWORD PTR [r9-0xc]
  4154b3:	shr    r8d,cl
  4154b6:	mov    ecx,r11d
  4154b9:	shl    edx,cl
  4154bb:	or     r8d,edx
  4154be:	movabs rdx,0xffffffff00000000
  4154c8:	and    rax,rdx
  4154cb:	or     rax,r8
  4154ce:	jmp    0x415457
  4154d0:	mov    r11d,r8d
  4154d3:	sub    r11d,0xb
  4154d7:	je     0x4154f0
  4154d9:	mov    ecx,r11d
  4154dc:	xor    r8d,r8d
  4154df:	xor    edx,edx
  4154e1:	shl    eax,cl
  4154e3:	or     eax,0x3ff00000
  4154e8:	shl    rax,0x20
  4154ec:	jmp    0x4154b6
  4154ee:	xchg   ax,ax
  4154f0:	xor    edx,edx
  4154f2:	or     eax,0x3ff00000
  4154f7:	shl    rax,0x20
  4154fb:	or     rax,rdx
  4154fe:	jmp    0x415457
  415503:	nop    DWORD PTR [rax]
  415506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415510:	push   rdi
  415511:	push   rsi
  415512:	push   rbx
  415513:	sub    rsp,0x20
  415517:	mov    ecx,0x1
  41551c:	movq   rbx,xmm0
  415521:	mov    rdi,rdx
  415524:	mov    rsi,r8
  415527:	call   0x414c30
  41552c:	test   rax,rax
  41552f:	je     0x415615
  415535:	mov    r9,rbx
  415538:	shr    r9,0x20
  41553c:	mov    r10d,r9d
  41553f:	and    r9d,0x7fffffff
  415546:	and    r10d,0xfffff
  41554d:	shr    r9d,0x14
  415551:	mov    edx,r10d
  415554:	or     edx,0x100000
  41555a:	test   r9d,r9d
  41555d:	cmovne r10d,edx
  415561:	test   ebx,ebx
  415563:	jne    0x4155a4
  415565:	xor    ecx,ecx
  415567:	mov    DWORD PTR [rax+0x14],0x1
  41556e:	mov    edx,0x1
  415573:	tzcnt  ecx,r10d
  415578:	shr    r10d,cl
  41557b:	test   r9d,r9d
  41557e:	lea    r11d,[rcx+0x20]
  415582:	mov    DWORD PTR [rax+0x18],r10d
  415586:	je     0x4155e3
  415588:	lea    edx,[r11+r9*1-0x433]
  415590:	mov    DWORD PTR [rdi],edx
  415592:	mov    edx,0x35
  415597:	sub    edx,r11d
  41559a:	mov    DWORD PTR [rsi],edx
  41559c:	add    rsp,0x20
  4155a0:	pop    rbx
  4155a1:	pop    rsi
  4155a2:	pop    rdi
  4155a3:	ret    
  4155a4:	xor    r11d,r11d
  4155a7:	tzcnt  r11d,ebx
  4155ac:	mov    ecx,r11d
  4155af:	shr    ebx,cl
  4155b1:	test   r11d,r11d
  4155b4:	je     0x415610
  4155b6:	mov    ecx,0x20
  4155bb:	mov    edx,r10d
  4155be:	sub    ecx,r11d
  4155c1:	shl    edx,cl
  4155c3:	mov    ecx,r11d
  4155c6:	or     ebx,edx
  4155c8:	shr    r10d,cl
  4155cb:	mov    DWORD PTR [rax+0x18],ebx
  4155ce:	cmp    r10d,0x1
  4155d2:	mov    DWORD PTR [rax+0x1c],r10d
  4155d6:	sbb    edx,edx
  4155d8:	add    edx,0x2
  4155db:	test   r9d,r9d
  4155de:	mov    DWORD PTR [rax+0x14],edx
  4155e1:	jne    0x415588
  4155e3:	movsxd rcx,edx
  4155e6:	shl    edx,0x5
  4155e9:	sub    r11d,0x432
  4155f0:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  4155f5:	mov    DWORD PTR [rdi],r11d
  4155f8:	xor    ecx,0x1f
  4155fb:	sub    edx,ecx
  4155fd:	mov    DWORD PTR [rsi],edx
  4155ff:	add    rsp,0x20
  415603:	pop    rbx
  415604:	pop    rsi
  415605:	pop    rdi
  415606:	ret    
  415607:	nop    WORD PTR [rax+rax*1+0x0]
  415610:	mov    DWORD PTR [rax+0x18],ebx
  415613:	jmp    0x4155ce
  415615:	xor    eax,eax
  415617:	jmp    0x41559c
  415619:	nop    DWORD PTR [rax+0x0]
  415620:	mov    rax,rcx
  415623:	lea    rcx,[rdx+0x1]
  415627:	movzx  edx,BYTE PTR [rdx]
  41562a:	test   dl,dl
  41562c:	mov    BYTE PTR [rax],dl
  41562e:	je     0x415642
  415630:	add    rcx,0x1
  415634:	movzx  edx,BYTE PTR [rcx-0x1]
  415638:	add    rax,0x1
  41563c:	test   dl,dl
  41563e:	mov    BYTE PTR [rax],dl
  415640:	jne    0x415630
  415642:	repz ret 
  415644:	nop
  415645:	nop
  415646:	nop
  415647:	nop
  415648:	nop
  415649:	nop
  41564a:	nop
  41564b:	nop
  41564c:	nop
  41564d:	nop
  41564e:	nop
  41564f:	nop
  415650:	push   r13
  415652:	push   r12
  415654:	push   rbp
  415655:	push   rdi
  415656:	push   rsi
  415657:	push   rbx
  415658:	sub    rsp,0x28
  41565c:	mov    rsi,rcx
  41565f:	lea    ecx,[r8+0x8]
  415663:	mov    ebp,edx
  415665:	mov    edx,0x38e38e39
  41566a:	mov    edi,r8d
  41566d:	mov    ebx,r9d
  415670:	mov    eax,ecx
  415672:	sar    ecx,0x1f
  415675:	imul   edx
  415677:	sar    edx,1
  415679:	sub    edx,ecx
  41567b:	cmp    edx,0x1
  41567e:	jle    0x415744
  415684:	mov    eax,0x1
  415689:	xor    ecx,ecx
  41568b:	nop    DWORD PTR [rax+rax*1+0x0]
  415690:	add    eax,eax
  415692:	add    ecx,0x1
  415695:	cmp    edx,eax
  415697:	jg     0x415690
  415699:	call   0x414c30
  41569e:	cmp    ebp,0x9
  4156a1:	mov    DWORD PTR [rax+0x18],ebx
  4156a4:	mov    DWORD PTR [rax+0x14],0x1
  4156ab:	jle    0x415730
  4156b1:	lea    rbx,[rsi+0x9]
  4156b5:	lea    r12d,[rbp-0xa]
  4156b9:	lea    r13,[rsi+r12*1+0xa]
  4156be:	mov    rsi,rbx
  4156c1:	add    rsi,0x1
  4156c5:	movsx  r8d,BYTE PTR [rsi-0x1]
  4156ca:	mov    edx,0xa
  4156cf:	mov    rcx,rax
  4156d2:	sub    r8d,0x30
  4156d6:	call   0x414db0
  4156db:	cmp    rsi,r13
  4156de:	jne    0x4156c1
  4156e0:	movsxd rdx,DWORD PTR [rsp+0x80]
  4156e8:	lea    r9,[r12+rdx*1+0x1]
  4156ed:	add    rbx,r9
  4156f0:	cmp    edi,ebp
  4156f2:	jle    0x41571f
  4156f4:	sub    edi,0x1
  4156f7:	sub    edi,ebp
  4156f9:	lea    rsi,[rbx+rdi*1+0x1]
  4156fe:	xchg   ax,ax
  415700:	add    rbx,0x1
  415704:	movsx  r8d,BYTE PTR [rbx-0x1]
  415709:	mov    edx,0xa
  41570e:	mov    rcx,rax
  415711:	sub    r8d,0x30
  415715:	call   0x414db0
  41571a:	cmp    rbx,rsi
  41571d:	jne    0x415700
  41571f:	add    rsp,0x28
  415723:	pop    rbx
  415724:	pop    rsi
  415725:	pop    rdi
  415726:	pop    rbp
  415727:	pop    r12
  415729:	pop    r13
  41572b:	ret    
  41572c:	nop    DWORD PTR [rax+0x0]
  415730:	movsxd rdx,DWORD PTR [rsp+0x80]
  415738:	mov    ebp,0x9
  41573d:	lea    rbx,[rsi+rdx*1+0x9]
  415742:	jmp    0x4156f0
  415744:	xor    ecx,ecx
  415746:	jmp    0x415699
  41574b:	nop    DWORD PTR [rax+rax*1+0x0]
  415750:	push   rdi
  415751:	push   rsi
  415752:	push   rbx
  415753:	sub    rsp,0x50
  415757:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41575c:	mov    rsi,rdx
  41575f:	lea    rdx,[rsp+0x38]
  415764:	mov    rdi,rcx
  415767:	call   0x4153f0
  41576c:	lea    rdx,[rsp+0x3c]
  415771:	mov    rcx,rsi
  415774:	movq   rbx,xmm0
  415779:	movapd xmm6,xmm0
  41577d:	call   0x4153f0
  415782:	mov    eax,DWORD PTR [rsp+0x38]
  415786:	sub    eax,DWORD PTR [rsp+0x3c]
  41578a:	movq   rcx,xmm0
  41578f:	mov    r8d,eax
  415792:	mov    eax,DWORD PTR [rdi+0x14]
  415795:	sub    eax,DWORD PTR [rsi+0x14]
  415798:	shl    eax,0x5
  41579b:	add    eax,r8d
  41579e:	test   eax,eax
  4157a0:	jle    0x4157e0
  4157a2:	movq   rdx,xmm6
  4157a7:	shl    eax,0x14
  4157aa:	shr    rdx,0x20
  4157ae:	add    eax,edx
  4157b0:	shl    rax,0x20
  4157b4:	mov    rdx,rax
  4157b7:	mov    eax,ebx
  4157b9:	or     rax,rdx
  4157bc:	mov    QWORD PTR [rsp+0x28],rax
  4157c1:	movsd  xmm6,QWORD PTR [rsp+0x28]
  4157c7:	divsd  xmm6,xmm0
  4157cb:	movapd xmm0,xmm6
  4157cf:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4157d4:	add    rsp,0x50
  4157d8:	pop    rbx
  4157d9:	pop    rsi
  4157da:	pop    rdi
  4157db:	ret    
  4157dc:	nop    DWORD PTR [rax+0x0]
  4157e0:	movq   rdx,xmm0
  4157e5:	shl    eax,0x14
  4157e8:	shr    rdx,0x20
  4157ec:	mov    ebx,edx
  4157ee:	sub    ebx,eax
  4157f0:	mov    rax,rbx
  4157f3:	shl    rax,0x20
  4157f7:	mov    rdx,rax
  4157fa:	mov    eax,ecx
  4157fc:	or     rax,rdx
  4157ff:	mov    QWORD PTR [rsp+0x28],rax
  415804:	movsd  xmm0,QWORD PTR [rsp+0x28]
  41580a:	jmp    0x4157c7
  41580c:	nop    DWORD PTR [rax+0x0]
  415810:	mov    r8,QWORD PTR [rcx]
  415813:	jmp    0x41582e
  415815:	movsx  eax,BYTE PTR [r8]
  415819:	lea    r11d,[rax-0x41]
  41581d:	lea    r10d,[rax+0x20]
  415821:	cmp    r11d,0x19
  415825:	cmovbe eax,r10d
  415829:	cmp    eax,r9d
  41582c:	jne    0x415850
  41582e:	add    rdx,0x1
  415832:	movsx  r9d,BYTE PTR [rdx-0x1]
  415837:	add    r8,0x1
  41583b:	test   r9d,r9d
  41583e:	jne    0x415815
  415840:	mov    QWORD PTR [rcx],r8
  415843:	mov    eax,0x1
  415848:	ret    
  415849:	nop    DWORD PTR [rax+0x0]
  415850:	xor    eax,eax
  415852:	ret    
  415853:	nop    DWORD PTR [rax]
  415856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415860:	sub    edx,0x1
  415863:	lea    rax,[r8+0x18]
  415867:	sar    edx,0x5
  41586a:	movsxd rdx,edx
  41586d:	lea    r11,[rcx+rdx*4+0x4]
  415872:	movsxd rdx,DWORD PTR [r8+0x14]
  415876:	lea    r10,[rax+rdx*4]
  41587a:	cmp    rax,r10
  41587d:	jae    0x4158bb
  41587f:	mov    rdx,rcx
  415882:	add    rax,0x4
  415886:	mov    r9d,DWORD PTR [rax-0x4]
  41588a:	add    rdx,0x4
  41588e:	cmp    r10,rax
  415891:	mov    DWORD PTR [rdx-0x4],r9d
  415895:	ja     0x415882
  415897:	sub    r10,r8
  41589a:	lea    rax,[r10-0x19]
  41589e:	shr    rax,0x2
  4158a2:	lea    rcx,[rcx+rax*4+0x4]
  4158a7:	cmp    r11,rcx
  4158aa:	jbe    0x4158c0
  4158ac:	nop    DWORD PTR [rax+0x0]
  4158b0:	add    rcx,0x4
  4158b4:	mov    DWORD PTR [rcx-0x4],0x0
  4158bb:	cmp    r11,rcx
  4158be:	ja     0x4158b0
  4158c0:	repz ret 
  4158c2:	nop    DWORD PTR [rax+0x0]
  4158c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4158d0:	movsxd rax,DWORD PTR [rcx+0x14]
  4158d4:	mov    r9d,edx
  4158d7:	lea    r8,[rcx+0x18]
  4158db:	sar    r9d,0x5
  4158df:	cmp    eax,r9d
  4158e2:	jge    0x415911
  4158e4:	lea    r9,[r8+rax*4]
  4158e8:	cmp    r8,r9
  4158eb:	jae    0x415956
  4158ed:	mov    eax,DWORD PTR [r9-0x4]
  4158f1:	lea    rdx,[r9-0x4]
  4158f5:	test   eax,eax
  4158f7:	je     0x41590a
  4158f9:	jmp    0x415950
  4158fb:	nop    DWORD PTR [rax+rax*1+0x0]
  415900:	sub    rdx,0x4
  415904:	mov    ecx,DWORD PTR [rdx]
  415906:	test   ecx,ecx
  415908:	jne    0x415950
  41590a:	cmp    r8,rdx
  41590d:	jb     0x415900
  41590f:	repz ret 
  415911:	jle    0x415940
  415913:	mov    ecx,edx
  415915:	movsxd r9,r9d
  415918:	and    ecx,0x1f
  41591b:	lea    r9,[r8+r9*4]
  41591f:	je     0x4158e8
  415921:	mov    r10d,DWORD PTR [r9]
  415924:	mov    eax,r10d
  415927:	shr    eax,cl
  415929:	shl    eax,cl
  41592b:	mov    edx,eax
  41592d:	mov    eax,0x1
  415932:	cmp    edx,r10d
  415935:	je     0x4158e8
  415937:	repz ret 
  415939:	nop    DWORD PTR [rax+0x0]
  415940:	movsxd r9,r9d
  415943:	lea    r9,[r8+r9*4]
  415947:	jmp    0x4158e8
  415949:	nop    DWORD PTR [rax+0x0]
  415950:	mov    eax,0x1
  415955:	ret    
  415956:	xor    eax,eax
  415958:	ret    
  415959:	nop
  41595a:	nop
  41595b:	nop
  41595c:	nop
  41595d:	nop
  41595e:	nop
  41595f:	nop
  415960:	push   rbp
  415961:	push   rdi
  415962:	push   rsi
  415963:	push   rbx
  415964:	sub    rsp,0x48
  415968:	test   rdx,rdx
  41596b:	je     0x415a93
  415971:	test   r8,r8
  415974:	je     0x415aa0
  41597a:	mov    eax,DWORD PTR [r9]
  41597d:	mov    DWORD PTR [r9],0x0
  415984:	mov    DWORD PTR [rsp+0x30],eax
  415988:	movzx  eax,BYTE PTR [rdx]
  41598b:	test   al,al
  41598d:	je     0x415a30
  415993:	cmp    DWORD PTR [rsp+0x98],0x1
  41599b:	mov    rsi,r9
  41599e:	mov    rdi,r8
  4159a1:	mov    rbx,rdx
  4159a4:	mov    rbp,rcx
  4159a7:	jbe    0x415a10
  4159a9:	cmp    BYTE PTR [rsp+0x30],0x0
  4159ae:	jne    0x415a40
  4159b4:	movzx  edx,al
  4159b7:	mov    ecx,DWORD PTR [rsp+0x90]
  4159be:	call   QWORD PTR [rip+0xda54]        # 0x423418
  4159c4:	test   eax,eax
  4159c6:	je     0x415a10
  4159c8:	cmp    rdi,0x1
  4159cc:	jbe    0x415abc
  4159d2:	mov    DWORD PTR [rsp+0x28],0x1
  4159da:	mov    QWORD PTR [rsp+0x20],rbp
  4159df:	mov    r9d,0x2
  4159e5:	mov    r8,rbx
  4159e8:	mov    edx,0x8
  4159ed:	mov    ecx,DWORD PTR [rsp+0x90]
  4159f4:	call   QWORD PTR [rip+0xda2e]        # 0x423428
  4159fa:	test   eax,eax
  4159fc:	je     0x415aa7
  415a02:	mov    eax,0x2
  415a07:	add    rsp,0x48
  415a0b:	pop    rbx
  415a0c:	pop    rsi
  415a0d:	pop    rdi
  415a0e:	pop    rbp
  415a0f:	ret    
  415a10:	mov    eax,DWORD PTR [rsp+0x90]
  415a17:	test   eax,eax
  415a19:	jne    0x415a60
  415a1b:	movzx  eax,BYTE PTR [rbx]
  415a1e:	mov    WORD PTR [rbp+0x0],ax
  415a22:	mov    eax,0x1
  415a27:	add    rsp,0x48
  415a2b:	pop    rbx
  415a2c:	pop    rsi
  415a2d:	pop    rdi
  415a2e:	pop    rbp
  415a2f:	ret    
  415a30:	xor    edx,edx
  415a32:	xor    eax,eax
  415a34:	mov    WORD PTR [rcx],dx
  415a37:	add    rsp,0x48
  415a3b:	pop    rbx
  415a3c:	pop    rsi
  415a3d:	pop    rdi
  415a3e:	pop    rbp
  415a3f:	ret    
  415a40:	mov    BYTE PTR [rsp+0x31],al
  415a44:	mov    DWORD PTR [rsp+0x28],0x1
  415a4c:	mov    r9d,0x2
  415a52:	mov    QWORD PTR [rsp+0x20],rcx
  415a57:	lea    r8,[rsp+0x30]
  415a5c:	jmp    0x4159e8
  415a5e:	xchg   ax,ax
  415a60:	mov    DWORD PTR [rsp+0x28],0x1
  415a68:	mov    QWORD PTR [rsp+0x20],rbp
  415a6d:	mov    r9d,0x1
  415a73:	mov    r8,rbx
  415a76:	mov    edx,0x8
  415a7b:	mov    ecx,DWORD PTR [rsp+0x90]
  415a82:	call   QWORD PTR [rip+0xd9a0]        # 0x423428
  415a88:	test   eax,eax
  415a8a:	je     0x415aa7
  415a8c:	mov    eax,0x1
  415a91:	jmp    0x415a37
  415a93:	xor    eax,eax
  415a95:	add    rsp,0x48
  415a99:	pop    rbx
  415a9a:	pop    rsi
  415a9b:	pop    rdi
  415a9c:	pop    rbp
  415a9d:	ret    
  415a9e:	xchg   ax,ax
  415aa0:	mov    eax,0xfffffffe
  415aa5:	jmp    0x415a37
  415aa7:	call   0x4160b8
  415aac:	mov    DWORD PTR [rax],0x2a
  415ab2:	mov    eax,0xffffffff
  415ab7:	jmp    0x415a37
  415abc:	movzx  eax,BYTE PTR [rbx]
  415abf:	mov    BYTE PTR [rsi],al
  415ac1:	mov    eax,0xfffffffe
  415ac6:	jmp    0x415a37
  415acb:	nop    DWORD PTR [rax+rax*1+0x0]
  415ad0:	push   rbp
  415ad1:	push   rdi
  415ad2:	push   rsi
  415ad3:	push   rbx
  415ad4:	sub    rsp,0x58
  415ad8:	xor    eax,eax
  415ada:	mov    WORD PTR [rsp+0x4e],ax
  415adf:	lea    rax,[rsp+0x4e]
  415ae4:	test   rcx,rcx
  415ae7:	mov    rbx,rcx
  415aea:	mov    rsi,r9
  415aed:	mov    rdi,rdx
  415af0:	cmove  rbx,rax
  415af4:	mov    rax,QWORD PTR [rip+0x6275]        # 0x41bd70
  415afb:	mov    QWORD PTR [rsp+0x38],r8
  415b00:	mov    rax,QWORD PTR [rax]
  415b03:	mov    ebp,DWORD PTR [rax]
  415b05:	call   0x416100
  415b0a:	mov    r8,QWORD PTR [rsp+0x38]
  415b0f:	lea    r9,[rip+0xbef2]        # 0x421a08
  415b16:	test   rsi,rsi
  415b19:	mov    DWORD PTR [rsp+0x28],ebp
  415b1d:	mov    DWORD PTR [rsp+0x20],eax
  415b21:	mov    rdx,rdi
  415b24:	cmovne r9,rsi
  415b28:	mov    rcx,rbx
  415b2b:	call   0x415960
  415b30:	cdqe   
  415b32:	add    rsp,0x58
  415b36:	pop    rbx
  415b37:	pop    rsi
  415b38:	pop    rdi
  415b39:	pop    rbp
  415b3a:	ret    
  415b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  415b40:	push   r15
  415b42:	push   r14
  415b44:	push   r13
  415b46:	push   r12
  415b48:	push   rbp
  415b49:	push   rdi
  415b4a:	push   rsi
  415b4b:	push   rbx
  415b4c:	sub    rsp,0x48
  415b50:	lea    rax,[rip+0xbead]        # 0x421a04
  415b57:	test   r9,r9
  415b5a:	mov    rdi,r9
  415b5d:	mov    r13,rdx
  415b60:	cmove  rdi,rax
  415b64:	mov    r14,rcx
  415b67:	mov    rsi,r8
  415b6a:	call   0x416100
  415b6f:	mov    r12d,eax
  415b72:	mov    rax,QWORD PTR [rip+0x61f7]        # 0x41bd70
  415b79:	test   r13,r13
  415b7c:	mov    rax,QWORD PTR [rax]
  415b7f:	mov    ebp,DWORD PTR [rax]
  415b81:	je     0x415c05
  415b87:	mov    rdx,QWORD PTR [r13+0x0]
  415b8b:	test   rdx,rdx
  415b8e:	je     0x415c05
  415b90:	test   r14,r14
  415b93:	je     0x415c10
  415b95:	xor    ebx,ebx
  415b97:	test   rsi,rsi
  415b9a:	jne    0x415bba
  415b9c:	jmp    0x415c05
  415b9e:	xchg   ax,ax
  415ba0:	movsxd r10,eax
  415ba3:	add    r14,0x2
  415ba7:	mov    rdx,r10
  415baa:	add    rdx,QWORD PTR [r13+0x0]
  415bae:	add    rbx,r10
  415bb1:	cmp    rsi,rbx
  415bb4:	mov    QWORD PTR [r13+0x0],rdx
  415bb8:	jbe    0x415c00
  415bba:	mov    r8,rsi
  415bbd:	mov    DWORD PTR [rsp+0x28],ebp
  415bc1:	mov    DWORD PTR [rsp+0x20],r12d
  415bc6:	sub    r8,rbx
  415bc9:	mov    r9,rdi
  415bcc:	mov    rcx,r14
  415bcf:	call   0x415960
  415bd4:	cmp    eax,0x0
  415bd7:	jg     0x415ba0
  415bd9:	jne    0x415c00
  415bdb:	cmp    rbx,rsi
  415bde:	jae    0x415c00
  415be0:	mov    QWORD PTR [r13+0x0],0x0
  415be8:	mov    rax,rbx
  415beb:	add    rsp,0x48
  415bef:	pop    rbx
  415bf0:	pop    rsi
  415bf1:	pop    rdi
  415bf2:	pop    rbp
  415bf3:	pop    r12
  415bf5:	pop    r13
  415bf7:	pop    r14
  415bf9:	pop    r15
  415bfb:	ret    
  415bfc:	xor    ebx,ebx
  415bfe:	xchg   ax,ax
  415c00:	mov    rax,rbx
  415c03:	jmp    0x415beb
  415c05:	xor    eax,eax
  415c07:	jmp    0x415beb
  415c09:	nop    DWORD PTR [rax+0x0]
  415c10:	xor    eax,eax
  415c12:	test   rsi,rsi
  415c15:	mov    WORD PTR [rsp+0x3e],ax
  415c1a:	je     0x415bfc
  415c1c:	mov    r15d,ebp
  415c1f:	xor    ebx,ebx
  415c21:	lea    r14,[rsp+0x3e]
  415c26:	jmp    0x415c45
  415c28:	nop    DWORD PTR [rax+rax*1+0x0]
  415c30:	cdqe   
  415c32:	mov    rdx,rax
  415c35:	add    rdx,QWORD PTR [r13+0x0]
  415c39:	add    rbx,rax
  415c3c:	cmp    rsi,rbx
  415c3f:	mov    QWORD PTR [r13+0x0],rdx
  415c43:	jbe    0x415c00
  415c45:	mov    DWORD PTR [rsp+0x28],ebp
  415c49:	mov    DWORD PTR [rsp+0x20],r12d
  415c4e:	mov    r9,rdi
  415c51:	mov    r8,r15
  415c54:	mov    rcx,r14
  415c57:	call   0x415960
  415c5c:	test   eax,eax
  415c5e:	jg     0x415c30
  415c60:	jmp    0x415c00
  415c62:	nop    DWORD PTR [rax+0x0]
  415c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415c70:	push   rbp
  415c71:	push   rdi
  415c72:	push   rsi
  415c73:	push   rbx
  415c74:	sub    rsp,0x48
  415c78:	xor    eax,eax
  415c7a:	mov    WORD PTR [rsp+0x3e],ax
  415c7f:	mov    rax,QWORD PTR [rip+0x60ea]        # 0x41bd70
  415c86:	mov    rbx,r8
  415c89:	mov    rsi,rcx
  415c8c:	mov    rdi,rdx
  415c8f:	mov    rax,QWORD PTR [rax]
  415c92:	mov    ebp,DWORD PTR [rax]
  415c94:	call   0x416100
  415c99:	lea    r9,[rip+0xbd60]        # 0x421a00
  415ca0:	test   rbx,rbx
  415ca3:	lea    rcx,[rsp+0x3e]
  415ca8:	mov    DWORD PTR [rsp+0x28],ebp
  415cac:	mov    DWORD PTR [rsp+0x20],eax
  415cb0:	mov    r8,rdi
  415cb3:	cmovne r9,rbx
  415cb7:	mov    rdx,rsi
  415cba:	call   0x415960
  415cbf:	cdqe   
  415cc1:	add    rsp,0x48
  415cc5:	pop    rbx
  415cc6:	pop    rsi
  415cc7:	pop    rdi
  415cc8:	pop    rbp
  415cc9:	ret    
  415cca:	nop
  415ccb:	nop
  415ccc:	nop
  415ccd:	nop
  415cce:	nop
  415ccf:	nop
  415cd0:	sub    rsp,0x58
  415cd4:	test   r8d,r8d
  415cd7:	mov    eax,r8d
  415cda:	mov    WORD PTR [rsp+0x68],dx
  415cdf:	jne    0x415cf4
  415ce1:	cmp    dx,0xff
  415ce6:	ja     0x415d3a
  415ce8:	mov    BYTE PTR [rcx],dl
  415cea:	mov    eax,0x1
  415cef:	add    rsp,0x58
  415cf3:	ret    
  415cf4:	lea    rdx,[rsp+0x4c]
  415cf9:	mov    DWORD PTR [rsp+0x28],r9d
  415cfe:	mov    QWORD PTR [rsp+0x20],rcx
  415d03:	mov    DWORD PTR [rsp+0x4c],0x0
  415d0b:	mov    QWORD PTR [rsp+0x30],0x0
  415d14:	mov    r9d,0x1
  415d1a:	mov    QWORD PTR [rsp+0x38],rdx
  415d1f:	lea    r8,[rsp+0x68]
  415d24:	xor    edx,edx
  415d26:	mov    ecx,eax
  415d28:	call   QWORD PTR [rip+0xd762]        # 0x423490
  415d2e:	test   eax,eax
  415d30:	je     0x415d3a
  415d32:	mov    edx,DWORD PTR [rsp+0x4c]
  415d36:	test   edx,edx
  415d38:	je     0x415cef
  415d3a:	call   0x4160b8
  415d3f:	mov    DWORD PTR [rax],0x2a
  415d45:	mov    eax,0xffffffff
  415d4a:	add    rsp,0x58
  415d4e:	ret    
  415d4f:	nop
  415d50:	push   rdi
  415d51:	push   rsi
  415d52:	push   rbx
  415d53:	sub    rsp,0x30
  415d57:	lea    rax,[rsp+0x20]
  415d5c:	test   rcx,rcx
  415d5f:	mov    rbx,rcx
  415d62:	mov    esi,edx
  415d64:	cmove  rbx,rax
  415d68:	mov    rax,QWORD PTR [rip+0x6001]        # 0x41bd70
  415d6f:	mov    rax,QWORD PTR [rax]
  415d72:	mov    edi,DWORD PTR [rax]
  415d74:	call   0x416100
  415d79:	movzx  edx,si
  415d7c:	mov    r8d,eax
  415d7f:	mov    rcx,rbx
  415d82:	mov    r9d,edi
  415d85:	call   0x415cd0
  415d8a:	cdqe   
  415d8c:	add    rsp,0x30
  415d90:	pop    rbx
  415d91:	pop    rsi
  415d92:	pop    rdi
  415d93:	ret    
  415d94:	xchg   ax,ax
  415d96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415da0:	push   r14
  415da2:	push   r13
  415da4:	push   r12
  415da6:	push   rbp
  415da7:	push   rdi
  415da8:	push   rsi
  415da9:	push   rbx
  415daa:	sub    rsp,0x30
  415dae:	mov    r13,rdx
  415db1:	mov    rbx,rcx
  415db4:	mov    rdi,r8
  415db7:	call   0x416100
  415dbc:	mov    ebp,eax
  415dbe:	mov    rax,QWORD PTR [rip+0x5fab]        # 0x41bd70
  415dc5:	mov    r14,QWORD PTR [r13+0x0]
  415dc9:	mov    rax,QWORD PTR [rax]
  415dcc:	test   r14,r14
  415dcf:	mov    r12d,DWORD PTR [rax]
  415dd2:	je     0x415ec0
  415dd8:	xor    esi,esi
  415dda:	test   rbx,rbx
  415ddd:	je     0x415e70
  415de3:	test   rdi,rdi
  415de6:	jne    0x415e08
  415de8:	jmp    0x415e34
  415dea:	nop    WORD PTR [rax+rax*1+0x0]
  415df0:	movsxd r10,eax
  415df3:	add    rbx,r10
  415df6:	add    rsi,r10
  415df9:	cmp    BYTE PTR [rbx-0x1],0x0
  415dfd:	je     0x415e50
  415dff:	add    r14,0x2
  415e03:	cmp    rdi,rsi
  415e06:	jbe    0x415e34
  415e08:	movzx  edx,WORD PTR [r14]
  415e0c:	mov    r9d,r12d
  415e0f:	mov    r8d,ebp
  415e12:	mov    rcx,rbx
  415e15:	call   0x415cd0
  415e1a:	test   eax,eax
  415e1c:	jg     0x415df0
  415e1e:	mov    rax,0xffffffffffffffff
  415e25:	add    rsp,0x30
  415e29:	pop    rbx
  415e2a:	pop    rsi
  415e2b:	pop    rdi
  415e2c:	pop    rbp
  415e2d:	pop    r12
  415e2f:	pop    r13
  415e31:	pop    r14
  415e33:	ret    
  415e34:	mov    rax,rsi
  415e37:	mov    QWORD PTR [r13+0x0],r14
  415e3b:	add    rsp,0x30
  415e3f:	pop    rbx
  415e40:	pop    rsi
  415e41:	pop    rdi
  415e42:	pop    rbp
  415e43:	pop    r12
  415e45:	pop    r13
  415e47:	pop    r14
  415e49:	ret    
  415e4a:	nop    WORD PTR [rax+rax*1+0x0]
  415e50:	lea    rax,[rsi-0x1]
  415e54:	mov    QWORD PTR [r13+0x0],0x0
  415e5c:	add    rsp,0x30
  415e60:	pop    rbx
  415e61:	pop    rsi
  415e62:	pop    rdi
  415e63:	pop    rbp
  415e64:	pop    r12
  415e66:	pop    r13
  415e68:	pop    r14
  415e6a:	ret    
  415e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  415e70:	test   rdi,rdi
  415e73:	lea    rbx,[rsp+0x20]
  415e78:	jne    0x415e9b
  415e7a:	jmp    0x415ed1
  415e7c:	nop    DWORD PTR [rax+0x0]
  415e80:	movsxd rdx,eax
  415e83:	sub    eax,0x1
  415e86:	cdqe   
  415e88:	add    rsi,rdx
  415e8b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  415e90:	je     0x415ed9
  415e92:	add    r14,0x2
  415e96:	cmp    rdi,rsi
  415e99:	jbe    0x415ed1
  415e9b:	movzx  edx,WORD PTR [r14]
  415e9f:	mov    r9d,r12d
  415ea2:	mov    r8d,ebp
  415ea5:	mov    rcx,rbx
  415ea8:	call   0x415cd0
  415ead:	test   eax,eax
  415eaf:	jg     0x415e80
  415eb1:	jmp    0x415e1e
  415eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ec0:	xor    eax,eax
  415ec2:	add    rsp,0x30
  415ec6:	pop    rbx
  415ec7:	pop    rsi
  415ec8:	pop    rdi
  415ec9:	pop    rbp
  415eca:	pop    r12
  415ecc:	pop    r13
  415ece:	pop    r14
  415ed0:	ret    
  415ed1:	mov    rax,rsi
  415ed4:	jmp    0x415e25
  415ed9:	lea    rax,[rsi-0x1]
  415edd:	jmp    0x415e25
  415ee2:	nop
  415ee3:	nop
  415ee4:	nop
  415ee5:	nop
  415ee6:	nop
  415ee7:	nop
  415ee8:	nop
  415ee9:	nop
  415eea:	nop
  415eeb:	nop
  415eec:	nop
  415eed:	nop
  415eee:	nop
  415eef:	nop
  415ef0:	jmp    QWORD PTR [rip+0xd7e2]        # 0x4236d8
  415ef6:	nop
  415ef7:	nop
  415ef8:	jmp    QWORD PTR [rip+0xd7d2]        # 0x4236d0
  415efe:	nop
  415eff:	nop
  415f00:	jmp    QWORD PTR [rip+0xd7c2]        # 0x4236c8
  415f06:	nop
  415f07:	nop
  415f08:	jmp    QWORD PTR [rip+0xd7b2]        # 0x4236c0
  415f0e:	nop
  415f0f:	nop
  415f10:	jmp    QWORD PTR [rip+0xd7a2]        # 0x4236b8
  415f16:	nop
  415f17:	nop
  415f18:	jmp    QWORD PTR [rip+0xd792]        # 0x4236b0
  415f1e:	nop
  415f1f:	nop
  415f20:	jmp    QWORD PTR [rip+0xd782]        # 0x4236a8
  415f26:	nop
  415f27:	nop
  415f28:	jmp    QWORD PTR [rip+0xd772]        # 0x4236a0
  415f2e:	nop
  415f2f:	nop
  415f30:	jmp    QWORD PTR [rip+0xd762]        # 0x423698
  415f36:	nop
  415f37:	nop
  415f38:	jmp    QWORD PTR [rip+0xd752]        # 0x423690
  415f3e:	nop
  415f3f:	nop
  415f40:	jmp    QWORD PTR [rip+0xd742]        # 0x423688
  415f46:	nop
  415f47:	nop
  415f48:	jmp    QWORD PTR [rip+0xd732]        # 0x423680
  415f4e:	nop
  415f4f:	nop
  415f50:	jmp    QWORD PTR [rip+0xd722]        # 0x423678
  415f56:	nop
  415f57:	nop
  415f58:	jmp    QWORD PTR [rip+0xd712]        # 0x423670
  415f5e:	nop
  415f5f:	nop
  415f60:	jmp    QWORD PTR [rip+0xd702]        # 0x423668
  415f66:	nop
  415f67:	nop
  415f68:	jmp    QWORD PTR [rip+0xd6f2]        # 0x423660
  415f6e:	nop
  415f6f:	nop
  415f70:	jmp    QWORD PTR [rip+0xd6e2]        # 0x423658
  415f76:	nop
  415f77:	nop
  415f78:	jmp    QWORD PTR [rip+0xd6d2]        # 0x423650
  415f7e:	nop
  415f7f:	nop
  415f80:	jmp    QWORD PTR [rip+0xd6c2]        # 0x423648
  415f86:	nop
  415f87:	nop
  415f88:	jmp    QWORD PTR [rip+0xd6b2]        # 0x423640
  415f8e:	nop
  415f8f:	nop
  415f90:	jmp    QWORD PTR [rip+0xd6a2]        # 0x423638
  415f96:	nop
  415f97:	nop
  415f98:	jmp    QWORD PTR [rip+0xd692]        # 0x423630
  415f9e:	nop
  415f9f:	nop
  415fa0:	jmp    QWORD PTR [rip+0xd682]        # 0x423628
  415fa6:	nop
  415fa7:	nop
  415fa8:	jmp    QWORD PTR [rip+0xd672]        # 0x423620
  415fae:	nop
  415faf:	nop
  415fb0:	jmp    QWORD PTR [rip+0xd662]        # 0x423618
  415fb6:	nop
  415fb7:	nop
  415fb8:	jmp    QWORD PTR [rip+0xd652]        # 0x423610
  415fbe:	nop
  415fbf:	nop
  415fc0:	jmp    QWORD PTR [rip+0xd642]        # 0x423608
  415fc6:	nop
  415fc7:	nop
  415fc8:	jmp    QWORD PTR [rip+0xd632]        # 0x423600
  415fce:	nop
  415fcf:	nop
  415fd0:	jmp    QWORD PTR [rip+0xd622]        # 0x4235f8
  415fd6:	nop
  415fd7:	nop
  415fd8:	jmp    QWORD PTR [rip+0xd612]        # 0x4235f0
  415fde:	nop
  415fdf:	nop
  415fe0:	jmp    QWORD PTR [rip+0xd602]        # 0x4235e8
  415fe6:	nop
  415fe7:	nop
  415fe8:	jmp    QWORD PTR [rip+0xd5f2]        # 0x4235e0
  415fee:	nop
  415fef:	nop
  415ff0:	jmp    QWORD PTR [rip+0xd5e2]        # 0x4235d8
  415ff6:	nop
  415ff7:	nop
  415ff8:	jmp    QWORD PTR [rip+0xd5d2]        # 0x4235d0
  415ffe:	nop
  415fff:	nop
  416000:	jmp    QWORD PTR [rip+0xd5c2]        # 0x4235c8
  416006:	nop
  416007:	nop
  416008:	jmp    QWORD PTR [rip+0xd5b2]        # 0x4235c0
  41600e:	nop
  41600f:	nop
  416010:	jmp    QWORD PTR [rip+0xd5a2]        # 0x4235b8
  416016:	nop
  416017:	nop
  416018:	jmp    QWORD PTR [rip+0xd592]        # 0x4235b0
  41601e:	nop
  41601f:	nop
  416020:	jmp    QWORD PTR [rip+0xd582]        # 0x4235a8
  416026:	nop
  416027:	nop
  416028:	jmp    QWORD PTR [rip+0xd572]        # 0x4235a0
  41602e:	nop
  41602f:	nop
  416030:	jmp    QWORD PTR [rip+0xd562]        # 0x423598
  416036:	nop
  416037:	nop
  416038:	jmp    QWORD PTR [rip+0xd552]        # 0x423590
  41603e:	nop
  41603f:	nop
  416040:	jmp    QWORD PTR [rip+0xd542]        # 0x423588
  416046:	nop
  416047:	nop
  416048:	jmp    QWORD PTR [rip+0xd532]        # 0x423580
  41604e:	nop
  41604f:	nop
  416050:	jmp    QWORD PTR [rip+0xd522]        # 0x423578
  416056:	nop
  416057:	nop
  416058:	jmp    QWORD PTR [rip+0xd512]        # 0x423570
  41605e:	nop
  41605f:	nop
  416060:	jmp    QWORD PTR [rip+0xd502]        # 0x423568
  416066:	nop
  416067:	nop
  416068:	jmp    QWORD PTR [rip+0xd4f2]        # 0x423560
  41606e:	nop
  41606f:	nop
  416070:	jmp    QWORD PTR [rip+0xd4e2]        # 0x423558
  416076:	nop
  416077:	nop
  416078:	jmp    QWORD PTR [rip+0xd4d2]        # 0x423550
  41607e:	nop
  41607f:	nop
  416080:	jmp    QWORD PTR [rip+0xd4c2]        # 0x423548
  416086:	nop
  416087:	nop
  416088:	jmp    QWORD PTR [rip+0xd4b2]        # 0x423540
  41608e:	nop
  41608f:	nop
  416090:	jmp    QWORD PTR [rip+0xd4a2]        # 0x423538
  416096:	nop
  416097:	nop
  416098:	jmp    QWORD PTR [rip+0xd492]        # 0x423530
  41609e:	nop
  41609f:	nop
  4160a0:	jmp    QWORD PTR [rip+0xd482]        # 0x423528
  4160a6:	nop
  4160a7:	nop
  4160a8:	jmp    QWORD PTR [rip+0xd472]        # 0x423520
  4160ae:	nop
  4160af:	nop
  4160b0:	jmp    QWORD PTR [rip+0xd462]        # 0x423518
  4160b6:	nop
  4160b7:	nop
  4160b8:	jmp    QWORD PTR [rip+0xd44a]        # 0x423508
  4160be:	nop
  4160bf:	nop
  4160c0:	jmp    QWORD PTR [rip+0xd43a]        # 0x423500
  4160c6:	nop
  4160c7:	nop
  4160c8:	jmp    QWORD PTR [rip+0xd42a]        # 0x4234f8
  4160ce:	nop
  4160cf:	nop
  4160d0:	jmp    QWORD PTR [rip+0xd412]        # 0x4234e8
  4160d6:	nop
  4160d7:	nop
  4160d8:	jmp    QWORD PTR [rip+0xd402]        # 0x4234e0
  4160de:	nop
  4160df:	nop
  4160e0:	jmp    QWORD PTR [rip+0xd3ea]        # 0x4234d0
  4160e6:	nop
  4160e7:	nop
  4160e8:	jmp    QWORD PTR [rip+0xd3da]        # 0x4234c8
  4160ee:	nop
  4160ef:	nop
  4160f0:	jmp    QWORD PTR [rip+0xd3c2]        # 0x4234b8
  4160f6:	nop
  4160f7:	nop
  4160f8:	jmp    QWORD PTR [rip+0xd3b2]        # 0x4234b0
  4160fe:	nop
  4160ff:	nop
  416100:	jmp    QWORD PTR [rip+0xd3a2]        # 0x4234a8
  416106:	nop
  416107:	nop
  416108:	nop    DWORD PTR [rax+rax*1+0x0]
  416110:	mov    rax,QWORD PTR [rip+0xb8f9]        # 0x421a10
  416117:	ret    
  416118:	nop    DWORD PTR [rax+rax*1+0x0]
  416120:	mov    rax,rcx
  416123:	xchg   QWORD PTR [rip+0xb8e6],rax        # 0x421a10
  41612a:	ret    
  41612b:	nop
  41612c:	nop
  41612d:	nop
  41612e:	nop
  41612f:	nop
  416130:	mov    eax,DWORD PTR [rip+0xb8ea]        # 0x421a20
  416136:	ret    
  416137:	nop    WORD PTR [rax+rax*1+0x0]
  416140:	mov    eax,ecx
  416142:	xchg   DWORD PTR [rip+0xb8d8],eax        # 0x421a20
  416148:	ret    
  416149:	nop    DWORD PTR [rax+0x0]
  416150:	push   rbx
  416151:	sub    rsp,0x20
  416155:	mov    ebx,ecx
  416157:	lea    rcx,[rip+0x5b22]        # 0x41bc80
  41615e:	call   QWORD PTR [rip+0xd284]        # 0x4233e8
  416164:	lea    rdx,[rip+0x5b2b]        # 0x41bc96
  41616b:	mov    rcx,rax
  41616e:	call   QWORD PTR [rip+0xd27c]        # 0x4233f0
  416174:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x416140
  41617b:	test   rax,rax
  41617e:	mov    ecx,ebx
  416180:	cmove  rax,rdx
  416184:	mov    QWORD PTR [rip+0x161d],rax        # 0x4177a8
  41618b:	add    rsp,0x20
  41618f:	pop    rbx
  416190:	rex.W jmp rax
  416193:	nop    DWORD PTR [rax]
  416196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4161a0:	sub    rsp,0x28
  4161a4:	lea    rcx,[rip+0x5ad5]        # 0x41bc80
  4161ab:	call   QWORD PTR [rip+0xd237]        # 0x4233e8
  4161b1:	lea    rdx,[rip+0x5af1]        # 0x41bca9
  4161b8:	mov    rcx,rax
  4161bb:	call   QWORD PTR [rip+0xd22f]        # 0x4233f0
  4161c1:	lea    rdx,[rip+0xffffffffffffff68]        # 0x416130
  4161c8:	test   rax,rax
  4161cb:	cmove  rax,rdx
  4161cf:	mov    QWORD PTR [rip+0x15ca],rax        # 0x4177a0
  4161d6:	add    rsp,0x28
  4161da:	rex.W jmp rax
  4161dd:	nop    DWORD PTR [rax]
  4161e0:	mov    rax,QWORD PTR [rip+0x15c1]        # 0x4177a8
  4161e7:	rex.W jmp rax
  4161ea:	nop    WORD PTR [rax+rax*1+0x0]
  4161f0:	mov    rax,QWORD PTR [rip+0x15a9]        # 0x4177a0
  4161f7:	rex.W jmp rax
  4161fa:	nop
  4161fb:	nop
  4161fc:	nop
  4161fd:	nop
  4161fe:	nop
  4161ff:	nop
  416200:	jmp    QWORD PTR [rip+0xd28a]        # 0x423490
  416206:	nop
  416207:	nop
  416208:	jmp    QWORD PTR [rip+0xd27a]        # 0x423488
  41620e:	nop
  41620f:	nop
  416210:	jmp    QWORD PTR [rip+0xd26a]        # 0x423480
  416216:	nop
  416217:	nop
  416218:	jmp    QWORD PTR [rip+0xd25a]        # 0x423478
  41621e:	nop
  41621f:	nop
  416220:	jmp    QWORD PTR [rip+0xd24a]        # 0x423470
  416226:	nop
  416227:	nop
  416228:	jmp    QWORD PTR [rip+0xd23a]        # 0x423468
  41622e:	nop
  41622f:	nop
  416230:	jmp    QWORD PTR [rip+0xd21a]        # 0x423450
  416236:	nop
  416237:	nop
  416238:	jmp    QWORD PTR [rip+0xd20a]        # 0x423448
  41623e:	nop
  41623f:	nop
  416240:	jmp    QWORD PTR [rip+0xd1fa]        # 0x423440
  416246:	nop
  416247:	nop
  416248:	jmp    QWORD PTR [rip+0xd1ea]        # 0x423438
  41624e:	nop
  41624f:	nop
  416250:	jmp    QWORD PTR [rip+0xd1da]        # 0x423430
  416256:	nop
  416257:	nop
  416258:	jmp    QWORD PTR [rip+0xd1ca]        # 0x423428
  41625e:	nop
  41625f:	nop
  416260:	jmp    QWORD PTR [rip+0xd1ba]        # 0x423420
  416266:	nop
  416267:	nop
  416268:	jmp    QWORD PTR [rip+0xd1aa]        # 0x423418
  41626e:	nop
  41626f:	nop
  416270:	jmp    QWORD PTR [rip+0xd19a]        # 0x423410
  416276:	nop
  416277:	nop
  416278:	jmp    QWORD PTR [rip+0xd18a]        # 0x423408
  41627e:	nop
  41627f:	nop
  416280:	jmp    QWORD PTR [rip+0xd17a]        # 0x423400
  416286:	nop
  416287:	nop
  416288:	jmp    QWORD PTR [rip+0xd162]        # 0x4233f0
  41628e:	nop
  41628f:	nop
  416290:	jmp    QWORD PTR [rip+0xd152]        # 0x4233e8
  416296:	nop
  416297:	nop
  416298:	jmp    QWORD PTR [rip+0xd13a]        # 0x4233d8
  41629e:	nop
  41629f:	nop
  4162a0:	jmp    QWORD PTR [rip+0xd12a]        # 0x4233d0
  4162a6:	nop
  4162a7:	nop
  4162a8:	jmp    QWORD PTR [rip+0xd11a]        # 0x4233c8
  4162ae:	nop
  4162af:	nop
  4162b0:	jmp    QWORD PTR [rip+0xd10a]        # 0x4233c0
  4162b6:	nop
  4162b7:	nop
  4162b8:	jmp    QWORD PTR [rip+0xd0fa]        # 0x4233b8
  4162be:	nop
  4162bf:	nop
  4162c0:	jmp    QWORD PTR [rip+0xd0ea]        # 0x4233b0
  4162c6:	nop
  4162c7:	nop
  4162c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4162d0:	push   rsi
  4162d1:	push   rbx
  4162d2:	sub    rsp,0x28
  4162d6:	mov    rbx,QWORD PTR [rip+0xb76b]        # 0x421a48
  4162dd:	mov    rsi,rcx
  4162e0:	call   QWORD PTR [rip+0xd1e2]        # 0x4234c8
  4162e6:	lea    rdx,[rip+0x1d13]        # 0x418000
  4162ed:	lea    rcx,[rax+0x60]
  4162f1:	mov    r9,rsi
  4162f4:	mov    r8,rbx
  4162f7:	call   0x401540
  4162fc:	mov    ecx,0x3
  416301:	call   0x416058
  416306:	nop
  416307:	nop
  416308:	nop
  416309:	nop
  41630a:	nop
  41630b:	nop
  41630c:	nop
  41630d:	nop
  41630e:	nop
  41630f:	nop
  416310:	push   r15
  416312:	push   r14
  416314:	push   r13
  416316:	push   r12
  416318:	push   rbp
  416319:	push   rdi
  41631a:	push   rsi
  41631b:	push   rbx
  41631c:	sub    rsp,0x78
  416320:	lea    rdi,[rip+0x4435]        # 0x41a75c
  416327:	mov    rbx,rdx
  41632a:	mov    r13d,ecx
  41632d:	call   0x40b840
  416332:	mov    rcx,QWORD PTR [rip+0x1107]        # 0x417440
  416339:	mov    QWORD PTR [rsp+0x60],0x0
  416342:	mov    QWORD PTR [rsp+0x68],0x0
  41634b:	mov    DWORD PTR [rsp+0x4c],0x0
  416353:	mov    DWORD PTR [rsp+0x50],0x0
  41635b:	mov    DWORD PTR [rsp+0x54],0x0
  416363:	mov    DWORD PTR [rsp+0x58],0x0
  41636b:	mov    DWORD PTR [rsp+0x5c],0x0
  416373:	call   0x415f68
  416378:	mov    rcx,QWORD PTR [rip+0x10b9]        # 0x417438
  41637f:	mov    ebp,eax
  416381:	call   0x415f68
  416386:	mov    QWORD PTR [rip+0xbf5f],0x0        # 0x4222f0
  416391:	mov    rcx,QWORD PTR [rbx]
  416394:	mov    r12d,eax
  416397:	mov    DWORD PTR [rip+0xbf5b],0x8        # 0x4222fc
  4163a1:	mov    DWORD PTR [rip+0xbf55],0x67        # 0x422300
  4163ab:	mov    DWORD PTR [rip+0xbf73],0x0        # 0x422328
  4163b5:	mov    DWORD PTR [rip+0xbf79],0x0        # 0x422338
  4163bf:	mov    DWORD PTR [rip+0xbf73],0x1        # 0x42233c
  4163c9:	mov    DWORD PTR [rip+0xbf59],0x0        # 0x42232c
  4163d3:	mov    DWORD PTR [rip+0xbf57],0x0        # 0x422334
  4163dd:	mov    DWORD PTR [rip+0xbf39],0x1        # 0x422320
  4163e7:	mov    DWORD PTR [rip+0xbf33],0x0        # 0x422324
  4163f1:	mov    DWORD PTR [rip+0xbf35],0x0        # 0x422330
  4163fb:	mov    DWORD PTR [rip+0xb74f],0x1        # 0x421b54
  416405:	mov    DWORD PTR [rip+0xb741],0x0        # 0x421b50
  41640f:	call   0x409980
  416414:	mov    QWORD PTR [rip+0xb62d],rax        # 0x421a48
  41641b:	call   0x409860
  416420:	mov    rsi,QWORD PTR [rip+0x1029]        # 0x417450
  416427:	mov    ecx,0x7
  41642c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41642e:	jne    0x41643e
  416430:	lea    rax,[rip+0x432c]        # 0x41a763
  416437:	mov    QWORD PTR [rip+0x1012],rax        # 0x417450
  41643e:	call   0x409a20
  416443:	mov    rax,QWORD PTR [rip+0x5b26]        # 0x41bf70
  41644a:	lea    rdi,[rip+0xfffffffffffeb7cf]        # 0x401c20
  416451:	lea    rsi,[rsp+0x60]
  416456:	mov    ecx,r13d
  416459:	mov    rdx,rbx
  41645c:	mov    QWORD PTR [rip+0xb619],0x0        # 0x421a80
  416467:	mov    r8,rsi
  41646a:	mov    QWORD PTR [rax],rdi
  41646d:	mov    rax,QWORD PTR [rip+0x5aec]        # 0x41bf60
  416474:	lea    rdi,[rip+0x42f6]        # 0x41a771
  41647b:	mov    QWORD PTR [rax],rdi
  41647e:	lea    rdi,[rsp+0x68]
  416483:	mov    r9,rdi
  416486:	call   0x408350
  41648b:	cmp    QWORD PTR [rip+0xbe5d],0x0        # 0x4222f0
  416493:	mov    r13d,eax
  416496:	je     0x4165a5
  41649c:	call   0x406790
  4164a1:	test   eax,eax
  4164a3:	jne    0x41659b
  4164a9:	mov    edx,DWORD PTR [rip+0xbe8d]        # 0x42233c
  4164af:	test   edx,edx
  4164b1:	jne    0x4164c1
  4164b3:	lea    rax,[rip+0x1bbb]        # 0x418075
  4164ba:	mov    QWORD PTR [rip+0xf6f],rax        # 0x417430
  4164c1:	cmp    QWORD PTR [rip+0xb5b7],0x0        # 0x421a80
  4164c9:	je     0x416991
  4164cf:	lea    rax,[rsp+0x58]
  4164d4:	mov    rbx,QWORD PTR [rip+0xcfed]        # 0x4234c8
  4164db:	lea    r15,[rip+0xb59e]        # 0x421a80
  4164e2:	lea    r14,[rsp+0x5c]
  4164e7:	mov    QWORD PTR [rsp+0x38],rax
  4164ec:	lea    rax,[rsp+0x54]
  4164f1:	mov    QWORD PTR [rsp+0x30],rax
  4164f6:	call   rbx
  4164f8:	mov    DWORD PTR [rsp+0x28],0x0
  416500:	mov    QWORD PTR [rsp+0x20],r14
  416505:	lea    rdx,[rax+0x60]
  416509:	mov    r9,QWORD PTR [rsp+0x38]
  41650e:	mov    r8,QWORD PTR [rsp+0x30]
  416513:	mov    rcx,QWORD PTR [r15]
  416516:	call   0x403b20
  41651b:	cmp    eax,0x12
  41651e:	je     0x416987
  416524:	cmp    eax,0x10
  416527:	je     0x416572
  416529:	add    r15,0x8
  41652d:	cmp    QWORD PTR [r15],0x0
  416531:	jne    0x4164f6
  416533:	mov    eax,DWORD PTR [rip+0xbdef]        # 0x422328
  416539:	test   eax,eax
  41653b:	je     0x416968
  416541:	xor    r12d,r12d
  416544:	xor    ebp,ebp
  416546:	mov    eax,DWORD PTR [rip+0xbdec]        # 0x422338
  41654c:	test   eax,eax
  41654e:	je     0x4165af
  416550:	cmp    eax,0x2
  416553:	mov    ecx,0x1
  416558:	je     0x416566
  41655a:	xor    ecx,ecx
  41655c:	cmp    DWORD PTR [rip+0xbdd9],0x2        # 0x42233c
  416563:	sete   cl
  416566:	call   0x408c90
  41656b:	xor    ecx,ecx
  41656d:	call   0x416058
  416572:	mov    rdi,QWORD PTR [r15]
  416575:	mov    rsi,QWORD PTR [rip+0xb4cc]        # 0x421a48
  41657c:	call   rbx
  41657e:	lea    rdx,[rip+0x41fb]        # 0x41a780
  416585:	lea    rcx,[rax+0x60]
  416589:	mov    r9,rdi
  41658c:	mov    r8,rsi
  41658f:	call   0x401540
  416594:	xor    ecx,ecx
  416596:	call   0x415fd8
  41659b:	mov    ecx,0x1
  4165a0:	call   0x416058
  4165a5:	call   0x4066d0
  4165aa:	jmp    0x4164a9
  4165af:	test   r13d,r13d
  4165b2:	jne    0x4165ef
  4165b4:	mov    rcx,QWORD PTR [rsp+0x60]
  4165b9:	call   0x4016c0
  4165be:	mov    rcx,QWORD PTR [rsp+0x68]
  4165c3:	test   rcx,rcx
  4165c6:	je     0x4165cd
  4165c8:	call   0x4016c0
  4165cd:	mov    rcx,QWORD PTR [rsp+0x60]
  4165d2:	call   0x402220
  4165d7:	test   rax,rax
  4165da:	je     0x4167ca
  4165e0:	mov    rcx,rax
  4165e3:	call   0x4060b0
  4165e8:	xor    ecx,ecx
  4165ea:	call   0x416058
  4165ef:	lea    rcx,[rip+0x41de]        # 0x41a7d4
  4165f6:	lea    r13,[rsp+0x4c]
  4165fb:	lea    r14,[rsp+0x50]
  416600:	call   0x416000
  416605:	lea    rdx,[rip+0x41ce]        # 0x41a7da
  41660c:	test   rax,rax
  41660f:	mov    rbx,QWORD PTR [rip+0xceb2]        # 0x4234c8
  416616:	cmove  rax,rdx
  41661a:	mov    QWORD PTR [rip+0xb95f],rax        # 0x421f80
  416621:	call   rbx
  416623:	lea    rcx,[rax+0x30]
  416627:	call   0x416040
  41662c:	mov    r8,QWORD PTR [rip+0xe0d]        # 0x417440
  416633:	mov    rdx,r13
  416636:	mov    rcx,rsi
  416639:	call   0x407e00
  41663e:	mov    rcx,QWORD PTR [rsp+0x60]
  416643:	call   0x4016c0
  416648:	mov    r15,QWORD PTR [rsp+0x60]
  41664d:	mov    rcx,r15
  416650:	call   0x4022b0
  416655:	test   eax,eax
  416657:	jne    0x416621
  416659:	xor    edx,edx
  41665b:	mov    rcx,r15
  41665e:	call   0x4095a0
  416663:	test   eax,eax
  416665:	jne    0x416621
  416667:	mov    rcx,QWORD PTR [rsp+0x60]
  41666c:	call   0x402220
  416671:	test   rax,rax
  416674:	je     0x416697
  416676:	mov    rcx,QWORD PTR [rsp+0x60]
  41667b:	call   0x402140
  416680:	mov    rcx,rax
  416683:	call   0x401ff0
  416688:	test   rax,rax
  41668b:	je     0x4166d0
  41668d:	mov    rcx,rax
  416690:	call   0x406200
  416695:	jmp    0x416621
  416697:	mov    rcx,QWORD PTR [rsp+0x60]
  41669c:	call   0x402140
  4166a1:	mov    rcx,rax
  4166a4:	call   0x401ff0
  4166a9:	test   rax,rax
  4166ac:	jne    0x416676
  4166ae:	mov    rdx,QWORD PTR [rsp+0x60]
  4166b3:	lea    rcx,[rip+0x9046]        # 0x41f700
  4166ba:	mov    r8d,ebp
  4166bd:	call   0x4086f0
  4166c2:	test   eax,eax
  4166c4:	jne    0x416621
  4166ca:	jmp    0x416676
  4166cc:	nop    DWORD PTR [rax+0x0]
  4166d0:	mov    rcx,QWORD PTR [rsp+0x60]
  4166d5:	call   0x402220
  4166da:	test   rax,rax
  4166dd:	je     0x416708
  4166df:	mov    rcx,rax
  4166e2:	call   0x4060b0
  4166e7:	jmp    0x416621
  4166ec:	nop    DWORD PTR [rax+0x0]
  4166f0:	mov    r8,QWORD PTR [rsp+0x60]
  4166f5:	mov    rdx,QWORD PTR [rip+0xd44]        # 0x417440
  4166fc:	lea    rcx,[rip+0x40dc]        # 0x41a7df
  416703:	call   0x401590
  416708:	call   rbx
  41670a:	lea    rcx,[rax+0x30]
  41670e:	call   0x416040
  416713:	mov    r8,QWORD PTR [rip+0xd1e]        # 0x417438
  41671a:	mov    rdx,r14
  41671d:	mov    rcx,rdi
  416720:	call   0x407e00
  416725:	mov    rcx,QWORD PTR [rsp+0x68]
  41672a:	call   0x4016c0
  41672f:	mov    rcx,QWORD PTR [rsp+0x68]
  416734:	lea    rdx,[rip+0x8fc5]        # 0x41f700
  41673b:	call   0x4095a0
  416740:	test   eax,eax
  416742:	jne    0x4166f0
  416744:	mov    rdx,r14
  416747:	mov    rcx,rdi
  41674a:	call   0x4098e0
  41674f:	test   eax,eax
  416751:	jne    0x416708
  416753:	mov    rcx,QWORD PTR [rsp+0x68]
  416758:	call   0x402220
  41675d:	test   rax,rax
  416760:	jne    0x41677a
  416762:	mov    rdx,QWORD PTR [rsp+0x68]
  416767:	lea    rcx,[rip+0x8912]        # 0x41f080
  41676e:	mov    r8d,r12d
  416771:	call   0x408b70
  416776:	test   eax,eax
  416778:	jne    0x416708
  41677a:	mov    r15,QWORD PTR [rsp+0x68]
  41677f:	mov    rcx,r15
  416782:	call   0x4022b0
  416787:	test   eax,eax
  416789:	jne    0x416889
  41678f:	mov    edx,0x3b
  416794:	mov    rcx,r15
  416797:	call   0x415f90
  41679c:	test   rax,rax
  41679f:	je     0x416863
  4167a5:	mov    rcx,QWORD PTR [rsp+0x60]
  4167aa:	lea    rdx,[rip+0x8f4f]        # 0x41f700
  4167b1:	mov    r8,r15
  4167b4:	call   0x408f90
  4167b9:	lea    rcx,[rip+0x8f40]        # 0x41f700
  4167c0:	call   0x404a30
  4167c5:	jmp    0x416621
  4167ca:	mov    rcx,QWORD PTR [rsp+0x60]
  4167cf:	call   0x402140
  4167d4:	mov    rcx,rax
  4167d7:	call   0x401ff0
  4167dc:	test   rax,rax
  4167df:	je     0x4167f0
  4167e1:	mov    rcx,rax
  4167e4:	call   0x406200
  4167e9:	xor    ecx,ecx
  4167eb:	call   0x416058
  4167f0:	mov    rdx,QWORD PTR [rsp+0x60]
  4167f5:	lea    rcx,[rip+0x8f04]        # 0x41f700
  4167fc:	mov    r8d,0xffffffff
  416802:	call   0x4086f0
  416807:	test   eax,eax
  416809:	jne    0x41659b
  41680f:	cmp    QWORD PTR [rsp+0x68],0x0
  416815:	je     0x41692b
  41681b:	xor    edx,edx
  41681d:	mov    rcx,rdi
  416820:	call   0x4098e0
  416825:	test   eax,eax
  416827:	jne    0x41659b
  41682d:	mov    rcx,QWORD PTR [rsp+0x68]
  416832:	call   0x402220
  416837:	test   rax,rax
  41683a:	mov    r8,rax
  41683d:	je     0x4168cd
  416843:	mov    rcx,QWORD PTR [rsp+0x60]
  416848:	lea    rdx,[rip+0x8eb1]        # 0x41f700
  41684f:	call   0x406250
  416854:	test   eax,eax
  416856:	jne    0x41659b
  41685c:	xor    ecx,ecx
  41685e:	call   0x416058
  416863:	mov    rcx,r15
  416866:	call   0x402220
  41686b:	test   rax,rax
  41686e:	mov    r8,rax
  416871:	je     0x41689f
  416873:	mov    rcx,QWORD PTR [rsp+0x60]
  416878:	lea    rdx,[rip+0x8e81]        # 0x41f700
  41687f:	call   0x406250
  416884:	jmp    0x4167b9
  416889:	mov    rcx,QWORD PTR [rsp+0x60]
  41688e:	lea    rdx,[rip+0x8e6b]        # 0x41f700
  416895:	call   0x405fe0
  41689a:	jmp    0x4167b9
  41689f:	mov    rcx,QWORD PTR [rsp+0x60]
  4168a4:	mov    r8,QWORD PTR [rsp+0x68]
  4168a9:	lea    r9,[rip+0x87d0]        # 0x41f080
  4168b0:	lea    rdx,[rip+0x8e49]        # 0x41f700
  4168b7:	call   0x407180
  4168bc:	lea    rcx,[rip+0x87bd]        # 0x41f080
  4168c3:	call   0x404a30
  4168c8:	jmp    0x4167b9
  4168cd:	mov    rdx,QWORD PTR [rsp+0x68]
  4168d2:	lea    rcx,[rip+0x87a7]        # 0x41f080
  4168d9:	mov    r8d,0xffffffff
  4168df:	call   0x408b70
  4168e4:	test   eax,eax
  4168e6:	jne    0x41659b
  4168ec:	mov    r8,QWORD PTR [rsp+0x68]
  4168f1:	mov    edx,0x3b
  4168f6:	mov    rcx,r8
  4168f9:	mov    QWORD PTR [rsp+0x30],r8
  4168fe:	call   0x415f90
  416903:	test   rax,rax
  416906:	mov    r8,QWORD PTR [rsp+0x30]
  41690b:	je     0x416943
  41690d:	mov    rcx,QWORD PTR [rsp+0x60]
  416912:	lea    rdx,[rip+0x8de7]        # 0x41f700
  416919:	call   0x408f90
  41691e:	test   eax,eax
  416920:	jne    0x41659b
  416926:	jmp    0x41685c
  41692b:	mov    rcx,QWORD PTR [rsp+0x60]
  416930:	lea    rdx,[rip+0x8dc9]        # 0x41f700
  416937:	call   0x405fe0
  41693c:	xor    ecx,ecx
  41693e:	call   0x416058
  416943:	mov    rcx,QWORD PTR [rsp+0x60]
  416948:	lea    r9,[rip+0x8731]        # 0x41f080
  41694f:	lea    rdx,[rip+0x8daa]        # 0x41f700
  416956:	call   0x407180
  41695b:	test   eax,eax
  41695d:	jne    0x41659b
  416963:	jmp    0x41685c
  416968:	mov    r9d,DWORD PTR [rsp+0x5c]
  41696d:	mov    r8d,DWORD PTR [rsp+0x58]
  416972:	lea    rcx,[rip+0x3e2f]        # 0x41a7a8
  416979:	mov    edx,DWORD PTR [rsp+0x54]
  41697d:	call   0x401590
  416982:	jmp    0x416546
  416987:	mov    ecx,0x3
  41698c:	call   0x416058
  416991:	call   0x407e70
  416996:	xor    ecx,ecx
  416998:	mov    QWORD PTR [rip+0xb0e1],rax        # 0x421a80
  41699f:	call   0x4080d0
  4169a4:	cmp    QWORD PTR [rip+0xb0d4],0x0        # 0x421a80
  4169ac:	mov    QWORD PTR [rip+0xb0d5],rax        # 0x421a88
  4169b3:	mov    QWORD PTR [rip+0xb0d2],0x0        # 0x421a90
  4169be:	jne    0x4164cf
  4169c4:	jmp    0x416533
  4169c9:	nop
  4169ca:	nop
  4169cb:	nop
  4169cc:	nop
  4169cd:	nop
  4169ce:	nop
  4169cf:	nop
  4169d0:	(bad)  
  4169d1:	(bad)  
  4169d2:	(bad)  
  4169d3:	(bad)  
  4169d4:	(bad)  
  4169d5:	(bad)  
  4169d6:	(bad)  
  4169d7:	inc    DWORD PTR [rax]
  4169d9:	add    BYTE PTR [rax],al
  4169db:	add    BYTE PTR [rax],al
  4169dd:	add    BYTE PTR [rax],al
  4169df:	add    bh,bh
  4169e1:	(bad)  
  4169e2:	(bad)  
  4169e3:	(bad)  
  4169e4:	(bad)  
  4169e5:	(bad)  
  4169e6:	(bad)  
  4169e7:	inc    DWORD PTR [rax]
  4169e9:	add    BYTE PTR [rax],al
  4169eb:	add    BYTE PTR [rax],al
  4169ed:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000417000 <.data>:
  417000:	or     al,BYTE PTR [rax]
	...
  41703e:	add    BYTE PTR [rax],al
  417040:	in     eax,0xa7
  417042:	add    BYTE PTR [r8],al
	...
  417055:	add    BYTE PTR [rax],al
  417057:	add    BYTE PTR [rsi+0x0],dl
  41705a:	add    BYTE PTR [rax],al
  41705c:	add    BYTE PTR [rax],al
  41705e:	add    BYTE PTR [rax],al
  417060:	in     eax,dx
  417061:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  417062:	add    BYTE PTR [r8],al
	...
  41706d:	add    BYTE PTR [rax],al
  41706f:	add    BYTE PTR [rax],ch
  417071:	and    eax,DWORD PTR [rdx+0x0]
  417074:	add    BYTE PTR [rax],al
  417076:	add    BYTE PTR [rax],al
  417078:	add    DWORD PTR [rax],eax
  41707a:	add    BYTE PTR [rax],al
  41707c:	add    BYTE PTR [rax],al
  41707e:	add    BYTE PTR [rax],al
  417080:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  417082:	add    BYTE PTR [r8],al
	...
  41708d:	add    BYTE PTR [rax],al
  41708f:	add    BYTE PTR [rax],ch
  417091:	and    eax,DWORD PTR [rdx+0x0]
  417094:	add    BYTE PTR [rax],al
  417096:	add    BYTE PTR [rax],al
  417098:	add    DWORD PTR [rax],eax
  41709a:	add    BYTE PTR [rax],al
  41709c:	add    BYTE PTR [rax],al
  41709e:	add    BYTE PTR [rax],al
  4170a0:	cli    
  4170a1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4170a2:	add    BYTE PTR [r8],al
	...
  4170b5:	add    BYTE PTR [rax],al
  4170b7:	add    BYTE PTR [rbp+0x0],ah
  4170ba:	add    BYTE PTR [rax],al
  4170bc:	add    BYTE PTR [rax],al
  4170be:	add    BYTE PTR [rax],al
  4170c0:	(bad)  
  4170c1:	test   al,0x41
  4170c3:	add    BYTE PTR [rax],al
  4170c5:	add    BYTE PTR [rax],al
  4170c7:	add    BYTE PTR [rcx],al
	...
  4170d5:	add    BYTE PTR [rax],al
  4170d7:	add    BYTE PTR [rax+rax*1+0x0],ah
  4170db:	add    BYTE PTR [rax],al
  4170dd:	add    BYTE PTR [rax],al
  4170df:	add    BYTE PTR [rip+0x41a8],cl        # 0x41b28d
  4170e5:	add    BYTE PTR [rax],al
  4170e7:	add    BYTE PTR [rcx],al
	...
  4170f5:	add    BYTE PTR [rax],al
  4170f7:	add    BYTE PTR [rdi+0x0],ch
  4170fa:	add    BYTE PTR [rax],al
  4170fc:	add    BYTE PTR [rax],al
  4170fe:	add    BYTE PTR [rax],al
  417100:	sbb    ebp,DWORD PTR [rax+0x41]
	...
  41710e:	add    BYTE PTR [rax],al
  417110:	cmp    BYTE PTR [rbx],ah
  417112:	rex.X add BYTE PTR [rax],al
  417115:	add    BYTE PTR [rax],al
  417117:	add    BYTE PTR [rcx],al
  417119:	add    BYTE PTR [rax],al
  41711b:	add    BYTE PTR [rax],al
  41711d:	add    BYTE PTR [rax],al
  41711f:	add    BYTE PTR [rcx],ah
  417121:	test   al,0x41
	...
  41712f:	add    BYTE PTR [rax],bh
  417131:	and    eax,DWORD PTR [rdx+0x0]
  417134:	add    BYTE PTR [rax],al
  417136:	add    BYTE PTR [rax],al
  417138:	add    al,BYTE PTR [rax]
  41713a:	add    BYTE PTR [rax],al
  41713c:	add    BYTE PTR [rax],al
  41713e:	add    BYTE PTR [rax],al
  417140:	(bad)  
  417141:	test   al,0x41
	...
  41714f:	add    BYTE PTR [rax],bh
  417151:	and    eax,DWORD PTR [rdx+0x0]
  417154:	add    BYTE PTR [rax],al
  417156:	add    BYTE PTR [rax],al
  417158:	add    al,BYTE PTR [rax]
  41715a:	add    BYTE PTR [rax],al
  41715c:	add    BYTE PTR [rax],al
  41715e:	add    BYTE PTR [rax],al
  417160:	cmp    eax,0x41a8
	...
  41716d:	add    BYTE PTR [rax],al
  41716f:	add    BYTE PTR [rbx+riz*1],bh
  417172:	rex.X add BYTE PTR [rax],al
  417175:	add    BYTE PTR [rax],al
  417177:	add    BYTE PTR [rdx],al
  417179:	add    BYTE PTR [rax],al
  41717b:	add    BYTE PTR [rax],al
  41717d:	add    BYTE PTR [rax],al
  41717f:	add    BYTE PTR [rbp-0x58],al
  417182:	add    BYTE PTR [r8],al
  417185:	add    BYTE PTR [rax],al
  417187:	add    BYTE PTR [rcx],al
	...
  417195:	add    BYTE PTR [rax],al
  417197:	add    BYTE PTR [rsi+0x0],ah
  41719a:	add    BYTE PTR [rax],al
  41719c:	add    BYTE PTR [rax],al
  41719e:	add    BYTE PTR [rax],al
  4171a0:	sbb    BYTE PTR [rcx+0x41],ah
	...
  4171b6:	add    BYTE PTR [rax],al
  4171b8:	push   0x0
  4171bd:	add    BYTE PTR [rax],al
  4171bf:	add    BYTE PTR [rdx-0x58],cl
  4171c2:	add    BYTE PTR [r8],al
	...
  4171cd:	add    BYTE PTR [rax],al
  4171cf:	add    BYTE PTR [rbx+riz*1],dh
  4171d2:	rex.X add BYTE PTR [rax],al
  4171d5:	add    BYTE PTR [rax],al
  4171d7:	add    BYTE PTR [rcx],al
  4171d9:	add    BYTE PTR [rax],al
  4171db:	add    BYTE PTR [rax],al
  4171dd:	add    BYTE PTR [rax],al
  4171df:	add    BYTE PTR [rcx-0x58],dl
  4171e2:	add    BYTE PTR [r8],al
	...
  4171f5:	add    BYTE PTR [rax],al
  4171f7:	add    BYTE PTR [rax+rax*1+0x0],dh
  4171fb:	add    BYTE PTR [rax],al
  4171fd:	add    BYTE PTR [rax],al
  4171ff:	add    BYTE PTR [rdi-0x58],dl
  417202:	add    BYTE PTR [r8],al
	...
  417215:	add    BYTE PTR [rax],al
  417217:	add    BYTE PTR [rdx+0x0],dh
  41721a:	add    BYTE PTR [rax],al
  41721c:	add    BYTE PTR [rax],al
  41721e:	add    BYTE PTR [rax],al
  417220:	pop    rbp
  417221:	test   al,0x41
	...
  41722f:	add    BYTE PTR [rbx+riz*1],bh
  417232:	rex.X add BYTE PTR [rax],al
	...
  41723d:	add    BYTE PTR [rax],al
  41723f:	add    BYTE PTR [rbp-0x58],ah
  417242:	add    BYTE PTR [r8],al
	...
  41724d:	add    BYTE PTR [rax],al
  41724f:	add    BYTE PTR [rbx+rbx*1+0x42],dl
  417253:	add    BYTE PTR [rax],al
  417255:	add    BYTE PTR [rax],al
  417257:	add    BYTE PTR [rcx],al
  417259:	add    BYTE PTR [rax],al
  41725b:	add    BYTE PTR [rax],al
  41725d:	add    BYTE PTR [rax],al
  41725f:	add    BYTE PTR [rbx-0x58],ch
  417262:	add    BYTE PTR [r8],al
	...
  417275:	add    BYTE PTR [rax],al
  417277:	add    BYTE PTR [rsi+0x0],ch
  41727a:	add    BYTE PTR [rax],al
  41727c:	add    BYTE PTR [rax],al
  41727e:	add    BYTE PTR [rax],al
  417280:	jae    0x41722a
  417282:	add    BYTE PTR [r8],al
	...
  417295:	add    BYTE PTR [rax],al
  417297:	add    BYTE PTR [rbx+0x0],dl
  41729a:	add    BYTE PTR [rax],al
  41729c:	add    BYTE PTR [rax],al
  41729e:	add    BYTE PTR [rax],al
  4172a0:	jg     0x41724a
  4172a2:	add    BYTE PTR [r8],al
	...
  4172ad:	add    BYTE PTR [rax],al
  4172af:	add    BYTE PTR [rbx+rbx*1+0x42],dl
	...
  4172bf:	add    BYTE PTR [rdi+0x41a8],al
	...
  4172cd:	add    BYTE PTR [rax],al
  4172cf:	add    BYTE PTR [rbx+riz*1],ah
  4172d2:	rex.X add BYTE PTR [rax],al
  4172d5:	add    BYTE PTR [rax],al
  4172d7:	add    BYTE PTR [rcx],al
  4172d9:	add    BYTE PTR [rax],al
  4172db:	add    BYTE PTR [rax],al
  4172dd:	add    BYTE PTR [rax],al
  4172df:	add    BYTE PTR [rax+0x41a8],dl
	...
  4172ed:	add    BYTE PTR [rax],al
  4172ef:	add    BYTE PTR [rax+0x1b],dl
  4172f2:	rex.X add BYTE PTR [rax],al
  4172f5:	add    BYTE PTR [rax],al
  4172f7:	add    BYTE PTR [rcx],al
  4172f9:	add    BYTE PTR [rax],al
  4172fb:	add    BYTE PTR [rax],al
  4172fd:	add    BYTE PTR [rax],al
  4172ff:	add    BYTE PTR [rax+0x41a8],bl
	...
  41730d:	add    BYTE PTR [rax],al
  41730f:	add    BYTE PTR [rax+0x1b],dl
  417312:	rex.X add BYTE PTR [rax],al
	...
  41731d:	add    BYTE PTR [rax],al
  41731f:	add    BYTE PTR [rdx],dl
  417321:	mov    DWORD PTR [rcx+0x0],eax
  417324:	add    BYTE PTR [rax],al
  417326:	add    BYTE PTR [rax],al
  417328:	add    DWORD PTR [rax],eax
	...
  417336:	add    BYTE PTR [rax],al
  417338:	ins    BYTE PTR es:[rdi],dx
	...
  41735d:	add    BYTE PTR [rax],al
  41735f:	add    BYTE PTR [rax+0x41a8],ah
  417365:	add    BYTE PTR [rax],al
  417367:	add    BYTE PTR [rbp-0x80],dh
  41736a:	add    BYTE PTR [r8],al
  41736d:	add    BYTE PTR [rax],al
  41736f:	add    BYTE PTR [rdi+0x41a8],dh
	...
  41737d:	add    BYTE PTR [rax],al
  41737f:	add    cl,dl
  417381:	test   al,0x41
  417383:	add    BYTE PTR [rax],al
  417385:	add    BYTE PTR [rax],al
  417387:	add    bh,ah
  417389:	test   al,0x41
  41738b:	add    BYTE PTR [rax],al
  41738d:	add    BYTE PTR [rax],al
  41738f:	add    bl,dh
  417391:	test   al,0x41
  417393:	add    BYTE PTR [rax],al
  417395:	add    BYTE PTR [rax],al
  417397:	add    BYTE PTR [rax],cl
  417399:	test   eax,0x41
  41739e:	add    BYTE PTR [rax],al
  4173a0:	cmp    BYTE PTR [rcx+0x41],ch
  4173a6:	add    BYTE PTR [rax],al
  4173a8:	imul   ebp,DWORD PTR [rcx+0x41],0x0
  4173af:	add    BYTE PTR [rdx+0x41a9],al
  4173b5:	add    BYTE PTR [rax],al
  4173b7:	add    BYTE PTR [rdx+0x41a9],dl
  4173bd:	add    BYTE PTR [rax],al
  4173bf:	add    BYTE PTR [rdi+0x41a9],bl
  4173c5:	add    BYTE PTR [rax],al
  4173c7:	add    BYTE PTR [rax+0x41a9],dh
  4173cd:	add    BYTE PTR [rax],al
  4173cf:	add    al,ah
  4173d1:	test   eax,0x41
  4173d6:	add    BYTE PTR [rax],al
  4173d8:	or     BYTE PTR [rdx+0x41],ch
  4173de:	add    BYTE PTR [rax],al
  4173e0:	xor    BYTE PTR [rdx+0x41],ch
  4173e6:	add    BYTE PTR [rax],al
  4173e8:	pop    rcx
  4173e9:	stos   BYTE PTR es:[rdi],al
  4173ea:	add    BYTE PTR [r8],al
  4173ed:	add    BYTE PTR [rax],al
  4173ef:	add    BYTE PTR [rax-0x56],dh
  4173f2:	add    BYTE PTR [r8],al
  4173f5:	add    BYTE PTR [rax],al
  4173f7:	add    BYTE PTR [rax+0x41aa],ch
  4173fd:	add    BYTE PTR [rax],al
  4173ff:	add    dl,ah
  417401:	stos   BYTE PTR es:[rdi],al
  417402:	add    BYTE PTR [r8],al
  417405:	add    BYTE PTR [rax],al
  417407:	add    ah,bh
  417409:	stos   BYTE PTR es:[rdi],al
  41740a:	add    BYTE PTR [r8],al
  41740d:	add    BYTE PTR [rax],al
  41740f:	add    BYTE PTR [rdi],dl
  417411:	stos   DWORD PTR es:[rdi],eax
  417412:	add    BYTE PTR [r8],al
  417415:	add    BYTE PTR [rax],al
  417417:	add    BYTE PTR [rdi],ch
  417419:	stos   DWORD PTR es:[rdi],eax
  41741a:	add    BYTE PTR [r8],al
  41741d:	add    BYTE PTR [rax],al
  41741f:	add    BYTE PTR [rax-0x55],al
  417422:	add    BYTE PTR [r8],al
  417425:	add    BYTE PTR [rax],al
  417427:	add    BYTE PTR [rax-0x55],bh
  41742a:	add    BYTE PTR [r8],al
  41742d:	add    BYTE PTR [rax],al
  41742f:	add    BYTE PTR [rbp+0x41ab],al
  417435:	add    BYTE PTR [rax],al
  417437:	add    BYTE PTR [rbx+0x41ab],dl
  41743d:	add    BYTE PTR [rax],al
  41743f:	add    BYTE PTR [rsi+0x41ab],bl
  417445:	add    BYTE PTR [rax],al
  417447:	add    BYTE PTR [rsi+rbx*4+0x41],bl
  41744b:	add    BYTE PTR [rax],al
  41744d:	add    BYTE PTR [rax],al
  41744f:	add    BYTE PTR [rdi+riz*4+0x41],bl
	...
  41747f:	add    BYTE PTR [rcx+0x41ab],ch
  417485:	add    BYTE PTR [rax],al
  417487:	add    BYTE PTR [rbx],bh
  417489:	add    BYTE PTR [rax],al
  41748b:	add    BYTE PTR [rax],al
  41748d:	add    BYTE PTR [rax],al
  41748f:	add    BYTE PTR [rax+0x41ab],dh
  417495:	add    BYTE PTR [rax],al
  417497:	add    BYTE PTR [rax+rax*1],ch
  41749a:	add    BYTE PTR [rax],al
  41749c:	add    BYTE PTR [rax],al
  41749e:	add    BYTE PTR [rax],al
  4174a0:	mov    eax,0x41ab
  4174a5:	add    BYTE PTR [rax],al
  4174a7:	add    BYTE PTR [rax+rax*1],ch
	...
  4174be:	add    BYTE PTR [rax],al
  4174c0:	adc    al,0xad
  4174c2:	add    BYTE PTR [r8],al
  4174c5:	add    BYTE PTR [rax],al
  4174c7:	add    BYTE PTR [rbx],cl
  4174c9:	add    DWORD PTR [rax],eax
  4174cb:	add    BYTE PTR [rax],al
  4174cd:	add    BYTE PTR [rax],al
  4174cf:	add    BYTE PTR [rcx],bl
  4174d1:	lods   eax,DWORD PTR ds:[rsi]
  4174d2:	add    BYTE PTR [r8],al
  4174d5:	add    BYTE PTR [rax],al
  4174d7:	add    BYTE PTR [rcx+rax*1],cl
  4174da:	add    BYTE PTR [rax],al
  4174dc:	add    BYTE PTR [rax],al
  4174de:	add    BYTE PTR [rax],al
  4174e0:	and    ch,BYTE PTR [rbp+0x41]
  4174e6:	add    BYTE PTR [rax],al
  4174e8:	or     DWORD PTR [rcx],eax
	...
  4174fe:	add    BYTE PTR [rax],al
  417500:	sub    al,BYTE PTR [rax]
  417502:	add    BYTE PTR [rax],al
  417504:	(bad)  
  417505:	add    DWORD PTR [rax],eax
  417507:	add    BYTE PTR [rdi],ch
  417509:	add    BYTE PTR [rax],al
  41750b:	add    BYTE PTR [rcx],cl
  41750d:	add    DWORD PTR [rax],eax
  41750f:	add    BYTE PTR [rax+rax*1+0x0],bh
  417513:	add    BYTE PTR [rdx],cl
  417515:	add    DWORD PTR [rax],eax
  417517:	add    BYTE PTR [rbx],ch
  417519:	add    BYTE PTR [rax],al
  41751b:	add    BYTE PTR [rcx+rax*1],dl
  41751e:	add    BYTE PTR [rax],al
  417520:	sub    BYTE PTR [rax],al
  417522:	add    BYTE PTR [rax],al
  417524:	sub    BYTE PTR [rax],al
  417526:	add    BYTE PTR [rax],al
  417528:	sub    DWORD PTR [rax],eax
  41752a:	add    BYTE PTR [rax],al
  41752c:	sub    DWORD PTR [rax],eax
  41752e:	add    BYTE PTR [rax],al
  417530:	pop    rsi
  417531:	add    BYTE PTR [rax],al
  417533:	add    BYTE PTR [rsi],al
  417535:	add    DWORD PTR [rax],eax
  417537:	add    BYTE PTR [rsi+0x0],bh
  41753a:	add    BYTE PTR [rax],al
  41753c:	sgdt   [rax]
	...
  41757f:	add    BYTE PTR [rsi],ah
  417581:	lods   eax,DWORD PTR ds:[rsi]
  417582:	add    BYTE PTR [r8],al
  417585:	add    BYTE PTR [rax],al
  417587:	add    BYTE PTR [rax],al
  417589:	fild   DWORD PTR [rax+0x0]
  41758c:	add    BYTE PTR [rax],al
  41758e:	add    BYTE PTR [rax],al
  417590:	add    DWORD PTR [rax],eax
  417592:	add    BYTE PTR [rax],al
  417594:	add    BYTE PTR [rax],al
  417596:	add    BYTE PTR [rax],al
  417598:	sub    ch,BYTE PTR [rbp+0x41]
  41759e:	add    BYTE PTR [rax],al
  4175a0:	add    al,dl
  4175a2:	add    BYTE PTR [rax],al
  4175a5:	add    BYTE PTR [rax],al
  4175a7:	add    BYTE PTR [rcx],al
  4175a9:	add    BYTE PTR [rax],al
  4175ab:	add    BYTE PTR [rax],al
  4175ad:	add    BYTE PTR [rax],al
  4175af:	add    BYTE PTR [rsi],ch
  4175b1:	lods   eax,DWORD PTR ds:[rsi]
  4175b2:	add    BYTE PTR [r8],al
  4175b5:	add    BYTE PTR [rax],al
  4175b7:	add    BYTE PTR [rax],bl
  4175b9:	pop    rdi
  4175ba:	add    BYTE PTR [r8],al
  4175bd:	add    BYTE PTR [rax],al
  4175bf:	add    BYTE PTR [rcx],al
  4175c1:	add    BYTE PTR [rax],al
  4175c3:	add    BYTE PTR [rax],al
  4175c5:	add    BYTE PTR [rax],al
  4175c7:	add    BYTE PTR [rdx],dh
  4175c9:	lods   eax,DWORD PTR ds:[rsi]
  4175ca:	add    BYTE PTR [r8],al
  4175cd:	add    BYTE PTR [rax],al
  4175cf:	add    BYTE PTR [rax],ah
  4175d1:	rol    DWORD PTR [rax+0x0],cl
	...
  4175e0:	xor    eax,0x41ad
  4175e5:	add    BYTE PTR [rax],al
  4175e7:	add    al,dh
  4175e9:	pop    rdi
  4175ea:	add    BYTE PTR [r8],al
	...
  4175f5:	add    BYTE PTR [rax],al
  4175f7:	add    BYTE PTR [rcx],bh
  4175f9:	lods   eax,DWORD PTR ds:[rsi]
  4175fa:	add    BYTE PTR [r8],al
  4175fd:	add    BYTE PTR [rax],al
  4175ff:	add    al,dl
  417601:	fwait
  417602:	add    BYTE PTR [rax],al
	...
  41760d:	add    BYTE PTR [rax],al
  41760f:	add    BYTE PTR [rsi],bh
  417611:	lods   eax,DWORD PTR ds:[rsi]
  417612:	add    BYTE PTR [r8],al
  417615:	add    BYTE PTR [rax],al
  417617:	add    BYTE PTR [rax],dh
  417619:	rol    DWORD PTR [rax+0x0],1
	...
  417628:	rex.X lods eax,DWORD PTR ds:[rsi]
  41762a:	add    BYTE PTR [r8],al
  41762d:	add    BYTE PTR [rax],al
  41762f:	add    BYTE PTR [rax+0x60],bh
  417632:	add    BYTE PTR [r8],al
  417635:	add    BYTE PTR [rax],al
  417637:	add    BYTE PTR [rdx],al
  417639:	add    BYTE PTR [rax],al
  41763b:	add    BYTE PTR [rax],al
  41763d:	add    BYTE PTR [rax],al
  41763f:	add    BYTE PTR [rdi-0x53],al
  417642:	add    BYTE PTR [r8],al
  417645:	add    BYTE PTR [rax],al
  417647:	add    BYTE PTR [rax+0x60],ch
  41764a:	add    BYTE PTR [r8],al
  41764d:	add    BYTE PTR [rax],al
  41764f:	add    BYTE PTR [rdx],al
  417651:	add    BYTE PTR [rax],al
  417653:	add    BYTE PTR [rax],al
  417655:	add    BYTE PTR [rax],al
  417657:	add    BYTE PTR [rbp+rbp*4+0x41],cl
  41765b:	add    BYTE PTR [rax],al
  41765d:	add    BYTE PTR [rax],al
  41765f:	add    BYTE PTR [rax+0x60],dh
  417662:	add    BYTE PTR [r8],al
  417665:	add    BYTE PTR [rax],al
  417667:	add    BYTE PTR [rdx],al
	...
  4176bd:	add    BYTE PTR [rax],al
  4176bf:	add    BYTE PTR [rdi],bh
  4176c1:	add    BYTE PTR [rax],al
  4176c3:	add    BYTE PTR [rcx],al
	...
  4176cd:	add    BYTE PTR [rax],al
  4176cf:	add    al,ch
  4176d1:	imul   eax,DWORD PTR [rcx+0x0],0x0
	...
  4176e0:	(bad)  
  4176e1:	(bad)  
  4176e2:	(bad)  
  4176e3:	(bad)  
  4176e4:	(bad)  
  4176e5:	(bad)  
  4176e6:	(bad)  
  4176e7:	inc    DWORD PTR [rax]
  4176e9:	add    BYTE PTR [rax],al
  4176eb:	add    BYTE PTR [rax],al
  4176ed:	add    BYTE PTR [rax],al
  4176ef:	add    bh,bh
	...
  4176fd:	add    BYTE PTR [rax],al
  4176ff:	add    BYTE PTR [rdx],al
	...
  41770d:	add    BYTE PTR [rax],al
  41770f:	add    BYTE PTR [rip+0xffffffffce000000],dh        # 0xffffffffce417715
  417715:	sti    
  417716:	(bad)  
  417717:	dec    ebx
  417719:	add    eax,DWORD PTR [rax]
  41771b:	add    BYTE PTR [rcx],al
  41771d:	add    BYTE PTR [rax],al
  41771f:	add    BYTE PTR [rax],al
  417721:	add    BYTE PTR [rax],al
  417723:	add    BYTE PTR [rsi],cl
	...
  41772d:	add    BYTE PTR [rax],al
  41772f:	add    bh,bh
  417731:	(bad)  
  417732:	(bad)  
  417733:	inc    DWORD PTR [rax]
	...
  41773d:	add    BYTE PTR [rax],al
  41773f:	add    BYTE PTR [rax],ah
  417741:	cli    
  417742:	out    dx,al
  417743:	ret    0x705f
  417746:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  417747:	in     al,dx
  417748:	in     eax,dx
  417749:	(bad)  
	...
  417756:	stos   BYTE PTR es:[rdi],al
  417757:	mov    eax,0x3fff
  41775c:	add    BYTE PTR [rax],al
  41775e:	add    BYTE PTR [rax],al
  417760:	add    BYTE PTR [rax],al
  417763:	add    bl,al
  417765:	mov    edi,0x3fc0ffff
  41776a:	add    BYTE PTR [rax],al
  41776c:	add    DWORD PTR [rax],eax
  41776e:	add    BYTE PTR [rax],al
  417770:	add    BYTE PTR [rax],al
  417772:	add    BYTE PTR [rax],al
  417774:	(bad)  
	...
  417781:	adc    BYTE PTR [rdx+0x0],al
	...
  417790:	adc    BYTE PTR [rcx+0x41],ah
  417793:	add    BYTE PTR [rax],al
  417795:	add    BYTE PTR [rax],al
  417797:	add    BYTE PTR [rax],ah
  417799:	(bad)  
  41779a:	add    BYTE PTR [r8],al
  41779d:	add    BYTE PTR [rax],al
  41779f:	add    BYTE PTR [rax+0x4161],ah
  4177a5:	add    BYTE PTR [rax],al
  4177a7:	add    BYTE PTR [rax+0x61],dl
  4177aa:	add    BYTE PTR [r8],al
  4177ad:	add    BYTE PTR [rax],al
  4177af:	add    BYTE PTR [rdx],dh
  4177b1:	movabs ds:0x2b992ddf,al
  4177ba:	add    BYTE PTR [rax],al
  4177bc:	add    BYTE PTR [rax],al
  4177be:	add    BYTE PTR [rax],al
  4177c0:	int    0x5d
  4177c2:	and    dl,dl
  4177c4:	data16 (bad) 
  4177c6:	(bad)  
  4177c7:	inc    DWORD PTR [rax]
  4177c9:	add    BYTE PTR [rax],al
  4177cb:	add    BYTE PTR [rax],al
  4177cd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000418000 <.rdata>:
  418000:	and    eax,0x6d203a73
  418005:	gs ins DWORD PTR es:[rdi],dx
  418007:	outs   dx,DWORD PTR ds:[rsi]
  418008:	jb     0x418083
  41800a:	and    BYTE PTR [rcx+0x6c],ah
  41800d:	ins    BYTE PTR es:[rdi],dx
  41800e:	outs   dx,DWORD PTR ds:[rsi]
  41800f:	movsxd esp,DWORD PTR [rcx+0x74]
  418012:	imul   ebp,DWORD PTR [rdi+0x6e],0x72726520
  418019:	outs   dx,DWORD PTR ds:[rsi]
  41801a:	jb     0x41803c
  41801c:	and    eax,0x25000a73
  418021:	jae    0x41805d
  418023:	and    BYTE PTR [rbp+0x65],ch
  418026:	ins    DWORD PTR es:[rdi],dx
  418027:	outs   dx,DWORD PTR ds:[rsi]
  418028:	jb     0x4180a3
  41802a:	and    BYTE PTR [rcx+0x6c],ah
  41802d:	ins    BYTE PTR es:[rdi],dx
  41802e:	outs   dx,DWORD PTR ds:[rsi]
  41802f:	movsxd esp,DWORD PTR [rcx+0x74]
  418032:	imul   ebp,DWORD PTR [rdi+0x6e],0x72726520
  418039:	outs   dx,DWORD PTR ds:[rsi]
  41803a:	jb     0x41805c
  41803c:	sub    BYTE PTR [rdi+0x72],ah
  41803f:	outs   dx,DWORD PTR ds:[rsi]
  418040:	ja     0x4180a4
  418042:	jne    0x4180aa
  418044:	data16 gs jb 0x418071
  418048:	or     al,BYTE PTR [rax]
  41804a:	loop   0x417fcc
  41804c:	xchg   ebx,eax
  41804d:	add    dl,ah
  41804f:	adc    BYTE PTR [rdx-0x6d771e00],0x0
  418056:	pop    rsp
  418057:	or     al,BYTE PTR [rax]
  418059:	or     DWORD PTR [rdx],ecx
  41805b:	or     eax,0x75642800
  418060:	jo     0x4180d5
  418062:	je     0x4180d6
  418064:	sub    DWORD PTR [rax],eax
  418066:	and    DWORD PTR [rcx+rbp*2+0x6d],esp
  41806a:	outs   dx,BYTE PTR gs:[rsi]
  41806c:	jae    0x4180d7
  41806e:	outs   dx,DWORD PTR ds:[rsi]
  41806f:	outs   dx,BYTE PTR ds:[rsi]
  418070:	ins    BYTE PTR es:[rdi],dx
  418071:	gs jae 0x4180e7
  418074:	add    BYTE PTR [rax],al
  418076:	sub    BYTE PTR [rbx+0x6f],ah
  418079:	ins    DWORD PTR es:[rdi],dx
  41807a:	jo     0x4180e8
  41807c:	gs je  0x4180e4
  41807f:	jne    0x4180ef
  418081:	imul   esi,DWORD PTR [rbx+rsi*2+0x29],0xa092000
  418089:	add    BYTE PTR [rdx],cl
  41808b:	add    BYTE PTR [rax],al
  41808d:	add    BYTE PTR [rax],al
  41808f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561bb08
  418095:	outs   dx,BYTE PTR ds:[rsi]
  418096:	imul   esi,DWORD PTR [rax+riz*1+0x27],0x20277325
  41809e:	outs   dx,DWORD PTR ds:[rsi]
  41809f:	outs   dx,BYTE PTR ds:[rsi]
  4180a0:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4180a4:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a10f
  4180ab:	and    BYTE PTR [rdi],ah
  4180ad:	and    eax,0x69202773
  4180b2:	outs   dx,BYTE PTR ds:[esi]
  4180b4:	outs   dx,DWORD PTR ds:[rsi]
  4180b5:	jb     0x41811c
  4180b7:	fs and BYTE PTR cs:[rax],ah
  4180bb:	rex.WB je 0x4180de
  4180be:	jae    0x418134
  4180c0:	(bad)  
  4180c1:	jb     0x418137
  4180c3:	jae    0x4180e5
  4180c5:	outs   dx,DWORD PTR ds:[rsi]
  4180c6:	jb     0x4180e8
  4180c8:	outs   dx,BYTE PTR gs:[rsi]
  4180ca:	fs jae 0x4180ed
  4180cd:	ja     0x418138
  4180cf:	je     0x418139
  4180d1:	and    BYTE PTR [rdi],ah
  4180d3:	pop    rdi
  4180d4:	(bad)  
  4180d5:	or     al,BYTE PTR [rax]
  4180d7:	cs sub al,0x32
  4180da:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  4180e1:	add    BYTE PTR [rax],al
  4180e3:	add    BYTE PTR [rax],al
  4180e5:	add    BYTE PTR [rax],al
  4180e7:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561bb60
  4180ed:	outs   dx,BYTE PTR ds:[rsi]
  4180ee:	imul   esi,DWORD PTR [rax+riz*1+0x27],0x20277325
  4180f6:	outs   dx,DWORD PTR ds:[rsi]
  4180f7:	outs   dx,BYTE PTR ds:[rsi]
  4180f8:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4180fc:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a167
  418103:	and    BYTE PTR [rdi],ah
  418105:	and    eax,0x69202773
  41810a:	outs   dx,BYTE PTR ds:[esi]
  41810c:	outs   dx,DWORD PTR ds:[rsi]
  41810d:	jb     0x418174
  41810f:	fs and BYTE PTR cs:[rax],ah
  418113:	and    eax,0xa73
  418118:	and    eax,0x75203a73
  41811d:	outs   dx,BYTE PTR ds:[rsi]
  41811e:	imul   esi,DWORD PTR [rax+riz*1+0x27],0x20277325
  418126:	outs   dx,DWORD PTR ds:[rsi]
  418127:	outs   dx,BYTE PTR ds:[rsi]
  418128:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  41812c:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a197
  418133:	and    BYTE PTR [rdi],ah
  418135:	and    eax,0x69202773
  41813a:	outs   dx,BYTE PTR ds:[esi]
  41813c:	outs   dx,DWORD PTR ds:[rsi]
  41813d:	jb     0x4181a4
  41813f:	fs and BYTE PTR cs:[rax],ah
  418143:	rex.WB je 0x418166
  418146:	jae    0x4181bc
  418148:	(bad)  
  418149:	jb     0x4181bf
  41814b:	jae    0x41816d
  41814d:	ja     0x4181b8
  41814f:	je     0x4181b9
  418151:	and    BYTE PTR [rcx+0x20],ah
  418154:	imul   esp,DWORD PTR fs:[rdi+0x69],0xa74
  41815c:	add    BYTE PTR [rax],al
  41815e:	add    BYTE PTR [rax],al
  418160:	and    eax,0x75203a73
  418165:	outs   dx,BYTE PTR ds:[rsi]
  418166:	imul   esi,DWORD PTR [rax+riz*1+0x27],0x20277325
  41816e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  418176:	outs   dx,DWORD PTR ds:[rsi]
  418177:	outs   dx,BYTE PTR ds:[rsi]
  418178:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  41817c:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a1e7
  418183:	and    BYTE PTR [rdi],ah
  418185:	and    eax,0x69202773
  41818a:	jae    0x4181ac
  41818c:	jb     0x4181f3
  41818e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  418196:	outs   dx,DWORD PTR ds:[rsi]
  418197:	outs   dx,BYTE PTR ds:[rsi]
  418198:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  41819c:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a207
  4181a3:	and    BYTE PTR [rdi],ah
  4181a5:	and    eax,0xa2e2773
  4181aa:	add    BYTE PTR [rax],ch
  4181ac:	outs   dx,BYTE PTR ds:[rsi]
  4181ad:	gs ja  0x418225
  4181b0:	outs   dx,BYTE PTR ds:[rsi]
  4181b1:	imul   esi,DWORD PTR [rcx+rbp*1+0x0],0x25000000
  4181b9:	jae    0x4181f5
  4181bb:	and    BYTE PTR [rax+0x72],dh
  4181be:	imul   di,WORD PTR gs:[rax+0x20],0x2527
  4181c5:	jae    0x4181f4
  4181c7:	(bad)  
  4181c8:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4181cc:	imul   ebp,DWORD PTR [rsi+0x65],0x6e6f2064
  4181d3:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4181d7:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a242
  4181de:	and    BYTE PTR [rdi],ah
  4181e0:	and    eax,0x69202773
  4181e5:	jae    0x418207
  4181e7:	jb     0x41824e
  4181e9:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  4181f1:	outs   dx,DWORD PTR ds:[rsi]
  4181f2:	outs   dx,BYTE PTR ds:[rsi]
  4181f3:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4181f7:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a262
  4181fe:	and    BYTE PTR [rdi],ah
  418200:	and    eax,0xa2e2773
  418205:	add    BYTE PTR [rax],ch
  418207:	outs   dx,BYTE PTR ds:[rsi]
  418208:	gs ja  0x41827b
  41820b:	jb     0x418272
  41820d:	imul   di,WORD PTR [rax+0x29],0x0
  418213:	add    BYTE PTR [rax],al
  418215:	add    BYTE PTR [rax],al
  418217:	add    BYTE PTR [rip+0x65203a73],ah        # 0x6561bc90
  41821d:	js     0x41828f
  41821f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  418224:	and    BYTE PTR [edi],ah
  418227:	pop    rbx
  418228:	(bad)  
  418229:	and    BYTE PTR [rcx+0x6e],ch
  41822c:	and    BYTE PTR [rbp+riz*2+0x66],ah
  418230:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  418237:	and    BYTE PTR [rdi+0x66],ch
  41823a:	and    BYTE PTR [rdi],ah
  41823c:	and    eax,0x69202773
  418241:	outs   dx,BYTE PTR ds:[rsi]
  418242:	and    BYTE PTR [rdi],ah
  418244:	and    eax,0x6c202773
  418249:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
	...
  418258:	and    eax,0x75203a73
  41825d:	outs   dx,BYTE PTR ds:[rsi]
  41825e:	gs js  0x4182d1
  418261:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  418266:	and    BYTE PTR [rbx+0x68],ah
  418269:	(bad)  
  41826a:	jb     0x4182cd
  41826c:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  418270:	jae    0x418292
  418272:	(bad)  
  418273:	outs   dx,WORD PTR gs:[rsi]
  418276:	jb     0x4182dd
  418278:	and    BYTE PTR [rdi],ah
  41827a:	pop    rbx
  41827b:	(bad)  
  41827c:	and    BYTE PTR [rcx+0x6e],ch
  41827f:	and    BYTE PTR [rbp+riz*2+0x66],ah
  418283:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  41828a:	and    BYTE PTR [rdi+0x66],ch
  41828d:	and    BYTE PTR [rdi],ah
  41828f:	and    eax,0x69202773
  418294:	outs   dx,BYTE PTR ds:[rsi]
  418295:	and    BYTE PTR [rdi],ah
  418297:	and    eax,0x6c202773
  41829c:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  4182a3:	add    BYTE PTR [rax],al
  4182a5:	add    BYTE PTR [rax],al
  4182a7:	add    BYTE PTR [rip+0x65203a73],ah        # 0x6561bd20
  4182ad:	js     0x41831f
  4182af:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  4182b4:	and    BYTE PTR [edi],ah
  4182b7:	pop    rbp
  4182b8:	(bad)  
  4182b9:	and    BYTE PTR [rcx+0x6e],ch
  4182bc:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4182c0:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4182c7:	and    BYTE PTR [rdi+0x66],ch
  4182ca:	and    BYTE PTR [rdi],ah
  4182cc:	and    eax,0x69202773
  4182d1:	outs   dx,BYTE PTR ds:[rsi]
  4182d2:	and    BYTE PTR [rdi],ah
  4182d4:	and    eax,0x6c202773
  4182d9:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  4182e0:	add    BYTE PTR [rax],ch
  4182e2:	gs js  0x418359
  4182e5:	jb     0x418348
  4182e7:	movsxd esi,DWORD PTR [rdi+rbx*2+0x69]
  4182eb:	outs   dx,BYTE PTR ds:[rsi]
  4182ec:	je     0x418353
  4182ee:	jb     0x418366
  4182f0:	(bad)  
  4182f1:	ins    BYTE PTR es:[rdi],dx
  4182f2:	sub    DWORD PTR [rax],eax
  4182f4:	add    BYTE PTR [rax],al
  4182f6:	add    BYTE PTR [rax],al
  4182f8:	and    eax,0x75203a73
  4182fd:	outs   dx,BYTE PTR ds:[rsi]
  4182fe:	imul   esi,DWORD PTR [rax+riz*1+0x27],0x20277325
  418306:	outs   dx,DWORD PTR ds:[rsi]
  418307:	outs   dx,BYTE PTR ds:[rsi]
  418308:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  41830c:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a377
  418313:	and    BYTE PTR [rdi],ah
  418315:	and    eax,0x69202773
  41831a:	outs   dx,BYTE PTR ds:[esi]
  41831c:	outs   dx,DWORD PTR ds:[rsi]
  41831d:	jb     0x418384
  41831f:	fs and BYTE PTR cs:[rax],ah
  418323:	rex.WB je 0x418346
  418326:	jae    0x41839c
  418328:	(bad)  
  418329:	jb     0x41839f
  41832b:	jae    0x41834d
  41832d:	ja     0x418398
  41832f:	je     0x418399
  418331:	and    BYTE PTR [rcx+0x20],ah
  418334:	(bad)  
  418335:	sub    BYTE PTR [rdi],ah
  418337:	or     al,BYTE PTR [rax]
  418339:	add    BYTE PTR [rax],al
  41833b:	add    BYTE PTR [rax],al
  41833d:	add    BYTE PTR [rax],al
  41833f:	add    BYTE PTR [rip+0x66203a73],ah        # 0x6661bdb8
  418345:	jne    0x4183b5
  418347:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41834b:	outs   dx,BYTE PTR ds:[rsi]
  41834c:	and    BYTE PTR [rdi],ah
  41834e:	and    eax,0x6f202773
  418353:	outs   dx,BYTE PTR ds:[rsi]
  418354:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418358:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a3c3
  41835f:	and    BYTE PTR [rdi],ah
  418361:	and    eax,0x69202773
  418366:	outs   dx,BYTE PTR ds:[esi]
  418368:	outs   dx,DWORD PTR ds:[rsi]
  418369:	jb     0x4183d0
  41836b:	fs and BYTE PTR cs:[rax],ah
  41836f:	rex.WB je 0x418392
  418372:	jae    0x4183e8
  418374:	(bad)  
  418375:	jb     0x4183eb
  418377:	jae    0x418399
  418379:	ja     0x4183e4
  41837b:	je     0x4183e5
  41837d:	and    BYTE PTR [rcx+0x20],ah
  418380:	imul   esp,DWORD PTR fs:[rdi+0x69],0xa74
  418388:	and    eax,0x62203a73
  41838d:	(bad)  
  41838e:	and    BYTE PTR fs:[rsi+0x75],ah
  418392:	outs   dx,BYTE PTR ds:[rsi]
  418393:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  418397:	outs   dx,BYTE PTR ds:[rsi]
  418398:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41839c:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4183a3:	and    BYTE PTR [rdi+0x66],ch
  4183a6:	and    BYTE PTR [rdi],ah
  4183a8:	and    eax,0x69202773
  4183ad:	outs   dx,BYTE PTR ds:[rsi]
  4183ae:	and    BYTE PTR [rdi],ah
  4183b0:	and    eax,0x6c202773
  4183b5:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  4183bc:	add    BYTE PTR [rax],al
  4183be:	add    BYTE PTR [rax],al
  4183c0:	and    eax,0x6b203a73
  4183c5:	gs jns 0x41843f
  4183c8:	outs   dx,DWORD PTR ds:[rsi]
  4183c9:	jb     0x41842f
  4183cb:	and    BYTE PTR [rdi],ah
  4183cd:	and    eax,0x72202773
  4183d2:	gs jo  0x41843a
  4183d5:	(bad)  
  4183d6:	je     0x41843d
  4183d8:	and    BYTE PTR fs:[rcx+0x6e],ch
  4183dc:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4183e0:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4183e7:	and    BYTE PTR [rdi+0x66],ch
  4183ea:	and    BYTE PTR [rdi],ah
  4183ec:	and    eax,0x6f202773
  4183f1:	outs   dx,BYTE PTR ds:[rsi]
  4183f2:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4183f6:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a461
  4183fd:	and    BYTE PTR [rdi],ah
  4183ff:	and    eax,0xa2e2773
  418404:	add    BYTE PTR [rax],al
  418406:	add    BYTE PTR [rax],al
  418408:	and    eax,0x64203a73
  41840d:	outs   dx,DWORD PTR ds:[rsi]
  41840e:	ins    DWORD PTR es:[rdi],dx
  41840f:	(bad)  
  418410:	imul   ebp,DWORD PTR [rsi+0x20],0x72636564
  418417:	gs (bad) 
  418419:	jae    0x418484
  41841b:	outs   dx,BYTE PTR ds:[rsi]
  41841c:	and    BYTE PTR [ecx+0x6e],ch
  418420:	and    BYTE PTR [rbp+riz*2+0x66],ah
  418424:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  41842b:	and    BYTE PTR [rdi+0x66],ch
  41842e:	and    BYTE PTR [rdi],ah
  418430:	and    eax,0x69202773
  418435:	outs   dx,BYTE PTR ds:[rsi]
  418436:	and    BYTE PTR [rdi],ah
  418438:	and    eax,0x6c202773
  41843d:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  418444:	add    BYTE PTR [rax],al
  418446:	add    BYTE PTR [rax],al
  418448:	and    eax,0x6d203a73
  41844d:	(bad)  
  41844e:	ins    BYTE PTR es:[rdi],dx
  41844f:	outs   dx,WORD PTR ds:[rsi]
  418451:	jb     0x4184c0
  418453:	gs and BYTE PTR fs:[rdi+rbp*2+0x6d],ah
  418459:	(bad)  
  41845a:	imul   ebp,DWORD PTR [rsi+0x20],0x64206e69
  418461:	imul   bp,WORD PTR gs:[rsi+0x69],0x6974
  418468:	outs   dx,DWORD PTR ds:[rsi]
  418469:	outs   dx,BYTE PTR ds:[rsi]
  41846a:	and    BYTE PTR [rdi+0x66],ch
  41846d:	and    BYTE PTR [rdi],ah
  41846f:	and    eax,0x69202773
  418474:	outs   dx,BYTE PTR ds:[rsi]
  418475:	and    BYTE PTR [rdi],ah
  418477:	and    eax,0x6c202773
  41847c:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  418483:	add    BYTE PTR [rax],al
  418485:	add    BYTE PTR [rax],al
  418487:	add    BYTE PTR [rip+0x72203a73],ah        # 0x7261bf00
  41848d:	(bad)  
  41848e:	outs   dx,BYTE PTR ds:[rsi]
  41848f:	and    BYTE PTR gs:[ebp+eiz*2+0x63],ah
  418495:	jb     0x4184fc
  418497:	(bad)  
  418498:	jae    0x418503
  41849a:	outs   dx,BYTE PTR ds:[rsi]
  41849b:	and    BYTE PTR [ecx+0x6e],ch
  41849f:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4184a3:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4184aa:	and    BYTE PTR [rdi+0x66],ch
  4184ad:	and    BYTE PTR [rdi],ah
  4184af:	and    eax,0x69202773
  4184b4:	outs   dx,BYTE PTR ds:[rsi]
  4184b5:	and    BYTE PTR [rdi],ah
  4184b7:	and    eax,0x6c202773
  4184bc:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  4184c3:	add    BYTE PTR [rax],al
  4184c5:	add    BYTE PTR [rax],al
  4184c7:	add    BYTE PTR [rip+0x6d203a73],ah        # 0x6d61bf40
  4184cd:	(bad)  
  4184ce:	ins    BYTE PTR es:[rdi],dx
  4184cf:	outs   dx,WORD PTR ds:[rsi]
  4184d1:	jb     0x418540
  4184d3:	gs and BYTE PTR fs:[rdx+0x61],dh
  4184d8:	outs   dx,BYTE PTR ds:[rsi]
  4184d9:	and    BYTE PTR gs:[ecx+0x6e],ch
  4184de:	and    BYTE PTR [rbp+riz*2+0x66],ah
  4184e2:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  4184e9:	and    BYTE PTR [rdi+0x66],ch
  4184ec:	and    BYTE PTR [rdi],ah
  4184ee:	and    eax,0x69202773
  4184f3:	outs   dx,BYTE PTR ds:[rsi]
  4184f4:	and    BYTE PTR [rdi],ah
  4184f6:	and    eax,0x6c202773
  4184fb:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  418502:	add    BYTE PTR [rax],al
  418504:	add    BYTE PTR [rax],al
  418506:	add    BYTE PTR [rax],al
  418508:	and    eax,0x66203a73
  41850d:	jne    0x41857d
  41850f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  418513:	outs   dx,BYTE PTR ds:[rsi]
  418514:	and    BYTE PTR [rdi],ah
  418516:	and    eax,0x6d202773
  41851b:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  418522:	imul   esp,DWORD PTR [rbp+0x79],0x77
  418526:	outs   dx,DWORD PTR ds:[rsi]
  418527:	jb     0x41858d
  418529:	and    BYTE PTR [rdx+0x65],ah
  41852c:	outs   dx,WORD PTR ds:[rsi]
  41852e:	jb     0x418595
  418530:	and    BYTE PTR [rdi],ah
  418532:	pop    rbx
  418533:	(bad)  
  418534:	and    BYTE PTR [rdi+0x6e],ch
  418537:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  41853b:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a5a6
  418542:	and    BYTE PTR [rdi],ah
  418544:	and    eax,0xa2773
  418549:	add    BYTE PTR [rax],al
  41854b:	add    BYTE PTR [rax],al
  41854d:	add    BYTE PTR [rax],al
  41854f:	add    BYTE PTR [rip+0x66203a73],ah        # 0x6661bfc8
  418555:	jne    0x4185c5
  418557:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41855b:	outs   dx,BYTE PTR ds:[rsi]
  41855c:	and    BYTE PTR [rdi],ah
  41855e:	and    eax,0x64202773
  418563:	imul   bp,WORD PTR gs:[rsi+0x65],0x2064
  41856a:	outs   dx,DWORD PTR ds:[rsi]
  41856b:	outs   dx,BYTE PTR ds:[rsi]
  41856c:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418570:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a5db
  418577:	and    BYTE PTR [rdi],ah
  418579:	and    eax,0x69202773
  41857e:	jae    0x4185a0
  418580:	jb     0x4185e7
  418582:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41858a:	outs   dx,DWORD PTR ds:[rsi]
  41858b:	outs   dx,BYTE PTR ds:[rsi]
  41858c:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418590:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a5fb
  418597:	and    BYTE PTR [rdi],ah
  418599:	and    eax,0xa2e2773
  41859e:	add    BYTE PTR [rax],ch
  4185a0:	outs   dx,BYTE PTR ds:[rsi]
  4185a1:	gs ja  0x41860a
  4185a4:	jne    0x418614
  4185a6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4185aa:	outs   dx,BYTE PTR ds:[rsi]
  4185ab:	sub    DWORD PTR [rax],eax
  4185ad:	add    BYTE PTR [rax],al
  4185af:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561c028
  4185b5:	outs   dx,BYTE PTR ds:[rsi]
  4185b6:	imul   esi,DWORD PTR [rax+riz*1+0x27],0x20277325
  4185be:	outs   dx,DWORD PTR ds:[rsi]
  4185bf:	outs   dx,BYTE PTR ds:[rsi]
  4185c0:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4185c4:	and    BYTE PTR gs:[rip+0x67692064],ah        # 0x67aaa62f
  4185cb:	outs   dx,BYTE PTR ds:[rsi]
  4185cc:	outs   dx,DWORD PTR ds:[rsi]
  4185cd:	jb     0x418634
  4185cf:	fs and BYTE PTR cs:[rax],ah
  4185d3:	rex.WB je 0x4185f6
  4185d6:	jae    0x41864c
  4185d8:	(bad)  
  4185d9:	jb     0x41864f
  4185db:	jae    0x4185fd
  4185dd:	ja     0x418648
  4185df:	je     0x418649
  4185e1:	and    BYTE PTR [rcx+0x20],ah
  4185e4:	imul   esp,DWORD PTR fs:[rdi+0x69],0xa74
  4185ec:	add    BYTE PTR [rax],al
  4185ee:	add    BYTE PTR [rax],al
  4185f0:	and    eax,0x6d203a73
  4185f5:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  4185fc:	(bad)  
  4185fd:	pop    rbp
  4185fe:	(bad)  
  4185ff:	and    BYTE PTR [rcx+0x6e],ch
  418602:	and    BYTE PTR [rbp+0x6e],dh
  418605:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x656c6966
  41860d:	and    BYTE PTR [rdi],ah
  41860f:	and    eax,0x6c202773
  418614:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  41861b:	add    BYTE PTR [rax],al
  41861d:	add    BYTE PTR [rax],al
  41861f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561c098
  418625:	outs   dx,BYTE PTR ds:[rsi]
  418626:	gs js  0x418699
  418629:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  41862e:	and    BYTE PTR [rbx+0x68],ah
  418631:	(bad)  
  418632:	jb     0x418695
  418634:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  418638:	jae    0x41865a
  41863a:	(bad)  
  41863b:	data16 je 0x4186a3
  41863e:	jb     0x418660
  418640:	(bad)  
  418641:	pop    rbp
  418642:	(bad)  
  418643:	and    BYTE PTR [rcx+0x6e],ch
  418646:	and    BYTE PTR [rbp+0x6e],dh
  418649:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x656c6966
  418651:	and    BYTE PTR [rdi],ah
  418653:	and    eax,0x6c202773
  418658:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  41865f:	add    BYTE PTR [rax],ch
  418661:	outs   dx,BYTE PTR ds:[rsi]
  418662:	gs ja  0x4186d9
  418665:	(bad)  
  418666:	(bad)  
  418667:	ins    BYTE PTR es:[rdi],dx
  418668:	sub    DWORD PTR gs:[rax],eax
  41866b:	add    BYTE PTR [rax],al
  41866d:	add    BYTE PTR [rax],al
  41866f:	add    BYTE PTR [rip+0x6d203a73],ah        # 0x6d61c0e8
  418675:	gs ins DWORD PTR es:[rdi],dx
  418677:	outs   dx,DWORD PTR ds:[rsi]
  418678:	jb     0x4186f3
  41867a:	and    BYTE PTR [rcx+0x6c],ah
  41867d:	ins    BYTE PTR es:[rdi],dx
  41867e:	outs   dx,DWORD PTR ds:[rsi]
  41867f:	movsxd esp,DWORD PTR [rcx+0x74]
  418682:	imul   ebp,DWORD PTR [rdi+0x6e],0x72726520
  418689:	outs   dx,DWORD PTR ds:[rsi]
  41868a:	jb     0x4186ac
  41868c:	sub    BYTE PTR [rsi+0x65],ch
  41868f:	ja     0x418705
  418691:	(bad)  
  418692:	(bad)  
  418693:	ins    BYTE PTR es:[rdi],dx
  418694:	sub    DWORD PTR gs:[rdx],ecx
  418697:	add    BYTE PTR [rip+0x70203a73],ah        # 0x7061c110
  41869d:	outs   dx,DWORD PTR ds:[rsi]
  41869e:	imul   ebp,DWORD PTR [rsi+0x74],0x6f642073
  4186a5:	outs   dx,BYTE PTR ds:[rsi]
  4186a6:	(bad)  
  4186a7:	je     0x4186c9
  4186a9:	imul   ebp,DWORD PTR [rsi+0x63],0x73616572
  4186b0:	and    BYTE PTR gs:[rax],ch
  4186b3:	and    eax,0x2067382e
  4186b8:	je     0x418729
  4186ba:	and    BYTE PTR [rip+0x2967382e],ah        # 0x29a8beee
  4186c0:	and    BYTE PTR [rcx+0x6e],ch
  4186c3:	and    BYTE PTR [rbp+0x6e],dh
  4186c6:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x656c6966
  4186ce:	and    BYTE PTR [rdi],ah
  4186d0:	and    eax,0x6c202773
  4186d5:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  4186dc:	add    BYTE PTR [rax],ah
  4186de:	or     DWORD PTR [rax],eax
  4186e0:	and    eax,0x6d203a73
  4186e5:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  4186ec:	jbe    0x41874f
  4186ee:	ins    BYTE PTR es:[rdi],dx
  4186ef:	jne    0x418756
  4186f1:	and    BYTE PTR [rcx+0x66],ah
  4186f4:	je     0x41875b
  4186f6:	jb     0x418718
  4186f8:	and    eax,0x2067382e
  4186fd:	imul   ebp,DWORD PTR [rsi+0x20],0x74696e75
  418704:	jae    0x418726
  418706:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2527
  41870d:	jae    0x418736
  41870f:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418713:	and    BYTE PTR gs:[rip+0x20000a64],ah        # 0x2041917e
  41871a:	or     DWORD PTR [rax+rax*1],ebp
  41871d:	add    BYTE PTR [rax],al
  41871f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561c198
  418725:	outs   dx,BYTE PTR ds:[rsi]
  418726:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x20747369
  41872e:	ins    DWORD PTR es:[rdi],dx
  41872f:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  418736:	(bad)  
  418737:	and    eax,0x6f202763
  41873c:	outs   dx,BYTE PTR ds:[rsi]
  41873d:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418741:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a7ac
  418748:	and    BYTE PTR [rdi],ah
  41874a:	and    eax,0xa2773
  41874f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561c1c8
  418755:	outs   dx,BYTE PTR ds:[rsi]
  418756:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x20747369
  41875e:	(bad)  
  41875f:	and    eax,0x64202773
  418764:	imul   bp,WORD PTR gs:[rsi+0x65],0x2064
  41876b:	outs   dx,DWORD PTR ds:[rsi]
  41876c:	outs   dx,BYTE PTR ds:[rsi]
  41876d:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418771:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a7dc
  418778:	and    BYTE PTR [rdi],ah
  41877a:	and    eax,0x69202773
  41877f:	jae    0x4187a1
  418781:	jb     0x4187e8
  418783:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41878b:	outs   dx,DWORD PTR ds:[rsi]
  41878c:	outs   dx,BYTE PTR ds:[rsi]
  41878d:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418791:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a7fc
  418798:	and    BYTE PTR [rdi],ah
  41879a:	and    eax,0xa2e2773
  41879f:	add    BYTE PTR [rax],ch
  4187a1:	outs   dx,BYTE PTR ds:[rsi]
  4187a2:	gs ja  0x418806
  4187a5:	ins    BYTE PTR es:[rdi],dx
  4187a6:	imul   esp,DWORD PTR [rcx+0x73],0x74720029
  4187ad:	add    bh,ch
  4187af:	mov    ebx,0x732500bf
  4187b4:	cmp    ah,BYTE PTR [rax]
  4187b6:	and    eax,0x6e6f2073
  4187bb:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4187bf:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a82a
  4187c6:	and    BYTE PTR [rdi],ah
  4187c8:	and    eax,0xa2773
  4187cd:	add    BYTE PTR [rax],al
  4187cf:	add    BYTE PTR [rip+0x65203a73],ah        # 0x6561c248
  4187d5:	jb     0x418849
  4187d7:	outs   dx,DWORD PTR ds:[rsi]
  4187d8:	jb     0x4187fa
  4187da:	imul   ebp,DWORD PTR [rsi+0x20],0x74696e75
  4187e1:	jae    0x418803
  4187e3:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x2527
  4187ea:	jae    0x418813
  4187ec:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4187f0:	and    BYTE PTR gs:[rip+0x76000a64],ah        # 0x7641925b
  4187f7:	(bad)  
  4187f8:	jb     0x4187fa
  4187fa:	jbe    0x41885d
  4187fc:	jb     0x41886c
  4187fe:	outs   dx,DWORD PTR ds:[rsi]
  4187ff:	je     0x418801
  418801:	or     eax,0xa
  418806:	add    BYTE PTR [rax],al
  418808:	and    eax,0x6e203a73
  41880d:	outs   dx,DWORD PTR ds:[rsi]
  41880e:	and    BYTE PTR [rsi+0x61],dh
  418811:	jb     0x41887c
  418813:	(bad)  
  418814:	(bad)  
  418815:	ins    BYTE PTR es:[rdi],dx
  418816:	and    BYTE PTR gs:[rsi+0x61],ch
  41881a:	ins    DWORD PTR es:[rdi],dx
  41881b:	and    BYTE PTR gs:[rbx+0x70],dh
  41881f:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  418823:	imul   esp,DWORD PTR [rbp+0x64],0x206e6f20
  41882a:	ins    BYTE PTR es:[rdi],dx
  41882b:	imul   ebp,DWORD PTR [rsi+0x65],0x20642520
  418832:	outs   dx,DWORD PTR ds:[rsi]
  418833:	data16 and BYTE PTR [rdi],ah
  418836:	and    eax,0xa2773
  41883b:	add    BYTE PTR [rax],al
  41883d:	add    BYTE PTR [rax],al
  41883f:	add    BYTE PTR [rip+0x6e203a73],ah        # 0x6e61c2b8
  418845:	outs   dx,DWORD PTR ds:[rsi]
  418846:	and    BYTE PTR [rsi+0x61],dh
  418849:	ins    BYTE PTR es:[rdi],dx
  41884a:	jne    0x4188b1
  41884c:	and    BYTE PTR [rbx+0x70],dh
  41884f:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  418853:	imul   esp,DWORD PTR [rbp+0x64],0x206e6f20
  41885a:	ins    BYTE PTR es:[rdi],dx
  41885b:	imul   ebp,DWORD PTR [rsi+0x65],0x20642520
  418862:	outs   dx,DWORD PTR ds:[rsi]
  418863:	data16 and BYTE PTR [rdi],ah
  418866:	and    eax,0xa2773
  41886b:	add    BYTE PTR [rax],al
  41886d:	add    BYTE PTR [rax],al
  41886f:	add    BYTE PTR [rip+0x6e203a73],ah        # 0x6e61c2e8
  418875:	gs jae 0x4188ec
  418878:	gs and BYTE PTR fs:[rsi+0x61],dh
  41887d:	jb     0x41889f
  41887f:	jae    0x4188f5
  418881:	(bad)  
  418882:	je     0x4188e9
  418884:	ins    DWORD PTR es:[rdi],dx
  418885:	outs   dx,BYTE PTR gs:[rsi]
  418887:	je     0x4188fc
  418889:	and    BYTE PTR [rsi+0x6f],ch
  41888c:	je     0x4188ae
  41888e:	(bad)  
  41888f:	ins    BYTE PTR es:[rdi],dx
  418890:	ins    BYTE PTR es:[rdi],dx
  418891:	outs   dx,DWORD PTR ds:[rsi]
  418892:	ja     0x4188f9
  418894:	fs sub al,0x20
  418897:	ins    BYTE PTR es:[rdi],dx
  418898:	imul   ebp,DWORD PTR [rsi+0x65],0x20642520
  41889f:	outs   dx,DWORD PTR ds:[rsi]
  4188a0:	data16 and BYTE PTR [rdi],ah
  4188a3:	and    eax,0xa2773
  4188a8:	and    eax,0x65203a73
  4188ad:	outs   dx,BYTE PTR ds:[rsi]
  4188ae:	jbe    0x418919
  4188b0:	jb     0x418921
  4188b2:	outs   dx,BYTE PTR ds:[rsi]
  4188b3:	ins    DWORD PTR es:[rdi],dx
  4188b4:	outs   dx,BYTE PTR gs:[rsi]
  4188b6:	je     0x4188d8
  4188b8:	jbe    0x41891b
  4188ba:	jb     0x418925
  4188bc:	(bad)  
  4188bd:	(bad)  
  4188be:	ins    BYTE PTR es:[rdi],dx
  4188bf:	and    BYTE PTR gs:[rip+0x6f6e2073],ah        # 0x6fafa939
  4188c6:	je     0x4188e8
  4188c8:	jae    0x41892f
  4188ca:	je     0x4188ec
  4188cc:	(bad)  
  4188cd:	je     0x4188ef
  4188cf:	ins    BYTE PTR es:[rdi],dx
  4188d0:	imul   ebp,DWORD PTR [rsi+0x65],0x20642520
  4188d7:	outs   dx,DWORD PTR ds:[rsi]
  4188d8:	data16 and BYTE PTR [rdi],ah
  4188db:	and    eax,0xa2773
  4188e0:	outs   dx,BYTE PTR gs:[rsi]
  4188e2:	fs jbe 0x418946
  4188e5:	jb     0x4188e7
  4188e7:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561c360
  4188ed:	outs   dx,BYTE PTR ds:[rsi]
  4188ee:	ins    DWORD PTR es:[rdi],dx
  4188ef:	(bad)  
  4188f0:	je     0x418955
  4188f2:	push   0x21206465
  4188f7:	outs   dx,BYTE PTR gs:[rsi]
  4188f9:	fs jbe 0x41895d
  4188fc:	jb     0x41891e
  4188fe:	outs   dx,DWORD PTR ds:[rsi]
  4188ff:	outs   dx,BYTE PTR ds:[rsi]
  418900:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418904:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0a96f
  41890b:	and    BYTE PTR [rdi],ah
  41890d:	and    eax,0xa2773
  418912:	ins    BYTE PTR es:[rdi],dx
  418913:	outs   dx,DWORD PTR ds:[rsi]
  418914:	movsxd esp,DWORD PTR [rcx+0x6c]
  418917:	add    BYTE PTR gs:[rax],al
  41891a:	add    BYTE PTR [rax],al
  41891c:	add    BYTE PTR [rax],al
  41891e:	add    BYTE PTR [rax],al
  418920:	and    eax,0x6e203a73
  418925:	outs   dx,DWORD PTR ds:[rsi]
  418926:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  41892a:	(bad)  
  41892b:	ins    BYTE PTR es:[rdi],dx
  41892c:	and    BYTE PTR gs:[rbx+0x70],dh
  418930:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  418934:	imul   esp,DWORD PTR [rbp+0x64],0x206e6f20
  41893b:	ins    BYTE PTR es:[rdi],dx
  41893c:	imul   ebp,DWORD PTR [rsi+0x65],0x20642520
  418943:	outs   dx,DWORD PTR ds:[rsi]
  418944:	data16 and BYTE PTR [rdi],ah
  418947:	and    eax,0xa2773
  41894c:	add    BYTE PTR [rax],al
  41894e:	add    BYTE PTR [rax],al
  418950:	and    eax,0x6e203a73
  418955:	gs jae 0x4189cc
  418958:	gs and BYTE PTR fs:[rdi+rbp*2+0x63],ch
  41895e:	(bad)  
  41895f:	ins    BYTE PTR es:[rdi],dx
  418960:	gs jae 0x418983
  418963:	outs   dx,BYTE PTR ds:[rsi]
  418964:	outs   dx,DWORD PTR ds:[rsi]
  418965:	je     0x418987
  418967:	(bad)  
  418968:	ins    BYTE PTR es:[rdi],dx
  418969:	ins    BYTE PTR es:[rdi],dx
  41896a:	outs   dx,DWORD PTR ds:[rsi]
  41896b:	ja     0x4189d2
  41896d:	fs sub al,0x20
  418970:	ins    BYTE PTR es:[rdi],dx
  418971:	imul   ebp,DWORD PTR [rsi+0x65],0x20642520
  418978:	outs   dx,DWORD PTR ds:[rsi]
  418979:	data16 and BYTE PTR [rdi],ah
  41897c:	and    eax,0xa2773
  418981:	outs   dx,BYTE PTR gs:[rsi]
  418983:	fs ins BYTE PTR es:[rdi],dx
  418985:	outs   dx,DWORD PTR ds:[rsi]
  418986:	movsxd esp,DWORD PTR [rcx+0x6c]
  418989:	add    BYTE PTR gs:[rax],al
  41898c:	add    BYTE PTR [rax],al
  41898e:	add    BYTE PTR [rax],al
  418990:	and    eax,0x75203a73
  418995:	outs   dx,BYTE PTR ds:[rsi]
  418996:	ins    DWORD PTR es:[rdi],dx
  418997:	(bad)  
  418998:	je     0x4189fd
  41899a:	push   0x21206465
  41899f:	outs   dx,BYTE PTR gs:[rsi]
  4189a1:	fs ins BYTE PTR es:[rdi],dx
  4189a3:	outs   dx,DWORD PTR ds:[rsi]
  4189a4:	movsxd esp,DWORD PTR [rcx+0x6c]
  4189a7:	and    BYTE PTR gs:[rdi+0x6e],ch
  4189ab:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  4189af:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0aa1a
  4189b6:	and    BYTE PTR [rdi],ah
  4189b8:	and    eax,0xa2773
  4189bd:	jne    0x418a33
  4189bf:	data16 cmp BYTE PTR [rax],al
  4189c2:	add    BYTE PTR [rax],al
  4189c4:	add    BYTE PTR [rax],al
  4189c6:	add    BYTE PTR [rax],al
  4189c8:	and    eax,0x6e203a73
  4189cd:	gs jae 0x418a44
  4189d0:	gs and BYTE PTR fs:[rbp+0x74],dh
  4189d5:	data16 cmp BYTE PTR [rax],ah
  4189d8:	outs   dx,BYTE PTR ds:[rsi]
  4189d9:	outs   dx,DWORD PTR ds:[rsi]
  4189da:	je     0x4189fc
  4189dc:	(bad)  
  4189dd:	ins    BYTE PTR es:[rdi],dx
  4189de:	ins    BYTE PTR es:[rdi],dx
  4189df:	outs   dx,DWORD PTR ds:[rsi]
  4189e0:	ja     0x418a47
  4189e2:	fs sub al,0x20
  4189e5:	ins    BYTE PTR es:[rdi],dx
  4189e6:	imul   ebp,DWORD PTR [rsi+0x65],0x20642520
  4189ed:	outs   dx,DWORD PTR ds:[rsi]
  4189ee:	data16 and BYTE PTR [rdi],ah
  4189f1:	and    eax,0xa2773
  4189f6:	outs   dx,BYTE PTR gs:[rsi]
  4189f8:	fs jne 0x418a6f
  4189fb:	data16 cmp BYTE PTR [rax],al
  4189fe:	add    BYTE PTR [rax],al
  418a00:	and    eax,0x75203a73
  418a05:	outs   dx,BYTE PTR ds:[rsi]
  418a06:	ins    DWORD PTR es:[rdi],dx
  418a07:	(bad)  
  418a08:	je     0x418a6d
  418a0a:	push   0x21206465
  418a0f:	outs   dx,BYTE PTR gs:[rsi]
  418a11:	fs jne 0x418a88
  418a14:	data16 cmp BYTE PTR [rax],ah
  418a17:	outs   dx,DWORD PTR ds:[rsi]
  418a18:	outs   dx,BYTE PTR ds:[rsi]
  418a19:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418a1d:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0aa88
  418a24:	and    BYTE PTR [rdi],ah
  418a26:	and    eax,0xa2773
  418a2b:	ins    DWORD PTR es:[rdi],dx
  418a2c:	gs jae 0x418aa2
  418a2f:	(bad)  
  418a30:	add    BYTE PTR gs:[eip+0x73000a73],ah        # 0x734194ab
  418a38:	gs je  0x418a3b
  418a3b:	jne    0x418aab
  418a3d:	imul   esi,DWORD PTR [rsp+rbp*2+0x69],0x69007473
  418a45:	outs   dx,BYTE PTR ds:[rsi]
  418a46:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  418a4a:	add    BYTE PTR gs:[rax],al
  418a4d:	add    BYTE PTR [rax],al
  418a4f:	add    BYTE PTR [rip+0x6d203a73],ah        # 0x6d61c4c8
  418a55:	(bad)  
  418a56:	js     0x418a78
  418a58:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  418a5f:	and    BYTE PTR [rbp+riz*2+0x70],ah
  418a63:	je     0x418acd
  418a65:	and    BYTE PTR [rdi+0x66],ch
  418a68:	and    BYTE PTR [rip+0x78652064],ah        # 0x78a6aad2
  418a6e:	movsxd esp,DWORD PTR [rbp+0x65]
  418a71:	fs gs and BYTE PTR fs:[rcx+0x6e],ch
  418a77:	and    BYTE PTR [rsi+0x69],ah
  418a7a:	ins    BYTE PTR es:[rdi],dx
  418a7b:	and    BYTE PTR gs:[rdi],ah
  418a7e:	and    eax,0x6c202773
  418a83:	imul   ebp,DWORD PTR [rsi+0x65],0xa642520
  418a8a:	add    BYTE PTR [rax],al
  418a8c:	add    BYTE PTR [rax],al
  418a8e:	add    BYTE PTR [rax],al
  418a90:	and    eax,0x6d203a73
  418a95:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  418a9c:	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  418aa3:	and    BYTE PTR [rsi+0x69],ah
  418aa6:	ins    BYTE PTR es:[rdi],dx
  418aa7:	outs   dx,BYTE PTR gs:[rsi]
  418aa9:	(bad)  
  418aaa:	ins    DWORD PTR es:[rdi],dx
  418aab:	and    BYTE PTR gs:[rdi+0x6e],ch
  418aaf:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418ab3:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0ab1e
  418aba:	and    BYTE PTR [rdi],ah
  418abc:	and    eax,0xa2773
  418ac1:	sub    BYTE PTR [rdx+0x65],dh
  418ac4:	(bad)  
  418ac5:	fs jne 0x418b36
  418ac8:	imul   esi,DWORD PTR [rbx+rsi*2+0x29],0x5c2f00
  418ad0:	and    eax,0x75203a73
  418ad5:	outs   dx,BYTE PTR ds:[rsi]
  418ad6:	(bad)  
  418ad7:	(bad)  
  418ad8:	ins    BYTE PTR es:[rdi],dx
  418ad9:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  418ade:	outs   dx,DWORD PTR ds:[rsi]
  418adf:	jo     0x418b46
  418ae1:	outs   dx,BYTE PTR ds:[rsi]
  418ae2:	and    BYTE PTR [rcx+0x6e],ch
  418ae5:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
  418ae9:	gs and BYTE PTR fs:[rsi+0x69],ah
  418aee:	ins    BYTE PTR es:[rdi],dx
  418aef:	and    BYTE PTR gs:[rdi],ah
  418af2:	and    eax,0x61202773
  418af7:	je     0x418b19
  418af9:	ins    BYTE PTR es:[rdi],dx
  418afa:	imul   ebp,DWORD PTR [rsi+0x65],0x20642520
  418b01:	outs   dx,DWORD PTR ds:[rsi]
  418b02:	data16 and BYTE PTR [rsi+0x69],ah
  418b06:	ins    BYTE PTR es:[rdi],dx
  418b07:	and    BYTE PTR gs:[rdi],ah
  418b0a:	and    eax,0xa73
  418b0f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561c588
  418b15:	outs   dx,BYTE PTR ds:[rsi]
  418b16:	imul   esi,DWORD PTR [rax+riz*1+0x6e],0x20656d61
  418b1e:	ja     0x418b89
  418b20:	je     0x418b8a
  418b22:	outs   dx,DWORD PTR ds:[rsi]
  418b23:	jne    0x418b99
  418b25:	and    BYTE PTR [rcx+0x20],ah
  418b28:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
  418b30:	outs   dx,DWORD PTR ds:[rsi]
  418b31:	outs   dx,BYTE PTR ds:[rsi]
  418b32:	and    BYTE PTR [rcx+0x74],ah
  418b35:	and    BYTE PTR [rcx+rbp*2+0x6e],ch
  418b39:	and    BYTE PTR gs:[rip+0x666f2064],ah        # 0x66b0aba4
  418b40:	and    BYTE PTR [rsi+0x69],ah
  418b43:	ins    BYTE PTR es:[rdi],dx
  418b44:	and    BYTE PTR gs:[rdi],ah
  418b47:	and    eax,0xa2773
  418b4c:	and    eax,0x642573
  418b51:	and    BYTE PTR [rip+0x2f200073],ah        # 0x2f618bca
  418b57:	add    BYTE PTR [rip+0x3d200073],ah        # 0x3d618bd0
  418b5d:	and    BYTE PTR [rax],al
  418b5f:	add    BYTE PTR [rip+0x746e6973],ah        # 0x74aff4d8
  418b65:	gs jb  0x418bd8
  418b68:	outs   dx,DWORD PTR ds:[rsi]
  418b69:	ins    BYTE PTR es:[rdi],dx
  418b6a:	(bad)  
  418b6b:	je     0x418bd2
  418b6d:	and    BYTE PTR fs:[rcx+riz*2+0x62],dh
  418b72:	ins    BYTE PTR es:[rdi],dx
  418b73:	and    BYTE PTR gs:[rdi+0x69],dh
  418b77:	je     0x418be1
  418b79:	and    BYTE PTR [rax+0x6f],dh
  418b7c:	imul   ebp,DWORD PTR [rsi+0x74],0x9000a73
  418b83:	or     DWORD PTR [rax],esp
  418b85:	and    BYTE PTR [rax],ah
  418b87:	and    BYTE PTR [rax],al
  418b89:	and    eax,0x29002873
  418b8e:	and    BYTE PTR [rip+0x2a200020],bh        # 0x2a618bb4
  418b94:	add    BYTE PTR [rax],ah
  418b96:	and    eax,0x25000a73
  418b9b:	jae    0x418bc2
  418b9d:	jae    0x418bc7
  418b9f:	and    eax,0x3d202973
  418ba4:	and    BYTE PTR [rip+0x25000a73],ah        # 0x2541961d
  418baa:	jae    0x418c21
  418bac:	outs   dx,BYTE PTR ds:[rsi]
  418bad:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x2c747369
  418bb5:	and    BYTE PTR [rax],al
  418bb7:	xor    DWORD PTR [rax],eax
  418bb9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  418bbc:	outs   dx,WORD PTR ds:[rsi]
  418bbe:	jb     0x418c2d
  418bc0:	(bad)  
  418bc1:	(bad)  
  418bc2:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x72652079
  418bca:	jb     0x418c3b
  418bcc:	jb     0x418bce
  418bce:	add    BYTE PTR [rax],al
  418bd0:	cmp    ah,BYTE PTR [rax]
  418bd2:	movsxd ebp,DWORD PTR [rdi+0x6e]
  418bd5:	jbe    0x418c3c
  418bd7:	jb     0x418c4c
  418bd9:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  418be0:	jne    0x418c4b
  418be2:	jb     0x418c49
  418be4:	jae    0x418c06
  418be6:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  418bee:	outs   dx,BYTE PTR ds:[rsi]
  418bef:	jae    0x418c11
  418bf1:	outs   dx,DWORD PTR ds:[rsi]
  418bf2:	data16 and BYTE PTR [rdi],ah
  418bf5:	and    eax,0xa2773
  418bfa:	or     DWORD PTR [rip+0x203d2073],esp        # 0x207eac73
  418c00:	add    BYTE PTR [rdx],cl
  418c02:	or     DWORD PTR [rip+0x203d2073],esp        # 0x207eac7b
  418c08:	add    BYTE PTR [rdx],cl
  418c0a:	or     DWORD PTR [rax],eax
  418c0c:	add    BYTE PTR [rax],al
  418c0e:	add    BYTE PTR [rax],al
  418c10:	push   rsi
  418c11:	(bad)  
  418c12:	ins    BYTE PTR es:[rdi],dx
  418c13:	jne    0x418c7a
  418c15:	and    BYTE PTR [rdi],ah
  418c17:	and    eax,0x69202773
  418c1c:	jae    0x418c3e
  418c1e:	outs   dx,BYTE PTR ds:[rsi]
  418c1f:	outs   dx,DWORD PTR ds:[rsi]
  418c20:	je     0x418c42
  418c22:	imul   ebp,DWORD PTR [rsi+0x20],0x20656874
  418c29:	data16 jne 0x418c9a
  418c2c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  418c30:	outs   dx,BYTE PTR ds:[rsi]
  418c31:	(bad)  
  418c32:	jae    0x418c54
  418c34:	jb     0x418c97
  418c36:	outs   dx,BYTE PTR ds:[rsi]
  418c37:	or     al,BYTE PTR gs:[eax]
  418c3b:	add    BYTE PTR [rax],al
  418c3d:	add    BYTE PTR [rax],al
  418c3f:	add    BYTE PTR [rsi+0x75],al
  418c42:	outs   dx,BYTE PTR ds:[rsi]
  418c43:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  418c47:	outs   dx,BYTE PTR ds:[rsi]
  418c48:	and    BYTE PTR [rbp+0x76],ah
  418c4b:	(bad)  
  418c4c:	ins    BYTE PTR es:[rdi],dx
  418c4d:	jne    0x418cb0
  418c4f:	je     0x418cba
  418c51:	outs   dx,DWORD PTR ds:[rsi]
  418c52:	outs   dx,BYTE PTR ds:[rsi]
  418c53:	and    BYTE PTR [rbp+0x72],ah
  418c56:	jb     0x418cc7
  418c58:	jb     0x418c7a
  418c5a:	sub    BYTE PTR [rdx+0x61],ah
  418c5d:	and    BYTE PTR fs:[rsi+0x75],ah
  418c61:	outs   dx,BYTE PTR ds:[rsi]
  418c62:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  418c66:	outs   dx,BYTE PTR ds:[rsi]
  418c67:	and    BYTE PTR [rbp+riz*2+0x66],ah
  418c6b:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  418c72:	sub    DWORD PTR [rdx],ecx
  418c74:	add    BYTE PTR [rcx],cl
  418c76:	and    eax,0x203d2073
  418c7b:	and    eax,0x63002873
  418c80:	outs   dx,DWORD PTR ds:[rsi]
  418c81:	outs   dx,BYTE PTR ds:[rsi]
  418c82:	outs   dx,WORD PTR ds:[rsi]
  418c84:	jb     0x418cf3
  418c86:	(bad)  
  418c87:	(bad)  
  418c88:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x72652079
  418c90:	jb     0x418d01
  418c92:	jb     0x418c9e
  418c94:	add    BYTE PTR [rbp+0x61],ch
  418c97:	js     0x418c99
  418c99:	add    BYTE PTR [rax],al
  418c9b:	add    BYTE PTR [rax],al
  418c9d:	add    BYTE PTR [rax],al
  418c9f:	add    BYTE PTR [rip+0x69203a73],ah        # 0x6961c718
  418ca5:	outs   dx,BYTE PTR ds:[rsi]
  418ca6:	jbe    0x418d09
  418ca8:	ins    BYTE PTR es:[rdi],dx
  418ca9:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x696e6769
  418cb1:	imul   sp,WORD PTR [rbx+0x61],0x746e
  418cb7:	and    BYTE PTR [rcx+rbp*2+0x67],ah
  418cbb:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x29732528
  418cc3:	sub    eax,0x746e692d
  418cc8:	gs addr32 gs jb 0x418ced
  418ccd:	jbe    0x418d30
  418ccf:	ins    BYTE PTR es:[rdi],dx
  418cd0:	jne    0x418d37
  418cd2:	and    BYTE PTR [rdi+0x72],ch
  418cd5:	and    BYTE PTR [rdi],ah
  418cd7:	ins    DWORD PTR es:[rdi],dx
  418cd8:	(bad)  
  418cd9:	js     0x418d02
  418cdb:	and    BYTE PTR [rdx+0x65],dh
  418cde:	jno    0x418d55
  418ce0:	imul   esi,DWORD PTR [rdx+0x65],0xa64
  418ce7:	add    BYTE PTR [rip+0x6e203a73],ah        # 0x6e61c760
  418ced:	jne    0x418d5c
  418cef:	(bad)  
  418cf0:	gs jb  0x418d13
  418cf3:	outs   dx,DWORD PTR ds:[rsi]
  418cf4:	data16 and BYTE PTR [rbx+0x69],dh
  418cf8:	outs   dx,BYTE PTR ds:[esi]
  418cfa:	imul   esp,DWORD PTR [rsi+0x69],0x746e6163
  418d01:	and    BYTE PTR [rcx+rbp*2+0x67],ah
  418d05:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x7473756d
  418d0d:	and    BYTE PTR [rdx+0x65],ah
  418d10:	and    BYTE PTR [rax+0x6f],dh
  418d13:	jae    0x418d7e
  418d15:	je     0x418d80
  418d17:	jbe    0x418d7e
  418d19:	or     al,BYTE PTR [rax]
  418d1b:	add    BYTE PTR [rax],al
  418d1d:	add    BYTE PTR [rax],al
  418d1f:	add    BYTE PTR [rip+0x74203a73],ah        # 0x7461c798
  418d25:	outs   dx,DWORD PTR ds:[rsi]
  418d26:	outs   dx,DWORD PTR ds:[rsi]
  418d27:	and    BYTE PTR [rbp+0x61],ch
  418d2a:	outs   dx,BYTE PTR ds:[rsi]
  418d2b:	jns    0x418d4d
  418d2d:	jae    0x418d98
  418d2f:	outs   dx,BYTE PTR ds:[esi]
  418d31:	imul   esp,DWORD PTR [rsi+0x69],0x746e6163
  418d38:	and    BYTE PTR [rcx+rbp*2+0x67],ah
  418d3c:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x29642528
  418d44:	sub    eax,0x6973752d
  418d49:	outs   dx,BYTE PTR ds:[rsi]
  418d4a:	and    BYTE PTR [ebp+0x61],ch
  418d4e:	js     0x418db9
  418d50:	ins    DWORD PTR es:[rdi],dx
  418d51:	jne    0x418dc0
  418d53:	and    BYTE PTR [rsi+0x61],dh
  418d56:	ins    BYTE PTR es:[rdi],dx
  418d57:	jne    0x418dbe
  418d59:	and    BYTE PTR [rax],ch
  418d5b:	and    eax,0xa2964
  418d60:	rex.RB
  418d61:	add    BYTE PTR gs:[rax],ch
  418d64:	jae    0x418dcb
  418d66:	je     0x418dd6
  418d68:	jne    0x418dd7
  418d6a:	outs   dx,WORD PTR ds:[rsi]
  418d6c:	jb     0x418ddb
  418d6e:	(bad)  
  418d6f:	je     0x418d9a
  418d71:	add    BYTE PTR [rip+0x64252e25],ah        # 0x6466bb9c
  418d77:	and    eax,0x70280063
  418d7c:	(bad)  
  418d7d:	jb     0x418df2
  418d7f:	outs   dx,BYTE PTR gs:[rsi]
  418d81:	jne    0x418df0
  418d83:	outs   dx,WORD PTR ds:[rsi]
  418d85:	jb     0x418df4
  418d87:	(bad)  
  418d88:	je     0x418db3
  418d8a:	add    BYTE PTR [rip+0x46312e],ah        # 0x87bebe
  418d90:	and    eax,0x78300061
  418d95:	xor    DWORD PTR [rax+0x2b],esi
  418d98:	xor    DWORD PTR [rax],eax
  418d9a:	and    eax,0x66302e27
  418d9f:	add    BYTE PTR [rip+0x6e203a73],ah        # 0x6e61c818
  418da5:	jne    0x418e14
  418da7:	(bad)  
  418da8:	gs jb  0x418dcb
  418dab:	outs   dx,WORD PTR ds:[rsi]
  418dad:	jb     0x418e1c
  418daf:	(bad)  
  418db0:	je     0x418dd2
  418db2:	jae    0x418e24
  418db4:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  418db8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  418dbf:	and    BYTE PTR [rbp+0x75],ch
  418dc2:	jae    0x418e38
  418dc4:	and    BYTE PTR [rbx+0x74],dh
  418dc7:	(bad)  
  418dc8:	jb     0x418e3e
  418dca:	and    BYTE PTR [rdi+0x69],dh
  418dcd:	je     0x418e37
  418dcf:	and    BYTE PTR [rdi],ah
  418dd1:	and    eax,0xa2725
  418dd6:	add    BYTE PTR [rax],al
  418dd8:	and    eax,0x6f203a73
  418ddd:	outs   dx,BYTE PTR ds:[rsi]
  418dde:	ins    BYTE PTR es:[rdi],dx
  418ddf:	jns    0x418e01
  418de1:	outs   dx,DWORD PTR ds:[rsi]
  418de2:	outs   dx,BYTE PTR ds:[rsi]
  418de3:	and    BYTE PTR gs:[rdi],ah
  418de6:	and    eax,0x61202725
  418deb:	ins    BYTE PTR es:[rdi],dx
  418dec:	ins    BYTE PTR es:[rdi],dx
  418ded:	outs   dx,DWORD PTR ds:[rsi]
  418dee:	ja     0x418e55
  418df0:	and    BYTE PTR fs:[rcx+0x6e],ch
  418df4:	and    BYTE PTR [rsi+0x75],ch
  418df7:	ins    DWORD PTR es:[rdi],dx
  418df8:	(bad)  
  418df9:	gs jb  0x418e1c
  418dfc:	outs   dx,WORD PTR ds:[rsi]
  418dfe:	jb     0x418e6d
  418e00:	(bad)  
  418e01:	je     0x418e23
  418e03:	jae    0x418e75
  418e05:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  418e09:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  418e10:	or     al,BYTE PTR [rax]
  418e12:	add    BYTE PTR [rax],al
  418e14:	add    BYTE PTR [rax],al
  418e16:	add    BYTE PTR [rax],al
  418e18:	and    eax,0x6f203a73
  418e1d:	outs   dx,BYTE PTR ds:[rsi]
  418e1e:	ins    BYTE PTR es:[rdi],dx
  418e1f:	jns    0x418e41
  418e21:	outs   dx,DWORD PTR ds:[rsi]
  418e22:	outs   dx,BYTE PTR ds:[rsi]
  418e23:	and    BYTE PTR gs:[rdi],ah
  418e26:	cs (bad) 
  418e28:	and    BYTE PTR [rcx+0x6c],ah
  418e2b:	ins    BYTE PTR es:[rdi],dx
  418e2c:	outs   dx,DWORD PTR ds:[rsi]
  418e2d:	ja     0x418e94
  418e2f:	and    BYTE PTR fs:[rcx+0x6e],ch
  418e33:	and    BYTE PTR [rsi+0x75],ch
  418e36:	ins    DWORD PTR es:[rdi],dx
  418e37:	(bad)  
  418e38:	gs jb  0x418e5b
  418e3b:	outs   dx,WORD PTR ds:[rsi]
  418e3d:	jb     0x418eac
  418e3f:	(bad)  
  418e40:	je     0x418e62
  418e42:	jae    0x418eb4
  418e44:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  418e48:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  418e4f:	or     al,BYTE PTR [rax]
  418e51:	add    BYTE PTR [rax],al
  418e53:	add    BYTE PTR [rax],al
  418e55:	add    BYTE PTR [rax],al
  418e57:	add    BYTE PTR [rip+0x64203a73],ah        # 0x6461c8d0
  418e5d:	imul   esp,DWORD PTR [rdi+0x69],0x72672d74
  418e64:	outs   dx,DWORD PTR ds:[rsi]
  418e65:	jne    0x418ed7
  418e67:	imul   ebp,DWORD PTR [rsi+0x67],0x616c6620
  418e6e:	and    BYTE PTR [eax],ch
  418e71:	(bad)  
  418e72:	sub    DWORD PTR [rax],esp
  418e74:	outs   dx,BYTE PTR ds:[rsi]
  418e75:	outs   dx,DWORD PTR ds:[rsi]
  418e76:	je     0x418e98
  418e78:	jae    0x418eef
  418e7a:	jo     0x418eec
  418e7c:	outs   dx,DWORD PTR ds:[rsi]
  418e7d:	jb     0x418ef3
  418e7f:	gs or  al,BYTE PTR fs:[rax]
  418e83:	sub    ebp,DWORD PTR [rip+0x27302023]        # 0x2771aeac
  418e89:	add    BYTE PTR [rax+0x68],ch
  418e8c:	add    BYTE PTR [rsp+rbp*2+0x0],ch
  418e90:	and    eax,0x74203a73
  418e95:	jns    0x418f07
  418e97:	and    BYTE PTR gs:[rbp+riz*2+0x6e],ch
  418e9c:	addr32 je 0x418f07
  418e9f:	and    BYTE PTR [rbp+0x6f],ch
  418ea2:	imul   esp,DWORD PTR fs:[rsi+0x69],0x28207265
  418eaa:	and    eax,0x2973322e
  418eaf:	and    BYTE PTR [rsi+0x6f],ch
  418eb2:	je     0x418ed4
  418eb4:	jae    0x418f2b
  418eb6:	jo     0x418f28
  418eb8:	outs   dx,DWORD PTR ds:[rsi]
  418eb9:	jb     0x418f2f
  418ebb:	gs or  al,BYTE PTR fs:[rax]
  418ebf:	push   0x746c4c6a
  418ec4:	jp     0x418ec6
  418ec6:	add    BYTE PTR [rax],al
  418ec8:	and    eax,0x74203a73
  418ecd:	jns    0x418f3f
  418ecf:	and    BYTE PTR gs:[rbp+riz*2+0x6e],ch
  418ed4:	addr32 je 0x418f3f
  418ed7:	and    BYTE PTR [rbp+0x6f],ch
  418eda:	imul   esp,DWORD PTR fs:[rsi+0x69],0x28207265
  418ee2:	and    eax,0x6e202963
  418ee7:	outs   dx,DWORD PTR ds:[rsi]
  418ee8:	je     0x418f0a
  418eea:	jae    0x418f61
  418eec:	jo     0x418f5e
  418eee:	outs   dx,DWORD PTR ds:[rsi]
  418eef:	jb     0x418f65
  418ef1:	gs or  al,BYTE PTR fs:[rax]
  418ef5:	add    BYTE PTR [rax],al
  418ef7:	add    BYTE PTR [rcx+0x42],al
  418efa:	rex.XB
  418efb:	rex.R
  418efc:	rex.RB
  418efd:	rex.RX
  418efe:	rex.RXB
  418eff:	rex.W
  418f00:	rex.WB
  418f01:	rex.WX
  418f02:	rex.WXB
  418f03:	rex.WR
  418f04:	rex.WRB
  418f05:	rex.WRX
  418f06:	rex.WRXB push r8
  418f08:	push   rcx
  418f09:	push   rdx
  418f0a:	push   rbx
  418f0b:	push   rsp
  418f0c:	push   rbp
  418f0d:	push   rsi
  418f0e:	push   rdi
  418f0f:	pop    rax
  418f10:	pop    rcx
  418f11:	pop    rax
  418f12:	(bad)  
  418f13:	(bad)
  418f18:	addr32 push 0x6c6b6a69
  418f1e:	ins    DWORD PTR es:[rdi],dx
  418f1f:	outs   dx,BYTE PTR ds:[rsi]
  418f20:	outs   dx,DWORD PTR ds:[rsi]
  418f21:	jo     0x418f94
  418f23:	jb     0x418f98
  418f25:	je     0x418f9c
  418f27:	jbe    0x418fa0
  418f29:	js     0x418fa4
  418f2b:	js     0x418f5b
  418f2d:	xor    BYTE PTR [rcx],dh
  418f2f:	xor    dh,BYTE PTR [rbx]
  418f31:	xor    al,0x35
  418f33:	ss (bad) 
  418f35:	cmp    BYTE PTR [rcx],bh
  418f37:	xor    BYTE PTR [rax],al
  418f39:	add    BYTE PTR [rax],al
  418f3b:	add    BYTE PTR [rax],al
  418f3d:	add    BYTE PTR [rax],al
  418f3f:	add    BYTE PTR [rip+0x69203a73],ah        # 0x6961c9b8
  418f45:	outs   dx,BYTE PTR ds:[rsi]
  418f46:	jbe    0x418fa9
  418f48:	ins    BYTE PTR es:[rdi],dx
  418f49:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
  418f51:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  418f55:	and    BYTE PTR [rax],ch
  418f57:	and    eax,0x69202963
  418f5c:	outs   dx,BYTE PTR ds:[rsi]
  418f5d:	and    BYTE PTR [rdi+0x69],dh
  418f60:	fs je  0x418fcb
  418f63:	sub    al,0x20
  418f65:	jo     0x418fd9
  418f67:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  418f6b:	imul   ebp,DWORD PTR [rdi+0x6e],0x726f202c
  418f72:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  418f76:	or     al,BYTE PTR gs:[rax]
  418f79:	add    BYTE PTR [rax],al
  418f7b:	add    BYTE PTR [rax],al
  418f7d:	add    BYTE PTR [rax],al
  418f7f:	add    BYTE PTR [rip+0x69203a73],ah        # 0x6961c9f8
  418f85:	outs   dx,BYTE PTR ds:[rsi]
  418f86:	jbe    0x418fe9
  418f88:	ins    BYTE PTR es:[rdi],dx
  418f89:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x65626d75
  418f91:	jb     0x418fb3
  418f93:	outs   dx,WORD PTR ds:[rsi]
  418f95:	jb     0x419004
  418f97:	(bad)  
  418f98:	je     0x418fba
  418f9a:	jae    0x41900c
  418f9c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  418fa0:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  418fa7:	and    BYTE PTR [rax],ch
  418fa9:	and    eax,0xa2973
  418fae:	add    BYTE PTR [rax],al
  418fb0:	and    eax,0x76203a73
  418fb5:	(bad)  
  418fb6:	ins    BYTE PTR es:[rdi],dx
  418fb7:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x69636570
  418fbf:	imul   sp,WORD PTR [rbx+0x61],0x6974
  418fc5:	outs   dx,DWORD PTR ds:[rsi]
  418fc6:	outs   dx,BYTE PTR ds:[rsi]
  418fc7:	and    BYTE PTR [rcx+0x73],ch
  418fca:	and    BYTE PTR [rip+0x6c665b25],ah        # 0x6ca7eaf5
  418fd0:	(bad)  
  418fd1:	addr32 jae 0x419031
  418fd4:	pop    rbx
  418fd5:	ja     0x419040
  418fd7:	fs je  0x419042
  418fda:	pop    rbp
  418fdb:	pop    rbx
  418fdc:	cs jo  0x419051
  418fdf:	movsxd ebp,DWORD PTR gs:[rcx+0x73]
  418fe3:	imul   ebp,DWORD PTR [rdi+0x6e],0x7079745d
  418fea:	or     al,BYTE PTR gs:[rax]
  418fed:	and    eax,0x6d203a73
  418ff2:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
  418ff9:	outs   dx,WORD PTR ds:[rsi]
  418ffb:	jb     0x41906a
  418ffd:	(bad)  
  418ffe:	je     0x419020
  419000:	je     0x41907b
  419002:	jo     0x419069
  419004:	or     al,BYTE PTR [rax]
  419006:	add    BYTE PTR [rax],al
  419008:	and    eax,0x69203a73
  41900d:	outs   dx,BYTE PTR ds:[rsi]
  41900e:	jbe    0x419071
  419010:	ins    BYTE PTR es:[rdi],dx
  419011:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x61726168
  419019:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  41901d:	sub    BYTE PTR [rbx+0x29],dh
  419020:	and    BYTE PTR [rax],ch
  419022:	and    eax,0x61202973
  419027:	data16 je 0x41908f
  41902a:	jb     0x41904c
  41902c:	outs   dx,WORD PTR ds:[rsi]
  41902e:	jb     0x41909d
  419030:	(bad)  
  419031:	je     0x419053
  419033:	je     0x4190ae
  419035:	jo     0x41909c
  419037:	or     al,BYTE PTR [rax]
  419039:	add    BYTE PTR [rax],al
  41903b:	add    BYTE PTR [rax],al
  41903d:	add    BYTE PTR [rax],al
  41903f:	add    BYTE PTR [rip+0x69203a73],ah        # 0x6961cab8
  419045:	outs   dx,BYTE PTR ds:[rsi]
  419046:	jbe    0x4190a9
  419048:	ins    BYTE PTR es:[rdi],dx
  419049:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x616d726f
  419051:	je     0x419073
  419053:	je     0x4190ce
  419055:	jo     0x4190bc
  419057:	and    BYTE PTR [rax],ch
  419059:	and    eax,0x2d2d2963
  41905e:	jbe    0x4190c1
  419060:	ins    BYTE PTR es:[rdi],dx
  419061:	imul   esp,DWORD PTR [rax+riz*1+0x74],0x73657079
  419069:	and    BYTE PTR [rcx+0x72],ah
  41906c:	and    BYTE PTR gs:[rbx+0x25],bl
  419070:	jae    0x4190cf
  419072:	or     al,BYTE PTR [rax]
  419074:	rex.RX
  419075:	data16 rex.RXB
  419077:	add    BYTE PTR [eax],ch
  41907a:	jb     0x4190eb
  41907c:	jne    0x4190ec
  41907e:	fs pop rdi
  419080:	je     0x4190f1
  419082:	pop    rdi
  419083:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6579616c
  41908b:	sub    DWORD PTR fs:[rax],eax
  41908e:	xor    DWORD PTR [rdx],esi
  419090:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  419097:	xor    BYTE PTR [rax],al
  419099:	rex.RX
  41909a:	data16 add BYTE PTR [rax],ah
  41909d:	sub    BYTE PTR [rip+0x31002973],ah        # 0x3141ba16
  4190a3:	jl     0x4190a5
  4190a5:	and    BYTE PTR [rdx],ch
  4190a7:	and    BYTE PTR [rip+0x2d2b0073],ah        # 0x2d6c9120
  4190ad:	add    BYTE PTR [rcx],dh
  4190af:	and    BYTE PTR [rdi],ch
  4190b1:	and    BYTE PTR [rax],al
  4190b3:	xor    DWORD PTR [rax],esp
  4190b5:	(bad)  
  4190b6:	and    BYTE PTR [rax],ch
  4190b8:	add    BYTE PTR [rcx],ch
  4190ba:	add    BYTE PTR [rdx+0x65],dh
  4190bd:	movsxd ebp,DWORD PTR [rcx+0x70]
  4190c0:	jb     0x419131
  4190c2:	movsxd esp,DWORD PTR [rcx+0x6c]
  4190c5:	and    BYTE PTR [rbx+0x6f],ah
  4190c8:	outs   dx,BYTE PTR ds:[rsi]
  4190c9:	jbe    0x419130
  4190cb:	jb     0x419140
  4190cd:	imul   ebp,DWORD PTR [rdi+0x6e],0x2a09000a
  4190d4:	and    BYTE PTR [rax],al
  4190d6:	or     cl,BYTE PTR [rcx]
  4190d8:	and    eax,0x25732573
  4190dd:	jae    0x4190ff
  4190df:	cmp    eax,0x20312820
  4190e4:	(bad)  
  4190e5:	and    BYTE PTR [rax],al
  4190e7:	or     cl,BYTE PTR [rcx]
  4190e9:	(bad)  
  4190ea:	and    BYTE PTR [rax],al
  4190ec:	or     DWORD PTR [rip+0x25732573],esp        # 0x25b4b665
  4190f2:	jae    0x419114
  4190f4:	cmp    eax,0x6f640020
  4190f9:	imul   ebp,DWORD PTR [rsi+0x67],0x6e756620
  419100:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  419104:	outs   dx,BYTE PTR ds:[rsi]
  419105:	and    BYTE PTR [rdi],ah
  419107:	and    eax,0xa2773
  41910c:	add    BYTE PTR [rax],al
  41910e:	add    BYTE PTR [rax],al
  419110:	push   rsp
  419111:	(bad)  
  419112:	(bad)  
  419113:	ins    BYTE PTR es:[rdi],dx
  419114:	and    BYTE PTR gs:[rdi],ah
  419117:	and    eax,0x68202773
  41911c:	(bad)  
  41911d:	jae    0x41913f
  41911f:	outs   dx,DWORD PTR ds:[rsi]
  419120:	outs   dx,BYTE PTR ds:[rsi]
  419121:	ins    BYTE PTR es:[rdi],dx
  419122:	jns    0x419144
  419124:	outs   dx,DWORD PTR ds:[rsi]
  419125:	outs   dx,BYTE PTR ds:[rsi]
  419126:	and    BYTE PTR gs:[rcx+riz*2+0x74],ah
  41912b:	(bad)  
  41912c:	and    BYTE PTR [rax+0x6f],dh
  41912f:	imul   ebp,DWORD PTR [rsi+0x74],0xa
  419136:	add    BYTE PTR [rax],al
  419138:	push   rsp
  419139:	(bad)  
  41913a:	(bad)  
  41913b:	ins    BYTE PTR es:[rdi],dx
  41913c:	and    BYTE PTR gs:[rdi],ah
  41913f:	and    eax,0x6c202773
  419144:	(bad)  
  419145:	movsxd ebp,DWORD PTR [rbx+0x73]
  419148:	and    BYTE PTR [rbp+0x6e],dh
  41914b:	imul   esi,DWORD PTR [rcx+0x75],0x6e692065
  419152:	jbe    0x4191b9
  419154:	jb     0x4191c9
  419156:	and    BYTE PTR gs:[rcx+0x72],ah
  41915a:	outs   dx,DWORD PTR ds:[rsi]
  41915b:	jne    0x4191cb
  41915d:	and    BYTE PTR fs:[rbp+0x6e],ah
  419161:	je     0x4191d5
  419163:	jns    0x419185
  419165:	and    eax,0xa67382e
  41916a:	add    BYTE PTR [rax],al
  41916c:	add    BYTE PTR [rax],al
  41916e:	add    BYTE PTR [rax],al
  419170:	rex.RX jne 0x4191e1
  419173:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  419177:	outs   dx,BYTE PTR ds:[rsi]
  419178:	and    BYTE PTR [rdi],ah
  41917a:	and    eax,0x68202773
  41917f:	(bad)  
  419180:	jae    0x4191a2
  419182:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  419189:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  41918d:	and    BYTE PTR gs:[rdi],ah
  419190:	and    eax,0xa2773
  419195:	imul   esp,DWORD PTR [rdi+0x5e],0x33
  419199:	add    BYTE PTR [rax],al
  41919b:	add    BYTE PTR [rax],al
  41919d:	add    BYTE PTR [rax],al
  41919f:	add    BYTE PTR [rbp+0x72],al
  4191a2:	jb     0x419213
  4191a4:	jb     0x4191c6
  4191a6:	imul   ebp,DWORD PTR [rsi+0x20],0x69666564
  4191ad:	outs   dx,BYTE PTR ds:[rsi]
  4191ae:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x7325206e
  4191b6:	sub    BYTE PTR [rip+0x61202973],ah        # 0x6161bb2f
  4191bc:	jae    0x4191de
  4191be:	(bad)  
  4191bf:	and    eax,0xa2773
  4191c4:	add    BYTE PTR [rax],al
  4191c6:	add    BYTE PTR [rax],al
  4191c8:	rex.R
  4191c9:	imul   bp,WORD PTR gs:[rsi+0x69],0x6974
  4191d0:	outs   dx,DWORD PTR ds:[rsi]
  4191d1:	outs   dx,BYTE PTR ds:[rsi]
  4191d2:	and    BYTE PTR [rip+0x73252873],ah        # 0x7366ba4b
  4191d8:	sub    DWORD PTR [rax],esp
  4191da:	(bad)  
  4191db:	jae    0x4191fd
  4191dd:	(bad)  
  4191de:	and    eax,0x69202773
  4191e3:	jae    0x419205
  4191e5:	imul   esi,DWORD PTR [rdx+0x72],0x63756465
  4191ec:	imul   esp,DWORD PTR [rdx+0x6c],0xa65
  4191f3:	add    BYTE PTR [rax],al
  4191f5:	add    BYTE PTR [rax],al
  4191f7:	add    BYTE PTR [rdi+0x61],dl
  4191fa:	jb     0x41926a
  4191fc:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6e203a
  419203:	and    BYTE PTR [rcx+0x6e],ch
  419206:	jbe    0x41926d
  419208:	jb     0x41927d
  41920a:	and    BYTE PTR gs:[rsi+0x6f],ah
  41920e:	jb     0x419230
  419210:	data16 jne 0x419281
  419213:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  419217:	outs   dx,BYTE PTR ds:[rsi]
  419218:	and    BYTE PTR [rdi],ah
  41921a:	and    eax,0xa2773
  41921f:	add    BYTE PTR [rbp+0x72],al
  419222:	jb     0x419293
  419224:	jb     0x419246
  419226:	imul   ebp,DWORD PTR [rsi+0x20],0x65766e69
  41922d:	jb     0x4192a2
  41922f:	and    BYTE PTR gs:[rsi+0x25],bh
  419233:	jae    0x41925d
  419235:	and    eax,0x61202973
  41923a:	jae    0x41925c
  41923c:	(bad)  
  41923d:	and    eax,0xa2773
  419242:	add    BYTE PTR [rax],al
  419244:	add    BYTE PTR [rax],al
  419246:	add    BYTE PTR [rax],al
  419248:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41924a:	jbe    0x4192b1
  41924c:	jb     0x4192c1
  41924e:	and    BYTE PTR gs:[rcx+0x73],ch
  419252:	and    BYTE PTR [rsi+0x6f],ch
  419255:	je     0x419277
  419257:	je     0x4192c1
  419259:	and    BYTE PTR gs:[rcx+0x6e],ch
  41925d:	jbe    0x4192c4
  41925f:	jb     0x4192d4
  419261:	and    BYTE PTR gs:[rsi+0x6f],ah
  419265:	jb     0x419287
  419267:	data16 jne 0x4192d8
  41926a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41926e:	outs   dx,BYTE PTR ds:[rsi]
  41926f:	and    BYTE PTR [rdi],ah
  419271:	and    eax,0xa2773
  419276:	add    BYTE PTR [rax],al
  419278:	and    eax,0x6d203a73
  41927d:	gs ins DWORD PTR es:[rdi],dx
  41927f:	outs   dx,DWORD PTR ds:[rsi]
  419280:	jb     0x4192fb
  419282:	and    BYTE PTR [rcx+0x6c],ah
  419285:	ins    BYTE PTR es:[rdi],dx
  419286:	outs   dx,DWORD PTR ds:[rsi]
  419287:	movsxd esp,DWORD PTR [rcx+0x74]
  41928a:	imul   ebp,DWORD PTR [rdi+0x6e],0x72726520
  419291:	outs   dx,DWORD PTR ds:[rsi]
  419292:	jb     0x4192b4
  419294:	sub    BYTE PTR [rcx+0x64],ah
  419297:	fs je  0x419309
  41929a:	ins    BYTE PTR es:[rdi],dx
  41929b:	imul   esi,DWORD PTR [rbx+0x74],0x3c000a29
  4192a2:	jo     0x419316
  4192a4:	imul   ebp,DWORD PTR [rbp+0x69],0x65766974
  4192ab:	and    BYTE PTR [rbp+0x6e],dh
  4192ae:	imul   esi,DWORD PTR [rsi+rdi*1+0x0],0x79727428
  4192b6:	(bad)  
  4192b7:	ins    BYTE PTR es:[rdi],dx
  4192b8:	ins    BYTE PTR es:[rdi],dx
  4192b9:	jne    0x419329
  4192bb:	imul   esi,DWORD PTR [rbx+rsi*2+0x29],0x69703c00
  4192c3:	movsxd esp,DWORD PTR gs:[rbp+0x77]
  4192c7:	imul   esi,DWORD PTR [rbx+0x65],0x6e696c20
  4192ce:	gs (bad) 
  4192d0:	jb     0x419310
  4192d2:	add    BYTE PTR [rsi+rbp*2],bh
  4192d5:	outs   dx,DWORD PTR ds:[rsi]
  4192d6:	outs   dx,BYTE PTR ds:[rsi]
  4192d7:	ins    BYTE PTR es:[rdi],dx
  4192d8:	imul   ebp,DWORD PTR [rsi+0x65],0x3e7261
  4192df:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4192e1:	and    BYTE PTR [rbp+0x61],ch
  4192e4:	je     0x419349
  4192e6:	push   0x20676e69
  4192eb:	jne    0x41935b
  4192ed:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x6e756f66
  4192f5:	fs or  al,BYTE PTR cs:[rax]
  4192f9:	ja     0x4192fb
  4192fb:	add    BYTE PTR [rax],al
  4192fd:	add    BYTE PTR [rax],al
  4192ff:	add    BYTE PTR [rbp+0x73],dl
  419302:	(bad)  
  419303:	cmp    ah,BYTE PTR gs:[eax]
  419307:	and    eax,0x6f5b2073
  41930c:	jo     0x419382
  41930e:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b205d73
  419315:	(bad)  
  419316:	data16 jb 0x419388
  419319:	ins    DWORD PTR es:[rdi],dx
  41931a:	sub    eax,0x74696e75
  41931f:	(bad)  
  419320:	and    BYTE PTR [rdi],ah
  419322:	je     0x419393
  419324:	sub    eax,0x74696e75
  419329:	(bad)  
  41932a:	pop    rbp
  41932b:	or     al,BYTE PTR [rax]
  41932d:	add    BYTE PTR [rax],al
  41932f:	add    BYTE PTR [rdx],cl
  419331:	rex.WRXB jo 0x4193a8
  419334:	imul   ebp,DWORD PTR [rdi+0x6e],0x200a3a73
  41933b:	and    BYTE PTR [rax],ah
  41933d:	and    BYTE PTR [rip+0x2d202c68],ch        # 0x2d61bfab
  419343:	sub    eax,0x706c6568
  419348:	and    BYTE PTR [rax],ah
  41934a:	and    BYTE PTR [rax],ah
  41934c:	and    BYTE PTR [rax],ah
  41934e:	and    BYTE PTR [rax],ah
  419350:	and    BYTE PTR [rax],ah
  419352:	and    BYTE PTR [rbx+0x68],dh
  419355:	outs   dx,DWORD PTR ds:[rsi]
  419356:	ja     0x419378
  419358:	je     0x4193c2
  41935a:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  419361:	and    BYTE PTR [rcx+0x6e],ah
  419364:	and    BYTE PTR fs:[rbp+0x78],ah
  419368:	imul   esi,DWORD PTR [rdx+rcx*1+0x20],0x2d202020
  419370:	movsxd ebp,DWORD PTR [rax+riz*1]
  419373:	sub    eax,0x6568632d
  419378:	movsxd ebp,DWORD PTR [rbx+0x20]
  41937b:	and    BYTE PTR [rax],ah
  41937d:	and    BYTE PTR [rax],ah
  41937f:	and    BYTE PTR [rax],ah
  419381:	and    BYTE PTR [rax],ah
  419383:	and    BYTE PTR [rbx+0x68],ah
  419386:	movsxd ebp,DWORD PTR gs:[rbx+0x20]
  41938a:	je     0x4193f4
  41938c:	(bad)  
  41938d:	je     0x4193af
  41938f:	(bad)  
  419390:	ins    BYTE PTR es:[rdi],dx
  419391:	ins    BYTE PTR es:[rdi],dx
  419392:	and    BYTE PTR [rbp+0x6e],dh
  419395:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x75646572
  41939d:	movsxd esp,DWORD PTR [rbp+0x20]
  4193a0:	je     0x419411
  4193a2:	and    BYTE PTR [rax+0x72],dh
  4193a5:	imul   ebp,DWORD PTR [rbp+0x69],0x65766974
  4193ac:	and    BYTE PTR [rbp+0x6e],dh
  4193af:	imul   esi,DWORD PTR [rbx+rsi*2+0xa],0x20202020
  4193b7:	and    BYTE PTR [rax],ah
  4193b9:	and    BYTE PTR [rax],ah
  4193bb:	sub    eax,0x6568632d
  4193c0:	movsxd ebp,DWORD PTR [rbx+0x2d]
  4193c3:	jbe    0x41942a
  4193c5:	jb     0x419429
  4193c7:	outs   dx,DWORD PTR ds:[rsi]
  4193c8:	jae    0x41942f
  4193ca:	and    BYTE PTR [rax],ah
  4193cc:	ins    BYTE PTR es:[rdi],dx
  4193cd:	imul   ebp,DWORD PTR [rbx+0x65],0x632d2d20
  4193d4:	push   0x2c6b6365
  4193d9:	and    BYTE PTR [rdx+0x75],ah
  4193dc:	je     0x4193fe
  4193de:	ins    BYTE PTR es:[rdi],dx
  4193df:	imul   esi,DWORD PTR [rbx+0x74],0x6e752073
  4193e6:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x74207361
  4193ee:	push   0x61207965
  4193f3:	jb     0x41945a
  4193f5:	and    BYTE PTR [rbx+0x68],ah
  4193f8:	movsxd ebp,DWORD PTR gs:[rbx+0x65]
  4193fc:	or     ah,BYTE PTR fs:[rax]
  4193ff:	and    BYTE PTR [rax],ah
  419401:	and    BYTE PTR [rax],ah
  419403:	and    BYTE PTR [rax],ah
  419405:	and    BYTE PTR [rip+0x7265762d],ch        # 0x72a70a38
  41940b:	(bad)  
  41940c:	outs   dx,DWORD PTR ds:[rsi]
  41940d:	jae    0x419474
  41940f:	sub    eax,0x63656863
  419414:	imul   esp,DWORD PTR [rax],0x20
  419417:	and    BYTE PTR [rax],ah
  419419:	jae    0x41948a
  41941b:	and    BYTE PTR [rcx+0x6f],bh
  41941e:	jne    0x419440
  419420:	movsxd esp,DWORD PTR [rcx+0x6e]
  419423:	and    BYTE PTR [rsi+0x69],ah
  419426:	outs   dx,BYTE PTR ds:[rsi]
  419427:	and    BYTE PTR fs:[rbp+0x6e],dh
  41942b:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x74616874
  419433:	and    BYTE PTR [rbx+0x61],ah
  419436:	jne    0x4194ab
  419438:	and    BYTE PTR gs:[rbp+0x6e],ah
  41943c:	fs ins BYTE PTR es:[rdi],dx
  41943e:	gs jae 0x4194b4
  419441:	and    BYTE PTR [rdi+rbp*2+0x6f],ch
  419445:	jo     0x4194ba
  419447:	or     ah,BYTE PTR [rax]
  419449:	and    BYTE PTR [rax],ah
  41944b:	and    BYTE PTR [rip+0x2d202c64],ch        # 0x2d61c0b5
  419451:	sub    eax,0x69676964
  419456:	je     0x4194cb
  419458:	and    BYTE PTR [rax],ah
  41945a:	and    BYTE PTR [rax],ah
  41945c:	and    BYTE PTR [rax],ah
  41945e:	and    BYTE PTR [rax],ah
  419460:	and    BYTE PTR [rbx+0x68],dh
  419463:	outs   dx,DWORD PTR ds:[rsi]
  419464:	ja     0x419486
  419466:	outs   dx,DWORD PTR ds:[rsi]
  419467:	jne    0x4194dd
  419469:	jo     0x4194e0
  41946b:	je     0x41948d
  41946d:	je     0x4194de
  41946f:	and    BYTE PTR [rbx+0x70],dh
  419472:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  419476:	imul   esp,DWORD PTR [rbp+0x64],0x6d756e20
  41947d:	(bad)  
  41947e:	gs jb  0x4194a1
  419481:	outs   dx,DWORD PTR ds:[rsi]
  419482:	data16 and BYTE PTR [rcx+rbp*2+0x67],ah
  419487:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x66656428
  41948f:	(bad)  
  419490:	jne    0x4194fe
  419492:	je     0x4194ce
  419494:	and    BYTE PTR [rip+0x200a2964],ah        # 0x204bbdfe
  41949a:	and    BYTE PTR [rax],ah
  41949c:	and    BYTE PTR [rip+0x2d202c65],ch        # 0x2d61c107
  4194a2:	sub    eax,0x6f707865
  4194a7:	outs   dx,BYTE PTR ds:[rsi]
  4194a8:	outs   dx,BYTE PTR gs:[rsi]
  4194aa:	je     0x419515
  4194ac:	(bad)  
  4194ad:	ins    BYTE PTR es:[rdi],dx
  4194ae:	and    BYTE PTR [rax],ah
  4194b0:	and    BYTE PTR [rax],ah
  4194b2:	gs js  0x419525
  4194b5:	outs   dx,DWORD PTR ds:[rsi]
  4194b6:	outs   dx,BYTE PTR ds:[rsi]
  4194b7:	outs   dx,BYTE PTR gs:[rsi]
  4194b9:	je     0x419524
  4194bb:	(bad)  
  4194bc:	ins    BYTE PTR es:[rdi],dx
  4194bd:	and    BYTE PTR [rsi+0x6f],ah
  4194c0:	jb     0x41952f
  4194c2:	(bad)  
  4194c3:	je     0x4194e5
  4194c5:	outs   dx,DWORD PTR ds:[rsi]
  4194c6:	jne    0x41953c
  4194c8:	jo     0x41953f
  4194ca:	je     0x4194d6
  4194cc:	and    BYTE PTR [rax],ah
  4194ce:	and    BYTE PTR [rax],ah
  4194d0:	sub    eax,0x2d202c66
  4194d5:	sub    eax,0x656c6966
  4194da:	and    BYTE PTR [rax],ah
  4194dc:	and    BYTE PTR [rax],ah
  4194de:	and    BYTE PTR [rax],ah
  4194e0:	and    BYTE PTR [rax],ah
  4194e2:	and    BYTE PTR [rax],ah
  4194e4:	and    BYTE PTR [rbx+0x70],dh
  4194e7:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4194eb:	jns    0x41950d
  4194ed:	(bad)  
  4194ee:	and    BYTE PTR [rbp+0x6e],dh
  4194f1:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x61746164
  4194f9:	and    BYTE PTR [rsi+0x69],ah
  4194fc:	ins    BYTE PTR es:[rdi],dx
  4194fd:	and    BYTE PTR gs:[rax],ch
  419500:	sub    eax,0x27272066
  419505:	and    BYTE PTR [rdi+rbp*2+0x61],ch
  419509:	fs jae 0x41952c
  41950c:	fs gs data16 (bad) 
  419510:	jne    0x41957e
  419512:	je     0x419534
  419514:	imul   bp,WORD PTR [rbp+riz*2+0x29],0x200a
  41951b:	and    BYTE PTR [rax],ah
  41951d:	and    BYTE PTR [rip+0x2d202c6c],ch        # 0x2d61c18f
  419523:	sub    eax,0x61636f6c
  419528:	ins    BYTE PTR es:[rdi],dx
  419529:	and    BYTE PTR gs:[rax],ah
  41952c:	and    BYTE PTR [rax],ah
  41952e:	and    BYTE PTR [rax],ah
  419530:	and    BYTE PTR [rax],ah
  419532:	and    BYTE PTR [rbx+0x70],dh
  419535:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  419539:	jns    0x41955b
  41953b:	(bad)  
  41953c:	and    BYTE PTR [rbp+riz*2+0x73],ah
  419540:	imul   esi,DWORD PTR [rdx+0x65],0x6f6c2064
  419547:	movsxd esp,DWORD PTR [rcx+0x6c]
  41954a:	or     ah,BYTE PTR gs:[rax]
  41954d:	and    BYTE PTR [rax],ah
  41954f:	and    BYTE PTR [rip+0x2d202c6d],ch        # 0x2d61c1c2
  419555:	sub    eax,0x756e696d
  41955a:	jae    0x41957c
  41955c:	and    BYTE PTR [rax],ah
  41955e:	and    BYTE PTR [rax],ah
  419560:	and    BYTE PTR [rax],ah
  419562:	and    BYTE PTR [rax],ah
  419564:	and    BYTE PTR [rbp+0x61],ch
  419567:	imul   esp,DWORD PTR [rbp+0x20],0x2d
  41956b:	and    BYTE PTR [rcx+0x6e],ch
  41956e:	je     0x4195df
  419570:	and    BYTE PTR [rcx+0x20],ah
  419573:	jae    0x4195ea
  419575:	(bad)  
  419576:	je     0x4195ea
  419578:	(bad)  
  419579:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41957d:	outs   dx,BYTE PTR ds:[rsi]
  41957e:	and    BYTE PTR [rdi+0x70],ch
  419581:	gs jb  0x4195e5
  419584:	je     0x4195f5
  419586:	jb     0x4195a8
  419588:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  41958c:	(bad)  
  41958d:	jne    0x4195fb
  41958f:	je     0x4195ba
  419591:	or     ah,BYTE PTR [rax]
  419593:	and    BYTE PTR [rax],ah
  419595:	and    BYTE PTR [rax],ah
  419597:	and    BYTE PTR [rax],ah
  419599:	and    BYTE PTR [rip+0x646c6f2d],ch        # 0x64ae04cc
  41959f:	jae    0x419615
  4195a1:	(bad)  
  4195a2:	jb     0x4195c4
  4195a4:	and    BYTE PTR [rax],ah
  4195a6:	and    BYTE PTR [rax],ah
  4195a8:	and    BYTE PTR [rax],ah
  4195aa:	and    BYTE PTR [rbp+0x73],dh
  4195ad:	and    BYTE PTR gs:[rdi+0x6c],ch
  4195b1:	and    BYTE PTR fs:[rdi],ah
  4195b4:	sub    ah,BYTE PTR [rdi]
  4195b6:	and    BYTE PTR [rax+0x72],dh
  4195b9:	movsxd esp,DWORD PTR gs:[rbp+0x64]
  4195bd:	outs   dx,BYTE PTR gs:[rsi]
  4195bf:	movsxd esp,DWORD PTR [rbp+0x2c]
  4195c2:	and    BYTE PTR [rax+0x69],ch
  4195c5:	addr32 push 0x74207265
  4195cb:	push   0x27206e61
  4195d0:	(bad)  
  4195d1:	(bad)  
  4195d2:	or     ah,BYTE PTR [rax]
  4195d4:	and    BYTE PTR [rax],ah
  4195d6:	and    BYTE PTR [rax],ah
  4195d8:	and    BYTE PTR [rax],ah
  4195da:	and    BYTE PTR [rip+0x77656e2d],ch        # 0x77a7040d
  4195e0:	jae    0x419656
  4195e2:	(bad)  
  4195e3:	jb     0x419605
  4195e5:	and    BYTE PTR [rax],ah
  4195e7:	and    BYTE PTR [rax],ah
  4195e9:	and    BYTE PTR [rax],ah
  4195eb:	and    BYTE PTR [rbp+0x73],dh
  4195ee:	and    BYTE PTR gs:[rsi+0x65],ch
  4195f2:	ja     0x419614
  4195f4:	(bad)  
  4195f5:	sub    ah,BYTE PTR [rdi]
  4195f7:	and    BYTE PTR [rax+0x72],dh
  4195fa:	movsxd esp,DWORD PTR gs:[rbp+0x64]
  4195fe:	outs   dx,BYTE PTR gs:[rsi]
  419600:	movsxd esp,DWORD PTR [rbp+0x2c]
  419603:	and    BYTE PTR [rbp+0x71],ah
  419606:	jne    0x419669
  419608:	ins    BYTE PTR es:[rdi],dx
  419609:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41960d:	(bad)  
  41960e:	(bad)  
  41960f:	(bad)  
  419610:	or     ah,BYTE PTR [rax]
  419612:	and    BYTE PTR [rax],ah
  419614:	and    BYTE PTR [rip+0x2d202c6e],ch        # 0x2d61c288
  41961a:	sub    eax,0x696c6f6e
  41961f:	jae    0x419695
  419621:	jae    0x419643
  419623:	and    BYTE PTR [rax],ah
  419625:	and    BYTE PTR [rax],ah
  419627:	and    BYTE PTR [rax],ah
  419629:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  41962d:	(bad)  
  41962e:	(bad)  
  41962f:	ins    BYTE PTR es:[rdi],dx
  419630:	and    BYTE PTR gs:[rbx+0x6f],ah
  419634:	outs   dx,BYTE PTR ds:[rsi]
  419635:	jbe    0x41969c
  419637:	jb     0x4196ac
  419639:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  419640:	jne    0x4196b0
  419642:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x73747369
  41964a:	or     ah,BYTE PTR [rax]
  41964c:	and    BYTE PTR [rax],ah
  41964e:	and    BYTE PTR [rip+0x2d202c53],ch        # 0x2d61c2a7
  419654:	sub    eax,0x776f6873
  419659:	sub    eax,0x74636166
  41965e:	outs   dx,DWORD PTR ds:[rsi]
  41965f:	jb     0x419681
  419661:	and    BYTE PTR [rax],ah
  419663:	and    BYTE PTR [rbx+0x68],dh
  419666:	outs   dx,DWORD PTR ds:[rsi]
  419667:	ja     0x419689
  419669:	outs   dx,BYTE PTR ds:[rsi]
  41966a:	outs   dx,DWORD PTR ds:[rsi]
  41966b:	outs   dx,BYTE PTR ds:[rsi]
  41966c:	sub    eax,0x74696e75
  419671:	jns    0x419693
  419673:	data16 (bad) 
  419675:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  419679:	and    BYTE PTR [rdx+0x65],ah
  41967c:	outs   dx,WORD PTR ds:[rsi]
  41967e:	jb     0x4196e5
  419680:	and    BYTE PTR [rcx],dh
  419682:	jl     0x4196fc
  419684:	and    BYTE PTR [rcx+0x6e],ch
  419687:	and    BYTE PTR [rbp+0x75],ch
  41968a:	ins    BYTE PTR es:[rdi],dx
  41968b:	je     0x4196f6
  41968d:	sub    eax,0x74696e75
  419692:	and    BYTE PTR [rdi+0x75],ch
  419695:	je     0x419707
  419697:	jne    0x41970d
  419699:	or     ah,BYTE PTR [rax]
  41969b:	and    BYTE PTR [rax],ah
  41969d:	and    BYTE PTR [rip+0x2d202c6f],ch        # 0x2d61c312
  4196a3:	sub    eax,0x7074756f
  4196a8:	jne    0x41971e
  4196aa:	sub    eax,0x6d726f66
  4196af:	(bad)  
  4196b0:	je     0x4196d2
  4196b2:	and    BYTE PTR [rbx+0x70],dh
  4196b5:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4196b9:	jns    0x4196db
  4196bb:	jo     0x41972f
  4196bd:	imul   ebp,DWORD PTR [rsi+0x74],0x756e2066
  4196c4:	ins    DWORD PTR es:[rdi],dx
  4196c5:	gs jb  0x419731
  4196c8:	movsxd esp,DWORD PTR [rax]
  4196ca:	outs   dx,DWORD PTR ds:[rsi]
  4196cb:	jne    0x419741
  4196cd:	jo     0x419744
  4196cf:	je     0x4196f1
  4196d1:	outs   dx,WORD PTR ds:[rsi]
  4196d3:	jb     0x419742
  4196d5:	(bad)  
  4196d6:	je     0x4196f8
  4196d8:	sub    BYTE PTR [rbp+riz*2+0x66],ah
  4196dc:	(bad)  
  4196dd:	jne    0x41974b
  4196df:	je     0x41971b
  4196e1:	and    BYTE PTR [rip+0x64252e25],ah        # 0x6466c50c
  4196e7:	and    eax,0x200a2963
  4196ec:	and    BYTE PTR [rax],ah
  4196ee:	and    BYTE PTR [rip+0x2d202c70],ch        # 0x2d61c364
  4196f4:	sub    eax,0x646f7270
  4196f9:	jne    0x41975e
  4196fb:	je     0x41971d
  4196fd:	and    BYTE PTR [rax],ah
  4196ff:	and    BYTE PTR [rax],ah
  419701:	and    BYTE PTR [rax],ah
  419703:	and    BYTE PTR [rbp+0x61],ch
  419706:	imul   esp,DWORD PTR [rbp+0x20],0x27
  41970a:	sub    eax,0x6e692027
  41970f:	je     0x419780
  419711:	and    BYTE PTR [rcx+0x20],ah
  419714:	jo     0x419788
  419716:	outs   dx,DWORD PTR ds:[rsi]
  419717:	fs jne 0x41977d
  41971a:	je     0x41973c
  41971c:	outs   dx,DWORD PTR ds:[rsi]
  41971d:	jo     0x419784
  41971f:	jb     0x419782
  419721:	je     0x419792
  419723:	jb     0x41972f
  419725:	and    BYTE PTR [rax],ah
  419727:	and    BYTE PTR [rax],ah
  419729:	sub    eax,0x2d202c71
  41972e:	sub    eax,0x65697571
  419733:	je     0x419755
  419735:	and    BYTE PTR [rax],ah
  419737:	and    BYTE PTR [rax],ah
  419739:	and    BYTE PTR [rax],ah
  41973b:	and    BYTE PTR [rax],ah
  41973d:	and    BYTE PTR [rbx+0x75],dh
  419740:	jo     0x4197b2
  419742:	jb     0x4197a9
  419744:	jae    0x4197b9
  419746:	and    BYTE PTR [rax+0x72],dh
  419749:	outs   dx,DWORD PTR ds:[rsi]
  41974a:	ins    DWORD PTR es:[rdi],dx
  41974b:	jo     0x4197c1
  41974d:	imul   ebp,DWORD PTR [rsi+0x67],0x2020200a
  419754:	and    BYTE PTR [rax],ah
  419756:	and    BYTE PTR [rax],ah
  419758:	and    BYTE PTR [rip+0x6c69732d],ch        # 0x6cab0a8b
  41975e:	outs   dx,BYTE PTR gs:[rsi]
  419760:	je     0x419782
  419762:	and    BYTE PTR [rax],ah
  419764:	and    BYTE PTR [rax],ah
  419766:	and    BYTE PTR [rax],ah
  419768:	and    BYTE PTR [rax],ah
  41976a:	jae    0x4197cd
  41976c:	ins    DWORD PTR es:[rdi],dx
  41976d:	and    BYTE PTR gs:[rcx+0x73],ah
  419771:	and    BYTE PTR [rip+0x6975712d],ch        # 0x69b708a4
  419777:	gs je  0x419784
  41977a:	and    BYTE PTR [rax],ah
  41977c:	and    BYTE PTR [rax],ah
  41977e:	sub    eax,0x2d202c73
  419783:	sub    eax,0x69727473
  419788:	movsxd esi,DWORD PTR [rax+riz*1+0x20]
  41978c:	and    BYTE PTR [rax],ah
  41978e:	and    BYTE PTR [rax],ah
  419790:	and    BYTE PTR [rax],ah
  419792:	and    BYTE PTR [rbx+0x75],dh
  419795:	jo     0x419807
  419797:	jb     0x4197fe
  419799:	jae    0x41980e
  41979b:	and    BYTE PTR [rdx+0x65],dh
  41979e:	movsxd ebp,DWORD PTR [rcx+0x70]
  4197a1:	jb     0x419812
  4197a3:	movsxd esp,DWORD PTR [rcx+0x6c]
  4197a6:	and    BYTE PTR [rbp+0x6e],dh
  4197a9:	imul   esi,DWORD PTR [rax+riz*1+0x63],0x65766e6f
  4197b1:	jb     0x419826
  4197b3:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e652820
  4197ba:	and    BYTE PTR cs:[eax+0x7a],cl
  4197bf:	cmp    al,0x2d
  4197c1:	ds jae 0x4197ed
  4197c4:	or     ah,BYTE PTR [rax]
  4197c6:	and    BYTE PTR [rax],ah
  4197c8:	and    BYTE PTR [rip+0x2d202c76],ch        # 0x2d61c444
  4197ce:	sub    eax,0x62726576
  4197d3:	outs   dx,DWORD PTR ds:[rsi]
  4197d4:	jae    0x41983b
  4197d6:	and    BYTE PTR [rax],ah
  4197d8:	and    BYTE PTR [rax],ah
  4197da:	and    BYTE PTR [rax],ah
  4197dc:	and    BYTE PTR [rax],ah
  4197de:	jae    0x419848
  4197e0:	outs   dx,DWORD PTR ds:[rsi]
  4197e1:	ja     0x419803
  4197e3:	jae    0x419851
  4197e5:	imul   esp,DWORD PTR [rdi+0x68],0x20796c74
  4197ec:	ins    DWORD PTR es:[rdi],dx
  4197ed:	outs   dx,DWORD PTR ds:[rsi]
  4197ee:	jb     0x419855
  4197f0:	and    BYTE PTR [rsi+0x65],dh
  4197f3:	jb     0x419857
  4197f5:	outs   dx,DWORD PTR ds:[rsi]
  4197f6:	jae    0x41985d
  4197f8:	and    BYTE PTR [rdi+0x75],ch
  4197fb:	je     0x41986d
  4197fd:	jne    0x419873
  4197ff:	or     ah,BYTE PTR [rax]
  419801:	and    BYTE PTR [rax],ah
  419803:	and    BYTE PTR [rax],ah
  419805:	and    BYTE PTR [rax],ah
  419807:	and    BYTE PTR [rip+0x6d6f632d],ch        # 0x6db0fb3a
  41980d:	jo     0x419870
  41980f:	movsxd esi,DWORD PTR [rax+riz*1+0x20]
  419813:	and    BYTE PTR [rax],ah
  419815:	and    BYTE PTR [rax],ah
  419817:	and    BYTE PTR [rax],ah
  419819:	jae    0x419890
  41981b:	jo     0x41988d
  41981d:	jb     0x419884
  41981f:	jae    0x419894
  419821:	and    BYTE PTR [rax+0x72],dh
  419824:	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
  41982b:	outs   dx,DWORD PTR ds:[rsi]
  41982c:	data16 and BYTE PTR [rcx+riz*2+0x62],dh
  419831:	sub    al,0x20
  419833:	(bad)  
  419834:	sub    ah,BYTE PTR [rdi]
  419836:	sub    al,0x20
  419838:	(bad)  
  419839:	outs   dx,BYTE PTR ds:[rsi]
  41983a:	and    BYTE PTR fs:[rdi],ah
  41983d:	(bad)  
  41983e:	(bad)  
  41983f:	and    BYTE PTR [rbx+0x68],ah
  419842:	(bad)  
  419843:	jb     0x4198a6
  419845:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  419849:	or     ah,BYTE PTR [rax]
  41984b:	and    BYTE PTR [rax],ah
  41984d:	and    BYTE PTR [rip+0x2d202c31],ch        # 0x2d61c484
  419853:	sub    eax,0x2d656e6f
  419858:	ins    BYTE PTR es:[rdi],dx
  419859:	imul   ebp,DWORD PTR [rsi+0x65],0x20202020
  419860:	and    BYTE PTR [rax],ah
  419862:	and    BYTE PTR [rbx+0x75],dh
  419865:	jo     0x4198d7
  419867:	jb     0x4198ce
  419869:	jae    0x4198de
  41986b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41986f:	and    BYTE PTR [rbx+0x65],dh
  419872:	movsxd ebp,DWORD PTR [rdi+0x6e]
  419875:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  41987a:	and    BYTE PTR gs:[rdi+0x66],ch
  41987e:	and    BYTE PTR [rdi+0x75],ch
  419881:	je     0x4198f3
  419883:	jne    0x4198f9
  419885:	or     ah,BYTE PTR [rax]
  419887:	and    BYTE PTR [rax],ah
  419889:	and    BYTE PTR [rip+0x2d202c74],ch        # 0x2d61c503
  41988f:	sub    eax,0x73726574
  419894:	and    BYTE PTR gs:[rax],ah
  419897:	and    BYTE PTR [rax],ah
  419899:	and    BYTE PTR [rax],ah
  41989b:	and    BYTE PTR [rax],ah
  41989d:	and    BYTE PTR [rax],ah
  41989f:	je     0x419906
  4198a1:	jb     0x419916
  4198a3:	and    BYTE PTR gs:[rdi+0x75],ch
  4198a7:	je     0x419919
  4198a9:	jne    0x41991f
  4198ab:	and    BYTE PTR [rax],ch
  4198ad:	sub    eax,0x7274732d
  4198b2:	imul   esp,DWORD PTR [rbx+0x74],0x632d2d20
  4198b9:	outs   dx,DWORD PTR ds:[rsi]
  4198ba:	ins    DWORD PTR es:[rdi],dx
  4198bb:	jo     0x41991e
  4198bd:	movsxd esi,DWORD PTR [rax+riz*1+0x2d]
  4198c1:	sub    eax,0x65697571
  4198c6:	je     0x4198e8
  4198c8:	sub    eax,0x656e6f2d
  4198cd:	sub    eax,0x656e696c
  4198d2:	sub    DWORD PTR [rdx],ecx
  4198d4:	and    BYTE PTR [rax],ah
  4198d6:	and    BYTE PTR [rax],ah
  4198d8:	sub    eax,0x2d202c72
  4198dd:	sub    eax,0x6e756f72
  4198e2:	and    BYTE PTR fs:[rax],ah
  4198e5:	and    BYTE PTR [rax],ah
  4198e7:	and    BYTE PTR [rax],ah
  4198e9:	and    BYTE PTR [rax],ah
  4198eb:	and    BYTE PTR [rax],ah
  4198ed:	jb     0x41995e
  4198ef:	jne    0x41995f
  4198f1:	and    BYTE PTR fs:[rcx+riz*2+0x73],ch
  4198f6:	je     0x419918
  4198f8:	gs ins BYTE PTR es:[rdi],dx
  4198fa:	gs ins DWORD PTR es:[rdi],dx
  4198fc:	outs   dx,BYTE PTR gs:[rsi]
  4198fe:	je     0x419920
  419900:	outs   dx,DWORD PTR ds:[rsi]
  419901:	data16 and BYTE PTR [rbp+0x6e],dh
  419905:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x20747369
  41990d:	outs   dx,DWORD PTR ds:[rsi]
  41990e:	jne    0x419984
  419910:	jo     0x419987
  419912:	je     0x419934
  419914:	je     0x419985
  419916:	and    BYTE PTR [rcx+0x6e],ah
  419919:	and    BYTE PTR [rcx+0x6e],ch
  41991c:	je     0x419983
  41991e:	addr32 gs jb 0x41992c
  419922:	and    BYTE PTR [rax],ah
  419924:	and    BYTE PTR [rax],ah
  419926:	sub    eax,0x2d202c56
  41992b:	sub    eax,0x73726576
  419930:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  419937:	and    BYTE PTR [rax],ah
  419939:	and    BYTE PTR [rax],ah
  41993b:	jae    0x4199a5
  41993d:	outs   dx,DWORD PTR ds:[rsi]
  41993e:	ja     0x419960
  419940:	jbe    0x4199a7
  419942:	jb     0x4199b7
  419944:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d756e20
  41994b:	(bad)  
  41994c:	gs jb  0x41996f
  41994f:	(bad)  
  419950:	outs   dx,BYTE PTR ds:[rsi]
  419951:	and    BYTE PTR fs:[rbp+0x78],ah
  419955:	imul   esi,DWORD PTR [rdx+rcx*1+0xa],0x6c206f54
  41995d:	gs (bad) 
  41995f:	jb     0x4199cf
  419961:	and    BYTE PTR [rcx+0x62],ah
  419964:	outs   dx,DWORD PTR ds:[rsi]
  419965:	jne    0x4199db
  419967:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41996b:	and    BYTE PTR [rcx+0x76],ah
  41996e:	(bad)  
  41996f:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7520656c
  419977:	outs   dx,BYTE PTR ds:[rsi]
  419978:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x6b6f6f6c
  419980:	and    BYTE PTR [rcx+0x6e],ch
  419983:	and    BYTE PTR [rip+0x520a0a73],ah        # 0x524ba3fc
  419989:	gs jo  0x4199fb
  41998c:	jb     0x419a02
  41998e:	and    BYTE PTR [rdx+0x75],ah
  419991:	addr32 jae 0x4199b4
  419994:	je     0x419a05
  419996:	and    BYTE PTR [rcx+0x64],ah
  419999:	jb     0x419a04
  41999b:	(bad)  
  41999c:	outs   dx,BYTE PTR ds:[rsi]
  41999d:	ins    DWORD PTR es:[rdi],dx
  41999e:	rex
  41999f:	outs   dx,BYTE PTR ds:[esi]
  4199a1:	jne    0x4199d1
  4199a3:	outs   dx,DWORD PTR ds:[rsi]
  4199a4:	jb     0x419a0d
  4199a6:	or     cl,BYTE PTR cs:[rdx]
  4199a9:	add    BYTE PTR [rax],al
  4199ab:	add    BYTE PTR [rax],al
  4199ad:	add    BYTE PTR [rax],al
  4199af:	add    BYTE PTR [rdi],ch
  4199b1:	jae    0x419a1b
  4199b3:	(bad)  
  4199b4:	jb     0x419a1b
  4199b6:	(bad)  
  4199b7:	jne    0x419a27
  4199b9:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x69666564
  4199c1:	outs   dx,BYTE PTR ds:[rsi]
  4199c2:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x752e736e
  4199ca:	outs   dx,BYTE PTR ds:[rsi]
  4199cb:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x79725400
  4199d3:	and    BYTE PTR [rdi],ah
  4199d5:	and    eax,0x2d2d2073
  4199da:	push   0x27706c65
  4199df:	and    BYTE PTR [rsi+0x6f],ah
  4199e2:	jb     0x419a04
  4199e4:	ins    DWORD PTR es:[rdi],dx
  4199e5:	outs   dx,DWORD PTR ds:[rsi]
  4199e6:	jb     0x419a4d
  4199e8:	and    BYTE PTR [rcx+0x6e],ch
  4199eb:	outs   dx,WORD PTR ds:[rsi]
  4199ed:	jb     0x419a5c
  4199ef:	(bad)  
  4199f0:	je     0x419a5b
  4199f2:	outs   dx,DWORD PTR ds:[rsi]
  4199f3:	outs   dx,BYTE PTR ds:[rsi]
  4199f4:	or     al,BYTE PTR cs:[rax]
  4199f7:	push   rbp
  4199f8:	rex.WRX
  4199f9:	rex.WB push r12
  4199fb:	push   rbx
  4199fc:	rex.RX
  4199fd:	rex.WB
  4199fe:	rex.WR
  4199ff:	add    BYTE PTR [r8],r13b
  419a02:	imul   bp,WORD PTR [rsi+0x64],0x6e75
  419a08:	imul   esi,DWORD PTR [rbx+rsi*2+0x66],0x29656c69
  419a10:	add    BYTE PTR [rax+0x41],dl
  419a13:	push   rsp
  419a14:	rex.W add BYTE PTR [rbp+0x59],cl
  419a18:	push   rbp
  419a19:	rex.WRX
  419a1a:	rex.WB push r12
  419a1c:	push   rbx
  419a1d:	rex.RX
  419a1e:	rex.WB
  419a1f:	rex.WR
  419a20:	add    BYTE PTR [r8],r8b
  419a23:	add    BYTE PTR [rax],al
  419a25:	add    BYTE PTR [rax],al
  419a27:	add    BYTE PTR [rip+0x63203a73],ah        # 0x6361d4a0
  419a2d:	(bad)  
  419a2e:	outs   dx,BYTE PTR ds:[rsi]
  419a2f:	outs   dx,BYTE PTR ds:[rsi]
  419a30:	outs   dx,DWORD PTR ds:[rsi]
  419a31:	je     0x419a53
  419a33:	outs   dx,DWORD PTR ds:[rsi]
  419a34:	jo     0x419a9b
  419a36:	outs   dx,BYTE PTR ds:[rsi]
  419a37:	and    BYTE PTR [rbp+0x6e],dh
  419a3a:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x656c6966
  419a42:	and    BYTE PTR [rax],ch
  419a44:	and    eax,0x73202973
  419a49:	jo     0x419ab0
  419a4b:	movsxd ebp,DWORD PTR [rcx+0x66]
  419a4e:	imul   esp,DWORD PTR [rbp+0x64],0x206e6920
  419a55:	rex.WRB pop r9
  419a57:	push   rbp
  419a58:	rex.WRX
  419a59:	rex.WB push r12
  419a5b:	push   rbx
  419a5c:	rex.RX
  419a5d:	rex.WB
  419a5e:	rex.WR
  419a5f:	and    BYTE PTR [r13+0x6e],r12b
  419a63:	jbe    0x419ace
  419a65:	jb     0x419ad6
  419a67:	outs   dx,BYTE PTR ds:[rsi]
  419a68:	ins    DWORD PTR es:[rdi],dx
  419a69:	outs   dx,BYTE PTR gs:[rsi]
  419a6b:	je     0x419a8d
  419a6d:	jbe    0x419ad0
  419a6f:	jb     0x419ada
  419a71:	(bad)  
  419a72:	(bad)  
  419a73:	ins    BYTE PTR es:[rdi],dx
  419a74:	or     al,BYTE PTR gs:[rax]
  419a77:	rex.W
  419a78:	rex.WRXB
  419a79:	rex.WRB
  419a7a:	add    BYTE PTR [r8+0x4f],r9b
  419a7e:	rex.WRB
  419a7f:	rex.RB
  419a80:	rex.R push rdx
  419a82:	rex.WB push r14
  419a84:	add    BYTE PTR [r8+0x4f],r9b
  419a88:	rex.WRB
  419a89:	rex.RB push r8
  419a8b:	push   r12
  419a8d:	rex.W add BYTE PTR [rax],bpl
  419a90:	jo     0x419af7
  419a92:	jb     0x419b07
  419a94:	outs   dx,DWORD PTR ds:[rsi]
  419a95:	outs   dx,BYTE PTR ds:[rsi]
  419a96:	(bad)  
  419a97:	ins    BYTE PTR es:[rdi],dx
  419a98:	jne    0x419b08
  419a9a:	imul   esi,DWORD PTR [rbx+rsi*2+0x66],0x29656c69
  419aa2:	add    BYTE PTR [rdi+0x69],dh
  419aa5:	je     0x419b0f
  419aa7:	outs   dx,DWORD PTR ds:[rsi]
  419aa8:	jne    0x419b1e
  419aaa:	and    BYTE PTR [rbp+0x74],dh
  419aad:	data16 cmp BYTE PTR [rax],al
  419ab0:	ja     0x419b1b
  419ab2:	je     0x419b1c
  419ab4:	and    BYTE PTR [rdx+0x65],dh
  419ab7:	(bad)  
  419ab8:	fs ins BYTE PTR es:[rdi],dx
  419aba:	imul   ebp,DWORD PTR [rsi+0x65],0x302e3200
  419ac1:	xor    al,BYTE PTR [rax]
  419ac3:	add    BYTE PTR [rax],al
  419ac5:	add    BYTE PTR [rax],al
  419ac7:	add    BYTE PTR [rdi+0x4e],al
  419aca:	push   rbp
  419acb:	and    BYTE PTR [rbp+0x6e],dl
  419ace:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x73726576
  419ad6:	imul   ebp,DWORD PTR [rdi+0x6e],0xa732520
  419add:	and    eax,0x25202c73
  419ae2:	jae    0x419b10
  419ae4:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  419ae8:	(bad)  
  419ae9:	ins    BYTE PTR es:[rdi],dx
  419aea:	and    BYTE PTR gs:[rip+0x550a2c73],ah        # 0x554bc764
  419af1:	outs   dx,BYTE PTR ds:[rsi]
  419af2:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x61746164
  419afa:	(bad)  
  419afc:	jae    0x419b63
  419afe:	and    BYTE PTR [rcx+0x6e],ch
  419b01:	and    BYTE PTR [rip+0x65500a73],ah        # 0x6591a57a
  419b07:	jb     0x419b7c
  419b09:	outs   dx,DWORD PTR ds:[rsi]
  419b0a:	outs   dx,BYTE PTR ds:[rsi]
  419b0b:	(bad)  
  419b0c:	ins    BYTE PTR es:[rdi],dx
  419b0d:	and    BYTE PTR [rbp+0x6e],dh
  419b10:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x656c6966
  419b18:	and    BYTE PTR [rcx+0x6e],ch
  419b1b:	and    BYTE PTR [rip+0x430a0a73],ah        # 0x434ba594
  419b21:	outs   dx,DWORD PTR ds:[rsi]
  419b22:	jo     0x419b9d
  419b24:	jb     0x419b8f
  419b26:	addr32 push 0x43282074
  419b2c:	sub    DWORD PTR [rax],esp
  419b2e:	xor    dh,BYTE PTR [rax]
  419b30:	xor    DWORD PTR [rdx],esi
  419b32:	and    BYTE PTR [rsi+0x72],al
  419b35:	gs and BYTE PTR gs:[rbx+0x6f],dl
  419b3a:	data16 je 0x419bb4
  419b3d:	(bad)  
  419b3e:	jb     0x419ba5
  419b40:	and    BYTE PTR [rsi+0x6f],al
  419b43:	jne    0x419bb3
  419b45:	fs (bad) 
  419b47:	je     0x419bb2
  419b49:	outs   dx,DWORD PTR ds:[rsi]
  419b4a:	outs   dx,BYTE PTR ds:[rsi]
  419b4b:	sub    al,0x20
  419b4d:	rex.WB outs dx,BYTE PTR ds:[rsi]
  419b4f:	movsxd ebp,DWORD PTR [rsi]
  419b51:	or     al,BYTE PTR [rdi+0x4e]
  419b54:	push   rbp
  419b55:	and    BYTE PTR [rbp+0x6e],dl
  419b58:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x656d6f63
  419b60:	jae    0x419b82
  419b62:	ja     0x419bcd
  419b64:	je     0x419bce
  419b66:	and    BYTE PTR [rcx+0x42],al
  419b69:	push   rbx
  419b6a:	rex.WRXB
  419b6b:	rex.WR push rbp
  419b6d:	push   rsp
  419b6e:	rex.RB
  419b6f:	rex.WR pop rcx
  419b71:	and    BYTE PTR [rsi+0x4f],cl
  419b74:	and    BYTE PTR [rdi+0x41],dl
  419b77:	push   rdx
  419b78:	push   rdx
  419b79:	rex.B
  419b7a:	rex.WRX push rsp
  419b7c:	pop    rcx
  419b7d:	or     bl,BYTE PTR cs:[rcx+0x6f]
  419b81:	jne    0x419ba3
  419b83:	ins    DWORD PTR es:[rdi],dx
  419b84:	(bad)  
  419b85:	jns    0x419ba7
  419b87:	jb     0x419bee
  419b89:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  419b91:	je     0x419bf8
  419b93:	and    BYTE PTR [rbx+0x6f],ah
  419b96:	jo     0x419c01
  419b98:	gs jae 0x419bbb
  419b9b:	outs   dx,DWORD PTR ds:[rsi]
  419b9c:	data16 and BYTE PTR [rdi+0x4e],al
  419ba0:	push   rbp
  419ba1:	and    BYTE PTR [rbp+0x6e],dl
  419ba4:	imul   esi,DWORD PTR [rbx+rsi*2+0xa],0x65646e75
  419bac:	jb     0x419bce
  419bae:	je     0x419c18
  419bb0:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  419bb5:	ins    DWORD PTR es:[rdi],dx
  419bb6:	jae    0x419bd8
  419bb8:	outs   dx,DWORD PTR ds:[rsi]
  419bb9:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  419bbe:	and    BYTE PTR [rdi+0x4e],al
  419bc1:	push   rbp
  419bc2:	and    BYTE PTR [rdi+0x65],al
  419bc5:	outs   dx,BYTE PTR ds:[rsi]
  419bc6:	gs jb  0x419c2a
  419bc9:	ins    BYTE PTR es:[rdi],dx
  419bca:	and    BYTE PTR [rax+0x75],dl
  419bcd:	(bad)  
  419bce:	ins    BYTE PTR es:[rdi],dx
  419bcf:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  419bd6:	outs   dx,BYTE PTR ds:[rsi]
  419bd7:	jae    0x419c3e
  419bd9:	or     cl,BYTE PTR cs:[rdx]
  419bdc:	add    BYTE PTR [rax],al
  419bde:	add    BYTE PTR [rax],al
  419be0:	rex.B je 0x419c03
  419be3:	ins    DWORD PTR es:[rdi],dx
  419be4:	outs   dx,DWORD PTR ds:[rsi]
  419be5:	jae    0x419c5b
  419be7:	and    BYTE PTR [rip+0x662d2064],ah        # 0x666ebc51
  419bed:	and    BYTE PTR [rbx+0x70],dh
  419bf0:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  419bf4:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  419bfb:	jae    0x419c1d
  419bfd:	(bad)  
  419bfe:	jb     0x419c65
  419c00:	and    BYTE PTR [rcx+0x6c],ah
  419c03:	ins    BYTE PTR es:[rdi],dx
  419c04:	outs   dx,DWORD PTR ds:[rsi]
  419c05:	ja     0x419c6c
  419c07:	or     al,BYTE PTR fs:[rax]
  419c0a:	add    BYTE PTR [rax],al
  419c0c:	add    BYTE PTR [rax],al
  419c0e:	add    BYTE PTR [rax],al
  419c10:	push   rsp
  419c11:	outs   dx,DWORD PTR ds:[rsi]
  419c12:	outs   dx,DWORD PTR ds:[rsi]
  419c13:	and    BYTE PTR [rbp+0x61],ch
  419c16:	outs   dx,BYTE PTR ds:[rsi]
  419c17:	jns    0x419c39
  419c19:	(bad)  
  419c1a:	jb     0x419c83
  419c1c:	jne    0x419c8b
  419c1e:	outs   dx,BYTE PTR gs:[rsi]
  419c20:	je     0x419c95
  419c22:	and    BYTE PTR [rax],ch
  419c24:	(bad)  
  419c25:	jb     0x419c8e
  419c27:	jne    0x419c96
  419c29:	outs   dx,BYTE PTR gs:[rsi]
  419c2b:	je     0x419ca0
  419c2d:	and    BYTE PTR [rcx+0x72],ah
  419c30:	and    BYTE PTR gs:[rsi+0x6f],ch
  419c34:	je     0x419c56
  419c36:	(bad)  
  419c37:	ins    BYTE PTR es:[rdi],dx
  419c38:	ins    BYTE PTR es:[rdi],dx
  419c39:	outs   dx,DWORD PTR ds:[rsi]
  419c3a:	ja     0x419ca1
  419c3c:	and    BYTE PTR fs:[rdi+0x69],dh
  419c40:	je     0x419caa
  419c42:	and    BYTE PTR [rip+0xa2e2963],ch        # 0xa6fc5ab
	...
  419c50:	push   rsp
  419c51:	outs   dx,DWORD PTR ds:[rsi]
  419c52:	outs   dx,DWORD PTR ds:[rsi]
  419c53:	and    BYTE PTR [rbp+0x61],ch
  419c56:	outs   dx,BYTE PTR ds:[rsi]
  419c57:	jns    0x419c79
  419c59:	(bad)  
  419c5a:	jb     0x419cc3
  419c5c:	jne    0x419ccb
  419c5e:	outs   dx,BYTE PTR gs:[rsi]
  419c60:	je     0x419cd5
  419c62:	and    BYTE PTR [rax],ch
  419c64:	ins    DWORD PTR es:[rdi],dx
  419c65:	(bad)  
  419c66:	jns    0x419cca
  419c68:	and    BYTE PTR gs:[rcx+0x6f],bh
  419c6c:	jne    0x419c8e
  419c6e:	outs   dx,BYTE PTR ds:[rsi]
  419c6f:	gs gs and BYTE PTR fs:[rcx+0x75],dh
  419c75:	outs   dx,DWORD PTR ds:[rsi]
  419c76:	je     0x419cdd
  419c78:	jae    0x419ca3
  419c7a:	or     al,BYTE PTR cs:[rax]
  419c7d:	add    BYTE PTR [rax],al
  419c7f:	add    BYTE PTR [rcx],dl
  419c81:	out    0xfe,eax
  419c83:	call   QWORD PTR [rax-0x17]
  419c86:	(bad)  
  419c87:	call   QWORD PTR [rax-0x17]
  419c8a:	(bad)  
  419c8b:	call   QWORD PTR [rax-0x17]
  419c8e:	(bad)  
  419c8f:	call   QWORD PTR [rax-0x17]
  419c92:	(bad)  
  419c93:	call   QWORD PTR [rax-0x17]
  419c96:	(bad)  
  419c97:	call   QWORD PTR [rax-0x17]
  419c9a:	(bad)  
  419c9b:	call   QWORD PTR [rax-0x17]
  419c9e:	(bad)  
  419c9f:	call   QWORD PTR [rax-0x17]
  419ca2:	(bad)  
  419ca3:	call   QWORD PTR [rax-0x17]
  419ca6:	(bad)  
  419ca7:	call   QWORD PTR [rax-0x17]
  419caa:	(bad)  
  419cab:	call   QWORD PTR [rax-0x17]
  419cae:	(bad)  
  419caf:	call   QWORD PTR [rax-0x17]
  419cb2:	(bad)  
  419cb3:	call   QWORD PTR [rax-0x17]
  419cb6:	(bad)  
  419cb7:	call   QWORD PTR [rax-0x17]
  419cba:	(bad)  
  419cbb:	call   QWORD PTR [rax-0x17]
  419cbe:	(bad)  
  419cbf:	call   QWORD PTR [rax-0x17]
  419cc2:	(bad)  
  419cc3:	call   QWORD PTR [rax-0x17]
  419cc6:	(bad)  
  419cc7:	call   QWORD PTR [rax-0x17]
  419cca:	(bad)  
  419ccb:	call   QWORD PTR [rax-0x17]
  419cce:	(bad)  
  419ccf:	call   QWORD PTR [rax-0x17]
  419cd2:	(bad)  
  419cd3:	call   QWORD PTR [rax-0x17]
  419cd6:	(bad)  
  419cd7:	call   QWORD PTR [rax-0x17]
  419cda:	(bad)  
  419cdb:	call   QWORD PTR [rax-0x17]
  419cde:	(bad)  
  419cdf:	call   QWORD PTR [rax-0x17]
  419ce2:	(bad)  
  419ce3:	call   QWORD PTR [rax-0x17]
  419ce6:	(bad)  
  419ce7:	call   QWORD PTR [rax-0x17]
  419cea:	(bad)  
  419ceb:	call   QWORD PTR [rax-0x17]
  419cee:	(bad)  
  419cef:	call   QWORD PTR [rax-0x17]
  419cf2:	(bad)  
  419cf3:	call   QWORD PTR [rax-0x17]
  419cf6:	(bad)  
  419cf7:	call   QWORD PTR [rax-0x17]
  419cfa:	(bad)  
  419cfb:	call   QWORD PTR [rax-0x17]
  419cfe:	(bad)  
  419cff:	call   QWORD PTR [rax-0x17]
  419d02:	(bad)  
  419d03:	call   QWORD PTR [rax-0x17]
  419d06:	(bad)  
  419d07:	call   QWORD PTR [rax-0x17]
  419d0a:	(bad)  
  419d0b:	call   QWORD PTR [rax-0x17]
  419d0e:	(bad)  
  419d0f:	call   QWORD PTR [rax-0x17]
  419d12:	(bad)  
  419d13:	call   QWORD PTR [rax-0x17]
  419d16:	(bad)  
  419d17:	call   QWORD PTR [rax-0x17]
  419d1a:	(bad)  
  419d1b:	call   QWORD PTR [rax-0x17]
  419d1e:	(bad)  
  419d1f:	call   QWORD PTR [rax-0x17]
  419d22:	(bad)  
  419d23:	call   QWORD PTR [rax-0x17]
  419d26:	(bad)  
  419d27:	call   QWORD PTR [rax-0x17]
  419d2a:	(bad)  
  419d2b:	call   QWORD PTR [rax-0x17]
  419d2e:	(bad)  
  419d2f:	call   QWORD PTR [rax-0x17]
  419d32:	(bad)  
  419d33:	call   QWORD PTR [rax-0x17]
  419d36:	(bad)  
  419d37:	call   QWORD PTR [rax-0x17]
  419d3a:	(bad)  
  419d3b:	call   QWORD PTR [rax-0x17]
  419d3e:	(bad)  
  419d3f:	call   QWORD PTR [rax-0x17]
  419d42:	(bad)  
  419d43:	inc    DWORD PTR [rip+0x50fffee9]        # 0x51419c32
  419d49:	jmp    0xffffffffe9929d4c
  419d4e:	(bad)  
  419d4f:	call   QWORD PTR [rax-0x17]
  419d52:	(bad)  
  419d53:	call   QWORD PTR [rax-0x17]
  419d56:	(bad)  
  419d57:	call   QWORD PTR [rax-0x17]
  419d5a:	(bad)  
  419d5b:	call   QWORD PTR [rax-0x17]
  419d5e:	(bad)  
  419d5f:	call   QWORD PTR [rax-0x17]
  419d62:	(bad)  
  419d63:	call   QWORD PTR [rax-0x17]
  419d66:	(bad)  
  419d67:	call   QWORD PTR [rax-0x17]
  419d6a:	(bad)  
  419d6b:	call   QWORD PTR [rax-0x17]
  419d6e:	(bad)  
  419d6f:	call   QWORD PTR [rax-0x17]
  419d72:	(bad)  
  419d73:	call   QWORD PTR [rax-0x17]
  419d76:	(bad)  
  419d77:	call   QWORD PTR [rax-0x17]
  419d7a:	(bad)  
  419d7b:	inc    DWORD PTR [rax]
  419d7d:	jmp    0xffffffffe9929d80
  419d82:	(bad)  
  419d83:	call   QWORD PTR [rax-0x17]
  419d86:	(bad)  
  419d87:	call   QWORD PTR [rax-0x17]
  419d8a:	(bad)  
  419d8b:	call   QWORD PTR [rax-0x17]
  419d8e:	(bad)  
  419d8f:	call   QWORD PTR [rax-0x17]
  419d92:	(bad)  
  419d93:	call   QWORD PTR [rax-0x17]
  419d96:	(bad)  
  419d97:	call   QWORD PTR [rax-0x17]
  419d9a:	(bad)  
  419d9b:	call   QWORD PTR [rax-0x17]
  419d9e:	(bad)  
  419d9f:	call   QWORD PTR [rax-0x17]
  419da2:	(bad)  
  419da3:	call   QWORD PTR [rax-0x17]
  419da6:	(bad)  
  419da7:	call   QWORD PTR [rax-0x17]
  419daa:	(bad)  
  419dab:	call   QWORD PTR [rax-0x17]
  419dae:	(bad)  
  419daf:	call   QWORD PTR [rax-0x17]
  419db2:	(bad)  
  419db3:	call   QWORD PTR [rax-0x17]
  419db6:	(bad)  
  419db7:	call   QWORD PTR [rax-0x17]
  419dba:	(bad)  
  419dbb:	call   QWORD PTR [rax-0x17]
  419dbe:	(bad)  
  419dbf:	call   QWORD PTR [rax-0x17]
  419dc2:	(bad)  
  419dc3:	call   QWORD PTR [rax-0x17]
  419dc6:	(bad)  
  419dc7:	call   QWORD PTR [rax-0x17]
  419dca:	(bad)  
  419dcb:	push   rax
  419dcd:	call   0xffffffffe9929dd0
  419dd2:	(bad)  
  419dd3:	call   QWORD PTR [rax-0x17]
  419dd6:	(bad)  
  419dd7:	jmp    rax
  419dd9:	call   0xffffffffe9929ddc
  419dde:	(bad)  
  419ddf:	call   QWORD PTR [rax-0x17]
  419de2:	(bad)  
  419de3:	call   QWORD PTR [rax-0x17]
  419de6:	(bad)  
  419de7:	call   QWORD PTR [rax-0x17]
  419dea:	(bad)  
  419deb:	call   QWORD PTR [rax-0x17]
  419dee:	(bad)  
  419def:	call   QWORD PTR [rax-0x17]
  419df2:	(bad)  
  419df3:	call   QWORD PTR [rax-0x17]
  419df6:	(bad)  
  419df7:	call   QWORD PTR [rax-0x17]
  419dfa:	(bad)  
  419dfb:	call   QWORD PTR [rax-0x17]
  419dfe:	(bad)  
  419dff:	call   QWORD PTR [rax-0x17]
  419e02:	(bad)  
  419e03:	call   QWORD PTR [rax-0x17]
  419e06:	(bad)  
  419e07:	call   QWORD PTR [rax-0x17]
  419e0a:	(bad)  
  419e0b:	call   rax
  419e0d:	call   0xffffffffe8f29e10
  419e12:	(bad)  
  419e13:	call   QWORD PTR [rdx+0x10fffee8]
  419e19:	call   0xffffffffe9929e1c
  419e1e:	(bad)  
  419e1f:	inc    DWORD PTR [rax]
  419e21:	jmp    0xffffffffe9929e24
  419e26:	(bad)  
  419e27:	call   QWORD PTR [rax-0x17]
  419e2a:	(bad)  
  419e2b:	call   QWORD PTR [rax-0x17]
  419e2e:	(bad)  
  419e2f:	inc    DWORD PTR [rax]
  419e31:	call   0xffffffffe8329e34
  419e36:	(bad)  
  419e37:	jmp    rax
  419e39:	out    0xfe,eax
  419e3b:	call   rax
  419e3d:	out    0xfe,eax
  419e3f:	inc    eax
  419e41:	out    0xfe,eax
  419e43:	push   QWORD PTR [rax-0x5f000119]
  419e49:	out    0xfe,eax
  419e4b:	call   QWORD PTR [rax+0x60fffee7]
  419e51:	out    0xfe,eax
  419e53:	call   QWORD PTR [rax-0x17]
  419e56:	(bad)  
  419e57:	call   QWORD PTR [rax-0x19]
  419e5a:	(bad)  
  419e5b:	call   FWORD PTR [rsi+0x0]
  419e5e:	push   rbp
  419e5f:	outs   dx,BYTE PTR ds:[rsi]
  419e60:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x20747369
  419e68:	outs   dx,BYTE PTR ds:[rsi]
  419e69:	outs   dx,DWORD PTR ds:[rsi]
  419e6a:	je     0x419e8c
  419e6c:	(bad)  
  419e6d:	ins    BYTE PTR es:[rdi],dx
  419e6e:	ins    BYTE PTR es:[rdi],dx
  419e6f:	outs   dx,DWORD PTR ds:[rsi]
  419e70:	ja     0x419ed7
  419e72:	or     al,BYTE PTR fs:[rax]
  419e75:	rex.RB jb 0x419eea
  419e78:	outs   dx,DWORD PTR ds:[rsi]
  419e79:	jb     0x419e9b
  419e7b:	imul   ebp,DWORD PTR [rsi+0x20],0x27732527
  419e82:	cmp    ah,BYTE PTR [rax]
  419e84:	add    BYTE PTR [rax],ah
  419e86:	(bad)  
  419e87:	and    eax,0x45002773
  419e8c:	jb     0x419f00
  419e8e:	outs   dx,DWORD PTR ds:[rsi]
  419e8f:	jb     0x419ecb
  419e91:	and    BYTE PTR [rdx+0x6c],ah
  419e94:	(bad)  
  419e95:	outs   dx,BYTE PTR ds:[rsi]
  419e96:	imul   esp,DWORD PTR [rax],0x75
  419e99:	outs   dx,BYTE PTR ds:[rsi]
  419e9a:	imul   esi,DWORD PTR [rax+riz*1+0x6e],0x6120746f
  419ea2:	ins    BYTE PTR es:[rdi],dx
  419ea3:	ins    BYTE PTR es:[rdi],dx
  419ea4:	outs   dx,DWORD PTR ds:[rsi]
  419ea5:	ja     0x419f0c
  419ea7:	add    BYTE PTR fs:[rbp+0x72],al
  419eab:	jb     0x419f1c
  419ead:	jb     0x419ecf
  419eaf:	imul   ebp,DWORD PTR [rsi+0x20],0x74696e75
  419eb6:	and    BYTE PTR [rcx+rbp*2+0x73],ch
  419eba:	je     0x419edc
  419ebc:	outs   dx,BYTE PTR gs:[rsi]
  419ebe:	je     0x419f32
  419ec0:	jns    0x419efc
  419ec2:	and    BYTE PTR [rip+0x64000a73],ah        # 0x6441a93b
  419ec8:	outs   dx,DWORD PTR ds:[rsi]
  419ec9:	imul   ebp,DWORD PTR [rsi+0x67],0x696e7520
  419ed0:	je     0x419ef2
  419ed2:	ins    BYTE PTR es:[rdi],dx
  419ed3:	imul   esi,DWORD PTR [rbx+0x74],0x73252720
  419eda:	(bad)  
  419edb:	or     al,BYTE PTR [rax]
  419edd:	add    BYTE PTR [rax],al
  419edf:	add    BYTE PTR [rbp+0x6e],dl
  419ee2:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x20747369
  419eea:	(bad)  
  419eeb:	and    eax,0x63202773
  419ef0:	outs   dx,DWORD PTR ds:[rsi]
  419ef1:	outs   dx,BYTE PTR ds:[rsi]
  419ef2:	je     0x419f55
  419ef4:	imul   ebp,DWORD PTR [rsi+0x73],0x72726520
  419efb:	outs   dx,DWORD PTR ds:[rsi]
  419efc:	jb     0x419f71
  419efe:	or     al,BYTE PTR [rax]
  419f00:	push   rbp
  419f01:	outs   dx,BYTE PTR ds:[rsi]
  419f02:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x20747369
  419f0a:	(bad)  
  419f0b:	and    eax,0x68202773
  419f10:	imul   esp,DWORD PTR [rbp+riz*2+0x73],0x75206120
  419f18:	outs   dx,BYTE PTR ds:[rsi]
  419f19:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x6e696665
  419f21:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0xa2e6e
  419f29:	add    BYTE PTR [rax],al
  419f2b:	add    BYTE PTR [rax],al
  419f2d:	add    BYTE PTR [rax],al
  419f2f:	add    BYTE PTR [rbp+0x6e],dl
  419f32:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x20747369
  419f3a:	(bad)  
  419f3b:	and    eax,0x68202773
  419f40:	imul   esp,DWORD PTR [rbp+riz*2+0x73],0x66206120
  419f48:	jne    0x419fb8
  419f4a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  419f4e:	outs   dx,BYTE PTR ds:[rsi]
  419f4f:	and    BYTE PTR [rbp+riz*2+0x66],ah
  419f53:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  419f5a:	or     al,BYTE PTR cs:[rax]
  419f5d:	outs   dx,DWORD PTR fs:[rsi]
  419f5f:	imul   ebp,DWORD PTR [rsi+0x67],0x73252720
  419f66:	(bad)  
  419f67:	or     al,BYTE PTR [rax]
  419f69:	add    BYTE PTR [rax],al
  419f6b:	add    BYTE PTR [rax],al
  419f6d:	add    BYTE PTR [rax],al
  419f6f:	add    BYTE PTR [rbp+0x6e],dl
  419f72:	imul   esi,DWORD PTR [rax+riz*1+0x27],0x20277325
  419f7a:	push   0x65646469
  419f7f:	outs   dx,BYTE PTR ds:[rsi]
  419f80:	and    BYTE PTR [rdx+0x79],ah
  419f83:	and    BYTE PTR [rsi+0x75],ah
  419f86:	outs   dx,BYTE PTR ds:[rsi]
  419f87:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  419f8b:	outs   dx,BYTE PTR ds:[rsi]
  419f8c:	and    BYTE PTR [rdi],ah
  419f8e:	and    eax,0xa2773
  419f93:	add    BYTE PTR [rax],al
  419f95:	add    BYTE PTR [rax],al
  419f97:	add    BYTE PTR [rdi],ah
  419f99:	and    eax,0x64202773
  419f9e:	imul   bp,WORD PTR gs:[rsi+0x65],0x2064
  419fa5:	(bad)  
  419fa6:	jae    0x419fc8
  419fa8:	(bad)  
  419fa9:	and    eax,0x69202773
  419fae:	jb     0x41a022
  419fb0:	gs fs jne 0x41a017
  419fb4:	imul   esp,DWORD PTR [rdx+0x6c],0xa65
  419fbb:	add    BYTE PTR [rax],al
  419fbd:	add    BYTE PTR [rax],al
  419fbf:	add    BYTE PTR [rdi],ah
  419fc1:	and    eax,0x203a2773
  419fc6:	jb     0x41a02d
  419fc8:	jo     0x41a036
  419fca:	(bad)  
  419fcb:	movsxd esp,DWORD PTR [rbp+0x20]
  419fce:	(bad)  
  419fcf:	sub    eax,0x69772027
  419fd4:	je     0x41a03e
  419fd6:	and    BYTE PTR [rdi],ah
  419fd8:	sub    ebp,DWORD PTR [rip+0x6f662027]        # 0x6fa7c005
  419fde:	jb     0x41a000
  419fe0:	jae    0x41a057
  419fe2:	(bad)  
  419fe3:	je     0x41a057
  419fe5:	(bad)  
  419fe6:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  419fea:	outs   dx,BYTE PTR ds:[rsi]
  419feb:	and    BYTE PTR [rdi+0x72],ch
  419fee:	and    BYTE PTR [rdi],ah
  419ff0:	sub    ah,BYTE PTR [rdi]
  419ff2:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  419ff6:	ins    DWORD PTR es:[rdi],dx
  419ff7:	jne    0x41a065
  419ff9:	je     0x41a064
  419ffb:	jo     0x41a069
  419ffd:	jns    0x41a009
  419fff:	add    BYTE PTR [rdi],ah
  41a001:	and    eax,0x20272d73
  41a006:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41a00e:	(bad)  
  41a00f:	jae    0x41a031
  41a011:	(bad)  
  41a012:	and    eax,0x69202773
  41a017:	jb     0x41a08b
  41a019:	gs fs jne 0x41a080
  41a01d:	imul   esp,DWORD PTR [rdx+0x6c],0xa65
  41a024:	add    BYTE PTR [rax],al
  41a026:	add    BYTE PTR [rax],al
  41a028:	(bad)  
  41a029:	and    eax,0x20272d73
  41a02e:	fs imul bp,WORD PTR gs:[rsi+0x65],0x2064
  41a036:	(bad)  
  41a037:	jae    0x41a059
  41a039:	(bad)  
  41a03a:	and    eax,0x63202773
  41a03f:	outs   dx,DWORD PTR ds:[rsi]
  41a040:	outs   dx,BYTE PTR ds:[rsi]
  41a041:	je     0x41a0a4
  41a043:	imul   ebp,DWORD PTR [rsi+0x73],0x62206120
  41a04a:	(bad)  
  41a04b:	and    BYTE PTR fs:[rdi],ah
  41a04e:	(bad)  
  41a04f:	(bad)  
  41a050:	and    BYTE PTR cs:[rax],ch
  41a053:	rex.B
  41a054:	fs and BYTE PTR fs:[rax+0x61],dh
  41a059:	jb     0x41a0c0
  41a05b:	outs   dx,BYTE PTR ds:[rsi]
  41a05c:	je     0x41a0c6
  41a05e:	gs jae 0x41a0c6
  41a061:	jae    0x41a091
  41a063:	sub    DWORD PTR [rdx],ecx
  41a065:	add    BYTE PTR [rax],ah
  41a067:	sub    esp,DWORD PTR [rax]
  41a069:	add    BYTE PTR [rax],dh
  41a06b:	and    BYTE PTR [rax],al
  41a06d:	and    BYTE PTR [rax],ch
  41a06f:	jb     0x41a0e0
  41a071:	jne    0x41a0e1
  41a073:	fs gs and BYTE PTR fs:[rbp+0x70],dh
  41a079:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41a07d:	outs   dx,BYTE PTR ds:[rsi]
  41a07e:	gs (bad) 
  41a080:	jb     0x41a0e7
  41a082:	jae    0x41a0f8
  41a084:	and    BYTE PTR [rip+0x202973],ah        # 0x61c9fd
  41a08a:	add    BYTE PTR [rax],al
  41a08c:	add    BYTE PTR [rax],al
  41a08e:	add    BYTE PTR [rax],al
  41a090:	and    BYTE PTR [rax],ch
  41a092:	jb     0x41a103
  41a094:	jne    0x41a104
  41a096:	fs gs and BYTE PTR fs:[rdi+rbp*2+0x77],ah
  41a09d:	outs   dx,BYTE PTR ds:[rsi]
  41a09e:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41a0a2:	outs   dx,BYTE PTR ds:[rsi]
  41a0a3:	gs (bad) 
  41a0a5:	jb     0x41a10c
  41a0a7:	jae    0x41a11d
  41a0a9:	and    BYTE PTR [rip+0x202973],ah        # 0x61ca22
  41a0af:	and    eax,0x632563
  41a0b4:	sub    ah,BYTE PTR [rax]
  41a0b6:	add    BYTE PTR [rdi],bh
  41a0b8:	add    BYTE PTR [rbx+0x65],dh
  41a0bb:	(bad)  
  41a0bc:	jb     0x41a121
  41a0be:	push   0x79540a00
  41a0c3:	jo     0x41a12a
  41a0c5:	and    BYTE PTR [rdi],ah
  41a0c7:	jae    0x41a12e
  41a0c9:	(bad)  
  41a0ca:	jb     0x41a12f
  41a0cc:	push   0x78657420
  41a0d1:	je     0x41a0fa
  41a0d3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41a0d7:	jae    0x41a13e
  41a0d9:	and    BYTE PTR gs:[rcx+0x20],ah
  41a0dd:	ins    BYTE PTR es:[rdi],dx
  41a0de:	imul   esi,DWORD PTR [rbx+0x74],0x20666f20
  41a0e5:	(bad)  
  41a0e6:	ins    BYTE PTR es:[rdi],dx
  41a0e7:	ins    BYTE PTR es:[rdi],dx
  41a0e8:	and    BYTE PTR [rbp+0x6e],dh
  41a0eb:	imul   esi,DWORD PTR [rax+riz*1+0x6e],0x73656d61
  41a0f3:	and    BYTE PTR [rdx],cl
  41a0f5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41a0f8:	je     0x41a15b
  41a0fa:	imul   ebp,DWORD PTR [rsi+0x69],0x2720676e
  41a101:	je     0x41a168
  41a103:	js     0x41a179
  41a105:	(bad)  
  41a106:	and    BYTE PTR [rcx+0x73],ah
  41a109:	and    BYTE PTR [rcx+0x20],ah
  41a10c:	jae    0x41a183
  41a10e:	(bad)
  41a113:	outs   dx,BYTE PTR ds:[rsi]
  41a114:	or     cl,BYTE PTR [edx]
  41a117:	add    BYTE PTR [rax+0x65],ch
  41a11a:	ins    BYTE PTR es:[rdi],dx
  41a11b:	jo     0x41a11d
  41a11d:	add    BYTE PTR [rax],al
  41a11f:	add    BYTE PTR [rdx],cl
  41a121:	push   rbp
  41a122:	outs   dx,BYTE PTR ds:[rsi]
  41a123:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x766e6f63
  41a12b:	gs jb  0x41a1a2
  41a12e:	jae    0x41a150
  41a130:	(bad)  
  41a131:	gs je  0x41a1ab
  41a134:	gs outs dx,BYTE PTR gs:[rsi]
  41a137:	and    BYTE PTR [rcx+rbp*2+0x66],ah
  41a13b:	data16 gs jb 0x41a1a4
  41a13f:	outs   dx,BYTE PTR ds:[rsi]
  41a140:	je     0x41a162
  41a142:	ins    DWORD PTR es:[rdi],dx
  41a143:	gs (bad) 
  41a145:	jae    0x41a1bc
  41a147:	jb     0x41a1b2
  41a149:	outs   dx,BYTE PTR ds:[rsi]
  41a14a:	and    BYTE PTR [ebx+0x79],dh
  41a14e:	jae    0x41a1c4
  41a150:	gs ins DWORD PTR es:[rdi],dx
  41a152:	jae    0x41a174
  41a154:	(bad)  
  41a155:	outs   dx,BYTE PTR ds:[rsi]
  41a156:	and    BYTE PTR fs:[rax],ah
  41a159:	and    BYTE PTR [rax],ah
  41a15b:	and    eax,0x69203673
  41a160:	outs   dx,BYTE PTR ds:[rsi]
  41a161:	movsxd ebp,DWORD PTR [rax+0x65]
  41a164:	jae    0x41a170
  41a166:	(bad)  
  41a167:	movsxd esi,DWORD PTR [rbx+rsi*2+0x20]
  41a16b:	(bad)  
  41a16c:	jae    0x41a18e
  41a16e:	(bad)  
  41a16f:	and    BYTE PTR [rbp+0x6e],dh
  41a172:	imul   esi,DWORD PTR [rbx+rsi*2+0x2d],0x72617761
  41a17a:	and    BYTE PTR gs:[rbx+0x61],ah
  41a17e:	ins    BYTE PTR es:[rdi],dx
  41a17f:	movsxd esi,DWORD PTR [rbp+0x6c]
  41a182:	(bad)  
  41a183:	je     0x41a1f4
  41a185:	jb     0x41a1b5
  41a187:	and    BYTE PTR [rax],ah
  41a189:	rex.B je 0x41a1ac
  41a18c:	je     0x41a1f6
  41a18e:	and    BYTE PTR gs:[rdi],ah
  41a191:	and    eax,0x20202773
  41a196:	and    BYTE PTR [rax],ah
  41a198:	and    eax,0xa6d6373
  41a19d:	jo     0x41a211
  41a19f:	outs   dx,DWORD PTR ds:[rsi]
  41a1a0:	ins    DWORD PTR es:[rdi],dx
  41a1a1:	jo     0x41a217
  41a1a3:	sub    al,0x20
  41a1a5:	je     0x41a220
  41a1a7:	jo     0x41a20e
  41a1a9:	and    BYTE PTR [rcx+0x6e],ch
  41a1ac:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a1b0:	and    BYTE PTR [rbp+0x6e],dh
  41a1b3:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x20756f79
  41a1bb:	ja     0x41a21e
  41a1bd:	outs   dx,BYTE PTR ds:[rsi]
  41a1be:	je     0x41a1e0
  41a1c0:	je     0x41a231
  41a1c2:	and    BYTE PTR [rbx+0x6f],ah
  41a1c5:	outs   dx,BYTE PTR ds:[rsi]
  41a1c6:	jbe    0x41a22d
  41a1c8:	jb     0x41a23e
  41a1ca:	and    BYTE PTR [rsi+0x72],ah
  41a1cd:	outs   dx,DWORD PTR ds:[rsi]
  41a1ce:	ins    DWORD PTR es:[rdi],dx
  41a1cf:	and    BYTE PTR [rdi+0x72],ch
  41a1d2:	and    BYTE PTR [rax],ah
  41a1d4:	and    BYTE PTR [rax],ah
  41a1d6:	and    BYTE PTR [rax],ah
  41a1d8:	and    BYTE PTR [rax],ah
  41a1da:	and    BYTE PTR [rax],ah
  41a1dc:	and    BYTE PTR [rax],ah
  41a1de:	and    BYTE PTR [rdx],ch
  41a1e0:	and    BYTE PTR [rcx],dh
  41a1e2:	xor    eax,0xa34322e
  41a1e7:	(bad)  
  41a1e8:	outs   dx,BYTE PTR ds:[rsi]
  41a1e9:	and    BYTE PTR [rbp+0x78],ah
  41a1ec:	jo     0x41a260
  41a1ee:	gs jae 0x41a264
  41a1f1:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  41a1f8:	gs jbe 0x41a25c
  41a1fb:	ins    BYTE PTR es:[rdi],dx
  41a1fc:	jne    0x41a25f
  41a1fe:	je     0x41a265
  41a200:	and    BYTE PTR cs:[rax],ah
  41a203:	rex.B je 0x41a226
  41a206:	je     0x41a270
  41a208:	and    BYTE PTR gs:[rdi],ah
  41a20b:	and    eax,0x70202773
  41a210:	jb     0x41a281
  41a212:	ins    DWORD PTR es:[rdi],dx
  41a213:	jo     0x41a289
  41a215:	sub    al,0x20
  41a217:	and    BYTE PTR [rax],ah
  41a219:	and    BYTE PTR [rax],ah
  41a21b:	and    BYTE PTR [rax],ah
  41a21d:	and    BYTE PTR [rax],ah
  41a21f:	and    BYTE PTR [rax],ah
  41a221:	(bad)  
  41a222:	and    BYTE PTR [rax],dh
  41a224:	xor    BYTE PTR cs:[rsi],dh
  41a227:	xor    eax,0x746e650a
  41a22c:	gs jb  0x41a24f
  41a22f:	je     0x41a299
  41a231:	and    BYTE PTR gs:[rbp+0x6e],dh
  41a235:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x63206f74
  41a23d:	outs   dx,DWORD PTR ds:[rsi]
  41a23e:	outs   dx,BYTE PTR ds:[rsi]
  41a23f:	jbe    0x41a2a6
  41a241:	jb     0x41a2b7
  41a243:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41a247:	outs   dx,DWORD PTR ds:[rsi]
  41a248:	jb     0x41a26a
  41a24a:	jo     0x41a2be
  41a24c:	gs jae 0x41a2c2
  41a24f:	and    BYTE PTR [rdx+0x65],dh
  41a252:	je     0x41a2c9
  41a254:	jb     0x41a2c4
  41a256:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41a25a:	jae    0x41a2c1
  41a25c:	or     dh,BYTE PTR gs:[rax+rbp*2+0x65]
  41a261:	and    BYTE PTR [rdx+0x65],dh
  41a264:	fs jne 0x41a2ca
  41a267:	gs and BYTE PTR fs:[rsi+0x6f],ah
  41a26c:	jb     0x41a2db
  41a26e:	and    BYTE PTR [rdi+0x72],ch
  41a271:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41a275:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  41a27c:	and    BYTE PTR cs:[rax],ah
  41a27f:	and    BYTE PTR [rax],ah
  41a281:	and    BYTE PTR [rax],ah
  41a283:	and    BYTE PTR [rax],ah
  41a285:	and    BYTE PTR [rax],ah
  41a287:	and    BYTE PTR [rax],ah
  41a289:	and    BYTE PTR [rax],ah
  41a28b:	and    BYTE PTR [rax],ah
  41a28d:	and    BYTE PTR [rax],ah
  41a28f:	and    BYTE PTR [rax],ah
  41a291:	and    BYTE PTR [rax],ah
  41a293:	and    BYTE PTR [rax],ah
  41a295:	and    BYTE PTR [rax],ah
  41a297:	and    BYTE PTR [rip+0x6d657473],ah        # 0x6da71710
  41a29d:	jo     0x41a2e5
  41a29f:	sub    BYTE PTR [rdi],dh
  41a2a1:	xor    eax,0x20200a29
  41a2a6:	and    BYTE PTR [rax],ah
  41a2a8:	and    BYTE PTR [rax],ah
  41a2aa:	and    BYTE PTR [rax],ah
  41a2ac:	and    BYTE PTR [rax],ah
  41a2ae:	and    BYTE PTR [rax],ah
  41a2b0:	and    BYTE PTR [rax],ah
  41a2b2:	and    BYTE PTR [rax],ah
  41a2b4:	and    BYTE PTR [rax],ah
  41a2b6:	and    BYTE PTR [rax],ah
  41a2b8:	and    BYTE PTR [rax],ah
  41a2ba:	and    BYTE PTR [rax],ah
  41a2bc:	and    BYTE PTR [rax],ah
  41a2be:	and    BYTE PTR [rax],ah
  41a2c0:	and    BYTE PTR [rax],ah
  41a2c2:	and    BYTE PTR [rax],ah
  41a2c4:	and    BYTE PTR [rax],ah
  41a2c6:	and    BYTE PTR [rax],ah
  41a2c8:	and    BYTE PTR [rax],ah
  41a2ca:	and    BYTE PTR [rax],ah
  41a2cc:	and    BYTE PTR [rax],ah
  41a2ce:	and    BYTE PTR [rax],ah
  41a2d0:	and    BYTE PTR [rax],ah
  41a2d2:	and    BYTE PTR [rax],ah
  41a2d4:	and    BYTE PTR [rax],ah
  41a2d6:	and    BYTE PTR [rax],ah
  41a2d8:	and    BYTE PTR [rax],ah
  41a2da:	and    BYTE PTR [rax],ah
  41a2dc:	and    BYTE PTR [rax],ah
  41a2de:	and    eax,0x6d657473
  41a2e3:	jo     0x41a328
  41a2e5:	or     dl,BYTE PTR [rax+rbp*2+0x65]
  41a2e9:	and    BYTE PTR [rsi+0x69],ah
  41a2ec:	jb     0x41a361
  41a2ee:	je     0x41a310
  41a2f0:	gs js  0x41a354
  41a2f3:	ins    DWORD PTR es:[rdi],dx
  41a2f4:	jo     0x41a362
  41a2f6:	and    BYTE PTR gs:[rbx+0x68],dh
  41a2fa:	outs   dx,DWORD PTR ds:[rsi]
  41a2fb:	ja     0x41a370
  41a2fd:	and    BYTE PTR [rax+rbp*2+0x61],dh
  41a301:	je     0x41a323
  41a303:	and    BYTE PTR ss:[rcx+0x6e],ch
  41a307:	movsxd ebp,DWORD PTR [rax+0x65]
  41a30a:	jae    0x41a32c
  41a30c:	imul   esi,DWORD PTR [rbx+0x20],0x756f6261
  41a313:	je     0x41a335
  41a315:	xor    DWORD PTR [rip+0x206d6320],esi        # 0x20af063b
  41a31b:	and    BYTE PTR [rax],ah
  41a31d:	and    BYTE PTR [rax],ah
  41a31f:	and    BYTE PTR [rax],ah
  41a321:	and    BYTE PTR [rax],ah
  41a323:	and    BYTE PTR [rax],ah
  41a325:	and    BYTE PTR [rax],ah
  41a327:	and    BYTE PTR [rdx],dh
  41a329:	xor    ebp,DWORD PTR [rsi]
  41a32b:	cmp    BYTE PTR [rax],bh
  41a32d:	cmp    DWORD PTR [rdx],ecx
  41a32f:	outs   dx,DWORD PTR ds:[rsi]
  41a330:	jb     0x41a352
  41a332:	sub    BYTE PTR [rcx],dh
  41a334:	(bad)  
  41a335:	xor    BYTE PTR [rsi],ch
  41a337:	xor    BYTE PTR [rsi],dh
  41a339:	xor    eax,0x6d632029
  41a33e:	and    BYTE PTR cs:[rax],ah
  41a341:	push   rsp
  41a342:	push   0x65732065
  41a347:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41a34a:	and    BYTE PTR fs:[rbp+0x78],ah
  41a34e:	(bad)  
  41a34f:	ins    DWORD PTR es:[rdi],dx
  41a350:	jo     0x41a3be
  41a352:	and    BYTE PTR gs:[rbx+0x68],dh
  41a356:	outs   dx,DWORD PTR ds:[rsi]
  41a357:	ja     0x41a3cc
  41a359:	and    BYTE PTR [rax+0x6f],ch
  41a35c:	ja     0x41a37e
  41a35e:	je     0x41a3cf
  41a360:	or     ah,BYTE PTR [rbx+0x6f]
  41a363:	outs   dx,BYTE PTR ds:[rsi]
  41a364:	jbe    0x41a3cb
  41a366:	jb     0x41a3dc
  41a368:	and    BYTE PTR [rdi],dh
  41a36a:	xor    eax,0x67656420
  41a36f:	jb     0x41a3d6
  41a371:	gs jae 0x41a394
  41a374:	rex.RX (bad) 
  41a376:	push   0x686e6572
  41a37b:	imul   esi,DWORD PTR gs:[rax+riz*1+0x74],0x6543206f
  41a384:	ins    BYTE PTR es:[rdi],dx
  41a385:	jae    0x41a3f0
  41a387:	jne    0x41a3fc
  41a389:	and    BYTE PTR cs:[rax],ah
  41a38c:	push   rsp
  41a38d:	push   0x68742065
  41a392:	imul   esi,DWORD PTR [rdx+0x64],0x20200920
  41a399:	and    eax,0x5e756273
  41a39e:	sub    BYTE PTR [rcx],dh
  41a3a0:	(bad)  
  41a3a1:	xor    ebp,DWORD PTR [rcx]
  41a3a3:	or     ah,BYTE PTR [rbp+0x78]
  41a3a6:	(bad)  
  41a3a7:	ins    DWORD PTR es:[rdi],dx
  41a3a8:	jo     0x41a416
  41a3aa:	and    BYTE PTR gs:[rbx+0x6f],ah
  41a3ae:	outs   dx,BYTE PTR ds:[rsi]
  41a3af:	jbe    0x41a416
  41a3b1:	jb     0x41a427
  41a3b3:	jae    0x41a3d5
  41a3b5:	je     0x41a41f
  41a3b7:	and    BYTE PTR gs:[rbx+0x75],ah
  41a3bb:	(bad)  
  41a3bc:	and    BYTE PTR gs:[rdx+0x6f],dh
  41a3c0:	outs   dx,DWORD PTR ds:[rsi]
  41a3c1:	je     0x41a3e3
  41a3c3:	outs   dx,DWORD PTR ds:[rsi]
  41a3c4:	data16 and BYTE PTR [rcx+0x20],ah
  41a3c8:	(bad)  
  41a3c9:	jne    0x41a43e
  41a3cb:	push   0x74206c65
  41a3d0:	outs   dx,DWORD PTR ds:[rsi]
  41a3d1:	and    BYTE PTR [rcx+0x20],ah
  41a3d4:	ins    BYTE PTR es:[rdi],dx
  41a3d5:	imul   esi,DWORD PTR [rbx+0x74],0x9202020
  41a3dc:	and    BYTE PTR [rax],ah
  41a3de:	and    eax,0x3b746673
  41a3e3:	imul   ebp,DWORD PTR [rsi+0xa],0x7320666f
  41a3ea:	gs ins DWORD PTR es:[rdi],dx
  41a3ec:	imul   esp,DWORD PTR [rbx+0x6f],0x2d6e6f6c
  41a3f3:	jae    0x41a45a
  41a3f5:	jo     0x41a458
  41a3f7:	jb     0x41a45a
  41a3f9:	je     0x41a460
  41a3fb:	and    BYTE PTR fs:[rbp+0x6e],dh
  41a3ff:	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x20202020
  41a407:	and    BYTE PTR [rax],ah
  41a409:	and    BYTE PTR [rax],ah
  41a40b:	and    BYTE PTR [rax],ah
  41a40d:	and    BYTE PTR [rax],ah
  41a40f:	and    BYTE PTR [rax],ah
  41a411:	and    BYTE PTR [rax],ah
  41a413:	and    BYTE PTR [rax],ah
  41a415:	and    BYTE PTR [rax],ah
  41a417:	and    BYTE PTR [rax],ah
  41a419:	and    BYTE PTR [rax],ah
  41a41b:	or     DWORD PTR [rax],esp
  41a41d:	and    BYTE PTR [rax],ah
  41a41f:	and    BYTE PTR [rax],ah
  41a421:	and    BYTE PTR [rax],ah
  41a423:	and    BYTE PTR [rax],ah
  41a425:	and    BYTE PTR [rcx],dh
  41a427:	and    BYTE PTR [rsi+0x74],ah
  41a42a:	and    BYTE PTR [rbx],ch
  41a42c:	and    BYTE PTR [rax],dh
  41a42e:	cmp    DWORD PTR cs:[rax],esp
  41a431:	imul   ebp,DWORD PTR [rsi+0xa],0x206f540a
  41a438:	jno    0x41a4af
  41a43a:	imul   esi,DWORD PTR [rax+riz*1+0x66],0x206d6f72
  41a442:	jne    0x41a4b2
  41a444:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x65707974
  41a44c:	and    BYTE PTR [rbx+0x74],al
  41a44f:	jb     0x41a4bd
  41a451:	sub    eax,0x6f207325
  41a456:	jb     0x41a478
  41a458:	rex.XB je 0x41a4cd
  41a45b:	ins    BYTE PTR es:[rdi],dx
  41a45c:	sub    eax,0x20202e43
  41a461:	and    BYTE PTR [rax],ah
  41a463:	and    BYTE PTR [rax],ah
  41a465:	and    BYTE PTR [rip+0x62203273],ah        # 0x6261d6de
  41a46b:	je     0x41a4e2
  41a46d:	and    BYTE PTR [rbx],ch
  41a46f:	and    BYTE PTR [rsi*1+0x74662030],dh
  41a476:	and    BYTE PTR [rdx+riz*2+0x66],ch
  41a47a:	or     cl,BYTE PTR [rcx]
  41a47c:	or     DWORD PTR [rcx],ecx
  41a47e:	and    BYTE PTR [rax],ah
  41a480:	and    BYTE PTR [rax],ah
  41a482:	and    BYTE PTR [rax],ah
  41a484:	and    BYTE PTR [rax],ah
  41a486:	and    BYTE PTR [rax],ah
  41a488:	and    BYTE PTR [rax],ah
  41a48a:	and    BYTE PTR [rax],ah
  41a48c:	and    BYTE PTR [rax],ah
  41a48e:	and    BYTE PTR [rax],ah
  41a490:	and    BYTE PTR [rax],ah
  41a492:	and    BYTE PTR [rax],ah
  41a494:	and    BYTE PTR [rax],ah
  41a496:	and    eax,0x676b2873
  41a49b:	pop    rsi
  41a49c:	xor    ch,BYTE PTR [rdi]
  41a49e:	jae    0x41a4c9
  41a4a0:	(bad)  
  41a4a1:	sub    BYTE PTR [rcx+riz*2+0x79],ah
  41a4a5:	and    BYTE PTR [rdx+riz*2+0x2f],ch
  41a4a9:	ins    DWORD PTR es:[rdi],dx
  41a4aa:	pop    rsi
  41a4ab:	xor    ch,BYTE PTR [rcx]
  41a4ad:	or     al,BYTE PTR [rcx+0x74]
  41a4b0:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41a4b4:	and    BYTE PTR [rdi],ah
  41a4b6:	and    eax,0x70202773
  41a4bb:	jb     0x41a52c
  41a4bd:	ins    DWORD PTR es:[rdi],dx
  41a4be:	jo     0x41a534
  41a4c0:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  41a4c4:	and    BYTE PTR gs:[rdi],ah
  41a4c7:	and    eax,0x74202773
  41a4cc:	outs   dx,DWORD PTR ds:[rsi]
  41a4cd:	and    BYTE PTR [rdi+0x65],ah
  41a4d0:	je     0x41a4f2
  41a4d2:	(bad)  
  41a4d3:	and    BYTE PTR [rax],ah
  41a4d5:	and    BYTE PTR [rax],ah
  41a4d7:	and    BYTE PTR [rax],ah
  41a4d9:	and    BYTE PTR [rax],ah
  41a4db:	and    BYTE PTR [rax],ah
  41a4dd:	and    BYTE PTR [rax],ah
  41a4df:	sub    ah,BYTE PTR [rax]
  41a4e1:	xor    DWORD PTR [rsi],ebp
  41a4e3:	xor    BYTE PTR [rsi],dh
  41a4e5:	xor    BYTE PTR ss:[rsi],dh
  41a4e8:	cmp    BYTE PTR [riz*2+0xa38302b],dh
  41a4ef:	ins    BYTE PTR es:[rdi],dx
  41a4f0:	imul   esi,DWORD PTR [rbx+0x74],0x20666f20
  41a4f7:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41a4fa:	outs   dx,WORD PTR ds:[rsi]
  41a4fc:	jb     0x41a56b
  41a4fe:	(bad)  
  41a4ff:	(bad)  
  41a500:	ins    BYTE PTR es:[rdi],dx
  41a501:	and    BYTE PTR gs:[rbp+0x6e],dh
  41a505:	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x74412020
  41a50d:	and    BYTE PTR [rbp+0x69],ah
  41a510:	je     0x41a57a
  41a512:	gs jb  0x41a535
  41a515:	jo     0x41a589
  41a517:	outs   dx,DWORD PTR ds:[rsi]
  41a518:	ins    DWORD PTR es:[rdi],dx
  41a519:	jo     0x41a58f
  41a51b:	and    BYTE PTR [rcx+0x6f],bh
  41a51e:	jne    0x41a540
  41a520:	and    BYTE PTR [rax],ah
  41a522:	and    BYTE PTR [rax],ah
  41a524:	and    BYTE PTR [rax],ah
  41a526:	and    BYTE PTR [rdi],ch
  41a528:	and    BYTE PTR [rcx],bh
  41a52a:	xor    edi,DWORD PTR cs:[rax]
  41a52d:	xor    BYTE PTR [rdx],dh
  41a52f:	xor    DWORD PTR ss:[rcx],esi
  41a532:	gs sub eax,0x740a3930
  41a538:	jns    0x41a5aa
  41a53a:	and    BYTE PTR gs:[rdi],ah
  41a53d:	push   0x20706c65
  41a542:	ins    DWORD PTR es:[rdi],dx
  41a543:	jns    0x41a5ba
  41a545:	outs   dx,BYTE PTR ds:[rsi]
  41a546:	imul   esi,DWORD PTR [rdi+riz*1+0x20],0x62206f74
  41a54e:	jb     0x41a5bf
  41a550:	ja     0x41a5c5
  41a552:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  41a557:	and    BYTE PTR [rbp+0x6e],dh
  41a55a:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x61746164
  41a562:	(bad)  
  41a564:	jae    0x41a5cb
  41a566:	or     ah,BYTE PTR [rcx+0x6e]
  41a569:	and    BYTE PTR fs:[rdx+0x65],dh
  41a56d:	(bad)  
  41a56e:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  41a573:	and    BYTE PTR [rbx+0x6f],ah
  41a576:	ins    DWORD PTR es:[rdi],dx
  41a577:	ins    DWORD PTR es:[rdi],dx
  41a578:	outs   dx,BYTE PTR gs:[rsi]
  41a57a:	je     0x41a5ef
  41a57c:	and    BYTE PTR [rdx+0x65],dh
  41a57f:	ins    BYTE PTR es:[rdi],dx
  41a580:	(bad)  
  41a581:	je     0x41a5ec
  41a583:	outs   dx,BYTE PTR ds:[rsi]
  41a584:	and    BYTE PTR [edi+ebp*2+0x20],dh
  41a589:	ins    DWORD PTR es:[rdi],dx
  41a58a:	jns    0x41a601
  41a58c:	outs   dx,BYTE PTR ds:[rsi]
  41a58d:	imul   esi,DWORD PTR [rax+riz*1+0x6f],0x65732072
  41a595:	and    BYTE PTR gs:[rax],ah
  41a598:	and    BYTE PTR [rax],ah
  41a59a:	and    BYTE PTR [rax],ah
  41a59c:	and    BYTE PTR [rax],ah
  41a59e:	and    BYTE PTR [rip+0x74203673],ah        # 0x7461dc17
  41a5a4:	(bad)  
  41a5a6:	jo     0x41a5c8
  41a5a8:	jae    0x41a61f
  41a5aa:	addr32 (bad) 
  41a5ac:	jb     0x41a5b8
  41a5ae:	outs   dx,DWORD PTR ds:[rsi]
  41a5af:	je     0x41a619
  41a5b1:	gs jb  0x41a5d4
  41a5b4:	jne    0x41a624
  41a5b6:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x616c6572
  41a5be:	je     0x41a625
  41a5c0:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41a5c5:	ins    DWORD PTR es:[rdi],dx
  41a5c6:	jns    0x41a63d
  41a5c8:	outs   dx,BYTE PTR ds:[rsi]
  41a5c9:	imul   esi,DWORD PTR [rsi+rbp*1+0x20],0x70795420
  41a5d1:	imul   ebp,DWORD PTR [rsi+0x67],0x65732720
  41a5d8:	(bad)  
  41a5d9:	jb     0x41a63e
  41a5db:	push   0x20202020
  41a5e0:	and    BYTE PTR [rax],ah
  41a5e2:	and    BYTE PTR [rax],ah
  41a5e4:	and    BYTE PTR [rax],ah
  41a5e6:	and    eax,0x740a6773
  41a5eb:	gs js  0x41a662
  41a5ee:	(bad)  
  41a5ef:	and    BYTE PTR [rdi+0x69],dh
  41a5f2:	ins    BYTE PTR es:[rdi],dx
  41a5f3:	ins    BYTE PTR es:[rdi],dx
  41a5f4:	and    BYTE PTR [rbx+0x68],dh
  41a5f7:	outs   dx,DWORD PTR ds:[rsi]
  41a5f8:	ja     0x41a61a
  41a5fa:	jne    0x41a66a
  41a5fc:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x736f6877
  41a604:	and    BYTE PTR gs:[rsi+0x61],ch
  41a608:	ins    DWORD PTR es:[rdi],dx
  41a609:	gs jae 0x41a62c
  41a60c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41a60f:	je     0x41a672
  41a611:	imul   ebp,DWORD PTR [rsi+0x20],0x78657427
  41a618:	je     0x41a641
  41a61a:	and    BYTE PTR cs:[rax],ah
  41a61d:	and    BYTE PTR [rax],ah
  41a61f:	and    BYTE PTR [rax],ah
  41a621:	and    BYTE PTR [rax],ah
  41a623:	and    BYTE PTR [rax],ah
  41a625:	and    BYTE PTR [rax],ah
  41a627:	and    BYTE PTR [rax],ah
  41a629:	and    BYTE PTR [rdx],ch
  41a62b:	and    BYTE PTR [rdi],dh
  41a62d:	xor    eax,0x2020200a
  41a632:	and    BYTE PTR [rax],ah
  41a634:	and    BYTE PTR [rax],ah
  41a636:	and    BYTE PTR [rax],ah
  41a638:	and    BYTE PTR [rax],ah
  41a63a:	and    BYTE PTR [rax],ah
  41a63c:	and    BYTE PTR [rax],ah
  41a63e:	and    BYTE PTR [rax],ah
  41a640:	and    BYTE PTR [rax],ah
  41a642:	and    BYTE PTR [rax],ah
  41a644:	and    BYTE PTR [rax],ah
  41a646:	and    BYTE PTR [rax],ah
  41a648:	and    BYTE PTR [rax],ah
  41a64a:	and    BYTE PTR [rax],ah
  41a64c:	and    BYTE PTR [rax],ah
  41a64e:	and    BYTE PTR [rax],ah
  41a650:	and    BYTE PTR [rax],ah
  41a652:	and    BYTE PTR [rax],ah
  41a654:	and    BYTE PTR [rax],ah
  41a656:	and    BYTE PTR [rax],ah
  41a658:	and    BYTE PTR [rax],ah
  41a65a:	and    BYTE PTR [rax],ah
  41a65c:	and    BYTE PTR [rax],ah
  41a65e:	and    BYTE PTR [rax],ah
  41a660:	and    BYTE PTR [rax],ah
  41a662:	and    BYTE PTR [rax],ah
  41a664:	and    BYTE PTR [rax],ah
  41a666:	and    BYTE PTR [rax],ah
  41a668:	and    BYTE PTR [rax],ah
  41a66a:	and    BYTE PTR [rax],ah
  41a66c:	and    BYTE PTR [rax],ah
  41a66e:	and    BYTE PTR [rdi],ch
  41a670:	and    BYTE PTR [rax],dh
  41a672:	xor    BYTE PTR cs:[rcx],dh
  41a675:	xor    esi,DWORD PTR [rbx]
  41a677:	xor    esi,DWORD PTR [rbx]
  41a679:	xor    esi,DWORD PTR [rbx]
  41a67b:	xor    ecx,DWORD PTR [rdx]
  41a67d:	add    BYTE PTR [rax+rax*1+0x55],al
  41a681:	outs   dx,BYTE PTR ds:[rsi]
  41a682:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41a686:	outs   dx,BYTE PTR ds:[rsi]
  41a687:	and    BYTE PTR [rbp+0x6e],dh
  41a68a:	imul   esi,DWORD PTR [rax+riz*1+0x27],0xa277325
  41a692:	add    BYTE PTR [rip+0x252b2073],ah        # 0x256cc70b
  41a698:	and    BYTE PTR fs:[rip+0x73],ah        # 0x41a712
  41a69f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561e118
  41a6a5:	outs   dx,BYTE PTR ds:[rsi]
  41a6a6:	(bad)  
  41a6a7:	(bad)  
  41a6a8:	ins    BYTE PTR es:[rdi],dx
  41a6a9:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  41a6ae:	imul   ebp,DWORD PTR [rsi+0x76],0x20656b6f
  41a6b5:	jo     0x41a718
  41a6b7:	addr32 gs jb 0x41a6db
  41a6bb:	(bad)  
  41a6bc:	and    eax,0x74202773
  41a6c1:	outs   dx,DWORD PTR ds:[rsi]
  41a6c2:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  41a6c6:	jo     0x41a734
  41a6c8:	(bad)  
  41a6c9:	jns    0x41a6eb
  41a6cb:	push   0xa706c65
  41a6d0:	add    BYTE PTR [rbx+rax*2+0x5f],cl
  41a6d4:	rex.XB push r12
  41a6d6:	pop    rcx
  41a6d7:	push   rax
  41a6d8:	add    BYTE PTR [r9+rax*2+0x4e],r9b
  41a6dd:	rex.RXB add BYTE PTR [r13+0x6e],r12b
  41a6e1:	pop    rdi
  41a6e2:	push   rbp
  41a6e3:	push   rbx
  41a6e4:	add    BYTE PTR [rax],al
  41a6e6:	add    BYTE PTR [rax],al
  41a6e8:	push   rbp
  41a6e9:	outs   dx,BYTE PTR ds:[rsi]
  41a6ea:	imul   esi,DWORD PTR [rax+riz*1+0x6c],0x20747369
  41a6f2:	fs imul bp,WORD PTR gs:[rsi+0x69],0x6974
  41a6fa:	outs   dx,DWORD PTR ds:[rsi]
  41a6fb:	outs   dx,BYTE PTR ds:[rsi]
  41a6fc:	and    BYTE PTR [rbx+0x6f],ah
  41a6ff:	outs   dx,BYTE PTR ds:[rsi]
  41a700:	je     0x41a763
  41a702:	imul   ebp,DWORD PTR [rsi+0x73],0x72726520
  41a709:	outs   dx,DWORD PTR ds:[rsi]
  41a70a:	jb     0x41a77f
  41a70c:	or     al,BYTE PTR cs:[rax]
  41a70f:	(bad)  
  41a710:	jae    0x41a77a
  41a712:	(bad)  
  41a713:	jb     0x41a77a
  41a715:	(bad)  
  41a716:	jne    0x41a786
  41a718:	imul   esi,DWORD PTR [rbx+rsi*2+0x2f],0x61636f6c
  41a720:	ins    BYTE PTR es:[rdi],dx
  41a721:	gs cs ins DWORD PTR es:[rdi],dx
  41a724:	(bad)  
  41a725:	jo     0x41a727
  41a727:	sub    BYTE PTR [rdi+rbp*2+0x63],ch
  41a72b:	(bad)  
  41a72c:	ins    BYTE PTR es:[rdi],dx
  41a72d:	ins    DWORD PTR es:[rdi],dx
  41a72e:	(bad)  
  41a72f:	jo     0x41a75a
  41a731:	add    BYTE PTR [rax],al
  41a733:	add    BYTE PTR [rax],al
  41a735:	add    BYTE PTR [rax],al
  41a737:	add    BYTE PTR [rip+0x55203a73],ah        # 0x5561e1b0
  41a73d:	outs   dx,BYTE PTR ds:[rsi]
  41a73e:	(bad)  
  41a73f:	(bad)  
  41a740:	ins    BYTE PTR es:[rdi],dx
  41a741:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  41a746:	jb     0x41a7ad
  41a748:	(bad)  
  41a749:	and    BYTE PTR fs:[rdi+rbp*2+0x63],ch
  41a74e:	(bad)  
  41a74f:	ins    BYTE PTR es:[rdi],dx
  41a750:	and    BYTE PTR gs:[rbp+0x61],ch
  41a754:	jo     0x41a776
  41a756:	(bad)  
  41a757:	and    eax,0xa2773
  41a75c:	cs jne 0x41a7cd
  41a75f:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x74696e75
  41a767:	fs gs data16 cs jne 0x41a7db
  41a76d:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x2d2b0920
  41a775:	sub    ch,BYTE PTR [rdi]
  41a777:	sub    BYTE PTR [rcx],ch
  41a779:	jl     0x41a7d9
  41a77b:	cmp    eax,DWORD PTR [rax]
  41a77d:	add    BYTE PTR [rax],al
  41a77f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561e1f8
  41a785:	outs   dx,BYTE PTR ds:[rsi]
  41a786:	(bad)  
  41a787:	(bad)  
  41a788:	ins    BYTE PTR es:[rdi],dx
  41a789:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  41a78e:	outs   dx,DWORD PTR ds:[rsi]
  41a78f:	jo     0x41a7f6
  41a791:	outs   dx,BYTE PTR ds:[rsi]
  41a792:	and    BYTE PTR [rbp+0x6e],dh
  41a795:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x656c6966
  41a79d:	and    BYTE PTR [rdi],ah
  41a79f:	and    eax,0x202e2773
  41a7a4:	and    BYTE PTR [rax],al
  41a7a6:	add    BYTE PTR [rax],al
  41a7a8:	and    eax,0x6e752064
  41a7ad:	imul   esi,DWORD PTR [rbx+rsi*2+0x2c],0x20642520
  41a7b5:	jo     0x41a829
  41a7b7:	imul   di,WORD PTR gs:[rax+0x65],0x2c73
  41a7be:	and    BYTE PTR [rip+0x6f6e2064],ah        # 0x6fafc828
  41a7c4:	outs   dx,BYTE PTR ds:[rsi]
  41a7c5:	ins    BYTE PTR es:[rdi],dx
  41a7c6:	imul   ebp,DWORD PTR [rsi+0x65],0x75207261
  41a7cd:	outs   dx,BYTE PTR ds:[rsi]
  41a7ce:	imul   esi,DWORD PTR [rbx+rsi*2+0xa],0x4150000a
  41a7d6:	rex.RXB
  41a7d7:	rex.RB push r10
  41a7d9:	add    BYTE PTR [rbp+0x6f],ch
  41a7dc:	jb     0x41a843
  41a7de:	add    BYTE PTR [rip+0xa732573],ah        # 0xab4cd57
  41a7e4:	add    BYTE PTR [rsi+0x65],dh
  41a7e7:	jb     0x41a85c
  41a7e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x69757100
  41a7f0:	gs je  0x41a7f3
  41a7f3:	jae    0x41a85e
  41a7f5:	ins    BYTE PTR es:[rdi],dx
  41a7f6:	outs   dx,BYTE PTR gs:[rsi]
  41a7f8:	je     0x41a7fa
  41a7fa:	gs js  0x41a86d
  41a7fd:	outs   dx,DWORD PTR ds:[rsi]
  41a7fe:	outs   dx,BYTE PTR ds:[rsi]
  41a7ff:	outs   dx,BYTE PTR gs:[rsi]
  41a801:	je     0x41a86c
  41a803:	(bad)  
  41a804:	ins    BYTE PTR es:[rdi],dx
  41a805:	add    BYTE PTR [rcx+rbp*2+0x67],ah
  41a809:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x7074756f
  41a811:	jne    0x41a887
  41a813:	sub    eax,0x6d726f66
  41a818:	(bad)  
  41a819:	je     0x41a81b
  41a81b:	movsxd ebp,DWORD PTR [rax+0x65]
  41a81e:	movsxd ebp,DWORD PTR [rbx+0x0]
  41a821:	movsxd ebp,DWORD PTR [rax+0x65]
  41a824:	movsxd ebp,DWORD PTR [rbx+0x2d]
  41a827:	jbe    0x41a88e
  41a829:	jb     0x41a88d
  41a82b:	outs   dx,DWORD PTR ds:[rsi]
  41a82c:	jae    0x41a893
  41a82e:	add    BYTE PTR [rsi+0x65],dh
  41a831:	jb     0x41a895
  41a833:	outs   dx,DWORD PTR ds:[rsi]
  41a834:	jae    0x41a89b
  41a836:	sub    eax,0x63656863
  41a83b:	imul   eax,DWORD PTR [rax],0x76
  41a83e:	gs jb  0x41a8a3
  41a841:	outs   dx,DWORD PTR ds:[rsi]
  41a842:	jae    0x41a8a9
  41a844:	add    BYTE PTR [rsi+0x69],ah
  41a847:	ins    BYTE PTR es:[rdi],dx
  41a848:	add    BYTE PTR gs:[rbx+0x74],dh
  41a84c:	jb     0x41a8b7
  41a84e:	movsxd esi,DWORD PTR [rax+rax*1+0x74]
  41a852:	gs jb  0x41a8c8
  41a855:	add    BYTE PTR gs:[rdx+0x6f],dh
  41a859:	jne    0x41a8c9
  41a85b:	add    BYTE PTR fs:[rbx+0x6f],ah
  41a85f:	ins    DWORD PTR es:[rdi],dx
  41a860:	jo     0x41a8c3
  41a862:	movsxd esi,DWORD PTR [rax+rax*1+0x6d]
  41a866:	imul   ebp,DWORD PTR [rsi+0x75],0x6f6e0073
  41a86d:	ins    BYTE PTR es:[rdi],dx
  41a86e:	imul   esi,DWORD PTR [rbx+0x74],0x68730073
  41a875:	outs   dx,DWORD PTR ds:[rsi]
  41a876:	ja     0x41a8a5
  41a878:	data16 (bad) 
  41a87a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
  41a87e:	add    BYTE PTR [rax+0x72],dh
  41a881:	outs   dx,DWORD PTR ds:[rsi]
  41a882:	fs jne 0x41a8e8
  41a885:	je     0x41a887
  41a887:	outs   dx,DWORD PTR ds:[rsi]
  41a888:	outs   dx,BYTE PTR ds:[rsi]
  41a889:	gs sub eax,0x656e696c
  41a88f:	add    BYTE PTR [rdi+0x6c],ch
  41a892:	fs jae 0x41a909
  41a895:	(bad)  
  41a896:	jb     0x41a898
  41a898:	outs   dx,BYTE PTR ds:[rsi]
  41a899:	gs ja  0x41a90f
  41a89c:	je     0x41a8ff
  41a89e:	jb     0x41a8a0
  41a8a0:	push   rsi
  41a8a1:	jbe    0x41a914
  41a8a3:	movsxd ebp,DWORD PTR gs:[rax+0x53]
  41a8a7:	jae    0x41a91d
  41a8a9:	data16 cmp ch,BYTE PTR [rdi+0x3a]
  41a8ad:	cmp    ch,BYTE PTR fs:[rbp+0x6e]
  41a8b1:	jo     0x41a925
  41a8b3:	xor    DWORD PTR [rdx+rdi*1+0x0],ebp
  41a8b7:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
  41a8be:	(bad)  
  41a8bf:	outs   dx,BYTE PTR ds:[rsi]
  41a8c0:	outs   dx,DWORD PTR ds:[rsi]
  41a8c1:	outs   dx,BYTE PTR ds:[rsi]
  41a8c2:	jo     0x41a936
  41a8c4:	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
  41a8cb:	push   rbp
  41a8cc:	push   rsp
  41a8cd:	rex.RX sub eax,0x75530038
  41a8d3:	movsxd esp,DWORD PTR [rbx+0x65]
  41a8d6:	jae    0x41a94b
  41a8d8:	data16 jne 0x41a947
  41a8db:	and    BYTE PTR [rbx+0x6f],ah
  41a8de:	ins    DWORD PTR es:[rdi],dx
  41a8df:	jo     0x41a94d
  41a8e1:	gs je  0x41a94d
  41a8e4:	outs   dx,DWORD PTR ds:[rsi]
  41a8e5:	outs   dx,BYTE PTR ds:[rsi]
  41a8e6:	add    BYTE PTR [rax+0x61],dl
  41a8e9:	jb     0x41a95e
  41a8eb:	and    BYTE PTR gs:[rbp+0x72],ah
  41a8ef:	jb     0x41a960
  41a8f1:	jb     0x41a8f3
  41a8f3:	push   rax
  41a8f4:	jb     0x41a965
  41a8f6:	fs jne 0x41a95c
  41a8f9:	je     0x41a91b
  41a8fb:	outs   dx,DWORD PTR ds:[rsi]
  41a8fc:	jbe    0x41a963
  41a8fe:	jb     0x41a966
  41a900:	ins    BYTE PTR es:[rdi],dx
  41a901:	outs   dx,DWORD PTR ds:[rsi]
  41a902:	ja     0x41a904
  41a904:	add    BYTE PTR [rax],al
  41a906:	add    BYTE PTR [rax],al
  41a908:	push   rbp
  41a909:	outs   dx,BYTE PTR ds:[rsi]
  41a90a:	imul   esi,DWORD PTR [rax+riz*1+0x72],0x63756465
  41a912:	je     0x41a97d
  41a914:	outs   dx,DWORD PTR ds:[rsi]
  41a915:	outs   dx,BYTE PTR ds:[rsi]
  41a916:	and    BYTE PTR [rbp+0x72],ah
  41a919:	jb     0x41a98a
  41a91b:	jb     0x41a93d
  41a91d:	sub    BYTE PTR [rdx+0x61],ah
  41a920:	and    BYTE PTR fs:[rbp+0x6e],dh
  41a924:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x6e696665
  41a92c:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x296e
  41a934:	add    BYTE PTR [rax],al
  41a936:	add    BYTE PTR [rax],al
  41a938:	rex.WB ins BYTE PTR es:[rdi],dx
  41a93a:	ins    BYTE PTR es:[rdi],dx
  41a93b:	gs addr32 (bad) 
  41a93e:	ins    BYTE PTR es:[rdi],dx
  41a93f:	and    BYTE PTR [rbx+0x75],dh
  41a942:	ins    DWORD PTR es:[rdi],dx
  41a943:	and    BYTE PTR [rdi+0x72],ch
  41a946:	and    BYTE PTR [rcx+rbp*2+0x66],ah
  41a94a:	data16 gs jb 0x41a9b3
  41a94e:	outs   dx,BYTE PTR ds:[rsi]
  41a94f:	movsxd esp,DWORD PTR [rbp+0x20]
  41a952:	outs   dx,DWORD PTR ds:[rsi]
  41a953:	data16 and BYTE PTR [rsi+0x6f],ch
  41a957:	outs   dx,BYTE PTR ds:[rsi]
  41a958:	sub    eax,0x666e6f63
  41a95d:	outs   dx,DWORD PTR ds:[rsi]
  41a95e:	jb     0x41a9cd
  41a960:	(bad)  
  41a961:	(bad)  
  41a962:	ins    BYTE PTR es:[rdi],dx
  41a963:	and    BYTE PTR gs:[rbp+0x6e],dh
  41a967:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x74696e55
  41a96f:	and    BYTE PTR [rsi+0x6f],ch
  41a972:	je     0x41a994
  41a974:	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  41a97c:	outs   dx,BYTE PTR ds:[rsi]
  41a97d:	ins    BYTE PTR es:[rdi],dx
  41a97e:	gs jae 0x41a9f4
  41a981:	add    BYTE PTR [rbp+0x6e],dl
  41a984:	imul   esi,DWORD PTR [rax+riz*1+0x6e],0x6120746f
  41a98c:	and    BYTE PTR [rdx+0x6f],dh
  41a98f:	outs   dx,DWORD PTR ds:[rsi]
  41a990:	je     0x41a992
  41a992:	push   rbp
  41a993:	outs   dx,BYTE PTR ds:[rsi]
  41a994:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41a998:	outs   dx,BYTE PTR ds:[rsi]
  41a999:	and    BYTE PTR [rbp+0x6e],dh
  41a99c:	imul   esi,DWORD PTR [rax+rax*1+0x42],0x61206461
  41a9a4:	jb     0x41aa0d
  41a9a6:	jne    0x41aa15
  41a9a8:	outs   dx,BYTE PTR gs:[rsi]
  41a9aa:	je     0x41a9ac
  41a9ac:	add    BYTE PTR [rax],al
  41a9ae:	add    BYTE PTR [rax],al
  41a9b0:	push   rdi
  41a9b1:	imul   esi,DWORD PTR gs:[rdx+0x64],0x6e6f6e20
  41a9b9:	ins    BYTE PTR es:[rdi],dx
  41a9ba:	imul   ebp,DWORD PTR [rsi+0x65],0x75207261
  41a9c1:	outs   dx,BYTE PTR ds:[rsi]
  41a9c2:	imul   esi,DWORD PTR [rax+riz*1+0x74],0x20657079
  41a9ca:	sub    BYTE PTR [rdx+0x75],ah
  41a9cd:	and    BYTE PTR [ecx+0x6e],ch
  41a9d1:	and    BYTE PTR [rax+0x72],dh
  41a9d4:	outs   dx,DWORD PTR ds:[rsi]
  41a9d5:	addr32 jb 0x41aa39
  41a9d8:	ins    DWORD PTR es:[rdi],dx
  41a9d9:	sub    DWORD PTR [rax],eax
  41a9db:	add    BYTE PTR [rax],al
  41a9dd:	add    BYTE PTR [rax],al
  41a9df:	add    BYTE PTR [rsi+0x75],al
  41a9e2:	outs   dx,BYTE PTR ds:[rsi]
  41a9e3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41a9e7:	outs   dx,BYTE PTR ds:[rsi]
  41a9e8:	and    BYTE PTR [rcx+0x72],ah
  41a9eb:	addr32 jne 0x41aa5b
  41a9ee:	outs   dx,BYTE PTR gs:[rsi]
  41a9f0:	je     0x41aa12
  41a9f2:	push   0x77207361
  41a9f7:	jb     0x41aa68
  41a9f9:	outs   dx,BYTE PTR ds:[rsi]
  41a9fa:	and    BYTE PTR [ecx+ebp*2+0x6d],ah
  41a9ff:	outs   dx,BYTE PTR gs:[rsi]
  41aa01:	jae    0x41aa6c
  41aa03:	outs   dx,DWORD PTR ds:[rsi]
  41aa04:	outs   dx,BYTE PTR ds:[rsi]
  41aa05:	add    BYTE PTR [rax],al
  41aa07:	add    BYTE PTR [rcx+0x72],al
  41aa0a:	addr32 jne 0x41aa7a
  41aa0d:	outs   dx,BYTE PTR gs:[rsi]
  41aa0f:	je     0x41aa31
  41aa11:	outs   dx,DWORD PTR ds:[rsi]
  41aa12:	data16 and BYTE PTR [rsi+0x75],ah
  41aa16:	outs   dx,BYTE PTR ds:[rsi]
  41aa17:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41aa1b:	outs   dx,BYTE PTR ds:[rsi]
  41aa1c:	and    BYTE PTR [rdi+0x75],ch
  41aa1f:	je     0x41aa94
  41aa21:	imul   esp,DWORD PTR [rbp+riz*2+0x20],0x616d6f64
  41aa29:	imul   ebp,DWORD PTR [rsi+0x0],0x0
  41aa30:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  41aa32:	outs   dx,BYTE PTR ds:[rsi]
  41aa33:	ins    BYTE PTR es:[rdi],dx
  41aa34:	imul   ebp,DWORD PTR [rsi+0x65],0x75207261
  41aa3b:	outs   dx,BYTE PTR ds:[rsi]
  41aa3c:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x6e696665
  41aa44:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x6168206e
  41aa4c:	jae    0x41aa6e
  41aa4e:	jne    0x41aabe
  41aa50:	imul   esi,DWORD PTR [rax+riz*1+0x65],0x726f7272
  41aa58:	add    BYTE PTR [rsi+0x6f],cl
  41aa5b:	and    BYTE PTR [rcx+0x6e],ch
  41aa5e:	jbe    0x41aac5
  41aa60:	jb     0x41aad5
  41aa62:	and    BYTE PTR gs:[rbp+riz*2+0x66],ah
  41aa67:	imul   ebp,DWORD PTR [rsi+0x65],0x64
  41aa6e:	add    BYTE PTR [rax],al
  41aa70:	push   rax
  41aa71:	(bad)  
  41aa72:	jb     0x41aae7
  41aa74:	gs jb  0x41aa97
  41aa77:	ins    DWORD PTR es:[rdi],dx
  41aa78:	gs ins DWORD PTR es:[rdi],dx
  41aa7a:	outs   dx,DWORD PTR ds:[rsi]
  41aa7b:	jb     0x41aaf6
  41aa7d:	and    BYTE PTR [rdi+0x76],ch
  41aa80:	gs jb  0x41aae9
  41aa83:	ins    BYTE PTR es:[rdi],dx
  41aa84:	outs   dx,DWORD PTR ds:[rsi]
  41aa85:	ja     0x41aaa7
  41aa87:	sub    BYTE PTR [rdx+0x65],dh
  41aa8a:	movsxd esi,DWORD PTR [rbp+0x72]
  41aa8d:	jae    0x41aaf8
  41aa8f:	jbe    0x41aaf6
  41aa91:	and    BYTE PTR [rsi+0x75],ah
  41aa94:	outs   dx,BYTE PTR ds:[rsi]
  41aa95:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41aa99:	outs   dx,BYTE PTR ds:[rsi]
  41aa9a:	and    BYTE PTR [rbp+riz*2+0x66],ah
  41aa9e:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  41aaa5:	(bad)  
  41aaa6:	sub    DWORD PTR [rax],eax
  41aaa8:	rex.B jb 0x41ab12
  41aaab:	jne    0x41ab1a
  41aaad:	outs   dx,BYTE PTR gs:[rsi]
  41aaaf:	je     0x41aad1
  41aab1:	ja     0x41ab25
  41aab3:	outs   dx,DWORD PTR ds:[rsi]
  41aab4:	outs   dx,BYTE PTR ds:[rsi]
  41aab5:	and    BYTE PTR [ecx+ebp*2+0x6d],ah
  41aaba:	outs   dx,BYTE PTR gs:[rsi]
  41aabc:	jae    0x41ab27
  41aabe:	outs   dx,DWORD PTR ds:[rsi]
  41aabf:	outs   dx,BYTE PTR ds:[rsi]
  41aac0:	and    BYTE PTR [rdi+0x72],ch
  41aac3:	and    BYTE PTR [rdx+0x61],ah
  41aac6:	and    BYTE PTR fs:[rsi+0x6f],ch
  41aaca:	outs   dx,BYTE PTR ds:[rsi]
  41aacb:	ins    BYTE PTR es:[rdi],dx
  41aacc:	imul   ebp,DWORD PTR [rsi+0x65],0x75207261
  41aad3:	outs   dx,BYTE PTR ds:[rsi]
  41aad4:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x6e696665
  41aadc:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x6e55006e
  41aae4:	(bad)  
  41aae5:	(bad)  
  41aae6:	ins    BYTE PTR es:[rdi],dx
  41aae7:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
  41aaec:	outs   dx,DWORD PTR ds:[rsi]
  41aaed:	jo     0x41ab54
  41aaef:	outs   dx,BYTE PTR ds:[rsi]
  41aaf0:	and    BYTE PTR [rbp+0x6e],dh
  41aaf3:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x656c6966
  41aafb:	add    BYTE PTR [rbp+0x6e],dl
  41aafe:	imul   esi,DWORD PTR [rbx+rsi*2+0x20],0x656c6966
  41ab06:	and    BYTE PTR [rbx+0x6f],ah
  41ab09:	outs   dx,BYTE PTR ds:[rsi]
  41ab0a:	je     0x41ab6d
  41ab0c:	imul   ebp,DWORD PTR [rsi+0x73],0x72726520
  41ab13:	outs   dx,DWORD PTR ds:[rsi]
  41ab14:	jb     0x41ab89
  41ab16:	add    BYTE PTR [rbp+0x65],cl
  41ab19:	ins    DWORD PTR es:[rdi],dx
  41ab1a:	outs   dx,DWORD PTR ds:[rsi]
  41ab1b:	jb     0x41ab96
  41ab1d:	and    BYTE PTR [rcx+0x6c],ah
  41ab20:	ins    BYTE PTR es:[rdi],dx
  41ab21:	outs   dx,DWORD PTR ds:[rsi]
  41ab22:	movsxd esp,DWORD PTR [rcx+0x74]
  41ab25:	imul   ebp,DWORD PTR [rdi+0x6e],0x72726520
  41ab2c:	outs   dx,DWORD PTR ds:[rsi]
  41ab2d:	jb     0x41ab2f
  41ab2f:	rex.WRB (bad) 
  41ab31:	ins    BYTE PTR es:[rdi],dx
  41ab32:	outs   dx,WORD PTR ds:[rsi]
  41ab34:	jb     0x41aba3
  41ab36:	gs and BYTE PTR fs:[rsi+0x75],ch
  41ab3b:	ins    DWORD PTR es:[rdi],dx
  41ab3c:	(bad)  
  41ab3d:	gs jb  0x41ab40
  41ab40:	push   rbp
  41ab41:	outs   dx,BYTE PTR ds:[rsi]
  41ab42:	imul   esi,DWORD PTR [rax+riz*1+0x6e],0x20656d61
  41ab4a:	outs   dx,BYTE PTR gs:[rsi]
  41ab4c:	fs jae 0x41ab6f
  41ab4f:	ja     0x41abba
  41ab51:	je     0x41abbb
  41ab53:	and    BYTE PTR [rsi+0x6f],ch
  41ab56:	outs   dx,BYTE PTR ds:[rsi]
  41ab57:	jp     0x41abbe
  41ab59:	jb     0x41abca
  41ab5b:	and    BYTE PTR [rcx+rbp*2+0x67],ah
  41ab5f:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x6f687469
  41ab67:	jne    0x41abdd
  41ab69:	and    BYTE PTR [rax+0x72],dh
  41ab6c:	movsxd esp,DWORD PTR gs:[rbp+0x64]
  41ab70:	imul   ebp,DWORD PTR [rsi+0x67],0x275f2720
  41ab77:	add    BYTE PTR [rax],dh
  41ab79:	xor    DWORD PTR [rdx],esi
  41ab7b:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  41ab82:	cs sub al,0x0
  41ab85:	or     DWORD PTR [rbp+riz*2+0x66],eax
  41ab89:	imul   ebp,DWORD PTR [rsi+0x69],0x6e6f6974
  41ab90:	cmp    ah,BYTE PTR [rax]
  41ab92:	add    BYTE PTR [rcx+0x6f],bl
  41ab95:	jne    0x41abb7
  41ab97:	ja     0x41abfa
  41ab99:	outs   dx,BYTE PTR ds:[rsi]
  41ab9a:	je     0x41abd6
  41ab9c:	and    BYTE PTR [rax],al
  41ab9e:	pop    rcx
  41ab9f:	outs   dx,DWORD PTR ds:[rsi]
  41aba0:	jne    0x41abc2
  41aba2:	push   0x3a657661
  41aba7:	and    BYTE PTR [rax],al
  41aba9:	jne    0x41ac19
  41abab:	imul   esi,DWORD PTR [rbx+rsi*2+0x3d],0x6d6f6400
  41abb3:	(bad)  
  41abb4:	imul   ebp,DWORD PTR [rsi+0x3d],0x6e617200
  41abbb:	addr32 gs cmp eax,0x0
  41abc2:	add    BYTE PTR [rax],al
  41abc4:	add    BYTE PTR [rax],al
  41abc6:	lock (bad) 
	...
  41abd0:	(bad)  
  41abd1:	(bad)  
  41abd2:	(bad)  
  41abd3:	(bad)  
  41abd4:	(bad)  
  41abd5:	(bad)  
  41abd6:	(bad)  
  41abd7:	jg     0x41abd9
	...
  41abe5:	add    BYTE PTR [rax+0x3c],dh
  41abeb:	add    BYTE PTR [rax],al
  41abed:	add    al,ah
  41abef:	rex.XB xor esi,DWORD PTR [r11]
  41abf2:	xor    esi,DWORD PTR [rbx]
  41abf4:	xor    esi,DWORD PTR [rbx]
  41abf6:	repz (bad) 
  41abf8:	add    BYTE PTR [rax],al
  41abfa:	add    BYTE PTR [rax],al
  41abfc:	add    BYTE PTR [rax],al
  41abfe:	add    BYTE PTR [rax+0x0],al
  41ac01:	add    BYTE PTR [rax],al
  41ac03:	add    BYTE PTR [rax],al
  41ac05:	xchg   rbx,rax
  41ac07:	add    BYTE PTR [rax],al
  41ac0a:	add    BYTE PTR [rax],al
  41ac0c:	add    BYTE PTR [rax],al
  41ac0e:	lock mov edi,0x0
  41ac14:	add    BYTE PTR [rax],al
  41ac16:	loopne 0x41ac57
  41ac18:	add    BYTE PTR [rax],al
  41ac1a:	add    BYTE PTR [rax],al
  41ac1c:	add    BYTE PTR [rax],al
  41ac1e:	sbb    al,0x40
  41ac20:	adc    edx,ebp
  41ac22:	sub    eax,0x71979981
  41ac27:	cmp    eax,0x0
	...
  41ac40:	sub    BYTE PTR [rdi+0x65],ah
  41ac43:	je     0x41acb3
  41ac45:	gs ja  0x41acbd
  41ac48:	outs   dx,BYTE PTR ds:[rsi]
  41ac49:	imul   esi,DWORD PTR [rcx+rbp*1+0x0],0x69646172
  41ac51:	(bad)  
  41ac52:	outs   dx,BYTE PTR ds:[rsi]
  41ac53:	add    BYTE PTR [rax],ah
  41ac55:	or     DWORD PTR [rdx],ecx
  41ac57:	add    BYTE PTR [rsi],ch
  41ac59:	sub    al,0x30
  41ac5b:	xor    DWORD PTR [rdx],esi
  41ac5d:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  41ac64:	add    BYTE PTR [rsi+0x3b],bh
  41ac67:	sub    ebp,DWORD PTR [rip+0x97c2f2a]        # 0x9bddb97
  41ac6d:	or     bl,BYTE PTR [rsi+0x20]
  41ac70:	sub    BYTE PTR [rcx],ch
  41ac72:	add    BYTE PTR [rsi],ch
  41ac74:	sub    al,0x5f
  41ac76:	add    BYTE PTR [rdx],dh
  41ac78:	xor    esi,DWORD PTR [rsi*1+0x39383736]
  41ac7f:	add    BYTE PTR [rax],ch
  41ac81:	jns    0x41acfc
  41ac83:	ins    BYTE PTR es:[rdi],dx
  41ac84:	gs js  0x41acb0
  41ac87:	add    BYTE PTR [rdx],ch
  41ac89:	sub    al,BYTE PTR [rax]
  41ac8b:	add    ah,ch
  41ac8d:	clc    
  41ac8e:	(bad)  
  41ac8f:	(bad)  
  41ac90:	in     al,dx
  41ac91:	clc    
  41ac92:	(bad)  
  41ac93:	(bad)  
  41ac94:	mov    esi,0xafffefc
  41ac99:	std    
  41ac9a:	(bad)  
  41ac9b:	push   rsp
  41ac9d:	idiv   esi
  41ac9f:	jmp    rdx
  41aca1:	stc    
  41aca2:	(bad)  
  41aca3:	call   QWORD PTR [rsp+rdi*8-0x2]
  41aca7:	jmp    rdx
  41aca9:	stc    
  41acaa:	(bad)  
  41acab:	call   QWORD PTR [rdi+0x6ffffefc]
  41acb1:	cld    
  41acb2:	(bad)  
  41acb3:	(bad)  
  41acb4:	(bad)  
  41acb5:	cld    
  41acb6:	(bad)  
  41acb7:	call   QWORD PTR [rdi-0x5]
  41acba:	(bad)  
  41acbb:	(bad)  
  41acbc:	cmp    bl,bh
  41acbe:	(bad)  
  41acbf:	inc    esp
  41acc1:	clc    
  41acc2:	(bad)  
  41acc3:	inc    esp
  41acc5:	clc    
  41acc6:	(bad)  
  41acc7:	jmp    rdx
  41acc9:	stc    
  41acca:	(bad)  
  41accb:	dec    DWORD PTR [rbx-0x7e000106]
  41acd1:	cli    
  41acd2:	(bad)  
  41acd3:	(bad)  
  41acd4:	mov    ebp,0xe2fffefb
  41acd9:	stc    
  41acda:	(bad)  
  41acdb:	call   FWORD PTR [rbp-0x3b000105]
  41ace1:	clc    
  41ace2:	(bad)  
  41ace3:	call   QWORD PTR [rbx+rdi*8-0x61d0002]
  41acea:	(bad)  
  41aceb:	call   QWORD PTR [rsi]
  41aced:	cld    
  41acee:	(bad)  
  41acef:	push   rbx
  41acf1:	sti    
  41acf2:	(bad)  
  41acf3:	jmp    FWORD PTR [rdi]
  41acf5:	cld    
  41acf6:	(bad)  
  41acf7:	jmp    QWORD PTR [rax]
  41acf9:	cld    
  41acfa:	(bad)  
  41acfb:	inc    ecx
  41acfd:	cli    
  41acfe:	(bad)  
  41acff:	inc    DWORD PTR [rbx+rdi*8]
  41ad02:	(bad)  
  41ad03:	jmp    FWORD PTR [rcx-0x66000105]
  41ad09:	cli    
  41ad0a:	(bad)  
  41ad0b:	push   QWORD PTR [rcx]
  41ad0d:	cli    
  41ad0e:	(bad)  
  41ad0f:	call   FWORD PTR [rcx-0x6]
  41ad12:	(bad)  
  41ad13:	push   QWORD PTR [rbx+0x71]
  41ad16:	jb     0x41ad8c
  41ad18:	add    BYTE PTR [rbx+0x75],ah
  41ad1b:	(bad)  
  41ad1c:	gs jb  0x41ad8e
  41ad1f:	outs   dx,DWORD PTR ds:[rsi]
  41ad20:	je     0x41ad22
  41ad22:	jo     0x41ad89
  41ad24:	jb     0x41ad26
  41ad26:	jae    0x41ad91
  41ad28:	outs   dx,BYTE PTR ds:[rsi]
  41ad29:	add    BYTE PTR [rbx+0x6f],ah
  41ad2c:	jae    0x41ad2e
  41ad2e:	je     0x41ad91
  41ad30:	outs   dx,BYTE PTR ds:[rsi]
  41ad31:	add    BYTE PTR [rsi+rbp*2+0x0],ch
  41ad35:	ins    BYTE PTR es:[rdi],dx
  41ad36:	outs   dx,DWORD PTR ds:[rsi]
  41ad37:	add    BYTE PTR [edi+ebp*2+0x67],ch
  41ad3c:	xor    al,BYTE PTR [rax]
  41ad3e:	gs js  0x41adb1
  41ad41:	add    BYTE PTR [rcx+0x63],ah
  41ad44:	outs   dx,DWORD PTR ds:[rsi]
  41ad45:	jae    0x41ad47
  41ad47:	(bad)  
  41ad48:	je     0x41adab
  41ad4a:	outs   dx,BYTE PTR ds:[rsi]
  41ad4b:	add    BYTE PTR [rcx+0x73],ah
  41ad4e:	imul   ebp,DWORD PTR [rsi+0x0],0x0
	...
  41ad81:	add    al,0x5
  41ad83:	adc    BYTE PTR [rdi],al
  41ad85:	or     BYTE PTR [rsi],al
  41ad87:	(bad)  
  41ad88:	add    BYTE PTR [rcx],cl
  41ad8a:	or     BYTE PTR [rcx],cl
  41ad8c:	or     al,BYTE PTR [rsi]
  41ad8e:	(bad)  
  41ad8f:	movups xmm1,XMMWORD PTR [rax]
  41ad92:	or     DWORD PTR [rdx],ecx
  41ad94:	add    esp,DWORD PTR [rdx]
  41ad96:	and    esp,DWORD PTR ds:0x80b1d26
  41ad9d:	adc    al,0x15
  41ad9f:	(bad)  
  41ada0:	(bad)  
  41ada1:	sbb    BYTE PTR [rdx],ah
  41ada3:	and    esp,DWORD PTR ds:0x2928ff26
  41adaa:	(bad)  
  41adab:	inc    DWORD PTR [rcx]
  41adad:	inc    DWORD PTR [rbx]
  41adaf:	add    al,0x5
  41adb1:	(bad)  
  41adb2:	push   QWORD PTR [rbx]
  41adb4:	xor    al,0xa
  41adb6:	dec    DWORD PTR [rcx*1+0x11100f0e]
  41adbd:	adc    dl,BYTE PTR [rbx]
  41adbf:	adc    al,0xff
  41adc1:	call   QWORD PTR [rdi]
  41adc3:	add    eax,DWORD PTR [rax*1+0x8ffff06]
  41adca:	or     DWORD PTR [rdx],ecx
  41adcc:	or     al,0xd
  41adce:	(bad)  
  41adcf:	call   QWORD PTR [rax]
  41add1:	adc    DWORD PTR [rdx],edx
  41add3:	adc    edx,DWORD PTR [rsp+rdx*1]
  41add6:	adc    eax,0x5040317
  41addb:	(bad)  
  41addc:	(bad)  
  41addd:	(bad)  
  41adde:	(bad)  
  41addf:	(bad)  
  41ade0:	dec    DWORD PTR [rcx*1+0x1110ff0e]
  41ade7:	adc    dl,BYTE PTR [rbx]
  41ade9:	(bad)  
  41adea:	(bad)  
  41adeb:	call   QWORD PTR [rdi]
  41aded:	add    eax,DWORD PTR [rax*1-0xfa]
  41adf4:	(bad)  
  41adf5:	dec    DWORD PTR [rcx*1+0x1110ff0e]
  41adfc:	adc    dl,BYTE PTR [rbx]
  41adfe:	adc    al,0xff
  41ae00:	call   QWORD PTR [rdi]
  41ae02:	add    eax,DWORD PTR [rax*1-0xf8fa]
  41ae09:	(bad)  
  41ae0a:	dec    DWORD PTR [rcx*1+0x1110ffff]
  41ae11:	adc    dl,BYTE PTR [rbx]
  41ae13:	(bad)  
  41ae14:	(bad)  
  41ae15:	call   QWORD PTR [rdi]
  41ae17:	add    eax,DWORD PTR [rax*1-0xfa]
  41ae1e:	(bad)  
  41ae1f:	dec    DWORD PTR [rcx*1+0x1110ffff]
  41ae26:	adc    dl,BYTE PTR [rbx]
  41ae28:	(bad)  
  41ae29:	(bad)  
  41ae2a:	call   QWORD PTR [rdi]
	...
  41ae40:	(bad)  
  41ae41:	(bad)  
  41ae42:	sbb    BYTE PTR [rdi],bl
  41ae44:	sbb    bl,BYTE PTR [rbx]
  41ae46:	sbb    DWORD PTR [rax],edx
  41ae48:	and    BYTE PTR [rdx+riz*1],bl
  41ae4b:	and    esp,DWORD PTR [rbx*1+0x22161e21]
  41ae52:	and    esp,DWORD PTR [rdx+rax*1]
  41ae55:	sub    eax,0x31302f2e
  41ae5a:	sub    esp,DWORD PTR [rdi]
  41ae5c:	and    ah,BYTE PTR [rip+0x2c322826]        # 0x2c73d688
  41ae62:	(bad)  
  41ae63:	(bad)  
  41ae64:	(bad)  
  41ae65:	(bad)  
  41ae66:	(bad)  
  41ae67:	add    BYTE PTR [rip+0x1000036],dh        # 0x141aea3
  41ae6d:	add    BYTE PTR [rdx],al
  41ae6f:	add    eax,DWORD PTR [rax*1+0x6383700]
  41ae76:	add    BYTE PTR [rdi],al
  41ae78:	or     BYTE PTR [rcx],cl
  41ae7a:	or     cl,BYTE PTR [rbx]
  41ae7c:	or     al,0xd
  41ae7e:	(bad)  
  41ae7f:	sldt   WORD PTR [rax]
  41ae82:	adc    BYTE PTR [rdx],al
  41ae84:	add    eax,DWORD PTR [rax*1+0x23220000]
  41ae8b:	and    al,0x7
  41ae8d:	or     BYTE PTR [rcx],cl
  41ae8f:	add    BYTE PTR [rbx],cl
  41ae91:	or     al,0xd
  41ae93:	(bad)  
  41ae94:	(bad)  
  41ae96:	adc    BYTE PTR es:[rdx],al
  41ae99:	add    eax,DWORD PTR [rax*1+0x28]
  41aea0:	add    BYTE PTR [rdi],al
  41aea2:	or     BYTE PTR [rcx],ch
  41aea4:	add    BYTE PTR [rbx],cl
  41aea6:	or     al,0xd
  41aea8:	(bad)  
  41aea9:	add    BYTE PTR [rax],al
  41aeab:	add    BYTE PTR [rax],dl
  41aead:	add    al,BYTE PTR [rbx]
  41aeaf:	add    al,0x5
  41aeb1:	add    BYTE PTR [rax],al
  41aeb3:	add    BYTE PTR [rax],al
  41aeb5:	add    BYTE PTR [rdi],al
  41aeb7:	or     BYTE PTR [rbx],dh
  41aeb9:	add    BYTE PTR [rbx],cl
  41aebb:	or     al,0xd
  41aebd:	(bad)  
  41aebe:	xor    al,0x0
  41aec0:	add    BYTE PTR [rax],dl
  41aec2:	add    al,BYTE PTR [rbx]
  41aec4:	add    al,0x5
  41aec6:	sub    BYTE PTR [rax],al
  41aec8:	add    BYTE PTR [rax],al
  41aeca:	add    BYTE PTR [rdi],al
  41aecc:	or     BYTE PTR [rax],al
  41aece:	add    BYTE PTR [rbx],cl
  41aed0:	or     al,0xd
  41aed2:	(bad)  
  41aed3:	add    BYTE PTR [rax],al
  41aed5:	add    BYTE PTR [rax],dl
  41aed7:	add    al,BYTE PTR [rbx]
  41aed9:	add    al,0x5
  41aedb:	add    BYTE PTR [rax],al
  41aedd:	add    BYTE PTR [rax],al
  41aedf:	add    BYTE PTR [rdi],al
  41aee1:	or     BYTE PTR [rax],al
  41aee3:	add    BYTE PTR [rbx],cl
  41aee5:	or     al,0xd
  41aee7:	(bad)  
  41aee8:	add    BYTE PTR [rax],al
  41aeea:	add    BYTE PTR [rax],dl
  41aeec:	out    dx,eax
  41aeed:	out    dx,eax
  41aeee:	out    dx,eax
  41aeef:	repz stc 
  41aef1:	std    
	...
  41aefe:	add    BYTE PTR [rax],al
  41af00:	sub    eax,DWORD PTR [rax]
  41af02:	out    dx,eax
  41af03:	(bad)  
  41af04:	out    dx,eax
  41af05:	(bad)  
  41af06:	out    dx,eax
  41af07:	push   rax
  41af09:	push   rax
  41af0b:	call   QWORD PTR [rax+rax*1-0xf0010]
  41af12:	xchg   esp,eax
  41af13:	add    bh,ch
  41af15:	inc    DWORD PTR [rdi]
  41af17:	add    bh,ch
  41af19:	(bad)  
  41af1a:	out    dx,eax
  41af1b:	(bad)  
  41af1c:	out    dx,eax
  41af1d:	call   QWORD PTR [rax+rax*1+0x80040]
  41af24:	(bad)  
  41af25:	inc    DWORD PTR [rcx+0x0]
  41af28:	adc    BYTE PTR [rax],al
  41af2a:	out    dx,eax
  41af2b:	call   QWORD PTR [rbp+0x0]
  41af2e:	out    dx,eax
  41af2f:	(bad)  
  41af30:	out    dx,eax
  41af31:	call   QWORD PTR [rbp+0x0]
  41af34:	out    dx,eax
  41af35:	(bad)  
  41af36:	out    dx,eax
  41af37:	call   QWORD PTR [rbp+0x0]
  41af3a:	lock call QWORD PTR [rbp+0x0]
  41af3e:	or     DWORD PTR [rax],eax
  41af40:	out    dx,eax
  41af41:	(bad)  
  41af42:	out    dx,eax
  41af43:	inc    DWORD PTR [rax+0x0]
  41af46:	add    BYTE PTR [rax+0x0],al
  41af4a:	add    BYTE PTR [rax+0x0],al
  41af4e:	adc    DWORD PTR [rax],eax
  41af50:	push   0x0
  41af52:	xchg   esp,eax
  41af53:	add    BYTE PTR [rdi+0x0],bh
  41af56:	out    dx,eax
  41af57:	(bad)  
  41af58:	out    dx,eax
  41af59:	(bad)  
  41af5a:	out    dx,eax
  41af5b:	call   QWORD PTR [rax+rax*1]
  41af5e:	adc    al,0x0
  41af60:	add    al,BYTE PTR [rax]
  41af62:	add    al,BYTE PTR [rax]
  41af64:	out    dx,eax
  41af65:	call   QWORD PTR [rax+rax*1+0x180094]
  41af6c:	jg     0x41af6e
  41af6e:	sbb    BYTE PTR [rax],al
  41af70:	sbb    BYTE PTR [rax],al
  41af72:	call   QWORD PTR [rcx]
  41af74:	adc    dl,BYTE PTR [rbx]
  41af76:	adc    al,0x15
  41af78:	sub    al,BYTE PTR [rax]
  41af7a:	add    BYTE PTR [rax],al
  41af7c:	add    BYTE PTR [rax],al
  41af7e:	add    BYTE PTR [rax],al
  41af80:	add    BYTE PTR [rdi+rcx*1],al
  41af83:	adc    eax,DWORD PTR [rax]
  41af85:	add    BYTE PTR [rax],al
  41af87:	add    BYTE PTR [rax],al
  41af89:	add    BYTE PTR [rdx],al
  41af8b:	add    BYTE PTR [rax],ah
  41af8d:	(bad)  
  41af8e:	and    DWORD PTR [rax],eax
  41af90:	add    BYTE PTR [rax],al
  41af92:	add    BYTE PTR [rip+0x1a071712],al        # 0x1a48c6aa
  41af98:	sbb    eax,DWORD PTR [rsi]
  41af9a:	sbb    BYTE PTR [rcx],bl
  41af9c:	or     BYTE PTR [rax],al
  41af9e:	or     DWORD PTR [rax],eax
  41afa0:	add    DWORD PTR [rbx],eax
	...
  41afaa:	(bad)  
  41afab:	sbb    al,0x11
  41afad:	or     eax,0xa0b0c0e
  41afb2:	adc    BYTE PTR [rax],al
  41afb4:	add    BYTE PTR [rdx*1+0x1e1d],dl
  41afbb:	add    BYTE PTR [rax],al
  41afbd:	add    BYTE PTR [rax],al
  41afbf:	add    BYTE PTR [rax],al
  41afc1:	add    al,BYTE PTR [rcx]
  41afc3:	add    al,BYTE PTR [rcx]
  41afc5:	add    DWORD PTR [rdx],eax
  41afc7:	add    DWORD PTR [rdx],eax
  41afc9:	add    al,BYTE PTR [rbx]
  41afcb:	add    eax,DWORD PTR [rbx]
  41afcd:	add    eax,DWORD PTR [rbx]
  41afcf:	add    DWORD PTR [rbx],eax
  41afd1:	add    eax,DWORD PTR [rcx]
  41afd3:	add    DWORD PTR [rbx],eax
  41afd5:	add    eax,DWORD PTR [rdx]
  41afd7:	add    DWORD PTR [rdx],eax
  41afd9:	add    al,BYTE PTR [rdx]
  41afdb:	add    al,BYTE PTR [rbx]
  41afdd:	add    al,0x4
  41afdf:	add    DWORD PTR [rcx],eax
  41afe1:	add    DWORD PTR [rax],eax
	...
  41afff:	add    BYTE PTR [rax],al
  41b001:	sbb    DWORD PTR [rdx],ebx
  41b003:	sbb    bl,BYTE PTR [rdx]
  41b005:	sbb    ebx,DWORD PTR [rbx]
  41b007:	sbb    al,0x1c
  41b009:	sbb    al,0x1c
  41b00b:	sbb    al,0x1c
  41b00d:	sbb    al,0x1c
  41b00f:	sbb    eax,0x1f1f1e1d
  41b014:	(bad)  
  41b015:	(bad)  
  41b016:	(bad)  
  41b017:	(bad)  
  41b018:	(bad)  
  41b019:	(bad)  
  41b01a:	(bad)  
  41b01b:	(bad)  
  41b01c:	(bad)  
  41b01d:	(bad)  
  41b01e:	(bad)  
  41b01f:	(bad)  
  41b020:	(bad)  
  41b021:	(bad)  
	...
  41b03e:	add    BYTE PTR [rax],al
  41b040:	add    BYTE PTR [rdx],al
  41b042:	add    al,BYTE PTR [rdx]
  41b044:	add    al,BYTE PTR [rdx]
  41b046:	add    al,BYTE PTR [rdx]
  41b048:	add    al,BYTE PTR [rdx]
  41b04a:	add    al,BYTE PTR [rdx]
  41b04c:	add    al,BYTE PTR [rdx]
  41b04e:	add    al,BYTE PTR [rdx]
  41b050:	add    al,BYTE PTR [rdx]
  41b052:	add    al,BYTE PTR [rdx]
  41b054:	add    al,BYTE PTR [rdx]
  41b056:	add    al,BYTE PTR [rdx]
  41b058:	add    al,BYTE PTR [rdx]
  41b05a:	add    al,BYTE PTR [rdx]
  41b05c:	add    al,BYTE PTR [rdx]
  41b05e:	add    al,BYTE PTR [rdx]
  41b060:	add    al,BYTE PTR [rdx]
  41b062:	add    al,BYTE PTR [rdx]
  41b064:	add    al,BYTE PTR [rdx]
  41b066:	add    al,BYTE PTR [rdx]
  41b068:	(bad)  
  41b069:	sbb    BYTE PTR [rdx],al
  41b06b:	add    al,BYTE PTR [rdx]
  41b06d:	add    al,BYTE PTR [rdx]
  41b06f:	add    al,BYTE PTR [rdx]
  41b071:	add    al,BYTE PTR [rdx]
  41b073:	add    al,BYTE PTR [rdx]
  41b075:	add    al,BYTE PTR [rdx]
  41b077:	add    al,BYTE PTR [rdx]
  41b079:	add    al,BYTE PTR [rdx]
  41b07b:	add    al,BYTE PTR [rdx]
  41b07d:	add    al,BYTE PTR [rdx]
  41b07f:	add    al,BYTE PTR [rdx]
  41b081:	add    al,BYTE PTR [rdx]
  41b083:	add    al,BYTE PTR [rdx]
  41b085:	add    al,BYTE PTR [rdx]
  41b087:	add    al,BYTE PTR [rdx]
  41b089:	add    al,BYTE PTR [rdx]
  41b08b:	add    al,BYTE PTR [rdx]
  41b08d:	add    al,BYTE PTR [rdx]
  41b08f:	add    al,BYTE PTR [rdx]
  41b091:	add    al,BYTE PTR [rdx]
  41b093:	add    al,BYTE PTR [rdx]
  41b095:	add    al,BYTE PTR [rdx]
  41b097:	add    al,BYTE PTR [rdx]
  41b099:	add    al,BYTE PTR [rdx]
  41b09b:	add    al,BYTE PTR [rdx]
  41b09d:	add    al,BYTE PTR [rdx]
  41b09f:	add    al,BYTE PTR [rdx]
  41b0a1:	add    al,BYTE PTR [rdx]
  41b0a3:	add    al,BYTE PTR [rdx]
  41b0a5:	add    al,BYTE PTR [rdx]
  41b0a7:	add    al,BYTE PTR [rdx]
  41b0a9:	add    al,BYTE PTR [rdx]
  41b0ab:	add    al,BYTE PTR [rdx]
  41b0ad:	add    al,BYTE PTR [rdx]
  41b0af:	add    al,BYTE PTR [rdx]
  41b0b1:	add    al,BYTE PTR [rdx]
  41b0b3:	add    al,BYTE PTR [rdx]
  41b0b5:	add    al,BYTE PTR [rdx]
  41b0b7:	add    al,BYTE PTR [rdx]
  41b0b9:	add    al,BYTE PTR [rdx]
  41b0bb:	add    al,BYTE PTR [rdx]
  41b0bd:	add    al,BYTE PTR [rdx]
  41b0bf:	add    al,BYTE PTR [rdx]
  41b0c1:	add    al,BYTE PTR [rdx]
  41b0c3:	add    al,BYTE PTR [rdx]
  41b0c5:	add    al,BYTE PTR [rdx]
  41b0c7:	add    al,BYTE PTR [rdx]
  41b0c9:	add    al,BYTE PTR [rdx]
  41b0cb:	add    al,BYTE PTR [rdx]
  41b0cd:	add    al,BYTE PTR [rdx]
  41b0cf:	add    al,BYTE PTR [rdx]
  41b0d1:	add    al,BYTE PTR [rdx]
  41b0d3:	add    al,BYTE PTR [rdx]
  41b0d5:	add    al,BYTE PTR [rdx]
  41b0d7:	add    al,BYTE PTR [rdx]
  41b0d9:	add    al,BYTE PTR [rdx]
  41b0db:	add    al,BYTE PTR [rdx]
  41b0dd:	add    al,BYTE PTR [rdx]
  41b0df:	add    al,BYTE PTR [rdx]
  41b0e1:	add    al,BYTE PTR [rdx]
  41b0e3:	add    al,BYTE PTR [rdx]
  41b0e5:	add    al,BYTE PTR [rdx]
  41b0e7:	add    al,BYTE PTR [rdx]
  41b0e9:	add    al,BYTE PTR [rdx]
  41b0eb:	add    al,BYTE PTR [rdx]
  41b0ed:	add    al,BYTE PTR [rdx]
  41b0ef:	add    al,BYTE PTR [rdx]
  41b0f1:	add    al,BYTE PTR [rdx]
  41b0f3:	add    al,BYTE PTR [rdx]
  41b0f5:	add    al,BYTE PTR [rdx]
  41b0f7:	add    al,BYTE PTR [rdx]
  41b0f9:	add    al,BYTE PTR [rdx]
  41b0fb:	add    al,BYTE PTR [rdx]
  41b0fd:	add    al,BYTE PTR [rdx]
  41b0ff:	add    al,BYTE PTR [rdx]
  41b101:	add    al,BYTE PTR [rdx]
  41b103:	add    al,BYTE PTR [rdx]
  41b105:	add    al,BYTE PTR [rdx]
  41b107:	add    al,BYTE PTR [rdx]
  41b109:	add    al,BYTE PTR [rdx]
  41b10b:	add    al,BYTE PTR [rdx]
  41b10d:	add    al,BYTE PTR [rdx]
  41b10f:	add    al,BYTE PTR [rdx]
  41b111:	add    al,BYTE PTR [rdx]
  41b113:	add    al,BYTE PTR [rdx]
  41b115:	add    al,BYTE PTR [rdx]
  41b117:	add    al,BYTE PTR [rdx]
  41b119:	add    al,BYTE PTR [rdx]
  41b11b:	add    al,BYTE PTR [rdx]
  41b11d:	add    al,BYTE PTR [rdx]
  41b11f:	add    al,BYTE PTR [rdx]
  41b121:	add    al,BYTE PTR [rdx]
  41b123:	add    al,BYTE PTR [rdx]
  41b125:	add    al,BYTE PTR [rdx]
  41b127:	add    al,BYTE PTR [rdx]
  41b129:	add    al,BYTE PTR [rdx]
  41b12b:	add    al,BYTE PTR [rdx]
  41b12d:	add    al,BYTE PTR [rdx]
  41b12f:	add    al,BYTE PTR [rdx]
  41b131:	add    al,BYTE PTR [rdx]
  41b133:	add    al,BYTE PTR [rdx]
  41b135:	add    al,BYTE PTR [rdx]
  41b137:	add    al,BYTE PTR [rdx]
  41b139:	add    al,BYTE PTR [rdx]
  41b13b:	add    al,BYTE PTR [rdx]
  41b13d:	add    al,BYTE PTR [rdx]
  41b13f:	add    al,BYTE PTR [rcx]
  41b141:	add    al,BYTE PTR [rbx]
  41b143:	add    al,0x5
  41b145:	(bad)  
  41b146:	(bad)  
  41b147:	or     BYTE PTR [rcx],cl
  41b149:	or     cl,BYTE PTR [rbx]
  41b14b:	or     al,0xd
  41b14d:	(bad)  
  41b14e:	movups xmm2,XMMWORD PTR [rcx]
  41b151:	adc    dl,BYTE PTR [rbx]
  41b153:	adc    al,0x15
  41b155:	(bad)  
  41b156:	add    BYTE PTR [rax],al
  41b158:	out    dx,eax
  41b159:	cmp    edx,edi
  41b15b:	inc    BYTE PTR [rdx+0x2e]
  41b15e:	out    0x3f,al
  41b160:	add    BYTE PTR [rax],al
  41b162:	add    BYTE PTR [rax],al
  41b164:	add    BYTE PTR [rax],al
  41b166:	lock (bad) 
	...
  41b174:	add    BYTE PTR [rax],al
  41b176:	add    BYTE PTR [rax+0x0],al
  41b17c:	add    BYTE PTR [rax],al
  41b17e:	add    BYTE PTR [rax],al
  41b180:	push   rax
  41b181:	rex.WRXB push r11
  41b183:	rex.WB pop r8
  41b185:	rex.WR pop rcx
  41b187:	pop    rdi
  41b188:	rex.XB
  41b189:	rex.WRXB push r10
  41b18b:	push   rdx
  41b18c:	rex.RB
  41b18d:	rex.XB push r12
  41b18f:	add    BYTE PTR [rip+0x7325002d],ch        # 0x7366b1c2
  41b195:	cmp    ah,BYTE PTR [rax]
  41b197:	outs   dx,DWORD PTR ds:[rsi]
  41b198:	jo     0x41b20e
  41b19a:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  41b1a1:	(bad)  
  41b1a2:	and    BYTE PTR [rcx+0x73],ch
  41b1a5:	and    BYTE PTR [rcx+0x6d],ah
  41b1a8:	(bad)  
  41b1a9:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
	...
  41b1b8:	and    eax,0x6f203a73
  41b1bd:	jo     0x41b233
  41b1bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d6020
  41b1c6:	and    eax,0x64202773
  41b1cb:	outs   dx,DWORD PTR ds:[rsi]
  41b1cc:	gs jae 0x41b23d
  41b1cf:	(bad)  
  41b1d0:	je     0x41b1f2
  41b1d2:	(bad)  
  41b1d3:	ins    BYTE PTR es:[rdi],dx
  41b1d4:	ins    BYTE PTR es:[rdi],dx
  41b1d5:	outs   dx,DWORD PTR ds:[rsi]
  41b1d6:	ja     0x41b1f8
  41b1d8:	(bad)  
  41b1d9:	outs   dx,BYTE PTR ds:[rsi]
  41b1da:	and    BYTE PTR [rcx+0x72],ah
  41b1dd:	addr32 jne 0x41b24d
  41b1e0:	outs   dx,BYTE PTR gs:[rsi]
  41b1e2:	je     0x41b1ee
  41b1e4:	add    BYTE PTR [rax],al
  41b1e6:	add    BYTE PTR [rax],al
  41b1e8:	and    eax,0x6f203a73
  41b1ed:	jo     0x41b263
  41b1ef:	imul   ebp,DWORD PTR [rdi+0x6e],0x63256020
  41b1f6:	and    eax,0x64202773
  41b1fb:	outs   dx,DWORD PTR ds:[rsi]
  41b1fc:	gs jae 0x41b26d
  41b1ff:	(bad)  
  41b200:	je     0x41b222
  41b202:	(bad)  
  41b203:	ins    BYTE PTR es:[rdi],dx
  41b204:	ins    BYTE PTR es:[rdi],dx
  41b205:	outs   dx,DWORD PTR ds:[rsi]
  41b206:	ja     0x41b228
  41b208:	(bad)  
  41b209:	outs   dx,BYTE PTR ds:[rsi]
  41b20a:	and    BYTE PTR [rcx+0x72],ah
  41b20d:	addr32 jne 0x41b27d
  41b210:	outs   dx,BYTE PTR gs:[rsi]
  41b212:	je     0x41b21e
  41b214:	add    BYTE PTR [rax],al
  41b216:	add    BYTE PTR [rax],al
  41b218:	and    eax,0x6f203a73
  41b21d:	jo     0x41b293
  41b21f:	imul   ebp,DWORD PTR [rdi+0x6e],0x73256020
  41b226:	(bad)  
  41b227:	and    BYTE PTR [rdx+0x65],dh
  41b22a:	jno    0x41b2a1
  41b22c:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  41b233:	and    BYTE PTR [rcx+0x72],ah
  41b236:	addr32 jne 0x41b2a6
  41b239:	outs   dx,BYTE PTR gs:[rsi]
  41b23b:	je     0x41b247
  41b23d:	add    BYTE PTR [rax],al
  41b23f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561ecb8
  41b245:	outs   dx,BYTE PTR ds:[rsi]
  41b246:	jb     0x41b2ad
  41b248:	movsxd ebp,DWORD PTR [rdi+0x67]
  41b24b:	outs   dx,BYTE PTR ds:[rsi]
  41b24c:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  41b253:	je     0x41b2be
  41b255:	outs   dx,DWORD PTR ds:[rsi]
  41b256:	outs   dx,BYTE PTR ds:[rsi]
  41b257:	and    BYTE PTR [rax+0x2d],ah
  41b25a:	sub    eax,0xa277325
  41b25f:	add    BYTE PTR [rip+0x75203a73],ah        # 0x7561ecd8
  41b265:	outs   dx,BYTE PTR ds:[rsi]
  41b266:	jb     0x41b2cd
  41b268:	movsxd ebp,DWORD PTR [rdi+0x67]
  41b26b:	outs   dx,BYTE PTR ds:[rsi]
  41b26c:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  41b273:	je     0x41b2de
  41b275:	outs   dx,DWORD PTR ds:[rsi]
  41b276:	outs   dx,BYTE PTR ds:[rsi]
  41b277:	and    BYTE PTR [rax+0x25],ah
  41b27a:	movsxd esp,DWORD PTR [rip+0xa2773]        # 0x4bd9f3
  41b280:	add    BYTE PTR [rip+0x69203a73],ah        # 0x6961ecf9
  41b286:	ins    BYTE PTR es:[rdi],dx
  41b287:	ins    BYTE PTR es:[rdi],dx
  41b288:	gs addr32 (bad) 
  41b28b:	ins    BYTE PTR es:[rdi],dx
  41b28c:	and    BYTE PTR [rdi+0x70],ch
  41b28f:	je     0x41b2fa
  41b291:	outs   dx,DWORD PTR ds:[rsi]
  41b292:	outs   dx,BYTE PTR ds:[rsi]
  41b293:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6366d2c6
  41b299:	or     al,BYTE PTR [rax]
  41b29b:	and    eax,0x69203a73
  41b2a0:	outs   dx,BYTE PTR ds:[rsi]
  41b2a1:	jbe    0x41b304
  41b2a3:	ins    BYTE PTR es:[rdi],dx
  41b2a4:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  41b2ac:	outs   dx,BYTE PTR ds:[rsi]
  41b2ad:	and    BYTE PTR [rip+0x6325202d],ch        # 0x6366d2e0
  41b2b3:	or     al,BYTE PTR [rax]
  41b2b5:	add    BYTE PTR [rax],al
  41b2b7:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f61ed30
  41b2bd:	jo     0x41b333
  41b2bf:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  41b2c6:	jne    0x41b331
  41b2c8:	jb     0x41b32f
  41b2ca:	jae    0x41b2ec
  41b2cc:	(bad)  
  41b2cd:	outs   dx,BYTE PTR ds:[rsi]
  41b2ce:	and    BYTE PTR [rcx+0x72],ah
  41b2d1:	addr32 jne 0x41b341
  41b2d4:	outs   dx,BYTE PTR gs:[rsi]
  41b2d6:	je     0x41b2f8
  41b2d8:	sub    eax,0x6325202d
  41b2dd:	or     al,BYTE PTR [rax]
  41b2df:	add    BYTE PTR [rax+0xb],al
  41b2e2:	rex.X add BYTE PTR [rax],al
  41b2e5:	add    BYTE PTR [rax],al
  41b2e7:	add    BYTE PTR [rax+0x6],al
  41b2ea:	rex.X add BYTE PTR [rax],al
  41b2ed:	add    BYTE PTR [rax],al
  41b2ef:	add    BYTE PTR [rax+0x40ba],dl
	...
  41b2fd:	add    BYTE PTR [rax],al
  41b2ff:	add    BYTE PTR [rcx+0x72],al
  41b302:	addr32 jne 0x41b372
  41b305:	outs   dx,BYTE PTR gs:[rsi]
  41b307:	je     0x41b329
  41b309:	outs   dx,DWORD PTR fs:[rsi]
  41b30b:	ins    DWORD PTR es:[rdi],dx
  41b30c:	(bad)  
  41b30d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  41b314:	jb     0x41b336
  41b316:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  41b31a:	rex.B
  41b31b:	rex.WB
  41b31c:	rex.WRX sub QWORD PTR [rax],r8
  41b31f:	rex.B jb 0x41b389
  41b322:	jne    0x41b391
  41b324:	outs   dx,BYTE PTR gs:[rsi]
  41b326:	je     0x41b348
  41b328:	jae    0x41b393
  41b32a:	outs   dx,BYTE PTR ds:[rsi]
  41b32b:	addr32 jne 0x41b39a
  41b32e:	(bad)  
  41b32f:	jb     0x41b39a
  41b331:	je     0x41b3ac
  41b333:	and    BYTE PTR [rax],ch
  41b335:	push   rbx
  41b336:	rex.WB
  41b337:	rex.RXB
  41b338:	rex.WRX sub QWORD PTR [rax],r8
  41b33b:	add    BYTE PTR [rax],al
  41b33d:	add    BYTE PTR [rax],al
  41b33f:	add    BYTE PTR [rdi+0x76],cl
  41b342:	gs jb  0x41b3ab
  41b345:	ins    BYTE PTR es:[rdi],dx
  41b346:	outs   dx,DWORD PTR ds:[rsi]
  41b347:	ja     0x41b369
  41b349:	jb     0x41b3ac
  41b34b:	outs   dx,BYTE PTR ds:[rsi]
  41b34c:	and    BYTE PTR gs:[ebp+0x72],ah
  41b351:	jb     0x41b3c2
  41b353:	jb     0x41b375
  41b355:	sub    BYTE PTR [rdi+0x56],cl
  41b358:	rex.RB push r10
  41b35a:	rex.RX
  41b35b:	rex.WR
  41b35c:	rex.WRXB push r15
  41b35e:	sub    DWORD PTR [rax],eax
  41b360:	push   rax
  41b361:	(bad)  
  41b362:	jb     0x41b3d8
  41b364:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  41b36b:	jae    0x41b38d
  41b36d:	outs   dx,DWORD PTR ds:[rsi]
  41b36e:	data16 and BYTE PTR [rbx+0x69],dh
  41b372:	outs   dx,BYTE PTR ds:[esi]
  41b374:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  41b37b:	and    BYTE PTR gs:[rax],ch
  41b37e:	push   rax
  41b37f:	rex.WR
  41b380:	rex.WRXB push r11
  41b382:	push   rbx
  41b383:	sub    DWORD PTR [rax],eax
  41b385:	add    BYTE PTR [rax],al
  41b387:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  41b38b:	(bad)  
  41b38c:	ins    BYTE PTR es:[rdi],dx
  41b38d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  41b391:	jae    0x41b3b3
  41b393:	outs   dx,DWORD PTR ds:[rsi]
  41b394:	data16 and BYTE PTR [rbx+0x69],dh
  41b398:	outs   dx,BYTE PTR ds:[esi]
  41b39a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  41b3a1:	and    BYTE PTR gs:[rax],ch
  41b3a4:	push   rsp
  41b3a5:	rex.WR
  41b3a6:	rex.WRXB push r11
  41b3a8:	push   rbx
  41b3a9:	sub    DWORD PTR [rax],eax
  41b3ab:	add    BYTE PTR [rax],al
  41b3ad:	add    BYTE PTR [rax],al
  41b3af:	add    BYTE PTR [rax+rbp*2+0x65],dl
  41b3b3:	and    BYTE PTR [rdx+0x65],dh
  41b3b6:	jae    0x41b42d
  41b3b8:	ins    BYTE PTR es:[rdi],dx
  41b3b9:	je     0x41b3db
  41b3bb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  41b3c2:	jae    0x41b431
  41b3c4:	(bad)  
  41b3c5:	ins    BYTE PTR es:[rdi],dx
  41b3c6:	ins    BYTE PTR es:[rdi],dx
  41b3c7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41b3cb:	(bad)  
  41b3cc:	and    BYTE PTR gs:[rdx+0x65],dh
  41b3d0:	jo     0x41b444
  41b3d2:	gs jae 0x41b43a
  41b3d5:	outs   dx,BYTE PTR ds:[rsi]
  41b3d6:	je     0x41b43d
  41b3d8:	and    BYTE PTR fs:[rax],ch
  41b3db:	push   rbp
  41b3dc:	rex.WRX
  41b3dd:	rex.R
  41b3de:	rex.RB push r10
  41b3e0:	rex.RX
  41b3e1:	rex.WR
  41b3e2:	rex.WRXB push r15
  41b3e4:	sub    DWORD PTR [rax],eax
  41b3e6:	push   rbp
  41b3e7:	outs   dx,BYTE PTR ds:[rsi]
  41b3e8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41b3ec:	outs   dx,BYTE PTR ds:[rsi]
  41b3ed:	and    BYTE PTR [rbp+0x72],ah
  41b3f0:	jb     0x41b461
  41b3f2:	jb     0x41b3f4
  41b3f4:	add    BYTE PTR [rax],al
  41b3f6:	add    BYTE PTR [rax],al
  41b3f8:	pop    rdi
  41b3f9:	ins    DWORD PTR es:[rdi],dx
  41b3fa:	(bad)  
  41b3fb:	je     0x41b465
  41b3fd:	gs jb  0x41b472
  41b400:	sub    BYTE PTR [rcx],ch
  41b402:	cmp    ah,BYTE PTR [rax]
  41b404:	and    eax,0x6e692073
  41b409:	and    BYTE PTR [rip+0x67252873],ah        # 0x6766dc82
  41b40f:	sub    al,0x20
  41b411:	and    eax,0x20202967
  41b416:	sub    BYTE PTR [rdx+0x65],dh
  41b419:	je     0x41b491
  41b41b:	(bad)  
  41b41c:	ins    BYTE PTR es:[rdi],dx
  41b41d:	cmp    eax,0xa296725
  41b422:	add    BYTE PTR [rax],al
  41b424:	cmp    al,0x8
  41b426:	(bad)  
  41b427:	(bad)  
  41b428:	jge    0x41b431
  41b42a:	(bad)  
  41b42b:	(bad)  
  41b42c:	in     al,dx
  41b42d:	(bad)  
  41b42e:	(bad)  
  41b42f:	(bad)  
  41b430:	cld    
  41b431:	(bad)  
  41b432:	(bad)  
  41b433:	dec    DWORD PTR [rax+rcx*1]
  41b436:	(bad)  
  41b437:	call   FWORD PTR [rax+rcx*1]
  41b43a:	(bad)  
  41b43b:	jmp    FWORD PTR [rax+rcx*1]
  41b43e:	(bad)  
  41b43f:	dec    DWORD PTR [rbp+0x69]
  41b442:	outs   dx,BYTE PTR ds:[rsi]
  41b443:	addr32 ja 0x41b473
  41b446:	ja     0x41b47e
  41b448:	xor    al,0x20
  41b44a:	jb     0x41b4c1
  41b44c:	outs   dx,BYTE PTR ds:[rsi]
  41b44d:	je     0x41b4b8
  41b44f:	ins    DWORD PTR es:[rdi],dx
  41b450:	and    BYTE PTR gs:[rsi+0x61],ah
  41b454:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  41b45c:	add    BYTE PTR [rax],al
  41b45e:	add    BYTE PTR [rax],al
  41b460:	rex.B
  41b461:	fs fs jb 0x41b4ca
  41b465:	jae    0x41b4da
  41b467:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a9d4dd
  41b46d:	jae    0x41b48f
  41b46f:	outs   dx,BYTE PTR ds:[rsi]
  41b470:	outs   dx,DWORD PTR ds:[rsi]
  41b471:	and    BYTE PTR [rcx+0x6d],ch
  41b474:	(bad)  
  41b475:	addr32 gs sub eax,0x74636573
  41b47c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  41b483:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  41b48a:	jne    0x41b4f1
  41b48c:	jb     0x41b507
  41b48e:	and    BYTE PTR [rsi+0x61],ah
  41b491:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  41b499:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a3d503
  41b49f:	je     0x41b506
  41b4a1:	jae    0x41b4c3
  41b4a3:	(bad)  
  41b4a4:	je     0x41b4c6
  41b4a6:	(bad)  
  41b4a7:	fs fs jb 0x41b510
  41b4ab:	jae    0x41b520
  41b4ad:	and    BYTE PTR [rip+0x70],ah        # 0x41b523
  41b4b3:	add    BYTE PTR [rax],al
  41b4b5:	add    BYTE PTR [rax],al
  41b4b7:	add    BYTE PTR [rax],ah
  41b4b9:	and    BYTE PTR [rsi+0x69],dl
  41b4bc:	jb     0x41b532
  41b4be:	jne    0x41b521
  41b4c0:	ins    BYTE PTR es:[rdi],dx
  41b4c1:	push   rax
  41b4c2:	jb     0x41b533
  41b4c4:	je     0x41b52b
  41b4c6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  41b4ca:	(bad)  
  41b4cb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  41b4d3:	push   0x646f6320
  41b4d8:	and    BYTE PTR gs:[rax],dh
  41b4db:	js     0x41b502
  41b4dd:	js     0x41b4df
  41b4df:	add    BYTE PTR [rax],ah
  41b4e1:	and    BYTE PTR [rbp+0x6e],dl
  41b4e4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41b4e8:	outs   dx,BYTE PTR ds:[rsi]
  41b4e9:	and    BYTE PTR [rax+0x73],dh
  41b4ec:	gs jne 0x41b553
  41b4ef:	outs   dx,DWORD PTR ds:[rsi]
  41b4f0:	and    BYTE PTR [rdx+0x65],dh
  41b4f3:	ins    BYTE PTR es:[rdi],dx
  41b4f4:	outs   dx,DWORD PTR ds:[rsi]
  41b4f5:	movsxd esp,DWORD PTR [rcx+0x74]
  41b4f8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  41b4ff:	je     0x41b570
  41b501:	movsxd ebp,DWORD PTR [rdi+0x6c]
  41b504:	and    BYTE PTR [rsi+0x65],dh
  41b507:	jb     0x41b57c
  41b509:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  41b510:	or     al,BYTE PTR [rax]
  41b512:	add    BYTE PTR [rax],al
  41b514:	add    BYTE PTR [rax],al
  41b516:	add    BYTE PTR [rax],al
  41b518:	and    BYTE PTR [rax],ah
  41b51a:	push   rbp
  41b51b:	outs   dx,BYTE PTR ds:[rsi]
  41b51c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41b520:	outs   dx,BYTE PTR ds:[rsi]
  41b521:	and    BYTE PTR [rax+0x73],dh
  41b524:	gs jne 0x41b58b
  41b527:	outs   dx,DWORD PTR ds:[rsi]
  41b528:	and    BYTE PTR [rdx+0x65],dh
  41b52b:	ins    BYTE PTR es:[rdi],dx
  41b52c:	outs   dx,DWORD PTR ds:[rsi]
  41b52d:	movsxd esp,DWORD PTR [rcx+0x74]
  41b530:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  41b537:	and    BYTE PTR [rbx+0x69],dh
  41b53a:	jp     0x41b5a1
  41b53c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4be3a6
	...
  41b54e:	add    BYTE PTR [rax],al
  41b550:	cs jo  0x41b5b7
  41b553:	(bad)  
  41b554:	je     0x41b5b7
	...
  41b55e:	add    BYTE PTR [rax],al
  41b560:	(bad)  
  41b561:	(bad)  
  41b562:	(bad)  
  41b563:	jmp    QWORD PTR [rdi+rdx*1-0x1]
  41b567:	call   QWORD PTR [rax-0x5e0000e9]
  41b56d:	(bad)  
  41b56e:	(bad)  
  41b56f:	call   QWORD PTR [rax+0x17]
  41b572:	(bad)  
  41b573:	call   QWORD PTR [rax]
  41b575:	(bad)  
  41b576:	(bad)  
  41b577:	jmp    QWORD PTR [rax+0x17]
  41b57a:	(bad)  
  41b57b:	inc    DWORD PTR [rax]
  41b57d:	add    BYTE PTR [rax],al
  41b57f:	add    BYTE PTR [rbp+rsi*2-0x1bc37800],bl
  41b586:	(bad)  
  41b587:	jle    0x41b589
  41b589:	add    BYTE PTR [rax],al
  41b58b:	add    BYTE PTR [rax],al
  41b58d:	add    BYTE PTR [rax],al
  41b58f:	add    BYTE PTR [rbx+0x6f],ah
  41b592:	jae    0x41b594
	...
  41b59c:	add    BYTE PTR [rax],al
  41b59e:	clc    
  41b59f:	jg     0x41b606
  41b5a1:	js     0x41b613
	...
  41b5ab:	add    BYTE PTR [rax],al
  41b5ad:	add    al,dh
  41b5af:	jg     0x41b5b1
  41b5b1:	add    BYTE PTR [rax],al
  41b5b3:	add    BYTE PTR [rax],al
  41b5b5:	add    al,dh
  41b5b7:	(bad)  
  41b5b8:	push   rcx
  41b5b9:	xor    BYTE PTR [rip+0xffffffff874910d5],ch        # 0xffffffff878ac694
  41b5bf:	shr    bh,0x39
  41b5c2:	cli    
  41b5c3:	inc    BYTE PTR [rdx+0x2e]
  41b5c6:	xchg   BYTE PTR [rax+0x0],al
  41b5c9:	add    BYTE PTR [rax],al
  41b5cb:	add    BYTE PTR [rax],al
  41b5cd:	add    BYTE PTR [rax],al
  41b5cf:	add    BYTE PTR [rdi+rbp*2+0x67],ch
	...
  41b5db:	add    BYTE PTR [rax],al
  41b5dd:	add    al,dh
  41b5df:	inc    DWORD PTR [rax]
  41b5e1:	add    BYTE PTR [rax],al
  41b5e3:	add    BYTE PTR [rax],al
  41b5e5:	add    al,bh
  41b5e7:	jg     0x41b5e9
  41b5e9:	add    BYTE PTR [rax],al
  41b5eb:	add    BYTE PTR [rax],al
  41b5ed:	add    al,dh
  41b5ef:	jg     0x41b661
  41b5f1:	outs   dx,DWORD PTR ds:[rsi]
  41b5f2:	ja     0x41b5f4
	...
  41b5fc:	add    BYTE PTR [rax],al
  41b5fe:	clc    
  41b5ff:	inc    DWORD PTR [rax]
  41b601:	add    BYTE PTR [rax],al
  41b603:	add    BYTE PTR [rax],al
  41b605:	add    al,bh
  41b607:	jg     0x41b609
  41b609:	add    BYTE PTR [rax],al
  41b60b:	add    BYTE PTR [rax],al
  41b60d:	add    BYTE PTR [rax],al
  41b60f:	add    BYTE PTR [rax],0x0
  41b612:	add    BYTE PTR [rax],al
  41b614:	add    BYTE PTR [rax],al
  41b616:	lock inc DWORD PTR [rax]
  41b619:	add    BYTE PTR [rax],al
  41b61b:	add    BYTE PTR [rax],al
  41b61d:	add    al,dh
  41b61f:	jg     0x41b621
  41b621:	add    BYTE PTR [rax],al
  41b623:	add    BYTE PTR [rax],al
  41b625:	add    al,dh
  41b627:	(bad)  
	...
  41b634:	add    BYTE PTR [rax],al
  41b636:	add    BYTE PTR [rax+0x0],al
	...
  41b644:	add    BYTE PTR [rax],al
  41b646:	loopne 0x41b687
  41b648:	add    BYTE PTR [rax],al
  41b64a:	sar    bh,0xff
  41b64d:	(bad)  
  41b64e:	fild   WORD PTR [rcx-0x1]
  41b651:	(bad)  
  41b652:	(bad)  
  41b653:	(bad)  
  41b654:	(bad)  
  41b655:	(bad)  
  41b656:	(bad)  
  41b657:	jg     0x41b659
	...
  41b665:	add    al,ah
  41b667:	rol    DWORD PTR [rax],0x0
  41b66a:	add    BYTE PTR [rax],al
  41b66c:	add    BYTE PTR [rax],al
  41b66e:	add    BYTE PTR [rax],al
  41b670:	jae    0x41b6db
  41b672:	outs   dx,BYTE PTR ds:[rsi]
	...
  41b67b:	add    BYTE PTR [rax],al
  41b67d:	add    al,bh
  41b67f:	jg     0x41b6ef
  41b681:	data16 add BYTE PTR [rcx+0x6e],ch
  41b685:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0xe7006e61
  41b68d:	sub    edi,edi
  41b68f:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b696:	(bad)  
  41b697:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b69e:	(bad)  
  41b69f:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b6a6:	(bad)  
  41b6a7:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b6ae:	(bad)  
  41b6af:	jmp    QWORD PTR [rbp+rbp*1-0x1]
  41b6b3:	jmp    QWORD PTR [rbp+rbp*1-0x1]
  41b6b7:	jmp    QWORD PTR [rbp+rbp*1-0x1]
  41b6bb:	jmp    QWORD PTR [rbp+rbp*1-0x1]
  41b6bf:	jmp    QWORD PTR [rbp+rbp*1-0x1]
  41b6c3:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b6ca:	(bad)  
  41b6cb:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b6d2:	(bad)  
  41b6d3:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b6da:	(bad)  
  41b6db:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b6e2:	(bad)  
  41b6e3:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b6ea:	(bad)  
  41b6eb:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b6f2:	(bad)  
  41b6f3:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b6fa:	(bad)  
  41b6fb:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b702:	(bad)  
  41b703:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b70a:	(bad)  
  41b70b:	jmp    QWORD PTR [rbp+rbp*1-0x1]
  41b70f:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b716:	(bad)  
  41b717:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b71e:	(bad)  
  41b71f:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b726:	(bad)  
  41b727:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b72e:	(bad)  
  41b72f:	inc    DWORD PTR [rbp+rbp*1+0x2d84ffff]
  41b736:	(bad)  
  41b737:	push   QWORD PTR [rsp+rbp*1+0x2d84ffff]
  41b73e:	(bad)  
  41b73f:	jmp    rdi
  41b741:	sub    eax,0xffff
	...
  41b782:	add    BYTE PTR [rax],al
  41b784:	add    eax,DWORD PTR [rax]
  41b786:	add    BYTE PTR [rax],al
  41b788:	add    eax,0x7000000
  41b78d:	add    BYTE PTR [rax],al
  41b78f:	add    BYTE PTR [rdx],cl
  41b791:	add    BYTE PTR [rax],al
  41b793:	add    BYTE PTR [rax+rax*1],cl
  41b796:	add    BYTE PTR [rax],al
  41b798:	(bad)  
  41b799:	add    BYTE PTR [rax],al
  41b79b:	add    BYTE PTR [rcx],dl
  41b79d:	add    BYTE PTR [rax],al
  41b79f:	add    BYTE PTR [rbx],dl
  41b7a1:	add    BYTE PTR [rax],al
  41b7a3:	add    BYTE PTR [rip+0x18000000],dl        # 0x1841b7a9
  41b7a9:	add    BYTE PTR [rax],al
  41b7ab:	add    BYTE PTR [rdx],bl
  41b7ad:	add    BYTE PTR [rax],al
  41b7af:	add    BYTE PTR [rax+rax*1],bl
  41b7b2:	add    BYTE PTR [rax],al
  41b7b4:	(bad)  
  41b7b5:	add    BYTE PTR [rax],al
  41b7b7:	add    BYTE PTR [rcx],ah
  41b7b9:	add    BYTE PTR [rax],al
  41b7bb:	add    BYTE PTR [rbx],ah
  41b7bd:	add    BYTE PTR [rax],al
  41b7bf:	add    BYTE PTR [rsi],ah
  41b7c1:	add    BYTE PTR [rax],al
  41b7c3:	add    BYTE PTR [rax],ch
  41b7c5:	add    BYTE PTR [rax],al
  41b7c7:	add    BYTE PTR [rdx],ch
  41b7c9:	add    BYTE PTR [rax],al
  41b7cb:	add    BYTE PTR [rip+0x2f000000],ch        # 0x2f41b7d1
  41b7d1:	add    BYTE PTR [rax],al
  41b7d3:	add    BYTE PTR [rcx],dh
  41b7d5:	add    BYTE PTR [rax],al
  41b7d7:	add    BYTE PTR [rax+rax*1],dh
	...
  41b7e6:	lock (bad) 
	...
  41b7f4:	add    BYTE PTR [rax],al
  41b7f6:	add    BYTE PTR [rax+0x0],al
  41b7f9:	add    BYTE PTR [rax],al
  41b7fb:	add    BYTE PTR [rax],al
  41b7fd:	add    al,ah
  41b7ff:	(bad)  
  41b800:	add    BYTE PTR [rax],al
  41b802:	sar    bh,0xff
  41b805:	(bad)  
  41b806:	fild   WORD PTR [rcx+0x16]
  41b809:	push   rsi
  41b80a:	out    0x9e,eax
  41b80c:	scas   eax,DWORD PTR es:[rdi]
  41b80d:	add    eax,edx
  41b80f:	cmp    al,0x0
  41b811:	add    BYTE PTR [rax],al
  41b813:	add    BYTE PTR [rax],al
  41b815:	add    BYTE PTR [rax],al
  41b817:	add    BYTE PTR [rax],0x0
	...
  41b83e:	add    BYTE PTR [rax],al
  41b840:	pop    rdi
  41b841:	pop    rdi
  41b842:	jo     0x41b8b3
  41b844:	ja     0x41b8af
	...
  41b84e:	clc    
  41b84f:	inc    DWORD PTR [rax]
  41b851:	add    BYTE PTR [rax],al
  41b853:	add    BYTE PTR [rax],al
  41b855:	add    al,bh
  41b857:	jg     0x41b859
  41b859:	add    BYTE PTR [rax],al
  41b85b:	add    BYTE PTR [rax],al
  41b85d:	add    al,dh
  41b85f:	(bad)  
  41b860:	add    BYTE PTR [rax],al
  41b862:	add    BYTE PTR [rax],al
  41b864:	add    BYTE PTR [rax],al
  41b866:	add    BYTE PTR [rax+0x0],al
  41b86c:	add    BYTE PTR [rax],al
  41b86e:	lock inc DWORD PTR [rax]
  41b871:	add    BYTE PTR [rax],al
  41b873:	add    BYTE PTR [rax],al
  41b875:	add    al,dh
  41b877:	jg     0x41b879
  41b879:	add    BYTE PTR [rax],al
  41b87b:	add    BYTE PTR [rax],al
  41b87d:	add    BYTE PTR [rax],al
  41b87f:	add    bh,bh
  41b881:	(bad)  
  41b882:	(bad)  
  41b883:	(bad)  
  41b884:	(bad)  
  41b885:	(bad)  
  41b886:	(bad)  
  41b887:	jg     0x41b889
	...
  41b895:	add    BYTE PTR [rax],al
  41b897:	add    BYTE PTR [rax],0x0
  41b89a:	add    BYTE PTR [rax],al
  41b89c:	add    BYTE PTR [rax],al
  41b89e:	add    BYTE PTR [rax],al
  41b8a0:	rex.WRX (bad) 
  41b8a2:	rex.WRX add BYTE PTR [rcx+0x6e],r9b
  41b8a6:	data16 add BYTE PTR [rax],ch
  41b8a9:	add    BYTE PTR [rsi+0x0],ch
  41b8ac:	jne    0x41b8ae
  41b8ae:	ins    BYTE PTR es:[rdi],dx
  41b8af:	add    BYTE PTR [rax+rax*1+0x29],ch
  41b8b3:	add    BYTE PTR [rax],al
  41b8b5:	add    BYTE PTR [rax],ch
  41b8b7:	outs   dx,BYTE PTR ds:[rsi]
  41b8b8:	jne    0x41b926
  41b8ba:	ins    BYTE PTR es:[rdi],dx
  41b8bb:	sub    DWORD PTR [rax],eax
  41b8bd:	push   rax
  41b8be:	push   rdx
  41b8bf:	rex.WB
  41b8c0:	rex.WRX push rsp
  41b8c2:	rex.RX pop rdi
  41b8c4:	rex.RB pop r8
  41b8c6:	push   rax
  41b8c7:	rex.WRXB
  41b8c8:	rex.WRX
  41b8c9:	rex.RB
  41b8ca:	rex.WRX push rsp
  41b8cc:	pop    rdi
  41b8cd:	rex.R
  41b8ce:	rex.WB
  41b8cf:	rex.RXB
  41b8d0:	rex.WB push r12
  41b8d2:	push   rbx
  41b8d3:	add    BYTE PTR [rdi+riz*2+0x681cffff],bl
  41b8da:	(bad)  
  41b8db:	call   FWORD PTR [rax+rbp*2]
  41b8de:	(bad)  
  41b8df:	(bad)  
  41b8e0:	jl     0x41b949
  41b8e2:	(bad)  
  41b8e3:	call   FWORD PTR [rax+rbp*2]
  41b8e6:	(bad)  
  41b8e7:	dec    esi
  41b8e9:	addr32 (bad) 
  41b8eb:	call   FWORD PTR [rax+rbp*2]
  41b8ee:	(bad)  
  41b8ef:	(bad)  
  41b8f0:	mov    esp,0x1cffff67
  41b8f5:	push   0x681cffff
  41b8fa:	(bad)  
  41b8fb:	(bad)  
  41b8fc:	fsub   QWORD PTR [rdi-0x1]
  41b8ff:	call   FWORD PTR [rdi+riz*2-0x1]
  41b903:	call   FWORD PTR [rax+rbp*2]
  41b906:	(bad)  
  41b907:	(bad)  
  41b908:	cmp    al,0x67
  41b90a:	(bad)  
  41b90b:	call   FWORD PTR [rdi+riz*2]
  41b90e:	(bad)  
  41b90f:	call   FWORD PTR [rax+rbp*2]
  41b912:	(bad)  
  41b913:	(bad)  
  41b914:	cld    
  41b915:	data16 (bad) 
  41b917:	call   FWORD PTR [rax+rbp*2]
  41b91a:	(bad)  
  41b91b:	call   FWORD PTR [rax+rbp*2]
  41b91e:	(bad)  
  41b91f:	call   FWORD PTR [rax+rbp*2]
  41b922:	(bad)  
  41b923:	call   FWORD PTR [rax+rbp*2]
  41b926:	(bad)  
  41b927:	call   FWORD PTR [rax+rbp*2]
  41b92a:	(bad)  
  41b92b:	call   FWORD PTR [rax+rbp*2]
  41b92e:	(bad)  
  41b92f:	call   FWORD PTR [rax+rbp*2]
  41b932:	(bad)  
  41b933:	call   FWORD PTR [rax+rbp*2]
  41b936:	(bad)  
  41b937:	call   FWORD PTR [rax+rbp*2]
  41b93a:	(bad)  
  41b93b:	call   FWORD PTR [rax+rbp*2]
  41b93e:	(bad)  
  41b93f:	call   FWORD PTR [rax+rbp*2]
  41b942:	(bad)  
  41b943:	call   FWORD PTR [rax+rbp*2]
  41b946:	(bad)  
  41b947:	call   FWORD PTR [rax+rbp*2]
  41b94a:	(bad)  
  41b94b:	call   FWORD PTR [rax+rbp*2]
  41b94e:	(bad)  
  41b94f:	call   FWORD PTR [rax+rbp*2]
  41b952:	(bad)  
  41b953:	call   FWORD PTR [rax+rbp*2]
  41b956:	(bad)  
  41b957:	dec    esi
  41b959:	data16 (bad) 
  41b95b:	call   FWORD PTR [rax+rbp*2]
  41b95e:	(bad)  
  41b95f:	call   FWORD PTR [rsi+riz*2+0x681cffff]
  41b966:	(bad)  
  41b967:	jmp    FWORD PTR [rbp+0x66]
  41b96a:	(bad)  
  41b96b:	(bad)  
  41b96c:	(bad)  
  41b96d:	data16 (bad) 
  41b96f:	call   QWORD PTR [rcx]
  41b971:	data16 (bad) 
  41b973:	call   FWORD PTR [rax+rbp*2]
  41b976:	(bad)  
  41b977:	(bad)  
  41b978:	in     al,dx
  41b979:	gs (bad) 
  41b97b:	call   FWORD PTR [rax+rbp*2]
  41b97e:	(bad)  
  41b97f:	call   FWORD PTR [rax+rbp*2]
  41b982:	(bad)  
  41b983:	dec    esp
  41b985:	gs (bad) 
  41b987:	call   FWORD PTR [rax+rbp*2]
  41b98a:	(bad)  
  41b98b:	call   FWORD PTR [rax+rbp*2]
  41b98e:	(bad)  
  41b98f:	call   FWORD PTR [rax+rbp*2]
  41b992:	(bad)  
  41b993:	call   FWORD PTR [rax+rbp*2]
  41b996:	(bad)  
  41b997:	call   FWORD PTR [rax+rbp*2]
  41b99a:	(bad)  
  41b99b:	call   FWORD PTR [rax+rbp*2]
  41b99e:	(bad)  
  41b99f:	call   FWORD PTR [rdi+0x68]
  41b9a2:	(bad)  
  41b9a3:	call   FWORD PTR [rax+rbp*2]
  41b9a6:	(bad)  
  41b9a7:	call   FWORD PTR [rax+rbp*2]
  41b9aa:	(bad)  
  41b9ab:	call   FWORD PTR [rax+rbp*2]
  41b9ae:	(bad)  
  41b9af:	call   FWORD PTR [rax+rbp*2]
  41b9b2:	(bad)  
  41b9b3:	call   FWORD PTR [rsp+riz*2+0x681cffff]
  41b9ba:	(bad)  
  41b9bb:	call   FWORD PTR [rax+rbp*2]
  41b9be:	(bad)  
  41b9bf:	call   FWORD PTR [rax+rbp*2]
  41b9c2:	(bad)  
  41b9c3:	call   FWORD PTR [rax+rbp*2]
  41b9c6:	(bad)  
  41b9c7:	call   FWORD PTR [rax+rbp*2]
  41b9ca:	(bad)  
  41b9cb:	call   FWORD PTR [rax+rbp*2]
  41b9ce:	(bad)  
  41b9cf:	call   FWORD PTR [rax+rbp*2]
  41b9d2:	(bad)  
  41b9d3:	call   FWORD PTR [rax+rbp*2]
  41b9d6:	(bad)  
  41b9d7:	jmp    FWORD PTR [riz*2+0x681cffff]
  41b9de:	(bad)  
  41b9df:	(bad)  
  41b9e0:	in     eax,dx
  41b9e1:	fs (bad) 
  41b9e3:	jmp    FWORD PTR [rbp+riz*2-0x1]
  41b9e7:	call   FWORD PTR [rsp+riz*2-0x1]
  41b9eb:	call   FWORD PTR [rsp+riz*2]
  41b9ee:	(bad)  
  41b9ef:	jmp    FWORD PTR [rdi-0x1300009d]
  41b9f5:	movsxd edi,edi
  41b9f7:	jmp    FWORD PTR [rbp+riz*2-0x1]
  41b9fb:	dec    DWORD PTR [rbx+riz*2+0x681cffff]
  41ba02:	(bad)  
  41ba03:	call   FWORD PTR [rbx+riz*2-0x1]
  41ba07:	jmp    FWORD PTR [rbx+riz*2]
  41ba0a:	(bad)  
  41ba0b:	(bad)  
  41ba0c:	in     al,dx
  41ba0d:	(bad)  
  41ba0e:	(bad)  
  41ba0f:	call   FWORD PTR [rsp+riz*2+0x62acffff]
  41ba16:	(bad)  
  41ba17:	call   FWORD PTR [rax+rbp*2]
  41ba1a:	(bad)  
  41ba1b:	call   FWORD PTR [rax+rbp*2]
  41ba1e:	(bad)  
  41ba1f:	jmp    QWORD PTR [rcx+0x62]
  41ba22:	(bad)  
  41ba23:	dec    DWORD PTR [rbx+riz*2+0x649cffff]
  41ba2a:	(bad)  
  41ba2b:	call   FWORD PTR [rax+rbp*2]
  41ba2e:	(bad)  
  41ba2f:	call   FWORD PTR [rax+rbp*2]
  41ba32:	(bad)  
  41ba33:	call   FWORD PTR [rsp+riz*2+0x681cffff]
  41ba3a:	(bad)  
  41ba3b:	dec    DWORD PTR [rbx+riz*2+0x6e49ffff]
  41ba42:	imul   bp,WORD PTR [rsi+0x69],0x7974
  41ba48:	add    BYTE PTR [rsi+0x61],cl
  41ba4b:	rex.WRX add BYTE PTR [rax],r14b
  41ba4e:	add    BYTE PTR [rax],al
  41ba50:	(bad)  
  41ba51:	outs   dx,DWORD PTR ds:[rsi]
  41ba52:	(bad)  
  41ba53:	inc    DWORD PTR [rsi+rbp*2-0x1]
  41ba57:	inc    DWORD PTR [rsi+rbp*2-0x1]
  41ba5b:	inc    DWORD PTR [rax+0x53ffff6f]
  41ba61:	outs   dx,DWORD PTR ds:[rsi]
  41ba62:	(bad)  
  41ba63:	inc    DWORD PTR [rax]
	...
  41ba6d:	add    al,bh
  41ba6f:	(bad)  
  41ba70:	(bad)  
  41ba71:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41ba73:	movsxd esp,DWORD PTR [rdi-0x4cc02d79]
  41ba79:	enter  0x8b60,0x28
  41ba7d:	mov    al,dh
  41ba7f:	(bad)  
  41ba80:	sti    
  41ba81:	jns    0x41ba22
  41ba83:	push   rax
  41ba84:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  41ba88:	add    al,0xfa
  41ba8a:	jge    0x41ba29
  41ba8c:	(bad)  
  41ba8d:	sub    eax,0x5a323c94
  41ba92:	rex.RXB push r13
  41ba94:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  41ba98:	add    BYTE PTR [rax],al
  41ba9a:	add    BYTE PTR [rax],al
  41ba9c:	add    BYTE PTR [rax],al
  41ba9e:	lock (bad) 
  41baa0:	add    BYTE PTR [rax],al
  41baa2:	add    BYTE PTR [rax],al
  41baa4:	add    BYTE PTR [rax],al
  41baa6:	and    al,0x40
  41baa8:	add    BYTE PTR [rax],al
  41baaa:	add    BYTE PTR [rax],al
  41baac:	add    BYTE PTR [rax],al
  41baae:	or     BYTE PTR [rax+0x0],al
  41bab1:	add    BYTE PTR [rax],al
  41bab3:	add    BYTE PTR [rax],al
  41bab5:	add    BYTE PTR [rax+rax*2],bl
  41bab8:	add    BYTE PTR [rax],al
  41baba:	add    BYTE PTR [rax],al
  41babc:	add    BYTE PTR [rax],al
  41babe:	adc    al,0x40
  41bac0:	add    BYTE PTR [rax],al
  41bac2:	add    BYTE PTR [rax],al
  41bac4:	add    BYTE PTR [rax],al
  41bac6:	add    BYTE PTR [rax+0x0],al
	...
  41bad4:	add    BYTE PTR [rax],al
  41bad6:	loopne 0x41bb17
	...
  41bae0:	rex.B
  41bae1:	rex.X
  41bae2:	rex.XB
  41bae3:	rex.R
  41bae4:	rex.RB
  41bae5:	rex.RX add BYTE PTR [rcx+0x62],r12b
  41bae9:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  41baed:	add    BYTE PTR [rax],dh
  41baef:	xor    DWORD PTR [rdx],esi
  41baf1:	xor    esi,DWORD PTR [rsi*1+0x39383736]
	...
  41bb00:	add    eax,0x19000000
  41bb05:	add    BYTE PTR [rax],al
  41bb07:	add    BYTE PTR [rbp+0x0],bh
	...
  41bb46:	lock (bad) 
  41bb48:	add    BYTE PTR [rax],al
  41bb4a:	add    BYTE PTR [rax],al
  41bb4c:	add    BYTE PTR [rax],al
  41bb4e:	and    al,0x40
  41bb50:	add    BYTE PTR [rax],al
  41bb52:	add    BYTE PTR [rax],al
  41bb54:	add    BYTE PTR [rax],al
  41bb56:	pop    rcx
  41bb57:	add    BYTE PTR [rax],al
  41bb5a:	add    BYTE PTR [rax],al
  41bb5c:	add    BYTE PTR [rax-0x71],al
  41bb5f:	add    BYTE PTR [rax],al
  41bb62:	add    BYTE PTR [rax],al
  41bb64:	add    BYTE PTR [rax+0x40c3],cl
  41bb6a:	add    BYTE PTR [rax],al
  41bb6c:	add    BYTE PTR [rdx-0x8],ch
  41bb6f:	add    BYTE PTR [rax],al
  41bb72:	add    BYTE PTR [rax],al
  41bb74:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  41bb7c:	rcl    BYTE PTR [rdx],1
  41bb7e:	movsxd eax,DWORD PTR [rcx+0x0]
  41bb81:	add    BYTE PTR [rax],al
  41bb83:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  41bb8a:	add    BYTE PTR [rax],al
  41bb8c:	gs int 0xcd
  41bb8f:	add    BYTE PTR [r8],al
  41bb92:	add    BYTE PTR [rax],ah
  41bb94:	pop    rdi
  41bb95:	movabs al,ds:0x4876e80000004202
  41bb9e:	(bad)  
  41bb9f:	rex.X add BYTE PTR [rax],al
  41bba2:	add    BYTE PTR [rdx+0x426d1a94],ah
  41bba8:	add    BYTE PTR [rax],al
  41bbaa:	rex in eax,0x9c
  41bbad:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  41bbb3:	(bad)  
  41bbb4:	(bad)  
  41bbb5:	mov    esp,0x42d6
  41bbba:	xor    al,0x26
  41bbbc:	cmc    
  41bbbd:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  41bbc1:	and    al,0x37
  41bbc4:	jns    0x41bb89
  41bbc6:	rex.B
  41bbc7:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  41bbce:	jbe    0x41bc13
  41bbd0:	add    al,cl
  41bbd2:	rex.WRX
  41bbd3:	ins    DWORD PTR es:[edi],dx
  41bbd5:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  41bbdc:	in     al,0x58
  41bbde:	loope  0x41bc23
  41bbe0:	rex mov WORD PTR [rbp+0x15af1d78],?
  41bbe7:	rex.R push rax
  41bbe9:	out    dx,eax
  41bbea:	loop   0x41bbc2
  41bbec:	in     al,0x1a
  41bbee:	rex.WXB
  41bbef:	rex.R xchg edx,eax
  41bbf1:	(bad)  
  41bbf2:	rex.WRB (bad) 
  41bbf4:	iret   
  41bbf5:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  41bbfb:	add    BYTE PTR [rax],al
  41bbfd:	add    BYTE PTR [rax],al
  41bbff:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  41bc06:	pushf  
  41bc07:	cmp    al,0x33
  41bc09:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41bc0a:	test   al,0xd5
  41bc0c:	and    esi,esi
  41bc0e:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd86b0bc
  41bc15:	shld   DWORD PTR [rdx],esi,cl
  41bc18:	popf   
  41bc19:	xchg   edi,eax
  41bc1a:	mov    edi,cs
  41bc1c:	or     BYTE PTR [rdx+0x6f43255b],bh
  41bc22:	lods   al,BYTE PTR ds:[rsi]
  41bc23:	sub    BYTE PTR fs:[rsi],al
  41bc26:	enter  0xa,0x0
	...
  41bc3e:	add    BYTE PTR [rax],al
  41bc40:	add    BYTE PTR [rax-0x3c86c820],al
  41bc46:	rex.B
  41bc47:	rex.XB (bad) 
  41bc49:	outs   dx,BYTE PTR ds:[rsi]
  41bc4a:	add    eax,0x93b8b5b5
  41bc4f:	rex.RX cmc 
  41bc51:	stc    
  41bc52:	(bad)  
  41bc53:	jmp    0x4d7a0b5b
  41bc58:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778ab58e
  41bc5e:	(bad)  
  41bc5f:	pop    rdx
  41bc60:	cmp    al,0xbf
  41bc62:	jae    0x41bce3
  41bc64:	fisttp QWORD PTR [rdi+0x15]
  41bc67:	jne    0x41bc69
	...
  41bc7d:	add    BYTE PTR [rax],al
  41bc7f:	add    BYTE PTR [rbp+0x0],ch
  41bc82:	jae    0x41bc84
  41bc84:	jbe    0x41bc86
  41bc86:	movsxd eax,DWORD PTR [rax]
  41bc88:	jb     0x41bc8a
  41bc8a:	je     0x41bc8c
  41bc8c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  41bc91:	add    BYTE PTR [rax+rax*1+0x0],ch
  41bc95:	add    BYTE PTR [rdi+0x73],bl
  41bc98:	gs je  0x41bcfa
  41bc9b:	outs   dx,DWORD PTR ds:[rsi]
  41bc9c:	jne    0x41bd12
  41bc9e:	jo     0x41bd15
  41bca0:	je     0x41bd01
  41bca2:	outs   dx,WORD PTR ds:[rsi]
  41bca4:	jb     0x41bd13
  41bca6:	(bad)  
  41bca7:	je     0x41bca9
  41bca9:	pop    rdi
  41bcaa:	addr32 gs je 0x41bd0d
  41bcae:	outs   dx,DWORD PTR ds:[rsi]
  41bcaf:	jne    0x41bd25
  41bcb1:	jo     0x41bd28
  41bcb3:	je     0x41bd14
  41bcb5:	outs   dx,WORD PTR ds:[rsi]
  41bcb7:	jb     0x41bd26
  41bcb9:	(bad)  
  41bcba:	je     0x41bcbc
  41bcbc:	add    BYTE PTR [rax],al
  41bcbe:	add    BYTE PTR [rax],al
  41bcc0:	cmp    BYTE PTR [rsi+0x0],0x0
	...
  41bccf:	add    BYTE PTR [rax],al
  41bcd1:	ja     0x41bd14
	...
  41bcdf:	add    BYTE PTR [rax],dh
  41bce1:	ja     0x41bd24
	...
  41bcef:	add    al,dl
  41bcf1:	imul   eax,DWORD PTR [rcx+0x0],0x0
	...
  41bd00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41bd01:	mov    BYTE PTR [rcx+0x0],0x0
	...
  41bd0d:	add    BYTE PTR [rax],al
  41bd0f:	add    BYTE PTR [rax+0x41c6],al
	...
  41bd1d:	add    BYTE PTR [rax],al
  41bd1f:	add    BYTE PTR [rax-0x44],al
  41bd22:	add    BYTE PTR [r8],al
	...
  41bd2d:	add    BYTE PTR [rax],al
  41bd2f:	add    al,dh
  41bd31:	mov    dl,0x41
	...
  41bd3f:	add    al,al
  41bd41:	rex.X add BYTE PTR es:[rax],al
	...
  41bd51:	add    BYTE PTR [rax+0x0],al
	...
  41bd60:	shl    BYTE PTR [rdx+rax*2],0x0
	...
  41bd70:	fdiv   DWORD PTR [rdx+rax*2]
	...
  41bd7f:	add    al,dh
  41bd81:	xor    al,0x42
	...
  41bd8f:	add    BYTE PTR [rax],dl
  41bd91:	xor    eax,0x42
	...
  41bd9e:	add    BYTE PTR [rax],al
  41bda0:	sub    BYTE PTR [rip+0x42],dh        # 0x41bde8
	...
  41bdae:	add    BYTE PTR [rax],al
  41bdb0:	or     BYTE PTR [rdx+rax*2],0x0
	...
  41bdc0:	js     0x41bde8
  41bdc2:	rex.X add BYTE PTR [rax],al
	...
  41bdcd:	add    BYTE PTR [rax],al
  41bdcf:	add    BYTE PTR [rax+0x26],dh
  41bdd2:	rex.X add BYTE PTR [rax],al
	...
  41bddd:	add    BYTE PTR [rax],al
  41bddf:	add    BYTE PTR [rax+0x26],ah
  41bde2:	rex.X add BYTE PTR [rax],al
	...
  41bded:	add    BYTE PTR [rax],al
  41bdef:	add    BYTE PTR [rax+0x26],ch
  41bdf2:	rex.X add BYTE PTR [rax],al
	...
  41bdfd:	add    BYTE PTR [rax],al
  41bdff:	add    BYTE PTR [rax-0x45],al
  41be02:	add    BYTE PTR [r8],al
	...
  41be11:	mov    esp,0x41
	...
  41be1e:	add    BYTE PTR [rax],al
  41be20:	add    BYTE PTR [rax+0x42],al
	...
  41be2f:	add    BYTE PTR [rax],dl
  41be31:	rex
  41be32:	rex.X add BYTE PTR [rax],al
	...
  41be3d:	add    BYTE PTR [rax],al
  41be3f:	add    BYTE PTR [rax],bl
  41be41:	rex
  41be42:	rex.X add BYTE PTR [rax],al
	...
  41be4d:	add    BYTE PTR [rax],al
  41be4f:	add    BYTE PTR [rax],dh
  41be51:	rex
  41be52:	rex.X add BYTE PTR [rax],al
	...
  41be5d:	add    BYTE PTR [rax],al
  41be5f:	add    BYTE PTR [rax],dl
  41be61:	(bad)  
  41be62:	rex.X add BYTE PTR [rax],al
	...
  41be6d:	add    BYTE PTR [rax],al
  41be6f:	add    BYTE PTR [rax+0xc],dl
  41be72:	rex.X add BYTE PTR [rax],al
	...
  41be7d:	add    BYTE PTR [rax],al
  41be7f:	add    BYTE PTR [rax],ah
  41be81:	(bad)  
  41be82:	add    BYTE PTR [rax],al
	...
  41be8d:	add    BYTE PTR [rax],al
  41be8f:	add    BYTE PTR [rax-0x45],dh
  41be92:	add    BYTE PTR [rax],al
	...
  41bea1:	or     al,0x42
	...
  41beaf:	add    BYTE PTR [rax+0x4173],al
	...
  41bebd:	add    BYTE PTR [rax],al
  41bebf:	add    BYTE PTR [rax-0x10],bl
  41bec2:	add    BYTE PTR [r8],al
	...
  41becd:	add    BYTE PTR [rax],al
  41becf:	add    BYTE PTR [rax],dh
  41bed1:	or     al,0x42
	...
  41bedf:	add    BYTE PTR [rax],ah
  41bee1:	(bad)  
  41bee2:	rex.X add BYTE PTR [rax],al
	...
  41beed:	add    BYTE PTR [rax],al
  41beef:	add    BYTE PTR [rax],bl
  41bef1:	or     al,0x42
	...
  41beff:	add    BYTE PTR [rsp+rcx*1],dl
  41bf02:	rex.X add BYTE PTR [rax],al
	...
  41bf0d:	add    BYTE PTR [rax],al
  41bf0f:	add    BYTE PTR [rax],dl
  41bf11:	or     al,0x42
	...
  41bf1f:	add    al,bl
  41bf21:	add    eax,0x42
	...
  41bf2e:	add    BYTE PTR [rax],al
  41bf30:	rol    BYTE PTR [rip+0x42],1        # 0x41bf78
	...
  41bf3e:	add    BYTE PTR [rax],al
  41bf40:	push   rax
  41bf41:	lock add BYTE PTR [r8],al
	...
  41bf4d:	add    BYTE PTR [rax],al
  41bf4f:	add    BYTE PTR [rax+0x1b],dl
  41bf52:	rex.X add BYTE PTR [rax],al
	...
  41bf5d:	add    BYTE PTR [rax],al
  41bf5f:	add    al,bh
  41bf61:	rex.X add BYTE PTR ss:[rax],al
	...
  41bf71:	(bad)  
  41bf72:	rex.X add BYTE PTR [rax],al
	...
  41bf7d:	add    BYTE PTR [rax],al
  41bf7f:	add    BYTE PTR [rdi+0x43],al
  41bf82:	rex.XB cmp spl,BYTE PTR [r8]
  41bf85:	sub    BYTE PTR [rdi+0x4e],al
  41bf88:	push   rbp
  41bf89:	sub    DWORD PTR [rax],esp
  41bf8b:	xor    al,0x2e
  41bf8d:	cmp    DWORD PTR [rsi],ebp
  41bf8f:	xor    al,0x0
	...
  41bf9d:	add    BYTE PTR [rax],al
  41bf9f:	add    BYTE PTR [rdi+0x43],al
  41bfa2:	rex.XB cmp spl,BYTE PTR [r8]
  41bfa5:	sub    BYTE PTR [rdi+0x4e],al
  41bfa8:	push   rbp
  41bfa9:	sub    DWORD PTR [rax],esp
  41bfab:	xor    al,0x2e
  41bfad:	cmp    DWORD PTR [rsi],ebp
  41bfaf:	xor    al,0x0
	...
  41bfbd:	add    BYTE PTR [rax],al
  41bfbf:	add    BYTE PTR [rdi+0x43],al
  41bfc2:	rex.XB cmp spl,BYTE PTR [r8]
  41bfc5:	sub    BYTE PTR [rdi+0x4e],al
  41bfc8:	push   rbp
  41bfc9:	sub    DWORD PTR [rax],esp
  41bfcb:	xor    al,0x2e
  41bfcd:	cmp    DWORD PTR [rsi],ebp
  41bfcf:	xor    al,0x0
	...
  41bfdd:	add    BYTE PTR [rax],al
  41bfdf:	add    BYTE PTR [rdi+0x43],al
  41bfe2:	rex.XB cmp spl,BYTE PTR [r8]
  41bfe5:	sub    BYTE PTR [rdi+0x4e],al
  41bfe8:	push   rbp
  41bfe9:	sub    DWORD PTR [rax],esp
  41bfeb:	xor    al,0x2e
  41bfed:	cmp    DWORD PTR [rsi],ebp
  41bfef:	xor    al,0x0
	...
  41bffd:	add    BYTE PTR [rax],al
  41bfff:	add    BYTE PTR [rdi+0x43],al
  41c002:	rex.XB cmp spl,BYTE PTR [r8]
  41c005:	sub    BYTE PTR [rdi+0x4e],al
  41c008:	push   rbp
  41c009:	sub    DWORD PTR [rax],esp
  41c00b:	xor    al,0x2e
  41c00d:	cmp    DWORD PTR [rsi],ebp
  41c00f:	xor    al,0x0
	...
  41c01d:	add    BYTE PTR [rax],al
  41c01f:	add    BYTE PTR [rdi+0x43],al
  41c022:	rex.XB cmp spl,BYTE PTR [r8]
  41c025:	sub    BYTE PTR [rdi+0x4e],al
  41c028:	push   rbp
  41c029:	sub    DWORD PTR [rax],esp
  41c02b:	xor    al,0x2e
  41c02d:	cmp    DWORD PTR [rsi],ebp
  41c02f:	xor    al,0x0
	...
  41c03d:	add    BYTE PTR [rax],al
  41c03f:	add    BYTE PTR [rdi+0x43],al
  41c042:	rex.XB cmp spl,BYTE PTR [r8]
  41c045:	sub    BYTE PTR [rdi+0x4e],al
  41c048:	push   rbp
  41c049:	sub    DWORD PTR [rax],esp
  41c04b:	xor    al,0x2e
  41c04d:	cmp    DWORD PTR [rsi],ebp
  41c04f:	xor    al,0x0
	...
  41c05d:	add    BYTE PTR [rax],al
  41c05f:	add    BYTE PTR [rdi+0x43],al
  41c062:	rex.XB cmp spl,BYTE PTR [r8]
  41c065:	sub    BYTE PTR [rdi+0x4e],al
  41c068:	push   rbp
  41c069:	sub    DWORD PTR [rax],esp
  41c06b:	xor    al,0x2e
  41c06d:	cmp    DWORD PTR [rsi],ebp
  41c06f:	xor    al,0x0
	...
  41c07d:	add    BYTE PTR [rax],al
  41c07f:	add    BYTE PTR [rdi+0x43],al
  41c082:	rex.XB cmp spl,BYTE PTR [r8]
  41c085:	sub    BYTE PTR [rdi+0x4e],al
  41c088:	push   rbp
  41c089:	sub    DWORD PTR [rax],esp
  41c08b:	xor    al,0x2e
  41c08d:	cmp    DWORD PTR [rsi],ebp
  41c08f:	xor    al,0x0
	...
  41c09d:	add    BYTE PTR [rax],al
  41c09f:	add    BYTE PTR [rdi+0x43],al
  41c0a2:	rex.XB cmp spl,BYTE PTR [r8]
  41c0a5:	sub    BYTE PTR [rdi+0x4e],al
  41c0a8:	push   rbp
  41c0a9:	sub    DWORD PTR [rax],esp
  41c0ab:	xor    al,0x2e
  41c0ad:	cmp    DWORD PTR [rsi],ebp
  41c0af:	xor    al,0x0
	...
  41c0bd:	add    BYTE PTR [rax],al
  41c0bf:	add    BYTE PTR [rdi+0x43],al
  41c0c2:	rex.XB cmp spl,BYTE PTR [r8]
  41c0c5:	sub    BYTE PTR [rdi+0x4e],al
  41c0c8:	push   rbp
  41c0c9:	sub    DWORD PTR [rax],esp
  41c0cb:	xor    al,0x2e
  41c0cd:	cmp    DWORD PTR [rsi],ebp
  41c0cf:	xor    al,0x0
	...
  41c0dd:	add    BYTE PTR [rax],al
  41c0df:	add    BYTE PTR [rdi+0x43],al
  41c0e2:	rex.XB cmp spl,BYTE PTR [r8]
  41c0e5:	sub    BYTE PTR [rdi+0x4e],al
  41c0e8:	push   rbp
  41c0e9:	sub    DWORD PTR [rax],esp
  41c0eb:	xor    al,0x2e
  41c0ed:	cmp    DWORD PTR [rsi],ebp
  41c0ef:	xor    al,0x0
	...
  41c0fd:	add    BYTE PTR [rax],al
  41c0ff:	add    BYTE PTR [rdi+0x43],al
  41c102:	rex.XB cmp spl,BYTE PTR [r8]
  41c105:	sub    BYTE PTR [rdi+0x4e],al
  41c108:	push   rbp
  41c109:	sub    DWORD PTR [rax],esp
  41c10b:	xor    al,0x2e
  41c10d:	cmp    DWORD PTR [rsi],ebp
  41c10f:	xor    al,0x0
	...
  41c11d:	add    BYTE PTR [rax],al
  41c11f:	add    BYTE PTR [rdi+0x43],al
  41c122:	rex.XB cmp spl,BYTE PTR [r8]
  41c125:	sub    BYTE PTR [rdi+0x4e],al
  41c128:	push   rbp
  41c129:	sub    DWORD PTR [rax],esp
  41c12b:	xor    al,0x2e
  41c12d:	cmp    DWORD PTR [rsi],ebp
  41c12f:	xor    al,0x0
	...
  41c13d:	add    BYTE PTR [rax],al
  41c13f:	add    BYTE PTR [rdi+0x43],al
  41c142:	rex.XB cmp spl,BYTE PTR [r8]
  41c145:	sub    BYTE PTR [rdi+0x4e],al
  41c148:	push   rbp
  41c149:	sub    DWORD PTR [rax],esp
  41c14b:	xor    al,0x2e
  41c14d:	cmp    DWORD PTR [rsi],ebp
  41c14f:	xor    al,0x0
	...
  41c15d:	add    BYTE PTR [rax],al
  41c15f:	add    BYTE PTR [rdi+0x43],al
  41c162:	rex.XB cmp spl,BYTE PTR [r8]
  41c165:	sub    BYTE PTR [rdi+0x4e],al
  41c168:	push   rbp
  41c169:	sub    DWORD PTR [rax],esp
  41c16b:	xor    al,0x2e
  41c16d:	cmp    DWORD PTR [rsi],ebp
  41c16f:	xor    al,0x0
	...
  41c17d:	add    BYTE PTR [rax],al
  41c17f:	add    BYTE PTR [rdi+0x43],al
  41c182:	rex.XB cmp spl,BYTE PTR [r8]
  41c185:	sub    BYTE PTR [rdi+0x4e],al
  41c188:	push   rbp
  41c189:	sub    DWORD PTR [rax],esp
  41c18b:	xor    al,0x2e
  41c18d:	cmp    DWORD PTR [rsi],ebp
  41c18f:	xor    al,0x0
	...
  41c19d:	add    BYTE PTR [rax],al
  41c19f:	add    BYTE PTR [rdi+0x43],al
  41c1a2:	rex.XB cmp spl,BYTE PTR [r8]
  41c1a5:	sub    BYTE PTR [rdi+0x4e],al
  41c1a8:	push   rbp
  41c1a9:	sub    DWORD PTR [rax],esp
  41c1ab:	xor    al,0x2e
  41c1ad:	cmp    DWORD PTR [rsi],ebp
  41c1af:	xor    al,0x0
	...
  41c1bd:	add    BYTE PTR [rax],al
  41c1bf:	add    BYTE PTR [rdi+0x43],al
  41c1c2:	rex.XB cmp spl,BYTE PTR [r8]
  41c1c5:	sub    BYTE PTR [rdi+0x4e],al
  41c1c8:	push   rbp
  41c1c9:	sub    DWORD PTR [rax],esp
  41c1cb:	xor    al,0x2e
  41c1cd:	cmp    DWORD PTR [rsi],ebp
  41c1cf:	xor    al,0x0
	...
  41c1dd:	add    BYTE PTR [rax],al
  41c1df:	add    BYTE PTR [rdi+0x43],al
  41c1e2:	rex.XB cmp spl,BYTE PTR [r8]
  41c1e5:	sub    BYTE PTR [rdi+0x4e],al
  41c1e8:	push   rbp
  41c1e9:	sub    DWORD PTR [rax],esp
  41c1eb:	xor    al,0x2e
  41c1ed:	cmp    DWORD PTR [rsi],ebp
  41c1ef:	xor    al,0x0
	...
  41c1fd:	add    BYTE PTR [rax],al
  41c1ff:	add    BYTE PTR [rdi+0x43],al
  41c202:	rex.XB cmp spl,BYTE PTR [r8]
  41c205:	sub    BYTE PTR [rdi+0x4e],al
  41c208:	push   rbp
  41c209:	sub    DWORD PTR [rax],esp
  41c20b:	xor    al,0x2e
  41c20d:	cmp    DWORD PTR [rsi],ebp
  41c20f:	xor    al,0x0
	...
  41c21d:	add    BYTE PTR [rax],al
  41c21f:	add    BYTE PTR [rdi+0x43],al
  41c222:	rex.XB cmp spl,BYTE PTR [r8]
  41c225:	sub    BYTE PTR [rdi+0x4e],al
  41c228:	push   rbp
  41c229:	sub    DWORD PTR [rax],esp
  41c22b:	xor    al,0x2e
  41c22d:	cmp    DWORD PTR [rsi],ebp
  41c22f:	xor    al,0x0
	...
  41c23d:	add    BYTE PTR [rax],al
  41c23f:	add    BYTE PTR [rdi+0x43],al
  41c242:	rex.XB cmp spl,BYTE PTR [r8]
  41c245:	sub    BYTE PTR [rdi+0x4e],al
  41c248:	push   rbp
  41c249:	sub    DWORD PTR [rax],esp
  41c24b:	xor    al,0x2e
  41c24d:	cmp    DWORD PTR [rsi],ebp
  41c24f:	xor    al,0x0
	...
  41c25d:	add    BYTE PTR [rax],al
  41c25f:	add    BYTE PTR [rdi+0x43],al
  41c262:	rex.XB cmp spl,BYTE PTR [r8]
  41c265:	sub    BYTE PTR [rdi+0x4e],al
  41c268:	push   rbp
  41c269:	sub    DWORD PTR [rax],esp
  41c26b:	xor    al,0x2e
  41c26d:	cmp    DWORD PTR [rsi],ebp
  41c26f:	xor    al,0x0
	...
  41c27d:	add    BYTE PTR [rax],al
  41c27f:	add    BYTE PTR [rdi+0x43],al
  41c282:	rex.XB cmp spl,BYTE PTR [r8]
  41c285:	sub    BYTE PTR [rdi+0x4e],al
  41c288:	push   rbp
  41c289:	sub    DWORD PTR [rax],esp
  41c28b:	xor    al,0x2e
  41c28d:	cmp    DWORD PTR [rsi],ebp
  41c28f:	xor    al,0x0
	...
  41c29d:	add    BYTE PTR [rax],al
  41c29f:	add    BYTE PTR [rdi+0x43],al
  41c2a2:	rex.XB cmp spl,BYTE PTR [r8]
  41c2a5:	sub    BYTE PTR [rdi+0x4e],al
  41c2a8:	push   rbp
  41c2a9:	sub    DWORD PTR [rax],esp
  41c2ab:	xor    al,0x2e
  41c2ad:	cmp    DWORD PTR [rsi],ebp
  41c2af:	xor    al,0x0
	...
  41c2bd:	add    BYTE PTR [rax],al
  41c2bf:	add    BYTE PTR [rdi+0x43],al
  41c2c2:	rex.XB cmp spl,BYTE PTR [r8]
  41c2c5:	sub    BYTE PTR [rdi+0x4e],al
  41c2c8:	push   rbp
  41c2c9:	sub    DWORD PTR [rax],esp
  41c2cb:	xor    al,0x2e
  41c2cd:	cmp    DWORD PTR [rsi],ebp
  41c2cf:	xor    al,0x0
	...
  41c2dd:	add    BYTE PTR [rax],al
  41c2df:	add    BYTE PTR [rdi+0x43],al
  41c2e2:	rex.XB cmp spl,BYTE PTR [r8]
  41c2e5:	sub    BYTE PTR [rdi+0x4e],al
  41c2e8:	push   rbp
  41c2e9:	sub    DWORD PTR [rax],esp
  41c2eb:	xor    al,0x2e
  41c2ed:	cmp    DWORD PTR [rsi],ebp
  41c2ef:	xor    al,0x0
	...
  41c2fd:	add    BYTE PTR [rax],al
  41c2ff:	add    BYTE PTR [rdi+0x43],al
  41c302:	rex.XB cmp spl,BYTE PTR [r8]
  41c305:	sub    BYTE PTR [rdi+0x4e],al
  41c308:	push   rbp
  41c309:	sub    DWORD PTR [rax],esp
  41c30b:	xor    al,0x2e
  41c30d:	cmp    DWORD PTR [rsi],ebp
  41c30f:	xor    al,0x0
	...
  41c31d:	add    BYTE PTR [rax],al
  41c31f:	add    BYTE PTR [rdi+0x43],al
  41c322:	rex.XB cmp spl,BYTE PTR [r8]
  41c325:	sub    BYTE PTR [rdi+0x4e],al
  41c328:	push   rbp
  41c329:	sub    DWORD PTR [rax],esp
  41c32b:	xor    al,0x2e
  41c32d:	cmp    DWORD PTR [rsi],ebp
  41c32f:	xor    al,0x0
	...
  41c33d:	add    BYTE PTR [rax],al
  41c33f:	add    BYTE PTR [rdi+0x43],al
  41c342:	rex.XB cmp spl,BYTE PTR [r8]
  41c345:	sub    BYTE PTR [rdi+0x4e],al
  41c348:	push   rbp
  41c349:	sub    DWORD PTR [rax],esp
  41c34b:	xor    al,0x2e
  41c34d:	cmp    DWORD PTR [rsi],ebp
  41c34f:	xor    al,0x0
	...
  41c35d:	add    BYTE PTR [rax],al
  41c35f:	add    BYTE PTR [rdi+0x43],al
  41c362:	rex.XB cmp spl,BYTE PTR [r8]
  41c365:	sub    BYTE PTR [rdi+0x4e],al
  41c368:	push   rbp
  41c369:	sub    DWORD PTR [rax],esp
  41c36b:	xor    al,0x2e
  41c36d:	cmp    DWORD PTR [rsi],ebp
  41c36f:	xor    al,0x0
	...
  41c37d:	add    BYTE PTR [rax],al
  41c37f:	add    BYTE PTR [rdi+0x43],al
  41c382:	rex.XB cmp spl,BYTE PTR [r8]
  41c385:	sub    BYTE PTR [rdi+0x4e],al
  41c388:	push   rbp
  41c389:	sub    DWORD PTR [rax],esp
  41c38b:	xor    al,0x2e
  41c38d:	cmp    DWORD PTR [rsi],ebp
  41c38f:	xor    al,0x0
	...
  41c39d:	add    BYTE PTR [rax],al
  41c39f:	add    BYTE PTR [rdi+0x43],al
  41c3a2:	rex.XB cmp spl,BYTE PTR [r8]
  41c3a5:	sub    BYTE PTR [rdi+0x4e],al
  41c3a8:	push   rbp
  41c3a9:	sub    DWORD PTR [rax],esp
  41c3ab:	xor    al,0x2e
  41c3ad:	cmp    DWORD PTR [rsi],ebp
  41c3af:	xor    al,0x0
	...
  41c3bd:	add    BYTE PTR [rax],al
  41c3bf:	add    BYTE PTR [rdi+0x43],al
  41c3c2:	rex.XB cmp spl,BYTE PTR [r8]
  41c3c5:	sub    BYTE PTR [rdi+0x4e],al
  41c3c8:	push   rbp
  41c3c9:	sub    DWORD PTR [rax],esp
  41c3cb:	xor    al,0x2e
  41c3cd:	cmp    DWORD PTR [rsi],ebp
  41c3cf:	xor    al,0x0
	...
  41c3dd:	add    BYTE PTR [rax],al
  41c3df:	add    BYTE PTR [rdi+0x43],al
  41c3e2:	rex.XB cmp spl,BYTE PTR [r8]
  41c3e5:	sub    BYTE PTR [rdi+0x4e],al
  41c3e8:	push   rbp
  41c3e9:	sub    DWORD PTR [rax],esp
  41c3eb:	xor    al,0x2e
  41c3ed:	cmp    DWORD PTR [rsi],ebp
  41c3ef:	xor    al,0x0
	...
  41c3fd:	add    BYTE PTR [rax],al
  41c3ff:	add    BYTE PTR [rdi+0x43],al
  41c402:	rex.XB cmp spl,BYTE PTR [r8]
  41c405:	sub    BYTE PTR [rdi+0x4e],al
  41c408:	push   rbp
  41c409:	sub    DWORD PTR [rax],esp
  41c40b:	xor    al,0x2e
  41c40d:	cmp    DWORD PTR [rsi],ebp
  41c40f:	xor    al,0x0
	...
  41c41d:	add    BYTE PTR [rax],al
  41c41f:	add    BYTE PTR [rdi+0x43],al
  41c422:	rex.XB cmp spl,BYTE PTR [r8]
  41c425:	sub    BYTE PTR [rdi+0x4e],al
  41c428:	push   rbp
  41c429:	sub    DWORD PTR [rax],esp
  41c42b:	xor    al,0x2e
  41c42d:	cmp    DWORD PTR [rsi],ebp
  41c42f:	xor    al,0x0
	...
  41c43d:	add    BYTE PTR [rax],al
  41c43f:	add    BYTE PTR [rdi+0x43],al
  41c442:	rex.XB cmp spl,BYTE PTR [r8]
  41c445:	sub    BYTE PTR [rdi+0x4e],al
  41c448:	push   rbp
  41c449:	sub    DWORD PTR [rax],esp
  41c44b:	xor    al,0x2e
  41c44d:	cmp    DWORD PTR [rsi],ebp
  41c44f:	xor    al,0x0
	...
  41c45d:	add    BYTE PTR [rax],al
  41c45f:	add    BYTE PTR [rdi+0x43],al
  41c462:	rex.XB cmp spl,BYTE PTR [r8]
  41c465:	sub    BYTE PTR [rdi+0x4e],al
  41c468:	push   rbp
  41c469:	sub    DWORD PTR [rax],esp
  41c46b:	xor    al,0x2e
  41c46d:	cmp    DWORD PTR [rsi],ebp
  41c46f:	xor    al,0x0
	...
  41c47d:	add    BYTE PTR [rax],al
  41c47f:	add    BYTE PTR [rdi+0x43],al
  41c482:	rex.XB cmp spl,BYTE PTR [r8]
  41c485:	sub    BYTE PTR [rdi+0x4e],al
  41c488:	push   rbp
  41c489:	sub    DWORD PTR [rax],esp
  41c48b:	xor    al,0x2e
  41c48d:	cmp    DWORD PTR [rsi],ebp
  41c48f:	xor    al,0x0
	...
  41c49d:	add    BYTE PTR [rax],al
  41c49f:	add    BYTE PTR [rdi+0x43],al
  41c4a2:	rex.XB cmp spl,BYTE PTR [r8]
  41c4a5:	sub    BYTE PTR [rdi+0x4e],al
  41c4a8:	push   rbp
  41c4a9:	sub    DWORD PTR [rax],esp
  41c4ab:	xor    al,0x2e
  41c4ad:	cmp    DWORD PTR [rsi],ebp
  41c4af:	xor    al,0x0
	...
  41c4bd:	add    BYTE PTR [rax],al
  41c4bf:	add    BYTE PTR [rdi+0x43],al
  41c4c2:	rex.XB cmp spl,BYTE PTR [r8]
  41c4c5:	sub    BYTE PTR [rdi+0x4e],al
  41c4c8:	push   rbp
  41c4c9:	sub    DWORD PTR [rax],esp
  41c4cb:	xor    al,0x2e
  41c4cd:	cmp    DWORD PTR [rsi],ebp
  41c4cf:	xor    al,0x0
	...
  41c4dd:	add    BYTE PTR [rax],al
  41c4df:	add    BYTE PTR [rdi+0x43],al
  41c4e2:	rex.XB cmp spl,BYTE PTR [r8]
  41c4e5:	sub    BYTE PTR [rdi+0x4e],al
  41c4e8:	push   rbp
  41c4e9:	sub    DWORD PTR [rax],esp
  41c4eb:	xor    al,0x2e
  41c4ed:	cmp    DWORD PTR [rsi],ebp
  41c4ef:	xor    al,0x0
	...
  41c4fd:	add    BYTE PTR [rax],al
  41c4ff:	add    BYTE PTR [rdi+0x43],al
  41c502:	rex.XB cmp spl,BYTE PTR [r8]
  41c505:	sub    BYTE PTR [rdi+0x4e],al
  41c508:	push   rbp
  41c509:	sub    DWORD PTR [rax],esp
  41c50b:	xor    al,0x2e
  41c50d:	cmp    DWORD PTR [rsi],ebp
  41c50f:	xor    al,0x0
	...
  41c51d:	add    BYTE PTR [rax],al
  41c51f:	add    BYTE PTR [rdi+0x43],al
  41c522:	rex.XB cmp spl,BYTE PTR [r8]
  41c525:	sub    BYTE PTR [rdi+0x4e],al
  41c528:	push   rbp
  41c529:	sub    DWORD PTR [rax],esp
  41c52b:	xor    al,0x2e
  41c52d:	cmp    DWORD PTR [rsi],ebp
  41c52f:	xor    al,0x0
	...
  41c53d:	add    BYTE PTR [rax],al
  41c53f:	add    BYTE PTR [rdi+0x43],al
  41c542:	rex.XB cmp spl,BYTE PTR [r8]
  41c545:	sub    BYTE PTR [rdi+0x4e],al
  41c548:	push   rbp
  41c549:	sub    DWORD PTR [rax],esp
  41c54b:	xor    al,0x2e
  41c54d:	cmp    DWORD PTR [rsi],ebp
  41c54f:	xor    al,0x0
	...
  41c55d:	add    BYTE PTR [rax],al
  41c55f:	add    BYTE PTR [rdi+0x43],al
  41c562:	rex.XB cmp spl,BYTE PTR [r8]
  41c565:	sub    BYTE PTR [rdi+0x4e],al
  41c568:	push   rbp
  41c569:	sub    DWORD PTR [rax],esp
  41c56b:	xor    al,0x2e
  41c56d:	cmp    DWORD PTR [rsi],ebp
  41c56f:	xor    al,0x0
	...
  41c57d:	add    BYTE PTR [rax],al
  41c57f:	add    BYTE PTR [rdi+0x43],al
  41c582:	rex.XB cmp spl,BYTE PTR [r8]
  41c585:	sub    BYTE PTR [rdi+0x4e],al
  41c588:	push   rbp
  41c589:	sub    DWORD PTR [rax],esp
  41c58b:	xor    al,0x2e
  41c58d:	cmp    DWORD PTR [rsi],ebp
  41c58f:	xor    al,0x0
	...
  41c59d:	add    BYTE PTR [rax],al
  41c59f:	add    BYTE PTR [rdi+0x43],al
  41c5a2:	rex.XB cmp spl,BYTE PTR [r8]
  41c5a5:	sub    BYTE PTR [rdi+0x4e],al
  41c5a8:	push   rbp
  41c5a9:	sub    DWORD PTR [rax],esp
  41c5ab:	xor    al,0x2e
  41c5ad:	cmp    DWORD PTR [rsi],ebp
  41c5af:	xor    al,0x0
	...
  41c5bd:	add    BYTE PTR [rax],al
  41c5bf:	add    BYTE PTR [rdi+0x43],al
  41c5c2:	rex.XB cmp spl,BYTE PTR [r8]
  41c5c5:	sub    BYTE PTR [rdi+0x4e],al
  41c5c8:	push   rbp
  41c5c9:	sub    DWORD PTR [rax],esp
  41c5cb:	xor    al,0x2e
  41c5cd:	cmp    DWORD PTR [rsi],ebp
  41c5cf:	xor    al,0x0
	...
  41c5dd:	add    BYTE PTR [rax],al
  41c5df:	add    BYTE PTR [rdi+0x43],al
  41c5e2:	rex.XB cmp spl,BYTE PTR [r8]
  41c5e5:	sub    BYTE PTR [rdi+0x4e],al
  41c5e8:	push   rbp
  41c5e9:	sub    DWORD PTR [rax],esp
  41c5eb:	xor    al,0x2e
  41c5ed:	cmp    DWORD PTR [rsi],ebp
  41c5ef:	xor    al,0x0
	...
  41c5fd:	add    BYTE PTR [rax],al
  41c5ff:	add    BYTE PTR [rdi+0x43],al
  41c602:	rex.XB cmp spl,BYTE PTR [r8]
  41c605:	sub    BYTE PTR [rdi+0x4e],al
  41c608:	push   rbp
  41c609:	sub    DWORD PTR [rax],esp
  41c60b:	xor    al,0x2e
  41c60d:	cmp    DWORD PTR [rsi],ebp
  41c60f:	xor    al,0x0
	...
  41c61d:	add    BYTE PTR [rax],al
  41c61f:	add    BYTE PTR [rdi+0x43],al
  41c622:	rex.XB cmp spl,BYTE PTR [r8]
  41c625:	sub    BYTE PTR [rdi+0x4e],al
  41c628:	push   rbp
  41c629:	sub    DWORD PTR [rax],esp
  41c62b:	xor    al,0x2e
  41c62d:	cmp    DWORD PTR [rsi],ebp
  41c62f:	xor    al,0x0
	...
  41c63d:	add    BYTE PTR [rax],al
  41c63f:	add    BYTE PTR [rdi+0x43],al
  41c642:	rex.XB cmp spl,BYTE PTR [r8]
  41c645:	sub    BYTE PTR [rdi+0x4e],al
  41c648:	push   rbp
  41c649:	sub    DWORD PTR [rax],esp
  41c64b:	xor    al,0x2e
  41c64d:	cmp    DWORD PTR [rsi],ebp
  41c64f:	xor    al,0x0
	...
  41c65d:	add    BYTE PTR [rax],al
  41c65f:	add    BYTE PTR [rdi+0x43],al
  41c662:	rex.XB cmp spl,BYTE PTR [r8]
  41c665:	sub    BYTE PTR [rdi+0x4e],al
  41c668:	push   rbp
  41c669:	sub    DWORD PTR [rax],esp
  41c66b:	xor    al,0x2e
  41c66d:	cmp    DWORD PTR [rsi],ebp
  41c66f:	xor    al,0x0
	...
  41c685:	add    BYTE PTR [rax],al
  41c687:	add    BYTE PTR [rcx],al
  41c689:	add    BYTE PTR [rax],al
  41c68b:	add    al,bh
  41c68d:	add    al,BYTE PTR ss:[rax]
  41c690:	(bad)  
  41c691:	mov    edi,0x400001
  41c696:	add    BYTE PTR [rax],al
  41c698:	add    BYTE PTR [rdi],dh
  41c69a:	add    al,BYTE PTR [rax]
  41c69c:	jo     0x41c65d
  41c69e:	add    DWORD PTR [rax],eax
  41c6a0:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000000041d000 <.pdata>:
  41d000:	add    BYTE PTR [rax],dl
  41d002:	add    BYTE PTR [rax],al
  41d004:	add    DWORD PTR [rax],edx
  41d006:	add    BYTE PTR [rax],al
  41d008:	add    al,ah
  41d00a:	add    DWORD PTR [rax],eax
  41d00c:	adc    BYTE PTR [rax],dl
  41d00e:	add    BYTE PTR [rax],al
  41d010:	push   rcx
  41d011:	adc    DWORD PTR [rax],eax
  41d013:	add    BYTE PTR [rax+riz*8],al
  41d016:	add    DWORD PTR [rax],eax
  41d018:	(bad)  
  41d019:	adc    DWORD PTR [rax],eax
  41d01b:	add    BYTE PTR [rsi+0xc000011],ch
  41d021:	loopne 0x41d024
  41d023:	add    BYTE PTR [rax-0x31ffffef],dh
  41d029:	adc    al,0x0
  41d02b:	add    BYTE PTR [rax+riz*8],dl
  41d02e:	add    DWORD PTR [rax],eax
  41d030:	rcl    BYTE PTR [rax+rax*1],1
  41d033:	add    dl,dh
  41d035:	adc    al,0x0
  41d037:	add    BYTE PTR [rax],ch
  41d039:	loopne 0x41d03c
  41d03b:	add    BYTE PTR [rax],al
  41d03d:	adc    eax,0x15220000
  41d042:	add    BYTE PTR [rax],al
  41d044:	rex.W loopne 0x41d048
  41d047:	add    BYTE PTR [rax],dh
  41d049:	adc    eax,0x15330000
  41d04e:	add    BYTE PTR [rax],al
  41d050:	push   0x400001e0
  41d055:	adc    eax,0x15620000
  41d05a:	add    BYTE PTR [rax],al
  41d05c:	ins    BYTE PTR es:[rdi],dx
  41d05d:	loopne 0x41d060
  41d05f:	add    BYTE PTR [rax+0x15],dh
  41d062:	add    BYTE PTR [rax],al
  41d064:	jnp    0x41d07b
  41d066:	add    BYTE PTR [rax],al
  41d068:	je     0x41d04a
  41d06a:	add    DWORD PTR [rax],eax
  41d06c:	adc    BYTE PTR [rip+0x158b0000],0x0        # 0x15ccd073
  41d073:	add    BYTE PTR [rax-0x20],bh
  41d076:	add    DWORD PTR [rax],eax
  41d078:	nop
  41d079:	adc    eax,0x15b70000
  41d07e:	add    BYTE PTR [rax],al
  41d080:	jl     0x41d062
  41d082:	add    DWORD PTR [rax],eax
  41d084:	rcl    BYTE PTR [rip+0x15e20000],0x0        # 0x1623d08b
  41d08b:	add    BYTE PTR [rax+riz*8+0x15f00001],al
  41d092:	add    BYTE PTR [rax],al
  41d094:	pop    rsi
  41d095:	(bad)  
  41d096:	add    BYTE PTR [rax],al
  41d098:	mov    eax,fs
  41d09a:	add    DWORD PTR [rax],eax
  41d09c:	(bad)  
  41d09d:	(bad)  
  41d09e:	add    BYTE PTR [rax],al
  41d0a0:	mov    ebp,0x94000016
  41d0a5:	loopne 0x41d0a8
  41d0a7:	add    al,al
  41d0a9:	(bad)  
  41d0aa:	add    BYTE PTR [rax],al
  41d0ac:	rcl    DWORD PTR [rdi],cl
  41d0ae:	add    BYTE PTR [rax],al
  41d0b0:	movabs al,ds:0x18000017e00001e0
  41d0b9:	sbb    BYTE PTR [rax],al
  41d0bb:	add    BYTE PTR [rax+riz*8+0x18200001],dh
  41d0c2:	add    BYTE PTR [rax],al
  41d0c4:	in     al,dx
  41d0c5:	sbb    BYTE PTR [rax],al
  41d0c7:	add    al,al
  41d0c9:	loopne 0x41d0cc
  41d0cb:	add    al,dh
  41d0cd:	sbb    BYTE PTR [rax],al
  41d0cf:	add    BYTE PTR [rbp-0x27ffffe7],dh
  41d0d5:	loopne 0x41d0d8
  41d0d7:	add    al,al
  41d0d9:	sbb    DWORD PTR [rax],eax
  41d0db:	add    ah,ah
  41d0dd:	sbb    DWORD PTR [rax],eax
  41d0df:	add    al,ch
  41d0e1:	loopne 0x41d0e4
  41d0e3:	add    al,dh
  41d0e5:	sbb    DWORD PTR [rax],eax
  41d0e7:	add    BYTE PTR [rip+0xfffffffff000001a],dh        # 0xfffffffff041d107
  41d0ed:	loopne 0x41d0f0
  41d0ef:	add    BYTE PTR [rax+0x1a],al
  41d0f2:	add    BYTE PTR [rax],al
  41d0f4:	mov    ebx,DWORD PTR [rdx]
  41d0f6:	add    BYTE PTR [rax],al
  41d0f8:	cld    
  41d0f9:	loopne 0x41d0fc
  41d0fb:	add    BYTE PTR [rax+0x2f00001a],dl
  41d101:	sbb    eax,DWORD PTR [rax]
  41d103:	add    BYTE PTR [rax],al
  41d105:	loope  0x41d108
  41d107:	add    BYTE PTR [rax],dh
  41d109:	sbb    eax,DWORD PTR [rax]
  41d10b:	add    BYTE PTR [rdx+0x1b],ch
  41d10e:	add    BYTE PTR [rax],al
  41d110:	or     al,0xe1
  41d112:	add    DWORD PTR [rax],eax
  41d114:	jo     0x41d131
  41d116:	add    BYTE PTR [rax],al
  41d118:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41d119:	sbb    eax,DWORD PTR [rax]
  41d11b:	add    BYTE PTR [rax],bl
  41d11d:	loope  0x41d120
  41d11f:	add    BYTE PTR [rax+0x1900001b],dh
  41d125:	sbb    al,0x0
  41d127:	add    BYTE PTR [rax],ah
  41d129:	loope  0x41d12c
  41d12b:	add    BYTE PTR [rax],ah
  41d12d:	sbb    al,0x0
  41d12f:	add    BYTE PTR [rsi+0x1f],dh
  41d132:	add    BYTE PTR [rax],al
  41d134:	xor    cl,ah
  41d136:	add    DWORD PTR [rax],eax
  41d138:	sbb    BYTE PTR [rdi],0x0
  41d13b:	add    bl,ch
  41d13d:	(bad)  
  41d13e:	add    BYTE PTR [rax],al
  41d140:	rex.R loope 0x41d144
  41d143:	add    al,dh
  41d145:	(bad)  
  41d146:	add    BYTE PTR [rax],al
  41d148:	cmp    esp,DWORD PTR [rax]
  41d14a:	add    BYTE PTR [rax],al
  41d14c:	push   rsp
  41d14d:	loope  0x41d150
  41d14f:	add    BYTE PTR [rax+0x20],al
  41d152:	add    BYTE PTR [rax],al
  41d154:	ja     0x41d176
  41d156:	add    BYTE PTR [rax],al
  41d158:	(bad)  
  41d159:	loope  0x41d15c
  41d15b:	add    BYTE PTR [rax+0x36000020],al
  41d161:	and    DWORD PTR [rax],eax
  41d163:	add    BYTE PTR [rcx+riz*8+0x1],ah
  41d167:	add    BYTE PTR [rax+0x21],al
  41d16a:	add    BYTE PTR [rax],al
  41d16c:	(bad)  
  41d16d:	and    DWORD PTR [rax],eax
  41d16f:	add    BYTE PTR [rcx+riz*8+0x1],ch
  41d173:	add    BYTE PTR [rax+0x1e000021],ah
  41d179:	and    al,BYTE PTR [rax]
  41d17b:	add    BYTE PTR [rax-0x1f],bh
  41d17e:	add    DWORD PTR [rax],eax
  41d180:	and    BYTE PTR [rdx],ah
  41d182:	add    BYTE PTR [rax],al
  41d184:	and    r8b,BYTE PTR [rax]
  41d187:	add    BYTE PTR [rax+0x500001e1],cl
  41d18d:	and    al,BYTE PTR [rax]
  41d18f:	add    BYTE PTR [rbx-0x6fffffde],ch
  41d195:	loope  0x41d198
  41d197:	add    BYTE PTR [rax-0x7ffffde],dh
  41d19d:	and    al,BYTE PTR [rax]
  41d19f:	add    BYTE PTR [rcx+riz*8+0x23000001],bl
  41d1a6:	add    BYTE PTR [rax],al
  41d1a8:	(bad)  
  41d1a9:	and    eax,0xe1a40000
  41d1ae:	add    DWORD PTR [rax],eax
  41d1b0:	(bad)  
  41d1b1:	and    eax,0x26fe0000
  41d1b6:	add    BYTE PTR [rax],al
  41d1b8:	mov    eax,0x1e1
  41d1bd:	(bad)  
  41d1be:	add    BYTE PTR [rax],al
  41d1c0:	movabs ds:0xb00001e1cc000028,al
  41d1c9:	sub    BYTE PTR [rax],al
  41d1cb:	add    BYTE PTR [rdi-0x1fffffd7],dl
  41d1d1:	loope  0x41d1d4
  41d1d3:	add    BYTE PTR [rax-0x14ffffd7],ah
  41d1d9:	xor    eax,DWORD PTR [rax]
  41d1db:	add    al,dh
  41d1dd:	loope  0x41d1e0
  41d1df:	add    al,dh
  41d1e1:	xor    eax,DWORD PTR [rax]
  41d1e3:	add    BYTE PTR [rbx],dl
  41d1e5:	cmp    BYTE PTR [rax],al
  41d1e7:	add    BYTE PTR [rax],cl
  41d1e9:	loop   0x41d1ec
  41d1eb:	add    BYTE PTR [rax],ah
  41d1ed:	cmp    BYTE PTR [rax],al
  41d1ef:	add    BYTE PTR [rsi+0x39],bh
  41d1f2:	add    BYTE PTR [rax],al
  41d1f4:	and    dl,ah
  41d1f6:	add    DWORD PTR [rax],eax
  41d1f8:	cmp    BYTE PTR [rcx],0x0
  41d1fb:	add    cl,ch
  41d1fd:	cmp    DWORD PTR [rax],eax
  41d1ff:	add    BYTE PTR [rdx+riz*8],dh
  41d202:	add    DWORD PTR [rax],eax
  41d204:	lock cmp DWORD PTR [rax],eax
  41d207:	add    BYTE PTR [rdx+0x4000003a],dl
  41d20d:	loop   0x41d210
  41d20f:	add    BYTE PTR [rax+0x1f00003a],ah
  41d215:	cmp    eax,DWORD PTR [rax]
  41d217:	add    BYTE PTR [rax-0x1e],dl
  41d21a:	add    DWORD PTR [rax],eax
  41d21c:	and    BYTE PTR [rbx],bh
  41d21e:	add    BYTE PTR [rax],al
  41d220:	repnz rex.WB add BYTE PTR [r8],al
  41d224:	pop    rax
  41d225:	loop   0x41d228
  41d227:	add    BYTE PTR [rax],al
  41d229:	rex.WX add BYTE PTR [rax],al
  41d22c:	and    ecx,DWORD PTR [rdx+0x0]
  41d22f:	add    BYTE PTR [rax-0x1e],dh
  41d232:	add    DWORD PTR [rax],eax
  41d234:	xor    BYTE PTR [rdx+0x0],cl
  41d237:	add    BYTE PTR [rdx+rcx*2-0x1d8c0000],ah
  41d23e:	add    DWORD PTR [rax],eax
  41d240:	mov    al,0x4a
  41d242:	add    BYTE PTR [rax],al
  41d244:	rex.WR
  41d245:	rex.WR add BYTE PTR [rax],r8b
  41d248:	and    dl,0x1
  41d24b:	add    BYTE PTR [rax+0x4c],dl
  41d24e:	add    BYTE PTR [rax],al
  41d250:	iret   
  41d251:	rex.WR add BYTE PTR [rax],r8b
  41d254:	mov    edx,fs
  41d256:	add    DWORD PTR [rax],eax
  41d258:	ror    BYTE PTR [rax+rax*1+0x0],1
  41d25c:	jns    0x41d2ab
  41d25e:	add    BYTE PTR [rax],al
  41d260:	xchg   esp,eax
  41d261:	loop   0x41d264
  41d263:	add    BYTE PTR [rax-0x3ffffb3],al
  41d269:	rex.WRXB add BYTE PTR [r8],r8b
  41d26c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41d26d:	loop   0x41d270
  41d26f:	add    BYTE PTR [rax],al
  41d271:	push   rax
  41d272:	add    BYTE PTR [rax],al
  41d274:	xchg   esi,eax
  41d275:	push   rax
  41d276:	add    BYTE PTR [rax],al
  41d278:	mov    ah,0xe2
  41d27a:	add    DWORD PTR [rax],eax
  41d27c:	movabs al,ds:0xb800005103000050
  41d285:	loop   0x41d288
  41d287:	add    BYTE PTR [rax],dl
  41d289:	push   rcx
  41d28a:	add    BYTE PTR [rax],al
  41d28c:	rex.WX push rcx
  41d28e:	add    BYTE PTR [rax],al
  41d290:	vpshufb xmm2,xmm15,XMMWORD PTR [rax+0x51]
  41d296:	add    BYTE PTR [rax],al
  41d298:	popf   
  41d299:	push   rcx
  41d29a:	add    BYTE PTR [rax],al
  41d29c:	shl    dl,1
  41d29e:	add    DWORD PTR [rax],eax
  41d2a0:	movabs al,ds:0xdc000051f5000051
  41d2a9:	loop   0x41d2ac
  41d2ab:	add    BYTE PTR [rax],al
  41d2ad:	push   rdx
  41d2ae:	add    BYTE PTR [rax],al
  41d2b0:	rex.XB push r11
  41d2b2:	add    BYTE PTR [rax],al
  41d2b4:	call   0x5041d49b
  41d2b9:	push   rbx
  41d2ba:	add    BYTE PTR [rax],al
  41d2bc:	mov    edi,0xfc000053
  41d2c1:	loop   0x41d2c4
  41d2c3:	add    al,al
  41d2c5:	push   rbx
  41d2c6:	add    BYTE PTR [rax],al
  41d2c8:	(bad)  
  41d2c9:	push   rsp
  41d2ca:	add    BYTE PTR [rax],al
  41d2cc:	or     bl,ah
  41d2ce:	add    DWORD PTR [rax],eax
  41d2d0:	nop
  41d2d1:	push   rsp
  41d2d2:	add    BYTE PTR [rax],al
  41d2d4:	(bad)  
  41d2d5:	push   rsp
  41d2d6:	add    BYTE PTR [rax],al
  41d2d8:	sbb    bl,ah
  41d2da:	add    DWORD PTR [rax],eax
  41d2dc:	loopne 0x41d332
  41d2de:	add    BYTE PTR [rax],al
  41d2e0:	andnps xmm0,XMMWORD PTR [rax]
  41d2e3:	add    BYTE PTR [rbx+riz*8],ah
  41d2e6:	add    DWORD PTR [rax],eax
  41d2e8:	adc    BYTE PTR [rbp+0x0],dl
  41d2eb:	add    BYTE PTR [rdi+rdx*2],cl
  41d2ee:	add    BYTE PTR [rax],al
  41d2f0:	sub    al,0xe3
  41d2f2:	add    DWORD PTR [rax],eax
  41d2f4:	adc    BYTE PTR [rdi+0x0],dl
  41d2f7:	add    BYTE PTR [rdx+0x48000057],dl
  41d2fd:	jrcxz  0x41d300
  41d2ff:	add    BYTE PTR [rax-0x6affffa9],ah
  41d305:	pop    rax
  41d306:	add    BYTE PTR [rax],al
  41d308:	push   rsp
  41d309:	jrcxz  0x41d30c
  41d30b:	add    BYTE PTR [rax-0x57ffffa8],ah
  41d311:	pop    rcx
  41d312:	add    BYTE PTR [rax],al
  41d314:	fs jrcxz 0x41d318
  41d317:	add    BYTE PTR [rax+0x54000059],dh
  41d31d:	pop    rdx
  41d31e:	add    BYTE PTR [rax],al
  41d320:	js     0x41d305
  41d322:	add    DWORD PTR [rax],eax
  41d324:	(bad)  
  41d325:	pop    rdx
  41d326:	add    BYTE PTR [rax],al
  41d328:	sbb    DWORD PTR [rbx+0x0],0x0
  41d32c:	jl     0x41d311
  41d32e:	add    DWORD PTR [rax],eax
  41d330:	nop
  41d331:	pop    rbx
  41d332:	add    BYTE PTR [rax],al
  41d334:	or     bl,BYTE PTR [rax+rax*1+0x0]
  41d338:	xchg   esp,eax
  41d339:	jrcxz  0x41d33c
  41d33b:	add    BYTE PTR [rax],dl
  41d33d:	pop    rsp
  41d33e:	add    BYTE PTR [rax],al
  41d340:	(bad)  
  41d341:	pop    rsp
  41d342:	add    BYTE PTR [rax],al
  41d344:	movabs al,ds:0xd600005c400001e3
  41d34d:	pop    rdi
  41d34e:	add    BYTE PTR [rax],al
  41d350:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41d351:	jrcxz  0x41d354
  41d353:	add    al,ah
  41d355:	pop    rdi
  41d356:	add    BYTE PTR [rax],al
  41d358:	scas   eax,DWORD PTR es:[rdi]
  41d359:	(bad)  
  41d35a:	add    BYTE PTR [rax],al
  41d35c:	mov    esp,0xb00001e3
  41d361:	(bad)  
  41d362:	add    BYTE PTR [rax],al
  41d364:	icebp  
  41d365:	(bad)  
  41d366:	add    BYTE PTR [rax],al
  41d368:	int3   
  41d369:	jrcxz  0x41d36c
  41d36b:	add    BYTE PTR [rax],al
  41d36d:	(bad)  
  41d36e:	add    BYTE PTR [rax],al
  41d370:	rex.WXB (bad) 
  41d372:	add    BYTE PTR [rax],al
  41d374:	loopne 0x41d359
  41d376:	add    DWORD PTR [rax],eax
  41d378:	push   rax
  41d379:	(bad)  
  41d37a:	add    BYTE PTR [rax],al
  41d37c:	push   0x64
  41d37e:	add    BYTE PTR [rax],al
  41d380:	in     al,dx
  41d381:	jrcxz  0x41d384
  41d383:	add    BYTE PTR [rax+0x64],dh
  41d386:	add    BYTE PTR [rax],al
  41d388:	and    DWORD PTR [rbp+0x0],esp
  41d38b:	add    ah,bh
  41d38d:	jrcxz  0x41d390
  41d38f:	add    BYTE PTR [rax],dh
  41d391:	add    BYTE PTR gs:[rax],al
  41d394:	push   rcx
  41d395:	add    BYTE PTR gs:[rax],al
  41d398:	or     al,0xe4
  41d39a:	add    DWORD PTR [rax],eax
  41d39c:	(bad)  
  41d39d:	add    BYTE PTR gs:[rax],al
  41d3a0:	fisub  DWORD PTR [rbp+0x0]
  41d3a3:	add    BYTE PTR [rsp+riz*8],dl
  41d3a6:	add    DWORD PTR [rax],eax
  41d3a8:	loopne 0x41d40f
  41d3aa:	add    BYTE PTR [rax],al
  41d3ac:	(bad)  
  41d3ad:	data16 add BYTE PTR [rax],al
  41d3b0:	sbb    al,0xe4
  41d3b2:	add    DWORD PTR [rax],eax
  41d3b4:	shl    BYTE PTR [rsi+0x0],1
  41d3b7:	add    BYTE PTR [rcx+0x28000067],cl
  41d3bd:	in     al,0x1
  41d3bf:	add    BYTE PTR [rax-0x13ffff99],dl
  41d3c5:	ins    DWORD PTR es:[rdi],dx
  41d3c6:	add    BYTE PTR [rax],al
  41d3c8:	xor    ah,ah
  41d3ca:	add    DWORD PTR [rax],eax
  41d3cc:	lock ins DWORD PTR es:[rdi],dx
  41d3ce:	add    BYTE PTR [rax],al
  41d3d0:	movabs ds:0xb00001e44000006f,al
  41d3d9:	outs   dx,DWORD PTR ds:[rsi]
  41d3da:	add    BYTE PTR [rax],al
  41d3dc:	ja     0x41d44f
  41d3de:	add    BYTE PTR [rax],al
  41d3e0:	push   rax
  41d3e1:	in     al,0x1
  41d3e3:	add    BYTE PTR [rax+0x59000071],al
  41d3e9:	je     0x41d3eb
  41d3eb:	add    BYTE PTR [rax-0x1c],ch
  41d3ee:	add    DWORD PTR [rax],eax
  41d3f0:	(bad)  
  41d3f1:	je     0x41d3f3
  41d3f3:	add    dl,ch
  41d3f5:	ja     0x41d3f7
  41d3f7:	add    BYTE PTR [rsp+riz*8+0x1],bh
  41d3fb:	add    al,dh
  41d3fd:	ja     0x41d3ff
  41d3ff:	add    BYTE PTR [rax],al
  41d401:	jp     0x41d403
  41d403:	add    BYTE PTR [rax+0x1e4],dl
  41d409:	jp     0x41d40b
  41d40b:	add    BYTE PTR [rsi],al
  41d40d:	jp     0x41d40f
  41d40f:	add    BYTE PTR [rsp+riz*8+0x7a100001],ah
  41d416:	add    BYTE PTR [rax],al
  41d418:	push   0xffffffffa800007d
  41d41d:	in     al,0x1
  41d41f:	add    BYTE PTR [rax+0x7d],dh
  41d422:	add    BYTE PTR [rax],al
  41d424:	(bad)  
  41d427:	add    al,al
  41d429:	in     al,0x1
  41d42b:	add    al,dl
  41d42d:	jge    0x41d42f
  41d42f:	add    BYTE PTR [rax],al
  41d431:	jle    0x41d433
  41d433:	add    al,cl
  41d435:	in     al,0x1
  41d437:	add    BYTE PTR [rax],al
  41d439:	jle    0x41d43b
  41d43b:	add    BYTE PTR [rax+0x7e],dh
  41d43e:	add    BYTE PTR [rax],al
  41d440:	shl    ah,1
  41d442:	add    DWORD PTR [rax],eax
  41d444:	jo     0x41d4c4
  41d446:	add    BYTE PTR [rax],al
  41d448:	(bad)  
  41d449:	add    BYTE PTR [rax],0x0
  41d44c:	fsubr  st(4),st
  41d44e:	add    DWORD PTR [rax],eax
  41d450:	rol    BYTE PTR [rax-0x7d120000],1
  41d456:	add    BYTE PTR [rax],al
  41d458:	in     al,dx
  41d459:	in     al,0x1
  41d45b:	add    al,dh
  41d45d:	(bad)  
  41d45e:	add    BYTE PTR [rax],al
  41d460:	rex.X add DWORD PTR [rax],0x0
  41d464:	add    ch,ah
  41d466:	add    DWORD PTR [rax],eax
  41d468:	push   rax
  41d469:	add    DWORD PTR [rax],0x0
  41d46c:	lods   eax,DWORD PTR ds:[rsi]
  41d46d:	xchg   BYTE PTR [rax],al
  41d46f:	add    BYTE PTR [rax],cl
  41d471:	in     eax,0x1
  41d473:	add    BYTE PTR [rax-0x19ffff7a],dh
  41d479:	xchg   BYTE PTR [rax],al
  41d47b:	add    BYTE PTR [rax],ah
  41d47d:	in     eax,0x1
  41d47f:	add    al,dh
  41d481:	xchg   BYTE PTR [rax],al
  41d483:	add    BYTE PTR [rax+rcx*4-0x1ad80000],al
  41d48a:	add    DWORD PTR [rax],eax
  41d48c:	nop
  41d48d:	mov    BYTE PTR [rax],al
  41d48f:	add    BYTE PTR [rbx+rcx*4+0x0],ch
  41d493:	add    BYTE PTR [rax],bh
  41d495:	in     eax,0x1
  41d497:	add    BYTE PTR [rax-0x75],dh
  41d49a:	add    BYTE PTR [rax],al
  41d49c:	(bad)  
  41d49d:	mov    eax,DWORD PTR [rax]
  41d49f:	add    BYTE PTR [rax-0x1b],dl
  41d4a2:	add    DWORD PTR [rax],eax
  41d4a4:	ror    BYTE PTR [rbx-0x73770000],1
  41d4aa:	add    BYTE PTR [rax],al
  41d4ac:	pop    rsp
  41d4ad:	in     eax,0x1
  41d4af:	add    BYTE PTR [rax-0x76ffff74],dl
  41d4b5:	pop    QWORD PTR [rax]
  41d4b7:	add    BYTE PTR [rax-0x1b],ch
  41d4ba:	add    DWORD PTR [rax],eax
  41d4bc:	nop
  41d4bd:	pop    QWORD PTR [rax]
  41d4bf:	add    BYTE PTR [rdx-0x7fffff6b],dl
  41d4c5:	in     eax,0x1
  41d4c7:	add    BYTE PTR [rax+0x58000095],ah
  41d4cd:	cwde   
  41d4ce:	add    BYTE PTR [rax],al
  41d4d0:	mov    esp,0x600001e5
  41d4d5:	cwde   
  41d4d6:	add    BYTE PTR [rax],al
  41d4d8:	fcomp  DWORD PTR [rax-0x1a340000]
  41d4de:	add    DWORD PTR [rax],eax
  41d4e0:	loopne 0x41d47a
  41d4e2:	add    BYTE PTR [rax],al
  41d4e4:	sbb    BYTE PTR [rcx-0x1a2c0000],0x1
  41d4eb:	add    BYTE PTR [rax+0x14000099],al
  41d4f1:	(bad)  
  41d4f2:	add    BYTE PTR [rax],al
  41d4f4:	loopne 0x41d4db
  41d4f6:	add    DWORD PTR [rax],eax
  41d4f8:	and    BYTE PTR [rdx-0x64370000],bl
  41d4fe:	add    BYTE PTR [rax],al
  41d500:	in     al,dx
  41d501:	in     eax,0x1
  41d503:	add    al,dl
  41d505:	fwait
  41d506:	add    BYTE PTR [rax],al
  41d508:	out    0x9b,al
  41d50a:	add    BYTE PTR [rax],al
  41d50c:	and    dh,ah
  41d50e:	add    DWORD PTR [rax],eax
  41d510:	lock fwait
  41d512:	add    BYTE PTR [rax],al
  41d514:	pop    rcx
  41d515:	pushf  
  41d516:	add    BYTE PTR [rax],al
  41d518:	sub    dh,ah
  41d51a:	add    DWORD PTR [rax],eax
  41d51c:	(bad)  
  41d51d:	pushf  
  41d51e:	add    BYTE PTR [rax],al
  41d520:	pushf  
  41d521:	pushf  
  41d522:	add    BYTE PTR [rax],al
  41d524:	xor    al,0xe6
  41d526:	add    DWORD PTR [rax],eax
  41d528:	movabs al,ds:0x4000009db600009c
  41d531:	out    0x1,al
  41d533:	add    al,al
  41d535:	popf   
  41d536:	add    BYTE PTR [rax],al
  41d538:	rex.WB movabs ds:0xa2500001e6500000,al
  41d542:	add    BYTE PTR [rax],al
  41d544:	or     ch,BYTE PTR [rdx-0x19980000]
  41d54a:	add    DWORD PTR [rax],eax
  41d54c:	adc    BYTE PTR [rdx-0x55ef0000],ch
  41d552:	add    BYTE PTR [rax],al
  41d554:	cwde   
  41d555:	out    0x1,al
  41d557:	add    BYTE PTR [rax],ah
  41d559:	stos   BYTE PTR es:[rdi],al
  41d55a:	add    BYTE PTR [rax],al
  41d55c:	test   DWORD PTR [rdx-0x19640000],ebp
  41d562:	add    DWORD PTR [rax],eax
  41d564:	nop
  41d565:	stos   BYTE PTR es:[rdi],al
  41d566:	add    BYTE PTR [rax],al
  41d568:	ja     0x41d515
  41d56a:	add    BYTE PTR [rax],al
  41d56c:	test   al,0xe6
  41d56e:	add    DWORD PTR [rax],eax
  41d570:	sub    BYTE PTR [rbx-0x539f0000],0x0
  41d577:	add    BYTE PTR [rsi+riz*8-0x538fffff],bh
  41d57e:	add    BYTE PTR [rax],al
  41d580:	sbb    al,0xb6
  41d582:	add    BYTE PTR [rax],al
  41d584:	int3   
  41d585:	out    0x1,al
  41d587:	add    BYTE PTR [rax],ah
  41d589:	mov    dh,0x0
  41d58b:	add    BYTE PTR [rdx-0x4a],al
  41d58e:	add    BYTE PTR [rax],al
  41d590:	in     al,0xe6
  41d592:	add    DWORD PTR [rax],eax
  41d594:	push   rax
  41d595:	mov    dh,0x0
  41d597:	add    BYTE PTR [rax-0x4a],dh
  41d59a:	add    BYTE PTR [rax],al
  41d59c:	in     al,dx
  41d59d:	out    0x1,al
  41d59f:	add    BYTE PTR [rax-0x4a],dh
  41d5a2:	add    BYTE PTR [rax],al
  41d5a4:	nop
  41d5a5:	mov    dh,0x0
  41d5a7:	add    ah,dh
  41d5a9:	out    0x1,al
  41d5ab:	add    al,dl
  41d5ad:	mov    dh,0x0
  41d5af:	add    BYTE PTR [rdi-0x49],dh
  41d5b2:	add    BYTE PTR [rax],al
  41d5b4:	cld    
  41d5b5:	out    0x1,al
  41d5b7:	add    BYTE PTR [rax-0x66ffff49],al
  41d5bd:	mov    bh,0x0
  41d5bf:	add    BYTE PTR [rdi+riz*8],al
  41d5c2:	add    DWORD PTR [rax],eax
  41d5c4:	movabs al,ds:0xc0000b7d50000b7
  41d5cd:	out    0x1,eax
  41d5cf:	add    al,ah
  41d5d1:	mov    bh,0x0
  41d5d3:	add    BYTE PTR [rip+0x140000b8],dh        # 0x1441d691
  41d5d9:	out    0x1,eax
  41d5db:	add    BYTE PTR [rax-0x48],al
  41d5de:	add    BYTE PTR [rax],al
  41d5e0:	pop    rsp
  41d5e1:	mov    eax,0xe7200000
  41d5e6:	add    DWORD PTR [rax],eax
  41d5e8:	(bad)  
  41d5e9:	mov    eax,0xb86a0000
  41d5ee:	add    BYTE PTR [rax],al
  41d5f0:	and    al,0xe7
  41d5f2:	add    DWORD PTR [rax],eax
  41d5f4:	jo     0x41d5ae
  41d5f6:	add    BYTE PTR [rax],al
  41d5f8:	jae    0x41d5b2
  41d5fa:	add    BYTE PTR [rax],al
  41d5fc:	sub    bh,ah
  41d5fe:	add    DWORD PTR [rax],eax
  41d600:	cmp    BYTE PTR [rax-0x46aa0000],0x0
  41d607:	add    BYTE PTR [rdi+riz*8],ch
  41d60a:	add    DWORD PTR [rax],eax
  41d60c:	(bad)  
  41d60d:	mov    ecx,0xba5b0000
  41d612:	add    BYTE PTR [rax],al
  41d614:	cmp    al,0xe7
  41d616:	add    DWORD PTR [rax],eax
  41d618:	(bad)  
  41d619:	mov    edx,0xba8f0000
  41d61e:	add    BYTE PTR [rax],al
  41d620:	rex.WR out 0x1,eax
  41d623:	add    BYTE PTR [rax-0x6ffff46],dl
  41d629:	mov    edx,0xe7540000
  41d62e:	add    DWORD PTR [rax],eax
  41d630:	add    BYTE PTR [rbx-0x44fd0000],bh
  41d636:	add    BYTE PTR [rax],al
  41d638:	(bad)  
  41d639:	out    0x1,eax
  41d63b:	add    BYTE PTR [rax],dl
  41d63d:	mov    ebx,0xbb510000
  41d642:	add    BYTE PTR [rax],al
  41d644:	fs out 0x1,eax
  41d647:	add    BYTE PTR [rax-0x45],ah
  41d64a:	add    BYTE PTR [rax],al
  41d64c:	ins    BYTE PTR es:[rdi],dx
  41d64d:	mov    ebx,0xe76c0000
  41d652:	add    DWORD PTR [rax],eax
  41d654:	jo     0x41d611
  41d656:	add    BYTE PTR [rax],al
  41d658:	ins    BYTE PTR es:[rdi],dx
  41d659:	mov    esp,0xe7700000
  41d65e:	add    DWORD PTR [rax],eax
  41d660:	jo     0x41d61e
  41d662:	add    BYTE PTR [rax],al
  41d664:	jae    0x41d622
  41d666:	add    BYTE PTR [rax],al
  41d668:	mov    bh,ah
  41d66a:	add    DWORD PTR [rax],eax
  41d66c:	cmp    BYTE PTR [rax+rax*1+0xbc8400],0x0
  41d674:	mov    edi,fs
  41d676:	add    DWORD PTR [rax],eax
  41d678:	nop
  41d679:	mov    esp,0xbc940000
  41d67e:	add    BYTE PTR [rax],al
  41d680:	nop
  41d681:	out    0x1,eax
  41d683:	add    BYTE PTR [rax+0x10000bc],ah
  41d689:	mov    ebp,0xe7940000
  41d68e:	add    DWORD PTR [rax],eax
  41d690:	adc    BYTE PTR [rbp-0x418e0000],bh
  41d696:	add    BYTE PTR [rax],al
  41d698:	movabs al,ds:0x790000be800001e7
  41d6a1:	rol    DWORD PTR [rax],0x0
  41d6a4:	mov    ah,0xe7
  41d6a6:	add    DWORD PTR [rax],eax
  41d6a8:	add    cl,0x0
  41d6ab:	add    BYTE PTR [rsi],ah
  41d6ad:	ret    
  41d6ae:	add    BYTE PTR [rax],al
  41d6b0:	int3   
  41d6b1:	out    0x1,eax
  41d6b3:	add    BYTE PTR [rax],dh
  41d6b5:	ret    
  41d6b6:	add    BYTE PTR [rax],al
  41d6b8:	sbb    al,0xc4
  41d6ba:	add    BYTE PTR [rax],al
  41d6bc:	(bad)  
  41d6bd:	out    0x1,eax
  41d6bf:	add    BYTE PTR [rax],ah
  41d6c1:	(bad)  
  41d6c2:	add    BYTE PTR [rax],al
  41d6c4:	fadd   st,st(5)
  41d6c6:	add    BYTE PTR [rax],al
  41d6c8:	in     al,0xe7
  41d6ca:	add    DWORD PTR [rax],eax
  41d6cc:	loopne 0x41d693
  41d6ce:	add    BYTE PTR [rax],al
  41d6d0:	rex.WRB mov BYTE PTR [r8],0x0
  41d6d4:	in     al,dx
  41d6d5:	out    0x1,eax
  41d6d7:	add    BYTE PTR [rax-0x3a],dl
  41d6da:	add    BYTE PTR [rax],al
  41d6dc:	iret   
  41d6dd:	mov    BYTE PTR [rax],0x0
  41d6e0:	cld    
  41d6e1:	out    0x1,eax
  41d6e3:	add    al,dl
  41d6e5:	mov    BYTE PTR [rax],0x0
  41d6e8:	outs   dx,DWORD PTR ds:[rsi]
  41d6e9:	mov    DWORD PTR [rax],0x1e80800
  41d6ef:	add    BYTE PTR [rax-0x39],dh
  41d6f2:	add    BYTE PTR [rax],al
  41d6f4:	rex.WX enter 0x0,0x10
  41d6f9:	call   0xffffffffc891d6ff
  41d6fe:	add    BYTE PTR [rax],al
  41d700:	outs   dx,DWORD PTR ds:[rsi]
  41d701:	enter  0x0,0x18
  41d705:	call   0xffffffffc8b1d70b
  41d70a:	add    BYTE PTR [rax],al
  41d70c:	(bad)  
  41d70d:	enter  0x0,0x1c
  41d711:	call   0xffffffffc8d1d717
  41d716:	add    BYTE PTR [rax],al
  41d718:	(bad)  
  41d719:	enter  0x0,0x20
  41d71d:	call   0xffffffffc921d723
  41d722:	add    BYTE PTR [rax],al
  41d724:	jle    0x41d6ef
  41d726:	add    BYTE PTR [rax],al
  41d728:	and    al,0xe8
  41d72a:	add    DWORD PTR [rax],eax
  41d72c:	or     cl,0x0
  41d72f:	add    bl,al
  41d731:	leave  
  41d732:	add    BYTE PTR [rax],al
  41d734:	xor    al,ch
  41d736:	add    DWORD PTR [rax],eax
  41d738:	ror    cl,1
  41d73a:	add    BYTE PTR [rax],al
  41d73c:	or     ecx,edx
  41d73e:	add    BYTE PTR [rax],al
  41d740:	cmp    al,0xe8
  41d742:	add    DWORD PTR [rax],eax
  41d744:	adc    dl,cl
  41d746:	add    BYTE PTR [rax],al
  41d748:	sahf   
  41d749:	retf   0x0
  41d74c:	rex.R call 0xffffffffcae1d753
  41d752:	add    BYTE PTR [rax],al
  41d754:	fmul   st,st(2)
  41d756:	add    BYTE PTR [rax],al
  41d758:	push   rax
  41d759:	call   0xffffffffcb21d75f
  41d75e:	add    BYTE PTR [rax],al
  41d760:	xor    eax,0x5c0000cb
  41d765:	call   0xffffffffcb81d76b
  41d76a:	add    BYTE PTR [rax],al
  41d76c:	out    dx,al
  41d76d:	retf   
  41d76e:	add    BYTE PTR [rax],al
  41d770:	push   0x300001e8
  41d775:	int3   
  41d776:	add    BYTE PTR [rax],al
  41d778:	adc    ch,cl
  41d77a:	add    BYTE PTR [rax],al
  41d77c:	js     0x41d766
  41d77e:	add    DWORD PTR [rax],eax
  41d780:	adc    ch,cl
  41d782:	add    BYTE PTR [rax],al
  41d784:	mov    eax,0x800000ce
  41d789:	call   0xffffffffcf01d78f
  41d78e:	add    BYTE PTR [rax],al
  41d790:	pop    rbx
  41d791:	iret   
  41d792:	add    BYTE PTR [rax],al
  41d794:	mov    al,ch
  41d796:	add    DWORD PTR [rax],eax
  41d798:	(bad)  
  41d799:	iret   
  41d79a:	add    BYTE PTR [rax],al
  41d79c:	or     edi,0xe8900000
  41d7a2:	add    DWORD PTR [rax],eax
  41d7a4:	nop
  41d7a5:	iret   
  41d7a6:	add    BYTE PTR [rax],al
  41d7a8:	ror    edi,0x0
  41d7ab:	add    BYTE PTR [rax-0x2ffffe18],bl
  41d7b1:	iret   
  41d7b2:	add    BYTE PTR [rax],al
  41d7b4:	std    
  41d7b5:	iret   
  41d7b6:	add    BYTE PTR [rax],al
  41d7b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41d7b9:	call   0xffffffffd041d7bf
  41d7be:	add    BYTE PTR [rax],al
  41d7c0:	repz rol BYTE PTR [rax],1
  41d7c3:	add    BYTE PTR [rax+rbp*8-0x2ecfffff],ch
  41d7ca:	add    BYTE PTR [rax],al
  41d7cc:	sbb    al,0xd3
  41d7ce:	add    BYTE PTR [rax],al
  41d7d0:	mov    eax,0x200001e8
  41d7d5:	rol    DWORD PTR [rax],cl
  41d7d7:	add    BYTE PTR [rdx-0x2c],ch
  41d7da:	add    BYTE PTR [rax],al
  41d7dc:	enter  0x1e8,0x0
  41d7e0:	jo     0x41d7b6
  41d7e2:	add    BYTE PTR [rax],al
  41d7e4:	or     edx,ebp
  41d7e6:	add    BYTE PTR [rax],al
  41d7e8:	(bad)  
  41d7e9:	call   0xffffffffd551d7ef
  41d7ee:	add    BYTE PTR [rax],al
  41d7f0:	add    bl,bl
  41d7f2:	add    BYTE PTR [rax],al
  41d7f4:	fsub   st(0),st
  41d7f6:	add    DWORD PTR [rax],eax
  41d7f8:	add    bl,bl
  41d7fa:	add    BYTE PTR [rax],al
  41d7fc:	repz fild DWORD PTR [rax]
  41d7ff:	add    ah,bh
  41d801:	call   0xffffffffdc81d807
  41d806:	add    BYTE PTR [rax],al
  41d808:	jmp    0x41d7e6
  41d80a:	add    BYTE PTR [rax],al
  41d80c:	or     cl,ch
  41d80e:	add    DWORD PTR [rax],eax
  41d810:	lock fadd QWORD PTR [rax]
  41d813:	add    BYTE PTR [rcx+0x140000e0],ch
  41d819:	jmp    0xffffffffe0f1d81f
  41d81e:	add    BYTE PTR [rax],al
  41d820:	loop   0x41d802
  41d822:	add    BYTE PTR [rax],al
  41d824:	sub    al,0xe9
  41d826:	add    DWORD PTR [rax],eax
  41d828:	lock loopne 0x41d82b
  41d82b:	add    BYTE PTR [rcx+0x300000e1],bl
  41d831:	jmp    0xffffffffe1e1d837
  41d836:	add    BYTE PTR [rax],al
  41d838:	in     eax,dx
  41d839:	cld    
  41d83a:	add    BYTE PTR [rax],al
  41d83c:	cmp    cl,ch
  41d83e:	add    DWORD PTR [rax],eax
  41d840:	lock cld 
  41d842:	add    BYTE PTR [rax],al
  41d844:	rex.WXB inc BYTE PTR [r8]
  41d847:	add    BYTE PTR [rax-0x17],ch
  41d84a:	add    DWORD PTR [rax],eax
  41d84c:	push   rax
  41d84d:	inc    BYTE PTR [rax]
  41d84f:	add    BYTE PTR [rbp+0x1],cl
  41d852:	add    DWORD PTR [rax],eax
  41d854:	jl     0x41d83f
  41d856:	add    DWORD PTR [rax],eax
  41d858:	push   rax
  41d859:	add    DWORD PTR [rcx],eax
  41d85b:	add    BYTE PTR [rsi+0x2],al
  41d85e:	add    DWORD PTR [rax],eax
  41d860:	mov    ecx,gs
  41d862:	add    DWORD PTR [rax],eax
  41d864:	push   rax
  41d865:	add    al,BYTE PTR [rcx]
  41d867:	add    BYTE PTR [rdi-0x6bfffefe],ah
  41d86d:	jmp    0x2f1d873
  41d872:	add    DWORD PTR [rax],eax
  41d874:	iret   
  41d875:	add    eax,DWORD PTR [rcx]
  41d877:	add    BYTE PTR [rcx+rbp*8+0x3d00001],bl
  41d87e:	add    DWORD PTR [rax],eax
  41d880:	(bad)  
  41d881:	add    al,0x1
  41d883:	add    BYTE PTR [rax-0x1ffffe17],dh
  41d889:	add    al,0x1
  41d88b:	add    BYTE PTR [rdx+0x5],bh
  41d88e:	add    DWORD PTR [rax],eax
  41d890:	mov    esp,0x800001e9
  41d895:	add    eax,0x66c0001
  41d89a:	add    DWORD PTR [rax],eax
  41d89c:	(bad)  
  41d89d:	jmp    0x6b1d8a3
  41d8a2:	add    DWORD PTR [rax],eax
  41d8a4:	int3   
  41d8a5:	or     DWORD PTR [rcx],eax
  41d8a7:	add    al,bl
  41d8a9:	jmp    0xa11d8af
  41d8ae:	add    DWORD PTR [rax],eax
  41d8b0:	mov    cl,0xa
  41d8b2:	add    DWORD PTR [rax],eax
  41d8b4:	call   0xffffffffc041daa2
  41d8b9:	or     al,BYTE PTR [rcx]
  41d8bb:	add    BYTE PTR [rax-0xbfffef3],dl
  41d8c1:	jmp    0xdd1d8c7
  41d8c6:	add    DWORD PTR [rax],eax
  41d8c8:	pop    rcx
  41d8c9:	(bad)  
  41d8ca:	add    DWORD PTR [rax],eax
  41d8cc:	or     dl,ch
  41d8ce:	add    DWORD PTR [rax],eax
  41d8d0:	(bad)  
  41d8d1:	(bad)  
  41d8d2:	add    DWORD PTR [rax],eax
  41d8d4:	(bad)  
  41d8d5:	sgdt   [rax]
  41d8d8:	adc    al,0xea
  41d8da:	add    DWORD PTR [rax],eax
  41d8dc:	adc    BYTE PTR [rdi],cl
  41d8de:	add    DWORD PTR [rax],eax
  41d8e0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d8e1:	adc    BYTE PTR [rcx],al
  41d8e3:	add    BYTE PTR [rax],ah
  41d8e5:	(bad)  
  41d8e6:	add    DWORD PTR [rax],eax
  41d8e8:	mov    al,0x10
  41d8ea:	add    DWORD PTR [rax],eax
  41d8ec:	push   0x2c000114
  41d8f1:	(bad)  
  41d8f2:	add    DWORD PTR [rax],eax
  41d8f4:	jo     0x41d90a
  41d8f6:	add    DWORD PTR [rax],eax
  41d8f8:	jnp    0x41d913
  41d8fa:	add    DWORD PTR [rax],eax
  41d8fc:	rex.R (bad) 
  41d8fe:	add    DWORD PTR [rax],eax
  41d900:	sbb    BYTE PTR [rcx],0x1
  41d903:	add    dl,dl
  41d905:	and    eax,DWORD PTR [rcx]
  41d907:	add    BYTE PTR [rax-0x16],bl
  41d90a:	add    DWORD PTR [rax],eax
  41d90c:	mov    al,0x24
  41d90e:	add    DWORD PTR [rax],eax
  41d910:	movabs eax,ds:0x200001ea70000125
  41d919:	add    DWORD PTR es:[rax],eax
  41d91c:	push   rax
  41d91d:	add    DWORD PTR es:[rax],eax
  41d920:	js     0x41d90c
  41d922:	add    DWORD PTR [rax],eax
  41d924:	push   rax
  41d925:	add    DWORD PTR es:[rax],eax
  41d928:	cwde   
  41d929:	add    DWORD PTR es:[rax],eax
  41d92c:	sub    dl,0x1
  41d92f:	add    BYTE PTR [rax-0x43fffeda],ah
  41d935:	add    DWORD PTR es:[rax],eax
  41d938:	mov    edx,gs
  41d93a:	add    DWORD PTR [rax],eax
  41d93c:	shl    BYTE PTR [rsi],0x1
  41d93f:	add    BYTE PTR [rdx],bh
  41d941:	sub    BYTE PTR [rcx],al
  41d943:	add    BYTE PTR [rax+0x400001ea],dl
  41d949:	sub    BYTE PTR [rcx],al
  41d94b:	add    BYTE PTR [rdx-0x57fffec4],ch
  41d951:	(bad)  
  41d952:	add    DWORD PTR [rax],eax
  41d954:	mov    al,0x3c
  41d956:	add    DWORD PTR [rax],eax
  41d958:	jg     0x41d99f
  41d95a:	add    DWORD PTR [rax],eax
  41d95c:	(bad)  
  41d95d:	(bad)  
  41d95e:	add    DWORD PTR [rax],eax
  41d960:	add    BYTE PTR [rbp+0x1],0x0
  41d964:	jge    0x41d9ac
  41d966:	add    DWORD PTR [rax],eax
  41d968:	fsub   st(2),st
  41d96a:	add    DWORD PTR [rax],eax
  41d96c:	add    BYTE PTR [rsi+0x1],0x0
  41d970:	mov    esi,0xe8000146
  41d975:	(bad)  
  41d976:	add    DWORD PTR [rax],eax
  41d978:	rol    BYTE PTR [rsi+0x1],0x0
  41d97c:	rex.R
  41d97d:	rex.RXB add DWORD PTR [r8],r8d
  41d980:	in     al,dx
  41d981:	(bad)  
  41d982:	add    DWORD PTR [rax],eax
  41d984:	push   rax
  41d985:	rex.RXB add DWORD PTR [r8],r8d
  41d988:	add    cl,BYTE PTR [rbx+0x1]
  41d98b:	add    al,dh
  41d98d:	(bad)  
  41d98e:	add    DWORD PTR [rax],eax
  41d990:	adc    BYTE PTR [rbx+0x1],cl
  41d993:	add    ah,bl
  41d995:	rex.WXB add QWORD PTR [r8],rax
  41d998:	or     bl,ch
  41d99a:	add    DWORD PTR [rax],eax
  41d99c:	loopne 0x41d9e9
  41d99e:	add    DWORD PTR [rax],eax
  41d9a0:	and    cl,BYTE PTR [rcx+rax*1+0x0]
  41d9a4:	adc    al,0xeb
  41d9a6:	add    DWORD PTR [rax],eax
  41d9a8:	xor    BYTE PTR [rcx+rax*1+0x0],cl
  41d9ac:	add    QWORD PTR ds:[r8],r8
  41d9b0:	sbb    al,0xeb
  41d9b2:	add    DWORD PTR [rax],eax
  41d9b4:	rex
  41d9b5:	add    QWORD PTR [r8],r8
  41d9b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41d9b9:	add    QWORD PTR [r8],r8
  41d9bc:	sub    bl,ch
  41d9be:	add    DWORD PTR [rax],eax
  41d9c0:	mov    al,0x4d
  41d9c2:	add    DWORD PTR [rax],eax
  41d9c4:	(bad)  
  41d9c5:	rex.WRX add QWORD PTR [rax],r8
  41d9c8:	xor    bl,ch
  41d9ca:	add    DWORD PTR [rax],eax
  41d9cc:	jo     0x41da1c
  41d9ce:	add    DWORD PTR [rax],eax
  41d9d0:	xchg   esi,eax
  41d9d1:	rex.WRX add QWORD PTR [rax],r8
  41d9d4:	rex jmp 0x41d9d8
  41d9d7:	add    BYTE PTR [rax-0x2ffffeb2],ah
  41d9dd:	rex.WRXB add QWORD PTR [r8],r8
  41d9e0:	rex.W jmp 0x41d9e4
  41d9e3:	add    al,dl
  41d9e5:	rex.WRXB add QWORD PTR [r8],r8
  41d9e8:	xor    al,0x51
  41d9ea:	add    DWORD PTR [rax],eax
  41d9ec:	pop    rsp
  41d9ed:	jmp    0x41d9f0
  41d9ef:	add    BYTE PTR [rax+0x51],al
  41d9f2:	add    DWORD PTR [rax],eax
  41d9f4:	push   rbx
  41d9f5:	push   rdx
  41d9f6:	add    DWORD PTR [rax],eax
  41d9f8:	ins    BYTE PTR es:[rdi],dx
  41d9f9:	jmp    0x41d9fc
  41d9fb:	add    BYTE PTR [rax+0x52],ah
  41d9fe:	add    DWORD PTR [rax],eax
  41da00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41da01:	push   rdx
  41da02:	add    DWORD PTR [rax],eax
  41da04:	sub    bl,0x1
  41da07:	add    BYTE PTR [rax-0x19fffeae],dh
  41da0d:	push   rbx
  41da0e:	add    DWORD PTR [rax],eax
  41da10:	test   bl,ch
  41da12:	add    DWORD PTR [rax],eax
  41da14:	lock push rbx
  41da16:	add    DWORD PTR [rax],eax
  41da18:	add    edx,DWORD PTR [rbp+0x1]
  41da1b:	add    BYTE PTR [rax+0x100001eb],dl
  41da21:	push   rbp
  41da22:	add    DWORD PTR [rax],eax
  41da24:	sbb    DWORD PTR [rsi+0x1],edx
  41da27:	add    BYTE PTR [rbx+rbp*8+0x56200001],bl
  41da2e:	add    DWORD PTR [rax],eax
  41da30:	rex.R push rsi
  41da32:	add    DWORD PTR [rax],eax
  41da34:	test   al,0xeb
  41da36:	add    DWORD PTR [rax],eax
  41da38:	push   rax
  41da39:	push   rsi
  41da3a:	add    DWORD PTR [rax],eax
  41da3c:	rex.WXB push r15
  41da3e:	add    DWORD PTR [rax],eax
  41da40:	lods   al,BYTE PTR ds:[rsi]
  41da41:	jmp    0x41da44
  41da43:	add    BYTE PTR [rax+0x57],dl
  41da46:	add    DWORD PTR [rax],eax
  41da48:	or     al,0x58
  41da4a:	add    DWORD PTR [rax],eax
  41da4c:	shr    bl,0x1
  41da4f:	add    BYTE PTR [rax],dl
  41da51:	pop    rax
  41da52:	add    DWORD PTR [rax],eax
  41da54:	push   rbx
  41da55:	pop    rax
  41da56:	add    DWORD PTR [rax],eax
  41da58:	shr    bl,1
  41da5a:	add    DWORD PTR [rax],eax
  41da5c:	(bad)  
  41da5d:	pop    rax
  41da5e:	add    DWORD PTR [rax],eax
  41da60:	ret    0x158
  41da63:	add    ah,dl
  41da65:	jmp    0x41da68
  41da67:	add    al,dl
  41da69:	pop    rax
  41da6a:	add    DWORD PTR [rax],eax
  41da6c:	pop    rcx
  41da6d:	pop    rcx
  41da6e:	add    DWORD PTR [rax],eax
  41da70:	fsubr  st,st(3)
  41da72:	add    DWORD PTR [rax],eax
  41da74:	(bad)  
  41da75:	pop    rcx
  41da76:	add    DWORD PTR [rax],eax
  41da78:	retf   
  41da79:	pop    rdx
  41da7a:	add    DWORD PTR [rax],eax
  41da7c:	fsub   st(3),st
  41da7e:	add    DWORD PTR [rax],eax
  41da80:	rcr    BYTE PTR [rdx+0x1],1
  41da83:	add    BYTE PTR [rbx],bh
  41da85:	pop    rbx
  41da86:	add    DWORD PTR [rax],eax
  41da88:	in     al,dx
  41da89:	jmp    0x41da8c
  41da8b:	add    BYTE PTR [rax+0x5b],al
  41da8e:	add    DWORD PTR [rax],eax
  41da90:	(bad)  
  41da91:	pop    rsp
  41da92:	add    DWORD PTR [rax],eax
  41da94:	cld    
  41da95:	jmp    0x41da98
  41da97:	add    BYTE PTR [rax+0x5c],dh
  41da9a:	add    DWORD PTR [rax],eax
  41da9c:	retf   0x15c
  41da9f:	add    BYTE PTR [rsp+rbp*8],dl
  41daa2:	add    DWORD PTR [rax],eax
  41daa4:	rcr    BYTE PTR [rcx+rax*1+0x0],1
  41daa8:	rex.WRXB pop r13
  41daaa:	add    DWORD PTR [rax],eax
  41daac:	and    al,0xec
  41daae:	add    DWORD PTR [rax],eax
  41dab0:	push   rax
  41dab1:	pop    rbp
  41dab2:	add    DWORD PTR [rax],eax
  41dab4:	xchg   esp,eax
  41dab5:	pop    rbp
  41dab6:	add    DWORD PTR [rax],eax
  41dab8:	sub    al,0xec
  41daba:	add    DWORD PTR [rax],eax
  41dabc:	movabs al,ds:0x3800015ee200015d
  41dac5:	in     al,dx
  41dac6:	add    DWORD PTR [rax],eax
  41dac8:	adc    BYTE PTR [rcx+0x1],ah
  41dacb:	add    BYTE PTR [rax],bl
  41dacd:	(bad)  
  41dace:	add    DWORD PTR [rax],eax
  41dad0:	rex.WR in al,dx
  41dad2:	add    DWORD PTR [rax],eax
  41dad4:	and    BYTE PTR [rcx+0x1],ah
  41dad7:	add    BYTE PTR [rbx],ch
  41dad9:	(bad)  
  41dada:	add    DWORD PTR [rax],eax
  41dadc:	push   rax
  41dadd:	in     al,dx
  41dade:	add    DWORD PTR [rax],eax
  41dae0:	xor    BYTE PTR [rcx+0x1],ah
  41dae3:	add    BYTE PTR [rdi],dh
  41dae5:	(bad)  
  41dae6:	add    DWORD PTR [rax],eax
  41dae8:	push   rsp
  41dae9:	in     al,dx
  41daea:	add    DWORD PTR [rax],eax
  41daec:	rex (bad) 
  41daee:	add    DWORD PTR [rax],eax
  41daf0:	rex.WB (bad) 
  41daf2:	add    DWORD PTR [rax],eax
  41daf4:	pop    rax
  41daf5:	in     al,dx
  41daf6:	add    DWORD PTR [rax],eax
  41daf8:	push   rax
  41daf9:	(bad)  
  41dafa:	add    DWORD PTR [rax],eax
  41dafc:	xchg   ebx,eax
  41dafd:	(bad)  
  41dafe:	add    DWORD PTR [rax],eax
  41db00:	pop    rsp
  41db01:	in     al,dx
  41db02:	add    DWORD PTR [rax],eax
  41db04:	movabs al,ds:0x64000161dd000161
  41db0d:	in     al,dx
  41db0e:	add    DWORD PTR [rax],eax
  41db10:	loopne 0x41db73
  41db12:	add    DWORD PTR [rax],eax
  41db14:	(bad)  
  41db15:	(bad)  
  41db16:	add    DWORD PTR [rax],eax
  41db18:	ins    BYTE PTR es:[rdi],dx
  41db19:	in     al,dx
  41db1a:	add    DWORD PTR [rax],eax
  41db1c:	lock (bad) 
  41db1e:	add    DWORD PTR [rax],eax
  41db20:	cli    
  41db21:	(bad)  
  41db22:	add    DWORD PTR [rax],eax
  41db24:	jo     0x41db12
  41db26:	add    DWORD PTR [rax],eax
  41db28:	shl    BYTE PTR [rdx+0x1],1
  41db2b:	add    BYTE PTR [rdi],al
  41db2d:	movsxd eax,DWORD PTR [rcx]
  41db2f:	add    ah,bh
  41db31:	in     eax,0x1
  41db33:	add    BYTE PTR [rax],dl
  41db35:	movsxd eax,DWORD PTR [rcx]
  41db37:	add    cl,cl
  41db39:	imul   eax,DWORD PTR [rcx],0x1e60800
	...

Disassembly of section .xdata:

000000000041e000 <.xdata>:
  41e000:	add    DWORD PTR [rax],eax
  41e002:	add    BYTE PTR [rax],al
  41e004:	add    DWORD PTR [rcx+rax*1],eax
  41e007:	add    BYTE PTR [rdx+rax*2],al
  41e00a:	add    BYTE PTR [rax],al
  41e00c:	add    DWORD PTR [rcx+rax*1],eax
  41e00f:	add    BYTE PTR [rdx+riz*2],al
  41e012:	add    BYTE PTR [rax],al
  41e014:	add    DWORD PTR [rdi],ecx
  41e016:	or     BYTE PTR [rax],al
  41e018:	lgdt   [rbx]
  41e01b:	add    BYTE PTR [rax],cl
  41e01d:	xor    BYTE PTR [rdi],al
  41e01f:	(bad)  
  41e020:	(bad)  
  41e021:	jo     0x41e028
  41e023:	push   rax
  41e024:	add    al,0xc0
  41e026:	add    dl,al
  41e028:	or     DWORD PTR [rcx+rax*1],eax
  41e02b:	add    BYTE PTR [rdx+rax*2],al
  41e02e:	add    BYTE PTR [rax],al
  41e030:	movabs al,ds:0xd4000000010000b6
  41e039:	adc    al,0x0
  41e03b:	add    ah,ch
  41e03d:	adc    al,0x0
  41e03f:	add    BYTE PTR [rax],ah
  41e041:	(bad)  
  41e042:	add    BYTE PTR [rax],al
  41e044:	in     al,dx
  41e045:	adc    al,0x0
  41e047:	add    BYTE PTR [rcx],cl
  41e049:	add    al,0x1
  41e04b:	add    BYTE PTR [rdx+rax*2],al
  41e04e:	add    BYTE PTR [rax],al
  41e050:	movabs al,ds:0x4000000010000b6
  41e059:	adc    eax,0x151c0000
  41e05e:	add    BYTE PTR [rax],al
  41e060:	and    ah,al
  41e062:	add    BYTE PTR [rax],al
  41e064:	sbb    al,0x15
  41e066:	add    BYTE PTR [rax],al
  41e068:	add    DWORD PTR [rax],eax
  41e06a:	add    BYTE PTR [rax],al
  41e06c:	add    DWORD PTR [rcx+rax*1],eax
  41e06f:	add    BYTE PTR [rdx+riz*2],al
  41e072:	add    BYTE PTR [rax],al
  41e074:	add    DWORD PTR [rax],eax
  41e076:	add    BYTE PTR [rax],al
  41e078:	add    DWORD PTR [rax],eax
  41e07a:	add    BYTE PTR [rax],al
  41e07c:	add    DWORD PTR [rcx+rax*1],eax
  41e07f:	add    BYTE PTR [rdx+riz*2],al
  41e082:	add    BYTE PTR [rax],al
  41e084:	add    DWORD PTR [rcx+rax*1],eax
  41e087:	add    BYTE PTR [rdx+riz*2],al
  41e08a:	add    BYTE PTR [rax],al
  41e08c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246e094
  41e092:	add    DWORD PTR [rax],esi
  41e094:	add    DWORD PTR [rdi],eax
  41e096:	add    al,0x0
  41e098:	(bad)  
  41e099:	xor    al,BYTE PTR [rbx]
  41e09b:	xor    BYTE PTR [rdx],al
  41e09d:	(bad)  
  41e09e:	add    DWORD PTR [rax+0x1],esi
  41e0a1:	(bad)  
  41e0a2:	or     BYTE PTR [rax],al
  41e0a4:	(bad)  
  41e0a5:	jb     0x41e0b1
  41e0a7:	xor    BYTE PTR [rcx],cl
  41e0a9:	(bad)  
  41e0aa:	or     BYTE PTR [rax+0x7],dh
  41e0ad:	push   rax
  41e0ae:	(bad)  
  41e0af:	rol    BYTE PTR [rax+rdx*8],0x2
  41e0b3:	loopne 0x41e0b6
  41e0b5:	(bad)  
  41e0b6:	add    eax,DWORD PTR [rax]
  41e0b8:	(bad)  
  41e0b9:	rex.X add sil,BYTE PTR [rax]
  41e0bc:	add    DWORD PTR [rax+0x0],esp
  41e0bf:	add    BYTE PTR [rcx],al
  41e0c1:	adc    BYTE PTR [rcx],cl
  41e0c3:	add    BYTE PTR [rax],dl
  41e0c5:	rex.X or al,0x30
  41e0c8:	or     esp,DWORD PTR [rax+0xa]
  41e0cb:	jo     0x41e0d6
  41e0cd:	push   rax
  41e0ce:	or     al,al
  41e0d0:	(bad)  
  41e0d1:	rol    BYTE PTR [rax+riz*8],1
  41e0d4:	add    dh,al
  41e0d6:	add    BYTE PTR [rax],al
  41e0d8:	add    DWORD PTR [rdx],ecx
  41e0da:	(bad)  
  41e0db:	add    BYTE PTR [rdx],cl
  41e0dd:	push   rdx
  41e0de:	(bad)  
  41e0df:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1e545
  41e0e5:	push   rax
  41e0e6:	add    al,al
  41e0e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246e0f0
  41e0ee:	add    DWORD PTR [rax],esi
  41e0f0:	add    DWORD PTR [rsi],eax
  41e0f2:	add    eax,DWORD PTR [rax]
  41e0f4:	(bad)  
  41e0f5:	rex.X add sil,BYTE PTR [rax]
  41e0f8:	add    DWORD PTR [rax+0x0],esp
  41e0fb:	add    BYTE PTR [rcx],al
  41e0fd:	add    BYTE PTR [rax],al
  41e0ff:	add    BYTE PTR [rcx],al
  41e101:	(bad)  
  41e102:	add    eax,DWORD PTR [rax]
  41e104:	(bad)  
  41e105:	rex.X add sil,BYTE PTR [rax]
  41e108:	add    DWORD PTR [rax+0x0],esp
  41e10b:	add    BYTE PTR [rcx],al
  41e10d:	(bad)  
  41e10e:	add    al,0x0
  41e110:	(bad)  
  41e111:	xor    al,BYTE PTR [rbx]
  41e113:	xor    BYTE PTR [rdx],al
  41e115:	(bad)  
  41e116:	add    DWORD PTR [rax+0x1],esi
  41e119:	add    eax,0x32050002
  41e11e:	add    DWORD PTR [rax],esi
  41e120:	add    DWORD PTR [rdx],ecx
  41e122:	(bad)  
  41e123:	add    BYTE PTR [rdx],cl
  41e125:	xor    al,BYTE PTR [rsi]
  41e127:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1e58d
  41e12d:	push   rax
  41e12e:	add    al,al
  41e130:	add    DWORD PTR [rsi],ecx
  41e132:	or     BYTE PTR [rax],al
  41e134:	(bad)  
  41e135:	xor    cl,BYTE PTR [rdx]
  41e137:	xor    BYTE PTR [rcx],cl
  41e139:	(bad)  
  41e13a:	or     BYTE PTR [rax+0x7],dh
  41e13d:	push   rax
  41e13e:	(bad)  
  41e13f:	rol    BYTE PTR [rax+rdx*8],0x2
  41e143:	loopne 0x41e146
  41e145:	or     BYTE PTR [rip+0x4420800],al        # 0x483e94b
  41e14b:	xor    BYTE PTR [rbx],al
  41e14d:	(bad)  
  41e14e:	add    dh,BYTE PTR [rax+0x1]
  41e151:	push   rax
  41e152:	add    BYTE PTR [rax],al
  41e154:	add    DWORD PTR [rsi],eax
  41e156:	add    eax,DWORD PTR [rax]
  41e158:	(bad)  
  41e159:	rex.X add sil,BYTE PTR [rax]
  41e15c:	add    DWORD PTR [rax+0x0],esp
  41e15f:	add    BYTE PTR [rcx],al
  41e161:	add    BYTE PTR [rax],al
  41e163:	add    BYTE PTR [rcx],al
  41e165:	add    eax,0x32050002
  41e16a:	add    DWORD PTR [rax],esi
  41e16c:	add    DWORD PTR [rsi],eax
  41e16e:	add    eax,DWORD PTR [rax]
  41e170:	(bad)  
  41e171:	rex.X add sil,BYTE PTR [rax]
  41e174:	add    DWORD PTR [rax+0x0],esp
  41e177:	add    BYTE PTR [rcx],al
  41e179:	or     BYTE PTR [rip+0x4420800],al        # 0x483e97f
  41e17f:	xor    BYTE PTR [rbx],al
  41e181:	(bad)  
  41e182:	add    dh,BYTE PTR [rax+0x1]
  41e185:	push   rax
  41e186:	add    BYTE PTR [rax],al
  41e188:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246e190
  41e18e:	add    DWORD PTR [rax],esi
  41e190:	add    DWORD PTR [rsi],eax
  41e192:	add    eax,DWORD PTR [rax]
  41e194:	(bad)  
  41e195:	rex.X add sil,BYTE PTR [rax]
  41e198:	add    DWORD PTR [rax+0x0],esp
  41e19b:	add    BYTE PTR [rcx],al
  41e19d:	add    eax,0x32050002
  41e1a2:	add    DWORD PTR [rax],esi
  41e1a4:	add    DWORD PTR [rsi],ecx
  41e1a6:	or     BYTE PTR [rax],al
  41e1a8:	(bad)  
  41e1a9:	jb     0x41e1b5
  41e1ab:	xor    BYTE PTR [rcx],cl
  41e1ad:	(bad)  
  41e1ae:	or     BYTE PTR [rax+0x7],dh
  41e1b1:	push   rax
  41e1b2:	(bad)  
  41e1b3:	rol    BYTE PTR [rax+rdx*8],0x2
  41e1b7:	loopne 0x41e1ba
  41e1b9:	or     al,0x7
  41e1bb:	add    BYTE PTR [rdx+rax*4],cl
  41e1be:	or     BYTE PTR [rax],dh
  41e1c0:	(bad)  
  41e1c1:	(bad)  
  41e1c2:	(bad)  
  41e1c3:	jo     0x41e1ca
  41e1c5:	push   rax
  41e1c6:	add    al,0xc0
  41e1c8:	add    dl,al
  41e1ca:	add    BYTE PTR [rax],al
  41e1cc:	add    DWORD PTR [rdi+rax*1],ecx
  41e1cf:	add    BYTE PTR [rdx+riz*2],cl
  41e1d2:	or     BYTE PTR [rax],dh
  41e1d4:	(bad)  
  41e1d5:	(bad)  
  41e1d6:	(bad)  
  41e1d7:	jo     0x41e1de
  41e1d9:	push   rax
  41e1da:	add    al,0xc0
  41e1dc:	add    dl,al
  41e1de:	add    BYTE PTR [rax],al
  41e1e0:	add    DWORD PTR [rsi+rax*1],ecx
  41e1e3:	add    BYTE PTR [rax+rbp*2],cl
  41e1e6:	add    al,0x0
  41e1e8:	(bad)  
  41e1e9:	xchg   edx,eax
  41e1ea:	add    esi,DWORD PTR [rax]
  41e1ec:	add    ah,BYTE PTR [rax+0x1]
  41e1ef:	jo     0x41e1f2
  41e1f1:	adc    ecx,DWORD PTR [rdx]
  41e1f3:	add    BYTE PTR [rbx],dl
  41e1f5:	add    DWORD PTR [rdi],edx
  41e1f7:	add    BYTE PTR [rax+rsi*1],cl
  41e1fa:	or     esp,DWORD PTR [rax+0xa]
  41e1fd:	jo     0x41e208
  41e1ff:	push   rax
  41e200:	or     al,al
  41e202:	(bad)  
  41e203:	rol    BYTE PTR [rax+riz*8],1
  41e206:	add    dh,al
  41e208:	add    DWORD PTR [rax],edx
  41e20a:	or     DWORD PTR [rax],eax
  41e20c:	adc    dl,ah
  41e20e:	or     al,0x30
  41e210:	or     esp,DWORD PTR [rax+0xa]
  41e213:	jo     0x41e21e
  41e215:	push   rax
  41e216:	or     al,al
  41e218:	(bad)  
  41e219:	rol    BYTE PTR [rax+riz*8],1
  41e21c:	add    dh,al
  41e21e:	add    BYTE PTR [rax],al
  41e220:	add    DWORD PTR [rdi+rax*1],ecx
  41e223:	add    BYTE PTR [rdx+rax*4],cl
  41e226:	or     BYTE PTR [rax],dh
  41e228:	(bad)  
  41e229:	(bad)  
  41e22a:	(bad)  
  41e22b:	jo     0x41e232
  41e22d:	push   rax
  41e22e:	add    al,0xc0
  41e230:	add    dl,al
  41e232:	add    BYTE PTR [rax],al
  41e234:	add    DWORD PTR [rsi],eax
  41e236:	add    eax,DWORD PTR [rax]
  41e238:	(bad)  
  41e239:	rex.X add sil,BYTE PTR [rax]
  41e23c:	add    DWORD PTR [rax+0x0],esp
  41e23f:	add    BYTE PTR [rcx],al
  41e241:	or     al,BYTE PTR [rsi]
  41e243:	add    BYTE PTR [rdx],cl
  41e245:	xor    al,BYTE PTR [rsi]
  41e247:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1e6ad
  41e24d:	push   rax
  41e24e:	add    al,al
  41e250:	add    DWORD PTR [rcx+rax*1],eax
  41e253:	add    BYTE PTR [rdx+rax*2],al
  41e256:	add    BYTE PTR [rax],al
  41e258:	add    DWORD PTR [rbx],edx
  41e25a:	or     al,BYTE PTR [rax]
  41e25c:	adc    eax,DWORD PTR [rcx]
  41e25e:	(bad)  
  41e25f:	add    BYTE PTR [rax+rsi*1],cl
  41e262:	or     esp,DWORD PTR [rax+0xa]
  41e265:	jo     0x41e270
  41e267:	push   rax
  41e268:	or     al,al
  41e26a:	(bad)  
  41e26b:	rol    BYTE PTR [rax+riz*8],1
  41e26e:	add    dh,al
  41e270:	add    DWORD PTR [rax],eax
  41e272:	add    BYTE PTR [rax],al
  41e274:	add    DWORD PTR [rsi],eax
  41e276:	add    eax,DWORD PTR [rax]
  41e278:	(bad)  
  41e279:	rex.X add sil,BYTE PTR [rax]
  41e27c:	add    DWORD PTR [rax+0x0],esp
  41e27f:	add    BYTE PTR [rcx],al
  41e281:	(bad)  
  41e282:	add    al,0x0
  41e284:	(bad)  
  41e285:	push   rdx
  41e286:	add    esi,DWORD PTR [rax]
  41e288:	add    ah,BYTE PTR [rax+0x1]
  41e28b:	jo     0x41e28e
  41e28d:	add    eax,0x32050002
  41e292:	add    DWORD PTR [rax],esi
  41e294:	add    DWORD PTR [rax],ecx
  41e296:	add    eax,0x4420800
  41e29b:	xor    BYTE PTR [rbx],al
  41e29d:	(bad)  
  41e29e:	add    dh,BYTE PTR [rax+0x1]
  41e2a1:	push   rax
  41e2a2:	add    BYTE PTR [rax],al
  41e2a4:	add    DWORD PTR [rax],ecx
  41e2a6:	add    eax,0x4420800
  41e2ab:	xor    BYTE PTR [rbx],al
  41e2ad:	(bad)  
  41e2ae:	add    dh,BYTE PTR [rax+0x1]
  41e2b1:	push   rax
  41e2b2:	add    BYTE PTR [rax],al
  41e2b4:	add    DWORD PTR [rax],eax
  41e2b6:	add    BYTE PTR [rax],al
  41e2b8:	add    DWORD PTR [rsi],eax
  41e2ba:	add    eax,DWORD PTR [rax]
  41e2bc:	(bad)  
  41e2bd:	rex.X add sil,BYTE PTR [rax]
  41e2c0:	add    DWORD PTR [rax+0x0],esp
  41e2c3:	add    BYTE PTR [rcx],al
  41e2c5:	(bad)  
  41e2c6:	add    eax,DWORD PTR [rax]
  41e2c8:	(bad)  
  41e2c9:	rex.X add sil,BYTE PTR [rax]
  41e2cc:	add    DWORD PTR [rax+0x0],esp
  41e2cf:	add    BYTE PTR [rcx],al
  41e2d1:	(bad)  
  41e2d2:	add    eax,DWORD PTR [rax]
  41e2d4:	(bad)  
  41e2d5:	rex.X add sil,BYTE PTR [rax]
  41e2d8:	add    DWORD PTR [rax+0x0],esp
  41e2db:	add    BYTE PTR [rcx],al
  41e2dd:	(bad)  
  41e2de:	add    eax,DWORD PTR [rax]
  41e2e0:	(bad)  
  41e2e1:	rex.X add sil,BYTE PTR [rax]
  41e2e4:	add    DWORD PTR [rax+0x0],esp
  41e2e7:	add    BYTE PTR [rcx],al
  41e2e9:	invd   
  41e2eb:	add    BYTE PTR [rdi],cl
  41e2ed:	add    edi,ecx
  41e2ef:	add    BYTE PTR [rax],cl
  41e2f1:	xor    BYTE PTR [rdi],al
  41e2f3:	(bad)  
  41e2f4:	(bad)  
  41e2f5:	jo     0x41e2fc
  41e2f7:	push   rax
  41e2f8:	add    al,0xc0
  41e2fa:	add    dl,al
  41e2fc:	add    DWORD PTR [rsi],eax
  41e2fe:	add    eax,DWORD PTR [rax]
  41e300:	(bad)  
  41e301:	rex.X add sil,BYTE PTR [rax]
  41e304:	add    DWORD PTR [rax+0x0],esp
  41e307:	add    BYTE PTR [rcx],al
  41e309:	or     BYTE PTR [rip+0x4420800],al        # 0x483eb0f
  41e30f:	xor    BYTE PTR [rbx],al
  41e311:	(bad)  
  41e312:	add    dh,BYTE PTR [rax+0x1]
  41e315:	push   rax
  41e316:	add    BYTE PTR [rax],al
  41e318:	add    DWORD PTR [rdi],eax
  41e31a:	add    al,0x0
  41e31c:	(bad)  
  41e31d:	xor    al,BYTE PTR [rbx]
  41e31f:	xor    BYTE PTR [rdx],al
  41e321:	(bad)  
  41e322:	add    DWORD PTR [rax+0x1],esi
  41e325:	add    eax,0x52050002
  41e32a:	add    DWORD PTR [rax],esi
  41e32c:	add    DWORD PTR [rip+0x6815000b],edx        # 0x6856e33d
  41e332:	add    al,0x0
  41e334:	adc    BYTE PTR [rdx+0x600b300c],ah
  41e33a:	or     dh,BYTE PTR [rax+0x9]
  41e33d:	push   rax
  41e33e:	or     al,al
  41e340:	(bad)  
  41e341:	rol    BYTE PTR [rax+riz*8],1
  41e344:	add    dh,al
  41e346:	add    BYTE PTR [rax],al
  41e348:	add    DWORD PTR [rax],ecx
  41e34a:	add    eax,DWORD PTR [rax]
  41e34c:	or     BYTE PTR [rcx],al
  41e34e:	rol    BYTE PTR [rax],1
  41e350:	add    DWORD PTR [rax],esi
  41e352:	add    BYTE PTR [rax],al
  41e354:	add    DWORD PTR [rdx],ecx
  41e356:	(bad)  
  41e357:	add    BYTE PTR [rdx],cl
  41e359:	xor    al,BYTE PTR [rsi]
  41e35b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1e7c1
  41e361:	push   rax
  41e362:	add    al,al
  41e364:	add    DWORD PTR [rdx],edx
  41e366:	(bad)  
  41e367:	add    BYTE PTR [rdx],dl
  41e369:	push   0x10a0067
  41e36e:	rol    BYTE PTR [rax],1
  41e370:	add    esi,DWORD PTR [rax]
  41e372:	add    ah,BYTE PTR [rax+0x1]
  41e375:	jo     0x41e377
  41e377:	add    BYTE PTR [rcx],al
  41e379:	add    BYTE PTR [rax],al
  41e37b:	add    BYTE PTR [rcx],al
  41e37d:	(bad)  
  41e37e:	or     DWORD PTR [rax],eax
  41e380:	(bad)  
  41e381:	mov    BYTE PTR [rip+0x4781000],al        # 0x4b9f387
  41e387:	add    BYTE PTR [rbx],cl
  41e389:	push   0xffffffffc2060003
  41e38e:	add    dh,BYTE PTR [rax]
  41e390:	add    DWORD PTR [rax+0x0],esp
  41e393:	add    BYTE PTR [rcx],al
  41e395:	(bad)  
  41e396:	add    eax,DWORD PTR [rax]
  41e398:	(bad)  
  41e399:	(bad)  
  41e39b:	xor    BYTE PTR [rcx],al
  41e39d:	(bad)  
  41e39e:	add    BYTE PTR [rax],al
  41e3a0:	add    DWORD PTR [rax],eax
  41e3a2:	add    BYTE PTR [rax],al
  41e3a4:	add    DWORD PTR [rip+0x68150009],edx        # 0x6856e3b3
  41e3aa:	add    BYTE PTR [eip+0x600d001],cl        # 0x642b3b2
  41e3b1:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1e817
  41e3b7:	push   rax
  41e3b8:	add    al,al
  41e3ba:	add    BYTE PTR [rax],al
  41e3bc:	add    DWORD PTR [rax],ecx
  41e3be:	add    eax,0x4420800
  41e3c3:	xor    BYTE PTR [rbx],al
  41e3c5:	(bad)  
  41e3c6:	add    dh,BYTE PTR [rax+0x1]
  41e3c9:	push   rax
  41e3ca:	add    BYTE PTR [rax],al
  41e3cc:	add    DWORD PTR [rdi+rax*1],ecx
  41e3cf:	add    BYTE PTR [rdx+riz*2],cl
  41e3d2:	or     BYTE PTR [rax],dh
  41e3d4:	(bad)  
  41e3d5:	(bad)  
  41e3d6:	(bad)  
  41e3d7:	jo     0x41e3de
  41e3d9:	push   rax
  41e3da:	add    al,0xc0
  41e3dc:	add    dl,al
  41e3de:	add    BYTE PTR [rax],al
  41e3e0:	add    DWORD PTR [rsi],eax
  41e3e2:	add    eax,DWORD PTR [rax]
  41e3e4:	(bad)  
  41e3e5:	rex.X add sil,BYTE PTR [rax]
  41e3e8:	add    DWORD PTR [rax+0x0],esp
  41e3eb:	add    BYTE PTR [rcx],al
  41e3ed:	or     al,BYTE PTR [rip+0xffffffffce010a00]        # 0xffffffffce42edf3
  41e3f3:	add    BYTE PTR [rbx],al
  41e3f5:	xor    BYTE PTR [rdx],al
  41e3f7:	(bad)  
  41e3f8:	add    DWORD PTR [rax+0x0],esi
  41e3fb:	add    BYTE PTR [rcx],al
  41e3fd:	or     BYTE PTR [rip+0x4420800],al        # 0x483ec03
  41e403:	xor    BYTE PTR [rbx],al
  41e405:	(bad)  
  41e406:	add    dh,BYTE PTR [rax+0x1]
  41e409:	push   rax
  41e40a:	add    BYTE PTR [rax],al
  41e40c:	add    DWORD PTR [rcx+rax*1],eax
  41e40f:	add    BYTE PTR [rdx+rax*2],al
  41e412:	add    BYTE PTR [rax],al
  41e414:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246e41c
  41e41a:	add    DWORD PTR [rax],esi
  41e41c:	add    DWORD PTR [rsi],eax
  41e41e:	add    eax,DWORD PTR [rax]
  41e420:	(bad)  
  41e421:	(bad)  
  41e422:	add    ah,BYTE PTR [rax+0x1]
  41e425:	jo     0x41e427
  41e427:	add    BYTE PTR [rcx],al
  41e429:	add    al,0x1
  41e42b:	add    BYTE PTR [rdx+rax*2],al
  41e42e:	add    BYTE PTR [rax],al
  41e430:	add    DWORD PTR [rbx],ecx
  41e432:	(bad)  
  41e433:	add    BYTE PTR [rbx],cl
  41e435:	add    DWORD PTR [rbx],edx
  41e437:	add    BYTE PTR [rax+rsi*1],al
  41e43a:	add    esp,DWORD PTR [rax+0x2]
  41e43d:	jo     0x41e440
  41e43f:	push   rax
  41e440:	add    DWORD PTR [rsi+rax*1],ecx
  41e443:	add    BYTE PTR [rax+rbp*2],cl
  41e446:	add    eax,DWORD PTR [rax]
  41e448:	(bad)  
  41e449:	jb     0x41e44e
  41e44b:	xor    BYTE PTR [rdx],al
  41e44d:	(bad)  
  41e44e:	add    DWORD PTR [rax+0x1],esi
  41e451:	(bad)  
  41e452:	or     al,BYTE PTR [rax]
  41e454:	(bad)  
  41e455:	mov    BYTE PTR [rip+0x4781100],al        # 0x4b9f55b
  41e45b:	add    BYTE PTR [rax+rbp*2],cl
  41e45e:	add    eax,DWORD PTR [rax]
  41e460:	(bad)  
  41e461:	mov    dl,0x3
  41e463:	xor    BYTE PTR [rdx],al
  41e465:	(bad)  
  41e466:	add    DWORD PTR [rax+0x1],esi
  41e469:	invd   
  41e46b:	add    BYTE PTR [rdi],cl
  41e46d:	add    edi,ecx
  41e46f:	add    BYTE PTR [rax],cl
  41e471:	xor    BYTE PTR [rdi],al
  41e473:	(bad)  
  41e474:	(bad)  
  41e475:	jo     0x41e47c
  41e477:	push   rax
  41e478:	add    al,0xc0
  41e47a:	add    dl,al
  41e47c:	add    DWORD PTR [rdx],edx
  41e47e:	(bad)  
  41e47f:	add    BYTE PTR [rdx],dl
  41e481:	push   0x10a00cc
  41e486:	(bad)  
  41e487:	add    DWORD PTR [rbx],eax
  41e489:	xor    BYTE PTR [rdx],al
  41e48b:	(bad)  
  41e48c:	add    DWORD PTR [rax+0x0],esi
  41e48f:	add    BYTE PTR [rcx],al
  41e491:	or     eax,0x10d0007
  41e496:	(bad)  
  41e497:	add    BYTE PTR [rsi],al
  41e499:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1e8ff
  41e49f:	push   rax
  41e4a0:	add    al,al
  41e4a2:	add    BYTE PTR [rax],al
  41e4a4:	add    DWORD PTR [rax],eax
  41e4a6:	add    BYTE PTR [rax],al
  41e4a8:	add    DWORD PTR [rbx],edx
  41e4aa:	or     al,BYTE PTR [rax]
  41e4ac:	adc    eax,DWORD PTR [rcx]
  41e4ae:	adc    DWORD PTR [rax],eax
  41e4b0:	or     al,0x30
  41e4b2:	or     esp,DWORD PTR [rax+0xa]
  41e4b5:	jo     0x41e4c0
  41e4b7:	push   rax
  41e4b8:	or     al,al
  41e4ba:	(bad)  
  41e4bb:	rol    BYTE PTR [rax+riz*8],1
  41e4be:	add    dh,al
  41e4c0:	add    DWORD PTR [rcx+rax*1],eax
  41e4c3:	add    BYTE PTR [rdx+riz*2],al
  41e4c6:	add    BYTE PTR [rax],al
  41e4c8:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246e4d0
  41e4ce:	add    DWORD PTR [rax],esi
  41e4d0:	add    DWORD PTR [rsi],eax
  41e4d2:	add    eax,DWORD PTR [rax]
  41e4d4:	(bad)  
  41e4d5:	rex.X add sil,BYTE PTR [rax]
  41e4d8:	add    DWORD PTR [rax+0x0],esp
  41e4db:	add    BYTE PTR [rcx],al
  41e4dd:	or     BYTE PTR [rip+0x4620800],al        # 0x4a3ece3
  41e4e3:	xor    BYTE PTR [rbx],al
  41e4e5:	(bad)  
  41e4e6:	add    dh,BYTE PTR [rax+0x1]
  41e4e9:	push   rax
  41e4ea:	add    BYTE PTR [rax],al
  41e4ec:	add    DWORD PTR [rdi+rax*1],ecx
  41e4ef:	add    BYTE PTR [rdx+rax*2],cl
  41e4f2:	or     BYTE PTR [rax],dh
  41e4f4:	(bad)  
  41e4f5:	(bad)  
  41e4f6:	(bad)  
  41e4f7:	jo     0x41e4fe
  41e4f9:	push   rax
  41e4fa:	add    al,0xc0
  41e4fc:	add    dl,al
  41e4fe:	add    BYTE PTR [rax],al
  41e500:	add    DWORD PTR [rcx+rax*1],eax
  41e503:	add    BYTE PTR [rdx+rax*4],al
  41e506:	add    BYTE PTR [rax],al
  41e508:	add    DWORD PTR [rax],edx
  41e50a:	or     DWORD PTR [rax],eax
  41e50c:	adc    BYTE PTR [rdx+0x600b300c],ah
  41e512:	or     dh,BYTE PTR [rax+0x9]
  41e515:	push   rax
  41e516:	or     al,al
  41e518:	(bad)  
  41e519:	rol    BYTE PTR [rax+riz*8],1
  41e51c:	add    dh,al
  41e51e:	add    BYTE PTR [rax],al
  41e520:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246e528
  41e526:	add    DWORD PTR [rax],esi
  41e528:	add    DWORD PTR [rax],ecx
  41e52a:	add    eax,0x4620800
  41e52f:	xor    BYTE PTR [rbx],al
  41e531:	(bad)  
  41e532:	add    dh,BYTE PTR [rax+0x1]
  41e535:	push   rax
  41e536:	add    BYTE PTR [rax],al
  41e538:	add    DWORD PTR [rcx],ebx
  41e53a:	or     al,BYTE PTR [rax]
  41e53c:	sbb    DWORD PTR [rcx],eax
  41e53e:	movsxd eax,DWORD PTR [rdx]
  41e540:	adc    DWORD PTR [rax],esi
  41e542:	adc    BYTE PTR [rax+0xf],ah
  41e545:	jo     0x41e555
  41e547:	push   rax
  41e548:	or     eax,0x4d00bc0
  41e54d:	loopne 0x41e551
  41e54f:	lock add DWORD PTR [rsi],eax
  41e552:	add    eax,DWORD PTR [rax]
  41e554:	(bad)  
  41e555:	(bad)  
  41e557:	xor    BYTE PTR [rcx],al
  41e559:	(bad)  
  41e55a:	add    BYTE PTR [rax],al
  41e55c:	add    DWORD PTR [rdi],eax
  41e55e:	add    al,0x0
  41e560:	(bad)  
  41e561:	xor    al,BYTE PTR [rbx]
  41e563:	xor    BYTE PTR [rdx],al
  41e565:	(bad)  
  41e566:	add    DWORD PTR [rax+0x1],esi
  41e569:	(bad)  
  41e56a:	or     DWORD PTR [rax],eax
  41e56c:	(bad)  
  41e56d:	add    DWORD PTR [rdx+0x2],esp
  41e570:	wrmsr  
  41e572:	(bad)  
  41e573:	(bad)  
  41e574:	or     eax,0xb500c70
  41e579:	rol    BYTE PTR [rax+rdx*8],0x2
  41e57d:	loopne 0x41e57f
  41e57f:	add    BYTE PTR [rcx],al
  41e581:	(bad)  
  41e582:	sbb    al,0x0
  41e584:	(bad)  
  41e585:	call   0xffffffffd89ae660
  41e58a:	(bad)  
  41e58b:	add    BYTE PTR [rax-0x38],dl
  41e58e:	(bad)  
  41e58f:	add    BYTE PTR [rdi-0x48],al
  41e592:	rol    DWORD PTR [rax],cl
  41e594:	ds test al,0xd2
  41e597:	add    BYTE PTR [rip+0x2c00d198],dh        # 0x2c42b735
  41e59d:	mov    al,dl
  41e59f:	add    BYTE PTR [rbx],ah
  41e5a1:	js     0x41e572
  41e5a3:	add    BYTE PTR [rbx],bl
  41e5a5:	push   0x11300ce
  41e5aa:	scas   eax,DWORD PTR es:[rdi]
  41e5ab:	add    DWORD PTR [rax+rsi*1],ecx
  41e5ae:	or     esp,DWORD PTR [rax+0xa]
  41e5b1:	jo     0x41e5bc
  41e5b3:	push   rax
  41e5b4:	or     al,al
  41e5b6:	(bad)  
  41e5b7:	rol    BYTE PTR [rax+riz*8],1
  41e5ba:	add    dh,al
  41e5bc:	add    DWORD PTR [rdx],ecx
  41e5be:	add    eax,0x8e010a00
  41e5c3:	add    BYTE PTR [rbx],al
  41e5c5:	xor    BYTE PTR [rdx],al
  41e5c7:	(bad)  
  41e5c8:	add    DWORD PTR [rax+0x0],esi
  41e5cb:	add    BYTE PTR [rcx],al
  41e5cd:	add    al,0x1
  41e5cf:	add    BYTE PTR [rdx+rax*2],al
  41e5d2:	add    BYTE PTR [rax],al
  41e5d4:	add    DWORD PTR [rdi],eax
  41e5d6:	add    al,0x0
  41e5d8:	(bad)  
  41e5d9:	xor    al,BYTE PTR [rbx]
  41e5db:	xor    BYTE PTR [rdx],al
  41e5dd:	(bad)  
  41e5de:	add    DWORD PTR [rax+0x1],esi
  41e5e1:	(bad)  
  41e5e2:	add    al,0x0
  41e5e4:	(bad)  
  41e5e5:	xor    al,BYTE PTR [rbx]
  41e5e7:	xor    BYTE PTR [rdx],al
  41e5e9:	(bad)  
  41e5ea:	add    DWORD PTR [rax+0x1],esi
  41e5ed:	or     BYTE PTR [rip+0x4e20800],al        # 0x523edf3
  41e5f3:	xor    BYTE PTR [rbx],al
  41e5f5:	(bad)  
  41e5f6:	add    dh,BYTE PTR [rax+0x1]
  41e5f9:	push   rax
  41e5fa:	add    BYTE PTR [rax],al
  41e5fc:	add    DWORD PTR [rsi],eax
  41e5fe:	add    eax,DWORD PTR [rax]
  41e600:	(bad)  
  41e601:	rex.X add sil,BYTE PTR [rax]
  41e604:	add    DWORD PTR [rax+0x0],esp
  41e607:	add    BYTE PTR [rcx],al
  41e609:	adc    BYTE PTR [rcx],cl
  41e60b:	add    BYTE PTR [rax],dl
  41e60d:	loop   0x41e61b
  41e60f:	xor    BYTE PTR [rbx],cl
  41e611:	(bad)  
  41e612:	or     dh,BYTE PTR [rax+0x9]
  41e615:	push   rax
  41e616:	or     al,al
  41e618:	(bad)  
  41e619:	rol    BYTE PTR [rax+riz*8],1
  41e61c:	add    dh,al
  41e61e:	add    BYTE PTR [rax],al
  41e620:	add    DWORD PTR [rcx+rax*1],eax
  41e623:	add    BYTE PTR [rdx+rax*2],al
  41e626:	add    BYTE PTR [rax],al
  41e628:	add    DWORD PTR [rsi],eax
  41e62a:	add    eax,DWORD PTR [rax]
  41e62c:	(bad)  
  41e62d:	rex.X add sil,BYTE PTR [rax]
  41e630:	add    DWORD PTR [rax+0x0],esp
  41e633:	add    BYTE PTR [rcx],al
  41e635:	or     al,BYTE PTR [rax+rax*1]
  41e638:	or     ch,BYTE PTR [rax+0x2]
  41e63b:	add    BYTE PTR [rip+0x1300152],al        # 0x171e793
  41e641:	or     al,BYTE PTR [rip+0xffffffffce010a00]        # 0xffffffffce42f047
  41e647:	add    BYTE PTR [rbx],al
  41e649:	xor    BYTE PTR [rdx],al
  41e64b:	(bad)  
  41e64c:	add    DWORD PTR [rax+0x0],esi
  41e64f:	add    BYTE PTR [rcx],al
  41e651:	adc    BYTE PTR [rcx],cl
  41e653:	add    BYTE PTR [rax],dl
  41e655:	(bad)  
  41e656:	or     al,0x30
  41e658:	or     esp,DWORD PTR [rax+0xa]
  41e65b:	jo     0x41e666
  41e65d:	push   rax
  41e65e:	or     al,al
  41e660:	(bad)  
  41e661:	rol    BYTE PTR [rax+riz*8],1
  41e664:	add    dh,al
  41e666:	add    BYTE PTR [rax],al
  41e668:	add    DWORD PTR [rdi+0x16],eax
  41e66b:	add    BYTE PTR [rdi-0x48],al
  41e66e:	mov    BYTE PTR [rax],al
  41e670:	ds test al,0x87
  41e673:	add    BYTE PTR [rip+0x2c008698],dh        # 0x2c426d11
  41e679:	mov    BYTE PTR [rbp-0x7b87dd00],al
  41e67f:	add    BYTE PTR [rbx],bl
  41e681:	push   0x1130083
  41e686:	adc    eax,DWORD PTR [rcx]
  41e688:	or     al,0x30
  41e68a:	or     esp,DWORD PTR [rax+0xa]
  41e68d:	jo     0x41e698
  41e68f:	push   rax
  41e690:	or     al,al
  41e692:	(bad)  
  41e693:	rol    BYTE PTR [rax+riz*8],1
  41e696:	add    dh,al
  41e698:	add    DWORD PTR [rax],eax
  41e69a:	add    BYTE PTR [rax],al
  41e69c:	add    DWORD PTR [rsi],eax
  41e69e:	add    eax,DWORD PTR [rax]
  41e6a0:	(bad)  
  41e6a1:	rex.X add sil,BYTE PTR [rax]
  41e6a4:	add    DWORD PTR [rax+0x0],esp
  41e6a7:	add    BYTE PTR [rcx],al
  41e6a9:	or     al,0x7
  41e6ab:	add    BYTE PTR [rdx+riz*4],cl
  41e6ae:	or     BYTE PTR [rax],dh
  41e6b0:	(bad)  
  41e6b1:	(bad)  
  41e6b2:	(bad)  
  41e6b3:	jo     0x41e6ba
  41e6b5:	push   rax
  41e6b6:	add    al,0xc0
  41e6b8:	add    dl,al
  41e6ba:	add    BYTE PTR [rax],al
  41e6bc:	add    DWORD PTR [rax],ecx
  41e6be:	(bad)  
  41e6bf:	add    BYTE PTR [rax],cl
  41e6c1:	xor    BYTE PTR [rdi],al
  41e6c3:	(bad)  
  41e6c4:	(bad)  
  41e6c5:	jo     0x41e6cc
  41e6c7:	push   rax
  41e6c8:	add    al,0xc0
  41e6ca:	add    dl,al
  41e6cc:	add    DWORD PTR [rax],edx
  41e6ce:	or     DWORD PTR [rax],eax
  41e6d0:	adc    dl,al
  41e6d2:	or     al,0x30
  41e6d4:	or     esp,DWORD PTR [rax+0xa]
  41e6d7:	jo     0x41e6e2
  41e6d9:	push   rax
  41e6da:	or     al,al
  41e6dc:	(bad)  
  41e6dd:	rol    BYTE PTR [rax+riz*8],1
  41e6e0:	add    dh,al
  41e6e2:	add    BYTE PTR [rax],al
  41e6e4:	add    DWORD PTR [rcx+rax*1],eax
  41e6e7:	add    BYTE PTR [rdx+riz*2],al
  41e6ea:	add    BYTE PTR [rax],al
  41e6ec:	add    DWORD PTR [rcx+rax*1],eax
  41e6ef:	add    BYTE PTR [rdx+riz*2],al
  41e6f2:	add    BYTE PTR [rax],al
  41e6f4:	add    DWORD PTR [rcx+rax*1],eax
  41e6f7:	add    BYTE PTR [rdx+riz*2],al
  41e6fa:	add    BYTE PTR [rax],al
  41e6fc:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246e704
  41e702:	add    DWORD PTR [rax],esi
  41e704:	add    DWORD PTR [rcx+rax*1],eax
  41e707:	add    BYTE PTR [rdx+rax*2],al
  41e70a:	add    BYTE PTR [rax],al
  41e70c:	add    DWORD PTR [rcx+rax*1],eax
  41e70f:	add    BYTE PTR [rdx+rax*2],al
  41e712:	add    BYTE PTR [rax],al
  41e714:	add    DWORD PTR [rsi],eax
  41e716:	add    eax,DWORD PTR [rax]
  41e718:	(bad)  
  41e719:	rex.X add sil,BYTE PTR [rax]
  41e71c:	add    DWORD PTR [rax+0x0],esp
  41e71f:	add    BYTE PTR [rcx],al
  41e721:	add    BYTE PTR [rax],al
  41e723:	add    BYTE PTR [rcx],al
  41e725:	add    BYTE PTR [rax],al
  41e727:	add    BYTE PTR [rcx],al
  41e729:	add    BYTE PTR [rax],al
  41e72b:	add    BYTE PTR [rcx],al
  41e72d:	or     al,BYTE PTR [rsi]
  41e72f:	add    BYTE PTR [rdx],cl
  41e731:	jb     0x41e739
  41e733:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1eb99
  41e739:	push   rax
  41e73a:	add    al,al
  41e73c:	add    DWORD PTR [rdx],ecx
  41e73e:	add    eax,0x6d20a05
  41e743:	add    eax,DWORD PTR [rbx]
  41e745:	xor    BYTE PTR [rdx],al
  41e747:	(bad)  
  41e748:	add    DWORD PTR [rax+0x0],edx
  41e74b:	add    BYTE PTR [rcx],al
  41e74d:	add    al,0x1
  41e74f:	add    BYTE PTR [rdx+rax*2],al
  41e752:	add    BYTE PTR [rax],al
  41e754:	add    DWORD PTR [rsi],eax
  41e756:	add    eax,DWORD PTR [rax]
  41e758:	(bad)  
  41e759:	rex.X add sil,BYTE PTR [rax]
  41e75c:	add    DWORD PTR [rax+0x0],esp
  41e75f:	add    BYTE PTR [rcx],al
  41e761:	add    BYTE PTR [rax],al
  41e763:	add    BYTE PTR [rcx],al
  41e765:	add    al,0x1
  41e767:	add    BYTE PTR [rdx+riz*4],al
  41e76a:	add    BYTE PTR [rax],al
  41e76c:	add    DWORD PTR [rax],eax
  41e76e:	add    BYTE PTR [rax],al
  41e770:	add    DWORD PTR [rsi],edx
  41e772:	or     DWORD PTR [rax],eax
  41e774:	(bad)  
  41e775:	mov    BYTE PTR [rsi],al
  41e777:	add    BYTE PTR [rax],dl
  41e779:	js     0x41e780
  41e77b:	add    BYTE PTR [rbx],cl
  41e77d:	push   0xffffffffe2060004
  41e782:	add    dh,BYTE PTR [rax]
  41e784:	add    DWORD PTR [rax+0x0],esp
  41e787:	add    BYTE PTR [rcx],al
  41e789:	add    BYTE PTR [rax],al
  41e78b:	add    BYTE PTR [rcx],al
  41e78d:	add    BYTE PTR [rax],al
  41e78f:	add    BYTE PTR [rcx],al
  41e791:	add    BYTE PTR [rax],al
  41e793:	add    BYTE PTR [rcx],al
  41e795:	(bad)  
  41e796:	add    eax,DWORD PTR [rax]
  41e798:	(bad)  
  41e799:	(bad)  
  41e79b:	xor    BYTE PTR [rcx],al
  41e79d:	(bad)  
  41e79e:	add    BYTE PTR [rax],al
  41e7a0:	add    DWORD PTR [rdi+rax*1],ecx
  41e7a3:	add    BYTE PTR [rdx+riz*4],cl
  41e7a6:	or     BYTE PTR [rax],dh
  41e7a8:	(bad)  
  41e7a9:	(bad)  
  41e7aa:	(bad)  
  41e7ab:	jo     0x41e7b2
  41e7ad:	push   rax
  41e7ae:	add    al,0xc0
  41e7b0:	add    dl,al
  41e7b2:	add    BYTE PTR [rax],al
  41e7b4:	add    DWORD PTR [rcx],edx
  41e7b6:	or     DWORD PTR [rip+0x30db211],eax        # 0x34f99cd
  41e7bc:	or     dh,BYTE PTR [rax]
  41e7be:	or     DWORD PTR [rax+0x8],esp
  41e7c1:	jo     0x41e7ca
  41e7c3:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x221eb9a
  41e7ca:	add    BYTE PTR [rax],al
  41e7cc:	add    DWORD PTR [rcx+rax*1],eax
  41e7cf:	add    BYTE PTR [rdx+rax*2],al
  41e7d2:	add    BYTE PTR [rax],al
  41e7d4:	add    DWORD PTR [rdx],ecx
  41e7d6:	(bad)  
  41e7d7:	add    BYTE PTR [rdx],cl
  41e7d9:	xor    al,BYTE PTR [rsi]
  41e7db:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1ec41
  41e7e1:	push   rax
  41e7e2:	add    al,al
  41e7e4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246e7ec
  41e7ea:	add    DWORD PTR [rax],esi
  41e7ec:	add    DWORD PTR [rax],ecx
  41e7ee:	add    eax,0x4420800
  41e7f3:	xor    BYTE PTR [rbx],al
  41e7f5:	(bad)  
  41e7f6:	add    dh,BYTE PTR [rax+0x1]
  41e7f9:	push   rax
  41e7fa:	add    BYTE PTR [rax],al
  41e7fc:	add    DWORD PTR [rdi],eax
  41e7fe:	add    al,0x0
  41e800:	(bad)  
  41e801:	xor    al,BYTE PTR [rbx]
  41e803:	xor    BYTE PTR [rdx],al
  41e805:	(bad)  
  41e806:	add    DWORD PTR [rax+0x1],esi
  41e809:	add    eax,0x32050002
  41e80e:	add    DWORD PTR [rax],esi
  41e810:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246e818
  41e816:	add    DWORD PTR [rax],esi
  41e818:	add    DWORD PTR [rax],eax
  41e81a:	add    BYTE PTR [rax],al
  41e81c:	add    DWORD PTR [rax],eax
  41e81e:	add    BYTE PTR [rax],al
  41e820:	add    DWORD PTR [rax],eax
  41e822:	add    BYTE PTR [rax],al
  41e824:	add    DWORD PTR [rdi],eax
  41e826:	add    al,0x0
  41e828:	(bad)  
  41e829:	xor    al,BYTE PTR [rbx]
  41e82b:	xor    BYTE PTR [rdx],al
  41e82d:	(bad)  
  41e82e:	add    DWORD PTR [rax+0x1],esi
  41e831:	(bad)  
  41e832:	add    eax,DWORD PTR [rax]
  41e834:	(bad)  
  41e835:	rex.X add sil,BYTE PTR [rax]
  41e838:	add    DWORD PTR [rax+0x0],esp
  41e83b:	add    BYTE PTR [rcx],al
  41e83d:	add    eax,0x32050002
  41e842:	add    DWORD PTR [rax],esi
  41e844:	add    DWORD PTR [rdi],eax
  41e846:	add    al,0x0
  41e848:	(bad)  
  41e849:	xor    al,BYTE PTR [rbx]
  41e84b:	xor    BYTE PTR [rdx],al
  41e84d:	(bad)  
  41e84e:	add    DWORD PTR [rax+0x1],esi
  41e851:	(bad)  
  41e852:	add    eax,DWORD PTR [rax]
  41e854:	(bad)  
  41e855:	rex.X add sil,BYTE PTR [rax]
  41e858:	add    DWORD PTR [rax+0x0],esp
  41e85b:	add    BYTE PTR [rcx],al
  41e85d:	(bad)  
  41e85e:	add    eax,DWORD PTR [rax]
  41e860:	(bad)  
  41e861:	rex.X add sil,BYTE PTR [rax]
  41e864:	add    DWORD PTR [rax+0x0],esp
  41e867:	add    BYTE PTR [rcx],al
  41e869:	or     BYTE PTR [rip+0x4420800],al        # 0x483f06f
  41e86f:	xor    BYTE PTR [rbx],al
  41e871:	(bad)  
  41e872:	add    dh,BYTE PTR [rax+0x1]
  41e875:	push   rax
  41e876:	add    BYTE PTR [rax],al
  41e878:	add    DWORD PTR [rip+0xffffffffb2050002],eax        # 0xffffffffb246e880
  41e87e:	add    DWORD PTR [rax],esi
  41e880:	add    DWORD PTR [rip+0x12050002],eax        # 0x1246e888
  41e886:	add    DWORD PTR [rax],esi
  41e888:	add    DWORD PTR [rcx+rax*1],eax
  41e88b:	add    BYTE PTR [rdx+rax*2],al
  41e88e:	add    BYTE PTR [rax],al
  41e890:	add    DWORD PTR [rcx+rax*1],eax
  41e893:	add    BYTE PTR [rdx+riz*2],al
  41e896:	add    BYTE PTR [rax],al
  41e898:	add    DWORD PTR [rsi],eax
  41e89a:	add    eax,DWORD PTR [rax]
  41e89c:	(bad)  
  41e89d:	(bad)  
  41e89f:	xor    BYTE PTR [rcx],al
  41e8a1:	(bad)  
  41e8a2:	add    BYTE PTR [rax],al
  41e8a4:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246e8ac
  41e8aa:	add    DWORD PTR [rax],esi
  41e8ac:	add    DWORD PTR [rdx],ecx
  41e8ae:	add    al,0x0
  41e8b0:	or     ch,BYTE PTR [rax+0x7]
  41e8b3:	add    BYTE PTR [rip+0x13001f2],al        # 0x171eaab
  41e8b9:	(bad)  
  41e8ba:	add    eax,0x6780e00
  41e8bf:	add    BYTE PTR [rcx],cl
  41e8c1:	push   0xffffffffe2040005
  41e8c6:	add    BYTE PTR [rax],al
  41e8c8:	add    DWORD PTR [rdx],ecx
  41e8ca:	add    al,0x0
  41e8cc:	or     ch,BYTE PTR [rax+0x7]
  41e8cf:	add    BYTE PTR [rip+0x13001f2],al        # 0x171eac7
  41e8d5:	add    al,0x1
  41e8d7:	add    BYTE PTR [rdx+rax*2],al
  41e8da:	add    BYTE PTR [rax],al
  41e8dc:	add    DWORD PTR [rcx*1+0xb982c00],ebp
  41e8e3:	add    BYTE PTR [rbx],ah
  41e8e5:	mov    BYTE PTR [rdx],cl
  41e8e7:	add    BYTE PTR [rdx],bl
  41e8e9:	js     0x41e8f4
  41e8eb:	add    BYTE PTR [rdx],dl
  41e8ed:	push   0x10a0008
  41e8f2:	sbb    BYTE PTR [rax],al
  41e8f4:	add    esi,DWORD PTR [rax]
  41e8f6:	add    ah,BYTE PTR [rax+0x1]
  41e8f9:	jo     0x41e8fb
  41e8fb:	add    BYTE PTR [rcx],al
  41e8fd:	or     al,BYTE PTR [rax+rax*1]
  41e900:	or     ch,BYTE PTR [rax+0x7]
  41e903:	add    BYTE PTR [rip+0x13001f2],al        # 0x171eafb
  41e909:	(bad)  
  41e90a:	add    eax,DWORD PTR [rax]
  41e90c:	(bad)  
  41e90d:	rex.X add sil,BYTE PTR [rax]
  41e910:	add    DWORD PTR [rax+0x0],esp
  41e913:	add    BYTE PTR [rcx],al
  41e915:	adc    BYTE PTR [rcx],cl
  41e917:	add    BYTE PTR [rax],dl
  41e919:	(bad)  
  41e91a:	or     al,0x30
  41e91c:	or     esp,DWORD PTR [rax+0xa]
  41e91f:	jo     0x41e92a
  41e921:	push   rax
  41e922:	or     al,al
  41e924:	(bad)  
  41e925:	rol    BYTE PTR [rax+riz*8],1
  41e928:	add    dh,al
  41e92a:	add    BYTE PTR [rax],al
  41e92c:	add    DWORD PTR [rax],eax
  41e92e:	add    BYTE PTR [rax],al
  41e930:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246e938
  41e936:	add    DWORD PTR [rax],esi
  41e938:	add    DWORD PTR [rdi+0x16],eax
  41e93b:	add    BYTE PTR [rdi-0x48],al
  41e93e:	adc    al,BYTE PTR [rax]
  41e940:	ds test al,0x11
  41e943:	add    BYTE PTR [rip+0x2c001098],dh        # 0x2c41f9e1
  41e949:	mov    BYTE PTR [rdi],cl
  41e94b:	add    BYTE PTR [rbx],ah
  41e94d:	js     0x41e95d
  41e94f:	add    BYTE PTR [rbx],bl
  41e951:	push   0x113000d
  41e956:	(bad)  
  41e957:	add    BYTE PTR [rax+rsi*1],cl
  41e95a:	or     esp,DWORD PTR [rax+0xa]
  41e95d:	jo     0x41e968
  41e95f:	push   rax
  41e960:	or     al,al
  41e962:	(bad)  
  41e963:	rol    BYTE PTR [rax+riz*8],1
  41e966:	add    dh,al
  41e968:	add    DWORD PTR [rdi+rax*1],ecx
  41e96b:	add    BYTE PTR [rdx+rax*2],cl
  41e96e:	or     BYTE PTR [rax],dh
  41e970:	(bad)  
  41e971:	(bad)  
  41e972:	(bad)  
  41e973:	jo     0x41e97a
  41e975:	push   rax
  41e976:	add    al,0xc0
  41e978:	add    dl,al
  41e97a:	add    BYTE PTR [rax],al
  41e97c:	add    DWORD PTR [rsi],ecx
  41e97e:	add    eax,0x6780e00
  41e983:	add    BYTE PTR [rcx],cl
  41e985:	push   0xffffffffe2040005
  41e98a:	add    BYTE PTR [rax],al
  41e98c:	add    DWORD PTR [rcx+rax*1],eax
  41e98f:	add    BYTE PTR [rdx+riz*4],al
  41e992:	add    BYTE PTR [rax],al
  41e994:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246e99c
  41e99a:	add    DWORD PTR [rax],esi
  41e99c:	add    DWORD PTR [rsi],ecx
  41e99e:	or     BYTE PTR [rax],al
  41e9a0:	(bad)  
  41e9a1:	jb     0x41e9ad
  41e9a3:	xor    BYTE PTR [rcx],cl
  41e9a5:	(bad)  
  41e9a6:	or     BYTE PTR [rax+0x7],dh
  41e9a9:	push   rax
  41e9aa:	(bad)  
  41e9ab:	rol    BYTE PTR [rax+rdx*8],0x2
  41e9af:	loopne 0x41e9b2
  41e9b1:	(bad)  
  41e9b2:	add    al,0x0
  41e9b4:	(bad)  
  41e9b5:	xor    al,BYTE PTR [rbx]
  41e9b7:	xor    BYTE PTR [rdx],al
  41e9b9:	(bad)  
  41e9ba:	add    DWORD PTR [rax+0x1],esi
  41e9bd:	add    al,0x1
  41e9bf:	add    BYTE PTR [rdx+riz*2],al
  41e9c2:	add    BYTE PTR [rax],al
  41e9c4:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x524eeed1
  41e9ca:	or     DWORD PTR [rbx],eax
  41e9cc:	(bad)  
  41e9cd:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1ee33
  41e9d3:	rol    BYTE PTR [rcx],0x50
  41e9d6:	add    BYTE PTR [rax],al
  41e9d8:	add    DWORD PTR [rdx],ecx
  41e9da:	(bad)  
  41e9db:	add    BYTE PTR [rdx],cl
  41e9dd:	xor    al,BYTE PTR [rsi]
  41e9df:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1ee45
  41e9e5:	push   rax
  41e9e6:	add    al,al
  41e9e8:	add    DWORD PTR [rsi],eax
  41e9ea:	add    eax,DWORD PTR [rax]
  41e9ec:	(bad)  
  41e9ed:	ret    0x3002
  41e9f0:	add    DWORD PTR [rax+0x0],esp
  41e9f3:	add    BYTE PTR [rcx],al
  41e9f5:	adc    al,0x8
  41e9f7:	test   DWORD PTR [rbx+rax*1],edx
  41e9fa:	or     al,0x42
  41e9fc:	or     BYTE PTR [rax],dh
  41e9fe:	(bad)  
  41e9ff:	(bad)  
  41ea00:	(bad)  
  41ea01:	jo     0x41ea08
  41ea03:	rol    BYTE PTR [rbx],0xd0
  41ea06:	add    DWORD PTR [rax+0x1],edx
  41ea09:	(bad)  
  41ea0a:	add    al,0x0
  41ea0c:	(bad)  
  41ea0d:	xor    al,BYTE PTR [rbx]
  41ea0f:	xor    BYTE PTR [rdx],al
  41ea11:	(bad)  
  41ea12:	add    DWORD PTR [rax+0x1],esi
  41ea15:	(bad)  
  41ea16:	add    eax,DWORD PTR [rax]
  41ea18:	(bad)  
  41ea19:	ret    0x3002
  41ea1c:	add    DWORD PTR [rax+0x0],esp
  41ea1f:	add    BYTE PTR [rcx],al
  41ea21:	(bad)  
  41ea22:	add    eax,DWORD PTR [rax]
  41ea24:	(bad)  
  41ea25:	loop   0x41ea29
  41ea27:	xor    BYTE PTR [rcx],al
  41ea29:	(bad)  
  41ea2a:	add    BYTE PTR [rax],al
  41ea2c:	add    DWORD PTR [rcx],edx
  41ea2e:	or     DWORD PTR [rip+0x30d3211],eax        # 0x34f1c45
  41ea34:	or     dh,BYTE PTR [rax]
  41ea36:	or     DWORD PTR [rax+0x8],esp
  41ea39:	jo     0x41ea42
  41ea3b:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x221ee12
  41ea42:	add    BYTE PTR [rax],al
  41ea44:	add    DWORD PTR [rdi+rax*1],ecx
  41ea47:	add    BYTE PTR [rdx+rax*8],cl
  41ea4a:	or     BYTE PTR [rax],dh
  41ea4c:	(bad)  
  41ea4d:	(bad)  
  41ea4e:	(bad)  
  41ea4f:	jo     0x41ea56
  41ea51:	push   rax
  41ea52:	add    al,0xc0
  41ea54:	add    dl,al
  41ea56:	add    BYTE PTR [rax],al
  41ea58:	add    DWORD PTR [rbx],edx
  41ea5a:	or     al,BYTE PTR [rax]
  41ea5c:	adc    eax,DWORD PTR [rcx]
  41ea5e:	(bad)  
  41ea5f:	add    BYTE PTR [rax+rsi*1],cl
  41ea62:	or     esp,DWORD PTR [rax+0xa]
  41ea65:	jo     0x41ea70
  41ea67:	push   rax
  41ea68:	or     al,al
  41ea6a:	(bad)  
  41ea6b:	rol    BYTE PTR [rax+riz*8],1
  41ea6e:	add    dh,al
  41ea70:	add    DWORD PTR [rcx+rax*1],eax
  41ea73:	add    BYTE PTR [rdx+rax*4],al
  41ea76:	add    BYTE PTR [rax],al
  41ea78:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246ea80
  41ea7e:	add    DWORD PTR [rax],esi
  41ea80:	add    DWORD PTR [rsi],eax
  41ea82:	add    eax,DWORD PTR [rax]
  41ea84:	(bad)  
  41ea85:	rex.X add sil,BYTE PTR [rax]
  41ea88:	add    DWORD PTR [rax+0x0],esp
  41ea8b:	add    BYTE PTR [rcx],al
  41ea8d:	add    BYTE PTR [rax],al
  41ea8f:	add    BYTE PTR [rcx],al
  41ea91:	adc    BYTE PTR [rcx],cl
  41ea93:	add    BYTE PTR [rax],dl
  41ea95:	(bad)  
  41ea96:	or     al,0x30
  41ea98:	or     esp,DWORD PTR [rax+0xa]
  41ea9b:	jo     0x41eaa6
  41ea9d:	push   rax
  41ea9e:	or     al,al
  41eaa0:	(bad)  
  41eaa1:	rol    BYTE PTR [rax+riz*8],1
  41eaa4:	add    dh,al
  41eaa6:	add    BYTE PTR [rax],al
  41eaa8:	add    DWORD PTR [rbx],ebx
  41eaaa:	or     al,0x0
  41eaac:	sbb    ebp,DWORD PTR [rax+0xa]
  41eaaf:	add    BYTE PTR [rbx],dl
  41eab1:	add    DWORD PTR [rdi],edx
  41eab3:	add    BYTE PTR [rax+rsi*1],cl
  41eab6:	or     esp,DWORD PTR [rax+0xa]
  41eab9:	jo     0x41eac4
  41eabb:	push   rax
  41eabc:	or     al,al
  41eabe:	(bad)  
  41eabf:	rol    BYTE PTR [rax+riz*8],1
  41eac2:	add    dh,al
  41eac4:	add    DWORD PTR [rax],edx
  41eac6:	or     DWORD PTR [rax],eax
  41eac8:	adc    BYTE PTR [rdx+0xc],al
  41eacb:	xor    BYTE PTR [rbx],cl
  41eacd:	(bad)  
  41eace:	or     dh,BYTE PTR [rax+0x9]
  41ead1:	push   rax
  41ead2:	or     al,al
  41ead4:	(bad)  
  41ead5:	rol    BYTE PTR [rax+riz*8],1
  41ead8:	add    dh,al
  41eada:	add    BYTE PTR [rax],al
  41eadc:	add    DWORD PTR [rsp+rax*1],eax
  41eadf:	add    BYTE PTR [rax+rsi*1],al
  41eae2:	add    esp,DWORD PTR [rax+0x2]
  41eae5:	jo     0x41eae8
  41eae7:	push   rax
  41eae8:	add    DWORD PTR [rax],eax
  41eaea:	add    BYTE PTR [rax],al
  41eaec:	add    DWORD PTR [rax],eax
  41eaee:	add    BYTE PTR [rax],al
  41eaf0:	add    DWORD PTR [rax],edx
  41eaf2:	or     DWORD PTR [rax],eax
  41eaf4:	adc    BYTE PTR [rdx+0x600b300c],al
  41eafa:	or     dh,BYTE PTR [rax+0x9]
  41eafd:	push   rax
  41eafe:	or     al,al
  41eb00:	(bad)  
  41eb01:	rol    BYTE PTR [rax+riz*8],1
  41eb04:	add    dh,al
  41eb06:	add    BYTE PTR [rax],al
  41eb08:	add    DWORD PTR [rsi],eax
  41eb0a:	add    eax,DWORD PTR [rax]
  41eb0c:	(bad)  
  41eb0d:	rex.X add sil,BYTE PTR [rax]
  41eb10:	add    DWORD PTR [rax+0x0],esp
  41eb13:	add    BYTE PTR [rcx],al
  41eb15:	add    eax,0x32050002
  41eb1a:	add    DWORD PTR [rax],esi
  41eb1c:	add    DWORD PTR [rdi],eax
  41eb1e:	add    al,0x0
  41eb20:	(bad)  
  41eb21:	xor    al,BYTE PTR [rbx]
  41eb23:	xor    BYTE PTR [rdx],al
  41eb25:	(bad)  
  41eb26:	add    DWORD PTR [rax+0x1],esi
  41eb29:	add    eax,0x32050002
  41eb2e:	add    DWORD PTR [rax],esi
  41eb30:	add    DWORD PTR [rax],ecx
  41eb32:	add    eax,0x4420800
  41eb37:	xor    BYTE PTR [rbx],al
  41eb39:	(bad)  
  41eb3a:	add    dh,BYTE PTR [rax+0x1]
  41eb3d:	push   rax
  41eb3e:	add    BYTE PTR [rax],al
  41eb40:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246eb48
  41eb46:	add    DWORD PTR [rax],esi
  41eb48:	add    DWORD PTR [rsi],ecx
  41eb4a:	or     BYTE PTR [rax],al
  41eb4c:	(bad)  
  41eb4d:	xor    cl,BYTE PTR [rdx]
  41eb4f:	xor    BYTE PTR [rcx],cl
  41eb51:	(bad)  
  41eb52:	or     BYTE PTR [rax+0x7],dh
  41eb55:	push   rax
  41eb56:	(bad)  
  41eb57:	rol    BYTE PTR [rax+rdx*8],0x2
  41eb5b:	loopne 0x41eb5e
  41eb5d:	or     BYTE PTR [rip+0x4420800],al        # 0x483f363
  41eb63:	xor    BYTE PTR [rbx],al
  41eb65:	(bad)  
  41eb66:	add    dh,BYTE PTR [rax+0x1]
  41eb69:	push   rax
  41eb6a:	add    BYTE PTR [rax],al
  41eb6c:	add    DWORD PTR [rdi+rax*1],ecx
  41eb6f:	add    BYTE PTR [rdx+rax*2],cl
  41eb72:	or     BYTE PTR [rax],dh
  41eb74:	(bad)  
  41eb75:	(bad)  
  41eb76:	(bad)  
  41eb77:	jo     0x41eb7e
  41eb79:	push   rax
  41eb7a:	add    al,0xc0
  41eb7c:	add    dl,al
  41eb7e:	add    BYTE PTR [rax],al
  41eb80:	add    DWORD PTR [rax],eax
  41eb82:	add    BYTE PTR [rax],al
  41eb84:	add    DWORD PTR [rdi],eax
  41eb86:	add    al,0x0
  41eb88:	(bad)  
  41eb89:	xor    al,BYTE PTR [rbx]
  41eb8b:	xor    BYTE PTR [rdx],al
  41eb8d:	(bad)  
  41eb8e:	add    DWORD PTR [rax+0x1],esi
  41eb91:	(bad)  
  41eb92:	add    eax,DWORD PTR [rax]
  41eb94:	(bad)  
  41eb95:	and    al,BYTE PTR [rdx]
  41eb97:	xor    BYTE PTR [rcx],al
  41eb99:	(bad)  
  41eb9a:	add    BYTE PTR [rax],al
  41eb9c:	add    DWORD PTR [rdi],eax
  41eb9e:	add    al,0x0
  41eba0:	(bad)  
  41eba1:	xor    al,BYTE PTR [rbx]
  41eba3:	xor    BYTE PTR [rdx],al
  41eba5:	(bad)  
  41eba6:	add    DWORD PTR [rax+0x1],esi
  41eba9:	add    BYTE PTR [rax],al
  41ebab:	add    BYTE PTR [rcx],al
  41ebad:	or     al,0x7
  41ebaf:	add    BYTE PTR [rdx+rax*2],cl
  41ebb2:	or     BYTE PTR [rax],dh
  41ebb4:	(bad)  
  41ebb5:	(bad)  
  41ebb6:	(bad)  
  41ebb7:	jo     0x41ebbe
  41ebb9:	push   rax
  41ebba:	add    al,0xc0
  41ebbc:	add    dl,al
  41ebbe:	add    BYTE PTR [rax],al
  41ebc0:	add    DWORD PTR [rsi+rax*1],ecx
  41ebc3:	add    BYTE PTR [rax+rbp*2],cl
  41ebc6:	add    al,0x0
  41ebc8:	(bad)  
  41ebc9:	xchg   edx,eax
  41ebca:	add    esi,DWORD PTR [rax]
  41ebcc:	add    ah,BYTE PTR [rax+0x1]
  41ebcf:	jo     0x41ebd2
  41ebd1:	add    BYTE PTR [rax],al
  41ebd3:	add    BYTE PTR [rcx],al
  41ebd5:	add    BYTE PTR [rax],al
  41ebd7:	add    BYTE PTR [rcx],al
  41ebd9:	add    BYTE PTR [rax],al
  41ebdb:	add    BYTE PTR [rcx],al
  41ebdd:	or     BYTE PTR [rip+0x4820800],al        # 0x4c3f3e3
  41ebe3:	xor    BYTE PTR [rbx],al
  41ebe5:	(bad)  
  41ebe6:	add    dh,BYTE PTR [rax+0x1]
  41ebe9:	push   rax
  41ebea:	add    BYTE PTR [rax],al
  41ebec:	add    DWORD PTR [rax],ecx
  41ebee:	add    eax,0x4a20800
  41ebf3:	xor    BYTE PTR [rbx],al
  41ebf5:	(bad)  
  41ebf6:	add    dh,BYTE PTR [rax+0x1]
  41ebf9:	push   rax
  41ebfa:	add    BYTE PTR [rax],al
  41ebfc:	add    DWORD PTR [rax],edx
  41ebfe:	or     DWORD PTR [rax],eax
  41ec00:	adc    BYTE PTR [rdx+0x600b300c],al
  41ec06:	or     dh,BYTE PTR [rax+0x9]
  41ec09:	push   rax
  41ec0a:	or     al,al
  41ec0c:	(bad)  
  41ec0d:	rol    BYTE PTR [rax+riz*8],1
  41ec10:	add    dh,al
  41ec12:	add    BYTE PTR [rax],al
  41ec14:	add    DWORD PTR [rax],ecx
  41ec16:	add    eax,0x4820800
  41ec1b:	xor    BYTE PTR [rbx],al
  41ec1d:	(bad)  
  41ec1e:	add    dh,BYTE PTR [rax+0x1]
  41ec21:	push   rax
  41ec22:	add    BYTE PTR [rax],al
  41ec24:	add    DWORD PTR [rcx+rax*1],eax
  41ec27:	add    BYTE PTR [rdx+riz*4],al
  41ec2a:	add    BYTE PTR [rax],al
  41ec2c:	add    DWORD PTR [rdi],eax
  41ec2e:	add    al,0x0
  41ec30:	(bad)  
  41ec31:	push   rdx
  41ec32:	add    esi,DWORD PTR [rax]
  41ec34:	add    ah,BYTE PTR [rax+0x1]
  41ec37:	jo     0x41ec3a
  41ec39:	(bad)  
  41ec3a:	or     BYTE PTR [rax],al
  41ec3c:	(bad)  
  41ec3d:	push   rdx
  41ec3e:	or     dh,BYTE PTR [rax]
  41ec40:	or     DWORD PTR [rax+0x8],esp
  41ec43:	jo     0x41ec4c
  41ec45:	push   rax
  41ec46:	(bad)  
  41ec47:	rol    BYTE PTR [rax+rdx*8],0x2
  41ec4b:	loopne 0x41ec4e
  41ec4d:	add    BYTE PTR [rax],al
  41ec4f:	add    BYTE PTR [rcx],al
  41ec51:	add    BYTE PTR [rax],al
  41ec53:	add    BYTE PTR [rcx],al
  41ec55:	add    BYTE PTR [rax],al
  41ec57:	add    BYTE PTR [rcx],al
  41ec59:	add    BYTE PTR [rax],al
  41ec5b:	add    BYTE PTR [rcx],al
  41ec5d:	add    eax,0x32050002
  41ec62:	add    DWORD PTR [rax],esi
  41ec64:	add    DWORD PTR [rcx+rax*1],eax
  41ec67:	add    BYTE PTR [rdx+rax*2],al
  41ec6a:	add    BYTE PTR [rax],al
  41ec6c:	add    DWORD PTR [rax],eax
  41ec6e:	add    BYTE PTR [rax],al
  41ec70:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000041f000 <.bss>:
	...

Disassembly of section .idata:

0000000000423000 <.idata>:
  423000:	push   rax
  423001:	xor    BYTE PTR [rdx],al
	...
  42300b:	add    BYTE PTR [rax+0x3d],dl
  42300e:	add    al,BYTE PTR [rax]
  423010:	mov    al,0x33
  423012:	add    al,BYTE PTR [rax]
  423014:	xor    QWORD PTR [rdx],rax
	...
  42301f:	add    BYTE PTR [rsi+rdi*1+0x2],bh
  423023:	add    BYTE PTR [rax-0x77fffdcc],ch
  423029:	xor    eax,DWORD PTR [rdx]
	...
  423033:	add    BYTE PTR [rax-0x17fffdc2],bl
  423039:	add    al,BYTE PTR ss:[rax]
	...
  423050:	adc    BYTE PTR [rdi],dh
  423052:	add    al,BYTE PTR [rax]
  423054:	add    BYTE PTR [rax],al
  423056:	add    BYTE PTR [rax],al
  423058:	sub    BYTE PTR [rdi],dh
  42305a:	add    al,BYTE PTR [rax]
  42305c:	add    BYTE PTR [rax],al
  42305e:	add    BYTE PTR [rax],al
  423060:	rex (bad) 
  423062:	add    al,BYTE PTR [rax]
  423064:	add    BYTE PTR [rax],al
  423066:	add    BYTE PTR [rax],al
  423068:	push   rsp
  423069:	(bad)  
  42306a:	add    al,BYTE PTR [rax]
  42306c:	add    BYTE PTR [rax],al
  42306e:	add    BYTE PTR [rax],al
  423070:	push   0x37
  423072:	add    al,BYTE PTR [rax]
  423074:	add    BYTE PTR [rax],al
  423076:	add    BYTE PTR [rax],al
  423078:	xor    BYTE PTR [rdi],0x2
  42307b:	add    BYTE PTR [rax],al
  42307d:	add    BYTE PTR [rax],al
  42307f:	add    BYTE PTR [rax+0x237],dl
  423085:	add    BYTE PTR [rax],al
  423087:	add    BYTE PTR [rsi+0x237],ah
  42308d:	add    BYTE PTR [rax],al
  42308f:	add    BYTE PTR [rdx+0x237],bh
  423095:	add    BYTE PTR [rax],al
  423097:	add    ah,cl
  423099:	(bad)  
  42309a:	add    al,BYTE PTR [rax]
  42309c:	add    BYTE PTR [rax],al
  42309e:	add    BYTE PTR [rax],al
  4230a0:	fidiv  WORD PTR [rdi]
  4230a2:	add    al,BYTE PTR [rax]
  4230a4:	add    BYTE PTR [rax],al
  4230a6:	add    BYTE PTR [rax],al
  4230a8:	clc    
  4230a9:	(bad)  
  4230aa:	add    al,BYTE PTR [rax]
  4230ac:	add    BYTE PTR [rax],al
  4230ae:	add    BYTE PTR [rax],al
  4230b0:	or     BYTE PTR [rax],bh
  4230b2:	add    al,BYTE PTR [rax]
  4230b4:	add    BYTE PTR [rax],al
  4230b6:	add    BYTE PTR [rax],al
  4230b8:	and    al,0x38
  4230ba:	add    al,BYTE PTR [rax]
  4230bc:	add    BYTE PTR [rax],al
  4230be:	add    BYTE PTR [rax],al
  4230c0:	cmp    BYTE PTR [rax],bh
  4230c2:	add    al,BYTE PTR [rax]
  4230c4:	add    BYTE PTR [rax],al
  4230c6:	add    BYTE PTR [rax],al
  4230c8:	push   rax
  4230c9:	cmp    BYTE PTR [rdx],al
  4230cb:	add    BYTE PTR [rax],al
  4230cd:	add    BYTE PTR [rax],al
  4230cf:	add    BYTE PTR [rsi+0x38],ah
  4230d2:	add    al,BYTE PTR [rax]
  4230d4:	add    BYTE PTR [rax],al
  4230d6:	add    BYTE PTR [rax],al
  4230d8:	cmp    BYTE PTR [rax],0x2
  4230db:	add    BYTE PTR [rax],al
  4230dd:	add    BYTE PTR [rax],al
  4230df:	add    BYTE PTR [rsi+0x238],dl
  4230e5:	add    BYTE PTR [rax],al
  4230e7:	add    BYTE PTR [rdx+0x238],ch
  4230ed:	add    BYTE PTR [rax],al
  4230ef:	add    ah,al
  4230f1:	cmp    BYTE PTR [rdx],al
  4230f3:	add    BYTE PTR [rax],al
  4230f5:	add    BYTE PTR [rax],al
  4230f7:	add    al,bl
  4230f9:	cmp    BYTE PTR [rdx],al
  4230fb:	add    BYTE PTR [rax],al
  4230fd:	add    BYTE PTR [rax],al
  4230ff:	add    dh,dh
  423101:	cmp    BYTE PTR [rdx],al
  423103:	add    BYTE PTR [rax],al
  423105:	add    BYTE PTR [rax],al
  423107:	add    dh,bh
  423109:	cmp    BYTE PTR [rdx],al
  42310b:	add    BYTE PTR [rax],al
  42310d:	add    BYTE PTR [rax],al
  42310f:	add    BYTE PTR [rdx],dl
  423111:	cmp    DWORD PTR [rdx],eax
  423113:	add    BYTE PTR [rax],al
  423115:	add    BYTE PTR [rax],al
  423117:	add    BYTE PTR [rax],ah
  423119:	cmp    DWORD PTR [rdx],eax
  42311b:	add    BYTE PTR [rax],al
  42311d:	add    BYTE PTR [rax],al
  42311f:	add    BYTE PTR [rcx+rdi*1],bh
  423122:	add    al,BYTE PTR [rax]
  423124:	add    BYTE PTR [rax],al
  423126:	add    BYTE PTR [rax],al
  423128:	rex.WRX cmp QWORD PTR [rdx],r8
  42312b:	add    BYTE PTR [rax],al
  42312d:	add    BYTE PTR [rax],al
  42312f:	add    BYTE PTR [rsi+0x39],bl
  423132:	add    al,BYTE PTR [rax]
  423134:	add    BYTE PTR [rax],al
  423136:	add    BYTE PTR [rax],al
  423138:	je     0x423173
  42313a:	add    al,BYTE PTR [rax]
	...
  423148:	mov    WORD PTR [rcx],?
  42314a:	add    al,BYTE PTR [rax]
  42314c:	add    BYTE PTR [rax],al
  42314e:	add    BYTE PTR [rax],al
  423150:	movabs ds:0xb000000000000239,al
  423159:	cmp    DWORD PTR [rdx],eax
  42315b:	add    BYTE PTR [rax],al
  42315d:	add    BYTE PTR [rax],al
  42315f:	add    al,al
  423161:	cmp    DWORD PTR [rdx],eax
  423163:	add    BYTE PTR [rax],al
  423165:	add    BYTE PTR [rax],al
  423167:	add    ah,cl
  423169:	cmp    DWORD PTR [rdx],eax
  42316b:	add    BYTE PTR [rax],al
  42316d:	add    BYTE PTR [rax],al
  42316f:	add    dl,bl
  423171:	cmp    DWORD PTR [rdx],eax
  423173:	add    BYTE PTR [rax],al
  423175:	add    BYTE PTR [rax],al
  423177:	add    dl,ch
  423179:	cmp    DWORD PTR [rdx],eax
  42317b:	add    BYTE PTR [rax],al
  42317d:	add    BYTE PTR [rax],al
  42317f:	add    dl,bh
  423181:	cmp    DWORD PTR [rdx],eax
  423183:	add    BYTE PTR [rax],al
  423185:	add    BYTE PTR [rax],al
  423187:	add    BYTE PTR [rdx+rdi*1],cl
  42318a:	add    al,BYTE PTR [rax]
  42318c:	add    BYTE PTR [rax],al
  42318e:	add    BYTE PTR [rax],al
  423190:	and    BYTE PTR [rdx],bh
  423192:	add    al,BYTE PTR [rax]
  423194:	add    BYTE PTR [rax],al
  423196:	add    BYTE PTR [rax],al
  423198:	sub    bh,BYTE PTR [rdx]
  42319a:	add    al,BYTE PTR [rax]
  42319c:	add    BYTE PTR [rax],al
  42319e:	add    BYTE PTR [rax],al
  4231a0:	cmp    BYTE PTR [rdx],bh
  4231a2:	add    al,BYTE PTR [rax]
  4231a4:	add    BYTE PTR [rax],al
  4231a6:	add    BYTE PTR [rax],al
  4231a8:	rex.X cmp al,BYTE PTR [rdx]
  4231ab:	add    BYTE PTR [rax],al
  4231ad:	add    BYTE PTR [rax],al
  4231af:	add    BYTE PTR [rdx+rdi*1+0x2],cl
  4231b3:	add    BYTE PTR [rax],al
  4231b5:	add    BYTE PTR [rax],al
  4231b7:	add    BYTE PTR [rsi+0x3a],dl
  4231ba:	add    al,BYTE PTR [rax]
  4231bc:	add    BYTE PTR [rax],al
  4231be:	add    BYTE PTR [rax],al
  4231c0:	(bad)  
  4231c1:	cmp    al,BYTE PTR [rdx]
  4231c3:	add    BYTE PTR [rax],al
  4231c5:	add    BYTE PTR [rax],al
  4231c7:	add    BYTE PTR [rdx+0x3a],ch
  4231ca:	add    al,BYTE PTR [rax]
  4231cc:	add    BYTE PTR [rax],al
  4231ce:	add    BYTE PTR [rax],al
  4231d0:	je     0x42320c
  4231d2:	add    al,BYTE PTR [rax]
  4231d4:	add    BYTE PTR [rax],al
  4231d6:	add    BYTE PTR [rax],al
  4231d8:	jle    0x423214
  4231da:	add    al,BYTE PTR [rax]
  4231dc:	add    BYTE PTR [rax],al
  4231de:	add    BYTE PTR [rax],al
  4231e0:	mov    BYTE PTR [rdx],bh
  4231e2:	add    al,BYTE PTR [rax]
  4231e4:	add    BYTE PTR [rax],al
  4231e6:	add    BYTE PTR [rax],al
  4231e8:	xchg   edx,eax
  4231e9:	cmp    al,BYTE PTR [rdx]
  4231eb:	add    BYTE PTR [rax],al
  4231ed:	add    BYTE PTR [rax],al
  4231ef:	add    BYTE PTR [rdx+0x23a],bl
  4231f5:	add    BYTE PTR [rax],al
  4231f7:	add    BYTE PTR [rdx+0x23a],ah
  4231fd:	add    BYTE PTR [rax],al
  4231ff:	add    BYTE PTR [rdx+0x23a],ch
  423205:	add    BYTE PTR [rax],al
  423207:	add    BYTE PTR [rdx+0x23a],dh
  42320d:	add    BYTE PTR [rax],al
  42320f:	add    BYTE PTR [rdx+rdi*1+0x2],bh
  423216:	add    BYTE PTR [rax],al
  423218:	(bad)  
  423219:	cmp    al,BYTE PTR [rdx]
  42321b:	add    BYTE PTR [rax],al
  42321d:	add    BYTE PTR [rax],al
  42321f:	add    dh,cl
  423221:	cmp    al,BYTE PTR [rdx]
  423223:	add    BYTE PTR [rax],al
  423225:	add    BYTE PTR [rax],al
  423227:	add    dh,dl
  423229:	cmp    al,BYTE PTR [rdx]
  42322b:	add    BYTE PTR [rax],al
  42322d:	add    BYTE PTR [rax],al
  42322f:	add    al,ah
  423231:	cmp    al,BYTE PTR [rdx]
  423233:	add    BYTE PTR [rax],al
  423235:	add    BYTE PTR [rax],al
  423237:	add    al,ch
  423239:	cmp    al,BYTE PTR [rdx]
  42323b:	add    BYTE PTR [rax],al
  42323d:	add    BYTE PTR [rax],al
  42323f:	add    al,dh
  423241:	cmp    al,BYTE PTR [rdx]
  423243:	add    BYTE PTR [rax],al
  423245:	add    BYTE PTR [rax],al
  423247:	add    dl,bh
  423249:	cmp    al,BYTE PTR [rdx]
  42324b:	add    BYTE PTR [rax],al
  42324d:	add    BYTE PTR [rax],al
  42324f:	add    BYTE PTR [rdx],al
  423251:	cmp    eax,DWORD PTR [rdx]
  423253:	add    BYTE PTR [rax],al
  423255:	add    BYTE PTR [rax],al
  423257:	add    BYTE PTR [rdx],cl
  423259:	cmp    eax,DWORD PTR [rdx]
  42325b:	add    BYTE PTR [rax],al
  42325d:	add    BYTE PTR [rax],al
  42325f:	add    BYTE PTR [rdx],dl
  423261:	cmp    eax,DWORD PTR [rdx]
  423263:	add    BYTE PTR [rax],al
  423265:	add    BYTE PTR [rax],al
  423267:	add    BYTE PTR [rbx+rdi*1],bl
  42326a:	add    al,BYTE PTR [rax]
  42326c:	add    BYTE PTR [rax],al
  42326e:	add    BYTE PTR [rax],al
  423270:	cmp    eax,DWORD PTR es:[rdx]
  423273:	add    BYTE PTR [rax],al
  423275:	add    BYTE PTR [rax],al
  423277:	add    BYTE PTR [rbx+rdi*1],dh
  42327a:	add    al,BYTE PTR [rax]
  42327c:	add    BYTE PTR [rax],al
  42327e:	add    BYTE PTR [rax],al
  423280:	cmp    al,0x3b
  423282:	add    al,BYTE PTR [rax]
  423284:	add    BYTE PTR [rax],al
  423286:	add    BYTE PTR [rax],al
  423288:	rex.RX cmp r8d,DWORD PTR [rdx]
  42328b:	add    BYTE PTR [rax],al
  42328d:	add    BYTE PTR [rax],al
  42328f:	add    BYTE PTR [rax+0x3b],dl
  423292:	add    al,BYTE PTR [rax]
  423294:	add    BYTE PTR [rax],al
  423296:	add    BYTE PTR [rax],al
  423298:	pop    rdx
  423299:	cmp    eax,DWORD PTR [rdx]
  42329b:	add    BYTE PTR [rax],al
  42329d:	add    BYTE PTR [rax],al
  42329f:	add    BYTE PTR [rdx+0x3b],ah
  4232a2:	add    al,BYTE PTR [rax]
  4232a4:	add    BYTE PTR [rax],al
  4232a6:	add    BYTE PTR [rax],al
  4232a8:	ins    BYTE PTR es:[rdi],dx
  4232a9:	cmp    eax,DWORD PTR [rdx]
  4232ab:	add    BYTE PTR [rax],al
  4232ad:	add    BYTE PTR [rax],al
  4232af:	add    BYTE PTR [rbx+rdi*1+0x2],dh
  4232b3:	add    BYTE PTR [rax],al
  4232b5:	add    BYTE PTR [rax],al
  4232b7:	add    BYTE PTR [rbx+rdi*1+0x2],bh
  4232bb:	add    BYTE PTR [rax],al
  4232bd:	add    BYTE PTR [rax],al
  4232bf:	add    BYTE PTR [rsi+0x23b],al
  4232c5:	add    BYTE PTR [rax],al
  4232c7:	add    BYTE PTR [rdx+0x23b],dl
  4232cd:	add    BYTE PTR [rax],al
  4232cf:	add    BYTE PTR [rbx+rdi*1+0x2],bl
  4232d6:	add    BYTE PTR [rax],al
  4232d8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4232d9:	cmp    eax,DWORD PTR [rdx]
  4232db:	add    BYTE PTR [rax],al
  4232dd:	add    BYTE PTR [rax],al
  4232df:	add    BYTE PTR [rax+0x23b],dh
  4232e5:	add    BYTE PTR [rax],al
  4232e7:	add    BYTE PTR [rdx+0x23b],bh
  4232ed:	add    BYTE PTR [rax],al
  4232ef:	add    ah,al
  4232f1:	cmp    eax,DWORD PTR [rdx]
  4232f3:	add    BYTE PTR [rax],al
  4232f5:	add    BYTE PTR [rax],al
  4232f7:	add    dh,cl
  4232f9:	cmp    eax,DWORD PTR [rdx]
  4232fb:	add    BYTE PTR [rax],al
  4232fd:	add    BYTE PTR [rax],al
  4232ff:	add    dl,bl
  423301:	cmp    eax,DWORD PTR [rdx]
  423303:	add    BYTE PTR [rax],al
  423305:	add    BYTE PTR [rax],al
  423307:	add    ah,ah
  423309:	cmp    eax,DWORD PTR [rdx]
  42330b:	add    BYTE PTR [rax],al
  42330d:	add    BYTE PTR [rax],al
  42330f:	add    dh,ch
  423311:	cmp    eax,DWORD PTR [rdx]
  423313:	add    BYTE PTR [rax],al
  423315:	add    BYTE PTR [rax],al
  423317:	add    al,bh
  423319:	cmp    eax,DWORD PTR [rdx]
  42331b:	add    BYTE PTR [rax],al
  42331d:	add    BYTE PTR [rax],al
  42331f:	add    BYTE PTR [rdx],al
  423321:	cmp    al,0x2
  423323:	add    BYTE PTR [rax],al
  423325:	add    BYTE PTR [rax],al
  423327:	add    BYTE PTR [rsp+rdi*1],cl
  42332a:	add    al,BYTE PTR [rax]
  42332c:	add    BYTE PTR [rax],al
  42332e:	add    BYTE PTR [rax],al
  423330:	(bad)  
  423331:	cmp    al,0x2
  423333:	add    BYTE PTR [rax],al
  423335:	add    BYTE PTR [rax],al
  423337:	add    BYTE PTR [rax],ah
  423339:	cmp    al,0x2
  42333b:	add    BYTE PTR [rax],al
  42333d:	add    BYTE PTR [rax],al
  42333f:	add    BYTE PTR [rdx],ch
  423341:	cmp    al,0x2
  423343:	add    BYTE PTR [rax],al
  423345:	add    BYTE PTR [rax],al
  423347:	add    BYTE PTR [rsp+rdi*1],dh
  42334a:	add    al,BYTE PTR [rax]
  42334c:	add    BYTE PTR [rax],al
  42334e:	add    BYTE PTR [rax],al
  423350:	ds cmp al,0x2
  423353:	add    BYTE PTR [rax],al
  423355:	add    BYTE PTR [rax],al
  423357:	add    BYTE PTR [rsp+rdi*1+0x2],al
  42335b:	add    BYTE PTR [rax],al
  42335d:	add    BYTE PTR [rax],al
  42335f:	add    BYTE PTR [rsi+0x3c],cl
  423362:	add    al,BYTE PTR [rax]
  423364:	add    BYTE PTR [rax],al
  423366:	add    BYTE PTR [rax],al
  423368:	pop    rax
  423369:	cmp    al,0x2
  42336b:	add    BYTE PTR [rax],al
  42336d:	add    BYTE PTR [rax],al
  42336f:	add    BYTE PTR [rsp+rdi*1+0x2],ah
  423373:	add    BYTE PTR [rax],al
  423375:	add    BYTE PTR [rax],al
  423377:	add    BYTE PTR [rsi+0x3c],ch
  42337a:	add    al,BYTE PTR [rax]
	...
  423388:	js     0x4233c6
  42338a:	add    al,BYTE PTR [rax]
  42338c:	add    BYTE PTR [rax],al
  42338e:	add    BYTE PTR [rax],al
  423390:	mov    BYTE PTR [rdx+rax*1],bh
  423393:	add    BYTE PTR [rax],al
  423395:	add    BYTE PTR [rax],al
  423397:	add    BYTE PTR [rsp+rdi*1+0x2],dl
  42339e:	add    BYTE PTR [rax],al
  4233a0:	mov    eax,0x23c
	...
  4233ad:	add    BYTE PTR [rax],al
  4233af:	add    BYTE PTR [rax],dl
  4233b1:	(bad)  
  4233b2:	add    al,BYTE PTR [rax]
  4233b4:	add    BYTE PTR [rax],al
  4233b6:	add    BYTE PTR [rax],al
  4233b8:	sub    BYTE PTR [rdi],dh
  4233ba:	add    al,BYTE PTR [rax]
  4233bc:	add    BYTE PTR [rax],al
  4233be:	add    BYTE PTR [rax],al
  4233c0:	rex (bad) 
  4233c2:	add    al,BYTE PTR [rax]
  4233c4:	add    BYTE PTR [rax],al
  4233c6:	add    BYTE PTR [rax],al
  4233c8:	push   rsp
  4233c9:	(bad)  
  4233ca:	add    al,BYTE PTR [rax]
  4233cc:	add    BYTE PTR [rax],al
  4233ce:	add    BYTE PTR [rax],al
  4233d0:	push   0x37
  4233d2:	add    al,BYTE PTR [rax]
  4233d4:	add    BYTE PTR [rax],al
  4233d6:	add    BYTE PTR [rax],al
  4233d8:	xor    BYTE PTR [rdi],0x2
  4233db:	add    BYTE PTR [rax],al
  4233dd:	add    BYTE PTR [rax],al
  4233df:	add    BYTE PTR [rax+0x237],dl
  4233e5:	add    BYTE PTR [rax],al
  4233e7:	add    BYTE PTR [rsi+0x237],ah
  4233ed:	add    BYTE PTR [rax],al
  4233ef:	add    BYTE PTR [rdx+0x237],bh
  4233f5:	add    BYTE PTR [rax],al
  4233f7:	add    ah,cl
  4233f9:	(bad)  
  4233fa:	add    al,BYTE PTR [rax]
  4233fc:	add    BYTE PTR [rax],al
  4233fe:	add    BYTE PTR [rax],al
  423400:	fidiv  WORD PTR [rdi]
  423402:	add    al,BYTE PTR [rax]
  423404:	add    BYTE PTR [rax],al
  423406:	add    BYTE PTR [rax],al
  423408:	clc    
  423409:	(bad)  
  42340a:	add    al,BYTE PTR [rax]
  42340c:	add    BYTE PTR [rax],al
  42340e:	add    BYTE PTR [rax],al
  423410:	or     BYTE PTR [rax],bh
  423412:	add    al,BYTE PTR [rax]
  423414:	add    BYTE PTR [rax],al
  423416:	add    BYTE PTR [rax],al
  423418:	and    al,0x38
  42341a:	add    al,BYTE PTR [rax]
  42341c:	add    BYTE PTR [rax],al
  42341e:	add    BYTE PTR [rax],al
  423420:	cmp    BYTE PTR [rax],bh
  423422:	add    al,BYTE PTR [rax]
  423424:	add    BYTE PTR [rax],al
  423426:	add    BYTE PTR [rax],al
  423428:	push   rax
  423429:	cmp    BYTE PTR [rdx],al
  42342b:	add    BYTE PTR [rax],al
  42342d:	add    BYTE PTR [rax],al
  42342f:	add    BYTE PTR [rsi+0x38],ah
  423432:	add    al,BYTE PTR [rax]
  423434:	add    BYTE PTR [rax],al
  423436:	add    BYTE PTR [rax],al
  423438:	cmp    BYTE PTR [rax],0x2
  42343b:	add    BYTE PTR [rax],al
  42343d:	add    BYTE PTR [rax],al
  42343f:	add    BYTE PTR [rsi+0x238],dl
  423445:	add    BYTE PTR [rax],al
  423447:	add    BYTE PTR [rdx+0x238],ch
  42344d:	add    BYTE PTR [rax],al
  42344f:	add    ah,al
  423451:	cmp    BYTE PTR [rdx],al
  423453:	add    BYTE PTR [rax],al
  423455:	add    BYTE PTR [rax],al
  423457:	add    al,bl
  423459:	cmp    BYTE PTR [rdx],al
  42345b:	add    BYTE PTR [rax],al
  42345d:	add    BYTE PTR [rax],al
  42345f:	add    dh,dh
  423461:	cmp    BYTE PTR [rdx],al
  423463:	add    BYTE PTR [rax],al
  423465:	add    BYTE PTR [rax],al
  423467:	add    dh,bh
  423469:	cmp    BYTE PTR [rdx],al
  42346b:	add    BYTE PTR [rax],al
  42346d:	add    BYTE PTR [rax],al
  42346f:	add    BYTE PTR [rdx],dl
  423471:	cmp    DWORD PTR [rdx],eax
  423473:	add    BYTE PTR [rax],al
  423475:	add    BYTE PTR [rax],al
  423477:	add    BYTE PTR [rax],ah
  423479:	cmp    DWORD PTR [rdx],eax
  42347b:	add    BYTE PTR [rax],al
  42347d:	add    BYTE PTR [rax],al
  42347f:	add    BYTE PTR [rcx+rdi*1],bh
  423482:	add    al,BYTE PTR [rax]
  423484:	add    BYTE PTR [rax],al
  423486:	add    BYTE PTR [rax],al
  423488:	rex.WRX cmp QWORD PTR [rdx],r8
  42348b:	add    BYTE PTR [rax],al
  42348d:	add    BYTE PTR [rax],al
  42348f:	add    BYTE PTR [rsi+0x39],bl
  423492:	add    al,BYTE PTR [rax]
  423494:	add    BYTE PTR [rax],al
  423496:	add    BYTE PTR [rax],al
  423498:	je     0x4234d3
  42349a:	add    al,BYTE PTR [rax]
	...
  4234a8:	mov    WORD PTR [rcx],?
  4234aa:	add    al,BYTE PTR [rax]
  4234ac:	add    BYTE PTR [rax],al
  4234ae:	add    BYTE PTR [rax],al
  4234b0:	movabs ds:0xb000000000000239,al
  4234b9:	cmp    DWORD PTR [rdx],eax
  4234bb:	add    BYTE PTR [rax],al
  4234bd:	add    BYTE PTR [rax],al
  4234bf:	add    al,al
  4234c1:	cmp    DWORD PTR [rdx],eax
  4234c3:	add    BYTE PTR [rax],al
  4234c5:	add    BYTE PTR [rax],al
  4234c7:	add    ah,cl
  4234c9:	cmp    DWORD PTR [rdx],eax
  4234cb:	add    BYTE PTR [rax],al
  4234cd:	add    BYTE PTR [rax],al
  4234cf:	add    dl,bl
  4234d1:	cmp    DWORD PTR [rdx],eax
  4234d3:	add    BYTE PTR [rax],al
  4234d5:	add    BYTE PTR [rax],al
  4234d7:	add    dl,ch
  4234d9:	cmp    DWORD PTR [rdx],eax
  4234db:	add    BYTE PTR [rax],al
  4234dd:	add    BYTE PTR [rax],al
  4234df:	add    dl,bh
  4234e1:	cmp    DWORD PTR [rdx],eax
  4234e3:	add    BYTE PTR [rax],al
  4234e5:	add    BYTE PTR [rax],al
  4234e7:	add    BYTE PTR [rdx+rdi*1],cl
  4234ea:	add    al,BYTE PTR [rax]
  4234ec:	add    BYTE PTR [rax],al
  4234ee:	add    BYTE PTR [rax],al
  4234f0:	and    BYTE PTR [rdx],bh
  4234f2:	add    al,BYTE PTR [rax]
  4234f4:	add    BYTE PTR [rax],al
  4234f6:	add    BYTE PTR [rax],al
  4234f8:	sub    bh,BYTE PTR [rdx]
  4234fa:	add    al,BYTE PTR [rax]
  4234fc:	add    BYTE PTR [rax],al
  4234fe:	add    BYTE PTR [rax],al
  423500:	cmp    BYTE PTR [rdx],bh
  423502:	add    al,BYTE PTR [rax]
  423504:	add    BYTE PTR [rax],al
  423506:	add    BYTE PTR [rax],al
  423508:	rex.X cmp al,BYTE PTR [rdx]
  42350b:	add    BYTE PTR [rax],al
  42350d:	add    BYTE PTR [rax],al
  42350f:	add    BYTE PTR [rdx+rdi*1+0x2],cl
  423513:	add    BYTE PTR [rax],al
  423515:	add    BYTE PTR [rax],al
  423517:	add    BYTE PTR [rsi+0x3a],dl
  42351a:	add    al,BYTE PTR [rax]
  42351c:	add    BYTE PTR [rax],al
  42351e:	add    BYTE PTR [rax],al
  423520:	(bad)  
  423521:	cmp    al,BYTE PTR [rdx]
  423523:	add    BYTE PTR [rax],al
  423525:	add    BYTE PTR [rax],al
  423527:	add    BYTE PTR [rdx+0x3a],ch
  42352a:	add    al,BYTE PTR [rax]
  42352c:	add    BYTE PTR [rax],al
  42352e:	add    BYTE PTR [rax],al
  423530:	je     0x42356c
  423532:	add    al,BYTE PTR [rax]
  423534:	add    BYTE PTR [rax],al
  423536:	add    BYTE PTR [rax],al
  423538:	jle    0x423574
  42353a:	add    al,BYTE PTR [rax]
  42353c:	add    BYTE PTR [rax],al
  42353e:	add    BYTE PTR [rax],al
  423540:	mov    BYTE PTR [rdx],bh
  423542:	add    al,BYTE PTR [rax]
  423544:	add    BYTE PTR [rax],al
  423546:	add    BYTE PTR [rax],al
  423548:	xchg   edx,eax
  423549:	cmp    al,BYTE PTR [rdx]
  42354b:	add    BYTE PTR [rax],al
  42354d:	add    BYTE PTR [rax],al
  42354f:	add    BYTE PTR [rdx+0x23a],bl
  423555:	add    BYTE PTR [rax],al
  423557:	add    BYTE PTR [rdx+0x23a],ah
  42355d:	add    BYTE PTR [rax],al
  42355f:	add    BYTE PTR [rdx+0x23a],ch
  423565:	add    BYTE PTR [rax],al
  423567:	add    BYTE PTR [rdx+0x23a],dh
  42356d:	add    BYTE PTR [rax],al
  42356f:	add    BYTE PTR [rdx+rdi*1+0x2],bh
  423576:	add    BYTE PTR [rax],al
  423578:	(bad)  
  423579:	cmp    al,BYTE PTR [rdx]
  42357b:	add    BYTE PTR [rax],al
  42357d:	add    BYTE PTR [rax],al
  42357f:	add    dh,cl
  423581:	cmp    al,BYTE PTR [rdx]
  423583:	add    BYTE PTR [rax],al
  423585:	add    BYTE PTR [rax],al
  423587:	add    dh,dl
  423589:	cmp    al,BYTE PTR [rdx]
  42358b:	add    BYTE PTR [rax],al
  42358d:	add    BYTE PTR [rax],al
  42358f:	add    al,ah
  423591:	cmp    al,BYTE PTR [rdx]
  423593:	add    BYTE PTR [rax],al
  423595:	add    BYTE PTR [rax],al
  423597:	add    al,ch
  423599:	cmp    al,BYTE PTR [rdx]
  42359b:	add    BYTE PTR [rax],al
  42359d:	add    BYTE PTR [rax],al
  42359f:	add    al,dh
  4235a1:	cmp    al,BYTE PTR [rdx]
  4235a3:	add    BYTE PTR [rax],al
  4235a5:	add    BYTE PTR [rax],al
  4235a7:	add    dl,bh
  4235a9:	cmp    al,BYTE PTR [rdx]
  4235ab:	add    BYTE PTR [rax],al
  4235ad:	add    BYTE PTR [rax],al
  4235af:	add    BYTE PTR [rdx],al
  4235b1:	cmp    eax,DWORD PTR [rdx]
  4235b3:	add    BYTE PTR [rax],al
  4235b5:	add    BYTE PTR [rax],al
  4235b7:	add    BYTE PTR [rdx],cl
  4235b9:	cmp    eax,DWORD PTR [rdx]
  4235bb:	add    BYTE PTR [rax],al
  4235bd:	add    BYTE PTR [rax],al
  4235bf:	add    BYTE PTR [rdx],dl
  4235c1:	cmp    eax,DWORD PTR [rdx]
  4235c3:	add    BYTE PTR [rax],al
  4235c5:	add    BYTE PTR [rax],al
  4235c7:	add    BYTE PTR [rbx+rdi*1],bl
  4235ca:	add    al,BYTE PTR [rax]
  4235cc:	add    BYTE PTR [rax],al
  4235ce:	add    BYTE PTR [rax],al
  4235d0:	cmp    eax,DWORD PTR es:[rdx]
  4235d3:	add    BYTE PTR [rax],al
  4235d5:	add    BYTE PTR [rax],al
  4235d7:	add    BYTE PTR [rbx+rdi*1],dh
  4235da:	add    al,BYTE PTR [rax]
  4235dc:	add    BYTE PTR [rax],al
  4235de:	add    BYTE PTR [rax],al
  4235e0:	cmp    al,0x3b
  4235e2:	add    al,BYTE PTR [rax]
  4235e4:	add    BYTE PTR [rax],al
  4235e6:	add    BYTE PTR [rax],al
  4235e8:	rex.RX cmp r8d,DWORD PTR [rdx]
  4235eb:	add    BYTE PTR [rax],al
  4235ed:	add    BYTE PTR [rax],al
  4235ef:	add    BYTE PTR [rax+0x3b],dl
  4235f2:	add    al,BYTE PTR [rax]
  4235f4:	add    BYTE PTR [rax],al
  4235f6:	add    BYTE PTR [rax],al
  4235f8:	pop    rdx
  4235f9:	cmp    eax,DWORD PTR [rdx]
  4235fb:	add    BYTE PTR [rax],al
  4235fd:	add    BYTE PTR [rax],al
  4235ff:	add    BYTE PTR [rdx+0x3b],ah
  423602:	add    al,BYTE PTR [rax]
  423604:	add    BYTE PTR [rax],al
  423606:	add    BYTE PTR [rax],al
  423608:	ins    BYTE PTR es:[rdi],dx
  423609:	cmp    eax,DWORD PTR [rdx]
  42360b:	add    BYTE PTR [rax],al
  42360d:	add    BYTE PTR [rax],al
  42360f:	add    BYTE PTR [rbx+rdi*1+0x2],dh
  423613:	add    BYTE PTR [rax],al
  423615:	add    BYTE PTR [rax],al
  423617:	add    BYTE PTR [rbx+rdi*1+0x2],bh
  42361b:	add    BYTE PTR [rax],al
  42361d:	add    BYTE PTR [rax],al
  42361f:	add    BYTE PTR [rsi+0x23b],al
  423625:	add    BYTE PTR [rax],al
  423627:	add    BYTE PTR [rdx+0x23b],dl
  42362d:	add    BYTE PTR [rax],al
  42362f:	add    BYTE PTR [rbx+rdi*1+0x2],bl
  423636:	add    BYTE PTR [rax],al
  423638:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  423639:	cmp    eax,DWORD PTR [rdx]
  42363b:	add    BYTE PTR [rax],al
  42363d:	add    BYTE PTR [rax],al
  42363f:	add    BYTE PTR [rax+0x23b],dh
  423645:	add    BYTE PTR [rax],al
  423647:	add    BYTE PTR [rdx+0x23b],bh
  42364d:	add    BYTE PTR [rax],al
  42364f:	add    ah,al
  423651:	cmp    eax,DWORD PTR [rdx]
  423653:	add    BYTE PTR [rax],al
  423655:	add    BYTE PTR [rax],al
  423657:	add    dh,cl
  423659:	cmp    eax,DWORD PTR [rdx]
  42365b:	add    BYTE PTR [rax],al
  42365d:	add    BYTE PTR [rax],al
  42365f:	add    dl,bl
  423661:	cmp    eax,DWORD PTR [rdx]
  423663:	add    BYTE PTR [rax],al
  423665:	add    BYTE PTR [rax],al
  423667:	add    ah,ah
  423669:	cmp    eax,DWORD PTR [rdx]
  42366b:	add    BYTE PTR [rax],al
  42366d:	add    BYTE PTR [rax],al
  42366f:	add    dh,ch
  423671:	cmp    eax,DWORD PTR [rdx]
  423673:	add    BYTE PTR [rax],al
  423675:	add    BYTE PTR [rax],al
  423677:	add    al,bh
  423679:	cmp    eax,DWORD PTR [rdx]
  42367b:	add    BYTE PTR [rax],al
  42367d:	add    BYTE PTR [rax],al
  42367f:	add    BYTE PTR [rdx],al
  423681:	cmp    al,0x2
  423683:	add    BYTE PTR [rax],al
  423685:	add    BYTE PTR [rax],al
  423687:	add    BYTE PTR [rsp+rdi*1],cl
  42368a:	add    al,BYTE PTR [rax]
  42368c:	add    BYTE PTR [rax],al
  42368e:	add    BYTE PTR [rax],al
  423690:	(bad)  
  423691:	cmp    al,0x2
  423693:	add    BYTE PTR [rax],al
  423695:	add    BYTE PTR [rax],al
  423697:	add    BYTE PTR [rax],ah
  423699:	cmp    al,0x2
  42369b:	add    BYTE PTR [rax],al
  42369d:	add    BYTE PTR [rax],al
  42369f:	add    BYTE PTR [rdx],ch
  4236a1:	cmp    al,0x2
  4236a3:	add    BYTE PTR [rax],al
  4236a5:	add    BYTE PTR [rax],al
  4236a7:	add    BYTE PTR [rsp+rdi*1],dh
  4236aa:	add    al,BYTE PTR [rax]
  4236ac:	add    BYTE PTR [rax],al
  4236ae:	add    BYTE PTR [rax],al
  4236b0:	ds cmp al,0x2
  4236b3:	add    BYTE PTR [rax],al
  4236b5:	add    BYTE PTR [rax],al
  4236b7:	add    BYTE PTR [rsp+rdi*1+0x2],al
  4236bb:	add    BYTE PTR [rax],al
  4236bd:	add    BYTE PTR [rax],al
  4236bf:	add    BYTE PTR [rsi+0x3c],cl
  4236c2:	add    al,BYTE PTR [rax]
  4236c4:	add    BYTE PTR [rax],al
  4236c6:	add    BYTE PTR [rax],al
  4236c8:	pop    rax
  4236c9:	cmp    al,0x2
  4236cb:	add    BYTE PTR [rax],al
  4236cd:	add    BYTE PTR [rax],al
  4236cf:	add    BYTE PTR [rsp+rdi*1+0x2],ah
  4236d3:	add    BYTE PTR [rax],al
  4236d5:	add    BYTE PTR [rax],al
  4236d7:	add    BYTE PTR [rsi+0x3c],ch
  4236da:	add    al,BYTE PTR [rax]
	...
  4236e8:	js     0x423726
  4236ea:	add    al,BYTE PTR [rax]
  4236ec:	add    BYTE PTR [rax],al
  4236ee:	add    BYTE PTR [rax],al
  4236f0:	mov    BYTE PTR [rdx+rax*1],bh
  4236f3:	add    BYTE PTR [rax],al
  4236f5:	add    BYTE PTR [rax],al
  4236f7:	add    BYTE PTR [rsp+rdi*1+0x2],dl
  4236fe:	add    BYTE PTR [rax],al
  423700:	mov    eax,0x23c
	...
  42370d:	add    BYTE PTR [rax],al
  42370f:	add    al,bl
  423711:	add    BYTE PTR [rbp+riz*2+0x6c],al
  423715:	gs je  0x42377d
  423718:	rex.XB jb 0x423784
  42371b:	je     0x423786
  42371d:	movsxd esp,DWORD PTR [rcx+0x6c]
  423720:	push   rbx
  423721:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  423726:	outs   dx,BYTE PTR ds:[rsi]
  423727:	add    al,bh
  423729:	add    BYTE PTR [rbp+0x6e],al
  42372c:	je     0x423793
  42372e:	jb     0x423773
  423730:	jb     0x42379b
  423732:	je     0x42379d
  423734:	movsxd esp,DWORD PTR [rcx+0x6c]
  423737:	push   rbx
  423738:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42373d:	outs   dx,BYTE PTR ds:[rsi]
  42373e:	add    BYTE PTR [rax],al
  423740:	int    0x1
  423742:	rex.RXB
  423743:	gs je  0x423789
  423746:	jne    0x4237ba
  423748:	jb     0x4237af
  42374a:	outs   dx,BYTE PTR ds:[rsi]
  42374b:	je     0x42379d
  42374d:	jb     0x4237be
  42374f:	movsxd esp,DWORD PTR [rbp+0x73]
  423752:	jae    0x423754
  423754:	(bad)  
  423755:	add    DWORD PTR [rdi+0x65],eax
  423758:	je     0x42379d
  42375a:	jne    0x4237ce
  42375c:	jb     0x4237c3
  42375e:	outs   dx,BYTE PTR ds:[rsi]
  42375f:	je     0x4237b1
  423761:	jb     0x4237d2
  423763:	movsxd esp,DWORD PTR [rbp+0x73]
  423766:	jae    0x4237b1
  423768:	fs add dl,dl
  42376b:	add    DWORD PTR [rdi+0x65],eax
  42376e:	je     0x4237b3
  423770:	jne    0x4237e4
  423772:	jb     0x4237d9
  423774:	outs   dx,BYTE PTR ds:[rsi]
  423775:	je     0x4237cb
  423777:	push   0x64616572
  42377c:	rex.WB
  42377d:	add    BYTE PTR fs:[rax],al
  423780:	adc    BYTE PTR [rdx],al
  423782:	rex.RXB
  423783:	gs je  0x4237d2
  423786:	(bad)  
  423787:	jae    0x4237fd
  423789:	rex.RB jb 0x4237fe
  42378c:	outs   dx,DWORD PTR ds:[rsi]
  42378d:	jb     0x42378f
  42378f:	add    BYTE PTR [rdx],ah
  423791:	add    al,BYTE PTR [rdi+0x65]
  423794:	je     0x4237e3
  423796:	outs   dx,DWORD PTR ds:[rsi]
  423797:	fs jne 0x423806
  42379a:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
  4237a4:	add    BYTE PTR [rax],al
  4237a6:	(bad)  
  4237a7:	add    al,BYTE PTR [rdi+0x65]
  4237aa:	je     0x4237f9
  4237ac:	outs   dx,DWORD PTR ds:[rsi]
  4237ad:	fs jne 0x42381c
  4237b0:	gs rex.W (bad) 
  4237b3:	outs   dx,BYTE PTR ds:[rsi]
  4237b4:	fs ins BYTE PTR es:[rdi],dx
  4237b6:	gs push rdi
  4237b8:	add    BYTE PTR [rax],al
  4237ba:	push   rsi
  4237bb:	add    al,BYTE PTR [rdi+0x65]
  4237be:	je     0x423810
  4237c0:	jb     0x423831
  4237c2:	movsxd eax,DWORD PTR [rcx+0x64]
  4237c5:	fs jb  0x42382d
  4237c8:	jae    0x42383d
  4237ca:	add    BYTE PTR [rax],al
  4237cc:	jae    0x4237d0
  4237ce:	rex.RXB
  4237cf:	gs je  0x423825
  4237d2:	je     0x423835
  4237d4:	jb     0x42384a
  4237d6:	jne    0x423848
  4237d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4237da:	outs   dx,WORD PTR ds:[rsi]
  4237dc:	add    BYTE PTR [r10+0x74654702],cl
  4237e3:	push   rbx
  4237e4:	jns    0x423859
  4237e6:	je     0x42384d
  4237e8:	ins    DWORD PTR es:[rdi],dx
  4237e9:	push   rsp
  4237ea:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4237f1:	ins    BYTE PTR es:[rdi],dx
  4237f2:	gs push rsp
  4237f4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4237fb:	gs je  0x423852
  4237fe:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  423805:	je     0x423807
  423807:	add    cl,bh
  423809:	add    cl,BYTE PTR [rcx+0x6e]
  42380c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  423814:	rex.XB jb 0x423880
  423817:	je     0x423882
  423819:	movsxd esp,DWORD PTR [rcx+0x6c]
  42381c:	push   rbx
  42381d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  423822:	outs   dx,BYTE PTR ds:[rsi]
  423823:	add    BYTE PTR [rax],dl
  423825:	add    ecx,DWORD PTR [rcx+0x73]
  423828:	rex.R
  423829:	rex.X
  42382a:	rex.XB push r11
  42382c:	rex.WR
  42382d:	gs (bad) 
  42382f:	fs rex.X jns 0x4238a7
  423833:	gs rex.RB js 0x423837
  423837:	add    BYTE PTR [rbx+0x3],cl
  42383a:	rex.WR
  42383b:	gs (bad) 
  42383d:	jbe    0x4238a4
  42383f:	rex.XB jb 0x4238ab
  423842:	je     0x4238ad
  423844:	movsxd esp,DWORD PTR [rcx+0x6c]
  423847:	push   rbx
  423848:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42384d:	outs   dx,BYTE PTR ds:[rsi]
  42384e:	add    BYTE PTR [rax],al
  423850:	jp     0x423855
  423852:	rex.WRB jne 0x4238c1
  423855:	je     0x4238c0
  423857:	rex.X jns 0x4238ce
  42385a:	gs push rsp
  42385c:	outs   dx,DWORD PTR ds:[rsi]
  42385d:	push   rdi
  42385e:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  423866:	mov    ebx,0x65755103
  42386b:	jb     0x4238e6
  42386d:	push   rax
  42386e:	gs jb  0x4238d7
  423871:	outs   dx,DWORD PTR ds:[rsi]
  423872:	jb     0x4238e1
  423874:	(bad)  
  423875:	outs   dx,BYTE PTR ds:[rsi]
  423876:	movsxd esp,DWORD PTR [rbp+0x43]
  423879:	outs   dx,DWORD PTR ds:[rsi]
  42387a:	jne    0x4238ea
  42387c:	je     0x4238e3
  42387e:	jb     0x423880
  423880:	add    DWORD PTR [rdx+rdx*2],eax
  423883:	je     0x4238f1
  423885:	rex.B
  423886:	fs fs rex.RX jne 0x4238f9
  42388b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42388f:	outs   dx,BYTE PTR ds:[rsi]
  423890:	push   rsp
  423891:	(bad)  
  423892:	(bad)  
  423893:	ins    BYTE PTR es:[rdi],dx
  423894:	add    BYTE PTR gs:[rdx],al
  423897:	add    al,0x52
  423899:	je     0x423907
  42389b:	rex.XB (bad) 
  42389d:	jo     0x423913
  42389f:	jne    0x423913
  4238a1:	rex.XB outs dx,DWORD PTR gs:[rsi]
  4238a4:	outs   dx,BYTE PTR ds:[rsi]
  4238a5:	je     0x42390c
  4238a7:	js     0x42391d
  4238a9:	add    BYTE PTR [rcx],cl
  4238ab:	add    al,0x52
  4238ad:	je     0x42391b
  4238af:	rex.WR outs dx,DWORD PTR ds:[rsi]
  4238b1:	outs   dx,DWORD PTR ds:[rsi]
  4238b2:	imul   esi,DWORD PTR [rbp+0x70],0x46
  4238b6:	jne    0x423926
  4238b8:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4238bc:	outs   dx,BYTE PTR ds:[rsi]
  4238bd:	rex.RB outs dx,BYTE PTR ds:[rsi]
  4238bf:	je     0x423933
  4238c1:	jns    0x4238c3
  4238c3:	add    BYTE PTR [rax],dl
  4238c5:	add    al,0x52
  4238c7:	je     0x423935
  4238c9:	push   rsi
  4238ca:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  4238d1:	outs   dx,BYTE PTR ds:[rsi]
  4238d2:	ja     0x42393d
  4238d4:	outs   dx,BYTE PTR ds:[rsi]
  4238d5:	add    BYTE PTR fs:[rax],al
  4238d8:	lahf   
  4238d9:	add    al,0x53
  4238db:	gs je  0x423933
  4238de:	outs   dx,BYTE PTR ds:[rsi]
  4238df:	push   0x6c646e61
  4238e4:	gs fs rex.RB js 0x42394c
  4238e9:	gs jo  0x423960
  4238ec:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4238f3:	gs jb  0x4238f6
  4238f6:	lods   al,BYTE PTR ds:[rsi]
  4238f7:	add    al,0x53
  4238f9:	ins    BYTE PTR es:[rdi],dx
  4238fa:	gs gs jo 0x4238fe
  4238fe:	mov    edx,0x72655404
  423903:	ins    DWORD PTR es:[rdi],dx
  423904:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  42390b:	outs   dx,DWORD PTR ds:[rsi]
  42390c:	movsxd esp,DWORD PTR [rbp+0x73]
  42390f:	jae    0x423911
  423911:	add    cl,al
  423913:	add    al,0x54
  423915:	ins    BYTE PTR es:[rdi],dx
  423916:	jae    0x42395f
  423918:	gs je  0x423971
  42391b:	(bad)  
  42391c:	ins    BYTE PTR es:[rdi],dx
  42391d:	jne    0x423984
  42391f:	add    dh,cl
  423921:	add    al,0x55
  423923:	outs   dx,BYTE PTR ds:[rsi]
  423924:	push   0x6c646e61
  423929:	gs fs rex.RB js 0x423991
  42392e:	gs jo  0x4239a5
  423931:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  423938:	gs jb  0x42393b
  42393b:	add    ah,ch
  42393d:	add    al,0x56
  42393f:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  423946:	jb     0x4239b7
  423948:	je     0x4239af
  42394a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  42394e:	out    dx,al
  42394f:	add    al,0x56
  423951:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  423958:	jne    0x4239bf
  42395a:	jb     0x4239d5
  42395c:	add    BYTE PTR [rax],al
  42395e:	(bad)  
  42395f:	add    eax,0x65646957
  423964:	rex.XB push 0x6f547261
  42396a:	rex.WRB jne 0x4239d9
  42396d:	je     0x4239d8
  42396f:	rex.X jns 0x4239e6
  423972:	add    BYTE PTR gs:[rdx],dh
  423975:	add    eax,0x5f435f5f
  42397a:	jae    0x4239ec
  42397c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  423980:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  423987:	ins    BYTE PTR es:[rdi],dx
  423988:	gs jb  0x42398b
  42398b:	add    BYTE PTR [rdi],bh
  42398d:	add    BYTE PTR [rdi+0x5f],bl
  423990:	pop    rdi
  423991:	ins    BYTE PTR es:[rdi],dx
  423992:	movsxd ebx,DWORD PTR [rdi+0x63]
  423995:	outs   dx,DWORD PTR ds:[rsi]
  423996:	fs gs jo 0x4239fb
  42399a:	addr32 gs pop rdi
  42399d:	data16 jne 0x423a0e
  4239a0:	movsxd eax,DWORD PTR [rax]
  4239a2:	rex.WRX add BYTE PTR [rdi+0x5f],r11b
  4239a6:	fs ins BYTE PTR es:[rdi],dx
  4239a8:	ins    BYTE PTR es:[rdi],dx
  4239a9:	outs   dx,DWORD PTR ds:[rsi]
  4239aa:	outs   dx,BYTE PTR ds:[rsi]
  4239ab:	gs js  0x423a17
  4239ae:	je     0x4239b0
  4239b0:	push   rcx
  4239b1:	add    BYTE PTR [rdi+0x5f],bl
  4239b4:	addr32 gs je 0x423a25
  4239b8:	(bad)  
  4239b9:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  4239c0:	push   rdx
  4239c1:	add    BYTE PTR [rdi+0x5f],bl
  4239c4:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  4239cb:	add    BYTE PTR [rbx+0x0],dl
  4239ce:	pop    rdi
  4239cf:	pop    rdi
  4239d0:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  4239d7:	movsxd eax,DWORD PTR [rax]
  4239d9:	add    BYTE PTR [rdx+0x0],bl
  4239dc:	pop    rdi
  4239dd:	pop    rdi
  4239de:	ins    BYTE PTR es:[rdi],dx
  4239df:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4239e2:	jbe    0x423a43
  4239e4:	imul   ebp,DWORD PTR [rsi+0x69],0x5b000074
  4239eb:	add    BYTE PTR [rdi+0x5f],bl
  4239ee:	ins    DWORD PTR es:[rdi],dx
  4239ef:	(bad)  
  4239f0:	pop    rdi
  4239f1:	movsxd esi,DWORD PTR [rbp+0x72]
  4239f4:	pop    rdi
  4239f5:	ins    DWORD PTR es:[rdi],dx
  4239f6:	(bad)  
  4239f7:	js     0x4239f9
  4239f9:	add    BYTE PTR [rax+0x0],ah
  4239fc:	pop    rdi
  4239fd:	pop    rdi
  4239fe:	jae    0x423a65
  423a00:	je     0x423a61
  423a02:	(bad)  
  423a03:	jo     0x423a75
  423a05:	pop    rdi
  423a06:	je     0x423a81
  423a08:	jo     0x423a6f
  423a0a:	add    BYTE PTR [rax],al
  423a0c:	(bad)  
  423a0d:	add    BYTE PTR [rdi+0x5f],bl
  423a10:	jae    0x423a77
  423a12:	je     0x423a89
  423a14:	jae    0x423a7b
  423a16:	jb     0x423a85
  423a18:	(bad)  
  423a19:	je     0x423a83
  423a1b:	gs jb  0x423a90
  423a1e:	add    BYTE PTR [rax],al
  423a20:	jno    0x423a22
  423a22:	pop    rdi
  423a23:	(bad)  
  423a24:	movsxd ebp,DWORD PTR [rbp+0x64]
  423a27:	ins    BYTE PTR es:[rdi],dx
  423a28:	outs   dx,BYTE PTR ds:[rsi]
  423a29:	add    BYTE PTR [rax+0x0],bh
  423a2c:	pop    rdi
  423a2d:	(bad)  
  423a2e:	ins    DWORD PTR es:[rdi],dx
  423a2f:	jae    0x423a98
  423a31:	pop    rdi
  423a32:	gs js  0x423a9e
  423a35:	je     0x423a37
  423a37:	add    BYTE PTR [rdx+0x65635f00],cl
  423a3d:	js     0x423aa8
  423a3f:	je     0x423a41
  423a41:	add    BYTE PTR [rdx+0x72655f00],bh
  423a47:	jb     0x423ab7
  423a49:	outs   dx,DWORD PTR ds:[rsi]
  423a4a:	add    BYTE PTR [rax],al
  423a4c:	fiadd  DWORD PTR [rax]
  423a4e:	pop    rdi
  423a4f:	ins    WORD PTR es:[rdi],dx
  423a51:	outs   dx,DWORD PTR ds:[rsi]
  423a52:	fs add BYTE PTR gs:[rax],al
  423a56:	sbb    al,BYTE PTR [rcx]
  423a58:	pop    rdi
  423a59:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  423a60:	ins    DWORD PTR es:[rdi],dx
  423a61:	add    BYTE PTR [rax+0x6f6c5f01],al
  423a67:	movsxd ebp,DWORD PTR [rbx+0x0]
  423a6a:	and    eax,0x6e6f5f02
  423a6f:	gs js  0x423adb
  423a72:	je     0x423a74
  423a74:	sub    al,BYTE PTR [rdx]
  423a76:	pop    rdi
  423a77:	jo     0x423adc
  423a79:	ins    BYTE PTR es:[rdi],dx
  423a7a:	outs   dx,DWORD PTR ds:[rsi]
  423a7b:	jae    0x423ae2
  423a7d:	add    BYTE PTR [rsi],ch
  423a7f:	add    bl,BYTE PTR [rdi+0x70]
  423a82:	outs   dx,DWORD PTR ds:[rsi]
  423a83:	jo     0x423aea
  423a85:	outs   dx,BYTE PTR ds:[rsi]
  423a86:	add    BYTE PTR [rax],al
  423a88:	(bad)
  423a8c:	outs   dx,BYTE PTR ds:[rsi]
  423a8d:	ins    BYTE PTR es:[rdi],dx
  423a8e:	outs   dx,DWORD PTR ds:[rsi]
  423a8f:	movsxd ebp,DWORD PTR [rbx+0x0]
  423a92:	jg     0x423a97
  423a94:	(bad)  
  423a95:	(bad)  
  423a96:	outs   dx,DWORD PTR ds:[rsi]
  423a97:	jb     0x423b0d
  423a99:	add    BYTE PTR [rcx+0x6f636103],al
  423a9f:	jae    0x423aa1
  423aa1:	add    BYTE PTR [rbx+rax*1+0x6e697361],al
  423aa8:	add    BYTE PTR [rax],al
  423aaa:	xchg   BYTE PTR [rbx],al
  423aac:	(bad)  
  423aad:	je     0x423b10
  423aaf:	outs   dx,BYTE PTR ds:[rsi]
  423ab0:	add    BYTE PTR [rax],al
  423ab2:	nop
  423ab3:	add    esp,DWORD PTR [rbx+0x61]
  423ab6:	ins    BYTE PTR es:[rdi],dx
  423ab7:	ins    BYTE PTR es:[rdi],dx
  423ab8:	outs   dx,DWORD PTR ds:[rsi]
  423ab9:	movsxd eax,DWORD PTR [rax]
  423abb:	add    BYTE PTR [rbp+0x69786503],bl
  423ac1:	je     0x423ac3
  423ac3:	add    BYTE PTR [rcx+0x6c636603],ah
  423ac9:	outs   dx,DWORD PTR ds:[rsi]
  423aca:	jae    0x423b31
  423acc:	add    BYTE PTR [rax],al
  423ace:	movabs ds:0xa40000666f656603,al
  423ad7:	add    esp,DWORD PTR [rsi+0x66]
  423ada:	ins    BYTE PTR es:[rdi],dx
  423adb:	jne    0x423b50
  423add:	push   0x3a70000
  423ae2:	data16 addr32 gs je 0x423b5a
  423ae7:	add    BYTE PTR [rsi+0x706f6603],ch
  423aed:	outs   dx,BYTE PTR gs:[rsi]
  423aef:	add    BYTE PTR [rax+0x72706603],dh
  423af5:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  423afc:	data16 jo 0x423b74
  423aff:	je     0x423b64
  423b01:	add    BYTE PTR [rbx+0x75706603],dh
  423b07:	je     0x423b7c
  423b09:	add    BYTE PTR [rdi+0x65726603],dh
  423b0f:	add    BYTE PTR gs:[rax],al
  423b12:	ret    0x6603
  423b15:	ja     0x423b89
  423b17:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  423b1f:	gs je  0x423b87
  423b22:	outs   dx,BYTE PTR ds:[rsi]
  423b23:	jbe    0x423b25
  423b25:	add    dl,ch
  423b27:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  423b2b:	(bad)  
  423b2c:	ins    BYTE PTR es:[rdi],dx
  423b2d:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  423b31:	jbe    0x423b33
  423b33:	add    ch,ch
  423b35:	add    ebp,DWORD PTR [rdi+rbp*2+0x67]
  423b39:	xor    DWORD PTR [rax],esi
  423b3b:	add    al,dh
  423b3d:	add    ebp,DWORD PTR [rbp+0x61]
  423b40:	ins    BYTE PTR es:[rdi],dx
  423b41:	ins    BYTE PTR es:[rdi],dx
  423b42:	outs   dx,DWORD PTR ds:[rsi]
  423b43:	movsxd eax,DWORD PTR [rax]
  423b45:	add    al,bh
  423b47:	add    ebp,DWORD PTR [rbp+0x65]
  423b4a:	ins    DWORD PTR es:[rdi],dx
  423b4b:	movsxd esi,DWORD PTR [rax+0x79]
  423b4e:	add    BYTE PTR [rax],al
  423b50:	inc    BYTE PTR [rbx]
  423b52:	jo     0x423bb9
  423b54:	jb     0x423bc8
  423b56:	outs   dx,DWORD PTR ds:[rsi]
  423b57:	jb     0x423b59
  423b59:	add    BYTE PTR [rbx],al
  423b5b:	add    al,0x70
  423b5d:	jne    0x423bd3
  423b5f:	movsxd eax,DWORD PTR [rax]
  423b61:	add    BYTE PTR [rsp+rax*1],al
  423b64:	jo     0x423bdb
  423b66:	je     0x423bcb
  423b68:	push   0x5007261
  423b6d:	add    al,0x70
  423b6f:	jne    0x423be5
  423b71:	jae    0x423b73
  423b73:	add    BYTE PTR [rax],cl
  423b75:	add    al,0x71
  423b77:	jae    0x423be8
  423b79:	jb     0x423bef
  423b7b:	add    BYTE PTR [rsp+rax*1],cl
  423b7e:	jb     0x423be5
  423b80:	(bad)  
  423b81:	ins    BYTE PTR es:[rdi],dx
  423b82:	ins    BYTE PTR es:[rdi],dx
  423b83:	outs   dx,DWORD PTR ds:[rsi]
  423b84:	movsxd eax,DWORD PTR [rax]
  423b86:	adc    al,0x4
  423b88:	jae    0x423bef
  423b8a:	je     0x423bf8
  423b8c:	outs   dx,DWORD PTR ds:[rsi]
  423b8d:	movsxd esp,DWORD PTR [rcx+0x6c]
  423b90:	add    BYTE PTR gs:[rsi],dl
  423b93:	add    al,0x73
  423b95:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  423b9c:	and    DWORD PTR [rbx+rsi*2],eax
  423b9f:	je     0x423c13
  423ba1:	movsxd esp,DWORD PTR [rcx+0x74]
  423ba4:	add    BYTE PTR [rax],al
  423ba6:	and    eax,DWORD PTR [rbx+rsi*2]
  423ba9:	je     0x423c1d
  423bab:	movsxd ebp,DWORD PTR [rax+0x72]
  423bae:	add    BYTE PTR [rax],al
  423bb0:	and    al,0x4
  423bb2:	jae    0x423c28
  423bb4:	jb     0x423c19
  423bb6:	ins    DWORD PTR es:[rdi],dx
  423bb7:	jo     0x423bb9
  423bb9:	add    BYTE PTR [rsi],ah
  423bbb:	add    al,0x73
  423bbd:	je     0x423c31
  423bbf:	movsxd esi,DWORD PTR [rax+0x79]
  423bc2:	add    BYTE PTR [rax],al
  423bc4:	sub    BYTE PTR [rbx+rsi*2],al
  423bc7:	je     0x423c3b
  423bc9:	movsxd esi,DWORD PTR [rbx+0x70]
  423bcc:	outs   dx,BYTE PTR ds:[rsi]
  423bcd:	add    BYTE PTR [rcx],ch
  423bcf:	add    al,0x73
  423bd1:	je     0x423c45
  423bd3:	gs jb  0x423c48
  423bd6:	outs   dx,DWORD PTR ds:[rsi]
  423bd7:	jb     0x423bd9
  423bd9:	add    BYTE PTR [rbx],ch
  423bdb:	add    al,0x73
  423bdd:	je     0x423c51
  423bdf:	ins    BYTE PTR es:[rdi],dx
  423be0:	outs   dx,BYTE PTR gs:[rsi]
  423be2:	add    BYTE PTR [rax],al
  423be4:	cs add al,0x73
  423be7:	je     0x423c5b
  423be9:	outs   dx,BYTE PTR ds:[rsi]
  423bea:	movsxd ebp,DWORD PTR [rbp+0x70]
  423bed:	add    BYTE PTR [rdi],ch
  423bef:	add    al,0x73
  423bf1:	je     0x423c65
  423bf3:	outs   dx,BYTE PTR ds:[rsi]
  423bf4:	movsxd esi,DWORD PTR [rax+0x79]
  423bf7:	add    BYTE PTR [rcx],dh
  423bf9:	add    al,0x73
  423bfb:	je     0x423c6f
  423bfd:	jo     0x423c61
  423bff:	jb     0x423c6c
  423c01:	add    BYTE PTR [rdx],dh
  423c03:	add    al,0x73
  423c05:	je     0x423c79
  423c07:	jb     0x423c6c
  423c09:	push   0x4330072
  423c0e:	jae    0x423c84
  423c10:	jb     0x423c85
  423c12:	jo     0x423c82
  423c14:	add    BYTE PTR [rax],al
  423c16:	xor    al,0x4
  423c18:	jae    0x423c8e
  423c1a:	jb     0x423c8f
  423c1c:	je     0x423c90
  423c1e:	add    BYTE PTR [rax],al
  423c20:	ss add al,0x73
  423c23:	je     0x423c97
  423c25:	je     0x423c96
  423c27:	imul   eax,DWORD PTR [rax],0x0
  423c2a:	cmp    BYTE PTR [rbx+rsi*2],al
  423c2d:	je     0x423ca1
  423c2f:	je     0x423ca0
  423c31:	ins    BYTE PTR es:[rdi],dx
  423c32:	add    BYTE PTR [rax],al
  423c34:	add    al,0x73
  423c37:	jns    0x423cac
  423c39:	je     0x423ca0
  423c3b:	ins    DWORD PTR es:[rdi],dx
  423c3c:	add    BYTE PTR [rax],al
  423c3e:	rex.B add al,0x74
  423c41:	(bad)  
  423c42:	outs   dx,BYTE PTR ds:[rsi]
  423c43:	add    BYTE PTR [rax+0x4],cl
  423c46:	je     0x423cb7
  423c48:	ins    BYTE PTR es:[rdi],dx
  423c49:	outs   dx,DWORD PTR ds:[rsi]
  423c4a:	ja     0x423cb1
  423c4c:	jb     0x423c4e
  423c4e:	rex.WR add al,0x75
  423c51:	outs   dx,BYTE PTR ds:[rsi]
  423c52:	addr32 gs je 0x423cb9
  423c56:	add    BYTE PTR [rax],al
  423c58:	rex.WRX add al,0x76
  423c5b:	data16 jo 0x423cd0
  423c5e:	imul   ebp,DWORD PTR [rsi+0x74],0x61000066
  423c65:	add    al,0x77
  423c67:	movsxd esi,DWORD PTR [rbx+0x6c]
  423c6a:	outs   dx,BYTE PTR gs:[rsi]
  423c6c:	add    BYTE PTR [rax],al
  423c6e:	iret   
  423c6f:	add    al,0x5f
  423c71:	jo     0x423ce8
  423c73:	je     0x423cda
  423c75:	outs   dx,BYTE PTR ds:[rsi]
  423c76:	jbe    0x423c78
  423c78:	ret    
  423c79:	add    BYTE PTR [rcx+0x64],ah
  423c7c:	fs pop rdi
  423c7e:	push   0x6f747369
  423c83:	jb     0x423cfe
  423c85:	add    BYTE PTR [rax],al
  423c87:	add    bl,bh
  423c89:	add    BYTE PTR [rdx+0x65],dh
  423c8c:	(bad)  
  423c8d:	fs ins BYTE PTR es:[rdi],dx
  423c8f:	imul   ebp,DWORD PTR [rsi+0x65],0x1150000
  423c96:	jb     0x423d04
  423c98:	pop    rdi
  423c99:	(bad)  
  423c9b:	jae    0x423d06
  423c9d:	movsxd ebx,DWORD PTR [rdi+0x77]
  423ca0:	outs   dx,DWORD PTR ds:[rsi]
  423ca1:	jb     0x423d07
  423ca3:	pop    rdi
  423ca4:	(bad)
  423ca9:	pop    rdi
  423caa:	movsxd ebp,DWORD PTR [rax+0x61]
  423cad:	jb     0x423d10
  423caf:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  423cb3:	jae    0x423cb5
  423cb5:	add    BYTE PTR [rax],al
  423cb7:	add    BYTE PTR [rdx],bh
  423cb9:	add    DWORD PTR [rdx+0x6c],esi
  423cbc:	pop    rdi
  423cbd:	movsxd ebp,DWORD PTR [rdi+0x6d]
  423cc0:	jo     0x423d2e
  423cc2:	gs je  0x423d2e
  423cc5:	outs   dx,DWORD PTR ds:[rsi]
  423cc6:	outs   dx,BYTE PTR ds:[rsi]
  423cc7:	pop    rdi
  423cc8:	outs   dx,BYTE PTR gs:[rsi]
  423cca:	je     0x423d3e
  423ccc:	jns    0x423d2d
  423cce:	data16 jne 0x423d3f
  423cd1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  423cd5:	outs   dx,BYTE PTR ds:[rsi]
  423cd6:	add    BYTE PTR [rax],al
  423cd8:	add    BYTE PTR [rax],dh
  423cda:	add    al,BYTE PTR [rax]
  423cdc:	add    BYTE PTR [rax],dh
  423cde:	add    al,BYTE PTR [rax]
  423ce0:	add    BYTE PTR [rax],dh
  423ce2:	add    al,BYTE PTR [rax]
  423ce4:	add    BYTE PTR [rax],dh
  423ce6:	add    al,BYTE PTR [rax]
  423ce8:	add    BYTE PTR [rax],dh
  423cea:	add    al,BYTE PTR [rax]
  423cec:	add    BYTE PTR [rax],dh
  423cee:	add    al,BYTE PTR [rax]
  423cf0:	add    BYTE PTR [rax],dh
  423cf2:	add    al,BYTE PTR [rax]
  423cf4:	add    BYTE PTR [rax],dh
  423cf6:	add    al,BYTE PTR [rax]
  423cf8:	add    BYTE PTR [rax],dh
  423cfa:	add    al,BYTE PTR [rax]
  423cfc:	add    BYTE PTR [rax],dh
  423cfe:	add    al,BYTE PTR [rax]
  423d00:	add    BYTE PTR [rax],dh
  423d02:	add    al,BYTE PTR [rax]
  423d04:	add    BYTE PTR [rax],dh
  423d06:	add    al,BYTE PTR [rax]
  423d08:	add    BYTE PTR [rax],dh
  423d0a:	add    al,BYTE PTR [rax]
  423d0c:	add    BYTE PTR [rax],dh
  423d0e:	add    al,BYTE PTR [rax]
  423d10:	add    BYTE PTR [rax],dh
  423d12:	add    al,BYTE PTR [rax]
  423d14:	add    BYTE PTR [rax],dh
  423d16:	add    al,BYTE PTR [rax]
  423d18:	add    BYTE PTR [rax],dh
  423d1a:	add    al,BYTE PTR [rax]
  423d1c:	add    BYTE PTR [rax],dh
  423d1e:	add    al,BYTE PTR [rax]
  423d20:	add    BYTE PTR [rax],dh
  423d22:	add    al,BYTE PTR [rax]
  423d24:	add    BYTE PTR [rax],dh
  423d26:	add    al,BYTE PTR [rax]
  423d28:	add    BYTE PTR [rax],dh
  423d2a:	add    al,BYTE PTR [rax]
  423d2c:	add    BYTE PTR [rax],dh
  423d2e:	add    al,BYTE PTR [rax]
  423d30:	add    BYTE PTR [rax],dh
  423d32:	add    al,BYTE PTR [rax]
  423d34:	add    BYTE PTR [rax],dh
  423d36:	add    al,BYTE PTR [rax]
  423d38:	add    BYTE PTR [rax],dh
  423d3a:	add    al,BYTE PTR [rax]
  423d3c:	add    BYTE PTR [rax],dh
  423d3e:	add    al,BYTE PTR [rax]
  423d40:	add    BYTE PTR [rax],dh
  423d42:	add    al,BYTE PTR [rax]
  423d44:	add    BYTE PTR [rax],dh
  423d46:	add    al,BYTE PTR [rax]
  423d48:	add    BYTE PTR [rax],dh
  423d4a:	add    al,BYTE PTR [rax]
  423d4c:	add    BYTE PTR [rax],dh
  423d4e:	add    al,BYTE PTR [rax]
  423d50:	rex.WXB
  423d51:	rex.RB push r10
  423d53:	rex.WRX
  423d54:	rex.RB
  423d55:	xor    r14,QWORD PTR [rdx]
  423d58:	cs fs ins BYTE PTR es:[rdi],dx
  423d5b:	ins    BYTE PTR es:[rdi],dx
  423d5c:	add    BYTE PTR [rax],al
  423d5e:	add    BYTE PTR [rax],al
  423d60:	adc    al,0x30
  423d62:	add    al,BYTE PTR [rax]
  423d64:	adc    al,0x30
  423d66:	add    al,BYTE PTR [rax]
  423d68:	adc    al,0x30
  423d6a:	add    al,BYTE PTR [rax]
  423d6c:	adc    al,0x30
  423d6e:	add    al,BYTE PTR [rax]
  423d70:	adc    al,0x30
  423d72:	add    al,BYTE PTR [rax]
  423d74:	adc    al,0x30
  423d76:	add    al,BYTE PTR [rax]
  423d78:	adc    al,0x30
  423d7a:	add    al,BYTE PTR [rax]
  423d7c:	adc    al,0x30
  423d7e:	add    al,BYTE PTR [rax]
  423d80:	adc    al,0x30
  423d82:	add    al,BYTE PTR [rax]
  423d84:	adc    al,0x30
  423d86:	add    al,BYTE PTR [rax]
  423d88:	adc    al,0x30
  423d8a:	add    al,BYTE PTR [rax]
  423d8c:	adc    al,0x30
  423d8e:	add    al,BYTE PTR [rax]
  423d90:	adc    al,0x30
  423d92:	add    al,BYTE PTR [rax]
  423d94:	adc    al,0x30
  423d96:	add    al,BYTE PTR [rax]
  423d98:	adc    al,0x30
  423d9a:	add    al,BYTE PTR [rax]
  423d9c:	adc    al,0x30
  423d9e:	add    al,BYTE PTR [rax]
  423da0:	adc    al,0x30
  423da2:	add    al,BYTE PTR [rax]
  423da4:	adc    al,0x30
  423da6:	add    al,BYTE PTR [rax]
  423da8:	adc    al,0x30
  423daa:	add    al,BYTE PTR [rax]
  423dac:	adc    al,0x30
  423dae:	add    al,BYTE PTR [rax]
  423db0:	adc    al,0x30
  423db2:	add    al,BYTE PTR [rax]
  423db4:	adc    al,0x30
  423db6:	add    al,BYTE PTR [rax]
  423db8:	adc    al,0x30
  423dba:	add    al,BYTE PTR [rax]
  423dbc:	adc    al,0x30
  423dbe:	add    al,BYTE PTR [rax]
  423dc0:	adc    al,0x30
  423dc2:	add    al,BYTE PTR [rax]
  423dc4:	adc    al,0x30
  423dc6:	add    al,BYTE PTR [rax]
  423dc8:	adc    al,0x30
  423dca:	add    al,BYTE PTR [rax]
  423dcc:	adc    al,0x30
  423dce:	add    al,BYTE PTR [rax]
  423dd0:	adc    al,0x30
  423dd2:	add    al,BYTE PTR [rax]
  423dd4:	adc    al,0x30
  423dd6:	add    al,BYTE PTR [rax]
  423dd8:	adc    al,0x30
  423dda:	add    al,BYTE PTR [rax]
  423ddc:	adc    al,0x30
  423dde:	add    al,BYTE PTR [rax]
  423de0:	adc    al,0x30
  423de2:	add    al,BYTE PTR [rax]
  423de4:	adc    al,0x30
  423de6:	add    al,BYTE PTR [rax]
  423de8:	adc    al,0x30
  423dea:	add    al,BYTE PTR [rax]
  423dec:	adc    al,0x30
  423dee:	add    al,BYTE PTR [rax]
  423df0:	adc    al,0x30
  423df2:	add    al,BYTE PTR [rax]
  423df4:	adc    al,0x30
  423df6:	add    al,BYTE PTR [rax]
  423df8:	adc    al,0x30
  423dfa:	add    al,BYTE PTR [rax]
  423dfc:	adc    al,0x30
  423dfe:	add    al,BYTE PTR [rax]
  423e00:	adc    al,0x30
  423e02:	add    al,BYTE PTR [rax]
  423e04:	adc    al,0x30
  423e06:	add    al,BYTE PTR [rax]
  423e08:	adc    al,0x30
  423e0a:	add    al,BYTE PTR [rax]
  423e0c:	adc    al,0x30
  423e0e:	add    al,BYTE PTR [rax]
  423e10:	adc    al,0x30
  423e12:	add    al,BYTE PTR [rax]
  423e14:	adc    al,0x30
  423e16:	add    al,BYTE PTR [rax]
  423e18:	adc    al,0x30
  423e1a:	add    al,BYTE PTR [rax]
  423e1c:	adc    al,0x30
  423e1e:	add    al,BYTE PTR [rax]
  423e20:	adc    al,0x30
  423e22:	add    al,BYTE PTR [rax]
  423e24:	adc    al,0x30
  423e26:	add    al,BYTE PTR [rax]
  423e28:	adc    al,0x30
  423e2a:	add    al,BYTE PTR [rax]
  423e2c:	adc    al,0x30
  423e2e:	add    al,BYTE PTR [rax]
  423e30:	adc    al,0x30
  423e32:	add    al,BYTE PTR [rax]
  423e34:	adc    al,0x30
  423e36:	add    al,BYTE PTR [rax]
  423e38:	adc    al,0x30
  423e3a:	add    al,BYTE PTR [rax]
  423e3c:	adc    al,0x30
  423e3e:	add    al,BYTE PTR [rax]
  423e40:	adc    al,0x30
  423e42:	add    al,BYTE PTR [rax]
  423e44:	adc    al,0x30
  423e46:	add    al,BYTE PTR [rax]
  423e48:	adc    al,0x30
  423e4a:	add    al,BYTE PTR [rax]
  423e4c:	adc    al,0x30
  423e4e:	add    al,BYTE PTR [rax]
  423e50:	adc    al,0x30
  423e52:	add    al,BYTE PTR [rax]
  423e54:	adc    al,0x30
  423e56:	add    al,BYTE PTR [rax]
  423e58:	adc    al,0x30
  423e5a:	add    al,BYTE PTR [rax]
  423e5c:	adc    al,0x30
  423e5e:	add    al,BYTE PTR [rax]
  423e60:	adc    al,0x30
  423e62:	add    al,BYTE PTR [rax]
  423e64:	adc    al,0x30
  423e66:	add    al,BYTE PTR [rax]
  423e68:	adc    al,0x30
  423e6a:	add    al,BYTE PTR [rax]
  423e6c:	adc    al,0x30
  423e6e:	add    al,BYTE PTR [rax]
  423e70:	adc    al,0x30
  423e72:	add    al,BYTE PTR [rax]
  423e74:	adc    al,0x30
  423e76:	add    al,BYTE PTR [rax]
  423e78:	adc    al,0x30
  423e7a:	add    al,BYTE PTR [rax]
  423e7c:	ins    DWORD PTR es:[rdi],dx
  423e7d:	jae    0x423ef5
  423e7f:	movsxd esi,DWORD PTR [rdx+0x74]
  423e82:	cs fs ins BYTE PTR es:[rdi],dx
  423e85:	ins    BYTE PTR es:[rdi],dx
  423e86:	add    BYTE PTR [rax],al
  423e88:	sub    BYTE PTR [rax],dh
  423e8a:	add    al,BYTE PTR [rax]
  423e8c:	sub    BYTE PTR [rax],dh
  423e8e:	add    al,BYTE PTR [rax]
  423e90:	sub    BYTE PTR [rax],dh
  423e92:	add    al,BYTE PTR [rax]
  423e94:	sub    BYTE PTR [rax],dh
  423e96:	add    al,BYTE PTR [rax]
  423e98:	ins    BYTE PTR es:[rdi],dx
  423e99:	imul   esp,DWORD PTR [rdx+0x72],0x6c646165
  423ea0:	imul   ebp,DWORD PTR [rsi+0x65],0x6c642e36
  423ea7:	ins    BYTE PTR es:[rdi],dx
  423ea8:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

0000000000424000 <.CRT>:
	...
  424008:	(bad)  
  424009:	adc    DWORD PTR [rax+0x0],eax
	...
  424020:	adc    BYTE PTR [rax],dl
  424022:	add    BYTE PTR [rax],al
  424025:	add    BYTE PTR [rax],al
  424027:	add    BYTE PTR [rax-0x48],ah
  42402a:	add    BYTE PTR [rax],al
	...
  42403d:	add    BYTE PTR [rax],al
  42403f:	add    BYTE PTR [rax+0x40ba],dl
  424045:	add    BYTE PTR [rax],al
  424047:	add    BYTE PTR [rax-0x46],ah
  42404a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000425000 <.tls>:
	...
  425020:	add    BYTE PTR [rax+0x42],dl
  425023:	add    BYTE PTR [rax],al
  425025:	add    BYTE PTR [rax],al
  425027:	add    BYTE PTR [rax+0x50],ah
  42502a:	rex.X add BYTE PTR [rax],al
  42502d:	add    BYTE PTR [rax],al
  42502f:	add    BYTE PTR [rsp+rcx*1],bl
  425032:	rex.X add BYTE PTR [rax],al
  425035:	add    BYTE PTR [rax],al
  425037:	add    BYTE PTR [rax+0x40],al
  42503a:	rex.X add BYTE PTR [rax],al
	...
