
cb1454687b08797f9cd506fde40157d5688c4494772f0836054bf75f5a2bb468.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	rex push rbx
   14000100a:	sub    rsp,0x90
   140001011:	mov    rax,QWORD PTR [rip+0x7ff0]        # 0x140009008
   140001018:	xor    rax,rsp
   14000101b:	mov    QWORD PTR [rsp+0x80],rax
   140001023:	call   QWORD PTR [rip+0x522f]        # 0x140006258
   140001029:	xor    r9d,r9d
   14000102c:	xor    r8d,r8d
   14000102f:	mov    rcx,rax
   140001032:	mov    rbx,rax
   140001035:	lea    edx,[r9+0x31]
   140001039:	call   QWORD PTR [rip+0x51e1]        # 0x140006220
   14000103f:	test   rax,rax
   140001042:	je     0x140001086
   140001044:	lea    r8,[rsp+0x20]
   140001049:	mov    edx,0x5c
   14000104e:	mov    rcx,rax
   140001051:	call   QWORD PTR [rip+0x5039]        # 0x140006090
   140001057:	test   eax,eax
   140001059:	je     0x140001086
   14000105b:	lea    rcx,[rsp+0x20]
   140001060:	mov    DWORD PTR [rsp+0x30],0x2bc
   140001068:	call   QWORD PTR [rip+0x502a]        # 0x140006098
   14000106e:	test   rax,rax
   140001071:	je     0x140001086
   140001073:	xor    r9d,r9d
   140001076:	mov    r8,rax
   140001079:	mov    rcx,rbx
   14000107c:	lea    edx,[r9+0x30]
   140001080:	call   QWORD PTR [rip+0x519a]        # 0x140006220
   140001086:	mov    rcx,QWORD PTR [rsp+0x80]
   14000108e:	xor    rcx,rsp
   140001091:	call   0x140004c70
   140001096:	add    rsp,0x90
   14000109d:	pop    rbx
   14000109e:	ret    
   14000109f:	int3   
   1400010a0:	int3   
   1400010a1:	int3   
   1400010a2:	int3   
   1400010a3:	int3   
   1400010a4:	int3   
   1400010a5:	int3   
   1400010a6:	int3   
   1400010a7:	int3   
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	sub    rsp,0x28
   1400010b4:	cmp    BYTE PTR [rip+0x8a0d],0x1        # 0x140009ac8
   1400010bb:	jne    0x1400010d1
   1400010bd:	lea    rcx,[rip+0x8a06]        # 0x140009aca
   1400010c4:	call   QWORD PTR [rip+0x5006]        # 0x1400060d0
   1400010ca:	mov    BYTE PTR [rip+0x89f7],0x0        # 0x140009ac8
   1400010d1:	mov    rcx,QWORD PTR [rip+0x89e8]        # 0x140009ac0
   1400010d8:	call   QWORD PTR [rip+0x519a]        # 0x140006278
   1400010de:	xor    r9d,r9d
   1400010e1:	mov    edx,0x471
   1400010e6:	mov    rcx,rax
   1400010e9:	lea    r8d,[r9+0x5]
   1400010ed:	add    rsp,0x28
   1400010f1:	rex.W jmp QWORD PTR [rip+0x5178]        # 0x140006270
   1400010f8:	int3   
   1400010f9:	int3   
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	lea    rcx,[rip+0x89c3]        # 0x140009aca
   140001107:	mov    BYTE PTR [rip+0x89ba],0x1        # 0x140009ac8
   14000110e:	sub    rdx,rcx
   140001111:	mov    r8d,0x104
   140001117:	xor    r9d,r9d
   14000111a:	lea    rax,[r8+0x7ffffefa]
   140001121:	test   rax,rax
   140001124:	je     0x14000113c
   140001126:	movzx  eax,WORD PTR [rdx+rcx*1]
   14000112a:	test   ax,ax
   14000112d:	je     0x14000113c
   14000112f:	mov    WORD PTR [rcx],ax
   140001132:	add    rcx,0x2
   140001136:	sub    r8,0x1
   14000113a:	jne    0x14000111a
   14000113c:	test   r8,r8
   14000113f:	jne    0x140001145
   140001141:	sub    rcx,0x2
   140001145:	mov    WORD PTR [rcx],r9w
   140001149:	ret    
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	mov    QWORD PTR [rsp+0x10],rbx
   140001155:	push   rdi
   140001156:	sub    rsp,0x220
   14000115d:	mov    rax,QWORD PTR [rip+0x7ea4]        # 0x140009008
   140001164:	xor    rax,rsp
   140001167:	mov    QWORD PTR [rsp+0x210],rax
   14000116f:	mov    rdi,rcx
   140001172:	lea    rdx,[rsp+0x20]
   140001177:	mov    ecx,0xf6
   14000117c:	call   QWORD PTR [rip+0x4fb6]        # 0x140006138
   140001182:	xor    ebx,ebx
   140001184:	test   eax,eax
   140001186:	je     0x1400011a4
   140001188:	mov    r9,rdi
   14000118b:	xor    r8d,r8d
   14000118e:	lea    rdx,[rip+0x5373]        # 0x140006508
   140001195:	lea    rcx,[rsp+0x20]
   14000119a:	call   QWORD PTR [rip+0x4f58]        # 0x1400060f8
   1400011a0:	test   eax,eax
   1400011a2:	jne    0x1400011ac
   1400011a4:	call   QWORD PTR [rip+0x4f7e]        # 0x140006128
   1400011aa:	mov    ebx,eax
   1400011ac:	mov    eax,ebx
   1400011ae:	mov    rcx,QWORD PTR [rsp+0x210]
   1400011b6:	xor    rcx,rsp
   1400011b9:	call   0x140004c70
   1400011be:	mov    rbx,QWORD PTR [rsp+0x238]
   1400011c6:	add    rsp,0x220
   1400011cd:	pop    rdi
   1400011ce:	ret    
   1400011cf:	int3   
   1400011d0:	int3   
   1400011d1:	int3   
   1400011d2:	int3   
   1400011d3:	int3   
   1400011d4:	int3   
   1400011d5:	int3   
   1400011d6:	int3   
   1400011d7:	int3   
   1400011d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400011dd:	mov    QWORD PTR [rsp+0x10],rbp
   1400011e2:	mov    QWORD PTR [rsp+0x18],rsi
   1400011e7:	push   rdi
   1400011e8:	sub    rsp,0x40
   1400011ec:	xor    ebp,ebp
   1400011ee:	mov    eax,r9d
   1400011f1:	cmp    DWORD PTR [rsp+0x70],0x1
   1400011f6:	mov    esi,edx
   1400011f8:	mov    rdi,rcx
   1400011fb:	mov    WORD PTR [rip+0x84be],bp        # 0x1400096c0
   140001202:	jne    0x140001208
   140001204:	mov    edx,eax
   140001206:	jmp    0x14000127d
   140001208:	cmp    r8d,0x56
   14000120c:	je     0x140001278
   14000120e:	cmp    r8d,0x5b6
   140001215:	jne    0x14000121e
   140001217:	mov    edx,0x7d0
   14000121c:	jmp    0x14000127d
   14000121e:	mov    QWORD PTR [rsp+0x30],rbp
   140001223:	lea    rbx,[rip+0x8496]        # 0x1400096c0
   14000122a:	mov    DWORD PTR [rsp+0x28],0x1f4
   140001232:	xor    r9d,r9d
   140001235:	xor    edx,edx
   140001237:	mov    QWORD PTR [rsp+0x20],rbx
   14000123c:	mov    ecx,0x1000
   140001241:	call   QWORD PTR [rip+0x4f21]        # 0x140006168
   140001247:	test   eax,eax
   140001249:	jne    0x14000129a
   14000124b:	call   QWORD PTR [rip+0x4ed7]        # 0x140006128
   140001251:	mov    QWORD PTR [rsp+0x30],rbp
   140001256:	xor    r9d,r9d
   140001259:	mov    r8d,eax
   14000125c:	mov    DWORD PTR [rsp+0x28],0x1f4
   140001264:	xor    edx,edx
   140001266:	mov    QWORD PTR [rsp+0x20],rbx
   14000126b:	mov    ecx,0x1000
   140001270:	call   QWORD PTR [rip+0x4ef2]        # 0x140006168
   140001276:	jmp    0x14000129a
   140001278:	mov    edx,0x7d1
   14000127d:	mov    rcx,QWORD PTR [rip+0x8434]        # 0x1400096b8
   140001284:	lea    rbx,[rip+0x8435]        # 0x1400096c0
   14000128b:	mov    r8,rbx
   14000128e:	mov    r9d,0x1f4
   140001294:	call   QWORD PTR [rip+0x4fae]        # 0x140006248
   14000129a:	mov    edx,esi
   14000129c:	mov    rcx,rdi
   14000129f:	call   QWORD PTR [rip+0x4fb3]        # 0x140006258
   1400012a5:	mov    rcx,rax
   1400012a8:	mov    rdx,rbx
   1400012ab:	call   QWORD PTR [rip+0x4f5f]        # 0x140006210
   1400012b1:	mov    edx,esi
   1400012b3:	mov    rcx,rdi
   1400012b6:	call   QWORD PTR [rip+0x4f9c]        # 0x140006258
   1400012bc:	mov    ebx,0x5
   1400012c1:	mov    rcx,rax
   1400012c4:	mov    edx,ebx
   1400012c6:	call   QWORD PTR [rip+0x4f74]        # 0x140006240
   1400012cc:	cmp    DWORD PTR [rsp+0x80],ebp
   1400012d3:	je     0x1400012ed
   1400012d5:	mov    edx,DWORD PTR [rsp+0x78]
   1400012d9:	mov    rcx,rdi
   1400012dc:	call   QWORD PTR [rip+0x4f76]        # 0x140006258
   1400012e2:	mov    rcx,rax
   1400012e5:	mov    edx,ebx
   1400012e7:	call   QWORD PTR [rip+0x4f53]        # 0x140006240
   1400012ed:	mov    rbx,QWORD PTR [rsp+0x50]
   1400012f2:	mov    rbp,QWORD PTR [rsp+0x58]
   1400012f7:	mov    rsi,QWORD PTR [rsp+0x60]
   1400012fc:	add    rsp,0x40
   140001300:	pop    rdi
   140001301:	ret    
   140001302:	int3   
   140001303:	int3   
   140001304:	int3   
   140001305:	int3   
   140001306:	int3   
   140001307:	int3   
   140001308:	mov    QWORD PTR [rsp+0x10],rbx
   14000130d:	mov    QWORD PTR [rsp+0x20],rsi
   140001312:	push   rdi
   140001313:	sub    rsp,0x240
   14000131a:	mov    rax,QWORD PTR [rip+0x7ce7]        # 0x140009008
   140001321:	xor    rax,rsp
   140001324:	mov    QWORD PTR [rsp+0x230],rax
   14000132c:	mov    edi,ecx
   14000132e:	mov    rbx,r8
   140001331:	mov    rcx,QWORD PTR [rip+0x8380]        # 0x1400096b8
   140001338:	lea    r8,[rsp+0x20]
   14000133d:	mov    rsi,rdx
   140001340:	mov    r9d,0x104
   140001346:	lea    edx,[rdi-0x6b]
   140001349:	call   QWORD PTR [rip+0x4ef9]        # 0x140006248
   14000134f:	test   eax,eax
   140001351:	je     0x14000135c
   140001353:	lea    rax,[rsp+0x20]
   140001358:	mov    QWORD PTR [rbx+0x48],rax
   14000135c:	movzx  eax,di
   14000135f:	mov    rcx,rbx
   140001362:	mov    QWORD PTR [rbx+0x10],rax
   140001366:	mov    DWORD PTR [rbx+0x4],0x1000
   14000136d:	mov    QWORD PTR [rbx+0x28],rsi
   140001371:	call   QWORD PTR [rip+0x4cd9]        # 0x140006050
   140001377:	mov    rcx,QWORD PTR [rsp+0x230]
   14000137f:	xor    rcx,rsp
   140001382:	call   0x140004c70
   140001387:	lea    r11,[rsp+0x240]
   14000138f:	mov    rbx,QWORD PTR [r11+0x18]
   140001393:	mov    rsi,QWORD PTR [r11+0x28]
   140001397:	mov    rsp,r11
   14000139a:	pop    rdi
   14000139b:	ret    
   14000139c:	int3   
   14000139d:	int3   
   14000139e:	int3   
   14000139f:	int3   
   1400013a0:	int3   
   1400013a1:	int3   
   1400013a2:	int3   
   1400013a3:	int3   
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	sub    rsp,0x28
   1400013b4:	mov    edx,0x1
   1400013b9:	or     ecx,0xffffffff
   1400013bc:	call   QWORD PTR [rip+0x4d5e]        # 0x140006120
   1400013c2:	xor    eax,eax
   1400013c4:	add    rsp,0x28
   1400013c8:	ret    
   1400013c9:	int3   
   1400013ca:	int3   
   1400013cb:	int3   
   1400013cc:	int3   
   1400013cd:	int3   
   1400013ce:	int3   
   1400013cf:	int3   
   1400013d0:	sub    rsp,0x28
   1400013d4:	test   r8d,r8d
   1400013d7:	jne    0x1400013f2
   1400013d9:	mov    rcx,QWORD PTR [rcx+0x18]
   1400013dd:	xor    r9d,r9d
   1400013e0:	xor    r8d,r8d
   1400013e3:	mov    edx,0x8065
   1400013e8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400013ec:	call   QWORD PTR [rip+0x4e2e]        # 0x140006220
   1400013f2:	add    rsp,0x28
   1400013f6:	ret    
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x8],rbx
   140001405:	push   rbp
   140001406:	mov    rbp,rsp
   140001409:	sub    rsp,0x80
   140001410:	mov    rax,QWORD PTR [rip+0x7bf1]        # 0x140009008
   140001417:	xor    rax,rsp
   14000141a:	mov    QWORD PTR [rbp-0x10],rax
   14000141e:	lea    r8,[rbp-0x40]
   140001422:	mov    BYTE PTR [rbp-0x50],0x0
   140001426:	mov    edx,0x28
   14000142b:	or     rcx,0xffffffffffffffff
   14000142f:	call   QWORD PTR [rip+0x4ff3]        # 0x140006428
   140001435:	mov    ebx,eax
   140001437:	test   eax,eax
   140001439:	js     0x1400014e2
   14000143f:	and    DWORD PTR [rbp-0x44],0x0
   140001443:	lea    r8,[rbp-0x50]
   140001447:	mov    rcx,QWORD PTR [rbp-0x40]
   14000144b:	lea    rdx,[rbp-0x28]
   14000144f:	and    DWORD PTR [rbp-0x18],0x0
   140001453:	mov    DWORD PTR [rbp-0x48],0x1f
   14000145a:	mov    rax,QWORD PTR [rbp-0x48]
   14000145e:	mov    QWORD PTR [rbp-0x20],rax
   140001462:	mov    DWORD PTR [rbp-0x28],0x1
   140001469:	mov    DWORD PTR [rbp-0x24],0x1
   140001470:	call   QWORD PTR [rip+0x4f82]        # 0x1400063f8
   140001476:	mov    ecx,0x80000000
   14000147b:	mov    ebx,eax
   14000147d:	add    eax,ecx
   14000147f:	test   ecx,eax
   140001481:	jne    0x14000148b
   140001483:	cmp    ebx,0xc0000061
   140001489:	jne    0x1400014d3
   14000148b:	cmp    BYTE PTR [rbp-0x50],0x0
   14000148f:	je     0x1400014d3
   140001491:	and    DWORD PTR [rbp-0x44],0x0
   140001495:	lea    r8,[rbp-0x38]
   140001499:	and    QWORD PTR [rsp+0x28],0x0
   14000149f:	mov    r9d,0x10
   1400014a5:	and    DWORD PTR [rbp-0x2c],0x0
   1400014a9:	xor    edx,edx
   1400014ab:	and    QWORD PTR [rsp+0x20],0x0
   1400014b1:	mov    rcx,QWORD PTR [rbp-0x40]
   1400014b5:	mov    DWORD PTR [rbp-0x48],0x1f
   1400014bc:	mov    rax,QWORD PTR [rbp-0x48]
   1400014c0:	mov    QWORD PTR [rbp-0x34],rax
   1400014c4:	mov    DWORD PTR [rbp-0x38],0x1
   1400014cb:	call   QWORD PTR [rip+0x4f17]        # 0x1400063e8
   1400014d1:	mov    ebx,eax
   1400014d3:	mov    rcx,QWORD PTR [rbp-0x40]
   1400014d7:	test   rcx,rcx
   1400014da:	je     0x1400014e2
   1400014dc:	call   QWORD PTR [rip+0x4f3e]        # 0x140006420
   1400014e2:	mov    ecx,ebx
   1400014e4:	call   QWORD PTR [rip+0x4f2e]        # 0x140006418
   1400014ea:	mov    rcx,QWORD PTR [rbp-0x10]
   1400014ee:	xor    rcx,rsp
   1400014f1:	call   0x140004c70
   1400014f6:	mov    rbx,QWORD PTR [rsp+0x90]
   1400014fe:	add    rsp,0x80
   140001505:	pop    rbp
   140001506:	ret    
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	rex push rbp
   140001512:	push   rbx
   140001513:	push   rsi
   140001514:	push   rdi
   140001515:	push   r14
   140001517:	push   r15
   140001519:	lea    rbp,[rsp-0x17]
   14000151e:	sub    rsp,0x88
   140001525:	mov    rax,QWORD PTR [rip+0x7adc]        # 0x140009008
   14000152c:	xor    rax,rsp
   14000152f:	mov    QWORD PTR [rbp-0x1],rax
   140001533:	xor    eax,eax
   140001535:	mov    r15,r9
   140001538:	and    DWORD PTR [rbp-0x41],eax
   14000153b:	mov    r14d,r8d
   14000153e:	and    QWORD PTR [rbp-0x39],rax
   140001542:	mov    rbx,rdx
   140001545:	mov    rsi,rcx
   140001548:	mov    QWORD PTR [rbp-0x9],rax
   14000154c:	xorps  xmm0,xmm0
   14000154f:	mov    QWORD PTR [rbp-0x31],rax
   140001553:	xor    r9d,r9d
   140001556:	mov    QWORD PTR [rbp-0x29],rax
   14000155a:	xor    r8d,r8d
   14000155d:	mov    QWORD PTR [rbp-0x21],rax
   140001561:	xor    edx,edx
   140001563:	xor    ecx,ecx
   140001565:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   14000156a:	xor    edi,edi
   14000156c:	call   QWORD PTR [rip+0x4b76]        # 0x1400060e8
   140001572:	mov    QWORD PTR [rbp-0x19],rax
   140001576:	test   rax,rax
   140001579:	jne    0x140001588
   14000157b:	call   QWORD PTR [rip+0x4ba7]        # 0x140006128
   140001581:	mov    ebx,eax
   140001583:	jmp    0x140001637
   140001588:	mov    QWORD PTR [rbp-0x21],rax
   14000158c:	xor    r9d,r9d
   14000158f:	mov    r8d,r14d
   140001592:	mov    rax,QWORD PTR [rbp+0x6f]
   140001596:	mov    rdx,rbx
   140001599:	mov    QWORD PTR [rbp-0x11],rax
   14000159d:	mov    rcx,rsi
   1400015a0:	mov    rax,QWORD PTR [rbp+0x77]
   1400015a4:	mov    QWORD PTR [rbp-0x9],rax
   1400015a8:	lea    rax,[rbp-0x39]
   1400015ac:	mov    QWORD PTR [rsp+0x20],rax
   1400015b1:	cmp    BYTE PTR [rbp+0x7f],dil
   1400015b5:	je     0x1400015bf
   1400015b7:	call   QWORD PTR [rip+0x4bbb]        # 0x140006178
   1400015bd:	jmp    0x1400015c5
   1400015bf:	call   QWORD PTR [rip+0x4b9b]        # 0x140006160
   1400015c5:	mov    edi,eax
   1400015c7:	test   eax,eax
   1400015c9:	jne    0x140001605
   1400015cb:	call   QWORD PTR [rip+0x4b57]        # 0x140006128
   1400015d1:	mov    ebx,eax
   1400015d3:	cmp    eax,0x3e5
   1400015d8:	jne    0x140001637
   1400015da:	or     r9d,0xffffffff
   1400015de:	lea    rdx,[rbp-0x19]
   1400015e2:	xor    r8d,r8d
   1400015e5:	lea    ecx,[rdi+0x3]
   1400015e8:	call   QWORD PTR [rip+0x4af2]        # 0x1400060e0
   1400015ee:	lea    ecx,[rax-0x1]
   1400015f1:	cmp    ecx,0x2
   1400015f4:	ja     0x1400015fd
   1400015f6:	mov    ebx,0x4c7
   1400015fb:	jmp    0x14000163b
   1400015fd:	test   eax,eax
   1400015ff:	jne    0x14000157b
   140001605:	xor    r9d,r9d
   140001608:	lea    r8,[rbp-0x41]
   14000160c:	lea    rdx,[rbp-0x39]
   140001610:	mov    rcx,rsi
   140001613:	call   QWORD PTR [rip+0x4b27]        # 0x140006140
   140001619:	mov    edi,eax
   14000161b:	test   eax,eax
   14000161d:	je     0x14000157b
   140001623:	mov    eax,DWORD PTR [rbp-0x41]
   140001626:	mov    DWORD PTR [r15],eax
   140001629:	cmp    eax,r14d
   14000162c:	je     0x140001635
   14000162e:	mov    ebx,0x5b6
   140001633:	jmp    0x14000163b
   140001635:	xor    ebx,ebx
   140001637:	test   ebx,ebx
   140001639:	je     0x140001644
   14000163b:	mov    rcx,rsi
   14000163e:	call   QWORD PTR [rip+0x4a84]        # 0x1400060c8
   140001644:	mov    rcx,QWORD PTR [rbp-0x19]
   140001648:	test   rcx,rcx
   14000164b:	je     0x140001653
   14000164d:	call   QWORD PTR [rip+0x4a55]        # 0x1400060a8
   140001653:	mov    ecx,ebx
   140001655:	call   QWORD PTR [rip+0x4a95]        # 0x1400060f0
   14000165b:	mov    eax,edi
   14000165d:	mov    rcx,QWORD PTR [rbp-0x1]
   140001661:	xor    rcx,rsp
   140001664:	call   0x140004c70
   140001669:	add    rsp,0x88
   140001670:	pop    r15
   140001672:	pop    r14
   140001674:	pop    rdi
   140001675:	pop    rsi
   140001676:	pop    rbx
   140001677:	pop    rbp
   140001678:	ret    
   140001679:	int3   
   14000167a:	int3   
   14000167b:	int3   
   14000167c:	int3   
   14000167d:	int3   
   14000167e:	int3   
   14000167f:	int3   
   140001680:	rex push rbp
   140001682:	push   rbx
   140001683:	push   rsi
   140001684:	push   rdi
   140001685:	push   r12
   140001687:	push   r13
   140001689:	push   r14
   14000168b:	push   r15
   14000168d:	mov    rbp,rsp
   140001690:	sub    rsp,0x78
   140001694:	mov    ebx,DWORD PTR [rcx+0x20]
   140001697:	xor    edx,edx
   140001699:	mov    rax,QWORD PTR [rcx]
   14000169c:	mov    rsi,rcx
   14000169f:	mov    QWORD PTR [rbp+0x60],rdx
   1400016a3:	mov    r12b,dl
   1400016a6:	mov    DWORD PTR [rbp+0x48],edx
   1400016a9:	mov    r15d,edx
   1400016ac:	mov    DWORD PTR [rbp+0x50],edx
   1400016af:	mov    dil,dl
   1400016b2:	mov    QWORD PTR [rbp+0x58],rdx
   1400016b6:	mov    r14d,edx
   1400016b9:	mov    DWORD PTR [rbp-0x30],edx
   1400016bc:	mov    r13d,edx
   1400016bf:	mov    QWORD PTR [rbp-0x28],rdx
   1400016c3:	mov    DWORD PTR [rbp-0x20],edx
   1400016c6:	mov    QWORD PTR [rbp-0x18],rdx
   1400016ca:	mov    QWORD PTR [rbp-0x38],rax
   1400016ce:	cmp    ebx,0x1
   1400016d1:	jne    0x1400016f2
   1400016d3:	mov    rcx,rax
   1400016d6:	call   QWORD PTR [rip+0x4934]        # 0x140006010
   1400016dc:	xor    edx,edx
   1400016de:	test   eax,eax
   1400016e0:	jne    0x1400016ef
   1400016e2:	call   QWORD PTR [rip+0x4a40]        # 0x140006128
   1400016e8:	mov    ebx,eax
   1400016ea:	jmp    0x140001799
   1400016ef:	mov    dil,0x1
   1400016f2:	mov    QWORD PTR [rsp+0x30],rdx
   1400016f7:	mov    eax,edx
   1400016f9:	mov    ecx,0x40000000
   1400016fe:	cmp    ebx,0x1
   140001701:	mov    edx,0x80000000
   140001706:	cmove  eax,ecx
   140001709:	xor    r9d,r9d
   14000170c:	mov    DWORD PTR [rsp+0x28],eax
   140001710:	lea    rcx,[rsi+0x28]
   140001714:	mov    DWORD PTR [rsp+0x20],0x3
   14000171c:	lea    r8d,[r9+0x1]
   140001720:	call   QWORD PTR [rip+0x4a32]        # 0x140006158
   140001726:	mov    r14,rax
   140001729:	cmp    rax,0xffffffffffffffff
   14000172d:	je     0x1400016e2
   14000172f:	cmp    dil,0x1
   140001733:	jne    0x14000173e
   140001735:	call   QWORD PTR [rip+0x48dd]        # 0x140006018
   14000173b:	xor    dil,dil
   14000173e:	test   ebx,ebx
   140001740:	jne    0x140001753
   140001742:	mov    rcx,QWORD PTR [rbp-0x38]
   140001746:	call   QWORD PTR [rip+0x48c4]        # 0x140006010
   14000174c:	test   eax,eax
   14000174e:	je     0x1400016e2
   140001750:	mov    dil,0x1
   140001753:	xor    eax,eax
   140001755:	lea    rcx,[rsi+0x230]
   14000175c:	mov    edx,0x40000000
   140001761:	test   ebx,ebx
   140001763:	cmove  eax,edx
   140001766:	and    QWORD PTR [rsp+0x30],r13
   14000176b:	mov    DWORD PTR [rsp+0x28],eax
   14000176f:	xor    r9d,r9d
   140001772:	xor    r8d,r8d
   140001775:	mov    DWORD PTR [rsp+0x20],0x2
   14000177d:	call   QWORD PTR [rip+0x49d5]        # 0x140006158
   140001783:	mov    r13,rax
   140001786:	cmp    rax,0xffffffffffffffff
   14000178a:	je     0x1400016e2
   140001790:	mov    r15,r14
   140001793:	mov    QWORD PTR [rbp+0x60],rax
   140001797:	xor    ebx,ebx
   140001799:	test   ebx,ebx
   14000179b:	je     0x1400017bc
   14000179d:	cmp    r14,0xffffffffffffffff
   1400017a1:	je     0x1400017ac
   1400017a3:	mov    rcx,r14
   1400017a6:	call   QWORD PTR [rip+0x48fc]        # 0x1400060a8
   1400017ac:	cmp    r13,0xffffffffffffffff
   1400017b0:	je     0x1400017bc
   1400017b2:	or     rcx,0xffffffffffffffff
   1400017b6:	call   QWORD PTR [rip+0x48ec]        # 0x1400060a8
   1400017bc:	xor    r14d,r14d
   1400017bf:	test   dil,dil
   1400017c2:	je     0x1400017ca
   1400017c4:	call   QWORD PTR [rip+0x484e]        # 0x140006018
   1400017ca:	test   ebx,ebx
   1400017cc:	jne    0x1400019dd
   1400017d2:	cmp    DWORD PTR [rsi+0x20],0x1
   1400017d6:	jne    0x1400017f5
   1400017d8:	mov    rcx,QWORD PTR [rsi]
   1400017db:	call   QWORD PTR [rip+0x482f]        # 0x140006010
   1400017e1:	test   eax,eax
   1400017e3:	jne    0x1400017f2
   1400017e5:	call   QWORD PTR [rip+0x493d]        # 0x140006128
   1400017eb:	mov    ebx,eax
   1400017ed:	jmp    0x1400019dd
   1400017f2:	mov    r12b,0x1
   1400017f5:	lea    rdx,[rbp+0x58]
   1400017f9:	mov    rcx,r15
   1400017fc:	call   QWORD PTR [rip+0x492e]        # 0x140006130
   140001802:	test   eax,eax
   140001804:	jne    0x140001813
   140001806:	call   QWORD PTR [rip+0x491c]        # 0x140006128
   14000180c:	mov    ebx,eax
   14000180e:	jmp    0x1400019d2
   140001813:	cmp    DWORD PTR [rbp+0x5c],r14d
   140001817:	je     0x140001823
   140001819:	mov    ebx,0x5b6
   14000181e:	jmp    0x1400019d2
   140001823:	mov    eax,DWORD PTR [rbp+0x58]
   140001826:	test   eax,eax
   140001828:	je     0x140001819
   14000182a:	mov    edx,eax
   14000182c:	mov    DWORD PTR [rbp-0x30],eax
   14000182f:	mov    ecx,0x40
   140001834:	call   QWORD PTR [rip+0x490e]        # 0x140006148
   14000183a:	mov    QWORD PTR [rbp-0x28],rax
   14000183e:	test   rax,rax
   140001841:	jne    0x14000184b
   140001843:	lea    ebx,[rax+0x8]
   140001846:	jmp    0x1400019d2
   14000184b:	cmp    DWORD PTR [rsi+0x20],0x1
   14000184f:	lea    r9,[rbp+0x48]
   140001853:	mov    r8d,DWORD PTR [rbp-0x30]
   140001857:	mov    rcx,r15
   14000185a:	mov    rdx,QWORD PTR [rbp-0x28]
   14000185e:	jne    0x14000193d
   140001864:	mov    rax,QWORD PTR [rsi+0x18]
   140001868:	mov    BYTE PTR [rsp+0x30],r14b
   14000186d:	mov    QWORD PTR [rsp+0x28],rax
   140001872:	mov    rax,QWORD PTR [rsi+0x10]
   140001876:	mov    QWORD PTR [rsp+0x20],rax
   14000187b:	call   0x140001510
   140001880:	test   eax,eax
   140001882:	je     0x140001806
   140001884:	mov    eax,DWORD PTR [rbp-0x30]
   140001887:	cmp    DWORD PTR [rbp+0x48],eax
   14000188a:	jne    0x140001819
   14000188c:	cmp    r12b,0x1
   140001890:	jne    0x14000189b
   140001892:	call   QWORD PTR [rip+0x4780]        # 0x140006018
   140001898:	mov    r12b,r14b
   14000189b:	mov    eax,DWORD PTR [rsi+0x24]
   14000189e:	test   eax,eax
   1400018a0:	jne    0x14000194d
   1400018a6:	lea    rax,[rbp-0x20]
   1400018aa:	xor    r9d,r9d
   1400018ad:	mov    QWORD PTR [rsp+0x30],rax
   1400018b2:	lea    rcx,[rbp-0x30]
   1400018b6:	mov    DWORD PTR [rsp+0x28],0x41
   1400018be:	xor    r8d,r8d
   1400018c1:	xor    edx,edx
   1400018c3:	mov    QWORD PTR [rsp+0x20],r14
   1400018c8:	call   QWORD PTR [rip+0x47aa]        # 0x140006078
   1400018ce:	test   eax,eax
   1400018d0:	je     0x140001806
   1400018d6:	mov    rdx,QWORD PTR [rbp-0x18]
   1400018da:	mov    r8d,DWORD PTR [rbp-0x20]
   1400018de:	cmp    DWORD PTR [rsi+0x20],r14d
   1400018e2:	jne    0x1400019a6
   1400018e8:	mov    rcx,QWORD PTR [rsi]
   1400018eb:	call   QWORD PTR [rip+0x471f]        # 0x140006010
   1400018f1:	test   eax,eax
   1400018f3:	je     0x140001806
   1400018f9:	mov    rax,QWORD PTR [rsi+0x18]
   1400018fd:	lea    r9,[rbp+0x50]
   140001901:	mov    r8d,DWORD PTR [rbp-0x20]
   140001905:	mov    r12b,0x1
   140001908:	mov    rdx,QWORD PTR [rbp-0x18]
   14000190c:	mov    rcx,QWORD PTR [rbp+0x60]
   140001910:	mov    BYTE PTR [rsp+0x30],r12b
   140001915:	mov    QWORD PTR [rsp+0x28],rax
   14000191a:	mov    rax,QWORD PTR [rsi+0x10]
   14000191e:	mov    QWORD PTR [rsp+0x20],rax
   140001923:	call   0x140001510
   140001928:	test   eax,eax
   14000192a:	jne    0x1400019c1
   140001930:	call   QWORD PTR [rip+0x47f2]        # 0x140006128
   140001936:	mov    ebx,eax
   140001938:	jmp    0x1400019d7
   14000193d:	mov    QWORD PTR [rsp+0x20],r14
   140001942:	call   QWORD PTR [rip+0x4818]        # 0x140006160
   140001948:	jmp    0x140001880
   14000194d:	cmp    eax,0x1
   140001950:	jne    0x140001984
   140001952:	lea    rax,[rbp-0x20]
   140001956:	xor    r9d,r9d
   140001959:	mov    QWORD PTR [rsp+0x30],rax
   14000195e:	lea    rdx,[rip+0x4bab]        # 0x140006510
   140001965:	mov    DWORD PTR [rsp+0x28],0x41
   14000196d:	lea    rcx,[rbp-0x30]
   140001971:	xor    r8d,r8d
   140001974:	mov    QWORD PTR [rsp+0x20],r14
   140001979:	call   QWORD PTR [rip+0x4701]        # 0x140006080
   14000197f:	jmp    0x1400018ce
   140001984:	cmp    eax,0x2
   140001987:	jne    0x1400018d6
   14000198d:	mov    rdx,QWORD PTR [rbp-0x28]
   140001991:	mov    r8d,DWORD PTR [rbp-0x30]
   140001995:	mov    QWORD PTR [rbp-0x18],rdx
   140001999:	mov    DWORD PTR [rbp-0x20],r8d
   14000199d:	mov    QWORD PTR [rbp-0x28],r14
   1400019a1:	jmp    0x1400018de
   1400019a6:	mov    rcx,QWORD PTR [rbp+0x60]
   1400019aa:	lea    r9,[rbp+0x50]
   1400019ae:	mov    QWORD PTR [rsp+0x20],r14
   1400019b3:	call   QWORD PTR [rip+0x47bf]        # 0x140006178
   1400019b9:	test   eax,eax
   1400019bb:	je     0x140001806
   1400019c1:	mov    eax,DWORD PTR [rbp+0x50]
   1400019c4:	mov    ebx,0x5b6
   1400019c9:	sub    eax,DWORD PTR [rbp-0x20]
   1400019cc:	neg    eax
   1400019ce:	sbb    eax,eax
   1400019d0:	and    ebx,eax
   1400019d2:	test   r12b,r12b
   1400019d5:	je     0x1400019dd
   1400019d7:	call   QWORD PTR [rip+0x463b]        # 0x140006018
   1400019dd:	test   r15,r15
   1400019e0:	je     0x1400019eb
   1400019e2:	mov    rcx,r15
   1400019e5:	call   QWORD PTR [rip+0x46bd]        # 0x1400060a8
   1400019eb:	mov    rax,QWORD PTR [rbp+0x60]
   1400019ef:	test   rax,rax
   1400019f2:	je     0x1400019fd
   1400019f4:	mov    rcx,rax
   1400019f7:	call   QWORD PTR [rip+0x46ab]        # 0x1400060a8
   1400019fd:	cmp    ebx,0x4c7
   140001a03:	jne    0x140001a12
   140001a05:	lea    rcx,[rsi+0x230]
   140001a0c:	call   QWORD PTR [rip+0x46be]        # 0x1400060d0
   140001a12:	mov    rax,QWORD PTR [rbp-0x28]
   140001a16:	test   rax,rax
   140001a19:	je     0x140001a2f
   140001a1b:	mov    ecx,DWORD PTR [rbp-0x30]
   140001a1e:	mov    rdi,rax
   140001a21:	xor    eax,eax
   140001a23:	rep stos BYTE PTR es:[rdi],al
   140001a25:	mov    rcx,QWORD PTR [rbp-0x28]
   140001a29:	call   QWORD PTR [rip+0x4689]        # 0x1400060b8
   140001a2f:	mov    rdi,QWORD PTR [rbp-0x18]
   140001a33:	test   rdi,rdi
   140001a36:	je     0x140001a49
   140001a38:	mov    ecx,DWORD PTR [rbp-0x20]
   140001a3b:	xor    eax,eax
   140001a3d:	rep stos BYTE PTR es:[rdi],al
   140001a3f:	mov    rcx,QWORD PTR [rbp-0x18]
   140001a43:	call   QWORD PTR [rip+0x466f]        # 0x1400060b8
   140001a49:	mov    rcx,QWORD PTR [rsi+0x8]
   140001a4d:	mov    r8,rsi
   140001a50:	mov    r9d,ebx
   140001a53:	mov    edx,0x8068
   140001a58:	call   QWORD PTR [rip+0x4812]        # 0x140006270
   140001a5e:	mov    eax,ebx
   140001a60:	add    rsp,0x78
   140001a64:	pop    r15
   140001a66:	pop    r14
   140001a68:	pop    r13
   140001a6a:	pop    r12
   140001a6c:	pop    rdi
   140001a6d:	pop    rsi
   140001a6e:	pop    rbx
   140001a6f:	pop    rbp
   140001a70:	ret    
   140001a71:	int3   
   140001a72:	int3   
   140001a73:	int3   
   140001a74:	int3   
   140001a75:	int3   
   140001a76:	int3   
   140001a77:	int3   
   140001a78:	mov    QWORD PTR [rsp+0x8],rbx
   140001a7d:	push   rdi
   140001a7e:	sub    rsp,0x30
   140001a82:	lea    r9,[rip+0x827f]        # 0x140009d08
   140001a89:	mov    r10d,0x104
   140001a8f:	sub    rdx,r9
   140001a92:	mov    rdi,rcx
   140001a95:	xor    ebx,ebx
   140001a97:	mov    r11d,r10d
   140001a9a:	lea    rax,[r11+0x7ffffefa]
   140001aa1:	test   rax,rax
   140001aa4:	je     0x140001abe
   140001aa6:	movzx  eax,WORD PTR [rdx+r9*1]
   140001aab:	test   ax,ax
   140001aae:	je     0x140001abe
   140001ab0:	mov    WORD PTR [r9],ax
   140001ab4:	add    r9,0x2
   140001ab8:	sub    r11,0x1
   140001abc:	jne    0x140001a9a
   140001abe:	test   r11,r11
   140001ac1:	jne    0x140001ac7
   140001ac3:	sub    r9,0x2
   140001ac7:	lea    rcx,[rip+0x8442]        # 0x140009f10
   140001ace:	mov    WORD PTR [r9],bx
   140001ad2:	sub    r8,rcx
   140001ad5:	lea    rax,[r10+0x7ffffefa]
   140001adc:	test   rax,rax
   140001adf:	je     0x140001af8
   140001ae1:	movzx  eax,WORD PTR [r8+rcx*1]
   140001ae6:	test   ax,ax
   140001ae9:	je     0x140001af8
   140001aeb:	mov    WORD PTR [rcx],ax
   140001aee:	add    rcx,0x2
   140001af2:	sub    r10,0x1
   140001af6:	jne    0x140001ad5
   140001af8:	test   r10,r10
   140001afb:	jne    0x140001b01
   140001afd:	sub    rcx,0x2
   140001b01:	mov    rax,QWORD PTR [rip+0x7b10]        # 0x140009618
   140001b08:	lea    r9,[rip+0x81d1]        # 0x140009ce0
   140001b0f:	mov    WORD PTR [rcx],bx
   140001b12:	lea    r8,[rip+0xfffffffffffffb67]        # 0x140001680
   140001b19:	mov    QWORD PTR [rip+0x81c0],rax        # 0x140009ce0
   140001b20:	xor    edx,edx
   140001b22:	mov    rax,QWORD PTR [rip+0x7b87]        # 0x1400096b0
   140001b29:	xor    ecx,ecx
   140001b2b:	mov    QWORD PTR [rip+0x81be],rax        # 0x140009cf0
   140001b32:	mov    rax,QWORD PTR [rip+0x7ad7]        # 0x140009610
   140001b39:	mov    QWORD PTR [rsp+0x28],rbx
   140001b3e:	mov    QWORD PTR [rip+0x81b3],rax        # 0x140009cf8
   140001b45:	mov    QWORD PTR [rip+0x819c],rdi        # 0x140009ce8
   140001b4c:	mov    QWORD PTR [rip+0x81ad],rbx        # 0x140009d00
   140001b53:	mov    DWORD PTR [rsp+0x20],ebx
   140001b57:	call   QWORD PTR [rip+0x4563]        # 0x1400060c0
   140001b5d:	test   rax,rax
   140001b60:	jne    0x140001b6c
   140001b62:	call   QWORD PTR [rip+0x45c0]        # 0x140006128
   140001b68:	mov    ebx,eax
   140001b6a:	jmp    0x140001b75
   140001b6c:	mov    rcx,rax
   140001b6f:	call   QWORD PTR [rip+0x4533]        # 0x1400060a8
   140001b75:	mov    eax,ebx
   140001b77:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b7c:	add    rsp,0x30
   140001b80:	pop    rdi
   140001b81:	ret    
   140001b82:	int3   
   140001b83:	int3   
   140001b84:	int3   
   140001b85:	int3   
   140001b86:	int3   
   140001b87:	int3   
   140001b88:	mov    QWORD PTR [rsp+0x8],rbx
   140001b8d:	mov    QWORD PTR [rsp+0x10],rsi
   140001b92:	push   rdi
   140001b93:	sub    rsp,0x40
   140001b97:	and    QWORD PTR [rsp+0x68],0x0
   140001b9d:	mov    rbx,r8
   140001ba0:	mov    r8d,ecx
   140001ba3:	mov    rsi,rdx
   140001ba6:	mov    ecx,0x1fffff
   140001bab:	mov    edx,0x1
   140001bb0:	call   QWORD PTR [rip+0x45ba]        # 0x140006170
   140001bb6:	mov    rdi,rax
   140001bb9:	test   rax,rax
   140001bbc:	jne    0x140001bcd
   140001bbe:	call   QWORD PTR [rip+0x4564]        # 0x140006128
   140001bc4:	mov    rcx,QWORD PTR [rsp+0x68]
   140001bc9:	mov    ebx,eax
   140001bcb:	jmp    0x140001c09
   140001bcd:	mov    DWORD PTR [rsp+0x30],0x2
   140001bd5:	lea    r9,[rsp+0x68]
   140001bda:	and    DWORD PTR [rsp+0x28],0x0
   140001bdf:	or     r8,0xffffffffffffffff
   140001be3:	and    DWORD PTR [rsp+0x20],0x0
   140001be8:	mov    rdx,rsi
   140001beb:	mov    rcx,rax
   140001bee:	call   QWORD PTR [rip+0x44e4]        # 0x1400060d8
   140001bf4:	test   eax,eax
   140001bf6:	je     0x140001bbe
   140001bf8:	mov    rax,QWORD PTR [rsp+0x68]
   140001bfd:	xor    ecx,ecx
   140001bff:	mov    QWORD PTR [rbx],rax
   140001c02:	xor    ebx,ebx
   140001c04:	mov    QWORD PTR [rsp+0x68],rcx
   140001c09:	test   rcx,rcx
   140001c0c:	je     0x140001c14
   140001c0e:	call   QWORD PTR [rip+0x4494]        # 0x1400060a8
   140001c14:	test   rdi,rdi
   140001c17:	je     0x140001c22
   140001c19:	mov    rcx,rdi
   140001c1c:	call   QWORD PTR [rip+0x4486]        # 0x1400060a8
   140001c22:	mov    rsi,QWORD PTR [rsp+0x58]
   140001c27:	mov    eax,ebx
   140001c29:	mov    rbx,QWORD PTR [rsp+0x50]
   140001c2e:	add    rsp,0x40
   140001c32:	pop    rdi
   140001c33:	ret    
   140001c34:	int3   
   140001c35:	int3   
   140001c36:	int3   
   140001c37:	int3   
   140001c38:	int3   
   140001c39:	int3   
   140001c3a:	int3   
   140001c3b:	int3   
   140001c3c:	int3   
   140001c3d:	int3   
   140001c3e:	int3   
   140001c3f:	int3   
   140001c40:	mov    QWORD PTR [rsp+0x8],rbx
   140001c45:	mov    QWORD PTR [rsp+0x10],rbp
   140001c4a:	mov    QWORD PTR [rsp+0x18],rsi
   140001c4f:	push   rdi
   140001c50:	sub    rsp,0x20
   140001c54:	mov    ebx,edx
   140001c56:	mov    rsi,r9
   140001c59:	mov    edx,0xffffffeb
   140001c5e:	mov    rbp,r8
   140001c61:	mov    rdi,rcx
   140001c64:	call   QWORD PTR [rip+0x45fe]        # 0x140006268
   140001c6a:	sub    ebx,0x4e
   140001c6d:	je     0x140001cd8
   140001c6f:	sub    ebx,0xc2
   140001c75:	je     0x140001ca0
   140001c77:	cmp    ebx,0x1
   140001c7a:	jne    0x140001d0a
   140001c80:	movzx  edx,bp
   140001c83:	mov    ecx,0x3ea
   140001c88:	sub    edx,ecx
   140001c8a:	je     0x140001c98
   140001c8c:	cmp    edx,ebx
   140001c8e:	jne    0x140001d0a
   140001c90:	xor    r9d,r9d
   140001c93:	mov    DWORD PTR [rax],r9d
   140001c96:	jmp    0x140001d0a
   140001c98:	mov    DWORD PTR [rax],0x1
   140001c9e:	jmp    0x140001d0a
   140001ca0:	mov    rbx,QWORD PTR [rsi+0x30]
   140001ca4:	mov    edx,0xffffffeb
   140001ca9:	mov    r8,rbx
   140001cac:	mov    rcx,rdi
   140001caf:	call   QWORD PTR [rip+0x457b]        # 0x140006230
   140001cb5:	xor    r9d,r9d
   140001cb8:	mov    ecx,0x3ea
   140001cbd:	cmp    DWORD PTR [rbx],0x1
   140001cc0:	mov    edx,ecx
   140001cc2:	setne  r9b
   140001cc6:	add    r9d,ecx
   140001cc9:	lea    r8d,[rcx+0x1]
   140001ccd:	mov    rcx,rdi
   140001cd0:	call   QWORD PTR [rip+0x4562]        # 0x140006238
   140001cd6:	jmp    0x140001d28
   140001cd8:	cmp    DWORD PTR [rsi+0x10],0xffffff31
   140001cdf:	je     0x140001d0e
   140001ce1:	cmp    DWORD PTR [rsi+0x10],0xffffff38
   140001ce8:	jne    0x140001d0a
   140001cea:	mov    rcx,rdi
   140001ced:	call   QWORD PTR [rip+0x4585]        # 0x140006278
   140001cf3:	mov    r9d,0x2
   140001cf9:	xor    r8d,r8d
   140001cfc:	mov    rcx,rax
   140001cff:	mov    edx,0x470
   140001d04:	call   QWORD PTR [rip+0x4566]        # 0x140006270
   140001d0a:	xor    eax,eax
   140001d0c:	jmp    0x140001d2d
   140001d0e:	mov    eax,DWORD PTR [rax]
   140001d10:	neg    eax
   140001d12:	sbb    ecx,ecx
   140001d14:	xor    edx,edx
   140001d16:	add    ecx,0x136
   140001d1c:	movsxd r8,ecx
   140001d1f:	mov    rcx,rdi
   140001d22:	call   QWORD PTR [rip+0x4508]        # 0x140006230
   140001d28:	mov    eax,0x1
   140001d2d:	mov    rbx,QWORD PTR [rsp+0x30]
   140001d32:	mov    rbp,QWORD PTR [rsp+0x38]
   140001d37:	mov    rsi,QWORD PTR [rsp+0x40]
   140001d3c:	add    rsp,0x20
   140001d40:	pop    rdi
   140001d41:	ret    
   140001d42:	int3   
   140001d43:	int3   
   140001d44:	int3   
   140001d45:	int3   
   140001d46:	int3   
   140001d47:	int3   
   140001d48:	mov    QWORD PTR [rsp+0x18],rbx
   140001d4d:	mov    QWORD PTR [rsp+0x20],rsi
   140001d52:	push   rbp
   140001d53:	push   rdi
   140001d54:	push   r15
   140001d56:	lea    rbp,[rsp-0x3f0]
   140001d5e:	sub    rsp,0x4f0
   140001d65:	mov    rax,QWORD PTR [rip+0x729c]        # 0x140009008
   140001d6c:	xor    rax,rsp
   140001d6f:	mov    QWORD PTR [rbp+0x3e0],rax
   140001d76:	movaps xmm0,XMMWORD PTR [rip+0x47d3]        # 0x140006550
   140001d7d:	mov    rbx,rdx
   140001d80:	movaps xmm1,XMMWORD PTR [rip+0x47d9]        # 0x140006560
   140001d87:	mov    rdi,rcx
   140001d8a:	mov    eax,DWORD PTR [rip+0x4830]        # 0x1400065c0
   140001d90:	lea    rcx,[rbp+0x34]
   140001d94:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140001d98:	xor    edx,edx
   140001d9a:	movaps xmm0,XMMWORD PTR [rip+0x47cf]        # 0x140006570
   140001da1:	mov    r8d,0x194
   140001da7:	movaps XMMWORD PTR [rbp-0x20],xmm0
   140001dab:	movaps xmm0,XMMWORD PTR [rip+0x47de]        # 0x140006590
   140001db2:	movaps XMMWORD PTR [rbp-0x30],xmm1
   140001db6:	movaps xmm1,XMMWORD PTR [rip+0x47c3]        # 0x140006580
   140001dbd:	movaps XMMWORD PTR [rbp+0x0],xmm0
   140001dc1:	movaps xmm0,XMMWORD PTR [rip+0x47e8]        # 0x1400065b0
   140001dc8:	movaps XMMWORD PTR [rbp-0x10],xmm1
   140001dcc:	movaps xmm1,XMMWORD PTR [rip+0x47cd]        # 0x1400065a0
   140001dd3:	movaps XMMWORD PTR [rbp+0x20],xmm0
   140001dd7:	movaps XMMWORD PTR [rbp+0x10],xmm1
   140001ddb:	mov    DWORD PTR [rbp+0x30],eax
   140001dde:	call   0x1400052a4
   140001de3:	mov    esi,0x98
   140001de8:	lea    rcx,[rsp+0x20]
   140001ded:	mov    r8d,esi
   140001df0:	xor    edx,edx
   140001df2:	call   0x1400052a4
   140001df7:	mov    rcx,QWORD PTR [rip+0x78ba]        # 0x1400096b8
   140001dfe:	xor    r15d,r15d
   140001e01:	mov    DWORD PTR [rsp+0x20],esi
   140001e05:	mov    r9d,0x1f4
   140001e0b:	lea    rsi,[rip+0x78ae]        # 0x1400096c0
   140001e12:	mov    WORD PTR [rbp+0x1d0],r15w
   140001e1a:	mov    r8,rsi
   140001e1d:	mov    QWORD PTR [rsp+0x28],rdi
   140001e22:	mov    edx,0xdc
   140001e27:	call   QWORD PTR [rip+0x441b]        # 0x140006248
   140001e2d:	mov    rcx,QWORD PTR [rip+0x7884]        # 0x1400096b8
   140001e34:	lea    r8,[rbp-0x40]
   140001e38:	mov    r9d,0x104
   140001e3e:	lea    edx,[r9-0x24]
   140001e42:	call   QWORD PTR [rip+0x4400]        # 0x140006248
   140001e48:	lea    rax,[rbp-0x40]
   140001e4c:	mov    QWORD PTR [rsp+0x78],rsi
   140001e51:	mov    QWORD PTR [rsp+0x38],rax
   140001e56:	lea    rcx,[rsp+0x20]
   140001e5b:	lea    rax,[rbp+0x1d0]
   140001e62:	mov    DWORD PTR [rsp+0x58],0x104
   140001e6a:	mov    QWORD PTR [rsp+0x70],rax
   140001e6f:	add    rbx,0x18
   140001e73:	lea    rax,[rip+0x474e]        # 0x1400065c8
   140001e7a:	mov    QWORD PTR [rsp+0x50],rbx
   140001e7f:	mov    QWORD PTR [rbp-0x78],rax
   140001e83:	mov    DWORD PTR [rbp-0x80],0x802
   140001e8a:	call   QWORD PTR [rip+0x41d8]        # 0x140006068
   140001e90:	test   eax,eax
   140001e92:	je     0x140001f10
   140001e94:	mov    esi,0x3fa
   140001e99:	mov    rcx,rdi
   140001e9c:	mov    edx,esi
   140001e9e:	call   QWORD PTR [rip+0x43b4]        # 0x140006258
   140001ea4:	mov    rcx,rax
   140001ea7:	mov    rdx,rbx
   140001eaa:	call   QWORD PTR [rip+0x4360]        # 0x140006210
   140001eb0:	mov    edx,esi
   140001eb2:	mov    rcx,rdi
   140001eb5:	call   QWORD PTR [rip+0x439d]        # 0x140006258
   140001ebb:	mov    rcx,rax
   140001ebe:	call   QWORD PTR [rip+0x439c]        # 0x140006260
   140001ec4:	mov    rcx,rdi
   140001ec7:	call   QWORD PTR [rip+0x43ab]        # 0x140006278
   140001ecd:	lea    r9d,[r15+0x2]
   140001ed1:	xor    r8d,r8d
   140001ed4:	mov    rcx,rax
   140001ed7:	lea    edx,[rsi+0x76]
   140001eda:	call   QWORD PTR [rip+0x4390]        # 0x140006270
   140001ee0:	lea    edx,[rsi+0xc]
   140001ee3:	mov    rcx,rdi
   140001ee6:	call   QWORD PTR [rip+0x436c]        # 0x140006258
   140001eec:	mov    rcx,rax
   140001eef:	xor    edx,edx
   140001ef1:	call   QWORD PTR [rip+0x4349]        # 0x140006240
   140001ef7:	mov    edx,0xbb8
   140001efc:	mov    rcx,rdi
   140001eff:	call   QWORD PTR [rip+0x4353]        # 0x140006258
   140001f05:	mov    rcx,rax
   140001f08:	xor    edx,edx
   140001f0a:	call   QWORD PTR [rip+0x4330]        # 0x140006240
   140001f10:	mov    rcx,QWORD PTR [rbp+0x3e0]
   140001f17:	xor    rcx,rsp
   140001f1a:	call   0x140004c70
   140001f1f:	lea    r11,[rsp+0x4f0]
   140001f27:	mov    rbx,QWORD PTR [r11+0x30]
   140001f2b:	mov    rsi,QWORD PTR [r11+0x38]
   140001f2f:	mov    rsp,r11
   140001f32:	pop    r15
   140001f34:	pop    rdi
   140001f35:	pop    rbp
   140001f36:	ret    
   140001f37:	int3   
   140001f38:	int3   
   140001f39:	int3   
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	mov    QWORD PTR [rsp+0x8],rbx
   140001f45:	push   rdi
   140001f46:	sub    rsp,0x40
   140001f4a:	lea    rbx,[rdx+0x18]
   140001f4e:	mov    r9d,0x104
   140001f54:	mov    r8,rbx
   140001f57:	mov    edx,0x3fa
   140001f5c:	mov    rdi,rcx
   140001f5f:	call   QWORD PTR [rip+0x42c3]        # 0x140006228
   140001f65:	and    QWORD PTR [rsp+0x30],0x0
   140001f6b:	xor    r9d,r9d
   140001f6e:	and    DWORD PTR [rsp+0x28],0x0
   140001f73:	xor    r8d,r8d
   140001f76:	mov    edx,0x40000000
   140001f7b:	mov    DWORD PTR [rsp+0x20],0x2
   140001f83:	mov    rcx,rbx
   140001f86:	call   QWORD PTR [rip+0x41cc]        # 0x140006158
   140001f8c:	cmp    rax,0xffffffffffffffff
   140001f90:	jne    0x140001fe2
   140001f92:	call   QWORD PTR [rip+0x4190]        # 0x140006128
   140001f98:	mov    DWORD PTR [rsp+0x30],0x1
   140001fa0:	xor    r9d,r9d
   140001fa3:	mov    r8d,eax
   140001fa6:	mov    DWORD PTR [rsp+0x28],0xbb8
   140001fae:	and    DWORD PTR [rsp+0x20],0x0
   140001fb3:	mov    edx,0x406
   140001fb8:	mov    rcx,rdi
   140001fbb:	call   0x1400011d8
   140001fc0:	mov    rcx,rdi
   140001fc3:	call   QWORD PTR [rip+0x42af]        # 0x140006278
   140001fc9:	xor    r9d,r9d
   140001fcc:	xor    r8d,r8d
   140001fcf:	mov    rcx,rax
   140001fd2:	mov    edx,0x470
   140001fd7:	call   QWORD PTR [rip+0x4293]        # 0x140006270
   140001fdd:	or     eax,0xffffffff
   140001fe0:	jmp    0x140001ffd
   140001fe2:	mov    rcx,rax
   140001fe5:	call   QWORD PTR [rip+0x40bd]        # 0x1400060a8
   140001feb:	mov    rcx,rbx
   140001fee:	call   QWORD PTR [rip+0x40dc]        # 0x1400060d0
   140001ff4:	test   eax,eax
   140001ff6:	je     0x140001f92
   140001ff8:	mov    eax,0x139
   140001ffd:	mov    rbx,QWORD PTR [rsp+0x50]
   140002002:	add    rsp,0x40
   140002006:	pop    rdi
   140002007:	ret    
   140002008:	int3   
   140002009:	int3   
   14000200a:	int3   
   14000200b:	int3   
   14000200c:	int3   
   14000200d:	int3   
   14000200e:	int3   
   14000200f:	int3   
   140002010:	mov    QWORD PTR [rsp+0x8],rbx
   140002015:	mov    QWORD PTR [rsp+0x10],rbp
   14000201a:	mov    QWORD PTR [rsp+0x18],rsi
   14000201f:	push   rdi
   140002020:	sub    rsp,0x20
   140002024:	mov    ebx,edx
   140002026:	mov    rsi,r9
   140002029:	mov    edx,0xffffffeb
   14000202e:	mov    rbp,r8
   140002031:	mov    rdi,rcx
   140002034:	call   QWORD PTR [rip+0x422e]        # 0x140006268
   14000203a:	mov    rdx,rax
   14000203d:	sub    ebx,0x4e
   140002040:	je     0x1400020bf
   140002042:	sub    ebx,0xc2
   140002048:	je     0x14000206e
   14000204a:	cmp    ebx,0x1
   14000204d:	jne    0x140002100
   140002053:	mov    eax,0x400
   140002058:	cmp    bp,ax
   14000205b:	jne    0x140002100
   140002061:	mov    rcx,rdi
   140002064:	call   0x140001d48
   140002069:	jmp    0x140002100
   14000206e:	mov    r8,QWORD PTR [rsi+0x30]
   140002072:	mov    edx,0xffffffeb
   140002077:	mov    rcx,rdi
   14000207a:	call   QWORD PTR [rip+0x41b0]        # 0x140006230
   140002080:	mov    edx,0x3fa
   140002085:	mov    rcx,rdi
   140002088:	call   QWORD PTR [rip+0x41ca]        # 0x140006258
   14000208e:	mov    rcx,rax
   140002091:	xor    edx,edx
   140002093:	call   QWORD PTR [rip+0x417f]        # 0x140006218
   140002099:	mov    edx,0x406
   14000209e:	mov    rcx,rdi
   1400020a1:	call   0x140001008
   1400020a6:	mov    edx,0x400
   1400020ab:	mov    rcx,rdi
   1400020ae:	call   QWORD PTR [rip+0x41a4]        # 0x140006258
   1400020b4:	mov    rcx,rax
   1400020b7:	call   QWORD PTR [rip+0x41a3]        # 0x140006260
   1400020bd:	jmp    0x140002100
   1400020bf:	cmp    DWORD PTR [rsi+0x10],0xffffff31
   1400020c6:	je     0x140002104
   1400020c8:	cmp    DWORD PTR [rsi+0x10],0xffffff38
   1400020cf:	jne    0x140002100
   1400020d1:	xor    eax,eax
   1400020d3:	xor    ecx,ecx
   1400020d5:	cmp    cx,WORD PTR [rdx+0x18]
   1400020d9:	mov    rcx,rdi
   1400020dc:	lea    r8d,[rax+0x2]
   1400020e0:	cmovne eax,r8d
   1400020e4:	mov    ebx,eax
   1400020e6:	call   QWORD PTR [rip+0x418c]        # 0x140006278
   1400020ec:	mov    r9d,ebx
   1400020ef:	xor    r8d,r8d
   1400020f2:	mov    rcx,rax
   1400020f5:	mov    edx,0x470
   1400020fa:	call   QWORD PTR [rip+0x4170]        # 0x140006270
   140002100:	xor    eax,eax
   140002102:	jmp    0x14000211f
   140002104:	mov    rcx,rdi
   140002107:	call   0x140001f40
   14000210c:	movsxd r8,eax
   14000210f:	xor    edx,edx
   140002111:	mov    rcx,rdi
   140002114:	call   QWORD PTR [rip+0x4116]        # 0x140006230
   14000211a:	mov    eax,0x1
   14000211f:	mov    rbx,QWORD PTR [rsp+0x30]
   140002124:	mov    rbp,QWORD PTR [rsp+0x38]
   140002129:	mov    rsi,QWORD PTR [rsp+0x40]
   14000212e:	add    rsp,0x20
   140002132:	pop    rdi
   140002133:	ret    
   140002134:	int3   
   140002135:	int3   
   140002136:	int3   
   140002137:	int3   
   140002138:	int3   
   140002139:	int3   
   14000213a:	int3   
   14000213b:	int3   
   14000213c:	mov    QWORD PTR [rsp+0x18],rbx
   140002141:	mov    QWORD PTR [rsp+0x20],rsi
   140002146:	push   rbp
   140002147:	push   rdi
   140002148:	push   r15
   14000214a:	lea    rbp,[rsp-0x3f0]
   140002152:	sub    rsp,0x4f0
   140002159:	mov    rax,QWORD PTR [rip+0x6ea8]        # 0x140009008
   140002160:	xor    rax,rsp
   140002163:	mov    QWORD PTR [rbp+0x3e0],rax
   14000216a:	movaps xmm0,XMMWORD PTR [rip+0x43df]        # 0x140006550
   140002171:	mov    rbx,rdx
   140002174:	movaps xmm1,XMMWORD PTR [rip+0x43e5]        # 0x140006560
   14000217b:	mov    rdi,rcx
   14000217e:	mov    eax,DWORD PTR [rip+0x443c]        # 0x1400065c0
   140002184:	lea    rcx,[rbp+0x34]
   140002188:	movaps XMMWORD PTR [rbp-0x40],xmm0
   14000218c:	xor    edx,edx
   14000218e:	movaps xmm0,XMMWORD PTR [rip+0x43db]        # 0x140006570
   140002195:	mov    r8d,0x194
   14000219b:	movaps XMMWORD PTR [rbp-0x20],xmm0
   14000219f:	movaps xmm0,XMMWORD PTR [rip+0x43ea]        # 0x140006590
   1400021a6:	movaps XMMWORD PTR [rbp-0x30],xmm1
   1400021aa:	movaps xmm1,XMMWORD PTR [rip+0x43cf]        # 0x140006580
   1400021b1:	movaps XMMWORD PTR [rbp+0x0],xmm0
   1400021b5:	movaps xmm0,XMMWORD PTR [rip+0x43f4]        # 0x1400065b0
   1400021bc:	movaps XMMWORD PTR [rbp-0x10],xmm1
   1400021c0:	movaps xmm1,XMMWORD PTR [rip+0x43d9]        # 0x1400065a0
   1400021c7:	movaps XMMWORD PTR [rbp+0x20],xmm0
   1400021cb:	movaps XMMWORD PTR [rbp+0x10],xmm1
   1400021cf:	mov    DWORD PTR [rbp+0x30],eax
   1400021d2:	call   0x1400052a4
   1400021d7:	mov    esi,0x98
   1400021dc:	lea    rcx,[rsp+0x20]
   1400021e1:	mov    r8d,esi
   1400021e4:	xor    edx,edx
   1400021e6:	call   0x1400052a4
   1400021eb:	mov    rcx,QWORD PTR [rip+0x74c6]        # 0x1400096b8
   1400021f2:	xor    r15d,r15d
   1400021f5:	mov    DWORD PTR [rsp+0x20],esi
   1400021f9:	mov    r9d,0x1f4
   1400021ff:	lea    rsi,[rip+0x74ba]        # 0x1400096c0
   140002206:	mov    WORD PTR [rbp+0x1d0],r15w
   14000220e:	mov    r8,rsi
   140002211:	mov    QWORD PTR [rsp+0x28],rdi
   140002216:	mov    edx,0xdd
   14000221b:	call   QWORD PTR [rip+0x4027]        # 0x140006248
   140002221:	mov    rcx,QWORD PTR [rip+0x7490]        # 0x1400096b8
   140002228:	lea    r8,[rbp-0x40]
   14000222c:	mov    r9d,0x104
   140002232:	lea    edx,[r9-0x24]
   140002236:	call   QWORD PTR [rip+0x400c]        # 0x140006248
   14000223c:	lea    rax,[rbp-0x40]
   140002240:	mov    QWORD PTR [rsp+0x78],rsi
   140002245:	mov    QWORD PTR [rsp+0x38],rax
   14000224a:	lea    rcx,[rsp+0x20]
   14000224f:	lea    rax,[rbp+0x1d0]
   140002256:	mov    DWORD PTR [rsp+0x58],0x104
   14000225e:	mov    QWORD PTR [rsp+0x70],rax
   140002263:	add    rbx,0x18
   140002267:	lea    rax,[rip+0x435a]        # 0x1400065c8
   14000226e:	mov    QWORD PTR [rsp+0x50],rbx
   140002273:	mov    QWORD PTR [rbp-0x78],rax
   140002277:	mov    DWORD PTR [rbp-0x80],0x1800
   14000227e:	call   QWORD PTR [rip+0x3ddc]        # 0x140006060
   140002284:	test   eax,eax
   140002286:	je     0x140002304
   140002288:	mov    esi,0x3fb
   14000228d:	mov    rcx,rdi
   140002290:	mov    edx,esi
   140002292:	call   QWORD PTR [rip+0x3fc0]        # 0x140006258
   140002298:	mov    rcx,rax
   14000229b:	mov    rdx,rbx
   14000229e:	call   QWORD PTR [rip+0x3f6c]        # 0x140006210
   1400022a4:	mov    edx,esi
   1400022a6:	mov    rcx,rdi
   1400022a9:	call   QWORD PTR [rip+0x3fa9]        # 0x140006258
   1400022af:	mov    rcx,rax
   1400022b2:	call   QWORD PTR [rip+0x3fa8]        # 0x140006260
   1400022b8:	mov    rcx,rdi
   1400022bb:	call   QWORD PTR [rip+0x3fb7]        # 0x140006278
   1400022c1:	lea    r9d,[r15+0x2]
   1400022c5:	xor    r8d,r8d
   1400022c8:	mov    rcx,rax
   1400022cb:	lea    edx,[rsi+0x75]
   1400022ce:	call   QWORD PTR [rip+0x3f9c]        # 0x140006270
   1400022d4:	lea    edx,[rsi+0xc]
   1400022d7:	mov    rcx,rdi
   1400022da:	call   QWORD PTR [rip+0x3f78]        # 0x140006258
   1400022e0:	mov    rcx,rax
   1400022e3:	xor    edx,edx
   1400022e5:	call   QWORD PTR [rip+0x3f55]        # 0x140006240
   1400022eb:	mov    edx,0xbb8
   1400022f0:	mov    rcx,rdi
   1400022f3:	call   QWORD PTR [rip+0x3f5f]        # 0x140006258
   1400022f9:	mov    rcx,rax
   1400022fc:	xor    edx,edx
   1400022fe:	call   QWORD PTR [rip+0x3f3c]        # 0x140006240
   140002304:	mov    rcx,QWORD PTR [rbp+0x3e0]
   14000230b:	xor    rcx,rsp
   14000230e:	call   0x140004c70
   140002313:	lea    r11,[rsp+0x4f0]
   14000231b:	mov    rbx,QWORD PTR [r11+0x30]
   14000231f:	mov    rsi,QWORD PTR [r11+0x38]
   140002323:	mov    rsp,r11
   140002326:	pop    r15
   140002328:	pop    rdi
   140002329:	pop    rbp
   14000232a:	ret    
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	int3   
   140002331:	int3   
   140002332:	int3   
   140002333:	int3   
   140002334:	mov    rax,rsp
   140002337:	mov    QWORD PTR [rax+0x8],rbx
   14000233b:	mov    QWORD PTR [rax+0x18],rsi
   14000233f:	mov    QWORD PTR [rax+0x20],rdi
   140002343:	push   r14
   140002345:	sub    rsp,0x40
   140002349:	and    DWORD PTR [rax+0x10],0x0
   14000234d:	lea    rbx,[rdx+0x18]
   140002351:	and    DWORD PTR [rax+0x14],0x0
   140002355:	mov    r8,rbx
   140002358:	mov    r9d,0x104
   14000235e:	mov    edx,0x3fb
   140002363:	mov    rsi,rcx
   140002366:	or     rdi,0xffffffffffffffff
   14000236a:	call   QWORD PTR [rip+0x3eb8]        # 0x140006228
   140002370:	and    QWORD PTR [rsp+0x30],0x0
   140002376:	lea    r14d,[rdi+0x2]
   14000237a:	and    DWORD PTR [rsp+0x28],0x0
   14000237f:	mov    r8d,r14d
   140002382:	xor    r9d,r9d
   140002385:	mov    DWORD PTR [rsp+0x20],0x3
   14000238d:	mov    edx,0x80000000
   140002392:	mov    rcx,rbx
   140002395:	call   QWORD PTR [rip+0x3dbd]        # 0x140006158
   14000239b:	mov    rbx,rax
   14000239e:	cmp    rax,rdi
   1400023a1:	jne    0x1400023f0
   1400023a3:	call   QWORD PTR [rip+0x3d7f]        # 0x140006128
   1400023a9:	mov    DWORD PTR [rsp+0x30],r14d
   1400023ae:	xor    r9d,r9d
   1400023b1:	mov    r8d,eax
   1400023b4:	mov    DWORD PTR [rsp+0x28],0xbb8
   1400023bc:	and    DWORD PTR [rsp+0x20],0x0
   1400023c1:	mov    edx,0x407
   1400023c6:	mov    rcx,rsi
   1400023c9:	call   0x1400011d8
   1400023ce:	mov    rcx,rsi
   1400023d1:	call   QWORD PTR [rip+0x3ea1]        # 0x140006278
   1400023d7:	xor    r9d,r9d
   1400023da:	xor    r8d,r8d
   1400023dd:	mov    rcx,rax
   1400023e0:	mov    edx,0x470
   1400023e5:	call   QWORD PTR [rip+0x3e85]        # 0x140006270
   1400023eb:	jmp    0x14000248a
   1400023f0:	lea    rdx,[rsp+0x58]
   1400023f5:	mov    rcx,rax
   1400023f8:	call   QWORD PTR [rip+0x3d32]        # 0x140006130
   1400023fe:	test   eax,eax
   140002400:	jne    0x140002422
   140002402:	call   QWORD PTR [rip+0x3d20]        # 0x140006128
   140002408:	mov    DWORD PTR [rsp+0x30],r14d
   14000240d:	mov    r8d,eax
   140002410:	mov    DWORD PTR [rsp+0x28],0xbb8
   140002418:	and    DWORD PTR [rsp+0x20],0x0
   14000241d:	xor    r9d,r9d
   140002420:	jmp    0x140002452
   140002422:	cmp    DWORD PTR [rsp+0x5c],0x0
   140002427:	jne    0x140002437
   140002429:	cmp    DWORD PTR [rsp+0x58],0x0
   14000242e:	je     0x140002437
   140002430:	mov    edi,0x139
   140002435:	jmp    0x14000247c
   140002437:	mov    DWORD PTR [rsp+0x30],r14d
   14000243c:	mov    r9d,0x7d0
   140002442:	mov    DWORD PTR [rsp+0x28],0xbb8
   14000244a:	xor    r8d,r8d
   14000244d:	mov    DWORD PTR [rsp+0x20],r14d
   140002452:	mov    edx,0x407
   140002457:	mov    rcx,rsi
   14000245a:	call   0x1400011d8
   14000245f:	mov    rcx,rsi
   140002462:	call   QWORD PTR [rip+0x3e10]        # 0x140006278
   140002468:	xor    r9d,r9d
   14000246b:	xor    r8d,r8d
   14000246e:	mov    rcx,rax
   140002471:	mov    edx,0x470
   140002476:	call   QWORD PTR [rip+0x3df4]        # 0x140006270
   14000247c:	test   rbx,rbx
   14000247f:	je     0x14000248a
   140002481:	mov    rcx,rbx
   140002484:	call   QWORD PTR [rip+0x3c1e]        # 0x1400060a8
   14000248a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000248f:	mov    eax,edi
   140002491:	mov    rdi,QWORD PTR [rsp+0x68]
   140002496:	mov    rsi,QWORD PTR [rsp+0x60]
   14000249b:	add    rsp,0x40
   14000249f:	pop    r14
   1400024a1:	ret    
   1400024a2:	int3   
   1400024a3:	int3   
   1400024a4:	int3   
   1400024a5:	int3   
   1400024a6:	int3   
   1400024a7:	int3   
   1400024a8:	int3   
   1400024a9:	int3   
   1400024aa:	int3   
   1400024ab:	int3   
   1400024ac:	int3   
   1400024ad:	int3   
   1400024ae:	int3   
   1400024af:	int3   
   1400024b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400024b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400024ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400024bf:	push   rdi
   1400024c0:	sub    rsp,0x20
   1400024c4:	mov    ebx,edx
   1400024c6:	mov    rsi,r9
   1400024c9:	mov    edx,0xffffffeb
   1400024ce:	mov    rbp,r8
   1400024d1:	mov    rdi,rcx
   1400024d4:	call   QWORD PTR [rip+0x3d8e]        # 0x140006268
   1400024da:	mov    rdx,rax
   1400024dd:	sub    ebx,0x4e
   1400024e0:	je     0x140002570
   1400024e6:	sub    ebx,0xc2
   1400024ec:	je     0x140002512
   1400024ee:	cmp    ebx,0x1
   1400024f1:	jne    0x1400025ba
   1400024f7:	mov    eax,0x400
   1400024fc:	cmp    bp,ax
   1400024ff:	jne    0x1400025ba
   140002505:	mov    rcx,rdi
   140002508:	call   0x14000213c
   14000250d:	jmp    0x1400025ba
   140002512:	mov    r8,QWORD PTR [rsi+0x30]
   140002516:	mov    edx,0xffffffeb
   14000251b:	mov    rcx,rdi
   14000251e:	call   QWORD PTR [rip+0x3d0c]        # 0x140006230
   140002524:	mov    edx,0x3fb
   140002529:	mov    rcx,rdi
   14000252c:	call   QWORD PTR [rip+0x3d26]        # 0x140006258
   140002532:	mov    rcx,rax
   140002535:	xor    edx,edx
   140002537:	call   QWORD PTR [rip+0x3cdb]        # 0x140006218
   14000253d:	mov    edx,0x407
   140002542:	mov    rcx,rdi
   140002545:	call   0x140001008
   14000254a:	mov    edx,0x409
   14000254f:	mov    rcx,rdi
   140002552:	call   0x140001008
   140002557:	mov    edx,0x400
   14000255c:	mov    rcx,rdi
   14000255f:	call   QWORD PTR [rip+0x3cf3]        # 0x140006258
   140002565:	mov    rcx,rax
   140002568:	call   QWORD PTR [rip+0x3cf2]        # 0x140006260
   14000256e:	jmp    0x1400025ba
   140002570:	cmp    DWORD PTR [rsi+0x10],0xffffff31
   140002577:	je     0x1400025c6
   140002579:	cmp    DWORD PTR [rsi+0x10],0xffffff32
   140002580:	je     0x1400025be
   140002582:	cmp    DWORD PTR [rsi+0x10],0xffffff38
   140002589:	jne    0x1400025ba
   14000258b:	xor    eax,eax
   14000258d:	xor    ecx,ecx
   14000258f:	cmp    cx,WORD PTR [rdx+0x18]
   140002593:	mov    rcx,rdi
   140002596:	lea    r8d,[rax+0x2]
   14000259a:	cmovne eax,r8d
   14000259e:	mov    ebx,eax
   1400025a0:	call   QWORD PTR [rip+0x3cd2]        # 0x140006278
   1400025a6:	mov    r9d,ebx
   1400025a9:	xor    r8d,r8d
   1400025ac:	mov    rcx,rax
   1400025af:	mov    edx,0x470
   1400025b4:	call   QWORD PTR [rip+0x3cb6]        # 0x140006270
   1400025ba:	xor    eax,eax
   1400025bc:	jmp    0x1400025e1
   1400025be:	mov    r8d,0x134
   1400025c4:	jmp    0x1400025d1
   1400025c6:	mov    rcx,rdi
   1400025c9:	call   0x140002334
   1400025ce:	movsxd r8,eax
   1400025d1:	xor    edx,edx
   1400025d3:	mov    rcx,rdi
   1400025d6:	call   QWORD PTR [rip+0x3c54]        # 0x140006230
   1400025dc:	mov    eax,0x1
   1400025e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400025e6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400025eb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400025f0:	add    rsp,0x20
   1400025f4:	pop    rdi
   1400025f5:	ret    
   1400025f6:	int3   
   1400025f7:	int3   
   1400025f8:	int3   
   1400025f9:	int3   
   1400025fa:	int3   
   1400025fb:	int3   
   1400025fc:	mov    QWORD PTR [rsp+0x10],rbx
   140002601:	push   rbp
   140002602:	push   rsi
   140002603:	push   rdi
   140002604:	push   r12
   140002606:	push   r13
   140002608:	push   r14
   14000260a:	push   r15
   14000260c:	mov    rbp,rsp
   14000260f:	sub    rsp,0x80
   140002616:	mov    rax,QWORD PTR [rip+0x69eb]        # 0x140009008
   14000261d:	xor    rax,rsp
   140002620:	mov    QWORD PTR [rbp-0x10],rax
   140002624:	mov    r14,QWORD PTR [rbp+0x60]
   140002628:	xor    esi,esi
   14000262a:	mov    r15,QWORD PTR [rip+0x6fe7]        # 0x140009618
   140002631:	mov    r12,r8
   140002634:	mov    r13,rcx
   140002637:	mov    BYTE PTR [rbp-0x50],sil
   14000263b:	lea    r8,[rbp-0x40]
   14000263f:	or     rcx,0xffffffffffffffff
   140002643:	lea    edx,[rsi+0x28]
   140002646:	mov    rdi,r9
   140002649:	call   QWORD PTR [rip+0x3dd9]        # 0x140006428
   14000264f:	mov    ebx,eax
   140002651:	lea    eax,[rsi+0x1]
   140002654:	test   ebx,ebx
   140002656:	js     0x1400026f2
   14000265c:	and    DWORD PTR [rbp-0x44],esi
   14000265f:	lea    r8,[rbp-0x50]
   140002663:	mov    rcx,QWORD PTR [rbp-0x40]
   140002667:	lea    rdx,[rbp-0x28]
   14000266b:	and    DWORD PTR [rbp-0x18],esi
   14000266e:	mov    DWORD PTR [rbp-0x28],eax
   140002671:	mov    DWORD PTR [rbp-0x24],eax
   140002674:	mov    DWORD PTR [rbp-0x48],0x1f
   14000267b:	mov    rax,QWORD PTR [rbp-0x48]
   14000267f:	mov    QWORD PTR [rbp-0x20],rax
   140002683:	call   QWORD PTR [rip+0x3d6f]        # 0x1400063f8
   140002689:	mov    ecx,0x80000000
   14000268e:	mov    ebx,eax
   140002690:	add    eax,ecx
   140002692:	test   ecx,eax
   140002694:	jne    0x14000269e
   140002696:	cmp    ebx,0xc0000061
   14000269c:	jne    0x1400026e3
   14000269e:	xor    ecx,ecx
   1400026a0:	cmp    BYTE PTR [rbp-0x50],cl
   1400026a3:	jne    0x1400026e3
   1400026a5:	mov    QWORD PTR [rsp+0x28],rcx
   1400026aa:	lea    r9d,[rcx+0x10]
   1400026ae:	mov    QWORD PTR [rsp+0x20],rcx
   1400026b3:	lea    r8,[rbp-0x38]
   1400026b7:	mov    rcx,QWORD PTR [rbp-0x40]
   1400026bb:	xor    edx,edx
   1400026bd:	mov    QWORD PTR [rbp-0x48],0x1f
   1400026c5:	mov    rax,QWORD PTR [rbp-0x48]
   1400026c9:	mov    QWORD PTR [rbp-0x34],rax
   1400026cd:	mov    DWORD PTR [rbp-0x38],0x1
   1400026d4:	mov    DWORD PTR [rbp-0x2c],0x2
   1400026db:	call   QWORD PTR [rip+0x3d07]        # 0x1400063e8
   1400026e1:	mov    ebx,eax
   1400026e3:	mov    rcx,QWORD PTR [rbp-0x40]
   1400026e7:	test   rcx,rcx
   1400026ea:	je     0x1400026f2
   1400026ec:	call   QWORD PTR [rip+0x3d2e]        # 0x140006420
   1400026f2:	mov    ecx,ebx
   1400026f4:	call   QWORD PTR [rip+0x3d1e]        # 0x140006418
   1400026fa:	mov    ebx,eax
   1400026fc:	test   eax,eax
   1400026fe:	jne    0x140002732
   140002700:	mov    r9d,DWORD PTR [rbp+0x68]
   140002704:	mov    r8,r14
   140002707:	mov    rdx,rdi
   14000270a:	mov    DWORD PTR [rsp+0x20],0x1
   140002712:	mov    rcx,r15
   140002715:	call   QWORD PTR [rip+0x390d]        # 0x140006028
   14000271b:	test   eax,eax
   14000271d:	jne    0x140002729
   14000271f:	call   QWORD PTR [rip+0x3a03]        # 0x140006128
   140002725:	mov    ebx,eax
   140002727:	jmp    0x14000272b
   140002729:	xor    ebx,ebx
   14000272b:	call   0x140001400
   140002730:	mov    esi,eax
   140002732:	test   ebx,ebx
   140002734:	cmove  ebx,esi
   140002737:	test   ebx,ebx
   140002739:	jne    0x140002753
   14000273b:	mov    rdx,rdi
   14000273e:	call   0x140001100
   140002743:	mov    r8,r12
   140002746:	mov    rdx,rdi
   140002749:	mov    rcx,r13
   14000274c:	call   0x140001a78
   140002751:	mov    ebx,eax
   140002753:	mov    eax,ebx
   140002755:	mov    rcx,QWORD PTR [rbp-0x10]
   140002759:	xor    rcx,rsp
   14000275c:	call   0x140004c70
   140002761:	mov    rbx,QWORD PTR [rsp+0xc8]
   140002769:	add    rsp,0x80
   140002770:	pop    r15
   140002772:	pop    r14
   140002774:	pop    r13
   140002776:	pop    r12
   140002778:	pop    rdi
   140002779:	pop    rsi
   14000277a:	pop    rbp
   14000277b:	ret    
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	int3   
   140002781:	int3   
   140002782:	int3   
   140002783:	int3   
   140002784:	mov    QWORD PTR [rsp+0x8],rbx
   140002789:	mov    QWORD PTR [rsp+0x10],rsi
   14000278e:	push   rdi
   14000278f:	sub    rsp,0x30
   140002793:	lea    r9,[rip+0x756e]        # 0x140009d08
   14000279a:	mov    r11d,0x104
   1400027a0:	sub    rdx,r9
   1400027a3:	mov    rdi,r8
   1400027a6:	xor    esi,esi
   1400027a8:	mov    r8,rcx
   1400027ab:	mov    r10d,r11d
   1400027ae:	lea    rax,[r10+0x7ffffefa]
   1400027b5:	test   rax,rax
   1400027b8:	je     0x1400027d2
   1400027ba:	movzx  eax,WORD PTR [rdx+r9*1]
   1400027bf:	test   ax,ax
   1400027c2:	je     0x1400027d2
   1400027c4:	mov    WORD PTR [r9],ax
   1400027c8:	add    r9,0x2
   1400027cc:	sub    r10,0x1
   1400027d0:	jne    0x1400027ae
   1400027d2:	test   r10,r10
   1400027d5:	jne    0x1400027db
   1400027d7:	sub    r9,0x2
   1400027db:	lea    rcx,[rip+0x772e]        # 0x140009f10
   1400027e2:	mov    WORD PTR [r9],si
   1400027e6:	mov    rdx,rdi
   1400027e9:	sub    rdx,rcx
   1400027ec:	lea    rax,[r11+0x7ffffefa]
   1400027f3:	test   rax,rax
   1400027f6:	je     0x14000280e
   1400027f8:	movzx  eax,WORD PTR [rdx+rcx*1]
   1400027fc:	test   ax,ax
   1400027ff:	je     0x14000280e
   140002801:	mov    WORD PTR [rcx],ax
   140002804:	add    rcx,0x2
   140002808:	sub    r11,0x1
   14000280c:	jne    0x1400027ec
   14000280e:	test   r11,r11
   140002811:	jne    0x140002817
   140002813:	sub    rcx,0x2
   140002817:	mov    rax,QWORD PTR [rip+0x6dfa]        # 0x140009618
   14000281e:	lea    r9,[rip+0x74bb]        # 0x140009ce0
   140002825:	mov    WORD PTR [rcx],si
   140002828:	xor    edx,edx
   14000282a:	mov    QWORD PTR [rip+0x74af],rax        # 0x140009ce0
   140002831:	xor    ecx,ecx
   140002833:	mov    rax,QWORD PTR [rip+0x6e76]        # 0x1400096b0
   14000283a:	mov    QWORD PTR [rip+0x74af],rax        # 0x140009cf0
   140002841:	mov    rax,QWORD PTR [rip+0x6dc8]        # 0x140009610
   140002848:	mov    QWORD PTR [rip+0x7499],r8        # 0x140009ce8
   14000284f:	lea    r8,[rip+0xffffffffffffee2a]        # 0x140001680
   140002856:	mov    QWORD PTR [rsp+0x28],rsi
   14000285b:	mov    QWORD PTR [rip+0x7496],rax        # 0x140009cf8
   140002862:	mov    DWORD PTR [rip+0x7494],0x1        # 0x140009d00
   14000286c:	mov    DWORD PTR [rip+0x748e],0x1        # 0x140009d04
   140002876:	mov    DWORD PTR [rsp+0x20],esi
   14000287a:	call   QWORD PTR [rip+0x3840]        # 0x1400060c0
   140002880:	test   rax,rax
   140002883:	jne    0x14000288f
   140002885:	call   QWORD PTR [rip+0x389d]        # 0x140006128
   14000288b:	mov    ebx,eax
   14000288d:	jmp    0x14000289a
   14000288f:	mov    ebx,esi
   140002891:	mov    rcx,rax
   140002894:	call   QWORD PTR [rip+0x380e]        # 0x1400060a8
   14000289a:	test   ebx,ebx
   14000289c:	jne    0x1400028a8
   14000289e:	mov    rdx,rdi
   1400028a1:	call   0x140001100
   1400028a6:	mov    ebx,esi
   1400028a8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400028ad:	mov    eax,ebx
   1400028af:	mov    rbx,QWORD PTR [rsp+0x40]
   1400028b4:	add    rsp,0x30
   1400028b8:	pop    rdi
   1400028b9:	ret    
   1400028ba:	int3   
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	mov    rax,rsp
   1400028c3:	mov    QWORD PTR [rax+0x8],rbx
   1400028c7:	mov    QWORD PTR [rax+0x10],rbp
   1400028cb:	mov    QWORD PTR [rax+0x18],rsi
   1400028cf:	mov    QWORD PTR [rax+0x20],rdi
   1400028d3:	push   r14
   1400028d5:	sub    rsp,0x40
   1400028d9:	mov    rdi,rdx
   1400028dc:	mov    QWORD PTR [rip+0x71dd],rcx        # 0x140009ac0
   1400028e3:	mov    rdx,QWORD PTR [rip+0x6d26]        # 0x140009610
   1400028ea:	mov    rsi,rcx
   1400028ed:	mov    rcx,QWORD PTR [rip+0x6d2c]        # 0x140009620
   1400028f4:	xor    r8d,r8d
   1400028f7:	mov    BYTE PTR [rip+0x71ca],0x0        # 0x140009ac8
   1400028fe:	call   QWORD PTR [rip+0x3aec]        # 0x1400063f0
   140002904:	mov    eax,DWORD PTR [rdi]
   140002906:	lea    r14,[rip+0x6db3]        # 0x1400096c0
   14000290d:	mov    rcx,QWORD PTR [rip+0x6da4]        # 0x1400096b8
   140002914:	neg    eax
   140002916:	mov    r9d,0x1f4
   14000291c:	mov    r8,r14
   14000291f:	sbb    edx,edx
   140002921:	add    edx,0xd3
   140002927:	call   QWORD PTR [rip+0x391b]        # 0x140006248
   14000292d:	mov    rcx,rsi
   140002930:	call   QWORD PTR [rip+0x3942]        # 0x140006278
   140002936:	mov    r9d,0x137
   14000293c:	xor    r8d,r8d
   14000293f:	mov    rcx,rax
   140002942:	mov    edx,0x485
   140002947:	call   QWORD PTR [rip+0x38d3]        # 0x140006220
   14000294d:	mov    rcx,rsi
   140002950:	movsxd rbx,eax
   140002953:	call   QWORD PTR [rip+0x391f]        # 0x140006278
   140002959:	mov    r9,r14
   14000295c:	mov    r8,rbx
   14000295f:	mov    rcx,rax
   140002962:	mov    edx,0x47e
   140002967:	call   QWORD PTR [rip+0x38b3]        # 0x140006220
   14000296d:	mov    edx,0x3ff
   140002972:	mov    rcx,rsi
   140002975:	call   QWORD PTR [rip+0x38dd]        # 0x140006258
   14000297b:	mov    rcx,rax
   14000297e:	lea    rdx,[rip+0x3b7b]        # 0x140006500
   140002985:	call   QWORD PTR [rip+0x3885]        # 0x140006210
   14000298b:	mov    edx,0x3ff
   140002990:	mov    rcx,rsi
   140002993:	call   QWORD PTR [rip+0x38bf]        # 0x140006258
   140002999:	mov    rcx,rax
   14000299c:	xor    edx,edx
   14000299e:	call   QWORD PTR [rip+0x389c]        # 0x140006240
   1400029a4:	mov    edx,0xbb8
   1400029a9:	mov    rcx,rsi
   1400029ac:	call   QWORD PTR [rip+0x38a6]        # 0x140006258
   1400029b2:	mov    rcx,rax
   1400029b5:	xor    edx,edx
   1400029b7:	call   QWORD PTR [rip+0x3883]        # 0x140006240
   1400029bd:	mov    edx,0x3fe
   1400029c2:	mov    rcx,rsi
   1400029c5:	call   QWORD PTR [rip+0x388d]        # 0x140006258
   1400029cb:	mov    ebp,0xfffffff0
   1400029d0:	mov    rcx,rax
   1400029d3:	mov    edx,ebp
   1400029d5:	mov    rbx,rax
   1400029d8:	call   QWORD PTR [rip+0x388a]        # 0x140006268
   1400029de:	movsxd r8,eax
   1400029e1:	mov    edx,ebp
   1400029e3:	or     r8,0x8
   1400029e7:	mov    rcx,rbx
   1400029ea:	call   QWORD PTR [rip+0x3840]        # 0x140006230
   1400029f0:	mov    edx,0x40a
   1400029f5:	lea    r9d,[rbp+0x42]
   1400029f9:	lea    r8d,[rbp+0x11]
   1400029fd:	mov    rcx,rbx
   140002a00:	call   QWORD PTR [rip+0x381a]        # 0x140006220
   140002a06:	cmp    DWORD PTR [rdi],0x1
   140002a09:	jne    0x140002a49
   140002a0b:	mov    eax,DWORD PTR [rdi+0x4]
   140002a0e:	test   eax,eax
   140002a10:	je     0x140002a1a
   140002a12:	mov    ecx,DWORD PTR [rdi+0x838]
   140002a18:	jmp    0x140002a1c
   140002a1a:	xor    ecx,ecx
   140002a1c:	test   eax,eax
   140002a1e:	je     0x140002a29
   140002a20:	mov    rax,QWORD PTR [rdi+0x830]
   140002a27:	jmp    0x140002a2b
   140002a29:	xor    eax,eax
   140002a2b:	mov    DWORD PTR [rsp+0x28],ecx
   140002a2f:	lea    r9,[rdi+0x220]
   140002a36:	mov    rcx,rsi
   140002a39:	mov    QWORD PTR [rsp+0x20],rax
   140002a3e:	lea    r8,[rdi+0x18]
   140002a42:	call   0x1400025fc
   140002a47:	jmp    0x140002a5c
   140002a49:	lea    r8,[rdi+0x220]
   140002a50:	mov    rcx,rsi
   140002a53:	lea    rdx,[rdi+0x18]
   140002a57:	call   0x140002784
   140002a5c:	mov    ebp,eax
   140002a5e:	test   eax,eax
   140002a60:	je     0x140002b90
   140002a66:	mov    r9d,0x32
   140002a6c:	xor    r8d,r8d
   140002a6f:	mov    edx,0x40a
   140002a74:	mov    rcx,rbx
   140002a77:	call   QWORD PTR [rip+0x37a3]        # 0x140006220
   140002a7d:	xor    edx,edx
   140002a7f:	mov    rcx,rbx
   140002a82:	call   QWORD PTR [rip+0x37b8]        # 0x140006240
   140002a88:	mov    eax,DWORD PTR [rdi]
   140002a8a:	mov    r9d,0x1f4
   140002a90:	mov    rcx,QWORD PTR [rip+0x6c21]        # 0x1400096b8
   140002a97:	neg    eax
   140002a99:	mov    r8,r14
   140002a9c:	sbb    edx,edx
   140002a9e:	add    edx,0x7d3
   140002aa4:	call   QWORD PTR [rip+0x379e]        # 0x140006248
   140002aaa:	mov    rcx,rsi
   140002aad:	call   QWORD PTR [rip+0x37c5]        # 0x140006278
   140002ab3:	mov    r9d,0x137
   140002ab9:	xor    r8d,r8d
   140002abc:	mov    rcx,rax
   140002abf:	mov    edx,0x485
   140002ac4:	call   QWORD PTR [rip+0x3756]        # 0x140006220
   140002aca:	mov    rcx,rsi
   140002acd:	movsxd rbx,eax
   140002ad0:	call   QWORD PTR [rip+0x37a2]        # 0x140006278
   140002ad6:	mov    r9,r14
   140002ad9:	mov    r8,rbx
   140002adc:	mov    rcx,rax
   140002adf:	mov    edx,0x47e
   140002ae4:	call   QWORD PTR [rip+0x3736]        # 0x140006220
   140002aea:	mov    DWORD PTR [rsp+0x30],0x1
   140002af2:	xor    r9d,r9d
   140002af5:	mov    DWORD PTR [rsp+0x28],0xbb8
   140002afd:	mov    r8d,ebp
   140002b00:	and    DWORD PTR [rsp+0x20],0x0
   140002b05:	mov    edx,0x3ff
   140002b0a:	mov    rcx,rsi
   140002b0d:	call   0x1400011d8
   140002b12:	mov    rcx,rsi
   140002b15:	call   QWORD PTR [rip+0x375d]        # 0x140006278
   140002b1b:	mov    ebx,0x4
   140002b20:	xor    r8d,r8d
   140002b23:	mov    rcx,rax
   140002b26:	mov    r9d,ebx
   140002b29:	mov    edx,0x470
   140002b2e:	call   QWORD PTR [rip+0x373c]        # 0x140006270
   140002b34:	mov    rcx,rsi
   140002b37:	call   QWORD PTR [rip+0x373b]        # 0x140006278
   140002b3d:	lea    r9d,[rbx+0x10]
   140002b41:	mov    r8d,ebx
   140002b44:	mov    rcx,rax
   140002b47:	mov    edx,0x48a
   140002b4c:	call   QWORD PTR [rip+0x371e]        # 0x140006270
   140002b52:	mov    rcx,QWORD PTR [rip+0x6b5f]        # 0x1400096b8
   140002b59:	mov    r9d,0x1f4
   140002b5f:	mov    r8,r14
   140002b62:	mov    edx,0xdb
   140002b67:	call   QWORD PTR [rip+0x36db]        # 0x140006248
   140002b6d:	test   eax,eax
   140002b6f:	je     0x140002bb0
   140002b71:	mov    rcx,rsi
   140002b74:	call   QWORD PTR [rip+0x36fe]        # 0x140006278
   140002b7a:	mov    r9,r14
   140002b7d:	xor    r8d,r8d
   140002b80:	mov    rcx,rax
   140002b83:	mov    edx,0x479
   140002b88:	call   QWORD PTR [rip+0x3692]        # 0x140006220
   140002b8e:	jmp    0x140002bb0
   140002b90:	mov    rcx,rsi
   140002b93:	call   QWORD PTR [rip+0x36df]        # 0x140006278
   140002b99:	mov    r9d,0x8
   140002b9f:	xor    r8d,r8d
   140002ba2:	mov    rcx,rax
   140002ba5:	mov    edx,0x470
   140002baa:	call   QWORD PTR [rip+0x36c0]        # 0x140006270
   140002bb0:	mov    rbx,QWORD PTR [rsp+0x50]
   140002bb5:	mov    rbp,QWORD PTR [rsp+0x58]
   140002bba:	mov    rsi,QWORD PTR [rsp+0x60]
   140002bbf:	mov    rdi,QWORD PTR [rsp+0x68]
   140002bc4:	add    rsp,0x40
   140002bc8:	pop    r14
   140002bca:	ret    
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	int3   
   140002bd1:	int3   
   140002bd2:	int3   
   140002bd3:	int3   
   140002bd4:	mov    rax,rsp
   140002bd7:	mov    QWORD PTR [rax+0x8],rbx
   140002bdb:	mov    QWORD PTR [rax+0x10],rbp
   140002bdf:	mov    QWORD PTR [rax+0x18],rsi
   140002be3:	mov    QWORD PTR [rax+0x20],rdi
   140002be7:	push   r12
   140002be9:	push   r14
   140002beb:	push   r15
   140002bed:	sub    rsp,0x40
   140002bf1:	xor    r12d,r12d
   140002bf4:	mov    edi,r9d
   140002bf7:	cmp    DWORD PTR [r8],0x1
   140002bfb:	mov    r14,r8
   140002bfe:	mov    rbx,rdx
   140002c01:	mov    rsi,rcx
   140002c04:	jne    0x140002c0f
   140002c06:	lea    rcx,[rdx+0x28]
   140002c0a:	jmp    0x140002c90
   140002c0f:	mov    eax,DWORD PTR [r8+0x4]
   140002c13:	test   eax,eax
   140002c15:	je     0x140002c20
   140002c17:	mov    r15d,DWORD PTR [r8+0x838]
   140002c1e:	jmp    0x140002c23
   140002c20:	mov    r15d,r12d
   140002c23:	test   eax,eax
   140002c25:	je     0x140002c30
   140002c27:	mov    rbp,QWORD PTR [r8+0x830]
   140002c2e:	jmp    0x140002c33
   140002c30:	mov    rbp,r12
   140002c33:	test   r9d,r9d
   140002c36:	jne    0x140002c89
   140002c38:	mov    rcx,QWORD PTR [rip+0x69d9]        # 0x140009618
   140002c3f:	call   QWORD PTR [rip+0x33cb]        # 0x140006010
   140002c45:	test   eax,eax
   140002c47:	jne    0x140002c53
   140002c49:	call   QWORD PTR [rip+0x34d9]        # 0x140006128
   140002c4f:	mov    edi,eax
   140002c51:	jmp    0x140002c83
   140002c53:	lea    rcx,[rbx+0x230]
   140002c5a:	mov    r9d,0x1
   140002c60:	mov    r8d,r15d
   140002c63:	mov    rdx,rbp
   140002c66:	call   QWORD PTR [rip+0x33b4]        # 0x140006020
   140002c6c:	test   eax,eax
   140002c6e:	jne    0x140002c7a
   140002c70:	call   QWORD PTR [rip+0x34b2]        # 0x140006128
   140002c76:	mov    edi,eax
   140002c78:	jmp    0x140002c7d
   140002c7a:	mov    edi,r12d
   140002c7d:	call   QWORD PTR [rip+0x3395]        # 0x140006018
   140002c83:	test   edi,edi
   140002c85:	cmove  edi,r12d
   140002c89:	lea    rcx,[rbx+0x230]
   140002c90:	call   QWORD PTR [rip+0x343a]        # 0x1400060d0
   140002c96:	mov    rcx,QWORD PTR [rip+0x6a1b]        # 0x1400096b8
   140002c9d:	mov    r15d,0x1f4
   140002ca3:	lea    rbp,[rip+0x6a16]        # 0x1400096c0
   140002caa:	mov    r9d,r15d
   140002cad:	mov    r8,rbp
   140002cb0:	test   edi,edi
   140002cb2:	je     0x140002e1e
   140002cb8:	cmp    DWORD PTR [r14],0x1
   140002cbc:	mov    edx,r12d
   140002cbf:	setne  dl
   140002cc2:	add    edx,0x7d2
   140002cc8:	call   QWORD PTR [rip+0x357a]        # 0x140006248
   140002cce:	mov    r12d,0x137
   140002cd4:	test   eax,eax
   140002cd6:	je     0x140002d09
   140002cd8:	mov    rcx,rsi
   140002cdb:	call   QWORD PTR [rip+0x3597]        # 0x140006278
   140002ce1:	mov    r9d,r12d
   140002ce4:	xor    r8d,r8d
   140002ce7:	mov    rcx,rax
   140002cea:	mov    edx,0x485
   140002cef:	call   QWORD PTR [rip+0x352b]        # 0x140006220
   140002cf5:	movsxd r8,eax
   140002cf8:	mov    r9,rbp
   140002cfb:	mov    edx,0x47e
   140002d00:	mov    rcx,rsi
   140002d03:	call   QWORD PTR [rip+0x3517]        # 0x140006220
   140002d09:	mov    eax,DWORD PTR [r14]
   140002d0c:	mov    r9d,r15d
   140002d0f:	mov    rcx,QWORD PTR [rip+0x69a2]        # 0x1400096b8
   140002d16:	neg    eax
   140002d18:	mov    r8,rbp
   140002d1b:	sbb    edx,edx
   140002d1d:	add    edx,0x7d3
   140002d23:	call   QWORD PTR [rip+0x351f]        # 0x140006248
   140002d29:	mov    rcx,rsi
   140002d2c:	call   QWORD PTR [rip+0x3546]        # 0x140006278
   140002d32:	mov    r9,r12
   140002d35:	xor    r8d,r8d
   140002d38:	mov    rcx,rax
   140002d3b:	mov    edx,0x485
   140002d40:	call   QWORD PTR [rip+0x34da]        # 0x140006220
   140002d46:	mov    rcx,rsi
   140002d49:	movsxd rbx,eax
   140002d4c:	call   QWORD PTR [rip+0x3526]        # 0x140006278
   140002d52:	mov    r9,rbp
   140002d55:	mov    r8,rbx
   140002d58:	mov    rcx,rax
   140002d5b:	mov    edx,0x47e
   140002d60:	call   QWORD PTR [rip+0x34ba]        # 0x140006220
   140002d66:	mov    DWORD PTR [rsp+0x30],0x1
   140002d6e:	xor    r9d,r9d
   140002d71:	mov    DWORD PTR [rsp+0x28],0xbb8
   140002d79:	mov    r8d,edi
   140002d7c:	and    DWORD PTR [rsp+0x20],0x0
   140002d81:	mov    edx,0x3ff
   140002d86:	mov    rcx,rsi
   140002d89:	call   0x1400011d8
   140002d8e:	mov    rcx,rsi
   140002d91:	call   QWORD PTR [rip+0x34e1]        # 0x140006278
   140002d97:	xor    r8d,r8d
   140002d9a:	mov    edx,0x470
   140002d9f:	mov    rcx,rax
   140002da2:	cmp    edi,0x56
   140002da5:	jne    0x140002db0
   140002da7:	lea    r9d,[r8+0x11]
   140002dab:	jmp    0x140002f3b
   140002db0:	mov    ebx,0x4
   140002db5:	mov    r9d,ebx
   140002db8:	call   QWORD PTR [rip+0x34b2]        # 0x140006270
   140002dbe:	mov    rcx,rsi
   140002dc1:	call   QWORD PTR [rip+0x34b1]        # 0x140006278
   140002dc7:	lea    r9d,[rbx+0x10]
   140002dcb:	mov    r8d,ebx
   140002dce:	mov    rcx,rax
   140002dd1:	mov    edx,0x48a
   140002dd6:	call   QWORD PTR [rip+0x3494]        # 0x140006270
   140002ddc:	mov    rcx,QWORD PTR [rip+0x68d5]        # 0x1400096b8
   140002de3:	mov    r9d,r15d
   140002de6:	mov    r8,rbp
   140002de9:	mov    edx,0xdb
   140002dee:	call   QWORD PTR [rip+0x3454]        # 0x140006248
   140002df4:	test   eax,eax
   140002df6:	je     0x140002f41
   140002dfc:	mov    rcx,rsi
   140002dff:	call   QWORD PTR [rip+0x3473]        # 0x140006278
   140002e05:	mov    r9,rbp
   140002e08:	xor    r8d,r8d
   140002e0b:	mov    rcx,rax
   140002e0e:	mov    edx,0x479
   140002e13:	call   QWORD PTR [rip+0x3407]        # 0x140006220
   140002e19:	jmp    0x140002f41
   140002e1e:	mov    eax,DWORD PTR [r14]
   140002e21:	neg    eax
   140002e23:	sbb    edx,edx
   140002e25:	neg    edx
   140002e27:	add    edx,0xd8
   140002e2d:	call   QWORD PTR [rip+0x3415]        # 0x140006248
   140002e33:	mov    rcx,rsi
   140002e36:	call   QWORD PTR [rip+0x343c]        # 0x140006278
   140002e3c:	mov    r12d,0x137
   140002e42:	xor    r8d,r8d
   140002e45:	mov    rcx,rax
   140002e48:	mov    r9d,r12d
   140002e4b:	mov    edx,0x485
   140002e50:	call   QWORD PTR [rip+0x33ca]        # 0x140006220
   140002e56:	mov    rcx,rsi
   140002e59:	movsxd rbx,eax
   140002e5c:	call   QWORD PTR [rip+0x3416]        # 0x140006278
   140002e62:	mov    r8,rbx
   140002e65:	mov    r9,rbp
   140002e68:	mov    ebx,0x47e
   140002e6d:	mov    rcx,rax
   140002e70:	mov    edx,ebx
   140002e72:	call   QWORD PTR [rip+0x33a8]        # 0x140006220
   140002e78:	mov    rcx,QWORD PTR [rip+0x6839]        # 0x1400096b8
   140002e7f:	mov    eax,0x1
   140002e84:	sub    eax,DWORD PTR [r14]
   140002e87:	mov    r9d,r15d
   140002e8a:	neg    eax
   140002e8c:	mov    r8,rbp
   140002e8f:	sbb    edx,edx
   140002e91:	add    edx,0xd9
   140002e97:	call   QWORD PTR [rip+0x33ab]        # 0x140006248
   140002e9d:	test   eax,eax
   140002e9f:	je     0x140002ecd
   140002ea1:	mov    rcx,rsi
   140002ea4:	call   QWORD PTR [rip+0x33ce]        # 0x140006278
   140002eaa:	mov    r9d,r12d
   140002ead:	lea    edx,[rbx+0x7]
   140002eb0:	mov    rcx,rax
   140002eb3:	xor    r8d,r8d
   140002eb6:	call   QWORD PTR [rip+0x3364]        # 0x140006220
   140002ebc:	movsxd r8,eax
   140002ebf:	mov    r9,rbp
   140002ec2:	mov    edx,ebx
   140002ec4:	mov    rcx,rsi
   140002ec7:	call   QWORD PTR [rip+0x3353]        # 0x140006220
   140002ecd:	xor    r9d,r9d
   140002ed0:	mov    edx,0x408
   140002ed5:	cmp    DWORD PTR [r14],0x1
   140002ed9:	mov    rcx,rsi
   140002edc:	setne  r9b
   140002ee0:	and    DWORD PTR [rsp+0x30],0x0
   140002ee5:	and    DWORD PTR [rsp+0x28],0x0
   140002eea:	add    r9d,0xde
   140002ef1:	xor    r8d,r8d
   140002ef4:	mov    DWORD PTR [rsp+0x20],0x1
   140002efc:	call   0x1400011d8
   140002f01:	mov    rcx,rsi
   140002f04:	call   QWORD PTR [rip+0x336e]        # 0x140006278
   140002f0a:	mov    ebx,0x4
   140002f0f:	xor    r8d,r8d
   140002f12:	mov    rcx,rax
   140002f15:	mov    r9d,ebx
   140002f18:	mov    edx,0x470
   140002f1d:	call   QWORD PTR [rip+0x334d]        # 0x140006270
   140002f23:	mov    rcx,rsi
   140002f26:	call   QWORD PTR [rip+0x334c]        # 0x140006278
   140002f2c:	lea    r9d,[rbx+0x10]
   140002f30:	mov    r8d,ebx
   140002f33:	mov    rcx,rax
   140002f36:	mov    edx,0x48a
   140002f3b:	call   QWORD PTR [rip+0x332f]        # 0x140006270
   140002f41:	mov    edx,0x3fe
   140002f46:	mov    rcx,rsi
   140002f49:	call   QWORD PTR [rip+0x3309]        # 0x140006258
   140002f4f:	mov    r9d,0x32
   140002f55:	xor    r8d,r8d
   140002f58:	mov    rcx,rax
   140002f5b:	mov    edx,0x40a
   140002f60:	mov    rbx,rax
   140002f63:	call   QWORD PTR [rip+0x32b7]        # 0x140006220
   140002f69:	xor    edx,edx
   140002f6b:	mov    rcx,rbx
   140002f6e:	call   QWORD PTR [rip+0x32cc]        # 0x140006240
   140002f74:	mov    rbx,QWORD PTR [rsp+0x60]
   140002f79:	mov    eax,edi
   140002f7b:	mov    rdi,QWORD PTR [rsp+0x78]
   140002f80:	mov    rbp,QWORD PTR [rsp+0x68]
   140002f85:	mov    rsi,QWORD PTR [rsp+0x70]
   140002f8a:	add    rsp,0x40
   140002f8e:	pop    r15
   140002f90:	pop    r14
   140002f92:	pop    r12
   140002f94:	ret    
   140002f95:	int3   
   140002f96:	int3   
   140002f97:	int3   
   140002f98:	int3   
   140002f99:	int3   
   140002f9a:	int3   
   140002f9b:	int3   
   140002f9c:	int3   
   140002f9d:	int3   
   140002f9e:	int3   
   140002f9f:	int3   
   140002fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140002fa5:	mov    QWORD PTR [rsp+0x10],rbp
   140002faa:	mov    QWORD PTR [rsp+0x18],rsi
   140002faf:	push   rdi
   140002fb0:	sub    rsp,0x20
   140002fb4:	mov    esi,edx
   140002fb6:	mov    rdi,r9
   140002fb9:	mov    edx,0xffffffeb
   140002fbe:	mov    rbp,r8
   140002fc1:	mov    rbx,rcx
   140002fc4:	call   QWORD PTR [rip+0x329e]        # 0x140006268
   140002fca:	cmp    esi,0x4e
   140002fcd:	je     0x140003017
   140002fcf:	cmp    esi,0x110
   140002fd5:	je     0x140002ff6
   140002fd7:	cmp    esi,0x8068
   140002fdd:	jne    0x14000306c
   140002fe3:	mov    r9d,edi
   140002fe6:	mov    r8,rax
   140002fe9:	mov    rdx,rbp
   140002fec:	mov    rcx,rbx
   140002fef:	call   0x140002bd4
   140002ff4:	jmp    0x14000306c
   140002ff6:	mov    r8,QWORD PTR [rdi+0x30]
   140002ffa:	mov    edx,0xffffffeb
   140002fff:	mov    rcx,rbx
   140003002:	call   QWORD PTR [rip+0x3228]        # 0x140006230
   140003008:	mov    edx,0x3ff
   14000300d:	mov    rcx,rbx
   140003010:	call   0x140001008
   140003015:	jmp    0x14000306c
   140003017:	cmp    DWORD PTR [rdi+0x10],0xffffff32
   14000301e:	je     0x140003070
   140003020:	cmp    DWORD PTR [rdi+0x10],0xffffff35
   140003027:	je     0x140003042
   140003029:	cmp    DWORD PTR [rdi+0x10],0xffffff38
   140003030:	jne    0x14000306c
   140003032:	mov    rdx,rax
   140003035:	mov    rcx,rbx
   140003038:	call   0x1400028c0
   14000303d:	xor    r8d,r8d
   140003040:	jmp    0x14000309a
   140003042:	mov    rcx,QWORD PTR [rip+0x6667]        # 0x1400096b0
   140003049:	call   QWORD PTR [rip+0x30b1]        # 0x140006100
   14000304f:	cmp    BYTE PTR [rip+0x6a72],0x1        # 0x140009ac8
   140003056:	jne    0x14000306c
   140003058:	lea    rcx,[rip+0x6a6b]        # 0x140009aca
   14000305f:	call   QWORD PTR [rip+0x306b]        # 0x1400060d0
   140003065:	mov    BYTE PTR [rip+0x6a5c],0x0        # 0x140009ac8
   14000306c:	xor    eax,eax
   14000306e:	jmp    0x1400030aa
   140003070:	mov    rcx,QWORD PTR [rip+0x65a9]        # 0x140009620
   140003077:	xor    r8d,r8d
   14000307a:	xor    edx,edx
   14000307c:	call   QWORD PTR [rip+0x336e]        # 0x1400063f0
   140003082:	mov    rcx,QWORD PTR [rip+0x6597]        # 0x140009620
   140003089:	mov    edx,0x1
   14000308e:	call   QWORD PTR [rip+0x337c]        # 0x140006410
   140003094:	mov    r8d,0x13a
   14000309a:	xor    edx,edx
   14000309c:	mov    rcx,rbx
   14000309f:	call   QWORD PTR [rip+0x318b]        # 0x140006230
   1400030a5:	mov    eax,0x1
   1400030aa:	mov    rbx,QWORD PTR [rsp+0x30]
   1400030af:	mov    rbp,QWORD PTR [rsp+0x38]
   1400030b4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400030b9:	add    rsp,0x20
   1400030bd:	pop    rdi
   1400030be:	ret    
   1400030bf:	int3   
   1400030c0:	int3   
   1400030c1:	int3   
   1400030c2:	int3   
   1400030c3:	int3   
   1400030c4:	int3   
   1400030c5:	int3   
   1400030c6:	int3   
   1400030c7:	int3   
   1400030c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400030cd:	push   rbp
   1400030ce:	push   rsi
   1400030cf:	push   rdi
   1400030d0:	push   r12
   1400030d2:	push   r13
   1400030d4:	push   r14
   1400030d6:	push   r15
   1400030d8:	lea    rbp,[rsp-0x7c0]
   1400030e0:	sub    rsp,0x8c0
   1400030e7:	mov    rax,QWORD PTR [rip+0x5f1a]        # 0x140009008
   1400030ee:	xor    rax,rsp
   1400030f1:	mov    QWORD PTR [rbp+0x7b0],rax
   1400030f8:	mov    r15,rdx
   1400030fb:	mov    r14,rcx
   1400030fe:	mov    edi,0x3fe
   140003103:	lea    rcx,[rbp-0x4e]
   140003107:	xor    r13d,r13d
   14000310a:	mov    r8d,edi
   14000310d:	xor    edx,edx
   14000310f:	mov    WORD PTR [rbp-0x50],r13w
   140003114:	mov    ebx,0x137
   140003119:	call   0x1400052a4
   14000311e:	mov    r8d,edi
   140003121:	mov    WORD PTR [rbp+0x3b0],r13w
   140003129:	xor    edx,edx
   14000312b:	lea    rcx,[rbp+0x3b2]
   140003132:	call   0x1400052a4
   140003137:	xor    edx,edx
   140003139:	mov    DWORD PTR [rsp+0x50],r13d
   14000313e:	lea    r8d,[r13+0x54]
   140003142:	lea    rcx,[rsp+0x54]
   140003147:	call   0x1400052a4
   14000314c:	lea    rax,[rbp-0x50]
   140003150:	mov    QWORD PTR [rsp+0x40],r13
   140003155:	mov    edi,0x200
   14000315a:	mov    QWORD PTR [rsp+0x20],rax
   14000315f:	lea    esi,[r13+0xd]
   140003163:	mov    DWORD PTR [r15+0x4],r13d
   140003167:	mov    r9d,edi
   14000316a:	mov    r8d,esi
   14000316d:	mov    edx,0x3f6
   140003172:	mov    rcx,r14
   140003175:	call   QWORD PTR [rip+0x30d5]        # 0x140006250
   14000317b:	lea    rax,[rbp+0x3b0]
   140003182:	mov    r9d,edi
   140003185:	mov    r8d,esi
   140003188:	mov    QWORD PTR [rsp+0x20],rax
   14000318d:	mov    edx,0x3f7
   140003192:	mov    rcx,r14
   140003195:	call   QWORD PTR [rip+0x30b5]        # 0x140006250
   14000319b:	mov    r8d,edi
   14000319e:	lea    rdx,[rbp+0x3b0]
   1400031a5:	lea    rcx,[rbp-0x50]
   1400031a9:	call   QWORD PTR [rip+0x31b1]        # 0x140006360
   1400031af:	test   eax,eax
   1400031b1:	je     0x1400031d9
   1400031b3:	mov    DWORD PTR [rsp+0x30],0x1
   1400031bb:	mov    r9d,0x7d5
   1400031c1:	mov    DWORD PTR [rsp+0x28],0xbb8
   1400031c9:	xor    r8d,r8d
   1400031cc:	mov    DWORD PTR [rsp+0x20],0x1
   1400031d4:	jmp    0x14000336e
   1400031d9:	cmp    r13w,WORD PTR [rbp-0x50]
   1400031de:	jne    0x140003216
   1400031e0:	mov    DWORD PTR [rsp+0x30],0x1
   1400031e8:	or     ebx,0xffffffff
   1400031eb:	mov    DWORD PTR [rsp+0x28],0xbb8
   1400031f3:	mov    r9d,0x7d7
   1400031f9:	xor    r8d,r8d
   1400031fc:	mov    DWORD PTR [rsp+0x20],0x1
   140003204:	mov    edx,0x402
   140003209:	mov    rcx,r14
   14000320c:	call   0x1400011d8
   140003211:	jmp    0x14000337e
   140003216:	xor    edx,edx
   140003218:	lea    rax,[rbp-0x50]
   14000321c:	mov    QWORD PTR [rbp-0x80],rax
   140003220:	lea    r9,[rsp+0x50]
   140003225:	lea    rax,[rsp+0x40]
   14000322a:	xor    ecx,ecx
   14000322c:	mov    QWORD PTR [rsp+0x20],rax
   140003231:	lea    r8d,[rdx+0x3]
   140003235:	call   QWORD PTR [rip+0x31fd]        # 0x140006438
   14000323b:	test   eax,eax
   14000323d:	jne    0x140003353
   140003243:	mov    rax,QWORD PTR [rsp+0x40]
   140003248:	mov    r8d,DWORD PTR [rax+0x30]
   14000324c:	test   r8d,r8d
   14000324f:	jne    0x140003356
   140003255:	mov    DWORD PTR [r15+0x4],0x1
   14000325d:	lea    rsi,[r15+0x828]
   140003264:	mov    rcx,rdi
   140003267:	lea    rax,[rbp-0x50]
   14000326b:	cmp    WORD PTR [rax],r13w
   14000326f:	je     0x14000327b
   140003271:	add    rax,0x2
   140003275:	sub    rcx,0x1
   140003279:	jne    0x14000326b
   14000327b:	test   rcx,rcx
   14000327e:	mov    r8d,r13d
   140003281:	mov    eax,0x80070057
   140003286:	cmove  r8d,eax
   14000328a:	test   rsi,rsi
   14000328d:	je     0x1400032a2
   14000328f:	test   r8d,r8d
   140003292:	js     0x14000329f
   140003294:	mov    rax,rdi
   140003297:	sub    rax,rcx
   14000329a:	mov    QWORD PTR [rsi],rax
   14000329d:	jmp    0x1400032a2
   14000329f:	mov    QWORD PTR [rsi],r13
   1400032a2:	test   r8d,r8d
   1400032a5:	jns    0x1400032b8
   1400032a7:	test   rsi,rsi
   1400032aa:	je     0x140003356
   1400032b0:	mov    QWORD PTR [rsi],r13
   1400032b3:	jmp    0x140003356
   1400032b8:	lea    r12,[r15+0x428]
   1400032bf:	mov    r8d,r13d
   1400032c2:	lea    rdx,[rbp-0x50]
   1400032c6:	mov    rcx,r12
   1400032c9:	sub    rdx,r12
   1400032cc:	lea    rax,[rdi+0x7ffffdfe]
   1400032d3:	test   rax,rax
   1400032d6:	je     0x1400032ee
   1400032d8:	movzx  eax,WORD PTR [rdx+rcx*1]
   1400032dc:	test   ax,ax
   1400032df:	je     0x1400032ee
   1400032e1:	mov    WORD PTR [rcx],ax
   1400032e4:	add    rcx,0x2
   1400032e8:	sub    rdi,0x1
   1400032ec:	jne    0x1400032cc
   1400032ee:	test   rdi,rdi
   1400032f1:	jne    0x1400032fd
   1400032f3:	sub    rcx,0x2
   1400032f7:	mov    r8d,0x8007007a
   1400032fd:	mov    WORD PTR [rcx],r13w
   140003301:	test   r8d,r8d
   140003304:	js     0x140003356
   140003306:	mov    r8d,DWORD PTR [rsi]
   140003309:	lea    rdi,[rbp-0x50]
   14000330d:	xor    eax,eax
   14000330f:	lea    r9,[r15+0x830]
   140003316:	mov    edx,r8d
   140003319:	add    r8d,r8d
   14000331c:	add    rdx,rdx
   14000331f:	mov    rcx,rdx
   140003322:	rep stos BYTE PTR es:[rdi],al
   140003324:	mov    rcx,rdx
   140003327:	lea    rdi,[rbp+0x3b0]
   14000332e:	rep stos BYTE PTR es:[rdi],al
   140003330:	lea    rax,[r15+0x838]
   140003337:	xor    ecx,ecx
   140003339:	mov    rdx,r12
   14000333c:	mov    QWORD PTR [rsp+0x20],rax
   140003341:	call   QWORD PTR [rip+0x2ce9]        # 0x140006030
   140003347:	test   eax,eax
   140003349:	jns    0x1400033ac
   14000334b:	mov    ecx,eax
   14000334d:	call   QWORD PTR [rip+0x30c5]        # 0x140006418
   140003353:	mov    r8d,eax
   140003356:	mov    DWORD PTR [rsp+0x30],0x1
   14000335e:	xor    r9d,r9d
   140003361:	mov    DWORD PTR [rsp+0x28],0xbb8
   140003369:	mov    DWORD PTR [rsp+0x20],r13d
   14000336e:	mov    edx,0x402
   140003373:	mov    rcx,r14
   140003376:	call   0x1400011d8
   14000337b:	or     ebx,0xffffffff
   14000337e:	mov    edx,0x400
   140003383:	lea    rdi,[r15+0x428]
   14000338a:	xor    eax,eax
   14000338c:	mov    ecx,edx
   14000338e:	rep stos BYTE PTR es:[rdi],al
   140003390:	lea    rdi,[rbp-0x50]
   140003394:	mov    DWORD PTR [r15+0x828],r13d
   14000339b:	mov    ecx,edx
   14000339d:	rep stos BYTE PTR es:[rdi],al
   14000339f:	lea    rdi,[rbp+0x3b0]
   1400033a6:	mov    ecx,edx
   1400033a8:	rep stos BYTE PTR es:[rdi],al
   1400033aa:	jmp    0x1400033df
   1400033ac:	xor    eax,eax
   1400033ae:	mov    rdi,r12
   1400033b1:	mov    ecx,0x400
   1400033b6:	xor    r8d,r8d
   1400033b9:	rep stos BYTE PTR es:[rdi],al
   1400033bb:	mov    DWORD PTR [rsi],r13d
   1400033be:	xor    edx,edx
   1400033c0:	mov    rcx,QWORD PTR [rip+0x6259]        # 0x140009620
   1400033c7:	call   QWORD PTR [rip+0x3023]        # 0x1400063f0
   1400033cd:	mov    rcx,QWORD PTR [rip+0x624c]        # 0x140009620
   1400033d4:	mov    edx,0x1
   1400033d9:	call   QWORD PTR [rip+0x3031]        # 0x140006410
   1400033df:	mov    rcx,QWORD PTR [rsp+0x40]
   1400033e4:	test   rcx,rcx
   1400033e7:	je     0x1400033ef
   1400033e9:	call   QWORD PTR [rip+0x2fe9]        # 0x1400063d8
   1400033ef:	mov    eax,ebx
   1400033f1:	mov    rcx,QWORD PTR [rbp+0x7b0]
   1400033f8:	xor    rcx,rsp
   1400033fb:	call   0x140004c70
   140003400:	mov    rbx,QWORD PTR [rsp+0x910]
   140003408:	add    rsp,0x8c0
   14000340f:	pop    r15
   140003411:	pop    r14
   140003413:	pop    r13
   140003415:	pop    r12
   140003417:	pop    rdi
   140003418:	pop    rsi
   140003419:	pop    rbp
   14000341a:	ret    
   14000341b:	int3   
   14000341c:	int3   
   14000341d:	int3   
   14000341e:	int3   
   14000341f:	int3   
   140003420:	int3   
   140003421:	int3   
   140003422:	int3   
   140003423:	int3   
   140003424:	int3   
   140003425:	int3   
   140003426:	int3   
   140003427:	int3   
   140003428:	int3   
   140003429:	int3   
   14000342a:	int3   
   14000342b:	int3   
   14000342c:	int3   
   14000342d:	int3   
   14000342e:	int3   
   14000342f:	int3   
   140003430:	mov    QWORD PTR [rsp+0x8],rbx
   140003435:	mov    QWORD PTR [rsp+0x10],rbp
   14000343a:	mov    QWORD PTR [rsp+0x18],rsi
   14000343f:	push   rdi
   140003440:	sub    rsp,0x20
   140003444:	mov    esi,edx
   140003446:	mov    rbp,r9
   140003449:	mov    edx,0xffffffeb
   14000344e:	mov    rdi,rcx
   140003451:	call   QWORD PTR [rip+0x2e11]        # 0x140006268
   140003457:	mov    rbx,rax
   14000345a:	cmp    esi,0x4e
   14000345d:	je     0x1400034e8
   140003463:	cmp    esi,0x110
   140003469:	jne    0x140003576
   14000346f:	mov    r8,QWORD PTR [rbp+0x30]
   140003473:	mov    edx,0xffffffeb
   140003478:	mov    rcx,rdi
   14000347b:	call   QWORD PTR [rip+0x2daf]        # 0x140006230
   140003481:	mov    edx,0x402
   140003486:	mov    rcx,rdi
   140003489:	call   0x140001008
   14000348e:	mov    edx,0x409
   140003493:	mov    rcx,rdi
   140003496:	call   0x140001008
   14000349b:	mov    edx,0x3f6
   1400034a0:	mov    rcx,rdi
   1400034a3:	call   QWORD PTR [rip+0x2daf]        # 0x140006258
   1400034a9:	mov    esi,0x200
   1400034ae:	mov    ebx,0xc5
   1400034b3:	mov    rcx,rax
   1400034b6:	mov    r8d,esi
   1400034b9:	mov    edx,ebx
   1400034bb:	xor    r9d,r9d
   1400034be:	call   QWORD PTR [rip+0x2d5c]        # 0x140006220
   1400034c4:	mov    edx,0x3f7
   1400034c9:	mov    rcx,rdi
   1400034cc:	call   QWORD PTR [rip+0x2d86]        # 0x140006258
   1400034d2:	xor    r9d,r9d
   1400034d5:	mov    r8d,esi
   1400034d8:	mov    rcx,rax
   1400034db:	mov    edx,ebx
   1400034dd:	call   QWORD PTR [rip+0x2d3d]        # 0x140006220
   1400034e3:	jmp    0x140003576
   1400034e8:	cmp    DWORD PTR [rbp+0x10],0xffffff31
   1400034ef:	je     0x14000357a
   1400034f5:	cmp    DWORD PTR [rbp+0x10],0xffffff35
   1400034fc:	je     0x14000356c
   1400034fe:	cmp    DWORD PTR [rbp+0x10],0xffffff38
   140003505:	jne    0x140003576
   140003507:	mov    rcx,rdi
   14000350a:	call   QWORD PTR [rip+0x2d68]        # 0x140006278
   140003510:	mov    r9d,0x2
   140003516:	xor    r8d,r8d
   140003519:	mov    rcx,rax
   14000351c:	mov    edx,0x470
   140003521:	call   QWORD PTR [rip+0x2d49]        # 0x140006270
   140003527:	mov    edx,0x40a
   14000352c:	mov    rcx,rdi
   14000352f:	call   QWORD PTR [rip+0x2d23]        # 0x140006258
   140003535:	mov    rcx,rax
   140003538:	lea    rdx,[rbx+0x18]
   14000353c:	call   QWORD PTR [rip+0x2cce]        # 0x140006210
   140003542:	mov    rdx,QWORD PTR [rip+0x60c7]        # 0x140009610
   140003549:	xor    r8d,r8d
   14000354c:	mov    rcx,QWORD PTR [rip+0x60cd]        # 0x140009620
   140003553:	mov    BYTE PTR [rip+0x656e],0x0        # 0x140009ac8
   14000355a:	mov    QWORD PTR [rip+0x655f],rdi        # 0x140009ac0
   140003561:	call   QWORD PTR [rip+0x2e89]        # 0x1400063f0
   140003567:	xor    r8d,r8d
   14000356a:	jmp    0x140003588
   14000356c:	mov    DWORD PTR [rax+0x83c],0x4c7
   140003576:	xor    eax,eax
   140003578:	jmp    0x140003598
   14000357a:	mov    rdx,rax
   14000357d:	mov    rcx,rdi
   140003580:	call   0x1400030c8
   140003585:	movsxd r8,eax
   140003588:	xor    edx,edx
   14000358a:	mov    rcx,rdi
   14000358d:	call   QWORD PTR [rip+0x2c9d]        # 0x140006230
   140003593:	mov    eax,0x1
   140003598:	mov    rbx,QWORD PTR [rsp+0x30]
   14000359d:	mov    rbp,QWORD PTR [rsp+0x38]
   1400035a2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400035a7:	add    rsp,0x20
   1400035ab:	pop    rdi
   1400035ac:	ret    
   1400035ad:	int3   
   1400035ae:	int3   
   1400035af:	int3   
   1400035b0:	int3   
   1400035b1:	int3   
   1400035b2:	int3   
   1400035b3:	int3   
   1400035b4:	mov    QWORD PTR [rsp+0x18],rbx
   1400035b9:	push   rbp
   1400035ba:	push   rsi
   1400035bb:	push   rdi
   1400035bc:	push   r12
   1400035be:	push   r13
   1400035c0:	push   r14
   1400035c2:	push   r15
   1400035c4:	sub    rsp,0x450
   1400035cb:	mov    rax,QWORD PTR [rip+0x5a36]        # 0x140009008
   1400035d2:	xor    rax,rsp
   1400035d5:	mov    QWORD PTR [rsp+0x440],rax
   1400035dd:	mov    r14,rdx
   1400035e0:	mov    r15,rcx
   1400035e3:	xor    r12d,r12d
   1400035e6:	lea    rcx,[rsp+0x42]
   1400035eb:	xor    edx,edx
   1400035ed:	mov    WORD PTR [rsp+0x40],r12w
   1400035f3:	mov    r8d,0x3fe
   1400035f9:	mov    esi,0x137
   1400035fe:	call   0x1400052a4
   140003603:	lea    rax,[rsp+0x40]
   140003608:	mov    DWORD PTR [r14+0x4],r12d
   14000360c:	mov    edi,0x200
   140003611:	mov    QWORD PTR [rsp+0x20],rax
   140003616:	mov    r9d,edi
   140003619:	lea    r8d,[r12+0xd]
   14000361e:	mov    edx,0x3f9
   140003623:	mov    rcx,r15
   140003626:	call   QWORD PTR [rip+0x2c24]        # 0x140006250
   14000362c:	lea    r13d,[r12+0x1]
   140003631:	cmp    r12w,WORD PTR [rsp+0x40]
   140003637:	je     0x1400037a2
   14000363d:	mov    DWORD PTR [r14+0x4],r13d
   140003641:	lea    rbx,[r14+0x828]
   140003648:	mov    ecx,edi
   14000364a:	lea    rax,[rsp+0x40]
   14000364f:	cmp    WORD PTR [rax],r12w
   140003653:	je     0x14000365e
   140003655:	add    rax,0x2
   140003659:	sub    rcx,r13
   14000365c:	jne    0x14000364f
   14000365e:	test   rcx,rcx
   140003661:	mov    r8d,r12d
   140003664:	mov    eax,0x80070057
   140003669:	cmove  r8d,eax
   14000366d:	test   rbx,rbx
   140003670:	je     0x140003685
   140003672:	test   r8d,r8d
   140003675:	js     0x140003682
   140003677:	mov    rax,rdi
   14000367a:	sub    rax,rcx
   14000367d:	mov    QWORD PTR [rbx],rax
   140003680:	jmp    0x140003685
   140003682:	mov    QWORD PTR [rbx],r12
   140003685:	test   r8d,r8d
   140003688:	jns    0x14000369b
   14000368a:	test   rbx,rbx
   14000368d:	je     0x14000374e
   140003693:	mov    QWORD PTR [rbx],r12
   140003696:	jmp    0x14000374e
   14000369b:	mov    rdx,rdi
   14000369e:	lea    rbp,[r14+0x428]
   1400036a5:	lea    rdi,[rsp+0x40]
   1400036aa:	mov    rcx,rbp
   1400036ad:	sub    rdi,rbp
   1400036b0:	mov    r8d,r12d
   1400036b3:	lea    rax,[rdx+0x7ffffdfe]
   1400036ba:	test   rax,rax
   1400036bd:	je     0x1400036d4
   1400036bf:	movzx  eax,WORD PTR [rdi+rcx*1]
   1400036c3:	test   ax,ax
   1400036c6:	je     0x1400036d4
   1400036c8:	mov    WORD PTR [rcx],ax
   1400036cb:	add    rcx,0x2
   1400036cf:	sub    rdx,r13
   1400036d2:	jne    0x1400036b3
   1400036d4:	test   rdx,rdx
   1400036d7:	jne    0x1400036e3
   1400036d9:	sub    rcx,0x2
   1400036dd:	mov    r8d,0x8007007a
   1400036e3:	mov    WORD PTR [rcx],r12w
   1400036e7:	test   r8d,r8d
   1400036ea:	js     0x14000374e
   1400036ec:	mov    ecx,DWORD PTR [rbx]
   1400036ee:	lea    rdi,[rsp+0x40]
   1400036f3:	add    rcx,rcx
   1400036f6:	xor    eax,eax
   1400036f8:	rep stos BYTE PTR es:[rdi],al
   1400036fa:	mov    rcx,QWORD PTR [rip+0x5f17]        # 0x140009618
   140003701:	call   QWORD PTR [rip+0x2909]        # 0x140006010
   140003707:	test   eax,eax
   140003709:	jne    0x140003713
   14000370b:	call   QWORD PTR [rip+0x2a17]        # 0x140006128
   140003711:	jmp    0x14000374b
   140003713:	mov    r8d,DWORD PTR [rbx]
   140003716:	lea    rax,[r14+0x838]
   14000371d:	add    r8d,r8d
   140003720:	mov    QWORD PTR [rsp+0x20],rax
   140003725:	lea    r9,[r14+0x830]
   14000372c:	mov    rdx,rbp
   14000372f:	xor    ecx,ecx
   140003731:	call   QWORD PTR [rip+0x28f9]        # 0x140006030
   140003737:	mov    edi,eax
   140003739:	call   QWORD PTR [rip+0x28d9]        # 0x140006018
   14000373f:	test   edi,edi
   140003741:	jns    0x140003793
   140003743:	mov    ecx,edi
   140003745:	call   QWORD PTR [rip+0x2ccd]        # 0x140006418
   14000374b:	mov    r8d,eax
   14000374e:	mov    DWORD PTR [rsp+0x30],r13d
   140003753:	xor    r9d,r9d
   140003756:	mov    DWORD PTR [rsp+0x28],0xbb8
   14000375e:	mov    edx,0x402
   140003763:	mov    rcx,r15
   140003766:	mov    DWORD PTR [rsp+0x20],r12d
   14000376b:	call   0x1400011d8
   140003770:	mov    edx,0x200
   140003775:	lea    rdi,[r14+0x428]
   14000377c:	or     esi,0xffffffff
   14000377f:	mov    ecx,edx
   140003781:	xor    eax,eax
   140003783:	rep stos BYTE PTR es:[rdi],al
   140003785:	lea    rdi,[rsp+0x40]
   14000378a:	mov    DWORD PTR [rbx],r12d
   14000378d:	mov    ecx,edx
   14000378f:	rep stos BYTE PTR es:[rdi],al
   140003791:	jmp    0x1400037c4
   140003793:	mov    rdi,rbp
   140003796:	xor    eax,eax
   140003798:	mov    ecx,0x200
   14000379d:	rep stos BYTE PTR es:[rdi],al
   14000379f:	mov    DWORD PTR [rbx],r12d
   1400037a2:	mov    rcx,QWORD PTR [rip+0x5e77]        # 0x140009620
   1400037a9:	xor    r8d,r8d
   1400037ac:	xor    edx,edx
   1400037ae:	call   QWORD PTR [rip+0x2c3c]        # 0x1400063f0
   1400037b4:	mov    rcx,QWORD PTR [rip+0x5e65]        # 0x140009620
   1400037bb:	mov    edx,r13d
   1400037be:	call   QWORD PTR [rip+0x2c4c]        # 0x140006410
   1400037c4:	mov    eax,esi
   1400037c6:	mov    rcx,QWORD PTR [rsp+0x440]
   1400037ce:	xor    rcx,rsp
   1400037d1:	call   0x140004c70
   1400037d6:	mov    rbx,QWORD PTR [rsp+0x4a0]
   1400037de:	add    rsp,0x450
   1400037e5:	pop    r15
   1400037e7:	pop    r14
   1400037e9:	pop    r13
   1400037eb:	pop    r12
   1400037ed:	pop    rdi
   1400037ee:	pop    rsi
   1400037ef:	pop    rbp
   1400037f0:	ret    
   1400037f1:	int3   
   1400037f2:	int3   
   1400037f3:	int3   
   1400037f4:	int3   
   1400037f5:	int3   
   1400037f6:	int3   
   1400037f7:	int3   
   1400037f8:	int3   
   1400037f9:	int3   
   1400037fa:	int3   
   1400037fb:	int3   
   1400037fc:	int3   
   1400037fd:	int3   
   1400037fe:	int3   
   1400037ff:	int3   
   140003800:	mov    QWORD PTR [rsp+0x8],rbx
   140003805:	mov    QWORD PTR [rsp+0x10],rbp
   14000380a:	mov    QWORD PTR [rsp+0x18],rsi
   14000380f:	push   rdi
   140003810:	sub    rsp,0x30
   140003814:	mov    esi,edx
   140003816:	mov    rbp,r9
   140003819:	mov    edx,0xffffffeb
   14000381e:	mov    rdi,rcx
   140003821:	call   QWORD PTR [rip+0x2a41]        # 0x140006268
   140003827:	mov    rbx,rax
   14000382a:	cmp    esi,0x4e
   14000382d:	je     0x14000388f
   14000382f:	cmp    esi,0x110
   140003835:	jne    0x140003946
   14000383b:	mov    r8,QWORD PTR [rbp+0x30]
   14000383f:	mov    edx,0xffffffeb
   140003844:	mov    rcx,rdi
   140003847:	call   QWORD PTR [rip+0x29e3]        # 0x140006230
   14000384d:	mov    edx,0x402
   140003852:	mov    rcx,rdi
   140003855:	call   0x140001008
   14000385a:	mov    edx,0x409
   14000385f:	mov    rcx,rdi
   140003862:	call   0x140001008
   140003867:	mov    edx,0x3f9
   14000386c:	mov    rcx,rdi
   14000386f:	call   QWORD PTR [rip+0x29e3]        # 0x140006258
   140003875:	xor    r9d,r9d
   140003878:	lea    edx,[rsi-0x4b]
   14000387b:	mov    rcx,rax
   14000387e:	mov    r8d,0x200
   140003884:	call   QWORD PTR [rip+0x2996]        # 0x140006220
   14000388a:	jmp    0x140003946
   14000388f:	cmp    DWORD PTR [rbp+0x10],0xffffff31
   140003896:	je     0x14000394a
   14000389c:	cmp    DWORD PTR [rbp+0x10],0xffffff35
   1400038a3:	je     0x14000393c
   1400038a9:	cmp    DWORD PTR [rbp+0x10],0xffffff38
   1400038b0:	jne    0x140003946
   1400038b6:	mov    rdx,QWORD PTR [rip+0x5d53]        # 0x140009610
   1400038bd:	xor    r8d,r8d
   1400038c0:	mov    rcx,QWORD PTR [rip+0x5d59]        # 0x140009620
   1400038c7:	mov    BYTE PTR [rip+0x61fa],0x0        # 0x140009ac8
   1400038ce:	mov    QWORD PTR [rip+0x61eb],rdi        # 0x140009ac0
   1400038d5:	call   QWORD PTR [rip+0x2b15]        # 0x1400063f0
   1400038db:	mov    rcx,rdi
   1400038de:	call   QWORD PTR [rip+0x2994]        # 0x140006278
   1400038e4:	mov    r9d,0x2
   1400038ea:	xor    r8d,r8d
   1400038ed:	mov    rcx,rax
   1400038f0:	mov    edx,0x470
   1400038f5:	call   QWORD PTR [rip+0x2975]        # 0x140006270
   1400038fb:	mov    edx,0x40a
   140003900:	mov    rcx,rdi
   140003903:	call   QWORD PTR [rip+0x294f]        # 0x140006258
   140003909:	mov    rcx,rax
   14000390c:	lea    rdx,[rbx+0x18]
   140003910:	call   QWORD PTR [rip+0x28fa]        # 0x140006210
   140003916:	xor    r9d,r9d
   140003919:	lea    rax,[rip+0x2be0]        # 0x140006500
   140003920:	mov    edx,0x3f9
   140003925:	mov    QWORD PTR [rsp+0x20],rax
   14000392a:	mov    rcx,rdi
   14000392d:	lea    r8d,[r9+0xc]
   140003931:	call   QWORD PTR [rip+0x2919]        # 0x140006250
   140003937:	xor    r8d,r8d
   14000393a:	jmp    0x140003958
   14000393c:	mov    DWORD PTR [rax+0x83c],0x4c7
   140003946:	xor    eax,eax
   140003948:	jmp    0x140003968
   14000394a:	mov    rdx,rax
   14000394d:	mov    rcx,rdi
   140003950:	call   0x1400035b4
   140003955:	movsxd r8,eax
   140003958:	xor    edx,edx
   14000395a:	mov    rcx,rdi
   14000395d:	call   QWORD PTR [rip+0x28cd]        # 0x140006230
   140003963:	mov    eax,0x1
   140003968:	mov    rbx,QWORD PTR [rsp+0x40]
   14000396d:	mov    rbp,QWORD PTR [rsp+0x48]
   140003972:	mov    rsi,QWORD PTR [rsp+0x50]
   140003977:	add    rsp,0x30
   14000397b:	pop    rdi
   14000397c:	ret    
   14000397d:	int3   
   14000397e:	int3   
   14000397f:	int3   
   140003980:	int3   
   140003981:	int3   
   140003982:	int3   
   140003983:	int3   
   140003984:	mov    QWORD PTR [rsp+0x8],rbx
   140003989:	mov    QWORD PTR [rsp+0x10],rbp
   14000398e:	mov    QWORD PTR [rsp+0x18],rsi
   140003993:	push   rdi
   140003994:	sub    rsp,0x40
   140003998:	mov    rdi,rdx
   14000399b:	mov    rbp,rcx
   14000399e:	call   QWORD PTR [rip+0x28d4]        # 0x140006278
   1400039a4:	xor    r9d,r9d
   1400039a7:	xor    r8d,r8d
   1400039aa:	mov    rcx,rax
   1400039ad:	mov    edx,0x470
   1400039b2:	call   QWORD PTR [rip+0x28b8]        # 0x140006270
   1400039b8:	mov    rcx,QWORD PTR [rip+0x5cf9]        # 0x1400096b8
   1400039bf:	lea    r8,[rip+0x5cfa]        # 0x1400096c0
   1400039c6:	mov    eax,0x1
   1400039cb:	mov    QWORD PTR [rdi+0x10],rbp
   1400039cf:	sub    eax,DWORD PTR [rdi]
   1400039d1:	mov    r9d,0x1f4
   1400039d7:	neg    eax
   1400039d9:	sbb    edx,edx
   1400039db:	add    edx,0xd7
   1400039e1:	call   QWORD PTR [rip+0x2861]        # 0x140006248
   1400039e7:	mov    rcx,rbp
   1400039ea:	call   QWORD PTR [rip+0x2888]        # 0x140006278
   1400039f0:	mov    r9d,0x139
   1400039f6:	xor    r8d,r8d
   1400039f9:	mov    rcx,rax
   1400039fc:	mov    edx,0x485
   140003a01:	call   QWORD PTR [rip+0x2819]        # 0x140006220
   140003a07:	mov    rcx,rbp
   140003a0a:	movsxd rbx,eax
   140003a0d:	call   QWORD PTR [rip+0x2865]        # 0x140006278
   140003a13:	lea    r9,[rip+0x5ca6]        # 0x1400096c0
   140003a1a:	mov    r8,rbx
   140003a1d:	mov    rcx,rax
   140003a20:	mov    edx,0x47e
   140003a25:	call   QWORD PTR [rip+0x27f5]        # 0x140006220
   140003a2b:	lea    rbx,[rip+0x5c0e]        # 0x140009640
   140003a32:	mov    edx,0x70
   140003a37:	mov    rcx,rbx
   140003a3a:	call   QWORD PTR [rip+0x2798]        # 0x1400061d8
   140003a40:	test   eax,eax
   140003a42:	je     0x140003a4e
   140003a44:	call   QWORD PTR [rip+0x26de]        # 0x140006128
   140003a4a:	mov    ebx,eax
   140003a4c:	jmp    0x140003acc
   140003a4e:	and    QWORD PTR [rsp+0x28],0x0
   140003a54:	lea    r8,[rip+0xffffffffffffd955]        # 0x1400013b0
   140003a5b:	and    DWORD PTR [rsp+0x20],0x0
   140003a60:	xor    r9d,r9d
   140003a63:	xor    edx,edx
   140003a65:	xor    ecx,ecx
   140003a67:	call   QWORD PTR [rip+0x2653]        # 0x1400060c0
   140003a6d:	mov    rsi,rax
   140003a70:	test   rax,rax
   140003a73:	je     0x140003a44
   140003a75:	lea    rax,[rip+0xffffffffffffd954]        # 0x1400013d0
   140003a7c:	mov    DWORD PTR [rip+0x5be6],0x5        # 0x14000966c
   140003a86:	mov    QWORD PTR [rip+0x5be3],rax        # 0x140009670
   140003a8d:	lea    rdx,[rdi+0x18]
   140003a91:	mov    QWORD PTR [rip+0x5be0],rsi        # 0x140009678
   140003a98:	mov    rcx,rbx
   140003a9b:	mov    QWORD PTR [rip+0x5bb6],rdi        # 0x140009658
   140003aa2:	cmp    DWORD PTR [rdi],0x1
   140003aa5:	jne    0x140003aae
   140003aa7:	call   0x14000458c
   140003aac:	jmp    0x140003ab3
   140003aae:	call   0x140004638
   140003ab3:	test   eax,eax
   140003ab5:	jne    0x140003ac1
   140003ab7:	call   QWORD PTR [rip+0x266b]        # 0x140006128
   140003abd:	mov    ebx,eax
   140003abf:	jmp    0x140003ac3
   140003ac1:	xor    ebx,ebx
   140003ac3:	mov    rcx,rsi
   140003ac6:	call   QWORD PTR [rip+0x25dc]        # 0x1400060a8
   140003acc:	test   ebx,ebx
   140003ace:	je     0x140003af4
   140003ad0:	and    DWORD PTR [rsp+0x30],0x0
   140003ad5:	xor    r9d,r9d
   140003ad8:	and    DWORD PTR [rsp+0x28],0x0
   140003add:	mov    r8d,ebx
   140003ae0:	and    DWORD PTR [rsp+0x20],0x0
   140003ae5:	mov    edx,0x401
   140003aea:	mov    rcx,rbp
   140003aed:	call   0x1400011d8
   140003af2:	jmp    0x140003af6
   140003af4:	xor    ebx,ebx
   140003af6:	mov    rbp,QWORD PTR [rsp+0x58]
   140003afb:	mov    eax,ebx
   140003afd:	mov    rbx,QWORD PTR [rsp+0x50]
   140003b02:	mov    rsi,QWORD PTR [rsp+0x60]
   140003b07:	add    rsp,0x40
   140003b0b:	pop    rdi
   140003b0c:	ret    
   140003b0d:	int3   
   140003b0e:	int3   
   140003b0f:	int3   
   140003b10:	int3   
   140003b11:	int3   
   140003b12:	int3   
   140003b13:	int3   
   140003b14:	int3   
   140003b15:	int3   
   140003b16:	int3   
   140003b17:	int3   
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	mov    QWORD PTR [rsp+0x8],rbx
   140003b25:	mov    QWORD PTR [rsp+0x18],rbp
   140003b2a:	mov    QWORD PTR [rsp+0x20],rsi
   140003b2f:	push   rdi
   140003b30:	sub    rsp,0x40
   140003b34:	mov    ebx,edx
   140003b36:	mov    rbp,r9
   140003b39:	mov    edx,0xffffffeb
   140003b3e:	mov    rdi,rcx
   140003b41:	call   QWORD PTR [rip+0x2721]        # 0x140006268
   140003b47:	mov    rsi,rax
   140003b4a:	cmp    ebx,0x4e
   140003b4d:	je     0x140003c00
   140003b53:	cmp    ebx,0x110
   140003b59:	je     0x140003be9
   140003b5f:	cmp    ebx,0x8065
   140003b65:	jne    0x140003c93
   140003b6b:	xor    ebx,ebx
   140003b6d:	lea    rdx,[rsp+0x58]
   140003b72:	lea    rcx,[rip+0x5ac7]        # 0x140009640
   140003b79:	mov    DWORD PTR [rsp+0x58],ebx
   140003b7d:	call   QWORD PTR [rip+0x263d]        # 0x1400061c0
   140003b83:	mov    ecx,DWORD PTR [rsp+0x58]
   140003b87:	test   eax,eax
   140003b89:	cmovne ecx,eax
   140003b8c:	mov    DWORD PTR [rsp+0x58],ecx
   140003b90:	test   ecx,ecx
   140003b92:	je     0x140003bbf
   140003b94:	call   QWORD PTR [rip+0x2556]        # 0x1400060f0
   140003b9a:	call   QWORD PTR [rip+0x2588]        # 0x140006128
   140003ba0:	mov    DWORD PTR [rsp+0x30],ebx
   140003ba4:	xor    r9d,r9d
   140003ba7:	mov    r8d,eax
   140003baa:	mov    DWORD PTR [rsp+0x28],ebx
   140003bae:	mov    edx,0x401
   140003bb3:	mov    DWORD PTR [rsp+0x20],ebx
   140003bb7:	mov    rcx,rdi
   140003bba:	call   0x1400011d8
   140003bbf:	mov    rcx,rdi
   140003bc2:	mov    DWORD PTR [rsi+0x8],0x1
   140003bc9:	call   QWORD PTR [rip+0x26a9]        # 0x140006278
   140003bcf:	xor    r9d,r9d
   140003bd2:	mov    edx,0x471
   140003bd7:	mov    rcx,rax
   140003bda:	lea    r8d,[r9+0x5]
   140003bde:	call   QWORD PTR [rip+0x268c]        # 0x140006270
   140003be4:	jmp    0x140003c93
   140003be9:	mov    r8,QWORD PTR [rbp+0x30]
   140003bed:	mov    edx,0xffffffeb
   140003bf2:	mov    rcx,rdi
   140003bf5:	call   QWORD PTR [rip+0x2635]        # 0x140006230
   140003bfb:	jmp    0x140003c93
   140003c00:	cmp    DWORD PTR [rbp+0x10],0xffffff35
   140003c07:	je     0x140003c69
   140003c09:	cmp    DWORD PTR [rbp+0x10],0xffffff37
   140003c10:	je     0x140003c3b
   140003c12:	cmp    DWORD PTR [rbp+0x10],0xffffff38
   140003c19:	jne    0x140003c93
   140003c1b:	mov    rdx,rax
   140003c1e:	mov    rcx,rdi
   140003c21:	call   0x140003984
   140003c26:	xor    r8d,r8d
   140003c29:	xor    edx,edx
   140003c2b:	mov    rcx,rdi
   140003c2e:	call   QWORD PTR [rip+0x25fc]        # 0x140006230
   140003c34:	mov    eax,0x1
   140003c39:	jmp    0x140003c95
   140003c3b:	xor    edx,edx
   140003c3d:	mov    rcx,rdi
   140003c40:	lea    r8d,[rdx+0x1]
   140003c44:	call   QWORD PTR [rip+0x25e6]        # 0x140006230
   140003c4a:	mov    rcx,rdi
   140003c4d:	call   QWORD PTR [rip+0x2625]        # 0x140006278
   140003c53:	xor    r9d,r9d
   140003c56:	xor    r8d,r8d
   140003c59:	mov    rcx,rax
   140003c5c:	mov    edx,0x470
   140003c61:	call   QWORD PTR [rip+0x2609]        # 0x140006270
   140003c67:	jmp    0x140003c34
   140003c69:	xor    ebx,ebx
   140003c6b:	cmp    DWORD PTR [rax+0x8],ebx
   140003c6e:	jne    0x140003c93
   140003c70:	lea    edx,[rbx+0x1]
   140003c73:	lea    rcx,[rip+0x59c6]        # 0x140009640
   140003c7a:	call   QWORD PTR [rip+0x2568]        # 0x1400061e8
   140003c80:	test   eax,eax
   140003c82:	je     0x140003c8c
   140003c84:	mov    ecx,eax
   140003c86:	call   QWORD PTR [rip+0x2464]        # 0x1400060f0
   140003c8c:	mov    DWORD PTR [rsi+0x8],0x1
   140003c93:	xor    eax,eax
   140003c95:	mov    rbx,QWORD PTR [rsp+0x50]
   140003c9a:	mov    rbp,QWORD PTR [rsp+0x60]
   140003c9f:	mov    rsi,QWORD PTR [rsp+0x68]
   140003ca4:	add    rsp,0x40
   140003ca8:	pop    rdi
   140003ca9:	ret    
   140003caa:	int3   
   140003cab:	int3   
   140003cac:	int3   
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	rex push rbp
   140003cb2:	push   rbx
   140003cb3:	push   rsi
   140003cb4:	push   rdi
   140003cb5:	push   r12
   140003cb7:	push   r14
   140003cb9:	push   r15
   140003cbb:	mov    rbp,rsp
   140003cbe:	sub    rsp,0x60
   140003cc2:	xor    r12d,r12d
   140003cc5:	mov    r15,r8
   140003cc8:	mov    DWORD PTR [rbp-0x2c],r12d
   140003ccc:	mov    r14,rdx
   140003ccf:	mov    DWORD PTR [rbp-0x30],r12d
   140003cd3:	mov    rdi,rcx
   140003cd6:	mov    BYTE PTR [r8],r12b
   140003cd9:	mov    ebx,0x507
   140003cde:	call   QWORD PTR [rip+0x246c]        # 0x140006150
   140003ce4:	mov    rcx,rax
   140003ce7:	lea    rdx,[rbp-0x2c]
   140003ceb:	call   QWORD PTR [rip+0x250f]        # 0x140006200
   140003cf1:	mov    rsi,rax
   140003cf4:	test   rax,rax
   140003cf7:	je     0x140003f2b
   140003cfd:	mov    eax,DWORD PTR [rbp-0x2c]
   140003d00:	lea    r10d,[r12+0x1]
   140003d05:	cmp    eax,r10d
   140003d08:	je     0x140003f1f
   140003d0e:	cmp    eax,0x2
   140003d11:	jne    0x140003d3c
   140003d13:	mov    rax,QWORD PTR [rsi+0x8]
   140003d17:	lea    ecx,[r12+0x42]
   140003d1c:	cmp    cx,WORD PTR [rax]
   140003d1f:	jne    0x140003d2d
   140003d21:	mov    DWORD PTR [rdi+0x30],r10d
   140003d25:	mov    DWORD PTR [r14],r10d
   140003d28:	jmp    0x140003f1f
   140003d2d:	mov    DWORD PTR [rdi+0x30],0x2
   140003d34:	mov    DWORD PTR [r14],r12d
   140003d37:	jmp    0x140003f1f
   140003d3c:	cmp    eax,0x6
   140003d3f:	jne    0x140003f22
   140003d45:	mov    BYTE PTR [r15],r10b
   140003d48:	mov    ecx,0x42
   140003d4d:	mov    rax,QWORD PTR [rsi+0x8]
   140003d51:	lea    ebx,[rcx-0x3e]
   140003d54:	cmp    cx,WORD PTR [rax]
   140003d57:	jne    0x140003d61
   140003d59:	mov    DWORD PTR [rdi+0x30],ebx
   140003d5c:	mov    DWORD PTR [r14],r10d
   140003d5f:	jmp    0x140003d6b
   140003d61:	mov    DWORD PTR [rdi+0x30],0x5
   140003d68:	mov    DWORD PTR [r14],r12d
   140003d6b:	mov    r8,QWORD PTR [rsi+0x10]
   140003d6f:	lea    rcx,[r14+0x18]
   140003d73:	mov    edx,0x104
   140003d78:	mov    r9d,r12d
   140003d7b:	lea    rax,[rdx+0x7ffffefa]
   140003d82:	test   rax,rax
   140003d85:	je     0x140003da0
   140003d87:	movzx  eax,WORD PTR [r8]
   140003d8b:	test   ax,ax
   140003d8e:	je     0x140003da0
   140003d90:	mov    WORD PTR [rcx],ax
   140003d93:	add    r8,0x2
   140003d97:	add    rcx,0x2
   140003d9b:	sub    rdx,r10
   140003d9e:	jne    0x140003d7b
   140003da0:	test   rdx,rdx
   140003da3:	jne    0x140003daf
   140003da5:	sub    rcx,0x2
   140003da9:	mov    r9d,0x8007007a
   140003daf:	mov    WORD PTR [rcx],r12w
   140003db3:	test   r9d,r9d
   140003db6:	jns    0x140003dc2
   140003db8:	mov    ebx,0x57
   140003dbd:	jmp    0x140003f22
   140003dc2:	mov    rcx,QWORD PTR [rsi+0x18]
   140003dc6:	lea    r8,[rbp-0x30]
   140003dca:	lea    rdx,[rip+0x27ff]        # 0x1400065d0
   140003dd1:	call   QWORD PTR [rip+0x2591]        # 0x140006368
   140003dd7:	test   eax,eax
   140003dd9:	je     0x140003db8
   140003ddb:	mov    rcx,QWORD PTR [rsi+0x20]
   140003ddf:	lea    r8,[rbp-0x18]
   140003de3:	lea    rdx,[rip+0x27fe]        # 0x1400065e8
   140003dea:	call   QWORD PTR [rip+0x2578]        # 0x140006368
   140003df0:	test   eax,eax
   140003df2:	je     0x140003db8
   140003df4:	mov    rdx,QWORD PTR [rbp-0x18]
   140003df8:	lea    r8,[rbp-0x20]
   140003dfc:	mov    ecx,DWORD PTR [rbp-0x30]
   140003dff:	mov    QWORD PTR [rbp-0x20],r12
   140003e03:	call   0x140001b88
   140003e08:	mov    edi,eax
   140003e0a:	test   eax,eax
   140003e0c:	jne    0x140003e6c
   140003e0e:	mov    r9d,ebx
   140003e11:	lea    rax,[rbp-0x10]
   140003e15:	mov    rbx,QWORD PTR [rbp-0x20]
   140003e19:	lea    r8,[rbp-0x28]
   140003e1d:	mov    rcx,rbx
   140003e20:	mov    QWORD PTR [rsp+0x20],rax
   140003e25:	lea    edx,[rdi+0x8]
   140003e28:	call   QWORD PTR [rip+0x21d2]        # 0x140006000
   140003e2e:	test   eax,eax
   140003e30:	jne    0x140003e3c
   140003e32:	call   QWORD PTR [rip+0x22f0]        # 0x140006128
   140003e38:	mov    edi,eax
   140003e3a:	jmp    0x140003e70
   140003e3c:	cmp    DWORD PTR [rbp-0x28],0x2
   140003e40:	je     0x140003e5d
   140003e42:	lea    r8,[rip+0x57cf]        # 0x140009618
   140003e49:	mov    edx,0x2
   140003e4e:	mov    rcx,rbx
   140003e51:	call   QWORD PTR [rip+0x21b1]        # 0x140006008
   140003e57:	test   eax,eax
   140003e59:	jne    0x140003e67
   140003e5b:	jmp    0x140003e32
   140003e5d:	mov    QWORD PTR [rip+0x57b4],rbx        # 0x140009618
   140003e64:	mov    rbx,r12
   140003e67:	mov    edi,r12d
   140003e6a:	jmp    0x140003e70
   140003e6c:	mov    rbx,QWORD PTR [rbp-0x20]
   140003e70:	test   rbx,rbx
   140003e73:	je     0x140003e7e
   140003e75:	mov    rcx,rbx
   140003e78:	call   QWORD PTR [rip+0x222a]        # 0x1400060a8
   140003e7e:	test   edi,edi
   140003e80:	je     0x140003e8f
   140003e82:	call   QWORD PTR [rip+0x22a0]        # 0x140006128
   140003e88:	mov    ebx,eax
   140003e8a:	jmp    0x140003f22
   140003e8f:	mov    rcx,QWORD PTR [rsi+0x28]
   140003e93:	lea    r8,[rbp-0x18]
   140003e97:	lea    rdx,[rip+0x2772]        # 0x140006610
   140003e9e:	call   QWORD PTR [rip+0x24c4]        # 0x140006368
   140003ea4:	test   eax,eax
   140003ea6:	je     0x140003db8
   140003eac:	mov    rdx,QWORD PTR [rbp-0x18]
   140003eb0:	lea    r8,[rip+0x5759]        # 0x140009610
   140003eb7:	mov    ecx,DWORD PTR [rbp-0x30]
   140003eba:	call   0x140001b88
   140003ebf:	mov    ebx,eax
   140003ec1:	test   eax,eax
   140003ec3:	jne    0x140003f22
   140003ec5:	xor    r9d,r9d
   140003ec8:	lea    rdx,[rip+0xffffffffffffd1e1]        # 0x1400010b0
   140003ecf:	xor    r8d,r8d
   140003ed2:	lea    rcx,[rip+0x5747]        # 0x140009620
   140003ed9:	call   QWORD PTR [rip+0x2529]        # 0x140006408
   140003edf:	test   eax,eax
   140003ee1:	jns    0x140003eed
   140003ee3:	mov    ecx,eax
   140003ee5:	call   QWORD PTR [rip+0x252d]        # 0x140006418
   140003eeb:	jmp    0x140003e88
   140003eed:	lea    rcx,[r14+0x220]
   140003ef4:	call   0x140001150
   140003ef9:	mov    ebx,eax
   140003efb:	test   eax,eax
   140003efd:	jne    0x140003f22
   140003eff:	xor    r9d,r9d
   140003f02:	xor    r8d,r8d
   140003f05:	xor    edx,edx
   140003f07:	xor    ecx,ecx
   140003f09:	call   QWORD PTR [rip+0x21d9]        # 0x1400060e8
   140003f0f:	mov    QWORD PTR [rip+0x579a],rax        # 0x1400096b0
   140003f16:	test   rax,rax
   140003f19:	je     0x140003e82
   140003f1f:	mov    ebx,r12d
   140003f22:	mov    rcx,rsi
   140003f25:	call   QWORD PTR [rip+0x2255]        # 0x140006180
   140003f2b:	mov    eax,ebx
   140003f2d:	add    rsp,0x60
   140003f31:	pop    r15
   140003f33:	pop    r14
   140003f35:	pop    r12
   140003f37:	pop    rdi
   140003f38:	pop    rsi
   140003f39:	pop    rbx
   140003f3a:	pop    rbp
   140003f3b:	ret    
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	int3   
   140003f41:	int3   
   140003f42:	int3   
   140003f43:	int3   
   140003f44:	mov    rax,rsp
   140003f47:	mov    QWORD PTR [rax+0x8],rbx
   140003f4b:	mov    QWORD PTR [rax+0x10],rsi
   140003f4f:	mov    QWORD PTR [rax+0x18],rdi
   140003f53:	mov    QWORD PTR [rax+0x20],r15
   140003f57:	push   rbp
   140003f58:	lea    rbp,[rax-0x888]
   140003f5f:	sub    rsp,0x980
   140003f66:	mov    rax,QWORD PTR [rip+0x509b]        # 0x140009008
   140003f6d:	xor    rax,rsp
   140003f70:	mov    QWORD PTR [rbp+0x878],rax
   140003f77:	mov    rbx,rcx
   140003f7a:	xor    r15d,r15d
   140003f7d:	lea    rcx,[rbp+0x4]
   140003f81:	mov    DWORD PTR [rbp+0x0],r15d
   140003f85:	xor    edx,edx
   140003f87:	mov    r8d,0x83c
   140003f8d:	call   0x1400052a4
   140003f92:	xor    edx,edx
   140003f94:	mov    DWORD PTR [rbp-0x70],r15d
   140003f98:	lea    r8d,[r15+0x64]
   140003f9c:	lea    rcx,[rbp-0x6c]
   140003fa0:	call   0x1400052a4
   140003fa5:	xor    edx,edx
   140003fa7:	mov    QWORD PTR [rbp+0x840],r15
   140003fae:	lea    r8d,[r15+0x30]
   140003fb2:	lea    rcx,[rbp+0x848]
   140003fb9:	call   0x1400052a4
   140003fbe:	xor    edx,edx
   140003fc0:	mov    DWORD PTR [rsp+0x30],r15d
   140003fc5:	lea    r8d,[r15+0x5c]
   140003fc9:	lea    rcx,[rsp+0x34]
   140003fce:	call   0x1400052a4
   140003fd3:	xor    r9d,r9d
   140003fd6:	mov    BYTE PTR [rsp+0x21],r15b
   140003fdb:	xor    r8d,r8d
   140003fde:	mov    BYTE PTR [rsp+0x22],r15b
   140003fe3:	lea    edx,[r15+0x1]
   140003fe7:	mov    BYTE PTR [rsp+0x20],r15b
   140003fec:	xor    ecx,ecx
   140003fee:	mov    dil,r15b
   140003ff1:	mov    sil,r15b
   140003ff4:	call   QWORD PTR [rip+0x20b6]        # 0x1400060b0
   140003ffa:	lea    rax,[rbp+0x0]
   140003ffe:	mov    QWORD PTR [rip+0x56b3],rbx        # 0x1400096b8
   140004005:	lea    r8,[rbp-0x70]
   140004009:	mov    QWORD PTR [rbp-0x40],rax
   14000400d:	lea    rdx,[rip+0xffffffffffffdc2c]        # 0x140001c40
   140004014:	mov    QWORD PTR [rip+0x55fd],r15        # 0x140009618
   14000401b:	mov    ecx,0x134
   140004020:	mov    QWORD PTR [rip+0x5689],r15        # 0x1400096b0
   140004027:	mov    QWORD PTR [rip+0x55e2],r15        # 0x140009610
   14000402e:	mov    QWORD PTR [rip+0x55eb],r15        # 0x140009620
   140004035:	mov    QWORD PTR [rip+0x5a84],r15        # 0x140009ac0
   14000403c:	mov    BYTE PTR [rip+0x5a85],r15b        # 0x140009ac8
   140004043:	mov    DWORD PTR [rbp+0x0],0x1
   14000404a:	mov    QWORD PTR [rbp+0x4],0x1
   140004052:	mov    DWORD PTR [rbp+0x83c],r15d
   140004059:	mov    DWORD PTR [rbp-0x70],0x68
   140004060:	mov    QWORD PTR [rbp-0x68],rbx
   140004064:	mov    DWORD PTR [rbp-0x6c],0x3000
   14000406b:	call   0x140001308
   140004070:	lea    r8,[rbp-0x70]
   140004074:	mov    QWORD PTR [rbp+0x840],rax
   14000407b:	lea    rdx,[rip+0xffffffffffffdf8e]        # 0x140002010
   140004082:	mov    ecx,0x135
   140004087:	call   0x140001308
   14000408c:	lea    r8,[rbp-0x70]
   140004090:	mov    QWORD PTR [rbp+0x848],rax
   140004097:	lea    rdx,[rip+0xffffffffffffe412]        # 0x1400024b0
   14000409e:	mov    ecx,0x136
   1400040a3:	call   0x140001308
   1400040a8:	lea    r8,[rbp-0x70]
   1400040ac:	mov    QWORD PTR [rbp+0x850],rax
   1400040b3:	lea    rdx,[rip+0xffffffffffffeee6]        # 0x140002fa0
   1400040ba:	mov    ecx,0x137
   1400040bf:	call   0x140001308
   1400040c4:	lea    r8,[rbp-0x70]
   1400040c8:	mov    QWORD PTR [rbp+0x858],rax
   1400040cf:	lea    rdx,[rip+0xfffffffffffff35a]        # 0x140003430
   1400040d6:	mov    ecx,0x138
   1400040db:	call   0x140001308
   1400040e0:	lea    r8,[rbp-0x70]
   1400040e4:	mov    QWORD PTR [rbp+0x860],rax
   1400040eb:	lea    rdx,[rip+0xfffffffffffff70e]        # 0x140003800
   1400040f2:	mov    ecx,0x13a
   1400040f7:	call   0x140001308
   1400040fc:	lea    r8,[rbp-0x70]
   140004100:	mov    QWORD PTR [rbp+0x868],rax
   140004107:	lea    rdx,[rip+0xfffffffffffffa12]        # 0x140003b20
   14000410e:	mov    ecx,0x139
   140004113:	call   0x140001308
   140004118:	mov    QWORD PTR [rbp+0x870],rax
   14000411f:	lea    r8,[rsp+0x21]
   140004124:	lea    rax,[rbp+0x840]
   14000412b:	mov    DWORD PTR [rsp+0x60],r15d
   140004130:	mov    QWORD PTR [rsp+0x68],rax
   140004135:	lea    rdx,[rbp+0x0]
   140004139:	mov    rax,QWORD PTR [rip+0x5578]        # 0x1400096b8
   140004140:	lea    rcx,[rsp+0x30]
   140004145:	mov    QWORD PTR [rsp+0x40],rax
   14000414a:	mov    QWORD PTR [rsp+0x38],r15
   14000414f:	mov    DWORD PTR [rsp+0x30],0x60
   140004157:	mov    DWORD PTR [rsp+0x34],0x4004
   14000415f:	mov    QWORD PTR [rsp+0x50],0xd1
   140004168:	mov    QWORD PTR [rsp+0x48],0x68
   140004171:	mov    DWORD PTR [rsp+0x58],0x7
   140004179:	call   0x140003cb0
   14000417e:	mov    DWORD PTR [rbp+0x83c],eax
   140004184:	cmp    BYTE PTR [rsp+0x21],r15b
   140004189:	je     0x1400041a4
   14000418b:	lea    rdx,[rsp+0x22]
   140004190:	lea    rcx,[rsp+0x20]
   140004195:	call   0x1400042b4
   14000419a:	mov    dil,BYTE PTR [rsp+0x22]
   14000419f:	mov    sil,BYTE PTR [rsp+0x20]
   1400041a4:	cmp    DWORD PTR [rbp+0x83c],r15d
   1400041ab:	jne    0x1400041b8
   1400041ad:	lea    rcx,[rsp+0x30]
   1400041b2:	call   QWORD PTR [rip+0x1e90]        # 0x140006048
   1400041b8:	mov    rcx,QWORD PTR [rip+0x5459]        # 0x140009618
   1400041bf:	test   rcx,rcx
   1400041c2:	je     0x1400041ca
   1400041c4:	call   QWORD PTR [rip+0x1ede]        # 0x1400060a8
   1400041ca:	mov    rcx,QWORD PTR [rip+0x54df]        # 0x1400096b0
   1400041d1:	test   rcx,rcx
   1400041d4:	je     0x1400041dc
   1400041d6:	call   QWORD PTR [rip+0x1ecc]        # 0x1400060a8
   1400041dc:	mov    rcx,QWORD PTR [rip+0x543d]        # 0x140009620
   1400041e3:	test   rcx,rcx
   1400041e6:	je     0x140004219
   1400041e8:	xor    r8d,r8d
   1400041eb:	xor    edx,edx
   1400041ed:	call   QWORD PTR [rip+0x21fd]        # 0x1400063f0
   1400041f3:	mov    rcx,QWORD PTR [rip+0x5426]        # 0x140009620
   1400041fa:	mov    edx,0x1
   1400041ff:	call   QWORD PTR [rip+0x220b]        # 0x140006410
   140004205:	mov    rcx,QWORD PTR [rip+0x5414]        # 0x140009620
   14000420c:	call   QWORD PTR [rip+0x21ee]        # 0x140006400
   140004212:	mov    QWORD PTR [rip+0x5407],r15        # 0x140009620
   140004219:	mov    rcx,QWORD PTR [rip+0x53f0]        # 0x140009610
   140004220:	test   rcx,rcx
   140004223:	je     0x14000422b
   140004225:	call   QWORD PTR [rip+0x1e7d]        # 0x1400060a8
   14000422b:	test   dil,dil
   14000422e:	je     0x14000426e
   140004230:	mov    rcx,QWORD PTR [rip+0x5399]        # 0x1400095d0
   140004237:	test   rcx,rcx
   14000423a:	je     0x140004249
   14000423c:	call   QWORD PTR [rip+0x1e66]        # 0x1400060a8
   140004242:	mov    QWORD PTR [rip+0x5387],r15        # 0x1400095d0
   140004249:	mov    rcx,QWORD PTR [rip+0x5388]        # 0x1400095d8
   140004250:	test   rcx,rcx
   140004253:	je     0x140004262
   140004255:	call   QWORD PTR [rip+0x1e4d]        # 0x1400060a8
   14000425b:	mov    QWORD PTR [rip+0x5376],r15        # 0x1400095d8
   140004262:	lea    rcx,[rip+0x263f]        # 0x1400068a8
   140004269:	call   0x140004498
   14000426e:	test   sil,sil
   140004271:	je     0x140004279
   140004273:	call   QWORD PTR [rip+0x1f1f]        # 0x140006198
   140004279:	mov    eax,DWORD PTR [rbp+0x83c]
   14000427f:	mov    rcx,QWORD PTR [rbp+0x878]
   140004286:	xor    rcx,rsp
   140004289:	call   0x140004c70
   14000428e:	lea    r11,[rsp+0x980]
   140004296:	mov    rbx,QWORD PTR [r11+0x10]
   14000429a:	mov    rsi,QWORD PTR [r11+0x18]
   14000429e:	mov    rdi,QWORD PTR [r11+0x20]
   1400042a2:	mov    r15,QWORD PTR [r11+0x28]
   1400042a6:	mov    rsp,r11
   1400042a9:	pop    rbp
   1400042aa:	ret    
   1400042ab:	int3   
   1400042ac:	int3   
   1400042ad:	int3   
   1400042ae:	int3   
   1400042af:	int3   
   1400042b0:	int3   
   1400042b1:	int3   
   1400042b2:	int3   
   1400042b3:	int3   
   1400042b4:	mov    QWORD PTR [rsp+0x18],rbx
   1400042b9:	mov    QWORD PTR [rsp+0x20],rsi
   1400042be:	push   rdi
   1400042bf:	sub    rsp,0x20
   1400042c3:	mov    rbx,rcx
   1400042c6:	mov    rsi,rdx
   1400042c9:	xor    ecx,ecx
   1400042cb:	call   QWORD PTR [rip+0x1ebf]        # 0x140006190
   1400042d1:	mov    rcx,QWORD PTR [rip+0x52f8]        # 0x1400095d0
   1400042d8:	xor    edi,edi
   1400042da:	test   eax,eax
   1400042dc:	sete   al
   1400042df:	mov    BYTE PTR [rbx],al
   1400042e1:	lea    ebx,[rdi+0x1]
   1400042e4:	test   rcx,rcx
   1400042e7:	jne    0x140004324
   1400042e9:	mov    rcx,QWORD PTR [rip+0x25e0]        # 0x1400068d0
   1400042f0:	lea    r8,[rsp+0x30]
   1400042f5:	xor    r9d,r9d
   1400042f8:	mov    edx,ebx
   1400042fa:	call   QWORD PTR [rip+0x1d38]        # 0x140006038
   140004300:	test   eax,eax
   140004302:	je     0x14000431a
   140004304:	lea    rdx,[rsp+0x30]
   140004309:	lea    rcx,[rip+0x25b8]        # 0x1400068c8
   140004310:	call   0x1400043cc
   140004315:	mov    rcx,rax
   140004318:	jmp    0x14000431d
   14000431a:	mov    rcx,rdi
   14000431d:	mov    QWORD PTR [rip+0x52ac],rcx        # 0x1400095d0
   140004324:	mov    rax,QWORD PTR [rip+0x52ad]        # 0x1400095d8
   14000432b:	test   rax,rax
   14000432e:	jne    0x14000436f
   140004330:	mov    rcx,QWORD PTR [rip+0x2589]        # 0x1400068c0
   140004337:	lea    r8,[rsp+0x38]
   14000433c:	xor    r9d,r9d
   14000433f:	mov    edx,ebx
   140004341:	call   QWORD PTR [rip+0x1cf1]        # 0x140006038
   140004347:	test   eax,eax
   140004349:	je     0x14000435e
   14000434b:	lea    rdx,[rsp+0x38]
   140004350:	lea    rcx,[rip+0x2561]        # 0x1400068b8
   140004357:	call   0x1400043cc
   14000435c:	jmp    0x140004361
   14000435e:	mov    rax,rdi
   140004361:	mov    rcx,QWORD PTR [rip+0x5268]        # 0x1400095d0
   140004368:	mov    QWORD PTR [rip+0x5269],rax        # 0x1400095d8
   14000436f:	test   rcx,rcx
   140004372:	je     0x14000439e
   140004374:	test   rax,rax
   140004377:	je     0x14000438a
   140004379:	lea    rcx,[rip+0x2538]        # 0x1400068b8
   140004380:	call   0x140004498
   140004385:	mov    dil,al
   140004388:	jmp    0x1400043b3
   14000438a:	call   QWORD PTR [rip+0x1d18]        # 0x1400060a8
   140004390:	mov    rax,QWORD PTR [rip+0x5241]        # 0x1400095d8
   140004397:	mov    QWORD PTR [rip+0x5232],rdi        # 0x1400095d0
   14000439e:	test   rax,rax
   1400043a1:	je     0x1400043b3
   1400043a3:	mov    rcx,rax
   1400043a6:	call   QWORD PTR [rip+0x1cfc]        # 0x1400060a8
   1400043ac:	mov    QWORD PTR [rip+0x5225],rdi        # 0x1400095d8
   1400043b3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400043b8:	mov    BYTE PTR [rsi],dil
   1400043bb:	mov    rsi,QWORD PTR [rsp+0x48]
   1400043c0:	add    rsp,0x20
   1400043c4:	pop    rdi
   1400043c5:	ret    
   1400043c6:	int3   
   1400043c7:	int3   
   1400043c8:	int3   
   1400043c9:	int3   
   1400043ca:	int3   
   1400043cb:	int3   
   1400043cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400043d1:	push   rdi
   1400043d2:	sub    rsp,0x40
   1400043d6:	mov    rax,QWORD PTR [rdx]
   1400043d9:	mov    rdi,rdx
   1400043dc:	mov    r9,QWORD PTR [rcx]
   1400043df:	xor    edx,edx
   1400043e1:	and    DWORD PTR [rsp+0x30],0x0
   1400043e6:	lea    rcx,[rsp+0x20]
   1400043eb:	xor    r8d,r8d
   1400043ee:	mov    QWORD PTR [rsp+0x28],rax
   1400043f3:	mov    DWORD PTR [rsp+0x20],0x18
   1400043fb:	call   QWORD PTR [rip+0x1ce7]        # 0x1400060e8
   140004401:	mov    rcx,QWORD PTR [rdi]
   140004404:	mov    rbx,rax
   140004407:	call   QWORD PTR [rip+0x1cab]        # 0x1400060b8
   14000440d:	mov    rax,rbx
   140004410:	mov    rbx,QWORD PTR [rsp+0x50]
   140004415:	add    rsp,0x40
   140004419:	pop    rdi
   14000441a:	ret    
   14000441b:	int3   
   14000441c:	int3   
   14000441d:	int3   
   14000441e:	int3   
   14000441f:	int3   
   140004420:	int3   
   140004421:	int3   
   140004422:	int3   
   140004423:	int3   
   140004424:	mov    QWORD PTR [rsp+0x8],rbx
   140004429:	mov    QWORD PTR [rsp+0x10],rsi
   14000442e:	push   rdi
   14000442f:	sub    rsp,0x20
   140004433:	xor    dil,dil
   140004436:	mov    rbx,rdx
   140004439:	mov    rsi,rcx
   14000443c:	test   rcx,rcx
   14000443f:	je     0x140004471
   140004441:	test   rdx,rdx
   140004444:	je     0x140004468
   140004446:	mov    rcx,rdx
   140004449:	call   QWORD PTR [rip+0x1cb1]        # 0x140006100
   14000444f:	test   eax,eax
   140004451:	je     0x140004465
   140004453:	mov    rcx,rsi
   140004456:	call   QWORD PTR [rip+0x1ca4]        # 0x140006100
   14000445c:	test   eax,eax
   14000445e:	je     0x140004465
   140004460:	mov    dil,0x1
   140004463:	jmp    0x140004468
   140004465:	xor    dil,dil
   140004468:	mov    rcx,rsi
   14000446b:	call   QWORD PTR [rip+0x1c37]        # 0x1400060a8
   140004471:	test   rbx,rbx
   140004474:	je     0x14000447f
   140004476:	mov    rcx,rbx
   140004479:	call   QWORD PTR [rip+0x1c29]        # 0x1400060a8
   14000447f:	mov    rbx,QWORD PTR [rsp+0x30]
   140004484:	mov    al,dil
   140004487:	mov    rsi,QWORD PTR [rsp+0x38]
   14000448c:	add    rsp,0x20
   140004490:	pop    rdi
   140004491:	ret    
   140004492:	int3   
   140004493:	int3   
   140004494:	int3   
   140004495:	int3   
   140004496:	int3   
   140004497:	int3   
   140004498:	mov    QWORD PTR [rsp+0x18],rbx
   14000449d:	mov    QWORD PTR [rsp+0x20],rsi
   1400044a2:	push   rdi
   1400044a3:	sub    rsp,0x20
   1400044a7:	xor    r9d,r9d
   1400044aa:	lea    r8,[rsp+0x30]
   1400044af:	mov    rsi,rcx
   1400044b2:	mov    rcx,QWORD PTR [rip+0x2417]        # 0x1400068d0
   1400044b9:	lea    edx,[r9+0x1]
   1400044bd:	call   QWORD PTR [rip+0x1b75]        # 0x140006038
   1400044c3:	xor    ebx,ebx
   1400044c5:	test   eax,eax
   1400044c7:	je     0x1400044df
   1400044c9:	lea    rdx,[rsp+0x30]
   1400044ce:	lea    rcx,[rip+0x23f3]        # 0x1400068c8
   1400044d5:	call   0x1400043cc
   1400044da:	mov    rdi,rax
   1400044dd:	jmp    0x1400044e2
   1400044df:	mov    rdi,rbx
   1400044e2:	mov    rcx,QWORD PTR [rsi+0x8]
   1400044e6:	lea    r8,[rsp+0x38]
   1400044eb:	xor    r9d,r9d
   1400044ee:	lea    edx,[r9+0x1]
   1400044f2:	call   QWORD PTR [rip+0x1b40]        # 0x140006038
   1400044f8:	test   eax,eax
   1400044fa:	je     0x14000450c
   1400044fc:	lea    rdx,[rsp+0x38]
   140004501:	mov    rcx,rsi
   140004504:	call   0x1400043cc
   140004509:	mov    rbx,rax
   14000450c:	mov    rdx,rbx
   14000450f:	mov    rcx,rdi
   140004512:	call   0x140004424
   140004517:	mov    rbx,QWORD PTR [rsp+0x40]
   14000451c:	mov    rsi,QWORD PTR [rsp+0x48]
   140004521:	add    rsp,0x20
   140004525:	pop    rdi
   140004526:	ret    
   140004527:	int3   
   140004528:	int3   
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	rex push rbx
   140004532:	sub    rsp,0x20
   140004536:	mov    rbx,rcx
   140004539:	call   QWORD PTR [rip+0x1bd9]        # 0x140006118
   14000453f:	mov    r8,rbx
   140004542:	xor    edx,edx
   140004544:	mov    rcx,rax
   140004547:	add    rsp,0x20
   14000454b:	pop    rbx
   14000454c:	rex.W jmp QWORD PTR [rip+0x1bb5]        # 0x140006108
   140004553:	int3   
   140004554:	int3   
   140004555:	int3   
   140004556:	int3   
   140004557:	int3   
   140004558:	int3   
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	rex push rbx
   140004562:	sub    rsp,0x20
   140004566:	mov    rbx,rcx
   140004569:	call   QWORD PTR [rip+0x1ba9]        # 0x140006118
   14000456f:	mov    r8,rbx
   140004572:	xor    edx,edx
   140004574:	mov    rcx,rax
   140004577:	add    rsp,0x20
   14000457b:	pop    rbx
   14000457c:	rex.W jmp QWORD PTR [rip+0x1b8d]        # 0x140006110
   140004583:	int3   
   140004584:	int3   
   140004585:	int3   
   140004586:	int3   
   140004587:	int3   
   140004588:	int3   
   140004589:	int3   
   14000458a:	int3   
   14000458b:	int3   
   14000458c:	mov    r11,rsp
   14000458f:	mov    QWORD PTR [r11+0x8],rbx
   140004593:	mov    QWORD PTR [r11+0x10],rsi
   140004597:	push   rdi
   140004598:	sub    rsp,0x50
   14000459c:	mov    rdi,rdx
   14000459f:	mov    rsi,rcx
   1400045a2:	and    QWORD PTR [r11+0x20],0x0
   1400045a7:	mov    rax,QWORD PTR gs:0x60
   1400045b0:	lea    rdx,[r11+0x20]
   1400045b4:	mov    ecx,DWORD PTR [rax+0x2c0]
   1400045ba:	call   0x140004764
   1400045bf:	mov    ebx,eax
   1400045c1:	test   eax,eax
   1400045c3:	jne    0x1400045fa
   1400045c5:	mov    DWORD PTR [rsp+0x40],eax
   1400045c9:	and    DWORD PTR [rsp+0x30],eax
   1400045cd:	mov    QWORD PTR [rsp+0x28],rdi
   1400045d2:	mov    rax,QWORD PTR [rsp+0x78]
   1400045d7:	mov    QWORD PTR [rsp+0x20],rax
   1400045dc:	mov    r9,rsi
   1400045df:	xor    r8d,r8d
   1400045e2:	lea    edx,[rbx+0x2]
   1400045e5:	lea    rcx,[rip+0x2bc4]        # 0x1400071b0
   1400045ec:	call   QWORD PTR [rip+0x1bfe]        # 0x1400061f0
   1400045f2:	jmp    0x1400045fa
   1400045f4:	mov    ebx,eax
   1400045f6:	mov    DWORD PTR [rsp+0x40],eax
   1400045fa:	mov    rcx,QWORD PTR [rsp+0x78]
   1400045ff:	test   rcx,rcx
   140004602:	je     0x14000460a
   140004604:	call   QWORD PTR [rip+0x1ba6]        # 0x1400061b0
   14000460a:	test   ebx,ebx
   14000460c:	je     0x14000461a
   14000460e:	mov    ecx,ebx
   140004610:	call   QWORD PTR [rip+0x1ada]        # 0x1400060f0
   140004616:	xor    eax,eax
   140004618:	jmp    0x14000461f
   14000461a:	mov    eax,0x1
   14000461f:	mov    rbx,QWORD PTR [rsp+0x60]
   140004624:	mov    rsi,QWORD PTR [rsp+0x68]
   140004629:	add    rsp,0x50
   14000462d:	pop    rdi
   14000462e:	ret    
   14000462f:	int3   
   140004630:	int3   
   140004631:	int3   
   140004632:	int3   
   140004633:	int3   
   140004634:	int3   
   140004635:	int3   
   140004636:	int3   
   140004637:	int3   
   140004638:	mov    r11,rsp
   14000463b:	mov    QWORD PTR [r11+0x8],rbx
   14000463f:	mov    QWORD PTR [r11+0x10],rsi
   140004643:	push   rdi
   140004644:	sub    rsp,0x50
   140004648:	mov    rdi,rdx
   14000464b:	mov    rsi,rcx
   14000464e:	and    QWORD PTR [r11+0x20],0x0
   140004653:	mov    rax,QWORD PTR gs:0x60
   14000465c:	lea    rdx,[r11+0x20]
   140004660:	mov    ecx,DWORD PTR [rax+0x2c0]
   140004666:	call   0x140004764
   14000466b:	mov    ebx,eax
   14000466d:	test   eax,eax
   14000466f:	jne    0x1400046a6
   140004671:	mov    DWORD PTR [rsp+0x40],eax
   140004675:	and    DWORD PTR [rsp+0x30],eax
   140004679:	mov    QWORD PTR [rsp+0x28],rdi
   14000467e:	mov    rax,QWORD PTR [rsp+0x78]
   140004683:	mov    QWORD PTR [rsp+0x20],rax
   140004688:	mov    r9,rsi
   14000468b:	xor    r8d,r8d
   14000468e:	lea    edx,[rbx+0x3]
   140004691:	lea    rcx,[rip+0x2b18]        # 0x1400071b0
   140004698:	call   QWORD PTR [rip+0x1b52]        # 0x1400061f0
   14000469e:	jmp    0x1400046a6
   1400046a0:	mov    ebx,eax
   1400046a2:	mov    DWORD PTR [rsp+0x40],eax
   1400046a6:	mov    rcx,QWORD PTR [rsp+0x78]
   1400046ab:	test   rcx,rcx
   1400046ae:	je     0x1400046b6
   1400046b0:	call   QWORD PTR [rip+0x1afa]        # 0x1400061b0
   1400046b6:	test   ebx,ebx
   1400046b8:	je     0x1400046c6
   1400046ba:	mov    ecx,ebx
   1400046bc:	call   QWORD PTR [rip+0x1a2e]        # 0x1400060f0
   1400046c2:	xor    eax,eax
   1400046c4:	jmp    0x1400046cb
   1400046c6:	mov    eax,0x1
   1400046cb:	mov    rbx,QWORD PTR [rsp+0x60]
   1400046d0:	mov    rsi,QWORD PTR [rsp+0x68]
   1400046d5:	add    rsp,0x50
   1400046d9:	pop    rdi
   1400046da:	ret    
   1400046db:	int3   
   1400046dc:	int3   
   1400046dd:	int3   
   1400046de:	int3   
   1400046df:	int3   
   1400046e0:	int3   
   1400046e1:	int3   
   1400046e2:	int3   
   1400046e3:	int3   
   1400046e4:	mov    QWORD PTR [rsp+0x18],r8
   1400046e9:	mov    QWORD PTR [rsp+0x20],r9
   1400046ee:	push   rbx
   1400046ef:	push   rbp
   1400046f0:	push   rsi
   1400046f1:	push   rdi
   1400046f2:	sub    rsp,0x28
   1400046f6:	xor    ebp,ebp
   1400046f8:	lea    rax,[rdx-0x1]
   1400046fc:	cmp    rax,0x7ffffffe
   140004702:	mov    rsi,rcx
   140004705:	mov    edi,ebp
   140004707:	mov    ecx,0x80070057
   14000470c:	cmova  edi,ecx
   14000470f:	test   edi,edi
   140004711:	js     0x140004748
   140004713:	lea    rbx,[rdx-0x1]
   140004717:	mov    rcx,rsi
   14000471a:	mov    rdx,rbx
   14000471d:	lea    r9,[rsp+0x68]
   140004722:	mov    edi,ebp
   140004724:	call   QWORD PTR [rip+0x1c56]        # 0x140006380
   14000472a:	test   eax,eax
   14000472c:	js     0x14000473d
   14000472e:	cdqe   
   140004730:	cmp    rax,rbx
   140004733:	ja     0x14000473d
   140004735:	jne    0x140004750
   140004737:	mov    WORD PTR [rsi+rbx*2],bp
   14000473b:	jmp    0x140004750
   14000473d:	mov    WORD PTR [rsi+rbx*2],bp
   140004741:	mov    edi,0x8007007a
   140004746:	jmp    0x140004750
   140004748:	test   rdx,rdx
   14000474b:	je     0x140004750
   14000474d:	mov    WORD PTR [rsi],bp
   140004750:	mov    eax,edi
   140004752:	add    rsp,0x28
   140004756:	pop    rdi
   140004757:	pop    rsi
   140004758:	pop    rbp
   140004759:	pop    rbx
   14000475a:	ret    
   14000475b:	int3   
   14000475c:	int3   
   14000475d:	int3   
   14000475e:	int3   
   14000475f:	int3   
   140004760:	int3   
   140004761:	int3   
   140004762:	int3   
   140004763:	int3   
   140004764:	mov    QWORD PTR [rsp+0x18],rbx
   140004769:	push   rbp
   14000476a:	push   rsi
   14000476b:	push   rdi
   14000476c:	lea    rbp,[rsp-0x47]
   140004771:	sub    rsp,0xf0
   140004778:	mov    rax,QWORD PTR [rip+0x4889]        # 0x140009008
   14000477f:	xor    rax,rsp
   140004782:	mov    QWORD PTR [rbp+0x37],rax
   140004786:	xor    esi,esi
   140004788:	mov    rdi,rdx
   14000478b:	mov    ebx,ecx
   14000478d:	mov    QWORD PTR [rbp-0x61],rsi
   140004791:	xor    edx,edx
   140004793:	mov    QWORD PTR [rbp-0x69],rsi
   140004797:	lea    rcx,[rbp-0x55]
   14000479b:	mov    DWORD PTR [rbp-0x59],esi
   14000479e:	lea    r8d,[rsi+0x24]
   1400047a2:	call   0x1400052a4
   1400047a7:	mov    r9d,ebx
   1400047aa:	mov    DWORD PTR [rbp-0x31],0x101
   1400047b1:	lea    r8,[rip+0x2b38]        # 0x1400072f0
   1400047b8:	mov    DWORD PTR [rbp-0x2d],0x5000000
   1400047bf:	lea    edx,[rsi+0x25]
   1400047c2:	mov    DWORD PTR [rbp-0x29],0x12
   1400047c9:	lea    rcx,[rbp-0x19]
   1400047cd:	call   0x1400046e4
   1400047d2:	test   eax,eax
   1400047d4:	jns    0x1400047e1
   1400047d6:	movzx  ebx,ax
   1400047d9:	test   ebx,ebx
   1400047db:	jne    0x14000486e
   1400047e1:	lea    rax,[rbp-0x61]
   1400047e5:	xor    r9d,r9d
   1400047e8:	mov    QWORD PTR [rsp+0x28],rax
   1400047ed:	lea    rdx,[rip+0x2b44]        # 0x140007338
   1400047f4:	xor    r8d,r8d
   1400047f7:	mov    QWORD PTR [rsp+0x20],rsi
   1400047fc:	lea    rcx,[rbp-0x19]
   140004800:	call   QWORD PTR [rip+0x19da]        # 0x1400061e0
   140004806:	mov    ebx,eax
   140004808:	test   eax,eax
   14000480a:	jne    0x14000486e
   14000480c:	mov    rcx,QWORD PTR [rbp-0x61]
   140004810:	lea    rdx,[rbp-0x69]
   140004814:	call   QWORD PTR [rip+0x19ae]        # 0x1400061c8
   14000481a:	mov    ebx,eax
   14000481c:	test   eax,eax
   14000481e:	jne    0x14000486e
   140004820:	mov    rcx,QWORD PTR [rbp-0x69]
   140004824:	lea    eax,[rbx+0x3]
   140004827:	mov    DWORD PTR [rbp-0x59],eax
   14000482a:	lea    r9d,[rbx+0xa]
   14000482e:	mov    DWORD PTR [rbp-0x4d],eax
   140004831:	lea    r8d,[rbx+0x6]
   140004835:	lea    rax,[rbp-0x31]
   140004839:	mov    QWORD PTR [rbp-0x55],0x1
   140004841:	mov    QWORD PTR [rbp-0x39],rax
   140004845:	xor    edx,edx
   140004847:	lea    rax,[rbp-0x59]
   14000484b:	mov    QWORD PTR [rsp+0x30],rax
   140004850:	mov    DWORD PTR [rsp+0x28],esi
   140004854:	mov    QWORD PTR [rsp+0x20],rsi
   140004859:	call   QWORD PTR [rip+0x1959]        # 0x1400061b8
   14000485f:	mov    ebx,eax
   140004861:	test   eax,eax
   140004863:	jne    0x14000486e
   140004865:	mov    rax,QWORD PTR [rbp-0x69]
   140004869:	mov    ebx,esi
   14000486b:	mov    QWORD PTR [rdi],rax
   14000486e:	cmp    QWORD PTR [rbp-0x61],rsi
   140004872:	je     0x14000487e
   140004874:	lea    rcx,[rbp-0x61]
   140004878:	call   QWORD PTR [rip+0x192a]        # 0x1400061a8
   14000487e:	test   ebx,ebx
   140004880:	je     0x14000488c
   140004882:	lea    rcx,[rbp-0x69]
   140004886:	call   QWORD PTR [rip+0x1924]        # 0x1400061b0
   14000488c:	mov    eax,ebx
   14000488e:	mov    rcx,QWORD PTR [rbp+0x37]
   140004892:	xor    rcx,rsp
   140004895:	call   0x140004c70
   14000489a:	mov    rbx,QWORD PTR [rsp+0x120]
   1400048a2:	add    rsp,0xf0
   1400048a9:	pop    rdi
   1400048aa:	pop    rsi
   1400048ab:	pop    rbp
   1400048ac:	ret    
   1400048ad:	int3   
   1400048ae:	int3   
   1400048af:	int3   
   1400048b0:	int3   
   1400048b1:	int3   
   1400048b2:	int3   
   1400048b3:	int3   
   1400048b4:	int3   
   1400048b5:	int3   
   1400048b6:	int3   
   1400048b7:	int3   
   1400048b8:	int3   
   1400048b9:	int3   
   1400048ba:	int3   
   1400048bb:	int3   
   1400048bc:	int3   
   1400048bd:	int3   
   1400048be:	int3   
   1400048bf:	int3   
   1400048c0:	sub    rsp,0x28
   1400048c4:	mov    eax,0x5a4d
   1400048c9:	cmp    WORD PTR [rip+0xffffffffffffb730],ax        # 0x140000000
   1400048d0:	je     0x1400048d6
   1400048d2:	xor    eax,eax
   1400048d4:	jmp    0x140004925
   1400048d6:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb75f]        # 0x14000003c
   1400048dd:	lea    rax,[rip+0xffffffffffffb71c]        # 0x140000000
   1400048e4:	add    rcx,rax
   1400048e7:	cmp    DWORD PTR [rcx],0x4550
   1400048ed:	jne    0x1400048d2
   1400048ef:	movzx  eax,WORD PTR [rcx+0x18]
   1400048f3:	cmp    eax,0x10b
   1400048f8:	je     0x140004914
   1400048fa:	cmp    eax,0x20b
   1400048ff:	jne    0x1400048d2
   140004901:	xor    eax,eax
   140004903:	cmp    DWORD PTR [rcx+0x84],0xe
   14000490a:	jbe    0x140004925
   14000490c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004912:	jmp    0x140004922
   140004914:	xor    eax,eax
   140004916:	cmp    DWORD PTR [rcx+0x74],0xe
   14000491a:	jbe    0x140004925
   14000491c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004922:	setne  al
   140004925:	mov    ecx,0x2
   14000492a:	mov    DWORD PTR [rip+0x4710],eax        # 0x140009040
   140004930:	call   0x140004f18
   140004935:	mov    ecx,eax
   140004937:	call   QWORD PTR [rip+0x1a0b]        # 0x140006348
   14000493d:	mov    rcx,QWORD PTR [rip+0x1a84]        # 0x1400063c8
   140004944:	or     rax,0xffffffffffffffff
   140004948:	mov    QWORD PTR [rip+0x4c99],rax        # 0x1400095e8
   14000494f:	mov    QWORD PTR [rip+0x4c9a],rax        # 0x1400095f0
   140004956:	mov    eax,DWORD PTR [rip+0x4c70]        # 0x1400095cc
   14000495c:	mov    DWORD PTR [rcx],eax
   14000495e:	mov    rcx,QWORD PTR [rip+0x1a5b]        # 0x1400063c0
   140004965:	mov    eax,DWORD PTR [rip+0x4c55]        # 0x1400095c0
   14000496b:	mov    DWORD PTR [rcx],eax
   14000496d:	call   0x140004f70
   140004972:	cmp    DWORD PTR [rip+0x4687],0x0        # 0x140009000
   140004979:	jne    0x140004988
   14000497b:	lea    rcx,[rip+0x5ee]        # 0x140004f70
   140004982:	call   QWORD PTR [rip+0x1a08]        # 0x140006390
   140004988:	xor    eax,eax
   14000498a:	add    rsp,0x28
   14000498e:	ret    
   14000498f:	int3   
   140004990:	int3   
   140004991:	int3   
   140004992:	int3   
   140004993:	int3   
   140004994:	int3   
   140004995:	int3   
   140004996:	int3   
   140004997:	int3   
   140004998:	int3   
   140004999:	int3   
   14000499a:	int3   
   14000499b:	int3   
   14000499c:	int3   
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	sub    rsp,0x38
   1400049a4:	mov    eax,DWORD PTR [rip+0x4c1e]        # 0x1400095c8
   1400049aa:	lea    r8,[rip+0x4687]        # 0x140009038
   1400049b1:	mov    r9d,DWORD PTR [rip+0x4c0c]        # 0x1400095c4
   1400049b8:	lea    rdx,[rip+0x4671]        # 0x140009030
   1400049bf:	mov    DWORD PTR [rip+0x467f],eax        # 0x140009044
   1400049c5:	lea    rcx,[rip+0x465c]        # 0x140009028
   1400049cc:	lea    rax,[rip+0x4671]        # 0x140009044
   1400049d3:	mov    QWORD PTR [rsp+0x20],rax
   1400049d8:	call   QWORD PTR [rip+0x1962]        # 0x140006340
   1400049de:	mov    DWORD PTR [rip+0x4648],eax        # 0x14000902c
   1400049e4:	add    rsp,0x38
   1400049e8:	ret    
   1400049e9:	int3   
   1400049ea:	int3   
   1400049eb:	int3   
   1400049ec:	int3   
   1400049ed:	int3   
   1400049ee:	int3   
   1400049ef:	int3   
   1400049f0:	sub    rsp,0x28
   1400049f4:	call   0x140005064
   1400049f9:	add    rsp,0x28
   1400049fd:	jmp    0x140004a08
   140004a02:	int3   
   140004a03:	int3   
   140004a04:	int3   
   140004a05:	int3   
   140004a06:	int3   
   140004a07:	int3   
   140004a08:	mov    rax,rsp
   140004a0b:	mov    QWORD PTR [rax+0x8],rbx
   140004a0f:	mov    QWORD PTR [rax+0x10],rsi
   140004a13:	mov    QWORD PTR [rax+0x18],rdi
   140004a17:	push   r15
   140004a19:	sub    rsp,0xb0
   140004a20:	and    DWORD PTR [rsp+0x20],0x0
   140004a25:	lea    rcx,[rax-0x78]
   140004a29:	call   QWORD PTR [rip+0x1881]        # 0x1400062b0
   140004a2f:	nop
   140004a30:	mov    rax,QWORD PTR gs:0x30
   140004a39:	mov    rbx,QWORD PTR [rax+0x8]
   140004a3d:	xor    esi,esi
   140004a3f:	xor    eax,eax
   140004a41:	lock cmpxchg QWORD PTR [rip+0x4bae],rbx        # 0x1400095f8
   140004a4a:	je     0x140004a65
   140004a4c:	cmp    rax,rbx
   140004a4f:	jne    0x140004a58
   140004a51:	mov    esi,0x1
   140004a56:	jmp    0x140004a65
   140004a58:	mov    ecx,0x3e8
   140004a5d:	call   QWORD PTR [rip+0x18ad]        # 0x140006310
   140004a63:	jmp    0x140004a3f
   140004a65:	mov    eax,DWORD PTR [rip+0x4b95]        # 0x140009600
   140004a6b:	cmp    eax,0x1
   140004a6e:	jne    0x140004a7a
   140004a70:	lea    ecx,[rax+0x1e]
   140004a73:	call   0x140004f64
   140004a78:	jmp    0x140004aeb
   140004a7a:	mov    eax,DWORD PTR [rip+0x4b80]        # 0x140009600
   140004a80:	test   eax,eax
   140004a82:	jne    0x140004ae1
   140004a84:	mov    DWORD PTR [rip+0x4b72],0x1        # 0x140009600
   140004a8e:	lea    r15,[rip+0x19f3]        # 0x140006488
   140004a95:	lea    rbx,[rip+0x19d4]        # 0x140006470
   140004a9c:	mov    QWORD PTR [rsp+0x38],rbx
   140004aa1:	mov    DWORD PTR [rsp+0x30],eax
   140004aa5:	cmp    rbx,r15
   140004aa8:	jae    0x140004ad3
   140004aaa:	test   eax,eax
   140004aac:	jne    0x140004ad7
   140004aae:	mov    rdi,QWORD PTR [rbx]
   140004ab1:	test   rdi,rdi
   140004ab4:	je     0x140004ac8
   140004ab6:	mov    rcx,rdi
   140004ab9:	mov    rax,QWORD PTR [rip+0x1988]        # 0x140006448
   140004ac0:	call   rax
   140004ac2:	call   rdi
   140004ac4:	mov    DWORD PTR [rsp+0x30],eax
   140004ac8:	add    rbx,0x8
   140004acc:	mov    QWORD PTR [rsp+0x38],rbx
   140004ad1:	jmp    0x140004aa5
   140004ad3:	test   eax,eax
   140004ad5:	je     0x140004aeb
   140004ad7:	mov    eax,0xff
   140004adc:	jmp    0x140004c44
   140004ae1:	mov    DWORD PTR [rip+0x4539],0x1        # 0x140009024
   140004aeb:	mov    eax,DWORD PTR [rip+0x4b0f]        # 0x140009600
   140004af1:	cmp    eax,0x1
   140004af4:	jne    0x140004b13
   140004af6:	lea    rdx,[rip+0x196b]        # 0x140006468
   140004afd:	lea    rcx,[rip+0x1954]        # 0x140006458
   140004b04:	call   0x14000513a
   140004b09:	mov    DWORD PTR [rip+0x4aed],0x2        # 0x140009600
   140004b13:	test   esi,esi
   140004b15:	jne    0x140004b20
   140004b17:	xor    eax,eax
   140004b19:	xchg   QWORD PTR [rip+0x4ad8],rax        # 0x1400095f8
   140004b20:	cmp    QWORD PTR [rip+0x4ae0],0x0        # 0x140009608
   140004b28:	je     0x140004b58
   140004b2a:	lea    rcx,[rip+0x4ad7]        # 0x140009608
   140004b31:	call   0x140004fd0
   140004b36:	test   eax,eax
   140004b38:	je     0x140004b58
   140004b3a:	mov    rbx,QWORD PTR [rip+0x4ac7]        # 0x140009608
   140004b41:	mov    rcx,rbx
   140004b44:	mov    rax,QWORD PTR [rip+0x18fd]        # 0x140006448
   140004b4b:	call   rax
   140004b4d:	xor    r8d,r8d
   140004b50:	lea    edx,[r8+0x2]
   140004b54:	xor    ecx,ecx
   140004b56:	call   rbx
   140004b58:	mov    rax,QWORD PTR [rip+0x1859]        # 0x1400063b8
   140004b5f:	mov    rbx,QWORD PTR [rax]
   140004b62:	mov    QWORD PTR [rsp+0x28],rbx
   140004b67:	mov    edi,DWORD PTR [rsp+0x20]
   140004b6b:	cmp    BYTE PTR [rbx],0x20
   140004b6e:	ja     0x140004be3
   140004b70:	cmp    BYTE PTR [rbx],0x0
   140004b73:	je     0x140004b79
   140004b75:	test   edi,edi
   140004b77:	jne    0x140004be3
   140004b79:	mov    al,BYTE PTR [rbx]
   140004b7b:	dec    al
   140004b7d:	cmp    al,0x1f
   140004b7f:	ja     0x140004b8b
   140004b81:	inc    rbx
   140004b84:	mov    QWORD PTR [rsp+0x28],rbx
   140004b89:	jmp    0x140004b79
   140004b8b:	mov    ecx,DWORD PTR [rsp+0x7c]
   140004b8f:	movzx  eax,WORD PTR [rsp+0x80]
   140004b97:	mov    r9d,0xa
   140004b9d:	and    cl,0x1
   140004ba0:	cmovne r9d,eax
   140004ba4:	mov    r8,rbx
   140004ba7:	xor    edx,edx
   140004ba9:	lea    rcx,[rip+0xffffffffffffb450]        # 0x140000000
   140004bb0:	call   0x140003f44
   140004bb5:	mov    DWORD PTR [rip+0x4465],eax        # 0x140009020
   140004bbb:	cmp    DWORD PTR [rip+0x447e],0x0        # 0x140009040
   140004bc2:	jne    0x140004bcc
   140004bc4:	mov    ecx,eax
   140004bc6:	call   QWORD PTR [rip+0x17bc]        # 0x140006388
   140004bcc:	cmp    DWORD PTR [rip+0x4451],0x0        # 0x140009024
   140004bd3:	jne    0x140004be1
   140004bd5:	call   QWORD PTR [rip+0x1795]        # 0x140006370
   140004bdb:	mov    eax,DWORD PTR [rip+0x443f]        # 0x140009020
   140004be1:	jmp    0x140004c44
   140004be3:	cmp    BYTE PTR [rbx],0x22
   140004be6:	jne    0x140004bf5
   140004be8:	xor    eax,eax
   140004bea:	test   edi,edi
   140004bec:	sete   al
   140004bef:	mov    edi,eax
   140004bf1:	mov    DWORD PTR [rsp+0x20],eax
   140004bf5:	movzx  ecx,BYTE PTR [rbx]
   140004bf8:	call   QWORD PTR [rip+0x177a]        # 0x140006378
   140004bfe:	test   eax,eax
   140004c00:	je     0x140004c0a
   140004c02:	inc    rbx
   140004c05:	mov    QWORD PTR [rsp+0x28],rbx
   140004c0a:	inc    rbx
   140004c0d:	mov    QWORD PTR [rsp+0x28],rbx
   140004c12:	jmp    0x140004b6b
   140004c17:	mov    DWORD PTR [rip+0x4403],eax        # 0x140009020
   140004c1d:	cmp    DWORD PTR [rip+0x441c],0x0        # 0x140009040
   140004c24:	jne    0x140004c2f
   140004c26:	mov    ecx,eax
   140004c28:	call   QWORD PTR [rip+0x172a]        # 0x140006358
   140004c2e:	int3   
   140004c2f:	cmp    DWORD PTR [rip+0x43ee],0x0        # 0x140009024
   140004c36:	jne    0x140004c44
   140004c38:	call   QWORD PTR [rip+0x1732]        # 0x140006370
   140004c3e:	mov    eax,DWORD PTR [rip+0x43dc]        # 0x140009020
   140004c44:	lea    r11,[rsp+0xb0]
   140004c4c:	mov    rbx,QWORD PTR [r11+0x10]
   140004c50:	mov    rsi,QWORD PTR [r11+0x18]
   140004c54:	mov    rdi,QWORD PTR [r11+0x20]
   140004c58:	mov    rsp,r11
   140004c5b:	pop    r15
   140004c5d:	ret    
   140004c5e:	int3   
   140004c5f:	int3   
   140004c60:	int3   
   140004c61:	int3   
   140004c62:	int3   
   140004c63:	int3   
   140004c64:	int3   
   140004c65:	int3   
   140004c66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004c70:	cmp    rcx,QWORD PTR [rip+0x4391]        # 0x140009008
   140004c77:	jne    0x140004c89
   140004c79:	rol    rcx,0x10
   140004c7d:	test   cx,0xffff
   140004c82:	jne    0x140004c85
   140004c84:	ret    
   140004c85:	ror    rcx,0x10
   140004c89:	jmp    0x140004cd0
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	int3   
   140004c91:	int3   
   140004c92:	int3   
   140004c93:	int3   
   140004c94:	rex push rbx
   140004c96:	sub    rsp,0x20
   140004c9a:	mov    rbx,rcx
   140004c9d:	xor    ecx,ecx
   140004c9f:	call   QWORD PTR [rip+0x15e3]        # 0x140006288
   140004ca5:	mov    rcx,rbx
   140004ca8:	call   QWORD PTR [rip+0x15e2]        # 0x140006290
   140004cae:	call   QWORD PTR [rip+0x161c]        # 0x1400062d0
   140004cb4:	mov    rcx,rax
   140004cb7:	mov    edx,0xc0000409
   140004cbc:	add    rsp,0x20
   140004cc0:	pop    rbx
   140004cc1:	rex.W jmp QWORD PTR [rip+0x1600]        # 0x1400062c8
   140004cc8:	int3   
   140004cc9:	int3   
   140004cca:	int3   
   140004ccb:	int3   
   140004ccc:	int3   
   140004ccd:	int3   
   140004cce:	int3   
   140004ccf:	int3   
   140004cd0:	mov    QWORD PTR [rsp+0x8],rcx
   140004cd5:	sub    rsp,0x88
   140004cdc:	lea    rcx,[rip+0x440d]        # 0x1400090f0
   140004ce3:	call   QWORD PTR [rip+0x1607]        # 0x1400062f0
   140004ce9:	mov    rax,QWORD PTR [rip+0x44f8]        # 0x1400091e8
   140004cf0:	mov    QWORD PTR [rsp+0x48],rax
   140004cf5:	xor    r8d,r8d
   140004cf8:	lea    rdx,[rsp+0x50]
   140004cfd:	mov    rcx,QWORD PTR [rsp+0x48]
   140004d02:	call   QWORD PTR [rip+0x15f0]        # 0x1400062f8
   140004d08:	mov    QWORD PTR [rsp+0x40],rax
   140004d0d:	cmp    QWORD PTR [rsp+0x40],0x0
   140004d13:	je     0x140004d57
   140004d15:	mov    QWORD PTR [rsp+0x38],0x0
   140004d1e:	lea    rax,[rsp+0x58]
   140004d23:	mov    QWORD PTR [rsp+0x30],rax
   140004d28:	lea    rax,[rsp+0x60]
   140004d2d:	mov    QWORD PTR [rsp+0x28],rax
   140004d32:	lea    rax,[rip+0x43b7]        # 0x1400090f0
   140004d39:	mov    QWORD PTR [rsp+0x20],rax
   140004d3e:	mov    r9,QWORD PTR [rsp+0x40]
   140004d43:	mov    r8,QWORD PTR [rsp+0x48]
   140004d48:	mov    rdx,QWORD PTR [rsp+0x50]
   140004d4d:	xor    ecx,ecx
   140004d4f:	call   QWORD PTR [rip+0x15ab]        # 0x140006300
   140004d55:	jmp    0x140004d7a
   140004d57:	mov    rax,QWORD PTR [rip+0x442a]        # 0x140009188
   140004d5e:	mov    rax,QWORD PTR [rax]
   140004d61:	mov    QWORD PTR [rip+0x4480],rax        # 0x1400091e8
   140004d68:	mov    rax,QWORD PTR [rip+0x4419]        # 0x140009188
   140004d6f:	add    rax,0x8
   140004d73:	mov    QWORD PTR [rip+0x440e],rax        # 0x140009188
   140004d7a:	mov    rax,QWORD PTR [rip+0x4467]        # 0x1400091e8
   140004d81:	mov    QWORD PTR [rip+0x42d8],rax        # 0x140009060
   140004d88:	mov    rax,QWORD PTR [rsp+0x90]
   140004d90:	mov    QWORD PTR [rip+0x43d9],rax        # 0x140009170
   140004d97:	mov    DWORD PTR [rip+0x42af],0xc0000409        # 0x140009050
   140004da1:	mov    DWORD PTR [rip+0x42a9],0x1        # 0x140009054
   140004dab:	mov    DWORD PTR [rip+0x42b3],0x3        # 0x140009068
   140004db5:	mov    eax,0x8
   140004dba:	imul   rax,rax,0x0
   140004dbe:	lea    rcx,[rip+0x42ab]        # 0x140009070
   140004dc5:	mov    QWORD PTR [rcx+rax*1],0x2
   140004dcd:	mov    eax,0x8
   140004dd2:	imul   rax,rax,0x1
   140004dd6:	lea    rcx,[rip+0x4293]        # 0x140009070
   140004ddd:	mov    rdx,QWORD PTR [rip+0x4224]        # 0x140009008
   140004de4:	mov    QWORD PTR [rcx+rax*1],rdx
   140004de8:	mov    eax,0x8
   140004ded:	imul   rax,rax,0x2
   140004df1:	lea    rcx,[rip+0x4278]        # 0x140009070
   140004df8:	mov    rdx,QWORD PTR [rip+0x4211]        # 0x140009010
   140004dff:	mov    QWORD PTR [rcx+rax*1],rdx
   140004e03:	mov    eax,0x8
   140004e08:	imul   rax,rax,0x0
   140004e0c:	mov    rcx,QWORD PTR [rip+0x41f5]        # 0x140009008
   140004e13:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140004e18:	mov    eax,0x8
   140004e1d:	imul   rax,rax,0x1
   140004e21:	mov    rcx,QWORD PTR [rip+0x41e8]        # 0x140009010
   140004e28:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140004e2d:	lea    rcx,[rip+0x16bc]        # 0x1400064f0
   140004e34:	call   0x140004c94
   140004e39:	add    rsp,0x88
   140004e40:	ret    
   140004e41:	int3   
   140004e42:	int3   
   140004e43:	int3   
   140004e44:	int3   
   140004e45:	int3   
   140004e46:	int3   
   140004e47:	int3   
   140004e48:	int3   
   140004e49:	int3   
   140004e4a:	int3   
   140004e4b:	int3   
   140004e4c:	int3   
   140004e4d:	int3   
   140004e4e:	int3   
   140004e4f:	int3   
   140004e50:	sub    rsp,0x28
   140004e54:	mov    rax,QWORD PTR [rcx]
   140004e57:	cmp    DWORD PTR [rax],0xe06d7363
   140004e5d:	jne    0x140004e82
   140004e5f:	cmp    DWORD PTR [rax+0x18],0x4
   140004e63:	jne    0x140004e82
   140004e65:	mov    ecx,DWORD PTR [rax+0x20]
   140004e68:	lea    eax,[rcx-0x19930520]
   140004e6e:	cmp    eax,0x2
   140004e71:	jbe    0x140004e7b
   140004e73:	cmp    ecx,0x1994000
   140004e79:	jne    0x140004e82
   140004e7b:	call   QWORD PTR [rip+0x1527]        # 0x1400063a8
   140004e81:	int3   
   140004e82:	xor    eax,eax
   140004e84:	add    rsp,0x28
   140004e88:	ret    
   140004e89:	int3   
   140004e8a:	int3   
   140004e8b:	int3   
   140004e8c:	int3   
   140004e8d:	int3   
   140004e8e:	int3   
   140004e8f:	int3   
   140004e90:	sub    rsp,0x28
   140004e94:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140004e50
   140004e9b:	call   QWORD PTR [rip+0x13e7]        # 0x140006288
   140004ea1:	xor    eax,eax
   140004ea3:	add    rsp,0x28
   140004ea7:	ret    
   140004ea8:	int3   
   140004ea9:	int3   
   140004eaa:	int3   
   140004eab:	int3   
   140004eac:	int3   
   140004ead:	int3   
   140004eae:	jmp    QWORD PTR [rip+0x149c]        # 0x140006350
   140004eb4:	int3   
   140004eb5:	int3   
   140004eb6:	int3   
   140004eb7:	int3   
   140004eb8:	int3   
   140004eb9:	int3   
   140004eba:	int3   
   140004ebb:	int3   
   140004ebc:	sub    rsp,0x18
   140004ec0:	xor    edx,edx
   140004ec2:	lea    rax,[rcx-0x1]
   140004ec6:	cmp    rax,0xfffffffffffffffd
   140004eca:	ja     0x140004f08
   140004ecc:	mov    eax,0x5a4d
   140004ed1:	cmp    WORD PTR [rcx],ax
   140004ed4:	jne    0x140004f00
   140004ed6:	cmp    DWORD PTR [rcx+0x3c],edx
   140004ed9:	jl     0x140004f00
   140004edb:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140004ee2:	jae    0x140004f00
   140004ee4:	movsxd rax,DWORD PTR [rcx+0x3c]
   140004ee8:	add    rax,rcx
   140004eeb:	mov    QWORD PTR [rsp],rax
   140004eef:	cmp    DWORD PTR [rax],0x4550
   140004ef5:	cmovne rax,rdx
   140004ef9:	mov    rdx,rax
   140004efc:	mov    QWORD PTR [rsp],rax
   140004f00:	jmp    0x140004f08
   140004f02:	xor    edx,edx
   140004f04:	mov    QWORD PTR [rsp],rdx
   140004f08:	mov    rax,rdx
   140004f0b:	add    rsp,0x18
   140004f0f:	ret    
   140004f10:	int3   
   140004f11:	int3   
   140004f12:	int3   
   140004f13:	int3   
   140004f14:	int3   
   140004f15:	int3   
   140004f16:	int3   
   140004f17:	int3   
   140004f18:	rex push rbx
   140004f1a:	sub    rsp,0x20
   140004f1e:	mov    ebx,ecx
   140004f20:	xor    ecx,ecx
   140004f22:	call   QWORD PTR [rip+0x1378]        # 0x1400062a0
   140004f28:	test   rax,rax
   140004f2b:	je     0x140004f55
   140004f2d:	mov    rcx,rax
   140004f30:	call   0x140004ebc
   140004f35:	test   rax,rax
   140004f38:	je     0x140004f55
   140004f3a:	mov    ecx,0x2
   140004f3f:	cmp    WORD PTR [rax+0x5c],cx
   140004f43:	jne    0x140004f49
   140004f45:	mov    eax,ecx
   140004f47:	jmp    0x140004f57
   140004f49:	cmp    WORD PTR [rax+0x5c],0x3
   140004f4e:	mov    eax,0x1
   140004f53:	je     0x140004f57
   140004f55:	mov    eax,ebx
   140004f57:	add    rsp,0x20
   140004f5b:	pop    rbx
   140004f5c:	ret    
   140004f5d:	int3   
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	int3   
   140004f61:	int3   
   140004f62:	int3   
   140004f63:	int3   
   140004f64:	jmp    QWORD PTR [rip+0x13ce]        # 0x140006338
   140004f6a:	int3   
   140004f6b:	int3   
   140004f6c:	int3   
   140004f6d:	int3   
   140004f6e:	int3   
   140004f6f:	int3   
   140004f70:	xor    eax,eax
   140004f72:	ret    
   140004f73:	int3   
   140004f74:	int3   
   140004f75:	int3   
   140004f76:	int3   
   140004f77:	int3   
   140004f78:	int3   
   140004f79:	int3   
   140004f7a:	int3   
   140004f7b:	int3   
   140004f7c:	int3   
   140004f7d:	int3   
   140004f7e:	int3   
   140004f7f:	int3   
   140004f80:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004f84:	xor    r9d,r9d
   140004f87:	add    r8,rcx
   140004f8a:	mov    r10,rdx
   140004f8d:	movzx  eax,WORD PTR [r8+0x14]
   140004f92:	movzx  r11d,WORD PTR [r8+0x6]
   140004f97:	add    rax,0x18
   140004f9b:	add    rax,r8
   140004f9e:	test   r11d,r11d
   140004fa1:	je     0x140004fc1
   140004fa3:	mov    edx,DWORD PTR [rax+0xc]
   140004fa6:	cmp    r10,rdx
   140004fa9:	jb     0x140004fb5
   140004fab:	mov    ecx,DWORD PTR [rax+0x8]
   140004fae:	add    ecx,edx
   140004fb0:	cmp    r10,rcx
   140004fb3:	jb     0x140004fc3
   140004fb5:	inc    r9d
   140004fb8:	add    rax,0x28
   140004fbc:	cmp    r9d,r11d
   140004fbf:	jb     0x140004fa3
   140004fc1:	xor    eax,eax
   140004fc3:	ret    
   140004fc4:	int3   
   140004fc5:	int3   
   140004fc6:	int3   
   140004fc7:	int3   
   140004fc8:	int3   
   140004fc9:	int3   
   140004fca:	int3   
   140004fcb:	int3   
   140004fcc:	int3   
   140004fcd:	int3   
   140004fce:	int3   
   140004fcf:	int3   
   140004fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140004fd5:	push   rdi
   140004fd6:	sub    rsp,0x20
   140004fda:	mov    rbx,rcx
   140004fdd:	lea    rdi,[rip+0xffffffffffffb01c]        # 0x140000000
   140004fe4:	mov    rcx,rdi
   140004fe7:	call   0x140005030
   140004fec:	test   eax,eax
   140004fee:	je     0x140005012
   140004ff0:	sub    rbx,rdi
   140004ff3:	mov    rdx,rbx
   140004ff6:	mov    rcx,rdi
   140004ff9:	call   0x140004f80
   140004ffe:	test   rax,rax
   140005001:	je     0x140005012
   140005003:	mov    eax,DWORD PTR [rax+0x24]
   140005006:	shr    eax,0x1f
   140005009:	not    eax
   14000500b:	and    eax,0x1
   14000500e:	jmp    0x140005012
   140005010:	xor    eax,eax
   140005012:	mov    rbx,QWORD PTR [rsp+0x30]
   140005017:	add    rsp,0x20
   14000501b:	pop    rdi
   14000501c:	ret    
   14000501d:	int3   
   14000501e:	int3   
   14000501f:	int3   
   140005020:	int3   
   140005021:	int3   
   140005022:	int3   
   140005023:	int3   
   140005024:	int3   
   140005025:	int3   
   140005026:	int3   
   140005027:	int3   
   140005028:	int3   
   140005029:	int3   
   14000502a:	int3   
   14000502b:	int3   
   14000502c:	int3   
   14000502d:	int3   
   14000502e:	int3   
   14000502f:	int3   
   140005030:	mov    rax,rcx
   140005033:	mov    ecx,0x5a4d
   140005038:	cmp    WORD PTR [rax],cx
   14000503b:	je     0x140005040
   14000503d:	xor    eax,eax
   14000503f:	ret    
   140005040:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005044:	add    rcx,rax
   140005047:	xor    eax,eax
   140005049:	cmp    DWORD PTR [rcx],0x4550
   14000504f:	jne    0x14000505d
   140005051:	mov    edx,0x20b
   140005056:	cmp    WORD PTR [rcx+0x18],dx
   14000505a:	sete   al
   14000505d:	ret    
   14000505e:	int3   
   14000505f:	int3   
   140005060:	int3   
   140005061:	int3   
   140005062:	int3   
   140005063:	int3   
   140005064:	mov    QWORD PTR [rsp+0x20],rbx
   140005069:	push   rbp
   14000506a:	mov    rbp,rsp
   14000506d:	sub    rsp,0x20
   140005071:	and    QWORD PTR [rbp+0x18],0x0
   140005076:	movabs rbx,0x2b992ddfa232
   140005080:	mov    rax,QWORD PTR [rip+0x3f81]        # 0x140009008
   140005087:	cmp    rax,rbx
   14000508a:	jne    0x14000511f
   140005090:	lea    rcx,[rbp+0x18]
   140005094:	call   QWORD PTR [rip+0x128e]        # 0x140006328
   14000509a:	mov    rax,QWORD PTR [rbp+0x18]
   14000509e:	mov    QWORD PTR [rbp+0x10],rax
   1400050a2:	call   QWORD PTR [rip+0x1210]        # 0x1400062b8
   1400050a8:	mov    eax,eax
   1400050aa:	xor    QWORD PTR [rbp+0x10],rax
   1400050ae:	call   QWORD PTR [rip+0x120c]        # 0x1400062c0
   1400050b4:	mov    eax,eax
   1400050b6:	xor    QWORD PTR [rbp+0x10],rax
   1400050ba:	call   QWORD PTR [rip+0x1260]        # 0x140006320
   1400050c0:	mov    eax,eax
   1400050c2:	shl    rax,0x18
   1400050c6:	xor    QWORD PTR [rbp+0x10],rax
   1400050ca:	call   QWORD PTR [rip+0x1250]        # 0x140006320
   1400050d0:	mov    eax,eax
   1400050d2:	lea    rcx,[rbp+0x10]
   1400050d6:	xor    rax,QWORD PTR [rbp+0x10]
   1400050da:	xor    rax,rcx
   1400050dd:	lea    rcx,[rbp+0x20]
   1400050e1:	mov    QWORD PTR [rbp+0x10],rax
   1400050e5:	call   QWORD PTR [rip+0x11f5]        # 0x1400062e0
   1400050eb:	mov    eax,DWORD PTR [rbp+0x20]
   1400050ee:	movabs rcx,0xffffffffffff
   1400050f8:	shl    rax,0x20
   1400050fc:	xor    rax,QWORD PTR [rbp+0x20]
   140005100:	xor    rax,QWORD PTR [rbp+0x10]
   140005104:	and    rax,rcx
   140005107:	movabs rcx,0x2b992ddfa233
   140005111:	cmp    rax,rbx
   140005114:	cmove  rax,rcx
   140005118:	mov    QWORD PTR [rip+0x3ee9],rax        # 0x140009008
   14000511f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005124:	not    rax
   140005127:	mov    QWORD PTR [rip+0x3ee2],rax        # 0x140009010
   14000512e:	add    rsp,0x20
   140005132:	pop    rbp
   140005133:	ret    
   140005134:	int3   
   140005135:	int3   
   140005136:	int3   
   140005137:	int3   
   140005138:	int3   
   140005139:	int3   
   14000513a:	jmp    QWORD PTR [rip+0x1258]        # 0x140006398
   140005140:	int3   
   140005141:	int3   
   140005142:	int3   
   140005143:	int3   
   140005144:	int3   
   140005145:	int3   
   140005146:	jmp    QWORD PTR [rip+0x1264]        # 0x1400063b0
   14000514c:	int3   
   14000514d:	int3   
   14000514e:	int3   
   14000514f:	int3   
   140005150:	int3   
   140005151:	int3   
   140005152:	int3   
   140005153:	int3   
   140005154:	int3   
   140005155:	int3   
   140005156:	int3   
   140005157:	int3   
   140005158:	int3   
   140005159:	int3   
   14000515a:	int3   
   14000515b:	int3   
   14000515c:	int3   
   14000515d:	int3   
   14000515e:	int3   
   14000515f:	int3   
   140005160:	ret    0x0
   140005163:	int3   
   140005164:	int3   
   140005165:	int3   
   140005166:	int3   
   140005167:	int3   
   140005168:	int3   
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	int3   
   140005171:	int3   
   140005172:	int3   
   140005173:	int3   
   140005174:	int3   
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	sub    rsp,0x28
   14000517c:	mov    r8,QWORD PTR [r9+0x38]
   140005180:	mov    rcx,rdx
   140005183:	mov    rdx,r9
   140005186:	call   0x14000519c
   14000518b:	mov    eax,0x1
   140005190:	add    rsp,0x28
   140005194:	ret    
   140005195:	int3   
   140005196:	int3   
   140005197:	int3   
   140005198:	int3   
   140005199:	int3   
   14000519a:	int3   
   14000519b:	int3   
   14000519c:	rex push rbx
   14000519e:	sub    rsp,0x20
   1400051a2:	mov    r11d,DWORD PTR [r8]
   1400051a5:	mov    rbx,rdx
   1400051a8:	and    r11d,0xfffffff8
   1400051ac:	mov    r9,rcx
   1400051af:	test   BYTE PTR [r8],0x4
   1400051b3:	mov    r10,rcx
   1400051b6:	je     0x1400051cb
   1400051b8:	mov    eax,DWORD PTR [r8+0x8]
   1400051bc:	movsxd r10,DWORD PTR [r8+0x4]
   1400051c0:	neg    eax
   1400051c2:	add    r10,rcx
   1400051c5:	movsxd rcx,eax
   1400051c8:	and    r10,rcx
   1400051cb:	movsxd rax,r11d
   1400051ce:	mov    rdx,QWORD PTR [rax+r10*1]
   1400051d2:	mov    rax,QWORD PTR [rbx+0x10]
   1400051d6:	mov    ecx,DWORD PTR [rax+0x8]
   1400051d9:	add    rcx,QWORD PTR [rbx+0x8]
   1400051dd:	test   BYTE PTR [rcx+0x3],0xf
   1400051e1:	je     0x1400051ef
   1400051e3:	movzx  eax,BYTE PTR [rcx+0x3]
   1400051e7:	and    eax,0xfffffff0
   1400051ea:	cdqe   
   1400051ec:	add    r9,rax
   1400051ef:	xor    r9,rdx
   1400051f2:	mov    rcx,r9
   1400051f5:	add    rsp,0x20
   1400051f9:	pop    rbx
   1400051fa:	jmp    0x140004c70
   1400051ff:	int3   
   140005200:	int3   
   140005201:	int3   
   140005202:	int3   
   140005203:	int3   
   140005204:	int3   
   140005205:	int3   
   140005206:	int3   
   140005207:	int3   
   140005208:	mov    rax,rsp
   14000520b:	mov    QWORD PTR [rax+0x8],rbx
   14000520f:	mov    QWORD PTR [rax+0x10],rbp
   140005213:	mov    QWORD PTR [rax+0x18],rsi
   140005217:	mov    QWORD PTR [rax+0x20],rdi
   14000521b:	push   r14
   14000521d:	sub    rsp,0x20
   140005221:	mov    r10,QWORD PTR [r9+0x38]
   140005225:	mov    rsi,rdx
   140005228:	mov    r14,r8
   14000522b:	mov    rbp,rcx
   14000522e:	mov    rdx,r9
   140005231:	mov    rcx,rsi
   140005234:	mov    rdi,r9
   140005237:	mov    ebx,DWORD PTR [r10]
   14000523a:	shl    rbx,0x4
   14000523e:	add    rbx,r10
   140005241:	lea    r8,[rbx+0x4]
   140005245:	call   0x14000519c
   14000524a:	mov    r11d,DWORD PTR [rbx+0x4]
   14000524e:	mov    edx,0x1
   140005253:	mov    r10d,DWORD PTR [rbp+0x4]
   140005257:	mov    eax,r11d
   14000525a:	and    eax,edx
   14000525c:	and    r11d,0x2
   140005260:	and    r10b,0x66
   140005264:	cmove  r11d,eax
   140005268:	test   r11d,r11d
   14000526b:	je     0x140005281
   14000526d:	mov    r9,rdi
   140005270:	mov    r8,r14
   140005273:	mov    rdx,rsi
   140005276:	mov    rcx,rbp
   140005279:	call   QWORD PTR [rip+0x1131]        # 0x1400063b0
   14000527f:	mov    edx,eax
   140005281:	mov    rbx,QWORD PTR [rsp+0x30]
   140005286:	mov    eax,edx
   140005288:	mov    rbp,QWORD PTR [rsp+0x38]
   14000528d:	mov    rsi,QWORD PTR [rsp+0x40]
   140005292:	mov    rdi,QWORD PTR [rsp+0x48]
   140005297:	add    rsp,0x20
   14000529b:	pop    r14
   14000529d:	ret    
   14000529e:	int3   
   14000529f:	int3   
   1400052a0:	int3   
   1400052a1:	int3   
   1400052a2:	int3   
   1400052a3:	int3   
   1400052a4:	jmp    QWORD PTR [rip+0x10f6]        # 0x1400063a0
   1400052aa:	int3   
   1400052ab:	int3   
   1400052ac:	int3   
   1400052ad:	int3   
   1400052ae:	int3   
   1400052af:	int3   
   1400052b0:	int3   
   1400052b1:	int3   
   1400052b2:	int3   
   1400052b3:	int3   
   1400052b4:	int3   
   1400052b5:	int3   
   1400052b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400052c0:	jmp    rax
   1400052c2:	int3   
   1400052c3:	int3   
   1400052c4:	int3   
   1400052c5:	int3   
   1400052c6:	int3   
   1400052c7:	int3   
   1400052c8:	int3   
   1400052c9:	int3   
   1400052ca:	int3   
   1400052cb:	int3   
   1400052cc:	int3   
   1400052cd:	int3   
   1400052ce:	int3   
   1400052cf:	int3   
   1400052d0:	int3   
   1400052d1:	int3   
   1400052d2:	int3   
   1400052d3:	int3   
   1400052d4:	int3   
   1400052d5:	int3   
   1400052d6:	rex push rbp
   1400052d8:	sub    rsp,0x20
   1400052dc:	mov    rbp,rdx
   1400052df:	add    rsp,0x20
   1400052e3:	pop    rbp
   1400052e4:	ret    
   1400052e5:	int3   
   1400052e6:	int3   
   1400052e7:	int3   
   1400052e8:	int3   
   1400052e9:	int3   
   1400052ea:	int3   
   1400052eb:	int3   
   1400052ec:	rex push rbp
   1400052ee:	sub    rsp,0x40
   1400052f2:	mov    rbp,rdx
   1400052f5:	mov    rax,QWORD PTR [rcx]
   1400052f8:	mov    ecx,DWORD PTR [rax]
   1400052fa:	call   QWORD PTR [rip+0xed0]        # 0x1400061d0
   140005300:	nop
   140005301:	add    rsp,0x40
   140005305:	pop    rbp
   140005306:	ret    
   140005307:	int3   
   140005308:	int3   
   140005309:	int3   
   14000530a:	int3   
   14000530b:	int3   
   14000530c:	int3   
   14000530d:	int3   
   14000530e:	rex push rbp
   140005310:	sub    rsp,0x20
   140005314:	mov    rbp,rdx
   140005317:	mov    rax,QWORD PTR [rcx]
   14000531a:	mov    rdx,rcx
   14000531d:	mov    ecx,DWORD PTR [rax]
   14000531f:	call   0x140004eae
   140005324:	nop
   140005325:	add    rsp,0x20
   140005329:	pop    rbp
   14000532a:	ret    
   14000532b:	int3   
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	int3   
   140005331:	int3   
   140005332:	int3   
   140005333:	int3   
   140005334:	int3   
   140005335:	int3   
   140005336:	int3   
   140005337:	int3   
   140005338:	int3   
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	rex push rbp
   140005342:	sub    rsp,0x20
   140005346:	mov    rbp,rdx
   140005349:	mov    rax,QWORD PTR [rcx]
   14000534c:	xor    ecx,ecx
   14000534e:	cmp    DWORD PTR [rax],0xc0000005
   140005354:	sete   cl
   140005357:	mov    eax,ecx
   140005359:	add    rsp,0x20
   14000535d:	pop    rbp
   14000535e:	ret    
   14000535f:	int3   

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	adc    BYTE PTR [rax+0x0],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	add    BYTE PTR es:[rax],0x0
   14000600c:	add    BYTE PTR [rax],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	cmp    BYTE PTR [rax+0x0],al
   140006016:	add    BYTE PTR [rax],al
   140006018:	push   rdx
   140006019:	add    BYTE PTR [rax],0x0
   14000601c:	add    BYTE PTR [rax],al
   14000601e:	add    BYTE PTR [rax],al
   140006020:	lods   al,BYTE PTR ds:[rsi]
   140006021:	mov    BYTE PTR [rax],al
   140006023:	add    BYTE PTR [rax],al
   140006025:	add    BYTE PTR [rax],al
   140006027:	add    dh,al
   140006029:	mov    BYTE PTR [rax],al
   14000602b:	add    BYTE PTR [rax],al
   14000602d:	add    BYTE PTR [rax],al
   14000602f:	add    BYTE PTR [rax+0x88],bl
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    dh,bl
   140006039:	mov    BYTE PTR [rax],al
	...
   140006047:	add    BYTE PTR [rsi],dl
   140006049:	mov    DWORD PTR [rax],eax
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rax],ch
   140006051:	mov    DWORD PTR [rax],eax
	...
   14000605f:	add    BYTE PTR [rdx-0x77],dl
   140006062:	add    BYTE PTR [rax],al
   140006064:	add    BYTE PTR [rax],al
   140006066:	add    BYTE PTR [rax],al
   140006068:	mov    WORD PTR [rax],ax
	...
   140006077:	add    BYTE PTR [rsp+rax*4+0x0],bh
   14000607b:	add    BYTE PTR [rax],al
   14000607d:	add    BYTE PTR [rax],al
   14000607f:	add    BYTE PTR [rax-0x7c],ch
	...
   14000608e:	add    BYTE PTR [rax],al
   140006090:	or     BYTE PTR [rdx+0x0],al
   140006096:	add    BYTE PTR [rax],al
   140006098:	(bad)  
   140006099:	(bad)  
	...
   1400060a6:	add    BYTE PTR [rax],al
   1400060a8:	ret    0x81
   1400060ab:	add    BYTE PTR [rax],al
   1400060ad:	add    BYTE PTR [rax],al
   1400060af:	add    BYTE PTR [rdx+0x81],bl
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    dh,bl
   1400060b9:	add    DWORD PTR [rax],0x0
   1400060bf:	add    dl,ch
   1400060c1:	add    DWORD PTR [rax],0x0
   1400060c7:	add    BYTE PTR [rsi+0x81],cl
   1400060cd:	add    BYTE PTR [rax],al
   1400060cf:	add    al,dl
   1400060d1:	add    DWORD PTR [rax],0x0
   1400060d7:	add    BYTE PTR [rax+0x81],dh
   1400060dd:	add    BYTE PTR [rax],al
   1400060df:	add    BYTE PTR [rcx+rax*4+0x0],dh
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rcx+rax*4+0x0],ah
   1400060eb:	add    BYTE PTR [rax],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    BYTE PTR [rax],bh
   1400060f1:	add    DWORD PTR [rax],0x0
   1400060f7:	add    BYTE PTR [rdx+0x80],al
   1400060fd:	add    BYTE PTR [rax],al
   1400060ff:	add    BYTE PTR [rsi+0x80],dl
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    dh,ch
   140006109:	mov    DWORD PTR [rax],eax
   14000610b:	add    BYTE PTR [rax],al
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    dl,bh
   140006111:	mov    DWORD PTR [rax],eax
   140006113:	add    BYTE PTR [rax],al
   140006115:	add    BYTE PTR [rax],al
   140006117:	add    BYTE PTR [rsi],al
   140006119:	mov    al,BYTE PTR [rax]
   14000611b:	add    BYTE PTR [rax],al
   14000611d:	add    BYTE PTR [rax],al
   14000611f:	add    BYTE PTR [rdx+0x80],ah
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    BYTE PTR [rax],ch
   140006129:	add    DWORD PTR [rax],0x0
   14000612f:	add    BYTE PTR [rax],bl
   140006131:	add    DWORD PTR [rax],0x0
   140006137:	add    BYTE PTR [rax],cl
   140006139:	add    DWORD PTR [rax],0x0
   14000613f:	add    dl,dh
   140006141:	add    BYTE PTR [rax],0x0
   140006144:	add    BYTE PTR [rax],al
   140006146:	add    BYTE PTR [rax],al
   140006148:	push   rsi
   140006149:	add    DWORD PTR [rax],0x0
   14000614f:	add    BYTE PTR [rax-0x80],dh
   140006152:	add    BYTE PTR [rax],al
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax],al
   140006158:	in     al,0x80
   14000615a:	add    BYTE PTR [rax],al
   14000615c:	add    BYTE PTR [rax],al
   14000615e:	add    BYTE PTR [rax],al
   140006160:	fadd   DWORD PTR [rax+0x0]
   140006166:	add    BYTE PTR [rax],al
   140006168:	mov    BYTE PTR [rax+0x0],0x0
   14000616f:	add    BYTE PTR [rax+0x80],bh
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    BYTE PTR [rax+rax*4+0x0],ch
   14000617e:	add    BYTE PTR [rax],al
   140006180:	add    QWORD PTR [rax],0x0
	...
   14000618f:	add    BYTE PTR [rax+0x89],cl
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    BYTE PTR [rax+0x89],ah
	...
   1400061a5:	add    BYTE PTR [rax],al
   1400061a7:	add    BYTE PTR [rsi+0x88],al
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    BYTE PTR [rax+rcx*4+0x0],dh
   1400061b3:	add    BYTE PTR [rax],al
   1400061b5:	add    BYTE PTR [rax],al
   1400061b7:	add    BYTE PTR [rax-0x78],bl
   1400061ba:	add    BYTE PTR [rax],al
   1400061bc:	add    BYTE PTR [rax],al
   1400061be:	add    BYTE PTR [rax],al
   1400061c0:	(bad)  
   1400061c1:	xchg   DWORD PTR [rax],eax
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    BYTE PTR [rax+rcx*4],bl
   1400061ca:	add    BYTE PTR [rax],al
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	add    al,0x88
   1400061d2:	add    BYTE PTR [rax],al
   1400061d4:	add    BYTE PTR [rax],al
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	rex.WR test BYTE PTR [rax],r8b
   1400061db:	add    BYTE PTR [rax],al
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    BYTE PTR [rax+rcx*4],bh
   1400061e2:	add    BYTE PTR [rax],al
   1400061e4:	add    BYTE PTR [rax],al
   1400061e6:	add    BYTE PTR [rax],al
   1400061e8:	mov    esi,0x87
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    ah,ch
   1400061f1:	xchg   DWORD PTR [rax],eax
	...
   1400061ff:	add    ah,cl
   140006201:	mov    DWORD PTR [rax],eax
	...
   14000620f:	add    BYTE PTR [rsi],dh
   140006211:	(bad)  
   140006212:	add    BYTE PTR [rax],al
   140006214:	add    BYTE PTR [rax],al
   140006216:	add    BYTE PTR [rax],al
   140006218:	rex.W (bad) 
   14000621a:	add    BYTE PTR [rax],al
   14000621c:	add    BYTE PTR [rax],al
   14000621e:	add    BYTE PTR [rax],al
   140006220:	pop    rax
   140006221:	(bad)  
   140006222:	add    BYTE PTR [rax],al
   140006224:	add    BYTE PTR [rax],al
   140006226:	add    BYTE PTR [rax],al
   140006228:	push   0x82
   14000622d:	add    BYTE PTR [rax],al
   14000622f:	add    BYTE PTR [rdx-0x7e],bh
   140006232:	add    BYTE PTR [rax],al
   140006234:	add    BYTE PTR [rax],al
   140006236:	add    BYTE PTR [rax],al
   140006238:	mov    es,WORD PTR [rdx+0x0]
   14000623e:	add    BYTE PTR [rax],al
   140006240:	movabs ds:0xb000000000000082,al
   140006249:	(bad)  
   14000624a:	add    BYTE PTR [rax],al
   14000624c:	add    BYTE PTR [rax],al
   14000624e:	add    BYTE PTR [rax],al
   140006250:	mov    esi,0x82
   140006255:	add    BYTE PTR [rax],al
   140006257:	add    ah,dl
   140006259:	(bad)  
   14000625a:	add    BYTE PTR [rax],al
   14000625c:	add    BYTE PTR [rax],al
   14000625e:	add    BYTE PTR [rax],al
   140006260:	loop   0x1400061e4
   140006262:	add    BYTE PTR [rax],al
   140006264:	add    BYTE PTR [rax],al
   140006266:	add    BYTE PTR [rax],al
   140006268:	out    dx,al
   140006269:	(bad)  
   14000626a:	add    BYTE PTR [rax],al
   14000626c:	add    BYTE PTR [rax],al
   14000626e:	add    BYTE PTR [rax],al
   140006270:	(bad)  
   140006271:	add    DWORD PTR [rax],0x0
   140006274:	add    BYTE PTR [rax],al
   140006276:	add    BYTE PTR [rax],al
   140006278:	add    al,BYTE PTR [rbx+0x0]
	...
   140006286:	add    BYTE PTR [rax],al
   140006288:	or     al,BYTE PTR [rbp+0x0]
   14000628e:	add    BYTE PTR [rax],al
   140006290:	out    dx,al
   140006291:	test   BYTE PTR [rax],al
	...
   14000629f:	add    BYTE PTR [rax-0x7b],dl
	...
   1400062ae:	add    BYTE PTR [rax],al
   1400062b0:	(bad)  
   1400062b1:	test   BYTE PTR [rax],al
   1400062b3:	add    BYTE PTR [rax],al
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rsi-0x7b],bh
   1400062ba:	add    BYTE PTR [rax],al
   1400062bc:	add    BYTE PTR [rax],al
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	xchg   esp,eax
   1400062c1:	test   DWORD PTR [rax],eax
   1400062c3:	add    BYTE PTR [rax],al
   1400062c5:	add    BYTE PTR [rax],al
   1400062c7:	add    BYTE PTR [rax*4+0x0],bh
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	sub    BYTE PTR [rbp+0x0],al
	...
   1400062de:	add    BYTE PTR [rax],al
   1400062e0:	test   DWORD PTR fs:[rax],eax
	...
   1400062ef:	add    BYTE PTR [rsp+rax*4+0x0],ch
   1400062f6:	add    BYTE PTR [rax],al
   1400062f8:	rol    BYTE PTR [rax+rax*1+0x0],0x0
   140006300:	fiadd  DWORD PTR [rax+rax*1+0x0]
	...
   14000630f:	add    BYTE PTR [rdx+0x84],dl
	...
   14000631d:	add    BYTE PTR [rax],al
   14000631f:	add    ah,al
   140006321:	test   DWORD PTR [rax],eax
   140006323:	add    BYTE PTR [rax],al
   140006325:	add    BYTE PTR [rax],al
   140006327:	add    BYTE PTR [rdx+0x85],ch
	...
   140006335:	add    BYTE PTR [rax],al
   140006337:	add    BYTE PTR [rbx+rax*4+0x0],cl
   14000633b:	add    BYTE PTR [rax],al
   14000633d:	add    BYTE PTR [rax],al
   14000633f:	add    BYTE PTR [rdx-0x7d],bl
   140006342:	add    BYTE PTR [rax],al
   140006344:	add    BYTE PTR [rax],al
   140006346:	add    BYTE PTR [rax],al
   140006348:	push   0xffffffffffffff83
   14000634a:	add    BYTE PTR [rax],al
   14000634c:	add    BYTE PTR [rax],al
   14000634e:	add    BYTE PTR [rax],al
   140006350:	add    DWORD PTR ds:[rax],0x0
   140006354:	add    BYTE PTR [rax],al
   140006356:	add    BYTE PTR [rax],al
   140006358:	test   BYTE PTR [rbx+0x0],al
   14000635e:	add    BYTE PTR [rax],al
   140006360:	xor    al,0x83
   140006362:	add    BYTE PTR [rax],al
   140006364:	add    BYTE PTR [rax],al
   140006366:	add    BYTE PTR [rax],al
   140006368:	sub    al,BYTE PTR [rbx+0x0]
   14000636e:	add    BYTE PTR [rax],al
   140006370:	mov    WORD PTR [rbx+0x0],es
   140006376:	add    BYTE PTR [rax],al
   140006378:	xchg   esi,eax
   140006379:	add    DWORD PTR [rax],0x0
   14000637c:	add    BYTE PTR [rax],al
   14000637e:	add    BYTE PTR [rax],al
   140006380:	sbb    BYTE PTR [rdx+0x0],cl
   140006386:	add    BYTE PTR [rax],al
   140006388:	jl     0x14000630d
   14000638a:	add    BYTE PTR [rax],al
   14000638c:	add    BYTE PTR [rax],al
   14000638e:	add    BYTE PTR [rax],al
   140006390:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140006391:	add    DWORD PTR [rax],0x0
   140006394:	add    BYTE PTR [rax],al
   140006396:	add    BYTE PTR [rax],al
   140006398:	mov    eax,0x83
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    BYTE PTR [rsi],ah
   1400063a1:	mov    al,BYTE PTR [rax]
   1400063a3:	add    BYTE PTR [rax],al
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    BYTE PTR [rax],cl
   1400063a9:	test   BYTE PTR [rax],al
   1400063ab:	add    BYTE PTR [rax],al
   1400063ad:	add    BYTE PTR [rax],al
   1400063af:	add    ah,al
   1400063b1:	add    DWORD PTR [rax],0x0
   1400063b4:	add    BYTE PTR [rax],al
   1400063b6:	add    BYTE PTR [rax],al
   1400063b8:	fadd   QWORD PTR [rbx+0x0]
   1400063be:	add    BYTE PTR [rax],al
   1400063c0:	lock add DWORD PTR [rax],0x0
   1400063c4:	add    BYTE PTR [rax],al
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	out    0x83,al
	...
   1400063d6:	add    BYTE PTR [rax],al
   1400063d8:	cmp    BYTE PTR [rax+rax*1+0x0],al
	...
   1400063e7:	add    BYTE PTR [rsi+0x87],al
   1400063ed:	add    BYTE PTR [rax],al
   1400063ef:	add    BYTE PTR [rdx-0x79],bh
   1400063f2:	add    BYTE PTR [rax],al
   1400063f4:	add    BYTE PTR [rax],al
   1400063f6:	add    BYTE PTR [rax],al
   1400063f8:	movabs al,ds:0x3200000000000087
   140006401:	xchg   DWORD PTR [rax],eax
   140006403:	add    BYTE PTR [rax],al
   140006405:	add    BYTE PTR [rax],al
   140006407:	add    BYTE PTR [rdi+rax*4],dl
   14000640a:	add    BYTE PTR [rax],al
   14000640c:	add    BYTE PTR [rax],al
   14000640e:	add    BYTE PTR [rax],al
   140006410:	and    al,BYTE PTR [rdi+0x0]
   140006416:	add    BYTE PTR [rax],al
   140006418:	rex.X xchg DWORD PTR [rax],eax
   14000641b:	add    BYTE PTR [rax],al
   14000641d:	add    BYTE PTR [rax],al
   14000641f:	add    BYTE PTR [rdx-0x79],bl
   140006422:	add    BYTE PTR [rax],al
   140006424:	add    BYTE PTR [rax],al
   140006426:	add    BYTE PTR [rax],al
   140006428:	xchg   DWORD PTR fs:[rax],eax
	...
   140006437:	add    BYTE PTR [rsp+rax*4],bl
	...
   140006446:	add    BYTE PTR [rax],al
   140006448:	(bad)  
   140006449:	push   rcx
   14000644a:	add    BYTE PTR [rax+0x1],al
   14000644d:	add    BYTE PTR [rax],al
   14000644f:	add    al,al
   140006451:	push   rdx
   140006452:	add    BYTE PTR [rax+0x1],al
	...
   14000645d:	add    BYTE PTR [rax],al
   14000645f:	add    BYTE PTR [rax+0x1400049],ah
	...
   140006475:	add    BYTE PTR [rax],al
   140006477:	add    al,al
   140006479:	rex.W add BYTE PTR [rax+0x1],al
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rax+0x140004e],dl
	...
   14000648d:	add    BYTE PTR [rax],al
   14000648f:	add    BYTE PTR [rax-0x4ffffff0],dh
   140006495:	adc    eax,DWORD PTR [rax]
   140006497:	add    al,dl
   140006499:	adc    eax,DWORD PTR [rax]
   14000649b:	add    BYTE PTR [rax+0x40000016],al
   1400064a1:	sbb    al,0x0
   1400064a3:	add    BYTE PTR [rax],dl
   1400064a5:	and    BYTE PTR [rax],al
   1400064a7:	add    BYTE PTR [rax-0x5fffffdc],dh
   1400064ad:	(bad)  
   1400064ae:	add    BYTE PTR [rax],al
   1400064b0:	xor    BYTE PTR [rax+rax*1],dh
   1400064b3:	add    BYTE PTR [rax],al
   1400064b5:	cmp    BYTE PTR [rax],al
   1400064b7:	add    BYTE PTR [rax],ah
   1400064b9:	cmp    eax,DWORD PTR [rax]
   1400064bb:	add    BYTE PTR [rax],dh
   1400064bd:	add    BYTE PTR [r8],r8b
   1400064c0:	(bad)  
   1400064c1:	add    BYTE PTR [r8],r8b
   1400064c4:	ror    BYTE PTR [rax+0x0],0x0
   1400064c8:	movabs al,ds:0xd0000049f0000049
   1400064d1:	rex.WR add BYTE PTR [rax],r8b
   1400064d4:	push   rax
   1400064d5:	rex.WRX add BYTE PTR [rax],r8b
   1400064d8:	nop
   1400064d9:	rex.WRX add BYTE PTR [rax],r8b
   1400064dc:	jo     0x14000652d
   1400064de:	add    BYTE PTR [rax],al
   1400064e0:	(bad)  
   1400064e1:	push   rcx
	...
   1400064ee:	add    BYTE PTR [rax],al
   1400064f0:	push   rax
   1400064f1:	nop
   1400064f2:	add    BYTE PTR [rax+0x1],al
   1400064f5:	add    BYTE PTR [rax],al
   1400064f7:	add    al,dh
   1400064f9:	nop
   1400064fa:	add    BYTE PTR [rax+0x1],al
	...
   140006505:	add    BYTE PTR [rax],al
   140006507:	add    BYTE PTR [rbx+0x0],al
   14000650a:	push   rdx
   14000650b:	add    BYTE PTR [rax+rax*1+0x0],al
   14000650f:	add    BYTE PTR [rbp+0x0],al
   140006512:	outs   dx,BYTE PTR ds:[rsi]
   140006513:	add    BYTE PTR [rbx+0x0],ah
   140006516:	jb     0x140006518
   140006518:	jns    0x14000651a
   14000651a:	jo     0x14000651c
   14000651c:	je     0x14000651e
   14000651e:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140006523:	add    BYTE PTR [rax+rax*1+0x65],dh
   140006527:	add    BYTE PTR [rbp+0x0],ch
   14000652a:	jo     0x14000652c
   14000652c:	and    BYTE PTR [rax],al
   14000652e:	(bad)  
   14000652f:	add    BYTE PTR [rcx+0x0],ah
   140006532:	movsxd eax,DWORD PTR [rax]
   140006534:	imul   eax,DWORD PTR [rax],0x75
   140006537:	add    BYTE PTR [rax+0x0],dh
   14000653a:	and    BYTE PTR [rax],al
   14000653c:	data16 add BYTE PTR [rcx+0x0],ch
   140006540:	ins    BYTE PTR es:[rdi],dx
   140006541:	add    BYTE PTR [rbp+0x0],ah
	...
   140006550:	rex.XB add BYTE PTR [r10+0x0],sil
   140006554:	add    BYTE PTR gs:[rax+rax*1+0x65],ah
   140006559:	add    BYTE PTR [rsi+0x0],ch
   14000655c:	je     0x14000655e
   14000655e:	imul   eax,DWORD PTR [rax],0x6c0061
   140006564:	and    BYTE PTR [rax],al
   140006566:	rex.X add BYTE PTR [rcx+0x0],spl
   14000656a:	movsxd eax,DWORD PTR [rax]
   14000656c:	imul   eax,DWORD PTR [rax],0x75
   14000656f:	add    BYTE PTR [rax+0x0],dh
   140006572:	and    BYTE PTR [rax],al
   140006574:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140006578:	ins    BYTE PTR es:[rdi],dx
   140006579:	add    BYTE PTR [rbp+0x0],ah
   14000657c:	jae    0x14000657e
   14000657e:	and    BYTE PTR [rax],al
   140006580:	sub    BYTE PTR [rax],al
   140006582:	sub    al,BYTE PTR [rax]
   140006584:	add    BYTE PTR cs:[rbx+0x0],ah
   140006588:	jb     0x14000658a
   14000658a:	add    BYTE PTR fs:[rcx],ch
   14000658d:	add    BYTE PTR [rax],al
   14000658f:	add    BYTE PTR [rdx],ch
   140006591:	add    BYTE PTR [rsi],ch
   140006593:	add    BYTE PTR [rbx+0x0],ah
   140006596:	jb     0x140006598
   140006598:	add    BYTE PTR fs:[rax],al
   14000659b:	add    BYTE PTR [rcx+0x0],al
   14000659e:	ins    BYTE PTR es:[rdi],dx
   14000659f:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400065a3:	add    BYTE PTR [rsi+0x0],al
   1400065a6:	imul   eax,DWORD PTR [rax],0x65006c
   1400065ac:	jae    0x1400065ae
   1400065ae:	and    BYTE PTR [rax],al
   1400065b0:	sub    BYTE PTR [rax],al
   1400065b2:	sub    al,BYTE PTR [rax]
   1400065b4:	add    BYTE PTR cs:[rdx],ch
   1400065b7:	add    BYTE PTR [rcx],ch
   1400065b9:	add    BYTE PTR [rax],al
   1400065bb:	add    BYTE PTR [rdx],ch
	...
   1400065c5:	add    BYTE PTR [rax],al
   1400065c7:	add    BYTE PTR [rbx+0x0],ah
   1400065ca:	jb     0x1400065cc
   1400065cc:	add    BYTE PTR fs:[rax],al
   1400065cf:	add    BYTE PTR [rdi],ch
   1400065d1:	add    BYTE PTR [rax+0x0],dh
   1400065d4:	jb     0x1400065d6
   1400065d6:	outs   dx,DWORD PTR ds:[rsi]
   1400065d7:	add    BYTE PTR [rbx+0x0],ah
   1400065da:	add    BYTE PTR gs:[rcx+0x0],ch
   1400065de:	add    BYTE PTR fs:[rip+0x75002500],bh        # 0x1b5008ae5
   1400065e5:	add    BYTE PTR [rax],al
   1400065e7:	add    BYTE PTR [rdi],ch
   1400065e9:	add    BYTE PTR [rbp+0x0],dh
   1400065ec:	jae    0x1400065ee
   1400065ee:	add    BYTE PTR gs:[rdx+0x0],dh
   1400065f2:	je     0x1400065f4
   1400065f4:	outs   dx,DWORD PTR ds:[rsi]
   1400065f5:	add    BYTE PTR [rbx+0x0],ch
   1400065f8:	add    BYTE PTR gs:[rsi+0x0],ch
   1400065fc:	cmp    eax,0x49002500
   140006601:	add    BYTE PTR [rsi],dh
   140006603:	add    BYTE PTR [rax+rax*1],dh
   140006606:	jne    0x140006608
	...
   140006610:	(bad)  
   140006611:	add    BYTE PTR [rbx+0x0],dh
   140006614:	je     0x140006616
   140006616:	outs   dx,DWORD PTR ds:[rsi]
   140006617:	add    BYTE PTR [rax+0x0],dh
   14000661a:	add    BYTE PTR gs:[rsi+0x0],dh
   14000661e:	add    BYTE PTR gs:[rsi+0x0],ch
   140006622:	je     0x140006624
   140006624:	cmp    eax,0x49002500
   140006629:	add    BYTE PTR [rsi],dh
   14000662b:	add    BYTE PTR [rax+rax*1],dh
   14000662e:	jne    0x140006630
	...
   140006640:	shr    BYTE PTR [rbx+0x0],1
   140006643:	rex add DWORD PTR [rax],eax
   140006646:	add    BYTE PTR [rax],al
   140006648:	xor    BYTE PTR [rbp+0x0],al
   14000664b:	rex add DWORD PTR [rax],eax
   14000664e:	add    BYTE PTR [rax],al
   140006650:	(bad)  
   140006651:	add    BYTE PTR [r8+0x1],r8b
   140006655:	add    BYTE PTR [rax],al
   140006657:	add    al,ah
   140006659:	xchg   ebp,eax
   14000665a:	add    BYTE PTR [rax+0x1],al
	...
   14000667d:	add    BYTE PTR [rax],al
   14000667f:	add    dl,ah
   140006681:	ins    BYTE PTR es:[rdi],dx
   140006682:	add    BYTE PTR [rax+0x1],al
   140006685:	add    BYTE PTR [rax],al
   140006687:	add    BYTE PTR [rcx],al
   140006689:	add    BYTE PTR [rax],al
   14000668b:	add    BYTE PTR [rax],al
   14000668d:	add    BYTE PTR [rdx],cl
	...
   140006697:	add    BYTE PTR [rbp+0x2],ah
   14000669a:	add    BYTE PTR [rax],cl
	...
   1400066b8:	add    DWORD PTR [rax],eax
   1400066ba:	add    BYTE PTR [rdx],al
	...
   1400066c8:	mov    al,0x71
   1400066ca:	add    BYTE PTR [rax+0x1],al
	...
   1400066dd:	add    BYTE PTR [rax],al
   1400066df:	add    BYTE PTR [rdi+0x0],al
   1400066e2:	ins    BYTE PTR es:[rdi],dx
   1400066e3:	add    BYTE PTR [rdi+0x0],ch
   1400066e6:	(bad)  
   1400066e7:	add    BYTE PTR [rcx+0x0],ah
   1400066ea:	ins    BYTE PTR es:[rdi],dx
   1400066eb:	add    BYTE PTR [rax+rax*1+0x7b],bl
   1400066ef:	add    BYTE PTR [rax+rax*1+0x46],al
   1400066f3:	add    BYTE PTR [rsi+0x0],al
   1400066f6:	add    BYTE PTR [rbp+0x0],r8b
   1400066fa:	xor    al,BYTE PTR [rax]
   1400066fc:	xor    DWORD PTR [rax],eax
   1400066fe:	xor    eax,DWORD PTR [rax]
   140006700:	sub    eax,0x43003800
   140006705:	add    BYTE PTR [rdx+0x0],al
   140006708:	xor    al,0x0
   14000670a:	sub    eax,0x36003400
   14000670f:	add    BYTE PTR [rcx+0x0],ah
   140006712:	cmp    DWORD PTR [rax],eax
   140006714:	sub    eax,0x30003900
   140006719:	add    BYTE PTR [rbp+0x0],al
   14000671c:	rex.X add BYTE PTR [rip+0x44003300],bpl        # 0x184009a23
   140006723:	add    BYTE PTR [rcx+0x0],al
   140006726:	cmp    BYTE PTR [rax],al
   140006728:	xor    al,0x0
   14000672a:	xor    eax,DWORD PTR [rax]
   14000672c:	add    BYTE PTR [r14+0x0],al
   140006730:	add    BYTE PTR ss:[rsi],dh
   140006733:	add    BYTE PTR [rsi+0x0],al
   140006736:	cmp    DWORD PTR [rax],eax
   140006738:	jge    0x14000673a
   14000673a:	sub    eax,0x65007300
   14000673f:	add    BYTE PTR [rdx+0x0],dh
   140006742:	jbe    0x140006744
   140006744:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   140006750:	rex.WRXB add BYTE PTR [r10],r15b
   140006753:	add    BYTE PTR [rbx+0x0],dl
   140006756:	pop    rcx
   140006757:	add    BYTE PTR [rdi+0x0],al
   14000675a:	cmp    al,BYTE PTR [rax]
   14000675c:	push   rbx
   14000675d:	add    BYTE PTR [rcx+0x0],bl
   140006760:	add    BYTE PTR [rdx],r15b
   140006763:	add    BYTE PTR [rax],ch
   140006765:	add    BYTE PTR [rcx+0x0],al
   140006768:	cmp    eax,DWORD PTR [rax]
   14000676a:	cmp    eax,DWORD PTR [rax]
   14000676c:	xor    BYTE PTR [rax],al
   14000676e:	js     0x140006770
   140006770:	xor    DWORD PTR [rax],eax
   140006772:	rex.RX add BYTE PTR [rax],r14b
   140006775:	add    BYTE PTR [rax],dh
   140006777:	add    BYTE PTR [rax],dh
   140006779:	add    BYTE PTR [rbx],dh
   14000677b:	add    BYTE PTR [rbx],bh
   14000677d:	add    BYTE PTR [rbx],bh
   14000677f:	add    BYTE PTR [rbx],bh
   140006781:	add    BYTE PTR [rbx+0x0],dl
   140006784:	pop    rcx
   140006785:	add    BYTE PTR [rcx],ch
   140006787:	add    BYTE PTR [rax],ch
   140006789:	add    BYTE PTR [rcx+0x0],al
   14000678c:	cmp    eax,DWORD PTR [rax]
   14000678e:	cmp    eax,DWORD PTR [rax]
   140006790:	xor    BYTE PTR [rax],al
   140006792:	js     0x140006794
   140006794:	xor    al,BYTE PTR [rax]
   140006796:	cmp    eax,DWORD PTR [rax]
   140006798:	cmp    eax,DWORD PTR [rax]
   14000679a:	cmp    eax,DWORD PTR [rax]
   14000679c:	push   rdi
   14000679d:	add    BYTE PTR [rax+rax*1+0x29],al
	...
   1400067ad:	add    BYTE PTR [rax],al
   1400067af:	add    BYTE PTR [rbx+0x0],bh
   1400067b2:	add    BYTE PTR [rsi+0x0],r8b
   1400067b6:	add    BYTE PTR [rax+r8*1+0x45],r8b
   1400067bb:	add    BYTE PTR [rdx],dh
   1400067bd:	add    BYTE PTR [rcx],dh
   1400067bf:	add    BYTE PTR [rbx],dh
   1400067c1:	add    BYTE PTR [rip+0x43003800],ch        # 0x183009fc7
   1400067c7:	add    BYTE PTR [rdx+0x0],al
   1400067ca:	xor    al,0x0
   1400067cc:	sub    eax,0x36003400
   1400067d1:	add    BYTE PTR [rcx+0x0],ah
   1400067d4:	cmp    DWORD PTR [rax],eax
   1400067d6:	sub    eax,0x30003900
   1400067db:	add    BYTE PTR [rbp+0x0],al
   1400067de:	rex.X add BYTE PTR [rip+0x44003300],bpl        # 0x184009ae5
   1400067e5:	add    BYTE PTR [rcx+0x0],al
   1400067e8:	cmp    BYTE PTR [rax],al
   1400067ea:	xor    al,0x0
   1400067ec:	xor    eax,DWORD PTR [rax]
   1400067ee:	add    BYTE PTR [r14+0x0],al
   1400067f2:	add    BYTE PTR ss:[rsi],dh
   1400067f5:	add    BYTE PTR [rsi+0x0],al
   1400067f8:	cmp    DWORD PTR [rax],eax
   1400067fa:	jge    0x1400067fc
   1400067fc:	sub    eax,0x65007200
   140006801:	add    BYTE PTR [rcx+0x0],dh
   140006804:	jne    0x140006806
   140006806:	add    BYTE PTR gs:[rbx+0x0],dh
   14000680a:	je     0x14000680c
   14000680c:	xor    al,BYTE PTR [rax]
   14000680e:	add    BYTE PTR [rax],al
   140006810:	rex.WRXB add BYTE PTR [r10],r15b
   140006813:	add    BYTE PTR [rbx+0x0],dl
   140006816:	pop    rcx
   140006817:	add    BYTE PTR [rdi+0x0],al
   14000681a:	cmp    al,BYTE PTR [rax]
   14000681c:	push   rbx
   14000681d:	add    BYTE PTR [rcx+0x0],bl
   140006820:	add    BYTE PTR [rdx],r15b
   140006823:	add    BYTE PTR [rax],ch
   140006825:	add    BYTE PTR [rcx+0x0],al
   140006828:	cmp    eax,DWORD PTR [rax]
   14000682a:	cmp    eax,DWORD PTR [rax]
   14000682c:	xor    BYTE PTR [rax],al
   14000682e:	js     0x140006830
   140006830:	xor    DWORD PTR [rax],eax
   140006832:	rex.RX add BYTE PTR [rax],r14b
   140006835:	add    BYTE PTR [rax],dh
   140006837:	add    BYTE PTR [rax],dh
   140006839:	add    BYTE PTR [rbx],dh
   14000683b:	add    BYTE PTR [rbx],bh
   14000683d:	add    BYTE PTR [rbx],bh
   14000683f:	add    BYTE PTR [rbx],bh
   140006841:	add    BYTE PTR [rbx+0x0],dl
   140006844:	pop    rcx
   140006845:	add    BYTE PTR [rcx],ch
	...
   14000684f:	add    BYTE PTR [rbx+0x0],bh
   140006852:	(bad)  
   140006853:	add    BYTE PTR [rdi],dh
   140006855:	add    BYTE PTR [rbx],dh
   140006857:	add    BYTE PTR [rsi+0x0],al
   14000685a:	xor    DWORD PTR [rax],eax
   14000685c:	rex.X add BYTE PTR [rcx],dil
   14000685f:	add    BYTE PTR [rcx+0x0],al
   140006862:	sub    eax,0x35003300
   140006867:	add    BYTE PTR [rdx+0x0],al
   14000686a:	cmp    DWORD PTR [rax],eax
   14000686c:	sub    eax,0x45003400
   140006871:	add    BYTE PTR [rcx],bh
   140006873:	add    BYTE PTR [rip+0x38002d00],dh        # 0x178009579
   140006879:	add    BYTE PTR [rbx],dh
   14000687b:	add    BYTE PTR [rcx+0x0],al
   14000687e:	xor    BYTE PTR [rax],al
   140006880:	sub    eax,0x32004100
   140006885:	add    BYTE PTR [rcx],dh
   140006887:	add    BYTE PTR [rax],dh
   140006889:	add    BYTE PTR [rsi+0x0],al
   14000688c:	xor    al,BYTE PTR [rax]
   14000688e:	add    BYTE PTR [rbp+0x0],r8b
   140006892:	xor    eax,DWORD PTR [rax]
   140006894:	rex.X add BYTE PTR [rbx],sil
   140006897:	add    BYTE PTR [rdi],dh
   140006899:	add    BYTE PTR [rbp+0x0],bh
   14000689c:	sub    eax,0x64007300
   1400068a1:	add    BYTE PTR [rax+rax*1+0x0],ch
   1400068a5:	add    BYTE PTR [rax],al
   1400068a7:	add    BYTE PTR [rax+0x68],dl
   1400068aa:	add    BYTE PTR [rax+0x1],al
   1400068ad:	add    BYTE PTR [rax],al
   1400068af:	add    BYTE PTR [rax],dl
   1400068b1:	push   0x14000
   1400068b6:	add    BYTE PTR [rax],al
   1400068b8:	mov    al,0x67
   1400068ba:	add    BYTE PTR [rax+0x1],al
   1400068bd:	add    BYTE PTR [rax],al
   1400068bf:	add    BYTE PTR [rax],dl
   1400068c1:	push   0x14000
   1400068c6:	add    BYTE PTR [rax],al
   1400068c8:	loopne 0x140006930
   1400068ca:	add    BYTE PTR [rax+0x1],al
   1400068cd:	add    BYTE PTR [rax],al
   1400068cf:	add    BYTE PTR [rax+0x67],dl
   1400068d2:	add    BYTE PTR [rax+0x1],al
   1400068d5:	add    BYTE PTR [rax],al
   1400068d7:	add    BYTE PTR [rcx],ah
   1400068d9:	and    BYTE PTR [rax],al
   1400068db:	add    BYTE PTR [rax],al
   1400068dd:	add    BYTE PTR [rax],al
   1400068df:	add    BYTE PTR [rax+0x140006f],dl
   1400068e5:	add    BYTE PTR [rax],al
   1400068e7:	add    BYTE PTR [rax],al
   1400068e9:	add    BYTE PTR [rax],al
   1400068eb:	add    BYTE PTR [rbx],al
   1400068ed:	(bad)  
   1400068ee:	add    BYTE PTR [rax],al
   1400068f0:	xor    BYTE PTR [rax],al
	...
   1400068fe:	add    BYTE PTR [rax],al
   140006900:	and    DWORD PTR [rax],eax
   140006902:	add    BYTE PTR [rax],al
   140006904:	add    BYTE PTR [rax],al
   140006906:	add    BYTE PTR [rax],al
   140006908:	int3   
   140006909:	ins    BYTE PTR es:[rdi],dx
   14000690a:	add    BYTE PTR [rax+0x1],al
   14000690d:	add    BYTE PTR [rax],al
   14000690f:	add    BYTE PTR [rcx],ah
   140006911:	add    BYTE PTR [rax],al
   140006913:	add    BYTE PTR [rax],al
   140006915:	add    BYTE PTR [rax],al
   140006917:	add    ah,cl
   140006919:	ins    BYTE PTR es:[rdi],dx
   14000691a:	add    BYTE PTR [rax+0x1],al
   14000691d:	add    BYTE PTR [rax],al
   14000691f:	add    BYTE PTR [rcx],ah
   140006921:	add    BYTE PTR [rax],al
   140006923:	add    BYTE PTR [rax],al
   140006925:	add    BYTE PTR [rax],al
   140006927:	add    ah,cl
   140006929:	ins    BYTE PTR es:[rdi],dx
   14000692a:	add    BYTE PTR [rax+0x1],al
   14000692d:	add    BYTE PTR [rax],al
   14000692f:	add    BYTE PTR [rcx],ah
   140006931:	add    BYTE PTR [rax],al
   140006933:	add    BYTE PTR [rax],al
   140006935:	add    BYTE PTR [rax],al
   140006937:	add    ah,cl
   140006939:	ins    BYTE PTR es:[rdi],dx
   14000693a:	add    BYTE PTR [rax+0x1],al
   14000693d:	add    BYTE PTR [rax],al
   14000693f:	add    BYTE PTR [rcx],ah
   140006941:	and    BYTE PTR [rax],al
   140006943:	add    BYTE PTR [rax],al
   140006945:	add    BYTE PTR [rax],al
   140006947:	add    al,bl
   140006949:	imul   eax,DWORD PTR [rax],0x140
   14000694f:	add    BYTE PTR [rcx],ah
   140006951:	add    BYTE PTR [rax],al
   140006953:	add    BYTE PTR [rax],al
   140006955:	add    BYTE PTR [rax],al
   140006957:	add    BYTE PTR [rax+0x140006b],dh
   14000695d:	add    BYTE PTR [rax],al
   14000695f:	add    BYTE PTR [rcx],ah
   140006961:	add    BYTE PTR [rax],al
   140006963:	add    BYTE PTR [rax],al
   140006965:	add    BYTE PTR [rax],al
   140006967:	add    ah,cl
   140006969:	ins    BYTE PTR es:[rdi],dx
   14000696a:	add    BYTE PTR [rax+0x1],al
   14000696d:	add    BYTE PTR [rax],al
   14000696f:	add    BYTE PTR [rcx],ah
   140006971:	add    BYTE PTR [rax],al
   140006973:	add    BYTE PTR [rax],al
   140006975:	add    BYTE PTR [rax],al
   140006977:	add    ah,cl
   140006979:	ins    BYTE PTR es:[rdi],dx
   14000697a:	add    BYTE PTR [rax+0x1],al
   14000697d:	add    BYTE PTR [rax],al
   14000697f:	add    BYTE PTR [rax+0x0],al
   140006982:	or     BYTE PTR [rcx],al
   140006984:	adc    BYTE PTR [rax],al
   140006986:	add    BYTE PTR [rax],al
   140006988:	add    BYTE PTR [rax],al
   14000698a:	add    BYTE PTR [rax],al
   14000698c:	or     BYTE PTR [rax],al
   14000698e:	add    BYTE PTR [rax],al
   140006990:	add    BYTE PTR [rax],al
   140006992:	add    BYTE PTR [rax],al
   140006994:	add    DWORD PTR [rax],eax
   140006996:	or     BYTE PTR [rax],al
   140006998:	jb     0x14000699a
   14000699a:	add    BYTE PTR [rax],al
   14000699c:	add    BYTE PTR [rax],al
   14000699e:	add    BYTE PTR [rax],al
   1400069a0:	enter  0x6c,0x40
   1400069a4:	add    DWORD PTR [rax],eax
   1400069a6:	add    BYTE PTR [rax],al
   1400069a8:	lock add BYTE PTR [rax],al
   1400069ab:	add    BYTE PTR [rax],cl
   1400069ad:	add    BYTE PTR [rax],al
   1400069af:	add    al,ah
   1400069b1:	jno    0x1400069b3
   1400069b3:	rex add DWORD PTR [rax],eax
   1400069b6:	add    BYTE PTR [rax],al
   1400069b8:	shr    BYTE PTR [rdi+0x0],1
   1400069bb:	rex add DWORD PTR [rax],eax
   1400069be:	add    BYTE PTR [rax],al
   1400069c0:	adc    BYTE PTR [rsi+0x0],ch
   1400069c3:	rex add DWORD PTR [rax],eax
   1400069c6:	add    BYTE PTR [rax],al
   1400069c8:	adc    BYTE PTR [rsi+0x0],ch
   1400069cb:	rex add DWORD PTR [rax],eax
   1400069ce:	add    BYTE PTR [rax],al
   1400069d0:	sub    BYTE PTR [rcx+0x0],0x40
   1400069d4:	add    DWORD PTR [rax],eax
   1400069d6:	add    BYTE PTR [rax],al
   1400069d8:	add    BYTE PTR [r8],al
   1400069db:	add    BYTE PTR [rcx],al
   1400069dd:	add    BYTE PTR [rax],al
   1400069df:	add    al,ch
   1400069e1:	push   0x14000
   1400069e6:	add    BYTE PTR [rax],al
   1400069e8:	add    DWORD PTR [rax],eax
   1400069ea:	add    BYTE PTR [rax],al
   1400069ec:	add    BYTE PTR [rax],al
   1400069ee:	add    BYTE PTR [rax],al
   1400069f0:	cmp    al,0x6c
   1400069f2:	add    BYTE PTR [rax+0x1],al
	...
   140006a01:	add    BYTE PTR [rax],al
   140006a03:	rex.W add BYTE PTR [rax],al
   140006a06:	add    BYTE PTR [rax],al
   140006a08:	add    BYTE PTR [rax],al
   140006a0a:	mov    BYTE PTR [rax],al
   140006a0c:	xor    al,BYTE PTR [rax]
   140006a0e:	or     BYTE PTR [rax],al
   140006a10:	rex.WR add BYTE PTR [rax+0x0],r15b
   140006a14:	(bad)  
   140006a15:	(bad)  
   140006a17:	xchg   DWORD PTR [rcx],eax
   140006a19:	add    BYTE PTR [rcx],al
   140006a1b:	add    BYTE PTR [rax],al
   140006a1d:	add    BYTE PTR [rax],al
   140006a1f:	add    BYTE PTR [rax+0x0],cl
   140006a22:	adc    BYTE PTR [rax],al
   140006a24:	or     BYTE PTR [rax],al
   140006a26:	or     eax,DWORD PTR [rcx]
   140006a28:	sbb    BYTE PTR [rax],al
   140006a2a:	(bad)  
   140006a2b:	add    BYTE PTR [rbx],cl
   140006a2d:	add    DWORD PTR [rax],esp
   140006a2f:	add    BYTE PTR [rax+rax*1+0x48],dh
   140006a33:	add    BYTE PTR [rax],ch
   140006a35:	add    BYTE PTR [rax],cl
   140006a37:	add    BYTE PTR [rax+0x0],cl
   140006a3a:	xor    BYTE PTR [rax],al
   140006a3c:	or     BYTE PTR [rax],al
   140006a3e:	or     eax,DWORD PTR [rax]
   140006a40:	cmp    BYTE PTR [rax],al
   140006a42:	stos   BYTE PTR es:[rdi],al
   140006a43:	add    BYTE PTR [rax+0x0],cl
   140006a46:	add    BYTE PTR [rax],cl
   140006a49:	add    BYTE PTR [rax+0x0],cl
   140006a4c:	rex.W add BYTE PTR [rax],cl
   140006a4f:	add    BYTE PTR [rax+0x0],cl
   140006a52:	push   rax
   140006a53:	add    BYTE PTR [rax],cl
   140006a55:	add    BYTE PTR [rbx],dl
   140006a57:	and    BYTE PTR [rax+0x0],bl
   140006a5a:	mov    edx,0x60215000
   140006a5f:	add    BYTE PTR [rax],cl
   140006a61:	add    BYTE PTR [rax+0x21],dl
   140006a64:	push   0x50000800
   140006a69:	and    DWORD PTR [rax+0x0],esi
   140006a6c:	or     BYTE PTR [rax],al
   140006a6e:	pop    rax
   140006a6f:	add    DWORD PTR [rax+0x0],edi
   140006a72:	or     BYTE PTR [rax],al
   140006a74:	jo     0x140006a76
   140006a76:	add    BYTE PTR [rax],0x8
   140006a79:	add    BYTE PTR [rax],al
   140006a7b:	rex.W add BYTE PTR [rax],al
   140006a7e:	add    BYTE PTR [rax],al
   140006a80:	add    DWORD PTR [rax],eax
   140006a82:	pop    rax
   140006a83:	add    BYTE PTR [rdx],dh
   140006a85:	add    BYTE PTR [rax],cl
   140006a87:	add    BYTE PTR [rax],bl
   140006a89:	add    BYTE PTR [rax+0x0],al
   140006a8c:	(bad)  
   140006a8d:	or     DWORD PTR [rdx],ecx
   140006a8f:	add    eax,DWORD PTR [rcx]
   140006a91:	add    BYTE PTR [rax],al
   140006a93:	add    BYTE PTR [rax],al
   140006a95:	add    BYTE PTR [rax],al
   140006a97:	add    BYTE PTR [rbx],cl
   140006a99:	add    BYTE PTR [rax],dl
   140006a9b:	add    dh,dl
   140006a9d:	add    BYTE PTR [rax+0x0],cl
   140006aa0:	sbb    BYTE PTR [rax],al
   140006aa2:	or     BYTE PTR [rax],al
   140006aa4:	rex.W add BYTE PTR [rax],spl
   140006aa7:	add    BYTE PTR [rax],cl
   140006aa9:	add    BYTE PTR [rax+0x0],cl
   140006aac:	sub    BYTE PTR [rax],al
   140006aae:	or     BYTE PTR [rax],al
   140006ab0:	adc    esp,DWORD PTR [rax]
   140006ab2:	xor    BYTE PTR [rax],al
   140006ab4:	fiadd  DWORD PTR [rax]
   140006ab6:	push   rax
   140006ab7:	and    DWORD PTR [rax],edi
   140006ab9:	add    BYTE PTR [rax],cl
   140006abb:	add    BYTE PTR [rbx],dl
   140006abd:	and    BYTE PTR [rax+0x0],al
   140006ac0:	out    dx,al
   140006ac1:	add    BYTE PTR [rax+0x21],dl
   140006ac4:	rex.W add BYTE PTR [rax],cl
   140006ac7:	add    BYTE PTR [rax+0x0],dh
   140006aca:	push   rax
   140006acb:	add    BYTE PTR [rax],cl
   140006acd:	add    BYTE PTR [rax],al
   140006acf:	rex.W add BYTE PTR [rax],al
   140006ad2:	add    BYTE PTR [rax],al
   140006ad4:	add    al,BYTE PTR [rax]
   140006ad6:	sub    BYTE PTR [rax],al
   140006ad8:	xor    al,BYTE PTR [rax]
   140006ada:	or     BYTE PTR [rax],al
   140006adc:	or     BYTE PTR [rax],al
   140006ade:	or     BYTE PTR [rax],al
   140006ae0:	mov    BYTE PTR [rbx],0xa
   140006ae3:	add    DWORD PTR [rax],eax
   140006ae5:	add    BYTE PTR [rax],al
   140006ae7:	add    BYTE PTR [rax],al
   140006ae9:	add    BYTE PTR [rax],al
   140006aeb:	add    BYTE PTR [rbx],cl
   140006aed:	add    BYTE PTR [rax],dl
   140006aef:	add    dh,dl
   140006af1:	add    BYTE PTR [rax+0x0],cl
   140006af4:	sbb    BYTE PTR [rax],al
   140006af6:	or     BYTE PTR [rax],al
   140006af8:	jo     0x140006afa
   140006afa:	and    BYTE PTR [rax],al
   140006afc:	or     BYTE PTR [rax],al
   140006afe:	add    BYTE PTR [rax+0x0],cl
   140006b01:	add    BYTE PTR [rax],al
   140006b03:	add    BYTE PTR [rbx],al
   140006b05:	add    BYTE PTR [rax],ch
   140006b07:	add    BYTE PTR [rdx],dh
   140006b09:	add    BYTE PTR [rax],cl
   140006b0b:	add    BYTE PTR [rax],cl
   140006b0d:	add    BYTE PTR [rax],cl
   140006b0f:	add    dh,al
   140006b11:	add    ecx,DWORD PTR [rdx]
   140006b13:	add    DWORD PTR [rax],eax
   140006b15:	add    BYTE PTR [rax],al
   140006b17:	add    BYTE PTR [rax],al
   140006b19:	add    BYTE PTR [rax],al
   140006b1b:	add    BYTE PTR [rbx],cl
   140006b1d:	add    BYTE PTR [rax],dl
   140006b1f:	add    dh,dl
   140006b21:	add    BYTE PTR [rax+0x0],cl
   140006b24:	sbb    BYTE PTR [rax],al
   140006b26:	or     BYTE PTR [rax],al
   140006b28:	jo     0x140006b2a
   140006b2a:	and    BYTE PTR [rax],al
   140006b2c:	or     BYTE PTR [rax],al
   140006b2e:	add    BYTE PTR [rax+0x0],cl
   140006b31:	add    BYTE PTR [rax],al
   140006b33:	add    BYTE PTR [rax+rax*1],al
   140006b36:	adc    BYTE PTR [rax],al
   140006b38:	xor    al,BYTE PTR [rax]
   140006b3a:	add    BYTE PTR [rax],al
   140006b3c:	add    BYTE PTR [rax],al
   140006b3e:	or     BYTE PTR [rax],al
   140006b40:	add    DWORD PTR [rdx],r9d
   140006b43:	add    DWORD PTR [rax],eax
   140006b45:	add    BYTE PTR [rax],al
   140006b47:	add    BYTE PTR [rax],al
   140006b49:	add    BYTE PTR [rax],al
   140006b4b:	add    BYTE PTR [rax+0x0],dh
   140006b4e:	or     BYTE PTR [rax],al
   140006b50:	or     BYTE PTR [rax],al
   140006b52:	add    BYTE PTR [rax],al
   140006b54:	add    BYTE PTR [rax],al
   140006b56:	add    BYTE PTR [rax],al
   140006b58:	add    DWORD PTR [r8],eax
   140006b5b:	add    BYTE PTR [rdx],al
   140006b5d:	add    BYTE PTR [rax],al
   140006b5f:	add    BYTE PTR [rax+0x6e],dh
   140006b62:	add    BYTE PTR [rax+0x1],al
   140006b65:	add    BYTE PTR [rax],al
   140006b67:	add    BYTE PTR [rdx],al
   140006b69:	add    BYTE PTR [rax],al
   140006b6b:	add    BYTE PTR [rax],al
   140006b6d:	add    BYTE PTR [rax],al
   140006b6f:	add    BYTE PTR [rax+0x140006e],dl
   140006b75:	add    BYTE PTR [rax],al
   140006b77:	add    BYTE PTR [rbx+0x0],al
   140006b7a:	add    BYTE PTR [rax],al
   140006b7c:	add    DWORD PTR [rax],eax
   140006b7e:	add    BYTE PTR [rax],al
   140006b80:	movabs al,ds:0xa00000000140006b
   140006b89:	imul   eax,DWORD PTR [rax],0x40
   140006b8c:	add    DWORD PTR [rax],eax
   140006b8e:	add    BYTE PTR [rax],al
   140006b90:	and    BYTE PTR [rax+rax*1],dl
   140006b93:	add    BYTE PTR [rax],al
   140006b95:	add    BYTE PTR [rax],al
   140006b97:	add    BYTE PTR [rax+0x140006e],al
   140006b9d:	add    BYTE PTR [rax],al
   140006b9f:	add    BYTE PTR [rcx],al
   140006ba1:	add    BYTE PTR [rax],al
   140006ba3:	add    BYTE PTR [rbx],al
   140006ba5:	(bad)  
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	push   rax
   140006ba9:	add    BYTE PTR [rax],al
   140006bab:	add    BYTE PTR [rax],al
   140006bad:	add    BYTE PTR [rax],al
   140006baf:	add    BYTE PTR [rax],dh
   140006bb1:	add    eax,DWORD PTR [rax]
   140006bb3:	add    BYTE PTR [rax],dl
   140006bb5:	add    BYTE PTR [rax],al
   140006bb7:	add    BYTE PTR [rcx],ah
   140006bb9:	and    BYTE PTR [rax],al
   140006bbb:	add    BYTE PTR [rax],al
   140006bbd:	add    BYTE PTR [rax],al
   140006bbf:	add    BYTE PTR [rax+0x6b],bl
   140006bc2:	add    BYTE PTR [rax+0x1],al
	...
   140006bcd:	add    BYTE PTR [rax],al
   140006bcf:	add    BYTE PTR [rax+0x0],ah
   140006bd2:	add    BYTE PTR [rax],al
   140006bd4:	fcomp  DWORD PTR [rbp-0x1a]
   140006bd7:	adc    bh,BYTE PTR [rdi-0x78]
   140006bda:	out    dx,eax
   140006bdb:	xchg   r9d,eax
   140006bdd:	mov    edi,0x426c818d
   140006be2:	ret    0x1e7
   140006be5:	add    BYTE PTR [rax],al
   140006be7:	add    BYTE PTR [rbx*2+0x1ceb8a88],al
   140006bee:	leave  
   140006bef:	adc    DWORD PTR [rdi+0x2b0008e8],ebx
   140006bf5:	adc    BYTE PTR [rax+0x60],cl
   140006bf8:	add    al,BYTE PTR [rax]
	...
   140006c1e:	add    BYTE PTR [rax],al
   140006c20:	mov    al,0x71
   140006c22:	add    BYTE PTR [rax+0x1],al
   140006c25:	add    BYTE PTR [rax],al
   140006c27:	add    BYTE PTR [rax],al
   140006c29:	add    BYTE PTR [rax],al
   140006c2b:	add    al,BYTE PTR [rax]
   140006c2d:	add    BYTE PTR [rax],al
   140006c2f:	add    BYTE PTR [rax],al
   140006c31:	add    BYTE PTR [rax],al
   140006c33:	add    BYTE PTR [rbx],al
   140006c35:	(bad)  
   140006c36:	add    BYTE PTR [rax],al
   140006c38:	add    BYTE PTR [rax],al
   140006c3b:	add    BYTE PTR [rax],dl
   140006c3d:	add    BYTE PTR [rax],al
   140006c3f:	add    BYTE PTR [rip+0x50000307],dh        # 0x190006f4c
	...
   140006c59:	imul   eax,DWORD PTR [rax],0x140
   140006c5f:	add    BYTE PTR [rax+rax*1],dl
   140006c62:	add    BYTE PTR [rax],al
   140006c64:	add    BYTE PTR [rax],al
   140006c66:	add    BYTE PTR [rax],al
   140006c68:	adc    al,0x0
   140006c6a:	add    BYTE PTR [rax],al
   140006c6c:	add    BYTE PTR [rax],al
   140006c6e:	add    BYTE PTR [rax],al
   140006c70:	add    eax,0x0
   140006c75:	add    BYTE PTR [rax],al
   140006c77:	add    BYTE PTR [rax+0x400],dl
   140006c7d:	add    BYTE PTR [rax],al
   140006c7f:	add    BYTE PTR [rax+rax*1],dl
   140006c82:	add    BYTE PTR [rax],al
   140006c84:	add    BYTE PTR [rax],al
   140006c86:	add    BYTE PTR [rax],al
   140006c88:	adc    al,0x0
   140006c8a:	add    BYTE PTR [rax],al
   140006c8c:	add    BYTE PTR [rax],al
   140006c8e:	add    BYTE PTR [rax],al
   140006c90:	adc    al,0x0
   140006c92:	add    BYTE PTR [rax],al
   140006c94:	add    BYTE PTR [rax],al
   140006c96:	add    BYTE PTR [rax],al
   140006c98:	add    eax,0x0
   140006c9d:	add    BYTE PTR [rax],al
   140006c9f:	add    BYTE PTR [rax+0x400],dl
   140006ca5:	add    BYTE PTR [rax],al
   140006ca7:	add    BYTE PTR [rax+rax*1],dl
   140006caa:	add    BYTE PTR [rax],al
   140006cac:	add    BYTE PTR [rax],al
   140006cae:	add    BYTE PTR [rax],al
   140006cb0:	adc    al,0x0
   140006cb2:	add    BYTE PTR [rax],al
   140006cb4:	add    BYTE PTR [rax],al
   140006cb6:	add    BYTE PTR [rax],al
   140006cb8:	adc    al,0x0
   140006cba:	add    BYTE PTR [rax],al
   140006cbc:	add    BYTE PTR [rax],al
   140006cbe:	add    BYTE PTR [rax],al
   140006cc0:	xchg   ebx,eax
   140006cc1:	add    BYTE PTR [rax],al
   140006cc3:	add    BYTE PTR [rax],al
   140006cc5:	add    BYTE PTR [rax],al
   140006cc7:	add    BYTE PTR [rip+0x64000000],al        # 0x1a4006ccd
   140006ccd:	add    BYTE PTR [rdx],al
   140006ccf:	add    BYTE PTR [rax],al
   140006cd1:	add    BYTE PTR [rax],al
   140006cd3:	add    BYTE PTR [rax*1+0x8030006],al
   140006cda:	add    BYTE PTR [rax],al
   140006cdc:	(bad)  
   140006cdd:	add    BYTE PTR [rax],al
   140006cdf:	add    BYTE PTR [rax],al
   140006ce1:	add    BYTE PTR [rax],al
   140006ce3:	add    BYTE PTR [rcx],dl
   140006ce5:	add    BYTE PTR [rdx],bl
   140006ce7:	add    BYTE PTR [rip+0x8000403],dl        # 0x1480070f0
   140006ced:	pop    rbx
   140006cee:	sbb    al,0x0
   140006cf0:	add    DWORD PTR [rax],eax
   140006cf2:	sbb    DWORD PTR [rax],eax
   140006cf4:	push   rax
   140006cf5:	add    BYTE PTR [rcx],al
   140006cf7:	add    BYTE PTR [rcx],bl
   140006cf9:	add    BYTE PTR [rax+0x0],dl
   140006cfc:	add    DWORD PTR [rax],eax
   140006cfe:	add    bl,BYTE PTR [rbx+0x1a]
   140006d01:	add    ebp,DWORD PTR [rax+0x0]
   140006d04:	add    BYTE PTR [rax],al
   140006d06:	(bad)  
   140006d07:	add    BYTE PTR [rip+0x36363640],cl        # 0x17636a34d
   140006d0d:	ss ss mov ecx,0xb90d0606
   140006d14:	mov    ecx,0x8364008
   140006d19:	or     BYTE PTR [rbx+rbx*2+0x12],bl
   140006d1d:	add    dl,cl
   140006d1f:	call   QWORD PTR [rdx]
   140006d21:	or     BYTE PTR [rip+0x2508125c],ah        # 0x165087f83
   140006d27:	pop    rsp
   140006d28:	adc    cl,BYTE PTR [rax]
   140006d2a:	and    eax,0x2508125c
   140006d2f:	pop    rsp
   140006d30:	adc    ah,BYTE PTR [rax]
   140006d32:	mov    esp,0x200011ff
   140006d37:	add    BYTE PTR [rbx],bl
   140006d39:	add    BYTE PTR [rcx],al
   140006d3b:	add    BYTE PTR [rcx],bl
   140006d3d:	add    BYTE PTR [rax],dh
   140006d3f:	add    BYTE PTR [rax],al
   140006d41:	add    BYTE PTR [rdx],al
   140006d43:	pop    rbx
   140006d44:	sbb    eax,0x1000800
   140006d49:	pop    rbx
   140006d4a:	adc    eax,0x8001003
   140006d4f:	(bad)  
   140006d50:	(bad)  
   140006d51:	rex.WR add cl,r14b
   140006d54:	call   FWORD PTR [rbx+0x1a]
   140006d57:	add    edx,DWORD PTR [rax+0x0]
   140006d5a:	add    BYTE PTR [rax],al
   140006d5c:	adc    BYTE PTR [rax],al
   140006d5e:	ss or  BYTE PTR ss:[rax+0x36],al
   140006d63:	ss or  BYTE PTR ss:[rax+0x36],al
   140006d68:	ss ss pop rsp
   140006d6b:	pop    rbx
   140006d6c:	adc    cl,BYTE PTR [rax]
   140006d6e:	and    eax,0x2508125c
   140006d73:	pop    rsp
   140006d74:	adc    cl,BYTE PTR [rax]
   140006d76:	and    eax,0x2508125c
   140006d7b:	pop    rsp
   140006d7c:	adc    ah,BYTE PTR [rax]
   140006d7e:	mov    edx,0xc80012ff
   140006d83:	call   QWORD PTR [rdx]
   140006d85:	or     BYTE PTR [rip+0x2508125c],ah        # 0x165087fe7
   140006d8b:	pop    rsp
   140006d8c:	adc    ah,BYTE PTR [rax]
   140006d8e:	add    al,BYTE PTR [rax]
   140006d90:	sbb    eax,DWORD PTR [rax]
   140006d92:	add    DWORD PTR [rax],eax
   140006d94:	sub    DWORD PTR [rax],eax
   140006d96:	add    BYTE PTR [rax],al
   140006d99:	add    BYTE PTR [rdx],al
   140006d9b:	pop    rbx
   140006d9c:	adc    DWORD PTR [rdx+rax*1],edx
   140006d9f:	add    BYTE PTR [rdx],dl
   140006da1:	and    BYTE PTR [rdx],al
   140006da3:	add    BYTE PTR [rbx],bl
   140006da5:	add    BYTE PTR [rcx],al
   140006da7:	add    BYTE PTR [rcx],ch
   140006da9:	push   rsp
   140006daa:	(bad)  
   140006dab:	add    BYTE PTR [rax],al
   140006dad:	add    BYTE PTR [rdx],al
   140006daf:	pop    rbx
   140006db0:	adc    DWORD PTR [rax+rcx*1],ecx
   140006db3:	pop    rsp
   140006db4:	adc    DWORD PTR [rax],ecx
   140006db6:	or     BYTE PTR [rdx+rdx*1+0x8],bl
   140006dba:	and    eax,0x214115c
   140006dbf:	add    BYTE PTR [rdx],dl
   140006dc1:	and    BYTE PTR [rdx],al
   140006dc3:	add    BYTE PTR [rbx],bl
   140006dc5:	add    DWORD PTR [rdx],eax
   140006dc7:	add    BYTE PTR [rcx],ch
   140006dc9:	push   rsp
   140006dca:	cmp    BYTE PTR [rax],al
   140006dcc:	add    BYTE PTR [rax],al
   140006dce:	add    eax,0x214115b
   140006dd3:	add    BYTE PTR [rdx],dl
   140006dd5:	and    BYTE PTR [rdx],al
   140006dd7:	add    BYTE PTR [rbx],bl
   140006dd9:	add    BYTE PTR [rcx],al
   140006ddb:	add    BYTE PTR [rcx],ch
   140006ddd:	push   rsp
   140006dde:	rex.W add BYTE PTR [rax],al
   140006de1:	add    BYTE PTR [rdx],al
   140006de3:	pop    rbx
   140006de4:	add    BYTE PTR [rax],al
   140006de6:	add    BYTE PTR [rax],al
   140006de8:	and    DWORD PTR [rax],eax
   140006dea:	add    BYTE PTR [rax],al
   140006dec:	add    BYTE PTR [rax],al
   140006dee:	add    BYTE PTR [rax],al
   140006df0:	int3   
   140006df1:	ins    BYTE PTR es:[rdi],dx
   140006df2:	add    BYTE PTR [rax+0x1],al
   140006df5:	add    BYTE PTR [rax],al
   140006df7:	add    BYTE PTR [rcx],ah
   140006df9:	and    BYTE PTR [rax],al
   140006dfb:	add    BYTE PTR [rax],al
   140006dfd:	add    BYTE PTR [rax],al
   140006dff:	add    BYTE PTR [rax+0x140006e],dh
	...
   140006e0d:	add    BYTE PTR [rax],al
   140006e0f:	add    BYTE PTR [rax+0x0],al
   140006e12:	or     al,0x1
   140006e14:	sub    BYTE PTR [rax],al
   140006e16:	add    BYTE PTR [rax],al
   140006e18:	or     BYTE PTR [rax],al
   140006e1a:	add    BYTE PTR [rax],al
   140006e1c:	or     BYTE PTR [rax],al
   140006e1e:	add    BYTE PTR [rax],al
   140006e20:	add    BYTE PTR [rax],al
   140006e22:	add    BYTE PTR [rax],al
   140006e24:	add    eax,DWORD PTR [rax]
   140006e26:	or     BYTE PTR [rax],al
   140006e28:	jb     0x140006e2a
   140006e2a:	or     BYTE PTR [rax],al
   140006e2c:	add    BYTE PTR [rax],al
   140006e2e:	add    BYTE PTR [rax],al
   140006e30:	call   0x141406ea2
   140006e35:	add    BYTE PTR [rax],al
   140006e37:	add    BYTE PTR [rbx],cl
   140006e39:	add    BYTE PTR [rax],al
   140006e3b:	add    BYTE PTR [rax],dl
   140006e3d:	add    BYTE PTR [rax],al
   140006e3f:	add    al,cl
   140006e41:	ins    BYTE PTR es:[rdi],dx
   140006e42:	add    BYTE PTR [rax+0x1],al
   140006e45:	add    BYTE PTR [rax],al
   140006e47:	add    al,cl
   140006e49:	add    BYTE PTR [rax],al
   140006e4b:	add    BYTE PTR [rax],bl
   140006e4d:	add    BYTE PTR [rax],al
   140006e4f:	add    al,cl
   140006e51:	ins    BYTE PTR es:[rdi],dx
   140006e52:	add    BYTE PTR [rax+0x1],al
   140006e55:	add    BYTE PTR [rax],al
   140006e57:	add    al,dh
   140006e59:	add    BYTE PTR [rax],al
   140006e5b:	add    BYTE PTR [rax],ah
   140006e5d:	add    BYTE PTR [rax],al
   140006e5f:	add    BYTE PTR [rax],ah
   140006e61:	adc    al,0x0
   140006e63:	add    BYTE PTR [rax],al
   140006e65:	add    BYTE PTR [rax],al
   140006e67:	add    al,bh
   140006e69:	ins    DWORD PTR es:[rdi],dx
   140006e6a:	add    BYTE PTR [rax+0x1],al
   140006e6d:	add    BYTE PTR [rax],al
   140006e6f:	add    BYTE PTR [rax],al
   140006e71:	add    BYTE PTR [rax],al
   140006e73:	add    BYTE PTR [rax*1+0x7030006],al
   140006e7a:	add    BYTE PTR [rax],al
   140006e7c:	cmp    BYTE PTR [rax],al
   140006e7e:	add    BYTE PTR [rax],al
   140006e80:	and    DWORD PTR [rax],esp
   140006e82:	add    BYTE PTR [rax],al
   140006e84:	add    BYTE PTR [rax],al
   140006e86:	add    BYTE PTR [rax],al
   140006e88:	mov    al,0x6f
   140006e8a:	add    BYTE PTR [rax+0x1],al
   140006e8d:	add    BYTE PTR [rax],al
   140006e8f:	add    BYTE PTR [rcx],dl
   140006e91:	add    BYTE PTR [rax],al
   140006e93:	add    BYTE PTR [rax],al
   140006e95:	add    BYTE PTR [rax],al
   140006e97:	add    BYTE PTR [rbx*2+0x1ceb8a88],al
   140006e9e:	leave  
   140006e9f:	adc    DWORD PTR [rdi+0x2b0008e8],ebx
   140006ea5:	adc    BYTE PTR [rax+0x60],cl
   140006ea8:	add    al,BYTE PTR [rax]
   140006eaa:	add    BYTE PTR [rax],al
   140006eac:	add    BYTE PTR [rax],al
   140006eae:	add    BYTE PTR [rax],al
   140006eb0:	add    BYTE PTR [r8],al
   140006eb3:	add    BYTE PTR [rcx],al
   140006eb5:	add    BYTE PTR [rax],al
   140006eb7:	add    BYTE PTR [rax+0x71],al
   140006eba:	add    BYTE PTR [rax+0x1],al
   140006ebd:	add    BYTE PTR [rax],al
   140006ebf:	add    BYTE PTR [rcx],al
   140006ec1:	add    BYTE PTR [rax],al
   140006ec3:	add    BYTE PTR [rax],al
   140006ec5:	add    BYTE PTR [rax],al
   140006ec7:	add    BYTE PTR [rsp+rbp*2],bh
   140006eca:	add    BYTE PTR [rax+0x1],al
   140006ecd:	add    BYTE PTR [rax],al
   140006ecf:	add    BYTE PTR [rip+0x68000307],dh        # 0x1a80071dc
	...
   140006ee5:	add    BYTE PTR [rax],al
   140006ee7:	add    BYTE PTR [rax+0x71],dl
   140006eea:	add    BYTE PTR [rax+0x1],al
   140006eed:	add    BYTE PTR [rax],al
   140006eef:	add    BYTE PTR [rip+0x0],al        # 0x140006ef5
   140006ef5:	add    BYTE PTR [rax],al
   140006ef7:	add    BYTE PTR [rax+0x400],dl
   140006efd:	add    BYTE PTR [rax],al
   140006eff:	add    BYTE PTR [rax+rax*1],dl
   140006f02:	add    BYTE PTR [rax],al
   140006f04:	add    BYTE PTR [rax],al
   140006f06:	add    BYTE PTR [rax],al
   140006f08:	adc    al,0x0
   140006f0a:	add    BYTE PTR [rax],al
   140006f0c:	add    BYTE PTR [rax],al
   140006f0e:	add    BYTE PTR [rax],al
   140006f10:	adc    al,0x0
   140006f12:	add    BYTE PTR [rax],al
   140006f14:	add    BYTE PTR [rax],al
   140006f16:	add    BYTE PTR [rax],al
   140006f18:	adc    al,0x0
   140006f1a:	add    BYTE PTR [rax],al
   140006f1c:	add    BYTE PTR [rax],al
   140006f1e:	add    BYTE PTR [rax],al
   140006f20:	adc    al,0x0
   140006f22:	add    BYTE PTR [rax],al
   140006f24:	add    BYTE PTR [rax],al
   140006f26:	add    BYTE PTR [rax],al
   140006f28:	(bad)  
   140006f29:	add    BYTE PTR [rax],al
   140006f2b:	add    BYTE PTR [rax],al
   140006f2d:	add    BYTE PTR [rax],al
   140006f2f:	add    BYTE PTR [rax+rax*1],al
   140006f32:	add    BYTE PTR [rax],al
   140006f34:	add    BYTE PTR [rax],al
   140006f36:	add    BYTE PTR [rax],al
   140006f38:	add    al,0x0
   140006f3a:	add    BYTE PTR [rax],al
   140006f3c:	add    BYTE PTR [rax],al
   140006f3e:	add    BYTE PTR [rax],al
   140006f40:	add    eax,0x0
   140006f45:	add    BYTE PTR [rax],al
   140006f47:	add    BYTE PTR [rdi],al
   140006f49:	add    BYTE PTR [rax],al
   140006f4b:	add    BYTE PTR [rax],al
   140006f4d:	add    BYTE PTR [rax],al
   140006f4f:	add    BYTE PTR [rdi],al
   140006f51:	add    BYTE PTR [rax],al
   140006f53:	add    BYTE PTR [rax],al
   140006f55:	add    BYTE PTR [rax],al
   140006f57:	add    BYTE PTR [rip+0x0],al        # 0x140006f5d
   140006f5d:	add    BYTE PTR [rax],al
   140006f5f:	add    BYTE PTR [rax+0x400],dl
   140006f65:	add    BYTE PTR [rax],al
   140006f67:	add    BYTE PTR [rax+rax*1],dl
   140006f6a:	add    BYTE PTR [rax],al
   140006f6c:	add    BYTE PTR [rax],al
   140006f6e:	add    BYTE PTR [rax],al
   140006f70:	add    eax,0x0
   140006f75:	add    BYTE PTR [rax],al
   140006f77:	add    BYTE PTR [rip+0x0],al        # 0x140006f7d
   140006f7d:	add    BYTE PTR [rax],al
   140006f7f:	add    BYTE PTR [rbx+0x0],dl
   140006f85:	add    BYTE PTR [rax],al
   140006f87:	add    BYTE PTR [rax],dh
   140006f89:	add    eax,DWORD PTR [rax]
   140006f8b:	add    BYTE PTR [rax+rax*1],al
   140006f8e:	add    BYTE PTR [rax],al
   140006f90:	add    BYTE PTR [r8],al
   140006f93:	add    BYTE PTR [rcx],al
   140006f95:	add    BYTE PTR [rax],al
   140006f97:	add    BYTE PTR [rax],dh
   140006f99:	ins    BYTE PTR es:[rdi],dx
   140006f9a:	add    BYTE PTR [rax+0x1],al
   140006f9d:	add    BYTE PTR [rax],al
   140006f9f:	add    BYTE PTR [rcx],al
   140006fa1:	add    BYTE PTR [rax],al
   140006fa3:	add    BYTE PTR [rax],al
   140006fa5:	add    BYTE PTR [rax],al
   140006fa7:	add    BYTE PTR [rsp+rbp*2],bh
   140006faa:	add    BYTE PTR [rax+0x1],al
   140006fad:	add    BYTE PTR [rax],al
   140006faf:	add    BYTE PTR [rcx+0x0],al
   140006fb2:	add    BYTE PTR [rax],al
   140006fb4:	add    DWORD PTR [rax],eax
   140006fb6:	add    BYTE PTR [rax],al
   140006fb8:	shr    BYTE PTR [rax+rax*1+0x40],1
   140006fbc:	add    DWORD PTR [rax],eax
   140006fbe:	add    BYTE PTR [rax],al
   140006fc0:	add    DWORD PTR [rax],eax
   140006fc2:	add    BYTE PTR [rax],al
   140006fc4:	add    BYTE PTR [rax],al
   140006fc6:	add    BYTE PTR [rax],al
   140006fc8:	cmp    al,0x6c
   140006fca:	add    BYTE PTR [rax+0x1],al
   140006fcd:	add    BYTE PTR [rax],al
   140006fcf:	add    BYTE PTR [rax+0x0],al
   140006fd2:	rex.WRX add QWORD PTR [rax+0x0],r11
   140006fd6:	add    BYTE PTR [rax],al
   140006fd8:	sbb    BYTE PTR [rax],al
   140006fda:	add    BYTE PTR [rax],al
   140006fdc:	rex.W add BYTE PTR [rax],al
   140006fdf:	add    BYTE PTR [rax],al
   140006fe1:	add    BYTE PTR [rax],al
   140006fe3:	add    BYTE PTR [rcx],cl
   140006fe5:	add    BYTE PTR [rax],cl
   140006fe7:	add    BYTE PTR [rdx+0x0],dh
   140006fea:	or     BYTE PTR [rax],al
   140006fec:	add    BYTE PTR [rax],al
   140006fee:	add    BYTE PTR [rax],al
   140006ff0:	call   0x141407062
   140006ff5:	add    BYTE PTR [rax],al
   140006ff7:	add    BYTE PTR [rbx],cl
   140006ff9:	add    BYTE PTR [rax],al
   140006ffb:	add    BYTE PTR [rax],dl
   140006ffd:	add    BYTE PTR [rax],al
   140006fff:	add    al,cl
   140007001:	ins    BYTE PTR es:[rdi],dx
   140007002:	add    BYTE PTR [rax+0x1],al
   140007005:	add    BYTE PTR [rax],al
   140007007:	add    al,cl
   140007009:	add    BYTE PTR [rax],al
   14000700b:	add    BYTE PTR [rax],bl
   14000700d:	add    BYTE PTR [rax],al
   14000700f:	add    al,cl
   140007011:	ins    BYTE PTR es:[rdi],dx
   140007012:	add    BYTE PTR [rax+0x1],al
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    al,cl
   140007019:	add    BYTE PTR [rax],al
   14000701b:	add    BYTE PTR [rax],ah
   14000701d:	add    BYTE PTR [rax],al
   14000701f:	add    al,cl
   140007021:	ins    BYTE PTR es:[rdi],dx
   140007022:	add    BYTE PTR [rax+0x1],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    al,cl
   140007029:	add    BYTE PTR [rax],al
   14000702b:	add    BYTE PTR [rax],ch
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	add    BYTE PTR [rax],ah
   140007031:	jno    0x140007033
   140007033:	rex add DWORD PTR [rax],eax
   140007036:	add    BYTE PTR [rax],al
   140007038:	adc    eax,DWORD PTR [rax+0x300000]
   14000703e:	add    BYTE PTR [rax],al
   140007040:	enter  0x6c,0x40
   140007044:	add    DWORD PTR [rax],eax
   140007046:	add    BYTE PTR [rax],al
   140007048:	push   rax
   140007049:	add    DWORD PTR [rax],0x3800
   14000704f:	add    BYTE PTR [rax+0x6e],ah
   140007052:	add    BYTE PTR [rax+0x1],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    BYTE PTR [rbx],dl
   140007059:	add    BYTE PTR [rax],0x0
   14000705c:	add    BYTE PTR [rax],al
   14000705f:	add    al,cl
   140007061:	ins    BYTE PTR es:[rdi],dx
   140007062:	add    BYTE PTR [rax+0x1],al
   140007065:	add    BYTE PTR [rax],al
   140007067:	add    BYTE PTR [rax-0x7f],dl
   14000706a:	add    BYTE PTR [rax],al
   14000706c:	rex.W add BYTE PTR [rax],al
   14000706f:	add    al,cl
   140007071:	ins    BYTE PTR es:[rdi],dx
   140007072:	add    BYTE PTR [rax+0x1],al
   140007075:	add    BYTE PTR [rax],al
   140007077:	add    al,dh
   140007079:	add    BYTE PTR [rax],al
   14000707b:	add    BYTE PTR [rax+0x0],dl
   14000707e:	add    BYTE PTR [rax],al
   140007080:	add    al,0x5d
   140007082:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   140007088:	lahf   
   140007089:	call   0x1502b7096
   14000708e:	rex.W (bad) 
   140007090:	add    al,BYTE PTR [rax]
	...
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	add    ch,BYTE PTR [rdx+0x0]
   1400070a3:	rex add DWORD PTR [rax],eax
   1400070a6:	add    BYTE PTR [rax],al
   1400070a8:	xor    BYTE PTR [rcx+0x0],dh
   1400070ab:	rex add DWORD PTR [rax],eax
   1400070ae:	add    BYTE PTR [rax],al
   1400070b0:	loop   0x14000711e
   1400070b2:	add    BYTE PTR [rax+0x1],al
	...
   1400070cd:	add    BYTE PTR [rax],al
   1400070cf:	add    BYTE PTR [rbx],dh
   1400070d1:	add    eax,0xbeba7171
   1400070d6:	(bad)  
   1400070d7:	sbb    QWORD PTR [r9],0xffffffffffffffb5
   1400070db:	fucomi st,st(7)
   1400070dd:	pushf  
   1400070de:	int3   
   1400070df:	add    DWORD PTR ss:[rax],eax
	...
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	mov    al,0x69
   1400070fa:	add    BYTE PTR [rax+0x1],al
	...
   14000711d:	add    BYTE PTR [rax],al
   14000711f:	add    BYTE PTR [rax],ah
   140007121:	adc    al,0x0
   140007123:	add    BYTE PTR [rax],al
   140007125:	add    BYTE PTR [rax],al
   140007127:	add    BYTE PTR [rax+0x140006b],bh
   14000712d:	add    BYTE PTR [rax],al
   14000712f:	add    BYTE PTR [rax],al
   140007131:	add    BYTE PTR [rax+0x0],bh
   140007134:	int3   
   140007135:	add    ah,bh
   140007137:	add    BYTE PTR [rcx+rax*1],ch
	...
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    al,0x5
   140007146:	(bad)  
   140007147:	add    BYTE PTR [rbx],al
   140007149:	(bad)  
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	rex.W add BYTE PTR [rax],al
   14000714f:	add    BYTE PTR [rcx],ah
   140007151:	add    BYTE PTR [rax],al
   140007153:	add    BYTE PTR [rax],al
   140007155:	add    BYTE PTR [rax],al
   140007157:	add    BYTE PTR [rax+0x140006f],cl
   14000715d:	add    BYTE PTR [rax],al
   14000715f:	add    BYTE PTR [rcx],ah
   140007161:	add    BYTE PTR [rax],al
   140007163:	add    BYTE PTR [rax],al
   140007165:	add    BYTE PTR [rax],al
   140007167:	add    ah,cl
   140007169:	ins    BYTE PTR es:[rdi],dx
   14000716a:	add    BYTE PTR [rax+0x1],al
   14000716d:	add    BYTE PTR [rax],al
   14000716f:	add    BYTE PTR [rcx],ah
   140007171:	add    BYTE PTR [rax],al
   140007173:	add    BYTE PTR [rax],al
   140007175:	add    BYTE PTR [rax],al
   140007177:	add    ah,cl
   140007179:	ins    BYTE PTR es:[rdi],dx
   14000717a:	add    BYTE PTR [rax+0x1],al
   14000717d:	add    BYTE PTR [rax],al
   14000717f:	add    BYTE PTR [rcx],ah
   140007181:	add    BYTE PTR [rax],al
   140007183:	add    BYTE PTR [rax],al
   140007185:	add    BYTE PTR [rax],al
   140007187:	add    ah,cl
   140007189:	ins    BYTE PTR es:[rdi],dx
   14000718a:	add    BYTE PTR [rax+0x1],al
   14000718d:	add    BYTE PTR [rax],al
   14000718f:	add    BYTE PTR [rcx],ah
   140007191:	add    BYTE PTR [rax],al
   140007193:	add    BYTE PTR [rax],al
   140007195:	add    BYTE PTR [rax],al
   140007197:	add    ah,cl
   140007199:	ins    BYTE PTR es:[rdi],dx
   14000719a:	add    BYTE PTR [rax+0x1],al
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    BYTE PTR [rcx],ah
   1400071a1:	and    BYTE PTR [rax],al
   1400071a3:	add    BYTE PTR [rax],al
   1400071a5:	add    BYTE PTR [rax],al
   1400071a7:	add    BYTE PTR [rax+0x6b],bh
   1400071aa:	add    BYTE PTR [rax+0x1],al
   1400071ad:	add    BYTE PTR [rax],al
   1400071af:	add    BYTE PTR [rax+0x66],al
   1400071b2:	add    BYTE PTR [rax+0x1],al
   1400071b5:	add    BYTE PTR [rax],al
   1400071b7:	add    BYTE PTR [rdx],al
   1400071b9:	push   0x0
   1400071bb:	rex add DWORD PTR [rax],eax
   1400071be:	add    BYTE PTR [rax],al
   1400071c0:	xor    BYTE PTR [rcx+0x0],dh
   1400071c3:	rex add DWORD PTR [rax],eax
   1400071c6:	add    BYTE PTR [rax],al
   1400071c8:	cwde   
   1400071c9:	outs   dx,BYTE PTR ds:[rsi]
   1400071ca:	add    BYTE PTR [rax+0x1],al
   1400071cd:	add    BYTE PTR [rax],al
   1400071cf:	add    BYTE PTR [rdx],al
   1400071d1:	add    BYTE PTR [rax],al
   1400071d3:	add    BYTE PTR [rax],al
   1400071d5:	add    BYTE PTR [rax],al
   1400071d7:	add    BYTE PTR [rax+0x1400070],al
   1400071dd:	add    BYTE PTR [rax],al
   1400071df:	add    BYTE PTR [rax+0x0],al
   1400071e2:	outs   dx,BYTE PTR ds:[rsi]
   1400071e3:	add    ecx,DWORD PTR [rax+0x50000000]
   1400071e9:	add    BYTE PTR [rax],al
   1400071eb:	add    BYTE PTR [rax+0x0],cl
   1400071f1:	add    BYTE PTR [rax],al
   1400071f3:	add    BYTE PTR [rdi],cl
   1400071f5:	add    BYTE PTR [rax],cl
   1400071f7:	add    BYTE PTR [rdx+0x0],dh
   1400071fa:	or     BYTE PTR [rax],al
   1400071fc:	add    BYTE PTR [rax],al
   1400071fe:	add    BYTE PTR [rax],al
   140007200:	enter  0x6c,0x40
   140007204:	add    DWORD PTR [rax],eax
   140007206:	add    BYTE PTR [rax],al
   140007208:	enter  0x0,0x0
   14000720c:	adc    BYTE PTR [rax],al
   14000720e:	add    BYTE PTR [rax],al
   140007210:	shr    BYTE PTR [rsi+0x0],1
   140007213:	rex add DWORD PTR [rax],eax
   140007216:	add    BYTE PTR [rax],al
   140007218:	or     eax,DWORD PTR [rcx]
   14000721a:	add    BYTE PTR [rax],al
   14000721c:	sbb    BYTE PTR [rax],al
   14000721e:	add    BYTE PTR [rax],al
   140007220:	rex ins BYTE PTR es:[rdi],dx
   140007222:	add    BYTE PTR [rax+0x1],al
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    BYTE PTR [rbx],cl
   140007229:	add    DWORD PTR [rax],eax
   14000722b:	add    BYTE PTR [rax],ah
   14000722d:	add    BYTE PTR [rax],al
   14000722f:	add    al,cl
   140007231:	ins    BYTE PTR es:[rdi],dx
   140007232:	add    BYTE PTR [rax+0x1],al
   140007235:	add    BYTE PTR [rax],al
   140007237:	add    al,cl
   140007239:	add    BYTE PTR [rax],al
   14000723b:	add    BYTE PTR [rax],ch
   14000723d:	add    BYTE PTR [rax],al
   14000723f:	add    al,cl
   140007241:	ins    BYTE PTR es:[rdi],dx
   140007242:	add    BYTE PTR [rax+0x1],al
   140007245:	add    BYTE PTR [rax],al
   140007247:	add    al,cl
   140007249:	add    BYTE PTR [rax],al
   14000724b:	add    BYTE PTR [rax],dh
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    al,bl
   140007251:	push   0x14000
   140007256:	add    BYTE PTR [rax],al
   140007258:	or     eax,DWORD PTR [rax]
   14000725a:	add    BYTE PTR [rax],al
   14000725c:	cmp    BYTE PTR [rax],al
   14000725e:	add    BYTE PTR [rax],al
   140007260:	enter  0x6c,0x40
   140007264:	add    DWORD PTR [rax],eax
   140007266:	add    BYTE PTR [rax],al
   140007268:	enter  0x0,0x0
   14000726c:	add    BYTE PTR [rax],al
   14000726f:	add    al,cl
   140007271:	ins    BYTE PTR es:[rdi],dx
   140007272:	add    BYTE PTR [rax+0x1],al
   140007275:	add    BYTE PTR [rax],al
   140007277:	add    al,cl
   140007279:	add    BYTE PTR [rax],al
   14000727b:	add    BYTE PTR [rax+0x0],cl
   14000727e:	add    BYTE PTR [rax],al
   140007280:	enter  0x6c,0x40
   140007284:	add    DWORD PTR [rax],eax
   140007286:	add    BYTE PTR [rax],al
   140007288:	enter  0x0,0x0
   14000728c:	push   rax
   14000728d:	add    BYTE PTR [rax],al
   14000728f:	add    BYTE PTR [rax+0x140006b],dl
   140007295:	add    BYTE PTR [rax],al
   140007297:	add    BYTE PTR [rbx],dl
   140007299:	add    BYTE PTR [rax],0x0
   14000729c:	pop    rax
   14000729d:	add    BYTE PTR [rax],al
   14000729f:	add    al,cl
   1400072a1:	ins    BYTE PTR es:[rdi],dx
   1400072a2:	add    BYTE PTR [rax+0x1],al
   1400072a5:	add    BYTE PTR [rax],al
   1400072a7:	add    BYTE PTR [rax-0x7f],dl
   1400072aa:	add    BYTE PTR [rax],al
   1400072ac:	(bad)  
   1400072ad:	add    BYTE PTR [rax],al
   1400072af:	add    al,cl
   1400072b1:	ins    BYTE PTR es:[rdi],dx
   1400072b2:	add    BYTE PTR [rax+0x1],al
   1400072b5:	add    BYTE PTR [rax],al
   1400072b7:	add    BYTE PTR [rax-0x7f],dl
   1400072ba:	add    BYTE PTR [rax],al
   1400072bc:	push   0xffffffffc8000000
   1400072c1:	ins    BYTE PTR es:[rdi],dx
   1400072c2:	add    BYTE PTR [rax+0x1],al
   1400072c5:	add    BYTE PTR [rax],al
   1400072c7:	add    BYTE PTR [rax-0x7f],dl
   1400072ca:	add    BYTE PTR [rax],al
   1400072cc:	jo     0x1400072ce
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	enter  0x6c,0x40
   1400072d4:	add    DWORD PTR [rax],eax
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	pop    rax
   1400072d9:	add    DWORD PTR [rax],eax
   1400072db:	add    BYTE PTR [rax+0x0],bh
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	enter  0x6c,0x40
   1400072e4:	add    DWORD PTR [rax],eax
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	lock add BYTE PTR [rax],al
   1400072eb:	add    BYTE PTR [rax+0x35000000],al
   1400072f1:	add    BYTE PTR [rdx],dh
   1400072f3:	add    BYTE PTR [rbp+0x0],al
   1400072f6:	rex.RX add BYTE PTR [rcx],r14b
   1400072f9:	add    BYTE PTR [rbx],dh
   1400072fb:	add    BYTE PTR [rax],dh
   1400072fd:	add    BYTE PTR [rbx+0x0],al
   140007300:	sub    eax,0x38003000
   140007305:	add    BYTE PTR [rsi+0x0],al
   140007308:	add    BYTE PTR [rip+0x33003400],r13b        # 0x17300a70f
   14000730f:	add    BYTE PTR [rax],bh
   140007311:	add    BYTE PTR [rax],bh
   140007313:	add    BYTE PTR [rip+0x36003800],ch        # 0x17600ab19
   140007319:	add    BYTE PTR [rdx+0x0],al
   14000731c:	xor    eax,DWORD PTR [rax]
   14000731e:	sub    eax,0x45003600
   140007323:	add    BYTE PTR [rax+rax*1+0x46],al
   140007327:	add    BYTE PTR [rip+0x38003000],ah        # 0x17800a32d
   14000732d:	add    BYTE PTR [rax+0x0],bl
	...
   140007338:	outs   dx,BYTE PTR ds:[rsi]
   140007339:	add    BYTE PTR [rbx+0x0],ah
   14000733c:	(bad)  
   14000733d:	add    BYTE PTR [rax+rax*1+0x72],ch
   140007341:	add    BYTE PTR [rax+0x0],dh
   140007344:	movsxd eax,DWORD PTR [rax]
	...
   140007352:	add    BYTE PTR [rax],al
   140007354:	mov    edi,DWORD PTR [rcx]
   140007356:	lahf   
   140007357:	push   rbp
   140007358:	add    BYTE PTR [rax],al
   14000735a:	add    BYTE PTR [rax],al
   14000735c:	add    al,BYTE PTR [rax]
   14000735e:	add    BYTE PTR [rax],al
   140007360:	and    al,0x0
   140007362:	add    BYTE PTR [rax],al
   140007364:	push   rax
   140007365:	je     0x140007367
   140007367:	add    BYTE PTR [rax+0x5c],dl
   14000736a:	add    BYTE PTR [rax],al
   14000736c:	add    BYTE PTR [rax],al
   14000736e:	add    BYTE PTR [rax],al
   140007370:	mov    edi,DWORD PTR [rcx]
   140007372:	lahf   
   140007373:	push   rbp
   140007374:	add    BYTE PTR [rax],al
   140007376:	add    BYTE PTR [rax],al
   140007378:	or     eax,0xe0000000
   14000737d:	add    DWORD PTR [rax],eax
   14000737f:	add    BYTE PTR [rax-0x77ffff8c],cl
   140007385:	pop    rsp
	...
   1400073ae:	add    BYTE PTR [rax],al
   1400073b0:	movabs al,ds:0x0
	...
   140007405:	add    BYTE PTR [rax],al
   140007407:	add    BYTE PTR [rax],cl
   140007409:	nop
   14000740a:	add    BYTE PTR [rax+0x1],al
	...
   14000741d:	add    BYTE PTR [rax],al
   14000741f:	add    BYTE PTR [rax+0x64],cl
   140007422:	add    BYTE PTR [rax+0x1],al
   140007425:	add    BYTE PTR [rax],al
   140007427:	add    BYTE PTR [rax+0x64],dl
   14000742a:	add    BYTE PTR [rax+0x1],al
   14000742d:	add    BYTE PTR [rax],al
   14000742f:	add    BYTE PTR [rax+0x1400064],dl
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rip+0x0],dl        # 0x14000743d
   14000743d:	add    BYTE PTR [rax],al
   14000743f:	add    BYTE PTR [rax],al
   140007441:	xor    eax,0x0
	...
   14000744e:	add    BYTE PTR [rax],al
   140007450:	push   rdx
   140007451:	push   rbx
   140007452:	rex.R push rbx
   140007454:	(bad)  
   140007455:	sub    ebx,DWORD PTR [rdi]
   140007457:	mov    eax,0xb9499794
   14000745d:	xchg   esi,eax
   14000745e:	gs cs test al,0x58
   140007463:	(bad)  
   140007464:	add    DWORD PTR [rax],eax
   140007466:	add    BYTE PTR [rax],al
   140007468:	movsxd esi,DWORD PTR [rdx+0x65]
   14000746b:	fs ja  0x1400074d7
   14000746e:	jp     0x14000749e
   140007470:	jo     0x1400074d6
   140007472:	(bad)  
	...
   140007487:	add    BYTE PTR [rdi+0x43],al
   14000748a:	push   rsp
   14000748b:	rex.WR add BYTE PTR [rax],r10b
   14000748e:	add    BYTE PTR [rax],al
   140007490:	stos   BYTE PTR es:[rdi],al
   140007491:	rex.X add BYTE PTR [rax],al
   140007494:	cs je  0x1400074fc
   140007497:	js     0x14000750d
   140007499:	and    al,0x6d
   14000749b:	outs   dx,BYTE PTR ds:[rsi]
   14000749c:	add    BYTE PTR [rax],al
   14000749e:	add    BYTE PTR [rax],al
   1400074a0:	mov    al,0x52
   1400074a2:	add    BYTE PTR [rax],al
   1400074a4:	adc    al,BYTE PTR [rax]
   1400074a6:	add    BYTE PTR [rax],al
   1400074a8:	cs je  0x140007510
   1400074ab:	js     0x140007521
   1400074ad:	and    al,0x6d
   1400074af:	outs   dx,BYTE PTR ds:[rsi]
   1400074b0:	and    al,0x30
   1400074b2:	xor    BYTE PTR [rax],al
   1400074b4:	rcl    BYTE PTR [rdx+0x0],1
   1400074b7:	add    BYTE PTR [rax+0x2e000000],dl
   1400074bd:	je     0x140007524
   1400074bf:	js     0x140007535
   1400074c1:	and    al,0x78
   1400074c3:	add    BYTE PTR [rax],al
   1400074c5:	(bad)  
   1400074c6:	add    BYTE PTR [rax],al
   1400074c8:	rex.W add al,0x0
   1400074cb:	add    BYTE PTR [rsi],ch
   1400074cd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    BYTE PTR [rax+0x64],cl
   1400074da:	add    BYTE PTR [rax],al
   1400074dc:	adc    BYTE PTR [rax],al
   1400074de:	add    BYTE PTR [rax],al
   1400074e0:	xor    BYTE PTR cs:[rax],dh
   1400074e3:	movsxd esp,DWORD PTR [rsi+0x67]
   1400074e6:	add    BYTE PTR [rax],al
   1400074e8:	pop    rax
   1400074e9:	add    BYTE PTR fs:[rax],al
   1400074ec:	or     BYTE PTR [rax],al
   1400074ee:	add    BYTE PTR [rax],al
   1400074f0:	cs rex.XB push r10
   1400074f3:	push   rsp
   1400074f4:	and    al,0x58
   1400074f6:	rex.XB
   1400074f7:	add    BYTE PTR [r8],al
   1400074fa:	add    BYTE PTR [rax],al
   1400074fc:	(bad)  
   1400074fd:	add    BYTE PTR fs:[rax],al
   140007500:	or     BYTE PTR [rax],al
   140007502:	add    BYTE PTR [rax],al
   140007504:	cs rex.XB push r10
   140007507:	push   rsp
   140007508:	and    al,0x58
   14000750a:	rex.XB
   14000750b:	rex.B
   14000750c:	add    BYTE PTR [r8],al
   14000750f:	add    BYTE PTR [rax+0x64],ch
   140007512:	add    BYTE PTR [rax],al
   140007514:	or     BYTE PTR [rax],al
   140007516:	add    BYTE PTR [rax],al
   140007518:	cs rex.XB push r10
   14000751b:	push   rsp
   14000751c:	and    al,0x58
   14000751e:	rex.XB pop r10
   140007520:	add    BYTE PTR [rax],al
   140007522:	add    BYTE PTR [rax],al
   140007524:	jo     0x14000758a
   140007526:	add    BYTE PTR [rax],al
   140007528:	or     BYTE PTR [rax],al
   14000752a:	add    BYTE PTR [rax],al
   14000752c:	cs rex.XB push r10
   14000752f:	push   rsp
   140007530:	and    al,0x58
   140007532:	rex.WB
   140007533:	add    BYTE PTR [r8],al
   140007536:	add    BYTE PTR [rax],al
   140007538:	js     0x14000759e
   14000753a:	add    BYTE PTR [rax],al
   14000753c:	or     BYTE PTR [rax],al
   14000753e:	add    BYTE PTR [rax],al
   140007540:	cs rex.XB push r10
   140007543:	push   rsp
   140007544:	and    al,0x58
   140007546:	rex.WB
   140007547:	rex.B
   140007548:	add    BYTE PTR [r8],al
   14000754b:	add    BYTE PTR [rax+0x8000064],al
   140007551:	add    BYTE PTR [rax],al
   140007553:	add    BYTE PTR [rsi],ch
   140007555:	rex.XB push r10
   140007557:	push   rsp
   140007558:	and    al,0x58
   14000755a:	rex.WB pop r9
   14000755c:	add    BYTE PTR [rax],al
   14000755e:	add    BYTE PTR [rax],al
   140007560:	mov    BYTE PTR [rax+rax*1+0x0],ah
   140007564:	or     BYTE PTR [rax],al
   140007566:	add    BYTE PTR [rax],al
   140007568:	cs rex.XB push r10
   14000756b:	push   rsp
   14000756c:	and    al,0x58
   14000756e:	rex.WB pop r10
   140007570:	add    BYTE PTR [rax],al
   140007572:	add    BYTE PTR [rax],al
   140007574:	nop
   140007575:	add    BYTE PTR fs:[rax],al
   140007578:	push   rsp
   140007579:	add    BYTE PTR [rax],al
   14000757b:	add    BYTE PTR [rsi],ch
   14000757d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140007585:	add    BYTE PTR [rax],al
   140007587:	add    al,dh
   140007589:	add    BYTE PTR fs:[rax],al
   14000758c:	(bad)  
   14000758d:	sldt   WORD PTR [rax]
   140007590:	cs jb  0x1400075f7
   140007593:	(bad)  
   140007594:	je     0x1400075f7
   140007596:	add    BYTE PTR [rax],al
   140007598:	push   rax
   140007599:	je     0x14000759b
   14000759b:	add    BYTE PTR [rax],bl
   14000759d:	add    al,BYTE PTR [rax]
   14000759f:	add    BYTE PTR [rsi],ch
   1400075a1:	jb     0x140007607
   1400075a3:	(bad)  
   1400075a4:	je     0x140007607
   1400075a6:	and    al,0x7a
   1400075a8:	jp     0x140007624
   1400075aa:	fs (bad) 
   1400075ac:	add    BYTE PTR [eax],al
   1400075af:	add    BYTE PTR [rax+0x76],ch
   1400075b2:	add    BYTE PTR [rax],al
   1400075b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400075b5:	add    eax,DWORD PTR [rax]
   1400075b7:	add    BYTE PTR [rsi],ch
   1400075b9:	js     0x14000761f
   1400075bb:	(bad)  
   1400075bc:	je     0x14000761f
   1400075be:	add    BYTE PTR [rax],al
   1400075c0:	or     al,0x7a
   1400075c2:	add    BYTE PTR [rax],al
   1400075c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400075c5:	add    DWORD PTR [rax],eax
   1400075c7:	add    BYTE PTR [rsi],ch
   1400075c9:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   1400075d1:	add    BYTE PTR [rax],al
   1400075d3:	add    BYTE PTR [rax+0x1400007b],dh
   1400075d9:	add    BYTE PTR [rax],al
   1400075db:	add    BYTE PTR [rsi],ch
   1400075dd:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x332461
   1400075e5:	add    BYTE PTR [rax],al
   1400075e7:	add    al,cl
   1400075e9:	jnp    0x1400075eb
   1400075eb:	add    BYTE PTR [rax+0x4],cl
   1400075ee:	add    BYTE PTR [rax],al
   1400075f0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   1400075f9:	add    BYTE PTR [rax],al
   1400075fb:	add    BYTE PTR [rax],dl
   1400075fd:	add    BYTE PTR [rax],0x0
   140007600:	and    BYTE PTR [rdx],cl
   140007602:	add    BYTE PTR [rax],al
   140007604:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000760d:	add    BYTE PTR [rax],al
   14000760f:	add    BYTE PTR [rax],al
   140007611:	nop
   140007612:	add    BYTE PTR [rax],al
   140007614:	and    BYTE PTR [rax],al
   140007616:	add    BYTE PTR [rax],al
   140007618:	cs fs (bad) 
   14000761b:	je     0x14000767e
   14000761d:	add    BYTE PTR [rax],al
   14000761f:	add    BYTE PTR [rax],ah
   140007621:	nop
   140007622:	add    BYTE PTR [rax],al
   140007624:	clc    
   140007625:	adc    BYTE PTR [rax],al
   140007627:	add    BYTE PTR [rsi],ch
   140007629:	(bad)  
   14000762b:	jae    0x14000762d
   14000762d:	add    BYTE PTR [rax],al
   14000762f:	add    BYTE PTR [rax],al
   140007631:	mov    al,0x0
   140007633:	add    ah,dh
   140007635:	add    al,BYTE PTR [rax]
   140007637:	add    BYTE PTR [rsi],ch
   140007639:	jo     0x14000769f
   14000763b:	(bad)  
   14000763c:	je     0x14000769f
   14000763e:	add    BYTE PTR [rax],al
   140007640:	add    al,al
   140007642:	add    BYTE PTR [rax],al
   140007644:	loopne 0x140007647
   140007646:	add    BYTE PTR [rax],al
   140007648:	cs jb  0x1400076be
   14000764b:	jb     0x1400076b0
   14000764d:	and    al,0x30
   14000764f:	xor    DWORD PTR [rax],eax
   140007651:	add    BYTE PTR [rax],al
   140007653:	add    al,ah
   140007655:	rol    DWORD PTR [rax],0x0
   140007658:	adc    BYTE PTR [rax+rax*1],0x0
   14000765c:	cs jb  0x1400076d2
   14000765f:	jb     0x1400076c4
   140007661:	and    al,0x30
   140007663:	xor    al,BYTE PTR [rax]
   140007665:	add    BYTE PTR [rax],al
   140007667:	add    BYTE PTR [rcx],bl
   140007669:	sbb    eax,DWORD PTR [rbx]
   14000766b:	add    BYTE PTR [rcx],cl
   14000766d:	add    DWORD PTR [rdx],edx
   14000766f:	add    BYTE PTR [rdx],al
   140007671:	xor    BYTE PTR [rax],al
   140007673:	add    BYTE PTR [rax+0x51],bh
   140007676:	add    BYTE PTR [rax],al
   140007678:	add    BYTE PTR [rax],0x0
   14000767b:	add    BYTE PTR [rcx],al
   14000767d:	add    al,0x1
   14000767f:	add    BYTE PTR [rdx+rax*2],al
   140007682:	add    BYTE PTR [rax],al
   140007684:	sbb    DWORD PTR [rdi],ebx
   140007686:	add    eax,0x47340d00
   14000768b:	add    BYTE PTR [rip+0x6004401],cl        # 0x14600ba92
   140007691:	jo     0x140007693
   140007693:	add    BYTE PTR [rax],cl
   140007695:	push   rdx
   140007696:	add    BYTE PTR [rax],al
   140007698:	add    DWORD PTR [rax],eax
   14000769a:	add    BYTE PTR [rax],al
   14000769c:	jb     0x1400076af
   14000769e:	add    BYTE PTR [rax],al
   1400076a0:	lods   al,BYTE PTR ds:[rsi]
   1400076a1:	adc    DWORD PTR [rax],eax
   1400076a3:	add    dh,dl
   1400076a5:	push   rdx
   1400076a6:	add    BYTE PTR [rax],al
   1400076a8:	add    BYTE PTR [rax],al
   1400076aa:	add    BYTE PTR [rax],al
   1400076ac:	adc    al,BYTE PTR [rdx]
   1400076ae:	add    BYTE PTR [rax],al
   1400076b0:	add    DWORD PTR [rsi],eax
   1400076b2:	add    al,BYTE PTR [rax]
   1400076b4:	(bad)  
   1400076b5:	xor    al,BYTE PTR [rdx]
   1400076b7:	push   rax
   1400076b8:	add    DWORD PTR [rax+rcx*1],edx
   1400076bb:	add    BYTE PTR [rsp+riz*2],dl
   1400076be:	or     al,0x0
   1400076c0:	adc    al,0x54
   1400076c2:	or     eax,DWORD PTR [rax]
   1400076c4:	adc    al,0x34
   1400076c6:	or     al,BYTE PTR [rax]
   1400076c8:	adc    al,0x72
   1400076ca:	adc    BYTE PTR [rax+0x19],dh
   1400076cd:	and    al,0x7
   1400076cf:	add    BYTE PTR [rdx],dl
   1400076d1:	rex.WRB add BYTE PTR fs:[r10],r10b
   1400076d5:	xor    al,0x4b
   1400076d7:	add    BYTE PTR [rdx],dl
   1400076d9:	add    DWORD PTR [rax+0x0],ecx
   1400076dc:	or     esi,DWORD PTR [rax+0x0]
   1400076df:	add    BYTE PTR [rax+0x51],bh
   1400076e2:	add    BYTE PTR [rax],al
   1400076e4:	xor    BYTE PTR [rdx],al
   1400076e6:	add    BYTE PTR [rax],al
   1400076e8:	sbb    DWORD PTR [rsi],ebx
   1400076ea:	add    al,0x0
   1400076ec:	adc    BYTE PTR [rdx+rdx*1],dh
   1400076ef:	add    BYTE PTR [rax],dl
   1400076f1:	repnz (bad) 
   1400076f3:	push   rax
   1400076f4:	js     0x140007747
   1400076f6:	add    BYTE PTR [rax],al
   1400076f8:	jo     0x1400076fa
   1400076fa:	add    BYTE PTR [rax],al
   1400076fc:	sbb    DWORD PTR [rbx],esp
   1400076fe:	or     BYTE PTR [rax],al
   140007700:	adc    eax,0x9001101
   140007705:	lock (bad) 
   140007707:	loopne 0x14000770e
   140007709:	jo     0x14000770f
   14000770b:	(bad)  
   14000770c:	add    esi,DWORD PTR [rax]
   14000770e:	add    dl,BYTE PTR [rax+0x78]
   140007711:	push   rcx
   140007712:	add    BYTE PTR [rax],al
   140007714:	jo     0x140007716
   140007716:	add    BYTE PTR [rax],al
   140007718:	add    DWORD PTR [rcx+rcx*1],edx
   14000771b:	add    BYTE PTR [rdx+riz*8],dl
   14000771e:	or     eax,0x9e00bf0
   140007723:	rol    BYTE PTR [rdi],1
   140007725:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143607b9c
   14000772c:	add    dl,BYTE PTR [rax+0x0]
   14000772f:	add    BYTE PTR [rcx],al
   140007731:	or     al,BYTE PTR [rax+rax*1]
   140007734:	or     dh,BYTE PTR [rax+rcx*1]
   140007737:	add    BYTE PTR [rdx],cl
   140007739:	push   rdx
   14000773a:	(bad)  
   14000773b:	jo     0x14000773e
   14000773d:	clts   
   14000773f:	add    BYTE PTR [rdi],cl
   140007741:	or     eax,DWORD PTR fs:[rax]
   140007744:	sysenter 
   140007746:	or     al,BYTE PTR [rax]
   140007748:	(bad)  
   14000774a:	or     esi,DWORD PTR [rax+0x1]
   14000774d:	adc    al,0x8
   14000774f:	add    BYTE PTR [rsp+riz*2],dl
   140007752:	or     BYTE PTR [rax],al
   140007754:	adc    al,0x54
   140007756:	(bad)  
   140007757:	add    BYTE PTR [rsp+rsi*1],dl
   14000775a:	(bad)  
   14000775b:	add    BYTE PTR [rdx+rsi*1],dl
   14000775e:	adc    BYTE PTR [rax+0x19],dh
   140007761:	or     DWORD PTR cs:[rax],eax
   140007764:	sbb    eax,0x1d00a564
   140007769:	xor    al,0xa4
   14000776b:	add    BYTE PTR [rip+0xe009e01],bl        # 0x14e011572
   140007771:	lock or al,0x70
   140007774:	or     edx,DWORD PTR [rax+0x0]
   140007777:	add    BYTE PTR [rax+0x51],bh
   14000777a:	add    BYTE PTR [rax],al
   14000777c:	loopne 0x140007782
   14000777e:	add    BYTE PTR [rax],al
   140007780:	add    DWORD PTR [rdx],ecx
   140007782:	add    al,0x0
   140007784:	or     dh,BYTE PTR [rdx+rcx*1]
   140007787:	add    BYTE PTR [rdx],cl
   140007789:	jb     0x140007791
   14000778b:	jo     0x14000778e
   14000778d:	adc    eax,0x74150008
   140007792:	or     eax,0xc641500
   140007797:	add    BYTE PTR [rip+0x15000a34],dl        # 0x1550081d1
   14000779d:	jb     0x1400077b0
   14000779f:	loopne 0x1400077ba
   1400077a1:	sub    BYTE PTR [rdx],cl
   1400077a3:	add    BYTE PTR [rdx],bl
   1400077a5:	xor    al,0x19
   1400077a7:	add    BYTE PTR [rdx],bl
   1400077a9:	repnz adc al,dh
   1400077ac:	(bad)  
   1400077ad:	loopne 0x1400077bb
   1400077af:	ror    BYTE PTR [rdx],1
   1400077b1:	ror    BYTE PTR [rax],0x70
   1400077b4:	(bad)  
   1400077b5:	(bad)  
   1400077b6:	(bad)  
   1400077b7:	push   rax
   1400077b8:	js     0x14000780b
   1400077ba:	add    BYTE PTR [rax],al
   1400077bc:	jo     0x1400077be
   1400077be:	add    BYTE PTR [rax],al
   1400077c0:	add    DWORD PTR [rdi],ecx
   1400077c2:	(bad)  
   1400077c3:	add    BYTE PTR [rdi],cl
   1400077c5:	or     DWORD PTR fs:[rax],eax
   1400077c8:	sysenter 
   1400077ca:	or     BYTE PTR [rax],al
   1400077cc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400077cf:	jo     0x1400077d2
   1400077d1:	sbb    DWORD PTR [rdx],ecx
   1400077d3:	add    BYTE PTR [rcx],bl
   1400077d5:	je     0x1400077e4
   1400077d7:	add    BYTE PTR [rcx],bl
   1400077d9:	fs or  al,0x0
   1400077dc:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400077e0:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400077e3:	add    BYTE PTR [rcx],bl
   1400077e5:	jb     0x1400077fc
   1400077e7:	loopne 0x1400077ea
   1400077e9:	sbb    eax,0x741d000c
   1400077ee:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d008659
   1400077f5:	push   rsp
   1400077f6:	or     eax,0xc341d00
   1400077fb:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f09173
   140007801:	loopne 0x140007818
   140007803:	rcr    BYTE PTR [rcx],0x30
   140007806:	or     eax,DWORD PTR [rax]
   140007808:	(bad)  
   140007809:	xor    al,0x22
   14000780b:	add    DWORD PTR [rdi],ebx
   14000780d:	add    DWORD PTR [rax],ebx
   14000780f:	add    DWORD PTR [rax],edx
   140007811:	lock (bad) 
   140007813:	loopne 0x140007821
   140007815:	ror    BYTE PTR [rdx],1
   140007817:	ror    BYTE PTR [rax],0x70
   14000781a:	(bad)  
   14000781b:	(bad)  
   14000781c:	(bad)  
   14000781d:	push   rax
   14000781e:	add    BYTE PTR [rax],al
   140007820:	js     0x140007873
   140007822:	add    BYTE PTR [rax],al
   140007824:	mov    al,0x8
   140007826:	add    BYTE PTR [rax],al
   140007828:	sbb    DWORD PTR [rcx],ebp
   14000782a:	or     eax,DWORD PTR [rax]
   14000782c:	(bad)  
   14000782d:	xor    al,0x94
   14000782f:	add    BYTE PTR [rdi],dl
   140007831:	add    DWORD PTR [rdx+0xef01000],ecx
   140007837:	loopne 0x140007845
   140007839:	ror    BYTE PTR [rdx],1
   14000783b:	ror    BYTE PTR [rax],0x70
   14000783e:	(bad)  
   14000783f:	(bad)  
   140007840:	(bad)  
   140007841:	push   rax
   140007842:	add    BYTE PTR [rax],al
   140007844:	js     0x140007897
   140007846:	add    BYTE PTR [rax],al
   140007848:	add    al,0x0
   14000784b:	add    BYTE PTR [rcx],al
   14000784d:	adc    al,0x8
   14000784f:	add    BYTE PTR [rsp+riz*2],dl
   140007852:	or     al,BYTE PTR [rax]
   140007854:	adc    al,0x54
   140007856:	or     DWORD PTR [rax],eax
   140007858:	adc    al,0x34
   14000785a:	or     BYTE PTR [rax],al
   14000785c:	adc    al,0x52
   14000785e:	adc    BYTE PTR [rax+0x1],dh
   140007861:	adc    al,0x8
   140007863:	add    BYTE PTR [rsp+riz*2],dl
   140007866:	or     eax,0xc541400
   14000786b:	add    BYTE PTR [rsp+rsi*1],dl
   14000786e:	or     al,BYTE PTR [rax]
   140007870:	adc    al,0x72
   140007872:	adc    BYTE PTR [rax+0x1],dh
   140007875:	adc    cl,BYTE PTR [rax]
   140007877:	add    BYTE PTR [rdx],dl
   140007879:	mov    dl,0xb
   14000787b:	lock or eax,esp
   14000787e:	(bad)  
   14000787f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143607cf6
   140007886:	add    dl,BYTE PTR [rax+0x19]
   140007889:	xor    ecx,DWORD PTR [rbx]
   14000788b:	add    BYTE PTR [rdx],ah
   14000788d:	hlt    
   14000788e:	xor    eax,0x34742201
   140007893:	add    DWORD PTR [rdx],esp
   140007895:	xor    eax,DWORD PTR fs:[rcx]
   140007898:	and    dh,BYTE PTR [rdx+rsi*1]
   14000789b:	add    DWORD PTR [rdx],esp
   14000789d:	add    DWORD PTR [rax],esi
   14000789f:	add    DWORD PTR [rax+rdx*2],edx
   1400078a2:	add    BYTE PTR [rax],al
   1400078a4:	js     0x1400078f7
   1400078a6:	add    BYTE PTR [rax],al
   1400078a8:	js     0x1400078b3
   1400078aa:	add    BYTE PTR [rax],al
   1400078ac:	add    DWORD PTR [rdi],ecx
   1400078ae:	(bad)  
   1400078af:	add    BYTE PTR [rdi],cl
   1400078b1:	or     DWORD PTR fs:[rax],eax
   1400078b4:	sysenter 
   1400078b6:	or     BYTE PTR [rax],al
   1400078b8:	rdmsr  
   1400078ba:	or     esi,DWORD PTR [rax+0x1]
   1400078bd:	clts   
   1400078bf:	add    BYTE PTR [rdi],cl
   1400078c1:	fs (bad) 
   1400078c3:	add    BYTE PTR [rdi],cl
   1400078c5:	xor    al,0x6
   1400078c7:	add    BYTE PTR [rdi],cl
   1400078c9:	xor    cl,BYTE PTR [rbx]
   1400078cb:	jo     0x1400078ce
   1400078cd:	(bad)  
   1400078ce:	add    al,BYTE PTR [rax]
   1400078d0:	(bad)  
   1400078d1:	xor    al,BYTE PTR [rdx]
   1400078d3:	xor    BYTE PTR [rcx],cl
   1400078d5:	adc    BYTE PTR [rsi],al
   1400078d7:	add    BYTE PTR [rax],dl
   1400078d9:	fs or  eax,0xc341000
   1400078df:	add    BYTE PTR [rax],dl
   1400078e1:	xchg   edx,eax
   1400078e2:	or     al,0x70
   1400078e4:	rex.RX push rcx
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	add    DWORD PTR [rax],eax
   1400078ea:	add    BYTE PTR [rax],al
   1400078ec:	(bad)
   1400078ef:	add    ah,dh
   1400078f1:	add    BYTE PTR [r8],r8b
   1400078f4:	in     al,dx
   1400078f5:	push   rdx
   1400078f6:	add    BYTE PTR [rax],al
   1400078f8:	hlt    
   1400078f9:	add    BYTE PTR [r8],r8b
   1400078fc:	add    DWORD PTR [rsi],eax
   1400078fe:	add    al,BYTE PTR [rax]
   140007900:	(bad)  
   140007901:	jb     0x140007905
   140007903:	push   rax
   140007904:	or     DWORD PTR [rax],edx
   140007906:	(bad)  
   140007907:	add    BYTE PTR [rax],dl
   140007909:	fs or  eax,0xc341000
   14000790f:	add    BYTE PTR [rax],dl
   140007911:	xchg   edx,eax
   140007912:	or     al,0x70
   140007914:	rex.RX push rcx
   140007916:	add    BYTE PTR [rax],al
   140007918:	add    DWORD PTR [rax],eax
   14000791a:	add    BYTE PTR [rax],al
   14000791c:	jno    0x140007964
   14000791e:	add    BYTE PTR [rax],al
   140007920:	movabs al,ds:0xa0000052ec000046
   140007929:	rex.RX add BYTE PTR [rax],r8b
   14000792c:	add    DWORD PTR [rdx],edx
   14000792e:	add    eax,0xe421200
   140007933:	jo     0x140007942
   140007935:	(bad)  
   140007936:	or     al,0x50
   140007938:	or     esi,DWORD PTR [rax]
   14000793a:	add    BYTE PTR [rax],al
   14000793c:	sbb    DWORD PTR [rdx],esp
   14000793e:	(bad)  
   14000793f:	add    BYTE PTR [rsp+rsi*1],dl
   140007942:	and    al,0x0
   140007944:	adc    al,0x1
   140007946:	(bad)  
   140007947:	add    BYTE PTR [rax],cl
   140007949:	jo     0x140007952
   14000794b:	(bad)  
   14000794c:	(bad)  
   14000794d:	push   rax
   14000794e:	add    BYTE PTR [rax],al
   140007950:	js     0x1400079a3
   140007952:	add    BYTE PTR [rax],al
   140007954:	loopne 0x140007956
   140007956:	add    BYTE PTR [rax],al
   140007958:	add    DWORD PTR [rcx+rax*1],eax
   14000795b:	add    BYTE PTR [rdx+riz*2],al
   14000795e:	add    BYTE PTR [rax],al
   140007960:	or     DWORD PTR [rax],ebx
   140007962:	or     DWORD PTR [rax],eax
   140007964:	sbb    BYTE PTR [rdx+rbx*1+0x0],dh
   140007968:	sbb    BYTE PTR [rcx+rbx*1+0x0],ah
   14000796c:	sbb    BYTE PTR [rax+rbx*1],dh
   14000796f:	add    BYTE PTR [rax],bl
   140007971:	add    DWORD PTR [rsi],edx
   140007973:	add    BYTE PTR [rcx],dl
   140007975:	lock add BYTE PTR [rax],al
   140007978:	rex.RX push rcx
   14000797a:	add    BYTE PTR [rax],al
   14000797c:	add    DWORD PTR [rax],eax
   14000797e:	add    BYTE PTR [rax],al
   140007980:	xor    BYTE PTR [rdx+0x0],cl
   140007983:	add    BYTE PTR [rdi],dl
   140007985:	rex.WR add BYTE PTR [rax],r8b
   140007988:	(bad)  
   140007989:	push   rbx
   14000798a:	add    BYTE PTR [rax],al
   14000798c:	(bad)  
   14000798d:	rex.WR add BYTE PTR [rax],r8b
   140007990:	add    DWORD PTR [rax],eax
   140007992:	add    BYTE PTR [rax],al
   140007994:	add    DWORD PTR [rdx+rax*1],ecx
   140007997:	add    BYTE PTR [rcx+rax*1],cl
   14000799a:	adc    DWORD PTR [rax],eax
   14000799c:	or     DWORD PTR [rcx+rax*1],eax
   14000799f:	add    BYTE PTR [rdx+riz*1],al
   1400079a2:	add    BYTE PTR [rax],al
   1400079a4:	rex.RX push rcx
   1400079a6:	add    BYTE PTR [rax],al
   1400079a8:	add    DWORD PTR [rax],eax
   1400079aa:	add    BYTE PTR [rax],al
   1400079ac:	int3   
   1400079ad:	rex.WRX add BYTE PTR [rax],r8b
   1400079b0:	add    cl,BYTE PTR [rdi+0x0]
   1400079b3:	add    BYTE PTR [rcx],al
   1400079b5:	add    BYTE PTR [rax],al
   1400079b7:	add    BYTE PTR [rdx],al
   1400079b9:	rex.WRXB add BYTE PTR [r8],r8b
   1400079bc:	or     DWORD PTR [rdx],ecx
   1400079be:	add    al,0x0
   1400079c0:	or     dh,BYTE PTR [rsi+rax*1]
   1400079c3:	add    BYTE PTR [rdx],cl
   1400079c5:	xor    al,BYTE PTR [rsi]
   1400079c7:	jo     0x140007a0f
   1400079c9:	push   rcx
   1400079ca:	add    BYTE PTR [rax],al
   1400079cc:	add    DWORD PTR [rax],eax
   1400079ce:	add    BYTE PTR [rax],al
   1400079d0:	fisttp QWORD PTR [rdi+0x0]
   1400079d3:	add    BYTE PTR [rax],dl
   1400079d5:	push   rax
   1400079d6:	add    BYTE PTR [rax],al
   1400079d8:	rex push rbx
   1400079da:	add    BYTE PTR [rax],al
   1400079dc:	adc    BYTE PTR [rax+0x0],dl
   1400079df:	add    BYTE PTR [rcx],al
   1400079e1:	or     eax,0x340d0004
   1400079e6:	or     DWORD PTR [rax],eax
   1400079e8:	or     eax,0x500632
   1400079ed:	add    BYTE PTR [rax],al
   1400079ef:	add    BYTE PTR [rcx],al
   1400079f1:	add    BYTE PTR [rax],al
   1400079f3:	add    BYTE PTR [rcx],al
   1400079f5:	sbb    DWORD PTR [rdx],ecx
   1400079f7:	add    BYTE PTR [rcx],bl
   1400079f9:	je     0x140007a04
   1400079fb:	add    BYTE PTR [rcx],bl
   1400079fd:	or     BYTE PTR fs:[rax],al
   140007a00:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140007a04:	sbb    DWORD PTR [rsi+rax*1],esi
   140007a07:	add    BYTE PTR [rcx],bl
   140007a09:	xor    dl,BYTE PTR [rip+0x7bc8e0]        # 0x1407c42ef
	...
   140007a17:	add    BYTE PTR [rdx-0x80],ah
   140007a1a:	add    BYTE PTR [rax],al
   140007a1c:	add    BYTE PTR [rax+0x0],ah
   140007a1f:	add    BYTE PTR [rax+0x7c],dh
	...
   140007a2a:	add    BYTE PTR [rax],al
   140007a2c:	cli    
   140007a2d:	add    DWORD PTR [rax],0x60a800
   140007a33:	add    BYTE PTR [rax+0x7c],bl
	...
   140007a3e:	add    BYTE PTR [rax],al
   140007a40:	sub    al,0x82
   140007a42:	add    BYTE PTR [rax],al
   140007a44:	nop
   140007a45:	(bad)  
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	fdivr  DWORD PTR [rbp+0x0]
	...
   140007a53:	add    BYTE PTR [rsi],bl
   140007a55:	add    DWORD PTR [rax],0x0
   140007a58:	adc    BYTE PTR [rdx+0x0],ah
   140007a5b:	add    BYTE PTR [rax],al
   140007a5d:	jg     0x140007a5f
	...
   140007a67:	add    ah,bh
   140007a69:	add    DWORD PTR [rax],0x0
   140007a6c:	cmp    BYTE PTR [rbx+0x0],ah
   140007a6f:	add    BYTE PTR [rax],al
   140007a71:	add    BYTE PTR [rax],0x0
	...
   140007a7c:	(bad)  
   140007a7d:	test   DWORD PTR [rax],eax
   140007a7f:	add    BYTE PTR [rax],bh
   140007a81:	add    BYTE PTR fs:[rax],al
   140007a84:	movabs al,ds:0x7f
   140007a8d:	add    BYTE PTR [rax],al
   140007a8f:	add    al,ah
   140007a91:	test   DWORD PTR [rax],eax
   140007a93:	add    al,bl
   140007a95:	movsxd eax,DWORD PTR [rax]
   140007a97:	add    BYTE PTR [rax+0x7d],dh
	...
   140007aa2:	add    BYTE PTR [rax],al
   140007aa4:	out    dx,al
   140007aa5:	test   DWORD PTR [rax],eax
   140007aa7:	add    BYTE PTR [rax+0x40000061],ch
   140007aad:	jl     0x140007aaf
	...
   140007ab7:	add    dl,bh
   140007ab9:	test   DWORD PTR [rax],eax
   140007abb:	add    BYTE PTR [rax+0x60],bh
   140007abe:	add    BYTE PTR [rax],al
   140007ac0:	fdivr  DWORD PTR [rsi+0x0]
	...
   140007acb:	add    BYTE PTR [rsi],al
   140007acd:	xchg   BYTE PTR [rax],al
   140007acf:	add    BYTE PTR [rax],dl
   140007ad1:	movsxd eax,DWORD PTR [rax]
   140007ad3:	add    BYTE PTR [rax+0x7e],bh
	...
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	sub    BYTE PTR [rsi+0x62b00000],al
   140007ae6:	add    BYTE PTR [rax],al
   140007ae8:	mov    eax,0x7e
   140007aed:	add    BYTE PTR [rax],al
   140007aef:	add    BYTE PTR [rax],al
   140007af1:	add    BYTE PTR [rax],al
   140007af3:	add    BYTE PTR [rdx-0x7a],dl
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	lock (bad) 
   140007afa:	add    BYTE PTR [rax],al
   140007afc:	push   rax
   140007afd:	jle    0x140007aff
	...
   140007b07:	add    BYTE PTR [rax-0x7a],bh
   140007b0a:	add    BYTE PTR [rax],al
   140007b0c:	mov    BYTE PTR [rdx+0x0],ah
   140007b0f:	add    BYTE PTR [rax+0x7e],ch
	...
   140007b1a:	add    BYTE PTR [rax],al
   140007b1c:	movabs ds:0xa8000062a0000086,al
   140007b25:	jle    0x140007b27
	...
   140007b2f:	add    ah,cl
   140007b31:	xchg   BYTE PTR [rax],al
   140007b33:	add    al,ah
   140007b35:	(bad)  
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	call   0x140007bbb
   140007b3d:	add    BYTE PTR [rax],al
   140007b3f:	add    BYTE PTR [rax],al
   140007b41:	add    BYTE PTR [rax],al
   140007b43:	add    al,dh
   140007b45:	xchg   BYTE PTR [rax],al
   140007b47:	add    BYTE PTR [rax],ah
   140007b49:	movsxd eax,DWORD PTR [rax]
   140007b4b:	add    BYTE PTR [rax+0x7f],dh
   140007b51:	add    BYTE PTR [rax],al
   140007b53:	add    BYTE PTR [rax],al
   140007b55:	add    BYTE PTR [rax],al
   140007b57:	add    BYTE PTR [rdi+rax*4+0x63e80000],dh
   140007b5e:	add    BYTE PTR [rax],al
   140007b60:	adc    BYTE PTR [rax+rax*1+0x0],bh
	...
   140007b6c:	mov    DWORD PTR [rax],r8d
   140007b6f:	add    BYTE PTR [rax+0x60],cl
   140007b72:	add    BYTE PTR [rax],al
   140007b74:	sub    BYTE PTR [rax+rax*1+0x0],bh
	...
   140007b80:	jp     0x140007b0b
   140007b82:	add    BYTE PTR [rax],al
   140007b84:	(bad)  
   140007b85:	(bad)  
   140007b86:	add    BYTE PTR [rax],al
   140007b88:	pop    rax
   140007b89:	jge    0x140007b8b
	...
   140007b93:	add    BYTE PTR [rdx-0x6fffff77],bh
   140007b99:	(bad)  
   140007b9a:	add    BYTE PTR [rax],al
   140007b9c:	enter  0x7d,0x0
	...
   140007ba8:	loop   0x140007b33
   140007baa:	add    BYTE PTR [rax],al
   140007bac:	add    BYTE PTR [rdx+0x0],ah
	...
   140007bc7:	add    BYTE PTR [rax],dl
   140007bc9:	add    BYTE PTR [rax],0x0
   140007bcc:	add    BYTE PTR [rax],al
   140007bce:	add    BYTE PTR [rax],al
   140007bd0:	add    BYTE PTR es:[rax],0x0
   140007bd4:	add    BYTE PTR [rax],al
   140007bd6:	add    BYTE PTR [rax],al
   140007bd8:	cmp    BYTE PTR [rax+0x0],al
   140007bde:	add    BYTE PTR [rax],al
   140007be0:	push   rdx
   140007be1:	add    BYTE PTR [rax],0x0
   140007be4:	add    BYTE PTR [rax],al
   140007be6:	add    BYTE PTR [rax],al
   140007be8:	lods   al,BYTE PTR ds:[rsi]
   140007be9:	mov    BYTE PTR [rax],al
   140007beb:	add    BYTE PTR [rax],al
   140007bed:	add    BYTE PTR [rax],al
   140007bef:	add    dh,al
   140007bf1:	mov    BYTE PTR [rax],al
   140007bf3:	add    BYTE PTR [rax],al
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    BYTE PTR [rax+0x88],bl
   140007bfd:	add    BYTE PTR [rax],al
   140007bff:	add    dh,bl
   140007c01:	mov    BYTE PTR [rax],al
	...
   140007c0f:	add    BYTE PTR [rsi],dl
   140007c11:	mov    DWORD PTR [rax],eax
   140007c13:	add    BYTE PTR [rax],al
   140007c15:	add    BYTE PTR [rax],al
   140007c17:	add    BYTE PTR [rax],ch
   140007c19:	mov    DWORD PTR [rax],eax
	...
   140007c27:	add    BYTE PTR [rdx-0x77],dl
   140007c2a:	add    BYTE PTR [rax],al
   140007c2c:	add    BYTE PTR [rax],al
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	mov    WORD PTR [rax],ax
	...
   140007c3f:	add    BYTE PTR [rsp+rax*4+0x0],bh
   140007c43:	add    BYTE PTR [rax],al
   140007c45:	add    BYTE PTR [rax],al
   140007c47:	add    BYTE PTR [rax-0x7c],ch
	...
   140007c56:	add    BYTE PTR [rax],al
   140007c58:	or     BYTE PTR [rdx+0x0],al
   140007c5e:	add    BYTE PTR [rax],al
   140007c60:	(bad)  
   140007c61:	(bad)  
	...
   140007c6e:	add    BYTE PTR [rax],al
   140007c70:	ret    0x81
   140007c73:	add    BYTE PTR [rax],al
   140007c75:	add    BYTE PTR [rax],al
   140007c77:	add    BYTE PTR [rdx+0x81],bl
   140007c7d:	add    BYTE PTR [rax],al
   140007c7f:	add    dh,bl
   140007c81:	add    DWORD PTR [rax],0x0
   140007c87:	add    dl,ch
   140007c89:	add    DWORD PTR [rax],0x0
   140007c8f:	add    BYTE PTR [rsi+0x81],cl
   140007c95:	add    BYTE PTR [rax],al
   140007c97:	add    al,dl
   140007c99:	add    DWORD PTR [rax],0x0
   140007c9f:	add    BYTE PTR [rax+0x81],dh
   140007ca5:	add    BYTE PTR [rax],al
   140007ca7:	add    BYTE PTR [rcx+rax*4+0x0],dh
   140007cab:	add    BYTE PTR [rax],al
   140007cad:	add    BYTE PTR [rax],al
   140007caf:	add    BYTE PTR [rcx+rax*4+0x0],ah
   140007cb3:	add    BYTE PTR [rax],al
   140007cb5:	add    BYTE PTR [rax],al
   140007cb7:	add    BYTE PTR [rax],bh
   140007cb9:	add    DWORD PTR [rax],0x0
   140007cbf:	add    BYTE PTR [rdx+0x80],al
   140007cc5:	add    BYTE PTR [rax],al
   140007cc7:	add    BYTE PTR [rsi+0x80],dl
   140007ccd:	add    BYTE PTR [rax],al
   140007ccf:	add    dh,ch
   140007cd1:	mov    DWORD PTR [rax],eax
   140007cd3:	add    BYTE PTR [rax],al
   140007cd5:	add    BYTE PTR [rax],al
   140007cd7:	add    dl,bh
   140007cd9:	mov    DWORD PTR [rax],eax
   140007cdb:	add    BYTE PTR [rax],al
   140007cdd:	add    BYTE PTR [rax],al
   140007cdf:	add    BYTE PTR [rsi],al
   140007ce1:	mov    al,BYTE PTR [rax]
   140007ce3:	add    BYTE PTR [rax],al
   140007ce5:	add    BYTE PTR [rax],al
   140007ce7:	add    BYTE PTR [rdx+0x80],ah
   140007ced:	add    BYTE PTR [rax],al
   140007cef:	add    BYTE PTR [rax],ch
   140007cf1:	add    DWORD PTR [rax],0x0
   140007cf7:	add    BYTE PTR [rax],bl
   140007cf9:	add    DWORD PTR [rax],0x0
   140007cff:	add    BYTE PTR [rax],cl
   140007d01:	add    DWORD PTR [rax],0x0
   140007d07:	add    dl,dh
   140007d09:	add    BYTE PTR [rax],0x0
   140007d0c:	add    BYTE PTR [rax],al
   140007d0e:	add    BYTE PTR [rax],al
   140007d10:	push   rsi
   140007d11:	add    DWORD PTR [rax],0x0
   140007d17:	add    BYTE PTR [rax-0x80],dh
   140007d1a:	add    BYTE PTR [rax],al
   140007d1c:	add    BYTE PTR [rax],al
   140007d1e:	add    BYTE PTR [rax],al
   140007d20:	in     al,0x80
   140007d22:	add    BYTE PTR [rax],al
   140007d24:	add    BYTE PTR [rax],al
   140007d26:	add    BYTE PTR [rax],al
   140007d28:	fadd   DWORD PTR [rax+0x0]
   140007d2e:	add    BYTE PTR [rax],al
   140007d30:	mov    BYTE PTR [rax+0x0],0x0
   140007d37:	add    BYTE PTR [rax+0x80],bh
   140007d3d:	add    BYTE PTR [rax],al
   140007d3f:	add    BYTE PTR [rax+rax*4+0x0],ch
   140007d46:	add    BYTE PTR [rax],al
   140007d48:	add    QWORD PTR [rax],0x0
	...
   140007d57:	add    BYTE PTR [rax+0x89],cl
   140007d5d:	add    BYTE PTR [rax],al
   140007d5f:	add    BYTE PTR [rax+0x89],ah
	...
   140007d6d:	add    BYTE PTR [rax],al
   140007d6f:	add    BYTE PTR [rsi+0x88],al
   140007d75:	add    BYTE PTR [rax],al
   140007d77:	add    BYTE PTR [rax+rcx*4+0x0],dh
   140007d7b:	add    BYTE PTR [rax],al
   140007d7d:	add    BYTE PTR [rax],al
   140007d7f:	add    BYTE PTR [rax-0x78],bl
   140007d82:	add    BYTE PTR [rax],al
   140007d84:	add    BYTE PTR [rax],al
   140007d86:	add    BYTE PTR [rax],al
   140007d88:	(bad)  
   140007d89:	xchg   DWORD PTR [rax],eax
   140007d8b:	add    BYTE PTR [rax],al
   140007d8d:	add    BYTE PTR [rax],al
   140007d8f:	add    BYTE PTR [rax+rcx*4],bl
   140007d92:	add    BYTE PTR [rax],al
   140007d94:	add    BYTE PTR [rax],al
   140007d96:	add    BYTE PTR [rax],al
   140007d98:	add    al,0x88
   140007d9a:	add    BYTE PTR [rax],al
   140007d9c:	add    BYTE PTR [rax],al
   140007d9e:	add    BYTE PTR [rax],al
   140007da0:	rex.WR test BYTE PTR [rax],r8b
   140007da3:	add    BYTE PTR [rax],al
   140007da5:	add    BYTE PTR [rax],al
   140007da7:	add    BYTE PTR [rax+rcx*4],bh
   140007daa:	add    BYTE PTR [rax],al
   140007dac:	add    BYTE PTR [rax],al
   140007dae:	add    BYTE PTR [rax],al
   140007db0:	mov    esi,0x87
   140007db5:	add    BYTE PTR [rax],al
   140007db7:	add    ah,ch
   140007db9:	xchg   DWORD PTR [rax],eax
	...
   140007dc7:	add    ah,cl
   140007dc9:	mov    DWORD PTR [rax],eax
	...
   140007dd7:	add    BYTE PTR [rsi],dh
   140007dd9:	(bad)  
   140007dda:	add    BYTE PTR [rax],al
   140007ddc:	add    BYTE PTR [rax],al
   140007dde:	add    BYTE PTR [rax],al
   140007de0:	rex.W (bad) 
   140007de2:	add    BYTE PTR [rax],al
   140007de4:	add    BYTE PTR [rax],al
   140007de6:	add    BYTE PTR [rax],al
   140007de8:	pop    rax
   140007de9:	(bad)  
   140007dea:	add    BYTE PTR [rax],al
   140007dec:	add    BYTE PTR [rax],al
   140007dee:	add    BYTE PTR [rax],al
   140007df0:	push   0x82
   140007df5:	add    BYTE PTR [rax],al
   140007df7:	add    BYTE PTR [rdx-0x7e],bh
   140007dfa:	add    BYTE PTR [rax],al
   140007dfc:	add    BYTE PTR [rax],al
   140007dfe:	add    BYTE PTR [rax],al
   140007e00:	mov    es,WORD PTR [rdx+0x0]
   140007e06:	add    BYTE PTR [rax],al
   140007e08:	movabs ds:0xb000000000000082,al
   140007e11:	(bad)  
   140007e12:	add    BYTE PTR [rax],al
   140007e14:	add    BYTE PTR [rax],al
   140007e16:	add    BYTE PTR [rax],al
   140007e18:	mov    esi,0x82
   140007e1d:	add    BYTE PTR [rax],al
   140007e1f:	add    ah,dl
   140007e21:	(bad)  
   140007e22:	add    BYTE PTR [rax],al
   140007e24:	add    BYTE PTR [rax],al
   140007e26:	add    BYTE PTR [rax],al
   140007e28:	loop   0x140007dac
   140007e2a:	add    BYTE PTR [rax],al
   140007e2c:	add    BYTE PTR [rax],al
   140007e2e:	add    BYTE PTR [rax],al
   140007e30:	out    dx,al
   140007e31:	(bad)  
   140007e32:	add    BYTE PTR [rax],al
   140007e34:	add    BYTE PTR [rax],al
   140007e36:	add    BYTE PTR [rax],al
   140007e38:	(bad)  
   140007e39:	add    DWORD PTR [rax],0x0
   140007e3c:	add    BYTE PTR [rax],al
   140007e3e:	add    BYTE PTR [rax],al
   140007e40:	add    al,BYTE PTR [rbx+0x0]
	...
   140007e4e:	add    BYTE PTR [rax],al
   140007e50:	or     al,BYTE PTR [rbp+0x0]
   140007e56:	add    BYTE PTR [rax],al
   140007e58:	out    dx,al
   140007e59:	test   BYTE PTR [rax],al
	...
   140007e67:	add    BYTE PTR [rax-0x7b],dl
	...
   140007e76:	add    BYTE PTR [rax],al
   140007e78:	(bad)  
   140007e79:	test   BYTE PTR [rax],al
   140007e7b:	add    BYTE PTR [rax],al
   140007e7d:	add    BYTE PTR [rax],al
   140007e7f:	add    BYTE PTR [rsi-0x7b],bh
   140007e82:	add    BYTE PTR [rax],al
   140007e84:	add    BYTE PTR [rax],al
   140007e86:	add    BYTE PTR [rax],al
   140007e88:	xchg   esp,eax
   140007e89:	test   DWORD PTR [rax],eax
   140007e8b:	add    BYTE PTR [rax],al
   140007e8d:	add    BYTE PTR [rax],al
   140007e8f:	add    BYTE PTR [rax*4+0x0],bh
   140007e96:	add    BYTE PTR [rax],al
   140007e98:	sub    BYTE PTR [rbp+0x0],al
	...
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	test   DWORD PTR fs:[rax],eax
	...
   140007eb7:	add    BYTE PTR [rsp+rax*4+0x0],ch
   140007ebe:	add    BYTE PTR [rax],al
   140007ec0:	rol    BYTE PTR [rax+rax*1+0x0],0x0
   140007ec8:	fiadd  DWORD PTR [rax+rax*1+0x0]
	...
   140007ed7:	add    BYTE PTR [rdx+0x84],dl
	...
   140007ee5:	add    BYTE PTR [rax],al
   140007ee7:	add    ah,al
   140007ee9:	test   DWORD PTR [rax],eax
   140007eeb:	add    BYTE PTR [rax],al
   140007eed:	add    BYTE PTR [rax],al
   140007eef:	add    BYTE PTR [rdx+0x85],ch
	...
   140007efd:	add    BYTE PTR [rax],al
   140007eff:	add    BYTE PTR [rbx+rax*4+0x0],cl
   140007f03:	add    BYTE PTR [rax],al
   140007f05:	add    BYTE PTR [rax],al
   140007f07:	add    BYTE PTR [rdx-0x7d],bl
   140007f0a:	add    BYTE PTR [rax],al
   140007f0c:	add    BYTE PTR [rax],al
   140007f0e:	add    BYTE PTR [rax],al
   140007f10:	push   0xffffffffffffff83
   140007f12:	add    BYTE PTR [rax],al
   140007f14:	add    BYTE PTR [rax],al
   140007f16:	add    BYTE PTR [rax],al
   140007f18:	add    DWORD PTR ds:[rax],0x0
   140007f1c:	add    BYTE PTR [rax],al
   140007f1e:	add    BYTE PTR [rax],al
   140007f20:	test   BYTE PTR [rbx+0x0],al
   140007f26:	add    BYTE PTR [rax],al
   140007f28:	xor    al,0x83
   140007f2a:	add    BYTE PTR [rax],al
   140007f2c:	add    BYTE PTR [rax],al
   140007f2e:	add    BYTE PTR [rax],al
   140007f30:	sub    al,BYTE PTR [rbx+0x0]
   140007f36:	add    BYTE PTR [rax],al
   140007f38:	mov    WORD PTR [rbx+0x0],es
   140007f3e:	add    BYTE PTR [rax],al
   140007f40:	xchg   esi,eax
   140007f41:	add    DWORD PTR [rax],0x0
   140007f44:	add    BYTE PTR [rax],al
   140007f46:	add    BYTE PTR [rax],al
   140007f48:	sbb    BYTE PTR [rdx+0x0],cl
   140007f4e:	add    BYTE PTR [rax],al
   140007f50:	jl     0x140007ed5
   140007f52:	add    BYTE PTR [rax],al
   140007f54:	add    BYTE PTR [rax],al
   140007f56:	add    BYTE PTR [rax],al
   140007f58:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140007f59:	add    DWORD PTR [rax],0x0
   140007f5c:	add    BYTE PTR [rax],al
   140007f5e:	add    BYTE PTR [rax],al
   140007f60:	mov    eax,0x83
   140007f65:	add    BYTE PTR [rax],al
   140007f67:	add    BYTE PTR [rsi],ah
   140007f69:	mov    al,BYTE PTR [rax]
   140007f6b:	add    BYTE PTR [rax],al
   140007f6d:	add    BYTE PTR [rax],al
   140007f6f:	add    BYTE PTR [rax],cl
   140007f71:	test   BYTE PTR [rax],al
   140007f73:	add    BYTE PTR [rax],al
   140007f75:	add    BYTE PTR [rax],al
   140007f77:	add    ah,al
   140007f79:	add    DWORD PTR [rax],0x0
   140007f7c:	add    BYTE PTR [rax],al
   140007f7e:	add    BYTE PTR [rax],al
   140007f80:	fadd   QWORD PTR [rbx+0x0]
   140007f86:	add    BYTE PTR [rax],al
   140007f88:	lock add DWORD PTR [rax],0x0
   140007f8c:	add    BYTE PTR [rax],al
   140007f8e:	add    BYTE PTR [rax],al
   140007f90:	out    0x83,al
	...
   140007f9e:	add    BYTE PTR [rax],al
   140007fa0:	cmp    BYTE PTR [rax+rax*1+0x0],al
	...
   140007faf:	add    BYTE PTR [rsi+0x87],al
   140007fb5:	add    BYTE PTR [rax],al
   140007fb7:	add    BYTE PTR [rdx-0x79],bh
   140007fba:	add    BYTE PTR [rax],al
   140007fbc:	add    BYTE PTR [rax],al
   140007fbe:	add    BYTE PTR [rax],al
   140007fc0:	movabs al,ds:0x3200000000000087
   140007fc9:	xchg   DWORD PTR [rax],eax
   140007fcb:	add    BYTE PTR [rax],al
   140007fcd:	add    BYTE PTR [rax],al
   140007fcf:	add    BYTE PTR [rdi+rax*4],dl
   140007fd2:	add    BYTE PTR [rax],al
   140007fd4:	add    BYTE PTR [rax],al
   140007fd6:	add    BYTE PTR [rax],al
   140007fd8:	and    al,BYTE PTR [rdi+0x0]
   140007fde:	add    BYTE PTR [rax],al
   140007fe0:	rex.X xchg DWORD PTR [rax],eax
   140007fe3:	add    BYTE PTR [rax],al
   140007fe5:	add    BYTE PTR [rax],al
   140007fe7:	add    BYTE PTR [rdx-0x79],bl
   140007fea:	add    BYTE PTR [rax],al
   140007fec:	add    BYTE PTR [rax],al
   140007fee:	add    BYTE PTR [rax],al
   140007ff0:	xchg   DWORD PTR fs:[rax],eax
	...
   140007fff:	add    BYTE PTR [rsp+rax*4],bl
	...
   14000800e:	add    BYTE PTR [rax],al
   140008010:	outs   dx,DWORD PTR ds:[rsi]
   140008011:	add    DWORD PTR [rdi+0x65],eax
   140008014:	je     0x14000806a
   140008016:	outs   dx,DWORD PTR ds:[rsi]
   140008017:	imul   esp,DWORD PTR [rbp+0x6e],0x49
   14000801b:	outs   dx,BYTE PTR ds:[rsi]
   14000801c:	outs   dx,WORD PTR ds:[rsi]
   14000801e:	jb     0x14000808d
   140008020:	(bad)  
   140008021:	je     0x14000808c
   140008023:	outs   dx,DWORD PTR ds:[rsi]
   140008024:	outs   dx,BYTE PTR ds:[rsi]
   140008025:	add    dh,ch
   140008027:	add    BYTE PTR [rbp+rsi*2+0x70],al
   14000802b:	ins    BYTE PTR es:[rdi],dx
   14000802c:	imul   esp,DWORD PTR [rbx+0x61],0x6f546574
   140008033:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140008037:	add    BYTE PTR [rcx+0x706d4901],cl
   14000803d:	gs jb  0x1400080b3
   140008040:	outs   dx,DWORD PTR ds:[rsi]
   140008041:	outs   dx,BYTE PTR ds:[rsi]
   140008042:	(bad)  
   140008043:	je     0x1400080aa
   140008045:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140008047:	addr32 gs rex.WRXB outs dx,BYTE PTR fs:[esi]
   14000804d:	push   rbp
   14000804e:	jae    0x1400080b5
   140008050:	jb     0x140008052
   140008052:	mov    ecx,0x76655202
   140008057:	gs jb  0x1400080ce
   14000805a:	push   rsp
   14000805b:	outs   dx,DWORD PTR ds:[rsi]
   14000805c:	push   rbx
   14000805d:	gs ins BYTE PTR es:[rdi],dx
   14000805f:	data16 add BYTE PTR [rax],al
   140008062:	rex.B
   140008063:	rex.R push rsi
   140008065:	push   r8
   140008067:	xor    rsi,QWORD PTR [r10]
   14000806a:	cs fs ins BYTE PTR es:[rdi],dx
   14000806d:	ins    BYTE PTR es:[rdi],dx
   14000806e:	add    BYTE PTR [rax],al
   140008070:	rol    BYTE PTR [rcx],1
   140008072:	rex.RXB
   140008073:	gs je  0x1400080b9
   140008076:	outs   dx,DWORD PTR ds:[rsi]
   140008077:	ins    DWORD PTR es:[rdi],dx
   140008078:	ins    DWORD PTR es:[rdi],dx
   140008079:	(bad)  
   14000807a:	outs   dx,BYTE PTR ds:[rsi]
   14000807b:	imul   r13,QWORD PTR fs:[rsi+0x65],0x2eb0057
   140008084:	rex.RXB
   140008085:	gs je  0x1400080dc
   140008088:	gs ins DWORD PTR es:[rdi],dx
   14000808a:	jo     0x1400080d2
   14000808c:	imul   ebp,DWORD PTR [rbp+riz*2+0x4e],0x57656d61
   140008094:	add    BYTE PTR [rax],al
   140008096:	or     BYTE PTR [rip+0x45746553],al        # 0x18574e5ef
   14000809c:	jbe    0x140008103
   14000809e:	outs   dx,BYTE PTR ds:[rsi]
   14000809f:	je     0x1400080a1
   1400080a1:	add    BYTE PTR [rax+0x5],dh
   1400080a4:	push   rbx
   1400080a5:	ins    BYTE PTR es:[rdi],dx
   1400080a6:	gs gs jo 0x1400080ef
   1400080aa:	js     0x1400080ac
   1400080ac:	add    BYTE PTR [rsi],al
   1400080ae:	push   rdi
   1400080af:	jb     0x14000811a
   1400080b1:	je     0x140008118
   1400080b3:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x704f03f6
   1400080bc:	outs   dx,BYTE PTR gs:[rsi]
   1400080be:	push   rax
   1400080bf:	jb     0x140008130
   1400080c1:	movsxd esp,DWORD PTR [rbp+0x73]
   1400080c4:	jae    0x1400080c6
   1400080c6:	movabs al,ds:0x4d74616d726f4601
   1400080cf:	gs jae 0x140008145
   1400080d2:	(bad)  
   1400080d3:	addr32 gs push rdi
   1400080d6:	add    BYTE PTR [rax],al
   1400080d8:	pop    rsp
   1400080d9:	add    al,0x52
   1400080db:	gs (bad) 
   1400080dd:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x4300c000
   1400080e7:	jb     0x14000814e
   1400080e9:	(bad)  
   1400080ea:	je     0x140008151
   1400080ec:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x47028f00
   1400080f5:	gs je  0x140008147
   1400080f8:	jbe    0x14000815f
   1400080fa:	jb     0x140008168
   1400080fc:	(bad)  
   1400080fd:	jo     0x14000816f
   1400080ff:	gs fs push rdx
   140008102:	gs jae 0x14000817a
   140008105:	ins    BYTE PTR es:[rdi],dx
   140008106:	je     0x140008108
   140008108:	in     eax,dx
   140008109:	add    al,BYTE PTR [rdi+0x65]
   14000810c:	je     0x140008162
   14000810e:	gs ins DWORD PTR es:[rdi],dx
   140008110:	jo     0x140008162
   140008112:	(bad)  
   140008113:	je     0x14000817d
   140008115:	push   rdi
   140008116:	add    BYTE PTR [rax],al
   140008118:	add    r8b,BYTE PTR [rdi+0x65]
   14000811c:	je     0x140008164
   14000811e:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x45657a69
   140008126:	js     0x140008128
   140008128:	push   rdi
   140008129:	add    al,BYTE PTR [rdi+0x65]
   14000812c:	je     0x14000817a
   14000812e:	(bad)  
   14000812f:	jae    0x1400081a5
   140008131:	rex.RB jb 0x1400081a6
   140008134:	outs   dx,DWORD PTR ds:[rsi]
   140008135:	jb     0x140008137
   140008137:	add    BYTE PTR [rbx],ah
   140008139:	add    eax,0x4c746553
   14000813e:	(bad)  
   14000813f:	jae    0x1400081b5
   140008141:	rex.RB jb 0x1400081b6
   140008144:	outs   dx,DWORD PTR ds:[rsi]
   140008145:	jb     0x140008147
   140008147:	add    BYTE PTR [rbx],ch
   140008149:	add    eax,DWORD PTR [rdi+0x6c]
   14000814c:	outs   dx,DWORD PTR ds:[rsi]
   14000814d:	(bad)
   140008152:	gs add BYTE PTR gs:[rax],al
   140008156:	mov    ch,0x3
   140008158:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000815a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000815d:	rex.B ins BYTE PTR es:[rdi],dx
   14000815f:	ins    BYTE PTR es:[rdi],dx
   140008160:	outs   dx,DWORD PTR ds:[rsi]
   140008161:	movsxd eax,DWORD PTR [rax]
   140008163:	add    BYTE PTR [rax+rax*1+0x61657243],dh
   14000816a:	je     0x1400081d1
   14000816c:	rex.RB jbe 0x1400081d4
   14000816f:	outs   dx,BYTE PTR ds:[rsi]
   140008170:	je     0x1400081c9
   140008172:	add    BYTE PTR [rax],al
   140008174:	mov    BYTE PTR [rip+0x74696157],0x46        # 0x1b469e2d2
   14000817b:	outs   dx,DWORD PTR ds:[rsi]
   14000817c:	jb     0x1400081cb
   14000817e:	jne    0x1400081ec
   140008180:	je     0x1400081eb
   140008182:	jo     0x1400081f0
   140008184:	gs rex.WRXB (bad) 
   140008187:	push   0x65
   140008189:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   14000818d:	add    BYTE PTR [rax+0x0],ch
   140008190:	rex.XB (bad) 
   140008192:	outs   dx,BYTE PTR ds:[rsi]
   140008193:	movsxd esp,DWORD PTR [rbp+0x6c]
   140008196:	rex.WB outs dx,DWORD PTR ds:[rsi]
   140008198:	add    BYTE PTR [rax],al
   14000819a:	add    r9d,DWORD PTR [rax+0x65]
   14000819e:	(bad)  
   14000819f:	jo     0x1400081f4
   1400081a1:	gs je  0x1400081ed
   1400081a4:	outs   dx,BYTE PTR ds:[rsi]
   1400081a5:	outs   dx,WORD PTR ds:[rsi]
   1400081a7:	jb     0x140008216
   1400081a9:	(bad)  
   1400081aa:	je     0x140008215
   1400081ac:	outs   dx,DWORD PTR ds:[rsi]
   1400081ad:	outs   dx,BYTE PTR ds:[rsi]
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	and    eax,DWORD PTR [rcx]
   1400081b2:	rex.R jne 0x140008225
   1400081b5:	ins    BYTE PTR es:[rdi],dx
   1400081b6:	imul   esp,DWORD PTR [rbx+0x61],0x61486574
   1400081bd:	outs   dx,BYTE PTR ds:[rsi]
   1400081be:	fs ins BYTE PTR es:[rdi],dx
   1400081c0:	add    BYTE PTR gs:[rbp+0x0],bh
   1400081c4:	rex.XB ins BYTE PTR es:[rdi],dx
   1400081c6:	outs   dx,DWORD PTR ds:[rsi]
   1400081c7:	jae    0x14000822e
   1400081c9:	rex.W (bad) 
   1400081cb:	outs   dx,BYTE PTR ds:[rsi]
   1400081cc:	fs ins BYTE PTR es:[rdi],dx
   1400081ce:	add    BYTE PTR gs:[rdx],cl
   1400081d1:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   1400081d5:	gs je  0x14000823d
   1400081d8:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4c03b900
   1400081e1:	outs   dx,DWORD PTR ds:[rsi]
   1400081e2:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400081e5:	rex.RX jb 0x14000824d
   1400081e8:	gs add dh,ah
   1400081eb:	add    BYTE PTR [rbx+0x72],al
   1400081ee:	gs (bad) 
   1400081f0:	je     0x140008257
   1400081f2:	push   rsp
   1400081f3:	push   0x64616572
   1400081f8:	add    BYTE PTR [rax],al
   1400081fa:	rex.WXB
   1400081fb:	rex.RB push r10
   1400081fd:	rex.WRX
   1400081fe:	rex.RB
   1400081ff:	xor    r14,QWORD PTR [rdx]
   140008202:	cs fs ins BYTE PTR es:[rdi],dx
   140008205:	ins    BYTE PTR es:[rdi],dx
   140008206:	add    BYTE PTR [rax],al
   140008208:	pop    rcx
   140008209:	add    al,BYTE PTR [rdi+0x65]
   14000820c:	je     0x14000825d
   14000820e:	(bad)  
   14000820f:	push   0x65
   140008211:	movsxd esi,DWORD PTR [rdi+rdx*2+0x0]
   140008215:	add    BYTE PTR [rcx+0x0],al
   140008218:	rex.XB jb 0x140008280
   14000821b:	(bad)  
   14000821c:	je     0x140008283
   14000821e:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140008220:	outs   dx,BYTE PTR ds:[rsi]
   140008221:	je     0x14000826c
   140008223:	outs   dx,BYTE PTR ds:[rsi]
   140008224:	imul   esi,DWORD PTR fs:[rdx+0x65],0x577463
   14000822c:	rex.RXB
   14000822d:	rex.R
   14000822e:	xor    rsi,QWORD PTR [r10]
   140008231:	cs fs ins BYTE PTR es:[rdi],dx
   140008234:	ins    BYTE PTR es:[rdi],dx
   140008235:	add    BYTE PTR [rax+0x3],al
   140008238:	push   rbx
   140008239:	gs je  0x140008293
   14000823c:	imul   ebp,DWORD PTR [rsi+0x64],0x6554776f
   140008243:	js     0x1400082b9
   140008245:	push   rdi
   140008246:	add    BYTE PTR [rax],al
   140008248:	out    0x0,al
   14000824a:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000824c:	(bad)  
   14000824d:	(bad)  
   14000824e:	ins    BYTE PTR es:[rdi],dx
   14000824f:	gs push rdi
   140008251:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140008258:	loop   0x14000825c
   14000825a:	push   rbx
   14000825b:	outs   dx,BYTE PTR gs:[rsi]
   14000825d:	fs rex.WRB
   14000825f:	gs jae 0x1400082d5
   140008262:	(bad)  
   140008263:	addr32 gs push rdi
   140008266:	add    BYTE PTR [rax],al
   140008268:	rex.XB add DWORD PTR [r15+0x65],eax
   14000826c:	je     0x1400082b2
   14000826e:	ins    BYTE PTR es:[rdi],dx
   14000826f:	addr32 rex.WB je 0x1400082d8
   140008273:	ins    DWORD PTR es:[rdi],dx
   140008274:	push   rsp
   140008275:	gs js  0x1400082ec
   140008278:	push   rdi
   140008279:	add    BYTE PTR [rax],bh
   14000827b:	add    edx,DWORD PTR [rbx+0x65]
   14000827e:	je     0x1400082d7
   140008280:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   140008287:	outs   dx,BYTE PTR ds:[rsi]
   140008288:	addr32 push rax
   14000828a:	je     0x1400082fe
   14000828c:	push   rdi
   14000828d:	add    BYTE PTR [rbx+0x0],al
   140008290:	rex.XB push 0x526b6365
   140008296:	(bad)  
   140008297:	imul   ebp,DWORD PTR fs:[rdi+0x42],0x6f747475
   14000829f:	outs   dx,BYTE PTR ds:[rsi]
   1400082a0:	add    BYTE PTR [rax],al
   1400082a2:	add    r10,QWORD PTR [rbx+0x68]
   1400082a6:	outs   dx,DWORD PTR ds:[rsi]
   1400082a7:	ja     0x140008300
   1400082a9:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   1400082b0:	add    cl,BYTE PTR [r15+r13*2+0x61]
   1400082b5:	fs push rbx
   1400082b7:	je     0x14000832b
   1400082b9:	imul   ebp,DWORD PTR [rsi+0x67],0x2d90057
   1400082c0:	push   rbx
   1400082c1:	outs   dx,BYTE PTR gs:[rsi]
   1400082c3:	fs rex.R ins BYTE PTR es:[rdi],dx
   1400082c6:	addr32 rex.WB je 0x14000832f
   1400082ca:	ins    DWORD PTR es:[rdi],dx
   1400082cb:	rex.WRB
   1400082cc:	gs jae 0x140008342
   1400082cf:	(bad)  
   1400082d0:	addr32 gs push rdi
   1400082d3:	add    BYTE PTR [rax+0x1],al
   1400082d6:	rex.RXB
   1400082d7:	gs je  0x14000831e
   1400082da:	ins    BYTE PTR es:[rdi],dx
   1400082db:	addr32 rex.WB je 0x140008344
   1400082df:	ins    DWORD PTR es:[rdi],dx
   1400082e0:	add    BYTE PTR [rax],al
   1400082e2:	std    
   1400082e3:	add    dl,BYTE PTR [rbx+0x65]
   1400082e6:	je     0x14000832e
   1400082e8:	outs   dx,DWORD PTR ds:[rsi]
   1400082e9:	movsxd esi,DWORD PTR [rbp+0x73]
   1400082ec:	add    BYTE PTR [rax],al
   1400082ee:	int    0x1
   1400082f0:	rex.RXB
   1400082f1:	gs je  0x14000834b
   1400082f4:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   1400082fb:	outs   dx,BYTE PTR ds:[rsi]
   1400082fc:	addr32 push rax
   1400082fe:	je     0x140008372
   140008300:	push   rdi
   140008301:	add    BYTE PTR [rdi+0x1],bh
   140008304:	rex.RXB
   140008305:	gs je  0x140008358
   140008308:	(bad)  
   140008309:	jb     0x140008370
   14000830b:	outs   dx,BYTE PTR ds:[rsi]
   14000830c:	je     0x14000830e
   14000830e:	add    DWORD PTR [rdx],0x50
   140008311:	outs   dx,DWORD PTR ds:[rsi]
   140008312:	jae    0x140008388
   140008314:	rex.WRB
   140008315:	gs jae 0x14000838b
   140008318:	(bad)  
   140008319:	addr32 gs push rdi
   14000831c:	add    BYTE PTR [rax],al
   14000831e:	push   rbp
   14000831f:	push   rbx
   140008320:	rex.RB push r10
   140008322:	xor    esi,DWORD PTR [rdx]
   140008324:	cs fs ins BYTE PTR es:[rdi],dx
   140008327:	ins    BYTE PTR es:[rdi],dx
   140008328:	add    BYTE PTR [rax],al
   14000832a:	fld    QWORD PTR [rbx+rsi*2]
   14000832d:	ja     0x1400083a2
   14000832f:	movsxd esp,DWORD PTR [rcx+0x6e]
   140008332:	data16 add BYTE PTR [rbx],cl
   140008335:	add    eax,0x6e736377
   14000833a:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000833d:	add    BYTE PTR [rbp+0x0],dl
   140008340:	pop    rdi
   140008341:	pop    rax
   140008342:	movsxd esi,DWORD PTR [rax+0x74]
   140008345:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000834e:	pop    rdi
   14000834f:	(bad)  
   140008350:	ins    DWORD PTR es:[rdi],dx
   140008351:	jae    0x1400083ba
   140008353:	pop    rdi
   140008354:	gs js  0x1400083c0
   140008357:	je     0x140008359
   140008359:	add    BYTE PTR [rdi+0x0],bh
   14000835c:	pop    rdi
   14000835d:	pop    rdi
   14000835e:	addr32 gs je 0x1400083cf
   140008362:	(bad)  
   140008363:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000836a:	mov    es,WORD PTR [rax]
   14000836c:	pop    rdi
   14000836d:	pop    rdi
   14000836e:	jae    0x1400083d5
   140008370:	je     0x1400083d1
   140008372:	(bad)  
   140008373:	jo     0x1400083e5
   140008375:	pop    rdi
   140008376:	je     0x1400083f1
   140008378:	jo     0x1400083df
   14000837a:	add    BYTE PTR [rax],al
   14000837c:	xor    al,BYTE PTR [riz*2+0x746978]
   140008383:	add    BYTE PTR [rsi],cl
   140008385:	add    DWORD PTR [rdi+0x65],ebx
   140008388:	js     0x1400083f3
   14000838a:	je     0x14000838c
   14000838c:	rol    DWORD PTR [rax],0x5f
   14000838f:	movsxd esp,DWORD PTR [rbp+0x78]
   140008392:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   14000839a:	jae    0x140008409
   14000839c:	(bad)
   1400083a1:	add    BYTE PTR fs:[rax],al
   1400083a4:	nop
   1400083a5:	add    BYTE PTR [rdi+0x5f],bl
   1400083a8:	jae    0x14000840f
   1400083aa:	je     0x140008421
   1400083ac:	jae    0x140008413
   1400083ae:	jb     0x14000841d
   1400083b0:	(bad)  
   1400083b1:	je     0x14000841b
   1400083b3:	gs jb  0x140008428
   1400083b6:	add    BYTE PTR [rax],al
   1400083b8:	jge    0x1400083bb
   1400083ba:	pop    rdi
   1400083bb:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400083c2:	ins    DWORD PTR es:[rdi],dx
   1400083c3:	add    BYTE PTR [rdi+0x0],dl
   1400083c6:	pop    rdi
   1400083c7:	pop    rdi
   1400083c8:	rex.XB pop r15
   1400083ca:	jae    0x14000843c
   1400083cc:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400083d0:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400083d7:	ins    BYTE PTR es:[rdi],dx
   1400083d8:	gs jb  0x1400083db
   1400083db:	add    BYTE PTR [rdx+0x63615f00],ah
   1400083e1:	ins    DWORD PTR es:[rdi],dx
   1400083e2:	fs ins BYTE PTR es:[rdi],dx
   1400083e4:	outs   dx,BYTE PTR ds:[rsi]
   1400083e5:	add    BYTE PTR [rdi],ah
   1400083e7:	add    DWORD PTR [rdi+0x66],ebx
   1400083ea:	ins    DWORD PTR es:[rdi],dx
   1400083eb:	outs   dx,DWORD PTR ds:[rsi]
   1400083ec:	fs add BYTE PTR gs:[rax],al
   1400083f0:	rol    BYTE PTR [rax],cl
   1400083f2:	pop    rdi
   1400083f3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400083f6:	ins    DWORD PTR es:[rdi],dx
   1400083f7:	outs   dx,DWORD PTR ds:[rsi]
   1400083f8:	fs add BYTE PTR gs:[rax],al
   1400083fc:	ins    DWORD PTR es:[rdi],dx
   1400083fd:	jae    0x140008475
   1400083ff:	movsxd esi,DWORD PTR [rdx+0x74]
   140008402:	cs fs ins BYTE PTR es:[rdi],dx
   140008405:	ins    BYTE PTR es:[rdi],dx
   140008406:	add    BYTE PTR [rax],al
   140008408:	(bad)  
   140008409:	add    BYTE PTR [rdi],bh
   14000840b:	je     0x140008472
   14000840d:	jb     0x14000847c
   14000840f:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140008416:	pop    rcx
   140008417:	pop    r8
   140008419:	pop    rax
   14000841a:	pop    rdx
   14000841b:	add    BYTE PTR [rdx],ah
   14000841d:	add    BYTE PTR [rsi+0x65],cl
   140008420:	je     0x140008478
   140008422:	(bad)  
   140008423:	ins    BYTE PTR es:[rdi],dx
   140008424:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x73615065
   14000842c:	jae    0x1400084a5
   14000842e:	outs   dx,DWORD PTR ds:[rsi]
   14000842f:	jb     0x140008495
   140008431:	push   rax
   140008432:	outs   dx,DWORD PTR ds:[rsi]
   140008433:	ins    BYTE PTR es:[rdi],dx
   140008434:	imul   esp,DWORD PTR [rbx+0x79],0x4e000100
   14000843b:	gs je  0x14000847f
   14000843e:	jo     0x1400084a9
   140008440:	rex.X jne 0x1400084a9
   140008443:	data16 gs jb 0x14000848d
   140008447:	jb     0x1400084ae
   140008449:	add    BYTE PTR gs:[rax],al
   14000844c:	add    DWORD PTR [edx+0x70],edx
   140008450:	movsxd eax,DWORD PTR [rcx+0x73]
   140008453:	jns    0x1400084c3
   140008455:	movsxd ecx,DWORD PTR [rcx+0x6e]
   140008458:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008460:	rex.W (bad) 
   140008462:	outs   dx,BYTE PTR ds:[rsi]
   140008463:	fs ins BYTE PTR es:[rdi],dx
   140008465:	add    BYTE PTR gs:[rax],al
   140008468:	ret    
   140008469:	add    BYTE PTR [rbx+0x72],al
   14000846c:	jns    0x1400084de
   14000846e:	je     0x1400084c0
   140008470:	jb     0x1400084e1
   140008472:	je     0x1400084d9
   140008474:	movsxd esi,DWORD PTR [rsp+rax*2+0x61]
   140008478:	je     0x1400084db
   14000847a:	add    BYTE PTR [rax],al
   14000847c:	loope  0x14000847e
   14000847e:	rex.XB jb 0x1400084fa
   140008481:	jo     0x1400084f7
   140008483:	push   rbp
   140008484:	outs   dx,BYTE PTR ds:[rsi]
   140008485:	jo     0x1400084f9
   140008487:	outs   dx,DWORD PTR ds:[rsi]
   140008488:	je     0x1400084ef
   14000848a:	movsxd esi,DWORD PTR [rsp+rax*2+0x61]
   14000848e:	je     0x1400084f1
   140008490:	add    BYTE PTR [rax],al
   140008492:	sub    eax,0x656c5300
   140008497:	gs jo  0x14000849a
   14000849a:	and    BYTE PTR [rax],al
   14000849c:	rex.RXB
   14000849d:	gs je  0x1400084f3
   1400084a0:	je     0x140008503
   1400084a2:	jb     0x140008518
   1400084a4:	jne    0x140008516
   1400084a6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400084a8:	outs   dx,WORD PTR ds:[rsi]
   1400084aa:	push   rdi
   1400084ab:	add    BYTE PTR [rdx],al
   1400084ad:	add    BYTE PTR [rdx+0x74],dl
   1400084b0:	ins    BYTE PTR es:[rdi],dx
   1400084b1:	rex.XB (bad) 
   1400084b3:	jo     0x140008529
   1400084b5:	jne    0x140008529
   1400084b7:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400084ba:	outs   dx,BYTE PTR ds:[rsi]
   1400084bb:	je     0x140008522
   1400084bd:	js     0x140008533
   1400084bf:	add    BYTE PTR [rcx],cl
   1400084c1:	add    BYTE PTR [rdx+0x74],dl
   1400084c4:	ins    BYTE PTR es:[rdi],dx
   1400084c5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400084c7:	outs   dx,DWORD PTR ds:[rsi]
   1400084c8:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400084cc:	jne    0x14000853c
   1400084ce:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400084d2:	outs   dx,BYTE PTR ds:[rsi]
   1400084d3:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400084d5:	je     0x140008549
   1400084d7:	jns    0x1400084d9
   1400084d9:	add    BYTE PTR [rdi],cl
   1400084db:	add    BYTE PTR [rdx+0x74],dl
   1400084de:	ins    BYTE PTR es:[rdi],dx
   1400084df:	push   rsi
   1400084e0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400084e7:	outs   dx,BYTE PTR ds:[rsi]
   1400084e8:	ja     0x140008553
   1400084ea:	outs   dx,BYTE PTR ds:[rsi]
   1400084eb:	add    BYTE PTR fs:[rax],al
   1400084ee:	adc    DWORD PTR [rax],eax
   1400084f0:	push   rbp
   1400084f1:	outs   dx,BYTE PTR ds:[rsi]
   1400084f2:	push   0x6c646e61
   1400084f7:	gs fs rex.RB js 0x14000855f
   1400084fc:	gs jo  0x140008573
   1400084ff:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008506:	gs jb  0x140008509
   140008509:	add    BYTE PTR [rdi],cl
   14000850b:	add    BYTE PTR [rbx+0x65],dl
   14000850e:	je     0x140008565
   140008510:	outs   dx,BYTE PTR ds:[rsi]
   140008511:	push   0x6c646e61
   140008516:	gs fs rex.RB js 0x14000857e
   14000851b:	gs jo  0x140008592
   14000851e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008525:	gs jb  0x140008528
   140008528:	or     al,0x0
   14000852a:	rex.RXB
   14000852b:	gs je  0x140008571
   14000852e:	jne    0x1400085a2
   140008530:	jb     0x140008597
   140008532:	outs   dx,BYTE PTR ds:[rsi]
   140008533:	je     0x140008585
   140008535:	jb     0x1400085a6
   140008537:	movsxd esp,DWORD PTR [rbp+0x73]
   14000853a:	jae    0x14000853c
   14000853c:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140008541:	ins    DWORD PTR es:[rdi],dx
   140008542:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140008549:	outs   dx,DWORD PTR ds:[rsi]
   14000854a:	movsxd esp,DWORD PTR [rbp+0x73]
   14000854d:	jae    0x14000854f
   14000854f:	add    BYTE PTR [rbx],dl
   140008551:	add    BYTE PTR [rdi+0x65],al
   140008554:	je     0x1400085a3
   140008556:	outs   dx,DWORD PTR ds:[rsi]
   140008557:	fs jne 0x1400085c6
   14000855a:	gs rex.W (bad) 
   14000855d:	outs   dx,BYTE PTR ds:[rsi]
   14000855e:	fs ins BYTE PTR es:[rdi],dx
   140008560:	gs push rdi
   140008562:	add    BYTE PTR [rax],al
   140008564:	add    BYTE PTR [rax],al
   140008566:	push   rcx
   140008567:	jne    0x1400085ce
   140008569:	jb     0x1400085e4
   14000856b:	push   rax
   14000856c:	gs jb  0x1400085d5
   14000856f:	outs   dx,DWORD PTR ds:[rsi]
   140008570:	jb     0x1400085df
   140008572:	(bad)  
   140008573:	outs   dx,BYTE PTR ds:[rsi]
   140008574:	movsxd esp,DWORD PTR [rbp+0x43]
   140008577:	outs   dx,DWORD PTR ds:[rsi]
   140008578:	jne    0x1400085e8
   14000857a:	je     0x1400085e1
   14000857c:	jb     0x14000857e
   14000857e:	or     eax,0x74654700
   140008583:	rex.XB jne 0x1400085f8
   140008586:	jb     0x1400085ed
   140008588:	outs   dx,BYTE PTR ds:[rsi]
   140008589:	je     0x1400085db
   14000858b:	jb     0x1400085fc
   14000858d:	movsxd esp,DWORD PTR [rbp+0x73]
   140008590:	jae    0x1400085db
   140008592:	add    BYTE PTR fs:[rcx],dl
   140008595:	add    BYTE PTR [rdi+0x65],al
   140008598:	je     0x1400085dd
   14000859a:	jne    0x14000860e
   14000859c:	jb     0x140008603
   14000859e:	outs   dx,BYTE PTR ds:[rsi]
   14000859f:	je     0x1400085f5
   1400085a1:	push   0x64616572
   1400085a6:	rex.WB
   1400085a7:	add    BYTE PTR fs:[rax],al
   1400085aa:	adc    al,0x0
   1400085ac:	rex.RXB
   1400085ad:	gs je  0x140008603
   1400085b0:	jns    0x140008625
   1400085b2:	je     0x140008619
   1400085b4:	ins    DWORD PTR es:[rdi],dx
   1400085b5:	push   rsp
   1400085b6:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   1400085bd:	ins    BYTE PTR es:[rdi],dx
   1400085be:	gs push rsp
   1400085c0:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   1400085c7:	gs je  0x14000861e
   1400085ca:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   1400085d1:	je     0x1400085d3
   1400085d3:	add    BYTE PTR [rbx+0x61],dh
   1400085d6:	ins    DWORD PTR es:[rdi],dx
   1400085d7:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x2e]
   1400085db:	fs ins BYTE PTR es:[rdi],dx
   1400085dd:	ins    BYTE PTR es:[rdi],dx
   1400085de:	add    BYTE PTR [rax],al
   1400085e0:	outs   dx,BYTE PTR ds:[rsi]
   1400085e1:	gs je  0x140008659
   1400085e4:	je     0x14000864f
   1400085e6:	ins    BYTE PTR es:[rdi],dx
   1400085e7:	jae    0x140008617
   1400085e9:	fs ins BYTE PTR es:[rdi],dx
   1400085eb:	ins    BYTE PTR es:[rdi],dx
   1400085ec:	add    BYTE PTR [rax],al
   1400085ee:	push   rdx
   1400085ef:	push   rax
   1400085f0:	rex.XB push r10
   1400085f2:	push   rsp
   1400085f3:	xor    al,0x2e
   1400085f5:	fs ins BYTE PTR es:[rdi],dx
   1400085f7:	ins    BYTE PTR es:[rdi],dx
   1400085f8:	add    BYTE PTR [rax],al
   1400085fa:	rex.XB push r10
   1400085fc:	pop    rcx
   1400085fd:	push   rax
   1400085fe:	push   rsp
   1400085ff:	xor    esi,DWORD PTR [rdx]
   140008601:	cs fs ins BYTE PTR es:[rdi],dx
   140008604:	ins    BYTE PTR es:[rdi],dx
   140008605:	add    BYTE PTR [rcx+0x70],ah
   140008608:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df97f
   140008612:	outs   dx,DWORD PTR ds:[rsi]
   140008613:	jb     0x14000867a
   140008615:	sub    eax,0x636e7973
   14000861a:	push   0x2d316c2d
   14000861f:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac64b455
   140008625:	ins    BYTE PTR es:[rdi],dx
   140008626:	add    BYTE PTR [rax],al
   140008628:	(bad)  
   140008629:	jo     0x140008694
   14000862b:	sub    eax,0x772d736d
   140008630:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140008637:	sub    eax,0x636f7270
   14000863c:	gs jae 0x1400086b2
   14000863f:	je     0x1400086a9
   140008641:	jb     0x1400086a8
   140008643:	(bad)  
   140008644:	fs jae 0x140008674
   140008647:	ins    BYTE PTR es:[rdi],dx
   140008648:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32b37f
   14000864e:	fs ins BYTE PTR es:[rdi],dx
   140008650:	ins    BYTE PTR es:[rdi],dx
   140008651:	add    BYTE PTR [rcx+0x70],ah
   140008654:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df9cb
   14000865e:	outs   dx,DWORD PTR ds:[rsi]
   14000865f:	jb     0x1400086c6
   140008661:	sub    eax,0x736c7472
   140008666:	jne    0x1400086d8
   140008668:	jo     0x1400086d9
   14000866a:	jb     0x1400086e0
   14000866c:	sub    eax,0x322d316c
   140008671:	sub    eax,0x6c642e30
   140008676:	ins    BYTE PTR es:[rdi],dx
   140008677:	add    BYTE PTR [rcx+0x70],ah
   14000867a:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72df9f1
   140008684:	outs   dx,DWORD PTR ds:[rsi]
   140008685:	jb     0x1400086ec
   140008687:	sub    eax,0x6f727265
   14000868c:	jb     0x1400086f6
   14000868e:	(bad)  
   14000868f:	outs   dx,BYTE PTR ds:[rsi]
   140008690:	fs ins BYTE PTR es:[rdi],dx
   140008692:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140008699:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64b4d0
   14000869f:	ins    BYTE PTR es:[rdi],dx
   1400086a0:	add    BYTE PTR [rax],al
   1400086a2:	(bad)  
   1400086a3:	jo     0x14000870e
   1400086a5:	sub    eax,0x772d736d
   1400086aa:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400086b1:	sub    eax,0x7262696c
   1400086b6:	(bad)  
   1400086b7:	jb     0x140008732
   1400086b9:	ins    BYTE PTR es:[rdi],dx
   1400086ba:	outs   dx,DWORD PTR ds:[rsi]
   1400086bb:	(bad)  
   1400086bc:	fs gs jb 0x1400086ed
   1400086c0:	ins    BYTE PTR es:[rdi],dx
   1400086c1:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30b3f9
   1400086c7:	fs ins BYTE PTR es:[rdi],dx
   1400086c9:	ins    BYTE PTR es:[rdi],dx
   1400086ca:	add    BYTE PTR [rax],al
   1400086cc:	(bad)  
   1400086cd:	jo     0x140008738
   1400086cf:	sub    eax,0x772d736d
   1400086d4:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400086db:	sub    eax,0x666f7270
   1400086e0:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   1400086e8:	sub    eax,0x6c642e30
   1400086ed:	ins    BYTE PTR es:[rdi],dx
   1400086ee:	add    BYTE PTR [rax],al
   1400086f0:	(bad)  
   1400086f1:	jo     0x14000875c
   1400086f3:	sub    eax,0x772d736d
   1400086f8:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   1400086ff:	sub    eax,0x69737973
   140008704:	outs   dx,BYTE PTR ds:[rsi]
   140008705:	outs   dx,WORD PTR ds:[rsi]
   140008707:	sub    eax,0x322d316c
   14000870c:	sub    eax,0x6c642e31
   140008711:	ins    BYTE PTR es:[rdi],dx
   140008712:	add    BYTE PTR [rax],al
   140008714:	out    0x5,al
   140008716:	push   rsp
   140008717:	jo     0x14000875a
   140008719:	ins    BYTE PTR es:[rdi],dx
   14000871a:	ins    BYTE PTR es:[rdi],dx
   14000871b:	outs   dx,DWORD PTR ds:[rsi]
   14000871c:	movsxd edx,DWORD PTR [rdi+0x61]
   14000871f:	imul   esi,DWORD PTR [rax+rax*1+0x1b],0x57705406
   140008727:	(bad)  
   140008728:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x69615772
   140008730:	je     0x140008732
   140008732:	add    eax,0x52705406
   140008737:	gs ins BYTE PTR es:[rdi],dx
   140008739:	gs (bad) 
   14000873b:	jae    0x1400087a2
   14000873d:	push   rdi
   14000873e:	(bad)  
   14000873f:	imul   esi,DWORD PTR [rax+rax*1-0x76],0x6c745204
   140008747:	rex.WRX je 0x14000879d
   14000874a:	je     0x1400087ad
   14000874c:	je     0x1400087c3
   14000874e:	jae    0x1400087a4
   140008750:	outs   dx,DWORD PTR ds:[rsi]
   140008751:	rex.R outs dx,DWORD PTR ds:[rsi]
   140008753:	jae    0x14000879a
   140008755:	jb     0x1400087c9
   140008757:	outs   dx,DWORD PTR ds:[rsi]
   140008758:	jb     0x14000875a
   14000875a:	out    dx,al
   14000875b:	add    BYTE PTR [rsi+0x74],cl
   14000875e:	rex.XB ins BYTE PTR es:[rdi],dx
   140008760:	outs   dx,DWORD PTR ds:[rsi]
   140008761:	jae    0x1400087c8
   140008763:	add    BYTE PTR [rsi+0x4f744e01],cl
   140008769:	jo     0x1400087d0
   14000876b:	outs   dx,BYTE PTR ds:[rsi]
   14000876c:	push   rax
   14000876d:	jb     0x1400087de
   14000876f:	movsxd esp,DWORD PTR [rbp+0x73]
   140008772:	jae    0x1400087c8
   140008774:	outs   dx,DWORD PTR ds:[rsi]
   140008775:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   140008779:	add    BYTE PTR [rcx],dl
   14000877b:	(bad)  
   14000877c:	push   rsp
   14000877d:	jo     0x1400087d2
   14000877f:	gs je  0x1400087d9
   140008782:	(bad)  
   140008783:	imul   esi,DWORD PTR [rax+rax*1-0x3f],0x41744e00
   14000878b:	fs push 0x75
   14000878e:	jae    0x140008804
   140008790:	push   rax
   140008791:	jb     0x1400087fc
   140008793:	jbe    0x1400087fe
   140008795:	ins    BYTE PTR es:[rdi],dx
   140008796:	gs addr32 gs jae 0x1400087ef
   14000879b:	outs   dx,DWORD PTR ds:[rsi]
   14000879c:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400087a0:	movabs eax,ds:0x6976697250744e01
   1400087a9:	ins    BYTE PTR es:[rdi],dx
   1400087aa:	gs addr32 gs rex.XB push 0x6b6365
   1400087b3:	add    BYTE PTR [rsi+0x74],ch
   1400087b6:	fs ins BYTE PTR es:[rdi],dx
   1400087b8:	ins    BYTE PTR es:[rdi],dx
   1400087b9:	cs fs ins BYTE PTR es:[rdi],dx
   1400087bc:	ins    BYTE PTR es:[rdi],dx
   1400087bd:	add    BYTE PTR [rcx+rax*1+0x52],ah
   1400087c1:	jo     0x140008826
   1400087c3:	rex.B jae 0x14000883f
   1400087c6:	outs   dx,BYTE PTR ds:[rsi]
   1400087c7:	movsxd eax,DWORD PTR [rbx+0x61]
   1400087ca:	outs   dx,BYTE PTR ds:[rsi]
   1400087cb:	movsxd esp,DWORD PTR [rbp+0x6c]
   1400087ce:	rex.XB (bad) 
   1400087d0:	ins    BYTE PTR es:[rdi],dx
   1400087d1:	ins    BYTE PTR es:[rdi],dx
   1400087d2:	add    BYTE PTR [rax],al
   1400087d4:	add    DWORD PTR gs:[rdx+0x70],edx
   1400087d8:	movsxd eax,DWORD PTR [rcx+0x73]
   1400087db:	jns    0x14000884b
   1400087dd:	movsxd eax,DWORD PTR [rbx+0x6f]
   1400087e0:	ins    DWORD PTR es:[rdi],dx
   1400087e1:	jo     0x14000884f
   1400087e3:	gs je  0x14000884b
   1400087e6:	rex.XB (bad) 
   1400087e8:	ins    BYTE PTR es:[rdi],dx
   1400087e9:	ins    BYTE PTR es:[rdi],dx
   1400087ea:	add    BYTE PTR [rax],al
   1400087ec:	lea    eax,[rax]
   1400087ee:	rex.WRX
   1400087ef:	fs jb  0x140008828
   1400087f2:	xor    al,0x41
   1400087f4:	jae    0x14000886f
   1400087f6:	outs   dx,BYTE PTR ds:[rsi]
   1400087f7:	movsxd eax,DWORD PTR [rbx+0x6c]
   1400087fa:	imul   esp,DWORD PTR [rbp+0x6e],0x6c614374
   140008801:	ins    BYTE PTR es:[rdi],dx
   140008802:	add    BYTE PTR [rax],al
   140008804:	add    BYTE PTR cs:[rcx+0x5f],cl
   140008808:	push   rdx
   140008809:	jo     0x14000886e
   14000880b:	rex.RB js 0x140008871
   14000880e:	gs jo  0x140008885
   140008811:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140008818:	gs jb  0x14000881b
   14000881b:	add    BYTE PTR [rdi+0x1],ch
   14000881e:	push   rdx
   14000881f:	jo     0x140008884
   140008821:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x46676e69
   140008829:	jb     0x14000889a
   14000882b:	ins    DWORD PTR es:[rdi],dx
   14000882c:	push   rbx
   14000882d:	je     0x1400088a1
   14000882f:	imul   ebp,DWORD PTR [rsi+0x67],0x646e6942
   140008836:	imul   ebp,DWORD PTR [rsi+0x67],0x8000057
   14000883d:	add    dl,BYTE PTR [rdx+0x70]
   140008840:	movsxd edx,DWORD PTR [rbx+0x74]
   140008843:	jb     0x1400088ae
   140008845:	outs   dx,BYTE PTR ds:[rsi]
   140008846:	rex.X imul ebp,DWORD PTR [esi+0x64],0x43676e69
   14000884f:	outs   dx,DWORD PTR ds:[rsi]
   140008850:	ins    DWORD PTR es:[rdi],dx
   140008851:	jo     0x1400088c2
   140008853:	jae    0x1400088ba
   140008855:	push   rdi
   140008856:	add    BYTE PTR [rax],al
   140008858:	jle    0x14000885b
   14000885a:	push   rdx
   14000885b:	jo     0x1400088c0
   14000885d:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x53676e69
   140008865:	gs je  0x1400088a9
   140008868:	jne    0x1400088de
   14000886a:	push   0x6f666e49
   14000886f:	rex.RB js 0x1400088c9
   140008872:	add    BYTE PTR [rax],al
   140008874:	ins    DWORD PTR es:[rdi],dx
   140008875:	add    DWORD PTR [rdx+0x70],edx
   140008878:	movsxd eax,DWORD PTR [rdx+0x69]
   14000887b:	outs   dx,BYTE PTR ds:[rsi]
   14000887c:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x65657246
   140008884:	add    BYTE PTR [rax],al
   140008886:	or     al,0x2
   140008888:	push   rdx
   140008889:	jo     0x1400088ee
   14000888b:	push   rbx
   14000888c:	je     0x140008900
   14000888e:	imul   ebp,DWORD PTR [rsi+0x67],0x65657246
   140008895:	push   rdi
   140008896:	add    BYTE PTR [rax],al
   140008898:	mov    edi,0x65724300
   14000889d:	fs jo  0x1400088e5
   1400088a0:	outs   dx,BYTE PTR ds:[rsi]
   1400088a1:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400088a4:	gs push rbx
   1400088a6:	movsxd esi,DWORD PTR gs:[rdx+0x65]
   1400088aa:	je     0x1400088ac
   1400088ac:	mov    cl,0x0
   1400088ae:	rex.XB jb 0x140008916
   1400088b1:	fs push rdx
   1400088b3:	gs jae 0x14000892a
   1400088b6:	outs   dx,DWORD PTR ds:[rsi]
   1400088b7:	jb     0x14000891e
   1400088b9:	rex.XB jb 0x140008921
   1400088bc:	fs outs dx,BYTE PTR gs:[rsi]
   1400088bf:	je     0x14000892a
   1400088c1:	(bad)  
   1400088c2:	ins    BYTE PTR es:[rdi],dx
   1400088c3:	jae    0x1400088c5
   1400088c5:	add    BYTE PTR [rbx+0x65724300],dl
   1400088cb:	fs rex.X (bad) 
   1400088ce:	movsxd ebp,DWORD PTR [rbx+0x75]
   1400088d1:	jo     0x140008916
   1400088d3:	jb     0x14000893a
   1400088d5:	fs outs dx,BYTE PTR gs:[rsi]
   1400088d8:	je     0x140008943
   1400088da:	(bad)  
   1400088db:	ins    BYTE PTR es:[rdi],dx
   1400088dc:	jae    0x1400088de
   1400088de:	add    DWORD PTR [rax],0x766e6f43
   1400088e4:	gs jb  0x14000895b
   1400088e7:	push   rbx
   1400088e8:	je     0x14000895c
   1400088ea:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   1400088f1:	jb     0x14000895c
   1400088f3:	je     0x14000896e
   1400088f5:	rex.R
   1400088f6:	gs jae 0x14000895c
   1400088f9:	jb     0x140008964
   1400088fb:	jo     0x140008971
   1400088fd:	outs   dx,DWORD PTR ds:[rsi]
   1400088fe:	jb     0x140008954
   140008900:	outs   dx,DWORD PTR ds:[rsi]
   140008901:	push   rbx
   140008902:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140008906:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000890e:	imul   esi,DWORD PTR [rax+0x74],0x57726f
   140008915:	add    BYTE PTR [rsi+0x6f725000],al
   14000891b:	jo     0x140008982
   14000891d:	jb     0x140008993
   14000891f:	jns    0x140008974
   140008921:	push   0x57746565
   140008926:	add    BYTE PTR [rax],al
   140008928:	or     DWORD PTR [rax],eax
   14000892a:	rex.XB jb 0x140008992
   14000892d:	(bad)  
   14000892e:	je     0x140008995
   140008930:	push   rax
   140008931:	jb     0x1400089a2
   140008933:	jo     0x14000899a
   140008935:	jb     0x1400089ab
   140008937:	jns    0x14000898c
   140008939:	push   0x50746565
   14000893e:	(bad)  
   14000893f:	addr32 gs push rdi
   140008942:	add    BYTE PTR [rax],al
   140008944:	rex.XB
   140008945:	rex.WRXB
   140008946:	rex.WRB
   140008947:	rex.XB push r12
   140008949:	xor    r14,QWORD PTR [rdx]
   14000894c:	cs fs ins BYTE PTR es:[rdi],dx
   14000894f:	ins    BYTE PTR es:[rdi],dx
   140008950:	add    BYTE PTR [rax],al
   140008952:	or     al,0x0
   140008954:	rex.RXB
   140008955:	gs je  0x1400089a7
   140008958:	jo     0x1400089bf
   14000895a:	outs   dx,BYTE PTR ds:[rsi]
   14000895b:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x57656d61
   140008964:	add    BYTE PTR [rax],al
   140008966:	(bad)  
   140008967:	add    BYTE PTR [rdi+0x65],al
   14000896a:	je     0x1400089bf
   14000896c:	(bad)  
   14000896d:	jbe    0x1400089d4
   14000896f:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x57656d61
   140008978:	add    BYTE PTR [rax],al
   14000897a:	rex.XB
   14000897b:	rex.WRXB
   14000897c:	rex.WRB
   14000897d:	rex.R
   14000897e:	rex.WR
   14000897f:	rex.RXB xor r14d,DWORD PTR [r10]
   140008982:	cs fs ins BYTE PTR es:[rdi],dx
   140008985:	ins    BYTE PTR es:[rdi],dx
   140008986:	add    BYTE PTR [rax],al
   140008988:	add    eax,0x696e4900
   14000898d:	je     0x1400089db
   14000898f:	outs   dx,DWORD PTR ds:[rsi]
   140008990:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008993:	rex.WRB jae 0x1400089d9
   140008996:	je     0x1400089fe
   140008998:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14000899a:	outs   dx,BYTE PTR ds:[rsi]
   14000899b:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x55000600
   1400089a3:	outs   dx,BYTE PTR ds:[rsi]
   1400089a4:	imul   ebp,DWORD PTR [rsi+0x69],0x636f4c74
   1400089ab:	(bad)  
   1400089ac:	ins    BYTE PTR es:[rdi],dx
   1400089ad:	rex.WRB jae 0x1400089f3
   1400089b0:	je     0x140008a18
   1400089b2:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400089b4:	outs   dx,BYTE PTR ds:[rsi]
   1400089b5:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x43734d00
   1400089bd:	je     0x140008a25
   1400089bf:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400089c1:	outs   dx,BYTE PTR ds:[rsi]
   1400089c2:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x4c4c442e
   1400089ca:	add    BYTE PTR [rax],al
   1400089cc:	(bad)  
   1400089cd:	add    BYTE PTR [rbx+0x6f],al
   1400089d0:	ins    DWORD PTR es:[rdi],dx
   1400089d1:	ins    DWORD PTR es:[rdi],dx
   1400089d2:	(bad)  
   1400089d3:	outs   dx,BYTE PTR ds:[rsi]
   1400089d4:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   1400089dd:	addr32 jbe 0x140008a37
   1400089e0:	add    BYTE PTR [rax],al
   1400089e2:	push   rbx
   1400089e3:	rex.W
   1400089e4:	rex.RB
   1400089e5:	rex.WR
   1400089e6:	xor    r14,QWORD PTR [rdx]
   1400089e9:	cs fs ins BYTE PTR es:[rdi],dx
   1400089ec:	ins    BYTE PTR es:[rdi],dx
   1400089ed:	add    BYTE PTR [rbx+rax*1],bh
   1400089f0:	rex.W
   1400089f1:	gs (bad) 
   1400089f3:	jo     0x140008a36
   1400089f5:	ins    BYTE PTR es:[rdi],dx
   1400089f6:	ins    BYTE PTR es:[rdi],dx
   1400089f7:	outs   dx,DWORD PTR ds:[rsi]
   1400089f8:	movsxd eax,DWORD PTR [rax]
   1400089fa:	rex add ecx,DWORD PTR [rax+0x65]
   1400089fe:	(bad)  
   1400089ff:	jo     0x140008a47
   140008a01:	jb     0x140008a68
   140008a03:	add    BYTE PTR gs:[rax],al
   140008a06:	stos   DWORD PTR es:[rdi],eax
   140008a07:	add    al,BYTE PTR [rdi+0x65]
   140008a0a:	je     0x140008a5c
   140008a0c:	jb     0x140008a7d
   140008a0e:	movsxd esp,DWORD PTR [rbp+0x73]
   140008a11:	jae    0x140008a5b
   140008a13:	gs (bad) 
   140008a15:	jo     0x140008a17
   140008a17:	add    BYTE PTR [rcx+0x3],ch
   140008a1a:	pop    rdi
   140008a1b:	jbe    0x140008a90
   140008a1d:	outs   dx,BYTE PTR ds:[rsi]
   140008a1e:	ja     0x140008a90
   140008a20:	jb     0x140008a8b
   140008a22:	outs   dx,BYTE PTR ds:[rsi]
   140008a23:	je     0x140008a8b
   140008a25:	add    BYTE PTR [rsi+0x6d656d04],dl
   140008a2b:	jae    0x140008a92
   140008a2d:	je     0x140008a2f
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	add    DWORD PTR [rax],eax
   140009002:	add    BYTE PTR [rax],al
   140009004:	add    BYTE PTR [rax],al
   140009006:	add    BYTE PTR [rax],al
   140009008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000900e:	add    BYTE PTR [rax],al
   140009010:	int    0x5d
   140009012:	and    dl,dl
   140009014:	data16 (bad) 
   140009016:	(bad)  
   140009017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

000000014000b000 <.pdata>:
   14000b000:	or     BYTE PTR [rax],dl
   14000b002:	add    BYTE PTR [rax],al
   14000b004:	lahf   
   14000b005:	adc    BYTE PTR [rax],al
   14000b007:	add    BYTE PTR [rax+0x76],ch
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	mov    al,0x10
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	clc    
   14000b011:	adc    BYTE PTR [rax],al
   14000b013:	add    BYTE PTR [rsi+rsi*2+0x0],bh
   14000b017:	add    BYTE PTR [rax+0x11],dl
   14000b01a:	add    BYTE PTR [rax],al
   14000b01c:	iret   
   14000b01d:	adc    DWORD PTR [rax],eax
   14000b01f:	add    BYTE PTR [rsi+rsi*2+0x11d80000],al
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	add    dl,BYTE PTR [rbx]
   14000b02a:	add    BYTE PTR [rax],al
   14000b02c:	mov    eax,0x8000076
   14000b031:	adc    eax,DWORD PTR [rax]
   14000b033:	add    BYTE PTR [rbx+rdx*1+0x76cc0000],bl
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	mov    al,0x13
   14000b03e:	add    BYTE PTR [rax],al
   14000b040:	leave  
   14000b041:	adc    eax,DWORD PTR [rax]
   14000b043:	add    BYTE PTR [rsi+rsi*2+0x0],bh
   14000b047:	add    al,dl
   14000b049:	adc    eax,DWORD PTR [rax]
   14000b04b:	add    bh,dh
   14000b04d:	adc    eax,DWORD PTR [rax]
   14000b04f:	add    BYTE PTR [rsi+rsi*2+0x0],bh
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	adc    al,0x0
   14000b057:	add    BYTE PTR [rdi],al
   14000b059:	adc    eax,0x76e80000
   14000b05e:	add    BYTE PTR [rax],al
   14000b060:	adc    BYTE PTR [rip+0x16790000],dl        # 0x15679b066
   14000b066:	add    BYTE PTR [rax],al
   14000b068:	cld    
   14000b069:	jbe    0x14000b06b
   14000b06b:	add    BYTE PTR [rax+0x71000016],al
   14000b071:	sbb    al,BYTE PTR [rax]
   14000b073:	add    BYTE PTR [rax],bl
   14000b075:	ja     0x14000b077
   14000b077:	add    BYTE PTR [rax+0x1a],bh
   14000b07a:	add    BYTE PTR [rax],al
   14000b07c:	(bad)  
   14000b07d:	sbb    eax,DWORD PTR [rax]
   14000b07f:	add    BYTE PTR [rax],dh
   14000b081:	ja     0x14000b083
   14000b083:	add    BYTE PTR [rax+0x3400001b],cl
   14000b089:	sbb    al,0x0
   14000b08b:	add    BYTE PTR [rdi+rsi*2],bh
   14000b08e:	add    BYTE PTR [rax],al
   14000b090:	sbb    al,0x0
   14000b093:	add    BYTE PTR [rdx+0x1d],al
   14000b096:	add    BYTE PTR [rax],al
   14000b098:	rex.WR ja 0x14000b09b
   14000b09b:	add    BYTE PTR [rax+0x1d],cl
   14000b09e:	add    BYTE PTR [rax],al
   14000b0a0:	(bad)  
   14000b0a1:	(bad)  
   14000b0a2:	add    BYTE PTR [rax],al
   14000b0a4:	(bad)  
   14000b0a5:	ja     0x14000b0a7
   14000b0a7:	add    BYTE PTR [rax+0x1f],al
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	or     BYTE PTR [rax],ah
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	xor    BYTE PTR [rdi+0x0],0x0
   14000b0b4:	adc    BYTE PTR [rax],ah
   14000b0b6:	add    BYTE PTR [rax],al
   14000b0b8:	xor    al,0x21
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	rex.WR ja 0x14000b0bf
   14000b0bf:	add    BYTE PTR [rcx+riz*1],bh
   14000b0c2:	add    BYTE PTR [rax],al
   14000b0c4:	sub    esp,DWORD PTR [rbx]
   14000b0c6:	add    BYTE PTR [rax],al
   14000b0c8:	(bad)  
   14000b0c9:	ja     0x14000b0cb
   14000b0cb:	add    BYTE PTR [rbx+riz*1],dh
   14000b0ce:	add    BYTE PTR [rax],al
   14000b0d0:	movabs ds:0xb00000778c000024,al
   14000b0d9:	and    al,0x0
   14000b0db:	add    dh,dh
   14000b0dd:	and    eax,0x774c0000
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	cld    
   14000b0e5:	and    eax,0x277c0000
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	movabs al,ds:0xba00002784000077
   14000b0f5:	sub    BYTE PTR [rax],al
   14000b0f7:	add    al,al
   14000b0f9:	ja     0x14000b0fb
   14000b0fb:	add    al,al
   14000b0fd:	sub    BYTE PTR [rax],al
   14000b0ff:	add    bl,cl
   14000b101:	sub    eax,DWORD PTR [rax]
   14000b103:	add    al,dl
   14000b105:	ja     0x14000b107
   14000b107:	add    ah,dl
   14000b109:	sub    eax,DWORD PTR [rax]
   14000b10b:	add    BYTE PTR [rbp-0x17ffffd1],dl
   14000b111:	ja     0x14000b113
   14000b113:	add    BYTE PTR [rax-0x40ffffd1],ah
   14000b119:	xor    BYTE PTR [rax],al
   14000b11b:	add    BYTE PTR [rdi+rsi*2+0x0],cl
   14000b11f:	add    al,cl
   14000b121:	xor    BYTE PTR [rax],al
   14000b123:	add    BYTE PTR [rbx],bl
   14000b125:	xor    al,0x0
   14000b127:	add    BYTE PTR [rax+rdi*2],al
   14000b12a:	add    BYTE PTR [rax],al
   14000b12c:	xor    BYTE PTR [rax+rax*1],dh
   14000b12f:	add    BYTE PTR [rbp+0x4c000035],ch
   14000b135:	ja     0x14000b137
   14000b137:	add    BYTE PTR [rbp+rsi*1+0x37f10000],dh
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	sub    BYTE PTR [rax+0x0],bh
   14000b143:	add    BYTE PTR [rax],al
   14000b145:	cmp    BYTE PTR [rax],al
   14000b147:	add    BYTE PTR [rbp+0x39],bh
   14000b14a:	add    BYTE PTR [rax],al
   14000b14c:	rex.WR js 0x14000b14f
   14000b14f:	add    BYTE PTR [rcx+rdi*1+0x3b0d0000],al
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	mov    eax,0x20000076
   14000b15d:	cmp    eax,DWORD PTR [rax]
   14000b15f:	add    BYTE PTR [rdx+0x6000003c],ch
   14000b165:	js     0x14000b167
   14000b167:	add    BYTE PTR [rax+0x3c00003c],dh
   14000b16d:	(bad)  
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	je     0x14000b1ea
   14000b172:	add    BYTE PTR [rax],al
   14000b174:	rex.R (bad) 
   14000b176:	add    BYTE PTR [rax],al
   14000b178:	stos   DWORD PTR es:[rdi],eax
   14000b179:	rex.X add BYTE PTR [rax],al
   14000b17c:	mov    BYTE PTR [rax+0x0],bh
   14000b17f:	add    BYTE PTR [rdx+rax*2+0x43c60000],dh
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	lods   al,BYTE PTR ds:[rsi]
   14000b189:	js     0x14000b18b
   14000b18b:	add    ah,cl
   14000b18d:	rex.XB add BYTE PTR [r8],al
   14000b190:	sbb    eax,DWORD PTR [rax+rax*1+0x0]
   14000b194:	xor    BYTE PTR [rdi+0x0],0x0
   14000b198:	and    al,0x44
   14000b19a:	add    BYTE PTR [rax],al
   14000b19c:	xchg   edx,eax
   14000b19d:	add    BYTE PTR [rax],r8b
   14000b1a0:	mov    esp,0x98000078
   14000b1a5:	add    BYTE PTR [rax],r8b
   14000b1a8:	(bad)  
   14000b1a9:	add    BYTE PTR [r8],r8b
   14000b1ac:	lods   al,BYTE PTR ds:[rsi]
   14000b1ad:	js     0x14000b1af
   14000b1af:	add    BYTE PTR [rax],dh
   14000b1b1:	add    BYTE PTR [r8],r8b
   14000b1b4:	push   rbx
   14000b1b5:	add    BYTE PTR [r8],r8b
   14000b1b8:	int3   
   14000b1b9:	js     0x14000b1bb
   14000b1bb:	add    BYTE PTR [rax+0x45],ah
   14000b1be:	add    BYTE PTR [rax],al
   14000b1c0:	add    DWORD PTR [rbp+0x0],0x0
   14000b1c4:	int3   
   14000b1c5:	js     0x14000b1c7
   14000b1c7:	add    BYTE PTR [rbp+rax*2+0x462f0000],cl
   14000b1ce:	add    BYTE PTR [rax],al
   14000b1d0:	(bad)  
   14000b1d1:	js     0x14000b1d3
   14000b1d3:	add    BYTE PTR [rax],bh
   14000b1d5:	rex.RX add BYTE PTR [rax],r8b
   14000b1d8:	fild   DWORD PTR [rsi+0x0]
   14000b1db:	add    BYTE PTR [rcx+rdi*2],al
   14000b1de:	add    BYTE PTR [rax],al
   14000b1e0:	in     al,0x46
   14000b1e2:	add    BYTE PTR [rax],al
   14000b1e4:	pop    rbx
   14000b1e5:	rex.RXB add BYTE PTR [r8],r8b
   14000b1e8:	sub    al,0x79
   14000b1ea:	add    BYTE PTR [rax],al
   14000b1ec:	rex.RXB add BYTE PTR fs:[r8],r8b
   14000b1f0:	lods   eax,DWORD PTR ds:[rsi]
   14000b1f1:	rex.W add BYTE PTR [rax],al
   14000b1f4:	cmp    al,0x79
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	ror    BYTE PTR [rax+0x0],0x0
   14000b1fc:	(bad)
   14000b200:	jl     0x14000b278
   14000b202:	add    BYTE PTR [rax],al
   14000b204:	movabs al,ds:0x58000049e9000049
   14000b20d:	jns    0x14000b20f
   14000b20f:	add    al,dh
   14000b211:	rex.WB add BYTE PTR [r8],al
   14000b214:	add    cl,BYTE PTR [rdx+0x0]
   14000b217:	add    BYTE PTR [rsi+rsi*2+0x0],bh
   14000b21b:	add    BYTE PTR [rax],cl
   14000b21d:	rex.WX add BYTE PTR [rax],al
   14000b220:	pop    rsi
   14000b221:	rex.WR add BYTE PTR [rax],r8b
   14000b224:	(bad)  
   14000b225:	jns    0x14000b227
   14000b227:	add    BYTE PTR [rax+0x4c],dh
   14000b22a:	add    BYTE PTR [rax],al
   14000b22c:	mov    cs,WORD PTR [rax+rax*1+0x0]
   14000b230:	nop
   14000b231:	jns    0x14000b233
   14000b233:	add    BYTE PTR [rsp+rcx*2+0x4cc80000],dl
   14000b23a:	add    BYTE PTR [rax],al
   14000b23c:	int3   
   14000b23d:	js     0x14000b23f
   14000b23f:	add    al,dl
   14000b241:	rex.WR add BYTE PTR [rax],r8b
   14000b244:	rex.B
   14000b245:	rex.WRX add BYTE PTR [rax],r8b
   14000b248:	xchg   esp,eax
   14000b249:	jns    0x14000b24b
   14000b24b:	add    BYTE PTR [rax+0x4e],dl
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	mov    DWORD PTR [rsi+0x0],ecx
   14000b253:	add    BYTE PTR [rsi+rsi*2+0x0],bh
   14000b257:	add    BYTE PTR [rax-0x57ffffb2],dl
   14000b25d:	rex.WRX add BYTE PTR [rax],r8b
   14000b260:	jl     0x14000b2d8
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	mov    esp,0x1000004e
   14000b269:	rex.WRXB add BYTE PTR [r8],r8b
   14000b26c:	pushf  
   14000b26d:	jns    0x14000b26f
   14000b26f:	add    BYTE PTR [rax],bl
   14000b271:	rex.WRXB add BYTE PTR [r8],r8b
   14000b274:	pop    rbp
   14000b275:	rex.WRXB add BYTE PTR [r8],r8b
   14000b278:	int3   
   14000b279:	js     0x14000b27b
   14000b27b:	add    al,dl
   14000b27d:	rex.WRXB add BYTE PTR [r8],r8b
   14000b280:	sbb    eax,0xbc000050
   14000b285:	jns    0x14000b287
   14000b287:	add    BYTE PTR [rax+rdx*2+0x0],ah
   14000b28b:	add    BYTE PTR [rcx+rdx*2],dh
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	loopne 0x14000b30b
   14000b292:	add    BYTE PTR [rax],al
   14000b294:	js     0x14000b2e7
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	xchg   ebp,eax
   14000b299:	push   rcx
   14000b29a:	add    BYTE PTR [rax],al
   14000b29c:	jl     0x14000b314
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	pushf  
   14000b2a1:	push   rcx
   14000b2a2:	add    BYTE PTR [rax],al
   14000b2a4:	call   QWORD PTR [rcx+0x0]
   14000b2a7:	add    ah,cl
   14000b2a9:	js     0x14000b2ab
   14000b2ab:	add    BYTE PTR [rax],cl
   14000b2ad:	push   rdx
   14000b2ae:	add    BYTE PTR [rax],al
   14000b2b0:	sahf   
   14000b2b1:	push   rdx
   14000b2b2:	add    BYTE PTR [rax],al
   14000b2b4:	hlt    
   14000b2b5:	jns    0x14000b2b7
   14000b2b7:	add    al,al
   14000b2b9:	push   rdx
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	ret    0x52
   14000b2bf:	add    al,dh
   14000b2c1:	jns    0x14000b2c3
   14000b2c3:	add    dh,dl
   14000b2c5:	push   rdx
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	out    0x52,al
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	mov    al,0x76
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	in     al,dx
   14000b2d1:	push   rdx
   14000b2d2:	add    BYTE PTR [rax],al
   14000b2d4:	or     BYTE PTR [rbx+0x0],dl
   14000b2d7:	add    ah,bh
   14000b2d9:	js     0x14000b2db
   14000b2db:	add    BYTE PTR [rsi],cl
   14000b2dd:	push   rbx
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	sub    al,0x53
   14000b2e2:	add    BYTE PTR [rax],al
   14000b2e4:	mov    al,0x76
   14000b2e6:	add    BYTE PTR [rax],al
   14000b2e8:	rex push rbx
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	(bad)  
   14000b2ed:	push   rbx
   14000b2ee:	add    BYTE PTR [rax],al
   14000b2f0:	mov    al,0x76
	...

Disassembly of section .rsrc:

000000014000c000 <.rsrc>:
	...
   14000c00c:	add    DWORD PTR [rax],eax
   14000c00e:	add    al,0x0
   14000c010:	fadd   DWORD PTR [rcx]
   14000c012:	add    BYTE PTR [rax-0x7fffffc8],al
   14000c018:	add    eax,DWORD PTR [rax]
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	push   rax
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	or     BYTE PTR [rsi],0x0
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	js     0x14000c026
   14000c026:	add    BYTE PTR [rax+0x10],al
   14000c02c:	nop
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	sbb    BYTE PTR [rax],0x0
   14000c032:	add    BYTE PTR [rax],al
   14000c034:	test   al,0x0
   14000c036:	add    BYTE PTR [rax+0x0],al
	...
   14000c044:	add    BYTE PTR [rax],al
   14000c046:	add    DWORD PTR [rax],eax
   14000c048:	add    DWORD PTR [rax],eax
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	rol    BYTE PTR [rax],0x0
   14000c04f:	add    BYTE PTR [rax],0x0
	...
   14000c05e:	add    eax,DWORD PTR [rax]
   14000c060:	add    DWORD PTR [rax],eax
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	fadd   DWORD PTR [rax]
   14000c066:	add    BYTE PTR [rax+0x2],al
   14000c06c:	lock add BYTE PTR [rax],al
   14000c06f:	add    BYTE PTR [rbx],0x0
   14000c072:	add    BYTE PTR [rax],al
   14000c074:	or     BYTE PTR [rcx],al
   14000c076:	add    BYTE PTR [rax+0x0],al
	...
   14000c084:	add    BYTE PTR [rax],al
   14000c086:	add    DWORD PTR [rax],eax
   14000c088:	push   0x20000000
   14000c08d:	add    DWORD PTR [rax],eax
   14000c08f:	add    BYTE PTR [rax],0x0
	...
   14000c09e:	add    DWORD PTR [rax],eax
   14000c0a0:	add    DWORD PTR [rax],eax
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	cmp    BYTE PTR [rcx],al
   14000c0a6:	add    BYTE PTR [rax+0x0],al
	...
   14000c0b4:	add    BYTE PTR [rax],al
   14000c0b6:	add    DWORD PTR [rax],eax
   14000c0b8:	add    DWORD PTR [rax],eax
   14000c0ba:	add    BYTE PTR [rax],al
   14000c0bc:	push   rax
   14000c0bd:	add    DWORD PTR [rax],eax
   14000c0bf:	add    BYTE PTR [rax],0x0
	...
   14000c0ce:	add    DWORD PTR [rax],eax
   14000c0d0:	or     DWORD PTR [rax+rax*1],eax
   14000c0d3:	add    BYTE PTR [rax+0x1],ch
	...
   14000c0e6:	add    DWORD PTR [rax],eax
   14000c0e8:	or     DWORD PTR [rax+rax*1],eax
   14000c0eb:	add    BYTE PTR [rax+0x1],bh
	...
   14000c0fe:	add    DWORD PTR [rax],eax
   14000c100:	or     DWORD PTR [rax+rax*1],eax
   14000c103:	add    BYTE PTR [rax+0x1],cl
	...
   14000c115:	add    BYTE PTR [rcx],al
   14000c117:	add    BYTE PTR [rcx],cl
   14000c119:	add    al,0x0
   14000c11b:	add    BYTE PTR [rax+0x1],bl
	...
   14000c12d:	add    BYTE PTR [rcx],al
   14000c12f:	add    BYTE PTR [rcx],cl
   14000c131:	add    al,0x0
   14000c133:	add    BYTE PTR [rax+0x1],ch
	...
   14000c145:	add    BYTE PTR [rcx],al
   14000c147:	add    BYTE PTR [rcx],cl
   14000c149:	add    al,0x0
   14000c14b:	add    BYTE PTR [rax+0x1],bh
	...
   14000c15d:	add    BYTE PTR [rcx],al
   14000c15f:	add    BYTE PTR [rcx],cl
   14000c161:	add    al,0x0
   14000c163:	add    al,cl
   14000c165:	add    DWORD PTR [rax],eax
   14000c167:	add    BYTE PTR [rax-0x27ffff2b],cl
	...
   14000c175:	add    BYTE PTR [rax],al
   14000c177:	add    BYTE PTR [rax-0x36],ah
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	sub    BYTE PTR [rcx],al
	...
   14000c186:	add    BYTE PTR [rax],al
   14000c188:	mov    bl,cl
   14000c18a:	add    BYTE PTR [rax],al
   14000c18c:	push   0x5
   14000c191:	add    BYTE PTR [rax],al
   14000c193:	add    BYTE PTR [rax],al
   14000c195:	add    BYTE PTR [rax],al
   14000c197:	add    al,dh
   14000c199:	rol    BYTE PTR [rax],1
   14000c19b:	add    BYTE PTR [rax+0x4],ch
	...
   14000c1a6:	add    BYTE PTR [rax],al
   14000c1a8:	pop    rax
   14000c1a9:	(bad)  
   14000c1aa:	add    BYTE PTR [rax],al
   14000c1ac:	xor    BYTE PTR [rax],al
	...
   14000c1b6:	add    BYTE PTR [rax],al
   14000c1b8:	mov    al,0xc6
   14000c1ba:	add    BYTE PTR [rax],al
   14000c1bc:	mov    al,0x3
	...
   14000c1c6:	add    BYTE PTR [rax],al
   14000c1c8:	loopne 0x14000c18b
   14000c1ca:	add    BYTE PTR [rax],al
   14000c1cc:	int    0x4
	...
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	add    eax,DWORD PTR [rax]
   14000c1da:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000c1de:	rex.WB add BYTE PTR [r15+rdi*1],dil
   14000c1e2:	js     0x14000c251
   14000c1e4:	ins    BYTE PTR es:[rdi],dx
   14000c1e5:	and    BYTE PTR [rsi+0x65],dh
   14000c1e8:	jb     0x14000c25d
   14000c1ea:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c1f1:	xor    BYTE PTR [rdx],ah
   14000c1f3:	and    BYTE PTR [rbp+0x6e],ah
   14000c1f6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000c1f9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000c200:	rex.RX sub eax,0x73202238
   14000c206:	je     0x14000c269
   14000c208:	outs   dx,BYTE PTR ds:[rsi]
   14000c209:	fs (bad) 
   14000c20b:	ins    BYTE PTR es:[rdi],dx
   14000c20c:	outs   dx,DWORD PTR ds:[rsi]
   14000c20d:	outs   dx,BYTE PTR ds:[rsi]
   14000c20e:	gs cmp eax,0x73657922
   14000c214:	and    bh,BYTE PTR [rdi]
   14000c216:	ds or  eax,0x2d213c0a
   14000c21c:	sub    eax,0x706f4320
   14000c221:	jns    0x14000c295
   14000c223:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000c22a:	sub    DWORD PTR [rax],esp
   14000c22c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000c234:	je     0x14000c256
   14000c236:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c238:	jb     0x14000c2aa
   14000c23a:	outs   dx,DWORD PTR ds:[rsi]
   14000c23b:	jb     0x14000c29e
   14000c23d:	je     0x14000c2a8
   14000c23f:	outs   dx,DWORD PTR ds:[rsi]
   14000c240:	outs   dx,BYTE PTR ds:[rsi]
   14000c241:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e0074
   14000c247:	cmp    al,0x61
   14000c249:	jae    0x14000c2be
   14000c24b:	gs ins DWORD PTR es:[rdi],dx
   14000c24d:	(bad)  
   14000c24e:	ins    BYTE PTR es:[rdi],dx
   14000c24f:	jns    0x14000c271
   14000c251:	js     0x14000c2c0
   14000c253:	ins    BYTE PTR es:[rdi],dx
   14000c254:	outs   dx,BYTE PTR ds:[rsi]
   14000c255:	jae    0x14000c294
   14000c257:	and    dh,BYTE PTR [rbp+0x72]
   14000c25a:	outs   dx,BYTE PTR ds:[rsi]
   14000c25b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c25e:	push   0x73616d65
   14000c263:	sub    eax,0x7263696d
   14000c268:	outs   dx,DWORD PTR ds:[rsi]
   14000c269:	jae    0x14000c2da
   14000c26b:	data16 je 0x14000c29b
   14000c26e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c271:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c274:	ins    DWORD PTR es:[rdi],dx
   14000c275:	cs jbe 0x14000c2a9
   14000c278:	and    ah,BYTE PTR [rax]
   14000c27a:	ins    DWORD PTR es:[rdi],dx
   14000c27b:	(bad)  
   14000c27c:	outs   dx,BYTE PTR ds:[rsi]
   14000c27d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000c284:	jb     0x14000c2f9
   14000c286:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000c28d:	xor    BYTE PTR [rdx],ah
   14000c28f:	ds or  eax,0x3c20200a
   14000c295:	(bad)  
   14000c296:	jae    0x14000c30b
   14000c298:	gs ins DWORD PTR es:[rdi],dx
   14000c29a:	(bad)  
   14000c29b:	ins    BYTE PTR es:[rdi],dx
   14000c29c:	jns    0x14000c2e7
   14000c29e:	fs outs dx,BYTE PTR gs:[rsi]
   14000c2a1:	je     0x14000c30c
   14000c2a3:	je     0x14000c31e
   14000c2a5:	or     eax,0x2020200a
   14000c2aa:	and    BYTE PTR [rsi+0x65],dh
   14000c2ad:	jb     0x14000c322
   14000c2af:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000c2b6:	xor    DWORD PTR [rsi],ebp
   14000c2b8:	xor    BYTE PTR [rsi],ch
   14000c2ba:	xor    BYTE PTR [rdx],ah
   14000c2bc:	or     eax,0x2020200a
   14000c2c1:	and    BYTE PTR [rax+0x72],dh
   14000c2c4:	outs   dx,DWORD PTR ds:[rsi]
   14000c2c5:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c2c8:	jae    0x14000c339
   14000c2ca:	jb     0x14000c30d
   14000c2cc:	jb     0x14000c331
   14000c2ce:	push   0x63657469
   14000c2d3:	je     0x14000c34a
   14000c2d5:	jb     0x14000c33c
   14000c2d7:	cmp    eax,0x646d6122
   14000c2dc:	ss xor al,0x22
   14000c2df:	or     eax,0x2020200a
   14000c2e4:	and    BYTE PTR [rsi+0x61],ch
   14000c2e7:	ins    DWORD PTR es:[rdi],dx
   14000c2e8:	gs cmp eax,0x63694d22
   14000c2ee:	jb     0x14000c35f
   14000c2f0:	jae    0x14000c361
   14000c2f2:	data16 je 0x14000c323
   14000c2f5:	push   rdi
   14000c2f6:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c2fd:	push   rbx
   14000c2fe:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c302:	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x64657243
   14000c30a:	push   rdi
   14000c30b:	imul   edi,DWORD PTR [rdx+0x22],0x20200a0d
   14000c312:	and    BYTE PTR [rax],ah
   14000c314:	je     0x14000c38f
   14000c316:	jo     0x14000c37d
   14000c318:	cmp    eax,0x6e697722
   14000c31d:	xor    esi,DWORD PTR [rdx]
   14000c31f:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e32f
   14000c325:	and    BYTE PTR [rdi],ch
   14000c327:	ds or  eax,0x3c20200a
   14000c32d:	fs gs jae 0x14000c394
   14000c331:	jb     0x14000c39c
   14000c333:	jo     0x14000c3a9
   14000c335:	imul   ebp,DWORD PTR [rdi+0x6e],0x6572433e
   14000c33c:	fs outs dx,BYTE PTR gs:[rsi]
   14000c33f:	je     0x14000c3aa
   14000c341:	(bad)  
   14000c342:	ins    BYTE PTR es:[rdi],dx
   14000c343:	and    BYTE PTR [rdx+0x61],al
   14000c346:	movsxd ebp,DWORD PTR [rbx+0x75]
   14000c349:	jo     0x14000c36b
   14000c34b:	(bad)  
   14000c34c:	outs   dx,BYTE PTR ds:[rsi]
   14000c34d:	and    BYTE PTR fs:[rdx+0x65],dl
   14000c351:	jae    0x14000c3c7
   14000c353:	outs   dx,DWORD PTR ds:[rsi]
   14000c354:	jb     0x14000c3bb
   14000c356:	and    BYTE PTR [rdi+0x69],dl
   14000c359:	jp     0x14000c3bc
   14000c35b:	jb     0x14000c3c1
   14000c35d:	cmp    al,0x2f
   14000c35f:	fs gs jae 0x14000c3c6
   14000c363:	jb     0x14000c3ce
   14000c365:	jo     0x14000c3db
   14000c367:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000c36e:	or     ah,BYTE PTR [rax]
   14000c370:	and    BYTE PTR [rsp+riz*2],bh
   14000c373:	gs jo  0x14000c3db
   14000c376:	outs   dx,BYTE PTR ds:[rsi]
   14000c377:	fs outs dx,BYTE PTR gs:[rsi]
   14000c37a:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000c37d:	or     eax,0x2020200a
   14000c382:	and    BYTE PTR [rsp+riz*2],bh
   14000c385:	gs jo  0x14000c3ed
   14000c388:	outs   dx,BYTE PTR ds:[rsi]
   14000c389:	fs outs dx,BYTE PTR gs:[rsi]
   14000c38c:	je     0x14000c3cf
   14000c38e:	jae    0x14000c403
   14000c390:	gs ins DWORD PTR es:[rdi],dx
   14000c392:	(bad)  
   14000c393:	ins    BYTE PTR es:[rdi],dx
   14000c394:	jns    0x14000c3d4
   14000c396:	or     eax,0x2020200a
   14000c39b:	and    BYTE PTR [rax],ah
   14000c39d:	and    BYTE PTR [rcx+riz*2],bh
   14000c3a0:	jae    0x14000c415
   14000c3a2:	gs ins DWORD PTR es:[rdi],dx
   14000c3a4:	(bad)  
   14000c3a5:	ins    BYTE PTR es:[rdi],dx
   14000c3a6:	jns    0x14000c3f1
   14000c3a8:	fs outs dx,BYTE PTR gs:[rsi]
   14000c3ab:	je     0x14000c416
   14000c3ad:	je     0x14000c428
   14000c3af:	or     eax,0x2020200a
   14000c3b4:	and    BYTE PTR [rax],ah
   14000c3b6:	and    BYTE PTR [rax],ah
   14000c3b8:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000c3bc:	gs cmp eax,0x6e697722
   14000c3c2:	xor    esi,DWORD PTR [rdx]
   14000c3c4:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e3d4
   14000c3ca:	and    BYTE PTR [rax],ah
   14000c3cc:	and    BYTE PTR [rax],ah
   14000c3ce:	and    BYTE PTR [rsi+0x61],ch
   14000c3d1:	ins    DWORD PTR es:[rdi],dx
   14000c3d2:	gs cmp eax,0x63694d22
   14000c3d8:	jb     0x14000c449
   14000c3da:	jae    0x14000c44b
   14000c3dc:	data16 je 0x14000c40d
   14000c3df:	push   rdi
   14000c3e0:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000c3e7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000c3e9:	ins    DWORD PTR es:[rdi],dx
   14000c3ea:	ins    DWORD PTR es:[rdi],dx
   14000c3eb:	outs   dx,DWORD PTR ds:[rsi]
   14000c3ec:	outs   dx,BYTE PTR ds:[rsi]
   14000c3ed:	sub    eax,0x746e6f43
   14000c3f2:	jb     0x14000c463
   14000c3f4:	ins    BYTE PTR es:[rdi],dx
   14000c3f5:	jae    0x14000c419
   14000c3f7:	or     eax,0x2020200a
   14000c3fc:	and    BYTE PTR [rax],ah
   14000c3fe:	and    BYTE PTR [rax],ah
   14000c400:	and    BYTE PTR [rsi+0x65],dh
   14000c403:	jb     0x14000c478
   14000c405:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   14000c40c:	xor    BYTE PTR [rsi],ch
   14000c40e:	xor    BYTE PTR [rsi],ch
   14000c410:	xor    BYTE PTR [rdx],ah
   14000c412:	or     eax,0x2020200a
   14000c417:	and    BYTE PTR [rax],ah
   14000c419:	and    BYTE PTR [rax],ah
   14000c41b:	and    BYTE PTR [rax+0x72],dh
   14000c41e:	outs   dx,DWORD PTR ds:[rsi]
   14000c41f:	movsxd esp,DWORD PTR [rbp+0x73]
   14000c422:	jae    0x14000c493
   14000c424:	jb     0x14000c467
   14000c426:	jb     0x14000c48b
   14000c428:	push   0x63657469
   14000c42d:	je     0x14000c4a4
   14000c42f:	jb     0x14000c496
   14000c431:	cmp    eax,0xd222a22
   14000c436:	or     ah,BYTE PTR [rax]
   14000c438:	and    BYTE PTR [rax],ah
   14000c43a:	and    BYTE PTR [rax],ah
   14000c43c:	and    BYTE PTR [rax],ah
   14000c43e:	and    BYTE PTR [rax+0x75],dh
   14000c441:	(bad)  
   14000c442:	ins    BYTE PTR es:[rdi],dx
   14000c443:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   14000c44a:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000c44e:	and    dh,BYTE PTR [rsi]
   14000c450:	xor    eax,0x36623539
   14000c455:	xor    al,0x31
   14000c457:	xor    al,0x34
   14000c459:	movsxd esp,DWORD PTR [rbx+0x66]
   14000c45c:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000c460:	or     eax,0x2020200a
   14000c465:	and    BYTE PTR [rax],ah
   14000c467:	and    BYTE PTR [rax],ah
   14000c469:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000c46d:	addr32 jne 0x14000c4d1
   14000c470:	addr32 gs cmp eax,0xd222a22
   14000c477:	or     ah,BYTE PTR [rax]
   14000c479:	and    BYTE PTR [rax],ah
   14000c47b:	and    BYTE PTR [rax],ah
   14000c47d:	and    BYTE PTR [rax],ah
   14000c47f:	and    BYTE PTR [rdi],ch
   14000c481:	ds or  eax,0x2020200a
   14000c487:	and    BYTE PTR [rdi+rbp*1],bh
   14000c48a:	fs gs jo 0x14000c4f3
   14000c48e:	outs   dx,BYTE PTR ds:[rsi]
   14000c48f:	fs outs dx,BYTE PTR gs:[rsi]
   14000c492:	je     0x14000c4d5
   14000c494:	jae    0x14000c509
   14000c496:	gs ins DWORD PTR es:[rdi],dx
   14000c498:	(bad)  
   14000c499:	ins    BYTE PTR es:[rdi],dx
   14000c49a:	jns    0x14000c4da
   14000c49c:	or     eax,0x3c20200a
   14000c4a1:	(bad)  
   14000c4a2:	fs gs jo 0x14000c50b
   14000c4a6:	outs   dx,BYTE PTR ds:[rsi]
   14000c4a7:	fs outs dx,BYTE PTR gs:[rsi]
   14000c4aa:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000c4ad:	or     eax,0x200a0d0a
   14000c4b2:	and    BYTE PTR [rsp+rsi*2],bh
   14000c4b5:	jb     0x14000c52c
   14000c4b7:	jae    0x14000c52d
   14000c4b9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000c4bb:	outs   dx,WORD PTR ds:[rsi]
   14000c4bd:	and    BYTE PTR [rax+0x6d],bh
   14000c4c0:	ins    BYTE PTR es:[rdi],dx
   14000c4c1:	outs   dx,BYTE PTR ds:[rsi]
   14000c4c2:	jae    0x14000c501
   14000c4c4:	and    dh,BYTE PTR [rbp+0x72]
   14000c4c7:	outs   dx,BYTE PTR ds:[rsi]
   14000c4c8:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c4cb:	push   0x73616d65
   14000c4d0:	sub    eax,0x7263696d
   14000c4d5:	outs   dx,DWORD PTR ds:[rsi]
   14000c4d6:	jae    0x14000c547
   14000c4d8:	data16 je 0x14000c508
   14000c4db:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c4de:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c4e1:	ins    DWORD PTR es:[rdi],dx
   14000c4e2:	cs jbe 0x14000c518
   14000c4e5:	and    bh,BYTE PTR [rsi]
   14000c4e7:	or     eax,0x2020200a
   14000c4ec:	and    BYTE PTR [rbx+rsi*2],bh
   14000c4ef:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000c4f3:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c4fb:	and    BYTE PTR [rax],ah
   14000c4fd:	and    BYTE PTR [rax],ah
   14000c4ff:	cmp    al,0x72
   14000c501:	gs jno 0x14000c579
   14000c504:	gs jae 0x14000c57b
   14000c507:	gs fs push rax
   14000c50a:	jb     0x14000c575
   14000c50c:	jbe    0x14000c577
   14000c50e:	ins    BYTE PTR es:[rdi],dx
   14000c50f:	gs addr32 gs jae 0x14000c552
   14000c514:	or     eax,0x2020200a
   14000c519:	and    BYTE PTR [rax],ah
   14000c51b:	and    BYTE PTR [rax],ah
   14000c51d:	and    BYTE PTR [rdx+rsi*2],bh
   14000c520:	gs jno 0x14000c598
   14000c523:	gs jae 0x14000c59a
   14000c526:	gs fs rex.RB js 0x14000c590
   14000c52b:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c52e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000c535:	ins    BYTE PTR es:[rdi],dx
   14000c536:	or     eax,0x2020200a
   14000c53b:	and    BYTE PTR [rax],ah
   14000c53d:	and    BYTE PTR [rax],ah
   14000c53f:	and    BYTE PTR [rax],ah
   14000c541:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000c545:	gs ins BYTE PTR es:[rdi],dx
   14000c547:	cmp    eax,0x49736122
   14000c54c:	outs   dx,BYTE PTR ds:[rsi]
   14000c54d:	jbe    0x14000c5be
   14000c54f:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000c553:	or     eax,0x2020200a
   14000c558:	and    BYTE PTR [rax],ah
   14000c55a:	and    BYTE PTR [rax],ah
   14000c55c:	and    BYTE PTR [rax],ah
   14000c55e:	and    BYTE PTR [rbp+0x69],dh
   14000c561:	movsxd esp,DWORD PTR [r11+0x65]
   14000c565:	jae    0x14000c5da
   14000c567:	cmp    eax,0x6c616622
   14000c56c:	jae    0x14000c5d3
   14000c56e:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020e57e
   14000c574:	and    BYTE PTR [rax],ah
   14000c576:	and    BYTE PTR [rax],ah
   14000c578:	and    BYTE PTR [rax],ah
   14000c57a:	and    BYTE PTR [rdi],ch
   14000c57c:	ds or  eax,0x2020200a
   14000c582:	and    BYTE PTR [rax],ah
   14000c584:	and    BYTE PTR [rdi+rbp*1],bh
   14000c587:	jb     0x14000c5ee
   14000c589:	jno    0x14000c600
   14000c58b:	gs jae 0x14000c602
   14000c58e:	gs fs push rax
   14000c591:	jb     0x14000c5fc
   14000c593:	jbe    0x14000c5fe
   14000c595:	ins    BYTE PTR es:[rdi],dx
   14000c596:	gs addr32 gs jae 0x14000c5d9
   14000c59b:	or     eax,0x2020200a
   14000c5a0:	and    BYTE PTR [rdi+rbp*1],bh
   14000c5a3:	jae    0x14000c60a
   14000c5a5:	movsxd esi,DWORD PTR [rbp+0x72]
   14000c5a8:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000c5b0:	cmp    al,0x2f
   14000c5b2:	je     0x14000c626
   14000c5b4:	jne    0x14000c629
   14000c5b6:	je     0x14000c601
   14000c5b8:	outs   dx,BYTE PTR ds:[rsi]
   14000c5b9:	outs   dx,WORD PTR ds:[rsi]
   14000c5bb:	ds or  eax,0x200a0d0a
   14000c5c1:	and    BYTE PTR [rcx+riz*2],bh
   14000c5c4:	jo     0x14000c636
   14000c5c6:	ins    BYTE PTR es:[rdi],dx
   14000c5c7:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000c5ce:	and    BYTE PTR [rax],ah
   14000c5d0:	js     0x14000c63f
   14000c5d2:	ins    BYTE PTR es:[rdi],dx
   14000c5d3:	outs   dx,BYTE PTR ds:[rsi]
   14000c5d4:	jae    0x14000c613
   14000c5d6:	and    dh,BYTE PTR [rbp+0x72]
   14000c5d9:	outs   dx,BYTE PTR ds:[rsi]
   14000c5da:	cmp    dh,BYTE PTR [rbx+0x63]
   14000c5dd:	push   0x73616d65
   14000c5e2:	sub    eax,0x7263696d
   14000c5e7:	outs   dx,DWORD PTR ds:[rsi]
   14000c5e8:	jae    0x14000c659
   14000c5ea:	data16 je 0x14000c61a
   14000c5ed:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c5f0:	cmp    ah,BYTE PTR [rcx+0x73]
   14000c5f3:	ins    DWORD PTR es:[rdi],dx
   14000c5f4:	cs jbe 0x14000c62a
   14000c5f7:	and    bh,BYTE PTR [rsi]
   14000c5f9:	or     eax,0x2020200a
   14000c5fe:	and    BYTE PTR [rdi+rsi*2],bh
   14000c601:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   14000c608:	gs je  0x14000c67f
   14000c60b:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000c612:	and    BYTE PTR [rax],ah
   14000c614:	and    BYTE PTR [rax],ah
   14000c616:	and    BYTE PTR [rax],ah
   14000c618:	cmp    al,0x64
   14000c61a:	jo     0x14000c685
   14000c61c:	rex.B ja 0x14000c680
   14000c61f:	jb     0x14000c686
   14000c621:	and    BYTE PTR [rax],ah
   14000c623:	js     0x14000c692
   14000c625:	ins    BYTE PTR es:[rdi],dx
   14000c626:	outs   dx,BYTE PTR ds:[rsi]
   14000c627:	jae    0x14000c666
   14000c629:	and    ch,BYTE PTR [rax+0x74]
   14000c62c:	je     0x14000c69e
   14000c62e:	cmp    ch,BYTE PTR [rdi]
   14000c630:	(bad)  
   14000c631:	jae    0x14000c696
   14000c633:	push   0x73616d65
   14000c638:	cs ins DWORD PTR es:[rdi],dx
   14000c63a:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14000c641:	je     0x14000c671
   14000c643:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000c646:	(bad)  
   14000c647:	push   rbx
   14000c648:	rex.WRB
   14000c649:	rex.WB (bad) 
   14000c64b:	xor    dh,BYTE PTR [rax]
   14000c64d:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6a1d82
   14000c653:	outs   dx,DWORD PTR fs:[rsi]
   14000c655:	ja     0x14000c6ca
   14000c657:	push   rbx
   14000c658:	gs je  0x14000c6cf
   14000c65b:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   14000c662:	jb     0x14000c6d9
   14000c664:	gs cmp al,0x2f
   14000c667:	fs jo  0x14000c6d3
   14000c66a:	rex.B ja 0x14000c6ce
   14000c66d:	jb     0x14000c6d4
   14000c66f:	ds or  eax,0x2020200a
   14000c675:	and    BYTE PTR [rdi+rbp*1],bh
   14000c678:	ja     0x14000c6e3
   14000c67a:	outs   dx,BYTE PTR ds:[rsi]
   14000c67b:	outs   dx,DWORD PTR fs:[rsi]
   14000c67d:	ja     0x14000c6f2
   14000c67f:	push   rbx
   14000c680:	gs je  0x14000c6f7
   14000c683:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   14000c68a:	and    BYTE PTR [rax],ah
   14000c68c:	cmp    al,0x2f
   14000c68e:	(bad)  
   14000c68f:	jo     0x14000c701
   14000c691:	ins    BYTE PTR es:[rdi],dx
   14000c692:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000c699:	ds or  eax,0x3c0a0d0a
   14000c69f:	(bad)  
   14000c6a0:	(bad)  
   14000c6a1:	jae    0x14000c716
   14000c6a3:	gs ins DWORD PTR es:[rdi],dx
   14000c6a5:	(bad)  
   14000c6a6:	ins    BYTE PTR es:[rdi],dx
   14000c6a7:	jns    0x14000c6e7
   14000c6a9:	or     eax,0xa0d0a
   14000c6ae:	add    BYTE PTR [rax],al
   14000c6b0:	mov    al,0x3
   14000c6b2:	xor    al,0x0
   14000c6b4:	add    BYTE PTR [rax],al
   14000c6b6:	push   rsi
   14000c6b7:	add    BYTE PTR [rbx+0x0],dl
   14000c6ba:	pop    rdi
   14000c6bb:	add    BYTE PTR [rsi+0x0],dl
   14000c6be:	add    BYTE PTR [r10+0x0],r10b
   14000c6c2:	push   rbx
   14000c6c3:	add    BYTE PTR [rcx+0x0],cl
   14000c6c6:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000c6ca:	pop    rdi
   14000c6cb:	add    BYTE PTR [rcx+0x0],cl
   14000c6ce:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000c6d2:	rex.WRXB add BYTE PTR [r8],r8b
   14000c6d5:	add    BYTE PTR [rax],al
   14000c6d7:	add    BYTE PTR [rbp+0xfeef04],bh
   14000c6dd:	add    BYTE PTR [rcx],al
   14000c6df:	add    BYTE PTR [rax],al
   14000c6e1:	add    BYTE PTR [rdx],cl
   14000c6e3:	add    BYTE PTR [rax],al
   14000c6e5:	add    BYTE PTR [rax],bpl
   14000c6e8:	add    BYTE PTR [rax],al
   14000c6ea:	or     al,BYTE PTR [rax]
   14000c6ec:	add    BYTE PTR [rax+0x0],al
   14000c6ef:	sub    BYTE PTR [rdi],bh
   14000c6f1:	add    BYTE PTR [rax],al
   14000c6f3:	add    BYTE PTR [rax],al
   14000c6f5:	add    BYTE PTR [rax],al
   14000c6f7:	add    BYTE PTR [rax+rax*1],al
   14000c6fa:	add    al,0x0
   14000c6fc:	add    al,BYTE PTR [rax]
	...
   14000c70a:	add    BYTE PTR [rax],al
   14000c70c:	(bad)  
   14000c70d:	add    eax,DWORD PTR [rax]
   14000c70f:	add    BYTE PTR [rcx],al
   14000c711:	add    BYTE PTR [rbx+0x0],dl
   14000c714:	je     0x14000c716
   14000c716:	jb     0x14000c718
   14000c718:	imul   eax,DWORD PTR [rax],0x67006e
   14000c71e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c722:	ins    BYTE PTR es:[rdi],dx
   14000c723:	add    BYTE PTR [rbp+0x0],ah
   14000c726:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c72a:	data16 add BYTE PTR [rdi+0x0],ch
   14000c72e:	add    BYTE PTR [rax],al
   14000c730:	(bad)  
   14000c731:	add    al,BYTE PTR [rax]
   14000c733:	add    BYTE PTR [rcx],al
   14000c735:	add    BYTE PTR [rax],dh
   14000c737:	add    BYTE PTR [rax+rax*1],dh
   14000c73a:	xor    BYTE PTR [rax],al
   14000c73c:	cmp    DWORD PTR [rax],eax
   14000c73e:	xor    BYTE PTR [rax],al
   14000c740:	xor    al,0x0
   14000c742:	rex.X add BYTE PTR [rax],sil
   14000c745:	add    BYTE PTR [rax],al
   14000c747:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000c74b:	add    BYTE PTR [rcx],al
   14000c74d:	add    BYTE PTR [rbx+0x0],al
   14000c750:	outs   dx,DWORD PTR ds:[rsi]
   14000c751:	add    BYTE PTR [rbp+0x0],ch
   14000c754:	jo     0x14000c756
   14000c756:	(bad)  
   14000c757:	add    BYTE PTR [rsi+0x0],ch
   14000c75a:	jns    0x14000c75c
   14000c75c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c760:	ins    DWORD PTR es:[rdi],dx
   14000c761:	add    BYTE PTR [rbp+0x0],ah
   14000c764:	add    BYTE PTR [rax],al
   14000c766:	add    BYTE PTR [rax],al
   14000c768:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c76c:	movsxd eax,DWORD PTR [rax]
   14000c76e:	jb     0x14000c770
   14000c770:	outs   dx,DWORD PTR ds:[rsi]
   14000c771:	add    BYTE PTR [rbx+0x0],dh
   14000c774:	outs   dx,DWORD PTR ds:[rsi]
   14000c775:	add    BYTE PTR [rsi+0x0],ah
   14000c778:	je     0x14000c77a
   14000c77a:	and    BYTE PTR [rax],al
   14000c77c:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c780:	jb     0x14000c782
   14000c782:	jo     0x14000c784
   14000c784:	outs   dx,DWORD PTR ds:[rsi]
   14000c785:	add    BYTE PTR [rdx+0x0],dh
   14000c788:	(bad)  
   14000c789:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c78d:	add    BYTE PTR [rdi+0x0],ch
   14000c790:	outs   dx,BYTE PTR ds:[rsi]
   14000c791:	add    BYTE PTR [rax],al
   14000c793:	add    BYTE PTR [rdx+0x0],dh
   14000c796:	and    eax,0x46000100
   14000c79b:	add    BYTE PTR [rcx+0x0],ch
   14000c79e:	ins    BYTE PTR es:[rdi],dx
   14000c79f:	add    BYTE PTR [rbp+0x0],ah
   14000c7a2:	add    BYTE PTR [rbp+0x0],r12b
   14000c7a6:	jae    0x14000c7a8
   14000c7a8:	movsxd eax,DWORD PTR [rax]
   14000c7aa:	jb     0x14000c7ac
   14000c7ac:	imul   eax,DWORD PTR [rax],0x740070
   14000c7b2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c7b8:	add    BYTE PTR [rax],al
   14000c7ba:	add    BYTE PTR [rax],al
   14000c7bc:	rex.XB add BYTE PTR [r10+0x0],sil
   14000c7c0:	add    BYTE PTR gs:[rax+rax*1+0x65],ah
   14000c7c5:	add    BYTE PTR [rsi+0x0],ch
   14000c7c8:	je     0x14000c7ca
   14000c7ca:	imul   eax,DWORD PTR [rax],0x6c0061
   14000c7d0:	and    BYTE PTR [rax],al
   14000c7d2:	rex.X add BYTE PTR [rcx+0x0],spl
   14000c7d6:	movsxd eax,DWORD PTR [rax]
   14000c7d8:	imul   eax,DWORD PTR [rax],0x75
   14000c7db:	add    BYTE PTR [rax+0x0],dh
   14000c7de:	and    BYTE PTR [rax],al
   14000c7e0:	(bad)  
   14000c7e1:	add    BYTE PTR [rsi+0x0],ch
   14000c7e4:	add    BYTE PTR fs:[rax],ah
   14000c7e7:	add    BYTE PTR [rdx+0x0],dl
   14000c7ea:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c7ee:	je     0x14000c7f0
   14000c7f0:	outs   dx,DWORD PTR ds:[rsi]
   14000c7f1:	add    BYTE PTR [rdx+0x0],dh
   14000c7f4:	add    BYTE PTR gs:[rax],ah
   14000c7f7:	add    BYTE PTR [rdi+0x0],dl
   14000c7fa:	imul   eax,DWORD PTR [rax],0x61007a
   14000c800:	jb     0x14000c802
   14000c802:	add    BYTE PTR fs:[rax],al
   14000c805:	add    BYTE PTR [rax],al
   14000c807:	add    BYTE PTR [rsi+0x0],ah
   14000c80a:	and    eax,DWORD PTR [rax]
   14000c80c:	add    DWORD PTR [rax],eax
   14000c80e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000c812:	ins    BYTE PTR es:[rdi],dx
   14000c813:	add    BYTE PTR [rbp+0x0],ah
   14000c816:	push   rsi
   14000c817:	add    BYTE PTR [rbp+0x0],ah
   14000c81a:	jb     0x14000c81c
   14000c81c:	jae    0x14000c81e
   14000c81e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c824:	add    BYTE PTR [rax],al
   14000c826:	add    BYTE PTR [rax],al
   14000c828:	xor    DWORD PTR [rax],eax
   14000c82a:	xor    BYTE PTR [rax],al
   14000c82c:	add    BYTE PTR cs:[rax],dh
   14000c82f:	add    BYTE PTR [rsi],ch
   14000c831:	add    BYTE PTR [rcx],dh
   14000c833:	add    BYTE PTR [rax],dh
   14000c835:	add    BYTE PTR [rdx],dh
   14000c837:	add    BYTE PTR [rax+rax*1],dh
   14000c83a:	xor    BYTE PTR [rax],al
   14000c83c:	add    BYTE PTR cs:[rcx],dh
   14000c83f:	add    BYTE PTR [rsi],dh
   14000c841:	add    BYTE PTR [rbx],dh
   14000c843:	add    BYTE PTR [rax],bh
   14000c845:	add    BYTE PTR [rax+rax*1],dh
   14000c848:	and    BYTE PTR [rax],al
   14000c84a:	sub    BYTE PTR [rax],al
   14000c84c:	je     0x14000c84e
   14000c84e:	push   0x2e003100
   14000c853:	add    BYTE PTR [rcx],dh
   14000c855:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700f85b
   14000c85b:	add    BYTE PTR [rax],dh
   14000c85d:	add    BYTE PTR [rcx],bh
   14000c85f:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700f965
   14000c865:	add    BYTE PTR [rax],dh
   14000c867:	add    BYTE PTR [rax],dh
   14000c869:	add    BYTE PTR [rcx],ch
   14000c86b:	add    BYTE PTR [rax],al
   14000c86d:	add    BYTE PTR [rax],al
   14000c86f:	add    BYTE PTR [rax],bh
   14000c871:	add    BYTE PTR [rax+rax*1],cl
   14000c874:	add    DWORD PTR [rax],eax
   14000c876:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c87a:	je     0x14000c87c
   14000c87c:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c880:	outs   dx,BYTE PTR ds:[rsi]
   14000c881:	add    BYTE PTR [rcx+0x0],ah
   14000c884:	ins    BYTE PTR es:[rdi],dx
   14000c885:	add    BYTE PTR [rsi+0x0],cl
   14000c888:	(bad)  
   14000c889:	add    BYTE PTR [rbp+0x0],ch
   14000c88c:	add    BYTE PTR gs:[rax],al
   14000c88f:	add    BYTE PTR [rbx+0x0],ah
   14000c892:	jb     0x14000c894
   14000c894:	add    BYTE PTR gs:[rax+rax*1+0x77],ah
   14000c899:	add    BYTE PTR [rcx+0x0],ch
   14000c89c:	jp     0x14000c89e
   14000c89e:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c8a2:	js     0x14000c8a4
   14000c8a4:	add    BYTE PTR gs:[rax],al
   14000c8a7:	add    BYTE PTR [rax+0x1002e00],al
   14000c8ad:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000c8b1:	add    BYTE PTR [rdi+0x0],ah
   14000c8b4:	(bad)  
   14000c8b5:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000c8b9:	add    BYTE PTR [rdi+0x0],ch
   14000c8bc:	jo     0x14000c8be
   14000c8be:	jns    0x14000c8c0
   14000c8c0:	jb     0x14000c8c2
   14000c8c2:	imul   eax,DWORD PTR [rax],0x680067
   14000c8c8:	je     0x14000c8ca
   14000c8ca:	add    BYTE PTR [rax],al
   14000c8cc:	test   eax,0x4d002000
   14000c8d1:	add    BYTE PTR [rcx+0x0],ch
   14000c8d4:	movsxd eax,DWORD PTR [rax]
   14000c8d6:	jb     0x14000c8d8
   14000c8d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c8d9:	add    BYTE PTR [rbx+0x0],dh
   14000c8dc:	outs   dx,DWORD PTR ds:[rsi]
   14000c8dd:	add    BYTE PTR [rsi+0x0],ah
   14000c8e0:	je     0x14000c8e2
   14000c8e2:	and    BYTE PTR [rax],al
   14000c8e4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000c8e8:	jb     0x14000c8ea
   14000c8ea:	jo     0x14000c8ec
   14000c8ec:	outs   dx,DWORD PTR ds:[rsi]
   14000c8ed:	add    BYTE PTR [rdx+0x0],dh
   14000c8f0:	(bad)  
   14000c8f1:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c8f5:	add    BYTE PTR [rdi+0x0],ch
   14000c8f8:	outs   dx,BYTE PTR ds:[rsi]
   14000c8f9:	add    BYTE PTR [rsi],ch
   14000c8fb:	add    BYTE PTR [rax],ah
   14000c8fd:	add    BYTE PTR [rcx+0x0],al
   14000c900:	ins    BYTE PTR es:[rdi],dx
   14000c901:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000c905:	add    BYTE PTR [rdx+0x0],dh
   14000c908:	imul   eax,DWORD PTR [rax],0x680067
   14000c90e:	je     0x14000c910
   14000c910:	jae    0x14000c912
   14000c912:	and    BYTE PTR [rax],al
   14000c914:	jb     0x14000c916
   14000c916:	add    BYTE PTR gs:[rbx+0x0],dh
   14000c91a:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c91e:	jbe    0x14000c920
   14000c920:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000c925:	add    BYTE PTR [rax],al
   14000c927:	add    BYTE PTR [rax+0x0],al
   14000c92a:	or     al,0x0
   14000c92c:	add    DWORD PTR [rax],eax
   14000c92e:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   14000c932:	imul   eax,DWORD PTR [rax],0x690067
   14000c938:	outs   dx,BYTE PTR ds:[rsi]
   14000c939:	add    BYTE PTR [rcx+0x0],ah
   14000c93c:	ins    BYTE PTR es:[rdi],dx
   14000c93d:	add    BYTE PTR [rsi+0x0],al
   14000c940:	imul   eax,DWORD PTR [rax],0x65006c
   14000c946:	outs   dx,BYTE PTR ds:[rsi]
   14000c947:	add    BYTE PTR [rcx+0x0],ah
   14000c94a:	ins    DWORD PTR es:[rdi],dx
   14000c94b:	add    BYTE PTR [rbp+0x0],ah
   14000c94e:	add    BYTE PTR [rax],al
   14000c950:	movsxd eax,DWORD PTR [rax]
   14000c952:	jb     0x14000c954
   14000c954:	add    BYTE PTR gs:[rax+rax*1+0x77],ah
   14000c959:	add    BYTE PTR [rcx+0x0],ch
   14000c95c:	jp     0x14000c95e
   14000c95e:	add    BYTE PTR cs:[rbp+0x0],ah
   14000c962:	js     0x14000c964
   14000c964:	add    BYTE PTR gs:[rax],al
   14000c967:	add    BYTE PTR [rdx+0x0],ch
   14000c96a:	and    eax,0x50000100
   14000c96f:	add    BYTE PTR [rdx+0x0],dh
   14000c972:	outs   dx,DWORD PTR ds:[rsi]
   14000c973:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c977:	add    BYTE PTR [rbx+0x0],ah
   14000c97a:	je     0x14000c97c
   14000c97c:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000c980:	ins    DWORD PTR es:[rdi],dx
   14000c981:	add    BYTE PTR [rbp+0x0],ah
   14000c984:	add    BYTE PTR [rax],al
   14000c986:	add    BYTE PTR [rax],al
   14000c988:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000c98c:	movsxd eax,DWORD PTR [rax]
   14000c98e:	jb     0x14000c990
   14000c990:	outs   dx,DWORD PTR ds:[rsi]
   14000c991:	add    BYTE PTR [rbx+0x0],dh
   14000c994:	outs   dx,DWORD PTR ds:[rsi]
   14000c995:	add    BYTE PTR [rsi+0x0],ah
   14000c998:	je     0x14000c99a
   14000c99a:	scas   al,BYTE PTR es:[rdi]
   14000c99b:	add    BYTE PTR [rax],ah
   14000c99d:	add    BYTE PTR [rdi+0x0],dl
   14000c9a0:	imul   eax,DWORD PTR [rax],0x64006e
   14000c9a6:	outs   dx,DWORD PTR ds:[rsi]
   14000c9a7:	add    BYTE PTR [rdi+0x0],dh
   14000c9aa:	jae    0x14000c9ac
   14000c9ac:	scas   al,BYTE PTR es:[rdi]
   14000c9ad:	add    BYTE PTR [rax],ah
   14000c9af:	add    BYTE PTR [rdi+0x0],cl
   14000c9b2:	jo     0x14000c9b4
   14000c9b4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000c9b8:	(bad)  
   14000c9b9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c9bd:	add    BYTE PTR [rsi+0x0],ch
   14000c9c0:	add    BYTE PTR [eax],ah
   14000c9c3:	add    BYTE PTR [rbx+0x0],dl
   14000c9c6:	jns    0x14000c9c8
   14000c9c8:	jae    0x14000c9ca
   14000c9ca:	je     0x14000c9cc
   14000c9cc:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c9d0:	add    BYTE PTR [rax],al
   14000c9d2:	add    BYTE PTR [rax],al
   14000c9d4:	rex.RX add BYTE PTR [rcx],r10b
   14000c9d7:	add    BYTE PTR [rcx],al
   14000c9d9:	add    BYTE PTR [rax+0x0],dl
   14000c9dc:	jb     0x14000c9de
   14000c9de:	outs   dx,DWORD PTR ds:[rsi]
   14000c9df:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000c9e3:	add    BYTE PTR [rbx+0x0],ah
   14000c9e6:	je     0x14000c9e8
   14000c9e8:	push   rsi
   14000c9e9:	add    BYTE PTR [rbp+0x0],ah
   14000c9ec:	jb     0x14000c9ee
   14000c9ee:	jae    0x14000c9f0
   14000c9f0:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c9f6:	add    BYTE PTR [rax],al
   14000c9f8:	xor    DWORD PTR [rax],eax
   14000c9fa:	xor    BYTE PTR [rax],al
   14000c9fc:	add    BYTE PTR cs:[rax],dh
   14000c9ff:	add    BYTE PTR [rsi],ch
   14000ca01:	add    BYTE PTR [rcx],dh
   14000ca03:	add    BYTE PTR [rax],dh
   14000ca05:	add    BYTE PTR [rdx],dh
   14000ca07:	add    BYTE PTR [rax+rax*1],dh
   14000ca0a:	xor    BYTE PTR [rax],al
   14000ca0c:	add    BYTE PTR cs:[rcx],dh
   14000ca0f:	add    BYTE PTR [rsi],dh
   14000ca11:	add    BYTE PTR [rbx],dh
   14000ca13:	add    BYTE PTR [rax],bh
   14000ca15:	add    BYTE PTR [rax+rax*1],dh
   14000ca18:	add    BYTE PTR [rax],al
   14000ca1a:	add    BYTE PTR [rax],al
   14000ca1c:	add    BYTE PTR [rax],r8b
   14000ca1f:	add    BYTE PTR [rcx],al
   14000ca21:	add    BYTE PTR [rsi+0x0],dl
   14000ca24:	(bad)  
   14000ca25:	add    BYTE PTR [rdx+0x0],dh
   14000ca28:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000ca2c:	ins    BYTE PTR es:[rdi],dx
   14000ca2d:	add    BYTE PTR [rbp+0x0],ah
   14000ca30:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000ca34:	data16 add BYTE PTR [rdi+0x0],ch
   14000ca38:	add    BYTE PTR [rax],al
   14000ca3a:	add    BYTE PTR [rax],al
   14000ca3c:	and    al,0x0
   14000ca3e:	add    al,0x0
   14000ca40:	add    BYTE PTR [rax],al
   14000ca42:	push   rsp
   14000ca43:	add    BYTE PTR [rdx+0x0],dh
   14000ca46:	(bad)  
   14000ca47:	add    BYTE PTR [rsi+0x0],ch
   14000ca4a:	jae    0x14000ca4c
   14000ca4c:	ins    BYTE PTR es:[rdi],dx
   14000ca4d:	add    BYTE PTR [rcx+0x0],ah
   14000ca50:	je     0x14000ca52
   14000ca52:	imul   eax,DWORD PTR [rax],0x6e006f
   14000ca58:	add    BYTE PTR [rax],al
   14000ca5a:	add    BYTE PTR [rax],al
   14000ca5c:	or     DWORD PTR [rax+rsi*4],eax
   14000ca5f:	add    al,0x28
   14000ca61:	add    BYTE PTR [rax],al
   14000ca63:	add    BYTE PTR [rax],dl
   14000ca65:	add    BYTE PTR [rax],al
   14000ca67:	add    BYTE PTR [rax],ah
   14000ca69:	add    BYTE PTR [rax],al
   14000ca6b:	add    BYTE PTR [rcx],al
   14000ca6d:	add    BYTE PTR [rax+rax*1],al
   14000ca70:	add    BYTE PTR [rax],al
   14000ca72:	add    BYTE PTR [rax],al
   14000ca74:	add    BYTE PTR [rax],0x0
	...
   14000ca8b:	add    BYTE PTR [rax],al
   14000ca8d:	add    BYTE PTR [rax+0x800000],al
   14000ca93:	add    BYTE PTR [rax],al
   14000ca95:	add    BYTE PTR [rax+0x8000],0x0
   14000ca9c:	add    BYTE PTR [rax],0x80
   14000ca9f:	add    BYTE PTR [rax-0x7fffff80],al
   14000caa5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000caac:	add    BYTE PTR [rax],al
   14000caae:	inc    DWORD PTR [rax]
   14000cab0:	add    bh,bh
   14000cab2:	add    BYTE PTR [rax],al
   14000cab4:	add    bh,bh
   14000cab6:	inc    DWORD PTR [rax]
   14000cab8:	inc    DWORD PTR [rax]
   14000caba:	add    BYTE PTR [rax],al
   14000cabc:	inc    DWORD PTR [rax]
   14000cabe:	inc    DWORD PTR [rax]
   14000cac0:	(bad)  
   14000cac1:	inc    DWORD PTR [rax]
   14000cac3:	add    bh,bh
   14000cac5:	(bad)  
   14000cac6:	inc    DWORD PTR [rax]
   14000cac8:	add    BYTE PTR [rax],al
   14000caca:	add    BYTE PTR [rax],al
   14000cacc:	add    BYTE PTR [rax],al
   14000cace:	add    esi,DWORD PTR [rbx+0x0]
   14000cad1:	add    BYTE PTR [rax],al
   14000cad3:	add    BYTE PTR [rax],al
   14000cad5:	add    BYTE PTR [rbx],bh
   14000cad7:	add    DWORD PTR [rax],0x0
   14000cada:	add    BYTE PTR [rax],al
   14000cadc:	add    BYTE PTR [rbx],al
   14000cade:	mov    DWORD PTR [rax+0x0],eax
   14000cae4:	add    BYTE PTR [rax],bh
   14000cae6:	mov    bh,0x0
   14000cae8:	add    BYTE PTR [rax],al
   14000caea:	add    BYTE PTR [rax],al
   14000caec:	add    ecx,DWORD PTR [rbx+0x70]
   14000caf2:	add    BYTE PTR [rax],al
   14000caf4:	cmp    BYTE PTR [rbp+0x7000000],dh
   14000cafa:	jae    0x14000cb6f
   14000cafc:	mov    eax,0x8000010
   14000cb01:	cmp    BYTE PTR [rdi+0xb5b8],dh
   14000cb07:	add    BYTE PTR [rdi],al
   14000cb09:	mov    eax,0x838bb7
   14000cb0e:	add    BYTE PTR [rax],al
   14000cb10:	mov    edi,DWORD PTR [rcx-0x75]
   14000cb13:	jnp    0x14000ca98
   14000cb15:	add    BYTE PTR [rax],al
   14000cb17:	add    BYTE PTR [rax+0x70],bh
   14000cb1a:	jnp    0x14000caa5
   14000cb1c:	mov    ch,0x0
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	cmp    esi,DWORD PTR [rax+0x7]
   14000cb23:	mov    eax,0x83
   14000cb28:	mov    BYTE PTR [rax+0x787b00],bh
   14000cb2e:	add    BYTE PTR [rax],al
   14000cb30:	add    ecx,DWORD PTR [rbx+0x90b877]
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	or     BYTE PTR [rax+0x8097b8],bh
   14000cb3e:	add    BYTE PTR [rax],al
   14000cb40:	add    BYTE PTR [rax],cl
   14000cb42:	xchg   edi,eax
   14000cb43:	add    BYTE PTR [rax],0x0
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	(bad)  
   14000cb49:	clc    
   14000cb4a:	add    BYTE PTR [rax],al
   14000cb4c:	push   rax
   14000cb4e:	add    BYTE PTR [rax],al
   14000cb50:	jmp    rcx
   14000cb52:	add    BYTE PTR [rax],al
   14000cb54:	inc    ebx
   14000cb56:	add    BYTE PTR [rax],al
   14000cb58:	inc    DWORD PTR [rdi+0xfff0000]
   14000cb5e:	add    BYTE PTR [rax],al
   14000cb60:	loopne 0x14000cb81
   14000cb62:	add    BYTE PTR [rax],al
   14000cb64:	cmp    BYTE PTR [rdi],0x0
   14000cb67:	add    BYTE PTR [rax+0x3f],al
   14000cb6d:	(bad)  
   14000cb6e:	add    BYTE PTR [rax],al
   14000cb70:	adc    BYTE PTR [rdi],bh
   14000cb72:	add    BYTE PTR [rax],al
   14000cb74:	sbb    BYTE PTR [rdi],bh
   14000cb76:	add    BYTE PTR [rax],al
   14000cb78:	or     al,0x3f
   14000cb7a:	add    BYTE PTR [rax],al
   14000cb7c:	cmp    BYTE PTR [rdi+0x0],0x0
   14000cb80:	cmp    BYTE PTR [rdi+0x0],0x0
   14000cb84:	loope  0x14000cb85
   14000cb86:	add    BYTE PTR [rax],al
   14000cb88:	sub    BYTE PTR [rax],al
   14000cb8a:	add    BYTE PTR [rax],al
   14000cb8c:	adc    BYTE PTR [rax],al
   14000cb8e:	add    BYTE PTR [rax],al
   14000cb90:	and    BYTE PTR [rax],al
   14000cb92:	add    BYTE PTR [rax],al
   14000cb94:	add    DWORD PTR [rax],eax
   14000cb96:	or     BYTE PTR [rax],al
   14000cb98:	add    BYTE PTR [rax],al
   14000cb9a:	add    BYTE PTR [rax],al
   14000cb9c:	add    BYTE PTR [rcx],al
	...
   14000cba6:	add    BYTE PTR [rax],al
   14000cba8:	add    BYTE PTR [rcx],al
   14000cbaa:	add    BYTE PTR [rax],al
   14000cbac:	add    BYTE PTR [rcx],al
   14000cbae:	add    BYTE PTR [rax],al
   14000cbb0:	add    BYTE PTR [rax],al
   14000cbb2:	add    BYTE PTR [rax],al
   14000cbb4:	(bad)  
   14000cbb5:	pop    rsp
   14000cbb6:	jp     0x14000cbb8
   14000cbb8:	rex.RB (bad) 
   14000cbba:	jle    0x14000cbbc
   14000cbbc:	push   rax
   14000cbbd:	gs jle 0x14000cbc0
   14000cbc0:	cmp    ebx,DWORD PTR [rbx-0x80]
   14000cbc3:	add    BYTE PTR [rcx],bh
   14000cbc5:	pop    rsi
   14000cbc6:	xchg   BYTE PTR [rax],al
   14000cbc8:	(bad)  
   14000cbc9:	(bad)  
   14000cbca:	mov    WORD PTR [rax],es
   14000cbcc:	xor    ch,BYTE PTR [rdx+riz*4+0x0]
   14000cbd0:	sub    eax,0x4100b878
   14000cbd5:	push   0x68500089
   14000cbda:	add    DWORD PTR [rax],0x47
   14000cbdd:	ja     0x14000cb73
   14000cbdf:	add    BYTE PTR [rbp+0x7e],al
   14000cbe2:	test   al,0x0
   14000cbe4:	pop    rcx
   14000cbe5:	jg     0x14000cb89
   14000cbe7:	add    BYTE PTR [rdi],ah
   14000cbe9:	jle    0x14000cbb2
   14000cbeb:	add    BYTE PTR [rcx+rax*4-0x52],cl
   14000cbef:	add    BYTE PTR [rcx-0x80],bl
   14000cbf2:	movabs ds:0xb3884800ae875900,al
   14000cbfb:	add    BYTE PTR [rax-0x79],dl
   14000cbfe:	mov    ch,0x0
   14000cc00:	pop    rcx
   14000cc01:	mov    dh,BYTE PTR [rax+rax*1+0xba8a50]
   14000cc08:	jge    0x14000cb9c
   14000cc0a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000cc0b:	add    BYTE PTR [rbp-0x5f],bh
   14000cc0e:	mov    edi,0xe9a53d00
   14000cc13:	add    BYTE PTR [rbx-0x64],cl
   14000cc16:	leave  
   14000cc17:	add    BYTE PTR [rsi-0x65],cl
   14000cc1a:	(bad)  
   14000cc1b:	add    BYTE PTR [rsi-0x64],cl
   14000cc1e:	int    0x0
   14000cc20:	js     0x14000cbc1
   14000cc22:	ret    
   14000cc23:	add    BYTE PTR [rbp-0x5b],bl
   14000cc26:	enter  0x4300,0xaa
   14000cc2a:	fild   DWORD PTR [rax]
   14000cc2c:	rex.R test al,0xde
   14000cc2f:	add    BYTE PTR [rcx-0x4e],bl
   14000cc32:	fld    DWORD PTR [rax]
   14000cc34:	movabs eax,gs:0xa37c00c3a37c00c2
   14000cc3e:	(bad)  
   14000cc3f:	add    BYTE PTR [rcx+rbp*4-0x32],bh
   14000cc43:	add    BYTE PTR [rax-0x55],cl
   14000cc46:	in     eax,0x0
   14000cc48:	rex.RX stos BYTE PTR es:[rdi],al
   14000cc4a:	jmp    0x14000cc4c
   14000cc4c:	rex.RX stos BYTE PTR es:[rdi],al
   14000cc4e:	in     al,dx
   14000cc4f:	add    BYTE PTR [rdi-0x54],cl
   14000cc52:	out    dx,eax
   14000cc53:	add    BYTE PTR [rcx-0x54],dl
   14000cc56:	out    dx,al
   14000cc57:	add    BYTE PTR [rsi-0x4c],cl
   14000cc5a:	out    dx,eax
   14000cc5b:	add    BYTE PTR [rdi-0x41],bl
   14000cc5e:	loope  0x14000cc60
   14000cc60:	push   rdx
   14000cc61:	mov    cl,0xef
   14000cc63:	add    BYTE PTR [rbx-0x45],bl
   14000cc66:	jmp    0x129bc286b
   14000cc6b:	add    BYTE PTR [rsi-0x42],dl
   14000cc6e:	inc    DWORD PTR [rax]
   14000cc70:	rex.WR (bad) 
   14000cc72:	(bad)  
   14000cc73:	add    BYTE PTR [rbx-0x3e],dl
   14000cc76:	test   BYTE PTR [rax],0x5d
   14000cc79:	shl    bl,0x0
   14000cc7c:	pop    rcx
   14000cc7d:	ret    
   14000cc7e:	inc    DWORD PTR [rax]
   14000cc80:	pop    rcx
   14000cc81:	(bad)  
   14000cc82:	inc    DWORD PTR [rax]
   14000cc84:	push   rdx
   14000cc85:	(bad)  
   14000cc86:	inc    DWORD PTR [rax]
   14000cc88:	pop    rax
   14000cc89:	retf   0xff
   14000cc8c:	pop    rbp
   14000cc8d:	leave  
   14000cc8e:	inc    DWORD PTR [rax]
   14000cc90:	pop    rsp
   14000cc91:	iret   
   14000cc92:	inc    DWORD PTR [rax]
   14000cc94:	pop    rdi
   14000cc95:	sar    edi,cl
   14000cc97:	add    BYTE PTR [rsi-0x22],bl
   14000cc9a:	cld    
   14000cc9b:	add    BYTE PTR [rbx-0x33],ah
   14000cc9e:	test   BYTE PTR [rax],0x6a
   14000cca1:	(bad)  
   14000cca2:	lock add BYTE PTR [rdx-0x2b],ch
   14000cca6:	hlt    
   14000cca7:	add    BYTE PTR [rbp-0x25],ch
   14000ccaa:	cmc    
   14000ccab:	add    BYTE PTR [rdx+riz*8-0x3],dl
   14000ccaf:	add    BYTE PTR [rbx-0x18],dh
   14000ccb2:	inc    DWORD PTR [rax]
   14000ccb4:	xchg   BYTE PTR [rbx-0x4c76ff38],ch
   14000ccba:	iret   
   14000ccbb:	add    BYTE PTR [rbp-0x62ff374c],bl
   14000ccc1:	rcr    ah,0x0
	...
   14000cfac:	(bad)  
   14000cfad:	(bad)  
   14000cfae:	inc    DWORD PTR [rax]
	...
   14000cfbc:	add    BYTE PTR [rsi],cl
   14000cfbe:	(bad)  
   14000cfbf:	(bad)  
	...
   14000cfcc:	(bad)  
   14000cfcd:	sbb    BYTE PTR [rdi],bh
   14000cfcf:	add    eax,0x0
   14000cfd4:	add    BYTE PTR [rax],al
   14000cfd6:	add    BYTE PTR [rax],al
   14000cfd8:	add    BYTE PTR [rax],al
   14000cfda:	add    BYTE PTR [rsi],cl
   14000cfdc:	es (bad) 
   14000cfde:	sbb    al,0x0
	...
   14000cfe8:	add    BYTE PTR [rax],al
   14000cfea:	(bad)  
   14000cfeb:	es (bad) 
   14000cfed:	add    eax,0x0
   14000cff2:	add    BYTE PTR [rax],al
   14000cff4:	add    BYTE PTR [rax],al
   14000cff6:	add    BYTE PTR [rax],al
   14000cff8:	add    BYTE PTR [rsi],cl
   14000cffa:	and    eax,0x4230
	...
   14000d007:	add    BYTE PTR [rsi],cl
   14000d009:	sub    bh,BYTE PTR [rdi]
   14000d00b:	add    eax,0x0
   14000d010:	add    BYTE PTR [rax],al
   14000d012:	add    BYTE PTR [rsi],dl
   14000d014:	or     al,BYTE PTR [rcx]
   14000d016:	or     DWORD PTR [rax],ecx
   14000d018:	(bad)  
   14000d019:	(bad)  
   14000d01a:	add    DWORD PTR [rax],eax
   14000d01c:	add    BYTE PTR [rax],al
   14000d01e:	add    BYTE PTR [rax],al
   14000d020:	add    BYTE PTR [rbx+0xc],al
   14000d023:	sbb    ch,BYTE PTR [rcx+rbp*1]
   14000d026:	xor    bh,BYTE PTR [rbx]
   14000d028:	cmp    al,BYTE PTR [rip+0x0]        # 0x14000d02e
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	add    BYTE PTR [rdx],dl
   14000d032:	cs (bad) 
   14000d034:	xor    ebp,DWORD PTR [rdi]
   14000d036:	(bad)  
   14000d037:	cmp    DWORD PTR [rdx],edi
   14000d039:	or     eax,DWORD PTR [rax]
   14000d03b:	add    BYTE PTR [rax],al
   14000d03d:	add    BYTE PTR [rax],al
   14000d03f:	add    BYTE PTR [rbx],ah
   14000d041:	and    BYTE PTR [rcx],ah
   14000d043:	or     eax,0x37353337
   14000d048:	xor    DWORD PTR [rdx],eax
   14000d04a:	add    BYTE PTR [rax],al
   14000d04c:	add    BYTE PTR [rax],al
   14000d04e:	add    BYTE PTR [rax],al
   14000d050:	adc    edi,DWORD PTR [rip+0x370d0017]        # 0x1770dd06d
   14000d056:	xor    ebp,DWORD PTR [rdi]
   14000d058:	sub    BYTE PTR [rbx],al
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	add    BYTE PTR [rax],al
   14000d05e:	add    BYTE PTR [rax],al
   14000d060:	adc    eax,0x143e
   14000d065:	adc    BYTE PTR [rdi],dh
   14000d067:	xor    ebp,DWORD PTR [rdx+rcx*1]
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	add    BYTE PTR [rax],al
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	and    al,0x2b
   14000d072:	rex
   14000d073:	add    BYTE PTR [r8],al
   14000d076:	adc    BYTE PTR [rdi],dh
   14000d078:	sbb    dl,BYTE PTR [rsi]
   14000d07a:	add    BYTE PTR [rax],al
   14000d07c:	add    BYTE PTR [rax],al
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	add    BYTE PTR [rdx],bl
   14000d082:	cmp    al,0x40
   14000d084:	movups XMMWORD PTR [rip+0xc2e],xmm3        # 0x14000dcb9
   14000d08b:	add    BYTE PTR [rax],al
   14000d08d:	add    BYTE PTR [rax],al
   14000d08f:	add    BYTE PTR [rax],al
   14000d091:	sbb    r13b,BYTE PTR [rbx]
   14000d094:	ds cmp eax,0x431220
	...
   14000d0a2:	add    BYTE PTR [rdx*1+0x2313],ah
   14000d0a9:	add    BYTE PTR [rax],al
   14000d0ab:	add    BYTE PTR [rax],al
   14000d0ad:	add    BYTE PTR [rax],al
   14000d0af:	add    bh,bh
   14000d0b1:	clc    
   14000d0b2:	add    BYTE PTR [rax],al
   14000d0b4:	push   rax
   14000d0b6:	add    BYTE PTR [rax],al
   14000d0b8:	jmp    rcx
   14000d0ba:	add    BYTE PTR [rax],al
   14000d0bc:	inc    ebx
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	inc    DWORD PTR [rdi+0xfff0000]
   14000d0c6:	add    BYTE PTR [rax],al
   14000d0c8:	loopne 0x14000d0e9
   14000d0ca:	add    BYTE PTR [rax],al
   14000d0cc:	cmp    BYTE PTR [rdi],0x0
   14000d0cf:	add    BYTE PTR [rax+0x3f],al
   14000d0d5:	(bad)  
   14000d0d6:	add    BYTE PTR [rax],al
   14000d0d8:	adc    BYTE PTR [rdi],bh
   14000d0da:	add    BYTE PTR [rax],al
   14000d0dc:	sbb    BYTE PTR [rdi],bh
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	or     al,0x3f
   14000d0e2:	add    BYTE PTR [rax],al
   14000d0e4:	cmp    BYTE PTR [rdi+0x0],0x0
   14000d0e8:	cmp    BYTE PTR [rdi+0x0],0x0
   14000d0ec:	loope  0x14000d0ed
   14000d0ee:	add    BYTE PTR [rax],al
   14000d0f0:	sub    BYTE PTR [rax],al
   14000d0f2:	add    BYTE PTR [rax],al
   14000d0f4:	adc    BYTE PTR [rax],al
   14000d0f6:	add    BYTE PTR [rax],al
   14000d0f8:	and    BYTE PTR [rax],al
   14000d0fa:	add    BYTE PTR [rax],al
   14000d0fc:	add    DWORD PTR [rax],eax
   14000d0fe:	and    BYTE PTR [rax],al
   14000d100:	add    BYTE PTR [rax],al
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	add    al,0x0
	...
   14000d14b:	add    BYTE PTR [rdi],ah
   14000d14d:	jle    0x14000d116
   14000d14f:	push   QWORD PTR [rdx]
   14000d151:	ins    BYTE PTR es:[rdi],dx
   14000d152:	movabs ds:0xff8c6137ff,al
	...
   14000d187:	add    BYTE PTR [rdi],ah
   14000d189:	jle    0x14000d152
   14000d18b:	(bad)  
   14000d18c:	cmp    eax,0x54ffe9a5
   14000d191:	loop   0x14000d190
   14000d193:	(bad)  
   14000d194:	cmp    DWORD PTR [rsi-0x7a],ebx
   14000d197:	inc    DWORD PTR [rax]
	...
   14000d1c1:	add    BYTE PTR [rax],al
   14000d1c3:	add    BYTE PTR [rdi],ah
   14000d1c5:	jle    0x14000d18e
   14000d1c7:	inc    DWORD PTR [rsi-0x56]
   14000d1ca:	jmp    0x14000d1cb
   14000d1cc:	rex.XB stos BYTE PTR es:[rdi],al
   14000d1ce:	(bad)  
   14000d1d0:	sub    BYTE PTR [rdi-0x60],ah
   14000d1d3:	movabs al,ds:0x0
	...
   14000d200:	(bad)  
   14000d201:	jle    0x14000d1ca
   14000d203:	inc    DWORD PTR [rsi-0x56]
   14000d206:	in     al,dx
   14000d207:	call   QWORD PTR [rdx+riz*8-0x3]
   14000d20b:	(bad)  
   14000d20c:	cmp    ebx,DWORD PTR [rbx-0x80]
   14000d20f:	inc    DWORD PTR [rax]
	...
   14000d239:	add    BYTE PTR [rax],al
   14000d23b:	add    BYTE PTR [rdi],ah
   14000d23d:	jle    0x14000d206
   14000d23f:	dec    DWORD PTR [rax-0x55]
   14000d242:	in     eax,0xff
   14000d244:	rex.WR (bad) 
   14000d246:	(bad)  
   14000d247:	jmp    FWORD PTR [rsi]
   14000d249:	jns    0x14000d1f5
   14000d24b:	pop    QWORD PTR [rax]
	...
   14000d275:	add    BYTE PTR [rax],al
   14000d277:	add    BYTE PTR [rdi],ah
   14000d279:	jle    0x14000d242
   14000d27b:	dec    DWORD PTR [rsi-0x4c]
   14000d27e:	out    dx,eax
   14000d27f:	call   QWORD PTR [rdx+riz*8-0x3]
   14000d283:	(bad)  
   14000d284:	cmp    ebx,DWORD PTR [rbx-0x80]
   14000d287:	inc    DWORD PTR [rax]
	...
   14000d299:	add    BYTE PTR [rax],al
   14000d29b:	add    BYTE PTR [rsi],bh
   14000d29d:	mov    eax,DWORD PTR gs:[rcx]
   14000d2a0:	ds (bad) 
   14000d2a2:	test   BYTE PTR [rsi+rdi*1+0x5d],bl
   14000d2a6:	jge    0x14000d253
   14000d2a8:	ds pop rax
   14000d2aa:	jbe    0x14000d292
   14000d2ac:	(bad)  
   14000d2ad:	pop    rsp
   14000d2ae:	jp     0x14000d2ae
   14000d2b0:	rex.B push 0x782dff89
   14000d2b6:	mov    eax,0xdea844ff
   14000d2bb:	call   QWORD PTR [rdx+riz*8-0x3]
   14000d2bf:	(bad)  
   14000d2c0:	cmp    ebx,DWORD PTR [rbx-0x80]
   14000d2c3:	inc    DWORD PTR [rax]
	...
   14000d2d5:	add    BYTE PTR [rax],al
   14000d2d7:	add    BYTE PTR [rip+0x3d01996f],bh        # 0x17d026c4c
   14000d2dd:	push   0xffffffffffffff92
   14000d2df:	add    BYTE PTR [rsi+0x7e],0xa8
   14000d2e3:	dec    DWORD PTR [rsi-0x65]
   14000d2e6:	(bad)  
   14000d2e7:	call   QWORD PTR [rdx-0x4f]
   14000d2ea:	out    dx,eax
   14000d2eb:	call   QWORD PTR [rcx-0x54]
   14000d2ee:	out    dx,al
   14000d2ef:	call   FWORD PTR [rbp-0x40]
   14000d2f2:	repz jmp QWORD PTR [rbx-0x33]
   14000d2f6:	idiv   bh
   14000d2f8:	pop    rbp
   14000d2f9:	(bad)  
   14000d2fb:	(bad)  
   14000d2fc:	cmp    ebx,DWORD PTR [rbx-0x80]
   14000d2ff:	inc    DWORD PTR [rax]
	...
   14000d315:	add    BYTE PTR [rax],al
   14000d317:	add    BYTE PTR [rip+0x485ca072],bh        # 0x1885d738f
   14000d31d:	mov    DWORD PTR [rbx-0x1644a301],esi
   14000d323:	call   FWORD PTR [rsi-0x36]
   14000d326:	(bad)  
   14000d327:	call   FWORD PTR [rcx-0x3d]
   14000d32a:	(bad)  
   14000d32b:	call   QWORD PTR [rsi-0x41]
   14000d32e:	(bad)  
   14000d32f:	call   FWORD PTR [rdi+rcx*8-0x1]
   14000d333:	call   FWORD PTR [rdi-0x2d]
   14000d336:	(bad)  
   14000d337:	call   FWORD PTR [rdi-0x22]
   14000d33a:	std    
   14000d33b:	(bad)  
   14000d33c:	(bad)  
   14000d33d:	jno    0x14000d2cf
   14000d33f:	hlt    
	...
   14000d358:	cmp    al,0x77
   14000d35a:	test   al,0xab
   14000d35c:	pop    rcx
   14000d35d:	mov    dl,0xd9
   14000d35f:	dec    DWORD PTR [rax-0x71]
   14000d362:	mov    bh,0xd6
   14000d364:	cmp    eax,0x5ed99269
   14000d369:	retf   0xffff
   14000d36c:	pop    rcx
   14000d36d:	(bad)  
   14000d36e:	(bad)  
   14000d36f:	call   QWORD PTR [rdx-0x32]
   14000d372:	(bad)  
   14000d373:	call   FWORD PTR [rax-0x36]
   14000d376:	(bad)  
   14000d377:	call   QWORD PTR [rbx-0x3e]
   14000d37a:	idiv   bh
   14000d37c:	cmp    dl,BYTE PTR [rdi+0x76]
   14000d37f:	lock add BYTE PTR [rax],al
	...
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	cmp    eax,0x6ae6ad7b
   14000d39d:	(bad)  
   14000d39e:	hlt    
   14000d39f:	(bad)  
   14000d3a0:	cmp    eax,0xaaa073
   14000d3a5:	add    BYTE PTR [rax],al
   14000d3a7:	add    BYTE PTR [rip+0x5ed99269],bh        # 0x19eda6616
   14000d3ad:	retf   0xffff
   14000d3b0:	pop    rcx
   14000d3b1:	ret    
   14000d3b2:	(bad)  
   14000d3b3:	call   QWORD PTR [rsi-0x42]
   14000d3b6:	(bad)  
   14000d3b7:	dec    DWORD PTR [rdi-0x54]
   14000d3ba:	out    dx,eax
   14000d3bb:	(bad)  
   14000d3bc:	ds push rbp
   14000d3be:	jno    0x14000d3a6
	...
   14000d3d8:	cmp    eax,0x6de6b37e
   14000d3dd:	fcomi  st,st(5)
   14000d3df:	(bad)  
   14000d3e0:	cmp    al,0x76
   14000d3e2:	test   al,0xd9
	...
   14000d3ec:	cmp    eax,0x5dd9926a
   14000d3f1:	leave  
   14000d3f2:	(bad)  
   14000d3f3:	call   FWORD PTR [rcx-0x3d]
   14000d3f6:	(bad)  
   14000d3f7:	call   QWORD PTR [rdx-0x4f]
   14000d3fa:	out    dx,eax
   14000d3fb:	(bad)  
   14000d3fc:	ds pop rax
   14000d3fe:	jbe    0x14000d3e6
	...
   14000d418:	cmp    al,0x81
   14000d41a:	mov    eax,0xe1bf5fab
   14000d41f:	push   QWORD PTR [rbx-0x18]
   14000d422:	(bad)  
   14000d423:	(bad)  
   14000d424:	cmp    al,0x77
   14000d426:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000d427:	popf   
	...
   14000d430:	cmp    eax,0x5dd9926a
   14000d435:	leave  
   14000d436:	(bad)  
   14000d437:	dec    DWORD PTR [rsi-0x64]
   14000d43a:	int    0xff
   14000d43c:	(bad)  
   14000d43d:	pop    rbp
   14000d43e:	jge    0x14000d3eb
	...
   14000d458:	cmp    al,0x83
   14000d45a:	mov    ebx,0xc99c4b5c
   14000d45f:	jmp    FWORD PTR [rdx-0x2b]
   14000d462:	lock push QWORD PTR [rbx-0x18]
   14000d466:	(bad)  
   14000d467:	(bad)  
   14000d468:	cmp    eax,0x3deba877
   14000d46d:	jb     0x14000d40f
   14000d46f:	(bad)  [rbp-0x64]
   14000d472:	ret    
   14000d473:	out    0x5b,eax
   14000d475:	mov    ebx,0x7e45ffe9
   14000d47a:	test   al,0xff
   14000d47c:	ds (bad) 
   14000d47e:	sbb    DWORD PTR [rax+rax*1+0x0],0x0
	...
   14000d497:	add    BYTE PTR [rbx+rax*4],bh
   14000d49a:	mov    ebx,0xbb833c01
   14000d49f:	or     BYTE PTR [rbx-0x64],0xca
   14000d4a3:	call   FWORD PTR [rdi-0x41]
   14000d4a6:	loope  0x14000d4a7
   14000d4a8:	ins    DWORD PTR es:[rdi],dx
   14000d4a9:	fcomi  st,st(5)
   14000d4ab:	jmp    FWORD PTR [rdx-0x2b]
   14000d4ae:	hlt    
   14000d4af:	call   FWORD PTR [rcx-0x4e]
   14000d4b2:	fcos   
   14000d4b4:	rex.W mov BYTE PTR [rbx-0x6d95c201],sil
   14000d4bb:	cmp    BYTE PTR [rip+0x18b65],0x0        # 0x140026027
	...
   14000d4da:	add    BYTE PTR [rax],al
   14000d4dc:	cmp    al,0x83
   14000d4de:	mov    ebx,0xbb833c01
   14000d4e3:	pop    rsp
   14000d4e4:	cmp    al,0x80
   14000d4e6:	mov    bh,0xab
   14000d4e8:	cmp    eax,0x3de6b37e
   14000d4ed:	jp     0x14000d49c
   14000d4ef:	out    0x3d,al
   14000d4f1:	ja     0x14000d49a
   14000d4f3:	stos   DWORD PTR es:[rdi],eax
   14000d4f4:	cmp    eax,0x3d5ca172
   14000d4f9:	outs   dx,BYTE PTR ds:[rsi]
   14000d4fa:	cdq    
   14000d4fb:	add    DWORD PTR [rax],eax
	...
   14000d515:	add    BYTE PTR [rax],al
   14000d517:	add    bh,bh
   14000d519:	clc    
   14000d51a:	add    BYTE PTR [rax],al
   14000d51c:	push   rax
   14000d51e:	add    BYTE PTR [rax],al
   14000d520:	jmp    rcx
   14000d522:	add    BYTE PTR [rax],al
   14000d524:	inc    ebx
   14000d526:	add    BYTE PTR [rax],al
   14000d528:	inc    DWORD PTR [rdi+0xfff0000]
   14000d52e:	add    BYTE PTR [rax],al
   14000d530:	sbb    BYTE PTR [rdi],0x0
   14000d533:	add    BYTE PTR [rax],al
   14000d535:	(bad)  
   14000d536:	add    BYTE PTR [rax],al
   14000d538:	add    BYTE PTR [rdi],bh
   14000d53a:	add    BYTE PTR [rax],al
   14000d53c:	add    BYTE PTR [rdi],bh
   14000d53e:	add    BYTE PTR [rax],al
   14000d540:	adc    BYTE PTR [rdi],bh
   14000d542:	add    BYTE PTR [rax],al
   14000d544:	sbb    BYTE PTR [rdi],bh
   14000d546:	add    BYTE PTR [rax],al
   14000d548:	or     al,0x3f
   14000d54a:	add    BYTE PTR [rax],al
   14000d54c:	add    BYTE PTR [rdi],bh
   14000d54e:	add    BYTE PTR [rax],al
   14000d550:	add    BYTE PTR [rdi],bh
   14000d552:	add    BYTE PTR [rax],al
   14000d554:	cmp    BYTE PTR [rdi+0x0],0x0
   14000d558:	add    BYTE PTR [rax],al
   14000d55a:	add    DWORD PTR [rax],eax
   14000d55c:	add    eax,DWORD PTR [rax]
   14000d55e:	adc    BYTE PTR [rax],dl
   14000d560:	adc    BYTE PTR [rax],al
   14000d562:	add    DWORD PTR [rax],eax
   14000d564:	add    al,0x0
   14000d566:	sub    BYTE PTR [rcx],al
   14000d568:	add    BYTE PTR [rax],al
   14000d56a:	add    DWORD PTR [rax],eax
   14000d56c:	adc    BYTE PTR [rax],dl
   14000d56e:	add    BYTE PTR [rax],al
   14000d570:	add    DWORD PTR [rax],eax
   14000d572:	or     BYTE PTR [rax],al
   14000d574:	push   0x2000005
   14000d579:	add    BYTE PTR [rax],dl
   14000d57b:	adc    BYTE PTR [rax],al
   14000d57d:	add    BYTE PTR [rcx],al
   14000d57f:	add    BYTE PTR [rax],ah
   14000d581:	add    BYTE PTR [rax+0x4],ch
   14000d584:	add    BYTE PTR [rax],al
   14000d586:	add    eax,DWORD PTR [rax]
   14000d588:	int    0xfe
   14000d58a:	int    0xfe
   14000d58c:	fadd   DWORD PTR [rax]
   14000d58e:	add    BYTE PTR [rax],al
   14000d590:	add    BYTE PTR [rax],al
   14000d592:	add    DWORD PTR [rax],eax
   14000d594:	add    BYTE PTR [rax],al
   14000d596:	add    BYTE PTR [rax],al
   14000d598:	adc    DWORD PTR [rax],eax
   14000d59a:	add    BYTE PTR [rax],al
   14000d59c:	add    BYTE PTR [rax],al
   14000d59e:	add    BYTE PTR [rax],al
   14000d5a0:	add    al,BYTE PTR [rax]
   14000d5a2:	add    BYTE PTR [rax],al
   14000d5a4:	cmp    edi,DWORD PTR [rdi+rdi*8-0x76411bb4]
   14000d5ab:	fdivr  st,st(7)
   14000d5ad:	sub    DWORD PTR [rcx],edx
   14000d5af:	leave  
   14000d5b0:	rex.WXB pop r8
   14000d5b2:	rex.WXB
   14000d5b3:	rex.R mov dl,0x32
   14000d5b6:	add    BYTE PTR [rcx+0x9],al
   14000d5b9:	mov    edi,0xd1c4b58e
   14000d5be:	out    0xbd,al
   14000d5c0:	rex.WR icebp 
   14000d5c2:	cdq    
   14000d5c3:	jg     0x14000d5c5
	...
   14000d5d9:	add    BYTE PTR [rax],al
   14000d5db:	add    BYTE PTR [rax+0xe000000],cl
   14000d5e1:	add    BYTE PTR [rax],al
   14000d5e3:	add    BYTE PTR [rax+0x10000000],bl
   14000d5e9:	add    BYTE PTR [rax],al
   14000d5eb:	add    BYTE PTR [rax+0xe000000],ch
   14000d5f1:	add    BYTE PTR [rax],al
   14000d5f3:	add    BYTE PTR [rax+0xc000000],bh
	...
   14000d601:	add    BYTE PTR [rax],al
   14000d603:	add    al,cl
   14000d605:	add    BYTE PTR [rax],al
   14000d607:	add    BYTE PTR [rax+rax*1],cl
   14000d60a:	add    BYTE PTR [rax],al
   14000d60c:	add    BYTE PTR [rax],al
   14000d60e:	add    BYTE PTR [rax],al
   14000d610:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000d614:	rex.WB add BYTE PTR [r8],al
	...
   14000d61f:	add    BYTE PTR [rbx],al
   14000d621:	add    BYTE PTR [rax],al
   14000d623:	add    BYTE PTR [rsi],cl
   14000d625:	add    BYTE PTR [rax],al
   14000d627:	add    BYTE PTR [rax],dl
   14000d629:	add    BYTE PTR [rax],al
   14000d62b:	add    BYTE PTR [rax],bl
   14000d62d:	add    BYTE PTR [rax],al
   14000d62f:	add    BYTE PTR [rbp+0x0],cl
   14000d632:	push   rbp
   14000d633:	add    BYTE PTR [rcx+0x0],cl
	...
   14000d63e:	add    BYTE PTR [rax],al
   14000d640:	add    eax,0x6000000
   14000d645:	add    BYTE PTR [rax],al
   14000d647:	add    BYTE PTR [rax],dl
   14000d649:	add    BYTE PTR [rax],al
   14000d64b:	add    BYTE PTR [rax],al
   14000d64d:	add    BYTE PTR [rax],al
   14000d64f:	add    BYTE PTR [rbp+0x0],ah
   14000d652:	outs   dx,BYTE PTR ds:[rsi]
   14000d653:	add    BYTE PTR [rip+0x53005500],ch        # 0x193012b59
   14000d659:	add    BYTE PTR [rax],al
   14000d65b:	add    BYTE PTR [rax],al
   14000d65d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000e000 <.reloc>:
   14000e000:	add    BYTE PTR [rax+0x0],ah
   14000e003:	add    BYTE PTR [rax+0x48000000],al
   14000e009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e00a:	push   rax
   14000e00b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e00c:	(bad)  
   14000e00d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e00e:	js     0x14000dfb4
   14000e010:	and    BYTE PTR [rax+rsi*8+0x40a4f8a4],0xa6
   14000e018:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e01a:	push   rax
   14000e01b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e01c:	pop    rax
   14000e01d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e01e:	and    BYTE PTR [rsi-0x57575938],0xb0
   14000e025:	test   al,0xb8
   14000e027:	test   al,0xc0
   14000e029:	test   al,0xc8
   14000e02b:	test   al,0xd0
   14000e02d:	test   al,0xe0
   14000e02f:	test   al,0x8
   14000e031:	test   eax,0xa928a918
   14000e036:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   14000e03c:	push   0xffffffffa0a978a9
   14000e041:	test   eax,0xa9b8a9b0
   14000e046:	shr    BYTE PTR [rcx-0x562f5638],0xe0
   14000e04d:	test   eax,0xab60a9f0
   14000e052:	jo     0x14000dfff
   14000e054:	sub    BYTE PTR [rbx-0x54675478],0xc0
   14000e05b:	stos   DWORD PTR es:[rdi],eax
   14000e05c:	and    BYTE PTR [rax+rbx*2+0xadf0ac],ch
   14000e063:	scas   al,BYTE PTR es:[rdi]
   14000e064:	xor    BYTE PTR [rsi-0x51af51c0],ch
   14000e06a:	push   0xffffffffb8ae88ae
   14000e06f:	scas   al,BYTE PTR es:[rdi]
   14000e070:	enter  0xe8ae,0xae
   14000e074:	cwde   
   14000e075:	scas   eax,DWORD PTR es:[rdi]
   14000e076:	test   al,0xaf
   14000e078:	mov    eax,0xf0afc8af
   14000e07d:	scas   eax,DWORD PTR es:[rdi]
   14000e07e:	add    BYTE PTR [rax],al
   14000e080:	add    BYTE PTR [rax+0x0],dh
   14000e083:	add    BYTE PTR [rax+0x0],ah
   14000e086:	add    BYTE PTR [rax],al
   14000e088:	add    BYTE PTR [rax-0x5fdf5ff0],ah
   14000e08e:	xor    BYTE PTR [rax-0x5faf5fc0],ah
   14000e094:	(bad)  
   14000e095:	movabs al,ds:0xa0b0a0a8a0a0a070
   14000e09e:	clc    
   14000e09f:	movabs al,ds:0xa178a168a158a128
   14000e0a8:	mov    BYTE PTR [rcx-0x5e575e68],ah
   14000e0ae:	mov    al,0xa1
   14000e0b0:	mov    eax,0xc8a1c0a1
   14000e0b5:	movabs eax,ds:0xa220a210a200a1d8
   14000e0be:	xor    BYTE PTR [rdx-0x5daf5dc0],ah
   14000e0c4:	(bad)  
   14000e0c5:	movabs ds:0xa2a0a290a280a270,al
   14000e0ce:	mov    al,0xa2
   14000e0d0:	shl    BYTE PTR [rdx-0x5d1f5d30],0x8
   14000e0d7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e0d8:	and    BYTE PTR [rax+rbp*1+0xa430a4],ah
	...
