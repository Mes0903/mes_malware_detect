
bd0f479d25efdff29a2fb8724675d98ee2d557a1b5d8b555b2b39108f1a46ce0.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x48b9]        # 0x1400058c0
   140001007:	jmp    0x140004d40
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x48b9]        # 0x1400058d0
   140001017:	jmp    0x140004d40
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x48b9]        # 0x1400058e0
   140001027:	jmp    0x140004d40
   14000102c:	int3   
   14000102d:	int3   
   14000102e:	int3   
   14000102f:	int3   
   140001030:	mov    rax,rcx
   140001033:	ret    
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	mov    rax,rcx
   140001043:	ret    
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	mov    rax,QWORD PTR [rdx]
   140001053:	mov    QWORD PTR [rcx],rax
   140001056:	movzx  eax,BYTE PTR [r8]
   14000105a:	mov    BYTE PTR [rcx+0x8],al
   14000105d:	mov    rax,rcx
   140001060:	ret    
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	int3   
   140001069:	int3   
   14000106a:	int3   
   14000106b:	int3   
   14000106c:	int3   
   14000106d:	int3   
   14000106e:	int3   
   14000106f:	int3   
   140001070:	mov    rax,rcx
   140001073:	ret    
   140001074:	int3   
   140001075:	int3   
   140001076:	int3   
   140001077:	int3   
   140001078:	int3   
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	sub    rsp,0x28
   140001084:	call   0x140003dc0
   140001089:	test   eax,eax
   14000108b:	sete   al
   14000108e:	add    rsp,0x28
   140001092:	ret    
   140001093:	int3   
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	sub    rsp,0x28
   1400010a4:	xor    eax,eax
   1400010a6:	test   rcx,rcx
   1400010a9:	je     0x1400010c2
   1400010ab:	cmp    rcx,0xffffffffffffffff
   1400010af:	ja     0x1400010bb
   1400010b1:	call   0x140004c32
   1400010b6:	test   rax,rax
   1400010b9:	jne    0x1400010c2
   1400010bb:	call   QWORD PTR [rip+0x4f97]        # 0x140006058
   1400010c1:	int3   
   1400010c2:	add    rsp,0x28
   1400010c6:	ret    
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	sub    rsp,0x28
   1400010d4:	xor    eax,eax
   1400010d6:	test   rcx,rcx
   1400010d9:	je     0x140001103
   1400010db:	movabs rax,0x333333333333333
   1400010e5:	cmp    rcx,rax
   1400010e8:	ja     0x1400010fc
   1400010ea:	lea    rcx,[rcx+rcx*4]
   1400010ee:	shl    rcx,0x4
   1400010f2:	call   0x140004c32
   1400010f7:	test   rax,rax
   1400010fa:	jne    0x140001103
   1400010fc:	call   QWORD PTR [rip+0x4f56]        # 0x140006058
   140001102:	int3   
   140001103:	add    rsp,0x28
   140001107:	ret    
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	sub    rsp,0x28
   140001114:	xor    eax,eax
   140001116:	test   rcx,rcx
   140001119:	je     0x140001143
   14000111b:	movabs rax,0x1fffffffffffffff
   140001125:	cmp    rcx,rax
   140001128:	ja     0x14000113c
   14000112a:	lea    rcx,[rcx*8+0x0]
   140001132:	call   0x140004c32
   140001137:	test   rax,rax
   14000113a:	jne    0x140001143
   14000113c:	call   QWORD PTR [rip+0x4f16]        # 0x140006058
   140001142:	int3   
   140001143:	add    rsp,0x28
   140001147:	ret    
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	int3   
   14000114d:	int3   
   14000114e:	int3   
   14000114f:	int3   
   140001150:	rex push rdi
   140001152:	sub    rsp,0x40
   140001156:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000115f:	mov    QWORD PTR [rsp+0x50],rbx
   140001164:	mov    rdi,r9
   140001167:	call   0x1400029a0
   14000116c:	mov    rbx,rax
   14000116f:	mov    QWORD PTR [rsp+0x20],rax
   140001174:	lea    rcx,[rax+0x10]
   140001178:	mov    QWORD PTR [rsp+0x30],rcx
   14000117d:	mov    QWORD PTR [rsp+0x38],rcx
   140001182:	test   rcx,rcx
   140001185:	je     0x140001190
   140001187:	mov    rdx,rdi
   14000118a:	call   0x140002050
   14000118f:	nop
   140001190:	mov    rax,rbx
   140001193:	mov    rbx,QWORD PTR [rsp+0x50]
   140001198:	add    rsp,0x40
   14000119c:	pop    rdi
   14000119d:	ret    
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	mov    QWORD PTR [rdx],r9
   1400011a3:	mov    rax,rdx
   1400011a6:	ret    
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	mov    rax,r8
   1400011b3:	cmp    rcx,rdx
   1400011b6:	je     0x1400011d4
   1400011b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400011c0:	mov    r8,QWORD PTR [rdx-0x8]
   1400011c4:	sub    rdx,0x8
   1400011c8:	sub    rax,0x8
   1400011cc:	mov    QWORD PTR [rax],r8
   1400011cf:	cmp    rdx,rcx
   1400011d2:	jne    0x1400011c0
   1400011d4:	ret    
   1400011d5:	int3   
   1400011d6:	int3   
   1400011d7:	int3   
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	cmp    rcx,rdx
   1400011e3:	je     0x140001204
   1400011e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400011f0:	mov    rax,QWORD PTR [rdx-0x8]
   1400011f4:	sub    rdx,0x8
   1400011f8:	sub    r8,0x8
   1400011fc:	mov    QWORD PTR [r8],rax
   1400011ff:	cmp    rdx,rcx
   140001202:	jne    0x1400011f0
   140001204:	mov    rax,r8
   140001207:	ret    
   140001208:	int3   
   140001209:	int3   
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	ret    0x0
   140001213:	int3   
   140001214:	int3   
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	ret    0x0
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	xor    r9d,r9d
   140001233:	mov    r10,rdx
   140001236:	sub    r10,rcx
   140001239:	add    r10,0x7
   14000123d:	shr    r10,0x3
   140001241:	cmp    rcx,rdx
   140001244:	cmova  r10,r9
   140001248:	test   r10,r10
   14000124b:	je     0x140001263
   14000124d:	nop    DWORD PTR [rax]
   140001250:	mov    rax,QWORD PTR [r8]
   140001253:	inc    r9
   140001256:	lea    rcx,[rcx+0x8]
   14000125a:	mov    QWORD PTR [rcx-0x8],rax
   14000125e:	cmp    r9,r10
   140001261:	jne    0x140001250
   140001263:	ret    
   140001264:	int3   
   140001265:	int3   
   140001266:	int3   
   140001267:	int3   
   140001268:	int3   
   140001269:	int3   
   14000126a:	int3   
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	movabs rax,0x1fffffffffffffff
   14000127a:	ret    
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	ret    0x0
   140001283:	int3   
   140001284:	int3   
   140001285:	int3   
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	test   r8,r8
   140001293:	je     0x14000129b
   140001295:	mov    rax,QWORD PTR [r9]
   140001298:	mov    QWORD PTR [r8],rax
   14000129b:	ret    
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	test   r8,r8
   1400012a3:	je     0x1400012ab
   1400012a5:	mov    rax,QWORD PTR [r9]
   1400012a8:	mov    QWORD PTR [r8],rax
   1400012ab:	ret    
   1400012ac:	int3   
   1400012ad:	int3   
   1400012ae:	int3   
   1400012af:	int3   
   1400012b0:	mov    QWORD PTR [rsp+0x20],r9
   1400012b5:	mov    QWORD PTR [rsp+0x10],rdx
   1400012ba:	mov    QWORD PTR [rsp+0x8],rcx
   1400012bf:	push   rbx
   1400012c0:	push   rsi
   1400012c1:	push   rdi
   1400012c2:	push   r12
   1400012c4:	push   r13
   1400012c6:	push   r14
   1400012c8:	push   r15
   1400012ca:	sub    rsp,0x30
   1400012ce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400012d7:	mov    rdi,r9
   1400012da:	mov    r15,r8
   1400012dd:	mov    rsi,rdx
   1400012e0:	mov    r13,rcx
   1400012e3:	mov    r14,QWORD PTR [r8+0x10]
   1400012e7:	mov    r10,QWORD PTR [r8+0x18]
   1400012eb:	cmp    r10,0x10
   1400012ef:	jb     0x1400012f6
   1400012f1:	mov    r9,QWORD PTR [r8]
   1400012f4:	jmp    0x1400012f9
   1400012f6:	mov    r9,r8
   1400012f9:	movabs rcx,0xcbf29ce484222325
   140001303:	xor    edx,edx
   140001305:	test   r14,r14
   140001308:	je     0x140001334
   14000130a:	movabs r8,0x100000001b3
   140001314:	nop    DWORD PTR [rax+0x0]
   140001318:	nop    DWORD PTR [rax+rax*1+0x0]
   140001320:	movzx  eax,BYTE PTR [rdx+r9*1]
   140001325:	xor    rcx,rax
   140001328:	imul   rcx,r8
   14000132c:	inc    rdx
   14000132f:	cmp    rdx,r14
   140001332:	jb     0x140001320
   140001334:	mov    rax,rcx
   140001337:	shr    rax,0x20
   14000133b:	xor    rcx,rax
   14000133e:	mov    rdx,QWORD PTR [r13+0x28]
   140001342:	mov    r12,rdx
   140001345:	and    r12,rcx
   140001348:	cmp    QWORD PTR [r13+0x30],r12
   14000134c:	ja     0x14000135b
   14000134e:	shr    rdx,1
   140001351:	or     rax,0xffffffffffffffff
   140001355:	sub    rax,rdx
   140001358:	add    r12,rax
   14000135b:	mov    rbx,QWORD PTR [r13+0x0]
   14000135f:	mov    r9,QWORD PTR [r13+0x10]
   140001363:	mov    r8,r12
   140001366:	shl    r8,0x4
   14000136a:	mov    QWORD PTR [rsp+0x80],r8
   140001372:	mov    rax,QWORD PTR [r9+r8*1]
   140001376:	cmp    rbx,rax
   140001379:	je     0x140001447
   14000137f:	mov    rbx,QWORD PTR [r9+r8*1+0x8]
   140001384:	mov    rbx,QWORD PTR [rbx]
   140001387:	cmp    rbx,rax
   14000138a:	je     0x140001447
   140001390:	add    r12,r12
   140001393:	mov    rbx,QWORD PTR [rbx+0x8]
   140001397:	lea    rdx,[rbx+0x10]
   14000139b:	mov    rsi,QWORD PTR [rdx+0x10]
   14000139f:	cmp    QWORD PTR [rdx+0x18],0x10
   1400013a4:	jb     0x1400013a9
   1400013a6:	mov    rdx,QWORD PTR [rdx]
   1400013a9:	cmp    r10,0x10
   1400013ad:	jb     0x1400013b4
   1400013af:	mov    rcx,QWORD PTR [r15]
   1400013b2:	jmp    0x1400013b7
   1400013b4:	mov    rcx,r15
   1400013b7:	mov    r8,rsi
   1400013ba:	cmp    r14,rsi
   1400013bd:	cmovb  r8,r14
   1400013c1:	test   r8,r8
   1400013c4:	jne    0x1400013ca
   1400013c6:	xor    eax,eax
   1400013c8:	jmp    0x1400013d7
   1400013ca:	call   0x140004d70
   1400013cf:	mov    r9,QWORD PTR [r13+0x10]
   1400013d3:	mov    r10,QWORD PTR [r15+0x18]
   1400013d7:	cdqe   
   1400013d9:	test   rax,rax
   1400013dc:	jne    0x1400013f0
   1400013de:	cmp    r14,rsi
   1400013e1:	jae    0x1400013e8
   1400013e3:	or     eax,0xffffffff
   1400013e6:	jmp    0x1400013f0
   1400013e8:	xor    eax,eax
   1400013ea:	cmp    r14,rsi
   1400013ed:	setne  al
   1400013f0:	test   eax,eax
   1400013f2:	je     0x1400013fc
   1400013f4:	cmp    rbx,QWORD PTR [r9+r12*8]
   1400013f8:	jne    0x140001393
   1400013fa:	jmp    0x14000143a
   1400013fc:	lea    rcx,[rbx+0x10]
   140001400:	mov    rdx,r15
   140001403:	call   0x140003dc0
   140001408:	test   eax,eax
   14000140a:	je     0x140001419
   14000140c:	mov    rbx,QWORD PTR [rbx]
   14000140f:	mov    rdi,QWORD PTR [rsp+0x88]
   140001417:	jmp    0x14000143a
   140001419:	mov    rdx,QWORD PTR [rsp+0x88]
   140001421:	mov    rcx,r13
   140001424:	call   0x140002ca0
   140001429:	mov    rax,QWORD PTR [rsp+0x78]
   14000142e:	mov    QWORD PTR [rax],rbx
   140001431:	mov    BYTE PTR [rax+0x8],0x0
   140001435:	jmp    0x1400014d8
   14000143a:	mov    rsi,QWORD PTR [rsp+0x78]
   14000143f:	mov    r8,QWORD PTR [rsp+0x80]
   140001447:	mov    rax,QWORD PTR [rdi]
   14000144a:	cmp    rbx,rax
   14000144d:	je     0x14000147c
   14000144f:	mov    rcx,QWORD PTR [rdi+0x8]
   140001453:	mov    QWORD PTR [rcx],rax
   140001456:	mov    rcx,QWORD PTR [rax+0x8]
   14000145a:	mov    QWORD PTR [rcx],rbx
   14000145d:	mov    rcx,QWORD PTR [rbx+0x8]
   140001461:	mov    QWORD PTR [rcx],rdi
   140001464:	mov    rdx,QWORD PTR [rbx+0x8]
   140001468:	mov    rcx,QWORD PTR [rax+0x8]
   14000146c:	mov    QWORD PTR [rbx+0x8],rcx
   140001470:	mov    rcx,QWORD PTR [rdi+0x8]
   140001474:	mov    QWORD PTR [rax+0x8],rcx
   140001478:	mov    QWORD PTR [rdi+0x8],rdx
   14000147c:	mov    rdx,QWORD PTR [r13+0x10]
   140001480:	add    rdx,r8
   140001483:	mov    rax,QWORD PTR [rdx]
   140001486:	cmp    rax,QWORD PTR [r13+0x0]
   14000148a:	jne    0x14000149a
   14000148c:	mov    QWORD PTR [rdx],rdi
   14000148f:	mov    rax,QWORD PTR [r13+0x10]
   140001493:	mov    QWORD PTR [rax+r8*1+0x8],rdi
   140001498:	jmp    0x1400014c6
   14000149a:	cmp    rax,rbx
   14000149d:	jne    0x1400014a4
   14000149f:	mov    QWORD PTR [rdx],rdi
   1400014a2:	jmp    0x1400014c6
   1400014a4:	mov    rax,QWORD PTR [rdx+0x8]
   1400014a8:	mov    rcx,QWORD PTR [rax]
   1400014ab:	mov    QWORD PTR [rdx+0x8],rcx
   1400014af:	cmp    rcx,rdi
   1400014b2:	je     0x1400014c6
   1400014b4:	mov    rdx,QWORD PTR [r13+0x10]
   1400014b8:	mov    rax,QWORD PTR [rdx+r8*1+0x8]
   1400014bd:	mov    rcx,QWORD PTR [rax+0x8]
   1400014c1:	mov    QWORD PTR [rdx+r8*1+0x8],rcx
   1400014c6:	mov    rcx,r13
   1400014c9:	call   0x140002a00
   1400014ce:	mov    QWORD PTR [rsi],rdi
   1400014d1:	mov    BYTE PTR [rsi+0x8],0x1
   1400014d5:	mov    rax,rsi
   1400014d8:	add    rsp,0x30
   1400014dc:	pop    r15
   1400014de:	pop    r14
   1400014e0:	pop    r13
   1400014e2:	pop    r12
   1400014e4:	pop    rdi
   1400014e5:	pop    rsi
   1400014e6:	pop    rbx
   1400014e7:	ret    
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400014f5:	push   rdi
   1400014f6:	sub    rsp,0x20
   1400014fa:	mov    r9,r8
   1400014fd:	mov    r8,QWORD PTR [rdx+0x8]
   140001501:	mov    rbx,rdx
   140001504:	mov    rdi,rcx
   140001507:	call   0x140001150
   14000150c:	movabs rdx,0x333333333333332
   140001516:	mov    r8,rax
   140001519:	mov    rax,QWORD PTR [rdi+0x8]
   14000151d:	sub    rdx,rax
   140001520:	cmp    rdx,0x1
   140001524:	jae    0x140001534
   140001526:	lea    rcx,[rip+0x523b]        # 0x140006768
   14000152d:	call   QWORD PTR [rip+0x4b1d]        # 0x140006050
   140001533:	int3   
   140001534:	inc    rax
   140001537:	mov    QWORD PTR [rdi+0x8],rax
   14000153b:	mov    QWORD PTR [rbx+0x8],r8
   14000153f:	mov    rax,QWORD PTR [r8+0x8]
   140001543:	mov    rbx,QWORD PTR [rsp+0x30]
   140001548:	mov    QWORD PTR [rax],r8
   14000154b:	add    rsp,0x20
   14000154f:	pop    rdi
   140001550:	ret    
   140001551:	int3   
   140001552:	int3   
   140001553:	int3   
   140001554:	int3   
   140001555:	int3   
   140001556:	int3   
   140001557:	int3   
   140001558:	int3   
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	mov    rax,rcx
   140001563:	ret    
   140001564:	int3   
   140001565:	int3   
   140001566:	int3   
   140001567:	int3   
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	movzx  eax,BYTE PTR [rsp+0x18]
   140001575:	ret    
   140001576:	int3   
   140001577:	int3   
   140001578:	int3   
   140001579:	int3   
   14000157a:	int3   
   14000157b:	int3   
   14000157c:	int3   
   14000157d:	int3   
   14000157e:	int3   
   14000157f:	int3   
   140001580:	mov    QWORD PTR [rcx],rdx
   140001583:	mov    rax,rcx
   140001586:	ret    
   140001587:	int3   
   140001588:	int3   
   140001589:	int3   
   14000158a:	int3   
   14000158b:	int3   
   14000158c:	int3   
   14000158d:	int3   
   14000158e:	int3   
   14000158f:	int3   
   140001590:	rex push rbx
   140001592:	sub    rsp,0x30
   140001596:	movzx  eax,BYTE PTR [rsp+0x58]
   14000159b:	mov    r10,r9
   14000159e:	mov    r11,r8
   1400015a1:	mov    rcx,rdx
   1400015a4:	mov    BYTE PTR [rsp+0x28],al
   1400015a8:	lea    r9,[rsp+0x58]
   1400015ad:	mov    r8,r10
   1400015b0:	mov    rdx,r11
   1400015b3:	mov    QWORD PTR [rsp+0x20],0x0
   1400015bc:	call   0x140001630
   1400015c1:	add    rsp,0x30
   1400015c5:	pop    rbx
   1400015c6:	ret    
   1400015c7:	int3   
   1400015c8:	int3   
   1400015c9:	int3   
   1400015ca:	int3   
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	mov    rax,rcx
   1400015d3:	ret    
   1400015d4:	int3   
   1400015d5:	int3   
   1400015d6:	int3   
   1400015d7:	int3   
   1400015d8:	int3   
   1400015d9:	int3   
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	sub    rsp,0x38
   1400015e4:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400015ed:	test   rdx,rdx
   1400015f0:	je     0x140001606
   1400015f2:	test   rcx,rcx
   1400015f5:	je     0x1400015fd
   1400015f7:	mov    rax,QWORD PTR [r8]
   1400015fa:	mov    QWORD PTR [rcx],rax
   1400015fd:	add    rcx,0x8
   140001601:	dec    rdx
   140001604:	jne    0x1400015f2
   140001606:	add    rsp,0x38
   14000160a:	ret    
   14000160b:	int3   
   14000160c:	int3   
   14000160d:	int3   
   14000160e:	int3   
   14000160f:	int3   
   140001610:	sub    rsp,0x48
   140001614:	movzx  eax,BYTE PTR [rsp+0x30]
   140001619:	mov    BYTE PTR [rsp+0x28],al
   14000161d:	mov    QWORD PTR [rsp+0x20],0x0
   140001626:	call   0x140001630
   14000162b:	add    rsp,0x48
   14000162f:	ret    
   140001630:	sub    rsp,0x38
   140001634:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000163d:	xor    r9d,r9d
   140001640:	mov    r10,rdx
   140001643:	sub    r10,rcx
   140001646:	add    r10,0x7
   14000164a:	shr    r10,0x3
   14000164e:	cmp    rcx,rdx
   140001651:	cmova  r10,r9
   140001655:	test   r10,r10
   140001658:	je     0x140001678
   14000165a:	sub    rcx,r8
   14000165d:	nop    DWORD PTR [rax]
   140001660:	test   r8,r8
   140001663:	je     0x14000166c
   140001665:	mov    rax,QWORD PTR [rcx+r8*1]
   140001669:	mov    QWORD PTR [r8],rax
   14000166c:	add    r8,0x8
   140001670:	inc    r9
   140001673:	cmp    r9,r10
   140001676:	jne    0x140001660
   140001678:	mov    rax,r8
   14000167b:	add    rsp,0x38
   14000167f:	ret    
   140001680:	sub    rsp,0x48
   140001684:	movzx  eax,BYTE PTR [rsp+0x30]
   140001689:	mov    BYTE PTR [rsp+0x28],al
   14000168d:	mov    QWORD PTR [rsp+0x20],0x0
   140001696:	call   0x1400015e0
   14000169b:	add    rsp,0x48
   14000169f:	ret    
   1400016a0:	sub    rsp,0x38
   1400016a4:	movzx  eax,BYTE PTR [rsp+0x50]
   1400016a9:	mov    BYTE PTR [rsp+0x28],al
   1400016ad:	mov    QWORD PTR [rsp+0x20],0x0
   1400016b6:	call   0x140001630
   1400016bb:	add    rsp,0x38
   1400016bf:	ret    
   1400016c0:	xor    eax,eax
   1400016c2:	ret    
   1400016c3:	int3   
   1400016c4:	int3   
   1400016c5:	int3   
   1400016c6:	int3   
   1400016c7:	int3   
   1400016c8:	int3   
   1400016c9:	int3   
   1400016ca:	int3   
   1400016cb:	int3   
   1400016cc:	int3   
   1400016cd:	int3   
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	mov    rax,rcx
   1400016d3:	ret    
   1400016d4:	int3   
   1400016d5:	int3   
   1400016d6:	int3   
   1400016d7:	int3   
   1400016d8:	int3   
   1400016d9:	int3   
   1400016da:	int3   
   1400016db:	int3   
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	mov    rax,rcx
   1400016e3:	ret    
   1400016e4:	int3   
   1400016e5:	int3   
   1400016e6:	int3   
   1400016e7:	int3   
   1400016e8:	int3   
   1400016e9:	int3   
   1400016ea:	int3   
   1400016eb:	int3   
   1400016ec:	int3   
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	mov    rax,rcx
   1400016f3:	ret    
   1400016f4:	int3   
   1400016f5:	int3   
   1400016f6:	int3   
   1400016f7:	int3   
   1400016f8:	int3   
   1400016f9:	int3   
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	mov    rax,rcx
   140001703:	ret    
   140001704:	int3   
   140001705:	int3   
   140001706:	int3   
   140001707:	int3   
   140001708:	int3   
   140001709:	int3   
   14000170a:	int3   
   14000170b:	int3   
   14000170c:	int3   
   14000170d:	int3   
   14000170e:	int3   
   14000170f:	int3   
   140001710:	mov    rax,rcx
   140001713:	ret    
   140001714:	int3   
   140001715:	int3   
   140001716:	int3   
   140001717:	int3   
   140001718:	int3   
   140001719:	int3   
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	int3   
   14000171d:	int3   
   14000171e:	int3   
   14000171f:	int3   
   140001720:	test   rdx,rdx
   140001723:	je     0x14000172b
   140001725:	mov    rax,QWORD PTR [r8]
   140001728:	mov    QWORD PTR [rdx],rax
   14000172b:	ret    
   14000172c:	int3   
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	test   rdx,rdx
   140001733:	je     0x14000173b
   140001735:	mov    rax,QWORD PTR [r8]
   140001738:	mov    QWORD PTR [rdx],rax
   14000173b:	ret    
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	test   rdx,rdx
   140001743:	je     0x14000174b
   140001745:	mov    rax,QWORD PTR [r8]
   140001748:	mov    QWORD PTR [rdx],rax
   14000174b:	ret    
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	test   rdx,rdx
   140001753:	je     0x14000175b
   140001755:	mov    rax,QWORD PTR [r8]
   140001758:	mov    QWORD PTR [rdx],rax
   14000175b:	ret    
   14000175c:	int3   
   14000175d:	int3   
   14000175e:	int3   
   14000175f:	int3   
   140001760:	test   rdx,rdx
   140001763:	je     0x14000176b
   140001765:	mov    rax,QWORD PTR [r8]
   140001768:	mov    QWORD PTR [rdx],rax
   14000176b:	ret    
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	test   rdx,rdx
   140001773:	je     0x14000177b
   140001775:	mov    rax,QWORD PTR [r8]
   140001778:	mov    QWORD PTR [rdx],rax
   14000177b:	ret    
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	mov    QWORD PTR [rsp+0x10],rdx
   140001785:	sub    rsp,0x38
   140001789:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001792:	mov    rax,rdx
   140001795:	mov    QWORD PTR [rsp+0x58],rdx
   14000179a:	test   rdx,rdx
   14000179d:	je     0x1400017ab
   14000179f:	mov    rdx,r8
   1400017a2:	mov    rcx,rax
   1400017a5:	call   0x140002050
   1400017aa:	nop
   1400017ab:	add    rsp,0x38
   1400017af:	ret    
   1400017b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400017b5:	sub    rsp,0x38
   1400017b9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400017c2:	mov    rax,rdx
   1400017c5:	mov    QWORD PTR [rsp+0x58],rdx
   1400017ca:	test   rdx,rdx
   1400017cd:	je     0x1400017db
   1400017cf:	mov    rdx,r8
   1400017d2:	mov    rcx,rax
   1400017d5:	call   0x140002050
   1400017da:	nop
   1400017db:	add    rsp,0x38
   1400017df:	ret    
   1400017e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400017e5:	sub    rsp,0x38
   1400017e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400017f2:	mov    rax,rdx
   1400017f5:	mov    QWORD PTR [rsp+0x58],rdx
   1400017fa:	test   rdx,rdx
   1400017fd:	je     0x14000180b
   1400017ff:	mov    rdx,r8
   140001802:	mov    rcx,rax
   140001805:	call   0x140002050
   14000180a:	nop
   14000180b:	add    rsp,0x38
   14000180f:	ret    
   140001810:	test   rdx,rdx
   140001813:	je     0x14000181b
   140001815:	mov    rax,QWORD PTR [r8]
   140001818:	mov    QWORD PTR [rdx],rax
   14000181b:	ret    
   14000181c:	int3   
   14000181d:	int3   
   14000181e:	int3   
   14000181f:	int3   
   140001820:	test   rdx,rdx
   140001823:	je     0x14000182b
   140001825:	mov    rax,QWORD PTR [r8]
   140001828:	mov    QWORD PTR [rdx],rax
   14000182b:	ret    
   14000182c:	int3   
   14000182d:	int3   
   14000182e:	int3   
   14000182f:	int3   
   140001830:	test   rdx,rdx
   140001833:	je     0x14000183b
   140001835:	mov    rax,QWORD PTR [r8]
   140001838:	mov    QWORD PTR [rdx],rax
   14000183b:	ret    
   14000183c:	int3   
   14000183d:	int3   
   14000183e:	int3   
   14000183f:	int3   
   140001840:	test   rdx,rdx
   140001843:	je     0x14000184b
   140001845:	mov    rax,QWORD PTR [r8]
   140001848:	mov    QWORD PTR [rdx],rax
   14000184b:	ret    
   14000184c:	int3   
   14000184d:	int3   
   14000184e:	int3   
   14000184f:	int3   
   140001850:	test   rdx,rdx
   140001853:	je     0x14000185b
   140001855:	mov    rax,QWORD PTR [r8]
   140001858:	mov    QWORD PTR [rdx],rax
   14000185b:	ret    
   14000185c:	int3   
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	test   rdx,rdx
   140001863:	je     0x14000186b
   140001865:	mov    rax,QWORD PTR [r8]
   140001868:	mov    QWORD PTR [rdx],rax
   14000186b:	ret    
   14000186c:	int3   
   14000186d:	int3   
   14000186e:	int3   
   14000186f:	int3   
   140001870:	test   rdx,rdx
   140001873:	je     0x14000187b
   140001875:	mov    rax,QWORD PTR [r8]
   140001878:	mov    QWORD PTR [rdx],rax
   14000187b:	ret    
   14000187c:	int3   
   14000187d:	int3   
   14000187e:	int3   
   14000187f:	int3   
   140001880:	test   rdx,rdx
   140001883:	je     0x14000188b
   140001885:	mov    rax,QWORD PTR [r8]
   140001888:	mov    QWORD PTR [rdx],rax
   14000188b:	ret    
   14000188c:	int3   
   14000188d:	int3   
   14000188e:	int3   
   14000188f:	int3   
   140001890:	test   rdx,rdx
   140001893:	je     0x14000189b
   140001895:	mov    rax,QWORD PTR [r8]
   140001898:	mov    QWORD PTR [rdx],rax
   14000189b:	ret    
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	ret    0x0
   1400018a3:	int3   
   1400018a4:	int3   
   1400018a5:	int3   
   1400018a6:	int3   
   1400018a7:	int3   
   1400018a8:	int3   
   1400018a9:	int3   
   1400018aa:	int3   
   1400018ab:	int3   
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	ret    0x0
   1400018b3:	int3   
   1400018b4:	int3   
   1400018b5:	int3   
   1400018b6:	int3   
   1400018b7:	int3   
   1400018b8:	int3   
   1400018b9:	int3   
   1400018ba:	int3   
   1400018bb:	int3   
   1400018bc:	int3   
   1400018bd:	int3   
   1400018be:	int3   
   1400018bf:	int3   
   1400018c0:	ret    0x0
   1400018c3:	int3   
   1400018c4:	int3   
   1400018c5:	int3   
   1400018c6:	int3   
   1400018c7:	int3   
   1400018c8:	int3   
   1400018c9:	int3   
   1400018ca:	int3   
   1400018cb:	int3   
   1400018cc:	int3   
   1400018cd:	int3   
   1400018ce:	int3   
   1400018cf:	int3   
   1400018d0:	ret    0x0
   1400018d3:	int3   
   1400018d4:	int3   
   1400018d5:	int3   
   1400018d6:	int3   
   1400018d7:	int3   
   1400018d8:	int3   
   1400018d9:	int3   
   1400018da:	int3   
   1400018db:	int3   
   1400018dc:	int3   
   1400018dd:	int3   
   1400018de:	int3   
   1400018df:	int3   
   1400018e0:	ret    0x0
   1400018e3:	int3   
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	ret    0x0
   1400018f3:	int3   
   1400018f4:	int3   
   1400018f5:	int3   
   1400018f6:	int3   
   1400018f7:	int3   
   1400018f8:	int3   
   1400018f9:	int3   
   1400018fa:	int3   
   1400018fb:	int3   
   1400018fc:	int3   
   1400018fd:	int3   
   1400018fe:	int3   
   1400018ff:	int3   
   140001900:	rex push rbx
   140001902:	sub    rsp,0x20
   140001906:	cmp    QWORD PTR [rdx+0x38],0x10
   14000190b:	mov    rbx,rdx
   14000190e:	jb     0x140001919
   140001910:	mov    rcx,QWORD PTR [rdx+0x20]
   140001914:	call   0x140004c38
   140001919:	mov    QWORD PTR [rbx+0x38],0xf
   140001921:	mov    QWORD PTR [rbx+0x30],0x0
   140001929:	mov    BYTE PTR [rbx+0x20],0x0
   14000192d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001932:	jb     0x14000193c
   140001934:	mov    rcx,QWORD PTR [rbx]
   140001937:	call   0x140004c38
   14000193c:	mov    QWORD PTR [rbx+0x18],0xf
   140001944:	mov    QWORD PTR [rbx+0x10],0x0
   14000194c:	mov    BYTE PTR [rbx],0x0
   14000194f:	add    rsp,0x20
   140001953:	pop    rbx
   140001954:	ret    
   140001955:	int3   
   140001956:	int3   
   140001957:	int3   
   140001958:	int3   
   140001959:	int3   
   14000195a:	int3   
   14000195b:	int3   
   14000195c:	int3   
   14000195d:	int3   
   14000195e:	int3   
   14000195f:	int3   
   140001960:	rex push rbx
   140001962:	sub    rsp,0x20
   140001966:	cmp    QWORD PTR [rdx+0x38],0x10
   14000196b:	mov    rbx,rdx
   14000196e:	jb     0x140001979
   140001970:	mov    rcx,QWORD PTR [rdx+0x20]
   140001974:	call   0x140004c38
   140001979:	mov    QWORD PTR [rbx+0x38],0xf
   140001981:	mov    QWORD PTR [rbx+0x30],0x0
   140001989:	mov    BYTE PTR [rbx+0x20],0x0
   14000198d:	cmp    QWORD PTR [rbx+0x18],0x10
   140001992:	jb     0x14000199c
   140001994:	mov    rcx,QWORD PTR [rbx]
   140001997:	call   0x140004c38
   14000199c:	mov    QWORD PTR [rbx+0x18],0xf
   1400019a4:	mov    QWORD PTR [rbx+0x10],0x0
   1400019ac:	mov    BYTE PTR [rbx],0x0
   1400019af:	add    rsp,0x20
   1400019b3:	pop    rbx
   1400019b4:	ret    
   1400019b5:	int3   
   1400019b6:	int3   
   1400019b7:	int3   
   1400019b8:	int3   
   1400019b9:	int3   
   1400019ba:	int3   
   1400019bb:	int3   
   1400019bc:	int3   
   1400019bd:	int3   
   1400019be:	int3   
   1400019bf:	int3   
   1400019c0:	rex push rbx
   1400019c2:	sub    rsp,0x20
   1400019c6:	cmp    QWORD PTR [rdx+0x38],0x10
   1400019cb:	mov    rbx,rdx
   1400019ce:	jb     0x1400019d9
   1400019d0:	mov    rcx,QWORD PTR [rdx+0x20]
   1400019d4:	call   0x140004c38
   1400019d9:	mov    QWORD PTR [rbx+0x38],0xf
   1400019e1:	mov    QWORD PTR [rbx+0x30],0x0
   1400019e9:	mov    BYTE PTR [rbx+0x20],0x0
   1400019ed:	cmp    QWORD PTR [rbx+0x18],0x10
   1400019f2:	jb     0x1400019fc
   1400019f4:	mov    rcx,QWORD PTR [rbx]
   1400019f7:	call   0x140004c38
   1400019fc:	mov    QWORD PTR [rbx+0x18],0xf
   140001a04:	mov    QWORD PTR [rbx+0x10],0x0
   140001a0c:	mov    BYTE PTR [rbx],0x0
   140001a0f:	add    rsp,0x20
   140001a13:	pop    rbx
   140001a14:	ret    
   140001a15:	int3   
   140001a16:	int3   
   140001a17:	int3   
   140001a18:	int3   
   140001a19:	int3   
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	ret    0x0
   140001a23:	int3   
   140001a24:	int3   
   140001a25:	int3   
   140001a26:	int3   
   140001a27:	int3   
   140001a28:	int3   
   140001a29:	int3   
   140001a2a:	int3   
   140001a2b:	int3   
   140001a2c:	int3   
   140001a2d:	int3   
   140001a2e:	int3   
   140001a2f:	int3   
   140001a30:	ret    0x0
   140001a33:	int3   
   140001a34:	int3   
   140001a35:	int3   
   140001a36:	int3   
   140001a37:	int3   
   140001a38:	int3   
   140001a39:	int3   
   140001a3a:	int3   
   140001a3b:	int3   
   140001a3c:	int3   
   140001a3d:	int3   
   140001a3e:	int3   
   140001a3f:	int3   
   140001a40:	ret    0x0
   140001a43:	int3   
   140001a44:	int3   
   140001a45:	int3   
   140001a46:	int3   
   140001a47:	int3   
   140001a48:	int3   
   140001a49:	int3   
   140001a4a:	int3   
   140001a4b:	int3   
   140001a4c:	int3   
   140001a4d:	int3   
   140001a4e:	int3   
   140001a4f:	int3   
   140001a50:	ret    0x0
   140001a53:	int3   
   140001a54:	int3   
   140001a55:	int3   
   140001a56:	int3   
   140001a57:	int3   
   140001a58:	int3   
   140001a59:	int3   
   140001a5a:	int3   
   140001a5b:	int3   
   140001a5c:	int3   
   140001a5d:	int3   
   140001a5e:	int3   
   140001a5f:	int3   
   140001a60:	ret    0x0
   140001a63:	int3   
   140001a64:	int3   
   140001a65:	int3   
   140001a66:	int3   
   140001a67:	int3   
   140001a68:	int3   
   140001a69:	int3   
   140001a6a:	int3   
   140001a6b:	int3   
   140001a6c:	int3   
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	mov    QWORD PTR [rsp+0x8],rbx
   140001a75:	mov    QWORD PTR [rsp+0x10],rsi
   140001a7a:	push   rdi
   140001a7b:	sub    rsp,0x20
   140001a7f:	mov    rax,QWORD PTR [rcx]
   140001a82:	mov    r9,r8
   140001a85:	mov    rsi,rdx
   140001a88:	mov    rdi,QWORD PTR [rax]
   140001a8b:	mov    rbx,rcx
   140001a8e:	mov    r8,QWORD PTR [rdi+0x8]
   140001a92:	mov    rdx,rdi
   140001a95:	call   0x140001150
   140001a9a:	movabs r8,0x333333333333332
   140001aa4:	mov    rcx,rax
   140001aa7:	mov    rax,QWORD PTR [rbx+0x8]
   140001aab:	sub    r8,rax
   140001aae:	cmp    r8,0x1
   140001ab2:	jae    0x140001ac2
   140001ab4:	lea    rcx,[rip+0x4cad]        # 0x140006768
   140001abb:	call   QWORD PTR [rip+0x458f]        # 0x140006050
   140001ac1:	int3   
   140001ac2:	inc    rax
   140001ac5:	mov    rdx,rsi
   140001ac8:	mov    QWORD PTR [rbx+0x8],rax
   140001acc:	mov    QWORD PTR [rdi+0x8],rcx
   140001ad0:	mov    rax,QWORD PTR [rcx+0x8]
   140001ad4:	mov    QWORD PTR [rax],rcx
   140001ad7:	mov    r9,QWORD PTR [rbx]
   140001ada:	mov    rcx,rbx
   140001add:	mov    r9,QWORD PTR [r9]
   140001ae0:	lea    r8,[r9+0x10]
   140001ae4:	call   0x1400012b0
   140001ae9:	mov    rbx,QWORD PTR [rsp+0x30]
   140001aee:	mov    rax,rsi
   140001af1:	mov    rsi,QWORD PTR [rsp+0x38]
   140001af6:	add    rsp,0x20
   140001afa:	pop    rdi
   140001afb:	ret    
   140001afc:	int3   
   140001afd:	int3   
   140001afe:	int3   
   140001aff:	int3   
   140001b00:	mov    QWORD PTR [rsp+0x8],rbx
   140001b05:	push   rdi
   140001b06:	sub    rsp,0x20
   140001b0a:	mov    rax,QWORD PTR [rcx]
   140001b0d:	mov    r9,rdx
   140001b10:	mov    rbx,rcx
   140001b13:	mov    rdi,QWORD PTR [rax]
   140001b16:	mov    rdx,rdi
   140001b19:	mov    r8,QWORD PTR [rdi+0x8]
   140001b1d:	call   0x140001150
   140001b22:	movabs rdx,0x333333333333332
   140001b2c:	mov    r8,rax
   140001b2f:	mov    rax,QWORD PTR [rbx+0x8]
   140001b33:	sub    rdx,rax
   140001b36:	cmp    rdx,0x1
   140001b3a:	jae    0x140001b4a
   140001b3c:	lea    rcx,[rip+0x4c25]        # 0x140006768
   140001b43:	call   QWORD PTR [rip+0x4507]        # 0x140006050
   140001b49:	int3   
   140001b4a:	inc    rax
   140001b4d:	mov    QWORD PTR [rbx+0x8],rax
   140001b51:	mov    rbx,QWORD PTR [rsp+0x30]
   140001b56:	mov    QWORD PTR [rdi+0x8],r8
   140001b5a:	mov    rax,QWORD PTR [r8+0x8]
   140001b5e:	mov    QWORD PTR [rax],r8
   140001b61:	add    rsp,0x20
   140001b65:	pop    rdi
   140001b66:	ret    
   140001b67:	int3   
   140001b68:	int3   
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	xor    r9d,r9d
   140001b73:	mov    r10,rdx
   140001b76:	sub    r10,rcx
   140001b79:	add    r10,0x7
   140001b7d:	shr    r10,0x3
   140001b81:	cmp    rcx,rdx
   140001b84:	cmova  r10,r9
   140001b88:	test   r10,r10
   140001b8b:	je     0x140001ba3
   140001b8d:	nop    DWORD PTR [rax]
   140001b90:	mov    rax,QWORD PTR [r8]
   140001b93:	inc    r9
   140001b96:	lea    rcx,[rcx+0x8]
   140001b9a:	mov    QWORD PTR [rcx-0x8],rax
   140001b9e:	cmp    r9,r10
   140001ba1:	jne    0x140001b90
   140001ba3:	ret    
   140001ba4:	int3   
   140001ba5:	int3   
   140001ba6:	int3   
   140001ba7:	int3   
   140001ba8:	int3   
   140001ba9:	int3   
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	mov    rax,rcx
   140001bb3:	ret    
   140001bb4:	int3   
   140001bb5:	int3   
   140001bb6:	int3   
   140001bb7:	int3   
   140001bb8:	int3   
   140001bb9:	int3   
   140001bba:	int3   
   140001bbb:	int3   
   140001bbc:	int3   
   140001bbd:	int3   
   140001bbe:	int3   
   140001bbf:	int3   
   140001bc0:	mov    rax,rcx
   140001bc3:	ret    
   140001bc4:	int3   
   140001bc5:	int3   
   140001bc6:	int3   
   140001bc7:	int3   
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	int3   
   140001bcd:	int3   
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	mov    rax,rcx
   140001bd3:	ret    
   140001bd4:	int3   
   140001bd5:	int3   
   140001bd6:	int3   
   140001bd7:	int3   
   140001bd8:	int3   
   140001bd9:	int3   
   140001bda:	int3   
   140001bdb:	int3   
   140001bdc:	int3   
   140001bdd:	int3   
   140001bde:	int3   
   140001bdf:	int3   
   140001be0:	mov    rax,rcx
   140001be3:	ret    
   140001be4:	int3   
   140001be5:	int3   
   140001be6:	int3   
   140001be7:	int3   
   140001be8:	int3   
   140001be9:	int3   
   140001bea:	int3   
   140001beb:	int3   
   140001bec:	int3   
   140001bed:	int3   
   140001bee:	int3   
   140001bef:	int3   
   140001bf0:	mov    rax,rcx
   140001bf3:	ret    
   140001bf4:	int3   
   140001bf5:	int3   
   140001bf6:	int3   
   140001bf7:	int3   
   140001bf8:	int3   
   140001bf9:	int3   
   140001bfa:	int3   
   140001bfb:	int3   
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	mov    rax,rcx
   140001c03:	ret    
   140001c04:	int3   
   140001c05:	int3   
   140001c06:	int3   
   140001c07:	int3   
   140001c08:	int3   
   140001c09:	int3   
   140001c0a:	int3   
   140001c0b:	int3   
   140001c0c:	int3   
   140001c0d:	int3   
   140001c0e:	int3   
   140001c0f:	int3   
   140001c10:	mov    rax,rcx
   140001c13:	ret    
   140001c14:	int3   
   140001c15:	int3   
   140001c16:	int3   
   140001c17:	int3   
   140001c18:	int3   
   140001c19:	int3   
   140001c1a:	int3   
   140001c1b:	int3   
   140001c1c:	int3   
   140001c1d:	int3   
   140001c1e:	int3   
   140001c1f:	int3   
   140001c20:	mov    rax,rcx
   140001c23:	ret    
   140001c24:	int3   
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	int3   
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	cmp    rdx,r8
   140001c33:	je     0x140001cd6
   140001c39:	mov    QWORD PTR [rsp+0x18],r8
   140001c3e:	mov    QWORD PTR [rsp+0x10],rdx
   140001c43:	push   rbx
   140001c44:	sub    rsp,0x30
   140001c48:	mov    QWORD PTR [rsp+0x40],rsi
   140001c4d:	mov    rbx,rcx
   140001c50:	mov    QWORD PTR [rsp+0x58],rdi
   140001c55:	movabs rsi,0x333333333333332
   140001c5f:	nop
   140001c60:	mov    rax,QWORD PTR [rbx]
   140001c63:	lea    r9,[rdx+0x10]
   140001c67:	mov    rcx,rbx
   140001c6a:	mov    rdi,QWORD PTR [rax]
   140001c6d:	mov    rdx,rdi
   140001c70:	mov    r8,QWORD PTR [rdi+0x8]
   140001c74:	call   0x140001150
   140001c79:	mov    rdx,QWORD PTR [rbx+0x8]
   140001c7d:	mov    rcx,rsi
   140001c80:	sub    rcx,rdx
   140001c83:	cmp    rcx,0x1
   140001c87:	jb     0x140001cd7
   140001c89:	lea    rcx,[rdx+0x1]
   140001c8d:	lea    rdx,[rsp+0x20]
   140001c92:	mov    QWORD PTR [rbx+0x8],rcx
   140001c96:	mov    QWORD PTR [rdi+0x8],rax
   140001c9a:	mov    rcx,QWORD PTR [rax+0x8]
   140001c9e:	mov    QWORD PTR [rcx],rax
   140001ca1:	mov    r9,QWORD PTR [rbx]
   140001ca4:	mov    rcx,rbx
   140001ca7:	mov    r9,QWORD PTR [r9]
   140001caa:	lea    r8,[r9+0x10]
   140001cae:	call   0x1400012b0
   140001cb3:	mov    rdx,QWORD PTR [rsp+0x48]
   140001cb8:	mov    rdx,QWORD PTR [rdx]
   140001cbb:	mov    QWORD PTR [rsp+0x48],rdx
   140001cc0:	cmp    rdx,QWORD PTR [rsp+0x50]
   140001cc5:	jne    0x140001c60
   140001cc7:	mov    rsi,QWORD PTR [rsp+0x40]
   140001ccc:	mov    rdi,QWORD PTR [rsp+0x58]
   140001cd1:	add    rsp,0x30
   140001cd5:	pop    rbx
   140001cd6:	ret    
   140001cd7:	lea    rcx,[rip+0x4a8a]        # 0x140006768
   140001cde:	call   QWORD PTR [rip+0x436c]        # 0x140006050
   140001ce4:	int3   
   140001ce5:	int3   
   140001ce6:	int3   
   140001ce7:	int3   
   140001ce8:	int3   
   140001ce9:	int3   
   140001cea:	int3   
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	mov    QWORD PTR [rsp+0x8],rcx
   140001cf5:	push   rdi
   140001cf6:	sub    rsp,0x30
   140001cfa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001d03:	mov    QWORD PTR [rsp+0x48],rbx
   140001d08:	mov    QWORD PTR [rsp+0x50],rsi
   140001d0d:	mov    rbx,rdx
   140001d10:	mov    rdi,rcx
   140001d13:	xor    esi,esi
   140001d15:	mov    QWORD PTR [rcx],rsi
   140001d18:	mov    QWORD PTR [rcx+0x8],rsi
   140001d1c:	xor    r8d,r8d
   140001d1f:	xor    edx,edx
   140001d21:	call   0x1400029a0
   140001d26:	mov    QWORD PTR [rdi],rax
   140001d29:	mov    QWORD PTR [rdi+0x10],rsi
   140001d2d:	mov    QWORD PTR [rdi+0x18],rsi
   140001d31:	mov    QWORD PTR [rdi+0x20],rsi
   140001d35:	mov    DWORD PTR [rdi+0x38],0x3f800000
   140001d3c:	mov    rdx,rbx
   140001d3f:	mov    rcx,rdi
   140001d42:	call   0x140002af0
   140001d47:	nop
   140001d48:	mov    rax,rdi
   140001d4b:	mov    rbx,QWORD PTR [rsp+0x48]
   140001d50:	mov    rsi,QWORD PTR [rsp+0x50]
   140001d55:	add    rsp,0x30
   140001d59:	pop    rdi
   140001d5a:	ret    
   140001d5b:	int3   
   140001d5c:	int3   
   140001d5d:	int3   
   140001d5e:	int3   
   140001d5f:	int3   
   140001d60:	mov    rax,rcx
   140001d63:	ret    
   140001d64:	int3   
   140001d65:	int3   
   140001d66:	int3   
   140001d67:	int3   
   140001d68:	int3   
   140001d69:	int3   
   140001d6a:	int3   
   140001d6b:	int3   
   140001d6c:	int3   
   140001d6d:	int3   
   140001d6e:	int3   
   140001d6f:	int3   
   140001d70:	mov    rax,rcx
   140001d73:	ret    
   140001d74:	int3   
   140001d75:	int3   
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	int3   
   140001d79:	int3   
   140001d7a:	int3   
   140001d7b:	int3   
   140001d7c:	int3   
   140001d7d:	int3   
   140001d7e:	int3   
   140001d7f:	int3   
   140001d80:	rex push rbx
   140001d82:	sub    rsp,0x20
   140001d86:	xor    eax,eax
   140001d88:	xor    r8d,r8d
   140001d8b:	xor    edx,edx
   140001d8d:	mov    QWORD PTR [rcx],rax
   140001d90:	mov    QWORD PTR [rcx+0x8],rax
   140001d94:	mov    rbx,rcx
   140001d97:	call   0x1400029a0
   140001d9c:	mov    QWORD PTR [rbx],rax
   140001d9f:	mov    rax,rbx
   140001da2:	add    rsp,0x20
   140001da6:	pop    rbx
   140001da7:	ret    
   140001da8:	int3   
   140001da9:	int3   
   140001daa:	int3   
   140001dab:	int3   
   140001dac:	int3   
   140001dad:	int3   
   140001dae:	int3   
   140001daf:	int3   
   140001db0:	rex push rbx
   140001db2:	sub    rsp,0x20
   140001db6:	xor    eax,eax
   140001db8:	xor    r8d,r8d
   140001dbb:	xor    edx,edx
   140001dbd:	mov    QWORD PTR [rcx],rax
   140001dc0:	mov    QWORD PTR [rcx+0x8],rax
   140001dc4:	mov    rbx,rcx
   140001dc7:	call   0x1400029a0
   140001dcc:	mov    QWORD PTR [rbx],rax
   140001dcf:	mov    rax,rbx
   140001dd2:	add    rsp,0x20
   140001dd6:	pop    rbx
   140001dd7:	ret    
   140001dd8:	int3   
   140001dd9:	int3   
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	int3   
   140001ddd:	int3   
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	mov    QWORD PTR [rcx],rdx
   140001de3:	mov    rax,rcx
   140001de6:	ret    
   140001de7:	int3   
   140001de8:	int3   
   140001de9:	int3   
   140001dea:	int3   
   140001deb:	int3   
   140001dec:	int3   
   140001ded:	int3   
   140001dee:	int3   
   140001def:	int3   
   140001df0:	mov    QWORD PTR [rcx],rdx
   140001df3:	mov    rax,rcx
   140001df6:	ret    
   140001df7:	int3   
   140001df8:	int3   
   140001df9:	int3   
   140001dfa:	int3   
   140001dfb:	int3   
   140001dfc:	int3   
   140001dfd:	int3   
   140001dfe:	int3   
   140001dff:	int3   
   140001e00:	mov    QWORD PTR [rcx],rdx
   140001e03:	mov    rax,rcx
   140001e06:	ret    
   140001e07:	int3   
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    QWORD PTR [rcx],0x0
   140001e17:	mov    rax,rcx
   140001e1a:	ret    
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rcx],rdx
   140001e23:	mov    rax,rcx
   140001e26:	ret    
   140001e27:	int3   
   140001e28:	int3   
   140001e29:	int3   
   140001e2a:	int3   
   140001e2b:	int3   
   140001e2c:	int3   
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	mov    QWORD PTR [rcx],0x0
   140001e37:	mov    rax,rcx
   140001e3a:	ret    
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	xor    eax,eax
   140001e42:	mov    QWORD PTR [rcx],rax
   140001e45:	mov    QWORD PTR [rcx+0x8],rax
   140001e49:	mov    rax,rcx
   140001e4c:	ret    
   140001e4d:	int3   
   140001e4e:	int3   
   140001e4f:	int3   
   140001e50:	xor    eax,eax
   140001e52:	mov    QWORD PTR [rcx+0x10],rax
   140001e56:	mov    QWORD PTR [rcx+0x18],rax
   140001e5a:	mov    rax,rcx
   140001e5d:	ret    
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	xor    eax,eax
   140001e62:	mov    QWORD PTR [rcx+0x10],rax
   140001e66:	mov    QWORD PTR [rcx+0x18],rax
   140001e6a:	mov    rax,rcx
   140001e6d:	ret    
   140001e6e:	int3   
   140001e6f:	int3   
   140001e70:	mov    rax,rcx
   140001e73:	ret    
   140001e74:	int3   
   140001e75:	int3   
   140001e76:	int3   
   140001e77:	int3   
   140001e78:	int3   
   140001e79:	int3   
   140001e7a:	int3   
   140001e7b:	int3   
   140001e7c:	int3   
   140001e7d:	int3   
   140001e7e:	int3   
   140001e7f:	int3   
   140001e80:	mov    rax,rcx
   140001e83:	ret    
   140001e84:	int3   
   140001e85:	int3   
   140001e86:	int3   
   140001e87:	int3   
   140001e88:	int3   
   140001e89:	int3   
   140001e8a:	int3   
   140001e8b:	int3   
   140001e8c:	int3   
   140001e8d:	int3   
   140001e8e:	int3   
   140001e8f:	int3   
   140001e90:	xor    eax,eax
   140001e92:	mov    QWORD PTR [rcx],rax
   140001e95:	mov    QWORD PTR [rcx+0x8],rax
   140001e99:	mov    QWORD PTR [rcx+0x10],rax
   140001e9d:	mov    rax,rcx
   140001ea0:	ret    
   140001ea1:	int3   
   140001ea2:	int3   
   140001ea3:	int3   
   140001ea4:	int3   
   140001ea5:	int3   
   140001ea6:	int3   
   140001ea7:	int3   
   140001ea8:	int3   
   140001ea9:	int3   
   140001eaa:	int3   
   140001eab:	int3   
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	mov    QWORD PTR [rcx],rdx
   140001eb3:	mov    rax,rcx
   140001eb6:	ret    
   140001eb7:	int3   
   140001eb8:	int3   
   140001eb9:	int3   
   140001eba:	int3   
   140001ebb:	int3   
   140001ebc:	int3   
   140001ebd:	int3   
   140001ebe:	int3   
   140001ebf:	int3   
   140001ec0:	mov    QWORD PTR [rcx],rdx
   140001ec3:	mov    rax,rcx
   140001ec6:	ret    
   140001ec7:	int3   
   140001ec8:	int3   
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	xor    eax,eax
   140001ed2:	mov    QWORD PTR [rcx],rax
   140001ed5:	mov    QWORD PTR [rcx+0x8],rax
   140001ed9:	mov    QWORD PTR [rcx+0x10],rax
   140001edd:	mov    rax,rcx
   140001ee0:	ret    
   140001ee1:	int3   
   140001ee2:	int3   
   140001ee3:	int3   
   140001ee4:	int3   
   140001ee5:	int3   
   140001ee6:	int3   
   140001ee7:	int3   
   140001ee8:	int3   
   140001ee9:	int3   
   140001eea:	int3   
   140001eeb:	int3   
   140001eec:	int3   
   140001eed:	int3   
   140001eee:	int3   
   140001eef:	int3   
   140001ef0:	mov    rax,rcx
   140001ef3:	ret    
   140001ef4:	int3   
   140001ef5:	int3   
   140001ef6:	int3   
   140001ef7:	int3   
   140001ef8:	int3   
   140001ef9:	int3   
   140001efa:	int3   
   140001efb:	int3   
   140001efc:	int3   
   140001efd:	int3   
   140001efe:	int3   
   140001eff:	int3   
   140001f00:	mov    rax,rcx
   140001f03:	ret    
   140001f04:	int3   
   140001f05:	int3   
   140001f06:	int3   
   140001f07:	int3   
   140001f08:	int3   
   140001f09:	int3   
   140001f0a:	int3   
   140001f0b:	int3   
   140001f0c:	int3   
   140001f0d:	int3   
   140001f0e:	int3   
   140001f0f:	int3   
   140001f10:	mov    rax,rcx
   140001f13:	ret    
   140001f14:	int3   
   140001f15:	int3   
   140001f16:	int3   
   140001f17:	int3   
   140001f18:	int3   
   140001f19:	int3   
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	mov    rax,rcx
   140001f23:	ret    
   140001f24:	int3   
   140001f25:	int3   
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	mov    rax,rcx
   140001f33:	ret    
   140001f34:	int3   
   140001f35:	int3   
   140001f36:	int3   
   140001f37:	int3   
   140001f38:	int3   
   140001f39:	int3   
   140001f3a:	int3   
   140001f3b:	int3   
   140001f3c:	int3   
   140001f3d:	int3   
   140001f3e:	int3   
   140001f3f:	int3   
   140001f40:	mov    rax,rcx
   140001f43:	ret    
   140001f44:	int3   
   140001f45:	int3   
   140001f46:	int3   
   140001f47:	int3   
   140001f48:	int3   
   140001f49:	int3   
   140001f4a:	int3   
   140001f4b:	int3   
   140001f4c:	int3   
   140001f4d:	int3   
   140001f4e:	int3   
   140001f4f:	int3   
   140001f50:	mov    rax,rcx
   140001f53:	ret    
   140001f54:	int3   
   140001f55:	int3   
   140001f56:	int3   
   140001f57:	int3   
   140001f58:	int3   
   140001f59:	int3   
   140001f5a:	int3   
   140001f5b:	int3   
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	mov    rax,rcx
   140001f63:	ret    
   140001f64:	int3   
   140001f65:	int3   
   140001f66:	int3   
   140001f67:	int3   
   140001f68:	int3   
   140001f69:	int3   
   140001f6a:	int3   
   140001f6b:	int3   
   140001f6c:	int3   
   140001f6d:	int3   
   140001f6e:	int3   
   140001f6f:	int3   
   140001f70:	mov    rax,rcx
   140001f73:	ret    
   140001f74:	int3   
   140001f75:	int3   
   140001f76:	int3   
   140001f77:	int3   
   140001f78:	int3   
   140001f79:	int3   
   140001f7a:	int3   
   140001f7b:	int3   
   140001f7c:	int3   
   140001f7d:	int3   
   140001f7e:	int3   
   140001f7f:	int3   
   140001f80:	mov    rax,rcx
   140001f83:	ret    
   140001f84:	int3   
   140001f85:	int3   
   140001f86:	int3   
   140001f87:	int3   
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	mov    rax,rcx
   140001f93:	ret    
   140001f94:	int3   
   140001f95:	int3   
   140001f96:	int3   
   140001f97:	int3   
   140001f98:	int3   
   140001f99:	int3   
   140001f9a:	int3   
   140001f9b:	int3   
   140001f9c:	int3   
   140001f9d:	int3   
   140001f9e:	int3   
   140001f9f:	int3   
   140001fa0:	rex push rbx
   140001fa2:	sub    rsp,0x20
   140001fa6:	mov    QWORD PTR [rcx+0x18],0xf
   140001fae:	mov    QWORD PTR [rcx+0x10],0x0
   140001fb6:	or     r9,0xffffffffffffffff
   140001fba:	xor    r8d,r8d
   140001fbd:	mov    rbx,rcx
   140001fc0:	mov    BYTE PTR [rcx],0x0
   140001fc3:	call   0x140003960
   140001fc8:	mov    rax,rbx
   140001fcb:	add    rsp,0x20
   140001fcf:	pop    rbx
   140001fd0:	ret    
   140001fd1:	int3   
   140001fd2:	int3   
   140001fd3:	int3   
   140001fd4:	int3   
   140001fd5:	int3   
   140001fd6:	int3   
   140001fd7:	int3   
   140001fd8:	int3   
   140001fd9:	int3   
   140001fda:	int3   
   140001fdb:	int3   
   140001fdc:	int3   
   140001fdd:	int3   
   140001fde:	int3   
   140001fdf:	int3   
   140001fe0:	rex push rbx
   140001fe2:	sub    rsp,0x20
   140001fe6:	xor    r8d,r8d
   140001fe9:	mov    QWORD PTR [rcx+0x18],0xf
   140001ff1:	mov    rbx,rcx
   140001ff4:	mov    QWORD PTR [rcx+0x10],r8
   140001ff8:	mov    BYTE PTR [rcx],r8b
   140001ffb:	cmp    BYTE PTR [rdx],r8b
   140001ffe:	je     0x14000200e
   140002000:	or     r8,0xffffffffffffffff
   140002004:	inc    r8
   140002007:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000200c:	jne    0x140002004
   14000200e:	call   0x140003ab0
   140002013:	mov    rax,rbx
   140002016:	add    rsp,0x20
   14000201a:	pop    rbx
   14000201b:	ret    
   14000201c:	int3   
   14000201d:	int3   
   14000201e:	int3   
   14000201f:	int3   
   140002020:	rex push rbx
   140002022:	sub    rsp,0x20
   140002026:	xor    eax,eax
   140002028:	xor    r8d,r8d
   14000202b:	xor    edx,edx
   14000202d:	mov    QWORD PTR [rcx],rax
   140002030:	mov    QWORD PTR [rcx+0x8],rax
   140002034:	mov    rbx,rcx
   140002037:	call   0x1400029a0
   14000203c:	mov    QWORD PTR [rbx],rax
   14000203f:	mov    rax,rbx
   140002042:	add    rsp,0x20
   140002046:	pop    rbx
   140002047:	ret    
   140002048:	int3   
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	int3   
   14000204d:	int3   
   14000204e:	int3   
   14000204f:	int3   
   140002050:	mov    QWORD PTR [rsp+0x8],rcx
   140002055:	push   rdi
   140002056:	sub    rsp,0x30
   14000205a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002063:	mov    QWORD PTR [rsp+0x48],rbx
   140002068:	mov    rbx,rdx
   14000206b:	mov    rdi,rcx
   14000206e:	mov    QWORD PTR [rcx+0x18],0xf
   140002076:	mov    QWORD PTR [rcx+0x10],0x0
   14000207e:	mov    BYTE PTR [rcx],0x0
   140002081:	or     r9,0xffffffffffffffff
   140002085:	xor    r8d,r8d
   140002088:	call   0x140003960
   14000208d:	nop
   14000208e:	lea    rcx,[rdi+0x20]
   140002092:	mov    QWORD PTR [rcx+0x18],0xf
   14000209a:	mov    QWORD PTR [rcx+0x10],0x0
   1400020a2:	mov    BYTE PTR [rcx],0x0
   1400020a5:	lea    rdx,[rbx+0x20]
   1400020a9:	or     r9,0xffffffffffffffff
   1400020ad:	xor    r8d,r8d
   1400020b0:	call   0x140003960
   1400020b5:	nop
   1400020b6:	mov    rax,rdi
   1400020b9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400020be:	add    rsp,0x30
   1400020c2:	pop    rdi
   1400020c3:	ret    
   1400020c4:	int3   
   1400020c5:	int3   
   1400020c6:	int3   
   1400020c7:	int3   
   1400020c8:	int3   
   1400020c9:	int3   
   1400020ca:	int3   
   1400020cb:	int3   
   1400020cc:	int3   
   1400020cd:	int3   
   1400020ce:	int3   
   1400020cf:	int3   
   1400020d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400020d5:	push   rdi
   1400020d6:	sub    rsp,0x30
   1400020da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400020e3:	mov    QWORD PTR [rsp+0x48],rbx
   1400020e8:	mov    QWORD PTR [rsp+0x50],rsi
   1400020ed:	mov    rbx,rdx
   1400020f0:	mov    rdi,rcx
   1400020f3:	xor    esi,esi
   1400020f5:	mov    QWORD PTR [rcx],rsi
   1400020f8:	mov    QWORD PTR [rcx+0x8],rsi
   1400020fc:	xor    r8d,r8d
   1400020ff:	xor    edx,edx
   140002101:	call   0x1400029a0
   140002106:	mov    QWORD PTR [rdi],rax
   140002109:	mov    QWORD PTR [rdi+0x10],rsi
   14000210d:	mov    QWORD PTR [rdi+0x18],rsi
   140002111:	mov    QWORD PTR [rdi+0x20],rsi
   140002115:	mov    DWORD PTR [rdi+0x38],0x3f800000
   14000211c:	mov    rdx,rbx
   14000211f:	mov    rcx,rdi
   140002122:	call   0x140002af0
   140002127:	nop
   140002128:	mov    rax,rdi
   14000212b:	mov    rbx,QWORD PTR [rsp+0x48]
   140002130:	mov    rsi,QWORD PTR [rsp+0x50]
   140002135:	add    rsp,0x30
   140002139:	pop    rdi
   14000213a:	ret    
   14000213b:	int3   
   14000213c:	int3   
   14000213d:	int3   
   14000213e:	int3   
   14000213f:	int3   
   140002140:	xor    eax,eax
   140002142:	mov    QWORD PTR [rcx],rax
   140002145:	mov    QWORD PTR [rcx+0x8],rax
   140002149:	mov    QWORD PTR [rcx+0x10],rax
   14000214d:	mov    rax,rcx
   140002150:	ret    
   140002151:	int3   
   140002152:	int3   
   140002153:	int3   
   140002154:	int3   
   140002155:	int3   
   140002156:	int3   
   140002157:	int3   
   140002158:	int3   
   140002159:	int3   
   14000215a:	int3   
   14000215b:	int3   
   14000215c:	int3   
   14000215d:	int3   
   14000215e:	int3   
   14000215f:	int3   
   140002160:	rex push rdi
   140002162:	sub    rsp,0x30
   140002166:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000216f:	mov    QWORD PTR [rsp+0x48],rbx
   140002174:	mov    QWORD PTR [rsp+0x50],rsi
   140002179:	mov    rbx,rdx
   14000217c:	mov    rdi,rcx
   14000217f:	mov    QWORD PTR [rsp+0x40],rcx
   140002184:	xor    esi,esi
   140002186:	mov    QWORD PTR [rcx],rsi
   140002189:	mov    QWORD PTR [rcx+0x8],rsi
   14000218d:	xor    r8d,r8d
   140002190:	xor    edx,edx
   140002192:	call   0x1400029a0
   140002197:	mov    QWORD PTR [rdi],rax
   14000219a:	mov    QWORD PTR [rdi+0x10],rsi
   14000219e:	mov    QWORD PTR [rdi+0x18],rsi
   1400021a2:	mov    QWORD PTR [rdi+0x20],rsi
   1400021a6:	mov    DWORD PTR [rdi+0x38],0x3f800000
   1400021ad:	mov    rdx,rbx
   1400021b0:	mov    rcx,rdi
   1400021b3:	call   0x140002af0
   1400021b8:	nop
   1400021b9:	mov    rax,QWORD PTR [rbx+0x40]
   1400021bd:	mov    QWORD PTR [rdi+0x40],rax
   1400021c1:	mov    rax,rdi
   1400021c4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400021c9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400021ce:	add    rsp,0x30
   1400021d2:	pop    rdi
   1400021d3:	ret    
   1400021d4:	int3   
   1400021d5:	int3   
   1400021d6:	int3   
   1400021d7:	int3   
   1400021d8:	int3   
   1400021d9:	int3   
   1400021da:	int3   
   1400021db:	int3   
   1400021dc:	int3   
   1400021dd:	int3   
   1400021de:	int3   
   1400021df:	int3   
   1400021e0:	lea    rax,[rip+0x4391]        # 0x140006578
   1400021e7:	mov    QWORD PTR [rcx],rax
   1400021ea:	mov    rax,rcx
   1400021ed:	ret    
   1400021ee:	int3   
   1400021ef:	int3   
   1400021f0:	mov    rax,rcx
   1400021f3:	ret    
   1400021f4:	int3   
   1400021f5:	int3   
   1400021f6:	int3   
   1400021f7:	int3   
   1400021f8:	int3   
   1400021f9:	int3   
   1400021fa:	int3   
   1400021fb:	int3   
   1400021fc:	int3   
   1400021fd:	int3   
   1400021fe:	int3   
   1400021ff:	int3   
   140002200:	lea    rax,[rip+0x43c1]        # 0x1400065c8
   140002207:	mov    QWORD PTR [rcx],rax
   14000220a:	mov    rax,rcx
   14000220d:	ret    
   14000220e:	int3   
   14000220f:	int3   
   140002210:	lea    rax,[rip+0x4411]        # 0x140006628
   140002217:	mov    QWORD PTR [rcx],rax
   14000221a:	mov    rax,rcx
   14000221d:	ret    
   14000221e:	int3   
   14000221f:	int3   
   140002220:	lea    rax,[rip+0x4319]        # 0x140006540
   140002227:	mov    QWORD PTR [rcx],rax
   14000222a:	mov    rax,rcx
   14000222d:	ret    
   14000222e:	int3   
   14000222f:	int3   
   140002230:	mov    DWORD PTR [rcx],edx
   140002232:	mov    QWORD PTR [rcx+0x8],r8
   140002236:	mov    rax,rcx
   140002239:	ret    
   14000223a:	int3   
   14000223b:	int3   
   14000223c:	int3   
   14000223d:	int3   
   14000223e:	int3   
   14000223f:	int3   
   140002240:	rex push rbx
   140002242:	sub    rsp,0x20
   140002246:	mov    rbx,rcx
   140002249:	mov    rcx,QWORD PTR [rcx+0x10]
   14000224d:	test   rcx,rcx
   140002250:	je     0x140002265
   140002252:	call   0x140004c38
   140002257:	xor    eax,eax
   140002259:	mov    QWORD PTR [rbx+0x10],rax
   14000225d:	mov    QWORD PTR [rbx+0x18],rax
   140002261:	mov    QWORD PTR [rbx+0x20],rax
   140002265:	mov    rcx,rbx
   140002268:	call   0x140003d10
   14000226d:	mov    rcx,QWORD PTR [rbx]
   140002270:	add    rsp,0x20
   140002274:	pop    rbx
   140002275:	jmp    0x140004c38
   14000227a:	int3   
   14000227b:	int3   
   14000227c:	int3   
   14000227d:	int3   
   14000227e:	int3   
   14000227f:	int3   
   140002280:	mov    rcx,QWORD PTR [rcx]
   140002283:	jmp    0x140004c38
   140002288:	int3   
   140002289:	int3   
   14000228a:	int3   
   14000228b:	int3   
   14000228c:	int3   
   14000228d:	int3   
   14000228e:	int3   
   14000228f:	int3   
   140002290:	mov    rcx,QWORD PTR [rcx]
   140002293:	jmp    0x140004c38
   140002298:	int3   
   140002299:	int3   
   14000229a:	int3   
   14000229b:	int3   
   14000229c:	int3   
   14000229d:	int3   
   14000229e:	int3   
   14000229f:	int3   
   1400022a0:	rex push rbx
   1400022a2:	sub    rsp,0x20
   1400022a6:	cmp    QWORD PTR [rcx+0x18],0x10
   1400022ab:	mov    rbx,rcx
   1400022ae:	jb     0x1400022b8
   1400022b0:	mov    rcx,QWORD PTR [rcx]
   1400022b3:	call   0x140004c38
   1400022b8:	mov    QWORD PTR [rbx+0x18],0xf
   1400022c0:	mov    QWORD PTR [rbx+0x10],0x0
   1400022c8:	mov    BYTE PTR [rbx],0x0
   1400022cb:	add    rsp,0x20
   1400022cf:	pop    rbx
   1400022d0:	ret    
   1400022d1:	int3   
   1400022d2:	int3   
   1400022d3:	int3   
   1400022d4:	int3   
   1400022d5:	int3   
   1400022d6:	int3   
   1400022d7:	int3   
   1400022d8:	int3   
   1400022d9:	int3   
   1400022da:	int3   
   1400022db:	int3   
   1400022dc:	int3   
   1400022dd:	int3   
   1400022de:	int3   
   1400022df:	int3   
   1400022e0:	rex push rbx
   1400022e2:	sub    rsp,0x20
   1400022e6:	mov    rbx,rcx
   1400022e9:	call   0x140003d10
   1400022ee:	mov    rcx,QWORD PTR [rbx]
   1400022f1:	add    rsp,0x20
   1400022f5:	pop    rbx
   1400022f6:	jmp    0x140004c38
   1400022fb:	int3   
   1400022fc:	int3   
   1400022fd:	int3   
   1400022fe:	int3   
   1400022ff:	int3   
   140002300:	rex push rbx
   140002302:	sub    rsp,0x20
   140002306:	cmp    QWORD PTR [rcx+0x38],0x10
   14000230b:	mov    rbx,rcx
   14000230e:	jb     0x140002319
   140002310:	mov    rcx,QWORD PTR [rcx+0x20]
   140002314:	call   0x140004c38
   140002319:	mov    QWORD PTR [rbx+0x38],0xf
   140002321:	mov    QWORD PTR [rbx+0x30],0x0
   140002329:	mov    BYTE PTR [rbx+0x20],0x0
   14000232d:	cmp    QWORD PTR [rbx+0x18],0x10
   140002332:	jb     0x14000233c
   140002334:	mov    rcx,QWORD PTR [rbx]
   140002337:	call   0x140004c38
   14000233c:	mov    QWORD PTR [rbx+0x18],0xf
   140002344:	mov    QWORD PTR [rbx+0x10],0x0
   14000234c:	mov    BYTE PTR [rbx],0x0
   14000234f:	add    rsp,0x20
   140002353:	pop    rbx
   140002354:	ret    
   140002355:	int3   
   140002356:	int3   
   140002357:	int3   
   140002358:	int3   
   140002359:	int3   
   14000235a:	int3   
   14000235b:	int3   
   14000235c:	int3   
   14000235d:	int3   
   14000235e:	int3   
   14000235f:	int3   
   140002360:	rex push rbx
   140002362:	sub    rsp,0x20
   140002366:	mov    rbx,rcx
   140002369:	mov    rcx,QWORD PTR [rcx+0x10]
   14000236d:	test   rcx,rcx
   140002370:	je     0x140002385
   140002372:	call   0x140004c38
   140002377:	xor    eax,eax
   140002379:	mov    QWORD PTR [rbx+0x10],rax
   14000237d:	mov    QWORD PTR [rbx+0x18],rax
   140002381:	mov    QWORD PTR [rbx+0x20],rax
   140002385:	mov    rcx,rbx
   140002388:	call   0x140003d10
   14000238d:	mov    rcx,QWORD PTR [rbx]
   140002390:	add    rsp,0x20
   140002394:	pop    rbx
   140002395:	jmp    0x140004c38
   14000239a:	int3   
   14000239b:	int3   
   14000239c:	int3   
   14000239d:	int3   
   14000239e:	int3   
   14000239f:	int3   
   1400023a0:	rex push rbx
   1400023a2:	sub    rsp,0x20
   1400023a6:	mov    rbx,rcx
   1400023a9:	mov    rcx,QWORD PTR [rcx]
   1400023ac:	test   rcx,rcx
   1400023af:	je     0x1400023c3
   1400023b1:	call   0x140004c38
   1400023b6:	xor    eax,eax
   1400023b8:	mov    QWORD PTR [rbx],rax
   1400023bb:	mov    QWORD PTR [rbx+0x8],rax
   1400023bf:	mov    QWORD PTR [rbx+0x10],rax
   1400023c3:	add    rsp,0x20
   1400023c7:	pop    rbx
   1400023c8:	ret    
   1400023c9:	int3   
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	int3   
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	lea    rax,[rip+0x4169]        # 0x140006540
   1400023d7:	mov    QWORD PTR [rcx],rax
   1400023da:	ret    
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	lea    rax,[rip+0x4159]        # 0x140006540
   1400023e7:	mov    QWORD PTR [rcx],rax
   1400023ea:	ret    
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	lea    rax,[rip+0x4149]        # 0x140006540
   1400023f7:	mov    QWORD PTR [rcx],rax
   1400023fa:	ret    
   1400023fb:	int3   
   1400023fc:	int3   
   1400023fd:	int3   
   1400023fe:	int3   
   1400023ff:	int3   
   140002400:	lea    rax,[rip+0x4139]        # 0x140006540
   140002407:	mov    QWORD PTR [rcx],rax
   14000240a:	ret    
   14000240b:	int3   
   14000240c:	int3   
   14000240d:	int3   
   14000240e:	int3   
   14000240f:	int3   
   140002410:	mov    rax,rdx
   140002413:	ret    
   140002414:	int3   
   140002415:	int3   
   140002416:	int3   
   140002417:	int3   
   140002418:	int3   
   140002419:	int3   
   14000241a:	int3   
   14000241b:	int3   
   14000241c:	int3   
   14000241d:	int3   
   14000241e:	int3   
   14000241f:	int3   
   140002420:	ret    0x0
   140002423:	int3   
   140002424:	int3   
   140002425:	int3   
   140002426:	int3   
   140002427:	int3   
   140002428:	int3   
   140002429:	int3   
   14000242a:	int3   
   14000242b:	int3   
   14000242c:	int3   
   14000242d:	int3   
   14000242e:	int3   
   14000242f:	int3   
   140002430:	rex push rbx
   140002432:	sub    rsp,0x20
   140002436:	mov    rbx,rcx
   140002439:	cmp    rcx,rdx
   14000243c:	je     0x140002443
   14000243e:	call   0x140002af0
   140002443:	mov    rax,rbx
   140002446:	add    rsp,0x20
   14000244a:	pop    rbx
   14000244b:	ret    
   14000244c:	int3   
   14000244d:	int3   
   14000244e:	int3   
   14000244f:	int3   
   140002450:	rex push rbx
   140002452:	sub    rsp,0x20
   140002456:	mov    rbx,rcx
   140002459:	cmp    rcx,rdx
   14000245c:	je     0x140002463
   14000245e:	call   0x140002af0
   140002463:	mov    rax,rbx
   140002466:	add    rsp,0x20
   14000246a:	pop    rbx
   14000246b:	ret    
   14000246c:	int3   
   14000246d:	int3   
   14000246e:	int3   
   14000246f:	int3   
   140002470:	mov    QWORD PTR [rsp+0x8],rbx
   140002475:	push   rdi
   140002476:	sub    rsp,0x20
   14000247a:	mov    rdi,rdx
   14000247d:	mov    rbx,rcx
   140002480:	cmp    rcx,rdx
   140002483:	je     0x14000248a
   140002485:	call   0x140002af0
   14000248a:	mov    rax,QWORD PTR [rdi+0x40]
   14000248e:	mov    QWORD PTR [rbx+0x40],rax
   140002492:	mov    rax,rbx
   140002495:	mov    rbx,QWORD PTR [rsp+0x30]
   14000249a:	add    rsp,0x20
   14000249e:	pop    rdi
   14000249f:	ret    
   1400024a0:	mov    rdx,QWORD PTR [rdx]
   1400024a3:	cmp    QWORD PTR [rcx],rdx
   1400024a6:	sete   al
   1400024a9:	ret    
   1400024aa:	int3   
   1400024ab:	int3   
   1400024ac:	int3   
   1400024ad:	int3   
   1400024ae:	int3   
   1400024af:	int3   
   1400024b0:	mov    rdx,QWORD PTR [rdx]
   1400024b3:	cmp    QWORD PTR [rcx],rdx
   1400024b6:	sete   al
   1400024b9:	ret    
   1400024ba:	int3   
   1400024bb:	int3   
   1400024bc:	int3   
   1400024bd:	int3   
   1400024be:	int3   
   1400024bf:	int3   
   1400024c0:	cmp    rcx,rdx
   1400024c3:	sete   al
   1400024c6:	ret    
   1400024c7:	int3   
   1400024c8:	int3   
   1400024c9:	int3   
   1400024ca:	int3   
   1400024cb:	int3   
   1400024cc:	int3   
   1400024cd:	int3   
   1400024ce:	int3   
   1400024cf:	int3   
   1400024d0:	mov    rax,QWORD PTR [rdx+0x8]
   1400024d4:	cmp    QWORD PTR [rcx+0x8],rax
   1400024d8:	jne    0x1400024e3
   1400024da:	mov    eax,DWORD PTR [rdx]
   1400024dc:	cmp    DWORD PTR [rcx],eax
   1400024de:	jne    0x1400024e3
   1400024e0:	mov    al,0x1
   1400024e2:	ret    
   1400024e3:	xor    al,al
   1400024e5:	ret    
   1400024e6:	int3   
   1400024e7:	int3   
   1400024e8:	int3   
   1400024e9:	int3   
   1400024ea:	int3   
   1400024eb:	int3   
   1400024ec:	int3   
   1400024ed:	int3   
   1400024ee:	int3   
   1400024ef:	int3   
   1400024f0:	mov    rdx,QWORD PTR [rdx]
   1400024f3:	cmp    QWORD PTR [rcx],rdx
   1400024f6:	setne  al
   1400024f9:	ret    
   1400024fa:	int3   
   1400024fb:	int3   
   1400024fc:	int3   
   1400024fd:	int3   
   1400024fe:	int3   
   1400024ff:	int3   
   140002500:	mov    rdx,QWORD PTR [rdx]
   140002503:	cmp    QWORD PTR [rcx],rdx
   140002506:	setne  al
   140002509:	ret    
   14000250a:	int3   
   14000250b:	int3   
   14000250c:	int3   
   14000250d:	int3   
   14000250e:	int3   
   14000250f:	int3   
   140002510:	mov    rax,QWORD PTR [rcx]
   140002513:	lea    rax,[rax+rdx*8]
   140002517:	ret    
   140002518:	int3   
   140002519:	int3   
   14000251a:	int3   
   14000251b:	int3   
   14000251c:	int3   
   14000251d:	int3   
   14000251e:	int3   
   14000251f:	int3   
   140002520:	mov    rax,QWORD PTR [rcx]
   140002523:	add    rax,0x10
   140002527:	ret    
   140002528:	int3   
   140002529:	int3   
   14000252a:	int3   
   14000252b:	int3   
   14000252c:	int3   
   14000252d:	int3   
   14000252e:	int3   
   14000252f:	int3   
   140002530:	mov    rax,QWORD PTR [rcx]
   140002533:	add    rax,0x10
   140002537:	ret    
   140002538:	int3   
   140002539:	int3   
   14000253a:	int3   
   14000253b:	int3   
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	mov    rax,QWORD PTR [rcx]
   140002543:	add    rax,0x10
   140002547:	ret    
   140002548:	int3   
   140002549:	int3   
   14000254a:	int3   
   14000254b:	int3   
   14000254c:	int3   
   14000254d:	int3   
   14000254e:	int3   
   14000254f:	int3   
   140002550:	mov    rax,QWORD PTR [rcx]
   140002553:	add    rax,0x10
   140002557:	ret    
   140002558:	int3   
   140002559:	int3   
   14000255a:	int3   
   14000255b:	int3   
   14000255c:	int3   
   14000255d:	int3   
   14000255e:	int3   
   14000255f:	int3   
   140002560:	mov    rax,QWORD PTR [rcx]
   140002563:	mov    QWORD PTR [rdx],rax
   140002566:	mov    rax,QWORD PTR [rax]
   140002569:	mov    QWORD PTR [rcx],rax
   14000256c:	mov    rax,rdx
   14000256f:	ret    
   140002570:	mov    rax,QWORD PTR [rcx]
   140002573:	mov    rdx,QWORD PTR [rax]
   140002576:	mov    rax,rcx
   140002579:	mov    QWORD PTR [rcx],rdx
   14000257c:	ret    
   14000257d:	int3   
   14000257e:	int3   
   14000257f:	int3   
   140002580:	mov    rax,QWORD PTR [rcx]
   140002583:	mov    rdx,QWORD PTR [rax]
   140002586:	mov    rax,rcx
   140002589:	mov    QWORD PTR [rcx],rdx
   14000258c:	ret    
   14000258d:	int3   
   14000258e:	int3   
   14000258f:	int3   
   140002590:	mov    rax,QWORD PTR [rcx]
   140002593:	mov    rdx,QWORD PTR [rax]
   140002596:	mov    rax,rcx
   140002599:	mov    QWORD PTR [rcx],rdx
   14000259c:	ret    
   14000259d:	int3   
   14000259e:	int3   
   14000259f:	int3   
   1400025a0:	mov    rax,QWORD PTR [rcx]
   1400025a3:	mov    rdx,QWORD PTR [rax+0x8]
   1400025a7:	mov    rax,rcx
   1400025aa:	mov    QWORD PTR [rcx],rdx
   1400025ad:	ret    
   1400025ae:	int3   
   1400025af:	int3   
   1400025b0:	mov    rax,QWORD PTR [rcx]
   1400025b3:	mov    rdx,QWORD PTR [rax+0x8]
   1400025b7:	mov    rax,rcx
   1400025ba:	mov    QWORD PTR [rcx],rdx
   1400025bd:	ret    
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	mov    rax,QWORD PTR [rcx]
   1400025c3:	lea    rcx,[rax+r8*8]
   1400025c7:	mov    rax,rdx
   1400025ca:	mov    QWORD PTR [rdx],rcx
   1400025cd:	ret    
   1400025ce:	int3   
   1400025cf:	int3   
   1400025d0:	cmp    QWORD PTR [rdx+0x18],0x10
   1400025d5:	mov    r9,QWORD PTR [rdx+0x10]
   1400025d9:	mov    r8,rdx
   1400025dc:	jb     0x1400025e1
   1400025de:	mov    r8,QWORD PTR [rdx]
   1400025e1:	xor    edx,edx
   1400025e3:	movabs rcx,0xcbf29ce484222325
   1400025ed:	test   r9,r9
   1400025f0:	je     0x140002614
   1400025f2:	movabs r10,0x100000001b3
   1400025fc:	nop    DWORD PTR [rax+0x0]
   140002600:	movzx  eax,BYTE PTR [r8+rdx*1]
   140002605:	inc    rdx
   140002608:	xor    rcx,rax
   14000260b:	imul   rcx,r10
   14000260f:	cmp    rdx,r9
   140002612:	jb     0x140002600
   140002614:	mov    rax,rcx
   140002617:	shr    rax,0x20
   14000261b:	xor    rax,rcx
   14000261e:	ret    
   14000261f:	int3   
   140002620:	sub    rsp,0x28
   140002624:	mov    rcx,rdx
   140002627:	mov    rdx,r8
   14000262a:	call   0x140003dc0
   14000262f:	test   eax,eax
   140002631:	setne  al
   140002634:	add    rsp,0x28
   140002638:	ret    
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	sub    rsp,0x28
   140002644:	mov    rcx,rdx
   140002647:	mov    rdx,r8
   14000264a:	call   0x140003dc0
   14000264f:	test   eax,eax
   140002651:	sete   al
   140002654:	add    rsp,0x28
   140002658:	ret    
   140002659:	int3   
   14000265a:	int3   
   14000265b:	int3   
   14000265c:	int3   
   14000265d:	int3   
   14000265e:	int3   
   14000265f:	int3   
   140002660:	cmp    QWORD PTR [rdx+0x18],0x10
   140002665:	mov    r9,QWORD PTR [rdx+0x10]
   140002669:	mov    r8,rdx
   14000266c:	jb     0x140002671
   14000266e:	mov    r8,QWORD PTR [rdx]
   140002671:	xor    edx,edx
   140002673:	movabs rcx,0xcbf29ce484222325
   14000267d:	test   r9,r9
   140002680:	je     0x1400026a4
   140002682:	movabs r10,0x100000001b3
   14000268c:	nop    DWORD PTR [rax+0x0]
   140002690:	movzx  eax,BYTE PTR [r8+rdx*1]
   140002695:	inc    rdx
   140002698:	xor    rcx,rax
   14000269b:	imul   rcx,r10
   14000269f:	cmp    rdx,r9
   1400026a2:	jb     0x140002690
   1400026a4:	mov    rax,rcx
   1400026a7:	shr    rax,0x20
   1400026ab:	xor    rax,rcx
   1400026ae:	ret    
   1400026af:	int3   
   1400026b0:	lea    rax,[rdx*8+0x0]
   1400026b8:	add    QWORD PTR [rcx],rax
   1400026bb:	mov    rax,rcx
   1400026be:	ret    
   1400026bf:	int3   
   1400026c0:	lea    rax,[rdx*8+0x0]
   1400026c8:	add    QWORD PTR [rcx],rax
   1400026cb:	mov    rax,rcx
   1400026ce:	ret    
   1400026cf:	int3   
   1400026d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026d5:	push   rdi
   1400026d6:	sub    rsp,0x20
   1400026da:	cmp    QWORD PTR [rcx+0x38],0x10
   1400026df:	mov    edi,edx
   1400026e1:	mov    rbx,rcx
   1400026e4:	jb     0x1400026ef
   1400026e6:	mov    rcx,QWORD PTR [rcx+0x20]
   1400026ea:	call   0x140004c38
   1400026ef:	mov    QWORD PTR [rbx+0x38],0xf
   1400026f7:	mov    QWORD PTR [rbx+0x30],0x0
   1400026ff:	mov    BYTE PTR [rbx+0x20],0x0
   140002703:	cmp    QWORD PTR [rbx+0x18],0x10
   140002708:	jb     0x140002712
   14000270a:	mov    rcx,QWORD PTR [rbx]
   14000270d:	call   0x140004c38
   140002712:	mov    QWORD PTR [rbx+0x18],0xf
   14000271a:	mov    QWORD PTR [rbx+0x10],0x0
   140002722:	mov    BYTE PTR [rbx],0x0
   140002725:	test   dil,0x1
   140002729:	je     0x140002733
   14000272b:	mov    rcx,rbx
   14000272e:	call   0x140004c38
   140002733:	mov    rax,rbx
   140002736:	mov    rbx,QWORD PTR [rsp+0x30]
   14000273b:	add    rsp,0x20
   14000273f:	pop    rdi
   140002740:	ret    
   140002741:	int3   
   140002742:	int3   
   140002743:	int3   
   140002744:	int3   
   140002745:	int3   
   140002746:	int3   
   140002747:	int3   
   140002748:	int3   
   140002749:	int3   
   14000274a:	int3   
   14000274b:	int3   
   14000274c:	int3   
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	rex push rbx
   140002752:	sub    rsp,0x20
   140002756:	lea    rax,[rip+0x3de3]        # 0x140006540
   14000275d:	mov    rbx,rcx
   140002760:	mov    QWORD PTR [rcx],rax
   140002763:	test   dl,0x1
   140002766:	je     0x14000276d
   140002768:	call   0x140004c38
   14000276d:	mov    rax,rbx
   140002770:	add    rsp,0x20
   140002774:	pop    rbx
   140002775:	ret    
   140002776:	int3   
   140002777:	int3   
   140002778:	int3   
   140002779:	int3   
   14000277a:	int3   
   14000277b:	int3   
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	rex push rbx
   140002782:	sub    rsp,0x20
   140002786:	lea    rax,[rip+0x3db3]        # 0x140006540
   14000278d:	mov    rbx,rcx
   140002790:	mov    QWORD PTR [rcx],rax
   140002793:	test   dl,0x1
   140002796:	je     0x14000279d
   140002798:	call   0x140004c38
   14000279d:	mov    rax,rbx
   1400027a0:	add    rsp,0x20
   1400027a4:	pop    rbx
   1400027a5:	ret    
   1400027a6:	int3   
   1400027a7:	int3   
   1400027a8:	int3   
   1400027a9:	int3   
   1400027aa:	int3   
   1400027ab:	int3   
   1400027ac:	int3   
   1400027ad:	int3   
   1400027ae:	int3   
   1400027af:	int3   
   1400027b0:	rex push rbx
   1400027b2:	sub    rsp,0x20
   1400027b6:	lea    rax,[rip+0x3d83]        # 0x140006540
   1400027bd:	mov    rbx,rcx
   1400027c0:	mov    QWORD PTR [rcx],rax
   1400027c3:	test   dl,0x1
   1400027c6:	je     0x1400027cd
   1400027c8:	call   0x140004c38
   1400027cd:	mov    rax,rbx
   1400027d0:	add    rsp,0x20
   1400027d4:	pop    rbx
   1400027d5:	ret    
   1400027d6:	int3   
   1400027d7:	int3   
   1400027d8:	int3   
   1400027d9:	int3   
   1400027da:	int3   
   1400027db:	int3   
   1400027dc:	int3   
   1400027dd:	int3   
   1400027de:	int3   
   1400027df:	int3   
   1400027e0:	rex push rbx
   1400027e2:	sub    rsp,0x20
   1400027e6:	lea    rax,[rip+0x3d53]        # 0x140006540
   1400027ed:	mov    rbx,rcx
   1400027f0:	mov    QWORD PTR [rcx],rax
   1400027f3:	test   dl,0x1
   1400027f6:	je     0x1400027fd
   1400027f8:	call   0x140004c38
   1400027fd:	mov    rax,rbx
   140002800:	add    rsp,0x20
   140002804:	pop    rbx
   140002805:	ret    
   140002806:	int3   
   140002807:	int3   
   140002808:	int3   
   140002809:	int3   
   14000280a:	int3   
   14000280b:	int3   
   14000280c:	int3   
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	mov    QWORD PTR [rsp+0x8],rbx
   140002815:	xor    r11d,r11d
   140002818:	lea    rax,[rdx-0x1]
   14000281c:	mov    ebx,0x80070057
   140002821:	cmp    rax,0x7ffffffe
   140002827:	mov    r10d,r11d
   14000282a:	cmova  r10d,ebx
   14000282e:	test   r10d,r10d
   140002831:	js     0x1400028a8
   140002833:	cmp    r9,0x7ffffffe
   14000283a:	jbe    0x140002848
   14000283c:	mov    WORD PTR [rcx],r11w
   140002840:	mov    eax,ebx
   140002842:	mov    rbx,QWORD PTR [rsp+0x8]
   140002847:	ret    
   140002848:	mov    r10d,r11d
   14000284b:	test   rdx,rdx
   14000284e:	je     0x140002891
   140002850:	sub    r9,rdx
   140002853:	sub    r8,rcx
   140002856:	lea    rax,[r9+rdx*1]
   14000285a:	test   rax,rax
   14000285d:	je     0x14000288c
   14000285f:	movzx  eax,WORD PTR [r8+rcx*1]
   140002864:	test   ax,ax
   140002867:	je     0x14000288c
   140002869:	mov    WORD PTR [rcx],ax
   14000286c:	add    rcx,0x2
   140002870:	dec    rdx
   140002873:	jne    0x140002856
   140002875:	sub    rcx,0x2
   140002879:	mov    r10d,0x8007007a
   14000287f:	mov    WORD PTR [rcx],r11w
   140002883:	mov    eax,r10d
   140002886:	mov    rbx,QWORD PTR [rsp+0x8]
   14000288b:	ret    
   14000288c:	test   rdx,rdx
   14000288f:	jne    0x1400028ad
   140002891:	sub    rcx,0x2
   140002895:	mov    r10d,0x8007007a
   14000289b:	mov    WORD PTR [rcx],r11w
   14000289f:	mov    eax,r10d
   1400028a2:	mov    rbx,QWORD PTR [rsp+0x8]
   1400028a7:	ret    
   1400028a8:	test   rdx,rdx
   1400028ab:	je     0x1400028b1
   1400028ad:	mov    WORD PTR [rcx],r11w
   1400028b1:	mov    rbx,QWORD PTR [rsp+0x8]
   1400028b6:	mov    eax,r10d
   1400028b9:	ret    
   1400028ba:	int3   
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028c5:	mov    QWORD PTR [rsp+0x10],rdi
   1400028ca:	xor    edi,edi
   1400028cc:	mov    rbx,r8
   1400028cf:	mov    r11d,edi
   1400028d2:	mov    r10d,edi
   1400028d5:	test   rdx,rdx
   1400028d8:	je     0x14000290c
   1400028da:	mov    rax,QWORD PTR [rsp+0x28]
   1400028df:	sub    r9,rcx
   1400028e2:	test   rax,rax
   1400028e5:	je     0x140002907
   1400028e7:	movzx  r8d,WORD PTR [r9+rcx*1]
   1400028ec:	test   r8w,r8w
   1400028f0:	je     0x140002907
   1400028f2:	mov    WORD PTR [rcx],r8w
   1400028f6:	add    rcx,0x2
   1400028fa:	dec    rax
   1400028fd:	inc    r10
   140002900:	dec    rdx
   140002903:	jne    0x1400028e2
   140002905:	jmp    0x14000290c
   140002907:	test   rdx,rdx
   14000290a:	jne    0x140002919
   14000290c:	sub    rcx,0x2
   140002910:	mov    r11d,0x8007007a
   140002916:	dec    r10
   140002919:	mov    WORD PTR [rcx],di
   14000291c:	mov    eax,r11d
   14000291f:	test   rbx,rbx
   140002922:	je     0x140002927
   140002924:	mov    QWORD PTR [rbx],r10
   140002927:	mov    rbx,QWORD PTR [rsp+0x8]
   14000292c:	mov    rdi,QWORD PTR [rsp+0x10]
   140002931:	ret    
   140002932:	int3   
   140002933:	int3   
   140002934:	int3   
   140002935:	int3   
   140002936:	int3   
   140002937:	int3   
   140002938:	int3   
   140002939:	int3   
   14000293a:	int3   
   14000293b:	int3   
   14000293c:	int3   
   14000293d:	int3   
   14000293e:	int3   
   14000293f:	int3   
   140002940:	test   rdx,rdx
   140002943:	je     0x14000294d
   140002945:	cmp    rdx,r8
   140002948:	ja     0x14000294d
   14000294a:	xor    eax,eax
   14000294c:	ret    
   14000294d:	mov    eax,0x80070057
   140002952:	ret    
   140002953:	int3   
   140002954:	int3   
   140002955:	int3   
   140002956:	int3   
   140002957:	int3   
   140002958:	int3   
   140002959:	int3   
   14000295a:	int3   
   14000295b:	int3   
   14000295c:	int3   
   14000295d:	int3   
   14000295e:	int3   
   14000295f:	int3   
   140002960:	ret    0x0
   140002963:	int3   
   140002964:	int3   
   140002965:	int3   
   140002966:	int3   
   140002967:	int3   
   140002968:	int3   
   140002969:	int3   
   14000296a:	int3   
   14000296b:	int3   
   14000296c:	int3   
   14000296d:	int3   
   14000296e:	int3   
   14000296f:	int3   
   140002970:	mov    rax,QWORD PTR [rcx+0x10]
   140002974:	add    r8,r8
   140002977:	mov    rcx,QWORD PTR [rax+r8*8]
   14000297b:	mov    rax,rdx
   14000297e:	mov    QWORD PTR [rdx],rcx
   140002981:	ret    
   140002982:	int3   
   140002983:	int3   
   140002984:	int3   
   140002985:	int3   
   140002986:	int3   
   140002987:	int3   
   140002988:	int3   
   140002989:	int3   
   14000298a:	int3   
   14000298b:	int3   
   14000298c:	int3   
   14000298d:	int3   
   14000298e:	int3   
   14000298f:	int3   
   140002990:	xor    r8d,r8d
   140002993:	xor    edx,edx
   140002995:	jmp    0x1400029a0
   14000299a:	int3   
   14000299b:	int3   
   14000299c:	int3   
   14000299d:	int3   
   14000299e:	int3   
   14000299f:	int3   
   1400029a0:	rex push rdi
   1400029a2:	sub    rsp,0x30
   1400029a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400029af:	mov    QWORD PTR [rsp+0x40],rbx
   1400029b4:	mov    rdi,r8
   1400029b7:	mov    rbx,rdx
   1400029ba:	mov    ecx,0x50
   1400029bf:	call   0x140004c32
   1400029c4:	mov    QWORD PTR [rsp+0x58],rax
   1400029c9:	test   rax,rax
   1400029cc:	jne    0x1400029d5
   1400029ce:	call   QWORD PTR [rip+0x3684]        # 0x140006058
   1400029d4:	int3   
   1400029d5:	test   rbx,rbx
   1400029d8:	jne    0x1400029e0
   1400029da:	mov    rbx,rax
   1400029dd:	mov    rdi,rax
   1400029e0:	mov    QWORD PTR [rax],rbx
   1400029e3:	lea    rcx,[rax+0x8]
   1400029e7:	test   rcx,rcx
   1400029ea:	je     0x1400029ef
   1400029ec:	mov    QWORD PTR [rcx],rdi
   1400029ef:	mov    rbx,QWORD PTR [rsp+0x40]
   1400029f4:	add    rsp,0x30
   1400029f8:	pop    rdi
   1400029f9:	ret    
   1400029fa:	int3   
   1400029fb:	int3   
   1400029fc:	int3   
   1400029fd:	int3   
   1400029fe:	int3   
   1400029ff:	int3   
   140002a00:	mov    QWORD PTR [rsp+0x20],rbx
   140002a05:	push   rsi
   140002a06:	sub    rsp,0x40
   140002a0a:	mov    rax,QWORD PTR [rcx+0x8]
   140002a0e:	mov    rbx,QWORD PTR [rcx+0x30]
   140002a12:	movss  xmm2,DWORD PTR [rip+0x3d62]        # 0x14000677c
   140002a1a:	xorps  xmm0,xmm0
   140002a1d:	mov    rsi,rcx
   140002a20:	cvtsi2ss xmm0,rax
   140002a25:	test   rax,rax
   140002a28:	jns    0x140002a2e
   140002a2a:	addss  xmm0,xmm2
   140002a2e:	xorps  xmm1,xmm1
   140002a31:	cvtsi2ss xmm1,rbx
   140002a36:	test   rbx,rbx
   140002a39:	jns    0x140002a3f
   140002a3b:	addss  xmm1,xmm2
   140002a3f:	divss  xmm0,xmm1
   140002a43:	comiss xmm0,DWORD PTR [rcx+0x38]
   140002a47:	jbe    0x140002ae4
   140002a4d:	mov    QWORD PTR [rsp+0x60],rdi
   140002a52:	cmp    rbx,0x200
   140002a59:	jae    0x140002a65
   140002a5b:	lea    rbx,[rbx*8+0x0]
   140002a63:	jmp    0x140002a77
   140002a65:	movabs rax,0xfffffffffffffff
   140002a6f:	cmp    rbx,rax
   140002a72:	jae    0x140002a77
   140002a74:	add    rbx,rbx
   140002a77:	mov    rax,QWORD PTR [rcx]
   140002a7a:	mov    r8,QWORD PTR [rcx+0x10]
   140002a7e:	add    rcx,0x10
   140002a82:	mov    QWORD PTR [rsp+0x50],rax
   140002a87:	lea    rax,[rsp+0x50]
   140002a8c:	lea    r9,[rbx+rbx*1]
   140002a90:	lea    rdx,[rsp+0x58]
   140002a95:	mov    QWORD PTR [rcx+0x8],r8
   140002a99:	mov    QWORD PTR [rsp+0x20],rax
   140002a9e:	call   0x1400030f0
   140002aa3:	mov    rdi,QWORD PTR [rsi]
   140002aa6:	lea    rax,[rbx-0x1]
   140002aaa:	mov    QWORD PTR [rsi+0x28],rax
   140002aae:	mov    QWORD PTR [rsi+0x30],rbx
   140002ab2:	cmp    QWORD PTR [rdi],rdi
   140002ab5:	je     0x140002adf
   140002ab7:	mov    rdi,QWORD PTR [rdi+0x8]
   140002abb:	nop    DWORD PTR [rax+rax*1+0x0]
   140002ac0:	mov    rbx,QWORD PTR [rsi]
   140002ac3:	lea    rdx,[rsp+0x30]
   140002ac8:	mov    rcx,rsi
   140002acb:	mov    rbx,QWORD PTR [rbx]
   140002ace:	mov    r9,rbx
   140002ad1:	lea    r8,[rbx+0x10]
   140002ad5:	call   0x1400012b0
   140002ada:	cmp    rbx,rdi
   140002add:	jne    0x140002ac0
   140002adf:	mov    rdi,QWORD PTR [rsp+0x60]
   140002ae4:	mov    rbx,QWORD PTR [rsp+0x68]
   140002ae9:	add    rsp,0x40
   140002aed:	pop    rsi
   140002aee:	ret    
   140002aef:	int3   
   140002af0:	mov    QWORD PTR [rsp+0x8],rcx
   140002af5:	push   rdi
   140002af6:	sub    rsp,0x40
   140002afa:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002b03:	mov    QWORD PTR [rsp+0x68],rbx
   140002b08:	mov    rdi,rdx
   140002b0b:	mov    rbx,rcx
   140002b0e:	mov    rax,QWORD PTR [rdx+0x28]
   140002b12:	mov    QWORD PTR [rcx+0x28],rax
   140002b16:	mov    rax,QWORD PTR [rdx+0x30]
   140002b1a:	mov    QWORD PTR [rcx+0x30],rax
   140002b1e:	mov    eax,DWORD PTR [rdx+0x38]
   140002b21:	mov    DWORD PTR [rcx+0x38],eax
   140002b24:	call   0x140003d10
   140002b29:	nop
   140002b2a:	mov    rax,QWORD PTR [rbx]
   140002b2d:	mov    QWORD PTR [rsp+0x58],rax
   140002b32:	mov    r9,QWORD PTR [rdi+0x18]
   140002b36:	sub    r9,QWORD PTR [rdi+0x10]
   140002b3a:	sar    r9,0x3
   140002b3e:	lea    rcx,[rbx+0x10]
   140002b42:	mov    r8,QWORD PTR [rcx]
   140002b45:	mov    QWORD PTR [rcx+0x8],r8
   140002b49:	lea    rax,[rsp+0x58]
   140002b4e:	mov    QWORD PTR [rsp+0x20],rax
   140002b53:	lea    rdx,[rsp+0x60]
   140002b58:	call   0x1400030f0
   140002b5d:	mov    rdx,QWORD PTR [rdi]
   140002b60:	mov    r8,rdx
   140002b63:	mov    rdx,QWORD PTR [rdx]
   140002b66:	mov    rcx,rbx
   140002b69:	call   0x140001c30
   140002b6e:	nop
   140002b6f:	mov    rbx,QWORD PTR [rsp+0x68]
   140002b74:	add    rsp,0x40
   140002b78:	pop    rdi
   140002b79:	ret    
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	mov    QWORD PTR [rsp+0x18],r8
   140002b85:	mov    QWORD PTR [rsp+0x10],rdx
   140002b8a:	mov    QWORD PTR [rsp+0x8],rcx
   140002b8f:	push   rbx
   140002b90:	push   rsi
   140002b91:	push   rdi
   140002b92:	push   r14
   140002b94:	sub    rsp,0x38
   140002b98:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002ba1:	mov    rsi,r8
   140002ba4:	mov    rbx,rcx
   140002ba7:	mov    rdi,rdx
   140002baa:	or     rdi,0xf
   140002bae:	cmp    rdi,0xfffffffffffffffe
   140002bb2:	jbe    0x140002bb9
   140002bb4:	mov    rdi,rdx
   140002bb7:	jmp    0x140002bee
   140002bb9:	mov    r8,QWORD PTR [rcx+0x18]
   140002bbd:	mov    rcx,r8
   140002bc0:	shr    rcx,1
   140002bc3:	movabs rax,0xaaaaaaaaaaaaaaab
   140002bcd:	mul    rdi
   140002bd0:	shr    rdx,1
   140002bd3:	cmp    rcx,rdx
   140002bd6:	jbe    0x140002bee
   140002bd8:	mov    rdi,0xfffffffffffffffe
   140002bdf:	mov    rax,rdi
   140002be2:	sub    rax,rcx
   140002be5:	cmp    r8,rax
   140002be8:	ja     0x140002bee
   140002bea:	lea    rdi,[rcx+r8*1]
   140002bee:	lea    rcx,[rdi+0x1]
   140002bf2:	xor    r14d,r14d
   140002bf5:	test   rcx,rcx
   140002bf8:	je     0x140002c14
   140002bfa:	cmp    rcx,0xffffffffffffffff
   140002bfe:	ja     0x140002c0d
   140002c00:	call   0x140004c32
   140002c05:	mov    r14,rax
   140002c08:	test   rax,rax
   140002c0b:	jne    0x140002c14
   140002c0d:	call   QWORD PTR [rip+0x3445]        # 0x140006058
   140002c13:	nop
   140002c14:	jmp    0x140002c2a
   140002c16:	mov    rbx,QWORD PTR [rsp+0x60]
   140002c1b:	mov    rsi,QWORD PTR [rsp+0x70]
   140002c20:	mov    rdi,QWORD PTR [rsp+0x68]
   140002c25:	mov    r14,QWORD PTR [rsp+0x78]
   140002c2a:	test   rsi,rsi
   140002c2d:	je     0x140002c4e
   140002c2f:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c34:	jb     0x140002c3b
   140002c36:	mov    rdx,QWORD PTR [rbx]
   140002c39:	jmp    0x140002c3e
   140002c3b:	mov    rdx,rbx
   140002c3e:	test   rsi,rsi
   140002c41:	je     0x140002c4e
   140002c43:	mov    r8,rsi
   140002c46:	mov    rcx,r14
   140002c49:	call   0x140004d76
   140002c4e:	cmp    QWORD PTR [rbx+0x18],0x10
   140002c53:	jb     0x140002c5d
   140002c55:	mov    rcx,QWORD PTR [rbx]
   140002c58:	call   0x140004c38
   140002c5d:	mov    BYTE PTR [rbx],0x0
   140002c60:	mov    QWORD PTR [rbx],r14
   140002c63:	mov    QWORD PTR [rbx+0x18],rdi
   140002c67:	mov    QWORD PTR [rbx+0x10],rsi
   140002c6b:	cmp    rdi,0x10
   140002c6f:	jb     0x140002c74
   140002c71:	mov    rbx,r14
   140002c74:	mov    BYTE PTR [rbx+rsi*1],0x0
   140002c78:	add    rsp,0x38
   140002c7c:	pop    r14
   140002c7e:	pop    rdi
   140002c7f:	pop    rsi
   140002c80:	pop    rbx
   140002c81:	ret    
   140002c82:	int3   
   140002c83:	int3   
   140002c84:	int3   
   140002c85:	int3   
   140002c86:	int3   
   140002c87:	int3   
   140002c88:	int3   
   140002c89:	int3   
   140002c8a:	int3   
   140002c8b:	int3   
   140002c8c:	int3   
   140002c8d:	int3   
   140002c8e:	int3   
   140002c8f:	int3   
   140002c90:	ret    0x0
   140002c93:	int3   
   140002c94:	int3   
   140002c95:	int3   
   140002c96:	int3   
   140002c97:	int3   
   140002c98:	int3   
   140002c99:	int3   
   140002c9a:	int3   
   140002c9b:	int3   
   140002c9c:	int3   
   140002c9d:	int3   
   140002c9e:	int3   
   140002c9f:	int3   
   140002ca0:	rex push rbx
   140002ca2:	sub    rsp,0x20
   140002ca6:	mov    rbx,rdx
   140002ca9:	mov    rdx,QWORD PTR [rdx+0x8]
   140002cad:	mov    rax,QWORD PTR [rbx]
   140002cb0:	mov    QWORD PTR [rdx],rax
   140002cb3:	mov    rdx,QWORD PTR [rbx]
   140002cb6:	mov    rax,QWORD PTR [rbx+0x8]
   140002cba:	mov    QWORD PTR [rdx+0x8],rax
   140002cbe:	dec    QWORD PTR [rcx+0x8]
   140002cc2:	cmp    QWORD PTR [rbx+0x48],0x10
   140002cc7:	jb     0x140002cd2
   140002cc9:	mov    rcx,QWORD PTR [rbx+0x30]
   140002ccd:	call   0x140004c38
   140002cd2:	mov    QWORD PTR [rbx+0x48],0xf
   140002cda:	mov    QWORD PTR [rbx+0x40],0x0
   140002ce2:	mov    BYTE PTR [rbx+0x30],0x0
   140002ce6:	cmp    QWORD PTR [rbx+0x28],0x10
   140002ceb:	jb     0x140002cf6
   140002ced:	mov    rcx,QWORD PTR [rbx+0x10]
   140002cf1:	call   0x140004c38
   140002cf6:	mov    QWORD PTR [rbx+0x28],0xf
   140002cfe:	mov    QWORD PTR [rbx+0x20],0x0
   140002d06:	mov    rcx,rbx
   140002d09:	mov    BYTE PTR [rbx+0x10],0x0
   140002d0d:	call   0x140004c38
   140002d12:	add    rsp,0x20
   140002d16:	pop    rbx
   140002d17:	ret    
   140002d18:	int3   
   140002d19:	int3   
   140002d1a:	int3   
   140002d1b:	int3   
   140002d1c:	int3   
   140002d1d:	int3   
   140002d1e:	int3   
   140002d1f:	int3   
   140002d20:	mov    r9,QWORD PTR [rcx+0x10]
   140002d24:	mov    rax,QWORD PTR [rcx]
   140002d27:	add    r8,r8
   140002d2a:	cmp    QWORD PTR [r9+r8*8],rax
   140002d2e:	jne    0x140002d37
   140002d30:	mov    QWORD PTR [rdx],rax
   140002d33:	mov    rax,rdx
   140002d36:	ret    
   140002d37:	mov    rax,QWORD PTR [r9+r8*8+0x8]
   140002d3c:	mov    rcx,QWORD PTR [rax]
   140002d3f:	mov    rax,rdx
   140002d42:	mov    QWORD PTR [rdx],rcx
   140002d45:	ret    
   140002d46:	int3   
   140002d47:	int3   
   140002d48:	int3   
   140002d49:	int3   
   140002d4a:	int3   
   140002d4b:	int3   
   140002d4c:	int3   
   140002d4d:	int3   
   140002d4e:	int3   
   140002d4f:	int3   
   140002d50:	cmp    QWORD PTR [rcx+0x18],0x10
   140002d55:	mov    QWORD PTR [rcx+0x10],rdx
   140002d59:	jb     0x140002d63
   140002d5b:	mov    rax,QWORD PTR [rcx]
   140002d5e:	mov    BYTE PTR [rax+rdx*1],0x0
   140002d62:	ret    
   140002d63:	mov    BYTE PTR [rcx+rdx*1],0x0
   140002d67:	ret    
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	mov    rcx,rdx
   140002d73:	jmp    0x140004c38
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	rex push rbx
   140002d82:	sub    rsp,0x20
   140002d86:	cmp    QWORD PTR [rdx+0x48],0x10
   140002d8b:	mov    rbx,rdx
   140002d8e:	jb     0x140002d99
   140002d90:	mov    rcx,QWORD PTR [rdx+0x30]
   140002d94:	call   0x140004c38
   140002d99:	mov    QWORD PTR [rbx+0x48],0xf
   140002da1:	mov    QWORD PTR [rbx+0x40],0x0
   140002da9:	mov    BYTE PTR [rbx+0x30],0x0
   140002dad:	cmp    QWORD PTR [rbx+0x28],0x10
   140002db2:	jb     0x140002dbd
   140002db4:	mov    rcx,QWORD PTR [rbx+0x10]
   140002db8:	call   0x140004c38
   140002dbd:	mov    QWORD PTR [rbx+0x28],0xf
   140002dc5:	mov    QWORD PTR [rbx+0x20],0x0
   140002dcd:	mov    rcx,rbx
   140002dd0:	mov    BYTE PTR [rbx+0x10],0x0
   140002dd4:	add    rsp,0x20
   140002dd8:	pop    rbx
   140002dd9:	jmp    0x140004c38
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	mov    rax,rdx
   140002de3:	ret    
   140002de4:	int3   
   140002de5:	int3   
   140002de6:	int3   
   140002de7:	int3   
   140002de8:	int3   
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	mov    rax,rdx
   140002df3:	ret    
   140002df4:	int3   
   140002df5:	int3   
   140002df6:	int3   
   140002df7:	int3   
   140002df8:	int3   
   140002df9:	int3   
   140002dfa:	int3   
   140002dfb:	int3   
   140002dfc:	int3   
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	mov    rax,rdx
   140002e03:	ret    
   140002e04:	int3   
   140002e05:	int3   
   140002e06:	int3   
   140002e07:	int3   
   140002e08:	int3   
   140002e09:	int3   
   140002e0a:	int3   
   140002e0b:	int3   
   140002e0c:	int3   
   140002e0d:	int3   
   140002e0e:	int3   
   140002e0f:	int3   
   140002e10:	mov    rax,rdx
   140002e13:	ret    
   140002e14:	int3   
   140002e15:	int3   
   140002e16:	int3   
   140002e17:	int3   
   140002e18:	int3   
   140002e19:	int3   
   140002e1a:	int3   
   140002e1b:	int3   
   140002e1c:	int3   
   140002e1d:	int3   
   140002e1e:	int3   
   140002e1f:	int3   
   140002e20:	mov    rax,rdx
   140002e23:	ret    
   140002e24:	int3   
   140002e25:	int3   
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	mov    QWORD PTR [rsp+0x20],rbx
   140002e35:	push   rdi
   140002e36:	sub    rsp,0x20
   140002e3a:	mov    rdi,rdx
   140002e3d:	mov    rbx,rcx
   140002e40:	cmp    rdx,0xfffffffffffffffe
   140002e44:	jbe    0x140002e54
   140002e46:	lea    rcx,[rip+0x38db]        # 0x140006728
   140002e4d:	call   QWORD PTR [rip+0x31fd]        # 0x140006050
   140002e53:	int3   
   140002e54:	mov    rax,QWORD PTR [rcx+0x18]
   140002e58:	mov    QWORD PTR [rsp+0x30],rbp
   140002e5d:	xor    ebp,ebp
   140002e5f:	cmp    rax,rdx
   140002e62:	jae    0x140002e6f
   140002e64:	mov    r8,QWORD PTR [rcx+0x10]
   140002e68:	call   0x140002b80
   140002e6d:	jmp    0x140002ee1
   140002e6f:	test   r8b,r8b
   140002e72:	je     0x140002ecc
   140002e74:	cmp    rdx,0x10
   140002e78:	jae    0x140002ecc
   140002e7a:	mov    QWORD PTR [rsp+0x38],rsi
   140002e7f:	mov    rsi,QWORD PTR [rcx+0x10]
   140002e83:	cmp    rdx,rsi
   140002e86:	cmovb  rsi,rdx
   140002e8a:	cmp    rax,0x10
   140002e8e:	jb     0x140002eb5
   140002e90:	mov    QWORD PTR [rsp+0x40],r14
   140002e95:	mov    r14,QWORD PTR [rcx]
   140002e98:	test   rsi,rsi
   140002e9b:	je     0x140002ea8
   140002e9d:	mov    r8,rsi
   140002ea0:	mov    rdx,r14
   140002ea3:	call   0x140004d76
   140002ea8:	mov    rcx,r14
   140002eab:	call   0x140004c38
   140002eb0:	mov    r14,QWORD PTR [rsp+0x40]
   140002eb5:	mov    QWORD PTR [rbx+0x10],rsi
   140002eb9:	mov    QWORD PTR [rbx+0x18],0xf
   140002ec1:	mov    BYTE PTR [rsi+rbx*1],bpl
   140002ec5:	mov    rsi,QWORD PTR [rsp+0x38]
   140002eca:	jmp    0x140002ee1
   140002ecc:	test   rdx,rdx
   140002ecf:	jne    0x140002ee1
   140002ed1:	mov    QWORD PTR [rcx+0x10],rbp
   140002ed5:	cmp    rax,0x10
   140002ed9:	jb     0x140002ede
   140002edb:	mov    rbx,QWORD PTR [rcx]
   140002ede:	mov    BYTE PTR [rbx],bpl
   140002ee1:	mov    rbp,QWORD PTR [rsp+0x30]
   140002ee6:	mov    rbx,QWORD PTR [rsp+0x48]
   140002eeb:	test   rdi,rdi
   140002eee:	setne  al
   140002ef1:	add    rsp,0x20
   140002ef5:	pop    rdi
   140002ef6:	ret    
   140002ef7:	int3   
   140002ef8:	int3   
   140002ef9:	int3   
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	mov    r8,QWORD PTR [rcx+0x10]
   140002f04:	movabs rax,0x1fffffffffffffff
   140002f0e:	sub    r8,QWORD PTR [rcx]
   140002f11:	sar    r8,0x3
   140002f15:	mov    rcx,r8
   140002f18:	shr    rcx,1
   140002f1b:	sub    rax,rcx
   140002f1e:	cmp    rax,r8
   140002f21:	jae    0x140002f31
   140002f23:	xor    r8d,r8d
   140002f26:	cmp    r8,rdx
   140002f29:	cmovb  r8,rdx
   140002f2d:	mov    rax,r8
   140002f30:	ret    
   140002f31:	add    r8,rcx
   140002f34:	cmp    r8,rdx
   140002f37:	cmovb  r8,rdx
   140002f3b:	mov    rax,r8
   140002f3e:	ret    
   140002f3f:	int3   
   140002f40:	xor    r9d,r9d
   140002f43:	movabs rax,0xcbf29ce484222325
   140002f4d:	test   rdx,rdx
   140002f50:	je     0x140002f74
   140002f52:	movabs r10,0x100000001b3
   140002f5c:	nop    DWORD PTR [rax+0x0]
   140002f60:	movzx  r8d,BYTE PTR [r9+rcx*1]
   140002f65:	inc    r9
   140002f68:	xor    rax,r8
   140002f6b:	imul   rax,r10
   140002f6f:	cmp    r9,rdx
   140002f72:	jb     0x140002f60
   140002f74:	mov    rcx,rax
   140002f77:	shr    rcx,0x20
   140002f7b:	xor    rax,rcx
   140002f7e:	ret    
   140002f7f:	int3   
   140002f80:	cmp    QWORD PTR [rdx+0x18],0x10
   140002f85:	mov    r9,QWORD PTR [rdx+0x10]
   140002f89:	mov    r8,rdx
   140002f8c:	mov    r10,rcx
   140002f8f:	jb     0x140002f94
   140002f91:	mov    r8,QWORD PTR [rdx]
   140002f94:	xor    edx,edx
   140002f96:	movabs rcx,0xcbf29ce484222325
   140002fa0:	test   r9,r9
   140002fa3:	je     0x140002fc4
   140002fa5:	movabs r11,0x100000001b3
   140002faf:	nop
   140002fb0:	movzx  eax,BYTE PTR [r8+rdx*1]
   140002fb5:	inc    rdx
   140002fb8:	xor    rcx,rax
   140002fbb:	imul   rcx,r11
   140002fbf:	cmp    rdx,r9
   140002fc2:	jb     0x140002fb0
   140002fc4:	mov    rdx,QWORD PTR [r10+0x28]
   140002fc8:	mov    rax,rcx
   140002fcb:	shr    rax,0x20
   140002fcf:	xor    rax,rcx
   140002fd2:	and    rax,rdx
   140002fd5:	cmp    QWORD PTR [r10+0x30],rax
   140002fd9:	ja     0x140002fe8
   140002fdb:	shr    rdx,1
   140002fde:	or     rcx,0xffffffffffffffff
   140002fe2:	sub    rcx,rdx
   140002fe5:	add    rax,rcx
   140002fe8:	ret    
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	int3   
   140002fed:	int3   
   140002fee:	int3   
   140002fef:	int3   
   140002ff0:	sub    rsp,0x28
   140002ff4:	mov    r8,QWORD PTR [rcx+0x8]
   140002ff8:	movabs rax,0x333333333333332
   140003002:	sub    rax,r8
   140003005:	cmp    rax,rdx
   140003008:	jae    0x140003018
   14000300a:	lea    rcx,[rip+0x3757]        # 0x140006768
   140003011:	call   QWORD PTR [rip+0x3039]        # 0x140006050
   140003017:	int3   
   140003018:	lea    rax,[r8+rdx*1]
   14000301c:	mov    QWORD PTR [rcx+0x8],rax
   140003020:	add    rsp,0x28
   140003024:	ret    
   140003025:	int3   
   140003026:	int3   
   140003027:	int3   
   140003028:	int3   
   140003029:	int3   
   14000302a:	int3   
   14000302b:	int3   
   14000302c:	int3   
   14000302d:	int3   
   14000302e:	int3   
   14000302f:	int3   
   140003030:	mov    QWORD PTR [rsp+0x18],rbx
   140003035:	push   rdi
   140003036:	sub    rsp,0x30
   14000303a:	mov    rax,QWORD PTR [rcx]
   14000303d:	mov    r8,QWORD PTR [rcx+0x10]
   140003041:	mov    rbx,rcx
   140003044:	add    rcx,0x10
   140003048:	mov    QWORD PTR [rsp+0x40],rax
   14000304d:	mov    rdi,rdx
   140003050:	lea    rax,[rsp+0x40]
   140003055:	lea    r9,[rdx+rdx*1]
   140003059:	lea    rdx,[rsp+0x48]
   14000305e:	mov    QWORD PTR [rsp+0x20],rax
   140003063:	mov    QWORD PTR [rcx+0x8],r8
   140003067:	call   0x1400030f0
   14000306c:	lea    rax,[rdi-0x1]
   140003070:	mov    QWORD PTR [rbx+0x30],rdi
   140003074:	mov    QWORD PTR [rbx+0x28],rax
   140003078:	mov    rbx,QWORD PTR [rsp+0x50]
   14000307d:	add    rsp,0x30
   140003081:	pop    rdi
   140003082:	ret    
   140003083:	int3   
   140003084:	int3   
   140003085:	int3   
   140003086:	int3   
   140003087:	int3   
   140003088:	int3   
   140003089:	int3   
   14000308a:	int3   
   14000308b:	int3   
   14000308c:	int3   
   14000308d:	int3   
   14000308e:	int3   
   14000308f:	int3   
   140003090:	mov    r10,QWORD PTR [rcx+0x10]
   140003094:	shl    r9,0x4
   140003098:	mov    QWORD PTR [rsp+0x10],rdx
   14000309d:	add    r10,r9
   1400030a0:	mov    r11,rcx
   1400030a3:	mov    rax,QWORD PTR [r10]
   1400030a6:	cmp    rax,QWORD PTR [rcx]
   1400030a9:	jne    0x1400030bd
   1400030ab:	mov    QWORD PTR [r10],rdx
   1400030ae:	mov    rcx,QWORD PTR [rcx+0x10]
   1400030b2:	mov    rax,QWORD PTR [rsp+0x10]
   1400030b7:	mov    QWORD PTR [r9+rcx*1+0x8],rax
   1400030bc:	ret    
   1400030bd:	cmp    rax,r8
   1400030c0:	jne    0x1400030c6
   1400030c2:	mov    QWORD PTR [r10],rdx
   1400030c5:	ret    
   1400030c6:	mov    rax,QWORD PTR [r10+0x8]
   1400030ca:	mov    rcx,QWORD PTR [rax]
   1400030cd:	mov    QWORD PTR [r10+0x8],rcx
   1400030d1:	cmp    rcx,QWORD PTR [rsp+0x10]
   1400030d6:	je     0x1400030ea
   1400030d8:	mov    rdx,QWORD PTR [r11+0x10]
   1400030dc:	mov    rax,QWORD PTR [rdx+r9*1+0x8]
   1400030e1:	mov    rcx,QWORD PTR [rax+0x8]
   1400030e5:	mov    QWORD PTR [rdx+r9*1+0x8],rcx
   1400030ea:	ret    
   1400030eb:	int3   
   1400030ec:	int3   
   1400030ed:	int3   
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	mov    QWORD PTR [rsp+0x18],r8
   1400030f5:	mov    QWORD PTR [rsp+0x10],rdx
   1400030fa:	push   rbx
   1400030fb:	push   rsi
   1400030fc:	push   rdi
   1400030fd:	push   r12
   1400030ff:	push   r13
   140003101:	push   r14
   140003103:	push   r15
   140003105:	sub    rsp,0x40
   140003109:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140003112:	mov    rdi,r9
   140003115:	mov    r12,r8
   140003118:	mov    r15,rcx
   14000311b:	mov    rcx,QWORD PTR [rcx]
   14000311e:	mov    r13,r8
   140003121:	sub    r13,rcx
   140003124:	sar    r13,0x3
   140003128:	test   r9,r9
   14000312b:	je     0x140003418
   140003131:	mov    rbx,QWORD PTR [r15+0x10]
   140003135:	mov    r14,QWORD PTR [r15+0x8]
   140003139:	mov    rax,rbx
   14000313c:	sub    rax,r14
   14000313f:	sar    rax,0x3
   140003143:	cmp    rax,r9
   140003146:	jae    0x1400032ad
   14000314c:	sub    r14,rcx
   14000314f:	sar    r14,0x3
   140003153:	movabs r8,0x1fffffffffffffff
   14000315d:	mov    rax,r8
   140003160:	sub    rax,r14
   140003163:	cmp    rax,r9
   140003166:	jae    0x140003176
   140003168:	lea    rcx,[rip+0x35e1]        # 0x140006750
   14000316f:	call   QWORD PTR [rip+0x2edb]        # 0x140006050
   140003175:	int3   
   140003176:	lea    rdx,[r14+r9*1]
   14000317a:	sub    rbx,rcx
   14000317d:	sar    rbx,0x3
   140003181:	mov    rcx,rbx
   140003184:	shr    rcx,1
   140003187:	mov    rax,r8
   14000318a:	sub    rax,rcx
   14000318d:	cmp    rax,rbx
   140003190:	jae    0x140003198
   140003192:	xor    esi,esi
   140003194:	mov    ebx,esi
   140003196:	jmp    0x14000319d
   140003198:	add    rbx,rcx
   14000319b:	xor    esi,esi
   14000319d:	cmp    rbx,rdx
   1400031a0:	cmovb  rbx,rdx
   1400031a4:	mov    r14,rsi
   1400031a7:	mov    QWORD PTR [rsp+0x98],rsi
   1400031af:	test   rbx,rbx
   1400031b2:	je     0x1400031e7
   1400031b4:	cmp    rbx,r8
   1400031b7:	ja     0x1400031e0
   1400031b9:	lea    rcx,[rbx*8+0x0]
   1400031c1:	call   0x140004c32
   1400031c6:	mov    r14,rax
   1400031c9:	mov    QWORD PTR [rsp+0x98],rax
   1400031d1:	test   rax,rax
   1400031d4:	je     0x1400031e0
   1400031d6:	mov    r12,QWORD PTR [rsp+0x90]
   1400031de:	jmp    0x1400031e7
   1400031e0:	call   QWORD PTR [rip+0x2e72]        # 0x140006058
   1400031e6:	int3   
   1400031e7:	sub    r12,QWORD PTR [r15]
   1400031ea:	sar    r12,0x3
   1400031ee:	lea    rcx,[r14+r12*8]
   1400031f2:	movzx  eax,BYTE PTR [rsp+0x90]
   1400031fa:	mov    BYTE PTR [rsp+0x28],al
   1400031fe:	mov    QWORD PTR [rsp+0x20],rsi
   140003203:	lea    r9,[rsp+0x80]
   14000320b:	mov    r8,QWORD PTR [rsp+0xa0]
   140003213:	mov    rdx,rdi
   140003216:	call   0x1400015e0
   14000321b:	movzx  eax,BYTE PTR [rsp+0x90]
   140003223:	mov    BYTE PTR [rsp+0x28],al
   140003227:	mov    QWORD PTR [rsp+0x20],rsi
   14000322c:	lea    r9,[rsp+0x80]
   140003234:	mov    r8,r14
   140003237:	mov    rdx,QWORD PTR [rsp+0x90]
   14000323f:	mov    rcx,QWORD PTR [r15]
   140003242:	call   0x140001630
   140003247:	lea    rax,[r12+rdi*1]
   14000324b:	lea    r8,[r14+rax*8]
   14000324f:	movzx  eax,BYTE PTR [rsp+0x90]
   140003257:	mov    BYTE PTR [rsp+0x28],al
   14000325b:	mov    QWORD PTR [rsp+0x20],rsi
   140003260:	lea    r9,[rsp+0x80]
   140003268:	mov    rdx,QWORD PTR [r15+0x8]
   14000326c:	mov    rcx,QWORD PTR [rsp+0x90]
   140003274:	call   0x140001630
   140003279:	nop
   14000327a:	mov    rcx,QWORD PTR [r15]
   14000327d:	mov    rax,QWORD PTR [r15+0x8]
   140003281:	sub    rax,rcx
   140003284:	sar    rax,0x3
   140003288:	add    rdi,rax
   14000328b:	test   rcx,rcx
   14000328e:	je     0x140003295
   140003290:	call   0x140004c38
   140003295:	lea    rax,[r14+rbx*8]
   140003299:	mov    QWORD PTR [r15+0x10],rax
   14000329d:	lea    rax,[r14+rdi*8]
   1400032a1:	mov    QWORD PTR [r15+0x8],rax
   1400032a5:	mov    QWORD PTR [r15],r14
   1400032a8:	jmp    0x140003418
   1400032ad:	mov    rax,r14
   1400032b0:	sub    rax,r8
   1400032b3:	sar    rax,0x3
   1400032b7:	mov    rbx,QWORD PTR [rsp+0xa0]
   1400032bf:	xor    esi,esi
   1400032c1:	mov    rdx,r14
   1400032c4:	mov    rbx,QWORD PTR [rbx]
   1400032c7:	cmp    rax,r9
   1400032ca:	jae    0x140003394
   1400032d0:	mov    QWORD PTR [rsp+0x98],rbx
   1400032d8:	lea    rax,[r9*8+0x0]
   1400032e0:	mov    QWORD PTR [rsp+0x30],rax
   1400032e5:	add    r8,rax
   1400032e8:	movzx  eax,BYTE PTR [rsp+0x90]
   1400032f0:	mov    BYTE PTR [rsp+0x28],al
   1400032f4:	mov    QWORD PTR [rsp+0x20],rsi
   1400032f9:	lea    r9,[rsp+0x80]
   140003301:	mov    rcx,r12
   140003304:	call   0x140001630
   140003309:	nop
   14000330a:	mov    rcx,QWORD PTR [r15+0x8]
   14000330e:	mov    rax,rcx
   140003311:	sub    rax,QWORD PTR [rsp+0x90]
   140003319:	sar    rax,0x3
   14000331d:	sub    rdi,rax
   140003320:	movzx  eax,BYTE PTR [rsp+0x90]
   140003328:	mov    BYTE PTR [rsp+0x28],al
   14000332c:	mov    QWORD PTR [rsp+0x20],rsi
   140003331:	lea    r9,[rsp+0x80]
   140003339:	lea    r8,[rsp+0x98]
   140003341:	mov    rdx,rdi
   140003344:	call   0x1400015e0
   140003349:	nop
   14000334a:	mov    rcx,QWORD PTR [rsp+0x30]
   14000334f:	add    QWORD PTR [r15+0x8],rcx
   140003353:	mov    rax,QWORD PTR [r15+0x8]
   140003357:	sub    rax,rcx
   14000335a:	mov    rcx,QWORD PTR [rsp+0x90]
   140003362:	mov    rdx,rax
   140003365:	sub    rdx,rcx
   140003368:	add    rdx,0x7
   14000336c:	shr    rdx,0x3
   140003370:	cmp    rcx,rax
   140003373:	cmova  rdx,rsi
   140003377:	test   rdx,rdx
   14000337a:	je     0x140003418
   140003380:	mov    QWORD PTR [rcx],rbx
   140003383:	lea    rcx,[rcx+0x8]
   140003387:	inc    rsi
   14000338a:	cmp    rsi,rdx
   14000338d:	jne    0x140003380
   14000338f:	jmp    0x140003418
   140003394:	lea    r12,[r9*8+0x0]
   14000339c:	mov    rdi,r14
   14000339f:	sub    rdi,r12
   1400033a2:	movzx  eax,BYTE PTR [rsp+0x90]
   1400033aa:	mov    BYTE PTR [rsp+0x28],al
   1400033ae:	mov    QWORD PTR [rsp+0x20],rsi
   1400033b3:	lea    r9,[rsp+0x80]
   1400033bb:	mov    r8,r14
   1400033be:	mov    rcx,rdi
   1400033c1:	call   0x140001630
   1400033c6:	mov    QWORD PTR [r15+0x8],rax
   1400033ca:	mov    rdx,QWORD PTR [rsp+0x90]
   1400033d2:	cmp    rdx,rdi
   1400033d5:	je     0x1400033f8
   1400033d7:	sub    r14,rdi
   1400033da:	nop    WORD PTR [rax+rax*1+0x0]
   1400033e0:	sub    rdi,0x8
   1400033e4:	mov    rax,QWORD PTR [rdi]
   1400033e7:	mov    QWORD PTR [rdi+r14*1],rax
   1400033eb:	mov    rdx,QWORD PTR [rsp+0x90]
   1400033f3:	cmp    rdx,rdi
   1400033f6:	jne    0x1400033e0
   1400033f8:	lea    rax,[r12+rdx*1]
   1400033fc:	cmp    rdx,rax
   1400033ff:	je     0x140003418
   140003401:	mov    QWORD PTR [rdx],rbx
   140003404:	add    rdx,0x8
   140003408:	mov    rcx,QWORD PTR [rsp+0x90]
   140003410:	add    rcx,r12
   140003413:	cmp    rdx,rcx
   140003416:	jne    0x140003401
   140003418:	mov    rax,QWORD PTR [r15]
   14000341b:	lea    rcx,[rax+r13*8]
   14000341f:	mov    rax,QWORD PTR [rsp+0x88]
   140003427:	mov    QWORD PTR [rax],rcx
   14000342a:	add    rsp,0x40
   14000342e:	pop    r15
   140003430:	pop    r14
   140003432:	pop    r13
   140003434:	pop    r12
   140003436:	pop    rdi
   140003437:	pop    rsi
   140003438:	pop    rbx
   140003439:	ret    
   14000343a:	int3   
   14000343b:	int3   
   14000343c:	int3   
   14000343d:	int3   
   14000343e:	int3   
   14000343f:	int3   
   140003440:	test   rdx,rdx
   140003443:	je     0x14000347a
   140003445:	mov    rax,QWORD PTR [rcx+0x18]
   140003449:	cmp    rax,0x10
   14000344d:	jb     0x140003454
   14000344f:	mov    r8,QWORD PTR [rcx]
   140003452:	jmp    0x140003457
   140003454:	mov    r8,rcx
   140003457:	cmp    rdx,r8
   14000345a:	jb     0x14000347a
   14000345c:	cmp    rax,0x10
   140003460:	jb     0x140003467
   140003462:	mov    r8,QWORD PTR [rcx]
   140003465:	jmp    0x14000346a
   140003467:	mov    r8,rcx
   14000346a:	mov    rax,QWORD PTR [rcx+0x10]
   14000346e:	lea    rcx,[r8+rax*1]
   140003472:	cmp    rcx,rdx
   140003475:	jbe    0x14000347a
   140003477:	mov    al,0x1
   140003479:	ret    
   14000347a:	xor    al,al
   14000347c:	ret    
   14000347d:	int3   
   14000347e:	int3   
   14000347f:	int3   
   140003480:	mov    QWORD PTR [rdx],r8
   140003483:	mov    rax,rdx
   140003486:	ret    
   140003487:	int3   
   140003488:	int3   
   140003489:	int3   
   14000348a:	int3   
   14000348b:	int3   
   14000348c:	int3   
   14000348d:	int3   
   14000348e:	int3   
   14000348f:	int3   
   140003490:	mov    QWORD PTR [rdx],r8
   140003493:	mov    rax,rdx
   140003496:	ret    
   140003497:	int3   
   140003498:	int3   
   140003499:	int3   
   14000349a:	int3   
   14000349b:	int3   
   14000349c:	int3   
   14000349d:	int3   
   14000349e:	int3   
   14000349f:	int3   
   1400034a0:	mov    QWORD PTR [rdx],r8
   1400034a3:	mov    rax,rdx
   1400034a6:	ret    
   1400034a7:	int3   
   1400034a8:	int3   
   1400034a9:	int3   
   1400034aa:	int3   
   1400034ab:	int3   
   1400034ac:	int3   
   1400034ad:	int3   
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	mov    rax,QWORD PTR [rcx]
   1400034b3:	ret    
   1400034b4:	int3   
   1400034b5:	int3   
   1400034b6:	int3   
   1400034b7:	int3   
   1400034b8:	int3   
   1400034b9:	int3   
   1400034ba:	int3   
   1400034bb:	int3   
   1400034bc:	int3   
   1400034bd:	int3   
   1400034be:	int3   
   1400034bf:	int3   
   1400034c0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400034c5:	jb     0x1400034cb
   1400034c7:	mov    rax,QWORD PTR [rcx]
   1400034ca:	ret    
   1400034cb:	mov    rax,rcx
   1400034ce:	ret    
   1400034cf:	int3   
   1400034d0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400034d5:	jb     0x1400034db
   1400034d7:	mov    rax,QWORD PTR [rcx]
   1400034da:	ret    
   1400034db:	mov    rax,rcx
   1400034de:	ret    
   1400034df:	int3   
   1400034e0:	lea    rax,[rcx+0x10]
   1400034e4:	ret    
   1400034e5:	int3   
   1400034e6:	int3   
   1400034e7:	int3   
   1400034e8:	int3   
   1400034e9:	int3   
   1400034ea:	int3   
   1400034eb:	int3   
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	mov    rax,rcx
   1400034f3:	ret    
   1400034f4:	int3   
   1400034f5:	int3   
   1400034f6:	int3   
   1400034f7:	int3   
   1400034f8:	int3   
   1400034f9:	int3   
   1400034fa:	int3   
   1400034fb:	int3   
   1400034fc:	int3   
   1400034fd:	int3   
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	ret    0x0
   140003503:	int3   
   140003504:	int3   
   140003505:	int3   
   140003506:	int3   
   140003507:	int3   
   140003508:	int3   
   140003509:	int3   
   14000350a:	int3   
   14000350b:	int3   
   14000350c:	int3   
   14000350d:	int3   
   14000350e:	int3   
   14000350f:	int3   
   140003510:	lea    rax,[rcx+0x8]
   140003514:	ret    
   140003515:	int3   
   140003516:	int3   
   140003517:	int3   
   140003518:	int3   
   140003519:	int3   
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	rex push rsi
   140003522:	sub    rsp,0x30
   140003526:	mov    rax,QWORD PTR [rcx]
   140003529:	mov    rsi,rcx
   14000352c:	cmp    QWORD PTR [rax],rax
   14000352f:	je     0x140003569
   140003531:	mov    QWORD PTR [rsp+0x40],rbx
   140003536:	mov    QWORD PTR [rsp+0x48],rdi
   14000353b:	mov    rdi,QWORD PTR [rax+0x8]
   14000353f:	nop
   140003540:	mov    rbx,QWORD PTR [rsi]
   140003543:	lea    rdx,[rsp+0x20]
   140003548:	mov    rcx,rsi
   14000354b:	mov    rbx,QWORD PTR [rbx]
   14000354e:	mov    r9,rbx
   140003551:	lea    r8,[rbx+0x10]
   140003555:	call   0x1400012b0
   14000355a:	cmp    rbx,rdi
   14000355d:	jne    0x140003540
   14000355f:	mov    rdi,QWORD PTR [rsp+0x48]
   140003564:	mov    rbx,QWORD PTR [rsp+0x40]
   140003569:	add    rsp,0x30
   14000356d:	pop    rsi
   14000356e:	ret    
   14000356f:	int3   
   140003570:	mov    QWORD PTR [rsp+0x10],rbx
   140003575:	push   rdi
   140003576:	sub    rsp,0x20
   14000357a:	mov    rdi,r8
   14000357d:	mov    rbx,rcx
   140003580:	test   dl,dl
   140003582:	je     0x1400035ad
   140003584:	cmp    QWORD PTR [rcx+0x18],0x10
   140003589:	jb     0x1400035ad
   14000358b:	mov    QWORD PTR [rsp+0x30],rsi
   140003590:	mov    rsi,QWORD PTR [rcx]
   140003593:	test   r8,r8
   140003596:	je     0x1400035a0
   140003598:	mov    rdx,rsi
   14000359b:	call   0x140004d76
   1400035a0:	mov    rcx,rsi
   1400035a3:	call   0x140004c38
   1400035a8:	mov    rsi,QWORD PTR [rsp+0x30]
   1400035ad:	mov    QWORD PTR [rbx+0x18],0xf
   1400035b5:	mov    QWORD PTR [rbx+0x10],rdi
   1400035b9:	mov    BYTE PTR [rdi+rbx*1],0x0
   1400035bd:	mov    rbx,QWORD PTR [rsp+0x38]
   1400035c2:	add    rsp,0x20
   1400035c6:	pop    rdi
   1400035c7:	ret    
   1400035c8:	int3   
   1400035c9:	int3   
   1400035ca:	int3   
   1400035cb:	int3   
   1400035cc:	int3   
   1400035cd:	int3   
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	jmp    0x140003d10
   1400035d5:	int3   
   1400035d6:	int3   
   1400035d7:	int3   
   1400035d8:	int3   
   1400035d9:	int3   
   1400035da:	int3   
   1400035db:	int3   
   1400035dc:	int3   
   1400035dd:	int3   
   1400035de:	int3   
   1400035df:	int3   
   1400035e0:	rex push rbx
   1400035e2:	sub    rsp,0x20
   1400035e6:	mov    rbx,rcx
   1400035e9:	mov    rcx,QWORD PTR [rcx]
   1400035ec:	test   rcx,rcx
   1400035ef:	je     0x140003603
   1400035f1:	call   0x140004c38
   1400035f6:	xor    eax,eax
   1400035f8:	mov    QWORD PTR [rbx],rax
   1400035fb:	mov    QWORD PTR [rbx+0x8],rax
   1400035ff:	mov    QWORD PTR [rbx+0x10],rax
   140003603:	add    rsp,0x20
   140003607:	pop    rbx
   140003608:	ret    
   140003609:	int3   
   14000360a:	int3   
   14000360b:	int3   
   14000360c:	int3   
   14000360d:	int3   
   14000360e:	int3   
   14000360f:	int3   
   140003610:	mov    QWORD PTR [rsp+0x8],rbx
   140003615:	push   rdi
   140003616:	sub    rsp,0x30
   14000361a:	movzx  eax,BYTE PTR [rsp+0x48]
   14000361f:	mov    r10,r9
   140003622:	mov    rdi,r8
   140003625:	mov    rbx,rdx
   140003628:	mov    BYTE PTR [rsp+0x28],al
   14000362c:	lea    r9,[rsp+0x48]
   140003631:	mov    r8,r10
   140003634:	mov    rdx,rdi
   140003637:	mov    rcx,rbx
   14000363a:	mov    QWORD PTR [rsp+0x20],0x0
   140003643:	call   0x1400015e0
   140003648:	lea    rax,[rbx+rdi*8]
   14000364c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003651:	add    rsp,0x30
   140003655:	pop    rdi
   140003656:	ret    
   140003657:	int3   
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    rax,QWORD PTR [rcx]
   140003663:	mov    rcx,QWORD PTR [rax]
   140003666:	mov    rax,rdx
   140003669:	mov    QWORD PTR [rdx],rcx
   14000366c:	ret    
   14000366d:	int3   
   14000366e:	int3   
   14000366f:	int3   
   140003670:	mov    rax,QWORD PTR [rcx]
   140003673:	mov    rcx,QWORD PTR [rax]
   140003676:	mov    rax,rdx
   140003679:	mov    QWORD PTR [rdx],rcx
   14000367c:	ret    
   14000367d:	int3   
   14000367e:	int3   
   14000367f:	int3   
   140003680:	mov    rax,QWORD PTR [rcx]
   140003683:	mov    QWORD PTR [rdx],rax
   140003686:	mov    rax,rdx
   140003689:	ret    
   14000368a:	int3   
   14000368b:	int3   
   14000368c:	int3   
   14000368d:	int3   
   14000368e:	int3   
   14000368f:	int3   
   140003690:	mov    rax,QWORD PTR [rcx]
   140003693:	mov    QWORD PTR [rdx],rax
   140003696:	mov    rax,rdx
   140003699:	ret    
   14000369a:	int3   
   14000369b:	int3   
   14000369c:	int3   
   14000369d:	int3   
   14000369e:	int3   
   14000369f:	int3   
   1400036a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400036a5:	mov    r11,rsp
   1400036a8:	mov    QWORD PTR [r11+0x20],r9
   1400036ac:	mov    QWORD PTR [r11+0x18],r8
   1400036b0:	mov    rax,QWORD PTR [r8+0x8]
   1400036b4:	mov    QWORD PTR [rax],r9
   1400036b7:	mov    rax,QWORD PTR [r11+0x20]
   1400036bb:	mov    rcx,QWORD PTR [rax+0x8]
   1400036bf:	mov    rax,QWORD PTR [r11+0x10]
   1400036c3:	mov    QWORD PTR [rcx],rax
   1400036c6:	mov    rax,QWORD PTR [r11+0x10]
   1400036ca:	mov    rcx,QWORD PTR [rax+0x8]
   1400036ce:	mov    rax,QWORD PTR [r11+0x18]
   1400036d2:	mov    QWORD PTR [rcx],rax
   1400036d5:	mov    rax,QWORD PTR [r11+0x20]
   1400036d9:	mov    rdx,QWORD PTR [r11+0x10]
   1400036dd:	mov    rcx,QWORD PTR [rax+0x8]
   1400036e1:	mov    r8,QWORD PTR [rdx+0x8]
   1400036e5:	mov    QWORD PTR [rdx+0x8],rcx
   1400036e9:	mov    rax,QWORD PTR [r11+0x18]
   1400036ed:	mov    rcx,QWORD PTR [rax+0x8]
   1400036f1:	mov    rax,QWORD PTR [r11+0x20]
   1400036f5:	mov    QWORD PTR [rax+0x8],rcx
   1400036f9:	mov    rax,QWORD PTR [r11+0x18]
   1400036fd:	mov    QWORD PTR [rax+0x8],r8
   140003701:	ret    
   140003702:	int3   
   140003703:	int3   
   140003704:	int3   
   140003705:	int3   
   140003706:	int3   
   140003707:	int3   
   140003708:	int3   
   140003709:	int3   
   14000370a:	int3   
   14000370b:	int3   
   14000370c:	int3   
   14000370d:	int3   
   14000370e:	int3   
   14000370f:	int3   
   140003710:	mov    r8,QWORD PTR [rdx+0x8]
   140003714:	mov    rax,rdx
   140003717:	mov    rdx,QWORD PTR [rdx]
   14000371a:	mov    QWORD PTR [r8],rdx
   14000371d:	mov    r8,QWORD PTR [rax]
   140003720:	mov    rdx,QWORD PTR [rax+0x8]
   140003724:	mov    QWORD PTR [r8+0x8],rdx
   140003728:	dec    QWORD PTR [rcx+0x8]
   14000372c:	ret    
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	mov    rax,QWORD PTR [rcx+0x10]
   140003734:	sub    rax,QWORD PTR [rcx+0x8]
   140003738:	sar    rax,0x3
   14000373c:	ret    
   14000373d:	int3   
   14000373e:	int3   
   14000373f:	int3   
   140003740:	mov    rax,QWORD PTR [rcx+0x10]
   140003744:	shl    rdx,0x4
   140003748:	add    rax,0x8
   14000374c:	add    rax,rdx
   14000374f:	ret    
   140003750:	shl    rdx,0x4
   140003754:	add    rdx,QWORD PTR [rcx+0x10]
   140003758:	mov    rax,rdx
   14000375b:	ret    
   14000375c:	int3   
   14000375d:	int3   
   14000375e:	int3   
   14000375f:	int3   
   140003760:	sub    rsp,0x28
   140003764:	lea    rcx,[rip+0x2fbd]        # 0x140006728
   14000376b:	call   QWORD PTR [rip+0x28df]        # 0x140006050
   140003771:	int3   
   140003772:	int3   
   140003773:	int3   
   140003774:	int3   
   140003775:	int3   
   140003776:	int3   
   140003777:	int3   
   140003778:	int3   
   140003779:	int3   
   14000377a:	int3   
   14000377b:	int3   
   14000377c:	int3   
   14000377d:	int3   
   14000377e:	int3   
   14000377f:	int3   
   140003780:	sub    rsp,0x28
   140003784:	lea    rcx,[rip+0x2fc5]        # 0x140006750
   14000378b:	call   QWORD PTR [rip+0x28bf]        # 0x140006050
   140003791:	int3   
   140003792:	int3   
   140003793:	int3   
   140003794:	int3   
   140003795:	int3   
   140003796:	int3   
   140003797:	int3   
   140003798:	int3   
   140003799:	int3   
   14000379a:	int3   
   14000379b:	int3   
   14000379c:	int3   
   14000379d:	int3   
   14000379e:	int3   
   14000379f:	int3   
   1400037a0:	sub    rsp,0x28
   1400037a4:	lea    rcx,[rip+0x2f8d]        # 0x140006738
   1400037ab:	call   QWORD PTR [rip+0x2897]        # 0x140006048
   1400037b1:	int3   
   1400037b2:	int3   
   1400037b3:	int3   
   1400037b4:	int3   
   1400037b5:	int3   
   1400037b6:	int3   
   1400037b7:	int3   
   1400037b8:	int3   
   1400037b9:	int3   
   1400037ba:	int3   
   1400037bb:	int3   
   1400037bc:	int3   
   1400037bd:	int3   
   1400037be:	int3   
   1400037bf:	int3   
   1400037c0:	sub    rsp,0x28
   1400037c4:	xor    eax,eax
   1400037c6:	test   rdx,rdx
   1400037c9:	je     0x1400037f3
   1400037cb:	movabs rax,0x1fffffffffffffff
   1400037d5:	cmp    rdx,rax
   1400037d8:	ja     0x1400037ec
   1400037da:	lea    rcx,[rdx*8+0x0]
   1400037e2:	call   0x140004c32
   1400037e7:	test   rax,rax
   1400037ea:	jne    0x1400037f3
   1400037ec:	call   QWORD PTR [rip+0x2866]        # 0x140006058
   1400037f2:	int3   
   1400037f3:	add    rsp,0x28
   1400037f7:	ret    
   1400037f8:	int3   
   1400037f9:	int3   
   1400037fa:	int3   
   1400037fb:	int3   
   1400037fc:	int3   
   1400037fd:	int3   
   1400037fe:	int3   
   1400037ff:	int3   
   140003800:	sub    rsp,0x28
   140003804:	xor    eax,eax
   140003806:	test   rdx,rdx
   140003809:	je     0x140003825
   14000380b:	cmp    rdx,0xffffffffffffffff
   14000380f:	ja     0x14000381e
   140003811:	mov    rcx,rdx
   140003814:	call   0x140004c32
   140003819:	test   rax,rax
   14000381c:	jne    0x140003825
   14000381e:	call   QWORD PTR [rip+0x2834]        # 0x140006058
   140003824:	int3   
   140003825:	add    rsp,0x28
   140003829:	ret    
   14000382a:	int3   
   14000382b:	int3   
   14000382c:	int3   
   14000382d:	int3   
   14000382e:	int3   
   14000382f:	int3   
   140003830:	sub    rsp,0x28
   140003834:	xor    eax,eax
   140003836:	test   rdx,rdx
   140003839:	je     0x140003863
   14000383b:	movabs rax,0x333333333333333
   140003845:	cmp    rdx,rax
   140003848:	ja     0x14000385c
   14000384a:	lea    rcx,[rdx+rdx*4]
   14000384e:	shl    rcx,0x4
   140003852:	call   0x140004c32
   140003857:	test   rax,rax
   14000385a:	jne    0x140003863
   14000385c:	call   QWORD PTR [rip+0x27f6]        # 0x140006058
   140003862:	int3   
   140003863:	add    rsp,0x28
   140003867:	ret    
   140003868:	int3   
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	sub    rsp,0x28
   140003874:	xor    eax,eax
   140003876:	test   rdx,rdx
   140003879:	je     0x1400038a3
   14000387b:	movabs rax,0x1fffffffffffffff
   140003885:	cmp    rdx,rax
   140003888:	ja     0x14000389c
   14000388a:	lea    rcx,[rdx*8+0x0]
   140003892:	call   0x140004c32
   140003897:	test   rax,rax
   14000389a:	jne    0x1400038a3
   14000389c:	call   QWORD PTR [rip+0x27b6]        # 0x140006058
   1400038a2:	int3   
   1400038a3:	add    rsp,0x28
   1400038a7:	ret    
   1400038a8:	int3   
   1400038a9:	int3   
   1400038aa:	int3   
   1400038ab:	int3   
   1400038ac:	int3   
   1400038ad:	int3   
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	sub    rsp,0x28
   1400038b4:	xor    eax,eax
   1400038b6:	test   rdx,rdx
   1400038b9:	je     0x1400038d5
   1400038bb:	cmp    rdx,0xffffffffffffffff
   1400038bf:	ja     0x1400038ce
   1400038c1:	mov    rcx,rdx
   1400038c4:	call   0x140004c32
   1400038c9:	test   rax,rax
   1400038cc:	jne    0x1400038d5
   1400038ce:	call   QWORD PTR [rip+0x2784]        # 0x140006058
   1400038d4:	int3   
   1400038d5:	add    rsp,0x28
   1400038d9:	ret    
   1400038da:	int3   
   1400038db:	int3   
   1400038dc:	int3   
   1400038dd:	int3   
   1400038de:	int3   
   1400038df:	int3   
   1400038e0:	sub    rsp,0x28
   1400038e4:	xor    eax,eax
   1400038e6:	test   rdx,rdx
   1400038e9:	je     0x140003913
   1400038eb:	movabs rax,0x333333333333333
   1400038f5:	cmp    rdx,rax
   1400038f8:	ja     0x14000390c
   1400038fa:	lea    rcx,[rdx+rdx*4]
   1400038fe:	shl    rcx,0x4
   140003902:	call   0x140004c32
   140003907:	test   rax,rax
   14000390a:	jne    0x140003913
   14000390c:	call   QWORD PTR [rip+0x2746]        # 0x140006058
   140003912:	int3   
   140003913:	add    rsp,0x28
   140003917:	ret    
   140003918:	int3   
   140003919:	int3   
   14000391a:	int3   
   14000391b:	int3   
   14000391c:	int3   
   14000391d:	int3   
   14000391e:	int3   
   14000391f:	int3   
   140003920:	sub    rsp,0x28
   140003924:	xor    eax,eax
   140003926:	test   rdx,rdx
   140003929:	je     0x140003953
   14000392b:	movabs rax,0x1fffffffffffffff
   140003935:	cmp    rdx,rax
   140003938:	ja     0x14000394c
   14000393a:	lea    rcx,[rdx*8+0x0]
   140003942:	call   0x140004c32
   140003947:	test   rax,rax
   14000394a:	jne    0x140003953
   14000394c:	call   QWORD PTR [rip+0x2706]        # 0x140006058
   140003952:	int3   
   140003953:	add    rsp,0x28
   140003957:	ret    
   140003958:	int3   
   140003959:	int3   
   14000395a:	int3   
   14000395b:	int3   
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	mov    QWORD PTR [rsp+0x8],rbx
   140003965:	mov    QWORD PTR [rsp+0x10],rbp
   14000396a:	mov    QWORD PTR [rsp+0x18],rsi
   14000396f:	push   rdi
   140003970:	sub    rsp,0x20
   140003974:	mov    rdi,QWORD PTR [rdx+0x10]
   140003978:	mov    rbp,r8
   14000397b:	mov    rsi,rdx
   14000397e:	mov    rbx,rcx
   140003981:	cmp    rdi,r8
   140003984:	jae    0x140003994
   140003986:	lea    rcx,[rip+0x2dab]        # 0x140006738
   14000398d:	call   QWORD PTR [rip+0x26b5]        # 0x140006048
   140003993:	int3   
   140003994:	sub    rdi,r8
   140003997:	cmp    r9,rdi
   14000399a:	cmovb  rdi,r9
   14000399e:	cmp    rcx,rdx
   1400039a1:	jne    0x1400039dc
   1400039a3:	lea    rax,[rdi+r8*1]
   1400039a7:	cmp    QWORD PTR [rcx+0x10],rax
   1400039ab:	jae    0x1400039bb
   1400039ad:	lea    rcx,[rip+0x2d84]        # 0x140006738
   1400039b4:	call   QWORD PTR [rip+0x268e]        # 0x140006048
   1400039ba:	int3   
   1400039bb:	cmp    QWORD PTR [rcx+0x18],0x10
   1400039c0:	mov    QWORD PTR [rcx+0x10],rax
   1400039c4:	jb     0x1400039c9
   1400039c6:	mov    rcx,QWORD PTR [rcx]
   1400039c9:	mov    BYTE PTR [rcx+rax*1],0x0
   1400039cd:	xor    edx,edx
   1400039cf:	mov    rcx,rbx
   1400039d2:	call   0x140004060
   1400039d7:	jmp    0x140003a6a
   1400039dc:	cmp    rdi,0xfffffffffffffffe
   1400039e0:	jbe    0x1400039f0
   1400039e2:	lea    rcx,[rip+0x2d3f]        # 0x140006728
   1400039e9:	call   QWORD PTR [rip+0x2661]        # 0x140006050
   1400039ef:	int3   
   1400039f0:	mov    rax,QWORD PTR [rcx+0x18]
   1400039f4:	cmp    rax,rdi
   1400039f7:	jae    0x140003a20
   1400039f9:	mov    r8,QWORD PTR [rcx+0x10]
   1400039fd:	mov    rdx,rdi
   140003a00:	call   0x140002b80
   140003a05:	test   rdi,rdi
   140003a08:	je     0x140003a6a
   140003a0a:	cmp    QWORD PTR [rsi+0x18],0x10
   140003a0f:	jb     0x140003a14
   140003a11:	mov    rsi,QWORD PTR [rsi]
   140003a14:	cmp    QWORD PTR [rbx+0x18],0x10
   140003a19:	jb     0x140003a3f
   140003a1b:	mov    rcx,QWORD PTR [rbx]
   140003a1e:	jmp    0x140003a42
   140003a20:	test   rdi,rdi
   140003a23:	jne    0x140003a0a
   140003a25:	mov    QWORD PTR [rcx+0x10],rdi
   140003a29:	cmp    rax,0x10
   140003a2d:	jb     0x140003a37
   140003a2f:	mov    rax,QWORD PTR [rcx]
   140003a32:	mov    BYTE PTR [rax],dil
   140003a35:	jmp    0x140003a6a
   140003a37:	mov    rax,rcx
   140003a3a:	mov    BYTE PTR [rcx],0x0
   140003a3d:	jmp    0x140003a6a
   140003a3f:	mov    rcx,rbx
   140003a42:	test   rdi,rdi
   140003a45:	je     0x140003a53
   140003a47:	lea    rdx,[rsi+rbp*1]
   140003a4b:	mov    r8,rdi
   140003a4e:	call   0x140004d76
   140003a53:	cmp    QWORD PTR [rbx+0x18],0x10
   140003a58:	mov    QWORD PTR [rbx+0x10],rdi
   140003a5c:	jb     0x140003a63
   140003a5e:	mov    rax,QWORD PTR [rbx]
   140003a61:	jmp    0x140003a66
   140003a63:	mov    rax,rbx
   140003a66:	mov    BYTE PTR [rax+rdi*1],0x0
   140003a6a:	mov    rbp,QWORD PTR [rsp+0x38]
   140003a6f:	mov    rsi,QWORD PTR [rsp+0x40]
   140003a74:	mov    rax,rbx
   140003a77:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a7c:	add    rsp,0x20
   140003a80:	pop    rdi
   140003a81:	ret    
   140003a82:	int3   
   140003a83:	int3   
   140003a84:	int3   
   140003a85:	int3   
   140003a86:	int3   
   140003a87:	int3   
   140003a88:	int3   
   140003a89:	int3   
   140003a8a:	int3   
   140003a8b:	int3   
   140003a8c:	int3   
   140003a8d:	int3   
   140003a8e:	int3   
   140003a8f:	int3   
   140003a90:	cmp    BYTE PTR [rdx],0x0
   140003a93:	jne    0x140003a9d
   140003a95:	xor    r8d,r8d
   140003a98:	jmp    0x140003ab0
   140003a9d:	or     r8,0xffffffffffffffff
   140003aa1:	inc    r8
   140003aa4:	cmp    BYTE PTR [rdx+r8*1],0x0
   140003aa9:	jne    0x140003aa1
   140003aab:	jmp    0x140003ab0
   140003ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ab5:	mov    QWORD PTR [rsp+0x10],rsi
   140003aba:	push   rdi
   140003abb:	sub    rsp,0x20
   140003abf:	mov    rdi,r8
   140003ac2:	mov    rsi,rdx
   140003ac5:	mov    rbx,rcx
   140003ac8:	test   rdx,rdx
   140003acb:	je     0x140003b27
   140003acd:	mov    rdx,QWORD PTR [rcx+0x18]
   140003ad1:	cmp    rdx,0x10
   140003ad5:	jb     0x140003adc
   140003ad7:	mov    rax,QWORD PTR [rcx]
   140003ada:	jmp    0x140003adf
   140003adc:	mov    rax,rcx
   140003adf:	cmp    rsi,rax
   140003ae2:	jb     0x140003b27
   140003ae4:	cmp    rdx,0x10
   140003ae8:	jb     0x140003aed
   140003aea:	mov    rcx,QWORD PTR [rcx]
   140003aed:	add    rcx,QWORD PTR [rbx+0x10]
   140003af1:	cmp    rcx,rsi
   140003af4:	jbe    0x140003b27
   140003af6:	cmp    rdx,0x10
   140003afa:	jb     0x140003b01
   140003afc:	mov    rax,QWORD PTR [rbx]
   140003aff:	jmp    0x140003b04
   140003b01:	mov    rax,rbx
   140003b04:	sub    rsi,rax
   140003b07:	mov    r9,r8
   140003b0a:	mov    rdx,rbx
   140003b0d:	mov    r8,rsi
   140003b10:	mov    rcx,rbx
   140003b13:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b18:	mov    rsi,QWORD PTR [rsp+0x38]
   140003b1d:	add    rsp,0x20
   140003b21:	pop    rdi
   140003b22:	jmp    0x140003960
   140003b27:	cmp    r8,0xfffffffffffffffe
   140003b2b:	jbe    0x140003b3b
   140003b2d:	lea    rcx,[rip+0x2bf4]        # 0x140006728
   140003b34:	call   QWORD PTR [rip+0x2516]        # 0x140006050
   140003b3a:	int3   
   140003b3b:	mov    rax,QWORD PTR [rbx+0x18]
   140003b3f:	cmp    rax,r8
   140003b42:	jae    0x140003b64
   140003b44:	mov    r8,QWORD PTR [rbx+0x10]
   140003b48:	mov    rdx,rdi
   140003b4b:	mov    rcx,rbx
   140003b4e:	call   0x140002b80
   140003b53:	test   rdi,rdi
   140003b56:	je     0x140003bcc
   140003b58:	cmp    QWORD PTR [rbx+0x18],0x10
   140003b5d:	jb     0x140003ba2
   140003b5f:	mov    rcx,QWORD PTR [rbx]
   140003b62:	jmp    0x140003ba5
   140003b64:	test   r8,r8
   140003b67:	jne    0x140003b53
   140003b69:	mov    QWORD PTR [rbx+0x10],r8
   140003b6d:	cmp    rax,0x10
   140003b71:	jb     0x140003b8c
   140003b73:	mov    rax,QWORD PTR [rbx]
   140003b76:	mov    BYTE PTR [rax],r8b
   140003b79:	mov    rax,rbx
   140003b7c:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b81:	mov    rsi,QWORD PTR [rsp+0x38]
   140003b86:	add    rsp,0x20
   140003b8a:	pop    rdi
   140003b8b:	ret    
   140003b8c:	mov    rax,rbx
   140003b8f:	mov    BYTE PTR [rbx],0x0
   140003b92:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b97:	mov    rsi,QWORD PTR [rsp+0x38]
   140003b9c:	add    rsp,0x20
   140003ba0:	pop    rdi
   140003ba1:	ret    
   140003ba2:	mov    rcx,rbx
   140003ba5:	test   rdi,rdi
   140003ba8:	je     0x140003bb5
   140003baa:	mov    r8,rdi
   140003bad:	mov    rdx,rsi
   140003bb0:	call   0x140004d76
   140003bb5:	cmp    QWORD PTR [rbx+0x18],0x10
   140003bba:	mov    QWORD PTR [rbx+0x10],rdi
   140003bbe:	jb     0x140003bc5
   140003bc0:	mov    rax,QWORD PTR [rbx]
   140003bc3:	jmp    0x140003bc8
   140003bc5:	mov    rax,rbx
   140003bc8:	mov    BYTE PTR [rax+rdi*1],0x0
   140003bcc:	mov    rsi,QWORD PTR [rsp+0x38]
   140003bd1:	mov    rax,rbx
   140003bd4:	mov    rbx,QWORD PTR [rsp+0x30]
   140003bd9:	add    rsp,0x20
   140003bdd:	pop    rdi
   140003bde:	ret    
   140003bdf:	int3   
   140003be0:	movzx  eax,BYTE PTR [rdx]
   140003be3:	mov    BYTE PTR [rcx],al
   140003be5:	ret    
   140003be6:	int3   
   140003be7:	int3   
   140003be8:	int3   
   140003be9:	int3   
   140003bea:	int3   
   140003beb:	int3   
   140003bec:	int3   
   140003bed:	int3   
   140003bee:	int3   
   140003bef:	int3   
   140003bf0:	sub    rsp,0x38
   140003bf4:	mov    rax,r8
   140003bf7:	mov    r8,QWORD PTR [rcx]
   140003bfa:	mov    r9,rdx
   140003bfd:	lea    rdx,[rsp+0x40]
   140003c02:	mov    QWORD PTR [rcx+0x8],r8
   140003c06:	mov    QWORD PTR [rsp+0x20],rax
   140003c0b:	call   0x1400030f0
   140003c10:	add    rsp,0x38
   140003c14:	ret    
   140003c15:	int3   
   140003c16:	int3   
   140003c17:	int3   
   140003c18:	int3   
   140003c19:	int3   
   140003c1a:	int3   
   140003c1b:	int3   
   140003c1c:	int3   
   140003c1d:	int3   
   140003c1e:	int3   
   140003c1f:	int3   
   140003c20:	mov    rax,QWORD PTR [rcx]
   140003c23:	mov    rcx,QWORD PTR [rax]
   140003c26:	mov    rax,rdx
   140003c29:	mov    QWORD PTR [rdx],rcx
   140003c2c:	ret    
   140003c2d:	int3   
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	mov    rax,QWORD PTR [rcx]
   140003c33:	mov    rcx,QWORD PTR [rax]
   140003c36:	mov    rax,rdx
   140003c39:	mov    QWORD PTR [rdx],rcx
   140003c3c:	ret    
   140003c3d:	int3   
   140003c3e:	int3   
   140003c3f:	int3   
   140003c40:	mov    rax,QWORD PTR [rcx]
   140003c43:	mov    rcx,QWORD PTR [rax]
   140003c46:	mov    rax,rdx
   140003c49:	mov    QWORD PTR [rdx],rcx
   140003c4c:	ret    
   140003c4d:	int3   
   140003c4e:	int3   
   140003c4f:	int3   
   140003c50:	mov    rax,QWORD PTR [rcx]
   140003c53:	mov    QWORD PTR [rdx],rax
   140003c56:	mov    rax,rdx
   140003c59:	ret    
   140003c5a:	int3   
   140003c5b:	int3   
   140003c5c:	int3   
   140003c5d:	int3   
   140003c5e:	int3   
   140003c5f:	int3   
   140003c60:	mov    rax,QWORD PTR [rcx+0x30]
   140003c64:	ret    
   140003c65:	int3   
   140003c66:	int3   
   140003c67:	int3   
   140003c68:	int3   
   140003c69:	int3   
   140003c6a:	int3   
   140003c6b:	int3   
   140003c6c:	int3   
   140003c6d:	int3   
   140003c6e:	int3   
   140003c6f:	int3   
   140003c70:	cmp    QWORD PTR [rcx+0x18],0x10
   140003c75:	jb     0x140003c7b
   140003c77:	mov    rax,QWORD PTR [rcx]
   140003c7a:	ret    
   140003c7b:	mov    rax,rcx
   140003c7e:	ret    
   140003c7f:	int3   
   140003c80:	mov    rax,QWORD PTR [rcx+0x10]
   140003c84:	sub    rax,QWORD PTR [rcx]
   140003c87:	sar    rax,0x3
   140003c8b:	ret    
   140003c8c:	int3   
   140003c8d:	int3   
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	mov    rax,QWORD PTR [rcx+0x8]
   140003c94:	ret    
   140003c95:	int3   
   140003c96:	int3   
   140003c97:	int3   
   140003c98:	int3   
   140003c99:	int3   
   140003c9a:	int3   
   140003c9b:	int3   
   140003c9c:	int3   
   140003c9d:	int3   
   140003c9e:	int3   
   140003c9f:	int3   
   140003ca0:	mov    rax,QWORD PTR [rcx+0x8]
   140003ca4:	ret    
   140003ca5:	int3   
   140003ca6:	int3   
   140003ca7:	int3   
   140003ca8:	int3   
   140003ca9:	int3   
   140003caa:	int3   
   140003cab:	int3   
   140003cac:	int3   
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	rex push rbx
   140003cb2:	sub    rsp,0x30
   140003cb6:	mov    rbx,rcx
   140003cb9:	call   0x140003d10
   140003cbe:	mov    rax,QWORD PTR [rbx]
   140003cc1:	mov    r8,QWORD PTR [rbx+0x10]
   140003cc5:	lea    rcx,[rbx+0x10]
   140003cc9:	mov    QWORD PTR [rsp+0x40],rax
   140003cce:	lea    rax,[rsp+0x40]
   140003cd3:	lea    rdx,[rsp+0x48]
   140003cd8:	mov    r9d,0x10
   140003cde:	mov    QWORD PTR [rcx+0x8],r8
   140003ce2:	mov    QWORD PTR [rsp+0x20],rax
   140003ce7:	call   0x1400030f0
   140003cec:	mov    QWORD PTR [rbx+0x28],0x7
   140003cf4:	mov    QWORD PTR [rbx+0x30],0x8
   140003cfc:	add    rsp,0x30
   140003d00:	pop    rbx
   140003d01:	ret    
   140003d02:	int3   
   140003d03:	int3   
   140003d04:	int3   
   140003d05:	int3   
   140003d06:	int3   
   140003d07:	int3   
   140003d08:	int3   
   140003d09:	int3   
   140003d0a:	int3   
   140003d0b:	int3   
   140003d0c:	int3   
   140003d0d:	int3   
   140003d0e:	int3   
   140003d0f:	int3   
   140003d10:	mov    QWORD PTR [rsp+0x10],rbx
   140003d15:	mov    QWORD PTR [rsp+0x18],rbp
   140003d1a:	push   rsi
   140003d1b:	sub    rsp,0x20
   140003d1f:	mov    rax,QWORD PTR [rcx]
   140003d22:	xor    ebp,ebp
   140003d24:	mov    rsi,rcx
   140003d27:	mov    rbx,QWORD PTR [rax]
   140003d2a:	mov    QWORD PTR [rax],rax
   140003d2d:	mov    rax,QWORD PTR [rcx]
   140003d30:	mov    QWORD PTR [rax+0x8],rax
   140003d34:	mov    QWORD PTR [rcx+0x8],rbp
   140003d38:	cmp    rbx,QWORD PTR [rcx]
   140003d3b:	je     0x140003d9a
   140003d3d:	mov    QWORD PTR [rsp+0x30],rdi
   140003d42:	cmp    QWORD PTR [rbx+0x48],0x10
   140003d47:	mov    rdi,QWORD PTR [rbx]
   140003d4a:	jb     0x140003d55
   140003d4c:	mov    rcx,QWORD PTR [rbx+0x30]
   140003d50:	call   0x140004c38
   140003d55:	mov    QWORD PTR [rbx+0x48],0xf
   140003d5d:	mov    QWORD PTR [rbx+0x40],rbp
   140003d61:	mov    BYTE PTR [rbx+0x30],bpl
   140003d65:	cmp    QWORD PTR [rbx+0x28],0x10
   140003d6a:	jb     0x140003d75
   140003d6c:	mov    rcx,QWORD PTR [rbx+0x10]
   140003d70:	call   0x140004c38
   140003d75:	mov    QWORD PTR [rbx+0x28],0xf
   140003d7d:	mov    QWORD PTR [rbx+0x20],rbp
   140003d81:	mov    rcx,rbx
   140003d84:	mov    BYTE PTR [rbx+0x10],bpl
   140003d88:	call   0x140004c38
   140003d8d:	mov    rbx,rdi
   140003d90:	cmp    rdi,QWORD PTR [rsi]
   140003d93:	jne    0x140003d42
   140003d95:	mov    rdi,QWORD PTR [rsp+0x30]
   140003d9a:	mov    rbx,QWORD PTR [rsp+0x38]
   140003d9f:	mov    rbp,QWORD PTR [rsp+0x40]
   140003da4:	add    rsp,0x20
   140003da8:	pop    rsi
   140003da9:	ret    
   140003daa:	int3   
   140003dab:	int3   
   140003dac:	int3   
   140003dad:	int3   
   140003dae:	int3   
   140003daf:	int3   
   140003db0:	mov    rax,QWORD PTR [rcx]
   140003db3:	mov    QWORD PTR [rcx+0x8],rax
   140003db7:	ret    
   140003db8:	int3   
   140003db9:	int3   
   140003dba:	int3   
   140003dbb:	int3   
   140003dbc:	int3   
   140003dbd:	int3   
   140003dbe:	int3   
   140003dbf:	int3   
   140003dc0:	mov    QWORD PTR [rsp+0x8],rbx
   140003dc5:	mov    QWORD PTR [rsp+0x10],rsi
   140003dca:	push   rdi
   140003dcb:	sub    rsp,0x20
   140003dcf:	cmp    QWORD PTR [rdx+0x18],0x10
   140003dd4:	mov    rdi,QWORD PTR [rdx+0x10]
   140003dd8:	jb     0x140003ddd
   140003dda:	mov    rdx,QWORD PTR [rdx]
   140003ddd:	cmp    QWORD PTR [rcx+0x18],0x10
   140003de2:	mov    rbx,QWORD PTR [rcx+0x10]
   140003de6:	jb     0x140003deb
   140003de8:	mov    rcx,QWORD PTR [rcx]
   140003deb:	cmp    rbx,rdi
   140003dee:	mov    r8,rdi
   140003df1:	cmovb  r8,rbx
   140003df5:	xor    esi,esi
   140003df7:	test   r8,r8
   140003dfa:	jne    0x140003e00
   140003dfc:	mov    eax,esi
   140003dfe:	jmp    0x140003e05
   140003e00:	call   0x140004d70
   140003e05:	cdqe   
   140003e07:	test   rax,rax
   140003e0a:	jne    0x140003e2a
   140003e0c:	cmp    rbx,rdi
   140003e0f:	jae    0x140003e24
   140003e11:	or     eax,0xffffffff
   140003e14:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e19:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e1e:	add    rsp,0x20
   140003e22:	pop    rdi
   140003e23:	ret    
   140003e24:	setne  sil
   140003e28:	mov    eax,esi
   140003e2a:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e2f:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e34:	add    rsp,0x20
   140003e38:	pop    rdi
   140003e39:	ret    
   140003e3a:	int3   
   140003e3b:	int3   
   140003e3c:	int3   
   140003e3d:	int3   
   140003e3e:	int3   
   140003e3f:	int3   
   140003e40:	rex push rbx
   140003e42:	sub    rsp,0x20
   140003e46:	mov    rax,QWORD PTR [rcx+0x10]
   140003e4a:	mov    rbx,r8
   140003e4d:	cmp    rax,rdx
   140003e50:	jae    0x140003e60
   140003e52:	lea    rcx,[rip+0x28df]        # 0x140006738
   140003e59:	call   QWORD PTR [rip+0x21e9]        # 0x140006048
   140003e5f:	int3   
   140003e60:	sub    rax,rdx
   140003e63:	mov    QWORD PTR [rsp+0x30],rsi
   140003e68:	mov    QWORD PTR [rsp+0x38],rdi
   140003e6d:	cmp    rax,rbx
   140003e70:	cmovb  rbx,rax
   140003e74:	cmp    QWORD PTR [rcx+0x18],0x10
   140003e79:	jb     0x140003e7e
   140003e7b:	mov    rcx,QWORD PTR [rcx]
   140003e7e:	mov    rdi,QWORD PTR [rsp+0x50]
   140003e83:	cmp    rbx,rdi
   140003e86:	mov    r8,rdi
   140003e89:	cmovb  r8,rbx
   140003e8d:	xor    esi,esi
   140003e8f:	test   r8,r8
   140003e92:	jne    0x140003e98
   140003e94:	mov    eax,esi
   140003e96:	jmp    0x140003ea3
   140003e98:	add    rcx,rdx
   140003e9b:	mov    rdx,r9
   140003e9e:	call   0x140004d70
   140003ea3:	cdqe   
   140003ea5:	test   rax,rax
   140003ea8:	jne    0x140003ec8
   140003eaa:	cmp    rbx,rdi
   140003ead:	jae    0x140003ec2
   140003eaf:	mov    rdi,QWORD PTR [rsp+0x38]
   140003eb4:	mov    rsi,QWORD PTR [rsp+0x30]
   140003eb9:	or     eax,0xffffffff
   140003ebc:	add    rsp,0x20
   140003ec0:	pop    rbx
   140003ec1:	ret    
   140003ec2:	setne  sil
   140003ec6:	mov    eax,esi
   140003ec8:	mov    rdi,QWORD PTR [rsp+0x38]
   140003ecd:	mov    rsi,QWORD PTR [rsp+0x30]
   140003ed2:	add    rsp,0x20
   140003ed6:	pop    rbx
   140003ed7:	ret    
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	test   r8,r8
   140003ee3:	jne    0x140003ee8
   140003ee5:	xor    eax,eax
   140003ee7:	ret    
   140003ee8:	jmp    0x140004d70
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	test   rdx,rdx
   140003ef3:	je     0x140003efb
   140003ef5:	mov    rax,QWORD PTR [r8]
   140003ef8:	mov    QWORD PTR [rdx],rax
   140003efb:	ret    
   140003efc:	int3   
   140003efd:	int3   
   140003efe:	int3   
   140003eff:	int3   
   140003f00:	rex push rbx
   140003f02:	sub    rsp,0x20
   140003f06:	mov    rbx,rcx
   140003f09:	test   r8,r8
   140003f0c:	je     0x140003f13
   140003f0e:	call   0x140004d76
   140003f13:	mov    rax,rbx
   140003f16:	add    rsp,0x20
   140003f1a:	pop    rbx
   140003f1b:	ret    
   140003f1c:	int3   
   140003f1d:	int3   
   140003f1e:	int3   
   140003f1f:	int3   
   140003f20:	mov    rcx,rdx
   140003f23:	jmp    0x140004c38
   140003f28:	int3   
   140003f29:	int3   
   140003f2a:	int3   
   140003f2b:	int3   
   140003f2c:	int3   
   140003f2d:	int3   
   140003f2e:	int3   
   140003f2f:	int3   
   140003f30:	mov    rcx,rdx
   140003f33:	jmp    0x140004c38
   140003f38:	int3   
   140003f39:	int3   
   140003f3a:	int3   
   140003f3b:	int3   
   140003f3c:	int3   
   140003f3d:	int3   
   140003f3e:	int3   
   140003f3f:	int3   
   140003f40:	mov    rcx,rdx
   140003f43:	jmp    0x140004c38
   140003f48:	int3   
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	mov    rcx,rdx
   140003f53:	jmp    0x140004c38
   140003f58:	int3   
   140003f59:	int3   
   140003f5a:	int3   
   140003f5b:	int3   
   140003f5c:	int3   
   140003f5d:	int3   
   140003f5e:	int3   
   140003f5f:	int3   
   140003f60:	mov    rcx,rdx
   140003f63:	jmp    0x140004c38
   140003f68:	int3   
   140003f69:	int3   
   140003f6a:	int3   
   140003f6b:	int3   
   140003f6c:	int3   
   140003f6d:	int3   
   140003f6e:	int3   
   140003f6f:	int3   
   140003f70:	mov    rcx,rdx
   140003f73:	jmp    0x140004c38
   140003f78:	int3   
   140003f79:	int3   
   140003f7a:	int3   
   140003f7b:	int3   
   140003f7c:	int3   
   140003f7d:	int3   
   140003f7e:	int3   
   140003f7f:	int3   
   140003f80:	mov    rcx,rdx
   140003f83:	jmp    0x140004c38
   140003f88:	int3   
   140003f89:	int3   
   140003f8a:	int3   
   140003f8b:	int3   
   140003f8c:	int3   
   140003f8d:	int3   
   140003f8e:	int3   
   140003f8f:	int3   
   140003f90:	mov    QWORD PTR [rsp+0x8],rbx
   140003f95:	push   rdi
   140003f96:	sub    rsp,0x20
   140003f9a:	mov    ecx,r8d
   140003f9d:	mov    edi,r8d
   140003fa0:	mov    rbx,rdx
   140003fa3:	call   QWORD PTR [rip+0x2097]        # 0x140006040
   140003fa9:	mov    DWORD PTR [rbx],edi
   140003fab:	test   rax,rax
   140003fae:	lea    rax,[rip+0x504b]        # 0x140009000
   140003fb5:	jne    0x140003fbe
   140003fb7:	lea    rax,[rip+0x5052]        # 0x140009010
   140003fbe:	mov    QWORD PTR [rbx+0x8],rax
   140003fc2:	mov    rax,rbx
   140003fc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140003fca:	add    rsp,0x20
   140003fce:	pop    rdi
   140003fcf:	ret    
   140003fd0:	mov    DWORD PTR [rdx],r8d
   140003fd3:	mov    QWORD PTR [rdx+0x8],rcx
   140003fd7:	mov    rax,rdx
   140003fda:	ret    
   140003fdb:	int3   
   140003fdc:	int3   
   140003fdd:	int3   
   140003fde:	int3   
   140003fdf:	int3   
   140003fe0:	mov    rax,QWORD PTR [rcx]
   140003fe3:	mov    QWORD PTR [rdx],rax
   140003fe6:	mov    rax,rdx
   140003fe9:	ret    
   140003fea:	int3   
   140003feb:	int3   
   140003fec:	int3   
   140003fed:	int3   
   140003fee:	int3   
   140003fef:	int3   
   140003ff0:	mov    rax,QWORD PTR [rcx]
   140003ff3:	mov    QWORD PTR [rdx],rax
   140003ff6:	mov    rax,rdx
   140003ff9:	ret    
   140003ffa:	int3   
   140003ffb:	int3   
   140003ffc:	int3   
   140003ffd:	int3   
   140003ffe:	int3   
   140003fff:	int3   
   140004000:	cmp    rcx,QWORD PTR [rdx+0x8]
   140004004:	jne    0x14000400e
   140004006:	cmp    DWORD PTR [rdx],r8d
   140004009:	jne    0x14000400e
   14000400b:	mov    al,0x1
   14000400d:	ret    
   14000400e:	xor    al,al
   140004010:	ret    
   140004011:	int3   
   140004012:	int3   
   140004013:	int3   
   140004014:	int3   
   140004015:	int3   
   140004016:	int3   
   140004017:	int3   
   140004018:	int3   
   140004019:	int3   
   14000401a:	int3   
   14000401b:	int3   
   14000401c:	int3   
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	rex push rbx
   140004022:	sub    rsp,0x30
   140004026:	mov    rax,QWORD PTR [rcx]
   140004029:	mov    rbx,r8
   14000402c:	mov    r8d,edx
   14000402f:	lea    rdx,[rsp+0x20]
   140004034:	call   QWORD PTR [rax+0x18]
   140004037:	mov    rcx,QWORD PTR [rbx+0x8]
   14000403b:	cmp    QWORD PTR [rax+0x8],rcx
   14000403f:	jne    0x14000404f
   140004041:	mov    ecx,DWORD PTR [rbx]
   140004043:	cmp    DWORD PTR [rax],ecx
   140004045:	jne    0x14000404f
   140004047:	mov    al,0x1
   140004049:	add    rsp,0x30
   14000404d:	pop    rbx
   14000404e:	ret    
   14000404f:	xor    al,al
   140004051:	add    rsp,0x30
   140004055:	pop    rbx
   140004056:	ret    
   140004057:	int3   
   140004058:	int3   
   140004059:	int3   
   14000405a:	int3   
   14000405b:	int3   
   14000405c:	int3   
   14000405d:	int3   
   14000405e:	int3   
   14000405f:	int3   
   140004060:	mov    QWORD PTR [rsp+0x8],rbx
   140004065:	push   rdi
   140004066:	sub    rsp,0x20
   14000406a:	mov    rdi,QWORD PTR [rcx+0x10]
   14000406e:	mov    rbx,rcx
   140004071:	cmp    rdi,rdx
   140004074:	jae    0x140004084
   140004076:	lea    rcx,[rip+0x26bb]        # 0x140006738
   14000407d:	call   QWORD PTR [rip+0x1fc5]        # 0x140006048
   140004083:	int3   
   140004084:	mov    rax,rdi
   140004087:	sub    rax,rdx
   14000408a:	cmp    rax,r8
   14000408d:	ja     0x1400040c4
   14000408f:	cmp    QWORD PTR [rcx+0x18],0x10
   140004094:	mov    QWORD PTR [rcx+0x10],rdx
   140004098:	jb     0x1400040af
   14000409a:	mov    rax,QWORD PTR [rcx]
   14000409d:	mov    BYTE PTR [rax+rdx*1],0x0
   1400040a1:	mov    rax,rbx
   1400040a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040a9:	add    rsp,0x20
   1400040ad:	pop    rdi
   1400040ae:	ret    
   1400040af:	mov    rax,rcx
   1400040b2:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400040b6:	mov    rax,rbx
   1400040b9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400040be:	add    rsp,0x20
   1400040c2:	pop    rdi
   1400040c3:	ret    
   1400040c4:	test   r8,r8
   1400040c7:	je     0x14000411b
   1400040c9:	cmp    QWORD PTR [rcx+0x18],0x10
   1400040ce:	jb     0x1400040d5
   1400040d0:	mov    rax,QWORD PTR [rcx]
   1400040d3:	jmp    0x1400040d8
   1400040d5:	mov    rax,rcx
   1400040d8:	sub    rdi,r8
   1400040db:	lea    rcx,[rax+rdx*1]
   1400040df:	mov    rax,rdi
   1400040e2:	sub    rax,rdx
   1400040e5:	je     0x1400040f4
   1400040e7:	lea    rdx,[rcx+r8*1]
   1400040eb:	mov    r8,rax
   1400040ee:	call   QWORD PTR [rip+0x1fec]        # 0x1400060e0
   1400040f4:	cmp    QWORD PTR [rbx+0x18],0x10
   1400040f9:	mov    QWORD PTR [rbx+0x10],rdi
   1400040fd:	jb     0x140004114
   1400040ff:	mov    rax,QWORD PTR [rbx]
   140004102:	mov    BYTE PTR [rax+rdi*1],0x0
   140004106:	mov    rax,rbx
   140004109:	mov    rbx,QWORD PTR [rsp+0x30]
   14000410e:	add    rsp,0x20
   140004112:	pop    rdi
   140004113:	ret    
   140004114:	mov    rax,rbx
   140004117:	mov    BYTE PTR [rbx+rdi*1],0x0
   14000411b:	mov    rax,rbx
   14000411e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004123:	add    rsp,0x20
   140004127:	pop    rdi
   140004128:	ret    
   140004129:	int3   
   14000412a:	int3   
   14000412b:	int3   
   14000412c:	int3   
   14000412d:	int3   
   14000412e:	int3   
   14000412f:	int3   
   140004130:	sub    rsp,0x28
   140004134:	cmp    QWORD PTR [rcx+0x10],rdx
   140004138:	jae    0x140004148
   14000413a:	lea    rcx,[rip+0x25f7]        # 0x140006738
   140004141:	call   QWORD PTR [rip+0x1f01]        # 0x140006048
   140004147:	int3   
   140004148:	cmp    QWORD PTR [rcx+0x18],0x10
   14000414d:	mov    QWORD PTR [rcx+0x10],rdx
   140004151:	jb     0x140004162
   140004153:	mov    rax,QWORD PTR [rcx]
   140004156:	mov    BYTE PTR [rax+rdx*1],0x0
   14000415a:	mov    rax,rcx
   14000415d:	add    rsp,0x28
   140004161:	ret    
   140004162:	mov    rax,rcx
   140004165:	mov    BYTE PTR [rcx+rdx*1],0x0
   140004169:	add    rsp,0x28
   14000416d:	ret    
   14000416e:	int3   
   14000416f:	int3   
   140004170:	mov    QWORD PTR [rsp+0x8],rbx
   140004175:	mov    QWORD PTR [rsp+0x18],r8
   14000417a:	push   rdi
   14000417b:	sub    rsp,0x20
   14000417f:	mov    rax,QWORD PTR [r8]
   140004182:	mov    rbx,r8
   140004185:	mov    rdi,rdx
   140004188:	mov    QWORD PTR [rsp+0x40],rax
   14000418d:	mov    r8,QWORD PTR [r8+0x8]
   140004191:	mov    rax,QWORD PTR [rbx]
   140004194:	mov    QWORD PTR [r8],rax
   140004197:	mov    r8,QWORD PTR [rbx]
   14000419a:	mov    rax,QWORD PTR [rbx+0x8]
   14000419e:	mov    QWORD PTR [r8+0x8],rax
   1400041a2:	dec    QWORD PTR [rcx+0x8]
   1400041a6:	cmp    QWORD PTR [rbx+0x48],0x10
   1400041ab:	jb     0x1400041b6
   1400041ad:	mov    rcx,QWORD PTR [rbx+0x30]
   1400041b1:	call   0x140004c38
   1400041b6:	mov    QWORD PTR [rbx+0x48],0xf
   1400041be:	mov    QWORD PTR [rbx+0x40],0x0
   1400041c6:	mov    BYTE PTR [rbx+0x30],0x0
   1400041ca:	cmp    QWORD PTR [rbx+0x28],0x10
   1400041cf:	jb     0x1400041da
   1400041d1:	mov    rcx,QWORD PTR [rbx+0x10]
   1400041d5:	call   0x140004c38
   1400041da:	mov    QWORD PTR [rbx+0x28],0xf
   1400041e2:	mov    QWORD PTR [rbx+0x20],0x0
   1400041ea:	mov    rcx,rbx
   1400041ed:	mov    BYTE PTR [rbx+0x10],0x0
   1400041f1:	call   0x140004c38
   1400041f6:	mov    rax,QWORD PTR [rsp+0x40]
   1400041fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140004200:	mov    QWORD PTR [rdi],rax
   140004203:	mov    rax,rdi
   140004206:	add    rsp,0x20
   14000420a:	pop    rdi
   14000420b:	ret    
   14000420c:	int3   
   14000420d:	int3   
   14000420e:	int3   
   14000420f:	int3   
   140004210:	mov    rax,QWORD PTR [rcx]
   140004213:	mov    rax,QWORD PTR [rax]
   140004216:	add    rax,0x10
   14000421a:	ret    
   14000421b:	int3   
   14000421c:	int3   
   14000421d:	int3   
   14000421e:	int3   
   14000421f:	int3   
   140004220:	lea    rax,[rip+0x4dd9]        # 0x140009000
   140004227:	ret    
   140004228:	int3   
   140004229:	int3   
   14000422a:	int3   
   14000422b:	int3   
   14000422c:	int3   
   14000422d:	int3   
   14000422e:	int3   
   14000422f:	int3   
   140004230:	mov    QWORD PTR [rsp+0x8],rbx
   140004235:	xor    ebx,ebx
   140004237:	mov    r11,rdx
   14000423a:	mov    r9,rcx
   14000423d:	mov    r8d,ebx
   140004240:	movzx  eax,WORD PTR [rcx]
   140004243:	cmp    ax,0x20
   140004247:	je     0x14000424f
   140004249:	cmp    ax,0x9
   14000424d:	jne    0x140004259
   14000424f:	add    rcx,0x2
   140004253:	add    r9,0x2
   140004257:	jmp    0x140004240
   140004259:	movzx  eax,WORD PTR [rcx]
   14000425c:	mov    edx,0x22
   140004261:	cmp    dx,ax
   140004264:	jne    0x140004297
   140004266:	movzx  eax,WORD PTR [rcx+0x2]
   14000426a:	add    rcx,0x2
   14000426e:	add    r9,0x2
   140004272:	test   ax,ax
   140004275:	je     0x14000428c
   140004277:	cmp    ax,dx
   14000427a:	je     0x140004291
   14000427c:	movzx  eax,WORD PTR [rcx+0x2]
   140004280:	add    rcx,0x2
   140004284:	inc    r8
   140004287:	test   ax,ax
   14000428a:	jne    0x140004277
   14000428c:	cmp    WORD PTR [rcx],dx
   14000428f:	jne    0x1400042c0
   140004291:	add    rcx,0x2
   140004295:	jmp    0x1400042c0
   140004297:	test   ax,ax
   14000429a:	je     0x1400042cf
   14000429c:	mov    edx,0x20
   1400042a1:	lea    r10d,[rdx-0x17]
   1400042a5:	cmp    dx,ax
   1400042a8:	je     0x1400042c0
   1400042aa:	cmp    r10w,ax
   1400042ae:	je     0x1400042c0
   1400042b0:	movzx  eax,WORD PTR [rcx+0x2]
   1400042b4:	add    rcx,0x2
   1400042b8:	inc    r8
   1400042bb:	test   ax,ax
   1400042be:	jne    0x1400042a5
   1400042c0:	cmp    r8,0x1ff
   1400042c7:	jbe    0x140004304
   1400042c9:	mov    r8d,0x1ff
   1400042cf:	mov    r10d,0x200
   1400042d5:	mov    rdx,r11
   1400042d8:	sub    r9,r11
   1400042db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400042e0:	lea    rax,[r10-0x200]
   1400042e7:	add    rax,r8
   1400042ea:	je     0x14000431f
   1400042ec:	movzx  eax,WORD PTR [r9+rdx*1]
   1400042f1:	test   ax,ax
   1400042f4:	je     0x14000431f
   1400042f6:	mov    WORD PTR [rdx],ax
   1400042f9:	add    rdx,0x2
   1400042fd:	dec    r10
   140004300:	jne    0x1400042e0
   140004302:	jmp    0x140004324
   140004304:	cmp    r8,0x7ffffffe
   14000430b:	jbe    0x1400042cf
   14000430d:	mov    WORD PTR [r11],bx
   140004311:	mov    rax,rcx
   140004314:	mov    WORD PTR [r11+r8*2],bx
   140004319:	mov    rbx,QWORD PTR [rsp+0x8]
   14000431e:	ret    
   14000431f:	test   r10,r10
   140004322:	jne    0x140004328
   140004324:	sub    rdx,0x2
   140004328:	mov    WORD PTR [rdx],bx
   14000432b:	mov    WORD PTR [r11+r8*2],bx
   140004330:	mov    rbx,QWORD PTR [rsp+0x8]
   140004335:	mov    rax,rcx
   140004338:	ret    
   140004339:	int3   
   14000433a:	int3   
   14000433b:	int3   
   14000433c:	int3   
   14000433d:	int3   
   14000433e:	int3   
   14000433f:	int3   
   140004340:	mov    QWORD PTR [rsp+0x8],rbx
   140004345:	mov    QWORD PTR [rsp+0x10],rbp
   14000434a:	mov    QWORD PTR [rsp+0x18],rsi
   14000434f:	push   rdi
   140004350:	sub    rsp,0xb0
   140004357:	mov    rdi,rdx
   14000435a:	mov    rsi,rcx
   14000435d:	lea    rbp,[rip+0x232c]        # 0x140006690
   140004364:	xor    edx,edx
   140004366:	mov    rcx,rbp
   140004369:	xor    ebx,ebx
   14000436b:	call   QWORD PTR [rip+0x1e1f]        # 0x140006190
   140004371:	test   rax,rax
   140004374:	jne    0x140004443
   14000437a:	mov    rax,QWORD PTR [rip+0x1e2f]        # 0x1400061b0
   140004381:	lea    rcx,[rsp+0x60]
   140004386:	mov    DWORD PTR [rsp+0x60],0x50
   14000438e:	mov    QWORD PTR [rsp+0xa0],rbp
   140004396:	mov    QWORD PTR [rsp+0x78],rsi
   14000439b:	mov    DWORD PTR [rsp+0x64],0x2
   1400043a3:	mov    QWORD PTR [rsp+0x68],rax
   1400043a8:	mov    DWORD PTR [rsp+0x70],ebx
   1400043ac:	mov    DWORD PTR [rsp+0x74],0x8
   1400043b4:	mov    QWORD PTR [rsp+0x90],rbx
   1400043bc:	mov    QWORD PTR [rsp+0x88],rbx
   1400043c4:	mov    QWORD PTR [rsp+0x80],rbx
   1400043cc:	mov    QWORD PTR [rsp+0xa8],rbx
   1400043d4:	mov    QWORD PTR [rsp+0x98],rbx
   1400043dc:	call   QWORD PTR [rip+0x1dc6]        # 0x1400061a8
   1400043e2:	test   ax,ax
   1400043e5:	jne    0x1400043f4
   1400043e7:	xor    edx,edx
   1400043e9:	mov    rcx,rbp
   1400043ec:	call   QWORD PTR [rip+0x1d9e]        # 0x140006190
   1400043f2:	jmp    0x140004443
   1400043f4:	mov    QWORD PTR [rsp+0x58],rbx
   1400043f9:	mov    QWORD PTR [rsp+0x50],rsi
   1400043fe:	mov    QWORD PTR [rsp+0x48],rbx
   140004403:	mov    QWORD PTR [rsp+0x40],rbx
   140004408:	mov    DWORD PTR [rsp+0x38],ebx
   14000440c:	mov    DWORD PTR [rsp+0x30],0x80000000
   140004414:	lea    r8,[rip+0x2245]        # 0x140006660
   14000441b:	mov    r9d,0xcf0000
   140004421:	mov    rdx,rbp
   140004424:	xor    ecx,ecx
   140004426:	mov    DWORD PTR [rsp+0x28],ebx
   14000442a:	mov    DWORD PTR [rsp+0x20],0x80000000
   140004432:	call   QWORD PTR [rip+0x1d68]        # 0x1400061a0
   140004438:	mov    ecx,0x1
   14000443d:	test   rax,rax
   140004440:	cmovne ebx,ecx
   140004443:	lea    r11,[rsp+0xb0]
   14000444b:	mov    QWORD PTR [rdi],rax
   14000444e:	mov    eax,ebx
   140004450:	mov    rbx,QWORD PTR [r11+0x10]
   140004454:	mov    rbp,QWORD PTR [r11+0x18]
   140004458:	mov    rsi,QWORD PTR [r11+0x20]
   14000445c:	mov    rsp,r11
   14000445f:	pop    rdi
   140004460:	ret    
   140004461:	int3   
   140004462:	int3   
   140004463:	int3   
   140004464:	int3   
   140004465:	int3   
   140004466:	int3   
   140004467:	int3   
   140004468:	int3   
   140004469:	int3   
   14000446a:	int3   
   14000446b:	int3   
   14000446c:	int3   
   14000446d:	int3   
   14000446e:	int3   
   14000446f:	int3   
   140004470:	rex push rbx
   140004472:	sub    rsp,0x30
   140004476:	mov    rax,QWORD PTR [rsp+0x60]
   14000447b:	mov    rbx,rdx
   14000447e:	mov    QWORD PTR [rsp+0x20],rax
   140004483:	call   0x1400030f0
   140004488:	mov    rax,rbx
   14000448b:	add    rsp,0x30
   14000448f:	pop    rbx
   140004490:	ret    
   140004491:	int3   
   140004492:	int3   
   140004493:	int3   
   140004494:	int3   
   140004495:	int3   
   140004496:	int3   
   140004497:	int3   
   140004498:	int3   
   140004499:	int3   
   14000449a:	int3   
   14000449b:	int3   
   14000449c:	int3   
   14000449d:	int3   
   14000449e:	int3   
   14000449f:	int3   
   1400044a0:	cmp    BYTE PTR [rcx],0x0
   1400044a3:	jne    0x1400044a8
   1400044a5:	xor    eax,eax
   1400044a7:	ret    
   1400044a8:	or     rax,0xffffffffffffffff
   1400044ac:	nop    DWORD PTR [rax+0x0]
   1400044b0:	inc    rax
   1400044b3:	cmp    BYTE PTR [rcx+rax*1],0x0
   1400044b7:	jne    0x1400044b0
   1400044b9:	ret    
   1400044ba:	int3   
   1400044bb:	int3   
   1400044bc:	int3   
   1400044bd:	int3   
   1400044be:	int3   
   1400044bf:	int3   
   1400044c0:	mov    rax,QWORD PTR [rcx+0x8]
   1400044c4:	movss  xmm2,DWORD PTR [rip+0x22b0]        # 0x14000677c
   1400044cc:	xorps  xmm0,xmm0
   1400044cf:	cvtsi2ss xmm0,rax
   1400044d4:	test   rax,rax
   1400044d7:	jns    0x1400044dd
   1400044d9:	addss  xmm0,xmm2
   1400044dd:	mov    rax,QWORD PTR [rcx+0x30]
   1400044e1:	xorps  xmm1,xmm1
   1400044e4:	cvtsi2ss xmm1,rax
   1400044e9:	test   rax,rax
   1400044ec:	jns    0x1400044f2
   1400044ee:	addss  xmm1,xmm2
   1400044f2:	divss  xmm0,xmm1
   1400044f6:	ret    
   1400044f7:	int3   
   1400044f8:	int3   
   1400044f9:	int3   
   1400044fa:	int3   
   1400044fb:	int3   
   1400044fc:	int3   
   1400044fd:	int3   
   1400044fe:	int3   
   1400044ff:	int3   
   140004500:	movss  xmm0,DWORD PTR [rcx+0x38]
   140004505:	ret    
   140004506:	int3   
   140004507:	int3   
   140004508:	int3   
   140004509:	int3   
   14000450a:	int3   
   14000450b:	int3   
   14000450c:	int3   
   14000450d:	int3   
   14000450e:	int3   
   14000450f:	int3   
   140004510:	movabs rax,0x1fffffffffffffff
   14000451a:	ret    
   14000451b:	int3   
   14000451c:	int3   
   14000451d:	int3   
   14000451e:	int3   
   14000451f:	int3   
   140004520:	or     rax,0xffffffffffffffff
   140004524:	ret    
   140004525:	int3   
   140004526:	int3   
   140004527:	int3   
   140004528:	int3   
   140004529:	int3   
   14000452a:	int3   
   14000452b:	int3   
   14000452c:	int3   
   14000452d:	int3   
   14000452e:	int3   
   14000452f:	int3   
   140004530:	movabs rax,0x333333333333333
   14000453a:	ret    
   14000453b:	int3   
   14000453c:	int3   
   14000453d:	int3   
   14000453e:	int3   
   14000453f:	int3   
   140004540:	movabs rax,0x1fffffffffffffff
   14000454a:	ret    
   14000454b:	int3   
   14000454c:	int3   
   14000454d:	int3   
   14000454e:	int3   
   14000454f:	int3   
   140004550:	or     rax,0xffffffffffffffff
   140004554:	ret    
   140004555:	int3   
   140004556:	int3   
   140004557:	int3   
   140004558:	int3   
   140004559:	int3   
   14000455a:	int3   
   14000455b:	int3   
   14000455c:	int3   
   14000455d:	int3   
   14000455e:	int3   
   14000455f:	int3   
   140004560:	movabs rax,0x333333333333333
   14000456a:	ret    
   14000456b:	int3   
   14000456c:	int3   
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	movabs rax,0x1fffffffffffffff
   14000457a:	ret    
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	movabs rax,0x1fffffffffffffff
   14000458a:	ret    
   14000458b:	int3   
   14000458c:	int3   
   14000458d:	int3   
   14000458e:	int3   
   14000458f:	int3   
   140004590:	or     rax,0xffffffffffffffff
   140004594:	ret    
   140004595:	int3   
   140004596:	int3   
   140004597:	int3   
   140004598:	int3   
   140004599:	int3   
   14000459a:	int3   
   14000459b:	int3   
   14000459c:	int3   
   14000459d:	int3   
   14000459e:	int3   
   14000459f:	int3   
   1400045a0:	movabs rax,0x333333333333333
   1400045aa:	ret    
   1400045ab:	int3   
   1400045ac:	int3   
   1400045ad:	int3   
   1400045ae:	int3   
   1400045af:	int3   
   1400045b0:	movabs rax,0x1fffffffffffffff
   1400045ba:	ret    
   1400045bb:	int3   
   1400045bc:	int3   
   1400045bd:	int3   
   1400045be:	int3   
   1400045bf:	int3   
   1400045c0:	mov    rax,0xfffffffffffffffe
   1400045c7:	ret    
   1400045c8:	int3   
   1400045c9:	int3   
   1400045ca:	int3   
   1400045cb:	int3   
   1400045cc:	int3   
   1400045cd:	int3   
   1400045ce:	int3   
   1400045cf:	int3   
   1400045d0:	movabs rax,0x333333333333333
   1400045da:	ret    
   1400045db:	int3   
   1400045dc:	int3   
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	movabs rax,0x1fffffffffffffff
   1400045ea:	ret    
   1400045eb:	int3   
   1400045ec:	int3   
   1400045ed:	int3   
   1400045ee:	int3   
   1400045ef:	int3   
   1400045f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400045f5:	push   rdi
   1400045f6:	sub    rsp,0x30
   1400045fa:	xor    ebx,ebx
   1400045fc:	mov    ecx,r8d
   1400045ff:	mov    rdi,rdx
   140004602:	mov    DWORD PTR [rsp+0x20],ebx
   140004606:	call   QWORD PTR [rip+0x1a34]        # 0x140006040
   14000460c:	mov    QWORD PTR [rdi+0x18],0xf
   140004614:	test   rax,rax
   140004617:	mov    QWORD PTR [rdi+0x10],rbx
   14000461b:	lea    rdx,[rip+0x1f8e]        # 0x1400065b0
   140004622:	cmovne rdx,rax
   140004626:	mov    BYTE PTR [rdi],bl
   140004628:	cmp    BYTE PTR [rdx],bl
   14000462a:	je     0x140004639
   14000462c:	or     rbx,0xffffffffffffffff
   140004630:	inc    rbx
   140004633:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140004637:	jne    0x140004630
   140004639:	mov    r8,rbx
   14000463c:	mov    rcx,rdi
   14000463f:	call   0x140003ab0
   140004644:	mov    rbx,QWORD PTR [rsp+0x40]
   140004649:	mov    rax,rdi
   14000464c:	add    rsp,0x30
   140004650:	pop    rdi
   140004651:	ret    
   140004652:	int3   
   140004653:	int3   
   140004654:	int3   
   140004655:	int3   
   140004656:	int3   
   140004657:	int3   
   140004658:	int3   
   140004659:	int3   
   14000465a:	int3   
   14000465b:	int3   
   14000465c:	int3   
   14000465d:	int3   
   14000465e:	int3   
   14000465f:	int3   
   140004660:	rex push rbx
   140004662:	sub    rsp,0x30
   140004666:	xor    eax,eax
   140004668:	mov    rbx,rdx
   14000466b:	mov    DWORD PTR [rsp+0x20],eax
   14000466f:	cmp    r8d,0x1
   140004673:	jne    0x14000469f
   140004675:	mov    QWORD PTR [rdx+0x18],0xf
   14000467d:	mov    QWORD PTR [rdx+0x10],rax
   140004681:	mov    BYTE PTR [rdx],al
   140004683:	lea    rdx,[rip+0x1f7e]        # 0x140006608
   14000468a:	lea    r8d,[rax+0x15]
   14000468e:	mov    rcx,rbx
   140004691:	call   0x140003ab0
   140004696:	mov    rax,rbx
   140004699:	add    rsp,0x30
   14000469d:	pop    rbx
   14000469e:	ret    
   14000469f:	call   0x1400045f0
   1400046a4:	mov    rax,rbx
   1400046a7:	add    rsp,0x30
   1400046ab:	pop    rbx
   1400046ac:	ret    
   1400046ad:	int3   
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400046b5:	push   rdi
   1400046b6:	sub    rsp,0x30
   1400046ba:	xor    ebx,ebx
   1400046bc:	mov    ecx,r8d
   1400046bf:	mov    rdi,rdx
   1400046c2:	mov    DWORD PTR [rsp+0x20],ebx
   1400046c6:	call   QWORD PTR [rip+0x1994]        # 0x140006060
   1400046cc:	mov    QWORD PTR [rdi+0x18],0xf
   1400046d4:	test   rax,rax
   1400046d7:	mov    QWORD PTR [rdi+0x10],rbx
   1400046db:	lea    rdx,[rip+0x1ece]        # 0x1400065b0
   1400046e2:	cmovne rdx,rax
   1400046e6:	mov    BYTE PTR [rdi],bl
   1400046e8:	cmp    BYTE PTR [rdx],bl
   1400046ea:	je     0x1400046f9
   1400046ec:	or     rbx,0xffffffffffffffff
   1400046f0:	inc    rbx
   1400046f3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   1400046f7:	jne    0x1400046f0
   1400046f9:	mov    r8,rbx
   1400046fc:	mov    rcx,rdi
   1400046ff:	call   0x140003ab0
   140004704:	mov    rbx,QWORD PTR [rsp+0x40]
   140004709:	mov    rax,rdi
   14000470c:	add    rsp,0x30
   140004710:	pop    rdi
   140004711:	ret    
   140004712:	int3   
   140004713:	int3   
   140004714:	int3   
   140004715:	int3   
   140004716:	int3   
   140004717:	int3   
   140004718:	int3   
   140004719:	int3   
   14000471a:	int3   
   14000471b:	int3   
   14000471c:	int3   
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	test   r8,r8
   140004723:	jne    0x140004729
   140004725:	mov    rax,rcx
   140004728:	ret    
   140004729:	rex.W jmp QWORD PTR [rip+0x19b0]        # 0x1400060e0
   140004730:	lea    rax,[rip+0x1e71]        # 0x1400065a8
   140004737:	ret    
   140004738:	int3   
   140004739:	int3   
   14000473a:	int3   
   14000473b:	int3   
   14000473c:	int3   
   14000473d:	int3   
   14000473e:	int3   
   14000473f:	int3   
   140004740:	lea    rax,[rip+0x1eb1]        # 0x1400065f8
   140004747:	ret    
   140004748:	int3   
   140004749:	int3   
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	int3   
   14000474d:	int3   
   14000474e:	int3   
   14000474f:	int3   
   140004750:	lea    rax,[rip+0x1f01]        # 0x140006658
   140004757:	ret    
   140004758:	int3   
   140004759:	int3   
   14000475a:	int3   
   14000475b:	int3   
   14000475c:	int3   
   14000475d:	int3   
   14000475e:	int3   
   14000475f:	int3   
   140004760:	mov    rax,rdx
   140004763:	ret    
   140004764:	int3   
   140004765:	int3   
   140004766:	int3   
   140004767:	int3   
   140004768:	int3   
   140004769:	int3   
   14000476a:	int3   
   14000476b:	int3   
   14000476c:	int3   
   14000476d:	int3   
   14000476e:	int3   
   14000476f:	int3   
   140004770:	mov    rax,rdx
   140004773:	ret    
   140004774:	int3   
   140004775:	int3   
   140004776:	int3   
   140004777:	int3   
   140004778:	int3   
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	int3   
   14000477d:	int3   
   14000477e:	int3   
   14000477f:	int3   
   140004780:	mov    rax,rdx
   140004783:	ret    
   140004784:	int3   
   140004785:	int3   
   140004786:	int3   
   140004787:	int3   
   140004788:	int3   
   140004789:	int3   
   14000478a:	int3   
   14000478b:	int3   
   14000478c:	int3   
   14000478d:	int3   
   14000478e:	int3   
   14000478f:	int3   
   140004790:	mov    rax,rdx
   140004793:	ret    
   140004794:	int3   
   140004795:	int3   
   140004796:	int3   
   140004797:	int3   
   140004798:	int3   
   140004799:	int3   
   14000479a:	int3   
   14000479b:	int3   
   14000479c:	int3   
   14000479d:	int3   
   14000479e:	int3   
   14000479f:	int3   
   1400047a0:	mov    rax,rcx
   1400047a3:	ret    
   1400047a4:	int3   
   1400047a5:	int3   
   1400047a6:	int3   
   1400047a7:	int3   
   1400047a8:	int3   
   1400047a9:	int3   
   1400047aa:	int3   
   1400047ab:	int3   
   1400047ac:	int3   
   1400047ad:	int3   
   1400047ae:	int3   
   1400047af:	int3   
   1400047b0:	mov    rax,rcx
   1400047b3:	ret    
   1400047b4:	int3   
   1400047b5:	int3   
   1400047b6:	int3   
   1400047b7:	int3   
   1400047b8:	int3   
   1400047b9:	int3   
   1400047ba:	int3   
   1400047bb:	int3   
   1400047bc:	int3   
   1400047bd:	int3   
   1400047be:	int3   
   1400047bf:	int3   
   1400047c0:	mov    rax,QWORD PTR [rcx+0x8]
   1400047c4:	ret    
   1400047c5:	int3   
   1400047c6:	int3   
   1400047c7:	int3   
   1400047c8:	int3   
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	int3   
   1400047cd:	int3   
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	mov    rax,QWORD PTR [rcx+0x10]
   1400047d4:	ret    
   1400047d5:	int3   
   1400047d6:	int3   
   1400047d7:	int3   
   1400047d8:	int3   
   1400047d9:	int3   
   1400047da:	int3   
   1400047db:	int3   
   1400047dc:	int3   
   1400047dd:	int3   
   1400047de:	int3   
   1400047df:	int3   
   1400047e0:	mov    rax,QWORD PTR [rcx+0x8]
   1400047e4:	ret    
   1400047e5:	int3   
   1400047e6:	int3   
   1400047e7:	int3   
   1400047e8:	int3   
   1400047e9:	int3   
   1400047ea:	int3   
   1400047eb:	int3   
   1400047ec:	int3   
   1400047ed:	int3   
   1400047ee:	int3   
   1400047ef:	int3   
   1400047f0:	mov    rax,QWORD PTR [rcx+0x8]
   1400047f4:	sub    rax,QWORD PTR [rcx]
   1400047f7:	sar    rax,0x3
   1400047fb:	ret    
   1400047fc:	int3   
   1400047fd:	int3   
   1400047fe:	int3   
   1400047ff:	int3   
   140004800:	rex push rbp
   140004802:	lea    rbp,[rsp-0x57]
   140004807:	sub    rsp,0xe0
   14000480e:	mov    QWORD PTR [rbp-0x9],0xfffffffffffffffe
   140004816:	mov    QWORD PTR [rsp+0xf0],rbx
   14000481e:	lea    rcx,[rip+0x1e43]        # 0x140006668
   140004825:	call   0x140004bd2
   14000482a:	call   0x140004ae0
   14000482f:	mov    rcx,rax
   140004832:	call   0x140004bd2
   140004837:	xor    ecx,ecx
   140004839:	call   0x140004bcc
   14000483e:	lea    rcx,[rip+0x1e33]        # 0x140006678
   140004845:	call   0x140004bd8
   14000484a:	call   0x140004ae0
   14000484f:	mov    rbx,rax
   140004852:	mov    rcx,rax
   140004855:	call   0x140004be4
   14000485a:	mov    rdx,rbx
   14000485d:	lea    rcx,[rbp+0x7]
   140004861:	call   0x140004bae
   140004866:	nop
   140004867:	lea    rdx,[rbp-0x69]
   14000486b:	lea    rcx,[rbp+0x7]
   14000486f:	call   0x140004bba
   140004874:	nop
   140004875:	call   0x140004bde
   14000487a:	mov    r8,rax
   14000487d:	lea    rdx,[rbp-0x49]
   140004881:	lea    rcx,[rbp+0x7]
   140004885:	call   0x140004bc0
   14000488a:	nop
   14000488b:	mov    QWORD PTR [rbp-0x11],0xf
   140004893:	xor    ebx,ebx
   140004895:	mov    QWORD PTR [rbp-0x19],rbx
   140004899:	mov    BYTE PTR [rbp-0x29],bl
   14000489c:	or     r9,0xffffffffffffffff
   1400048a0:	xor    r8d,r8d
   1400048a3:	lea    rdx,[rbp-0x49]
   1400048a7:	lea    rcx,[rbp-0x29]
   1400048ab:	call   0x140003960
   1400048b0:	lea    rcx,[rbp-0x69]
   1400048b4:	cmp    QWORD PTR [rbp-0x51],0x10
   1400048b9:	cmovae rcx,QWORD PTR [rbp-0x69]
   1400048be:	lea    rdx,[rbp-0x29]
   1400048c2:	call   0x140004ba8
   1400048c7:	nop
   1400048c8:	cmp    QWORD PTR [rbp-0x31],0x10
   1400048cd:	jb     0x1400048d8
   1400048cf:	mov    rcx,QWORD PTR [rbp-0x49]
   1400048d3:	call   0x140004c38
   1400048d8:	mov    QWORD PTR [rbp-0x31],0xf
   1400048e0:	mov    QWORD PTR [rbp-0x39],rbx
   1400048e4:	mov    BYTE PTR [rbp-0x49],0x0
   1400048e8:	cmp    QWORD PTR [rbp-0x51],0x10
   1400048ed:	jb     0x1400048f8
   1400048ef:	mov    rcx,QWORD PTR [rbp-0x69]
   1400048f3:	call   0x140004c38
   1400048f8:	mov    QWORD PTR [rbp-0x51],0xf
   140004900:	mov    QWORD PTR [rbp-0x59],rbx
   140004904:	mov    BYTE PTR [rbp-0x69],0x0
   140004908:	lea    rcx,[rbp+0x7]
   14000490c:	call   0x140004bb4
   140004911:	xor    eax,eax
   140004913:	mov    rbx,QWORD PTR [rsp+0xf0]
   14000491b:	add    rsp,0xe0
   140004922:	pop    rbp
   140004923:	ret    
   140004924:	int3   
   140004925:	int3   
   140004926:	int3   
   140004927:	int3   
   140004928:	int3   
   140004929:	int3   
   14000492a:	int3   
   14000492b:	int3   
   14000492c:	int3   
   14000492d:	int3   
   14000492e:	int3   
   14000492f:	int3   
   140004930:	lea    rax,[rip+0x46d9]        # 0x140009010
   140004937:	ret    
   140004938:	int3   
   140004939:	int3   
   14000493a:	int3   
   14000493b:	int3   
   14000493c:	int3   
   14000493d:	int3   
   14000493e:	int3   
   14000493f:	int3   
   140004940:	mov    eax,DWORD PTR [rcx]
   140004942:	ret    
   140004943:	int3   
   140004944:	int3   
   140004945:	int3   
   140004946:	int3   
   140004947:	int3   
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    eax,DWORD PTR [rcx]
   140004952:	ret    
   140004953:	int3   
   140004954:	int3   
   140004955:	int3   
   140004956:	int3   
   140004957:	int3   
   140004958:	int3   
   140004959:	int3   
   14000495a:	int3   
   14000495b:	int3   
   14000495c:	int3   
   14000495d:	int3   
   14000495e:	int3   
   14000495f:	int3   
   140004960:	rex push rbx
   140004962:	sub    rsp,0x30
   140004966:	lea    rdx,[rsp+0x20]
   14000496b:	mov    rbx,rcx
   14000496e:	call   0x140004340
   140004973:	cmp    QWORD PTR [rsp+0x20],0x0
   140004979:	jne    0x14000499f
   14000497b:	lea    r8,[rip+0x1d76]        # 0x1400066f8
   140004982:	lea    rdx,[rip+0x1d27]        # 0x1400066b0
   140004989:	xor    r9d,r9d
   14000498c:	xor    ecx,ecx
   14000498e:	call   QWORD PTR [rip+0x1804]        # 0x140006198
   140004994:	mov    eax,0x1
   140004999:	add    rsp,0x30
   14000499d:	pop    rbx
   14000499e:	ret    
   14000499f:	call   0x140004bc6
   1400049a4:	mov    rcx,rbx
   1400049a7:	call   0x140004800
   1400049ac:	xor    eax,eax
   1400049ae:	add    rsp,0x30
   1400049b2:	pop    rbx
   1400049b3:	ret    
   1400049b4:	int3   
   1400049b5:	int3   
   1400049b6:	int3   
   1400049b7:	int3   
   1400049b8:	int3   
   1400049b9:	int3   
   1400049ba:	int3   
   1400049bb:	int3   
   1400049bc:	int3   
   1400049bd:	int3   
   1400049be:	int3   
   1400049bf:	int3   
   1400049c0:	rex.W jmp QWORD PTR [rip+0x1721]        # 0x1400060e8
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400049d5:	mov    QWORD PTR [rsp+0x10],rdi
   1400049da:	xor    edi,edi
   1400049dc:	mov    rbx,r8
   1400049df:	mov    r11d,edi
   1400049e2:	mov    r10d,edi
   1400049e5:	test   rdx,rdx
   1400049e8:	je     0x140004a1c
   1400049ea:	mov    rax,QWORD PTR [rsp+0x28]
   1400049ef:	sub    r9,rcx
   1400049f2:	test   rax,rax
   1400049f5:	je     0x140004a17
   1400049f7:	movzx  r8d,WORD PTR [r9+rcx*1]
   1400049fc:	test   r8w,r8w
   140004a00:	je     0x140004a17
   140004a02:	mov    WORD PTR [rcx],r8w
   140004a06:	add    rcx,0x2
   140004a0a:	dec    rax
   140004a0d:	inc    r10
   140004a10:	dec    rdx
   140004a13:	jne    0x1400049f2
   140004a15:	jmp    0x140004a1c
   140004a17:	test   rdx,rdx
   140004a1a:	jne    0x140004a29
   140004a1c:	sub    rcx,0x2
   140004a20:	mov    r11d,0x8007007a
   140004a26:	dec    r10
   140004a29:	mov    WORD PTR [rcx],di
   140004a2c:	mov    eax,r11d
   140004a2f:	test   rbx,rbx
   140004a32:	je     0x140004a37
   140004a34:	mov    QWORD PTR [rbx],r10
   140004a37:	mov    rbx,QWORD PTR [rsp+0x8]
   140004a3c:	mov    rdi,QWORD PTR [rsp+0x10]
   140004a41:	ret    
   140004a42:	int3   
   140004a43:	int3   
   140004a44:	int3   
   140004a45:	int3   
   140004a46:	int3   
   140004a47:	int3   
   140004a48:	int3   
   140004a49:	int3   
   140004a4a:	int3   
   140004a4b:	int3   
   140004a4c:	int3   
   140004a4d:	int3   
   140004a4e:	int3   
   140004a4f:	int3   
   140004a50:	test   rdx,rdx
   140004a53:	je     0x140004a5d
   140004a55:	cmp    rdx,r8
   140004a58:	ja     0x140004a5d
   140004a5a:	xor    eax,eax
   140004a5c:	ret    
   140004a5d:	mov    eax,0x80070057
   140004a62:	ret    
   140004a63:	int3   
   140004a64:	int3   
   140004a65:	int3   
   140004a66:	int3   
   140004a67:	int3   
   140004a68:	int3   
   140004a69:	int3   
   140004a6a:	int3   
   140004a6b:	int3   
   140004a6c:	int3   
   140004a6d:	int3   
   140004a6e:	int3   
   140004a6f:	int3   
   140004a70:	lea    rax,[rip+0x1d09]        # 0x140006780
   140004a77:	ret    
   140004a78:	int3   
   140004a79:	int3   
   140004a7a:	int3   
   140004a7b:	int3   
   140004a7c:	int3   
   140004a7d:	int3   
   140004a7e:	int3   
   140004a7f:	int3   
   140004a80:	rex push rbx
   140004a82:	sub    rsp,0x20
   140004a86:	cmp    WORD PTR [rip+0x46e2],0x0        # 0x140009170
   140004a8e:	jne    0x140004ac4
   140004a90:	lea    rbx,[rip+0x46d9]        # 0x140009170
   140004a97:	mov    r8d,0x104
   140004a9d:	xor    ecx,ecx
   140004a9f:	mov    rdx,rbx
   140004aa2:	call   QWORD PTR [rip+0x1588]        # 0x140006030
   140004aa8:	mov    edx,0x5c
   140004aad:	mov    rcx,rbx
   140004ab0:	call   QWORD PTR [rip+0x165a]        # 0x140006110
   140004ab6:	xor    ecx,ecx
   140004ab8:	mov    WORD PTR [rax],cx
   140004abb:	mov    rax,rbx
   140004abe:	add    rsp,0x20
   140004ac2:	pop    rbx
   140004ac3:	ret    
   140004ac4:	lea    rax,[rip+0x46a5]        # 0x140009170
   140004acb:	add    rsp,0x20
   140004acf:	pop    rbx
   140004ad0:	ret    
   140004ad1:	int3   
   140004ad2:	int3   
   140004ad3:	int3   
   140004ad4:	int3   
   140004ad5:	int3   
   140004ad6:	int3   
   140004ad7:	int3   
   140004ad8:	int3   
   140004ad9:	int3   
   140004ada:	int3   
   140004adb:	int3   
   140004adc:	int3   
   140004add:	int3   
   140004ade:	int3   
   140004adf:	int3   
   140004ae0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ae5:	mov    QWORD PTR [rsp+0x10],rbp
   140004aea:	mov    QWORD PTR [rsp+0x18],rsi
   140004aef:	push   rdi
   140004af0:	sub    rsp,0x20
   140004af4:	xor    ebp,ebp
   140004af6:	mov    ebx,0x104
   140004afb:	lea    rsi,[rip+0x466e]        # 0x140009170
   140004b02:	cmp    WORD PTR [rip+0x4667],bp        # 0x140009170
   140004b09:	jne    0x140004b28
   140004b0b:	mov    r8d,ebx
   140004b0e:	mov    rdx,rsi
   140004b11:	xor    ecx,ecx
   140004b13:	call   QWORD PTR [rip+0x1517]        # 0x140006030
   140004b19:	lea    edx,[rbp+0x5c]
   140004b1c:	mov    rcx,rsi
   140004b1f:	call   QWORD PTR [rip+0x15eb]        # 0x140006110
   140004b25:	mov    WORD PTR [rax],bp
   140004b28:	lea    rdi,[rip+0x4851]        # 0x140009380
   140004b2f:	mov    rax,rdi
   140004b32:	sub    rsi,rdi
   140004b35:	test   rbx,rbx
   140004b38:	je     0x140004b56
   140004b3a:	movzx  ecx,WORD PTR [rsi+rax*1]
   140004b3e:	test   cx,cx
   140004b41:	je     0x140004b51
   140004b43:	mov    WORD PTR [rax],cx
   140004b46:	add    rax,0x2
   140004b4a:	dec    rbx
   140004b4d:	jne    0x140004b35
   140004b4f:	jmp    0x140004b56
   140004b51:	test   rbx,rbx
   140004b54:	jne    0x140004b5a
   140004b56:	sub    rax,0x2
   140004b5a:	mov    edx,0x5c
   140004b5f:	mov    rcx,rdi
   140004b62:	mov    WORD PTR [rax],bp
   140004b65:	call   QWORD PTR [rip+0x15a5]        # 0x140006110
   140004b6b:	mov    edx,0x5c
   140004b70:	mov    rcx,rdi
   140004b73:	mov    WORD PTR [rax],bp
   140004b76:	call   QWORD PTR [rip+0x1594]        # 0x140006110
   140004b7c:	test   rax,rax
   140004b7f:	je     0x140004b84
   140004b81:	mov    WORD PTR [rax],bp
   140004b84:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b89:	mov    rbp,QWORD PTR [rsp+0x38]
   140004b8e:	mov    rsi,QWORD PTR [rsp+0x40]
   140004b93:	mov    rax,rdi
   140004b96:	add    rsp,0x20
   140004b9a:	pop    rdi
   140004b9b:	ret    
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	rex.W jmp QWORD PTR [rip+0x1569]        # 0x140006110
   140004ba7:	int3   
   140004ba8:	jmp    QWORD PTR [rip+0x1662]        # 0x140006210
   140004bae:	jmp    QWORD PTR [rip+0x1654]        # 0x140006208
   140004bb4:	jmp    QWORD PTR [rip+0x1646]        # 0x140006200
   140004bba:	jmp    QWORD PTR [rip+0x1638]        # 0x1400061f8
   140004bc0:	jmp    QWORD PTR [rip+0x162a]        # 0x1400061f0
   140004bc6:	jmp    QWORD PTR [rip+0x161c]        # 0x1400061e8
   140004bcc:	jmp    QWORD PTR [rip+0x160e]        # 0x1400061e0
   140004bd2:	jmp    QWORD PTR [rip+0x1600]        # 0x1400061d8
   140004bd8:	jmp    QWORD PTR [rip+0x15f2]        # 0x1400061d0
   140004bde:	jmp    QWORD PTR [rip+0x15e4]        # 0x1400061c8
   140004be4:	jmp    QWORD PTR [rip+0x15d6]        # 0x1400061c0
   140004bea:	jmp    QWORD PTR [rip+0x1440]        # 0x140006030
   140004bf0:	jmp    QWORD PTR [rip+0x15ba]        # 0x1400061b0
   140004bf6:	jmp    QWORD PTR [rip+0x15ac]        # 0x1400061a8
   140004bfc:	jmp    QWORD PTR [rip+0x159e]        # 0x1400061a0
   140004c02:	jmp    QWORD PTR [rip+0x1590]        # 0x140006198
   140004c08:	jmp    QWORD PTR [rip+0x1582]        # 0x140006190
   140004c0e:	jmp    QWORD PTR [rip+0x1444]        # 0x140006058
   140004c14:	jmp    QWORD PTR [rip+0x1436]        # 0x140006050
   140004c1a:	jmp    QWORD PTR [rip+0x1428]        # 0x140006048
   140004c20:	jmp    QWORD PTR [rip+0x141a]        # 0x140006040
   140004c26:	jmp    QWORD PTR [rip+0x1434]        # 0x140006060
   140004c2c:	jmp    QWORD PTR [rip+0x1496]        # 0x1400060c8
   140004c32:	jmp    QWORD PTR [rip+0x1498]        # 0x1400060d0
   140004c38:	jmp    QWORD PTR [rip+0x149a]        # 0x1400060d8
   140004c3e:	int3   
   140004c3f:	int3   
   140004c40:	rex push rbx
   140004c42:	sub    rsp,0x20
   140004c46:	cmp    QWORD PTR [rip+0x4992],0x0        # 0x1400095e0
   140004c4e:	jne    0x140004c86
   140004c50:	mov    edx,0x8
   140004c55:	lea    ecx,[rdx+0x18]
   140004c58:	call   QWORD PTR [rip+0x14ca]        # 0x140006128
   140004c5e:	mov    rcx,rax
   140004c61:	mov    rbx,rax
   140004c64:	call   QWORD PTR [rip+0x13be]        # 0x140006028
   140004c6a:	mov    QWORD PTR [rip+0x496f],rax        # 0x1400095e0
   140004c71:	mov    QWORD PTR [rip+0x4960],rax        # 0x1400095d8
   140004c78:	test   rbx,rbx
   140004c7b:	jne    0x140004c82
   140004c7d:	lea    eax,[rbx+0x18]
   140004c80:	jmp    0x140004c88
   140004c82:	and    QWORD PTR [rbx],0x0
   140004c86:	xor    eax,eax
   140004c88:	add    rsp,0x20
   140004c8c:	pop    rbx
   140004c8d:	ret    
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	rex push rbx
   140004c92:	sub    rsp,0x20
   140004c96:	mov    rbx,rcx
   140004c99:	mov    rcx,QWORD PTR [rip+0x4940]        # 0x1400095e0
   140004ca0:	call   QWORD PTR [rip+0x137a]        # 0x140006020
   140004ca6:	mov    QWORD PTR [rsp+0x38],rax
   140004cab:	cmp    rax,0xffffffffffffffff
   140004caf:	jne    0x140004cbc
   140004cb1:	mov    rcx,rbx
   140004cb4:	call   QWORD PTR [rip+0x1486]        # 0x140006140
   140004cba:	jmp    0x140004d3a
   140004cbc:	mov    ecx,0x8
   140004cc1:	call   0x140005186
   140004cc6:	nop
   140004cc7:	mov    rcx,QWORD PTR [rip+0x4912]        # 0x1400095e0
   140004cce:	call   QWORD PTR [rip+0x134c]        # 0x140006020
   140004cd4:	mov    QWORD PTR [rsp+0x38],rax
   140004cd9:	mov    rcx,QWORD PTR [rip+0x48f8]        # 0x1400095d8
   140004ce0:	call   QWORD PTR [rip+0x133a]        # 0x140006020
   140004ce6:	mov    QWORD PTR [rsp+0x40],rax
   140004ceb:	mov    rcx,rbx
   140004cee:	call   QWORD PTR [rip+0x1334]        # 0x140006028
   140004cf4:	mov    rcx,rax
   140004cf7:	lea    r8,[rsp+0x40]
   140004cfc:	lea    rdx,[rsp+0x38]
   140004d01:	call   0x140005198
   140004d06:	mov    rbx,rax
   140004d09:	mov    rcx,QWORD PTR [rsp+0x38]
   140004d0e:	call   QWORD PTR [rip+0x1314]        # 0x140006028
   140004d14:	mov    QWORD PTR [rip+0x48c5],rax        # 0x1400095e0
   140004d1b:	mov    rcx,QWORD PTR [rsp+0x40]
   140004d20:	call   QWORD PTR [rip+0x1302]        # 0x140006028
   140004d26:	mov    QWORD PTR [rip+0x48ab],rax        # 0x1400095d8
   140004d2d:	mov    ecx,0x8
   140004d32:	call   0x14000518c
   140004d37:	mov    rax,rbx
   140004d3a:	add    rsp,0x20
   140004d3e:	pop    rbx
   140004d3f:	ret    
   140004d40:	sub    rsp,0x28
   140004d44:	call   0x140004c90
   140004d49:	neg    rax
   140004d4c:	sbb    eax,eax
   140004d4e:	neg    eax
   140004d50:	dec    eax
   140004d52:	add    rsp,0x28
   140004d56:	ret    
   140004d57:	int3   
   140004d58:	jmp    QWORD PTR [rip+0x1382]        # 0x1400060e0
   140004d5e:	jmp    QWORD PTR [rip+0x1384]        # 0x1400060e8
   140004d64:	jmp    QWORD PTR [rip+0x1386]        # 0x1400060f0
   140004d6a:	jmp    QWORD PTR [rip+0x1388]        # 0x1400060f8
   140004d70:	jmp    QWORD PTR [rip+0x138a]        # 0x140006100
   140004d76:	jmp    QWORD PTR [rip+0x138c]        # 0x140006108
   140004d7c:	lea    rax,[rip+0x1a7d]        # 0x140006800
   140004d83:	mov    QWORD PTR [rcx],rax
   140004d86:	mov    rax,rcx
   140004d89:	ret    
   140004d8a:	int3   
   140004d8b:	int3   
   140004d8c:	mov    rax,rcx
   140004d8f:	ret    
   140004d90:	mov    QWORD PTR [rsp+0x8],rbx
   140004d95:	mov    QWORD PTR [rsp+0x10],rsi
   140004d9a:	push   rdi
   140004d9b:	sub    rsp,0x20
   140004d9f:	mov    esi,edx
   140004da1:	mov    rbx,rcx
   140004da4:	test   dl,0x2
   140004da7:	je     0x140004dd4
   140004da9:	lea    rdi,[rcx-0x8]
   140004dad:	lea    r9,[rip+0x752]        # 0x140005506
   140004db4:	mov    edx,0x18
   140004db9:	mov    r8d,DWORD PTR [rdi]
   140004dbc:	call   0x1400051a4
   140004dc1:	test   sil,0x1
   140004dc5:	je     0x140004dcf
   140004dc7:	mov    rcx,rdi
   140004dca:	call   0x140004c38
   140004dcf:	mov    rax,rdi
   140004dd2:	jmp    0x140004dea
   140004dd4:	call   0x140005506
   140004dd9:	test   sil,0x1
   140004ddd:	je     0x140004de7
   140004ddf:	mov    rcx,rbx
   140004de2:	call   0x140004c38
   140004de7:	mov    rax,rbx
   140004dea:	mov    rbx,QWORD PTR [rsp+0x30]
   140004def:	mov    rsi,QWORD PTR [rsp+0x38]
   140004df4:	add    rsp,0x20
   140004df8:	pop    rdi
   140004df9:	ret    
   140004dfa:	jmp    QWORD PTR [rip+0x1310]        # 0x140006110
   140004e00:	sub    rsp,0x28
   140004e04:	mov    eax,0x5a4d
   140004e09:	cmp    WORD PTR [rip+0xffffffffffffb1f0],ax        # 0x140000000
   140004e10:	je     0x140004e16
   140004e12:	xor    ecx,ecx
   140004e14:	jmp    0x140004e4e
   140004e16:	movsxd rax,DWORD PTR [rip+0xffffffffffffb21f]        # 0x14000003c
   140004e1d:	lea    rcx,[rip+0xffffffffffffb1dc]        # 0x140000000
   140004e24:	add    rax,rcx
   140004e27:	cmp    DWORD PTR [rax],0x4550
   140004e2d:	jne    0x140004e12
   140004e2f:	mov    ecx,0x20b
   140004e34:	cmp    WORD PTR [rax+0x18],cx
   140004e38:	jne    0x140004e12
   140004e3a:	xor    ecx,ecx
   140004e3c:	cmp    DWORD PTR [rax+0x84],0xe
   140004e43:	jbe    0x140004e4e
   140004e45:	cmp    DWORD PTR [rax+0xf8],ecx
   140004e4b:	setne  cl
   140004e4e:	mov    DWORD PTR [rip+0x473c],ecx        # 0x140009590
   140004e54:	mov    ecx,0x2
   140004e59:	call   QWORD PTR [rip+0x1309]        # 0x140006168
   140004e5f:	or     rcx,0xffffffffffffffff
   140004e63:	call   QWORD PTR [rip+0x11bf]        # 0x140006028
   140004e69:	mov    rcx,QWORD PTR [rip+0x1238]        # 0x1400060a8
   140004e70:	mov    QWORD PTR [rip+0x4761],rax        # 0x1400095d8
   140004e77:	mov    QWORD PTR [rip+0x4762],rax        # 0x1400095e0
   140004e7e:	mov    eax,DWORD PTR [rip+0x4738]        # 0x1400095bc
   140004e84:	mov    DWORD PTR [rcx],eax
   140004e86:	mov    rdx,QWORD PTR [rip+0x1223]        # 0x1400060b0
   140004e8d:	mov    eax,DWORD PTR [rip+0x471d]        # 0x1400095b0
   140004e93:	mov    DWORD PTR [rdx],eax
   140004e95:	call   0x140005478
   140004e9a:	call   0x1400052d0
   140004e9f:	cmp    DWORD PTR [rip+0x418e],0x0        # 0x140009034
   140004ea6:	jne    0x140004eb5
   140004ea8:	lea    rcx,[rip+0x5bd]        # 0x14000546c
   140004eaf:	call   QWORD PTR [rip+0x11d3]        # 0x140006088
   140004eb5:	cmp    DWORD PTR [rip+0x417c],0xffffffff        # 0x140009038
   140004ebc:	jne    0x140004ec7
   140004ebe:	or     ecx,0xffffffff
   140004ec1:	call   QWORD PTR [rip+0x11c9]        # 0x140006090
   140004ec7:	xor    eax,eax
   140004ec9:	add    rsp,0x28
   140004ecd:	ret    
   140004ece:	int3   
   140004ecf:	int3   
   140004ed0:	sub    rsp,0x38
   140004ed4:	lea    rcx,[rip+0x5d5]        # 0x1400054b0
   140004edb:	call   0x140004d40
   140004ee0:	mov    eax,DWORD PTR [rip+0x46d2]        # 0x1400095b8
   140004ee6:	mov    r9d,DWORD PTR [rip+0x46c7]        # 0x1400095b4
   140004eed:	mov    DWORD PTR [rip+0x46b9],eax        # 0x1400095ac
   140004ef3:	lea    rax,[rip+0x46b2]        # 0x1400095ac
   140004efa:	lea    r8,[rip+0x469f]        # 0x1400095a0
   140004f01:	lea    rdx,[rip+0x4690]        # 0x140009598
   140004f08:	lea    rcx,[rip+0x4685]        # 0x140009594
   140004f0f:	mov    QWORD PTR [rsp+0x20],rax
   140004f14:	call   QWORD PTR [rip+0x1246]        # 0x140006160
   140004f1a:	mov    DWORD PTR [rip+0x4688],eax        # 0x1400095a8
   140004f20:	test   eax,eax
   140004f22:	jns    0x140004f2e
   140004f24:	mov    ecx,0x8
   140004f29:	call   0x1400052c8
   140004f2e:	add    rsp,0x38
   140004f32:	ret    
   140004f33:	int3   
   140004f34:	mov    rax,QWORD PTR gs:0x30
   140004f3d:	ret    
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	sub    rsp,0x28
   140004f44:	call   0x1400053c0
   140004f49:	add    rsp,0x28
   140004f4d:	jmp    0x140004f54
   140004f52:	int3   
   140004f53:	int3   
   140004f54:	mov    rax,rsp
   140004f57:	mov    QWORD PTR [rax+0x8],rbx
   140004f5b:	mov    QWORD PTR [rax+0x10],rsi
   140004f5f:	push   rdi
   140004f60:	sub    rsp,0x30
   140004f64:	and    QWORD PTR [rax-0x10],0x0
   140004f69:	and    DWORD PTR [rax-0x18],0x0
   140004f6d:	call   QWORD PTR [rip+0x11dd]        # 0x140006150
   140004f73:	movzx  esi,ax
   140004f76:	mov    rcx,QWORD PTR gs:0x30
   140004f7f:	mov    rdx,QWORD PTR [rcx+0x8]
   140004f83:	xor    ebx,ebx
   140004f85:	xor    eax,eax
   140004f87:	lock cmpxchg QWORD PTR [rip+0x4630],rdx        # 0x1400095c0
   140004f90:	je     0x140004fa0
   140004f92:	cmp    rax,rdx
   140004f95:	jne    0x140004f9e
   140004f97:	mov    ebx,0x1
   140004f9c:	jmp    0x140004fa0
   140004f9e:	jmp    0x140004f85
   140004fa0:	mov    eax,DWORD PTR [rip+0x4622]        # 0x1400095c8
   140004fa6:	cmp    eax,0x1
   140004fa9:	jne    0x140004fb5
   140004fab:	lea    ecx,[rax+0x1e]
   140004fae:	call   0x1400052c8
   140004fb3:	jmp    0x140004ff4
   140004fb5:	mov    eax,DWORD PTR [rip+0x460d]        # 0x1400095c8
   140004fbb:	test   eax,eax
   140004fbd:	jne    0x140004fea
   140004fbf:	mov    DWORD PTR [rip+0x45ff],0x1        # 0x1400095c8
   140004fc9:	lea    rdx,[rip+0x12a0]        # 0x140006270
   140004fd0:	lea    rcx,[rip+0x1279]        # 0x140006250
   140004fd7:	call   0x1400054f4
   140004fdc:	test   eax,eax
   140004fde:	je     0x140004ff4
   140004fe0:	mov    eax,0xff
   140004fe5:	jmp    0x14000512c
   140004fea:	mov    DWORD PTR [rip+0x4594],0x1        # 0x140009588
   140004ff4:	mov    eax,DWORD PTR [rip+0x45ce]        # 0x1400095c8
   140004ffa:	cmp    eax,0x1
   140004ffd:	jne    0x14000501c
   140004fff:	lea    rdx,[rip+0x1242]        # 0x140006248
   140005006:	lea    rcx,[rip+0x1213]        # 0x140006220
   14000500d:	call   0x1400054fa
   140005012:	mov    DWORD PTR [rip+0x45ac],0x2        # 0x1400095c8
   14000501c:	test   ebx,ebx
   14000501e:	jne    0x140005029
   140005020:	xor    eax,eax
   140005022:	xchg   QWORD PTR [rip+0x4597],rax        # 0x1400095c0
   140005029:	cmp    QWORD PTR [rip+0x459f],0x0        # 0x1400095d0
   140005031:	je     0x140005055
   140005033:	lea    rcx,[rip+0x4596]        # 0x1400095d0
   14000503a:	call   0x140005330
   14000503f:	test   eax,eax
   140005041:	je     0x140005055
   140005043:	xor    r8d,r8d
   140005046:	lea    edx,[r8+0x2]
   14000504a:	xor    ecx,ecx
   14000504c:	mov    rax,QWORD PTR [rip+0x457d]        # 0x1400095d0
   140005053:	call   rax
   140005055:	mov    rax,QWORD PTR [rip+0x1014]        # 0x140006070
   14000505c:	mov    rbx,QWORD PTR [rax]
   14000505f:	mov    QWORD PTR [rsp+0x28],rbx
   140005064:	mov    edi,DWORD PTR [rsp+0x20]
   140005068:	cmp    BYTE PTR [rbx],0x20
   14000506b:	ja     0x1400050cb
   14000506d:	cmp    BYTE PTR [rbx],0x0
   140005070:	je     0x140005076
   140005072:	test   edi,edi
   140005074:	jne    0x1400050cb
   140005076:	mov    al,BYTE PTR [rbx]
   140005078:	dec    al
   14000507a:	cmp    al,0x1f
   14000507c:	ja     0x140005088
   14000507e:	inc    rbx
   140005081:	mov    QWORD PTR [rsp+0x28],rbx
   140005086:	jmp    0x140005076
   140005088:	movzx  r9d,si
   14000508c:	mov    r8,rbx
   14000508f:	xor    edx,edx
   140005091:	lea    rcx,[rip+0xffffffffffffaf68]        # 0x140000000
   140005098:	call   0x140004960
   14000509d:	mov    DWORD PTR [rip+0x44e9],eax        # 0x14000958c
   1400050a3:	cmp    DWORD PTR [rip+0x44e6],0x0        # 0x140009590
   1400050aa:	jne    0x1400050b4
   1400050ac:	mov    ecx,eax
   1400050ae:	call   QWORD PTR [rip+0x10bc]        # 0x140006170
   1400050b4:	cmp    DWORD PTR [rip+0x44cd],0x0        # 0x140009588
   1400050bb:	jne    0x1400050c9
   1400050bd:	call   QWORD PTR [rip+0x10bd]        # 0x140006180
   1400050c3:	mov    eax,DWORD PTR [rip+0x44c3]        # 0x14000958c
   1400050c9:	jmp    0x14000512c
   1400050cb:	cmp    BYTE PTR [rbx],0x22
   1400050ce:	jne    0x1400050dd
   1400050d0:	xor    eax,eax
   1400050d2:	test   edi,edi
   1400050d4:	sete   al
   1400050d7:	mov    edi,eax
   1400050d9:	mov    DWORD PTR [rsp+0x20],eax
   1400050dd:	movzx  ecx,BYTE PTR [rbx]
   1400050e0:	call   QWORD PTR [rip+0xfb2]        # 0x140006098
   1400050e6:	test   eax,eax
   1400050e8:	je     0x1400050f2
   1400050ea:	inc    rbx
   1400050ed:	mov    QWORD PTR [rsp+0x28],rbx
   1400050f2:	inc    rbx
   1400050f5:	mov    QWORD PTR [rsp+0x28],rbx
   1400050fa:	jmp    0x140005068
   1400050ff:	mov    DWORD PTR [rip+0x4487],eax        # 0x14000958c
   140005105:	cmp    DWORD PTR [rip+0x4484],0x0        # 0x140009590
   14000510c:	jne    0x140005117
   14000510e:	mov    ecx,eax
   140005110:	call   QWORD PTR [rip+0x1062]        # 0x140006178
   140005116:	int3   
   140005117:	cmp    DWORD PTR [rip+0x446a],0x0        # 0x140009588
   14000511e:	jne    0x14000512c
   140005120:	call   QWORD PTR [rip+0x105a]        # 0x140006180
   140005126:	mov    eax,DWORD PTR [rip+0x4460]        # 0x14000958c
   14000512c:	mov    rbx,QWORD PTR [rsp+0x40]
   140005131:	mov    rsi,QWORD PTR [rsp+0x48]
   140005136:	add    rsp,0x30
   14000513a:	pop    rdi
   14000513b:	ret    
   14000513c:	mov    eax,0x5a4d
   140005141:	cmp    WORD PTR [rip+0xffffffffffffaeb8],ax        # 0x140000000
   140005148:	je     0x14000514d
   14000514a:	xor    eax,eax
   14000514c:	ret    
   14000514d:	movsxd rcx,DWORD PTR [rip+0xffffffffffffaee8]        # 0x14000003c
   140005154:	lea    rax,[rip+0xffffffffffffaea5]        # 0x140000000
   14000515b:	add    rcx,rax
   14000515e:	cmp    DWORD PTR [rcx],0x4550
   140005164:	jne    0x14000514a
   140005166:	mov    eax,0x20b
   14000516b:	cmp    WORD PTR [rcx+0x18],ax
   14000516f:	jne    0x14000514a
   140005171:	xor    eax,eax
   140005173:	cmp    DWORD PTR [rcx+0x84],0xe
   14000517a:	jbe    0x140005185
   14000517c:	cmp    DWORD PTR [rcx+0xf8],eax
   140005182:	setne  al
   140005185:	ret    
   140005186:	jmp    QWORD PTR [rip+0xf8c]        # 0x140006118
   14000518c:	jmp    QWORD PTR [rip+0xf8e]        # 0x140006120
   140005192:	jmp    QWORD PTR [rip+0xf90]        # 0x140006128
   140005198:	jmp    QWORD PTR [rip+0xf92]        # 0x140006130
   14000519e:	jmp    QWORD PTR [rip+0xf94]        # 0x140006138
   1400051a4:	mov    rax,rsp
   1400051a7:	mov    QWORD PTR [rax+0x20],r9
   1400051ab:	mov    DWORD PTR [rax+0x18],r8d
   1400051af:	mov    QWORD PTR [rax+0x10],rdx
   1400051b3:	push   rbx
   1400051b4:	push   rsi
   1400051b5:	push   rdi
   1400051b6:	push   r14
   1400051b8:	sub    rsp,0x38
   1400051bc:	mov    r14,r9
   1400051bf:	movsxd rdi,r8d
   1400051c2:	mov    rsi,rdx
   1400051c5:	and    DWORD PTR [rax-0x38],0x0
   1400051c9:	mov    rbx,rdi
   1400051cc:	imul   rbx,rdx
   1400051d0:	add    rbx,rcx
   1400051d3:	mov    QWORD PTR [rax+0x8],rbx
   1400051d7:	dec    edi
   1400051d9:	mov    DWORD PTR [rsp+0x70],edi
   1400051dd:	js     0x1400051ef
   1400051df:	sub    rbx,rsi
   1400051e2:	mov    QWORD PTR [rsp+0x60],rbx
   1400051e7:	mov    rcx,rbx
   1400051ea:	call   r14
   1400051ed:	jmp    0x1400051d7
   1400051ef:	mov    DWORD PTR [rsp+0x20],0x1
   1400051f7:	add    rsp,0x38
   1400051fb:	pop    r14
   1400051fd:	pop    rdi
   1400051fe:	pop    rsi
   1400051ff:	pop    rbx
   140005200:	ret    
   140005201:	int3   
   140005202:	int3   
   140005203:	int3   
   140005204:	sub    rsp,0x28
   140005208:	mov    rax,QWORD PTR [rcx]
   14000520b:	cmp    DWORD PTR [rax],0xe06d7363
   140005211:	je     0x14000521a
   140005213:	xor    eax,eax
   140005215:	add    rsp,0x28
   140005219:	ret    
   14000521a:	call   0x140005500
   14000521f:	int3   
   140005220:	mov    QWORD PTR [rsp+0x10],rbx
   140005225:	mov    DWORD PTR [rsp+0x18],r8d
   14000522a:	mov    QWORD PTR [rsp+0x8],rcx
   14000522f:	push   rsi
   140005230:	push   rdi
   140005231:	push   r14
   140005233:	sub    rsp,0x40
   140005237:	mov    rsi,r9
   14000523a:	mov    edi,r8d
   14000523d:	mov    r14,rdx
   140005240:	mov    rbx,rcx
   140005243:	dec    edi
   140005245:	mov    DWORD PTR [rsp+0x70],edi
   140005249:	js     0x14000525a
   14000524b:	sub    rbx,r14
   14000524e:	mov    QWORD PTR [rsp+0x60],rbx
   140005253:	mov    rcx,rbx
   140005256:	call   rsi
   140005258:	jmp    0x140005243
   14000525a:	jmp    0x14000525c
   14000525c:	mov    rbx,QWORD PTR [rsp+0x68]
   140005261:	add    rsp,0x40
   140005265:	pop    r14
   140005267:	pop    rdi
   140005268:	pop    rsi
   140005269:	ret    
   14000526a:	int3   
   14000526b:	int3   
   14000526c:	sub    rsp,0x28
   140005270:	mov    rax,QWORD PTR [rcx]
   140005273:	cmp    DWORD PTR [rax],0xe06d7363
   140005279:	jne    0x140005297
   14000527b:	cmp    DWORD PTR [rax+0x18],0x4
   14000527f:	jne    0x140005297
   140005281:	mov    ecx,DWORD PTR [rax+0x20]
   140005284:	lea    eax,[rcx-0x19930520]
   14000528a:	cmp    eax,0x2
   14000528d:	jbe    0x14000529e
   14000528f:	cmp    ecx,0x1994000
   140005295:	je     0x14000529e
   140005297:	xor    eax,eax
   140005299:	add    rsp,0x28
   14000529d:	ret    
   14000529e:	call   0x140005500
   1400052a3:	int3   
   1400052a4:	sub    rsp,0x28
   1400052a8:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x14000526c
   1400052af:	call   0x14000550c
   1400052b4:	xor    eax,eax
   1400052b6:	add    rsp,0x28
   1400052ba:	ret    
   1400052bb:	int3   
   1400052bc:	jmp    QWORD PTR [rip+0xe86]        # 0x140006148
   1400052c2:	jmp    QWORD PTR [rip+0xe88]        # 0x140006150
   1400052c8:	jmp    QWORD PTR [rip+0xe8a]        # 0x140006158
   1400052ce:	int3   
   1400052cf:	int3   
   1400052d0:	xor    eax,eax
   1400052d2:	ret    
   1400052d3:	int3   
   1400052d4:	jmp    QWORD PTR [rip+0xe86]        # 0x140006160
   1400052da:	jmp    QWORD PTR [rip+0xe88]        # 0x140006168
   1400052e0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400052e4:	xor    r9d,r9d
   1400052e7:	mov    r10,rdx
   1400052ea:	add    r8,rcx
   1400052ed:	movzx  eax,WORD PTR [r8+0x14]
   1400052f2:	movzx  r11d,WORD PTR [r8+0x6]
   1400052f7:	add    rax,0x18
   1400052fb:	add    rax,r8
   1400052fe:	test   r11d,r11d
   140005301:	je     0x140005321
   140005303:	mov    edx,DWORD PTR [rax+0xc]
   140005306:	cmp    r10,rdx
   140005309:	jb     0x140005315
   14000530b:	mov    ecx,DWORD PTR [rax+0x8]
   14000530e:	add    ecx,edx
   140005310:	cmp    r10,rcx
   140005313:	jb     0x140005323
   140005315:	inc    r9d
   140005318:	add    rax,0x28
   14000531c:	cmp    r9d,r11d
   14000531f:	jb     0x140005303
   140005321:	xor    eax,eax
   140005323:	ret    
   140005324:	int3   
   140005325:	int3   
   140005326:	int3   
   140005327:	int3   
   140005328:	int3   
   140005329:	int3   
   14000532a:	int3   
   14000532b:	int3   
   14000532c:	int3   
   14000532d:	int3   
   14000532e:	int3   
   14000532f:	int3   
   140005330:	mov    QWORD PTR [rsp+0x8],rbx
   140005335:	push   rdi
   140005336:	sub    rsp,0x20
   14000533a:	mov    rbx,rcx
   14000533d:	lea    rdi,[rip+0xffffffffffffacbc]        # 0x140000000
   140005344:	mov    rcx,rdi
   140005347:	call   0x140005380
   14000534c:	test   eax,eax
   14000534e:	je     0x140005372
   140005350:	sub    rbx,rdi
   140005353:	mov    rdx,rbx
   140005356:	mov    rcx,rdi
   140005359:	call   0x1400052e0
   14000535e:	test   rax,rax
   140005361:	je     0x140005372
   140005363:	mov    eax,DWORD PTR [rax+0x24]
   140005366:	shr    eax,0x1f
   140005369:	not    eax
   14000536b:	and    eax,0x1
   14000536e:	jmp    0x140005372
   140005370:	xor    eax,eax
   140005372:	mov    rbx,QWORD PTR [rsp+0x30]
   140005377:	add    rsp,0x20
   14000537b:	pop    rdi
   14000537c:	ret    
   14000537d:	int3   
   14000537e:	int3   
   14000537f:	int3   
   140005380:	mov    rax,rcx
   140005383:	mov    ecx,0x5a4d
   140005388:	cmp    WORD PTR [rax],cx
   14000538b:	je     0x140005390
   14000538d:	xor    eax,eax
   14000538f:	ret    
   140005390:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005394:	add    rcx,rax
   140005397:	xor    eax,eax
   140005399:	cmp    DWORD PTR [rcx],0x4550
   14000539f:	jne    0x1400053ad
   1400053a1:	mov    edx,0x20b
   1400053a6:	cmp    WORD PTR [rcx+0x18],dx
   1400053aa:	sete   al
   1400053ad:	ret    
   1400053ae:	jmp    QWORD PTR [rip+0xdbc]        # 0x140006170
   1400053b4:	jmp    QWORD PTR [rip+0xdbe]        # 0x140006178
   1400053ba:	jmp    QWORD PTR [rip+0xdc0]        # 0x140006180
   1400053c0:	mov    QWORD PTR [rsp+0x20],rbx
   1400053c5:	push   rbp
   1400053c6:	mov    rbp,rsp
   1400053c9:	sub    rsp,0x20
   1400053cd:	mov    rax,QWORD PTR [rip+0x3c6c]        # 0x140009040
   1400053d4:	and    QWORD PTR [rbp+0x18],0x0
   1400053d9:	movabs rbx,0x2b992ddfa232
   1400053e3:	cmp    rax,rbx
   1400053e6:	jne    0x140005457
   1400053e8:	lea    rcx,[rbp+0x18]
   1400053ec:	call   QWORD PTR [rip+0xc0e]        # 0x140006000
   1400053f2:	mov    rax,QWORD PTR [rbp+0x18]
   1400053f6:	mov    QWORD PTR [rbp+0x10],rax
   1400053fa:	call   QWORD PTR [rip+0xc08]        # 0x140006008
   140005400:	mov    eax,eax
   140005402:	xor    QWORD PTR [rbp+0x10],rax
   140005406:	call   QWORD PTR [rip+0xc04]        # 0x140006010
   14000540c:	lea    rcx,[rbp+0x20]
   140005410:	mov    eax,eax
   140005412:	xor    QWORD PTR [rbp+0x10],rax
   140005416:	call   QWORD PTR [rip+0xbfc]        # 0x140006018
   14000541c:	mov    eax,DWORD PTR [rbp+0x20]
   14000541f:	shl    rax,0x20
   140005423:	lea    rcx,[rbp+0x10]
   140005427:	xor    rax,QWORD PTR [rbp+0x20]
   14000542b:	xor    rax,QWORD PTR [rbp+0x10]
   14000542f:	xor    rax,rcx
   140005432:	movabs rcx,0xffffffffffff
   14000543c:	and    rax,rcx
   14000543f:	movabs rcx,0x2b992ddfa233
   140005449:	cmp    rax,rbx
   14000544c:	cmove  rax,rcx
   140005450:	mov    QWORD PTR [rip+0x3be9],rax        # 0x140009040
   140005457:	mov    rbx,QWORD PTR [rsp+0x48]
   14000545c:	not    rax
   14000545f:	mov    QWORD PTR [rip+0x3be2],rax        # 0x140009048
   140005466:	add    rsp,0x20
   14000546a:	pop    rbp
   14000546b:	ret    
   14000546c:	xor    eax,eax
   14000546e:	ret    
   14000546f:	int3   
   140005470:	jmp    QWORD PTR [rip+0xc22]        # 0x140006098
   140005476:	int3   
   140005477:	int3   
   140005478:	mov    QWORD PTR [rsp+0x8],rbx
   14000547d:	push   rdi
   14000547e:	sub    rsp,0x20
   140005482:	lea    rbx,[rip+0x16e7]        # 0x140006b70
   140005489:	lea    rdi,[rip+0x16e0]        # 0x140006b70
   140005490:	jmp    0x1400054a0
   140005492:	mov    rax,QWORD PTR [rbx]
   140005495:	test   rax,rax
   140005498:	je     0x14000549c
   14000549a:	call   rax
   14000549c:	add    rbx,0x8
   1400054a0:	cmp    rbx,rdi
   1400054a3:	jb     0x140005492
   1400054a5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400054aa:	add    rsp,0x20
   1400054ae:	pop    rdi
   1400054af:	ret    
   1400054b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400054b5:	push   rdi
   1400054b6:	sub    rsp,0x20
   1400054ba:	lea    rbx,[rip+0x16bf]        # 0x140006b80
   1400054c1:	lea    rdi,[rip+0x16b8]        # 0x140006b80
   1400054c8:	jmp    0x1400054d8
   1400054ca:	mov    rax,QWORD PTR [rbx]
   1400054cd:	test   rax,rax
   1400054d0:	je     0x1400054d4
   1400054d2:	call   rax
   1400054d4:	add    rbx,0x8
   1400054d8:	cmp    rbx,rdi
   1400054db:	jb     0x1400054ca
   1400054dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400054e2:	add    rsp,0x20
   1400054e6:	pop    rdi
   1400054e7:	ret    
   1400054e8:	jmp    QWORD PTR [rip+0xba2]        # 0x140006090
   1400054ee:	jmp    QWORD PTR [rip+0xb94]        # 0x140006088
   1400054f4:	jmp    QWORD PTR [rip+0xbbe]        # 0x1400060b8
   1400054fa:	jmp    QWORD PTR [rip+0xb78]        # 0x140006078
   140005500:	jmp    QWORD PTR [rip+0xbba]        # 0x1400060c0
   140005506:	jmp    QWORD PTR [rip+0xb94]        # 0x1400060a0
   14000550c:	jmp    QWORD PTR [rip+0xb6e]        # 0x140006080
   140005512:	jmp    QWORD PTR [rip+0xb10]        # 0x140006028
   140005518:	jmp    QWORD PTR [rip+0xb02]        # 0x140006020
   14000551e:	jmp    QWORD PTR [rip+0xaf4]        # 0x140006018
   140005524:	jmp    QWORD PTR [rip+0xae6]        # 0x140006010
   14000552a:	jmp    QWORD PTR [rip+0xad8]        # 0x140006008
   140005530:	jmp    QWORD PTR [rip+0xaca]        # 0x140006000
   140005536:	int3   
   140005537:	int3   
   140005538:	int3   
   140005539:	int3   
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	int3   
   14000553d:	int3   
   14000553e:	int3   
   14000553f:	int3   
   140005540:	rex push rbp
   140005542:	sub    rsp,0x20
   140005546:	mov    rbp,rdx
   140005549:	mov    rdx,QWORD PTR [rbp+0x30]
   14000554d:	mov    rcx,QWORD PTR [rbp+0x38]
   140005551:	call   0x140002420
   140005556:	add    rsp,0x20
   14000555a:	pop    rbp
   14000555b:	ret    
   14000555c:	mov    QWORD PTR [rsp+0x10],rdx
   140005561:	push   rbp
   140005562:	sub    rsp,0x20
   140005566:	mov    rbp,rdx
   140005569:	mov    rcx,QWORD PTR [rbp+0x20]
   14000556d:	call   0x140004c38
   140005572:	xor    edx,edx
   140005574:	xor    ecx,ecx
   140005576:	call   0x140004d64
   14000557b:	nop
   14000557c:	int3   
   14000557d:	int3   
   14000557e:	int3   
   14000557f:	int3   
   140005580:	mov    QWORD PTR [rsp+0x10],rdx
   140005585:	push   rbp
   140005586:	sub    rsp,0x20
   14000558a:	mov    rbp,rdx
   14000558d:	mov    rdx,QWORD PTR [rbp+0x88]
   140005594:	mov    rcx,QWORD PTR [rbp+0x70]
   140005598:	call   0x140002ca0
   14000559d:	xor    edx,edx
   14000559f:	xor    ecx,ecx
   1400055a1:	call   0x140004d64
   1400055a6:	nop
   1400055a7:	int3   
   1400055a8:	int3   
   1400055a9:	int3   
   1400055aa:	int3   
   1400055ab:	int3   
   1400055ac:	int3   
   1400055ad:	int3   
   1400055ae:	int3   
   1400055af:	int3   
   1400055b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400055b5:	push   rbp
   1400055b6:	sub    rsp,0x20
   1400055ba:	mov    rbp,rdx
   1400055bd:	xor    edx,edx
   1400055bf:	xor    ecx,ecx
   1400055c1:	call   0x140004d64
   1400055c6:	nop
   1400055c7:	int3   
   1400055c8:	int3   
   1400055c9:	int3   
   1400055ca:	int3   
   1400055cb:	int3   
   1400055cc:	int3   
   1400055cd:	int3   
   1400055ce:	int3   
   1400055cf:	int3   
   1400055d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400055d5:	push   rbp
   1400055d6:	sub    rsp,0x20
   1400055da:	mov    rbp,rdx
   1400055dd:	xor    edx,edx
   1400055df:	xor    ecx,ecx
   1400055e1:	call   0x140004d64
   1400055e6:	nop
   1400055e7:	int3   
   1400055e8:	int3   
   1400055e9:	int3   
   1400055ea:	int3   
   1400055eb:	int3   
   1400055ec:	int3   
   1400055ed:	int3   
   1400055ee:	int3   
   1400055ef:	int3   
   1400055f0:	rex push rbp
   1400055f2:	sub    rsp,0x20
   1400055f6:	mov    rbp,rdx
   1400055f9:	mov    rdx,QWORD PTR [rbp+0x48]
   1400055fd:	mov    rcx,QWORD PTR [rbp+0x58]
   140005601:	call   0x140002420
   140005606:	add    rsp,0x20
   14000560a:	pop    rbp
   14000560b:	ret    
   14000560c:	int3   
   14000560d:	int3   
   14000560e:	int3   
   14000560f:	int3   
   140005610:	rex push rbp
   140005612:	sub    rsp,0x20
   140005616:	mov    rbp,rdx
   140005619:	mov    rdx,QWORD PTR [rbp+0x48]
   14000561d:	mov    rcx,QWORD PTR [rbp+0x58]
   140005621:	call   0x140002420
   140005626:	add    rsp,0x20
   14000562a:	pop    rbp
   14000562b:	ret    
   14000562c:	int3   
   14000562d:	int3   
   14000562e:	int3   
   14000562f:	int3   
   140005630:	rex push rbp
   140005632:	sub    rsp,0x20
   140005636:	mov    rbp,rdx
   140005639:	mov    rdx,QWORD PTR [rbp+0x48]
   14000563d:	mov    rcx,QWORD PTR [rbp+0x58]
   140005641:	call   0x140002420
   140005646:	add    rsp,0x20
   14000564a:	pop    rbp
   14000564b:	ret    
   14000564c:	int3   
   14000564d:	int3   
   14000564e:	int3   
   14000564f:	int3   
   140005650:	mov    rcx,QWORD PTR [rdx+0x40]
   140005657:	jmp    0x1400022e0
   14000565c:	mov    rcx,QWORD PTR [rdx+0x40]
   140005663:	add    rcx,0x10
   140005667:	jmp    0x1400023a0
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	mov    rcx,QWORD PTR [rdx+0x40]
   140005677:	jmp    0x1400022a0
   14000567c:	int3   
   14000567d:	int3   
   14000567e:	int3   
   14000567f:	int3   
   140005680:	mov    rcx,QWORD PTR [rdx+0x40]
   140005687:	jmp    0x1400022e0
   14000568c:	mov    rcx,QWORD PTR [rdx+0x40]
   140005693:	add    rcx,0x10
   140005697:	jmp    0x1400023a0
   14000569c:	int3   
   14000569d:	int3   
   14000569e:	int3   
   14000569f:	int3   
   1400056a0:	mov    rcx,QWORD PTR [rdx+0x40]
   1400056a7:	jmp    0x1400022e0
   1400056ac:	mov    rcx,QWORD PTR [rdx+0x40]
   1400056b3:	add    rcx,0x10
   1400056b7:	jmp    0x1400023a0
   1400056bc:	int3   
   1400056bd:	int3   
   1400056be:	int3   
   1400056bf:	int3   
   1400056c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400056c5:	push   rbp
   1400056c6:	sub    rsp,0x20
   1400056ca:	mov    rbp,rdx
   1400056cd:	mov    rcx,QWORD PTR [rbp+0x58]
   1400056d1:	call   0x140004c38
   1400056d6:	xor    edx,edx
   1400056d8:	xor    ecx,ecx
   1400056da:	call   0x140004d64
   1400056df:	nop
   1400056e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400056e5:	push   rbp
   1400056e6:	sub    rsp,0x30
   1400056ea:	mov    rbp,rdx
   1400056ed:	mov    rcx,QWORD PTR [rbp+0x50]
   1400056f1:	call   0x140003cb0
   1400056f6:	xor    edx,edx
   1400056f8:	xor    ecx,ecx
   1400056fa:	call   0x140004d64
   1400056ff:	nop
   140005700:	mov    QWORD PTR [rsp+0x10],rdx
   140005705:	push   rbp
   140005706:	sub    rsp,0x20
   14000570a:	mov    rbp,rdx
   14000570d:	mov    rcx,QWORD PTR [rbp+0x68]
   140005711:	mov    QWORD PTR [rbp+0x68],rcx
   140005715:	xor    eax,eax
   140005717:	inc    rcx
   14000571a:	je     0x140005732
   14000571c:	cmp    rcx,0xffffffffffffffff
   140005720:	ja     0x14000572c
   140005722:	call   0x140004c32
   140005727:	test   rax,rax
   14000572a:	jne    0x140005732
   14000572c:	call   QWORD PTR [rip+0x926]        # 0x140006058
   140005732:	mov    QWORD PTR [rbp+0x78],rax
   140005736:	lea    rax,[rip+0xffffffffffffd4d9]        # 0x140002c16
   14000573d:	add    rsp,0x20
   140005741:	pop    rbp
   140005742:	ret    
   140005743:	int3   
   140005744:	mov    QWORD PTR [rsp+0x10],rdx
   140005749:	push   rbx
   14000574a:	push   rbp
   14000574b:	sub    rsp,0x28
   14000574f:	mov    rbp,rdx
   140005752:	mov    rbx,QWORD PTR [rbp+0x60]
   140005756:	cmp    QWORD PTR [rbx+0x18],0x10
   14000575b:	jb     0x140005765
   14000575d:	mov    rcx,QWORD PTR [rbx]
   140005760:	call   0x140004c38
   140005765:	mov    QWORD PTR [rbx+0x18],0xf
   14000576d:	mov    QWORD PTR [rbx+0x10],0x0
   140005775:	mov    BYTE PTR [rbx],0x0
   140005778:	xor    edx,edx
   14000577a:	xor    ecx,ecx
   14000577c:	call   0x140004d64
   140005781:	nop
   140005782:	int3   
   140005783:	int3   
   140005784:	int3   
   140005785:	int3   
   140005786:	int3   
   140005787:	int3   
   140005788:	int3   
   140005789:	int3   
   14000578a:	int3   
   14000578b:	int3   
   14000578c:	int3   
   14000578d:	int3   
   14000578e:	int3   
   14000578f:	int3   
   140005790:	mov    QWORD PTR [rsp+0x10],rdx
   140005795:	push   rbp
   140005796:	sub    rsp,0x30
   14000579a:	mov    rbp,rdx
   14000579d:	mov    rcx,QWORD PTR [rbp+0x98]
   1400057a4:	call   0x140004c38
   1400057a9:	xor    edx,edx
   1400057ab:	xor    ecx,ecx
   1400057ad:	call   0x140004d64
   1400057b2:	nop
   1400057b3:	mov    QWORD PTR [rsp+0x10],rdx
   1400057b8:	push   rbp
   1400057b9:	sub    rsp,0x30
   1400057bd:	mov    rbp,rdx
   1400057c0:	xor    edx,edx
   1400057c2:	xor    ecx,ecx
   1400057c4:	call   0x140004d64
   1400057c9:	nop
   1400057ca:	int3   
   1400057cb:	int3   
   1400057cc:	int3   
   1400057cd:	int3   
   1400057ce:	int3   
   1400057cf:	int3   
   1400057d0:	lea    rcx,[rdx+0x90]
   1400057d7:	jmp    0x140004bb4
   1400057dc:	lea    rcx,[rdx+0x20]
   1400057e3:	jmp    0x1400022a0
   1400057e8:	lea    rcx,[rdx+0x40]
   1400057ef:	jmp    0x1400022a0
   1400057f4:	rex push rbp
   1400057f6:	sub    rsp,0x20
   1400057fa:	mov    rbp,rdx
   1400057fd:	mov    ecx,0x8
   140005802:	call   0x14000518c
   140005807:	nop
   140005808:	add    rsp,0x20
   14000580c:	pop    rbp
   14000580d:	ret    
   14000580e:	int3   
   14000580f:	rex push rbp
   140005811:	sub    rsp,0x20
   140005815:	mov    rbp,rdx
   140005818:	mov    rax,QWORD PTR [rcx]
   14000581b:	mov    rdx,rcx
   14000581e:	mov    ecx,DWORD PTR [rax]
   140005820:	call   0x1400052bc
   140005825:	nop
   140005826:	add    rsp,0x20
   14000582a:	pop    rbp
   14000582b:	ret    
   14000582c:	int3   
   14000582d:	rex push rbp
   14000582f:	sub    rsp,0x20
   140005833:	mov    rbp,rdx
   140005836:	cmp    DWORD PTR [rbp+0x20],0x0
   14000583a:	jne    0x140005852
   14000583c:	mov    r9,QWORD PTR [rbp+0x78]
   140005840:	mov    r8d,DWORD PTR [rbp+0x70]
   140005844:	mov    rdx,QWORD PTR [rbp+0x68]
   140005848:	mov    rcx,QWORD PTR [rbp+0x60]
   14000584c:	call   0x140005220
   140005851:	nop
   140005852:	add    rsp,0x20
   140005856:	pop    rbp
   140005857:	ret    
   140005858:	int3   
   140005859:	rex push rbp
   14000585b:	sub    rsp,0x20
   14000585f:	mov    rbp,rdx
   140005862:	mov    QWORD PTR [rbp+0x38],rcx
   140005866:	mov    QWORD PTR [rbp+0x28],rcx
   14000586a:	mov    rax,QWORD PTR [rbp+0x28]
   14000586e:	mov    rcx,QWORD PTR [rax]
   140005871:	mov    QWORD PTR [rbp+0x30],rcx
   140005875:	mov    rax,QWORD PTR [rbp+0x30]
   140005879:	cmp    DWORD PTR [rax],0xe06d7363
   14000587f:	je     0x14000588d
   140005881:	mov    DWORD PTR [rbp+0x20],0x0
   140005888:	mov    eax,DWORD PTR [rbp+0x20]
   14000588b:	jmp    0x140005893
   14000588d:	call   0x140005500
   140005892:	nop
   140005893:	add    rsp,0x20
   140005897:	pop    rbp
   140005898:	ret    
   140005899:	int3   
   14000589a:	int3   
   14000589b:	int3   
   14000589c:	int3   
   14000589d:	int3   
   14000589e:	int3   
   14000589f:	int3   
   1400058a0:	rex push rbp
   1400058a2:	sub    rsp,0x20
   1400058a6:	mov    rbp,rdx
   1400058a9:	mov    rax,QWORD PTR [rcx]
   1400058ac:	xor    ecx,ecx
   1400058ae:	cmp    DWORD PTR [rax],0xc0000005
   1400058b4:	sete   cl
   1400058b7:	mov    eax,ecx
   1400058b9:	add    rsp,0x20
   1400058bd:	pop    rbp
   1400058be:	ret    
   1400058bf:	int3   
   1400058c0:	lea    rax,[rip+0xc79]        # 0x140006540
   1400058c7:	mov    QWORD PTR [rip+0x3732],rax        # 0x140009000
   1400058ce:	ret    
   1400058cf:	int3   
   1400058d0:	lea    rax,[rip+0xc69]        # 0x140006540
   1400058d7:	mov    QWORD PTR [rip+0x372a],rax        # 0x140009008
   1400058de:	ret    
   1400058df:	int3   
   1400058e0:	lea    rax,[rip+0xc59]        # 0x140006540
   1400058e7:	mov    QWORD PTR [rip+0x3722],rax        # 0x140009010
   1400058ee:	ret    

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	push   rsi
   140006001:	(bad)  
   140006002:	add    BYTE PTR [rax],al
   140006004:	add    BYTE PTR [rax],al
   140006006:	add    BYTE PTR [rax],al
   140006008:	rex (bad) 
   14000600a:	add    BYTE PTR [rax],al
   14000600c:	add    BYTE PTR [rax],al
   14000600e:	add    BYTE PTR [rax],al
   140006010:	sub    al,BYTE PTR [rdx+0x0]
   140006016:	add    BYTE PTR [rax],al
   140006018:	adc    BYTE PTR [rdx+0x0],al
   14000601e:	add    BYTE PTR [rax],al
   140006020:	add    BYTE PTR [rdx+0x0],al
   140006026:	add    BYTE PTR [rax],al
   140006028:	lock add DWORD PTR [rax],0x0
   14000602f:	add    BYTE PTR [rsi+rdi*2+0x0],al
	...
   14000603e:	add    BYTE PTR [rax],al
   140006040:	data16 jg 0x140006043
   140006043:	add    BYTE PTR [rax],al
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    BYTE PTR [rdi+rdi*2+0x0],al
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    BYTE PTR [rdx],ah
   140006051:	jg     0x140006053
   140006053:	add    BYTE PTR [rax],al
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    BYTE PTR [rax],cl
   140006059:	jg     0x14000605b
   14000605b:	add    BYTE PTR [rax],al
   14000605d:	add    BYTE PTR [rax],al
   14000605f:	add    BYTE PTR [rsi+0x7f],al
	...
   14000606d:	add    BYTE PTR [rax],al
   14000606f:	add    BYTE PTR [rdx-0x7f],ah
   140006072:	add    BYTE PTR [rax],al
   140006074:	add    BYTE PTR [rax],al
   140006076:	add    BYTE PTR [rax],al
   140006078:	push   rsi
   140006079:	add    DWORD PTR [rax],0x0
   14000607f:	add    ah,cl
   140006081:	add    DWORD PTR [rax],0x0
   140006087:	add    BYTE PTR [rcx+rax*4],dh
   14000608a:	add    BYTE PTR [rax],al
   14000608c:	add    BYTE PTR [rax],al
   14000608e:	add    BYTE PTR [rax],al
   140006090:	(bad)  
   140006091:	add    DWORD PTR [rax],0x0
   140006097:	add    BYTE PTR [rax],dl
   140006099:	add    DWORD PTR [rax],0x0
   14000609f:	add    BYTE PTR [rsi+0x81],dl
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    BYTE PTR [rcx+rax*4+0x0],ch
   1400060ab:	add    BYTE PTR [rax],al
   1400060ad:	add    BYTE PTR [rax],al
   1400060af:	add    BYTE PTR [rsi-0x7f],dh
   1400060b2:	add    BYTE PTR [rax],al
   1400060b4:	add    BYTE PTR [rax],al
   1400060b6:	add    BYTE PTR [rax],al
   1400060b8:	add    QWORD PTR [rax],0x0
   1400060bf:	add    BYTE PTR [rdx+0x81],al
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    BYTE PTR [rdi+rdi*2+0x0],dh
   1400060ce:	add    BYTE PTR [rax],al
   1400060d0:	sar    BYTE PTR [rdi+0x0],0x0
   1400060d4:	add    BYTE PTR [rax],al
   1400060d6:	add    BYTE PTR [rax],al
   1400060d8:	sar    BYTE PTR [rdi+0x0],cl
   1400060db:	add    BYTE PTR [rax],al
   1400060dd:	add    BYTE PTR [rax],al
   1400060df:	add    dl,ah
   1400060e1:	jg     0x1400060e3
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    ah,ch
   1400060e9:	jg     0x1400060eb
   1400060eb:	add    BYTE PTR [rax],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    dh,dh
   1400060f1:	jg     0x1400060f3
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rax+rax*4],cl
   1400060fa:	add    BYTE PTR [rax],al
   1400060fc:	add    BYTE PTR [rax],al
   1400060fe:	add    BYTE PTR [rax],al
   140006100:	and    al,BYTE PTR [rax+0x0]
   140006106:	add    BYTE PTR [rax],al
   140006108:	sub    al,0x80
   14000610a:	add    BYTE PTR [rax],al
   14000610c:	add    BYTE PTR [rax],al
   14000610e:	add    BYTE PTR [rax],al
   140006110:	add    BYTE PTR ss:[rax],0x0
   140006114:	add    BYTE PTR [rax],al
   140006116:	add    BYTE PTR [rax],al
   140006118:	rex.WRX add BYTE PTR [rax],0x0
   14000611c:	add    BYTE PTR [rax],al
   14000611e:	add    BYTE PTR [rax],al
   140006120:	push   rsi
   140006121:	add    BYTE PTR [rax],0x0
   140006124:	add    BYTE PTR [rax],al
   140006126:	add    BYTE PTR [rax],al
   140006128:	(bad)  
   140006129:	add    BYTE PTR [rax],0x0
   14000612c:	add    BYTE PTR [rax],al
   14000612e:	add    BYTE PTR [rax],al
   140006130:	outs   dx,BYTE PTR ds:[rsi]
   140006131:	add    BYTE PTR [rax],0x0
   140006134:	add    BYTE PTR [rax],al
   140006136:	add    BYTE PTR [rax],al
   140006138:	jl     0x1400060ba
   14000613a:	add    BYTE PTR [rax],al
   14000613c:	add    BYTE PTR [rax],al
   14000613e:	add    BYTE PTR [rax],al
   140006140:	xchg   esp,eax
   140006141:	add    BYTE PTR [rax],0x0
   140006144:	add    BYTE PTR [rax],al
   140006146:	add    BYTE PTR [rax],al
   140006148:	sahf   
   140006149:	add    BYTE PTR [rax],0x0
   14000614c:	add    BYTE PTR [rax],al
   14000614e:	add    BYTE PTR [rax],al
   140006150:	lods   al,BYTE PTR ds:[rsi]
   140006151:	add    BYTE PTR [rax],0x0
   140006154:	add    BYTE PTR [rax],al
   140006156:	add    BYTE PTR [rax],al
   140006158:	mov    BYTE PTR [rax+0x0],0x0
   14000615f:	add    ah,dl
   140006161:	add    BYTE PTR [rax],0x0
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	in     al,0x80
   14000616a:	add    BYTE PTR [rax],al
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	test   BYTE PTR [rax+0x0],0x0
   140006177:	add    dh,bh
   140006179:	add    BYTE PTR [rax],0x0
   14000617c:	add    BYTE PTR [rax],al
   14000617e:	add    BYTE PTR [rax],al
   140006180:	(bad)  
   140006181:	add    DWORD PTR [rax],0x0
	...
   14000618f:	add    dh,ch
   140006191:	jle    0x140006193
   140006193:	add    BYTE PTR [rax],al
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    al,ah
   140006199:	jle    0x14000619b
   14000619b:	add    BYTE PTR [rax],al
   14000619d:	add    BYTE PTR [rax],al
   14000619f:	add    dh,cl
   1400061a1:	jle    0x1400061a3
   1400061a3:	add    BYTE PTR [rax],al
   1400061a5:	add    BYTE PTR [rax],al
   1400061a7:	add    BYTE PTR [rdx+0x7e],bh
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    BYTE PTR [rax+0x7e],ch
	...
   1400061bd:	add    BYTE PTR [rax],al
   1400061bf:	add    BYTE PTR [rsi+rdi*2+0x0],dl
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    BYTE PTR [rsi],dh
   1400061c9:	jle    0x1400061cb
   1400061cb:	add    BYTE PTR [rax],al
   1400061cd:	add    BYTE PTR [rax],al
   1400061cf:	add    BYTE PTR [rsi],dl
   1400061d1:	jle    0x1400061d3
   1400061d3:	add    BYTE PTR [rax],al
   1400061d5:	add    BYTE PTR [rax],al
   1400061d7:	add    dh,dh
   1400061d9:	jge    0x1400061db
   1400061db:	add    BYTE PTR [rax],al
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    al,ah
   1400061e1:	jge    0x1400061e3
   1400061e3:	add    BYTE PTR [rax],al
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    dh,al
   1400061e9:	jge    0x1400061eb
   1400061eb:	add    BYTE PTR [rax],al
   1400061ed:	add    BYTE PTR [rax],al
   1400061ef:	add    BYTE PTR [rbp+rdi*2+0x0],dl
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    al,ch
   1400061f9:	jl     0x1400061fb
   1400061fb:	add    BYTE PTR [rax],al
   1400061fd:	add    BYTE PTR [rax],al
   1400061ff:	add    dh,al
   140006201:	jl     0x140006203
   140006203:	add    BYTE PTR [rax],al
   140006205:	add    BYTE PTR [rax],al
   140006207:	add    BYTE PTR [rax+0x7c],ah
   14000620d:	add    BYTE PTR [rax],al
   14000620f:	add    BYTE PTR [rax+0x7c],cl
	...
   140006226:	add    BYTE PTR [rax],al
   140006228:	ror    BYTE PTR [rsi+0x0],1
   14000622b:	rex add DWORD PTR [rax],eax
   14000622e:	add    BYTE PTR [rax],al
   140006230:	add    BYTE PTR [rax],dl
   140006232:	add    BYTE PTR [rax+0x1],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    BYTE PTR [rax],dl
   140006239:	adc    BYTE PTR [rax],al
   14000623b:	rex add DWORD PTR [rax],eax
   14000623e:	add    BYTE PTR [rax],al
   140006240:	and    BYTE PTR [rax],dl
   140006242:	add    BYTE PTR [rax+0x1],al
	...
   140006259:	rex.WRX add BYTE PTR [rax+0x1],r8b
   14000625d:	add    BYTE PTR [rax],al
   14000625f:	add    BYTE PTR [rax+0x4c],al
   140006262:	add    BYTE PTR [rax+0x1],al
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    BYTE PTR [rdx+rdx*2+0x14000],ah
	...
   140006282:	add    BYTE PTR [rax],al
   140006284:	data16 adc BYTE PTR [rcx+0x58],al
   14000628b:	add    BYTE PTR [rdx],al
   14000628d:	add    BYTE PTR [rax],al
   14000628f:	add    BYTE PTR [rax+0x0],al
   140006292:	add    BYTE PTR [rax],al
   140006294:	nop
   140006295:	push   0x56900000
   14000629a:	add    BYTE PTR [rax],al
   14000629c:	add    BYTE PTR [rax],al
   14000629e:	add    BYTE PTR [rax],al
   1400062a0:	data16 adc BYTE PTR [rcx+0x58],al
   1400062a7:	add    BYTE PTR [rax+rax*1],cl
   1400062aa:	add    BYTE PTR [rax],al
   1400062ac:	adc    al,0x0
   1400062ae:	add    BYTE PTR [rax],al
   1400062b0:	shr    BYTE PTR [rax+0x0],1
   1400062b3:	add    al,dl
   1400062b5:	push   rsi
   1400062b6:	add    BYTE PTR [rax],al
   1400062b8:	and    al,BYTE PTR [rip+0x41993]        # 0x140047c51
   1400062be:	add    BYTE PTR [rax],al
   1400062c0:	(bad)  
   1400062c1:	ins    BYTE PTR es:[rdi],dx
   1400062c2:	add    BYTE PTR [rax],al
   1400062c4:	add    al,BYTE PTR [rax]
   1400062c6:	add    BYTE PTR [rax],al
   1400062c8:	sub    BYTE PTR [rax+rax*1+0x0],0x8
   1400062cd:	add    BYTE PTR [rax],al
   1400062cf:	add    al,dl
   1400062d1:	ins    BYTE PTR es:[rdi],dx
   1400062d2:	add    BYTE PTR [rax],al
   1400062d4:	and    BYTE PTR [rax],al
   1400062d6:	add    BYTE PTR [rax],al
   1400062d8:	add    BYTE PTR [rax],al
   1400062da:	add    BYTE PTR [rax],al
   1400062dc:	add    DWORD PTR [rax],eax
   1400062de:	add    BYTE PTR [rax],al
   1400062e0:	and    al,BYTE PTR [rip+0x21993]        # 0x140027c79
   1400062e6:	add    BYTE PTR [rax],al
   1400062e8:	jo     0x140006358
   1400062ea:	add    BYTE PTR [rax],al
   1400062ec:	add    DWORD PTR [rax],eax
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	sub    BYTE PTR [rsi+0x0],0x0
   1400062f4:	add    eax,0xa8000000
   1400062f9:	outs   dx,BYTE PTR ds:[rsi]
   1400062fa:	add    BYTE PTR [rax],al
   1400062fc:	and    BYTE PTR [rax],al
   1400062fe:	add    BYTE PTR [rax],al
   140006300:	add    BYTE PTR [rax],al
   140006302:	add    BYTE PTR [rax],al
   140006304:	add    DWORD PTR [rax],eax
   140006306:	add    BYTE PTR [rax],al
   140006308:	and    al,BYTE PTR [rip+0x21993]        # 0x140027ca1
   14000630e:	add    BYTE PTR [rax],al
   140006310:	(bad)  
   140006311:	outs   dx,DWORD PTR ds:[rsi]
	...
   14000631a:	add    BYTE PTR [rax],al
   14000631c:	add    al,0x0
   14000631e:	add    BYTE PTR [rax],al
   140006320:	jo     0x140006391
   140006322:	add    BYTE PTR [rax],al
   140006324:	and    BYTE PTR [rax],al
   140006326:	add    BYTE PTR [rax],al
   140006328:	add    BYTE PTR [rax],al
   14000632a:	add    BYTE PTR [rax],al
   14000632c:	add    DWORD PTR [rax],eax
   14000632e:	add    BYTE PTR [rax],al
   140006330:	and    al,BYTE PTR [rip+0x21993]        # 0x140027cc9
   140006336:	add    BYTE PTR [rax],al
   140006338:	(bad)  
   140006339:	outs   dx,DWORD PTR ds:[rsi]
   14000633a:	add    BYTE PTR [rax],al
   14000633c:	add    DWORD PTR [rax],eax
   14000633e:	add    BYTE PTR [rax],al
   140006340:	(bad)  
   140006341:	outs   dx,DWORD PTR ds:[rsi]
   140006342:	add    BYTE PTR [rax],al
   140006344:	add    eax,0x0
   140006349:	jo     0x14000634b
   14000634b:	add    BYTE PTR [rax],dh
   14000634d:	add    BYTE PTR [rax],al
   14000634f:	add    BYTE PTR [rax],al
   140006351:	add    BYTE PTR [rax],al
   140006353:	add    BYTE PTR [rcx],al
   140006355:	add    BYTE PTR [rax],al
   140006357:	add    BYTE PTR [rdx],ah
   140006359:	add    eax,0x41993
   14000635e:	add    BYTE PTR [rax],al
   140006360:	clc    
   140006361:	jo     0x140006363
   140006363:	add    BYTE PTR [rdx],al
   140006365:	add    BYTE PTR [rax],al
   140006367:	add    BYTE PTR [rax],bl
   140006369:	jno    0x14000636b
   14000636b:	add    BYTE PTR [rcx],cl
   14000636d:	add    BYTE PTR [rax],al
   14000636f:	add    BYTE PTR [rax+0x71],dh
   140006372:	add    BYTE PTR [rax],al
   140006374:	cmp    BYTE PTR [rax],al
   140006376:	add    BYTE PTR [rax],al
   140006378:	add    BYTE PTR [rax],al
   14000637a:	add    BYTE PTR [rax],al
   14000637c:	add    DWORD PTR [rax],eax
   14000637e:	add    BYTE PTR [rax],al
   140006380:	and    al,BYTE PTR [rip+0x21993]        # 0x140027d19
   140006386:	add    BYTE PTR [rax],al
   140006388:	add    al,0x72
	...
   140006392:	add    BYTE PTR [rax],al
   140006394:	add    al,0x0
   140006396:	add    BYTE PTR [rax],al
   140006398:	sbb    BYTE PTR [rdx+0x0],dh
   14000639b:	add    BYTE PTR [rax],ah
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    BYTE PTR [rax],al
   1400063a1:	add    BYTE PTR [rax],al
   1400063a3:	add    BYTE PTR [rcx],al
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    BYTE PTR [rdx],ah
   1400063a9:	add    eax,0x21993
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	(bad)  
   1400063b1:	jb     0x1400063b3
	...
   1400063bb:	add    BYTE PTR [rax+rax*1],al
   1400063be:	add    BYTE PTR [rax],al
   1400063c0:	jo     0x140006434
   1400063c2:	add    BYTE PTR [rax],al
   1400063c4:	and    BYTE PTR [rax],al
   1400063c6:	add    BYTE PTR [rax],al
   1400063c8:	add    BYTE PTR [rax],al
   1400063ca:	add    BYTE PTR [rax],al
   1400063cc:	add    DWORD PTR [rax],eax
   1400063ce:	add    BYTE PTR [rax],al
   1400063d0:	and    al,BYTE PTR [rip+0x31993]        # 0x140037d69
   1400063d6:	add    BYTE PTR [rax],al
   1400063d8:	mov    esp,0x72
   1400063dd:	add    BYTE PTR [rax],al
   1400063df:	add    BYTE PTR [rax],al
   1400063e1:	add    BYTE PTR [rax],al
   1400063e3:	add    BYTE PTR [rdi],al
   1400063e5:	add    BYTE PTR [rax],al
   1400063e7:	add    al,bl
   1400063e9:	jb     0x1400063eb
   1400063eb:	add    BYTE PTR [rax+0x0],al
   1400063f1:	add    BYTE PTR [rax],al
   1400063f3:	add    BYTE PTR [rcx],al
   1400063f5:	add    BYTE PTR [rax],al
   1400063f7:	add    BYTE PTR [rdx],ah
   1400063f9:	add    eax,0x11993
   1400063fe:	add    BYTE PTR [rax],al
   140006400:	mov    WORD PTR [rbx+0x0],?
	...
   14000640b:	add    BYTE PTR [rbx],al
   14000640d:	add    BYTE PTR [rax],al
   14000640f:	add    BYTE PTR [rax+0x20000073],bl
   140006415:	add    BYTE PTR [rax],al
   140006417:	add    BYTE PTR [rax],al
   140006419:	add    BYTE PTR [rax],al
   14000641b:	add    BYTE PTR [rcx],al
   14000641d:	add    BYTE PTR [rax],al
   14000641f:	add    BYTE PTR [rdx],ah
   140006421:	add    eax,0x21993
   140006426:	add    BYTE PTR [rax],al
   140006428:	sbb    al,0x74
   14000642a:	add    BYTE PTR [rax],al
   14000642c:	add    DWORD PTR [rax],eax
   14000642e:	add    BYTE PTR [rax],al
   140006430:	sub    al,0x74
   140006432:	add    BYTE PTR [rax],al
   140006434:	add    eax,0x58000000
   140006439:	je     0x14000643b
   14000643b:	add    BYTE PTR [rax],ah
   14000643d:	add    BYTE PTR [rax],al
   14000643f:	add    BYTE PTR [rax],al
   140006441:	add    BYTE PTR [rax],al
   140006443:	add    BYTE PTR [rcx],al
   140006445:	add    BYTE PTR [rax],al
   140006447:	add    BYTE PTR [rdx],ah
   140006449:	add    eax,0x21993
   14000644e:	add    BYTE PTR [rax],al
   140006450:	mov    eax,0x1000074
   140006455:	add    BYTE PTR [rax],al
   140006457:	add    al,cl
   140006459:	je     0x14000645b
   14000645b:	add    BYTE PTR [rip+0xfffffffff0000000],al        # 0x130006461
   140006461:	je     0x140006463
   140006463:	add    BYTE PTR [rax],ah
   140006465:	add    BYTE PTR [rax],al
   140006467:	add    BYTE PTR [rax],al
   140006469:	add    BYTE PTR [rax],al
   14000646b:	add    BYTE PTR [rcx],al
   14000646d:	add    BYTE PTR [rax],al
   14000646f:	add    BYTE PTR [rdx],ah
   140006471:	add    eax,0x21993
   140006476:	add    BYTE PTR [rax],al
   140006478:	push   rsp
   140006479:	jne    0x14000647b
   14000647b:	add    BYTE PTR [rcx],al
   14000647d:	add    BYTE PTR [rax],al
   14000647f:	add    BYTE PTR [rbp+rsi*2+0x0],ah
   140006483:	add    BYTE PTR [rip+0xffffffff90000000],al        # 0xd0006489
   140006489:	jne    0x14000648b
   14000648b:	add    BYTE PTR [rax],ah
   14000648d:	add    BYTE PTR [rax],al
   14000648f:	add    BYTE PTR [rax],al
   140006491:	add    BYTE PTR [rax],al
   140006493:	add    BYTE PTR [rcx],al
   140006495:	add    BYTE PTR [rax],al
   140006497:	add    BYTE PTR [rdx],ah
   140006499:	add    eax,0x31993
   14000649e:	add    BYTE PTR [rax],al
   1400064a0:	in     al,0x75
   1400064a2:	add    BYTE PTR [rax],al
   1400064a4:	add    DWORD PTR [rax],eax
   1400064a6:	add    BYTE PTR [rax],al
   1400064a8:	cld    
   1400064a9:	jne    0x1400064ab
   1400064ab:	add    BYTE PTR [rsi],al
   1400064ad:	add    BYTE PTR [rax],al
   1400064af:	add    BYTE PTR [rax],ch
   1400064b1:	jbe    0x1400064b3
   1400064b3:	add    BYTE PTR [rax],ch
   1400064b5:	add    BYTE PTR [rax],al
   1400064b7:	add    BYTE PTR [rax],al
   1400064b9:	add    BYTE PTR [rax],al
   1400064bb:	add    BYTE PTR [rcx],al
   1400064bd:	add    BYTE PTR [rax],al
   1400064bf:	add    BYTE PTR [rdx],ah
   1400064c1:	add    eax,0x11993
   1400064c6:	add    BYTE PTR [rax],al
   1400064c8:	xor    BYTE PTR [rsi+0x0],0x0
	...
   1400064d4:	add    eax,DWORD PTR [rax]
   1400064d6:	add    BYTE PTR [rax],al
   1400064d8:	mov    BYTE PTR [rsi+0x0],dh
   1400064db:	add    BYTE PTR [rax],ah
   1400064dd:	add    BYTE PTR [rax],al
   1400064df:	add    BYTE PTR [rax],al
   1400064e1:	add    BYTE PTR [rax],al
   1400064e3:	add    BYTE PTR [rcx],al
   1400064e5:	add    BYTE PTR [rax],al
   1400064e7:	add    BYTE PTR [rdx],ah
   1400064e9:	add    eax,0x11993
   1400064ee:	add    BYTE PTR [rax],al
   1400064f0:	mov    eax,0x76
   1400064f5:	add    BYTE PTR [rax],al
   1400064f7:	add    BYTE PTR [rax],al
   1400064f9:	add    BYTE PTR [rax],al
   1400064fb:	add    BYTE PTR [rbx],al
   1400064fd:	add    BYTE PTR [rax],al
   1400064ff:	add    al,al
   140006501:	jbe    0x140006503
   140006503:	add    BYTE PTR [rax],ah
   140006505:	add    BYTE PTR [rax],al
   140006507:	add    BYTE PTR [rax],al
   140006509:	add    BYTE PTR [rax],al
   14000650b:	add    BYTE PTR [rcx],al
   14000650d:	add    BYTE PTR [rax],al
   14000650f:	add    BYTE PTR [rdx],ah
   140006511:	add    eax,0x11993
   140006516:	add    BYTE PTR [rax],al
   140006518:	lock jbe 0x14000651b
	...
   140006523:	add    BYTE PTR [rbx],al
   140006525:	add    BYTE PTR [rax],al
   140006527:	add    al,bh
   140006529:	jbe    0x14000652b
   14000652b:	add    BYTE PTR [rax],ah
   14000652d:	add    BYTE PTR [rax],al
   14000652f:	add    BYTE PTR [rax],al
   140006531:	add    BYTE PTR [rax],al
   140006533:	add    BYTE PTR [rcx],al
   140006535:	add    BYTE PTR [rax],al
   140006537:	add    al,ch
   140006539:	push   0x14000
   14000653e:	add    BYTE PTR [rax],al
   140006540:	loopne 0x140006569
   140006542:	add    BYTE PTR [rax+0x1],al
   140006545:	add    BYTE PTR [rax],al
   140006547:	add    BYTE PTR [rsp+rcx*2],ch
   14000654a:	add    BYTE PTR [rax+0x1],al
   14000654d:	add    BYTE PTR [rax],al
   14000654f:	add    BYTE PTR [rsp+rcx*2],ch
   140006552:	add    BYTE PTR [rax+0x1],al
   140006555:	add    BYTE PTR [rax],al
   140006557:	add    al,dl
   140006559:	(bad)  
   14000655a:	add    BYTE PTR [rax+0x1],al
   14000655d:	add    BYTE PTR [rax],al
   14000655f:	add    BYTE PTR [rax],al
   140006561:	add    BYTE PTR [rax+0x1],al
   140006565:	add    BYTE PTR [rax],al
   140006567:	add    BYTE PTR [rax],ah
   140006569:	add    BYTE PTR [rax+0x1],al
   14000656d:	add    BYTE PTR [rax],al
   14000656f:	add    BYTE PTR [rax+0x69],ah
   140006572:	add    BYTE PTR [rax+0x1],al
   140006575:	add    BYTE PTR [rax],al
   140006577:	add    BYTE PTR [rax+0x27],dl
   14000657a:	add    BYTE PTR [rax+0x1],al
   14000657d:	add    BYTE PTR [rax],al
   14000657f:	add    BYTE PTR [rax],dh
   140006581:	rex.RXB add BYTE PTR [r8+0x1],r8b
   140006585:	add    BYTE PTR [rax],al
   140006587:	add    al,dh
   140006589:	add    BYTE PTR [r8+0x1],r8b
   14000658d:	add    BYTE PTR [rax],al
   14000658f:	add    al,dl
   140006591:	(bad)  
   140006592:	add    BYTE PTR [rax+0x1],al
   140006595:	add    BYTE PTR [rax],al
   140006597:	add    BYTE PTR [rax],al
   140006599:	add    BYTE PTR [rax+0x1],al
   14000659d:	add    BYTE PTR [rax],al
   14000659f:	add    BYTE PTR [rax],ah
   1400065a1:	add    BYTE PTR [rax+0x1],al
   1400065a5:	add    BYTE PTR [rax],al
   1400065a7:	add    BYTE PTR [rdi+0x65],ah
   1400065aa:	outs   dx,BYTE PTR ds:[rsi]
   1400065ab:	gs jb  0x140006617
   1400065ae:	movsxd eax,DWORD PTR [rax]
   1400065b0:	jne    0x140006620
   1400065b2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400065b6:	outs   dx,BYTE PTR ds:[rsi]
   1400065b7:	and    BYTE PTR [rbp+0x72],ah
   1400065ba:	jb     0x14000662b
   1400065bc:	jb     0x1400065be
   1400065be:	add    BYTE PTR [rax],al
   1400065c0:	loopne 0x14000662b
   1400065c2:	add    BYTE PTR [rax+0x1],al
   1400065c5:	add    BYTE PTR [rax],al
   1400065c7:	add    BYTE PTR [rax+0x1400027],al
   1400065cd:	add    BYTE PTR [rax],al
   1400065cf:	add    BYTE PTR [rax+0x47],al
   1400065d2:	add    BYTE PTR [rax+0x1],al
   1400065d5:	add    BYTE PTR [rax],al
   1400065d7:	add    BYTE PTR [rax+0x46],ah
   1400065da:	add    BYTE PTR [rax+0x1],al
   1400065dd:	add    BYTE PTR [rax],al
   1400065df:	add    al,dl
   1400065e1:	(bad)  
   1400065e2:	add    BYTE PTR [rax+0x1],al
   1400065e5:	add    BYTE PTR [rax],al
   1400065e7:	add    BYTE PTR [rax],al
   1400065e9:	add    BYTE PTR [rax+0x1],al
   1400065ed:	add    BYTE PTR [rax],al
   1400065ef:	add    BYTE PTR [rax],ah
   1400065f1:	add    BYTE PTR [rax+0x1],al
   1400065f5:	add    BYTE PTR [rax],al
   1400065f7:	add    BYTE PTR [rcx+0x6f],ch
   1400065fa:	jae    0x140006670
   1400065fc:	jb     0x140006663
   1400065fe:	(bad)  
   1400065ff:	ins    DWORD PTR es:[rdi],dx
	...
   140006608:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000660f:	ins    DWORD PTR es:[rdi],dx
   140006610:	and    BYTE PTR [rbx+0x74],dh
   140006613:	jb     0x14000667a
   140006615:	(bad)  
   140006616:	ins    DWORD PTR es:[rdi],dx
   140006617:	and    BYTE PTR [rbp+0x72],ah
   14000661a:	jb     0x14000668b
   14000661c:	jb     0x14000661e
   14000661e:	add    BYTE PTR [rax],al
   140006620:	push   0x140006a
   140006625:	add    BYTE PTR [rax],al
   140006627:	add    BYTE PTR [rax+0x1400027],dh
   14000662d:	add    BYTE PTR [rax],al
   14000662f:	add    BYTE PTR [rax+0x47],dl
   140006632:	add    BYTE PTR [rax+0x1],al
   140006635:	add    BYTE PTR [rax],al
   140006637:	add    BYTE PTR [rax+0x1400046],dh
   14000663d:	add    BYTE PTR [rax],al
   14000663f:	add    BYTE PTR [rax+0x140003f],dl
   140006645:	add    BYTE PTR [rax],al
   140006647:	add    BYTE PTR [rax],al
   140006649:	add    BYTE PTR [rax+0x1],al
   14000664d:	add    BYTE PTR [rax],al
   14000664f:	add    BYTE PTR [rax],ah
   140006651:	add    BYTE PTR [rax+0x1],al
   140006655:	add    BYTE PTR [rax],al
   140006657:	add    BYTE PTR [rbx+0x79],dh
   14000665a:	jae    0x1400066d0
   14000665c:	gs ins DWORD PTR es:[rdi],dx
	...
   140006666:	add    BYTE PTR [rax],al
   140006668:	sub    eax,0x6f007200
   14000666d:	add    BYTE PTR [rdi+0x0],ch
   140006670:	je     0x140006672
   140006672:	add    BYTE PTR [rax],al
   140006674:	add    BYTE PTR [rax],al
   140006676:	add    BYTE PTR [rax],al
   140006678:	(bad)  
   140006679:	add    BYTE PTR [rbx+0x0],ah
   14000667c:	je     0x14000667e
   14000667e:	imul   eax,DWORD PTR [rax],0x610076
   140006684:	je     0x140006686
   140006686:	imul   eax,DWORD PTR [rax],0x6e006f
   14000668c:	add    BYTE PTR [rax],al
   14000668e:	add    BYTE PTR [rax],al
   140006690:	je     0x140006692
   140006692:	ins    DWORD PTR es:[rdi],dx
   140006693:	add    BYTE PTR [rdi+0x0],dh
   140006696:	(bad)  
   140006697:	add    BYTE PTR [rbx+0x0],ah
   14000669a:	je     0x14000669c
   14000669c:	jae    0x14000669e
   14000669e:	add    BYTE PTR gs:[rax+rax*1+0x75],dh
   1400066a3:	add    BYTE PTR [rax+0x0],dh
	...
   1400066ae:	add    BYTE PTR [rax],al
   1400066b0:	add    BYTE PTR [r10+0x0],r14b
   1400066b4:	jb     0x1400066b6
   1400066b6:	outs   dx,DWORD PTR ds:[rsi]
   1400066b7:	add    BYTE PTR [rdx+0x0],dh
   1400066ba:	and    BYTE PTR [rax],al
   1400066bc:	imul   eax,DWORD PTR [rax],0x69006e
   1400066c2:	je     0x1400066c4
   1400066c4:	imul   eax,DWORD PTR [rax],0x6c0061
   1400066ca:	imul   eax,DWORD PTR [rax],0x69007a
   1400066d0:	outs   dx,BYTE PTR ds:[rsi]
   1400066d1:	add    BYTE PTR [rdi+0x0],ah
   1400066d4:	and    BYTE PTR [rax],al
   1400066d6:	(bad)  
   1400066d7:	add    BYTE PTR [rax+0x0],dh
   1400066da:	jo     0x1400066dc
   1400066dc:	ins    BYTE PTR es:[rdi],dx
   1400066dd:	add    BYTE PTR [rcx+0x0],ch
   1400066e0:	movsxd eax,DWORD PTR [rax]
   1400066e2:	(bad)  
   1400066e3:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400066e7:	add    BYTE PTR [rdi+0x0],ch
   1400066ea:	outs   dx,BYTE PTR ds:[rsi]
   1400066eb:	add    BYTE PTR [rsi],ch
   1400066ed:	add    BYTE PTR [rdx],cl
	...
   1400066f7:	add    BYTE PTR [rcx+0x0],al
   1400066fa:	movsxd eax,DWORD PTR [rax]
   1400066fc:	je     0x1400066fe
   1400066fe:	imul   eax,DWORD PTR [rax],0x610076
   140006704:	je     0x140006706
   140006706:	imul   eax,DWORD PTR [rax],0x6e006f
   14000670c:	and    BYTE PTR [rax],al
   14000670e:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140006712:	add    BYTE PTR fs:[rbp+0x0],dh
   140006716:	ins    BYTE PTR es:[rdi],dx
   140006717:	add    BYTE PTR [rbp+0x0],ah
   14000671a:	and    BYTE PTR [rax],al
   14000671c:	add    BYTE PTR [r10+0x0],r14b
   140006720:	jb     0x140006722
   140006722:	outs   dx,DWORD PTR ds:[rsi]
   140006723:	add    BYTE PTR [rdx+0x0],dh
   140006726:	add    BYTE PTR [rax],al
   140006728:	jae    0x14000679e
   14000672a:	jb     0x140006795
   14000672c:	outs   dx,BYTE PTR ds:[rsi]
   14000672d:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   140006732:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140006736:	add    BYTE PTR [ecx+0x6e],ch
   14000673a:	jbe    0x14000679d
   14000673c:	ins    BYTE PTR es:[rdi],dx
   14000673d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   140006745:	and    BYTE PTR [eax+0x6f],dh
   140006749:	jae    0x1400067b4
   14000674b:	je     0x1400067b6
   14000674d:	outs   dx,DWORD PTR ds:[rsi]
   14000674e:	outs   dx,BYTE PTR ds:[rsi]
   14000674f:	add    BYTE PTR [rsi+0x65],dh
   140006752:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140006756:	cmp    al,0x54
   140006758:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14000675d:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140006761:	add    BYTE PTR [eax],al
   140006764:	add    BYTE PTR [rax],al
   140006766:	add    BYTE PTR [rax],al
   140006768:	ins    BYTE PTR es:[rdi],dx
   140006769:	imul   esi,DWORD PTR [rbx+0x74],0x203e543c
   140006770:	je     0x1400067e1
   140006772:	outs   dx,DWORD PTR ds:[rsi]
   140006773:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   140006777:	add    BYTE PTR [eax],al
   14000677a:	add    BYTE PTR [rax],al
   14000677c:	add    BYTE PTR [rax],al
   14000677e:	sbb    BYTE PTR [rdi+0x63],0x6f
   140006782:	ins    DWORD PTR es:[rdi],dx
   140006783:	(bad)  
   140006784:	ins    DWORD PTR es:[rdi],dx
   140006785:	(bad)  
   140006786:	je     0x1400067f0
   140006788:	ja     0x1400067f9
   14000678a:	jb     0x1400067f7
   14000678c:	jae    0x1400067bd
   14000678e:	(bad)  
   14000678f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   140006793:	(bad)  
   140006794:	je     0x1400067ff
   140006796:	outs   dx,DWORD PTR ds:[rsi]
   140006797:	outs   dx,BYTE PTR ds:[rsi]
   140006798:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x65]
   14000679c:	outs   dx,BYTE PTR ds:[rsi]
   14000679d:	je     0x1400067ce
   14000679f:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   1400067a4:	(bad)  
   1400067a5:	je     0x140006810
   1400067a7:	outs   dx,DWORD PTR ds:[rsi]
   1400067a8:	outs   dx,BYTE PTR ds:[rsi]
   1400067a9:	rex.B jo 0x14000681c
   1400067ac:	ins    BYTE PTR es:[rdi],dx
   1400067ad:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400067b4:	add    BYTE PTR [rax],al
   1400067b6:	add    BYTE PTR [rax],al
   1400067b8:	cmp    DWORD PTR [rsi],ebp
   1400067ba:	xor    ch,BYTE PTR [rsi]
   1400067bc:	xor    BYTE PTR [rsi],ch
   1400067be:	xor    eax,0x34363831
   1400067c3:	xor    DWORD PTR [rax],eax
   1400067c5:	add    BYTE PTR [rax],al
   1400067c7:	add    BYTE PTR [rdx+0x61],cl
   1400067ca:	outs   dx,BYTE PTR ds:[rsi]
   1400067cb:	and    BYTE PTR [rcx],dh
   1400067cd:	cmp    DWORD PTR [rax],esp
   1400067cf:	xor    dh,BYTE PTR [rax]
   1400067d1:	xor    DWORD PTR [rdi],esi
   1400067d3:	add    BYTE PTR [rax],al
   1400067d5:	add    BYTE PTR [rax],al
   1400067d7:	add    BYTE PTR [rdx+0x69],ah
   1400067da:	outs   dx,BYTE PTR ds:[rsi]
   1400067db:	pop    rsp
   1400067dc:	ja     0x140006847
   1400067de:	outs   dx,BYTE PTR ds:[rsi]
   1400067df:	ss xor al,0x5c
   1400067e2:	(bad)  
   1400067e3:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   1400067e7:	(bad)  
   1400067e8:	je     0x14000684f
   1400067ea:	pop    rdi
   1400067eb:	ins    DWORD PTR es:[rdi],dx
   1400067ec:	(bad)  
   1400067ed:	je     0x14000685b
   1400067ef:	(bad)  
   1400067f0:	(bad)  
   1400067f1:	cs gs js 0x14000685a
   1400067f5:	add    BYTE PTR [rax],al
   1400067f7:	add    eax,esi
   1400067f9:	push   0x0
   1400067fb:	rex add DWORD PTR [rax],eax
   1400067fe:	add    BYTE PTR [rax],al
   140006800:	nop
   140006801:	rex.WRB add BYTE PTR [r8+0x1],r8b
   140006805:	add    BYTE PTR [rax],al
   140006807:	add    BYTE PTR [rax],al
   140006809:	add    BYTE PTR [rax],al
   14000680b:	add    BYTE PTR [rcx],al
   14000680d:	add    BYTE PTR [rax],al
   14000680f:	add    BYTE PTR [rdx],al
   140006811:	add    BYTE PTR [rax],al
   140006813:	add    BYTE PTR [rbx],al
   140006815:	add    BYTE PTR [rax],al
   140006817:	add    BYTE PTR [rax+rax*1],al
   14000681a:	add    BYTE PTR [rax],al
   14000681c:	add    BYTE PTR [rax],al
   14000681e:	add    BYTE PTR [rax],al
   140006820:	jo     0x140006822
	...
   140006876:	add    BYTE PTR [rax],al
   140006878:	rex xchg eax,eax
   14000687a:	add    BYTE PTR [rax+0x1],al
	...
   14000688d:	add    BYTE PTR [rax],al
   14000688f:	add    BYTE PTR [rdx+0x53],dl
   140006892:	rex.R push rbx
   140006894:	(bad)  
   140006895:	in     ax,dx
   140006897:	jne    0x1400068ba
   140006899:	jg     0x140006827
   14000689b:	rex.RX stos DWORD PTR es:[rdi],eax
   14000689d:	ret    0xb4af
   1400068a0:	int    0x31
   1400068a2:	fisub  WORD PTR [rdx+0x1]
   1400068a8:	cmp    bl,BYTE PTR [rbp+r13*2+0x61]
   1400068ad:	je     0x14000691b
   1400068af:	(bad)  
   1400068b0:	(bad)  
   1400068b1:	pop    rsp
   1400068b2:	(bad)  
   1400068b3:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   1400068ba:	xor    al,0x5c
   1400068bc:	(bad)  
   1400068bd:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   1400068c1:	(bad)  
   1400068c2:	je     0x140006929
   1400068c4:	pop    rdi
   1400068c5:	ins    DWORD PTR es:[rdi],dx
   1400068c6:	(bad)  
   1400068c7:	je     0x140006935
   1400068c9:	(bad)  
   1400068ca:	(bad)  
   1400068cb:	cs jo  0x140006932
   1400068ce:	(bad)  
   1400068cf:	add    BYTE PTR [rax],al
   1400068d1:	add    BYTE PTR [rax],al
   1400068d3:	add    BYTE PTR [rdi],dl
   1400068d5:	add    BYTE PTR [rax],al
   1400068d7:	add    BYTE PTR [rax+rax*1],dl
	...
   1400068e6:	add    BYTE PTR [rax],al
   1400068e8:	add    DWORD PTR [rax],eax
	...
   1400068f2:	add    BYTE PTR [rax],al
   1400068f4:	push   rax
   1400068f5:	nop
   1400068f6:	add    BYTE PTR [rax],al
   1400068f8:	adc    BYTE PTR [rcx+0x0],ch
   1400068fb:	add    al,ch
   1400068fd:	push   0x0
	...
   140006916:	add    BYTE PTR [rax],al
   140006918:	add    DWORD PTR [rax],eax
   14000691a:	add    BYTE PTR [rax],al
   14000691c:	sub    BYTE PTR [rcx+0x0],ch
	...
   140006927:	add    BYTE PTR [rax],bh
   140006929:	imul   eax,DWORD PTR [rax],0x0
	...
   140006937:	add    BYTE PTR [rax-0x70],dl
	...
   140006942:	add    BYTE PTR [rax],al
   140006944:	(bad)  
   140006945:	(bad)  
   140006946:	(bad)  
   140006947:	inc    DWORD PTR [rax]
   140006949:	add    BYTE PTR [rax],al
   14000694b:	add    BYTE PTR [rax+0x0],al
   14000694e:	add    BYTE PTR [rax],al
   140006950:	adc    BYTE PTR [rcx+0x0],ch
	...
   14000695f:	add    BYTE PTR [rcx],al
	...
   140006969:	add    BYTE PTR [rax],al
   14000696b:	add    BYTE PTR [rax-0x77ffff70],al
   140006971:	imul   eax,DWORD PTR [rax],0x696000
	...
   14000698f:	add    BYTE PTR [rdx],al
   140006991:	add    BYTE PTR [rax],al
   140006993:	add    BYTE PTR [rax+0x69],ah
   140006999:	add    BYTE PTR [rax],al
   14000699b:	add    BYTE PTR [rax],al
   14000699d:	add    BYTE PTR [rax],al
   14000699f:	add    BYTE PTR [rax+0x38000069],bh
   1400069a5:	imul   eax,DWORD PTR [rax],0x0
	...
   1400069b7:	add    BYTE PTR [rax+0x1000090],al
   1400069bd:	add    BYTE PTR [rax],al
   1400069bf:	add    BYTE PTR [rax],al
   1400069c1:	add    BYTE PTR [rax],al
   1400069c3:	add    bh,bh
   1400069c5:	(bad)  
   1400069c6:	(bad)  
   1400069c7:	inc    DWORD PTR [rax]
   1400069c9:	add    BYTE PTR [rax],al
   1400069cb:	add    BYTE PTR [rax+0x0],al
   1400069ce:	add    BYTE PTR [rax],al
   1400069d0:	mov    BYTE PTR [rcx+0x0],ch
	...
   1400069df:	add    BYTE PTR [rcx],al
	...
   1400069e9:	add    BYTE PTR [rax],al
   1400069eb:	add    BYTE PTR [rax+0x8000090],bh
   1400069f1:	push   0x0
   1400069f3:	add    al,ah
   1400069f5:	imul   eax,DWORD PTR [rax],0x0
	...
   140006a0f:	add    BYTE PTR [rbx],al
   140006a11:	add    BYTE PTR [rax],al
   140006a13:	add    BYTE PTR [rax],ah
   140006a15:	push   0x0
	...
   140006a1f:	add    BYTE PTR [rax+0x6a],al
   140006a22:	add    BYTE PTR [rax],al
   140006a24:	mov    eax,0x38000069
   140006a29:	imul   eax,DWORD PTR [rax],0x0
	...
   140006a3f:	add    BYTE PTR [rax+0x2000090],bh
   140006a45:	add    BYTE PTR [rax],al
   140006a47:	add    BYTE PTR [rax],al
   140006a49:	add    BYTE PTR [rax],al
   140006a4b:	add    bh,bh
   140006a4d:	(bad)  
   140006a4e:	(bad)  
   140006a4f:	inc    DWORD PTR [rax]
   140006a51:	add    BYTE PTR [rax],al
   140006a53:	add    BYTE PTR [rax+0x0],al
   140006a56:	add    BYTE PTR [rax],al
   140006a58:	or     BYTE PTR [rdx+0x0],ch
	...
   140006a67:	add    BYTE PTR [rcx],al
	...
   140006a71:	add    BYTE PTR [rax],al
   140006a73:	add    al,dh
   140006a75:	nop
   140006a76:	add    BYTE PTR [rax],al
   140006a78:	nop
   140006a79:	push   0x0
   140006a7b:	add    BYTE PTR [rax+0x6a],ch
	...
   140006a96:	add    BYTE PTR [rax],al
   140006a98:	add    eax,DWORD PTR [rax]
   140006a9a:	add    BYTE PTR [rax],al
   140006a9c:	test   al,0x6a
	...
   140006aa6:	add    BYTE PTR [rax],al
   140006aa8:	enter  0x6a,0x0
   140006aac:	mov    eax,0x38000069
   140006ab1:	imul   eax,DWORD PTR [rax],0x0
	...
   140006ac7:	add    al,dh
   140006ac9:	nop
   140006aca:	add    BYTE PTR [rax],al
   140006acc:	add    al,BYTE PTR [rax]
   140006ace:	add    BYTE PTR [rax],al
   140006ad0:	add    BYTE PTR [rax],al
   140006ad2:	add    BYTE PTR [rax],al
   140006ad4:	(bad)  
   140006ad5:	(bad)  
   140006ad6:	(bad)  
   140006ad7:	inc    DWORD PTR [rax]
   140006ad9:	add    BYTE PTR [rax],al
   140006adb:	add    BYTE PTR [rax+0x0],al
   140006ade:	add    BYTE PTR [rax],al
   140006ae0:	nop
   140006ae1:	push   0x0
	...
   140006aef:	add    BYTE PTR [rcx],al
	...
   140006af9:	add    BYTE PTR [rax],al
   140006afb:	add    BYTE PTR [rax],ch
   140006afd:	xchg   ecx,eax
   140006afe:	add    BYTE PTR [rax],al
   140006b00:	sbb    BYTE PTR [rbx+0x0],ch
   140006b03:	add    al,dh
   140006b05:	push   0x0
	...
   140006b1f:	add    BYTE PTR [rcx],al
   140006b21:	add    BYTE PTR [rax],al
   140006b23:	add    BYTE PTR [rax],dh
   140006b25:	imul   eax,DWORD PTR [rax],0x0
	...
   140006b30:	rex imul eax,DWORD PTR [rax],0x0
	...
   140006b40:	sub    BYTE PTR [rcx+0x0],dl
   140006b46:	add    BYTE PTR [rax],al
   140006b48:	add    BYTE PTR [rax],al
   140006b4a:	add    BYTE PTR [rax],al
   140006b4c:	(bad)  
   140006b4d:	(bad)  
   140006b4e:	(bad)  
   140006b4f:	inc    DWORD PTR [rax]
   140006b51:	add    BYTE PTR [rax],al
   140006b53:	add    BYTE PTR [rax+0x0],al
   140006b56:	add    BYTE PTR [rax],al
   140006b58:	sbb    BYTE PTR [rbx+0x0],ch
	...
   140006b8f:	add    BYTE PTR [rcx],al
   140006b91:	(bad)  
   140006b92:	add    al,BYTE PTR [rax]
   140006b94:	(bad)  
   140006b95:	push   rdx
   140006b96:	add    dh,BYTE PTR [rax]
   140006b98:	add    DWORD PTR [rsi],eax
   140006b9a:	add    al,BYTE PTR [rax]
   140006b9c:	(bad)  
   140006b9d:	xor    al,BYTE PTR [rdx]
   140006b9f:	xor    BYTE PTR [rcx],al
   140006ba1:	add    al,0x1
   140006ba3:	add    BYTE PTR [rdx+rax*2],al
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	add    DWORD PTR [rcx+rax*1],eax
   140006bab:	add    BYTE PTR [rdx+rax*2],al
   140006bae:	add    BYTE PTR [rax],al
   140006bb0:	add    DWORD PTR [rsi],eax
   140006bb2:	add    al,BYTE PTR [rax]
   140006bb4:	(bad)  
   140006bb5:	xor    al,BYTE PTR [rdx]
   140006bb7:	xor    BYTE PTR [rcx],al
   140006bb9:	(bad)  
   140006bba:	add    al,BYTE PTR [rax]
   140006bbc:	(bad)  
   140006bbd:	xor    al,BYTE PTR [rdx]
   140006bbf:	xor    BYTE PTR [rcx],al
   140006bc1:	(bad)  
   140006bc2:	add    al,BYTE PTR [rax]
   140006bc4:	(bad)  
   140006bc5:	xor    al,BYTE PTR [rdx]
   140006bc7:	xor    BYTE PTR [rcx],al
   140006bc9:	adc    al,0x8
   140006bcb:	add    BYTE PTR [rsp+riz*2],dl
   140006bce:	or     BYTE PTR [rax],al
   140006bd0:	adc    al,0x54
   140006bd2:	(bad)  
   140006bd3:	add    BYTE PTR [rsp+rsi*1],dl
   140006bd6:	(bad)  
   140006bd7:	add    BYTE PTR [rdx+rsi*1],dl
   140006bda:	adc    BYTE PTR [rax+0x1],dh
   140006bdd:	clts   
   140006bdf:	add    BYTE PTR [rdi],cl
   140006be1:	fs (bad) 
   140006be3:	add    BYTE PTR [rdi],cl
   140006be5:	xor    al,0x6
   140006be7:	add    BYTE PTR [rdi],cl
   140006be9:	xor    cl,BYTE PTR [rbx]
   140006beb:	jo     0x140006bee
   140006bed:	add    al,0x1
   140006bef:	add    BYTE PTR [rdx+rax*2],al
   140006bf2:	add    BYTE PTR [rax],al
   140006bf4:	add    DWORD PTR [rdx],ecx
   140006bf6:	add    al,0x0
   140006bf8:	or     dh,BYTE PTR [rsi+rax*1]
   140006bfb:	add    BYTE PTR [rdx],cl
   140006bfd:	xor    al,BYTE PTR [rsi]
   140006bff:	jo     0x140006c02
   140006c01:	clts   
   140006c03:	add    BYTE PTR [rdi],cl
   140006c05:	fs (bad) 
   140006c07:	add    BYTE PTR [rdi],cl
   140006c09:	xor    al,0x6
   140006c0b:	add    BYTE PTR [rdi],cl
   140006c0d:	xor    cl,BYTE PTR [rbx]
   140006c0f:	jo     0x140006c12
   140006c11:	(bad)  
   140006c12:	add    al,BYTE PTR [rax]
   140006c14:	(bad)  
   140006c15:	xor    al,BYTE PTR [rdx]
   140006c17:	xor    BYTE PTR [rcx],ah
   140006c19:	or     al,BYTE PTR [rax+rax*1]
   140006c1c:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140006c20:	add    eax,0x40000664
   140006c25:	add    BYTE PTR ds:[rax],al
   140006c28:	movsxd edi,DWORD PTR [rsi]
   140006c2a:	add    BYTE PTR [rax],al
   140006c2c:	adc    BYTE PTR [rax+rax*1+0x0],ch
   140006c30:	and    DWORD PTR [rax],eax
   140006c32:	add    al,0x0
   140006c34:	add    BYTE PTR [rdi+rax*1+0x0],dh
   140006c38:	add    BYTE PTR [rsi+rax*1+0x0],ah
   140006c3c:	rex
   140006c3d:	add    BYTE PTR ds:[rax],al
   140006c40:	movsxd edi,DWORD PTR [rsi]
   140006c42:	add    BYTE PTR [rax],al
   140006c44:	adc    BYTE PTR [rax+rax*1+0x0],ch
   140006c48:	sbb    DWORD PTR [rcx],esp
   140006c4a:	add    eax,0x14621800
   140006c4f:	loopne 0x140006c63
   140006c51:	jo     0x140006c64
   140006c53:	(bad)  
   140006c54:	adc    BYTE PTR [rax],dh
   140006c56:	add    BYTE PTR [rax],al
   140006c58:	push   0x4d
   140006c5a:	add    BYTE PTR [rax],al
   140006c5c:	mov    eax,0xff000062
   140006c61:	(bad)  
   140006c62:	(bad)  
   140006c63:	inc    DWORD PTR [rax]
   140006c65:	add    BYTE PTR [rax],al
   140006c67:	add    bh,bh
   140006c69:	(bad)  
   140006c6a:	(bad)  
   140006c6b:	inc    DWORD PTR [rax]
   140006c6d:	add    BYTE PTR [rax],al
   140006c6f:	add    BYTE PTR [rcx],al
   140006c71:	add    BYTE PTR [rax],al
   140006c73:	add    BYTE PTR [rax],al
   140006c75:	add    BYTE PTR [rax],al
   140006c77:	add    BYTE PTR [rcx],al
	...
   140006c85:	add    BYTE PTR [rax],al
   140006c87:	add    BYTE PTR [rbx],al
   140006c89:	add    BYTE PTR [rax],al
   140006c8b:	add    BYTE PTR [rcx],al
   140006c8d:	add    BYTE PTR [rax],al
   140006c8f:	add    BYTE PTR [rax+0x200006c],ch
   140006c95:	add    BYTE PTR [rax],al
   140006c97:	add    BYTE PTR [rdx],al
   140006c99:	add    BYTE PTR [rax],al
   140006c9b:	add    BYTE PTR [rbx],al
   140006c9d:	add    BYTE PTR [rax],al
   140006c9f:	add    BYTE PTR [rcx],al
   140006ca1:	add    BYTE PTR [rax],al
   140006ca3:	add    BYTE PTR [rsp+rbp*2+0x400000],bh
	...
   140006cb2:	add    BYTE PTR [rax],al
   140006cb4:	add    BYTE PTR [rdi+0x0],dl
   140006cb7:	add    BYTE PTR [rax],bh
   140006cb9:	add    BYTE PTR [rax],al
   140006cbb:	add    BYTE PTR [rax+0x0],al
	...
   140006cc6:	add    BYTE PTR [rax],al
   140006cc8:	rex.R push rdi
   140006cca:	add    BYTE PTR [rax],al
   140006ccc:	rex.W add BYTE PTR [rax],al
   140006ccf:	add    BYTE PTR [rax-0xffffd5],al
   140006cd5:	(bad)  
   140006cd6:	(bad)  
   140006cd7:	(bad)  
   140006cd8:	out    dx,al
   140006cd9:	sub    eax,DWORD PTR [rax]
   140006cdb:	add    BYTE PTR [rax],al
   140006cdd:	add    BYTE PTR [rax],al
   140006cdf:	add    BYTE PTR [rsp+rbp*1],dl
   140006ce2:	add    BYTE PTR [rax],al
   140006ce4:	(bad)  
   140006ce5:	(bad)  
   140006ce6:	(bad)  
   140006ce7:	inc    DWORD PTR [rax]
   140006ce9:	push   rdi
   140006cea:	add    BYTE PTR [rax],al
   140006cec:	add    BYTE PTR [rax],al
   140006cee:	add    BYTE PTR [rax],al
   140006cf0:	or     eax,0x1000057
   140006cf5:	add    BYTE PTR [rax],al
   140006cf7:	add    BYTE PTR [rip+0x2000057],dl        # 0x142006d54
   140006cfd:	add    BYTE PTR [rax],al
   140006cff:	add    BYTE PTR [rsi],dh
   140006d01:	push   rdi
   140006d02:	add    BYTE PTR [rax],al
   140006d04:	add    BYTE PTR [rax],al
   140006d06:	add    BYTE PTR [rax],al
   140006d08:	push   rdx
   140006d09:	push   rdi
   140006d0a:	add    BYTE PTR [rax],al
   140006d0c:	add    eax,DWORD PTR [rax]
   140006d0e:	add    BYTE PTR [rax],al
   140006d10:	sbb    DWORD PTR [rdx],ecx
   140006d12:	add    al,BYTE PTR [rax]
   140006d14:	or     dh,BYTE PTR [rdx]
   140006d16:	(bad)  
   140006d17:	push   rax
   140006d18:	push   0x4d
   140006d1a:	add    BYTE PTR [rax],al
   140006d1c:	mov    eax,0x19000062
   140006d21:	or     eax,DWORD PTR [rbx]
   140006d23:	add    BYTE PTR [rbx],cl
   140006d25:	rex.X (bad) 
   140006d27:	push   rax
   140006d28:	(bad)  
   140006d29:	xor    BYTE PTR [rax],al
   140006d2b:	add    BYTE PTR [rdx+0x4d],ch
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	mov    eax,0x1000062
   140006d35:	sub    eax,0x542d0006
   140006d3a:	(bad)  
   140006d3b:	add    BYTE PTR [rdx],cl
   140006d3d:	xor    al,0x9
   140006d3f:	add    BYTE PTR [rdx],cl
   140006d41:	xor    al,BYTE PTR [rsi]
   140006d43:	jo     0x140006d66
   140006d45:	add    eax,0x64050002
   140006d4a:	(bad)  
   140006d4b:	add    BYTE PTR [rax],dh
   140006d4d:	add    BYTE PTR cs:[rax],al
   140006d50:	jp     0x140006d80
   140006d52:	add    BYTE PTR [rax],al
   140006d54:	xor    al,0x6d
   140006d56:	add    BYTE PTR [rax],al
   140006d58:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x124056d60
   140006d5e:	or     BYTE PTR [rax],al
   140006d60:	jp     0x140006d90
   140006d62:	add    BYTE PTR [rax],al
   140006d64:	nop
   140006d65:	add    BYTE PTR cs:[rax],al
   140006d68:	rex.R ins DWORD PTR es:[rdi],dx
   140006d6a:	add    BYTE PTR [rax],al
   140006d6c:	and    DWORD PTR [rax],eax
   140006d6e:	add    BYTE PTR [rax],al
   140006d70:	jp     0x140006da0
   140006d72:	add    BYTE PTR [rax],al
   140006d74:	nop
   140006d75:	add    BYTE PTR cs:[rax],al
   140006d78:	rex.R ins DWORD PTR es:[rdi],dx
   140006d7a:	add    BYTE PTR [rax],al
   140006d7c:	and    DWORD PTR [rax],eax
   140006d7e:	add    BYTE PTR [rax],al
   140006d80:	xor    BYTE PTR [rsi],ch
   140006d82:	add    BYTE PTR [rax],al
   140006d84:	jp     0x140006db4
   140006d86:	add    BYTE PTR [rax],al
   140006d88:	xor    al,0x6d
   140006d8a:	add    BYTE PTR [rax],al
   140006d8c:	add    DWORD PTR [rdx],ecx
   140006d8e:	add    al,0x0
   140006d90:	or     dh,BYTE PTR [rdi+rax*1]
   140006d93:	add    BYTE PTR [rdx],cl
   140006d95:	xor    al,BYTE PTR [rsi]
   140006d97:	jo     0x140006dba
   140006d99:	add    eax,0x64050002
   140006d9e:	(bad)  
   140006d9f:	add    BYTE PTR [rax+0x35],dh
   140006da2:	add    BYTE PTR [rax],al
   140006da4:	mov    esi,DWORD PTR [rip+0x6d8c0000]        # 0x1ad8c6daa
   140006daa:	add    BYTE PTR [rax],al
   140006dac:	and    DWORD PTR [rax],eax
   140006dae:	add    BYTE PTR [rax],al
   140006db0:	jo     0x140006de7
   140006db2:	add    BYTE PTR [rax],al
   140006db4:	mov    esi,DWORD PTR [rip+0x6d8c0000]        # 0x1ad8c6dba
   140006dba:	add    BYTE PTR [rax],al
   140006dbc:	add    DWORD PTR [rcx+rax*1],eax
   140006dbf:	add    BYTE PTR [rdx+rax*2],al
   140006dc2:	add    BYTE PTR [rax],al
   140006dc4:	add    DWORD PTR [rcx+rax*1],eax
   140006dc7:	add    BYTE PTR [rdx+rax*2],al
   140006dca:	add    BYTE PTR [rax],al
   140006dcc:	add    DWORD PTR [rsi],eax
   140006dce:	add    al,BYTE PTR [rax]
   140006dd0:	(bad)  
   140006dd1:	push   rdx
   140006dd2:	add    dh,BYTE PTR [rax]
   140006dd4:	add    DWORD PTR [rsi],eax
   140006dd6:	add    al,BYTE PTR [rax]
   140006dd8:	(bad)  
   140006dd9:	xor    al,BYTE PTR [rdx]
   140006ddb:	xor    BYTE PTR [rcx],al
   140006ddd:	or     al,BYTE PTR [rax+rax*1]
   140006de0:	or     dh,BYTE PTR [rax+rcx*1]
   140006de3:	add    BYTE PTR [rdx],cl
   140006de5:	push   rdx
   140006de6:	(bad)  
   140006de7:	jo     0x140006dea
   140006de9:	(bad)  
   140006dea:	add    al,BYTE PTR [rax]
   140006dec:	(bad)  
   140006ded:	xor    al,BYTE PTR [rdx]
   140006def:	xor    BYTE PTR [rcx],al
   140006df1:	(bad)  
   140006df2:	add    al,BYTE PTR [rax]
   140006df4:	(bad)  
   140006df5:	push   rdx
   140006df6:	add    dh,BYTE PTR [rax]
   140006df8:	add    DWORD PTR [rsi],eax
   140006dfa:	add    al,BYTE PTR [rax]
   140006dfc:	(bad)  
   140006dfd:	xor    al,BYTE PTR [rdx]
   140006dff:	xor    BYTE PTR [rcx],al
   140006e01:	or     al,BYTE PTR [rax+rax*1]
   140006e04:	or     dh,BYTE PTR [rax+rcx*1]
   140006e07:	add    BYTE PTR [rdx],cl
   140006e09:	push   rdx
   140006e0a:	(bad)  
   140006e0b:	jo     0x140006e0e
   140006e0d:	or     al,BYTE PTR [rax+rax*1]
   140006e10:	or     dh,BYTE PTR [rsi+rax*1]
   140006e13:	add    BYTE PTR [rdx],cl
   140006e15:	xor    al,BYTE PTR [rsi]
   140006e17:	jo     0x140006e1a
   140006e19:	(bad)  
   140006e1a:	add    al,BYTE PTR [rax]
   140006e1c:	(bad)  
   140006e1d:	xor    al,BYTE PTR [rdx]
   140006e1f:	xor    BYTE PTR [rcx],al
   140006e21:	or     al,BYTE PTR [rax+rax*1]
   140006e24:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   140006e28:	add    eax,0x1000134
   140006e2d:	add    eax,0x34050002
   140006e32:	add    DWORD PTR [rax],eax
   140006e34:	add    DWORD PTR [rcx+rax*1],eax
   140006e37:	add    BYTE PTR [rdx+rax*2],al
   140006e3a:	add    BYTE PTR [rax],al
   140006e3c:	add    DWORD PTR [rcx+rax*1],eax
   140006e3f:	add    BYTE PTR [rdx+rax*2],al
   140006e42:	add    BYTE PTR [rax],al
   140006e44:	add    DWORD PTR [rcx+rax*1],eax
   140006e47:	add    BYTE PTR [rdx+rax*2],al
   140006e4a:	add    BYTE PTR [rax],al
   140006e4c:	add    DWORD PTR [rcx+rax*1],eax
   140006e4f:	add    BYTE PTR [rdx+rax*2],al
   140006e52:	add    BYTE PTR [rax],al
   140006e54:	add    DWORD PTR [rsi],eax
   140006e56:	add    al,BYTE PTR [rax]
   140006e58:	(bad)  
   140006e59:	xor    al,BYTE PTR [rdx]
   140006e5b:	xor    BYTE PTR [rcx],bl
   140006e5d:	adc    al,0x4
   140006e5f:	add    BYTE PTR [rsp+rsi*1],dl
   140006e62:	or     BYTE PTR [rax],al
   140006e64:	(bad)  
   140006e65:	push   rdx
   140006e66:	add    dh,BYTE PTR [rax+0x6a]
   140006e69:	rex.WRB add BYTE PTR [r8],r8b
   140006e6c:	loopne 0x140006ed0
   140006e6e:	add    BYTE PTR [rax],al
   140006e70:	(bad)  
   140006e71:	(bad)  
   140006e72:	(bad)  
   140006e73:	inc    DWORD PTR [rax]
   140006e75:	add    BYTE PTR [rax],al
   140006e77:	add    bh,bh
   140006e79:	(bad)  
   140006e7a:	(bad)  
   140006e7b:	inc    DWORD PTR [rax]
	...
   140006e85:	add    BYTE PTR [rax],al
   140006e87:	add    BYTE PTR [rcx],al
   140006e89:	add    BYTE PTR [rax],al
   140006e8b:	add    BYTE PTR [rcx],al
   140006e8d:	add    BYTE PTR [rax],al
   140006e8f:	add    BYTE PTR [rsi+rbp*2+0x400000],dl
	...
   140006e9e:	add    BYTE PTR [rax],al
   140006ea0:	rcl    BYTE PTR [rsi+0x0],0x0
   140006ea4:	cmp    BYTE PTR [rax],al
   140006ea6:	add    BYTE PTR [rax],al
   140006ea8:	movabs al,ds:0xe0ffffffff000029
   140006eb1:	sub    DWORD PTR [rax],eax
   140006eb3:	add    BYTE PTR [rax],al
   140006eb5:	add    BYTE PTR [rax],al
   140006eb7:	add    bh,ch
   140006eb9:	sub    DWORD PTR [rax],eax
   140006ebb:	add    bh,bh
   140006ebd:	(bad)  
   140006ebe:	(bad)  
   140006ebf:	inc    eax
   140006ec1:	push   rsi
   140006ec2:	add    BYTE PTR [rax],al
   140006ec4:	add    BYTE PTR [rax],al
   140006ec6:	add    BYTE PTR [rax],al
   140006ec8:	int    0x56
   140006eca:	add    BYTE PTR [rax],al
   140006ecc:	add    DWORD PTR [rax],eax
   140006ece:	add    BYTE PTR [rax],al
   140006ed0:	sbb    DWORD PTR [rdx],ecx
   140006ed2:	add    al,BYTE PTR [rax]
   140006ed4:	or     dh,BYTE PTR [rdx]
   140006ed6:	(bad)  
   140006ed7:	push   rax
   140006ed8:	push   0x4d
   140006eda:	add    BYTE PTR [rax],al
   140006edc:	loopne 0x140006f40
   140006ede:	add    BYTE PTR [rax],al
   140006ee0:	add    DWORD PTR [rsi],eax
   140006ee2:	add    al,BYTE PTR [rax]
   140006ee4:	(bad)  
   140006ee5:	xor    al,BYTE PTR [rdx]
   140006ee7:	xor    BYTE PTR [rcx],al
   140006ee9:	(bad)  
   140006eea:	add    al,BYTE PTR [rax]
   140006eec:	(bad)  
   140006eed:	xor    al,BYTE PTR [rdx]
   140006eef:	xor    BYTE PTR [rcx],al
   140006ef1:	(bad)  
   140006ef2:	add    al,BYTE PTR [rax]
   140006ef4:	(bad)  
   140006ef5:	xor    al,BYTE PTR [rdx]
   140006ef7:	xor    BYTE PTR [rcx],al
   140006ef9:	(bad)  
   140006efa:	add    al,BYTE PTR [rax]
   140006efc:	(bad)  
   140006efd:	xor    al,BYTE PTR [rdx]
   140006eff:	xor    BYTE PTR [rcx],al
   140006f01:	(bad)  
   140006f03:	add    BYTE PTR [rdi],cl
   140006f05:	xor    al,0x6
   140006f07:	add    BYTE PTR [rdi],cl
   140006f09:	xor    cl,BYTE PTR [rbx]
   140006f0b:	jo     0x140006f0e
   140006f0d:	clts   
   140006f0f:	add    BYTE PTR [rdi],cl
   140006f11:	push   rsp
   140006f12:	or     BYTE PTR [rax],al
   140006f14:	sysenter 
   140006f16:	(bad)  
   140006f17:	add    BYTE PTR [rdi],cl
   140006f19:	xor    cl,BYTE PTR [rbx]
   140006f1b:	(bad)  
   140006f1c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4056f24
   140006f22:	(bad)  
   140006f23:	add    BYTE PTR [rax],dl
   140006f25:	cmp    eax,0x3d3d0000
   140006f2a:	add    BYTE PTR [rax],al
   140006f2c:	or     al,0x6f
   140006f2e:	add    BYTE PTR [rax],al
   140006f30:	and    DWORD PTR [rax],eax
   140006f32:	add    BYTE PTR [rax],al
   140006f34:	adc    BYTE PTR [rip+0x3d3d0000],bh        # 0x17d3d6f3a
   140006f3a:	add    BYTE PTR [rax],al
   140006f3c:	or     al,0x6f
   140006f3e:	add    BYTE PTR [rax],al
   140006f40:	add    DWORD PTR [rcx+rax*1],eax
   140006f43:	add    BYTE PTR [rdx+rax*2],al
   140006f46:	add    BYTE PTR [rax],al
   140006f48:	adc    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41d6f54
   140006f4e:	or     al,BYTE PTR [rax]
   140006f50:	sbb    BYTE PTR [rcx+rcx*1],dh
   140006f53:	add    BYTE PTR [rdx],cl
   140006f55:	push   rdx
   140006f56:	(bad)  
   140006f57:	jo     0x140006fc3
   140006f59:	rex.WRB add BYTE PTR [r8],r8b
   140006f5c:	or     BYTE PTR [rbx+0x0],ah
   140006f5f:	add    bh,bh
   140006f61:	(bad)  
   140006f62:	(bad)  
   140006f63:	call   QWORD PTR [rax+0x56]
   140006f66:	add    BYTE PTR [rax],al
   140006f68:	add    BYTE PTR [rax],al
   140006f6a:	add    BYTE PTR [rax],al
   140006f6c:	pop    rsp
   140006f6d:	push   rsi
   140006f6e:	add    BYTE PTR [rax],al
   140006f70:	lock sbb al,0x0
   140006f73:	add    bh,bh
   140006f75:	(bad)  
   140006f76:	(bad)  
   140006f77:	jmp    FWORD PTR [rcx]
   140006f79:	sbb    eax,0x0
   140006f7e:	add    BYTE PTR [rax],al
   140006f80:	xor    eax,0x100001d
   140006f85:	add    BYTE PTR [rax],al
   140006f87:	add    BYTE PTR [rax+0x1d],cl
   140006f8a:	add    BYTE PTR [rax],al
   140006f8c:	(bad)  
   140006f8d:	(bad)  
   140006f8e:	(bad)  
   140006f8f:	inc    DWORD PTR [rcx]
   140006f91:	(bad)  
   140006f92:	add    al,BYTE PTR [rax]
   140006f94:	(bad)  
   140006f95:	xor    al,BYTE PTR [rdx]
   140006f97:	xor    BYTE PTR [rcx],al
   140006f99:	(bad)  
   140006f9a:	add    al,BYTE PTR [rax]
   140006f9c:	(bad)  
   140006f9d:	xor    al,BYTE PTR [rdx]
   140006f9f:	xor    BYTE PTR [rcx],al
   140006fa1:	(bad)  
   140006fa2:	add    al,BYTE PTR [rax]
   140006fa4:	(bad)  
   140006fa5:	push   rdx
   140006fa6:	add    dh,BYTE PTR [rax]
   140006fa8:	add    DWORD PTR [rsi],eax
   140006faa:	add    al,BYTE PTR [rax]
   140006fac:	(bad)  
   140006fad:	xor    al,BYTE PTR [rdx]
   140006faf:	xor    BYTE PTR [rcx],bl
   140006fb1:	sbb    BYTE PTR [rax+rax*1],al
   140006fb4:	sbb    BYTE PTR [rcx*1+0x6720a00],dh
   140006fbb:	jo     0x140007027
   140006fbd:	rex.WRB add BYTE PTR [r8],r8b
   140006fc0:	xor    BYTE PTR [rbx+0x0],ah
   140006fc3:	add    bh,bh
   140006fc5:	(bad)  
   140006fc6:	(bad)  
   140006fc7:	inc    DWORD PTR [rax]
   140006fc9:	add    BYTE PTR [rax],al
   140006fcb:	add    bh,bh
   140006fcd:	(bad)  
   140006fce:	(bad)  
   140006fcf:	inc    DWORD PTR [rax]
	...
   140006fd9:	add    BYTE PTR [rax],al
   140006fdb:	add    BYTE PTR [rcx],al
   140006fdd:	add    BYTE PTR [rax],al
   140006fdf:	add    BYTE PTR [rcx],al
   140006fe1:	add    BYTE PTR [rax],al
   140006fe3:	add    al,ch
   140006fe5:	outs   dx,DWORD PTR ds:[rsi]
   140006fe6:	add    BYTE PTR [rax],al
   140006fe8:	add    BYTE PTR [rax],al
	...
   140006ff3:	add    al,ah
   140006ff5:	push   rsi
   140006ff6:	add    BYTE PTR [rax],al
   140006ff8:	rex.W add BYTE PTR [rax],al
   140006ffb:	add    BYTE PTR [rax],al
   140006ffd:	add    BYTE PTR [rax],al
   140006fff:	add    al,dh
   140007001:	sub    al,BYTE PTR [rax]
   140007003:	add    bh,bh
   140007005:	(bad)  
   140007006:	(bad)  
   140007007:	jmp    FWORD PTR [rdx]
   140007009:	sub    eax,DWORD PTR [rax]
   14000700b:	add    BYTE PTR [rax],al
   14000700d:	add    BYTE PTR [rax],al
   14000700f:	add    BYTE PTR [rdi+0x2b],ch
   140007012:	add    BYTE PTR [rax],al
   140007014:	(bad)  
   140007015:	(bad)  
   140007016:	(bad)  
   140007017:	jmp    rax
   140007019:	push   rsi
   14000701a:	add    BYTE PTR [rax],al
   14000701c:	add    BYTE PTR [rax],al
   14000701e:	add    BYTE PTR [rax],al
   140007020:	in     eax,dx
   140007021:	push   rsi
   140007022:	add    BYTE PTR [rax],al
   140007024:	add    DWORD PTR [rax],eax
   140007026:	add    BYTE PTR [rax],al
   140007028:	sbb    DWORD PTR [rdx],ecx
   14000702a:	add    al,BYTE PTR [rax]
   14000702c:	or     dl,BYTE PTR [rdx+0x6]
   14000702f:	push   rax
   140007030:	push   0x4d
   140007032:	add    BYTE PTR [rax],al
   140007034:	xor    BYTE PTR [rbx+0x0],ah
   140007037:	add    BYTE PTR [rcx],al
   140007039:	or     al,BYTE PTR [rax+rax*1]
   14000703c:	or     dh,BYTE PTR [rdx+rcx*1]
   14000703f:	add    BYTE PTR [rdx],cl
   140007041:	push   rdx
   140007042:	(bad)  
   140007043:	jo     0x140007046
   140007045:	or     al,BYTE PTR [rax+rax*1]
   140007048:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   14000704f:	(bad)  
   140007050:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4057058
   140007056:	or     al,0x0
   140007058:	add    BYTE PTR [rdx],ch
   14000705a:	add    BYTE PTR [rax],al
   14000705c:	rex.WRB sub r8b,BYTE PTR [r8]
   14000705f:	add    BYTE PTR [rax+rsi*2+0x0],al
   140007063:	add    BYTE PTR [rcx],ah
   140007065:	add    BYTE PTR [rax],al
   140007067:	add    BYTE PTR [rax],al
   140007069:	sub    al,BYTE PTR [rax]
   14000706b:	add    BYTE PTR [rbp+0x2a],cl
   14000706e:	add    BYTE PTR [rax],al
   140007070:	rex.R jo 0x140007073
   140007073:	add    BYTE PTR [rcx],al
   140007075:	(bad)  
   140007076:	add    al,BYTE PTR [rax]
   140007078:	(bad)  
   140007079:	push   rdx
   14000707a:	add    ah,BYTE PTR [rax+0x21]
   14000707d:	or     al,BYTE PTR [rax+rax*1]
   140007080:	or     dh,BYTE PTR [rcx+rcx*1+0x0]
   140007084:	add    eax,0x20000834
   140007089:	xor    eax,0x35310000
   14000708e:	add    BYTE PTR [rax],al
   140007090:	je     0x140007102
   140007092:	add    BYTE PTR [rax],al
   140007094:	and    DWORD PTR [rax],eax
   140007096:	add    BYTE PTR [rax],al
   140007098:	and    BYTE PTR [rip+0x35310000],dh        # 0x17531709e
   14000709e:	add    BYTE PTR [rax],al
   1400070a0:	je     0x140007112
   1400070a2:	add    BYTE PTR [rax],al
   1400070a4:	add    DWORD PTR [rcx+rax*1],eax
   1400070a7:	add    BYTE PTR [rdx+rax*2],al
   1400070aa:	add    BYTE PTR [rax],al
   1400070ac:	add    DWORD PTR [rcx+rax*1],eax
   1400070af:	add    BYTE PTR [rdx+rax*2],al
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	add    DWORD PTR [rcx+rax*1],eax
   1400070b7:	add    BYTE PTR [rdx+rax*2],al
   1400070ba:	add    BYTE PTR [rax],al
   1400070bc:	add    DWORD PTR [rsi],eax
   1400070be:	add    al,BYTE PTR [rax]
   1400070c0:	(bad)  
   1400070c1:	xor    al,BYTE PTR [rdx]
   1400070c3:	xor    BYTE PTR [rcx],al
   1400070c5:	add    al,0x1
   1400070c7:	add    BYTE PTR [rdx+riz*2],al
   1400070ca:	add    BYTE PTR [rax],al
   1400070cc:	add    DWORD PTR [rsi],eax
   1400070ce:	add    al,BYTE PTR [rax]
   1400070d0:	(bad)  
   1400070d1:	push   rdx
   1400070d2:	add    dh,BYTE PTR [rax]
   1400070d4:	add    DWORD PTR [rsi],eax
   1400070d6:	add    al,BYTE PTR [rax]
   1400070d8:	(bad)  
   1400070d9:	xor    al,BYTE PTR [rdx]
   1400070db:	xor    BYTE PTR [rcx],bl
   1400070dd:	and    cl,BYTE PTR [rax]
   1400070df:	add    BYTE PTR [rcx],bl
   1400070e1:	jb     0x1400070f8
   1400070e3:	lock adc esp,eax
   1400070e6:	adc    eax,edx
   1400070e8:	xadd   BYTE PTR [rip+0xb600c70],cl        # 0x14b607d5f
   1400070ef:	xor    BYTE PTR [rdx+0x4d],ch
   1400070f2:	add    BYTE PTR [rax],al
   1400070f4:	pop    rax
   1400070f5:	movsxd eax,DWORD PTR [rax]
   1400070f7:	add    bh,bh
   1400070f9:	(bad)  
   1400070fa:	(bad)  
   1400070fb:	inc    DWORD PTR [rax]
   1400070fd:	add    BYTE PTR [rax],al
   1400070ff:	add    bh,bh
   140007101:	(bad)  
   140007102:	(bad)  
   140007103:	inc    DWORD PTR [rax]
   140007105:	add    BYTE PTR [rax],al
   140007107:	add    bh,bh
   140007109:	(bad)  
   14000710a:	(bad)  
   14000710b:	inc    DWORD PTR [rax]
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	add    bh,bh
   140007111:	(bad)  
   140007112:	(bad)  
   140007113:	inc    DWORD PTR [rax]
	...
   14000711d:	add    BYTE PTR [rax],al
   14000711f:	add    BYTE PTR [rcx],al
   140007121:	add    BYTE PTR [rax],al
   140007123:	add    BYTE PTR [rcx],al
   140007125:	add    BYTE PTR [rax],al
   140007127:	add    BYTE PTR [rax+0x71],al
   14000712a:	add    BYTE PTR [rax],al
   14000712c:	add    al,BYTE PTR [rax]
   14000712e:	add    BYTE PTR [rax],al
   140007130:	add    al,BYTE PTR [rax]
   140007132:	add    BYTE PTR [rax],al
   140007134:	add    eax,DWORD PTR [rax]
   140007136:	add    BYTE PTR [rax],al
   140007138:	add    DWORD PTR [rax],eax
   14000713a:	add    BYTE PTR [rax],al
   14000713c:	push   rsp
   14000713d:	jno    0x14000713f
   14000713f:	add    BYTE PTR [rax+0x0],al
	...
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	nop
   14000714d:	push   rdi
   14000714e:	add    BYTE PTR [rax],al
   140007150:	rex.W add BYTE PTR [rax],al
   140007153:	add    BYTE PTR [rax+0x0],al
	...
   14000715e:	add    BYTE PTR [rax],al
   140007160:	mov    bl,0x57
   140007162:	add    BYTE PTR [rax],al
   140007164:	rex.W add BYTE PTR [rax],al
	...
   14000716f:	add    al,dh
   140007171:	xor    BYTE PTR [rax],al
   140007173:	add    bh,bh
   140007175:	(bad)  
   140007176:	(bad)  
   140007177:	(bad)  
   140007178:	out    dx,al
   140007179:	xor    DWORD PTR [rax],eax
   14000717b:	add    BYTE PTR [rax],al
   14000717d:	add    BYTE PTR [rax],al
   14000717f:	add    BYTE PTR [rdx+0x32],bh
   140007182:	add    BYTE PTR [rax],al
   140007184:	(bad)  
   140007185:	(bad)  
   140007186:	(bad)  
   140007187:	dec    DWORD PTR [rdx]
   140007189:	xor    eax,DWORD PTR [rax]
   14000718b:	add    BYTE PTR [rdx],al
   14000718d:	add    BYTE PTR [rax],al
   14000718f:	add    BYTE PTR [rdx+0x33],cl
   140007192:	add    BYTE PTR [rax],al
   140007194:	(bad)  
   140007195:	(bad)  
   140007196:	(bad)  
   140007197:	call   QWORD PTR [rax+0x57]
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    BYTE PTR [rbp+0x1000057],bl
   1400071a5:	add    BYTE PTR [rax],al
   1400071a7:	add    BYTE PTR [rbx+0x57],dh
   1400071ad:	add    BYTE PTR [rax],al
   1400071af:	add    al,al
   1400071b1:	push   rdi
   1400071b2:	add    BYTE PTR [rax],al
   1400071b4:	add    eax,DWORD PTR [rax]
   1400071b6:	add    BYTE PTR [rax],al
   1400071b8:	sbb    DWORD PTR [rdx],ecx
   1400071ba:	add    al,BYTE PTR [rax]
   1400071bc:	or     dl,BYTE PTR [rdx+0x6]
   1400071bf:	push   rax
   1400071c0:	push   0x4d
   1400071c2:	add    BYTE PTR [rax],al
   1400071c4:	pop    rax
   1400071c5:	movsxd eax,DWORD PTR [rax]
   1400071c7:	add    BYTE PTR [rcx],bl
   1400071c9:	or     al,BYTE PTR [rdx]
   1400071cb:	add    BYTE PTR [rdx],cl
   1400071cd:	push   rdx
   1400071ce:	(bad)  
   1400071cf:	push   rax
   1400071d0:	push   0x4d
   1400071d2:	add    BYTE PTR [rax],al
   1400071d4:	pop    rax
   1400071d5:	movsxd eax,DWORD PTR [rax]
   1400071d7:	add    BYTE PTR [rcx],al
   1400071d9:	or     al,BYTE PTR [rax+rax*1]
   1400071dc:	or     dh,BYTE PTR [rax+rcx*1]
   1400071df:	add    BYTE PTR [rdx],cl
   1400071e1:	push   rdx
   1400071e2:	(bad)  
   1400071e3:	jo     0x1400071e6
   1400071e5:	add    al,0x1
   1400071e7:	add    BYTE PTR [rdx+rax*2],al
   1400071ea:	add    BYTE PTR [rax],al
   1400071ec:	adc    DWORD PTR [rip+0x641d0006],ebx        # 0x1a41d71f8
   1400071f2:	or     al,BYTE PTR [rax]
   1400071f4:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400071f7:	add    BYTE PTR [rdx],cl
   1400071f9:	push   rdx
   1400071fa:	(bad)  
   1400071fb:	jo     0x140007267
   1400071fd:	rex.WRB add BYTE PTR [r8],r8b
   140007200:	and    BYTE PTR [rbx+0x0],0x0
   140007204:	(bad)  
   140007205:	(bad)  
   140007206:	(bad)  
   140007207:	inc    DWORD PTR [rax+0x56]
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    BYTE PTR [rsi+rdx*2+0x0],cl
   140007216:	add    BYTE PTR [rax],al
   140007218:	shl    BYTE PTR [rax],1
   14000721a:	add    BYTE PTR [rax],al
   14000721c:	(bad)  
   14000721d:	(bad)  
   14000721e:	(bad)  
   14000721f:	dec    DWORD PTR [rcx]
   140007221:	and    DWORD PTR [rax],eax
   140007223:	add    BYTE PTR [rax],al
   140007225:	add    BYTE PTR [rax],al
   140007227:	add    BYTE PTR [rip+0x1000021],dl        # 0x14100724e
   14000722d:	add    BYTE PTR [rax],al
   14000722f:	add    BYTE PTR [rax],ch
   140007231:	and    DWORD PTR [rax],eax
   140007233:	add    bh,bh
   140007235:	(bad)  
   140007236:	(bad)  
   140007237:	inc    DWORD PTR [rcx]
   140007239:	(bad)  
   14000723a:	add    al,BYTE PTR [rax]
   14000723c:	(bad)  
   14000723d:	xor    al,BYTE PTR [rdx]
   14000723f:	xor    BYTE PTR [rcx],al
   140007241:	(bad)  
   140007242:	add    al,BYTE PTR [rax]
   140007244:	(bad)  
   140007245:	xor    al,BYTE PTR [rdx]
   140007247:	xor    BYTE PTR [rcx],dl
   140007249:	sbb    DWORD PTR [rsi],eax
   14000724b:	add    BYTE PTR [rcx],bl
   14000724d:	or     al,BYTE PTR fs:[rax]
   140007250:	adc    al,0x34
   140007252:	or     DWORD PTR [rax],eax
   140007254:	(bad)  
   140007255:	push   rdx
   140007256:	add    dh,BYTE PTR [rax+0x6a]
   140007259:	rex.WRB add BYTE PTR [r8],r8b
   14000725c:	test   al,0x63
   14000725e:	add    BYTE PTR [rax],al
   140007260:	(bad)  
   140007261:	(bad)  
   140007262:	(bad)  
   140007263:	jmp    QWORD PTR [rax+0x56]
   140007269:	add    BYTE PTR [rax],al
   14000726b:	add    BYTE PTR [rsi+rdx*2+0x21600000],ch
   140007272:	add    BYTE PTR [rax],al
   140007274:	(bad)  
   140007275:	(bad)  
   140007276:	(bad)  
   140007277:	call   FWORD PTR [rdx+0x21]
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rsi+0x1000021],ah
   140007285:	add    BYTE PTR [rax],al
   140007287:	add    BYTE PTR [rcx-0xffffdf],bh
   14000728d:	(bad)  
   14000728e:	(bad)  
   14000728f:	inc    DWORD PTR [rcx]
   140007291:	or     al,BYTE PTR [rax+rax*1]
   140007294:	or     dh,BYTE PTR [rsi+rax*1]
   140007297:	add    BYTE PTR [rdx],cl
   140007299:	xor    al,BYTE PTR [rsi]
   14000729b:	jo     0x14000729e
   14000729d:	add    eax,0x34050002
   1400072a2:	add    DWORD PTR [rax],eax
   1400072a4:	adc    DWORD PTR [rsi],ebx
   1400072a6:	add    eax,0x1e341e00
   1400072ab:	add    BYTE PTR [rsi],cl
   1400072ad:	add    DWORD PTR [rax+rax*1],ebx
   1400072b0:	add    dl,BYTE PTR [rax+0x0]
   1400072b3:	add    BYTE PTR [rdx+0x4d],ch
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	shl    BYTE PTR [rbx+0x0],1
   1400072bb:	add    bh,bh
   1400072bd:	(bad)  
   1400072be:	(bad)  
   1400072bf:	call   rax
   1400072c1:	push   rdi
   1400072c2:	add    BYTE PTR [rax],al
   1400072c4:	add    BYTE PTR [rax],al
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	fcom   QWORD PTR [rdi+0x0]
   1400072cb:	add    BYTE PTR [rcx],al
   1400072cd:	add    BYTE PTR [rax],al
   1400072cf:	add    al,ch
   1400072d1:	push   rdi
   1400072d2:	add    BYTE PTR [rax],al
   1400072d4:	add    BYTE PTR [rax],al
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	add    BYTE PTR [rax+0x0],cl
   1400072db:	add    bh,bh
   1400072dd:	(bad)  
   1400072de:	(bad)  
   1400072df:	jmp    QWORD PTR [rdi+0x48]
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	add    BYTE PTR [rax],al
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	jne    0x140007332
   1400072ea:	add    BYTE PTR [rax],al
   1400072ec:	add    DWORD PTR [rax],eax
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	mov    ecx,DWORD PTR [rax+0x0]
   1400072f3:	add    BYTE PTR [rdx],al
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    al,cl
   1400072f9:	rex.W add BYTE PTR [rax],al
   1400072fc:	add    DWORD PTR [rax],eax
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	call   0x14000734d
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    BYTE PTR [rax],cl
   140007309:	rex.WB add BYTE PTR [r8],al
   14000730c:	(bad)  
   14000730d:	(bad)  
   14000730e:	(bad)  
   14000730f:	inc    DWORD PTR [rcx]
   140007311:	(bad)  
   140007312:	or     DWORD PTR [rax],eax
   140007314:	(bad)  
   140007315:	sbb    al,BYTE PTR fs:[rax]
   140007318:	(bad)  
   140007319:	push   rsp
   14000731a:	sbb    DWORD PTR [rax],eax
   14000731c:	(bad)  
   14000731d:	xor    al,0x18
   14000731f:	add    BYTE PTR [rdi],dl
   140007321:	add    DWORD PTR [rsi],edx
   140007323:	add    BYTE PTR [rax],dl
   140007325:	jo     0x140007327
   140007327:	add    BYTE PTR [rcx],al
   140007329:	sbb    BYTE PTR [rdx],al
   14000732b:	add    BYTE PTR [rax],bl
   14000732d:	push   rdx
   14000732e:	adc    al,0x30
   140007330:	and    DWORD PTR [rip+0x740d0004],ecx        # 0x1b40d733a
   140007336:	or     eax,DWORD PTR [rax]
   140007338:	add    eax,0x30000864
   14000733d:	sbb    al,0x0
   14000733f:	add    BYTE PTR [rax+0x1c],cl
   140007342:	add    BYTE PTR [rax],al
   140007344:	sub    BYTE PTR [rbx+0x0],dh
   140007347:	add    BYTE PTR [rcx],ah
   140007349:	add    BYTE PTR [rax],al
   14000734b:	add    BYTE PTR [rax],dh
   14000734d:	sbb    al,0x0
   14000734f:	add    BYTE PTR [rax+0x1c],cl
   140007352:	add    BYTE PTR [rax],al
   140007354:	sub    BYTE PTR [rbx+0x0],dh
   140007357:	add    BYTE PTR [rcx],ah
   140007359:	add    BYTE PTR [rax+rax*1],al
   14000735c:	add    BYTE PTR [rbx+rcx*1+0x0],dh
   140007360:	add    BYTE PTR [rax+rcx*1+0x0],ah
   140007364:	xor    BYTE PTR [rax+rax*1],bl
   140007367:	add    BYTE PTR [rax+0x1c],cl
   14000736a:	add    BYTE PTR [rax],al
   14000736c:	sub    BYTE PTR [rbx+0x0],dh
   14000736f:	add    BYTE PTR [rcx],al
   140007371:	(bad)  
   140007372:	add    al,BYTE PTR [rax]
   140007374:	(bad)  
   140007375:	xor    al,BYTE PTR [rdx]
   140007377:	xor    BYTE PTR [rcx],dl
   140007379:	sbb    BYTE PTR [rax+rax*1],al
   14000737c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000737f:	add    BYTE PTR [rdx],cl
   140007381:	push   rdx
   140007382:	(bad)  
   140007383:	jo     0x1400073ef
   140007385:	rex.WRB add BYTE PTR [r8],r8b
   140007388:	clc    
   140007389:	movsxd eax,DWORD PTR [rax]
   14000738b:	add    bh,bh
   14000738d:	(bad)  
   14000738e:	(bad)  
   14000738f:	push   QWORD PTR [rax+0x56]
   140007392:	add    BYTE PTR [rax],al
   140007394:	add    BYTE PTR [rax],al
   140007396:	add    BYTE PTR [rax],al
   140007398:	push   rax
   140007399:	and    BYTE PTR [rax],al
   14000739b:	add    bh,bh
   14000739d:	(bad)  
   14000739e:	(bad)  
   14000739f:	dec    DWORD PTR [rsi+0x20]
   1400073a5:	add    BYTE PTR [rax],al
   1400073a7:	add    BYTE PTR [rsi-0xffffe0],dh
   1400073ad:	(bad)  
   1400073ae:	(bad)  
   1400073af:	inc    DWORD PTR [rcx]
   1400073b1:	or     al,BYTE PTR [rax+rax*1]
   1400073b4:	or     dh,BYTE PTR [rsi+rax*1]
   1400073b7:	add    BYTE PTR [rdx],cl
   1400073b9:	xor    al,BYTE PTR [rsi]
   1400073bb:	jo     0x1400073be
   1400073bd:	(bad)  
   1400073be:	add    al,BYTE PTR [rax]
   1400073c0:	(bad)  
   1400073c1:	xor    al,BYTE PTR [rdx]
   1400073c3:	xor    BYTE PTR [rcx],al
   1400073c5:	add    al,0x1
   1400073c7:	add    BYTE PTR [rdx+rax*2],al
   1400073ca:	add    BYTE PTR [rax],al
   1400073cc:	add    DWORD PTR [rsi],eax
   1400073ce:	add    al,BYTE PTR [rax]
   1400073d0:	(bad)  
   1400073d1:	push   rdx
   1400073d2:	add    dh,BYTE PTR [rax]
   1400073d4:	add    DWORD PTR [rcx+rax*1],eax
   1400073d7:	add    BYTE PTR [rdx+rax*4],al
   1400073da:	add    BYTE PTR [rax],al
   1400073dc:	add    DWORD PTR [rcx+rax*1],eax
   1400073df:	add    BYTE PTR [rdx+rax*2],al
   1400073e2:	add    BYTE PTR [rax],al
   1400073e4:	add    DWORD PTR [rcx+rax*1],eax
   1400073e7:	add    BYTE PTR [rdx+rax*2],al
   1400073ea:	add    BYTE PTR [rax],al
   1400073ec:	add    DWORD PTR [rdi],ecx
   1400073ee:	(bad)  
   1400073ef:	add    BYTE PTR [rdi],cl
   1400073f1:	fs (bad) 
   1400073f3:	add    BYTE PTR [rdi],cl
   1400073f5:	xor    al,0x6
   1400073f7:	add    BYTE PTR [rdi],cl
   1400073f9:	xor    cl,BYTE PTR [rbx]
   1400073fb:	jo     0x1400073fe
   1400073fd:	(bad)  
   1400073fe:	add    al,BYTE PTR [rax]
   140007400:	(bad)  
   140007401:	xor    al,BYTE PTR [rdx]
   140007403:	xor    BYTE PTR [rcx],al
   140007405:	add    al,0x1
   140007407:	add    BYTE PTR [rdx+riz*2],al
   14000740a:	add    BYTE PTR [rax],al
   14000740c:	sbb    DWORD PTR [rip+0x62040001],ecx        # 0x1a2047413
   140007412:	add    BYTE PTR [rax],al
   140007414:	push   0x4d
   140007416:	add    BYTE PTR [rax],al
   140007418:	and    BYTE PTR [rax+rax*1+0x0],ah
   14000741c:	(bad)  
   14000741d:	(bad)  
   14000741e:	(bad)  
   14000741f:	inc    DWORD PTR [rax]
   140007421:	add    BYTE PTR [rax],al
   140007423:	add    bh,bh
   140007425:	(bad)  
   140007426:	(bad)  
   140007427:	inc    DWORD PTR [rax]
	...
   140007431:	add    BYTE PTR [rax],al
   140007433:	add    BYTE PTR [rcx],al
   140007435:	add    BYTE PTR [rax],al
   140007437:	add    BYTE PTR [rcx],al
   140007439:	add    BYTE PTR [rax],al
   14000743b:	add    BYTE PTR [rax+0x74],al
   14000743e:	add    BYTE PTR [rax],al
   140007440:	add    BYTE PTR [rax],al
	...
   14000744b:	add    BYTE PTR [rax+0x38000055],dh
   140007451:	add    BYTE PTR [rax],al
   140007453:	add    BYTE PTR [rax],al
   140007455:	add    BYTE PTR [rax],al
   140007457:	add    al,ah
   140007459:	adc    eax,0xffff0000
   14000745e:	(bad)  
   14000745f:	(bad)  
   140007460:	in     eax,dx
   140007461:	adc    eax,0x0
   140007466:	add    BYTE PTR [rax],al
   140007468:	(bad)  
   140007469:	(bad)  
   14000746a:	add    BYTE PTR [rax],al
   14000746c:	(bad)  
   14000746d:	(bad)  
   14000746e:	(bad)  
   14000746f:	push   QWORD PTR [rax+0x55]
   140007475:	add    BYTE PTR [rax],al
   140007477:	add    BYTE PTR [rbp+0x1000055],bh
   14000747d:	add    BYTE PTR [rax],al
   14000747f:	add    BYTE PTR [rcx],bl
   140007481:	or     al,BYTE PTR [rdx]
   140007483:	add    BYTE PTR [rdx],cl
   140007485:	xor    al,BYTE PTR [rsi]
   140007487:	push   rax
   140007488:	push   0x4d
   14000748a:	add    BYTE PTR [rax],al
   14000748c:	and    BYTE PTR [rax+rax*1+0x0],ah
   140007490:	add    DWORD PTR [rdx],ecx
   140007492:	add    al,0x0
   140007494:	or     dh,BYTE PTR [rsi+rax*1]
   140007497:	add    BYTE PTR [rdx],cl
   140007499:	xor    al,BYTE PTR [rsi]
   14000749b:	jo     0x1400074b6
   14000749d:	(bad)  
   14000749e:	or     BYTE PTR [rax],al
   1400074a0:	(bad)  
   1400074a1:	push   rdx
   1400074a2:	sbb    dh,al
   1400074a4:	sbb    al,ah
   1400074a6:	(bad)  
   1400074a7:	rcl    BYTE PTR [rax+rax*8],1
   1400074aa:	adc    dh,BYTE PTR [rax+0x11]
   1400074ad:	(bad)  
   1400074ae:	adc    BYTE PTR [rax],dh
   1400074b0:	push   0x4d
   1400074b2:	add    BYTE PTR [rax],al
   1400074b4:	rex.W
   1400074b5:	add    BYTE PTR fs:[rax],al
   1400074b8:	(bad)  
   1400074b9:	(bad)  
   1400074ba:	(bad)  
   1400074bb:	inc    DWORD PTR [rax]
   1400074bd:	add    BYTE PTR [rax],al
   1400074bf:	add    bh,bh
   1400074c1:	(bad)  
   1400074c2:	(bad)  
   1400074c3:	inc    DWORD PTR [rax]
	...
   1400074cd:	add    BYTE PTR [rax],al
   1400074cf:	add    BYTE PTR [rcx],al
   1400074d1:	add    BYTE PTR [rax],al
   1400074d3:	add    BYTE PTR [rcx],al
   1400074d5:	add    BYTE PTR [rax],al
   1400074d7:	add    ah,bl
   1400074d9:	je     0x1400074db
   1400074db:	add    BYTE PTR [rax+0x0],al
	...
   1400074e6:	add    BYTE PTR [rax],al
   1400074e8:	adc    BYTE PTR [rbp+0x0],0x0
   1400074ec:	cmp    BYTE PTR [rax],al
   1400074ee:	add    BYTE PTR [rax],al
   1400074f0:	mov    al,0x12
   1400074f2:	add    BYTE PTR [rax],al
   1400074f4:	(bad)  
   1400074f5:	(bad)  
   1400074f6:	(bad)  
   1400074f7:	jmp    rbx
   1400074f9:	adc    al,BYTE PTR [rax]
   1400074fb:	add    BYTE PTR [rax],al
   1400074fd:	add    BYTE PTR [rax],al
   1400074ff:	add    BYTE PTR [rdi+0x14],al
   140007502:	add    BYTE PTR [rax],al
   140007504:	(bad)  
   140007505:	(bad)  
   140007506:	(bad)  
   140007507:	(bad)  
   140007508:	fcom   DWORD PTR [rax+rax*1]
   14000750b:	add    BYTE PTR [rax],al
   14000750d:	add    BYTE PTR [rax],al
   14000750f:	add    BYTE PTR [rbp+0x1000055],cl
   140007515:	add    BYTE PTR [rax],al
   140007517:	add    BYTE PTR [rcx],bl
   140007519:	or     al,BYTE PTR [rdx]
   14000751b:	add    BYTE PTR [rdx],cl
   14000751d:	xor    al,BYTE PTR [rsi]
   14000751f:	push   rax
   140007520:	push   0x4d
   140007522:	add    BYTE PTR [rax],al
   140007524:	rex.W
   140007525:	add    BYTE PTR fs:[rax],al
   140007528:	add    DWORD PTR [rsi],eax
   14000752a:	add    al,BYTE PTR [rax]
   14000752c:	(bad)  
   14000752d:	xor    al,BYTE PTR [rdx]
   14000752f:	xor    BYTE PTR [rcx],al
   140007531:	add    al,0x1
   140007533:	add    BYTE PTR [rdx+rax*4],al
   140007536:	add    BYTE PTR [rax],al
   140007538:	add    DWORD PTR [rdx],ecx
   14000753a:	add    al,0x0
   14000753c:	or     dh,BYTE PTR [rsi+rax*1]
   14000753f:	add    BYTE PTR [rdx],cl
   140007541:	xor    al,BYTE PTR [rsi]
   140007543:	jo     0x14000755e
   140007545:	or     eax,0x62040001
   14000754a:	add    BYTE PTR [rax],al
   14000754c:	push   0x4d
   14000754e:	add    BYTE PTR [rax],al
   140007550:	jo     0x1400075b6
   140007552:	add    BYTE PTR [rax],al
   140007554:	(bad)  
   140007555:	(bad)  
   140007556:	(bad)  
   140007557:	inc    DWORD PTR [rax]
   140007559:	add    BYTE PTR [rax],al
   14000755b:	add    bh,bh
   14000755d:	(bad)  
   14000755e:	(bad)  
   14000755f:	inc    DWORD PTR [rax]
	...
   140007569:	add    BYTE PTR [rax],al
   14000756b:	add    BYTE PTR [rcx],al
   14000756d:	add    BYTE PTR [rax],al
   14000756f:	add    BYTE PTR [rcx],al
   140007571:	add    BYTE PTR [rax],al
   140007573:	add    BYTE PTR [rax+0x75],bh
   140007576:	add    BYTE PTR [rax],al
   140007578:	add    BYTE PTR [rax],al
	...
   140007583:	add    al,dl
   140007585:	push   rbp
   140007586:	add    BYTE PTR [rax],al
   140007588:	cmp    BYTE PTR [rax],al
   14000758a:	add    BYTE PTR [rax],al
   14000758c:	add    BYTE PTR [rax],al
   14000758e:	add    BYTE PTR [rax],al
   140007590:	xor    BYTE PTR [rsi],dl
   140007592:	add    BYTE PTR [rax],al
   140007594:	(bad)  
   140007595:	(bad)  
   140007596:	(bad)  
   140007597:	(bad)  
   140007598:	cmp    eax,0x16
   14000759d:	add    BYTE PTR [rax],al
   14000759f:	add    BYTE PTR [rax+0x16],bh
   1400075a2:	add    BYTE PTR [rax],al
   1400075a4:	(bad)  
   1400075a5:	(bad)  
   1400075a6:	(bad)  
   1400075a7:	call   rax
   1400075a9:	push   rbp
   1400075aa:	add    BYTE PTR [rax],al
   1400075ac:	add    BYTE PTR [rax],al
   1400075ae:	add    BYTE PTR [rax],al
   1400075b0:	fst    QWORD PTR [rbp+0x0]
   1400075b3:	add    BYTE PTR [rcx],al
   1400075b5:	add    BYTE PTR [rax],al
   1400075b7:	add    BYTE PTR [rcx],bl
   1400075b9:	or     al,BYTE PTR [rdx]
   1400075bb:	add    BYTE PTR [rdx],cl
   1400075bd:	xor    al,BYTE PTR [rsi]
   1400075bf:	push   rax
   1400075c0:	push   0x4d
   1400075c2:	add    BYTE PTR [rax],al
   1400075c4:	jo     0x14000762a
   1400075c6:	add    BYTE PTR [rax],al
   1400075c8:	add    DWORD PTR [rcx+rax*1],eax
   1400075cb:	add    BYTE PTR [rdx+rax*2],al
   1400075ce:	add    BYTE PTR [rax],al
   1400075d0:	sbb    DWORD PTR [rsp+rax*1],edx
   1400075d3:	add    BYTE PTR [rsp+rsi*1],dl
   1400075d6:	or     al,BYTE PTR [rax]
   1400075d8:	(bad)  
   1400075d9:	jb     0x1400075dd
   1400075db:	jo     0x140007647
   1400075dd:	rex.WRB add BYTE PTR [r8],r8b
   1400075e0:	cwde   
   1400075e1:	add    BYTE PTR fs:[rax],al
   1400075e4:	(bad)  
   1400075e5:	(bad)  
   1400075e6:	(bad)  
   1400075e7:	inc    DWORD PTR [rax]
   1400075e9:	add    BYTE PTR [rax],al
   1400075eb:	add    BYTE PTR [rax],al
   1400075ed:	add    BYTE PTR [rax],al
   1400075ef:	add    BYTE PTR [rax+0x55],al
   1400075f2:	add    BYTE PTR [rax],al
   1400075f4:	(bad)  
   1400075f5:	(bad)  
   1400075f6:	(bad)  
   1400075f7:	inc    DWORD PTR [rax]
   1400075f9:	add    BYTE PTR [rax],al
   1400075fb:	add    BYTE PTR [rax],al
   1400075fd:	add    BYTE PTR [rax],al
   1400075ff:	add    BYTE PTR [rcx],al
   140007601:	add    BYTE PTR [rax],al
   140007603:	add    BYTE PTR [rdx],al
   140007605:	add    BYTE PTR [rax],al
   140007607:	add    BYTE PTR [rcx],al
   140007609:	add    BYTE PTR [rax],al
   14000760b:	add    BYTE PTR [rax],dl
   14000760d:	jbe    0x14000760f
   14000760f:	add    BYTE PTR [rax+0x0],al
	...
   14000761a:	add    BYTE PTR [rax],al
   14000761c:	pop    rsp
   14000761d:	push   rbp
   14000761e:	add    BYTE PTR [rax],al
   140007620:	cmp    BYTE PTR [rax],al
   140007622:	add    BYTE PTR [rax],al
   140007624:	add    BYTE PTR [rax],al
   140007626:	add    BYTE PTR [rax],al
   140007628:	push   rax
   140007629:	adc    DWORD PTR [rax],eax
   14000762b:	add    bh,bh
   14000762d:	(bad)  
   14000762e:	(bad)  
   14000762f:	push   QWORD PTR [rcx+rdx*1+0x0]
   140007633:	add    BYTE PTR [rax],al
   140007635:	add    BYTE PTR [rax],al
   140007637:	add    BYTE PTR [rdx+0x1000011],al
   14000763d:	add    BYTE PTR [rax],al
   14000763f:	add    BYTE PTR [rax-0xffffef],dl
   140007645:	(bad)  
   140007646:	(bad)  
   140007647:	call   FWORD PTR [rbp+rdx*2+0x0]
   14000764b:	add    BYTE PTR [rax],al
   14000764d:	add    BYTE PTR [rax],al
   14000764f:	add    BYTE PTR [rcx+0x55],ch
   140007652:	add    BYTE PTR [rax],al
   140007654:	add    al,BYTE PTR [rax]
   140007656:	add    BYTE PTR [rax],al
   140007658:	add    DWORD PTR [rsi],eax
   14000765a:	add    al,BYTE PTR [rax]
   14000765c:	(bad)  
   14000765d:	xor    al,BYTE PTR [rdx]
   14000765f:	push   rax
   140007660:	sbb    DWORD PTR [rdx],ecx
   140007662:	add    al,BYTE PTR [rax]
   140007664:	or     dh,BYTE PTR [rdx]
   140007666:	(bad)  
   140007667:	push   rax
   140007668:	push   0x4d
   14000766a:	add    BYTE PTR [rax],al
   14000766c:	cwde   
   14000766d:	add    BYTE PTR fs:[rax],al
   140007670:	adc    DWORD PTR [rdx],edx
   140007672:	add    DWORD PTR [rax],eax
   140007674:	or     DWORD PTR [rdx+0x0],esp
   140007677:	add    BYTE PTR [rdx+0x4d],ch
   14000767a:	add    BYTE PTR [rax],al
   14000767c:	shl    BYTE PTR [rax+rax*1+0x0],0xff
   140007681:	(bad)  
   140007682:	(bad)  
   140007683:	push   rax
   140007685:	push   rbp
   140007686:	add    BYTE PTR [rax],al
   140007688:	adc    BYTE PTR [rdi],0x0
   14000768b:	add    bh,bh
   14000768d:	(bad)  
   14000768e:	(bad)  
   14000768f:	call   FWORD PTR [rdx+0x17]
   140007695:	add    BYTE PTR [rax],al
   140007697:	add    BYTE PTR [rbx-0xffffe9],ch
   14000769d:	(bad)  
   14000769e:	(bad)  
   14000769f:	inc    DWORD PTR [rcx]
   1400076a1:	(bad)  
   1400076a2:	add    al,BYTE PTR [rax]
   1400076a4:	(bad)  
   1400076a5:	xor    al,BYTE PTR [rdx]
   1400076a7:	push   rax
   1400076a8:	adc    DWORD PTR [rdx],edx
   1400076aa:	add    DWORD PTR [rax],eax
   1400076ac:	or     DWORD PTR [rdx+0x0],esp
   1400076af:	add    BYTE PTR [rdx+0x4d],ch
   1400076b2:	add    BYTE PTR [rax],al
   1400076b4:	call   0x13f00771d
   1400076b9:	(bad)  
   1400076ba:	(bad)  
   1400076bb:	push   QWORD PTR [rax]
   1400076bd:	push   rsi
   1400076be:	add    BYTE PTR [rax],al
   1400076c0:	loopne 0x1400076d9
   1400076c2:	add    BYTE PTR [rax],al
   1400076c4:	(bad)  
   1400076c5:	(bad)  
   1400076c6:	(bad)  
   1400076c7:	(bad)  
   1400076c8:	cli    
   1400076c9:	(bad)  
   1400076ca:	add    BYTE PTR [rax],al
   1400076cc:	add    BYTE PTR [rax],al
   1400076ce:	add    BYTE PTR [rax],al
   1400076d0:	or     ebx,DWORD PTR [rax]
   1400076d2:	add    BYTE PTR [rax],al
   1400076d4:	(bad)  
   1400076d5:	(bad)  
   1400076d6:	(bad)  
   1400076d7:	inc    DWORD PTR [rcx]
   1400076d9:	(bad)  
   1400076da:	add    al,BYTE PTR [rax]
   1400076dc:	(bad)  
   1400076dd:	xor    al,BYTE PTR [rdx]
   1400076df:	push   rax
   1400076e0:	adc    DWORD PTR [rdx],edx
   1400076e2:	add    DWORD PTR [rax],eax
   1400076e4:	or     DWORD PTR [rdx+0x0],esp
   1400076e7:	add    BYTE PTR [rdx+0x4d],ch
   1400076ea:	add    BYTE PTR [rax],al
   1400076ec:	adc    BYTE PTR [rbp+0x0],ah
   1400076ef:	add    bh,bh
   1400076f1:	(bad)  
   1400076f2:	(bad)  
   1400076f3:	call   QWORD PTR [rax]
   1400076f5:	push   rsi
   1400076f6:	add    BYTE PTR [rax],al
   1400076f8:	mov    al,0x17
   1400076fa:	add    BYTE PTR [rax],al
   1400076fc:	(bad)  
   1400076fd:	(bad)  
   1400076fe:	(bad)  
   1400076ff:	dec    edx
   140007701:	(bad)  
   140007702:	add    BYTE PTR [rax],al
   140007704:	add    BYTE PTR [rax],al
   140007706:	add    BYTE PTR [rax],al
   140007708:	fist   DWORD PTR [rdi]
   14000770a:	add    BYTE PTR [rax],al
   14000770c:	(bad)  
   14000770d:	(bad)  
   14000770e:	(bad)  
   14000770f:	inc    DWORD PTR [rcx]
   140007711:	(bad)  
   140007712:	add    al,BYTE PTR [rax]
   140007714:	(bad)  
   140007715:	xor    al,BYTE PTR [rdx]
   140007717:	push   rax
   140007718:	add    DWORD PTR [rdx],ecx
   14000771a:	add    al,0x0
   14000771c:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   140007720:	add    eax,0x1000134
   140007725:	(bad)  
   140007726:	add    al,BYTE PTR [rax]
   140007728:	(bad)  
   140007729:	xor    al,BYTE PTR [rdx]
   14000772b:	xor    BYTE PTR [rcx],al
   14000772d:	adc    al,0x8
   14000772f:	add    BYTE PTR [rsp+riz*2],dl
   140007732:	or     BYTE PTR [rax],al
   140007734:	adc    al,0x54
   140007736:	(bad)  
   140007737:	add    BYTE PTR [rsp+rsi*1],dl
   14000773a:	(bad)  
   14000773b:	add    BYTE PTR [rdx+rsi*1],dl
   14000773e:	adc    BYTE PTR [rax+0x1],dh
   140007741:	add    al,0x1
   140007743:	add    BYTE PTR [rdx+rax*2],al
   140007746:	add    BYTE PTR [rax],al
   140007748:	adc    DWORD PTR [rsi],eax
   14000774a:	add    al,BYTE PTR [rax]
   14000774c:	(bad)  
   14000774d:	xor    al,BYTE PTR [rdx]
   14000774f:	xor    BYTE PTR [rsi+0x1000051],bl
   140007755:	add    BYTE PTR [rax],al
   140007757:	add    bh,al
   140007759:	rex.WR add BYTE PTR [rax],r8b
   14000775c:	sub    eax,0xf400004d
   140007761:	push   rdi
   140007762:	add    BYTE PTR [rax],al
   140007764:	add    BYTE PTR [rax],al
   140007766:	add    BYTE PTR [rax],al
   140007768:	add    DWORD PTR [rsi],eax
   14000776a:	add    al,BYTE PTR [rax]
   14000776c:	(bad)  
   14000776d:	xor    al,BYTE PTR [rdx]
   14000776f:	push   rax
   140007770:	add    DWORD PTR [rsi],eax
   140007772:	add    al,BYTE PTR [rax]
   140007774:	(bad)  
   140007775:	xor    al,BYTE PTR [rdx]
   140007777:	xor    BYTE PTR [rcx],al
   140007779:	clts   
   14000777b:	add    BYTE PTR [rdi],cl
   14000777d:	fs (bad) 
   14000777f:	add    BYTE PTR [rdi],cl
   140007781:	xor    al,0x6
   140007783:	add    BYTE PTR [rdi],cl
   140007785:	xor    cl,BYTE PTR [rbx]
   140007787:	jo     0x14000778a
   140007789:	add    al,0x1
   14000778b:	add    BYTE PTR [rdx+rax*2],al
   14000778e:	add    BYTE PTR [rax],al
   140007790:	add    DWORD PTR [rcx+rax*1],eax
   140007793:	add    BYTE PTR [rdx+riz*2],al
   140007796:	add    BYTE PTR [rax],al
   140007798:	or     DWORD PTR [rax],edx
   14000779a:	(bad)  
   14000779b:	add    BYTE PTR [rax],dl
   14000779d:	or     DWORD PTR fs:[rax],eax
   1400077a0:	adc    BYTE PTR [rax+rcx*1],dh
   1400077a3:	add    BYTE PTR [rax],dl
   1400077a5:	push   rdx
   1400077a6:	or     al,0x70
   1400077a8:	sahf   
   1400077a9:	push   rcx
   1400077aa:	add    BYTE PTR [rax],al
   1400077ac:	add    DWORD PTR [rax],eax
   1400077ae:	add    BYTE PTR [rax],al
   1400077b0:	jbe    0x140007801
   1400077b2:	add    BYTE PTR [rax],al
   1400077b4:	call   QWORD PTR [rax+0x0]
   1400077b7:	add    BYTE PTR [rdi],cl
   1400077b9:	pop    rax
   1400077ba:	add    BYTE PTR [rax],al
   1400077bc:	call   QWORD PTR [rax+0x0]
   1400077bf:	add    BYTE PTR [rcx],al
   1400077c1:	(bad)  
   1400077c2:	add    al,BYTE PTR [rax]
   1400077c4:	(bad)  
   1400077c5:	xor    al,BYTE PTR [rdx]
   1400077c7:	push   rax
   1400077c8:	add    DWORD PTR [rcx+rax*1],eax
   1400077cb:	add    BYTE PTR [rdx+rax*2],al
   1400077ce:	add    BYTE PTR [rax],al
   1400077d0:	adc    DWORD PTR [rax],ebx
   1400077d2:	add    eax,0x14621800
   1400077d7:	loopne 0x1400077eb
   1400077d9:	jo     0x1400077ec
   1400077db:	(bad)  
   1400077dc:	adc    BYTE PTR [rax],dh
   1400077de:	add    BYTE PTR [rax],al
   1400077e0:	sahf   
   1400077e1:	push   rcx
   1400077e2:	add    BYTE PTR [rax],al
   1400077e4:	add    DWORD PTR [rax],eax
   1400077e6:	add    BYTE PTR [rax],al
   1400077e8:	xlat   BYTE PTR ds:[rbx]
   1400077e9:	push   rcx
   1400077ea:	add    BYTE PTR [rax],al
   1400077ec:	not    DWORD PTR [rcx+0x0]
   1400077ef:	add    BYTE PTR [rip+0x58],ch        # 0x14000784d
   1400077f5:	add    BYTE PTR [rax],al
   1400077f7:	add    BYTE PTR [rcx],al
   1400077f9:	(bad)  
   1400077fa:	add    al,BYTE PTR [rax]
   1400077fc:	(bad)  
   1400077fd:	xor    al,BYTE PTR [rdx]
   1400077ff:	push   rax
   140007800:	or     DWORD PTR [rdi],edx
   140007802:	(bad)  
   140007803:	add    BYTE PTR [rdi],dl
   140007805:	xor    al,0xd
   140007807:	add    BYTE PTR [rdi],dl
   140007809:	jb     0x14000781e
   14000780b:	loopne 0x14000781e
   14000780d:	jo     0x14000781f
   14000780f:	(bad)  
   140007810:	sahf   
   140007811:	push   rcx
   140007812:	add    BYTE PTR [rax],al
   140007814:	add    DWORD PTR [rax],eax
   140007816:	add    BYTE PTR [rax],al
   140007818:	rex.XB push r10
   14000781a:	add    BYTE PTR [rax],al
   14000781c:	pop    rsp
   14000781d:	push   rdx
   14000781e:	add    BYTE PTR [rax],al
   140007820:	pop    rcx
   140007821:	pop    rax
   140007822:	add    BYTE PTR [rax],al
   140007824:	pop    rsp
   140007825:	push   rdx
   140007826:	add    BYTE PTR [rax],al
   140007828:	add    DWORD PTR [rsi],eax
   14000782a:	add    al,BYTE PTR [rax]
   14000782c:	(bad)  
   14000782d:	xor    al,BYTE PTR [rdx]
   14000782f:	push   rax
   140007830:	add    DWORD PTR [rcx+rax*1],eax
   140007833:	add    BYTE PTR [rdx+rax*2],al
   140007836:	add    BYTE PTR [rax],al
   140007838:	add    DWORD PTR [rcx+rax*1],eax
   14000783b:	add    BYTE PTR [rdx+rax*2],al
   14000783e:	add    BYTE PTR [rax],al
   140007840:	add    DWORD PTR [rcx+rax*1],eax
   140007843:	add    BYTE PTR [rdx+rax*2],al
   140007846:	add    BYTE PTR [rax],al
   140007848:	or     DWORD PTR [rdx],ecx
   14000784a:	add    al,0x0
   14000784c:	or     dh,BYTE PTR [rsi+rax*1]
   14000784f:	add    BYTE PTR [rdx],cl
   140007851:	xor    al,BYTE PTR [rsi]
   140007853:	jo     0x1400077f3
   140007855:	push   rcx
   140007856:	add    BYTE PTR [rax],al
   140007858:	add    DWORD PTR [rax],eax
   14000785a:	add    BYTE PTR [rax],al
   14000785c:	cmp    eax,0x70000053
   140007861:	push   rbx
   140007862:	add    BYTE PTR [rax],al
   140007864:	movabs al,ds:0x100005370000058
   14000786d:	(bad)  
   14000786e:	add    al,BYTE PTR [rax]
   140007870:	(bad)  
   140007871:	xor    al,BYTE PTR [rdx]
   140007873:	push   rax
   140007874:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d787e
   14000787a:	or     DWORD PTR [rax],eax
   14000787c:	or     eax,0x1500632
   140007881:	or     al,BYTE PTR [rax+rax*1]
   140007884:	or     dh,BYTE PTR [rsi+rax*1]
   140007887:	add    BYTE PTR [rdx],cl
   140007889:	xor    al,BYTE PTR [rsi]
   14000788b:	jo     0x14000788e
   14000788d:	or     al,BYTE PTR [rax+rax*1]
   140007890:	or     dh,BYTE PTR [rsi+rax*1]
   140007893:	add    BYTE PTR [rdx],cl
   140007895:	xor    al,BYTE PTR [rsi]
   140007897:	jo     0x140007899
	...
   1400078a1:	add    BYTE PTR [rax],al
   1400078a3:	add    BYTE PTR [rsi+0x10],ah
   1400078a6:	sbb    DWORD PTR [rax+0x0],0xfa000000
   1400078ad:	js     0x1400078af
   1400078af:	add    BYTE PTR [rcx],al
   1400078b1:	add    BYTE PTR [rax],al
   1400078b3:	add    BYTE PTR [rip+0x5000000],al        # 0x1450078b9
   1400078b9:	add    BYTE PTR [rax],al
   1400078bb:	add    al,cl
   1400078bd:	js     0x1400078bf
   1400078bf:	add    ah,bl
   1400078c1:	js     0x1400078c3
   1400078c3:	add    al,dh
   1400078c5:	js     0x1400078c7
   1400078c7:	add    BYTE PTR [rax+0x21],ah
   1400078ca:	add    BYTE PTR [rax],al
   1400078cc:	jo     0x1400078f2
   1400078ce:	add    BYTE PTR [rax],al
   1400078d0:	and    BYTE PTR [rax-0x6fd80000],dl
   1400078d6:	add    BYTE PTR [rax],al
   1400078d8:	sbb    BYTE PTR [rax+0x790e0000],dl
   1400078de:	add    BYTE PTR [rax],al
   1400078e0:	xor    edi,DWORD PTR [rcx+0x0]
   1400078e3:	add    BYTE PTR [rbp+0x79],bl
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	js     0x140007963
   1400078ea:	add    BYTE PTR [rax],al
   1400078ec:	xchg   esi,eax
   1400078ed:	jns    0x1400078ef
   1400078ef:	add    BYTE PTR [rax],al
   1400078f1:	add    BYTE PTR [rcx],al
   1400078f3:	add    BYTE PTR [rdx],al
   1400078f5:	add    BYTE PTR [rbx],al
   1400078f7:	add    BYTE PTR [rax+rax*1],al
   1400078fa:	(bad)  
   1400078fb:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   1400078ff:	(bad)  
   140007900:	je     0x140007967
   140007902:	pop    rdi
   140007903:	ins    DWORD PTR es:[rdi],dx
   140007904:	(bad)  
   140007905:	je     0x140007973
   140007907:	(bad)  
   140007908:	(bad)  
   140007909:	cs gs js 0x140007972
   14000790d:	add    BYTE PTR [rdi],bh
   14000790f:	(bad)  
   140007910:	xor    BYTE PTR [rdx+0x61],cl
   140007913:	jbe    0x140007976
   140007915:	rex.WR (bad) 
   140007917:	jne    0x140007987
   140007919:	movsxd ebp,DWORD PTR [rax+0x65]
   14000791c:	jb     0x140007961
   14000791e:	outs   dx,DWORD PTR ds:[rsi]
   14000791f:	outs   dx,BYTE PTR ds:[rsi]
   140007920:	imul   sp,WORD PTR [rdi+0x40],0x5140
   140007926:	rex.RB
   140007927:	rex.B
   140007928:	rex.B
   140007929:	rex
   14000792a:	rex.B
   14000792b:	rex.RB
   14000792c:	rex.X push rsi
   14000792e:	xor    BYTE PTR [rax+0x40],al
   140007931:	pop    rdx
   140007932:	add    BYTE PTR [rdi],bh
   140007934:	(bad)  
   140007935:	xor    al,0x4a
   140007937:	(bad)  
   140007938:	jbe    0x14000799b
   14000793a:	rex.WR (bad) 
   14000793c:	jne    0x1400079ac
   14000793e:	movsxd ebp,DWORD PTR [rax+0x65]
   140007941:	jb     0x140007986
   140007943:	outs   dx,DWORD PTR ds:[rsi]
   140007944:	outs   dx,BYTE PTR ds:[rsi]
   140007945:	imul   sp,WORD PTR [rdi+0x40],0x5140
   14000794b:	rex.RB
   14000794c:	rex.B
   14000794d:	rex.B
   14000794e:	rex.B
   14000794f:	rex.RB
   140007950:	push   r14
   140007952:	xor    BYTE PTR [rax+0x41],al
   140007955:	rex.RB
   140007956:	rex.X push rsi
   140007958:	xor    BYTE PTR [rax+0x40],al
   14000795b:	pop    rdx
   14000795c:	add    BYTE PTR [rcx+0x63],ah
   14000795f:	je     0x1400079ca
   140007961:	jbe    0x1400079c4
   140007963:	je     0x1400079ca
   140007965:	pop    rdi
   140007966:	ins    DWORD PTR es:[rdi],dx
   140007967:	(bad)  
   140007968:	je     0x1400079d6
   14000796a:	(bad)  
   14000796b:	(bad)  
   14000796c:	pop    rdi
   14000796d:	(bad)  
   14000796e:	jne    0x1400079d9
   140007970:	ins    BYTE PTR es:[rdi],dx
   140007971:	fs pop rdi
   140007973:	fs (bad) 
   140007975:	je     0x1400079dc
   140007977:	add    BYTE PTR [rcx+0x63],ah
   14000797a:	je     0x1400079e5
   14000797c:	jbe    0x1400079df
   14000797e:	je     0x1400079e5
   140007980:	pop    rdi
   140007981:	ins    DWORD PTR es:[rdi],dx
   140007982:	(bad)  
   140007983:	je     0x1400079f1
   140007985:	(bad)  
   140007986:	(bad)  
   140007987:	pop    rdi
   140007988:	jb     0x1400079ef
   14000798a:	ins    BYTE PTR es:[rdi],dx
   14000798b:	(bad)  
   14000798c:	je     0x1400079f7
   14000798e:	jbe    0x1400079f5
   140007990:	pop    rdi
   140007991:	jo     0x1400079f4
   140007993:	je     0x1400079fd
   140007995:	add    BYTE PTR [rcx+0x63],ah
   140007998:	je     0x140007a03
   14000799a:	jbe    0x1400079fd
   14000799c:	je     0x140007a03
   14000799e:	pop    rdi
   14000799f:	ins    DWORD PTR es:[rdi],dx
   1400079a0:	(bad)  
   1400079a1:	je     0x140007a0f
   1400079a3:	(bad)  
   1400079a4:	(bad)  
   1400079a5:	pop    rdi
   1400079a6:	jbe    0x140007a0d
   1400079a8:	jb     0x140007a1d
   1400079aa:	imul   ebp,DWORD PTR [rdi+0x6e],0xe8000000
   1400079b1:	jnp    0x1400079b3
	...
   1400079bb:	add    BYTE PTR [rdx+0x7e],dh
   1400079be:	add    BYTE PTR [rax],al
   1400079c0:	shl    BYTE PTR [rcx+0x0],0x0
   1400079c4:	sub    BYTE PTR [rdx+0x0],bh
	...
   1400079cf:	add    BYTE PTR [rdx+0x7e],bl
   1400079d5:	(bad)  
   1400079d6:	add    BYTE PTR [rax],al
   1400079d8:	mov    eax,0x7b
   1400079dd:	add    BYTE PTR [rax],al
   1400079df:	add    BYTE PTR [rax],al
   1400079e1:	add    BYTE PTR [rax],al
   1400079e3:	add    ah,bh
   1400079e5:	jle    0x1400079e7
   1400079e7:	add    BYTE PTR [rax+0x68000061],dl
   1400079ed:	jp     0x1400079ef
	...
   1400079f7:	add    BYTE PTR [rsi+0x4000007f],ah
   1400079fd:	(bad)  
   1400079fe:	add    BYTE PTR [rax],al
   140007a00:	cwde   
   140007a01:	jp     0x140007a03
	...
   140007a0b:	add    BYTE PTR [rax-0x80],al
   140007a0e:	add    BYTE PTR [rax],al
   140007a10:	jo     0x140007a72
	...
   140007a26:	add    BYTE PTR [rax],al
   140007a28:	push   rsi
   140007a29:	(bad)  
   140007a2a:	add    BYTE PTR [rax],al
   140007a2c:	add    BYTE PTR [rax],al
   140007a2e:	add    BYTE PTR [rax],al
   140007a30:	rex (bad) 
   140007a32:	add    BYTE PTR [rax],al
   140007a34:	add    BYTE PTR [rax],al
   140007a36:	add    BYTE PTR [rax],al
   140007a38:	sub    al,BYTE PTR [rdx+0x0]
   140007a3e:	add    BYTE PTR [rax],al
   140007a40:	adc    BYTE PTR [rdx+0x0],al
   140007a46:	add    BYTE PTR [rax],al
   140007a48:	add    BYTE PTR [rdx+0x0],al
   140007a4e:	add    BYTE PTR [rax],al
   140007a50:	lock add DWORD PTR [rax],0x0
   140007a57:	add    BYTE PTR [rsi+rdi*2+0x0],al
	...
   140007a66:	add    BYTE PTR [rax],al
   140007a68:	data16 jg 0x140007a6b
   140007a6b:	add    BYTE PTR [rax],al
   140007a6d:	add    BYTE PTR [rax],al
   140007a6f:	add    BYTE PTR [rdi+rdi*2+0x0],al
   140007a73:	add    BYTE PTR [rax],al
   140007a75:	add    BYTE PTR [rax],al
   140007a77:	add    BYTE PTR [rdx],ah
   140007a79:	jg     0x140007a7b
   140007a7b:	add    BYTE PTR [rax],al
   140007a7d:	add    BYTE PTR [rax],al
   140007a7f:	add    BYTE PTR [rax],cl
   140007a81:	jg     0x140007a83
   140007a83:	add    BYTE PTR [rax],al
   140007a85:	add    BYTE PTR [rax],al
   140007a87:	add    BYTE PTR [rsi+0x7f],al
	...
   140007a95:	add    BYTE PTR [rax],al
   140007a97:	add    BYTE PTR [rdx-0x7f],ah
   140007a9a:	add    BYTE PTR [rax],al
   140007a9c:	add    BYTE PTR [rax],al
   140007a9e:	add    BYTE PTR [rax],al
   140007aa0:	push   rsi
   140007aa1:	add    DWORD PTR [rax],0x0
   140007aa7:	add    ah,cl
   140007aa9:	add    DWORD PTR [rax],0x0
   140007aaf:	add    BYTE PTR [rcx+rax*4],dh
   140007ab2:	add    BYTE PTR [rax],al
   140007ab4:	add    BYTE PTR [rax],al
   140007ab6:	add    BYTE PTR [rax],al
   140007ab8:	(bad)  
   140007ab9:	add    DWORD PTR [rax],0x0
   140007abf:	add    BYTE PTR [rax],dl
   140007ac1:	add    DWORD PTR [rax],0x0
   140007ac7:	add    BYTE PTR [rsi+0x81],dl
   140007acd:	add    BYTE PTR [rax],al
   140007acf:	add    BYTE PTR [rcx+rax*4+0x0],ch
   140007ad3:	add    BYTE PTR [rax],al
   140007ad5:	add    BYTE PTR [rax],al
   140007ad7:	add    BYTE PTR [rsi-0x7f],dh
   140007ada:	add    BYTE PTR [rax],al
   140007adc:	add    BYTE PTR [rax],al
   140007ade:	add    BYTE PTR [rax],al
   140007ae0:	add    QWORD PTR [rax],0x0
   140007ae7:	add    BYTE PTR [rdx+0x81],al
   140007aed:	add    BYTE PTR [rax],al
   140007aef:	add    BYTE PTR [rdi+rdi*2+0x0],dh
   140007af6:	add    BYTE PTR [rax],al
   140007af8:	sar    BYTE PTR [rdi+0x0],0x0
   140007afc:	add    BYTE PTR [rax],al
   140007afe:	add    BYTE PTR [rax],al
   140007b00:	sar    BYTE PTR [rdi+0x0],cl
   140007b03:	add    BYTE PTR [rax],al
   140007b05:	add    BYTE PTR [rax],al
   140007b07:	add    dl,ah
   140007b09:	jg     0x140007b0b
   140007b0b:	add    BYTE PTR [rax],al
   140007b0d:	add    BYTE PTR [rax],al
   140007b0f:	add    ah,ch
   140007b11:	jg     0x140007b13
   140007b13:	add    BYTE PTR [rax],al
   140007b15:	add    BYTE PTR [rax],al
   140007b17:	add    dh,dh
   140007b19:	jg     0x140007b1b
   140007b1b:	add    BYTE PTR [rax],al
   140007b1d:	add    BYTE PTR [rax],al
   140007b1f:	add    BYTE PTR [rax+rax*4],cl
   140007b22:	add    BYTE PTR [rax],al
   140007b24:	add    BYTE PTR [rax],al
   140007b26:	add    BYTE PTR [rax],al
   140007b28:	and    al,BYTE PTR [rax+0x0]
   140007b2e:	add    BYTE PTR [rax],al
   140007b30:	sub    al,0x80
   140007b32:	add    BYTE PTR [rax],al
   140007b34:	add    BYTE PTR [rax],al
   140007b36:	add    BYTE PTR [rax],al
   140007b38:	add    BYTE PTR ss:[rax],0x0
   140007b3c:	add    BYTE PTR [rax],al
   140007b3e:	add    BYTE PTR [rax],al
   140007b40:	rex.WRX add BYTE PTR [rax],0x0
   140007b44:	add    BYTE PTR [rax],al
   140007b46:	add    BYTE PTR [rax],al
   140007b48:	push   rsi
   140007b49:	add    BYTE PTR [rax],0x0
   140007b4c:	add    BYTE PTR [rax],al
   140007b4e:	add    BYTE PTR [rax],al
   140007b50:	(bad)  
   140007b51:	add    BYTE PTR [rax],0x0
   140007b54:	add    BYTE PTR [rax],al
   140007b56:	add    BYTE PTR [rax],al
   140007b58:	outs   dx,BYTE PTR ds:[rsi]
   140007b59:	add    BYTE PTR [rax],0x0
   140007b5c:	add    BYTE PTR [rax],al
   140007b5e:	add    BYTE PTR [rax],al
   140007b60:	jl     0x140007ae2
   140007b62:	add    BYTE PTR [rax],al
   140007b64:	add    BYTE PTR [rax],al
   140007b66:	add    BYTE PTR [rax],al
   140007b68:	xchg   esp,eax
   140007b69:	add    BYTE PTR [rax],0x0
   140007b6c:	add    BYTE PTR [rax],al
   140007b6e:	add    BYTE PTR [rax],al
   140007b70:	sahf   
   140007b71:	add    BYTE PTR [rax],0x0
   140007b74:	add    BYTE PTR [rax],al
   140007b76:	add    BYTE PTR [rax],al
   140007b78:	lods   al,BYTE PTR ds:[rsi]
   140007b79:	add    BYTE PTR [rax],0x0
   140007b7c:	add    BYTE PTR [rax],al
   140007b7e:	add    BYTE PTR [rax],al
   140007b80:	mov    BYTE PTR [rax+0x0],0x0
   140007b87:	add    ah,dl
   140007b89:	add    BYTE PTR [rax],0x0
   140007b8c:	add    BYTE PTR [rax],al
   140007b8e:	add    BYTE PTR [rax],al
   140007b90:	in     al,0x80
   140007b92:	add    BYTE PTR [rax],al
   140007b94:	add    BYTE PTR [rax],al
   140007b96:	add    BYTE PTR [rax],al
   140007b98:	test   BYTE PTR [rax+0x0],0x0
   140007b9f:	add    dh,bh
   140007ba1:	add    BYTE PTR [rax],0x0
   140007ba4:	add    BYTE PTR [rax],al
   140007ba6:	add    BYTE PTR [rax],al
   140007ba8:	(bad)  
   140007ba9:	add    DWORD PTR [rax],0x0
	...
   140007bb7:	add    dh,ch
   140007bb9:	jle    0x140007bbb
   140007bbb:	add    BYTE PTR [rax],al
   140007bbd:	add    BYTE PTR [rax],al
   140007bbf:	add    al,ah
   140007bc1:	jle    0x140007bc3
   140007bc3:	add    BYTE PTR [rax],al
   140007bc5:	add    BYTE PTR [rax],al
   140007bc7:	add    dh,cl
   140007bc9:	jle    0x140007bcb
   140007bcb:	add    BYTE PTR [rax],al
   140007bcd:	add    BYTE PTR [rax],al
   140007bcf:	add    BYTE PTR [rdx+0x7e],bh
   140007bd5:	add    BYTE PTR [rax],al
   140007bd7:	add    BYTE PTR [rax+0x7e],ch
	...
   140007be5:	add    BYTE PTR [rax],al
   140007be7:	add    BYTE PTR [rsi+rdi*2+0x0],dl
   140007beb:	add    BYTE PTR [rax],al
   140007bed:	add    BYTE PTR [rax],al
   140007bef:	add    BYTE PTR [rsi],dh
   140007bf1:	jle    0x140007bf3
   140007bf3:	add    BYTE PTR [rax],al
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    BYTE PTR [rsi],dl
   140007bf9:	jle    0x140007bfb
   140007bfb:	add    BYTE PTR [rax],al
   140007bfd:	add    BYTE PTR [rax],al
   140007bff:	add    dh,dh
   140007c01:	jge    0x140007c03
   140007c03:	add    BYTE PTR [rax],al
   140007c05:	add    BYTE PTR [rax],al
   140007c07:	add    al,ah
   140007c09:	jge    0x140007c0b
   140007c0b:	add    BYTE PTR [rax],al
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    dh,al
   140007c11:	jge    0x140007c13
   140007c13:	add    BYTE PTR [rax],al
   140007c15:	add    BYTE PTR [rax],al
   140007c17:	add    BYTE PTR [rbp+rdi*2+0x0],dl
   140007c1b:	add    BYTE PTR [rax],al
   140007c1d:	add    BYTE PTR [rax],al
   140007c1f:	add    al,ch
   140007c21:	jl     0x140007c23
   140007c23:	add    BYTE PTR [rax],al
   140007c25:	add    BYTE PTR [rax],al
   140007c27:	add    dh,al
   140007c29:	jl     0x140007c2b
   140007c2b:	add    BYTE PTR [rax],al
   140007c2d:	add    BYTE PTR [rax],al
   140007c2f:	add    BYTE PTR [rax+0x7c],ah
   140007c35:	add    BYTE PTR [rax],al
   140007c37:	add    BYTE PTR [rax+0x7c],cl
	...
   140007c46:	add    BYTE PTR [rax],al
   140007c48:	sbb    al,BYTE PTR [rax]
   140007c4a:	(bad)  
   140007c4b:	jb     0x140007cc2
   140007c4d:	outs   dx,BYTE PTR ds:[rsi]
   140007c4e:	rex.WX (bad) 
   140007c50:	jbe    0x140007cb3
   140007c52:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140007c54:	fs gs rex
   140007c57:	rex pop rcx
   140007c59:	rex.B
   140007c5a:	rex.W push rax
   140007c5c:	rex.RB
   140007c5d:	rex.X
   140007c5e:	rex.R push rsi
   140007c60:	(bad)  
   140007c61:	and    al,0x62
   140007c63:	(bad)  
   140007c64:	jae    0x140007ccf
   140007c66:	movsxd ebx,DWORD PTR [rdi+0x73]
   140007c69:	je     0x140007cdd
   140007c6b:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140007c72:	and    al,0x63
   140007c74:	push   0x745f7261
   140007c79:	jb     0x140007cdc
   140007c7b:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140007c83:	fs rex
   140007c85:	rex push rsi
   140007c87:	(bad)  
   140007c88:	and    al,0x61
   140007c8a:	ins    BYTE PTR es:[rdi],dx
   140007c8b:	ins    BYTE PTR es:[rdi],dx
   140007c8c:	outs   dx,DWORD PTR ds:[rsi]
   140007c8d:	movsxd esp,DWORD PTR [rcx+0x74]
   140007c90:	outs   dx,DWORD PTR ds:[rsi]
   140007c91:	jb     0x140007cd3
   140007c93:	rex.R
   140007c94:	xor    al,BYTE PTR [rax+0x40]
   140007c98:	jae    0x140007d0e
   140007c9a:	fs rex
   140007c9c:	rex
   140007c9d:	rex pop rdx
   140007c9f:	add    BYTE PTR [rcx],al
   140007ca1:	add    BYTE PTR [rdi],bh
   140007ca3:	(bad)  
   140007ca4:	xor    BYTE PTR [rdx+0x61],cl
   140007ca7:	jbe    0x140007d0a
   140007ca9:	rex.WR (bad) 
   140007cab:	jne    0x140007d1b
   140007cad:	movsxd ebp,DWORD PTR [rax+0x65]
   140007cb0:	jb     0x140007cf5
   140007cb2:	outs   dx,DWORD PTR ds:[rsi]
   140007cb3:	outs   dx,BYTE PTR ds:[rsi]
   140007cb4:	imul   sp,WORD PTR [rdi+0x40],0x5140
   140007cba:	rex.RB
   140007cbb:	rex.B
   140007cbc:	rex.B
   140007cbd:	rex push rax
   140007cbf:	rex.RB
   140007cc0:	rex.X pop rdi
   140007cc2:	push   rdi
   140007cc3:	rex pop rdx
   140007cc5:	add    BYTE PTR [rdx],al
   140007cc7:	add    BYTE PTR [rdi],bh
   140007cc9:	(bad)  
   140007cca:	xor    DWORD PTR [rdx+0x61],ecx
   140007ccd:	jbe    0x140007d30
   140007ccf:	rex.WR (bad) 
   140007cd1:	jne    0x140007d41
   140007cd3:	movsxd ebp,DWORD PTR [rax+0x65]
   140007cd6:	jb     0x140007d1b
   140007cd8:	outs   dx,DWORD PTR ds:[rsi]
   140007cd9:	outs   dx,BYTE PTR ds:[rsi]
   140007cda:	imul   sp,WORD PTR [rdi+0x40],0x5140
   140007ce0:	rex.RB
   140007ce1:	rex.B
   140007ce2:	rex.B
   140007ce3:	rex pop rax
   140007ce5:	pop    rdx
   140007ce6:	add    BYTE PTR [rax],al
   140007ce8:	adc    al,BYTE PTR [rax]
   140007cea:	(bad)  
   140007ceb:	addr32 gs je 0x140007d3c
   140007cef:	(bad)  
   140007cf0:	imul   ebp,DWORD PTR [rsi+0x43],0x7373616c
   140007cf7:	rex
   140007cf8:	rex.WX (bad) 
   140007cfa:	jbe    0x140007d5d
   140007cfc:	rex.WR (bad) 
   140007cfe:	jne    0x140007d6e
   140007d00:	movsxd ebp,DWORD PTR [rax+0x65]
   140007d03:	jb     0x140007d48
   140007d05:	outs   dx,DWORD PTR ds:[rsi]
   140007d06:	outs   dx,BYTE PTR ds:[rsi]
   140007d07:	imul   sp,WORD PTR [rdi+0x40],0x5140
   140007d0d:	rex.RB
   140007d0e:	rex.B
   140007d0f:	rex.B (bad) 
   140007d11:	push   r14
   140007d13:	(bad)  
   140007d14:	and    al,0x62
   140007d16:	(bad)  
   140007d17:	jae    0x140007d82
   140007d19:	movsxd ebx,DWORD PTR [rdi+0x73]
   140007d1c:	je     0x140007d90
   140007d1e:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140007d25:	and    al,0x63
   140007d27:	push   0x745f7261
   140007d2c:	jb     0x140007d8f
   140007d2e:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140007d36:	fs rex
   140007d38:	rex push rsi
   140007d3a:	(bad)  
   140007d3b:	and    al,0x61
   140007d3d:	ins    BYTE PTR es:[rdi],dx
   140007d3e:	ins    BYTE PTR es:[rdi],dx
   140007d3f:	outs   dx,DWORD PTR ds:[rsi]
   140007d40:	movsxd esp,DWORD PTR [rcx+0x74]
   140007d43:	outs   dx,DWORD PTR ds:[rsi]
   140007d44:	jb     0x140007d86
   140007d46:	rex.R
   140007d47:	xor    al,BYTE PTR [rax+0x40]
   140007d4b:	jae    0x140007dc1
   140007d4d:	fs rex
   140007d4f:	rex pop rax
   140007d51:	pop    rdx
   140007d52:	add    BYTE PTR [rax],al
   140007d54:	adc    al,0x0
   140007d56:	(bad)  
   140007d57:	addr32 gs je 0x140007dab
   140007d5b:	(bad)  
   140007d5c:	je     0x140007dc6
   140007d5e:	ins    BYTE PTR es:[rdi],dx
   140007d5f:	imul   esi,DWORD PTR [rbx+0x74],0x4072614a
   140007d66:	rex.WX (bad) 
   140007d68:	jbe    0x140007dcb
   140007d6a:	rex.WR (bad) 
   140007d6c:	jne    0x140007ddc
   140007d6e:	movsxd ebp,DWORD PTR [rax+0x65]
   140007d71:	jb     0x140007db6
   140007d73:	outs   dx,DWORD PTR ds:[rsi]
   140007d74:	outs   dx,BYTE PTR ds:[rsi]
   140007d75:	imul   sp,WORD PTR [rdi+0x40],0x5140
   140007d7b:	rex.RB
   140007d7c:	rex.B
   140007d7d:	rex.B (bad) 
   140007d7f:	push   r14
   140007d81:	(bad)  
   140007d82:	and    al,0x62
   140007d84:	(bad)  
   140007d85:	jae    0x140007df0
   140007d87:	movsxd ebx,DWORD PTR [rdi+0x73]
   140007d8a:	je     0x140007dfe
   140007d8c:	imul   ebp,DWORD PTR [rsi+0x67],0x3f554440
   140007d93:	and    al,0x63
   140007d95:	push   0x745f7261
   140007d9a:	jb     0x140007dfd
   140007d9c:	imul   esi,DWORD PTR [rbx+rsi*2+0x40],0x74734044
   140007da4:	fs rex
   140007da6:	rex push rsi
   140007da8:	(bad)  
   140007da9:	and    al,0x61
   140007dab:	ins    BYTE PTR es:[rdi],dx
   140007dac:	ins    BYTE PTR es:[rdi],dx
   140007dad:	outs   dx,DWORD PTR ds:[rsi]
   140007dae:	movsxd esp,DWORD PTR [rcx+0x74]
   140007db1:	outs   dx,DWORD PTR ds:[rsi]
   140007db2:	jb     0x140007df4
   140007db4:	rex.R
   140007db5:	xor    al,BYTE PTR [rax+0x40]
   140007db9:	jae    0x140007e2f
   140007dbb:	fs rex
   140007dbd:	rex push rax
   140007dbf:	rex.RB
   140007dc0:	rex.X pop rdi
   140007dc2:	push   rdi
   140007dc3:	rex pop rdx
   140007dc5:	add    BYTE PTR [rbx],cl
   140007dc7:	add    BYTE PTR [rdi],bh
   140007dc9:	addr32 gs je 0x140007e10
   140007dcd:	ins    DWORD PTR es:[rdi],dx
   140007dce:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73677241
   140007dd7:	rex
   140007dd8:	rex pop rcx
   140007dda:	pop    r8
   140007ddc:	pop    rax
   140007ddd:	pop    rdx
   140007dde:	add    BYTE PTR [rax],al
   140007de0:	and    BYTE PTR [rax],al
   140007de2:	(bad)  
   140007de3:	jae    0x140007e4a
   140007de5:	je     0x140007e4a
   140007de7:	outs   dx,DWORD PTR ds:[rsi]
   140007de8:	jo     0x140007e63
   140007dea:	rex.WX push rdx
   140007dec:	rex.RB
   140007ded:	rex
   140007dee:	rex pop rcx
   140007df0:	pop    r8
   140007df2:	rex.W
   140007df3:	rex pop rdx
   140007df5:	add    BYTE PTR [rdi],al
   140007df7:	add    BYTE PTR [rdi],bh
   140007df9:	(bad)  
   140007dfa:	fs fs push rsp
   140007dfd:	outs   dx,DWORD PTR ds:[rsi]
   140007dfe:	rex.XB ins DWORD PTR es:[rdi],dx
   140007e00:	imul   r13,QWORD PTR fs:[rsi+0x65],0x73677241
   140007e09:	rex
   140007e0a:	rex pop rcx
   140007e0c:	pop    r8
   140007e0e:	push   rax
   140007e0f:	rex.RB
   140007e10:	rex.X pop rdi
   140007e12:	push   rdi
   140007e13:	rex pop rdx
   140007e15:	add    BYTE PTR [rsi],bl
   140007e17:	add    BYTE PTR [rdi],bh
   140007e19:	jae    0x140007e80
   140007e1b:	je     0x140007e69
   140007e1d:	(bad)  
   140007e1e:	jne    0x140007e8e
   140007e20:	movsxd ebp,DWORD PTR [rax+0x65]
   140007e23:	jb     0x140007e73
   140007e25:	(bad)  
   140007e26:	ins    DWORD PTR es:[rdi],dx
   140007e27:	gs rex
   140007e29:	rex pop rcx
   140007e2b:	pop    r8
   140007e2d:	push   rax
   140007e2e:	rex.RB
   140007e2f:	rex.X pop rdi
   140007e31:	push   rdi
   140007e32:	rex pop rdx
   140007e34:	add    BYTE PTR [rax],al
   140007e36:	adc    DWORD PTR [rax],eax
   140007e38:	(bad)  
   140007e39:	addr32 gs je 0x140007e89
   140007e3d:	outs   dx,DWORD PTR ds:[rsi]
   140007e3e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007e41:	push   rdx
   140007e42:	jne    0x140007eb2
   140007e44:	imul   r14d,DWORD PTR [rdx+0x40],0x50415940
   140007e4c:	rex.RB
   140007e4d:	rex.X pop rdi
   140007e4f:	push   rdi
   140007e50:	pop    rax
   140007e51:	pop    rdx
   140007e52:	add    BYTE PTR [rax],al
   140007e54:	(bad)  
   140007e55:	add    BYTE PTR [rdi],bh
   140007e57:	jae    0x140007ebe
   140007e59:	je     0x140007ea7
   140007e5b:	outs   dx,DWORD PTR ds:[rsi]
   140007e5c:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007e5f:	push   rdx
   140007e60:	jne    0x140007ed0
   140007e62:	imul   r14d,DWORD PTR [rdx+0x40],0x58415940
   140007e6a:	push   rax
   140007e6b:	rex.RB
   140007e6c:	rex.X pop rdi
   140007e6e:	push   rdi
   140007e6f:	rex pop rdx
   140007e71:	add    BYTE PTR [rdx+0x61],ch
   140007e74:	jbe    0x140007ed7
   140007e76:	pop    rdi
   140007e77:	ins    BYTE PTR es:[rdi],dx
   140007e78:	(bad)  
   140007e79:	jne    0x140007ee9
   140007e7b:	movsxd ebp,DWORD PTR [rax+0x65]
   140007e7e:	jb     0x140007eae
   140007e80:	fs ins BYTE PTR es:[rdi],dx
   140007e82:	ins    BYTE PTR es:[rdi],dx
   140007e83:	add    BYTE PTR [rcx+0x2],ch
   140007e86:	rex.RXB
   140007e87:	gs je  0x140007ed7
   140007e8a:	outs   dx,DWORD PTR ds:[rsi]
   140007e8b:	fs jne 0x140007efa
   140007e8e:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140007e98:	add    BYTE PTR [rax],al
   140007e9a:	rex.WXB
   140007e9b:	rex.RB push r10
   140007e9d:	rex.WRX
   140007e9e:	rex.RB
   140007e9f:	xor    r14,QWORD PTR [rdx]
   140007ea2:	cs fs ins BYTE PTR es:[rdi],dx
   140007ea5:	ins    BYTE PTR es:[rdi],dx
   140007ea6:	add    BYTE PTR [rax],al
   140007ea8:	movabs eax,ds:0x646e695766654400
   140007eb1:	outs   dx,DWORD PTR ds:[rsi]
   140007eb2:	ja     0x140007f04
   140007eb4:	jb     0x140007f25
   140007eb6:	movsxd edx,DWORD PTR [rdi+0x0]
   140007eb9:	add    BYTE PTR [rbp+0x67655202],cl
   140007ebf:	imul   esi,DWORD PTR [rbx+0x74],0x6c437265
   140007ec6:	(bad)  
   140007ec7:	jae    0x140007f3c
   140007ec9:	rex.RB js 0x140007f23
   140007ecc:	add    BYTE PTR [rax],al
   140007ece:	jno    0x140007ed0
   140007ed0:	rex.XB jb 0x140007f38
   140007ed3:	(bad)  
   140007ed4:	je     0x140007f3b
   140007ed6:	push   rdi
   140007ed7:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   140007ede:	push   rdi
   140007edf:	add    BYTE PTR [rcx+0x2],dl
   140007ee2:	rex.WRB
   140007ee3:	gs jae 0x140007f59
   140007ee6:	(bad)  
   140007ee7:	rex.X outs dx,DWORD PTR gs:[esi]
   140007eeb:	js     0x140007f44
   140007eed:	add    BYTE PTR [rcx],cl
   140007eef:	add    DWORD PTR [rsi+0x69],eax
   140007ef2:	outs   dx,BYTE PTR ds:[rsi]
   140007ef3:	fs push rdi
   140007ef5:	imul   ebp,DWORD PTR [rsi+0x64],0x57776f
   140007efc:	push   rbp
   140007efd:	push   rbx
   140007efe:	rex.RB push r10
   140007f00:	xor    esi,DWORD PTR [rdx]
   140007f02:	cs fs ins BYTE PTR es:[rdi],dx
   140007f05:	ins    BYTE PTR es:[rdi],dx
   140007f06:	add    BYTE PTR [rax],al
   140007f08:	leave  
   140007f09:	add    bh,BYTE PTR [rdi]
   140007f0b:	pop    rdi
   140007f0c:	pop    rax
   140007f0d:	(bad)
   140007f12:	ins    BYTE PTR es:[rdi],dx
   140007f13:	ins    BYTE PTR es:[rdi],dx
   140007f14:	outs   dx,DWORD PTR ds:[rsi]
   140007f15:	movsxd eax,DWORD PTR [rax+0x73]
   140007f18:	je     0x140007f7e
   140007f1a:	rex
   140007f1b:	rex pop rcx
   140007f1d:	pop    r8
   140007f1f:	pop    rax
   140007f20:	pop    rdx
   140007f21:	add    ah,cl
   140007f23:	add    bh,BYTE PTR [rdi]
   140007f25:	pop    rdi
   140007f26:	pop    rax
   140007f27:	ins    BYTE PTR es:[rdi],dx
   140007f28:	outs   dx,BYTE PTR gs:[rsi]
   140007f2a:	addr32 je 0x140007f95
   140007f2d:	pop    rdi
   140007f2e:	gs jb  0x140007fa3
   140007f31:	outs   dx,DWORD PTR ds:[rsi]
   140007f32:	jb     0x140007f74
   140007f34:	jae    0x140007faa
   140007f36:	fs rex
   140007f38:	rex pop rcx
   140007f3a:	pop    r8
   140007f3c:	push   rax
   140007f3d:	rex.RB
   140007f3e:	rex.X
   140007f3f:	rex.R
   140007f40:	rex pop rdx
   140007f42:	add    BYTE PTR [rax],al
   140007f44:	int    0x2
   140007f46:	(bad)  
   140007f47:	pop    rdi
   140007f48:	pop    rax
   140007f49:	outs   dx,DWORD PTR ds:[rsi]
   140007f4a:	jne    0x140007fc0
   140007f4c:	pop    rdi
   140007f4d:	outs   dx,DWORD PTR ds:[rsi]
   140007f4e:	pop    di
   140007f50:	jb     0x140007fb3
   140007f52:	outs   dx,BYTE PTR ds:[rsi]
   140007f53:	addr32 gs rex jae 0x140007fcc
   140007f58:	fs rex
   140007f5a:	rex pop rcx
   140007f5c:	pop    r8
   140007f5e:	push   rax
   140007f5f:	rex.RB
   140007f60:	rex.X
   140007f61:	rex.R
   140007f62:	rex pop rdx
   140007f64:	add    BYTE PTR [rax],al
   140007f66:	mov    al,0x2
   140007f68:	(bad)  
   140007f69:	pop    rdi
   140007f6a:	push   rbx
   140007f6b:	jns    0x140007fe0
   140007f6d:	gs jb  0x140007fe2
   140007f70:	outs   dx,DWORD PTR ds:[rsi]
   140007f71:	jb     0x140007fd2
   140007f73:	ins    DWORD PTR es:[rdi],dx
   140007f74:	(bad)  
   140007f75:	jo     0x140007fb7
   140007f77:	jae    0x140007fed
   140007f79:	fs rex
   140007f7b:	rex pop rcx
   140007f7d:	push   r8
   140007f7f:	rex.RB
   140007f80:	rex.X
   140007f81:	rex.R
   140007f82:	rex.W
   140007f83:	rex pop rdx
   140007f85:	add    ch,al
   140007f87:	add    bh,BYTE PTR [rdi]
   140007f89:	pop    rdi
   140007f8a:	push   rdi
   140007f8b:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   140007f92:	pop    rdi
   140007f93:	ins    DWORD PTR es:[rdi],dx
   140007f94:	(bad)  
   140007f95:	jo     0x140007fd7
   140007f97:	jae    0x14000800d
   140007f99:	fs rex
   140007f9b:	rex pop rcx
   140007f9d:	push   r8
   140007f9f:	rex.RB
   140007fa0:	rex.X
   140007fa1:	rex.R
   140007fa2:	rex.W
   140007fa3:	rex pop rdx
   140007fa5:	add    BYTE PTR [rbp+0x53],cl
   140007fa8:	push   rsi
   140007fa9:	rex.XB push r8
   140007fab:	xor    DWORD PTR [rdx],esi
   140007fad:	xor    BYTE PTR [rsi],ch
   140007faf:	fs ins BYTE PTR es:[rdi],dx
   140007fb1:	ins    BYTE PTR es:[rdi],dx
   140007fb2:	add    BYTE PTR [rax],al
   140007fb4:	(bad)  
   140007fb5:	add    al,0x5f
   140007fb7:	jo     0x14000802e
   140007fb9:	jb     0x140008020
   140007fbb:	movsxd esp,DWORD PTR [rcx+0x6c]
   140007fbe:	ins    BYTE PTR es:[rdi],dx
   140007fbf:	add    BYTE PTR [rax+0x0],dh
   140007fc2:	(bad)  
   140007fc3:	(bad)  
   140007fc4:	xor    al,BYTE PTR [rax+0x59]
   140007fc7:	push   r8
   140007fc9:	rex.RB
   140007fca:	pop    r8
   140007fcc:	pop    rdi
   140007fcd:	rex.WXB
   140007fce:	rex pop rdx
   140007fd0:	add    BYTE PTR [rax],al
   140007fd2:	jb     0x140007fd4
   140007fd4:	(bad)  
   140007fd5:	(bad)  
   140007fd6:	xor    eax,DWORD PTR [rax+0x59]
   140007fd9:	pop    r8
   140007fdb:	push   rax
   140007fdc:	rex.RB
   140007fdd:	pop    r8
   140007fdf:	rex pop rdx
   140007fe1:	add    BYTE PTR [rdi+0x6d656d06],dh
   140007fe7:	ins    DWORD PTR es:[rdi],dx
   140007fe8:	outs   dx,DWORD PTR ds:[rsi]
   140007fe9:	jbe    0x140008050
   140007feb:	add    dl,bl
   140007fed:	add    bl,BYTE PTR [rdi+0x68]
   140007ff0:	jns    0x140008062
   140007ff2:	outs   dx,DWORD PTR ds:[rsi]
   140007ff3:	je     0x140007ff5
   140007ff5:	add    BYTE PTR [rbp+0x1],al
   140007ff8:	pop    rdi
   140007ff9:	rex.XB js 0x140008074
   140007ffc:	push   rsp
   140007ffd:	push   0x45776f72
   140008002:	js     0x140008067
   140008004:	gs jo  0x14000807b
   140008007:	imul   ebp,DWORD PTR [rdi+0x6e],0x1620000
   14000800e:	pop    rdi
   14000800f:	pop    rdi
   140008010:	rex.XB js 0x14000808b
   140008013:	rex.RX jb 0x140008077
   140008016:	ins    DWORD PTR es:[rdi],dx
   140008017:	gs rex.W (bad) 
   14000801a:	outs   dx,BYTE PTR ds:[rsi]
   14000801b:	fs ins BYTE PTR es:[rdi],dx
   14000801d:	gs jb  0x140008053
   140008020:	add    BYTE PTR [rax],al
   140008022:	mov    ah,0x6
   140008024:	ins    DWORD PTR es:[rdi],dx
   140008025:	gs ins DWORD PTR es:[rdi],dx
   140008027:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000802a:	add    BYTE PTR [rax],al
   14000802c:	mov    ch,0x6
   14000802e:	ins    DWORD PTR es:[rdi],dx
   14000802f:	gs ins DWORD PTR es:[rdi],dx
   140008031:	movsxd esi,DWORD PTR [rax+0x79]
   140008034:	add    BYTE PTR [rax],al
   140008036:	addr32 (bad) 
   140008038:	ja     0x14000809d
   14000803a:	jae    0x1400080ae
   14000803c:	movsxd ebp,DWORD PTR [rax+0x72]
   14000803f:	add    BYTE PTR [rbp+0x53],cl
   140008042:	push   rsi
   140008043:	rex.XB push r10
   140008045:	xor    DWORD PTR [rdx],esi
   140008047:	xor    BYTE PTR [rsi],ch
   140008049:	fs ins BYTE PTR es:[rdi],dx
   14000804b:	ins    BYTE PTR es:[rdi],dx
   14000804c:	add    BYTE PTR [rax],al
   14000804e:	pop    rbx
   14000804f:	add    ebx,DWORD PTR [rdi+0x6c]
   140008052:	outs   dx,DWORD PTR ds:[rsi]
   140008053:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008056:	mov    DWORD PTR [rdi+rbx*2],0x6f6c6e75
   14000805d:	movsxd ebp,DWORD PTR [rbx+0x0]
   140008060:	or     DWORD PTR [rdx],eax
   140008062:	pop    rdi
   140008063:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008066:	ins    BYTE PTR es:[rdi],dx
   140008067:	outs   dx,DWORD PTR ds:[rsi]
   140008068:	movsxd ebx,DWORD PTR [rdi+0x63]
   14000806b:	jb     0x1400080e1
   14000806d:	add    BYTE PTR [rdi+0x645f5f01],bl
   140008073:	ins    BYTE PTR es:[rdi],dx
   140008074:	ins    BYTE PTR es:[rdi],dx
   140008075:	outs   dx,DWORD PTR ds:[rsi]
   140008076:	outs   dx,BYTE PTR ds:[rsi]
   140008077:	gs js  0x1400080e3
   14000807a:	je     0x14000807c
   14000807c:	pop    rsp
   14000807d:	add    DWORD PTR [rdi+0x5f],ebx
   140008080:	rex.XB pop r15
   140008082:	jae    0x1400080f4
   140008084:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140008088:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000808f:	ins    BYTE PTR es:[rdi],dx
   140008090:	gs jb  0x140008093
   140008093:	add    BYTE PTR [rdx],al
   140008095:	add    al,0x5f
   140008097:	outs   dx,DWORD PTR ds:[rsi]
   140008098:	outs   dx,BYTE PTR ds:[rsi]
   140008099:	gs js  0x140008105
   14000809c:	je     0x14000809e
   14000809e:	pop    rax
   14000809f:	add    DWORD PTR [rdi+0x58],ebx
   1400080a2:	movsxd esi,DWORD PTR [rax+0x74]
   1400080a5:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0x18d0072
   1400080ae:	pop    rdi
   1400080af:	pop    rdi
   1400080b0:	movsxd esi,DWORD PTR [rdx+0x74]
   1400080b3:	rex.RXB
   1400080b4:	gs je  0x14000810a
   1400080b7:	push   0x6957776f
   1400080bc:	outs   dx,BYTE PTR ds:[rsi]
   1400080bd:	outs   dx,DWORD PTR fs:[rsi]
   1400080bf:	ja     0x14000810e
   1400080c1:	outs   dx,DWORD PTR ds:[rsi]
   1400080c2:	fs add BYTE PTR gs:[rax],al
   1400080c6:	repnz add DWORD PTR [rdi+0x61],ebx
   1400080ca:	ins    DWORD PTR es:[rdi],dx
   1400080cb:	jae    0x140008134
   1400080cd:	pop    rdi
   1400080ce:	gs js  0x14000813a
   1400080d1:	je     0x1400080d3
   1400080d3:	add    BYTE PTR [rdi+0x675f5f01],ah
   1400080d9:	gs je  0x140008149
   1400080dc:	(bad)  
   1400080dd:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   1400080e4:	(bad)  
   1400080e5:	add    DWORD PTR [rdi+0x5f],ebx
   1400080e8:	jae    0x14000814f
   1400080ea:	je     0x14000814b
   1400080ec:	(bad)  
   1400080ed:	jo     0x14000815f
   1400080ef:	pop    rdi
   1400080f0:	je     0x14000816b
   1400080f2:	jo     0x140008159
   1400080f4:	add    BYTE PTR [rax],al
   1400080f6:	sbb    BYTE PTR [rsi],al
   1400080f8:	gs js  0x140008164
   1400080fb:	je     0x1400080fd
   1400080fd:	add    BYTE PTR [rax+0x2],bl
   140008100:	pop    rdi
   140008101:	gs js  0x14000816d
   140008104:	je     0x140008106
   140008106:	or     al,BYTE PTR [rdx]
   140008108:	pop    rdi
   140008109:	movsxd esp,DWORD PTR [rbp+0x78]
   14000810c:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0303
   140008114:	jae    0x140008183
   140008116:	(bad)
   14000811b:	add    BYTE PTR fs:[rax],al
   14000811e:	sbb    al,BYTE PTR [rdx]
   140008120:	pop    rdi
   140008121:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140008124:	imul   sp,WORD PTR [rdi+0x74],0x7268
   14000812a:	gs (bad) 
   14000812c:	fs ins BYTE PTR es:[rdi],dx
   14000812e:	outs   dx,DWORD PTR ds:[rsi]
   14000812f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140008132:	gs add al,dl
   140008135:	add    DWORD PTR [rdi+0x5f],ebx
   140008138:	jae    0x14000819f
   14000813a:	je     0x1400081b1
   14000813c:	jae    0x1400081a3
   14000813e:	jb     0x1400081ad
   140008140:	(bad)  
   140008141:	je     0x1400081ab
   140008143:	gs jb  0x1400081b8
   140008146:	add    BYTE PTR [rax],al
   140008148:	loop   0x14000814c
   14000814a:	pop    rdi
   14000814b:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140008152:	ins    DWORD PTR es:[rdi],dx
   140008153:	pop    rdi
   140008154:	gs add cl,ah
   140008157:	add    bl,BYTE PTR [rdi+0x69]
   14000815a:	outs   dx,BYTE PTR ds:[rsi]
   14000815b:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0xe9006d72
   140008163:	add    DWORD PTR [rdi+0x61],ebx
   140008166:	movsxd ebp,DWORD PTR [rbp+0x64]
   140008169:	ins    BYTE PTR es:[rdi],dx
   14000816a:	outs   dx,BYTE PTR ds:[rsi]
   14000816b:	add    BYTE PTR [rax+0x2],bh
   14000816e:	pop    rdi
   14000816f:	ins    WORD PTR es:[rdi],dx
   140008171:	outs   dx,DWORD PTR ds:[rsi]
   140008172:	fs add BYTE PTR gs:[rax],al
   140008176:	sbb    DWORD PTR [rdx],eax
   140008178:	pop    rdi
   140008179:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000817c:	ins    DWORD PTR es:[rdi],dx
   14000817d:	outs   dx,DWORD PTR ds:[rsi]
   14000817e:	fs add BYTE PTR gs:[rax],al
   140008182:	xor    eax,DWORD PTR [rcx]
   140008184:	(bad)  
   140008185:	je     0x1400081ec
   140008187:	jb     0x1400081f6
   140008189:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140008190:	pop    rcx
   140008191:	pop    r8
   140008193:	pop    rax
   140008194:	pop    rdx
   140008195:	add    BYTE PTR [rbx],bl
   140008197:	add    DWORD PTR [rdi],edi
   140008199:	pop    rdi
   14000819a:	je     0x140008215
   14000819c:	jo     0x140008203
   14000819e:	pop    rdi
   14000819f:	imul   ebp,DWORD PTR [rsi+0x66],0x74645f6f
   1400081a6:	outs   dx,DWORD PTR ds:[rsi]
   1400081a7:	jb     0x140008208
   1400081a9:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   1400081b0:	ins    BYTE PTR es:[rdi],dx
   1400081b1:	pop    rdi
   1400081b2:	ins    DWORD PTR es:[rdi],dx
   1400081b3:	gs je  0x14000821e
   1400081b6:	outs   dx,DWORD PTR ds:[rsi]
   1400081b7:	fs rex je 0x140008234
   1400081bb:	jo     0x140008222
   1400081bd:	pop    rdi
   1400081be:	imul   ebp,DWORD PTR [rsi+0x66],0x5140406f
   1400081c5:	rex.RB
   1400081c6:	rex.B
   1400081c7:	pop    r8
   1400081c9:	pop    rax
   1400081ca:	pop    rdx
   1400081cb:	add    BYTE PTR [rcx+0x635f5f01],bl
   1400081d1:	jb     0x140008247
   1400081d3:	push   rbx
   1400081d4:	gs je  0x14000822c
   1400081d7:	outs   dx,BYTE PTR ds:[rsi]
   1400081d8:	push   0x6c646e61
   1400081dd:	gs fs rex.RB js 0x140008245
   1400081e2:	gs jo  0x140008259
   1400081e5:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400081ec:	gs jb  0x1400081ef
   1400081ef:	add    BYTE PTR [rip+0x636e4501],ah        # 0x1a36ec6f6
   1400081f5:	outs   dx,DWORD PTR ds:[rsi]
   1400081f6:	fs gs push rax
   1400081f9:	outs   dx,DWORD PTR ds:[rsi]
   1400081fa:	imul   ebp,DWORD PTR [rsi+0x74],0xff007265
   140008201:	add    BYTE PTR [rbp+riz*2+0x63],al
   140008205:	outs   dx,DWORD PTR ds:[rsi]
   140008206:	fs gs push rax
   140008209:	outs   dx,DWORD PTR ds:[rsi]
   14000820a:	imul   ebp,DWORD PTR [rsi+0x74],0x30007265
   140008211:	add    al,0x51
   140008213:	jne    0x14000827a
   140008215:	jb     0x140008290
   140008217:	push   rax
   140008218:	gs jb  0x140008281
   14000821b:	outs   dx,DWORD PTR ds:[rsi]
   14000821c:	jb     0x14000828b
   14000821e:	(bad)  
   14000821f:	outs   dx,BYTE PTR ds:[rsi]
   140008220:	movsxd esp,DWORD PTR [rbp+0x43]
   140008223:	outs   dx,DWORD PTR ds:[rsi]
   140008224:	jne    0x140008294
   140008226:	je     0x14000828d
   140008228:	jb     0x14000822a
   14000822a:	adc    BYTE PTR [rdx],al
   14000822c:	rex.RXB
   14000822d:	gs je  0x140008273
   140008230:	jne    0x1400082a4
   140008232:	jb     0x140008299
   140008234:	outs   dx,BYTE PTR ds:[rsi]
   140008235:	je     0x140008287
   140008237:	jb     0x1400082a8
   140008239:	movsxd esp,DWORD PTR [rbp+0x73]
   14000823c:	jae    0x140008287
   14000823e:	add    BYTE PTR fs:[rdx+rax*1],dl
   140008242:	rex.RXB
   140008243:	gs je  0x140008289
   140008246:	jne    0x1400082ba
   140008248:	jb     0x1400082af
   14000824a:	outs   dx,BYTE PTR ds:[rsi]
   14000824b:	je     0x1400082a1
   14000824d:	push   0x64616572
   140008252:	rex.WB
   140008253:	add    BYTE PTR fs:[rax],al
   140008256:	fld    QWORD PTR [rdx]
   140008258:	rex.RXB
   140008259:	gs je  0x1400082af
   14000825c:	jns    0x1400082d1
   14000825e:	je     0x1400082c5
   140008260:	ins    DWORD PTR es:[rdi],dx
   140008261:	push   rsp
   140008262:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140008269:	ins    BYTE PTR es:[rdi],dx
   14000826a:	gs push rsp
   14000826c:	.byte 0x69
   14000826d:	ins    DWORD PTR es:[rdi],dx
   14000826e:	gs
	...

Disassembly of section .data:

0000000140009000 <.data>:
   140009000:	js     0x140009067
   140009002:	add    BYTE PTR [rax+0x1],al
   140009005:	add    BYTE PTR [rax],al
   140009007:	add    al,cl
   140009009:	add    BYTE PTR gs:[rax+0x1],al
   14000900d:	add    BYTE PTR [rax],al
   14000900f:	add    BYTE PTR [rax],ch
   140009011:	data16 add BYTE PTR [rax+0x1],al
   140009015:	add    BYTE PTR [rax],al
   140009017:	add    BYTE PTR [rax+0x1400067],bh
   14000901d:	add    BYTE PTR [rax],al
   14000901f:	add    al,cl
   140009021:	add    BYTE PTR [eax+0x1],al
   140009025:	add    BYTE PTR [rax],al
   140009027:	add    al,bl
   140009029:	add    BYTE PTR [eax+0x1],al
   14000902d:	add    BYTE PTR [rax],al
   14000902f:	add    BYTE PTR [rbp-0x68],dh
   140009032:	add    BYTE PTR [rax],al
   140009034:	add    DWORD PTR [rax],eax
   140009036:	add    BYTE PTR [rax],al
   140009038:	(bad)  
   140009039:	(bad)  
   14000903a:	(bad)  
   14000903b:	(bad)  
   14000903c:	(bad)  
   14000903d:	(bad)  
   14000903e:	(bad)  
   14000903f:	push   QWORD PTR [rdx]
   140009041:	movabs ds:0x5dcd00002b992ddf,al
   14000904a:	and    dl,dl
   14000904c:	data16 (bad) 
   14000904e:	(bad)  
   14000904f:	inc    DWORD PTR [rax]
   140009051:	push   0x14000
	...
   14000905e:	add    BYTE PTR [rax],al
   140009060:	cs (bad) 
   140009062:	push   r14
   140009064:	gs jb  0x1400090d9
   140009067:	outs   dx,DWORD PTR ds:[rsi]
   140009068:	jb     0x1400090c9
   14000906a:	movsxd esp,DWORD PTR [rcx+0x74]
   14000906d:	outs   dx,DWORD PTR gs:[esi]
   140009070:	jb     0x1400090eb
   140009072:	rex jae 0x1400090e9
   140009075:	fs rex
   140009077:	add    BYTE PTR [rax],al
   14000907a:	add    BYTE PTR [rax],al
   14000907c:	add    BYTE PTR [rax],al
   14000907e:	add    BYTE PTR [rax],al
   140009080:	add    BYTE PTR [rax+0x0],ch
   140009083:	rex add DWORD PTR [rax],eax
	...
   14000908e:	add    BYTE PTR [rax],al
   140009090:	cs (bad) 
   140009092:	push   r14
   140009094:	pop    rdi
   140009095:	rex.RXB
   140009096:	outs   dx,BYTE PTR gs:[rsi]
   140009098:	gs jb  0x140009104
   14000909b:	movsxd ebx,DWORD PTR [rdi+0x65]
   14000909e:	jb     0x140009112
   1400090a0:	outs   dx,DWORD PTR ds:[rsi]
   1400090a1:	jb     0x140009102
   1400090a3:	movsxd esp,DWORD PTR [rcx+0x74]
   1400090a6:	outs   dx,DWORD PTR gs:[esi]
   1400090a9:	jb     0x140009124
   1400090ab:	rex jae 0x140009122
   1400090ae:	fs rex
   1400090b0:	add    BYTE PTR [rax],al
   1400090b3:	add    BYTE PTR [rax],al
   1400090b5:	add    BYTE PTR [rax],al
   1400090b7:	add    BYTE PTR [rax],al
   1400090b9:	push   0x14000
	...
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	cs (bad) 
   1400090ca:	push   r14
   1400090cc:	pop    rdi
   1400090cd:	rex.WB outs dx,DWORD PTR ds:[rsi]
   1400090cf:	jae    0x140009145
   1400090d1:	jb     0x140009138
   1400090d3:	(bad)  
   1400090d4:	ins    DWORD PTR es:[rdi],dx
   1400090d5:	pop    rdi
   1400090d6:	gs jb  0x14000914b
   1400090d9:	outs   dx,DWORD PTR ds:[rsi]
   1400090da:	jb     0x14000913b
   1400090dc:	movsxd esp,DWORD PTR [rcx+0x74]
   1400090df:	outs   dx,DWORD PTR gs:[esi]
   1400090e2:	jb     0x14000915d
   1400090e4:	rex jae 0x14000915b
   1400090e7:	fs rex
   1400090e9:	add    BYTE PTR [rax],al
   1400090ec:	add    BYTE PTR [rax],al
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	add    BYTE PTR [rax+0x0],ch
   1400090f3:	rex add DWORD PTR [rax],eax
	...
   1400090fe:	add    BYTE PTR [rax],al
   140009100:	cs (bad) 
   140009102:	push   r14
   140009104:	pop    rdi
   140009105:	push   rbx
   140009106:	jns    0x14000917b
   140009108:	je     0x14000916f
   14000910a:	ins    DWORD PTR es:[rdi],dx
   14000910b:	pop    rdi
   14000910c:	gs jb  0x140009181
   14000910f:	outs   dx,DWORD PTR ds:[rsi]
   140009110:	jb     0x140009171
   140009112:	movsxd esp,DWORD PTR [rcx+0x74]
   140009115:	outs   dx,DWORD PTR gs:[esi]
   140009118:	jb     0x140009193
   14000911a:	rex jae 0x140009191
   14000911d:	fs rex
   14000911f:	add    BYTE PTR [rax],al
   140009122:	add    BYTE PTR [rax],al
   140009124:	add    BYTE PTR [rax],al
   140009126:	add    BYTE PTR [rax],al
   140009128:	add    BYTE PTR [rax+0x0],ch
   14000912b:	rex add DWORD PTR [rax],eax
	...
   140009136:	add    BYTE PTR [rax],al
   140009138:	cs (bad) 
   14000913a:	push   r14
   14000913c:	je     0x1400091b7
   14000913e:	jo     0x1400091a5
   140009140:	pop    rdi
   140009141:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

000000014000a000 <.pdata>:
   14000a000:	adc    BYTE PTR [rax],0x0
   14000a003:	add    BYTE PTR [rbx-0x37fffff0],dl
   14000a009:	jne    0x14000a00b
   14000a00b:	add    BYTE PTR [rax-0x38fffff0],ah
   14000a011:	adc    BYTE PTR [rax],al
   14000a013:	add    ah,al
   14000a015:	jae    0x14000a017
   14000a017:	add    al,dl
   14000a019:	adc    BYTE PTR [rax],al
   14000a01b:	add    BYTE PTR [rax],cl
   14000a01d:	adc    DWORD PTR [rax],eax
   14000a01f:	add    ah,bl
   14000a021:	jae    0x14000a023
   14000a023:	add    BYTE PTR [rax],dl
   14000a025:	adc    DWORD PTR [rax],eax
   14000a027:	add    BYTE PTR [rax+0x11],cl
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	in     al,0x73
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	push   rax
   14000a031:	adc    DWORD PTR [rax],eax
   14000a033:	add    BYTE PTR [rsi-0x2fffffef],bl
   14000a039:	jne    0x14000a03b
   14000a03b:	add    BYTE PTR [rax-0x16ffffee],dh
   14000a041:	adc    al,0x0
   14000a043:	add    BYTE PTR [rsp+rsi*2+0x14f00000],bl
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	push   rcx
   14000a04d:	adc    eax,0x75380000
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	nop
   14000a055:	adc    eax,0x15c70000
   14000a05a:	add    BYTE PTR [rax],al
   14000a05c:	int3   
   14000a05d:	jae    0x14000a05f
   14000a05f:	add    al,ah
   14000a061:	adc    eax,0x160b0000
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	or     al,0x74
   14000a06a:	add    BYTE PTR [rax],al
   14000a06c:	adc    BYTE PTR [rsi],dl
   14000a06e:	add    BYTE PTR [rax],al
   14000a070:	xor    BYTE PTR [rsi],dl
   14000a072:	add    BYTE PTR [rax],al
   14000a074:	xor    BYTE PTR [rbp+0x0],dh
   14000a077:	add    BYTE PTR [rax],dh
   14000a079:	(bad)  
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	adc    BYTE PTR [rsi],0x0
   14000a07f:	add    BYTE PTR [rbp+rsi*2+0x0],al
   14000a083:	add    BYTE PTR [rax-0x5fffffea],al
   14000a089:	(bad)  
   14000a08a:	add    BYTE PTR [rax],al
   14000a08c:	(bad)  
   14000a08d:	jae    0x14000a08f
   14000a08f:	add    BYTE PTR [rax-0x3fffffea],ah
   14000a095:	(bad)  
   14000a096:	add    BYTE PTR [rax],al
   14000a098:	add    al,0x74
   14000a09a:	add    BYTE PTR [rax],al
   14000a09c:	adc    BYTE PTR [rdi],0x0
   14000a09f:	add    BYTE PTR [rax+0x70000017],dh
   14000a0a5:	jbe    0x14000a0a7
   14000a0a7:	add    BYTE PTR [rax-0x1fffffe9],dh
   14000a0ad:	(bad)  
   14000a0ae:	add    BYTE PTR [rax],al
   14000a0b0:	loopne 0x14000a128
   14000a0b2:	add    BYTE PTR [rax],al
   14000a0b4:	loopne 0x14000a0cd
   14000a0b6:	add    BYTE PTR [rax],al
   14000a0b8:	adc    BYTE PTR [rax],bl
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	test   al,0x76
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	add    BYTE PTR [rcx],bl
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	push   rbp
   14000a0c5:	sbb    DWORD PTR [rax],eax
   14000a0c7:	add    BYTE PTR [rbx+rsi*2+0x19600000],bh
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	mov    ch,0x19
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	sub    BYTE PTR [rbp+0x0],dh
   14000a0d7:	add    al,al
   14000a0d9:	sbb    DWORD PTR [rax],eax
   14000a0db:	add    BYTE PTR [rip+0xfffffffffc00001a],dl        # 0x13c00a0fb
   14000a0e1:	jae    0x14000a0e3
   14000a0e3:	add    BYTE PTR [rax+0x1a],dh
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	cld    
   14000a0e9:	sbb    al,BYTE PTR [rax]
   14000a0eb:	add    ah,ch
   14000a0ed:	jae    0x14000a0ef
   14000a0ef:	add    BYTE PTR [rax],al
   14000a0f1:	sbb    eax,DWORD PTR [rax]
   14000a0f3:	add    BYTE PTR [rdi+0x1b],ah
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	nop
   14000a0f9:	je     0x14000a0fb
   14000a0fb:	add    BYTE PTR [rax],dh
   14000a0fd:	sbb    al,0x0
   14000a0ff:	add    BYTE PTR [rax+0x1c],cl
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	sub    BYTE PTR [rbx+0x0],dh
   14000a107:	add    BYTE PTR [rax+0x1c],cl
   14000a10a:	add    BYTE PTR [rax],al
   14000a10c:	(bad)  
   14000a10d:	sbb    al,0x0
   14000a10f:	add    BYTE PTR [rax],dh
   14000a111:	jae    0x14000a113
   14000a113:	add    dh,dl
   14000a115:	sbb    al,0x0
   14000a117:	add    bh,dl
   14000a119:	sbb    al,0x0
   14000a11b:	add    BYTE PTR [rax+0x73],cl
   14000a11e:	add    BYTE PTR [rax],al
   14000a120:	xlat   BYTE PTR ds:[rbx]
   14000a121:	sbb    al,0x0
   14000a123:	add    ch,ah
   14000a125:	sbb    al,0x0
   14000a127:	add    BYTE PTR [rax+0x73],bl
   14000a12a:	add    BYTE PTR [rax],al
   14000a12c:	lock sbb al,0x0
   14000a12f:	add    BYTE PTR [rbx+0x1d],bl
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	rex.W outs dx,DWORD PTR ds:[rsi]
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	sbb    BYTE PTR [rip+0x1da80000],0x0        # 0x15da8a13f
   14000a13f:	add    BYTE PTR [rsi+rbp*2+0x0],dl
   14000a143:	add    BYTE PTR [rax-0x27ffffe3],dh
   14000a149:	sbb    eax,0x6ee00000
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	movabs al,ds:0xb000001fd100001f
   14000a159:	imul   eax,DWORD PTR [rax],0x0
   14000a15c:	loopne 0x14000a17d
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	sbb    al,0x20
   14000a162:	add    BYTE PTR [rax],al
   14000a164:	mov    eax,0x2000006b
   14000a169:	and    BYTE PTR [rax],al
   14000a16b:	add    BYTE PTR [rax+0x20],cl
   14000a16e:	add    BYTE PTR [rax],al
   14000a170:	lock outs dx,BYTE PTR ds:[rsi]
   14000a172:	add    BYTE PTR [rax],al
   14000a174:	push   rax
   14000a175:	and    BYTE PTR [rax],al
   14000a177:	add    ah,al
   14000a179:	and    BYTE PTR [rax],al
   14000a17b:	add    BYTE PTR [rax+0x73],bh
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	shl    BYTE PTR [rax],1
   14000a182:	add    BYTE PTR [rax],al
   14000a184:	cmp    esp,DWORD PTR [rcx]
   14000a186:	add    BYTE PTR [rax],al
   14000a188:	in     al,dx
   14000a189:	jno    0x14000a18b
   14000a18b:	add    BYTE PTR [rax+0x21],ah
   14000a18e:	add    BYTE PTR [rax],al
   14000a190:	(bad)  
   14000a191:	and    DWORD PTR [rax],eax
   14000a193:	add    BYTE PTR [rax+0x72],cl
   14000a196:	add    BYTE PTR [rax],al
   14000a198:	and    al,BYTE PTR [rax]
   14000a19b:	add    BYTE PTR [rdx+0x22],bh
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	nop
   14000a1a1:	outs   dx,DWORD PTR ds:[rsi]
   14000a1a2:	add    BYTE PTR [rax],al
   14000a1a4:	movabs al,ds:0xc0000022d1000022
   14000a1ad:	imul   eax,DWORD PTR [rax],0x0
   14000a1b0:	loopne 0x14000a1d4
   14000a1b2:	add    BYTE PTR [rax],al
   14000a1b4:	sti    
   14000a1b5:	and    al,BYTE PTR [rax]
   14000a1b7:	add    al,bh
   14000a1b9:	outs   dx,BYTE PTR ds:[rsi]
   14000a1ba:	add    BYTE PTR [rax],al
   14000a1bc:	add    BYTE PTR [rbx],ah
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	push   rbp
   14000a1c1:	and    eax,DWORD PTR [rax]
   14000a1c3:	add    BYTE PTR [rax+0x73],dh
   14000a1c6:	add    BYTE PTR [rax],al
   14000a1c8:	(bad)  
   14000a1c9:	and    eax,DWORD PTR [rax]
   14000a1cb:	add    BYTE PTR [rdx+0x40000023],bl
   14000a1d1:	jb     0x14000a1d3
   14000a1d3:	add    BYTE PTR [rax-0x36ffffdd],ah
   14000a1d9:	and    eax,DWORD PTR [rax]
   14000a1db:	add    BYTE PTR [rax+rsi*2+0x24300000],bh
   14000a1e2:	add    BYTE PTR [rax],al
   14000a1e4:	rex.WR and al,0x0
   14000a1e7:	add    BYTE PTR [rax+0x5000006f],bl
   14000a1ed:	and    al,0x0
   14000a1ef:	add    BYTE PTR [rsp+0x0],ch
   14000a1f3:	add    BYTE PTR [rax],bh
   14000a1f5:	jb     0x14000a1f7
   14000a1f7:	add    BYTE PTR [rax+0x24],dh
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	movabs al,ds:0x2000007290000024
   14000a205:	add    BYTE PTR es:[rax],al
   14000a208:	cmp    DWORD PTR [rsi],esp
   14000a20a:	add    BYTE PTR [rax],al
   14000a20c:	cmp    al,0x6e
   14000a20e:	add    BYTE PTR [rax],al
   14000a210:	rex
   14000a211:	add    BYTE PTR es:[rax],al
   14000a214:	pop    rcx
   14000a215:	add    BYTE PTR es:[rax],al
   14000a218:	xor    al,0x6e
   14000a21a:	add    BYTE PTR [rax],al
   14000a21c:	shl    BYTE PTR [rsi],1
   14000a21e:	add    BYTE PTR [rax],al
   14000a220:	rex.B (bad) 
   14000a222:	add    BYTE PTR [rax],al
   14000a224:	mov    al,0x73
   14000a226:	add    BYTE PTR [rax],al
   14000a228:	push   rax
   14000a229:	(bad)  
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	jbe    0x14000a255
   14000a22e:	add    BYTE PTR [rax],al
   14000a230:	call   0xc000a2a2
   14000a235:	(bad)  
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a239:	(bad)  
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	clc    
   14000a23d:	ins    DWORD PTR es:[rdi],dx
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	mov    al,0x27
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	(bad)  
   14000a245:	(bad)  
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	sbb    BYTE PTR [rsi+0x0],ch
   14000a24b:	add    al,ah
   14000a24d:	(bad)  
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	(bad)  
   14000a251:	sub    BYTE PTR [rax],al
   14000a253:	add    ah,dl
   14000a255:	ins    DWORD PTR es:[rdi],dx
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	adc    BYTE PTR [rax],ch
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	mov    edx,0x2c000028
   14000a261:	outs   dx,BYTE PTR ds:[rsi]
   14000a262:	add    BYTE PTR [rax],al
   14000a264:	shr    BYTE PTR [rax],0x0
   14000a267:	add    BYTE PTR [rdx],dh
   14000a269:	sub    DWORD PTR [rax],eax
   14000a26b:	add    BYTE PTR [rax],ah
   14000a26d:	outs   dx,BYTE PTR ds:[rsi]
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	movabs al,ds:0x5c000029fa000029
   14000a279:	outs   dx,BYTE PTR ds:[rsi]
   14000a27a:	add    BYTE PTR [rax],al
   14000a27c:	add    BYTE PTR [rdx],ch
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	rex.WRB sub r8b,BYTE PTR [r8]
   14000a283:	add    BYTE PTR [rax+rsi*2+0x0],al
   14000a287:	add    BYTE PTR [rbp+0x2a],cl
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	in     al,0x2a
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	push   rax
   14000a291:	jo     0x14000a293
   14000a293:	add    ah,ah
   14000a295:	sub    al,BYTE PTR [rax]
   14000a297:	add    bh,ch
   14000a299:	sub    al,BYTE PTR [rax]
   14000a29b:	add    BYTE PTR [rax+rsi*2+0x0],ah
   14000a29f:	add    al,dh
   14000a2a1:	sub    al,BYTE PTR [rax]
   14000a2a3:	add    BYTE PTR [rdx+0x2b],bh
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	mov    al,0x6f
   14000a2aa:	add    BYTE PTR [rax],al
   14000a2ac:	sub    BYTE PTR [rbx],0x0
   14000a2af:	add    BYTE PTR [rdx+0x4800002c],al
   14000a2b5:	ins    BYTE PTR es:[rdi],dx
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	movabs al,ds:0xa800002d1800002c
   14000a2c1:	outs   dx,DWORD PTR ds:[rsi]
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	sub    BYTE PTR [rip+0x2dde0000],0x0        # 0x16ddea2cb
   14000a2cb:	add    al,ch
   14000a2cd:	outs   dx,BYTE PTR ds:[rsi]
   14000a2ce:	add    BYTE PTR [rax],al
   14000a2d0:	xor    BYTE PTR [rsi],ch
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	jp     0x14000a304
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	xor    al,0x6d
   14000a2da:	add    BYTE PTR [rax],al
   14000a2dc:	jp     0x14000a30c
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	nop
   14000a2e1:	add    BYTE PTR cs:[rax],al
   14000a2e4:	rex.R ins DWORD PTR es:[rdi],dx
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	nop
   14000a2e9:	add    BYTE PTR cs:[rax],al
   14000a2ec:	mov    ch,0x2e
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	pop    rax
   14000a2f1:	ins    DWORD PTR es:[rdi],dx
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	mov    ch,0x2e
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	int3   
   14000a2f9:	add    BYTE PTR cs:[rax],al
   14000a2fc:	ins    BYTE PTR es:[rdi],dx
   14000a2fd:	ins    DWORD PTR es:[rdi],dx
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	int3   
   14000a301:	add    BYTE PTR cs:[rax],al
   14000a304:	imul   DWORD PTR [rsi]
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	jl     0x14000a377
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	lock (bad) 
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	and    eax,0x40000030
   14000a315:	outs   dx,DWORD PTR ds:[rsi]
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	xor    BYTE PTR [rax],dh
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	xor    DWORD PTR [rax],0x0
   14000a31f:	add    BYTE PTR [rax],bh
   14000a321:	jo     0x14000a323
   14000a323:	add    al,dh
   14000a325:	xor    BYTE PTR [rax],al
   14000a327:	add    BYTE PTR [rdx],bh
   14000a329:	xor    al,0x0
   14000a32b:	add    ah,bl
   14000a32d:	jo     0x14000a32f
   14000a32f:	add    BYTE PTR [rax],ah
   14000a331:	xor    eax,0x35310000
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	je     0x14000a3aa
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	xor    DWORD PTR [rip+0x35690000],esi        # 0x17569a342
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	jl     0x14000a3b6
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	imul   esi,DWORD PTR [rip+0x356f0000],0x70940000        # 0x1756fa352
   14000a352:	add    BYTE PTR [rax],al
   14000a354:	jo     0x14000a38b
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	mov    esi,DWORD PTR [rip+0x6d8c0000]        # 0x1ad8ca35e
   14000a35e:	add    BYTE PTR [rax],al
   14000a360:	mov    esi,DWORD PTR [rip+0x35ad0000]        # 0x175ada366
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	cwde   
   14000a369:	ins    DWORD PTR es:[rdi],dx
   14000a36a:	add    BYTE PTR [rax],al
   14000a36c:	lods   eax,DWORD PTR ds:[rsi]
   14000a36d:	xor    eax,0x35c80000
   14000a372:	add    BYTE PTR [rax],al
   14000a374:	lods   al,BYTE PTR ds:[rsi]
   14000a375:	ins    DWORD PTR es:[rdi],dx
   14000a376:	add    BYTE PTR [rax],al
   14000a378:	loopne 0x14000a3af
   14000a37a:	add    BYTE PTR [rax],al
   14000a37c:	or     DWORD PTR [rsi],esi
   14000a37e:	add    BYTE PTR [rax],al
   14000a380:	(bad)  
   14000a381:	jo     0x14000a383
   14000a383:	add    BYTE PTR [rax],dl
   14000a385:	add    BYTE PTR ss:[rax],al
   14000a388:	push   rdi
   14000a389:	add    BYTE PTR ss:[rax],al
   14000a38c:	fdiv   DWORD PTR [rcx+0x0]
   14000a38f:	add    BYTE PTR [rax+0x37],ah
   14000a392:	add    BYTE PTR [rax],al
   14000a394:	jb     0x14000a3cd
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	mov    esp,0x8000006d
   14000a39d:	(bad)  
   14000a39e:	add    BYTE PTR [rax],al
   14000a3a0:	xchg   edx,eax
   14000a3a1:	(bad)  
   14000a3a2:	add    BYTE PTR [rax],al
   14000a3a4:	in     al,0x71
   14000a3a6:	add    BYTE PTR [rax],al
   14000a3a8:	movabs al,ds:0xc4000037b2000037
   14000a3b1:	ins    DWORD PTR es:[rdi],dx
   14000a3b2:	add    BYTE PTR [rax],al
   14000a3b4:	shl    BYTE PTR [rdi],0x0
   14000a3b7:	add    al,bh
   14000a3b9:	(bad)  
   14000a3ba:	add    BYTE PTR [rax],al
   14000a3bc:	mov    ah,0x70
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	add    BYTE PTR [rax],bh
   14000a3c2:	add    BYTE PTR [rax],al
   14000a3c4:	sub    bh,BYTE PTR [rax]
   14000a3c6:	add    BYTE PTR [rax],al
   14000a3c8:	test   al,0x6b
   14000a3ca:	add    BYTE PTR [rax],al
   14000a3cc:	xor    BYTE PTR [rax],bh
   14000a3ce:	add    BYTE PTR [rax],al
   14000a3d0:	push   0x4c000038
   14000a3d5:	outs   dx,BYTE PTR ds:[rsi]
   14000a3d6:	add    BYTE PTR [rax],al
   14000a3d8:	jo     0x14000a412
   14000a3da:	add    BYTE PTR [rax],al
   14000a3dc:	test   al,0x38
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	lods   al,BYTE PTR ds:[rsi]
   14000a3e1:	jo     0x14000a3e3
   14000a3e3:	add    BYTE PTR [rax-0x25ffffc8],dh
   14000a3e9:	cmp    BYTE PTR [rax],al
   14000a3eb:	add    BYTE PTR [rax-0x1fffff95],ah
   14000a3f1:	cmp    BYTE PTR [rax],al
   14000a3f3:	add    BYTE PTR [rax],bl
   14000a3f5:	cmp    DWORD PTR [rax],eax
   14000a3f7:	add    BYTE PTR [rsi+rbp*2+0x0],al
   14000a3fb:	add    BYTE PTR [rax],ah
   14000a3fd:	cmp    DWORD PTR [rax],eax
   14000a3ff:	add    BYTE PTR [rax+0x39],bl
   14000a402:	add    BYTE PTR [rax],al
   14000a404:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a405:	jo     0x14000a407
   14000a407:	add    BYTE PTR [rax+0x39],ah
   14000a40a:	add    BYTE PTR [rax],al
   14000a40c:	(bad)  
   14000a40d:	cmp    al,BYTE PTR [rax]
   14000a40f:	add    al,cl
   14000a411:	imul   eax,DWORD PTR [rax],0x0
   14000a414:	mov    al,0x3a
   14000a416:	add    BYTE PTR [rax],al
   14000a418:	fistp  QWORD PTR [rbx]
   14000a41a:	add    BYTE PTR [rax],al
   14000a41c:	fsubr  QWORD PTR [rbx+0x0]
   14000a41f:	add    al,dh
   14000a421:	cmp    eax,DWORD PTR [rax]
   14000a423:	add    BYTE PTR [rip+0xffffffffc400003c],dl        # 0x10400a465
   14000a429:	jo     0x14000a42b
   14000a42b:	add    BYTE PTR [rax+0x200003c],dh
   14000a431:	cmp    eax,0x6fa00000
   14000a436:	add    BYTE PTR [rax],al
   14000a438:	adc    BYTE PTR [rip+0x3d3d0000],bh        # 0x17d3da43e
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	or     al,0x6f
   14000a442:	add    BYTE PTR [rax],al
   14000a444:	cmp    eax,0x9a00003d
   14000a449:	cmp    eax,0x6f1c0000
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	(bad)  
   14000a451:	cmp    eax,0x3daa0000
   14000a456:	add    BYTE PTR [rax],al
   14000a458:	xor    BYTE PTR [rdi+0x0],ch
   14000a45b:	add    al,al
   14000a45d:	cmp    eax,0x3e3a0000
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a468:	rex
   14000a469:	add    BYTE PTR ds:[rax],al
   14000a46c:	movsxd edi,DWORD PTR [rsi]
   14000a46e:	add    BYTE PTR [rax],al
   14000a470:	adc    BYTE PTR [rax+rax*1+0x0],ch
   14000a474:	movsxd edi,DWORD PTR [rsi]
   14000a476:	add    BYTE PTR [rax],al
   14000a478:	ret    0x3e
   14000a47b:	add    BYTE PTR [rax],bl
   14000a47d:	ins    BYTE PTR es:[rdi],dx
   14000a47e:	add    BYTE PTR [rax],al
   14000a480:	ret    0x3e
   14000a483:	add    al,bl
   14000a485:	add    BYTE PTR ds:[rax],al
   14000a488:	xor    BYTE PTR [rax+rax*1+0x0],ch
   14000a48c:	add    BYTE PTR [rdi],bh
   14000a48e:	add    BYTE PTR [rax],al
   14000a490:	sbb    al,0x3f
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	cwde   
   14000a495:	imul   eax,DWORD PTR [rax],0x0
   14000a498:	nop
   14000a499:	(bad)  
   14000a49a:	add    BYTE PTR [rax],al
   14000a49c:	sar    BYTE PTR [rdi],1
   14000a49e:	add    BYTE PTR [rax],al
   14000a4a0:	or     al,0x6e
   14000a4a2:	add    BYTE PTR [rax],al
   14000a4a4:	and    BYTE PTR [rax+0x0],al
   14000a4a7:	add    BYTE PTR [rdi+0x40],dl
   14000a4aa:	add    BYTE PTR [rax],al
   14000a4ac:	int3   
   14000a4ad:	ins    DWORD PTR es:[rdi],dx
   14000a4ae:	add    BYTE PTR [rax],al
   14000a4b0:	(bad)  
   14000a4b1:	add    BYTE PTR [rax],al
   14000a4b4:	sub    DWORD PTR [rcx+0x0],eax
   14000a4b7:	add    ah,dh
   14000a4b9:	imul   eax,DWORD PTR [rax],0x0
   14000a4bc:	xor    BYTE PTR [rcx+0x0],al
   14000a4bf:	add    BYTE PTR [rsi+0x41],ch
   14000a4c2:	add    BYTE PTR [rax],al
   14000a4c4:	in     al,dx
   14000a4c5:	imul   eax,DWORD PTR [rax],0x0
   14000a4c8:	jo     0x14000a50b
   14000a4ca:	add    BYTE PTR [rax],al
   14000a4cc:	or     al,0x42
   14000a4ce:	add    BYTE PTR [rax],al
   14000a4d0:	add    BYTE PTR [rdi+0x0],ch
   14000a4d3:	add    BYTE PTR [rax],dh
   14000a4d5:	rex.X add BYTE PTR [rax],al
   14000a4d8:	cmp    DWORD PTR [rbx+0x0],eax
   14000a4db:	add    BYTE PTR [rdx+rsi*2+0x43400000],bl
   14000a4e2:	add    BYTE PTR [rax],al
   14000a4e4:	(bad)  
   14000a4e5:	add    BYTE PTR [rax],r8b
   14000a4e8:	adc    BYTE PTR [rbx+0x0],dh
   14000a4eb:	add    BYTE PTR [rax+0x44],dh
   14000a4ee:	add    BYTE PTR [rax],al
   14000a4f0:	xchg   ecx,eax
   14000a4f1:	add    BYTE PTR [rax],r8b
   14000a4f4:	int3   
   14000a4f5:	jo     0x14000a4f7
   14000a4f7:	add    al,dh
   14000a4f9:	add    BYTE PTR [r8],r8b
   14000a4fc:	push   rdx
   14000a4fd:	rex.RX add BYTE PTR [rax],r8b
   14000a500:	fsubr  QWORD PTR [rbp+0x0]
   14000a503:	add    BYTE PTR [rax+0x46],ah
   14000a506:	add    BYTE PTR [rax],al
   14000a508:	lods   eax,DWORD PTR ds:[rsi]
   14000a509:	rex.RX add BYTE PTR [rax],r8b
   14000a50c:	lock ins DWORD PTR es:[rdi],dx
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	mov    al,0x46
   14000a512:	add    BYTE PTR [rax],al
   14000a514:	adc    al,BYTE PTR [rdi+0x0]
   14000a517:	add    BYTE PTR [rax],al
   14000a519:	outs   dx,BYTE PTR ds:[rsi]
   14000a51a:	add    BYTE PTR [rax],al
   14000a51c:	add    BYTE PTR [rax+0x0],cl
   14000a51f:	add    BYTE PTR [rcx+rcx*2],ah
   14000a522:	add    BYTE PTR [rax],al
   14000a524:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a525:	jb     0x14000a527
   14000a527:	add    BYTE PTR [rax+0x49],ah
   14000a52a:	add    BYTE PTR [rax],al
   14000a52c:	mov    ah,0x49
   14000a52e:	add    BYTE PTR [rax],al
   14000a530:	nop
   14000a531:	imul   eax,DWORD PTR [rax],0x0
   14000a534:	ror    BYTE PTR [rcx+0x0],1
   14000a537:	add    BYTE PTR [rdx+0x4a],al
   14000a53a:	add    BYTE PTR [rax],al
   14000a53c:	sbb    BYTE PTR [rdi+0x0],dh
   14000a53f:	add    BYTE PTR [rax-0x2effffb6],al
   14000a545:	rex.WX add BYTE PTR [rax],al
   14000a548:	and    al,0x77
   14000a54a:	add    BYTE PTR [rax],al
   14000a54c:	loopne 0x14000a598
   14000a54e:	add    BYTE PTR [rax],al
   14000a550:	pushf  
   14000a551:	rex.WXB add BYTE PTR [r8],al
   14000a554:	sub    al,0x77
   14000a556:	add    BYTE PTR [rax],al
   14000a558:	rex
   14000a559:	rex.WR add BYTE PTR [rax],r8b
   14000a55c:	mov    cs,WORD PTR [rax+rax*1+0x0]
   14000a560:	jo     0x14000a5d9
   14000a562:	add    BYTE PTR [rax],al
   14000a564:	nop
   14000a565:	rex.WR add BYTE PTR [rax],r8b
   14000a568:	rex
   14000a569:	rex.WRB add BYTE PTR [r8],r8b
   14000a56c:	rex.W ja 0x14000a56f
   14000a56f:	add    BYTE PTR [rax+0x4d],al
   14000a572:	add    BYTE PTR [rax],al
   14000a574:	push   rdi
   14000a575:	rex.WRB add BYTE PTR [r8],r8b
   14000a578:	rex ja 0x14000a57b
   14000a57b:	add    BYTE PTR [rax-0x5ffffb3],dl
   14000a581:	rex.WRB add BYTE PTR [r8],r8b
   14000a584:	js     0x14000a5fd
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	add    BYTE PTR [rsi+0x0],cl
   14000a58b:	add    dh,cl
   14000a58d:	rex.WRX add BYTE PTR [rax],r8b
   14000a590:	mov    BYTE PTR [rdi+0x0],dh
   14000a593:	add    al,dl
   14000a595:	rex.WRX add BYTE PTR [rax],r8b
   14000a598:	xor    ecx,DWORD PTR [rdi+0x0]
   14000a59b:	add    BYTE PTR [rax+0x40000077],dl
   14000a5a1:	rex.WRXB add BYTE PTR [r8],r8b
   14000a5a4:	push   rdx
   14000a5a5:	rex.WRXB add BYTE PTR [r8],r8b
   14000a5a8:	enter  0x77,0x0
   14000a5ac:	push   rsp
   14000a5ad:	rex.WRXB add BYTE PTR [r8],r8b
   14000a5b0:	cmp    al,0x51
   14000a5b2:	add    BYTE PTR [rax],al
   14000a5b4:	cwde   
   14000a5b5:	ja     0x14000a5b7
   14000a5b7:	add    BYTE PTR [rcx+rdx*2+0x52010000],ah
   14000a5be:	add    BYTE PTR [rax],al
   14000a5c0:	shl    BYTE PTR [rdi+0x0],1
   14000a5c3:	add    BYTE PTR [rdx+rdx*2],al
   14000a5c6:	add    BYTE PTR [rax],al
   14000a5c8:	and    BYTE PTR [rdx+0x0],dl
   14000a5cb:	add    BYTE PTR [rax],dh
   14000a5cd:	js     0x14000a5cf
   14000a5cf:	add    BYTE PTR [rax],ah
   14000a5d1:	push   rdx
   14000a5d2:	add    BYTE PTR [rax],al
   14000a5d4:	push   0x52
   14000a5d6:	add    BYTE PTR [rax],al
   14000a5d8:	add    BYTE PTR [rax+0x0],bh
   14000a5db:	add    BYTE PTR [rdx+rdx*2+0x0],ch
   14000a5df:	add    BYTE PTR [rdx+rdx*2+0x78380000],ah
   14000a5e6:	add    BYTE PTR [rax],al
   14000a5e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a5e9:	push   rdx
   14000a5ea:	add    BYTE PTR [rax],al
   14000a5ec:	mov    ebx,0x40000052
   14000a5f1:	js     0x14000a5f3
   14000a5f3:	add    BYTE PTR [rax],dh
   14000a5f5:	push   rbx
   14000a5f6:	add    BYTE PTR [rax],al
   14000a5f8:	jge    0x14000a64d
   14000a5fa:	add    BYTE PTR [rax],al
   14000a5fc:	rex.W js 0x14000a5ff
   14000a5ff:	add    al,al
   14000a601:	push   rbx
   14000a602:	add    BYTE PTR [rax],al
   14000a604:	ins    BYTE PTR es:[rdi],dx
   14000a605:	push   rsp
   14000a606:	add    BYTE PTR [rax],al
   14000a608:	je     0x14000a682
   14000a60a:	add    BYTE PTR [rax],al
   14000a60c:	js     0x14000a662
   14000a60e:	add    BYTE PTR [rax],al
   14000a610:	mov    al,0x54
   14000a612:	add    BYTE PTR [rax],al
   14000a614:	cmp    BYTE PTR [rax+0x0],0x0
   14000a618:	mov    al,0x54
   14000a61a:	add    BYTE PTR [rax],al
   14000a61c:	call   0xcc00a675
   14000a621:	js     0x14000a623
   14000a623:	add    BYTE PTR [rax+0x55],al
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	pop    rsp
   14000a629:	push   rbp
   14000a62a:	add    BYTE PTR [rax],al
   14000a62c:	pop    rax
   14000a62d:	jbe    0x14000a62f
   14000a62f:	add    BYTE PTR [rbp+rdx*2+0x0],bl
   14000a633:	add    BYTE PTR [rbp+rdx*2+0x0],bh
   14000a637:	add    BYTE PTR [rax+0x76],ah
   14000a63a:	add    BYTE PTR [rax],al
   14000a63c:	adc    BYTE PTR [rbp+0x0],0x0
   14000a640:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a641:	push   rbp
   14000a642:	add    BYTE PTR [rax],al
   14000a644:	sbb    BYTE PTR [rbp+0x0],dh
   14000a647:	add    BYTE PTR [rax-0x38ffffab],dh
   14000a64d:	push   rbp
   14000a64e:	add    BYTE PTR [rax],al
   14000a650:	xor    BYTE PTR [rax+rax*1+0x0],0xd0
   14000a655:	push   rbp
   14000a656:	add    BYTE PTR [rax],al
   14000a658:	out    0x55,eax
   14000a65a:	add    BYTE PTR [rax],al
   14000a65c:	mov    eax,0xf0000075
   14000a661:	push   rbp
   14000a662:	add    BYTE PTR [rax],al
   14000a664:	or     al,0x56
   14000a666:	add    BYTE PTR [rax],al
   14000a668:	movabs al,ds:0x2c00005610000076
   14000a671:	push   rsi
   14000a672:	add    BYTE PTR [rax],al
   14000a674:	adc    BYTE PTR [rdi+0x0],dh
   14000a677:	add    BYTE PTR [rax],dh
   14000a679:	push   rsi
   14000a67a:	add    BYTE PTR [rax],al
   14000a67c:	rex.WR push rsi
   14000a67e:	add    BYTE PTR [rax],al
   14000a680:	fdiv   DWORD PTR [rsi+0x0]
   14000a683:	add    al,al
   14000a685:	push   rsi
   14000a686:	add    BYTE PTR [rax],al
   14000a688:	loopne 0x14000a6e0
   14000a68a:	add    BYTE PTR [rax],al
   14000a68c:	shr    BYTE PTR [rsi+0x0],1
   14000a68f:	add    al,ah
   14000a691:	push   rsi
   14000a692:	add    BYTE PTR [rax],al
   14000a694:	add    BYTE PTR [rdi+0x0],dl
   14000a697:	add    BYTE PTR [rax],ch
   14000a699:	jo     0x14000a69b
   14000a69b:	add    BYTE PTR [rax],al
   14000a69d:	push   rdi
   14000a69e:	add    BYTE PTR [rax],al
   14000a6a0:	rex.R push rdi
   14000a6a2:	add    BYTE PTR [rax],al
   14000a6a4:	adc    BYTE PTR [rbp+0x0],ch
   14000a6a7:	add    BYTE PTR [rdi+rdx*2+0x0],al
   14000a6ab:	add    BYTE PTR [rdx+0x20000057],al
   14000a6b1:	ins    DWORD PTR es:[rdi],dx
   14000a6b2:	add    BYTE PTR [rax],al
   14000a6b4:	nop
   14000a6b5:	push   rdi
   14000a6b6:	add    BYTE PTR [rax],al
   14000a6b8:	mov    bl,0x57
   14000a6ba:	add    BYTE PTR [rax],al
   14000a6bc:	mov    eax,0xb3000071
   14000a6c1:	push   rdi
   14000a6c2:	add    BYTE PTR [rax],al
   14000a6c4:	retf   0x57
   14000a6c7:	add    al,cl
   14000a6c9:	jno    0x14000a6cb
   14000a6cb:	add    ah,dh
   14000a6cd:	push   rdi
   14000a6ce:	add    BYTE PTR [rax],al
   14000a6d0:	addps  xmm0,XMMWORD PTR [rax]
   14000a6d3:	add    BYTE PTR [rax+0x77],ch
   14000a6d6:	add    BYTE PTR [rax],al
   14000a6d8:	addps  xmm0,XMMWORD PTR [rax]
   14000a6db:	add    BYTE PTR [rip+0xffffffffc0000058],ch        # 0x10000a739
   14000a6e1:	ja     0x14000a6e3
   14000a6e3:	add    BYTE PTR [rip+0x59000058],ch        # 0x19900a741
   14000a6e9:	pop    rax
   14000a6ea:	add    BYTE PTR [rax],al
   14000a6ec:	clc    
   14000a6ed:	ja     0x14000a6ef
   14000a6ef:	add    BYTE PTR [rcx+0x58],bl
   14000a6f2:	add    BYTE PTR [rax],al
   14000a6f4:	(bad)  
   14000a6f5:	pop    rax
   14000a6f6:	add    BYTE PTR [rax],al
   14000a6f8:	sub    BYTE PTR [rax+0x0],bh
   14000a6fb:	add    BYTE PTR [rax-0x3fffffa8],ah
   14000a701:	pop    rax
   14000a702:	add    BYTE PTR [rax],al
   14000a704:	ins    BYTE PTR es:[rdi],dx
   14000a705:	js     0x14000a707
	...

Disassembly of section .rsrc:

000000014000b000 <.rsrc>:
	...
   14000b008:	add    al,0x0
   14000b00a:	add    BYTE PTR [rax],al
   14000b00c:	add    BYTE PTR [rax],al
   14000b00e:	add    al,0x0
   14000b010:	add    eax,DWORD PTR [rax]
   14000b012:	add    BYTE PTR [rax],al
   14000b014:	xor    BYTE PTR [rax],al
   14000b016:	add    BYTE PTR [rax+0xe],al
   14000b01c:	nop
   14000b01d:	add    BYTE PTR [rax],al
   14000b01f:	adc    BYTE PTR [rax],0x0
   14000b022:	add    BYTE PTR [rax],al
   14000b024:	test   al,0x0
   14000b026:	add    BYTE PTR [rax+0x18],al
   14000b02c:	rol    BYTE PTR [rax],0x0
   14000b02f:	add    BYTE PTR [rax],0x0
   14000b032:	add    BYTE PTR [rax],al
   14000b034:	add    BYTE PTR [rax],al
   14000b036:	add    BYTE PTR [rax],al
   14000b038:	add    al,0x0
   14000b03a:	add    BYTE PTR [rax],al
   14000b03c:	add    BYTE PTR [rax],al
   14000b03e:	or     al,BYTE PTR [rax]
   14000b040:	add    DWORD PTR [rax],eax
   14000b042:	add    BYTE PTR [rax],al
   14000b044:	fadd   DWORD PTR [rax]
   14000b046:	add    BYTE PTR [rax+0x2],al
   14000b04c:	lock add BYTE PTR [rax],al
   14000b04f:	add    BYTE PTR [rbx],0x0
   14000b052:	add    BYTE PTR [rax],al
   14000b054:	or     BYTE PTR [rcx],al
   14000b056:	add    BYTE PTR [rax+0x4],al
   14000b05c:	and    BYTE PTR [rcx],al
   14000b05e:	add    BYTE PTR [rax+0x5],al
   14000b064:	cmp    BYTE PTR [rcx],al
   14000b066:	add    BYTE PTR [rax+0x6],al
   14000b06c:	push   rax
   14000b06d:	add    DWORD PTR [rax],eax
   14000b06f:	add    BYTE PTR [rdi],0x0
   14000b072:	add    BYTE PTR [rax],al
   14000b074:	push   0x8800001
   14000b079:	add    BYTE PTR [rax],al
   14000b07b:	add    BYTE PTR [rax+0x9800001],al
   14000b081:	add    BYTE PTR [rax],al
   14000b083:	add    BYTE PTR [rax+0xa800001],bl
   14000b089:	add    BYTE PTR [rax],al
   14000b08b:	add    BYTE PTR [rax+0x800001],dh
   14000b091:	add    BYTE PTR [rax],al
   14000b093:	add    BYTE PTR [rax],al
   14000b095:	add    BYTE PTR [rax],al
   14000b097:	add    BYTE PTR [rax+rax*1],al
   14000b09a:	add    BYTE PTR [rax],al
   14000b09c:	add    BYTE PTR [rax],al
   14000b09e:	add    DWORD PTR [rax],eax
   14000b0a0:	data16 add BYTE PTR [rax],al
   14000b0a3:	add    al,cl
   14000b0a5:	add    DWORD PTR [rax],eax
   14000b0a7:	add    BYTE PTR [rax],0x0
   14000b0aa:	add    BYTE PTR [rax],al
   14000b0ac:	add    BYTE PTR [rax],al
   14000b0ae:	add    BYTE PTR [rax],al
   14000b0b0:	add    al,0x0
   14000b0b2:	add    BYTE PTR [rax],al
   14000b0b4:	add    BYTE PTR [rax],al
   14000b0b6:	add    DWORD PTR [rax],eax
   14000b0b8:	add    DWORD PTR [rax],eax
   14000b0ba:	add    BYTE PTR [rax],al
   14000b0bc:	loopne 0x14000b0bf
   14000b0be:	add    BYTE PTR [rax+0x0],al
   14000b0c4:	add    BYTE PTR [rax],al
   14000b0c6:	add    BYTE PTR [rax],al
   14000b0c8:	add    al,0x0
   14000b0ca:	add    BYTE PTR [rax],al
   14000b0cc:	add    BYTE PTR [rax],al
   14000b0ce:	add    DWORD PTR [rax],eax
   14000b0d0:	add    DWORD PTR [rax],eax
   14000b0d2:	add    BYTE PTR [rax],al
   14000b0d4:	clc    
   14000b0d5:	add    DWORD PTR [rax],eax
   14000b0d7:	add    BYTE PTR [rax],0x0
   14000b0da:	add    BYTE PTR [rax],al
   14000b0dc:	add    BYTE PTR [rax],al
   14000b0de:	add    BYTE PTR [rax],al
   14000b0e0:	add    al,0x0
   14000b0e2:	add    BYTE PTR [rax],al
   14000b0e4:	add    BYTE PTR [rax],al
   14000b0e6:	add    DWORD PTR [rax],eax
   14000b0e8:	or     DWORD PTR [rax+rax*1],eax
   14000b0eb:	add    BYTE PTR [rax],dl
   14000b0ed:	add    al,BYTE PTR [rax]
	...
   14000b0f7:	add    BYTE PTR [rax+rax*1],al
   14000b0fa:	add    BYTE PTR [rax],al
   14000b0fc:	add    BYTE PTR [rax],al
   14000b0fe:	add    DWORD PTR [rax],eax
   14000b100:	or     DWORD PTR [rax+rax*1],eax
   14000b103:	add    BYTE PTR [rax],ah
   14000b105:	add    al,BYTE PTR [rax]
	...
   14000b10f:	add    BYTE PTR [rax+rax*1],al
   14000b112:	add    BYTE PTR [rax],al
   14000b114:	add    BYTE PTR [rax],al
   14000b116:	add    DWORD PTR [rax],eax
   14000b118:	or     DWORD PTR [rax+rax*1],eax
   14000b11b:	add    BYTE PTR [rax],dh
   14000b11d:	add    al,BYTE PTR [rax]
	...
   14000b127:	add    BYTE PTR [rax+rax*1],al
   14000b12a:	add    BYTE PTR [rax],al
   14000b12c:	add    BYTE PTR [rax],al
   14000b12e:	add    DWORD PTR [rax],eax
   14000b130:	or     DWORD PTR [rax+rax*1],eax
   14000b133:	add    BYTE PTR [rax+0x2],al
	...
   14000b13e:	add    BYTE PTR [rax],al
   14000b140:	add    al,0x0
   14000b142:	add    BYTE PTR [rax],al
   14000b144:	add    BYTE PTR [rax],al
   14000b146:	add    DWORD PTR [rax],eax
   14000b148:	or     DWORD PTR [rax+rax*1],eax
   14000b14b:	add    BYTE PTR [rax+0x2],dl
	...
   14000b156:	add    BYTE PTR [rax],al
   14000b158:	add    al,0x0
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	add    BYTE PTR [rax],al
   14000b15e:	add    DWORD PTR [rax],eax
   14000b160:	or     DWORD PTR [rax+rax*1],eax
   14000b163:	add    BYTE PTR [rax+0x2],ah
	...
   14000b16e:	add    BYTE PTR [rax],al
   14000b170:	add    al,0x0
   14000b172:	add    BYTE PTR [rax],al
   14000b174:	add    BYTE PTR [rax],al
   14000b176:	add    DWORD PTR [rax],eax
   14000b178:	or     DWORD PTR [rax+rax*1],eax
   14000b17b:	add    BYTE PTR [rax+0x2],dh
	...
   14000b186:	add    BYTE PTR [rax],al
   14000b188:	add    al,0x0
   14000b18a:	add    BYTE PTR [rax],al
   14000b18c:	add    BYTE PTR [rax],al
   14000b18e:	add    DWORD PTR [rax],eax
   14000b190:	or     DWORD PTR [rax+rax*1],eax
   14000b193:	add    BYTE PTR [rax+0x2],al
   14000b199:	add    BYTE PTR [rax],al
   14000b19b:	add    BYTE PTR [rax],al
   14000b19d:	add    BYTE PTR [rax],al
   14000b19f:	add    BYTE PTR [rax+rax*1],al
   14000b1a2:	add    BYTE PTR [rax],al
   14000b1a4:	add    BYTE PTR [rax],al
   14000b1a6:	add    DWORD PTR [rax],eax
   14000b1a8:	or     DWORD PTR [rax+rax*1],eax
   14000b1ab:	add    BYTE PTR [rax+0x2],dl
   14000b1b1:	add    BYTE PTR [rax],al
   14000b1b3:	add    BYTE PTR [rax],al
   14000b1b5:	add    BYTE PTR [rax],al
   14000b1b7:	add    BYTE PTR [rax+rax*1],al
   14000b1ba:	add    BYTE PTR [rax],al
   14000b1bc:	add    BYTE PTR [rax],al
   14000b1be:	add    DWORD PTR [rax],eax
   14000b1c0:	or     DWORD PTR [rax+rax*1],eax
   14000b1c3:	add    BYTE PTR [rax+0x2],ah
   14000b1c9:	add    BYTE PTR [rax],al
   14000b1cb:	add    BYTE PTR [rax],al
   14000b1cd:	add    BYTE PTR [rax],al
   14000b1cf:	add    BYTE PTR [rax+rax*1],al
   14000b1d2:	add    BYTE PTR [rax],al
   14000b1d4:	add    BYTE PTR [rax],al
   14000b1d6:	add    DWORD PTR [rax],eax
   14000b1d8:	or     DWORD PTR [rax+rax*1],eax
   14000b1db:	add    BYTE PTR [rax+0x2],dh
   14000b1e1:	add    BYTE PTR [rax],al
   14000b1e3:	add    BYTE PTR [rax],al
   14000b1e5:	add    BYTE PTR [rax],al
   14000b1e7:	add    BYTE PTR [rax+rax*1],al
   14000b1ea:	add    BYTE PTR [rax],al
   14000b1ec:	add    BYTE PTR [rax],al
   14000b1ee:	add    DWORD PTR [rax],eax
   14000b1f0:	or     DWORD PTR [rax+rax*1],eax
   14000b1f3:	add    al,al
   14000b1f5:	add    al,BYTE PTR [rax]
	...
   14000b1ff:	add    BYTE PTR [rax+rax*1],al
   14000b202:	add    BYTE PTR [rax],al
   14000b204:	add    BYTE PTR [rax],al
   14000b206:	add    DWORD PTR [rax],eax
   14000b208:	or     DWORD PTR [rax+rax*1],eax
   14000b20b:	add    al,dl
   14000b20d:	add    al,BYTE PTR [rax]
   14000b20f:	add    al,ah
   14000b211:	mov    dl,0x0
   14000b213:	add    BYTE PTR [rax+0x6],ch
   14000b216:	add    BYTE PTR [rax],al
   14000b218:	in     al,0x4
   14000b21a:	add    BYTE PTR [rax],al
   14000b21c:	add    BYTE PTR [rax],al
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	movabs rcx,0x4e4000002e80000
   14000b22a:	add    BYTE PTR [rax],al
   14000b22c:	add    BYTE PTR [rax],al
   14000b22e:	add    BYTE PTR [rax],al
   14000b230:	xor    BYTE PTR [rax+rax*1+0x12800],bh
   14000b237:	add    ah,ah
   14000b239:	add    al,0x0
   14000b23b:	add    BYTE PTR [rax],al
   14000b23d:	add    BYTE PTR [rax],al
   14000b23f:	add    BYTE PTR [rax-0x43],bl
   14000b242:	add    BYTE PTR [rax],al
   14000b244:	test   al,0xe
   14000b246:	add    BYTE PTR [rax],al
   14000b248:	in     al,0x4
   14000b24a:	add    BYTE PTR [rax],al
   14000b24c:	add    BYTE PTR [rax],al
   14000b24e:	add    BYTE PTR [rax],al
   14000b250:	add    ah,cl
   14000b252:	add    BYTE PTR [rax],al
   14000b254:	test   al,0x8
   14000b256:	add    BYTE PTR [rax],al
   14000b258:	in     al,0x4
   14000b25a:	add    BYTE PTR [rax],al
   14000b25c:	add    BYTE PTR [rax],al
   14000b25e:	add    BYTE PTR [rax],al
   14000b260:	test   al,0xd4
   14000b262:	add    BYTE PTR [rax],al
   14000b264:	push   0xffffffffe4000005
   14000b269:	add    al,0x0
   14000b26b:	add    BYTE PTR [rax],al
   14000b26d:	add    BYTE PTR [rax],al
   14000b26f:	add    BYTE PTR [rax],dl
   14000b271:	fiadd  DWORD PTR [rax]
   14000b273:	add    ah,cl
   14000b275:	test   al,0x0
   14000b277:	add    ah,ah
   14000b279:	add    al,0x0
   14000b27b:	add    BYTE PTR [rax],al
   14000b27d:	add    BYTE PTR [rax],al
   14000b27f:	add    ah,bl
   14000b281:	(bad)  
   14000b282:	add    DWORD PTR [rax],eax
   14000b284:	test   al,0x25
   14000b286:	add    BYTE PTR [rax],al
   14000b288:	in     al,0x4
   14000b28a:	add    BYTE PTR [rax],al
   14000b28c:	add    BYTE PTR [rax],al
   14000b28e:	add    BYTE PTR [rax],al
   14000b290:	test   BYTE PTR [rax+0x10a80001],ch
   14000b296:	add    BYTE PTR [rax],al
   14000b298:	in     al,0x4
   14000b29a:	add    BYTE PTR [rax],al
   14000b29c:	add    BYTE PTR [rax],al
   14000b29e:	add    BYTE PTR [rax],al
   14000b2a0:	sub    al,0xb9
   14000b2a2:	add    DWORD PTR [rax],eax
   14000b2a4:	push   0xffffffffe4000004
   14000b2a9:	add    al,0x0
   14000b2ab:	add    BYTE PTR [rax],al
   14000b2ad:	add    BYTE PTR [rax],al
   14000b2af:	add    BYTE PTR [rbp+rdi*4+0x920001],dl
   14000b2b6:	add    BYTE PTR [rax],al
   14000b2b8:	in     al,0x4
   14000b2ba:	add    BYTE PTR [rax],al
   14000b2bc:	add    BYTE PTR [rax],al
   14000b2be:	add    BYTE PTR [rax],al
   14000b2c0:	sub    BYTE PTR [rsi+0x2780001],bh
   14000b2c6:	add    BYTE PTR [rax],al
   14000b2c8:	in     al,0x4
   14000b2ca:	add    BYTE PTR [rax],al
   14000b2cc:	add    BYTE PTR [rax],al
   14000b2ce:	add    BYTE PTR [rax],al
   14000b2d0:	movabs al,ds:0xe4000002000001c0
   14000b2d9:	add    al,0x0
   14000b2db:	add    BYTE PTR [rax],al
   14000b2dd:	add    BYTE PTR [rax],al
   14000b2df:	add    BYTE PTR [rax],ch
   14000b2e1:	add    BYTE PTR [rax],al
   14000b2e3:	add    BYTE PTR [rax],dh
   14000b2e5:	add    BYTE PTR [rax],al
   14000b2e7:	add    BYTE PTR [rax+0x0],ah
   14000b2ea:	add    BYTE PTR [rax],al
   14000b2ec:	add    DWORD PTR [rax],eax
   14000b2ee:	add    al,0x0
   14000b2f0:	add    BYTE PTR [rax],al
   14000b2f2:	add    BYTE PTR [rax],al
   14000b2f4:	add    BYTE PTR [rax+rax*1],0x0
	...
   14000b30c:	add    BYTE PTR [rax],al
   14000b30e:	add    BYTE PTR [rax],0x0
   14000b311:	add    BYTE PTR [rax],0x0
   14000b314:	add    BYTE PTR [rax+0x800080],al
   14000b31a:	add    BYTE PTR [rax],al
   14000b31c:	add    BYTE PTR [rax],0x80
   14000b31f:	add    BYTE PTR [rax-0x7fffff80],al
   14000b325:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000b32c:	add    BYTE PTR [rax],al
   14000b32e:	inc    DWORD PTR [rax]
   14000b330:	add    bh,bh
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	add    bh,bh
   14000b336:	inc    DWORD PTR [rax]
   14000b338:	inc    DWORD PTR [rax]
   14000b33a:	add    BYTE PTR [rax],al
   14000b33c:	inc    DWORD PTR [rax]
   14000b33e:	inc    DWORD PTR [rax]
   14000b340:	(bad)  
   14000b341:	inc    DWORD PTR [rax]
   14000b343:	add    bh,bh
   14000b345:	(bad)  
   14000b346:	inc    DWORD PTR [rax]
	...
   14000b380:	add    BYTE PTR [rax],al
   14000b382:	or     BYTE PTR [rax],al
	...
   14000b398:	add    BYTE PTR [rax],al
   14000b39a:	mov    edi,DWORD PTR [rax+0x0]
	...
   14000b3b0:	add    BYTE PTR [rax],al
   14000b3b2:	mov    bh,0xb9
   14000b3b4:	mov    al,0x0
	...
   14000b3c6:	add    BYTE PTR [rax],al
   14000b3c8:	add    BYTE PTR [rax],cl
   14000b3ca:	mov    ecx,0x808b8b
	...
   14000b3df:	add    BYTE PTR [rax],al
   14000b3e1:	(bad)  
   14000b3e2:	mov    eax,0x7889b9
	...
   14000b3f7:	add    BYTE PTR [rax],al
   14000b3f9:	or     ebx,DWORD PTR [rbx-0x7f466485]
	...
   14000b40f:	add    BYTE PTR [rax],al
   14000b411:	jns    0x14000b39c
   14000b413:	mov    DWORD PTR [rcx+0xb089],ecx
	...
   14000b429:	cwde   
   14000b42a:	fwait
   14000b42b:	fwait
   14000b42c:	jnp    0x14000b3c6
   14000b42e:	cwde   
	...
   14000b43f:	add    BYTE PTR [rdi],al
   14000b441:	cmp    DWORD PTR [rcx-0x77],edi
   14000b444:	cwde   
   14000b445:	fwait
   14000b446:	jns    0x14000b3c8
   14000b448:	add    BYTE PTR [rax],al
   14000b44a:	add    BYTE PTR [rax],al
   14000b44c:	add    BYTE PTR [rax],al
   14000b44e:	add    BYTE PTR [rdi],al
	...
   14000b458:	add    DWORD PTR [rbx+0x79b99797],edx
   14000b45e:	mov    bh,0x98
   14000b460:	add    BYTE PTR [rax],al
   14000b462:	add    BYTE PTR [rax],al
   14000b464:	add    BYTE PTR [rax],al
   14000b466:	add    BYTE PTR [rax+0x0],dl
   14000b46c:	add    BYTE PTR [rax],al
   14000b46e:	add    BYTE PTR [rax],al
   14000b470:	(bad)  
   14000b471:	(bad)  
   14000b472:	adc    edi,DWORD PTR [rcx]
   14000b474:	jns    0x14000b42d
   14000b476:	fwait
   14000b477:	fwait
   14000b478:	jo     0x14000b47a
   14000b47a:	add    BYTE PTR [rax],al
   14000b47c:	add    BYTE PTR [rax],al
   14000b47e:	add    esi,DWORD PTR [rax+0x0]
   14000b481:	add    BYTE PTR [rax],al
   14000b483:	add    BYTE PTR [rax],al
   14000b485:	add    BYTE PTR [rax],al
   14000b487:	(bad)  
   14000b488:	adc    DWORD PTR [rcx],edx
   14000b48a:	xchg   ebp,eax
   14000b48b:	xchg   edi,eax
   14000b48c:	xchg   edi,eax
   14000b48d:	xchg   edi,eax
   14000b48e:	cwde   
   14000b48f:	jns    0x14000b418
   14000b491:	add    BYTE PTR [rax],al
   14000b493:	add    BYTE PTR [rax],al
   14000b495:	add    BYTE PTR [rbp+0x0],dl
   14000b49b:	add    BYTE PTR [rax],al
   14000b49d:	jo     0x14000b49f
   14000b49f:	jno    0x14000b4b2
   14000b4a1:	jno    0x14000b4d4
   14000b4a3:	cmp    DWORD PTR [rcx],edi
   14000b4a5:	jns    0x14000b460
   14000b4a7:	mov    bh,0x9b
   14000b4a9:	jo     0x14000b4ab
   14000b4ab:	add    BYTE PTR [rax],al
   14000b4ad:	jns    0x14000b528
   14000b4af:	add    BYTE PTR [rax],al
   14000b4b1:	add    BYTE PTR [rax],al
   14000b4b3:	add    BYTE PTR [rsi+0x116467e7],al
   14000b4b9:	adc    DWORD PTR [rcx+0x71],edx
   14000b4bc:	jns    0x14000b4f5
   14000b4be:	cwde   
   14000b4bf:	fwait
   14000b4c0:	jns    0x14000b479
   14000b4c2:	add    BYTE PTR [rax],0x7
   14000b4c5:	xchg   edi,eax
   14000b4c6:	cwde   
   14000b4c7:	add    BYTE PTR [rax],al
   14000b4c9:	add    BYTE PTR [rax],al
   14000b4cb:	(bad)  
   14000b4cc:	out    0xc8,eax
   14000b4ce:	enter  0x1466,0x13
   14000b4d2:	adc    DWORD PTR [rcx],ebx
   14000b4d4:	(bad)  
   14000b4d5:	cdq    
   14000b4d6:	jns    0x14000b551
   14000b4d8:	mov    eax,0x9997989b
   14000b4dd:	jns    0x14000b50f
   14000b4df:	add    BYTE PTR [rax],al
   14000b4e1:	add    BYTE PTR [rax],al
   14000b4e3:	out    0xc8,eax
   14000b4e5:	out    0xe7,eax
   14000b4e7:	(bad)  
   14000b4e8:	(bad)  
   14000b4e9:	adc    DWORD PTR [rdi],edx
   14000b4eb:	(bad)  
   14000b4ec:	sbb    DWORD PTR [rbx-0x68],esi
   14000b4ef:	mov    bh,0x98
   14000b4f1:	mov    bh,0x7b
   14000b4f3:	fwait
   14000b4f4:	xchg   edi,eax
   14000b4f5:	xchg   ebx,eax
   14000b4f6:	push   rax
   14000b4f7:	add    BYTE PTR [rax],al
   14000b4f9:	add    BYTE PTR [rsi+0x7e],bh
   14000b4fc:	jle    0x14000b4c6
   14000b4fe:	enter  0x6668,0x5
   14000b502:	adc    DWORD PTR [rcx],edx
   14000b504:	xor    DWORD PTR [rdi+0x79b99793],edx
   14000b50a:	mov    ecx,0x797989
   14000b50f:	add    BYTE PTR [rax],al
   14000b511:	(bad)  
   14000b512:	out    0xc8,eax
   14000b514:	enter  0x7e6e,0x7c
   14000b518:	jbe    0x14000b56a
   14000b51a:	xor    DWORD PTR [rcx],edx
   14000b51c:	push   rbx
   14000b51d:	push   rbx
   14000b51e:	xchg   edi,eax
   14000b51f:	cwde   
   14000b520:	fwait
   14000b521:	jnp    0x14000b59c
   14000b523:	jns    0x14000b4bc
   14000b525:	xchg   edi,eax
   14000b526:	add    BYTE PTR [rax],al
   14000b528:	or     bh,ah
   14000b52a:	jle    0x14000b5aa
   14000b52c:	jle    0x14000b5aa
   14000b52e:	mov    WORD PTR [rsi+0x71016586],es
   14000b534:	adc    DWORD PTR [rdi-0x46764669],edx
   14000b53a:	mov    DWORD PTR [rdi+0x9793],esi
   14000b540:	xchg   BYTE PTR [rdi+riz*8+0x6ee87c7e],cl
   14000b547:	jl     0x14000b5c0
   14000b549:	jbe    0x14000b55b
   14000b54b:	adc    DWORD PTR [rip+0xffffffffb8793931],esi        # 0xf879ee82
   14000b551:	cwde   
   14000b552:	mov    ecx,0x707979
   14000b557:	add    BYTE PTR [rax],al
   14000b559:	mov    bh,ah
   14000b55b:	jl     0x14000b545
   14000b55d:	addr32 out 0x7e,eax
   14000b560:	jl     0x14000b5d8
   14000b562:	push   rcx
   14000b563:	adc    eax,0x98971711
   14000b568:	fwait
   14000b569:	mov    DWORD PTR [rbx-0x69],edi
   14000b56c:	cdq    
   14000b56d:	jo     0x14000b56f
   14000b56f:	add    BYTE PTR [rax],al
   14000b571:	add    BYTE PTR [rax],cl
   14000b573:	call   0xcc8d31f6
   14000b578:	xchg   BYTE PTR [rax+riz*2+0x30],dh
   14000b57c:	xor    DWORD PTR [rcx],edi
   14000b57e:	jns    0x14000b539
   14000b580:	mov    ebx,DWORD PTR [rbx+0x70799997]
   14000b586:	add    BYTE PTR [rax],al
   14000b588:	add    BYTE PTR [rax],al
   14000b58a:	add    BYTE PTR [rax],cl
   14000b58c:	in     al,dx
   14000b58d:	mov    gs,WORD PTR [rsi+0x76]
   14000b590:	je     0x14000b5a3
   14000b592:	rex.RXB add eax,0x7b395111
   14000b598:	cwde   
   14000b599:	mov    bh,0x79
   14000b59b:	mov    DWORD PTR [rcx+0x0],edi
   14000b59e:	add    BYTE PTR [rax],al
   14000b5a0:	add    BYTE PTR [rax],al
   14000b5a2:	add    BYTE PTR [rax],al
   14000b5a4:	add    BYTE PTR [rdi+rax*4+0x70141c7],cl
   14000b5ab:	add    DWORD PTR [rcx],edx
   14000b5ad:	xor    DWORD PTR [rbx-0x68],edx
   14000b5b0:	fwait
   14000b5b1:	cwde   
   14000b5b2:	fwait
   14000b5b3:	xchg   edi,eax
   14000b5b4:	xchg   edi,eax
	...
   14000b5bd:	add    BYTE PTR [rsi+0x14163474],cl
   14000b5c3:	jo     0x14000b616
   14000b5c5:	(bad)  
   14000b5c6:	xchg   edi,eax
   14000b5c7:	fwait
   14000b5c8:	js     0x14000b583
   14000b5ca:	mov    DWORD PTR [rcx+0x38],edi
	...
   14000b5d5:	add    BYTE PTR [rax],al
   14000b5d7:	je     0x14000b5f0
   14000b5d9:	add    DWORD PTR [rcx+0x61],eax
   14000b5dc:	add    edx,DWORD PTR [rcx]
   14000b5de:	sbb    DWORD PTR [rcx-0x47],edi
   14000b5e1:	mov    edx,DWORD PTR [rbx+0x9097]
	...
   14000b5ef:	(bad)  
   14000b5f0:	gs gs and eax,0x17175106
   14000b5f7:	cwde   
   14000b5f8:	fwait
   14000b5f9:	jns    0x14000b584
   14000b5fb:	jns    0x14000b66d
	...
   14000b605:	add    BYTE PTR [rax],al
   14000b607:	add    BYTE PTR [rsi+0x67],ah
   14000b60a:	rex.RXB push r14
   14000b60c:	adc    BYTE PTR [rcx],dl
   14000b60e:	adc    ebx,DWORD PTR [rbx-0x66688475]
	...
   14000b620:	(bad)  
   14000b621:	(bad)  
   14000b622:	data16 rex.RXB (bad) 
   14000b625:	push   rbx
   14000b626:	(bad)  
   14000b627:	xchg   edi,eax
   14000b628:	fwait
   14000b629:	jns    0x14000b5e4
   14000b62b:	jns    0x14000b62d
	...
   14000b639:	out    0x67,eax
   14000b63b:	fs je  0x14000b64f
   14000b63e:	adc    DWORD PTR [rbx-0x75],edi
   14000b641:	jnp    0x14000b69c
   14000b643:	ja     0x14000b645
	...
   14000b651:	add    BYTE PTR [rsi+riz*2+0x66],bh
   14000b655:	adc    DWORD PTR [rcx-0x67],esi
   14000b658:	mov    bh,0xb9
   14000b65a:	jns    0x14000b5ec
	...
   14000b668:	add    BYTE PTR [rax],al
   14000b66a:	add    BYTE PTR [rsi+0x76],dh
   14000b66d:	adc    esi,DWORD PTR [r15-0x45]
   14000b671:	jns    0x14000b6ec
   14000b673:	jo     0x14000b675
	...
   14000b681:	add    BYTE PTR [rax],al
   14000b683:	(bad)  
   14000b684:	(bad)  
   14000b685:	jo     0x14000b69c
   14000b687:	fwait
   14000b688:	jnp    0x14000b705
   14000b68a:	xchg   edi,eax
   14000b68b:	nop
	...
   14000b69c:	xchg   BYTE PTR [rbp+0x13],ah
   14000b69f:	sbb    DWORD PTR [rbx+0x7979],ecx
	...
   14000b6b1:	add    BYTE PTR [rax],al
   14000b6b3:	add    BYTE PTR [riz*8-0x464784ff],cl
   14000b6ba:	xchg   edi,eax
	...
   14000b6cb:	add    BYTE PTR [rax],al
   14000b6cd:	adc    WORD PTR [rdi],dx
   14000b6d0:	mov    ebx,0x9797
	...
   14000b6e5:	xchg   BYTE PTR [rbp+0x19],dh
   14000b6e8:	mov    ecx,DWORD PTR [rcx+0x70]
	...
   14000b6fa:	add    BYTE PTR [rax],al
   14000b6fc:	add    BYTE PTR [rsi],al
   14000b6fe:	(bad)  
   14000b6ff:	(bad)  
   14000b700:	mov    eax,0x9093
	...
   14000b715:	add    BYTE PTR [rcx+rbx*1-0x45],dh
   14000b719:	xchg   edi,eax
	...
   14000b72e:	jbe    0x14000b747
   14000b730:	mov    ebx,DWORD PTR [rcx+0x0]
	...
   14000b743:	add    BYTE PTR [rax],al
   14000b745:	add    BYTE PTR [rsi],cl
   14000b747:	adc    DWORD PTR [rcx+0x70],edi
	...
   14000b75d:	add    BYTE PTR [rax],al
   14000b75f:	jno    0x14000b7da
   14000b761:	jo     0x14000b763
	...
   14000b777:	jne    0x14000b790
	...
   14000b78d:	add    BYTE PTR [rax],al
   14000b78f:	or     BYTE PTR [rax+0x0],dh
	...
   14000b7c6:	add    BYTE PTR [rax],al
   14000b7c8:	(bad)  
   14000b7c9:	(bad)  
   14000b7ca:	(bad)  
   14000b7cb:	(bad)  
   14000b7cc:	(bad)  
   14000b7cd:	inc    DWORD PTR [rax]
   14000b7cf:	add    bh,bh
   14000b7d1:	(bad)  
   14000b7d2:	(bad)  
   14000b7d3:	(bad)  
   14000b7d4:	(bad)  
   14000b7d5:	inc    DWORD PTR [rax]
   14000b7d7:	add    bh,bh
   14000b7d9:	(bad)  
   14000b7da:	sti    
   14000b7db:	(bad)  
   14000b7dc:	(bad)  
   14000b7dd:	inc    DWORD PTR [rax]
   14000b7df:	add    bh,bh
   14000b7e1:	push   rax
   14000b7e3:	(bad)  
   14000b7e4:	(bad)  
   14000b7e5:	inc    DWORD PTR [rax]
   14000b7e7:	add    bh,bh
   14000b7e9:	push   rax
   14000b7eb:	jg     0x14000b7ec
   14000b7ed:	inc    DWORD PTR [rax]
   14000b7ef:	add    bh,bh
   14000b7f1:	jmp    rax
   14000b7f3:	(bad)  
   14000b7f4:	(bad)  
   14000b7f5:	inc    DWORD PTR [rax]
   14000b7f7:	add    bh,bh
   14000b7f9:	jmp    rax
   14000b7fb:	ud0    edi,edi
   14000b7fe:	add    BYTE PTR [rax],al
   14000b800:	(bad)  
   14000b801:	jmp    rax
   14000b803:	(bad)  
   14000b804:	(bad)  
   14000b805:	inc    DWORD PTR [rax]
   14000b807:	add    bh,bh
   14000b809:	inc    eax
   14000b80b:	(bad)  
   14000b80c:	(bad)  
   14000b80d:	inc    DWORD PTR [rax]
   14000b80f:	add    bh,bh
   14000b811:	inc    eax
   14000b813:	add    edi,edi
   14000b815:	inc    DWORD PTR [rax]
   14000b817:	add    bh,bh
   14000b819:	inc    DWORD PTR [rax+0xfeff01]
   14000b81f:	add    bh,bh
   14000b821:	inc    DWORD PTR [rax+0xfdff00]
   14000b827:	add    bh,bh
   14000b829:	inc    DWORD PTR [rax]
   14000b82b:	add    BYTE PTR [rdi-0x7],bh
   14000b82e:	add    BYTE PTR [rax],al
   14000b830:	(bad)  
   14000b831:	inc    BYTE PTR [rax]
   14000b833:	add    BYTE PTR [rdi],bh
   14000b835:	repz add BYTE PTR [rax],al
   14000b838:	(bad)  
   14000b839:	fadd   QWORD PTR [rax]
   14000b83b:	add    BYTE PTR [rdi],bl
   14000b83d:	ret    
   14000b83e:	add    BYTE PTR [rax],al
   14000b840:	inc    DWORD PTR [rax]
   14000b842:	add    BYTE PTR [rax],al
   14000b844:	(bad)  
   14000b845:	add    DWORD PTR [rax],0x0
   14000b848:	inc    BYTE PTR [rax]
   14000b84a:	add    BYTE PTR [rax],al
   14000b84c:	add    BYTE PTR [rdi],al
   14000b84e:	add    BYTE PTR [rax],al
   14000b850:	cld    
   14000b851:	add    BYTE PTR [rax],al
   14000b853:	add    BYTE PTR [rax],al
   14000b855:	(bad)  
   14000b856:	add    BYTE PTR [rax],al
   14000b858:	lock add BYTE PTR [rax],al
   14000b85b:	add    BYTE PTR [rax],al
   14000b85d:	sldt   WORD PTR [rax]
   14000b860:	loopne 0x14000b862
   14000b862:	add    BYTE PTR [rax],al
   14000b864:	add    BYTE PTR [rdi],cl
   14000b866:	add    BYTE PTR [rax],al
   14000b868:	add    BYTE PTR [rax],0x0
   14000b86b:	add    BYTE PTR [rax],al
   14000b86d:	sldt   WORD PTR [rax]
   14000b870:	add    BYTE PTR [rax],al
   14000b872:	add    BYTE PTR [rax],al
   14000b874:	add    BYTE PTR [rdi],bl
   14000b876:	add    BYTE PTR [rax],al
   14000b878:	rol    BYTE PTR [rax],0x0
   14000b87b:	add    BYTE PTR [rax],al
   14000b87d:	(bad)  
   14000b87e:	add    BYTE PTR [rax],al
   14000b880:	clc    
   14000b881:	add    BYTE PTR [rax],al
   14000b883:	add    BYTE PTR [rax],al
   14000b885:	(bad)  
   14000b886:	add    BYTE PTR [rax],al
   14000b888:	inc    BYTE PTR [rax]
   14000b88a:	add    BYTE PTR [rax],al
   14000b88c:	add    BYTE PTR [rdi],bh
   14000b88e:	add    BYTE PTR [rax],al
   14000b890:	inc    eax
   14000b892:	add    BYTE PTR [rax],al
   14000b894:	add    BYTE PTR [rdi],bh
   14000b896:	add    BYTE PTR [rax],al
   14000b898:	push   rax
   14000b89a:	add    BYTE PTR [rax],al
   14000b89c:	add    BYTE PTR [rdi],bh
   14000b89e:	add    BYTE PTR [rax],al
   14000b8a0:	(bad)  
   14000b8a1:	cld    
   14000b8a2:	add    BYTE PTR [rax],al
   14000b8a4:	add    BYTE PTR [rdi+0x0],bh
   14000b8a7:	add    bh,bh
   14000b8a9:	inc    BYTE PTR [rax]
   14000b8ab:	add    BYTE PTR [rax],al
   14000b8ad:	jg     0x14000b8af
   14000b8af:	add    bh,bh
   14000b8b1:	inc    DWORD PTR [rax]
   14000b8b3:	add    BYTE PTR [rax],al
   14000b8b5:	inc    DWORD PTR [rax]
   14000b8b7:	add    bh,bh
   14000b8b9:	inc    DWORD PTR [rax+0xff0000]
   14000b8bf:	add    bh,bh
   14000b8c1:	inc    eax
   14000b8c3:	add    BYTE PTR [rax],al
   14000b8c5:	inc    DWORD PTR [rax]
   14000b8c7:	add    bh,bh
   14000b8c9:	push   rax
   14000b8cb:	add    BYTE PTR [rcx],al
   14000b8cd:	inc    DWORD PTR [rax]
   14000b8cf:	add    bh,bh
   14000b8d1:	(bad)  
   14000b8d2:	cld    
   14000b8d3:	add    BYTE PTR [rcx],al
   14000b8d5:	inc    DWORD PTR [rax]
   14000b8d7:	add    bh,bh
   14000b8d9:	(bad)  
   14000b8da:	inc    BYTE PTR [rax]
   14000b8dc:	add    edi,edi
   14000b8de:	add    BYTE PTR [rax],al
   14000b8e0:	(bad)  
   14000b8e1:	(bad)  
   14000b8e2:	inc    DWORD PTR [rax]
   14000b8e4:	add    edi,edi
   14000b8e6:	add    BYTE PTR [rax],al
   14000b8e8:	(bad)  
   14000b8e9:	(bad)  
   14000b8ea:	inc    DWORD PTR [rax+0xff03]
   14000b8f0:	(bad)  
   14000b8f1:	(bad)  
   14000b8f2:	inc    eax
   14000b8f4:	add    edi,edi
   14000b8f6:	add    BYTE PTR [rax],al
   14000b8f8:	(bad)  
   14000b8f9:	(bad)  
   14000b8fa:	inc    eax
   14000b8fc:	(bad)  
   14000b8fd:	inc    DWORD PTR [rax]
   14000b8ff:	add    bh,bh
   14000b901:	(bad)  
   14000b902:	jmp    rax
   14000b904:	(bad)  
   14000b905:	inc    DWORD PTR [rax]
   14000b907:	add    bh,bh
   14000b909:	(bad)  
   14000b90a:	push   rax
   14000b90c:	ud0    eax,DWORD PTR [rax]
   14000b90f:	add    bh,bh
   14000b911:	(bad)  
   14000b912:	push   rax
   14000b914:	ud0    eax,DWORD PTR [rax]
   14000b917:	add    bh,bh
   14000b919:	(bad)  
   14000b91a:	(bad)  
   14000b91b:	clc    
   14000b91c:	(bad)  
   14000b91d:	inc    DWORD PTR [rax]
   14000b91f:	add    bh,bh
   14000b921:	(bad)  
   14000b922:	(bad)  
   14000b923:	cld    
   14000b924:	(bad)  
   14000b925:	inc    DWORD PTR [rax]
   14000b927:	add    bh,bh
   14000b929:	(bad)  
   14000b92a:	(bad)  
   14000b92b:	cld    
   14000b92c:	(bad)  
   14000b92d:	inc    DWORD PTR [rax]
   14000b92f:	add    bh,bh
   14000b931:	(bad)  
   14000b932:	(bad)  
   14000b933:	(bad)  
   14000b934:	jg     0x14000b935
   14000b936:	add    BYTE PTR [rax],al
   14000b938:	(bad)  
   14000b939:	(bad)  
   14000b93a:	(bad)  
   14000b93b:	(bad)  
   14000b93c:	(bad)  
   14000b93d:	inc    DWORD PTR [rax]
   14000b93f:	add    bh,bh
   14000b941:	(bad)  
   14000b942:	(bad)  
   14000b943:	(bad)  
   14000b944:	(bad)  
   14000b945:	inc    DWORD PTR [rax]
   14000b947:	add    BYTE PTR [rax],ch
   14000b949:	add    BYTE PTR [rax],al
   14000b94b:	add    BYTE PTR [rax],ah
   14000b94d:	add    BYTE PTR [rax],al
   14000b94f:	add    BYTE PTR [rax+0x0],al
   14000b952:	add    BYTE PTR [rax],al
   14000b954:	add    DWORD PTR [rax],eax
   14000b956:	add    al,0x0
   14000b958:	add    BYTE PTR [rax],al
   14000b95a:	add    BYTE PTR [rax],al
   14000b95c:	add    BYTE PTR [rdx],al
	...
   14000b976:	add    BYTE PTR [rax],0x0
   14000b979:	add    BYTE PTR [rax],0x0
   14000b97c:	add    BYTE PTR [rax+0x800080],al
   14000b982:	add    BYTE PTR [rax],al
   14000b984:	add    BYTE PTR [rax],0x80
   14000b987:	add    BYTE PTR [rax-0x7fffff80],al
   14000b98d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000b994:	add    BYTE PTR [rax],al
   14000b996:	inc    DWORD PTR [rax]
   14000b998:	add    bh,bh
   14000b99a:	add    BYTE PTR [rax],al
   14000b99c:	add    bh,bh
   14000b99e:	inc    DWORD PTR [rax]
   14000b9a0:	inc    DWORD PTR [rax]
   14000b9a2:	add    BYTE PTR [rax],al
   14000b9a4:	inc    DWORD PTR [rax]
   14000b9a6:	inc    DWORD PTR [rax]
   14000b9a8:	(bad)  
   14000b9a9:	inc    DWORD PTR [rax]
   14000b9ab:	add    bh,bh
   14000b9ad:	(bad)  
   14000b9ae:	inc    DWORD PTR [rax]
	...
   14000b9d4:	add    BYTE PTR [rax],al
   14000b9d6:	or     BYTE PTR [rdi+0x0],dh
	...
   14000b9e4:	add    BYTE PTR [rax],al
   14000b9e6:	or     edi,DWORD PTR [rbx-0x48]
	...
   14000b9f5:	add    BYTE PTR [rax],cl
   14000b9f7:	mov    ecx,0x8089
	...
   14000ba04:	add    BYTE PTR [rax],al
   14000ba06:	jns    0x14000b9bf
   14000ba08:	mov    bh,0xb0
	...
   14000ba16:	xchg   edi,eax
   14000ba17:	xchg   edi,eax
   14000ba18:	cdq    
   14000ba19:	jns    0x14000ba1b
	...
   14000ba23:	add    BYTE PTR [rax],al
   14000ba25:	(bad)  
   14000ba26:	cmp    DWORD PTR [rcx-0x75],edi
   14000ba29:	cwde   
   14000ba2a:	mov    al,0x0
   14000ba2c:	add    BYTE PTR [rax],al
   14000ba2e:	add    BYTE PTR [rax],cl
   14000ba30:	add    BYTE PTR [rax],al
   14000ba32:	add    BYTE PTR [rax],al
   14000ba34:	add    BYTE PTR [rcx],al
   14000ba36:	adc    edx,DWORD PTR [rbx+0x589b97]
   14000ba3c:	add    BYTE PTR [rax],al
   14000ba3e:	add    BYTE PTR [rax],dl
   14000ba40:	add    BYTE PTR [rax],al
   14000ba42:	add    BYTE PTR [rax],al
   14000ba44:	add    BYTE PTR [rcx],dl
   14000ba46:	push   rcx
   14000ba47:	jns    0x14000bac2
   14000ba49:	jns    0x14000ba04
   14000ba4b:	add    BYTE PTR [rax],0x0
   14000ba4e:	jns    0x14000b9d0
   14000ba50:	add    BYTE PTR [rax],al
   14000ba52:	or     BYTE PTR [rdi+0x66],ah
   14000ba55:	push   rbx
   14000ba56:	adc    DWORD PTR [rbx],edx
   14000ba58:	adc    ebx,DWORD PTR [rax+0x7809b9b]
   14000ba5e:	xchg   edi,eax
   14000ba5f:	add    BYTE PTR [rax],al
   14000ba61:	add    BYTE PTR [rsi-0x38],bh
   14000ba64:	out    0x65,eax
   14000ba66:	adc    edx,DWORD PTR [rcx-0x69]
   14000ba69:	xchg   edi,eax
   14000ba6a:	mov    bh,0x89
   14000ba6c:	jns    0x14000baa7
   14000ba6e:	jns    0x14000ba70
   14000ba70:	add    BYTE PTR [rsi],cl
   14000ba72:	ja     0x14000ba5b
   14000ba74:	enter  0x166,0x13
   14000ba78:	push   rbx
   14000ba79:	xchg   edi,eax
   14000ba7a:	cdq    
   14000ba7b:	mov    bh,0xb7
   14000ba7d:	xchg   edi,eax
   14000ba7e:	cwde   
   14000ba7f:	add    BYTE PTR [rdi],al
   14000ba81:	out    0xce,eax
   14000ba83:	jle    0x14000bb01
   14000ba85:	xchg   DWORD PTR [rbp+0x11],eax
   14000ba88:	adc    eax,0x97988b39
   14000ba8d:	xchg   ebx,eax
   14000ba8e:	nop
   14000ba8f:	add    BYTE PTR [rax],cl
   14000ba91:	enter  0x7ce7,0x8e
   14000ba95:	jl     0x14000bb09
   14000ba97:	adc    DWORD PTR [rcx],esi
   14000ba99:	xchg   edi,eax
   14000ba9a:	cwde   
   14000ba9b:	mov    ecx,0x7079b9
   14000baa0:	add    BYTE PTR [rax],cl
   14000baa2:	out    0xe7,eax
   14000baa4:	in     eax,0xe7
   14000baa6:	gs add eax,0x779b1317
   14000baac:	jns    0x14000bb27
   14000baae:	add    BYTE PTR [rax],al
   14000bab0:	add    BYTE PTR [rax],al
   14000bab2:	or     BYTE PTR [rsi-0x39],bh
   14000bab5:	je     0x14000bac7
   14000bab7:	jo     0x14000baca
   14000bab9:	xchg   edi,eax
   14000baba:	cwde   
   14000babb:	fwait
   14000babc:	xchg   edi,eax
   14000babd:	xchg   edi,eax
   14000babe:	add    BYTE PTR [rax],al
   14000bac0:	add    BYTE PTR [rax],al
   14000bac2:	add    BYTE PTR [rax],al
   14000bac4:	xchg   BYTE PTR [rax+0x14],dl
   14000bac7:	jno    0x14000badc
   14000bac9:	push   rbx
   14000baca:	fwait
   14000bacb:	jnp    0x14000bb46
   14000bacd:	(bad)  
   14000bace:	add    BYTE PTR [rax],al
   14000bad0:	add    BYTE PTR [rax],al
   14000bad2:	add    BYTE PTR [rax],al
   14000bad4:	add    BYTE PTR [rbp+0x61],ah
   14000bad7:	(bad)  
   14000bad8:	adc    DWORD PTR [rdi],edx
   14000bada:	cwde   
   14000badb:	cwde   
   14000badc:	xchg   edi,eax
   14000badd:	nop
   14000bade:	add    BYTE PTR [rax],al
   14000bae0:	add    BYTE PTR [rax],al
   14000bae2:	add    BYTE PTR [rax],al
   14000bae4:	add    BYTE PTR [rsi+0x74],dh
   14000bae7:	je     0x14000bafe
   14000bae9:	xor    DWORD PTR [rbx-0x47],edi
   14000baec:	mov    ecx,0x70
   14000baf1:	add    BYTE PTR [rax],al
   14000baf3:	add    BYTE PTR [rax],al
   14000baf5:	or     BYTE PTR [rsi+0x67],ah
   14000baf8:	(bad)  
   14000baf9:	adc    DWORD PTR [rax+0x9097b7],ebx
   14000baff:	add    BYTE PTR [rax],al
   14000bb01:	add    BYTE PTR [rax],al
   14000bb03:	add    BYTE PTR [rax],al
   14000bb05:	add    BYTE PTR [rdi],al
   14000bb07:	(bad)  
   14000bb08:	(bad)  
   14000bb09:	(bad)  
   14000bb0a:	cmp    DWORD PTR [rdi+0x97],esi
   14000bb10:	add    BYTE PTR [rax],al
   14000bb12:	add    BYTE PTR [rax],al
   14000bb14:	add    BYTE PTR [rax],al
   14000bb16:	add    BYTE PTR [rdi],al
   14000bb18:	adc    DWORD PTR fs:[rbx-0x77],edi
   14000bb1c:	jns    0x14000bb1e
	...
   14000bb26:	add    BYTE PTR [rax],al
   14000bb28:	push   cx
   14000bb2a:	fwait
   14000bb2b:	mov    bh,0x98
	...
   14000bb35:	add    BYTE PTR [rax],al
   14000bb37:	add    BYTE PTR [rsi],al
   14000bb39:	jno    0x14000bbb3
   14000bb3b:	mov    ecx,0x70
	...
   14000bb48:	or     BYTE PTR [rcx+0x1b],ah
   14000bb4b:	mov    DWORD PTR [rax],esi
	...
   14000bb59:	sbb    edi,DWORD PTR gs:[rcx+0x80]
	...
   14000bb68:	add    BYTE PTR [rsi],al
   14000bb6a:	push   rdi
   14000bb6b:	jns    0x14000bb6d
	...
   14000bb79:	or     BYTE PTR [rbx],bl
   14000bb7b:	nop
	...
   14000bb88:	add    BYTE PTR [rax],al
   14000bb8a:	gs jo  0x14000bb8d
	...
   14000bbad:	add    BYTE PTR [rax],al
   14000bbaf:	add    bh,bh
   14000bbb1:	(bad)  
   14000bbb2:	(bad)  
   14000bbb3:	(bad)  
   14000bbb4:	(bad)  
   14000bbb5:	(bad)  
   14000bbb6:	(bad)  
   14000bbb7:	(bad)  
   14000bbb8:	(bad)  
   14000bbb9:	clc    
   14000bbba:	(bad)  
   14000bbbb:	(bad)  
   14000bbbc:	(bad)  
   14000bbbd:	clc    
   14000bbbe:	(bad)  
   14000bbbf:	(bad)  
   14000bbc0:	(bad)  
   14000bbc1:	clc    
   14000bbc2:	(bad)  
   14000bbc3:	(bad)  
   14000bbc4:	push   rax
   14000bbc6:	(bad)  
   14000bbc7:	(bad)  
   14000bbc8:	push   rax
   14000bbca:	ud0    edi,edi
   14000bbcd:	loopne 0x14000bbd6
   14000bbcf:	(bad)  
   14000bbd0:	jmp    rax
   14000bbd2:	add    edi,ebp
   14000bbd4:	inc    eax
   14000bbd6:	add    ecx,esi
   14000bbd8:	clc    
   14000bbd9:	add    BYTE PTR [rax],al
   14000bbdb:	movsxd esi,eax
   14000bbdd:	add    BYTE PTR [rax],al
   14000bbdf:	add    esp,eax
   14000bbe1:	add    BYTE PTR [rax],al
   14000bbe3:	add    eax,DWORD PTR [rax-0x7ff90000]
   14000bbe9:	add    BYTE PTR [rax],al
   14000bbeb:	(bad)  
   14000bbec:	loopne 0x14000bbee
   14000bbee:	add    BYTE PTR [rdi],cl
   14000bbf0:	clc    
   14000bbf1:	add    BYTE PTR [rax],al
   14000bbf3:	ud0    eax,DWORD PTR [rax]
   14000bbf6:	add    BYTE PTR [rdi],cl
   14000bbf8:	inc    eax
   14000bbfa:	add    BYTE PTR [rdi],bl
   14000bbfc:	inc    eax
   14000bbfe:	add    BYTE PTR [rdi],bl
   14000bc00:	jmp    rax
   14000bc02:	add    BYTE PTR [rdi],bl
   14000bc04:	(bad)  
   14000bc05:	clc    
   14000bc06:	add    BYTE PTR [rdi],bh
   14000bc08:	(bad)  
   14000bc09:	inc    BYTE PTR [rax]
   14000bc0b:	(bad)  
   14000bc0c:	(bad)  
   14000bc0d:	inc    DWORD PTR [rax]
   14000bc0f:	(bad)  
   14000bc10:	(bad)  
   14000bc11:	inc    DWORD PTR [rax-0x7f000081]
   14000bc17:	jg     0x14000bc18
   14000bc19:	inc    eax
   14000bc1b:	jg     0x14000bc1c
   14000bc1d:	jmp    rax
   14000bc1f:	(bad)  
   14000bc20:	(bad)  
   14000bc21:	jmp    rcx
   14000bc23:	(bad)  
   14000bc24:	(bad)  
   14000bc25:	push   rcx
   14000bc27:	(bad)  
   14000bc28:	(bad)  
   14000bc29:	(bad)  
   14000bc2a:	(bad)  
   14000bc2b:	(bad)  
   14000bc2c:	(bad)  
   14000bc2d:	(bad)  
   14000bc2e:	(bad)  
   14000bc2f:	jmp    FWORD PTR [rax]
   14000bc31:	add    BYTE PTR [rax],al
   14000bc33:	add    BYTE PTR [rax],dl
   14000bc35:	add    BYTE PTR [rax],al
   14000bc37:	add    BYTE PTR [rax],ah
   14000bc39:	add    BYTE PTR [rax],al
   14000bc3b:	add    BYTE PTR [rcx],al
   14000bc3d:	add    BYTE PTR [rax+rax*1],al
   14000bc40:	add    BYTE PTR [rax],al
   14000bc42:	add    BYTE PTR [rax],al
   14000bc44:	add    BYTE PTR [rax],0x0
	...
   14000bc5b:	add    BYTE PTR [rax],al
   14000bc5d:	add    BYTE PTR [rax+0x800000],al
   14000bc63:	add    BYTE PTR [rax],al
   14000bc65:	add    BYTE PTR [rax+0x8000],0x0
   14000bc6c:	add    BYTE PTR [rax],0x80
   14000bc6f:	add    BYTE PTR [rax-0x7fffff80],al
   14000bc75:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000bc7c:	add    BYTE PTR [rax],al
   14000bc7e:	inc    DWORD PTR [rax]
   14000bc80:	add    bh,bh
   14000bc82:	add    BYTE PTR [rax],al
   14000bc84:	add    bh,bh
   14000bc86:	inc    DWORD PTR [rax]
   14000bc88:	inc    DWORD PTR [rax]
   14000bc8a:	add    BYTE PTR [rax],al
   14000bc8c:	inc    DWORD PTR [rax]
   14000bc8e:	inc    DWORD PTR [rax]
   14000bc90:	(bad)  
   14000bc91:	inc    DWORD PTR [rax]
   14000bc93:	add    bh,bh
   14000bc95:	(bad)  
   14000bc96:	inc    DWORD PTR [rax]
	...
   14000bca0:	add    BYTE PTR [rax],al
   14000bca2:	add    BYTE PTR [rbx],cl
   14000bca4:	add    BYTE PTR [rax],al
   14000bca6:	add    BYTE PTR [rax],al
   14000bca8:	add    BYTE PTR [rax],al
   14000bcaa:	add    BYTE PTR [rdi-0x48],dh
   14000bcad:	add    BYTE PTR [rax],al
   14000bcaf:	add    BYTE PTR [rax],al
   14000bcb1:	add    BYTE PTR [rax],al
   14000bcb3:	cdq    
   14000bcb4:	jns    0x14000bcb6
   14000bcb6:	add    BYTE PTR [rax],al
   14000bcb8:	add    BYTE PTR [rax],al
   14000bcba:	(bad)  
   14000bcbb:	adc    ebx,DWORD PTR [rax+0x8000b0]
   14000bcc1:	xchg   BYTE PTR [rdi+rdx*1-0x6d],dh
   14000bcc5:	cwde   
   14000bcc6:	ja     0x14000bc58
   14000bcc8:	(bad)  
   14000bcc9:	out    0xe7,eax
   14000bccb:	adc    DWORD PTR [rdi],edx
   14000bccd:	fwait
   14000bcce:	cdq    
   14000bccf:	or     BYTE PTR [rax],0xce
   14000bcd2:	push   rdi
   14000bcd3:	adc    ecx,DWORD PTR gs:[rcx+0x8000083]
   14000bcda:	in     eax,0x5
   14000bcdc:	cmp    DWORD PTR [rbx-0x69],edi
   14000bcdf:	add    BYTE PTR [rax],al
   14000bce1:	add    BYTE PTR [rdi],al
   14000bce3:	rex.XB add DWORD PTR [r8+0x98],ebx
   14000bcea:	add    BYTE PTR [rsi+0x57],dh
   14000bced:	mov    ebx,0x90
   14000bcf2:	add    BYTE PTR [rax],al
   14000bcf4:	(bad)  
   14000bcf5:	jns    0x14000bd67
   14000bcf7:	add    BYTE PTR [rax],al
   14000bcf9:	add    BYTE PTR [rax],al
   14000bcfb:	add    BYTE PTR [rip+0x803b],al        # 0x140013d3c
   14000bd01:	add    BYTE PTR [rax],al
   14000bd03:	add    BYTE PTR [rdi],al
   14000bd05:	jns    0x14000bd07
   14000bd07:	add    BYTE PTR [rax],al
   14000bd09:	add    BYTE PTR [rax],al
   14000bd0b:	add    BYTE PTR [rax],al
   14000bd0d:	js     0x14000bd0f
	...
   14000bd17:	add    bh,bh
   14000bd19:	inc    DWORD PTR [rax]
   14000bd1b:	add    dh,bh
   14000bd1d:	inc    DWORD PTR [rax]
   14000bd1f:	add    ah,bh
   14000bd21:	(bad)  
   14000bd22:	add    BYTE PTR [rax],al
   14000bd24:	cld    
   14000bd25:	(bad)  
   14000bd26:	add    BYTE PTR [rax],al
   14000bd28:	clc    
   14000bd29:	sbb    eax,0x1c00000
   14000bd2e:	add    BYTE PTR [rax],al
   14000bd30:	add    BYTE PTR [rcx],0x0
   14000bd33:	add    BYTE PTR [rax-0x1ffffffd],al
   14000bd39:	add    eax,DWORD PTR [rax]
   14000bd3b:	add    al,bh
   14000bd3d:	add    eax,DWORD PTR [rax]
   14000bd3f:	add    ah,bh
   14000bd41:	(bad)  
   14000bd42:	add    BYTE PTR [rax],al
   14000bd44:	inc    DWORD PTR [rdi]
   14000bd46:	add    BYTE PTR [rax],al
   14000bd48:	inc    DWORD PTR [rdi-0x70010000]
   14000bd4e:	add    BYTE PTR [rax],al
   14000bd50:	dec    edi
   14000bd52:	add    BYTE PTR [rax],al
   14000bd54:	(bad)  
   14000bd55:	inc    DWORD PTR [rax]
   14000bd57:	add    BYTE PTR [rax],ch
   14000bd59:	add    BYTE PTR [rax],al
   14000bd5b:	add    BYTE PTR [rax],dh
   14000bd5d:	add    BYTE PTR [rax],al
   14000bd5f:	add    BYTE PTR [rax+0x0],ah
   14000bd62:	add    BYTE PTR [rax],al
   14000bd64:	add    DWORD PTR [rax],eax
   14000bd66:	or     BYTE PTR [rax],al
   14000bd68:	add    BYTE PTR [rax],al
   14000bd6a:	add    BYTE PTR [rax],al
   14000bd6c:	add    BYTE PTR [rcx],cl
	...
   14000bd76:	add    BYTE PTR [rax],al
   14000bd78:	add    BYTE PTR [rcx],al
   14000bd7a:	add    BYTE PTR [rax],al
   14000bd7c:	add    BYTE PTR [rcx],al
   14000bd7e:	add    BYTE PTR [rax],al
   14000bd80:	add    BYTE PTR [rax],al
   14000bd82:	add    BYTE PTR [rax],al
   14000bd84:	cmp    eax,0x43003f27
   14000bd89:	sub    edi,DWORD PTR [rax+rax*1]
   14000bd8c:	rex.WB (bad) 
   14000bd8e:	cmp    al,0x0
   14000bd90:	rex.WRXB xor r15,QWORD PTR [r15]
   14000bd93:	add    BYTE PTR [rbx+0x36],dl
   14000bd96:	cmp    eax,0x3b3d5d00
   14000bd9b:	add    BYTE PTR [rcx+0x3f],ah
   14000bd9e:	xor    eax,0x2e4e7600
   14000bda3:	add    BYTE PTR [rcx+0x51],bh
   14000bda6:	sub    al,0x0
   14000bda8:	imul   eax,DWORD PTR [rbp+0x34],0x38436400
   14000bdaf:	add    BYTE PTR [rcx+0x47],ch
   14000bdb2:	cmp    DWORD PTR [rax],eax
   14000bdb4:	je     0x14000be04
   14000bdb6:	xor    BYTE PTR [rax],al
   14000bdb8:	ja     0x14000be0a
   14000bdba:	xor    BYTE PTR [rax],al
   14000bdbc:	jp     0x14000be10
   14000bdbe:	xor    eax,0x39517800
   14000bdc3:	add    BYTE PTR [rbx],bl
   14000bdc5:	adc    DWORD PTR [rsi+0x0],eax
   14000bdc8:	(bad)  
   14000bdc9:	adc    BYTE PTR [rsi+0x0],cl
   14000bdcc:	sbb    BYTE PTR [rax],dl
   14000bdce:	rex.WX add BYTE PTR [rsi],dl
   14000bdd1:	adc    DWORD PTR [rax+rax*1+0x18],edx
   14000bdd5:	adc    DWORD PTR [rbx+0x0],edx
   14000bdd8:	(bad)  
   14000bdd9:	adc    DWORD PTR [rax+rax*1+0x24],ebx
   14000bddd:	adc    eax,0x17290045
   14000bde2:	rex.RX add BYTE PTR [rsi],r12b
   14000bde5:	sbb    BYTE PTR [rsi+0x0],al
   14000bde8:	sub    ebx,DWORD PTR [rdx]
   14000bdea:	add    BYTE PTR [r8],r12b
   14000bded:	adc    al,0x4a
   14000bdef:	add    BYTE PTR [rbx],ch
   14000bdf1:	sbb    al,0x4b
   14000bdf3:	add    BYTE PTR [rcx],dh
   14000bdf5:	sbb    eax,0x21340044
   14000bdfa:	rex.XB add BYTE PTR [r11],dil
   14000bdfd:	and    eax,0x283f0041
   14000be02:	add    BYTE PTR [r15+riz*1],r14b
   14000be06:	pop    rbx
   14000be07:	add    BYTE PTR [rip+0x13006313],dl        # 0x153012120
   14000be0d:	adc    al,0x6b
   14000be0f:	add    BYTE PTR [rbx],dl
   14000be11:	(bad)  
   14000be12:	jae    0x14000be14
   14000be14:	adc    al,0x18
   14000be16:	ja     0x14000be18
   14000be18:	adc    eax,0x18007b1a
   14000be1d:	sbb    edi,DWORD PTR [rdx+0x0]
   14000be20:	rex (bad) 
   14000be22:	add    BYTE PTR [rbx+r13*1+0x41],al
   14000be27:	add    BYTE PTR [rbp+0x32],cl
   14000be2a:	add    BYTE PTR [rcx+0x56],r14b
   14000be2e:	push   rdi
   14000be2f:	add    BYTE PTR [rsi+0x53],ah
   14000be32:	add    BYTE PTR gs:[rbp-0x58ffe497],bl
   14000be39:	outs   dx,DWORD PTR ds:[rsi]
   14000be3a:	sbb    BYTE PTR [rax],al
   14000be3c:	lods   al,BYTE PTR ds:[rsi]
   14000be3d:	jae    0x14000be56
   14000be3f:	add    BYTE PTR [rbx-0x4dffe58e],ch
   14000be45:	jbe    0x14000be5e
   14000be47:	add    BYTE PTR [rbp-0x46ffe587],dh
   14000be4d:	jnp    0x14000be6b
   14000be4f:	add    BYTE PTR [rbp-0x76ffd8a8],al
   14000be55:	pop    rbp
   14000be56:	(bad)  
   14000be57:	add    BYTE PTR [rax-0x7affd0ab],al
   14000be5d:	pop    rcx
   14000be5e:	sub    DWORD PTR [rax],eax
   14000be60:	lea    ebx,[rsi+0x2a]
   14000be63:	add    BYTE PTR [rax-0x7bffccab],al
   14000be69:	pop    rdx
   14000be6a:	xor    eax,DWORD PTR [rax]
   14000be6c:	mov    BYTE PTR [rax+rsi*1+0x0],bl
   14000be70:	xchg   ecx,eax
   14000be71:	(bad)  
   14000be72:	and    DWORD PTR [rax],eax
   14000be74:	xchg   esp,eax
   14000be75:	sub    al,BYTE PTR fs:[rax]
   14000be78:	mov    WORD PTR [rcx+0x3d],fs
   14000be7b:	add    BYTE PTR [rbx-0x5bffcc96],bl
   14000be81:	outs   dx,DWORD PTR ds:[rsi]
   14000be82:	sub    DWORD PTR [rax],eax
   14000be84:	lods   al,BYTE PTR ds:[rsi]
   14000be85:	jne    0x14000bead
   14000be87:	add    BYTE PTR [rbp-0x57ffd18f],ah
   14000be8d:	ja     0x14000bebe
   14000be8f:	add    BYTE PTR [rcx-0x4bffdb81],bh
   14000be95:	jnp    0x14000bec3
   14000be97:	add    BYTE PTR [rsi+rsi*2+0x79a80031],ch
   14000be9e:	xor    al,0x0
   14000bea0:	lea    esp,[rdx+0x44]
   14000bea3:	add    BYTE PTR [rdi-0x62ffb495],dl
   14000bea9:	jno    0x14000bef2
   14000beab:	add    BYTE PTR [rsi-0x63ffab8c],bl
   14000beb1:	js     0x14000bf05
   14000beb3:	add    BYTE PTR [rdi-0x54ffae86],ah
   14000beb9:	jge    0x14000bf0f
   14000bebb:	add    BYTE PTR [rax+rax*4-0x7f48ffdb],bh
   14000bec2:	(bad)  
   14000bec3:	add    BYTE PTR [rcx+rax*4-0x7939ffcb],dh
   14000beca:	es add bl,al
   14000becd:	mov    DWORD PTR [rip+0x3692ce00],esi        # 0x176938cd3
   14000bed3:	add    BYTE PTR [rbx-0x46ffbd7e],dh
   14000bed9:	test   BYTE PTR [rax+rax*1-0x42],cl
   14000bedd:	mov    BYTE PTR [rsi+0x0],cl
   14000bee0:	mov    bl,0x81
   14000bee2:	push   rdx
   14000bee3:	add    BYTE PTR [rax-0x45ffaf7c],bh
   14000bee9:	xchg   esp,eax
   14000beea:	pop    rsi
   14000beeb:	add    ah,al
   14000beed:	mov    WORD PTR [rax+rax*1-0x38],cs
   14000bef1:	mov    cs,WORD PTR [rbx+0x0]
   14000bef4:	iret   
   14000bef5:	xchg   edx,eax
   14000bef6:	rex.RXB add r15b,r8b
   14000bef9:	xchg   ecx,eax
   14000befa:	rex.WRXB add r12b,r9b
   14000befd:	nop
   14000befe:	rex.WB add r9b,dl
   14000bf01:	xchg   esp,eax
   14000bf02:	rex.X add bpl,dl
   14000bf05:	(bad)  
   14000bf06:	add    sil,r10b
   14000bf09:	popf   
   14000bf0a:	rex.W add al,bl
   14000bf0d:	sahf   
   14000bf0e:	rex.WB add r13b,cl
   14000bf11:	pushf  
   14000bf12:	pop    rcx
   14000bf13:	add    cl,bl
   14000bf15:	movabs eax,ds:0xa1d90056a0d4004e
   14000bf1e:	push   rdx
   14000bf1f:	add    dh,dl
   14000bf21:	movabs ds:0x9cc800669bc1005b,eax
   14000bf2a:	push   0x0
   14000bf2c:	(bad)  
   14000bf2d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bf2e:	imul   eax,DWORD PTR [rax],0xffffffd6
   14000bf31:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bf32:	movsxd eax,DWORD PTR [rax]
   14000bf34:	(bad)  
   14000bf35:	stos   BYTE PTR es:[rdi],al
   14000bf36:	outs   dx,BYTE PTR ds:[rsi]
   14000bf37:	add    dl,cl
   14000bf39:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bf3a:	jnp    0x14000bf3c
   14000bf3c:	(bad)  
   14000bf3d:	scas   al,BYTE PTR es:[rdi]
   14000bf3e:	jns    0x14000bf40
   14000bf40:	(bad)  
   14000bf41:	sbb    eax,DWORD PTR [rax-0x7be3e800]
   14000bf47:	add    BYTE PTR [rdx],bl
   14000bf49:	(bad)  
   14000bf4a:	mov    DWORD PTR [rax],eax
   14000bf4c:	sbb    esp,DWORD PTR [rcx]
   14000bf4e:	mov    WORD PTR [rax],es
   14000bf50:	sbb    eax,0x37009225
   14000bf55:	(bad)  
   14000bf56:	test   DWORD PTR [rax],eax
   14000bf58:	and    BYTE PTR [rax],ch
   14000bf5a:	xchg   esi,eax
   14000bf5b:	add    BYTE PTR [rbx],ah
   14000bf5d:	sub    eax,0x2923009c
   14000bf62:	movabs al,ds:0xa8352600a3312400
   14000bf6b:	add    BYTE PTR [rsi],ah
   14000bf6d:	cmp    BYTE PTR [rdx-0x51c6d800],ch
   14000bf73:	add    BYTE PTR [rcx],ch
   14000bf75:	cmp    eax,0x332c00b2
   14000bf7a:	mov    esi,0xbe373100
   14000bf7f:	add    BYTE PTR [rbx],dh
   14000bf81:	cmp    bh,BYTE PTR [rbp-0x49bed600]
   14000bf87:	add    BYTE PTR [rbx],ch
   14000bf89:	rex.R mov ebx,0xbe4b2c00
   14000bf8f:	add    BYTE PTR [rax+rax*2],bh
   14000bf92:	mov    ecx,0x83596000
   14000bf97:	add    BYTE PTR [rcx+0x5c],bl
   14000bf9a:	movabs eax,ds:0xb9484500b34b4900
   14000bfa3:	add    BYTE PTR [rsi+0x50],cl
   14000bfa6:	mov    dh,0x0
   14000bfa8:	rex.WRXB push r14
   14000bfaa:	mov    edi,0xb5575700
   14000bfaf:	add    BYTE PTR [rbp+0x5c],bl
   14000bfb2:	mov    bl,0x0
   14000bfb4:	(bad)  
   14000bfb5:	pop    rdi
   14000bfb6:	mov    ah,0x0
   14000bfb8:	imul   esp,DWORD PTR [rsi-0x4f],0xb26f7400
   14000bfbf:	add    BYTE PTR [rbp+0x70],dh
   14000bfc2:	mov    cl,0x0
   14000bfc4:	sub    eax,0x2e00c234
   14000bfc9:	(bad)  
   14000bfca:	enter  0x2e00,0x3a
   14000bfce:	retf   
   14000bfcf:	add    BYTE PTR [rax],dh
   14000bfd1:	cmp    cl,al
   14000bfd3:	add    BYTE PTR [rdi],ch
   14000bfd5:	rol    BYTE PTR ds:[rax],1
   14000bfd8:	xor    BYTE PTR [rdi],bh
   14000bfda:	rol    BYTE PTR [rax],1
   14000bfdc:	sub    eax,0x2f00c34a
   14000bfe1:	rex.X retf 0x2f00
   14000bfe5:	rex.WRX enter 0x2f00,0x50
   14000bfea:	leave  
   14000bfeb:	add    BYTE PTR [rax],dh
   14000bfed:	push   rdx
   14000bfee:	int3   
   14000bfef:	add    BYTE PTR [rax],dh
   14000bff1:	rex.XB (bad) 
   14000bff3:	add    BYTE PTR [rdx],dh
   14000bff5:	rex.RXB fadd DWORD PTR [r8]
   14000bff8:	xor    cl,BYTE PTR [rbx-0x25]
   14000bffb:	add    BYTE PTR [rdx],dh
   14000bffd:	push   rsi
   14000bffe:	rol    BYTE PTR [rax],cl
   14000c000:	xor    bl,BYTE PTR [rax-0x2e]
   14000c003:	add    BYTE PTR [rax+rbx*2],dh
   14000c006:	rol    DWORD PTR [rax],cl
   14000c008:	xor    ebx,DWORD PTR [rax-0x2b]
   14000c00b:	add    BYTE PTR [rcx+rbx*2],dh
   14000c00e:	(bad)  
   14000c00f:	add    BYTE PTR [rsp+rbx*2],dh
   14000c012:	xlat   BYTE PTR ds:[rbx]
   14000c013:	add    BYTE PTR [rip+0x3a00db5c],dh        # 0x17a019b75
   14000c019:	pop    rbp
   14000c01a:	fild   WORD PTR [rax]
   14000c01c:	xor    DWORD PTR [rcx-0x33],esp
   14000c01f:	add    BYTE PTR [rsi],dh
   14000c021:	(bad)  
   14000c022:	fld    QWORD PTR [rax]
   14000c024:	data16 fild WORD PTR ss:[rax]
   14000c028:	xor    al,0x6e
   14000c02a:	fadd   DWORD PTR [rax]
   14000c02c:	xor    al,0x54
   14000c02e:	loope  0x14000c030
   14000c030:	ss pop rsp
   14000c032:	in     al,0x0
   14000c034:	ss movsxd esp,ebx
   14000c037:	add    BYTE PTR [rax],bh
   14000c039:	fs out 0x0,eax
   14000c03c:	(bad)  
   14000c03d:	push   0xffffffffffffffe6
   14000c03f:	add    BYTE PTR [rax],bh
   14000c041:	outs   dx,DWORD PTR ds:[rsi]
   14000c042:	out    0x0,al
   14000c044:	(bad)  
   14000c045:	ins    DWORD PTR es:[rdi],dx
   14000c046:	call   0x1286cf84b
   14000c04b:	add    BYTE PTR [rsi],dh
   14000c04d:	jbe    0x14000c02f
   14000c04f:	add    BYTE PTR [rdi],dh
   14000c051:	jns    0x14000c039
   14000c053:	add    BYTE PTR [rax],bh
   14000c055:	jl     0x14000c03c
   14000c057:	add    BYTE PTR [rax],bh
   14000c059:	jno    0x14000c044
   14000c05b:	add    BYTE PTR [rcx],bh
   14000c05d:	jne    0x14000c049
   14000c05f:	add    BYTE PTR [rdx],bh
   14000c061:	jns    0x14000c04d
   14000c063:	add    BYTE PTR [rip+0x3900ea79],bh        # 0x17901aae2
   14000c069:	jge    0x14000c055
   14000c06b:	add    BYTE PTR [rdi*2+0x754400ea],bh
   14000c072:	fld    QWORD PTR [rax]
   14000c074:	rex.XB jnp 0x14000c05f
   14000c077:	add    BYTE PTR [rdx],bh
   14000c079:	sub    bl,0x0
   14000c07c:	cmp    al,BYTE PTR [rdx-0x7dc3ff14]
   14000c082:	in     al,dx
   14000c083:	add    BYTE PTR [rdx],bh
   14000c085:	test   esp,ebp
   14000c087:	add    BYTE PTR [rax*4-0x76c4ff14],bh
   14000c08e:	in     al,dx
   14000c08f:	add    BYTE PTR [rdx+rcx*4],bh
   14000c092:	in     eax,dx
   14000c093:	add    BYTE PTR [rbx],bh
   14000c095:	mov    gs,ebp
   14000c097:	add    BYTE PTR [rcx*4-0x6ec4ff12],bh
   14000c09e:	out    dx,al
   14000c09f:	add    BYTE PTR [rcx+rdx*4],bh
   14000c0a2:	out    dx,al
   14000c0a3:	add    BYTE PTR [rdx],bh
   14000c0a5:	xchg   ebp,eax
   14000c0a6:	out    dx,al
   14000c0a7:	add    BYTE PTR [rdx],bh
   14000c0a9:	cdq    
   14000c0aa:	out    dx,al
   14000c0ab:	add    BYTE PTR [rdx],bh
   14000c0ad:	sahf   
   14000c0ae:	out    dx,eax
   14000c0af:	add    BYTE PTR [rdx],bh
   14000c0b1:	fwait
   14000c0b2:	lock add BYTE PTR [rbx],bh
   14000c0b5:	movabs al,ds:0xa83a00efa13d00ef
   14000c0be:	(bad)  
   14000c0bf:	add    BYTE PTR [rbx],bh
   14000c0c1:	mov    cl,0xec
   14000c0c3:	add    BYTE PTR [rdx],bh
   14000c0c5:	movabs ds:0xa73c00f0a53a00f1,al
   14000c0ce:	lock add BYTE PTR [rdx],bh
   14000c0d1:	test   eax,0xad3900f1
   14000c0d6:	repnz add BYTE PTR [rbp*4-0x4fc6ff0f],bh
   14000c0de:	repnz add BYTE PTR [rax+rsi*4],bh
   14000c0e2:	repnz add BYTE PTR [rbx],bh
   14000c0e5:	mov    ah,0xf3
   14000c0e7:	add    BYTE PTR [rbx],bh
   14000c0e9:	mov    bh,0xf4
   14000c0eb:	add    BYTE PTR [rax],bh
   14000c0ed:	mov    eax,0xba3e00f2
   14000c0f2:	repnz add BYTE PTR [rbx],bh
   14000c0f5:	mov    ecx,0x825600f4
   14000c0fa:	fld    DWORD PTR [rax]
   14000c0fc:	push   rcx
   14000c0fd:	sbb    esi,0x0
   14000c100:	push   0xffffffffffffff96
   14000c102:	(bad)  
   14000c103:	add    BYTE PTR [rax-0x67],bh
   14000c106:	mov    DWORD PTR [rax],0xc89472
   14000c10c:	movsxd ecx,DWORD PTR [rbx+rdx*8-0x304a8d00]
   14000c113:	add    BYTE PTR [rsi-0x4a],dh
   14000c116:	(bad)  
   14000c117:	add    BYTE PTR [rdi-0x72],al
   14000c11a:	in     eax,0x0
   14000c11c:	rex.RXB lods eax,DWORD PTR ds:[rsi]
   14000c11e:	jmp    0x14000c120
   14000c120:	rex.RB mov r12b,0xec
   14000c123:	add    BYTE PTR [rip+0x3c00eccc],bh        # 0x17c01adf5
   14000c129:	shr    ch,cl
   14000c12b:	add    BYTE PTR [rip+0x3800ebdc],bh        # 0x17801ad0d
   14000c131:	(bad)  
   14000c132:	repnz add BYTE PTR [rsi],dh
   14000c135:	int    0xf1
   14000c137:	add    BYTE PTR [rdx-0x77ff665a],bh
   14000c13d:	(bad)  
   14000c13e:	lods   al,BYTE PTR ds:[rsi]
   14000c13f:	add    BYTE PTR [rsi-0x76ff4d80],al
   14000c145:	xor    DWORD PTR [rdx-0x47716c00],0x0
   14000c14c:	cwde   
   14000c14d:	nop
   14000c14e:	mov    bh,0x0
   14000c150:	(bad)  
   14000c151:	lods   eax,DWORD PTR ds:[rsi]
   14000c152:	mov    esi,0xb5a7a000
   14000c157:	add    BYTE PTR [rcx-0x31ff4258],ah
   14000c15d:	lods   al,BYTE PTR ds:[rsi]
   14000c15e:	add    BYTE PTR [rax],0xd4
   14000c161:	mov    ah,0x8c
   14000c163:	add    dl,bl
   14000c165:	mov    esp,0xbfdc0095
   14000c16a:	fwait
   14000c16b:	add    BYTE PTR [rsi+riz*4-0x4970ff40],dl
   14000c172:	(bad)  
   14000c173:	add    BYTE PTR [rdi+rax*8+0xdb],dl
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	(bad)  
   14000c17d:	(bad)  
   14000c17e:	inc    DWORD PTR [rax]
	...
   14000c1f4:	add    ch,bh
	...
   14000c222:	add    BYTE PTR [rax],al
   14000c224:	in     eax,0xdd
   14000c226:	fucom  st(5)
	...
   14000c254:	fstp   st(5)
   14000c256:	fstp   st(5)
   14000c258:	call   0x14000c25d
	...
   14000c281:	add    BYTE PTR [rax],al
   14000c283:	cld    
   14000c284:	fstp   st(5)
   14000c286:	fcmovu st,st(2)
   14000c288:	(bad)  
   14000c289:	(bad)  
   14000c28a:	hlt    
	...
   14000c2b3:	out    0xda,eax
   14000c2b5:	(bad)  
   14000c2b6:	(bad)  
   14000c2b7:	ror    dh,cl
   14000c2b9:	retf   0xfbc7
	...
   14000c2e0:	add    BYTE PTR [rax],al
   14000c2e2:	add    dl,cl
   14000c2e4:	retf   0xcaca
   14000c2e7:	retf   0xc7c7
   14000c2ea:	ret    
   14000c2eb:	shl    dh,0x0
	...
   14000c312:	faddp  st(0),st
   14000c314:	ret    
   14000c315:	ret    
   14000c316:	ret    
   14000c317:	ret    
   14000c318:	rol    al,0xc0
   14000c31b:	mov    ebx,0xbb
	...
   14000c340:	add    BYTE PTR [rax],al
   14000c342:	movabs al,ds:0xbbb7bbb7bbb7b0a9
   14000c34b:	mov    bh,0xb7
   14000c34d:	mov    ebp,0x0
	...
   14000c36e:	add    BYTE PTR [rax],al
   14000c370:	add    BYTE PTR [rsi-0x5b647c83],al
   14000c376:	test   eax,0xb2b2afad
   14000c37b:	mov    bh,0xbb
   14000c37d:	mov    ebx,0xde
	...
   14000c38e:	add    dl,dh
	...
   14000c3a0:	add    BYTE PTR [rdi+rsi*2+0x7b],dh
   14000c3a4:	add    DWORD PTR [rbx-0x525b5f67],0xb7b7b2af
   14000c3ae:	mov    ebx,0xe3
	...
   14000c3bb:	add    BYTE PTR [rax],al
   14000c3bd:	add    BYTE PTR [rax+rax*1+0x0],al
	...
   14000c3d0:	jne    0x14000c444
   14000c3d2:	je     0x14000c44a
   14000c3d4:	jns    0x14000c451
   14000c3d6:	add    DWORD PTR [rbx-0x52565f65],0xbbbbb7b1
   14000c3e0:	loop   0x14000c3e2
	...
   14000c3ea:	add    BYTE PTR [rax],al
   14000c3ec:	add    BYTE PTR [rax+0x8c],al
	...
   14000c3fe:	add    BYTE PTR [rbp+0x73717025],al
   14000c404:	je     0x14000c47d
   14000c406:	jnp    0x14000c485
   14000c408:	add    DWORD PTR [rbx-0x4e505b5e],0xffffffb7
   14000c40f:	mov    ebx,0xe1c0
	...
   14000c41c:	xchg   esp,eax
   14000c41d:	jle    0x14000c41f
	...
   14000c427:	add    BYTE PTR [rax],al
   14000c429:	add    BYTE PTR [rdx+0x0],ch
   14000c42c:	add    BYTE PTR [rax],al
   14000c42e:	sub    al,0x16
   14000c430:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b474365b
   14000c436:	ja     0x14000c4b2
   14000c438:	jge    0x14000c3bc
   14000c43a:	cdq    
   14000c43b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c43c:	lods   eax,DWORD PTR ds:[rsi]
   14000c43d:	mov    cl,0xb7
   14000c43f:	mov    ebx,0xe0c3c0
   14000c444:	add    BYTE PTR [rax],al
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	add    BYTE PTR [rax],al
   14000c44a:	icebp  
   14000c44b:	jle    0x14000c4cb
   14000c44d:	test   BYTE PTR [rax],al
	...
   14000c457:	add    BYTE PTR [rsi+0x5d],ch
   14000c45a:	pop    rdi
   14000c45b:	pop    rsp
   14000c45c:	push   rbp
   14000c45d:	cmp    BYTE PTR [r14+rdx*1],r11b
   14000c461:	and    esp,DWORD PTR [rip+0x74737225]        # 0x1b474368c
   14000c467:	ja     0x14000c4e4
   14000c469:	jge    0x14000c3ed
   14000c46b:	fwait
   14000c46c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c46d:	lods   eax,DWORD PTR ds:[rsi]
   14000c46e:	mov    bh,0xbb
   14000c470:	rol    bl,0xc3
   14000c473:	out    0xf5,al
   14000c475:	add    BYTE PTR [rax],al
   14000c477:	add    BYTE PTR [rax],al
   14000c479:	mov    dl,BYTE PTR [rbx+0xf17e7e]
	...
   14000c487:	fs (bad) 
   14000c489:	(bad)  
   14000c48a:	pop    rdi
   14000c48b:	pop    rdi
   14000c48c:	pop    rbx
   14000c48d:	push   rsi
   14000c48e:	rex.RB (bad) 
   14000c490:	sbb    BYTE PTR [rbx+riz*1],dl
   14000c493:	and    eax,0x74737225
   14000c498:	jns    0x14000c515
   14000c49a:	add    DWORD PTR [rdx-0x444e525d],0xffffffc0
   14000c4a1:	rol    bl,0xc3
   14000c4a4:	ret    
   14000c4a5:	mov    ebx,0x939ea6bc
   14000c4aa:	xchg   ebx,eax
   14000c4ab:	jle    0x14000c52b
	...
   14000c4b5:	add    BYTE PTR [rdx+0x61],ah
   14000c4b8:	(bad)  
   14000c4b9:	(bad)  
   14000c4ba:	(bad)  
   14000c4bb:	pop    rdi
   14000c4bc:	pop    rsp
   14000c4bd:	pop    rbx
   14000c4be:	pop    rcx
   14000c4bf:	rex.RX or eax,0x2523141b
   14000c4c5:	and    eax,0x79767472
   14000c4ca:	jl     0x14000c44e
   14000c4cc:	movabs ds:0xc0c3c3c3c0b7b2a4,al
   14000c4d5:	mov    ebx,0x939dabb2
   14000c4da:	jle    0x14000c55a
   14000c4dc:	mov    eax,DWORD PTR [rax]
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	add    BYTE PTR [rax],al
   14000c4e2:	add    BYTE PTR [rax],al
   14000c4e4:	imul   esp,DWORD PTR [rbx+0x61],0x61
   14000c4e8:	(bad)  
   14000c4e9:	(bad)  
   14000c4ea:	(bad)  
   14000c4eb:	pop    rdi
   14000c4ec:	pop    rsp
   14000c4ed:	pop    rbx
   14000c4ee:	pop    rcx
   14000c4ef:	pop    rcx
   14000c4f0:	rex.X (bad) 
   14000c4f2:	adc    edx,DWORD PTR [rsi]
   14000c4f4:	and    al,0x25
   14000c4f6:	jo     0x14000c56a
   14000c4f8:	je     0x14000c571
   14000c4fa:	jnp    0x14000c47e
   14000c4fc:	cdq    
   14000c4fd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c4fe:	mov    dl,0xb7
   14000c500:	rol    dh,0xc6
   14000c503:	ret    
   14000c504:	ret    
   14000c505:	mov    ebx,0x9296abb1
   14000c50a:	jle    0x14000c58a
   14000c50c:	add    BYTE PTR [rax],al
   14000c50e:	add    BYTE PTR [rax],al
   14000c510:	add    BYTE PTR [rax],al
   14000c512:	add    BYTE PTR [rsi+0x63],ah
   14000c515:	movsxd esp,DWORD PTR [rbx+0x61]
   14000c518:	(bad)  
   14000c519:	(bad)  
   14000c51a:	(bad)  
   14000c51b:	(bad)  
   14000c51c:	pop    rdi
   14000c51d:	pop    rbx
   14000c51e:	push   rdi
   14000c51f:	pop    rcx
   14000c520:	pop    rax
   14000c521:	add    dl,BYTE PTR [rbx]
   14000c524:	and    ah,BYTE PTR ds:0x79767371
   14000c52b:	jge    0x14000c4af
   14000c52d:	movabs ds:0xb7c0c3c6c3c0b7ae,eax
   14000c536:	lods   eax,DWORD PTR ds:[rsi]
   14000c537:	sahf   
   14000c538:	xchg   ebp,eax
   14000c539:	xchg   edx,eax
   14000c53a:	jle    0x14000c4d0
   14000c53c:	add    BYTE PTR [rax],al
   14000c53e:	add    BYTE PTR [rax],al
   14000c540:	add    bh,dh
   14000c542:	gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   14000c548:	(bad)  
   14000c549:	(bad)  
   14000c54a:	(bad)  
   14000c54b:	(bad)  
   14000c54c:	pop    rdi
   14000c54d:	pop    rbx
   14000c54e:	push   rdi
   14000c54f:	pop    rcx
   14000c550:	pop    rax
   14000c551:	rex.WRB cmp rax,0x2523131a
   14000c557:	and    eax,0x7b777473
   14000c55c:	(bad)  
   14000c55d:	movabs ds:0xb7c0c3c6c6c0b7ad,eax
   14000c566:	lods   al,BYTE PTR ds:[rsi]
   14000c567:	popf   
   14000c568:	xchg   ebx,eax
   14000c569:	jle    0x14000c5e9
   14000c56b:	pop    QWORD PTR [rax]
   14000c56d:	add    BYTE PTR [rax],al
   14000c56f:	add    cl,bh
   14000c571:	gs gs gs gs movsxd esp,DWORD PTR gs:[rbx+0x63]
   14000c579:	(bad)  
   14000c57a:	(bad)  
   14000c57b:	(bad)  
   14000c57c:	pop    rdi
   14000c57d:	pop    rsp
   14000c57e:	push   rdi
   14000c57f:	pop    rcx
   14000c580:	pop    rax
   14000c581:	rex.WRX
   14000c582:	rex.WX or rax,0x25241511
   14000c588:	jno    0x14000c5fc
   14000c58a:	jbe    0x14000c607
   14000c58c:	(bad)  
   14000c58d:	fwait
   14000c58e:	lods   eax,DWORD PTR ds:[rsi]
   14000c58f:	mov    bh,0xc0
   14000c591:	mov    dh,0xc3
   14000c594:	shl    BYTE PTR [rcx+0x7e9396ab],0x7e
   14000c59b:	add    BYTE PTR [rax],al
   14000c59d:	add    BYTE PTR [rax],al
   14000c59f:	add    BYTE PTR [rax],al
   14000c5a1:	add    dl,bh
   14000c5a3:	ins    DWORD PTR es:[rdi],dx
   14000c5a4:	gs movsxd esp,DWORD PTR gs:[ebx+0x63]
   14000c5aa:	(bad)  
   14000c5ab:	(bad)  
   14000c5ac:	(bad)  
   14000c5ad:	pop    rbx
   14000c5ae:	pop    rbx
   14000c5af:	pop    rcx
   14000c5b0:	rex.WRX
   14000c5b1:	rex.WRX
   14000c5b2:	rex.WXB cmp rax,QWORD PTR [r11]
   14000c5b5:	adc    edx,DWORD PTR [rsi]
   14000c5b7:	and    al,0x25
   14000c5b9:	jb     0x14000c631
   14000c5bb:	jns    0x14000c63a
   14000c5bd:	cdq    
   14000c5be:	lods   eax,DWORD PTR ds:[rsi]
   14000c5bf:	mov    bh,0xc0
   14000c5c1:	mov    bh,0xc3
   14000c5c4:	mov    ebx,0x9295abb1
   14000c5c9:	jle    0x14000c553
	...
   14000c5d3:	add    BYTE PTR [rax],al
   14000c5d5:	outs   dx,DWORD PTR ds:[rsi]
   14000c5d6:	gs movsxd esp,DWORD PTR gs:[rdx+0x61]
   14000c5db:	(bad)  
   14000c5dc:	pop    rbp
   14000c5dd:	pop    rsp
   14000c5de:	push   rdi
   14000c5df:	pop    rcx
   14000c5e0:	rex.WRX
   14000c5e1:	rex.WXB sub bl,BYTE PTR [r9]
   14000c5e4:	(bad)  
   14000c5e5:	sbb    edx,DWORD PTR [rip+0x73722523]        # 0x1b372eb0e
   14000c5eb:	ja     0x14000c669
   14000c5ed:	cdq    
   14000c5ee:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c5ef:	mov    bh,0xc0
   14000c5f1:	mov    edi,0x9eaebac6
   14000c5f7:	xchg   ebx,eax
   14000c5f8:	jle    0x14000c58c
   14000c5fa:	lock add BYTE PTR [rax],al
	...
   14000c605:	add    BYTE PTR [rax],al
   14000c607:	cli    
   14000c608:	push   0x60616163
   14000c60d:	pop    rsp
   14000c60e:	push   rdi
   14000c60f:	pop    rcx
   14000c610:	rex.WB and BYTE PTR [r9],bl
   14000c613:	adc    al,BYTE PTR [rdx]
   14000c615:	or     dl,BYTE PTR [rcx]
   14000c617:	(bad)  
   14000c618:	and    al,0x70
   14000c61a:	jb     0x14000c692
   14000c61c:	jnp    0x14000c5a0
   14000c61e:	lods   al,BYTE PTR ds:[rsi]
   14000c61f:	mov    bh,0xc6
   14000c621:	mov    edi,0x9daeb7c6
   14000c627:	xchg   ebx,eax
   14000c628:	jle    0x14000c6a8
	...
   14000c63a:	ins    DWORD PTR es:[rdi],dx
   14000c63b:	(bad)  
   14000c63c:	pop    rbp
   14000c63d:	pop    rsp
   14000c63e:	push   rdi
   14000c63f:	rex.W and BYTE PTR [rcx],bl
   14000c642:	adc    edx,DWORD PTR [rcx]
   14000c644:	adc    DWORD PTR [rcx],ecx
   14000c646:	sbb    eax,0x72252313
   14000c64b:	je     0x14000c6c8
   14000c64d:	and    DWORD PTR [rdi+rsi*4-0x3938383a],0xffffffb7
   14000c655:	lods   al,BYTE PTR ds:[rsi]
   14000c656:	pushf  
   14000c657:	xchg   edx,eax
   14000c658:	jle    0x14000c5e2
	...
   14000c66a:	add    BYTE PTR [rax],al
   14000c66c:	clc    
   14000c66d:	pop    rsi
   14000c66e:	sub    DWORD PTR ds:[rax+rbx*1],ebx
   14000c672:	sbb    BYTE PTR [rbx],bl
   14000c674:	sbb    BYTE PTR [rsi],bl
   14000c676:	or     DWORD PTR [rbx],edx
   14000c678:	(bad)  
   14000c679:	and    al,0x70
   14000c67b:	jae    0x14000c6f4
   14000c67d:	(bad)  
   14000c67e:	movabs ds:0x95abb7c0ccccc6b7,eax
   14000c687:	jle    0x14000c707
   14000c689:	repz add BYTE PTR [rax],al
	...
   14000c69c:	add    BYTE PTR [rax],al
   14000c69e:	sub    ebp,DWORD PTR [rcx]
   14000c6a0:	sub    DWORD PTR [rax],ebp
   14000c6a2:	and    BYTE PTR [rip+0x1f0d1d1e],bl        # 0x15f0de3c6
   14000c6a8:	adc    esp,DWORD PTR [rbx]
   14000c6aa:	and    eax,0xa37d7772
   14000c6af:	mov    bh,0xc6
   14000c6b1:	int3   
   14000c6b2:	int3   
   14000c6b3:	(bad)  
   14000c6b4:	mov    cl,0x9e
   14000c6b6:	xchg   ebx,eax
   14000c6b7:	xchg   edx,eax
   14000c6b8:	xchg   esp,eax
	...
   14000c6cd:	add    BYTE PTR [rax],al
   14000c6cf:	cmp    cl,BYTE PTR [rip+0x2904060a]        # 0x16904ccdf
   14000c6d5:	sub    BYTE PTR [rcx],ch
   14000c6d7:	(bad)  
   14000c6d8:	adc    esp,DWORD PTR [rdx]
   14000c6da:	and    eax,0xa27c7472
   14000c6df:	mov    bh,0xc7
   14000c6e1:	ror    ah,cl
   14000c6e3:	shl    BYTE PTR [rcx-0x74816d62],0x0
	...
   14000c6fe:	add    BYTE PTR [rax],al
   14000c700:	rex.WRXB xor BYTE PTR [r9+r9*1],r15b
   14000c704:	or     eax,DWORD PTR [rip+0x131f3904]        # 0x15320000e
   14000c70a:	and    al,0x70
   14000c70c:	je     0x14000c789
   14000c70e:	fwait
   14000c70f:	mov    ebx,0xc0ccd6c7
   14000c714:	scas   al,BYTE PTR es:[rdi]
   14000c715:	pushf  
   14000c716:	xchg   edx,eax
   14000c717:	jle    0x14000c719
	...
   14000c731:	push   rsp
   14000c732:	push   rdx
   14000c733:	xor    DWORD PTR [rsi+rcx*1],edi
   14000c736:	or     eax,DWORD PTR [rsi]
   14000c738:	cmp    edx,DWORD PTR [rbx]
   14000c73a:	and    ah,BYTE PTR [rip+0xffffffffb79b7972]        # 0xf79c40b2
   14000c740:	int3   
   14000c741:	fcmovbe st,st(2)
   14000c743:	shr    BYTE PTR [rbp+rdx*4+0x947e],0x0
	...
   14000c75f:	add    BYTE PTR [rax],al
   14000c761:	add    BYTE PTR [rbp+0x33],al
   14000c764:	xor    DWORD PTR [rip+0x203d0d37],ebp        # 0x1603dd4a1
   14000c76a:	adc    al,0x24
   14000c76c:	jb     0x14000c7e5
   14000c76e:	cmp    DWORD PTR [rsi-0x442e252e],0xffffffab
   14000c775:	xchg   ebx,eax
   14000c776:	jle    0x14000c705
	...
   14000c794:	rex.WR xor BYTE PTR [rsi],r13b
   14000c797:	cmp    al,0x38
   14000c799:	cmp    dl,BYTE PTR [rbx]
   14000c79b:	and    esi,DWORD PTR [rax+0x76]
   14000c79e:	cmp    DWORD PTR [rsi-0x452e132a],0xffffff9e
   14000c7a5:	xchg   ebx,eax
   14000c7a6:	jle    0x14000c7a8
	...
   14000c7c4:	add    BYTE PTR [rax],al
   14000c7c6:	rex.X xor BYTE PTR [rip+0x25161d41],bpl        # 0x16516e50e
   14000c7cd:	je     0x14000c752
   14000c7cf:	mov    bh,0xda
   14000c7d1:	in     eax,dx
   14000c7d2:	(bad)  
   14000c7d3:	mov    bh,0x9d
   14000c7d5:	xchg   edx,eax
   14000c7d6:	jle    0x14000c7d8
	...
   14000c7f4:	add    BYTE PTR [rax],al
   14000c7f6:	add    BYTE PTR [rbp+0x31],dl
   14000c7f9:	xor    BYTE PTR [rcx],bh
   14000c7fb:	adc    esp,DWORD PTR [rdx+rsi*2]
   14000c7fe:	jge    0x14000c7bb
   14000c800:	in     al,dx
   14000c801:	(bad)  
   14000c802:	(bad)  
   14000c803:	mov    cl,0x95
   14000c805:	jle    0x14000c794
	...
   14000c827:	add    BYTE PTR [rcx+0x31],dl
   14000c82a:	rex.X sbb spl,BYTE PTR [rdx]
   14000c82d:	jno    0x14000c8aa
   14000c82f:	mov    edx,0xaed1ebea
   14000c834:	xchg   edx,eax
   14000c835:	jle    0x14000c837
	...
   14000c857:	add    BYTE PTR [rax],al
   14000c859:	xor    r9,QWORD PTR [r14+r10*1]
   14000c85d:	and    eax,0xebebb37a
   14000c862:	shr    DWORD PTR [rbx+0x9492],1
	...
   14000c888:	add    BYTE PTR [rax],al
   14000c88a:	xor    eax,DWORD PTR [rax+0x13]
   14000c88d:	and    al,0x76
   14000c88f:	mov    bl,0xeb
   14000c891:	jmp    0x14000c85a
   14000c893:	sahf   
   14000c894:	jle    0x14000c826
	...
   14000c8ba:	imul   eax,DWORD PTR [rdx+0x6],0xebaa7322
   14000c8c1:	jmp    0x14000c886
   14000c8c3:	xchg   ebp,eax
   14000c8c4:	jle    0x14000c8c6
	...
   14000c8ea:	add    BYTE PTR [rdi+0x3f],al
   14000c8ed:	adc    eax,0xebeba771
   14000c8f2:	scas   eax,DWORD PTR es:[rdi]
   14000c8f3:	xchg   ebx,eax
   14000c8f4:	mov    al,BYTE PTR [rax]
	...
   14000c91a:	add    BYTE PTR [rax],al
   14000c91c:	push   rax
   14000c91d:	and    BYTE PTR [rip+0xffffffffa4e9eb83],ah        # 0xe4eab4a6
   14000c923:	jle    0x14000c925
	...
   14000c949:	add    BYTE PTR [rax],al
   14000c94b:	add    BYTE PTR [rdx+0x3a],bl
   14000c94e:	(bad)  
   14000c94f:	jnp    0x14000c93b
   14000c951:	rcl    BYTE PTR [rsi+0x88],1
	...
   14000c97b:	add    BYTE PTR [rax],al
   14000c97d:	push   rbx
   14000c97e:	sbb    al,0x74
   14000c980:	iret   
   14000c981:	mov    bl,0x92
	...
   14000c9ab:	add    BYTE PTR [rax],al
   14000c9ad:	add    BYTE PTR [rax],dl
   14000c9af:	(bad)  
   14000c9b0:	fwait
   14000c9b1:	cwde   
   14000c9b2:	mov    es,WORD PTR [rax]
	...
   14000c9dc:	add    BYTE PTR [rax],al
   14000c9de:	imul   esp,DWORD PTR [rcx],0x8779
	...
   14000ca0c:	add    BYTE PTR [rax],al
   14000ca0e:	add    dh,ch
   14000ca10:	out    dx,eax
	...
   14000ca7d:	add    BYTE PTR [rax],al
   14000ca7f:	add    bh,bh
   14000ca81:	(bad)  
   14000ca82:	(bad)  
   14000ca83:	(bad)  
   14000ca84:	(bad)  
   14000ca85:	inc    DWORD PTR [rax]
   14000ca87:	add    bh,bh
   14000ca89:	(bad)  
   14000ca8a:	(bad)  
   14000ca8b:	(bad)  
   14000ca8c:	(bad)  
   14000ca8d:	inc    DWORD PTR [rax]
   14000ca8f:	add    bh,bh
   14000ca91:	(bad)  
   14000ca92:	sti    
   14000ca93:	(bad)  
   14000ca94:	(bad)  
   14000ca95:	inc    DWORD PTR [rax]
   14000ca97:	add    bh,bh
   14000ca99:	push   rax
   14000ca9b:	(bad)  
   14000ca9c:	(bad)  
   14000ca9d:	inc    DWORD PTR [rax]
   14000ca9f:	add    bh,bh
   14000caa1:	push   rax
   14000caa3:	jg     0x14000caa4
   14000caa5:	inc    DWORD PTR [rax]
   14000caa7:	add    bh,bh
   14000caa9:	jmp    rax
   14000caab:	(bad)  
   14000caac:	(bad)  
   14000caad:	inc    DWORD PTR [rax]
   14000caaf:	add    bh,bh
   14000cab1:	jmp    rax
   14000cab3:	ud0    edi,edi
   14000cab6:	add    BYTE PTR [rax],al
   14000cab8:	(bad)  
   14000cab9:	jmp    rax
   14000cabb:	(bad)  
   14000cabc:	(bad)  
   14000cabd:	inc    DWORD PTR [rax]
   14000cabf:	add    bh,bh
   14000cac1:	inc    eax
   14000cac3:	(bad)  
   14000cac4:	(bad)  
   14000cac5:	inc    DWORD PTR [rax]
   14000cac7:	add    bh,bh
   14000cac9:	inc    eax
   14000cacb:	add    edi,edi
   14000cacd:	inc    DWORD PTR [rax]
   14000cacf:	add    bh,bh
   14000cad1:	inc    DWORD PTR [rax+0xfeff01]
   14000cad7:	add    bh,bh
   14000cad9:	inc    DWORD PTR [rax+0xfdff00]
   14000cadf:	add    bh,bh
   14000cae1:	inc    DWORD PTR [rax]
   14000cae3:	add    BYTE PTR [rdi-0x7],bh
   14000cae6:	add    BYTE PTR [rax],al
   14000cae8:	(bad)  
   14000cae9:	inc    BYTE PTR [rax]
   14000caeb:	add    BYTE PTR [rdi],bh
   14000caed:	repz add BYTE PTR [rax],al
   14000caf0:	(bad)  
   14000caf1:	fadd   QWORD PTR [rax]
   14000caf3:	add    BYTE PTR [rdi],bl
   14000caf5:	ret    
   14000caf6:	add    BYTE PTR [rax],al
   14000caf8:	inc    DWORD PTR [rax]
   14000cafa:	add    BYTE PTR [rax],al
   14000cafc:	(bad)  
   14000cafd:	add    DWORD PTR [rax],0x0
   14000cb00:	inc    BYTE PTR [rax]
   14000cb02:	add    BYTE PTR [rax],al
   14000cb04:	add    BYTE PTR [rdi],al
   14000cb06:	add    BYTE PTR [rax],al
   14000cb08:	cld    
   14000cb09:	add    BYTE PTR [rax],al
   14000cb0b:	add    BYTE PTR [rax],al
   14000cb0d:	(bad)  
   14000cb0e:	add    BYTE PTR [rax],al
   14000cb10:	lock add BYTE PTR [rax],al
   14000cb13:	add    BYTE PTR [rax],al
   14000cb15:	sldt   WORD PTR [rax]
   14000cb18:	loopne 0x14000cb1a
   14000cb1a:	add    BYTE PTR [rax],al
   14000cb1c:	add    BYTE PTR [rdi],cl
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	add    BYTE PTR [rax],0x0
   14000cb23:	add    BYTE PTR [rax],al
   14000cb25:	sldt   WORD PTR [rax]
   14000cb28:	add    BYTE PTR [rax],al
   14000cb2a:	add    BYTE PTR [rax],al
   14000cb2c:	add    BYTE PTR [rdi],bl
   14000cb2e:	add    BYTE PTR [rax],al
   14000cb30:	rol    BYTE PTR [rax],0x0
   14000cb33:	add    BYTE PTR [rax],al
   14000cb35:	(bad)  
   14000cb36:	add    BYTE PTR [rax],al
   14000cb38:	clc    
   14000cb39:	add    BYTE PTR [rax],al
   14000cb3b:	add    BYTE PTR [rax],al
   14000cb3d:	(bad)  
   14000cb3e:	add    BYTE PTR [rax],al
   14000cb40:	inc    BYTE PTR [rax]
   14000cb42:	add    BYTE PTR [rax],al
   14000cb44:	add    BYTE PTR [rdi],bh
   14000cb46:	add    BYTE PTR [rax],al
   14000cb48:	inc    eax
   14000cb4a:	add    BYTE PTR [rax],al
   14000cb4c:	add    BYTE PTR [rdi],bh
   14000cb4e:	add    BYTE PTR [rax],al
   14000cb50:	push   rax
   14000cb52:	add    BYTE PTR [rax],al
   14000cb54:	add    BYTE PTR [rdi],bh
   14000cb56:	add    BYTE PTR [rax],al
   14000cb58:	(bad)  
   14000cb59:	cld    
   14000cb5a:	add    BYTE PTR [rax],al
   14000cb5c:	add    BYTE PTR [rdi+0x0],bh
   14000cb5f:	add    bh,bh
   14000cb61:	inc    BYTE PTR [rax]
   14000cb63:	add    BYTE PTR [rax],al
   14000cb65:	jg     0x14000cb67
   14000cb67:	add    bh,bh
   14000cb69:	inc    DWORD PTR [rax]
   14000cb6b:	add    BYTE PTR [rax],al
   14000cb6d:	inc    DWORD PTR [rax]
   14000cb6f:	add    bh,bh
   14000cb71:	inc    DWORD PTR [rax+0xff0000]
   14000cb77:	add    bh,bh
   14000cb79:	inc    eax
   14000cb7b:	add    BYTE PTR [rax],al
   14000cb7d:	inc    DWORD PTR [rax]
   14000cb7f:	add    bh,bh
   14000cb81:	push   rax
   14000cb83:	add    BYTE PTR [rcx],al
   14000cb85:	inc    DWORD PTR [rax]
   14000cb87:	add    bh,bh
   14000cb89:	(bad)  
   14000cb8a:	cld    
   14000cb8b:	add    BYTE PTR [rcx],al
   14000cb8d:	inc    DWORD PTR [rax]
   14000cb8f:	add    bh,bh
   14000cb91:	(bad)  
   14000cb92:	inc    BYTE PTR [rax]
   14000cb94:	add    edi,edi
   14000cb96:	add    BYTE PTR [rax],al
   14000cb98:	(bad)  
   14000cb99:	(bad)  
   14000cb9a:	inc    DWORD PTR [rax]
   14000cb9c:	add    edi,edi
   14000cb9e:	add    BYTE PTR [rax],al
   14000cba0:	(bad)  
   14000cba1:	(bad)  
   14000cba2:	inc    DWORD PTR [rax+0xff03]
   14000cba8:	(bad)  
   14000cba9:	(bad)  
   14000cbaa:	inc    eax
   14000cbac:	add    edi,edi
   14000cbae:	add    BYTE PTR [rax],al
   14000cbb0:	(bad)  
   14000cbb1:	(bad)  
   14000cbb2:	inc    eax
   14000cbb4:	(bad)  
   14000cbb5:	inc    DWORD PTR [rax]
   14000cbb7:	add    bh,bh
   14000cbb9:	(bad)  
   14000cbba:	jmp    rax
   14000cbbc:	(bad)  
   14000cbbd:	inc    DWORD PTR [rax]
   14000cbbf:	add    bh,bh
   14000cbc1:	(bad)  
   14000cbc2:	push   rax
   14000cbc4:	ud0    eax,DWORD PTR [rax]
   14000cbc7:	add    bh,bh
   14000cbc9:	(bad)  
   14000cbca:	push   rax
   14000cbcc:	ud0    eax,DWORD PTR [rax]
   14000cbcf:	add    bh,bh
   14000cbd1:	(bad)  
   14000cbd2:	(bad)  
   14000cbd3:	clc    
   14000cbd4:	(bad)  
   14000cbd5:	inc    DWORD PTR [rax]
   14000cbd7:	add    bh,bh
   14000cbd9:	(bad)  
   14000cbda:	(bad)  
   14000cbdb:	cld    
   14000cbdc:	(bad)  
   14000cbdd:	inc    DWORD PTR [rax]
   14000cbdf:	add    bh,bh
   14000cbe1:	(bad)  
   14000cbe2:	(bad)  
   14000cbe3:	cld    
   14000cbe4:	(bad)  
   14000cbe5:	inc    DWORD PTR [rax]
   14000cbe7:	add    bh,bh
   14000cbe9:	(bad)  
   14000cbea:	(bad)  
   14000cbeb:	(bad)  
   14000cbec:	jg     0x14000cbed
   14000cbee:	add    BYTE PTR [rax],al
   14000cbf0:	(bad)  
   14000cbf1:	(bad)  
   14000cbf2:	(bad)  
   14000cbf3:	(bad)  
   14000cbf4:	(bad)  
   14000cbf5:	inc    DWORD PTR [rax]
   14000cbf7:	add    bh,bh
   14000cbf9:	(bad)  
   14000cbfa:	(bad)  
   14000cbfb:	(bad)  
   14000cbfc:	(bad)  
   14000cbfd:	inc    DWORD PTR [rax]
   14000cbff:	add    BYTE PTR [rax],ch
   14000cc01:	add    BYTE PTR [rax],al
   14000cc03:	add    BYTE PTR [rax],ah
   14000cc05:	add    BYTE PTR [rax],al
   14000cc07:	add    BYTE PTR [rax+0x0],al
   14000cc0a:	add    BYTE PTR [rax],al
   14000cc0c:	add    DWORD PTR [rax],eax
   14000cc0e:	or     BYTE PTR [rax],al
   14000cc10:	add    BYTE PTR [rax],al
   14000cc12:	add    BYTE PTR [rax],al
   14000cc14:	add    BYTE PTR [rax+rax*1],al
	...
   14000cc1f:	add    BYTE PTR [rax],al
   14000cc21:	add    DWORD PTR [rax],eax
   14000cc23:	add    BYTE PTR [rax],al
   14000cc25:	add    DWORD PTR [rax],eax
   14000cc27:	add    BYTE PTR [rax],al
   14000cc29:	add    BYTE PTR [rax],al
   14000cc2b:	add    BYTE PTR [rdi+riz*1],bh
   14000cc2e:	add    BYTE PTR ds:[rdi+0x39],dl
   14000cc32:	(bad)  
   14000cc33:	add    BYTE PTR [rdi+0x3d],bl
   14000cc36:	xor    eax,0x3e355200
   14000cc3b:	add    BYTE PTR [rdx+0x3d],bl
   14000cc3e:	cmp    eax,0x2b547e00
   14000cc43:	add    BYTE PTR [rbx+rdx*2+0x2d],bh
   14000cc47:	add    BYTE PTR [rdx+0x40],ah
   14000cc4a:	add    BYTE PTR ss:[rbp+0x42],ah
   14000cc4e:	xor    eax,0x30456900
   14000cc53:	add    BYTE PTR [rcx+0x47],ch
   14000cc56:	add    BYTE PTR ss:[rcx+0x40],ah
   14000cc5a:	cmp    DWORD PTR [rax],eax
   14000cc5c:	cmp    BYTE PTR gs:[rax],r8b
   14000cc60:	jo     0x14000ccac
   14000cc62:	add    BYTE PTR ss:[rip+0x1e004611],bl        # 0x15e01127a
   14000cc69:	adc    ecx,DWORD PTR [rcx+0x0]
   14000cc6c:	sbb    DWORD PTR [rcx],edx
   14000cc6e:	rex.WRXB add BYTE PTR [r14],r11b
   14000cc71:	adc    eax,0x1117004f
   14000cc76:	push   rbx
   14000cc77:	add    BYTE PTR [rsi],dl
   14000cc79:	adc    DWORD PTR [rdi+0x0],edx
   14000cc7c:	(bad)  
   14000cc7d:	adc    DWORD PTR [rax+0x0],ebx
   14000cc80:	sbb    BYTE PTR [rbx],dl
   14000cc82:	pop    rbp
   14000cc83:	add    BYTE PTR [rbx],ah
   14000cc85:	adc    al,0x46
   14000cc87:	add    BYTE PTR [rsp+rdx*1],ah
   14000cc8a:	rex.RX add BYTE PTR [rax],r13b
   14000cc8d:	(bad)  
   14000cc8e:	rex.RX add BYTE PTR [rip+0x2c004618],r12b        # 0x16c0112ad
   14000cc95:	sbb    eax,0x1a290042
   14000cc9a:	rex.RX add BYTE PTR [rip+0x34004819],r12b        # 0x1740114ba
   14000cca1:	and    DWORD PTR [rsi+0x0],eax
   14000cca4:	cmp    BYTE PTR [rdx],ah
   14000cca6:	rex.XB add BYTE PTR [r15],bpl
   14000cca9:	and    al,0x58
   14000ccab:	add    BYTE PTR [rip+0x15006012],dl        # 0x155012cc3
   14000ccb1:	adc    esp,DWORD PTR [rbp+0x0]
   14000ccb4:	sbb    bl,BYTE PTR [rax]
   14000ccb6:	add    BYTE PTR [esp+edx*1],dl
   14000ccba:	push   0x0
   14000ccbc:	adc    al,0x15
   14000ccbe:	ins    DWORD PTR es:[rdi],dx
   14000ccbf:	add    BYTE PTR [rip+0x14007116],dl        # 0x154013ddb
   14000ccc5:	(bad)  
   14000ccc6:	je     0x14000ccc8
   14000ccc8:	adc    al,0x18
   14000ccca:	jbe    0x14000cccc
   14000cccc:	sbb    BYTE PTR [rdx],bl
   14000ccce:	je     0x14000ccd0
   14000ccd0:	adc    al,0x19
   14000ccd2:	jns    0x14000ccd4
   14000ccd4:	(bad)  
   14000ccd5:	sbb    bh,BYTE PTR [rbp+0x0]
   14000ccd8:	sub    BYTE PTR [r10+0x0],al
   14000ccdc:	rex.XB sub eax,0x2f490046
   14000cce2:	rex.X add BYTE PTR [rax+0x2f],cl
   14000cce6:	add    BYTE PTR [r10+0x30],r9b
   14000ccea:	add    BYTE PTR [rbp+0x32],cl
   14000ccee:	add    BYTE PTR [rsi+0x3b],dl
   14000ccf2:	rex.WX add BYTE PTR [rcx-0x5cffe495],spl
   14000ccf9:	ins    DWORD PTR es:[rdi],dx
   14000ccfa:	sbb    eax,0x1970a800
   14000ccff:	add    BYTE PTR [rbp-0x71ffe386],dh
   14000cd05:	pop    rdi
   14000cd06:	and    eax,DWORD PTR [rax]
   14000cd08:	xchg   BYTE PTR [rdx+0x2e],bl
   14000cd0b:	add    BYTE PTR [rdi-0x6bffdc96],bl
   14000cd11:	sub    al,BYTE PTR fs:[rax]
   14000cd14:	xchg   esi,eax
   14000cd15:	data16 add BYTE PTR cs:[rdx-0x72ffd398],bl
   14000cd1d:	(bad)  
   14000cd1e:	xor    eax,0x2b6fa400
   14000cd23:	add    BYTE PTR [rax-0x53ffda8f],ch
   14000cd29:	jbe    0x14000cd50
   14000cd2b:	add    BYTE PTR [rsp+rdi*2+0x6f9c0025],dh
   14000cd32:	add    BYTE PTR [r9-0x55ffaf94],dl
   14000cd39:	ja     0x14000cd7d
   14000cd3b:	add    BYTE PTR [rdi-0x5bffb389],ah
   14000cd41:	jl     0x14000cd8e
   14000cd43:	add    BYTE PTR [rdx-0x4dffb486],ch
   14000cd49:	jg     0x14000cd98
   14000cd4b:	add    BYTE PTR [rbp-0x54ffab87],ah
   14000cd51:	jge    0x14000cda8
   14000cd53:	add    bl,al
   14000cd55:	and    DWORD PTR [rbx],0x0
   14000cd58:	mov    ah,0x86
   14000cd5a:	add    BYTE PTR [rcx-0x48ffbb7d],r15b
   14000cd61:	or     DWORD PTR [rbx+0x0],0xffffffbe
   14000cd65:	mov    BYTE PTR [rdi+0x0],cl
   14000cd68:	mov    dh,0x83
   14000cd6a:	push   rcx
   14000cd6b:	add    BYTE PTR [rdx-0x3fff986a],bh
   14000cd71:	mov    DWORD PTR [rsi+0x0],ecx
   14000cd74:	(bad)
   14000cd77:	add    al,cl
   14000cd79:	(bad)  
   14000cd7a:	rex.WXB add r14b,cl
   14000cd7d:	xchg   edx,eax
   14000cd7e:	rex.RX add dl,r9b
   14000cd81:	nop
   14000cd82:	rex.WX add bpl,cl
   14000cd85:	xchg   ecx,eax
   14000cd86:	rex.W add dl,dl
   14000cd89:	xchg   ebp,eax
   14000cd8a:	rex.X add al,dl
   14000cd8d:	xchg   ebx,eax
   14000cd8e:	add    r12b,r10b
   14000cd91:	cdq    
   14000cd92:	rex.XB add r14b,dl
   14000cd95:	fwait
   14000cd96:	add    r15b,r10b
   14000cd99:	popf   
   14000cd9a:	rex.RX add sil,r10b
   14000cd9d:	lahf   
   14000cd9e:	rex.WXB add r8b,bl
   14000cda1:	sahf   
   14000cda2:	rex.WB add r14b,cl
   14000cda5:	pushf  
   14000cda6:	push   rdi
   14000cda7:	add    cl,bl
   14000cda9:	movabs al,ds:0xa1d90052a1d5004e
   14000cdb2:	push   rax
   14000cdb3:	add    dh,dl
   14000cdb5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cdb6:	pop    rsi
   14000cdb7:	add    dh,cl
   14000cdb9:	movabs ds:0xa3c80069a1ce0065,eax
   14000cdc2:	outs   dx,DWORD PTR ds:[rsi]
   14000cdc3:	add    bh,cl
   14000cdc5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000cdc6:	ins    BYTE PTR es:[rdi],dx
   14000cdc7:	add    bl,cl
   14000cdc9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cdca:	js     0x14000cdcc
   14000cdcc:	enter  0x7ca9,0x0
   14000cdd0:	xlat   BYTE PTR ds:[rbx]
   14000cdd1:	lods   eax,DWORD PTR ds:[rsi]
   14000cdd2:	jne    0x14000cdd4
   14000cdd4:	(bad)  
   14000cdd5:	sbb    al,0x80
   14000cdd7:	add    BYTE PTR [rax],bl
   14000cdd9:	sbb    al,0x82
   14000cddb:	add    BYTE PTR [rax],bl
   14000cddd:	sbb    eax,0x201b0085
   14000cde2:	mov    al,BYTE PTR [rax]
   14000cde4:	sbb    esp,DWORD PTR [rcx]
   14000cde6:	mov    WORD PTR [rax],es
   14000cde8:	sbb    al,0x21
   14000cdea:	lea    eax,[rax]
   14000cdec:	sbb    eax,0x1e008e25
   14000cdf1:	and    eax,0x261f0092
   14000cdf6:	xchg   esp,eax
   14000cdf7:	add    BYTE PTR [rcx],ah
   14000cdf9:	sub    bl,BYTE PTR [rcx-0x64d3df00]
   14000cdff:	add    BYTE PTR [rbx],ah
   14000ce01:	sub    al,0x9c
   14000ce03:	add    BYTE PTR [rbx],ah
   14000ce05:	xor    ah,BYTE PTR [rcx-0x5dcedc00]
   14000ce0b:	add    BYTE PTR [rip+0x2600a432],ah        # 0x166017243
   14000ce11:	xor    al,0xa7
   14000ce13:	add    BYTE PTR [rsi],ah
   14000ce15:	ss test eax,0xab382700
   14000ce1b:	add    BYTE PTR [rax],ch
   14000ce1d:	cmp    ch,BYTE PTR [rdi-0x4dc2d800]
   14000ce23:	add    BYTE PTR [rip+0x3200be34],ch        # 0x172018c5d
   14000ce29:	cmp    DWORD PTR [rsi-0x40c4cc00],edi
   14000ce2f:	add    BYTE PTR [rdx],ch
   14000ce31:	mov    r15b,0x0
   14000ce34:	sub    eax,DWORD PTR [rbx-0x46]
   14000ce37:	add    BYTE PTR [rbx],ch
   14000ce39:	rex.R mov edx,0xbe492c00
   14000ce3f:	add    BYTE PTR [rsi+0x53],dl
   14000ce42:	xchg   ebp,eax
   14000ce43:	add    BYTE PTR [rax+0x43],al
   14000ce46:	mov    ecx,0xba464300
   14000ce4b:	add    BYTE PTR [rsi+0x55],dl
   14000ce4e:	mov    dl,0x0
   14000ce50:	pop    rcx
   14000ce51:	pop    rbp
   14000ce52:	mov    edx,0xb7626100
   14000ce57:	add    BYTE PTR [rcx+0x66],ch
   14000ce5a:	mov    dl,0x0
   14000ce5c:	imul   ebp,DWORD PTR [rcx-0x4c],0x0
   14000ce60:	je     0x14000ced2
   14000ce62:	mov    dl,0x0
   14000ce64:	jbe    0x14000ced9
   14000ce66:	mov    ch,0x0
   14000ce68:	sub    eax,0x2d00c134
   14000ce6d:	(bad)
   14000ce71:	cmp    ecx,ecx
   14000ce73:	add    BYTE PTR [rdi],ch
   14000ce75:	cmp    eax,0x3e3700ce
   14000ce7a:	rol    BYTE PTR [rax],0x2f
   14000ce7d:	(bad)  
   14000ce7e:	rol    BYTE PTR [rax],1
   14000ce80:	xor    BYTE PTR [rdi],bh
   14000ce82:	rol    BYTE PTR [rax],1
   14000ce84:	sub    eax,0x2d00c048
   14000ce89:	rex.WX (bad) 
   14000ce8b:	add    BYTE PTR [rdi],ch
   14000ce8d:	rex.WRB mov QWORD PTR [r8],0xc84e2f
   14000ce94:	xor    BYTE PTR [rax-0x32],al
   14000ce97:	add    BYTE PTR [rdi],ch
   14000ce99:	push   rax
   14000ce9a:	mov    DWORD PTR [rax],0xc9502f
   14000cea0:	xor    DWORD PTR [rdx-0x33],edx
   14000cea3:	add    BYTE PTR [rcx],dh
   14000cea5:	push   rbp
   14000cea6:	(bad)  
   14000cea7:	add    BYTE PTR [rcx],dh
   14000cea9:	rex.R (bad) 
   14000ceab:	add    BYTE PTR [rdx],dh
   14000cead:	rex.WX fld DWORD PTR [rax]
   14000ceb0:	xor    ecx,DWORD PTR [rbp+rbx*8+0x0]
   14000ceb4:	xor    edx,DWORD PTR [rdi-0x2c]
   14000ceb7:	add    BYTE PTR [rdx],dh
   14000ceb9:	pop    rdx
   14000ceba:	rol    DWORD PTR [rax],cl
   14000cebc:	xor    ebx,DWORD PTR [rcx-0x2b]
   14000cebf:	add    BYTE PTR [rbx+rbx*2],dh
   14000cec2:	xlat   BYTE PTR ds:[rbx]
   14000cec3:	add    BYTE PTR [rbx],dh
   14000cec5:	pop    rbp
   14000cec6:	xlat   BYTE PTR ds:[rbx]
   14000cec7:	add    BYTE PTR [rbx],dh
   14000cec9:	push   rcx
   14000ceca:	fiadd  DWORD PTR [rax]
   14000cecc:	xor    al,0x53
   14000cece:	fiadd  WORD PTR [rax]
   14000ced0:	xor    eax,0x3100d95c
   14000ced5:	jno    0x14000cea5
   14000ced7:	add    BYTE PTR [rax+riz*2],dh
   14000ceda:	fild   DWORD PTR [rax]
   14000cedc:	xor    eax,0x3600de62
   14000cee1:	data16 fiadd WORD PTR [rax]
   14000cee4:	xor    al,0x53
   14000cee6:	loopne 0x14000cee8
   14000cee8:	xor    al,0x54
   14000ceea:	loope  0x14000ceec
   14000ceec:	ss pop rsp
   14000ceee:	jrcxz  0x14000cef0
   14000cef0:	ss pop rbx
   14000cef2:	in     al,0x0
   14000cef4:	ss movsxd esp,ebx
   14000cef7:	add    BYTE PTR [rsi],dh
   14000cef9:	fs loope 0x14000cefc
   14000cefc:	(bad)  
   14000cefd:	gs in  eax,0x0
   14000cf00:	(bad)  
   14000cf01:	imul   esp,ebp,0xe76d3700
   14000cf07:	add    BYTE PTR [rax],bh
   14000cf09:	outs   dx,DWORD PTR ds:[rsi]
   14000cf0a:	out    0x0,al
   14000cf0c:	cmp    BYTE PTR [rax+rbp*8+0x0],ch
   14000cf10:	cmp    BYTE PTR [rdx-0x17],dh
   14000cf13:	add    BYTE PTR [rdx],bh
   14000cf15:	jne    0x14000cf01
   14000cf17:	add    BYTE PTR [rcx],bh
   14000cf19:	jns    0x14000cf05
   14000cf1b:	add    BYTE PTR [rdi],bh
   14000cf1d:	jns    0x14000cf08
   14000cf1f:	add    BYTE PTR [rcx],bh
   14000cf21:	jle    0x14000cf0e
   14000cf23:	add    BYTE PTR [rsi+rdi*2],bh
   14000cf26:	jmp    0x14000cf28
   14000cf28:	cmp    edi,DWORD PTR [rdi-0x14]
   14000cf2b:	add    BYTE PTR [rdi+rdi*2],bh
   14000cf2e:	in     al,dx
   14000cf2f:	add    BYTE PTR [rdx],bh
   14000cf31:	sub    ebx,0xec813b00
   14000cf37:	add    BYTE PTR [rcx+rax*4],bh
   14000cf3a:	in     al,dx
   14000cf3b:	add    BYTE PTR [rdx],bh
   14000cf3d:	test   esp,ebp
   14000cf3f:	add    BYTE PTR [rdx],bh
   14000cf41:	mov    ebp,ebp
   14000cf43:	add    BYTE PTR [rdx+rcx*4],bh
   14000cf46:	in     eax,dx
   14000cf47:	add    BYTE PTR [rbx],bh
   14000cf49:	(bad)  
   14000cf4a:	in     eax,dx
   14000cf4b:	add    BYTE PTR [rbx],bh
   14000cf4d:	xchg   edx,eax
   14000cf4e:	out    dx,al
   14000cf4f:	add    BYTE PTR [rax+rdx*4],bh
   14000cf52:	out    dx,al
   14000cf53:	add    BYTE PTR [rbx],bh
   14000cf55:	xchg   esi,eax
   14000cf56:	out    dx,eax
   14000cf57:	add    BYTE PTR [rcx],bh
   14000cf59:	cwde   
   14000cf5a:	call   0x12f9c0a5f
   14000cf5f:	add    BYTE PTR [rdx],bh
   14000cf61:	cwde   
   14000cf62:	lock add BYTE PTR [rdx],bh
   14000cf65:	popf   
   14000cf66:	lock add BYTE PTR [rcx],bh
   14000cf69:	stos   BYTE PTR es:[rdi],al
   14000cf6a:	loope  0x14000cf6c
   14000cf6c:	cmp    al,0xbe
   14000cf6e:	(bad)  
   14000cf6f:	add    BYTE PTR [rbx],bh
   14000cf71:	mov    edx,0xba3c00ef
   14000cf76:	in     al,dx
   14000cf77:	add    BYTE PTR [rdx],bh
   14000cf79:	movabs al,ds:0xa43c00f2a63b00f0
   14000cf82:	lock add BYTE PTR [rdx+rbp*4],bh
   14000cf86:	icebp  
   14000cf87:	add    BYTE PTR [rcx],bh
   14000cf89:	lods   al,BYTE PTR ds:[rsi]
   14000cf8a:	lock add BYTE PTR [rip+0x3900f1ac],bh        # 0x17901c13d
   14000cf91:	mov    al,0xf2
   14000cf93:	add    BYTE PTR [rbx],bh
   14000cf95:	mov    dh,0xf3
   14000cf97:	add    BYTE PTR [rcx],bh
   14000cf99:	mov    ebx,0xb93b00f3
   14000cf9e:	hlt    
   14000cf9f:	add    BYTE PTR [rbx-0x75],bl
   14000cfa2:	(bad)  
   14000cfa3:	add    BYTE PTR [rax+rcx*4-0x28],dl
   14000cfa7:	add    BYTE PTR [rsi+rcx*4-0x28],dl
   14000cfab:	add    BYTE PTR [rcx-0x7f],cl
   14000cfae:	loop   0x14000cfb0
   14000cfb0:	rex.B (bad) 
   14000cfb2:	jmp    0x12ab818b7
   14000cfb7:	add    BYTE PTR [rbp-0x4b],dl
   14000cfba:	loopne 0x14000cfbc
   14000cfbc:	cmp    al,0xc2
   14000cfbe:	in     eax,dx
   14000cfbf:	add    BYTE PTR [rip+0x3d00ecc4],bh        # 0x17d01bc89
   14000cfc5:	retf   
   14000cfc6:	in     al,dx
   14000cfc7:	add    BYTE PTR [rbx],bh
   14000cfc9:	shr    edi,1
   14000cfcb:	add    BYTE PTR [rdx+rdx*8],bh
   14000cfce:	in     eax,dx
   14000cfcf:	add    BYTE PTR [rax],bh
   14000cfd1:	enter  0xf1,0x8e
   14000cfd5:	mov    DWORD PTR [rdx-0x4b716a00],edi
   14000cfdb:	add    BYTE PTR [rsi-0x67ff4562],cl
   14000cfe1:	xchg   edx,eax
   14000cfe2:	mov    esp,0xbf949a00
   14000cfe7:	add    ch,bl
   14000cfe9:	mov    esi,0xa99a0093
   14000cfee:	ret    
   14000cfef:	add    BYTE PTR [rdi-0x5fff3845],dl
   14000cff5:	mov    bl,0xc2
	...
   14000d023:	add    bh,bh
   14000d025:	(bad)  
   14000d026:	inc    DWORD PTR [rax]
	...
   14000d074:	add    dl,dh
   14000d076:	fucom  st(4)
	...
   14000d094:	add    bl,ah
   14000d096:	fstp   st(3)
   14000d098:	fpatan 
	...
   14000d0b2:	add    BYTE PTR [rax],al
   14000d0b4:	add    cl,bl
   14000d0b6:	(bad)  
   14000d0b8:	int    0xc9
   14000d0ba:	icebp  
	...
   14000d0d3:	add    dh,bl
   14000d0d5:	enter  0xc8c8,0xc8
   14000d0d9:	ret    
   14000d0da:	mov    edi,0x0
	...
   14000d0f3:	add    BYTE PTR [rdi-0x45454752],bl
   14000d0f9:	mov    edx,0xbabf
	...
   14000d112:	add    BYTE PTR [rsi-0x5b637d87],al
   14000d118:	mov    ah,0xb8
   14000d11a:	mov    ecx,0xe1bf
	...
   14000d127:	out    dx,al
	...
   14000d130:	add    BYTE PTR [rax],al
   14000d132:	add    BYTE PTR [rbp+0x71],ch
   14000d135:	jne    0x14000d1b3
   14000d137:	test   BYTE PTR [rdx-0x4046495c],bl
   14000d13d:	fild   WORD PTR [rax]
   14000d13f:	add    BYTE PTR [rax],al
   14000d141:	add    BYTE PTR [rax],al
   14000d143:	add    BYTE PTR [rax],al
   14000d145:	add    BYTE PTR [rax+0x0],al
   14000d14b:	add    BYTE PTR [rax],al
   14000d14d:	add    BYTE PTR [rax],al
   14000d14f:	add    BYTE PTR [rax],al
   14000d151:	add    BYTE PTR [rbx],ah
   14000d153:	sub    BYTE PTR [rbx+0x71],ch
   14000d156:	je     0x14000d1d1
   14000d158:	test   BYTE PTR [rdx-0x3c454956],bl
   14000d15e:	loopne 0x14000d160
   14000d160:	add    BYTE PTR [rax],al
   14000d162:	add    BYTE PTR [rax],al
   14000d164:	in     al,dx
   14000d165:	nop
   14000d166:	lea    eax,[rax]
   14000d168:	add    BYTE PTR [rax],al
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	add    BYTE PTR [rax+0x55],ch
   14000d16f:	push   rsp
   14000d170:	rex.WRB
   14000d171:	ds (bad) 
   14000d173:	and    DWORD PTR [rdi],esp
   14000d175:	imul   esi,DWORD PTR [rcx+0x74],0x7a
   14000d179:	test   BYTE PTR [rdi-0x373c454c],bl
   14000d17f:	loop   0x14000d16e
   14000d181:	add    BYTE PTR [rax],al
   14000d183:	mov    dl,BYTE PTR [rax+0x90]
   14000d189:	add    BYTE PTR [rax],al
   14000d18b:	add    BYTE PTR [rdi+0x58],bl
   14000d18e:	pop    rax
   14000d18f:	push   rdi
   14000d190:	push   rbx
   14000d191:	rex.WRX cmp al,0x1c
   14000d194:	and    DWORD PTR [rdi],esp
   14000d196:	imul   esi,DWORD PTR [rcx+0x75],0x7d
   14000d19a:	pushf  
   14000d19b:	stos   BYTE PTR es:[rdi],al
   14000d19c:	mov    edx,0xc3c8c8bf
   14000d1a1:	mov    edx,0x879095b0
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	add    BYTE PTR [rax],al
   14000d1aa:	add    BYTE PTR [rbp+0x5c],bl
   14000d1ad:	pop    rsp
   14000d1ae:	pop    rax
   14000d1af:	pop    rax
   14000d1b0:	push   rbx
   14000d1b1:	rex.WRXB
   14000d1b2:	rex.W cmp BYTE PTR [rax],dl
   14000d1b5:	and    DWORD PTR [rdx],ebp
   14000d1b7:	ins    DWORD PTR es:[rdi],dx
   14000d1b8:	jae    0x14000d232
   14000d1ba:	(bad)  
   14000d1bb:	movabs ds:0x95a2b9c3c8c3bfb6,eax
   14000d1c4:	nop
   14000d1c5:	jmp    0x14000d1c7
   14000d1c7:	add    BYTE PTR [rax],al
   14000d1c9:	addr32 (bad) 
   14000d1cb:	pop    rbp
   14000d1cc:	pop    rsi
   14000d1cd:	pop    rsp
   14000d1ce:	pop    rsp
   14000d1cf:	push   rbp
   14000d1d0:	push   rdi
   14000d1d1:	rex.WRXB push r8
   14000d1d3:	rex.RXB or DWORD PTR [r9],r10d
   14000d1d6:	and    eax,0x7e756e6b
   14000d1db:	(bad)  
   14000d1dc:	mov    ecx,0xbfc8c8c3
   14000d1e1:	mov    ah,0xa0
   14000d1e3:	nop
   14000d1e4:	nop
   14000d1e5:	add    BYTE PTR [rax],al
   14000d1e7:	add    BYTE PTR [rax],al
   14000d1e9:	movsxd esp,DWORD PTR [rdx+0x60]
   14000d1ec:	pop    rbp
   14000d1ed:	pop    rsi
   14000d1ee:	pop    rsp
   14000d1ef:	pop    rax
   14000d1f0:	push   rbp
   14000d1f1:	push   rbx
   14000d1f2:	push   rax
   14000d1f3:	rex.WX
   14000d1f4:	rex.X add DWORD PTR [rip+0x7a736d27],edx        # 0x1ba743f22
   14000d1fb:	(bad)  
   14000d1fc:	mov    ah,0xc3
   14000d1fe:	enter  0xbfc8,0xb2
   14000d202:	xchg   ebp,eax
   14000d203:	nop
   14000d204:	mov    DWORD PTR [rax],eax
   14000d206:	add    BYTE PTR [rax],al
   14000d208:	add    BYTE PTR [rax],al
   14000d20a:	add    BYTE PTR [rdx+0x60],ch
   14000d20d:	pop    rbp
   14000d20e:	pop    rsp
   14000d20f:	pop    rax
   14000d210:	push   rbp
   14000d211:	rex.WRXB push r8
   14000d213:	rex.WB xor cl,BYTE PTR [r10]
   14000d216:	adc    BYTE PTR [rcx],ah
   14000d218:	imul   ebp,DWORD PTR [rsi+0x78],0xffffff98
   14000d21c:	mov    ah,0xc3
   14000d21e:	retf   0xbac8
   14000d221:	mov    al,0x95
   14000d223:	nop
	...
   14000d22c:	add    al,dh
   14000d22e:	(bad)  
   14000d22f:	pop    rsp
   14000d230:	push   rbp
   14000d231:	push   rbx
   14000d232:	rex.RB (bad) 
   14000d234:	cldemote BYTE PTR [rdx]
   14000d237:	adc    esp,DWORD PTR [rdi]
   14000d239:	outs   dx,BYTE PTR ds:[rsi]
   14000d23a:	jne    0x14000d1c0
   14000d23c:	mov    ah,0xc3
   14000d23e:	retf   0xbac8
   14000d241:	movabs ds:0x9090,al
   14000d24a:	add    BYTE PTR [rax],al
   14000d24c:	add    BYTE PTR [rax],al
   14000d24e:	add    BYTE PTR [rax],al
   14000d250:	addr32 rex.R (bad) 
   14000d253:	sbb    DWORD PTR [rax],ebx
   14000d255:	sbb    BYTE PTR [rdx],al
   14000d257:	sbb    al,0x21
   14000d259:	imul   esi,DWORD PTR [rbx+0x7e],0xffffffae
   14000d25d:	ret    
   14000d25e:	iret   
   14000d25f:	enter  0xa0b9,0x90
   14000d263:	mov    WORD PTR [rax],es
	...
   14000d271:	add    BYTE PTR [rax+rsi*1],al
   14000d274:	(bad)  
   14000d275:	(bad)  
   14000d276:	(bad)  
   14000d277:	or     DWORD PTR [rbx],edx
   14000d279:	sub    ch,BYTE PTR [rsi+0x7a]
   14000d27c:	stos   BYTE PTR es:[rdi],al
   14000d27d:	enter  0xc8cf,0xb4
   14000d281:	xchg   ebp,eax
   14000d282:	nop
	...
   14000d28f:	add    BYTE PTR [rax],al
   14000d291:	add    BYTE PTR [rcx+0x39],dl
   14000d294:	(bad)  
   14000d295:	or     BYTE PTR [rax],dh
   14000d297:	(bad)  
   14000d298:	sbb    al,0x25
   14000d29a:	ins    DWORD PTR es:[rdi],dx
   14000d29b:	jns    0x14000d247
   14000d29d:	leave  
   14000d29e:	(bad)  
   14000d29f:	enter  0x95b2,0x80
	...
   14000d2b3:	fs rex.WXB xor al,0x6
   14000d2b7:	or     eax,0x756b150a
   14000d2bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d2bd:	leave  
   14000d2be:	fcmovne st,st(0)
   14000d2c0:	test   eax,0x8e90
	...
   14000d2d5:	rex.RX xor eax,0x271d3a37
   14000d2db:	jae    0x14000d27c
   14000d2dd:	(bad)  
   14000d2de:	fcmovnb st,st(5)
   14000d2e0:	movabs al,ds:0x90
	...
   14000d2f5:	add    BYTE PTR [rax],al
   14000d2f7:	xor    al,0xa
   14000d2fa:	and    DWORD PTR [rcx-0x64],esi
   14000d2fd:	fsubr  st,st(2)
   14000d2ff:	mov    esi,0x8195
	...
   14000d318:	rex.B
   14000d319:	rex adc DWORD PTR [rbx-0x7c],ebp
   14000d31d:	fucomp st(0)
   14000d31f:	mov    edx,0x8e95
	...
   14000d338:	add    BYTE PTR [rsi],dh
   14000d33a:	add    eax,0xe8e57e25
   14000d33f:	mov    ah,0x90
	...
   14000d359:	imul   edi,DWORD PTR [rdx],0xe7e57916
   14000d35f:	test   eax,0x87
	...
   14000d378:	add    BYTE PTR [rax],al
   14000d37a:	rex.WR sub rax,0xffffffff93d1d171
   14000d380:	out    dx,al
	...
   14000d399:	add    BYTE PTR [rax],al
   14000d39b:	cmp    eax,0x94c9d029
	...
   14000d3b8:	add    BYTE PTR [rax],al
   14000d3ba:	add    BYTE PTR [rdi+0x20],ah
   14000d3bd:	stos   DWORD PTR es:[rdi],eax
   14000d3be:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
	...
   14000d3db:	add    BYTE PTR [rbx+0x75],al
   14000d3de:	mov    eax,DWORD PTR [rax]
	...
   14000d428:	(bad)  
   14000d429:	(bad)  
   14000d42a:	(bad)  
   14000d42b:	(bad)  
   14000d42c:	(bad)  
   14000d42d:	(bad)  
   14000d42e:	(bad)  
   14000d42f:	(bad)  
   14000d430:	(bad)  
   14000d431:	clc    
   14000d432:	(bad)  
   14000d433:	(bad)  
   14000d434:	(bad)  
   14000d435:	clc    
   14000d436:	(bad)  
   14000d437:	(bad)  
   14000d438:	(bad)  
   14000d439:	clc    
   14000d43a:	(bad)  
   14000d43b:	(bad)  
   14000d43c:	push   rax
   14000d43e:	(bad)  
   14000d43f:	(bad)  
   14000d440:	push   rax
   14000d442:	ud0    edi,edi
   14000d445:	loopne 0x14000d44e
   14000d447:	(bad)  
   14000d448:	jmp    rax
   14000d44a:	add    edi,ebp
   14000d44c:	inc    eax
   14000d44e:	add    ecx,esi
   14000d450:	clc    
   14000d451:	add    BYTE PTR [rax],al
   14000d453:	movsxd esi,eax
   14000d455:	add    BYTE PTR [rax],al
   14000d457:	add    esp,eax
   14000d459:	add    BYTE PTR [rax],al
   14000d45b:	add    eax,DWORD PTR [rax-0x7ff90000]
   14000d461:	add    BYTE PTR [rax],al
   14000d463:	(bad)  
   14000d464:	loopne 0x14000d466
   14000d466:	add    BYTE PTR [rdi],cl
   14000d468:	clc    
   14000d469:	add    BYTE PTR [rax],al
   14000d46b:	ud0    eax,DWORD PTR [rax]
   14000d46e:	add    BYTE PTR [rdi],cl
   14000d470:	inc    eax
   14000d472:	add    BYTE PTR [rdi],bl
   14000d474:	inc    eax
   14000d476:	add    BYTE PTR [rdi],bl
   14000d478:	jmp    rax
   14000d47a:	add    BYTE PTR [rdi],bl
   14000d47c:	(bad)  
   14000d47d:	clc    
   14000d47e:	add    BYTE PTR [rdi],bh
   14000d480:	(bad)  
   14000d481:	inc    BYTE PTR [rax]
   14000d483:	(bad)  
   14000d484:	(bad)  
   14000d485:	inc    DWORD PTR [rax]
   14000d487:	(bad)  
   14000d488:	(bad)  
   14000d489:	inc    DWORD PTR [rax-0x7f000081]
   14000d48f:	jg     0x14000d490
   14000d491:	inc    eax
   14000d493:	jg     0x14000d494
   14000d495:	jmp    rax
   14000d497:	(bad)  
   14000d498:	(bad)  
   14000d499:	jmp    rcx
   14000d49b:	(bad)  
   14000d49c:	(bad)  
   14000d49d:	push   rcx
   14000d49f:	(bad)  
   14000d4a0:	(bad)  
   14000d4a1:	(bad)  
   14000d4a2:	(bad)  
   14000d4a3:	(bad)  
   14000d4a4:	(bad)  
   14000d4a5:	(bad)  
   14000d4a6:	(bad)  
   14000d4a7:	jmp    FWORD PTR [rax]
   14000d4a9:	add    BYTE PTR [rax],al
   14000d4ab:	add    BYTE PTR [rax],dl
   14000d4ad:	add    BYTE PTR [rax],al
   14000d4af:	add    BYTE PTR [rax],ah
   14000d4b1:	add    BYTE PTR [rax],al
   14000d4b3:	add    BYTE PTR [rcx],al
   14000d4b5:	add    BYTE PTR [rax],cl
   14000d4b7:	add    BYTE PTR [rax],al
   14000d4b9:	add    BYTE PTR [rax],al
   14000d4bb:	add    BYTE PTR [rax],al
   14000d4bd:	add    DWORD PTR [rax],eax
	...
   14000d4c7:	add    BYTE PTR [rax],al
   14000d4c9:	add    DWORD PTR [rax],eax
   14000d4cb:	add    BYTE PTR [rax],al
   14000d4cd:	add    DWORD PTR [rax],eax
   14000d4cf:	add    BYTE PTR [rax],al
   14000d4d1:	add    BYTE PTR [rax],al
   14000d4d3:	add    BYTE PTR [rsi+0x37],dl
   14000d4d6:	cmp    al,0x0
   14000d4d8:	push   rsi
   14000d4d9:	cmp    BYTE PTR [rbx],bh
   14000d4db:	add    BYTE PTR [rsi+0x45],ah
   14000d4de:	add    BYTE PTR ds:[rdi],dl
   14000d4e1:	adc    al,0x5f
   14000d4e3:	add    BYTE PTR [rdx],bl
   14000d4e5:	(bad)  
   14000d4e6:	pop    rsi
   14000d4e7:	add    BYTE PTR [rdx*1+0x1e2c0045],ah
   14000d4ee:	rex.WRB add BYTE PTR [rip+0x19004128],r15b        # 0x15901161d
   14000d4f5:	sbb    DWORD PTR [rsi+0x0],ebp
   14000d4f8:	adc    eax,0x16007317
   14000d4fd:	sbb    DWORD PTR [rcx+0x0],edi
   14000d500:	cmp    edi,DWORD PTR ds:[rbp+0x0]
   14000d504:	rex.XB sub eax,0x354e0046
   14000d50a:	add    BYTE PTR [rdi+0x33],al
   14000d50e:	rex.WRX add BYTE PTR [rax+0x3b],r11b
   14000d512:	rex.RX add BYTE PTR [rsi-0x65ffd7a6],r8b
   14000d519:	push   0x5b800027
   14000d51e:	add    BYTE PTR [rbp-0x59ffa385],bl
   14000d525:	jbe    0x14000d56d
   14000d527:	add    BYTE PTR [rdi-0x49ffac81],ch
   14000d52d:	add    BYTE PTR [rcx+0x0],0xb2
   14000d531:	test   DWORD PTR [rdx+0x0],ecx
   14000d534:	(bad)  
   14000d535:	mov    cs,WORD PTR [rbx+0x0]
   14000d538:	ror    DWORD PTR [rbp-0x733bffb1],0x4d
   14000d53f:	add    ch,cl
   14000d541:	xchg   ecx,eax
   14000d542:	rex.RXB add r10b,r10b
   14000d545:	xchg   ebp,eax
   14000d546:	rex.XB add r13b,dl
   14000d549:	cdq    
   14000d54a:	add    dil,r10b
   14000d54d:	pushf  
   14000d54e:	rex.RX add al,r11b
   14000d551:	lahf   
   14000d552:	rex.WXB add r9b,dl
   14000d555:	movabs al,ds:0xaed8007aa9ce005b
   14000d55e:	jb     0x14000d560
   14000d560:	sbb    ah,BYTE PTR [rax]
   14000d562:	xchg   DWORD PTR [rax],eax
   14000d564:	sbb    ah,BYTE PTR [rax]
   14000d566:	mov    BYTE PTR [rax],al
   14000d568:	sbb    al,0x22
   14000d56a:	lea    eax,[rax]
   14000d56c:	and    BYTE PTR [rcx],ch
   14000d56e:	xchg   edi,eax
   14000d56f:	add    BYTE PTR [rax],ah
   14000d571:	sub    bl,BYTE PTR [rax-0x59cbdb00]
   14000d577:	add    BYTE PTR [rsi],ah
   14000d579:	ss test eax,0xab382700
   14000d57f:	add    BYTE PTR [rdx],ch
   14000d581:	(bad)  
   14000d582:	mov    ch,0x0
   14000d584:	cmp    al,0x42
   14000d586:	mov    esp,0xb36a2b00
   14000d58b:	add    BYTE PTR [rdi+0x4b],al
   14000d58e:	(bad)  
   14000d58f:	add    BYTE PTR [rbp+riz*2-0x41],bl
   14000d593:	add    BYTE PTR [rbx+0x72],dh
   14000d596:	mov    esp,0xc7382e00
   14000d59b:	add    BYTE PTR [rdx],dh
   14000d59d:	cmp    eax,eax
   14000d59f:	add    BYTE PTR [rsi],ch
   14000d5a1:	rex.WX ret 
   14000d5a3:	add    BYTE PTR [rsi],ch
   14000d5a5:	rex.WR ret 0x2f00
   14000d5a9:	rex.WRXB enter 0x3000,0x42
   14000d5ae:	iret   
   14000d5af:	add    BYTE PTR [rax],dh
   14000d5b1:	rex rol BYTE PTR [rax],1
   14000d5b4:	xor    ecx,DWORD PTR [rsi-0x28]
   14000d5b7:	add    BYTE PTR [rdx],dh
   14000d5b9:	push   rdi
   14000d5ba:	rol    DWORD PTR [rax],cl
   14000d5bc:	xor    DWORD PTR [rsi-0x35],edi
   14000d5bf:	add    BYTE PTR [rip+0x3700da62],dh        # 0x17701b027
   14000d5c5:	jae    0x14000d59f
   14000d5c7:	add    BYTE PTR [rip+0x3700e05b],dh        # 0x17701b628
   14000d5cd:	push   0x683700e3
   14000d5d2:	out    0x0,al
   14000d5d4:	cmp    BYTE PTR [rbp-0x1a],ch
   14000d5d7:	add    BYTE PTR [rdi],dh
   14000d5d9:	jne    0x14000d5be
   14000d5db:	add    BYTE PTR [rax],bh
   14000d5dd:	je     0x14000d5c5
   14000d5df:	add    BYTE PTR [rsi],dh
   14000d5e1:	jp     0x14000d5c3
   14000d5e3:	add    BYTE PTR [rcx],bh
   14000d5e5:	jne    0x14000d5d0
   14000d5e7:	add    BYTE PTR [rdx],bh
   14000d5e9:	jns    0x14000d5d5
   14000d5eb:	add    BYTE PTR [rbx+0x49],al
   14000d5ee:	rol    DWORD PTR [rax],0x41
   14000d5f1:	jle    0x14000d5d8
   14000d5f3:	add    BYTE PTR [rax+rax*4],dh
   14000d5f6:	fld    DWORD PTR [rax]
   14000d5f8:	cmp    al,0x8a
   14000d5fa:	in     al,dx
   14000d5fb:	add    BYTE PTR [rbx],bh
   14000d5fd:	(bad)  
   14000d5fe:	in     eax,dx
   14000d5ff:	add    BYTE PTR [rax],bh
   14000d601:	xchg   esp,eax
   14000d602:	in     eax,0x0
   14000d604:	cmp    edx,DWORD PTR [rcx-0x68c4ff12]
   14000d60a:	out    dx,eax
   14000d60b:	add    BYTE PTR [rbx],bh
   14000d60d:	fwait
   14000d60e:	out    dx,eax
   14000d60f:	add    BYTE PTR [rcx],bh
   14000d611:	lahf   
   14000d612:	lock add BYTE PTR [rcx],bh
   14000d615:	movabs ds:0x9d6200c68f7200ed,eax
   14000d61e:	(bad)  
   14000d61f:	add    BYTE PTR [rdx-0x49],al
   14000d622:	out    dx,al
   14000d623:	add    BYTE PTR [rax-0x23ff4567],ah
   14000d629:	mov    ebx,0x8385008c
   14000d62e:	rol    BYTE PTR [rax],0x8e
   14000d631:	mov    eax,ebx
   14000d633:	add    BYTE PTR [rbp-0x5cff3971],cl
   14000d639:	scas   eax,DWORD PTR es:[rdi]
   14000d63a:	enter  0x0,0x0
	...
   14000d8ca:	add    BYTE PTR [rax],al
   14000d8cc:	(bad)  
   14000d8cd:	(bad)  
   14000d8ce:	inc    DWORD PTR [rax]
	...
   14000d8e4:	add    BYTE PTR [rax],al
   14000d8e6:	add    BYTE PTR [rax+rax*1+0x0],dl
	...
   14000d8f6:	push   rbx
   14000d8f7:	rex.WRXB
   14000d8f8:	rex.WXB pop r10
	...
   14000d906:	xor    eax,0x45413c
	...
   14000d913:	add    BYTE PTR [rax],al
   14000d915:	or     al,0x26
   14000d917:	sub    dh,BYTE PTR [rsi]
   14000d919:	(bad)  
   14000d91a:	rex.W add BYTE PTR [rax],al
   14000d91d:	add    BYTE PTR [rbp+0x0],dl
   14000d920:	add    BYTE PTR [rax],al
   14000d922:	and    bl,BYTE PTR [rdi+rdx*1]
   14000d925:	or     eax,0x3a2b260a
   14000d92a:	rex.RX
   14000d92b:	rex.WXB push r10
   14000d92d:	xor    BYTE PTR [rbx],dh
   14000d92f:	add    BYTE PTR [rax],al
   14000d931:	and    DWORD PTR [rdi],ebx
   14000d933:	sbb    eax,0xb07151b
   14000d938:	(bad)  
   14000d939:	xor    eax,0x38454b45
   14000d93e:	xor    DWORD PTR [rax],eax
   14000d940:	add    BYTE PTR [rbx],ah
   14000d942:	and    BYTE PTR [rdi],bl
   14000d944:	sbb    edx,DWORD PTR [rsi]
   14000d946:	add    eax,DWORD PTR [rsi+riz*1]
   14000d949:	sub    al,0x43
   14000d94b:	rex.WXB
   14000d94c:	xor    al,BYTE PTR [rax]
   14000d94f:	add    BYTE PTR [rax],al
   14000d951:	add    BYTE PTR [rax],al
   14000d953:	push   rsi
   14000d954:	sbb    edx,DWORD PTR [rax]
   14000d956:	(bad)  
   14000d957:	or     BYTE PTR [rdx],cl
   14000d959:	sub    DWORD PTR [rbx+0x4b],eax
   14000d95c:	ds sub eax,0x0
   14000d962:	add    BYTE PTR [rax],al
   14000d964:	add    BYTE PTR [rbx],dl
   14000d966:	add    al,BYTE PTR [rcx]
   14000d968:	add    eax,0x394f4227
   14000d96d:	push   rdi
	...
   14000d976:	sbb    BYTE PTR [rcx],dl
   14000d978:	(bad)  
   14000d979:	and    al,0x44
   14000d97b:	push   rax
   14000d97c:	(bad)  
	...
   14000d985:	add    BYTE PTR [rax],al
   14000d987:	add    BYTE PTR [rdx],dl
   14000d989:	or     DWORD PTR [rcx+0x51],ecx
   14000d98c:	rex.RXB add BYTE PTR [r8],r8b
	...
   14000d997:	add    BYTE PTR [rax],al
   14000d999:	(bad)  
   14000d99b:	rex.WR pop rax
	...
   14000d9a9:	adc    al,0x2e
   14000d9ab:	cmp    eax,0x0
	...
   14000d9b8:	add    BYTE PTR [rax],al
   14000d9ba:	(bad)  
   14000d9bb:	pop    rax
	...
   14000d9d0:	(bad)  
   14000d9d1:	inc    DWORD PTR [rax]
   14000d9d3:	add    dh,bh
   14000d9d5:	inc    DWORD PTR [rax]
   14000d9d7:	add    ah,bh
   14000d9d9:	(bad)  
   14000d9da:	add    BYTE PTR [rax],al
   14000d9dc:	cld    
   14000d9dd:	(bad)  
   14000d9de:	add    BYTE PTR [rax],al
   14000d9e0:	clc    
   14000d9e1:	sbb    eax,0x1c00000
   14000d9e6:	add    BYTE PTR [rax],al
   14000d9e8:	add    BYTE PTR [rcx],0x0
   14000d9eb:	add    BYTE PTR [rax-0x1ffffffd],al
   14000d9f1:	add    eax,DWORD PTR [rax]
   14000d9f3:	add    al,bh
   14000d9f5:	add    eax,DWORD PTR [rax]
   14000d9f7:	add    ah,bh
   14000d9f9:	(bad)  
   14000d9fa:	add    BYTE PTR [rax],al
   14000d9fc:	inc    DWORD PTR [rdi]
   14000d9fe:	add    BYTE PTR [rax],al
   14000da00:	inc    DWORD PTR [rdi-0x70010000]
   14000da06:	add    BYTE PTR [rax],al
   14000da08:	dec    edi
   14000da0a:	add    BYTE PTR [rax],al
   14000da0c:	(bad)  
   14000da0d:	inc    DWORD PTR [rax]
   14000da0f:	add    BYTE PTR [rcx+0xd474e50],cl
   14000da15:	or     bl,BYTE PTR [rdx]
   14000da17:	or     al,BYTE PTR [rax]
   14000da19:	add    BYTE PTR [rax],al
   14000da1b:	or     eax,0x52444849
   14000da20:	add    BYTE PTR [rax],al
   14000da22:	add    DWORD PTR [rax],eax
   14000da24:	add    BYTE PTR [rax],al
   14000da26:	add    DWORD PTR [rax],eax
   14000da28:	or     BYTE PTR [rsi],al
   14000da2a:	add    BYTE PTR [rax],al
   14000da2c:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   14000da30:	data16 add BYTE PTR [rax],al
   14000da33:	and    BYTE PTR [rax],al
   14000da35:	rex.WB
   14000da36:	rex.R
   14000da37:	push   r12
   14000da39:	js     0x14000d9d7
   14000da3b:	in     al,dx
   14000da3c:	mov    ebp,0xd765b069
   14000da41:	jne    0x14000da22
   14000da43:	neg    DWORD PTR [rbx+0x7b]
   14000da46:	lahf   
   14000da47:	jae    0x14000da37
   14000da49:	lock out 0xa1,al
   14000da4c:	(bad)  
   14000da4d:	movabs al,ds:0x24ce06201001031b
   14000da56:	sub    dh,cl
   14000da58:	and    al,0x38
   14000da5a:	push   rbx
   14000da5b:	and    al,BYTE PTR [rbp-0x6f]
   14000da5e:	adc    ch,BYTE PTR [rcx-0x75b4d25e]
   14000da64:	and    al,0x47
   14000da66:	mov    dl,0x2d
   14000da68:	cmp    esi,DWORD PTR [rdx+0x6cb24b2d]
   14000da6e:	retf   
   14000da6f:	rex.WX cmp al,0xa5
   14000da72:	(bad)  
   14000da73:	pop    rbx
   14000da74:	mov    dl,BYTE PTR [rbx+rbx*8]
   14000da77:	sub    ecx,ebx
   14000da79:	sub    al,bh
   14000da7b:	pop    rdi
   14000da7c:	pushf  
   14000da7d:	mov    ah,BYTE PTR [rbp-0x69]
   14000da80:	push   rbx
   14000da81:	scas   al,BYTE PTR es:[rdi]
   14000da82:	jl     0x14000da0c
   14000da84:	stos   DWORD PTR es:[rdi],eax
   14000da85:	xchg   edx,eax
   14000da86:	stos   BYTE PTR es:[rdi],al
   14000da87:	cmp    BYTE PTR [rcx-0x368e3aac],ch
   14000da8d:	mov    gs,WORD PTR [rip+0xffffffffd822e595]        # 0x11823c028
   14000da93:	call   0xfc3dddde
   14000da98:	jle    0x14000dad7
   14000da9a:	mov    edi,0x7bddef7e
   14000da9f:	iret   
   14000daa0:	fldcw  WORD PTR [rbx]
   14000daa2:	(bad)  
   14000daa3:	neg    dl
   14000daa5:	sti    
   14000daa6:	pushf  
   14000daa7:	sti    
   14000daa8:	rcl    BYTE PTR [rcx+rbp*1],1
   14000daab:	or     DWORD PTR [rax-0x5d],esp
   14000daae:	mov    ebx,0xbf5e02cf
   14000dab3:	sti    
   14000dab4:	out    dx,al
   14000dab5:	jo     0x14000da5d
   14000dab7:	jnp    0x14000da8f
   14000dab9:	hlt    
   14000daba:	pop    rdi
   14000dabb:	push   QWORD PTR [rbp+0x4bd2f436]
   14000dac1:	(bad)  
   14000dac2:	mov    ebp,0x2f4bd2f4
   14000dac7:	mov    ebp,0x2f4bd2f4
   14000dacc:	mov    ebp,0x2f4bd2f4
   14000dad1:	mov    ebp,0x2f4bd2f4
   14000dad6:	mov    ebp,0x2f4bd2f4
   14000dadb:	mov    ebp,0x2f4bd2f4
   14000dae0:	mov    ebp,0x2f4bd2f4
   14000dae5:	mov    ebp,0x2f4bd2f4
   14000daea:	mov    ebp,0x2f4bd2f4
   14000daef:	mov    ebp,0x2f4bd2f4
   14000daf4:	mov    ebp,0x2f4bd2f4
   14000daf9:	ja     0x14000da8d
   14000dafb:	enter  0x3eed,0x80
   14000daff:	pop    rsi
   14000db00:	jp     0x14000db03
   14000db02:	loopne 0x14000daf1
   14000db04:	(bad)  
   14000db05:	sub    al,ah
   14000db07:	sti    
   14000db08:	push   rcx
   14000db09:	add    BYTE PTR [rdi],al
   14000db0b:	clc    
   14000db0c:	in     eax,0xa7
   14000db0e:	fidivr WORD PTR [rdx+0x78]
   14000db11:	cmp    BYTE PTR [rax],ch
   14000db13:	ds jns 0x14000db0e
   14000db16:	out    0xa5,al
   14000db18:	(bad)  
   14000db19:	mov    esp,0x7a9cae1
   14000db1e:	(bad)  
   14000db1f:	ja     0x14000dad7
   14000db21:	retf   0xfdc5
   14000db24:	sbb    esp,edi
   14000db26:	stos   DWORD PTR es:[rdi],eax
   14000db27:	jmp    0x187df9b2a
   14000db2c:	(bad)  
   14000db2d:	in     eax,0xaf
   14000db2f:	(bad)  
   14000db30:	outs   dx,DWORD PTR ds:[rsi]
   14000db31:	cli    
   14000db32:	sub    eax,0x9fb1a0
   14000db37:	sub    BYTE PTR [rdi-0x4859407],bh
   14000db3d:	rex.WRX loop 0x14000db0e
   14000db40:	adc    edi,DWORD PTR [rdi-0x45]
   14000db43:	push   fs
   14000db45:	xchg   edi,eax
   14000db46:	pop    rsi
   14000db47:	cmp    cl,dl
   14000db49:	out    dx,eax
   14000db4a:	add    BYTE PTR [rdx],0x28
   14000db4d:	sub    DWORD PTR [rdx-0xf],0xe33ea7f1
   14000db54:	mov    ch,0xfe
   14000db56:	retf   0xdefa
   14000db59:	in     eax,0xf7
   14000db5b:	sbb    al,0xba
   14000db5d:	jno    0x14000db40
   14000db5f:	rex.WRB retf 
   14000db61:	mov    ebx,0xcd1feed7
   14000db66:	outs   dx,BYTE PTR ds:[rsi]
   14000db67:	(bad)  
   14000db68:	sbb    esi,DWORD PTR [rbx+rdx*8]
   14000db6b:	int    0x31
   14000db6d:	mov    bl,0xea
   14000db6f:	shl    DWORD PTR [rax-0x420198d],0x8d
   14000db76:	sbb    esi,DWORD PTR [rbx-0x25]
   14000db79:	cmp    dh,dh
   14000db7b:	(bad)  
   14000db7c:	cmp    dh,dh
   14000db7e:	(bad)  
   14000db7f:	loope  0x14000db5d
   14000db81:	outs   dx,DWORD PTR ds:[rsi]
   14000db82:	jle    0x14000db7f
   14000db84:	iret   
   14000db85:	jrcxz  0x14000db95
   14000db87:	xchg   esp,eax
   14000db88:	ds add ch,al
   14000db8b:	in     eax,0xf6
   14000db8d:	rex.WX stos QWORD PTR es:[rdi],rax
   14000db8f:	cld    
   14000db90:	fidivr WORD PTR [rsi-0x36]
   14000db93:	rex.RXB (bad) 
   14000db95:	(bad)  
   14000db96:	mov    ecx,0x5616cfb7
   14000db9b:	jg     0x14000dc1b
   14000db9d:	test   esi,0x5f36e7e5
   14000dba3:	(bad)  
   14000dba4:	sub    eax,0x7fe9e379
   14000dba9:	(bad)  
   14000dbaa:	mov    cl,0xed
   14000dbac:	(bad)  
   14000dbad:	pop    rax
   14000dbae:	fnstsw WORD PTR [rdi-0x7398a73e]
   14000dbb4:	mov    esp,0xf38f7a50
   14000dbb9:	(bad)  
   14000dbba:	fldcw  WORD PTR [rcx+0x51]
   14000dbbd:	dec    dl
   14000dbbf:	call   QWORD PTR [rax+0x3e]
   14000dbc2:	dec    BYTE PTR [rdi]
   14000dbc4:	inc    BYTE PTR [rbx-0x2bf644a5]
   14000dbca:	(bad)  
   14000dbcb:	push   0xffffffff81a3e940
   14000dbd0:	outs   dx,DWORD PTR ds:[rsi]
   14000dbd1:	rex.WB cli 
   14000dbd3:	or     BYTE PTR [rax+0x5127db97],ah
   14000dbd9:	stc    
   14000dbda:	sbb    eax,0x802c3ef1
   14000dbdf:	(bad)  
   14000dbe0:	test   eax,0x3fc3f9ef
   14000dbe5:	mov    ah,0xb0
   14000dbe7:	mov    esi,0xa676f7f9
   14000dbec:	mov    bl,0xa7
   14000dbee:	xchg   BYTE PTR [rdi-0x1],ah
   14000dbf1:	movabs ds:0xdfd9f0e6bffcfc3c,eax
   14000dbfa:	(bad)  
   14000dbfb:	jne    0x14000dbe4
   14000dbfd:	cmp    al,0x23
   14000dbff:	popf   
   14000dc00:	xor    dh,dh
   14000dc02:	ret    0xbd8
   14000dc05:	rex.XB out dx,eax
   14000dc07:	sbb    BYTE PTR [rbx-0x6a],bh
   14000dc0a:	(bad)  
   14000dc0b:	fidivr DWORD PTR [rsp+rbp*8-0x63]
   14000dc0f:	int    0xe5
   14000dc11:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dc12:	(bad)  
   14000dc13:	fs neg edi
   14000dc16:	cld    
   14000dc17:	imul   edi,DWORD PTR [rdi-0x4918287],0xffffffc7
   14000dc1e:	fiadd  WORD PTR [rcx+0x1f]
   14000dc21:	or     esp,edi
   14000dc23:	out    dx,al
   14000dc24:	rcr    BYTE PTR [rbx],cl
   14000dc26:	sbb    BYTE PTR [rsi+0x6e],0x8f
   14000dc2a:	int3   
   14000dc2b:	jnp    0x14000dc2b
   14000dc2d:	add    ch,BYTE PTR [rax+0x3f7df2de]
   14000dc33:	clc    
   14000dc34:	xor    esp,ebx
   14000dc36:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dc37:	in     eax,0xbf
   14000dc39:	mov    dl,0xdf
   14000dc3b:	call   0x189ddcba8
   14000dc40:	mov    ?,edi
   14000dc42:	(bad)  
   14000dc43:	dec    ebp
   14000dc45:	movabs eax,ds:0xfb1817bbeb23fe97
   14000dc4e:	sbb    ebx,eax
   14000dc50:	movabs ds:0x5161828a0c145c60,al
   14000dc59:	xor    BYTE PTR [rax],ch
   14000dc5b:	test   BYTE PTR [rdx+0x60],dl
   14000dc5e:	and    dl,bh
   14000dc60:	fdiv   DWORD PTR [rcx]
   14000dc62:	(bad)  
   14000dc64:	enter  0xdc53,0xf8
   14000dc68:	(bad)  
   14000dc69:	dec    edx
   14000dc6b:	sbb    eax,0x8c48be
   14000dc70:	movabs ds:0xf400de9577e046f4,al
   14000dc79:	repnz in eax,dx
   14000dc7b:	xchg   edi,eax
   14000dc7c:	pop    rbx
   14000dc7d:	sub    bh,bh
   14000dc7f:	fstp   TBYTE PTR [rsi+0x7a7f07ef]
   14000dc85:	mov    eax,0x4173f8b0
   14000dc8a:	sbb    al,0x17
   14000dc8c:	(bad)  
   14000dc8d:	pop    rsi
   14000dc8e:	(bad)  
   14000dc8f:	jrcxz  0x14000dcd0
   14000dc91:	(bad)  
   14000dc92:	lahf   
   14000dc93:	sbb    al,0x3e
   14000dc95:	stc    
   14000dc96:	out    dx,eax
   14000dc97:	pop    rax
   14000dc98:	mov    ebx,0xd9158171
   14000dc9d:	addr32 pop rax
   14000dc9f:	jp     0x14000dc67
   14000dca1:	mov    esi,0xa0066460
   14000dca6:	je     0x14000dcea
   14000dca8:	sub    DWORD PTR [rsi+0x9c28452],ecx
   14000dcae:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dcaf:	or     eax,DWORD PTR [rdi-0x38167af2]
   14000dcb5:	fisubr WORD PTR [rdx-0x3200a9]
   14000dcbb:	out    dx,al
   14000dcbc:	mov    ds,WORD PTR [rax+riz*4+0x37]
   14000dcc0:	add    bl,bh
   14000dcc2:	xchg   edx,eax
   14000dcc3:	mov    eax,0xbd007ddb
   14000dcc8:	fsub   QWORD PTR [rbx-0xe]
   14000dccb:	rex.WX shr BYTE PTR [rdi+0x7e97cb7a],0xe0
   14000dcd3:	xchg   DWORD PTR [rdi],eax
   14000dcd5:	jrcxz  0x14000dc9c
   14000dcd7:	lahf   
   14000dcd8:	jae    0x14000dcfc
   14000dcda:	pop    rsp
   14000dcdb:	(bad)  
   14000dcdd:	movabs ds:0x862dfe9e6cdbf33a,eax
   14000dce6:	xlat   BYTE PTR ds:[rbx]
   14000dce7:	mov    dh,0x18
   14000dce9:	test   DWORD PTR [rbp+0x53],ebx
   14000dcec:	jbe    0x14000dd3d
   14000dcee:	jmp    0x14a3abb0f
   14000dcf3:	out    0x28,eax
   14000dcf5:	popf   
   14000dcf6:	push   rax
   14000dcf7:	mov    al,ah
   14000dcf9:	popf   
   14000dcfa:	pop    rax
   14000dcfb:	(bad)  
   14000dcfc:	and    DWORD PTR [rsi+rdi*1+0x3c],edx
   14000dd00:	lock add al,0x37
   14000dd03:	jle    0x14000dd02
   14000dd05:	(bad)  
   14000dd06:	(bad)  
   14000dd07:	mov    edi,0x481114fd
   14000dd0c:	hlt    
   14000dd0d:	and    al,0x9c
   14000dd0f:	sub    ebp,esi
   14000dd11:	mov    bh,0x97
   14000dd13:	add    edx,edx
   14000dd15:	sbb    eax,DWORD PTR [rax+0x727dbe5e]
   14000dd1b:	or     esi,DWORD PTR [rdi+rdi*8-0x16813077]
   14000dd22:	mov    ecx,0x7fd2e2d1
   14000dd27:	in     eax,0x4
   14000dd29:	neg    BYTE PTR [rbx+0x53f9fec0]
   14000dd2f:	sbb    al,0x3e
   14000dd31:	cmc    
   14000dd32:	push   QWORD PTR [rcx]
   14000dd34:	fdivr  DWORD PTR [rsi]
   14000dd36:	retf   
   14000dd37:	mov    eax,0x4a2465d9
   14000dd3c:	loope  0x14000dd5b
   14000dd3e:	test   DWORD PTR [rax-0x5c421618],edi
   14000dd44:	adc    al,dh
   14000dd46:	and    bh,BYTE PTR [rax]
   14000dd48:	(bad)  
   14000dd49:	jg     0x14000ddc6
   14000dd4b:	mov    cl,0xd7
   14000dd4d:	jno    0x14000dce3
   14000dd4f:	call   0x12ae44cd7
   14000dd54:	scas   eax,DWORD PTR es:[rdi]
   14000dd55:	std    
   14000dd56:	js     0x14000ddd0
   14000dd58:	inc    BYTE PTR [rcx]
   14000dd5a:	pop    rdx
   14000dd5b:	and    edx,eax
   14000dd5d:	(bad)  
   14000dd5f:	fild   WORD PTR [rax-0x6]
   14000dd62:	or     edx,ebx
   14000dd64:	retf   
   14000dd65:	mov    bh,0x5b
   14000dd67:	jb     0x14000dd51
   14000dd69:	inc    eax
   14000dd6b:	sti    
   14000dd6c:	ds cli 
   14000dd6e:	enter  0xc6e2,0xa1
   14000dd72:	call   QWORD PTR [rsi+0x44]
   14000dd75:	(bad)  
   14000dd76:	(bad)  
   14000dd77:	cmp    al,0x57
   14000dd79:	scas   eax,DWORD PTR es:[rdi]
   14000dd7a:	pop    rbp
   14000dd7b:	movsxd esi,ebp
   14000dd7d:	test   DWORD PTR [rdi-0x39],edi
   14000dd80:	ror    bl,cl
   14000dd82:	iret   
   14000dd83:	xor    ebx,DWORD PTR [rax+0x3524635c]
   14000dd89:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dd8a:	(bad)  
   14000dd8b:	lahf   
   14000dd8c:	cmp    al,0xbe
   14000dd8e:	not    DWORD PTR [rsi+rbx*8-0x3ce353cf]
   14000dd95:	rex.B
   14000dd96:	push   r13
   14000dd98:	jp     0x14000dd24
   14000dd9a:	ret    0x7851
   14000dd9d:	lock sahf 
   14000dd9f:	sbb    BYTE PTR [rcx],ch
   14000dda1:	cmp    BYTE PTR [rdi+0x25],al
   14000dda4:	cli    
   14000dda5:	hlt    
   14000dda6:	rex.RXB jne 0x14000dda4
   14000dda9:	xchg   edi,eax
   14000ddaa:	sahf   
   14000ddab:	shr    DWORD PTR [rbx-0x75],1
   14000ddae:	je     0x14000dd3d
   14000ddb0:	rex (bad) 
   14000ddb2:	add    eax,0x37a42bc
   14000ddb7:	ror    bl,1
   14000ddb9:	mov    bh,0x47
   14000ddbb:	(bad)  
   14000ddbc:	in     al,0xfd
   14000ddbe:	rex.WXB
   14000ddbf:	rex.RXB out dx,al
   14000ddc1:	pop    rbx
   14000ddc2:	pop    rsp
   14000ddc3:	jg     0x14000ddb5
   14000ddc5:	xchg   ecx,eax
   14000ddc6:	mov    edi,0x5fbfbde5
   14000ddcb:	rex.R fsubr DWORD PTR [rbp-0x18463de5]
   14000ddd2:	fnstcw WORD PTR [rax-0xf]
   14000ddd5:	mov    bh,0x29
   14000ddd7:	scas   eax,DWORD PTR es:[rdi]
   14000ddd8:	pop    rsi
   14000ddd9:	(bad)  
   14000ddda:	movabs al,ds:0xe894284ef0120633
   14000dde3:	std    
   14000dde4:	or     ecx,edi
   14000dde6:	movabs al,ds:0x2b8c2878cf438612
   14000ddef:	rex.RXB push r13
   14000ddf1:	cmp    BYTE PTR [rdi+rsi*2+0x4e07178],bh
   14000ddf8:	jno    0x14000ddcb
   14000ddfa:	(bad)  
   14000ddfb:	sub    al,0xba
   14000ddfd:	out    0xe3,al
   14000ddff:	(bad)  
   14000de00:	(bad)  
   14000de01:	jg     0x14000ddfd
   14000de03:	sbb    esi,esp
   14000de05:	movabs ds:0xa006f4bcc08de900,eax
   14000de0e:	xchg   edi,eax
   14000de0f:	xlat   BYTE PTR ds:[rbx]
   14000de10:	pop    rsi
   14000de11:	out    0x43,al
   14000de13:	jg     0x14000de24
   14000de15:	xchg   esp,eax
   14000de16:	movd   eax,mm6
   14000de19:	adc    edi,DWORD PTR [rdi-0x4e]
   14000de1c:	stos   BYTE PTR es:[rdi],al
   14000de1d:	stos   BYTE PTR es:[rdi],al
   14000de1e:	(bad)  
   14000de20:	adc    al,0x45
   14000de22:	mov    eax,0x2b32ed7a
   14000de27:	(bad)  
   14000de28:	(bad)  
   14000de29:	(bad)  
   14000de2a:	ret    
   14000de2b:	in     eax,dx
   14000de2c:	xchg   edi,eax
   14000de2d:	sub    BYTE PTR [rdx-0x57ed79c3],bl
   14000de33:	add    al,0xcb
   14000de35:	mul    DWORD PTR [rbx-0x22]
   14000de38:	pop    rdi
   14000de39:	jns    0x14000de9c
   14000de3b:	xor    al,0xf0
   14000de3d:	sub    al,0x8d
   14000de3f:	sbb    al,0x6b
   14000de41:	mov    eax,DWORD PTR [rip+0xffffffffa59e8bab]        # 0xe59f69f2
   14000de47:	and    DWORD PTR [rbx+0x5e7042a],0x3881a96f
   14000de51:	rex.B
   14000de52:	rex.R pop rax
   14000de54:	xchg   ebp,eax
   14000de55:	(bad)  [rdi-0x4]
   14000de58:	div    edx
   14000de5a:	outs   dx,DWORD PTR ds:[rsi]
   14000de5b:	mov    edi,0xf8153e8b
   14000de60:	xchg   dl,dl
   14000de62:	pop    rdi
   14000de63:	nop
   14000de64:	pop    rsi
   14000de65:	mov    esi,0x7fbc925d
   14000de6a:	jns    0x14000de4b
   14000de6c:	rex.RXB mov r14d,0x68d503eb
   14000de72:	cld    
   14000de73:	(bad)  
   14000de74:	mov    ebp,0x9d8e2208
   14000de79:	mov    edx,0x1afe5e46
   14000de7e:	jmp    0x14000deaf
   14000de80:	std    
   14000de81:	(bad)  
   14000de82:	jb     0x14000de67
   14000de84:	xor    ah,BYTE PTR [rbp+0x28120606]
   14000de8a:	push   rdx
   14000de8b:	mov    gs,edi
   14000de8d:	sbb    al,0x85
   14000de8f:	test   esi,edi
   14000de91:	mov    esp,DWORD PTR [rbx-0x31]
   14000de94:	(bad)  
   14000de95:	(bad)
   14000de99:	(bad)
   14000de9c:	leave  
   14000de9d:	(bad)  
   14000de9e:	rex.WX adc QWORD PTR [rbp-0x7fa77080],rcx
   14000dea5:	add    ecx,DWORD PTR [rdx]
   14000dea7:	adc    DWORD PTR [rax+rcx*1+0x74fbca0e],ebx
   14000deae:	jmp    FWORD PTR [rdi+0x3e4e31fc]
   14000deb4:	rex (bad) 
   14000deb6:	sbb    al,0x1c
   14000deb8:	jge    0x14000dee4
   14000deba:	xor    BYTE PTR [rdi],ah
   14000debc:	mov    ebp,0xb5e5e801
   14000dec1:	xchg   ebp,eax
   14000dec2:	add    esp,DWORD PTR [rdi+rbx*4-0x5b]
   14000dec6:	(bad)  
   14000dec7:	sahf   
   14000dec8:	fstp   DWORD PTR [rbp*2+0xb2ffa1c]
   14000decf:	(bad)  
   14000ded0:	and    edx,DWORD PTR [rcx+rcx*1+0x22]
   14000ded4:	pop    rsp
   14000ded5:	mov    ebx,0x17b5897a
   14000deda:	jg     0x14000de67
   14000dedc:	(bad)  
   14000dedd:	rcr    BYTE PTR [rcx-0x5c],cl
   14000dee0:	cdq    
   14000dee1:	xor    BYTE PTR [rax-0x7f],dh
   14000dee4:	or     ah,BYTE PTR [rbp-0x4256ae90]
   14000deea:	or     BYTE PTR [rbp-0x1f],ah
   14000deed:	sbb    BYTE PTR [rip+0x54bab1c],cl        # 0x1454c8a0f
   14000def3:	sub    eax,DWORD PTR [rdi+0xa47862b]
   14000def9:	(bad)  
   14000defa:	xchg   DWORD PTR [rbx+0x16],ecx
   14000defd:	or     dl,BYTE PTR ss:[rsi-0x6a39f569]
   14000df04:	push   rax
   14000df05:	jp     0x14000df77
   14000df07:	rex.WRX
   14000df08:	rex adc eax,0x51c4e02f
   14000df0e:	movabs eax,ds:0x146245fc5c63e27
   14000df17:	leave  
   14000df18:	or     ah,dh
   14000df1a:	test   eax,0x6f4980
   14000df1f:	jp     0x14000df9a
   14000df21:	in     eax,dx
   14000df22:	fs mov esi,0xe503c7c1
   14000df28:	clc    
   14000df29:	xchg   ecx,eax
   14000df2a:	(bad)  
   14000df2b:	jg     0x14000df9f
   14000df2d:	imul   edi,DWORD PTR [rax],0xa1614b78
   14000df33:	cli    
   14000df34:	int    0x59
   14000df36:	lea    ebx,[rbx+rdi*2+0x5fb3d59e]
   14000df3d:	rex.XB jbe 0x14000deef
   14000df40:	push   rcx
   14000df41:	rex.W (bad) 
   14000df43:	sub    dl,cl
   14000df45:	rcl    BYTE PTR [rbx],0xf3
   14000df48:	jg     0x14000deea
   14000df4a:	lock rex.X push rbp
   14000df4d:	cmp    dl,BYTE PTR [rsi]
   14000df4f:	mov    DWORD PTR [rip+0xffffffffd525ebab],0x39afc3a6        # 0x11526cb04
   14000df59:	fmul   QWORD PTR [rdx+0x1828dca3]
   14000df5f:	scas   eax,DWORD PTR es:[rdi]
   14000df60:	adc    eax,0x833c8c2c
   14000df65:	rex.X (bad) 
   14000df67:	jne    0x14000dfa9
   14000df69:	movabs ds:0xbe6923089c03b6e,al
   14000df72:	jg     0x14000df13
   14000df74:	jg     0x14000df71
   14000df76:	rex.RB cli 
   14000df78:	push   rsp
   14000df79:	loopne 0x14000df90
   14000df7b:	rcr    BYTE PTR [rdi-0x78],cl
   14000df7e:	pop    rsi
   14000df7f:	pop    rsi
   14000df80:	imul   ecx,ecx,0xffffffca
   14000df83:	mov    edi,0xbe0feef1
   14000df88:	addr32 cmp al,0x1a
   14000df8b:	(bad)  
   14000df8c:	call   0x16aa95031
   14000df91:	rex.B cmp al,0x3b
   14000df94:	xlat   BYTE PTR ds:[rbx]
   14000df95:	scas   eax,DWORD PTR es:[rdi]
   14000df96:	mov    cl,0x72
   14000df98:	imul   BYTE PTR [rbx+0x54]
   14000df9b:	push   rdi
   14000df9c:	mov    dh,0xa0
   14000df9e:	cdq    
   14000df9f:	xor    dl,BYTE PTR [rax]
   14000dfa1:	sbb    BYTE PTR [rax],dl
   14000dfa3:	jo     0x14000df8b
   14000dfa5:	sar    DWORD PTR [rbp+0xcf7bc38],0x2a
   14000dfac:	iret   
   14000dfad:	retf   0xc152
   14000dfb0:	jo     0x14000df5f
   14000dfb2:	shr    BYTE PTR [rip+0xfffffffffc575f83],0xaa        # 0x13c583f3c
   14000dfb9:	ret    0xe0a2
   14000dfbc:	xlat   BYTE PTR ds:[rbx]
   14000dfbd:	sbb    al,0xb
   14000dfbf:	rex.WXB sahf 
   14000dfc1:	(bad)  
   14000dfc2:	in     eax,0xa8
   14000dfc4:	or     ch,BYTE PTR [rbx]
   14000dfc6:	adc    DWORD PTR [rdx+0x152c103],ecx
   14000dfcc:	loope  0x14000e00c
   14000dfce:	es (bad) 
   14000dfd0:	mul    DWORD PTR [rbx-0x64]
   14000dfd3:	ds rex.RX lahf 
   14000dfd6:	or     cl,ah
   14000dfd8:	rex.WB outs dx,DWORD PTR ds:[rsi]
   14000dfda:	add    BYTE PTR [rdx+0x79],bh
   14000dfdd:	ins    DWORD PTR es:[rdi],dx
   14000dfde:	in     al,0x0
   14000dfe0:	(bad)  
   14000dfe1:	pop    rdi
   14000dfe2:	lods   eax,DWORD PTR ds:[rsi]
   14000dfe3:	scas   al,BYTE PTR es:[rdi]
   14000dfe4:	sub    eax,0x5fa5a5f8
   14000dfe9:	pop    rax
   14000dfea:	sbb    BYTE PTR [rsi],cl
   14000dfec:	(bad)  
   14000dfed:	pop    rsi
   14000dfee:	add    al,0x9c
   14000dff0:	xor    BYTE PTR [rcx-0x741d1efd],ch
   14000dff6:	lods   al,BYTE PTR ds:[rsi]
   14000dff7:	pop    rsp
   14000dff8:	cmp    BYTE PTR [rbp+0x13c35eec],al
   14000dffe:	cmp    DWORD PTR [rdi-0x4ed5cbae],0x7a507782
   14000e008:	(bad)  
   14000e009:	js     0x14000dff3
   14000e00b:	pop    rax
   14000e00c:	pop    rsp
   14000e00d:	sub    al,0x29
   14000e00f:	xchg   edi,eax
   14000e010:	add    eax,0x91c501b7
   14000e015:	rex jno 0x14000e02c
   14000e018:	cld    
   14000e019:	or     bh,BYTE PTR [rax-0x1d46b0fb]
   14000e01f:	sbb    BYTE PTR [rbp-0x6217dfdd],cl
   14000e025:	and    BYTE PTR [rdx],cl
   14000e027:	(bad)  
   14000e028:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e029:	add    ecx,DWORD PTR [rax]
   14000e02b:	xchg   ebp,eax
   14000e02c:	call   0x12b63fff4
   14000e031:	rex.WRXB rcl QWORD PTR [r15+0x5],1
   14000e035:	out    0xa4,al
   14000e037:	(bad)  
   14000e038:	add    BYTE PTR [rbp+0x519296bc],bh
   14000e03e:	jmp    QWORD PTR [rbp-0x5e0161d9]
   14000e044:	jb     0x14000dffa
   14000e046:	hlt    
   14000e047:	in     al,dx
   14000e048:	test   al,0x2a
   14000e04a:	jrcxz  0x14000e077
   14000e04c:	loop   0x14000e006
   14000e04e:	jle    0x14000e043
   14000e050:	(bad)  
   14000e051:	mov    esp,edi
   14000e053:	sahf   
   14000e054:	addr32 je 0x14000e040
   14000e057:	sbb    al,0xd4
   14000e059:	jnp    0x14000e0d3
   14000e05b:	(bad)  
   14000e05c:	adc    eax,0x2e624281
   14000e061:	out    dx,eax
   14000e062:	adc    esi,ebx
   14000e064:	scas   eax,DWORD PTR es:[rdi]
   14000e065:	adc    cl,0xc0
   14000e068:	xor    DWORD PTR [rax+0x70],ebx
   14000e06b:	mov    eax,0x521fc165
   14000e070:	cmp    BYTE PTR [rsi],dl
   14000e072:	jo     0x14000e06b
   14000e074:	add    eax,0x164521fc
   14000e079:	adc    eax,0x2d19ecbf
   14000e07e:	jp     0x14000e02a
   14000e080:	rcl    BYTE PTR [rcx+0x16],cl
   14000e083:	loopne 0x14000e08a
   14000e085:	(bad)
   14000e089:	or     bl,BYTE PTR [rsi-0x5a]
   14000e08c:	(bad)  
   14000e08d:	and    edi,edi
   14000e08f:	xor    eax,0x445de1ff
   14000e094:	and    edx,DWORD PTR [rax]
   14000e096:	or     eax,0xbd2e3dc0
   14000e09b:	add    eax,ebp
   14000e09d:	in     eax,0xd5
   14000e09f:	xchg   edi,eax
   14000e0a0:	add    eax,eax
   14000e0a2:	(bad)  
   14000e0a4:	and    ebp,DWORD PTR [rdi+0x7c]
   14000e0a7:	ror    BYTE PTR [rdi],1
   14000e0a9:	rex.RX (bad) 
   14000e0ab:	mov    ecx,0xf0a05e34
   14000e0b0:	add    al,BYTE PTR [rdx]
   14000e0b2:	xchg   ebx,eax
   14000e0b3:	(bad)  
   14000e0b4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e0b5:	(bad)  
   14000e0b6:	pop    rdi
   14000e0b7:	(bad)  
   14000e0b8:	cmc    
   14000e0b9:	in     al,dx
   14000e0ba:	xlat   BYTE PTR ds:[rbx]
   14000e0bb:	jo     0x14000e0f4
   14000e0bd:	movabs eax,cs:0xa27fd175508a535a
   14000e0c7:	adc    DWORD PTR [rax],ebp
   14000e0c9:	or     eax,edi
   14000e0cb:	ret    0x53d0
   14000e0ce:	sub    eax,0x1ff618b9
   14000e0d3:	or     eax,0xea0a47d4
   14000e0d8:	movsxd ecx,DWORD PTR [rsi]
   14000e0da:	ja     0x14000e110
   14000e0dc:	push   rax
   14000e0dd:	lods   al,BYTE PTR ds:[rsi]
   14000e0de:	sub    DWORD PTR [rax+rcx*1],0xa46397e
   14000e0e5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e0e6:	(bad)  
   14000e0e7:	or     bl,BYTE PTR [rdi]
   14000e0e9:	(bad)  
   14000e0ea:	(bad)  
   14000e0eb:	xchg   esi,eax
   14000e0ec:	add    cl,BYTE PTR [rax]
   14000e0ee:	loopne 0x14000e075
   14000e0f0:	loope  0x14000e10d
   14000e0f2:	fscale 
   14000e0f4:	fst    DWORD PTR [rcx]
   14000e0f6:	rex.WRB
   14000e0f7:	rex.RB invd 
   14000e0fa:	add    bh,BYTE PTR [rbp-0x2a1a17ff]
   14000e100:	xchg   esi,eax
   14000e101:	push   rdi
   14000e102:	(bad)  
   14000e103:	cld    
   14000e104:	mov    esi,DWORD PTR [rdx-0xd]
   14000e107:	rcr    BYTE PTR [rdi+0x2385c3f1],1
   14000e10d:	jrcxz  0x14000e0f0
   14000e10f:	sub    al,0x8f
   14000e112:	sbb    eax,0x326ef7d7
   14000e117:	idiv   DWORD PTR ds:[rbx+riz*8]
   14000e11b:	in     eax,dx
   14000e11c:	xchg   edi,eax
   14000e11d:	(bad)  
   14000e11e:	mov    dh,0x8b
   14000e120:	(bad)  
   14000e121:	sbb    BYTE PTR [rax+0x6f31a252],ch
   14000e127:	mov    bh,0x26
   14000e129:	(bad)  
   14000e12a:	out    0x84,eax
   14000e12c:	rex.B jmp 0x1051ced4a
   14000e132:	rex.W nop
   14000e134:	cmc    
   14000e135:	rex mov ebp,0x2a0d99ee
   14000e13b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e13c:	or     esp,DWORD PTR [rip+0xffffffffd6e0b0e1]        # 0x116e19223
   14000e142:	adc    al,0x46
   14000e144:	and    BYTE PTR [rbx-0x5f],ah
   14000e147:	pop    rdx
   14000e148:	jo     0x14000e19e
   14000e14a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e14b:	push   rax
   14000e14c:	js     0x14000e1be
   14000e14e:	add    ch,BYTE PTR [rax+0x34488082]
   14000e154:	add    ah,BYTE PTR [rbx+0x9]
   14000e157:	(bad)  
   14000e158:	cli    
   14000e159:	gs inc bl
   14000e15c:	out    0x88,eax
   14000e15e:	(bad)  
   14000e15f:	loopne 0x14000e0ff
   14000e161:	(bad)  
   14000e162:	add    al,0xef
   14000e164:	jmp    0x175e6d0fc
   14000e169:	xchg   ebx,eax
   14000e16a:	int3   
   14000e16b:	neg    edi
   14000e16d:	jl     0x14000e151
   14000e16f:	mov    edi,esi
   14000e171:	mov    edx,0x78f2fcb2
   14000e176:	mov    esp,0x54385544
   14000e17b:	(bad)  
   14000e17c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e17d:	mov    al,0x7f
   14000e17f:	jmp    0xdfe84ca0
   14000e184:	(bad)  
   14000e185:	pop    rbp
   14000e186:	mov    edi,0x6c598684
   14000e18b:	or     al,0x10
   14000e18d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e18e:	int3   
   14000e18f:	cld    
   14000e190:	jle    0x14000e1c5
   14000e192:	add    al,BYTE PTR [rbp-0x39c5af9d]
   14000e198:	jrcxz  0x14000e19c
   14000e19a:	mov    edi,0x3d43ac04
   14000e19f:	sub    BYTE PTR [rcx+0x14],dl
   14000e1a2:	push   rbp
   14000e1a3:	test   al,0x97
   14000e1a5:	or     esp,DWORD PTR [rbx+rsi*1-0x20]
   14000e1a9:	(bad)  
   14000e1aa:	ror    DWORD PTR [rip+0xffffffffa8e0bf05],0x2a        # 0xe8e1a0b6
   14000e1b1:	xchg   edi,esi
   14000e1b3:	data16 rex
   14000e1b5:	rex.WR icebp 
   14000e1b7:	rex.RB jae 0x14000e186
   14000e1ba:	(bad)  
   14000e1bb:	div    DWORD PTR [rcx+0x641f53ff]
   14000e1c1:	jnp    0x14000e15c
   14000e1c3:	ds or  ch,al
   14000e1c6:	or     eax,0xa2af2f40
   14000e1cb:	sbb    al,0x68
   14000e1cd:	neg    BYTE PTR [rcx]
   14000e1cf:	sub    al,0x2e
   14000e1d1:	cs push rsp
   14000e1d3:	ret    
   14000e1d4:	loope  0x14000e225
   14000e1d6:	cmp    edx,DWORD PTR [rdi-0x6a]
   14000e1d9:	jrcxz  0x14000e1ac
   14000e1db:	sub    BYTE PTR [rsi],al
   14000e1dd:	loop   0x14000e201
   14000e1df:	in     al,dx
   14000e1e0:	in     al,dx
   14000e1e1:	rex.WRXB sbb BYTE PTR [r14+0x5b8b3aff],r11b
   14000e1e8:	(bad)  
   14000e1e9:	and    dl,bl
   14000e1eb:	sbb    eax,0x27550244
   14000e1f0:	cld    
   14000e1f1:	(bad)  
   14000e1f2:	(bad)  
   14000e1f3:	cmp    BYTE PTR [rbp+0x335f36],dh
   14000e1f9:	adc    DWORD PTR [rcx+0x58412fc7],0x76
   14000e200:	test   al,0x18
   14000e202:	enter  0x50a7,0x17
   14000e206:	(bad)  
   14000e207:	pop    rbp
   14000e208:	(bad)  
   14000e209:	cld    
   14000e20a:	xor    dh,BYTE PTR [rax]
   14000e20c:	adc    al,0xdc
   14000e20e:	pop    rax
   14000e20f:	test   al,0x86
   14000e211:	rex.X jmp 0xf735c91c
   14000e217:	add    ecx,DWORD PTR [rdx-0x5fc4823c]
   14000e21d:	and    bh,BYTE PTR [rsi*8-0x3c0163dd]
   14000e224:	hlt    
   14000e225:	push   rcx
   14000e226:	sar    BYTE PTR [rbp-0x43421d85],0x66
   14000e22d:	xchg   edx,eax
   14000e22e:	rex.XB push QWORD PTR [r13+0x2ef81f07]
   14000e235:	sub    eax,0x8b15f7ca
   14000e23a:	retf   
   14000e23b:	or     al,0xaa
   14000e23d:	or     dl,BYTE PTR [rcx+0x45]
   14000e240:	cmp    DWORD PTR [rbp+0x3958172b],0xd5c53cf7
   14000e24a:	pop    rax
   14000e24b:	cli    
   14000e24c:	repz loop 0x14000e271
   14000e24f:	cli    
   14000e250:	rex.WRXB push 0xfffffffff4897f73
   14000e256:	faddp  st(2),st
   14000e258:	or     esp,DWORD PTR [rbx+0x3918a7a1]
   14000e25e:	sbb    BYTE PTR [rcx+0x18],al
   14000e261:	or     BYTE PTR [rdx-0x57612f3a],cl
   14000e267:	fdivr  st(5),st
   14000e269:	movabs ds:0xca38190237145647,al
   14000e272:	mov    cl,0xa3
   14000e274:	sub    ah,BYTE PTR [rbx]
   14000e276:	jnp    0x14000e248
   14000e278:	sbb    ebp,DWORD PTR [rip+0xffffffff88255938]        # 0xc8263bb6
   14000e27e:	push   rcx
   14000e27f:	shl    DWORD PTR [rsi+0x3fe47ecc],0x93
   14000e286:	rol    edi,cl
   14000e288:	mov    eax,0xbd022bc7
   14000e28d:	add    eax,ebp
   14000e28f:	in     eax,0xd5
   14000e291:	xchg   ecx,eax
   14000e292:	add    ebx,esi
   14000e294:	jg     0x14000e307
   14000e296:	movsxd esp,DWORD PTR [rbx-0x4b]
   14000e299:	lods   al,BYTE PTR ds:[rsi]
   14000e29a:	stos   BYTE PTR es:[rdi],al
   14000e29b:	lahf   
   14000e29c:	or     al,BYTE PTR [rbp-0x17]
   14000e29f:	(bad)  
   14000e2a0:	jrcxz  0x14000e247
   14000e2a2:	call   0x179b92880
   14000e2a7:	lods   eax,DWORD PTR ds:[rsi]
   14000e2a8:	jno    0x14000e2c1
   14000e2aa:	rex.WRX mov dl,0x7c
   14000e2ad:	loope  0x14000e2e3
   14000e2af:	in     al,dx
   14000e2b0:	fild   WORD PTR [rax+0x9]
   14000e2b3:	xchg   esp,eax
   14000e2b4:	or     BYTE PTR [rbx],al
   14000e2b6:	xchg   esp,eax
   14000e2b7:	xor    dl,BYTE PTR [rsi+0x7]
   14000e2ba:	jno    0x14000e2ea
   14000e2bc:	(bad)  
   14000e2bd:	js     0x14000e2e6
   14000e2bf:	push   rsp
   14000e2c0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e2c1:	xor    BYTE PTR [rdx+0x6040c51c],ch
   14000e2c7:	or     al,0xa1
   14000e2c9:	mov    edx,cs
   14000e2cb:	ins    BYTE PTR es:[rdi],dx
   14000e2cc:	cli    
   14000e2cd:	(bad)
   14000e2d1:	adc    DWORD PTR [rip+0x6058dc5],0xffffffe0        # 0x14606709d
   14000e2d8:	rex.RX
   14000e2d9:	rex.X push rbp
   14000e2db:	or     esi,ebx
   14000e2dd:	fdecstp 
   14000e2df:	sub    al,0x7
   14000e2e1:	adc    BYTE PTR [rcx+rdx*4],al
   14000e2e4:	clc    
   14000e2e5:	rcl    DWORD PTR [rdx],0x7d
   14000e2e8:	clc    
   14000e2e9:	movabs ds:0x4f701478f72afc5c,eax
   14000e2f2:	sahf   
   14000e2f3:	je     0x14000e324
   14000e2f5:	scas   eax,DWORD PTR es:[rdi]
   14000e2f6:	mov    esp,ecx
   14000e2f8:	add    DWORD PTR [rdi-0x75],edi
   14000e2fb:	neg    edi
   14000e2fd:	jmp    QWORD PTR [rbx-0x76]
   14000e300:	cmp    al,0x2e
   14000e302:	ret    
   14000e303:	rex.RB (bad) 
   14000e305:	movabs ds:0x97eb9d8e234aa231,eax
   14000e30e:	pop    rcx
   14000e30f:	cmp    edi,esi
   14000e311:	cmp    al,0x83
   14000e313:	stos   DWORD PTR es:[rdi],eax
   14000e314:	pop    rbx
   14000e315:	push   0xffffffff8939c133
   14000e31a:	sbb    al,0x5d
   14000e31c:	imul   ebp,DWORD PTR [rax],0x38ff245c
   14000e322:	pop    rsp
   14000e323:	retf   
   14000e324:	jmp    FWORD PTR [rdi]
   14000e326:	cmp    eax,0x18a7a183
   14000e32b:	or     BYTE PTR [rdx],dh
   14000e32d:	push   rsp
   14000e32e:	(bad)  
   14000e32f:	or     ebp,DWORD PTR [rdx+0x29eeae4a]
   14000e335:	xor    al,0xde
   14000e337:	adc    DWORD PTR [rsi+0x4],edx
   14000e33a:	mov    bh,0x18
   14000e33c:	jo     0x14000e341
   14000e33e:	ror    DWORD PTR [rbp+0x16586022],0x82
   14000e345:	div    DWORD PTR [rcx+0x58]
   14000e348:	mov    BYTE PTR [rbx],al
   14000e34a:	push   rsp
   14000e34b:	pop    rdx
   14000e34c:	adc    BYTE PTR [rcx-0x80],0xd
   14000e350:	(bad)  
   14000e351:	(bad)  
   14000e352:	(bad)  
   14000e353:	push   rcx
   14000e354:	rex.WRX ffree st(7)
   14000e357:	cmp    eax,0xdea0e4c
   14000e35c:	rex (bad) 
   14000e35e:	jg     0x14000e3d0
   14000e360:	cmp    DWORD PTR [rax-0x6],eax
   14000e363:	fnstcw WORD PTR [rax-0x1c]
   14000e366:	xchg   ecx,eax
   14000e367:	(bad)  
   14000e368:	retf   
   14000e369:	ret    0x38ff
   14000e36c:	movabs ds:0x7b008f4aa996160c,al
   14000e375:	rex.WRB and BYTE PTR [r8+rdi*1-0x33],r11b
   14000e37a:	retf   0x17f9
   14000e37d:	nop
   14000e37e:	fwait
   14000e37f:	push   rdi
   14000e380:	add    DWORD PTR [rax+0x57fe18d3],0xe3ee9c68
   14000e38a:	and    al,0x8e
   14000e38c:	(bad)  
   14000e38d:	jbe    0x14000e311
   14000e38f:	test   DWORD PTR [rsi-0x3555ef4e],0x14602ae1
   14000e399:	or     eax,0x7e456a00
   14000e39e:	enter  0x40a1,0x58
   14000e3a2:	adc    ah,bl
   14000e3a4:	add    dl,BYTE PTR [rax+0x9]
   14000e3a7:	pop    rdx
   14000e3a8:	or     al,ch
   14000e3aa:	xor    BYTE PTR [rsi+0x7383ce01],ah
   14000e3b0:	mov    dh,BYTE PTR [rbx]
   14000e3b2:	push   rdx
   14000e3b3:	nop
   14000e3b4:	test   al,0xb4
   14000e3b6:	mov    ecx,DWORD PTR [rdi]
   14000e3b8:	test   al,0x1e
   14000e3ba:	jnp    0x14000e40a
   14000e3bc:	mov    bh,0x7f
   14000e3be:	mov    BYTE PTR [rsi],dh
   14000e3c0:	or     bh,BYTE PTR [rax+0x7a1f94a7]
   14000e3c6:	add    edx,eax
   14000e3c8:	retf   
   14000e3c9:	(bad)  
   14000e3ca:	push   rsp
   14000e3cb:	outs   dx,BYTE PTR ds:[rsi]
   14000e3cc:	shr    edx,1
   14000e3ce:	cmp    ebx,DWORD PTR [rax+0x59]
   14000e3d1:	stc    
   14000e3d2:	imul   esp,DWORD PTR [rdi+0x218b4d61],0xa15c5a3
   14000e3dc:	and    BYTE PTR [rax-0x628c4c50],cl
   14000e3e2:	xchg   ebp,eax
   14000e3e3:	repz iret 
   14000e3e5:	xor    edi,DWORD PTR [rsp+rdi*2+0x11f66d16]
   14000e3ec:	rcl    DWORD PTR [rdi+rdi*4-0x49c0d64f],0x21
   14000e3f4:	sbb    esi,ebp
   14000e3f6:	push   rbp
   14000e3f7:	clc    
   14000e3f8:	test   al,0xc4
   14000e3fa:	gs and eax,0xd06148c8
   14000e400:	sbb    eax,0x3097f4
   14000e405:	add    DWORD PTR [rbp+0x41643950],eax
   14000e40b:	jno    0x14000e410
   14000e40d:	jo     0x14000e424
   14000e40f:	add    rax,0xffffffffa5ef04be
   14000e415:	sub    r13,QWORD PTR [r12+rbp*2]
   14000e419:	nop
   14000e41a:	(bad)  
   14000e41b:	movups xmm3,XMMWORD PTR [rax-0x6b]
   14000e41f:	cli    
   14000e420:	sub    edi,DWORD PTR [rdi-0x64]
   14000e423:	xchg   ebx,eax
   14000e424:	(bad)  
   14000e425:	mov    eax,0xbd022b47
   14000e42a:	add    eax,ebp
   14000e42c:	in     eax,0xd5
   14000e42e:	nop
   14000e42f:	lods   al,BYTE PTR ds:[rsi]
   14000e430:	cld    
   14000e431:	xchg   DWORD PTR [rsi-0x3a580c87],ebx
   14000e437:	stc    
   14000e438:	iret   
   14000e439:	rex.WXB push r11
   14000e43b:	ret    
   14000e43c:	js     0x14000e3d7
   14000e43e:	shl    DWORD PTR [rax+0x8],1
   14000e441:	add    dh,BYTE PTR [rbp-0x18b42cf6]
   14000e447:	pop    rax
   14000e448:	cmp    bh,bh
   14000e44a:	jne    0x14000e4b0
   14000e44c:	out    0x1a,eax
   14000e44e:	stos   BYTE PTR es:[rdi],al
   14000e44f:	or     eax,0x7fe148e
   14000e454:	mov    esp,0xd4ecca8b
   14000e459:	add    BYTE PTR [rax+0x17],al
   14000e45c:	add    eax,eax
   14000e45e:	mov    dl,0x70
   14000e460:	xchg   esp,eax
   14000e461:	xchg   ebp,eax
   14000e462:	mov    ebx,DWORD PTR [rsi+0xa8207d]
   14000e468:	push   0x45812c7
   14000e46d:	push   rax
   14000e46e:	or     BYTE PTR [rcx+0x1],ah
   14000e471:	fcom   QWORD PTR [rax]
   14000e473:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e474:	adc    BYTE PTR [rax+riz*1-0x6c],ah
   14000e478:	add    eax,DWORD PTR [rdi-0x17]
   14000e47b:	pop    rbp
   14000e47c:	imul   eax,DWORD PTR [rdx+rdx*8],0xfffffffb
   14000e480:	push   rbp
   14000e481:	movsxd ebx,DWORD PTR [rcx+0x50]
   14000e484:	test   BYTE PTR [rdx-0xc],al
   14000e487:	clc    
   14000e488:	jnp    0x14000e443
   14000e48a:	bnd jge 0x14000e469
   14000e48d:	movabs ds:0xcabcbdb2753dc058,eax
   14000e496:	shl    BYTE PTR [rdx],cl
   14000e498:	(bad)  
   14000e499:	and    dh,al
   14000e49b:	ja     0x14000e47c
   14000e49d:	std    
   14000e49e:	sbb    eax,ebp
   14000e4a0:	ret    0x9fe2
   14000e4a3:	ja     0x14000e47f
   14000e4a5:	clc    
   14000e4a6:	adc    BYTE PTR [rax+0x2d],0xaf
   14000e4aa:	xor    ebp,DWORD PTR [rax]
   14000e4ac:	(bad)  
   14000e4ad:	fs mov ebp,0xf0c7b7b3
   14000e4b3:	(bad)  
   14000e4b5:	sbb    BYTE PTR [rdi-0x61],ch
   14000e4b8:	rex.RB (bad) 
   14000e4ba:	jge    0x14000e4cc
   14000e4bc:	sub    ah,al
   14000e4be:	push   rcx
   14000e4bf:	rex.WB and al,0xff
   14000e4c2:	and    al,0xfa
   14000e4c4:	outs   dx,DWORD PTR ds:[rsi]
   14000e4c5:	(bad)  
   14000e4c6:	movabs al,ds:0xa2852837d191779d
   14000e4cf:	adc    ah,BYTE PTR [rax+riz*4-0x7c]
   14000e4d3:	or     sil,BYTE PTR [r14]
   14000e4d6:	mov    BYTE PTR [rcx],ch
   14000e4d8:	sub    BYTE PTR [rax-0x4],0xad
   14000e4dc:	mov    bh,BYTE PTR [rdx]
   14000e4de:	mov    r12d,0x2904a148
   14000e4e5:	add    eax,0x1b0a1037
   14000e4ea:	(bad)  
   14000e4eb:	and    ah,BYTE PTR [rdx]
   14000e4ed:	js     0x14000e54b
   14000e4ef:	int3   
   14000e4f0:	inc    DWORD PTR [rbp+0x72]
   14000e4f3:	(bad)  
   14000e4f4:	and    eax,eax
   14000e4f6:	sub    dh,BYTE PTR [rbx+0x2f32f81f]
   14000e4fc:	sbb    eax,0x8ac1ee2
   14000e501:	hlt    
   14000e502:	(bad)  
   14000e503:	movabs al,ds:0x1f1ff422dc9fdf97
   14000e50c:	jg     0x14000e4ee
   14000e50e:	rex.WRXB mov BYTE PTR [r8-0x7b0aeac9],r15b
   14000e515:	xor    BYTE PTR [rax],bl
   14000e517:	xor    ebx,DWORD PTR [rdx+0x58]
   14000e51a:	(bad)  
   14000e51b:	mov    DWORD PTR [rdx+0x2b],edx
   14000e51e:	fdivr  QWORD PTR [rdx+rsi*2-0x308c4a7f]
   14000e525:	jrcxz  0x14000e59e
   14000e527:	movabs cs:0x71a57f4ac28046a1,eax
   14000e531:	div    BYTE PTR [rbx+0x68]
   14000e534:	out    dx,al
   14000e535:	movabs ds:0x812bec06d88b2ed7,al
   14000e53e:	sar    QWORD PTR [rsp+r8*8],1
   14000e542:	pop    rsi
   14000e543:	or     al,0x0
   14000e545:	rex.WR and BYTE PTR [rax+0x7050ca1d],0x23
   14000e54d:	sub    r12b,BYTE PTR [r8+0x68aa414]
   14000e554:	sar    BYTE PTR [rbx-0x6ab7eea8],0x80
   14000e55b:	outs   dx,BYTE PTR ds:[rsi]
   14000e55c:	and    al,BYTE PTR [rcx-0x1d85faf8]
   14000e562:	mov    bl,0x6c
   14000e564:	fst    QWORD PTR [rbx+0x733dc051]
   14000e56a:	movabs ds:0xf1b9400c9226bcbd,al
   14000e573:	hlt    
   14000e574:	pop    rbx
   14000e575:	fsubrp st(5),st
   14000e577:	stos   DWORD PTR es:[rdi],eax
   14000e578:	(bad)  
   14000e579:	rex.RXB or BYTE PTR [rip+0xffffffff97e29eae],r14b        # 0xd7e3842e
   14000e580:	(bad)  
   14000e581:	rex.WB (bad) 
   14000e583:	fistp  WORD PTR [rbp-0x3157317]
   14000e589:	xchg   r14,rax
   14000e58b:	cs mov esp,0x209bd308
   14000e591:	add    DWORD PTR [rdi],ebp
   14000e593:	(bad)  
   14000e594:	cmp    al,0x7f
   14000e596:	sbb    bl,dh
   14000e598:	xchg   ecx,eax
   14000e599:	ret    0xa8f4
   14000e59c:	lods   al,BYTE PTR ds:[rsi]
   14000e59d:	fiadd  WORD PTR [rbp+0x3]
   14000e5a0:	push   rax
   14000e5a1:	push   rsi
   14000e5a2:	(bad)  
   14000e5a3:	push   rdi
   14000e5a4:	or     dl,BYTE PTR [rdx-0x76]
   14000e5a7:	lods   eax,DWORD PTR ds:[rsi]
   14000e5a8:	(bad)  
   14000e5aa:	xor    DWORD PTR [rsi],eax
   14000e5ac:	nop
   14000e5ad:	hlt    
   14000e5ae:	fsub   DWORD PTR [rdx]
   14000e5b0:	add    BYTE PTR [rbx*1+0x11890c08],dl
   14000e5b7:	rex movabs eax,ds:0xc31413ce2af82548
   14000e5c1:	add    DWORD PTR [rdx+0x40cd0a9],esp
   14000e5c7:	mov    dl,BYTE PTR [rbp+0x14]
   14000e5ca:	(bad)  
   14000e5cb:	jne    0x14000e5bf
   14000e5cd:	(bad)  
   14000e5ce:	rex.WRXB mov r11b,0xb5
   14000e5d1:	(bad)  
   14000e5d2:	cmp    eax,0x6f40516
   14000e5d7:	movabs al,ds:0x6b87fd401cbbdf97
   14000e5e0:	jmp    0x14000e56d
   14000e5e2:	jle    0x14000e659
   14000e5e4:	std    
   14000e5e5:	(bad)  
   14000e5e6:	xor    eax,0xd3962c52
   14000e5eb:	cmp    eax,0xb2b54710
   14000e5f0:	rex.B jmp 0xfd862c7a
   14000e5f6:	stos   DWORD PTR es:[rdi],eax
   14000e5f7:	xchg   edi,eax
   14000e5f8:	pop    rax
   14000e5f9:	cmp    ebx,edi
   14000e5fb:	xor    eax,0xa117ebca
   14000e600:	cdq    
   14000e601:	cdq    
   14000e602:	xlat   BYTE PTR ds:[rbx]
   14000e603:	(bad)  
   14000e604:	enter  0x497f,0xb0
   14000e608:	jp     0x14000e687
   14000e60a:	push   0xfffffffffffffffe
   14000e60c:	mov    DWORD PTR [rcx],edx
   14000e60e:	rex loope 0x14000e595
   14000e611:	stos   BYTE PTR es:[rdi],al
   14000e612:	mov    WORD PTR [rip+0x7c00aefe],?        # 0x1bc019516
   14000e618:	in     al,0xf4
   14000e61a:	rex.RXB adc r8b,r12b
   14000e61d:	loopne 0x14000e5b1
   14000e61f:	jg     0x14000e5d2
   14000e621:	xor    dl,BYTE PTR [rax]
   14000e623:	mov    esp,0x29630c0
   14000e628:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e629:	jo     0x14000e673
   14000e62b:	or     DWORD PTR [rsi-0xebf5a76],edi
   14000e631:	pop    rax
   14000e632:	je     0x14000e655
   14000e634:	(bad)  
   14000e635:	or     dh,BYTE PTR [rsi+rdi*8+0x560b2b00]
   14000e63c:	ret    0xdf13
   14000e63f:	retf   
   14000e640:	(bad)  [rdi-0x2f]
   14000e643:	sub    eax,0x7203de09
   14000e648:	rex.WRXB pushf 
   14000e64a:	fs (bad) 
   14000e64c:	scas   eax,DWORD PTR es:[rdi]
   14000e64d:	movabs ds:0x1fd1e47e5ff422dc,al
   14000e656:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e657:	lods   al,BYTE PTR ds:[rsi]
   14000e658:	fimul  WORD PTR [rbx+0x68]
   14000e65b:	test   al,0x26
   14000e65d:	(bad)  
   14000e65e:	or     ebx,eax
   14000e660:	and    eax,0x8cb8bc6
   14000e665:	retf   0xa36e
   14000e668:	mov    cl,0xe7
   14000e66a:	jg     0x14000e657
   14000e66c:	adc    al,0xb2
   14000e66e:	mov    bh,0x43
   14000e670:	pop    rsp
   14000e671:	mov    ebx,0xd2e7cd33
   14000e676:	pushf  
   14000e677:	repz and edx,DWORD PTR [rcx]
   14000e67a:	add    al,0xcc
   14000e67c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e67d:	rex add ebp,edi
   14000e680:	(bad)
   14000e684:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000e685:	test   al,0x74
   14000e687:	sbb    al,0xb2
   14000e689:	ret    0xaac1
   14000e68c:	pop    rbp
   14000e68d:	lock (bad) 
   14000e68f:	xchg   al,ah
   14000e691:	rex.WX test QWORD PTR [rdx-0x70],rax
   14000e695:	shl    cl,cl
   14000e697:	sub    ah,BYTE PTR [rcx+0x40af232c]
   14000e69d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e69e:	cmc    
   14000e69f:	cld    
   14000e6a0:	in     eax,dx
   14000e6a1:	movabs ss:0x4c23a1ffdd4d8138,al
   14000e6ab:	(bad)  
   14000e6ac:	mov    ah,0x25
   14000e6ae:	sar    DWORD PTR [rsi],0x2
   14000e6b1:	call   0x1885c7e5b
   14000e6b6:	pop    rbx
   14000e6b7:	repz jg 0x14000e68d
   14000e6ba:	push   rbx
   14000e6bb:	outs   dx,DWORD PTR ds:[rsi]
   14000e6bc:	xchg   ebx,eax
   14000e6bd:	test   ebp,esp
   14000e6bf:	lahf   
   14000e6c0:	push   rsp
   14000e6c1:	test   BYTE PTR [rdx+0x13d5c7de],dh
   14000e6c7:	fmul   st(2),st
   14000e6c9:	and    DWORD PTR [rsi-0x4f5576ab],eax
   14000e6cf:	jae    0x14000e6c4
   14000e6d1:	cmp    cl,BYTE PTR [rbx-0x19]
   14000e6d4:	mov    esi,0x22ed7546
   14000e6d9:	fimul  DWORD PTR [rax+rdx*2-0x40]
   14000e6dd:	jrcxz  0x14000e707
   14000e6df:	push   rax
   14000e6e0:	rex.WX jrcxz 0x14000e6e1
   14000e6e3:	(bad)  
   14000e6e4:	jb     0x14000e734
   14000e6e6:	(bad)  
   14000e6e7:	loope  0x14000e6e0
   14000e6e9:	cs jb  0x14000e6e5
   14000e6ec:	push   rbx
   14000e6ed:	or     ah,BYTE PTR [rax]
   14000e6ef:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e6f0:	rex.R mov edi,0x2bfb16c
   14000e6f6:	push   0x5d
   14000e6f8:	jle    0x14000e74b
   14000e6fa:	movabs ds:0xf9882180a813ab26,al
   14000e703:	jno    0x14000e6ae
   14000e705:	add    al,0x5f
   14000e707:	(bad)  
   14000e708:	fld    QWORD PTR [rcx+0x361b3882]
   14000e70e:	(bad)  
   14000e70f:	pop    rbx
   14000e710:	jb     0x14000e69a
   14000e712:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e713:	add    DWORD PTR [rdx+0x25],eax
   14000e716:	loope  0x14000e785
   14000e718:	jg     0x14000e69b
   14000e71a:	push   rsp
   14000e71c:	(bad)  
   14000e71d:	mov    edx,0x3cbb80bc
   14000e722:	or     eax,0x2f400de8
   14000e727:	fistp  QWORD PTR [rdx-0x3402f7e4]
   14000e72d:	icebp  
   14000e72e:	js     0x14000e78c
   14000e730:	lods   al,BYTE PTR ds:[rsi]
   14000e731:	outs   dx,BYTE PTR ds:[rsi]
   14000e732:	cld    
   14000e733:	(bad)  
   14000e734:	(bad)  
   14000e735:	ret    
   14000e736:	jne    0x14000e709
   14000e738:	rex mov ecx,0x33ce03bf
   14000e73e:	pop    rax
   14000e73f:	cmp    eax,DWORD PTR [rdi+rdx*1-0x196be59f]
   14000e746:	ret    0xd619
   14000e749:	(bad)  
   14000e74a:	cmp    eax,0x1bddb8f
   14000e74f:	xor    al,0x20
   14000e751:	mov    ss,WORD PTR [rdx]
   14000e753:	movabs ds:0xfd0c474ef0f213f2,al
   14000e75c:	popf   
   14000e75d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e75e:	and    DWORD PTR [rax],esp
   14000e760:	adc    cl,bl
   14000e762:	ja     0x14000e78d
   14000e764:	or     ch,al
   14000e766:	mov    edi,gs
   14000e768:	rex.W (bad) 
   14000e76a:	and    DWORD PTR [rax+0x36],ebp
   14000e76d:	or     ch,BYTE PTR [rax-0x4]
   14000e770:	adc    eax,0x252a412a
   14000e775:	cs adc BYTE PTR es:[rbx-0x7e],cl
   14000e77a:	scas   al,BYTE PTR es:[rdi]
   14000e77b:	adc    BYTE PTR [rdx],cl
   14000e77d:	add    edx,DWORD PTR [rsi]
   14000e77f:	mov    ebp,0x38731145
   14000e784:	(bad)  
   14000e785:	and    r12d,eax
   14000e788:	mov    r12b,r11b
   14000e78b:	in     al,dx
   14000e78c:	jge    0x14000e78d
   14000e78e:	cwde   
   14000e78f:	data16 jle 0x14000e7fc
   14000e792:	rcr    BYTE PTR [rbp+0x2c],1
   14000e795:	mov    ebp,0x5be5e801
   14000e79a:	xchg   ebx,eax
   14000e79b:	pop    rbx
   14000e79c:	test   dh,bh
   14000e79e:	imul   ecx,DWORD PTR [rdi+0x3e],0xfffffffd
   14000e7a2:	rex.RXB jne 0x14000e761
   14000e7a5:	hlt    
   14000e7a6:	rex.B adc eax,0xc194f570
   14000e7ac:	dec    BYTE PTR [rip+0xffffffff8306e2c2]        # 0xc307ca74
   14000e7b2:	test   DWORD PTR [rbp+0x44],esp
   14000e7b5:	loope  0x14000e7b1
   14000e7b7:	ficomp WORD PTR [rsi]
   14000e7b9:	movabs ds:0x37a6017cba33cff3,eax
   14000e7c2:	push   rcx
   14000e7c3:	add    al,BYTE PTR [rdx+0x5c]
   14000e7c6:	shl    DWORD PTR [rdi-0x3801eb70],1
   14000e7cc:	jl     0x14000e80a
   14000e7ce:	jmp    0x13002d24b
   14000e7d3:	(bad)  
   14000e7d4:	sbb    eax,0x2e589e7d
   14000e7d9:	adc    rax,0x3fd7ae80
   14000e7df:	rol    BYTE PTR [rip+0xffffffff904a8050],0x2a        # 0xd04b6836
   14000e7e6:	xchg   esi,eax
   14000e7e7:	add    ebp,eax
   14000e7e9:	ds (bad) 
   14000e7eb:	gs (bad) 
   14000e7ed:	(bad)  
   14000e7ee:	xor    ch,ah
   14000e7f0:	rex.WRXB stc 
   14000e7f2:	(bad)  
   14000e7f3:	sub    r14b,BYTE PTR [rbp+r9*1-0x1eee7ec5]
   14000e7fb:	jrcxz  0x14000e87c
   14000e7fd:	push   rsi
   14000e7fe:	sahf   
   14000e7ff:	jg     0x14000e79d
   14000e801:	jnp    0x14000e807
   14000e803:	or     al,0xec
   14000e805:	or     eax,0x17bf2f40
   14000e80a:	leave  
   14000e80b:	fidivr WORD PTR [rdi-0x3]
   14000e80e:	mov    DWORD PTR [rdi],esp
   14000e810:	fmulp  st(4),st
   14000e812:	ret    0x9fea
   14000e815:	(bad)
   14000e818:	jnp    0x14000e868
   14000e81a:	imul   DWORD PTR [rax]
   14000e81c:	addr32 adc ebx,esp
   14000e81f:	(bad)  
   14000e820:	jge    0x14000e82e
   14000e822:	retf   0xa982
   14000e825:	sub    dl,bl
   14000e827:	retf   
   14000e828:	out    0x58,eax
   14000e82a:	cmp    eax,0xcefc75ff
   14000e82f:	adc    eax,0x17105308
   14000e834:	sbb    eax,0x1b4a06b3
   14000e839:	std    
   14000e83a:	xchg   ebp,eax
   14000e83b:	cmp    BYTE PTR [rcx+0x5ce73d2e],sil
   14000e842:	(bad)  
   14000e843:	add    BYTE PTR [rdx-0x68c7fd68],cl
   14000e849:	(bad)  
   14000e84a:	cli    
   14000e84b:	mov    al,0x23
   14000e84d:	push   rax
   14000e84e:	imul   eax,DWORD PTR [rax],0x48
   14000e851:	xchg   esi,eax
   14000e852:	rex cmp ecx,DWORD PTR [rdi+0x58582245]
   14000e859:	sub    DWORD PTR [rdx+rbx*1-0x31f42b71],edx
   14000e860:	retf   0xce81
   14000e863:	mov    ch,0x63
   14000e865:	ret    0x66a2
   14000e868:	mov    bh,0xd1
   14000e86a:	or     BYTE PTR [rax-0x1c5ebfa8],0xa7
   14000e871:	mov    eax,0x9e76fdf1
   14000e876:	ja     0x14000e8b5
   14000e878:	cmp    eax,0xbd0037b8
   14000e87d:	jl     0x14000e8f2
   14000e87f:	cmp    DWORD PTR [rax+0x2eacaffa],ecx
   14000e885:	xchg   esi,eax
   14000e886:	sbb    eax,DWORD PTR [rdi-0x2]
   14000e889:	(bad)  
   14000e88a:	(bad)  
   14000e88b:	or     al,0x17
   14000e88d:	popf   
   14000e88e:	add    BYTE PTR [rcx-0x6a844f9a],ah
   14000e894:	push   rax
   14000e895:	lea    ebp,[rax]
   14000e897:	(bad)  
   14000e898:	(bad)  
   14000e899:	push   rdx
   14000e89a:	movabs al,ds:0xe1649fcf28cc9cdc
   14000e8a3:	ror    bl,cl
   14000e8a5:	xor    cl,bl
   14000e8a7:	mov    cl,0x16
   14000e8a9:	fsubp  st(0),st
   14000e8ab:	stc    
   14000e8ac:	rex.WXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14000e8ae:	adc    al,0xe8
   14000e8b0:	pop    rsp
   14000e8b1:	mov    bh,0x5e
   14000e8b3:	add    edi,DWORD PTR cs:[rdx]
   14000e8b6:	movabs eax,ds:0xa002b177b8147170
   14000e8bf:	pop    rsi
   14000e8c0:	push   rcx
   14000e8c1:	xlat   BYTE PTR ds:[rbx]
   14000e8c2:	mov    dh,0x0
   14000e8c4:	imul   edx,DWORD PTR [rdi-0x1f],0x53
   14000e8c8:	clc    
   14000e8c9:	(bad)  
   14000e8ca:	test   DWORD PTR [rax-0x10],0x5577fd11
   14000e8d1:	mov    WORD PTR [rax],es
   14000e8d3:	ror    BYTE PTR [rdi-0x32bd3cb5],cl
   14000e8d9:	or     ah,al
   14000e8db:	push   rax
   14000e8dc:	rex.RX mov bl,0x9
   14000e8df:	nop
   14000e8e0:	mov    ?,WORD PTR [rcx]
   14000e8e2:	pop    rdx
   14000e8e3:	rcr    cl,1
   14000e8e5:	ja     0x14000e965
   14000e8e7:	(bad)  
   14000e8e8:	(bad)  
   14000e8e9:	fist   WORD PTR [rbx]
   14000e8eb:	(bad)  
   14000e8ec:	movabs al,ds:0xf2bccbbbf2f400de
   14000e8f5:	rex.RXB (bad) 
   14000e8f7:	push   QWORD PTR [rcx-0x1cdb0139]
   14000e8fd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e8fe:	test   DWORD PTR [rdx-0x523b1d55],0xdee194d9
   14000e908:	jne    0x14000e8a4
   14000e90a:	mov    ch,0xa3
   14000e90c:	mov    WORD PTR [rsi+0x23],es
   14000e90f:	push   0x55
   14000e911:	jbe    0x14000e8c2
   14000e913:	ins    DWORD PTR es:[rdi],dx
   14000e914:	mov    bl,0x72
   14000e916:	(bad)  
   14000e917:	and    al,0xc5
   14000e919:	mov    ch,0xcb
   14000e91b:	push   0x1ac4a298
   14000e920:	jg     0x14000e947
   14000e922:	push   rax
   14000e923:	stos   BYTE PTR es:[rdi],al
   14000e924:	out    0xf6,al
   14000e926:	(bad)  
   14000e927:	xor    edi,ebp
   14000e929:	out    dx,eax
   14000e92a:	rex.WRB stc 
   14000e92c:	popf   
   14000e92d:	(bad)  
   14000e92e:	or     al,BYTE PTR [rax-0x1f]
   14000e931:	push   rdx
   14000e932:	stc    
   14000e933:	scas   al,BYTE PTR es:[rdi]
   14000e934:	push   rbp
   14000e935:	rex.WRX rcr BYTE PTR [rdi+r15*2-0x1ec7e859],0x0
   14000e93e:	jmp    0x1685af0b8
   14000e943:	push   rdx
   14000e944:	push   0xffffffffffffffac
   14000e946:	(bad)  
   14000e947:	fcom   DWORD PTR [rcx-0x45]
   14000e94a:	retf   0x530
   14000e94d:	addr32 sub eax,0x523c66c1
   14000e953:	xchg   edi,eax
   14000e954:	(bad)  
   14000e955:	out    0x5,al
   14000e957:	add    BYTE PTR [rbp+0x6527c0f0],dl
   14000e95d:	jmp    0x14000e932
   14000e95f:	popf   
   14000e960:	jae    0x14000e920
   14000e962:	imul   esi,ebp,0xffffffe4
   14000e965:	scas   al,BYTE PTR es:[rdi]
   14000e966:	cmp    eax,0x555e5eb1
   14000e96b:	imul   edi,DWORD PTR [rcx-0xac2b002],0xfb5c597e
   14000e975:	adc    edx,DWORD PTR [rdx+0xc]
   14000e978:	movsxd edi,esi
   14000e97a:	lods   al,BYTE PTR ds:[rsi]
   14000e97b:	or     eax,0x6526e4e5
   14000e980:	push   rbx
   14000e981:	jrcxz  0x14000e992
   14000e983:	popf   
   14000e984:	(bad)  
   14000e985:	loopne 0x14000e9c4
   14000e987:	jnp    0x14000e9fe
   14000e989:	sub    DWORD PTR [rbp+rdi*4-0x38],0xffffffe2
   14000e98e:	neg    BYTE PTR [rcx]
   14000e990:	fs (bad) 
   14000e992:	cmp    ch,BYTE PTR [rax+0x3]
   14000e995:	cmp    edi,esi
   14000e997:	(bad)  
   14000e998:	out    dx,al
   14000e999:	(bad)  
   14000e99a:	lods   eax,DWORD PTR ds:[rsi]
   14000e99b:	(bad)  
   14000e99c:	jbe    0x14000ea08
   14000e99e:	cmp    DWORD PTR [rbx],0x2d
   14000e9a1:	sbb    dh,al
   14000e9a3:	adc    bl,BYTE PTR [rbx+0x59c28a78]
   14000e9a9:	mov    edi,ebx
   14000e9ab:	sbb    bh,BYTE PTR [rdi-0x6e]
   14000e9ae:	xchg   BYTE PTR [rsi+0x5573dc4],ah
   14000e9b4:	(bad)  
   14000e9b5:	push   0x3
   14000e9b7:	movabs al,ds:0x850018c9c785b0e
   14000e9c0:	scas   al,BYTE PTR es:[rdi]
   14000e9c1:	rex.W retf 
   14000e9c3:	mov    ebp,es
   14000e9c5:	push   rdx
   14000e9c6:	rex.XB mov WORD PTR [r10],?
   14000e9c9:	mov    ah,0x45
   14000e9cb:	stc    
   14000e9cc:	push   rsp
   14000e9cd:	in     eax,dx
   14000e9ce:	stc    
   14000e9cf:	mov    eax,0xf9308dd1
   14000e9d4:	rcr    BYTE PTR [rdx],cl
   14000e9d6:	mov    bl,0x8a
   14000e9d8:	(bad)  
   14000e9d9:	or     ah,ch
   14000e9db:	and    eax,DWORD PTR [rax+0x3931ee5e]
   14000e9e1:	enter  0x3ff5,0x72
   14000e9e5:	je     0x14000e9ba
   14000e9e7:	lods   eax,DWORD PTR ds:[rsi]
   14000e9e8:	outs   dx,BYTE PTR ds:[rsi]
   14000e9e9:	(bad)  
   14000e9ea:	push   rbp
   14000e9eb:	sbb    DWORD PTR [rsi],ebp
   14000e9ed:	lea    eax,[rbp+0x7c]
   14000e9f0:	sbb    al,0xc6
   14000e9f2:	push   rcx
   14000e9f3:	(bad)  
   14000e9f4:	lock mov edi,0xb8675a5e
   14000e9fa:	mov    edx,0x77372809
   14000e9ff:	outs   dx,BYTE PTR ds:[rsi]
   14000ea00:	mov    al,0x78
   14000ea02:	out    dx,al
   14000ea03:	imul   ecx,DWORD PTR [rsi+rbp*1],0x5f
   14000ea07:	rex
   14000ea08:	mov    bx,0x8471
   14000ea0c:	xchg   edi,eax
   14000ea0d:	xchg   ecx,eax
   14000ea0e:	jg     0x14000e99a
   14000ea10:	adc    al,dh
   14000ea12:	test   al,0x95
   14000ea14:	cld    
   14000ea15:	rex.WR jmp 0x122f0d94c
   14000ea1b:	rex.WX movabs rdi,0x3c1e897bdade8f85
   14000ea25:	(bad)
   14000ea28:	std    
   14000ea29:	rex.WRXB sete BYTE PTR [r10+r11*2-0x26e96f98]
   14000ea32:	not    DWORD PTR [rcx+0x16171809]
   14000ea38:	mov    BYTE PTR [rcx+0x4],dl
   14000ea3b:	add    eax,0x8f808d1
   14000ea40:	or     dh,ah
   14000ea42:	test   al,0xa1
   14000ea44:	add    eax,DWORD PTR [rsi]
   14000ea46:	(bad)  
   14000ea47:	sub    al,0x23
   14000ea49:	sbb    al,BYTE PTR [rbp-0x7107b7f]
   14000ea4f:	pop    rcx
   14000ea50:	mov    esi,0xf2ee0ef6
   14000ea55:	xor    al,0xa0
   14000ea57:	(bad)  
   14000ea58:	add    BYTE PTR [rbp+0x4c0e5adc],bh
   14000ea5e:	clc    
   14000ea5f:	add    edx,ecx
   14000ea61:	icebp  
   14000ea62:	add    ecx,DWORD PTR [rdi]
   14000ea64:	std    
   14000ea65:	jns    0x14000ea2d
   14000ea67:	sub    ecx,edi
   14000ea69:	test   al,0x2f
   14000ea6b:	int3   
   14000ea6c:	(bad)  
   14000ea6d:	(bad)  
   14000ea6e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ea6f:	sahf   
   14000ea70:	xor    BYTE PTR [rax+0x3f0e44dc],bl
   14000ea76:	rex xor eax,0x94693018
   14000ea7c:	out    0xe2,al
   14000ea7e:	rex.WXB lods al,BYTE PTR ds:[rsi]
   14000ea80:	ins    BYTE PTR es:[rdi],dx
   14000ea81:	popf   
   14000ea82:	ret    0xbcdd
   14000ea85:	mov    ch,BYTE PTR [rdx-0x7d]
   14000ea88:	mov    al,bl
   14000ea8a:	test   eax,0x434fd0da
   14000ea8f:	jmp    QWORD PTR [rcx+0x746cfe05]
   14000ea95:	ja     0x14000eae3
   14000ea97:	add    DWORD PTR [rax+0x37afd2b],ecx
   14000ea9d:	in     eax,dx
   14000ea9e:	adc    cl,BYTE PTR [rdi+riz*4]
   14000eaa1:	rex.R (bad) 
   14000eaa3:	xchg   ecx,eax
   14000eaa4:	sub    DWORD PTR [rsi-0x3c],ebp
   14000eaa7:	(bad)  
   14000eaa8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eaa9:	jrcxz  0x14000ea41
   14000eaab:	jrcxz  0x14000ea3d
   14000eaad:	shl    al,1
   14000eaaf:	add    al,0xf5
   14000eab1:	test   eax,0x89780804
   14000eab6:	imul   eax,DWORD PTR [rcx+rdx*1-0x7f],0xc87554c5
   14000eabe:	imul   eax,DWORD PTR [rbp-0x16b2f4f3],0x4354a44
   14000eac8:	icebp  
   14000eac9:	cmpxchg ebx,esi
   14000eacc:	mov    ebp,0x2b3e5dc
   14000ead1:	jp     0x14000ead6
   14000ead3:	ror    bl,1
   14000ead5:	sub    esp,ebp
   14000ead7:	(bad)  
   14000ead8:	and    eax,0x7e6fa3bf
   14000eadd:	out    0x7b,al
   14000eadf:	gs imul esi,ebp,0x221ca507
   14000eae6:	(bad)  
   14000eae7:	jmp    0x12d590caa
   14000eaec:	mov    edi,0x1e87f0a8
   14000eaf1:	rcl    BYTE PTR [rbx],0xb8
   14000eaf4:	jle    0x14000eae9
   14000eaf6:	es ret 
   14000eaf8:	repz iret 
   14000eafa:	xor    edi,DWORD PTR [rsp+rdi*2+0x4b5dea0e]
   14000eb01:	adc    ebp,DWORD PTR [rsp+rsi*8]
   14000eb04:	push   rdi
   14000eb05:	(bad)
   14000eb08:	mov    edi,0x1a27f18c
   14000eb0d:	xchg   ebp,eax
   14000eb0e:	pop    rsi
   14000eb0f:	pushf  
   14000eb10:	out    0x39,al
   14000eb12:	add    dh,bl
   14000eb14:	sbb    DWORD PTR [rcx-0x39],esi
   14000eb17:	addr32 call 0xcaf1a15c
   14000eb1d:	rol    DWORD PTR [rax-0x1392a4ac],1
   14000eb23:	xor    al,0x11
   14000eb25:	(bad)  
   14000eb26:	mov    edi,0x14b67cc5
   14000eb2b:	xchg   esi,eax
   14000eb2c:	ss pop rax
   14000eb2e:	or     al,0xe3
   14000eb30:	retf   0x17d8
   14000eb33:	push   rax
   14000eb34:	cwde   
   14000eb35:	movabs eax,ds:0xa536884593829349
   14000eb3e:	popf   
   14000eb3f:	adc    eax,0xd8f848b0
   14000eb44:	(bad)
   14000eb48:	mov    eax,0xde80a38b
   14000eb4d:	add    ah,dh
   14000eb4f:	repnz lea esp,[rcx+rax*1]
   14000eb53:	jg     0x14000eb3a
   14000eb55:	(bad)  
   14000eb56:	sbb    ebx,esi
   14000eb58:	lock rex.RX pop rbp
   14000eb5b:	fprem  
   14000eb5d:	sbb    DWORD PTR [r10+rdi*1],r13d
   14000eb61:	out    0xbc,eax
   14000eb63:	xchg   ebp,eax
   14000eb64:	in     eax,dx
   14000eb65:	add    dl,dl
   14000eb67:	int3   
   14000eb68:	test   al,0x76
   14000eb6a:	scas   eax,DWORD PTR es:[rdi]
   14000eb6b:	and    ch,BYTE PTR [rbx]
   14000eb6d:	fwait
   14000eb6e:	or     al,0x17
   14000eb70:	xchg   esi,eax
   14000eb71:	cwde   
   14000eb72:	xor    al,0xca
   14000eb74:	(bad)  
   14000eb75:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000eb76:	mov    bl,0xac
   14000eb78:	pushf  
   14000eb79:	(bad)  
   14000eb7a:	mov    DWORD PTR [rdi+0xcc2197e],edi
   14000eb80:	(bad)
   14000eb84:	add    DWORD PTR [rdi],ebp
   14000eb86:	sbb    al,bl
   14000eb88:	jg     0x14000eb61
   14000eb8a:	jp     0x14000eb6c
   14000eb8c:	xor    al,0xfe
   14000eb8e:	cmp    ebp,DWORD PTR [rcx]
   14000eb90:	pop    rsi
   14000eb91:	(bad)  
   14000eb92:	add    eax,0x81512ef0
   14000eb97:	jrcxz  0x14000eba8
   14000eb99:	shl    DWORD PTR [rcx],0x8d
   14000eb9c:	(bad)  
   14000eb9d:	and    al,0xdf
   14000eb9f:	rex.X idiv DWORD PTR [rcx]
   14000eba2:	adc    BYTE PTR [rax],dl
   14000eba4:	(bad)  
   14000eba6:	nop
   14000eba7:	in     eax,0x14
   14000eba9:	loop   0x14000ec06
   14000ebab:	or     al,0x40
   14000ebad:	mov    WORD PTR [rax],ss
   14000ebaf:	and    al,0x45
   14000ebb1:	fcom   QWORD PTR [rsi-0x5bfae98d]
   14000ebb7:	cmp    ecx,esp
   14000ebb9:	(bad)  
   14000ebba:	jmp    0x188528480
   14000ebbf:	fwait
   14000ebc0:	stos   DWORD PTR es:[rdi],eax
   14000ebc1:	test   BYTE PTR [rbx],dl
   14000ebc3:	iret   
   14000ebc4:	retf   0xf95
   14000ebc7:	jae    0x14000ebe0
   14000ebc9:	add    DWORD PTR [rcx-0xaf62289],0xfffffff2
   14000ebd0:	(bad)  
   14000ebd1:	xchg   esp,eax
   14000ebd2:	add    ebp,DWORD PTR [rbx-0x68697306]
   14000ebd8:	(bad)  
   14000ebd9:	stos   DWORD PTR es:[rdi],eax
   14000ebda:	int    0xc3
   14000ebdc:	jg     0x14000ec31
   14000ebde:	rex.RXB stos DWORD PTR es:[rdi],eax
   14000ebe0:	rex.RXB (bad) 
   14000ebe2:	(bad)  
   14000ebe3:	gs mov ebp,0x40434514
   14000ebe9:	addr32 jnp 0x14000ec40
   14000ebec:	cmc    
   14000ebed:	adc    al,0x39
   14000ebef:	jl     0x14000ebf3
   14000ebf1:	out    dx,eax
   14000ebf2:	sbb    eax,0x94fb7bbb
   14000ebf7:	out    0xbf,eax
   14000ebf9:	(bad)  
   14000ebfa:	ret    0x97a5
   14000ebfd:	jno    0x14000ebd2
   14000ebff:	fwait
   14000ec00:	and    al,0x82
   14000ec02:	mov    ss,WORD PTR [rdi-0x332c33bc]
   14000ec08:	jmp    0x161fbdfd6
   14000ec0d:	(bad)  
   14000ec0e:	jmp    0x19f08d157
   14000ec13:	pop    rax
   14000ec14:	jg     0x14000ec16
   14000ec16:	mov    ah,0xda
   14000ec18:	cwde   
   14000ec19:	retf   0xd280
   14000ec1c:	cmc    
   14000ec1d:	(bad)  
   14000ec1e:	je     0x14000ebba
   14000ec20:	and    esi,0xffffff89
   14000ec23:	std    
   14000ec24:	xchg   edx,eax
   14000ec25:	(bad)  
   14000ec26:	and    BYTE PTR [rcx-0x7afbba53],ch
   14000ec2c:	sub    eax,0x886d1e21
   14000ec31:	mov    dh,0xfc
   14000ec33:	(bad)  
   14000ec34:	pop    rbx
   14000ec35:	mov    BYTE PTR [rax-0x681629e4],ah
   14000ec3b:	call   0x10bbaf78e
   14000ec40:	push   rdx
   14000ec41:	sbb    esi,0xcad2f400
   14000ec47:	sub    eax,0x37f5fef2
   14000ec4c:	cmp    al,0xf2
   14000ec4e:	out    0x74,eax
   14000ec50:	jno    0x14000ec4f
   14000ec52:	add    ebp,DWORD PTR [rsi+0x4108801c]
   14000ec58:	add    al,0xd1
   14000ec5a:	sub    BYTE PTR [rdx+0x43],0xb1
   14000ec5e:	ja     0x14000ec63
   14000ec60:	sbb    DWORD PTR [rip+0x423b5c32],ebp        # 0x1823c4898
   14000ec66:	or     dl,cl
   14000ec68:	(bad)  
   14000ec6a:	sub    eax,0x40bc2f56
   14000ec6f:	jno    0x14000ec6e
   14000ec71:	push   rdx
   14000ec72:	out    0xfd,al
   14000ec74:	mov    ebp,DWORD PTR [rdx+0x56]
   14000ec77:	cld    
   14000ec78:	rex.X
   14000ec79:	rex.X outs dx,BYTE PTR ds:[rsi]
   14000ec7b:	std    
   14000ec7c:	adc    eax,0x6338e323
   14000ec81:	loopne 0x14000ec28
   14000ec83:	push   0x246970a0
   14000ec88:	js     0x14000ec26
   14000ec8a:	out    0x97,eax
   14000ec8c:	(bad)  
   14000ec8d:	scas   al,BYTE PTR es:[rdi]
   14000ec8e:	add    DWORD PTR [rcx+0x14],ebp
   14000ec91:	or     DWORD PTR [rcx-0xd525ff2],ecx
   14000ec97:	(bad)  
   14000ec98:	fisttp QWORD PTR [rdi+0x55]
   14000ec9b:	add    DWORD PTR [rsp+rax*1],0x340654ba
   14000eca2:	rex.WX mov cl,0xfd
   14000eca5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eca6:	adc    DWORD PTR [rcx-0x37],esp
   14000eca9:	clc    
   14000ecaa:	rex.R xor al,0x22
   14000ecad:	scas   al,BYTE PTR es:[rdi]
   14000ecae:	xor    eax,0x6132a9a0
   14000ecb3:	(bad)  
   14000ecb4:	(bad)  
   14000ecb5:	xchg   ecx,eax
   14000ecb6:	test   BYTE PTR [rdi-0x1],dh
   14000ecb9:	add    bh,BYTE PTR [rdi+0x69770cf3]
   14000ecbf:	sbb    dl,al
   14000ecc1:	sbb    eax,DWORD PTR [rax+0x22dca25e]
   14000ecc7:	out    dx,eax
   14000ecc8:	mov    edi,0x3e27c9ff
   14000eccd:	xlat   BYTE PTR ds:[rbx]
   14000ecce:	sub    al,0xad
   14000ecd0:	inc    DWORD PTR [rbx+rax*4]
   14000ecd3:	add    eax,0xd547c44
   14000ecd8:	test   DWORD PTR [rax-0x1ae615ff],esp
   14000ecde:	(bad)  
   14000ecdf:	cs mov dl,0x79
   14000ece2:	(bad)  
   14000ece3:	(bad)
   14000ece6:	out    dx,al
   14000ece7:	mov    bh,BYTE PTR fs:[rbx-0x745a7590]
   14000ecee:	addr32 mov edi,?
   14000ecf1:	(bad)  
   14000ecf2:	shl    BYTE PTR [rsi],0xf0
   14000ecf5:	in     al,0xce
   14000ecf7:	mov    edi,0xac5bfe84
   14000ecfc:	popf   
   14000ecfd:	jbe    0x14000ed25
   14000ecff:	sbb    eax,0xffa1204c
   14000ed04:	jle    0x14000ed54
   14000ed06:	(bad)
   14000ed09:	in     eax,dx
   14000ed0a:	iret   
   14000ed0b:	xor    eax,DWORD PTR [rcx]
   14000ed0d:	xor    eax,0x144523bf
   14000ed12:	(bad)  
   14000ed13:	jnp    0x14000ed1c
   14000ed15:	and    dl,BYTE PTR [rsi]
   14000ed17:	ror    BYTE PTR [rcx-0xa],1
   14000ed1a:	pop    rbp
   14000ed1b:	lods   al,BYTE PTR ds:[rsi]
   14000ed1c:	(bad)  
   14000ed1d:	and    al,0xce
   14000ed1f:	add    DWORD PTR [rcx-0x7f969ef6],ebp
   14000ed25:	imul   eax,DWORD PTR [rcx],0x40
   14000ed28:	or     ebp,DWORD PTR [rdx]
   14000ed2a:	adc    al,0x27
   14000ed2c:	mov    WORD PTR [rsi],ds
   14000ed2e:	xlat   BYTE PTR ds:[rbx]
   14000ed2f:	sbb    ebx,DWORD PTR [rdi-0x20]
   14000ed32:	cs add eax,0xd0037b03
   14000ed38:	rex.WXB push r15
   14000ed3a:	jb     0x14000ed1a
   14000ed3c:	jg     0x14000ed32
   14000ed3e:	movabs eax,ds:0x78e86ffd79649e07
   14000ed47:	mov    ecx,0xd8185f14
   14000ed4c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ed4d:	cmp    BYTE PTR [rdx],al
   14000ed4f:	test   BYTE PTR [rsi],al
   14000ed51:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ed52:	jnp    0x14000ed8c
   14000ed54:	out    dx,eax
   14000ed55:	sbb    BYTE PTR [rdx+rdi*4],bl
   14000ed58:	(bad)  
   14000ed59:	push   rcx
   14000ed5a:	in     eax,0xc6
   14000ed5c:	mov    ch,0x6d
   14000ed5e:	xchg   esi,eax
   14000ed5f:	(bad)  
   14000ed60:	jg     0x14000ed9f
   14000ed62:	mov    ?,ebx
   14000ed64:	scas   al,BYTE PTR es:[rdi]
   14000ed65:	test   esp,0x81052a8f
   14000ed6b:	rex.X add al,0x2f
   14000ed6e:	and    DWORD PTR [rdi-0x48b2ce01],eax
   14000ed74:	(bad)  
   14000ed75:	movabs al,ds:0x419aeaa5d700554
   14000ed7e:	rex.WRXB int3 
   14000ed80:	dec    DWORD PTR [rbp-0x1b]
   14000ed83:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ed84:	sar    DWORD PTR [rdx],0xf7
   14000ed87:	shl    BYTE PTR [rdi+rdi*4+0x16],cl
   14000ed8b:	mov    ch,0xcf
   14000ed8d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ed8e:	rex fcmove st,st(6)
   14000ed91:	sbb    BYTE PTR [rax],0x9
   14000ed94:	push   0x19105c87
   14000ed99:	or     DWORD PTR [rcx+0x80ed470],0x3e6fb649
   14000eda3:	and    eax,0x2d09ab48
   14000eda8:	mov    ebx,0x71cfb1f0
   14000edad:	outs   dx,BYTE PTR ds:[rsi]
   14000edae:	lea    esi,[rsi+0x18d77a24]
   14000edb4:	sbb    esi,0x3072f400
   14000edba:	out    dx,eax
   14000edbb:	(bad)  
   14000edbc:	push   rdi
   14000edbd:	(bad)  
   14000edbe:	push   rdi
   14000edbf:	xlat   BYTE PTR ds:[rbx]
   14000edc0:	mov    dh,ch
   14000edc2:	int    0x5f
   14000edc4:	push   0x16
   14000edc6:	xlat   BYTE PTR ds:[rbx]
   14000edc7:	(bad)  
   14000edc8:	mov    edx,0xf6938062
   14000edcd:	ss push rcx
   14000edcf:	or     eax,0x727e0210
   14000edd4:	xchg   ebx,eax
   14000edd5:	(bad)  
   14000edd6:	imul   ecx,DWORD PTR [rbp-0x26e873f],0xf1734d59
   14000ede0:	or     al,0x4b
   14000ede2:	(bad)  
   14000ede3:	pop    rdi
   14000ede4:	rex.R outs dx,BYTE PTR ds:[rsi]
   14000ede6:	pop    rsi
   14000ede7:	rex.RB
   14000ede8:	rex.XB or eax,0x105aaf44
   14000edee:	repz jg 0x14000ed90
   14000edf1:	xchg   esi,eax
   14000edf2:	std    
   14000edf3:	(bad)  
   14000edf4:	and    eax,0x6b9ed4b8
   14000edf9:	(bad)  
   14000edfa:	pop    rax
   14000edfb:	clc    
   14000edfc:	xchg   ecx,eax
   14000edfd:	call   0x1662a1cc3
   14000ee02:	popf   
   14000ee03:	jge    0x14000ee4c
   14000ee05:	scas   al,BYTE PTR es:[edi]
   14000ee07:	out    0x9d,al
   14000ee09:	(bad)
   14000ee0c:	push   rsi
   14000ee0d:	jmp    0x14000edea
   14000ee0f:	add    eax,0xc46cec43
   14000ee14:	pop    rcx
   14000ee15:	sub    ah,al
   14000ee17:	or     al,0xf4
   14000ee19:	sub    ebp,DWORD PTR [rsp+rcx*8+0x6a0729d8]
   14000ee20:	xor    dh,BYTE PTR [rax]
   14000ee22:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ee23:	std    
   14000ee24:	fcmovb st,st(1)
   14000ee26:	sbb    DWORD PTR [rbp+rdx*4+0xa],eax
   14000ee2a:	jge    0x14000ee0e
   14000ee2c:	movsxd edi,DWORD PTR [rdx-0x3d11b10b]
   14000ee32:	xor    al,0xa0
   14000ee34:	(bad)  
   14000ee35:	add    bh,dh
   14000ee37:	mov    edx,0x9dfbc81c
   14000ee3c:	jae    0x14000ee13
   14000ee3e:	repnz icebp 
   14000ee40:	adc    edi,DWORD PTR [rdi-0x5b]
   14000ee43:	pop    rsi
   14000ee44:	fidivr WORD PTR [rdi+rsi*4+0x54]
   14000ee48:	movsxd eax,DWORD PTR [rsp+rbx*4+0x71]
   14000ee4c:	outs   dx,DWORD PTR ds:[rsi]
   14000ee4d:	rex.WR
   14000ee4e:	repz and BYTE PTR [rbx+r10*2],sil
   14000ee53:	mov    bh,BYTE PTR [rdx-0x36]
   14000ee56:	jo     0x14000ee3b
   14000ee58:	sbb    dh,cl
   14000ee5a:	jns    0x14000eeca
   14000ee5c:	fdivr  QWORD PTR [rsi+rcx*8+0x181785e2]
   14000ee63:	pop    rsi
   14000ee64:	mov    ecx,0x125dd300
   14000ee69:	push   rbp
   14000ee6a:	xlat   BYTE PTR ds:[rbx]
   14000ee6b:	or     ebx,DWORD PTR [rip+0xffffffffd739afef]        # 0x1173a9e60
   14000ee71:	(bad)  
   14000ee72:	in     eax,dx
   14000ee73:	mov    bh,0x96
   14000ee75:	call   rbx
   14000ee77:	jmp    0x13a195e81
   14000ee7c:	(bad)  
   14000ee7d:	jg     0x14000ee2b
   14000ee7f:	rex outs dx,DWORD PTR ds:[rsi]
   14000ee81:	sbb    al,0x0
   14000ee83:	rex.B push 0x45
   14000ee86:	rex.X push 0x9c63f09
   14000ee8c:	mov    al,0x5f
   14000ee8e:	push   rcx
   14000ee8f:	adc    dl,BYTE PTR [rbp-0x28]
   14000ee92:	rex.RB xchg r8d,eax
   14000ee94:	(bad)  
   14000ee96:	test   al,0x48
   14000ee98:	in     al,dx
   14000ee99:	and    eax,0x6675f530
   14000ee9e:	or     al,0x52
   14000eea0:	ja     0x14000ee42
   14000eea2:	rex.WXB
   14000eea3:	rex.WR
   14000eea4:	rex.XB pop r10
   14000eea6:	and    eax,DWORD PTR [rax+0xe]
   14000eea9:	cmp    al,0x4
   14000eeab:	rex.B in eax,0x7e
   14000eeae:	cdq    
   14000eeaf:	jl     0x14000eec0
   14000eeb1:	ja     0x14000ee94
   14000eeb3:	mov    ah,0xa0
   14000eeb5:	mov    ebx,0xf97a44e6
   14000eeba:	jge    0x14000ee84
   14000eebc:	and    DWORD PTR [rsi],0xfe3aa01f
   14000eec2:	clc    
   14000eec3:	movabs ds:0x2e1887f1bcb66c7f,eax
   14000eecc:	and    esi,ecx
   14000eece:	rex.RXB in eax,0x81
   14000eed1:	sbb    al,0xfa
   14000eed3:	mov    eax,DWORD PTR [rbp+0x643555ff]
   14000eed9:	mov    esp,0x9b4c9ba
   14000eede:	rex.WR
   14000eedf:	cs mov esi,0x1785cacc
   14000eee5:	lock (bad) 
   14000eee7:	scas   al,BYTE PTR es:[rdi]
   14000eee8:	movabs al,ds:0x4cffb5cd7efc6a61
   14000eef1:	std    
   14000eef2:	rex.WRB (bad) 
   14000eef4:	add    BYTE PTR [rdx+rdi*8+0xc739a9b],cl
   14000eefb:	hlt    
   14000eefc:	jae    0x14000ef6b
   14000eefe:	cmp    dl,BYTE PTR [rax-0x54a37e90]
   14000ef04:	add    esi,DWORD PTR [rsi+rax*1+0x17e22e9a]
   14000ef0b:	ret    
   14000ef0c:	jbe    0x14000ef5b
   14000ef0e:	cwde   
   14000ef0f:	movabs ds:0x1abc417a0f75abf8,al
   14000ef19:	movabs eax,ds:0x8036720a44c000c8
   14000ef22:	and    al,0xf
   14000ef24:	and    al,0xc1
   14000ef26:	mov    BYTE PTR [rbp-0x692fce65],0xf
   14000ef2d:	and    BYTE PTR [rdx],ah
   14000ef2f:	sub    al,0x48
   14000ef31:	clc    
   14000ef32:	ror    BYTE PTR [rdi],1
   14000ef34:	leave  
   14000ef35:	mov    eax,DWORD PTR [rdi-0x48]
   14000ef38:	retf   
   14000ef39:	movabs ds:0xd00b72abdc00de80,al
   14000ef42:	out    dx,eax
   14000ef43:	movabs eax,ds:0x2ff3657acefc1f47
   14000ef4c:	call   0x18be7f4c9
   14000ef51:	sbb    eax,ecx
   14000ef53:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ef54:	mov    BYTE PTR [rsi],al
   14000ef56:	(bad)  
   14000ef57:	sub    ch,BYTE PTR [rax-0x60]
   14000ef5a:	(bad)  
   14000ef5b:	mov    cl,0xbf
   14000ef5e:	retf   
   14000ef5f:	(bad)  
   14000ef60:	jns    0x14000ef7f
   14000ef62:	(bad)  
   14000ef63:	sbb    BYTE PTR [rax-0x1d],dh
   14000ef66:	out    0xe,al
   14000ef68:	movabs ds:0x7e07173e5f19270b,eax
   14000ef71:	adc    al,BYTE PTR [rbx]
   14000ef73:	add    eax,0x17f81a87
   14000ef78:	ret    
   14000ef79:	push   QWORD PTR [rax+rbp*8+0x69fd0e47]
   14000ef80:	cmp    eax,0x7808aa77
   14000ef85:	xlat   BYTE PTR ds:[rbx]
   14000ef86:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ef87:	add    BYTE PTR [rsi],bh
   14000ef89:	(bad)  
   14000ef8a:	fstp   QWORD PTR [rdx-0x26]
   14000ef8d:	scas   eax,DWORD PTR es:[rdi]
   14000ef8e:	test   al,0x20
   14000ef90:	xor    ebx,DWORD PTR [r9]
   14000ef93:	sub    dh,ch
   14000ef95:	in     al,dx
   14000ef96:	or     BYTE PTR [rsi],0x6a
   14000ef99:	and    BYTE PTR [rdi-0x2af312fb],dl
   14000ef9f:	out    0x1,al
   14000efa1:	(bad)  
   14000efa2:	or     eax,0xf39af383
   14000efa7:	sti    
   14000efa8:	rex.W (bad) 
   14000efaa:	in     al,dx
   14000efab:	xor    BYTE PTR [rax],al
   14000efad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000efae:	push   rbp
   14000efaf:	mov    ch,BYTE PTR [rax+0x13]
   14000efb2:	sub    al,0x9a
   14000efb4:	rex.B (bad) 
   14000efb6:	jl     0x14000f008
   14000efb8:	(bad)  
   14000efb9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000efba:	(bad)  
   14000efbb:	movabs eax,ds:0x97a24e2bb80a26bb
   14000efc4:	fbld   TBYTE PTR [rbx+0x2b2b9eb4]
   14000efca:	push   rcx
   14000efcc:	(bad)  
   14000efcd:	mov    ?,WORD PTR [rbp-0x726a653]
   14000efd3:	fcmovne st,st(5)
   14000efd5:	loop   0x14000f051
   14000efd7:	jmp    0x14e555166
   14000efdc:	xrelease mov BYTE PTR [rdx+0x84feeb1],ch
   14000efe3:	call   0xc691ba54
   14000efe8:	rol    esi,0x11
   14000efeb:	(bad)  
   14000efec:	es mov al,0x7b
   14000efef:	stc    
   14000eff0:	add    ch,BYTE PTR [rbx]
   14000eff2:	(bad)  
   14000eff3:	pop    rdi
   14000eff4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000eff5:	mov    eax,0xd4c2097e
   14000effa:	rex mov ebx,0xda17a888
   14000f000:	add    edi,edi
   14000f002:	cmp    ah,ch
   14000f004:	mov    edi,0xc1d7fddc
   14000f009:	add    edx,ebx
   14000f00b:	xor    al,0xa0
   14000f00d:	pop    rbp
   14000f00e:	mov    ebx,0x1028b2f
   14000f013:	and    al,0x58
   14000f015:	sub    DWORD PTR [rax-0x25],edx
   14000f018:	imul   eax,eax,0x9ec78f29
   14000f01e:	xchg   ebx,eax
   14000f01f:	rex.WRX adc BYTE PTR [rax+0x24e280ca],0xf2
   14000f027:	xchg   DWORD PTR [rax+rcx*4],ebx
   14000f02a:	jae    0x14000efb4
   14000f02c:	ja     0x14000f064
   14000f02e:	jns    0x14000efc8
   14000f030:	fcomp  QWORD PTR [rsi]
   14000f032:	pushf  
   14000f033:	pop    rbp
   14000f035:	sub    dh,al
   14000f037:	sub    ah,BYTE PTR [rsi+0x74]
   14000f03a:	sub    al,0x9a
   14000f03c:	adc    DWORD PTR [rax+0x5d],esp
   14000f03f:	data16 lahf 
   14000f041:	mov    al,0x99
   14000f043:	xor    DWORD PTR [rdi+0xd],0x37a027
   14000f04a:	imul   DWORD PTR [rsi+0x1e562f24]
   14000f050:	ds mov edx,0xdb5bbf79
   14000f056:	cld    
   14000f057:	cmp    edx,DWORD PTR [rbx-0x5164bc5b]
   14000f05d:	sbb    al,0x76
   14000f05f:	pop    rax
   14000f060:	cmp    BYTE PTR [rcx-0x5ce5581c],dh
   14000f066:	sbb    BYTE PTR [rdx+0x1b],0xfc
   14000f06a:	in     al,0x26
   14000f06c:	add    DWORD PTR [rbp+0x4b0b8615],0xffffffdc
   14000f073:	fcomp  st(3)
   14000f075:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f076:	mov    eax,0x178b02f0
   14000f07b:	iret   
   14000f07c:	and    BYTE PTR [rbx-0x4f],bh
   14000f07f:	jmp    0x14000f0d0
   14000f081:	int    0x68
   14000f083:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f084:	(bad)  
   14000f085:	pop    rcx
   14000f086:	cmp    edi,ecx
   14000f088:	xchg   DWORD PTR [rdi+rdx*2-0x7113d6f5],ebx
   14000f08f:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f091:	cs mov ebp,0xa9700954
   14000f097:	fs xchg edi,eax
   14000f099:	fstp   TBYTE PTR [rsi-0x13]
   14000f09c:	push   rdi
   14000f09d:	add    BYTE PTR [rsi+0x1],ah
   14000f0a0:	(bad)  
   14000f0a1:	out    0xdb,al
   14000f0a3:	and    ebx,0xffa724db
   14000f0a9:	fstp   QWORD PTR [rcx]
   14000f0ab:	and    DWORD PTR [rax+0x4f],esp
   14000f0ae:	rex.WX add al,0x2
   14000f0b1:	(bad)  
   14000f0b2:	adc    DWORD PTR [rdx+rbx*8-0x76a9017a],0x9a871d48
   14000f0bd:	mov    bh,0xd4
   14000f0bf:	out    dx,al
   14000f0c0:	cmp    BYTE PTR [rbp-0x295e3e1],cl
   14000f0c6:	(bad)  
   14000f0c7:	(bad)  
   14000f0c8:	sub    ah,BYTE PTR [rdi+0x4a2ee11f]
   14000f0ce:	add    edi,DWORD PTR [rdx+0x3]
   14000f0d1:	jo     0x14000f082
   14000f0d3:	leave  
   14000f0d4:	add    esp,eax
   14000f0d6:	mov    edi,0x78d1caac
   14000f0db:	jae    0x14000f0d0
   14000f0dd:	outs   dx,DWORD PTR ds:[rsi]
   14000f0de:	rex.WRX xchg rdi,rax
   14000f0e0:	(bad)  
   14000f0e2:	jmp    0xcae0fc6d
   14000f0e7:	in     al,dx
   14000f0e8:	pop    rbp
   14000f0e9:	movabs ds:0x434206877c9887f2,eax
   14000f0f2:	push   rbp
   14000f0f3:	sbb    QWORD PTR [r12+r11*1+0x21],r13
   14000f0f8:	mov    BYTE PTR [rbx-0x19],ah
   14000f0fb:	rol    BYTE PTR [rip+0xffffffff9d7fced6],cl        # 0xdd80bfd7
   14000f101:	(bad)  
   14000f102:	(bad)  
   14000f103:	(bad)  
   14000f104:	ror    BYTE PTR [rsi+riz*8-0x16],cl
   14000f108:	(bad)  
   14000f109:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f10a:	rex.W pushf 
   14000f10c:	stc    
   14000f10d:	lahf   
   14000f10e:	out    0xfe,eax
   14000f110:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f111:	mov    dl,0x5a
   14000f113:	rex.RXB (bad) 
   14000f115:	mov    ebx,0xfd2a4151
   14000f11a:	fsincos 
   14000f11c:	mov    esp,0xd7ba3693
   14000f121:	fcom   DWORD PTR [rcx+0x2c]
   14000f124:	add    DWORD PTR [rsp+rax*8],esp
   14000f127:	xor    al,0x20
   14000f129:	(bad)  
   14000f12a:	jae    0x14000f15a
   14000f12c:	sbb    al,BYTE PTR [rbx]
   14000f12e:	lea    esp,[rax+riz*4+0x7692b8a4]
   14000f135:	xchg   edx,eax
   14000f136:	sub    eax,DWORD PTR [rcx]
   14000f138:	leave  
   14000f139:	(bad)
   14000f13c:	(bad)  
   14000f13d:	movabs ds:0xc8931171080f2c6,eax
   14000f146:	sub    BYTE PTR [rdx+0x5a],ch
   14000f149:	xor    r13d,DWORD PTR ds:[rax+0x69]
   14000f14e:	lods   eax,DWORD PTR ds:[rsi]
   14000f14f:	ret    0xc7e3
   14000f152:	fyl2xp1 
   14000f154:	and    al,0x77
   14000f156:	sar    DWORD PTR [rax+rax*8+0x4bdc00de],1
   14000f15d:	jb     0x14000f16a
   14000f15f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f160:	(bad)  
   14000f162:	outs   dx,DWORD PTR ds:[rsi]
   14000f163:	js     0x14000f155
   14000f165:	not    DWORD PTR [edi-0xe7982f1]
   14000f16c:	or     ch,dl
   14000f16e:	push   rdx
   14000f16f:	test   DWORD PTR [rsp+rsi*8-0x4],0x343e034e
   14000f177:	mov    eax,0xdc5010d0
   14000f17c:	je     0x14000f10d
   14000f17e:	push   rcx
   14000f17f:	pop    rcx
   14000f180:	xor    BYTE PTR [rax-0x27],bl
   14000f183:	loopne 0x14000f16b
   14000f185:	fs add bl,bl
   14000f188:	(bad)  
   14000f189:	mov    dl,0xbc
   14000f18b:	jge    0x14000f193
   14000f18d:	mov    bh,0x7b
   14000f18f:	lea    esp,[rax+0x6e154c75]
   14000f195:	push   rcx
   14000f196:	cli    
   14000f197:	mov    esp,ebp
   14000f199:	mov    edx,0xfbd660a4
   14000f19e:	rex.WRXB and r12b,r8b
   14000f1a1:	je     0x14000f18a
   14000f1a3:	add    BYTE PTR [rbx+rbp*8-0x164bdfe],dh
   14000f1aa:	addr32 cmp eax,0xaa4d020b
   14000f1b0:	add    al,0xa4
   14000f1b2:	jbe    0x14000f214
   14000f1b4:	add    ecx,DWORD PTR [rax]
   14000f1b6:	xchg   ebp,eax
   14000f1b7:	mov    BYTE PTR [rdi],cl
   14000f1b9:	pop    rax
   14000f1ba:	retf   0xfe42
   14000f1bd:	cwde   
   14000f1be:	in     al,0xc5
   14000f1c0:	test   ch,al
   14000f1c2:	rex.WB
   14000f1c3:	rex.WRX or rax,r14
   14000f1c6:	or     DWORD PTR [rdi+0x48],ebp
   14000f1c9:	mov    ecx,0x63e05abf
   14000f1ce:	mov    eax,0xd7127c47
   14000f1d3:	imul   edi,DWORD PTR [rdx+rdx*1],0x7d985611
   14000f1da:	out    0x1,al
   14000f1dc:	test   BYTE PTR [rsi-0x5fb9da24],0x37
   14000f1e3:	add    bh,dh
   14000f1e5:	mov    bh,BYTE PTR [rdx+rdx*1+0x7c1f2ff1]
   14000f1ec:	jrcxz  0x14000f1b1
   14000f1ee:	(bad)  
   14000f1ef:	xor    BYTE PTR [rbx+0x39],bl
   14000f1f2:	hlt    
   14000f1f3:	xchg   ebx,eax
   14000f1f4:	mov    edx,0xe8f88ab0
   14000f1f9:	stc    
   14000f1fa:	push   rbp
   14000f1fb:	xchg   ebp,eax
   14000f1fc:	es xor al,0x88
   14000f1ff:	(bad)  
   14000f200:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f201:	imul   edx,eax,0x8109a1a6
   14000f207:	adc    BYTE PTR [rdx],al
   14000f209:	(bad)  
   14000f20a:	dec    BYTE PTR [rsi]
   14000f20c:	ret    
   14000f20d:	mov    ch,0x43
   14000f20f:	cmp    BYTE PTR [rdi+0x72],bl
   14000f212:	jrcxz  0x14000f1de
   14000f214:	and    eax,0xa49c2e56
   14000f219:	mov    edx,0xfb660172
   14000f21e:	and    ch,0xd2
   14000f221:	or     al,BYTE PTR [rip+0xffffffffd37fa162]        # 0x113809389
   14000f227:	xchg   esi,eax
   14000f228:	stc    
   14000f229:	ins    BYTE PTR es:[rdi],dx
   14000f22a:	fldcw  WORD PTR [rdi-0x59]
   14000f22d:	ins    DWORD PTR es:[rdi],dx
   14000f22e:	clc    
   14000f22f:	(bad)  
   14000f230:	cmp    esi,edi
   14000f232:	movabs ds:0xe5da42a5cce567d2,al
   14000f23b:	(bad)  
   14000f23c:	push   rcx
   14000f23d:	push   rbx
   14000f23e:	(bad)  
   14000f23f:	sbb    BYTE PTR [rip+0xffffffff83440750],al        # 0xc344f995
   14000f245:	jmp    0x122eb12f4
   14000f24a:	jo     0x14000f25b
   14000f24c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f24d:	adc    DWORD PTR [rbx],ebp
   14000f24f:	push   rax
   14000f250:	repnz rcl BYTE PTR [rax+0x658801c8],1
   14000f257:	mov    r13b,0x4e
   14000f25a:	(bad)  
   14000f25b:	jno    0x14000f23d
   14000f25d:	mov    al,BYTE PTR [rdx+rsi*8-0x353c4b39]
   14000f264:	jge    0x14000f293
   14000f266:	rex.WRXB add QWORD PTR [r11+0x27],r9
   14000f26a:	push   0x1500cb69
   14000f26f:	loope  0x14000f21a
   14000f271:	lahf   
   14000f272:	in     al,0x85
   14000f274:	mov    bh,0xd1
   14000f276:	pop    rbp
   14000f277:	cmp    esp,eax
   14000f279:	(bad)  
   14000f27a:	rex.WRX add r15,QWORD PTR [rdx+0x3]
   14000f27e:	jo     0x14000f2af
   14000f280:	enter  0xca2d,0x7d
   14000f284:	(bad)  
   14000f286:	jl     0x14000f267
   14000f288:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f289:	jmp    0x14000f220
   14000f28b:	int    0xbf
   14000f28d:	pop    rdx
   14000f28e:	(bad)  
   14000f28f:	lods   al,BYTE PTR ds:[rsi]
   14000f290:	jns    0x14000f2e9
   14000f292:	or     al,0x50
   14000f294:	jno    0x14000f2cc
   14000f296:	adc    al,0xc3
   14000f298:	cmp    al,0x7e
   14000f29a:	push   rbx
   14000f29b:	xor    ecx,DWORD PTR [rbx]
   14000f29d:	xor    eax,0xd406960d
   14000f2a2:	adc    eax,esi
   14000f2a4:	add    ah,ch
   14000f2a6:	ficom  DWORD PTR [rcx]
   14000f2a8:	mul    BYTE PTR [rsi+0x33]
   14000f2ab:	(bad)  
   14000f2ac:	mov    ebp,DWORD PTR [rdi]
   14000f2ae:	mov    dl,0xb6
   14000f2b0:	jne    0x14000f2cc
   14000f2b2:	mov    edi,0x66108573
   14000f2b7:	sbb    DWORD PTR [rcx],esi
   14000f2b9:	ja     0x14000f243
   14000f2bb:	sbb    DWORD PTR [rax+0x2e812310],eax
   14000f2c1:	out    0x3e,eax
   14000f2c3:	push   rdi
   14000f2c4:	add    al,cl
   14000f2c6:	or     eax,0x814ace40
   14000f2cb:	fidiv  WORD PTR [rdi-0x2ad14353]
   14000f2d1:	repz add dl,BYTE PTR [rcx+0x1512a3e8]
   14000f2d8:	cmp    al,BYTE PTR [rax]
   14000f2da:	test   eax,0x21141814
   14000f2df:	add    BYTE PTR [rcx],ch
   14000f2e1:	push   rbx
   14000f2e2:	(bad)  
   14000f2e3:	pop    rax
   14000f2e4:	add    eax,0x7021
   14000f2e9:	enter  0x8d51,0x66
   14000f2ed:	rex.WX mov al,0xe4
   14000f2f0:	push   rcx
   14000f2f1:	movsxd edx,DWORD PTR [rcx-0x7]
   14000f2f4:	xor    esp,DWORD PTR [rip+0x16c1b490]        # 0x156c2a78a
   14000f2fa:	(bad)  
   14000f2fb:	mov    bl,bh
   14000f2fd:	add    ah,BYTE PTR [rdx+0x34]
   14000f300:	and    BYTE PTR [rdx],dh
   14000f302:	cmp    al,cl
   14000f304:	fidiv  WORD PTR [rbx-0x24]
   14000f307:	and    eax,0x37b4343
   14000f30c:	jo     0x14000f2c5
   14000f30e:	retf   
   14000f30f:	sub    eax,0xf23ff3c
   14000f314:	(bad)  
   14000f315:	stc    
   14000f316:	push   0xffffffffabfc3b58
   14000f31b:	mov    bl,0x85
   14000f31d:	cmc    
   14000f31e:	add    eax,0x63510d57
   14000f323:	cli    
   14000f324:	mov    DWORD PTR [rsi],eax
   14000f326:	mov    ah,0x89
   14000f328:	mov    ch,0x7e
   14000f32a:	(bad)  
   14000f32b:	call   0xff895095
   14000f330:	stos   DWORD PTR es:[rdi],eax
   14000f331:	mov    ebp,0x1b2b061d
   14000f336:	adc    al,0xc3
   14000f338:	adc    edi,edx
   14000f33a:	scas   eax,DWORD PTR es:[rdi]
   14000f33b:	pop    rdi
   14000f33c:	(bad)  
   14000f33d:	icebp  
   14000f33e:	loop   0x14000f369
   14000f340:	(bad)  
   14000f341:	xchg   edi,eax
   14000f342:	iret   
   14000f343:	rex.RB out dx,eax
   14000f345:	(bad)  
   14000f346:	push   0xfffffffffffffff9
   14000f348:	jb     0x14000f364
   14000f34a:	stc    
   14000f34b:	add    eax,0xba53793e
   14000f350:	rex.W jp 0x14000f30a
   14000f353:	cld    
   14000f354:	xchg   edi,eax
   14000f355:	adc    BYTE PTR [rcx+rcx*8-0x7c],bh
   14000f359:	and    BYTE PTR [rdi],ch
   14000f35b:	(bad)  
   14000f35c:	mov    BYTE PTR [rbx-0x21bdbf2f],cl
   14000f362:	(bad)  
   14000f363:	sar    dh,1
   14000f365:	(bad)  
   14000f366:	int    0x3f
   14000f368:	and    DWORD PTR [rdx],edx
   14000f36a:	(bad)  
   14000f36b:	pushf  
   14000f36c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f36d:	push   0xffffffffe4fe7a21
   14000f372:	mov    cl,0x45
   14000f374:	xor    DWORD PTR [rbp+0xebbcfb5],eax
   14000f37a:	clc    
   14000f37b:	mov    bl,BYTE PTR [edi+0x1a5c04fa]
   14000f382:	cmp    ah,dl
   14000f384:	pop    rsi
   14000f385:	fst    DWORD PTR [rip+0xffffffffa6998c98]        # 0xe69a8023
   14000f38b:	mov    es,ecx
   14000f38d:	xchg   esp,eax
   14000f38e:	sub    ch,BYTE PTR [rax-0x580ad74e]
   14000f394:	(bad)  
   14000f395:	retf   0x12f6
   14000f398:	ja     0x14000f39b
   14000f39a:	xor    eax,0x770037b8
   14000f39f:	mov    bl,0x1c
   14000f3a1:	push   0x37aa05ed
   14000f3a6:	sahf   
   14000f3a7:	cmp    ah,dh
   14000f3a9:	fldenv [rsi-0x3]
   14000f3ac:	call   0x15f2fe160
   14000f3b1:	fidiv  WORD PTR [rax-0x2b]
   14000f3b4:	or     BYTE PTR [rcx],dl
   14000f3b6:	(bad)  
   14000f3b7:	adc    eax,0x535c0427
   14000f3bc:	adc    eax,DWORD PTR [rdx+0x43]
   14000f3bf:	rex.W test BYTE PTR [rdi],bl
   14000f3c2:	sti    
   14000f3c3:	or     DWORD PTR [rbp-0x33],esi
   14000f3c6:	cmp    BYTE PTR [rcx+rbp*1+0x37],cl
   14000f3ca:	mov    ?,WORD PTR [rcx]
   14000f3cc:	popf   
   14000f3cd:	(bad)  
   14000f3ce:	rex.WR mov dil,0x5e
   14000f3d1:	(bad)  
   14000f3d2:	cmc    
   14000f3d3:	ret    0x8a69
   14000f3d6:	popf   
   14000f3d7:	sub    ebp,DWORD PTR [rax-0x68]
   14000f3da:	mov    ch,0xb5
   14000f3dc:	cld    
   14000f3dd:	adc    al,0xfe
   14000f3df:	movsxd edi,DWORD PTR [rbp-0x1]
   14000f3e2:	je     0x14000f3ae
   14000f3e4:	imul   ecx,ecx,0xfffffff3
   14000f3e7:	shl    DWORD PTR [rsi-0x7dec5200],cl
   14000f3ed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f3ee:	mov    al,0x3f
   14000f3f0:	std    
   14000f3f1:	(bad)  
   14000f3f2:	iret   
   14000f3f3:	gs and al,0xde
   14000f3f6:	retf   0x91fb
   14000f3f9:	or     eax,DWORD PTR [rax]
   14000f3fb:	(bad)  
   14000f3fc:	rex.WRB xor al,0x6
   14000f3ff:	movabs ds:0x6400386a0806f5a4,al
   14000f408:	sub    al,0x5f
   14000f40a:	and    al,0x56
   14000f40c:	add    BYTE PTR [rdi+riz*8-0x16],ch
   14000f410:	(bad)  
   14000f411:	pop    QWORD PTR [rax-0x345f48a8]
   14000f417:	and    eax,0x951c949
   14000f41c:	leave  
   14000f41d:	and    BYTE PTR [rdx-0x5a],al
   14000f420:	adc    al,0x58
   14000f422:	xchg   esi,eax
   14000f423:	add    BYTE PTR [rax],0x15
   14000f426:	int    0x9b
   14000f428:	mov    esi,0x34a42e4b
   14000f42d:	loopne 0x14000f3bd
   14000f42f:	scas   al,BYTE PTR es:[rdi]
   14000f430:	(bad)  
   14000f431:	adc    al,0xb7
   14000f433:	sti    
   14000f434:	add    BYTE PTR [rdx+0x79],bh
   14000f437:	or     eax,0xfe7595e4
   14000f43c:	add    ch,BYTE PTR [rax]
   14000f43e:	fcomip st,st(4)
   14000f440:	loopne 0x14000f3e3
   14000f442:	(bad)  
   14000f443:	ficomp DWORD PTR [rdi+0x39]
   14000f446:	cld    
   14000f447:	push   rdi
   14000f448:	ja     0x14000f3e1
   14000f44a:	jg     0x1b9c329cc
   14000f450:	outs   dx,DWORD PTR ds:[rsi]
   14000f451:	xor    al,0xdf
   14000f453:	add    BYTE PTR [rsi+rax*4-0x247bb260],0x43
   14000f45b:	rex
   14000f45c:	rex.X
   14000f45d:	rex push rcx
   14000f45f:	data16 or ch,dl
   14000f462:	fs xchg ecx,esp
   14000f465:	js     0x14000f3f0
   14000f467:	jb     0x14000f4da
   14000f469:	cdq    
   14000f46a:	in     eax,dx
   14000f46b:	sub    edx,DWORD PTR [rdi+0x18]
   14000f46e:	outs   dx,DWORD PTR ds:[rsi]
   14000f46f:	mov    ebp,0x97a5c2c0
   14000f474:	(bad)  
   14000f475:	(bad)  
   14000f476:	lods   eax,DWORD PTR ds:[rsi]
   14000f477:	cmc    
   14000f478:	xlat   BYTE PTR ds:[rbx]
   14000f479:	push   rdx
   14000f47a:	jg     0x14000f45f
   14000f47c:	loopne 0x14000f40d
   14000f47e:	and    BYTE PTR [rbx],0x32
   14000f481:	lock push rdx
   14000f483:	mov    bh,0x5f
   14000f485:	and    bl,al
   14000f487:	mov    ah,0xbd
   14000f489:	add    BYTE PTR [rdx-0x618b7e73],dl
   14000f48f:	(bad)  
   14000f490:	pop    rsp
   14000f491:	cmp    ebx,DWORD PTR [rsp+rax*1]
   14000f494:	jrcxz  0x14000f4b6
   14000f496:	rex.RX xchg esp,eax
   14000f498:	(bad)  
   14000f499:	(bad)  
   14000f49a:	and    esp,DWORD PTR [rcx+rdx*2+0x1d5c1a8]
   14000f4a1:	sub    eax,0x15107a63
   14000f4a6:	(bad)  
   14000f4a7:	pop    rax
   14000f4a8:	jl     0x14000f437
   14000f4aa:	push   rbp
   14000f4ab:	or     BYTE PTR [rdx-0x49dd7cb3],bh
   14000f4b1:	mov    dh,0xa0
   14000f4b3:	in     eax,dx
   14000f4b4:	fild   DWORD PTR [rbx-0x563fcb5a]
   14000f4ba:	lods   eax,DWORD PTR ds:[rsi]
   14000f4bb:	cmp    edx,DWORD PTR [rax]
   14000f4bd:	adc    bl,BYTE PTR [rax+rcx*4-0x56f1bddd]
   14000f4c4:	fnstsw WORD PTR [rax]
   14000f4c6:	test   DWORD PTR [rdx],0x78508064
   14000f4cc:	sbb    ch,0xcf
   14000f4cf:	add    edi,edi
   14000f4d1:	mov    bh,BYTE PTR [rsi]
   14000f4d3:	add    ch,al
   14000f4d5:	in     eax,0x75
   14000f4d7:	and    eax,0x1f860b7
   14000f4dc:	(bad)  
   14000f4dd:	xor    eax,edi
   14000f4df:	push   rdi
   14000f4e0:	jmp    rdx
   14000f4e2:	(bad)  
   14000f4e3:	(bad)  
   14000f4e4:	loope  0x14000f4a5
   14000f4e6:	jns    0x14000f55b
   14000f4e8:	cmc    
   14000f4e9:	enter  0x648,0x63
   14000f4ed:	pushf  
   14000f4ee:	repz add al,0x8d
   14000f4f1:	(bad)  
   14000f4f2:	jg     0x14000f4fc
   14000f4f4:	or     eax,0xafcf468d
   14000f4f9:	rex.WRB
   14000f4fa:	shl    DWORD PTR [r12+r14*1],cl
   14000f4fe:	movabs eax,ds:0x7dd30b0d340d3421
   14000f507:	retf   0x63cd
   14000f50a:	(bad)  
   14000f50b:	rex.B cdq 
   14000f50d:	pop    rsp
   14000f50e:	ds (bad) 
   14000f510:	(bad)  
   14000f511:	(bad)  
   14000f512:	sub    esp,edi
   14000f514:	mov    ch,0xd8
   14000f516:	repz (bad) 
   14000f518:	mov    ah,0x4a
   14000f51a:	cmp    bh,ah
   14000f51c:	std    
   14000f51d:	and    eax,0xea4b7f29
   14000f522:	leave  
   14000f523:	sub    DWORD PTR [rax+0x17],eax
   14000f526:	xchg   ebp,eax
   14000f527:	mov    bh,0xa
   14000f529:	and    al,BYTE PTR [rbx]
   14000f52c:	test   eax,0xb6e7afb6
   14000f531:	call   QWORD PTR [rdi+rdi*8-0x7d7ff5a5]
   14000f538:	(bad)  
   14000f539:	add    DWORD PTR [rcx-0x7d2f0ce5],ebp
   14000f53f:	rol    DWORD PTR [rax+0x451b406b],cl
   14000f545:	rex.XB lods al,BYTE PTR ds:[rsi]
   14000f547:	add    al,0x24
   14000f549:	test   DWORD PTR [rsi],esi
   14000f54b:	jbe    0x14000f59c
   14000f54d:	mov    dh,0x42
   14000f54f:	cmp    edx,eax
   14000f551:	lock imul edi,DWORD PTR [rdi+0x730ebb92],0xcf3b6292
   14000f55c:	xor    eax,DWORD PTR [rcx*4+0x44649420]
   14000f563:	std    
   14000f564:	sub    DWORD PTR [rdi],0x3b836e70
   14000f56a:	mov    esp,0x801bd01a
   14000f56f:	mov    ebx,0xe6595e49
   14000f574:	stos   DWORD PTR es:[rdi],eax
   14000f575:	mov    cs,WORD PTR [rdi+0x1cb7d1dd]
   14000f57b:	pop    rdi
   14000f57c:	(bad)  
   14000f57d:	cmc    
   14000f57e:	popf   
   14000f57f:	cmc    
   14000f580:	sti    
   14000f581:	jle    0x14000f5ed
   14000f583:	outs   dx,DWORD PTR ds:[rsi]
   14000f584:	stc    
   14000f585:	mov    BYTE PTR [rbx-0x50],ah
   14000f588:	add    dl,ah
   14000f58a:	or     BYTE PTR [rdx],dl
   14000f58c:	xchg   ebp,eax
   14000f58d:	test   BYTE PTR es:[rdx],bl
   14000f590:	rex.X or eax,0x8ccd0d4d
   14000f596:	rcl    ah,1
   14000f598:	mov    eax,0x8d43e350
   14000f59d:	xlat   BYTE PTR ds:[rbx]
   14000f59e:	xchg   cl,dl
   14000f5a0:	xchg   DWORD PTR fs:[rdx+0x38],esi
   14000f5a4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f5a5:	pop    rax
   14000f5a6:	fucom  st(4)
   14000f5a8:	(bad)  
   14000f5a9:	out    dx,al
   14000f5aa:	cs (bad) 
   14000f5ac:	(bad)  
   14000f5ad:	imul   edx,DWORD PTR [rsi],0xf6465fb7
   14000f5b3:	ja     0x14000f59d
   14000f5b5:	mov    dh,0xe0
   14000f5b7:	(bad)  
   14000f5b8:	lock lahf 
   14000f5ba:	pop    rax
   14000f5bb:	cmp    cl,ah
   14000f5bd:	rex.WXB jle 0x14000f577
   14000f5c0:	cmp    dl,BYTE PTR [rbx+0x22b1ffb8]
   14000f5c6:	loopne 0x14000f5ae
   14000f5c8:	sub    al,al
   14000f5ca:	repz cmc 
   14000f5cc:	jmp    FWORD PTR [rsi+0x69]
   14000f5cf:	mov    cs,WORD PTR [rsi+0x62]
   14000f5d2:	bndldx (bad),[rbp+rax*1-0x6ff5d2fe]
   14000f5da:	mov    edx,0x30182681
   14000f5df:	sbb    BYTE PTR [rdx-0x69],dh
   14000f5e2:	(bad)  
   14000f5e3:	add    bl,BYTE PTR [rip+0xffffffffb6c3bcdb]        # 0xf6c4b2c4
   14000f5e9:	xchg   ebx,eax
   14000f5ea:	rex.X adc DWORD PTR [rcx],esp
   14000f5ed:	iret   
   14000f5ee:	or     al,0xec
   14000f5f0:	jb     0x14000f603
   14000f5f2:	cmp    r8b,BYTE PTR [rsi]
   14000f5f5:	and    esp,0xfffffff5
   14000f5f8:	movabs eax,ds:0x98fe1e10a0141a5b
   14000f601:	ins    BYTE PTR es:[rdi],dx
   14000f602:	mov    edi,0x700e2e93
   14000f607:	(bad)  
   14000f608:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f609:	add    DWORD PTR [rbp+0xa],edi
   14000f60c:	jo     0x14000f645
   14000f60e:	enter  0xc87c,0x9f
   14000f612:	cmp    eax,0xc5abe3ff
   14000f617:	xchg   ebx,eax
   14000f618:	ret    
   14000f619:	vmaxpd ymm7,ymm15,YMMWORD PTR [rcx+0x5dfc71be]
   14000f621:	(bad)  
   14000f622:	xchg   edi,eax
   14000f623:	mov    rbx,db0
   14000f626:	xor    DWORD PTR [rbp+0x774c7114],eax
   14000f62c:	or     ah,dl
   14000f62e:	and    DWORD PTR [rax],esp
   14000f630:	movabs eax,ds:0x2c750ca6a6bf416e
   14000f639:	add    DWORD PTR [rdx],ebp
   14000f63b:	xor    al,0x4e
   14000f63d:	sbb    ah,cl
   14000f63f:	neg    BYTE PTR [rax]
   14000f641:	sbb    al,0x7b
   14000f643:	and    eax,DWORD PTR [rcx]
   14000f645:	(bad)  
   14000f646:	out    dx,al
   14000f647:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f648:	repz sbb al,0xde
   14000f64b:	cmp    cl,BYTE PTR [rcx+0x79]
   14000f64e:	in     eax,dx
   14000f64f:	and    dh,BYTE PTR [rbx+rdx*1]
   14000f652:	xor    BYTE PTR [rsi+rbx*2],dl
   14000f655:	push   rsp
   14000f656:	sub    DWORD PTR [rsi+rcx*1],esp
   14000f659:	(bad)  
   14000f65a:	lock movabs ds:0x8c4476af275ccb6d,al
   14000f664:	and    BYTE PTR [rcx+0x5824bcf6],bh
   14000f66a:	mov    dl,BYTE PTR [rax]
   14000f66c:	and    r11b,BYTE PTR [rax+0x1401c1d7]
   14000f673:	(bad)  
   14000f674:	sahf   
   14000f675:	scas   eax,DWORD PTR es:[rdi]
   14000f676:	push   rcx
   14000f677:	stc    
   14000f678:	and    eax,0x2140a560
   14000f67d:	add    al,0x45
   14000f67f:	(bad)  
   14000f680:	push   0xffffffff93319268
   14000f685:	rex.RX rcl DWORD PTR [rax],1
   14000f688:	movabs ds:0x8f62f2e5b07ab884,eax
   14000f691:	push   rbx
   14000f692:	xchg   edi,eax
   14000f693:	movabs al,ds:0x52da02fac5070317
   14000f69c:	gs and cl,BYTE PTR cs:[rax-0x3e]
   14000f6a1:	adc    cl,al
   14000f6a3:	(bad)  
   14000f6a4:	ret    0x8d48
   14000f6a7:	(bad)  
   14000f6a8:	or     eax,0xfb28fe87
   14000f6ad:	lahf   
   14000f6ae:	add    al,0xfe
   14000f6b0:	and    eax,0xe53b330
   14000f6b5:	scas   eax,DWORD PTR es:[rdi]
   14000f6b6:	jmp    0x1881bf3b2
   14000f6bb:	(bad)  
   14000f6bc:	add    esp,ebx
   14000f6be:	jmp    0xff91c1b5
   14000f6c3:	add    BYTE PTR [rsi],al
   14000f6c5:	outs   dx,DWORD PTR ds:[rsi]
   14000f6c6:	pop    rsi
   14000f6c7:	jne    0x14000f668
   14000f6c9:	(bad)  
   14000f6ca:	lods   al,BYTE PTR ds:[rsi]
   14000f6cb:	lods   al,BYTE PTR ds:[rsi]
   14000f6cc:	std    
   14000f6cd:	xchg   ebx,eax
   14000f6ce:	stos   DWORD PTR es:[rdi],eax
   14000f6cf:	fwait
   14000f6d0:	(bad)  
   14000f6d1:	fidiv  WORD PTR [rbp+0x6047cb7]
   14000f6d7:	mov    edi,DWORD PTR [rax]
   14000f6d9:	jecxz  0x14000f698
   14000f6dc:	rex.XB mov BYTE PTR [r13-0x2cbcaf02],sil
   14000f6e3:	(bad)  
   14000f6e4:	sub    BYTE PTR [rax+0x3334529e],ah
   14000f6ea:	jl     0x14000f71f
   14000f6ec:	rex.XB (bad) 
   14000f6ee:	sbb    dl,ch
   14000f6f0:	sbb    BYTE PTR [rdi+0x354184e],0x8a
   14000f6f7:	cmc    
   14000f6f8:	movabs ds:0x89b69e2fe2eeecec,eax
   14000f701:	(bad)  
   14000f702:	xlat   BYTE PTR ds:[rbx]
   14000f703:	push   rcx
   14000f704:	lods   eax,DWORD PTR ds:[rsi]
   14000f705:	xchg   r9,rax
   14000f707:	mov    dl,0x23
   14000f709:	mov    dh,0xfd
   14000f70b:	(bad)  
   14000f70c:	movabs ds:0xee5b3cb5c4d42378,al
   14000f715:	jg     0x14000f6b1
   14000f717:	(bad)  
   14000f718:	fwait
   14000f719:	xor    BYTE PTR [rsi+0x3675c7ae],dh
   14000f71f:	or     DWORD PTR [rax-0x32],edi
   14000f722:	imul   ecx,DWORD PTR [rbx-0x59],0x18672a
   14000f729:	sub    ch,BYTE PTR [rax+0x50]
   14000f72c:	pop    rsp
   14000f72d:	nop
   14000f72e:	clc    
   14000f72f:	mov    eax,0xf809a451
   14000f734:	push   rax
   14000f735:	jrcxz  0x14000f7a1
   14000f737:	sbb    r12d,DWORD PTR [r9]
   14000f73a:	test   DWORD PTR [rcx],0xe483ed29
   14000f740:	fldcw  WORD PTR [rcx-0x73]
   14000f743:	(bad)  
   14000f744:	cmp    BYTE PTR [rdi],dl
   14000f746:	lea    eax,[rax-0x3bd81d7]
   14000f74c:	mov    edx,0x1ded8578
   14000f751:	adc    DWORD PTR [rbx],esp
   14000f753:	adc    esp,DWORD PTR [rcx+0x29]
   14000f756:	test   ch,al
   14000f758:	add    eax,0xf73cda0b
   14000f75d:	sub    ecx,ebx
   14000f75f:	pop    rdx
   14000f760:	movabs eax,ds:0x770037a4c3b809cb
   14000f769:	stos   BYTE PTR es:[rdi],al
   14000f76a:	mov    esp,0x56e547fd
   14000f76f:	int3   
   14000f770:	mov    esi,0xbd2c22b5
   14000f775:	movsxd ebx,ebp
   14000f777:	(bad)  
   14000f778:	mov    ecx,0x1ff471b0
   14000f77d:	pop    rbp
   14000f77e:	fnstcw WORD PTR [rsi+rdi*2]
   14000f781:	(bad)
   14000f786:	pop    rax
   14000f787:	sar    BYTE PTR [rcx+0x5410a702],0xd1
   14000f78e:	rol    BYTE PTR [rax+0x33],1
   14000f791:	rex.XB
   14000f792:	fwait
   14000f793:	sbb    DWORD PTR [rcx+0x5367e199],esp
   14000f799:	jl     0x14000f7d8
   14000f79b:	test   ecx,ebx
   14000f79d:	adc    al,0x69
   14000f79f:	push   0x5c
   14000f7a1:	push   0x4e19a9a0
   14000f7a6:	outs   dx,BYTE PTR ds:[rsi]
   14000f7a7:	push   rdx
   14000f7a8:	ins    BYTE PTR es:[rdi],dx
   14000f7a9:	sbb    al,0x45
   14000f7ab:	jl     0x14000f76e
   14000f7ad:	(bad)  
   14000f7ae:	(bad)  
   14000f7af:	ins    DWORD PTR es:[rdi],dx
   14000f7b0:	xchg   esi,eax
   14000f7b1:	(bad)  
   14000f7b2:	pushf  
   14000f7b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f7b4:	mov    esp,0x7d9a117a
   14000f7b9:	and    BYTE PTR [rax-0x7ba146f8],dl
   14000f7bf:	rex.X ret 
   14000f7c1:	add    esp,esp
   14000f7c3:	lahf   
   14000f7c4:	mov    ecx,0x3b95eb1
   14000f7c9:	rcl    dl,1
   14000f7cb:	xor    ah,0x38
   14000f7ce:	or     eax,0x20e4c904
   14000f7d3:	sti    
   14000f7d4:	cmp    edx,DWORD PTR [rcx+0x20563b7a]
   14000f7da:	cli    
   14000f7db:	xlat   BYTE PTR ds:[rbx]
   14000f7dc:	sub    bh,BYTE PTR es:[rsi+0x5834820b]
   14000f7e3:	cmp    ah,al
   14000f7e5:	push   rax
   14000f7e6:	jne    0x14000f7b8
   14000f7e8:	test   BYTE PTR [rax],bh
   14000f7ea:	pop    sp
   14000f7ec:	and    eax,0xb3a40bd9
   14000f7f1:	sbb    BYTE PTR [rax+0x22],ah
   14000f7f4:	add    al,0x25
   14000f7f6:	cmp    BYTE PTR [rax],ah
   14000f7f8:	xor    DWORD PTR [rdx],eax
   14000f7fa:	movabs ds:0xd4c922390b114a11,eax
   14000f803:	loopne 0x14000f7b9
   14000f805:	jg     0x14000f7e1
   14000f807:	sub    al,0x42
   14000f809:	add    BYTE PTR [rdi],ch
   14000f80b:	jp     0x14000f809
   14000f80d:	mov    ebx,0xee41ff39
   14000f812:	loopne 0x14000f87e
   14000f814:	rex lahf 
   14000f816:	add    bl,ah
   14000f818:	mov    edx,edx
   14000f81a:	sub    bh,BYTE PTR [rsi-0x75aded30]
   14000f820:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f821:	stos   DWORD PTR es:[rdi],eax
   14000f822:	mov    ebp,0x4bcbc727
   14000f827:	mov    edi,0xfee36378
   14000f82c:	rex.WRXB pop r12
   14000f82e:	pop    rdi
   14000f82f:	ds int3 
   14000f831:	ins    BYTE PTR es:[rdi],dx
   14000f832:	mov    esp,0x7110e502
   14000f837:	rcr    DWORD PTR [rdi],1
   14000f839:	xlat   BYTE PTR ds:[rbx]
   14000f83a:	or     BYTE PTR [rbp+0xc],sil
   14000f83e:	sti    
   14000f83f:	fwait
   14000f840:	(bad)  
   14000f841:	imul   ebp,DWORD PTR [rdx-0x76],0x7e4b9a66
   14000f848:	adc    dl,BYTE PTR [rdx+0x6f]
   14000f84b:	cmp    eax,0x65940848
   14000f850:	rex.RB mov r9d,0x937b1f71
   14000f856:	or     DWORD PTR [rsi-0x15],ebp
   14000f859:	je     0x14000f85f
   14000f85b:	push   QWORD PTR [rsi-0x1e]
   14000f85e:	(bad)  
   14000f85f:	lahf   
   14000f860:	cwde   
   14000f861:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f862:	rex.RXB iret 
   14000f864:	fdivrp st(5),st
   14000f866:	(bad)  
   14000f867:	icebp  
   14000f868:	(bad)  
   14000f869:	jb     0x14000f85b
   14000f86b:	(bad)  
   14000f86c:	mov    r14b,0x21
   14000f86f:	mov    edi,0xeb6f63d
   14000f874:	movabs al,ds:0x77b1b49af3a4e195
   14000f87d:	add    al,0x5
   14000f87f:	or     eax,0x7058bf8
   14000f884:	mov    DWORD PTR [rbp-0x2],esi
   14000f887:	(bad)  
   14000f888:	call   0x13041e41a
   14000f88d:	cs push rsi
   14000f88f:	xor    dh,BYTE PTR [rdx]
   14000f891:	imul   ecx,DWORD PTR [rax-0x4f6ffbb2],0xe1784e84
   14000f89b:	mov    WORD PTR [rbp-0x18],es
   14000f89e:	shl    BYTE PTR [rcx-0x5c],cl
   14000f8a1:	pop    rsi
   14000f8a2:	or     BYTE PTR [rsi+0x4],0x20
   14000f8a6:	(bad)  
   14000f8a7:	sub    DWORD PTR [rdx],esp
   14000f8a9:	mov    esi,0x5212a8de
   14000f8ae:	xor    al,0xa0
   14000f8b0:	(bad)  
   14000f8b1:	and    esp,DWORD PTR [rax-0x60d99e36]
   14000f8b7:	add    bh,dh
   14000f8b9:	test   DWORD PTR [rbp+0x7],edi
   14000f8bc:	or     eax,0xd01a5877
   14000f8c1:	sbb    eax,DWORD PTR [rax-0x30a5bac5]
   14000f8c7:	jb     0x14000f8f9
   14000f8c9:	in     al,0xf7
   14000f8cb:	mov    edx,edx
   14000f8cd:	mov    WORD PTR [rsi+0x1abe4c1c],ds
   14000f8d3:	(bad)  
   14000f8d4:	ss jg  0x14000f8bd
   14000f8d7:	(bad)  
   14000f8d8:	cli    
   14000f8d9:	std    
   14000f8da:	rex.RXB outs dx,DWORD PTR ds:[rsi]
   14000f8dc:	sub    al,0x1e
   14000f8de:	and    cl,BYTE PTR [rdi+rdx*4+0x738857c0]
   14000f8e5:	xor    DWORD PTR [rcx],edi
   14000f8e7:	(bad)  
   14000f8e8:	fcom   DWORD PTR [rcx-0x1d]
   14000f8eb:	(bad)  
   14000f8ec:	sbb    ch,BYTE PTR [rbp+0x66]
   14000f8ef:	cdqe   
   14000f8f1:	loope  0x14000f959
   14000f8f3:	xor    esp,DWORD PTR [rsp+rdx*8]
   14000f8f6:	xor    DWORD PTR [rdi+0x56],edi
   14000f8f9:	(bad)
   14000f8fc:	rcl    DWORD PTR [rsp+rax*4+0x62],1
   14000f900:	mov    dh,0x4f
   14000f902:	jns    0x14000f8f0
   14000f904:	and    esp,ebx
   14000f906:	jo     0x14000f8d4
   14000f908:	lea    esi,[rbx+0x2f]
   14000f90b:	mov    cl,0x7a
   14000f90d:	icebp  
   14000f90e:	add    eax,0x43cf9786
   14000f913:	mov    ebp,0x45dd644b
   14000f918:	rex.RB mov r9b,0xa5
   14000f91b:	imul   DWORD PTR [rdi+rbp*8]
   14000f91e:	xlat   BYTE PTR ds:[rbx]
   14000f91f:	pop    rsp
   14000f920:	(bad)  
   14000f921:	rex.WXB
   14000f922:	rex.RXB sbb r9b,BYTE PTR [r15]
   14000f925:	mov    ah,0x83
   14000f927:	(bad)  
   14000f928:	shl    esi,cl
   14000f92a:	clc    
   14000f92b:	in     eax,dx
   14000f92c:	jrcxz  0x14000f944
   14000f92e:	add    al,0x9c
   14000f930:	(bad)  
   14000f931:	sbb    esi,ebx
   14000f933:	movabs ds:0x49964b175007007a,al
   14000f93c:	out    0x54,eax
   14000f93e:	and    cl,BYTE PTR [rdi-0x40]
   14000f941:	sub    al,BYTE PTR [rdi]
   14000f943:	xchg   ecx,eax
   14000f944:	jle    0x14000f9aa
   14000f946:	mov    ebp,0x40067301
   14000f94b:	or     al,0x14
   14000f94d:	(bad)  
   14000f94e:	sub    al,BYTE PTR [rcx]
   14000f950:	sbb    eax,0x6bbb4403
   14000f955:	(bad)  
   14000f956:	push   rsi
   14000f957:	jl     0x14000f909
   14000f959:	mov    ebx,DWORD PTR [rbp+0x307612aa]
   14000f95f:	or     BYTE PTR [rax],dh
   14000f961:	(bad)  
   14000f962:	cli    
   14000f963:	cmp    eax,0x1e2f2c3f
   14000f968:	stc    
   14000f969:	jne    0x14000f9e8
   14000f96b:	loopne 0x14000f9b9
   14000f96d:	out    0xc0,eax
   14000f96f:	sar    DWORD PTR [rbx+0x1bd2f75e],cl
   14000f975:	adc    bh,0xab
   14000f978:	int3   
   14000f979:	xchg   DWORD PTR [rdx+0x5df8f5d],edx
   14000f97f:	cli    
   14000f980:	mov    dh,BYTE PTR [rdi+0x1def3b96]
   14000f986:	mov    es,WORD PTR [rsi-0x2908581]
   14000f98c:	(bad)  
   14000f98d:	jae    0x14000f966
   14000f98f:	push   rsi
   14000f990:	mov    ?,WORD PTR [rcx+0x3346b0bf]
   14000f996:	pop    rsp
   14000f997:	(bad)  
   14000f998:	stc    
   14000f999:	xchg   edx,eax
   14000f99a:	rex.X sbb al,0x41
   14000f99d:	xchg   ebp,eax
   14000f99e:	xchg   BYTE PTR [rax-0x2a63b2f5],al
   14000f9a4:	push   rdi
   14000f9a5:	iret   
   14000f9a6:	sub    BYTE PTR [rdx+0x70ccd219],bl
   14000f9ac:	int    0x2c
   14000f9ae:	ss (bad) 
   14000f9b0:	push   0xffffffffe389ae6c
   14000f9b5:	mov    esi,0xe72b0ee3
   14000f9ba:	sub    BYTE PTR [rsi],dh
   14000f9bc:	(bad)  
   14000f9bd:	mov    bl,0x3f
   14000f9bf:	cdq    
   14000f9c0:	rcr    BYTE PTR [rsp+rdi*1-0x3d],1
   14000f9c4:	retf   0x69d6
   14000f9c7:	fmul   st(5),st
   14000f9c9:	imul   esi,DWORD PTR [rcx-0x19996f9e],0x29
   14000f9d0:	(bad)  
   14000f9d1:	(bad)  
   14000f9d2:	test   eax,0xf92d901d
   14000f9d7:	sbb    r9,QWORD PTR [r14+0x3b]
   14000f9db:	rex.WB sub al,0xbf
   14000f9de:	adc    al,BYTE PTR ss:[rax+0x665ce156]
   14000f9e5:	add    al,0xd2
   14000f9e7:	mov    DWORD PTR [rax],eax
   14000f9e9:	in     al,dx
   14000f9ea:	jge    0x14000f9b5
   14000f9ec:	and    BYTE PTR [rdi+rbp*4],ah
   14000f9ef:	outs   dx,DWORD PTR ds:[rsi]
   14000f9f0:	mov    edi,0x23338035
   14000f9f5:	movabs al,ds:0x73400c268ae7d922
   14000f9fe:	adc    al,0xa0
   14000fa00:	enter  0xd5fc,0x4b
   14000fa04:	rol    DWORD PTR [rbp-0x5659fe8b],1
   14000fa0a:	ror    esi,0xb0
   14000fa0d:	mov    BYTE PTR [rsi+0x22],al
   14000fa10:	retf   
   14000fa11:	push   rax
   14000fa12:	push   rbx
   14000fa13:	lods   al,BYTE PTR ds:[rsi]
   14000fa14:	(bad)  
   14000fa15:	rex.X mov ds,WORD PTR [rsi+0x1a]
   14000fa19:	cmp    esp,DWORD PTR [rdi+0x11]
   14000fa1c:	leave  
   14000fa1d:	movsxd edx,edx
   14000fa1f:	rex.WX loope 0x14000f9e3
   14000fa22:	ja     0x14000fa97
   14000fa24:	cmc    
   14000fa25:	fnstsw WORD PTR [rdi-0x1698fc32]
   14000fa2b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fa2c:	add    DWORD PTR [rdi-0x7b889407],edi
   14000fa32:	adc    eax,ebp
   14000fa34:	or     eax,0x6e4debc0
   14000fa39:	stos   DWORD PTR es:[rdi],eax
   14000fa3a:	mov    ?,WORD PTR [rbx+0x9]
   14000fa3d:	add    BYTE PTR [rax],al
   14000fa3f:	and    BYTE PTR [rax],al
   14000fa41:	rex.WB
   14000fa42:	rex.R
   14000fa43:	push   r12
   14000fa45:	in     eax,dx
   14000fa46:	jmp    0x140f08506
   14000fa4b:	push   QWORD PTR [rsi+0x47bbc6e2]
   14000fa51:	push   rbp
   14000fa52:	icebp  
   14000fa53:	xor    DWORD PTR [rbx-0x45a03c1b],0xffffffbe
   14000fa5a:	jp     0x14000fa04
   14000fa5c:	mov    edx,0x64c9b8b1
   14000fa61:	mov    ah,0x82
   14000fa63:	push   rsp
   14000fa64:	and    ebx,DWORD PTR [rdi+rbp*1+0x8bd44f0]
   14000fa6b:	sbb    al,BYTE PTR [rax+0x1b]
   14000fa6e:	rex.X cmp eax,0xaf834243
   14000fa74:	(bad)  
   14000fa75:	cmp    BYTE PTR [rbx-0x14],bh
   14000fa78:	rex.X or DWORD PTR [rbx],0xffffffb5
   14000fa7c:	xchg   ecx,eax
   14000fa7d:	push   0xffffffffca13af92
   14000fa82:	fld    DWORD PTR [rdi+rsi*2]
   14000fa85:	in     al,0x41
   14000fa87:	cld    
   14000fa88:	loop   0x14000fa9c
   14000fa8a:	push   rdi
   14000fa8b:	mov    dh,0x2e
   14000fa8d:	mov    al,0x7c
   14000fa8f:	icebp  
   14000fa90:	add    eax,0x22ce9786
   14000fa95:	rcr    DWORD PTR [rbx+0x26dec128],cl
   14000fa9b:	cmp    BYTE PTR [rdx+rax*1-0x4940454f],dl
   14000faa2:	mov    eax,esi
   14000faa4:	pushf  
   14000faa5:	(bad)  
   14000faa6:	outs   dx,DWORD PTR ds:[rsi]
   14000faa7:	jge    0x14000faa2
   14000faa9:	pushf  
   14000faaa:	xchg   edx,eax
   14000faab:	(bad)  
   14000faac:	cmp    al,0xc0
   14000faae:	cmp    ebx,eax
   14000fab0:	(bad)  
   14000fab1:	fiadd  DWORD PTR [rsi+0x1c]
   14000fab4:	sar    BYTE PTR [rdx+0x0],0x4c
   14000fab8:	jmp    0xf99af192
   14000fabd:	add    BYTE PTR [rcx+0x681ae02a],dh
   14000fac3:	(bad)  
   14000fac4:	sar    BYTE PTR [rbx+rcx*2],0x17
   14000fac8:	jl     0x14000fada
   14000faca:	rex.WXB add rax,0xffffffff972406c8
   14000fad0:	lock jae 0x14000fa9b
   14000fad3:	adc    DWORD PTR [rbx+0x7d],eax
   14000fad6:	adc    eax,0xe5c05c41
   14000fadb:	(bad)
   14000fade:	loopne 0x14000faf7
   14000fae0:	xor    dl,BYTE PTR [rbx-0x13405f28]
   14000fae6:	shl    BYTE PTR [rip+0xffffffff9e421f21],cl        # 0xde431a0d
   14000faec:	adc    esi,DWORD PTR [rax-0x68]
   14000faef:	leave  
   14000faf0:	(bad)  
   14000faf1:	mov    eax,0xde80d343
   14000faf6:	add    BYTE PTR [rsi+rbx*1-0xb56a1c],bh
   14000fafd:	or     al,BYTE PTR [rbp-0x41464781]
   14000fb03:	mov    dl,0xc9
   14000fb05:	in     al,0xd1
   14000fb07:	retf   0x77eb
   14000fb0a:	xor    BYTE PTR [rsi-0x8],bl
   14000fb0d:	js     0x14000fac2
   14000fb0f:	mov    eax,0xd2ceecf1
   14000fb14:	(bad)  
   14000fb15:	js     0x14000fb7e
   14000fb17:	(bad)  
   14000fb18:	(bad)  
   14000fb19:	std    
   14000fb1a:	ror    DWORD PTR [rdx],1
   14000fb1c:	mov    bl,0xd1
   14000fb1e:	adc    dl,BYTE PTR [rdx+0x54]
   14000fb21:	loopne 0x14000fb2d
   14000fb23:	or     edi,ecx
   14000fb25:	movabs ds:0x299a46a6d0684be2,eax
   14000fb2e:	mov    esi,0x37df9e8e
   14000fb33:	or     eax,0x7116612
   14000fb38:	mov    al,0xf0
   14000fb3a:	pop    rdi
   14000fb3b:	mov    ah,ch
   14000fb3d:	mov    ebp,0x4f3bc146
   14000fb42:	jne    0x14000fb28
   14000fb44:	add    DWORD PTR [rsi-0x3a26654d],esp
   14000fb4a:	xor    ebp,DWORD PTR [rsi+rbx*2-0x1c80fe88]
   14000fb51:	xor    bl,dl
   14000fb53:	int3   
   14000fb54:	mov    ch,ch
   14000fb56:	jbe    0x14000fb49
   14000fb58:	jo     0x14000fbd7
   14000fb5a:	retf   0x21fd
   14000fb5d:	xlat   BYTE PTR ds:[rbx]
   14000fb5e:	(bad)  
   14000fb5f:	rcr    esp,cl
   14000fb61:	jg     0x14000fb14
   14000fb63:	jl     0x14000fb3e
   14000fb65:	rol    DWORD PTR [rdx+0x7e79f37c],1
   14000fb6b:	rol    BYTE PTR [rdi-0x13],cl
   14000fb6e:	nop
   14000fb6f:	(bad)  
   14000fb70:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fb71:	xor    eax,0xd2c6d200
   14000fb76:	shl    DWORD PTR [rbx-0x32cfefb9],1
   14000fb7c:	add    eax,0x609489a0
   14000fb81:	xlat   BYTE PTR ds:[rbx]
   14000fb82:	(bad)  
   14000fb83:	movabs ds:0xf8d1a8380d224cb,eax
   14000fb8c:	mov    eax,DWORD PTR [rax]
   14000fb8e:	sub    BYTE PTR [rdi+0x70],0x75
   14000fb92:	and    esp,DWORD PTR [rip+0xffffffff81533a58]        # 0xc15435f0
   14000fb98:	shl    BYTE PTR [rcx+0x77],cl
   14000fb9b:	and    edx,DWORD PTR [rax+rcx*1+0x58fa677]
   14000fba2:	retf   
   14000fba3:	(bad)  
   14000fba4:	nop
   14000fba5:	fs add al,0x94
   14000fba8:	xchg   ecx,eax
   14000fba9:	(bad)  
   14000fbaa:	(bad)  
   14000fbab:	cli    
   14000fbac:	xchg   edx,eax
   14000fbad:	pushf  
   14000fbae:	(bad)  
   14000fbb0:	or     eax,0xb3ae763d
   14000fbb5:	xchg   DWORD PTR [rsi],edi
   14000fbb7:	add    ch,al
   14000fbb9:	in     eax,0x5b
   14000fbbb:	nop
   14000fbbc:	jns    0x14000fbfe
   14000fbbe:	scas   eax,DWORD PTR es:[rdi]
   14000fbbf:	sbb    ebx,esi
   14000fbc1:	sti    
   14000fbc2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000fbc3:	addr32 (bad) 
   14000fbc5:	rex.WRXB lods al,BYTE PTR ds:[rsi]
   14000fbc7:	xor    DWORD PTR [rbp-0x32],edi
   14000fbca:	movabs ds:0x785e337b78a295ef,eax
   14000fbd3:	je     0x14000fb87
   14000fbd5:	mov    eax,0xd69776ee
   14000fbda:	fstp   DWORD PTR [rdi+0x58]
   14000fbdd:	gs jg  0x14000fb98
   14000fbe0:	(bad)  
   14000fbe1:	ins    BYTE PTR es:[rdi],dx
   14000fbe2:	mov    eax,0x78472844
   14000fbe7:	pop    rdi
   14000fbe8:	loop   0x14000fc0f
   14000fbea:	mov    dh,0xdc
   14000fbec:	add    al,0x2
   14000fbee:	(bad)  
   14000fbf0:	hlt    
   14000fbf1:	sti    
   14000fbf2:	jp     0x14000fb76
   14000fbf4:	fwait
   14000fbf5:	rex.WRB movabs ds:0xfaf626d39f32b7c7,al
   14000fbff:	xchg   ebx,eax
   14000fc00:	cli    
   14000fc01:	jmp    0x14000fc66
   14000fc03:	add    esp,ebx
   14000fc05:	(bad)  
   14000fc06:	xor    eax,0xf8c3f0e1
   14000fc0b:	in     eax,0x35
   14000fc0d:	outs   dx,DWORD PTR cs:[rsi]
   14000fc0f:	outs   dx,DWORD PTR ds:[rsi]
   14000fc10:	mov    bl,0x70
   14000fc12:	icebp  
   14000fc13:	adc    al,0xe3
   14000fc15:	rex.WXB out 0x90,eax
   14000fc18:	leave  
   14000fc19:	pop    rsi
   14000fc1a:	hlt    
   14000fc1b:	(bad)  
   14000fc1c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fc1d:	rex.WR movabs ds:0x30b7c618d0afd3b1,al
   14000fc27:	js     0x14000fc74
   14000fc29:	in     eax,0xcd
   14000fc2b:	jp     0x14000fc04
   14000fc2d:	repnz test DWORD PTR [rdx],edi
   14000fc30:	retf   0xc9df
   14000fc33:	sti    
   14000fc34:	push   rbx
   14000fc35:	test   eax,0xbd77c4d0
   14000fc3a:	mov    ch,0x49
   14000fc3c:	retf   0x63bf
   14000fc3f:	mov    bl,0x8f
   14000fc41:	fs push rax
   14000fc43:	push   rax
   14000fc44:	test   BYTE PTR [rax+0x18],ch
   14000fc47:	push   rax
   14000fc48:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000fc49:	push   rbx
   14000fc4a:	(bad)  
   14000fc4b:	mov    esi,ds
   14000fc4d:	mov    ecx,0xad2ae1f5
   14000fc52:	sbb    eax,0x29d2bb50
   14000fc57:	or     al,al
   14000fc59:	xchg   DWORD PTR [rsp+rax*1-0x3c],ebp
   14000fc5d:	(bad)
   14000fc60:	out    dx,al
   14000fc61:	rex.WRX movabs ds:0xb52517749296092d,rax
   14000fc6b:	ja     0x14000fc75
   14000fc6d:	push   rax
   14000fc6e:	movabs al,ds:0x1c1bf83e17ae3f47
   14000fc77:	sti    
   14000fc78:	or     eax,0xa034b0ee
   14000fc7d:	(bad)  
   14000fc7e:	add    BYTE PTR [rdi-0x75291b5],dh
   14000fc84:	(bad)
   14000fc87:	xchg   BYTE PTR [rdi+0x18efddf8],cl
   14000fc8d:	int    0xf6
   14000fc8f:	mov    esi,0x61fa57df
   14000fc94:	lods   eax,DWORD PTR ds:[rsi]
   14000fc95:	(bad)  
   14000fc96:	out    dx,eax
   14000fc97:	fwait
   14000fc98:	(bad)  
   14000fc99:	(bad)  
   14000fc9a:	cwde   
   14000fc9b:	lea    edx,[rdi-0x4f50e027]
   14000fca1:	cmp    ebx,DWORD PTR [rdx+0x66]
   14000fca4:	xor    bl,BYTE PTR [rdx-0x5a]
   14000fca7:	(bad)  
   14000fca8:	mov    WORD PTR [rcx],cs
   14000fcaa:	in     eax,0x10
   14000fcac:	out    0x7,eax
   14000fcae:	js     0x14000fc9f
   14000fcb0:	jrcxz  0x14000fcff
   14000fcb2:	scas   al,BYTE PTR es:[rdi]
   14000fcb3:	add    DWORD PTR [rsi+0x2d],0x5c1a6fd7
   14000fcba:	cwde   
   14000fcbb:	loope  0x14000fca8
   14000fcbd:	sub    DWORD PTR [rdx],esi
   14000fcbf:	fwait
   14000fcc0:	(bad)  
   14000fcc1:	pop    rdx
   14000fcc2:	jns    0x14000fc6c
   14000fcc4:	jae    0x14000fcbe
   14000fcc6:	pop    rdi
   14000fcc7:	pop    rax
   14000fcc8:	fld    TBYTE PTR [rdi+0x439ecb68]
   14000fcce:	add    eax,ecx
   14000fcd0:	adc    eax,0x601e4794
   14000fcd5:	push   rsi
   14000fcd6:	(bad)  
   14000fcd7:	(bad)  
   14000fcd8:	xchg   edi,eax
   14000fcd9:	(bad)  
   14000fcda:	jb     0x14000fcc8
   14000fcdc:	ret    0x8a49
   14000fcdf:	jmp    0x14000fcbc
   14000fce1:	movabs al,ds:0x4a042b739b1a18d3
   14000fcea:	adc    eax,0xfd4b470a
   14000fcef:	adc    eax,0x451d1872
   14000fcf4:	out    0xf0,al
   14000fcf6:	xor    ah,0x74
   14000fcf9:	(bad)  
   14000fcfa:	add    BYTE PTR [rsi-0x74],ah
   14000fcfd:	out    0x1f,al
   14000fd00:	ja     0x14000fc97
   14000fd02:	push   rbp
   14000fd03:	xor    BYTE PTR [rbp-0x4a],ah
   14000fd06:	sar    BYTE PTR [rsi],1
   14000fd08:	xchg   edx,eax
   14000fd09:	jl     0x14000fcd3
   14000fd0b:	mov    bl,0x1
   14000fd0d:	and    bh,bh
   14000fd0f:	fild   WORD PTR [rsi-0x74]
   14000fd12:	sbb    BYTE PTR [rbx+0x30],dl
   14000fd15:	xchg   edx,eax
   14000fd16:	adc    DWORD PTR [rdx],0x81022021
   14000fd1c:	jmp    0x19001ef21
   14000fd21:	(bad)  
   14000fd22:	cdq    
   14000fd23:	sbb    BYTE PTR [rcx+riz*8-0x41],ah
   14000fd27:	retf   
   14000fd28:	out    0x80,eax
   14000fd2a:	sbb    eax,0x581de447
   14000fd2f:	push   rdi
   14000fd30:	xor    cl,BYTE PTR [rsi]
   14000fd32:	and    DWORD PTR [rax-0x63],ebx
   14000fd35:	rex.R rcr spl,cl
   14000fd38:	mov    cl,0xf8
   14000fd3a:	mov    edi,0xb9ecc43b
   14000fd3f:	mov    cl,0x36
   14000fd41:	(bad)  
   14000fd42:	jl     0x14000fd5b
   14000fd44:	jg     0x14000fd8d
   14000fd46:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000fd47:	add    DWORD PTR [rbp-0x348907ff],edi
   14000fd4d:	jl     0x14000fd07
   14000fd4f:	lahf   
   14000fd50:	mov    ebp,0x79bc503d
   14000fd55:	mov    ebp,0x3d42f4fc
   14000fd5a:	sti    
   14000fd5b:	xor    DWORD PTR [rdi],esp
   14000fd5d:	movabs ds:0xccc60fec8ac5348f,eax
   14000fd66:	(bad)  
   14000fd67:	movsxd esp,DWORD PTR [rsi+0x60c998d5]
   14000fd6d:	int3   
   14000fd6e:	je     0x14000fd20
   14000fd70:	cmp    rax,0x729a45c
   14000fd76:	js     0x14000fdcf
   14000fd78:	loopne 0x14000fdf6
   14000fd7a:	add    edx,esp
   14000fd7c:	(bad)  
   14000fd7d:	fldcw  WORD PTR [rax+rbp*1]
   14000fd80:	mov    ch,0x2a
   14000fd82:	test   BYTE PTR [rdx],bh
   14000fd84:	adc    bh,BYTE PTR [rcx-0x16]
   14000fd87:	test   al,0xfc
   14000fd89:	scas   al,BYTE PTR es:[rdi]
   14000fd8a:	sahf   
   14000fd8b:	loop   0x14000fdcf
   14000fd8d:	add    al,0xfc
   14000fd8f:	jl     0x14000fda4
   14000fd91:	jae    0x14000fd91
   14000fd93:	and    dl,ah
   14000fd95:	(bad)  
   14000fd96:	neg    DWORD PTR [rdi-0x47c9c06c]
   14000fd9c:	push   0xffffffffc7eb09a8
   14000fda1:	sbb    DWORD PTR [rsi],ebp
   14000fda3:	scas   eax,DWORD PTR es:[rdi]
   14000fda4:	mov    bl,0x7d
   14000fda6:	in     eax,dx
   14000fda7:	sub    cl,BYTE PTR [rbx]
   14000fda9:	pop    rbx
   14000fdaa:	pop    rdi
   14000fdab:	addr32 icebp 
   14000fdad:	loop   0x14000fdfa
   14000fdaf:	enter  0x4ede,0x5e
   14000fdb3:	in     al,dx
   14000fdb4:	and    esi,DWORD PTR [rcx]
   14000fdb6:	in     al,0xd2
   14000fdb8:	pop    rdx
   14000fdb9:	jg     0x14000fdd4
   14000fdbb:	cld    
   14000fdbc:	retf   
   14000fdbd:	retf   0xce3
   14000fdc0:	rex.WB (bad) 
   14000fdc2:	and    eax,0xefabc4be
   14000fdc7:	and    ch,ch
   14000fdc9:	faddp  st(5),st
   14000fdcb:	xchg   esi,eax
   14000fdcc:	fild   WORD PTR [rdx+rax*2-0x77]
   14000fdd0:	sahf   
   14000fdd1:	push   rdi
   14000fdd2:	repz (bad) 
   14000fdd4:	rex.WB jmp 0xc830a6ad
   14000fdda:	(bad)  
   14000fddb:	xor    eax,0x22443428
   14000fde0:	push   rax
   14000fde1:	push   rax
   14000fde2:	rex.X movsxd eax,esi
   14000fde5:	ret    
   14000fde6:	(bad)  
   14000fde7:	jno    0x14000fdf0
   14000fde9:	push   0x64
   14000fdeb:	movabs al,ds:0xd68deb4b45113a10
   14000fdf4:	test   al,0x6d
   14000fdf6:	out    dx,al
   14000fdf7:	leave  
   14000fdf8:	add    BYTE PTR [rax-0x4763fdab],ah
   14000fdfe:	js     0x14000fe1c
   14000fe00:	(bad)  
   14000fe01:	jne    0x14000fe1b
   14000fe03:	fcmovb st,st(1)
   14000fe05:	pop    rcx
   14000fe06:	clc    
   14000fe07:	adc    DWORD PTR [rbp+0x5f],ecx
   14000fe0a:	data16 sub BYTE PTR [rax+riz*1+0x10],ah
   14000fe0f:	(bad)  
   14000fe10:	rex.W
   14000fe11:	repz mov esi,0x87cbc8af
   14000fe17:	out    dx,eax
   14000fe18:	mov    ah,0x6a
   14000fe1a:	rex outs dx,DWORD PTR ds:[rsi]
   14000fe1c:	add    BYTE PTR [rsi-0x50b50d63],bh
   14000fe22:	pop    rdi
   14000fe23:	add    ch,al
   14000fe25:	icebp  
   14000fe26:	xchg   DWORD PTR [rdi-0x44],ecx
   14000fe29:	jge    0x14000fe80
   14000fe2b:	data16 jg 0x14000fe74
   14000fe2e:	xor    al,0x7c
   14000fe30:	(bad)  
   14000fe31:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000fe32:	fld    TBYTE PTR [rax]
   14000fe34:	push   0x5f
   14000fe36:	push   rcx
   14000fe37:	(bad)  
   14000fe38:	add    esp,DWORD PTR [rsi+0x55]
   14000fe3b:	rex.RB jrcxz 0x14000fe45
   14000fe3e:	int3   
   14000fe3f:	stos   BYTE PTR es:[rdi],al
   14000fe40:	adc    DWORD PTR [rcx+0x4031411a],esp
   14000fe46:	mov    dl,BYTE PTR [rdx]
   14000fe48:	(bad)  
   14000fe49:	jno    0x14000fdd4
   14000fe4b:	out    dx,al
   14000fe4c:	mov    eax,0x4da28e22
   14000fe51:	mov    bpl,0xb6
   14000fe54:	or     DWORD PTR [rsi],edi
   14000fe56:	rcr    DWORD PTR [rax-0x7d93019],cl
   14000fe5c:	mov    edx,0xae1987c6
   14000fe61:	mov    fs,ecx
   14000fe63:	mov    edi,0xad0a6a6f
   14000fe68:	jno    0x14000fe8b
   14000fe6a:	cwde   
   14000fe6b:	repnz rex.RXB (bad) 
   14000fe6e:	in     eax,0x0
   14000fe70:	(bad)  
   14000fe71:	shr    BYTE PTR [rax+rbx*1+0x423ff720],0xd
   14000fe79:	int3   
   14000fe7a:	cs popf 
   14000fe7c:	in     eax,0xc8
   14000fe7e:	test   DWORD PTR [rdi],edx
   14000fe80:	lock xlat BYTE PTR ds:[rbx]
   14000fe82:	(bad)  
   14000fe83:	movabs eax,ds:0xdcdfe04b06174261
   14000fe8c:	enter  0x316f,0x87
   14000fe90:	(bad)  
   14000fe91:	ret    0x7b7b
   14000fe94:	ja     0x14000fe4d
   14000fe96:	in     eax,dx
   14000fe97:	(bad)  
   14000fe98:	jns    0x14000fe93
   14000fe9a:	clc    
   14000fe9b:	cmp    al,0xb1
   14000fe9d:	(bad)  
   14000fe9e:	out    dx,eax
   14000fe9f:	and    eax,0x865ce33b
   14000fea4:	movabs ds:0x773e64b5b7b2168d,eax
   14000fead:	stc    
   14000feae:	sub    DWORD PTR [rcx+0x22e22022],edi
   14000feb4:	push   0x1f
   14000feb6:	mov    al,0xf4
   14000feb8:	loopne 0x14000fefa
   14000feba:	repnz (bad) 
   14000febc:	(bad)  
   14000febd:	mov    bh,0xdb
   14000febf:	jae    0x14000fef7
   14000fec1:	(bad)  
   14000fec2:	rcl    BYTE PTR [rdx-0x73],0x8
   14000fec6:	and    eax,DWORD PTR [rsp+rbx*1+0x30d91805]
   14000fecd:	rdpmc  
   14000fecf:	lea    eax,[rbp+0x8]
   14000fed2:	sub    esi,DWORD PTR [rcx]
   14000fed4:	or     ch,cl
   14000fed6:	lahf   
   14000fed7:	int3   
   14000fed8:	(bad)  
   14000fed9:	sub    cl,ah
   14000fedb:	(bad)  
   14000fedc:	mov    ebx,0x3bcefab8
   14000fee1:	lods   eax,DWORD PTR ds:[rsi]
   14000fee2:	sbb    dl,al
   14000fee4:	sbb    eax,DWORD PTR [rax-0x7d236891]
   14000feea:	mov    dl,0x5b
   14000feec:	cs scas eax,DWORD PTR es:[rdi]
   14000feee:	(bad)  
   14000feef:	xlat   BYTE PTR ds:[rbx]
   14000fef0:	(bad)  
   14000fef1:	jnp    0x14000fee7
   14000fef3:	mov    edi,0xe3fea170
   14000fef8:	xlat   BYTE PTR ds:[rbx]
   14000fef9:	rcl    DWORD PTR [rip+0xffffffff97da9e71],1        # 0xd7db9d70
   14000feff:	add    al,0x5f
   14000ff01:	adc    cl,BYTE PTR [rdx+0x704a2d12]
   14000ff07:	and    eax,0x57389452
   14000ff0c:	and    BYTE PTR [rsi],ch
   14000ff0e:	ss icebp 
   14000ff10:	sub    BYTE PTR [rsi-0x489a4e60],cl
   14000ff16:	ins    DWORD PTR es:[rdi],dx
   14000ff17:	out    0x89,al
   14000ff19:	retf   0x67ef
   14000ff1c:	adc    edi,DWORD PTR [rbp+rdx*4-0x3ccca308]
   14000ff23:	(bad)  
   14000ff24:	push   rbx
   14000ff25:	or     dh,bl
   14000ff27:	cli    
   14000ff28:	mov    esi,0x87f9ab1
   14000ff2d:	(bad)  
   14000ff2e:	rex.WRX
   14000ff2f:	rex.RXB in al,0x5f
   14000ff32:	nop
   14000ff33:	sbb    BYTE PTR [rip+0xffffffffb4609c6c],dh        # 0xf4619ba5
   14000ff39:	jp     0x14000fec3
   14000ff3b:	imul   edx,DWORD PTR [rdi-0x51],0x30
   14000ff3f:	fidivr WORD PTR [rdx]
   14000ff41:	leave  
   14000ff42:	ret    0x4bf6
   14000ff45:	enter  0xdde,0xa0
   14000ff49:	mov    cl,0xe5
   14000ff4b:	mov    dl,0xec
   14000ff4d:	data16 (bad) 
   14000ff4f:	movabs eax,ds:0x464ff79b3618d14
   14000ff58:	push   rdx
   14000ff59:	sar    DWORD PTR [rbx*4-0x6c02f198],1
   14000ff60:	xchg   ecx,eax
   14000ff61:	jo     0x14000ff6c
   14000ff63:	add    edx,eax
   14000ff65:	mov    WORD PTR [rbx],ss
   14000ff67:	je     0x14000ff42
   14000ff69:	sbb    BYTE PTR [rip+0xffffffffa3a75ee2],0x4f        # 0xe3a85e52
   14000ff70:	out    0x15,al
   14000ff72:	add    BYTE PTR ds:[rax],r14b
   14000ff76:	test   BYTE PTR [rax],al
   14000ff78:	rex.WRB fdivr QWORD PTR [r8-0x7d3a76c8]
   14000ff7f:	pop    rsp
   14000ff80:	cmp    DWORD PTR [rax-0x22],esp
   14000ff83:	(bad)  
   14000ff84:	fidiv  DWORD PTR [rsi]
   14000ff86:	popf   
   14000ff87:	rex.W int3 
   14000ff89:	jmp    0x14000ffa8
   14000ff8b:	and    al,0x7a
   14000ff8d:	mov    al,0x78
   14000ff8f:	loop   0x14000ff33
   14000ff91:	movabs eax,ds:0x8b089e3e426ea3b5
   14000ff9a:	push   0xffffffffaa53ffce
   14000ff9f:	adc    al,0x37
   14000ffa1:	sbb    edi,DWORD PTR [rbx]
   14000ffa3:	add    eax,0x423e6a43
   14000ffa8:	cmp    DWORD PTR [rdx-0xfd306d],esp
   14000ffae:	or     esi,DWORD PTR [rdi+0x50]
   14000ffb1:	xor    eax,0xdf0037a0
   14000ffb6:	(bad)  
   14000ffb7:	jns    0x14000ffde
   14000ffb9:	gs mov bh,0xd8
   14000ffbc:	jl     0x14000ffb4
   14000ffbe:	and    ecx,DWORD PTR [rdi-0x407a7a45]
   14000ffc4:	mov    gs,eax
   14000ffc6:	(bad)  
   14000ffc7:	ins    BYTE PTR es:[rdi],dx
   14000ffc8:	movabs ds:0xf2c69585a8f911e,al
   14000ffd1:	enter  0xc443,0xb5
   14000ffd5:	popf   
   14000ffd6:	mov    DWORD PTR es:[rbx+rdx*1+0x13509a1a],esi
   14000ffde:	(bad)  
   14000ffdf:	sbb    ch,BYTE PTR [rcx+0x66]
   14000ffe2:	cmp    rax,0xfffffffff827a8a5
   14000ffe8:	jp     0x14000ff70
   14000ffea:	imul   esp,DWORD PTR [rsi-0x85d948],0xffffffa2
   14000fff1:	mov    DWORD PTR [rdi],edi
   14000fff3:	mov    cl,0xe4
   14000fff5:	(bad)  
   14000fff6:	sti    
   14000fff7:	(bad)  
   14000fff8:	jae    0x14000ffe7
   14000fffa:	fbld   TBYTE PTR [rdx]
   14000fffc:	add    BYTE PTR [rbp+0x45],dl
   14000ffff:	(bad)
   140010002:	cmp    eax,0x7f60134c
   140010007:	sti    
   140010008:	sub    al,0xc7
   14001000a:	(bad)  
   14001000b:	pushf  
   14001000c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001000d:	mov    esp,0x3f4d6dba
   140010012:	xchg   esi,eax
   140010013:	and    bl,BYTE PTR [rax-0x27]
   140010016:	stos   DWORD PTR es:[rdi],eax
   140010017:	add    BYTE PTR [rdx+rbp*4-0x759701cb],bh
   14001001e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001001f:	pop    rbx
   140010020:	rex (bad) 
   140010022:	(bad)  
   140010023:	fld    QWORD PTR [rsi-0xc5959c5]
   140010029:	mov    WORD PTR [rax-0x2e],es
   14001002c:	or     ebx,DWORD PTR [rip+0x2fd340dc]        # 0x16fd4410e
   140010032:	int    0xf4
   140010034:	(bad)  
   140010035:	lods   al,BYTE PTR ds:[rsi]
   140010036:	lods   al,BYTE PTR ds:[rsi]
   140010037:	xchg   edi,eax
   140010038:	xlat   BYTE PTR ds:[rbx]
   140010039:	or     BYTE PTR [rcx-0x1b7cb20b],cl
   14001003f:	jrcxz  0x140010024
   140010041:	(bad)  
   140010042:	rcr    BYTE PTR [rbp+0xc],0x4
   140010046:	sar    BYTE PTR [rdx-0x618d1bff],cl
   14001004c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001004d:	sub    eax,0xffffff8a
   140010050:	rex.WRB add rax,0x54f21756
   140010056:	movabs al,ds:0xf2dcd0cf0c08bd34
   14001005f:	xchg   esp,eax
   140010060:	lea    edx,[rsi-0x42]
   140010063:	adc    cl,dh
   140010065:	rex.WRB shl QWORD PTR [r8],1
   140010068:	mov    BYTE PTR [rax],dh
   14001006a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001006b:	jns    0x14001005c
   14001006d:	(bad)  
   14001006e:	cmc    
   14001006f:	fadd   st(6),st
   140010071:	(bad)  
   140010072:	in     eax,0xce
   140010074:	test   eax,0xe006f406
   140010079:	mov    ch,0x96
   14001007b:	stc    
   14001007c:	xchg   ecx,eax
   14001007d:	pop    rsp
   14001007e:	(bad)  
   14001007f:	sub    BYTE PTR [rdi],bl
   140010081:	std    
   140010082:	hlt    
   140010083:	(bad)  
   140010084:	(bad)  
   140010085:	fimul  DWORD PTR [rdi+rdx*4]
   140010088:	jle    0x1400100af
   14001008a:	test   al,0x9e
   14001008c:	push   rax
   14001008d:	mov    ebx,0x896f9281
   140010092:	xchg   ebx,eax
   140010093:	addr32 pop rdx
   140010095:	gs xor bh,al
   140010098:	(bad)  
   140010099:	sub    BYTE PTR [rdx],bl
   14001009b:	data16 icebp 
   14001009d:	or     si,WORD PTR [rbp-0xc]
   1400100a1:	cld    
   1400100a2:	int    0x14
   1400100a4:	test   eax,0xa13d4867
   1400100a9:	cwde   
   1400100aa:	vmovq  xmm2,QWORD PTR [rcx]
   1400100ae:	(bad)  
   1400100af:	leave  
   1400100b0:	scas   eax,DWORD PTR es:[rdi]
   1400100b1:	push   0xffffffffc3308a6a
   1400100b6:	xlat   BYTE PTR ds:[rbx]
   1400100b7:	xor    edi,DWORD PTR [rbp+rcx*1+0x6b14f8]
   1400100be:	adc    cl,BYTE PTR [rip+0x6edb5a36]        # 0x1aedc5afa
   1400100c4:	hlt    
   1400100c5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400100c6:	out    0xfe,ax
   1400100c9:	(bad)  
   1400100ca:	sbb    BYTE PTR [rdi+rbx*1+0x35cefae3],ch
   1400100d1:	rex.RX (bad) [rdi+0x197ed859]
   1400100d8:	mov    bh,0x77
   1400100da:	add    edx,ebp
   1400100dc:	es sbb eax,0xf6da220a
   1400100e2:	cld    
   1400100e3:	rex.WXB and dil,r12b
   1400100e6:	mov    ah,0x9e
   1400100e8:	ficom  WORD PTR [rax-0x7998fbbc]
   1400100ee:	sar    BYTE PTR [rax],0x80
   1400100f1:	popf   
   1400100f2:	and    DWORD PTR [rdi],ebx
   1400100f4:	pop    rbp
   1400100f5:	and    edx,DWORD PTR [rcx-0x6288fb6a]
   1400100fb:	out    0x5d,eax
   1400100fd:	retf   0x7007
   140010100:	xchg   esi,eax
   140010101:	pop    rsi
   140010102:	mov    edx,DWORD PTR [eax]
   140010105:	jg     0x1400100e0
   140010107:	add    ah,BYTE PTR [rcx]
   140010109:	fsubr  DWORD PTR [rdx]
   14001010b:	sbb    dl,BYTE PTR [r10-0x5]
   14001010f:	scas   eax,DWORD PTR es:[rdi]
   140010110:	mov    ebp,0x54067a9e
   140010115:	fcmovb st,st(5)
   140010117:	and    edx,0xb
   14001011a:	icebp  
   14001011b:	add    BYTE PTR [rip+0xffffffff98451d32],ah        # 0xd8461e53
   140010121:	outs   dx,DWORD PTR ds:[rsi]
   140010122:	adc    DWORD PTR [rsi-0x2f],ecx
   140010125:	mov    BYTE PTR [rax+rax*2],ah
   140010128:	mov    al,0x33
   14001012a:	rex.WRB movabs r8,0xd9b38a0a0c92c3a3
   140010134:	add    eax,0x3d502239
   140010139:	test   BYTE PTR [rcx],0xb9
   14001013c:	clc    
   14001013d:	(bad)  
   14001013e:	jg     0x1400100ea
   140010140:	(bad)  
   140010141:	(bad)  
   140010142:	sbb    DWORD PTR [rdi+0x48],esi
   140010145:	sbb    dl,al
   140010147:	sbb    eax,DWORD PTR [rax-0x6e25ad29]
   14001014d:	pop    rsp
   14001014e:	mov    ecx,0x2f99e759
   140010153:	jl     0x14001014a
   140010155:	retf   
   140010156:	jle    0x140010114
   140010158:	hlt    
   140010159:	fild   QWORD PTR [rax+0x3910b2c8]
   14001015f:	out    0x9a,al
   140010161:	adc    eax,0x6bb1d63d
   140010166:	or     esi,DWORD PTR [rdi]
   140010168:	fwait
   140010169:	movabs al,ds:0x3423ac38d501a1d4
   140010172:	xor    rax,QWORD PTR [rbx+0x13]
   140010176:	popf   
   140010177:	mov    bh,0x9e
   140010179:	loope  0x1400101e1
   14001017b:	sti    
   14001017c:	(bad)  
   14001017d:	neg    BYTE PTR [rbx-0x12]
   140010180:	lahf   
   140010181:	cmp    eax,0x8d614d7f
   140010186:	cmp    eax,0xf2add4d2
   14001018b:	xchg   DWORD PTR [rsi],esp
   14001018d:	scas   eax,DWORD PTR es:[rdi]
   14001018e:	clc    
   14001018f:	xchg   ebx,eax
   140010190:	push   0x66
   140010192:	lea    ebp,[rbx]
   140010194:	xchg   ecx,eax
   140010195:	sti    
   140010196:	(bad)  
   140010197:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010198:	adc    edi,eax
   14001019a:	fisub  WORD PTR [rbp+0x3adf1c73]
   1400101a0:	rex.WB jns 0x140010208
   1400101a3:	or     ebp,edx
   1400101a5:	jge    0x140010139
   1400101a7:	or     ecx,DWORD PTR [rbp+0x40]
   1400101aa:	(bad)  
   1400101ab:	sub    DWORD PTR [rsi-0x5],eax
   1400101ae:	adc    eax,0x7fccd228
   1400101b3:	ficomp DWORD PTR [rdi+rdi*1-0x32]
   1400101b7:	repz imul edx,DWORD PTR [rip+0x24028da7],0xffffff87        # 0x164038f66
   1400101bf:	loope  0x14001022a
   1400101c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400101c2:	sbb    eax,0x4ce617b3
   1400101c7:	push   rbx
   1400101c8:	adc    al,0x60
   1400101ca:	(bad)  
   1400101cb:	sbb    cl,BYTE PTR [rip+0xfffffffff6fcf649]        # 0x136fdf81a
   1400101d1:	fimul  WORD PTR [rax]
   1400101d3:	(bad)  
   1400101d4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400101d5:	inc    BYTE PTR [rax+0x37c7ee14]
   1400101db:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400101dc:	or     BYTE PTR ds:[rax+0x7],0x4e
   1400101e1:	stos   DWORD PTR es:[rdi],eax
   1400101e2:	(bad)  
   1400101e3:	sub    ebp,ebp
   1400101e5:	pop    rsi
   1400101e6:	sub    eax,0x7c354f8f
   1400101eb:	mov    edi,DWORD PTR [rsi]
   1400101ed:	and    dh,BYTE PTR [rdx]
   1400101ef:	or     DWORD PTR [rax],edi
   1400101f1:	int    0x95
   1400101f3:	mov    BYTE PTR [rsi-0x14],dl
   1400101f6:	add    BYTE PTR [rbx+0x318efe7],dl
   1400101fc:	and    eax,0xeada5fee
   140010201:	(bad)  
   140010202:	(bad)  
   140010203:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010204:	xchg   ebx,eax
   140010205:	out    0x80,eax
   140010207:	call   FWORD PTR [rcx-0x17f2dbc5]
   14001020d:	mov    ebx,0x792b5f01
   140010212:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010213:	repnz push rdi
   140010215:	outs   dx,DWORD PTR ds:[rsi]
   140010216:	stc    
   140010217:	ficomp WORD PTR [rdi]
   140010219:	clc    
   14001021a:	icebp  
   14001021b:	ror    edx,0xea
   14001021e:	scas   eax,DWORD PTR es:[rdi]
   14001021f:	adc    al,0xa5
   140010221:	pop    rdi
   140010222:	scas   al,BYTE PTR es:[rdi]
   140010223:	or     al,BYTE PTR [rdi-0x17]
   140010226:	test   DWORD PTR [rcx-0x57a1ab89],eax
   14001022c:	pushf  
   14001022d:	push   rax
   14001022e:	jns    0x1400101f1
   140010230:	adc    eax,0x8fc5cf2e
   140010235:	mov    esi,DWORD PTR [rbx+0x28]
   140010238:	sbb    ch,BYTE PTR [rdx-0x4c]
   14001023b:	cdq    
   14001023c:	movabs ds:0x3209ea109b3094f5,al
   140010245:	fisttp QWORD PTR [rbx-0x8b08bb5]
   14001024b:	sub    dl,ch
   14001024d:	push   0x3ed9ca04
   140010252:	cmp    DWORD PTR [rdx-0x61],0xffffffaa
   140010256:	sahf   
   140010257:	push   rax
   140010258:	(bad)  
   140010259:	push   rbx
   14001025a:	pop    rsp
   14001025b:	cmp    eax,0x7afff58b
   140010260:	(bad)  
   140010261:	scas   eax,DWORD PTR es:[rdi]
   140010262:	and    edx,DWORD PTR [rcx]
   140010264:	enter  0x11d5,0x17
   140010268:	rex.W jl 0x14001026b
   14001026b:	(bad)  
   14001026c:	frstor [rdi-0x4a]
   14001026f:	jbe    0x140010205
   140010271:	(bad)  
   140010272:	std    
   140010273:	outs   dx,BYTE PTR ds:[rsi]
   140010275:	fidivr WORD PTR [rax+0x5eb70ca]
   14001027b:	(bad)  
   14001027c:	mov    bh,0xce
   14001027e:	and    BYTE PTR [rbx+0x531a5037],bh
   140010284:	lods   al,BYTE PTR ds:[rsi]
   140010285:	test   al,0x44
   140010287:	test   eax,0xe6d3d8d7
   14001028c:	dec    BYTE PTR [rcx]
   14001028e:	xor    al,0xcb
   140010290:	retf   0x21dd
   140010293:	sti    
   140010294:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010295:	(bad)  
   140010296:	add    BYTE PTR [rdx+0x1ceef77],dh
   14001029c:	mov    edi,cs
   14001029e:	jns    0x140010237
   1400102a0:	sub    al,BYTE PTR [rbx]
   1400102a2:	or     DWORD PTR [rax-0x6b2f5fcd],ecx
   1400102a8:	sub    cl,BYTE PTR [rbx-0x61a10d3a]
   1400102ae:	or     DWORD PTR [rax-0x27cafb5a],ebx
   1400102b4:	(bad)  
   1400102b5:	and    BYTE PTR [rbx-0x6],dl
   1400102b8:	xor    al,0xf
   1400102ba:	add    BYTE PTR [rdx+rcx*4],cl
   1400102bd:	xchg   esp,eax
   1400102be:	rex.WRX stos BYTE PTR es:[rdi],al
   1400102c0:	shr    DWORD PTR [rsi+0x4c],1
   1400102c3:	jmp    0x16bce8242
   1400102c8:	(bad)  
   1400102c9:	addr32 mov esp,0xd20f1d22
   1400102cf:	sahf   
   1400102d0:	movsxd ebp,DWORD PTR [rdx-0x63358a07]
   1400102d6:	stc    
   1400102d7:	imul   esi,DWORD PTR [rbx+0xfea4313],0x3697957c
   1400102e1:	imul   ebx,DWORD PTR [rcx],0x8f13079c
   1400102e7:	xlat   BYTE PTR ds:[rbx]
   1400102e8:	xchg   ebp,eax
   1400102e9:	hlt    
   1400102ea:	(bad)  
   1400102eb:	loopne 0x1400102a2
   1400102ed:	nop
   1400102ee:	jns    0x1400102d5
   1400102f0:	(bad)  
   1400102f1:	sub    edx,0xc1fe5fad
   1400102f7:	(bad)  
   1400102f8:	pop    rbp
   1400102f9:	cs cs std 
   1400102fc:	jne    0x14001030f
   1400102fe:	sbb    DWORD PTR [rdx+rdi*4-0x17],eax
   140010302:	jl     0x1400102dc
   140010304:	or     DWORD PTR [rax+0x684a0842],eax
   14001030a:	xchg   esp,eax
   14001030b:	mov    edx,0x9a9a4c09
   140010310:	mov    edx,0x299a69a9
   140010315:	pop    rdx
   140010316:	rex.WRXB rcr r9b,1
   140010319:	(bad)  
   14001031a:	cwde   
   14001031b:	loop   0x140010318
   14001031d:	jmp    0x18fb78150
   140010322:	xor    ebx,ebx
   140010324:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010325:	cwde   
   140010326:	rex.WRB test al,0xea
   140010329:	jge    0x140010331
   14001032b:	cmc    
   14001032c:	test   BYTE PTR [rdx+0x62cc529e],dh
   140010332:	or     eax,edx
   140010334:	iret   
   140010335:	div    BYTE PTR [rcx-0x4d]
   140010338:	mov    BYTE PTR [rbx],cl
   14001033a:	enter  0x826c,0x9f
   14001033e:	(bad)
   140010341:	xor    eax,0x2869ae0d
   140010346:	(bad)  
   140010347:	sbb    ecx,eax
   140010349:	(bad)  
   14001034a:	in     al,dx
   14001034b:	(bad)  
   14001034c:	hlt    
   14001034d:	xor    al,0x52
   14001034f:	adc    al,0xec
   140010351:	pop    rdi
   140010352:	fldenv [rdx-0x1d]
   140010355:	ret    0x940b
   140010358:	xlat   BYTE PTR ds:[rbx]
   140010359:	mov    dh,0xa1
   14001035b:	fxch   st(7)
   14001035d:	loope  0x1400103de
   14001035f:	bnd jle 0x140010367
   140010362:	in     eax,dx
   140010363:	cli    
   140010364:	fsubr  DWORD PTR [rcx-0x16]
   140010367:	out    dx,eax
   140010368:	pop    rsp
   140010369:	(bad)  
   14001036a:	pop    rdi
   14001036b:	sub    bh,cl
   14001036d:	jne    0x140010384
   14001036f:	ret    
   140010370:	pop    rsi
   140010371:	rex.WRXB (bad) 
   140010373:	xchg   ebx,eax
   140010374:	ds and al,0xa7
   140010377:	cmp    al,bh
   140010379:	(bad)  
   14001037a:	and    al,0x7a
   14001037c:	outs   dx,DWORD PTR ds:[rsi]
   14001037d:	in     eax,dx
   14001037e:	hlt    
   14001037f:	icebp  
   140010380:	(bad)  
   140010381:	and    BYTE PTR [rbp+0x4f62f605],ah
   140010387:	xchg   ebx,eax
   140010388:	add    DWORD PTR [r11+riz*2-0x60],r8d
   14001038d:	rex.B ins BYTE PTR es:[rdi],dx
   14001038f:	sbb    BYTE PTR [rax+0x5c4a3cb],dl
   140010395:	mov    dl,0xef
   140010397:	push   rbp
   140010398:	xor    al,0x2b
   14001039a:	test   al,0x38
   14001039c:	leave  
   14001039d:	fisttp DWORD PTR [rsi-0x3c]
   1400103a0:	(bad)  
   1400103a1:	rex.XB (bad) 
   1400103a3:	int    0x0
   1400103a5:	push   0x458056bb
   1400103aa:	xor    al,0xa4
   1400103ac:	mov    ecx,0x5d1b483
   1400103b1:	je     0x140010379
   1400103b3:	xchg   BYTE PTR [rdi+0x3a50260a],ah
   1400103b9:	cmp    eax,0xfcb97ef1
   1400103be:	sub    al,0x77
   1400103c0:	mov    rsi,QWORD PTR [rax-0x61]
   1400103c4:	add    bh,BYTE PTR [rdx+rbx*8+0x7fe50b72]
   1400103cb:	fcomi  st,st(7)
   1400103cd:	std    
   1400103ce:	lock rex.WRXB (bad) 
   1400103d1:	movabs ds:0xa218029489a0cfd1,eax
   1400103da:	(bad)  
   1400103db:	add    BYTE PTR [rip+0xffffffffe951a34a],cl        # 0x12952a72b
   1400103e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400103e2:	rex.WRB movabs al,ds:0x506669a1a6ea6bae
   1400103ec:	rex.WRXB movabs ds:0x7c13d712a24d9ff7,rax
   1400103f6:	push   0xfffffffff0f44df0
   1400103fb:	rex.RB cmp eax,0xcfb030a5
   140010401:	xlat   BYTE PTR ds:[rbx]
   140010402:	xchg   ecx,eax
   140010403:	loop   0x1400103f0
   140010405:	push   rdx
   140010406:	rex.WRXB jg 0x140010426
   140010409:	leave  
   14001040a:	(bad)  
   14001040b:	imul   edi,DWORD PTR [rdi+rsi*1+0x533fc09a],0xeec67a80
   140010416:	movabs eax,ds:0x75cee6e09d0f2827
   14001041f:	rex.RX pop rbx
   140010421:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010422:	pop    rax
   140010423:	mov    esp,0x77b70678
   140010428:	sbb    eax,0x929f2cc2
   14001042d:	movabs al,ds:0x514b9c06bcfebb9
   140010436:	nop
   140010437:	(bad)  
   140010438:	je     0x14001040b
   14001043a:	fstp   TBYTE PTR [rdx+0x4d4d9344]
   140010440:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010442:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010443:	popf   
   140010444:	lock mov esi,0x8b24db25
   14001044a:	rol    BYTE PTR [rcx],1
   14001044c:	add    ch,cl
   14001044e:	sbb    esi,DWORD PTR [rdi+0x635b8413]
   140010454:	xchg   ecx,eax
   140010455:	xchg   esp,eax
   140010456:	mov    eax,0x44297cd
   14001045b:	add    DWORD PTR [rbp-0x7dbfb63a],edi
   140010461:	xchg   ebp,eax
   140010462:	add    ch,ch
   140010464:	(bad)  [rcx+0x2a]
   140010467:	push   rax
   140010468:	rcl    cl,cl
   14001046a:	(bad)  
   14001046b:	repz out dx,eax
   14001046d:	add    BYTE PTR [rax-0x6f],bh
   140010470:	adc    BYTE PTR [rsi+riz*4-0x3cda3b18],ah
   140010477:	pop    rsp
   140010478:	pop    rsp
   140010479:	xor    al,0xb4
   14001047b:	scas   al,BYTE PTR es:[rdi]
   14001047c:	sbb    DWORD PTR [rcx],0xffffffac
   14001047f:	pop    rax
   140010480:	in     eax,dx
   140010481:	xor    BYTE PTR [rax],dl
   140010483:	fs scas al,BYTE PTR es:[rdi]
   140010485:	je     0x1400104c1
   140010487:	(bad)  
   140010488:	fistp  DWORD PTR [rbx+0x39]
   14001048b:	adc    BYTE PTR [rip+0x3be4e88e],dl        # 0x17be5ed1f
   140010491:	mov    ecx,0xbd01aa43
   140010496:	add    DWORD PTR [rax+0x35],edi
   140010499:	gs (bad) 
   14001049b:	in     eax,dx
   14001049c:	iret   
   14001049d:	sahf   
   14001049e:	mov    edi,0x367f8d18
   1400104a3:	mov    dh,0xd9
   1400104a5:	(bad)  
   1400104a6:	(bad)  
   1400104a7:	or     dl,BYTE PTR [rsi]
   1400104a9:	fisub  WORD PTR [rbx+0x79]
   1400104ac:	mov    esi,0xa61a6d32
   1400104b1:	mov    bl,0xc0
   1400104b3:	lods   al,BYTE PTR ds:[rsi]
   1400104b4:	cdq    
   1400104b5:	push   rdx
   1400104b6:	(bad)  
   1400104b7:	adc    eax,esp
   1400104b9:	sar    DWORD PTR [rdx-0x7a],cl
   1400104bc:	(bad)  
   1400104bd:	push   rsi
   1400104be:	(bad)  
   1400104bf:	lahf   
   1400104c0:	in     eax,dx
   1400104c1:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400104c3:	outs   dx,BYTE PTR ds:[rsi]
   1400104c4:	mov    BYTE PTR [rsi-0x3cd60851],bh
   1400104ca:	mov    WORD PTR [rdx+0x1f3eec8e],fs
   1400104d0:	(bad)  
   1400104d1:	enter  0x6bf2,0x6a
   1400104d5:	pushf  
   1400104d6:	(bad)  
   1400104d7:	jo     0x140010526
   1400104d9:	movsxd ebx,DWORD PTR [rdi+rdi*2-0x65]
   1400104dd:	repnz imul esp,ebp,0xffffffbf
   1400104e1:	(bad)  
   1400104e2:	pop    rax
   1400104e3:	and    eax,DWORD PTR [rsi+0x75]
   1400104e6:	or     DWORD PTR [rdi],ecx
   1400104e8:	or     DWORD PTR ds:[rsi-0xc1d109c],edi
   1400104ef:	sbb    al,0xbb
   1400104f1:	jo     0x140010485
   1400104f3:	(bad)  
   1400104f4:	(bad)  
   1400104f5:	add    eax,0xb4a2ee98
   1400104fa:	adc    eax,0xc4294102
   1400104ff:	(bad)
   140010502:	pushf  
   140010503:	in     al,0xda
   140010505:	jg     0x1400104a2
   140010507:	add    bh,BYTE PTR [rax+0xa2d19e8]
   14001050d:	lock and al,0x5
   140010510:	add    edi,DWORD PTR es:[rsi+rcx*2+0x12]
   140010515:	xor    al,bl
   140010517:	add    al,BYTE PTR [rax-0x19f9187]
   14001051d:	iret   
   14001051e:	and    al,0x67
   140010520:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010522:	hlt    
   140010523:	imul   esi,DWORD PTR [rbp-0x318dbe1],0x97385a76
   14001052d:	imul   edx,DWORD PTR [rcx+rbx*1],0x23
   140010531:	mov    BYTE PTR [rcx-0x2a1f9586],bh
   140010537:	pushf  
   140010538:	(bad)  
   140010539:	and    al,0x2d
   14001053b:	adc    r15,QWORD PTR [rsi+0x54]
   14001053f:	rex.X
   140010540:	cs push rbx
   140010542:	es cmp al,0x20
   140010545:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010546:	(bad)  
   140010547:	pop    rsi
   140010548:	jo     0x14001056b
   14001054a:	(bad)  
   14001054b:	add    BYTE PTR [rax+0x3],dl
   14001054e:	(bad)  
   14001054f:	pop    rbx
   140010550:	xor    eax,0x8d1a474e
   140010555:	mov    ebx,edx
   140010557:	(bad)  
   140010558:	adc    BYTE PTR [rdi+rax*8-0x26196dcf],cl
   14001055f:	out    dx,eax
   140010560:	xlat   BYTE PTR ds:[rbx]
   140010561:	xchg   edi,eax
   140010562:	(bad)  
   140010563:	(bad)  
   140010564:	xor    edi,esi
   140010566:	mov    edi,0x7d01abee
   14001056b:	or     dh,al
   14001056d:	push   0xffffffffffffffc9
   14001056f:	sub    eax,0xcb78e016
   140010574:	idiv   ebp
   140010576:	xchg   ecx,eax
   140010577:	lahf   
   140010578:	sub    BYTE PTR [rdi+0xb],al
   14001057b:	(bad)  
   14001057c:	(bad)
   140010580:	rex.X enter 0xf7f5,0x18
   140010585:	loop   0x14001058e
   140010587:	es jne 0x14001054d
   14001058a:	out    dx,al
   14001058b:	mov    ah,0x66
   14001058d:	outs   dx,DWORD PTR ds:[rsi]
   14001058e:	xor    ah,BYTE PTR [rbx+0x7f]
   140010591:	mov    dh,0x4f
   140010593:	cwde   
   140010594:	out    dx,al
   140010595:	movabs ds:0xf8bb260f74c25d93,eax
   14001059e:	leave  
   14001059f:	(bad)  
   1400105a0:	(bad)  
   1400105a3:	in     eax,0x74
   1400105a5:	(bad)  
   1400105a6:	mov    dl,0xde
   1400105a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400105a9:	pushf  
   1400105aa:	in     eax,dx
   1400105ab:	push   rbx
   1400105ac:	rex.WRB outs dx,BYTE PTR ds:[rsi]
   1400105ae:	xor    bl,BYTE PTR [rsi+rbp*8+0x29f74e53]
   1400105b5:	addr32 push rsi
   1400105b7:	add    DWORD PTR [rax-0x676e6612],ebx
   1400105bd:	loopne 0x140010566
   1400105bf:	push   rbx
   1400105c0:	fsubr  QWORD PTR [rdx+rcx*4-0x2c]
   1400105c4:	push   rbx
   1400105c5:	fs (bad) 
   1400105c7:	rex.WXB test r9b,sil
   1400105ca:	out    dx,eax
   1400105cb:	cmp    dl,BYTE PTR [rdi-0x3d8b2300]
   1400105d1:	(bad)  
   1400105d2:	loope  0x14001055b
   1400105d4:	or     bh,dh
   1400105d6:	cmp    eax,0xab8dceca
   1400105db:	or     al,0xb6
   1400105dd:	pop    rdi
   1400105de:	fs jmp 0x11db951b6
   1400105e4:	sbb    esp,DWORD PTR [rax-0x6b52c18b]
   1400105ea:	retf   
   1400105eb:	(bad)  
   1400105ec:	(bad)  
   1400105ed:	jns    0x14001066e
   1400105ef:	(bad)
   1400105f4:	mov    ah,0x52
   1400105f6:	sbb    ah,BYTE PTR [rbx+0x79]
   1400105f9:	jo     0x140010585
   1400105fb:	cs xor r11b,bpl
   1400105ff:	push   rsi
   140010600:	xchg   edx,eax
   140010601:	jb     0x1400105a8
   140010603:	not    DWORD PTR [rcx-0xc0c928e]
   140010609:	popf   
   14001060a:	rex.B sbb al,0x92
   14001060d:	ret    0x6efe
   140010610:	cli    
   140010611:	fadd   QWORD PTR [rdx-0x4]
   140010614:	push   rcx
   140010615:	xchg   ebx,eax
   140010616:	push   rdx
   140010617:	imul   esp,DWORD PTR [rcx+rsi*4],0xff0ed075
   14001061e:	(bad)  
   140010620:	(bad)  
   140010621:	(bad)  
   140010622:	sbb    edx,DWORD PTR [rbx+0x7513a051]
   140010628:	in     al,0x78
   14001062a:	mov    esi,0x122e3073
   14001062f:	xchg   ebx,eax
   140010630:	repnz (bad) 
   140010632:	loopne 0x140010602
   140010634:	stc    
   140010635:	(bad)  
   140010636:	fnsave [rbp-0x5a]
   140010639:	sub    eax,0x45b4c8f9
   14001063e:	sub    DWORD PTR [rdx-0xb],edx
   140010641:	and    BYTE PTR [rdx],bl
   140010643:	rex cmp eax,0xfed911f1
   140010649:	add    BYTE PTR [rdi+0x40],dh
   14001064c:	sbb    dl,al
   14001064e:	rex.RXB add BYTE PTR [r15-0x169d237a],r13b
   140010655:	lods   eax,DWORD PTR ds:[rsi]
   140010656:	(bad)  
   140010657:	jg     0x14001064a
   140010659:	ud0    edx,DWORD PTR [rcx+0x2fe96172]
   140010660:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010661:	enter  0xb631,0xa8
   140010665:	(bad)  
   140010666:	(bad)  
   140010667:	jns    0x140010665
   140010669:	pop    rcx
   14001066a:	adc    ebx,DWORD PTR [rax-0x56457e2b]
   140010670:	cdq    
   140010671:	(bad)  
   140010672:	or     eax,0x334299a1
   140010677:	and    eax,ebx
   140010679:	push   0x734cd72e
   14001067e:	jmp    0x14001062e
   140010680:	imul   edx,DWORD PTR [rdx-0x58],0x5f
   140010684:	push   rbx
   140010685:	sbb    al,BYTE PTR [rax-0x54ecbc19]
   14001068b:	add    BYTE PTR [rbp+0xc],dh
   14001068e:	stc    
   14001068f:	jge    0x1400106c4
   140010691:	add    ebp,DWORD PTR [rbx-0xe]
   140010694:	rex.WB mov r13b,0xfe
   140010697:	xor    al,0xe5
   140010699:	(bad)  
   14001069a:	sub    cl,BYTE PTR [rbp-0x38]
   14001069d:	retf   0x2123
   1400106a0:	jb     0x1400106a0
   1400106a2:	outs   dx,DWORD PTR ds:[rsi]
   1400106a3:	ds repnz (bad) 
   1400106a6:	pushf  
   1400106a7:	(bad)  
   1400106a8:	cdq    
   1400106a9:	pop    rsi
   1400106aa:	mov    ecx,0x53adb1c0
   1400106af:	xchg   esp,eax
   1400106b0:	xchg   edi,eax
   1400106b1:	mov    bh,0xa0
   1400106b3:	fimul  WORD PTR [rbx+0x3d59814b]
   1400106b9:	cmp    al,0x87
   1400106bb:	push   rsi
   1400106bd:	xchg   ebx,eax
   1400106be:	push   rax
   1400106bf:	jg     0x140010660
   1400106c1:	movabs ds:0xf792f2b3b42ba367,al
   1400106ca:	(bad)  
   1400106cb:	loop   0x14001071d
   1400106cd:	(bad)  
   1400106ce:	cmp    DWORD PTR [rdx],esp
   1400106d0:	mov    eax,0x537edb19
   1400106d5:	xor    al,0xd0
   1400106d7:	rol    DWORD PTR [rcx],0xba
   1400106da:	xlat   BYTE PTR ds:[rbx]
   1400106db:	xor    ebp,ecx
   1400106dd:	sub    dh,BYTE PTR gs:[rax+0x54ef8565]
   1400106e4:	add    eax,0x70607752
   1400106e9:	and    BYTE PTR [rbp+0x6b],cl
   1400106ec:	cmp    BYTE PTR [rsp+rax*2],al
   1400106ef:	sbb    eax,0xf3c5c1a
   1400106f4:	loop   0x140010774
   1400106f6:	adc    al,BYTE PTR [rdi-0x1cc8cb21]
   1400106fc:	sbb    bh,BYTE PTR [rax]
   1400106fe:	leave  
   1400106ff:	ror    DWORD PTR [rsi+0x349838b8],1
   140010705:	sub    eax,0x8c7ce266
   14001070a:	shl    BYTE PTR [rdx],1
   14001070c:	jns    0x140010756
   14001070e:	(bad)  
   14001070f:	jmp    0xfa9d783c
   140010714:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010715:	fldcw  WORD PTR cs:[rbp+0x4d23c6db]
   14001071c:	or     ebx,ecx
   14001071e:	fs repnz sbb al,0xf0
   140010722:	iret   
   140010723:	jns    0x1400106c2
   140010725:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010726:	add    DWORD PTR [rbp-0x357c07ff],edi
   14001072c:	sub    eax,0xf93ff0e6
   140010731:	mov    ecx,0xb86e7f2f
   140010736:	mov    eax,0x683437fc
   14001073b:	add    DWORD PTR [rcx],ebp
   14001073d:	(bad)  
   14001073e:	sqrtps xmm6,xmm1
   140010741:	jmp    0x140010703
   140010743:	lods   al,BYTE PTR ds:[rsi]
   140010744:	mov    DWORD PTR [rdx-0x596565e1],ecx
   14001074a:	cdq    
   14001074b:	rex.RB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001074d:	mov    bh,0x3c
   14001074f:	(bad)  
   140010751:	xor    edi,DWORD PTR [rbx+rsi*1-0x67]
   140010755:	push   rbx
   140010756:	in     al,dx
   140010757:	movabs ds:0xbce9137c53365299,al
   140010760:	scas   al,BYTE PTR es:[rdi]
   140010761:	mov    dh,0xd9
   140010763:	jge    0x14001075b
   140010765:	fsub   DWORD PTR [rbp-0x6f97a10e]
   14001076b:	cmp    dh,ch
   14001076d:	imul   DWORD PTR [rbx-0x34]
   140010770:	stc    
   140010771:	sub    eax,0x3fa54e34
   140010776:	adc    ecx,eax
   140010778:	int    0xf6
   14001077a:	mov    ecx,0x70d3c0fe
   14001077f:	jmp    QWORD PTR [rbx+0x635cedec]
   140010785:	mov    eax,0xada59a75
   14001078a:	(bad)  
   14001078b:	jno    0x140010748
   14001078d:	push   rdi
   14001078e:	sub    eax,0x4cacd7f7
   140010793:	rex.WRX movabs rax,ds:0xfcceec93b1a78714
   14001079d:	out    dx,eax
   14001079e:	cmp    BYTE PTR [rbx-0x26],dl
   1400107a1:	(bad)  
   1400107a2:	sub    DWORD PTR [rdi-0x61],edi
   1400107a5:	rex.WXB in eax,dx
   1400107a7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400107a8:	repz pop rsp
   1400107aa:	jle    0x14001073b
   1400107ac:	xor    eax,0x5cff30dd
   1400107b1:	sbb    esp,DWORD PTR [rax+0x77]
   1400107b4:	jrcxz  0x140010736
   1400107b6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400107b7:	loope  0x140010762
   1400107b9:	sbb    DWORD PTR [rdi],eax
   1400107bb:	fwait
   1400107bc:	adc    al,0xec
   1400107be:	ins    BYTE PTR es:[rdi],dx
   1400107bf:	xchg   BYTE PTR [rax+0x76bcdae6],ah
   1400107c5:	sti    
   1400107c6:	(bad)  
   1400107c7:	adc    ch,BYTE PTR [rbx]
   1400107c9:	lock push rsi
   1400107cb:	loop   0x140010831
   1400107cd:	jle    0x140010756
   1400107cf:	jmp    0x182e07a0c
   1400107d4:	push   rsp
   1400107d5:	inc    dh
   1400107d7:	(bad)  
   1400107d8:	or     eax,0xf32efb51
   1400107dd:	push   0x9392ce0
   1400107e2:	leave  
   1400107e3:	(bad)
   1400107e8:	(bad)  
   1400107e9:	mov    ah,0x8
   1400107eb:	test   DWORD PTR [rsi],0xb7220fe0
   1400107f1:	cwde   
   1400107f2:	ret    
   1400107f3:	jg     0x1400107d7
   1400107f5:	mov    ecx,0x2fd07fcf
   1400107fa:	scas   al,BYTE PTR es:[rdi]
   1400107fb:	(bad)  
   1400107fc:	shl    BYTE PTR [rsp+rax*4],cl
   1400107ff:	(bad)  
   140010800:	rex.W loopne 0x140010861
   140010803:	rex.RXB jmp 0x1637d6374
   140010809:	or     eax,0xe299a4e4
   14001080e:	xchg   bx,ax
   140010810:	cmp    BYTE PTR [rbp-0x4ec2ff29],dl
   140010816:	jmp    0x1bb128dd7
   14001081b:	jl     0x14001083a
   14001081d:	jmp    0x14001081a
   14001081f:	adc    dl,BYTE PTR [rdx+0x19]
   140010822:	iret   
   140010823:	cmp    bh,bl
   140010825:	jb     0x1400108a2
   140010827:	outs   dx,DWORD PTR ds:[rsi]
   140010828:	mov    ebx,0x22689794
   14001082d:	(bad)  
   14001082e:	sub    BYTE PTR [rcx-0x30],bh
   140010831:	xchg   DWORD PTR [rdx-0x3a],esp
   140010834:	and    dh,bh
   140010836:	push   rsi
   140010837:	push   rdi
   140010838:	jo     0x14001082d
   14001083a:	mov    cl,0x77
   14001083c:	sub    BYTE PTR [rdi],0xd8
   14001083f:	fstp   TBYTE PTR [rsi]
   140010841:	retf   
   140010842:	jge    0x14001085b
   140010844:	pop    rdi
   140010845:	movabs al,ds:0x20a463f6cc85baba
   14001084e:	test   eax,0x3d951eb4
   140010853:	scas   al,BYTE PTR es:[rdi]
   140010854:	cmc    
   140010855:	(bad)  
   140010856:	js     0x140010861
   140010858:	xchg   ecx,eax
   140010859:	add    al,0xe4
   14001085b:	push   rdx
   14001085c:	in     al,0xdc
   14001085e:	push   0x78
   140010860:	pop    rsp
   140010861:	sbb    ch,BYTE PTR [rbp+rbp*1+0x5da7c5f3]
   140010868:	(bad)  
   140010869:	cmc    
   14001086a:	pop    rbx
   14001086b:	movabs ds:0x16cf7d0dfffb070,eax
   140010874:	shl    BYTE PTR [rsi],cl
   140010876:	in     eax,dx
   140010877:	lahf   
   140010878:	sbb    al,0xc6
   14001087a:	rex.XB pushf 
   14001087c:	or     cl,BYTE PTR [rsi+rcx*2]
   14001087f:	ins    DWORD PTR es:[rdi],dx
   140010880:	sub    dl,BYTE PTR [rax-0x80]
   140010883:	rol    BYTE PTR [rax+rdi*4+0x604b80ce],1
   14001088a:	popf   
   14001088b:	cmp    BYTE PTR [rdx],0x3b
   14001088e:	test   DWORD PTR [rsi+0x29],0xdbb65351
   140010895:	rex.WRX stc 
   140010897:	add    eax,0x4e60f2e2
   14001089c:	loop   0x140010869
   14001089e:	imul   edx,DWORD PTR [rip+0x4dc63a61],0xff10fa52        # 0x18dc74309
   1400108a8:	rex.WB
   1400108a9:	repz add DWORD PTR [rax-0x364319c8],edx
   1400108b0:	(bad)  
   1400108b1:	mov    ch,BYTE PTR [rax+0x14]
   1400108b4:	sbb    al,0x31
   1400108b6:	pop    rdx
   1400108b7:	lock call 0x116e9d88e
   1400108bd:	xchg   DWORD PTR [rsi-0x7d],edi
   1400108c0:	movsxd edi,edi
   1400108c2:	test   bh,dl
   1400108c4:	xor    DWORD PTR [rcx],ebp
   1400108c6:	test   al,0x37
   1400108c8:	add    BYTE PTR [rdi-0x151066a1],bh
   1400108ce:	repz rex mov ecx,0xbd0faef1
   1400108d5:	leave  
   1400108d6:	sub    eax,0xbd9dfead
   1400108db:	imul   esi,DWORD PTR [rbx-0x65ef2f22],0xb60fd5c8
   1400108e5:	fisubr DWORD PTR [rsi-0x55138aca]
   1400108eb:	xor    esp,DWORD PTR [rip+0xffffffff9f56b977]        # 0xdf57c268
   1400108f1:	cmp    dh,dh
   1400108f3:	and    bh,BYTE PTR [rbx-0x51]
   1400108f6:	ins    BYTE PTR es:[rdi],dx
   1400108f7:	pop    rdx
   1400108f8:	out    dx,eax
   1400108f9:	out    dx,eax
   1400108fa:	fwait
   1400108fb:	adc    BYTE PTR [rip+0xffffffffedf7427e],bh        # 0x12df84b7f
   140010901:	rex.RXB mov r8d,fs
   140010904:	jrcxz  0x1400108a0
   140010906:	mov    dl,dh
   140010908:	out    0xf6,eax
   14001090a:	push   rdi
   14001090b:	ins    DWORD PTR es:[rdi],dx
   14001090c:	mov    DWORD PTR [rsi],edi
   14001090e:	cmp    DWORD PTR [rdx],ecx
   140010910:	cmp    QWORD PTR [rax],rsi
   140010913:	mov    dl,ah
   140010915:	push   rbx
   140010916:	scas   al,BYTE PTR es:[rdi]
   140010917:	cmp    eax,0xfb9a16fc
   14001091c:	(bad)  
   14001091d:	movsxd esi,DWORD PTR [rsi-0x3]
   140010920:	sub    ah,BYTE PTR [rbx-0x45a75875]
   140010926:	js     0x14001092e
   140010928:	jg     0x14001091d
   14001092a:	sbb    bl,dl
   14001092c:	int3   
   14001092d:	push   rdx
   14001092e:	rex.WX sbb rax,0xffffffffe4711fbd
   140010934:	xchg   edi,eax
   140010935:	push   rdi
   140010936:	sbb    ebx,DWORD PTR [rcx-0x732c433b]
   14001093c:	xchg   esi,eax
   14001093d:	rex.WRXB out 0x74,al
   140010940:	movs   DWORD PTR es:[rdi],DWORD PTR ss:[rsi]
   140010942:	add    BYTE PTR [rsi],ch
   140010944:	jae    0x140010944
   140010946:	out    0xd9,eax
   140010948:	jg     0x1400108cc
   14001094a:	mov    ah,0xe3
   14001094c:	rcr    DWORD PTR [rdx-0x78],0xfe
   140010950:	xchg   ebp,eax
   140010951:	out    dx,al
   140010952:	fistp  QWORD PTR [rdx+rbp*2-0x635bfc1e]
   140010959:	cmp    edx,DWORD PTR [rbp+0x319db05]
   14001095f:	rcl    dh,cl
   140010961:	std    
   140010962:	and    eax,0xf2434a7e
   140010967:	rcr    BYTE PTR [rdx+0x3b2561de],1
   14001096d:	and    DWORD PTR [rdi],edi
   14001096f:	fwait
   140010970:	loopne 0x140010975
   140010972:	jb     0x1400108f9
   140010974:	rcl    DWORD PTR [rsp+rdi*1],1
   140010977:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010978:	add    DWORD PTR [rdx],esi
   14001097a:	(bad)  
   14001097b:	mov    ch,0xa4
   14001097d:	push   0x44f989a5
   140010982:	ds mov esi,0x62d3d6e4
   140010988:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010989:	jns    0x14001091a
   14001098b:	stos   BYTE PTR es:[rdi],al
   14001098c:	lods   al,BYTE PTR ds:[rsi]
   14001098d:	xor    edi,ebp
   14001098f:	adc    al,0xf0
   140010991:	iret   
   140010992:	js     0x1400109b1
   140010994:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010995:	add    DWORD PTR [rbp+0x4983f801],edi
   14001099b:	(bad)  
   14001099c:	sti    
   14001099d:	(bad)  
   14001099e:	(bad)  
   14001099f:	jns    0x140010983
   1400109a1:	pop    rax
   1400109a2:	mov    ecx,0x26f7f1be
   1400109a7:	mov    bl,0xc9
   1400109a9:	mov    ecx,ebp
   1400109ab:	ins    BYTE PTR es:[rdi],dx
   1400109ac:	adc    ah,BYTE PTR [rdi]
   1400109ae:	repnz and al,0xf6
   1400109b1:	sahf   
   1400109b2:	xor    eax,edi
   1400109b4:	(bad)  
   1400109b5:	(bad)  
   1400109b6:	nop
   1400109b7:	movsxd ebx,DWORD PTR [rsi]
   1400109b9:	ficomp WORD PTR [rcx]
   1400109bb:	(bad)  
   1400109bc:	fbld   TBYTE PTR [rdi]
   1400109be:	(bad)  
   1400109bf:	ffreep st(4)
   1400109c1:	xlat   BYTE PTR ds:[rbx]
   1400109c2:	or     ebx,DWORD PTR [rbx]
   1400109c4:	(bad)  
   1400109c5:	and    eax,0xfcf31d4d
   1400109ca:	(bad)  
   1400109cb:	in     eax,0x6f
   1400109cd:	rol    BYTE PTR [rdi+rbx*8-0x3c],cl
   1400109d1:	lock imul esp,edx,0x32
   1400109d5:	pop    rax
   1400109d6:	push   0x2937c55e
   1400109db:	jl     0x140010a0b
   1400109dd:	mul    DWORD PTR [rip+0xffffffffd0905045]        # 0x110915a28
   1400109e3:	rcl    BYTE PTR [rbx+riz*1-0x52],1
   1400109e7:	cmp    al,0xf1
   1400109e9:	ds mov esp,0x5fb6ccf3
   1400109ef:	loop   0x1400109d9
   1400109f1:	(bad)
   1400109f4:	jmp    0x140010a65
   1400109f6:	mov    dh,0x47
   1400109f8:	pushf  
   1400109f9:	mov    bl,0x6d
   1400109fb:	movabs ds:0xb682dfc4f253f6c6,al
   140010a04:	pop    rbx
   140010a05:	cmp    ebp,DWORD PTR cs:[rbx+0x53]
   140010a09:	xchg   edx,eax
   140010a0a:	fadd   DWORD PTR [rbp-0x25]
   140010a0d:	movabs eax,ds:0x458fdebe67bed2d3
   140010a16:	or     al,0xed
   140010a18:	jae    0x140010a47
   140010a1a:	movabs al,ds:0x78032186ec8c5318
   140010a23:	mov    ecx,0x15c60a7a
   140010a28:	mov    al,0xc3
   140010a2a:	xchg   ebp,eax
   140010a2b:	xor    al,0xc9
   140010a2d:	pop    rax
   140010a2e:	push   rdx
   140010a2f:	(bad)  
   140010a30:	xor    al,BYTE PTR [rdi+0x3c]
   140010a33:	(bad)  
   140010a34:	(bad)  
   140010a35:	test   BYTE PTR [rsi+0x4d],dh
   140010a38:	mov    ch,0xa1
   140010a3a:	xchg   ebp,eax
   140010a3b:	push   0xffffffffffffffc7
   140010a3d:	test   eax,0x671f38a2
   140010a42:	add    edx,esp
   140010a44:	rex lods eax,DWORD PTR ds:[rsi]
   140010a46:	sbb    eax,0xec38af38
   140010a4b:	and    al,0xae
   140010a4d:	rex.RXB sub BYTE PTR [r14+0x78],r12b
   140010a51:	shl    cl,cl
   140010a53:	addr32 mov esp,0x21d776c1
   140010a59:	outs   dx,DWORD PTR ds:[rsi]
   140010a5a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010a5b:	test   eax,0xde6d43c1
   140010a60:	repz (bad) 
   140010a62:	in     al,0xf4
   140010a64:	mov    edi,edi
   140010a66:	rex.WRX (bad) 
   140010a68:	cld    
   140010a69:	cmp    ch,BYTE PTR [rbp+0x14]
   140010a6c:	shr    bl,0x29
   140010a6f:	or     ch,al
   140010a71:	or     eax,0xe647efc0
   140010a76:	push   rdi
   140010a77:	(bad)  [rip+0xffffffff8bab2b07]        # 0xcbac3584
   140010a7d:	movabs ds:0xab7ddd30edfdf763,eax
   140010a86:	(bad)  
   140010a87:	sti    
   140010a88:	test   BYTE PTR [rsp+rcx*4+0x4f372c29],ah
   140010a8f:	cmp    eax,0xef7b26d0
   140010a94:	rex.X jmp 0x140010ae5
   140010a97:	mov    ds,WORD PTR [rdi]
   140010a99:	xchg   edi,eax
   140010a9a:	loop   0x140010a26
   140010a9c:	add    al,0x1d
   140010a9e:	push   rbx
   140010a9f:	lock data16 (bad) 
   140010aa2:	ret    
   140010aa3:	cld    
   140010aa4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010aa5:	std    
   140010aa6:	rex.WR sbb r12b,dil
   140010aa9:	rex.WRB shl QWORD PTR [r14+rbx*8-0x56055ec3],cl
   140010ab1:	(bad)  
   140010ab2:	lahf   
   140010ab3:	cmp    dh,bh
   140010ab5:	mov    dh,0xa6
   140010ab7:	jge    0x140010a7d
   140010ab9:	retf   
   140010aba:	and    ch,BYTE PTR [rax-0x51ec5819]
   140010ac0:	(bad)  
   140010ac1:	repnz ss hlt 
   140010ac4:	fadd   st,st(3)
   140010ac6:	rex.WR scas al,BYTE PTR es:[rdi]
   140010ac8:	pop    rdi
   140010ac9:	(bad)  
   140010aca:	mov    eax,0x8ba59a7d
   140010acf:	(bad)  
   140010ad0:	fwait
   140010ad1:	neg    DWORD PTR [rdi-0x3b55a64a]
   140010ad7:	call   0x10e6dee9d
   140010adc:	jg     0x140010b19
   140010ade:	icebp  
   140010adf:	(bad)  
   140010ae0:	paddq  mm1,QWORD PTR [rbp+0x21]
   140010ae4:	mov    esp,0x1495eb2d
   140010ae9:	xor    al,0xf7
   140010aeb:	(bad)  
   140010aec:	shl    BYTE PTR [rcx],1
   140010aee:	add    esp,DWORD PTR [rcx]
   140010af0:	cmp    DWORD PTR [rdx+0x48],edx
   140010af3:	rex.W jns 0x140010a91
   140010af6:	cmp    eax,0x6da0ca58
   140010afb:	rex.WRXB add BYTE PTR [r9+0x25],r13b
   140010aff:	(bad)  
   140010b00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010b01:	movabs ds:0x2831126868d04af8,eax
   140010b0a:	sub    eax,0x8ce2615
   140010b0f:	rex.B
   140010b10:	rex.X
   140010b11:	div    DWORD PTR ds:[rdi+rcx*2]
   140010b15:	rex adc DWORD PTR [rbx+0x46800716],edi
   140010b1c:	or     al,0x1f
   140010b1e:	call   0xdd351a93
   140010b23:	sbb    BYTE PTR [rip+0xffffffff82674c63],0x35        # 0xc268578d
   140010b2a:	sbb    al,0x6a
   140010b2c:	(bad)  
   140010b2d:	add    bl,ah
   140010b2f:	adc    ecx,ebx
   140010b31:	jo     0x140010ac7
   140010b33:	xchg   esp,eax
   140010b34:	(bad)  
   140010b35:	xchg   ecx,eax
   140010b36:	push   rdx
   140010b37:	mov    es,esp
   140010b39:	adc    DWORD PTR [rax],edx
   140010b3b:	cmp    al,0x7a
   140010b3d:	fistp  QWORD PTR [rbx]
   140010b3f:	mov    ecx,0x783c2cfa
   140010b44:	sub    bl,BYTE PTR [rbp+0x3e]
   140010b47:	(bad)  
   140010b48:	and    al,0xf0
   140010b4a:	mov    edx,0xfc00de91
   140010b4f:	pop    rsi
   140010b50:	in     eax,0x16
   140010b52:	mov    esi,DWORD PTR [rcx+0x6c]
   140010b55:	cmp    al,0xfc
   140010b57:	rcr    BYTE PTR [rdi-0x70],1
   140010b5a:	(bad)  
   140010b5c:	addr32 rex.X mov ebp,0x5f360b8f
   140010b63:	sbb    r14,QWORD PTR [r9+r9*4+0x68369dbf]
   140010b6b:	or     BYTE PTR [rax+0x1b],bh
   140010b6e:	ret    0xcde1
   140010b71:	ret    
   140010b72:	jnp    0x140010b5f
   140010b74:	rcl    DWORD PTR [rdi+0x411f584e],1
   140010b7a:	mov    ebp,0xdbaeeca8
   140010b7f:	rcl    bl,0x18
   140010b82:	stos   BYTE PTR es:[rdi],al
   140010b83:	movzx  eax,BYTE PTR [rax]
   140010b86:	xchg   BYTE PTR [rbp-0xa],dh
   140010b89:	jne    0x140010b53
   140010b8b:	cmp    eax,0xcc971aaa
   140010b90:	and    dl,cl
   140010b92:	ja     0x140010bc5
   140010b94:	rex.WRXB or BYTE PTR [r10],r10b
   140010b97:	add    cl,ch
   140010b99:	jo     0x140010b67
   140010b9b:	xchg   ebp,eax
   140010b9c:	(bad)  
   140010b9d:	fiadd  WORD PTR [rbx-0x6804e39]
   140010ba3:	sub    al,0x87
   140010ba5:	mov    dh,0x5f
   140010ba7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010ba8:	mov    esp,0xf6cc8db6
   140010bad:	or     BYTE PTR [rsi],dh
   140010baf:	or     BYTE PTR [rbx],dh
   140010bb1:	jle    0x140010bd9
   140010bb3:	int    0xfb
   140010bb5:	mov    ecx,DWORD PTR [rbp+0x138aa23f]
   140010bbb:	stos   DWORD PTR es:[rdi],eax
   140010bbc:	std    
   140010bbd:	shl    ebp,cl
   140010bbf:	lock sub eax,0xfef12f7b
   140010bc5:	jae    0x140010be3
   140010bc7:	outs   dx,DWORD PTR ds:[rsi]
   140010bc8:	xor    al,0xdb
   140010bca:	mov    esp,0x8f9887f8
   140010bcf:	rex.WRX cmp QWORD PTR [rdi-0x3aece86b],r15
   140010bd6:	jbe    0x140010bf6
   140010bd8:	push   rax
   140010bd9:	xchg   esp,eax
   140010bda:	or     al,0xe0
   140010bdc:	rex.WB
   140010bdd:	rex.WX adc QWORD PTR [rsi],rcx
   140010be0:	(bad)  
   140010be1:	add    ecx,ebp
   140010be3:	popf   
   140010be4:	push   0x335ff488
   140010be9:	cs (bad) 
   140010beb:	rex.B iret 
   140010bed:	test   BYTE PTR [rbx-0x5c],ah
   140010bf0:	shr    DWORD PTR [rdx+0x17],cl
   140010bf3:	or     ebp,DWORD PTR [rcx+0x23]
   140010bf6:	add    DWORD PTR [rbx],edi
   140010bf8:	pop    rcx
   140010bf9:	add    edi,esp
   140010bfb:	xchg   esp,eax
   140010bfc:	outs   dx,BYTE PTR ds:[rsi]
   140010bfd:	cmp    DWORD PTR [rdx+0x72],edx
   140010c00:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010c01:	xchg   ebx,eax
   140010c02:	xor    BYTE PTR [rsp+rsi*8+0x45366759],cl
   140010c09:	mov    ah,0xb
   140010c0b:	push   rdx
   140010c0c:	(bad)  
   140010c0d:	ins    DWORD PTR es:[rdi],dx
   140010c0e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140010c0f:	retf   0x7a40
   140010c12:	ins    DWORD PTR es:[rdi],dx
   140010c13:	popf   
   140010c14:	leave  
   140010c15:	xor    DWORD PTR [esi+0x54],0x5f666b58
   140010c1d:	(bad)  
   140010c1e:	rcr    BYTE PTR [rbx],cl
   140010c20:	sbb    bh,0x8b
   140010c23:	fadd   QWORD PTR [rdx-0x7]
   140010c26:	(bad)  
   140010c27:	jp     0x140010c0c
   140010c29:	rex.XB (bad) 
   140010c2b:	loop   0x140010bef
   140010c2d:	hlt    
   140010c2e:	(bad)  
   140010c2f:	(bad)  
   140010c31:	jmp    0x140010be0
   140010c33:	out    dx,eax
   140010c34:	sub    BYTE PTR [rbp-0x64],ah
   140010c37:	mov    ecx,0xfb4bd17
   140010c3c:	add    ecx,edx
   140010c3e:	(bad)  
   140010c3f:	xchg   edx,eax
   140010c40:	sbb    esi,DWORD PTR [rdx+0xe]
   140010c43:	out    dx,eax
   140010c44:	je     0x176354b3f
   140010c4a:	(bad)  
   140010c4b:	(bad)  
   140010c4c:	xchg   al,bh
   140010c4e:	cdq    
   140010c4f:	mov    eax,0xd763e213
   140010c54:	icebp  
   140010c55:	clc    
   140010c56:	xor    edi,ebp
   140010c58:	(bad)  
   140010c5a:	mov    dh,0x4a
   140010c5c:	repz (bad) 
   140010c5f:	(bad)  
   140010c60:	test   esp,ebx
   140010c62:	rex.WRXB (bad) 
   140010c64:	sub    BYTE PTR [rdi-0x1c093d9],0x6e
   140010c6b:	hlt    
   140010c6c:	enter  0xecc3,0xdf
   140010c70:	mov    eax,0x2f7f1d62
   140010c75:	loope  0x140010ced
   140010c77:	scas   al,BYTE PTR es:[rdi]
   140010c78:	movabs ds:0xff799c04c626da61,al
   140010c81:	xor    al,0xef
   140010c83:	scas   eax,DWORD PTR es:[rdi]
   140010c84:	xor    ch,al
   140010c86:	rex.WRXB loope 0x140010d08
   140010c89:	pop    rdx
   140010c8a:	int    0x37
   140010c8c:	xchg   edi,eax
   140010c8d:	rol    DWORD PTR [rdx+0x2d2ff066],cl
   140010c93:	std    
   140010c94:	xor    eax,0xc9140437
   140010c99:	iret   
   140010c9a:	mov    ch,0x5e
   140010c9c:	(bad)  
   140010c9d:	movabs ds:0x21cf5e64e2046ae1,eax
   140010ca6:	(bad)  
   140010ca7:	mov    eax,0x44c08076
   140010cac:	or     cl,BYTE PTR [rdx-0x593ebf33]
   140010cb2:	cli    
   140010cb3:	rex.WX sti 
   140010cb5:	jl     0x140010cce
   140010cb7:	cmc    
   140010cb8:	rex.WRXB loopne 0x140010c62
   140010cbb:	jmp    0x10d655f1b
   140010cc0:	call   FWORD PTR [rcx+0x8]
   140010cc3:	outs   dx,DWORD PTR ds:[rsi]
   140010cc4:	sbb    al,0x0
   140010cc6:	mov    ch,0xf0
   140010cc8:	(bad)  
   140010cc9:	cmp    DWORD PTR [rcx],esp
   140010ccb:	cmp    BYTE PTR [rdx],bh
   140010ccd:	retf   
   140010cce:	xchg   BYTE PTR [rdi+0x4c],al
   140010cd1:	and    BYTE PTR [rdi-0x6cfc58e0],dh
   140010cd7:	jbe    0x140010c5a
   140010cd9:	nop
   140010cda:	sbb    BYTE PTR [rcx+0x28],ch
   140010cdd:	scas   al,BYTE PTR es:[rdi]
   140010cde:	xor    DWORD PTR [rcx],0xffffffc4
   140010ce1:	hlt    
   140010ce2:	sbb    BYTE PTR [rdx-0x3],bpl
   140010ce6:	sbb    DWORD PTR [rdi],0xffc7d397
   140010cec:	scas   al,BYTE PTR es:[rdi]
   140010ced:	ds clc 
   140010cef:	add    ch,BYTE PTR [rcx]
   140010cf1:	add    bh,BYTE PTR [rax+0x1d]
   140010cf4:	add    DWORD PTR [rcx+0x56f801bd],0xffca16e5
   140010cfe:	fdivr  DWORD PTR [rbp-0x15]
   140010d01:	(bad)  
   140010d02:	sbb    eax,edx
   140010d04:	cld    
   140010d05:	rex.X xor ebx,ebp
   140010d08:	jne    0x140010d77
   140010d0a:	mov    ecx,0x76a8292d
   140010d0f:	mov    esp,0xc7dfec74
   140010d14:	(bad)  
   140010d15:	repz jmp 0x11dcc2b8c
   140010d1b:	(bad)  
   140010d1c:	out    0xbd,eax
   140010d1e:	mov    bh,0x98
   140010d21:	xchg   ecx,eax
   140010d22:	push   rax
   140010d23:	mov    ch,0xc5
   140010d25:	cmp    ah,dh
   140010d27:	ret    0x9b7c
   140010d2a:	add    BYTE PTR [rsp+rdi*4+0x102326bc],dl
   140010d31:	xor    ch,BYTE PTR [rax+0x1fd45d26]
   140010d37:	nop
   140010d38:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140010d39:	data16 cmp bl,BYTE PTR [rsi-0x1a]
   140010d3d:	(bad)  
   140010d3e:	xchg   ebx,eax
   140010d3f:	out    dx,eax
   140010d40:	mov    ecx,eax
   140010d42:	cmc    
   140010d43:	test   BYTE PTR [rbx-0x54],0x5f
   140010d47:	cmp    al,0x4d
   140010d49:	jne    0x140010dc4
   140010d4b:	or     ebx,DWORD PTR [rcx+0x3fe71aed]
   140010d51:	sub    DWORD PTR [rdx+0x494fe266],ecx
   140010d57:	(bad)  
   140010d59:	adc    esi,ebx
   140010d5b:	loope  0x140010d11
   140010d5d:	shr    eax,0xe1
   140010d60:	jo     0x140010d94
   140010d62:	pslld  mm4,QWORD PTR [rip+0xffffffff81ef4d65]        # 0xc1f05ace
   140010d69:	cmp    DWORD PTR [rbx],esp
   140010d6b:	(bad)  
   140010d6c:	rex.WRXB rol QWORD PTR [rip+0xffffffffd273e2d0],cl        # 0x11274f043
   140010d73:	(bad)  
   140010d74:	sub    ecx,ecx
   140010d76:	push   rdi
   140010d77:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010d78:	push   rdi
   140010d79:	xor    eax,0x37fce07b
   140010d7e:	mov    ah,0xcf
   140010d80:	pop    rcx
   140010d81:	sub    dl,BYTE PTR [rax]
   140010d83:	(bad)  
   140010d84:	(bad)  
   140010d85:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010d86:	rex.W add spl,0xd8
   140010d8a:	and    eax,0xfbc8110f
   140010d8f:	in     eax,dx
   140010d90:	sbb    al,0x85
   140010d92:	jbe    0x140010d4a
   140010d94:	xchg   edi,eax
   140010d95:	ficom  WORD PTR [rcx+0x8da0423]
   140010d9b:	(bad)  
   140010d9c:	and    al,BYTE PTR [rip+0x7bbfdcb1]        # 0x1bbc0ea53
   140010da2:	fsub   st(1),st
   140010da4:	movabs rbx,0xdf57037183da4b70
   140010dae:	retf   
   140010daf:	in     eax,0x4f
   140010db1:	cld    
   140010db2:	pop    rbp
   140010db3:	(bad)  
   140010db4:	cld    
   140010db5:	sti    
   140010db6:	mov    esp,0xde80d30e
   140010dbb:	add    ah,bh
   140010dbd:	fiadd  WORD PTR [rax+rsi*1-0x4e]
   140010dc1:	iret   
   140010dc2:	sbb    edx,DWORD PTR [rsi+0x7]
   140010dc5:	(bad)  
   140010dc6:	sub    al,0x51
   140010dc8:	call   QWORD PTR [rdx]
   140010dca:	sti    
   140010dcb:	mov    ebx,0x40776a0b
   140010dd0:	or     al,0x87
   140010dd2:	int    0x63
   140010dd4:	imul   esi,DWORD PTR [rdi],0x4f
   140010dd7:	rex.WRXB mov r12b,0xdc
   140010dda:	shl    cl,1
   140010ddc:	in     eax,0x37
   140010dde:	mov    dh,0x6
   140010de0:	pop    rdi
   140010de1:	rex.WXB (bad) 
   140010de3:	and    eax,0x4581c344
   140010de8:	or     esp,DWORD PTR [rdx-0x71220b96]
   140010dee:	movabs ds:0x4f50f27252706b5b,al
   140010df7:	popf   
   140010df8:	cmp    ecx,eax
   140010dfa:	fcom   QWORD PTR [rax]
   140010dfc:	add    edi,DWORD PTR [rax-0x4e049946]
   140010e02:	ja     0x140010e56
   140010e04:	(bad)  
   140010e05:	jle    0x140010e0f
   140010e07:	mov    ecx,0xd6e2c5b6
   140010e0c:	sub    DWORD PTR [rsi],edx
   140010e0e:	mov    edx,0x73e77fb9
   140010e13:	xchg   edx,eax
   140010e14:	ret    0x247f
   140010e17:	and    bh,bh
   140010e19:	mov    cl,0xa4
   140010e1b:	adc    eax,0x86dabb69
   140010e20:	(bad)  
   140010e21:	imul   eax,DWORD PTR [rax],0x39666188
   140010e27:	ins    BYTE PTR es:[rdi],dx
   140010e28:	rex.WRXB pop r13
   140010e2a:	jle    0x140010dd9
   140010e2c:	repnz (bad) 
   140010e2e:	in     eax,0xd5
   140010e30:	cld    
   140010e31:	ja     0x140010e0e
   140010e33:	cmp    cl,BYTE PTR [rbx+rbx*1+0x21]
   140010e37:	rex.WR movabs al,fs:0x92c3474adeb3b573
   140010e42:	(bad)  
   140010e43:	xlat   BYTE PTR ds:[rbx]
   140010e44:	or     al,0xc2
   140010e46:	movabs eax,ds:0x4526c099bc404da0
   140010e4f:	rex.XB
   140010e50:	cs ja  0x140010e85
   140010e53:	mov    dh,0x58
   140010e55:	movabs ds:0x4d39a0940c361285,al
   140010e5e:	rex.WB
   140010e5f:	shl    BYTE PTR gs:[rdi+rsi*1],0xb0
   140010e64:	in     eax,0x2f
   140010e66:	je     0x140010e86
   140010e68:	sbb    ebx,DWORD PTR [rsi+0x10]
   140010e6b:	jmp    0x18b5f052f
   140010e70:	xor    ch,BYTE PTR [rax]
   140010e72:	(bad)  
   140010e73:	add    eax,0x52d09024
   140010e78:	mov    dl,BYTE PTR [rip+0xffffffffca3c9f66]        # 0x10a3dade4
   140010e7e:	in     al,0x1f
   140010e80:	popf   
   140010e81:	xor    BYTE PTR [ebp-0x69],cl
   140010e85:	cdq    
   140010e86:	adc    DWORD PTR [rsi+0x6f4936e7],0x0
   140010e8d:	mov    esi,0xfd079915
   140010e92:	mov    cl,ch
   140010e94:	movabs ds:0xf359965f93243e59,al
   140010e9d:	movabs al,ds:0x5ccdf25dd5232ed6
   140010ea6:	std    
   140010ea7:	cmp    eax,0xe0640247
   140010eac:	mov    gs,esp
   140010eae:	fxch   st(1)
   140010eb0:	cmc    
   140010eb1:	jnp    0x140010f1a
   140010eb3:	mov    ebp,0x9fb789ff
   140010eb8:	cmp    al,0xbc
   140010eba:	in     ax,0x4f
   140010ebd:	movabs rdi,0xfef26c95c41f6666
   140010ec7:	movabs eax,ds:0xf56119ea4057f0d
   140010ed0:	jno    0x140010ecb
   140010ed2:	mov    edi,esi
   140010ed4:	push   rdx
   140010ed5:	test   al,al
   140010ed7:	je     0x140010ed4
   140010ed9:	and    eax,0x514fb6d6
   140010ede:	pop    rbp
   140010edf:	mov    ebp,0xd471d488
   140010ee4:	ja     0x140010ebc
   140010ee6:	xor    ebp,ebp
   140010ee8:	mov    al,0xfe
   140010eea:	(bad)  
   140010eeb:	rex.W (bad) 
   140010eed:	fmul   st,st(0)
   140010eef:	(bad)  
   140010ef0:	rex.RXB push r14
   140010ef2:	cli    
   140010ef3:	sbb    BYTE PTR [rip+0x1cb025b4],cl        # 0x15cb134ad
   140010ef9:	sbb    ah,ch
   140010efb:	xchg   ebp,eax
   140010efc:	cmp    eax,0xcacc5fb2
   140010f01:	fst    QWORD PTR [rsi+0x8]
   140010f04:	fcmove st,st(3)
   140010f06:	fisub  DWORD PTR [rip+0xfffffffff904a506]        # 0x13905b412
   140010f0c:	movabs al,ds:0xa3d88e7bf61fd664
   140010f15:	sbb    ecx,ebp
   140010f17:	rex.RXB (bad) 
   140010f19:	mov    BYTE PTR [rbx-0x2ea558cf],0x4b
   140010f20:	(bad)  
   140010f21:	xor    al,0x6d
   140010f24:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140010f25:	shr    DWORD PTR [rax],cl
   140010f27:	(bad)  
   140010f28:	shr    DWORD PTR [rbx],0x12
   140010f2b:	push   rsi
   140010f2c:	adc    bl,dh
   140010f2e:	jl     0x140010edb
   140010f30:	adc    BYTE PTR [rax],bl
   140010f32:	ds nop
   140010f34:	shl    BYTE PTR [rbx],cl
   140010f36:	repnz div BYTE PTR [rdx]
   140010f39:	rex xchg eax,eax
   140010f3b:	repz std 
   140010f3d:	or     BYTE PTR [rcx+0x68],cl
   140010f40:	mov    ebx,0x7af1108a
   140010f45:	or     eax,0xc7f679b4
   140010f4a:	in     al,0xc5
   140010f4c:	(bad)  
   140010f4d:	jle    0x140010fa0
   140010f4f:	(bad)  
   140010f50:	sti    
   140010f51:	mul    DWORD PTR [rsp+rcx*4]
   140010f54:	lock jne 0x140010ee9
   140010f57:	(bad)  
   140010f58:	hlt    
   140010f59:	(bad)  
   140010f5a:	loopne 0x140010ef7
   140010f5c:	leave  
   140010f5d:	sub    eax,0x2c6f3ec8
   140010f62:	idiv   bh
   140010f64:	xchg   edx,eax
   140010f65:	fwait
   140010f66:	retf   0xa807
   140010f69:	mov    esi,DWORD PTR [rsi]
   140010f6b:	inc    BYTE PTR [rbx+0x2ae9b156]
   140010f71:	movabs ds:0x634bae16dfee8519,eax
   140010f7a:	mov    eax,0x3a168a41
   140010f7f:	int    0x3a
   140010f81:	shl    esi,0xf5
   140010f84:	in     eax,0xd0
   140010f86:	ds (bad) 
   140010f88:	loopne 0x140010feb
   140010f8a:	and    DWORD PTR [rdx+0x48],esi
   140010f8d:	and    eax,0x58ab4d33
   140010f92:	mov    dh,0xd4
   140010f94:	push   rdi
   140010f95:	enter  0xb52d,0xae
   140010f99:	sahf   
   140010f9a:	jno    0x140010f9a
   140010f9c:	mov    cl,0x77
   140010f9e:	movabs ds:0xede5817cbd33f71b,eax
   140010fa7:	push   rbx
   140010fa8:	mov    WORD PTR [rdi-0x50c8dd31],?
   140010fae:	rex.RB cli 
   140010fb0:	mov    cl,0xe1
   140010fb2:	(bad)  
   140010fb3:	(bad)  
   140010fb4:	cmp    al,0xff
   140010fb6:	ret    0xbfbc
   140010fb9:	(bad)  
   140010fba:	mov    esp,0x9bf6dc84
   140010fbf:	sbb    BYTE PTR cs:[rax+0x6e],0x8b
   140010fc4:	sub    DWORD PTR [rbp+0x7c],esi
   140010fc7:	scas   al,BYTE PTR es:[rdi]
   140010fc8:	sub    eax,0x89e525fb
   140010fcd:	jns    0x140010f8e
   140010fcf:	mov    bl,0x32
   140010fd1:	lahf   
   140010fd2:	int3   
   140010fd3:	(bad)  
   140010fd4:	(bad)  
   140010fd5:	mov    DWORD PTR [rbx],esp
   140010fd7:	nop
   140010fd8:	cmp    edi,edi
   140010fda:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010fdb:	adc    edi,DWORD PTR [rdx-0x19]
   140010fde:	mov    esp,0x96aac81d
   140010fe3:	xchg   esp,eax
   140010fe4:	xor    r8,r15
   140010fe7:	jg     0x140011057
   140010fe9:	cmp    BYTE PTR [rax-0x701bf25a],ch
   140010fef:	in     eax,0xe7
   140010ff1:	jb     0x14001101e
   140010ff3:	xor    DWORD PTR [rbp+0x2134a6ed],ebx
   140010ff9:	mov    ebx,0xc088b76
   140010ffe:	pshufw mm3,QWORD PTR [rsi-0x58],0x25
   140011003:	lods   al,BYTE PTR fs:[rsi]
   140011005:	ret    0xf8b9
   140011008:	adc    ebx,DWORD PTR [rdx+0x21501236]
   14001100e:	(bad)  
   14001100f:	and    BYTE PTR [rax-0x39],cl
   140011012:	test   al,0xb1
   140011014:	xor    eax,0xcbfd921
   140011019:	mov    dh,al
   14001101b:	test   al,0x60
   14001101d:	icebp  
   14001101e:	rex.WRB fdivr QWORD PTR [r8+0xe]
   140011022:	clc    
   140011023:	ins    DWORD PTR es:[rdi],dx
   140011024:	mov    esi,0x2dbbadb1
   140011029:	rcr    BYTE PTR [rbx],cl
   14001102b:	sbb    bh,0x4d
   14001102e:	outs   dx,BYTE PTR ds:[rsi]
   14001102f:	xchg   ecx,eax
   140011030:	idiv   DWORD PTR [rdi+0x7f7f2e47]
   140011036:	cmp    ebx,esp
   140011038:	(bad)  
   140011039:	or     BYTE PTR [rsi],cl
   14001103b:	(bad)
   14001103e:	adc    BYTE PTR [rdi+0x2b],bh
   140011041:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011042:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011043:	mov    dh,0x4b
   140011046:	stc    
   140011047:	in     al,dx
   140011048:	sbb    al,0x1f
   14001104a:	fisttp WORD PTR [rax+0x3a]
   14001104d:	and    DWORD PTR [rsi],edi
   14001104f:	(bad)  
   140011050:	xchg   edi,eax
   140011051:	fidiv  DWORD PTR [rdx]
   140011053:	pop    rax
   140011054:	sub    al,ah
   140011056:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011057:	mov    ebx,0xe52f8b13
   14001105c:	repz rex.X push 0x6bd26d1b
   140011063:	sub    DWORD PTR [rdx],ebp
   140011065:	movabs ds:0xcff7e7696905c801,al
   14001106f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011070:	rex.WR
   140011071:	ss out dx,eax
   140011073:	out    0xca,eax
   140011075:	xchg   ebx,eax
   140011076:	out    dx,eax
   140011077:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011078:	cwde   
   140011079:	int    0x68
   14001107b:	cs popf 
   14001107d:	(bad)  
   14001107e:	in     eax,dx
   14001107f:	loop   0x14001100c
   140011081:	adc    al,0x9
   140011083:	stc    
   140011084:	rex.WRXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140011086:	sub    al,0x92
   140011088:	not    DWORD PTR [rdi+0x3809fe08]
   14001108e:	rex.X
   14001108f:	rex.WRX pop rax
   140011091:	xor    ecx,DWORD PTR [rcx+0x2e]
   140011094:	sub    DWORD PTR [rcx],ecx
   140011096:	popf   
   140011097:	rcr    BYTE PTR [rax-0x1097900a],1
   14001109d:	in     al,dx
   14001109e:	ss je  0x14001103f
   1400110a1:	rex.WRXB add r10,r10
   1400110a4:	fwait
   1400110a5:	push   rdx
   1400110a6:	imul   edx,DWORD PTR [rax-0x4f8be47c],0x39d17983
   1400110b0:	and    ebx,DWORD PTR [rbx+0x71c734df]
   1400110b6:	nop
   1400110b7:	or     BYTE PTR [rdx],al
   1400110b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400110ba:	push   rax
   1400110bb:	sub    BYTE PTR [rbp-0x79],bl
   1400110be:	pushf  
   1400110bf:	nop
   1400110c0:	ja     0x1400110f2
   1400110c2:	test   DWORD PTR [rsp+riz*4-0x5b87795e],esp
   1400110c9:	imul   ebp,DWORD PTR [rbp+rbp*1-0x3b],0x66
   1400110ce:	ins    BYTE PTR es:[rdi],dx
   1400110cf:	(bad)  
   1400110d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400110d1:	pushf  
   1400110d2:	mov    eax,0x2337ed0e
   1400110d7:	cld    
   1400110d8:	jns    0x140011101
   1400110da:	popf   
   1400110db:	and    esi,DWORD PTR [rdx-0x4b05db83]
   1400110e1:	pop    rbp
   1400110e2:	(bad)  
   1400110e3:	jl     0x14001112f
   1400110e5:	rex.WXB int3 
   1400110e7:	ds mov edi,0x5defecc6
   1400110ed:	movabs eax,ds:0xd0047b6e8292d19c
   1400110f6:	ja     0x1400110fb
   1400110f8:	jle    0x14001111d
   1400110fa:	imul   ebx,DWORD PTR [rcx+0x7ff4397e],0x1de37173
   140011104:	rex.XB popf 
   140011106:	std    
   140011107:	(bad)
   14001110c:	or     DWORD PTR [rsi-0x46],edi
   14001110f:	xchg   DWORD PTR [rdi+0x7de3dbee],ebx
   140011115:	mov    ch,BYTE PTR [rcx-0x64]
   140011118:	int3   
   140011119:	jrcxz  0x1400110c1
   14001111b:	jno    0x14001113f
   14001111d:	(bad)  
   14001111e:	lahf   
   14001111f:	rex.WRX jo 0x140011135
   140011122:	pop    rbx
   140011123:	xchg   ebp,eax
   140011124:	cmp    cl,BYTE PTR [ecx+0x29d3791d]
   14001112b:	cmp    bl,BYTE PTR [rbp+0x42536612]
   140011131:	cmp    eax,0xe938eb41
   140011136:	(bad)  
   140011137:	jmp    0x140011117
   140011139:	jae    0x1400110fc
   14001113b:	pop    rdx
   14001113c:	jp     0x140011181
   14001113e:	sbb    eax,0x1ca9ffb9
   140011143:	cwde   
   140011144:	cwde   
   140011145:	test   BYTE PTR [rbp+0x1a],dh
   140011148:	or     DWORD PTR [rsi-0x39],edx
   14001114b:	rex.W and al,BYTE PTR [rbx-0x3b572e7a]
   140011152:	hlt    
   140011153:	add    DWORD PTR [rax+0x2],ebp
   140011156:	test   DWORD PTR [rdx],ebp
   140011158:	pop    rbx
   140011159:	iret   
   14001115a:	jl     0x140011164
   14001115c:	push   rsi
   14001115d:	(bad)  
   14001115e:	push   rdx
   14001115f:	pop    rdi
   140011160:	(bad)  [rdx+0x75]
   140011163:	sti    
   140011164:	adc    al,0xc3
   140011166:	rex.WXB out 0x71,eax
   140011169:	mov    ebx,0x9ff223d7
   14001116e:	rex.XB pop r9
   140011170:	imul   edi,edx,0x11
   140011173:	leave  
   140011174:	movabs eax,ds:0x2de671fc473093bf
   14001117d:	fisttp DWORD PTR [rcx-0x41]
   140011180:	xchg   edx,eax
   140011181:	ret    
   140011182:	jp     0x1400111cb
   140011184:	(bad)  
   140011185:	std    
   140011186:	outs   dx,DWORD PTR ds:[rsi]
   140011187:	cmp    eax,0xa7a10924
   14001118c:	push   rbx
   14001118d:	or     eax,0xe77fb948
   140011192:	jge    0x1400111bd
   140011194:	jne    0x140011186
   140011196:	imul   esi,DWORD PTR [rsi],0xc80f0760
   14001119c:	(bad)  
   14001119d:	and    eax,ebx
   14001119f:	jrcxz  0x140011135
   1400111a1:	retf   
   1400111a2:	(bad)  
   1400111a3:	in     eax,0xcf
   1400111a5:	xchg   BYTE PTR [rbx],ah
   1400111a7:	test   esi,edi
   1400111a9:	sar    dh,cl
   1400111ab:	popf   
   1400111ac:	pop    rdi
   1400111ad:	imul   edx,ebx,0xffffff86
   1400111b0:	mov    ecx,0xba292320
   1400111b5:	in     eax,0x1f
   1400111b7:	jns    0x1400111e9
   1400111b9:	rex.W (bad) 
   1400111bb:	sub    dl,BYTE PTR [rcx]
   1400111bd:	addr32 mov esi,es
   1400111c0:	(bad)  
   1400111c1:	jne    0x14001120b
   1400111c3:	movs   BYTE PTR es:[rdi],BYTE PTR ss:[rsi]
   1400111c5:	and    DWORD PTR [rbx+0x70],0xffffffe0
   1400111c9:	pop    rdx
   1400111ca:	mov    ah,0x47
   1400111cc:	fiadd  WORD PTR [rip+0xfffffffff0929547]        # 0x13093a719
   1400111d2:	(bad)  
   1400111d3:	iret   
   1400111d4:	retf   
   1400111d5:	xlat   BYTE PTR ds:[rbx]
   1400111d6:	fmulp  st(6),st
   1400111d8:	jmp    0x140011186
   1400111da:	rex.XB mov r8b,0x8f
   1400111dd:	add    BYTE PTR [rsi+0x25],ch
   1400111e0:	mov    bh,0x68
   1400111e2:	lock cmp DWORD PTR [rsi-0x1ed17020],edi
   1400111e9:	jg     0x140011224
   1400111eb:	mov    eax,0xd8d306c1
   1400111f0:	(bad)  
   1400111f1:	sbb    esi,DWORD PTR [rbx-0xf]
   1400111f4:	js     0x140011219
   1400111f6:	rex.RXB jbe 0x140011261
   1400111f9:	repnz shl dh,1
   1400111fc:	jge    0x140011270
   1400111fe:	and    DWORD PTR [rdx-0x10b068a5],edi
   140011204:	mov    cl,0xe8
   140011206:	sar    BYTE PTR [rsp+rdi*2],0xfa
   14001120a:	pop    rbx
   14001120b:	rex.X stos BYTE PTR es:[rdi],al
   14001120d:	cmps   DWORD PTR gs:[rsi],DWORD PTR es:[rdi]
   14001120f:	xchg   ebp,eax
   140011210:	jp     0x1400111a7
   140011212:	outs   dx,BYTE PTR ds:[rsi]
   140011213:	(bad)  
   140011214:	sub    al,0xe9
   140011216:	mov    ecx,0x597bc924
   14001121b:	(bad)  
   14001121c:	xchg   ecx,eax
   14001121d:	(bad)  
   14001121e:	enter  0x274d,0xec
   140011222:	sbb    eax,0xdf97237f
   140011227:	clc    
   140011228:	sub    al,0xd5
   14001122a:	fs (bad) 
   14001122c:	mov    dh,0x5f
   14001122e:	movs   DWORD PTR es:[rdi],DWORD PTR fs:[rsi]
   140011230:	jrcxz  0x14001122f
   140011232:	movsxd eax,DWORD PTR [rdi]
   140011234:	pop    rsp
   140011235:	(bad)  
   140011236:	jge    0x140011245
   140011238:	(bad)  
   140011239:	stc    
   14001123a:	ja     0x140011250
   14001123c:	stos   BYTE PTR es:[rdi],al
   14001123d:	adc    al,0x4e
   14001123f:	jae    0x14001121a
   140011241:	(bad)  
   140011242:	scas   eax,DWORD PTR es:[rdi]
   140011243:	not    DWORD PTR [rdi+0x18a8f751]
   140011249:	sbb    DWORD PTR [rsp+rsi*4],eax
   14001124c:	test   DWORD PTR [rcx],0x4c6f68ed
   140011252:	jno    0x14001128c
   140011254:	mov    al,0xea
   140011256:	(bad)  
   140011257:	mov    ebp,0x292835b1
   14001125c:	(bad)  
   14001125d:	outs   dx,BYTE PTR ds:[rsi]
   14001125e:	and    DWORD PTR [rcx+rcx*8+0x3a],ecx
   140011262:	sub    al,0x59
   140011264:	loope  0x14001121a
   140011266:	jae    0x140011256
   140011268:	xchg   edx,eax
   140011269:	rex.XB sti 
   14001126b:	xchg   esp,eax
   14001126c:	adc    eax,0x1c7cb9b4
   140011271:	mul    cl
   140011273:	sub    al,0x5d
   140011275:	mov    bh,bl
   140011277:	iret   
   140011278:	xchg   ebp,eax
   140011279:	xchg   edx,eax
   14001127a:	mov    eax,0x3fe103f5
   14001127f:	pop    rcx
   140011280:	xor    DWORD PTR [rip+0xffffffffef35230d],0x1d88e2f        # 0x12f363597
   14001128a:	enter  0xe37c,0x53
   14001128e:	fwait
   14001128f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011290:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011291:	(bad)  
   140011292:	mov    esi,0xc250f2b3
   140011297:	ins    BYTE PTR es:[rdi],dx
   140011298:	movabs al,ds:0x9b909d19094e41dd
   1400112a1:	lahf   
   1400112a2:	add    esi,edi
   1400112a4:	(bad)  
   1400112a5:	pop    rsi
   1400112a6:	rex.RXB imul r8d,DWORD PTR [r8+0x6f],0x7adc9200
   1400112ae:	push   rbp
   1400112af:	pop    rsi
   1400112b0:	sete   bl
   1400112b3:	stos   BYTE PTR es:[rdi],al
   1400112b4:	sbb    al,0xdd
   1400112b6:	mov    edi,0xdcd7f4b9
   1400112bb:	cs rex.WRXB jmp 0x1400112bd
   1400112bf:	scas   al,BYTE PTR es:[rdi]
   1400112c0:	rex.WRB popf 
   1400112c2:	or     ch,al
   1400112c4:	fs (bad) 
   1400112c6:	(bad)  
   1400112c7:	out    0xec,eax
   1400112c9:	sbb    BYTE PTR [rsi+0x39],0xff
   1400112cd:	jmp    0x1400112bf
   1400112cf:	out    dx,eax
   1400112d0:	adc    esi,DWORD PTR [rdi-0x23]
   1400112d3:	(bad)  
   1400112d4:	xor    r8b,BYTE PTR [rdx+0x6f]
   1400112d8:	(bad)  
   1400112d9:	and    BYTE PTR [rbx+0x2a52d6],dh
   1400112df:	sbb    eax,0x64ff8fa5
   1400112e4:	or     al,0x21
   1400112e6:	add    eax,0xdb6fe9ae
   1400112eb:	xchg   edi,eax
   1400112ec:	rex retf 
   1400112ee:	xchg   BYTE PTR [rbx+0x2],ch
   1400112f1:	(bad)  
   1400112f2:	jnp    0x1400112c2
   1400112f4:	mov    esp,0xc2dc39f5
   1400112f9:	sbb    dh,ch
   1400112fb:	(bad)
   1400112fe:	fidivr DWORD PTR [rsi]
   140011300:	int    0xf0
   140011302:	mov    dl,0x79
   140011304:	jmp    QWORD PTR [rsi-0x26]
   140011307:	cs jg  0x140011377
   14001130a:	cmp    al,0x7f
   14001130c:	(bad)  
   14001130d:	mov    dh,0xca
   14001130f:	(bad)  
   140011310:	loopne 0x140011346
   140011312:	loopne 0x140011381
   140011314:	xchg   ecx,eax
   140011315:	mov    WORD PTR [rsp+rsi*8+0xf936dc9],gs
   14001131c:	and    esp,DWORD PTR [rdx+0x10]
   14001131f:	or     ebp,eax
   140011321:	cmp    esi,DWORD PTR [rax]
   140011323:	leave  
   140011324:	(bad)  
   140011325:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011326:	rcr    BYTE PTR [rcx-0x2e],0xb6
   14001132a:	adc    cl,bl
   14001132c:	(bad)  
   14001132d:	xchg   esp,eax
   14001132e:	rex.WRX
   14001132f:	imul   rdx,QWORD PTR [rbx+rdx*8],0xffffffffffffffce
   140011334:	push   rdx
   140011335:	pop    rdx
   140011336:	sar    DWORD PTR [rcx],1
   140011338:	(bad)
   14001133b:	push   rsi
   14001133c:	icebp  
   14001133d:	and    eax,0xa3353d1b
   140011342:	(bad)  
   140011343:	adc    cl,bl
   140011345:	sbb    DWORD PTR [rcx-0x35],0x8d12b7d3
   14001134c:	rex.WR movabs rbx,0xb8b812779a1b6866
   140011356:	or     eax,0xd90daec1
   14001135b:	sbb    BYTE PTR [rax],bh
   14001135d:	(bad)  
   14001135e:	rex.W mov bpl,bpl
   140011361:	shr    DWORD PTR [rdx+0x4c],0xcb
   140011365:	rex.WRX
   140011366:	rex xchg eax,eax
   140011368:	jne    0x140011329
   14001136a:	or     edi,DWORD PTR [rax]
   14001136c:	cmp    ah,BYTE PTR [rdx]
   14001136e:	es cdq 
   140011370:	rex.WX test QWORD PTR [rsi],rcx
   140011373:	gs rex.B
   140011375:	fwait
   140011376:	(bad)  
   140011377:	jge    0x140011310
   140011379:	pop    rsp
   14001137a:	clc    
   14001137b:	(bad)  
   14001137d:	rex.X (bad) 
   14001137f:	ins    BYTE PTR es:[rdi],dx
   140011380:	xchg   ecx,eax
   140011381:	rol    al,0xdb
   140011384:	pushf  
   140011385:	(bad)  
   140011386:	hlt    
   140011387:	(bad)  
   140011388:	loopne 0x140011360
   14001138a:	mov    bl,BYTE PTR [rdi-0x4841006b]
   140011390:	mov    esi,0xcba3fefb
   140011395:	ret    
   140011396:	(bad)  
   140011397:	push   rbp
   140011398:	pop    rsp
   140011399:	jp     0x140011384
   14001139b:	mov    esp,DWORD PTR [rdx+0xa9c4db5]
   1400113a1:	xor    al,0xa1
   1400113a3:	shl    DWORD PTR [rdi-0x2139a4cf],0xcb
   1400113aa:	(bad)  
   1400113ab:	(bad)  
   1400113ac:	in     al,dx
   1400113ad:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400113ae:	mov    ds,esi
   1400113b0:	(bad)  
   1400113b1:	xchg   ecx,eax
   1400113b2:	sbb    eax,0x65ec6673
   1400113b7:	jnp    0x14001138a
   1400113b9:	xor    DWORD PTR [rsi],eax
   1400113bb:	cdq    
   1400113bc:	(bad)
   1400113bf:	shl    dl,1
   1400113c1:	add    dh,dh
   1400113c3:	neg    DWORD PTR [esi-0x77]
   1400113c7:	pop    rax
   1400113c8:	rex.XB mov r12d,0x314e64f3
   1400113ce:	adc    eax,0xf6b94e99
   1400113d3:	clc    
   1400113d4:	cmp    edi,DWORD PTR [rcx+0x307786fe]
   1400113da:	fidivr WORD PTR [rdi-0x7e812077]
   1400113e0:	in     eax,0xed
   1400113e2:	xor    edx,DWORD PTR [rdi+rdx*2]
   1400113e5:	mov    bh,0xa1
   1400113e7:	fimul  WORD PTR [rbx+0x76112296]
   1400113ed:	and    eax,0xa6c47f11
   1400113f2:	std    
   1400113f3:	mov    dh,0xd3
   1400113f5:	jle    0x1400113b1
   1400113f7:	fimul  WORD PTR [rdi]
   1400113f9:	imul   ebp,DWORD PTR [rcx],0x50036dc0
   1400113ff:	jmp    0x1400113e6
   140011401:	repz movabs al,ds:0x4459f7a40466c14c
   14001140b:	ror    BYTE PTR [rcx+0x1],1
   14001140e:	pop    rdx
   14001140f:	loopne 0x140011441
   140011411:	sbb    bl,BYTE PTR [rdi-0x6d8f4712]
   140011417:	icebp  
   140011418:	xor    BYTE PTR [rdx],bl
   14001141a:	scas   eax,DWORD PTR es:[rdi]
   14001141b:	fs fcmovnbe st,st(0)
   14001141e:	push   rcx
   14001141f:	xlat   BYTE PTR ds:[rbx]
   140011420:	pop    rsp
   140011421:	jne    0x14001140c
   140011423:	pop    rsp
   140011424:	imul   esi,DWORD PTR [rbx],0x7e
   140011427:	jmp    0xff956e5c
   14001142c:	jnp    0x140011457
   14001142e:	(bad)  [rbp-0x1cbaaff]
   140011434:	in     al,0xa8
   140011436:	and    BYTE PTR [rdx+0x9],dh
   140011439:	xchg   edx,eax
   14001143a:	xchg   ecx,eax
   14001143b:	adc    bh,ah
   14001143d:	adc    BYTE PTR [rdi+0x6b6808a6],dl
   140011443:	out    0x92,eax
   140011445:	xchg   ecx,eax
   140011446:	mov    al,0xe8
   140011448:	(bad)  
   140011449:	mov    ecx,0xf60838b8
   14001144e:	fucom  st(6)
   140011450:	push   0x1fb7d346
   140011455:	lahf   
   140011456:	rex.RXB movabs al,ds:0x2ff9deb629fe3c20
   140011460:	cmp    dl,dh
   140011462:	mov    edi,0x6e034dd2
   140011467:	movsxd esi,DWORD PTR [rip+0x35dee0]        # 0x14036f34d
   14001146d:	repz retf 
   14001146f:	je     0x14001148e
   140011471:	push   rsp
   140011472:	jl     0x140011473
   140011474:	in     al,dx
   140011475:	addr32 mov esi,0x6d64ecf0
   14001147b:	repz mov esi,DWORD PTR [rbp-0x2a348836]
   140011482:	or     eax,DWORD PTR [rdi+0x74]
   140011485:	imul   DWORD PTR [rdx]
   140011487:	pop    rdx
   140011488:	out    dx,eax
   140011489:	(bad)  
   14001148a:	fwait
   14001148b:	mov    bl,0x69
   14001148d:	push   0xffffffffe282069a
   140011492:	lods   eax,DWORD PTR ds:[rsi]
   140011493:	pushf  
   140011494:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011495:	sbb    ah,BYTE PTR [rdi-0x10]
   140011498:	int    0x95
   14001149a:	lods   al,BYTE PTR ds:[rsi]
   14001149b:	mov    edx,0xb4002c92
   1400114a0:	ficomp WORD PTR [rax+rsi*1-0x12]
   1400114a4:	jle    0x1400114e1
   1400114a6:	test   DWORD PTR cs:[ecx+ebx*2+0x3f8853a7],esi
   1400114af:	out    0xf0,eax
   1400114b1:	xchg   ebx,eax
   1400114b2:	(bad)  
   1400114b3:	or     edx,DWORD PTR [rsi]
   1400114b5:	jne    0x14001146d
   1400114b7:	(bad)  
   1400114b8:	test   DWORD PTR [rsi-0x7a],esp
   1400114bb:	or     al,0xc7
   1400114bd:	pushf  
   1400114be:	jns    0x1400114ab
   1400114c0:	(bad)  
   1400114c1:	sbb    DWORD PTR [rbx+rcx*1+0x34],edx
   1400114c5:	(bad)  
   1400114c6:	sahf   
   1400114c7:	addr32 jae 0x1400114b5
   1400114ca:	xor    al,0xd5
   1400114cc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400114cd:	repz enter 0xdfe,0xd0
   1400114d2:	pop    rcx
   1400114d3:	sbb    esp,DWORD PTR [rdx+0x63]
   1400114d6:	adc    edi,DWORD PTR [rsi+0x24]
   1400114d9:	sar    DWORD PTR [rsi-0x2d],1
   1400114dc:	ror    BYTE PTR [rdi+0x5dcc6258],0x7b
   1400114e3:	popf   
   1400114e4:	mov    esp,0x4723593d
   1400114e9:	rex.X clc 
   1400114eb:	fninit 
   1400114ed:	rex.WX cmp BYTE PTR [rdx+0x76],0xf7
   1400114f2:	xchg   edx,eax
   1400114f3:	push   rdx
   1400114f4:	add    BYTE PTR [rip+0xffffffff8ab706b5],ah        # 0xcab81baf
   1400114fa:	adc    al,0x7f
   1400114fc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400114fd:	push   rsp
   1400114fe:	cmp    eax,0x3af9bd1b
   140011503:	movabs eax,ds:0xc591ae90231dab3d
   14001150c:	icebp  
   14001150d:	sub    ebp,ecx
   14001150f:	rex.WX (bad) 
   140011511:	rcl    BYTE PTR [rsi+rcx*2+0x7778db4],1
   140011518:	ror    DWORD PTR [rbx],cl
   14001151a:	xor    eax,0x6307c23
   14001151f:	iret   
   140011520:	jg     0x14001155d
   140011522:	jmp    0x16ad96ad3
   140011527:	jge    0x1400114dd
   140011529:	jns    0x140011594
   14001152b:	mov    WORD PTR [rax-0x56],ds
   14001152e:	cmc    
   14001152f:	mov    bh,0xc7
   140011531:	and    al,0x29
   140011533:	in     al,0xcf
   140011535:	push   rsi
   140011536:	test   al,0xb3
   140011538:	in     eax,0xf8
   14001153a:	mov    edx,0xbbff631c
   14001153f:	cmp    edi,0x46d1980d
   140011545:	add    DWORD PTR [rdi+0x32dee4d],esi
   14001154b:	lock lea edi,[rbp+0x23fc03bd]
   140011552:	iret   
   140011553:	mov    esp,0x47c1ed7d
   140011558:	(bad)  
   140011559:	sti    
   14001155a:	push   rsp
   14001155b:	xor    eax,0xfbd97d1e
   140011560:	(bad)  
   140011561:	cmp    eax,0xb858ae7b
   140011566:	mov    fs,WORD PTR [rbx+0x5612af19]
   14001156c:	(bad)  
   14001156d:	jrcxz  0x14001150a
   14001156f:	cdq    
   140011570:	and    eax,edi
   140011572:	mov    cl,0xcb
   140011574:	(bad)  
   140011575:	adc    BYTE PTR [rbx+rbp*2+0x259e89af],ch
   14001157c:	sub    BYTE PTR [rdx-0x39],dl
   14001157f:	leave  
   140011580:	cmp    al,0xa2
   140011582:	test   eax,0x98f6cce3
   140011587:	jb     0x140011607
   140011589:	xchg   edx,eax
   14001158a:	(bad)  
   14001158b:	vhsubps xmm5,xmm12,XMMWORD PTR [rsi]
   14001158f:	xchg   edi,eax
   140011590:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011591:	movabs ds:0xf9496b18e687ede0,eax
   14001159a:	movabs ds:0xb099ae2884d3744e,eax
   1400115a3:	std    
   1400115a4:	clc    
   1400115a5:	(bad)  
   1400115a6:	fnstcw WORD PTR [rdi]
   1400115a8:	icebp  
   1400115a9:	or     al,0xc3
   1400115ab:	pop    rbp
   1400115ac:	sbb    esi,ebx
   1400115ae:	mov    ebp,0xc6fe32fd
   1400115b3:	adc    eax,0xc89d27a8
   1400115b8:	and    al,0xba
   1400115ba:	(bad)
   1400115bd:	ja     0x140011637
   1400115bf:	xor    eax,0x7fd09fef
   1400115c4:	imul   ebp,DWORD PTR [rdi],0x62e0f44c
   1400115ca:	rex.RX mov DWORD PTR [rdx],0xce3f217c
   1400115d1:	movabs al,ds:0x4a7cc0191c9e7e5f
   1400115da:	sar    BYTE PTR [rdx-0x5],1
   1400115dd:	jns    0x140011641
   1400115df:	push   rax
   1400115e0:	mov    dl,0x8
   1400115e2:	jae    0x14001162e
   1400115e4:	sbb    DWORD PTR [rcx+rbp*1],edx
   1400115e7:	adc    cl,BYTE PTR [rcx-0x33a8d5d9]
   1400115ed:	jmp    0x14001162a
   1400115ef:	sbb    al,0x4
   1400115f1:	mov    ch,0x9c
   1400115f3:	lahf   
   1400115f4:	js     0x140011633
   1400115f6:	push   rdx
   1400115f7:	addr32 jno 0x140011645
   1400115fa:	and    DWORD PTR [rsi-0x2d],ebp
   1400115fd:	scas   eax,DWORD PTR es:[rdi]
   1400115fe:	xchg   esp,eax
   1400115ff:	sub    bl,BYTE PTR [rcx+0x7f5f5aaa]
   140011605:	mov    edx,0x9fe86d70
   14001160a:	xor    DWORD PTR [rdx],eax
   14001160c:	or     DWORD PTR [rax+0x62],0xffffffd4
   140011610:	(bad)
   140011615:	add    BYTE PTR [rax+0x4750230],dl
   14001161b:	or     DWORD PTR [rcx+0x88e4474],ebx
   140011621:	or     al,0xdf
   140011623:	rex.W cmp BYTE PTR [rax],al
   140011626:	xor    BYTE PTR [rdx+0x720fc0fe],ah
   14001162c:	out    0xf0,al
   14001162e:	(bad)  
   14001162f:	in     al,0xc4
   140011631:	rex.WXB
   140011632:	rex
   140011633:	rex.WRB mov WORD PTR [r10],es
   140011636:	outs   dx,BYTE PTR ds:[rsi]
   140011637:	pop    rbx
   140011638:	xchg   eax,esp
   14001163a:	mov    ebp,0x89be0061
   14001163f:	mov    bh,0x7f
   140011641:	mul    DWORD PTR [rdi+0x78d4ff3f]
   140011647:	gs in  eax,dx
   140011649:	jae    0x1400116a0
   14001164b:	xor    eax,0xbbd29efc
   140011650:	(bad)  
   140011651:	and    DWORD PTR ss:[rax],esp
   140011654:	movabs eax,ds:0xe2cec15de09eb166
   14001165d:	and    dl,bl
   14001165f:	loop   0x1400116a2
   140011661:	mov    ah,0xa8
   140011663:	sub    BYTE PTR [rdi],ch
   140011665:	popf   
   140011666:	mov    ebx,esp
   140011668:	mov    eax,0x666f850c
   14001166d:	or     eax,0xbbfad53e
   140011672:	lods   al,BYTE PTR ds:[rsi]
   140011673:	mov    ebp,0x460f8666
   140011678:	fdiv   DWORD PTR [rcx]
   14001167a:	sub    edx,DWORD PTR [rax-0xd671c47]
   140011680:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011681:	in     eax,0xad
   140011683:	repz pop rbp
   140011685:	scas   eax,DWORD PTR es:[rdi]
   140011686:	jmp    0xe6e03c29
   14001168b:	fnsave [rdx+0x17]
   14001168e:	popf   
   14001168f:	sbb    ecx,DWORD PTR [rsi+rsi*8-0x2dcc13b1]
   140011696:	(bad)  
   140011697:	test   ch,ah
   140011699:	rex.WRB (bad) 
   14001169b:	mov    esp,0x9c0c13e5
   1400116a0:	rex.RXB scas eax,DWORD PTR es:[rdi]
   1400116a2:	pushf  
   1400116a3:	gs jne 0x1400116a1
   1400116a6:	rex.RB stos BYTE PTR es:[rdi],al
   1400116a8:	sub    edx,DWORD PTR [rdi]
   1400116aa:	ficomp DWORD PTR [rcx+0x7f]
   1400116ad:	adc    dh,BYTE PTR [rbx]
   1400116af:	rcl    BYTE PTR [rbx+rax*8-0x85d1de9],cl
   1400116b6:	push   rdi
   1400116b7:	lods   al,BYTE PTR ds:[rsi]
   1400116b8:	out    0xbf,eax
   1400116ba:	mov    bl,0xd2
   1400116bc:	(bad)  
   1400116bd:	mov    ah,0xde
   1400116bf:	(bad)  
   1400116c1:	pop    rbx
   1400116c2:	pop    rcx
   1400116c3:	mov    ecx,0x2ec6b2b3
   1400116c8:	cmp    cl,cl
   1400116ca:	rex.XB
   1400116cb:	rex.X cmp al,bl
   1400116ce:	(bad)  
   1400116cf:	movabs eax,ds:0xefa48028da45fb45
   1400116d8:	lods   eax,DWORD PTR ds:[rsi]
   1400116d9:	(bad)  
   1400116da:	outs   dx,BYTE PTR ds:[rsi]
   1400116db:	fwait
   1400116dc:	mov    edx,edx
   1400116de:	adc    edx,edx
   1400116e0:	(bad)  
   1400116e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400116e2:	push   rsi
   1400116e3:	loope  0x1400116d2
   1400116e5:	fstp   QWORD PTR [rbp-0x6692eaf5]
   1400116eb:	sbb    eax,0x6fab58a3
   1400116f0:	(bad)  
   1400116f1:	(bad)  
   1400116f2:	ins    BYTE PTR es:[rdi],dx
   1400116f3:	pop    rbx
   1400116f4:	outs   dx,BYTE PTR ds:[rsi]
   1400116f5:	or     eax,0x79213a44
   1400116fa:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400116fb:	mov    esi,0xace35e49
   140011700:	cmp    eax,0x889756f
   140011705:	imul   r15d,DWORD PTR [rax+0x3592373a],0x24
   14001170d:	and    bx,WORD PTR [rbp*2+0x395a3473]
   140011715:	movabs ds:0x41fe3c25e2409033,al
   14001171e:	mov    ecx,0xa87fe1f4
   140011723:	(bad)  
   140011724:	(bad)  
   140011725:	xor    DWORD PTR [rbp-0x7fac1283],ebp
   14001172b:	push   rdi
   14001172c:	pop    rbp
   14001172d:	mov    esi,0xe87fb789
   140011732:	lods   eax,DWORD PTR ds:[rsi]
   140011733:	out    dx,eax
   140011734:	pop    rsp
   140011735:	cmp    edx,esi
   140011737:	enter  0xef63,0x1b
   14001173b:	(bad)  
   14001173c:	sub    al,0x7f
   14001173e:	(bad)  
   14001173f:	(bad)  
   140011740:	in     eax,0xfb
   140011742:	(bad)  
   140011743:	mov    al,0x11
   140011745:	or     eax,0x570e475
   14001174a:	(bad)  
   14001174b:	jle    0x140011789
   14001174d:	push   0x26
   14001174f:	push   rsp
   140011750:	movabs eax,ds:0xba9c79b7b25546e6
   140011759:	sub    BYTE PTR [rcx],dl
   14001175b:	out    0x23,eax
   14001175d:	gs mov bh,0xa9
   140011760:	movabs eax,ds:0xec17134d140869a9
   140011769:	int3   
   14001176a:	imul   ebp,esi,0x29
   14001176d:	rex.WX sbb rax,0x6d08ae17
   140011773:	push   0x30
   140011775:	test   DWORD PTR [rbp-0x59],0x1d8bbeaf
   14001177c:	nop
   14001177d:	adc    al,0xbe
   14001177f:	cmp    eax,DWORD PTR [rdx+0x3c]
   140011782:	jns    0x140011783
   140011784:	or     DWORD PTR [rdx+0x2a88f9d0],0x5e
   14001178b:	imul   ecx,esi,0xffffffbc
   14001178e:	in     eax,0xa3
   140011790:	xor    al,0x87
   140011792:	fild   WORD PTR [rax-0x5a7a8645]
   140011798:	mov    esp,DWORD PTR [rdi+0x167cb858]
   14001179e:	mov    bh,0x73
   1400117a0:	add    eax,0xb42404c2
   1400117a5:	sahf   
   1400117a6:	xchg   ecx,eax
   1400117a7:	fsub   st,st(3)
   1400117a9:	out    dx,eax
   1400117aa:	and    eax,0x304fd35
   1400117af:	add    DWORD PTR [rbp-0x2c4a01bb],esi
   1400117b5:	(bad)  
   1400117b6:	rex.XB push r12
   1400117b8:	add    BYTE PTR [rdi+0x7d7915ee],ah
   1400117be:	or     DWORD PTR cs:[rcx-0x2069317b],0xffffffa7
   1400117c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400117c7:	ret    0x5245
   1400117ca:	push   rbp
   1400117cb:	movabs al,ds:0x2d9fde5a19e232fd
   1400117d4:	rex.X (bad) 
   1400117d6:	xchg   esp,eax
   1400117d7:	rex.WRXB (bad) 
   1400117d9:	jg     0x140011856
   1400117db:	mov    ?,ecx
   1400117dd:	push   rdx
   1400117de:	in     al,0x32
   1400117e0:	movabs al,ds:0x84185b75f93e8101
   1400117e9:	ss fcmovbe st,st(2)
   1400117ec:	(bad)  
   1400117ed:	push   rdi
   1400117ee:	jb     0x14001181e
   1400117f0:	pop    rsp
   1400117f1:	out    dx,eax
   1400117f2:	pop    rsi
   1400117f3:	mov    edx,0xfbaf8b0e
   1400117f8:	(bad)  
   1400117f9:	mov    BYTE PTR [rbp-0x6e7d92cf],dl
   1400117ff:	adc    eax,ecx
   140011801:	mov    eax,esi
   140011803:	mov    ebx,0x25f9b323
   140011808:	(bad)  
   140011809:	add    al,0xf6
   14001180b:	and    DWORD PTR [rbx],ecx
   14001180d:	or     al,0xda
   14001180f:	enter  0x25ad,0x31
   140011813:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011814:	jae    0x140011866
   140011816:	(bad)  
   140011817:	jne    0x14001180b
   140011819:	rex.WB loopne 0x14001189b
   14001181c:	movabs ds:0xee5db7fbac92141d,al
   140011825:	add    esi,DWORD PTR ds:[rax]
   140011828:	scas   eax,DWORD PTR es:[rdi]
   140011829:	clc    
   14001182a:	out    dx,al
   14001182b:	ror    BYTE PTR [rdi-0x601c1981],0x7d
   140011832:	ret    
   140011833:	repnz loope 0x1400117d9
   140011836:	lahf   
   140011837:	scas   eax,DWORD PTR es:[rdi]
   140011838:	(bad)  
   140011839:	or     edi,0xffffffab
   14001183c:	(bad)  
   14001183d:	ficomp WORD PTR [rsi-0x6c5989c4]
   140011843:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011844:	cmp    al,0xdd
   140011846:	(bad)  
   140011847:	push   rbp
   140011848:	sbb    al,0x45
   14001184a:	test   al,0x59
   14001184c:	ins    DWORD PTR es:[rdi],dx
   14001184d:	data16 mov WORD PTR [rbp+rax*8-0x73],ds
   140011852:	(bad)  
   140011853:	movabs ds:0x1d291497c2928acc,eax
   14001185c:	rol    BYTE PTR [rax+0x30],1
   14001185f:	(bad)  
   140011860:	mov    edi,0xaa1fa75a
   140011865:	add    al,0xd
   140011867:	mov    cl,0x3d
   140011869:	pop    rax
   14001186a:	adc    eax,0x93409ad5
   14001186f:	xchg   ebp,eax
   140011870:	mov    ebx,0xeb7aa7d3
   140011875:	out    0x52,eax
   140011877:	sub    BYTE PTR [rbx+0x20],bh
   14001187a:	rex.XB pushf 
   14001187c:	sti    
   14001187d:	rex.W jbe 0x1400118fd
   140011880:	loopne 0x1400118e8
   140011882:	sti    
   140011883:	in     al,dx
   140011884:	sahf   
   140011885:	js     0x140011809
   140011887:	jae    0x1400118d8
   140011889:	(bad)  
   14001188a:	(bad)  
   14001188b:	push   rax
   14001188c:	add    ebx,DWORD PTR [rdx+rdi*2-0x77]
   140011890:	(bad)  
   140011891:	mov    esp,DWORD PTR [rdi-0x3ba351d7]
   140011897:	in     eax,dx
   140011898:	out    dx,eax
   140011899:	and    dl,bl
   14001189b:	sbb    cl,ch
   14001189d:	xlat   BYTE PTR ds:[rbx]
   14001189e:	fldcw  WORD PTR [rsi-0x3b1cb1fe]
   1400118a4:	lahf   
   1400118a5:	fsubr  st,st(5)
   1400118a7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400118a8:	cdq    
   1400118a9:	cmc    
   1400118aa:	xchg   edi,eax
   1400118ab:	sub    ah,BYTE PTR [rdx+0xe]
   1400118ae:	jb     0x140011867
   1400118b0:	popf   
   1400118b1:	jp     0x140011899
   1400118b3:	mov    esp,0x45d70a7e
   1400118b8:	call   0xd514bb69
   1400118bd:	ds (bad) 
   1400118bf:	std    
   1400118c0:	je     0x14001185f
   1400118c2:	xor    BYTE PTR [rdi],bh
   1400118c4:	jns    0x1400118c2
   1400118c6:	rex cmp esp,DWORD PTR [rsi]
   1400118c9:	sub    al,0x1a
   1400118cb:	sbb    DWORD PTR [rsp+rbp*4+0x64],eax
   1400118cf:	rex.RXB stos DWORD PTR es:[rdi],eax
   1400118d1:	sub    cl,ch
   1400118d3:	jno    0x1400118dc
   1400118d5:	sub    BYTE PTR [rax-0x35],dl
   1400118d8:	mov    cl,0xb3
   1400118da:	icebp  
   1400118db:	retf   
   1400118dc:	cmp    BYTE PTR [rax+0x1b],al
   1400118df:	shr    BYTE PTR [rbx],cl
   1400118e1:	sub    DWORD PTR [rip+0xffffffff88a68368],edx        # 0xc8a79c4f
   1400118e7:	(bad)  
   1400118e8:	mov    eax,0x2818edbc
   1400118ed:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400118ee:	hlt    
   1400118ef:	rex.WR ins DWORD PTR es:[rdi],dx
   1400118f1:	adc    DWORD PTR [rsi],0x9e3edebb
   1400118f7:	rex.WXB movabs r11,0xfc431e5a6afa5864
   140011901:	ins    DWORD PTR es:[rdi],dx
   140011902:	and    al,0x2f
   140011904:	rex.RXB pop r11
   140011906:	jne    0x140011950
   140011908:	xchg   DWORD PTR [rbp-0x39],ebp
   14001190b:	sbb    esp,ebp
   14001190d:	sub    dl,dh
   14001190f:	xor    DWORD PTR [rdi+0x52],esi
   140011912:	ret    0x36a1
   140011915:	(bad)  
   140011916:	std    
   140011917:	sub    ecx,edi
   140011919:	cli    
   14001191a:	rex.XB jg 0x140011968
   14001191d:	(bad)  
   14001191e:	stc    
   14001191f:	sbb    dh,BYTE PTR [rdi+0x777c1a99]
   140011925:	sbb    BYTE PTR [rax-0x70121d91],al
   14001192b:	cmp    al,0xfa
   14001192d:	clc    
   14001192e:	ret    0x6f43
   140011931:	jns    0x1400118fa
   140011933:	jnp    0x1400118bb
   140011935:	retf   
   140011936:	sub    ebx,DWORD PTR [rdi-0xe]
   140011939:	gs cmc 
   14001193b:	rex.WB push r9
   14001193d:	cmp    eax,0x7ea4d004
   140011942:	repz and al,0xb9
   140011945:	sahf   
   140011946:	xor    edi,edi
   140011948:	cmp    eax,0x95441104
   14001194d:	(bad)  
   14001194e:	mov    bl,0x47
   140011950:	loope  0x14001195c
   140011952:	outs   dx,BYTE PTR ds:[rsi]
   140011953:	sub    al,0xae
   140011955:	xor    DWORD PTR [rbx+0x5],esi
   140011958:	clc    
   140011959:	(bad)  
   14001195a:	ret    0x9c79
   14001195d:	sahf   
   14001195e:	rex.RXB
   14001195f:	fwait
   140011960:	xchg   BYTE PTR [rax+0x13ff7b1a],ah
   140011966:	rcl    BYTE PTR [rdx+rax*1],0xea
   14001196a:	shr    ebp,cl
   14001196c:	call   0x17772e4ab
   140011971:	jae    0x140011913
   140011973:	(bad)  
   140011974:	test   BYTE PTR [rsi],0xe9
   140011977:	sub    bh,BYTE PTR [rbx+0x7e]
   14001197a:	(bad)  [rsi+0x30]
   14001197d:	movabs eax,ds:0x8342d7b157b3790d
   140011986:	(bad)  
   140011987:	sub    ebx,DWORD PTR [rsi+0x7a]
   14001198a:	(bad)  [rdi+0x130f9628]
   140011990:	scas   al,BYTE PTR es:[rdi]
   140011991:	sahf   
   140011992:	gs ins DWORD PTR es:[rdi],dx
   140011994:	sti    
   140011995:	and    al,0xe3
   140011997:	retf   
   140011998:	out    0x71,eax
   14001199a:	cmp    edx,DWORD PTR [rdi-0x70]
   14001199d:	data16 rex.WX pop rsp
   1400119a0:	out    0x2b,al
   1400119a2:	rex.RB pushf 
   1400119a4:	rol    DWORD PTR [rax],0x3f
   1400119a7:	mov    DWORD PTR [rbx],ecx
   1400119a9:	xchg   DWORD PTR [rdx+0x1c],ecx
   1400119ac:	stc    
   1400119ad:	cmp    eax,0x62920067
   1400119b2:	ja     0x1400119e3
   1400119b4:	lods   al,BYTE PTR ds:[rsi]
   1400119b5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400119b6:	mov    ebx,ebx
   1400119b8:	imul   ebp,ebx,0x464ae94d
   1400119be:	icebp  
   1400119bf:	shl    DWORD PTR [rbp-0x12610864],cl
   1400119c5:	jae    0x140011a2d
   1400119c7:	mov    al,0x3a
   1400119c9:	cmp    DWORD PTR [rdi+0x5b],edi
   1400119cc:	rex push 0x758a490d
   1400119d2:	xor    al,0x3d
   1400119d4:	addr32 mov ecx,0x7e86c3b4
   1400119da:	jbe    0x140011a1c
   1400119dc:	mov    esp,0x70e2dd74
   1400119e1:	shr    dh,1
   1400119e3:	add    eax,0xc7402e34
   1400119e8:	push   rax
   1400119e9:	out    0xe3,al
   1400119eb:	and    ebx,ecx
   1400119ed:	jnp    0x140011a5c
   1400119ef:	mov    edi,0x24e77487
   1400119f4:	ret    
   1400119f5:	xchg   esp,eax
   1400119f6:	rol    BYTE PTR [rax+0x69],0xd3
   1400119fa:	adc    esp,DWORD PTR [rdi]
   1400119fc:	jbe    0x140011a3d
   1400119fe:	rex.W loop 0x140011a65
   140011a01:	(bad)  
   140011a02:	adc    DWORD PTR [rdi+0xd],esp
   140011a05:	icebp  
   140011a06:	(bad)  
   140011a07:	rcl    DWORD PTR [rdi+0x0],1
   140011a0a:	and    BYTE PTR [rsi-0x2c],0xed
   140011a0e:	(bad)  
   140011a0f:	mov    dl,0x6b
   140011a11:	mov    eax,0x7fae56f4
   140011a16:	add    bh,BYTE PTR [rax]
   140011a18:	(bad)  
   140011a1a:	jrcxz  0x140011a89
   140011a1c:	xchg   ecx,eax
   140011a1d:	cmp    ebx,ebx
   140011a1f:	add    BYTE PTR [rdx+rdx*8-0x2cd2f425],bh
   140011a26:	retf   0xe9bf
   140011a29:	and    ebx,DWORD PTR [rdi]
   140011a2b:	mov    edi,0x8781f36f
   140011a30:	mov    edi,0x9f060d50
   140011a35:	ja     0x1400119e5
   140011a37:	js     0x140011a8f
   140011a39:	add    eax,0x1e766909
   140011a3e:	ror    BYTE PTR [rcx],1
   140011a40:	add    BYTE PTR [rcx+0x2b],ch
   140011a43:	lock adc cl,BYTE PTR [rcx+0x636e1f]
   140011a4a:	add    BYTE PTR [rax],ah
   140011a4c:	add    BYTE PTR [rcx+0x44],cl
   140011a4f:	push   r12
   140011a51:	rex.XB
   140011a52:	rex.WXB
   140011a53:	xrelease rex.WR mov BYTE PTR [rsi+0x67],r12b
   140011a58:	or     DWORD PTR [rdx],0x65
   140011a5b:	xor    esp,DWORD PTR [rbp-0x73]
   140011a5e:	(bad)  
   140011a5f:	fst    st(1)
   140011a61:	cwde   
   140011a62:	frstor [rbx+0x4397508f]
   140011a68:	retf   0xc0a2
   140011a6b:	jmp    0xe8095c89
   140011a70:	rex.WRB jmp 0x140011a7c
   140011a73:	sbb    dl,BYTE PTR [rcx]
   140011a75:	jbe    0x140011a24
   140011a77:	(bad)  
   140011a78:	pop    rdx
   140011a79:	cmp    DWORD PTR [rbp+0xa316cdd],0x70
   140011a80:	popf   
   140011a81:	xchg   BYTE PTR [rbp+0x693f6fb6],bl
   140011a87:	(bad)  
   140011a88:	(bad)  
   140011a89:	test   ebx,edi
   140011a8b:	not    BYTE PTR [rdi+rsi*1+0x38]
   140011a8f:	push   0xffffffffdc049f3d
   140011a94:	je     0x140011a35
   140011a96:	sub    ecx,DWORD PTR [rdi+0x7f]
   140011a99:	nop
   140011a9a:	sub    ecx,DWORD PTR [rdi+0x74c19bbe]
   140011aa0:	xchg   edi,eax
   140011aa1:	shl    DWORD PTR [rbp-0x4291532d],0x48
   140011aa8:	jno    0x140011a9f
   140011aaa:	and    ch,BYTE PTR [rsi-0x4e]
   140011aad:	mov    ebp,DWORD PTR [rdx+0x6d]
   140011ab0:	xor    esi,ecx
   140011ab2:	(bad)  
   140011ab4:	xchg   edx,eax
   140011ab5:	and    esp,eax
   140011ab7:	or     al,0xf9
   140011ab9:	test   DWORD PTR [rdx],0x7fd8c69e
   140011abf:	sub    DWORD PTR [rdi+rbp*8-0x2f92017c],ebp
   140011ac6:	nop
   140011ac7:	ret    
   140011ac8:	fldcw  WORD PTR [rsi]
   140011aca:	idiv   DWORD PTR [rdi]
   140011acc:	mov    bl,0xf7
   140011ace:	movabs al,ds:0xdbd9e4ae1a374d33
   140011ad7:	vpsrad xmm12,xmm7,XMMWORD PTR [rdi+0x5cbeb49c]
   140011adf:	rex.W (bad) 
   140011ae1:	mov    bh,0xf5
   140011ae3:	mov    dl,0x73
   140011ae5:	(bad)  
   140011ae6:	(bad)  
   140011ae7:	(bad)  
   140011ae9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011aea:	push   rcx
   140011aeb:	(bad)  
   140011aec:	pop    rbp
   140011aed:	add    edx,DWORD PTR [rcx]
   140011aef:	rex.WB
   140011af0:	push   r14
   140011af2:	add    ecx,DWORD PTR [rdx+rbx*4]
   140011af5:	(bad)  
   140011af6:	or     DWORD PTR [rbp+0x370700bd],esi
   140011afc:	(bad)  
   140011afd:	adc    DWORD PTR [rbx],edi
   140011aff:	cmovge eax,DWORD PTR [rbx+0x1e8cc44]
   140011b06:	sbb    DWORD PTR [rax],eax
   140011b08:	xchg   esp,eax
   140011b09:	js     0x140011b0d
   140011b0b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011b0c:	or     ecx,eax
   140011b0e:	and    dl,BYTE PTR [rsi-0x33849622]
   140011b14:	jmp    0x16fa563f7
   140011b19:	rex.RXB (bad) 
   140011b1b:	push   rax
   140011b1c:	in     al,dx
   140011b1d:	mov    eax,0x4c28b3b5
   140011b22:	fmul   st(6),st
   140011b24:	stos   BYTE PTR es:[rdi],al
   140011b25:	rex.WRX
   140011b26:	ds mov ebx,0x5c1fecc6
   140011b2c:	movabs eax,ds:0x78019e77821dadbc
   140011b35:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011b36:	mov    bh,0x4f
   140011b38:	retf   0x1ef
   140011b3b:	mov    bh,0xb8
   140011b3d:	mov    esi,0x63fa7831
   140011b42:	lahf   
   140011b43:	jl     0x140011bbb
   140011b45:	mov    esp,0x5f45f6b2
   140011b4a:	push   rsi
   140011b4b:	fisttp WORD PTR [rcx+0x4a1891c8]
   140011b51:	jmp    0x140011b7e
   140011b53:	(bad)  
   140011b54:	scas   eax,DWORD PTR es:[rdi]
   140011b55:	mov    ah,0xce
   140011b57:	ds fwait
   140011b59:	add    ebx,edx
   140011b5b:	mov    ah,0x2e
   140011b5d:	repnz fidivr WORD PTR [rbp-0x41]
   140011b61:	loop   0x140011af3
   140011b63:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011b64:	xor    sp,dx
   140011b67:	push   rsp
   140011b68:	(bad)
   140011b6c:	jrcxz  0x140011b3a
   140011b6e:	mov    al,BYTE PTR [rdx-0x31d7575e]
   140011b74:	popf   
   140011b75:	mov    WORD PTR [rbx-0x599ab700],?
   140011b7b:	nop
   140011b7c:	(bad)  
   140011b7d:	push   rbp
   140011b7e:	mov    BYTE PTR [rdx],ch
   140011b80:	rex.WRX cmp rax,0xffffffffee9a0341
   140011b86:	scas   al,BYTE PTR es:[rdi]
   140011b87:	(bad)  
   140011b88:	add    al,0xd4
   140011b8a:	cmps   WORD PTR ds:[rsi],WORD PTR es:[rdi]
   140011b8c:	stc    
   140011b8d:	ss call 0x1827d8031
   140011b93:	enter  0xd26b,0x75
   140011b97:	xchg   esp,eax
   140011b98:	rex.RXB
   140011b99:	addr32 xor eax,edx
   140011b9c:	repnz (bad) 
   140011b9e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011b9f:	fdivp  st(6),st
   140011ba1:	sbb    DWORD PTR [rdx+0x1cbd116a],ecx
   140011ba7:	sbb    DWORD PTR [rdi-0x3d],edi
   140011baa:	retf   
   140011bab:	out    0x71,eax
   140011bad:	(bad)  
   140011bae:	scas   eax,DWORD PTR es:[rdi]
   140011baf:	rex.X cwde 
   140011bb1:	(bad)  
   140011bb2:	mov    BYTE PTR [rsi+0x3e],al
   140011bb5:	(bad)  
   140011bb6:	(bad)  
   140011bb7:	(bad)  
   140011bb8:	icebp  
   140011bb9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011bba:	int3   
   140011bbb:	mov    ch,0xfc
   140011bbd:	mov    dh,0xe3
   140011bbf:	mov    esp,0x14d8173a
   140011bc4:	xor    bl,BYTE PTR [rcx]
   140011bc6:	(bad)  
   140011bc7:	xor    cl,BYTE PTR [r11]
   140011bca:	xor    BYTE PTR [rdi+0x14],ah
   140011bcd:	rex.WB jno 0x140011ba3
   140011bd0:	out    0xc4,eax
   140011bd2:	enter  0xee33,0x95
   140011bd6:	out    0x91,eax
   140011bd8:	test   eax,0xb01a2932
   140011bdd:	in     eax,dx
   140011bde:	rex.W fiadd DWORD PTR [rdi+0xa]
   140011be2:	cwde   
   140011be3:	(bad)  
   140011be4:	cli    
   140011be5:	rex.R in eax,dx
   140011be7:	cmp    al,0xdd
   140011be9:	or     edi,edi
   140011beb:	out    0x70,eax
   140011bed:	add    al,BYTE PTR [rax+rdx*8+0x32237984]
   140011bf4:	addr32 rex.W mov bpl,0x7b
   140011bf8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011bf9:	in     eax,dx
   140011bfa:	sti    
   140011bfb:	mov    dh,0x5b
   140011bfd:	sub    ch,bh
   140011bff:	adc    dl,BYTE PTR [rax+0x27]
   140011c02:	push   0x212fa6d3
   140011c07:	test   esp,edi
   140011c09:	(bad)  
   140011c0a:	rex.WRB and BYTE PTR [r14+0x27],r13b
   140011c0e:	(bad)  
   140011c0f:	(bad)  
   140011c10:	addr32 loop 0x140011bd7
   140011c13:	adc    DWORD PTR [rdx+rbx*8-0x19],edx
   140011c17:	cmp    ecx,ecx
   140011c19:	(bad)  
   140011c1a:	(bad)  
   140011c1b:	imul   eax,DWORD PTR [rbp-0x39],0xb78457aa
   140011c22:	(bad)  
   140011c23:	imul   edi,DWORD PTR [rcx],0xebcfccf9
   140011c29:	jrcxz  0x140011c2a
   140011c2b:	(bad)  
   140011c2c:	mov    bh,0x31
   140011c2e:	or     eax,0xc00c73b8
   140011c33:	lods   eax,DWORD PTR ds:[rsi]
   140011c34:	mov    ebp,0x9ff2467d
   140011c39:	cli    
   140011c3a:	lock jae 0x140011c84
   140011c3d:	(bad)  
   140011c3e:	(bad)  
   140011c3f:	jp     0x140011c25
   140011c41:	cmp    eax,DWORD PTR [rdi]
   140011c43:	ret    
   140011c44:	loope  0x140011c3d
   140011c46:	mov    eax,0x44567ca2
   140011c4b:	retf   0x9aa0
   140011c4e:	sub    DWORD PTR [rdx+0x725889a],edi
   140011c54:	ss fwait
   140011c56:	sub    BYTE PTR [rbx-0x4316840f],bh
   140011c5c:	push   0x37
   140011c5e:	rex.RX sub r9b,cl
   140011c61:	or     DWORD PTR [rdx-0x7],esp
   140011c64:	js     0x140011c22
   140011c66:	jmp    0x140011bed
   140011c68:	xchg   BYTE PTR [rcx-0x43],ah
   140011c6b:	rex.WRXB loope 0x140011c78
   140011c6e:	jbe    0x140011cc6
   140011c70:	(bad)  
   140011c71:	xor    BYTE PTR [rip+0xfffffffff10e5087],ch        # 0x1310f6cfe
   140011c77:	addr32 mov edi,0x42de5e86
   140011c7d:	(bad)  
   140011c7e:	add    DWORD PTR [rdx+0x7a634141],0xa1155e0
   140011c88:	or     ch,dh
   140011c8a:	pop    rsp
   140011c8b:	jne    0x140011ccd
   140011c8d:	mov    edx,0xdb439347
   140011c92:	xor    ch,BYTE PTR ss:[rcx-0x3d]
   140011c96:	push   rbp
   140011c97:	fisub  DWORD PTR [rbx-0x286f1dcc]
   140011c9d:	xchg   BYTE PTR [rbx],cl
   140011c9f:	rex.WRXB jg 0x140011c3a
   140011ca2:	fucom  st(3)
   140011ca4:	rex.WRXB xor r14,r11
   140011ca7:	mov    edi,0x69d2f8c1
   140011cac:	xchg   esi,eax
   140011cad:	(bad)  
   140011cae:	mov    ebp,0xafd714c
   140011cb3:	outs   dx,BYTE PTR ds:[rsi]
   140011cb4:	mov    edx,0xa209f917
   140011cb9:	test   al,0x7a
   140011cbb:	nop
   140011cbc:	(bad)  
   140011cbd:	repnz adc ecx,DWORD PTR [rdx]
   140011cc0:	lea    esp,[rax+0x27f4b756]
   140011cc6:	sub    DWORD PTR [rdx],eax
   140011cc8:	push   rax
   140011cc9:	fimul  DWORD PTR [rcx+0x3b]
   140011ccc:	scas   al,BYTE PTR es:[rdi]
   140011ccd:	mov    ebp,0xe927f9d0
   140011cd2:	rex.WXB mov dl,BYTE PTR [r12+r13*8]
   140011cd6:	stos   BYTE PTR es:[rdi],al
   140011cd7:	js     0x140011cc0
   140011cd9:	xor    bl,al
   140011cdb:	xchg   edi,eax
   140011cdc:	(bad)  
   140011cdd:	loop   0x140011c68
   140011cdf:	rex.WXB (bad) 
   140011ce1:	(bad)  
   140011ce2:	and    eax,0x7479d9c8
   140011ce7:	and    al,BYTE PTR [rbx]
   140011ce9:	rex.WB fild WORD PTR [r13+0x5e86fc1c]
   140011cf0:	imul   ecx,DWORD PTR [rdi],0xdae1b2e2
   140011cf6:	pushw  0x36
   140011cf9:	cs cmp al,0x62
   140011cfc:	adc    esi,esp
   140011cfe:	jg     0x140011d2d
   140011d00:	add    bl,BYTE PTR [rax-0x76f2fffd]
   140011d06:	iret   
   140011d07:	sbb    ah,BYTE PTR [rsi-0x40]
   140011d0a:	movsxd edx,esp
   140011d0c:	rex.WXB sub rcx,r9
   140011d0f:	rex.WXB
   140011d10:	fwait
   140011d11:	stos   DWORD PTR es:[rdi],eax
   140011d12:	mov    bh,0xa5
   140011d14:	mov    cl,0xb1
   140011d17:	jrcxz  0x140011d5b
   140011d19:	and    dh,BYTE PTR [rsi+0x5]
   140011d1c:	(bad)  
   140011d1d:	cdq    
   140011d1e:	clc    
   140011d1f:	xchg   ebx,eax
   140011d20:	adc    ecx,DWORD PTR [rdi-0x498e4340]
   140011d26:	push   rdi
   140011d27:	mov    edx,0xd55c9515
   140011d2c:	adc    BYTE PTR [rsi],dl
   140011d2e:	faddp  st(0),st
   140011d30:	(bad)  
   140011d31:	jae    0x140011cf3
   140011d33:	outs   dx,DWORD PTR ds:[rsi]
   140011d34:	ret    0x4bed
   140011d37:	add    ebx,DWORD PTR [rsi-0x21]
   140011d3a:	(bad)  
   140011d3b:	loopne 0x140011cd8
   140011d3d:	js     0x140011dba
   140011d3f:	sar    BYTE PTR [rdi-0x1780d409],0x3b
   140011d46:	(bad)  
   140011d47:	retf   
   140011d48:	sub    ebx,edi
   140011d4a:	pop    rbp
   140011d4b:	push   rsi
   140011d4c:	or     edi,0xffffff8b
   140011d4f:	enter  0xecb1,0x4f
   140011d53:	push   rbx
   140011d54:	cmp    DWORD PTR [rsi-0x12],ebp
   140011d57:	sbb    edx,edi
   140011d59:	mov    ecx,0x6a97299b
   140011d5e:	mov    dl,0xd7
   140011d60:	in     eax,dx
   140011d61:	mov    edx,0x9b6e968c
   140011d66:	outs   dx,BYTE PTR ds:[rsi]
   140011d67:	mov    ah,dh
   140011d69:	sub    eax,0x8a76858a
   140011d6e:	loop   0x140011d0b
   140011d70:	sbb    DWORD PTR [rbx],ebp
   140011d72:	push   rdx
   140011d73:	mov    bl,0xb7
   140011d75:	mov    eax,0x2789eecc
   140011d7a:	cdq    
   140011d7b:	or     eax,0xff072817
   140011d80:	or     esi,ecx
   140011d82:	mov    edi,0x8a013b08
   140011d87:	cmp    ah,bh
   140011d89:	add    esi,DWORD PTR [rax+0x2b2b00b4]
   140011d8f:	sub    DWORD PTR [rdi+rax*1],eax
   140011d92:	fidiv  DWORD PTR [rdx+rcx*8-0x2bbf2e93]
   140011d99:	add    esp,0xffffffd6
   140011d9c:	imul   ecx,DWORD PTR [rdi+0x7cc1793d],0x41
   140011da3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011da4:	adc    esp,DWORD PTR [rsi-0x39]
   140011da7:	(bad)  
   140011da8:	loope  0x140011d6f
   140011daa:	(bad)  
   140011dab:	jg     0x140011d2f
   140011dad:	adc    DWORD PTR [rsi],ecx
   140011daf:	mov    ecx,0xbd58e76
   140011db4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011db5:	test   al,0xae
   140011db7:	ins    BYTE PTR es:[rdi],dx
   140011db8:	and    DWORD PTR [rdi],esi
   140011dba:	scas   eax,DWORD PTR es:[rdi]
   140011dbb:	adc    al,dl
   140011dbd:	or     al,0x91
   140011dbf:	rex ja 0x140011d63
   140011dc2:	mov    WORD PTR [rax-0xa63b03e],?
   140011dc8:	out    0x84,eax
   140011dca:	xchg   esi,eax
   140011dcb:	(bad)  
   140011dcc:	fwait
   140011dcd:	(bad)  
   140011dce:	jle    0x140011da0
   140011dd0:	or     DWORD PTR [rbp-0x13],edi
   140011dd3:	ss (bad) 
   140011dd5:	pop    rbp
   140011dd6:	jnp    0x140011e30
   140011dd8:	add    al,0x80
   140011dda:	fs out dx,eax
   140011ddc:	cwde   
   140011ddd:	mov    esp,0x52f9eb66
   140011de2:	rex.X rcr sil,1
   140011de5:	hlt    
   140011de6:	pop    rbp
   140011de7:	nop    DWORD PTR [rdi]
   140011dea:	fwait
   140011deb:	cmp    ah,BYTE PTR [rip+0x5cddbfe7]        # 0x19cdeddd8
   140011df1:	test   BYTE PTR [rcx+rdx*2-0x3f],0x1
   140011df6:	popf   
   140011df7:	push   0x6dfb7fbd
   140011dfc:	mov    ah,BYTE PTR [rsi-0x3f1c4a83]
   140011e02:	push   rdx
   140011e03:	(bad)  
   140011e04:	pop    rdi
   140011e05:	jmp    0x140011d8f
   140011e07:	pop    rbx
   140011e08:	test   esp,ecx
   140011e0a:	pop    rdi
   140011e0b:	outs   dx,DWORD PTR ds:[rsi]
   140011e0c:	push   rdx
   140011e0d:	jle    0x140011e2f
   140011e0f:	push   rbp
   140011e10:	sub    eax,0x7077c2b2
   140011e15:	add    BYTE PTR [rdx-0x687ccd3f],dh
   140011e1b:	mov    ds,edi
   140011e1d:	xor    DWORD PTR [rdi],edi
   140011e1f:	rex.R pop rcx
   140011e21:	(bad)  
   140011e22:	xchg   BYTE PTR [rbx-0x2a38b2f6],ah
   140011e28:	in     al,0xe2
   140011e2a:	rex.RX jb 0x140011e51
   140011e2d:	sbb    DWORD PTR [rdi],ecx
   140011e2f:	and    BYTE PTR [rip+0x28f5df66],0x37        # 0x168f6fd9c
   140011e36:	jg     0x140011e2d
   140011e38:	jns    0x140011e50
   140011e3a:	outs   dx,BYTE PTR ds:[rsi]
   140011e3b:	pop    rbx
   140011e3c:	xchg   eax,esp
   140011e3e:	jmp    0x140011e13
   140011e40:	add    BYTE PTR [rbx+rsi*2+0x6f],bh
   140011e44:	jg     0x140011e2a
   140011e46:	enter  0x8f43,0x7c
   140011e4a:	jp     0x140011e7c
   140011e4c:	(bad)  
   140011e4d:	jg     0x140011e98
   140011e4f:	mov    esp,0xe322277f
   140011e54:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011e55:	pop    rsp
   140011e56:	mov    DWORD PTR [rdx+rdx*1],ecx
   140011e59:	(bad)  
   140011e5a:	fnstsw WORD PTR [rdx-0x5d]
   140011e5d:	mov    ah,0xb9
   140011e5f:	mov    ecx,0x86c73020
   140011e64:	(bad)  
   140011e65:	pop    rsi
   140011e66:	ror    dl,cl
   140011e68:	push   rdi
   140011e69:	shl    dh,1
   140011e6b:	fdivr  st,st(1)
   140011e6d:	outs   dx,BYTE PTR ds:[rsi]
   140011e6e:	rex.WXB (bad) 
   140011e70:	mov    dh,0x85
   140011e72:	mov    cl,0x96
   140011e74:	sti    
   140011e75:	stos   BYTE PTR es:[rdi],al
   140011e76:	(bad)  
   140011e77:	test   al,al
   140011e79:	sub    ah,ch
   140011e7b:	push   rdx
   140011e7c:	xchg   esp,eax
   140011e7d:	add    eax,0xa61f47bb
   140011e82:	sbb    DWORD PTR [rsi],ebp
   140011e84:	loopne 0x140011e30
   140011e86:	and    esi,ebp
   140011e88:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011e89:	scas   eax,DWORD PTR es:[rdi]
   140011e8a:	adc    ebp,DWORD PTR [rsi+0x7f3eb65d]
   140011e90:	rcl    BYTE PTR [rax],1
   140011e92:	(bad)  
   140011e93:	scas   al,BYTE PTR es:[rdi]
   140011e94:	lea    eax,[rbx-0x1d777220]
   140011e9a:	adc    BYTE PTR [rbx+0x9],ch
   140011e9d:	mov    ?,WORD PTR [rdi-0x7c78b7a9]
   140011ea3:	pop    rdx
   140011ea4:	scas   al,BYTE PTR es:[rdi]
   140011ea5:	mov    ds,WORD PTR [rbp-0x1d3bfdbd]
   140011eab:	(bad)  
   140011eac:	fsubrp st(0),st
   140011eae:	retf   
   140011eaf:	xchg   edx,eax
   140011eb0:	xchg   ebx,eax
   140011eb1:	outs   dx,DWORD PTR ds:[rsi]
   140011eb2:	dec    DWORD PTR [rcx+riz*2]
   140011eb5:	in     eax,dx
   140011eb6:	cmp    BYTE PTR [rdx-0x748134e5],bh
   140011ebc:	xchg   edi,eax
   140011ebd:	pop    rdi
   140011ebe:	(bad)  
   140011ebf:	fistp  QWORD PTR [rax+0x4e2ef50c]
   140011ec5:	sbb    dh,BYTE PTR [rbx]
   140011ec7:	pop    rsi
   140011ec8:	ss ins BYTE PTR es:[rdi],dx
   140011eca:	pop    rbx
   140011ecb:	jrcxz  0x140011ec3
   140011ecd:	mov    esp,0x42793dc6
   140011ed2:	ss add ch,ch
   140011ed5:	ror    BYTE PTR [rdi+0x62],0xce
   140011ed9:	stos   DWORD PTR es:[rdi],eax
   140011eda:	shl    dl,1
   140011edc:	sti    
   140011edd:	adc    ebx,DWORD PTR [rax-0x69]
   140011ee0:	pop    rsp
   140011ee1:	jg     0x140011eed
   140011ee3:	mov    DWORD PTR [rbx],edx
   140011ee5:	push   0x7e53b47
   140011eea:	mov    cl,0xfe
   140011eec:	jns    0x140011ee1
   140011eee:	out    dx,al
   140011eef:	add    WORD PTR [rbx+rsi*8+0x6831cf33],sp
   140011ef7:	(bad)  
   140011ef8:	and    esi,0x66
   140011efb:	sbb    al,0xd2
   140011efd:	sub    DWORD PTR [rdi+0x1afa4238],esi
   140011f03:	xor    DWORD PTR [r14+riz*1+0x19],r15d
   140011f08:	rex.R
   140011f09:	repz not BYTE PTR [rsi-0x67bb7f1a]
   140011f10:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011f11:	imul   edx,DWORD PTR [rax-0x2d],0xfffffff7
   140011f15:	rex.R stos BYTE PTR es:[rdi],al
   140011f17:	adc    edx,DWORD PTR [rax-0x4f290742]
   140011f1d:	sbb    eax,DWORD PTR [rbx-0x33d632d0]
   140011f23:	add    eax,DWORD PTR [rax+0x5d]
   140011f26:	pop    rsp
   140011f27:	cld    
   140011f28:	and    ecx,ebp
   140011f2a:	(bad)  
   140011f2b:	cmp    al,0x38
   140011f2d:	sti    
   140011f2e:	and    BYTE PTR [rsi+0x5699209f],ch
   140011f34:	sbb    al,0x3a
   140011f36:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011f37:	lahf   
   140011f38:	div    dh
   140011f3a:	shr    BYTE PTR [rax+rdi*8+0x501cbce9],cl
   140011f41:	push   0xffffffffe09fa6f3
   140011f46:	(bad)  
   140011f47:	cmp    edi,DWORD PTR [rdi-0x76]
   140011f4a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011f4b:	dec    BYTE PTR [rdi-0x64806084]
   140011f51:	rol    DWORD PTR [rax-0x7fe7029],cl
   140011f57:	(bad)  
   140011f58:	mov    esp,0xf2bffbfd
   140011f5d:	xchg   DWORD PTR [rsi-0x6a1a7a3],ebx
   140011f63:	sahf   
   140011f64:	jb     0x140011f96
   140011f66:	cld    
   140011f67:	mov    ah,0x8
   140011f69:	clts   
   140011f6b:	lea    edi,[rsp+rbp*8]
   140011f6e:	mov    ah,0x88
   140011f70:	(bad)
   140011f73:	xchg   esi,eax
   140011f74:	xchg   BYTE PTR [rbx+0x76],ah
   140011f77:	jae    0x140011fcc
   140011f79:	and    dl,cl
   140011f7b:	and    eax,0x68dd33be
   140011f80:	jbe    0x140011fa5
   140011f82:	jne    0x140011f46
   140011f84:	rex.B (bad) 
   140011f86:	test   BYTE PTR [rbx-0x9338c92],0x3b
   140011f8d:	leave  
   140011f8e:	sahf   
   140011f8f:	and    eax,0x3cf32b39
   140011f94:	push   rbp
   140011f95:	cwde   
   140011f96:	push   rdx
   140011f97:	cmp    edi,ecx
   140011f99:	(bad)  
   140011f9b:	adc    DWORD PTR [rsi-0x55],esi
   140011f9e:	and    DWORD PTR [rbx+riz*1-0x24],edx
   140011fa2:	mov    edi,DWORD PTR [rdi+0x1f3ed843]
   140011fa8:	adc    esp,ebp
   140011faa:	(bad)  
   140011fab:	mov    bl,0xfc
   140011fad:	lods   al,BYTE PTR ds:[rsi]
   140011fae:	jg     0x14001200f
   140011fb0:	(bad)  
   140011fb1:	in     eax,0x1b
   140011fb3:	xor    ebp,ebp
   140011fb5:	enter  0x7a66,0xa4
   140011fb9:	rcr    BYTE PTR [rdi-0x53ec2334],0x9c
   140011fc0:	push   0xffffffffe5366617
   140011fc5:	out    0x13,al
   140011fc7:	ffreep st(1)
   140011fc9:	test   edi,eax
   140011fcb:	(bad)  
   140011fcd:	rex.X cwde 
   140011fcf:	push   rdx
   140011fd0:	pop    rsp
   140011fd1:	ds ret 
   140011fd3:	(bad)  
   140011fd5:	imul   ecx,edx,0xddb8dbab
   140011fdb:	sbb    esi,DWORD PTR [rcx-0x10a26c4]
   140011fe1:	xchg   edx,eax
   140011fe2:	adc    al,0xdd
   140011fe4:	(bad)  
   140011fe5:	jge    0x140011ff8
   140011fe7:	sub    al,0x1d
   140011fe9:	mov    BYTE PTR [rdi+0x1d8dceb9],ch
   140011fef:	ret    
   140011ff0:	jl     0x140011fdd
   140011ff2:	ins    DWORD PTR es:[rdi],dx
   140011ff3:	xchg   edi,eax
   140011ff4:	mov    dh,0x4c
   140011ff6:	(bad)  
   140011ff7:	(bad)  
   140011ff9:	rex.X (bad) 
   140011ffb:	(bad)  
   140011ffc:	and    eax,0x9be90ba7
   140012001:	jae    0x140011fcc
   140012003:	xchg   ebx,eax
   140012004:	(bad)  [rsi+0x53]
   140012007:	scas   al,BYTE PTR es:[rdi]
   140012008:	ffreep st(6)
   14001200a:	add    al,0x49
   14001200c:	icebp  
   14001200d:	out    0xbd,al
   14001200f:	jnp    0x140011fe3
   140012011:	retf   
   140012012:	ins    BYTE PTR es:[rdi],dx
   140012013:	stos   DWORD PTR es:[rdi],eax
   140012014:	repz fimul DWORD PTR ss:[rax+0x2d]
   140012019:	icebp  
   14001201a:	mul    bh
   14001201c:	retf   0xab5
   14001201f:	pop    rcx
   140012020:	pop    rbx
   140012021:	and    eax,0x80c903dd
   140012026:	jne    0x140012094
   140012028:	rex
   140012029:	addr32 xchg ebx,eax
   14001202b:	or     eax,esi
   14001202d:	ins    DWORD PTR es:[rdi],dx
   14001202e:	mov    bl,0x74
   140012030:	push   0xffffffffb63c7b0d
   140012035:	int3   
   140012036:	rcl    DWORD PTR [rax],0xc9
   140012039:	imul   eax,DWORD PTR [rip+0x4c486de4],0x17        # 0x18c498e24
   140012040:	fcmovb st,st(0)
   140012042:	mov    dl,0x75
   140012044:	adc    ch,ch
   140012046:	mov    ecx,0x9148bb98
   14001204b:	sub    BYTE PTR [rcx+0x3c],ch
   14001204e:	sbb    ecx,edi
   140012050:	cld    
   140012051:	popf   
   140012052:	mov    bh,BYTE PTR [rdi]
   140012054:	shr    esi,0x77
   140012057:	add    edi,edi
   140012059:	(bad)  
   14001205a:	mov    bh,0x29
   14001205c:	or     eax,0xe006fdb8
   140012061:	fwait
   140012062:	js     0x14001205f
   140012064:	mov    bh,0x7e
   140012066:	loop   0x14001203b
   140012068:	(bad)  
   140012069:	ss out dx,al
   14001206b:	cmp    esi,ecx
   14001206d:	fdiv   QWORD PTR [rax+0x71]
   140012070:	cld    
   140012071:	gs out dx,eax
   140012073:	retf   
   140012074:	ja     0x140012016
   140012076:	(bad)  
   140012077:	adc    edx,edx
   140012079:	jb     0x140012047
   14001207b:	icebp  
   14001207c:	mov    ecx,DWORD PTR [rcx]
   14001207e:	sbb    eax,0x44cb10cf
   140012083:	cmp    dh,BYTE PTR [rdi-0x3d]
   140012086:	test   BYTE PTR gs:[rdi+0xe],bl
   14001208a:	mov    esi,0x4dba6906
   14001208f:	int3   
   140012090:	pop    rcx
   140012091:	jrcxz  0x1400120aa
   140012093:	in     al,0x88
   140012095:	loope  0x140012091
   140012097:	pop    rsp
   140012098:	out    dx,al
   140012099:	fnstcw WORD PTR [rcx-0x70]
   14001209c:	lahf   
   14001209d:	(bad)  
   14001209e:	mov    es,edi
   1400120a0:	sahf   
   1400120a1:	mov    ch,BYTE PTR ss:[rdx+0x68]
   1400120a5:	sbb    cl,dl
   1400120a7:	push   rax
   1400120a8:	sub    al,0x2c
   1400120aa:	jb     0x14001209f
   1400120ac:	loope  0x1400120e5
   1400120ae:	adc    eax,DWORD PTR [rsi-0x2406a39d]
   1400120b4:	test   bl,dh
   1400120b6:	addr32 (bad) 
   1400120b8:	pop    rcx
   1400120b9:	nop
   1400120ba:	xchg   esp,eax
   1400120bb:	out    0x9b,eax
   1400120bd:	push   rdx
   1400120be:	test   BYTE PTR [rcx],bl
   1400120c0:	push   0xffffffffffffffcc
   1400120c2:	cmp    al,0xba
   1400120c4:	lods   al,BYTE PTR ds:[rsi]
   1400120c5:	rex.B jmp 0xde8eba19
   1400120cb:	xor    BYTE PTR [rip+0x60cf50b2],dh        # 0x1a0d07183
   1400120d1:	imul   ecx,DWORD PTR [rbp+0x3cfaef93],0x708568d5
   1400120db:	in     eax,0xc
   1400120dd:	stos   DWORD PTR es:[rdi],eax
   1400120de:	pop    rbx
   1400120df:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400120e0:	sbb    BYTE PTR [rbp+0x3a],bl
   1400120e3:	(bad)  
   1400120e4:	fistp  QWORD PTR [rcx-0x1b842976]
   1400120ea:	mov    ecx,0x7bd776f5
   1400120ef:	push   rbx
   1400120f0:	not    BYTE PTR [rdx+0x13]
   1400120f3:	ficomp DWORD PTR [rdi]
   1400120f5:	repnz ror BYTE PTR [rdi-0x11],0xa4
   1400120fa:	mov    ebp,0x3a5b5cfb
   1400120ff:	imul   eax,DWORD PTR [rdi-0x70add9a0],0xffffffb4
   140012106:	push   rcx
   140012107:	xchg   ebp,eax
   140012108:	xchg   ebx,eax
   140012109:	cmp    DWORD PTR [rdi-0x72],ecx
   14001210c:	sub    DWORD PTR [rsi+0x2a],edi
   14001210f:	in     eax,0xb5
   140012111:	adc    al,0x62
   140012113:	sti    
   140012114:	cmp    al,0x2e
   140012116:	push   rdi
   140012117:	sbb    BYTE PTR [rdx],dl
   140012119:	jbe    0x1400120fb
   14001211b:	shl    dh,cl
   14001211d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001211e:	cmc    
   14001211f:	repnz lods eax,DWORD PTR ds:[rsi]
   140012121:	(bad)  
   140012122:	rcl    BYTE PTR [rsi-0x5f],1
   140012125:	push   0x1239e773
   14001212a:	nop
   14001212b:	test   esi,edx
   14001212d:	xor    DWORD PTR [rdi],edx
   14001212f:	(bad)  
   140012130:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012131:	(bad)  
   140012132:	je     0x1400120f9
   140012134:	(bad)  
   140012135:	js     0x140012198
   140012137:	xchg   edx,eax
   140012138:	mov    al,bh
   14001213a:	add    edx,DWORD PTR [rsi]
   14001213c:	xor    edx,DWORD PTR [rax+0x73]
   14001213f:	mov    eax,0x73e7ca43
   140012144:	sbb    eax,0x3edeb434
   140012149:	rex.WRXB or QWORD PTR [r14],r14
   14001214c:	xchg   DWORD PTR [rbx],esp
   14001214e:	test   eax,0x9116824
   140012153:	jbe    0x140012168
   140012155:	pop    rdx
   140012156:	adc    al,0x17
   140012158:	add    ebp,DWORD PTR [rax-0x32e4c52]
   14001215e:	rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012160:	(bad)  
   140012161:	(bad)  
   140012162:	jae    0x140012181
   140012164:	jmp    0x121602555
   140012169:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001216a:	int    0xff
   14001216c:	xchg   ecx,eax
   14001216d:	jrcxz  0x140012156
   14001216f:	shr    BYTE PTR [rbp-0x281bc629],cl
   140012175:	pop    rsp
   140012176:	outs   dx,BYTE PTR ds:[rsi]
   140012177:	pop    QWORD PTR [rcx]
   140012179:	clc    
   14001217a:	(bad)  
   14001217b:	mov    esp,0xf2be87fd
   140012180:	(bad)  
   140012181:	ja     0x1400121b0
   140012183:	lods   al,BYTE PTR ds:[rsi]
   140012184:	lods   eax,DWORD PTR ds:[rsi]
   140012185:	jg     0x140012148
   140012187:	xchg   edi,eax
   140012188:	(bad)  
   140012189:	addr32 mov esp,0xefc70f73
   14001218f:	cmp    bl,BYTE PTR [rbp-0x36]
   140012192:	(bad)  
   140012193:	call   0x1125dd27e
   140012198:	jge    0x14001216b
   14001219a:	icebp  
   14001219b:	call   0x105dcee69
   1400121a0:	rex.WRX imul r12,QWORD PTR [rsi+0x44],0xffffffffffffffd1
   1400121a5:	jl     0x1400121a7
   1400121a7:	(bad)  
   1400121a8:	sub    eax,0x9b919a73
   1400121ad:	pop    rsp
   1400121ae:	mov    esp,0xd3d5cc6a
   1400121b3:	or     al,ch
   1400121b5:	je     0x14001218a
   1400121b7:	imul   ebp,eax,0x60
   1400121ba:	or     BYTE PTR [rsi+0x8408a68],ah
   1400121c0:	or     al,0xeb
   1400121c2:	cmp    eax,0xc6e4b28a
   1400121c7:	icebp  
   1400121c8:	(bad)  
   1400121c9:	test   al,0xab
   1400121cb:	xor    DWORD PTR [rsi-0x6c263fe6],edi
   1400121d1:	call   0x142328d63
   1400121d6:	rex adc DWORD PTR [rbp-0x78],esi
   1400121da:	sub    edi,eax
   1400121dc:	(bad)  
   1400121dd:	fnstcw WORD PTR [rbx-0xd]
   1400121e0:	and    ch,cl
   1400121e2:	scas   al,BYTE PTR es:[rdi]
   1400121e3:	stos   DWORD PTR es:[rdi],eax
   1400121e4:	rex.WRX
   1400121e5:	lock ja 0x1400121d6
   1400121e8:	jge    0x1400121d9
   1400121ea:	retf   
   1400121eb:	lods   eax,DWORD PTR ds:[rsi]
   1400121ec:	mov    dl,0x32
   1400121ee:	mov    bl,0xf6
   1400121f0:	push   rdx
   1400121f1:	xchg   ebp,eax
   1400121f2:	test   ch,0xb6
   1400121f5:	ins    BYTE PTR es:[rdi],dx
   1400121f6:	ins    DWORD PTR es:[rdi],dx
   1400121f7:	xchg   esi,eax
   1400121f8:	fldcw  WORD PTR gs:[rbp-0x4b]
   1400121fc:	in     eax,0xf1
   1400121fe:	and    bh,BYTE PTR [rbx-0x79c89c93]
   140012204:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012205:	jnp    0x140012229
   140012207:	push   0x1a66809a
   14001220c:	call   0x5db1
   140012210:	push   0x681e987a
   140012215:	and    BYTE PTR [rsi],al
   140012217:	(bad)  
   140012218:	es jp  0x14001227d
   14001221b:	(bad)
   140012220:	adc    BYTE PTR [rsp+rax*2],dh
   140012223:	sbb    BYTE PTR [rsi],al
   140012225:	rex.RX mov dl,0xc1
   140012228:	xor    al,0xb4
   14001222a:	in     eax,0x7d
   14001222c:	(bad)  
   14001222d:	mov    dh,0x6c
   14001222f:	pop    rcx
   140012230:	xchg   esi,eax
   140012231:	sub    al,0x9
   140012233:	in     eax,dx
   140012234:	stos   BYTE PTR es:[rdi],al
   140012235:	stos   BYTE PTR es:[rdi],al
   140012236:	int3   
   140012237:	stos   BYTE PTR es:[rdi],al
   140012238:	retf   0xdcaa
   14001223b:	div    ebp
   14001223d:	jnp    0x140012236
   14001223f:	int3   
   140012240:	(bad)  
   140012241:	addr32 mov ecx,0x22d665f7
   140012247:	pop    rcx
   140012248:	and    eax,0x117a9961
   14001224d:	pop    rcx
   14001224e:	cmc    
   14001224f:	sub    eax,0xbddb7bef
   140012254:	out    0x9c,eax
   140012256:	(bad)  
   140012258:	popf   
   140012259:	in     eax,0x72
   14001225b:	(bad)  
   14001225c:	(bad)  
   14001225d:	add    esp,DWORD PTR [rcx+rdx*4]
   140012260:	rex.W (bad) 
   140012262:	mov    al,0xe8
   140012264:	(bad)  
   140012265:	xchg   edx,eax
   140012266:	int3   
   140012267:	rex.X and BYTE PTR [rbx],cl
   14001226a:	(bad)  
   14001226b:	add    esi,DWORD PTR [rcx+0x4de4e2e9]
   140012271:	out    dx,eax
   140012272:	(bad)
   140012276:	sar    DWORD PTR [rdi-0x26617742],1
   14001227c:	xchg   ebx,eax
   14001227d:	fdivr  DWORD PTR [rcx]
   14001227f:	jae    0x140012283
   140012281:	(bad)  
   140012282:	ret    0x680c
   140012285:	ins    DWORD PTR es:[rdi],dx
   140012286:	sbb    eax,esp
   140012288:	(bad)  
   140012289:	pop    rsp
   14001228a:	sub    al,0x5c
   14001228c:	push   rcx
   14001228d:	(bad)  
   14001228e:	cld    
   14001228f:	enter  0x2e03,0xa0
   140012293:	jg     0x140012295
   140012295:	mov    esp,0xb6877c3
   14001229a:	adc    BYTE PTR gs:[rcx],bl
   14001229d:	jo     0x1400122a0
   14001229f:	or     eax,0x1303512c
   1400122a4:	jb     0x140012321
   1400122a6:	xor    BYTE PTR [rdx-0x429d791],0xcb
   1400122ad:	rex.X outs dx,BYTE PTR ds:[rsi]
   1400122af:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400122b0:	lahf   
   1400122b1:	adc    ebx,DWORD PTR [rax-0x137f30bb]
   1400122b7:	out    dx,al
   1400122b8:	mov    bl,0x1f
   1400122ba:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400122bb:	mov    ebp,0xfa5ebab1
   1400122c0:	xchg   edx,eax
   1400122c1:	sub    eax,0x286b9f1e
   1400122c6:	enter  0xf97d,0xe0
   1400122ca:	popf   
   1400122cb:	xchg   edi,eax
   1400122cc:	rex cdq 
   1400122ce:	jne    0x1400122c7
   1400122d0:	(bad)
   1400122d3:	out    dx,al
   1400122d4:	jle    0x14001233a
   1400122d6:	mov    ?,WORD PTR [rcx-0x3304d0d5]
   1400122dc:	ror    BYTE PTR [rax-0x71d041bd],cl
   1400122e2:	loop   0x1400122b2
   1400122e4:	xor    al,0x64
   1400122e6:	mov    cl,0xee
   1400122e9:	xchg   ecx,eax
   1400122ea:	popf   
   1400122eb:	sub    BYTE PTR [rbp+0x3efca9f],dl
   1400122f1:	adc    edx,DWORD PTR [rdx-0x40c5ed0d]
   1400122f7:	pushf  
   1400122f8:	rol    DWORD PTR [rax-0x42],cl
   1400122fb:	(bad)  
   1400122fc:	xchg   edx,eax
   1400122fd:	out    0x59,eax
   1400122ff:	add    DWORD PTR [rdi-0x41],edx
   140012302:	test   DWORD PTR [rsi+0x6f],esp
   140012305:	call   QWORD PTR [rbx+0x3e]
   140012308:	cld    
   140012309:	push   rdi
   14001230a:	jle    0x1400122f2
   14001230c:	xchg   edi,eax
   14001230d:	ror    DWORD PTR [rip+0xffffffffc0157978],1        # 0x100169c8b
   140012313:	jns    0x1400122c1
   140012315:	std    
   140012316:	lods   eax,DWORD PTR ds:[rsi]
   140012317:	ja     0x1400122d8
   140012319:	out    0xe0,eax
   14001231b:	scas   al,BYTE PTR es:[rdi]
   14001231c:	adc    DWORD PTR [rdi-0x5f885242],0xffffffff
   140012323:	rex.RXB jmp 0x140012374
   140012326:	out    0x4d,eax
   140012328:	mov    DWORD PTR [rcx+0x333834df],edi
   14001232e:	jb     0x140012303
   140012330:	or     edx,DWORD PTR [rax]
   140012332:	mov    esp,0xd24e9dfb
   140012337:	fcom   QWORD PTR [rcx+rax*1-0xf17e7d0]
   14001233e:	(bad)  
   14001233f:	enter  0x1a50,0x68
   140012343:	sbb    DWORD PTR [rdi-0x64e9e2fe],edx
   140012349:	cmp    DWORD PTR [rdx],edx
   14001234b:	(bad)  
   14001234c:	imul   edx,DWORD PTR [rsi-0x6ff9975],0x3c
   140012353:	xor    DWORD PTR [rsp+rdi*4],0xec91ae48
   14001235a:	jp     0x14001236f
   14001235c:	or     BYTE PTR [rbp-0x4d],dl
   14001235f:	mov    fs,WORD PTR [rcx-0x454ef0]
   140012365:	xor    ch,BYTE PTR [rbp+rsi*8-0x4857c0a]
   14001236c:	rex.B (bad) 
   14001236e:	sahf   
   14001236f:	rex.X (bad) 
   140012371:	rex.R fmul DWORD PTR [rax+0x40]
   140012376:	mov    BYTE PTR [rdx],dl
   140012378:	and    eax,0xbb35e0d0
   14001237d:	repnz iret 
   14001237f:	xchg   esi,eax
   140012380:	mov    edi,0x6c00c36d
   140012385:	scas   al,BYTE PTR es:[rdi]
   140012386:	movsxd edi,ebp
   140012388:	shl    BYTE PTR [rbp+0x38],1
   14001238b:	jb     0x140012360
   14001238d:	mov    ebx,0x2d200bd1
   140012392:	rex.WR (bad) 
   140012394:	js     0x140012400
   140012396:	adc    al,0x3d
   140012398:	mov    bl,0x13
   14001239a:	movabs al,ds:0x38c8a80359a079e5
   1400123a3:	mov    ah,0x7
   1400123a5:	rex.WR xor r11b,al
   1400123a8:	es (bad) 
   1400123aa:	push   rcx
   1400123ab:	in     eax,dx
   1400123ac:	movabs eax,ds:0xf6ae7e73fdfb609
   1400123b5:	imul   ebp,DWORD PTR [rbx+0x69],0xb2085c2f
   1400123bc:	mov    al,0x43
   1400123be:	lods   eax,DWORD PTR ds:[rsi]
   1400123bf:	jle    0x1400123e9
   1400123c1:	sub    BYTE PTR [rdi+rax*8+0x51a09fa],0x28
   1400123c9:	cmp    esp,edi
   1400123cb:	out    0x3e,eax
   1400123cd:	and    DWORD PTR [rcx+0x15bdbbd8],0x5ad2977b
   1400123d7:	(bad)  
   1400123d8:	jbe    0x140012410
   1400123da:	test   BYTE PTR [rcx+rdi*1],al
   1400123dd:	mov    esi,eax
   1400123df:	jmp    0x160acdcd7
   1400123e4:	jmp    0x140012377
   1400123e6:	or     BYTE PTR [rax+rbp*1+0x7c],dl
   1400123ea:	adc    r12d,r8d
   1400123ed:	stc    
   1400123ee:	sub    DWORD PTR [rbx+0x622532a2],ebx
   1400123f4:	retf   0xaec9
   1400123f7:	mov    al,0x28
   1400123f9:	(bad)  
   1400123fb:	xor    BYTE PTR [rcx+rbp*8],al
   1400123fe:	ds jbe 0x1400123d9
   140012401:	rex
   140012402:	rex ret 
   140012404:	pop    rbx
   140012405:	out    dx,al
   140012406:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012407:	cwde   
   140012408:	enter  0xb5b9,0x18
   14001240c:	or     DWORD PTR [rax+0x7d5a60e8],0x3f
   140012413:	or     bh,dh
   140012415:	loope  0x140012486
   140012417:	(bad)  
   140012418:	or     eax,0x15e97c1
   14001241d:	pushf  
   14001241e:	fstp   st(2)
   140012420:	(bad)  
   140012421:	add    BYTE PTR [rcx-0x21521612],dh
   140012427:	cld    
   140012428:	ror    DWORD PTR [rdi],0xdd
   14001242b:	xor    bh,BYTE PTR [rax]
   14001242d:	cmp    al,0xf2
   14001242f:	(bad)  
   140012430:	(bad)  
   140012431:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012432:	repz scas al,BYTE PTR es:[rdi]
   140012434:	adc    bl,ah
   140012436:	(bad)  
   140012437:	(bad)  
   140012438:	lods   eax,DWORD PTR ds:[rsi]
   140012439:	xor    edi,DWORD PTR [rdx+rsi*1+0x1]
   14001243d:	es test eax,esi
   140012440:	leave  
   140012441:	rex.RX (bad) 
   140012443:	test   al,0xf5
   140012445:	cs rex.RXB (bad) 
   140012448:	xor    ecx,ebp
   14001244a:	rex.RXB
   14001244b:	rex.R loopne 0x1400124a2
   14001244e:	je     0x14001240d
   140012450:	test   DWORD PTR [rax+0x59],ebx
   140012453:	lahf   
   140012454:	(bad)
   140012458:	fdiv   DWORD PTR [rcx-0x62]
   14001245b:	cmp    DWORD PTR [rsi],esi
   14001245d:	rex.W sub bpl,bl
   140012460:	mov    edx,0x234eaeea
   140012465:	rex.WRX scas al,BYTE PTR es:[rdi]
   140012467:	es pop rsp
   140012469:	mov    ebp,0xb202c2b3
   14001246e:	mov    DWORD PTR [rip+0x3b175210],edx        # 0x17b187684
   140012474:	nop
   140012475:	push   rax
   140012476:	paddsw mm0,mm6
   140012479:	repnz cmc 
   14001247b:	mov    bh,0x83
   14001247d:	jnp    0x1400124f6
   14001247f:	or     BYTE PTR [rsi+0x71348a3c],0x12
   140012486:	(bad)  
   140012487:	movsxd edx,DWORD PTR [rbp-0x1f]
   14001248a:	sub    eax,DWORD PTR [rax]
   14001248c:	adc    dl,BYTE PTR [rdi+0x40]
   14001248f:	and    ah,BYTE PTR [rcx+rcx*2+0x2d]
   140012493:	ja     0x140012496
   140012495:	rex.WRXB rol QWORD PTR [r8-0x2d],0x45
   14001249a:	test   al,0x3b
   14001249c:	cmp    BYTE PTR [rdx-0x5],bh
   14001249f:	(bad)  
   1400124a0:	and    DWORD PTR [rcx+0x6995804b],0x8e3d98ec
   1400124aa:	shr    DWORD PTR [rcx+0x6716a8e3],0x11
   1400124b1:	(bad)  
   1400124b2:	xchg   edi,eax
   1400124b3:	fsubr  QWORD PTR [r8-0x6bb6ebce]
   1400124ba:	adc    eax,0x7235197e
   1400124bf:	(bad)  
   1400124c0:	jg     0x14001250f
   1400124c2:	mov    ecx,0xfd57afdb
   1400124c7:	sub    DWORD PTR [rcx+0x17],esi
   1400124ca:	cwde   
   1400124cb:	cmp    al,0xb6
   1400124cd:	out    dx,eax
   1400124ce:	(bad)  
   1400124cf:	ds (bad) 
   1400124d1:	retf   0x5b9
   1400124d4:	mov    bh,0xe7
   1400124d6:	(bad)  
   1400124d7:	xlat   BYTE PTR ds:[rbx]
   1400124d8:	addr32 out dx,al
   1400124da:	sub    DWORD PTR [rbx+0x5e3b607],0xbecf635d
   1400124e4:	push   rcx
   1400124e5:	adc    al,0x43
   1400124e7:	add    al,0xa
   1400124e9:	add    DWORD PTR [rcx+rbx*1-0x6e],ecx
   1400124ed:	out    0xd0,eax
   1400124ef:	movabs ds:0x9026791a4fe0d53e,al
   1400124f8:	cli    
   1400124f9:	jnp    0x140012565
   1400124fb:	cmc    
   1400124fc:	sbb    eax,0xaac241dd
   140012501:	add    eax,0x5399cfc4
   140012506:	shl    edi,0x8
   140012509:	and    eax,0x90c5ddca
   14001250e:	std    
   14001250f:	std    
   140012510:	add    al,0x14
   140012512:	mov    BYTE PTR [rdx],al
   140012514:	mov    edx,0x88dd8848
   140012519:	cmp    al,0x24
   14001251b:	jbe    0x140012534
   14001251d:	add    al,cl
   14001251f:	sbb    DWORD PTR [rsi+0x17507bd0],ecx
   140012525:	mov    DWORD PTR [rdx],ebx
   140012527:	mov    al,0x22
   140012529:	rex.WRB mov r11b,0xfc
   14001252c:	(bad)  
   14001252d:	out    0x82,al
   14001252f:	sbb    al,cl
   140012531:	lods   al,BYTE PTR ds:[rsi]
   140012532:	sti    
   140012533:	(bad)  
   140012534:	cs data16 (bad) 
   140012537:	xor    eax,0x1a71fb6f
   14001253c:	(bad)  
   14001253e:	adc    DWORD PTR [rsi-0x331338c],edi
   140012544:	jb     0x14001259b
   140012546:	or     BYTE PTR [rsi+0x3ce00a74],bh
   14001254c:	(bad)  
   14001254d:	(bad)  
   14001254e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001254f:	mov    bh,0xbd
   140012551:	movsxd edi,edi
   140012553:	shr    DWORD PTR [rbx],0xae
   140012556:	jp     0x14001259f
   140012558:	fild   WORD PTR [rax-0x1]
   14001255b:	xchg   DWORD PTR [rdx-0x54],eax
   14001255e:	out    dx,al
   14001255f:	rex.WR
   140012560:	(bad)
   140012565:	(bad)  
   140012566:	rex.WRB in al,0xb6
   140012569:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001256a:	jo     0x1400124f4
   14001256c:	lods   al,BYTE PTR ds:[rsi]
   14001256d:	jae    0x1400125d8
   14001256f:	xor    BYTE PTR [rbx-0x7a620a43],cl
   140012575:	fstp   QWORD PTR [rax]
   140012577:	mov    dl,0x78
   140012579:	movsxd ecx,edx
   14001257b:	rex.RXB sub eax,0xb3c2b2b7
   140012581:	add    BYTE PTR [rsi],cl
   140012583:	or     r15b,r8b
   140012586:	add    BYTE PTR [rcx+rbp*4+0x5ce38379],al
   14001258d:	or     al,0x26
   14001258f:	cmp    esp,eax
   140012591:	and    ecx,esi
   140012593:	out    0xb1,eax
   140012595:	mov    esp,0x566deb0
   14001259a:	push   rbp
   14001259b:	rex.WRXB lea r10,[r13+0x46c46eab]
   1400125a2:	call   QWORD PTR [rax]
   1400125a4:	test   al,0xef
   1400125a6:	(bad)  
   1400125a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400125a8:	xchg   ebx,eax
   1400125a9:	rex.RXB ror DWORD PTR [r11+0x73],0x92
   1400125ae:	(bad)  
   1400125af:	adc    BYTE PTR [rdx],ch
   1400125b1:	ins    DWORD PTR es:[rdi],dx
   1400125b2:	adc    ch,BYTE PTR [rdx-0x49]
   1400125b5:	rcl    DWORD PTR [rdi+rax*8],cl
   1400125b8:	adc    BYTE PTR [rdi],bl
   1400125ba:	cmp    eax,0xe6626e6e
   1400125bf:	(bad)  
   1400125c0:	mov    bh,0xe0
   1400125c2:	hlt    
   1400125c3:	(bad)  
   1400125c4:	outs   dx,DWORD PTR ds:[rsi]
   1400125c5:	rex.X out dx,eax
   1400125c7:	out    0x2a,al
   1400125c9:	ret    0x29dc
   1400125cc:	mov    WORD PTR [rsi+rcx*4-0x5e],cs
   1400125d0:	sahf   
   1400125d1:	lahf   
   1400125d2:	add    al,0xad
   1400125d4:	sub    al,0x0
   1400125d6:	imul   esp,DWORD PTR [rbx],0xeb750437
   1400125dc:	scas   eax,DWORD PTR es:[rdi]
   1400125dd:	int    0x3e
   1400125df:	cmc    
   1400125e0:	dec    ah
   1400125e2:	repnz pop rbx
   1400125e4:	cmp    al,0xdf
   1400125e6:	fcomp  QWORD PTR [rbp-0x25]
   1400125e9:	fild   QWORD PTR [rcx+rdi*4+0x2147ac89]
   1400125f0:	(bad)  
   1400125f1:	lahf   
   1400125f2:	adc    eax,0x212cc048
   1400125f7:	retf   0x74d5
   1400125fa:	repz movabs al,ds:0x4dccc59e3d23e3db
   140012604:	sar    DWORD PTR [rdx+0x73194eef],1
   14001260a:	jns    0x1400125f4
   14001260c:	xchg   ebp,eax
   14001260d:	repz pop rax
   14001260f:	(bad)  
   140012610:	and    esi,ecx
   140012612:	ret    
   140012613:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012614:	lahf   
   140012615:	cli    
   140012616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   140012618:	xchg   ecx,eax
   140012619:	je     0x1400125a5
   14001261b:	jno    0x1400125be
   14001261d:	(bad)  
   14001261e:	or     edi,ebp
   140012620:	cdq    
   140012621:	(bad)
   140012624:	retf   
   140012625:	ret    0x592c
   140012628:	jge    0x1400125e9
   14001262a:	xchg   DWORD PTR [rcx+0x4d],ebp
   14001262d:	push   0xfffffffff024e515
   140012632:	xchg   esi,eax
   140012633:	out    0xc3,eax
   140012635:	jle    0x1400125ea
   140012637:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012638:	leave  
   140012639:	rex.WB xchg BYTE PTR [r8+0x220e9cec],dl
   140012640:	sub    bh,bl
   140012642:	rex.WXB
   140012643:	cmp    ebp,DWORD PTR [r9-0x2084b3db]
   14001264a:	(bad)  
   14001264b:	xchg   ebx,eax
   14001264c:	ja     0x1400126cd
   14001264e:	add    al,0x97
   140012650:	inc    BYTE PTR [rcx]
   140012652:	mov    dl,0x71
   140012654:	jl     0x1400126af
   140012656:	(bad)  
   140012657:	ud1    esi,DWORD PTR [rax-0x29c31ff6]
   14001265e:	jle    0x1400126c8
   140012660:	iret   
   140012661:	sahf   
   140012662:	(bad)  
   140012663:	int    0x6f
   140012665:	jnp    0x14001262e
   140012667:	lea    edi,[rbx]
   140012669:	ja     0x14001265a
   14001266b:	stc    
   14001266c:	xchg   ecx,eax
   14001266d:	mov    edx,0xa44f79d3
   140012672:	jo     0x1400126e9
   140012674:	add    dh,BYTE PTR [rdx]
   140012676:	pushf  
   140012677:	cpuid  
   140012679:	sbb    eax,0x265dfc73
   14001267e:	test   BYTE PTR [rcx+0x77],ch
   140012681:	rex (bad) 
   140012683:	pop    rsi
   140012684:	rex.WX
   140012685:	rex.X ret 0x4e18
   140012689:	xor    ch,BYTE PTR [rbx+0xb]
   14001268c:	(bad)  
   14001268d:	stos   BYTE PTR es:[rdi],al
   14001268e:	(bad)  
   14001268f:	or     edx,ebx
   140012691:	jmp    0xd7e14fb2
   140012696:	or     eax,0xacfc3c9a
   14001269b:	push   rsp
   14001269c:	rex.WX loopne 0x14001270c
   14001269f:	(bad)  
   1400126a0:	loopne 0x140012702
   1400126a2:	sbb    edx,0x92f64168
   1400126a8:	cmovb  esp,DWORD PTR [rcx-0x6c6b9b5a]
   1400126af:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400126b0:	jge    0x14001266c
   1400126b2:	push   rdx
   1400126b3:	add    eax,eax
   1400126b5:	or     BYTE PTR [rax+0x8ec0d9a],ch
   1400126bb:	add    ebx,ebp
   1400126bd:	xchg   edi,eax
   1400126be:	pop    rsp
   1400126bf:	mov    ?,WORD PTR [rbp+0x3b344181]
   1400126c5:	xchg   BYTE PTR [rcx-0x665fb09d],al
   1400126cb:	cdq    
   1400126cc:	rex fcomp QWORD PTR [rdi+rax*1+0x51]
   1400126d1:	test   DWORD PTR [rsi+rbp*4-0x1d7ad0e4],eax
   1400126d8:	sub    al,0x8c
   1400126da:	(bad)  
   1400126db:	fld    QWORD PTR [rbp*8-0x209877c2]
   1400126e2:	lock add esp,edx
   1400126e5:	popf   
   1400126e6:	test   BYTE PTR ds:[rcx-0x70b373cf],bl
   1400126ed:	(bad)  
   1400126ee:	(bad)  
   1400126ef:	cli    
   1400126f0:	cmp    dl,ah
   1400126f2:	loop   0x140012710
   1400126f4:	push   0xffffffffaee00563
   1400126f9:	(bad)  
   1400126fa:	es cli 
   1400126fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400126fd:	lods   al,BYTE PTR ds:[rsi]
   1400126fe:	or     BYTE PTR [rcx],bh
   140012700:	in     eax,0x37
   140012702:	jo     0x1400126bf
   140012704:	call   0x1042fd4d0
   140012709:	mov    dl,0x33
   14001270b:	sar    BYTE PTR [rdx-0x95249cc],0xb
   140012712:	rex.RX retf 
   140012714:	cmp    bh,BYTE PTR [rbx-0x4d73aa25]
   14001271a:	xchg   ebx,eax
   14001271b:	add    esi,0x15
   14001271e:	adc    BYTE PTR [rdx+0x2],dh
   140012721:	adc    BYTE PTR [rbp-0x5cb36981],dl
   140012727:	enter  0x2ac2,0x4
   14001272b:	jne    0x1400127ac
   14001272d:	jrcxz  0x140012768
   14001272f:	fisubr DWORD PTR [rcx]
   140012731:	pop    rbx
   140012732:	in     eax,0x3b
   140012734:	sub    al,BYTE PTR [rdi+rsi*1]
   140012737:	movabs ds:0xb74d03cea0098200,eax
   140012740:	(bad)  
   140012741:	add    BYTE PTR [rbp-0x22],bl
   140012744:	fsub   st,st(2)
   140012746:	popf   
   140012747:	xor    BYTE PTR [rbx],dh
   140012749:	push   rbx
   14001274a:	cld    
   14001274b:	out    0x56,eax
   14001274d:	cmp    ah,BYTE PTR [rax-0x5a73cda8]
   140012753:	sbb    al,0x58
   140012755:	(bad)  
   140012756:	add    BYTE PTR [rbp+0x41],al
   140012759:	adc    DWORD PTR [rcx],esi
   14001275b:	adc    eax,0x8f5181d9
   140012760:	stos   DWORD PTR es:[rdi],eax
   140012761:	pop    rsp
   140012762:	mov    DWORD PTR [rcx+0x323ce51d],edi
   140012768:	in     al,0x4a
   14001276a:	push   0x1c
   14001276c:	retf   0x2246
   14001276f:	add    al,0x46
   140012771:	movabs al,ds:0x7f9b047bbcde2180
   14001277a:	lods   al,BYTE PTR ds:[rsi]
   14001277b:	pop    rbp
   14001277c:	or     DWORD PTR [rbx-0x3],0xfffffff9
   140012780:	xchg   edx,eax
   140012781:	outs   dx,BYTE PTR ds:[rsi]
   140012782:	(bad)  
   140012783:	add    DWORD PTR [rbx+r15*4-0x2283a953],r11d
   14001278b:	popf   
   14001278c:	outs   dx,DWORD PTR ds:[rsi]
   14001278d:	fnsave [rbx-0x8]
   140012790:	(bad)  
   140012792:	(bad)  
   140012794:	(bad)  
   140012795:	sar    bh,1
   140012797:	movabs eax,ds:0x698430e808bbeb18
   1400127a0:	(bad)  
   1400127a1:	(bad)  
   1400127a2:	fcmove st,st(0)
   1400127a4:	and    BYTE PTR [rdi+0x554004f],al
   1400127aa:	movabs al,ds:0xb6edca27c599f130
   1400127b3:	jno    0x14001281b
   1400127b5:	(bad)  
   1400127b6:	mov    bh,0xc4
   1400127b8:	mov    BYTE PTR [rbp+0x7],ah
   1400127bb:	sbb    BYTE PTR [rdi],dh
   1400127bd:	sbb    bl,ah
   1400127bf:	sbb    ch,BYTE PTR [rbx]
   1400127c1:	std    
   1400127c2:	xchg   edx,eax
   1400127c3:	mov    esp,0xe7379c
   1400127c8:	ins    BYTE PTR es:[rdi],dx
   1400127c9:	push   rbp
   1400127ca:	enter  0xad84,0x1b
   1400127ce:	(bad)  
   1400127cf:	fistp  WORD PTR [rax]
   1400127d1:	cli    
   1400127d2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400127d3:	(bad)  
   1400127d4:	sahf   
   1400127d5:	add    al,0x26
   1400127d7:	sub    DWORD PTR [rax],ecx
   1400127d9:	(bad)  
   1400127da:	out    0xd,eax
   1400127dc:	je     0x140012764
   1400127de:	rex.RX mov al,0xf4
   1400127e1:	(bad)  
   1400127e2:	fcmovnbe st,st(1)
   1400127e4:	sbb    eax,0xfa7e09d8
   1400127e9:	(bad)  
   1400127ea:	xor    al,0x93
   1400127ec:	(bad)  
   1400127ed:	adc    bh,dl
   1400127ef:	push   rsi
   1400127f0:	je     0x1400127b7
   1400127f2:	cdq    
   1400127f3:	add    BYTE PTR [rcx-0x282b14e3],cl
   1400127f9:	jle    0x1400127f8
   1400127fb:	(bad)  
   1400127fc:	outs   dx,BYTE PTR ds:[rsi]
   1400127fd:	jnp    0x14001281e
   1400127ff:	neg    BYTE PTR ss:[rdi-0x79]
   140012803:	(bad)  
   140012804:	(bad)  
   140012805:	cmp    al,0x7a
   140012807:	out    0xc6,eax
   140012809:	xor    DWORD PTR [rsi*2+0x34dcf51c],edi
   140012810:	ret    0x82ca
   140012813:	xor    al,0xfb
   140012815:	movabs al,ds:0x6fda7215004fc994
   14001281e:	and    ch,0x1
   140012821:	jo     0x1400127a9
   140012823:	cld    
   140012824:	stos   BYTE PTR es:[rdi],al
   140012825:	fdiv   DWORD PTR [rdx-0x5710d0bb]
   14001282b:	cmp    dh,0xe6
   14001282e:	(bad)  
   14001282f:	test   al,0x7b
   140012831:	and    BYTE PTR [rdi-0x582ecd61],cl
   140012837:	push   rcx
   140012838:	add    al,0x7b
   14001283a:	add    BYTE PTR [rbp-0x54],ah
   14001283d:	mov    esp,0x4419ebc5
   140012842:	lock out dx,eax
   140012844:	mov    bh,0xa0
   140012846:	xchg   BYTE PTR [rdx+0x39],al
   140012849:	in     al,0x6b
   14001284b:	enter  0xc038,0x90
   14001284f:	sub    DWORD PTR [rax-0x1d],0xffffffb2
   140012853:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012854:	mov    ecx,0x2b9e7248
   140012859:	add    dl,BYTE PTR gs:[rbp+0x1e]
   14001285d:	sbb    eax,0xa66016f
   140012862:	add    DWORD PTR [rbp-0x75ff3c7a],ebp
   140012868:	pop    rsi
   140012869:	(bad)  
   14001286a:	repz rcl BYTE PTR fs:[rbx+rax*2],cl
   14001286f:	pop    rcx
   140012870:	loope  0x140012899
   140012872:	fild   WORD PTR [rdi+0x22]
   140012875:	clts   
   140012877:	data16 rex.WX
   140012879:	add    al,0x5a
   14001287c:	mov    ss,WORD PTR [rbp+0x3ab24ef3]
   140012882:	shr    bl,1
   140012884:	movabs eax,ds:0xfe6fbb97a0004f3c
   14001288d:	mov    ecx,0xdf9af470
   140012892:	in     al,0x6b
   140012894:	(bad)  
   140012895:	test   DWORD PTR [rbp+0x3],eax
   140012898:	pop    rsi
   140012899:	(bad)  
   14001289a:	xor    dh,al
   14001289c:	jnp    0x1400128f5
   14001289e:	add    bh,ah
   1400128a0:	mov    cl,0xf6
   1400128a2:	add    edi,DWORD PTR [rbx]
   1400128a4:	ja     0x14001287c
   1400128a6:	mov    bh,0xbd
   1400128a8:	jmp    0x1400128e7
   1400128aa:	(bad)  
   1400128ab:	mov    gs,esp
   1400128ad:	fsincos 
   1400128af:	and    esi,DWORD PTR [rbp-0x23]
   1400128b2:	repz mov esi,0xce4ae910
   1400128b8:	iret   
   1400128b9:	pop    rsi
   1400128ba:	ret    0x9c6c
   1400128bd:	(bad)  
   1400128be:	sbb    BYTE PTR [rcx+rsi*4-0x25],dl
   1400128c2:	(bad)  
   1400128c3:	or     ah,bh
   1400128c5:	call   0x1839b3f41
   1400128ca:	rol    DWORD PTR [rdi-0x19826a53],1
   1400128d0:	test   DWORD PTR [rbx],edi
   1400128d2:	cli    
   1400128d3:	add    eax,0x1f22c617
   1400128d8:	(bad)  
   1400128d9:	(bad)  
   1400128da:	sbb    eax,DWORD PTR [rax]
   1400128dc:	fwait
   1400128dd:	cs sahf 
   1400128df:	rex.WXB and r10b,cl
   1400128e2:	mov    edi,0xa7f936b0
   1400128e7:	(bad)  
   1400128e8:	mov    bl,0x37
   1400128ea:	frstor [rax-0x6a]
   1400128ed:	ror    BYTE PTR [rdi],0x6d
   1400128f0:	or     al,0x74
   1400128f2:	data16 stos BYTE PTR es:[rdi],al
   1400128f4:	in     eax,dx
   1400128f5:	sub    DWORD PTR [rcx],edx
   1400128f7:	rex.W jge 0x14001293e
   1400128fa:	rex.X ins BYTE PTR es:[rdi],dx
   1400128fc:	(bad)  
   1400128fd:	mov    al,0xa3
   1400128ff:	mov    ds,WORD PTR [rax-0x45]
   140012902:	repnz (bad) 
   140012904:	lods   al,BYTE PTR ds:[rsi]
   140012905:	imul   ebp
   140012907:	rex jp 0x1400128f4
   14001290a:	cmp    ebp,eax
   14001290c:	sahf   
   14001290d:	cmp    al,0x82
   14001290f:	push   0x65
   140012911:	add    DWORD PTR [rcx-0xbbdbf27],esp
   140012917:	repz test DWORD PTR [rbp-0x543d3f3],ecx
   14001291e:	rex.WRB sbb BYTE PTR [r13+0x6be8ede1],r15b
   140012925:	ss adc esi,esp
   140012928:	movsxd r12,DWORD PTR [r10+r13*2+0x14]
   14001292d:	mov    ebp,0xcb08e333
   140012932:	jae    0x1400128d4
   140012934:	out    dx,al
   140012935:	sbb    cl,BYTE PTR [rax-0x3ceb2eae]
   14001293b:	cwde   
   14001293c:	jg     0x1400128de
   14001293e:	(bad)  
   14001293f:	ins    DWORD PTR es:[rdi],dx
   140012940:	cmc    
   140012941:	adc    eax,0x2b7e524
   140012946:	cmp    esi,ebx
   140012948:	outs   dx,DWORD PTR ds:[rsi]
   140012949:	cs scas al,BYTE PTR es:[rdi]
   14001294b:	cmp    al,0x8b
   14001294d:	or     al,0xc7
   14001294f:	add    edx,DWORD PTR [rdi-0x6752603e]
   140012955:	out    0xf8,eax
   140012957:	fwait
   140012958:	cmp    bpl,spl
   14001295b:	xchg   edi,eax
   14001295c:	loope  0x14001296d
   14001295e:	sahf   
   14001295f:	rex.WRXB movabs al,ds:0xc86ee27dc3940e39
   140012969:	add    ecx,DWORD PTR [rcx+0x79731f20]
   14001296f:	loop   0x14001296b
   140012971:	cld    
   140012972:	rex.RB ret 0xeb0b
   140012976:	outs   dx,DWORD PTR ds:[rsi]
   140012977:	cmp    bh,BYTE PTR [rax+rdx*2+0x6feb4503]
   14001297e:	call   QWORD PTR [rbp+rax*8-0x550f48c1]
   140012985:	rex.XB adc al,0x46
   140012988:	adc    DWORD PTR [rcx],edi
   14001298a:	enter  0x2263,0x37
   14001298e:	rex.WR sub rax,0x711f6140
   140012994:	add    DWORD PTR [rcx-0x24],edi
   140012997:	hlt    
   140012998:	adc    al,0xb5
   14001299a:	add    BYTE PTR [rsi+0x432f9072],bl
   1400129a0:	xlat   BYTE PTR ds:[rbx]
   1400129a1:	and    eax,0x5cb4e2e4
   1400129a6:	ror    dh,0xac
   1400129a9:	pop    rsp
   1400129aa:	or     eax,0xbf3151cf
   1400129af:	ins    DWORD PTR es:[rdi],dx
   1400129b0:	fisub  WORD PTR [rbp+0x4aaf8340]
   1400129b6:	or     ebp,DWORD PTR [rdi+0x7]
   1400129b9:	loope  0x140012a2c
   1400129bb:	mov    esp,0x2f01398c
   1400129c0:	pop    rsp
   1400129c1:	add    DWORD PTR [rdi+rax*8-0x504a026],ebx
   1400129c8:	(bad)  
   1400129c9:	or     al,0x5d
   1400129cb:	ja     0x1400129a0
   1400129cd:	sub    eax,0xefebedef
   1400129d2:	sti    
   1400129d3:	xchg   DWORD PTR [rbp+0x55],esi
   1400129d6:	ffreep st(5)
   1400129d8:	rex
   1400129d9:	rex.WRXB and r15b,BYTE PTR [r8-0x4e]
   1400129dd:	or     al,0x3
   1400129df:	push   0x4b33ca52
   1400129e4:	out    dx,eax
   1400129e5:	xor    esi,DWORD PTR [rcx+0x3e]
   1400129e8:	test   al,0x59
   1400129ea:	(bad)  
   1400129eb:	cld    
   1400129ec:	nop
   1400129ed:	int3   
   1400129ee:	adc    eax,0x600c0f80
   1400129f3:	add    ch,BYTE PTR [rdx+rbx*2+0x44]
   1400129f7:	(bad)  
   1400129f8:	out    dx,al
   1400129f9:	rex.WRB (bad) 
   1400129fb:	jne    0x140012a1c
   1400129fd:	(bad)  
   1400129fe:	or     DWORD PTR [rbx-0x52],ebx
   140012a01:	xchg   esp,eax
   140012a02:	fwait
   140012a03:	mov    dh,BYTE PTR [rbx-0x4d60264]
   140012a09:	push   rax
   140012a0a:	retf   0x823b
   140012a0d:	mov    ebx,0x1790626
   140012a12:	js     0x140012994
   140012a14:	shl    BYTE PTR [rdx-0x45],0x72
   140012a18:	cmp    ecx,ebx
   140012a1a:	(bad)  
   140012a1b:	adc    esp,DWORD PTR [rax-0x77ef3536]
   140012a21:	repnz add bl,ah
   140012a24:	and    BYTE PTR [rax+0x17],dh
   140012a27:	cmp    eax,DWORD PTR [rax]
   140012a29:	push   rsp
   140012a2a:	xchg   edi,eax
   140012a2b:	pop    rsp
   140012a2c:	adc    ebp,0xfd3441be
   140012a32:	cmp    edx,eax
   140012a34:	sbb    al,0x7d
   140012a36:	add    dh,BYTE PTR [rax+rsi*1-0x745115f3]
   140012a3d:	and    bl,BYTE PTR [rbx+0x5f]
   140012a40:	(bad)  
   140012a41:	jbe    0x140012a31
   140012a43:	(bad)
   140012a46:	mov    ebp,0x30df751f
   140012a4b:	mov    al,0x70
   140012a4d:	or     bh,BYTE PTR [rbx]
   140012a4f:	addr32 (bad) 
   140012a51:	movsxd esi,DWORD PTR [rax+0x7a]
   140012a54:	or     al,0x71
   140012a56:	(bad)  
   140012a57:	(bad)  
   140012a58:	mov    ah,0xba
   140012a5a:	and    al,0xb9
   140012a5c:	add    al,0x94
   140012a5e:	pushf  
   140012a5f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012a60:	(bad)  
   140012a61:	push   sp
   140012a63:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140012a64:	jge    0x140012a64
   140012a66:	cmc    
   140012a67:	(bad)  
   140012a68:	rex.WR clc 
   140012a6a:	or     eax,0x7e1347fa
   140012a6f:	adc    ebp,DWORD PTR [rsi+riz*1+0x70]
   140012a73:	adc    BYTE PTR [rdi-0x3f],dh
   140012a76:	imul   eax,DWORD PTR [rax+rbx*2],0xf61c9fe7
   140012a7d:	movsxd edx,DWORD PTR [rsi+0x36]
   140012a80:	mov    edi,0x2882f825
   140012a85:	xor    ch,BYTE PTR [rdi-0x70]
   140012a88:	fld    QWORD PTR [rsi]
   140012a8a:	fsubr  DWORD PTR [rbx+0x12]
   140012a8d:	js     0x140012afc
   140012a8f:	rex.WX
   140012a90:	rex
   140012a91:	rex.RXB push r13
   140012a93:	lods   al,BYTE PTR ds:[rsi]
   140012a94:	and    eax,0x3866dfe5
   140012a99:	nop
   140012a9a:	(bad)  
   140012a9b:	fisub  WORD PTR [rcx+0x796713be]
   140012aa1:	(bad)  
   140012aa2:	push   rdx
   140012aa3:	(bad)  
   140012aa4:	ins    DWORD PTR es:[rdi],dx
   140012aa5:	(bad)  
   140012aa6:	cs xchg edx,eax
   140012aa8:	in     al,dx
   140012aa9:	lock fnsave [rax+0x61]
   140012aad:	stos   DWORD PTR es:[rdi],eax
   140012aae:	mov    WORD PTR [rdx-0x1c659c76],ss
   140012ab4:	sub    DWORD PTR [rdi+0x2bb9ad59],ebp
   140012aba:	xchg   ebp,eax
   140012abb:	adc    ah,al
   140012abd:	fwait
   140012abe:	nop
   140012abf:	mov    al,0x89
   140012ac1:	scas   eax,DWORD PTR es:[rdi]
   140012ac2:	sbb    eax,0x8104a28
   140012ac7:	rex.WB pop r12
   140012ac9:	sbb    ah,bl
   140012acb:	(bad)  
   140012acc:	ins    BYTE PTR es:[rdi],dx
   140012acd:	(bad)  
   140012ace:	pop    rdx
   140012acf:	faddp  st(4),st
   140012ad1:	push   rsi
   140012ad2:	mov    ebx,0x1281e79f
   140012ad7:	lods   eax,DWORD PTR ds:[rsi]
   140012ad8:	push   rsp
   140012ad9:	adc    BYTE PTR [rdx+0x276b9710],al
   140012adf:	fistp  QWORD PTR ss:[rdi]
   140012ae2:	(bad)  
   140012ae3:	int    0xdf
   140012ae5:	jns    0x140012b20
   140012ae7:	(bad)  
   140012ae8:	vmwrite rdi,QWORD PTR [rsi+0xa]
   140012aec:	loopne 0x140012b2a
   140012aee:	(bad)  
   140012aef:	(bad)  
   140012af0:	rex jl 0x140012ace
   140012af3:	(bad)  
   140012af4:	cld    
   140012af5:	fmul   DWORD PTR [rbp+0x3b]
   140012af8:	ja     0x140012ae9
   140012afa:	std    
   140012afb:	(bad)  
   140012afc:	rex.WRXB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140012afe:	repz rcr DWORD PTR [rax],0xc2
   140012b02:	push   rbp
   140012b03:	and    cl,cl
   140012b05:	mov    DWORD PTR [rsi],edx
   140012b07:	(bad)
   140012b0a:	js     0x140012a99
   140012b0c:	sti    
   140012b0d:	out    0xe4,eax
   140012b0f:	mov    esi,0x68217332
   140012b14:	push   0xffffffffef7b72c3
   140012b19:	mov    al,0xbd
   140012b1b:	mov    al,0xee
   140012b1d:	mov    dl,0x43
   140012b1f:	(bad)  
   140012b20:	rex.RX pushf 
   140012b22:	ror    cl,cl
   140012b25:	ret    0x73e6
   140012b28:	push   rdx
   140012b29:	sti    
   140012b2a:	movabs al,ds:0xe94b2c53252c356a
   140012b33:	(bad)  
   140012b34:	retf   
   140012b35:	and    BYTE PTR [rdx],dl
   140012b37:	mov    dh,0x3c
   140012b39:	jge    0x140012af8
   140012b3b:	mov    BYTE PTR [rbp+rbp*8+0x71],cl
   140012b3f:	jno    0x140012b7e
   140012b41:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012b42:	jns    0x140012b0c
   140012b44:	lods   eax,DWORD PTR ds:[rsi]
   140012b45:	(bad)  
   140012b46:	push   rbx
   140012b47:	sbb    DWORD PTR [rdx+0x2a],esi
   140012b4a:	(bad)  
   140012b4b:	(bad)  
   140012b4c:	mov    cl,0xcf
   140012b4e:	retf   
   140012b4f:	(bad)  
   140012b50:	rex.WB cli 
   140012b52:	or     al,0x8c
   140012b54:	mov    WORD PTR [rax-0x1b],fs
   140012b57:	xchg   BYTE PTR [rdi],dh
   140012b59:	(bad)  
   140012b5a:	mov    bl,0x7f
   140012b5c:	adc    cl,ch
   140012b5e:	cdq    
   140012b5f:	rex.RXB sbb BYTE PTR [r9+0xac6d071],0x62
   140012b67:	push   rbp
   140012b68:	(bad)  
   140012b69:	hlt    
   140012b6a:	cmc    
   140012b6b:	inc    DWORD PTR [rax]
   140012b6d:	retf   
   140012b6e:	sti    
   140012b6f:	scas   eax,DWORD PTR es:[rdi]
   140012b70:	rex.RXB (bad) 
   140012b73:	xor    bh,BYTE PTR [rdx-0x1a]
   140012b76:	rex.WRX (bad) 
   140012b78:	js     0x140012bec
   140012b7a:	adc    al,0xf5
   140012b7c:	in     al,dx
   140012b7d:	and    al,0xc2
   140012b7f:	repnz add dl,al
   140012b82:	test   al,0xf5
   140012b84:	(bad)  
   140012b85:	(bad)  
   140012b86:	rex.WB jmp 0x140012b9f
   140012b89:	jrcxz  0x140012bc2
   140012b8b:	call   0x12559d4af
   140012b90:	xchg   DWORD PTR [rdx-0x80],ecx
   140012b93:	lods   al,BYTE PTR ds:[rsi]
   140012b94:	(bad)  
   140012b95:	mov    ebp,0xed6e9a50
   140012b9a:	xchg   ecx,eax
   140012b9b:	int    0x90
   140012b9d:	xchg   ebx,eax
   140012b9e:	js     0x140012b61
   140012ba0:	(bad)  
   140012ba1:	or     al,dl
   140012ba3:	leave  
   140012ba4:	out    dx,al
   140012ba5:	ret    0xfe46
   140012ba8:	cmp    eax,0xc09865d9
   140012bad:	xchg   edi,eax
   140012bae:	xchg   esi,eax
   140012baf:	sar    bh,cl
   140012bb1:	enter  0x8295,0x23
   140012bb5:	xor    BYTE PTR [rdi],ah
   140012bb7:	fst    QWORD PTR [rcx+rsi*4+0x16]
   140012bbb:	xchg   esi,eax
   140012bbc:	rcr    esi,cl
   140012bbe:	fwait
   140012bbf:	nop
   140012bc0:	mov    ebx,0x686bd125
   140012bc5:	mov    ebx,0xc1435270
   140012bca:	(bad)  
   140012bcb:	push   rdx
   140012bcd:	mov    ebp,0x373ffce6
   140012bd2:	shrd   DWORD PTR [rcx-0x73c973d7],edx,cl
   140012bd9:	jmp    0x14184cc95
   140012bde:	rex.X add al,0x96
   140012be1:	and    eax,0x5d488c1
   140012be6:	sub    BYTE PTR [rdi+rbp*2],0xce
   140012bea:	fs sbb edi,ebx
   140012bed:	jp     0x140012c2f
   140012bef:	rcl    BYTE PTR [rdx-0x53482cf],cl
   140012bf5:	lods   al,BYTE PTR ds:[rsi]
   140012bf6:	in     al,dx
   140012bf7:	rol    BYTE PTR [rcx-0x50],cl
   140012bfa:	cmc    
   140012bfb:	sbb    eax,0x50ec148d
   140012c00:	jp     0x140012bef
   140012c02:	(bad)  
   140012c03:	rcl    ebx,cl
   140012c05:	mov    bh,0xfe
   140012c07:	adc    bh,BYTE PTR [rdi+0x593eebe6]
   140012c0d:	pop    rsi
   140012c0e:	(bad)  
   140012c0f:	(bad)  
   140012c10:	loopne 0x140012bee
   140012c12:	or     ah,al
   140012c14:	(bad)  
   140012c16:	ds pop rsp
   140012c18:	jnp    0x140012be5
   140012c1a:	jmp    0x140012ba3
   140012c1c:	scas   al,BYTE PTR es:[rdi]
   140012c1d:	mov    ebp,0xe9eff5e5
   140012c22:	out    dx,eax
   140012c23:	out    dx,eax
   140012c24:	sti    
   140012c25:	xchg   ecx,eax
   140012c26:	rex.WRX push rbp
   140012c28:	mov    edi,0x4300c005
   140012c2d:	(bad)  
   140012c2e:	xchg   esi,eax
   140012c2f:	test   ecx,esi
   140012c31:	xor    rax,0x423df5b9
   140012c37:	rcr    BYTE PTR [rax+0x76fec3b7],1
   140012c3d:	mov    ah,0x3b
   140012c3f:	add    DWORD PTR [rdx+0x5f619731],ebx
   140012c45:	sub    al,BYTE PTR [rdx+0x7b]
   140012c48:	(bad)  
   140012c49:	dec    DWORD PTR [rax-0x76be1d23]
   140012c4f:	xchg   ebp,eax
   140012c50:	(bad)  
   140012c51:	in     al,0xf
   140012c53:	push   rbx
   140012c54:	cmp    dh,ch
   140012c56:	mov    edx,0x161fb01d
   140012c5b:	push   rbx
   140012c5c:	and    BYTE PTR [rdi-0x2e2f5f4d],al
   140012c62:	fdivr  DWORD PTR [rbp+rbp*8+0x23]
   140012c66:	add    eax,0x6bc9fa4f
   140012c6b:	rex.WRB mov r15b,0x8e
   140012c6e:	push   rbx
   140012c6f:	sbb    dl,BYTE PTR [rdi+0x7b05423c]
   140012c75:	lods   eax,DWORD PTR ds:[rsi]
   140012c76:	jle    0x140012cb4
   140012c78:	mov    BYTE PTR [rdx+rdi*8-0x1b],bh
   140012c7c:	jrcxz  0x140012c16
   140012c7e:	add    BYTE PTR [rax],cl
   140012c80:	adc    DWORD PTR [rbp+rbp*2-0x52],0xc2b7b061
   140012c88:	fisubr DWORD PTR [rbx-0x71153a92]
   140012c8e:	(bad)  
   140012c8f:	xor    al,0x4f
   140012c91:	or     BYTE PTR ds:[rdx],bh
   140012c94:	(bad)  
   140012c95:	sub    al,0x96
   140012c97:	scas   eax,DWORD PTR es:[rdi]
   140012c98:	mov    eax,0xfeafe30a
   140012c9d:	sti    
   140012c9e:	call   0x1bf3d2dae
   140012ca3:	or     al,BYTE PTR [rbx-0x2d]
   140012ca6:	movabs ds:0x35363e8d213e9fe8,eax
   140012caf:	jmp    0x16b25bf3b
   140012cb4:	adc    DWORD PTR [rax],0xa8f61658
   140012cba:	and    DWORD PTR [rcx+0x7f],ebx
   140012cbd:	mov    dl,0xe0
   140012cbf:	xchg   DWORD PTR [rsi-0x4],edx
   140012cc2:	push   rcx
   140012cc3:	adc    esi,esi
   140012cc5:	push   rbx
   140012cc6:	stos   DWORD PTR es:[rdi],eax
   140012cc7:	or     eax,0x5d97340
   140012ccc:	(bad)  
   140012ccd:	and    eax,DWORD PTR [rcx+0x2d]
   140012cd0:	mov    ch,0x31
   140012cd2:	cld    
   140012cd3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140012cd4:	add    al,ah
   140012cd6:	mov    al,0x9d
   140012cd8:	add    BYTE PTR [rip+0xdc2d8b],ch        # 0x140dd5a69
   140012cde:	shr    BYTE PTR [rdi+rdi*1-0x35],cl
   140012ce2:	xchg   edi,eax
   140012ce3:	(bad)  
   140012ce4:	clc    
   140012ce5:	sbb    al,BYTE PTR [rax+0x5811cc84]
   140012ceb:	push   rax
   140012cec:	xor    BYTE PTR [rdi-0x68ea26e9],al
   140012cf2:	int    0x15
   140012cf4:	imul   edi,eax,0xffffff91
   140012cf7:	(bad)  
   140012cf8:	pop    rsi
   140012cf9:	mov    dh,0xf8
   140012cfb:	in     eax,0x66
   140012cfd:	out    dx,al
   140012cfe:	(bad)  
   140012cff:	and    eax,0x331fd348
   140012d04:	es (bad) 
   140012d06:	xlat   BYTE PTR ds:[rbx]
   140012d07:	(bad)  
   140012d08:	adc    al,0xe1
   140012d0a:	rcl    BYTE PTR [rcx+0xa1b4ad4],1
   140012d10:	push   rcx
   140012d11:	xchg   DWORD PTR [rsi-0x4ff65634],ecx
   140012d17:	sahf   
   140012d18:	(bad)  
   140012d19:	pushfw 
   140012d1b:	or     al,0x5d
   140012d1d:	pop    rdx
   140012d1e:	clc    
   140012d1f:	mov    bl,0x71
   140012d21:	rex.RX adc al,0xaa
   140012d24:	xor    BYTE PTR [rdx-0x3477de6e],0x63
   140012d2b:	retf   0x1a47
   140012d2e:	(bad)  
   140012d2f:	in     al,0xb9
   140012d31:	ins    BYTE PTR es:[rdi],dx
   140012d32:	cmp    esp,ebp
   140012d34:	pop    rdx
   140012d35:	mov    al,0xe0
   140012d37:	repz push rsp
   140012d39:	jle    0x140012cc6
   140012d3b:	mov    esi,0x6ee578cb
   140012d40:	add    bh,bl
   140012d42:	rex.R (bad) 
   140012d44:	or     DWORD PTR [rax+0x49],edi
   140012d47:	mov    bh,0x33
   140012d49:	sub    eax,DWORD PTR [rax-0x432ecb0d]
   140012d4f:	jmp    0x140012d98
   140012d51:	push   rcx
   140012d53:	jmp    0x140012cdb
   140012d55:	rex.RX jbe 0x140012dd7
   140012d58:	movabs al,ds:0x1aba04387f7b7b7
   140012d61:	adc    eax,0x6ce69b7a
   140012d66:	xchg   ebx,eax
   140012d67:	pop    rbx
   140012d68:	(bad)  
   140012d69:	shl    DWORD PTR [rbx],cl
   140012d6b:	icebp  
   140012d6c:	(bad)  
   140012d6d:	xchg   edx,eax
   140012d6e:	mov    edx,0x9d212f32
   140012d73:	or     cl,BYTE PTR [rax+0x6a]
   140012d76:	cmp    DWORD PTR [rsi+rbp*1],0x45
   140012d7a:	rex.RXB jg 0x140012de0
   140012d7d:	outs   dx,DWORD PTR ds:[rsi]
   140012d7e:	retf   
   140012d7f:	ins    BYTE PTR es:[rdi],dx
   140012d80:	mov    edi,0xeecea5b6
   140012d85:	rex.X stc 
   140012d87:	cdq    
   140012d88:	in     eax,0x8
   140012d8a:	mov    BYTE PTR [rdx-0x79e25970],dl
   140012d90:	add    BYTE PTR [rax+0x26d81ccd],ah
   140012d96:	je     0x140012d31
   140012d98:	mov    dl,BYTE PTR [rcx+0x58]
   140012d9b:	(bad)  
   140012d9c:	rex.RXB adc r12b,BYTE PTR [r13-0x6aae2e0e]
   140012da3:	push   rbx
   140012da4:	nop
   140012da5:	sub    ecx,DWORD PTR [rdi]
   140012da7:	imul   ebp,DWORD PTR [rdx+riz*2],0xffffffee
   140012dab:	mov    esp,DWORD PTR [rbp+0x4d6e6c2]
   140012db1:	jns    0x140012d99
   140012db3:	xor    BYTE PTR [rax],cl
   140012db5:	sbb    DWORD PTR [rbx],0xea8340ec
   140012dbb:	shr    BYTE PTR [rbx+0x2763bab0],cl
   140012dc1:	mov    edx,0x7a303b03
   140012dc6:	(bad)
   140012dc9:	cmp    esi,DWORD PTR [rsi-0x7d]
   140012dcc:	push   rdi
   140012dcd:	(bad)  
   140012dce:	xor    BYTE PTR [rax],bh
   140012dd0:	jnp    0x140012de4
   140012dd2:	rex.XB xchg r11d,eax
   140012dd4:	movsxd ebp,DWORD PTR [rax+0x561067e6]
   140012dda:	xchg   edi,eax
   140012ddb:	shr    BYTE PTR [rcx+0x3],0x64
   140012ddf:	js     0x140012e3e
   140012de1:	lahf   
   140012de2:	or     BYTE PTR [r10],r9b
   140012de5:	std    
   140012de6:	and    esi,eax
   140012de8:	sub    ah,BYTE PTR [rdx+0x15516bc9]
   140012dee:	(bad)  
   140012def:	fild   QWORD PTR [rip+0xbc59ad]        # 0x140bd87a2
   140012df5:	stos   DWORD PTR es:[rdi],eax
   140012df6:	(bad)
   140012df9:	add    BYTE PTR [rbx-0x3a],bh
   140012dfc:	rex.RX (bad) 
   140012dfe:	xor    DWORD PTR [rax-0x57],esp
   140012e01:	sbb    DWORD PTR [rcx-0x8],0xffffffc9
   140012e05:	test   DWORD PTR [rdi],esi
   140012e07:	or     ebp,DWORD PTR [rsi+rsi*1-0x3]
   140012e0b:	outs   dx,BYTE PTR ds:[rsi]
   140012e0c:	sub    BYTE PTR [r15-0x7c58af5],r8b
   140012e13:	std    
   140012e14:	(bad)  [rbx]
   140012e16:	(bad)  [rsi+0x3c8d29b1]
   140012e1c:	adc    al,0xf6
   140012e1e:	mov    ecx,0xeb16e8c1
   140012e23:	push   0xffffffffffffffe3
   140012e25:	mov    edi,0xd316531d
   140012e2a:	xor    edx,0x8a44a9ef
   140012e30:	pushf  
   140012e31:	out    0x9b,eax
   140012e33:	and    bl,BYTE PTR [rax+0x7587e132]
   140012e39:	(bad)  
   140012e3a:	cdq    
   140012e3b:	icebp  
   140012e3c:	mov    al,0xbc
   140012e3e:	and    ecx,edi
   140012e40:	(bad)  
   140012e41:	xor    BYTE PTR [rbx-0x33c5da3c],ah
   140012e47:	push   rdi
   140012e48:	(bad)  
   140012e49:	jns    0x140012e09
   140012e4b:	in     eax,0x2d
   140012e4d:	fs (bad) 
   140012e4f:	sub    DWORD PTR [rdi+0x6a],ecx
   140012e52:	(bad)  
   140012e53:	ja     0x140012e34
   140012e55:	std    
   140012e56:	(bad)  
   140012e57:	(bad)  
   140012e58:	clc    
   140012e59:	(bad)  
   140012e5a:	mul    DWORD PTR [rcx-0x21]
   140012e5d:	rex.RX icebp 
   140012e5f:	xchg   ebx,eax
   140012e60:	xchg   edi,eax
   140012e61:	add    DWORD PTR [rcx],eax
   140012e63:	pushf  
   140012e64:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012e65:	lods   eax,DWORD PTR ds:[rsi]
   140012e66:	(bad)  
   140012e67:	xor    eax,0xe3bcde37
   140012e6c:	mov    edx,0x577b6f5b
   140012e71:	inc    eax
   140012e73:	ror    BYTE PTR [rdi+0x27755556],0x11
   140012e7a:	or     eax,0xbd21c831
   140012e7f:	cmp    eax,0xd68aa0f4
   140012e84:	imul   esi,ecx,0xffffffd1
   140012e87:	pop    si
   140012e89:	gs (bad) 
   140012e8b:	in     eax,dx
   140012e8c:	cwde   
   140012e8d:	add    ebx,DWORD PTR [rbx]
   140012e8f:	(bad)  
   140012e90:	jbe    0x140012eaa
   140012e92:	(bad)  
   140012e93:	in     eax,0xfe
   140012e95:	sub    BYTE PTR [rsi],ah
   140012e97:	rex.RB
   140012e98:	or     ah,BYTE PTR ss:[rax]
   140012e9b:	xchg   esp,eax
   140012e9c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140012e9d:	sbb    BYTE PTR [rsi+0x6e],dh
   140012ea0:	js     0x140012ef0
   140012ea2:	ss mov cl,0xe5
   140012ea5:	(bad)  
   140012ea6:	ins    DWORD PTR es:[rdi],dx
   140012ea7:	icebp  
   140012ea8:	call   rbp
   140012eaa:	loop   0x140012ec6
   140012eac:	(bad)  
   140012ead:	enter  0xc956,0x5c
   140012eb1:	cmp    eax,0x409f1fbd
   140012eb6:	addr32 retf 0xd34e
   140012eba:	jae    0x140012f26
   140012ebc:	sbb    ebp,eax
   140012ebe:	lods   eax,DWORD PTR ds:[rsi]
   140012ebf:	jl     0x140012e74
   140012ec1:	pop    rcx
   140012ec2:	sbb    al,0x2
   140012ec4:	rex.R loope 0x140012eec
   140012ec7:	rex.XB
   140012ec8:	rex.X stc 
   140012eca:	icebp  
   140012ecb:	(bad)  
   140012ecc:	(bad)  
   140012ecd:	and    ecx,DWORD PTR [rsi-0x66]
   140012ed0:	out    dx,al
   140012ed1:	sub    edi,ebx
   140012ed3:	and    al,0x10
   140012ed5:	nop
   140012ed6:	sbb    dh,ah
   140012ed8:	vpmuludq ymm14,ymm6,ymm4
   140012edc:	jbe    0x140012ece
   140012ede:	(bad)  
   140012edf:	(bad)  
   140012ee0:	stos   DWORD PTR es:[rdi],eax
   140012ee1:	mov    cl,0x74
   140012ee3:	call   0x166d4d7bd
   140012ee8:	push   0xffffffffa64614fe
   140012eed:	mov    fs,WORD PTR [rdx+0x6814f667]
   140012ef3:	jne    0x140012f06
   140012ef5:	fcomp  QWORD PTR [rbp+0x43]
   140012ef8:	mov    al,0x5a
   140012efa:	jg     0x140012eb1
   140012efc:	outs   dx,BYTE PTR ds:[rsi]
   140012efd:	push   rcx
   140012efe:	pop    rbx
   140012eff:	jge    0x140012f56
   140012f01:	int3   
   140012f02:	rex.WX mov spl,0x49
   140012f05:	mov    ebp,0x47edd97f
   140012f0a:	lods   al,BYTE PTR ds:[rsi]
   140012f0b:	mov    edi,0x5af273c1
   140012f10:	or     bl,cl
   140012f12:	jnp    0x140012e95
   140012f14:	jle    0x140012ebc
   140012f16:	(bad)  
   140012f17:	rex.WB lods rax,QWORD PTR ds:[rsi]
   140012f19:	jne    0x140012f69
   140012f1b:	(bad)  
   140012f1c:	add    eax,ecx
   140012f1e:	sub    eax,0xb575167f
   140012f23:	lahf   
   140012f24:	rol    DWORD PTR fs:[rip+0xffffffffbdf30c23],1        # 0xfdf43b4e
   140012f2b:	push   rbx
   140012f2c:	enter  0x977b,0x4d
   140012f30:	rex.RX sub al,0x2d
   140012f33:	mov    eax,0x28a619d4
   140012f38:	cmc    
   140012f39:	(bad)  
   140012f3a:	xor    BYTE PTR [rbx-0x12],al
   140012f3d:	repz rex.B
   140012f3f:	gs stos DWORD PTR es:[rdi],eax
   140012f41:	(bad)
   140012f44:	lahf   
   140012f45:	fistp  DWORD PTR [rsp-0xdf9c098]
   140012f4c:	(bad)  
   140012f4d:	(bad)  
   140012f4e:	sahf   
   140012f4f:	cmp    BYTE PTR [rsi+0x45b79527],ah
   140012f55:	(bad)  
   140012f56:	lahf   
   140012f57:	pop    rdi
   140012f58:	(bad)  
   140012f59:	and    edi,DWORD PTR [rcx]
   140012f5b:	rex.WRXB and rax,0x421517
   140012f61:	xchg   DWORD PTR [rsp+riz*4-0x494debf],eax
   140012f68:	in     eax,dx
   140012f69:	pop    rbp
   140012f6a:	sub    DWORD PTR [rbp+0x6a],0xffffff98
   140012f6e:	movabs ds:0x42082b1b381a6365,al
   140012f77:	sub    DWORD PTR [rdx],0x627bf28e
   140012f7d:	rex.RX test esi,r12d
   140012f80:	push   rbp
   140012f81:	ja     0x140012fe6
   140012f83:	loop   0x140012f3b
   140012f85:	sti    
   140012f86:	mov    al,0xef
   140012f88:	ror    eax,cl
   140012f8a:	rex.WB
   140012f8b:	rex.B (bad) 
   140012f8d:	cdq    
   140012f8e:	sbb    edx,DWORD PTR [rax-0x63]
   140012f91:	xlat   BYTE PTR ds:[rbx]
   140012f92:	fidivr DWORD PTR [rdi-0x18]
   140012f95:	rex.RXB pop r15
   140012f97:	mov    ch,0x6b
   140012f99:	iret   
   140012f9a:	mov    esi,0xce9d57f7
   140012f9f:	ja     0x10f248ebd
   140012fa5:	fnstcw WORD PTR [rbx+rbx*4+0x2]
   140012fa9:	(bad)  
   140012faa:	sbb    ah,cl
   140012fac:	sub    DWORD PTR gs:[rax+0x955a648],edx
   140012fb3:	xchg   edx,eax
   140012fb4:	rex.B cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140012fb6:	adc    ebp,DWORD PTR [rax-0x37092cfc]
   140012fbc:	(bad)  [rax-0x466125ea]
   140012fc2:	cmp    BYTE PTR [rdi],al
   140012fc4:	mov    dl,0xa2
   140012fc6:	xor    BYTE PTR [rbx-0x1f],cl
   140012fc9:	xor    eax,0x17f7e6df
   140012fce:	jae    0x140012f91
   140012fd0:	mov    es,WORD PTR [rbp-0x3c]
   140012fd3:	lods   eax,DWORD PTR ds:[rsi]
   140012fd4:	cld    
   140012fd5:	jg     0x14001301d
   140012fd7:	push   rsi
   140012fd8:	sbb    al,0x66
   140012fda:	stc    
   140012fdb:	ins    DWORD PTR es:[rdi],dx
   140012fdc:	loop   0x140012f79
   140012fde:	rex.WRXB jbe 0x140012fc7
   140012fe1:	stos   DWORD PTR es:[rdi],eax
   140012fe2:	or     esi,DWORD PTR [rax-0x68f144e8]
   140012fe8:	pop    rbx
   140012fe9:	rex.WRX
   140012fea:	rex.RXB (bad) 
   140012fec:	fdiv   QWORD PTR [rdx+0x76a4f975]
   140012ff2:	xor    al,0xf
   140012ff4:	rex.RXB xchg r8d,eax
   140012ff6:	(bad)  
   140012ff7:	push   rbx
   140012ff8:	call   rsi
   140012ffa:	mov    edx,0x585c949
   140012fff:	add    al,0x6e
   140013001:	xor    BYTE PTR [rbp-0x1e],dh
   140013004:	or     dh,al
   140013006:	neg    bh
   140013008:	or     dl,ch
   14001300a:	fld    DWORD PTR [rcx-0x2271c0cc]
   140013010:	xor    esp,DWORD PTR [rbx+0x18]
   140013013:	cwde   
   140013014:	cmp    cl,BYTE PTR [rsi-0x4f78c750]
   14001301a:	mov    esi,0x3f03d7ac
   14001301f:	(bad)  
   140013020:	rex.B loop 0x14001301e
   140013023:	adc    eax,0xf1856a11
   140013028:	add    bh,ch
   14001302a:	loope  0x140013065
   14001302c:	call   QWORD PTR [rip+0xffffffffd5aa7274]        # 0x115aba2a6
   140013032:	ss stos DWORD PTR es:[rdi],eax
   140013034:	cdq    
   140013035:	test   ebx,edx
   140013037:	add    al,0xbe
   140013039:	mov    BYTE PTR [rsi],cl
   14001303b:	and    BYTE PTR [rbx],ch
   14001303d:	push   0xffffffffffffffcb
   14001303f:	adc    ch,BYTE PTR [rdi+rbp*8]
   140013042:	stos   DWORD PTR es:[rdi],eax
   140013043:	push   rbp
   140013044:	(bad)  
   140013045:	stos   DWORD PTR es:[rdi],eax
   140013046:	out    dx,eax
   140013047:	and    eax,0x1e0e5093
   14001304c:	rex.WRB cdqe 
   14001304e:	push   rbp
   14001304f:	rex.W (bad) 
   140013051:	test   al,0x30
   140013053:	int    0xd5
   140013055:	shl    bl,1
   140013057:	mov    bh,0xc1
   140013059:	fwait
   14001305a:	pop    rbp
   14001305b:	and    al,0x5a
   14001305d:	outs   dx,BYTE PTR ds:[rsi]
   14001305e:	cmp    DWORD PTR [rbx],0x77962cff
   140013064:	imul   ebx,DWORD PTR [rsi+0x33792986],0xe
   14001306b:	rex.WRX movabs rax,0x1914f943a3c8f589
   140013075:	call   0x10288882a
   14001307a:	(bad)  
   14001307b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001307c:	xlat   BYTE PTR ds:[rbx]
   14001307d:	outs   dx,DWORD PTR ds:[rsi]
   14001307e:	xlat   BYTE PTR ds:[rbx]
   14001307f:	out    0xde,al
   140013081:	cmp    DWORD PTR [rdi-0x7f99e899],0xa0e5e57c
   14001308b:	cmp    al,0x1
   14001308d:	mov    eax,0x3725e730
   140013092:	mov    ch,0x65
   140013094:	sahf   
   140013095:	adc    BYTE PTR [rcx],al
   140013097:	xchg   edi,eax
   140013098:	repnz retf 0x4107
   14001309c:	clc    
   14001309d:	cmp    al,0x5e
   14001309f:	xchg   ch,al
   1400130a1:	rex.XB mov WORD PTR [r15],fs
   1400130a4:	and    dl,BYTE PTR [rax*4-0x14228c8]
   1400130ab:	or     eax,0xcd7caf3b
   1400130b0:	or     eax,0x1c1fe96f
   1400130b5:	cli    
   1400130b6:	mov    cl,0xaa
   1400130b8:	stos   BYTE PTR es:[rdi],al
   1400130b9:	out    dx,al
   1400130ba:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400130bb:	rol    BYTE PTR [rbx+rdx*8+0x2f],cl
   1400130c0:	xor    ebx,edi
   1400130c2:	test   al,0x11
   1400130c4:	sub    eax,DWORD PTR [rdx]
   1400130c6:	cmc    
   1400130c7:	jae    0x140013058
   1400130c9:	hlt    
   1400130ca:	pushf  
   1400130cb:	jg     0x14001311a
   1400130cd:	movabs al,ds:0x260c473bfac7c2a8
   1400130d6:	cmp    al,0xec
   1400130d8:	mov    al,0x49
   1400130da:	(bad)  
   1400130db:	mov    DWORD PTR [rip+0x4211e8fc],edx        # 0x1821319dd
   1400130e1:	enter  0x4984,0x31
   1400130e5:	pop    rax
   1400130e6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400130e7:	cmp    BYTE PTR [rsp+rdx*1],0xa8
   1400130eb:	sbb    DWORD PTR [rbx+0x4ec0b0a],0x5d
   1400130f2:	add    DWORD PTR [rax],ebx
   1400130f4:	add    cl,dl
   1400130f6:	and    edi,DWORD PTR fs:[rcx]
   1400130f9:	scas   eax,DWORD PTR es:[rdi]
   1400130fa:	rex
   1400130fb:	fs (bad) 
   1400130fe:	adc    al,BYTE PTR [rdx+rsi*8+0x248514f0]
   140013105:	cmp    dl,BYTE PTR [rsi]
   140013107:	out    0x6f,al
   140013109:	mov    edx,0xac52688f
   14001310e:	popf   
   14001310f:	(bad)  
   140013111:	sbb    DWORD PTR [rsi],ebp
   140013113:	mov    ecx,0xd35097f0
   140013118:	add    eax,0xde919edf
   14001311d:	pop    rbx
   14001311e:	mov    WORD PTR [rcx],ss
   140013120:	retf   
   140013121:	movsxd eax,DWORD PTR [rdi-0xf]
   140013124:	fs out dx,eax
   140013126:	jle    0x1400130cc
   140013128:	mov    ebp,0xceac2057
   14001312d:	movabs ds:0x5bf894a68638e67f,eax
   140013136:	pop    rbp
   140013137:	add    al,0x37
   140013139:	imul   ecx,DWORD PTR [rax],0x56
   14001313c:	leave  
   14001313d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001313e:	ret    
   14001313f:	(bad)  
   140013140:	shr    DWORD PTR [rax-0x75064b7e],0x44
   140013147:	or     dl,bl
   140013149:	out    0xcf,eax
   14001314b:	cdq    
   14001314c:	jg     0x140013102
   14001314e:	or     al,0x1f
   140013150:	add    ch,dh
   140013152:	push   rdi
   140013153:	(bad)  
   140013154:	ja     0x14001310d
   140013156:	xor    DWORD PTR [rbx],ebp
   140013158:	(bad)  
   140013159:	jbe    0x140013163
   14001315b:	push   0x21
   14001315d:	fisttp QWORD PTR [rdx+0x1b]
   140013160:	cld    
   140013161:	xor    eax,0x7257cb
   140013166:	xchg   BYTE PTR [rax],bh
   140013168:	xor    ah,BYTE PTR [rcx]
   14001316a:	push   0xc1389cb
   14001316f:	adc    eax,0x760770b0
   140013174:	(bad)  
   140013175:	xchg   esp,eax
   140013176:	mov    edi,0xcd00ab2f
   14001317b:	add    BYTE PTR [rax-0x3048cdae],bl
   140013181:	fimul  DWORD PTR [rdi+riz*2-0xd26be95]
   140013188:	cli    
   140013189:	data16 loope 0x1400131cc
   14001318c:	sbb    ebx,DWORD PTR [rbx-0x553f7cca]
   140013192:	adc    al,0xc
   140013194:	and    eax,0x439273e6
   140013199:	jl     0x1400131ee
   14001319b:	movs   BYTE PTR es:[rdi],BYTE PTR cs:[rsi]
   14001319d:	sub    eax,eax
   14001319f:	rex.RX or DWORD PTR [rcx+0x1a122108],r8d
   1400131a6:	or     eax,0x8068e5f9
   1400131ab:	and    bl,BYTE PTR [rax+rax*1+0x40686370]
   1400131b2:	(bad)  
   1400131b3:	jp     0x140013188
   1400131b5:	adc    BYTE PTR [rdx-0x4d],cl
   1400131b8:	addr32 mov ds:0x2725d32f,eax
   1400131be:	rex.RX xchg ebp,eax
   1400131c0:	push   rax
   1400131c1:	mov    bh,0x17
   1400131c3:	int    0xdf
   1400131c5:	jmp    FWORD PTR [rcx]
   1400131c7:	mov    WORD PTR [rsi],ds
   1400131c9:	clc    
   1400131ca:	jge    0x140013228
   1400131cc:	mov    dl,BYTE PTR ss:[rdi+0xa90f178]
   1400131d3:	enter  0xe246,0x4d
   1400131d7:	out    dx,eax
   1400131d8:	sti    
   1400131d9:	movabs eax,ds:0xa7bac1fc3c1cf62b
   1400131e2:	out    0x83,eax
   1400131e4:	and    esi,eax
   1400131e6:	xlat   BYTE PTR ds:[rbx]
   1400131e7:	sti    
   1400131e8:	fs push rcx
   1400131ea:	stc    
   1400131eb:	icebp  
   1400131ec:	push   rdx
   1400131ed:	(bad)  
   1400131ee:	add    dh,dh
   1400131f0:	(bad)  
   1400131f1:	mov    al,0x5f
   1400131f3:	jnp    0x1400131ce
   1400131f5:	mov    BYTE PTR [rbx+0xa5f098b],al
   1400131fb:	mov    bl,0xdd
   1400131fd:	sub    al,0x97
   1400131ff:	scas   eax,DWORD PTR es:[rdi]
   140013200:	rex.WRB shl QWORD PTR [r10],1
   140013203:	xchg   eax,ebp
   140013205:	jl     0x140013277
   140013207:	add    ch,BYTE PTR [rcx-0xb]
   14001320a:	sbb    al,0x9c
   14001320c:	clc    
   14001320d:	movabs ds:0xa42f1f985dbb9ee0,eax
   140013216:	in     al,0x7
   140013218:	xor    ebp,DWORD PTR [rax]
   14001321a:	(bad)  
   14001321b:	pop    rdx
   14001321c:	test   BYTE PTR [rax+0x5e4202da],al
   140013222:	(bad)  
   140013223:	sbb    eax,0x93e6552d
   140013228:	fucom  st(0)
   14001322a:	data16 mov cl,0x93
   14001322d:	adc    esi,DWORD PTR [rsi]
   14001322f:	and    eax,0xc0b3712e
   140013234:	rex.RB
   140013235:	data16 sbb cl,cl
   140013238:	and    al,0x66
   14001323a:	mov    dh,0x23
   14001323c:	xchg   ebx,eax
   14001323d:	rex.RX not BYTE PTR [rbx-0x5cbeb16d]
   140013244:	movabs eax,ds:0x6e7742b14194a7d2
   14001324d:	add    cl,bh
   14001324f:	sub    eax,0xfafe626f
   140013254:	xlat   BYTE PTR ds:[rbx]
   140013255:	and    DWORD PTR [rsi+rax*1-0x138e0663],esp
   14001325c:	sahf   
   14001325d:	cmp    al,0x86
   14001325f:	dec    cl
   140013261:	xchg   ebx,eax
   140013262:	mov    BYTE PTR [rbx],ch
   140013264:	or     esi,DWORD PTR [rdx-0x26c8e04a]
   14001326a:	fist   WORD PTR [rcx+rsi*8]
   14001326d:	(bad)  
   14001326e:	rex.WX (bad) 
   140013270:	push   rsi
   140013271:	sub    ebx,DWORD PTR [rdi+0x26c8fe33]
   140013277:	stos   BYTE PTR es:[rdi],al
   140013278:	pop    rsi
   140013279:	(bad)  
   14001327a:	stos   DWORD PTR es:[rdi],eax
   14001327b:	fldenv [rdi]
   14001327d:	xchg   r8d,eax
   14001327f:	adc    al,0x23
   140013281:	push   rdi
   140013282:	mov    ch,0x6d
   140013284:	adc    DWORD PTR [rax],ebx
   140013286:	jae    0x14001329f
   140013288:	cld    
   140013289:	adc    DWORD PTR [rax-0x30cdcca2],edi
   14001328f:	jle    0x1400132b8
   140013291:	(bad)
   140013295:	jb     0x1400132a1
   140013297:	jno    0x14001328f
   140013299:	stc    
   14001329a:	mov    bl,0x12
   14001329c:	(bad)  
   14001329d:	mov    al,BYTE PTR [rbx-0x15ce13]
   1400132a3:	(bad)  
   1400132a4:	mov    edi,0xcfb1bf5b
   1400132a9:	ins    DWORD PTR es:[rdi],dx
   1400132aa:	enter  0x7af5,0x51
   1400132ae:	(bad)  
   1400132af:	cmp    eax,DWORD PTR [rcx-0x5ed14189]
   1400132b5:	outs   dx,DWORD PTR ds:[rsi]
   1400132b6:	xor    ah,BYTE PTR [rcx+0x7c]
   1400132b9:	test   BYTE PTR [rcx],cl
   1400132bb:	enter  0x9fa4,0x22
   1400132bf:	adc    eax,DWORD PTR [rsi-0x39490fe9]
   1400132c5:	sbb    bh,BYTE PTR [rsi-0x73]
   1400132c8:	ss test al,0x68
   1400132cb:	mov    ch,0x33
   1400132cd:	xor    eax,DWORD PTR [rbx]
   1400132cf:	fs stos BYTE PTR es:[rdi],al
   1400132d1:	retf   0x86d2
   1400132d4:	cdq    
   1400132d5:	push   rax
   1400132d6:	(bad)  
   1400132d7:	movsxd ecx,ecx
   1400132d9:	jne    0x140013322
   1400132db:	shr    BYTE PTR [rdx],cl
   1400132dd:	push   rbx
   1400132de:	fidiv  WORD PTR [rsi]
   1400132e0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400132e1:	pop    rdx
   1400132e2:	fs mov dh,0x34
   1400132e5:	ins    BYTE PTR es:[rdi],dx
   1400132e6:	loope  0x1400132ab
   1400132e8:	ja     0x14001334a
   1400132ea:	out    0x2d,al
   1400132ec:	mov    edi,0x3ffecb8f
   1400132f1:	mov    ah,0xd7
   1400132f3:	(bad)  
   1400132f4:	mov    eax,0xc7755be0
   1400132f9:	jnp    0x14001337a
   1400132fb:	push   0x7d9ed0f7
   140013300:	(bad)  
   140013301:	div    dh
   140013303:	idiv   edi
   140013305:	xchg   ebx,eax
   140013306:	mov    edx,0x844ddfae
   14001330b:	std    
   14001330c:	jo     0x14001335b
   14001330e:	imul   esi,DWORD PTR [rdi],0x4f
   140013311:	cli    
   140013312:	rex.WX and QWORD PTR [rsi+0x6c405e61],rdi
   140013319:	(bad)  
   14001331a:	in     eax,0x7
   14001331c:	add    eax,eax
   14001331e:	loope  0x1400132b3
   140013320:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140013322:	cs (bad) 
   140013324:	xlat   BYTE PTR ds:[rbx]
   140013325:	out    dx,eax
   140013326:	ret    0x3f2c
   140013329:	sbb    ebp,DWORD PTR [rdx]
   14001332b:	sub    cl,0xfe
   14001332e:	jb     0x1400132d1
   140013330:	add    eax,0x7c3a3a7b
   140013335:	or     al,0x58
   140013337:	mov    edx,0xd9c57cb0
   14001333c:	ins    DWORD PTR es:[rdi],dx
   14001333d:	push   rax
   14001333e:	(bad)  
   14001333f:	fisub  DWORD PTR [rax]
   140013341:	movabs ds:0xed71a2666013eb6d,eax
   14001334a:	(bad)  
   14001334b:	(bad)  
   14001334c:	jrcxz  0x140013362
   14001334e:	xchg   esi,eax
   14001334f:	pop    rdx
   140013350:	(bad)
   140013354:	(bad)  
   140013355:	xchg   ebx,eax
   140013356:	retf   
   140013357:	(bad)  
   140013358:	sub    eax,0x5abf03cf
   14001335d:	mov    bh,0x36
   14001335f:	vhaddpd xmm8,xmm0,XMMWORD PTR [rdx+0x45b0309a]
   140013367:	xor    dh,BYTE PTR [rsi-0x14fb9f6e]
   14001336d:	add    DWORD PTR [rax+0x21],eax
   140013370:	and    ch,BYTE PTR [rsi+rbp*4-0x1f]
   140013374:	(bad)  
   140013375:	leave  
   140013376:	jrcxz  0x140013390
   140013378:	mov    ebp,0xdec436ec
   14001337d:	add    eax,edx
   14001337f:	in     al,dx
   140013380:	rex.WB in al,dx
   140013382:	pushf  
   140013383:	cmp    DWORD PTR [rsi+0x58067fd0],ebp
   140013389:	pop    rbx
   14001338a:	xchg   edx,eax
   14001338b:	mov    ch,0xff
   14001338d:	(bad)  
   14001338e:	xor    DWORD PTR [rsi+0x19],ebp
   140013391:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013392:	sbb    dl,dl
   140013394:	(bad)  
   140013395:	mov    ebx,0x23c3f166
   14001339a:	sbb    dl,BYTE PTR [rsp+rdx*4-0x6d]
   14001339e:	jle    0x14001340c
   1400133a0:	test   eax,0xe6e8536f
   1400133a5:	repnz mov BYTE PTR [rcx+0x24eb162a],dl
   1400133ac:	push   0x2b
   1400133ae:	or     bl,ch
   1400133b0:	pop    rdi
   1400133b1:	xchg   esi,eax
   1400133b2:	(bad)  
   1400133b3:	shl    BYTE PTR [rdi+0x6c],cl
   1400133b6:	in     al,dx
   1400133b7:	jg     0x140013377
   1400133b9:	cmp    eax,0xd87188b4
   1400133be:	pop    rsp
   1400133bf:	scas   ax,WORD PTR es:[rdi]
   1400133c1:	(bad)  
   1400133c2:	and    esi,DWORD PTR [rbp+0x9]
   1400133c5:	jb     0x14001339b
   1400133c7:	rex xchg ebx,eax
   1400133c9:	mov    ?,WORD PTR [rdi+rdi*8+0x4c]
   1400133cd:	and    dh,BYTE PTR [rdx]
   1400133cf:	loopne 0x1400133a0
   1400133d1:	faddp  st(5),st
   1400133d3:	ror    DWORD PTR [rsi-0x628c0d79],1
   1400133d9:	movsxd esp,DWORD PTR [rax-0x4b261cd4]
   1400133df:	retf   0x1908
   1400133e2:	imul   esi,DWORD PTR [r11],0xffffffae
   1400133e6:	and    eax,0xc51b367c
   1400133eb:	repnz (bad) 
   1400133ed:	call   0x1a3fad4b4
   1400133f2:	cmp    BYTE PTR [rcx+0x64],dl
   1400133f5:	rex.WRX movabs rbp,0x8ac8ca224204371e
   1400133ff:	sbb    BYTE PTR [rcx],ah
   140013401:	xor    BYTE PTR [rdx-0x2318fa5a],dl
   140013407:	adc    bl,cl
   140013409:	adc    esp,DWORD PTR [rax]
   14001340b:	(bad)  
   14001340c:	(bad)  
   14001340d:	mov    bl,0xe7
   14001340f:	out    dx,al
   140013410:	fist   DWORD PTR [rsi]
   140013412:	mov    ebp,0xd8c1d723
   140013417:	ret    
   140013418:	jmp    0x140013409
   14001341a:	add    esp,ecx
   14001341c:	movabs ds:0xb641747356f92ec8,eax
   140013425:	mov    al,0xef
   140013427:	mov    dl,0x2b
   140013429:	jle    0x1400134a1
   14001342b:	(bad)  
   14001342c:	js     0x140013426
   14001342e:	xchg   ebx,eax
   14001342f:	mov    cl,0xee
   140013431:	cld    
   140013432:	add    al,0x13
   140013434:	in     eax,dx
   140013435:	outs   dx,DWORD PTR ds:[rsi]
   140013436:	pop    rax
   140013437:	xchg   edx,eax
   140013438:	sub    ebx,DWORD PTR [rdx]
   14001343a:	mov    dh,0x3f
   14001343c:	movabs al,ds:0x6442a4dd01268ccb
   140013445:	movabs ds:0xadfcb663d4d2cfec,eax
   14001344e:	out    dx,al
   14001344f:	(bad)  [rsi-0x51]
   140013452:	fs scas al,BYTE PTR es:[rdi]
   140013454:	sub    BYTE PTR [rbx+0x11],0xbf
   140013458:	mul    DWORD PTR [rdx+rax*2-0xbdcdb2e]
   14001345f:	add    al,0x88
   140013461:	or     edx,ecx
   140013463:	(bad)
   140013468:	call   0x13732e830
   14001346d:	add    eax,0xffffff95
   140013470:	scas   al,BYTE PTR es:[rdi]
   140013471:	sahf   
   140013472:	(bad)  
   140013473:	xchg   esp,eax
   140013474:	adc    esi,DWORD PTR [rdx+0x16]
   140013477:	push   rdi
   140013478:	or     DWORD PTR [rdx+rbx*2+0x64],0x629943a4
   140013480:	push   rsp
   140013481:	or     ah,BYTE PTR [rcx+0x150dd6a7]
   140013487:	jns    0x14001346e
   140013489:	jbe    0x14001346a
   14001348b:	jo     0x1400134ea
   14001348d:	call   0xe83001bc
   140013492:	xchg   ebp,eax
   140013493:	in     eax,dx
   140013494:	pop    rax
   140013495:	adc    BYTE PTR [rdi],0xfb
   140013498:	(bad)  
   140013499:	push   rax
   14001349a:	(bad)
   14001349e:	js     0x14001350e
   1400134a0:	clc    
   1400134a1:	jb     0x140013473
   1400134a3:	out    dx,al
   1400134a4:	rex.WXB
   1400134a5:	sub    esi,r11d
   1400134a8:	fdiv   DWORD PTR [rcx]
   1400134aa:	ja     0x140013508
   1400134ac:	(bad)  
   1400134ad:	(bad)  
   1400134ae:	jae    0x140013443
   1400134b0:	or     BYTE PTR [rbx+0xeb3404b],ch
   1400134b6:	imul   ebx,DWORD PTR [rcx+rbp*1+0x7],0xffffffb3
   1400134bb:	adc    eax,0x47ea057d
   1400134c0:	xchg   BYTE PTR [rsi-0x7],dh
   1400134c3:	loope  0x140013511
   1400134c5:	cld    
   1400134c6:	movabs eax,ds:0xb8dbaadd9017e78c
   1400134cf:	mov    ah,0x60
   1400134d1:	pop    rcx
   1400134d2:	test   al,0x49
   1400134d4:	adc    eax,0x7f5ba
   1400134d9:	push   rax
   1400134da:	sub    al,0xff
   1400134dc:	rex.RB scas al,BYTE PTR es:[rdi]
   1400134de:	enter  0xc3ac,0x52
   1400134e2:	(bad)  
   1400134e3:	add    dh,BYTE PTR [rsi+rcx*1]
   1400134e6:	rol    esi,0x8b
   1400134e9:	xchg   ecx,eax
   1400134ea:	jnp    0x1400134ec
   1400134ec:	data16 mov bh,0xc1
   1400134ef:	(bad)  
   1400134f0:	fimul  WORD PTR [rdi-0x15eff0f7]
   1400134f6:	leave  
   1400134f7:	fadd   DWORD PTR [rbx+0x71]
   1400134fa:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400134fb:	rex.WR mov dil,0x96
   1400134fe:	jo     0x14001349f
   140013500:	jmp    0x1011b2438
   140013505:	test   ah,0xb
   140013508:	repz ret 
   14001350a:	pop    rcx
   14001350b:	cmp    DWORD PTR [rbp+0x64f90155],esi
   140013511:	jne    0x140013522
   140013513:	movabs al,ds:0x4e0de441d5662e40
   14001351c:	fucomp st(0)
   14001351e:	xchg   ebp,eax
   14001351f:	mul    DWORD PTR [rsi-0x31]
   140013522:	(bad)  
   140013523:	loopne 0x140013563
   140013525:	ds stc 
   140013527:	add    esp,esi
   140013529:	not    DWORD PTR [rax+0x45]
   14001352c:	push   ax
   14001352e:	mov    cl,0x78
   140013530:	out    0xa6,al
   140013532:	popf   
   140013533:	or     DWORD PTR [rsi+rbx*2+0x5faef74],eax
   14001353a:	jp     0x14001352a
   14001353c:	jb     0x1400135a2
   14001353e:	xlat   BYTE PTR ds:[rbx]
   14001353f:	pushf  
   140013540:	or     ah,BYTE PTR [rdx-0x1e927d02]
   140013546:	fsub   st,st(3)
   140013548:	(bad)  
   140013549:	(bad)  
   14001354a:	inc    dh
   14001354c:	(bad)  
   14001354e:	outs   dx,DWORD PTR ds:[rsi]
   14001354f:	xor    DWORD PTR [rax-0x2ecdded4],0x4aa88a84
   140013559:	(bad)  
   14001355a:	es (bad) 
   14001355d:	add    DWORD PTR fs:[rbx+rbx*1+0x0],esp
   140013562:	mov    ebp,0x74e70673
   140013567:	pop    rbp
   140013568:	jg     0x140013522
   14001356a:	pop    rcx
   14001356b:	jne    0x140013506
   14001356d:	jmp    rbp
   14001356f:	(bad)  
   140013570:	retf   
   140013571:	(bad)
   140013575:	mov    ecx,DWORD PTR [rcx-0x56]
   140013578:	mov    esi,0xcd1585bb
   14001357d:	(bad)  
   14001357e:	xchg   esp,eax
   14001357f:	lock iret 
   140013581:	and    BYTE PTR [rsi],dl
   140013583:	rex.B jle 0x140013522
   140013586:	or     al,BYTE PTR [rcx]
   140013588:	mov    ch,0x56
   14001358a:	fdiv   QWORD PTR [rsi+0x79]
   14001358d:	out    0x52,al
   14001358f:	add    al,0x3f
   140013591:	mov    bh,0x41
   140013593:	jge    0x14001354d
   140013595:	cmc    
   140013596:	ja     0x1400135b4
   140013598:	(bad)  
   14001359a:	xchg   edx,eax
   14001359b:	mov    ch,0x48
   14001359d:	jno    0x1400135ee
   14001359f:	(bad)
   1400135a2:	jne    0x140013544
   1400135a4:	std    
   1400135a5:	push   rbx
   1400135a6:	rex.WR outs dx,BYTE PTR ds:[rsi]
   1400135a8:	lock (bad) 
   1400135aa:	test   DWORD PTR [rdi+0x1ad9f7f3],0x63554211
   1400135b4:	jae    0x14001361c
   1400135b6:	sbb    al,0xcf
   1400135b8:	ss sbb eax,0xd7e1f2c
   1400135be:	(bad)  
   1400135bf:	ja     0x1400135de
   1400135c1:	cmp    eax,0x32312773
   1400135c6:	xor    eax,0x71e9de86
   1400135cb:	test   ch,ah
   1400135cd:	jns    0x14001359f
   1400135cf:	out    0xa,al
   1400135d1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400135d2:	mov    ecx,0x15606ba8
   1400135d7:	outs   dx,BYTE PTR ds:[rsi]
   1400135d8:	not    BYTE PTR [rsi]
   1400135da:	fist   WORD PTR [rsp]
   1400135dd:	in     eax,0x57
   1400135df:	sub    al,BYTE PTR [rax]
   1400135e1:	movabs eax,ds:0x73dbfa02bebb7cf1
   1400135ea:	jrcxz  0x140013668
   1400135ec:	leave  
   1400135ed:	in     ax,0x3
   1400135f0:	(bad)  
   1400135f1:	add    ch,BYTE PTR [rdx-0x42]
   1400135f4:	lods   eax,DWORD PTR ds:[rsi]
   1400135f5:	retf   
   1400135f6:	push   rcx
   1400135f7:	add    edi,esp
   1400135f9:	(bad)  
   1400135fa:	mov    ecx,0x5de56602
   1400135ff:	xchg   edx,eax
   140013600:	rep outs dx,DWORD PTR ds:[rsi]
   140013602:	in     eax,dx
   140013603:	ja     0x1400135ff
   140013605:	cdq    
   140013606:	out    0x5d,eax
   140013608:	sbb    BYTE PTR [rdx+0x32860f28],bl
   14001360e:	fdivr  QWORD PTR [rbx+0x75db6ac5]
   140013614:	sbb    ecx,edx
   140013616:	mov    dl,0x11
   140013618:	jno    0x1400135c3
   14001361a:	(bad)  
   14001361b:	xchg   esp,eax
   14001361c:	outs   dx,BYTE PTR ds:[rsi]
   14001361d:	gs jle 0x1400135ec
   140013620:	(bad)
   140013623:	xchg   ecx,eax
   140013624:	test   al,0xbf
   140013626:	movabs al,ds:0x554e2a0d257007f2
   14001362f:	nop
   140013630:	(bad)  
   140013631:	in     eax,0xfd
   140013633:	mov    eax,0x43fad4bb
   140013638:	movabs al,ds:0x5b3f3efec25321cd
   140013642:	jae    0x14001367e
   140013644:	fcmovnb st,st(4)
   140013646:	(bad)  
   140013647:	frndint 
   140013649:	(bad)  [rcx+0x1b]
   14001364c:	iret   
   14001364d:	mov    ebp,0x7802a51f
   140013652:	or     DWORD PTR [rsi+0x577d7a78],esi
   140013658:	jp     0x140013644
   14001365a:	fcmovnu st,st(7)
   14001365c:	cli    
   14001365d:	(bad)  
   14001365e:	sahf   
   14001365f:	ret    
   140013660:	xchg   DWORD PTR [rdi-0xfcfcc2d],edi
   140013666:	(bad)  
   140013667:	adc    bl,ah
   140013669:	jle    0x140013628
   14001366b:	rex.X xlat BYTE PTR ds:[rbx]
   14001366d:	movabs al,ds:0xf9159b069b45b4c
   140013676:	fs jrcxz 0x1400136cc
   140013679:	ds fcmovnbe st,st(2)
   14001367c:	push   rdx
   14001367d:	xchg   edi,eax
   14001367e:	adc    BYTE PTR [rsi+rdi*2-0x36],cl
   140013682:	rex.WRX xor BYTE PTR [rcx-0x30],r15b
   140013686:	int    0x14
   140013688:	mov    DWORD PTR [rcx+0x65e1303e],edx
   14001368e:	and    eax,0x45619102
   140013693:	and    dl,BYTE PTR [r10-0xf]
   140013697:	fimul  WORD PTR [rdi+0x7]
   14001369a:	jb     0x1400136a1
   14001369c:	(bad)  
   14001369d:	sub    eax,0x484041c1
   1400136a2:	(bad)  
   1400136a3:	(bad)  
   1400136a4:	sti    
   1400136a5:	rex.RB push 0xffffffffffffff87
   1400136a8:	pop    rsp
   1400136a9:	mov    edi,0xe5ab24cc
   1400136ae:	mov    al,0xc5
   1400136b0:	mov    BYTE PTR [rbx-0x13ca74a1],dl
   1400136b6:	xor    ecx,DWORD PTR [rbx+0x76ff8505]
   1400136bc:	jle    0x1400136f7
   1400136be:	xchg   edi,eax
   1400136bf:	xor    al,0xf8
   1400136c1:	int3   
   1400136c2:	rex.WX and al,0x65
   1400136c5:	rex.RX popf 
   1400136c7:	int3   
   1400136c8:	jo     0x1400136ae
   1400136ca:	(bad)  
   1400136cb:	(bad)  
   1400136cc:	mov    BYTE PTR [rax],dl
   1400136ce:	xlat   BYTE PTR ds:[rbx]
   1400136cf:	push   rdi
   1400136d0:	xor    BYTE PTR [rdx-0x1e],bh
   1400136d3:	cmp    BYTE PTR [rsi+0x2f],al
   1400136d6:	mov    ebx,0x4eff5505
   1400136db:	rcr    ah,1
   1400136dd:	cmp    BYTE PTR [rsi-0x63],dh
   1400136e0:	jle    0x1400136f8
   1400136e2:	ret    
   1400136e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400136e4:	mov    fs,WORD PTR [rax-0x4f7ac662]
   1400136ea:	mov    dl,0x0
   1400136ec:	rex.WRX imul r14,QWORD PTR [rax],0xffffffffffffffe5
   1400136f0:	fs add al,0x59
   1400136f3:	rex.WRB loop 0x1400136f1
   1400136f6:	ja     0x140013690
   1400136f8:	xchg   ebp,eax
   1400136f9:	add    ecx,DWORD PTR [rax+0xe]
   1400136fc:	std    
   1400136fd:	sub    ecx,ebp
   1400136ff:	(bad)  
   140013701:	(bad)  
   140013702:	jg     0x1400136b9
   140013704:	pop    rsi
   140013705:	add    eax,edx
   140013707:	nop
   140013708:	xchg   esi,eax
   140013709:	out    0xe4,al
   14001370b:	and    esp,DWORD PTR [rdi-0x1b]
   14001370e:	rex.RB mov r13b,0xf8
   140013711:	xchg   edx,eax
   140013712:	out    dx,eax
   140013713:	outs   dx,DWORD PTR ds:[rsi]
   140013714:	ret    0x6e4f
   140013717:	icebp  
   140013718:	lods   eax,DWORD PTR ds:[rsi]
   140013719:	ret    0x862f
   14001371c:	sub    BYTE PTR [rax+0x11d6c1ca],0x8c
   140013723:	xchg   ecx,eax
   140013724:	adc    BYTE PTR [rdx+0x40],ah
   140013727:	mov    BYTE PTR [rdx+rbp*1-0x571b3f8],al
   14001372e:	fwait
   14001372f:	adc    BYTE PTR [rcx-0x7b2c4098],al
   140013735:	(bad)  
   140013736:	sub    al,BYTE PTR [rsp+rax*4]
   140013739:	or     BYTE PTR [rax+rbp*1-0x6573a53c],al
   140013740:	(bad)  
   140013741:	or     eax,DWORD PTR [rdx]
   140013743:	je     0x1400136ce
   140013745:	cs adc ah,dl
   140013748:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013749:	rex.RXB mov cs,WORD PTR [rip+0xffffffffdd16e712]        # 0x11d181e62
   140013750:	pop    rcx
   140013751:	fwait
   140013752:	mov    ch,0xe6
   140013754:	(bad)  
   140013755:	lock rol DWORD PTR [rbp-0x4fa39081],0xa1
   14001375d:	sub    BYTE PTR [rcx+rdx*4-0x58],0xd
   140013762:	retf   
   140013763:	ins    BYTE PTR es:[rdi],dx
   140013764:	ins    DWORD PTR es:[rdi],dx
   140013765:	rex.B lahf 
   140013767:	sar    DWORD PTR [eip+0xffffffff9ef96670],0x13        # 0xdefa9ddf
   14001376f:	sti    
   140013770:	imul   eax,DWORD PTR [rax+0x7b],0xffffffbe
   140013774:	(bad)  
   140013775:	rex.RX lods eax,DWORD PTR ds:[rsi]
   140013777:	and    eax,0x74ef8214
   14001377c:	out    dx,al
   14001377d:	out    0x2f,eax
   14001377f:	repz rex.WR retf 0x9893
   140013784:	or     BYTE PTR [rbp+0x3715004c],al
   14001378a:	jge    0x14001379b
   14001378c:	shr    BYTE PTR [rsi+0x63a0cd8f],1
   140013792:	test   eax,0x7f18cc1
   140013797:	retf   
   140013798:	xor    edi,DWORD PTR [rax+rbp*8+0x689a234d]
   14001379f:	mov    esi,0xfe7bb1f2
   1400137a4:	cli    
   1400137a5:	ror    edi,0x7e
   1400137a8:	cli    
   1400137a9:	(bad)  
   1400137aa:	xlat   BYTE PTR ds:[rbx]
   1400137ab:	push   rsi
   1400137ac:	push   rsi
   1400137ad:	inc    BYTE PTR [rdx+rax*2-0x2a54e1b8]
   1400137b4:	shl    DWORD PTR [rdi+0x42],0xfe
   1400137b8:	movsxd esi,esi
   1400137ba:	(bad)  
   1400137bb:	sahf   
   1400137bc:	adc    cl,BYTE PTR [rbp+rdx*4-0x71]
   1400137c0:	mov    esp,0x91f37e14
   1400137c5:	pop    rbp
   1400137c6:	enter  0x7add,0xcb
   1400137ca:	sub    DWORD PTR [rax-0x48],0xfffffffc
   1400137ce:	pop    rbp
   1400137cf:	or     ebp,ecx
   1400137d1:	mov    dl,0x30
   1400137d3:	outs   dx,DWORD PTR ds:[rsi]
   1400137d4:	test   DWORD PTR [rbp-0x22],ebp
   1400137d7:	rex.WR
   1400137d8:	rex.X lahf 
   1400137da:	pop    rdx
   1400137db:	cmp    esp,ebp
   1400137dd:	(bad)  
   1400137de:	sbb    edx,edx
   1400137e0:	jmp    0x1407ea5d4
   1400137e5:	leave  
   1400137e6:	adc    ecx,eax
   1400137e8:	mov    ebx,0x90320a10
   1400137ed:	jae    0x1400137d5
   1400137ef:	sahf   
   1400137f0:	pop    rcx
   1400137f1:	and    DWORD PTR [rdx-0x40475232],0x3ba4337c
   1400137fb:	cli    
   1400137fc:	(bad)  [rbp+0x59]
   1400137ff:	(bad)  
   140013800:	or     ch,al
   140013802:	push   rbx
   140013803:	popf   
   140013804:	repz (bad) 
   140013806:	sub    bh,ah
   140013808:	add    DWORD PTR [rip+0xffffffffc7e3b301],edx        # 0x107e4eb0f
   14001380e:	jno    0x140013874
   140013810:	iret   
   140013811:	(bad)  
   140013812:	shl    al,0x1e
   140013815:	(bad)  
   140013816:	imul   eax,DWORD PTR [rsi],0xb147a73b
   14001381c:	jae    0x140013890
   14001381e:	adc    al,0xd5
   140013820:	mov    WORD PTR [rsi+0x54d69bea],gs
   140013826:	and    DWORD PTR [rbp-0x22],esp
   140013829:	mov    edx,0x50115002
   14001382e:	rex.XB movsxd edi,r14d
   140013831:	sub    bh,ah
   140013833:	in     eax,0xea
   140013835:	mov    esi,0xf84d548e
   14001383a:	in     eax,dx
   14001383b:	(bad)  
   14001383c:	adc    QWORD PTR [r9-0x441d1ec1],rax
   140013843:	and    BYTE PTR [rbx+0x60],ah
   140013846:	cli    
   140013847:	fcompp 
   140013849:	movabs al,ds:0x2db606052b23b2d2
   140013852:	and    DWORD PTR [rsi+0x3e],edx
   140013855:	sub    DWORD PTR [rdx],ebp
   140013857:	xchg   esp,eax
   140013858:	lods   eax,DWORD PTR ds:[rsi]
   140013859:	popf   
   14001385a:	shr    DWORD PTR [rip+0xffffffffcc40816d],cl        # 0x10c41b9cd
   140013860:	pop    rsp
   140013861:	jb     0x14001389c
   140013863:	cmp    DWORD PTR [rax],eax
   140013865:	adc    bh,ah
   140013867:	movsxd ebp,DWORD PTR [rbp+0x19]
   14001386a:	loopne 0x1400138d9
   14001386c:	adc    ebp,DWORD PTR [rdi+0xbf90e04]
   140013872:	cmp    DWORD PTR [rcx-0x4101ac73],edx
   140013878:	push   rax
   140013879:	sbb    ah,BYTE PTR [rip+0x4491436a]        # 0x184927be9
   14001387f:	push   rsi
   140013880:	(bad)  
   140013881:	jmp    0xd7f2943b
   140013886:	movabs ds:0xf5858159e0646403,eax
   14001388f:	xchg   edi,eax
   140013890:	shl    DWORD PTR [rdx+0x2b],cl
   140013893:	mov    ss,WORD PTR [rdi+0x3e]
   140013896:	jns    0x14001382b
   140013898:	mov    cl,0x32
   14001389a:	or     ah,BYTE PTR [rdx+0x4a]
   14001389d:	stos   BYTE PTR es:[rdi],al
   14001389e:	rex.RX mov edx,0xd8e9a7f1
   1400138a4:	rex.WRB js 0x1400138b0
   1400138a7:	fld    QWORD PTR [rax]
   1400138a9:	push   rbx
   1400138aa:	add    BYTE PTR [rbx+0x3f8e3600],bl
   1400138b0:	icebp  
   1400138b1:	(bad)  
   1400138b2:	adc    esi,edi
   1400138b4:	std    
   1400138b5:	out    dx,al
   1400138b6:	xchg   edi,edi
   1400138b8:	out    0xc9,eax
   1400138ba:	jrcxz  0x14001385f
   1400138bc:	mov    edi,0xc776edd8
   1400138c1:	int    0x2f
   1400138c3:	mov    bh,0xb2
   1400138c5:	pop    rbp
   1400138c6:	loope  0x14001388f
   1400138c8:	fidiv  DWORD PTR [rcx+0x5a]
   1400138cb:	sbb    eax,eax
   1400138cd:	cmp    al,0x1
   1400138cf:	pop    rdx
   1400138d0:	outs   dx,BYTE PTR ds:[rsi]
   1400138d1:	sub    DWORD PTR [rdx-0x3c17a323],0xffffffa2
   1400138d8:	cmp    eax,0x6f90cc81
   1400138dd:	adc    DWORD PTR [rbx+rcx*1-0x3b],ebx
   1400138e1:	xchg   ebx,eax
   1400138e2:	ds mov eax,0x98fa7f02
   1400138e8:	pop    rbx
   1400138e9:	stos   BYTE PTR es:[rdi],al
   1400138ea:	mov    cl,0xbb
   1400138ec:	or     ch,BYTE PTR [rcx]
   1400138ee:	movabs ds:0x6c9ba0eca3363901,eax
   1400138f7:	shl    BYTE PTR [rbx+0x5c3b054e],cl
   1400138fd:	(bad)  
   1400138fe:	ror    DWORD PTR [rbp+0x5d],0x98
   140013902:	and    DWORD PTR [rbx],0xffffffd6
   140013905:	pop    rsp
   140013906:	out    dx,al
   140013907:	test   al,0x38
   140013909:	jge    0x1400138c9
   14001390b:	(bad)  
   14001390c:	rex.WRB
   14001390d:	repz xor eax,0x4527d886
   140013913:	movabs eax,ds:0x4159f5d64ee7c78
   14001391c:	or     BYTE PTR [rcx],ah
   14001391e:	push   rsi
   14001391f:	pop    rax
   140013920:	popf   
   140013921:	cmp    BYTE PTR [rcx+0x6c21eaa7],cl
   140013927:	in     al,dx
   140013928:	mov    edi,0x57d7116
   14001392d:	mov    ebp,0x3c31c733
   140013932:	jge    0x140013936
   140013934:	cmp    eax,0x9710a733
   140013939:	out    0x81,eax
   14001393b:	int    0x15
   14001393d:	pop    rcx
   14001393e:	pop    rbp
   14001393f:	cwde   
   140013940:	sub    al,0xad
   140013942:	rex.WX sub al,0xb5
   140013945:	nop
   140013946:	jnp    0x140013934
   140013948:	stos   DWORD PTR es:[rdi],eax
   140013949:	sti    
   14001394a:	or     BYTE PTR [rdx+0x48fffa91],cl
   140013950:	fsub   st,st(2)
   140013952:	neg    ebx
   140013954:	mov    ch,0xa8
   140013956:	add    eax,0x46781525
   14001395b:	cs in  al,dx
   14001395d:	mov    cl,0x31
   14001395f:	fs fcmovne st,st(7)
   140013962:	rex.RXB (bad) 
   140013964:	pop    rbp
   140013965:	add    al,0xa
   140013967:	and    eax,0x64679062
   14001396c:	loope  0x14001392b
   14001396e:	push   rsi
   14001396f:	or     BYTE PTR [rcx-0x747f2c70],dl
   140013975:	and    al,0x99
   140013977:	ss jl  0x1400139e0
   14001397a:	mov    cl,0xd4
   14001397c:	es rex.R not spl
   140013980:	pop    rsp
   140013981:	stc    
   140013982:	sub    cl,BYTE PTR [rdi+0x53]
   140013985:	rex.RX movsxd r9d,DWORD PTR [rdx]
   140013988:	out    dx,al
   140013989:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001398a:	ins    DWORD PTR es:[rdi],dx
   14001398b:	outs   dx,BYTE PTR ds:[rsi]
   14001398c:	repnz fadd QWORD PTR [rax]
   14001398f:	int3   
   140013990:	sbb    dl,BYTE PTR [rdi-0xc37a2f7]
   140013996:	mov    edx,?
   140013998:	pop    rax
   140013999:	out    0xdf,eax
   14001399b:	push   0x4a
   14001399d:	mov    dh,0x9
   14001399f:	jp     0x14001398c
   1400139a1:	(bad)  
   1400139a2:	pop    rcx
   1400139a3:	or     eax,0x37e6b38
   1400139a8:	stc    
   1400139a9:	xor    eax,0x64885202
   1400139ae:	sub    eax,0x99b945d0
   1400139b3:	jne    0x14001397e
   1400139b5:	mul    ebp
   1400139b7:	and    DWORD PTR [rcx+0x1d],ecx
   1400139ba:	jmp    FWORD PTR [rip+0x5db2580]        # 0x145dc5f40
   1400139c0:	mov    dl,0xe3
   1400139c2:	ret    
   1400139c3:	stos   BYTE PTR es:[rdi],al
   1400139c4:	sub    bl,bh
   1400139c6:	cs jrcxz 0x14001399e
   1400139c9:	mov    ebx,0x17752391
   1400139ce:	push   rsp
   1400139cf:	clc    
   1400139d0:	sub    DWORD PTR [rip+0x1ac0000a],0xdcafd580        # 0x15ac139e4
   1400139da:	sti    
   1400139db:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400139dc:	(bad)  
   1400139dd:	jnp    0x1400139d9
   1400139df:	fcmovnu st,st(7)
   1400139e1:	cli    
   1400139e2:	icebp  
   1400139e3:	cmc    
   1400139e4:	mov    ch,0xd5
   1400139e6:	iret   
   1400139e7:	(bad)  [rbx-0x4f466c31]
   1400139ed:	ret    0xa7f6
   1400139f0:	(bad)  
   1400139f1:	(bad)  
   1400139f2:	mov    ch,0x5c
   1400139f4:	(bad)  
   1400139f5:	imul   eax,ebp,0xc2853765
   1400139fb:	mov    dl,0x93
   1400139fd:	in     eax,0xb
   1400139ff:	fs lahf 
   140013a01:	fstp   st(3)
   140013a03:	rex.XB stc 
   140013a05:	jae    0x1400139d1
   140013a07:	in     al,dx
   140013a08:	ds (bad) 
   140013a0a:	mov    edi,0x3790d7cd
   140013a0f:	loop   0x140013a75
   140013a11:	rex.W int3 
   140013a13:	add    eax,0x99ee0dc
   140013a18:	mov    dh,0xfd
   140013a1a:	ds (bad) 
   140013a1c:	mov    ebx,eax
   140013a1e:	mov    ebx,0x5e873383
   140013a23:	jbe    0x140013a33
   140013a25:	cmp    DWORD PTR [rbx+0x6d],0xd27da32e
   140013a2c:	push   rdx
   140013a2d:	mov    ah,0xd1
   140013a2f:	push   rdx
   140013a30:	(bad)  
   140013a31:	and    eax,0x9a5805c1
   140013a36:	imul   ecx,DWORD PTR [rbx],0x420000e2
   140013a3c:	mov    WORD PTR [rax+0xb],cs
   140013a3f:	xor    edi,DWORD PTR [rax+0x66]
   140013a42:	imul   ebx,DWORD PTR [rip+0x5abc97f3],0x29c2fb60        # 0x19abdd23f
   140013a4c:	or     al,0xcf
   140013a4e:	sahf   
   140013a4f:	rex fild WORD PTR [rsi+0x663b3b]
   140013a56:	add    BYTE PTR [rax],ah
   140013a58:	add    BYTE PTR [rcx+0x44],cl
   140013a5b:	push   r12
   140013a5d:	hlt    
   140013a5e:	rex.WB jmp 0x142b2fa51
   140013a64:	out    0x4d,al
   140013a66:	stc    
   140013a67:	cdq    
   140013a68:	ds int3 
   140013a6a:	nop
   140013a6b:	enter  0xf87b,0x57
   140013a6f:	sub    DWORD PTR [rdi],ebp
   140013a71:	out    dx,al
   140013a72:	rcr    DWORD PTR [rdx-0x22],1
   140013a75:	mov    esi,DWORD PTR [rdx-0x2523d57f]
   140013a7b:	ins    BYTE PTR es:[rdi],dx
   140013a7c:	ins    DWORD PTR es:[rdi],dx
   140013a7d:	hlt    
   140013a7e:	cmp    cl,BYTE PTR [rcx*4-0x4efbe94b]
   140013a85:	out    0x4c,eax
   140013a87:	fcmovbe st,st(3)
   140013a89:	mov    edi,0xfa809850
   140013a8e:	icebp  
   140013a8f:	xchg   esp,eax
   140013a90:	xchg   ebp,eax
   140013a91:	test   BYTE PTR [rcx],dh
   140013a93:	(bad)  
   140013a95:	rex.WR cld 
   140013a97:	pop    rsp
   140013a98:	scas   al,BYTE PTR es:[rdi]
   140013a99:	sub    eax,0x9c50ada9
   140013a9e:	cdq    
   140013a9f:	iret   
   140013aa0:	xchg   ah,al
   140013aa2:	(bad)  
   140013aa3:	out    dx,eax
   140013aa4:	(bad)  
   140013aa5:	sub    al,0x23
   140013aa7:	rex.RXB jns 0x140013a80
   140013aaa:	stc    
   140013aab:	push   rbx
   140013aac:	mov    ah,0xac
   140013aae:	(bad)  
   140013aaf:	push   0xffffffffffffff9f
   140013ab1:	retf   
   140013ab2:	movabs eax,ds:0x18c56fb6986eda7d
   140013abb:	xchg   edx,eax
   140013abc:	pop    rbp
   140013abd:	or     eax,0x1181fad0
   140013ac2:	jl     0x140013ae5
   140013ac4:	xchg   ebx,eax
   140013ac5:	iret   
   140013ac6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140013ac7:	ror    ah,0xb
   140013aca:	mov    dh,0x67
   140013acc:	loopne 0x140013a9d
   140013ace:	scas   al,BYTE PTR es:[rdi]
   140013acf:	push   rbp
   140013ad0:	(bad)  
   140013ad1:	and    edi,edx
   140013ad3:	rex.WRXB and QWORD PTR [r15+0x78],r14
   140013ad7:	idiv   bl
   140013ad9:	xor    ah,ah
   140013adb:	mov    edx,0x4fcbd6ed
   140013ae0:	or     BYTE PTR [rbx-0x64210e44],al
   140013ae6:	xor    edi,ebx
   140013ae8:	xchg   DWORD PTR [rsi],esi
   140013aea:	lahf   
   140013aeb:	jnp    0x140013aae
   140013aed:	mov    dh,0x88
   140013aef:	sub    DWORD PTR [rdi-0x43992849],0x19
   140013af6:	add    BYTE PTR [rdi-0x73],cl
   140013af9:	(bad)  
   140013afa:	(bad)  
   140013afb:	mov    ?,WORD PTR [rdi]
   140013afd:	std    
   140013afe:	in     al,0xa7
   140013b00:	neg    DWORD PTR [rsi+0x76]
   140013b03:	fnstenv [rdx-0x59]
   140013b06:	scas   eax,DWORD PTR es:[rdi]
   140013b07:	call   QWORD PTR [rsi]
   140013b09:	and    ch,dl
   140013b0b:	fadd   DWORD PTR [rbp+0x2e0307b5]
   140013b11:	imul   edx,esi,0xcc8dab82
   140013b17:	fiadd  DWORD PTR [rbx]
   140013b19:	pop    rax
   140013b1a:	rex.RX (bad) 
   140013b1c:	pop    rdx
   140013b1d:	ds mov edi,0x9d24eaee
   140013b23:	fwait
   140013b24:	push   rbp
   140013b25:	jge    0x140013b3b
   140013b27:	ins    BYTE PTR es:[rdi],dx
   140013b28:	pop    rcx
   140013b29:	xchg   BYTE PTR [rsi],dl
   140013b2b:	ret    
   140013b2c:	and    eax,0xfa28a429
   140013b31:	xchg   ecx,ebx
   140013b33:	mov    esp,0xdf2fd6c8
   140013b38:	push   rsp
   140013b39:	rex.W
   140013b3a:	or     BYTE PTR ss:[rsp+rcx*2+0x18],bl
   140013b3f:	icebp  
   140013b40:	dec    DWORD PTR [rbp+0x41]
   140013b43:	or     DWORD PTR [rdi+0x20],esp
   140013b46:	sbb    eax,0x97681973
   140013b4b:	jbe    0x140013b37
   140013b4d:	ja     0x140013b3f
   140013b4f:	imul   edx,DWORD PTR [rcx-0x5b],0xffffffe4
   140013b53:	(bad)  
   140013b54:	fist   DWORD PTR [rcx+rax*2-0x1fde7a2]
   140013b5b:	mov    ebx,0x49010042
   140013b60:	(bad)  
   140013b61:	ficomp DWORD PTR [rdi+rax*8-0x4f]
   140013b65:	icebp  
   140013b66:	adc    edi,DWORD PTR [rax]
   140013b68:	mov    dh,0xff
   140013b6a:	xor    eax,0xa043fd88
   140013b6f:	test   DWORD PTR [rcx],ecx
   140013b71:	or     al,0x4f
   140013b73:	cmp    al,0x87
   140013b75:	xchg   ecx,eax
   140013b76:	mov    DWORD PTR [rbx+0x409f4ce8],esp
   140013b7c:	pop    rsp
   140013b7d:	(bad)  
   140013b7e:	add    edi,DWORD PTR [rdx-0x366c0767]
   140013b84:	sbb    eax,0x7508150
   140013b89:	movabs al,ds:0x4242b6dd249a84e6
   140013b92:	rex.RB lods al,BYTE PTR ds:[rsi]
   140013b94:	jne    0x140013b95
   140013b96:	sbb    DWORD PTR [rdi],ebp
   140013b98:	(bad)  
   140013b99:	and    dl,BYTE PTR [rax-0x34]
   140013b9c:	or     esi,DWORD PTR [rsi+0x20]
   140013b9f:	rex.W cmp al,0x5a
   140013ba2:	repnz xchg ebp,eax
   140013ba4:	jb     0x140013c0e
   140013ba6:	(bad)  
   140013ba7:	stos   BYTE PTR es:[rdi],al
   140013ba8:	movabs al,ds:0x25927bfca46f0a78
   140013bb1:	mov    edi,0x52f9bbc
   140013bb6:	rex.WRB not QWORD PTR [rip+0xffffffffcb123e7f]        # 0x10b137a3c
   140013bbd:	xchg   edx,eax
   140013bbe:	(bad)  
   140013bbf:	rex.R loop 0x140013ba1
   140013bc2:	xchg   DWORD PTR [rsp+rax*2-0x144b53a8],edi
   140013bc9:	jo     0x140013bcb
   140013bcb:	push   0xffffffffffffff8a
   140013bcd:	stc    
   140013bce:	repz pop rax
   140013bd0:	in     al,dx
   140013bd1:	imul   ebp,DWORD PTR [rdi+0x200df5a3],0x29
   140013bd8:	loope  0x140013b68
   140013bda:	add    BYTE PTR [rbp+0x55],al
   140013bdd:	xor    al,BYTE PTR [rbp+0x77]
   140013be0:	and    DWORD PTR [rcx+0x45ac54aa],edx
   140013be6:	and    bh,dl
   140013be8:	in     al,0xbc
   140013bea:	mov    ebp,DWORD PTR [rcx]
   140013bec:	repz cmp al,0x7d
   140013bef:	jl     0x140013c67
   140013bf1:	outs   dx,DWORD PTR ds:[rsi]
   140013bf2:	push   rbx
   140013bf3:	rex.WRX
   140013bf4:	test   DWORD PTR ss:[rcx+0x294d961],ebx
   140013bfb:	out    dx,al
   140013bfc:	hlt    
   140013bfd:	xchg   DWORD PTR [rsi],ebx
   140013bff:	mov    dh,0x82
   140013c01:	iret   
   140013c02:	xor    ebp,DWORD PTR [rdx]
   140013c04:	and    al,0x85
   140013c06:	adc    esi,DWORD PTR [rdi+rax*1+0x6c04ee69]
   140013c0d:	cwde   
   140013c0e:	ret    
   140013c0f:	retf   
   140013c10:	xlat   BYTE PTR ds:[rbx]
   140013c11:	mov    bl,0x6a
   140013c13:	shl    edi,1
   140013c15:	pop    rcx
   140013c16:	mov    ecx,0x84c24af9
   140013c1b:	pushf  
   140013c1c:	pop    rcx
   140013c1d:	rex.WX cmp rbx,rdx
   140013c20:	push   rsp
   140013c21:	and    bl,BYTE PTR [rdx+0x5a4ae469]
   140013c27:	stc    
   140013c28:	(bad)  
   140013c29:	(bad)  
   140013c2a:	jo     0x140013c0c
   140013c2c:	sbb    DWORD PTR [rax-0x37],ebx
   140013c2f:	int    0xc1
   140013c31:	xlat   BYTE PTR ds:[rbx]
   140013c32:	add    esp,ebx
   140013c34:	psrad  mm0,QWORD PTR [rdx+0x6c]
   140013c38:	(bad)  
   140013c39:	jge    0x140013c70
   140013c3b:	enter  0x6048,0x1d
   140013c3f:	mov    al,BYTE PTR [rsi+rdx*4]
   140013c42:	out    0xe7,eax
   140013c44:	(bad)  
   140013c45:	notrack call QWORD PTR [rcx+0x4e7ffc3f]
   140013c4c:	cmp    al,0xf9
   140013c4e:	clc    
   140013c4f:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140013c51:	outs   dx,BYTE PTR ds:[rsi]
   140013c52:	outs   dx,BYTE PTR ds:[rsi]
   140013c53:	ds xchg esp,eax
   140013c55:	pop    rax
   140013c56:	push   rbx
   140013c57:	imul   ebx,DWORD PTR [rcx-0x5f],0x25d7e73c
   140013c5e:	sti    
   140013c5f:	xchg   ecx,eax
   140013c60:	ins    DWORD PTR es:[rdi],dx
   140013c61:	cmp    DWORD PTR [rax+rcx*1],0xbe68ba6b
   140013c68:	mov    esi,0x7e13364d
   140013c6d:	fistp  WORD PTR [rdi+0x6185cb5]
   140013c73:	xchg   ebx,eax
   140013c74:	jae    0x140013c02
   140013c76:	pop    rbp
   140013c77:	(bad)  
   140013c78:	sub    BYTE PTR [rbx],ch
   140013c7a:	pmaddwd mm1,QWORD PTR [rcx+0x58]
   140013c7e:	sahf   
   140013c7f:	mov    edi,0xa8c87c3e
   140013c84:	test   al,0x75
   140013c86:	xor    BYTE PTR [rbp+0x75c38603],al
   140013c8c:	jae    0x140013c61
   140013c8e:	xchg   edx,eax
   140013c8f:	mov    edx,0xaeb54109
   140013c94:	sub    DWORD PTR [esi],edx
   140013c97:	sbb    edx,DWORD PTR [rbx+0x53b41455]
   140013c9d:	pop    rax
   140013c9e:	imul   ecx,ebx,0x1570c28b
   140013ca4:	(bad)  
   140013ca5:	xchg   edx,eax
   140013ca6:	mul    DWORD PTR [rcx-0x214a8c0e]
   140013cac:	xchg   ebx,eax
   140013cad:	(bad)  
   140013cae:	(bad)  
   140013caf:	jo     0x140013d15
   140013cb1:	call   0xfda2c0e8
   140013cb6:	shr    dl,0x3c
   140013cb9:	cli    
   140013cba:	addr32 (bad) 
   140013cbc:	xor    BYTE PTR [rbx+rsi*2],dh
   140013cbf:	sbb    al,0x9d
   140013cc1:	jmp    0x14b4cc599
   140013cc6:	and    BYTE PTR [rbp-0x8],cl
   140013cc9:	jno    0x140013ce3
   140013ccb:	int    0x1
   140013ccd:	adc    DWORD PTR [rdx+rbp*1+0xa9fa74a],eax
   140013cd4:	nop
   140013cd5:	je     0x140013d36
   140013cd7:	or     eax,0x63b445fb
   140013cdc:	inc    BYTE PTR [rcx+0x33]
   140013cdf:	rol    DWORD PTR [rdx+0x52b35b3d],cl
   140013ce5:	mov    WORD PTR [rsi-0x2e],ss
   140013ce8:	(bad)  
   140013cec:	sub    bl,al
   140013cee:	(bad)  
   140013cef:	cmp    BYTE PTR [rsi+0x6e],0x96
   140013cf3:	(bad)  
   140013cf4:	test   al,0xf0
   140013cf6:	stos   DWORD PTR es:[rdi],eax
   140013cf7:	(bad)  
   140013cf8:	sub    al,0xcf
   140013cfa:	rex.RX add eax,0x2d63c2d0
   140013d00:	or     BYTE PTR [rbx-0x71aea60b],bh
   140013d06:	sub    cl,al
   140013d08:	jae    0x140013c9f
   140013d0a:	rex.B
   140013d0b:	repnz sbb BYTE PTR [rsi-0x5f0367b5],bh
   140013d12:	gs (bad) 
   140013d14:	in     eax,dx
   140013d15:	and    ch,ah
   140013d17:	mov    bl,0xec
   140013d19:	(bad)  
   140013d1a:	shl    al,0x8c
   140013d1d:	or     DWORD PTR [rax-0x7664fcb3],ebx
   140013d23:	pushf  
   140013d24:	sub    BYTE PTR [rbx],bl
   140013d26:	or     ah,BYTE PTR [rax]
   140013d28:	push   rdi
   140013d29:	cli    
   140013d2a:	stc    
   140013d2b:	test   eax,0x3f2cf9c8
   140013d30:	xchg   ebp,eax
   140013d31:	pop    rsi
   140013d32:	mov    edx,DWORD PTR [rsi]
   140013d34:	pop    rcx
   140013d35:	(bad)  
   140013d36:	cmc    
   140013d37:	pslld  mm6,QWORD PTR [rax+0x58]
   140013d3b:	xchg   ebx,eax
   140013d3c:	in     eax,0xed
   140013d3e:	jnp    0x140013ce9
   140013d40:	(bad)  
   140013d41:	sub    al,0xc6
   140013d43:	(bad)  
   140013d44:	(bad)  
   140013d45:	mov    ebx,0x6e5ef27a
   140013d4a:	xor    al,0x14
   140013d4c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013d4d:	cmc    
   140013d4e:	cmp    ebp,eax
   140013d50:	in     al,dx
   140013d51:	retf   
   140013d52:	xchg   ecx,eax
   140013d53:	or     DWORD PTR [rdx],ebp
   140013d55:	int    0xc8
   140013d57:	add    al,0x81
   140013d59:	ret    0x5e01
   140013d5c:	jg     0x140013d7d
   140013d5e:	mov    al,dh
   140013d60:	rex.WRX movabs rax,0x44da283f8c45b80
   140013d6a:	or     eax,esi
   140013d6c:	cdq    
   140013d6d:	inc    dh
   140013d6f:	lahf   
   140013d70:	jns    0x140013d6c
   140013d72:	(bad)  
   140013d73:	in     al,dx
   140013d74:	jmp    0x17eef8d6a
   140013d79:	je     0x140013de4
   140013d7b:	outs   dx,DWORD PTR ds:[rsi]
   140013d7c:	(bad)  
   140013d7d:	jmp    0x168e17e5e
   140013d82:	(bad)  
   140013d83:	sbb    dl,cl
   140013d85:	and    DWORD PTR [rdx+0x5b],esi
   140013d88:	lahf   
   140013d89:	push   rbx
   140013d8a:	jns    0x140013d3f
   140013d8c:	ins    DWORD PTR es:[rdi],dx
   140013d8d:	xor    al,0x8b
   140013d8f:	retf   0x89a4
   140013d92:	adc    al,0x66
   140013d94:	gs ins DWORD PTR es:[rdi],dx
   140013d96:	adc    dl,BYTE PTR [rax+0x12b2e26a]
   140013d9c:	test   ch,bh
   140013d9e:	movabs al,ds:0xb132975830ab6eb0
   140013da7:	(bad)  
   140013da9:	(bad)  
   140013daa:	cmp    DWORD PTR [rbx],edx
   140013dac:	jp     0x140013db2
   140013dae:	push   rbp
   140013daf:	(bad)  
   140013db0:	(bad)  
   140013db1:	clc    
   140013db2:	xor    al,0xb
   140013db4:	(bad)  
   140013db5:	pop    rbx
   140013db6:	(bad)  
   140013db7:	rex.RX jle 0x140013d5c
   140013dba:	or     DWORD PTR [rdx+0x3ca70288],esp
   140013dc0:	imul   ebx,DWORD PTR [rip+0x1655ead2],0x8bc3c833        # 0x15657289c
   140013dca:	es xor ah,ch
   140013dcd:	ja     0x140013e21
   140013dcf:	or     BYTE PTR [rsi-0x757ce7a3],al
   140013dd5:	mov    edx,0x160218ef
   140013dda:	rex.WRXB (bad) 
   140013ddc:	(bad)
   140013ddf:	(bad)  
   140013de0:	out    0xc1,al
   140013de2:	jmp    0x140013d64
   140013de4:	int    0x35
   140013de6:	je     0x140013d8e
   140013de8:	rex.RXB mov r9b,0xe7
   140013deb:	hlt    
   140013dec:	jae    0x140013e06
   140013dee:	cwde   
   140013def:	sbb    BYTE PTR [rbp+0x35],al
   140013df2:	(bad)  
   140013df3:	xor    DWORD PTR [rax-0x532b774e],0xc4cb3241
   140013dfd:	xchg   edx,eax
   140013dfe:	rex.R enter 0x3e8a,0x15
   140013e03:	pop    rcx
   140013e04:	cdq    
   140013e05:	(bad)  
   140013e06:	movabs eax,ds:0x81dd403a8cfcb326
   140013e0f:	ret    0x7fa
   140013e12:	imul   ebp,eax,0x1
   140013e15:	(bad)  
   140013e16:	addr32 or eax,0x823a05b0
   140013e1c:	and    eax,DWORD PTR [rbx]
   140013e1e:	(bad)
   140013e22:	pop    rsi
   140013e23:	rex.XB add spl,BYTE PTR [r8]
   140013e26:	gs not ebp
   140013e29:	ret    0x4507
   140013e2c:	add    esi,edx
   140013e2e:	push   rcx
   140013e2f:	sub    BYTE PTR [rdx-0x194ad8fb],ch
   140013e35:	mov    ecx,0x9448ffb
   140013e3a:	test   ch,bh
   140013e3c:	xlat   BYTE PTR ds:[rbx]
   140013e3d:	mov    BYTE PTR [rax-0x78],al
   140013e40:	scas   al,BYTE PTR es:[rdi]
   140013e41:	jo     0x140013ea5
   140013e43:	push   rsp
   140013e44:	hlt    
   140013e45:	movabs al,ds:0x92a86ae619410011
   140013e4e:	lock js 0x140013e0c
   140013e51:	movabs ds:0xa3c8e113f6dffb00,al
   140013e5a:	stos   BYTE PTR es:[rdi],al
   140013e5b:	test   eax,0x2b8e1ed1
   140013e60:	xchg   esp,eax
   140013e61:	xor    BYTE PTR [rdi+0x6f8d9c0c],dl
   140013e67:	rcr    DWORD PTR [rsi+0x26b5fc8a],1
   140013e6d:	sub    BYTE PTR [rcx-0x16],bl
   140013e70:	(bad)  
   140013e71:	xor    al,0x92
   140013e73:	(bad)  
   140013e74:	and    al,0x40
   140013e76:	rex.WR
   140013e77:	repz fsubr QWORD PTR [rcx]
   140013e7a:	or     DWORD PTR [rdx+0x62b386e2],ecx
   140013e80:	sar    DWORD PTR [rsi+0x15ef3e80],1
   140013e86:	adc    ebx,ebp
   140013e88:	in     al,0x75
   140013e8a:	push   rsp
   140013e8b:	jmp    0x140013e52
   140013e8d:	rex.W sub BYTE PTR [rcx-0x60fe6ac0],cl
   140013e94:	in     al,dx
   140013e95:	pop    rsp
   140013e96:	sub    BYTE PTR [rbx],ah
   140013e98:	rex.X in al,0xb4
   140013e9b:	addr32 (bad) 
   140013e9d:	jne    0x140013e9e
   140013e9f:	repnz fwait
   140013ea1:	sbb    BYTE PTR [rcx+0x14605c3],bl
   140013ea7:	pop    rcx
   140013ea8:	fwait
   140013ea9:	rex.W sahf 
   140013eab:	mov    cl,0x2
   140013ead:	(bad)  
   140013eae:	je     0x140013ed1
   140013eb0:	pushf  
   140013eb1:	and    BYTE PTR [rbx+0x63d1a981],0xd3
   140013eb8:	lahf   
   140013eb9:	std    
   140013eba:	sbb    edi,0xfffffff9
   140013ebd:	lea    ebp,[rcx+0x32ffa3b1]
   140013ec3:	xor    eax,0x285da8cd
   140013ec8:	ror    eax,0x30
   140013ecb:	mov    bl,0xb8
   140013ecd:	in     al,0x37
   140013ecf:	outs   dx,DWORD PTR ds:[rsi]
   140013ed0:	not    bl
   140013ed2:	push   rdi
   140013ed3:	(bad)  
   140013ed5:	mov    DWORD PTR [rbp-0x7cdbe9ae],edx
   140013edb:	enter  0x7129,0xe1
   140013edf:	pop    rax
   140013ee0:	rcr    DWORD PTR [rsi],0x8d
   140013ee3:	and    ecx,DWORD PTR [rip+0x50000be7]        # 0x190014ad0
   140013ee9:	xchg   ebx,eax
   140013eea:	cld    
   140013eeb:	jl     0x140013ea3
   140013eed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013eee:	mov    dil,0x4
   140013ef1:	scas   eax,DWORD PTR es:[rdi]
   140013ef2:	sbb    DWORD PTR [rax-0x32],eax
   140013ef5:	sub    BYTE PTR [rsp+rbx*4],cl
   140013ef8:	and    DWORD PTR [rip+0x621b6120],edi        # 0x1a21ca01e
   140013efe:	rex.WB int 0x15
   140013f01:	xchg   esp,eax
   140013f02:	(bad)  
   140013f03:	lods   eax,DWORD PTR ds:[rsi]
   140013f04:	loop   0x140013f1d
   140013f06:	sbb    eax,DWORD PTR [rcx-0x2e]
   140013f09:	adc    DWORD PTR [rip+0x190adfcf],ebp        # 0x1590c1ede
   140013f0f:	sbb    DWORD PTR [rdx],edi
   140013f11:	sbb    DWORD PTR [rax+0x69],0x9b42344f
   140013f18:	xchg   DWORD PTR [rax-0x3d4ef042],eax
   140013f1e:	fcmovbe st,st(4)
   140013f20:	rex.WB cmp al,0xb1
   140013f23:	(bad)  
   140013f24:	(bad)  
   140013f25:	jmp    0x10504350a
   140013f2a:	(bad)  
   140013f2b:	es mov al,0x6b
   140013f2e:	cli    
   140013f2f:	cmp    BYTE PTR [rsi],al
   140013f31:	data16 (bad) 
   140013f33:	push   rcx
   140013f34:	int    0x4f
   140013f36:	and    ebp,DWORD PTR [rsi+0x893812e]
   140013f3c:	mov    edi,0x8b16a4c
   140013f41:	adc    eax,0x12f8b691
   140013f46:	loope  0x140013ed7
   140013f48:	pop    rdx
   140013f49:	jrcxz  0x140013f7a
   140013f4b:	add    eax,0x9cd8f240
   140013f50:	and    eax,0xe7b3c0d2
   140013f55:	rex.WXB test al,0xd5
   140013f58:	(bad)  
   140013f59:	or     dh,BYTE PTR [rbx-0x53]
   140013f5c:	lea    esi,[rdi-0x20]
   140013f5f:	(bad)  
   140013f60:	(bad)  
   140013f61:	loopne 0x140013f8f
   140013f63:	pop    rsp
   140013f64:	shr    DWORD PTR [rax+rdi*2-0x130a934],0xf7
   140013f6c:	lods   al,BYTE PTR ds:[rsi]
   140013f6d:	(bad)  
   140013f6e:	sub    al,dl
   140013f70:	mov    ebp,DWORD PTR [rdx+0x42160850]
   140013f76:	test   bl,bh
   140013f78:	(bad)
   140013f7b:	rcr    DWORD PTR [rax],0x32
   140013f7e:	shr    ebx,1
   140013f80:	(bad)  
   140013f81:	bnd jl 0x140013f88
   140013f84:	sub    bh,BYTE PTR [rsi]
   140013f86:	hlt    
   140013f87:	rol    BYTE PTR [rbp-0x52],1
   140013f8a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013f8b:	xor    bl,al
   140013f8d:	(bad)  
   140013f8e:	iret   
   140013f8f:	sar    DWORD PTR [rdi],1
   140013f91:	hlt    
   140013f92:	xlat   BYTE PTR ds:[rbx]
   140013f93:	pop    rcx
   140013f94:	lock rex.WXB not QWORD PTR [r10-0x41b23fed]
   140013f9c:	pop    rsi
   140013f9d:	sti    
   140013f9e:	rex.XB jno 0x140013fa9
   140013fa1:	cmp    DWORD PTR [rdx-0x57c69ac3],esi
   140013fa7:	sub    DWORD PTR [rdx],esp
   140013fa9:	mov    bh,0x4c
   140013fab:	sahf   
   140013fac:	adc    DWORD PTR [rax],ecx
   140013fae:	pop    QWORD PTR [rcx+rbx*8-0xd4d46f3]
   140013fb5:	mov    cl,0x2f
   140013fb7:	iret   
   140013fb8:	xchg   edi,eax
   140013fb9:	out    dx,eax
   140013fba:	fwait
   140013fbb:	or     BYTE PTR [rdx-0x79a5ea64],bl
   140013fc1:	int    0xef
   140013fc3:	(bad)  
   140013fc4:	lahf   
   140013fc5:	sub    edi,DWORD PTR [rcx+0x11c7b391]
   140013fcb:	add    BYTE PTR [rbx],0x37
   140013fce:	icebp  
   140013fcf:	fcomp  QWORD PTR [rbp+0x2e3bf428]
   140013fd5:	rcl    dh,1
   140013fd7:	ds push rax
   140013fd9:	pop    rbx
   140013fda:	or     DWORD PTR [rsi+rbp*1+0x55803ac1],edx
   140013fe1:	add    BYTE PTR [rbx-0x700c00a1],ch
   140013fe7:	fdivrp st(7),st
   140013fe9:	(bad)  
   140013fea:	std    
   140013feb:	pop    rdi
   140013fec:	sti    
   140013fed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140013fee:	sbb    ebp,DWORD PTR [rbx-0xe9a8055]
   140013ff4:	cmc    
   140013ff5:	(bad)  
   140013ff6:	pop    rsp
   140013ff7:	and    BYTE PTR [rax+0x479f7775],bh
   140013ffd:	movabs eax,ds:0x1b50fdc00b331a1
   140014006:	or     BYTE PTR [rsi],ah
   140014008:	cmp    edx,0x466f16c3
   14001400e:	cdq    
   14001400f:	gs rex.RB
   140014011:	rex.WX movabs rcx,0x4daae02e8b21609f
   14001401b:	sub    eax,0x42f94fee
   140014020:	repnz icebp 
   140014022:	pop    rdx
   140014023:	push   rdi
   140014024:	lods   eax,DWORD PTR ds:[rsi]
   140014025:	xchg   esi,eax
   140014026:	sahf   
   140014027:	xchg   ebx,eax
   140014028:	or     al,BYTE PTR [rdi-0x6e067ff4]
   14001402e:	ins    BYTE PTR es:[rdi],dx
   14001402f:	push   rsi
   140014030:	pop    rsp
   140014031:	scas   al,BYTE PTR es:[rdi]
   140014032:	mov    edx,0xa3ec4098
   140014037:	rex.RX cli 
   140014039:	jbe    0x140014006
   14001403b:	cwde   
   14001403c:	mov    dh,0x14
   14001403e:	push   rsp
   14001403f:	test   al,0x6a
   140014041:	xor    al,0xb3
   140014043:	adc    edi,DWORD PTR [rax+0x66]
   140014046:	jp     0x140014056
   140014048:	mov    bl,0x87
   14001404a:	outs   dx,BYTE PTR ds:[rsi]
   14001404b:	rex push rbp
   14001404d:	jne    0x140013fdf
   14001404f:	xchg   esi,eax
   140014050:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014051:	xor    BYTE PTR [rbx+rsi*2],dh
   140014054:	or     al,0x3b
   140014056:	addr32 rex.WRX mov al,ds:0x5c449b9e
   14001405d:	xchg   ecx,eax
   14001405e:	rex.X (bad) 
   140014060:	movabs al,ds:0xfee24047fad43d70
   140014069:	(bad)  
   14001406a:	(bad)  
   14001406b:	repnz icebp 
   14001406d:	(bad)  
   14001406e:	mov    edi,0x9bf0b21
   140014073:	jo     0x1400140e0
   140014075:	and    ah,BYTE PTR [rdx+0x2ca46b8]
   14001407b:	pop    rdx
   14001407c:	pop    rsp
   14001407d:	stos   BYTE PTR es:[rdi],al
   14001407e:	out    dx,eax
   14001407f:	push   0x6ce19fc2
   140014084:	test   ch,0x43
   140014087:	enter  0x6ff7,0x28
   14001408b:	rex.XB jle 0x1400140b8
   14001408e:	mov    al,ch
   140014090:	pop    rdx
   140014091:	jae    0x140014100
   140014093:	sub    eax,0x5732ca2a
   140014098:	mov    WORD PTR [rbx+0x21],es
   14001409b:	mov    ch,ah
   14001409d:	and    BYTE PTR [rdx+0x2fa18b5d],dl
   1400140a3:	jmp    FWORD PTR [rdx]
   1400140a5:	mov    ebx,0x10edbc04
   1400140aa:	rex.RB pushf 
   1400140ac:	(bad)  
   1400140ad:	in     eax,dx
   1400140ae:	loope  0x140014066
   1400140b0:	sti    
   1400140b1:	outs   dx,BYTE PTR ds:[rsi]
   1400140b2:	rex.WRXB add r14,QWORD PTR [r14-0x10281e79]
   1400140b9:	cmp    ebx,ebx
   1400140bb:	cwde   
   1400140bc:	sti    
   1400140bd:	adc    eax,0x6ad52170
   1400140c2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400140c3:	int    0x2d
   1400140c5:	sub    bl,dl
   1400140c7:	ds leave 
   1400140c9:	mov    edx,0xc7615125
   1400140ce:	mov    dl,0xea
   1400140d0:	shr    BYTE PTR [rbx-0x3956182c],cl
   1400140d6:	je     0xd4147f2c
   1400140dc:	neg    DWORD PTR [rdi-0x13fbfe51]
   1400140e2:	rol    esi,0xf
   1400140e5:	movabs ds:0x16ebdf827ad7bc5d,eax
   1400140ee:	mov    bh,0x7d
   1400140f0:	shl    BYTE PTR [rsi+0x9],cl
   1400140f3:	in     al,dx
   1400140f4:	cli    
   1400140f5:	(bad)
   1400140f9:	rex.WRX sahf 
   1400140fb:	pop    rax
   1400140fc:	cmp    dl,dh
   1400140fe:	lock sbb DWORD PTR [rdi+0x55e57fdd],0xfffffff3
   140014106:	popf   
   140014107:	fidivr WORD PTR [rsi-0x48576665]
   14001410d:	mov    ah,0x8b
   14001410f:	jle    0x140014102
   140014111:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014112:	rex.WB
   140014113:	rex.R shl spl,1
   140014116:	pop    rdi
   140014117:	adc    eax,0xfe189b4c
   14001411c:	sbb    esi,edx
   14001411e:	je     0x1400140ba
   140014120:	(bad)  
   140014121:	sub    BYTE PTR [rdx],dh
   140014123:	in     eax,0xd4
   140014125:	(bad)  
   140014126:	rex or edx,eax
   140014129:	push   rsp
   14001412a:	movabs ds:0x900dd07580184309,al
   140014133:	cld    
   140014134:	mov    WORD PTR [rsi+0x33],es
   140014137:	fisub  DWORD PTR [rdx-0x77a3e97b]
   14001413d:	in     eax,0xb7
   14001413f:	xor    eax,0x2162d7d4
   140014144:	adc    cl,BYTE PTR [rcx+0x57]
   140014147:	(bad)  
   140014148:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014149:	jb     0x140014171
   14001414b:	mov    ecx,0x6301b779
   140014150:	test   BYTE PTR [rdi+rbx*8+0x18],ah
   140014154:	(bad)  
   140014155:	loope  0x140014167
   140014157:	add    BYTE PTR [rsi-0x52efbfb9],dl
   14001415d:	(bad)  
   14001415e:	test   DWORD PTR [rax+0x9],ecx
   140014161:	movabs eax,ds:0x86313d1c19c581aa
   14001416a:	mov    cl,0x4b
   14001416c:	pop    rsi
   14001416d:	mov    edi,DWORD PTR [rdx+0x60]
   140014170:	(bad)  
   140014171:	shr    dl,cl
   140014173:	sbb    al,0x6
   140014175:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014176:	mov    fs,WORD PTR [rdx-0x31]
   140014179:	test   eax,0x753bd0e7
   14001417e:	adc    dl,ch
   140014180:	fcom   QWORD PTR [rdx+rax*8]
   140014183:	fisub  DWORD PTR [rdx-0xd2f06cc]
   140014189:	xor    ebx,DWORD PTR [rcx-0x2c]
   14001418c:	and    esp,DWORD PTR [rax+0x45fc4ca6]
   140014192:	add    ch,BYTE PTR [rdx+0x6a]
   140014195:	xchg   esp,eax
   140014196:	(bad)  
   140014197:	shr    BYTE PTR [rax],1
   140014199:	add    ch,ah
   14001419b:	xchg   ebp,eax
   14001419c:	jge    0x140014141
   14001419e:	rex.B jg 0x140014124
   1400141a1:	xchg   esp,eax
   1400141a2:	shr    DWORD PTR [rsi+rsi*4+0x73b57842],1
   1400141a9:	xchg   ecx,eax
   1400141aa:	mov    dl,0x60
   1400141ac:	mov    ebx,0xfdac8ee5
   1400141b1:	(bad)  
   1400141b2:	test   al,0x15
   1400141b4:	fisubr WORD PTR [rdx+0x35]
   1400141b7:	not    ah
   1400141b9:	or     DWORD PTR [rsi],ebp
   1400141bb:	mov    al,0x3e
   1400141bd:	out    dx,eax
   1400141be:	(bad)  
   1400141bf:	(bad)  
   1400141c0:	test   esp,eax
   1400141c2:	(bad)  
   1400141c3:	pop    rax
   1400141c4:	mov    edx,0x3ff05a8a
   1400141c9:	test   al,ah
   1400141cb:	test   BYTE PTR [rdx+0x55],ah
   1400141ce:	or     DWORD PTR [rcx],edi
   1400141d0:	sbb    DWORD PTR [rbx-0x69977360],eax
   1400141d6:	shl    dl,cl
   1400141d8:	or     DWORD PTR [rdx],eax
   1400141da:	test   BYTE PTR [rsp+rcx*1],al
   1400141dd:	stos   BYTE PTR es:[rdi],al
   1400141de:	test   DWORD PTR [rax-0xa],ecx
   1400141e1:	(bad)  
   1400141e2:	(bad)  
   1400141e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400141e4:	test   eax,esi
   1400141e6:	adc    eax,0x6d19396
   1400141eb:	xchg   ecx,eax
   1400141ec:	push   0xb
   1400141ee:	in     al,0x35
   1400141f0:	ins    BYTE PTR es:[rdi],dx
   1400141f1:	pop    rdi
   1400141f2:	fwait
   1400141f3:	addr32 jns 0x14001421d
   1400141f6:	and    eax,DWORD PTR [rcx]
   1400141f8:	int    0x1c
   1400141fa:	xor    BYTE PTR [rbx-0x5aa8f1e5],dl
   140014200:	or     esi,ecx
   140014202:	and    eax,0x2c001af8
   140014207:	enter  0x55,0xb
   14001420b:	cmp    ecx,eax
   14001420d:	int    0xc5
   14001420f:	mov    ah,0xf0
   140014211:	jg     0x1400141cf
   140014213:	sub    BYTE PTR [rsp+rsi*4],ch
   140014216:	scas   al,BYTE PTR es:[rdi]
   140014217:	int    0x39
   140014219:	(bad)  
   14001421a:	(bad)  
   14001421b:	cmp    ah,al
   14001421d:	jnp    0x1400141e9
   14001421f:	fs rex.B
   140014221:	rex.X loopne 0x1400141d8
   140014224:	out    0x1a,eax
   140014226:	pop    rdx
   140014227:	stc    
   140014228:	int3   
   140014229:	xchg   edi,eax
   14001422a:	mov    al,0x67
   14001422c:	add    ah,BYTE PTR [rsi+0x21]
   14001422f:	sbb    BYTE PTR cs:[rbx],0x70
   140014233:	jbe    0x14001425d
   140014235:	jno    0x14001429d
   140014237:	xor    al,0xe0
   140014239:	movabs eax,ds:0x8f93fe5fcb34d4c2
   140014242:	cld    
   140014243:	(bad)  
   140014244:	fcom   DWORD PTR [rbx-0x391b0271]
   14001424a:	cli    
   14001424b:	(bad)  
   14001424c:	mov    bh,0x45
   14001424e:	jne    0x140014236
   140014250:	or     eax,DWORD PTR [rsi]
   140014252:	or     dh,BYTE PTR [rsi]
   140014254:	shl    DWORD PTR [rsi],cl
   140014256:	and    eax,DWORD PTR [rip+0xffffffff876554b7]        # 0xc7669713
   14001425c:	pop    rdi
   14001425d:	push   rbx
   14001425e:	es fs sub ax,0xa144
   140014264:	add    cl,BYTE PTR [rax+rax*4-0x7c]
   140014268:	(bad)  
   140014269:	sub    DWORD PTR [rdi+0x11e7ad7],esp
   14001426f:	mov    bl,0xc2
   140014271:	jl     0x1400142ec
   140014273:	sub    eax,0xc63b4ffc
   140014278:	outs   dx,DWORD PTR ds:[rsi]
   140014279:	ret    0x96f
   14001427c:	push   r9
   14001427e:	iret   
   14001427f:	push   rsp
   140014280:	ss and ecx,ebp
   140014283:	leave  
   140014284:	shr    ch,0xdf
   140014287:	ins    BYTE PTR es:[rdi],dx
   140014288:	push   rbx
   140014289:	mov    ch,0xbc
   14001428b:	rex.RB or eax,0x835a49eb
   140014291:	(bad)  
   140014292:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014293:	retf   0xd62
   140014296:	pop    rdx
   140014297:	pop    rbp
   140014298:	sar    al,0xd8
   14001429b:	mov    bl,0x38
   14001429d:	mov    edx,0xa1c43af7
   1400142a2:	add    esp,eax
   1400142a4:	lea    eax,[rbp-0xc]
   1400142a7:	int3   
   1400142a8:	sahf   
   1400142a9:	ror    al,0xd4
   1400142ac:	xor    esp,esi
   1400142ae:	int    0x9e
   1400142b0:	rex.RX pop rsp
   1400142b2:	pushf  
   1400142b3:	pop    r8
   1400142b5:	pop    rbx
   1400142b6:	add    ah,BYTE PTR [rdi+0x1de69075]
   1400142bc:	adc    bl,ch
   1400142be:	adc    dl,dl
   1400142c0:	nop
   1400142c1:	test   BYTE PTR [rdi-0x552dad6],bl
   1400142c7:	mov    bl,0x1a
   1400142c9:	jg     0x140014299
   1400142cb:	jle    0x140014285
   1400142cd:	repnz movabs al,ds:0x2753612d85686a23
   1400142d8:	sub    esp,DWORD PTR [rcx-0x227ff74]
   1400142de:	mov    dl,0x36
   1400142e0:	mov    esp,0xd903842c
   1400142e5:	sub    dl,BYTE PTR [rdx+0x24b9f4fa]
   1400142eb:	mov    eax,0x62841640
   1400142f0:	mov    ch,0x9c
   1400142f2:	nop
   1400142f3:	(bad)  
   1400142f4:	sbb    ecx,DWORD PTR [rax]
   1400142f6:	gs call 0x1253739cf
   1400142fc:	(bad)  
   1400142fd:	call   0x19bdc67af
   140014302:	(bad)  
   140014304:	stos   DWORD PTR es:[rdi],eax
   140014305:	xor    eax,0xb6168ad9
   14001430a:	pop    rdx
   14001430b:	(bad)  
   14001430c:	(bad)  
   14001430d:	imul   DWORD PTR [rbp+0x9]
   140014310:	(bad)  
   140014311:	outs   dx,BYTE PTR ds:[rsi]
   140014312:	mov    ebp,0xf927bdb9
   140014317:	(bad)  
   140014319:	add    ebx,edi
   14001431b:	(bad)  
   14001431c:	rex.WXB icebp 
   14001431e:	cli    
   14001431f:	or     eax,0xfd4b05c8
   140014324:	test   dh,bl
   140014326:	adc    BYTE PTR [rbx+rsi*2-0x77370810],dl
   14001432d:	xchg   DWORD PTR [rsp+rax*1-0x4],ebx
   140014331:	add    esp,DWORD PTR [rdx]
   140014333:	fwait
   140014334:	adc    ebp,esp
   140014336:	rex.RB fldenv [r13-0x54c70070]
   14001433d:	or     BYTE PTR [rcx+rbp*4-0x2d],ch
   140014341:	loopne 0x140014360
   140014343:	xlat   BYTE PTR ds:[rbx]
   140014344:	icebp  
   140014345:	loop   0x1400143c2
   140014347:	jno    0x1400142ca
   140014349:	push   rbx
   14001434a:	xor    DWORD PTR [rdi+0x3b728023],0x3b
   140014351:	rex.B push 0xfffffffffa7cffa5
   140014357:	mov    ecx,0x4c2f4f67
   14001435c:	rex.WRB jl 0x1400143d9
   14001435f:	in     al,0xe0
   140014361:	and    eax,0x77dbdd55
   140014366:	and    ecx,DWORD PTR [rax-0x56]
   140014369:	call   FWORD PTR [rbx-0x66]
   14001436c:	push   rdi
   14001436d:	xor    eax,0xa5fb4e69
   140014372:	pushf  
   140014373:	cmp    edi,DWORD PTR [rsi-0x594a9c9b]
   140014379:	rex.WRX
   14001437a:	lock cdq 
   14001437c:	push   rbp
   14001437d:	rex.WRX pop rsi
   14001437f:	add    ebp,eax
   140014381:	sbb    bl,dh
   140014383:	mov    edx,0x84306b1
   140014388:	add    BYTE PTR [rdx],dl
   14001438a:	add    eax,0xb68829af
   14001438f:	pop    rax
   140014390:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014391:	(bad)  
   140014392:	mov    dl,0xa1
   140014394:	mov    DWORD PTR [rdx+0x18831fc5],ebx
   14001439a:	ins    DWORD PTR es:[rdi],dx
   14001439b:	add    al,0x24
   14001439d:	adc    DWORD PTR [rax+rax*8],edi
   1400143a0:	sub    eax,0x33835b8
   1400143a5:	mov    dl,0x62
   1400143a7:	xchg   edx,eax
   1400143a8:	loope  0x1400143f2
   1400143aa:	(bad)  
   1400143ab:	mov    ecx,0xe797f7c8
   1400143b0:	sub    eax,0x38003239
   1400143b5:	add    al,0x54
   1400143b7:	fnsave [rip+0x18fb3f4c]        # 0x158fc8309
   1400143bd:	sahf   
   1400143be:	sbb    BYTE PTR [rcx+0x3affb402],bh
   1400143c4:	test   ch,cl
   1400143c6:	adc    eax,0x7638ecd0
   1400143cb:	rex.WRXB
   1400143cc:	xchg   DWORD PTR ds:[rbp+0x67a8a313],ebx
   1400143d3:	rex.WRXB and r13,QWORD PTR [r14]
   1400143d6:	(bad)  
   1400143d7:	add    ebx,ebp
   1400143d9:	gs cmp eax,0xfd25267
   1400143df:	test   al,0x10
   1400143e1:	push   rax
   1400143e2:	(bad)  
   1400143e3:	rex.X lods eax,DWORD PTR ds:[rsi]
   1400143e5:	popf   
   1400143e6:	jle    0x14001438c
   1400143e8:	(bad)  
   1400143e9:	jg     0x14001445d
   1400143eb:	and    eax,0x53b6c550
   1400143f0:	push   0x39023be1
   1400143f5:	mov    DWORD PTR [rsi],edx
   1400143f7:	cwde   
   1400143f8:	jl     0x140014383
   1400143fa:	scas   eax,DWORD PTR es:[rdi]
   1400143fb:	movabs al,ds:0x288ad0c028163656
   140014404:	adc    BYTE PTR [rbp-0xa57ce3c],dh
   14001440a:	cmovp  ecx,esi
   14001440d:	sbb    ecx,edi
   14001440f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014410:	movabs eax,ds:0xd4e53aadced2523b
   140014419:	pop    rdi
   14001441a:	xor    dh,BYTE PTR [rax+riz*1]
   14001441d:	(bad)  
   14001441e:	mov    eax,0xdefc410a
   140014423:	add    dh,BYTE PTR [rcx]
   140014425:	rex.R mov ebp,0x9d032336
   14001442b:	sbb    esi,DWORD PTR [rax]
   14001442d:	retf   
   14001442e:	(bad)  
   14001442f:	int3   
   140014430:	loop   0x1400143fd
   140014432:	vpmulhw xmm2,xmm8,xmm7
   140014436:	es xchg ah,ah
   140014439:	mov    DWORD PTR [rbx],ecx
   14001443b:	push   rax
   14001443c:	xor    al,0x20
   14001443e:	xlat   BYTE PTR ds:[rbx]
   14001443f:	ficom  DWORD PTR [rsi-0x25]
   140014442:	ss jg  0x14001444f
   140014445:	stos   DWORD PTR es:[rdi],eax
   140014446:	out    dx,al
   140014447:	pop    rdi
   140014448:	adc    eax,0x3146c7da
   14001444d:	xor    edx,esi
   14001444f:	cmp    ah,BYTE PTR [rsi-0x66df1b1c]
   140014455:	(bad)  
   140014456:	(bad)  
   140014457:	xor    dl,al
   140014459:	and    eax,0xce4190c1
   14001445e:	out    0x6f,eax
   140014460:	adc    DWORD PTR [rax-0x1b8943ac],eax
   140014466:	(bad)  
   140014467:	xchg   ecx,eax
   140014468:	cs jne 0x1400144a2
   14001446b:	or     eax,esp
   14001446d:	fwait
   14001446e:	movabs ds:0x50061d22b2e51906,eax
   140014477:	xor    DWORD PTR [rdi+0x4e],0x51
   14001447b:	iret   
   14001447c:	lahf   
   14001447d:	(bad)  
   14001447e:	mov    eax,DWORD PTR [rcx-0x3741d814]
   140014484:	(bad)  
   140014485:	loopne 0x1400144fa
   140014487:	sub    eax,DWORD PTR [rax]
   140014489:	fcmovne st,st(6)
   14001448b:	(bad)  
   14001448c:	and    eax,0x65780048
   140014491:	jle    0x140014501
   140014493:	std    
   140014494:	call   0x1bd7f545c
   140014499:	clc    
   14001449a:	loopne 0x14001445d
   14001449c:	(bad)  
   14001449d:	jnp    0x1400144a5
   14001449f:	jbe    0x14001445d
   1400144a1:	mov    es,WORD PTR [rdx+0x18]
   1400144a4:	icebp  
   1400144a5:	(bad)  
   1400144a6:	or     ebp,edx
   1400144a8:	lods   al,BYTE PTR ds:[rsi]
   1400144a9:	lock mov edi,?
   1400144ac:	or     al,0x7b
   1400144ae:	mov    al,cl
   1400144b0:	(bad)  
   1400144b1:	xchg   bl,bh
   1400144b3:	or     DWORD PTR [r14],r14d
   1400144b6:	test   al,0x7a
   1400144b8:	out    0x29,eax
   1400144ba:	jns    0x1400144d2
   1400144bc:	movabs ds:0x685f79c4c9172659,al
   1400144c5:	rcl    DWORD PTR [rdx],cl
   1400144c7:	add    al,BYTE PTR [rdx+0x12]
   1400144ca:	repnz (bad) 
   1400144cc:	cdq    
   1400144cd:	push   rbp
   1400144ce:	movabs ds:0x6397a9cb61d46c5c,al
   1400144d7:	rex.R xor al,0x6a
   1400144da:	fnstenv [rbp+riz*4-0x6fe5cde7]
   1400144e1:	leave  
   1400144e2:	xchg   ebx,eax
   1400144e3:	repnz mov ebp,0xa181ee14
   1400144e9:	push   rax
   1400144ea:	jo     0x14001448a
   1400144ec:	push   0xffffffffa021657e
   1400144f1:	(bad)  
   1400144f2:	(bad)  
   1400144f3:	rcl    BYTE PTR [rbx-0x14e1df1],cl
   1400144f9:	std    
   1400144fa:	call   0x1822ec31d
   1400144ff:	fiadd  DWORD PTR [rdi+rbp*1]
   140014502:	rex.WR (bad) 
   140014504:	push   0x4d7608ea
   140014509:	sbb    al,0x45
   14001450b:	addr32 jp 0x14001452a
   14001450e:	jno    0x140014571
   140014510:	(bad)  
   140014511:	(bad)  
   140014512:	jae    0x14001451d
   140014514:	pushf  
   140014515:	mov    edx,0xdf54b0
   14001451a:	movabs al,ds:0x84fdb960af9dc926
   140014523:	or     cl,BYTE PTR [rbp+0x5d81fa64]
   140014529:	clc    
   14001452a:	fstp   QWORD PTR [rsp+rax*1]
   14001452d:	push   0xffffffffef9c8db3
   140014532:	rex.WRXB xchg r8,rax
   140014534:	adc    eax,0xe58d0081
   140014539:	xor    esi,DWORD PTR [rsp+rax*2-0x582ecd69]
   140014540:	in     eax,dx
   140014541:	scas   eax,DWORD PTR es:[rdi]
   140014542:	add    ecx,eax
   140014544:	rcr    DWORD PTR [rax+0x850ff43],0x3e
   14001454b:	xchg   ecx,eax
   14001454c:	xchg   eax,esi
   14001454e:	(bad)  
   14001454f:	test   BYTE PTR [rax+0x54cc26fa],dh
   140014555:	(bad)  
   140014556:	dec    DWORD PTR [rbx]
   140014558:	(bad)  
   140014559:	rcr    DWORD PTR [rdi+rax*1-0x71],0xff
   14001455e:	(bad)  
   14001455f:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014561:	rex.WX and rax,rsp
   140014564:	ror    ch,cl
   140014566:	adc    BYTE PTR [rax-0x1b],cl
   140014569:	xchg   esi,eax
   14001456a:	rcl    DWORD PTR [rax+0x45],cl
   14001456d:	sar    DWORD PTR [rax],0xa
   140014570:	ja     0x140014518
   140014572:	or     dl,al
   140014574:	sub    eax,0xa172616c
   140014579:	ret    0x6e2
   14001457c:	movabs ds:0xe62e5f1a56fa0a4d,al
   140014585:	movabs al,ds:0x43970dc104571c59
   14001458e:	stc    
   14001458f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014590:	and    DWORD PTR [rbp-0x32],eax
   140014593:	enter  0x5596,0x1
   140014597:	pop    rax
   140014598:	xor    al,0x80
   14001459a:	xchg   ebx,eax
   14001459b:	sub    al,BYTE PTR [rdx]
   14001459d:	lea    edx,[rdx-0x7]
   1400145a0:	out    0x7a,eax
   1400145a2:	cmp    al,0x99
   1400145a4:	pop    rbx
   1400145a5:	out    0xf9,al
   1400145a7:	(bad)  
   1400145a8:	push   rdx
   1400145a9:	loopne 0x1400145dd
   1400145ab:	movabs eax,ds:0xfb84277e860b806e
   1400145b4:	mov    esi,0xcafdd091
   1400145b9:	(bad)  
   1400145ba:	mov    cl,0xef
   1400145bc:	sub    BYTE PTR [rsi],ch
   1400145be:	push   rax
   1400145bf:	xor    al,0xe0
   1400145c1:	stc    
   1400145c2:	sub    DWORD PTR [rax],eax
   1400145c4:	loopne 0x140014642
   1400145c6:	push   0xffffffffc9f00180
   1400145cb:	(bad)  
   1400145cc:	(bad)  
   1400145cd:	(bad)  
   1400145ce:	fidiv  DWORD PTR [rbx+rdi*4-0x61]
   1400145d2:	fstp   TBYTE PTR [rcx-0x45612099]
   1400145d8:	sar    DWORD PTR [rcx-0x6b],cl
   1400145db:	sub    esi,DWORD PTR [rdi]
   1400145dd:	mov    ebp,0x63a5f241
   1400145e2:	mov    ecx,0x1284d650
   1400145e7:	xchg   DWORD PTR [rdi-0x695e06a],edx
   1400145ed:	sub    eax,0x58c540b2
   1400145f2:	cdq    
   1400145f3:	ret    0x8130
   1400145f6:	and    al,0x48
   1400145f8:	call   0xf4ad3cbf
   1400145fd:	fistp  WORD PTR [rsi+0x50]
   140014600:	jmp    0xf5d09b69
   140014605:	repnz add ch,BYTE PTR [rdi+riz*4+0x10379a0d]
   14001460d:	xchg   ecx,eax
   14001460e:	test   DWORD PTR [rbx-0x6c],ebx
   140014611:	mov    bh,0x76
   140014613:	add    DWORD PTR [rdx+0x23],esp
   140014616:	or     al,0x49
   140014618:	movabs eax,ds:0xb3b9ca6e6c2044bf
   140014621:	out    0x36,al
   140014623:	and    dh,BYTE PTR [rcx]
   140014625:	add    bl,BYTE PTR [rax+0x7e]
   140014628:	out    0x61,al
   14001462a:	cmp    al,0x19
   14001462c:	cli    
   14001462d:	mov    cl,0x76
   14001462f:	vpsubsb ymm14,ymm10,YMMWORD PTR [rax]
   140014633:	movabs ds:0x73d863d31d8d34bb,eax
   14001463c:	cli    
   14001463d:	pop    rcx
   14001463e:	hlt    
   14001463f:	rex.WRX lahf 
   140014641:	rex.X pushf 
   140014643:	lahf   
   140014644:	rex.X pop rsp
   140014646:	(bad)  
   140014647:	mov    edi,0xe58e525f
   14001464c:	jle    0x140014678
   14001464e:	adc    BYTE PTR [rdx-0x5843daf0],ch
   140014654:	lods   al,BYTE PTR ds:[rsi]
   140014655:	jg     0x1400145e4
   140014657:	(bad)  
   140014658:	ror    edx,1
   14001465a:	jle    0x14001465f
   14001465c:	push   rsp
   14001465d:	adc    DWORD PTR [rax+rbp*2+0x6d],esp
   140014661:	and    DWORD PTR [rdi-0x5a017f00],edi
   140014667:	mov    edi,0x2103afef
   14001466c:	jb     0x140014637
   14001466e:	(bad)  
   14001466f:	(bad)  
   140014670:	ds mov esp,0xd108520a
   140014676:	adc    ecx,DWORD PTR [rax+0x430a85a2]
   14001467c:	data16 cld 
   14001467e:	movsxd ecx,eax
   140014680:	(bad)  
   140014681:	lahf   
   140014682:	rex.X pop rcx
   140014684:	call   0x163f99fcc
   140014689:	and    DWORD PTR [rax-0x73aafd90],edx
   14001468f:	sahf   
   140014690:	rex.R push rsp
   140014692:	test   eax,0x27df022
   140014697:	and    DWORD PTR [rsi+0x78],eax
   14001469a:	jg     0x14001465e
   14001469c:	(bad)  
   14001469d:	(bad)  
   14001469e:	mov    ebp,0x84168022
   1400146a3:	(bad)  
   1400146a4:	movabs eax,ds:0xe52c9d50f16d1a85
   1400146ad:	jg     0x140014648
   1400146af:	push   rax
   1400146b0:	cs ds retf 
   1400146b3:	(bad)  
   1400146b4:	fbld   TBYTE PTR [rsi+0xb]
   1400146b7:	gs rex.W scas al,BYTE PTR es:[rdi]
   1400146ba:	rex.X
   1400146bb:	rex.WRXB
   1400146bc:	pushw  0x21
   1400146bf:	add    eax,0x9bdec13f
   1400146c4:	sti    
   1400146c5:	ret    
   1400146c6:	and    al,0xab
   1400146c8:	mov    gs,ecx
   1400146ca:	fdiv   QWORD PTR [rbx+0x57]
   1400146cd:	(bad)  
   1400146ce:	pop    rdi
   1400146cf:	sub    ebp,DWORD PTR [edi]
   1400146d2:	shr    DWORD PTR [rbp+0x38c05a88],cl
   1400146d8:	add    dh,dl
   1400146da:	jrcxz  0x1400146f1
   1400146dc:	jns    0x1400146ec
   1400146de:	in     eax,0xc5
   1400146e0:	cdq    
   1400146e1:	rex.WR clc 
   1400146e3:	test   ebx,ebx
   1400146e5:	jg     0x140014719
   1400146e7:	xchg   ebx,eax
   1400146e8:	jnp    0x1400146a3
   1400146ea:	imul   ebp,esi,0x429f43a1
   1400146f0:	outs   dx,BYTE PTR ds:[rsi]
   1400146f1:	adc    dl,BYTE PTR [rdx+0x60051e5e]
   1400146f7:	fstp   TBYTE PTR [rcx+0x3b9e4209]
   1400146fd:	xor    eax,0x3be474be
   140014702:	(bad)  
   140014704:	outs   dx,BYTE PTR ds:[rsi]
   140014705:	fist   WORD PTR [rbp+0x57]
   140014708:	iret   
   140014709:	push   rsi
   14001470a:	cmp    eax,0x310baf7d
   14001470f:	hlt    
   140014710:	rex.WXB ror QWORD PTR [r8-0xfebfd1b],1
   140014717:	lea    esi,[rbx+0x54]
   14001471a:	rcr    BYTE PTR [rdx+0x5735ba36],0x46
   140014721:	and    eax,0x96ab0ba7
   140014726:	rex.RXB (bad) 
   140014728:	and    di,ax
   14001472b:	or     BYTE PTR [rcx+0xb],bl
   14001472e:	add    DWORD PTR [rax-0x12bec93b],edx
   140014734:	rex.B xlat BYTE PTR ds:[rbx]
   140014736:	add    DWORD PTR [rsi+0x4ed5b929],ebp
   14001473c:	add    BYTE PTR [rdx],ah
   14001473e:	(bad)  
   14001473f:	(bad)  
   140014740:	stc    
   140014741:	add    DWORD PTR [rdi],esp
   140014743:	adc    eax,0xf6538a05
   140014748:	(bad)  
   140014749:	push   rsp
   14001474a:	jae    0x140014793
   14001474c:	mov    edi,0x8052380b
   140014751:	jle    0x1400146f2
   140014753:	sbb    DWORD PTR [rbx+0x23f5e840],0x95c9e18f
   14001475d:	or     eax,0x3b7d5c2c
   140014762:	(bad)  
   140014763:	mov    edx,0xd3cb9b0f
   140014768:	call   0xfd8f8108
   14001476d:	adc    ecx,edi
   14001476f:	movabs ds:0xeae224dce238e27f,al
   140014778:	add    dl,al
   14001477a:	lods   al,BYTE PTR ds:[rsi]
   14001477b:	xor    DWORD PTR [rcx+rdi*4+0x75fe31a7],0xffffff88
   140014783:	test   al,0xc1
   140014785:	test   al,0x74
   140014787:	rex.WB mov r8b,0x8a
   14001478a:	adc    esp,DWORD PTR [rdx-0x20]
   14001478d:	push   rsi
   14001478e:	xchg   ebp,eax
   14001478f:	pop    rdi
   140014790:	add    eax,0x2ef3fb8
   140014795:	add    al,0x12
   140014797:	rex.WXB sbb al,BYTE PTR [r10]
   14001479a:	movabs ds:0xc877f7cd4404fdf9,al
   1400147a3:	scas   eax,DWORD PTR es:[rdi]
   1400147a4:	add    dl,BYTE PTR [rdx]
   1400147a6:	rex.XB add BYTE PTR [r13-0x6a],al
   1400147aa:	jge    0x1400147a1
   1400147ac:	cmp    BYTE PTR [rbp+0xa441216],dl
   1400147b2:	movabs ds:0xfe0dfdc5bef88a00,al
   1400147bb:	(bad)  
   1400147bc:	cwde   
   1400147bd:	mov    DWORD PTR [rsi],edi
   1400147bf:	rex.WB adc cl,r10b
   1400147c2:	or     ah,BYTE PTR [rcx]
   1400147c4:	add    al,0x53
   1400147c6:	or     al,0xd1
   1400147c8:	xchg   ebp,eax
   1400147c9:	mov    WORD PTR [rax],fs
   1400147cb:	add    al,0x6d
   1400147cd:	or     edx,DWORD PTR [rsi]
   1400147cf:	sub    eax,0x35f640c7
   1400147d4:	in     al,0xc1
   1400147d6:	rex.RX
   1400147d7:	data16 rex.R
   1400147d9:	repnz adc BYTE PTR [rbx-0x6f79d607],bl
   1400147e0:	vpavgb ymm11,ymm11,YMMWORD PTR [rdi+rax*1+0xbb13590]
   1400147e9:	mov    ch,0xa1
   1400147eb:	mov    DWORD PTR [rdx+0x485d9603],eax
   1400147f1:	(bad)  
   1400147f2:	pushf  
   1400147f3:	mov    edi,0x2d9dcacf
   1400147f8:	(bad)  
   1400147f9:	and    ch,ah
   1400147fb:	iret   
   1400147fc:	fs (bad) 
   1400147fe:	jmp    0xdac96fab
   140014803:	lea    ecx,[rsi-0x133497ea]
   140014809:	(bad)  
   14001480a:	ins    DWORD PTR es:[rdi],dx
   14001480b:	xchg   QWORD PTR [r10+0x36b9653],rsp
   140014812:	push   rdi
   140014813:	xor    ah,ch
   140014815:	push   QWORD PTR [rdi-0x4a9261ad]
   14001481b:	sub    eax,DWORD PTR [rdx+0x67258191]
   140014821:	and    ch,bl
   140014823:	mov    bh,0x2
   140014825:	shr    dh,cl
   140014827:	rex.WRX rol dil,0x1e
   14001482b:	ret    0x12d0
   14001482e:	or     QWORD PTR [rax+rcx*1-0x3a420fec],r15
   140014836:	adc    ecx,edi
   140014838:	rex.XB adc BYTE PTR [r10],al
   14001483b:	pop    rax
   14001483c:	stc    
   14001483d:	jmp    0x14001487e
   14001483f:	std    
   140014840:	enter  0x9e1f,0x78
   140014844:	cld    
   140014845:	xchg   ecx,eax
   140014846:	lahf   
   140014847:	in     al,dx
   140014848:	outs   dx,BYTE PTR ds:[rsi]
   140014849:	ins    BYTE PTR es:[rdi],dx
   14001484a:	jl     0x1400147f7
   14001484c:	shl    DWORD PTR [rdi+0x59837e44],1
   140014852:	rcr    DWORD PTR [rdx+0x3285cfbf],cl
   140014858:	adc    bl,cl
   14001485a:	lahf   
   14001485b:	jb     0x140014873
   14001485d:	lahf   
   14001485e:	jle    0x140014826
   140014860:	mov    edx,0xe4fd265f
   140014865:	jnp    0x1400148c0
   140014867:	(bad)  
   140014868:	test   esp,edi
   14001486a:	mov    bh,0xd1
   14001486c:	mov    BYTE PTR [rax-0x7d],al
   14001486f:	cli    
   140014870:	and    al,0xf
   140014872:	cmp    eax,DWORD PTR [rax-0x4bb9594b]
   140014878:	outs   dx,DWORD PTR ds:[rsi]
   140014879:	sub    r14b,BYTE PTR [rdi+rbp*2+0x28711e2e]
   140014881:	pop    rdi
   140014882:	pop    rsp
   140014883:	adc    edi,ecx
   140014885:	scas   eax,DWORD PTR es:[rdi]
   140014886:	rex.WR (bad) 
   140014888:	repz mul DWORD PTR [rbp-0x72aaf662]
   14001488f:	int    0x63
   140014891:	(bad)  
   140014892:	jrcxz  0x14001482d
   140014894:	test   DWORD PTR [rip+0x3b735ecc],esp        # 0x17b74a766
   14001489a:	cmp    bl,BYTE PTR [rbp+0x332b3401]
   1400148a0:	call   0xdec86842
   1400148a5:	jmp    0xcf513cfb
   1400148aa:	movabs ds:0xd77707995846985a,eax
   1400148b3:	movabs al,ds:0x28215ad5b27d65ed
   1400148bc:	sbb    DWORD PTR [rsi-0x5c],edi
   1400148bf:	sbb    DWORD PTR [rsi-0x64],edi
   1400148c2:	loope  0x140014942
   1400148c4:	sbb    edx,esi
   1400148c6:	repz jo 0x1400148dd
   1400148c9:	cmp    al,0x95
   1400148cb:	(bad)  
   1400148cc:	pop    rbx
   1400148cd:	popf   
   1400148ce:	xor    DWORD PTR [rdx+0x6e],ebx
   1400148d1:	adc    al,0xe9
   1400148d3:	xchg   edi,eax
   1400148d4:	xchg   esi,eax
   1400148d5:	rex.X jmp 0x140014868
   1400148d8:	pop    rsi
   1400148d9:	punpcklbw mm5,DWORD PTR [rax-0x71a1f3bf]
   1400148e0:	fucom  st(7)
   1400148e2:	jb     0x140014944
   1400148e4:	rex.XB sbb eax,DWORD PTR [r8+0x26]
   1400148e8:	mov    ch,0xe4
   1400148ea:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400148eb:	(bad)  
   1400148ec:	pop    rdx
   1400148ed:	hlt    
   1400148ee:	shl    DWORD PTR [rdx],0x3e
   1400148f1:	and    eax,ebp
   1400148f3:	js     0x140014950
   1400148f5:	sahf   
   1400148f6:	rex.RB push r14
   1400148f8:	(bad)  
   1400148f9:	in     eax,dx
   1400148fa:	(bad)  
   1400148fb:	or     DWORD PTR [rbp-0x66fdd33a],esi
   140014901:	leave  
   140014902:	mov    dl,0x62
   140014904:	jae    0x140014907
   140014906:	sub    eax,0xf7016f14
   14001490b:	loope  0x1400148b0
   14001490d:	xchg   esi,eax
   14001490e:	rex.WB
   14001490f:	fs loopne 0x14001491e
   140014912:	(bad)  
   140014913:	adc    eax,0x7a0a0ca6
   140014918:	(bad)  
   140014919:	(bad)  [rip+0xffffffffbef6a022]        # 0xfef7e941
   14001491f:	sub    eax,0xbe582b46
   140014924:	(bad)  
   140014925:	in     eax,0x67
   140014927:	out    dx,eax
   140014928:	test   esp,0x5f65b4ad
   14001492e:	or     al,0x95
   140014930:	bnd jns 0x140014917
   140014933:	jns    0x14001490e
   140014935:	jae    0x14001499f
   140014937:	fbld   TBYTE PTR [rbp-0x1cacae49]
   14001493d:	call   0x15780905a
   140014942:	mov    BYTE PTR [rax+0x1],dl
   140014945:	xchg   edi,eax
   140014946:	fadd   st(5),st
   140014948:	push   rbx
   140014949:	gs adc eax,0x7809ca8b
   140014950:	loope  0x14001495a
   140014952:	shl    BYTE PTR [rsi-0x56fb44cd],0xfc
   140014959:	fwait
   14001495a:	cmp    al,0xfa
   14001495c:	fsubr  st(4),st
   14001495e:	cld    
   14001495f:	(bad)  
   140014960:	test   eax,0x3c1c8f4f
   140014965:	sbb    al,0xea
   140014967:	sahf   
   140014968:	sahf   
   140014969:	fwait
   14001496a:	add    al,0x7d
   14001496c:	out    0xc7,eax
   14001496e:	jmp    0x183f94c5e
   140014973:	(bad)  
   140014974:	adc    edi,DWORD PTR [rsi-0x2a]
   140014977:	pop    rsp
   140014978:	xor    al,0x6b
   14001497a:	stc    
   14001497b:	int3   
   14001497c:	and    eax,DWORD PTR [rdi+rdx*2]
   14001497f:	jmp    0x1400149f1
   140014981:	fistp  WORD PTR [rsi]
   140014983:	stos   BYTE PTR es:[rdi],al
   140014984:	in     eax,0x2b
   140014986:	outs   dx,WORD PTR ds:[rsi]
   140014988:	mov    cl,0x4c
   14001498a:	(bad)
   14001498d:	jl     0x140014a0e
   14001498f:	mov    al,0x56
   140014991:	adc    ecx,DWORD PTR [rdx]
   140014993:	cld    
   140014994:	(bad)  
   140014995:	mov    dh,0x3d
   140014997:	(bad)  
   140014998:	xor    eax,DWORD PTR [rcx+0x3f]
   14001499b:	ja     0x1400149ac
   14001499d:	(bad)
   1400149a0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400149a1:	sbb    al,0x22
   1400149a3:	and    al,0x81
   1400149a5:	jnp    0x1400149ec
   1400149a7:	lock push rdx
   1400149a9:	mov    edx,DWORD PTR ds:[rcx]
   1400149ac:	int    0xf8
   1400149ae:	jae    0x140014a28
   1400149b0:	jbe    0x140014a2c
   1400149b2:	or     dl,BYTE PTR [rbx]
   1400149b4:	push   rdi
   1400149b5:	mov    edi,0x2303fd11
   1400149ba:	call   0x10e23776d
   1400149bf:	popf   
   1400149c0:	ret    0xa9ee
   1400149c3:	movabs ds:0xc204ecce86389c18,eax
   1400149cc:	movabs ds:0x3c4b13fab641ea2c,al
   1400149d5:	mov    edi,0x515010e
   1400149da:	(bad)  
   1400149db:	(bad)  
   1400149dc:	sbb    ch,BYTE PTR [rsp+rax*4+0x28ff429f]
   1400149e3:	in     eax,dx
   1400149e4:	mov    edi,0x416620d4
   1400149e9:	test   eax,edi
   1400149eb:	std    
   1400149ec:	sbb    al,0x2d
   1400149ee:	fld    TBYTE PTR [rdi-0x1bd624f8]
   1400149f4:	(bad)  
   1400149f6:	mov    esi,0x988722bd
   1400149fb:	(bad)  
   1400149fc:	ja     0x1400149c0
   1400149fe:	nop
   1400149ff:	(bad)  
   140014a00:	xor    dl,BYTE PTR [rbx-0x6b6efe48]
   140014a06:	adc    ah,dl
   140014a08:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014a09:	sahf   
   140014a0a:	test   al,0x3c
   140014a0c:	cmp    esp,0xffffff95
   140014a0f:	xchg   esi,eax
   140014a10:	pop    rsi
   140014a11:	jge    0x140014a12
   140014a13:	pop    rax
   140014a14:	fs (bad) 
   140014a16:	adc    ah,BYTE PTR [rcx+0x8511252]
   140014a1c:	ret    0x8990
   140014a1f:	rex.X cmp esi,DWORD PTR [rdi-0x4c]
   140014a23:	imul   esi,DWORD PTR [rdx+0x79940ca],0x65
   140014a2a:	jb     0x140014a39
   140014a2c:	or     esp,DWORD PTR [rcx+rcx*8-0x37]
   140014a30:	ss test edx,edx
   140014a33:	sub    ebp,DWORD PTR [rip+0xffffffffce14dbbf]        # 0x10e1625f8
   140014a39:	or     BYTE PTR [rdi-0x1b],al
   140014a3c:	enter  0x8fa6,0xcf
   140014a40:	adc    DWORD PTR [rdx-0x37],esi
   140014a43:	sub    cl,BYTE PTR [rsi]
   140014a45:	(bad)  
   140014a46:	test   BYTE PTR [rdi],bl
   140014a48:	sub    al,0x5f
   140014a4a:	and    eax,0x631f4e2b
   140014a4f:	xchg   ah,al
   140014a51:	cwde   
   140014a52:	lods   eax,DWORD PTR ds:[rsi]
   140014a53:	(bad)  
   140014a54:	xchg   ebp,eax
   140014a55:	loope  0x140014a7f
   140014a57:	rol    BYTE PTR [rdx-0x77],0x26
   140014a5b:	add    eax,0xbefe32d
   140014a60:	rex.B adc al,0x2
   140014a63:	scas   eax,DWORD PTR es:[rdi]
   140014a64:	cmp    eax,0x52fc881d
   140014a69:	loopne 0x140014ab5
   140014a6b:	ret    0xb0d0
   140014a6e:	sub    DWORD PTR [rbx+rax*2+0x26],ecx
   140014a72:	and    al,0x19
   140014a74:	mov    ah,0x15
   140014a76:	jae    0x140014a5f
   140014a78:	push   rbx
   140014a79:	mov    ah,0xff
   140014a7b:	jrcxz  0x140014ae8
   140014a7d:	mov    BYTE PTR [rbp-0x44],bl
   140014a80:	rex.W xor sil,al
   140014a83:	jnp    0x140014adc
   140014a85:	add    BYTE PTR [rsi-0x27f6a4b],dh
   140014a8b:	out    dx,eax
   140014a8c:	movabs al,ds:0xfc3d8fd7e617568
   140014a95:	jle    0x140014afa
   140014a97:	clc    
   140014a98:	rol    cl,0x27
   140014a9b:	jp     0x140014b13
   140014a9d:	in     al,dx
   140014a9e:	mov    eax,0x30c2891
   140014aa3:	(bad)  
   140014aa4:	stc    
   140014aa5:	or     ecx,DWORD PTR [rbx-0x60]
   140014aa8:	push   rsi
   140014aa9:	pop    rbp
   140014aaa:	test   bh,bl
   140014aac:	mov    esi,0x8cc9a7cb
   140014ab1:	jg     0x140014ab1
   140014ab3:	mov    WORD PTR [rax+0x31],cs
   140014ab6:	nop
   140014ab7:	pop    rdx
   140014ab8:	or     eax,0xc5cf0b52
   140014abe:	movabs al,ds:0xc5673192cd485e91
   140014ac7:	and    r13b,al
   140014aca:	push   rsi
   140014acb:	(bad)
   140014ace:	sub    DWORD PTR [rcx+0x4429f60c],ecx
   140014ad4:	jae    0x140014abe
   140014ad6:	xchg   esi,eax
   140014ad7:	pop    rsp
   140014ad8:	jns    0x140014af2
   140014ada:	sub    al,0x2c
   140014adc:	imul   eax,DWORD PTR [rdi],0xffffffa8
   140014adf:	(bad)  
   140014ae0:	and    BYTE PTR [rbp-0x61],cl
   140014ae3:	shl    BYTE PTR [rbx+0x7e314627],0xf9
   140014aea:	lods   eax,DWORD PTR ds:[rsi]
   140014aeb:	call   0x11d1104cf
   140014af0:	cmc    
   140014af1:	and    eax,0xc31c6e60
   140014af6:	shl    DWORD PTR [rbx+0x147d3e18],cl
   140014afc:	popf   
   140014afd:	(bad)  [rcx]
   140014aff:	(bad)  
   140014b00:	vaddsubpd xmm11,xmm12,xmm2
   140014b04:	add    al,al
   140014b06:	fwait
   140014b07:	scas   al,BYTE PTR es:[rdi]
   140014b08:	pop    rsp
   140014b09:	add    bl,BYTE PTR [rbx+0x39a80fe5]
   140014b0f:	stc    
   140014b10:	stos   BYTE PTR es:[rdi],al
   140014b11:	mov    esi,0xefcb5235
   140014b16:	(bad)  
   140014b17:	and    edi,eax
   140014b19:	jg     0x140014ac7
   140014b1b:	jrcxz  0x140014acb
   140014b1d:	test   esi,ebx
   140014b1f:	or     al,0x22
   140014b21:	jnp    0x140014b91
   140014b23:	(bad)  
   140014b24:	mov    dl,0xe5
   140014b26:	jbe    0x140014b8d
   140014b28:	adc    BYTE PTR [rcx+rbx*8-0x60a2008a],al
   140014b2f:	and    ebp,eax
   140014b31:	loopne 0x140014b4f
   140014b33:	mov    ?,r9d
   140014b36:	sbb    edx,DWORD PTR [rdi-0x60]
   140014b39:	pushf  
   140014b3a:	xchg   bl,al
   140014b3c:	jmp    QWORD PTR [rax-0x2355b611]
   140014b42:	xchg   esp,eax
   140014b43:	in     eax,0xaf
   140014b45:	xchg   esp,eax
   140014b46:	cmc    
   140014b47:	(bad)  
   140014b48:	(bad)  
   140014b49:	ja     0x140014b2b
   140014b4b:	cmp    al,0x1
   140014b4d:	gs out 0xdf,al
   140014b50:	loopne 0x140014b90
   140014b52:	vmulps ymm3,ymm0,ymm1
   140014b56:	jno    0x140014b20
   140014b58:	sar    DWORD PTR [rbp+0x2d],cl
   140014b5b:	add    ah,BYTE PTR [rax+0x68]
   140014b5e:	add    esp,esp
   140014b60:	push   rcx
   140014b61:	adc    dl,0xe2
   140014b64:	xchg   esi,eax
   140014b65:	push   0x4e1e4082
   140014b6a:	xor    al,0xa3
   140014b6c:	rex.X movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014b6e:	lock movabs ds:0x55f5e4a6199b3414,eax
   140014b78:	pop    rcx
   140014b79:	(bad)  
   140014b7a:	outs   dx,BYTE PTR ds:[rsi]
   140014b7b:	ret    0xdfaf
   140014b7e:	mov    ecx,0x7cf625
   140014b83:	sbb    eax,0x9ad804ff
   140014b88:	(bad)  
   140014b89:	mov    rax,QWORD PTR [r14+0x46002472]
   140014b90:	movsxd esp,DWORD PTR [rcx]
   140014b92:	scas   eax,DWORD PTR es:[rdi]
   140014b93:	lea    ebx,[rcx-0x369a59af]
   140014b99:	adc    ch,ah
   140014b9b:	ds cmp ebx,ecx
   140014b9e:	test   DWORD PTR [rcx+0x18434293],esp
   140014ba4:	fimul  DWORD PTR [rcx]
   140014ba6:	fcomp  QWORD PTR [rsp+rdi*1]
   140014ba9:	sbb    BYTE PTR [rsi],dh
   140014bab:	out    dx,al
   140014bac:	sti    
   140014bad:	xor    dh,BYTE PTR [rsi-0x41]
   140014bb0:	call   0xef18cc51
   140014bb5:	add    BYTE PTR [rax+0x3c2e15e7],al
   140014bbb:	stc    
   140014bbc:	in     al,0xe3
   140014bbe:	rex.RXB (bad) 
   140014bc0:	int    0xcd
   140014bc2:	iret   
   140014bc3:	or     al,0xee
   140014bc5:	fnstenv [rdi-0x14158bc9]
   140014bcb:	jne    0x140014b61
   140014bcd:	hlt    
   140014bce:	(bad)  
   140014bcf:	xor    ebp,DWORD PTR [rax+0x13041a49]
   140014bd5:	gs push rax
   140014bd7:	(bad)  
   140014bd8:	movabs eax,ds:0xf9c0c10ce71fc178
   140014be1:	loopne 0x140014b9d
   140014be3:	fwait
   140014be4:	rex jg 0x140014c09
   140014be7:	(bad)  
   140014be8:	ins    BYTE PTR es:[rdi],dx
   140014be9:	sar    BYTE PTR [rdx],0xaf
   140014bec:	rex.W jrcxz 0x140014bfb
   140014bef:	jae    0x140014bfa
   140014bf1:	push   rdx
   140014bf2:	rcl    al,cl
   140014bf4:	lahf   
   140014bf5:	(bad)  
   140014bf6:	ror    DWORD PTR [rax+0x2a124899],1
   140014bfc:	rex.X
   140014bfd:	repnz or ch,BYTE PTR [rcx+0x5a40979c]
   140014c04:	or     edx,DWORD PTR [rax+0x22366fa1]
   140014c0a:	add    al,0x8a
   140014c0c:	adc    eax,0x47147278
   140014c11:	rex.WRX lahf 
   140014c13:	(bad)  
   140014c14:	leave  
   140014c15:	rex.WXB outs dx,DWORD PTR ds:[rsi]
   140014c17:	(bad)  
   140014c18:	mov    fs,ecx
   140014c1a:	add    ecx,DWORD PTR [rax-0x65]
   140014c1d:	imul   ebp,DWORD PTR [rax-0x1a],0x4e
   140014c21:	(bad)  
   140014c22:	push   0x27bb0c7a
   140014c27:	mov    cs,WORD PTR [rax]
   140014c29:	jmp    0xf8847ce5
   140014c2e:	mov    dl,0x20
   140014c30:	icebp  
   140014c31:	jle    0x140014c89
   140014c33:	ror    BYTE PTR [rdi+0x54050e80],cl
   140014c39:	and    DWORD PTR [rax-0x6cbf83b],ecx
   140014c3f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014c40:	xchg   ecx,eax
   140014c41:	add    eax,0x7f7e213e
   140014c46:	and    BYTE PTR [rcx],ah
   140014c48:	inc    ah
   140014c4a:	cli    
   140014c4b:	(bad)  
   140014c4c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140014c4d:	lahf   
   140014c4e:	loope  0x140014cc2
   140014c50:	movsxd esi,edx
   140014c52:	fst    DWORD PTR [rsp+rax*4]
   140014c55:	jo     0x140014c20
   140014c57:	xchg   ecx,eax
   140014c58:	test   ch,bh
   140014c5a:	(bad)  
   140014c5b:	movabs ds:0x2c82b00c0b52d519,al
   140014c64:	rex.WRXB (bad) 
   140014c66:	and    cl,dl
   140014c68:	jns    0x140014c69
   140014c6a:	sub    bl,BYTE PTR [rax+0x39]
   140014c6d:	out    dx,eax
   140014c6e:	(bad)  
   140014c70:	add    dh,BYTE PTR [rdx-0x21]
   140014c73:	lahf   
   140014c74:	(bad)  
   140014c75:	in     al,0xf5
   140014c77:	imul   ebx,DWORD PTR [rbp-0x681a575],0x5d
   140014c7e:	adc    eax,0x48832082
   140014c83:	test   al,0x5c
   140014c85:	sbb    eax,ebp
   140014c87:	jno    0x140014ceb
   140014c89:	rex.RX adc BYTE PTR [rsi-0x7],r15b
   140014c8d:	rex.B
   140014c8e:	repz (bad) 
   140014c90:	(bad)  
   140014c91:	rex.RX and al,0xe
   140014c94:	xchg   ebx,eax
   140014c95:	or     eax,0x68429819
   140014c9a:	push   rbp
   140014c9b:	xor    al,0xe9
   140014c9d:	jle    0x140014d05
   140014c9f:	cmp    BYTE PTR [rcx+0x28],dl
   140014ca2:	xchg   edx,eax
   140014ca3:	or     al,0x2c
   140014ca5:	xor    ecx,DWORD PTR gs:[rax]
   140014ca8:	fidiv  WORD PTR [rdx]
   140014caa:	cvtdq2ps xmm4,XMMWORD PTR [rsi-0x54]
   140014cae:	out    dx,eax
   140014caf:	stos   BYTE PTR es:[rdi],al
   140014cb0:	push   rsi
   140014cb1:	cmp    ebx,DWORD PTR [rcx-0x48]
   140014cb4:	rex.WRX test QWORD PTR [rdx],r14
   140014cb7:	add    esi,edx
   140014cb9:	xor    ecx,edi
   140014cbb:	fcom   QWORD PTR [rcx+0x2]
   140014cbe:	mov    esp,0xcd2ec02e
   140014cc3:	jb     0x140014d19
   140014cc5:	mov    edi,?
   140014cc7:	iret   
   140014cc8:	enter  0xe097,0xfe
   140014ccc:	xchg   BYTE PTR [rdx+0x6b8a8184],dl
   140014cd2:	sub    esi,esp
   140014cd4:	mov    ebp,0x54df0629
   140014cd9:	pop    rsi
   140014cda:	sbb    BYTE PTR [rbp+rcx*1-0x5e],bl
   140014cde:	pop    rcx
   140014cdf:	clc    
   140014ce0:	sbb    BYTE PTR [rsi],ch
   140014ce2:	stc    
   140014ce3:	rex.WX sub QWORD PTR [rbx+0x7f],rsp
   140014ce7:	jnp    0x140014cf3
   140014ce9:	shl    BYTE PTR [rsi+0x7e841333],0x81
   140014cf0:	repz cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140014cf2:	(bad)  
   140014cf3:	xchg   edi,eax
   140014cf4:	(bad)  
   140014cf5:	ds hlt 
   140014cf7:	shl    BYTE PTR [rdi-0x9],0x5d
   140014cfb:	jns    0x140014cf2
   140014cfd:	push   rsp
   140014cfe:	rex.WRXB pop r15
   140014d00:	dec    DWORD PTR [rbp+0x20]
   140014d03:	hlt    
   140014d04:	(bad)  
   140014d05:	int    0xac
   140014d07:	xor    bl,BYTE PTR [rax+0x4e]
   140014d0a:	data16 ficom WORD PTR [rbp+rdx*1-0x49]
   140014d0f:	sbb    BYTE PTR [rdi-0x6b],bh
   140014d12:	data16 jns 0x140014d8b
   140014d15:	(bad)
   140014d18:	and    al,0x16
   140014d1a:	fidivr WORD PTR [rbx-0x6b68e8ef]
   140014d20:	cwde   
   140014d21:	push   rcx
   140014d22:	rex.XB loopne 0x140014d99
   140014d25:	pop    rsi
   140014d26:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014d27:	mov    edx,DWORD PTR [rax]
   140014d29:	push   rsp
   140014d2a:	jne    0x140014d90
   140014d2c:	gs pop r10
   140014d2f:	cmp    BYTE PTR [rcx+rbp*4+0x7e],ah
   140014d33:	ds pop rsp
   140014d35:	and    dl,BYTE PTR [rax+0x60]
   140014d38:	out    0x8e,eax
   140014d3a:	lods   al,BYTE PTR ds:[rsi]
   140014d3b:	inc    BYTE PTR [rcx+0xd550840]
   140014d41:	ds stc 
   140014d43:	xor    al,0x9e
   140014d45:	cmp    eax,0x97e30c71
   140014d4a:	fld    QWORD PTR [rdx+0x4803e181]
   140014d50:	fisttp QWORD PTR [rip+0x604c2e6c]        # 0x1a04d7bc2
   140014d56:	jo     0x140014dbe
   140014d58:	or     al,0xbb
   140014d5a:	es (bad) 
   140014d5c:	movabs al,ds:0xe5aa34c2e224ea6f
   140014d65:	add    eax,0xd7a2b370
   140014d6a:	sub    dl,ch
   140014d6c:	scas   al,BYTE PTR es:[rdi]
   140014d6d:	xchg   BYTE PTR [rax+0x3a31157e],dl
   140014d73:	sub    al,0x42
   140014d75:	pop    rcx
   140014d76:	push   rcx
   140014d77:	and    ecx,DWORD PTR [rcx]
   140014d79:	rex test ebp,esp
   140014d7c:	outs   dx,DWORD PTR ds:[rsi]
   140014d7d:	sub    eax,0x159665ef
   140014d82:	sbb    DWORD PTR [rsi],edx
   140014d84:	(bad)  
   140014d85:	rex sti 
   140014d87:	stc    
   140014d88:	jmp    0x124fd1684
   140014d8d:	xor    eax,0xc95880fa
   140014d92:	cli    
   140014d93:	ja     0x140014d36
   140014d95:	and    dh,bh
   140014d97:	movabs ds:0x84662220314ebb2,al
   140014da0:	sub    al,BYTE PTR [rax+0x31]
   140014da3:	adc    BYTE PTR [rdx-0x3bf80498],ch
   140014da9:	sub    ch,dh
   140014dab:	add    al,0x16
   140014dad:	add    cl,BYTE PTR [rsi+rax*2-0x54a36e02]
   140014db4:	jl     0x140014dcc
   140014db6:	rex push rcx
   140014db8:	sub    al,0x76
   140014dba:	in     eax,0xd6
   140014dbc:	lahf   
   140014dbd:	push   rsp
   140014dbe:	imul   edx,DWORD PTR [rax+rcx*4],0x9605a344
   140014dc5:	(bad)  
   140014dc6:	in     al,0x55
   140014dc8:	mov    eax,DWORD PTR [rbp+0x8]
   140014dcb:	shr    BYTE PTR [rdi],1
   140014dcd:	(bad)  
   140014dce:	jb     0x140014dee
   140014dd0:	mul    DWORD PTR [rbx-0x4]
   140014dd3:	jae    0x140014d7d
   140014dd5:	(bad)  
   140014dd6:	enter  0xd2c,0xb5
   140014dda:	and    al,0x1f
   140014ddc:	jns    0x140014e0a
   140014dde:	cmc    
   140014ddf:	(bad)  
   140014de0:	int3   
   140014de1:	sbb    ebp,esi
   140014de3:	xchg   ebp,eax
   140014de4:	fcom   st(5)
   140014de6:	jg     0x140014e4f
   140014de8:	enter  0x540f,0x44
   140014dec:	xchg   DWORD PTR [rax],ebx
   140014dee:	(bad)
   140014df2:	ss bswap eax
   140014df5:	and    eax,DWORD PTR [rbx]
   140014df7:	sub    BYTE PTR [rbp-0x3aa579e1],al
   140014dfd:	test   BYTE PTR [rax-0x47],bh
   140014e00:	xor    bl,bh
   140014e02:	(bad)  
   140014e03:	xchg   edx,eax
   140014e04:	in     al,dx
   140014e05:	sar    DWORD PTR [rdx*8-0x24248d84],0xa0
   140014e0d:	repz sbb al,0xea
   140014e10:	shl    BYTE PTR [rdx+0x1006572a],cl
   140014e16:	cmp    DWORD PTR [rip+0x7bbea29f],ecx        # 0x1bbbff0bb
   140014e1c:	(bad)  
   140014e1d:	movabs ds:0x5585c04e545ff,al
   140014e26:	pushf  
   140014e27:	xlat   BYTE PTR ds:[rbx]
   140014e28:	and    eax,0x3f8e9000
   140014e2d:	neg    ch
   140014e2f:	(bad)  
   140014e30:	jp     0x140014e38
   140014e32:	jbe    0x140014eb0
   140014e34:	jge    0x140014e96
   140014e36:	out    0xf0,eax
   140014e38:	mov    ch,0x44
   140014e3a:	loope  0x140014dcc
   140014e3c:	pop    rcx
   140014e3d:	jno    0x140014ea2
   140014e3f:	(bad)  
   140014e40:	in     eax,0xc6
   140014e42:	fcmovnb st,st(5)
   140014e44:	cmp    al,0x79
   140014e46:	xchg   ecx,eax
   140014e47:	rex.WRB fldenv [r15+0x511b9e41]
   140014e4e:	and    DWORD PTR [rax],ebx
   140014e50:	xchg   ebx,eax
   140014e51:	and    eax,0x1aefc8bd
   140014e56:	or     eax,0x6fc555ef
   140014e5b:	sbb    edx,DWORD PTR [rsi-0x15]
   140014e5e:	scas   eax,DWORD PTR es:[rdi]
   140014e5f:	mov    esi,0x9fcb0bf
   140014e64:	or     ecx,eax
   140014e66:	add    eax,0x77bfcd9d
   140014e6b:	and    eax,0x83023990
   140014e70:	(bad)
   140014e74:	ror    BYTE PTR [rcx-0x2b330f59],cl
   140014e7a:	adc    al,0x4e
   140014e7c:	pop    rsi
   140014e7d:	jno    0x140014e9a
   140014e7f:	(bad)  
   140014e80:	rex.RXB test BYTE PTR [r9+0x16d62e9b],0x26
   140014e88:	shl    DWORD PTR [rdi],1
   140014e8a:	jnp    0x140014e8e
   140014e8c:	jnp    0x140014eb4
   140014e8e:	(bad)  
   140014e8f:	movabs al,ds:0xaee8fcb52a04f27f
   140014e98:	rcl    BYTE PTR [rdx+0x6149087d],0x7f
   140014e9f:	rex.R
   140014ea0:	rex.WRB mov WORD PTR [r10+0x53],ds
   140014ea4:	xchg   ecx,eax
   140014ea5:	and    eax,0xdc3dbfd6
   140014eaa:	out    0xd0,eax
   140014eac:	pop    rdi
   140014ead:	add    eax,0xcc7b92d1
   140014eb2:	repnz fwait
   140014eb4:	pop    rbp
   140014eb5:	repz hlt 
   140014eb7:	pop    rsi
   140014eb8:	push   rdx
   140014eb9:	call   FWORD PTR [rdi-0x55c029f6]
   140014ebf:	lock xor DWORD PTR [rdx],0xffffff8a
   140014ec3:	push   rax
   140014ec4:	movabs eax,ds:0xb00a2a32845f96ce
   140014ecd:	adc    BYTE PTR [rdi],bl
   140014ecf:	cmp    DWORD PTR [rbx-0xf419391],edx
   140014ed5:	add    edx,DWORD PTR [rcx]
   140014ed7:	xchg   edx,eax
   140014ed8:	clc    
   140014ed9:	and    ebp,DWORD PTR [rcx-0x43]
   140014edc:	(bad)  
   140014edd:	add    al,0x2a
   140014edf:	mov    ch,BYTE PTR [rip+0xfffffffff62d1124]        # 0x1362e6009
   140014ee5:	rex.WRXB
   140014ee6:	lods   al,BYTE PTR ds:[rsi]
   140014ee8:	or     dl,BYTE PTR [rdi-0x40]
   140014eeb:	and    al,BYTE PTR [rax]
   140014eed:	(bad)  
   140014eee:	lock pop rbx
   140014ef0:	push   rsi
   140014ef1:	(bad)  
   140014ef2:	push   rsi
   140014ef3:	ins    BYTE PTR es:[rdi],dx
   140014ef4:	movabs ds:0xea0c048c9f2b8208,al
   140014efd:	rcl    BYTE PTR [rbp+0x3dd86943],0x5f
   140014f04:	test   bl,dh
   140014f06:	addr32 ds jg 0x140014ed6
   140014f0a:	(bad)  
   140014f0b:	fwait
   140014f0c:	outs   dx,DWORD PTR ds:[rsi]
   140014f0d:	or     eax,0xbb291f98
   140014f12:	(bad)  
   140014f13:	(bad)  
   140014f14:	cmp    DWORD PTR [rax+0x65],esp
   140014f17:	loope  0x140014f55
   140014f19:	retf   0x7e3e
   140014f1c:	push   rbx
   140014f1d:	jl     0x140014ecd
   140014f1f:	ror    dh,cl
   140014f21:	sbb    cl,BYTE PTR [rcx]
   140014f23:	jo     0x140014f67
   140014f25:	pop    rbx
   140014f26:	jge    0x140014f75
   140014f28:	scas   eax,DWORD PTR es:[rdi]
   140014f29:	cmp    al,0x49
   140014f2b:	vpunpcklqdq xmm15,xmm14,XMMWORD PTR [rsi]
   140014f2f:	mov    cl,0xe4
   140014f31:	(bad)  
   140014f32:	xchg   esp,eax
   140014f33:	imul   ecx,DWORD PTR [rdx+rbp*4+0x6e],0xc54b2bb2
   140014f3b:	mov    ecx,0x391b91b3
   140014f40:	mov    ch,dh
   140014f42:	out    dx,eax
   140014f43:	jl     0x140014f47
   140014f45:	sti    
   140014f46:	lahf   
   140014f47:	(bad)  
   140014f48:	mov    ecx,eax
   140014f4a:	or     DWORD PTR [rax+0x78000af0],edi
   140014f50:	pop    rsi
   140014f51:	add    al,0xe1
   140014f53:	(bad)  
   140014f54:	shl    edi,1
   140014f56:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014f57:	out    0x4f,al
   140014f59:	(bad)  
   140014f5a:	jg     0x140014fc6
   140014f5c:	call   0x12ea27541
   140014f61:	jmp    0x1af716523
   140014f66:	iret   
   140014f67:	mov    ch,0x27
   140014f69:	add    BYTE PTR [rsp+rsi*4+0x4270925],al
   140014f70:	xor    al,0x9c
   140014f72:	lahf   
   140014f73:	rex.RB
   140014f74:	rex.W and spl,spl
   140014f77:	sub    DWORD PTR [rax-0x4b7dfb99],edx
   140014f7d:	ficomp WORD PTR [rdi]
   140014f7f:	xchg   esi,eax
   140014f80:	repz (bad) 
   140014f82:	cmp    ebx,ebx
   140014f84:	(bad)  
   140014f85:	and    DWORD PTR [rcx+0x73],eax
   140014f88:	in     eax,dx
   140014f89:	movabs ds:0xd07c6e04330d7206,eax
   140014f92:	mov    WORD PTR [rax],ds
   140014f94:	xor    al,0xed
   140014f96:	stos   DWORD PTR es:[rdi],eax
   140014f97:	or     ecx,DWORD PTR [rsi-0x5]
   140014f9a:	mov    cl,0x62
   140014f9c:	or     al,bl
   140014f9e:	cmp    al,0xf2
   140014fa0:	or     BYTE PTR [rsi-0x3b3b6366],bl
   140014fa6:	xchg   ebp,eax
   140014fa7:	mov    bh,0x63
   140014fa9:	js     0x14001500f
   140014fab:	(bad)  
   140014fac:	push   rdx
   140014fad:	rex.WX pop rax
   140014faf:	pop    rbx
   140014fb0:	pushf  
   140014fb1:	rex.RX out dx,eax
   140014fb3:	int3   
   140014fb4:	sbb    dh,dh
   140014fb6:	rex.WR (bad) 
   140014fb8:	ret    
   140014fb9:	loopne 0x140014f7f
   140014fbb:	sbb    dl,ah
   140014fbd:	ret    0xaa14
   140014fc0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014fc1:	cmp    DWORD PTR [rbp-0x37],ebx
   140014fc4:	ja     0x140014fd9
   140014fc6:	(bad)  
   140014fc7:	je     0x140014f6d
   140014fc9:	rex.XB test BYTE PTR [r10+0xb826a02],bl
   140014fd0:	jg     0x14001502b
   140014fd2:	ficomp WORD PTR [rbx+0x2e]
   140014fd5:	out    0x25,eax
   140014fd7:	xor    dl,BYTE PTR [rdx-0x8]
   140014fda:	out    dx,al
   140014fdb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140014fdc:	lock xchg ebx,eax
   140014fde:	rex.WRB out 0x42,al
   140014fe1:	clc    
   140014fe2:	and    ebp,ecx
   140014fe4:	rex.X pop rbp
   140014fe6:	clc    
   140014fe7:	mov    ecx,0x553011a8
   140014fec:	(bad)  
   140014fed:	xor    BYTE PTR [rsi-0x71],bl
   140014ff0:	jrcxz  0x140014f7f
   140014ff2:	sub    DWORD PTR ds:[rbx+0x9],esi
   140014ff6:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140014ff7:	add    BYTE PTR [rdx-0x3e8b38d8],ch
   140014ffd:	pshufw mm3,mm6,0x20
   140015001:	add    al,0x11
   140015003:	push   0x51
   140015005:	or     al,0x19
   140015007:	dec    BYTE PTR [rbx-0x7e]
   14001500a:	adc    DWORD PTR [rbx+0x4fd23032],ebp
   140015010:	sbb    al,BYTE PTR [rcx+0x6590e25a]
   140015016:	dec    DWORD PTR [rcx+0x22]
   140015019:	xchg   ebx,eax
   14001501a:	pop    rdx
   14001501b:	cmp    cl,BYTE PTR [rip+0xffffffffa3b09871]        # 0xe3b1e892
   140015021:	clc    
   140015022:	mov    gs,ebp
   140015024:	mov    ch,0x8d
   140015026:	cwde   
   140015027:	xchg   BYTE PTR [rsi+0x360b349d],al
   14001502d:	rex.WX cmp cl,BYTE PTR [rcx]
   140015030:	loopne 0x140015091
   140015032:	cmp    DWORD PTR [rdx+0x6bdaafb3],edx
   140015038:	(bad)  
   140015039:	and    bl,ch
   14001503b:	add    DWORD PTR [rsi+riz*1-0x61],0xc8a1fb0a
   140015043:	xchg   ebx,eax
   140015044:	fisttp QWORD PTR [rip+0x17432ab0]        # 0x157447afa
   14001504a:	jl     0x140015072
   14001504c:	push   rax
   14001504d:	xchg   ebx,eax
   14001504e:	pop    rbx
   14001504f:	loope  0x140014fe4
   140015051:	sub    DWORD PTR [rcx],eax
   140015053:	jrcxz  0x140015059
   140015055:	(bad)  
   140015056:	call   0xd63698fc
   14001505b:	outs   dx,BYTE PTR ds:[rsi]
   14001505c:	(bad)  
   14001505d:	xor    dl,bl
   14001505f:	jl     0x14001509f
   140015061:	push   rbx
   140015062:	rex.RX xor r11b,BYTE PTR [rsi]
   140015065:	xor    ebx,ecx
   140015067:	pop    rcx
   140015068:	mov    edi,0x18103959
   14001506d:	or     BYTE PTR [rip+0x1c1ee6a4],bl        # 0x15c203717
   140015073:	mov    edx,0xe0376d0f
   140015078:	add    eax,0x469780a1
   14001507d:	add    eax,ebx
   14001507f:	jbe    0x1400150bf
   140015081:	(bad)  
   140015082:	jo     0x1400150f5
   140015084:	(bad)  
   140015085:	movsxd ebp,esp
   140015087:	xchg   ecx,eax
   140015088:	xchg   DWORD PTR [rsi-0x5e3683cf],edi
   14001508e:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001508f:	cmp    edi,ebp
   140015091:	cmp    ebp,DWORD PTR [rsi-0x60]
   140015094:	adc    BYTE PTR [rsi+0x508a99e5],al
   14001509a:	rex.RX sbb DWORD PTR [rsi-0x38],0xffffff82
   14001509f:	xlat   BYTE PTR ds:[rbx]
   1400150a0:	push   rbp
   1400150a1:	xor    eax,0x31200449
   1400150a6:	sub    ah,BYTE PTR [rsi+0x34]
   1400150a9:	rex.R in eax,dx
   1400150ab:	add    DWORD PTR [rsi+0x2c0ad9d8],eax
   1400150b1:	mov    esi,0x64fdaabf
   1400150b6:	(bad)  
   1400150b7:	(bad)  
   1400150b8:	or     al,0xeb
   1400150ba:	imul   edx,DWORD PTR [rdi-0x2],0x72f524a6
   1400150c1:	push   0xffffffffffffffa6
   1400150c3:	jge    0x140015073
   1400150c5:	(bad)  
   1400150c6:	pop    rsi
   1400150c7:	loope  0x1400150b3
   1400150c9:	cli    
   1400150ca:	push   rbx
   1400150cb:	pavgb  mm5,QWORD PTR [rcx+0x5d4c55a5]
   1400150d2:	jnp    0x1400150db
   1400150d4:	xchg   BYTE PTR [rsi-0x12],dh
   1400150d7:	rex.RX xchg ebx,eax
   1400150d9:	sbb    ch,BYTE PTR [rsi+rbp*1+0x6667a34c]
   1400150e0:	adc    al,0xbb
   1400150e2:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400150e3:	rex.RX xor DWORD PTR [rax],r15d
   1400150e6:	cmp    DWORD PTR [rsi+0x71126e6a],eax
   1400150ec:	jns    0x14001510c
   1400150ee:	mov    ah,0x2e
   1400150f0:	sub    edi,ecx
   1400150f2:	(bad)  
   1400150f3:	mov    ebp,0x24221af5
   1400150f8:	adc    eax,0x284f8159
   1400150fd:	add    al,0x5f
   1400150ff:	js     0x140015081
   140015101:	adc    bl,dh
   140015103:	mov    dl,0x4d
   140015105:	add    al,0x78
   140015107:	xchg   edx,eax
   140015108:	rex.WR push rsp
   14001510a:	push   0xffffffffc96f176f
   14001510f:	sub    al,BYTE PTR [rcx]
   140015111:	enter  0x3705,0xaa
   140015115:	rex.WX jae 0x140015107
   140015118:	jle    0x140015152
   14001511a:	mov    cl,0x16
   14001511c:	mov    ah,0x4b
   14001511e:	mov    BYTE PTR [rbp+0xe],ah
   140015121:	rex.X fnstcw WORD PTR [rdi-0x75]
   140015125:	jrcxz  0x1400150c2
   140015127:	or     esp,DWORD PTR [rcx+0x2]
   14001512a:	sub    dh,ch
   14001512c:	inc    BYTE PTR [rbp+0x2]
   14001512f:	rex.WRXB and BYTE PTR [r15+0x12],r9b
   140015133:	mov    ch,BYTE PTR [rdx+0x4b30b20c]
   140015139:	fnstenv [rdx]
   14001513b:	test   DWORD PTR [rdi+rdi*1+0x337edd60],ebx
   140015142:	mov    ch,BYTE PTR [rax+0x27]
   140015145:	(bad)  
   140015146:	in     eax,0xb0
   140015148:	sbb    eax,eax
   14001514a:	and    DWORD PTR [rip+0x4189c801],0x9acf5582        # 0x1818b1955
   140015154:	add    eax,0x80c5510f
   140015159:	mov    dl,0x32
   14001515b:	push   0xffffffffa094c207
   140015160:	xor    eax,0xfe1f0114
   140015165:	ret    0x229a
   140015168:	push   rdi
   140015169:	mov    ds,edx
   14001516b:	rex.RXB movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001516d:	test   DWORD PTR [rdi],eax
   14001516f:	leave  
   140015170:	or     al,0x4a
   140015172:	add    eax,0x738a67f9
   140015177:	mov    edi,DWORD PTR [rcx]
   140015179:	movabs ds:0xca9ec0028173eb02,eax
   140015182:	push   rdx
   140015183:	fs sti 
   140015185:	sbb    al,BYTE PTR [rsi+0x1b8bffcc]
   14001518b:	and    bh,dh
   14001518d:	adc    esp,ebx
   14001518f:	test   ecx,esi
   140015191:	add    BYTE PTR [rbx-0x6ad1d6d5],ch
   140015197:	(bad)  
   140015198:	out    dx,al
   140015199:	push   rdi
   14001519a:	jno    0x1400151d6
   14001519c:	mov    ah,0x9b
   14001519e:	ss (bad) 
   1400151a0:	jle    0x1400151e1
   1400151a2:	rex.RX
   1400151a3:	data16 rex.WRB cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400151a6:	pop    rsi
   1400151a7:	sub    BYTE PTR [rdx],cl
   1400151a9:	js     0x140015214
   1400151ab:	adc    eax,0x32bcf000
   1400151b0:	or     bh,al
   1400151b2:	lahf   
   1400151b3:	jl     0x1400151b1
   1400151b5:	cmp    DWORD PTR [rsi-0x33],ecx
   1400151b8:	out    0x6,eax
   1400151ba:	jbe    0x1400151ab
   1400151bc:	fst    QWORD PTR [rdi]
   1400151be:	(bad)  
   1400151bf:	cli    
   1400151c0:	cmp    dh,BYTE PTR [rax+0x16c8f325]
   1400151c6:	sbb    BYTE PTR [rsi+0x5f96e163],dl
   1400151cc:	jb     0x1400151c8
   1400151ce:	(bad)  [rcx]
   1400151d0:	(bad)  
   1400151d1:	fist   DWORD PTR [rdx]
   1400151d3:	fs rex.WRX je 0x1400151b3
   1400151d7:	mov    al,BYTE PTR [rdi]
   1400151d9:	pop    rdi
   1400151da:	int    0x28
   1400151dc:	sub    BYTE PTR [rbx+0x4509911f],bl
   1400151e2:	push   rsi
   1400151e3:	jl     0x14001522b
   1400151e5:	jo     0x1400151ac
   1400151e7:	pop    rsp
   1400151e8:	pop    rsp
   1400151e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400151ea:	mov    ecx,0x85620005
   1400151ef:	fsubr  DWORD PTR [rax+riz*2-0xb]
   1400151f3:	outs   dx,DWORD PTR ds:[rsi]
   1400151f4:	mov    esi,0x337c781
   1400151f9:	(bad)  
   1400151fa:	scas   al,BYTE PTR es:[rdi]
   1400151fb:	jns    0x140015220
   1400151fd:	xchg   BYTE PTR [rdi],al
   1400151ff:	ja     0x140015202
   140015201:	sub    DWORD PTR [rcx+0x79],esp
   140015204:	imul   ecx,DWORD PTR [rsi],0xec71ecd5
   14001520a:	(bad)  
   14001520b:	(bad)  
   14001520c:	ret    
   14001520d:	shl    ah,1
   14001520f:	test   al,0x32
   140015211:	(bad)  
   140015212:	mov    bl,0xa0
   140015214:	mov    ch,0x25
   140015216:	and    BYTE PTR [rbp-0x17b775d5],ch
   14001521c:	adc    BYTE PTR [rbx+0x7235110a],ah
   140015222:	movsxd ecx,DWORD PTR [rdi-0x3ca57b78]
   140015228:	jge    0x1400151c8
   14001522a:	jrcxz  0x14001525b
   14001522c:	rex.RX sbb r9b,BYTE PTR [rdx+0x6d8b9180]
   140015233:	rex.WR
   140015234:	sbb    BYTE PTR [rcx],dl
   140015237:	push   rcx
   140015238:	sub    al,0x33
   14001523a:	sbb    DWORD PTR [rcx-0x79],edi
   14001523d:	sub    eax,0x1ac5bead
   140015242:	mov    ch,0xd3
   140015244:	outs   dx,BYTE PTR ds:[rsi]
   140015245:	rex.WRB enter 0x5a83,0xe2
   14001524a:	push   rax
   14001524b:	in     al,0xf0
   14001524d:	and    ebx,DWORD PTR [rbx-0x1]
   140015250:	mov    al,0x1d
   140015252:	(bad)  
   140015253:	rex
   140015254:	rex
   140015255:	rex.RXB
   140015256:	adc    r8b,BYTE PTR [r14]
   140015259:	sti    
   14001525a:	and    eax,0xfdf5079c
   14001525f:	movabs ds:0x9efb8707fcc28193,eax
   140015268:	neg    DWORD PTR [rdi]
   14001526a:	or     eax,0x14f2b0cd
   14001526f:	jb     0x140015200
   140015271:	jo     0x140015265
   140015273:	iret   
   140015274:	cs (bad) 
   140015276:	(bad)  
   140015277:	adc    DWORD PTR [rbx+rbp*8+0x16bc110],edi
   14001527e:	jb     0x14001520b
   140015280:	xor    BYTE PTR [rbx+0x348d85f6],dh
   140015286:	pop    rcx
   140015287:	cs pop rsp
   140015289:	rex.X sti 
   14001528b:	fadd   st(4),st
   14001528d:	fmulp  st(5),st
   14001528f:	xchg   BYTE PTR [rdi+0x4],cl
   140015292:	jb     0x14001523f
   140015294:	lahf   
   140015295:	mov    ch,0x2
   140015297:	imul   ecx,eax,0x4048cb7
   14001529d:	(bad)  
   14001529e:	cld    
   14001529f:	mov    ah,0xf2
   1400152a1:	rex.WR pop rbp
   1400152a3:	add    dh,cl
   1400152a5:	xor    bh,bl
   1400152a7:	addr32 mov edx,0x25bc935c
   1400152ad:	in     al,0x35
   1400152af:	or     al,0xf4
   1400152b1:	xor    eax,0xe741c012
   1400152b6:	mov    ch,0xb9
   1400152b8:	or     eax,0xcad3c470
   1400152bd:	rex.WRXB
   1400152be:	lock rex.WX sub dil,BYTE PTR [rbx-0x3de211e2]
   1400152c6:	out    0x89,al
   1400152c8:	(bad)  
   1400152c9:	(bad)  
   1400152ca:	and    eax,0x5316000f
   1400152cf:	(bad)  
   1400152d0:	or     esp,DWORD PTR [rdx]
   1400152d2:	add    ebx,DWORD PTR [rdi+0x7a]
   1400152d5:	add    eax,0x4a79db60
   1400152da:	mov    edi,fs
   1400152dc:	rex.WRXB lea r13,[r15]
   1400152df:	lea    edi,[rsi]
   1400152e1:	cld    
   1400152e2:	in     eax,dx
   1400152e3:	iret   
   1400152e4:	in     al,dx
   1400152e5:	mov    ebp,0x9ed9cafc
   1400152ea:	rex.WRX iretq 
   1400152ec:	int    0x8
   1400152ee:	movabs eax,ds:0x3833f0991f928017
   1400152f7:	push   rdi
   1400152f8:	sti    
   1400152f9:	cwde   
   1400152fa:	push   rcx
   1400152fb:	retf   
   1400152fc:	add    BYTE PTR [rax],bl
   1400152fe:	fsub   st(2),st
   140015300:	movabs al,ds:0x6e8ea22a8205120
   140015309:	rex.WRB
   14001530a:	add    DWORD PTR ss:[rbp-0x40],esp
   14001530e:	sbb    BYTE PTR [rax],ch
   140015310:	adc    eax,0x4d2ec173
   140015315:	ret    0x8140
   140015318:	sbb    DWORD PTR [rbx+rbp*1],ebx
   14001531b:	(bad)  
   14001531c:	int    0x55
   14001531e:	sub    al,0x3e
   140015320:	(bad)  
   140015321:	sub    eax,0xac5e813c
   140015326:	pop    rbp
   140015327:	sti    
   140015328:	rex.RX or al,0xed
   14001532b:	sbb    BYTE PTR [rdx+0x4a],al
   14001532e:	or     DWORD PTR [rbx],ebp
   140015330:	retf   
   140015331:	repz or BYTE PTR [rbx],dh
   140015334:	(bad)  
   140015335:	xor    DWORD PTR [rdx],esi
   140015337:	imul   ebp,DWORD PTR [rbx],0xfffffff9
   14001533a:	rex.WR and BYTE PTR [rsi],r13b
   14001533d:	iret   
   14001533e:	and    DWORD PTR [rsi+rbp*1+0x2baacd02],ebp
   140015345:	pushf  
   140015346:	(bad)  
   140015347:	or     BYTE PTR [rax],0xb1
   14001534a:	mul    BYTE PTR [rdx]
   14001534c:	cld    
   14001534d:	add    DWORD PTR [rip+0x2e24d425],edx        # 0x16e262778
   140015353:	rex.RX
   140015354:	rex.WRB and r9b,BYTE PTR [r9+rdx*1+0x5a]
   140015359:	pop    rbx
   14001535a:	(bad)  
   14001535b:	sub    BYTE PTR [rax],cl
   14001535d:	cmp    DWORD PTR [rdx+0x50],eax
   140015360:	jg     0x1400152f3
   140015362:	movabs ds:0x1081ee5f7c787941,al
   14001536b:	cmp    BYTE PTR [rax],bh
   14001536d:	mov    cl,0x46
   14001536f:	enter  0x8311,0x12
   140015373:	push   0x1b
   140015375:	fld    TBYTE PTR [rdi]
   140015377:	rex.X (bad) 
   140015379:	jge    0x1400153fa
   14001537b:	retf   
   14001537c:	sti    
   14001537d:	xchg   edi,eax
   14001537e:	iret   
   14001537f:	(bad)
   140015382:	(bad)  
   140015383:	or     BYTE PTR [rsi],0xff
   140015386:	jae    0x14001532c
   140015388:	rcl    BYTE PTR [rsi],0x0
   14001538b:	mov    ch,0x72
   14001538d:	pop    rsi
   14001538e:	rex.WXB cmc 
   140015390:	xor    eax,0x93dfd102
   140015395:	and    DWORD PTR [rdi-0x1b3db7d3],eax
   14001539b:	push   rdi
   14001539c:	scas   eax,DWORD PTR es:[rdi]
   14001539d:	fist   WORD PTR [rax+0x6009af89]
   1400153a3:	or     al,al
   1400153a5:	div    BYTE PTR [rcx]
   1400153a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400153a8:	in     al,dx
   1400153aa:	repz (bad) 
   1400153ac:	sub    edx,DWORD PTR [rcx]
   1400153ae:	pop    rax
   1400153af:	rex.W push rax
   1400153b1:	(bad)  
   1400153b2:	push   0xbceffcb
   1400153b7:	cmp    al,ah
   1400153b9:	sub    ebp,DWORD PTR [rbx+rdi*1]
   1400153bc:	or     al,0x76
   1400153be:	sub    esp,esp
   1400153c0:	mov    bh,0x34
   1400153c2:	je     0x1400153bf
   1400153c4:	pop    rdx
   1400153c5:	xchg   ebp,eax
   1400153c6:	and    DWORD PTR [r14-0x3b],ebp
   1400153ca:	call   FWORD PTR [rax+rbp*1+0x4]
   1400153ce:	stc    
   1400153cf:	(bad)  
   1400153d0:	and    eax,0x476d5778
   1400153d5:	add    esi,DWORD PTR [rsi]
   1400153d7:	(bad)  
   1400153d8:	cwde   
   1400153d9:	mov    dh,BYTE PTR [rsi+0x76]
   1400153dc:	in     al,0xd8
   1400153de:	shr    BYTE PTR [rsi],0xb4
   1400153e1:	mov    esp,0x13bf3b13
   1400153e6:	popf   
   1400153e7:	jp     0x140015408
   1400153e9:	xor    eax,0x18c3c778
   1400153ee:	cli    
   1400153ef:	fsub   DWORD PTR [rdx+rdi*2]
   1400153f2:	ss icebp 
   1400153f4:	cmp    eax,0x9f2f01b8
   1400153f9:	add    al,BYTE PTR [rax]
   1400153fb:	sahf   
   1400153fc:	(bad)  
   1400153fd:	rex.B js 0x1400153f2
   140015400:	icebp  
   140015401:	rex.RXB (bad) 
   140015403:	in     eax,dx
   140015404:	sbb    eax,0xff7f79dc
   140015409:	(bad)  
   14001540a:	loope  0x1400153f7
   14001540c:	(bad)  
   14001540d:	mov    WORD PTR [rdi],es
   14001540f:	adc    edx,DWORD PTR [rcx]
   140015411:	sbb    dh,BYTE PTR [rsi]
   140015413:	lea    ebp,[rsi]
   140015415:	add    edx,DWORD PTR [rbp-0x55]
   140015418:	movsxd esp,DWORD PTR [rbp+0x21]
   14001541b:	(bad)  
   14001541c:	adc    al,0x7
   14001541e:	rex.WXB ins BYTE PTR es:[rdi],dx
   140015420:	sub    esp,ebp
   140015422:	clc    
   140015423:	push   0xffffffffce22076a
   140015428:	mov    esi,0xaededbf
   14001542d:	xlat   BYTE PTR ds:[rbx]
   14001542e:	rex.X jg 0x140015415
   140015431:	movabs ds:0x9841dd50008bd064,eax
   14001543a:	lahf   
   14001543b:	shl    ah,0x13
   14001543e:	pavgb  mm1,QWORD PTR [rcx+0x5748bdbe]
   140015445:	fisttp WORD PTR [rdx+0x481dfee1]
   14001544b:	sub    DWORD PTR [rcx+0x69],esp
   14001544e:	jns    0x140015451
   140015450:	xor    al,0x3b
   140015452:	xchg   BYTE PTR [rcx-0x66e71c67],dl
   140015458:	sbb    al,BYTE PTR [rbp-0x31]
   14001545b:	int3   
   14001545c:	imul   eax,esp,0x558459a5
   140015462:	jmp    0xdd2d9c52
   140015467:	jnp    0x140015413
   140015469:	add    BYTE PTR [rcx-0xe],cl
   14001546c:	and    DWORD PTR [rax-0x76],ebp
   14001546f:	outs   dx,DWORD PTR ds:[rsi]
   140015470:	lock data16 sahf 
   140015473:	push   rcx
   140015474:	stos   DWORD PTR es:[rdi],eax
   140015475:	std    
   140015476:	retf   0x1f02
   140015479:	add    cl,BYTE PTR [rdx]
   14001547b:	mov    ebp,DWORD PTR [rip+0xffffffff92467c15]        # 0xd247d096
   140015481:	cdq    
   140015482:	(bad)  
   140015483:	out    dx,eax
   140015484:	rex.WB cmp al,0x1a
   140015487:	fisttp DWORD PTR [rdi-0x40b24dd0]
   14001548d:	(bad)  
   14001548f:	stos   BYTE PTR es:[rdi],al
   140015490:	rex.WR clc 
   140015492:	rex.RB push r8
   140015494:	lods   al,BYTE PTR ds:[rsi]
   140015495:	ror    BYTE PTR [rdi],cl
   140015497:	and    al,0x9
   140015499:	(bad)  
   14001549a:	xor    eax,ebx
   14001549c:	mov    esi,0x5070a3b9
   1400154a1:	mov    edi,0x92042f3f
   1400154a6:	adc    DWORD PTR [rbp+rdx*8-0x26f2bbeb],eax
   1400154ad:	add    eax,0xad5b0143
   1400154b2:	(bad)  
   1400154b3:	add    eax,0xf5ad1d27
   1400154b8:	push   rdi
   1400154b9:	pop    rcx
   1400154ba:	sub    BYTE PTR [rdx+rcx*1+0x3f],dl
   1400154be:	adc    eax,eax
   1400154c0:	xchg   ecx,eax
   1400154c1:	std    
   1400154c2:	jl     0x1400154f2
   1400154c4:	cld    
   1400154c5:	(bad)  
   1400154c6:	movsxd esp,DWORD PTR [rax+0xff91b0a]
   1400154cc:	sub    cl,BYTE PTR [rsi+riz*8]
   1400154cf:	retf   0x5ae9
   1400154d2:	sub    DWORD PTR [rsi+rdx*8+0x11835cbc],0xffffffc8
   1400154da:	rex.X (bad) 
   1400154dc:	out    0x2d,eax
   1400154de:	cld    
   1400154df:	jg     0x140015534
   1400154e1:	sbb    ah,BYTE PTR [rsi+0x6e]
   1400154e4:	cdq    
   1400154e5:	xchg   ecx,eax
   1400154e6:	rex.WRB or r13b,BYTE PTR [r11+0x563397c0]
   1400154ed:	pop    rdi
   1400154ee:	xchg   esp,eax
   1400154ef:	jge    0x1400154f7
   1400154f1:	sbb    DWORD PTR [rsi+0xac9c624],ebx
   1400154f7:	test   esp,esp
   1400154f9:	jnp    0x14001555e
   1400154fb:	stc    
   1400154fc:	jae    0x140015539
   1400154fe:	jl     0x140015531
   140015500:	push   rax
   140015501:	rex.R sub eax,0x88d01387
   140015507:	adc    BYTE PTR [rbx-0x790e857f],0x78
   14001550e:	mov    bh,0x39
   140015510:	mov    ecx,0xf78105fa
   140015515:	pop    rdi
   140015516:	rex.WRX imul r11,QWORD PTR [rdi-0x3],0x14
   14001551b:	test   BYTE PTR [rbp+0x3207be2],0x5f
   140015522:	pop    rsi
   140015523:	add    eax,0x9c9f3c00
   140015528:	xor    DWORD PTR [rsi*2-0x1d3b3714],0xd4fe9d4
   140015533:	sbb    eax,0x3d0aa4b8
   140015538:	mov    ebp,0x62390337
   14001553d:	push   rbx
   14001553e:	sub    ebx,esp
   140015540:	rex.WRXB (bad) 
   140015542:	std    
   140015543:	or     ebp,ebp
   140015545:	lahf   
   140015546:	cmp    bh,dl
   140015548:	ror    BYTE PTR [rbx-0x17],1
   14001554b:	test   BYTE PTR [rax],bh
   14001554d:	nop
   14001554e:	or     DWORD PTR [rdx-0x4],ecx
   140015551:	add    DWORD PTR [rax+0x3065d9c4],ecx
   140015557:	(bad)  
   140015558:	leave  
   140015559:	(bad)  
   14001555a:	and    edx,DWORD PTR [rbx-0x2cacfc60]
   140015560:	and    DWORD PTR [rdx-0x2b],ecx
   140015563:	fucomi st,st(0)
   140015565:	movsxd edi,DWORD PTR [rax]
   140015567:	stc    
   140015568:	hlt    
   140015569:	and    edi,DWORD PTR [rax+0x7a]
   14001556c:	fcomip st,st(5)
   14001556e:	call   0x14c3c53cf
   140015573:	div    edi
   140015575:	movabs eax,ds:0x27b3401797161269
   14001557e:	xor    BYTE PTR [rdx],dh
   140015580:	xor    eax,DWORD PTR [rsi-0x76ce361f]
   140015586:	cmc    
   140015587:	(bad)  
   140015588:	int    0xc8
   14001558a:	(bad)  
   14001558b:	(bad)  
   14001558c:	fwait
   14001558d:	sub    ecx,DWORD PTR [rax]
   14001558f:	sbb    rsi,QWORD PTR [r15+0x10]
   140015593:	stos   DWORD PTR es:[rdi],eax
   140015594:	lock or ebx,ebx
   140015597:	pop    rdi
   140015598:	or     bh,BYTE PTR [rdi-0x398b07cb]
   14001559e:	pop    rdi
   14001559f:	out    0x7c,eax
   1400155a1:	scas   al,BYTE PTR es:[rdi]
   1400155a2:	mov    esi,0x51788d23
   1400155a7:	fwait
   1400155a8:	icebp  
   1400155a9:	xlat   BYTE PTR ds:[rbx]
   1400155aa:	iret   
   1400155ab:	retf   0x1d46
   1400155ae:	outs   dx,BYTE PTR ds:[rsi]
   1400155af:	icebp  
   1400155b0:	cmc    
   1400155b1:	jmp    QWORD PTR [rax-0x557dcafb]
   1400155b7:	(bad)
   1400155ba:	xor    dh,BYTE PTR [rax]
   1400155bc:	push   rdi
   1400155bd:	out    dx,al
   1400155be:	add    eax,0xdf647e11
   1400155c3:	pop    rdi
   1400155c4:	movabs al,ds:0xbdacf040dd92f07a
   1400155cd:	mov    BYTE PTR [rdx],ah
   1400155cf:	jmp    0x140015620
   1400155d1:	xchg   ebx,eax
   1400155d2:	jle    0x140015578
   1400155d4:	rol    bh,1
   1400155d6:	pop    rsp
   1400155d7:	or     eax,0xbd2a23f1
   1400155dc:	jle    0x1400155a9
   1400155de:	(bad)  
   1400155df:	jo     0x140015618
   1400155e1:	and    ah,BYTE PTR [rcx+riz*8+0x34]
   1400155e5:	(bad)  
   1400155e6:	(bad)  
   1400155e7:	clc    
   1400155e8:	or     edx,DWORD PTR [rsi+rdx*8]
   1400155eb:	(bad)  
   1400155ec:	(bad)  
   1400155ed:	repz sbb eax,0x5067f809
   1400155f3:	or     eax,0x5126bc59
   1400155f8:	add    cl,BYTE PTR [rsi-0x17]
   1400155fb:	mov    edx,0xd9a8e05b
   140015600:	out    0x8a,eax
   140015602:	xor    edi,edx
   140015604:	xor    cl,al
   140015606:	xor    bh,BYTE PTR [rax]
   140015608:	test   eax,0x8ddc339f
   14001560d:	xchg   edx,eax
   14001560e:	push   rsi
   14001560f:	ins    BYTE PTR es:[rdi],dx
   140015610:	test   BYTE PTR [rdx-0x4a6ec2e8],bl
   140015616:	cmp    DWORD PTR [rbx],ecx
   140015618:	or     DWORD PTR [rdi+0xd5ad0c3],ecx
   14001561e:	adc    edx,edi
   140015620:	call   0x149e5581e
   140015625:	rex.B leave 
   140015627:	cvtps2pi mm2,QWORD PTR [rdi]
   14001562a:	xchg   ecx,eax
   14001562b:	xor    eax,DWORD PTR [rsi]
   14001562d:	ins    DWORD PTR es:[rdi],dx
   14001562e:	out    0xb9,al
   140015630:	ins    DWORD PTR es:[rdi],dx
   140015631:	xchg   edi,eax
   140015632:	jns    0x140015691
   140015634:	pop    rsp
   140015635:	push   rbx
   140015636:	jle    0x1400155d7
   140015638:	scas   eax,DWORD PTR es:[rdi]
   140015639:	(bad)  
   14001563a:	neg    dl
   14001563c:	fist   WORD PTR [rdx-0x18]
   14001563f:	rex.RB fidivr DWORD PTR [r8-0x7cc178f9]
   140015646:	out    dx,eax
   140015647:	movabs eax,ds:0xe5b84bcbbfce8840
   140015650:	push   rbp
   140015651:	rex.WRX (bad) 
   140015653:	(bad)  
   140015654:	push   rbp
   140015655:	cli    
   140015656:	xlat   BYTE PTR ds:[rbx]
   140015657:	sar    DWORD PTR [rdi-0x4216462],1
   14001565d:	ret    
   14001565e:	out    dx,eax
   14001565f:	sbb    ebx,edx
   140015661:	jg     0x14001562c
   140015663:	mov    edi,0xab2e10a1
   140015668:	cmp    BYTE PTR [rcx],ah
   14001566a:	xor    al,dl
   14001566c:	and    eax,0x240f29d9
   140015671:	(bad)  
   140015672:	lods   al,BYTE PTR ds:[rsi]
   140015673:	(bad)  
   140015674:	and    esi,DWORD PTR [rdx-0xe]
   140015677:	or     al,0x2a
   140015679:	or     DWORD PTR [rip+0x40236826],eax        # 0x18024bea5
   14001567f:	and    DWORD PTR [rsi],edx
   140015681:	cmp    DWORD PTR [rdi],edi
   140015683:	jbe    0x14001560b
   140015685:	mov    al,0xff
   140015687:	data16 std 
   140015689:	sub    DWORD PTR [rcx-0x1dca75e2],ebp
   14001568f:	(bad)  
   140015690:	sbb    bh,BYTE PTR [rdx-0x38fc8071]
   140015696:	(bad)  
   140015697:	(bad)  
   140015698:	xor    BYTE PTR [rsi-0x1b],bh
   14001569b:	ins    DWORD PTR es:[rdi],dx
   14001569c:	fdiv   DWORD PTR [rcx-0x20]
   14001569f:	rex.WX or al,0x56
   1400156a2:	add    ebx,ebp
   1400156a4:	fld    QWORD PTR [rbp+rax*4-0x165bba1b]
   1400156ab:	xor    DWORD PTR [rsp+rcx*8-0x3b3738e3],ecx
   1400156b2:	sub    BYTE PTR [rdx-0x59],bh
   1400156b5:	rex.WRX and BYTE PTR [rsi],r13b
   1400156b8:	(bad)  
   1400156b9:	and    BYTE PTR [rsi],ch
   1400156bb:	iret   
   1400156bc:	add    DWORD PTR [rbx],ebx
   1400156be:	sub    esp,DWORD PTR [rax-0x4025e4c]
   1400156c4:	lods   al,BYTE PTR ds:[rsi]
   1400156c5:	js     0x14001568e
   1400156c7:	rex.X jge 0x14001570b
   1400156ca:	jrcxz  0x1400156c8
   1400156cc:	lods   al,BYTE PTR ds:[rsi]
   1400156cd:	cmp    eax,0xf58ad0fd
   1400156d2:	cmp    ebp,esp
   1400156d4:	(bad)  
   1400156d5:	in     eax,dx
   1400156d6:	scas   al,BYTE PTR es:[rdi]
   1400156d7:	xchg   esi,eax
   1400156d8:	pop    rbx
   1400156d9:	es mov edi,0xce6f4b7
   1400156df:	in     eax,0x9
   1400156e1:	enter  0xfff1,0x42
   1400156e5:	clc    
   1400156e6:	movabs ds:0x908c89904209bf09,eax
   1400156ef:	jge    0x140015769
   1400156f1:	rex.WXB (bad) 
   1400156f3:	or     dl,BYTE PTR [rcx+0x3d84dd5a]
   1400156f9:	(bad)  
   1400156fa:	mov    bh,0xa5
   1400156fc:	(bad)  
   1400156fd:	addr32 in eax,0xcc
   140015700:	(bad)  
   140015701:	and    edx,DWORD PTR [rbp+rbp*2+0x65]
   140015705:	push   rbp
   140015706:	(bad)  
   140015707:	mov    ch,0xf8
   140015709:	jp     0x1400156a8
   14001570b:	push   rbp
   14001570c:	mov    WORD PTR [rdx],ds
   14001570e:	(bad)  
   14001570f:	push   rsp
   140015710:	push   rdi
   140015711:	and    DWORD PTR [rsi],eax
   140015713:	sub    DWORD PTR [rbx],esp
   140015715:	ss (bad) 
   140015717:	movabs al,ds:0xfa419fe6504008a
   140015720:	adc    DWORD PTR [rax+rdi*4-0x5f],0x12098aca
   140015728:	adc    eax,0xa1de3a88
   14001572d:	sub    DWORD PTR [rax],edx
   14001572f:	(bad)  
   140015730:	call   0xece4aaae
   140015735:	and    eax,0x47b5bd5
   14001573a:	xchg   esi,eax
   14001573b:	fwait
   14001573c:	adc    eax,0xc2a4a500
   140015741:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015742:	xchg   edx,eax
   140015743:	stos   BYTE PTR es:[rdi],al
   140015744:	stc    
   140015745:	(bad)  
   140015746:	call   0x143169970
   14001574b:	push   si
   14001574d:	(bad)  
   14001574e:	xor    BYTE PTR [rbx-0x52b09968],bh
   140015754:	ror    cl,1
   140015756:	mov    cl,0x45
   140015758:	cmp    bh,dl
   14001575a:	in     al,dx
   14001575b:	pop    rsp
   14001575c:	ja     0x1400157ca
   14001575e:	jl     0x140015799
   140015760:	rex.WRB lods al,BYTE PTR ds:[rsi]
   140015762:	xor    eax,0x1a36561
   140015767:	div    DWORD PTR [rdx]
   140015769:	ja     0x1400157b1
   14001576b:	push   0xc
   14001576d:	pop    rbp
   14001576e:	fisttp QWORD PTR [rdi-0x69]
   140015771:	sbb    al,0xee
   140015773:	rcl    BYTE PTR [rbp-0xd08bc05],1
   140015779:	fst    QWORD PTR [rcx-0x2759130a]
   14001577f:	loope  0x140015787
   140015781:	pop    rax
   140015782:	fldenv [rsp+rbp*2+0x36]
   140015786:	mov    WORD PTR [rsi+0x17705d61],fs
   14001578c:	mov    dl,0xf8
   14001578e:	lods   eax,DWORD PTR ds:[rsi]
   14001578f:	es or  eax,0xf968625
   140015795:	rex.WXB adc bl,BYTE PTR [r10+0x62]
   140015799:	rex.X
   14001579a:	rex.WX push rdx
   14001579c:	(bad)  
   14001579d:	outs   dx,BYTE PTR ds:[rsi]
   14001579e:	xlat   BYTE PTR ds:[rbx]
   14001579f:	popf   
   1400157a0:	push   rdi
   1400157a1:	adc    DWORD PTR [rcx+rsi*4+0x1834f5b7],0xffffff82
   1400157a9:	jle    0x1400157bd
   1400157ab:	add    ecx,DWORD PTR [rbp-0x3e]
   1400157ae:	jmp    0x13fe31b2e
   1400157b3:	out    0x3f,al
   1400157b5:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400157b7:	movsxd edx,DWORD PTR [rax+0x5d7df6]
   1400157bd:	lods   al,BYTE PTR ds:[rsi]
   1400157be:	xor    eax,0xfedce73b
   1400157c3:	jbe    0x1400157da
   1400157c5:	sub    BYTE PTR [rbp-0x5e],0x8
   1400157c9:	ins    BYTE PTR es:[rdi],dx
   1400157ca:	fsub   DWORD PTR [rbp+0x4a14617]
   1400157d0:	cs mov ebx,0xaf2bb6f9
   1400157d6:	mov    eax,0xd77fe6e1
   1400157db:	rcr    ebx,cl
   1400157dd:	sti    
   1400157de:	(bad)  
   1400157df:	adc    DWORD PTR cs:[rdx+0x1c00fa35],eax
   1400157e6:	loop   0x14001581b
   1400157e8:	and    al,0x4f
   1400157ea:	mov    esi,0x8daeeb72
   1400157ef:	(bad)  
   1400157f0:	adc    dl,BYTE PTR [rax-0x5f]
   1400157f3:	add    DWORD PTR [rbx],edi
   1400157f5:	icebp  
   1400157f6:	xchg   edi,eax
   1400157f7:	or     edi,DWORD PTR [rax+0x24]
   1400157fa:	icebp  
   1400157fb:	test   al,0x91
   1400157fd:	mov    esi,0x98f50a01
   140015802:	adc    ebp,DWORD PTR [rax-0x6233df16]
   140015808:	(bad)  
   140015809:	retf   0x5fc3
   14001580c:	(bad)  
   14001580d:	mov    bl,0xf5
   14001580f:	and    dh,ah
   140015811:	scas   eax,DWORD PTR es:[rdi]
   140015812:	jge    0x140015837
   140015814:	jbe    0x1400157a5
   140015816:	in     al,dx
   140015817:	rex.XB pop r15
   140015819:	adc    eax,0xc5d1bab0
   14001581e:	cld    
   14001581f:	retf   0x3022
   140015822:	xor    ecx,DWORD PTR [rsi+0x3147d39d]
   140015828:	xor    dh,BYTE PTR [rbx+0x2]
   14001582b:	jge    0x1400157c0
   14001582d:	(bad)  
   14001582e:	push   rax
   14001582f:	(bad)  
   140015830:	rex.WR retf 
   140015832:	and    bl,BYTE PTR [rsi-0x4b5f3415]
   140015838:	add    eax,0xf920aa0d
   14001583e:	hlt    
   14001583f:	xor    eax,0x26534d27
   140015844:	pop    rcx
   140015845:	mov    ebx,0x543df48f
   14001584a:	lock test eax,0x4ffafd80
   140015850:	push   rsp
   140015851:	add    eax,0xa5f27d26
   140015856:	cdq    
   140015857:	fs (bad) 
   140015859:	in     al,0xa
   14001585b:	mov    bpl,0xfc
   14001585e:	xchg   ecx,eax
   14001585f:	add    dl,BYTE PTR [rax-0x3f429e28]
   140015865:	jae    0x1400158ac
   140015867:	pcmpgtd mm7,mm1
   14001586a:	mov    esp,cs
   14001586c:	and    esi,ebx
   14001586e:	iret   
   14001586f:	retf   
   140015870:	ins    BYTE PTR es:[rdi],dx
   140015871:	(bad)  
   140015872:	sub    edi,0xffffff9a
   140015875:	test   BYTE PTR [rbx+rsi*4],dl
   140015878:	movabs ds:0xad004f72f284a2a8,al
   140015881:	out    0x8b,al
   140015883:	mov    edx,0xc2b68016
   140015888:	scas   al,BYTE PTR es:[rdi]
   140015889:	(bad)  
   14001588a:	push   rsi
   14001588b:	(bad)  
   14001588c:	stos   BYTE PTR es:[rdi],al
   14001588d:	ret    0x43a8
   140015890:	test   al,0x82
   140015893:	scas   al,BYTE PTR es:[rdi]
   140015894:	sbb    DWORD PTR [rax-0x16],eax
   140015897:	sub    dl,BYTE PTR [rax+0x60c5ff57]
   14001589d:	jo     0x14001587e
   14001589f:	test   BYTE PTR [rdi+0x43f045],dl
   1400158a5:	and    bh,BYTE PTR [rbx+0x31]
   1400158a8:	or     eax,0x982cb413
   1400158ad:	or     al,0x6a
   1400158af:	enter  0xab98,0x2
   1400158b3:	loopne 0x1400158d7
   1400158b5:	mov    WORD PTR [rcx+0x73],gs
   1400158b8:	ror    DWORD PTR [rax],0x37
   1400158bb:	jns    0x14001592b
   1400158bd:	lock mov edx,0xb03296fd
   1400158c3:	leave  
   1400158c4:	xchg   ebx,eax
   1400158c5:	pop    rax
   1400158c6:	(bad)  
   1400158c7:	add    cl,BYTE PTR [rcx+0x31]
   1400158ca:	out    dx,eax
   1400158cb:	nop
   1400158cc:	int3   
   1400158cd:	xchg   edi,eax
   1400158ce:	xchg   DWORD PTR [rsi-0x59],ecx
   1400158d1:	jrcxz  0x140015932
   1400158d3:	cmp    edi,DWORD PTR [rsi-0x646c7207]
   1400158d9:	std    
   1400158da:	idiv   edi
   1400158dc:	xchg   edi,eax
   1400158dd:	movabs ds:0x8650c7abc5cf83d5,eax
   1400158e6:	fidiv  DWORD PTR [rsi-0x3f95f2ee]
   1400158ec:	jbe    0x14001595d
   1400158ee:	pushf  
   1400158ef:	sbb    bh,BYTE PTR [rsi-0x5]
   1400158f2:	shr    ah,0x6b
   1400158f5:	scas   eax,DWORD PTR es:[rdi]
   1400158f6:	movabs ds:0xeddeff103f5e3bc5,al
   1400158ff:	std    
   140015900:	loope  0x1400158b7
   140015902:	jne    0x140015906
   140015904:	push   rsi
   140015905:	(bad)  
   140015906:	test   BYTE PTR [rbp+0x4e0028ae],cl
   14001590c:	mov    WORD PTR [rsi+0x57],gs
   14001590f:	sbb    eax,0x813994cf
   140015914:	test   BYTE PTR [rsp+rdx*8-0x1a69dbbc],al
   14001591b:	fstp   QWORD PTR [rdx]
   14001591d:	mov    ebp,0x93904960
   140015922:	sbb    ecx,DWORD PTR [rax]
   140015924:	or     eax,esp
   140015926:	and    BYTE PTR [rax-0x29],cl
   140015929:	mov    bl,ch
   14001592b:	adc    al,BYTE PTR [rcx]
   14001592d:	rex.WRB ret 
   14001592f:	cmp    BYTE PTR [rbp-0x43],cl
   140015932:	push   rsi
   140015934:	(bad)  
   140015935:	jo     0x140015922
   140015937:	out    dx,eax
   140015938:	rex.X adc al,0x80
   14001593b:	lods   al,BYTE PTR ds:[rsi]
   14001593c:	and    eax,0x518af8
   140015941:	rex test eax,0x9590804
   140015947:	cwde   
   140015948:	and    ch,al
   14001594a:	jmp    0x1bfd33168
   14001594f:	retf   
   140015950:	fucomp st(7)
   140015952:	dec    ecx
   140015954:	(bad)  
   140015955:	movabs eax,ds:0x599dd876891f3f5d
   14001595e:	and    eax,0xa3a02461
   140015963:	mov    esi,0x3774ab18
   140015968:	add    BYTE PTR [rdx],ch
   14001596a:	outs   dx,BYTE PTR ds:[rsi]
   14001596b:	(bad)  
   14001596c:	stos   DWORD PTR es:[rdi],eax
   14001596d:	repz cwde 
   14001596f:	cmc    
   140015970:	iret   
   140015971:	scas   al,BYTE PTR es:[rdi]
   140015972:	jle    0x140015946
   140015974:	rcr    BYTE PTR [rcx+rdi*4],1
   140015977:	push   rdx
   140015978:	movabs al,ds:0x8fb3d4c1bfb18110
   140015981:	(bad)  
   140015982:	je     0x140015968
   140015984:	jb     0x1400159fa
   140015986:	scas   eax,DWORD PTR es:[rdi]
   140015987:	mov    esp,0x7707bb05
   14001598c:	movabs ds:0x5a5c58366f2c626,al
   140015995:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015996:	mov    ecx,0x1e9e1813
   14001599b:	ret    
   14001599c:	lock hlt 
   14001599e:	or     esp,esi
   1400159a0:	int    0x8c
   1400159a2:	and    ecx,esi
   1400159a4:	rex.WRXB movabs rax,ds:0x3ad2065b58479e5a
   1400159ae:	sub    cl,bl
   1400159b0:	loope  0x1400159d9
   1400159b2:	in     eax,dx
   1400159b3:	loop   0x140015980
   1400159b5:	sbb    cl,BYTE PTR [rdi-0x19]
   1400159b8:	rex.RX jnp 0x1400159b3
   1400159bb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400159bc:	mov    bl,0x8
   1400159be:	mov    edi,0x4607612
   1400159c3:	rex.WRB
   1400159c4:	rex.WR loop 0x14001598f
   1400159c7:	pop    rsi
   1400159c8:	out    0xef,eax
   1400159ca:	mov    ecx,0x19c8462f
   1400159cf:	(bad)  
   1400159d0:	sub    BYTE PTR [rax+rcx*8],0xa2
   1400159d4:	or     BYTE PTR [rcx+rbx*8+0x0],al
   1400159d8:	rex.RX (bad) 
   1400159da:	mov    eax,esi
   1400159dc:	(bad)  
   1400159dd:	xor    al,0xde
   1400159df:	(bad)  
   1400159e0:	je     0x1400159af
   1400159e2:	(bad)  
   1400159e3:	xchg   ebp,eax
   1400159e4:	sub    DWORD PTR [rdi],edx
   1400159e6:	(bad)  
   1400159e7:	and    BYTE PTR [rcx-0x1bea3d43],ch
   1400159ed:	cmp    al,0x0
   1400159ef:	imul   ecx
   1400159f1:	mov    DWORD PTR [rsp+rdi*2-0x1a021428],esp
   1400159f8:	pop    rdx
   1400159f9:	push   0x47
   1400159fb:	or     esp,DWORD PTR [rdx-0x27ad5c4]
   140015a01:	xchg   ebp,eax
   140015a02:	xchg   BYTE PTR [rbp*1+0x1cc6384d],cl
   140015a09:	(bad)  
   140015a0a:	sbb    BYTE PTR [rsi+0x29b47493],0x0
   140015a11:	mov    dh,0xa6
   140015a13:	pop    rcx
   140015a14:	mov    ecx,0x32ab00be
   140015a19:	add    BYTE PTR [rsi+0x2df0452c],0xe7
   140015a20:	(bad)  
   140015a21:	sbb    DWORD PTR [rcx],ecx
   140015a23:	push   0xffffffffca76488e
   140015a28:	xor    eax,DWORD PTR [rdi]
   140015a2a:	(bad)  
   140015a2b:	or     al,al
   140015a2d:	ss xchg edi,eax
   140015a2f:	mov    ah,BYTE PTR [rsi+rdi*8]
   140015a32:	jle    0x140015a5b
   140015a34:	xor    dh,dl
   140015a36:	mov    edx,0xd1e5f9bc
   140015a3b:	hlt    
   140015a3c:	rol    bh,0x9f
   140015a3f:	movabs eax,ds:0x5edfabefb6b63f8f
   140015a48:	fidivr DWORD PTR [rbx+0xa]
   140015a4b:	jns    0x140015a0a
   140015a4d:	or     al,0xa3
   140015a4f:	cld    
   140015a50:	push   rdx
   140015a51:	stc    
   140015a52:	jae    0x140015a31
   140015a54:	mov    dh,0x1a
   140015a56:	scas   eax,DWORD PTR es:[rdi]
   140015a57:	or     BYTE PTR [rax],ah
   140015a59:	(bad)  
   140015a5a:	(bad)  
   140015a5b:	in     al,dx
   140015a5c:	shr    BYTE PTR [rbx+0x4e60d2],1
   140015a62:	add    BYTE PTR [rax],ah
   140015a64:	add    BYTE PTR [rcx+0x44],cl
   140015a67:	push   r12
   140015a69:	or     eax,0x7fb6ec69
   140015a6e:	xor    BYTE PTR [rax-0xa485e07],bh
   140015a74:	loope  0x140015a44
   140015a76:	and    DWORD PTR [rax+0x60],esp
   140015a79:	cmp    DWORD PTR [rip+0x6a40366c],esp        # 0x1aa4190eb
   140015a7f:	cmp    bh,dl
   140015a81:	or     ah,BYTE PTR [rbx+riz*8]
   140015a84:	scas   al,BYTE PTR es:[rdi]
   140015a85:	adc    bl,BYTE PTR [rax-0x6fb65fd]
   140015a8b:	rcr    ah,1
   140015a8d:	add    eax,0x2de7b93d
   140015a92:	mov    al,0xe4
   140015a94:	mov    esp,0x111b278
   140015a99:	ffree  st(4)
   140015a9b:	fadd   DWORD PTR [rax-0x8]
   140015a9e:	(bad)  
   140015a9f:	inc    DWORD PTR [rbx+rbx*1+0xc31ec7e]
   140015aa6:	(bad)  
   140015aa7:	rex.XB sub sil,BYTE PTR [r11+0x1b]
   140015aab:	cmp    al,0xf8
   140015aad:	jnp    0x140015ab8
   140015aaf:	out    0xd9,eax
   140015ab1:	mov    esi,0x7000147f
   140015ab6:	es xchg edi,eax
   140015ab8:	(bad)  
   140015ab9:	sbb    ebx,DWORD PTR [rdx]
   140015abb:	mov    eax,0xb8efade1
   140015ac0:	ins    DWORD PTR es:[rdi],dx
   140015ac1:	fbld   TBYTE PTR [rbp+0x57]
   140015ac4:	jmp    FWORD PTR [rdx-0x54]
   140015ac7:	jmp    0x140015ae4
   140015ac9:	cdq    
   140015aca:	and    eax,0x486a3ff7
   140015acf:	xor    BYTE PTR [rax+0x26e81b9d],al
   140015ad5:	or     DWORD PTR [rdi+0xe8a3711],ebp
   140015adb:	hlt    
   140015adc:	mov    DWORD PTR [rbx+0x45f2581],esp
   140015ae2:	xor    al,0xa
   140015ae4:	stos   DWORD PTR es:[rdi],eax
   140015ae5:	add    BYTE PTR [rdx-0x7e4447cb],cl
   140015aeb:	out    0xc9,al
   140015aed:	sti    
   140015aee:	jno    0x140015b6c
   140015af0:	jb     0x140015af4
   140015af2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015af3:	(bad)  
   140015af4:	mov    edi,0xae073d19
   140015af9:	ret    0xbeae
   140015afc:	pop    rsi
   140015afd:	add    al,0x30
   140015aff:	xchg   esi,eax
   140015b00:	ss mov edx,0x45e5c58
   140015b06:	data16 rex.WRXB (bad) 
   140015b09:	jo     0x140015b01
   140015b0b:	cmp    BYTE PTR [rsi-0x5a],al
   140015b0e:	(bad)  
   140015b0f:	movabs ds:0xac21cdf966a4f26f,eax
   140015b18:	sub    eax,0x8eb3423
   140015b1d:	fidivr WORD PTR [rax-0x37c0d2bd]
   140015b23:	pop    rbx
   140015b24:	jns    0x140015b6b
   140015b26:	pop    rbp
   140015b27:	mov    esp,0x185402b3
   140015b2c:	push   rax
   140015b2d:	mov    ah,0xe6
   140015b2f:	(bad)  
   140015b30:	in     al,dx
   140015b31:	jns    0x140015b29
   140015b33:	stc    
   140015b34:	and    eax,0x3f2c56e5
   140015b39:	jns    0x140015b09
   140015b3b:	mov    eax,0xbfca7e58
   140015b40:	and    eax,DWORD PTR [rcx+0x43a05688]
   140015b46:	(bad)  
   140015b47:	jmp    FWORD PTR [rdi+0x9]
   140015b4a:	xchg   BYTE PTR ds:[rdx],ah
   140015b4d:	and    ah,BYTE PTR [rdx-0x59bb1d79]
   140015b53:	xor    dh,ah
   140015b55:	mov    bh,0x42
   140015b57:	(bad)  
   140015b58:	sbb    BYTE PTR [rbx+0x7601f96f],dh
   140015b5e:	or     al,0xd6
   140015b60:	or     BYTE PTR [rbp-0xbd940f7],al
   140015b66:	pop    rax
   140015b67:	(bad)
   140015b6a:	adc    edi,esi
   140015b6c:	sbb    al,0xfa
   140015b6e:	adc    esp,DWORD PTR [rdx+0x54549490]
   140015b74:	rex.RB adc al,0x5
   140015b77:	(bad)  
   140015b78:	(bad)  
   140015b7a:	movabs eax,ds:0xf1fa801d68443c96
   140015b83:	push   0xfffffffffffffff1
   140015b85:	lods   eax,DWORD PTR ds:[rsi]
   140015b86:	hlt    
   140015b87:	(bad)  
   140015b88:	js     0x140015b8e
   140015b8a:	(bad)  
   140015b8b:	rex.XB fidivr DWORD PTR [rip+0x39805c95]        # 0x17981b827
   140015b92:	je     0x140015b16
   140015b94:	pop    rax
   140015b95:	mov    esp,0xadb5248f
   140015b9a:	(bad)  
   140015b9b:	ins    DWORD PTR es:[rdi],dx
   140015b9c:	fwait
   140015b9d:	in     eax,dx
   140015b9e:	mov    esp,ss
   140015ba0:	adc    BYTE PTR [rsi-0x460fd82],bh
   140015ba6:	stos   DWORD PTR es:[rdi],eax
   140015ba7:	rcr    DWORD PTR [rsi-0x2e6201c1],1
   140015bad:	stos   DWORD PTR es:[rdi],eax
   140015bae:	mov    esi,0x5d9eb102
   140015bb3:	std    
   140015bb4:	cmp    ebx,DWORD PTR [rbx-0x5fb56810]
   140015bba:	xor    al,0x5c
   140015bbc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140015bbd:	adc    dh,BYTE PTR [rax]
   140015bbf:	add    edx,DWORD PTR [rsi-0x41]
   140015bc2:	xor    eax,0xf86f13d
   140015bc7:	or     eax,0xbbc4fd2c
   140015bcc:	cli    
   140015bcd:	jo     0x140015c06
   140015bcf:	adc    dl,bl
   140015bd1:	push   0xffffffffffffffc3
   140015bd3:	mov    al,0x9c
   140015bd5:	xor    esp,DWORD PTR [rsi-0x55]
   140015bd8:	and    eax,0x62607092
   140015bdd:	rex.X push rdx
   140015bdf:	add    al,cl
   140015be1:	rex.WRXB
   140015be2:	rex.RX test BYTE PTR [rsi+0x14254f33],r8b
   140015be9:	rex.X adc sil,BYTE PTR [rdi]
   140015bec:	rex rol DWORD PTR [rax-0x69],1
   140015bf0:	mov    cl,0xf1
   140015bf2:	or     BYTE PTR [rip+0xfffffffff897e07d],cl        # 0x138993c75
   140015bf8:	xor    eax,0xe594875f
   140015bfd:	rex.WXB movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140015bff:	loopne 0x140015c7a
   140015c01:	push   rax
   140015c02:	ror    bl,0x4f
   140015c05:	add    bl,BYTE PTR [rsi-0x74e18495]
   140015c0b:	xchg   esp,eax
   140015c0c:	rex.WR (bad) 
   140015c0e:	jnp    0x140015bfe
   140015c10:	(bad)  
   140015c11:	shr    ah,cl
   140015c13:	hlt    
   140015c14:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140015c15:	xchg   dh,dh
   140015c17:	(bad)  
   140015c18:	call   0x1179ff9ac
   140015c1d:	push   rbp
   140015c1e:	add    al,0xaa
   140015c20:	pop    rax
   140015c21:	enter  0x1334,0x7e
   140015c25:	stos   DWORD PTR es:[rdi],eax
   140015c26:	sub    DWORD PTR [rax-0x34db3f98],ecx
   140015c2c:	push   rdi
   140015c2d:	pop    rcx
   140015c2e:	imul   esp,DWORD PTR [rbp-0x2ebd8569],0xadd0a842
   140015c38:	sti    
   140015c39:	ror    bl,0xd3
   140015c3c:	pop    rax
   140015c3d:	jl     0x140015c3b
   140015c3f:	fwait
   140015c40:	cmp    BYTE PTR [rdx-0x4a233a2a],dh
   140015c46:	ja     0x140015ca8
   140015c48:	clc    
   140015c49:	shl    ch,0x18
   140015c4c:	jmp    0xf189dd3e
   140015c51:	mov    ah,0xb1
   140015c53:	mov    DWORD PTR [rbp-0x19ffa3b],eax
   140015c59:	and    al,0x86
   140015c5b:	mov    fs,WORD PTR [ebx+0x68]
   140015c5f:	mul    BYTE PTR [rdx+rdi*8]
   140015c62:	data16 rex.WRX movabs rax,ds:0xbeb5405e5c419c5a
   140015c6d:	mov    eax,cs
   140015c6f:	fwait
   140015c70:	mov    dl,bl
   140015c72:	mov    dl,0xab
   140015c74:	push   rsi
   140015c75:	jg     0x140015cb6
   140015c77:	and    ah,ah
   140015c79:	cs mov esi,0x2a43d856
   140015c7f:	cld    
   140015c80:	jo     0x140015cd0
   140015c82:	or     ebx,DWORD PTR [rsi+0x21]
   140015c85:	push   rdi
   140015c86:	adc    BYTE PTR [rsi-0x54],bh
   140015c89:	test   BYTE PTR [rdi+0x2241ec2f],bl
   140015c8f:	nop
   140015c90:	xchg   ecx,eax
   140015c91:	sub    al,0xd1
   140015c93:	rex.RXB adc DWORD PTR [r8-0x1d14a03e],r8d
   140015c9a:	jrcxz  0x140015c35
   140015c9c:	jle    0x140015d02
   140015c9e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015c9f:	pop    rsi
   140015ca0:	(bad)  
   140015ca1:	rol    DWORD PTR [rbx-0x72],0x12
   140015ca5:	pop    rax
   140015ca6:	(bad)  
   140015ca7:	jge    0x140015cc9
   140015ca9:	(bad)  
   140015caa:	rex.WXB jne 0x140015c88
   140015cad:	out    0x4a,eax
   140015caf:	(bad)  
   140015cb0:	rex.RX cmc 
   140015cb2:	shr    DWORD PTR [rip+0x28542fe3],cl        # 0x168558c9b
   140015cb8:	repnz adc dl,BYTE PTR [rdx+rdi*8]
   140015cbc:	xchg   DWORD PTR [rdx+rdx*2],ebx
   140015cbf:	or     al,0xda
   140015cc1:	and    al,0xc4
   140015cc3:	test   bl,bl
   140015cc5:	xchg   edx,eax
   140015cc6:	lea    eax,[rdx+0x2c]
   140015cc9:	and    BYTE PTR [rdi],bh
   140015ccb:	cdq    
   140015ccc:	pop    rbx
   140015ccd:	xchg   edx,eax
   140015cce:	loope  0x140015c8b
   140015cd0:	scas   eax,DWORD PTR es:[rdi]
   140015cd1:	(bad)  
   140015cd2:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015cd3:	or     al,cl
   140015cd5:	rex.XB jnp 0x140015c9e
   140015cd8:	adc    DWORD PTR [rax],ebx
   140015cda:	push   rsp
   140015cdb:	jno    0x140015d1f
   140015cdd:	shr    dl,1
   140015cdf:	in     al,dx
   140015ce0:	loope  0x140015d08
   140015ce2:	mov    WORD PTR [rcx+rdi*1-0x26],ss
   140015ce6:	cs rex.R mov cx,0xea91
   140015cec:	or     DWORD PTR [rsi-0xa067060],eax
   140015cf2:	clc    
   140015cf3:	sar    BYTE PTR [rdi+0x7c],1
   140015cf6:	mov    eax,0xfaff6bf3
   140015cfb:	loope  0x140015ca8
   140015cfd:	jg     0x140015cfa
   140015cff:	(bad)  
   140015d00:	mov    ecx,0x4434fdd
   140015d05:	addr32 or eax,0xcfed4162
   140015d0b:	adc    al,0x82
   140015d0d:	sub    DWORD PTR [rbx-0x40290a0e],eax
   140015d13:	je     0x140015cbb
   140015d15:	out    dx,eax
   140015d16:	(bad)  
   140015d17:	rcr    DWORD PTR [rsi+0x2f75f713],1
   140015d1d:	stc    
   140015d1e:	(bad)  
   140015d1f:	(bad)  
   140015d20:	out    0xdc,al
   140015d22:	and    eax,DWORD PTR [rdi+0x2ee97363]
   140015d28:	ret    0xd641
   140015d2b:	add    BYTE PTR [rdi+0xe],bh
   140015d2e:	or     ecx,edx
   140015d30:	(bad)  
   140015d31:	test   al,0xa2
   140015d33:	iret   
   140015d34:	jge    0x140015d5c
   140015d36:	in     al,0xdf
   140015d38:	fcomp  QWORD PTR [rdi+rsi*4]
   140015d3b:	movabs al,ds:0xdcfd8ebcc8294d2d
   140015d44:	lods   al,BYTE PTR ds:[rsi]
   140015d45:	fisttp WORD PTR [rbx+0xbc39f43]
   140015d4b:	sub    BYTE PTR [rax],dl
   140015d4d:	cli    
   140015d4e:	(bad)  
   140015d4f:	push   rdx
   140015d50:	add    BYTE PTR [rsi+0x2819cf6d],dh
   140015d56:	jge    0x140015d07
   140015d58:	mov    ah,0xb2
   140015d5a:	xor    BYTE PTR [rdi-0x3c2709c2],dh
   140015d60:	pop    rdi
   140015d61:	fnstsw WORD PTR [rbp-0x37]
   140015d64:	loope  0x140015d37
   140015d66:	sbb    eax,0x8baf7dbd
   140015d6b:	rex.R or esi,0xfffffff8
   140015d6f:	mov    bl,0x64
   140015d71:	add    DWORD PTR [rsi+0x6e],eax
   140015d74:	(bad)  
   140015d75:	retf   0xe08b
   140015d78:	fld    DWORD PTR [rbx]
   140015d7a:	repz (bad) 
   140015d7c:	mov    cr6,rsp
   140015d7f:	popf   
   140015d80:	pop    rsi
   140015d81:	je     0x140015dd6
   140015d83:	(bad)  
   140015d84:	int    0x73
   140015d86:	ffreep st(1)
   140015d88:	hlt    
   140015d89:	jae    0x140015d1a
   140015d8b:	loop   0x140015d75
   140015d8d:	(bad)  
   140015d8e:	ret    
   140015d8f:	rex.W push rdi
   140015d91:	fiadd  WORD PTR [rdx+0x6376bbbd]
   140015d97:	movabs al,ds:0xd2c4db5c58c4e00e
   140015da0:	sar    BYTE PTR [rax+rdi*2],cl
   140015da3:	out    dx,al
   140015da4:	and    al,0x46
   140015da6:	data16 mov fs,WORD PTR [rbx+0x68]
   140015daa:	data16 sbb al,0x7d
   140015dad:	mov    bl,0xe3
   140015daf:	test   al,0x17
   140015db1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015db2:	push   rcx
   140015db3:	lods   eax,DWORD PTR ds:[rsi]
   140015db4:	sub    al,0x20
   140015db6:	scas   al,BYTE PTR es:[rdi]
   140015db7:	(bad)  
   140015db8:	and    esp,DWORD PTR [rsi-0x6e1af68b]
   140015dbe:	and    al,0x1f
   140015dc0:	(bad)  
   140015dc1:	lods   al,BYTE PTR ds:[rsi]
   140015dc2:	sbb    BYTE PTR [rcx-0x6f],r14b
   140015dc6:	loopne 0x140015d6b
   140015dc8:	or     ah,BYTE PTR [rax-0x57ad76de]
   140015dce:	jmp    0x140015e2a
   140015dd0:	(bad)  
   140015dd1:	neg    BYTE PTR [rax+0x57e17745]
   140015dd7:	pop    rsi
   140015dd8:	ret    0xe9eb
   140015ddb:	xchg   ecx,eax
   140015ddc:	test   DWORD PTR [rdi+0x38],ebx
   140015ddf:	add    BYTE PTR [rcx+0x5b7fe614],bl
   140015de5:	clc    
   140015de6:	iret   
   140015de7:	and    DWORD PTR [rbx+rsi*4-0x2207a611],edi
   140015dee:	out    0x77,eax
   140015df0:	clc    
   140015df1:	scas   eax,DWORD PTR es:[rdi]
   140015df2:	adc    eax,0x39fe647d
   140015df7:	adc    eax,0xc756fa79
   140015dfc:	(bad)  
   140015dfd:	fsub   st(1),st
   140015dff:	(bad)  
   140015e00:	sar    BYTE PTR [rax],1
   140015e02:	movabs gs:0x899801968aa1eed0,al
   140015e0c:	rex.W mov dl,sil
   140015e0f:	adc    edx,DWORD PTR [rax]
   140015e11:	scas   al,BYTE PTR es:[rdi]
   140015e12:	mov    WORD PTR [rsp+riz*8-0x3a3f46f4],ds
   140015e19:	jnp    0x140015e1e
   140015e1b:	and    bh,BYTE PTR [rax+0x32769360]
   140015e21:	push   0xfffffffffffffff9
   140015e23:	inc    esp
   140015e25:	fst    DWORD PTR [rip+0xe64220]        # 0x140e7a04b
   140015e2b:	in     al,dx
   140015e2c:	rex.RXB
   140015e2d:	rex.WRXB cmps BYTE PTR es:[rsi],BYTE PTR es:[rdi]
   140015e30:	cmp    al,0x4a
   140015e32:	retf   
   140015e33:	(bad)  
   140015e34:	out    dx,al
   140015e35:	pop    rsi
   140015e36:	xor    DWORD PTR [rax],0xfffffff3
   140015e39:	int3   
   140015e3a:	(bad)  
   140015e3b:	iret   
   140015e3c:	xchg   edi,edi
   140015e3e:	jmp    0x11b006d9a
   140015e43:	rex.RXB (bad) 
   140015e45:	out    dx,eax
   140015e46:	jnp    0x140015dfc
   140015e48:	loope  0x140015dfa
   140015e4a:	xchg   BYTE PTR [rsi+rdi*8-0x7331d93b],bh
   140015e51:	add    cl,BYTE PTR [rdx+0x24]
   140015e54:	push   rax
   140015e55:	(bad)  
   140015e56:	xchg   ebp,eax
   140015e57:	repz mov bl,0x29
   140015e5a:	(bad)  
   140015e5b:	(bad)  
   140015e5c:	jg     0x140015e31
   140015e5e:	add    BYTE PTR [rax+0x1e],ch
   140015e61:	rex.WXB jnp 0x140015df3
   140015e64:	jge    0x140015e0b
   140015e66:	cmp    esi,esp
   140015e68:	mov    DWORD PTR [rbx+0x8dcf2e3],ebx
   140015e6e:	jne    0x140015ecf
   140015e70:	rex.WRB loopne 0x140015e71
   140015e73:	lods   al,BYTE PTR ds:[rsi]
   140015e74:	add    BYTE PTR [rsp+rbp*4+0x9],al
   140015e78:	cmp    DWORD PTR [rdx-0x7ec9d9ab],ebx
   140015e7e:	(bad)  
   140015e7f:	mov    edx,0xdb2fb2b2
   140015e84:	div    DWORD PTR [rsi+0x6f]
   140015e87:	mov    BYTE PTR [rsi+rsi*8-0x705c17cd],r11b
   140015e8f:	(bad)  
   140015e90:	out    0xb2,eax
   140015e92:	pop    rdi
   140015e93:	sar    DWORD PTR [rcx+0x42],cl
   140015e96:	(bad)  
   140015e97:	fistp  WORD PTR [rdi+0x2e]
   140015e9a:	rcr    BYTE PTR [rcx+0x6104edb6],0xad
   140015ea1:	jg     0x140015ec0
   140015ea3:	add    BYTE PTR [rip+0xffffffffc6faddd7],bh        # 0x106fc3c80
   140015ea9:	imul   ebp,DWORD PTR [rdi],0x7f
   140015eac:	(bad)  
   140015ead:	imul   edi,edi,0x7d
   140015eb0:	fucomp st(1)
   140015eb2:	mov    ecx,0x1268c193
   140015eb7:	push   rax
   140015eb8:	xchg   ecx,eax
   140015eb9:	mov    al,0xf9
   140015ebb:	fiadd  WORD PTR [rip+0x62003948]        # 0x1a2019809
   140015ec1:	imul   ebp,DWORD PTR [rdx+0x6c2a19b4],0xd4f11ac4
   140015ecb:	rcr    DWORD PTR [rax+0x7d],cl
   140015ece:	repnz (bad) [rdi]
   140015ed1:	(bad)  
   140015ed2:	rcr    DWORD PTR [rcx],1
   140015ed4:	lahf   
   140015ed5:	(bad)  
   140015ed7:	stos   BYTE PTR es:[rdi],al
   140015ed8:	mov    DWORD PTR [rsi+0x430b7d91],ebx
   140015ede:	mov    ebp,0x71d6f41d
   140015ee3:	push   rdi
   140015ee4:	rex.XB cmc 
   140015ee6:	adc    ebp,0xb0b15d26
   140015eec:	mov    esp,0x8fcc33b4
   140015ef1:	movsxd esi,DWORD PTR [rax-0x12]
   140015ef4:	and    al,0x86
   140015ef6:	addr32 fs in eax,0xde
   140015efa:	push   0x7e
   140015efc:	(bad)  
   140015efd:	(bad)  
   140015efe:	repnz cmp al,0xe2
   140015f01:	ficom  DWORD PTR [rdx]
   140015f03:	(bad)
   140015f08:	mov    WORD PTR cs:[rbx-0x56953378],?
   140015f0f:	xchg   ebx,eax
   140015f10:	ss hlt 
   140015f12:	(bad)  
   140015f13:	jbe    0x140015ef3
   140015f15:	(bad)  
   140015f16:	lods   eax,DWORD PTR ds:[rsi]
   140015f17:	cmp    edi,ebx
   140015f19:	rex.WR scas al,BYTE PTR es:[rdi]
   140015f1b:	mov    eax,0x3b7e5893
   140015f20:	(bad)  
   140015f21:	(bad)  
   140015f22:	jo     0x140015ef3
   140015f24:	lea    ebx,[rdi]
   140015f26:	sub    BYTE PTR [rdi+0x1],al
   140015f29:	(bad)  
   140015f2a:	rex.WX
   140015f2b:	rex.XB fstp QWORD PTR [r14-0x4d]
   140015f2f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015f30:	es (bad) 
   140015f32:	out    0xf3,al
   140015f34:	sbb    ebp,DWORD PTR [rdx+0x4b5fc670]
   140015f3a:	or     BYTE PTR [rbx-0x1f],0xf
   140015f3e:	outs   dx,BYTE PTR ds:[rsi]
   140015f3f:	lods   eax,DWORD PTR ds:[rsi]
   140015f40:	fcmovnb st,st(2)
   140015f42:	pop    rdi
   140015f43:	data16 sti 
   140015f45:	push   rcx
   140015f46:	fs neg ebp
   140015f49:	sub    eax,0xc72d17b4
   140015f4e:	fist   WORD PTR [rcx-0x55e9d27a]
   140015f54:	rex.WX sub cl,BYTE PTR [rdx-0x675975ee]
   140015f5b:	add    ch,BYTE PTR [rbx]
   140015f5d:	cmp    dl,BYTE PTR [rax-0x6e]
   140015f60:	(bad)  
   140015f62:	in     eax,dx
   140015f63:	sbb    al,0x58
   140015f65:	enter  0x233f,0x4
   140015f69:	rex.WXB neg r15b
   140015f6c:	xchg   esp,eax
   140015f6d:	(bad)  
   140015f6e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140015f6f:	(bad)  
   140015f70:	retf   
   140015f71:	ret    
   140015f72:	nop
   140015f73:	jns    0x140015fc2
   140015f75:	add    DWORD PTR [rsi-0x26ba83c4],ebp
   140015f7b:	adc    BYTE PTR [rax+0xb],ah
   140015f7e:	(bad)  
   140015f7f:	popf   
   140015f80:	sub    eax,0x11b0b00a
   140015f85:	mov    edi,0x9dd1d1f6
   140015f8a:	mov    edi,0x75be6ff5
   140015f8f:	loopne 0x140015fc2
   140015f91:	pushf  
   140015f92:	fxch   st(2)
   140015f94:	xchg   edi,eax
   140015f95:	ret    0x980d
   140015f98:	add    al,0x3e
   140015f9a:	cmovb  ebp,DWORD PTR [rbp-0x19309e90]
   140015fa1:	adc    bl,al
   140015fa3:	fsub   st(5),st
   140015fa5:	stc    
   140015fa6:	push   rdi
   140015fa7:	cmp    eax,0x7f7aafa3
   140015fac:	cwde   
   140015fad:	cld    
   140015fae:	vpaddq ymm7,ymm12,YMMWORD PTR [rbp+rdi*1+0x1e5010f7]
   140015fb7:	rex or eax,0xc2f86257
   140015fbd:	xor    al,0xc
   140015fbf:	rex.X movabs ds:0x4b959922a4981297,eax
   140015fc9:	sub    BYTE PTR [rax],0xd2
   140015fcc:	es xor esi,eax
   140015fcf:	mov    ecx,0x33fd5ff7
   140015fd4:	mov    edx,0x3cf10ff5
   140015fd9:	leave  
   140015fda:	shr    bh,0x7f
   140015fdd:	add    eax,0x208d9c00
   140015fe2:	xor    al,0x25
   140015fe4:	rcr    BYTE PTR [rcx],1
   140015fe6:	sbb    al,0xd9
   140015fe8:	cmp    eax,0xef5dcb78
   140015fed:	cld    
   140015fee:	cdq    
   140015fef:	mov    esi,0x117fa1c1
   140015ff4:	cmp    DWORD PTR [rsi],0xaa8d0cb
   140015ffa:	ins    BYTE PTR es:[rdi],dx
   140015ffb:	xchg   ebp,eax
   140015ffc:	add    BYTE PTR [rax+rdx*2+0x44],ch
   140016000:	xor    DWORD PTR [rax-0x6b87394e],0x1f
   140016007:	cli    
   140016008:	fdiv   QWORD PTR [rdi]
   14001600a:	data16 lahf 
   14001600c:	jp     0x140016002
   14001600e:	fist   DWORD PTR [rbx-0x662e712b]
   140016014:	rex.WRB cmp r10b,BYTE PTR [r13-0x74c9c9ca]
   14001601b:	xor    edx,DWORD PTR [rdx-0x21]
   14001601e:	scas   al,BYTE PTR es:[rdi]
   14001601f:	mov    ebp,0xae87bdfd
   140016024:	mov    eax,0xede27434
   140016029:	rex.XB retf 
   14001602b:	push   rbx
   14001602c:	out    dx,eax
   14001602d:	fnstsw WORD PTR [rip+0xffffffffbe96ea7f]        # 0xfe984ab2
   140016033:	mov    ecx,0x4fcf50f1
   140016038:	and    DWORD PTR [rsi],ebp
   14001603a:	movabs al,cs:0x5742a2aeec445b5e
   140016044:	mov    dl,0xf8
   140016046:	xor    al,0xdc
   140016048:	sub    BYTE PTR [rsi+rbx*2+0x18f24042],ah
   14001604f:	mov    edi,0x5f94b045
   140016054:	sub    edi,DWORD PTR [rdx-0xacc6f10]
   14001605a:	xor    ch,cl
   14001605c:	and    eax,0xf6c61795
   140016061:	(bad)  
   140016062:	jb     0x140016043
   140016064:	fild   WORD PTR [rip+0xffffffff8e5d0dd9]        # 0xce5e6e43
   14001606a:	stos   DWORD PTR es:[rdi],eax
   14001606b:	sbb    esp,DWORD PTR [rdx]
   14001606d:	add    BYTE PTR [rsp+rax*8],ch
   140016070:	xchg   esi,eax
   140016071:	sub    eax,0xcab6407a
   140016076:	xchg   edx,eax
   140016077:	push   rax
   140016078:	(bad)  
   140016079:	cmp    esi,edx
   14001607b:	(bad)  
   14001607c:	in     eax,0x7b
   14001607e:	mov    dl,0xf7
   140016080:	data16 stc 
   140016082:	leave  
   140016083:	mov    al,BYTE PTR [rbx-0x75947de0]
   140016089:	rex.WX fld QWORD PTR [rdx+r9*2-0x6375fe6f]
   140016091:	add    DWORD PTR [rbx-0x4e952bc4],ecx
   140016097:	mov    bh,0x36
   140016099:	std    
   14001609a:	hlt    
   14001609b:	movsxd ebx,DWORD PTR [rax+0x6f]
   14001609e:	jge    0x140016088
   1400160a0:	jge    0x1400160ca
   1400160a2:	rex.WB or BYTE PTR [r15+0x2],bpl
   1400160a6:	(bad)  
   1400160a7:	(bad)  
   1400160a8:	movabs al,ds:0xcfec1a2817f5735a
   1400160b1:	add    al,0xa0
   1400160b3:	(bad)  
   1400160b4:	jp     0x140016040
   1400160b6:	retf   0x780d
   1400160b9:	imul   esi,eax,0x36
   1400160bc:	or     DWORD PTR [rax],ecx
   1400160be:	stc    
   1400160bf:	fs jrcxz 0x14001609b
   1400160c2:	test   esi,ecx
   1400160c4:	jg     0x1400160c0
   1400160c6:	test   eax,0xbbf43ebf
   1400160cb:	(bad)  
   1400160cc:	int3   
   1400160cd:	imul   BYTE PTR [rsi]
   1400160cf:	and    BYTE PTR [rbx],cl
   1400160d1:	(bad)  
   1400160d2:	push   rsi
   1400160d3:	loope  0x1400160a4
   1400160d5:	movabs al,ds:0xb02be7d9fd08f9fc
   1400160de:	pop    rbp
   1400160df:	adc    DWORD PTR [rdx+rax*8-0x122b3c24],esi
   1400160e6:	push   QWORD PTR [rax-0x19]
   1400160e9:	icebp  
   1400160ea:	(bad)  
   1400160eb:	mov    edi,0x3e7ed686
   1400160f0:	xor    BYTE PTR [rdi],cl
   1400160f2:	and    eax,0xd272070d
   1400160f7:	inc    BYTE PTR [rax+0x1176197a]
   1400160fd:	(bad)  
   1400160fe:	adc    dl,BYTE PTR [rsp+rax*8-0x70]
   140016102:	cld    
   140016103:	jnp    0x14001615a
   140016105:	adc    ah,cl
   140016107:	pop    rax
   140016108:	rex.RB clc 
   14001610a:	loop   0x14001613b
   14001610c:	repnz imul edi,edi,0xffffffdb
   140016110:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016111:	xor    DWORD PTR [rax-0x9],esp
   140016114:	js     0x140016164
   140016116:	xor    dh,al
   140016118:	xchg   ebp,eax
   140016119:	movabs eax,ds:0x151ae8411b38000
   140016122:	hlt    
   140016123:	fdiv   st(2),st
   140016125:	mov    dh,0x77
   140016127:	mov    esi,0x43c1ef65
   14001612c:	mov    edi,0x1d7d6212
   140016131:	adc    eax,edx
   140016133:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016134:	mov    BYTE PTR [rdx-0x5aa3f77b],bl
   14001613a:	cmp    BYTE PTR [rbx-0x20894544],bh
   140016140:	int3   
   140016141:	leave  
   140016142:	mov    cl,0x3f
   140016144:	jnp    0x140016130
   140016146:	scas   eax,DWORD PTR es:[rdi]
   140016147:	mov    edi,0xcce30f0
   14001614c:	in     eax,dx
   14001614d:	ins    BYTE PTR es:[rdi],dx
   14001614e:	fld    TBYTE PTR [rdx-0x9281443]
   140016154:	ja     0x140016135
   140016156:	mov    ecx,0x3fe4ee7b
   14001615b:	out    dx,eax
   14001615c:	lods   al,BYTE PTR ds:[rsi]
   14001615d:	int3   
   14001615e:	(bad)  
   140016160:	pop    rcx
   140016161:	pop    rbp
   140016162:	rex fcomp QWORD PTR [rbp+rax*2-0x3b]
   140016167:	pop    rbp
   140016168:	push   rsp
   140016169:	(bad)  
   14001616a:	or     cl,cl
   14001616c:	mov    edx,0xfd8d24f8
   140016171:	addr32 mov dl,0xcf
   140016174:	or     DWORD PTR [rip+0x2a116a15],esi        # 0x16a12cb8f
   14001617a:	sub    DWORD PTR [rbp-0x3ecf13da],0xe03c05f3
   140016184:	jno    0x140016181
   140016186:	sbb    al,0xf6
   140016188:	retf   
   140016189:	movabs eax,fs:0x5df8633ea169e22d
   140016193:	clc    
   140016194:	xor    ecx,0x5
   140016197:	(bad)  
   140016198:	xor    ebx,edx
   14001619a:	ja     0x14001611c
   14001619c:	sti    
   14001619d:	cmc    
   14001619e:	fnstenv [rdx]
   1400161a0:	(bad)  
   1400161a1:	push   rcx
   1400161a2:	add    eax,0xc960d815
   1400161a7:	sbb    DWORD PTR ds:[rip+0xffffffff96e58bfa],0xefcf466c        # 0xd6e6edac
   1400161b2:	push   rdi
   1400161b3:	mul    DWORD PTR [rbx]
   1400161b5:	sbb    bh,BYTE PTR [rdi-0x60]
   1400161b8:	test   al,0x82
   1400161ba:	stos   BYTE PTR es:[rdi],al
   1400161bb:	cld    
   1400161bc:	cmp    dl,BYTE PTR [rsi-0x38]
   1400161bf:	mov    al,0x1f
   1400161c1:	stos   BYTE PTR es:[rdi],al
   1400161c2:	add    BYTE PTR [rsi+rdx*4],dl
   1400161c5:	mov    bl,0xde
   1400161c7:	(bad)  
   1400161c8:	sub    DWORD PTR [rbx],ebx
   1400161ca:	push   0xffffffffffffffbe
   1400161cc:	(bad)  
   1400161cd:	ss rex sub ecx,DWORD PTR ds:[rbx]
   1400161d2:	add    eax,0x30029bf2
   1400161d7:	clc    
   1400161d8:	retf   
   1400161d9:	test   DWORD PTR [rbx],esp
   1400161db:	sbb    esi,edx
   1400161dd:	addr32 mov dh,0xf
   1400161e0:	add    ebx,DWORD PTR [rbx]
   1400161e2:	movsxd r11,DWORD PTR [rdi+0x3a]
   1400161e6:	xor    eax,0xf8ff6bf0
   1400161eb:	mov    edx,DWORD PTR [rdi+0x19621e7e]
   1400161f1:	rex.WXB loope 0x1400161d3
   1400161f4:	rex.WRX
   1400161f5:	bnd jge 0x1400161a7
   1400161f8:	(bad)  
   1400161f9:	jg     0x1400161a1
   1400161fb:	lods   eax,DWORD PTR ds:[rsi]
   1400161fc:	lea    esp,[rax-0x31]
   1400161ff:	rex.R ins BYTE PTR es:[rdi],dx
   140016201:	ja     0x140016281
   140016203:	mov    ebp,0xbbb6f67e
   140016208:	ret    0x6fdc
   14001620b:	hlt    
   14001620c:	jb     0x140016205
   14001620e:	xor    eax,0x1baac6e2
   140016213:	rex
   140016214:	lock jo 0x1400161b6
   140016217:	test   eax,0x2f6f4683
   14001621c:	rex push rax
   14001621e:	and    ah,0xbf
   140016221:	mov    al,0x67
   140016223:	and    DWORD PTR [rdi-0x67],esi
   140016226:	mov    ebx,0x7bc8d10f
   14001622b:	jle    0x1400161c6
   14001622d:	pop    rdi
   14001622e:	std    
   14001622f:	rex.WRB in al,0x9c
   140016232:	xor    BYTE PTR [rbx-0x60207e6e],0x1c
   140016239:	rcr    BYTE PTR [rcx-0x7bec8c4a],0x9
   140016240:	sbb    dil,BYTE PTR [rdi]
   140016243:	cli    
   140016244:	fdivr  st(1),st
   140016246:	xchg   ebp,eax
   140016247:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016248:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016249:	rex.WRXB out dx,al
   14001624b:	cmp    BYTE PTR [rax+0x68],dh
   14001624e:	cwde   
   14001624f:	cmp    edi,DWORD PTR [rbp-0x7f791551]
   140016255:	outs   dx,BYTE PTR ds:[rsi]
   140016256:	ret    
   140016257:	(bad)  
   140016258:	(bad)  
   140016259:	push   rdi
   14001625a:	(bad)  
   14001625b:	jmp    FWORD PTR [rax-0x14]
   14001625e:	test   eax,0xd1f37e27
   140016263:	iret   
   140016264:	jge    0x140016248
   140016266:	movabs ds:0x4afec2592d4763d3,eax
   14001626f:	sbb    BYTE PTR [rax+0x1f73ffd5],bh
   140016275:	jo     0x1400162d9
   140016277:	xor    edi,DWORD PTR [rbx+rdi*4]
   14001627a:	rex popf 
   14001627c:	rex.WRXB out dx,al
   14001627e:	pop    rdx
   14001627f:	popf   
   140016280:	pop    rcx
   140016281:	out    dx,eax
   140016282:	pop    rbp
   140016283:	pop    rdi
   140016284:	mov    esp,0x4b5346a9
   140016289:	cmp    al,0x5f
   14001628b:	jb     0x140016286
   14001628d:	sub    ebp,DWORD PTR [rdx+0x64]
   140016290:	add    DWORD PTR [rdi],ecx
   140016292:	retf   
   140016293:	out    dx,al
   140016294:	and    esp,DWORD PTR [rcx]
   140016296:	sti    
   140016297:	lods   al,BYTE PTR ds:[rsi]
   140016298:	movabs ds:0xc27ad1d9b32f844f,al
   1400162a1:	xchg   ebp,eax
   1400162a2:	ret    0x640f
   1400162a5:	rex.W int 0x4a
   1400162a8:	rol    cl,cl
   1400162aa:	rex.W cmp al,0x72
   1400162ad:	loope  0x140016266
   1400162af:	js     0x14001626c
   1400162b1:	or     BYTE PTR [rbp-0x10],bl
   1400162b4:	push   rax
   1400162b5:	lahf   
   1400162b6:	cmc    
   1400162b7:	(bad)  
   1400162b8:	unpcklps xmm6,XMMWORD PTR [rbp+0x30e7013]
   1400162bf:	rex.RX sub r10b,BYTE PTR [rsi]
   1400162c2:	out    0xf0,al
   1400162c4:	adc    eax,0x9f63337d
   1400162c9:	xchg   ebx,eax
   1400162ca:	jle    0x1400162f0
   1400162cc:	sbb    BYTE PTR [rbx],r13b
   1400162cf:	rex.WRB adc BYTE PTR [r10-0x1f],r10b
   1400162d3:	mov    tr7,esp
   1400162d6:	or     sil,r8b
   1400162d9:	sbb    DWORD PTR [rax-0x16acf35a],edx
   1400162df:	rex.WX
   1400162e0:	repnz xor DWORD PTR fs:[rax],ebx
   1400162e4:	imul   ecx,DWORD PTR [r10],0x9bcd1484
   1400162eb:	lock (bad) 
   1400162ed:	or     al,BYTE PTR [rax+0x7b00cf8a]
   1400162f3:	scas   eax,DWORD PTR es:[rdi]
   1400162f4:	popf   
   1400162f5:	jno    0x140016344
   1400162f7:	sbb    DWORD PTR [rax+0x15],eax
   1400162fa:	or     BYTE PTR [rsi],0xba
   1400162fd:	pop    rbx
   1400162fe:	js     0x140016373
   140016300:	add    eax,0x33e9b2c8
   140016305:	xlat   BYTE PTR ds:[rbx]
   140016306:	xor    edi,DWORD PTR [rdi+0x3bf6bf19]
   14001630c:	rex.WRXB out dx,al
   14001630e:	cli    
   14001630f:	test   edi,edi
   140016311:	icebp  
   140016312:	inc    BYTE PTR [rbx-0x41f7bff1]
   140016318:	rcl    bh,cl
   14001631a:	(bad)  
   14001631b:	sub    eax,0x5fe08bf
   140016320:	pop    rax
   140016321:	jno    0x1400162da
   140016323:	mov    ch,0x9d
   140016325:	addr32 (bad) 
   140016327:	add    ah,al
   140016329:	(bad)  
   14001632a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001632b:	pop    rbp
   14001632c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001632d:	(bad)  
   14001632e:	jb     0x14001630f
   140016330:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016331:	outs   dx,BYTE PTR ds:[rsi]
   140016332:	or     DWORD PTR [rbx+0x79a9fafb],ecx
   140016338:	xor    eax,0x156fd33b
   14001633d:	(bad)  
   14001633e:	jp     0x1400162db
   140016340:	neg    dl
   140016342:	call   0xd401afd7
   140016347:	or     edx,ebx
   140016349:	xchg   BYTE PTR [rsi-0x12],bh
   14001634c:	scas   al,BYTE PTR es:[rdi]
   14001634d:	fisttp QWORD PTR [rbx-0x30d7a0bd]
   140016353:	jno    0x14001630b
   140016355:	sti    
   140016356:	jp     0x14001633d
   140016358:	and    BYTE PTR [rax+0x12eedb72],al
   14001635e:	ins    BYTE PTR es:[rdi],dx
   14001635f:	in     eax,0x6
   140016361:	(bad)  
   140016362:	pop    rbx
   140016363:	fdivrp st(3),st
   140016365:	pandn  mm1,mm6
   140016368:	int3   
   140016369:	jno    0x140016357
   14001636b:	mov    cl,0x87
   14001636d:	out    dx,eax
   14001636e:	lahf   
   14001636f:	(bad)  
   140016370:	cmp    esi,DWORD PTR [rdx+0x5b50b680]
   140016376:	xor    eax,ebp
   140016378:	(bad)  
   140016379:	cmp    ch,BYTE PTR [rdi]
   14001637b:	xor    BYTE PTR [rsi+0x286db648],dl
   140016381:	rex (bad) 
   140016383:	fnstsw WORD PTR [rcx+0x6fbbea7d]
   140016389:	ds mov esp,0xf6bffe32
   14001638f:	jo     0x140016388
   140016391:	or     cl,BYTE PTR [rcx-0x4e1cbc0]
   140016397:	pop    QWORD PTR [rax+0x4cadca5a]
   14001639d:	(bad)  
   14001639e:	gs call 0x15bf6ecb2
   1400163a4:	in     al,dx
   1400163a5:	and    eax,0x4f935d26
   1400163aa:	or     al,BYTE PTR [rax+rax*1+0x4264008b]
   1400163b1:	rex.WRB out 0x7f,al
   1400163b4:	adc    edx,ebp
   1400163b6:	push   rbx
   1400163b7:	ja     0x140016339
   1400163b9:	or     eax,0xb30a93ea
   1400163be:	mov    edx,0x59b0a50a
   1400163c3:	(bad)  
   1400163c4:	(bad)  
   1400163c5:	sub    edi,ebp
   1400163c7:	adc    eax,0xd0b50064
   1400163cc:	rex.X sbb BYTE PTR [rdx-0x6c],bl
   1400163d0:	rex iret 
   1400163d2:	imul   ebx,ecx,0x87bbea7a
   1400163d8:	and    BYTE PTR [rbx+0x41a45914],ch
   1400163de:	sar    BYTE PTR [rdi-0x70],1
   1400163e1:	sahf   
   1400163e2:	add    eax,DWORD PTR [rbp+0x3c9227b5]
   1400163e8:	add    DWORD PTR [rdi-0x6],ecx
   1400163eb:	add    DWORD PTR [rbp+rcx*1-0x40],edi
   1400163ef:	xor    dh,ah
   1400163f1:	rex.RXB add BYTE PTR [r10-0x7b09e88f],r10b
   1400163f8:	lods   eax,DWORD PTR ds:[rsi]
   1400163f9:	rex.WR pop rcx
   1400163fb:	mov    DWORD PTR [rax+0x43],eax
   1400163fe:	add    eax,0x3ffe140
   140016403:	movabs al,ds:0xac2b0b14816165a0
   14001640c:	xor    cl,BYTE PTR [rbp-0x2fd446c0]
   140016412:	in     al,0x66
   140016414:	cmc    
   140016415:	(bad)  
   140016416:	(bad)  
   140016417:	div    DWORD PTR [rbp-0x605407d]
   14001641d:	icebp  
   14001641e:	sbb    eax,0x5f82c833
   140016423:	sub    dh,BYTE PTR [rsi+0x39]
   140016426:	rol    BYTE PTR [rbp-0x2518074c],0xce
   14001642d:	outs   dx,DWORD PTR ds:[rsi]
   14001642f:	or     eax,0xdbdef40d
   140016434:	jns    0x14001641e
   140016436:	pop    rdi
   140016437:	(bad)  
   140016438:	out    0x8d,al
   14001643a:	lahf   
   14001643b:	(bad)  
   14001643c:	push   rbx
   14001643d:	rex.W in al,dx
   14001643f:	and    eax,0x6ad99e70
   140016444:	cdq    
   140016445:	add    BYTE PTR [rax-0x46f1e434],0xdd
   14001644c:	cwde   
   14001644d:	std    
   14001644e:	ins    DWORD PTR es:[rdi],dx
   14001644f:	xor    BYTE PTR [rdi+0x7b2f847e],cl
   140016455:	out    0x9f,eax
   140016457:	loopne 0x140016429
   140016459:	cmp    dh,cl
   14001645b:	xchg   ebx,eax
   14001645c:	sbb    eax,edi
   14001645e:	retf   0x41
   140016461:	in     eax,0xb6
   140016463:	pop    rbp
   140016464:	stos   DWORD PTR es:[rdi],eax
   140016465:	fisubr DWORD PTR [rbx-0x2d]
   140016468:	js     0x140016447
   14001646a:	push   rbx
   14001646b:	iret   
   14001646c:	cmp    al,0xf1
   14001646e:	int3   
   14001646f:	test   eax,0x6a789e67
   140016474:	jne    0x1400164d7
   140016476:	outs   dx,BYTE PTR ds:[rsi]
   140016477:	or     ecx,ebx
   140016479:	retf   0xc59b
   14001647c:	(bad)  
   14001647d:	(bad)  
   14001647e:	rex.B test eax,0xf2c4ce0c
   140016484:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016485:	lods   eax,DWORD PTR ds:[rsi]
   140016486:	fistp  WORD PTR [rdi+0x227fdfe8]
   14001648c:	jb     0x140016488
   14001648e:	fidivr DWORD PTR [rsi+0x7b9bf9f5]
   140016494:	rcr    ch,1
   140016496:	(bad)  
   140016497:	mov    ecx,0x2fd585fe
   14001649c:	test   bh,bl
   14001649e:	jb     0x140016492
   1400164a0:	mov    ebp,0x71320f0a
   1400164a5:	leave  
   1400164a6:	(bad)  
   1400164a7:	ins    BYTE PTR es:[rdi],dx
   1400164a8:	js     0x14001648a
   1400164aa:	mov    ?,WORD PTR [rbx+0xf7125f5]
   1400164b0:	rex.WR clc 
   1400164b2:	add    DWORD PTR [rcx+0x8],edx
   1400164b5:	mov    cl,0x52
   1400164b7:	add    DWORD PTR [rcx+rsi*4+0x7abaede8],0xb901489
   1400164c2:	push   rsi
   1400164c3:	xor    al,0xc2
   1400164c5:	rex.WRXB std 
   1400164c7:	clc    
   1400164c8:	sub    bl,BYTE PTR [rax+0x53]
   1400164cb:	rex.WRXB movabs r8,0x130a21a27ad5b685
   1400164d5:	(bad)  
   1400164d6:	adc    eax,0xb04e3b7e
   1400164db:	fs lahf 
   1400164dd:	(bad)  
   1400164de:	retf   0x9a02
   1400164e1:	in     eax,dx
   1400164e2:	(bad)  
   1400164e3:	ja     0x1400164ec
   1400164e5:	mov    esp,0x15c02076
   1400164ea:	push   rbp
   1400164eb:	fdecstp 
   1400164ed:	retf   
   1400164ee:	jae    0x140016506
   1400164f0:	fdiv   st(2),st
   1400164f2:	(bad)  
   1400164f4:	stc    
   1400164f5:	cmp    esp,ebx
   1400164f7:	rex.X cwde 
   1400164f9:	sub    al,0xa2
   1400164fb:	push   rcx
   1400164fc:	mov    eax,0x3b3c8002
   140016501:	rex rol DWORD PTR [rcx-0x1de08f],1
   140016508:	(bad)  
   140016509:	add    eax,0x5cba3c36
   14001650e:	std    
   14001650f:	ficomp WORD PTR [rbp-0x9]
   140016512:	pop    rbp
   140016513:	cmc    
   140016514:	jmp    0x140016595
   140016516:	xor    edx,edi
   140016518:	cmp    ecx,DWORD PTR [rdi-0x15320694]
   14001651e:	addr32 xchg edi,eax
   140016520:	out    dx,eax
   140016521:	in     eax,0x12
   140016523:	jle    0x140016505
   140016525:	mov    esp,0xe0016c2b
   14001652a:	jnp    0x1400164c7
   14001652c:	add    ecx,DWORD PTR [rdi]
   14001652e:	mov    esp,0x1a9dce39
   140016533:	movabs eax,ds:0x839a6ab5149337cd
   14001653c:	repnz sbb eax,0x430fd1c8
   140016542:	add    dh,cl
   140016544:	adc    al,0x68
   140016546:	or     BYTE PTR [rcx+0x697b4318],bl
   14001654c:	jrcxz  0x1400164f7
   14001654e:	mov    edi,0xcb4781c0
   140016553:	movsxd ebx,DWORD PTR [rdi+0x32bc0509]
   140016559:	adc    DWORD PTR [rax-0x47],eax
   14001655c:	popf   
   14001655d:	fld    st(7)
   14001655f:	mov    dl,0xd7
   140016561:	mov    dh,0x9d
   140016563:	sub    eax,0x9f76737c
   140016568:	scas   eax,DWORD PTR es:[rdi]
   140016569:	rex.WRB in al,0xd8
   14001656c:	icebp  
   14001656d:	rex.WX
   14001656e:	repnz mov cl,0xe7
   140016571:	mov    edx,0xef87a385
   140016576:	cwde   
   140016577:	jnp    0x14001656d
   140016579:	ret    
   14001657a:	std    
   14001657b:	mov    esp,0xf0456b71
   140016580:	(bad)  
   140016581:	ds rex.RX
   140016583:	sbb    r10,QWORD PTR [rcx]
   140016586:	(bad)  
   140016587:	(bad)  
   140016588:	scas   eax,DWORD PTR es:[rdi]
   140016589:	sub    DWORD PTR [rdi-0x55],esi
   14001658c:	(bad)  
   14001658d:	cdq    
   14001658e:	add    esi,eax
   140016590:	lods   al,BYTE PTR ds:[rsi]
   140016591:	cmp    eax,0xadff4213
   140016596:	push   0xffffffffa4d58379
   14001659b:	adc    edi,DWORD PTR [rsi]
   14001659d:	scas   al,BYTE PTR es:[rdi]
   14001659f:	(bad)  
   1400165a0:	loop   0x140016591
   1400165a2:	out    0x8b,al
   1400165a4:	xchg   edi,eax
   1400165a5:	xor    eax,0x3f09c1fd
   1400165aa:	retf   0x3921
   1400165ad:	fist   DWORD PTR [rdi-0x75]
   1400165b0:	js     0x14001655e
   1400165b2:	rol    DWORD PTR [rdi+0x7ef1ff75],1
   1400165b8:	add    BYTE PTR [rdx+0x3f3ee3ec],bl
   1400165be:	cdq    
   1400165bf:	jmp    0x140016553
   1400165c1:	mov    ecx,0x62006f05
   1400165c6:	(bad)  
   1400165c7:	or     eax,0x8b14309a
   1400165cc:	jrcxz  0x1400165d2
   1400165ce:	and    ebp,DWORD PTR [rip+0x3fbc0d59]        # 0x17fbd732d
   1400165d4:	sbb    BYTE PTR [rax-0x23],bh
   1400165d7:	jg     0x14001662e
   1400165d9:	(bad)  
   1400165da:	hlt    
   1400165db:	adc    eax,0xeced4525
   1400165e0:	rex.XB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400165e2:	adc    DWORD PTR [rdx],eax
   1400165e4:	mul    bh
   1400165e6:	add    edx,DWORD PTR [rdx+0x1bee4ee8]
   1400165ec:	rol    BYTE PTR [rip+0xffffffff88802366],0x9f        # 0xc8818959
   1400165f3:	pop    rax
   1400165f4:	call   0x12f8085f5
   1400165f9:	adc    edx,DWORD PTR [rdi-0x3]
   1400165fc:	(bad)  
   1400165fd:	shl    DWORD PTR fs:[rdi],0x17
   140016601:	(bad)  
   140016602:	adc    edi,DWORD PTR [rbp+0x2f]
   140016605:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016606:	loopne 0x1400165a7
   140016608:	imul   ebx,ebx,0x3e4b6f3e
   14001660e:	stos   DWORD PTR es:[rdi],eax
   14001660f:	idiv   DWORD PTR [rdi]
   140016611:	(bad)  
   140016612:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016613:	(bad)  
   140016615:	(bad)  
   140016616:	(bad)  
   140016617:	std    
   140016618:	fild   QWORD PTR [rdx-0x1a]
   14001661b:	and    DWORD PTR [rdx],0xfffffff5
   14001661e:	cmp    DWORD PTR [rcx],esi
   140016620:	enter  0xb026,0xd1
   140016624:	sbb    eax,0xb645b56
   140016629:	mov    esp,DWORD PTR [rsi+rax*1]
   14001662c:	push   rsi
   14001662d:	cmp    BYTE PTR [rcx+rsi*8-0x61],bh
   140016631:	loope  0x140016609
   140016633:	(bad)  
   140016634:	fwait
   140016635:	rex.RB mov r13d,0x8190738c
   14001663b:	scas   eax,DWORD PTR es:[rdi]
   14001663c:	rex.WR add al,0x50
   14001663f:	outs   dx,BYTE PTR ds:[rsi]
   140016640:	scas   eax,DWORD PTR es:[edi]
   140016642:	sub    al,0x3c
   140016644:	push   rbx
   140016645:	(bad)  
   140016646:	rex.RX (bad) 
   140016648:	jle    0x14001663d
   14001664a:	test   esi,0xe76df3e6
   140016650:	sbb    al,0xec
   140016652:	jg     0x14001667b
   140016654:	mov    esp,DWORD PTR [rsi+0x1a57867b]
   14001665a:	or     bh,BYTE PTR [rdi+0x7d]
   14001665d:	js     0x1400166c2
   14001665f:	(bad)  
   140016660:	or     eax,0xcb7ef135
   140016665:	stos   BYTE PTR es:[rdi],al
   140016666:	adc    ebx,DWORD PTR [rdi+0x3e]
   140016669:	or     ecx,DWORD PTR [rbx+rsi*1+0x5bdacefd]
   140016670:	fdivr  QWORD PTR [rdi]
   140016672:	(bad)  
   140016673:	rol    BYTE PTR [rbx-0x6aae0606],1
   140016679:	rex.R
   14001667a:	rex.WRX xlat BYTE PTR ds:[rbx]
   14001667c:	xor    eax,0xba773f9f
   140016681:	adc    DWORD PTR [rcx],eax
   140016683:	mov    ch,0xda
   140016685:	cli    
   140016686:	nop
   140016687:	jge    0x1400166fc
   140016689:	gs sti 
   14001668b:	int    0xf2
   14001668d:	fwait
   14001668e:	xor    bh,al
   140016690:	push   0x4534061
   140016695:	rex.RB fmul DWORD PTR [r14]
   140016698:	(bad)  
   140016699:	movabs ds:0xb4918fe1104dcc1b,al
   1400166a2:	lods   eax,DWORD PTR ds:[rsi]
   1400166a3:	cwde   
   1400166a4:	jno    0x1400166b2
   1400166a6:	sub    al,BYTE PTR [r9]
   1400166a9:	add    edi,DWORD PTR [rdi+riz*4]
   1400166ac:	fist   WORD PTR [rdx+0x7e]
   1400166af:	in     eax,dx
   1400166b0:	ja     0x1400166eb
   1400166b2:	xchg   edx,eax
   1400166b3:	add    BYTE PTR [rdi+0x34],cl
   1400166b6:	repnz mov al,0x9f
   1400166b9:	sbb    DWORD PTR [rax-0x7d],esi
   1400166bc:	cmp    BYTE PTR [rax+0x20aa40ba],al
   1400166c2:	add    DWORD PTR [rcx+0x3],0x14
   1400166c6:	sti    
   1400166c7:	(bad)  
   1400166c8:	rex.WR movabs rsi,0x14c7d9092d72892b
   1400166d2:	add    BYTE PTR [rbx],dl
   1400166d4:	lods   eax,DWORD PTR ds:[rsi]
   1400166d5:	jg     0x14001674e
   1400166d7:	scas   al,BYTE PTR es:[rdi]
   1400166d8:	out    dx,eax
   1400166d9:	(bad)  
   1400166da:	fdivp  st(2),st
   1400166dc:	leave  
   1400166dd:	sub    edi,DWORD PTR [rdi+0x1f]
   1400166e0:	addr32 (bad) 
   1400166e2:	(bad)  
   1400166e3:	xchg   edi,eax
   1400166e4:	(bad)  
   1400166e5:	repnz lahf 
   1400166e7:	imul   edi,DWORD PTR [rbx],0x7b
   1400166ea:	imul   edi,DWORD PTR [rbx+rax*1],0xeef0cfe0
   1400166f1:	mov    cl,0x4b
   1400166f3:	mov    al,0xfe
   1400166f5:	popf   
   1400166f6:	sub    eax,edx
   1400166f8:	(bad)  
   1400166f9:	in     eax,dx
   1400166fa:	xor    eax,0xbfa0a230
   1400166ff:	and    BYTE PTR [rsi],bh
   140016701:	mov    WORD PTR [rdi],?
   140016703:	es out 0x4a,eax
   140016706:	sub    al,0x8f
   140016708:	add    BYTE PTR [rax],al
   14001670a:	and    dl,dl
   14001670c:	movabs eax,ds:0x71dec39f33f568ab
   140016715:	pushf  
   140016716:	and    esp,DWORD PTR [rdi]
   140016718:	loopne 0x1400166af
   14001671a:	scas   eax,DWORD PTR es:[rdi]
   14001671b:	add    BYTE PTR [rax+0x3083d3e7],al
   140016721:	or     ebp,esi
   140016723:	or     esp,DWORD PTR [rip+0x3e4ece7a]        # 0x17e5035a3
   140016729:	add    al,BYTE PTR [rax]
   14001672b:	rex.WRXB hlt 
   14001672d:	in     al,dx
   14001672e:	pop    rdx
   14001672f:	scas   al,BYTE PTR es:[rdi]
   140016730:	sar    DWORD PTR [rbx+rsi*8-0x6e],1
   140016734:	int    0xd9
   140016736:	mov    ebx,0x15b0f06a
   14001673b:	jrcxz  0x140016741
   14001673d:	retf   
   14001673e:	retf   0xd833
   140016741:	stos   DWORD PTR es:[rdi],eax
   140016742:	(bad)  
   140016743:	xor    al,0x32
   140016745:	jmp    0x1415abdf4
   14001674a:	add    al,0x85
   14001674c:	cld    
   14001674d:	rex.RX idiv BYTE PTR [rcx+0x3d]
   140016751:	mov    edi,0x9944d8fa
   140016756:	or     al,0xc
   140016758:	pop    rsi
   140016759:	jne    0x140016782
   14001675b:	retf   0x72a0
   14001675e:	rex.RB xchg r8d,eax
   140016760:	test   DWORD PTR [rdi+0x5c],ebx
   140016763:	(bad)  
   140016764:	rex.RX push rbp
   140016766:	add    eax,0x3657cfef
   14001676b:	loop   0x140016721
   14001676d:	push   rbp
   14001676e:	jns    0x14001674d
   140016770:	out    dx,eax
   140016771:	xlat   BYTE PTR ds:[rbx]
   140016772:	add    bl,BYTE PTR [rax+riz*4-0x38617c51]
   140016779:	or     DWORD PTR [rdx+0x2f],eax
   14001677c:	sbb    eax,0x6c1e5ca6
   140016781:	xlat   BYTE PTR ds:[rbx]
   140016782:	rex.WB enter 0xbf21,0xa0
   140016787:	xchg   ebx,eax
   140016788:	iret   
   140016789:	jl     0x140016788
   14001678b:	adc    ch,dh
   14001678d:	jmp    0x14001674c
   14001678f:	jb     0x1400167d2
   140016791:	test   BYTE PTR [rdx+0x3655ef2e],dl
   140016797:	sti    
   140016798:	hlt    
   140016799:	adc    al,0x60
   14001679b:	mov    bh,0xf8
   14001679d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001679e:	fadd   QWORD PTR [rax+0x78263998]
   1400167a4:	sub    BYTE PTR [rbp+rdi*8-0x31f0e4b9],dh
   1400167ab:	hlt    
   1400167ac:	std    
   1400167ad:	sti    
   1400167ae:	ja     0x14001682c
   1400167b0:	cli    
   1400167b1:	mov    bh,BYTE PTR [rdi]
   1400167b3:	rex.RX pop rbx
   1400167b5:	clc    
   1400167b6:	mov    bh,0x13
   1400167b8:	jge    0x140016799
   1400167ba:	(bad)  
   1400167bb:	pop    rbx
   1400167bc:	jnp    0x14001682c
   1400167be:	add    DWORD PTR [rbx-0x1a],ebx
   1400167c1:	xlat   BYTE PTR ds:[rbx]
   1400167c2:	push   rdi
   1400167c3:	js     0x140016829
   1400167c5:	movabs ds:0x6b5be58f5cafa46,al
   1400167ce:	out    dx,eax
   1400167cf:	(bad)  
   1400167d0:	push   rbp
   1400167d1:	jbe    0x14001677d
   1400167d3:	es or  edx,edx
   1400167d6:	sub    dh,bl
   1400167d8:	(bad)  
   1400167d9:	mov    esi,0x747ec511
   1400167de:	xlat   BYTE PTR ds:[rbx]
   1400167df:	out    dx,eax
   1400167e0:	(bad)
   1400167e3:	jrcxz  0x140016801
   1400167e5:	fs loopne 0x140016813
   1400167e8:	fild   WORD PTR [rip+0xffffffffedb73978]        # 0x12db8a166
   1400167ee:	rex.WB
   1400167ef:	rex.WB sbb rax,0xffffffffef7b6428
   1400167f5:	in     al,dx
   1400167f6:	mov    bh,0x6e
   1400167f8:	jg     0x1400167ef
   1400167fa:	repnz icebp 
   1400167fc:	(bad)  
   1400167fd:	mov    WORD PTR [rcx],es
   1400167ff:	sbb    esi,0xffffffe6
   140016802:	sbb    dh,BYTE PTR [rdx+0x58f727b7]
   140016808:	jl     0x1400167e9
   14001680a:	jge    0x1400167c4
   14001680c:	adc    dh,dl
   14001680e:	ret    
   14001680f:	std    
   140016810:	cmp    ah,BYTE PTR [rbx-0x2c]
   140016813:	lods   eax,DWORD PTR ds:[rsi]
   140016814:	ja     0x1400167d5
   140016816:	or     DWORD PTR [rdx+0x62f4f637],eax
   14001681c:	movabs al,ds:0x8f42dfd064f6e390
   140016825:	mov    ah,0x9b
   140016828:	(bad)
   14001682b:	rex.WB retf 0x6016
   14001682f:	sar    DWORD PTR [rdx],0xc
   140016832:	adc    DWORD PTR [rcx+rcx*4+0x58],ebx
   140016836:	retf   
   140016837:	outs   dx,DWORD PTR ds:[rsi]
   140016838:	(bad)  
   140016839:	(bad)  
   14001683a:	movabs eax,ds:0x6d9ebcedfc60bd16
   140016843:	push   0x228a01bd
   140016848:	(bad)  
   140016849:	jrcxz  0x140016850
   14001684b:	or     dl,ch
   14001684d:	neg    BYTE PTR [rax+0x47722032]
   140016853:	rex.WRB movabs r14,0x7e4b0924c19f5f33
   14001685d:	xor    edi,edx
   14001685f:	(bad)  
   140016860:	lods   eax,DWORD PTR ds:[rsi]
   140016861:	adc    ecx,DWORD PTR [rsi]
   140016863:	test   al,0x68
   140016865:	frstor [rsi-0x50eed8f6]
   14001686b:	(bad)  
   14001686c:	cmp    bl,bl
   14001686e:	imul   edi
   140016870:	out    dx,al
   140016871:	(bad)  
   140016872:	in     al,dx
   140016873:	xchg   ebp,eax
   140016874:	(bad)  
   140016875:	rex.RB
   140016876:	rex.WRX out 0xb5,eax
   140016879:	mov    BYTE PTR [rsi+0x27effe4c],cl
   14001687f:	sar    DWORD PTR [rdi],0xd3
   140016882:	xchg   esi,eax
   140016883:	out    0x56,eax
   140016885:	rex.WB (bad) 
   140016887:	test   BYTE PTR [rax],0xe8
   14001688a:	stc    
   14001688b:	rex.RXB xor al,0x7e
   14001688e:	(bad)  [rdi-0x79]
   140016891:	adc    edi,edi
   140016893:	out    0x20,eax
   140016895:	xor    eax,0x50184877
   14001689a:	sahf   
   14001689b:	rex.WRXB push r15
   14001689d:	mov    dl,0x80
   14001689f:	(bad)  
   1400168a0:	stos   DWORD PTR es:[rdi],eax
   1400168a1:	or     DWORD PTR [rdi],esp
   1400168a3:	fdiv   DWORD PTR [rdx+0x6cbb223]
   1400168a9:	push   0x7a1c1ef4
   1400168ae:	neg    DWORD PTR [rdi]
   1400168b0:	repnz movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400168b2:	(bad)  
   1400168b3:	jno    0x1400168cb
   1400168b5:	xor    dh,al
   1400168b7:	(bad)  
   1400168b8:	add    eax,DWORD PTR [rcx]
   1400168ba:	mov    esp,0x5b5b5b5c
   1400168bf:	add    ebx,DWORD PTR [rcx]
   1400168c1:	or     eax,esp
   1400168c3:	jmp    0x11714ac86
   1400168c8:	ins    BYTE PTR es:[rdi],dx
   1400168c9:	pushf  
   1400168ca:	sahf   
   1400168cb:	sbb    esp,edx
   1400168cd:	cmc    
   1400168ce:	mov    bh,0xb
   1400168d0:	movabs ds:0xd9181660545fc4cd,al
   1400168d9:	push   rdi
   1400168da:	xchg   DWORD PTR [rax+0x6f],ebx
   1400168dd:	idiv   ebx
   1400168df:	ins    DWORD PTR es:[rdi],dx
   1400168e0:	fild   WORD PTR [rax+0x2d]
   1400168e3:	mov    dl,0xcd
   1400168e5:	fidiv  DWORD PTR [rsi+0x67]
   1400168e8:	or     DWORD PTR [rsi],0x72d7c1de
   1400168ee:	or     al,0x3c
   1400168f0:	mov    dh,0x4f
   1400168f2:	ficom  DWORD PTR [rbp+0x28]
   1400168f5:	pop    rdx
   1400168f6:	push   rdi
   1400168f7:	pop    rsi
   1400168f8:	(bad)  
   1400168f9:	lods   eax,DWORD PTR ds:[rsi]
   1400168fa:	out    0x1b,al
   1400168fc:	rex.XB
   1400168fd:	lock (bad) 
   1400168ff:	lahf   
   140016900:	push   0xffffffff9e11fe79
   140016905:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016906:	sbb    ebx,DWORD PTR [rbp-0x5a7a73cc]
   14001690c:	iret   
   14001690d:	(bad)  
   14001690e:	(bad)  
   14001690f:	pop    rcx
   140016910:	and    cl,ah
   140016912:	test   dh,bl
   140016914:	ds (bad) 
   140016916:	retf   
   140016917:	iret   
   140016918:	add    eax,0x352ed8a9
   14001691d:	jbe    0x1400168a7
   14001691f:	rex.WRXB (bad) 
   140016921:	loop   0x14001690f
   140016923:	(bad)  
   140016924:	shl    eax,cl
   140016926:	mov    esi,0xf3ec9c28
   14001692b:	sub    esp,DWORD PTR [rbp+rax*1-0xefd7c00]
   140016932:	(bad)  
   140016933:	jl     0x1400168e5
   140016935:	sub    edx,DWORD PTR [rbp+0x51]
   140016938:	sbb    ah,dl
   14001693a:	jge    0x1400169a4
   14001693c:	mov    dh,0xef
   14001693e:	push   rdi
   14001693f:	fdivrp st(5),st
   140016941:	fldcw  WORD PTR [rbx]
   140016943:	out    dx,eax
   140016944:	test   DWORD PTR [rbx+rcx*2+0x57fe5a59],ebp
   14001694b:	xchg   al,dh
   14001694d:	add    esp,edi
   14001694f:	and    dh,BYTE PTR [rsi+0x2e0c31f9]
   140016955:	(bad)  
   140016956:	movabs ds:0xb87b2b8585b78bf7,al
   14001695f:	mov    ecx,0xf697c51a
   140016964:	scas   eax,DWORD PTR es:[rdi]
   140016965:	(bad)  
   140016966:	xchg   ebp,eax
   140016967:	cmp    al,0x8e
   140016969:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001696a:	test   al,0x71
   14001696c:	push   0xfffffffffa9e3798
   140016971:	(bad)  
   140016972:	cmp    al,bh
   140016974:	or     dh,cl
   140016976:	rex.X (bad) 
   140016978:	pop    rsi
   140016979:	push   rsp
   14001697a:	add    BYTE PTR [rdi],ch
   14001697c:	je     0x140016959
   14001697e:	scas   al,BYTE PTR es:[rdi]
   14001697f:	add    al,0x6c
   140016981:	movabs ds:0xa395d6f278affb87,eax
   14001698a:	sti    
   14001698b:	jp     0x14001695d
   14001698d:	mov    ebp,0x9b242dd1
   140016992:	(bad)  
   140016993:	sub    al,0x13
   140016995:	pop    rbp
   140016996:	test   eax,0x3beb8f00
   14001699b:	sti    
   14001699c:	mov    fs,WORD PTR [rdx]
   14001699e:	(bad)  
   14001699f:	push   rax
   1400169a0:	rcr    BYTE PTR [rbx+rsi*8-0x2b],0x4d
   1400169a5:	add    BYTE PTR [rbx-0x78],ah
   1400169a8:	vpminub xmm7,xmm1,xmm1
   1400169ac:	stc    
   1400169ad:	push   rbp
   1400169ae:	adc    eax,0x72b3f854
   1400169b3:	jo     0x14001699a
   1400169b5:	adc    dl,BYTE PTR [rdi+rsi*1-0x2ce5dfe0]
   1400169bc:	scas   eax,DWORD PTR es:[rdi]
   1400169bd:	nop
   1400169be:	(bad)  
   1400169bf:	stos   BYTE PTR es:[rdi],al
   1400169c0:	movabs al,ds:0xf280a97d55b1f29a
   1400169c9:	xchg   ebp,eax
   1400169ca:	(bad)  
   1400169cb:	adc    eax,DWORD PTR [rsi-0x53650be4]
   1400169d1:	(bad)  
   1400169d2:	xchg   edi,eax
   1400169d3:	rex.W jnp 0x1400169da
   1400169d6:	test   al,0x9f
   1400169d8:	outs   dx,BYTE PTR ds:[rsi]
   1400169d9:	stc    
   1400169da:	or     eax,0xef56b026
   1400169df:	rex.WRXB add al,0xb0
   1400169e2:	push   rsi
   1400169e3:	adc    dl,BYTE PTR [rdx+0xdf9775b]
   1400169e9:	sub    al,0x1e
   1400169eb:	loop   0x140016a69
   1400169ed:	(bad)  
   1400169ee:	fiadd  DWORD PTR [rdi+rbx*1]
   1400169f1:	loopne 0x140016a64
   1400169f3:	push   rbp
   1400169f4:	and    al,BYTE PTR [rax-0xc4416f7]
   1400169fa:	mov    ebp,0xcf8ef6bf
   1400169ff:	pop    rsi
   140016a00:	cmc    
   140016a01:	jmp    QWORD PTR [rdx-0x45]
   140016a04:	lock mov ecx,edi
   140016a07:	dec    DWORD PTR [rdx+0x10]
   140016a0a:	jle    0x1400169e7
   140016a0c:	(bad)  
   140016a0d:	out    dx,al
   140016a0e:	(bad)  
   140016a0f:	lock xor esp,esi
   140016a12:	lods   eax,DWORD PTR ds:[rsi]
   140016a13:	jg     0x1400169a0
   140016a15:	xchg   DWORD PTR [rsi-0x1232d888],edi
   140016a1b:	out    dx,eax
   140016a1c:	rex.XB jp 0x140016a2c
   140016a1f:	(bad)  
   140016a20:	test   al,0x64
   140016a22:	icebp  
   140016a23:	xchg   DWORD PTR [rbx+0x22],esi
   140016a26:	movabs ds:0x827f9da50edfe40c,al
   140016a2f:	ret    
   140016a30:	mul    DWORD PTR [rax+0x22f434dd]
   140016a36:	add    bh,BYTE PTR [rax+0x51]
   140016a39:	fcomi  st,st(6)
   140016a3b:	xor    DWORD PTR [rdx+0x1dab668d],0xf37eb9df
   140016a45:	(bad)  
   140016a46:	pop    rbx
   140016a47:	sub    esi,eax
   140016a49:	pop    rsi
   140016a4a:	pop    rdi
   140016a4b:	add    BYTE PTR [rbx+0x7c2fa58c],0x7c
   140016a52:	xor    al,ch
   140016a54:	movabs al,ds:0x54245000068163af
   140016a5d:	and    esi,esp
   140016a5f:	jne    0x140016a55
   140016a61:	sub    BYTE PTR [rax-0x2a],bh
   140016a64:	popf   
   140016a65:	test   esi,edi
   140016a67:	rex.WR sub BYTE PTR [rbx+0x6f82e48],r13b
   140016a6e:	(bad)  
   140016a6f:	fcmovnbe st,st(6)
   140016a71:	ds out dx,eax
   140016a73:	sub    ebp,DWORD PTR [rcx+0x790be4b9]
   140016a79:	out    0x4e,al
   140016a7b:	mov    edi,0xf0b35f79
   140016a80:	rcl    DWORD PTR [rbp+0x112b981],1
   140016a86:	jne    0x140016aad
   140016a88:	xlat   BYTE PTR ds:[rbx]
   140016a89:	(bad)  
   140016a8a:	jmp    0x140016a8c
   140016a8c:	push   0xffffffffad6a3eec
   140016a91:	add    DWORD PTR [rcx-0x878dd1e],edi
   140016a97:	inc    BYTE PTR [rdi]
   140016a99:	xor    BYTE PTR [rbp+0x59f32840],0xc1
   140016aa0:	xchg   ebx,eax
   140016aa1:	jg     0x140016a6f
   140016aa3:	pop    rdi
   140016aa4:	and    BYTE PTR [rdi-0x2b4e9b33],bl
   140016aaa:	cld    
   140016aab:	test   al,0xbd
   140016aad:	verr   WORD PTR [rbp-0x184e8d9]
   140016ab4:	div    DWORD PTR [rdi-0x151982]
   140016aba:	mov    WORD PTR [rbx],?
   140016abc:	sti    
   140016abd:	cld    
   140016abe:	scas   eax,DWORD PTR es:[rdi]
   140016abf:	sub    al,0xe1
   140016ac1:	mov    bh,0xed
   140016ac3:	int3   
   140016ac4:	sub    BYTE PTR [rbx+0x48],dl
   140016ac7:	addr32 je 0x140016a84
   140016aca:	div    ecx
   140016acc:	sahf   
   140016acd:	(bad)  
   140016ace:	mov    edi,0xef4cc2d
   140016ad3:	movabs ds:0x96851c9c94010b7b,al
   140016adc:	or     dl,BYTE PTR [rbx]
   140016ade:	sbb    al,0xa
   140016ae0:	adc    BYTE PTR [rcx],ah
   140016ae2:	or     BYTE PTR [rdi],0xdc
   140016ae5:	mov    ch,al
   140016ae7:	scas   eax,DWORD PTR es:[rdi]
   140016ae8:	jle    0x140016af0
   140016aea:	jnp    0x140016b3b
   140016aec:	loopne 0x140016afa
   140016aee:	retf   
   140016aef:	mov    DWORD PTR [rdi+0x54],ebx
   140016af2:	add    bh,bl
   140016af4:	jmp    0x140016b6c
   140016af6:	(bad)  
   140016af7:	and    al,0x30
   140016af9:	pop    rbp
   140016afa:	in     eax,dx
   140016afb:	fdivr  DWORD PTR [rax+rbx*8]
   140016afe:	int3   
   140016aff:	sbb    eax,0xf2b9bfdd
   140016b04:	fiadd  WORD PTR [rax]
   140016b06:	stos   BYTE PTR es:[rdi],al
   140016b07:	retf   
   140016b08:	clc    
   140016b09:	mov    edi,0xe5af7a41
   140016b0e:	(bad)  
   140016b0f:	push   rsi
   140016b10:	(bad)  
   140016b11:	in     al,0x10
   140016b13:	movabs al,ds:0xa29f9067bd5a6a90
   140016b1c:	cld    
   140016b1d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016b1e:	(bad)  
   140016b1f:	sub    DWORD PTR [rdi],0x33
   140016b22:	cld    
   140016b23:	xchg   ebp,eax
   140016b24:	rex.X (bad) 
   140016b26:	loopne 0x140016ab2
   140016b28:	movabs al,ds:0x5b59d5023f49a578
   140016b32:	js     0x140016b8f
   140016b34:	movsxd ecx,DWORD PTR [rsi+0x5e8fb992]
   140016b3a:	adc    eax,0x9881d1e8
   140016b3f:	mov    edi,0xcadcf4b7
   140016b44:	lods   eax,DWORD PTR ds:[rsi]
   140016b45:	cmp    bl,al
   140016b47:	jp     0x140016b46
   140016b49:	rex.WB mov es,WORD PTR [r9+0x41]
   140016b4d:	or     al,0xaa
   140016b4f:	mov    al,0x3
   140016b51:	sub    BYTE PTR [rip+0xffffffff89c6cd83],0x54        # 0xc9c838db
   140016b58:	xchg   edx,eax
   140016b59:	sub    BYTE PTR [rdx*2-0x2069d286],al
   140016b60:	rex.XB (bad) 
   140016b62:	sub    dh,BYTE PTR [rbx-0x1d73dca2]
   140016b68:	jg     0x140016b22
   140016b6a:	(bad)  
   140016b6b:	cmp    DWORD PTR [rdx+0x1df0f9dc],edi
   140016b71:	lahf   
   140016b72:	mov    esi,0x2ed1b7e6
   140016b77:	loope  0x140016bf6
   140016b79:	or     edi,DWORD PTR gs:[rdi+0x240e76d]
   140016b80:	imul   ecx,DWORD PTR [rax-0xfc1a117],0xffffff8d
   140016b87:	mov    edi,0x4717661f
   140016b8c:	mov    al,0x79
   140016b8e:	(bad)  
   140016b8f:	sub    DWORD PTR [rdx],0xc9a0d1bb
   140016b95:	push   rax
   140016b96:	xchg   esi,eax
   140016b97:	adc    esp,DWORD PTR [rbp+0x347ec7ff]
   140016b9d:	int    0x3d
   140016b9f:	cmp    ah,dh
   140016ba1:	imul   edx,DWORD PTR [rsp+rax*4+0x700545f8],0x4aedb601
   140016bac:	add    BYTE PTR [rax],0xd0
   140016baf:	fcomip st,st(4)
   140016bb1:	sbb    al,0x3a
   140016bb3:	jne    0x140016ba0
   140016bb5:	(bad)  
   140016bb7:	popf   
   140016bb8:	std    
   140016bb9:	(bad)  
   140016bba:	mov    ebp,0x2c2d84d
   140016bbf:	(bad)  
   140016bc0:	fwait
   140016bc1:	ret    0xb326
   140016bc4:	ret    0x59f6
   140016bc7:	shl    DWORD PTR [rdx+0x10b7259b],0x9f
   140016bce:	pop    rcx
   140016bcf:	outs   dx,DWORD PTR ds:[rsi]
   140016bd0:	adc    r14b,r12b
   140016bd3:	not    DWORD PTR [rdi+0x2d]
   140016bd6:	stos   DWORD PTR es:[rdi],eax
   140016bd7:	rex.WRXB mov es,WORD PTR [r12+r15*1]
   140016bdb:	jmp    0x183e43867
   140016be0:	xchg   esi,eax
   140016be1:	in     al,0x32
   140016be3:	(bad)
   140016be6:	icebp  
   140016be7:	add    al,0xc4
   140016be9:	push   0x4e4f72b
   140016bee:	(bad)  
   140016bef:	out    dx,eax
   140016bf0:	or     DWORD PTR [rax+0x51],ebp
   140016bf3:	add    edi,ebx
   140016bf5:	mov    ebp,0x833c0046
   140016bfa:	push   rax
   140016bfb:	or     DWORD PTR [rbp+0x73],eax
   140016bfe:	rex.RXB lods al,BYTE PTR ds:[rsi]
   140016c00:	sub    dl,cl
   140016c02:	fnsave [rsi+0x53]
   140016c05:	(bad)  
   140016c06:	and    BYTE PTR [rdi-0x4],0x51
   140016c0a:	shr    esi,0xbb
   140016c0d:	mov    cl,0x72
   140016c0f:	lahf   
   140016c10:	rex.RXB push r9
   140016c12:	lods   al,BYTE PTR ds:[rsi]
   140016c13:	adc    ecx,DWORD PTR [rax]
   140016c15:	test   BYTE PTR [rcx],0xf9
   140016c18:	pop    rbx
   140016c19:	es (bad) 
   140016c1b:	mov    ebp,edx
   140016c1d:	cli    
   140016c1e:	(bad)  
   140016c1f:	outs   dx,BYTE PTR ds:[rsi]
   140016c20:	std    
   140016c21:	(bad)  
   140016c22:	mov    ch,0xbf
   140016c24:	mov    DWORD PTR [rdi],ebx
   140016c26:	add    al,0xd8
   140016c28:	jg     0x140016be0
   140016c2a:	in     eax,dx
   140016c2b:	cmp    al,0x61
   140016c2d:	ret    0xf38f
   140016c30:	inc    BYTE PTR [rdi+0x6e]
   140016c33:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016c34:	test   DWORD PTR [rbx-0x321c9785],esp
   140016c3a:	add    al,0xf4
   140016c3c:	rex.WX or BYTE PTR [rax],sil
   140016c3f:	fs xchg edi,eax
   140016c41:	mov    DWORD PTR [rbx+0x72],esi
   140016c44:	fs add eax,0x9b423fde
   140016c4a:	jg     0x140016c41
   140016c4c:	rex.WRB mov r12,cs
   140016c4f:	sar    DWORD PTR [rax+0x11],0x45
   140016c53:	add    DWORD PTR [rdi],edx
   140016c55:	adc    eax,0xf2dd8bc0
   140016c5a:	rex push rcx
   140016c5c:	icebp  
   140016c5d:	imul   ebx,DWORD PTR [rax+0x7d1f06ac],0xb7a9c6ed
   140016c67:	ja     0x140016c71
   140016c69:	jnp    0x140016c27
   140016c6b:	out    dx,eax
   140016c6c:	ds int3 
   140016c6e:	rex.WX xchg BYTE PTR [rsi],sil
   140016c71:	movabs ds:0xbf882be49d20594e,eax
   140016c7a:	sbb    dl,dh
   140016c7c:	add    bl,BYTE PTR [rbx+0x43ef0155]
   140016c82:	sub    eax,edi
   140016c84:	and    DWORD PTR [rdi-0xc],esp
   140016c87:	sub    r12b,BYTE PTR [r10-0x5]
   140016c8b:	ror    DWORD PTR [rax],1
   140016c8d:	mov    esi,0x38e404ac
   140016c92:	xor    DWORD PTR [rdi],ebx
   140016c94:	and    edx,DWORD PTR [rsi+rbp*2+0x39909180]
   140016c9b:	scas   al,BYTE PTR es:[rdi]
   140016c9c:	(bad)  
   140016c9d:	movabs ds:0xa9611a2809da9191,eax
   140016ca6:	mov    dl,0x1b
   140016ca8:	or     al,dl
   140016caa:	paddsb mm4,QWORD PTR [rcx]
   140016cad:	rex.WRXB or r15b,BYTE PTR [r9]
   140016cb0:	sub    ah,cl
   140016cb2:	xor    eax,0x3e8c64c8
   140016cb7:	adc    r12,rsi
   140016cba:	rex.WR
   140016cbb:	rex jrcxz 0x140016cc9
   140016cbe:	loopne 0x140016d1f
   140016cc0:	(bad)  
   140016cc1:	retf   
   140016cc2:	mov    WORD PTR [rax],es
   140016cc4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016cc5:	(bad)  
   140016cc6:	ret    0x7e5f
   140016cc9:	loopne 0x140016c76
   140016ccb:	xchg   edi,eax
   140016ccc:	jmp    FWORD PTR [rdi]
   140016cce:	xor    ebx,DWORD PTR [rbx]
   140016cd0:	(bad)  
   140016cd1:	xor    dh,BYTE PTR [rsi+0x183f7e13]
   140016cd7:	ret    0x9b6f
   140016cda:	int3   
   140016cdb:	lods   eax,DWORD PTR ds:[rsi]
   140016cdc:	in     al,dx
   140016cdd:	(bad)  
   140016cde:	retf   
   140016cdf:	out    0x4a,al
   140016ce1:	loopne 0x140016d21
   140016ce3:	fdivp  st(3),st
   140016ce5:	fsub   QWORD PTR [rbp-0x4c]
   140016ce8:	neg    BYTE PTR [rbp-0x79094b3d]
   140016cee:	or     BYTE PTR [rbx+rsi*4],cl
   140016cf1:	jb     0x140016d41
   140016cf3:	in     eax,0xf3
   140016cf5:	(bad)  
   140016cf6:	rex.R pop rdx
   140016cf8:	ja     0x140016ce6
   140016cfa:	rex.R ja 0x140016cf1
   140016cfd:	iret   
   140016cfe:	jno    0x140016cf0
   140016d00:	xchg   r12d,eax
   140016d02:	stc    
   140016d03:	adc    BYTE PTR [rdi],dl
   140016d05:	adc    eax,0x64da05c0
   140016d0a:	nop
   140016d0b:	ins    BYTE PTR es:[rdi],dx
   140016d0c:	and    eax,DWORD PTR [rax]
   140016d0e:	xor    al,0x1b
   140016d10:	(bad)  
   140016d11:	mov    edx,0x4cce6dd7
   140016d16:	mov    fs,WORD PTR [rbp+rdx*4-0x6baffb09]
   140016d1d:	cmp    al,0xfa
   140016d1f:	fdiv   QWORD PTR [rip+0x546b42d7]        # 0x1946caffc
   140016d25:	or     BYTE PTR [rdx+0x68],dh
   140016d28:	stc    
   140016d29:	loop   0x140016d8d
   140016d2b:	ins    DWORD PTR es:[rdi],dx
   140016d2c:	fst    QWORD PTR [rdx-0x84141e9]
   140016d32:	(bad)  [rdi-0x405a820e]
   140016d38:	stos   DWORD PTR es:[rdi],eax
   140016d39:	in     al,dx
   140016d3a:	sbb    BYTE PTR [rcx],dl
   140016d3c:	lods   eax,DWORD PTR ds:[rsi]
   140016d3d:	mov    dh,0xdd
   140016d3f:	icebp  
   140016d40:	or     al,0x9c
   140016d42:	rex
   140016d43:	rex.WXB rol r12,0xac
   140016d47:	or     BYTE PTR [rdx-0x4524111a],al
   140016d4d:	add    dl,ah
   140016d4f:	rcr    BYTE PTR ds:[rbp-0x7e],0x56
   140016d54:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016d55:	movabs eax,ds:0xd23e216f4837dc1
   140016d5e:	rcl    DWORD PTR [rcx+0x4fc2fe59],cl
   140016d64:	push   rbp
   140016d65:	and    eax,0xd0083c61
   140016d6a:	push   rsi
   140016d6b:	or     BYTE PTR [rsi],dh
   140016d6d:	(bad)  [rbx+0x68]
   140016d70:	xor    BYTE PTR [rdi],bh
   140016d72:	fdivr  st,st(1)
   140016d74:	outs   dx,BYTE PTR ds:[rsi]
   140016d75:	clc    
   140016d76:	fcmove st,st(7)
   140016d78:	ds js  0x140016d63
   140016d7b:	pop    rdi
   140016d7c:	(bad)  
   140016d7d:	xor    bl,dl
   140016d7f:	(bad)  
   140016d80:	xchg   DWORD PTR [rdi+0x2a],edx
   140016d83:	(bad)  
   140016d85:	rex.X mov dil,0x73
   140016d88:	out    0xa,eax
   140016d8a:	lock xchg edi,eax
   140016d8c:	jns    0x140016d65
   140016d8e:	test   eax,0xfd7ee81d
   140016d93:	sbb    bl,BYTE PTR [rdx-0x47]
   140016d96:	test   eax,0x7277ef02
   140016d9b:	sar    BYTE PTR [rbp+0x0],1
   140016d9e:	fnstenv [rbx+0x1fb9ef06]
   140016da4:	ret    
   140016da5:	test   esp,0x405ad3a2
   140016dab:	in     al,0xa2
   140016dad:	add    bh,BYTE PTR [rax+0x5c59db10]
   140016db3:	add    edi,0xbf1ff67b
   140016db9:	movsxd esp,ebx
   140016dbb:	clc    
   140016dbc:	jne    0x140016dfb
   140016dbe:	rex.W xlat BYTE PTR ds:[rbx]
   140016dc0:	jns    0x140016e2e
   140016dc2:	pop    rsi
   140016dc3:	rex.XB jg 0x140016dda
   140016dc6:	rex.WX add QWORD PTR [rbx],rcx
   140016dc9:	or     bl,ch
   140016dcb:	movabs ds:0xc5b10d6c5a9d756,eax
   140016dd4:	and    al,0x9d
   140016dd6:	test   BYTE PTR [rbx+rbx*1+0x311b46b0],dl
   140016ddd:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140016ddf:	in     al,0xe9
   140016de1:	(bad)  
   140016de2:	fisubr WORD PTR [rsi+rdi*4]
   140016de5:	sti    
   140016de6:	sti    
   140016de7:	xchg   edx,eax
   140016de8:	or     al,0x54
   140016dea:	rex.RB jno 0x140016e14
   140016ded:	rex.WX (bad) 
   140016def:	(bad)  
   140016df0:	lahf   
   140016df1:	fild   WORD PTR [rdx-0x70]
   140016df4:	cdq    
   140016df5:	push   rdi
   140016df6:	xor    dh,bh
   140016df8:	add    DWORD PTR [rax+0x76500f5a],ecx
   140016dfe:	or     al,0x8a
   140016e00:	fcmove st,st(0)
   140016e02:	shr    dh,1
   140016e04:	ret    
   140016e05:	jmp    0x140016e02
   140016e07:	add    esp,DWORD PTR [rax+0x2b9a4e59]
   140016e0d:	add    BYTE PTR [rax-0x6b],dh
   140016e10:	mov    DWORD PTR [rsi+0x72],ecx
   140016e13:	mov    dl,0xcf
   140016e15:	std    
   140016e16:	and    BYTE PTR [rax-0x61],cl
   140016e19:	(bad)  
   140016e1a:	in     eax,0xf6
   140016e1c:	rex.WX (bad) 
   140016e1e:	add    BYTE PTR [rbp-0x294ffe9e],al
   140016e24:	rcl    BYTE PTR [rbx],1
   140016e26:	mov    edi,0x9fbef8f1
   140016e2b:	std    
   140016e2c:	fcomp  st(0)
   140016e2e:	shr    BYTE PTR [rcx],1
   140016e30:	ins    BYTE PTR es:[rdi],dx
   140016e31:	idiv   ecx
   140016e33:	jg     0x140016e65
   140016e35:	test   DWORD PTR [rdi+0x12eccedc],edi
   140016e3b:	add    BYTE PTR [rax],al
   140016e3d:	(bad)  
   140016e3e:	and    cl,0xb9
   140016e41:	sub    DWORD PTR [rsi+rdi*4+0x70],esi
   140016e45:	xor    ebp,DWORD PTR [rip+0xffffffffbe0bdf5e]        # 0xfe0d4da9
   140016e4b:	pop    rsp
   140016e4c:	mov    esp,0x117bce26
   140016e51:	and    DWORD PTR [rdx-0x26],edx
   140016e54:	ja     0x140016e93
   140016e56:	xchg   esi,eax
   140016e57:	(bad)  
   140016e58:	(bad)  
   140016e59:	scas   eax,DWORD PTR es:[rdi]
   140016e5a:	pop    rbx
   140016e5b:	push   rsi
   140016e5c:	adc    edi,DWORD PTR [rsi-0x2bd1ff58]
   140016e62:	mov    dh,0xdd
   140016e64:	adc    eax,0x1a452ea0
   140016e69:	rex.WRX imul r8,QWORD PTR [rdi+0x2e],0x4d
   140016e6e:	or     edi,DWORD PTR [rdi]
   140016e70:	sbb    al,0x3
   140016e72:	jne    0x140016e76
   140016e74:	mov    WORD PTR [rcx-0x5e9054c9],es
   140016e7a:	mov    ebp,0xcc6c0b90
   140016e7f:	(bad)  
   140016e80:	sbb    esi,esp
   140016e82:	(bad)  
   140016e83:	and    bh,BYTE PTR [rsi+rsi*4-0x7bf3914e]
   140016e8a:	push   rax
   140016e8b:	test   eax,0xd7b90fc5
   140016e90:	jle    0x140016e1e
   140016e92:	rex adc eax,0x5e508b9
   140016e98:	(bad)  
   140016e99:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016e9a:	xor    BYTE PTR [rdx-0x2a],bl
   140016e9d:	ds repz add al,0x16
   140016ea1:	rex.RX mov WORD PTR [rip+0xffffffffc2307a39],ss        # 0x10231e8e1
   140016ea8:	rcr    BYTE PTR [rcx],1
   140016eaa:	jle    0x140016ef3
   140016eac:	adc    DWORD PTR [rcx],esp
   140016eae:	movabs ds:0xaad69a84a806e578,eax
   140016eb7:	rex.WXB and rcx,QWORD PTR [r11]
   140016eba:	mov    BYTE PTR [rax],al
   140016ebc:	push   rdi
   140016ebd:	adc    dl,BYTE PTR [rdx-0x50d034ce]
   140016ec3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016ec4:	imul   ebp,DWORD PTR [rcx+0x14d27b99],0x74ae6ce5
   140016ece:	xchg   ebx,eax
   140016ecf:	rex.X or BYTE PTR [rax+0x4c299b08],al
   140016ed6:	(bad)  
   140016ed7:	shr    eax,1
   140016ed9:	lock mov edi,0xec4f0ff8
   140016edf:	jns    0x140016ee7
   140016ee1:	pop    rcx
   140016ee2:	clc    
   140016ee3:	jae    0x140016f53
   140016ee5:	dec    DWORD PTR [rdi]
   140016ee7:	mov    edx,0x8e76dbf0
   140016eec:	jle    0x140016e87
   140016eee:	iret   
   140016eef:	(bad)  
   140016ef0:	(bad)  
   140016ef1:	cmc    
   140016ef2:	or     dl,bh
   140016ef4:	mov    esi,0x7f3086f4
   140016ef9:	rex.RB (bad) 
   140016efb:	shl    BYTE PTR [rip+0x68241e1e],cl        # 0x1a8258d1f
   140016f01:	xchg   esi,eax
   140016f02:	and    BYTE PTR [rcx+0x2f],dl
   140016f05:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140016f06:	(bad)  
   140016f07:	sar    DWORD PTR [rdi+rbp*8+0x7a22aebf],cl
   140016f0e:	rex.W
   140016f0f:	lock movabs ds:0x27815c19db90b802,al
   140016f19:	cmp    bh,BYTE PTR [rbx-0x19]
   140016f1c:	(bad)  
   140016f1e:	cmp    eax,0xcd03bc3e
   140016f23:	ins    DWORD PTR es:[rdi],dx
   140016f24:	sar    ebp,0x7c
   140016f27:	push   0xfffffffffffffff9
   140016f29:	cli    
   140016f2a:	xchg   esi,eax
   140016f2b:	add    BYTE PTR [rax+rsi*2-0x21],ah
   140016f2f:	jge    0x140016f2b
   140016f31:	rex.WX test QWORD PTR [rdi-0x4ac236d6],rsi
   140016f38:	call   0x14c843b67
   140016f3d:	adc    al,0x31
   140016f3f:	test   al,0xa2
   140016f41:	test   al,0x82
   140016f43:	mov    dh,0xea
   140016f45:	(bad)  
   140016f46:	rol    DWORD PTR [rbx+0x76],0x21
   140016f4a:	rex.RX push rdi
   140016f4c:	and    BYTE PTR [rbp-0x5f],dl
   140016f4f:	or     al,0xc
   140016f51:	(bad)  
   140016f52:	jnp    0x140016f23
   140016f54:	jle    0x140016f61
   140016f56:	adc    ebx,DWORD PTR [rdx]
   140016f58:	(bad)  
   140016f59:	(bad)  [rip+0xffffffff842ef270]        # 0xc43061d0
   140016f60:	jl     0x140016ee9
   140016f62:	add    DWORD PTR [rdx],ebp
   140016f64:	cld    
   140016f65:	in     al,0x96
   140016f67:	(bad)  
   140016f68:	sbb    ch,dl
   140016f6a:	retf   
   140016f6b:	add    bl,BYTE PTR [rdi-0x4e]
   140016f6e:	clc    
   140016f6f:	mov    ecx,0x90429fc6
   140016f74:	hlt    
   140016f75:	pop    rsi
   140016f76:	mov    dh,0x5a
   140016f78:	and    BYTE PTR [rdx],0xcf
   140016f7b:	pop    rdi
   140016f7c:	rol    DWORD PTR [rax+0x2],1
   140016f7f:	push   rsi
   140016f80:	mov    esi,0xbf03534
   140016f85:	(bad)  
   140016f86:	fnsave [rdi+0x7f1fb92f]
   140016f8c:	(bad)  
   140016f8d:	sub    eax,0x1cedd6ff
   140016f92:	out    dx,al
   140016f93:	shl    BYTE PTR [rcx-0xc],0x6d
   140016f97:	cmp    al,0xc0
   140016f99:	rex.XB pop r15
   140016f9b:	mov    edx,0xf7f76693
   140016fa0:	jno    0x140016f95
   140016fa2:	sbb    bl,BYTE PTR [rbx+0x17]
   140016fa5:	sar    esp,cl
   140016fa7:	or     BYTE PTR [rdx+0x6887a5d3],0xed
   140016fae:	xchg   ebx,eax
   140016faf:	pop    rdi
   140016fb0:	(bad)  
   140016fb1:	sahf   
   140016fb2:	or     DWORD PTR [rsp+rdx*2+0x0],ebx
   140016fb6:	(bad)  
   140016fb7:	shl    DWORD PTR [rsi-0xeefea23],0x20
   140016fbe:	jp     0x140016fb6
   140016fc0:	cli    
   140016fc1:	data16 cli 
   140016fc3:	jge    0x140016ff6
   140016fc5:	(bad)  
   140016fc6:	xor    BYTE PTR [rdx+0x7d94ae55],ch
   140016fcc:	(bad)  
   140016fcd:	xchg   bp,ax
   140016fcf:	and    DWORD PTR [rcx-0x4a],esp
   140016fd2:	rex.WX jge 0x140017051
   140016fd5:	icebp  
   140016fd6:	cmc    
   140016fd7:	rex.XB add r11d,esp
   140016fda:	xchg   ebp,eax
   140016fdb:	in     al,0x53
   140016fdd:	movabs eax,ds:0x91835ed2b10158f
   140016fe6:	movabs eax,ds:0x826e60c41443a80a
   140016fef:	sub    dl,BYTE PTR [rax+0x3a8a288c]
   140016ff5:	sub    BYTE PTR [rax-0x2f9c4553],0xc4
   140016ffc:	and    BYTE PTR [rbx-0x12],cl
   140016fff:	push   rcx
   140017000:	xchg   esp,eax
   140017001:	adc    DWORD PTR [rip+0x1a16d8bd],ebp        # 0x15a1848c4
   140017007:	push   rbp
   140017008:	call   0x199b4b47b
   14001700d:	jge    0x140016fa7
   14001700f:	ret    0x2780
   140017012:	or     rdi,QWORD PTR [rdx]
   140017015:	(bad)  
   140017016:	fist   WORD PTR [rcx+0x7c]
   140017019:	push   rdx
   14001701a:	fs lahf 
   14001701c:	(bad)  
   14001701d:	add    al,0xf7
   14001701f:	rex.WRB
   140017020:	movabs eax,gs:0xca2880512bda5ccb
   14001702a:	adc    BYTE PTR [rax-0x41061e2],0x95
   140017031:	(bad)  
   140017032:	cli    
   140017033:	(bad)  
   140017034:	gs jg  0x140016fc0
   140017037:	jbe    0x14001705c
   140017039:	mov    db6,rdx
   14001703c:	pop    rsi
   14001703d:	rcl    BYTE PTR [rdx-0x28],1
   140017040:	(bad)  
   140017041:	xor    bl,bl
   140017043:	cmp    DWORD PTR [rdx+0x5],esi
   140017046:	data16 shr cl,1
   140017049:	jle    0x140016fdd
   14001704b:	idiv   DWORD PTR [rcx+rdi*8-0x63]
   14001704f:	(bad)  
   140017050:	data16 ja 0x140017072
   140017053:	mov    edx,0xeed00237
   140017058:	xlat   BYTE PTR ds:[rbx]
   140017059:	add    al,0x2
   14001705b:	(bad)  
   14001705c:	rex.B (bad) 
   14001705e:	scas   al,BYTE PTR es:[rdi]
   14001705f:	faddp  st(3),st
   140017061:	xchg   edi,eax
   140017062:	jl     0x14001706d
   140017064:	(bad)  
   140017065:	(bad)  
   140017066:	pop    rsp
   140017067:	push   rsp
   140017068:	add    BYTE PTR [rdi],dl
   14001706a:	jp     0x140017037
   14001706c:	int3   
   14001706d:	sub    eax,0x2c7262a0
   140017072:	(bad)  
   140017073:	scas   eax,DWORD PTR es:[rdi]
   140017074:	fist   WORD PTR [rcx-0x5e7cc43a]
   14001707a:	mov    ecx,0x15445233
   14001707f:	(bad)  
   140017081:	jb     0x140017006
   140017083:	cli    
   140017084:	fiadd  WORD PTR [rax+0x1d]
   140017087:	jne    0x1400170ce
   140017089:	sbb    eax,0xf18d7213
   14001708e:	push   rdi
   14001708f:	fs rex.X
   140017091:	rex.WRXB mov BYTE PTR [r13-0x194a823f],r14b
   140017098:	xor    DWORD PTR [rdx+0x49a10576],esp
   14001709e:	cmp    ah,BYTE PTR [rsi-0xb]
   1400170a1:	popf   
   1400170a2:	lock rcl DWORD PTR [rax-0x62],cl
   1400170a6:	adc    bh,BYTE PTR [rsi+rax*2+0x1e]
   1400170aa:	retf   0x9c3e
   1400170ad:	xchg   ebx,eax
   1400170ae:	jg     0x1400170f2
   1400170b0:	rcl    edi,0xb9
   1400170b3:	pop    rdi
   1400170b4:	(bad)  
   1400170b5:	cmp    al,0x5f
   1400170b7:	add    DWORD PTR [rdx+0x2780a410],ebp
   1400170bd:	scas   eax,DWORD PTR es:[rdi]
   1400170be:	loopne 0x1400170a3
   1400170c0:	sub    esi,edi
   1400170c2:	(bad)  
   1400170c3:	in     al,dx
   1400170c4:	jmp    0x1400170d1
   1400170c6:	call   0x1579c336f
   1400170cb:	(bad)
   1400170ce:	push   0x41
   1400170d0:	push   rdx
   1400170d1:	fcmovu st,st(3)
   1400170d3:	add    al,0x60
   1400170d5:	sbb    esi,edi
   1400170d7:	cmp    esi,DWORD PTR [rsi-0x310780ae]
   1400170dd:	(bad)  
   1400170de:	pop    rsp
   1400170df:	stc    
   1400170e0:	jnp    0x14001714a
   1400170e2:	xlat   BYTE PTR ds:[rbx]
   1400170e3:	repz jg 0x1400170e5
   1400170e6:	xchg   esp,eax
   1400170e7:	hlt    
   1400170e8:	(bad)  
   1400170e9:	ins    DWORD PTR es:[rdi],dx
   1400170ea:	outs   dx,BYTE PTR ds:[rsi]
   1400170eb:	out    0xce,eax
   1400170ed:	adc    eax,0xfef38fe0
   1400170f2:	scas   eax,DWORD PTR es:[rdi]
   1400170f3:	ficomp WORD PTR [rip+0xffffffffa80607a6]        # 0xe807789f
   1400170f9:	mov    ecx,0x4790f655
   1400170fe:	push   rbp
   1400170ff:	adc    ebx,DWORD PTR [rdi]
   140017101:	sbb    al,BYTE PTR [rax-0xd]
   140017104:	out    0xdf,eax
   140017106:	(bad)  
   140017107:	lock and ch,BYTE PTR [rsi]
   14001710a:	sub    al,BYTE PTR [rax+0x736b6897]
   140017110:	add    DWORD PTR [rcx],eax
   140017112:	add    BYTE PTR [rip+0x5bb1ce87],ch        # 0x19bb33f9f
   140017118:	xor    bl,bh
   14001711a:	out    dx,al
   14001711b:	rex.WRX ror BYTE PTR [rax-0x7f7501a7],0x5a
   140017123:	add    eax,0x157eaddf
   140017128:	or     dl,BYTE PTR [rsi+0x5f]
   14001712b:	pop    rsi
   14001712c:	push   rdi
   14001712d:	xor    eax,0xa57d0b9
   140017132:	fld    TBYTE PTR [rbx-0x65a8aee8]
   140017138:	rcl    BYTE PTR [rbx+0x45],0xc4
   14001713c:	sub    bh,BYTE PTR [rax-0x42]
   14001713f:	mov    edi,0xa0440644
   140017144:	imul   eax,DWORD PTR [rbp+0x2],0x75
   140017148:	gs or  al,al
   14001714b:	rex.WX jg 0x1400170e3
   14001714e:	ins    BYTE PTR es:[rdi],dx
   14001714f:	mov    WORD PTR [rsi+0x3f10abda],ss
   140017155:	rex.RXB fistp QWORD PTR fs:[r11+0x12]
   14001715a:	nop
   14001715b:	(bad)  
   14001715c:	fild   QWORD PTR [rip+0xffffffffa19c17d4]        # 0xe19d8936
   140017162:	iret   
   140017163:	mov    al,BYTE PTR [rcx+0x21b4108b]
   140017169:	test   dl,dl
   14001716b:	push   rdi
   14001716d:	pop    rax
   14001716e:	mov    edi,0x99940379
   140017173:	jle    0x140017127
   140017175:	jge    0x140017178
   140017177:	push   rdi
   140017178:	(bad)  
   140017179:	push   rbx
   14001717a:	fwait
   14001717b:	icebp  
   14001717c:	(bad)  
   14001717d:	fdivrp st(2),st
   14001717f:	test   DWORD PTR [rbx-0x6ec28282],ebp
   140017185:	(bad)  
   140017188:	or     bh,bh
   14001718a:	(bad)  
   14001718b:	in     eax,dx
   14001718c:	sbb    al,0xc4
   14001718e:	(bad)  
   14001718f:	add    esp,edx
   140017191:	(bad)  
   140017192:	repnz sub DWORD PTR [rdi-0x2cb3d441],0x9877ba20
   14001719d:	jmp    0x1400171b4
   14001719f:	cwde   
   1400171a0:	(bad)  
   1400171a1:	ja     0x140017176
   1400171a3:	(bad)  
   1400171a4:	mov    DWORD PTR [rdi],edi
   1400171a6:	jrcxz  0x14001712b
   1400171a8:	ffreep st(6)
   1400171aa:	rex.RB add eax,0x6d6d12f0
   1400171b0:	rex.X xchg eax,eax
   1400171b2:	add    BYTE PTR [rbx+rdx*4+0x1be6c761],al
   1400171b9:	stc    
   1400171ba:	je     0x1400171d8
   1400171bc:	or     ebp,ebx
   1400171be:	mov    ebx,0xea0062
   1400171c3:	(bad)  
   1400171c4:	xchg   ebp,eax
   1400171c5:	cli    
   1400171c6:	stc    
   1400171c7:	(bad)  
   1400171c8:	(bad)  
   1400171c9:	adc    ebp,edx
   1400171cb:	retf   0x7b58
   1400171ce:	sub    eax,0x4470575
   1400171d4:	jne    0x1400171eb
   1400171d6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400171d7:	(bad)  
   1400171d8:	(bad)  
   1400171d9:	rex.RX jne 0x1400171f1
   1400171dc:	push   rsp
   1400171dd:	pop    rcx
   1400171de:	rex.R pop rbx
   1400171e0:	pushf  
   1400171e1:	push   rbx
   1400171e2:	jns    0x140017168
   1400171e4:	rex.WX adc rax,0x41c96545
   1400171ea:	lock push rax
   1400171ec:	pop    rsi
   1400171ed:	or     al,0xe6
   1400171ef:	test   ebx,0x4852be89
   1400171f5:	or     eax,DWORD PTR [rdx+0x10eeb3de]
   1400171fb:	lods   al,BYTE PTR ds:[rsi]
   1400171fc:	es and ah,ah
   1400171ff:	pop    rax
   140017200:	mov    esi,0x45bb00a6
   140017205:	iret   
   140017206:	mov    esp,0x4b79c39e
   14001720b:	repnz and DWORD PTR [rip+0xffffffffc9c88346],ecx        # 0x109c9f558
   140017212:	imul   eax,DWORD PTR [rdx],0xe672cdb2
   140017218:	rex.R neg BYTE PTR [rcx-0x16]
   14001721c:	xchg   BYTE PTR [rdi-0x3],ch
   14001721f:	(bad)          # 0x156c8f81c
   140017220:	nop    esp
   140017223:	test   edi,eax
   140017225:	(bad)  
   140017226:	jp     0x14001720e
   140017228:	mov    cl,0xbd
   14001722a:	jg     0x14001720b
   14001722c:	rex.RB loope 0x14001725e
   14001722f:	mov    bh,0xed
   140017231:	mov    ecx,0xf0342d02
   140017236:	addr32 jl 0x140017219
   140017239:	xor    DWORD PTR [rdi+0x10dcccd2],0x4441dc6f
   140017243:	adc    eax,0xda52f400
   140017248:	(bad)  
   140017249:	mov    bh,BYTE PTR [rsi+0x7fa18e7b]
   14001724f:	std    
   140017250:	movabs ds:0x80006e2db6a97802,al
   140017259:	mov    al,0x48
   14001725b:	cmp    eax,0xa9a36ec7
   140017260:	ja     0x140017259
   140017262:	rex.R mov WORD PTR [rax+0xb2ac730],ds
   140017269:	jb     0x140017280
   14001726b:	test   DWORD PTR [rcx-0x3eed551],edi
   140017271:	stos   BYTE PTR es:[rdi],al
   140017272:	xchg   edx,eax
   140017273:	in     al,0x9d
   140017275:	rex.WRX or al,0xa8
   140017278:	stos   DWORD PTR es:[rdi],eax
   140017279:	test   al,0x82
   14001727b:	(bad)  
   14001727c:	push   rcx
   14001727d:	fwait
   14001727e:	fwait
   14001727f:	(bad)  
   140017280:	cld    
   140017281:	or     BYTE PTR [rbx],0xbb
   140017284:	cld    
   140017285:	ss (bad) 
   140017287:	rex.WX movabs rsp,0x7413ca824d6c1ca6
   140017291:	rex.W (bad) 
   140017293:	mov    ebp,0x5e6b6d98
   140017298:	rex.X
   140017299:	rex.WX fcomp DWORD PTR [rcx+0x43]
   14001729d:	(bad)  
   14001729e:	push   rsi
   14001729f:	mov    eax,0xa5ef84ae
   1400172a4:	rol    BYTE PTR [rsi-0x44984393],0xbe
   1400172ab:	mov    edi,0x3fad0ed4
   1400172b0:	fstp   st(7)
   1400172b2:	js     0x1400172b5
   1400172b4:	rex.W in al,dx
   1400172b6:	jp     0x14001723b
   1400172b8:	ret    
   1400172b9:	rcr    edi,1
   1400172bb:	jns    0x14001732b
   1400172bd:	in     al,0xbf
   1400172bf:	inc    DWORD PTR [rbx-0x2e38dc5d]
   1400172c5:	es std 
   1400172c7:	cs pop rdx
   1400172c9:	(bad)  
   1400172ca:	mov    bl,0x6d
   1400172cc:	(bad)  [rbx+0x5]
   1400172cf:	and    BYTE PTR [rdx],0x79
   1400172d2:	call   0x1b800eb06
   1400172d7:	fistp  WORD PTR [rax]
   1400172d9:	out    0x8f,al
   1400172db:	in     al,dx
   1400172dc:	(bad)  
   1400172dd:	out    0x1b,al
   1400172df:	mov    DWORD PTR [rax+0x5ff6303f],edi
   1400172e5:	rex.XB sub ecx,DWORD PTR [r15]
   1400172e8:	jg     0x140017286
   1400172ea:	(bad)  
   1400172ec:	jns    0x14001733f
   1400172ee:	add    DWORD PTR [rsp+rdx*2+0x401476db],edi
   1400172f5:	(bad)  
   1400172f6:	imul   esp,DWORD PTR [rax-0x53654c47],0x5dcd5776
   140017300:	jne    0x140017297
   140017302:	ret    
   140017303:	outs   dx,DWORD PTR ds:[rsi]
   140017304:	sbb    eax,0x22bad815
   140017309:	push   rsp
   14001730a:	mov    ch,0x95
   14001730c:	hlt    
   14001730d:	adc    ch,dl
   14001730f:	sbb    BYTE PTR [rcx+0x55],dl
   140017312:	push   rcx
   140017313:	lods   eax,DWORD PTR ds:[rsi]
   140017314:	mov    esi,0x5dda8c28
   140017319:	add    dl,dl
   14001731b:	iret   
   14001731c:	or     eax,0x8278401d
   140017321:	movabs al,ds:0x71e5ed6b092a9ee4
   14001732a:	js     0x1400172f6
   14001732c:	mov    esi,0xb760539
   140017331:	outs   dx,DWORD PTR ds:[rsi]
   140017332:	mov    esi,0x56e6b7bc
   140017337:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017338:	loope  0x1400172bc
   14001733a:	pop    rsp
   14001733b:	or     bh,BYTE PTR [rdi+0x9]
   14001733e:	adc    eax,DWORD PTR [rax]
   140017340:	rex.WRB mul QWORD PTR [rip+0x5dfd88ff]        # 0x19dfefc46
   140017347:	mov    cl,0xaf
   140017349:	rex.WRXB
   14001734a:	rex.RXB retf 
   14001734c:	call   rdi
   14001734e:	jrcxz  0x140017329
   140017350:	retf   0x441d
   140017353:	rex.W
   140017354:	or     r15d,DWORD PTR [rdi+0x79]
   140017358:	push   0xfffffffffffffff0
   14001735a:	out    0x7e,eax
   14001735c:	jmp    0xe09076f2
   140017361:	ffree  st(4)
   140017363:	repz out dx,eax
   140017365:	es jrcxz 0x140017367
   140017368:	rex.X mov dil,0x73
   14001736b:	lock add bl,BYTE PTR [rdi+0x5ccf7de0]
   140017372:	lea    edx,[rbp-0x53be391]
   140017378:	int    0x11
   14001737a:	mov    esp,0xf77897b7
   14001737f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017380:	jns    0x140017351
   140017382:	cmp    eax,0x4bc01517
   140017387:	mov    ecx,0x5405019d
   14001738c:	add    ebx,esp
   14001738e:	(bad)  
   14001738f:	ja     0x1400173a7
   140017391:	out    dx,eax
   140017392:	out    dx,al
   140017393:	push   rsp
   140017394:	xor    al,0xdc
   140017396:	mov    DWORD PTR [rcx-0x23],edx
   140017399:	add    BYTE PTR [rax+0x2f6b6710],ch
   14001739f:	jg     0x1400173e2
   1400173a1:	xchg   ebp,eax
   1400173a2:	add    al,0xff
   1400173a5:	mov    edx,0x22a01756
   1400173aa:	(bad)  
   1400173ab:	xor    eax,0x168fe165
   1400173b0:	adc    eax,0xeca262b0
   1400173b5:	mov    ebx,0xd22f343b
   1400173ba:	jo     0x1400173b9
   1400173bc:	repz push rax
   1400173be:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400173bf:	loope  0x140017357
   1400173c1:	(bad)  
   1400173c2:	ds mov bl,0xf8
   1400173c5:	rex retf 
   1400173c7:	(bad)  
   1400173c8:	or     eax,DWORD PTR [rbx+0x5f]
   1400173cb:	movabs ds:0x2b210217363bfc82,al
   1400173d4:	mov    esp,DWORD PTR [rax+0x30764f25]
   1400173da:	es mov ah,0x1e
   1400173dd:	or     BYTE PTR [rbx+0x1b],al
   1400173e0:	pop    rsp
   1400173e1:	rex.RX xor BYTE PTR [rcx+0x7a],r10b
   1400173e5:	(bad)  
   1400173e6:	scas   al,BYTE PTR es:[rdi]
   1400173e7:	out    dx,eax
   1400173e8:	xchg   edi,eax
   1400173e9:	dec    ecx
   1400173eb:	(bad)  
   1400173ec:	(bad)  
   1400173ed:	std    
   1400173ee:	sub    al,0x32
   1400173f0:	jmp    0x19ff9c56c
   1400173f5:	call   0x130268270
   1400173fa:	rex.RB in al,dx
   1400173fc:	ds add eax,0xc7aefba2
   140017402:	shr    BYTE PTR [rsi-0x2088cba2],cl
   140017408:	sbb    DWORD PTR [rsi-0x42],esp
   14001740b:	jne    0x14001745e
   14001740d:	add    DWORD PTR [rsp+rdx*4-0x3fafe625],edi
   140017414:	sar    DWORD PTR [rbx+rsi*2+0x133d9de3],cl
   14001741b:	ret    
   14001741c:	mov    ebx,0xbae6f4ab
   140017421:	ss cwde 
   140017423:	pcmpeqb mm1,mm4
   140017426:	mov    bh,0x37
   140017428:	mov    ebp,DWORD PTR [rdi+0x1575f02]
   14001742e:	push   rbp
   14001742f:	sub    eax,0x9353a00a
   140017434:	mov    ebx,0x50026507
   140017439:	test   al,0xe0
   14001743b:	rex.WR jl 0x1400174a9
   14001743e:	adc    DWORD PTR [rsi-0x51],ecx
   140017441:	fmul   DWORD PTR [rbx]
   140017443:	fldcw  WORD PTR [rdx+0x4a1fcd2b]
   140017449:	call   FWORD PTR [rdi+0x9]
   14001744c:	cmp    al,0xb
   14001744e:	fistp  QWORD PTR [rcx+0x1f]
   140017451:	jle    0x14001743a
   140017453:	cli    
   140017454:	sub    BYTE PTR [rbx+0x24409a83],dl
   14001745a:	sar    BYTE PTR [rdi],1
   14001745c:	pop    rbx
   14001745d:	outs   dx,DWORD PTR ds:[rsi]
   14001745e:	xor    al,BYTE PTR [rcx+0x77]
   140017461:	fs push rax
   140017463:	and    BYTE PTR [rax],al
   140017465:	fcomi  st,st(4)
   140017467:	(bad)  
   140017468:	retf   0x140a
   14001746b:	(bad)  
   14001746c:	or     DWORD PTR [rbx*2-0x48500053],ebx
   140017473:	jge    0x14001745a
   140017475:	retf   0xc03f
   140017478:	test   BYTE PTR [rdi+rbx*4-0x41],0xbb
   14001747d:	loope  0x14001743d
   14001747f:	out    dx,eax
   140017480:	jne    0x1400174bd
   140017482:	rex.RXB and r9d,r10d
   140017485:	ja     0x140017438
   140017487:	jae    0x140017472
   140017489:	rex.WRXB jo 0x140017474
   14001748c:	adc    ebx,DWORD PTR [rdi]
   14001748e:	movabs al,ds:0x2a2e9bdd403d3d3
   140017497:	js     0x140017442
   140017499:	mov    bh,0x36
   14001749b:	or     cl,BYTE PTR [rax]
   14001749d:	add    BYTE PTR [rdx+0x27],al
   1400174a0:	loopne 0x140017466
   1400174a2:	sbb    edi,edx
   1400174a4:	(bad)  
   1400174a5:	ds push rax
   1400174a7:	push   rdi
   1400174a8:	sbb    al,ch
   1400174aa:	test   eax,0xed663a03
   1400174af:	jmp    0x140017499
   1400174b1:	(bad)  
   1400174b2:	fisttp WORD PTR [rcx-0x17b28aff]
   1400174b8:	je     0x14001747e
   1400174ba:	fcmovbe st,st(7)
   1400174bc:	adc    eax,0xb910686b
   1400174c1:	and    bh,al
   1400174c3:	adc    ch,BYTE PTR [rsi+0x34]
   1400174c6:	cld    
   1400174c7:	rex.RXB cli 
   1400174c9:	ds imul edi
   1400174cc:	outs   dx,DWORD PTR ds:[rsi]
   1400174cd:	jmp    FWORD PTR [rdi]
   1400174cf:	movabs eax,ds:0x307ec5cdc76b00ba
   1400174d8:	movabs eax,ds:0x37e99c7513c05e56
   1400174e1:	in     al,0xa0
   1400174e3:	jle    0x1400174a3
   1400174e5:	and    eax,DWORD PTR [rbp-0x66bbae70]
   1400174eb:	sbb    eax,ebx
   1400174ed:	(bad)  
   1400174ee:	clc    
   1400174ef:	mov    dl,0x12
   1400174f1:	enter  0x824a,0x61
   1400174f5:	mov    cl,0xc6
   1400174f7:	mov    DWORD PTR [rbp-0x40a41088],ecx
   1400174fd:	jb     0x1400174e4
   1400174ff:	outs   dx,DWORD PTR ds:[rsi]
   140017500:	ins    DWORD PTR es:[rdi],dx
   140017501:	(bad)  
   140017502:	cld    
   140017503:	(bad)  
   140017504:	cli    
   140017505:	std    
   140017506:	(bad)  
   140017507:	cmp    cx,di
   14001750a:	(bad)  
   14001750b:	and    al,0xf7
   14001750d:	loopne 0x1400174a1
   14001750f:	(bad)  
   140017510:	pop    rsi
   140017511:	and    DWORD PTR [rbp-0x78e31779],0xffffffb8
   140017518:	mov    eax,0xfa4da85d
   14001751d:	mov    ebp,0x5eb79f59
   140017522:	add    ch,bh
   140017524:	(bad)  
   140017525:	fcomi  st,st(7)
   140017527:	loopne 0x1400174d8
   140017529:	(bad)  
   14001752a:	(bad)  
   14001752b:	jmp    0x1855ec22e
   140017530:	neg    ebp
   140017532:	rex.XB enter 0x3eb0,0x4
   140017537:	jbe    0x14001750f
   140017539:	fidivr WORD PTR [rdx-0x19]
   14001753c:	mov    bh,0x2d
   14001753e:	mov    dl,0x1e
   140017540:	jnp    0x1400174ed
   140017542:	pop    rdi
   140017543:	mov    ?,esp
   140017545:	cmp    esp,ecx
   140017547:	adc    ecx,edi
   140017549:	js     0x140017566
   14001754b:	pop    rbx
   14001754c:	sbb    al,0x72
   14001754e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001754f:	in     al,dx
   140017550:	iret   
   140017551:	jl     0x14001752c
   140017553:	mov    dl,0xb8
   140017555:	stos   BYTE PTR es:[rdi],al
   140017556:	in     al,dx
   140017557:	(bad)  
   140017558:	ins    DWORD PTR es:[rdi],dx
   140017559:	jmp    0x1add62a8b
   14001755e:	mov    eax,0xd2ff27ee
   140017563:	mov    dh,0xf7
   140017565:	xchg   r14d,eax
   140017567:	(bad)  
   140017568:	(bad)  
   140017569:	(bad)
   14001756c:	loopne 0x140017552
   14001756e:	jns    0x14001756f
   140017570:	or     ecx,DWORD PTR [rip+0x1ea7fd7d]        # 0x15ea972f3
   140017576:	ds cld 
   140017578:	iret   
   140017579:	mov    edi,0x8d303930
   14001757e:	in     eax,dx
   14001757f:	sar    bh,1
   140017581:	movabs ds:0xaa8918bdadd8bff0,al
   14001758a:	(bad)  
   14001758b:	cmp    al,0x54
   14001758d:	loope  0x1400175fb
   14001758f:	mov    edi,0xf05db8bb
   140017594:	int    0xb4
   140017596:	outs   dx,DWORD PTR ds:[rsi]
   140017597:	(bad)  
   140017598:	shl    dh,0xfd
   14001759b:	fstp   st(5)
   14001759d:	not    DWORD PTR [rsi-0x63]
   1400175a0:	push   0xffffffffffffffa1
   1400175a2:	push   rbx
   1400175a3:	(bad)  
   1400175a4:	je     0x140017590
   1400175a6:	sbb    BYTE PTR [rsi-0x21217f62],0x80
   1400175ad:	ficomp WORD PTR [rsi+0x42]
   1400175b0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400175b1:	add    edx,esp
   1400175b3:	sbb    eax,0x50075542
   1400175b8:	rex.WRB or BYTE PTR [r13-0x2f7e5600],r11b
   1400175bf:	and    DWORD PTR [rsi+rcx*1-0x55fbc57f],eax
   1400175c6:	and    bh,bh
   1400175c8:	xlat   BYTE PTR ds:[rbx]
   1400175c9:	add    DWORD PTR [rcx+rdx*1+0x48],edx
   1400175cd:	push   rdi
   1400175ce:	and    esp,DWORD PTR [rcx-0x1bfa95b6]
   1400175d4:	xor    eax,DWORD PTR [rax+0x511ff96a]
   1400175da:	mov    es,WORD PTR [rbp+0x5503d04a]
   1400175e0:	mov    cl,BYTE PTR [rdx]
   1400175e2:	mov    dl,BYTE PTR [rbp+0x14]
   1400175e5:	and    al,0xb9
   1400175e7:	(bad)  
   1400175e8:	fidivr DWORD PTR [rcx-0x1b]
   1400175eb:	out    dx,al
   1400175ec:	fidiv  WORD PTR ds:[rcx+0x24381747]
   1400175f3:	enter  0x7cfa,0xae
   1400175f7:	rex.WRXB ins BYTE PTR es:[rdi],dx
   1400175f9:	and    ebp,DWORD PTR [rbx+0x4f]
   1400175fc:	sub    eax,0x356f33fb
   140017601:	neg    BYTE PTR ds:[rax]
   140017604:	and    al,0x9
   140017606:	push   0x6fe8e12d
   14001760b:	(bad)  
   14001760c:	fscale 
   14001760e:	outs   dx,DWORD PTR ds:[rsi]
   14001760f:	mov    edi,0x8b303930
   140017614:	(bad)  
   140017615:	(bad)  
   140017616:	mov    edx,0x4dedbffe
   14001761b:	sahf   
   14001761c:	movabs eax,ds:0xb9c617c7085b3dcd
   140017625:	mov    BYTE PTR [rax],al
   140017627:	pop    rsi
   140017628:	scas   al,BYTE PTR es:[rdi]
   140017629:	sub    eax,0x140e80a3
   14001762e:	add    eax,0x479ae57c
   140017633:	(bad)  
   140017634:	out    dx,eax
   140017635:	jge    0x140017674
   140017637:	fisttp QWORD PTR [rdi]
   140017639:	or     al,ah
   14001763b:	(bad)  
   14001763c:	pop    rdi
   14001763d:	push   rdx
   14001763e:	cmp    eax,DWORD PTR [rcx+rdx*1]
   140017641:	push   rdx
   140017642:	es adc eax,0xbe6fb2d6
   140017648:	stc    
   140017649:	out    0xc8,al
   14001764b:	scas   eax,DWORD PTR es:[rdi]
   14001764c:	gs jrcxz 0x140017665
   14001764f:	xor    ebp,edi
   140017651:	pop    rbp
   140017652:	je     0x140017641
   140017654:	cmp    ecx,DWORD PTR [rdi]
   140017656:	shl    BYTE PTR [rbx-0x4704fe80],cl
   14001765c:	sub    BYTE PTR [rcx],bl
   14001765e:	mov    ch,0xaa
   140017660:	cmp    al,0xf9
   140017662:	push   0x6c909c1b
   140017667:	xor    al,BYTE PTR [rbx-0x4a4505ec]
   14001766d:	cld    
   14001766e:	mov    dh,0xa6
   140017670:	add    eax,0x9e8b0
   140017675:	xchg   edx,eax
   140017676:	out    0x2f,eax
   140017678:	pop    rcx
   140017679:	rex.X and al,0x29
   14001767c:	test   eax,0x36028800
   140017681:	sbb    DWORD PTR [rbx-0x7cec681],esi
   140017687:	sar    DWORD PTR [rdi],cl
   140017689:	repz lock and eax,0xf63723f7
   140017690:	clc    
   140017691:	mov    ebx,0x72f3e057
   140017696:	outs   dx,BYTE PTR ds:[rsi]
   140017697:	in     eax,dx
   140017698:	(bad)
   14001769b:	enter  0x3642,0x17
   14001769f:	mov    bh,0x97
   1400176a1:	outs   dx,DWORD PTR ds:[rsi]
   1400176a2:	movsxd edi,esp
   1400176a4:	(bad)  
   1400176a5:	in     eax,dx
   1400176a6:	pop    rbp
   1400176a7:	ins    DWORD PTR es:[rdi],dx
   1400176a8:	mov    WORD PTR [rbp+riz*2+0x15],ds
   1400176ac:	jle    0x14001768c
   1400176ae:	neg    esi
   1400176b0:	mov    ebx,0xf6ecbbb3
   1400176b5:	mov    eax,DWORD PTR [rax+0x6b]
   1400176b8:	sub    DWORD PTR [rax+0x29],ecx
   1400176bb:	push   0xffffffffffffff82
   1400176bd:	(bad)  
   1400176be:	sub    BYTE PTR [rcx-0x7b],cl
   1400176c1:	rex.RX and r9d,DWORD PTR [rcx+0x21]
   1400176c5:	(bad)  
   1400176c6:	test   al,0x1
   1400176c8:	jg     0x1400176e2
   1400176ca:	adc    esp,DWORD PTR [rcx]
   1400176cc:	rex.RX
   1400176cd:	rex.X test al,0x44
   1400176d0:	movsxd eax,DWORD PTR [rax+0x4]
   1400176d3:	stc    
   1400176d4:	(bad)  
   1400176d5:	xor    al,0x84
   1400176d7:	add    al,0x49
   1400176d9:	add    al,0x7f
   1400176db:	sub    DWORD PTR [rax+0x3],esp
   1400176de:	(bad)  
   1400176df:	sbb    BYTE PTR [rdx+rdi*8-0x4f],cl
   1400176e3:	repnz movabs eax,ds:0x5a856bf42a54d42d
   1400176ed:	sti    
   1400176ee:	xchg   r9d,eax
   1400176f0:	(bad)  
   1400176f1:	rex.X sub eax,0xb6eedafd
   1400176f7:	fcmovnu st,st(5)
   1400176f9:	ins    DWORD PTR es:[rdi],dx
   1400176fa:	mov    ebx,0xceeeedd3
   1400176ff:	int3   
   140017700:	cmp    eax,0x79cf78fe
   140017705:	fcomip st,st(7)
   140017707:	outs   dx,BYTE PTR ds:[rsi]
   140017708:	(bad)  
   140017709:	lahf   
   14001770a:	jbe    0x1400176fb
   14001770c:	outs   dx,BYTE PTR ds:[rsi]
   14001770d:	iret   
   14001770e:	xchg   ebx,eax
   14001770f:	int3   
   140017710:	(bad)  
   140017711:	popf   
   140017712:	mov    ecx,0xb6676677
   140017717:	cmp    eax,0x3be73ce7
   14001771c:	push   0xfffffffff57bdae1
   140017721:	retf   
   140017722:	push   rsi
   140017723:	pop    rsp
   140017724:	cmp    eax,0x9a7b7aa3
   140017729:	ret    0x14da
   14001772c:	outs   dx,BYTE PTR ds:[rsi]
   14001772d:	jrcxz  0x14001775e
   14001772f:	sti    
   140017730:	div    DWORD PTR [rdx-0x230bdce4]
   140017736:	ret    
   140017737:	or     DWORD PTR [rax+rdi*4-0x4a088000],ebx
   14001773e:	lea    esi,[rbp+0x16]
   140017741:	xchg   ebp,eax
   140017742:	mov    WORD PTR [rdx+riz*8-0x21e49b64],fs
   140017749:	(bad)  
   14001774a:	or     BYTE PTR [rax-0x1ff8ce53],al
   140017750:	cld    
   140017751:	mov    cl,0xdb
   140017753:	and    ah,BYTE PTR [rbx-0x37]
   140017756:	rex.R cmc 
   140017758:	cmp    ah,ah
   14001775a:	test   DWORD PTR [rdi],esi
   14001775c:	(bad)  
   14001775d:	mov    al,BYTE PTR [rip+0xffffffffb31fe145]        # 0xf32158a8
   140017763:	(bad)  
   140017764:	retf   
   140017765:	mov    edx,0xef53d96a
   14001776a:	mov    edi,0x1794ee6c
   14001776f:	icebp  
   140017770:	clc    
   140017771:	push   0xffffffffffffff82
   140017773:	jae    0x14001777c
   140017775:	jb     0x1400177c7
   140017777:	ins    DWORD PTR es:[rdi],dx
   140017778:	sti    
   140017779:	jmp    0x13bc0bf74
   14001777e:	(bad)  
   14001777f:	cld    
   140017780:	in     eax,dx
   140017781:	push   0xffffffff855fbf36
   140017786:	(bad)  
   140017787:	inc    DWORD PTR [rbx]
   140017789:	stc    
   14001778a:	mov    ebx,0x3fccb8de
   14001778f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017790:	or     al,0xe0
   140017792:	(bad)
   140017797:	or     DWORD PTR cs:[rax+rax*2],0x5b
   14001779c:	stos   DWORD PTR es:[rdi],eax
   14001779d:	int    0x2f
   14001779f:	(bad)  
   1400177a1:	fnstcw WORD PTR [rbp-0x55]
   1400177a4:	addr32 push rsi
   1400177a6:	call   0xe7940b11
   1400177ab:	in     eax,0x7e
   1400177ad:	mov    eax,0x21a61f86
   1400177b2:	adc    eax,0x7dfc1477
   1400177b7:	xor    DWORD PTR [rdi-0x1110edc2],esi
   1400177bd:	mov    esp,0x5a162f4b
   1400177c2:	ins    BYTE PTR es:[rdi],dx
   1400177c3:	cmp    ecx,edi
   1400177c5:	sub    eax,DWORD PTR [rbx-0x55]
   1400177c8:	cmp    cl,al
   1400177ca:	sub    DWORD PTR [rcx],ecx
   1400177cc:	add    al,0x1
   1400177ce:	cmc    
   1400177cf:	and    cl,bh
   1400177d1:	in     al,dx
   1400177d2:	and    al,cl
   1400177d4:	mov    esp,0xa7c31a09
   1400177d9:	cmc    
   1400177da:	fdiv   QWORD PTR [rcx]
   1400177dc:	in     eax,0x91
   1400177de:	jb     0x1400177a9
   1400177e0:	popf   
   1400177e1:	loop   0x140017774
   1400177e3:	rex.RB adc eax,0x467c2394
   1400177e9:	(bad)  
   1400177ea:	(bad)  
   1400177eb:	(bad)  
   1400177ec:	rex.RX pop rdx
   1400177ee:	lahf   
   1400177ef:	pop    rsp
   1400177f0:	sar    BYTE PTR [rbp-0x34c7e610],cl
   1400177f6:	(bad)  
   1400177f7:	xor    edi,esp
   1400177f9:	xor    eax,0xd00937e8
   1400177fe:	sbb    al,al
   140017800:	(bad)
   140017803:	ret    0xa802
   140017806:	(bad)  
   140017807:	out    0x76,al
   140017809:	cld    
   14001780a:	(bad)  
   14001780b:	lods   eax,DWORD PTR ds:[rsi]
   14001780c:	jne    0x1400177a3
   14001780e:	int    0x0
   140017810:	fwait
   140017811:	mov    DWORD PTR [rdi],ebx
   140017813:	outs   dx,DWORD PTR ds:[rsi]
   140017814:	fsubr  st,st(7)
   140017816:	(bad)  
   140017817:	fisub  WORD PTR [rdi+0x47]
   14001781a:	push   0x60
   14001781c:	xor    ah,dl
   14001781e:	movsxd eax,DWORD PTR [rax]
   140017820:	test   eax,0xf3a9363b
   140017825:	stc    
   140017826:	in     eax,0x79
   140017828:	xchg   edx,eax
   140017829:	lods   eax,DWORD PTR ds:[rsi]
   14001782a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001782b:	mov    ecx,esp
   14001782d:	(bad)  
   14001782e:	and    esi,ecx
   140017830:	jmp    rcx
   140017832:	cli    
   140017833:	adc    esp,DWORD PTR ds:[rdi+0xde12858]
   14001783a:	cmp    eax,0xf8848009
   14001783f:	xor    eax,0x45c71ee4
   140017844:	jnp    0x140017897
   140017846:	enter  0xc5c8,0x4
   14001784a:	clc    
   14001784b:	pop    rdx
   14001784c:	rex.WXB sbb al,0xf
   14001784f:	cmp    bl,0x2a
   140017852:	shl    DWORD PTR [rax+riz*1],1
   140017855:	mov    edi,0x6ebe53f0
   14001785a:	fs (bad) 
   14001785c:	or     al,0x8
   14001785e:	jge    0x1400178c3
   140017860:	jmp    0x14bde9e4f
   140017865:	lahf   
   140017866:	xor    r13d,r11d
   140017869:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001786a:	ret    0x493f
   14001786d:	shl    BYTE PTR [rax+riz*8],1
   140017870:	(bad)
   140017873:	popf   
   140017874:	(bad)  
   140017875:	rex.WB fstp st(2)
   140017878:	push   rbx
   140017879:	mov    bh,0xce
   14001787b:	lods   eax,DWORD PTR ds:[rsi]
   14001787c:	jle    0x1400178a7
   14001787e:	retf   
   14001787f:	int3   
   140017880:	sbb    al,0x9b
   140017882:	pop    rcx
   140017883:	(bad)  
   140017884:	ror    bl,0x8c
   140017887:	adc    esi,edx
   140017889:	test   BYTE PTR [rbp-0x10f8fec4],al
   14001788f:	loopne 0x14001782f
   140017891:	rex.WXB ret 0xa231
   140017895:	sbb    BYTE PTR [rsi+0x1f1e6449],0x79
   14001789c:	xlat   BYTE PTR ds:[rbx]
   14001789d:	rex.B (bad) 
   14001789f:	(bad)  
   1400178a0:	shr    BYTE PTR [rsi-0x1c836cd5],cl
   1400178a6:	(bad)  
   1400178a7:	pop    rsp
   1400178a8:	mov    edi,0xfb7b8765
   1400178ad:	rex.WB scas al,BYTE PTR es:[rdi]
   1400178af:	xor    eax,0xa1fc2e0
   1400178b4:	mov    WORD PTR [rax+rbx*2+0x5],es
   1400178b8:	mov    ebx,0x911dde22
   1400178bd:	scas   eax,DWORD PTR es:[rdi]
   1400178be:	in     al,0x9c
   1400178c0:	jl     0x140017941
   1400178c2:	popf   
   1400178c3:	jnp    0x14001789b
   1400178c5:	xor    DWORD PTR [rbx-0x348b722d],ecx
   1400178cb:	mov    ebp,0x723c167b
   1400178d0:	hlt    
   1400178d1:	jl     0x140017909
   1400178d3:	mov    WORD PTR [rax-0x3],es
   1400178d6:	mov    ch,0xc1
   1400178d8:	adc    ah,BYTE PTR [ecx+0x43e2e00c]
   1400178df:	rex.X outs dx,DWORD PTR ds:[rsi]
   1400178e1:	or     eax,0xbdd5f500
   1400178e6:	mov    bl,0x6
   1400178e8:	rex.WRX out 0x2d,al
   1400178eb:	imul   ecx,DWORD PTR [rbp-0x75],0x9
   1400178ef:	jnp    0x140017878
   1400178f1:	mov    bl,0xbc
   1400178f3:	mov    eax,0x9802be35
   1400178f8:	or     al,0x30
   1400178fa:	sub    eax,0x716ff91c
   1400178ff:	sar    DWORD PTR [rbp-0x41],1
   140017902:	rex.WRXB xchg r14,rax
   140017904:	fld    DWORD PTR [rax-0x71bc3d65]
   14001790a:	or     DWORD PTR [rax+rax*1+0x7c303331],esp
   140017911:	popf   
   140017912:	jae    0x140017947
   140017914:	mov    BYTE PTR [rdi-0x2b87f79],ah
   14001791a:	cmp    BYTE PTR [rbp-0x7dc7b7d],ah
   140017920:	pop    rsp
   140017921:	rex.WRXB (bad) 
   140017923:	xchg   ebx,eax
   140017924:	sub    BYTE PTR [rbx-0x76fd4ae0],dh
   14001792a:	add    al,0x2a
   14001792c:	popf   
   14001792d:	add    ah,BYTE PTR [rcx]
   14001792f:	ret    
   140017930:	adc    eax,0x85371080
   140017935:	clc    
   140017936:	jg     0x14001794c
   140017938:	rex.RB ret 0x7eef
   14001793c:	mov    WORD PTR [rdx+rdx*4],?
   14001793f:	jge    0x140017900
   140017941:	clc    
   140017942:	iret   
   140017943:	adc    eax,0x6c1eee3f
   140017948:	(bad)  
   140017949:	test   BYTE PTR [rsi-0x4],al
   14001794c:	rex.WXB add rdx,QWORD PTR [r13+0x0]
   140017950:	xchg   ebx,eax
   140017951:	add    ebp,edi
   140017953:	(bad)  
   140017954:	add    BYTE PTR [rax-0x6202543],ch
   14001795a:	rex.WX and rsp,QWORD PTR [rbp-0x59f73656]
   140017961:	and    al,BYTE PTR [rdx-0x12]
   140017964:	cwde   
   140017965:	or     cl,0xc
   140017968:	ins    BYTE PTR es:[rdi],dx
   140017969:	pushfw 
   14001796b:	sbb    eax,eax
   14001796d:	add    cl,BYTE PTR [rcx-0x34]
   140017970:	or     ah,bh
   140017972:	add    BYTE PTR [rsi-0x545211ac],cl
   140017978:	or     ah,BYTE PTR [rsi+rsi*4+0x60]
   14001797c:	xchg   ebx,eax
   14001797d:	jo     0x14001790c
   14001797f:	adc    ebx,DWORD PTR [rsi-0x15]
   140017982:	push   rbx
   140017983:	jg     0x14001794b
   140017985:	mov    bl,0x8b
   140017987:	loopne 0x14001798b
   140017989:	clc    
   14001798a:	jmp    0x140017925
   14001798c:	fimul  WORD PTR [rbx]
   14001798e:	adc    ecx,DWORD PTR [rax+0xa87ad97]
   140017994:	add    ch,BYTE PTR ds:[rsi+rcx*1-0x68]
   140017999:	cmp    al,0xb0
   14001799b:	add    eax,0x21288739
   1400179a0:	(bad)  
   1400179a1:	or     al,0xc6
   1400179a3:	leave  
   1400179a4:	hlt    
   1400179a5:	lods   eax,DWORD PTR ds:[rsi]
   1400179a6:	in     al,dx
   1400179a7:	popf   
   1400179a8:	icebp  
   1400179a9:	shl    bl,1
   1400179ab:	xchg   DWORD PTR [rdi-0x35],esp
   1400179ae:	mov    ?,WORD PTR [rdx]
   1400179b0:	ins    DWORD PTR es:[rdi],dx
   1400179b1:	lock sub DWORD PTR [rcx],ecx
   1400179b4:	(bad)  
   1400179b5:	add    eax,0xd268d8b8
   1400179ba:	sub    bh,BYTE PTR [rcx+rsi*8-0x268ab89c]
   1400179c1:	(bad)  
   1400179c2:	(bad)  
   1400179c3:	(bad)  
   1400179c4:	jbe    0x140017a1f
   1400179c6:	cmp    ebx,ebp
   1400179c8:	rex test eax,0x7de14d81
   1400179ce:	jb     0x140017a33
   1400179d0:	popf   
   1400179d1:	rcr    BYTE PTR [rbx],0x4e
   1400179d4:	or     eax,0x76c106c2
   1400179d9:	xchg   esi,eax
   1400179da:	cdq    
   1400179db:	and    bh,BYTE PTR [rdi-0x63]
   1400179de:	movabs ds:0xc12c12526f3386f2,eax
   1400179e7:	rex.XB movabs eax,ds:0xf4081edf605d92f3
   1400179f1:	ds out dx,al
   1400179f3:	(bad)  
   1400179f4:	lock mov ebp,0x1a043603
   1400179fa:	jge    0x1400179f8
   1400179fc:	iret   
   1400179fd:	mov    ebx,0x21c84001
   140017a02:	test   BYTE PTR [rax+0x63f49ba4],ah
   140017a08:	ror    eax,1
   140017a0a:	test   eax,0xf3bfa1ba
   140017a0f:	sub    edi,0x1feab9ef
   140017a15:	rcl    BYTE PTR [rcx+0x3283a55e],1
   140017a1b:	or     cl,0x43
   140017a1e:	movabs eax,ds:0x514a65edb54f6338
   140017a27:	(bad)  
   140017a28:	ins    BYTE PTR es:[rdi],dx
   140017a29:	loope  0x140017a98
   140017a2b:	rex.R fbld TBYTE PTR [rbp+0x38]
   140017a2f:	(bad)  
   140017a30:	and    eax,0xeb9b16c4
   140017a35:	std    
   140017a36:	rex.RB
   140017a37:	rex.WB clc 
   140017a39:	fadd   DWORD PTR [rax-0x3e76ad77]
   140017a3f:	mov    dl,0x3b
   140017a41:	(bad)  
   140017a42:	(bad)  
   140017a43:	and    ah,BYTE PTR [rsi]
   140017a45:	(bad)  
   140017a46:	add    BYTE PTR [rax+rax*2-0x7709acf7],0x4d
   140017a4e:	rex.W (bad) 
   140017a50:	adc    cl,cl
   140017a52:	movsxd ebp,DWORD PTR [rsi]
   140017a54:	or     BYTE PTR [rdx-0x741b0127],dl
   140017a5a:	xchg   BYTE PTR [rdx+0x471f1ed2],ah
   140017a60:	or     BYTE PTR [rbp+0x1018c608],dh
   140017a66:	push   rcx
   140017a67:	ins    DWORD PTR es:[rdi],dx
   140017a68:	out    0x60,eax
   140017a6a:	(bad)  
   140017a6b:	sbb    BYTE PTR [rcx+0x0],dh
   140017a6e:	add    BYTE PTR [rax],cl
   140017a70:	push   rdi
   140017a71:	rex.WB
   140017a72:	rex.R
   140017a73:	push   r12
   140017a75:	fdecstp 
   140017a77:	rex.RXB mov r15d,0x26c173bd
   140017a7d:	cld    
   140017a7e:	scas   eax,DWORD PTR es:[rdi]
   140017a7f:	sbb    bh,BYTE PTR [rdi-0x3b]
   140017a82:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017a83:	rex.X sbb eax,eax
   140017a86:	and    BYTE PTR fs:[rbx+rax*1],al
   140017a8a:	in     eax,0x96
   140017a8c:	mov    esp,0xffbdb275
   140017a91:	out    dx,al
   140017a92:	sbb    ecx,DWORD PTR [rsi+0x7f]
   140017a95:	xor    DWORD PTR [rbx-0x37],ebp
   140017a98:	out    0x8b,eax
   140017a9a:	ror    BYTE PTR [rbx+0x6ffced9f],0x8e
   140017aa1:	mov    ah,0x33
   140017aa3:	or     ecx,DWORD PTR [rax+0x5d20739b]
   140017aa9:	jns    0x140017a81
   140017aab:	js     0x140017aa7
   140017aad:	(bad)  
   140017aae:	cli    
   140017aaf:	ins    BYTE PTR es:[rdi],dx
   140017ab0:	rex.WR mov al,0xdc
   140017ab3:	rex.X jmp 0x140017b03
   140017ab6:	xchg   ecx,eax
   140017ab7:	movabs ds:0xb7a53c0302cc201b,al
   140017ac0:	shl    ebp,1
   140017ac2:	repnz sbb bl,BYTE PTR [rdi-0x7c]
   140017ac6:	and    al,0xaf
   140017ac8:	test   ebp,0xb80d42bf
   140017ace:	pop    rcx
   140017acf:	mov    BYTE PTR [rsi+rsi*8],cl
   140017ad2:	push   rdi
   140017ad3:	pop    rbx
   140017ad4:	lahf   
   140017ad5:	mov    edx,0x2fb5eb75
   140017ada:	movabs al,ds:0x3280a5fea55f24d9
   140017ae3:	or     cl,0x43
   140017ae6:	and    DWORD PTR [rip+0xffffffff9d9aac78],esp        # 0xdd9c2764
   140017aec:	(bad)  
   140017aed:	js     0x140017b1d
   140017aef:	jnp    0x140017b42
   140017af1:	lods   al,BYTE PTR ds:[rsi]
   140017af2:	cmp    BYTE PTR [rcx+0x3e69f615],dh
   140017af8:	cmovle r9,QWORD PTR [rbp+r15*8+0x49]
   140017afe:	leave  
   140017aff:	(bad)  
   140017b00:	xor    ah,bl
   140017b02:	outs   dx,BYTE PTR ds:[rsi]
   140017b03:	or     edi,ebx
   140017b05:	push   rdx
   140017b06:	mov    ecx,0xc09604c7
   140017b0b:	sub    al,0x22
   140017b0d:	and    eax,0x13320d4e
   140017b12:	lock mov al,dh
   140017b15:	clc    
   140017b16:	imul   esi,DWORD PTR [rbx+0x5f],0xffffff8b
   140017b1a:	add    BYTE PTR [rsi+0x1e],ch
   140017b1d:	sub    dl,BYTE PTR [rsi+0x83dc707]
   140017b23:	mov    dl,0x97
   140017b25:	pop    rsi
   140017b26:	mov    dl,BYTE PTR [rax-0x409b7372]
   140017b2c:	stc    
   140017b2d:	ret    0x85a6
   140017b30:	retf   
   140017b31:	movabs eax,ds:0xa164c0194352bee9
   140017b3a:	cwde   
   140017b3b:	adc    dh,BYTE PTR [rax+rax*1+0x53a3256c]
   140017b42:	mov    bh,0x5c
   140017b44:	cmp    eax,0xc12495f2
   140017b49:	int3   
   140017b4a:	and    BYTE PTR [rcx+riz*1+0x7c9647cd],cl
   140017b51:	rex.R pop rsi
   140017b53:	retf   0x3d84
   140017b56:	pop    rbp
   140017b57:	xchg   edi,eax
   140017b58:	xor    al,0x5e
   140017b5a:	and    al,0xb0
   140017b5c:	and    DWORD PTR [rip+0xffffffffc3b43088],edx        # 0x103b5abea
   140017b62:	mov    al,BYTE PTR [rbx+rsi*1]
   140017b65:	lods   eax,DWORD PTR ds:[rsi]
   140017b66:	(bad)  
   140017b67:	stc    
   140017b68:	cmp    BYTE PTR [rcx],al
   140017b6a:	jno    0x140017b08
   140017b6c:	movabs al,ds:0xfdb3f2286a3bbab0
   140017b75:	rex.X
   140017b76:	adc    QWORD PTR [r13+rdx*1+0x31a57d8],rsp
   140017b7e:	call   0xf15ae89e
   140017b83:	je     0x140017b50
   140017b85:	ret    0xce27
   140017b88:	(bad)  
   140017b89:	in     al,dx
   140017b8a:	or     BYTE PTR [rax+rbp*8],dh
   140017b8d:	push   rdi
   140017b8e:	push   0x28
   140017b90:	add    ebx,DWORD PTR [rax-0x7dadeba4]
   140017b96:	retf   
   140017b97:	fistp  QWORD PTR [rcx+0x68c4efbc]
   140017b9d:	mov    dh,0x8e
   140017b9f:	adc    bl,BYTE PTR [rbx]
   140017ba1:	sub    al,0xbc
   140017ba3:	pop    rax
   140017ba4:	out    dx,al
   140017ba5:	xor    al,0xb4
   140017ba7:	(bad)  
   140017ba8:	mov    edx,0x850214c7
   140017bad:	imul   edx,DWORD PTR [rdi+rcx*1],0x6a4c0d48
   140017bb4:	cdq    
   140017bb5:	and    eax,0x4840a898
   140017bba:	cwde   
   140017bbb:	add    al,0x22
   140017bbd:	and    eax,0xc38a8a62
   140017bc2:	adc    cl,BYTE PTR [rax]
   140017bc4:	cmp    DWORD PTR [rax],ebp
   140017bc6:	lods   al,BYTE PTR ds:[rsi]
   140017bc7:	loopne 0x140017bbf
   140017bc9:	rex.RB (bad) 
   140017bcb:	movabs ds:0xcf7cc4632feb6244,al
   140017bd4:	xor    DWORD PTR [rip+0xffffffffafa7a818],0x9afbbd7e        # 0xefa923f6
   140017bde:	mov    DWORD PTR [rsi],0xddd912c6
   140017be4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017be5:	repz cld 
   140017be7:	rex.WX or al,0x55
   140017bea:	add    BYTE PTR [rbx+0x3604090f],dl
   140017bf0:	add    ah,dl
   140017bf2:	(bad)  
   140017bf3:	jp     0x140017ba9
   140017bf5:	movabs ds:0xe3eae9336c314f2b,eax
   140017bfe:	xor    al,0x9f
   140017c00:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017c01:	sub    BYTE PTR [rax-0x69],cl
   140017c04:	xchg   DWORD PTR [rsi-0x4c1111ff],ebx
   140017c0a:	loop   0x140017c2a
   140017c0c:	rex.W add al,dl
   140017c0f:	or     bh,BYTE PTR [rbx]
   140017c11:	(bad)  
   140017c12:	(bad)  
   140017c13:	loopne 0x140017c2a
   140017c15:	(bad)  
   140017c16:	add    DWORD PTR [rdx+0x72],edx
   140017c19:	out    dx,al
   140017c1a:	test   BYTE PTR [rax],ch
   140017c1c:	adc    al,0x9e
   140017c1e:	adc    BYTE PTR [rdx+0x2c],ch
   140017c21:	dec    esi
   140017c23:	add    al,0x8e
   140017c25:	(bad)  
   140017c26:	rex.RXB adc eax,0xf1f7147f
   140017c2c:	sti    
   140017c2d:	jmp    0x14fe560f0
   140017c32:	xor    al,al
   140017c34:	loopne 0x140017cae
   140017c36:	mov    dl,0xe1
   140017c38:	(bad)  
   140017c39:	mov    edi,0x81c8fd5f
   140017c3e:	push   0x4b
   140017c40:	pop    rsp
   140017c41:	call   0x104c112e9
   140017c46:	push   rax
   140017c47:	add    eax,0xb0b89930
   140017c4c:	push   rbp
   140017c4d:	mov    bl,0xf6
   140017c4f:	rol    BYTE PTR [rsi-0xc780487],1
   140017c55:	and    edx,DWORD PTR fs:[rdx-0x7e]
   140017c59:	rex.WRB popf 
   140017c5b:	scas   eax,DWORD PTR es:[rdi]
   140017c5c:	outs   dx,BYTE PTR ds:[rsi]
   140017c5d:	adc    dh,dl
   140017c5f:	rex.RB cmp al,0xee
   140017c62:	pop    rax
   140017c63:	test   BYTE PTR [rdi+0x5bdcb3ad],bl
   140017c69:	repnz push rcx
   140017c6b:	jg     0x140017c38
   140017c6d:	xlat   BYTE PTR ds:[rbx]
   140017c6e:	pop    rdx
   140017c6f:	out    dx,eax
   140017c70:	call   QWORD PTR [rbx+0x18]
   140017c73:	or     al,0x22
   140017c75:	ins    BYTE PTR es:[rdi],dx
   140017c76:	and    BYTE PTR [rip+0x18905f57],ah        # 0x15891dbd3
   140017c7c:	(bad)  
   140017c7d:	and    eax,0x1e86fd66
   140017c82:	clc    
   140017c83:	(bad)  
   140017c84:	(bad)  
   140017c85:	add    edx,DWORD PTR [rdx-0x7b727c54]
   140017c8b:	(bad)  
   140017c8c:	adc    ecx,eax
   140017c8e:	ja     0x140017c9a
   140017c90:	loop   0x140017cfe
   140017c92:	cmp    eax,0x8ec0f2dd
   140017c97:	jns    0x140017ca8
   140017c99:	out    dx,eax
   140017c9a:	sbb    BYTE PTR [rbx+rdi*1+0xd],ch
   140017c9e:	rex.WRB test QWORD PTR [r13+0x19],0x72802a8
   140017ca6:	(bad)  
   140017ca7:	or     eax,0xefa80068
   140017cac:	cmp    BYTE PTR [rcx+0x59],dl
   140017caf:	sub    QWORD PTR [rip+0x6e08129c],rsi        # 0x1ae098f52
   140017cb6:	sub    BYTE PTR [rdi+0x1e56f7c3],0xde
   140017cbd:	fild   WORD PTR [rdi]
   140017cbf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017cc0:	jmp    0x105c1b369
   140017cc5:	or     ebx,DWORD PTR [rax+0x21]
   140017cc8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017cc9:	movabs ds:0x20b72074f0515808,al
   140017cd2:	add    BYTE PTR [rsi+0x19],cl
   140017cd5:	fs or  bl,dl
   140017cd8:	and    DWORD PTR [rsi+rdi*4+0x5f],esp
   140017cdc:	xchg   esp,eax
   140017cdd:	test   DWORD PTR [rdi+0x4d90bc9],0x382b3c80
   140017ce7:	push   rbx
   140017ce8:	rex.WXB movabs r11,0x667aeb03de63b47f
   140017cf2:	hlt    
   140017cf3:	and    ebx,DWORD PTR [rax+0x7e]
   140017cf6:	ins    DWORD PTR es:[rdi],dx
   140017cf7:	in     eax,dx
   140017cf8:	popf   
   140017cf9:	add    dl,BYTE PTR [rax+0x5]
   140017cfc:	xor    cl,bl
   140017cfe:	sub    BYTE PTR [rdx-0x57fc580],dh
   140017d04:	iret   
   140017d05:	ss pop rsp
   140017d07:	mov    ecx,0xeedd5ced
   140017d0c:	and    sil,BYTE PTR [rsp+r11*1]
   140017d10:	jle    0x140017d2a
   140017d12:	(bad)  
   140017d13:	adc    al,BYTE PTR [rbx+rcx*8]
   140017d16:	retf   
   140017d17:	adc    al,0x9d
   140017d19:	(bad)  
   140017d1a:	cmp    eax,0x49bbb9b0
   140017d1f:	movsxd ecx,DWORD PTR [rdi]
   140017d21:	rex.RXB cld 
   140017d23:	(bad)  
   140017d24:	int    0x59
   140017d26:	lock and eax,0xb7b904e
   140017d2c:	outs   dx,DWORD PTR ds:[rsi]
   140017d2d:	mov    esp,0x80dae775
   140017d32:	xor    al,0x76
   140017d34:	or     eax,0x4fc1ce4
   140017d39:	(bad)  
   140017d3a:	pop    rdi
   140017d3b:	out    dx,al
   140017d3c:	retf   
   140017d3d:	(bad)  
   140017d3e:	and    BYTE PTR [rdi+0x23f7496b],0x3b
   140017d45:	out    0xde,al
   140017d47:	dec    edx
   140017d49:	xchg   ecx,eax
   140017d4a:	sbb    DWORD PTR [rdi],esp
   140017d4c:	sar    BYTE PTR [rbx+rax*4-0x71],1
   140017d50:	movabs ds:0x8252140e500550c4,al
   140017d59:	jnp    0x140017daa
   140017d5b:	mov    ah,0x8e
   140017d5d:	sbb    al,0x3c
   140017d5f:	fnsave [rdx+0x1ec2081a]
   140017d65:	test   BYTE PTR es:[rsi-0x2fd6c036],0xf1
   140017d6d:	mov    bl,0x42
   140017d6f:	or     bl,cl
   140017d71:	add    BYTE PTR [rdi-0x29],al
   140017d74:	mov    ebp,0x4f8c4902
   140017d79:	sti    
   140017d7a:	jns    0x140017d3b
   140017d7c:	popf   
   140017d7d:	sbb    DWORD PTR [rdx],eax
   140017d7f:	rex.WB ins DWORD PTR es:[rdi],dx
   140017d81:	or     DWORD PTR [rdi+0x1],0x679ebf06
   140017d88:	jns    0x140017d0e
   140017d8a:	mov    dl,0x60
   140017d8c:	add    edi,DWORD PTR [rdi]
   140017d8e:	icebp  
   140017d8f:	movsxd ebp,DWORD PTR [rax+0x3c]
   140017d92:	jns    0x140017d77
   140017d94:	xchg   ebx,ebx
   140017d96:	repnz cmp DWORD PTR ds:[rdi],0x1e
   140017d9b:	repnz sub edi,DWORD PTR [rbx-0x4a81ebd1]
   140017da2:	(bad)  
   140017da3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017da4:	xchg   BYTE PTR [rsi+0x2680cb01],ah
   140017daa:	pop    rbp
   140017dab:	(bad)  
   140017dac:	cmp    eax,0x3b9eb367
   140017db1:	ds jne 0x140017daa
   140017db4:	stos   DWORD PTR es:[rdi],eax
   140017db5:	imul   eax,DWORD PTR [rdx+0x2f473e59],0x4478b9eb
   140017dbf:	xchg   edi,eax
   140017dc0:	lahf   
   140017dc1:	adc    ecx,DWORD PTR [rax]
   140017dc3:	add    al,0xa1
   140017dc5:	(bad)  
   140017dc6:	fcom   QWORD PTR [rax+0x50]
   140017dc9:	xor    eax,ebx
   140017dcb:	movabs ds:0x4fce42ca2760241d,al
   140017dd4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017dd5:	cli    
   140017dd6:	push   rdx
   140017dd7:	(bad)  
   140017dd8:	jmp    0x140017e19
   140017dda:	mov    WORD PTR [rax+rdi*8],ss
   140017ddd:	nop
   140017dde:	lahf   
   140017ddf:	(bad)  
   140017de0:	(bad)  
   140017de1:	add    BYTE PTR [rsp+rcx*4],cl
   140017de4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017de5:	scas   eax,DWORD PTR es:[rdi]
   140017de6:	fnstsw WORD PTR [rbx-0x28785517]
   140017dec:	(bad)  
   140017ded:	jmp    0x140017e2b
   140017def:	test   DWORD PTR [rsi+0x63],esp
   140017df2:	mov    esp,0x29fe1501
   140017df7:	add    BYTE PTR [rbp+0x0],ah
   140017dfa:	in     eax,0x41
   140017dfc:	and    DWORD PTR [rip+0xffffffffc77f7eb8],esp        # 0x10780fcba
   140017e02:	cdq    
   140017e03:	fsubrp st(1),st
   140017e05:	lods   al,BYTE PTR ds:[rsi]
   140017e06:	retf   
   140017e07:	lahf   
   140017e08:	xchg   ebp,eax
   140017e09:	mov    cl,0x60
   140017e0b:	pop    rsp
   140017e0c:	(bad)  
   140017e0d:	jmp    0x140017de6
   140017e0f:	imul   ecx,DWORD PTR [rbx-0x42],0x7979679e
   140017e16:	(bad)  
   140017e17:	cmp    eax,0x1cb0ec12
   140017e1c:	add    al,0xbe
   140017e1e:	xchg   eax,eax
   140017e20:	(bad)
   140017e23:	sub    eax,0x130630bd
   140017e28:	pop    rcx
   140017e29:	(bad)  
   140017e2a:	fcom   st(7)
   140017e2c:	(bad)  
   140017e2d:	lods   al,BYTE PTR ds:[rsi]
   140017e2e:	rex.R pop rsp
   140017e30:	sahf   
   140017e31:	(bad)  
   140017e32:	pop    rbp
   140017e33:	jne    0x140017e10
   140017e35:	(bad)  
   140017e36:	test   DWORD PTR [rdi],ecx
   140017e38:	outs   dx,BYTE PTR ds:[rsi]
   140017e39:	cmp    al,0xde
   140017e3b:	xor    DWORD PTR [rcx-0x70],esi
   140017e3e:	addr32 sbb eax,0xc2a02452
   140017e44:	(bad)  
   140017e45:	and    eax,0x5ca00aa0
   140017e4a:	sub    BYTE PTR [rcx+rcx*1-0x52],dh
   140017e4e:	(bad)  
   140017e50:	stc    
   140017e51:	pop    rdx
   140017e52:	lea    ecx,[rdi+rdi*2+0x68]
   140017e56:	mov    ecx,0x35bb8ce7
   140017e5b:	and    BYTE PTR [rbx+0x7e],al
   140017e5e:	add    al,0x18
   140017e60:	jno    0x140017ec3
   140017e62:	adc    BYTE PTR [rcx],bl
   140017e64:	(bad)  
   140017e65:	(bad)  
   140017e66:	std    
   140017e67:	xor    BYTE PTR [rsi-0x67],cl
   140017e6a:	or     ebp,eax
   140017e6c:	lods   eax,DWORD PTR ds:[rsi]
   140017e6d:	mov    ebp,0x7213e48b
   140017e72:	jbe    0x140017e8b
   140017e74:	movabs ds:0x4bfa8e84821b7f3e,al
   140017e7d:	lea    eax,[rax+0x637e91f1]
   140017e83:	rex.WR jle 0x140017eee
   140017e86:	mov    eax,0xba9b99e5
   140017e8b:	(bad)  
   140017e8c:	std    
   140017e8d:	hlt    
   140017e8e:	lock jo 0x140017ee7
   140017e91:	rex.RB xchg r9d,eax
   140017e93:	imul   BYTE PTR [rbx-0x46]
   140017e96:	outs   dx,DWORD PTR ds:[rsi]
   140017e97:	or     al,BYTE PTR [rdx+0x5d]
   140017e9a:	xor    BYTE PTR [rdx-0x1f68b660],0x1b
   140017ea1:	(bad)  
   140017ea2:	je     0x140017ef8
   140017ea4:	xchg   edi,eax
   140017ea5:	sub    eax,0xa3beba19
   140017eaa:	rex.X lahf 
   140017eac:	mov    gs,WORD PTR [rdi]
   140017eae:	or     eax,0x649178c5
   140017eb3:	add    edi,DWORD PTR [rsi+0x4664047]
   140017eb9:	rex.WX stos BYTE PTR es:[rdi],al
   140017ebb:	pop    rsi
   140017ebc:	fadd   QWORD PTR [rip+0xffffffff8ac0b3c3]        # 0xcac23285
   140017ec2:	jmp    0x140017ec0
   140017ec4:	pop    rax
   140017ec5:	mov    eax,0x3cb09ebd
   140017eca:	es or  al,0xc8
   140017ecd:	frstor [rax+0x76049941]
   140017ed3:	out    dx,al
   140017ed4:	fst    QWORD PTR [rbx-0x53]
   140017ed7:	(bad)  
   140017ed8:	(bad)  
   140017ed9:	pop    rcx
   140017eda:	mov    ebp,0xc358f968
   140017edf:	retf   0xcf10
   140017ee2:	mov    ebp,esi
   140017ee4:	std    
   140017ee5:	push   0xfffffffffffffff9
   140017ee7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140017ee8:	sbb    BYTE PTR [rcx+rax*1+0x46710f94],dl
   140017eef:	movabs al,ds:0xdcd50095f6c3f9b6
   140017ef8:	sub    ebx,eax
   140017efa:	push   rsi
   140017efb:	pop    rbp
   140017efc:	sbb    al,0x79
   140017efe:	(bad)  
   140017eff:	push   rdx
   140017f00:	cs setl ch
   140017f04:	mov    bh,0x91
   140017f06:	push   rdx
   140017f07:	mov    BYTE PTR [rdx+0x7f5cdcf5],ch
   140017f0d:	js     0x140017f26
   140017f0f:	mov    dil,BYTE PTR [r11+0x5c]
   140017f13:	icebp  
   140017f14:	btc    DWORD PTR [rip+0xffffffffc0380cc2],edx        # 0x100398bdd
   140017f1b:	xor    BYTE PTR [rsi-0x71e41c25],dl
   140017f21:	jbe    0x140017eff
   140017f23:	jg     0x140017f70
   140017f25:	xlat   BYTE PTR ds:[rbx]
   140017f26:	jne    0x140017f57
   140017f28:	and    ah,cl
   140017f2a:	icebp  
   140017f2b:	rol    DWORD PTR [rax+0x2a8034df],cl
   140017f31:	xor    BYTE PTR [rdx],0xa1
   140017f34:	leave  
   140017f35:	or     al,0xf7
   140017f37:	jnp    0x140017f8f
   140017f39:	sub    al,0xd8
   140017f3b:	xor    eax,0xfa376234
   140017f40:	mov    esi,0x8064117e
   140017f45:	(bad)  
   140017f46:	xchg   ebp,eax
   140017f47:	rex.RX jle 0x140017fc3
   140017f4a:	adc    ecx,DWORD PTR [rcx-0xe5c6e1e]
   140017f50:	es pushf 
   140017f52:	es (bad) 
   140017f54:	add    eax,DWORD PTR [rbp-0x2e0e5fa0]
   140017f5a:	(bad)  
   140017f5b:	push   rax
   140017f5c:	imul   BYTE PTR [rbx]
   140017f5e:	repz add ecx,DWORD PTR [rax]
   140017f61:	(bad)  
   140017f62:	mov    edx,0xaeecf9dd
   140017f67:	fnstenv [rdi+0x7f]
   140017f6a:	jae    0x140017f39
   140017f6c:	xor    eax,0xbe09c3af
   140017f71:	or     bh,bh
   140017f73:	xor    al,0x82
   140017f75:	mov    es,WORD PTR [rip+0xa0a1f2f]        # 0x14a0b9eaa
   140017f7b:	add    BYTE PTR [rax-0x13],al
   140017f7e:	mov    ebp,0x3fabad93
   140017f83:	call   rcx
   140017f85:	xchg   ecx,eax
   140017f86:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140017f87:	(bad)  
   140017f88:	and    BYTE PTR [rcx-0x3e],dh
   140017f8b:	rex.WR xchg rcx,rax
   140017f8d:	xor    BYTE PTR [rbx+0x50],dl
   140017f90:	or     DWORD PTR [rcx+rdx*2],esp
   140017f93:	rex jle 0x140017fad
   140017f96:	mov    edi,0x7ada4000
   140017f9b:	movabs ds:0xfab054f77af47e88,eax
   140017fa4:	(bad)  
   140017fa5:	lahf   
   140017fa6:	movabs al,ds:0xfee7eb43d2f67cff
   140017faf:	jl     0x140017f9e
   140017fb1:	(bad)  
   140017fb2:	popf   
   140017fb3:	(bad)  
   140017fb4:	push   rcx
   140017fb5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140017fb6:	cld    
   140017fb7:	loop   0x140017fa8
   140017fb9:	imul   edx,DWORD PTR [rcx-0x3978eb31],0x0
   140017fc0:	retf   0xe286
   140017fc3:	lods   al,BYTE PTR ds:[rsi]
   140017fc4:	add    BYTE PTR [rbx],cl
   140017fc6:	sar    dh,0xab
   140017fc9:	mov    bh,0xd2
   140017fcb:	imul   DWORD PTR [rbp-0x25a26331]
   140017fd1:	xchg   edx,eax
   140017fd2:	rcr    BYTE PTR [rax+riz*1-0x5a],cl
   140017fd6:	lock adc al,0x7c
   140017fd9:	jge    0x14001804c
   140017fdb:	or     esp,DWORD PTR [rdx+0x4ddefff9]
   140017fe1:	(bad)  
   140017fe2:	stos   DWORD PTR es:[rdi],eax
   140017fe3:	out    dx,eax
   140017fe4:	out    0x81,al
   140017fe6:	(bad)  
   140017fe7:	xchg   ebx,eax
   140017fe8:	jl     0x140017fa2
   140017fea:	loop   0x140017f7b
   140017fec:	sar    DWORD PTR [rbx-0x72],cl
   140017fef:	jle    0x140018009
   140017ff1:	adc    BYTE PTR [rax+0x6e],dh
   140017ff4:	pop    rdi
   140017ff5:	jg     0x140017fdc
   140017ff7:	leave  
   140017ff8:	fwait
   140017ff9:	sahf   
   140017ffa:	mov    ebx,0xa7bda9ee
   140017fff:	sub    ah,BYTE PTR [rdi-0x30]
   140018002:	pop    rsp
   140018003:	clc    
   140018004:	xor    eax,0xa00d37d8
   140018009:	rex cmp DWORD PTR cs:[rcx+0x60],edx
   14001800e:	add    DWORD PTR [rbx+0x3e46da7b],edi
   140018014:	sbb    al,0xc
   140018016:	sub    ecx,eax
   140018018:	xor    BYTE PTR [rsi+0x3a8df00b],al
   14001801e:	adc    ebx,edi
   140018020:	and    BYTE PTR [rip+0xffffffffe01dc49a],0x8d        # 0x1201f44c1
   140018027:	rex pop rsi
   140018029:	ror    cl,1
   14001802b:	out    0x14,eax
   14001802d:	cld    
   14001802e:	sti    
   14001802f:	add    al,al
   140018031:	stc    
   140018032:	xchg   BYTE PTR [rcx],bh
   140018034:	lock (bad) 
   140018036:	dec    dh
   140018038:	sti    
   140018039:	outs   dx,BYTE PTR ds:[rsi]
   14001803a:	pop    rsi
   14001803b:	jle    0x14001801a
   14001803d:	outs   dx,DWORD PTR ds:[rsi]
   14001803e:	rex.RXB jmp 0x1400180a7
   140018041:	add    al,0xc1
   140018043:	out    0xd7,eax
   140018045:	(bad)  
   140018046:	sahf   
   140018047:	imul   ecx,DWORD PTR [rax],0x45e50055
   14001804d:	movabs eax,ds:0x6b1baf67b7b9e849
   140018056:	cwde   
   140018057:	movsxd edi,esi
   140018059:	or     al,0xc1
   14001805b:	(bad)  
   14001805c:	out    dx,eax
   14001805d:	lock xor al,0x80
   140018060:	xor    BYTE PTR [rcx+0x3e8d87ca],ah
   140018066:	lods   al,BYTE PTR ds:[rsi]
   140018067:	(bad)  
   140018068:	call   0x16203de8e
   14001806d:	adc    al,0x83
   14001806f:	sbb    eax,DWORD PTR [rax+0x37de4041]
   140018075:	pushf  
   140018076:	jbe    0x1400180b5
   140018078:	mov    eax,0x779dde76
   14001807d:	lods   eax,DWORD PTR ds:[rsi]
   14001807e:	pop    rsp
   14001807f:	mov    al,0x19
   140018081:	rex.WRX
   140018082:	lock jne 0x1400180e0
   140018085:	out    dx,eax
   140018086:	xor    al,0x87
   140018088:	mov    edx,0x93446500
   14001808d:	xchg   esp,eax
   14001808e:	loopne 0x14001803e
   140018090:	sahf   
   140018091:	mov    dh,0xf1
   140018093:	out    dx,eax
   140018094:	sub    al,0x1e
   140018096:	(bad)  
   140018097:	cmp    ebp,DWORD PTR [rbx-0x13e3a0d3]
   14001809d:	jg     0x1400180af
   14001809f:	je     0x140018118
   1400180a1:	(bad)  
   1400180a2:	pop    rsp
   1400180a3:	adc    BYTE PTR [rax],0x17
   1400180a6:	xchg   esp,eax
   1400180a7:	lahf   
   1400180a8:	xchg   ecx,eax
   1400180a9:	xchg   edx,eax
   1400180aa:	adc    BYTE PTR [rsp+rcx*1],0xb9
   1400180ae:	jae    0x140018093
   1400180b0:	or     eax,0x91db7473
   1400180b5:	test   bh,0x3e
   1400180b8:	imul   DWORD PTR [rbx-0x244330bb]
   1400180be:	fstp   TBYTE PTR [rdx]
   1400180c0:	test   dh,ah
   1400180c2:	push   rbx
   1400180c3:	jl     0x1400180f9
   1400180c5:	fdiv   DWORD PTR [rdi]
   1400180c7:	or     eax,0xdca00ca1
   1400180cc:	sub    ah,cl
   1400180ce:	or     bl,BYTE PTR [rax-0x1]
   1400180d1:	jle    0x1400180ba
   1400180d3:	rex.WXB or rax,0xfffffffff6ec8ce0
   1400180d9:	xchg   edx,eax
   1400180da:	add    BYTE PTR [rsi-0x2f],bl
   1400180dd:	mov    esp,edi
   1400180df:	repnz pop rsi
   1400180e1:	loop   0x140018143
   1400180e3:	(bad)  
   1400180e4:	movabs ds:0x50af4ebfa5246275,al
   1400180ed:	rex.WRX jrcxz 0x1400180b7
   1400180f0:	iret   
   1400180f1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400180f2:	pop    rbp
   1400180f3:	rex.WRXB cld 
   1400180f5:	in     eax,dx
   1400180f6:	mov    bh,BYTE PTR [rbx-0x4a230342]
   1400180fc:	(bad)  
   1400180fd:	add    edx,DWORD PTR [rax]
   1400180ff:	retf   0x863f
   140018102:	retfw  
   140018104:	cmp    dl,BYTE PTR [rbp-0x8]
   140018107:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018108:	sbb    eax,0x151e742e
   14001810d:	in     eax,0x41
   14001810f:	jno    0x1400180b4
   140018111:	jo     0x140018118
   140018113:	rex sti 
   140018115:	xchg   ecx,eax
   140018116:	rex.RXB (bad) 
   140018118:	std    
   140018119:	in     al,dx
   14001811a:	pushf  
   14001811b:	idiv   ah
   14001811d:	jbe    0x1400180be
   14001811f:	(bad)  
   140018120:	idiv   DWORD PTR [rsi-0x591c782]
   140018126:	(bad)
   14001812a:	adc    al,BYTE PTR [rip+0xffffffffe77663c3]        # 0x12777e4f3
   140018130:	(bad)  
   140018131:	pand   mm3,QWORD PTR [rdi-0x50103902]
   140018138:	(bad)  [rax-0x5d906f9e]
   14001813e:	(bad)  
   14001813f:	push   rdi
   140018140:	rcr    DWORD PTR [rdi+0x6034d0c6],0xf9
   140018147:	push   rcx
   140018148:	pushf  
   140018149:	adc    eax,0xd57db470
   14001814e:	ins    DWORD PTR es:[rdi],dx
   14001814f:	xlat   BYTE PTR ds:[rbx]
   140018150:	movq   mm5,mm1
   140018153:	pop    rax
   140018154:	outs   dx,BYTE PTR ds:[rsi]
   140018155:	std    
   140018156:	adc    DWORD PTR [rcx+0xc530326],ecx
   14001815c:	jmp    0x1400181cf
   14001815e:	rex.W
   14001815f:	add    al,0xdf
   140018162:	or     edi,edi
   140018164:	js     0x140018129
   140018166:	sbb    al,0x7c
   140018168:	jmp    QWORD PTR [rbp+riz*8+0xf]
   14001816c:	idiv   DWORD PTR [rbp-0x309440c8]
   140018172:	icebp  
   140018173:	(bad)  
   140018174:	(bad)  
   140018175:	cmp    cl,al
   140018177:	(bad)
   14001817b:	not    BYTE PTR [rbp+0x50025ff2]
   140018181:	(bad)  
   140018182:	push   rax
   140018183:	jbe    0x140018109
   140018185:	(bad)  
   140018186:	ret    0x2d
   140018189:	pop    rdx
   14001818a:	outs   dx,DWORD PTR ds:[rsi]
   14001818b:	cwde   
   14001818c:	(bad)  
   14001818d:	cmp    dh,bl
   14001818f:	int    0xef
   140018191:	sbb    eax,0x6951d55a
   140018196:	sub    al,0x96
   140018198:	or     BYTE PTR [rdi-0x6e85bc77],bh
   14001819e:	(bad)  
   14001819f:	out    dx,eax
   1400181a0:	sbb    edi,ebx
   1400181a2:	or     al,0x30
   1400181a4:	pop    rdx
   1400181a5:	xor    eax,DWORD PTR [rdi+0x56540e0e]
   1400181ab:	std    
   1400181ac:	jp     0x140018199
   1400181ae:	pushf  
   1400181af:	push   rdi
   1400181b0:	pop    rsi
   1400181b1:	fdivr  DWORD PTR [rsi]
   1400181b3:	stos   DWORD PTR es:[rdi],eax
   1400181b4:	cmovle esp,eax
   1400181b7:	movsxd eax,ecx
   1400181b9:	push   rdi
   1400181ba:	stos   DWORD PTR es:[rdi],eax
   1400181bb:	jg     0x1400181c6
   1400181bd:	rex.X sbb DWORD PTR [rax-0x7],eax
   1400181c1:	push   rcx
   1400181c2:	or     rsi,rbp
   1400181c5:	in     eax,dx
   1400181c6:	imul   ebx,DWORD PTR [rip+0x7b267c39],0xfffffff9        # 0x1bb27fe06
   1400181cd:	xchg   ebx,eax
   1400181ce:	jae    0x1400181eb
   1400181d0:	mov    edi,ebp
   1400181d2:	pop    rcx
   1400181d3:	add    BYTE PTR [rax],dh
   1400181d5:	cmp    DWORD PTR [rbp+rdi*8-0x4a],esp
   1400181d9:	(bad)  
   1400181da:	test   DWORD PTR [rip+0xffffffffef331d50],0xf968181c        # 0x12f349f34
   1400181e4:	shl    ebx,cl
   1400181e6:	scas   eax,DWORD PTR es:[rdi]
   1400181e7:	pop    rdi
   1400181e8:	stc    
   1400181e9:	out    0xbf,eax
   1400181eb:	in     al,dx
   1400181ec:	jmp    0x14001820a
   1400181ee:	(bad)  
   1400181ef:	test   DWORD PTR [rdx-0x52bd13d1],eax
   1400181f5:	(bad)  
   1400181f6:	and    eax,0x53006508
   1400181fb:	add    DWORD PTR [rbp+0x16],eax
   1400181fe:	shl    BYTE PTR [rsi-0x31],1
   140018201:	int    0x43
   140018203:	push   rdi
   140018204:	std    
   140018205:	repnz mov ds,esi
   140018208:	jne    0x14001819f
   14001820a:	test   dh,ah
   14001820c:	add    eax,DWORD PTR [rax]
   14001820e:	in     eax,0x70
   140018210:	in     eax,dx
   140018211:	ror    DWORD PTR [rbx+rsi*8+0x6b],0xd
   140018216:	sar    DWORD PTR [rdi],cl
   140018218:	jo     0x140018258
   14001821a:	(bad)  [rdx-0x250d5845]
   140018220:	adc    ebp,DWORD PTR [rdi-0x18924ea1]
   140018226:	mov    cl,0xb6
   140018228:	(bad)  
   140018229:	add    al,0x81
   14001822b:	lahf   
   14001822c:	push   0xffffffff8f4b65f1
   140018231:	pop    rdx
   140018232:	std    
   140018233:	rex.WXB adc r10b,cl
   140018236:	add    BYTE PTR [rsi+0x159e206],ah
   14001823c:	mov    ch,0xdf
   14001823e:	mov    ebp,0x4fc4fb3d
   140018243:	outs   dx,BYTE PTR ds:[rsi]
   140018244:	jmp    0x1400182a5
   140018246:	cmp    ebp,DWORD PTR [rdi+0x66]
   140018249:	std    
   14001824a:	ds add edx,edi
   14001824d:	jmp    0x14001828e
   14001824f:	push   rsi
   140018250:	rex.RXB iret 
   140018252:	cdq    
   140018253:	mov    cl,0x74
   140018255:	mul    DWORD PTR [rcx-0x3a844b3f]
   14001825b:	(bad)  
   14001825c:	outs   dx,DWORD PTR ds:[esi]
   14001825e:	jp     0x14001825e
   140018260:	lods   eax,DWORD PTR ds:[rsi]
   140018261:	cmp    DWORD PTR [rbp-0x641faf48],edi
   140018267:	pop    rcx
   140018268:	jl     0x140018257
   14001826a:	fistp  QWORD PTR [rdi+0x600aa184]
   140018270:	(bad)  
   140018271:	and    BYTE PTR [rsi-0x1241cfeb],bl
   140018277:	jo     0x1400182d4
   140018279:	xlat   BYTE PTR ds:[rbx]
   14001827a:	ror    BYTE PTR [rdi-0x72f2e8a9],cl
   140018280:	data16 sti 
   140018282:	neg    DWORD PTR [rbp-0x19012698]
   140018288:	sti    
   140018289:	sbb    eax,0xf9bd3c1f
   14001828e:	repnz pop rsi
   140018290:	test   BYTE PTR [rsi],bl
   140018292:	(bad)  
   140018293:	pop    rax
   140018294:	loopne 0x1400182bd
   140018296:	(bad)  
   140018297:	not    DWORD PTR [rax+rsi*8+0x15]
   14001829b:	or     al,BYTE PTR [rbp+0x2850a142]
   1400182a1:	adc    al,0xa
   1400182a3:	test   DWORD PTR [rdx-0x5f],eax
   1400182a6:	push   rax
   1400182a7:	sub    BYTE PTR [rdx+rcx*1],dl
   1400182aa:	test   DWORD PTR [rdx-0x5f],eax
   1400182ad:	push   rax
   1400182ae:	sub    BYTE PTR [rdx+rcx*1],dl
   1400182b1:	test   DWORD PTR [rdx-0x5f],eax
   1400182b4:	push   rax
   1400182b5:	sub    BYTE PTR [rdx+rcx*1],dl
   1400182b8:	test   DWORD PTR [rdx-0x5f],eax
   1400182bb:	push   rax
   1400182bc:	sub    BYTE PTR [rdx+rcx*1],dl
   1400182bf:	test   DWORD PTR [rdx-0x5f],eax
   1400182c2:	push   rax
   1400182c3:	sub    BYTE PTR [rsi-0x66f401e0],ah
   1400182c9:	and    esi,DWORD PTR [rax+0x0]
   1400182cc:	xlat   BYTE PTR ds:[rbx]
   1400182cd:	lahf   
   1400182ce:	(bad)  
   1400182cf:	ret    0x0
   1400182d2:	add    BYTE PTR [rax],al
   1400182d4:	rex.WB
   1400182d5:	rex.RB
   1400182d6:	rex.WRX
   1400182d7:	rex.R scas al,BYTE PTR es:[rdi]
   1400182d9:	rex.X (bad) 
   1400182db:	(bad)  
   1400182dc:	sub    BYTE PTR [rax],al
   1400182de:	add    BYTE PTR [rax],al
   1400182e0:	xor    BYTE PTR [rax],al
   1400182e2:	add    BYTE PTR [rax],al
   1400182e4:	(bad)  
   1400182e5:	add    BYTE PTR [rax],al
   1400182e7:	add    BYTE PTR [rcx],al
   1400182e9:	add    BYTE PTR [rax],ah
   1400182eb:	add    BYTE PTR [rax],al
   1400182ed:	add    BYTE PTR [rax],al
   1400182ef:	add    BYTE PTR [rax+0x25],al
	...
   1400184d1:	add    BYTE PTR [rax],al
   1400184d3:	add    BYTE PTR [rsi+0x79],cl
   1400184d6:	jg     0x14001851d
   1400184d8:	rex.XB sahf 
   1400184da:	rcl    BYTE PTR [rcx+0x3f666b53],0x59
   1400184e1:	push   rsi
   1400184e2:	rex.X or BYTE PTR [rax],al
	...
   14001858d:	add    BYTE PTR [rax],al
   14001858f:	add    BYTE PTR [rbx+riz*2+0x59],dl
   140018593:	add    eax,0xbabc9b44
   140018598:	cmp    edi,DWORD PTR [rdx-0x45c4000c]
   14001859e:	hlt    
   14001859f:	inc    BYTE PTR [rsp+rbx*4-0x41]
   1400185a3:	mov    esi,0x34455858
   1400185a8:	push   rsp
   1400185a9:	(bad)  
   1400185aa:	pop    rsp
   1400185ab:	add    eax,DWORD PTR [rax]
	...
   14001864d:	add    BYTE PTR [rax],al
   14001864f:	add    BYTE PTR [rbp+0x64],dl
   140018652:	pop    rdx
   140018653:	xor    al,0x3b
   140018655:	mov    ecx,0xba3bfaf2
   14001865a:	hlt    
   14001865b:	(bad)  
   14001865c:	cmp    edi,DWORD PTR [rdx-0x46c4010c]
   140018662:	hlt    
   140018663:	(bad)  
   140018664:	cmp    al,0xb1
   140018666:	in     al,dx
   140018667:	repz push rcx
   140018669:	push   0x71
   14001866b:	imul   edx,DWORD PTR [rdi+0x56],0x4d
   14001866f:	(bad)  
	...
   14001870c:	push   rbp
   14001870d:	(bad)  
   14001870e:	pop    rcx
   14001870f:	add    ecx,DWORD PTR [rcx-0x77]
   140018712:	lahf   
   140018713:	pushf  
   140018714:	cmp    edi,DWORD PTR [rcx-0x46c4010c]
   14001871a:	hlt    
   14001871b:	(bad)  
   14001871c:	cmp    esi,DWORD PTR [rdi-0x4bc4010c]
   140018722:	repz (bad) 
   140018724:	cmp    al,0xad
   140018726:	icebp  
   140018727:	(bad)  
   140018728:	cmp    al,0xa1
   14001872a:	out    dx,eax
   14001872b:	std    
   14001872c:	rex.WR outs dx,BYTE PTR ds:[rsi]
   14001872e:	mov    WORD PTR [rdi+0x8515256],cs
	...
   1400187cc:	push   rdi
   1400187cd:	pop    rax
   1400187ce:	rex.WRXB (bad) 
   1400187d0:	cmp    eax,0x3cf1eaa9
   1400187d5:	mov    al,0xf2
   1400187d7:	(bad)  
   1400187d8:	cmp    al,0xaf
   1400187da:	repnz (bad) 
   1400187dc:	cmp    al,0xac
   1400187de:	icebp  
   1400187df:	(bad)  
   1400187e0:	cmp    al,0xa7
   1400187e2:	lock (bad) 
   1400187e4:	cmp    esp,DWORD PTR [rax-0x66c40011]
   1400187ea:	out    dx,al
   1400187eb:	(bad)  
   1400187ec:	cmp    edx,DWORD PTR [rcx+0x684affee]
   1400187f2:	xchg   ebp,eax
   1400187f3:	xchg   esi,eax
   1400187f4:	push   rsi
   1400187f5:	rex.WRB push r8
   1400187f7:	or     DWORD PTR [rax],eax
	...
   140018885:	add    BYTE PTR [rax],al
   140018887:	add    BYTE PTR [rbx+0x51],dl
   14001888a:	pop    rsi
   14001888b:	add    DWORD PTR [rsi+0x65],ecx
   14001888e:	jge    0x14001890b
   140018890:	cmp    ebx,DWORD PTR [rdx-0x61c40111]
   140018896:	out    dx,eax
   140018897:	(bad)  
   140018898:	cmp    ebx,DWORD PTR [rsi-0x64c40011]
   14001889e:	out    dx,eax
   14001889f:	(bad)  
   1400188a0:	cmp    ebx,DWORD PTR [rax-0x6bc40112]
   1400188a6:	out    dx,al
   1400188a7:	(bad)  
   1400188a8:	cmp    ecx,DWORD PTR [rdi-0x76c40113]
   1400188ae:	in     eax,dx
   1400188af:	(bad)  
   1400188b0:	cmp    eax,DWORD PTR [rdx+0x5b4efeec]
   1400188b6:	add    DWORD PTR [rsi+0x6574c55],0x0
	...
   140018945:	add    BYTE PTR [rax],al
   140018947:	add    BYTE PTR [rsi+0x41],dl
   14001894a:	rex or edi,DWORD PTR [rip+0x3bded470]        # 0x17be05dc1
   140018951:	sub    esp,0xfffffffe
   140018954:	cmp    ecx,DWORD PTR [rax-0x75c40113]
   14001895a:	in     eax,dx
   14001895b:	(bad)  
   14001895c:	cmp    ecx,DWORD PTR [rbx-0x77c40113]
   140018962:	in     al,dx
   140018963:	(bad)  
   140018964:	cmp    eax,DWORD PTR [rbp-0x7cc40014]
   14001896a:	in     al,dx
   14001896b:	(bad)  
   14001896c:	cmp    eax,DWORD PTR [rcx+0x7e3cfeec]
   140018972:	jmp    0x140018973
   140018974:	cmp    al,0x79
   140018976:	(bad)  
   140018977:	cld    
   140018978:	push   rdx
   140018979:	push   rcx
   14001897a:	imul   esp,DWORD PTR [rsi+0x54],0x35c4d
	...
   140018a01:	add    BYTE PTR [rax],al
   140018a03:	add    BYTE PTR [rbp+0x35],cl
   140018a06:	add    DWORD PTR [r12+r15*1+0x56],ecx
   140018a0b:	pop    rbx
   140018a0c:	xor    bl,BYTE PTR [rax-0x2e]
   140018a0f:	push   QWORD PTR [rsi]
   140018a11:	data16 (bad) 
   140018a14:	cmp    BYTE PTR [rdi-0x1a],ch
   140018a17:	(bad)  
   140018a18:	cmp    DWORD PTR [rbx-0x17],esi
   140018a1b:	(bad)  
   140018a1c:	cmp    dh,BYTE PTR [rsi-0x16]
   140018a1f:	(bad)  
   140018a20:	cmp    dh,BYTE PTR [rdi-0x16]
   140018a23:	(bad)  
   140018a24:	cmp    dh,BYTE PTR [rsi-0x16]
   140018a27:	(bad)  
   140018a28:	cmp    dh,BYTE PTR [rdi-0x16]
   140018a2b:	(bad)  
   140018a2c:	cmp    edi,DWORD PTR [rax-0x15]
   140018a2f:	(bad)  
   140018a30:	cmp    edi,DWORD PTR [rax-0x15]
   140018a33:	(bad)  
   140018a34:	cmp    al,0x78
   140018a36:	jmp    0x140018a37
   140018a38:	cmp    eax,0x56f7e877
   140018a3d:	rex.WXB push r10
   140018a3f:	rex.RB push r12
   140018a41:	rex.WRXB pop r15
   140018a43:	add    al,BYTE PTR [rax]
	...
   140018a79:	add    BYTE PTR [rax],al
   140018a7b:	add    BYTE PTR [rcx+0x32],dl
   140018a7e:	(bad)  
   140018a7f:	add    dl,BYTE PTR [rbx+0x32]
   140018a82:	cmp    dl,BYTE PTR [rsi]
	...
   140018ac4:	rex.WRXB (bad) 
   140018ac6:	xor    BYTE PTR [rdx],cl
   140018ac8:	(bad)  
   140018ac9:	xor    ecx,DWORD PTR [rdx-0x4cc1d635]
   140018acf:	jmp    FWORD PTR [rip+0x31fec04a]        # 0x172004b1f
   140018ad5:	push   rsp
   140018ad6:	int    0xfe
   140018ad8:	xor    al,0x5c
   140018ada:	xlat   BYTE PTR ds:[rbx]
   140018adb:	push   QWORD PTR [rsi]
   140018add:	movsxd ebx,esi
   140018adf:	(bad)  
   140018ae0:	(bad)  
   140018ae1:	jecxz  0x140018ae2
   140018ae4:	(bad)  
   140018ae5:	push   0xffffffffffffffe6
   140018ae7:	(bad)  
   140018ae8:	cmp    BYTE PTR [rbp-0x18],ch
   140018aeb:	(bad)  
   140018aec:	cmp    BYTE PTR [rax-0x17],dh
   140018aef:	(bad)  
   140018af0:	cmp    DWORD PTR [rdx+rbp*8-0x1],esi
   140018af4:	cmp    dh,BYTE PTR [rdi-0x16]
   140018af7:	(bad)  
   140018af8:	cmp    edi,DWORD PTR [rdx-0x15]
   140018afb:	(bad)  
   140018afc:	(bad)  
   140018afd:	ja     0x140018ada
   140018aff:	out    0x58,eax
   140018b01:	rex.WB
   140018b02:	rex.RXB sub al,0x54
   140018b05:	push   rcx
   140018b06:	(bad)  
   140018b07:	add    DWORD PTR [rax],eax
	...
   140018b35:	add    BYTE PTR [rax],al
   140018b37:	add    BYTE PTR [rdi+0x32],cl
   140018b3a:	rex.RX add r10b,BYTE PTR [rbx+0x32]
   140018b3e:	cmp    eax,DWORD PTR [rax+0x3e]
   140018b41:	xor    edi,DWORD PTR [rdi-0x73]
	...
   140018b80:	rex.RXB sub DWORD PTR [r9],r14d
   140018b83:	add    DWORD PTR [rdx+rbp*1+0x3e],eax
   140018b87:	pop    rsi
   140018b88:	(bad)  
   140018b89:	es xchg esp,eax
   140018b8b:	(bad)  
   140018b8c:	and    ebp,DWORD PTR [rsi]
   140018b8e:	popf   
   140018b8f:	jmp    QWORD PTR [rsi]
   140018b91:	ss test al,0xff
   140018b94:	sub    bh,BYTE PTR [rdi]
   140018b96:	mov    ah,0xff
   140018b98:	sub    al,0x48
   140018b9a:	mov    edi,0xc9502fff
   140018b9f:	push   QWORD PTR [rbx]
   140018ba1:	push   rdi
   140018ba2:	sar    edi,1
   140018ba4:	xor    eax,0x36ffda5e
   140018ba9:	fs loope 0x140018bab
   140018bac:	(bad)  
   140018bad:	push   0xffffffffffffffe6
   140018baf:	push   QWORD PTR [rdi]
   140018bb1:	outs   dx,BYTE PTR ds:[rsi]
   140018bb2:	call   0x12a75c4b6
   140018bb7:	(bad)  
   140018bb8:	cmp    bh,BYTE PTR [rcx-0x15]
   140018bbb:	(bad)  
   140018bbc:	cmp    edi,DWORD PTR [rbx+rbp*8-0x1]
   140018bc0:	rex.X je 0x140018b8d
   140018bc3:	rcr    BYTE PTR [rax+0x49],cl
   140018bc6:	rex.RX sbb r8b,BYTE PTR [rax]
	...
   140018bf1:	add    BYTE PTR [rax],al
   140018bf3:	add    BYTE PTR [rcx+0x32],dl
   140018bf6:	add    edx,DWORD PTR [r8+0x32]
   140018bfa:	rex.RXB
   140018bfb:	rex.WR (bad) 
   140018bfd:	xor    esi,DWORD PTR [rbp+0x633247ee]
   140018c03:	add    BYTE PTR ds:[rax],al
	...
   140018c3e:	add    BYTE PTR [rax],al
   140018c40:	push   rax
   140018c41:	sub    ebx,DWORD PTR [rsi]
   140018c43:	sbb    eax,0xe2761e1e
   140018c48:	sbb    bl,BYTE PTR [rsi]
   140018c4a:	mov    esi,edi
   140018c4c:	sbb    eax,0x21ff9023
   140018c51:	sub    dl,BYTE PTR [rdi-0x5ecfdb02]
   140018c57:	(bad)  
   140018c58:	(bad)  
   140018c59:	cmp    DWORD PTR [rdi+rdi*8-0x149bed6],ebp
   140018c60:	sub    al,0x49
   140018c62:	sar    dh,0x30
   140018c65:	push   rcx
   140018c66:	retf   0x34ff
   140018c69:	pop    rax
   140018c6a:	sar    esi,cl
   140018c6c:	ss (bad) 
   140018c6e:	fdiv   st(6),st
   140018c70:	(bad)  
   140018c71:	addr32 in al,0xff
   140018c74:	(bad)  
   140018c75:	ins    DWORD PTR es:[rdi],dx
   140018c76:	call   0x12a76c579
   140018c7b:	(bad)  
   140018c7c:	cmp    bh,BYTE PTR [rdx-0x15]
   140018c7f:	(bad)  
   140018c80:	cmp    eax,0x45feeb7f
   140018c85:	jno    0x140018c3e
   140018c87:	rcr    BYTE PTR [rdx+0x47],0x3c
   140018c8b:	adc    al,BYTE PTR [rax]
	...
   140018cad:	add    BYTE PTR [rax],al
   140018caf:	add    BYTE PTR [rcx+0x32],dl
   140018cb2:	rex.XB add eax,0x6453334d
   140018cb8:	sub    eax,0x34f7bd34
   140018cbd:	xor    esp,DWORD PTR [rax+0x6b3244ca]
   140018cc3:	add    eax,0x0
	...
   140018ce8:	test   DWORD PTR [rdi+0x15],ecx
   140018ceb:	add    bh,BYTE PTR [rbx+0x46]
   140018cee:	clts   
   140018cf0:	or     DWORD PTR [rsi+0x15],0x2
   140018cf4:	add    BYTE PTR [rax],al
   140018cf6:	add    BYTE PTR [rax],al
   140018cf8:	(bad)  
   140018cf9:	xor    eax,0x2b530113
   140018cfe:	(bad)  
   140018cff:	adc    ah,BYTE PTR [rsi]
   140018d01:	sbb    al,0x55
   140018d03:	mov    edx,0xfe791914
   140018d08:	(bad)  
   140018d09:	sbb    edi,DWORD PTR [rdi-0x2]
   140018d0c:	sbb    DWORD PTR [rip+0x211cff86],ebx        # 0x1611e8c98
   140018d12:	(bad)  
   140018d13:	(bad)  
   140018d14:	(bad)  
   140018d15:	(bad)  
   140018d16:	xchg   ebp,eax
   140018d17:	(bad)  
   140018d18:	and    ebp,DWORD PTR [rsi]
   140018d1a:	sahf   
   140018d1b:	jmp    QWORD PTR [rsi]
   140018d1d:	xor    eax,0x3e29fea8
   140018d22:	mov    dl,0xfe
   140018d24:	sub    al,0x46
   140018d26:	mov    ebp,0xc74e2eff
   140018d2b:	(bad)  
   140018d2c:	xor    edx,DWORD PTR [rsi-0x2e]
   140018d2f:	(bad)  
   140018d30:	ss (bad) 
   140018d32:	fdiv   st(7),st
   140018d34:	(bad)  
   140018d35:	push   0x6f38fee5
   140018d3a:	jmp    0x12b79c73d
   140018d3f:	(bad)  
   140018d40:	cmp    al,0x7e
   140018d42:	jmp    0x140018d42
   140018d44:	cmp    eax,DWORD PTR [rbx+0x7245ffec]
   140018d4a:	mov    dl,0xb8
   140018d4c:	pop    rcx
   140018d4d:	rex.W
   140018d4e:	ds (bad) 
   140018d50:	push   rbp
   140018d51:	push   rdx
   140018d52:	push   rdi
   140018d53:	add    DWORD PTR [rax],eax
	...
   140018d69:	add    BYTE PTR [rax],al
   140018d6b:	add    BYTE PTR [rbp+0x32],dl
   140018d6e:	or     BYTE PTR ss:[rax+0x33],cl
   140018d72:	gs jns 0x140018da2
   140018d75:	xor    eax,0x332cfbc1
   140018d7a:	mov    edi,0x743241fe
   140018d7f:	push   0x0
	...
   140018da4:	test   BYTE PTR [rdi+0x14],cl
   140018da7:	(bad)  
   140018da8:	(bad)  
   140018da9:	pop    rax
   140018daa:	sbb    eax,0x397cb65d
   140018daf:	mov    edi,0x6b1e578c
   140018db4:	js     0x140018dfb
   140018db6:	or     eax,0xd477c33
   140018dbb:	push   rax
   140018dbc:	cmp    eax,0x17c83b24
   140018dc1:	adc    bl,BYTE PTR [rbp-0x1]
   140018dc4:	adc    edx,DWORD PTR [rbp*2+0x771814fe]
   140018dcb:	(bad)  
   140018dcc:	(bad)  
   140018dcd:	sbb    edi,DWORD PTR [rbp-0x1]
   140018dd0:	sbb    DWORD PTR [rip+0x201bfe84],ebx        # 0x1601d8c5a
   140018dd6:	mov    esi,?
   140018dd8:	(bad)  
   140018dd9:	es xchg ebx,eax
   140018ddb:	jmp    QWORD PTR [rbx]
   140018ddd:	sub    eax,0x3425fe9c
   140018de2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140018de3:	(bad)  
   140018de4:	sub    DWORD PTR [rip+0x462bffb2],edi        # 0x1862d8d9c
   140018dea:	mov    ebp,0xc84e2ffe
   140018def:	(bad)  
   140018df0:	xor    edx,DWORD PTR [rdi-0x2c]
   140018df3:	push   QWORD PTR [rsi]
   140018df5:	(bad)  
   140018df6:	(bad)  
   140018df8:	(bad)  
   140018df9:	imul   esp,edi,0xfffffffe
   140018dfc:	cmp    BYTE PTR [rdx+rbp*8-0x1],dh
   140018e00:	cmp    al,0x7c
   140018e02:	jmp    0x140018e02
   140018e04:	cmp    eax,DWORD PTR [rbx-0x77c40014]
   140018e0a:	in     al,dx
   140018e0b:	inc    BYTE PTR [rbx+0x7b]
   140018e0e:	ret    0x59c9
   140018e11:	rex.WB (bad) 
   140018e13:	sub    al,0x56
   140018e15:	rex.WR
   140018e16:	rex.WX add rax,QWORD PTR [rax]
	...
   140018e21:	add    BYTE PTR [rax],al
   140018e23:	add    BYTE PTR [rsi+rsi*1+0x3b],dl
   140018e27:	add    bl,BYTE PTR [rax+0x33]
   140018e2a:	sub    al,0x15
   140018e2c:	rex.X
   140018e2d:	sbb    DWORD PTR ss:[rbp-0x23bcad3],0xffc1342d
   140018e38:	xor    esi,DWORD PTR cs:[rsi+0x653246ee]
   140018e3f:	adc    al,0x0
	...
   140018e59:	add    BYTE PTR [rax],al
   140018e5b:	add    BYTE PTR [rbp+rdx*2+0x4a7f0117],cl
   140018e62:	movhps QWORD PTR [rbx-0x3061d48f],xmm5
   140018e69:	xchg   edx,eax
   140018e6a:	rex.RXB dec r11b
   140018e6d:	nop
   140018e6e:	inc    r15
   140018e71:	mov    cs,WORD PTR [rbp-0x1]
   140018e74:	mov    bh,0x81
   140018e76:	rex.R push QWORD PTR [rsi-0x7200d384]
   140018e7d:	pop    rsi
   140018e7e:	sub    bh,bh
   140018e80:	sub    al,0x1c
   140018e82:	rex.W call QWORD PTR [rdi]
   140018e85:	adc    DWORD PTR [rax-0x1],ebx
   140018e88:	adc    edx,DWORD PTR [rdx+rbp*2]
   140018e8b:	call   QWORD PTR [rbx]
   140018e8d:	(bad)  
   140018e8e:	jbe    0x140018e8f
   140018e90:	(bad)  
   140018e91:	sbb    edi,DWORD PTR [rdi+rdi*8+0x18]
   140018e95:	sbb    eax,0x201bff84
   140018e9a:	mov    edi,?
   140018e9c:	(bad)  
   140018e9d:	es xchg ebx,eax
   140018e9f:	jmp    QWORD PTR [rbx]
   140018ea1:	sub    eax,0x3526ff9c
   140018ea6:	test   al,0xff
   140018ea8:	sub    bh,BYTE PTR [rsi]
   140018eaa:	mov    bl,0xff
   140018eac:	sub    al,0x47
   140018eae:	mov    edi,0xcc5131ff
   140018eb3:	push   QWORD PTR [rip+0x37ffd95c]        # 0x178016815
   140018eb9:	push   0x7138ffe5
   140018ebe:	jmp    0x12b7ccac2
   140018ec3:	(bad)  
   140018ec4:	cmp    al,0x83
   140018ec6:	in     al,dx
   140018ec7:	(bad)  
   140018ec8:	cmp    ecx,DWORD PTR [rax-0x74c40013]
   140018ece:	in     eax,dx
   140018ecf:	(bad)  
   140018ed0:	cmp    eax,0x4df1e488
   140018ed5:	pop    rdx
   140018ed6:	jne    0x140018e5f
   140018ed8:	push   rdi
   140018ed9:	xor    ebp,DWORD PTR [r15]
   140018edc:	pop    rax
   140018edd:	cmp    eax,0x39571530
   140018ee2:	xor    BYTE PTR [rax],ah
   140018ee4:	rex.WRX cmp QWORD PTR [rcx+0x68],r10
   140018ee8:	xor    eax,0x2eddb63d
   140018eed:	cmp    cl,cl
   140018eef:	jmp    FWORD PTR [rip+0x2dffc335]        # 0x16e01522a
   140018ef5:	xor    al,0xbf
   140018ef7:	(bad)  
   140018ef8:	cmp    al,0x32
   140018efa:	test   BYTE PTR [rdx+0x178323f],bl
	...
   140018f18:	mov    dl,BYTE PTR [rsi+rdx*1+0x4]
   140018f1c:	xchg   DWORD PTR [rcx+0x14],edx
   140018f1f:	ds (bad) 
   140018f21:	mov    DWORD PTR [rcx],edi
   140018f23:	(bad)  
   140018f24:	rcl    BYTE PTR [rbp-0x6c2f01bf],cl
   140018f2a:	rex.XB dec r14d
   140018f2d:	xchg   edx,eax
   140018f2e:	rex.W dec cl
   140018f31:	(bad)  
   140018f32:	rex.WXB inc r12
   140018f35:	mov    WORD PTR [rbp-0x2],cs
   140018f38:	mov    ecx,0xb0fe4c84
   140018f3d:	js     0x140018f6e
   140018f3f:	inc    BYTE PTR [rsi+0x27ff2b58]
   140018f45:	sbb    BYTE PTR [rdi-0x2],al
   140018f48:	(bad)  
   140018f49:	adc    DWORD PTR [rsi-0x2],edx
   140018f4c:	adc    edx,DWORD PTR [rcx+rbp*2]
   140018f4f:	call   QWORD PTR [rbx]
   140018f51:	(bad)  
   140018f52:	jbe    0x140018f52
   140018f54:	(bad)  
   140018f55:	sbb    edi,DWORD PTR [rbp-0x2]
   140018f58:	sbb    DWORD PTR [rip+0x211cff85],ebx        # 0x1611e8ee3
   140018f5e:	(bad)  
   140018f5f:	(bad)  
   140018f60:	(bad)  
   140018f61:	(bad)  
   140018f62:	xchg   ebp,eax
   140018f63:	(bad)  
   140018f64:	and    al,0x2e
   140018f66:	lahf   
   140018f67:	jmp    QWORD PTR [rdi]
   140018f69:	(bad)  
   140018f6a:	stos   DWORD PTR es:[rdi],eax
   140018f6b:	(bad)  
   140018f6c:	sub    eax,DWORD PTR [rcx-0x49]
   140018f6f:	(bad)  
   140018f70:	sub    eax,0x33ffc54c
   140018f75:	push   rsi
   140018f76:	sar    esi,cl
   140018f78:	(bad)  
   140018f79:	fs loope 0x140018f7a
   140018f7c:	(bad)  
   140018f7d:	outs   dx,BYTE PTR ds:[rsi]
   140018f7e:	jmp    0x12b7aca82
   140018f83:	(bad)  
   140018f84:	cmp    al,0x82
   140018f86:	in     al,dx
   140018f87:	(bad)  
   140018f88:	cmp    ecx,DWORD PTR [rax-0x74c40114]
   140018f8e:	in     eax,dx
   140018f8f:	(bad)  
   140018f90:	cmp    ecx,DWORD PTR [rbx-0x79c40013]
   140018f96:	in     al,dx
   140018f97:	(bad)  
   140018f98:	cmp    bh,BYTE PTR [rbp-0x17]
   140018f9b:	cld    
   140018f9c:	cmp    BYTE PTR [rbx+rbx*8-0x11],ch
   140018fa0:	xor    eax,0x32f8df59
   140018fa5:	rex.WB (bad) 
   140018fa8:	(bad)  
   140018fa9:	cmp    eax,0x362effce
   140018fae:	(bad)  
   140018faf:	(bad)  
   140018fb0:	sub    eax,0x2cfec134
   140018fb5:	xor    edi,DWORD PTR [rbp+0x663245fe]
   140018fbb:	cmp    BYTE PTR [rax],al
	...
   140018fd1:	add    BYTE PTR [rax],al
   140018fd3:	add    BYTE PTR [rdx-0x60f4edb3],al
   140018fd9:	push   0xffffffff98d37923
   140018fde:	rex.XB not r12b
   140018fe1:	cdq    
   140018fe2:	rex.X (bad) 
   140018fe4:	rcl    DWORD PTR [rsi-0x6a2e01be],cl
   140018fea:	rex.X call rax
   140018fed:	xchg   ebx,eax
   140018fee:	rex.R dec spl
   140018ff1:	nop
   140018ff2:	inc    r14
   140018ff5:	lea    ecx,[rbp-0x2]
   140018ff8:	ror    DWORD PTR [rdx-0x7a4601b2],0x50
   140018fff:	(bad)  
   140019000:	lods   al,BYTE PTR ds:[rsi]
   140019001:	jbe    0x140019034
   140019003:	push   QWORD PTR [rsi+0x4e]
   140019006:	(bad)  
   140019007:	(bad)  
   140019008:	(bad)  
   140019009:	adc    al,0x47
   14001900b:	(bad)  
   14001900c:	(bad)  
   14001900d:	adc    DWORD PTR [rdi-0x1],edx
   140019010:	adc    edx,DWORD PTR [rbx+rbp*2]
   140019013:	(bad)  
   140019014:	adc    al,0x18
   140019016:	ja     0x140019016
   140019018:	(bad)  
   140019019:	sbb    edi,DWORD PTR [rsi-0x1]
   14001901c:	sbb    DWORD PTR [rip+0x221cfe87],ebx        # 0x1621e8ea9
   140019022:	(bad)  
   140019023:	(bad)  
   140019024:	and    DWORD PTR [rcx],ebp
   140019026:	xchg   edi,eax
   140019027:	jmp    QWORD PTR [rcx+rsi*1]
   14001902a:	movabs ds:0xbe462cfeb03b28fe,eax
   140019033:	push   QWORD PTR [rcx]
   140019035:	push   rdx
   140019036:	(bad)  
   140019037:	(bad)  
   140019038:	ss pop rdi
   14001903a:	(bad)  
   14001903c:	(bad)  
   14001903d:	ins    BYTE PTR es:[rdi],dx
   14001903e:	call   0x12b79cb42
   140019043:	(bad)  
   140019044:	cmp    al,0x82
   140019046:	in     al,dx
   140019047:	(bad)  
   140019048:	cmp    ecx,DWORD PTR [rcx-0x74c40114]
   14001904e:	in     eax,dx
   14001904f:	(bad)  
   140019050:	cmp    ecx,DWORD PTR [rdx-0x7ac40013]
   140019056:	in     al,dx
   140019057:	(bad)  
   140019058:	cmp    DWORD PTR [rbx+rbp*8-0x2],edi
   14001905c:	cmp    DWORD PTR [rbp-0x17],ebp
   14001905f:	push   QWORD PTR [rip+0x31fee357]        # 0x1720073bc
   140019065:	rex.RX xlat BYTE PTR ds:[rbx]
   140019067:	(bad)  
   140019068:	cs cmp cl,bl
   14001906b:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e0054a6
   140019071:	xor    al,0xc0
   140019073:	(bad)  
   140019074:	xor    dh,BYTE PTR [rdx]
   140019076:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019077:	rol    BYTE PTR [rbp+0x31],1
   14001907a:	data16 add al,0x0
	...
   140019089:	add    BYTE PTR [rax],al
   14001908b:	add    BYTE PTR [rbp-0x7dfde5a8],cl
   140019091:	rex.WRB adc r12b,BYTE PTR [r15]
   140019094:	mov    ebp,0xd8bc3785
   140019099:	sahf   
   14001909a:	rex.W (bad) 
   14001909c:	xlat   BYTE PTR ds:[rbx]
   14001909d:	popf   
   14001909e:	rex.RX call rsi
   1400190a1:	fwait
   1400190a2:	rex.RB call r12
   1400190a5:	cwde   
   1400190a6:	rex.X call rbx
   1400190a9:	xchg   esi,eax
   1400190aa:	call   r9
   1400190ad:	xchg   esp,eax
   1400190ae:	rex.XB dec r15d
   1400190b1:	xchg   edx,eax
   1400190b2:	rex.RXB dec r8d
   1400190b5:	mov    cs,WORD PTR [rdi+rdi*8-0x3d]
   1400190b9:	mov    ecx,DWORD PTR [rbp-0x1]
   1400190bc:	mov    esp,0xb6ff5087
   1400190c1:	(bad)  
   1400190c2:	push   rcx
   1400190c3:	jmp    QWORD PTR [rdi+0x61ff2e72]
   1400190c9:	(bad)  
   1400190ca:	xor    eax,0x49111aff
   1400190cf:	call   QWORD PTR [rdi]
   1400190d1:	adc    DWORD PTR [rdx-0x1],ebx
   1400190d4:	adc    edx,DWORD PTR [rsi+rbp*2]
   1400190d7:	call   QWORD PTR [rcx+rbx*1]
   1400190da:	jns    0x1400190db
   1400190dc:	(bad)  
   1400190dd:	sbb    al,0x80
   1400190df:	call   FWORD PTR [rdx]
   1400190e1:	(bad)  
   1400190e2:	mov    edi,edi
   1400190e4:	sbb    eax,0x23ff9225
   1400190e9:	sub    eax,0x3626ff9c
   1400190ee:	test   eax,0xb8412bff
   1400190f3:	jmp    FWORD PTR [rdi]
   1400190f5:	rex.WRX enter 0x35ff,0x5b
   1400190fa:	fcos   
   1400190fc:	(bad)  
   1400190fd:	push   0xffffffffffffffe7
   1400190ff:	(bad)  
   140019100:	cmp    DWORD PTR [rdi-0x16],esi
   140019103:	(bad)  
   140019104:	cmp    al,0x82
   140019106:	in     al,dx
   140019107:	(bad)  
   140019108:	cmp    ecx,DWORD PTR [rcx-0x74c40014]
   14001910e:	in     eax,dx
   14001910f:	(bad)  
   140019110:	cmp    al,0x8a
   140019112:	in     eax,dx
   140019113:	(bad)  
   140019114:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1585c601]
   14001911b:	(bad)  
   14001911c:	cmp    DWORD PTR [rcx-0x18],ebp
   14001911f:	push   QWORD PTR [rdx+rdx*2]
   140019122:	loope  0x140019123
   140019124:	xor    BYTE PTR [rcx-0x2e],al
   140019127:	jmp    FWORD PTR [rsi]
   140019129:	(bad)  
   14001912a:	enter  0x2dff,0x34
   14001912e:	ret    0x2cff
   140019131:	xor    edi,DWORD PTR [rsi+0x703242ff]
   140019137:	jae    0x140019139
	...
   140019145:	add    BYTE PTR [rax],al
   140019147:	add    BYTE PTR [rax-0x6df8e7ac],cl
   14001914d:	pop    rbp
   14001914e:	(bad)  
   14001914f:	pop    rbx
   140019150:	rcr    DWORD PTR [rax-0x602716b9],1
   140019156:	rex.WB (bad) 
   140019158:	fcomp  DWORD PTR [rsi-0x612701b7]
   14001915e:	rex.W call rdi
   140019161:	popf   
   140019162:	rex.RX (bad) 
   140019164:	(bad)  
   140019165:	fwait
   140019166:	rex.R (bad) 
   140019168:	rcr    DWORD PTR [rax-0x6a2d00be],cl
   14001916e:	rex.B (bad) 
   140019170:	rcl    BYTE PTR [rbx-0x6f3400bb],1
   140019176:	rex.WX inc spl
   140019179:	mov    WORD PTR [rbp-0x2],cs
   14001917c:	mov    ebp,0xb8fe4f88
   140019181:	test   BYTE PTR [rcx-0x1],dl
   140019184:	scas   eax,DWORD PTR es:[rdi]
   140019185:	jle    0x1400191d8
   140019187:	(bad)  
   140019188:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140019189:	outs   dx,DWORD PTR ds:[rsi]
   14001918a:	sub    esi,edi
   14001918c:	rex.XB sub edi,DWORD PTR [r14]
   14001918f:	call   FWORD PTR [rax]
   140019191:	adc    BYTE PTR [rbx-0x2],cl
   140019194:	(bad)  
   140019195:	adc    bl,BYTE PTR [rdi-0x2]
   140019198:	adc    edx,DWORD PTR [rsi]
   14001919a:	jb     0x14001919b
   14001919c:	adc    eax,0x18fe7b1a
   1400191a1:	sbb    eax,0x211cfe84
   1400191a6:	(bad)  
   1400191a7:	jmp    QWORD PTR [rax]
   1400191a9:	sub    BYTE PTR [rsi-0x5cceda02],dl
   1400191af:	(bad)  
   1400191b0:	sub    DWORD PTR [rip+0x492dffb2],edi        # 0x1892f9168
   1400191b6:	ret    
   1400191b7:	(bad)  
   1400191b8:	xor    al,0x58
   1400191ba:	(bad)  
   1400191bb:	(bad)  
   1400191bc:	(bad)  
   1400191bd:	push   0x7639ffe5
   1400191c2:	(bad)  
   1400191c3:	(bad)  
   1400191c4:	cmp    al,0x82
   1400191c6:	in     al,dx
   1400191c7:	(bad)  
   1400191c8:	cmp    ecx,DWORD PTR [rcx-0x74c40113]
   1400191ce:	in     eax,dx
   1400191cf:	(bad)  
   1400191d0:	cmp    al,0x8a
   1400191d2:	in     eax,dx
   1400191d3:	(bad)  
   1400191d4:	cmp    al,BYTE PTR [rdx+0x7739feec]
   1400191da:	(bad)  
   1400191db:	(bad)  
   1400191dc:	cmp    BYTE PTR [rbx-0x19],ah
   1400191df:	push   QWORD PTR [rbx]
   1400191e1:	rex.WR (bad) 
   1400191e4:	(bad)  
   1400191e5:	cmp    eax,0x362efece
   1400191ea:	(bad)  
   1400191eb:	jmp    FWORD PTR [rip+0x2cfec134]        # 0x16d005325
   1400191f1:	xor    edi,DWORD PTR [rdx+0x633146f5]
   1400191f7:	sbb    eax,0x0
	...
   140019204:	xchg   DWORD PTR [rbx+0x18],edx
   140019207:	adc    eax,0x9f347bb1
   14001920c:	fldenv [rcx-0x5e2603b2]
   140019212:	rex.WRX (bad) 
   140019214:	fsub   DWORD PTR [rax-0x602701b3]
   14001921a:	rex.WXB (bad) 
   14001921c:	fcomp  DWORD PTR [rsi-0x612700b7]
   140019222:	rex.W (bad) 
   140019224:	xlat   BYTE PTR ds:[rbx]
   140019225:	popf   
   140019226:	rex.RX (bad) 
   140019228:	(bad)  
   140019229:	(bad)  
   14001922a:	rex.XB call r11
   14001922d:	xchg   esi,eax
   14001922e:	rex.B (bad) 
   140019230:	rcl    DWORD PTR [rbx+rax*2+0x4991cdff],1
   140019237:	inc    ch
   140019239:	lea    ecx,[rbp-0x2]
   14001923c:	mov    esi,0xb8fe4f88
   140019241:	test   BYTE PTR [rcx-0x1],dl
   140019244:	mov    cl,0x80
   140019246:	push   rbx
   140019247:	(bad)  
   140019248:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019249:	jp     0x14001929c
   14001924b:	(bad)  
   14001924c:	xchg   esp,eax
   14001924d:	movsxd ebp,DWORD PTR [rax]
   14001924f:	jmp    FWORD PTR [rcx]
   140019251:	sbb    al,BYTE PTR [rbp-0x2]
   140019254:	sbb    DWORD PTR [rax],edx
   140019256:	rex.WRXB (bad) 
   140019258:	adc    eax,0x13ff6513
   14001925d:	(bad)  
   14001925e:	jbe    0x14001925e
   140019260:	(bad)  
   140019261:	sbb    edi,DWORD PTR [rsi-0x2]
   140019264:	sbb    bl,BYTE PTR [rsi]
   140019266:	mov    bh,bh
   140019268:	sbb    eax,0x23fe9124
   14001926d:	sub    eax,0x3827fe9c
   140019272:	lods   al,BYTE PTR ds:[rsi]
   140019273:	jmp    FWORD PTR [rsi+rax*2]
   140019276:	mov    ebp,0xd15432fe
   14001927b:	(bad)  
   14001927c:	(bad)  
   14001927d:	data16 jrcxz 0x14001927f
   140019280:	cmp    DWORD PTR [rbp-0x16],esi
   140019283:	(bad)  
   140019284:	cmp    al,0x82
   140019286:	in     al,dx
   140019287:	(bad)  
   140019288:	cmp    al,0x8a
   14001928a:	in     eax,dx
   14001928b:	(bad)  
   14001928c:	cmp    al,0x8e
   14001928e:	out    dx,al
   14001928f:	(bad)  
   140019290:	cmp    al,0x8a
   140019292:	in     eax,dx
   140019293:	(bad)  
   140019294:	cmp    al,BYTE PTR [rax+0x7439feeb]
   14001929a:	(bad)  
   14001929b:	(bad)  
   14001929c:	ss pop rbp
   14001929e:	in     eax,0xff
   1400192a0:	xor    al,BYTE PTR [rdi-0x27]
   1400192a3:	(bad)  
   1400192a4:	cs cmp cl,bl
   1400192a7:	(bad)  
   1400192a8:	sub    eax,0x2dffc335
   1400192ad:	xor    al,0xbf
   1400192af:	(bad)  
   1400192b0:	cmp    BYTE PTR [rdx],dh
   1400192b2:	xchg   ecx,eax
   1400192b3:	mov    dl,0x42
   1400192b5:	xor    ch,BYTE PTR [rdi+0x2]
	...
   1400192c4:	mov    ebx,0xd88c3d84
   1400192c9:	movabs al,ds:0xa1d9ff52a1d9f852
   1400192d2:	push   rcx
   1400192d3:	(bad)  
   1400192d4:	fisub  DWORD PTR [rdx-0x5e2600b1]
   1400192da:	rex.WRX (bad) 
   1400192dc:	fcomp  DWORD PTR [rdi-0x612700b4]
   1400192e2:	rex.WB call r15
   1400192e5:	sahf   
   1400192e6:	rex.W call rsi
   1400192e9:	pushf  
   1400192ea:	rex.RB call r11
   1400192ed:	cwde   
   1400192ee:	rex.X call rdx
   1400192f1:	xchg   ebp,eax
   1400192f2:	rex.X dec edi
   1400192f5:	xchg   edx,eax
   1400192f6:	rex.RXB inc r14d
   1400192f9:	lea    ecx,[rdi+rdi*8-0x41]
   1400192fd:	mov    DWORD PTR [rsi-0x1],ecx
   140019300:	mov    eax,0xb1ff5184
   140019305:	adc    BYTE PTR [rbx-0x1],0xa9
   140019309:	jl     0x140019361
   14001930b:	call   FWORD PTR [rbp+0x76ff4771]
   140019311:	rex.WRX
   140019312:	call   FWORD PTR cs:[rdx+rdx*1]
   140019316:	rex.RXB call FWORD PTR [r8]
   140019319:	adc    DWORD PTR [rsi-0x1],edx
   14001931c:	adc    edx,DWORD PTR [rbp*2+0x791915ff]
   140019323:	call   FWORD PTR [rax]
   140019325:	sbb    al,0x82
   140019327:	call   FWORD PTR [rcx+riz*1]
   14001932a:	(bad)  
   14001932b:	jmp    QWORD PTR [rcx]
   14001932d:	sub    DWORD PTR [rdi-0x58cbd901],edx
   140019333:	jmp    FWORD PTR [rbx]
   140019335:	rex.X mov ecx,0xcd5131ff
   14001933b:	push   QWORD PTR [rdi]
   14001933d:	fs loop 0x14001933f
   140019340:	cmp    DWORD PTR [rbp-0x16],esi
   140019343:	(bad)  
   140019344:	cmp    al,0x83
   140019346:	in     al,dx
   140019347:	(bad)  
   140019348:	cmp    al,0x8b
   14001934a:	in     eax,dx
   14001934b:	(bad)  
   14001934c:	cmp    ecx,DWORD PTR [rdi-0x75c30012]
   140019352:	in     eax,dx
   140019353:	(bad)  
   140019354:	cmp    DWORD PTR [rdi-0x15],edi
   140019357:	(bad)  
   140019358:	cmp    DWORD PTR [rdi-0x17],ebp
   14001935b:	push   QWORD PTR [rip+0x31ffe357]        # 0x1720176b8
   140019361:	rex.X (bad) 
   140019363:	jmp    FWORD PTR [rsi]
   140019365:	cmp    al,cl
   140019367:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d0155a2
   14001936d:	xor    edi,DWORD PTR [rsi+0x6c3143fe]
   140019373:	push   rdi
	...
   140019384:	mov    dh,0x80
   140019386:	cmp    al,BYTE PTR [rcx]
   140019388:	mov    cl,0x7b
   14001938a:	(bad)  
   14001938b:	and    eax,0x854085bc
   140019390:	rcr    BYTE PTR [rdx-0x5e261cb0],cl
   140019396:	push   rbx
   140019397:	(bad)  
   140019398:	fisub  DWORD PTR [rcx-0x5e2601b0]
   14001939e:	rex.WRX (bad) 
   1400193a0:	fcomp  DWORD PTR [rdi-0x612701b5]
   1400193a6:	rex.WB (bad) 
   1400193a8:	xlat   BYTE PTR ds:[rbx]
   1400193a9:	popf   
   1400193aa:	rex.RXB call r12
   1400193ad:	cdq    
   1400193ae:	rex.XB (bad) 
   1400193b0:	rcl    BYTE PTR [rsi-0x6d2f00bf],cl
   1400193b6:	rex.RX inc dil
   1400193b9:	mov    cs,WORD PTR [rsi+rdi*8-0x41]
   1400193bd:	mov    DWORD PTR [rsi-0x2],ecx
   1400193c0:	mov    eax,0xb0ff5184
   1400193c5:	adc    BYTE PTR [rsi+rdi*8-0x58],0x7b
   1400193ca:	push   rsi
   1400193cb:	(bad)  
   1400193cc:	sahf   
   1400193cd:	jne    0x140019425
   1400193cf:	dec    DWORD PTR [rax+0x49fe305c]
   1400193d5:	(bad)  
   1400193d6:	cmp    al,0xfe
   1400193d8:	sbb    BYTE PTR [rax],dl
   1400193da:	rex.WX call QWORD PTR [rsi]
   1400193dd:	adc    bl,BYTE PTR [rdi-0x2]
   1400193e0:	adc    edx,DWORD PTR [rsi]
   1400193e2:	jae    0x1400193e2
   1400193e4:	(bad)  
   1400193e5:	sbb    edi,DWORD PTR [rbp-0x1]
   1400193e8:	sbb    bl,BYTE PTR [rsi]
   1400193ea:	mov    dh,bh
   1400193ec:	(bad)  
   1400193ed:	es xchg ebx,eax
   1400193ef:	(bad)  
   1400193f0:	and    al,0x30
   1400193f2:	movabs eax,ds:0xc94e2ffeb43e2aff
   1400193fb:	(bad)  
   1400193fc:	ss (bad) 
   1400193fe:	loopne 0x1400193ff
   140019400:	cmp    DWORD PTR [rbp-0x16],esi
   140019403:	(bad)  
   140019404:	cmp    al,0x84
   140019406:	in     al,dx
   140019407:	(bad)  
   140019408:	cmp    ecx,DWORD PTR [rbp-0x6fc40112]
   14001940e:	out    dx,al
   14001940f:	(bad)  
   140019410:	cmp    ecx,DWORD PTR [rdx+0x7d39ffed]
   140019416:	jmp    0x140019416
   140019418:	cmp    DWORD PTR [rbx-0x18],ebp
   14001941b:	(bad)  
   14001941c:	xor    al,0x51
   14001941e:	loopne 0x14001941f
   140019420:	(bad)  
   140019421:	ds iret 
   140019423:	(bad)  
   140019424:	cs ss (bad) 
   140019427:	(bad)  
   140019428:	sub    eax,0x2effc134
   14001942d:	xor    dh,BYTE PTR [rdx+rbp*8+0x10623146]
	...
   140019450:	mov    bl,0x7d
   140019452:	cmp    DWORD PTR [rbx],ecx
   140019454:	mov    eax,0xc7553d82
   140019459:	nop
   14001945a:	rex.RXB mov r9d,0xfc50a1d9
   140019460:	fldenv [rcx-0x602701b2]
   140019466:	rex.WX (bad) 
   140019468:	xlat   BYTE PTR ds:[rbx]
   140019469:	sahf   
   14001946a:	rex.W call rsi
   14001946d:	fwait
   14001946e:	rex.R (bad) 
   140019470:	rcl    DWORD PTR [rdi-0x6c2f00be],cl
   140019476:	rex.RB dec r8b
   140019479:	mov    cs,WORD PTR [rbx-0x2]
   14001947c:	mov    edi,0xb7fe4e89
   140019481:	test   BYTE PTR [rcx-0x1],dl
   140019484:	scas   eax,DWORD PTR es:[rdi]
   140019485:	jg     0x1400194db
   140019487:	(bad)  
   140019488:	sahf   
   140019489:	jae    0x1400194dd
   14001948b:	dec    BYTE PTR [rbp+0x33]
   14001948e:	rex.RXB jmp QWORD PTR [r14+r10*1]
   140019492:	rex.R inc BYTE PTR [rbp+0x25fe2758]
   140019499:	(bad)  
   14001949a:	rex.RX call FWORD PTR [rax]
   14001949d:	adc    DWORD PTR [rax-0x2],edx
   1400194a0:	adc    al,0x14
   1400194a2:	push   0xfffffffffffffffe
   1400194a4:	adc    al,0x19
   1400194a6:	jns    0x1400194a7
   1400194a8:	sbb    BYTE PTR [rip+0x221cfe83],bl        # 0x1621e9331
   1400194ae:	(bad)  
   1400194af:	(bad)  
   1400194b0:	and    ebp,DWORD PTR [rsp+rbx*4]
   1400194b3:	jmp    FWORD PTR [rax]
   1400194b5:	cmp    ch,BYTE PTR [rdi-0x3ab4d102]
   1400194bb:	(bad)  
   1400194bc:	ss (bad) 
   1400194be:	fdivp  st(7),st
   1400194c0:	cmp    DWORD PTR [rbp-0x16],esi
   1400194c3:	(bad)  
   1400194c4:	cmp    al,0x85
   1400194c6:	in     al,dx
   1400194c7:	(bad)  
   1400194c8:	cmp    al,0x8f
   1400194ca:	out    dx,al
   1400194cb:	(bad)  
   1400194cc:	cmp    al,0x91
   1400194ce:	out    dx,al
   1400194cf:	(bad)  
   1400194d0:	cmp    ecx,DWORD PTR [rdx+0x7c39ffed]
   1400194d6:	(bad)  
   1400194d7:	(bad)  
   1400194d8:	cmp    BYTE PTR [rsi-0x19],ah
   1400194db:	(bad)  
   1400194dc:	xor    ecx,DWORD PTR [rbx-0x24]
   1400194df:	jmp    FWORD PTR [rdi]
   1400194e1:	cmp    ecx,esp
   1400194e3:	(bad)  
   1400194e4:	sub    eax,0x2cfec435
   1400194e9:	xor    al,0xbf
   1400194eb:	(bad)  
   1400194ec:	cmp    al,0x32
   1400194ee:	(bad)  
   1400194ef:	popf   
   1400194f0:	rex xor DWORD PTR [rbp+0x1],esi
	...
   140019518:	mov    eax,0xb4013b82
   14001951d:	jge    0x140019555
   14001951f:	es mov ebp,0xd2883b86
   140019525:	cdq    
   140019526:	rex.W in al,0xd8
   140019529:	sahf   
   14001952a:	rex.W (bad) 
   14001952c:	(bad)  
   14001952d:	pushf  
   14001952e:	rex.RB call r11
   140019531:	cwde   
   140019532:	rex.X call rax
   140019535:	xchg   ebx,eax
   140019536:	rex.RB dec r8d
   140019539:	mov    cs,WORD PTR [rbx-0x1]
   14001953c:	mov    edi,0xb7ff4f88
   140019541:	adc    DWORD PTR [rcx-0x1],0xffffff97
   140019545:	imul   ecx,DWORD PTR [rbx-0x1],0x3f
   140019549:	sub    BYTE PTR [rbp-0x1],al
   14001954c:	and    BYTE PTR [rdx],dl
   14001954e:	rex.RX call FWORD PTR [rdx]
   140019551:	adc    BYTE PTR [rdi-0x1],al
   140019554:	rex.XB sub al,0x3b
   140019557:	jmp    FWORD PTR [rax+0x44]
   14001955a:	xor    edi,edi
   14001955c:	sbb    DWORD PTR [rax],edx
   14001955e:	rex.W call QWORD PTR [rsi]
   140019561:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   140019565:	(bad)  
   140019566:	jae    0x140019567
   140019568:	(bad)  
   140019569:	sbb    edi,DWORD PTR [rsi-0x1]
   14001956c:	sbb    ebx,DWORD PTR [rdi]
   14001956e:	mov    edi,edi
   140019570:	and    BYTE PTR [rcx],ch
   140019572:	xchg   edi,eax
   140019573:	jmp    QWORD PTR [rsi]
   140019575:	ss test eax,0xc1482dff
   14001957b:	push   QWORD PTR [rip+0x39ffdc5e]        # 0x17a0171df
   140019581:	jne    0x14001956d
   140019583:	(bad)  
   140019584:	cmp    al,0x87
   140019586:	in     eax,dx
   140019587:	(bad)  
   140019588:	cmp    edx,DWORD PTR [rdx-0x6cc40011]
   14001958e:	out    dx,eax
   14001958f:	(bad)  
   140019590:	cmp    ecx,DWORD PTR [rcx+0x7a39ffed]
   140019596:	(bad)  
   140019597:	push   QWORD PTR [rdi]
   140019599:	(bad)  
   14001959a:	out    0xff,al
   14001959c:	xor    al,BYTE PTR [rdi-0x28]
   14001959f:	jmp    FWORD PTR [rsi]
   1400195a1:	cmp    cl,cl
   1400195a3:	jmp    FWORD PTR [rip+0x2cffc235]        # 0x16d0157de
   1400195a9:	xor    edi,DWORD PTR [rsi+0x683244ff]
   1400195af:	rex.X add BYTE PTR [rax],al
	...
   1400195e2:	add    BYTE PTR [rax],al
   1400195e4:	mov    dl,0x7c
   1400195e6:	xor    cl,BYTE PTR [rbx]
   1400195e8:	mov    ah,0x7d
   1400195ea:	xor    dl,BYTE PTR [rdi-0x3b]
   1400195ed:	mov    WORD PTR [rbx],?
   1400195ef:	mov    esp,0xfa4297d3
   1400195f4:	rcl    BYTE PTR [rbx-0x713701bc],1
   1400195fa:	rex.WXB (bad) 
   1400195fc:	mov    esi,0x8dfe4c88
   140019601:	(bad)  
   140019602:	rex.R (bad) 
   140019604:	(bad)  
   140019605:	(bad)  
   140019606:	rex.XB (bad) 
   140019608:	and    al,0x14
   14001960a:	rex.RX (bad) 
   14001960c:	sbb    eax,0x1cff4611
   140019611:	adc    DWORD PTR [rsi-0x2],eax
   140019614:	sbb    edx,DWORD PTR [rax]
   140019616:	rex.RX (bad) 
   140019618:	jns    0x14001966a
   14001961a:	sub    edi,edi
   14001961c:	xor    BYTE PTR [rsi],bl
   14001961e:	rex.XB (bad) 
   140019620:	sbb    BYTE PTR [rax],dl
   140019622:	rex.WRX (bad) 
   140019624:	adc    al,0x14
   140019626:	push   0xffffffffffffffff
   140019628:	adc    eax,0x19fe7a19
   14001962d:	sbb    eax,0x251efe86
   140019632:	xchg   ebx,eax
   140019633:	jmp    QWORD PTR [rip+0x2cfea432]        # 0x16d003a6b
   140019639:	rex.RB mov r12d,0xda5d35fe
   14001963f:	(bad)  
   140019640:	cmp    DWORD PTR [rbp-0x16],esi
   140019643:	(bad)  
   140019644:	cmp    ecx,DWORD PTR [rcx-0x6ac40013]
   14001964a:	out    dx,eax
   14001964b:	(bad)  
   14001964c:	cmp    edx,DWORD PTR [rbp-0x76c40111]
   140019652:	in     eax,dx
   140019653:	(bad)  
   140019654:	cmp    DWORD PTR [rdi-0x16],esi
   140019657:	(bad)  
   140019658:	ss pop rdx
   14001965a:	in     al,0xfe
   14001965c:	xor    BYTE PTR [rdx-0x2d],al
   14001965f:	jmp    FWORD PTR [rsi]
   140019661:	(bad)  
   140019662:	(bad)  
   140019663:	(bad)  
   140019664:	sub    eax,0x30fec134
   140019669:	xor    ebp,DWORD PTR [rbp+0x613247df]
   14001966f:	(bad)  
	...
   1400196ac:	mov    dl,0x7a
   1400196ae:	(bad)  
   1400196af:	add    ch,BYTE PTR [rsi-0x4bd4d38b]
   1400196b5:	jnp    0x1400196eb
   1400196b7:	nop
   1400196b8:	ret    
   1400196b9:	mov    DWORD PTR [rcx-0x14],eax
   1400196bc:	mov    WORD PTR [rcx+0x3d],fs
   1400196bf:	inc    BYTE PTR [rbp+0x2c]
   1400196c2:	rex.X jmp FWORD PTR [rsi]
   1400196c5:	sbb    al,BYTE PTR [rbp-0x2]
   1400196c8:	sub    DWORD PTR [rdi],edx
   1400196ca:	rex.RX (bad) 
   1400196cc:	(bad)  
   1400196cd:	(bad)  
   1400196ce:	rex.RX jmp QWORD PTR [rsi]
   1400196d1:	adc    eax,0x1525fe46
   1400196d6:	rex.RX (bad) 
   1400196d8:	cmp    BYTE PTR [rdx],ah
   1400196da:	rex push QWORD PTR [rdi+0x4e]
   1400196de:	(bad)  
   1400196df:	(bad)  
   1400196e0:	sbb    dl,BYTE PTR [rcx]
   1400196e2:	rex.RXB (bad) 
   1400196e4:	(bad)  
   1400196e5:	adc    bl,BYTE PTR [rdi+rdi*8+0x13]
   1400196e9:	(bad)  
   1400196ea:	je     0x1400196ea
   1400196ec:	(bad)  
   1400196ed:	sbb    al,0x80
   1400196ef:	(bad)  
   1400196f0:	sbb    al,0x22
   1400196f2:	mov    ?,edi
   1400196f4:	and    al,0x2e
   1400196f6:	lahf   
   1400196f7:	(bad)  
   1400196f8:	sub    al,BYTE PTR [rdx-0x48]
   1400196fb:	(bad)  
   1400196fc:	xor    al,0x5b
   1400196fe:	xlat   BYTE PTR ds:[rbx]
   1400196ff:	(bad)  
   140019700:	cmp    DWORD PTR [rsi-0x16],esi
   140019703:	(bad)  
   140019704:	cmp    al,0x8c
   140019706:	out    dx,al
   140019707:	(bad)  
   140019708:	cmp    bl,BYTE PTR [rcx-0x67c50110]
   14001970e:	out    dx,eax
   14001970f:	(bad)  
   140019710:	cmp    ecx,DWORD PTR [rax+0x7239ffed]
   140019716:	jmp    0x12155cc19
   14001971b:	(bad)  
   14001971c:	(bad)  
   14001971d:	ds iret 
   14001971f:	jmp    FWORD PTR [rip+0x2dfec435]        # 0x16e005b5a
   140019725:	xor    al,0xbf
   140019727:	inc    BYTE PTR [rax+0x32]
   14001972a:	jns    0x1400196b5
   14001972c:	xor    sil,BYTE PTR [rdi+0x1]
	...
   140019778:	test   DWORD PTR [rbx+riz*1+0x16],edx
   14001977c:	push   rdi
   14001977d:	(bad)  
   14001977e:	cmp    bh,dl
   140019780:	rex.RXB sub eax,0x2b44ff41
   140019786:	rex.X inc DWORD PTR [rax+0x28]
   14001978a:	rex.XB (bad) 
   14001978c:	cmp    esp,DWORD PTR [rbx+rax*2]
   14001978f:	push   QWORD PTR [rsi]
   140019791:	and    DWORD PTR [rdi+rdi*8+0x33],eax
   140019795:	(bad)  
   140019796:	rex.R push QWORD PTR [rax]
   140019799:	sbb    al,0x45
   14001979b:	push   QWORD PTR [rsp+rcx*2+0x30]
   14001979f:	(bad)  
   1400197a0:	cmp    ah,BYTE PTR [rip+0x1018ff40]        # 0x1501a96e6
   1400197a6:	rex.WRX call QWORD PTR [rsp+r10*1]
   1400197aa:	imul   edi,edi,0x15
   1400197ad:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1a]
   1400197b1:	(bad)  
   1400197b2:	mov    bh,bh
   1400197b4:	and    ch,BYTE PTR [rbx]
   1400197b6:	(bad)  
   1400197b7:	jmp    FWORD PTR [rcx]
   1400197b9:	cmp    eax,0x5833ffb3
   1400197be:	(bad)  
   1400197bf:	(bad)  
   1400197c0:	cmp    DWORD PTR [rdi-0x16],esi
   1400197c3:	(bad)  
   1400197c4:	cmp    ecx,DWORD PTR [rdi-0x63c50012]
   1400197ca:	lock (bad) 
   1400197cc:	cmp    bl,BYTE PTR [rdx-0x77c40010]
   1400197d2:	in     eax,dx
   1400197d3:	(bad)  
   1400197d4:	cmp    DWORD PTR [rdi-0x17],ebp
   1400197d7:	push   QWORD PTR [rbx]
   1400197d9:	rex.WRX fdivp st(7),st
   1400197dc:	cs cmp cl,bl
   1400197df:	jmp    FWORD PTR [rip+0x2dffc235]        # 0x16e015a1a
   1400197e5:	xor    edi,DWORD PTR [rsi+0x613247fc]
   1400197eb:	xor    BYTE PTR [rax],al
	...
   140019839:	add    BYTE PTR [rax],al
   14001983b:	add    BYTE PTR [rsi+0x3c],ah
   14001983e:	(bad)  
   14001983f:	xor    DWORD PTR [rbx+0x52],edi
   140019842:	sub    al,0xf1
   140019844:	jne    0x140019895
   140019846:	xor    dh,bh
   140019848:	push   0x47
   14001984a:	ss (bad) 
   14001984c:	pop    rbx
   14001984d:	cmp    al,0x3c
   14001984f:	dec    DWORD PTR [rdi+0x33]
   140019852:	(bad)  
   140019853:	inc    BYTE PTR [rsi+0x2c]
   140019856:	inc    BYTE PTR [r8+0x27]
   14001985a:	rex.X inc DWORD PTR [rbp+0x2b]
   14001985e:	rex inc BYTE PTR [rax+0x1afe2f55]
   140019865:	adc    DWORD PTR [rax-0x1],ecx
   140019868:	(bad)  
   140019869:	adc    bl,BYTE PTR [rsi-0x2]
   14001986c:	adc    al,0x18
   14001986e:	ja     0x14001986e
   140019870:	sbb    DWORD PTR [rip+0x271fff85],ebx        # 0x1672197fb
   140019876:	xchg   ebp,eax
   140019877:	(bad)  
   140019878:	sub    BYTE PTR [rcx],bh
   14001987a:	scas   al,BYTE PTR es:[rdi]
   14001987b:	(bad)  
   14001987c:	xor    dl,BYTE PTR [rsi-0x2e]
   14001987f:	(bad)  
   140019880:	cmp    DWORD PTR [rdi-0x16],esi
   140019883:	(bad)  
   140019884:	cmp    edx,DWORD PTR [rdx-0x5dc50011]
   14001988a:	icebp  
   14001988b:	(bad)  
   14001988c:	cmp    bl,BYTE PTR [rax+rsi*8-0x1379c402]
   140019893:	(bad)  
   140019894:	cmp    BYTE PTR [rdx-0x18],ch
   140019897:	(bad)  
   140019898:	xor    cl,BYTE PTR [rax-0x27]
   14001989b:	(bad)  
   14001989c:	cs cmp al,cl
   14001989f:	jmp    FWORD PTR [rip+0x34fec134]        # 0x1750059d9
   1400198a5:	xor    esp,DWORD PTR [rdx+0x6b3244cd]
   1400198ab:	add    eax,0x0
	...
   140019900:	(bad)  
   140019901:	pop    rax
   140019902:	adc    edx,DWORD PTR [rbx-0x45]
   140019905:	jle    0x140019928
   140019907:	cli    
   140019908:	stos   DWORD PTR es:[rdi],eax
   140019909:	jb     0x140019927
   14001990b:	(bad)  
   14001990c:	xchg   edx,eax
   14001990d:	(bad)  {k2}
   140019912:	cs (bad) 
   140019914:	fs rex.XB cmp r14b,dil
   140019918:	push   rbp
   140019919:	(bad)  
   14001991a:	dec    DWORD PTR ds:[rbp+0x32]
   14001991e:	inc    BYTE PTR [r8+0x3dfe3355]
   140019925:	(bad)  
   140019926:	(bad)  
   140019927:	call   QWORD PTR [rdi]
   140019929:	adc    DWORD PTR [rax-0x2],edx
   14001992c:	adc    edx,DWORD PTR [rip+0x1b17fe6f]        # 0x15b1997a1
   140019932:	cmp    bh,0x1d
   140019935:	and    al,0x90
   140019937:	(bad)  
   140019938:	es xor eax,0x5331fea8
   14001993e:	(bad)  
   14001993f:	(bad)  
   140019940:	cmp    bh,BYTE PTR [rcx-0x16]
   140019943:	(bad)  
   140019944:	cmp    edx,DWORD PTR [rdi-0x55c40011]
   14001994a:	repnz (bad) 
   14001994c:	cmp    ebx,DWORD PTR [rdi-0x7bc40110]
   140019952:	in     al,dx
   140019953:	push   QWORD PTR [rdi]
   140019955:	fs out 0xfe,eax
   140019958:	xor    BYTE PTR [rbx-0x2c],al
   14001995b:	(bad)  
   14001995c:	cs ss (bad) 
   14001995f:	jmp    FWORD PTR [rip+0x41fec034]        # 0x182005999
   140019965:	xor    dh,BYTE PTR [rsi+0x79]
	...
   1400199c0:	pushf  
   1400199c1:	movsxd edx,DWORD PTR [rdi]
   1400199c3:	add    DWORD PTR [rbp-0x3199e195],esp
   1400199c9:	nop
   1400199ca:	xor    bh,dl
   1400199cc:	mov    BYTE PTR [rsi+0x75afff26],0x1a
   1400199d3:	call   QWORD PTR [rdx+0x77ff2162]
   1400199d9:	push   rax
   1400199da:	xor    bh,bh
   1400199dc:	fs rex.XB cmp r15b,dil
   1400199e0:	pop    rdi
   1400199e1:	(bad)  
   1400199e2:	cmp    edi,edi
   1400199e4:	xchg   BYTE PTR [rdx+0x30],bl
   1400199e7:	call   FWORD PTR [rdx]
   1400199e9:	adc    DWORD PTR [rax-0x1],ecx
   1400199ec:	adc    eax,0x15ff6313
   1400199f1:	sbb    DWORD PTR [rbx-0x1],edi
   1400199f4:	sbb    esp,DWORD PTR [rax]
   1400199f6:	mov    edi,edi
   1400199f8:	and    al,0x31
   1400199fa:	movabs ds:0xea7a39ffca5130ff,eax
   140019a03:	(bad)  
   140019a04:	cmp    ebx,DWORD PTR [rbp-0x4fc60010]
   140019a0a:	repnz (bad) 
   140019a0c:	cmp    ah,BYTE PTR [rbx-0x7dc5000f]
   140019a12:	in     al,dx
   140019a13:	push   QWORD PTR [rsi]
   140019a15:	pop    rbp
   140019a16:	in     al,0xff
   140019a18:	(bad)  
   140019a19:	ds sar bh,1
   140019a1c:	sub    eax,0x2dffc335
   140019a21:	xor    edi,DWORD PTR [rbp+0x613247fa]
   140019a27:	(bad)  
	...
   140019a84:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019a85:	ins    DWORD PTR es:[rdi],dx
   140019a86:	(bad)  
   140019a87:	add    DWORD PTR [rdx-0x4da7e498],esp
   140019a8d:	ja     0x140019ab0
   140019a8f:	out    dx,al
   140019a90:	mov    ecx,0xb6fe1c7b
   140019a95:	jns    0x140019aaf
   140019a97:	(bad)  
   140019a98:	lahf   
   140019a99:	push   0x1b
   140019a9b:	inc    DWORD PTR [rbp+0x74fe285a]
   140019aa1:	rex.WRXB xor r15b,r14b
   140019aa4:	xchg   ebp,eax
   140019aa5:	gs sub eax,0x40263bff
   140019aab:	(bad)  
   140019aac:	(bad)  
   140019aad:	adc    DWORD PTR [rsi+rdi*8+0x14],edx
   140019ab1:	(bad)  
   140019ab2:	je     0x140019ab3
   140019ab4:	sbb    DWORD PTR [rip+0x2d22fe86],ebx        # 0x16d249940
   140019aba:	popf   
   140019abb:	(bad)  
   140019abc:	(bad)  
   140019abd:	rex.WRB (bad) 
   140019abf:	(bad)  
   140019ac0:	cmp    bh,BYTE PTR [rbx-0x16]
   140019ac3:	(bad)  
   140019ac4:	cmp    ah,BYTE PTR [rbp-0x47c7000f]
   140019aca:	repz (bad) 
   140019acc:	cmp    ah,BYTE PTR [rbp+0x7f3afef1]
   140019ad2:	jmp    0x140019ad3
   140019ad4:	xor    eax,0x2efee155
   140019ad9:	cmp    cl,bl
   140019adb:	(bad)  
   140019adc:	sub    eax,0x35ffc234
   140019ae1:	xor    ebx,DWORD PTR [rdi+0x673245c9]
   140019ae7:	add    al,0x0
	...
   140019b49:	add    BYTE PTR [rax],al
   140019b4b:	add    BYTE PTR [rax+0x6f1b1b56],cl
   140019b51:	rex.RB and al,0x7b
   140019b54:	adc    DWORD PTR [rbx+0x22],0x1a71abc7
   140019b5b:	(bad)  
   140019b5c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140019b5d:	outs   dx,DWORD PTR ds:[rsi]
   140019b5e:	sbb    bh,bh
   140019b60:	nop
   140019b61:	(bad)  
   140019b62:	and    edi,edi
   140019b64:	mov    DWORD PTR [rbp+0x27],ebx
   140019b67:	inc    DWORD PTR [rcx+rbx*2+0x1118ff32]
   140019b6e:	rex.WX call QWORD PTR [rsp+r10*1]
   140019b72:	push   0xffffffffffffffff
   140019b74:	(bad)  
   140019b75:	sbb    al,0x80
   140019b77:	jmp    QWORD PTR [rax]
   140019b79:	sub    BYTE PTR [rsi-0x3eb6d201],dl
   140019b7f:	(bad)  
   140019b80:	cmp    bh,BYTE PTR [rdx+rbp*8-0x1]
   140019b84:	cmp    DWORD PTR [rbp-0x3cc7000e],ebp
   140019b8a:	repz (bad) 
   140019b8c:	cmp    ah,BYTE PTR [rdi+0x7a3afff1]
   140019b92:	(bad)  
   140019b93:	push   QWORD PTR [rbx]
   140019b95:	rex.WRB fdiv st(7),st
   140019b98:	cs (bad) 
   140019b9a:	enter  0x2dff,0x34
   140019b9e:	sar    bh,0x41
   140019ba1:	xor    dh,BYTE PTR [rbp+0x78]
	...
   140019c14:	jl     0x140019c63
   140019c16:	sbb    DWORD PTR [rdx],eax
   140019c18:	js     0x140019c64
   140019c1a:	sbb    edx,DWORD PTR [rax-0x61]
   140019c1d:	imul   ebx,DWORD PTR [rdx],0x1773ace7
   140019c23:	(bad)  
   140019c24:	pushf  
   140019c25:	push   0x72a9ff1b
   140019c2a:	es (bad) 
   140019c2c:	xor    esp,DWORD PTR [rcx]
   140019c2e:	rex.X (bad) 
   140019c30:	adc    eax,0x15ff5b12
   140019c35:	sbb    DWORD PTR [rdx-0x2],edi
   140019c38:	sbb    eax,0x2bfe9024
   140019c3d:	rex.R mov edx,0xe97d3aff
   140019c43:	(bad)  
   140019c44:	cmp    BYTE PTR [rax-0x32c9000e],bh
   140019c4a:	icebp  
   140019c4b:	(bad)  
   140019c4c:	cmp    DWORD PTR [rax+0x7439fef1],ebp
   140019c52:	(bad)  
   140019c53:	push   QWORD PTR [rcx]
   140019c55:	rex.RB xlat BYTE PTR ds:[rbx]
   140019c57:	(bad)  
   140019c58:	sub    eax,0x2cfec536
   140019c5d:	xor    edi,DWORD PTR [rsi+0x623247fc]
   140019c63:	and    eax,0x0
	...
   140019cdc:	or     DWORD PTR [rdi+0x14],0x18689f24
   140019ce3:	shl    DWORD PTR [rdx-0x5500e88a],1
   140019ce9:	jno    0x140019d06
   140019ceb:	(bad)  
   140019cec:	jp     0x140019d40
   140019cee:	xor    eax,0x4e1017fe
   140019cf3:	call   QWORD PTR [rsi+rdx*1]
   140019cf6:	jb     0x140019cf6
   140019cf8:	sbb    esp,DWORD PTR [rax]
   140019cfa:	mov    bh,dh
   140019cfc:	sub    DWORD PTR [rsi],edi
   140019cfe:	mov    bl,0xff
   140019d00:	cmp    DWORD PTR [rbp-0x18],edi
   140019d03:	(bad)  
   140019d04:	cmp    ebp,eax
   140019d06:	icebp  
   140019d07:	(bad)  
   140019d08:	cmp    ebx,ecx
   140019d0a:	out    dx,eax
   140019d0b:	(bad)  
   140019d0c:	cmp    ah,BYTE PTR [rdi+0x6c38fef1]
   140019d12:	call   0x11140ce16
   140019d17:	(bad)  
   140019d18:	sub    eax,0x34fec234
   140019d1d:	xor    esp,DWORD PTR [rax+0x653246c7]
   140019d23:	add    eax,DWORD PTR [rax]
	...
   140019d9d:	add    BYTE PTR [rax],al
   140019d9f:	add    BYTE PTR [rsi-0x56e5f0ae],al
   140019da5:	outs   dx,DWORD PTR ds:[rsi]
   140019da6:	(bad)  
   140019da7:	fidiv  WORD PTR [rdi-0x5000e787]
   140019dad:	ja     0x140019dd6
   140019daf:	jmp    QWORD PTR [rsi]
   140019db1:	sbb    DWORD PTR [rbp-0x1],eax
   140019db4:	adc    eax,0x18ff6613
   140019db9:	sbb    eax,0x3826ff83
   140019dbe:	stos   BYTE PTR es:[rdi],al
   140019dbf:	(bad)  
   140019dc0:	cmp    DWORD PTR [rbp-0x19],edi
   140019dc3:	(bad)  
   140019dc4:	cmp    edx,eax
   140019dc6:	out    dx,eax
   140019dc7:	(bad)  
   140019dc8:	cmp    eax,0x3affecdd
   140019dcd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140019dce:	lock push QWORD PTR [rsi]
   140019dd1:	(bad)  
   140019dd2:	in     eax,0xff
   140019dd4:	cs cmp cl,bl
   140019dd7:	jmp    FWORD PTR [rip+0x40ffc034]        # 0x181015e11
   140019ddd:	xor    dh,BYTE PTR [rdi+0x71]
	...
   140019e64:	mov    dl,BYTE PTR [rdi+rcx*1+0x34]
   140019e68:	mov    ch,0x78
   140019e6a:	sbb    cl,dh
   140019e6c:	mov    ah,0x79
   140019e6e:	(bad)  
   140019e6f:	(bad)  
   140019e70:	imul   eax,DWORD PTR [rdi+0x39],0x561117ff
   140019e77:	(bad)  
   140019e78:	(bad)  
   140019e79:	sbb    bh,BYTE PTR [rsi+rdi*8+0x23]
   140019e7d:	xor    BYTE PTR [rcx-0x1b84c701],ah
   140019e83:	(bad)  
   140019e84:	cmp    eax,0x3effedd7
   140019e89:	fucomip st,st(2)
   140019e8b:	(bad)  
   140019e8c:	cmp    DWORD PTR [rdi+0x5534feef],ebx
   140019e92:	loopne 0x140019e93
   140019e94:	cs (bad) 
   140019e96:	(bad)  
   140019e97:	(bad)  
   140019e98:	sub    eax,0x47f6bc33
   140019e9d:	xor    ah,BYTE PTR [rcx+0x1d]
	...
   140019f28:	nop
   140019f29:	pop    rcx
   140019f2a:	punpcklbw mm6,DWORD PTR [rbp-0x5b02e788]
   140019f31:	jo     0x140019f62
   140019f33:	jmp    QWORD PTR [rax]
   140019f35:	adc    al,0x4a
   140019f37:	(bad)  
   140019f38:	adc    eax,0x20fe7216
   140019f3d:	sub    DWORD PTR [rdi-0x1f89c901],edx
   140019f43:	(bad)  
   140019f44:	cmp    eax,0x3effecdc
   140019f49:	fucomip st,st(2)
   140019f4b:	(bad)  
   140019f4c:	cmp    dl,BYTE PTR [rbp+0x4a32feee]
   140019f52:	fcos   
   140019f54:	sub    eax,0x39fec335
   140019f59:	xor    dl,BYTE PTR [rax+0x733241b1]
   140019f5f:	add    al,BYTE PTR [rax]
	...
   140019fe5:	add    BYTE PTR [rax],al
   140019fe7:	add    BYTE PTR [rcx-0x62fcf1a7],dl
   140019fed:	adc    ah,BYTE PTR fs:[rbx-0xd88953]
   140019ff4:	push   rdx
   140019ff5:	ss cmp al,0xff
   140019ff8:	adc    eax,0x1cff6313
   140019ffd:	and    cl,BYTE PTR [rdi+rdi*8-0x2791cc]
   14001a004:	ds fucomp st(3)
   14001a007:	(bad)  
   14001a008:	ds fsubp st(2),st
   14001a00b:	(bad)  
   14001a00c:	cmp    DWORD PTR [rbp+0x3f30ffec],eax
   14001a012:	sar    bh,1
   14001a014:	sub    eax,0x42fec034
   14001a019:	xor    ch,BYTE PTR [rdi+0x50]
	...
   14001a0ac:	mov    DWORD PTR [rdi+rcx*1+0x14],edx
   14001a0b0:	popf   
   14001a0b1:	push   0x6a9be21b
   14001a0b6:	xor    edi,esi
   14001a0b8:	sbb    DWORD PTR [rdx],edx
   14001a0ba:	push   rbx
   14001a0bb:	(bad)  
   14001a0bc:	sbb    BYTE PTR [rip+0x6131ff82],bl        # 0x1a133a044
   14001a0c2:	int    0xfe
   14001a0c4:	ds fucomp st(3)
   14001a0c7:	(bad)  
   14001a0c8:	cmp    eax,0x37feebd9
   14001a0cd:	outs   dx,DWORD PTR ds:[rsi]
   14001a0ce:	out    0xfe,eax
   14001a0d0:	cs cmp al,cl
   14001a0d3:	push   QWORD PTR [rcx]
   14001a0d5:	xor    ebp,DWORD PTR [rdx+0x653246da]
   14001a0db:	or     DWORD PTR [rax],eax
	...
   14001a16d:	add    BYTE PTR [rax],al
   14001a16f:	add    BYTE PTR [rcx-0x48adefac],cl
   14001a175:	jle    0x14001a1a1
   14001a177:	std    
   14001a178:	cmp    esp,DWORD PTR [rdi]
   14001a17a:	rex.X (bad) 
   14001a17c:	(bad)  
   14001a17d:	(bad)  
   14001a17e:	je     0x14001a17f
   14001a180:	sub    al,0x4e
   14001a182:	mov    ebp,0xebda3efe
   14001a187:	(bad)  
   14001a188:	cmp    eax,0x34feeccc
   14001a18d:	pop    rax
   14001a18e:	fdivp  st(6),st
   14001a190:	sub    eax,0x41ffc234
   14001a195:	xor    dh,BYTE PTR [rsi+0x6f]
	...
   14001a230:	lea    ebx,[rax+0x13]
   14001a233:	add    al,0x9e
   14001a235:	sbb    esi,DWORD PTR [ebx-0xc9a379]
   14001a23c:	(bad)  
   14001a23d:	adc    al,0x62
   14001a23f:	jmp    QWORD PTR [rip+0x3dffa939]        # 0x17e014b7e
   14001a245:	shr    ah,1
   14001a247:	(bad)  
   14001a248:	cmp    esi,DWORD PTR [rcx+0x4330ffec]
   14001a24e:	sar    edi,1
   14001a250:	(bad)  
   14001a251:	xor    esi,DWORD PTR [rcx+0x653246e4]
   14001a257:	or     eax,0x0
	...
   14001a2f4:	nop
   14001a2f5:	pop    rcx
   14001a2f6:	adc    ebp,DWORD PTR [rcx+rax*8]
   14001a2f9:	test   DWORD PTR [rip+0x4e1d2bf5],ebp        # 0x18e1ecef4
   14001a2ff:	call   FWORD PTR [rip+0x3afe9126]        # 0x17b00342b
   14001a305:	test   al,0xea
   14001a307:	push   QWORD PTR [rdi]
   14001a309:	jns    0x14001a2f1
   14001a30b:	(bad)  
   14001a30c:	sub    eax,0x42fec236
   14001a311:	xor    dh,BYTE PTR [rdx+0x64]
	...
   14001a3b4:	sahf   
   14001a3b5:	sbb    eax,DWORD PTR gs:[rcx]
   14001a3b8:	test   al,0x6d
   14001a3ba:	and    BYTE PTR [rsi+0x78],bh
   14001a3bd:	push   rcx
   14001a3be:	cmp    edi,edi
   14001a3c0:	sbb    BYTE PTR [rbx],bl
   14001a3c2:	jp     0x14001a3c2
   14001a3c4:	xor    BYTE PTR [rbx-0x33],dl
   14001a3c7:	jmp    FWORD PTR [rdi]
   14001a3c9:	rex.X retf 0x36fe
   14001a3cd:	xor    dl,BYTE PTR [rdi+0x733242be]
   14001a3d3:	(bad)  
	...
   14001a478:	xchg   edx,eax
   14001a479:	pop    rbp
   14001a47a:	(bad)  
   14001a47b:	(bad)  
   14001a47c:	lods   al,BYTE PTR ds:[rsi]
   14001a47d:	jae    0x14001a4a7
   14001a47f:	mov    dh,0x34
   14001a481:	(bad)  
   14001a482:	pop    rbx
   14001a483:	jmp    QWORD PTR [rbx]
   14001a485:	sub    DWORD PTR [rax-0x5bd0d201],esp
   14001a48b:	fdivr  QWORD PTR [rsi]
   14001a48d:	xor    bh,BYTE PTR [rcx+0x1f]
	...
   14001a53c:	jl     0x14001a58d
   14001a53e:	(bad)  
   14001a53f:	or     dh,BYTE PTR [rsi+0x4e]
   14001a542:	xor    al,0x80
   14001a544:	ss sub al,0x73
   14001a547:	xchg   esi,eax
   14001a548:	cmp    DWORD PTR [rip+0x186f],ebp        # 0x14001bdbd
	...
   14001a702:	add    BYTE PTR [rax],al
   14001a704:	(bad)  
   14001a705:	(bad)  
   14001a706:	(bad)  
   14001a707:	(bad)  
   14001a708:	(bad)  
   14001a709:	inc    DWORD PTR [rax]
   14001a70b:	add    bh,bh
   14001a70d:	(bad)  
   14001a70e:	(bad)  
   14001a70f:	(bad)  
   14001a710:	(bad)  
   14001a711:	inc    DWORD PTR [rax]
   14001a713:	add    bh,bh
   14001a715:	push   rax
   14001a717:	(bad)  
   14001a718:	(bad)  
   14001a719:	inc    DWORD PTR [rax]
   14001a71b:	add    bh,bh
   14001a71d:	jmp    rax
   14001a71f:	(bad)  
   14001a720:	(bad)  
   14001a721:	inc    DWORD PTR [rax]
   14001a723:	add    bh,bh
   14001a725:	jmp    rax
   14001a727:	(bad)  
   14001a728:	(bad)  
   14001a729:	inc    DWORD PTR [rax]
   14001a72b:	add    bh,bh
   14001a72d:	inc    eax
   14001a72f:	ud0    edi,edi
   14001a732:	add    BYTE PTR [rax],al
   14001a734:	(bad)  
   14001a735:	inc    eax
   14001a737:	(bad)  
   14001a738:	(bad)  
   14001a739:	inc    DWORD PTR [rax]
   14001a73b:	add    bh,bh
   14001a73d:	inc    DWORD PTR [rax+0xffff03]
   14001a743:	add    bh,bh
   14001a745:	inc    DWORD PTR [rax+0xffff01]
   14001a74b:	add    bh,bh
   14001a74d:	inc    DWORD PTR [rax]
   14001a74f:	add    bh,bh
   14001a751:	cld    
   14001a752:	add    BYTE PTR [rax],al
   14001a754:	(bad)  
   14001a755:	inc    DWORD PTR [rax]
   14001a757:	add    BYTE PTR [rdi-0x8],bh
   14001a75a:	add    BYTE PTR [rax],al
   14001a75c:	(bad)  
   14001a75d:	inc    BYTE PTR [rax]
   14001a75f:	add    BYTE PTR [rdi-0x10],bh
   14001a762:	add    BYTE PTR [rax],al
   14001a764:	(bad)  
   14001a765:	inc    BYTE PTR [rax]
   14001a767:	add    BYTE PTR [rdi],bh
   14001a769:	loopne 0x14001a76b
   14001a76b:	add    bh,bh
   14001a76d:	mov    BYTE PTR [rax],al
   14001a76f:	add    BYTE PTR [rdi],cl
   14001a771:	rol    DWORD PTR [rax],0x0
   14001a774:	inc    DWORD PTR [rax]
   14001a776:	add    BYTE PTR [rax],al
   14001a778:	(bad)  
   14001a779:	add    DWORD PTR [rax],eax
   14001a77b:	add    ah,bh
   14001a77d:	add    BYTE PTR [rax],al
   14001a77f:	add    BYTE PTR [rax],al
   14001a781:	add    DWORD PTR [rax],eax
   14001a783:	add    al,bh
   14001a785:	add    BYTE PTR [rax],al
   14001a787:	add    BYTE PTR [rax],al
   14001a789:	add    eax,DWORD PTR [rax]
   14001a78b:	add    al,dh
   14001a78d:	add    BYTE PTR [rax],al
   14001a78f:	add    BYTE PTR [rax],al
   14001a791:	add    eax,DWORD PTR [rax]
   14001a793:	add    al,al
   14001a795:	add    BYTE PTR [rax],al
   14001a797:	add    BYTE PTR [rax],al
   14001a799:	(bad)  
   14001a79a:	add    BYTE PTR [rax],al
   14001a79c:	add    BYTE PTR [rax],0x0
   14001a79f:	add    BYTE PTR [rax],al
   14001a7a1:	(bad)  
   14001a7a2:	add    BYTE PTR [rax],al
   14001a7a4:	add    BYTE PTR [rax],al
   14001a7a6:	add    BYTE PTR [rax],al
   14001a7a8:	add    BYTE PTR [rdi],al
   14001a7aa:	add    BYTE PTR [rax],al
   14001a7ac:	add    BYTE PTR [rax],al
   14001a7ae:	add    BYTE PTR [rax],al
   14001a7b0:	add    BYTE PTR [rdi],cl
   14001a7b2:	add    BYTE PTR [rax],al
   14001a7b4:	add    BYTE PTR [rax],al
   14001a7b6:	add    BYTE PTR [rax],al
   14001a7b8:	add    BYTE PTR [rdi],cl
   14001a7ba:	add    BYTE PTR [rax],al
   14001a7bc:	loopne 0x14001a7be
   14001a7be:	add    BYTE PTR [rax],al
   14001a7c0:	add    BYTE PTR [rdi],cl
   14001a7c2:	add    BYTE PTR [rax],al
   14001a7c4:	clc    
   14001a7c5:	add    BYTE PTR [rax],al
   14001a7c7:	add    BYTE PTR [rax],al
   14001a7c9:	(bad)  
   14001a7ca:	add    BYTE PTR [rax],al
   14001a7cc:	inc    DWORD PTR [rax]
   14001a7ce:	add    BYTE PTR [rax],al
   14001a7d0:	add    BYTE PTR [rdi],bl
   14001a7d2:	add    BYTE PTR [rax],al
   14001a7d4:	inc    eax
   14001a7d6:	add    BYTE PTR [rax],al
   14001a7d8:	add    BYTE PTR [rdi],bl
   14001a7da:	add    BYTE PTR [rax],al
   14001a7dc:	(bad)  
   14001a7dd:	clc    
   14001a7de:	add    BYTE PTR [rax],al
   14001a7e0:	add    BYTE PTR [rdi],bh
   14001a7e2:	add    BYTE PTR [rax],al
   14001a7e4:	(bad)  
   14001a7e5:	cld    
   14001a7e6:	add    BYTE PTR [rax],al
   14001a7e8:	add    BYTE PTR [rdi],bh
   14001a7ea:	add    BYTE PTR [rax],al
   14001a7ec:	(bad)  
   14001a7ed:	inc    BYTE PTR [rax]
   14001a7ef:	add    BYTE PTR [rax],al
   14001a7f1:	jg     0x14001a7f3
   14001a7f3:	add    bh,bh
   14001a7f5:	inc    BYTE PTR [rax]
   14001a7f7:	add    BYTE PTR [rax],al
   14001a7f9:	jg     0x14001a7fb
   14001a7fb:	add    bh,bh
   14001a7fd:	inc    DWORD PTR [rax]
   14001a7ff:	add    BYTE PTR [rax],al
   14001a801:	jg     0x14001a803
   14001a803:	add    bh,bh
   14001a805:	inc    eax
   14001a807:	add    BYTE PTR [rax],al
   14001a809:	inc    DWORD PTR [rax]
   14001a80b:	add    bh,bh
   14001a80d:	push   rax
   14001a80f:	add    BYTE PTR [rax],al
   14001a811:	inc    DWORD PTR [rax]
   14001a813:	add    bh,bh
   14001a815:	(bad)  
   14001a816:	cld    
   14001a817:	add    BYTE PTR [rax],al
   14001a819:	inc    DWORD PTR [rax]
   14001a81b:	add    bh,bh
   14001a81d:	(bad)  
   14001a81e:	inc    BYTE PTR [rax]
   14001a820:	add    edi,edi
   14001a822:	add    BYTE PTR [rax],al
   14001a824:	(bad)  
   14001a825:	(bad)  
   14001a826:	inc    DWORD PTR [rax]
   14001a828:	add    edi,edi
   14001a82a:	add    BYTE PTR [rax],al
   14001a82c:	(bad)  
   14001a82d:	(bad)  
   14001a82e:	inc    DWORD PTR [rax+0xff01]
   14001a834:	(bad)  
   14001a835:	(bad)  
   14001a836:	inc    DWORD PTR [rax+0xff03]
   14001a83c:	(bad)  
   14001a83d:	(bad)  
   14001a83e:	inc    eax
   14001a840:	add    edi,edi
   14001a842:	add    BYTE PTR [rax],al
   14001a844:	(bad)  
   14001a845:	(bad)  
   14001a846:	jmp    rax
   14001a848:	(bad)  
   14001a849:	inc    DWORD PTR [rax]
   14001a84b:	add    bh,bh
   14001a84d:	(bad)  
   14001a84e:	jmp    rax
   14001a850:	(bad)  
   14001a851:	inc    DWORD PTR [rax]
   14001a853:	add    bh,bh
   14001a855:	(bad)  
   14001a856:	push   rax
   14001a858:	ud0    eax,DWORD PTR [rax]
   14001a85b:	add    bh,bh
   14001a85d:	(bad)  
   14001a85e:	push   rax
   14001a860:	ud0    eax,DWORD PTR [rax]
   14001a863:	add    bh,bh
   14001a865:	(bad)  
   14001a866:	(bad)  
   14001a867:	clc    
   14001a868:	(bad)  
   14001a869:	inc    DWORD PTR [rax]
   14001a86b:	add    bh,bh
   14001a86d:	(bad)  
   14001a86e:	(bad)  
   14001a86f:	cld    
   14001a870:	(bad)  
   14001a871:	inc    DWORD PTR [rax]
   14001a873:	add    bh,bh
   14001a875:	(bad)  
   14001a876:	(bad)  
   14001a877:	(bad)  
   14001a878:	(bad)  
   14001a879:	inc    DWORD PTR [rax]
   14001a87b:	add    bh,bh
   14001a87d:	(bad)  
   14001a87e:	(bad)  
   14001a87f:	(bad)  
   14001a880:	(bad)  
   14001a881:	inc    DWORD PTR [rax]
   14001a883:	add    BYTE PTR [rax],ch
   14001a885:	add    BYTE PTR [rax],al
   14001a887:	add    BYTE PTR [rax],ah
   14001a889:	add    BYTE PTR [rax],al
   14001a88b:	add    BYTE PTR [rax+0x0],al
   14001a88e:	add    BYTE PTR [rax],al
   14001a890:	add    DWORD PTR [rax],eax
   14001a892:	and    BYTE PTR [rax],al
   14001a894:	add    BYTE PTR [rax],al
   14001a896:	add    BYTE PTR [rax],al
   14001a898:	adc    BYTE PTR [rax],0x0
	...
   14001a95f:	add    BYTE PTR [rsi+rdi*2-0x79],cl
   14001a963:	(bad)  
   14001a964:	lea    rsp,[rbx+0x4b5b5754]
   14001a96b:	or     al,0x0
	...
   14001a9dd:	add    BYTE PTR [rax],al
   14001a9df:	add    BYTE PTR [rcx-0x77],cl
   14001a9e2:	popf   
   14001a9e3:	xchg   ecx,eax
   14001a9e4:	cmp    edi,DWORD PTR [rdx-0x53c0000c]
   14001a9ea:	fsubr  st(1),st
   14001a9ec:	push   rdx
   14001a9ed:	ins    BYTE PTR es:[rdi],dx
   14001a9ee:	imul   edx,DWORD PTR [rbx+0x57],0x59
   14001a9f2:	rex.WRX add r8b,BYTE PTR [rax]
	...
   14001aa59:	add    BYTE PTR [rax],al
   14001aa5b:	add    BYTE PTR [rsi+0x5e],dl
   14001aa5e:	push   rbx
   14001aa5f:	adc    bh,BYTE PTR [rip+0x3befe9b3]        # 0x17bf19418
   14001aa65:	mov    ecx,0xb63bfff4
   14001aa6a:	repz (bad) 
   14001aa6c:	cmp    al,0xac
   14001aa6e:	icebp  
   14001aa6f:	std    
   14001aa70:	rex.WR jo 0x14001a9ff
   14001aa73:	xchg   BYTE PTR [rbp+0x54],dl
   14001aa76:	push   rsi
   14001aa77:	add    al,0x0
	...
   14001aad9:	add    BYTE PTR [rax],al
   14001aadb:	add    BYTE PTR [rbp+0x72],cl
   14001aade:	xchg   DWORD PTR [rdx+0x3c],esi
   14001aae1:	stos   DWORD PTR es:[rdi],eax
   14001aae2:	icebp  
   14001aae3:	(bad)  
   14001aae4:	cmp    al,0xaa
   14001aae6:	icebp  
   14001aae7:	(bad)  
   14001aae8:	cmp    al,0xa4
   14001aaea:	lock (bad) 
   14001aaec:	cmp    ebx,DWORD PTR [rbx-0x6ec40011]
   14001aaf2:	out    dx,al
   14001aaf3:	dec    DWORD PTR [rbx+0x66]
   14001aaf6:	xchg   esp,eax
   14001aaf7:	mov    ss,WORD PTR [rsi+0x4c]
   14001aafa:	push   rcx
   14001aafb:	add    eax,DWORD PTR [rax]
	...
   14001ab55:	add    BYTE PTR [rax],al
   14001ab57:	add    BYTE PTR [rbp+0x42],dl
   14001ab5a:	rex.R add eax,0xd9ce773f
   14001ab60:	cmp    ecx,DWORD PTR [rbp-0x70c40013]
   14001ab66:	in     eax,dx
   14001ab67:	(bad)  
   14001ab68:	cmp    ecx,DWORD PTR [rbp-0x77c40013]
   14001ab6e:	in     eax,dx
   14001ab6f:	(bad)  
   14001ab70:	cmp    eax,DWORD PTR [rsp+rbp*8-0x1481c301]
   14001ab77:	dec    BYTE PTR [rsi+0x59]
   14001ab7a:	(bad)  
   14001ab7b:	jne    0x14001abd3
   14001ab7d:	rex.WB
   14001ab7e:	rex.WRXB add QWORD PTR [r8],r8
	...
   14001abd5:	add    BYTE PTR [rax],al
   14001abd7:	add    BYTE PTR [rdi+0x39],al
   14001abda:	pop    rcx
   14001abdb:	push   rcx
   14001abdc:	xor    DWORD PTR [rbp-0x32],edx
   14001abdf:	push   QWORD PTR [rsi]
   14001abe1:	data16 fdivp st(7),st
   14001abe4:	cmp    BYTE PTR [rdi-0x1a],ch
   14001abe7:	(bad)  
   14001abe8:	cmp    DWORD PTR [rbx-0x17],esi
   14001abeb:	(bad)  
   14001abec:	cmp    dh,BYTE PTR [rcx+rbp*8-0x1]
   14001abf0:	cmp    dh,BYTE PTR [rbp-0x16]
   14001abf3:	(bad)  
   14001abf4:	cmp    esi,DWORD PTR [rdi-0x15]
   14001abf7:	(bad)  
   14001abf8:	cmp    al,0x77
   14001abfa:	jmp    0x1a953fefa
   14001abff:	push   rax
	...
   14001ac24:	push   rbp
   14001ac25:	xor    dh,BYTE PTR [rbx]
   14001ac27:	add    DWORD PTR [rdi+0x32],ecx
   14001ac2a:	rex.RX sub eax,0x0
	...
   14001ac54:	sub    r13,QWORD PTR [r11]
   14001ac57:	add    eax,0xcc7b292c
   14001ac5c:	and    eax,0x2affa533
   14001ac61:	rex.X mov dil,0xff
   14001ac64:	(bad)  
   14001ac65:	rex.WRXB (bad) 
   14001ac67:	push   QWORD PTR [rbx]
   14001ac69:	pop    rdx
   14001ac6a:	(bad)  
   14001ac6b:	push   QWORD PTR [rsi]
   14001ac6d:	movsxd ebx,edi
   14001ac6f:	push   QWORD PTR [rdi]
   14001ac71:	push   0xffffffffffffffe6
   14001ac73:	(bad)  
   14001ac74:	cmp    BYTE PTR [rcx-0x17],dh
   14001ac77:	(bad)  
   14001ac78:	cmp    bh,BYTE PTR [rcx-0x15]
   14001ac7b:	(bad)  
   14001ac7c:	ds jp  0x14001ac60
   14001ac7f:	lock push rbp
   14001ac81:	push   rax
   14001ac82:	pop    rsp
   14001ac83:	xor    eax,DWORD PTR [rax]
	...
   14001ac9d:	add    BYTE PTR [rax],al
   14001ac9f:	add    BYTE PTR [rdx+rsi*1+0x36],dl
   14001aca3:	add    DWORD PTR [rbx+0x32],ecx
   14001aca6:	push   rdi
   14001aca7:	pop    rax
   14001aca8:	xor    eax,DWORD PTR ds:[rdx+0x88]
	...
   14001accf:	add    BYTE PTR [rdi+0x29],cl
   14001acd2:	sbb    al,0x1
   14001acd4:	cmp    ah,BYTE PTR [rip+0x1d197441]        # 0x15d1b211b
   14001acda:	test   bh,bh
   14001acdc:	sbb    eax,0x22ff8f23
   14001ace1:	sub    al,0x9b
   14001ace3:	jmp    QWORD PTR [rdi]
   14001ace5:	cmp    BYTE PTR [rbx-0x45bbd401],ch
   14001aceb:	jmp    FWORD PTR [rdi]
   14001aced:	push   rax
   14001acee:	leave  
   14001acef:	push   QWORD PTR [rbx+rbx*2]
   14001acf2:	xlat   BYTE PTR ds:[rbx]
   14001acf3:	push   QWORD PTR [rdi]
   14001acf5:	addr32 in al,0xff
   14001acf8:	cmp    BYTE PTR [rcx-0x17],dh
   14001acfb:	(bad)  
   14001acfc:	cmp    edi,DWORD PTR [rbx-0x15]
   14001acff:	inc    DWORD PTR [rax+0x7a]
   14001ad02:	(bad)  
   14001ad03:	jrcxz  0x14001ad5b
   14001ad05:	rex.WRXB push r10
   14001ad07:	(bad)  
	...
   14001ad1c:	push   rsp
   14001ad1d:	xor    bh,BYTE PTR [rax]
   14001ad1f:	add    al,BYTE PTR [rdi+0x33]
   14001ad22:	data16 jo 0x14001ad52
   14001ad25:	xor    al,0xbd
   14001ad27:	stc    
   14001ad28:	rex.XB xor bpl,BYTE PTR [r13+0x26]
	...
   14001ad40:	or     DWORD PTR [rbp+0x13],0x3
   14001ad44:	xchg   esp,eax
   14001ad45:	pop    rbp
   14001ad46:	and    DWORD PTR [rcx-0x6f],ebx
   14001ad49:	pop    rbx
   14001ad4a:	and    BYTE PTR [rdx+0x7c],bl
   14001ad4d:	rex.W adc BYTE PTR [rdx*2+0x16762330],spl
   14001ad55:	adc    al,0x64
   14001ad57:	cli    
   14001ad58:	adc    al,0x18
   14001ad5a:	ja     0x14001ad5b
   14001ad5c:	(bad)  
   14001ad5d:	sbb    al,0x81
   14001ad5f:	call   FWORD PTR [rbx]
   14001ad61:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   14001ad68:	es xor al,0xa7
   14001ad6b:	jmp    FWORD PTR [rdx]
   14001ad6d:	mov    r15b,0xff
   14001ad70:	(bad)  
   14001ad71:	rex.WRX enter 0x35ff,0x5c
   14001ad76:	fcos   
   14001ad78:	(bad)  
   14001ad79:	push   0xffffffffffffffe6
   14001ad7b:	(bad)  
   14001ad7c:	cmp    DWORD PTR [rdi-0x16],esi
   14001ad7f:	(bad)  
   14001ad80:	cmp    al,0x82
   14001ad82:	in     al,dx
   14001ad83:	(bad)  
   14001ad84:	(bad)  
   14001ad85:	adc    ah,0xe2
   14001ad88:	push   rbp
   14001ad89:	push   rbx
   14001ad8a:	pop    rcx
   14001ad8b:	cmp    DWORD PTR [rax+0x48],ebx
   14001ad8e:	cmp    eax,0x1
   14001ad93:	add    BYTE PTR [rax],al
   14001ad95:	add    BYTE PTR [rax],al
   14001ad97:	add    BYTE PTR [rsi+0x34],dl
   14001ad9a:	xor    ecx,DWORD PTR [rdx]
   14001ad9c:	rex.XB xor eax,0x342d8e79
   14001ada2:	ret    0x36fe
   14001ada5:	xor    ebx,DWORD PTR [rcx+0x683244bb]
   14001adab:	add    DWORD PTR [rax],eax
	...
   14001adb9:	add    BYTE PTR [rax],al
   14001adbb:	add    BYTE PTR [rbp-0x51edecb0],al
   14001adc1:	je     0x14001adef
   14001adc3:	movabs ds:0xff4b8fc8fe4792cf,al
   14001adcc:	mov    ecx,0xa4ff4483
   14001add1:	outs   dx,DWORD PTR ds:[rsi]
   14001add2:	sub    edi,edi
   14001add4:	xor    al,0x21
   14001add6:	rex.RX call QWORD PTR [rip+0x14ff6112]        # 0x155010eef
   14001addd:	(bad)  
   14001adde:	jne    0x14001addf
   14001ade0:	(bad)  
   14001ade1:	sbb    al,0x80
   14001ade3:	call   FWORD PTR [rbx]
   14001ade5:	and    DWORD PTR [rdi+rdi*8-0x67d5df],ecx
   14001adec:	es xor eax,0x432bffa8
   14001adf2:	mov    edx,0xce5231ff
   14001adf7:	push   QWORD PTR [rsi]
   14001adf9:	fs loope 0x14001adfb
   14001adfc:	cmp    BYTE PTR [rbx-0x16],dh
   14001adff:	(bad)  
   14001ae00:	cmp    al,0x80
   14001ae02:	in     al,dx
   14001ae03:	(bad)  
   14001ae04:	cmp    ecx,DWORD PTR [rcx-0x75c30013]
   14001ae0a:	jmp    0xd065f807
   14001ae0f:	sahf   
   14001ae10:	rex.WRX
   14001ae11:	rex.WRB
   14001ae12:	gs pop rbp
   14001ae14:	rex.WX
   14001ae15:	rex.X ins BYTE PTR es:[rdi],dx
   14001ae17:	jno    0x14001ae51
   14001ae19:	cmp    eax,0x372ed4ad
   14001ae1e:	(bad)  
   14001ae1f:	jmp    FWORD PTR [rip+0x3effc034]        # 0x17f016e59
   14001ae25:	xor    bh,BYTE PTR [rdi+rdx*2+0x0]
	...
   14001ae31:	add    BYTE PTR [rax],al
   14001ae33:	add    BYTE PTR [rbx-0x70feecb2],al
   14001ae39:	pop    rcx
   14001ae3a:	sbb    bh,BYTE PTR [rbx]
   14001ae3c:	(bad)  
   14001ae3d:	mov    WORD PTR [rbx],?
   14001ae3f:	fcmovbe st,st(3)
   14001ae41:	xchg   edi,eax
   14001ae42:	rex.X call rcx
   14001ae45:	xchg   esp,eax
   14001ae46:	rex.XB dec r13d
   14001ae49:	xchg   ecx,eax
   14001ae4a:	inc    r12
   14001ae4d:	mov    WORD PTR [rbp-0x1],cs
   14001ae50:	mov    bh,0x83
   14001ae52:	rex.WXB call FWORD PTR [r10+0x29ff2c68]
   14001ae59:	sbb    al,BYTE PTR [rdi-0x1]
   14001ae5c:	adc    eax,0x14ff6012
   14001ae61:	sbb    BYTE PTR [rsi-0x1],dh
   14001ae64:	sbb    BYTE PTR [rdx+rax*4],bl
   14001ae67:	call   FWORD PTR [rdx+riz*1]
   14001ae6a:	mov    ?,edi
   14001ae6c:	and    ebp,DWORD PTR [rsp+rbx*4]
   14001ae6f:	jmp    FWORD PTR [rax]
   14001ae71:	cmp    ch,BYTE PTR [rdi-0x3bb5d201]
   14001ae77:	push   QWORD PTR [rip+0x38ffda5d]        # 0x1790188da
   14001ae7d:	jo     0x14001ae68
   14001ae7f:	(bad)  
   14001ae80:	cmp    al,0x7f
   14001ae82:	in     al,dx
   14001ae83:	(bad)  
   14001ae84:	cmp    ecx,DWORD PTR [rcx-0x74c30013]
   14001ae8a:	in     eax,dx
   14001ae8b:	(bad)  
   14001ae8c:	cmp    eax,DWORD PTR [rbx+0x7239ffec]
   14001ae92:	jmp    0x12155e396
   14001ae97:	jmp    FWORD PTR [rdi]
   14001ae99:	cmp    eax,0x352dffce
   14001ae9e:	ret    
   14001ae9f:	jmp    FWORD PTR [rdi]
   14001aea1:	xor    esi,DWORD PTR [rbx+0x643245ea]
   14001aea7:	or     DWORD PTR [rax],eax
   14001aea9:	add    BYTE PTR [rax],al
   14001aeab:	add    BYTE PTR [rax],al
   14001aead:	add    BYTE PTR [rax],al
   14001aeaf:	add    BYTE PTR [rsi-0x5bf8eaaf],al
   14001aeb5:	outs   dx,BYTE PTR ds:[rsi]
   14001aeb6:	sub    BYTE PTR [rsi-0x2a],bh
   14001aeb9:	popf   
   14001aeba:	rex.RXB stc 
   14001aebc:	xlat   BYTE PTR ds:[rbx]
   14001aebd:	popf   
   14001aebe:	rex.RX call rbp
   14001aec1:	(bad)  
   14001aec2:	rex.XB call r10
   14001aec5:	xchg   esi,eax
   14001aec6:	call   r8
   14001aec9:	xchg   ebx,eax
   14001aeca:	rex.RB inc r15d
   14001aecd:	mov    cs,WORD PTR [rdi+rdi*8-0x42]
   14001aed1:	mov    BYTE PTR [rdi-0x1],cl
   14001aed4:	mov    dl,0x7f
   14001aed6:	rex.WRB inc QWORD PTR [r14+0x1eff2e5a]
   14001aedd:	adc    ecx,DWORD PTR [rdx-0x1]
   14001aee0:	adc    eax,0x14ff6513
   14001aee5:	sbb    DWORD PTR [rcx-0x1],edi
   14001aee8:	sbb    DWORD PTR [rip+0x261eff86],ebx        # 0x16620ae74
   14001aeee:	xchg   ebx,eax
   14001aeef:	jmp    QWORD PTR [rip+0x2bffa432]        # 0x16c015327
   14001aef5:	rex.XB mov r10d,0xd45733ff
   14001aefb:	push   QWORD PTR [rdi]
   14001aefd:	ins    DWORD PTR es:[rdi],dx
   14001aefe:	out    0xff,eax
   14001af00:	cmp    edi,DWORD PTR [rdi-0x14]
   14001af03:	(bad)  
   14001af04:	cmp    ecx,DWORD PTR [rdx-0x75c30013]
   14001af0a:	in     eax,dx
   14001af0b:	(bad)  
   14001af0c:	cmp    al,BYTE PTR [rcx+0x6c39ffeb]
   14001af12:	jmp    0x11d4de316
   14001af17:	jmp    FWORD PTR [rsi]
   14001af19:	cmp    ecx,ecx
   14001af1b:	jmp    FWORD PTR [rip+0x3bffc134]        # 0x17c017055
   14001af21:	xor    cl,BYTE PTR [rax+0x92]
   14001af27:	add    BYTE PTR [rax],al
   14001af29:	add    BYTE PTR [rax],al
   14001af2b:	add    BYTE PTR [rax-0x3fdbe2a5],dl
   14001af31:	mov    DWORD PTR [rip+0x4da0d9c1],edi        # 0x18da288f8
   14001af37:	(bad)  
   14001af38:	fcomp  DWORD PTR [rdi-0x612700b5]
   14001af3e:	rex.W call rdi
   14001af41:	popf   
   14001af42:	rex.RX call rsp
   14001af45:	cwde   
   14001af46:	rex.XB call r9
   14001af49:	xchg   esp,eax
   14001af4a:	rex.X dec edx
   14001af4d:	nop
   14001af4e:	rex.WX inc rax
   14001af51:	mov    DWORD PTR [rsi-0x1],ecx
   14001af54:	mov    bh,0x83
   14001af56:	push   rdx
   14001af57:	jmp    FWORD PTR [rdx+0x65ff4b7a]
   14001af5d:	rex.X xor eax,0x4f1119ff
   14001af63:	call   QWORD PTR [rdx*1+0x1b16ff6d]
   14001af6a:	jge    0x14001af6b
   14001af6c:	sbb    esp,DWORD PTR [rax]
   14001af6e:	mov    edi,edi
   14001af70:	and    ch,BYTE PTR [rbx+rbx*4]
   14001af73:	jmp    FWORD PTR [rcx]
   14001af75:	cmp    al,0xb2
   14001af77:	push   QWORD PTR [rcx]
   14001af79:	push   rdx
   14001af7a:	int    0xff
   14001af7c:	(bad)  
   14001af7d:	imul   esp,esi,0xffffffff
   14001af80:	cmp    edi,DWORD PTR [rdi-0x14]
   14001af83:	(bad)  
   14001af84:	cmp    al,0x8b
   14001af86:	in     eax,dx
   14001af87:	(bad)  
   14001af88:	cmp    al,0x8b
   14001af8a:	in     eax,dx
   14001af8b:	(bad)  
   14001af8c:	cmp    bh,BYTE PTR [rsi-0x15]
   14001af8f:	push   QWORD PTR [rdi]
   14001af91:	fs out 0xff,eax
   14001af94:	xor    DWORD PTR [rbp-0x2a],eax
   14001af97:	jmp    FWORD PTR [rip+0x2cffc636]        # 0x16d0175d3
   14001af9d:	xor    al,0xbe
   14001af9f:	inc    BYTE PTR [rdx+0x31]
   14001afa2:	jo     0x14001afd7
	...
   14001afac:	mov    ebx,0xd3793d85
   14001afb1:	pushf  
   14001afb2:	rex.WRXB jmp 0x13f535191
   14001afb8:	fldenv [rcx-0x602700b1]
   14001afbe:	rex.WXB (bad) 
   14001afc0:	fcomp  DWORD PTR [rsi-0x642900b8]
   14001afc6:	rex.RB call r10
   14001afc9:	xchg   esi,eax
   14001afca:	rex.X dec ebp
   14001afcd:	xchg   ecx,eax
   14001afce:	inc    rcx
   14001afd1:	mov    cl,BYTE PTR [rsi-0x1]
   14001afd4:	mov    bh,0x83
   14001afd6:	push   rcx
   14001afd7:	jmp    FWORD PTR [rbx-0x6300aa83]
   14001afdd:	outs   dx,DWORD PTR ds:[rsi]
   14001afde:	rex.B (bad) 
   14001afe0:	cmp    al,0x27
   14001afe2:	notrack call QWORD PTR [rdi]
   14001afe5:	adc    DWORD PTR [rax-0x1],ebx
   14001afe8:	adc    al,0x17
   14001afea:	jne    0x14001afeb
   14001afec:	sbb    BYTE PTR [rip+0x261fff84],bl        # 0x16621af76
   14001aff2:	xchg   esp,eax
   14001aff3:	jmp    QWORD PTR [rdi]
   14001aff5:	ss stos BYTE PTR es:[rdi],al
   14001aff7:	jmp    FWORD PTR [rdi]
   14001aff9:	rex.WR (bad) 
   14001affb:	push   QWORD PTR [rdi]
   14001affd:	push   0xffffffff803bffe4
   14001b002:	in     al,dx
   14001b003:	(bad)  
   14001b004:	cmp    ecx,DWORD PTR [rbp-0x73c40012]
   14001b00a:	in     eax,dx
   14001b00b:	(bad)  
   14001b00c:	cmp    DWORD PTR [rbx-0x15],edi
   14001b00f:	push   QWORD PTR [rsi]
   14001b011:	pop    rbx
   14001b012:	in     al,0xff
   14001b014:	(bad)  
   14001b015:	(bad)  
   14001b016:	sar    bh,1
   14001b018:	sub    eax,0x33ffc335
   14001b01d:	xor    ah,BYTE PTR [rbx+0x643145d3]
   14001b023:	add    al,BYTE PTR [rax]
	...
   14001b02d:	add    BYTE PTR [rax],al
   14001b02f:	add    BYTE PTR [rcx-0x42f7c785],dh
   14001b035:	xchg   DWORD PTR [rcx+0x5a],eax
   14001b038:	retf   0x4893
   14001b03b:	rcr    cl,0xa1
   14001b03e:	rex.WRXB std 
   14001b040:	fcomp  DWORD PTR [rdi-0x622800b5]
   14001b046:	rex.RXB call r11
   14001b049:	xchg   edi,eax
   14001b04a:	rex.X dec esi
   14001b04d:	xchg   edx,eax
   14001b04e:	rex.RXB inc r9d
   14001b051:	mov    cl,BYTE PTR [rsi-0x1]
   14001b054:	mov    dh,0x83
   14001b056:	push   rdx
   14001b057:	jmp    QWORD PTR [rbp+0x56ff5479]
   14001b05d:	cmp    ecx,DWORD PTR [rdx-0x1]
   14001b060:	imul   eax,DWORD PTR [rbp+0x30],0x49131eff
   14001b067:	call   QWORD PTR [rip+0x16ff6613]        # 0x157011680
   14001b06d:	sbb    bh,BYTE PTR [rdi+rdi*8+0x1c]
   14001b071:	and    DWORD PTR [rbp-0x5dcfdb01],ecx
   14001b077:	jmp    FWORD PTR [rip+0x37ffc048]        # 0x1780170c5
   14001b07d:	data16 loop 0x14001b07f
   14001b080:	cmp    eax,DWORD PTR [rcx-0x6fc30014]
   14001b086:	out    dx,al
   14001b087:	(bad)  
   14001b088:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x1587c601]
   14001b08f:	push   QWORD PTR [rbx+rdx*2]
   14001b092:	loopne 0x14001b093
   14001b094:	cs cmp cl,dl
   14001b097:	jmp    FWORD PTR [rip+0x3cffc134]        # 0x17d0171d1
   14001b09d:	xor    al,BYTE PTR [rax+rdi*2+0x0]
	...
   14001b0bc:	mov    bh,0x81
   14001b0be:	cmp    BYTE PTR [rcx],ch
   14001b0c0:	ret    0x3e8b
   14001b0c3:	mov    ss,edx
   14001b0c5:	cdq    
   14001b0c6:	rex.R jmp 0x14001b09d
   14001b0c9:	cdq    
   14001b0ca:	rex.XB dec r14d
   14001b0cd:	xchg   edx,eax
   14001b0ce:	rex.RX inc ecx
   14001b0d1:	mov    cl,BYTE PTR [rsi-0x1]
   14001b0d4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001b0d5:	ja     0x14001b123
   14001b0d7:	dec    DWORD PTR [rax+0x2f]
   14001b0da:	rex.RB call FWORD PTR [rip+0x2cff4611]        # 0x16d00f6f2
   14001b0e1:	sbb    eax,0x3957ff42
   14001b0e6:	(bad)  
   14001b0e7:	call   QWORD PTR [rdi]
   14001b0e9:	adc    DWORD PTR [rbx-0x1],edx
   14001b0ec:	adc    al,0x17
   14001b0ee:	je     0x14001b0ef
   14001b0f0:	sbb    DWORD PTR [rsi],ebx
   14001b0f2:	xchg   bh,bh
   14001b0f4:	and    DWORD PTR [rbx],ebp
   14001b0f6:	(bad)  
   14001b0f7:	jmp    FWORD PTR [rbx]
   14001b0f9:	rex.XB mov r10d,0xe06436ff
   14001b0ff:	(bad)  
   14001b100:	cmp    eax,DWORD PTR [rbx-0x6cc40014]
   14001b106:	out    dx,eax
   14001b107:	(bad)  
   14001b108:	cmp    ecx,DWORD PTR [rbp+rbp*8-0x168cc601]
   14001b10f:	push   QWORD PTR [rdx]
   14001b111:	rex.WXB (bad) 
   14001b114:	cs (bad) 
   14001b116:	(bad)  
   14001b117:	jmp    FWORD PTR [rbx+rsi*1]
   14001b11a:	mov    esi,0x683244fc
   14001b11f:	(bad)  
	...
   14001b144:	scas   eax,DWORD PTR es:[rdi]
   14001b145:	ja     0x14001b175
   14001b147:	or     DWORD PTR [rax-0x3fa1cd81],edi
   14001b14d:	xchg   BYTE PTR [rsi],bh
   14001b14f:	(bad)
   14001b152:	rex.X dec BYTE PTR [rcx+0x2f]
   14001b156:	rex.X jmp FWORD PTR [rax]
   14001b159:	(bad)  
   14001b15a:	rex.RX jmp QWORD PTR [rsp+r10*1]
   14001b15e:	rex.RX jmp QWORD PTR [rbx]
   14001b161:	adc    al,0x46
   14001b163:	call   FWORD PTR [rdi+0x3d]
   14001b166:	xor    eax,0x461825ff
   14001b16b:	call   QWORD PTR [rip+0x17ff6613]        # 0x158011784
   14001b171:	sbb    edi,DWORD PTR [rdi-0x1]
   14001b174:	(bad)  
   14001b175:	es xchg ebx,eax
   14001b177:	jmp    FWORD PTR [rcx]
   14001b179:	cmp    eax,0x6235ffb3
   14001b17e:	(bad)  
   14001b180:	cmp    eax,DWORD PTR [rsi-0x67c50013]
   14001b186:	lock (bad) 
   14001b188:	cmp    ecx,DWORD PTR [rbp+0x6c38ffed]
   14001b18e:	call   0x11545e392
   14001b193:	jmp    FWORD PTR [rip+0x37ffc335]        # 0x1780174ce
   14001b199:	xor    ebx,DWORD PTR [rcx+0x643245bf]
   14001b19f:	add    DWORD PTR [rax],eax
	...
   14001b1c9:	add    BYTE PTR [rax],al
   14001b1cb:	add    BYTE PTR [rdi+0x65012863],dl
   14001b1d1:	(bad)  
   14001b1d2:	sub    eax,0x3e35527c
   14001b1d7:	dec    DWORD PTR [rdx+0x30]
   14001b1da:	rex inc DWORD PTR [rcx+0x28]
   14001b1de:	rex.X (bad) 
   14001b1e0:	cmp    BYTE PTR [rdx],ah
   14001b1e2:	rex.XB (bad) 
   14001b1e4:	cmp    BYTE PTR [rdx],ah
   14001b1e6:	rex.XB jmp QWORD PTR [r10+0x40]
   14001b1ea:	call   QWORD PTR ss:[rdi]
   14001b1ed:	adc    DWORD PTR [rbx-0x1],edx
   14001b1f0:	adc    al,0x18
   14001b1f2:	ja     0x14001b1f3
   14001b1f4:	sbb    al,0x21
   14001b1f6:	mov    edi,?
   14001b1f8:	(bad)  
   14001b1f9:	(bad)  
   14001b1fa:	stos   DWORD PTR es:[rdi],eax
   14001b1fb:	push   QWORD PTR [rax+riz*2]
   14001b1fe:	(bad)  
   14001b200:	cmp    ecx,DWORD PTR [rdx-0x62c50013]
   14001b206:	lock (bad) 
   14001b208:	cmp    ecx,DWORD PTR [rbp+0x6537ffee]
   14001b20e:	out    0xff,al
   14001b210:	(bad)  
   14001b211:	ds iret 
   14001b213:	jmp    FWORD PTR [rip+0x3effc134]        # 0x17f01734d
   14001b219:	xor    bh,BYTE PTR [rsi+0x64]
	...
   14001b250:	ins    DWORD PTR es:[rdi],dx
   14001b251:	rex.B sbb al,0x2
   14001b254:	cwde   
   14001b255:	(bad)  
   14001b256:	sbb    ebp,DWORD PTR [rdx-0xdc9561]
   14001b25c:	jle    0x14001b2b2
   14001b25e:	sub    edi,edi
   14001b260:	(bad)  
   14001b261:	rex cmp edi,edi
   14001b264:	rex.WRB xor r8b,BYTE PTR [r8-0x1]
   14001b268:	jo     0x14001b2b4
   14001b26a:	jmp    FWORD PTR ss:[rcx]
   14001b26d:	sbb    eax,DWORD PTR [rbp-0x1]
   14001b270:	adc    al,0x14
   14001b272:	push   0xffffffffffffffff
   14001b274:	sbb    DWORD PTR [rsi],ebx
   14001b276:	test   edi,edi
   14001b278:	and    al,0x32
   14001b27a:	movabs ds:0xee8f3bffd75d33ff,eax
   14001b283:	(bad)  
   14001b284:	cmp    esp,DWORD PTR [rsi-0x73c4000e]
   14001b28a:	in     eax,dx
   14001b28b:	push   QWORD PTR [rsi]
   14001b28d:	pop    rsp
   14001b28e:	jrcxz  0x14001b28f
   14001b290:	cs cmp ecx,ecx
   14001b293:	jmp    FWORD PTR [rip+0x46f7bc34]        # 0x186f96ecd
   14001b299:	xor    ah,BYTE PTR [rbp+0x13]
	...
   14001b2d4:	popf   
   14001b2d5:	sbb    DWORD PTR fs:[rcx],ecx
   14001b2d8:	mov    esp,0xc3b7297f
   14001b2dd:	and    DWORD PTR [rbx],0xffffffff
   14001b2e0:	movabs ds:0x65ff2d537cff1d6d,eax
   14001b2e9:	cmp    dil,r15b
   14001b2ec:	push   0x47
   14001b2ee:	call   QWORD PTR ss:[rsi]
   14001b2f1:	adc    DWORD PTR [rdi-0x1],edx
   14001b2f4:	(bad)  
   14001b2f5:	sbb    bh,BYTE PTR [rbp-0x1]
   14001b2f8:	and    DWORD PTR [rbx+rbx*4],ebp
   14001b2fb:	push   QWORD PTR [rdx]
   14001b2fd:	pop    rdx
   14001b2fe:	sar    edi,cl
   14001b300:	cmp    edx,DWORD PTR [rsi-0x4fc60011]
   14001b306:	repnz (bad) 
   14001b308:	cmp    cl,BYTE PTR [rdx+0x5334ffed]
   14001b30e:	fdivp  st(7),st
   14001b310:	sub    eax,0x39ffc536
   14001b315:	xor    edx,DWORD PTR [rdx+0xb2]
	...
   14001b357:	add    BYTE PTR [rbp-0x75fae69c],bl
   14001b35d:	pop    rax
   14001b35e:	sbb    eax,0x205d8f70
   14001b363:	int    0xa8
   14001b365:	jo     0x14001b380
   14001b367:	dec    BYTE PTR [rsi-0x6b00dca1]
   14001b36d:	fs sub bh,bh
   14001b370:	and    eax,0x14ff4819
   14001b375:	(bad)  
   14001b376:	jb     0x14001b377
   14001b378:	(bad)  
   14001b379:	and    eax,0x5631ff92
   14001b37e:	(bad)  
   14001b37f:	(bad)  
   14001b380:	cmp    ah,BYTE PTR [rax-0x44c60010]
   14001b386:	repz (bad) 
   14001b388:	cmp    al,BYTE PTR [rsi+0x4932ffec]
   14001b38e:	fdivr  st,st(7)
   14001b390:	sub    eax,0x3fffc235
   14001b395:	xor    bh,BYTE PTR [rbp+0x5e]
	...
   14001b3e0:	jbe    0x14001b42a
   14001b3e2:	sbb    al,BYTE PTR [rcx]
   14001b3e4:	adc    DWORD PTR [rcx+0x1a],0x186ea753
   14001b3eb:	lock movabs eax,ds:0x15ff374769ff1b6b
   14001b3f5:	adc    esp,DWORD PTR [rcx-0x1]
   14001b3f8:	sbb    esp,DWORD PTR [rax]
   14001b3fa:	mov    edi,edi
   14001b3fc:	(bad)  
   14001b3fd:	push   rax
   14001b3fe:	(bad)  
   14001b3ff:	(bad)  
   14001b400:	cmp    DWORD PTR [rax+rsi*8-0xe37c701],ebp
   14001b407:	(bad)  
   14001b408:	cmp    DWORD PTR [rdi-0x15],edi
   14001b40b:	push   QWORD PTR [rax]
   14001b40d:	(bad)  
   14001b40e:	sar    bh,1
   14001b410:	sub    eax,0x46f6bd34
   14001b415:	xor    ah,BYTE PTR [rbx+0x11]
	...
   14001b468:	mov    dl,BYTE PTR [rbp+0x12]
   14001b46b:	xor    DWORD PTR [rax-0x570fe78c],esi
   14001b471:	jno    0x14001b498
   14001b473:	call   FWORD PTR [rsi]
   14001b475:	adc    eax,0x1b17ff4f
   14001b47a:	jg     0x14001b47b
   14001b47c:	sub    al,0x49
   14001b47e:	mov    esi,0xefba3bff
   14001b483:	(bad)  
   14001b484:	cmp    edx,ecx
   14001b486:	out    dx,eax
   14001b487:	(bad)  
   14001b488:	cmp    BYTE PTR [rbx-0x17],dh
   14001b48b:	jmp    FWORD PTR [rsi]
   14001b48d:	cmp    ecx,ecx
   14001b48f:	(bad)  
   14001b490:	cmp    BYTE PTR [rbx],dh
   14001b492:	xchg   esp,eax
   14001b493:	scas   eax,DWORD PTR es:[rdi]
	...
   14001b4ec:	xchg   edx,eax
   14001b4ed:	pop    rbx
   14001b4ee:	adc    DWORD PTR [rdi-0x4b],ecx
   14001b4f1:	jns    0x14001b50e
   14001b4f3:	std    
   14001b4f4:	pop    rdx
   14001b4f5:	cmp    eax,0x1616ff3d
   14001b4fa:	jo     0x14001b4fb
   14001b4fc:	sub    BYTE PTR [rsi],bh
   14001b4fe:	mov    cl,0xff
   14001b500:	cmp    al,0xc2
   14001b502:	in     eax,dx
   14001b503:	(bad)  
   14001b504:	cmp    al,0xd2
   14001b506:	in     eax,dx
   14001b507:	push   QWORD PTR [rsi]
   14001b509:	movsxd esp,ebx
   14001b50b:	jmp    FWORD PTR [rip+0x3fffc435]        # 0x180017946
   14001b511:	xor    bh,BYTE PTR [rbx+0x53]
	...
   14001b570:	pushf  
   14001b571:	movsxd edx,DWORD PTR [rcx]
   14001b573:	mov    WORD PTR [rsi+0x18ff2e66],ss
   14001b579:	adc    ebx,DWORD PTR [rbp-0x1]
   14001b57c:	and    esi,DWORD PTR [rdx]
   14001b57e:	movabs eax,ds:0xeccb3dffecc43dff
   14001b587:	push   QWORD PTR [rbx]
   14001b589:	push   rcx
   14001b58a:	(bad)  
   14001b58c:	xor    BYTE PTR [rbx],dh
   14001b58e:	mov    bl,0xe7
   14001b590:	xor    r12b,BYTE PTR [r15+0x8]
	...
   14001b5f0:	mov    WORD PTR [rsi+0xf],ss
   14001b5f3:	or     DWORD PTR [rbp+0x43d41f6e],esp
   14001b5f9:	sub    eax,0x251dff46
   14001b5fe:	mov    ?,edi
   14001b600:	cmp    al,0xbe
   14001b602:	(bad)  
   14001b603:	(bad)  
   14001b604:	cmp    al,0xba
   14001b606:	in     al,dx
   14001b607:	push   QWORD PTR [rax]
   14001b609:	rex (bad) 
   14001b60b:	(bad)  
   14001b60c:	cmp    al,0x32
   14001b60e:	test   DWORD PTR [rax+rax*1+0x0],eax
	...
   14001b671:	add    BYTE PTR [rax],al
   14001b673:	add    BYTE PTR [rbx-0x72c0ecaa],cl
   14001b679:	(bad)  
   14001b67a:	xor    al,0xfd
   14001b67c:	sbb    BYTE PTR [rdx],bl
   14001b67e:	je     0x14001b67f
   14001b680:	cmp    DWORD PTR [rdx-0x67c6001f],ebp
   14001b686:	call   0xfd36e58a
   14001b68b:	repz rex.XB xor bpl,BYTE PTR [r13+0x18]
	...
   14001b6f4:	lea    edx,[rdi+0x12]
   14001b6f7:	add    DWORD PTR [rdx+rsi*2+0x242fa622],ebp
   14001b6fe:	pop    rax
   14001b6ff:	push   QWORD PTR [rcx]
   14001b701:	jno    0x14001b6d1
   14001b703:	push   QWORD PTR [rbx]
   14001b705:	pop    rcx
   14001b706:	xlat   BYTE PTR ds:[rbx]
   14001b707:	(bad)  
   14001b708:	cmp    al,0x32
   14001b70a:	test   DWORD PTR [rsi+0x0],edi
	...
   14001b775:	add    BYTE PTR [rax],al
   14001b777:	add    BYTE PTR [rdx-0x7eeae29d],bl
   14001b77d:	push   rdi
   14001b77e:	(bad)  
   14001b77f:	fisub  WORD PTR [rcx]
   14001b781:	sub    DWORD PTR [rdx-0x5dcdce01],ebx
   14001b787:	ret    
   14001b788:	(bad)  
   14001b789:	xor    dh,BYTE PTR [rdi+0x7]
	...
   14001b7fc:	jge    0x14001b84f
   14001b7fe:	sub    DWORD PTR [rcx],ebx
   14001b800:	rex.WB
   14001b801:	ss (bad) 
   14001b803:	cmp    BYTE PTR [esi*2+0xb],ch
	...
   14001b8ab:	add    bh,bh
   14001b8ad:	(bad)  
   14001b8ae:	(bad)  
   14001b8af:	(bad)  
   14001b8b0:	(bad)  
   14001b8b1:	clc    
   14001b8b2:	(bad)  
   14001b8b3:	(bad)  
   14001b8b4:	(bad)  
   14001b8b5:	clc    
   14001b8b6:	(bad)  
   14001b8b7:	(bad)  
   14001b8b8:	push   rax
   14001b8ba:	(bad)  
   14001b8bb:	(bad)  
   14001b8bc:	push   rax
   14001b8be:	ud0    edi,edi
   14001b8c1:	loopne 0x14001b8ca
   14001b8c3:	(bad)  
   14001b8c4:	jmp    rax
   14001b8c6:	(bad)  
   14001b8c7:	cld    
   14001b8c8:	inc    eax
   14001b8ca:	add    edi,eax
   14001b8cc:	inc    DWORD PTR [rax+0xf8f001]
   14001b8d2:	add    BYTE PTR [rax-0x10],ah
   14001b8d5:	add    BYTE PTR [rax],al
   14001b8d7:	add    eax,eax
   14001b8d9:	add    BYTE PTR [rax],al
   14001b8db:	add    DWORD PTR [rax+0x30000],eax
   14001b8e1:	add    BYTE PTR [rax],al
   14001b8e3:	add    eax,DWORD PTR [rax]
   14001b8e5:	add    BYTE PTR [rax],al
   14001b8e7:	add    eax,DWORD PTR [rax-0xff90000]
   14001b8ed:	add    BYTE PTR [rax],al
   14001b8ef:	(bad)  
   14001b8f0:	cld    
   14001b8f1:	add    BYTE PTR [rax],al
   14001b8f3:	(bad)  
   14001b8f4:	inc    DWORD PTR [rax]
   14001b8f6:	add    BYTE PTR [rdi],cl
   14001b8f8:	inc    DWORD PTR [rax-0x3f00f100]
   14001b8fe:	add    BYTE PTR [rdi],bl
   14001b900:	jmp    rax
   14001b902:	add    BYTE PTR [rdi],bl
   14001b904:	(bad)  
   14001b905:	clc    
   14001b906:	add    BYTE PTR [rdi],bl
   14001b908:	(bad)  
   14001b909:	inc    BYTE PTR [rax]
   14001b90b:	(bad)  
   14001b90c:	(bad)  
   14001b90d:	inc    DWORD PTR [rax]
   14001b90f:	(bad)  
   14001b910:	(bad)  
   14001b911:	inc    DWORD PTR [rax-0x7f0000c1]
   14001b917:	jg     0x14001b918
   14001b919:	inc    eax
   14001b91b:	jg     0x14001b91c
   14001b91d:	inc    eax
   14001b91f:	(bad)  
   14001b920:	(bad)  
   14001b921:	jmp    rax
   14001b923:	(bad)  
   14001b924:	(bad)  
   14001b925:	push   rcx
   14001b927:	(bad)  
   14001b928:	(bad)  
   14001b929:	(bad)  
   14001b92a:	(bad)  
   14001b92b:	jmp    FWORD PTR [rax]
   14001b92d:	add    BYTE PTR [rax],al
   14001b92f:	add    BYTE PTR [rax],dl
   14001b931:	add    BYTE PTR [rax],al
   14001b933:	add    BYTE PTR [rax],ah
   14001b935:	add    BYTE PTR [rax],al
   14001b937:	add    BYTE PTR [rcx],al
   14001b939:	add    BYTE PTR [rax],ah
   14001b93b:	add    BYTE PTR [rax],al
   14001b93d:	add    BYTE PTR [rax],al
   14001b93f:	add    BYTE PTR [rax+0x4],al
	...
   14001b96a:	add    BYTE PTR [rax],al
   14001b96c:	xor    BYTE PTR [rdx],bh
   14001b96e:	xor    al,0x7
   14001b970:	cmp    BYTE PTR [rdx+0x46],cl
   14001b973:	sbb    BYTE PTR [rax],al
	...
   14001b9a9:	add    BYTE PTR [rax],al
   14001b9ab:	add    BYTE PTR [rbp+0x7c],cl
   14001b9ae:	xchg   DWORD PTR [rbp+0x3c],esp
   14001b9b1:	mov    ch,0xee
   14001b9b3:	test   DWORD PTR [rax+rdi*2-0x73],0x202f4076
   14001b9bb:	add    DWORD PTR [rax],eax
	...
   14001b9e5:	add    BYTE PTR [rax],al
   14001b9e7:	add    BYTE PTR [rdx],bh
   14001b9e9:	sub    DWORD PTR [rsi],ebx
   14001b9eb:	add    DWORD PTR [rcx-0x78],eax
   14001b9ee:	int    0xd2
   14001b9f0:	cmp    ebx,DWORD PTR [rbx-0x71c40011]
   14001b9f6:	in     eax,dx
   14001b9f7:	dec    DWORD PTR [rdx+0x62]
   14001b9fa:	xchg   esp,eax
   14001b9fb:	add    DWORD PTR [rax],0x0
	...
   14001ba25:	add    BYTE PTR [rax],al
   14001ba27:	add    BYTE PTR [rdi+rbp*1+0x47],al
   14001ba2b:	rex.W
   14001ba2c:	cs rex.WR ret 0x35ff
   14001ba31:	(bad)  
   14001ba32:	(bad)  
   14001ba34:	cmp    BYTE PTR [rbp-0x1a],ch
   14001ba37:	(bad)  
   14001ba38:	cmp    dh,BYTE PTR [rsi-0x16]
   14001ba3b:	dec    BYTE PTR [rdi+0x59]
   14001ba3e:	jl     0x14001ba9d
	...
   14001ba50:	rex.WXB xor dl,BYTE PTR [r11+r8*2+0x0]
	...
   14001ba5d:	add    BYTE PTR [rax],al
   14001ba5f:	add    BYTE PTR [rbp+rax*2+0x14],dh
   14001ba63:	sub    al,0x5c
   14001ba65:	xor    edx,DWORD PTR [rdi+riz*1]
   14001ba68:	(bad)  
   14001ba69:	sbb    ebp,DWORD PTR [rax-0x25]
   14001ba6c:	sbb    al,0x23
   14001ba6e:	mov    ?,edi
   14001ba70:	es ss test eax,0xc84f2fff
   14001ba77:	push   QWORD PTR [rdi]
   14001ba79:	push   0x7b3cffe3
   14001ba7e:	in     eax,0xf8
   14001ba80:	push   rcx
   14001ba81:	pop    rdx
   14001ba82:	outs   dx,BYTE PTR ds:[rsi]
   14001ba83:	push   rax
   14001ba84:	add    BYTE PTR [rax],al
   14001ba86:	add    BYTE PTR [rax],al
   14001ba88:	rex.XB and eax,0x34430217
   14001ba8e:	jbe    0x14001ba10
   14001ba90:	cmp    esi,DWORD PTR [rbx]
   14001ba92:	mov    esi,DWORD PTR [rdi+0x0]
   14001ba95:	add    BYTE PTR [rax],al
   14001ba97:	add    BYTE PTR [rsi+0x41],ch
   14001ba9a:	(bad)  
   14001ba9b:	btr    DWORD PTR [rdx+0x2f],edi
   14001ba9f:	movabs ds:0xff4180b6fe4791cd,eax
   14001baa8:	rex.XB sub eax,0x1715ff46
   14001baae:	jae    0x14001baaf
   14001bab0:	sbb    al,0x22
   14001bab2:	(bad)  
   14001bab3:	jmp    QWORD PTR [rdi]
   14001bab5:	cmp    BYTE PTR [rbx-0x2ca8cd01],ch
   14001babb:	(bad)  
   14001babc:	cmp    bh,BYTE PTR [rcx-0x16]
   14001babf:	(bad)  
   14001bac0:	cmp    al,0x8a
   14001bac2:	in     al,dx
   14001bac3:	std    
   14001bac4:	rex.X imul esi,DWORD PTR [rbx-0x4dbbc642],0xbf352ed1
   14001bacf:	stc    
   14001bad0:	rex.B sub al,0x4d
   14001bad3:	sbb    BYTE PTR [rax-0x34c4e1a4],dl
   14001bad9:	xchg   edx,eax
   14001bada:	rex.X fst st(7)
   14001badd:	pushf  
   14001bade:	rex.RX call rdx
   14001bae1:	xchg   ebp,eax
   14001bae2:	rex.XB inc r12d
   14001bae5:	mov    WORD PTR [rbp-0x1],cs
   14001bae8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001bae9:	jbe    0x14001bb31
   14001baeb:	jmp    FWORD PTR [rsi+rbx*1]
   14001baee:	rex.WRB call QWORD PTR [r14]
   14001baf1:	sbb    DWORD PTR [rdx-0x1],edi
   14001baf4:	and    BYTE PTR [rcx],ch
   14001baf6:	xchg   edi,eax
   14001baf7:	jmp    FWORD PTR [rsi]
   14001baf9:	rex.WX ret 
   14001bafb:	(bad)  
   14001bafc:	cmp    DWORD PTR [rbp-0x17],esi
   14001baff:	(bad)  
   14001bb00:	cmp    al,0x8b
   14001bb02:	in     eax,dx
   14001bb03:	(bad)  
   14001bb04:	cmp    DWORD PTR [rcx+rbp*8-0x1],esi
   14001bb08:	xor    BYTE PTR [rax-0x30],al
   14001bb0b:	push   QWORD PTR [rip+0xb09e33]        # 0x140b25944
   14001bb11:	add    BYTE PTR [rax],al
   14001bb13:	add    BYTE PTR [rcx-0x31a5c27d],bh
   14001bb19:	xchg   edi,eax
   14001bb1a:	rex.WX (bad) 
   14001bb1c:	fcomp  DWORD PTR [rdi-0x662a01b5]
   14001bb22:	rex.R inc edi
   14001bb25:	mov    cs,WORD PTR [rbx-0x1]
   14001bb28:	scas   eax,DWORD PTR es:[rdi]
   14001bb29:	jg     0x14001bb7e
   14001bb2b:	jmp    QWORD PTR [rsi+0x45]
   14001bb2e:	notrack call QWORD PTR [rdi]
   14001bb31:	adc    al,0x5f
   14001bb33:	call   FWORD PTR [rdx]
   14001bb35:	and    BYTE PTR [rax-0x4ac0d501],cl
   14001bb3b:	(bad)  
   14001bb3c:	cmp    DWORD PTR [rdi+riz*8-0x1],esi
   14001bb40:	cmp    ecx,DWORD PTR [rbp+0x6837ffee]
   14001bb46:	out    0xff,al
   14001bb48:	cs cmp bh,al
   14001bb4b:	inc    DWORD PTR [rax+0x32]
   14001bb4e:	jne    0x14001bba3
	...
   14001bb5c:	movabs eax,ds:0xbe943a8ac32e2d6e
   14001bb65:	xchg   BYTE PTR [rbp-0x10],al
   14001bb68:	pop    rax
   14001bb69:	cmp    eax,DWORD PTR [rsi-0x1]
   14001bb6c:	and    al,0x15
   14001bb6e:	rex.RB (bad) 
   14001bb70:	cmp    eax,0x16ff4128
   14001bb75:	sbb    DWORD PTR [rax-0x1],edi
   14001bb78:	and    eax,0x38ffa634
   14001bb7d:	je     0x14001bb64
   14001bb7f:	(bad)  
   14001bb80:	cmp    edx,DWORD PTR [rcx+0x5b35ffee]
   14001bb86:	loopne 0x14001bb87
   14001bb88:	(bad)  
   14001bb89:	xor    eax,0x273ceeb8
   14001bb8e:	cmp    al,0x8
	...
   14001bba4:	push   0x41
   14001bba6:	(bad)  
   14001bba7:	and    BYTE PTR [rbp+0x4c],dh
   14001bbaa:	(bad)  
   14001bbab:	jmp    0x13f3cf406
   14001bbb0:	push   rsi
   14001bbb1:	(bad)  
   14001bbb2:	cmp    al,0xff
   14001bbb4:	sbb    dl,BYTE PTR [rsi]
   14001bbb6:	pop    rsi
   14001bbb7:	jmp    QWORD PTR [rax]
   14001bbb9:	sub    bl,BYTE PTR [rax-0x1c8ac801]
   14001bbbf:	(bad)  
   14001bbc0:	cmp    edx,DWORD PTR [rdi+0x4e33ffef]
   14001bbc6:	fdivr  st,st(7)
   14001bbc8:	(bad)  
   14001bbc9:	xor    ebx,DWORD PTR [rax+0x9b]
	...
   14001bbe7:	add    BYTE PTR [rdx-0x5fcee59d],bl
   14001bbed:	imul   ebx,DWORD PTR [rdi],0x285a86ce
   14001bbf3:	dec    BYTE PTR [rsi+0x35]
   14001bbf6:	rex call FWORD PTR [rdx]
   14001bbf9:	and    BYTE PTR [rdi-0x1f85c901],al
   14001bbff:	(bad)  
   14001bc00:	cmp    DWORD PTR [rdi+0x4230fff0],ebx
   14001bc06:	iret   
   14001bc07:	inc    DWORD PTR [rbx+0x31]
   14001bc0a:	push   0x44
	...
   14001bc30:	mov    dl,BYTE PTR [rdi+0x15]
   14001bc33:	pop    rbp
   14001bc34:	cdq    
   14001bc35:	data16 and al,0xfb
   14001bc38:	sbb    DWORD PTR [rcx],ebx
   14001bc3a:	outs   dx,BYTE PTR ds:[rsi]
   14001bc3b:	push   QWORD PTR [rax+rax*4]
   14001bc3e:	fcos   
   14001bc40:	cmp    DWORD PTR [rbx+0x3831ffed],esp
   14001bc46:	mov    ebx,0x372539e8
   14001bc4b:	add    al,0x0
	...
   14001bc71:	add    BYTE PTR [rax],al
   14001bc73:	add    BYTE PTR [rbx+riz*2+0x33477613],bl
   14001bc7a:	rex.WRX push QWORD PTR [rcx]
   14001bc7d:	jle    0x14001bc4a
   14001bc7f:	(bad)  
   14001bc80:	cmp    BYTE PTR [rbp+riz*8-0x69ccc701],dl
   14001bc87:	nop
	...
   14001bcb4:	push   rsi
   14001bcb5:	xor    al,BYTE PTR [rdi]
   14001bcb7:	add    al,BYTE PTR [rax+0x2bc42b54]
   14001bcbd:	push   0xffffffffffffffb3
   14001bcbf:	push   QWORD PTR [rip+0x43fcd872]        # 0x183fe9537
   14001bcc5:	(bad)  
   14001bcc6:	pop    rsp
   14001bcc7:	(bad)  
	...
   14001bcf8:	mov    ds,WORD PTR [rcx+0x16]
   14001bcfb:	(bad)  
   14001bcfc:	rex.B
   14001bcfd:	rex.RB jle 0x14001bcf6
   14001bd00:	cmp    BYTE PTR [rbx*4+0x92],bh
	...
   14001bd3b:	add    BYTE PTR [rbx+rsi*1+0x2f],cl
   14001bd3f:	and    BYTE PTR [rdx],ch
   14001bd41:	sbb    eax,0x23b
	...
   14001bd52:	add    BYTE PTR [rax],al
   14001bd54:	cld    
   14001bd55:	inc    DWORD PTR [rax]
   14001bd57:	add    ah,bh
   14001bd59:	(bad)  
   14001bd5a:	add    BYTE PTR [rax],al
   14001bd5c:	clc    
   14001bd5d:	(bad)  
   14001bd5e:	add    BYTE PTR [rax],al
   14001bd60:	clc    
   14001bd61:	(bad)  
   14001bd62:	add    BYTE PTR [rax],al
   14001bd64:	loopne 0x14001bd6e
   14001bd66:	add    BYTE PTR [rax],al
   14001bd68:	add    BYTE PTR [rax],0x0
   14001bd6b:	add    BYTE PTR [rax],al
   14001bd6d:	add    DWORD PTR [rax],eax
   14001bd6f:	add    BYTE PTR [rax],al
   14001bd71:	add    DWORD PTR [rax],eax
   14001bd73:	add    al,al
   14001bd75:	add    DWORD PTR [rax],eax
   14001bd77:	add    al,dh
   14001bd79:	add    eax,DWORD PTR [rax]
   14001bd7b:	add    al,bh
   14001bd7d:	add    eax,DWORD PTR [rax]
   14001bd7f:	add    dh,bh
   14001bd81:	add    eax,DWORD PTR [rax]
   14001bd83:	add    bh,bh
   14001bd85:	(bad)  
   14001bd86:	add    BYTE PTR [rax],al
   14001bd88:	inc    DWORD PTR [rdi]
   14001bd8a:	add    BYTE PTR [rax],al
   14001bd8c:	dec    DWORD PTR [rdi-0x30010000]
   14001bd92:	add    BYTE PTR [rax],al
   14001bd94:	add    BYTE PTR [rax],al
   14001bd96:	add    DWORD PTR [rax],eax
   14001bd98:	or     al,BYTE PTR [rax]
   14001bd9a:	xor    BYTE PTR [rax],dh
   14001bd9c:	adc    BYTE PTR [rax],al
   14001bd9e:	add    DWORD PTR [rax],eax
   14001bda0:	add    al,0x0
   14001bda2:	push   0x1000006
   14001bda7:	add    BYTE PTR [rax],ah
   14001bda9:	and    BYTE PTR [rax],dl
   14001bdab:	add    BYTE PTR [rcx],al
   14001bdad:	add    BYTE PTR [rax+rax*1],al
   14001bdb0:	call   0x14201bdb7
   14001bdb5:	add    BYTE PTR [rax],dl
   14001bdb7:	adc    BYTE PTR [rax],dl
   14001bdb9:	add    BYTE PTR [rcx],al
   14001bdbb:	add    BYTE PTR [rax+rax*1],al
   14001bdbe:	sub    BYTE PTR [rcx],al
   14001bdc0:	add    BYTE PTR [rax],al
   14001bdc2:	add    eax,DWORD PTR [rax]
   14001bdc4:	xor    BYTE PTR [rax],dh
   14001bdc6:	add    BYTE PTR [rax],al
   14001bdc8:	add    DWORD PTR [rax],eax
   14001bdca:	or     BYTE PTR [rax],al
   14001bdcc:	test   al,0xe
   14001bdce:	add    BYTE PTR [rax],al
   14001bdd0:	add    al,0x0
   14001bdd2:	and    BYTE PTR [rax],ah
   14001bdd4:	add    BYTE PTR [rax],al
   14001bdd6:	add    DWORD PTR [rax],eax
   14001bdd8:	or     BYTE PTR [rax],al
   14001bdda:	test   al,0x8
   14001bddc:	add    BYTE PTR [rax],al
   14001bdde:	add    eax,0x101000
   14001bde3:	add    BYTE PTR [rcx],al
   14001bde5:	add    BYTE PTR [rax],cl
   14001bde7:	add    BYTE PTR [rax+0x5],ch
   14001bdea:	add    BYTE PTR [rax],al
   14001bdec:	(bad)  
   14001bded:	add    BYTE PTR [rax],al
   14001bdef:	add    BYTE PTR [rax],al
   14001bdf1:	add    BYTE PTR [rcx],al
   14001bdf3:	add    BYTE PTR [rax],ah
   14001bdf5:	add    ah,cl
   14001bdf7:	test   al,0x0
   14001bdf9:	add    BYTE PTR [rdi],al
   14001bdfb:	add    BYTE PTR [rax],dh
   14001bdfd:	xor    BYTE PTR [rax],al
   14001bdff:	add    BYTE PTR [rcx],al
   14001be01:	add    BYTE PTR [rax],ah
   14001be03:	add    BYTE PTR [rax+0x8000025],ch
   14001be09:	add    BYTE PTR [rax],ah
   14001be0b:	and    BYTE PTR [rax],al
   14001be0d:	add    BYTE PTR [rcx],al
   14001be0f:	add    BYTE PTR [rax],ah
   14001be11:	add    BYTE PTR [rax+0x9000010],ch
   14001be17:	add    BYTE PTR [rax],dl
   14001be19:	adc    BYTE PTR [rax],al
   14001be1b:	add    BYTE PTR [rcx],al
   14001be1d:	add    BYTE PTR [rax],ah
   14001be1f:	add    BYTE PTR [rax+0x4],ch
   14001be22:	add    BYTE PTR [rax],al
   14001be24:	or     al,BYTE PTR [rax]
   14001be26:	push   rax
   14001be27:	rex.B js 0x14001be2c
   14001be2a:	xor    al,0x0
   14001be2c:	add    BYTE PTR [rax],al
   14001be2e:	push   rsi
   14001be2f:	add    BYTE PTR [rbx+0x0],dl
   14001be32:	pop    rdi
   14001be33:	add    BYTE PTR [rsi+0x0],dl
   14001be36:	add    BYTE PTR [r10+0x0],r10b
   14001be3a:	push   rbx
   14001be3b:	add    BYTE PTR [rcx+0x0],cl
   14001be3e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14001be42:	pop    rdi
   14001be43:	add    BYTE PTR [rcx+0x0],cl
   14001be46:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14001be4a:	rex.WRXB add BYTE PTR [r8],r8b
   14001be4d:	add    BYTE PTR [rax],al
   14001be4f:	add    BYTE PTR [rbp+0xfeef04],bh
   14001be55:	add    BYTE PTR [rcx],al
   14001be57:	add    BYTE PTR [rax],al
   14001be59:	add    BYTE PTR [rcx],dl
   14001be5b:	add    BYTE PTR [rax],al
   14001be5d:	add    BYTE PTR [rax],al
   14001be5f:	add    BYTE PTR [rax],al
   14001be61:	add    BYTE PTR [rcx],dl
   14001be63:	add    BYTE PTR [rax],al
   14001be65:	add    BYTE PTR [rax],al
   14001be67:	add    BYTE PTR [rdi],bh
   14001be69:	add    BYTE PTR [rax],al
   14001be6b:	add    BYTE PTR [rax],al
   14001be6d:	add    BYTE PTR [rax],al
   14001be6f:	add    BYTE PTR [rax+rax*1],al
   14001be72:	add    al,0x0
   14001be74:	add    DWORD PTR [rax],eax
	...
   14001be82:	add    BYTE PTR [rax],al
   14001be84:	fadd   DWORD PTR [rcx]
   14001be86:	add    BYTE PTR [rax],al
   14001be88:	add    DWORD PTR [rax],eax
   14001be8a:	push   rbx
   14001be8b:	add    BYTE PTR [rax+rax*1+0x72],dh
   14001be8f:	add    BYTE PTR [rcx+0x0],ch
   14001be92:	outs   dx,BYTE PTR ds:[rsi]
   14001be93:	add    BYTE PTR [rdi+0x0],ah
   14001be96:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001be9a:	ins    BYTE PTR es:[rdi],dx
   14001be9b:	add    BYTE PTR [rbp+0x0],ah
   14001be9e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001bea2:	data16 add BYTE PTR [rdi+0x0],ch
   14001bea6:	add    BYTE PTR [rax],al
   14001bea8:	mov    ah,0x1
   14001beaa:	add    BYTE PTR [rax],al
   14001beac:	add    DWORD PTR [rax],eax
   14001beae:	xor    BYTE PTR [rax],al
   14001beb0:	xor    al,0x0
   14001beb2:	xor    BYTE PTR [rax],al
   14001beb4:	cmp    DWORD PTR [rax],eax
   14001beb6:	xor    BYTE PTR [rax],al
   14001beb8:	xor    al,0x0
   14001beba:	(bad)  
   14001bebb:	add    BYTE PTR [rax],dh
   14001bebd:	add    BYTE PTR [rax],al
   14001bebf:	add    BYTE PTR [rsi+0x0],al
   14001bec2:	adc    eax,DWORD PTR [rax]
   14001bec4:	add    DWORD PTR [rax],eax
   14001bec6:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001beca:	ins    DWORD PTR es:[rdi],dx
   14001becb:	add    BYTE PTR [rax+0x0],dh
   14001bece:	(bad)  
   14001becf:	add    BYTE PTR [rsi+0x0],ch
   14001bed2:	jns    0x14001bed4
   14001bed4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001bed8:	ins    DWORD PTR es:[rdi],dx
   14001bed9:	add    BYTE PTR [rbp+0x0],ah
   14001bedc:	add    BYTE PTR [rax],al
   14001bede:	add    BYTE PTR [rax],al
   14001bee0:	push   rsp
   14001bee1:	add    BYTE PTR [rax+0x0],ch
   14001bee4:	add    BYTE PTR gs:[rax],ah
   14001bee7:	add    BYTE PTR [rbp+0x0],cl
   14001beea:	(bad)  
   14001beeb:	add    BYTE PTR [rax+rax*1+0x68],dh
   14001beef:	add    BYTE PTR [rdi+0x0],dl
   14001bef2:	outs   dx,DWORD PTR ds:[rsi]
   14001bef3:	add    BYTE PTR [rdx+0x0],dh
   14001bef6:	imul   eax,DWORD PTR [rax],0x73
   14001bef9:	add    BYTE PTR [rax+rax*1],ch
   14001befc:	and    BYTE PTR [rax],al
   14001befe:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001bf02:	movsxd eax,DWORD PTR [rax]
   14001bf04:	add    BYTE PTR [rax],al
   14001bf06:	add    BYTE PTR [rax],al
   14001bf08:	rex.WR add BYTE PTR [rdx],r10b
   14001bf0b:	add    BYTE PTR [rcx],al
   14001bf0d:	add    BYTE PTR [rsi+0x0],al
   14001bf10:	imul   eax,DWORD PTR [rax],0x65006c
   14001bf16:	add    BYTE PTR [rbp+0x0],r12b
   14001bf1a:	jae    0x14001bf1c
   14001bf1c:	movsxd eax,DWORD PTR [rax]
   14001bf1e:	jb     0x14001bf20
   14001bf20:	imul   eax,DWORD PTR [rax],0x740070
   14001bf26:	imul   eax,DWORD PTR [rax],0x6e006f
   14001bf2c:	add    BYTE PTR [rax],al
   14001bf2e:	add    BYTE PTR [rax],al
   14001bf30:	add    BYTE PTR [r11+0x0],spl
   14001bf34:	je     0x14001bf36
   14001bf36:	imul   eax,DWORD PTR [rax],0x610076
   14001bf3c:	je     0x14001bf3e
   14001bf3e:	imul   eax,DWORD PTR [rax],0x6e006f
   14001bf44:	and    BYTE PTR [rax],al
   14001bf46:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14001bf4a:	add    BYTE PTR fs:[rbp+0x0],dh
   14001bf4e:	ins    BYTE PTR es:[rdi],dx
   14001bf4f:	add    BYTE PTR [rbp+0x0],ah
   14001bf52:	add    BYTE PTR [rax],al
   14001bf54:	cmp    BYTE PTR [rax],al
   14001bf56:	or     al,0x0
   14001bf58:	add    DWORD PTR [rax],eax
   14001bf5a:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001bf5e:	ins    BYTE PTR es:[rdi],dx
   14001bf5f:	add    BYTE PTR [rbp+0x0],ah
   14001bf62:	push   rsi
   14001bf63:	add    BYTE PTR [rbp+0x0],ah
   14001bf66:	jb     0x14001bf68
   14001bf68:	jae    0x14001bf6a
   14001bf6a:	imul   eax,DWORD PTR [rax],0x6e006f
   14001bf70:	add    BYTE PTR [rax],al
   14001bf72:	add    BYTE PTR [rax],al
   14001bf74:	xor    DWORD PTR [rax],eax
   14001bf76:	(bad)  
   14001bf77:	add    BYTE PTR [rax+rax*1],ch
   14001bf7a:	and    BYTE PTR [rax],al
   14001bf7c:	xor    BYTE PTR [rax],al
   14001bf7e:	sub    al,0x0
   14001bf80:	and    BYTE PTR [rax],al
   14001bf82:	xor    BYTE PTR [rax],al
   14001bf84:	sub    al,0x0
   14001bf86:	and    BYTE PTR [rax],al
   14001bf88:	xor    BYTE PTR [rax],al
   14001bf8a:	add    BYTE PTR [rax],al
   14001bf8c:	push   rax
   14001bf8d:	add    BYTE PTR [rsi],dl
   14001bf8f:	add    BYTE PTR [rcx],al
   14001bf91:	add    BYTE PTR [rax+rax*1+0x65],cl
   14001bf95:	add    BYTE PTR [rdi+0x0],ah
   14001bf98:	(bad)  
   14001bf99:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001bf9d:	add    BYTE PTR [rdi+0x0],ch
   14001bfa0:	jo     0x14001bfa2
   14001bfa2:	jns    0x14001bfa4
   14001bfa4:	jb     0x14001bfa6
   14001bfa6:	imul   eax,DWORD PTR [rax],0x680067
   14001bfac:	je     0x14001bfae
   14001bfae:	add    BYTE PTR [rax],al
   14001bfb0:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001bfb4:	jo     0x14001bfb6
   14001bfb6:	jns    0x14001bfb8
   14001bfb8:	jb     0x14001bfba
   14001bfba:	imul   eax,DWORD PTR [rax],0x680067
   14001bfc0:	je     0x14001bfc2
   14001bfc2:	and    BYTE PTR [rax],al
   14001bfc4:	test   eax,0x32002000
   14001bfc9:	add    BYTE PTR [rax],dh
   14001bfcb:	add    BYTE PTR [rax],dh
   14001bfcd:	add    BYTE PTR [rcx],dh
   14001bfcf:	add    BYTE PTR [rip+0x30003200],ch        # 0x17001f1d5
   14001bfd5:	add    BYTE PTR [rcx],dh
   14001bfd7:	add    BYTE PTR [rdi],dh
   14001bfd9:	add    BYTE PTR [rax],al
   14001bfdb:	add    BYTE PTR [rax+rax*1+0x12],al
   14001bfdf:	add    BYTE PTR [rcx],al
   14001bfe1:	add    BYTE PTR [rax+0x0],dl
   14001bfe4:	jb     0x14001bfe6
   14001bfe6:	outs   dx,DWORD PTR ds:[rsi]
   14001bfe7:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001bfeb:	add    BYTE PTR [rbx+0x0],ah
   14001bfee:	je     0x14001bff0
   14001bff0:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001bff4:	ins    DWORD PTR es:[rdi],dx
   14001bff5:	add    BYTE PTR [rbp+0x0],ah
   14001bff8:	add    BYTE PTR [rax],al
   14001bffa:	add    BYTE PTR [rax],al
   14001bffc:	add    BYTE PTR [r11+0x0],spl
   14001c000:	je     0x14001c002
   14001c002:	imul   eax,DWORD PTR [rax],0x610076
   14001c008:	je     0x14001c00a
   14001c00a:	imul   eax,DWORD PTR [rax],0x6e006f
   14001c010:	and    BYTE PTR [rax],al
   14001c012:	rex.WRB add BYTE PTR [r15+0x0],r13b
   14001c016:	add    BYTE PTR fs:[rbp+0x0],dh
   14001c01a:	ins    BYTE PTR es:[rdi],dx
   14001c01b:	add    BYTE PTR [rbp+0x0],ah
   14001c01e:	add    BYTE PTR [rax],al
   14001c020:	cmp    al,0x0
   14001c022:	or     al,0x0
   14001c024:	add    DWORD PTR [rax],eax
   14001c026:	push   rax
   14001c027:	add    BYTE PTR [rdx+0x0],dh
   14001c02a:	outs   dx,DWORD PTR ds:[rsi]
   14001c02b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001c02f:	add    BYTE PTR [rbx+0x0],ah
   14001c032:	je     0x14001c034
   14001c034:	push   rsi
   14001c035:	add    BYTE PTR [rbp+0x0],ah
   14001c038:	jb     0x14001c03a
   14001c03a:	jae    0x14001c03c
   14001c03c:	imul   eax,DWORD PTR [rax],0x6e006f
   14001c042:	add    BYTE PTR [rax],al
   14001c044:	xor    DWORD PTR [rax],eax
   14001c046:	(bad)  
   14001c047:	add    BYTE PTR [rax+rax*1],ch
   14001c04a:	and    BYTE PTR [rax],al
   14001c04c:	xor    BYTE PTR [rax],al
   14001c04e:	sub    al,0x0
   14001c050:	and    BYTE PTR [rax],al
   14001c052:	xor    BYTE PTR [rax],al
   14001c054:	sub    al,0x0
   14001c056:	and    BYTE PTR [rax],al
   14001c058:	xor    BYTE PTR [rax],al
   14001c05a:	add    BYTE PTR [rax],al
   14001c05c:	add    BYTE PTR [rax],r8b
   14001c05f:	add    BYTE PTR [rcx],al
   14001c061:	add    BYTE PTR [rsi+0x0],dl
   14001c064:	(bad)  
   14001c065:	add    BYTE PTR [rdx+0x0],dh
   14001c068:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001c06c:	ins    BYTE PTR es:[rdi],dx
   14001c06d:	add    BYTE PTR [rbp+0x0],ah
   14001c070:	rex.WB add BYTE PTR [r14+0x0],bpl
   14001c074:	data16 add BYTE PTR [rdi+0x0],ch
   14001c078:	add    BYTE PTR [rax],al
   14001c07a:	add    BYTE PTR [rax],al
   14001c07c:	and    al,0x0
   14001c07e:	add    al,0x0
   14001c080:	add    BYTE PTR [rax],al
   14001c082:	push   rsp
   14001c083:	add    BYTE PTR [rdx+0x0],dh
   14001c086:	(bad)  
   14001c087:	add    BYTE PTR [rsi+0x0],ch
   14001c08a:	jae    0x14001c08c
   14001c08c:	ins    BYTE PTR es:[rdi],dx
   14001c08d:	add    BYTE PTR [rcx+0x0],ah
   14001c090:	je     0x14001c092
   14001c092:	imul   eax,DWORD PTR [rax],0x6e006f
   14001c098:	add    BYTE PTR [rax],al
   14001c09a:	add    BYTE PTR [rax],al
   14001c09c:	or     DWORD PTR [rax+rsi*4],eax
   14001c09f:	add    al,0x3c
   14001c0a1:	(bad)  
   14001c0a2:	jae    0x14001c117
   14001c0a4:	gs ins DWORD PTR es:[rdi],dx
   14001c0a6:	(bad)  
   14001c0a7:	ins    BYTE PTR es:[rdi],dx
   14001c0a8:	jns    0x14001c0ca
   14001c0aa:	js     0x14001c119
   14001c0ac:	ins    BYTE PTR es:[rdi],dx
   14001c0ad:	outs   dx,BYTE PTR ds:[rsi]
   14001c0ae:	jae    0x14001c0ed
   14001c0b0:	and    dh,BYTE PTR [rbp+0x72]
   14001c0b3:	outs   dx,BYTE PTR ds:[rsi]
   14001c0b4:	cmp    dh,BYTE PTR [rbx+0x63]
   14001c0b7:	push   0x73616d65
   14001c0bc:	sub    eax,0x7263696d
   14001c0c1:	outs   dx,DWORD PTR ds:[rsi]
   14001c0c2:	jae    0x14001c133
   14001c0c4:	data16 je 0x14001c0f4
   14001c0c7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001c0ca:	cmp    ah,BYTE PTR [rcx+0x73]
   14001c0cd:	ins    DWORD PTR es:[rdi],dx
   14001c0ce:	cs jbe 0x14001c102
   14001c0d1:	and    ah,BYTE PTR [rax]
   14001c0d3:	js     0x14001c142
   14001c0d5:	ins    BYTE PTR es:[rdi],dx
   14001c0d6:	outs   dx,BYTE PTR ds:[rsi]
   14001c0d7:	jae    0x14001c113
   14001c0d9:	(bad)  
   14001c0da:	jae    0x14001c149
   14001c0dc:	jbe    0x14001c111
   14001c0de:	cmp    eax,0x6e727522
   14001c0e3:	cmp    dh,BYTE PTR [rbx+0x63]
   14001c0e6:	push   0x73616d65
   14001c0eb:	sub    eax,0x7263696d
   14001c0f0:	outs   dx,DWORD PTR ds:[rsi]
   14001c0f1:	jae    0x14001c162
   14001c0f3:	data16 je 0x14001c123
   14001c0f6:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001c0f9:	cmp    ah,BYTE PTR [rcx+0x73]
   14001c0fc:	ins    DWORD PTR es:[rdi],dx
   14001c0fd:	cs jbe 0x14001c133
   14001c100:	and    ah,BYTE PTR [rax]
   14001c102:	ins    DWORD PTR es:[rdi],dx
   14001c103:	(bad)  
   14001c104:	outs   dx,BYTE PTR ds:[rsi]
   14001c105:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14001c10c:	jb     0x14001c181
   14001c10e:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001c115:	xor    BYTE PTR [rdx],ah
   14001c117:	ds cmp al,0x74
   14001c11a:	jb     0x14001c191
   14001c11c:	jae    0x14001c192
   14001c11e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14001c120:	outs   dx,WORD PTR ds:[rsi]
   14001c122:	and    BYTE PTR [rax+0x6d],bh
   14001c125:	ins    BYTE PTR es:[rdi],dx
   14001c126:	outs   dx,BYTE PTR ds:[rsi]
   14001c127:	jae    0x14001c166
   14001c129:	and    dh,BYTE PTR [rbp+0x72]
   14001c12c:	outs   dx,BYTE PTR ds:[rsi]
   14001c12d:	cmp    dh,BYTE PTR [rbx+0x63]
   14001c130:	push   0x73616d65
   14001c135:	sub    eax,0x7263696d
   14001c13a:	outs   dx,DWORD PTR ds:[rsi]
   14001c13b:	jae    0x14001c1ac
   14001c13d:	data16 je 0x14001c16d
   14001c140:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001c143:	cmp    ah,BYTE PTR [rcx+0x73]
   14001c146:	ins    DWORD PTR es:[rdi],dx
   14001c147:	cs jbe 0x14001c17d
   14001c14a:	and    bh,BYTE PTR [rsi]
   14001c14c:	cmp    al,0x73
   14001c14e:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14001c152:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   14001c15a:	jne    0x14001c1c1
   14001c15c:	jae    0x14001c1d2
   14001c15e:	gs fs push rax
   14001c161:	jb     0x14001c1cc
   14001c163:	jbe    0x14001c1ce
   14001c165:	ins    BYTE PTR es:[rdi],dx
   14001c166:	gs addr32 gs jae 0x14001c1a9
   14001c16b:	cmp    al,0x72
   14001c16d:	gs jno 0x14001c1e5
   14001c170:	gs jae 0x14001c1e7
   14001c173:	gs fs rex.RB js 0x14001c1dd
   14001c178:	movsxd esi,DWORD PTR [rbp+0x74]
   14001c17b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001c182:	ins    BYTE PTR es:[rdi],dx
   14001c183:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14001c187:	gs ins BYTE PTR es:[rdi],dx
   14001c189:	cmp    eax,0x71657222
   14001c18e:	jne    0x14001c1f9
   14001c190:	jb     0x14001c1f7
   14001c192:	rex.B
   14001c193:	fs ins DWORD PTR es:[rdi],dx
   14001c195:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   14001c19c:	je     0x14001c20d
   14001c19e:	jb     0x14001c1c2
   14001c1a0:	ds cmp al,0x2f
   14001c1a3:	jb     0x14001c20a
   14001c1a5:	jno    0x14001c21c
   14001c1a7:	gs jae 0x14001c21e
   14001c1aa:	gs fs rex.RB js 0x14001c214
   14001c1af:	movsxd esi,DWORD PTR [rbp+0x74]
   14001c1b2:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001c1b9:	ins    BYTE PTR es:[rdi],dx
   14001c1ba:	ds cmp al,0x2f
   14001c1bd:	jb     0x14001c224
   14001c1bf:	jno    0x14001c236
   14001c1c1:	gs jae 0x14001c238
   14001c1c4:	gs fs push rax
   14001c1c7:	jb     0x14001c232
   14001c1c9:	jbe    0x14001c234
   14001c1cb:	ins    BYTE PTR es:[rdi],dx
   14001c1cc:	gs addr32 gs jae 0x14001c20f
   14001c1d1:	cmp    al,0x2f
   14001c1d3:	jae    0x14001c23a
   14001c1d5:	movsxd esi,DWORD PTR [rbp+0x72]
   14001c1d8:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   14001c1e0:	jne    0x14001c255
   14001c1e2:	je     0x14001c22d
   14001c1e4:	outs   dx,BYTE PTR ds:[rsi]
   14001c1e5:	outs   dx,WORD PTR ds:[rsi]
   14001c1e7:	ds cmp al,0x61
   14001c1ea:	jae    0x14001c259
   14001c1ec:	jbe    0x14001c221
   14001c1ee:	cmp    ah,BYTE PTR [rcx+0x70]
   14001c1f1:	jo     0x14001c25f
   14001c1f3:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001c1fa:	ds cmp al,0x61
   14001c1fd:	jae    0x14001c26c
   14001c1ff:	jbe    0x14001c234
   14001c201:	cmp    dh,BYTE PTR [rdi+0x69]
   14001c204:	outs   dx,BYTE PTR ds:[rsi]
   14001c205:	outs   dx,DWORD PTR fs:[rsi]
   14001c207:	ja     0x14001c27c
   14001c209:	push   rbx
   14001c20a:	gs je  0x14001c281
   14001c20d:	imul   ebp,DWORD PTR [rsi+0x67],0x6d782073
   14001c214:	ins    BYTE PTR es:[rdi],dx
   14001c215:	outs   dx,BYTE PTR ds:[rsi]
   14001c216:	jae    0x14001c255
   14001c218:	and    ch,BYTE PTR [rax+0x74]
   14001c21b:	je     0x14001c28d
   14001c21d:	cmp    ch,BYTE PTR [rdi]
   14001c21f:	(bad)  
   14001c220:	jae    0x14001c285
   14001c222:	push   0x73616d65
   14001c227:	cs ins DWORD PTR es:[rdi],dx
   14001c229:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   14001c230:	je     0x14001c260
   14001c232:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14001c235:	(bad)  
   14001c236:	push   rbx
   14001c237:	rex.WRB
   14001c238:	rex.WB (bad) 
   14001c23a:	xor    dh,BYTE PTR [rax]
   14001c23c:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae6b1971
   14001c242:	outs   dx,DWORD PTR fs:[rsi]
   14001c244:	ja     0x14001c2b9
   14001c246:	push   rbx
   14001c247:	gs je  0x14001c2be
   14001c24a:	imul   ebp,DWORD PTR [rsi+0x67],0x3c3e2273
   14001c251:	fs jo  0x14001c2bd
   14001c254:	rex.B ja 0x14001c2b8
   14001c257:	jb     0x14001c2be
   14001c259:	ds je  0x14001c2ce
   14001c25c:	jne    0x14001c2c3
   14001c25e:	cmp    al,0x2f
   14001c260:	fs jo  0x14001c2cc
   14001c263:	rex.B ja 0x14001c2c7
   14001c266:	jb     0x14001c2cd
   14001c268:	ds cmp al,0x2f
   14001c26b:	(bad)  
   14001c26c:	jae    0x14001c2db
   14001c26e:	jbe    0x14001c2a3
   14001c270:	cmp    dh,BYTE PTR [rdi+0x69]
   14001c273:	outs   dx,BYTE PTR ds:[rsi]
   14001c274:	outs   dx,DWORD PTR fs:[rsi]
   14001c276:	ja     0x14001c2eb
   14001c278:	push   rbx
   14001c279:	gs je  0x14001c2f0
   14001c27c:	imul   ebp,DWORD PTR [rsi+0x67],0x2f3c3e73
   14001c283:	(bad)  
   14001c284:	jae    0x14001c2f3
   14001c286:	jbe    0x14001c2bb
   14001c288:	cmp    ah,BYTE PTR [rcx+0x70]
   14001c28b:	jo     0x14001c2f9
   14001c28d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14001c294:	ds cmp al,0x2f
   14001c297:	(bad)  
   14001c298:	jae    0x14001c30d
   14001c29a:	gs ins DWORD PTR es:[rdi],dx
   14001c29c:	.byte 0x62
   14001c29d:	ins    BYTE PTR es:[rdi],dx
   14001c29e:	jns    0x14001c2de
