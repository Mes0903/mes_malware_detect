
3f3fe9ecad7f30fc80cdfb678d7ca27a30d0575a73818746e98be9170d3be348.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    QWORD PTR [rsp+0x8],rbx
   14000100d:	xor    ebx,ebx
   14000100f:	lea    rax,[rdx-0x1]
   140001013:	mov    r10d,0x7ffffffe
   140001019:	mov    r9d,ebx
   14000101c:	cmp    rax,r10
   14000101f:	mov    r11d,0x80070057
   140001025:	cmova  r9d,r11d
   140001029:	test   r9d,r9d
   14000102c:	js     0x14000106d
   14000102e:	mov    r9d,ebx
   140001031:	test   rdx,rdx
   140001034:	je     0x140001061
   140001036:	sub    r10,rdx
   140001039:	sub    r8,rcx
   14000103c:	lea    rax,[r10+rdx*1]
   140001040:	test   rax,rax
   140001043:	je     0x14000105c
   140001045:	movzx  eax,WORD PTR [r8+rcx*1]
   14000104a:	test   ax,ax
   14000104d:	je     0x14000105c
   14000104f:	mov    WORD PTR [rcx],ax
   140001052:	add    rcx,0x2
   140001056:	sub    rdx,0x1
   14000105a:	jne    0x14000103c
   14000105c:	test   rdx,rdx
   14000105f:	jne    0x140001072
   140001061:	sub    rcx,0x2
   140001065:	mov    r9d,0x8007007a
   14000106b:	jmp    0x140001072
   14000106d:	test   rdx,rdx
   140001070:	je     0x140001075
   140001072:	mov    WORD PTR [rcx],bx
   140001075:	mov    rbx,QWORD PTR [rsp+0x8]
   14000107a:	mov    eax,r9d
   14000107d:	ret    
   14000107e:	int3   
   14000107f:	int3   
   140001080:	int3   
   140001081:	int3   
   140001082:	int3   
   140001083:	int3   
   140001084:	mov    QWORD PTR [rsp+0x8],rbx
   140001089:	mov    QWORD PTR [rsp+0x10],rdi
   14000108e:	xor    edi,edi
   140001090:	lea    rax,[rdx-0x1]
   140001094:	cmp    rax,0x7ffffffe
   14000109a:	mov    r10,rdx
   14000109d:	mov    r9d,edi
   1400010a0:	mov    edx,0x80070057
   1400010a5:	cmova  r9d,edx
   1400010a9:	mov    rbx,r8
   1400010ac:	mov    r11,rcx
   1400010af:	test   r9d,r9d
   1400010b2:	js     0x1400010de
   1400010b4:	mov    rax,r10
   1400010b7:	mov    r9d,edi
   1400010ba:	test   r10,r10
   1400010bd:	je     0x1400010db
   1400010bf:	cmp    WORD PTR [rcx],di
   1400010c2:	je     0x1400010ce
   1400010c4:	add    rcx,0x2
   1400010c8:	sub    rax,0x1
   1400010cc:	jne    0x1400010bf
   1400010ce:	test   rax,rax
   1400010d1:	je     0x1400010db
   1400010d3:	mov    r8,r10
   1400010d6:	sub    r8,rax
   1400010d9:	jmp    0x1400010e1
   1400010db:	mov    r9d,edx
   1400010de:	mov    r8,rdi
   1400010e1:	test   r9d,r9d
   1400010e4:	js     0x140001138
   1400010e6:	mov    rdx,r10
   1400010e9:	lea    rcx,[r11+r8*2]
   1400010ed:	mov    r9d,edi
   1400010f0:	sub    rdx,r8
   1400010f3:	je     0x14000112b
   1400010f5:	mov    rax,rdx
   1400010f8:	sub    rax,r10
   1400010fb:	lea    r10,[r8+0x7ffffffe]
   140001102:	add    r10,rax
   140001105:	sub    rbx,rcx
   140001108:	test   r10,r10
   14000110b:	je     0x140001126
   14000110d:	movzx  eax,WORD PTR [rbx+rcx*1]
   140001111:	test   ax,ax
   140001114:	je     0x140001126
   140001116:	mov    WORD PTR [rcx],ax
   140001119:	dec    r10
   14000111c:	add    rcx,0x2
   140001120:	sub    rdx,0x1
   140001124:	jne    0x140001108
   140001126:	test   rdx,rdx
   140001129:	jne    0x140001135
   14000112b:	sub    rcx,0x2
   14000112f:	mov    r9d,0x8007007a
   140001135:	mov    WORD PTR [rcx],di
   140001138:	mov    rbx,QWORD PTR [rsp+0x8]
   14000113d:	mov    eax,r9d
   140001140:	mov    rdi,QWORD PTR [rsp+0x10]
   140001145:	ret    
   140001146:	int3   
   140001147:	int3   
   140001148:	int3   
   140001149:	int3   
   14000114a:	int3   
   14000114b:	int3   
   14000114c:	mov    QWORD PTR [rsp+0x18],r8
   140001151:	mov    QWORD PTR [rsp+0x20],r9
   140001156:	push   rbx
   140001157:	push   rbp
   140001158:	push   rsi
   140001159:	push   rdi
   14000115a:	sub    rsp,0x28
   14000115e:	xor    ebp,ebp
   140001160:	lea    rax,[rdx-0x1]
   140001164:	cmp    rax,0x7ffffffe
   14000116a:	mov    rsi,rcx
   14000116d:	mov    edi,ebp
   14000116f:	mov    ecx,0x80070057
   140001174:	cmova  edi,ecx
   140001177:	test   edi,edi
   140001179:	js     0x1400011b0
   14000117b:	lea    rbx,[rdx-0x1]
   14000117f:	mov    rcx,rsi
   140001182:	mov    rdx,rbx
   140001185:	lea    r9,[rsp+0x68]
   14000118a:	mov    edi,ebp
   14000118c:	call   QWORD PTR [rip+0x524e]        # 0x1400063e0
   140001192:	test   eax,eax
   140001194:	js     0x1400011a5
   140001196:	cdqe   
   140001198:	cmp    rax,rbx
   14000119b:	ja     0x1400011a5
   14000119d:	jne    0x1400011b8
   14000119f:	mov    WORD PTR [rsi+rbx*2],bp
   1400011a3:	jmp    0x1400011b8
   1400011a5:	mov    WORD PTR [rsi+rbx*2],bp
   1400011a9:	mov    edi,0x8007007a
   1400011ae:	jmp    0x1400011b8
   1400011b0:	test   rdx,rdx
   1400011b3:	je     0x1400011b8
   1400011b5:	mov    WORD PTR [rsi],bp
   1400011b8:	mov    eax,edi
   1400011ba:	add    rsp,0x28
   1400011be:	pop    rdi
   1400011bf:	pop    rsi
   1400011c0:	pop    rbp
   1400011c1:	pop    rbx
   1400011c2:	ret    
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	sub    rsp,0x38
   1400011d0:	and    QWORD PTR [rsp+0x20],0x0
   1400011d6:	lea    r8,[rip+0x55b3]        # 0x140006790
   1400011dd:	movzx  r9d,dx
   1400011e1:	mov    edx,0x2b
   1400011e6:	call   QWORD PTR [rip+0x4e14]        # 0x140006000
   1400011ec:	add    rsp,0x38
   1400011f0:	ret    
   1400011f1:	int3   
   1400011f2:	int3   
   1400011f3:	int3   
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	mov    r11,rsp
   1400011fb:	mov    DWORD PTR [r11+0x20],r9d
   1400011ff:	sub    rsp,0x48
   140001203:	and    QWORD PTR [r11-0x18],0x0
   140001208:	lea    rax,[r11+0x20]
   14000120c:	movzx  r9d,dx
   140001210:	mov    edx,0x2b
   140001215:	mov    QWORD PTR [r11-0x20],0x4
   14000121d:	mov    QWORD PTR [r11-0x28],rax
   140001221:	call   QWORD PTR [rip+0x4dd9]        # 0x140006000
   140001227:	add    rsp,0x48
   14000122b:	ret    
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	int3   
   140001231:	int3   
   140001232:	int3   
   140001233:	int3   
   140001234:	sub    rsp,0x68
   140001238:	mov    rax,QWORD PTR [rip+0x7579]        # 0x1400087b8
   14000123f:	xor    r8d,r8d
   140001242:	mov    QWORD PTR [rsp+0x50],rax
   140001247:	mov    r10,rcx
   14000124a:	mov    rax,QWORD PTR [rsp+0x90]
   140001252:	test   rax,rax
   140001255:	je     0x14000127b
   140001257:	cmp    WORD PTR [rax],r8w
   14000125b:	jne    0x140001263
   14000125d:	lea    ecx,[r8+0xe]
   140001261:	jmp    0x140001280
   140001263:	or     rcx,0xffffffffffffffff
   140001267:	inc    rcx
   14000126a:	cmp    WORD PTR [rax+rcx*2],r8w
   14000126f:	jne    0x140001267
   140001271:	lea    rcx,[rcx*2+0x2]
   140001279:	jmp    0x140001280
   14000127b:	mov    ecx,0xa
   140001280:	test   rax,rax
   140001283:	je     0x140001296
   140001285:	cmp    WORD PTR [rax],r8w
   140001289:	lea    rdx,[rip+0x5218]        # 0x1400064a8
   140001290:	cmove  rax,rdx
   140001294:	jmp    0x14000129d
   140001296:	lea    rax,[rip+0x521b]        # 0x1400064b8
   14000129d:	mov    QWORD PTR [rsp+0x40],r8
   1400012a2:	mov    edx,0x3d
   1400012a7:	mov    QWORD PTR [rsp+0x38],rcx
   1400012ac:	lea    r8,[rip+0x54dd]        # 0x140006790
   1400012b3:	mov    QWORD PTR [rsp+0x30],rax
   1400012b8:	mov    rcx,r10
   1400012bb:	lea    rax,[rsp+0x50]
   1400012c0:	movzx  r9d,dx
   1400012c4:	mov    QWORD PTR [rsp+0x28],0x8
   1400012cd:	mov    edx,0x2b
   1400012d2:	mov    QWORD PTR [rsp+0x20],rax
   1400012d7:	call   QWORD PTR [rip+0x4d23]        # 0x140006000
   1400012dd:	add    rsp,0x68
   1400012e1:	ret    
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	int3   
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	sub    rsp,0x48
   1400012ec:	xor    r10d,r10d
   1400012ef:	test   r9,r9
   1400012f2:	je     0x140001318
   1400012f4:	cmp    WORD PTR [r9],r10w
   1400012f8:	jne    0x140001300
   1400012fa:	lea    eax,[r10+0xe]
   1400012fe:	jmp    0x14000131d
   140001300:	or     rax,0xffffffffffffffff
   140001304:	inc    rax
   140001307:	cmp    WORD PTR [r9+rax*2],r10w
   14000130c:	jne    0x140001304
   14000130e:	lea    rax,[rax*2+0x2]
   140001316:	jmp    0x14000131d
   140001318:	mov    eax,0xa
   14000131d:	test   r9,r9
   140001320:	je     0x140001333
   140001322:	cmp    WORD PTR [r9],r10w
   140001326:	lea    r8,[rip+0x517b]        # 0x1400064a8
   14000132d:	cmove  r9,r8
   140001331:	jmp    0x14000133a
   140001333:	lea    r9,[rip+0x517e]        # 0x1400064b8
   14000133a:	mov    QWORD PTR [rsp+0x30],r10
   14000133f:	lea    r8,[rip+0x544a]        # 0x140006790
   140001346:	mov    QWORD PTR [rsp+0x28],rax
   14000134b:	mov    QWORD PTR [rsp+0x20],r9
   140001350:	movzx  r9d,dx
   140001354:	mov    edx,0x2b
   140001359:	call   QWORD PTR [rip+0x4ca1]        # 0x140006000
   14000135f:	add    rsp,0x48
   140001363:	ret    
   140001364:	int3   
   140001365:	int3   
   140001366:	int3   
   140001367:	int3   
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	rex push rdi
   14000136e:	sub    rsp,0x50
   140001372:	mov    rax,QWORD PTR [rsp+0x80]
   14000137a:	or     rdx,0xffffffffffffffff
   14000137e:	xor    r11d,r11d
   140001381:	mov    r10,rcx
   140001384:	mov    r8d,0xe
   14000138a:	test   rax,rax
   14000138d:	je     0x1400013b1
   14000138f:	cmp    WORD PTR [rax],r11w
   140001393:	jne    0x14000139a
   140001395:	mov    ecx,r8d
   140001398:	jmp    0x1400013b6
   14000139a:	mov    rcx,rdx
   14000139d:	inc    rcx
   1400013a0:	cmp    WORD PTR [rax+rcx*2],r11w
   1400013a5:	jne    0x14000139d
   1400013a7:	lea    rcx,[rcx*2+0x2]
   1400013af:	jmp    0x1400013b6
   1400013b1:	mov    ecx,0xa
   1400013b6:	lea    rdi,[rip+0x50eb]        # 0x1400064a8
   1400013bd:	test   rax,rax
   1400013c0:	je     0x1400013cc
   1400013c2:	cmp    WORD PTR [rax],r11w
   1400013c6:	cmove  rax,rdi
   1400013ca:	jmp    0x1400013d3
   1400013cc:	lea    rax,[rip+0x50e5]        # 0x1400064b8
   1400013d3:	test   r9,r9
   1400013d6:	je     0x1400013f2
   1400013d8:	cmp    WORD PTR [r9],r11w
   1400013dc:	je     0x1400013f8
   1400013de:	inc    rdx
   1400013e1:	cmp    WORD PTR [r9+rdx*2],r11w
   1400013e6:	jne    0x1400013de
   1400013e8:	lea    r8,[rdx*2+0x2]
   1400013f0:	jmp    0x1400013f8
   1400013f2:	mov    r8d,0xa
   1400013f8:	test   r9,r9
   1400013fb:	je     0x140001407
   1400013fd:	cmp    WORD PTR [r9],r11w
   140001401:	cmove  r9,rdi
   140001405:	jmp    0x14000140e
   140001407:	lea    r9,[rip+0x50aa]        # 0x1400064b8
   14000140e:	mov    QWORD PTR [rsp+0x40],r11
   140001413:	mov    edx,0x46
   140001418:	mov    QWORD PTR [rsp+0x38],rcx
   14000141d:	mov    rcx,r10
   140001420:	mov    QWORD PTR [rsp+0x30],rax
   140001425:	mov    QWORD PTR [rsp+0x28],r8
   14000142a:	lea    r8,[rip+0x535f]        # 0x140006790
   140001431:	mov    QWORD PTR [rsp+0x20],r9
   140001436:	movzx  r9d,dx
   14000143a:	mov    edx,0x2b
   14000143f:	call   QWORD PTR [rip+0x4bbb]        # 0x140006000
   140001445:	add    rsp,0x50
   140001449:	pop    rdi
   14000144a:	ret    
   14000144b:	int3   
   14000144c:	int3   
   14000144d:	int3   
   14000144e:	int3   
   14000144f:	int3   
   140001450:	int3   
   140001451:	int3   
   140001452:	int3   
   140001453:	int3   
   140001454:	sub    rsp,0x58
   140001458:	xor    r10d,r10d
   14000145b:	test   r9,r9
   14000145e:	je     0x140001484
   140001460:	cmp    WORD PTR [r9],r10w
   140001464:	jne    0x14000146c
   140001466:	lea    eax,[r10+0xe]
   14000146a:	jmp    0x140001489
   14000146c:	or     rax,0xffffffffffffffff
   140001470:	inc    rax
   140001473:	cmp    WORD PTR [r9+rax*2],r10w
   140001478:	jne    0x140001470
   14000147a:	lea    rax,[rax*2+0x2]
   140001482:	jmp    0x140001489
   140001484:	mov    eax,0xa
   140001489:	test   r9,r9
   14000148c:	je     0x14000149f
   14000148e:	cmp    WORD PTR [r9],r10w
   140001492:	lea    rdx,[rip+0x500f]        # 0x1400064a8
   140001499:	cmove  r9,rdx
   14000149d:	jmp    0x1400014a6
   14000149f:	lea    r9,[rip+0x5012]        # 0x1400064b8
   1400014a6:	mov    QWORD PTR [rsp+0x40],r10
   1400014ab:	lea    rdx,[rsp+0x80]
   1400014b3:	mov    QWORD PTR [rsp+0x38],0x4
   1400014bc:	mov    r8d,0x38
   1400014c2:	mov    QWORD PTR [rsp+0x30],rdx
   1400014c7:	mov    edx,0x2b
   1400014cc:	mov    QWORD PTR [rsp+0x28],rax
   1400014d1:	mov    QWORD PTR [rsp+0x20],r9
   1400014d6:	movzx  r9d,r8w
   1400014da:	lea    r8,[rip+0x52af]        # 0x140006790
   1400014e1:	call   QWORD PTR [rip+0x4b19]        # 0x140006000
   1400014e7:	add    rsp,0x58
   1400014eb:	ret    
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	int3   
   1400014f1:	int3   
   1400014f2:	int3   
   1400014f3:	int3   
   1400014f4:	int3   
   1400014f5:	int3   
   1400014f6:	int3   
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	mov    QWORD PTR [rsp+0x8],rbx
   140001505:	mov    QWORD PTR [rsp+0x10],rsi
   14000150a:	push   rdi
   14000150b:	sub    rsp,0x20
   14000150f:	and    DWORD PTR [r8],0x0
   140001513:	mov    rbx,rdx
   140001516:	sub    ecx,0x4
   140001519:	je     0x140001530
   14000151b:	cmp    ecx,0x1
   14000151e:	je     0x140001527
   140001520:	mov    eax,0x57
   140001525:	jmp    0x14000156f
   140001527:	xor    edi,edi
   140001529:	xor    eax,eax
   14000152b:	xor    sil,sil
   14000152e:	jmp    0x140001551
   140001530:	mov    rcx,r9
   140001533:	call   QWORD PTR [rip+0x4adf]        # 0x140006018
   140001539:	mov    rcx,rax
   14000153c:	mov    rdi,rax
   14000153f:	call   QWORD PTR [rip+0x4b03]        # 0x140006048
   140001545:	mov    rcx,rdi
   140001548:	mov    sil,al
   14000154b:	call   QWORD PTR [rip+0x4ab7]        # 0x140006008
   140001551:	test   BYTE PTR [rbx+0x1a],0x2
   140001555:	je     0x140001562
   140001557:	mov    rcx,QWORD PTR [rbx+0x10]
   14000155b:	test   rcx,rcx
   14000155e:	cmovne rbx,rcx
   140001562:	mov    QWORD PTR [rbx+0x10],rdi
   140001566:	mov    BYTE PTR [rbx+0x19],sil
   14000156a:	mov    DWORD PTR [rbx+0x1c],eax
   14000156d:	xor    eax,eax
   14000156f:	mov    rbx,QWORD PTR [rsp+0x30]
   140001574:	mov    rsi,QWORD PTR [rsp+0x38]
   140001579:	add    rsp,0x20
   14000157d:	pop    rdi
   14000157e:	ret    
   14000157f:	int3   
   140001580:	int3   
   140001581:	int3   
   140001582:	int3   
   140001583:	int3   
   140001584:	int3   
   140001585:	int3   
   140001586:	int3   
   140001587:	int3   
   140001588:	rex push rbx
   14000158a:	sub    rsp,0x100
   140001591:	mov    rax,QWORD PTR [rip+0x6a70]        # 0x140008008
   140001598:	xor    rax,rsp
   14000159b:	mov    QWORD PTR [rsp+0xf0],rax
   1400015a3:	cmp    DWORD PTR [rip+0x721e],0x0        # 0x1400087c8
   1400015aa:	mov    rbx,rcx
   1400015ad:	jne    0x1400015f7
   1400015af:	mov    rcx,QWORD PTR [rip+0x7102]        # 0x1400086b8
   1400015b6:	lea    r8,[rsp+0x20]
   1400015bb:	mov    r9d,0x64
   1400015c1:	mov    DWORD PTR [rip+0x71fd],0x1        # 0x1400087c8
   1400015cb:	lea    edx,[r9-0x59]
   1400015cf:	call   QWORD PTR [rip+0x4beb]        # 0x1400061c0
   1400015d5:	mov    rdx,QWORD PTR [rip+0x71f4]        # 0x1400087d0
   1400015dc:	lea    r8,[rsp+0x20]
   1400015e1:	mov    r9d,0x1010
   1400015e7:	mov    rcx,rbx
   1400015ea:	call   QWORD PTR [rip+0x4bb8]        # 0x1400061a8
   1400015f0:	and    DWORD PTR [rip+0x71d1],0x0        # 0x1400087c8
   1400015f7:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400015ff:	xor    rcx,rsp
   140001602:	call   0x140004ca0
   140001607:	add    rsp,0x100
   14000160e:	pop    rbx
   14000160f:	ret    
   140001610:	int3   
   140001611:	int3   
   140001612:	int3   
   140001613:	int3   
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	mov    QWORD PTR [rsp+0x10],rbx
   14000161d:	mov    QWORD PTR [rsp+0x18],rsi
   140001622:	push   rdi
   140001623:	push   r12
   140001625:	push   r13
   140001627:	push   r14
   140001629:	push   r15
   14000162b:	sub    rsp,0xf0
   140001632:	mov    r15,rcx
   140001635:	xor    edi,edi
   140001637:	mov    r12d,edi
   14000163a:	xor    r9d,r9d
   14000163d:	xor    r8d,r8d
   140001640:	lea    r13d,[rdi+0x1]
   140001644:	mov    edx,r13d
   140001647:	xor    ecx,ecx
   140001649:	call   QWORD PTR [rip+0x4ac9]        # 0x140006118
   14000164f:	mov    QWORD PTR [rip+0x709a],rdi        # 0x1400086f0
   140001656:	lea    rax,[rip+0x70ab]        # 0x140008708
   14000165d:	mov    QWORD PTR [rip+0x707c],rax        # 0x1400086e0
   140001664:	mov    QWORD PTR [rip+0x708d],r13        # 0x1400086f8
   14000166b:	mov    QWORD PTR [rip+0x70a6],rdi        # 0x140008718
   140001672:	lea    rax,[rip+0x70b7]        # 0x140008730
   140001679:	mov    QWORD PTR [rip+0x7088],rax        # 0x140008708
   140001680:	mov    QWORD PTR [rip+0x7099],r13        # 0x140008720
   140001687:	mov    QWORD PTR [rip+0x70b2],rdi        # 0x140008740
   14000168e:	lea    rax,[rip+0x70c3]        # 0x140008758
   140001695:	mov    QWORD PTR [rip+0x7094],rax        # 0x140008730
   14000169c:	mov    QWORD PTR [rip+0x70a5],r13        # 0x140008748
   1400016a3:	mov    QWORD PTR [rip+0x70be],rdi        # 0x140008768
   1400016aa:	mov    QWORD PTR [rip+0x70a7],rdi        # 0x140008758
   1400016b1:	mov    QWORD PTR [rip+0x70b8],r13        # 0x140008770
   1400016b8:	lea    rax,[rip+0x50b1]        # 0x140006770
   1400016bf:	mov    QWORD PTR [rip+0x70ca],rax        # 0x140008790
   1400016c6:	lea    rax,[rip+0x50b3]        # 0x140006780
   1400016cd:	mov    QWORD PTR [rip+0x70c4],rax        # 0x140008798
   1400016d4:	lea    rax,[rip+0x50c5]        # 0x1400067a0
   1400016db:	mov    QWORD PTR [rip+0x70be],rax        # 0x1400087a0
   1400016e2:	lea    rax,[rip+0x50c7]        # 0x1400067b0
   1400016e9:	mov    QWORD PTR [rip+0x70b8],rax        # 0x1400087a8
   1400016f0:	lea    rbx,[rip+0x6fe9]        # 0x1400086e0
   1400016f7:	mov    QWORD PTR [rip+0x6972],rbx        # 0x140008070
   1400016fe:	lea    rsi,[rip+0x708b]        # 0x140008790
   140001705:	mov    r8,QWORD PTR [rsi]
   140001708:	lea    rsi,[rsi+0x8]
   14000170c:	mov    QWORD PTR [rsp+0x60],r8
   140001711:	mov    QWORD PTR [rsp+0x68],rdi
   140001716:	mov    QWORD PTR [rbx+0x20],r8
   14000171a:	lea    rax,[rbx+0x8]
   14000171e:	mov    QWORD PTR [rsp+0x38],rax
   140001723:	mov    QWORD PTR [rsp+0x30],rdi
   140001728:	mov    QWORD PTR [rsp+0x28],rdi
   14000172d:	lea    rax,[rsp+0x60]
   140001732:	mov    QWORD PTR [rsp+0x20],rax
   140001737:	mov    r9d,r13d
   14000173a:	mov    rdx,rbx
   14000173d:	lea    rcx,[rip+0xfffffffffffffdbc]        # 0x140001500
   140001744:	call   QWORD PTR [rip+0x490e]        # 0x140006058
   14000174a:	mov    rbx,QWORD PTR [rbx]
   14000174d:	test   rbx,rbx
   140001750:	jne    0x140001705
   140001752:	lea    rsi,[rip+0x6917]        # 0x140008070
   140001759:	mov    rcx,QWORD PTR [rip+0x6910]        # 0x140008070
   140001760:	cmp    rcx,rsi
   140001763:	je     0x140001777
   140001765:	test   BYTE PTR [rcx+0x1c],0x8
   140001769:	je     0x140001777
   14000176b:	lea    edx,[rbx+0xa]
   14000176e:	mov    rcx,QWORD PTR [rcx+0x10]
   140001772:	call   0x1400011cc
   140001777:	mov    QWORD PTR [rip+0x6f3a],r15        # 0x1400086b8
   14000177e:	lea    r8,[rip+0x68b3]        # 0x140008038
   140001785:	xor    edx,edx
   140001787:	mov    ecx,0x100000
   14000178c:	call   QWORD PTR [rip+0x4996]        # 0x140006128
   140001792:	mov    r14,rax
   140001795:	test   rax,rax
   140001798:	je     0x1400017ce
   14000179a:	mov    rbx,QWORD PTR [rip+0x68cf]        # 0x140008070
   1400017a1:	cmp    rbx,rsi
   1400017a4:	je     0x140001aa5
   1400017aa:	test   BYTE PTR [rbx+0x1c],0x4
   1400017ae:	je     0x140001a85
   1400017b4:	mov    edx,0xb
   1400017b9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400017bd:	call   0x1400011cc
   1400017c2:	mov    rbx,QWORD PTR [rip+0x68a7]        # 0x140008070
   1400017c9:	jmp    0x140001a85
   1400017ce:	lea    r9,[rip+0x6863]        # 0x140008038
   1400017d5:	mov    r8d,r13d
   1400017d8:	mov    edx,r13d
   1400017db:	xor    ecx,ecx
   1400017dd:	call   QWORD PTR [rip+0x491d]        # 0x140006100
   1400017e3:	mov    r14,rax
   1400017e6:	mov    QWORD PTR [rsp+0x60],rax
   1400017eb:	xor    r9d,r9d
   1400017ee:	mov    r8d,r13d
   1400017f1:	xor    edx,edx
   1400017f3:	xor    ecx,ecx
   1400017f5:	call   QWORD PTR [rip+0x4905]        # 0x140006100
   1400017fb:	mov    QWORD PTR [rip+0x6ece],rax        # 0x1400086d0
   140001802:	test   rax,rax
   140001805:	jne    0x14000184b
   140001807:	mov    rbx,QWORD PTR [rip+0x6862]        # 0x140008070
   14000180e:	cmp    rbx,rsi
   140001811:	je     0x140001aa5
   140001817:	test   BYTE PTR [rbx+0x1c],0x2
   14000181b:	je     0x140001a85
   140001821:	call   QWORD PTR [rip+0x48b1]        # 0x1400060d8
   140001827:	mov    edx,0xc
   14000182c:	mov    r9d,eax
   14000182f:	lea    r8,[rip+0x4f5a]        # 0x140006790
   140001836:	mov    rcx,QWORD PTR [rip+0x6833]        # 0x140008070
   14000183d:	mov    rcx,QWORD PTR [rcx+0x10]
   140001841:	call   0x1400011f8
   140001846:	jmp    0x1400017c2
   14000184b:	call   0x140002c04
   140001850:	test   eax,eax
   140001852:	jne    0x140001876
   140001854:	mov    rbx,QWORD PTR [rip+0x6815]        # 0x140008070
   14000185b:	cmp    rbx,rsi
   14000185e:	je     0x140001aa5
   140001864:	test   BYTE PTR [rbx+0x1c],0x4
   140001868:	je     0x140001a85
   14000186e:	lea    edx,[rax+0xd]
   140001871:	jmp    0x1400017b9
   140001876:	call   0x1400027fc
   14000187b:	xor    edx,edx
   14000187d:	mov    ecx,0x3ff
   140001882:	call   QWORD PTR [rip+0x48a8]        # 0x140006130
   140001888:	nop
   140001889:	mov    edx,0x80000000
   14000188e:	lea    rcx,[rip+0x6deb]        # 0x140008680
   140001895:	call   QWORD PTR [rip+0x480d]        # 0x1400060a8
   14000189b:	test   eax,eax
   14000189d:	jne    0x1400018e2
   14000189f:	mov    rbx,QWORD PTR [rip+0x67ca]        # 0x140008070
   1400018a6:	cmp    rbx,rsi
   1400018a9:	je     0x1400018dd
   1400018ab:	test   BYTE PTR [rbx+0x1c],0x2
   1400018af:	je     0x1400018dd
   1400018b1:	call   QWORD PTR [rip+0x4821]        # 0x1400060d8
   1400018b7:	mov    r9d,eax
   1400018ba:	mov    edx,0xe
   1400018bf:	lea    r8,[rip+0x4eca]        # 0x140006790
   1400018c6:	mov    rcx,QWORD PTR [rip+0x67a3]        # 0x140008070
   1400018cd:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018d1:	call   0x1400011f8
   1400018d6:	mov    rbx,QWORD PTR [rip+0x6793]        # 0x140008070
   1400018dd:	jmp    0x140001a85
   1400018e2:	call   QWORD PTR [rip+0x4780]        # 0x140006068
   1400018e8:	xor    ecx,ecx
   1400018ea:	call   QWORD PTR [rip+0x4b10]        # 0x140006400
   1400018f0:	mov    r9d,0x28
   1400018f6:	lea    r8,[rip+0x6d33]        # 0x140008630
   1400018fd:	lea    edx,[r9-0x22]
   140001901:	mov    rcx,QWORD PTR [rip+0x6db0]        # 0x1400086b8
   140001908:	call   QWORD PTR [rip+0x48b2]        # 0x1400061c0
   14000190e:	mov    DWORD PTR [rsp+0x70],0x3
   140001916:	lea    rax,[rip+0x253]        # 0x140001b70
   14000191d:	mov    QWORD PTR [rsp+0x78],rax
   140001922:	mov    QWORD PTR [rsp+0x80],rdi
   14000192a:	mov    QWORD PTR [rsp+0x88],r15
   140001932:	xorps  xmm0,xmm0
   140001935:	movdqa XMMWORD PTR [rsp+0x90],xmm0
   14000193e:	movdqa xmm1,XMMWORD PTR [rip+0x4e9a]        # 0x1400067e0
   140001946:	movdqa XMMWORD PTR [rsp+0xa0],xmm1
   14000194f:	lea    rbx,[rip+0x66ca]        # 0x140008020
   140001956:	mov    QWORD PTR [rsp+0xb0],rbx
   14000195e:	lea    rcx,[rsp+0x70]
   140001963:	call   QWORD PTR [rip+0x4837]        # 0x1400061a0
   140001969:	test   ax,ax
   14000196c:	jne    0x140001998
   14000196e:	mov    rbx,QWORD PTR [rip+0x66fb]        # 0x140008070
   140001975:	cmp    rbx,rsi
   140001978:	je     0x140001aa5
   14000197e:	test   BYTE PTR [rbx+0x1c],0x2
   140001982:	je     0x140001a85
   140001988:	call   QWORD PTR [rip+0x474a]        # 0x1400060d8
   14000198e:	mov    edx,0x10
   140001993:	jmp    0x14000182c
   140001998:	mov    QWORD PTR [rsp+0x58],rdi
   14000199d:	mov    QWORD PTR [rsp+0x50],r15
   1400019a2:	mov    QWORD PTR [rsp+0x48],rdi
   1400019a7:	mov    QWORD PTR [rsp+0x40],rdi
   1400019ac:	mov    DWORD PTR [rsp+0x38],edi
   1400019b0:	mov    DWORD PTR [rsp+0x30],edi
   1400019b4:	mov    DWORD PTR [rsp+0x28],edi
   1400019b8:	mov    DWORD PTR [rsp+0x20],edi
   1400019bc:	xor    r9d,r9d
   1400019bf:	xor    r8d,r8d
   1400019c2:	mov    rdx,rbx
   1400019c5:	xor    ecx,ecx
   1400019c7:	call   QWORD PTR [rip+0x47e3]        # 0x1400061b0
   1400019cd:	mov    QWORD PTR [rip+0x6cd4],rax        # 0x1400086a8
   1400019d4:	test   rax,rax
   1400019d7:	jne    0x140001a1f
   1400019d9:	mov    rbx,QWORD PTR [rip+0x6690]        # 0x140008070
   1400019e0:	cmp    rbx,rsi
   1400019e3:	je     0x140001aa5
   1400019e9:	test   BYTE PTR [rbx+0x1c],0x2
   1400019ed:	je     0x140001a85
   1400019f3:	call   QWORD PTR [rip+0x46df]        # 0x1400060d8
   1400019f9:	mov    edx,0x11
   1400019fe:	jmp    0x14000182c
   140001a03:	lea    rcx,[rsp+0xc0]
   140001a0b:	call   QWORD PTR [rip+0x4887]        # 0x140006298
   140001a11:	lea    rcx,[rsp+0xc0]
   140001a19:	call   QWORD PTR [rip+0x4861]        # 0x140006280
   140001a1f:	xor    r9d,r9d
   140001a22:	xor    r8d,r8d
   140001a25:	xor    edx,edx
   140001a27:	lea    rcx,[rsp+0xc0]
   140001a2f:	call   QWORD PTR [rip+0x482b]        # 0x140006260
   140001a35:	test   eax,eax
   140001a37:	jne    0x140001a03
   140001a39:	mov    r12,QWORD PTR [rsp+0xd0]
   140001a41:	jmp    0x1400017c2
   140001a46:	lea    rax,[rip+0x6623]        # 0x140008070
   140001a4d:	mov    rbx,QWORD PTR [rip+0x661c]        # 0x140008070
   140001a54:	cmp    rbx,rax
   140001a57:	je     0x140001a74
   140001a59:	test   BYTE PTR [rbx+0x1c],0x2
   140001a5d:	je     0x140001a74
   140001a5f:	mov    edx,0xf
   140001a64:	mov    rcx,QWORD PTR [rbx+0x10]
   140001a68:	call   0x1400011cc
   140001a6d:	mov    rbx,QWORD PTR [rip+0x65fc]        # 0x140008070
   140001a74:	xor    edi,edi
   140001a76:	lea    rsi,[rip+0x65f3]        # 0x140008070
   140001a7d:	mov    r14,QWORD PTR [rsp+0x60]
   140001a82:	mov    r12d,edi
   140001a85:	cmp    rbx,rsi
   140001a88:	je     0x140001aa5
   140001a8a:	test   BYTE PTR [rbx+0x1c],0x8
   140001a8e:	je     0x140001aa5
   140001a90:	mov    edx,0x12
   140001a95:	mov    rcx,QWORD PTR [rbx+0x10]
   140001a99:	call   0x1400011cc
   140001a9e:	mov    rbx,QWORD PTR [rip+0x65cb]        # 0x140008070
   140001aa5:	test   r14,r14
   140001aa8:	je     0x140001aba
   140001aaa:	mov    rcx,r14
   140001aad:	call   QWORD PTR [rip+0x4685]        # 0x140006138
   140001ab3:	mov    rbx,QWORD PTR [rip+0x65b6]        # 0x140008070
   140001aba:	mov    rax,QWORD PTR [rip+0x6c0f]        # 0x1400086d0
   140001ac1:	test   rax,rax
   140001ac4:	je     0x140001ad6
   140001ac6:	mov    rcx,rax
   140001ac9:	call   QWORD PTR [rip+0x4669]        # 0x140006138
   140001acf:	mov    rbx,QWORD PTR [rip+0x659a]        # 0x140008070
   140001ad6:	mov    rcx,QWORD PTR [rip+0x6cf3]        # 0x1400087d0
   140001add:	test   rcx,rcx
   140001ae0:	je     0x140001af6
   140001ae2:	call   QWORD PTR [rip+0x4658]        # 0x140006140
   140001ae8:	mov    QWORD PTR [rip+0x6ce1],rdi        # 0x1400087d0
   140001aef:	mov    rbx,QWORD PTR [rip+0x657a]        # 0x140008070
   140001af6:	mov    rcx,QWORD PTR [rip+0x6cc3]        # 0x1400087c0
   140001afd:	test   rcx,rcx
   140001b00:	je     0x140001b16
   140001b02:	call   QWORD PTR [rip+0x4638]        # 0x140006140
   140001b08:	mov    QWORD PTR [rip+0x6cb1],rdi        # 0x1400087c0
   140001b0f:	mov    rbx,QWORD PTR [rip+0x655a]        # 0x140008070
   140001b16:	cmp    rbx,rsi
   140001b19:	je     0x140001b3f
   140001b1b:	jmp    0x140001b33
   140001b1d:	mov    rcx,QWORD PTR [rbx+0x8]
   140001b21:	test   rcx,rcx
   140001b24:	je     0x140001b30
   140001b26:	call   QWORD PTR [rip+0x4504]        # 0x140006030
   140001b2c:	mov    QWORD PTR [rbx+0x8],rdi
   140001b30:	mov    rbx,QWORD PTR [rbx]
   140001b33:	test   rbx,rbx
   140001b36:	jne    0x140001b1d
   140001b38:	mov    QWORD PTR [rip+0x6531],rsi        # 0x140008070
   140001b3f:	mov    eax,r12d
   140001b42:	lea    r11,[rsp+0xf0]
   140001b4a:	mov    rbx,QWORD PTR [r11+0x38]
   140001b4e:	mov    rsi,QWORD PTR [r11+0x40]
   140001b52:	mov    rsp,r11
   140001b55:	pop    r15
   140001b57:	pop    r14
   140001b59:	pop    r13
   140001b5b:	pop    r12
   140001b5d:	pop    rdi
   140001b5e:	ret    
   140001b5f:	int3   
   140001b60:	int3   
   140001b61:	int3   
   140001b62:	int3   
   140001b63:	int3   
   140001b64:	int3   
   140001b65:	int3   
   140001b66:	int3   
   140001b67:	int3   
   140001b68:	int3   
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	rex push rbx
   140001b72:	push   rsi
   140001b73:	push   rdi
   140001b74:	sub    rsp,0x420
   140001b7b:	mov    rax,QWORD PTR [rip+0x6486]        # 0x140008008
   140001b82:	xor    rax,rsp
   140001b85:	mov    QWORD PTR [rsp+0x410],rax
   140001b8d:	mov    eax,edx
   140001b8f:	mov    rbx,rcx
   140001b92:	sub    eax,0x1
   140001b95:	je     0x140001da7
   140001b9b:	sub    eax,0x1
   140001b9e:	je     0x140001d3e
   140001ba4:	sub    eax,0xe
   140001ba7:	je     0x140001ef2
   140001bad:	sub    eax,0x1
   140001bb0:	je     0x140001c85
   140001bb6:	sub    eax,0x102
   140001bbb:	je     0x140001c71
   140001bc1:	sub    eax,0x2ed
   140001bc6:	je     0x140001c4e
   140001bcc:	sub    eax,0x64
   140001bcf:	je     0x140001bff
   140001bd1:	sub    eax,0x2
   140001bd4:	je     0x140001bf0
   140001bd6:	cmp    eax,0x1
   140001bd9:	je     0x140001be6
   140001bdb:	call   QWORD PTR [rip+0x4697]        # 0x140006278
   140001be1:	jmp    0x140001ef4
   140001be6:	call   0x140001588
   140001beb:	jmp    0x140001ef2
   140001bf0:	xor    edx,edx
   140001bf2:	xor    ecx,ecx
   140001bf4:	call   QWORD PTR [rip+0x4586]        # 0x140006180
   140001bfa:	jmp    0x140001ef2
   140001bff:	cmp    QWORD PTR [rip+0x6bd1],0x0        # 0x1400087d8
   140001c07:	jne    0x140001ef2
   140001c0d:	mov    rcx,QWORD PTR [rip+0x6aa4]        # 0x1400086b8
   140001c14:	lea    r9,[rip+0x1a15]        # 0x140003630
   140001c1b:	xor    eax,eax
   140001c1d:	mov    edx,0x64
   140001c22:	test   r8,r8
   140001c25:	mov    r8,QWORD PTR [rip+0x6a7c]        # 0x1400086a8
   140001c2c:	setne  al
   140001c2f:	and    QWORD PTR [rsp+0x20],0x0
   140001c35:	mov    DWORD PTR [rip+0x6aa1],eax        # 0x1400086dc
   140001c3b:	call   QWORD PTR [rip+0x45ef]        # 0x140006230
   140001c41:	and    QWORD PTR [rip+0x6b8f],0x0        # 0x1400087d8
   140001c49:	jmp    0x140001ef2
   140001c4e:	cmp    r9,0x203
   140001c55:	jne    0x140001ef2
   140001c5b:	mov    edx,0x464
   140001c60:	xor    r9d,r9d
   140001c63:	xor    r8d,r8d
   140001c66:	call   QWORD PTR [rip+0x45dc]        # 0x140006248
   140001c6c:	jmp    0x140001ef2
   140001c71:	cmp    DWORD PTR [rip+0x63f0],0x0        # 0x140008068
   140001c78:	jbe    0x140001ef2
   140001c7e:	mov    edx,0x467
   140001c83:	jmp    0x140001c60
   140001c85:	mov    rcx,QWORD PTR [rip+0x6b5c]        # 0x1400087e8
   140001c8c:	lea    rdi,[rip+0x63dd]        # 0x140008070
   140001c93:	mov    eax,DWORD PTR [rip+0x639b]        # 0x140008034
   140001c99:	xor    esi,esi
   140001c9b:	cmp    rcx,rax
   140001c9e:	setbe  sil
   140001ca2:	test   rcx,rcx
   140001ca5:	jne    0x140001cc7
   140001ca7:	xor    esi,esi
   140001ca9:	mov    rcx,QWORD PTR [rip+0x63c0]        # 0x140008070
   140001cb0:	cmp    rcx,rdi
   140001cb3:	je     0x140001d12
   140001cb5:	test   BYTE PTR [rcx+0x1c],0x8
   140001cb9:	je     0x140001cce
   140001cbb:	mov    rcx,QWORD PTR [rcx+0x10]
   140001cbf:	lea    edx,[rsi+0x15]
   140001cc2:	call   0x1400011cc
   140001cc7:	mov    rcx,QWORD PTR [rip+0x63a2]        # 0x140008070
   140001cce:	cmp    rcx,rdi
   140001cd1:	je     0x140001cfb
   140001cd3:	test   BYTE PTR [rcx+0x1c],0x8
   140001cd7:	je     0x140001cfb
   140001cd9:	mov    rcx,QWORD PTR [rcx+0x10]
   140001cdd:	lea    rax,[rip+0x47e4]        # 0x1400064c8
   140001ce4:	test   esi,esi
   140001ce6:	lea    r9,[rip+0x47eb]        # 0x1400064d8
   140001ced:	mov    edx,0x16
   140001cf2:	cmovne r9,rax
   140001cf6:	call   0x1400012e8
   140001cfb:	test   esi,esi
   140001cfd:	je     0x140001d12
   140001cff:	mov    rcx,rbx
   140001d02:	call   QWORD PTR [rip+0x44c8]        # 0x1400061d0
   140001d08:	mov    eax,0x1
   140001d0d:	jmp    0x140001ef4
   140001d12:	mov    rdx,QWORD PTR [rip+0x6ab7]        # 0x1400087d0
   140001d19:	mov    rcx,rbx
   140001d1c:	call   QWORD PTR [rip+0x44fe]        # 0x140006220
   140001d22:	mov    rcx,rbx
   140001d25:	call   0x140001588
   140001d2a:	xor    r9d,r9d
   140001d2d:	mov    edx,0x464
   140001d32:	mov    rcx,rbx
   140001d35:	lea    r8d,[r9+0x1]
   140001d39:	jmp    0x140001c66
   140001d3e:	mov    QWORD PTR [rsp+0x48],rcx
   140001d43:	lea    rdx,[rsp+0x40]
   140001d48:	mov    ecx,0x2
   140001d4d:	mov    DWORD PTR [rsp+0x40],0x3d0
   140001d55:	mov    DWORD PTR [rsp+0x50],0x1
   140001d5d:	call   QWORD PTR [rip+0x442d]        # 0x140006190
   140001d63:	mov    rcx,QWORD PTR [rip+0x6a1e]        # 0x140008788
   140001d6a:	call   QWORD PTR [rip+0x4328]        # 0x140006098
   140001d70:	mov    rcx,QWORD PTR [rip+0x6a09]        # 0x140008780
   140001d77:	or     edx,0xffffffff
   140001d7a:	call   QWORD PTR [rip+0x4308]        # 0x140006088
   140001d80:	mov    rcx,QWORD PTR [rip+0x6a01]        # 0x140008788
   140001d87:	call   QWORD PTR [rip+0x43ab]        # 0x140006138
   140001d8d:	mov    rcx,QWORD PTR [rip+0x69ec]        # 0x140008780
   140001d94:	call   QWORD PTR [rip+0x439e]        # 0x140006138
   140001d9a:	xor    ecx,ecx
   140001d9c:	call   QWORD PTR [rip+0x44b6]        # 0x140006258
   140001da2:	jmp    0x140001ef2
   140001da7:	mov    rcx,QWORD PTR [rip+0x690a]        # 0x1400086b8
   140001dae:	mov    edx,0x1
   140001db3:	call   QWORD PTR [rip+0x444f]        # 0x140006208
   140001db9:	mov    rcx,QWORD PTR [rip+0x68f8]        # 0x1400086b8
   140001dc0:	mov    edx,0x2
   140001dc5:	mov    QWORD PTR [rip+0x68fc],rax        # 0x1400086c8
   140001dcc:	call   QWORD PTR [rip+0x4436]        # 0x140006208
   140001dd2:	mov    rcx,QWORD PTR [rip+0x68df]        # 0x1400086b8
   140001dd9:	mov    edx,0x3
   140001dde:	mov    QWORD PTR [rip+0x68db],rax        # 0x1400086c0
   140001de5:	call   QWORD PTR [rip+0x441d]        # 0x140006208
   140001deb:	xor    r9d,r9d
   140001dee:	xor    r8d,r8d
   140001df1:	xor    edx,edx
   140001df3:	mov    QWORD PTR [rip+0x68b6],rax        # 0x1400086b0
   140001dfa:	xor    ecx,ecx
   140001dfc:	call   QWORD PTR [rip+0x42fe]        # 0x140006100
   140001e02:	mov    QWORD PTR [rip+0x697f],rax        # 0x140008788
   140001e09:	test   rax,rax
   140001e0c:	jne    0x140001e55
   140001e0e:	mov    rax,QWORD PTR [rip+0x625b]        # 0x140008070
   140001e15:	lea    rdi,[rip+0x6254]        # 0x140008070
   140001e1c:	cmp    rax,rdi
   140001e1f:	je     0x140001e4c
   140001e21:	test   BYTE PTR [rax+0x1c],0x2
   140001e25:	je     0x140001e4c
   140001e27:	call   QWORD PTR [rip+0x42ab]        # 0x1400060d8
   140001e2d:	mov    rcx,QWORD PTR [rip+0x623c]        # 0x140008070
   140001e34:	lea    r8,[rip+0x4955]        # 0x140006790
   140001e3b:	mov    r9d,eax
   140001e3e:	mov    edx,0x13
   140001e43:	mov    rcx,QWORD PTR [rcx+0x10]
   140001e47:	call   0x1400011f8
   140001e4c:	or     rax,0xffffffffffffffff
   140001e50:	jmp    0x140001ef4
   140001e55:	lea    rax,[rsp+0x30]
   140001e5a:	mov    r9,rbx
   140001e5d:	mov    QWORD PTR [rsp+0x28],rax
   140001e62:	lea    r8,[rip+0xb7]        # 0x140001f20
   140001e69:	xor    edx,edx
   140001e6b:	mov    DWORD PTR [rsp+0x20],0x4
   140001e73:	xor    ecx,ecx
   140001e75:	call   QWORD PTR [rip+0x42dd]        # 0x140006158
   140001e7b:	mov    QWORD PTR [rip+0x68fe],rax        # 0x140008780
   140001e82:	test   rax,rax
   140001e85:	jne    0x140001ed7
   140001e87:	mov    rax,QWORD PTR [rip+0x61e2]        # 0x140008070
   140001e8e:	lea    rdi,[rip+0x61db]        # 0x140008070
   140001e95:	cmp    rax,rdi
   140001e98:	je     0x140001ec5
   140001e9a:	test   BYTE PTR [rax+0x1c],0x2
   140001e9e:	je     0x140001ec5
   140001ea0:	call   QWORD PTR [rip+0x4232]        # 0x1400060d8
   140001ea6:	mov    rcx,QWORD PTR [rip+0x61c3]        # 0x140008070
   140001ead:	lea    r8,[rip+0x48dc]        # 0x140006790
   140001eb4:	mov    r9d,eax
   140001eb7:	mov    edx,0x14
   140001ebc:	mov    rcx,QWORD PTR [rcx+0x10]
   140001ec0:	call   0x1400011f8
   140001ec5:	mov    rcx,QWORD PTR [rip+0x68bc]        # 0x140008788
   140001ecc:	call   QWORD PTR [rip+0x4266]        # 0x140006138
   140001ed2:	jmp    0x140001e4c
   140001ed7:	mov    edx,0xfffffff1
   140001edc:	mov    rcx,rax
   140001edf:	call   QWORD PTR [rip+0x41eb]        # 0x1400060d0
   140001ee5:	mov    rcx,QWORD PTR [rip+0x6894]        # 0x140008780
   140001eec:	call   QWORD PTR [rip+0x4256]        # 0x140006148
   140001ef2:	xor    eax,eax
   140001ef4:	mov    rcx,QWORD PTR [rsp+0x410]
   140001efc:	xor    rcx,rsp
   140001eff:	call   0x140004ca0
   140001f04:	add    rsp,0x420
   140001f0b:	pop    rdi
   140001f0c:	pop    rsi
   140001f0d:	pop    rbx
   140001f0e:	ret    
   140001f0f:	int3   
   140001f10:	int3   
   140001f11:	int3   
   140001f12:	int3   
   140001f13:	int3   
   140001f14:	int3   
   140001f15:	int3   
   140001f16:	int3   
   140001f17:	int3   
   140001f18:	int3   
   140001f19:	int3   
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	mov    rax,rsp
   140001f23:	mov    QWORD PTR [rax+0x10],rbx
   140001f27:	mov    QWORD PTR [rax+0x18],rsi
   140001f2b:	mov    QWORD PTR [rax+0x20],rdi
   140001f2f:	push   rbp
   140001f30:	push   r12
   140001f32:	push   r13
   140001f34:	push   r14
   140001f36:	push   r15
   140001f38:	lea    rbp,[rax-0x798]
   140001f3f:	sub    rsp,0x870
   140001f46:	mov    rax,QWORD PTR [rip+0x60bb]        # 0x140008008
   140001f4d:	xor    rax,rsp
   140001f50:	mov    QWORD PTR [rbp+0x760],rax
   140001f57:	xor    eax,eax
   140001f59:	mov    QWORD PTR [rsp+0x58],rcx
   140001f5e:	or     r15,0xffffffffffffffff
   140001f62:	mov    DWORD PTR [rsp+0x3c],0x1
   140001f6a:	mov    r14d,eax
   140001f6d:	mov    QWORD PTR [rsp+0x40],rax
   140001f72:	mov    edi,eax
   140001f74:	mov    DWORD PTR [rsp+0x38],eax
   140001f78:	lea    esi,[rax+0x1]
   140001f7b:	mov    ebx,eax
   140001f7d:	or     r12d,0xffffffff
   140001f81:	mov    r13d,eax
   140001f84:	mov    rcx,QWORD PTR [rip+0x60e5]        # 0x140008070
   140001f8b:	lea    rdx,[rip+0x60de]        # 0x140008070
   140001f92:	cmp    rcx,rdx
   140001f95:	je     0x140001fab
   140001f97:	test   BYTE PTR [rcx+0x1c],0x8
   140001f9b:	je     0x140001fab
   140001f9d:	mov    rcx,QWORD PTR [rcx+0x10]
   140001fa1:	lea    edx,[rax+0x17]
   140001fa4:	call   0x1400011cc
   140001fa9:	xor    eax,eax
   140001fab:	mov    rcx,QWORD PTR [rip+0x6706]        # 0x1400086b8
   140001fb2:	mov    rdx,rsi
   140001fb5:	mov    DWORD PTR [rsp+0x28],eax
   140001fb9:	mov    r8d,edx
   140001fbc:	mov    eax,0x10
   140001fc1:	mov    r9d,eax
   140001fc4:	mov    DWORD PTR [rsp+0x20],eax
   140001fc8:	call   QWORD PTR [rip+0x4282]        # 0x140006250
   140001fce:	xor    ecx,ecx
   140001fd0:	mov    QWORD PTR [rsp+0x48],rax
   140001fd5:	test   rax,rax
   140001fd8:	jne    0x140002023
   140001fda:	mov    rcx,QWORD PTR [rip+0x608f]        # 0x140008070
   140001fe1:	lea    rsi,[rip+0x6088]        # 0x140008070
   140001fe8:	cmp    rcx,rsi
   140001feb:	je     0x140002792
   140001ff1:	lea    ebx,[rax+0x2]
   140001ff4:	test   BYTE PTR [rcx+0x1c],bl
   140001ff7:	je     0x14000201c
   140001ff9:	call   QWORD PTR [rip+0x40d9]        # 0x1400060d8
   140001fff:	mov    rcx,QWORD PTR [rip+0x606a]        # 0x140008070
   140002006:	lea    edx,[rbx+0x16]
   140002009:	mov    r9d,eax
   14000200c:	lea    r8,[rip+0x477d]        # 0x140006790
   140002013:	mov    rcx,QWORD PTR [rcx+0x10]
   140002017:	call   0x1400011f8
   14000201c:	mov    ebx,edi
   14000201e:	jmp    0x140002792
   140002023:	mov    r9d,0x10
   140002029:	mov    DWORD PTR [rsp+0x28],ecx
   14000202d:	mov    rcx,QWORD PTR [rip+0x6684]        # 0x1400086b8
   140002034:	mov    r8d,esi
   140002037:	mov    DWORD PTR [rsp+0x20],r9d
   14000203c:	lea    ebx,[r9-0xe]
   140002040:	mov    edx,ebx
   140002042:	call   QWORD PTR [rip+0x4208]        # 0x140006250
   140002048:	xor    ecx,ecx
   14000204a:	mov    QWORD PTR [rsp+0x50],rax
   14000204f:	test   rax,rax
   140002052:	jne    0x140002089
   140002054:	mov    rax,QWORD PTR [rip+0x6015]        # 0x140008070
   14000205b:	lea    rsi,[rip+0x600e]        # 0x140008070
   140002062:	cmp    rax,rsi
   140002065:	je     0x140002762
   14000206b:	test   BYTE PTR [rax+0x1c],bl
   14000206e:	je     0x140002762
   140002074:	call   QWORD PTR [rip+0x405e]        # 0x1400060d8
   14000207a:	lea    edx,[rbx+0x17]
   14000207d:	mov    rcx,QWORD PTR [rip+0x5fec]        # 0x140008070
   140002084:	jmp    0x14000226e
   140002089:	mov    eax,0x10
   14000208e:	mov    DWORD PTR [rsp+0x28],ecx
   140002092:	mov    rcx,QWORD PTR [rip+0x661f]        # 0x1400086b8
   140002099:	mov    r9d,eax
   14000209c:	mov    r8d,esi
   14000209f:	mov    DWORD PTR [rsp+0x20],eax
   1400020a3:	lea    edx,[rax-0xd]
   1400020a6:	call   QWORD PTR [rip+0x41a4]        # 0x140006250
   1400020ac:	mov    rdi,rax
   1400020af:	mov    QWORD PTR [rsp+0x30],rax
   1400020b4:	xor    eax,eax
   1400020b6:	test   rdi,rdi
   1400020b9:	jne    0x1400020e6
   1400020bb:	mov    rax,QWORD PTR [rip+0x5fae]        # 0x140008070
   1400020c2:	lea    rsi,[rip+0x5fa7]        # 0x140008070
   1400020c9:	cmp    rax,rsi
   1400020cc:	je     0x140002762
   1400020d2:	test   BYTE PTR [rax+0x1c],bl
   1400020d5:	je     0x140002762
   1400020db:	call   QWORD PTR [rip+0x3ff7]        # 0x1400060d8
   1400020e1:	lea    edx,[rdi+0x1a]
   1400020e4:	jmp    0x14000207d
   1400020e6:	mov    r8d,0x104
   1400020ec:	mov    WORD PTR [rbp+0x350],ax
   1400020f3:	lea    rdx,[rbp+0x350]
   1400020fa:	lea    rcx,[rip+0x43e7]        # 0x1400064e8
   140002101:	call   QWORD PTR [rip+0x4061]        # 0x140006168
   140002107:	xor    eax,eax
   140002109:	cmp    WORD PTR [rbp+0x350],ax
   140002110:	jne    0x14000211b
   140002112:	xor    ecx,ecx
   140002114:	call   QWORD PTR [rip+0x3fae]        # 0x1400060c8
   14000211a:	int3   
   14000211b:	mov    rcx,QWORD PTR [rip+0x5f4e]        # 0x140008070
   140002122:	lea    rax,[rip+0x5f47]        # 0x140008070
   140002129:	cmp    rcx,rax
   14000212c:	je     0x140002149
   14000212e:	test   BYTE PTR [rcx+0x1c],0x8
   140002132:	je     0x140002149
   140002134:	mov    rcx,QWORD PTR [rcx+0x10]
   140002138:	lea    r9,[rbp+0x350]
   14000213f:	mov    edx,0x1b
   140002144:	call   0x1400012e8
   140002149:	mov    edx,esi
   14000214b:	lea    rcx,[rbp+0x350]
   140002152:	mov    r8d,0xb
   140002158:	call   QWORD PTR [rip+0x3f1a]        # 0x140006078
   14000215e:	mov    r15,rax
   140002161:	cmp    rax,0xffffffffffffffff
   140002165:	jne    0x140002196
   140002167:	mov    rcx,QWORD PTR [rip+0x5f02]        # 0x140008070
   14000216e:	lea    rsi,[rip+0x5efb]        # 0x140008070
   140002175:	cmp    rcx,rsi
   140002178:	je     0x140002762
   14000217e:	test   BYTE PTR [rcx+0x1c],bl
   140002181:	je     0x140002762
   140002187:	call   QWORD PTR [rip+0x3f4b]        # 0x1400060d8
   14000218d:	lea    edx,[r15+0x1d]
   140002191:	jmp    0x14000207d
   140002196:	lea    rax,[rsp+0x40]
   14000219b:	mov    r9d,0x20019
   1400021a1:	xor    r8d,r8d
   1400021a4:	mov    QWORD PTR [rsp+0x20],rax
   1400021a9:	lea    rdx,[rip+0x4350]        # 0x140006500
   1400021b0:	mov    rcx,0xffffffff80000001
   1400021b7:	call   QWORD PTR [rip+0x3e83]        # 0x140006040
   1400021bd:	test   eax,eax
   1400021bf:	je     0x1400021eb
   1400021c1:	mov    rcx,QWORD PTR [rip+0x5ea8]        # 0x140008070
   1400021c8:	lea    rsi,[rip+0x5ea1]        # 0x140008070
   1400021cf:	cmp    rcx,rsi
   1400021d2:	je     0x140002762
   1400021d8:	test   BYTE PTR [rcx+0x1c],bl
   1400021db:	je     0x140002762
   1400021e1:	mov    edx,0x1d
   1400021e6:	jmp    0x14000226e
   1400021eb:	xor    r9d,r9d
   1400021ee:	xor    r8d,r8d
   1400021f1:	xor    edx,edx
   1400021f3:	xor    ecx,ecx
   1400021f5:	call   QWORD PTR [rip+0x3f05]        # 0x140006100
   1400021fb:	mov    r14,rax
   1400021fe:	test   rax,rax
   140002201:	jne    0x140002232
   140002203:	mov    rcx,QWORD PTR [rip+0x5e66]        # 0x140008070
   14000220a:	lea    rsi,[rip+0x5e5f]        # 0x140008070
   140002211:	cmp    rcx,rsi
   140002214:	je     0x140002762
   14000221a:	test   BYTE PTR [rcx+0x1c],bl
   14000221d:	je     0x140002762
   140002223:	call   QWORD PTR [rip+0x3eaf]        # 0x1400060d8
   140002229:	lea    edx,[r14+0x1e]
   14000222d:	jmp    0x14000207d
   140002232:	xor    edx,edx
   140002234:	mov    rcx,r14
   140002237:	call   QWORD PTR [rip+0x4073]        # 0x1400062b0
   14000223d:	xor    edx,edx
   14000223f:	test   eax,eax
   140002241:	jne    0x140002286
   140002243:	call   QWORD PTR [rip+0x3e8f]        # 0x1400060d8
   140002249:	mov    rcx,QWORD PTR [rip+0x5e20]        # 0x140008070
   140002250:	lea    rsi,[rip+0x5e19]        # 0x140008070
   140002257:	cmp    rcx,rsi
   14000225a:	je     0x140002762
   140002260:	test   BYTE PTR [rcx+0x1c],bl
   140002263:	je     0x140002762
   140002269:	mov    edx,0x1f
   14000226e:	mov    rcx,QWORD PTR [rcx+0x10]
   140002272:	lea    r8,[rip+0x4517]        # 0x140006790
   140002279:	mov    r9d,eax
   14000227c:	call   0x1400011f8
   140002281:	jmp    0x140002762
   140002286:	mov    rax,QWORD PTR [rip+0x64fb]        # 0x140008788
   14000228d:	mov    QWORD PTR [rbp+0x330],rax
   140002294:	mov    rax,QWORD PTR [rip+0x6435]        # 0x1400086d0
   14000229b:	mov    QWORD PTR [rbp+0x348],rax
   1400022a2:	mov    DWORD PTR [rsp+0x38],esi
   1400022a6:	mov    QWORD PTR [rbp+0x338],r15
   1400022ad:	mov    QWORD PTR [rbp+0x340],r14
   1400022b4:	mov    rcx,QWORD PTR [rip+0x5db5]        # 0x140008070
   1400022bb:	test   esi,esi
   1400022bd:	je     0x140002352
   1400022c3:	mov    rax,QWORD PTR [rip+0x650e]        # 0x1400087d8
   1400022ca:	test   rax,rax
   1400022cd:	je     0x14000233a
   1400022cf:	lea    rdx,[rip+0x5d9a]        # 0x140008070
   1400022d6:	cmp    rcx,rdx
   1400022d9:	je     0x1400022f6
   1400022db:	test   BYTE PTR [rcx+0x1c],0x8
   1400022df:	je     0x1400022f6
   1400022e1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400022e5:	mov    edx,0x20
   1400022ea:	call   0x1400011cc
   1400022ef:	mov    rax,QWORD PTR [rip+0x64e2]        # 0x1400087d8
   1400022f6:	mov    edx,0x66
   1400022fb:	mov    rcx,rax
   1400022fe:	call   QWORD PTR [rip+0x3ef4]        # 0x1400061f8
   140002304:	mov    rcx,rax
   140002307:	call   0x140003aac
   14000230c:	xor    edx,edx
   14000230e:	test   eax,eax
   140002310:	jne    0x14000234b
   140002312:	mov    rcx,QWORD PTR [rip+0x5d57]        # 0x140008070
   140002319:	lea    rsi,[rip+0x5d50]        # 0x140008070
   140002320:	cmp    rcx,rsi
   140002323:	je     0x140002762
   140002329:	test   BYTE PTR [rcx+0x1c],bl
   14000232c:	je     0x140002762
   140002332:	lea    edx,[rax+0x21]
   140002335:	jmp    0x140002736
   14000233a:	xor    ecx,ecx
   14000233c:	call   0x140003aac
   140002341:	xor    edx,edx
   140002343:	test   eax,eax
   140002345:	je     0x140002719
   14000234b:	mov    rcx,QWORD PTR [rip+0x5d1e]        # 0x140008070
   140002352:	mov    rax,QWORD PTR [rsp+0x58]
   140002357:	mov    QWORD PTR [rsp+0x68],rax
   14000235c:	mov    eax,DWORD PTR [rip+0x5cd2]        # 0x140008034
   140002362:	mov    WORD PTR [rbp+0x560],dx
   140002369:	mov    rdx,QWORD PTR [rip+0x6478]        # 0x1400087e8
   140002370:	mov    DWORD PTR [rsp+0x60],0x3d0
   140002378:	mov    DWORD PTR [rsp+0x70],0x1
   140002380:	mov    DWORD PTR [rsp+0x74],0x7
   140002388:	mov    DWORD PTR [rsp+0x78],0x400
   140002390:	cmp    rdx,rax
   140002393:	jbe    0x14000244b
   140002399:	lea    rax,[rip+0x5cd0]        # 0x140008070
   1400023a0:	cmp    rcx,rax
   1400023a3:	je     0x1400023b9
   1400023a5:	test   BYTE PTR [rcx+0x1c],0x4
   1400023a9:	je     0x1400023b9
   1400023ab:	mov    rcx,QWORD PTR [rcx+0x10]
   1400023af:	mov    edx,0x23
   1400023b4:	call   0x1400011cc
   1400023b9:	mov    rcx,QWORD PTR [rip+0x62f8]        # 0x1400086b8
   1400023c0:	lea    r8,[rbp+0x560]
   1400023c7:	mov    r9d,0x100
   1400023cd:	mov    QWORD PTR [rbp-0x80],rdi
   1400023d1:	mov    edx,0x3
   1400023d6:	call   QWORD PTR [rip+0x3de4]        # 0x1400061c0
   1400023dc:	mov    eax,DWORD PTR [rip+0x5c52]        # 0x140008034
   1400023e2:	mov    rdi,QWORD PTR [rip+0x63ff]        # 0x1400087e8
   1400023e9:	sub    rdi,rax
   1400023ec:	xor    eax,eax
   1400023ee:	cmp    DWORD PTR [rip+0x63fc],eax        # 0x1400087f0
   1400023f4:	je     0x14000252b
   1400023fa:	cmp    DWORD PTR [rip+0x63b0],eax        # 0x1400087b0
   140002400:	jne    0x14000252b
   140002406:	imul   r8d,DWORD PTR [rip+0x5c57],0xea60        # 0x140008068
   140002411:	mov    eax,0x1
   140002416:	mov    rcx,QWORD PTR [rip+0x628b]        # 0x1400086a8
   14000241d:	xor    r9d,r9d
   140002420:	mov    edx,eax
   140002422:	mov    DWORD PTR [rip+0x6388],eax        # 0x1400087b0
   140002428:	call   QWORD PTR [rip+0x3e42]        # 0x140006270
   14000242e:	mov    rcx,QWORD PTR [rip+0x6273]        # 0x1400086a8
   140002435:	xor    r9d,r9d
   140002438:	xor    r8d,r8d
   14000243b:	mov    edx,0x467
   140002440:	call   QWORD PTR [rip+0x3e02]        # 0x140006248
   140002446:	jmp    0x14000252b
   14000244b:	sub    rax,rdx
   14000244e:	xorps  xmm1,xmm1
   140002451:	cvtsi2sd xmm1,rax
   140002456:	jns    0x140002460
   140002458:	addsd  xmm1,QWORD PTR [rip+0x4378]        # 0x1400067d8
   140002460:	xorps  xmm0,xmm0
   140002463:	cvtsi2sd xmm0,rdx
   140002468:	test   rdx,rdx
   14000246b:	jns    0x140002475
   14000246d:	addsd  xmm0,QWORD PTR [rip+0x4363]        # 0x1400067d8
   140002475:	mulsd  xmm0,QWORD PTR [rip+0x4353]        # 0x1400067d0
   14000247d:	comisd xmm0,xmm1
   140002481:	jbe    0x1400024ac
   140002483:	lea    rax,[rip+0x5be6]        # 0x140008070
   14000248a:	cmp    rcx,rax
   14000248d:	je     0x1400024a3
   14000248f:	test   BYTE PTR [rcx+0x1c],0x4
   140002493:	je     0x1400024a3
   140002495:	mov    rcx,QWORD PTR [rcx+0x10]
   140002499:	mov    edx,0x24
   14000249e:	call   0x1400011cc
   1400024a3:	mov    rax,QWORD PTR [rsp+0x50]
   1400024a8:	mov    edx,ebx
   1400024aa:	jmp    0x1400024d6
   1400024ac:	lea    rax,[rip+0x5bbd]        # 0x140008070
   1400024b3:	cmp    rcx,rax
   1400024b6:	je     0x1400024cc
   1400024b8:	test   BYTE PTR [rcx+0x1c],0x8
   1400024bc:	je     0x1400024cc
   1400024be:	mov    rcx,QWORD PTR [rcx+0x10]
   1400024c2:	mov    edx,0x25
   1400024c7:	call   0x1400011cc
   1400024cc:	mov    rax,QWORD PTR [rsp+0x48]
   1400024d1:	mov    edx,0x1
   1400024d6:	mov    rcx,QWORD PTR [rip+0x61db]        # 0x1400086b8
   1400024dd:	lea    r8,[rbp+0x560]
   1400024e4:	mov    r9d,0x100
   1400024ea:	mov    QWORD PTR [rbp-0x80],rax
   1400024ee:	call   QWORD PTR [rip+0x3ccc]        # 0x1400061c0
   1400024f4:	mov    edi,DWORD PTR [rip+0x5b3a]        # 0x140008034
   1400024fa:	xor    eax,eax
   1400024fc:	sub    rdi,QWORD PTR [rip+0x62e5]        # 0x1400087e8
   140002503:	cmp    DWORD PTR [rip+0x62e7],eax        # 0x1400087f0
   140002509:	je     0x14000252b
   14000250b:	cmp    DWORD PTR [rip+0x629f],eax        # 0x1400087b0
   140002511:	je     0x14000252b
   140002513:	mov    rcx,QWORD PTR [rip+0x618e]        # 0x1400086a8
   14000251a:	lea    edx,[rax+0x1]
   14000251d:	call   QWORD PTR [rip+0x3d1d]        # 0x140006240
   140002523:	xor    eax,eax
   140002525:	mov    DWORD PTR [rip+0x6285],eax        # 0x1400087b0
   14000252b:	mov    r9,rdi
   14000252e:	lea    r8,[rbp+0x560]
   140002535:	mov    edx,0x80
   14000253a:	lea    rcx,[rbp-0x78]
   14000253e:	call   0x14000114c
   140002543:	xor    edi,edi
   140002545:	test   eax,eax
   140002547:	jns    0x140002593
   140002549:	mov    rcx,QWORD PTR [rip+0x5b20]        # 0x140008070
   140002550:	lea    rdx,[rip+0x5b19]        # 0x140008070
   140002557:	mov    rdi,QWORD PTR [rsp+0x30]
   14000255c:	cmp    rcx,rdx
   14000255f:	mov    edx,0x0
   140002564:	je     0x1400022bb
   14000256a:	test   BYTE PTR [rcx+0x1c],0x4
   14000256e:	je     0x1400022bb
   140002574:	mov    rcx,QWORD PTR [rcx+0x10]
   140002578:	lea    r8,[rip+0x4211]        # 0x140006790
   14000257f:	mov    edx,0x26
   140002584:	mov    r9d,eax
   140002587:	call   0x1400011f8
   14000258c:	xor    edx,edx
   14000258e:	jmp    0x1400022b4
   140002593:	lea    rdx,[rsp+0x60]
   140002598:	cmp    DWORD PTR [rsp+0x3c],edi
   14000259c:	je     0x1400025b0
   14000259e:	xor    ecx,ecx
   1400025a0:	call   QWORD PTR [rip+0x3bea]        # 0x140006190
   1400025a6:	test   eax,eax
   1400025a8:	je     0x1400025bb
   1400025aa:	mov    DWORD PTR [rsp+0x3c],edi
   1400025ae:	jmp    0x1400025bb
   1400025b0:	mov    ecx,0x1
   1400025b5:	call   QWORD PTR [rip+0x3bd5]        # 0x140006190
   1400025bb:	test   esi,esi
   1400025bd:	je     0x1400025dc
   1400025bf:	mov    rcx,QWORD PTR [rip+0x6212]        # 0x1400087d8
   1400025c6:	test   rcx,rcx
   1400025c9:	je     0x1400025dc
   1400025cb:	xor    r9d,r9d
   1400025ce:	xor    r8d,r8d
   1400025d1:	mov    edx,0x465
   1400025d6:	call   QWORD PTR [rip+0x3c6c]        # 0x140006248
   1400025dc:	mov    rcx,r15
   1400025df:	call   QWORD PTR [rip+0x3b23]        # 0x140006108
   1400025e5:	test   esi,esi
   1400025e7:	je     0x1400025fc
   1400025e9:	or     r12d,0xffffffff
   1400025ed:	mov    esi,edi
   1400025ef:	call   QWORD PTR [rip+0x3b6b]        # 0x140006160
   1400025f5:	lea    r13,[rax+0x493e0]
   1400025fc:	xor    r8d,r8d
   1400025ff:	lea    rdx,[rbp+0x330]
   140002606:	mov    r9d,r12d
   140002609:	lea    ecx,[r8+0x4]
   14000260d:	call   QWORD PTR [rip+0x3afd]        # 0x140006110
   140002613:	cmp    eax,0xffffffff
   140002616:	je     0x140002756
   14000261c:	cmp    eax,0x102
   140002621:	cmove  eax,ebx
   140002624:	test   eax,eax
   140002626:	je     0x140002756
   14000262c:	sub    eax,0x1
   14000262f:	je     0x140002679
   140002631:	sub    eax,0x1
   140002634:	je     0x140002647
   140002636:	cmp    eax,0x1
   140002639:	jne    0x14000263d
   14000263b:	mov    esi,eax
   14000263d:	mov    rdi,QWORD PTR [rsp+0x30]
   140002642:	jmp    0x14000258c
   140002647:	mov    ecx,0x7d0
   14000264c:	call   QWORD PTR [rip+0x3a5e]        # 0x1400060b0
   140002652:	lea    rcx,[rip+0x6027]        # 0x140008680
   140002659:	call   QWORD PTR [rip+0x3a89]        # 0x1400060e8
   14000265f:	call   0x140002c04
   140002664:	test   eax,eax
   140002666:	je     0x140002741
   14000266c:	lea    rcx,[rip+0x600d]        # 0x140008680
   140002673:	call   QWORD PTR [rip+0x3a3f]        # 0x1400060b8
   140002679:	mov    ecx,0x7d0
   14000267e:	call   QWORD PTR [rip+0x3a2c]        # 0x1400060b0
   140002684:	call   QWORD PTR [rip+0x3ad6]        # 0x140006160
   14000268a:	xor    edx,edx
   14000268c:	mov    rdi,rax
   14000268f:	cmp    r13,rax
   140002692:	mov    esi,edx
   140002694:	setb   sil
   140002698:	test   esi,esi
   14000269a:	je     0x1400026d5
   14000269c:	mov    rcx,QWORD PTR [rip+0x59cd]        # 0x140008070
   1400026a3:	lea    rax,[rip+0x59c6]        # 0x140008070
   1400026aa:	mov    rdi,QWORD PTR [rsp+0x30]
   1400026af:	cmp    rcx,rax
   1400026b2:	je     0x1400022bb
   1400026b8:	test   BYTE PTR [rcx+0x1c],0x8
   1400026bc:	je     0x1400022bb
   1400026c2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400026c6:	mov    edx,0x27
   1400026cb:	call   0x1400011cc
   1400026d0:	jmp    0x14000258c
   1400026d5:	mov    rcx,QWORD PTR [rip+0x5994]        # 0x140008070
   1400026dc:	lea    rax,[rip+0x598d]        # 0x140008070
   1400026e3:	cmp    rcx,rax
   1400026e6:	je     0x140002705
   1400026e8:	test   BYTE PTR [rcx+0x1c],0x8
   1400026ec:	je     0x140002705
   1400026ee:	mov    rcx,QWORD PTR [rcx+0x10]
   1400026f2:	mov    edx,0x28
   1400026f7:	call   0x1400011cc
   1400026fc:	mov    rcx,QWORD PTR [rip+0x596d]        # 0x140008070
   140002703:	xor    edx,edx
   140002705:	mov    r12d,r13d
   140002708:	sub    r12d,edi
   14000270b:	mov    rdi,QWORD PTR [rsp+0x30]
   140002710:	add    r12d,0x64
   140002714:	jmp    0x1400022bb
   140002719:	mov    rcx,QWORD PTR [rip+0x5950]        # 0x140008070
   140002720:	lea    rsi,[rip+0x5949]        # 0x140008070
   140002727:	cmp    rcx,rsi
   14000272a:	je     0x140002762
   14000272c:	test   BYTE PTR [rcx+0x1c],bl
   14000272f:	je     0x140002762
   140002731:	mov    edx,0x22
   140002736:	mov    rcx,QWORD PTR [rcx+0x10]
   14000273a:	call   0x1400011cc
   14000273f:	jmp    0x140002762
   140002741:	mov    rcx,QWORD PTR [rip+0x5f60]        # 0x1400086a8
   140002748:	xor    r9d,r9d
   14000274b:	xor    r8d,r8d
   14000274e:	mov    edx,ebx
   140002750:	call   QWORD PTR [rip+0x3af2]        # 0x140006248
   140002756:	mov    rdi,QWORD PTR [rsp+0x30]
   14000275b:	lea    rsi,[rip+0x590e]        # 0x140008070
   140002762:	mov    rcx,QWORD PTR [rsp+0x48]
   140002767:	call   QWORD PTR [rip+0x3b33]        # 0x1400062a0
   14000276d:	mov    rax,QWORD PTR [rsp+0x50]
   140002772:	test   rax,rax
   140002775:	je     0x140002780
   140002777:	mov    rcx,rax
   14000277a:	call   QWORD PTR [rip+0x3b20]        # 0x1400062a0
   140002780:	test   rdi,rdi
   140002783:	je     0x14000278e
   140002785:	mov    rcx,rdi
   140002788:	call   QWORD PTR [rip+0x3b12]        # 0x1400062a0
   14000278e:	mov    ebx,DWORD PTR [rsp+0x38]
   140002792:	mov    rcx,QWORD PTR [rsp+0x40]
   140002797:	test   rcx,rcx
   14000279a:	je     0x1400027a2
   14000279c:	call   QWORD PTR [rip+0x38ae]        # 0x140006050
   1400027a2:	test   r14,r14
   1400027a5:	je     0x1400027bd
   1400027a7:	test   ebx,ebx
   1400027a9:	je     0x1400027b4
   1400027ab:	mov    rcx,r14
   1400027ae:	call   QWORD PTR [rip+0x3b04]        # 0x1400062b8
   1400027b4:	mov    rcx,r14
   1400027b7:	call   QWORD PTR [rip+0x397b]        # 0x140006138
   1400027bd:	cmp    r15,0xffffffffffffffff
   1400027c1:	je     0x1400027cc
   1400027c3:	mov    rcx,r15
   1400027c6:	call   QWORD PTR [rip+0x38c4]        # 0x140006090
   1400027cc:	mov    rcx,QWORD PTR [rip+0x589d]        # 0x140008070
   1400027d3:	cmp    rcx,rsi
   1400027d6:	je     0x1400027ec
   1400027d8:	test   BYTE PTR [rcx+0x1c],0x8
   1400027dc:	je     0x1400027ec
   1400027de:	mov    rcx,QWORD PTR [rcx+0x10]
   1400027e2:	mov    edx,0x29
   1400027e7:	call   0x1400011cc
   1400027ec:	xor    ecx,ecx
   1400027ee:	call   QWORD PTR [rip+0x38d4]        # 0x1400060c8
   1400027f4:	int3   
   1400027f5:	int3   
   1400027f6:	int3   
   1400027f7:	int3   
   1400027f8:	int3   
   1400027f9:	int3   
   1400027fa:	int3   
   1400027fb:	int3   
   1400027fc:	rex push rbx
   1400027fe:	push   rsi
   1400027ff:	push   rdi
   140002800:	sub    rsp,0x40
   140002804:	call   QWORD PTR [rip+0x3876]        # 0x140006080
   14000280a:	xor    edi,edi
   14000280c:	xor    r9d,r9d
   14000280f:	mov    rsi,rax
   140002812:	lea    rax,[rsp+0x70]
   140002817:	mov    QWORD PTR [rsp+0x38],rax
   14000281c:	mov    rcx,rsi
   14000281f:	lea    rax,[rsp+0x60]
   140002824:	mov    QWORD PTR [rsp+0x30],rdi
   140002829:	mov    QWORD PTR [rsp+0x28],rax
   14000282e:	lea    edx,[rdi+0x6]
   140002831:	lea    r8d,[rdi+0x4]
   140002835:	mov    QWORD PTR [rsp+0x20],rdi
   14000283a:	call   QWORD PTR [rip+0x37e8]        # 0x140006028
   140002840:	test   eax,eax
   140002842:	je     0x140002848
   140002844:	xor    eax,eax
   140002846:	jmp    0x1400028c2
   140002848:	mov    rax,QWORD PTR [rsp+0x60]
   14000284d:	movzx  ebx,di
   140002850:	cmp    di,WORD PTR [rax+0x4]
   140002854:	jae    0x14000288a
   140002856:	movzx  edx,bx
   140002859:	lea    r8,[rsp+0x68]
   14000285e:	mov    rcx,rax
   140002861:	call   QWORD PTR [rip+0x37b9]        # 0x140006020
   140002867:	test   eax,eax
   140002869:	je     0x14000287c
   14000286b:	mov    rax,QWORD PTR [rsp+0x68]
   140002870:	cmp    BYTE PTR [rax],dil
   140002873:	jne    0x14000287c
   140002875:	and    DWORD PTR [rax+0x4],0xfff3fffe
   14000287c:	mov    rax,QWORD PTR [rsp+0x60]
   140002881:	inc    bx
   140002884:	cmp    bx,WORD PTR [rax+0x4]
   140002888:	jb     0x140002856
   14000288a:	xor    r9d,r9d
   14000288d:	mov    QWORD PTR [rsp+0x30],rdi
   140002892:	mov    QWORD PTR [rsp+0x28],rax
   140002897:	mov    rcx,rsi
   14000289a:	mov    QWORD PTR [rsp+0x20],rdi
   14000289f:	lea    edx,[r9+0x6]
   1400028a3:	lea    r8d,[r9+0x4]
   1400028a7:	call   QWORD PTR [rip+0x378b]        # 0x140006038
   1400028ad:	mov    rcx,QWORD PTR [rsp+0x70]
   1400028b2:	mov    ebx,eax
   1400028b4:	call   QWORD PTR [rip+0x3886]        # 0x140006140
   1400028ba:	test   ebx,ebx
   1400028bc:	sete   dil
   1400028c0:	mov    eax,edi
   1400028c2:	add    rsp,0x40
   1400028c6:	pop    rdi
   1400028c7:	pop    rsi
   1400028c8:	pop    rbx
   1400028c9:	ret    
   1400028ca:	int3   
   1400028cb:	int3   
   1400028cc:	int3   
   1400028cd:	int3   
   1400028ce:	int3   
   1400028cf:	int3   
   1400028d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400028d5:	mov    QWORD PTR [rsp+0x20],rbp
   1400028da:	push   rsi
   1400028db:	push   rdi
   1400028dc:	push   r15
   1400028de:	sub    rsp,0x30
   1400028e2:	xor    ebp,ebp
   1400028e4:	mov    rbx,rcx
   1400028e7:	cmp    QWORD PTR [rip+0x5ee2],rbp        # 0x1400087d0
   1400028ee:	mov    esi,ebp
   1400028f0:	jne    0x14000295b
   1400028f2:	mov    edx,0x208
   1400028f7:	lea    ecx,[rbp+0x40]
   1400028fa:	mov    DWORD PTR [rip+0x5ee0],edx        # 0x1400087e0
   140002900:	call   QWORD PTR [rip+0x37f2]        # 0x1400060f8
   140002906:	mov    QWORD PTR [rip+0x5ec3],rax        # 0x1400087d0
   14000290d:	test   rax,rax
   140002910:	jne    0x14000295b
   140002912:	mov    DWORD PTR [rip+0x5ec8],ebp        # 0x1400087e0
   140002918:	mov    rcx,QWORD PTR [rip+0x5751]        # 0x140008070
   14000291f:	lea    rax,[rip+0x574a]        # 0x140008070
   140002926:	cmp    rcx,rax
   140002929:	je     0x140002954
   14000292b:	test   BYTE PTR [rcx+0x1c],0x2
   14000292f:	je     0x140002954
   140002931:	call   QWORD PTR [rip+0x37a1]        # 0x1400060d8
   140002937:	lea    edx,[rbp+0x2a]
   14000293a:	mov    rcx,QWORD PTR [rip+0x572f]        # 0x140008070
   140002941:	lea    r8,[rip+0x3e48]        # 0x140006790
   140002948:	mov    r9d,eax
   14000294b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000294f:	call   0x1400011f8
   140002954:	xor    eax,eax
   140002956:	jmp    0x140002bea
   14000295b:	lea    rax,[rsp+0x58]
   140002960:	xor    r8d,r8d
   140002963:	mov    QWORD PTR [rsp+0x28],rax
   140002968:	lea    r9,[rsp+0x60]
   14000296d:	lea    rdx,[rip+0x3c04]        # 0x140006578
   140002974:	mov    QWORD PTR [rsp+0x20],rbp
   140002979:	mov    rcx,rbx
   14000297c:	call   QWORD PTR [rip+0x368e]        # 0x140006010
   140002982:	mov    r15d,0x1
   140002988:	test   eax,eax
   14000298a:	jne    0x140002bc1
   140002990:	mov    eax,DWORD PTR [rsp+0x58]
   140002994:	mov    ecx,DWORD PTR [rip+0x5e46]        # 0x1400087e0
   14000299a:	cmp    eax,ecx
   14000299c:	jbe    0x140002a15
   14000299e:	mov    rcx,QWORD PTR [rip+0x5e2b]        # 0x1400087d0
   1400029a5:	test   rcx,rcx
   1400029a8:	je     0x1400029b4
   1400029aa:	call   QWORD PTR [rip+0x3790]        # 0x140006140
   1400029b0:	mov    eax,DWORD PTR [rsp+0x58]
   1400029b4:	add    eax,0x2
   1400029b7:	mov    ecx,0x40
   1400029bc:	mov    edx,eax
   1400029be:	mov    DWORD PTR [rip+0x5e1c],eax        # 0x1400087e0
   1400029c4:	call   QWORD PTR [rip+0x372e]        # 0x1400060f8
   1400029ca:	mov    QWORD PTR [rip+0x5dff],rax        # 0x1400087d0
   1400029d1:	test   rax,rax
   1400029d4:	jne    0x140002a0d
   1400029d6:	mov    DWORD PTR [rip+0x5e04],ebp        # 0x1400087e0
   1400029dc:	mov    rcx,QWORD PTR [rip+0x568d]        # 0x140008070
   1400029e3:	lea    rax,[rip+0x5686]        # 0x140008070
   1400029ea:	cmp    rcx,rax
   1400029ed:	je     0x140002954
   1400029f3:	test   BYTE PTR [rcx+0x1c],0x2
   1400029f7:	je     0x140002954
   1400029fd:	call   QWORD PTR [rip+0x36d5]        # 0x1400060d8
   140002a03:	mov    edx,0x2b
   140002a08:	jmp    0x14000293a
   140002a0d:	mov    ecx,DWORD PTR [rip+0x5dcd]        # 0x1400087e0
   140002a13:	jmp    0x140002a1c
   140002a15:	mov    rax,QWORD PTR [rip+0x5db4]        # 0x1400087d0
   140002a1c:	mov    DWORD PTR [rsp+0x58],ecx
   140002a20:	lea    r9,[rsp+0x60]
   140002a25:	lea    rcx,[rsp+0x58]
   140002a2a:	xor    r8d,r8d
   140002a2d:	mov    QWORD PTR [rsp+0x28],rcx
   140002a32:	lea    rdx,[rip+0x3b3f]        # 0x140006578
   140002a39:	mov    rcx,rbx
   140002a3c:	mov    QWORD PTR [rsp+0x20],rax
   140002a41:	call   QWORD PTR [rip+0x35c9]        # 0x140006010
   140002a47:	mov    edx,DWORD PTR [rip+0x5d93]        # 0x1400087e0
   140002a4d:	mov    rcx,QWORD PTR [rip+0x5d7c]        # 0x1400087d0
   140002a54:	shr    rdx,1
   140002a57:	mov    WORD PTR [rcx+rdx*2-0x2],bp
   140002a5c:	test   eax,eax
   140002a5e:	jne    0x140002bc8
   140002a64:	cmp    WORD PTR [rcx],bp
   140002a67:	je     0x140002be7
   140002a6d:	xor    r8d,r8d
   140002a70:	xor    edx,edx
   140002a72:	call   QWORD PTR [rip+0x36d8]        # 0x140006150
   140002a78:	mov    edi,eax
   140002a7a:	test   eax,eax
   140002a7c:	jne    0x140002ac9
   140002a7e:	mov    rcx,QWORD PTR [rip+0x55eb]        # 0x140008070
   140002a85:	lea    rax,[rip+0x55e4]        # 0x140008070
   140002a8c:	cmp    rcx,rax
   140002a8f:	je     0x140002bc1
   140002a95:	test   BYTE PTR [rcx+0x1c],0x2
   140002a99:	je     0x140002bc1
   140002a9f:	call   QWORD PTR [rip+0x3633]        # 0x1400060d8
   140002aa5:	mov    edx,0x2c
   140002aaa:	mov    rcx,QWORD PTR [rip+0x55bf]        # 0x140008070
   140002ab1:	lea    r8,[rip+0x3cd8]        # 0x140006790
   140002ab8:	mov    r9d,eax
   140002abb:	mov    rcx,QWORD PTR [rcx+0x10]
   140002abf:	call   0x1400011f8
   140002ac4:	jmp    0x140002bc1
   140002ac9:	mov    rdx,rdi
   140002acc:	mov    ecx,0x40
   140002ad1:	add    rdx,rdx
   140002ad4:	call   QWORD PTR [rip+0x361e]        # 0x1400060f8
   140002ada:	mov    rbx,rax
   140002add:	test   rax,rax
   140002ae0:	je     0x140002b7f
   140002ae6:	mov    rcx,QWORD PTR [rip+0x5ce3]        # 0x1400087d0
   140002aed:	mov    r8d,edi
   140002af0:	mov    rdx,rax
   140002af3:	call   QWORD PTR [rip+0x3657]        # 0x140006150
   140002af9:	mov    edi,eax
   140002afb:	test   eax,eax
   140002afd:	jne    0x140002b30
   140002aff:	mov    rcx,QWORD PTR [rip+0x556a]        # 0x140008070
   140002b06:	lea    rax,[rip+0x5563]        # 0x140008070
   140002b0d:	cmp    rcx,rax
   140002b10:	je     0x140002bc1
   140002b16:	test   BYTE PTR [rcx+0x1c],0x2
   140002b1a:	je     0x140002bc1
   140002b20:	call   QWORD PTR [rip+0x35b2]        # 0x1400060d8
   140002b26:	mov    edx,0x2d
   140002b2b:	jmp    0x140002aaa
   140002b30:	mov    edx,DWORD PTR [rip+0x5caa]        # 0x1400087e0
   140002b36:	mov    rax,rdi
   140002b39:	mov    rcx,QWORD PTR [rip+0x5c90]        # 0x1400087d0
   140002b40:	add    rax,rax
   140002b43:	cmp    rax,rdx
   140002b46:	jbe    0x140002b63
   140002b48:	call   QWORD PTR [rip+0x35f2]        # 0x140006140
   140002b4e:	lea    eax,[rdi+rdi*1]
   140002b51:	mov    QWORD PTR [rip+0x5c78],rbx        # 0x1400087d0
   140002b58:	mov    DWORD PTR [rip+0x5c82],eax        # 0x1400087e0
   140002b5e:	jmp    0x140002be7
   140002b63:	shr    rdx,1
   140002b66:	mov    r8,rbx
   140002b69:	call   0x140001008
   140002b6e:	test   eax,eax
   140002b70:	mov    rcx,rbx
   140002b73:	cmovs  esi,r15d
   140002b77:	call   QWORD PTR [rip+0x35c3]        # 0x140006140
   140002b7d:	jmp    0x140002bbd
   140002b7f:	mov    rcx,QWORD PTR [rip+0x54ea]        # 0x140008070
   140002b86:	lea    rax,[rip+0x54e3]        # 0x140008070
   140002b8d:	cmp    rcx,rax
   140002b90:	je     0x140002be7
   140002b92:	test   BYTE PTR [rcx+0x1c],0x2
   140002b96:	je     0x140002be7
   140002b98:	call   QWORD PTR [rip+0x353a]        # 0x1400060d8
   140002b9e:	mov    rcx,QWORD PTR [rip+0x54cb]        # 0x140008070
   140002ba5:	lea    r8,[rip+0x3be4]        # 0x140006790
   140002bac:	mov    r9d,eax
   140002baf:	mov    edx,0x2e
   140002bb4:	mov    rcx,QWORD PTR [rcx+0x10]
   140002bb8:	call   0x1400011f8
   140002bbd:	test   esi,esi
   140002bbf:	je     0x140002be7
   140002bc1:	mov    rcx,QWORD PTR [rip+0x5c08]        # 0x1400087d0
   140002bc8:	mov    r9d,DWORD PTR [rip+0x5c11]        # 0x1400087e0
   140002bcf:	mov    r8,rcx
   140002bd2:	mov    rcx,QWORD PTR [rip+0x5adf]        # 0x1400086b8
   140002bd9:	mov    edx,0x9
   140002bde:	shr    r9d,1
   140002be1:	call   QWORD PTR [rip+0x35d9]        # 0x1400061c0
   140002be7:	mov    eax,r15d
   140002bea:	mov    rbx,QWORD PTR [rsp+0x50]
   140002bef:	mov    rbp,QWORD PTR [rsp+0x68]
   140002bf4:	add    rsp,0x30
   140002bf8:	pop    r15
   140002bfa:	pop    rdi
   140002bfb:	pop    rsi
   140002bfc:	ret    
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	int3   
   140002c01:	int3   
   140002c02:	int3   
   140002c03:	int3   
   140002c04:	rex push rbp
   140002c06:	push   rbx
   140002c07:	push   rdi
   140002c08:	push   r14
   140002c0a:	push   r15
   140002c0c:	mov    rbp,rsp
   140002c0f:	sub    rsp,0x30
   140002c13:	lea    rax,[rbp+0x48]
   140002c17:	mov    r9d,0x20019
   140002c1d:	xor    r8d,r8d
   140002c20:	mov    QWORD PTR [rsp+0x20],rax
   140002c25:	lea    rdx,[rip+0x38d4]        # 0x140006500
   140002c2c:	mov    rcx,0xffffffff80000001
   140002c33:	xor    edi,edi
   140002c35:	call   QWORD PTR [rip+0x3405]        # 0x140006040
   140002c3b:	test   eax,eax
   140002c3d:	jne    0x140002f0b
   140002c43:	mov    rcx,QWORD PTR [rbp+0x48]
   140002c47:	lea    rax,[rbp+0x30]
   140002c4b:	mov    QWORD PTR [rsp+0x28],rax
   140002c50:	lea    r14d,[rdi+0x4]
   140002c54:	lea    rax,[rbp+0x40]
   140002c58:	mov    DWORD PTR [rbp+0x30],r14d
   140002c5c:	lea    r9,[rbp+0x38]
   140002c60:	mov    QWORD PTR [rsp+0x20],rax
   140002c65:	xor    r8d,r8d
   140002c68:	lea    rdx,[rip+0x3931]        # 0x1400065a0
   140002c6f:	call   QWORD PTR [rip+0x339b]        # 0x140006010
   140002c75:	test   eax,eax
   140002c77:	jne    0x140002ece
   140002c7d:	cmp    DWORD PTR [rbp+0x40],edi
   140002c80:	je     0x140002ea5
   140002c86:	mov    rcx,QWORD PTR [rip+0x53e3]        # 0x140008070
   140002c8d:	lea    rbx,[rip+0x53dc]        # 0x140008070
   140002c94:	cmp    rcx,rbx
   140002c97:	je     0x140002cab
   140002c99:	test   BYTE PTR [rcx+0x1c],r14b
   140002c9d:	je     0x140002cab
   140002c9f:	mov    rcx,QWORD PTR [rcx+0x10]
   140002ca3:	lea    edx,[rdi+0x2f]
   140002ca6:	call   0x1400011cc
   140002cab:	mov    rcx,QWORD PTR [rbp+0x48]
   140002caf:	lea    rax,[rbp+0x30]
   140002cb3:	mov    QWORD PTR [rsp+0x28],rax
   140002cb8:	lea    r9,[rbp+0x38]
   140002cbc:	lea    rax,[rip+0x5371]        # 0x140008034
   140002cc3:	mov    DWORD PTR [rbp+0x30],r14d
   140002cc7:	xor    r8d,r8d
   140002cca:	mov    QWORD PTR [rsp+0x20],rax
   140002ccf:	lea    rdx,[rip+0x38f2]        # 0x1400065c8
   140002cd6:	call   QWORD PTR [rip+0x3334]        # 0x140006010
   140002cdc:	mov    rcx,QWORD PTR [rip+0x538d]        # 0x140008070
   140002ce3:	cmp    rcx,rbx
   140002ce6:	je     0x140002d0a
   140002ce8:	test   BYTE PTR [rcx+0x1c],r14b
   140002cec:	je     0x140002d0a
   140002cee:	mov    r9d,DWORD PTR [rip+0x533f]        # 0x140008034
   140002cf5:	lea    r8,[rip+0x3a94]        # 0x140006790
   140002cfc:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d00:	mov    edx,0x30
   140002d05:	call   0x1400011f8
   140002d0a:	mov    rcx,QWORD PTR [rbp+0x48]
   140002d0e:	lea    rax,[rbp+0x30]
   140002d12:	mov    QWORD PTR [rsp+0x28],rax
   140002d17:	lea    r9,[rbp+0x38]
   140002d1b:	lea    rax,[rip+0x5ac2]        # 0x1400087e4
   140002d22:	mov    DWORD PTR [rbp+0x30],r14d
   140002d26:	xor    r8d,r8d
   140002d29:	mov    QWORD PTR [rsp+0x20],rax
   140002d2e:	lea    rdx,[rip+0x38b3]        # 0x1400065e8
   140002d35:	call   QWORD PTR [rip+0x32d5]        # 0x140006010
   140002d3b:	mov    rcx,QWORD PTR [rip+0x532e]        # 0x140008070
   140002d42:	lea    r15,[rip+0x377f]        # 0x1400064c8
   140002d49:	lea    rdi,[rip+0x3788]        # 0x1400064d8
   140002d50:	cmp    rcx,rbx
   140002d53:	je     0x140002d77
   140002d55:	test   BYTE PTR [rcx+0x1c],r14b
   140002d59:	je     0x140002d77
   140002d5b:	cmp    DWORD PTR [rip+0x5a82],0x0        # 0x1400087e4
   140002d62:	mov    r9,rdi
   140002d65:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d69:	mov    edx,0x31
   140002d6e:	cmovne r9,r15
   140002d72:	call   0x1400012e8
   140002d77:	mov    rcx,QWORD PTR [rbp+0x48]
   140002d7b:	lea    rax,[rbp+0x30]
   140002d7f:	mov    QWORD PTR [rsp+0x28],rax
   140002d84:	lea    r9,[rbp+0x38]
   140002d88:	lea    rax,[rip+0x5a61]        # 0x1400087f0
   140002d8f:	mov    DWORD PTR [rbp+0x30],r14d
   140002d93:	xor    r8d,r8d
   140002d96:	mov    QWORD PTR [rsp+0x20],rax
   140002d9b:	lea    rdx,[rip+0x3876]        # 0x140006618
   140002da2:	call   QWORD PTR [rip+0x3268]        # 0x140006010
   140002da8:	mov    rcx,QWORD PTR [rip+0x52c1]        # 0x140008070
   140002daf:	cmp    rcx,rbx
   140002db2:	je     0x140002dd6
   140002db4:	test   BYTE PTR [rcx+0x1c],r14b
   140002db8:	je     0x140002dd6
   140002dba:	cmp    DWORD PTR [rip+0x5a2f],0x0        # 0x1400087f0
   140002dc1:	mov    edx,0x32
   140002dc6:	mov    rcx,QWORD PTR [rcx+0x10]
   140002dca:	cmovne rdi,r15
   140002dce:	mov    r9,rdi
   140002dd1:	call   0x1400012e8
   140002dd6:	cmp    DWORD PTR [rip+0x5a13],0x0        # 0x1400087f0
   140002ddd:	je     0x140002e55
   140002ddf:	mov    rcx,QWORD PTR [rbp+0x48]
   140002de3:	lea    rax,[rbp+0x30]
   140002de7:	mov    QWORD PTR [rsp+0x28],rax
   140002dec:	lea    r9,[rbp+0x38]
   140002df0:	lea    rax,[rip+0x5271]        # 0x140008068
   140002df7:	mov    DWORD PTR [rbp+0x30],r14d
   140002dfb:	xor    r8d,r8d
   140002dfe:	mov    QWORD PTR [rsp+0x20],rax
   140002e03:	lea    rdx,[rip+0x3826]        # 0x140006630
   140002e0a:	call   QWORD PTR [rip+0x3200]        # 0x140006010
   140002e10:	test   eax,eax
   140002e12:	jne    0x140002e55
   140002e14:	mov    r9d,DWORD PTR [rip+0x524d]        # 0x140008068
   140002e1b:	mov    eax,0x5a0
   140002e20:	cmp    r9d,eax
   140002e23:	cmova  r9d,eax
   140002e27:	mov    DWORD PTR [rip+0x523a],r9d        # 0x140008068
   140002e2e:	mov    rcx,QWORD PTR [rip+0x523b]        # 0x140008070
   140002e35:	cmp    rcx,rbx
   140002e38:	je     0x140002e55
   140002e3a:	test   BYTE PTR [rcx+0x1c],r14b
   140002e3e:	je     0x140002e55
   140002e40:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e44:	lea    r8,[rip+0x3945]        # 0x140006790
   140002e4b:	mov    edx,0x33
   140002e50:	call   0x1400011f8
   140002e55:	mov    rcx,QWORD PTR [rbp+0x48]
   140002e59:	call   0x1400028d0
   140002e5e:	mov    edi,eax
   140002e60:	test   eax,eax
   140002e62:	je     0x140002e8c
   140002e64:	mov    rcx,QWORD PTR [rip+0x5955]        # 0x1400087c0
   140002e6b:	test   rcx,rcx
   140002e6e:	je     0x140002e7e
   140002e70:	call   QWORD PTR [rip+0x32ca]        # 0x140006140
   140002e76:	and    QWORD PTR [rip+0x5942],0x0        # 0x1400087c0
   140002e7e:	call   0x140003ed0
   140002e83:	mov    QWORD PTR [rip+0x5936],rax        # 0x1400087c0
   140002e8a:	jmp    0x140002eff
   140002e8c:	mov    rcx,QWORD PTR [rip+0x51dd]        # 0x140008070
   140002e93:	cmp    rcx,rbx
   140002e96:	je     0x140002eff
   140002e98:	test   BYTE PTR [rcx+0x1c],0x2
   140002e9c:	je     0x140002eff
   140002e9e:	mov    edx,0x34
   140002ea3:	jmp    0x140002ec3
   140002ea5:	mov    rcx,QWORD PTR [rip+0x51c4]        # 0x140008070
   140002eac:	lea    rbx,[rip+0x51bd]        # 0x140008070
   140002eb3:	cmp    rcx,rbx
   140002eb6:	je     0x140002eff
   140002eb8:	test   BYTE PTR [rcx+0x1c],r14b
   140002ebc:	je     0x140002eff
   140002ebe:	mov    edx,0x35
   140002ec3:	mov    rcx,QWORD PTR [rcx+0x10]
   140002ec7:	call   0x1400011cc
   140002ecc:	jmp    0x140002eff
   140002ece:	mov    rcx,QWORD PTR [rip+0x519b]        # 0x140008070
   140002ed5:	lea    rbx,[rip+0x5194]        # 0x140008070
   140002edc:	cmp    rcx,rbx
   140002edf:	je     0x140002eff
   140002ee1:	test   BYTE PTR [rcx+0x1c],0x2
   140002ee5:	je     0x140002eff
   140002ee7:	mov    rcx,QWORD PTR [rcx+0x10]
   140002eeb:	lea    r8,[rip+0x389e]        # 0x140006790
   140002ef2:	mov    edx,0x36
   140002ef7:	mov    r9d,eax
   140002efa:	call   0x1400011f8
   140002eff:	mov    rcx,QWORD PTR [rbp+0x48]
   140002f03:	call   QWORD PTR [rip+0x3147]        # 0x140006050
   140002f09:	jmp    0x140002f3c
   140002f0b:	mov    rcx,QWORD PTR [rip+0x515e]        # 0x140008070
   140002f12:	lea    rbx,[rip+0x5157]        # 0x140008070
   140002f19:	cmp    rcx,rbx
   140002f1c:	je     0x140002f3c
   140002f1e:	test   BYTE PTR [rcx+0x1c],0x2
   140002f22:	je     0x140002f3c
   140002f24:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f28:	lea    r8,[rip+0x3861]        # 0x140006790
   140002f2f:	mov    edx,0x37
   140002f34:	mov    r9d,eax
   140002f37:	call   0x1400011f8
   140002f3c:	mov    eax,edi
   140002f3e:	add    rsp,0x30
   140002f42:	pop    r15
   140002f44:	pop    r14
   140002f46:	pop    rdi
   140002f47:	pop    rbx
   140002f48:	pop    rbp
   140002f49:	ret    
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	rex push rbp
   140002f52:	push   rbx
   140002f53:	push   rsi
   140002f54:	push   rdi
   140002f55:	lea    rbp,[rsp-0x8a8]
   140002f5d:	sub    rsp,0x9a8
   140002f64:	mov    rax,QWORD PTR [rip+0x509d]        # 0x140008008
   140002f6b:	xor    rax,rsp
   140002f6e:	mov    QWORD PTR [rbp+0x890],rax
   140002f75:	mov    rax,QWORD PTR [rbp+0x8f0]
   140002f7c:	mov    rsi,rcx
   140002f7f:	or     QWORD PTR [rsp+0x48],0xffffffffffffffff
   140002f85:	mov    edi,0x1
   140002f8a:	mov    QWORD PTR [rsp+0x50],r8
   140002f8f:	lea    r8,[rsp+0x30]
   140002f94:	mov    QWORD PTR [rsp+0x68],rax
   140002f99:	mov    QWORD PTR [rsp+0x40],r9
   140002f9e:	mov    DWORD PTR [rsp+0x34],edx
   140002fa2:	mov    QWORD PTR [rsp+0x60],rcx
   140002fa7:	call   0x140004394
   140002fac:	mov    QWORD PTR [rsp+0x58],rax
   140002fb1:	test   rax,rax
   140002fb4:	je     0x1400034e8
   140002fba:	mov    edx,DWORD PTR [rsp+0x30]
   140002fbe:	lea    r8,[rip+0x368b]        # 0x140006650
   140002fc5:	mov    rcx,rax
   140002fc8:	call   0x140001008
   140002fcd:	xor    r9d,r9d
   140002fd0:	test   eax,eax
   140002fd2:	js     0x140003043
   140002fd4:	lea    rdx,[rbp-0x30]
   140002fd8:	mov    rcx,rsi
   140002fdb:	call   QWORD PTR [rip+0x30df]        # 0x1400060c0
   140002fe1:	mov    QWORD PTR [rsp+0x48],rax
   140002fe6:	cmp    rax,0xffffffffffffffff
   140002fea:	jne    0x14000304b
   140002fec:	call   QWORD PTR [rip+0x30e6]        # 0x1400060d8
   140002ff2:	cmp    eax,0x2
   140002ff5:	je     0x1400034c6
   140002ffb:	call   QWORD PTR [rip+0x30d7]        # 0x1400060d8
   140003001:	cmp    eax,0x3
   140003004:	je     0x1400034c6
   14000300a:	mov    rax,QWORD PTR [rip+0x505f]        # 0x140008070
   140003011:	lea    rcx,[rip+0x5058]        # 0x140008070
   140003018:	cmp    rax,rcx
   14000301b:	je     0x140003040
   14000301d:	test   BYTE PTR [rax+0x1c],0x2
   140003021:	je     0x140003040
   140003023:	call   QWORD PTR [rip+0x30af]        # 0x1400060d8
   140003029:	mov    rcx,QWORD PTR [rip+0x5040]        # 0x140008070
   140003030:	mov    r9,rsi
   140003033:	mov    DWORD PTR [rsp+0x20],eax
   140003037:	mov    rcx,QWORD PTR [rcx+0x10]
   14000303b:	call   0x140001454
   140003040:	xor    r9d,r9d
   140003043:	mov    edi,r9d
   140003046:	jmp    0x1400034c9
   14000304b:	lea    rbx,[rip+0x501e]        # 0x140008070
   140003052:	xor    r9d,r9d
   140003055:	mov    r10d,0x7fffffff
   14000305b:	lea    rax,[rbp-0x4]
   14000305f:	mov    ecx,r10d
   140003062:	cmp    WORD PTR [rax],r9w
   140003066:	je     0x140003071
   140003068:	add    rax,0x2
   14000306c:	sub    rcx,rdi
   14000306f:	jne    0x140003062
   140003071:	test   rcx,rcx
   140003074:	je     0x140003043
   140003076:	mov    rax,r10
   140003079:	sub    rax,rcx
   14000307c:	mov    r8d,eax
   14000307f:	test   rsi,rsi
   140003082:	je     0x1400030a8
   140003084:	mov    rcx,r10
   140003087:	mov    rax,rsi
   14000308a:	mov    edx,r9d
   14000308d:	cmp    WORD PTR [rax],r9w
   140003091:	je     0x14000309c
   140003093:	add    rax,0x2
   140003097:	sub    rcx,rdi
   14000309a:	jne    0x14000308d
   14000309c:	test   rcx,rcx
   14000309f:	jne    0x140003195
   1400030a5:	mov    rax,r9
   1400030a8:	mov    edx,0x80070057
   1400030ad:	test   edx,edx
   1400030af:	js     0x140003043
   1400030b1:	add    r8d,eax
   1400030b4:	mov    rcx,r10
   1400030b7:	lea    rax,[rip+0x359a]        # 0x140006658
   1400030be:	cmp    WORD PTR [rax],r9w
   1400030c2:	je     0x1400030cd
   1400030c4:	add    rax,0x2
   1400030c8:	sub    rcx,rdi
   1400030cb:	jne    0x1400030be
   1400030cd:	test   rcx,rcx
   1400030d0:	je     0x140003043
   1400030d6:	mov    rax,r10
   1400030d9:	sub    rax,rcx
   1400030dc:	inc    eax
   1400030de:	add    eax,r8d
   1400030e1:	cmp    eax,DWORD PTR [rsp+0x34]
   1400030e5:	jae    0x140003474
   1400030eb:	mov    edx,DWORD PTR [rsp+0x30]
   1400030ef:	lea    r8,[rbp-0x4]
   1400030f3:	mov    rcx,QWORD PTR [rsp+0x58]
   1400030f8:	call   0x140001008
   1400030fd:	xor    r9d,r9d
   140003100:	test   eax,eax
   140003102:	js     0x140003043
   140003108:	test   BYTE PTR [rbp-0x30],0x10
   14000310c:	je     0x140003289
   140003112:	or     r9d,0xffffffff
   140003116:	mov    DWORD PTR [rsp+0x20],edi
   14000311a:	or     edx,r9d
   14000311d:	lea    r8,[rip+0x3540]        # 0x140006664
   140003124:	lea    rcx,[rbp-0x4]
   140003128:	call   QWORD PTR [rip+0x2f72]        # 0x1400060a0
   14000312e:	cmp    eax,0x2
   140003131:	je     0x140003474
   140003137:	or     r9d,0xffffffff
   14000313b:	mov    DWORD PTR [rsp+0x20],edi
   14000313f:	or     edx,r9d
   140003142:	lea    r8,[rip+0x351f]        # 0x140006668
   140003149:	lea    rcx,[rbp-0x4]
   14000314d:	call   QWORD PTR [rip+0x2f4d]        # 0x1400060a0
   140003153:	cmp    eax,0x2
   140003156:	je     0x140003474
   14000315c:	test   DWORD PTR [rbp-0x30],0x400
   140003163:	je     0x1400031a0
   140003165:	mov    rcx,QWORD PTR [rip+0x4f04]        # 0x140008070
   14000316c:	cmp    rcx,rbx
   14000316f:	je     0x140003474
   140003175:	test   BYTE PTR [rcx+0x1c],0x4
   140003179:	je     0x140003474
   14000317f:	mov    edx,0x39
   140003184:	mov    rcx,QWORD PTR [rcx+0x10]
   140003188:	mov    r9,rsi
   14000318b:	call   0x1400012e8
   140003190:	jmp    0x140003474
   140003195:	mov    rax,r10
   140003198:	sub    rax,rcx
   14000319b:	jmp    0x1400030ad
   1400031a0:	mov    rax,QWORD PTR [rsp+0x68]
   1400031a5:	xor    ecx,ecx
   1400031a7:	test   rax,rax
   1400031aa:	je     0x140003219
   1400031ac:	mov    rbx,rax
   1400031af:	cmp    WORD PTR [rax],cx
   1400031b2:	je     0x140003212
   1400031b4:	or     r9d,0xffffffff
   1400031b8:	mov    DWORD PTR [rsp+0x20],edi
   1400031bc:	or     edx,r9d
   1400031bf:	mov    r8,rsi
   1400031c2:	mov    rcx,rbx
   1400031c5:	call   QWORD PTR [rip+0x2ed5]        # 0x1400060a0
   1400031cb:	cmp    eax,0x2
   1400031ce:	je     0x14000325e
   1400031d4:	mov    edx,0x7fffffff
   1400031d9:	mov    rax,rbx
   1400031dc:	mov    ecx,edx
   1400031de:	xor    r9d,r9d
   1400031e1:	cmp    WORD PTR [rax],r9w
   1400031e5:	je     0x1400031f0
   1400031e7:	add    rax,0x2
   1400031eb:	sub    rcx,rdi
   1400031ee:	jne    0x1400031e1
   1400031f0:	test   rcx,rcx
   1400031f3:	je     0x14000348f
   1400031f9:	mov    rax,rdx
   1400031fc:	sub    rax,rcx
   1400031ff:	lea    rbx,[rbx+rax*2]
   140003203:	add    rbx,0x2
   140003207:	cmp    WORD PTR [rbx],r9w
   14000320b:	jne    0x1400031b4
   14000320d:	mov    rax,QWORD PTR [rsp+0x68]
   140003212:	lea    rbx,[rip+0x4e57]        # 0x140008070
   140003219:	mov    r9,QWORD PTR [rsp+0x40]
   14000321e:	mov    rcx,rsi
   140003221:	mov    r8,QWORD PTR [rsp+0x50]
   140003226:	mov    edx,DWORD PTR [rsp+0x34]
   14000322a:	mov    QWORD PTR [rsp+0x20],rax
   14000322f:	call   0x140002f50
   140003234:	test   eax,eax
   140003236:	jne    0x140003474
   14000323c:	mov    rcx,QWORD PTR [rip+0x4e2d]        # 0x140008070
   140003243:	cmp    rcx,rbx
   140003246:	je     0x140003474
   14000324c:	test   BYTE PTR [rcx+0x1c],0x2
   140003250:	je     0x140003474
   140003256:	lea    edx,[rax+0x3c]
   140003259:	jmp    0x140003184
   14000325e:	mov    rcx,QWORD PTR [rip+0x4e0b]        # 0x140008070
   140003265:	lea    rbx,[rip+0x4e04]        # 0x140008070
   14000326c:	cmp    rcx,rbx
   14000326f:	je     0x140003474
   140003275:	test   BYTE PTR [rcx+0x1c],0x4
   140003279:	je     0x140003474
   14000327f:	mov    edx,0x3b
   140003284:	jmp    0x140003184
   140003289:	mov    eax,DWORD PTR [rbp-0x10]
   14000328c:	mov    DWORD PTR [rsp+0x38],eax
   140003290:	mov    eax,DWORD PTR [rbp-0x14]
   140003293:	mov    DWORD PTR [rsp+0x3c],eax
   140003297:	mov    rbx,QWORD PTR [rsp+0x38]
   14000329c:	add    QWORD PTR [rip+0x5515],rbx        # 0x1400087b8
   1400032a3:	mov    rcx,QWORD PTR [rip+0x4dc6]        # 0x140008070
   1400032aa:	lea    r8,[rip+0x4dbf]        # 0x140008070
   1400032b1:	cmp    rcx,r8
   1400032b4:	je     0x1400032df
   1400032b6:	test   BYTE PTR [rcx+0x1c],0x8
   1400032ba:	je     0x1400032df
   1400032bc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400032c0:	lea    rax,[rbp-0x4]
   1400032c4:	mov    QWORD PTR [rsp+0x20],rax
   1400032c9:	call   0x140001234
   1400032ce:	mov    rcx,QWORD PTR [rip+0x4d9b]        # 0x140008070
   1400032d5:	lea    r8,[rip+0x4d94]        # 0x140008070
   1400032dc:	xor    r9d,r9d
   1400032df:	cmp    QWORD PTR [rsp+0x40],r9
   1400032e4:	je     0x14000346d
   1400032ea:	mov    r10d,0x7fffffff
   1400032f0:	lea    rax,[rbp-0x4]
   1400032f4:	mov    edx,r10d
   1400032f7:	mov    esi,edi
   1400032f9:	cmp    WORD PTR [rax],r9w
   1400032fd:	je     0x140003308
   1400032ff:	add    rax,0x2
   140003303:	sub    rdx,rdi
   140003306:	jne    0x1400032f9
   140003308:	test   rdx,rdx
   14000330b:	je     0x140003503
   140003311:	mov    rax,r10
   140003314:	sub    rax,rdx
   140003317:	cmp    rax,0x6
   14000331b:	jb     0x140003365
   14000331d:	mov    r9d,0x6
   140003323:	mov    DWORD PTR [rsp+0x28],0x6
   14000332b:	lea    rax,[rbp-0x4]
   14000332f:	mov    edx,edi
   140003331:	lea    r8,[rip+0x3338]        # 0x140006670
   140003338:	mov    QWORD PTR [rsp+0x20],rax
   14000333d:	lea    ecx,[r9+0x79]
   140003341:	call   QWORD PTR [rip+0x2e29]        # 0x140006170
   140003347:	xor    r9d,r9d
   14000334a:	cmp    eax,0x2
   14000334d:	jne    0x140003365
   14000334f:	cmp    DWORD PTR [rip+0x548e],r9d        # 0x1400087e4
   140003356:	mov    esi,r9d
   140003359:	setne  sil
   14000335d:	test   esi,esi
   14000335f:	je     0x140003468
   140003365:	cmp    DWORD PTR [rip+0x536c],r9d        # 0x1400086d8
   14000336c:	je     0x14000337f
   14000336e:	cmp    DWORD PTR [rbp-0x14],r9d
   140003372:	jne    0x14000337f
   140003374:	cmp    DWORD PTR [rbp-0x10],0x800
   14000337b:	cmovbe esi,r9d
   14000337f:	test   esi,esi
   140003381:	je     0x140003468
   140003387:	cmp    rbx,0x400
   14000338e:	ja     0x140003395
   140003390:	mov    rbx,rdi
   140003393:	jmp    0x140003399
   140003395:	shr    rbx,0xa
   140003399:	mov    r9,rbx
   14000339c:	mov    QWORD PTR [rsp+0x38],rbx
   1400033a1:	lea    r8,[rip+0x5288]        # 0x140008630
   1400033a8:	mov    edx,0x28
   1400033ad:	lea    rcx,[rbp+0x220]
   1400033b4:	call   0x14000114c
   1400033b9:	xor    r9d,r9d
   1400033bc:	test   eax,eax
   1400033be:	js     0x140003043
   1400033c4:	mov    rsi,QWORD PTR [rsp+0x60]
   1400033c9:	lea    r8,[rbp+0x270]
   1400033d0:	mov    rdx,QWORD PTR [rsp+0x50]
   1400033d5:	mov    rcx,rsi
   1400033d8:	mov    QWORD PTR [rsp+0x70],0xd
   1400033e1:	mov    QWORD PTR [rsp+0x78],r9
   1400033e6:	mov    DWORD PTR [rbp-0x80],0x3
   1400033ed:	call   0x140003c7c
   1400033f2:	test   eax,eax
   1400033f4:	lea    rcx,[rbp+0x270]
   1400033fb:	mov    eax,DWORD PTR [rbp-0x10]
   1400033fe:	lea    r9,[rsp+0x70]
   140003403:	cmove  rcx,QWORD PTR [rsp+0x50]
   140003409:	mov    edx,0x104d
   14000340e:	mov    QWORD PTR [rbp-0x78],rcx
   140003412:	xor    r8d,r8d
   140003415:	mov    rcx,QWORD PTR [rsp+0x40]
   14000341a:	mov    QWORD PTR [rbp-0x68],rax
   14000341e:	call   QWORD PTR [rip+0x2e6c]        # 0x140006290
   140003424:	mov    rcx,QWORD PTR [rsp+0x40]
   140003429:	lea    r9,[rsp+0x70]
   14000342e:	mov    DWORD PTR [rsp+0x74],eax
   140003432:	xor    r8d,r8d
   140003435:	lea    rax,[rbp+0x220]
   14000343c:	mov    DWORD PTR [rsp+0x70],0x9
   140003444:	mov    QWORD PTR [rbp-0x78],rax
   140003448:	mov    edx,0x104c
   14000344d:	mov    eax,DWORD PTR [rbp-0x10]
   140003450:	mov    QWORD PTR [rbp-0x68],rax
   140003454:	mov    QWORD PTR [rsp+0x78],rdi
   140003459:	mov    DWORD PTR [rbp-0x80],0x3
   140003460:	call   QWORD PTR [rip+0x2e2a]        # 0x140006290
   140003466:	jmp    0x14000346d
   140003468:	mov    rsi,QWORD PTR [rsp+0x60]
   14000346d:	lea    rbx,[rip+0x4bfc]        # 0x140008070
   140003474:	mov    rcx,QWORD PTR [rsp+0x48]
   140003479:	lea    rdx,[rbp-0x30]
   14000347d:	call   QWORD PTR [rip+0x2c9d]        # 0x140006120
   140003483:	xor    r9d,r9d
   140003486:	test   eax,eax
   140003488:	je     0x1400034c9
   14000348a:	jmp    0x140003055
   14000348f:	mov    edi,r9d
   140003492:	mov    rcx,QWORD PTR [rip+0x4bd7]        # 0x140008070
   140003499:	lea    rax,[rip+0x4bd0]        # 0x140008070
   1400034a0:	cmp    rcx,rax
   1400034a3:	je     0x1400034c9
   1400034a5:	test   BYTE PTR [rcx+0x1c],0x2
   1400034a9:	je     0x1400034c9
   1400034ab:	mov    edx,0x3a
   1400034b0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400034b4:	lea    r8,[rip+0x32d5]        # 0x140006790
   1400034bb:	mov    r9d,0x80070057
   1400034c1:	call   0x1400011f8
   1400034c6:	xor    r9d,r9d
   1400034c9:	mov    rax,QWORD PTR [rsp+0x58]
   1400034ce:	mov    WORD PTR [rax],r9w
   1400034d2:	mov    rax,QWORD PTR [rsp+0x48]
   1400034d7:	cmp    rax,0xffffffffffffffff
   1400034db:	je     0x1400034e6
   1400034dd:	mov    rcx,rax
   1400034e0:	call   QWORD PTR [rip+0x2c0a]        # 0x1400060f0
   1400034e6:	mov    eax,edi
   1400034e8:	mov    rcx,QWORD PTR [rbp+0x890]
   1400034ef:	xor    rcx,rsp
   1400034f2:	call   0x140004ca0
   1400034f7:	add    rsp,0x9a8
   1400034fe:	pop    rdi
   1400034ff:	pop    rsi
   140003500:	pop    rbx
   140003501:	pop    rbp
   140003502:	ret    
   140003503:	mov    edi,r9d
   140003506:	cmp    rcx,r8
   140003509:	je     0x1400034c9
   14000350b:	test   BYTE PTR [rcx+0x1c],0x4
   14000350f:	je     0x1400034c9
   140003511:	mov    edx,0x3e
   140003516:	jmp    0x1400034b0
   140003518:	int3   
   140003519:	int3   
   14000351a:	int3   
   14000351b:	int3   
   14000351c:	int3   
   14000351d:	int3   
   14000351e:	int3   
   14000351f:	int3   
   140003520:	mov    QWORD PTR [rsp+0x10],rbx
   140003525:	mov    QWORD PTR [rsp+0x18],rsi
   14000352a:	push   rbp
   14000352b:	push   rdi
   14000352c:	push   r14
   14000352e:	mov    rbp,rsp
   140003531:	sub    rsp,0x70
   140003535:	mov    rax,QWORD PTR [rip+0x4acc]        # 0x140008008
   14000353c:	xor    rax,rsp
   14000353f:	mov    QWORD PTR [rbp-0x10],rax
   140003543:	lea    rdx,[rbp-0x30]
   140003547:	mov    rdi,rcx
   14000354a:	call   QWORD PTR [rip+0x2d18]        # 0x140006268
   140003550:	mov    esi,DWORD PTR [rbp-0x28]
   140003553:	mov    edx,0xfffffff0
   140003558:	mov    r14d,DWORD PTR [rbp-0x24]
   14000355c:	mov    rcx,rdi
   14000355f:	sub    esi,DWORD PTR [rbp-0x30]
   140003562:	sub    r14d,DWORD PTR [rbp-0x2c]
   140003566:	call   QWORD PTR [rip+0x2c94]        # 0x140006200
   14000356c:	bt     eax,0x1e
   140003570:	jb     0x14000358b
   140003572:	xor    ecx,ecx
   140003574:	call   QWORD PTR [rip+0x2c96]        # 0x140006210
   14000357a:	mov    ecx,0x1
   14000357f:	mov    ebx,eax
   140003581:	call   QWORD PTR [rip+0x2c89]        # 0x140006210
   140003587:	mov    ecx,eax
   140003589:	jmp    0x1400035b8
   14000358b:	mov    rcx,rdi
   14000358e:	call   QWORD PTR [rip+0x2c94]        # 0x140006228
   140003594:	test   rax,rax
   140003597:	jne    0x14000359f
   140003599:	call   QWORD PTR [rip+0x2c41]        # 0x1400061e0
   14000359f:	lea    rdx,[rbp-0x20]
   1400035a3:	mov    rcx,rax
   1400035a6:	call   QWORD PTR [rip+0x2cbc]        # 0x140006268
   1400035ac:	mov    ebx,DWORD PTR [rbp-0x18]
   1400035af:	sub    ebx,DWORD PTR [rbp-0x20]
   1400035b2:	mov    ecx,DWORD PTR [rbp-0x14]
   1400035b5:	sub    ecx,DWORD PTR [rbp-0x1c]
   1400035b8:	sub    ecx,r14d
   1400035bb:	mov    DWORD PTR [rsp+0x30],0x1
   1400035c3:	and    DWORD PTR [rsp+0x28],0x0
   1400035c8:	sub    ebx,esi
   1400035ca:	and    DWORD PTR [rsp+0x20],0x0
   1400035cf:	mov    eax,ebx
   1400035d1:	cdq    
   1400035d2:	sub    eax,edx
   1400035d4:	sar    eax,1
   1400035d6:	mov    r8d,eax
   1400035d9:	mov    DWORD PTR [rbp-0x30],eax
   1400035dc:	mov    eax,0x55555556
   1400035e1:	imul   ecx
   1400035e3:	mov    rcx,rdi
   1400035e6:	mov    r9d,edx
   1400035e9:	shr    edx,0x1f
   1400035ec:	add    r9d,edx
   1400035ef:	xor    edx,edx
   1400035f1:	mov    DWORD PTR [rbp-0x2c],r9d
   1400035f5:	call   QWORD PTR [rip+0x2bdd]        # 0x1400061d8
   1400035fb:	mov    rcx,QWORD PTR [rbp-0x10]
   1400035ff:	xor    rcx,rsp
   140003602:	call   0x140004ca0
   140003607:	lea    r11,[rsp+0x70]
   14000360c:	mov    rbx,QWORD PTR [r11+0x28]
   140003610:	mov    rsi,QWORD PTR [r11+0x30]
   140003614:	mov    rsp,r11
   140003617:	pop    r14
   140003619:	pop    rdi
   14000361a:	pop    rbp
   14000361b:	ret    
   14000361c:	int3   
   14000361d:	int3   
   14000361e:	int3   
   14000361f:	int3   
   140003620:	int3   
   140003621:	int3   
   140003622:	int3   
   140003623:	int3   
   140003624:	int3   
   140003625:	int3   
   140003626:	int3   
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	mov    rax,rsp
   140003633:	mov    QWORD PTR [rax+0x10],rbx
   140003637:	mov    QWORD PTR [rax+0x18],rsi
   14000363b:	mov    QWORD PTR [rax+0x20],rdi
   14000363f:	push   rbp
   140003640:	lea    rbp,[rax-0x38]
   140003644:	sub    rsp,0x130
   14000364b:	mov    rax,QWORD PTR [rip+0x49b6]        # 0x140008008
   140003652:	xor    rax,rsp
   140003655:	mov    QWORD PTR [rbp+0x20],rax
   140003659:	mov    rsi,rcx
   14000365c:	sub    edx,0x110
   140003662:	je     0x140003877
   140003668:	sub    edx,0x1
   14000366b:	je     0x1400037e7
   140003671:	cmp    edx,0x354
   140003677:	jne    0x140003a54
   14000367d:	mov    r9,QWORD PTR [rip+0x5164]        # 0x1400087e8
   140003684:	lea    r8,[rip+0x4fa5]        # 0x140008630
   14000368b:	mov    edx,0x28
   140003690:	lea    rcx,[rbp-0x80]
   140003694:	call   0x14000114c
   140003699:	test   eax,eax
   14000369b:	js     0x140003a54
   1400036a1:	lea    r8,[rbp-0x80]
   1400036a5:	mov    edx,0x68
   1400036aa:	mov    rcx,rsi
   1400036ad:	call   QWORD PTR [rip+0x2bd5]        # 0x140006288
   1400036b3:	mov    r9d,DWORD PTR [rip+0x497a]        # 0x140008034
   1400036ba:	lea    r8,[rip+0x4f6f]        # 0x140008630
   1400036c1:	mov    edx,0x28
   1400036c6:	lea    rcx,[rbp-0x80]
   1400036ca:	call   0x14000114c
   1400036cf:	test   eax,eax
   1400036d1:	js     0x140003a54
   1400036d7:	lea    r8,[rbp-0x80]
   1400036db:	mov    edx,0x69
   1400036e0:	mov    rcx,rsi
   1400036e3:	call   QWORD PTR [rip+0x2b9f]        # 0x140006288
   1400036e9:	mov    edx,0x3e8
   1400036ee:	mov    ecx,0x40
   1400036f3:	call   QWORD PTR [rip+0x29ff]        # 0x1400060f8
   1400036f9:	mov    rbx,rax
   1400036fc:	test   rax,rax
   1400036ff:	je     0x140003a54
   140003705:	mov    edx,DWORD PTR [rip+0x4929]        # 0x140008034
   14000370b:	mov    r8,QWORD PTR [rip+0x50d6]        # 0x1400087e8
   140003712:	cmp    r8,rdx
   140003715:	jbe    0x140003738
   140003717:	mov    r8,QWORD PTR [rip+0x50b2]        # 0x1400087d0
   14000371e:	mov    edx,0x65
   140003723:	mov    rcx,rsi
   140003726:	call   QWORD PTR [rip+0x2b5c]        # 0x140006288
   14000372c:	mov    r9,QWORD PTR [rip+0x4f7d]        # 0x1400086b0
   140003733:	jmp    0x1400037c8
   140003738:	movsd  xmm2,QWORD PTR [rip+0x3098]        # 0x1400067d8
   140003740:	sub    rdx,r8
   140003743:	xorps  xmm1,xmm1
   140003746:	cvtsi2sd xmm1,rdx
   14000374b:	jns    0x140003751
   14000374d:	addsd  xmm1,xmm2
   140003751:	xorps  xmm0,xmm0
   140003754:	cvtsi2sd xmm0,r8
   140003759:	test   r8,r8
   14000375c:	jns    0x140003762
   14000375e:	addsd  xmm0,xmm2
   140003762:	mulsd  xmm0,QWORD PTR [rip+0x3066]        # 0x1400067d0
   14000376a:	mov    r9d,0x1f4
   140003770:	mov    rcx,QWORD PTR [rip+0x4f41]        # 0x1400086b8
   140003777:	mov    r8,rax
   14000377a:	comisd xmm0,xmm1
   14000377e:	jbe    0x1400037a5
   140003780:	mov    edx,0x8
   140003785:	call   QWORD PTR [rip+0x2a35]        # 0x1400061c0
   14000378b:	mov    r8,rbx
   14000378e:	mov    edx,0x65
   140003793:	mov    rcx,rsi
   140003796:	call   QWORD PTR [rip+0x2aec]        # 0x140006288
   14000379c:	mov    r9,QWORD PTR [rip+0x4f1d]        # 0x1400086c0
   1400037a3:	jmp    0x1400037c8
   1400037a5:	mov    edx,0x7
   1400037aa:	call   QWORD PTR [rip+0x2a10]        # 0x1400061c0
   1400037b0:	mov    r8,rbx
   1400037b3:	mov    edx,0x65
   1400037b8:	mov    rcx,rsi
   1400037bb:	call   QWORD PTR [rip+0x2ac7]        # 0x140006288
   1400037c1:	mov    r9,QWORD PTR [rip+0x4f00]        # 0x1400086c8
   1400037c8:	and    QWORD PTR [rsp+0x20],0x0
   1400037ce:	mov    r8d,0x170
   1400037d4:	mov    edx,0x6a
   1400037d9:	mov    rcx,rsi
   1400037dc:	call   QWORD PTR [rip+0x2a06]        # 0x1400061e8
   1400037e2:	jmp    0x140003a4b
   1400037e7:	mov    ebx,0x1
   1400037ec:	movzx  eax,r8w
   1400037f0:	sub    ax,bx
   1400037f3:	cmp    ax,bx
   1400037f6:	jbe    0x140003823
   1400037f8:	lea    edx,[rbx+0x66]
   1400037fb:	cmp    r8w,dx
   1400037ff:	jne    0x140003a54
   140003805:	call   QWORD PTR [rip+0x29ad]        # 0x1400061b8
   14000380b:	mov    rcx,QWORD PTR [rip+0x4ebe]        # 0x1400086d0
   140003812:	mov    DWORD PTR [rip+0x4ec0],eax        # 0x1400086d8
   140003818:	call   QWORD PTR [rip+0x287a]        # 0x140006098
   14000381e:	jmp    0x140003a54
   140003823:	and    QWORD PTR [rip+0x4fad],0x0        # 0x1400087d8
   14000382b:	mov    eax,DWORD PTR [rip+0x4803]        # 0x140008034
   140003831:	mov    rcx,QWORD PTR [rip+0x4fb0]        # 0x1400087e8
   140003838:	cmp    rcx,rax
   14000383b:	jae    0x140003863
   14000383d:	cmp    DWORD PTR [rip+0x4e98],0x0        # 0x1400086dc
   140003844:	je     0x140003863
   140003846:	test   rcx,rcx
   140003849:	je     0x140003863
   14000384b:	mov    rcx,QWORD PTR [rip+0x4e56]        # 0x1400086a8
   140003852:	xor    r9d,r9d
   140003855:	xor    r8d,r8d
   140003858:	mov    edx,0x466
   14000385d:	call   QWORD PTR [rip+0x29e5]        # 0x140006248
   140003863:	mov    rdx,rbx
   140003866:	mov    rcx,rsi
   140003869:	call   QWORD PTR [rip+0x2981]        # 0x1400061f0
   14000386f:	mov    rax,rbx
   140003872:	jmp    0x140003a56
   140003877:	mov    edx,0x66
   14000387c:	call   QWORD PTR [rip+0x2976]        # 0x1400061f8
   140003882:	mov    rcx,rax
   140003885:	lea    rdx,[rsp+0x68]
   14000388a:	mov    rdi,rax
   14000388d:	call   QWORD PTR [rip+0x2985]        # 0x140006218
   140003893:	imul   ecx,DWORD PTR [rsp+0x70],0x1f
   140003898:	lea    r8,[rbp-0x30]
   14000389c:	mov    eax,0x66666667
   1400038a1:	mov    r9d,0x28
   1400038a7:	imul   ecx
   1400038a9:	mov    ebx,edx
   1400038ab:	lea    edx,[r9-0x24]
   1400038af:	sar    ebx,0x4
   1400038b2:	mov    ecx,ebx
   1400038b4:	shr    ecx,0x1f
   1400038b7:	add    ebx,ecx
   1400038b9:	mov    rcx,QWORD PTR [rip+0x4df8]        # 0x1400086b8
   1400038c0:	call   QWORD PTR [rip+0x28fa]        # 0x1400061c0
   1400038c6:	and    DWORD PTR [rsp+0x34],0x0
   1400038cb:	lea    rax,[rbp-0x30]
   1400038cf:	and    DWORD PTR [rsp+0x4c],0x0
   1400038d4:	lea    r9,[rsp+0x30]
   1400038d9:	xor    r8d,r8d
   1400038dc:	mov    QWORD PTR [rsp+0x40],rax
   1400038e1:	mov    edx,0x1061
   1400038e6:	mov    DWORD PTR [rsp+0x30],0xf
   1400038ee:	mov    rcx,rdi
   1400038f1:	mov    DWORD PTR [rsp+0x38],ebx
   1400038f5:	call   QWORD PTR [rip+0x2995]        # 0x140006290
   1400038fb:	mov    rcx,QWORD PTR [rip+0x4db6]        # 0x1400086b8
   140003902:	lea    r8,[rbp-0x30]
   140003906:	mov    r9d,0x28
   14000390c:	lea    edx,[r9-0x23]
   140003910:	call   QWORD PTR [rip+0x28aa]        # 0x1400061c0
   140003916:	mov    ecx,0x3
   14000391b:	call   QWORD PTR [rip+0x28ef]        # 0x140006210
   140003921:	mov    ecx,DWORD PTR [rsp+0x70]
   140003925:	lea    r9,[rsp+0x30]
   14000392a:	sub    ecx,ebx
   14000392c:	mov    edx,0x1061
   140003931:	sub    ecx,eax
   140003933:	mov    ebx,0x1
   140003938:	mov    DWORD PTR [rsp+0x38],ecx
   14000393c:	mov    r8d,ebx
   14000393f:	mov    rcx,rdi
   140003942:	mov    DWORD PTR [rsp+0x34],ebx
   140003946:	mov    DWORD PTR [rsp+0x4c],ebx
   14000394a:	call   QWORD PTR [rip+0x2940]        # 0x140006290
   140003950:	mov    r8d,ebx
   140003953:	mov    DWORD PTR [rip+0x4d7f],ebx        # 0x1400086d8
   140003959:	lea    edx,[rbx+0x66]
   14000395c:	mov    rcx,rsi
   14000395f:	call   QWORD PTR [rip+0x2863]        # 0x1400061c8
   140003965:	mov    rcx,rsi
   140003968:	call   0x140003520
   14000396d:	mov    rcx,rsi
   140003970:	call   QWORD PTR [rip+0x28c2]        # 0x140006238
   140003976:	mov    edx,0x3e8
   14000397b:	lea    ecx,[rbx+0x3f]
   14000397e:	call   QWORD PTR [rip+0x2774]        # 0x1400060f8
   140003984:	mov    rbx,rax
   140003987:	test   rax,rax
   14000398a:	je     0x140003a54
   140003990:	mov    rcx,QWORD PTR [rip+0x4d21]        # 0x1400086b8
   140003997:	mov    r9d,0x1f4
   14000399d:	mov    r8,rax
   1400039a0:	mov    edx,0xc
   1400039a5:	call   QWORD PTR [rip+0x2815]        # 0x1400061c0
   1400039ab:	mov    r8,rbx
   1400039ae:	mov    edx,0x65
   1400039b3:	mov    rcx,rsi
   1400039b6:	call   QWORD PTR [rip+0x28cc]        # 0x140006288
   1400039bc:	mov    eax,DWORD PTR [rip+0x4672]        # 0x140008034
   1400039c2:	mov    rcx,QWORD PTR [rip+0x4e1f]        # 0x1400087e8
   1400039c9:	cmp    rcx,rax
   1400039cc:	jbe    0x1400039d7
   1400039ce:	mov    r9,QWORD PTR [rip+0x4cdb]        # 0x1400086b0
   1400039d5:	jmp    0x140003a1d
   1400039d7:	movsd  xmm2,QWORD PTR [rip+0x2df9]        # 0x1400067d8
   1400039df:	sub    rax,rcx
   1400039e2:	xorps  xmm1,xmm1
   1400039e5:	cvtsi2sd xmm1,rax
   1400039ea:	jns    0x1400039f0
   1400039ec:	addsd  xmm1,xmm2
   1400039f0:	xorps  xmm0,xmm0
   1400039f3:	cvtsi2sd xmm0,rcx
   1400039f8:	test   rcx,rcx
   1400039fb:	jns    0x140003a01
   1400039fd:	addsd  xmm0,xmm2
   140003a01:	mulsd  xmm0,QWORD PTR [rip+0x2dc7]        # 0x1400067d0
   140003a09:	mov    r9,QWORD PTR [rip+0x4cb0]        # 0x1400086c0
   140003a10:	comisd xmm0,xmm1
   140003a14:	ja     0x140003a1d
   140003a16:	mov    r9,QWORD PTR [rip+0x4cab]        # 0x1400086c8
   140003a1d:	and    QWORD PTR [rsp+0x20],0x0
   140003a23:	mov    r8d,0x170
   140003a29:	mov    edx,0x6a
   140003a2e:	mov    rcx,rsi
   140003a31:	call   QWORD PTR [rip+0x27b1]        # 0x1400061e8
   140003a37:	mov    rcx,QWORD PTR [rip+0x4c92]        # 0x1400086d0
   140003a3e:	mov    QWORD PTR [rip+0x4d93],rsi        # 0x1400087d8
   140003a45:	call   QWORD PTR [rip+0x264d]        # 0x140006098
   140003a4b:	mov    rcx,rbx
   140003a4e:	call   QWORD PTR [rip+0x26ec]        # 0x140006140
   140003a54:	xor    eax,eax
   140003a56:	mov    rcx,QWORD PTR [rbp+0x20]
   140003a5a:	xor    rcx,rsp
   140003a5d:	call   0x140004ca0
   140003a62:	lea    r11,[rsp+0x130]
   140003a6a:	mov    rbx,QWORD PTR [r11+0x18]
   140003a6e:	mov    rsi,QWORD PTR [r11+0x20]
   140003a72:	mov    rdi,QWORD PTR [r11+0x28]
   140003a76:	mov    rsp,r11
   140003a79:	pop    rbp
   140003a7a:	ret    
   140003a7b:	int3   
   140003a7c:	int3   
   140003a7d:	int3   
   140003a7e:	int3   
   140003a7f:	int3   
   140003a80:	int3   
   140003a81:	int3   
   140003a82:	int3   
   140003a83:	int3   
   140003a84:	int3   
   140003a85:	int3   
   140003a86:	int3   
   140003a87:	int3   
   140003a88:	int3   
   140003a89:	int3   
   140003a8a:	int3   
   140003a8b:	int3   
   140003a8c:	int3   
   140003a8d:	int3   
   140003a8e:	int3   
   140003a8f:	int3   
   140003a90:	cmp    rcx,rdx
   140003a93:	jge    0x140003a9b
   140003a95:	mov    eax,0x1
   140003a9a:	ret    
   140003a9b:	sub    rcx,rdx
   140003a9e:	neg    rcx
   140003aa1:	sbb    eax,eax
   140003aa3:	ret    
   140003aa4:	int3   
   140003aa5:	int3   
   140003aa6:	int3   
   140003aa7:	int3   
   140003aa8:	int3   
   140003aa9:	int3   
   140003aaa:	int3   
   140003aab:	int3   
   140003aac:	mov    rax,rsp
   140003aaf:	mov    QWORD PTR [rax+0x10],rbx
   140003ab3:	mov    QWORD PTR [rax+0x18],rsi
   140003ab7:	mov    QWORD PTR [rax+0x20],rdi
   140003abb:	push   rbp
   140003abc:	push   r14
   140003abe:	push   r15
   140003ac0:	lea    rbp,[rax-0x3c8]
   140003ac7:	sub    rsp,0x4b0
   140003ace:	mov    rax,QWORD PTR [rip+0x4533]        # 0x140008008
   140003ad5:	xor    rax,rsp
   140003ad8:	mov    QWORD PTR [rbp+0x3a0],rax
   140003adf:	mov    rsi,rcx
   140003ae2:	lea    rdx,[rbp-0x70]
   140003ae6:	xor    r15d,r15d
   140003ae9:	lea    rcx,[rip+0x29f8]        # 0x1400064e8
   140003af0:	mov    r8d,0x104
   140003af6:	mov    WORD PTR [rbp-0x70],r15w
   140003afb:	mov    r14d,r15d
   140003afe:	call   QWORD PTR [rip+0x2664]        # 0x140006168
   140003b04:	cmp    WORD PTR [rbp-0x70],r15w
   140003b09:	jne    0x140003b14
   140003b0b:	xor    ecx,ecx
   140003b0d:	call   QWORD PTR [rip+0x25b5]        # 0x1400060c8
   140003b13:	int3   
   140003b14:	xor    r8d,r8d
   140003b17:	lea    rcx,[rbp-0x70]
   140003b1b:	mov    edx,0x208
   140003b20:	call   0x140004394
   140003b25:	mov    rbx,rax
   140003b28:	test   rax,rax
   140003b2b:	jne    0x140003b36
   140003b2d:	xor    ecx,ecx
   140003b2f:	call   QWORD PTR [rip+0x2593]        # 0x1400060c8
   140003b35:	int3   
   140003b36:	lea    rcx,[rip+0x4b43]        # 0x140008680
   140003b3d:	call   QWORD PTR [rip+0x25a5]        # 0x1400060e8
   140003b43:	test   rsi,rsi
   140003b46:	je     0x140003b5c
   140003b48:	xor    r9d,r9d
   140003b4b:	xor    r8d,r8d
   140003b4e:	mov    edx,0x1009
   140003b53:	mov    rcx,rsi
   140003b56:	call   QWORD PTR [rip+0x2734]        # 0x140006290
   140003b5c:	cmp    QWORD PTR [rip+0x4c5d],r15        # 0x1400087c0
   140003b63:	mov    QWORD PTR [rip+0x4c4e],r15        # 0x1400087b8
   140003b6a:	je     0x140003b7a
   140003b6c:	lea    rcx,[rbp-0x70]
   140003b70:	call   0x140004440
   140003b75:	mov    rdi,rax
   140003b78:	jmp    0x140003b7d
   140003b7a:	mov    rdi,r15
   140003b7d:	mov    r9,rsi
   140003b80:	mov    QWORD PTR [rsp+0x20],rdi
   140003b85:	mov    r8,rbx
   140003b88:	lea    rcx,[rbp-0x70]
   140003b8c:	mov    edx,0x208
   140003b91:	call   0x140002f50
   140003b96:	mov    rcx,rsi
   140003b99:	test   eax,eax
   140003b9b:	jne    0x140003baf
   140003b9d:	xor    r9d,r9d
   140003ba0:	lea    edx,[rax+0xb]
   140003ba3:	lea    r8d,[rax+0x1]
   140003ba7:	call   QWORD PTR [rip+0x26e3]        # 0x140006290
   140003bad:	jmp    0x140003c2c
   140003baf:	mov    rax,QWORD PTR [rip+0x4c02]        # 0x1400087b8
   140003bb6:	lea    r9,[rip+0xfffffffffffffed3]        # 0x140003a90
   140003bbd:	mov    ebx,0x1
   140003bc2:	mov    QWORD PTR [rip+0x4c1f],rax        # 0x1400087e8
   140003bc9:	mov    r8d,ebx
   140003bcc:	mov    edx,0x1030
   140003bd1:	call   QWORD PTR [rip+0x26b9]        # 0x140006290
   140003bd7:	lea    eax,[rbx+0x2]
   140003bda:	mov    QWORD PTR [rsp+0x30],0x8
   140003be3:	lea    r9,[rsp+0x30]
   140003be8:	mov    DWORD PTR [rsp+0x3c],eax
   140003bec:	xor    r8d,r8d
   140003bef:	mov    DWORD PTR [rsp+0x40],eax
   140003bf3:	mov    edx,0x102b
   140003bf8:	mov    DWORD PTR [rsp+0x38],r15d
   140003bfd:	mov    rcx,rsi
   140003c00:	call   QWORD PTR [rip+0x268a]        # 0x140006290
   140003c06:	mov    rax,QWORD PTR [rip+0x4bdb]        # 0x1400087e8
   140003c0d:	cmp    rax,0x400
   140003c13:	jae    0x140003c1e
   140003c15:	mov    QWORD PTR [rip+0x4bcc],rbx        # 0x1400087e8
   140003c1c:	jmp    0x140003c29
   140003c1e:	shr    rax,0xa
   140003c22:	mov    QWORD PTR [rip+0x4bbf],rax        # 0x1400087e8
   140003c29:	mov    r14d,ebx
   140003c2c:	lea    rcx,[rip+0x4a4d]        # 0x140008680
   140003c33:	call   QWORD PTR [rip+0x247f]        # 0x1400060b8
   140003c39:	test   rdi,rdi
   140003c3c:	je     0x140003c47
   140003c3e:	mov    rcx,rdi
   140003c41:	call   QWORD PTR [rip+0x24f9]        # 0x140006140
   140003c47:	mov    eax,r14d
   140003c4a:	mov    rcx,QWORD PTR [rbp+0x3a0]
   140003c51:	xor    rcx,rsp
   140003c54:	call   0x140004ca0
   140003c59:	lea    r11,[rsp+0x4b0]
   140003c61:	mov    rbx,QWORD PTR [r11+0x28]
   140003c65:	mov    rsi,QWORD PTR [r11+0x30]
   140003c69:	mov    rdi,QWORD PTR [r11+0x38]
   140003c6d:	mov    rsp,r11
   140003c70:	pop    r15
   140003c72:	pop    r14
   140003c74:	pop    rbp
   140003c75:	ret    
   140003c76:	int3   
   140003c77:	int3   
   140003c78:	int3   
   140003c79:	int3   
   140003c7a:	int3   
   140003c7b:	int3   
   140003c7c:	mov    QWORD PTR [rsp+0x20],rbx
   140003c81:	push   rbp
   140003c82:	push   rsi
   140003c83:	push   rdi
   140003c84:	push   r12
   140003c86:	push   r13
   140003c88:	push   r14
   140003c8a:	push   r15
   140003c8c:	sub    rsp,0x300
   140003c93:	mov    rax,QWORD PTR [rip+0x436e]        # 0x140008008
   140003c9a:	xor    rax,rsp
   140003c9d:	mov    QWORD PTR [rsp+0x2f0],rax
   140003ca5:	mov    rsi,r8
   140003ca8:	mov    rdi,rdx
   140003cab:	mov    r14,rcx
   140003cae:	xor    r15d,r15d
   140003cb1:	xor    edx,edx
   140003cb3:	mov    QWORD PTR [rsp+0x30],r15
   140003cb8:	mov    r8d,0x2b0
   140003cbe:	lea    rcx,[rsp+0x38]
   140003cc3:	call   0x140005236
   140003cc8:	mov    r13d,0x30c
   140003cce:	lea    r8,[rip+0x27cf]        # 0x1400064a4
   140003cd5:	mov    edx,r13d
   140003cd8:	lea    ebp,[r15+0x1]
   140003cdc:	mov    rcx,rsi
   140003cdf:	call   0x140001008
   140003ce4:	mov    ebx,eax
   140003ce6:	test   eax,eax
   140003ce8:	js     0x140003e94
   140003cee:	cmp    WORD PTR [rdi],r15w
   140003cf2:	je     0x140003d7a
   140003cf8:	lea    r12d,[r15+0x5c]
   140003cfc:	cmp    WORD PTR [rdi],r12w
   140003d00:	jne    0x140003d70
   140003d02:	mov    r9d,0x2b8
   140003d08:	mov    WORD PTR [rdi],r15w
   140003d0c:	lea    r8,[rsp+0x30]
   140003d11:	mov    DWORD PTR [rsp+0x20],0x200
   140003d19:	xor    edx,edx
   140003d1b:	mov    rcx,r14
   140003d1e:	call   QWORD PTR [rip+0x2464]        # 0x140006188
   140003d24:	test   rax,rax
   140003d27:	je     0x140003e00
   140003d2d:	mov    WORD PTR [rdi],r12w
   140003d31:	test   ebp,ebp
   140003d33:	je     0x140003d3a
   140003d35:	mov    ebp,r15d
   140003d38:	jmp    0x140003d56
   140003d3a:	lea    r8,[rip+0x275f]        # 0x1400064a0
   140003d41:	mov    rdx,r13
   140003d44:	mov    rcx,rsi
   140003d47:	call   0x140001084
   140003d4c:	mov    ebx,eax
   140003d4e:	test   eax,eax
   140003d50:	js     0x140003e94
   140003d56:	lea    r8,[rsp+0x40]
   140003d5b:	mov    rdx,r13
   140003d5e:	mov    rcx,rsi
   140003d61:	call   0x140001084
   140003d66:	mov    ebx,eax
   140003d68:	test   eax,eax
   140003d6a:	js     0x140003e94
   140003d70:	add    rdi,0x2
   140003d74:	cmp    WORD PTR [rdi],r15w
   140003d78:	jne    0x140003cfc
   140003d7a:	mov    r9d,0x2b8
   140003d80:	mov    DWORD PTR [rsp+0x20],0x200
   140003d88:	lea    r8,[rsp+0x30]
   140003d8d:	xor    edx,edx
   140003d8f:	mov    rcx,r14
   140003d92:	call   QWORD PTR [rip+0x23f0]        # 0x140006188
   140003d98:	test   rax,rax
   140003d9b:	jne    0x140003e58
   140003da1:	call   QWORD PTR [rip+0x2331]        # 0x1400060d8
   140003da7:	movzx  ebx,ax
   140003daa:	or     ebx,0x80070000
   140003db0:	test   eax,eax
   140003db2:	cmovle ebx,eax
   140003db5:	mov    rax,QWORD PTR [rip+0x42b4]        # 0x140008070
   140003dbc:	lea    rcx,[rip+0x42ad]        # 0x140008070
   140003dc3:	cmp    rax,rcx
   140003dc6:	je     0x140003e89
   140003dcc:	test   BYTE PTR [rax+0x1c],0x2
   140003dd0:	je     0x140003e89
   140003dd6:	call   QWORD PTR [rip+0x22fc]        # 0x1400060d8
   140003ddc:	mov    rcx,QWORD PTR [rip+0x428d]        # 0x140008070
   140003de3:	lea    r8,[rip+0x29a6]        # 0x140006790
   140003dea:	mov    r9d,eax
   140003ded:	mov    edx,0x40
   140003df2:	mov    rcx,QWORD PTR [rcx+0x10]
   140003df6:	call   0x1400011f8
   140003dfb:	jmp    0x140003e89
   140003e00:	call   QWORD PTR [rip+0x22d2]        # 0x1400060d8
   140003e06:	movzx  ebx,ax
   140003e09:	or     ebx,0x80070000
   140003e0f:	test   eax,eax
   140003e11:	cmovle ebx,eax
   140003e14:	mov    rax,QWORD PTR [rip+0x4255]        # 0x140008070
   140003e1b:	lea    rcx,[rip+0x424e]        # 0x140008070
   140003e22:	cmp    rax,rcx
   140003e25:	je     0x140003e52
   140003e27:	test   BYTE PTR [rax+0x1c],0x2
   140003e2b:	je     0x140003e52
   140003e2d:	call   QWORD PTR [rip+0x22a5]        # 0x1400060d8
   140003e33:	mov    rcx,QWORD PTR [rip+0x4236]        # 0x140008070
   140003e3a:	lea    r8,[rip+0x294f]        # 0x140006790
   140003e41:	mov    r9d,eax
   140003e44:	mov    edx,0x3f
   140003e49:	mov    rcx,QWORD PTR [rcx+0x10]
   140003e4d:	call   0x1400011f8
   140003e52:	mov    WORD PTR [rdi],r12w
   140003e56:	jmp    0x140003e89
   140003e58:	lea    r8,[rip+0x2641]        # 0x1400064a0
   140003e5f:	mov    rdx,r13
   140003e62:	mov    rcx,rsi
   140003e65:	call   0x140001084
   140003e6a:	mov    ebx,eax
   140003e6c:	test   eax,eax
   140003e6e:	js     0x140003e94
   140003e70:	lea    r8,[rsp+0x40]
   140003e75:	mov    rdx,r13
   140003e78:	mov    rcx,rsi
   140003e7b:	call   0x140001084
   140003e80:	mov    ebx,eax
   140003e82:	test   eax,eax
   140003e84:	js     0x140003e94
   140003e86:	mov    ebx,r15d
   140003e89:	test   ebx,ebx
   140003e8b:	js     0x140003e94
   140003e8d:	mov    eax,0x1
   140003e92:	jmp    0x140003e9f
   140003e94:	movzx  ecx,bx
   140003e97:	call   QWORD PTR [rip+0x2243]        # 0x1400060e0
   140003e9d:	xor    eax,eax
   140003e9f:	mov    rcx,QWORD PTR [rsp+0x2f0]
   140003ea7:	xor    rcx,rsp
   140003eaa:	call   0x140004ca0
   140003eaf:	mov    rbx,QWORD PTR [rsp+0x358]
   140003eb7:	add    rsp,0x300
   140003ebe:	pop    r15
   140003ec0:	pop    r14
   140003ec2:	pop    r13
   140003ec4:	pop    r12
   140003ec6:	pop    rdi
   140003ec7:	pop    rsi
   140003ec8:	pop    rbp
   140003ec9:	ret    
   140003eca:	int3   
   140003ecb:	int3   
   140003ecc:	int3   
   140003ecd:	int3   
   140003ece:	int3   
   140003ecf:	int3   
   140003ed0:	mov    QWORD PTR [rsp+0x20],rbx
   140003ed5:	mov    QWORD PTR [rsp+0x8],rcx
   140003eda:	push   rbp
   140003edb:	push   rsi
   140003edc:	push   rdi
   140003edd:	push   r12
   140003edf:	push   r13
   140003ee1:	push   r14
   140003ee3:	push   r15
   140003ee5:	mov    rbp,rsp
   140003ee8:	sub    rsp,0x30
   140003eec:	xor    r12d,r12d
   140003eef:	lea    rax,[rbp+0x50]
   140003ef3:	mov    r9d,0x20019
   140003ef9:	mov    QWORD PTR [rbp+0x50],r12
   140003efd:	xor    r8d,r8d
   140003f00:	mov    QWORD PTR [rsp+0x20],rax
   140003f05:	lea    rdx,[rip+0x2774]        # 0x140006680
   140003f0c:	mov    rcx,0xffffffff80000001
   140003f13:	mov    ebx,r12d
   140003f16:	mov    r14d,r12d
   140003f19:	mov    edi,r12d
   140003f1c:	call   QWORD PTR [rip+0x211e]        # 0x140006040
   140003f22:	lea    r15,[rip+0x27af]        # 0x1400066d8
   140003f29:	mov    sil,0x4
   140003f2c:	lea    r13,[rip+0x413d]        # 0x140008070
   140003f33:	test   eax,eax
   140003f35:	jne    0x140003fef
   140003f3b:	mov    rcx,QWORD PTR [rbp+0x50]
   140003f3f:	lea    rax,[rbp+0x40]
   140003f43:	mov    QWORD PTR [rsp+0x28],rax
   140003f48:	lea    r9,[rbp+0x48]
   140003f4c:	xor    r8d,r8d
   140003f4f:	mov    QWORD PTR [rsp+0x20],r12
   140003f54:	mov    rdx,r15
   140003f57:	mov    DWORD PTR [rbp+0x40],r12d
   140003f5b:	call   QWORD PTR [rip+0x20af]        # 0x140006010
   140003f61:	test   eax,eax
   140003f63:	jne    0x140003fe1
   140003f65:	cmp    DWORD PTR [rbp+0x40],0x2
   140003f69:	jbe    0x140003fe1
   140003f6b:	mov    edx,DWORD PTR [rbp+0x40]
   140003f6e:	lea    ecx,[rax+0x40]
   140003f71:	call   QWORD PTR [rip+0x2181]        # 0x1400060f8
   140003f77:	mov    r14,rax
   140003f7a:	test   rax,rax
   140003f7d:	je     0x140003fe1
   140003f7f:	mov    rcx,QWORD PTR [rbp+0x50]
   140003f83:	lea    rax,[rbp+0x40]
   140003f87:	mov    QWORD PTR [rsp+0x28],rax
   140003f8c:	lea    r9,[rbp+0x48]
   140003f90:	xor    r8d,r8d
   140003f93:	mov    QWORD PTR [rsp+0x20],r14
   140003f98:	mov    rdx,r15
   140003f9b:	call   QWORD PTR [rip+0x206f]        # 0x140006010
   140003fa1:	test   eax,eax
   140003fa3:	jne    0x140003fab
   140003fa5:	cmp    WORD PTR [r14],r12w
   140003fa9:	jne    0x140003fe1
   140003fab:	mov    rcx,QWORD PTR [rip+0x40be]        # 0x140008070
   140003fb2:	cmp    rcx,r13
   140003fb5:	je     0x140003fd5
   140003fb7:	test   BYTE PTR [rcx+0x1c],sil
   140003fbb:	je     0x140003fd5
   140003fbd:	mov    rcx,QWORD PTR [rcx+0x10]
   140003fc1:	lea    r8,[rip+0x27c8]        # 0x140006790
   140003fc8:	mov    edx,0x41
   140003fcd:	mov    r9d,eax
   140003fd0:	call   0x1400011f8
   140003fd5:	mov    rcx,r14
   140003fd8:	call   QWORD PTR [rip+0x2162]        # 0x140006140
   140003fde:	mov    r14,r12
   140003fe1:	mov    rcx,QWORD PTR [rbp+0x50]
   140003fe5:	call   QWORD PTR [rip+0x2065]        # 0x140006050
   140003feb:	mov    QWORD PTR [rbp+0x50],r12
   140003fef:	lea    rax,[rbp+0x50]
   140003ff3:	mov    r9d,0x20019
   140003ff9:	xor    r8d,r8d
   140003ffc:	mov    QWORD PTR [rsp+0x20],rax
   140004001:	lea    rdx,[rip+0x26f8]        # 0x140006700
   140004008:	mov    rcx,0xffffffff80000001
   14000400f:	call   QWORD PTR [rip+0x202b]        # 0x140006040
   140004015:	test   eax,eax
   140004017:	jne    0x1400040d1
   14000401d:	mov    rcx,QWORD PTR [rbp+0x50]
   140004021:	lea    rax,[rbp+0x40]
   140004025:	mov    QWORD PTR [rsp+0x28],rax
   14000402a:	lea    r9,[rbp+0x48]
   14000402e:	xor    r8d,r8d
   140004031:	mov    QWORD PTR [rsp+0x20],r12
   140004036:	mov    rdx,r15
   140004039:	mov    DWORD PTR [rbp+0x40],r12d
   14000403d:	call   QWORD PTR [rip+0x1fcd]        # 0x140006010
   140004043:	test   eax,eax
   140004045:	jne    0x1400040c3
   140004047:	cmp    DWORD PTR [rbp+0x40],0x2
   14000404b:	jbe    0x1400040c3
   14000404d:	mov    edx,DWORD PTR [rbp+0x40]
   140004050:	lea    ecx,[rax+0x40]
   140004053:	call   QWORD PTR [rip+0x209f]        # 0x1400060f8
   140004059:	mov    rdi,rax
   14000405c:	test   rax,rax
   14000405f:	je     0x1400040c3
   140004061:	mov    rcx,QWORD PTR [rbp+0x50]
   140004065:	lea    rax,[rbp+0x40]
   140004069:	mov    QWORD PTR [rsp+0x28],rax
   14000406e:	lea    r9,[rbp+0x48]
   140004072:	xor    r8d,r8d
   140004075:	mov    QWORD PTR [rsp+0x20],rdi
   14000407a:	mov    rdx,r15
   14000407d:	call   QWORD PTR [rip+0x1f8d]        # 0x140006010
   140004083:	test   eax,eax
   140004085:	jne    0x14000408d
   140004087:	cmp    WORD PTR [rdi],r12w
   14000408b:	jne    0x1400040c3
   14000408d:	mov    rcx,QWORD PTR [rip+0x3fdc]        # 0x140008070
   140004094:	cmp    rcx,r13
   140004097:	je     0x1400040b7
   140004099:	test   BYTE PTR [rcx+0x1c],sil
   14000409d:	je     0x1400040b7
   14000409f:	mov    rcx,QWORD PTR [rcx+0x10]
   1400040a3:	lea    r8,[rip+0x26e6]        # 0x140006790
   1400040aa:	mov    edx,0x42
   1400040af:	mov    r9d,eax
   1400040b2:	call   0x1400011f8
   1400040b7:	mov    rcx,rdi
   1400040ba:	call   QWORD PTR [rip+0x2080]        # 0x140006140
   1400040c0:	mov    rdi,r12
   1400040c3:	mov    rcx,QWORD PTR [rbp+0x50]
   1400040c7:	call   QWORD PTR [rip+0x1f83]        # 0x140006050
   1400040cd:	mov    QWORD PTR [rbp+0x50],r12
   1400040d1:	test   r14,r14
   1400040d4:	jne    0x140004131
   1400040d6:	test   rdi,rdi
   1400040d9:	jne    0x140004106
   1400040db:	mov    rcx,QWORD PTR [rip+0x3f8e]        # 0x140008070
   1400040e2:	cmp    rcx,r13
   1400040e5:	je     0x140004370
   1400040eb:	test   BYTE PTR [rcx+0x1c],sil
   1400040ef:	je     0x140004370
   1400040f5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400040f9:	lea    edx,[rdi+0x43]
   1400040fc:	call   0x1400011cc
   140004101:	jmp    0x140004370
   140004106:	mov    rcx,QWORD PTR [rip+0x3f63]        # 0x140008070
   14000410d:	cmp    rcx,r13
   140004110:	je     0x140004129
   140004112:	test   BYTE PTR [rcx+0x1c],sil
   140004116:	je     0x140004129
   140004118:	mov    rcx,QWORD PTR [rcx+0x10]
   14000411c:	mov    edx,0x44
   140004121:	mov    r9,rdi
   140004124:	call   0x1400012e8
   140004129:	mov    rbx,rdi
   14000412c:	jmp    0x140004370
   140004131:	test   rdi,rdi
   140004134:	jne    0x14000415f
   140004136:	mov    rcx,QWORD PTR [rip+0x3f33]        # 0x140008070
   14000413d:	cmp    rcx,r13
   140004140:	je     0x140004157
   140004142:	test   BYTE PTR [rcx+0x1c],sil
   140004146:	je     0x140004157
   140004148:	mov    rcx,QWORD PTR [rcx+0x10]
   14000414c:	lea    edx,[rdi+0x45]
   14000414f:	mov    r9,r14
   140004152:	call   0x1400012e8
   140004157:	mov    rbx,r14
   14000415a:	jmp    0x140004370
   14000415f:	mov    rcx,QWORD PTR [rip+0x3f0a]        # 0x140008070
   140004166:	cmp    rcx,r13
   140004169:	je     0x140004189
   14000416b:	test   BYTE PTR [rcx+0x1c],sil
   14000416f:	je     0x140004189
   140004171:	mov    rcx,QWORD PTR [rcx+0x10]
   140004175:	mov    r9,rdi
   140004178:	mov    QWORD PTR [rsp+0x20],r14
   14000417d:	call   0x14000136c
   140004182:	mov    rcx,QWORD PTR [rip+0x3ee7]        # 0x140008070
   140004189:	mov    esi,0x7fffffff
   14000418e:	mov    rdx,r14
   140004191:	mov    eax,esi
   140004193:	mov    r9d,r12d
   140004196:	cmp    WORD PTR [rdx],r12w
   14000419a:	je     0x1400041a6
   14000419c:	add    rdx,0x2
   1400041a0:	sub    rax,0x1
   1400041a4:	jne    0x140004196
   1400041a6:	test   rax,rax
   1400041a9:	jne    0x1400041b6
   1400041ab:	mov    r9d,0x80070057
   1400041b1:	mov    r8,r12
   1400041b4:	jmp    0x1400041bc
   1400041b6:	mov    r8,rsi
   1400041b9:	sub    r8,rax
   1400041bc:	test   r9d,r9d
   1400041bf:	jns    0x1400041de
   1400041c1:	cmp    rcx,r13
   1400041c4:	je     0x14000435e
   1400041ca:	test   BYTE PTR [rcx+0x1c],0x2
   1400041ce:	je     0x14000435e
   1400041d4:	mov    edx,0x47
   1400041d9:	jmp    0x14000434e
   1400041de:	mov    rdx,rsi
   1400041e1:	mov    rax,rdi
   1400041e4:	cmp    WORD PTR [rax],r12w
   1400041e8:	je     0x1400041f4
   1400041ea:	add    rax,0x2
   1400041ee:	sub    rdx,0x1
   1400041f2:	jne    0x1400041e4
   1400041f4:	test   rdx,rdx
   1400041f7:	je     0x140004338
   1400041fd:	mov    rax,rsi
   140004200:	mov    ecx,0x40
   140004205:	sub    rax,rdx
   140004208:	add    eax,0x2
   14000420b:	add    eax,r8d
   14000420e:	mov    r15d,eax
   140004211:	lea    rdx,[rax+rax*1]
   140004215:	call   QWORD PTR [rip+0x1edd]        # 0x1400060f8
   14000421b:	mov    rbx,rax
   14000421e:	test   rax,rax
   140004221:	jne    0x14000424e
   140004223:	mov    rcx,QWORD PTR [rip+0x3e46]        # 0x140008070
   14000422a:	cmp    rcx,r13
   14000422d:	je     0x14000435e
   140004233:	test   BYTE PTR [rcx+0x1c],0x2
   140004237:	je     0x14000435e
   14000423d:	mov    rcx,QWORD PTR [rcx+0x10]
   140004241:	lea    edx,[rax+0x49]
   140004244:	call   0x1400011cc
   140004249:	jmp    0x14000435e
   14000424e:	mov    r8,rdi
   140004251:	mov    rdx,r15
   140004254:	mov    rcx,rax
   140004257:	call   0x140001008
   14000425c:	test   eax,eax
   14000425e:	jns    0x140004279
   140004260:	mov    rcx,QWORD PTR [rip+0x3e09]        # 0x140008070
   140004267:	cmp    rcx,r13
   14000426a:	je     0x1400042e6
   14000426c:	test   BYTE PTR [rcx+0x1c],0x2
   140004270:	je     0x1400042e6
   140004272:	mov    edx,0x4a
   140004277:	jmp    0x1400042d3
   140004279:	mov    rax,rsi
   14000427c:	mov    rcx,rbx
   14000427f:	cmp    WORD PTR [rcx],r12w
   140004283:	je     0x14000428f
   140004285:	add    rcx,0x2
   140004289:	sub    rax,0x1
   14000428d:	jne    0x14000427f
   14000428f:	test   rax,rax
   140004292:	je     0x140004319
   140004298:	sub    rsi,rax
   14000429b:	mov    eax,0x3b
   1400042a0:	cmp    WORD PTR [rbx+rsi*2-0x2],ax
   1400042a5:	je     0x1400042aa
   1400042a7:	mov    DWORD PTR [rbx+rsi*2],eax
   1400042aa:	mov    r8,r14
   1400042ad:	mov    rdx,r15
   1400042b0:	mov    rcx,rbx
   1400042b3:	call   0x140001084
   1400042b8:	test   eax,eax
   1400042ba:	jns    0x1400042f4
   1400042bc:	mov    rcx,QWORD PTR [rip+0x3dad]        # 0x140008070
   1400042c3:	cmp    rcx,r13
   1400042c6:	je     0x1400042e6
   1400042c8:	test   BYTE PTR [rcx+0x1c],0x2
   1400042cc:	je     0x1400042e6
   1400042ce:	mov    edx,0x4c
   1400042d3:	mov    r9d,eax
   1400042d6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400042da:	lea    r8,[rip+0x24af]        # 0x140006790
   1400042e1:	call   0x1400011f8
   1400042e6:	mov    rcx,rbx
   1400042e9:	call   QWORD PTR [rip+0x1e51]        # 0x140006140
   1400042ef:	mov    rbx,r12
   1400042f2:	jmp    0x14000435e
   1400042f4:	mov    rcx,QWORD PTR [rip+0x3d75]        # 0x140008070
   1400042fb:	cmp    rcx,r13
   1400042fe:	je     0x14000435e
   140004300:	test   BYTE PTR [rcx+0x1c],0x4
   140004304:	je     0x14000435e
   140004306:	mov    rcx,QWORD PTR [rcx+0x10]
   14000430a:	mov    edx,0x4d
   14000430f:	mov    r9,rbx
   140004312:	call   0x1400012e8
   140004317:	jmp    0x14000435e
   140004319:	mov    rcx,QWORD PTR [rip+0x3d50]        # 0x140008070
   140004320:	cmp    rcx,r13
   140004323:	je     0x1400042e6
   140004325:	test   BYTE PTR [rcx+0x1c],0x2
   140004329:	je     0x1400042e6
   14000432b:	mov    edx,0x4b
   140004330:	mov    r9d,0x80070057
   140004336:	jmp    0x1400042d6
   140004338:	cmp    rcx,r13
   14000433b:	je     0x14000435e
   14000433d:	test   BYTE PTR [rcx+0x1c],0x2
   140004341:	je     0x14000435e
   140004343:	mov    edx,0x48
   140004348:	mov    r9d,0x80070057
   14000434e:	mov    rcx,QWORD PTR [rcx+0x10]
   140004352:	lea    r8,[rip+0x2437]        # 0x140006790
   140004359:	call   0x1400011f8
   14000435e:	mov    rcx,r14
   140004361:	call   QWORD PTR [rip+0x1dd9]        # 0x140006140
   140004367:	mov    rcx,rdi
   14000436a:	call   QWORD PTR [rip+0x1dd0]        # 0x140006140
   140004370:	mov    rax,rbx
   140004373:	mov    rbx,QWORD PTR [rsp+0x88]
   14000437b:	add    rsp,0x30
   14000437f:	pop    r15
   140004381:	pop    r14
   140004383:	pop    r13
   140004385:	pop    r12
   140004387:	pop    rdi
   140004388:	pop    rsi
   140004389:	pop    rbp
   14000438a:	ret    
   14000438b:	int3   
   14000438c:	int3   
   14000438d:	int3   
   14000438e:	int3   
   14000438f:	int3   
   140004390:	int3   
   140004391:	int3   
   140004392:	int3   
   140004393:	int3   
   140004394:	mov    QWORD PTR [rsp+0x10],rbx
   140004399:	mov    QWORD PTR [rsp+0x18],rdi
   14000439e:	xor    edi,edi
   1400043a0:	mov    ebx,edx
   1400043a2:	test   rcx,rcx
   1400043a5:	je     0x1400043d4
   1400043a7:	mov    eax,0x7fffffff
   1400043ac:	mov    r11,rcx
   1400043af:	mov    r10d,eax
   1400043b2:	mov    r9d,edi
   1400043b5:	cmp    WORD PTR [r11],di
   1400043b9:	je     0x1400043c5
   1400043bb:	add    r11,0x2
   1400043bf:	sub    r10,0x1
   1400043c3:	jne    0x1400043b5
   1400043c5:	test   r10,r10
   1400043c8:	jne    0x1400043cf
   1400043ca:	mov    rax,rdi
   1400043cd:	jmp    0x1400043d9
   1400043cf:	sub    rax,r10
   1400043d2:	jmp    0x1400043df
   1400043d4:	mov    rax,QWORD PTR [rsp+0x8]
   1400043d9:	mov    r9d,0x80070057
   1400043df:	test   r9d,r9d
   1400043e2:	mov    edx,edi
   1400043e4:	cmovs  rax,rdi
   1400043e8:	cmovns edx,eax
   1400043eb:	lea    rcx,[rcx+rdx*2]
   1400043ef:	test   r8,r8
   1400043f2:	je     0x1400043fd
   1400043f4:	mov    eax,ebx
   1400043f6:	sub    eax,edx
   1400043f8:	dec    eax
   1400043fa:	mov    DWORD PTR [r8],eax
   1400043fd:	test   edx,edx
   1400043ff:	je     0x14000442c
   140004401:	mov    r9d,0x5c
   140004407:	cmp    WORD PTR [rcx-0x2],r9w
   14000440c:	je     0x14000442c
   14000440e:	lea    eax,[rdx+0x1]
   140004411:	cmp    eax,ebx
   140004413:	jb     0x140004419
   140004415:	xor    eax,eax
   140004417:	jmp    0x14000442f
   140004419:	mov    WORD PTR [rcx],r9w
   14000441d:	add    rcx,0x2
   140004421:	mov    WORD PTR [rcx],di
   140004424:	test   r8,r8
   140004427:	je     0x14000442c
   140004429:	dec    DWORD PTR [r8]
   14000442c:	mov    rax,rcx
   14000442f:	mov    rbx,QWORD PTR [rsp+0x10]
   140004434:	mov    rdi,QWORD PTR [rsp+0x18]
   140004439:	ret    
   14000443a:	int3   
   14000443b:	int3   
   14000443c:	int3   
   14000443d:	int3   
   14000443e:	int3   
   14000443f:	int3   
   140004440:	mov    QWORD PTR [rsp+0x8],rbx
   140004445:	mov    QWORD PTR [rsp+0x10],rbp
   14000444a:	mov    QWORD PTR [rsp+0x18],rsi
   14000444f:	push   rdi
   140004450:	push   r12
   140004452:	push   r13
   140004454:	push   r14
   140004456:	push   r15
   140004458:	sub    rsp,0x250
   14000445f:	mov    rax,QWORD PTR [rip+0x3ba2]        # 0x140008008
   140004466:	xor    rax,rsp
   140004469:	mov    QWORD PTR [rsp+0x240],rax
   140004471:	mov    rsi,QWORD PTR [rip+0x4348]        # 0x1400087c0
   140004478:	xor    r13d,r13d
   14000447b:	mov    r8,rcx
   14000447e:	mov    ebx,r13d
   140004481:	lea    r15d,[r13+0x2]
   140004485:	test   rsi,rsi
   140004488:	jne    0x140004491
   14000448a:	xor    eax,eax
   14000448c:	jmp    0x1400048b3
   140004491:	mov    r10d,0x104
   140004497:	lea    rax,[rsp+0x30]
   14000449c:	mov    edx,r10d
   14000449f:	lea    rcx,[rsp+0x30]
   1400044a4:	sub    r8,rax
   1400044a7:	mov    r9d,r13d
   1400044aa:	lea    rax,[rdx+0x7ffffefa]
   1400044b1:	test   rax,rax
   1400044b4:	je     0x1400044cc
   1400044b6:	movzx  eax,WORD PTR [r8+rcx*1]
   1400044bb:	test   ax,ax
   1400044be:	je     0x1400044cc
   1400044c0:	mov    WORD PTR [rcx],ax
   1400044c3:	add    rcx,r15
   1400044c6:	sub    rdx,0x1
   1400044ca:	jne    0x1400044aa
   1400044cc:	test   rdx,rdx
   1400044cf:	jne    0x1400044da
   1400044d1:	sub    rcx,r15
   1400044d4:	mov    r9d,0x8007007a
   1400044da:	mov    WORD PTR [rcx],r13w
   1400044de:	test   r9d,r9d
   1400044e1:	js     0x14000448a
   1400044e3:	lea    r8,[rsp+0x20]
   1400044e8:	mov    edx,r10d
   1400044eb:	lea    rcx,[rsp+0x30]
   1400044f0:	call   0x140004394
   1400044f5:	mov    r12,rax
   1400044f8:	test   rax,rax
   1400044fb:	je     0x14000448a
   1400044fd:	mov    rdi,rsi
   140004500:	cmp    WORD PTR [rsi],r13w
   140004504:	je     0x1400048b0
   14000450a:	mov    ebp,0x7fffffff
   14000450f:	mov    r8d,0x80070057
   140004515:	jmp    0x140004521
   140004517:	cmp    ax,0x3b
   14000451b:	je     0x140004535
   14000451d:	add    rdi,0x2
   140004521:	movzx  eax,WORD PTR [rdi]
   140004524:	test   ax,ax
   140004527:	jne    0x140004517
   140004529:	jmp    0x140004535
   14000452b:	cmp    ax,0x20
   14000452f:	jne    0x14000453d
   140004531:	add    rsi,0x2
   140004535:	movzx  eax,WORD PTR [rsi]
   140004538:	test   ax,ax
   14000453b:	jne    0x14000452b
   14000453d:	cmp    rsi,rdi
   140004540:	jne    0x140004551
   140004542:	cmp    WORD PTR [rdi],r13w
   140004546:	je     0x1400048b0
   14000454c:	jmp    0x140004702
   140004551:	mov    r10d,DWORD PTR [rsp+0x20]
   140004556:	mov    rax,rdi
   140004559:	sub    rax,rsi
   14000455c:	mov    WORD PTR [r12],r13w
   140004561:	sar    rax,1
   140004564:	mov    r9d,r13d
   140004567:	movsxd r11,eax
   14000456a:	lea    rax,[r10-0x1]
   14000456e:	cmp    rax,0x7ffffffe
   140004574:	cmova  r9d,r8d
   140004578:	test   r9d,r9d
   14000457b:	js     0x1400045ab
   14000457d:	mov    eax,r10d
   140004580:	mov    rcx,r12
   140004583:	mov    r9d,r13d
   140004586:	test   r10,r10
   140004589:	je     0x1400045a8
   14000458b:	cmp    WORD PTR [rcx],r13w
   14000458f:	je     0x14000459b
   140004591:	add    rcx,0x2
   140004595:	sub    rax,0x1
   140004599:	jne    0x14000458b
   14000459b:	test   rax,rax
   14000459e:	je     0x1400045a8
   1400045a0:	mov    rdx,r10
   1400045a3:	sub    rdx,rax
   1400045a6:	jmp    0x1400045ae
   1400045a8:	mov    r9d,r8d
   1400045ab:	mov    rdx,r13
   1400045ae:	test   r9d,r9d
   1400045b1:	js     0x140004876
   1400045b7:	cmp    r11,0x7ffffffe
   1400045be:	ja     0x140004873
   1400045c4:	mov    rcx,r10
   1400045c7:	lea    rax,[r12+rdx*2]
   1400045cb:	mov    r9d,r13d
   1400045ce:	sub    rcx,rdx
   1400045d1:	je     0x140004605
   1400045d3:	mov    r8,rcx
   1400045d6:	sub    r8,r10
   1400045d9:	add    r8,rdx
   1400045dc:	add    r8,r11
   1400045df:	sub    rsi,rax
   1400045e2:	test   r8,r8
   1400045e5:	je     0x140004600
   1400045e7:	movzx  edx,WORD PTR [rsi+rax*1]
   1400045eb:	test   dx,dx
   1400045ee:	je     0x140004600
   1400045f0:	mov    WORD PTR [rax],dx
   1400045f3:	dec    r8
   1400045f6:	add    rax,0x2
   1400045fa:	sub    rcx,0x1
   1400045fe:	jne    0x1400045e2
   140004600:	test   rcx,rcx
   140004603:	jne    0x14000460f
   140004605:	sub    rax,0x2
   140004609:	mov    r9d,0x8007007a
   14000460f:	mov    WORD PTR [rax],r13w
   140004613:	test   r9d,r9d
   140004616:	js     0x140004876
   14000461c:	lea    rax,[rsp+0x30]
   140004621:	mov    rcx,rbp
   140004624:	test   rbx,rbx
   140004627:	je     0x140004698
   140004629:	cmp    WORD PTR [rax],r13w
   14000462d:	je     0x140004639
   14000462f:	add    rax,0x2
   140004633:	sub    rcx,0x1
   140004637:	jne    0x140004629
   140004639:	test   rcx,rcx
   14000463c:	je     0x140004799
   140004642:	sub    rbp,rcx
   140004645:	mov    r8d,0x42
   14000464b:	inc    ebp
   14000464d:	mov    rcx,rbx
   140004650:	add    r15d,ebp
   140004653:	mov    r14d,r15d
   140004656:	lea    rdx,[r15+r15*1]
   14000465a:	call   QWORD PTR [rip+0x1c80]        # 0x1400062e0
   140004660:	mov    rsi,rax
   140004663:	test   rax,rax
   140004666:	je     0x14000474e
   14000466c:	mov    edx,ebp
   14000466e:	lea    rcx,[rax-0x2]
   140004672:	sub    r14,rdx
   140004675:	lea    r8,[rsp+0x30]
   14000467a:	mov    rbx,rax
   14000467d:	lea    rcx,[rcx+r14*2]
   140004681:	call   0x140001008
   140004686:	mov    r9d,eax
   140004689:	test   eax,eax
   14000468b:	js     0x140004718
   140004691:	mov    ebp,0x7fffffff
   140004696:	jmp    0x1400046f2
   140004698:	cmp    WORD PTR [rax],r13w
   14000469c:	je     0x1400046a8
   14000469e:	add    rax,0x2
   1400046a2:	sub    rcx,0x1
   1400046a6:	jne    0x140004698
   1400046a8:	test   rcx,rcx
   1400046ab:	je     0x14000483d
   1400046b1:	mov    rax,rbp
   1400046b4:	sub    rax,rcx
   1400046b7:	mov    ecx,0x40
   1400046bc:	add    r15d,eax
   1400046bf:	mov    esi,r15d
   1400046c2:	lea    rdx,[r15+r15*1]
   1400046c6:	call   QWORD PTR [rip+0x1a2c]        # 0x1400060f8
   1400046cc:	mov    rbx,rax
   1400046cf:	test   rax,rax
   1400046d2:	je     0x1400047f5
   1400046d8:	lea    r8,[rsp+0x30]
   1400046dd:	mov    edx,esi
   1400046df:	mov    rcx,rax
   1400046e2:	call   0x140001008
   1400046e7:	mov    r9d,eax
   1400046ea:	test   eax,eax
   1400046ec:	js     0x1400047ca
   1400046f2:	cmp    WORD PTR [rdi],r13w
   1400046f6:	je     0x1400048b0
   1400046fc:	mov    r8d,0x80070057
   140004702:	add    rdi,0x2
   140004706:	mov    rsi,rdi
   140004709:	cmp    WORD PTR [rdi],r13w
   14000470d:	je     0x1400048b0
   140004713:	jmp    0x140004521
   140004718:	mov    rcx,QWORD PTR [rip+0x3951]        # 0x140008070
   14000471f:	lea    rax,[rip+0x394a]        # 0x140008070
   140004726:	cmp    rcx,rax
   140004729:	je     0x140004746
   14000472b:	test   BYTE PTR [rcx+0x1c],0x8
   14000472f:	je     0x140004746
   140004731:	mov    rcx,QWORD PTR [rcx+0x10]
   140004735:	lea    r8,[rip+0x2084]        # 0x1400067c0
   14000473c:	mov    edx,0xd
   140004741:	call   0x1400011f8
   140004746:	mov    rcx,rsi
   140004749:	jmp    0x1400048a7
   14000474e:	mov    rcx,QWORD PTR [rip+0x391b]        # 0x140008070
   140004755:	lea    rax,[rip+0x3914]        # 0x140008070
   14000475c:	cmp    rcx,rax
   14000475f:	je     0x1400048a4
   140004765:	test   BYTE PTR [rcx+0x1c],0x8
   140004769:	je     0x1400048a4
   14000476f:	call   QWORD PTR [rip+0x1963]        # 0x1400060d8
   140004775:	mov    rcx,QWORD PTR [rip+0x38f4]        # 0x140008070
   14000477c:	lea    r8,[rip+0x203d]        # 0x1400067c0
   140004783:	mov    r9d,eax
   140004786:	mov    edx,0xc
   14000478b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000478f:	call   0x1400011f8
   140004794:	jmp    0x1400048a4
   140004799:	mov    rcx,QWORD PTR [rip+0x38d0]        # 0x140008070
   1400047a0:	lea    rax,[rip+0x38c9]        # 0x140008070
   1400047a7:	cmp    rcx,rax
   1400047aa:	je     0x1400048a4
   1400047b0:	test   BYTE PTR [rcx+0x1c],0x8
   1400047b4:	je     0x1400048a4
   1400047ba:	mov    edx,0xb
   1400047bf:	mov    r9d,0x80070057
   1400047c5:	jmp    0x140004894
   1400047ca:	mov    rcx,QWORD PTR [rip+0x389f]        # 0x140008070
   1400047d1:	lea    rax,[rip+0x3898]        # 0x140008070
   1400047d8:	cmp    rcx,rax
   1400047db:	je     0x1400048a4
   1400047e1:	test   BYTE PTR [rcx+0x1c],0x8
   1400047e5:	je     0x1400048a4
   1400047eb:	mov    edx,0x10
   1400047f0:	jmp    0x140004894
   1400047f5:	mov    rcx,QWORD PTR [rip+0x3874]        # 0x140008070
   1400047fc:	lea    rax,[rip+0x386d]        # 0x140008070
   140004803:	cmp    rcx,rax
   140004806:	je     0x1400048b0
   14000480c:	test   BYTE PTR [rcx+0x1c],0x8
   140004810:	je     0x1400048b0
   140004816:	call   QWORD PTR [rip+0x18bc]        # 0x1400060d8
   14000481c:	mov    rcx,QWORD PTR [rip+0x384d]        # 0x140008070
   140004823:	lea    r8,[rip+0x1f96]        # 0x1400067c0
   14000482a:	mov    r9d,eax
   14000482d:	mov    edx,0xf
   140004832:	mov    rcx,QWORD PTR [rcx+0x10]
   140004836:	call   0x1400011f8
   14000483b:	jmp    0x1400048b0
   14000483d:	mov    rcx,QWORD PTR [rip+0x382c]        # 0x140008070
   140004844:	lea    rax,[rip+0x3825]        # 0x140008070
   14000484b:	cmp    rcx,rax
   14000484e:	je     0x1400048b0
   140004850:	test   BYTE PTR [rcx+0x1c],0x8
   140004854:	je     0x1400048b0
   140004856:	mov    rcx,QWORD PTR [rcx+0x10]
   14000485a:	lea    r8,[rip+0x1f5f]        # 0x1400067c0
   140004861:	mov    edx,0xe
   140004866:	mov    r9d,0x80070057
   14000486c:	call   0x1400011f8
   140004871:	jmp    0x1400048b0
   140004873:	mov    r9d,r8d
   140004876:	mov    rcx,QWORD PTR [rip+0x37f3]        # 0x140008070
   14000487d:	lea    rax,[rip+0x37ec]        # 0x140008070
   140004884:	cmp    rcx,rax
   140004887:	je     0x1400048a4
   140004889:	test   BYTE PTR [rcx+0x1c],0x8
   14000488d:	je     0x1400048a4
   14000488f:	mov    edx,0xa
   140004894:	mov    rcx,QWORD PTR [rcx+0x10]
   140004898:	lea    r8,[rip+0x1f21]        # 0x1400067c0
   14000489f:	call   0x1400011f8
   1400048a4:	mov    rcx,rbx
   1400048a7:	call   QWORD PTR [rip+0x1893]        # 0x140006140
   1400048ad:	mov    rbx,r13
   1400048b0:	mov    rax,rbx
   1400048b3:	mov    rcx,QWORD PTR [rsp+0x240]
   1400048bb:	xor    rcx,rsp
   1400048be:	call   0x140004ca0
   1400048c3:	lea    r11,[rsp+0x250]
   1400048cb:	mov    rbx,QWORD PTR [r11+0x30]
   1400048cf:	mov    rbp,QWORD PTR [r11+0x38]
   1400048d3:	mov    rsi,QWORD PTR [r11+0x40]
   1400048d7:	mov    rsp,r11
   1400048da:	pop    r15
   1400048dc:	pop    r14
   1400048de:	pop    r13
   1400048e0:	pop    r12
   1400048e2:	pop    rdi
   1400048e3:	ret    
   1400048e4:	int3   
   1400048e5:	int3   
   1400048e6:	int3   
   1400048e7:	int3   
   1400048e8:	int3   
   1400048e9:	int3   
   1400048ea:	int3   
   1400048eb:	int3   
   1400048ec:	int3   
   1400048ed:	int3   
   1400048ee:	int3   
   1400048ef:	int3   
   1400048f0:	sub    rsp,0x28
   1400048f4:	mov    eax,0x5a4d
   1400048f9:	cmp    WORD PTR [rip+0xffffffffffffb700],ax        # 0x140000000
   140004900:	je     0x140004906
   140004902:	xor    eax,eax
   140004904:	jmp    0x140004955
   140004906:	movsxd rcx,DWORD PTR [rip+0xffffffffffffb72f]        # 0x14000003c
   14000490d:	lea    rax,[rip+0xffffffffffffb6ec]        # 0x140000000
   140004914:	add    rcx,rax
   140004917:	cmp    DWORD PTR [rcx],0x4550
   14000491d:	jne    0x140004902
   14000491f:	movzx  eax,WORD PTR [rcx+0x18]
   140004923:	cmp    eax,0x10b
   140004928:	je     0x140004944
   14000492a:	cmp    eax,0x20b
   14000492f:	jne    0x140004902
   140004931:	xor    eax,eax
   140004933:	cmp    DWORD PTR [rcx+0x84],0xe
   14000493a:	jbe    0x140004955
   14000493c:	cmp    DWORD PTR [rcx+0xf8],eax
   140004942:	jmp    0x140004952
   140004944:	xor    eax,eax
   140004946:	cmp    DWORD PTR [rcx+0x74],0xe
   14000494a:	jbe    0x140004955
   14000494c:	cmp    DWORD PTR [rcx+0xe8],eax
   140004952:	setne  al
   140004955:	mov    ecx,0x2
   14000495a:	mov    DWORD PTR [rip+0x3740],eax        # 0x1400080a0
   140004960:	call   0x140004f48
   140004965:	mov    ecx,eax
   140004967:	call   QWORD PTR [rip+0x1a33]        # 0x1400063a0
   14000496d:	mov    rcx,QWORD PTR [rip+0x1a14]        # 0x140006388
   140004974:	or     rax,0xffffffffffffffff
   140004978:	mov    QWORD PTR [rip+0x3e79],rax        # 0x1400087f8
   14000497f:	mov    QWORD PTR [rip+0x3e7a],rax        # 0x140008800
   140004986:	mov    eax,DWORD PTR [rip+0x3ca0]        # 0x14000862c
   14000498c:	mov    DWORD PTR [rcx],eax
   14000498e:	mov    rcx,QWORD PTR [rip+0x1a43]        # 0x1400063d8
   140004995:	mov    eax,DWORD PTR [rip+0x3c85]        # 0x140008620
   14000499b:	mov    DWORD PTR [rcx],eax
   14000499d:	call   0x140004fa0
   1400049a2:	cmp    DWORD PTR [rip+0x3657],0x0        # 0x140008000
   1400049a9:	jne    0x1400049b8
   1400049ab:	lea    rcx,[rip+0x5ee]        # 0x140004fa0
   1400049b2:	call   QWORD PTR [rip+0x19f8]        # 0x1400063b0
   1400049b8:	xor    eax,eax
   1400049ba:	add    rsp,0x28
   1400049be:	ret    
   1400049bf:	int3   
   1400049c0:	int3   
   1400049c1:	int3   
   1400049c2:	int3   
   1400049c3:	int3   
   1400049c4:	int3   
   1400049c5:	int3   
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	sub    rsp,0x38
   1400049d4:	mov    eax,DWORD PTR [rip+0x3c4e]        # 0x140008628
   1400049da:	lea    r8,[rip+0x36b7]        # 0x140008098
   1400049e1:	mov    r9d,DWORD PTR [rip+0x3c3c]        # 0x140008624
   1400049e8:	lea    rdx,[rip+0x36a1]        # 0x140008090
   1400049ef:	mov    DWORD PTR [rip+0x36af],eax        # 0x1400080a4
   1400049f5:	lea    rcx,[rip+0x368c]        # 0x140008088
   1400049fc:	lea    rax,[rip+0x36a1]        # 0x1400080a4
   140004a03:	mov    QWORD PTR [rsp+0x20],rax
   140004a08:	call   QWORD PTR [rip+0x198a]        # 0x140006398
   140004a0e:	mov    DWORD PTR [rip+0x3678],eax        # 0x14000808c
   140004a14:	add    rsp,0x38
   140004a18:	ret    
   140004a19:	int3   
   140004a1a:	int3   
   140004a1b:	int3   
   140004a1c:	int3   
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	sub    rsp,0x28
   140004a24:	call   0x140005094
   140004a29:	add    rsp,0x28
   140004a2d:	jmp    0x140004a38
   140004a32:	int3   
   140004a33:	int3   
   140004a34:	int3   
   140004a35:	int3   
   140004a36:	int3   
   140004a37:	int3   
   140004a38:	mov    rax,rsp
   140004a3b:	mov    QWORD PTR [rax+0x8],rbx
   140004a3f:	mov    QWORD PTR [rax+0x10],rsi
   140004a43:	mov    QWORD PTR [rax+0x18],rdi
   140004a47:	push   r15
   140004a49:	sub    rsp,0xb0
   140004a50:	and    DWORD PTR [rsp+0x20],0x0
   140004a55:	lea    rcx,[rax-0x78]
   140004a59:	call   QWORD PTR [rip+0x18a9]        # 0x140006308
   140004a5f:	nop
   140004a60:	mov    rax,QWORD PTR gs:0x30
   140004a69:	mov    rbx,QWORD PTR [rax+0x8]
   140004a6d:	xor    esi,esi
   140004a6f:	xor    eax,eax
   140004a71:	lock cmpxchg QWORD PTR [rip+0x3d8e],rbx        # 0x140008808
   140004a7a:	je     0x140004a95
   140004a7c:	cmp    rax,rbx
   140004a7f:	jne    0x140004a88
   140004a81:	mov    esi,0x1
   140004a86:	jmp    0x140004a95
   140004a88:	mov    ecx,0x3e8
   140004a8d:	call   QWORD PTR [rip+0x161d]        # 0x1400060b0
   140004a93:	jmp    0x140004a6f
   140004a95:	mov    eax,DWORD PTR [rip+0x3d75]        # 0x140008810
   140004a9b:	cmp    eax,0x1
   140004a9e:	jne    0x140004aaa
   140004aa0:	lea    ecx,[rax+0x1e]
   140004aa3:	call   0x140004f94
   140004aa8:	jmp    0x140004b1b
   140004aaa:	mov    eax,DWORD PTR [rip+0x3d60]        # 0x140008810
   140004ab0:	test   eax,eax
   140004ab2:	jne    0x140004b11
   140004ab4:	mov    DWORD PTR [rip+0x3d52],0x1        # 0x140008810
   140004abe:	lea    r15,[rip+0x198b]        # 0x140006450
   140004ac5:	lea    rbx,[rip+0x196c]        # 0x140006438
   140004acc:	mov    QWORD PTR [rsp+0x38],rbx
   140004ad1:	mov    DWORD PTR [rsp+0x30],eax
   140004ad5:	cmp    rbx,r15
   140004ad8:	jae    0x140004b03
   140004ada:	test   eax,eax
   140004adc:	jne    0x140004b07
   140004ade:	mov    rdi,QWORD PTR [rbx]
   140004ae1:	test   rdi,rdi
   140004ae4:	je     0x140004af8
   140004ae6:	mov    rcx,rdi
   140004ae9:	mov    rax,QWORD PTR [rip+0x1920]        # 0x140006410
   140004af0:	call   rax
   140004af2:	call   rdi
   140004af4:	mov    DWORD PTR [rsp+0x30],eax
   140004af8:	add    rbx,0x8
   140004afc:	mov    QWORD PTR [rsp+0x38],rbx
   140004b01:	jmp    0x140004ad5
   140004b03:	test   eax,eax
   140004b05:	je     0x140004b1b
   140004b07:	mov    eax,0xff
   140004b0c:	jmp    0x140004c74
   140004b11:	mov    DWORD PTR [rip+0x3569],0x1        # 0x140008084
   140004b1b:	mov    eax,DWORD PTR [rip+0x3cef]        # 0x140008810
   140004b21:	cmp    eax,0x1
   140004b24:	jne    0x140004b43
   140004b26:	lea    rdx,[rip+0x1903]        # 0x140006430
   140004b2d:	lea    rcx,[rip+0x18ec]        # 0x140006420
   140004b34:	call   0x14000516a
   140004b39:	mov    DWORD PTR [rip+0x3ccd],0x2        # 0x140008810
   140004b43:	test   esi,esi
   140004b45:	jne    0x140004b50
   140004b47:	xor    eax,eax
   140004b49:	xchg   QWORD PTR [rip+0x3cb8],rax        # 0x140008808
   140004b50:	cmp    QWORD PTR [rip+0x3cc0],0x0        # 0x140008818
   140004b58:	je     0x140004b88
   140004b5a:	lea    rcx,[rip+0x3cb7]        # 0x140008818
   140004b61:	call   0x140005000
   140004b66:	test   eax,eax
   140004b68:	je     0x140004b88
   140004b6a:	mov    rbx,QWORD PTR [rip+0x3ca7]        # 0x140008818
   140004b71:	mov    rcx,rbx
   140004b74:	mov    rax,QWORD PTR [rip+0x1895]        # 0x140006410
   140004b7b:	call   rax
   140004b7d:	xor    r8d,r8d
   140004b80:	lea    edx,[r8+0x2]
   140004b84:	xor    ecx,ecx
   140004b86:	call   rbx
   140004b88:	mov    rax,QWORD PTR [rip+0x17e9]        # 0x140006378
   140004b8f:	mov    rbx,QWORD PTR [rax]
   140004b92:	mov    QWORD PTR [rsp+0x28],rbx
   140004b97:	mov    edi,DWORD PTR [rsp+0x20]
   140004b9b:	cmp    BYTE PTR [rbx],0x20
   140004b9e:	ja     0x140004c13
   140004ba0:	cmp    BYTE PTR [rbx],0x0
   140004ba3:	je     0x140004ba9
   140004ba5:	test   edi,edi
   140004ba7:	jne    0x140004c13
   140004ba9:	mov    al,BYTE PTR [rbx]
   140004bab:	dec    al
   140004bad:	cmp    al,0x1f
   140004baf:	ja     0x140004bbb
   140004bb1:	inc    rbx
   140004bb4:	mov    QWORD PTR [rsp+0x28],rbx
   140004bb9:	jmp    0x140004ba9
   140004bbb:	mov    ecx,DWORD PTR [rsp+0x7c]
   140004bbf:	movzx  eax,WORD PTR [rsp+0x80]
   140004bc7:	mov    r9d,0xa
   140004bcd:	and    cl,0x1
   140004bd0:	cmovne r9d,eax
   140004bd4:	mov    r8,rbx
   140004bd7:	xor    edx,edx
   140004bd9:	lea    rcx,[rip+0xffffffffffffb420]        # 0x140000000
   140004be0:	call   0x140001618
   140004be5:	mov    DWORD PTR [rip+0x3495],eax        # 0x140008080
   140004beb:	cmp    DWORD PTR [rip+0x34ae],0x0        # 0x1400080a0
   140004bf2:	jne    0x140004bfc
   140004bf4:	mov    ecx,eax
   140004bf6:	call   QWORD PTR [rip+0x17ac]        # 0x1400063a8
   140004bfc:	cmp    DWORD PTR [rip+0x3481],0x0        # 0x140008084
   140004c03:	jne    0x140004c11
   140004c05:	call   QWORD PTR [rip+0x17b5]        # 0x1400063c0
   140004c0b:	mov    eax,DWORD PTR [rip+0x346f]        # 0x140008080
   140004c11:	jmp    0x140004c74
   140004c13:	cmp    BYTE PTR [rbx],0x22
   140004c16:	jne    0x140004c25
   140004c18:	xor    eax,eax
   140004c1a:	test   edi,edi
   140004c1c:	sete   al
   140004c1f:	mov    edi,eax
   140004c21:	mov    DWORD PTR [rsp+0x20],eax
   140004c25:	movzx  ecx,BYTE PTR [rbx]
   140004c28:	call   QWORD PTR [rip+0x178a]        # 0x1400063b8
   140004c2e:	test   eax,eax
   140004c30:	je     0x140004c3a
   140004c32:	inc    rbx
   140004c35:	mov    QWORD PTR [rsp+0x28],rbx
   140004c3a:	inc    rbx
   140004c3d:	mov    QWORD PTR [rsp+0x28],rbx
   140004c42:	jmp    0x140004b9b
   140004c47:	mov    DWORD PTR [rip+0x3433],eax        # 0x140008080
   140004c4d:	cmp    DWORD PTR [rip+0x344c],0x0        # 0x1400080a0
   140004c54:	jne    0x140004c5f
   140004c56:	mov    ecx,eax
   140004c58:	call   QWORD PTR [rip+0x1772]        # 0x1400063d0
   140004c5e:	int3   
   140004c5f:	cmp    DWORD PTR [rip+0x341e],0x0        # 0x140008084
   140004c66:	jne    0x140004c74
   140004c68:	call   QWORD PTR [rip+0x1752]        # 0x1400063c0
   140004c6e:	mov    eax,DWORD PTR [rip+0x340c]        # 0x140008080
   140004c74:	lea    r11,[rsp+0xb0]
   140004c7c:	mov    rbx,QWORD PTR [r11+0x10]
   140004c80:	mov    rsi,QWORD PTR [r11+0x18]
   140004c84:	mov    rdi,QWORD PTR [r11+0x20]
   140004c88:	mov    rsp,r11
   140004c8b:	pop    r15
   140004c8d:	ret    
   140004c8e:	int3   
   140004c8f:	int3   
   140004c90:	int3   
   140004c91:	int3   
   140004c92:	int3   
   140004c93:	int3   
   140004c94:	int3   
   140004c95:	int3   
   140004c96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004ca0:	cmp    rcx,QWORD PTR [rip+0x3361]        # 0x140008008
   140004ca7:	jne    0x140004cb9
   140004ca9:	rol    rcx,0x10
   140004cad:	test   cx,0xffff
   140004cb2:	jne    0x140004cb5
   140004cb4:	ret    
   140004cb5:	ror    rcx,0x10
   140004cb9:	jmp    0x140004d00
   140004cbe:	int3   
   140004cbf:	int3   
   140004cc0:	int3   
   140004cc1:	int3   
   140004cc2:	int3   
   140004cc3:	int3   
   140004cc4:	rex push rbx
   140004cc6:	sub    rsp,0x20
   140004cca:	mov    rbx,rcx
   140004ccd:	xor    ecx,ecx
   140004ccf:	call   QWORD PTR [rip+0x15f3]        # 0x1400062c8
   140004cd5:	mov    rcx,rbx
   140004cd8:	call   QWORD PTR [rip+0x15f2]        # 0x1400062d0
   140004cde:	call   QWORD PTR [rip+0x139c]        # 0x140006080
   140004ce4:	mov    rcx,rax
   140004ce7:	mov    edx,0xc0000409
   140004cec:	add    rsp,0x20
   140004cf0:	pop    rbx
   140004cf1:	rex.W jmp QWORD PTR [rip+0x1608]        # 0x140006300
   140004cf8:	int3   
   140004cf9:	int3   
   140004cfa:	int3   
   140004cfb:	int3   
   140004cfc:	int3   
   140004cfd:	int3   
   140004cfe:	int3   
   140004cff:	int3   
   140004d00:	mov    QWORD PTR [rsp+0x8],rcx
   140004d05:	sub    rsp,0x88
   140004d0c:	lea    rcx,[rip+0x343d]        # 0x140008150
   140004d13:	call   QWORD PTR [rip+0x161f]        # 0x140006338
   140004d19:	mov    rax,QWORD PTR [rip+0x3528]        # 0x140008248
   140004d20:	mov    QWORD PTR [rsp+0x48],rax
   140004d25:	xor    r8d,r8d
   140004d28:	lea    rdx,[rsp+0x50]
   140004d2d:	mov    rcx,QWORD PTR [rsp+0x48]
   140004d32:	call   QWORD PTR [rip+0x1608]        # 0x140006340
   140004d38:	mov    QWORD PTR [rsp+0x40],rax
   140004d3d:	cmp    QWORD PTR [rsp+0x40],0x0
   140004d43:	je     0x140004d87
   140004d45:	mov    QWORD PTR [rsp+0x38],0x0
   140004d4e:	lea    rax,[rsp+0x58]
   140004d53:	mov    QWORD PTR [rsp+0x30],rax
   140004d58:	lea    rax,[rsp+0x60]
   140004d5d:	mov    QWORD PTR [rsp+0x28],rax
   140004d62:	lea    rax,[rip+0x33e7]        # 0x140008150
   140004d69:	mov    QWORD PTR [rsp+0x20],rax
   140004d6e:	mov    r9,QWORD PTR [rsp+0x40]
   140004d73:	mov    r8,QWORD PTR [rsp+0x48]
   140004d78:	mov    rdx,QWORD PTR [rsp+0x50]
   140004d7d:	xor    ecx,ecx
   140004d7f:	call   QWORD PTR [rip+0x15c3]        # 0x140006348
   140004d85:	jmp    0x140004daa
   140004d87:	mov    rax,QWORD PTR [rip+0x345a]        # 0x1400081e8
   140004d8e:	mov    rax,QWORD PTR [rax]
   140004d91:	mov    QWORD PTR [rip+0x34b0],rax        # 0x140008248
   140004d98:	mov    rax,QWORD PTR [rip+0x3449]        # 0x1400081e8
   140004d9f:	add    rax,0x8
   140004da3:	mov    QWORD PTR [rip+0x343e],rax        # 0x1400081e8
   140004daa:	mov    rax,QWORD PTR [rip+0x3497]        # 0x140008248
   140004db1:	mov    QWORD PTR [rip+0x3308],rax        # 0x1400080c0
   140004db8:	mov    rax,QWORD PTR [rsp+0x90]
   140004dc0:	mov    QWORD PTR [rip+0x3409],rax        # 0x1400081d0
   140004dc7:	mov    DWORD PTR [rip+0x32df],0xc0000409        # 0x1400080b0
   140004dd1:	mov    DWORD PTR [rip+0x32d9],0x1        # 0x1400080b4
   140004ddb:	mov    DWORD PTR [rip+0x32e3],0x3        # 0x1400080c8
   140004de5:	mov    eax,0x8
   140004dea:	imul   rax,rax,0x0
   140004dee:	lea    rcx,[rip+0x32db]        # 0x1400080d0
   140004df5:	mov    QWORD PTR [rcx+rax*1],0x2
   140004dfd:	mov    eax,0x8
   140004e02:	imul   rax,rax,0x1
   140004e06:	lea    rcx,[rip+0x32c3]        # 0x1400080d0
   140004e0d:	mov    rdx,QWORD PTR [rip+0x31f4]        # 0x140008008
   140004e14:	mov    QWORD PTR [rcx+rax*1],rdx
   140004e18:	mov    eax,0x8
   140004e1d:	imul   rax,rax,0x2
   140004e21:	lea    rcx,[rip+0x32a8]        # 0x1400080d0
   140004e28:	mov    rdx,QWORD PTR [rip+0x31e1]        # 0x140008010
   140004e2f:	mov    QWORD PTR [rcx+rax*1],rdx
   140004e33:	mov    eax,0x8
   140004e38:	imul   rax,rax,0x0
   140004e3c:	mov    rcx,QWORD PTR [rip+0x31c5]        # 0x140008008
   140004e43:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140004e48:	mov    eax,0x8
   140004e4d:	imul   rax,rax,0x1
   140004e51:	mov    rcx,QWORD PTR [rip+0x31b8]        # 0x140008010
   140004e58:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140004e5d:	lea    rcx,[rip+0x162c]        # 0x140006490
   140004e64:	call   0x140004cc4
   140004e69:	add    rsp,0x88
   140004e70:	ret    
   140004e71:	int3   
   140004e72:	int3   
   140004e73:	int3   
   140004e74:	int3   
   140004e75:	int3   
   140004e76:	int3   
   140004e77:	int3   
   140004e78:	int3   
   140004e79:	int3   
   140004e7a:	int3   
   140004e7b:	int3   
   140004e7c:	int3   
   140004e7d:	int3   
   140004e7e:	int3   
   140004e7f:	int3   
   140004e80:	sub    rsp,0x28
   140004e84:	mov    rax,QWORD PTR [rcx]
   140004e87:	cmp    DWORD PTR [rax],0xe06d7363
   140004e8d:	jne    0x140004eb2
   140004e8f:	cmp    DWORD PTR [rax+0x18],0x4
   140004e93:	jne    0x140004eb2
   140004e95:	mov    ecx,DWORD PTR [rax+0x20]
   140004e98:	lea    eax,[rcx-0x19930520]
   140004e9e:	cmp    eax,0x2
   140004ea1:	jbe    0x140004eab
   140004ea3:	cmp    ecx,0x1994000
   140004ea9:	jne    0x140004eb2
   140004eab:	call   QWORD PTR [rip+0x1517]        # 0x1400063c8
   140004eb1:	int3   
   140004eb2:	xor    eax,eax
   140004eb4:	add    rsp,0x28
   140004eb8:	ret    
   140004eb9:	int3   
   140004eba:	int3   
   140004ebb:	int3   
   140004ebc:	int3   
   140004ebd:	int3   
   140004ebe:	int3   
   140004ebf:	int3   
   140004ec0:	sub    rsp,0x28
   140004ec4:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140004e80
   140004ecb:	call   QWORD PTR [rip+0x13f7]        # 0x1400062c8
   140004ed1:	xor    eax,eax
   140004ed3:	add    rsp,0x28
   140004ed7:	ret    
   140004ed8:	int3   
   140004ed9:	int3   
   140004eda:	int3   
   140004edb:	int3   
   140004edc:	int3   
   140004edd:	int3   
   140004ede:	jmp    QWORD PTR [rip+0x1504]        # 0x1400063e8
   140004ee4:	int3   
   140004ee5:	int3   
   140004ee6:	int3   
   140004ee7:	int3   
   140004ee8:	int3   
   140004ee9:	int3   
   140004eea:	int3   
   140004eeb:	int3   
   140004eec:	sub    rsp,0x18
   140004ef0:	xor    edx,edx
   140004ef2:	lea    rax,[rcx-0x1]
   140004ef6:	cmp    rax,0xfffffffffffffffd
   140004efa:	ja     0x140004f38
   140004efc:	mov    eax,0x5a4d
   140004f01:	cmp    WORD PTR [rcx],ax
   140004f04:	jne    0x140004f30
   140004f06:	cmp    DWORD PTR [rcx+0x3c],edx
   140004f09:	jl     0x140004f30
   140004f0b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140004f12:	jae    0x140004f30
   140004f14:	movsxd rax,DWORD PTR [rcx+0x3c]
   140004f18:	add    rax,rcx
   140004f1b:	mov    QWORD PTR [rsp],rax
   140004f1f:	cmp    DWORD PTR [rax],0x4550
   140004f25:	cmovne rax,rdx
   140004f29:	mov    rdx,rax
   140004f2c:	mov    QWORD PTR [rsp],rax
   140004f30:	jmp    0x140004f38
   140004f32:	xor    edx,edx
   140004f34:	mov    QWORD PTR [rsp],rdx
   140004f38:	mov    rax,rdx
   140004f3b:	add    rsp,0x18
   140004f3f:	ret    
   140004f40:	int3   
   140004f41:	int3   
   140004f42:	int3   
   140004f43:	int3   
   140004f44:	int3   
   140004f45:	int3   
   140004f46:	int3   
   140004f47:	int3   
   140004f48:	rex push rbx
   140004f4a:	sub    rsp,0x20
   140004f4e:	mov    ebx,ecx
   140004f50:	xor    ecx,ecx
   140004f52:	call   QWORD PTR [rip+0x1398]        # 0x1400062f0
   140004f58:	test   rax,rax
   140004f5b:	je     0x140004f85
   140004f5d:	mov    rcx,rax
   140004f60:	call   0x140004eec
   140004f65:	test   rax,rax
   140004f68:	je     0x140004f85
   140004f6a:	mov    ecx,0x2
   140004f6f:	cmp    WORD PTR [rax+0x5c],cx
   140004f73:	jne    0x140004f79
   140004f75:	mov    eax,ecx
   140004f77:	jmp    0x140004f87
   140004f79:	cmp    WORD PTR [rax+0x5c],0x3
   140004f7e:	mov    eax,0x1
   140004f83:	je     0x140004f87
   140004f85:	mov    eax,ebx
   140004f87:	add    rsp,0x20
   140004f8b:	pop    rbx
   140004f8c:	ret    
   140004f8d:	int3   
   140004f8e:	int3   
   140004f8f:	int3   
   140004f90:	int3   
   140004f91:	int3   
   140004f92:	int3   
   140004f93:	int3   
   140004f94:	jmp    QWORD PTR [rip+0x13f6]        # 0x140006390
   140004f9a:	int3   
   140004f9b:	int3   
   140004f9c:	int3   
   140004f9d:	int3   
   140004f9e:	int3   
   140004f9f:	int3   
   140004fa0:	xor    eax,eax
   140004fa2:	ret    
   140004fa3:	int3   
   140004fa4:	int3   
   140004fa5:	int3   
   140004fa6:	int3   
   140004fa7:	int3   
   140004fa8:	int3   
   140004fa9:	int3   
   140004faa:	int3   
   140004fab:	int3   
   140004fac:	int3   
   140004fad:	int3   
   140004fae:	int3   
   140004faf:	int3   
   140004fb0:	movsxd r8,DWORD PTR [rcx+0x3c]
   140004fb4:	xor    r9d,r9d
   140004fb7:	add    r8,rcx
   140004fba:	mov    r10,rdx
   140004fbd:	movzx  eax,WORD PTR [r8+0x14]
   140004fc2:	movzx  r11d,WORD PTR [r8+0x6]
   140004fc7:	add    rax,0x18
   140004fcb:	add    rax,r8
   140004fce:	test   r11d,r11d
   140004fd1:	je     0x140004ff1
   140004fd3:	mov    edx,DWORD PTR [rax+0xc]
   140004fd6:	cmp    r10,rdx
   140004fd9:	jb     0x140004fe5
   140004fdb:	mov    ecx,DWORD PTR [rax+0x8]
   140004fde:	add    ecx,edx
   140004fe0:	cmp    r10,rcx
   140004fe3:	jb     0x140004ff3
   140004fe5:	inc    r9d
   140004fe8:	add    rax,0x28
   140004fec:	cmp    r9d,r11d
   140004fef:	jb     0x140004fd3
   140004ff1:	xor    eax,eax
   140004ff3:	ret    
   140004ff4:	int3   
   140004ff5:	int3   
   140004ff6:	int3   
   140004ff7:	int3   
   140004ff8:	int3   
   140004ff9:	int3   
   140004ffa:	int3   
   140004ffb:	int3   
   140004ffc:	int3   
   140004ffd:	int3   
   140004ffe:	int3   
   140004fff:	int3   
   140005000:	mov    QWORD PTR [rsp+0x8],rbx
   140005005:	push   rdi
   140005006:	sub    rsp,0x20
   14000500a:	mov    rbx,rcx
   14000500d:	lea    rdi,[rip+0xffffffffffffafec]        # 0x140000000
   140005014:	mov    rcx,rdi
   140005017:	call   0x140005060
   14000501c:	test   eax,eax
   14000501e:	je     0x140005042
   140005020:	sub    rbx,rdi
   140005023:	mov    rdx,rbx
   140005026:	mov    rcx,rdi
   140005029:	call   0x140004fb0
   14000502e:	test   rax,rax
   140005031:	je     0x140005042
   140005033:	mov    eax,DWORD PTR [rax+0x24]
   140005036:	shr    eax,0x1f
   140005039:	not    eax
   14000503b:	and    eax,0x1
   14000503e:	jmp    0x140005042
   140005040:	xor    eax,eax
   140005042:	mov    rbx,QWORD PTR [rsp+0x30]
   140005047:	add    rsp,0x20
   14000504b:	pop    rdi
   14000504c:	ret    
   14000504d:	int3   
   14000504e:	int3   
   14000504f:	int3   
   140005050:	int3   
   140005051:	int3   
   140005052:	int3   
   140005053:	int3   
   140005054:	int3   
   140005055:	int3   
   140005056:	int3   
   140005057:	int3   
   140005058:	int3   
   140005059:	int3   
   14000505a:	int3   
   14000505b:	int3   
   14000505c:	int3   
   14000505d:	int3   
   14000505e:	int3   
   14000505f:	int3   
   140005060:	mov    rax,rcx
   140005063:	mov    ecx,0x5a4d
   140005068:	cmp    WORD PTR [rax],cx
   14000506b:	je     0x140005070
   14000506d:	xor    eax,eax
   14000506f:	ret    
   140005070:	movsxd rcx,DWORD PTR [rax+0x3c]
   140005074:	add    rcx,rax
   140005077:	xor    eax,eax
   140005079:	cmp    DWORD PTR [rcx],0x4550
   14000507f:	jne    0x14000508d
   140005081:	mov    edx,0x20b
   140005086:	cmp    WORD PTR [rcx+0x18],dx
   14000508a:	sete   al
   14000508d:	ret    
   14000508e:	int3   
   14000508f:	int3   
   140005090:	int3   
   140005091:	int3   
   140005092:	int3   
   140005093:	int3   
   140005094:	mov    QWORD PTR [rsp+0x20],rbx
   140005099:	push   rbp
   14000509a:	mov    rbp,rsp
   14000509d:	sub    rsp,0x20
   1400050a1:	and    QWORD PTR [rbp+0x18],0x0
   1400050a6:	movabs rbx,0x2b992ddfa232
   1400050b0:	mov    rax,QWORD PTR [rip+0x2f51]        # 0x140008008
   1400050b7:	cmp    rax,rbx
   1400050ba:	jne    0x14000514f
   1400050c0:	lea    rcx,[rbp+0x18]
   1400050c4:	call   QWORD PTR [rip+0x1296]        # 0x140006360
   1400050ca:	mov    rax,QWORD PTR [rbp+0x18]
   1400050ce:	mov    QWORD PTR [rbp+0x10],rax
   1400050d2:	call   QWORD PTR [rip+0x1238]        # 0x140006310
   1400050d8:	mov    eax,eax
   1400050da:	xor    QWORD PTR [rbp+0x10],rax
   1400050de:	call   QWORD PTR [rip+0x1234]        # 0x140006318
   1400050e4:	mov    eax,eax
   1400050e6:	xor    QWORD PTR [rbp+0x10],rax
   1400050ea:	call   QWORD PTR [rip+0x1268]        # 0x140006358
   1400050f0:	mov    eax,eax
   1400050f2:	shl    rax,0x18
   1400050f6:	xor    QWORD PTR [rbp+0x10],rax
   1400050fa:	call   QWORD PTR [rip+0x1258]        # 0x140006358
   140005100:	mov    eax,eax
   140005102:	lea    rcx,[rbp+0x10]
   140005106:	xor    rax,QWORD PTR [rbp+0x10]
   14000510a:	xor    rax,rcx
   14000510d:	lea    rcx,[rbp+0x20]
   140005111:	mov    QWORD PTR [rbp+0x10],rax
   140005115:	call   QWORD PTR [rip+0x120d]        # 0x140006328
   14000511b:	mov    eax,DWORD PTR [rbp+0x20]
   14000511e:	movabs rcx,0xffffffffffff
   140005128:	shl    rax,0x20
   14000512c:	xor    rax,QWORD PTR [rbp+0x20]
   140005130:	xor    rax,QWORD PTR [rbp+0x10]
   140005134:	and    rax,rcx
   140005137:	movabs rcx,0x2b992ddfa233
   140005141:	cmp    rax,rbx
   140005144:	cmove  rax,rcx
   140005148:	mov    QWORD PTR [rip+0x2eb9],rax        # 0x140008008
   14000514f:	mov    rbx,QWORD PTR [rsp+0x48]
   140005154:	not    rax
   140005157:	mov    QWORD PTR [rip+0x2eb2],rax        # 0x140008010
   14000515e:	add    rsp,0x20
   140005162:	pop    rbp
   140005163:	ret    
   140005164:	int3   
   140005165:	int3   
   140005166:	int3   
   140005167:	int3   
   140005168:	int3   
   140005169:	int3   
   14000516a:	jmp    QWORD PTR [rip+0x1210]        # 0x140006380
   140005170:	int3   
   140005171:	int3   
   140005172:	int3   
   140005173:	int3   
   140005174:	int3   
   140005175:	int3   
   140005176:	jmp    QWORD PTR [rip+0x11f4]        # 0x140006370
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	int3   
   140005181:	int3   
   140005182:	int3   
   140005183:	int3   
   140005184:	int3   
   140005185:	int3   
   140005186:	int3   
   140005187:	int3   
   140005188:	int3   
   140005189:	int3   
   14000518a:	int3   
   14000518b:	int3   
   14000518c:	int3   
   14000518d:	int3   
   14000518e:	int3   
   14000518f:	int3   
   140005190:	ret    0x0
   140005193:	int3   
   140005194:	int3   
   140005195:	int3   
   140005196:	int3   
   140005197:	int3   
   140005198:	int3   
   140005199:	int3   
   14000519a:	int3   
   14000519b:	int3   
   14000519c:	int3   
   14000519d:	int3   
   14000519e:	int3   
   14000519f:	int3   
   1400051a0:	int3   
   1400051a1:	int3   
   1400051a2:	int3   
   1400051a3:	int3   
   1400051a4:	int3   
   1400051a5:	int3   
   1400051a6:	int3   
   1400051a7:	int3   
   1400051a8:	sub    rsp,0x28
   1400051ac:	mov    r8,QWORD PTR [r9+0x38]
   1400051b0:	mov    rcx,rdx
   1400051b3:	mov    rdx,r9
   1400051b6:	call   0x1400051cc
   1400051bb:	mov    eax,0x1
   1400051c0:	add    rsp,0x28
   1400051c4:	ret    
   1400051c5:	int3   
   1400051c6:	int3   
   1400051c7:	int3   
   1400051c8:	int3   
   1400051c9:	int3   
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	rex push rbx
   1400051ce:	sub    rsp,0x20
   1400051d2:	mov    r11d,DWORD PTR [r8]
   1400051d5:	mov    rbx,rdx
   1400051d8:	and    r11d,0xfffffff8
   1400051dc:	mov    r9,rcx
   1400051df:	test   BYTE PTR [r8],0x4
   1400051e3:	mov    r10,rcx
   1400051e6:	je     0x1400051fb
   1400051e8:	mov    eax,DWORD PTR [r8+0x8]
   1400051ec:	movsxd r10,DWORD PTR [r8+0x4]
   1400051f0:	neg    eax
   1400051f2:	add    r10,rcx
   1400051f5:	movsxd rcx,eax
   1400051f8:	and    r10,rcx
   1400051fb:	movsxd rax,r11d
   1400051fe:	mov    rdx,QWORD PTR [rax+r10*1]
   140005202:	mov    rax,QWORD PTR [rbx+0x10]
   140005206:	mov    ecx,DWORD PTR [rax+0x8]
   140005209:	add    rcx,QWORD PTR [rbx+0x8]
   14000520d:	test   BYTE PTR [rcx+0x3],0xf
   140005211:	je     0x14000521f
   140005213:	movzx  eax,BYTE PTR [rcx+0x3]
   140005217:	and    eax,0xfffffff0
   14000521a:	cdqe   
   14000521c:	add    r9,rax
   14000521f:	xor    r9,rdx
   140005222:	mov    rcx,r9
   140005225:	add    rsp,0x20
   140005229:	pop    rbx
   14000522a:	jmp    0x140004ca0
   14000522f:	int3   
   140005230:	int3   
   140005231:	int3   
   140005232:	int3   
   140005233:	int3   
   140005234:	int3   
   140005235:	int3   
   140005236:	jmp    QWORD PTR [rip+0x11b4]        # 0x1400063f0
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	int3   
   140005241:	int3   
   140005242:	int3   
   140005243:	int3   
   140005244:	int3   
   140005245:	int3   
   140005246:	data16 nop WORD PTR [rax+rax*1+0x0]
   140005250:	jmp    rax
   140005252:	int3   
   140005253:	int3   
   140005254:	int3   
   140005255:	int3   
   140005256:	int3   
   140005257:	int3   
   140005258:	int3   
   140005259:	int3   
   14000525a:	int3   
   14000525b:	int3   
   14000525c:	int3   
   14000525d:	int3   
   14000525e:	int3   
   14000525f:	int3   
   140005260:	int3   
   140005261:	int3   
   140005262:	int3   
   140005263:	int3   
   140005264:	int3   
   140005265:	int3   
   140005266:	rex push rbp
   140005268:	sub    rsp,0x20
   14000526c:	mov    rbp,rdx
   14000526f:	mov    rax,QWORD PTR [rcx]
   140005272:	mov    rdx,rcx
   140005275:	mov    ecx,DWORD PTR [rax]
   140005277:	call   0x140004ede
   14000527c:	nop
   14000527d:	add    rsp,0x20
   140005281:	pop    rbp
   140005282:	ret    
   140005283:	int3   
   140005284:	int3   
   140005285:	int3   
   140005286:	int3   
   140005287:	int3   
   140005288:	int3   
   140005289:	int3   
   14000528a:	int3   
   14000528b:	int3   
   14000528c:	int3   
   14000528d:	int3   
   14000528e:	int3   
   14000528f:	int3   
   140005290:	rex push rbp
   140005292:	sub    rsp,0x20
   140005296:	mov    rbp,rdx
   140005299:	mov    rax,QWORD PTR [rcx]
   14000529c:	xor    ecx,ecx
   14000529e:	cmp    DWORD PTR [rax],0xc0000005
   1400052a4:	sete   cl
   1400052a7:	mov    eax,ecx
   1400052a9:	add    rsp,0x20
   1400052ad:	pop    rbp
   1400052ae:	ret    
   1400052af:	int3   

Disassembly of section .rdata:

0000000140006000 <.rdata>:
   140006000:	sbb    BYTE PTR [rbx+0x0],dh
   140006003:	add    BYTE PTR [rax],al
   140006005:	add    BYTE PTR [rax],al
   140006007:	add    BYTE PTR [rax],ch
   140006009:	jae    0x14000600b
   14000600b:	add    BYTE PTR [rax],al
   14000600d:	add    BYTE PTR [rax],al
   14000600f:	add    BYTE PTR [rsi],bh
   140006011:	jae    0x140006013
   140006013:	add    BYTE PTR [rax],al
   140006015:	add    BYTE PTR [rax],al
   140006017:	add    BYTE PTR [rdx+0x73],dl
   14000601a:	add    BYTE PTR [rax],al
   14000601c:	add    BYTE PTR [rax],al
   14000601e:	add    BYTE PTR [rax],al
   140006020:	push   0x73
   140006022:	add    BYTE PTR [rax],al
   140006024:	add    BYTE PTR [rax],al
   140006026:	add    BYTE PTR [rax],al
   140006028:	je     0x14000609d
   14000602a:	add    BYTE PTR [rax],al
   14000602c:	add    BYTE PTR [rax],al
   14000602e:	add    BYTE PTR [rax],al
   140006030:	xchg   BYTE PTR [rbx+0x0],dh
   140006033:	add    BYTE PTR [rax],al
   140006035:	add    BYTE PTR [rax],al
   140006037:	add    BYTE PTR [rsi+0x73],bl
   14000603d:	add    BYTE PTR [rax],al
   14000603f:	add    BYTE PTR [rax+0x73],dh
   140006045:	add    BYTE PTR [rax],al
   140006047:	add    al,al
   140006049:	jae    0x14000604b
   14000604b:	add    BYTE PTR [rax],al
   14000604d:	add    BYTE PTR [rax],al
   14000604f:	add    dh,dl
   140006051:	jae    0x140006053
   140006053:	add    BYTE PTR [rax],al
   140006055:	add    BYTE PTR [rax],al
   140006057:	add    ah,ah
   140006059:	jae    0x14000605b
	...
   140006067:	add    BYTE PTR [rcx],dl
   140006069:	add    BYTE PTR [rax],al
   14000606b:	add    BYTE PTR [rax],al
   14000606d:	add    BYTE PTR [rax],al
   14000606f:	add    BYTE PTR [rax],0x0
   140006072:	add    BYTE PTR [rax],al
   140006074:	add    BYTE PTR [rax],al
   140006076:	add    BYTE PTR [rax],al
   140006078:	xor    al,0x74
   14000607a:	add    BYTE PTR [rax],al
   14000607c:	add    BYTE PTR [rax],al
   14000607e:	add    BYTE PTR [rax],al
   140006080:	push   rsp
   140006081:	je     0x140006083
   140006083:	add    BYTE PTR [rax],al
   140006085:	add    BYTE PTR [rax],al
   140006087:	add    BYTE PTR [rax+0x74],ch
   14000608a:	add    BYTE PTR [rax],al
   14000608c:	add    BYTE PTR [rax],al
   14000608e:	add    BYTE PTR [rax],al
   140006090:	jle    0x140006106
   140006092:	add    BYTE PTR [rax],al
   140006094:	add    BYTE PTR [rax],al
   140006096:	add    BYTE PTR [rax],al
   140006098:	pushf  
   140006099:	je     0x14000609b
   14000609b:	add    BYTE PTR [rax],al
   14000609d:	add    BYTE PTR [rax],al
   14000609f:	add    BYTE PTR [rax+0x74],ch
   1400060a5:	add    BYTE PTR [rax],al
   1400060a7:	add    al,al
   1400060a9:	je     0x1400060ab
   1400060ab:	add    BYTE PTR [rax],al
   1400060ad:	add    BYTE PTR [rax],al
   1400060af:	add    al,ch
   1400060b1:	je     0x1400060b3
   1400060b3:	add    BYTE PTR [rax],al
   1400060b5:	add    BYTE PTR [rax],al
   1400060b7:	add    al,dh
   1400060b9:	je     0x1400060bb
   1400060bb:	add    BYTE PTR [rax],al
   1400060bd:	add    BYTE PTR [rax],al
   1400060bf:	add    BYTE PTR [rdx],ah
   1400060c1:	je     0x1400060c3
   1400060c3:	add    BYTE PTR [rax],al
   1400060c5:	add    BYTE PTR [rax],al
   1400060c7:	add    BYTE PTR [rdx],bl
   1400060c9:	jne    0x1400060cb
   1400060cb:	add    BYTE PTR [rax],al
   1400060cd:	add    BYTE PTR [rax],al
   1400060cf:	add    BYTE PTR [rax],ch
   1400060d1:	jne    0x1400060d3
   1400060d3:	add    BYTE PTR [rax],al
   1400060d5:	add    BYTE PTR [rax],al
   1400060d7:	add    BYTE PTR [rsi*2+0x0],bh
   1400060de:	add    BYTE PTR [rax],al
   1400060e0:	rex.WR jne 0x1400060e3
   1400060e3:	add    BYTE PTR [rax],al
   1400060e5:	add    BYTE PTR [rax],al
   1400060e7:	add    BYTE PTR [rbp+rsi*2+0x0],bl
   1400060eb:	add    BYTE PTR [rax],al
   1400060ed:	add    BYTE PTR [rax],al
   1400060ef:	add    BYTE PTR [rbp+rsi*2+0x0],dh
   1400060f3:	add    BYTE PTR [rax],al
   1400060f5:	add    BYTE PTR [rax],al
   1400060f7:	add    BYTE PTR [rax+0x75],al
   1400060fd:	add    BYTE PTR [rax],al
   1400060ff:	add    BYTE PTR [rsi+0x75],cl
   140006105:	add    BYTE PTR [rax],al
   140006107:	add    BYTE PTR [rsi+0x75],bl
   14000610d:	add    BYTE PTR [rax],al
   14000610f:	add    BYTE PTR [rbp+rsi*2+0x0],bh
   140006116:	add    BYTE PTR [rax],al
   140006118:	(bad)  
   140006119:	jne    0x14000611b
   14000611b:	add    BYTE PTR [rax],al
   14000611d:	add    BYTE PTR [rax],al
   14000611f:	add    ah,ch
   140006121:	jne    0x140006123
   140006123:	add    BYTE PTR [rax],al
   140006125:	add    BYTE PTR [rax],al
   140006127:	add    ah,bh
   140006129:	jne    0x14000612b
   14000612b:	add    BYTE PTR [rax],al
   14000612d:	add    BYTE PTR [rax],al
   14000612f:	add    BYTE PTR [rdx],cl
   140006131:	jbe    0x140006133
   140006133:	add    BYTE PTR [rax],al
   140006135:	add    BYTE PTR [rax],al
   140006137:	add    BYTE PTR [rdx],ch
   140006139:	jbe    0x14000613b
   14000613b:	add    BYTE PTR [rax],al
   14000613d:	add    BYTE PTR [rax],al
   14000613f:	add    BYTE PTR [rax],bh
   140006141:	jbe    0x140006143
   140006143:	add    BYTE PTR [rax],al
   140006145:	add    BYTE PTR [rax],al
   140006147:	add    BYTE PTR [rsi+rsi*2+0x0],al
   14000614b:	add    BYTE PTR [rax],al
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    BYTE PTR [rsi+rsi*2+0x0],dl
   140006153:	add    BYTE PTR [rax],al
   140006155:	add    BYTE PTR [rax],al
   140006157:	add    BYTE PTR [rax+0x76],dh
   14000615a:	add    BYTE PTR [rax],al
   14000615c:	add    BYTE PTR [rax],al
   14000615e:	add    BYTE PTR [rax],al
   140006160:	xor    BYTE PTR [rsi+0x0],0x0
   140006164:	add    BYTE PTR [rax],al
   140006166:	add    BYTE PTR [rax],al
   140006168:	or     BYTE PTR [rax+rax*1+0x0],dh
   14000616c:	add    BYTE PTR [rax],al
   14000616e:	add    BYTE PTR [rax],al
   140006170:	or     BYTE PTR [rbp+0x0],dh
	...
   14000617f:	add    BYTE PTR [rax+rax*1],bh
   140006182:	add    BYTE PTR [rax],al
   140006184:	add    BYTE PTR [rax],al
   140006186:	add    BYTE PTR [rax+0x79e8],al
   14000618c:	add    BYTE PTR [rax],al
   14000618e:	add    BYTE PTR [rax],al
   140006190:	(bad)  
   140006191:	jns    0x140006193
	...
   14000619f:	add    BYTE PTR [rdx],cl
   1400061a1:	ja     0x1400061a3
   1400061a3:	add    BYTE PTR [rax],al
   1400061a5:	add    BYTE PTR [rax],al
   1400061a7:	add    BYTE PTR [rdi+rsi*2],bl
   1400061aa:	add    BYTE PTR [rax],al
   1400061ac:	add    BYTE PTR [rax],al
   1400061ae:	add    BYTE PTR [rax],al
   1400061b0:	sub    dh,BYTE PTR [rdi+0x0]
   1400061b3:	add    BYTE PTR [rax],al
   1400061b5:	add    BYTE PTR [rax],al
   1400061b7:	add    BYTE PTR [rdi+rsi*2],bh
   1400061ba:	add    BYTE PTR [rax],al
   1400061bc:	add    BYTE PTR [rax],al
   1400061be:	add    BYTE PTR [rax],al
   1400061c0:	push   rdx
   1400061c1:	ja     0x1400061c3
   1400061c3:	add    BYTE PTR [rax],al
   1400061c5:	add    BYTE PTR [rax],al
   1400061c7:	add    BYTE PTR [rax+0x77],ah
   1400061ca:	add    BYTE PTR [rax],al
   1400061cc:	add    BYTE PTR [rax],al
   1400061ce:	add    BYTE PTR [rax],al
   1400061d0:	jb     0x140006249
   1400061d2:	add    BYTE PTR [rax],al
   1400061d4:	add    BYTE PTR [rax],al
   1400061d6:	add    BYTE PTR [rax],al
   1400061d8:	nop
   1400061d9:	ja     0x1400061db
   1400061db:	add    BYTE PTR [rax],al
   1400061dd:	add    BYTE PTR [rax],al
   1400061df:	add    BYTE PTR [rax+0x77],ah
   1400061e5:	add    BYTE PTR [rax],al
   1400061e7:	add    BYTE PTR [rdi+rsi*2+0x0],dh
   1400061ee:	add    BYTE PTR [rax],al
   1400061f0:	retf   0x77
   1400061f3:	add    BYTE PTR [rax],al
   1400061f5:	add    BYTE PTR [rax],al
   1400061f7:	add    dh,dl
   1400061f9:	ja     0x1400061fb
   1400061fb:	add    BYTE PTR [rax],al
   1400061fd:	add    BYTE PTR [rax],al
   1400061ff:	add    ah,ah
   140006201:	ja     0x140006203
   140006203:	add    BYTE PTR [rax],al
   140006205:	add    BYTE PTR [rax],al
   140006207:	add    dh,dh
   140006209:	ja     0x14000620b
   14000620b:	add    BYTE PTR [rax],al
   14000620d:	add    BYTE PTR [rax],al
   14000620f:	add    dh,dh
   140006211:	jbe    0x140006213
   140006213:	add    BYTE PTR [rax],al
   140006215:	add    BYTE PTR [rax],al
   140006217:	add    BYTE PTR [rsi],dl
   140006219:	js     0x14000621b
   14000621b:	add    BYTE PTR [rax],al
   14000621d:	add    BYTE PTR [rax],al
   14000621f:	add    BYTE PTR [rsi],ah
   140006221:	js     0x140006223
   140006223:	add    BYTE PTR [rax],al
   140006225:	add    BYTE PTR [rax],al
   140006227:	add    BYTE PTR [rdx+0x78],al
   14000622a:	add    BYTE PTR [rax],al
   14000622c:	add    BYTE PTR [rax],al
   14000622e:	add    BYTE PTR [rax],al
   140006230:	rex.WRX js 0x140006233
   140006233:	add    BYTE PTR [rax],al
   140006235:	add    BYTE PTR [rax],al
   140006237:	add    BYTE PTR [rax+0x78],ah
   14000623a:	add    BYTE PTR [rax],al
   14000623c:	add    BYTE PTR [rax],al
   14000623e:	add    BYTE PTR [rax],al
   140006240:	jbe    0x1400062ba
   140006242:	add    BYTE PTR [rax],al
   140006244:	add    BYTE PTR [rax],al
   140006246:	add    BYTE PTR [rax],al
   140006248:	(bad)  
   140006249:	js     0x14000624b
   14000624b:	add    BYTE PTR [rax],al
   14000624d:	add    BYTE PTR [rax],al
   14000624f:	add    BYTE PTR [rdx+0x78],dl
   140006255:	add    BYTE PTR [rax],al
   140006257:	add    BYTE PTR [rax+0x78],ah
   14000625d:	add    BYTE PTR [rax],al
   14000625f:	add    BYTE PTR [rdx+0x78],dh
   140006265:	add    BYTE PTR [rax],al
   140006267:	add    al,al
   140006269:	js     0x14000626b
   14000626b:	add    BYTE PTR [rax],al
   14000626d:	add    BYTE PTR [rax],al
   14000626f:	add    al,dl
   140006271:	js     0x140006273
   140006273:	add    BYTE PTR [rax],al
   140006275:	add    BYTE PTR [rax],al
   140006277:	add    BYTE PTR [rsi+rsi*2+0x0],dh
   14000627e:	add    BYTE PTR [rax],al
   140006280:	movabs al,ds:0xe400000000000076
   140006289:	jbe    0x14000628b
   14000628b:	add    BYTE PTR [rax],al
   14000628d:	add    BYTE PTR [rax],al
   14000628f:	add    ah,dl
   140006291:	jbe    0x140006293
   140006293:	add    BYTE PTR [rax],al
   140006295:	add    BYTE PTR [rax],al
   140006297:	add    BYTE PTR [rdx],al
   140006299:	js     0x14000629b
   14000629b:	add    BYTE PTR [rax],al
   14000629d:	add    BYTE PTR [rax],al
   14000629f:	add    dh,al
   1400062a1:	jbe    0x1400062a3
	...
   1400062af:	add    BYTE PTR [rsi],al
   1400062b1:	jp     0x1400062b3
   1400062b3:	add    BYTE PTR [rax],al
   1400062b5:	add    BYTE PTR [rax],al
   1400062b7:	add    BYTE PTR [rax],ah
   1400062b9:	jp     0x1400062bb
	...
   1400062c7:	add    BYTE PTR [rdx+rdi*2+0x0],ch
   1400062ce:	add    BYTE PTR [rax],al
   1400062d0:	nop
   1400062d1:	jp     0x1400062d3
	...
   1400062df:	add    BYTE PTR [rdx+0x7b],ah
	...
   1400062ee:	add    BYTE PTR [rax],al
   1400062f0:	fidivr WORD PTR [rdx+0x0]
	...
   1400062ff:	add    dl,cl
   140006301:	jp     0x140006303
   140006303:	add    BYTE PTR [rax],al
   140006305:	add    BYTE PTR [rax],al
   140006307:	add    BYTE PTR [rdx+rdi*2],bh
   14000630a:	add    BYTE PTR [rax],al
   14000630c:	add    BYTE PTR [rax],al
   14000630e:	add    BYTE PTR [rax],al
   140006310:	or     al,0x7b
   140006312:	add    BYTE PTR [rax],al
   140006314:	add    BYTE PTR [rax],al
   140006316:	add    BYTE PTR [rax],al
   140006318:	and    bh,BYTE PTR [rbx+0x0]
	...
   140006327:	add    dl,dh
   140006329:	jp     0x14000632b
	...
   140006337:	add    BYTE PTR [rsi+0x7a],cl
   14000633a:	add    BYTE PTR [rax],al
   14000633c:	add    BYTE PTR [rax],al
   14000633e:	add    BYTE PTR [rax],al
   140006340:	(bad)  
   140006341:	jp     0x140006343
   140006343:	add    BYTE PTR [rax],al
   140006345:	add    BYTE PTR [rax],al
   140006347:	add    BYTE PTR [rdx+rdi*2+0x0],bh
	...
   140006357:	add    BYTE PTR [rdx+0x7b],dl
   14000635a:	add    BYTE PTR [rax],al
   14000635c:	add    BYTE PTR [rax],al
   14000635e:	add    BYTE PTR [rax],al
   140006360:	cmp    BYTE PTR [rbx+0x0],bh
	...
   14000636f:	add    BYTE PTR [rcx+rdi*2+0x0],bh
   140006373:	add    BYTE PTR [rax],al
   140006375:	add    BYTE PTR [rax],al
   140006377:	add    BYTE PTR [rcx+rdi*2+0x0],dl
   14000637e:	add    BYTE PTR [rax],al
   140006380:	jo     0x1400063fb
   140006382:	add    BYTE PTR [rax],al
   140006384:	add    BYTE PTR [rax],al
   140006386:	add    BYTE PTR [rax],al
   140006388:	sahf   
   140006389:	jns    0x14000638b
   14000638b:	add    BYTE PTR [rax],al
   14000638d:	add    BYTE PTR [rax],al
   14000638f:	add    BYTE PTR [rcx+rdi*2],al
   140006392:	add    BYTE PTR [rax],al
   140006394:	add    BYTE PTR [rax],al
   140006396:	add    BYTE PTR [rax],al
   140006398:	adc    bh,BYTE PTR [rcx+0x0]
   14000639b:	add    BYTE PTR [rax],al
   14000639d:	add    BYTE PTR [rax],al
   14000639f:	add    BYTE PTR [rdx],ah
   1400063a1:	jns    0x1400063a3
   1400063a3:	add    BYTE PTR [rax],al
   1400063a5:	add    BYTE PTR [rax],al
   1400063a7:	add    BYTE PTR [rcx+rdi*2],dh
   1400063aa:	add    BYTE PTR [rax],al
   1400063ac:	add    BYTE PTR [rax],al
   1400063ae:	add    BYTE PTR [rax],al
   1400063b0:	pop    rsp
   1400063b1:	jns    0x1400063b3
   1400063b3:	add    BYTE PTR [rax],al
   1400063b5:	add    BYTE PTR [rax],al
   1400063b7:	add    BYTE PTR [rsi+0x79],cl
   1400063ba:	add    BYTE PTR [rax],al
   1400063bc:	add    BYTE PTR [rax],al
   1400063be:	add    BYTE PTR [rax],al
   1400063c0:	rex.R jns 0x1400063c3
   1400063c3:	add    BYTE PTR [rax],al
   1400063c5:	add    BYTE PTR [rax],al
   1400063c7:	add    al,al
   1400063c9:	jns    0x1400063cb
   1400063cb:	add    BYTE PTR [rax],al
   1400063cd:	add    BYTE PTR [rax],al
   1400063cf:	add    BYTE PTR [rcx+rdi*2],bh
   1400063d2:	add    BYTE PTR [rax],al
   1400063d4:	add    BYTE PTR [rax],al
   1400063d6:	add    BYTE PTR [rax],al
   1400063d8:	test   al,0x79
   1400063da:	add    BYTE PTR [rax],al
   1400063dc:	add    BYTE PTR [rax],al
   1400063de:	add    BYTE PTR [rax],al
   1400063e0:	call   0x14000645d
   1400063e5:	add    BYTE PTR [rax],al
   1400063e7:	add    dh,dh
   1400063e9:	js     0x1400063eb
   1400063eb:	add    BYTE PTR [rax],al
   1400063ed:	add    BYTE PTR [rax],al
   1400063ef:	add    BYTE PTR [rdx+0x7c],dh
	...
   1400063fd:	add    BYTE PTR [rax],al
   1400063ff:	add    BYTE PTR [rax+0x7c],bl
	...
   14000640d:	add    BYTE PTR [rax],al
   14000640f:	add    BYTE PTR [rax+0x1400051],dl
   140006415:	add    BYTE PTR [rax],al
   140006417:	add    BYTE PTR [rax+0x52],dl
   14000641a:	add    BYTE PTR [rax+0x1],al
	...
   140006425:	add    BYTE PTR [rax],al
   140006427:	add    al,dl
   140006429:	rex.WB add BYTE PTR [r8+0x1],al
	...
   14000643d:	add    BYTE PTR [rax],al
   14000643f:	add    al,dh
   140006441:	rex.W add BYTE PTR [rax+0x1],al
   140006445:	add    BYTE PTR [rax],al
   140006447:	add    al,al
   140006449:	rex.WRX add BYTE PTR [rax+0x1],r8b
	...
   140006459:	adc    eax,0x1b700000
   14000645e:	add    BYTE PTR [rax],al
   140006460:	and    BYTE PTR [rdi],bl
   140006462:	add    BYTE PTR [rax],al
   140006464:	xor    BYTE PTR [rsi],dh
   140006466:	add    BYTE PTR [rax],al
   140006468:	nop
   140006469:	cmp    al,BYTE PTR [rax]
   14000646b:	add    al,dh
   14000646d:	rex.W add BYTE PTR [rax],al
   140006470:	ror    BYTE PTR [rcx+0x0],1
   140006473:	add    BYTE PTR [rax],ah
   140006475:	rex.WX add BYTE PTR [rax],al
   140006478:	add    BYTE PTR [rbp+0x0],cl
   14000647b:	add    BYTE PTR [rax-0x3fffffb2],al
   140006481:	rex.WRX add BYTE PTR [rax],r8b
   140006484:	movabs al,ds:0x519000004f
   14000648d:	add    BYTE PTR [rax],al
   14000648f:	add    BYTE PTR [rax+0x1400080],dh
   140006495:	add    BYTE PTR [rax],al
   140006497:	add    BYTE PTR [rax-0x7f],dl
   14000649a:	add    BYTE PTR [rax+0x1],al
   14000649d:	add    BYTE PTR [rax],al
   14000649f:	add    BYTE PTR [rax+rax*1+0x0],bl
   1400064a3:	add    BYTE PTR [rax],al
   1400064a5:	add    BYTE PTR [rax],al
   1400064a7:	add    BYTE PTR [rax+rax*1],bh
   1400064aa:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   1400064ae:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   1400064b3:	add    BYTE PTR [rax],al
   1400064b5:	add    BYTE PTR [rax],al
   1400064b7:	add    BYTE PTR [rsi+0x0],cl
   1400064ba:	push   rbp
   1400064bb:	add    BYTE PTR [rax+rax*1+0x4c],cl
	...
   1400064c7:	add    BYTE PTR [rax+rax*1+0x52],dl
   1400064cb:	add    BYTE PTR [rbp+0x0],dl
   1400064ce:	add    BYTE PTR [r8],r8b
   1400064d1:	add    BYTE PTR [rax],al
   1400064d3:	add    BYTE PTR [rax],al
   1400064d5:	add    BYTE PTR [rax],al
   1400064d7:	add    BYTE PTR [rsi+0x0],al
   1400064da:	add    BYTE PTR [r8+rax*1+0x53],cl
   1400064df:	add    BYTE PTR [rbp+0x0],al
   1400064e2:	add    BYTE PTR [rax],al
   1400064e4:	add    BYTE PTR [rax],al
   1400064e6:	add    BYTE PTR [rax],al
   1400064e8:	push   rbp
   1400064e9:	add    BYTE PTR [rbx+0x0],dl
   1400064ec:	add    BYTE PTR [r10+0x0],r10b
   1400064f0:	push   rax
   1400064f1:	add    BYTE PTR [rdx+0x0],dl
   1400064f4:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   1400064f8:	rex.WB add BYTE PTR [r8+rax*1+0x45],cl
   1400064fd:	add    BYTE PTR [rax],al
   1400064ff:	add    BYTE PTR [rbx+0x0],dl
   140006502:	outs   dx,DWORD PTR ds:[rsi]
   140006503:	add    BYTE PTR [rsi+0x0],ah
   140006506:	je     0x140006508
   140006508:	ja     0x14000650a
   14000650a:	(bad)  
   14000650b:	add    BYTE PTR [rdx+0x0],dh
   14000650e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140006513:	add    BYTE PTR [rcx+0x0],ch
   140006516:	movsxd eax,DWORD PTR [rax]
   140006518:	jb     0x14000651a
   14000651a:	outs   dx,DWORD PTR ds:[rsi]
   14000651b:	add    BYTE PTR [rbx+0x0],dh
   14000651e:	outs   dx,DWORD PTR ds:[rsi]
   14000651f:	add    BYTE PTR [rsi+0x0],ah
   140006522:	je     0x140006524
   140006524:	pop    rsp
   140006525:	add    BYTE PTR [rdi+0x0],dl
   140006528:	imul   eax,DWORD PTR [rax],0x64006e
   14000652e:	outs   dx,DWORD PTR ds:[rsi]
   14000652f:	add    BYTE PTR [rdi+0x0],dh
   140006532:	jae    0x140006534
   140006534:	pop    rsp
   140006535:	add    BYTE PTR [rbx+0x0],al
   140006538:	jne    0x14000653a
   14000653a:	jb     0x14000653c
   14000653c:	jb     0x14000653e
   14000653e:	add    BYTE PTR gs:[rsi+0x0],ch
   140006542:	je     0x140006544
   140006544:	push   rsi
   140006545:	add    BYTE PTR [rbp+0x0],ah
   140006548:	jb     0x14000654a
   14000654a:	jae    0x14000654c
   14000654c:	imul   eax,DWORD PTR [rax],0x6e006f
   140006552:	pop    rsp
   140006553:	add    BYTE PTR [rax+0x0],dl
   140006556:	outs   dx,DWORD PTR ds:[rsi]
   140006557:	add    BYTE PTR [rax+rax*1+0x69],ch
   14000655b:	add    BYTE PTR [rbx+0x0],ah
   14000655e:	imul   eax,DWORD PTR [rax],0x730065
   140006564:	pop    rsp
   140006565:	add    BYTE PTR [rbx+0x0],dl
   140006568:	jns    0x14000656a
   14000656a:	jae    0x14000656c
   14000656c:	je     0x14000656e
   14000656e:	add    BYTE PTR gs:[rbp+0x0],ch
   140006572:	add    BYTE PTR [rax],al
   140006574:	add    BYTE PTR [rax],al
   140006576:	add    BYTE PTR [rax],al
   140006578:	push   rax
   140006579:	add    BYTE PTR [rdx+0x0],dh
   14000657c:	outs   dx,DWORD PTR ds:[rsi]
   14000657d:	add    BYTE PTR [rsi+0x0],ah
   140006580:	imul   eax,DWORD PTR [rax],0x65006c
   140006586:	push   rcx
   140006587:	add    BYTE PTR [rbp+0x0],dh
   14000658a:	outs   dx,DWORD PTR ds:[rsi]
   14000658b:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000658f:	add    BYTE PTR [rbp+0x0],cl
   140006592:	add    BYTE PTR gs:[rbx+0x0],dh
   140006596:	jae    0x140006598
   140006598:	(bad)  
   140006599:	add    BYTE PTR [rdi+0x0],ah
   14000659c:	add    BYTE PTR gs:[rax],al
   14000659f:	add    BYTE PTR [rbp+0x0],al
   1400065a2:	outs   dx,BYTE PTR ds:[rsi]
   1400065a3:	add    BYTE PTR [rcx+0x0],ah
   1400065a6:	(bad)  
   1400065a7:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400065ab:	add    BYTE PTR [rax+0x0],dl
   1400065ae:	jb     0x1400065b0
   1400065b0:	outs   dx,DWORD PTR ds:[rsi]
   1400065b1:	add    BYTE PTR [rsi+0x0],ah
   1400065b4:	imul   eax,DWORD PTR [rax],0x65006c
   1400065ba:	push   rcx
   1400065bb:	add    BYTE PTR [rbp+0x0],dh
   1400065be:	outs   dx,DWORD PTR ds:[rsi]
   1400065bf:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400065c3:	add    BYTE PTR [rax],al
   1400065c5:	add    BYTE PTR [rax],al
   1400065c7:	add    BYTE PTR [rbp+0x0],cl
   1400065ca:	(bad)  
   1400065cb:	add    BYTE PTR [rax+0x0],bh
   1400065ce:	push   rax
   1400065cf:	add    BYTE PTR [rdx+0x0],dh
   1400065d2:	outs   dx,DWORD PTR ds:[rsi]
   1400065d3:	add    BYTE PTR [rsi+0x0],ah
   1400065d6:	imul   eax,DWORD PTR [rax],0x65006c
   1400065dc:	push   rbx
   1400065dd:	add    BYTE PTR [rcx+0x0],ch
   1400065e0:	jp     0x1400065e2
   1400065e2:	add    BYTE PTR gs:[rax],al
   1400065e5:	add    BYTE PTR [rax],al
   1400065e7:	add    BYTE PTR [rcx+0x0],cl
   1400065ea:	outs   dx,BYTE PTR ds:[rsi]
   1400065eb:	add    BYTE PTR [rbx+0x0],ah
   1400065ee:	ins    BYTE PTR es:[rdi],dx
   1400065ef:	add    BYTE PTR [rbp+0x0],dh
   1400065f2:	add    BYTE PTR fs:[rbp+0x0],ah
   1400065f6:	push   rdx
   1400065f7:	add    BYTE PTR [rbp+0x0],ah
   1400065fa:	add    BYTE PTR [ecx+0x0],cl
   1400065fe:	outs   dx,BYTE PTR ds:[rsi]
   1400065ff:	add    BYTE PTR [rax+0x0],dl
   140006602:	jb     0x140006604
   140006604:	outs   dx,DWORD PTR ds:[rsi]
   140006605:	add    BYTE PTR [rcx+0x0],dl
   140006608:	jne    0x14000660a
   14000660a:	outs   dx,DWORD PTR ds:[rsi]
   14000660b:	add    BYTE PTR [rax+rax*1+0x61],dh
	...
   140006617:	add    BYTE PTR [rdi+0x0],dl
   14000661a:	(bad)  
   14000661b:	add    BYTE PTR [rdx+0x0],dh
   14000661e:	outs   dx,BYTE PTR ds:[rsi]
   14000661f:	add    BYTE PTR [rbp+0x0],dl
   140006622:	jae    0x140006624
   140006624:	add    BYTE PTR gs:[rdx+0x0],dh
	...
   140006630:	push   rdi
   140006631:	add    BYTE PTR [rcx+0x0],ah
   140006634:	jb     0x140006636
   140006636:	outs   dx,BYTE PTR ds:[rsi]
   140006637:	add    BYTE PTR [rbp+0x0],dl
   14000663a:	jae    0x14000663c
   14000663c:	add    BYTE PTR gs:[rdx+0x0],dh
   140006640:	push   rsp
   140006641:	add    BYTE PTR [rcx+0x0],ch
   140006644:	ins    DWORD PTR es:[rdi],dx
   140006645:	add    BYTE PTR [rbp+0x0],ah
   140006648:	outs   dx,DWORD PTR ds:[rsi]
   140006649:	add    BYTE PTR [rbp+0x0],dh
   14000664c:	je     0x14000664e
   14000664e:	add    BYTE PTR [rax],al
   140006650:	sub    al,BYTE PTR [rax]
   140006652:	add    BYTE PTR cs:[rdx],ch
   140006655:	add    BYTE PTR [rax],al
   140006657:	add    BYTE PTR [rax+rax*1+0x2a],bl
   14000665b:	add    BYTE PTR [rsi],ch
   14000665d:	add    BYTE PTR [rdx],ch
   14000665f:	add    BYTE PTR [rax],al
   140006661:	add    BYTE PTR [rax],al
   140006663:	add    BYTE PTR [rsi],ch
   140006665:	add    BYTE PTR [rax],al
   140006667:	add    BYTE PTR [rsi],ch
   140006669:	add    BYTE PTR [rsi],ch
   14000666b:	add    BYTE PTR [rax],al
   14000666d:	add    BYTE PTR [rax],al
   14000666f:	add    BYTE PTR [rsi+0x0],ch
   140006672:	je     0x140006674
   140006674:	jne    0x140006676
   140006676:	jae    0x140006678
   140006678:	add    BYTE PTR gs:[rdx+0x0],dh
   14000667c:	add    BYTE PTR [rax],al
   14000667e:	add    BYTE PTR [rax],al
   140006680:	push   rbx
   140006681:	add    BYTE PTR [rdi+0x0],ch
   140006684:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140006689:	add    BYTE PTR [rcx+0x0],ah
   14000668c:	jb     0x14000668e
   14000668e:	add    BYTE PTR gs:[rax+rax*1+0x50],bl
   140006693:	add    BYTE PTR [rdi+0x0],ch
   140006696:	ins    BYTE PTR es:[rdi],dx
   140006697:	add    BYTE PTR [rcx+0x0],ch
   14000669a:	movsxd eax,DWORD PTR [rax]
   14000669c:	imul   eax,DWORD PTR [rax],0x730065
   1400066a2:	pop    rsp
   1400066a3:	add    BYTE PTR [rbp+0x0],cl
   1400066a6:	imul   eax,DWORD PTR [rax],0x720063
   1400066ac:	outs   dx,DWORD PTR ds:[rsi]
   1400066ad:	add    BYTE PTR [rbx+0x0],dh
   1400066b0:	outs   dx,DWORD PTR ds:[rsi]
   1400066b1:	add    BYTE PTR [rsi+0x0],ah
   1400066b4:	je     0x1400066b6
   1400066b6:	pop    rsp
   1400066b7:	add    BYTE PTR [rdi+0x0],dl
   1400066ba:	imul   eax,DWORD PTR [rax],0x64006e
   1400066c0:	outs   dx,DWORD PTR ds:[rsi]
   1400066c1:	add    BYTE PTR [rdi+0x0],dh
   1400066c4:	jae    0x1400066c6
   1400066c6:	pop    rsp
   1400066c7:	add    BYTE PTR [rbx+0x0],dl
   1400066ca:	jns    0x1400066cc
   1400066cc:	jae    0x1400066ce
   1400066ce:	je     0x1400066d0
   1400066d0:	add    BYTE PTR gs:[rbp+0x0],ch
   1400066d4:	add    BYTE PTR [rax],al
   1400066d6:	add    BYTE PTR [rax],al
   1400066d8:	add    BYTE PTR [r8+0x0],r15b
   1400066dc:	movsxd eax,DWORD PTR [rax]
   1400066de:	ins    BYTE PTR es:[rdi],dx
   1400066df:	add    BYTE PTR [rbp+0x0],dh
   1400066e2:	add    BYTE PTR fs:[rbp+0x0],ah
   1400066e6:	push   rax
   1400066e7:	add    BYTE PTR [rdx+0x0],dh
   1400066ea:	outs   dx,DWORD PTR ds:[rsi]
   1400066eb:	add    BYTE PTR [rsi+0x0],ah
   1400066ee:	imul   eax,DWORD PTR [rax],0x65006c
   1400066f4:	add    BYTE PTR [rcx+0x0],r13b
   1400066f8:	jb     0x1400066fa
   1400066fa:	jae    0x1400066fc
   1400066fc:	add    BYTE PTR [rax],al
   1400066fe:	add    BYTE PTR [rax],al
   140006700:	push   rbx
   140006701:	add    BYTE PTR [rdi+0x0],ch
   140006704:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140006709:	add    BYTE PTR [rcx+0x0],ah
   14000670c:	jb     0x14000670e
   14000670e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   140006713:	add    BYTE PTR [rcx+0x0],ch
   140006716:	movsxd eax,DWORD PTR [rax]
   140006718:	jb     0x14000671a
   14000671a:	outs   dx,DWORD PTR ds:[rsi]
   14000671b:	add    BYTE PTR [rbx+0x0],dh
   14000671e:	outs   dx,DWORD PTR ds:[rsi]
   14000671f:	add    BYTE PTR [rsi+0x0],ah
   140006722:	je     0x140006724
   140006724:	pop    rsp
   140006725:	add    BYTE PTR [rdi+0x0],dl
   140006728:	imul   eax,DWORD PTR [rax],0x64006e
   14000672e:	outs   dx,DWORD PTR ds:[rsi]
   14000672f:	add    BYTE PTR [rdi+0x0],dh
   140006732:	jae    0x140006734
   140006734:	and    BYTE PTR [rax],al
   140006736:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   14000673b:	add    BYTE PTR [rbx+0x0],al
   14000673e:	jne    0x140006740
   140006740:	jb     0x140006742
   140006742:	jb     0x140006744
   140006744:	add    BYTE PTR gs:[rsi+0x0],ch
   140006748:	je     0x14000674a
   14000674a:	push   rsi
   14000674b:	add    BYTE PTR [rbp+0x0],ah
   14000674e:	jb     0x140006750
   140006750:	jae    0x140006752
   140006752:	imul   eax,DWORD PTR [rax],0x6e006f
   140006758:	pop    rsp
   140006759:	add    BYTE PTR [rdi+0x0],dl
   14000675c:	imul   eax,DWORD PTR [rax],0x6c006e
   140006762:	outs   dx,DWORD PTR ds:[rsi]
   140006763:	add    BYTE PTR [rdi+0x0],ah
   140006766:	outs   dx,DWORD PTR ds:[rsi]
   140006767:	add    BYTE PTR [rsi+0x0],ch
   14000676a:	add    BYTE PTR [rax],al
   14000676c:	add    BYTE PTR [rax],al
   14000676e:	add    BYTE PTR [rax],al
   140006770:	cmc    
   140006771:	sub    BYTE PTR [rbx+rbp*8+0x1f],dh
   140006775:	stos   DWORD PTR es:[rdi],eax
   140006776:	and    al,BYTE PTR [rbx-0x5c]
   140006779:	int3   
   14000677a:	(bad)  
   14000677b:	sbb    bl,BYTE PTR [rbx-0x4167a1d4]
   140006781:	lods   eax,DWORD PTR ds:[rsi]
   140006782:	movabs ds:0xe0f5a0410d971763,eax
   14000678b:	jle    0x1400067f5
   14000678d:	(bad)  
   14000678e:	cmp    ecx,DWORD PTR [rbp+0x3]
   140006791:	or     DWORD PTR es:[rbx+0x137c3b78],ebp
   140006798:	jo     0x14000675c
   14000679a:	xor    eax,0x499d46c6
   14000679f:	je     0x140006763
   1400067a1:	int    0x23
   1400067a3:	movabs ds:0x49b7c88048b281b0,eax
   1400067ac:	movabs ds:0x436b6c257f8a4721,al
   1400067b5:	push   rsi
   1400067b6:	call   0x1065af5fe
   1400067bb:	movsxd eax,DWORD PTR [rbx-0x25]
   1400067be:	(bad)  
   1400067bf:	push   rax
   1400067c0:	push   rax
   1400067c1:	fistp  QWORD PTR [rbx+0x1a]
   1400067c4:	sub    eax,0x9ee317b5
   1400067c9:	add    cl,BYTE PTR [rdx+0xf53296b]
   1400067cf:	(bad)  
   1400067d0:	(bad)  
   1400067d1:	cdq    
   1400067d2:	cdq    
   1400067d3:	cdq    
   1400067d4:	cdq    
   1400067d5:	cdq    
   1400067d6:	mov    ecx,0x3f
   1400067db:	add    BYTE PTR [rax],al
   1400067dd:	add    al,dh
   1400067df:	rex.XB (bad) 
	...
   1400067f1:	add    BYTE PTR [rax],al
   1400067f3:	add    BYTE PTR [rcx+rdi*1+0x559f],dl
   1400067fa:	add    BYTE PTR [rax],al
   1400067fc:	add    al,BYTE PTR [rax]
   1400067fe:	add    BYTE PTR [rax],al
   140006800:	and    eax,0xf0000000
   140006805:	push   0x50f00000
   14000680a:	add    BYTE PTR [rax],al
   14000680c:	add    BYTE PTR [rax],al
   14000680e:	add    BYTE PTR [rax],al
   140006810:	xchg   esp,eax
   140006811:	cmp    DWORD PTR [rdi+0x55],ebx
   140006817:	add    BYTE PTR [rip+0xffffffffe0000000],cl        # 0x12000681d
   14000681d:	add    DWORD PTR [rax],eax
   14000681f:	add    BYTE PTR [rcx+rbp*2],ch
   140006822:	add    BYTE PTR [rax],al
   140006824:	sub    al,0x51
	...
   14000684e:	add    BYTE PTR [rax],al
   140006850:	movabs al,ds:0x0
	...
   1400068a5:	add    BYTE PTR [rax],al
   1400068a7:	add    BYTE PTR [rax],cl
   1400068a9:	add    BYTE PTR [rax],0x40
   1400068ac:	add    DWORD PTR [rax],eax
	...
   1400068be:	add    BYTE PTR [rax],al
   1400068c0:	adc    BYTE PTR [rax+rax*1+0x40],ah
   1400068c4:	add    DWORD PTR [rax],eax
   1400068c6:	add    BYTE PTR [rax],al
   1400068c8:	sbb    BYTE PTR [rax+rax*1+0x40],ah
   1400068cc:	add    DWORD PTR [rax],eax
   1400068ce:	add    BYTE PTR [rax],al
   1400068d0:	pop    rax
   1400068d1:	add    BYTE PTR fs:[rax+0x1],al
   1400068d5:	add    BYTE PTR [rax],al
   1400068d7:	add    BYTE PTR [rip+0x0],cl        # 0x1400068dd
   1400068dd:	add    BYTE PTR [rax],al
   1400068df:	add    BYTE PTR [rax],al
   1400068e1:	xor    eax,0x0
	...
   1400068ee:	add    BYTE PTR [rax],al
   1400068f0:	push   rdx
   1400068f1:	push   rbx
   1400068f2:	rex.R push rbx
   1400068f4:	jnp    0x140006883
   1400068f6:	rex.RB enter 0x6fea,0xd7
   1400068fb:	rex.B sahf 
   1400068fd:	dec    BYTE PTR [rax-0x6c]
   140006900:	movabs ss:0x727000000001b892,eax
   14000690a:	outs   dx,DWORD PTR ds:[rsi]
   14000690b:	jno    0x140006982
   14000690d:	outs   dx,DWORD PTR ds:[rsi]
   14000690e:	je     0x140006971
   140006910:	cs jo  0x140006977
   140006913:	(bad)  
	...
   14000692c:	rex.RXB
   14000692d:	rex.XB push r12
   14000692f:	rex.WR add BYTE PTR [rax],r10b
   140006932:	add    BYTE PTR [rax],al
   140006934:	cmp    al,0x42
   140006936:	add    BYTE PTR [rax],al
   140006938:	cs je  0x1400069a0
   14000693b:	js     0x1400069b1
   14000693d:	and    al,0x6d
   14000693f:	outs   dx,BYTE PTR ds:[rsi]
   140006940:	add    BYTE PTR [rax],al
   140006942:	add    BYTE PTR [rax],al
   140006944:	rex push rdx
   140006946:	add    BYTE PTR [rax],al
   140006948:	adc    al,BYTE PTR [rax]
   14000694a:	add    BYTE PTR [rax],al
   14000694c:	cs je  0x1400069b4
   14000694f:	js     0x1400069c5
   140006951:	and    al,0x6d
   140006953:	outs   dx,BYTE PTR ds:[rsi]
   140006954:	and    al,0x30
   140006956:	xor    BYTE PTR [rax],al
   140006958:	(bad)  
   140006959:	push   rdx
   14000695a:	add    BYTE PTR [rax],al
   14000695c:	push   rax
   14000695d:	add    BYTE PTR [rax],al
   14000695f:	add    BYTE PTR [rsi],ch
   140006961:	je     0x1400069c8
   140006963:	js     0x1400069d9
   140006965:	and    al,0x78
   140006967:	add    BYTE PTR [rax],al
   140006969:	(bad)  
   14000696a:	add    BYTE PTR [rax],al
   14000696c:	adc    BYTE PTR [rax+rax*1],al
   14000696f:	add    BYTE PTR [rsi],ch
   140006971:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   140006979:	add    BYTE PTR [rax],al
   14000697b:	add    BYTE PTR [rax],dl
   14000697d:	add    BYTE PTR fs:[rax],al
   140006980:	adc    BYTE PTR [rax],al
   140006982:	add    BYTE PTR [rax],al
   140006984:	xor    BYTE PTR cs:[rax],dh
   140006987:	movsxd esp,DWORD PTR [rsi+0x67]
   14000698a:	add    BYTE PTR [rax],al
   14000698c:	and    BYTE PTR [rax+rax*1+0x0],ah
   140006990:	or     BYTE PTR [rax],al
   140006992:	add    BYTE PTR [rax],al
   140006994:	cs rex.XB push r10
   140006997:	push   rsp
   140006998:	and    al,0x58
   14000699a:	rex.XB
   14000699b:	add    BYTE PTR [r8],al
   14000699e:	add    BYTE PTR [rax],al
   1400069a0:	sub    BYTE PTR [rax+rax*1+0x0],ah
   1400069a4:	or     BYTE PTR [rax],al
   1400069a6:	add    BYTE PTR [rax],al
   1400069a8:	cs rex.XB push r10
   1400069ab:	push   rsp
   1400069ac:	and    al,0x58
   1400069ae:	rex.XB
   1400069af:	rex.B
   1400069b0:	add    BYTE PTR [r8],al
   1400069b3:	add    BYTE PTR [rax],dh
   1400069b5:	add    BYTE PTR fs:[rax],al
   1400069b8:	or     BYTE PTR [rax],al
   1400069ba:	add    BYTE PTR [rax],al
   1400069bc:	cs rex.XB push r10
   1400069bf:	push   rsp
   1400069c0:	and    al,0x58
   1400069c2:	rex.XB pop r10
   1400069c4:	add    BYTE PTR [rax],al
   1400069c6:	add    BYTE PTR [rax],al
   1400069c8:	cmp    BYTE PTR [rax+rax*1+0x0],ah
   1400069cc:	or     BYTE PTR [rax],al
   1400069ce:	add    BYTE PTR [rax],al
   1400069d0:	cs rex.XB push r10
   1400069d3:	push   rsp
   1400069d4:	and    al,0x58
   1400069d6:	rex.WB
   1400069d7:	add    BYTE PTR [r8],al
   1400069da:	add    BYTE PTR [rax],al
   1400069dc:	rex
   1400069dd:	add    BYTE PTR fs:[rax],al
   1400069e0:	or     BYTE PTR [rax],al
   1400069e2:	add    BYTE PTR [rax],al
   1400069e4:	cs rex.XB push r10
   1400069e7:	push   rsp
   1400069e8:	and    al,0x58
   1400069ea:	rex.WB
   1400069eb:	rex.B
   1400069ec:	add    BYTE PTR [r8],al
   1400069ef:	add    BYTE PTR [rax+0x64],cl
   1400069f2:	add    BYTE PTR [rax],al
   1400069f4:	or     BYTE PTR [rax],al
   1400069f6:	add    BYTE PTR [rax],al
   1400069f8:	cs rex.XB push r10
   1400069fb:	push   rsp
   1400069fc:	and    al,0x58
   1400069fe:	rex.WB pop r9
   140006a00:	add    BYTE PTR [rax],al
   140006a02:	add    BYTE PTR [rax],al
   140006a04:	push   rax
   140006a05:	add    BYTE PTR fs:[rax],al
   140006a08:	or     BYTE PTR [rax],al
   140006a0a:	add    BYTE PTR [rax],al
   140006a0c:	cs rex.XB push r10
   140006a0f:	push   rsp
   140006a10:	and    al,0x58
   140006a12:	rex.WB pop r10
   140006a14:	add    BYTE PTR [rax],al
   140006a16:	add    BYTE PTR [rax],al
   140006a18:	pop    rax
   140006a19:	add    BYTE PTR fs:[rax],al
   140006a1c:	xor    al,0x0
   140006a1e:	add    BYTE PTR [rax],al
   140006a20:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   140006a29:	add    BYTE PTR [rax],al
   140006a2b:	add    BYTE PTR [rax+0x60000064],dl
   140006a31:	add    al,0x0
   140006a33:	add    BYTE PTR [rsi],ch
   140006a35:	jb     0x140006a9b
   140006a37:	(bad)  
   140006a38:	je     0x140006a9b
   140006a3a:	add    BYTE PTR [rax],al
   140006a3c:	lock push 0x21c0000
   140006a42:	add    BYTE PTR [rax],al
   140006a44:	cs jb  0x140006aab
   140006a47:	(bad)  
   140006a48:	je     0x140006aab
   140006a4a:	and    al,0x7a
   140006a4c:	jp     0x140006ac8
   140006a4e:	fs (bad) 
   140006a50:	add    BYTE PTR [eax],al
   140006a53:	add    BYTE PTR [rax],dl
   140006a55:	imul   eax,DWORD PTR [rax],0x0
   140006a58:	mov    ah,0x2
   140006a5a:	add    BYTE PTR [rax],al
   140006a5c:	cs js  0x140006ac3
   140006a5f:	(bad)  
   140006a60:	je     0x140006ac3
   140006a62:	add    BYTE PTR [rax],al
   140006a64:	(bad)  
   140006a65:	ins    DWORD PTR es:[rdi],dx
   140006a66:	add    BYTE PTR [rax],al
   140006a68:	sub    al,0x1
   140006a6a:	add    BYTE PTR [rax],al
   140006a6c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140006a75:	add    BYTE PTR [rax],al
   140006a77:	add    al,dh
   140006a79:	outs   dx,BYTE PTR ds:[rsi]
   140006a7a:	add    BYTE PTR [rax],al
   140006a7c:	adc    al,0x0
   140006a7e:	add    BYTE PTR [rax],al
   140006a80:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140006a89:	add    BYTE PTR [rax],al
   140006a8b:	add    BYTE PTR [rax],cl
   140006a8d:	outs   dx,DWORD PTR ds:[rsi]
   140006a8e:	add    BYTE PTR [rax],al
   140006a90:	adc    BYTE PTR [rax+rax*1],al
   140006a93:	add    BYTE PTR [rsi],ch
   140006a95:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   140006a9d:	add    BYTE PTR [rax],al
   140006a9f:	add    BYTE PTR [rax],bl
   140006aa1:	jae    0x140006aa3
   140006aa3:	add    BYTE PTR [rcx+rcx*1+0x692e0000],ah
   140006aaa:	fs (bad) 
   140006aac:	je     0x140006b0f
   140006aae:	and    al,0x36
   140006ab0:	add    BYTE PTR [rax],al
   140006ab2:	add    BYTE PTR [rax],al
   140006ab4:	add    BYTE PTR [rax+0x780000],al
   140006aba:	add    BYTE PTR [rax],al
   140006abc:	cs fs (bad) 
   140006abf:	je     0x140006b22
   140006ac1:	add    BYTE PTR [rax],al
   140006ac3:	add    BYTE PTR [rax-0x5fffff80],al
   140006ac9:	(bad)  
   140006aca:	add    BYTE PTR [rax],al
   140006acc:	cs (bad) 
   140006acf:	jae    0x140006ad1
   140006ad1:	add    BYTE PTR [rax],al
   140006ad3:	add    BYTE PTR [rax],al
   140006ad5:	nop
   140006ad6:	add    BYTE PTR [rax],al
   140006ad8:	add    al,0x2
   140006ada:	add    BYTE PTR [rax],al
   140006adc:	cs jo  0x140006b43
   140006adf:	(bad)  
   140006ae0:	je     0x140006b43
   140006ae2:	add    BYTE PTR [rax],al
   140006ae4:	add    BYTE PTR [rax+0x2d00000],ah
   140006aea:	add    BYTE PTR [rax],al
   140006aec:	cs jb  0x140006b62
   140006aef:	jb     0x140006b54
   140006af1:	and    al,0x30
   140006af3:	xor    DWORD PTR [rax],eax
   140006af5:	add    BYTE PTR [rax],al
   140006af7:	add    al,dl
   140006af9:	movabs ds:0x722e000013a80000,al
   140006b02:	jae    0x140006b76
   140006b04:	movsxd esp,DWORD PTR [rax+rsi*1]
   140006b07:	xor    al,BYTE PTR [rax]
   140006b09:	add    BYTE PTR [rax],al
   140006b0b:	add    BYTE PTR [rax],al
   140006b0d:	add    BYTE PTR [rax],al
   140006b0f:	add    BYTE PTR [rcx],al
   140006b11:	add    eax,0x34050002
   140006b16:	add    DWORD PTR [rax],eax
   140006b18:	add    DWORD PTR [rdx],ecx
   140006b1a:	add    al,0x0
   140006b1c:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   140006b20:	add    eax,0x1000134
   140006b25:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e427d2b
   140006b2b:	jo     0x140006b3a
   140006b2d:	(bad)  
   140006b2e:	or     al,0x50
   140006b30:	or     esi,DWORD PTR [rax]
   140006b32:	add    BYTE PTR [rax],al
   140006b34:	add    DWORD PTR [rcx+rax*1],eax
   140006b37:	add    BYTE PTR [rdx+riz*2],al
   140006b3a:	add    BYTE PTR [rax],al
   140006b3c:	add    DWORD PTR [rbx],ecx
   140006b3e:	add    DWORD PTR [rax],eax
   140006b40:	or     eax,DWORD PTR [rdx+0x4010000]
   140006b46:	add    DWORD PTR [rax],eax
   140006b48:	add    al,0xc2
   140006b4a:	add    BYTE PTR [rax],al
   140006b4c:	add    DWORD PTR [rcx+rax*1],eax
   140006b4f:	add    BYTE PTR [rdx+rax*4],al
   140006b52:	add    BYTE PTR [rax],al
   140006b54:	add    DWORD PTR [rsi],eax
   140006b56:	add    al,BYTE PTR [rax]
   140006b58:	(bad)  
   140006b59:	xchg   edx,eax
   140006b5a:	add    dh,BYTE PTR [rax+0x1]
   140006b5d:	add    al,0x1
   140006b5f:	add    BYTE PTR [rdx+riz*4],al
   140006b62:	add    BYTE PTR [rax],al
   140006b64:	add    DWORD PTR [rdi],ecx
   140006b66:	(bad)  
   140006b67:	add    BYTE PTR [rdi],cl
   140006b69:	fs (bad) 
   140006b6b:	add    BYTE PTR [rdi],cl
   140006b6d:	xor    al,0x6
   140006b6f:	add    BYTE PTR [rdi],cl
   140006b71:	xor    cl,BYTE PTR [rbx]
   140006b73:	jo     0x140006b8e
   140006b75:	sbb    eax,DWORD PTR [rbx]
   140006b77:	add    BYTE PTR [rcx],cl
   140006b79:	add    DWORD PTR [rax],esp
   140006b7b:	add    BYTE PTR [rdx],al
   140006b7d:	xor    BYTE PTR [rax],al
   140006b7f:	add    BYTE PTR [rax-0xfffffaf],ch
   140006b85:	add    BYTE PTR [rax],al
   140006b87:	add    BYTE PTR [rcx],cl
   140006b89:	sbb    cl,BYTE PTR [rbx]
   140006b8b:	add    BYTE PTR [rdx],bl
   140006b8d:	fs add BYTE PTR es:[rdx],bl
   140006b91:	xor    al,0x25
   140006b93:	add    BYTE PTR [rdx],bl
   140006b95:	add    DWORD PTR [rsi],ebx
   140006b97:	add    BYTE PTR [rbx],dl
   140006b99:	lock adc eax,esp
   140006b9c:	(bad)  
   140006b9e:	or     eax,0x700bc0
   140006ba3:	add    BYTE PTR [rsi+0x51],dh
   140006ba6:	add    BYTE PTR [rax],al
   140006ba8:	add    DWORD PTR [rax],eax
   140006baa:	add    BYTE PTR [rax],al
   140006bac:	mov    DWORD PTR [rax],ebx
   140006bae:	add    BYTE PTR [rax],al
   140006bb0:	loop   0x140006bca
   140006bb2:	add    BYTE PTR [rax],al
   140006bb4:	add    DWORD PTR [rax],eax
   140006bb6:	add    BYTE PTR [rax],al
   140006bb8:	rex.RX sbb r8b,BYTE PTR [rax]
   140006bbb:	add    BYTE PTR [rcx],bl
   140006bbd:	sbb    eax,0x10b0005
   140006bc2:	test   BYTE PTR [rax],al
   140006bc4:	add    al,0x70
   140006bc6:	add    esp,DWORD PTR [rax+0x2]
   140006bc9:	xor    BYTE PTR [rax],al
   140006bcb:	add    BYTE PTR [rax+0x10000051],ch
   140006bd1:	add    al,0x0
   140006bd3:	add    BYTE PTR [rcx],bl
   140006bd5:	(bad)  
   140006bd6:	or     eax,0x17742600
   140006bdb:	add    DWORD PTR [rsi],esp
   140006bdd:	fs (bad) 
   140006bdf:	add    DWORD PTR [rsi],esp
   140006be1:	xor    al,0x15
   140006be3:	add    DWORD PTR [rsi],esp
   140006be5:	add    DWORD PTR [rsi],ecx
   140006be7:	add    DWORD PTR [rax],ebx
   140006be9:	lock (bad) 
   140006beb:	loopne 0x140006c01
   140006bed:	rcl    BYTE PTR [rdx],1
   140006bef:	rcl    BYTE PTR [rax],0x50
   140006bf2:	add    BYTE PTR [rax],al
   140006bf4:	test   al,0x51
   140006bf6:	add    BYTE PTR [rax],al
   140006bf8:	(bad)  
   140006bf9:	or     BYTE PTR [rax],al
   140006bfb:	add    BYTE PTR [rcx],al
   140006bfd:	or     BYTE PTR [rax+rax*1],al
   140006c00:	or     BYTE PTR [rdx+0x4],dh
   140006c03:	jo     0x140006c08
   140006c05:	(bad)  
   140006c06:	add    dh,BYTE PTR [rax]
   140006c08:	add    DWORD PTR [rdx],edx
   140006c0a:	or     BYTE PTR [rax],al
   140006c0c:	adc    dl,BYTE PTR [rbp+rcx*1+0x0]
   140006c10:	adc    dh,BYTE PTR [rdx+rcx*1]
   140006c13:	add    BYTE PTR [rdx],dl
   140006c15:	push   rdx
   140006c16:	(bad)  
   140006c17:	lock or al,0x70
   140006c1a:	or     esp,DWORD PTR [rax+0x1]
   140006c1d:	clts   
   140006c1f:	add    BYTE PTR [rdi],cl
   140006c21:	push   rdx
   140006c22:	or     al,dh
   140006c24:	(bad)  
   140006c25:	loopne 0x140006c2b
   140006c27:	jo     0x140006c2c
   140006c29:	xor    BYTE PTR [rdx],al
   140006c2b:	push   rax
   140006c2c:	sbb    DWORD PTR [rip+0x1140006],esp        # 0x141146c38
   140006c32:	xor    eax,0x4700501
   140006c37:	(bad)  
   140006c38:	add    esi,DWORD PTR [rax]
   140006c3a:	add    dl,BYTE PTR [rax-0x58]
   140006c3d:	push   rcx
   140006c3e:	add    BYTE PTR [rax],al
   140006c40:	nop
   140006c41:	or     DWORD PTR [rax],eax
   140006c43:	add    BYTE PTR [rcx],bl
   140006c45:	and    ecx,DWORD PTR [rax]
   140006c47:	add    BYTE PTR [rip+0x15001464],dl        # 0x1550080b1
   140006c4d:	xor    al,0x13
   140006c4f:	add    BYTE PTR [rip+0xce00ed2],dl        # 0x14ce07b27
   140006c55:	jo     0x140006c62
   140006c57:	push   rax
   140006c58:	test   al,0x51
   140006c5a:	add    BYTE PTR [rax],al
   140006c5c:	(bad)  
   140006c5d:	add    BYTE PTR [rax],al
   140006c5f:	add    BYTE PTR [rcx],bl
   140006c61:	sub    DWORD PTR [rcx],ecx
   140006c63:	add    BYTE PTR [rbx],bl
   140006c65:	je     0x140006c92
   140006c67:	add    BYTE PTR [rbx],bl
   140006c69:	sub    al,BYTE PTR fs:[rax]
   140006c6c:	sbb    esi,DWORD PTR [rcx+rbp*1]
   140006c6f:	add    BYTE PTR [rbx],bl
   140006c71:	add    DWORD PTR [rsi],esp
   140006c73:	add    BYTE PTR [rax],dl
   140006c75:	push   rax
   140006c76:	add    BYTE PTR [rax],al
   140006c78:	test   al,0x51
   140006c7a:	add    BYTE PTR [rax],al
   140006c7c:	and    BYTE PTR [rcx],al
   140006c7e:	add    BYTE PTR [rax],al
   140006c80:	sbb    DWORD PTR [rbx],esi
   140006c82:	or     eax,DWORD PTR [rax]
   140006c84:	and    dh,BYTE PTR [rbp+rbx*4+0x0]
   140006c88:	and    ah,BYTE PTR [rsp+rbx*4+0x0]
   140006c8c:	and    dh,BYTE PTR [rbx+rbx*4]
   140006c8f:	add    BYTE PTR [rdx],ah
   140006c91:	add    DWORD PTR [rsi+0x12f01400],edx
   140006c97:	loopne 0x140006ca9
   140006c99:	push   rax
   140006c9a:	add    BYTE PTR [rax],al
   140006c9c:	test   al,0x51
   140006c9e:	add    BYTE PTR [rax],al
   140006ca0:	movabs al,ds:0x17000b2919000004
   140006ca9:	xor    al,0x6b
   140006cab:	add    BYTE PTR [rdi],dl
   140006cad:	add    DWORD PTR [rax+0x0],esp
   140006cb0:	adc    al,dh
   140006cb2:	(bad)  
   140006cb3:	loopne 0x140006cc1
   140006cb5:	ror    BYTE PTR [rdx],1
   140006cb7:	ror    BYTE PTR [rax],0x70
   140006cba:	(bad)  
   140006cbb:	(bad)  
   140006cbc:	(bad)  
   140006cbd:	push   rax
   140006cbe:	add    BYTE PTR [rax],al
   140006cc0:	test   al,0x51
   140006cc2:	add    BYTE PTR [rax],al
   140006cc4:	lock add al,BYTE PTR [rax]
   140006cc7:	add    BYTE PTR [rcx],al
   140006cc9:	sbb    al,0xa
   140006ccb:	add    BYTE PTR [rsp+rsi*1],bl
   140006cce:	adc    DWORD PTR [rax],eax
   140006cd0:	sbb    al,0x52
   140006cd2:	adc    eax,0x11e013f0
   140006cd7:	ror    BYTE PTR [rdi],1
   140006cd9:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b607950
   140006ce0:	add    DWORD PTR [rdx],ecx
   140006ce2:	add    al,0x0
   140006ce4:	or     dh,BYTE PTR [rbx+rax*1+0x0]
   140006ce8:	add    eax,0x19000234
   140006ced:	xor    DWORD PTR [rip+0x52641f00],ecx        # 0x192648bf3
   140006cf3:	add    BYTE PTR [rdi],bl
   140006cf5:	push   rsp
   140006cf6:	push   rcx
   140006cf7:	add    BYTE PTR [rdi],bl
   140006cf9:	xor    al,0x50
   140006cfb:	add    BYTE PTR [rdi],bl
   140006cfd:	add    DWORD PTR [rdx+0x0],ecx
   140006d00:	sbb    al,dh
   140006d02:	(bad)  
   140006d03:	loopne 0x140006d19
   140006d05:	rcl    BYTE PTR [rdx],1
   140006d07:	rcl    BYTE PTR [rax],0x70
   140006d0a:	add    BYTE PTR [rax],al
   140006d0c:	test   al,0x51
   140006d0e:	add    BYTE PTR [rax],al
   140006d10:	add    al,BYTE PTR [rax]
   140006d13:	add    BYTE PTR [rcx],cl
   140006d15:	sbb    BYTE PTR [rcx],cl
   140006d17:	add    BYTE PTR [rax],bl
   140006d19:	je     0x140006d35
   140006d1b:	add    BYTE PTR [rax],bl
   140006d1d:	sbb    DWORD PTR fs:[rax],eax
   140006d20:	sbb    BYTE PTR [rax+rbx*1],dh
   140006d23:	add    BYTE PTR [rax],bl
   140006d25:	add    DWORD PTR [rsi],edx
   140006d27:	add    BYTE PTR [rcx],dl
   140006d29:	lock add BYTE PTR [rax],al
   140006d2c:	jbe    0x140006d7f
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	add    DWORD PTR [rax],eax
   140006d32:	add    BYTE PTR [rax],al
   140006d34:	(bad)  
   140006d35:	rex.WX add BYTE PTR [rax],al
   140006d38:	rex.RXB
   140006d39:	rex.WR add BYTE PTR [rax],r8b
   140006d3c:	push   dx
   140006d3e:	add    BYTE PTR [rax],al
   140006d40:	rex.RXB
   140006d41:	rex.WR add BYTE PTR [rax],r8b
   140006d44:	add    BYTE PTR [rax],al
   140006d46:	add    BYTE PTR [rax],al
   140006d48:	add    DWORD PTR [rax],eax
   140006d4a:	add    BYTE PTR [rax],al
   140006d4c:	add    DWORD PTR [rdx+rax*1],ecx
   140006d4f:	add    BYTE PTR [rcx+rax*1],cl
   140006d52:	adc    DWORD PTR [rax],eax
   140006d54:	or     DWORD PTR [rcx+rax*1],eax
   140006d57:	add    BYTE PTR [rdx+riz*1],al
   140006d5a:	add    BYTE PTR [rax],al
   140006d5c:	jbe    0x140006daf
   140006d5e:	add    BYTE PTR [rax],al
   140006d60:	add    DWORD PTR [rax],eax
   140006d62:	add    BYTE PTR [rax],al
   140006d64:	cld    
   140006d65:	rex.WRX add BYTE PTR [rax],r8b
   140006d68:	xor    cl,BYTE PTR [rdi+0x0]
   140006d6b:	add    BYTE PTR [rcx],al
   140006d6d:	add    BYTE PTR [rax],al
   140006d6f:	add    BYTE PTR [rdx],dh
   140006d71:	rex.WRXB add BYTE PTR [r8],r8b
   140006d74:	or     DWORD PTR [rdx],ecx
   140006d76:	add    al,0x0
   140006d78:	or     dh,BYTE PTR [rsi+rax*1]
   140006d7b:	add    BYTE PTR [rdx],cl
   140006d7d:	xor    al,BYTE PTR [rsi]
   140006d7f:	jo     0x140006df7
   140006d81:	push   rcx
   140006d82:	add    BYTE PTR [rax],al
   140006d84:	add    DWORD PTR [rax],eax
   140006d86:	add    BYTE PTR [rax],al
   140006d88:	or     eax,0x40000050
   140006d8d:	push   rax
   140006d8e:	add    BYTE PTR [rax],al
   140006d90:	nop
   140006d91:	push   rdx
   140006d92:	add    BYTE PTR [rax],al
   140006d94:	rex push rax
   140006d96:	add    BYTE PTR [rax],al
   140006d98:	add    DWORD PTR [rsi],eax
   140006d9a:	add    al,BYTE PTR [rax]
   140006d9c:	(bad)  
   140006d9d:	xor    al,BYTE PTR [rdx]
   140006d9f:	push   rax
   140006da0:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d6daa
   140006da6:	or     DWORD PTR [rax],eax
   140006da8:	or     eax,0x500632
   140006dad:	add    BYTE PTR [rax],al
   140006daf:	add    BYTE PTR [rcx],al
   140006db1:	add    BYTE PTR [rax],al
   140006db3:	add    BYTE PTR [rcx],al
   140006db5:	(bad)  
   140006db6:	add    al,BYTE PTR [rax]
   140006db8:	(bad)  
   140006db9:	xor    al,BYTE PTR [rdx]
   140006dbb:	xor    BYTE PTR [rcx],al
   140006dbd:	add    al,0x1
   140006dbf:	add    BYTE PTR [rdx+rax*2],al
   140006dc2:	add    BYTE PTR [rax],al
   140006dc4:	or     BYTE PTR [rdi+0x0],ch
	...
   140006dcf:	add    dl,bh
   140006dd1:	jae    0x140006dd3
   140006dd3:	add    BYTE PTR [rax],al
   140006dd5:	(bad)  
   140006dd6:	add    BYTE PTR [rax],al
   140006dd8:	sub    BYTE PTR [rdi+0x0],0x0
	...
   140006de4:	xchg   edx,eax
   140006de5:	jbe    0x140006de7
   140006de7:	add    BYTE PTR [rax+0x60],bh
   140006dea:	add    BYTE PTR [rax],al
   140006dec:	test   al,0x70
	...
   140006df6:	add    BYTE PTR [rax],al
   140006df8:	fdivr  QWORD PTR [rax+0x0]
   140006dfb:	add    BYTE PTR [rax+0x78000061],ah
   140006e01:	jb     0x140006e03
	...
   140006e0b:	add    BYTE PTR [rcx+rdi*2+0x63700000],dh
   140006e12:	add    BYTE PTR [rax],al
   140006e14:	mov    BYTE PTR [rax+0x0],dh
	...
   140006e1f:	add    dl,bh
   140006e21:	jns    0x140006e23
   140006e23:	add    BYTE PTR [rax-0x47ffff9f],al
   140006e29:	jno    0x140006e2b
	...
   140006e33:	add    BYTE PTR [rdx+0x7b],dh
   140006e36:	add    BYTE PTR [rax],al
   140006e38:	mov    al,0x62
   140006e3a:	add    BYTE PTR [rax],al
   140006e3c:	or     BYTE PTR [rdx+0x0],dh
	...
   140006e47:	add    BYTE PTR [rsi+0x7b],bh
   140006e4a:	add    BYTE PTR [rax],al
   140006e4c:	add    BYTE PTR [rbx+0x0],ah
   140006e4f:	add    BYTE PTR [rax+0x72],al
	...
   140006e5a:	add    BYTE PTR [rax],al
   140006e5c:	test   al,0x7b
   140006e5e:	add    BYTE PTR [rax],al
   140006e60:	cmp    BYTE PTR [rbx+0x0],ah
   140006e63:	add    al,dl
   140006e65:	jno    0x140006e67
	...
   140006e6f:	add    dh,cl
   140006e71:	jnp    0x140006e73
   140006e73:	add    al,cl
   140006e75:	(bad)  
   140006e76:	add    BYTE PTR [rax],al
   140006e78:	clc    
   140006e79:	jno    0x140006e7b
	...
   140006e83:	add    al,bh
   140006e85:	jnp    0x140006e87
   140006e87:	add    al,dh
   140006e89:	(bad)  
   140006e8a:	add    BYTE PTR [rax],al
   140006e8c:	xor    BYTE PTR [rdx+0x0],dh
	...
   140006e97:	add    BYTE PTR [rdx],ah
   140006e99:	jl     0x140006e9b
   140006e9b:	add    BYTE PTR [rax],ch
   140006e9d:	movsxd eax,DWORD PTR [rax]
   140006e9f:	add    BYTE PTR [rax+0x72],ah
	...
   140006eaa:	add    BYTE PTR [rax],al
   140006eac:	rex.RX jl 0x140006eaf
   140006eaf:	add    BYTE PTR [rax+0x63],bl
   140006eb2:	add    BYTE PTR [rax],al
   140006eb4:	call   0x140006f2a
   140006eb9:	add    BYTE PTR [rax],al
   140006ebb:	add    BYTE PTR [rax],al
   140006ebd:	add    BYTE PTR [rax],al
   140006ebf:	add    BYTE PTR [rdx+0x7c],ch
   140006ec2:	add    BYTE PTR [rax],al
   140006ec4:	loopne 0x140006f28
   140006ec6:	add    BYTE PTR [rax],al
   140006ec8:	jo     0x140006f39
	...
   140006ed2:	add    BYTE PTR [rax],al
   140006ed4:	mov    bh,BYTE PTR [rax+rax*1+0x0]
   140006ed8:	push   0x8000060
   140006edd:	jae    0x140006edf
	...
   140006ee7:	add    BYTE PTR [rax+0x7c],ch
   140006eed:	add    BYTE PTR fs:[rax],al
	...
   140006f08:	sbb    BYTE PTR [rbx+0x0],dh
   140006f0b:	add    BYTE PTR [rax],al
   140006f0d:	add    BYTE PTR [rax],al
   140006f0f:	add    BYTE PTR [rax],ch
   140006f11:	jae    0x140006f13
   140006f13:	add    BYTE PTR [rax],al
   140006f15:	add    BYTE PTR [rax],al
   140006f17:	add    BYTE PTR [rsi],bh
   140006f19:	jae    0x140006f1b
   140006f1b:	add    BYTE PTR [rax],al
   140006f1d:	add    BYTE PTR [rax],al
   140006f1f:	add    BYTE PTR [rdx+0x73],dl
   140006f22:	add    BYTE PTR [rax],al
   140006f24:	add    BYTE PTR [rax],al
   140006f26:	add    BYTE PTR [rax],al
   140006f28:	push   0x73
   140006f2a:	add    BYTE PTR [rax],al
   140006f2c:	add    BYTE PTR [rax],al
   140006f2e:	add    BYTE PTR [rax],al
   140006f30:	je     0x140006fa5
   140006f32:	add    BYTE PTR [rax],al
   140006f34:	add    BYTE PTR [rax],al
   140006f36:	add    BYTE PTR [rax],al
   140006f38:	xchg   BYTE PTR [rbx+0x0],dh
   140006f3b:	add    BYTE PTR [rax],al
   140006f3d:	add    BYTE PTR [rax],al
   140006f3f:	add    BYTE PTR [rsi+0x73],bl
   140006f45:	add    BYTE PTR [rax],al
   140006f47:	add    BYTE PTR [rax+0x73],dh
   140006f4d:	add    BYTE PTR [rax],al
   140006f4f:	add    al,al
   140006f51:	jae    0x140006f53
   140006f53:	add    BYTE PTR [rax],al
   140006f55:	add    BYTE PTR [rax],al
   140006f57:	add    dh,dl
   140006f59:	jae    0x140006f5b
   140006f5b:	add    BYTE PTR [rax],al
   140006f5d:	add    BYTE PTR [rax],al
   140006f5f:	add    ah,ah
   140006f61:	jae    0x140006f63
	...
   140006f6f:	add    BYTE PTR [rcx],dl
   140006f71:	add    BYTE PTR [rax],al
   140006f73:	add    BYTE PTR [rax],al
   140006f75:	add    BYTE PTR [rax],al
   140006f77:	add    BYTE PTR [rax],0x0
   140006f7a:	add    BYTE PTR [rax],al
   140006f7c:	add    BYTE PTR [rax],al
   140006f7e:	add    BYTE PTR [rax],al
   140006f80:	xor    al,0x74
   140006f82:	add    BYTE PTR [rax],al
   140006f84:	add    BYTE PTR [rax],al
   140006f86:	add    BYTE PTR [rax],al
   140006f88:	push   rsp
   140006f89:	je     0x140006f8b
   140006f8b:	add    BYTE PTR [rax],al
   140006f8d:	add    BYTE PTR [rax],al
   140006f8f:	add    BYTE PTR [rax+0x74],ch
   140006f92:	add    BYTE PTR [rax],al
   140006f94:	add    BYTE PTR [rax],al
   140006f96:	add    BYTE PTR [rax],al
   140006f98:	jle    0x14000700e
   140006f9a:	add    BYTE PTR [rax],al
   140006f9c:	add    BYTE PTR [rax],al
   140006f9e:	add    BYTE PTR [rax],al
   140006fa0:	pushf  
   140006fa1:	je     0x140006fa3
   140006fa3:	add    BYTE PTR [rax],al
   140006fa5:	add    BYTE PTR [rax],al
   140006fa7:	add    BYTE PTR [rax+0x74],ch
   140006fad:	add    BYTE PTR [rax],al
   140006faf:	add    al,al
   140006fb1:	je     0x140006fb3
   140006fb3:	add    BYTE PTR [rax],al
   140006fb5:	add    BYTE PTR [rax],al
   140006fb7:	add    al,ch
   140006fb9:	je     0x140006fbb
   140006fbb:	add    BYTE PTR [rax],al
   140006fbd:	add    BYTE PTR [rax],al
   140006fbf:	add    al,dh
   140006fc1:	je     0x140006fc3
   140006fc3:	add    BYTE PTR [rax],al
   140006fc5:	add    BYTE PTR [rax],al
   140006fc7:	add    BYTE PTR [rdx],ah
   140006fc9:	je     0x140006fcb
   140006fcb:	add    BYTE PTR [rax],al
   140006fcd:	add    BYTE PTR [rax],al
   140006fcf:	add    BYTE PTR [rdx],bl
   140006fd1:	jne    0x140006fd3
   140006fd3:	add    BYTE PTR [rax],al
   140006fd5:	add    BYTE PTR [rax],al
   140006fd7:	add    BYTE PTR [rax],ch
   140006fd9:	jne    0x140006fdb
   140006fdb:	add    BYTE PTR [rax],al
   140006fdd:	add    BYTE PTR [rax],al
   140006fdf:	add    BYTE PTR [rsi*2+0x0],bh
   140006fe6:	add    BYTE PTR [rax],al
   140006fe8:	rex.WR jne 0x140006feb
   140006feb:	add    BYTE PTR [rax],al
   140006fed:	add    BYTE PTR [rax],al
   140006fef:	add    BYTE PTR [rbp+rsi*2+0x0],bl
   140006ff3:	add    BYTE PTR [rax],al
   140006ff5:	add    BYTE PTR [rax],al
   140006ff7:	add    BYTE PTR [rbp+rsi*2+0x0],dh
   140006ffb:	add    BYTE PTR [rax],al
   140006ffd:	add    BYTE PTR [rax],al
   140006fff:	add    BYTE PTR [rax+0x75],al
   140007005:	add    BYTE PTR [rax],al
   140007007:	add    BYTE PTR [rsi+0x75],cl
   14000700d:	add    BYTE PTR [rax],al
   14000700f:	add    BYTE PTR [rsi+0x75],bl
   140007015:	add    BYTE PTR [rax],al
   140007017:	add    BYTE PTR [rbp+rsi*2+0x0],bh
   14000701e:	add    BYTE PTR [rax],al
   140007020:	(bad)  
   140007021:	jne    0x140007023
   140007023:	add    BYTE PTR [rax],al
   140007025:	add    BYTE PTR [rax],al
   140007027:	add    ah,ch
   140007029:	jne    0x14000702b
   14000702b:	add    BYTE PTR [rax],al
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	add    ah,bh
   140007031:	jne    0x140007033
   140007033:	add    BYTE PTR [rax],al
   140007035:	add    BYTE PTR [rax],al
   140007037:	add    BYTE PTR [rdx],cl
   140007039:	jbe    0x14000703b
   14000703b:	add    BYTE PTR [rax],al
   14000703d:	add    BYTE PTR [rax],al
   14000703f:	add    BYTE PTR [rdx],ch
   140007041:	jbe    0x140007043
   140007043:	add    BYTE PTR [rax],al
   140007045:	add    BYTE PTR [rax],al
   140007047:	add    BYTE PTR [rax],bh
   140007049:	jbe    0x14000704b
   14000704b:	add    BYTE PTR [rax],al
   14000704d:	add    BYTE PTR [rax],al
   14000704f:	add    BYTE PTR [rsi+rsi*2+0x0],al
   140007053:	add    BYTE PTR [rax],al
   140007055:	add    BYTE PTR [rax],al
   140007057:	add    BYTE PTR [rsi+rsi*2+0x0],dl
   14000705b:	add    BYTE PTR [rax],al
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    BYTE PTR [rax+0x76],dh
   140007062:	add    BYTE PTR [rax],al
   140007064:	add    BYTE PTR [rax],al
   140007066:	add    BYTE PTR [rax],al
   140007068:	xor    BYTE PTR [rsi+0x0],0x0
   14000706c:	add    BYTE PTR [rax],al
   14000706e:	add    BYTE PTR [rax],al
   140007070:	or     BYTE PTR [rax+rax*1+0x0],dh
   140007074:	add    BYTE PTR [rax],al
   140007076:	add    BYTE PTR [rax],al
   140007078:	or     BYTE PTR [rbp+0x0],dh
	...
   140007087:	add    BYTE PTR [rax+rax*1],bh
   14000708a:	add    BYTE PTR [rax],al
   14000708c:	add    BYTE PTR [rax],al
   14000708e:	add    BYTE PTR [rax+0x79e8],al
   140007094:	add    BYTE PTR [rax],al
   140007096:	add    BYTE PTR [rax],al
   140007098:	(bad)  
   140007099:	jns    0x14000709b
	...
   1400070a7:	add    BYTE PTR [rdx],cl
   1400070a9:	ja     0x1400070ab
   1400070ab:	add    BYTE PTR [rax],al
   1400070ad:	add    BYTE PTR [rax],al
   1400070af:	add    BYTE PTR [rdi+rsi*2],bl
   1400070b2:	add    BYTE PTR [rax],al
   1400070b4:	add    BYTE PTR [rax],al
   1400070b6:	add    BYTE PTR [rax],al
   1400070b8:	sub    dh,BYTE PTR [rdi+0x0]
   1400070bb:	add    BYTE PTR [rax],al
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rdi+rsi*2],bh
   1400070c2:	add    BYTE PTR [rax],al
   1400070c4:	add    BYTE PTR [rax],al
   1400070c6:	add    BYTE PTR [rax],al
   1400070c8:	push   rdx
   1400070c9:	ja     0x1400070cb
   1400070cb:	add    BYTE PTR [rax],al
   1400070cd:	add    BYTE PTR [rax],al
   1400070cf:	add    BYTE PTR [rax+0x77],ah
   1400070d2:	add    BYTE PTR [rax],al
   1400070d4:	add    BYTE PTR [rax],al
   1400070d6:	add    BYTE PTR [rax],al
   1400070d8:	jb     0x140007151
   1400070da:	add    BYTE PTR [rax],al
   1400070dc:	add    BYTE PTR [rax],al
   1400070de:	add    BYTE PTR [rax],al
   1400070e0:	nop
   1400070e1:	ja     0x1400070e3
   1400070e3:	add    BYTE PTR [rax],al
   1400070e5:	add    BYTE PTR [rax],al
   1400070e7:	add    BYTE PTR [rax+0x77],ah
   1400070ed:	add    BYTE PTR [rax],al
   1400070ef:	add    BYTE PTR [rdi+rsi*2+0x0],dh
   1400070f6:	add    BYTE PTR [rax],al
   1400070f8:	retf   0x77
   1400070fb:	add    BYTE PTR [rax],al
   1400070fd:	add    BYTE PTR [rax],al
   1400070ff:	add    dh,dl
   140007101:	ja     0x140007103
   140007103:	add    BYTE PTR [rax],al
   140007105:	add    BYTE PTR [rax],al
   140007107:	add    ah,ah
   140007109:	ja     0x14000710b
   14000710b:	add    BYTE PTR [rax],al
   14000710d:	add    BYTE PTR [rax],al
   14000710f:	add    dh,dh
   140007111:	ja     0x140007113
   140007113:	add    BYTE PTR [rax],al
   140007115:	add    BYTE PTR [rax],al
   140007117:	add    dh,dh
   140007119:	jbe    0x14000711b
   14000711b:	add    BYTE PTR [rax],al
   14000711d:	add    BYTE PTR [rax],al
   14000711f:	add    BYTE PTR [rsi],dl
   140007121:	js     0x140007123
   140007123:	add    BYTE PTR [rax],al
   140007125:	add    BYTE PTR [rax],al
   140007127:	add    BYTE PTR [rsi],ah
   140007129:	js     0x14000712b
   14000712b:	add    BYTE PTR [rax],al
   14000712d:	add    BYTE PTR [rax],al
   14000712f:	add    BYTE PTR [rdx+0x78],al
   140007132:	add    BYTE PTR [rax],al
   140007134:	add    BYTE PTR [rax],al
   140007136:	add    BYTE PTR [rax],al
   140007138:	rex.WRX js 0x14000713b
   14000713b:	add    BYTE PTR [rax],al
   14000713d:	add    BYTE PTR [rax],al
   14000713f:	add    BYTE PTR [rax+0x78],ah
   140007142:	add    BYTE PTR [rax],al
   140007144:	add    BYTE PTR [rax],al
   140007146:	add    BYTE PTR [rax],al
   140007148:	jbe    0x1400071c2
   14000714a:	add    BYTE PTR [rax],al
   14000714c:	add    BYTE PTR [rax],al
   14000714e:	add    BYTE PTR [rax],al
   140007150:	(bad)  
   140007151:	js     0x140007153
   140007153:	add    BYTE PTR [rax],al
   140007155:	add    BYTE PTR [rax],al
   140007157:	add    BYTE PTR [rdx+0x78],dl
   14000715d:	add    BYTE PTR [rax],al
   14000715f:	add    BYTE PTR [rax+0x78],ah
   140007165:	add    BYTE PTR [rax],al
   140007167:	add    BYTE PTR [rdx+0x78],dh
   14000716d:	add    BYTE PTR [rax],al
   14000716f:	add    al,al
   140007171:	js     0x140007173
   140007173:	add    BYTE PTR [rax],al
   140007175:	add    BYTE PTR [rax],al
   140007177:	add    al,dl
   140007179:	js     0x14000717b
   14000717b:	add    BYTE PTR [rax],al
   14000717d:	add    BYTE PTR [rax],al
   14000717f:	add    BYTE PTR [rsi+rsi*2+0x0],dh
   140007186:	add    BYTE PTR [rax],al
   140007188:	movabs al,ds:0xe400000000000076
   140007191:	jbe    0x140007193
   140007193:	add    BYTE PTR [rax],al
   140007195:	add    BYTE PTR [rax],al
   140007197:	add    ah,dl
   140007199:	jbe    0x14000719b
   14000719b:	add    BYTE PTR [rax],al
   14000719d:	add    BYTE PTR [rax],al
   14000719f:	add    BYTE PTR [rdx],al
   1400071a1:	js     0x1400071a3
   1400071a3:	add    BYTE PTR [rax],al
   1400071a5:	add    BYTE PTR [rax],al
   1400071a7:	add    dh,al
   1400071a9:	jbe    0x1400071ab
	...
   1400071b7:	add    BYTE PTR [rsi],al
   1400071b9:	jp     0x1400071bb
   1400071bb:	add    BYTE PTR [rax],al
   1400071bd:	add    BYTE PTR [rax],al
   1400071bf:	add    BYTE PTR [rax],ah
   1400071c1:	jp     0x1400071c3
	...
   1400071cf:	add    BYTE PTR [rdx+rdi*2+0x0],ch
   1400071d6:	add    BYTE PTR [rax],al
   1400071d8:	nop
   1400071d9:	jp     0x1400071db
	...
   1400071e7:	add    BYTE PTR [rdx+0x7b],ah
	...
   1400071f6:	add    BYTE PTR [rax],al
   1400071f8:	fidivr WORD PTR [rdx+0x0]
	...
   140007207:	add    dl,cl
   140007209:	jp     0x14000720b
   14000720b:	add    BYTE PTR [rax],al
   14000720d:	add    BYTE PTR [rax],al
   14000720f:	add    BYTE PTR [rdx+rdi*2],bh
   140007212:	add    BYTE PTR [rax],al
   140007214:	add    BYTE PTR [rax],al
   140007216:	add    BYTE PTR [rax],al
   140007218:	or     al,0x7b
   14000721a:	add    BYTE PTR [rax],al
   14000721c:	add    BYTE PTR [rax],al
   14000721e:	add    BYTE PTR [rax],al
   140007220:	and    bh,BYTE PTR [rbx+0x0]
	...
   14000722f:	add    dl,dh
   140007231:	jp     0x140007233
	...
   14000723f:	add    BYTE PTR [rsi+0x7a],cl
   140007242:	add    BYTE PTR [rax],al
   140007244:	add    BYTE PTR [rax],al
   140007246:	add    BYTE PTR [rax],al
   140007248:	(bad)  
   140007249:	jp     0x14000724b
   14000724b:	add    BYTE PTR [rax],al
   14000724d:	add    BYTE PTR [rax],al
   14000724f:	add    BYTE PTR [rdx+rdi*2+0x0],bh
	...
   14000725f:	add    BYTE PTR [rdx+0x7b],dl
   140007262:	add    BYTE PTR [rax],al
   140007264:	add    BYTE PTR [rax],al
   140007266:	add    BYTE PTR [rax],al
   140007268:	cmp    BYTE PTR [rbx+0x0],bh
	...
   140007277:	add    BYTE PTR [rcx+rdi*2+0x0],bh
   14000727b:	add    BYTE PTR [rax],al
   14000727d:	add    BYTE PTR [rax],al
   14000727f:	add    BYTE PTR [rcx+rdi*2+0x0],dl
   140007286:	add    BYTE PTR [rax],al
   140007288:	jo     0x140007303
   14000728a:	add    BYTE PTR [rax],al
   14000728c:	add    BYTE PTR [rax],al
   14000728e:	add    BYTE PTR [rax],al
   140007290:	sahf   
   140007291:	jns    0x140007293
   140007293:	add    BYTE PTR [rax],al
   140007295:	add    BYTE PTR [rax],al
   140007297:	add    BYTE PTR [rcx+rdi*2],al
   14000729a:	add    BYTE PTR [rax],al
   14000729c:	add    BYTE PTR [rax],al
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	adc    bh,BYTE PTR [rcx+0x0]
   1400072a3:	add    BYTE PTR [rax],al
   1400072a5:	add    BYTE PTR [rax],al
   1400072a7:	add    BYTE PTR [rdx],ah
   1400072a9:	jns    0x1400072ab
   1400072ab:	add    BYTE PTR [rax],al
   1400072ad:	add    BYTE PTR [rax],al
   1400072af:	add    BYTE PTR [rcx+rdi*2],dh
   1400072b2:	add    BYTE PTR [rax],al
   1400072b4:	add    BYTE PTR [rax],al
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	pop    rsp
   1400072b9:	jns    0x1400072bb
   1400072bb:	add    BYTE PTR [rax],al
   1400072bd:	add    BYTE PTR [rax],al
   1400072bf:	add    BYTE PTR [rsi+0x79],cl
   1400072c2:	add    BYTE PTR [rax],al
   1400072c4:	add    BYTE PTR [rax],al
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	rex.R jns 0x1400072cb
   1400072cb:	add    BYTE PTR [rax],al
   1400072cd:	add    BYTE PTR [rax],al
   1400072cf:	add    al,al
   1400072d1:	jns    0x1400072d3
   1400072d3:	add    BYTE PTR [rax],al
   1400072d5:	add    BYTE PTR [rax],al
   1400072d7:	add    BYTE PTR [rcx+rdi*2],bh
   1400072da:	add    BYTE PTR [rax],al
   1400072dc:	add    BYTE PTR [rax],al
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	test   al,0x79
   1400072e2:	add    BYTE PTR [rax],al
   1400072e4:	add    BYTE PTR [rax],al
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	call   0x140007365
   1400072ed:	add    BYTE PTR [rax],al
   1400072ef:	add    dh,dh
   1400072f1:	js     0x1400072f3
   1400072f3:	add    BYTE PTR [rax],al
   1400072f5:	add    BYTE PTR [rax],al
   1400072f7:	add    BYTE PTR [rdx+0x7c],dh
	...
   140007305:	add    BYTE PTR [rax],al
   140007307:	add    BYTE PTR [rax+0x7c],bl
	...
   140007315:	add    BYTE PTR [rax],al
   140007317:	add    BYTE PTR [rax],ah
   140007319:	add    edx,DWORD PTR [rdx+rsi*2+0x61]
   14000731d:	movsxd esp,DWORD PTR [rbp+0x4d]
   140007320:	gs jae 0x140007396
   140007323:	(bad)  
   140007324:	add    BYTE PTR gs:[eax],al
   140007328:	jo     0x14000732b
   14000732a:	rex.RXB
   14000732b:	gs je  0x140007382
   14000732e:	jb     0x140007391
   140007330:	movsxd esp,DWORD PTR [rbp+0x45]
   140007333:	outs   dx,BYTE PTR ds:[rsi]
   140007334:	(bad)  
   140007335:	(bad)  
   140007336:	ins    BYTE PTR es:[rdi],dx
   140007337:	gs rex.RX ins BYTE PTR es:[rdi],dx
   14000733a:	(bad)  
   14000733b:	addr32 jae 0x14000733e
   14000733e:	xchg   ebx,eax
   14000733f:	add    dl,BYTE PTR [rdx+0x65]
   140007342:	addr32 push rcx
   140007344:	jne    0x1400073ab
   140007346:	jb     0x1400073c1
   140007348:	push   rsi
   140007349:	(bad)  
   14000734a:	ins    BYTE PTR es:[rdi],dx
   14000734b:	jne    0x1400073b2
   14000734d:	rex.RB js 0x1400073a7
   140007350:	add    BYTE PTR [rax],al
   140007352:	jb     0x140007355
   140007354:	rex.RXB
   140007355:	gs je  0x1400073ac
   140007358:	jb     0x1400073bb
   14000735a:	movsxd esp,DWORD PTR [rbp+0x4c]
   14000735d:	outs   dx,DWORD PTR ds:[rsi]
   14000735e:	addr32 addr32 gs jb 0x1400073ab
   140007363:	(bad)  
   140007364:	outs   dx,BYTE PTR ds:[rsi]
   140007365:	fs ins BYTE PTR es:[rdi],dx
   140007367:	add    BYTE PTR gs:[rax],al
   14000736a:	add    DWORD PTR ss:[rdi+0x65],eax
   14000736e:	je     0x1400073b1
   140007370:	movsxd esp,DWORD PTR [rbp+0x0]
   140007373:	add    BYTE PTR [rdx+0x1],ah
   140007376:	rex.RXB
   140007377:	gs je  0x1400073cd
   14000737a:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000737e:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   140007386:	sub    eax,0x726e5503
   14000738b:	imul   esi,DWORD PTR gs:[ebx+0x74],0x72547265
   140007394:	(bad)  
   140007395:	movsxd esp,DWORD PTR [rbp+0x47]
   140007398:	jne    0x140007403
   14000739a:	fs jae 0x14000739d
   14000739d:	add    ch,ah
   14000739f:	add    dl,BYTE PTR [rbx+0x65]
   1400073a2:	je     0x1400073f7
   1400073a4:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400073a8:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6f666e
   1400073b0:	xchg   BYTE PTR [rdx],al
   1400073b2:	push   rdx
   1400073b3:	gs addr32 rex.WRXB jo 0x14000741d
   1400073b8:	outs   dx,BYTE PTR ds:[rsi]
   1400073b9:	rex.WXB
   1400073ba:	gs jns 0x140007402
   1400073bd:	js     0x140007416
   1400073bf:	add    BYTE PTR [rcx+0x1],dh
   1400073c2:	rex.RXB
   1400073c3:	gs je  0x14000741a
   1400073c6:	jb     0x140007429
   1400073c8:	movsxd esp,DWORD PTR [rbp+0x45]
   1400073cb:	outs   dx,BYTE PTR ds:[rsi]
   1400073cc:	(bad)  
   1400073cd:	(bad)  
   1400073ce:	ins    BYTE PTR es:[rdi],dx
   1400073cf:	gs rex.WR
   1400073d1:	gs jbe 0x140007439
   1400073d4:	ins    BYTE PTR es:[rdi],dx
   1400073d5:	add    BYTE PTR [rbp+0x2],dl
   1400073d8:	push   rdx
   1400073d9:	gs rex.XB ins BYTE PTR es:[edi],dx
   1400073dd:	outs   dx,DWORD PTR ds:[rsi]
   1400073de:	jae    0x140007445
   1400073e0:	rex.WXB
   1400073e1:	gs jns 0x1400073e4
   1400073e4:	scas   eax,DWORD PTR es:[rdi]
   1400073e5:	add    dl,BYTE PTR [rdx+0x65]
   1400073e8:	imul   esi,DWORD PTR [ebx+0x74],0x72547265
   1400073f0:	(bad)  
   1400073f1:	movsxd esp,DWORD PTR [rbp+0x47]
   1400073f4:	jne    0x14000745f
   1400073f6:	fs jae 0x140007450
   1400073f9:	add    BYTE PTR [rcx+0x44],al
   1400073fc:	push   rsi
   1400073fd:	push   r8
   1400073ff:	xor    rsi,QWORD PTR [r10]
   140007402:	cs fs ins BYTE PTR es:[rdi],dx
   140007405:	ins    BYTE PTR es:[rdi],dx
   140007406:	add    BYTE PTR [rax],al
   140007408:	xor    DWORD PTR [rdx],eax
   14000740a:	rex.RXB
   14000740b:	gs je  0x140007453
   14000740e:	outs   dx,BYTE PTR ds:[rsi]
   14000740f:	jbe    0x14000747a
   140007411:	jb     0x140007482
   140007413:	outs   dx,BYTE PTR ds:[rsi]
   140007414:	ins    DWORD PTR es:[rdi],dx
   140007415:	outs   dx,BYTE PTR gs:[rsi]
   140007417:	je     0x14000746f
   140007419:	(bad)  
   14000741a:	jb     0x140007485
   14000741c:	(bad)  
   14000741d:	(bad)  
   14000741e:	ins    BYTE PTR es:[rdi],dx
   14000741f:	gs push rdi
   140007421:	add    BYTE PTR [rcx+0x1],bh
   140007424:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   14000742c:	je     0x140007474
   14000742e:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0x1710000
   140007436:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   14000743e:	je     0x140007483
   140007440:	push   0x65676e61
   140007445:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140007447:	je     0x1400074b2
   140007449:	imul   sp,WORD PTR [rbx+0x61],0x6974
   14000744f:	outs   dx,DWORD PTR ds:[rsi]
   140007450:	outs   dx,BYTE PTR ds:[rsi]
   140007451:	push   rdi
   140007452:	add    BYTE PTR [rax],al
   140007454:	adc    BYTE PTR [rdx],al
   140007456:	rex.RXB
   140007457:	gs je  0x14000749d
   14000745a:	jne    0x1400074ce
   14000745c:	jb     0x1400074c3
   14000745e:	outs   dx,BYTE PTR ds:[rsi]
   14000745f:	je     0x1400074b1
   140007461:	jb     0x1400074d2
   140007463:	movsxd esp,DWORD PTR [rbp+0x73]
   140007466:	jae    0x140007468
   140007468:	enter  0x5705,0x61
   14000746c:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
   140007474:	ins    BYTE PTR es:[edi],dx
   140007476:	gs rex.WRXB (bad) 
   140007479:	push   0x65
   14000747b:	movsxd esi,DWORD PTR [rax+rax*1+0x6f]
   14000747f:	add    DWORD PTR [rsi+0x69],eax
   140007482:	outs   dx,BYTE PTR ds:[rsi]
   140007483:	fs rex.XB ins BYTE PTR es:[rdi],dx
   140007486:	outs   dx,DWORD PTR ds:[rsi]
   140007487:	jae    0x1400074ee
   140007489:	rex.XB push 0x65676e61
   14000748f:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140007491:	je     0x1400074fc
   140007493:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140007499:	outs   dx,DWORD PTR ds:[rsi]
   14000749a:	outs   dx,BYTE PTR ds:[rsi]
   14000749b:	add    BYTE PTR [rax],cl
   14000749d:	add    eax,0x45746553
   1400074a2:	jbe    0x140007509
   1400074a4:	outs   dx,BYTE PTR ds:[rsi]
   1400074a5:	je     0x1400074a7
   1400074a7:	add    BYTE PTR [rax+0x6d6f4300],dl
   1400074ad:	jo     0x140007510
   1400074af:	jb     0x140007516
   1400074b1:	push   rbx
   1400074b2:	je     0x140007526
   1400074b4:	imul   ebp,DWORD PTR [rsi+0x67],0x6964724f
   1400074bb:	outs   dx,BYTE PTR ds:[rsi]
   1400074bc:	(bad)  
   1400074bd:	ins    BYTE PTR es:[rdi],dx
   1400074be:	add    BYTE PTR [rax],al
   1400074c0:	push   rbp
   1400074c1:	add    ecx,DWORD PTR [rcx+0x6e]
   1400074c4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400074cc:	rex.XB jb 0x140007538
   1400074cf:	je     0x14000753a
   1400074d1:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400074d4:	push   rbx
   1400074d5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400074da:	outs   dx,BYTE PTR ds:[rsi]
   1400074db:	rex.B outs dx,BYTE PTR ds:[rsi]
   1400074dd:	fs push rbx
   1400074df:	jo     0x14000754a
   1400074e1:	outs   dx,BYTE PTR ds:[rsi]
   1400074e2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400074e4:	jne    0x140007554
   1400074e6:	je     0x1400074e8
   1400074e8:	ins    DWORD PTR es:[rdi],dx
   1400074e9:	add    eax,0x65656c53
   1400074ee:	jo     0x1400074f0
   1400074f0:	test   eax,0x61654c03
   1400074f5:	jbe    0x14000755c
   1400074f7:	rex.XB jb 0x140007563
   1400074fa:	je     0x140007565
   1400074fc:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400074ff:	push   rbx
   140007500:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007505:	outs   dx,BYTE PTR ds:[rsi]
   140007506:	add    BYTE PTR [rax],al
   140007508:	xchg   ecx,eax
   140007509:	add    BYTE PTR [rbx+0x6f],al
   14000750c:	ins    DWORD PTR es:[rdi],dx
   14000750d:	jo     0x140007570
   14000750f:	jb     0x140007576
   140007511:	push   rbx
   140007512:	je     0x140007586
   140007514:	imul   ebp,DWORD PTR [rsi+0x67],0x58000057
   14000751b:	add    DWORD PTR [rbp+0x78],eax
   14000751e:	imul   esi,DWORD PTR [rsp+rdx*2+0x68],0x64616572
   140007526:	add    BYTE PTR [rax],al
   140007528:	rex.WRX add rax,0x54746553
   14000752e:	push   0x64616572
   140007533:	push   rax
   140007534:	jb     0x14000759f
   140007536:	outs   dx,DWORD PTR ds:[rsi]
   140007537:	jb     0x1400075a2
   140007539:	je     0x1400075b4
   14000753b:	add    BYTE PTR [rdi+0x2],dl
   14000753e:	rex.RXB
   14000753f:	gs je  0x14000758e
   140007542:	(bad)  
   140007543:	jae    0x1400075b9
   140007545:	rex.RB jb 0x1400075ba
   140007548:	outs   dx,DWORD PTR ds:[rsi]
   140007549:	jb     0x14000754b
   14000754b:	add    BYTE PTR [rbx],ah
   14000754d:	add    eax,0x4c746553
   140007552:	(bad)  
   140007553:	jae    0x1400075c9
   140007555:	rex.RB jb 0x1400075ca
   140007558:	outs   dx,DWORD PTR ds:[rsi]
   140007559:	jb     0x14000755b
   14000755b:	add    BYTE PTR [rcx],ch
   14000755d:	add    DWORD PTR [rbp+0x6e],eax
   140007560:	je     0x1400075c7
   140007562:	jb     0x1400075a7
   140007564:	jb     0x1400075cf
   140007566:	je     0x1400075d1
   140007568:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000756b:	push   rbx
   14000756c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140007571:	outs   dx,BYTE PTR ds:[rsi]
   140007572:	add    BYTE PTR [rax],al
   140007574:	outs   dx,BYTE PTR ds:[rsi]
   140007575:	add    DWORD PTR [rsi+0x69],eax
   140007578:	outs   dx,BYTE PTR ds:[rsi]
   140007579:	fs rex.XB ins BYTE PTR es:[rdi],dx
   14000757c:	outs   dx,DWORD PTR ds:[rsi]
   14000757d:	jae    0x1400075e4
   14000757f:	add    BYTE PTR [rbp+0x636f4c03],dh
   140007585:	(bad)  
   140007586:	ins    BYTE PTR es:[rdi],dx
   140007587:	rex.B ins BYTE PTR es:[rdi],dx
   140007589:	ins    BYTE PTR es:[rdi],dx
   14000758a:	outs   dx,DWORD PTR ds:[rsi]
   14000758b:	movsxd eax,DWORD PTR [rax]
   14000758d:	add    BYTE PTR [rax+rax*1+0x61657243],dh
   140007594:	je     0x1400075fb
   140007596:	rex.RB jbe 0x1400075fe
   140007599:	outs   dx,BYTE PTR ds:[rsi]
   14000759a:	je     0x1400075f3
   14000759c:	add    BYTE PTR [rax],al
   14000759e:	(bad)  
   14000759f:	add    DWORD PTR [rsi+0x69],eax
   1400075a2:	outs   dx,BYTE PTR ds:[rsi]
   1400075a3:	fs rex.WRX
   1400075a5:	gs js  0x14000761c
   1400075a8:	rex.XB push 0x65676e61
   1400075ae:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400075b0:	je     0x14000761b
   1400075b2:	imul   sp,WORD PTR [rbx+0x61],0x6974
   1400075b8:	outs   dx,DWORD PTR ds:[rsi]
   1400075b9:	outs   dx,BYTE PTR ds:[rsi]
   1400075ba:	add    BYTE PTR [rax],al
   1400075bc:	mov    BYTE PTR [rip+0x74696157],0x46        # 0x1b469d71a
   1400075c3:	outs   dx,DWORD PTR ds:[rsi]
   1400075c4:	jb     0x140007613
   1400075c6:	jne    0x140007634
   1400075c8:	je     0x140007633
   1400075ca:	jo     0x140007638
   1400075cc:	gs rex.WRXB (bad) 
   1400075cf:	push   0x65
   1400075d1:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
   1400075d5:	add    BYTE PTR [rbx+rax*1+0x48],al
   1400075d9:	gs (bad) 
   1400075db:	jo     0x140007630
   1400075dd:	gs je  0x140007629
   1400075e0:	outs   dx,BYTE PTR ds:[rsi]
   1400075e1:	outs   dx,WORD PTR ds:[rsi]
   1400075e3:	jb     0x140007652
   1400075e5:	(bad)  
   1400075e6:	je     0x140007651
   1400075e8:	outs   dx,DWORD PTR ds:[rsi]
   1400075e9:	outs   dx,BYTE PTR ds:[rsi]
   1400075ea:	add    BYTE PTR [rax],al
   1400075ec:	test   DWORD PTR [rcx],eax
   1400075ee:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x7478654e
   1400075f6:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4f03ea00
   1400075ff:	jo     0x140007666
   140007601:	outs   dx,BYTE PTR ds:[rsi]
   140007602:	rex.RB jbe 0x14000766a
   140007605:	outs   dx,BYTE PTR ds:[rsi]
   140007606:	je     0x14000765f
   140007608:	add    BYTE PTR [rax],al
   14000760a:	ss add eax,0x50746553
   140007610:	jb     0x140007681
   140007612:	movsxd esp,DWORD PTR [rbp+0x73]
   140007615:	jae    0x14000766a
   140007617:	push   0x6f647475
   14000761c:	ja     0x14000768c
   14000761e:	push   rax
   14000761f:	(bad)  
   140007620:	jb     0x140007683
   140007622:	ins    DWORD PTR es:[rdi],dx
   140007623:	gs je  0x14000768b
   140007626:	jb     0x14000769b
   140007628:	add    BYTE PTR [rax],al
   14000762a:	jge    0x14000762c
   14000762c:	rex.XB ins BYTE PTR es:[rdi],dx
   14000762e:	outs   dx,DWORD PTR ds:[rsi]
   14000762f:	jae    0x140007696
   140007631:	rex.W (bad) 
   140007633:	outs   dx,BYTE PTR ds:[rsi]
   140007634:	fs ins BYTE PTR es:[rdi],dx
   140007636:	add    BYTE PTR gs:[rcx+0x636f4c03],bh
   14000763d:	(bad)  
   14000763e:	ins    BYTE PTR es:[rdi],dx
   14000763f:	rex.RX jb 0x1400076a7
   140007642:	add    BYTE PTR gs:[rbp+0x73655204],dh
   140007649:	jne    0x1400076b8
   14000764b:	gs push rsp
   14000764d:	push   0x64616572
   140007652:	add    BYTE PTR [rax],al
   140007654:	pop    rbx
   140007655:	add    DWORD PTR [rbp+0x78],eax
   140007658:	jo     0x1400076bb
   14000765a:	outs   dx,BYTE PTR ds:[rsi]
   14000765b:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000765e:	jbe    0x1400076c9
   140007660:	jb     0x1400076d1
   140007662:	outs   dx,BYTE PTR ds:[rsi]
   140007663:	ins    DWORD PTR es:[rdi],dx
   140007664:	outs   dx,BYTE PTR gs:[rsi]
   140007666:	je     0x1400076bb
   140007668:	je     0x1400076dc
   14000766a:	imul   ebp,DWORD PTR [rsi+0x67],0xe6005773
   140007671:	add    BYTE PTR [rbx+0x72],al
   140007674:	gs (bad) 
   140007676:	je     0x1400076dd
   140007678:	push   rsp
   140007679:	push   0x64616572
   14000767e:	add    BYTE PTR [rax],al
   140007680:	inc    BYTE PTR [rdx]
   140007682:	rex.RXB
   140007683:	gs je  0x1400076da
   140007686:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000768d:	je     0x1400076c5
   14000768f:	xor    al,0x0
   140007691:	add    BYTE PTR [rbx+0x45],cl
   140007694:	push   rdx
   140007695:	rex.WRX
   140007696:	rex.RB
   140007697:	xor    r14,QWORD PTR [rdx]
   14000769a:	cs fs ins BYTE PTR es:[rdi],dx
   14000769d:	ins    BYTE PTR es:[rdi],dx
   14000769e:	add    BYTE PTR [rax],al
   1400076a0:	mov    dh,0x0
   1400076a2:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   1400076aa:	rex.WRB
   1400076ab:	gs jae 0x140007721
   1400076ae:	(bad)  
   1400076af:	addr32 gs push rdi
   1400076b2:	add    BYTE PTR [rax],al
   1400076b4:	movabs ds:0x646e695766654400,al
   1400076bd:	outs   dx,DWORD PTR ds:[rsi]
   1400076be:	ja     0x140007710
   1400076c0:	jb     0x140007731
   1400076c2:	movsxd edx,DWORD PTR [rdi+0x0]
   1400076c5:	add    BYTE PTR [rbx+0x73654400],ch
   1400076cb:	je     0x14000773f
   1400076cd:	outs   dx,DWORD PTR ds:[rsi]
   1400076ce:	jns    0x140007719
   1400076d0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400076d3:	add    dl,ah
   1400076d5:	add    dl,BYTE PTR [rbx+0x65]
   1400076d8:	outs   dx,BYTE PTR ds:[rsi]
   1400076d9:	fs rex.WRB
   1400076db:	gs jae 0x140007751
   1400076de:	(bad)  
   1400076df:	addr32 gs push rdi
   1400076e2:	add    BYTE PTR [rax],al
   1400076e4:	cli    
   1400076e5:	add    dl,BYTE PTR [rbx+0x65]
   1400076e8:	je     0x14000772e
   1400076ea:	ins    BYTE PTR es:[rdi],dx
   1400076eb:	addr32 rex.WB je 0x140007754
   1400076ef:	ins    DWORD PTR es:[rdi],dx
   1400076f0:	push   rsp
   1400076f1:	gs js  0x140007768
   1400076f4:	push   rdi
   1400076f5:	add    BYTE PTR [rax+0x74654701],dh
   1400076fb:	push   rbx
   1400076fc:	jns    0x140007771
   1400076fe:	je     0x140007765
   140007700:	ins    DWORD PTR es:[rdi],dx
   140007701:	rex.WRB
   140007702:	gs je  0x140007777
   140007705:	imul   esp,DWORD PTR [rbx+0x73],0x2ad0000
   14000770c:	push   rdx
   14000770d:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6c437265
   140007716:	(bad)  
   140007717:	jae    0x14000778c
   140007719:	push   rdi
   14000771a:	add    BYTE PTR [rax],al
   14000771c:	(bad)  
   14000771d:	add    cl,BYTE PTR [rbp+0x65]
   140007720:	jae    0x140007795
   140007722:	(bad)  
   140007723:	rex.X outs dx,DWORD PTR gs:[esi]
   140007727:	js     0x140007780
   140007729:	add    BYTE PTR [rcx+0x0],dh
   14000772c:	rex.XB jb 0x140007794
   14000772f:	(bad)  
   140007730:	je     0x140007797
   140007732:	push   rdi
   140007733:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   14000773a:	push   rdi
   14000773b:	add    BYTE PTR [rax],dl
   14000773d:	add    cl,BYTE PTR [rcx+0x73]
   140007740:	rex.R ins BYTE PTR es:[rdi],dx
   140007742:	addr32 rex.X jne 0x1400077ba
   140007746:	je     0x1400077b7
   140007748:	outs   dx,BYTE PTR ds:[rsi]
   140007749:	rex.XB push 0x656b6365
   14000774f:	add    BYTE PTR fs:[rax],al
   140007752:	add    cl,BYTE PTR [r15+r13*2+0x61]
   140007757:	fs push rbx
   140007759:	je     0x1400077cd
   14000775b:	imul   ebp,DWORD PTR [rsi+0x67],0x3e0057
   140007762:	rex.XB push 0x446b6365
   140007768:	ins    BYTE PTR es:[rdi],dx
   140007769:	addr32 rex.X jne 0x1400077e1
   14000776d:	je     0x1400077de
   14000776f:	outs   dx,BYTE PTR ds:[rsi]
   140007770:	add    BYTE PTR [rax],al
   140007772:	rex.WRXB add r10,QWORD PTR [r11+0x68]
   140007776:	jne    0x1400077ec
   140007778:	outs   dx,DWORD PTR fs:[rsi]
   14000777a:	ja     0x1400077ea
   14000777c:	rex.X ins BYTE PTR es:[rdi],dx
   14000777e:	outs   dx,DWORD PTR ds:[rsi]
   14000777f:	movsxd ebp,DWORD PTR [rbx+0x52]
   140007782:	gs (bad) 
   140007784:	jae    0x1400077f5
   140007786:	outs   dx,BYTE PTR ds:[rsi]
   140007787:	rex.R
   140007788:	gs jae 0x1400077ff
   14000778b:	jb     0x1400077fc
   14000778d:	jns    0x14000778f
   14000778f:	add    BYTE PTR [rbx],bh
   140007791:	add    edx,DWORD PTR [rbx+0x65]
   140007794:	je     0x1400077ed
   140007796:	imul   ebp,DWORD PTR [rsi+0x64],0x6f50776f
   14000779d:	jae    0x14000779f
   14000779f:	add    BYTE PTR [rbx],bh
   1400077a1:	add    DWORD PTR [rdi+0x65],eax
   1400077a4:	je     0x1400077ea
   1400077a6:	gs jae 0x140007814
   1400077a9:	je     0x14000781a
   1400077ab:	jo     0x140007804
   1400077ad:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   1400077b4:	fld    DWORD PTR [rdx]
   1400077b6:	push   rbx
   1400077b7:	outs   dx,BYTE PTR gs:[rsi]
   1400077b9:	fs rex.R ins BYTE PTR es:[rdi],dx
   1400077bc:	addr32 rex.WB je 0x140007825
   1400077c0:	ins    DWORD PTR es:[rdi],dx
   1400077c1:	rex.WRB
   1400077c2:	gs jae 0x140007838
   1400077c5:	(bad)  
   1400077c6:	addr32 gs push rdi
   1400077c9:	add    cl,ch
   1400077cb:	add    BYTE PTR [rbp+0x6e],al
   1400077ce:	imul   r12d,DWORD PTR fs:[rcx+0x6c],0x4000676f
   1400077d7:	add    DWORD PTR [rdi+0x65],eax
   1400077da:	je     0x140007820
   1400077dc:	ins    BYTE PTR es:[rdi],dx
   1400077dd:	addr32 rex.WB je 0x140007846
   1400077e1:	ins    DWORD PTR es:[rdi],dx
   1400077e2:	add    BYTE PTR [rax],al
   1400077e4:	(bad)  
   1400077e5:	add    DWORD PTR [rdi+0x65],eax
   1400077e8:	je     0x140007841
   1400077ea:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   1400077f1:	outs   dx,BYTE PTR ds:[rsi]
   1400077f2:	addr32 push rdi
   1400077f4:	add    BYTE PTR [rax],al
   1400077f6:	add    cl,BYTE PTR ss:[rdi+rbp*2+0x61]
   1400077fb:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   140007800:	push   rdi
   140007801:	add    BYTE PTR [rbx+0x3],ch
   140007804:	push   rsp
   140007805:	jb     0x140007868
   140007807:	outs   dx,BYTE PTR ds:[rsi]
   140007808:	jae    0x140007876
   14000780a:	(bad)  
   14000780b:	je     0x140007872
   14000780d:	rex.WRB
   14000780e:	gs jae 0x140007884
   140007811:	(bad)  
   140007812:	add    BYTE PTR gs:[eax],al
   140007816:	sub    DWORD PTR [rcx],eax
   140007818:	rex.RXB
   140007819:	gs je  0x14000785f
   14000781c:	ins    BYTE PTR es:[rdi],dx
   14000781d:	imul   esp,DWORD PTR [rbp+0x6e],0x63655274
   140007824:	je     0x140007826
   140007826:	rex.WRX add r10,QWORD PTR [rbx+0x68]
   14000782a:	jne    0x1400078a0
   14000782c:	outs   dx,DWORD PTR fs:[rsi]
   14000782e:	ja     0x14000789e
   140007830:	rex.X ins BYTE PTR es:[rdi],dx
   140007832:	outs   dx,DWORD PTR ds:[rsi]
   140007833:	movsxd ebp,DWORD PTR [rbx+0x52]
   140007836:	gs (bad) 
   140007838:	jae    0x1400078a9
   14000783a:	outs   dx,BYTE PTR ds:[rsi]
   14000783b:	rex.XB jb 0x1400078a3
   14000783e:	(bad)  
   14000783f:	je     0x1400078a6
   140007841:	add    BYTE PTR [rdi+0x1],bh
   140007844:	rex.RXB
   140007845:	gs je  0x140007898
   140007848:	(bad)  
   140007849:	jb     0x1400078b0
   14000784b:	outs   dx,BYTE PTR ds:[rsi]
   14000784c:	je     0x14000784e
   14000784e:	mov    bl,0x0
   140007850:	imul   r12d,DWORD PTR [rcx+0x6c],0x6f42676f
   140007858:	js     0x1400078aa
   14000785a:	(bad)  
   14000785b:	jb     0x1400078be
   14000785d:	ins    DWORD PTR es:[rdi],dx
   14000785e:	push   rdi
   14000785f:	add    dh,bh
   140007861:	add    dl,BYTE PTR [rbx+0x65]
   140007864:	je     0x1400078ac
   140007866:	outs   dx,DWORD PTR ds:[rsi]
   140007867:	jb     0x1400078ce
   140007869:	addr32 jb 0x1400078db
   14000786c:	jne    0x1400078dc
   14000786e:	fs push rdi
   140007870:	imul   ebp,DWORD PTR [rsi+0x64],0x2c00776f
   140007877:	add    cl,BYTE PTR [rbx+0x69]
   14000787a:	ins    BYTE PTR es:[rdi],dx
   14000787b:	ins    BYTE PTR es:[rdi],dx
   14000787c:	push   rsp
   14000787d:	imul   ebp,DWORD PTR [rbp+0x65],0x2830072
   140007884:	push   rax
   140007885:	outs   dx,DWORD PTR ds:[rsi]
   140007886:	jae    0x1400078fc
   140007888:	rex.WRB
   140007889:	gs jae 0x1400078ff
   14000788c:	(bad)  
   14000788d:	addr32 gs push rdi
   140007890:	add    BYTE PTR [rax],al
   140007892:	cmp    BYTE PTR [rdx],al
   140007894:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007896:	(bad)  
   140007897:	fs rex.WB ins DWORD PTR es:[rdi],dx
   14000789a:	(bad)  
   14000789b:	addr32 gs push rdi
   14000789e:	add    BYTE PTR [rax],al
   1400078a0:	test   BYTE PTR [rdx],al
   1400078a2:	push   rax
   1400078a3:	outs   dx,DWORD PTR ds:[rsi]
   1400078a4:	jae    0x14000791a
   1400078a6:	push   rcx
   1400078a7:	jne    0x140007912
   1400078a9:	je     0x1400078f8
   1400078ab:	gs jae 0x140007921
   1400078ae:	(bad)  
   1400078af:	add    BYTE PTR gs:[eax+0x1],bh
   1400078b4:	rex.RXB
   1400078b5:	gs je  0x140007905
   1400078b8:	gs jae 0x14000792e
   1400078bb:	(bad)  
   1400078bc:	addr32 gs push rdi
   1400078bf:	add    ah,dl
   1400078c1:	add    DWORD PTR [rdi+0x65],eax
   1400078c4:	je     0x14000791d
   1400078c6:	imul   ebp,DWORD PTR [rsi+0x64],0x6552776f
   1400078cd:	movsxd esi,DWORD PTR [rax+rax*1+0x2b]
   1400078d1:	add    edx,DWORD PTR [rbx+0x65]
   1400078d4:	je     0x14000792a
   1400078d6:	imul   ebp,DWORD PTR [rbp+0x65],0x55000072
   1400078dd:	push   rbx
   1400078de:	rex.RB push r10
   1400078e0:	xor    esi,DWORD PTR [rdx]
   1400078e2:	cs fs ins BYTE PTR es:[rdi],dx
   1400078e5:	ins    BYTE PTR es:[rdi],dx
   1400078e6:	add    BYTE PTR [rax],al
   1400078e8:	imul   eax,DWORD PTR [rbx],0x6e73765f
   1400078ee:	ja     0x140007960
   1400078f0:	jb     0x14000795b
   1400078f2:	outs   dx,BYTE PTR ds:[rsi]
   1400078f3:	je     0x14000795b
   1400078f5:	add    BYTE PTR [rbp+0x0],dl
   1400078f8:	pop    rdi
   1400078f9:	pop    rax
   1400078fa:	movsxd esi,DWORD PTR [rax+0x74]
   1400078fd:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   140007906:	pop    rdi
   140007907:	(bad)  
   140007908:	ins    DWORD PTR es:[rdi],dx
   140007909:	jae    0x140007972
   14000790b:	pop    rdi
   14000790c:	gs js  0x140007978
   14000790f:	je     0x140007911
   140007911:	add    BYTE PTR [rdi+0x0],bh
   140007914:	pop    rdi
   140007915:	pop    rdi
   140007916:	addr32 gs je 0x140007987
   14000791a:	(bad)  
   14000791b:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140007922:	mov    es,WORD PTR [rax]
   140007924:	pop    rdi
   140007925:	pop    rdi
   140007926:	jae    0x14000798d
   140007928:	je     0x140007989
   14000792a:	(bad)  
   14000792b:	jo     0x14000799d
   14000792d:	pop    rdi
   14000792e:	je     0x1400079a9
   140007930:	jo     0x140007997
   140007932:	add    BYTE PTR [rax],al
   140007934:	xor    al,BYTE PTR [riz*2+0x746978]
   14000793b:	add    BYTE PTR [rsi],cl
   14000793d:	add    DWORD PTR [rdi+0x65],ebx
   140007940:	js     0x1400079ab
   140007942:	je     0x140007944
   140007944:	rol    DWORD PTR [rax],0x5f
   140007947:	movsxd esp,DWORD PTR [rbp+0x78]
   14000794a:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x695f0199
   140007952:	jae    0x1400079c1
   140007954:	(bad)
   140007959:	add    BYTE PTR fs:[rax],al
   14000795c:	nop
   14000795d:	add    BYTE PTR [rdi+0x5f],bl
   140007960:	jae    0x1400079c7
   140007962:	je     0x1400079d9
   140007964:	jae    0x1400079cb
   140007966:	jb     0x1400079d5
   140007968:	(bad)  
   140007969:	je     0x1400079d3
   14000796b:	gs jb  0x1400079e0
   14000796e:	add    BYTE PTR [rax],al
   140007970:	jge    0x140007973
   140007972:	pop    rdi
   140007973:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000797a:	ins    DWORD PTR es:[rdi],dx
   14000797b:	add    BYTE PTR [rdi+0x0],dl
   14000797e:	pop    rdi
   14000797f:	pop    rdi
   140007980:	rex.XB pop r15
   140007982:	jae    0x1400079f4
   140007984:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140007988:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000798f:	ins    BYTE PTR es:[rdi],dx
   140007990:	gs jb  0x140007993
   140007993:	add    BYTE PTR [rdx+0x63615f00],ah
   140007999:	ins    DWORD PTR es:[rdi],dx
   14000799a:	fs ins BYTE PTR es:[rdi],dx
   14000799c:	outs   dx,BYTE PTR ds:[rsi]
   14000799d:	add    BYTE PTR [rdi],ah
   14000799f:	add    DWORD PTR [rdi+0x66],ebx
   1400079a2:	ins    DWORD PTR es:[rdi],dx
   1400079a3:	outs   dx,DWORD PTR ds:[rsi]
   1400079a4:	fs add BYTE PTR gs:[rax],al
   1400079a8:	rol    BYTE PTR [rax],cl
   1400079aa:	pop    rdi
   1400079ab:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400079ae:	ins    DWORD PTR es:[rdi],dx
   1400079af:	outs   dx,DWORD PTR ds:[rsi]
   1400079b0:	fs add BYTE PTR gs:[rax],al
   1400079b4:	ins    DWORD PTR es:[rdi],dx
   1400079b5:	jae    0x140007a2d
   1400079b7:	movsxd esi,DWORD PTR [rdx+0x74]
   1400079ba:	cs fs ins BYTE PTR es:[rdi],dx
   1400079bd:	ins    BYTE PTR es:[rdi],dx
   1400079be:	add    BYTE PTR [rax],al
   1400079c0:	(bad)  
   1400079c1:	add    BYTE PTR [rdi],bh
   1400079c3:	je     0x140007a2a
   1400079c5:	jb     0x140007a34
   1400079c7:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   1400079ce:	pop    rcx
   1400079cf:	pop    r8
   1400079d1:	pop    rax
   1400079d2:	pop    rdx
   1400079d3:	add    dl,al
   1400079d5:	add    DWORD PTR [rbx+0x68],edx
   1400079d8:	gs ins BYTE PTR es:[rdi],dx
   1400079da:	ins    BYTE PTR es:[rdi],dx
   1400079db:	pop    rdi
   1400079dc:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400079de:	je     0x140007a49
   1400079e0:	data16 jns 0x140007a2c
   1400079e3:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400079e6:	push   rdi
   1400079e7:	add    BYTE PTR [rcx+0x1],dl
   1400079ea:	push   rbx
   1400079eb:	rex.W
   1400079ec:	rex.RXB
   1400079ed:	gs je  0x140007a36
   1400079f0:	imul   ebp,DWORD PTR [rbp+riz*2+0x49],0x576f666e
   1400079f8:	add    BYTE PTR [rax],al
   1400079fa:	push   rbx
   1400079fb:	rex.W
   1400079fc:	rex.RB
   1400079fd:	rex.WR
   1400079fe:	xor    r14,QWORD PTR [rdx]
   140007a01:	cs fs ins BYTE PTR es:[rdi],dx
   140007a04:	ins    BYTE PTR es:[rdi],dx
   140007a05:	add    BYTE PTR [rax],dh
   140007a07:	add    BYTE PTR [rdx+0x65],dl
   140007a0a:	imul   esi,DWORD PTR [ebx+0x74],0x50477265
   140007a12:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140007a14:	je     0x140007a7f
   140007a16:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140007a1c:	outs   dx,DWORD PTR ds:[rsi]
   140007a1d:	outs   dx,BYTE PTR ds:[rsi]
   140007a1e:	add    BYTE PTR [rax],al
   140007a20:	cmp    BYTE PTR [rax],al
   140007a22:	push   rbp
   140007a23:	outs   dx,BYTE PTR ds:[rsi]
   140007a24:	jb     0x140007a8b
   140007a26:	imul   esi,DWORD PTR [ebx+0x74],0x50477265
   140007a2e:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140007a30:	je     0x140007a9b
   140007a32:	imul   sp,WORD PTR [rbx+0x61],0x6974
   140007a38:	outs   dx,DWORD PTR ds:[rsi]
   140007a39:	outs   dx,BYTE PTR ds:[rsi]
   140007a3a:	add    BYTE PTR [rax],al
   140007a3c:	and    BYTE PTR [rax],al
   140007a3e:	rex.RXB
   140007a3f:	gs je  0x140007a95
   140007a42:	je     0x140007aa5
   140007a44:	jb     0x140007aba
   140007a46:	jne    0x140007ab8
   140007a48:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007a4a:	outs   dx,WORD PTR ds:[rsi]
   140007a4c:	push   rdi
   140007a4d:	add    BYTE PTR [rdx],al
   140007a4f:	add    BYTE PTR [rdx+0x74],dl
   140007a52:	ins    BYTE PTR es:[rdi],dx
   140007a53:	rex.XB (bad) 
   140007a55:	jo     0x140007acb
   140007a57:	jne    0x140007acb
   140007a59:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140007a5c:	outs   dx,BYTE PTR ds:[rsi]
   140007a5d:	je     0x140007ac4
   140007a5f:	js     0x140007ad5
   140007a61:	add    BYTE PTR [rcx],cl
   140007a63:	add    BYTE PTR [rdx+0x74],dl
   140007a66:	ins    BYTE PTR es:[rdi],dx
   140007a67:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140007a69:	outs   dx,DWORD PTR ds:[rsi]
   140007a6a:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140007a6e:	jne    0x140007ade
   140007a70:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140007a74:	outs   dx,BYTE PTR ds:[rsi]
   140007a75:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140007a77:	je     0x140007aeb
   140007a79:	jns    0x140007a7b
   140007a7b:	add    BYTE PTR [rdi],cl
   140007a7d:	add    BYTE PTR [rdx+0x74],dl
   140007a80:	ins    BYTE PTR es:[rdi],dx
   140007a81:	push   rsi
   140007a82:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140007a89:	outs   dx,BYTE PTR ds:[rsi]
   140007a8a:	ja     0x140007af5
   140007a8c:	outs   dx,BYTE PTR ds:[rsi]
   140007a8d:	add    BYTE PTR fs:[rax],al
   140007a90:	adc    DWORD PTR [rax],eax
   140007a92:	push   rbp
   140007a93:	outs   dx,BYTE PTR ds:[rsi]
   140007a94:	push   0x6c646e61
   140007a99:	gs fs rex.RB js 0x140007b01
   140007a9e:	gs jo  0x140007b15
   140007aa1:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140007aa8:	gs jb  0x140007aab
   140007aab:	add    BYTE PTR [rdi],cl
   140007aad:	add    BYTE PTR [rbx+0x65],dl
   140007ab0:	je     0x140007b07
   140007ab2:	outs   dx,BYTE PTR ds:[rsi]
   140007ab3:	push   0x6c646e61
   140007ab8:	gs fs rex.RB js 0x140007b20
   140007abd:	gs jo  0x140007b34
   140007ac0:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140007ac7:	gs jb  0x140007aca
   140007aca:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140007acf:	ins    DWORD PTR es:[rdi],dx
   140007ad0:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140007ad7:	outs   dx,DWORD PTR ds:[rsi]
   140007ad8:	movsxd esp,DWORD PTR [rbp+0x73]
   140007adb:	jae    0x140007add
   140007add:	add    BYTE PTR [rbx],dl
   140007adf:	add    BYTE PTR [rdi+0x65],al
   140007ae2:	je     0x140007b31
   140007ae4:	outs   dx,DWORD PTR ds:[rsi]
   140007ae5:	fs jne 0x140007b54
   140007ae8:	gs rex.W (bad) 
   140007aeb:	outs   dx,BYTE PTR ds:[rsi]
   140007aec:	fs ins BYTE PTR es:[rdi],dx
   140007aee:	gs push rdi
   140007af0:	add    BYTE PTR [rax],al
   140007af2:	add    BYTE PTR [rax],al
   140007af4:	push   rcx
   140007af5:	jne    0x140007b5c
   140007af7:	jb     0x140007b72
   140007af9:	push   rax
   140007afa:	gs jb  0x140007b63
   140007afd:	outs   dx,DWORD PTR ds:[rsi]
   140007afe:	jb     0x140007b6d
   140007b00:	(bad)  
   140007b01:	outs   dx,BYTE PTR ds:[rsi]
   140007b02:	movsxd esp,DWORD PTR [rbp+0x43]
   140007b05:	outs   dx,DWORD PTR ds:[rsi]
   140007b06:	jne    0x140007b76
   140007b08:	je     0x140007b6f
   140007b0a:	jb     0x140007b0c
   140007b0c:	or     eax,0x74654700
   140007b11:	rex.XB jne 0x140007b86
   140007b14:	jb     0x140007b7b
   140007b16:	outs   dx,BYTE PTR ds:[rsi]
   140007b17:	je     0x140007b69
   140007b19:	jb     0x140007b8a
   140007b1b:	movsxd esp,DWORD PTR [rbp+0x73]
   140007b1e:	jae    0x140007b69
   140007b20:	add    BYTE PTR fs:[rcx],dl
   140007b23:	add    BYTE PTR [rdi+0x65],al
   140007b26:	je     0x140007b6b
   140007b28:	jne    0x140007b9c
   140007b2a:	jb     0x140007b91
   140007b2c:	outs   dx,BYTE PTR ds:[rsi]
   140007b2d:	je     0x140007b83
   140007b2f:	push   0x64616572
   140007b34:	rex.WB
   140007b35:	add    BYTE PTR fs:[rax],al
   140007b38:	adc    al,0x0
   140007b3a:	rex.RXB
   140007b3b:	gs je  0x140007b91
   140007b3e:	jns    0x140007bb3
   140007b40:	je     0x140007ba7
   140007b42:	ins    DWORD PTR es:[rdi],dx
   140007b43:	push   rsp
   140007b44:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140007b4b:	ins    BYTE PTR es:[rdi],dx
   140007b4c:	gs push rsp
   140007b4e:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140007b55:	gs je  0x140007bac
   140007b58:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140007b5f:	je     0x140007b61
   140007b61:	add    BYTE PTR [rip+0x636f4c00],al        # 0x1a36fc767
   140007b67:	(bad)  
   140007b68:	ins    BYTE PTR es:[rdi],dx
   140007b69:	push   rdx
   140007b6a:	gs rex.B ins BYTE PTR es:[rdi],dx
   140007b6d:	ins    BYTE PTR es:[rdi],dx
   140007b6e:	outs   dx,DWORD PTR ds:[rsi]
   140007b6f:	movsxd eax,DWORD PTR [rax]
   140007b71:	add    BYTE PTR [rbp+0x53],dl
   140007b74:	rex.RB push r10
   140007b76:	rex.RB
   140007b77:	rex.WRX push rsi
   140007b79:	cs fs ins BYTE PTR es:[rdi],dx
   140007b7c:	ins    BYTE PTR es:[rdi],dx
   140007b7d:	add    BYTE PTR [rcx+0x70],ah
   140007b80:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72deef7
   140007b8a:	outs   dx,DWORD PTR ds:[rsi]
   140007b8b:	jb     0x140007bf2
   140007b8d:	sub    eax,0x636f7270
   140007b92:	gs jae 0x140007c08
   140007b95:	je     0x140007bff
   140007b97:	jb     0x140007bfe
   140007b99:	(bad)  
   140007b9a:	fs jae 0x140007bca
   140007b9d:	ins    BYTE PTR es:[rdi],dx
   140007b9e:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e32a8d5
   140007ba4:	fs ins BYTE PTR es:[rdi],dx
   140007ba6:	ins    BYTE PTR es:[rdi],dx
   140007ba7:	add    BYTE PTR [rcx+0x70],ah
   140007baa:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72def21
   140007bb4:	outs   dx,DWORD PTR ds:[rsi]
   140007bb5:	jb     0x140007c1c
   140007bb7:	sub    eax,0x736c7472
   140007bbc:	jne    0x140007c2e
   140007bbe:	jo     0x140007c2f
   140007bc0:	jb     0x140007c36
   140007bc2:	sub    eax,0x322d316c
   140007bc7:	sub    eax,0x6c642e30
   140007bcc:	ins    BYTE PTR es:[rdi],dx
   140007bcd:	add    BYTE PTR [rcx+0x70],ah
   140007bd0:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72def47
   140007bda:	outs   dx,DWORD PTR ds:[rsi]
   140007bdb:	jb     0x140007c42
   140007bdd:	sub    eax,0x6f727265
   140007be2:	jb     0x140007c4c
   140007be4:	(bad)  
   140007be5:	outs   dx,BYTE PTR ds:[rsi]
   140007be6:	fs ins BYTE PTR es:[rdi],dx
   140007be8:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140007bef:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64aa26
   140007bf5:	ins    BYTE PTR es:[rdi],dx
   140007bf6:	add    BYTE PTR [rax],al
   140007bf8:	(bad)  
   140007bf9:	jo     0x140007c64
   140007bfb:	sub    eax,0x772d736d
   140007c00:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140007c07:	sub    eax,0x7262696c
   140007c0c:	(bad)  
   140007c0d:	jb     0x140007c88
   140007c0f:	ins    BYTE PTR es:[rdi],dx
   140007c10:	outs   dx,DWORD PTR ds:[rsi]
   140007c11:	(bad)  
   140007c12:	fs gs jb 0x140007c43
   140007c16:	ins    BYTE PTR es:[rdi],dx
   140007c17:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e30a94f
   140007c1d:	fs ins BYTE PTR es:[rdi],dx
   140007c1f:	ins    BYTE PTR es:[rdi],dx
   140007c20:	add    BYTE PTR [rax],al
   140007c22:	(bad)  
   140007c23:	jo     0x140007c8e
   140007c25:	sub    eax,0x772d736d
   140007c2a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140007c31:	sub    eax,0x666f7270
   140007c36:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140007c3e:	sub    eax,0x6c642e30
   140007c43:	ins    BYTE PTR es:[rdi],dx
   140007c44:	add    BYTE PTR [rax],al
   140007c46:	(bad)  
   140007c47:	jo     0x140007cb2
   140007c49:	sub    eax,0x772d736d
   140007c4e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140007c55:	sub    eax,0x69737973
   140007c5a:	outs   dx,BYTE PTR ds:[rsi]
   140007c5b:	outs   dx,WORD PTR ds:[rsi]
   140007c5d:	sub    eax,0x322d316c
   140007c62:	sub    eax,0x6c642e31
   140007c67:	ins    BYTE PTR es:[rdi],dx
   140007c68:	add    BYTE PTR [rax],al
   140007c6a:	(bad)  
   140007c6b:	jo     0x140007cd6
   140007c6d:	sub    eax,0x772d736d
   140007c72:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140007c79:	sub    eax,0x70616568
   140007c7e:	sub    eax,0x312d326c
   140007c83:	sub    eax,0x6c642e30
   140007c88:	ins    BYTE PTR es:[rdi],dx
   140007c89:	add    BYTE PTR [rbx+0x4f],al
   140007c8c:	rex.WRB
   140007c8d:	rex.XB push r12
   140007c8f:	xor    r14,QWORD PTR [rdx]
   140007c92:	cs fs ins BYTE PTR es:[rdi],dx
   140007c95:	ins    BYTE PTR es:[rdi],dx
   140007c96:	add    BYTE PTR [rax],al
   140007c98:	(bad)  
   140007c99:	add    BYTE PTR [rbx+0x6f],al
   140007c9c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140007c9e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140007ca6:	add    BYTE PTR [rax],al
   140007ca8:	outs   dx,DWORD PTR ds:[rsi]
   140007ca9:	ins    BYTE PTR es:[rdi],dx
   140007caa:	xor    esi,DWORD PTR gs:[rdx]
   140007cad:	cs fs ins BYTE PTR es:[rdi],dx
   140007cb0:	ins    BYTE PTR es:[rdi],dx
   140007cb1:	add    BYTE PTR [rsi+0x6d656d04],dl
   140007cb7:	jae    0x140007d1e
   140007cb9:	je     0x140007cbb
	...

Disassembly of section .data:

0000000140008000 <.data>:
   140008000:	add    DWORD PTR [rax],eax
   140008002:	add    BYTE PTR [rax],al
   140008004:	add    BYTE PTR [rax],al
   140008006:	add    BYTE PTR [rax],al
   140008008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000800e:	add    BYTE PTR [rax],al
   140008010:	int    0x5d
   140008012:	and    dl,dl
   140008014:	data16 (bad) 
   140008016:	(bad)  
   140008017:	inc    DWORD PTR [rax]
   140008019:	add    BYTE PTR [rax],al
   14000801b:	add    BYTE PTR [rax],al
   14000801d:	add    BYTE PTR [rax],al
   14000801f:	add    BYTE PTR [rax+0x0],dh
   140008022:	jb     0x140008024
   140008024:	outs   dx,DWORD PTR ds:[rsi]
   140008025:	add    BYTE PTR [rcx+0x0],dh
   140008028:	jne    0x14000802a
   14000802a:	outs   dx,DWORD PTR ds:[rsi]
   14000802b:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000802f:	add    BYTE PTR [rax],al
   140008031:	add    BYTE PTR [rax],al
   140008033:	add    BYTE PTR [rax],al
   140008035:	sub    BYTE PTR [rax],al
   140008037:	add    BYTE PTR [rax+0x0],dh
   14000803a:	jb     0x14000803c
   14000803c:	outs   dx,DWORD PTR ds:[rsi]
   14000803d:	add    BYTE PTR [rcx+0x0],dh
   140008040:	jne    0x140008042
   140008042:	outs   dx,DWORD PTR ds:[rsi]
   140008043:	add    BYTE PTR [rax+rax*1+0x61],dh
   140008047:	add    BYTE PTR [rax],ah
   140008049:	add    BYTE PTR [rcx+0x0],ch
   14000804c:	outs   dx,BYTE PTR ds:[rsi]
   14000804d:	add    BYTE PTR [rbx+0x0],dh
   140008050:	je     0x140008052
   140008052:	(bad)  
   140008053:	add    BYTE PTR [rsi+0x0],ch
   140008056:	movsxd eax,DWORD PTR [rax]
   140008058:	add    BYTE PTR gs:[rax],ah
   14000805b:	add    BYTE PTR [rbp+0x0],ah
   14000805e:	jbe    0x140008060
   140008060:	add    BYTE PTR gs:[rsi+0x0],ch
   140008064:	je     0x140008066
   140008066:	add    BYTE PTR [rax],al
   140008068:	sldt   WORD PTR [rax]
   14000806b:	add    BYTE PTR [rax],al
   14000806d:	add    BYTE PTR [rax],al
   14000806f:	add    BYTE PTR [rax-0x80],dh
   140008072:	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .pdata:

0000000140009000 <.pdata>:
   140009000:	or     BYTE PTR [rax],dl
   140009002:	add    BYTE PTR [rax],al
   140009004:	jle    0x140009016
   140009006:	add    BYTE PTR [rax],al
   140009008:	adc    BYTE PTR [rbx+0x0],ch
   14000900b:	add    BYTE PTR [rax+rdx*1+0x11460000],al
   140009012:	add    BYTE PTR [rax],al
   140009014:	sbb    BYTE PTR [rbx+0x0],ch
   140009017:	add    BYTE PTR [rcx+rdx*1+0x0],cl
   14000901b:	add    bl,al
   14000901d:	adc    DWORD PTR [rax],eax
   14000901f:	add    BYTE PTR [rbx+rbp*2],ah
   140009022:	add    BYTE PTR [rax],al
   140009024:	int3   
   140009025:	adc    DWORD PTR [rax],eax
   140009027:	add    cl,dh
   140009029:	adc    DWORD PTR [rax],eax
   14000902b:	add    BYTE PTR [rbx+rbp*2],dh
   14000902e:	add    BYTE PTR [rax],al
   140009030:	clc    
   140009031:	adc    DWORD PTR [rax],eax
   140009033:	add    BYTE PTR [rdx+rdx*1],ch
   140009036:	add    BYTE PTR [rax],al
   140009038:	cmp    al,0x6b
   14000903a:	add    BYTE PTR [rax],al
   14000903c:	xor    al,0x12
   14000903e:	add    BYTE PTR [rax],al
   140009040:	loop   0x140009054
   140009042:	add    BYTE PTR [rax],al
   140009044:	imul   r8d,DWORD PTR [rax],0x0
   140009048:	call   0x1a400905f
   14000904d:	adc    eax,DWORD PTR [rax]
   14000904f:	add    BYTE PTR [rbx+rbp*2+0x0],cl
   140009053:	add    BYTE PTR [rbx+rdx*1+0x0],ch
   140009057:	add    BYTE PTR [rbx+0x14],cl
   14000905a:	add    BYTE PTR [rax],al
   14000905c:	push   rsp
   14000905d:	imul   eax,DWORD PTR [rax],0x0
   140009060:	push   rsp
   140009061:	adc    al,0x0
   140009063:	add    ah,ch
   140009065:	adc    al,0x0
   140009067:	add    BYTE PTR [rbx+rbp*2+0x0],bl
   14000906b:	add    BYTE PTR [rax],al
   14000906d:	adc    eax,0x157f0000
   140009072:	add    BYTE PTR [rax],al
   140009074:	imul   eax,DWORD PTR fs:[rax],0x0
   140009078:	mov    BYTE PTR [rip+0x16100000],dl        # 0x15610907e
   14000907e:	add    BYTE PTR [rax],al
   140009080:	je     0x1400090ed
   140009082:	add    BYTE PTR [rax],al
   140009084:	sbb    BYTE PTR [rsi],dl
   140009086:	add    BYTE PTR [rax],al
   140009088:	pop    rdi
   140009089:	sbb    eax,DWORD PTR [rax]
   14000908b:	add    BYTE PTR [rax+0x7000006b],cl
   140009091:	sbb    eax,DWORD PTR [rax]
   140009093:	add    BYTE PTR [rdi],cl
   140009095:	(bad)  
   140009096:	add    BYTE PTR [rax],al
   140009098:	mov    esp,0x2000006b
   14000909d:	(bad)  
   14000909e:	add    BYTE PTR [rax],al
   1400090a0:	cmc    
   1400090a1:	(bad)  
   1400090a2:	add    BYTE PTR [rax],al
   1400090a4:	(bad)  
   1400090a5:	imul   eax,DWORD PTR [rax],0x0
   1400090a8:	cld    
   1400090a9:	(bad)  
   1400090aa:	add    BYTE PTR [rax],al
   1400090ac:	retf   0x28
   1400090af:	add    ah,bh
   1400090b1:	imul   eax,DWORD PTR [rax],0x0
   1400090b4:	shr    BYTE PTR [rax],1
   1400090b6:	add    BYTE PTR [rax],al
   1400090b8:	std    
   1400090b9:	sub    eax,DWORD PTR [rax]
   1400090bb:	add    BYTE PTR [rax],cl
   1400090bd:	ins    BYTE PTR es:[rdi],dx
   1400090be:	add    BYTE PTR [rax],al
   1400090c0:	add    al,0x2c
   1400090c2:	add    BYTE PTR [rax],al
   1400090c4:	rex.WX (bad) 
   1400090c6:	add    BYTE PTR [rax],al
   1400090c8:	sbb    al,0x6c
   1400090ca:	add    BYTE PTR [rax],al
   1400090cc:	push   rax
   1400090cd:	(bad)  
   1400090ce:	add    BYTE PTR [rax],al
   1400090d0:	sbb    BYTE PTR [rip+0x6c2c0000],dh        # 0x1ac2c90d6
   1400090d6:	add    BYTE PTR [rax],al
   1400090d8:	and    BYTE PTR [rip+0x361c0000],dh        # 0x1761c90de
   1400090de:	add    BYTE PTR [rax],al
   1400090e0:	rex.R ins BYTE PTR es:[rdi],dx
   1400090e2:	add    BYTE PTR [rax],al
   1400090e4:	xor    BYTE PTR [rsi],dh
   1400090e6:	add    BYTE PTR [rax],al
   1400090e8:	jnp    0x140009124
   1400090ea:	add    BYTE PTR [rax],al
   1400090ec:	(bad)  
   1400090ed:	ins    BYTE PTR es:[rdi],dx
   1400090ee:	add    BYTE PTR [rax],al
   1400090f0:	lods   al,BYTE PTR ds:[rsi]
   1400090f1:	cmp    al,BYTE PTR [rax]
   1400090f3:	add    BYTE PTR [rsi+0x3c],dh
   1400090f6:	add    BYTE PTR [rax],al
   1400090f8:	sub    BYTE PTR [rax+rax*1+0x0],0x7c
   1400090fd:	cmp    al,0x0
   1400090ff:	add    dl,cl
   140009101:	add    BYTE PTR ds:[rax],al
   140009104:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009105:	ins    BYTE PTR es:[rdi],dx
   140009106:	add    BYTE PTR [rax],al
   140009108:	sar    BYTE PTR [rsi],1
   14000910a:	add    BYTE PTR [rax],al
   14000910c:	mov    eax,DWORD PTR [rbx+0x0]
   14000910f:	add    al,cl
   140009111:	ins    BYTE PTR es:[rdi],dx
   140009112:	add    BYTE PTR [rax],al
   140009114:	xchg   esp,eax
   140009115:	rex.XB add BYTE PTR [r8],al
   140009118:	cmp    al,BYTE PTR [rax+rax*1+0x0]
   14000911c:	loopne 0x14000918a
   14000911e:	add    BYTE PTR [rax],al
   140009120:	rex
   140009121:	add    BYTE PTR [rax],r8b
   140009124:	in     al,0x48
   140009126:	add    BYTE PTR [rax],al
   140009128:	in     al,dx
   140009129:	ins    BYTE PTR es:[rdi],dx
   14000912a:	add    BYTE PTR [rax],al
   14000912c:	lock rex.W add BYTE PTR [rax],al
   140009130:	mov    edi,0xbc000049
   140009135:	ins    DWORD PTR es:[rdi],dx
   140009136:	add    BYTE PTR [rax],al
   140009138:	ror    BYTE PTR [rcx+0x0],1
   14000913b:	add    BYTE PTR [rcx],bl
   14000913d:	rex.WX add BYTE PTR [rax],al
   140009140:	xor    al,0x6b
   140009142:	add    BYTE PTR [rax],al
   140009144:	and    BYTE PTR [rdx+0x0],cl
   140009147:	add    BYTE PTR [rdx],dh
   140009149:	rex.WX add BYTE PTR [rax],al
   14000914c:	mov    esp,0x3800006d
   140009151:	rex.WX add BYTE PTR [rax],al
   140009154:	mov    cs,WORD PTR [rax+rax*1+0x0]
   140009158:	adc    al,0x6d
   14000915a:	add    BYTE PTR [rax],al
   14000915c:	movabs al,ds:0x4800004cbe00004c
   140009165:	ins    DWORD PTR es:[rdi],dx
   140009166:	add    BYTE PTR [rax],al
   140009168:	(bad)  
   140009169:	rex.WR add BYTE PTR [rax],r8b
   14000916c:	clc    
   14000916d:	rex.WR add BYTE PTR [rax],r8b
   140009170:	mov    ah,0x6d
   140009172:	add    BYTE PTR [rax],al
   140009174:	add    BYTE PTR [rbp+0x0],cl
   140009177:	add    BYTE PTR [rcx+0x4e],dh
   14000917a:	add    BYTE PTR [rax],al
   14000917c:	rex.WR ins DWORD PTR es:[rdi],dx
   14000917e:	add    BYTE PTR [rax],al
   140009180:	or     BYTE PTR [rsi+0x0],0x0
   140009184:	mov    ecx,0xbc00004e
   140009189:	ins    DWORD PTR es:[rdi],dx
   14000918a:	add    BYTE PTR [rax],al
   14000918c:	ror    BYTE PTR [rsi+0x0],0x0
   140009190:	fmul   DWORD PTR [rsi+0x0]
   140009193:	add    BYTE PTR [rbp+rbp*2+0x4eec0000],bh
   14000919a:	add    BYTE PTR [rax],al
   14000919c:	rex
   14000919d:	rex.WRXB add BYTE PTR [r8],r8b
   1400091a0:	push   rsp
   1400091a1:	ins    DWORD PTR es:[rdi],dx
   1400091a2:	add    BYTE PTR [rax],al
   1400091a4:	rex.W
   1400091a5:	rex.WRXB add BYTE PTR [r8],r8b
   1400091a8:	lea    ecx,[rdi+0x0]
   1400091ab:	add    BYTE PTR [rbp+rbp*2+0x50000000],dh
   1400091b2:	add    BYTE PTR [rax],al
   1400091b4:	rex.WRB push r8
   1400091b6:	add    BYTE PTR [rax],al
   1400091b8:	je     0x140009227
   1400091ba:	add    BYTE PTR [rax],al
   1400091bc:	xchg   esp,eax
   1400091bd:	push   rax
   1400091be:	add    BYTE PTR [rax],al
   1400091c0:	fs push rcx
   1400091c2:	add    BYTE PTR [rax],al
   1400091c4:	movabs al,ds:0xc5000051a800006d
   1400091cd:	push   rcx
   1400091ce:	add    BYTE PTR [rax],al
   1400091d0:	mov    esp,0xcc00006d
   1400091d5:	push   rcx
   1400091d6:	add    BYTE PTR [rax],al
   1400091d8:	(bad)  
   1400091d9:	push   rdx
   1400091da:	add    BYTE PTR [rax],al
   1400091dc:	mov    ah,0x6d
   1400091de:	add    BYTE PTR [rax],al
   1400091e0:	push   rax
   1400091e1:	push   rdx
   1400091e2:	add    BYTE PTR [rax],al
   1400091e4:	push   rdx
   1400091e5:	push   rdx
   1400091e6:	add    BYTE PTR [rax],al
   1400091e8:	mov    al,0x6d
   1400091ea:	add    BYTE PTR [rax],al
   1400091ec:	push   dx
   1400091ee:	add    BYTE PTR [rax],al
   1400091f0:	test   BYTE PTR [rdx+0x0],dl
   1400091f3:	add    BYTE PTR [rax-0x6fffff93],bl
   1400091f9:	push   rdx
   1400091fa:	add    BYTE PTR [rax],al
   1400091fc:	mov    al,0x52
   1400091fe:	add    BYTE PTR [rax],al
   140009200:	cwde   
   140009201:	ins    DWORD PTR es:[rdi],dx
	...

Disassembly of section .rsrc:

000000014000a000 <.rsrc>:
	...
   14000a00c:	add    DWORD PTR [rax],eax
   14000a00e:	add    al,0x0
   14000a010:	enter  0x2,0x80
   14000a014:	cmp    BYTE PTR [rax],al
   14000a016:	add    BYTE PTR [rax+0x3],al
   14000a01c:	push   rax
   14000a01d:	add    BYTE PTR [rax],al
   14000a01f:	or     BYTE PTR [rsi],0x0
   14000a022:	add    BYTE PTR [rax],al
   14000a024:	nop
   14000a025:	add    BYTE PTR [rax],al
   14000a027:	adc    BYTE PTR [rax],0x0
   14000a02a:	add    BYTE PTR [rax],al
   14000a02c:	mov    eax,0x18800000
   14000a031:	add    BYTE PTR [rax],al
   14000a033:	add    al,dl
   14000a035:	add    BYTE PTR [rax],al
   14000a037:	add    BYTE PTR [rax],0x0
	...
   14000a046:	add    DWORD PTR [rax],eax
   14000a048:	add    DWORD PTR [rax],eax
   14000a04a:	add    BYTE PTR [rax],al
   14000a04c:	call   0x14080a051
	...
   14000a05d:	add    BYTE PTR [rsi],al
   14000a05f:	add    BYTE PTR [rcx],al
   14000a061:	add    BYTE PTR [rax],al
   14000a063:	add    BYTE PTR [rax],al
   14000a065:	add    DWORD PTR [rax],eax
   14000a067:	add    BYTE PTR [rdx],0x0
   14000a06a:	add    BYTE PTR [rax],al
   14000a06c:	sbb    BYTE PTR [rcx],al
   14000a06e:	add    BYTE PTR [rax+0x3],al
   14000a074:	xor    BYTE PTR [rcx],al
   14000a076:	add    BYTE PTR [rax+0x4],al
   14000a07c:	add    QWORD PTR [rax],rax
   14000a07f:	add    BYTE PTR [rip+0x60000000],0x1        # 0x1a000a086
   14000a086:	add    BYTE PTR [rax+0x6],al
   14000a08c:	js     0x14000a08f
   14000a08e:	add    BYTE PTR [rax+0x0],al
	...
   14000a09c:	add    BYTE PTR [rax],al
   14000a09e:	add    eax,DWORD PTR [rax]
   14000a0a0:	add    DWORD PTR [rax],eax
   14000a0a2:	add    BYTE PTR [rax],al
   14000a0a4:	nop
   14000a0a5:	add    DWORD PTR [rax],eax
   14000a0a7:	add    BYTE PTR [rdx],0x0
   14000a0aa:	add    BYTE PTR [rax],al
   14000a0ac:	test   al,0x1
   14000a0ae:	add    BYTE PTR [rax+0x3],al
   14000a0b4:	rol    BYTE PTR [rcx],0x0
   14000a0b7:	add    BYTE PTR [rax],0x0
	...
   14000a0c6:	add    DWORD PTR [rax],eax
   14000a0c8:	add    DWORD PTR [rax],eax
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	fadd   DWORD PTR [rcx]
   14000a0ce:	add    BYTE PTR [rax+0x0],al
	...
   14000a0dc:	add    BYTE PTR [rax],al
   14000a0de:	add    DWORD PTR [rax],eax
   14000a0e0:	add    DWORD PTR [rax],eax
   14000a0e2:	add    BYTE PTR [rax],al
   14000a0e4:	lock add DWORD PTR [rax],eax
   14000a0e7:	add    BYTE PTR [rax],0x0
	...
   14000a0f6:	add    DWORD PTR [rax],eax
   14000a0f8:	or     DWORD PTR [rax+rax*1],eax
   14000a0fb:	add    BYTE PTR [rax],cl
   14000a0fd:	add    al,BYTE PTR [rax]
	...
   14000a10b:	add    BYTE PTR [rax],al
   14000a10d:	add    BYTE PTR [rcx],al
   14000a10f:	add    BYTE PTR [rcx],cl
   14000a111:	add    al,0x0
   14000a113:	add    BYTE PTR [rax],bl
   14000a115:	add    al,BYTE PTR [rax]
	...
   14000a123:	add    BYTE PTR [rax],al
   14000a125:	add    BYTE PTR [rcx],al
   14000a127:	add    BYTE PTR [rcx],cl
   14000a129:	add    al,0x0
   14000a12b:	add    BYTE PTR [rax],ch
   14000a12d:	add    al,BYTE PTR [rax]
	...
   14000a13b:	add    BYTE PTR [rax],al
   14000a13d:	add    BYTE PTR [rcx],al
   14000a13f:	add    BYTE PTR [rcx],cl
   14000a141:	add    al,0x0
   14000a143:	add    BYTE PTR [rax],bh
   14000a145:	add    al,BYTE PTR [rax]
	...
   14000a153:	add    BYTE PTR [rax],al
   14000a155:	add    BYTE PTR [rcx],al
   14000a157:	add    BYTE PTR [rcx],cl
   14000a159:	add    al,0x0
   14000a15b:	add    BYTE PTR [rax+0x2],cl
	...
   14000a16e:	add    DWORD PTR [rax],eax
   14000a170:	or     DWORD PTR [rax+rax*1],eax
   14000a173:	add    BYTE PTR [rax+0x2],bl
	...
   14000a186:	add    DWORD PTR [rax],eax
   14000a188:	or     DWORD PTR [rax+rax*1],eax
   14000a18b:	add    BYTE PTR [rax+0x2],ch
	...
   14000a19e:	add    DWORD PTR [rax],eax
   14000a1a0:	or     DWORD PTR [rax+rax*1],eax
   14000a1a3:	add    BYTE PTR [rax+0x2],bh
	...
   14000a1b6:	add    DWORD PTR [rax],eax
   14000a1b8:	or     DWORD PTR [rax+rax*1],eax
   14000a1bb:	add    BYTE PTR [rax+0x2],cl
	...
   14000a1cd:	add    BYTE PTR [rcx],al
   14000a1cf:	add    BYTE PTR [rcx],cl
   14000a1d1:	add    al,0x0
   14000a1d3:	add    BYTE PTR [rax+0x2],bl
	...
   14000a1e5:	add    BYTE PTR [rcx],al
   14000a1e7:	add    BYTE PTR [rcx],cl
   14000a1e9:	add    al,0x0
   14000a1eb:	add    BYTE PTR [rax+0x2],ch
	...
   14000a1fd:	add    BYTE PTR [rcx],al
   14000a1ff:	add    BYTE PTR [rcx],cl
   14000a201:	add    al,0x0
   14000a203:	add    BYTE PTR [rax-0x5ffffffe],bh
   14000a209:	mov    ch,0x0
   14000a20b:	add    al,bl
	...
   14000a215:	add    BYTE PTR [rax],al
   14000a217:	add    BYTE PTR [rax-0x17ffff5b],al
   14000a21d:	add    al,BYTE PTR [rax]
	...
   14000a227:	add    BYTE PTR [rax-0x58],ch
   14000a22a:	add    BYTE PTR [rax],al
   14000a22c:	sub    BYTE PTR [rcx],al
	...
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	mov    eax,0xe80000a9
   14000a23d:	add    al,BYTE PTR [rax]
	...
   14000a247:	add    BYTE PTR [rax+0x280000ac],ah
   14000a24d:	add    DWORD PTR [rax],eax
	...
   14000a257:	add    al,dh
   14000a259:	lods   eax,DWORD PTR ds:[rsi]
   14000a25a:	add    BYTE PTR [rax],al
   14000a25c:	call   0x14000a263
   14000a261:	add    BYTE PTR [rax],al
   14000a263:	add    BYTE PTR [rax],al
   14000a265:	add    BYTE PTR [rax],al
   14000a267:	add    al,bl
   14000a269:	mov    al,0x0
   14000a26b:	add    BYTE PTR [rax],ch
   14000a26d:	add    DWORD PTR [rax],eax
	...
   14000a277:	add    BYTE PTR [rax+0x220000a9],dl
	...
   14000a285:	add    BYTE PTR [rax],al
   14000a287:	add    al,cl
   14000a289:	lods   eax,DWORD PTR ds:[rsi]
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	and    al,BYTE PTR [rax]
	...
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	add    BYTE PTR [rdx+0x220000],dh
	...
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	sub    BYTE PTR [rdx+0x3780000],dh
	...
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	shl    BYTE PTR [rdx+0x2ab0000],1
	...
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	add    eax,DWORD PTR [rax]
   14000a2ca:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000a2ce:	rex.WB add BYTE PTR [r15+rdi*1],dil
   14000a2d2:	js     0x14000a341
   14000a2d4:	ins    BYTE PTR es:[rdi],dx
   14000a2d5:	and    BYTE PTR [rsi+0x65],dh
   14000a2d8:	jb     0x14000a34d
   14000a2da:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000a2e1:	xor    BYTE PTR [rdx],ah
   14000a2e3:	and    BYTE PTR [rbp+0x6e],ah
   14000a2e6:	movsxd ebp,DWORD PTR [rdi+0x64]
   14000a2e9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14000a2f0:	rex.RX sub eax,0x73202238
   14000a2f6:	je     0x14000a359
   14000a2f8:	outs   dx,BYTE PTR ds:[rsi]
   14000a2f9:	fs (bad) 
   14000a2fb:	ins    BYTE PTR es:[rdi],dx
   14000a2fc:	outs   dx,DWORD PTR ds:[rsi]
   14000a2fd:	outs   dx,BYTE PTR ds:[rsi]
   14000a2fe:	gs cmp eax,0x73657922
   14000a304:	and    bh,BYTE PTR [rdi]
   14000a306:	ds or  eax,0x2d213c0a
   14000a30c:	sub    eax,0x706f4320
   14000a311:	jns    0x14000a385
   14000a313:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000a31a:	sub    DWORD PTR [rax],esp
   14000a31c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   14000a324:	je     0x14000a346
   14000a326:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000a328:	jb     0x14000a39a
   14000a32a:	outs   dx,DWORD PTR ds:[rsi]
   14000a32b:	jb     0x14000a38e
   14000a32d:	je     0x14000a398
   14000a32f:	outs   dx,DWORD PTR ds:[rsi]
   14000a330:	outs   dx,BYTE PTR ds:[rsi]
   14000a331:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0de164
   14000a337:	cmp    al,0x61
   14000a339:	jae    0x14000a3ae
   14000a33b:	gs ins DWORD PTR es:[rdi],dx
   14000a33d:	(bad)  
   14000a33e:	ins    BYTE PTR es:[rdi],dx
   14000a33f:	jns    0x14000a361
   14000a341:	js     0x14000a3b0
   14000a343:	ins    BYTE PTR es:[rdi],dx
   14000a344:	outs   dx,BYTE PTR ds:[rsi]
   14000a345:	jae    0x14000a384
   14000a347:	and    dh,BYTE PTR [rbp+0x72]
   14000a34a:	outs   dx,BYTE PTR ds:[rsi]
   14000a34b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000a34e:	push   0x73616d65
   14000a353:	sub    eax,0x7263696d
   14000a358:	outs   dx,DWORD PTR ds:[rsi]
   14000a359:	jae    0x14000a3ca
   14000a35b:	data16 je 0x14000a38b
   14000a35e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a361:	cmp    ah,BYTE PTR [rcx+0x73]
   14000a364:	ins    DWORD PTR es:[rdi],dx
   14000a365:	cs jbe 0x14000a399
   14000a368:	and    ah,BYTE PTR [rax]
   14000a36a:	ins    DWORD PTR es:[rdi],dx
   14000a36b:	(bad)  
   14000a36c:	outs   dx,BYTE PTR ds:[rsi]
   14000a36d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14000a374:	jb     0x14000a3e9
   14000a376:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000a37d:	xor    BYTE PTR [rdx],ah
   14000a37f:	ds or  eax,0x73613c0a
   14000a385:	jae    0x14000a3ec
   14000a387:	ins    DWORD PTR es:[rdi],dx
   14000a388:	(bad)  
   14000a389:	ins    BYTE PTR es:[rdi],dx
   14000a38a:	jns    0x14000a3d5
   14000a38c:	fs outs dx,BYTE PTR gs:[rsi]
   14000a38f:	je     0x14000a3fa
   14000a391:	je     0x14000a40c
   14000a393:	or     eax,0x2020200a
   14000a398:	and    BYTE PTR [rsi+0x65],dh
   14000a39b:	jb     0x14000a410
   14000a39d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   14000a3a4:	xor    DWORD PTR [rsi],ebp
   14000a3a6:	xor    BYTE PTR [rsi],ch
   14000a3a8:	xor    BYTE PTR [rdx],ah
   14000a3aa:	or     eax,0x2020200a
   14000a3af:	and    BYTE PTR [rax+0x72],dh
   14000a3b2:	outs   dx,DWORD PTR ds:[rsi]
   14000a3b3:	movsxd esp,DWORD PTR [rbp+0x73]
   14000a3b6:	jae    0x14000a427
   14000a3b8:	jb     0x14000a3fb
   14000a3ba:	jb     0x14000a41f
   14000a3bc:	push   0x63657469
   14000a3c1:	je     0x14000a438
   14000a3c3:	jb     0x14000a42a
   14000a3c5:	cmp    eax,0x646d6122
   14000a3ca:	ss xor al,0x22
   14000a3cd:	or     eax,0x2020200a
   14000a3d2:	and    BYTE PTR [rsi+0x61],ch
   14000a3d5:	ins    DWORD PTR es:[rdi],dx
   14000a3d6:	gs cmp eax,0x63694d22
   14000a3dc:	jb     0x14000a44d
   14000a3de:	jae    0x14000a44f
   14000a3e0:	data16 je 0x14000a411
   14000a3e3:	push   rdi
   14000a3e4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000a3eb:	push   rax
   14000a3ec:	jb     0x14000a45d
   14000a3ee:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x7250
   14000a3f5:	outs   dx,DWORD PTR ds:[rsi]
   14000a3f6:	push   rcx
   14000a3f7:	jne    0x14000a468
   14000a3f9:	je     0x14000a45c
   14000a3fb:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020c40b
   14000a401:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   14000a405:	gs cmp eax,0x6e697722
   14000a40b:	xor    esi,DWORD PTR [rdx]
   14000a40d:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3ed31d
   14000a413:	or     bh,BYTE PTR [rsp+riz*2]
   14000a416:	gs jae 0x14000a47c
   14000a419:	jb     0x14000a484
   14000a41b:	jo     0x14000a491
   14000a41d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f72503e
   14000a424:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7571
   14000a42b:	outs   dx,DWORD PTR ds:[rsi]
   14000a42c:	je     0x14000a48f
   14000a42e:	and    BYTE PTR [rbp+0x61],ch
   14000a431:	outs   dx,BYTE PTR ds:[rsi]
   14000a432:	(bad)  
   14000a433:	gs ins DWORD PTR es:[edi],dx
   14000a436:	outs   dx,BYTE PTR gs:[rsi]
   14000a438:	je     0x14000a476
   14000a43a:	(bad)  
   14000a43b:	fs gs jae 0x14000a4a2
   14000a43f:	jb     0x14000a4aa
   14000a441:	jo     0x14000a4b7
   14000a443:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   14000a44a:	or     bh,BYTE PTR [rsp+rsi*2]
   14000a44d:	jb     0x14000a4c4
   14000a44f:	jae    0x14000a4c5
   14000a451:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000a453:	outs   dx,WORD PTR ds:[rsi]
   14000a455:	and    BYTE PTR [rax+0x6d],bh
   14000a458:	ins    BYTE PTR es:[rdi],dx
   14000a459:	outs   dx,BYTE PTR ds:[rsi]
   14000a45a:	jae    0x14000a499
   14000a45c:	and    dh,BYTE PTR [rbp+0x72]
   14000a45f:	outs   dx,BYTE PTR ds:[rsi]
   14000a460:	cmp    dh,BYTE PTR [rbx+0x63]
   14000a463:	push   0x73616d65
   14000a468:	sub    eax,0x7263696d
   14000a46d:	outs   dx,DWORD PTR ds:[rsi]
   14000a46e:	jae    0x14000a4df
   14000a470:	data16 je 0x14000a4a0
   14000a473:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000a476:	cmp    ah,BYTE PTR [rcx+0x73]
   14000a479:	ins    DWORD PTR es:[rdi],dx
   14000a47a:	cs jbe 0x14000a4b0
   14000a47d:	and    bh,BYTE PTR [rsi]
   14000a47f:	or     eax,0x2020200a
   14000a484:	and    BYTE PTR [rbx+rsi*2],bh
   14000a487:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000a48b:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14000a493:	and    BYTE PTR [rax],ah
   14000a495:	and    BYTE PTR [rax],ah
   14000a497:	and    BYTE PTR [rax],ah
   14000a499:	cmp    al,0x72
   14000a49b:	gs jno 0x14000a513
   14000a49e:	gs jae 0x14000a515
   14000a4a1:	gs fs push rax
   14000a4a4:	jb     0x14000a50f
   14000a4a6:	jbe    0x14000a511
   14000a4a8:	ins    BYTE PTR es:[rdi],dx
   14000a4a9:	gs addr32 gs jae 0x14000a4ec
   14000a4ae:	or     eax,0x2020200a
   14000a4b3:	and    BYTE PTR [rax],ah
   14000a4b5:	and    BYTE PTR [rax],ah
   14000a4b7:	and    BYTE PTR [rax],ah
   14000a4b9:	and    BYTE PTR [rax],ah
   14000a4bb:	and    BYTE PTR [rdx+rsi*2],bh
   14000a4be:	gs jno 0x14000a536
   14000a4c1:	gs jae 0x14000a538
   14000a4c4:	gs fs rex.RB js 0x14000a52e
   14000a4c9:	movsxd esi,DWORD PTR [rbp+0x74]
   14000a4cc:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14000a4d3:	ins    BYTE PTR es:[rdi],dx
   14000a4d4:	or     eax,0x2020200a
   14000a4d9:	and    BYTE PTR [rax],ah
   14000a4db:	and    BYTE PTR [rax],ah
   14000a4dd:	and    BYTE PTR [rax],ah
   14000a4df:	and    BYTE PTR [rax],ah
   14000a4e1:	and    BYTE PTR [rax],ah
   14000a4e3:	and    BYTE PTR [rax],ah
   14000a4e5:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000a4e9:	gs ins BYTE PTR es:[rdi],dx
   14000a4eb:	cmp    eax,0x49736122
   14000a4f0:	outs   dx,BYTE PTR ds:[rsi]
   14000a4f1:	jbe    0x14000a562
   14000a4f3:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14000a4f7:	or     eax,0x2020200a
   14000a4fc:	and    BYTE PTR [rax],ah
   14000a4fe:	and    BYTE PTR [rax],ah
   14000a500:	and    BYTE PTR [rax],ah
   14000a502:	and    BYTE PTR [rax],ah
   14000a504:	and    BYTE PTR [rax],ah
   14000a506:	and    BYTE PTR [rax],ah
   14000a508:	and    BYTE PTR [rbp+0x69],dh
   14000a50b:	movsxd esp,DWORD PTR [r11+0x65]
   14000a50f:	jae    0x14000a584
   14000a511:	cmp    eax,0x6c616622
   14000a516:	jae    0x14000a57d
   14000a518:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16020c528
   14000a51e:	and    BYTE PTR [rax],ah
   14000a520:	and    BYTE PTR [rax],ah
   14000a522:	and    BYTE PTR [rax],ah
   14000a524:	and    BYTE PTR [rax],ah
   14000a526:	and    BYTE PTR [rdi],ch
   14000a528:	ds or  eax,0x2020200a
   14000a52e:	and    BYTE PTR [rax],ah
   14000a530:	and    BYTE PTR [rax],ah
   14000a532:	and    BYTE PTR [rdi+rbp*1],bh
   14000a535:	jb     0x14000a59c
   14000a537:	jno    0x14000a5ae
   14000a539:	gs jae 0x14000a5b0
   14000a53c:	gs fs push rax
   14000a53f:	jb     0x14000a5aa
   14000a541:	jbe    0x14000a5ac
   14000a543:	ins    BYTE PTR es:[rdi],dx
   14000a544:	gs addr32 gs jae 0x14000a587
   14000a549:	or     eax,0x2020200a
   14000a54e:	and    BYTE PTR [rdi+rbp*1],bh
   14000a551:	jae    0x14000a5b8
   14000a553:	movsxd esi,DWORD PTR [rbp+0x72]
   14000a556:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14000a55e:	je     0x14000a5d2
   14000a560:	jne    0x14000a5d5
   14000a562:	je     0x14000a5ad
   14000a564:	outs   dx,BYTE PTR ds:[rsi]
   14000a565:	outs   dx,WORD PTR ds:[rsi]
   14000a567:	ds or  eax,0x3c0a0d0a
   14000a56d:	(bad)  
   14000a56e:	(bad)  
   14000a56f:	jae    0x14000a5e4
   14000a571:	gs ins DWORD PTR es:[rdi],dx
   14000a573:	(bad)  
   14000a574:	ins    BYTE PTR es:[rdi],dx
   14000a575:	jns    0x14000a5b5
   14000a577:	or     eax,0xa0d0a
   14000a57c:	add    BYTE PTR [rax],al
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	sub    BYTE PTR [rax],al
   14000a582:	add    BYTE PTR [rax],al
   14000a584:	and    BYTE PTR [rax],al
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	add    BYTE PTR [rax],al
   14000a58b:	add    BYTE PTR [rcx],al
   14000a58d:	add    BYTE PTR [rax+rax*1],al
   14000a590:	add    BYTE PTR [rax],al
   14000a592:	add    BYTE PTR [rax],al
   14000a594:	add    BYTE PTR [rdx],0x0
	...
   14000a5ab:	add    BYTE PTR [rax],al
   14000a5ad:	add    BYTE PTR [rax+0x800000],al
   14000a5b3:	add    BYTE PTR [rax],al
   14000a5b5:	add    BYTE PTR [rax+0x8000],0x0
   14000a5bc:	add    BYTE PTR [rax],0x80
   14000a5bf:	add    BYTE PTR [rax-0x3fffff80],al
   14000a5c5:	rol    al,0x0
   14000a5c8:	add    BYTE PTR [rax+0x80],0xff
   14000a5cf:	add    BYTE PTR [rax],al
   14000a5d1:	inc    DWORD PTR [rax]
   14000a5d3:	add    BYTE PTR [rax],al
   14000a5d5:	(bad)  
   14000a5d6:	inc    DWORD PTR [rax]
   14000a5d8:	inc    DWORD PTR [rax]
   14000a5da:	add    BYTE PTR [rax],al
   14000a5dc:	inc    DWORD PTR [rax]
   14000a5de:	inc    DWORD PTR [rax]
   14000a5e0:	(bad)  
   14000a5e1:	inc    DWORD PTR [rax]
   14000a5e3:	add    bh,bh
   14000a5e5:	(bad)  
   14000a5e6:	inc    DWORD PTR [rax]
   14000a5e8:	or     DWORD PTR [rax-0x66ff6ff7],edx
   14000a5ee:	nop
	...
   14000a5f7:	add    BYTE PTR [rax],al
   14000a5f9:	nop
   14000a5fa:	nop
   14000a5fb:	or     DWORD PTR [rcx+0x9009],ebx
	...
   14000a609:	add    BYTE PTR [rdi],cl
   14000a60b:	jo     0x14000a616
   14000a60d:	nop
   14000a60e:	ud0    edi,edi
   14000a611:	push   QWORD PTR [rdi-0x78]
   14000a614:	add    BYTE PTR [rax],al
   14000a616:	add    BYTE PTR [rax],al
   14000a618:	add    BYTE PTR [rax],al
   14000a61a:	(bad)  
   14000a61b:	div    DWORD PTR [rax+0x0]
   14000a61e:	ja     0x14000a697
   14000a620:	ja     0x14000a699
   14000a622:	ja     0x14000a624
   14000a624:	or     BYTE PTR [rax],al
   14000a626:	add    BYTE PTR [rax],al
   14000a628:	add    BYTE PTR [rax],al
   14000a62a:	add    BYTE PTR [rdi],cl
   14000a62c:	jg     0x14000a635
   14000a62e:	ja     0x14000a6a7
   14000a630:	ja     0x14000a6a9
   14000a632:	ja     0x14000a5cd
   14000a634:	nop
   14000a635:	add    BYTE PTR [rax],al
   14000a637:	add    BYTE PTR [rax],al
   14000a639:	(bad)  
   14000a63a:	div    edi
   14000a63c:	test   DWORD PTR [rax],0x77377777
   14000a642:	jno    0x14000a6bd
   14000a644:	nop
   14000a645:	add    BYTE PTR [rax],al
   14000a647:	add    BYTE PTR [rax],al
   14000a649:	add    BYTE PTR [rdi-0x78ff8f81],cl
   14000a64f:	jae    0x14000a681
   14000a651:	ja     0x14000a5d4
   14000a653:	jns    0x14000a5e5
   14000a655:	add    BYTE PTR [rax],al
   14000a657:	add    BYTE PTR [rax],al
   14000a659:	(bad)  
   14000a65a:	div    edi
   14000a65c:	lock add BYTE PTR [rax],cl
   14000a65f:	cmp    esi,DWORD PTR [rbx-0x6f86fef8]
   14000a665:	add    BYTE PTR [rax],al
   14000a667:	add    BYTE PTR [rax],al
   14000a669:	jg     0x14000a6ea
   14000a66b:	jg     0x14000a6ec
   14000a66d:	add    BYTE PTR [rax],al
   14000a66f:	mov    ebx,0x790130b0
   14000a674:	nop
   14000a675:	add    BYTE PTR [rax],al
   14000a677:	add    BYTE PTR [rax],cl
   14000a679:	(bad)  
   14000a67a:	div    edi
   14000a67c:	test   DWORD PTR [rax],0xb3bb3b00
   14000a682:	add    DWORD PTR [rcx-0x70],edi
   14000a685:	mov    BYTE PTR [rax],al
   14000a687:	add    BYTE PTR [rax],al
   14000a689:	xchg   edi,ecx
   14000a68b:	jo     0x14000a68d
   14000a68d:	add    BYTE PTR [rax],al
   14000a68f:	and    edi,DWORD PTR [rbx-0x6f86cf50]
   14000a695:	test   DWORD PTR [rax+0x7880000],0xf7
   14000a69f:	sub    al,0x3b
   14000a6a1:	cmp    esi,DWORD PTR [rbx-0x77086ff7]
   14000a6a7:	add    BYTE PTR [rax],al
   14000a6a9:	(bad)  
   14000a6aa:	jg     0x14000a72b
   14000a6ac:	add    BYTE PTR [rax],al
   14000a6ae:	add    BYTE PTR [rbx+rax*8],ch
   14000a6b1:	mov    ebx,0xf79030b0
   14000a6b6:	mov    BYTE PTR [rax-0xf090000],al
   14000a6bc:	add    BYTE PTR [rax],al
   14000a6be:	add    BYTE PTR [rsp+rcx*8],ch
   14000a6c1:	cmp    edi,DWORD PTR [rbx-0x7708ff4d]
   14000a6c7:	add    BYTE PTR [rax],0x0
   14000a6ca:	add    BYTE PTR [rax],al
   14000a6cc:	add    BYTE PTR [rax],al
   14000a6ce:	add    BYTE PTR [rsp+rcx*8],ch
   14000a6d1:	ret    
   14000a6d2:	mov    ebx,0x88f730b0
   14000a6d7:	add    BYTE PTR [rax],0x0
   14000a6da:	add    BYTE PTR [rax],al
   14000a6dc:	add    BYTE PTR [rax],al
   14000a6de:	add    cl,ah
   14000a6e0:	int3   
   14000a6e1:	int3   
   14000a6e2:	cmp    edi,DWORD PTR [rbx]
   14000a6e4:	mov    bl,0x7
   14000a6e6:	mov    BYTE PTR [rax+0xf00800],al
   14000a6ec:	add    BYTE PTR [rax],al
   14000a6ee:	sub    al,0xcc
   14000a6f0:	int3   
   14000a6f1:	int3   
   14000a6f2:	ret    
   14000a6f3:	mov    ebx,0x808830b0
   14000a6f8:	add    BYTE PTR [rax],cl
   14000a6fa:	test   DWORD PTR [rsp+rcx*8],0xcccccccc
   14000a701:	int3   
   14000a702:	sar    DWORD PTR [rbx],0xbb
   14000a705:	mov    bl,0x8
   14000a707:	add    BYTE PTR [rax],0x8
   14000a70a:	test   DWORD PTR [rsp+rcx*8-0x34],0xcccccccc
   14000a712:	shl    ebx,0xbb
   14000a715:	mov    al,0x30
   14000a717:	add    BYTE PTR [rax],0x8
   14000a71a:	test   DWORD PTR [rsi+rbx*4],0xcccccccc
   14000a721:	int3   
   14000a722:	sar    ecx,0x3b
   14000a725:	cmp    esi,DWORD PTR [rbx-0x8f80000]
   14000a72b:	rex.WR jmp 0x10ccd73fd
   14000a731:	int3   
   14000a732:	sar    ecx,0x93
   14000a735:	mov    ebx,0x8008030
   14000a73a:	test   DWORD PTR [rsp+rcx*8],0xcccccccc
   14000a741:	int3   
   14000a742:	sar    DWORD PTR [rcx-0x70],0x3b
   14000a746:	or     BYTE PTR [rax+0x4cf70800],al
   14000a74c:	int3   
   14000a74d:	int3   
   14000a74e:	int3   
   14000a74f:	int3   
   14000a750:	int3   
   14000a751:	int3   
   14000a752:	rcl    DWORD PTR [rcx],0x10
   14000a755:	xrelease mov BYTE PTR [rax+0xcf70800],al
   14000a75c:	fcmove st,st(4)
   14000a75e:	int3   
   14000a75f:	int3   
   14000a760:	int3   
   14000a761:	int3   
   14000a762:	shl    ebp,0x50
   14000a765:	test   DWORD PTR [rax-0x8f7ff80],0xccccad4c
   14000a76f:	int3   
   14000a770:	int3   
   14000a771:	int3   
   14000a772:	int3   
   14000a773:	add    BYTE PTR [rdi+rsi*8],al
   14000a776:	mov    BYTE PTR [rax+0xcf70800],al
   14000a77c:	int3   
   14000a77d:	int3   
   14000a77e:	int3   
   14000a77f:	int3   
   14000a780:	int3   
   14000a781:	int3   
   14000a782:	ret    
   14000a783:	cmp    BYTE PTR [rax],dh
   14000a785:	test   DWORD PTR [rax-0x8f7ff80],0x0
   14000a78f:	add    BYTE PTR [rax],al
   14000a791:	add    BYTE PTR [rdx],cl
   14000a793:	mov    bl,0x80
   14000a795:	test   DWORD PTR [rax-0x8f7ff80],0x88888888
   14000a79f:	mov    BYTE PTR [rax+0x30a88a88],cl
   14000a7a5:	test   DWORD PTR [rax-0xf7ff80],0xffffffff
   14000a7af:	(bad)  
   14000a7b0:	(bad)  
   14000a7b1:	(bad)  
   14000a7b2:	cli    
   14000a7b3:	stos   DWORD PTR es:[rdi],eax
   14000a7b4:	maskmovq mm1,(bad)
   14000a7b5:	test   DWORD PTR [rax-0x78ffff80],0x77777777
   14000a7bf:	ja     0x14000a838
   14000a7c1:	ja     0x14000a83a
   14000a7c3:	stos   BYTE PTR es:[rdi],al
   14000a7c4:	(bad)  
   14000a7c5:	ja     0x14000a7bf
   14000a7c7:	add    BYTE PTR [rax],0x0
   14000a7ca:	or     BYTE PTR [rdi+0x77],dh
   14000a7cd:	ja     0x14000a846
   14000a7cf:	ja     0x14000a848
   14000a7d1:	ja     0x14000a84a
   14000a7d3:	jp     0x14000a84c
   14000a7d5:	ja     0x14000a856
   14000a7d7:	add    BYTE PTR [rax],0x0
   14000a7da:	add    BYTE PTR [rax-0x77777778],cl
   14000a7e0:	mov    BYTE PTR [rax-0x77777578],cl
   14000a7e6:	mov    BYTE PTR [rdi-0xfd00],cl
   14000a7ec:	add    BYTE PTR [rax],0x0
   14000a7ef:	inc    eax
   14000a7f1:	add    BYTE PTR [rax],al
   14000a7f3:	(bad)  
   14000a7f4:	lock add BYTE PTR [rax],al
   14000a7f7:	(bad)  
   14000a7f8:	loopne 0x14000a7fa
   14000a7fa:	add    BYTE PTR [rdi],bl
   14000a7fc:	rol    BYTE PTR [rax],0x0
   14000a7ff:	(bad)  
   14000a800:	rol    BYTE PTR [rax],0x0
   14000a803:	(bad)  
   14000a804:	rol    BYTE PTR [rax],0x0
   14000a807:	(bad)  
   14000a808:	add    BYTE PTR [rax],0x0
   14000a80b:	jo     0x10007a811
   14000a811:	add    BYTE PTR [rax],al
   14000a813:	add    eax,eax
   14000a815:	add    BYTE PTR [rax],al
   14000a817:	add    eax,eax
   14000a819:	add    BYTE PTR [rax],al
   14000a81b:	add    al,al
   14000a81d:	add    BYTE PTR [rax],al
   14000a81f:	add    al,al
   14000a821:	add    BYTE PTR [rax],al
   14000a823:	add    al,ah
   14000a825:	add    BYTE PTR [rax],al
   14000a827:	add    al,ah
   14000a829:	add    BYTE PTR [rax],al
   14000a82b:	add    al,ah
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    al,ah
   14000a831:	add    BYTE PTR [rax],al
   14000a833:	add    al,ah
   14000a835:	add    BYTE PTR [rax],al
   14000a837:	add    al,ah
   14000a839:	add    BYTE PTR [rax],al
   14000a83b:	add    al,ah
   14000a83d:	add    BYTE PTR [rax],al
   14000a83f:	add    al,ah
   14000a841:	add    BYTE PTR [rax],al
   14000a843:	add    al,ah
   14000a845:	add    BYTE PTR [rax],al
   14000a847:	add    al,ah
   14000a849:	add    BYTE PTR [rax],al
   14000a84b:	add    al,ah
   14000a84d:	add    BYTE PTR [rax],al
   14000a84f:	add    al,ah
   14000a851:	add    BYTE PTR [rax],al
   14000a853:	add    al,ah
   14000a855:	add    BYTE PTR [rax],al
   14000a857:	add    al,ah
   14000a859:	add    BYTE PTR [rax],al
   14000a85b:	add    al,dh
   14000a85d:	add    BYTE PTR [rax],al
   14000a85f:	add    al,bh
   14000a861:	add    BYTE PTR [rax],al
   14000a863:	add    ah,bh
   14000a865:	add    BYTE PTR [rax],al
   14000a867:	add    BYTE PTR [rax],ch
   14000a869:	add    BYTE PTR [rax],al
   14000a86b:	add    BYTE PTR [rax],dl
   14000a86d:	add    BYTE PTR [rax],al
   14000a86f:	add    BYTE PTR [rax],ah
   14000a871:	add    BYTE PTR [rax],al
   14000a873:	add    BYTE PTR [rcx],al
   14000a875:	add    BYTE PTR [rax+rax*1],al
   14000a878:	add    BYTE PTR [rax],al
   14000a87a:	add    BYTE PTR [rax],al
   14000a87c:	rol    BYTE PTR [rax],0x0
	...
   14000a893:	add    BYTE PTR [rax],al
   14000a895:	add    BYTE PTR [rax+0x800000],al
   14000a89b:	add    BYTE PTR [rax],al
   14000a89d:	add    BYTE PTR [rax+0x8000],0x0
   14000a8a4:	add    BYTE PTR [rax],0x80
   14000a8a7:	add    BYTE PTR [rax-0x7fffff80],al
   14000a8ad:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000a8b4:	add    BYTE PTR [rax],al
   14000a8b6:	inc    DWORD PTR [rax]
   14000a8b8:	add    bh,bh
   14000a8ba:	add    BYTE PTR [rax],al
   14000a8bc:	add    bh,bh
   14000a8be:	inc    DWORD PTR [rax]
   14000a8c0:	inc    DWORD PTR [rax]
   14000a8c2:	add    BYTE PTR [rax],al
   14000a8c4:	inc    DWORD PTR [rax]
   14000a8c6:	inc    DWORD PTR [rax]
   14000a8c8:	(bad)  
   14000a8c9:	inc    DWORD PTR [rax]
   14000a8cb:	add    bh,bh
   14000a8cd:	(bad)  
   14000a8ce:	inc    DWORD PTR [rax]
   14000a8d0:	nop
   14000a8d1:	nop
   14000a8d2:	or     DWORD PTR [rax],eax
   14000a8d4:	add    BYTE PTR [rax],al
   14000a8d6:	add    BYTE PTR [rax],al
   14000a8d8:	add    al,dh
   14000a8da:	nop
   14000a8db:	(bad)  
   14000a8dc:	inc    DWORD PTR [rdi+0xf000000]
   14000a8e2:	clc    
   14000a8e3:	mov    BYTE PTR [rax+0x89],cl
   14000a8e9:	inc    DWORD PTR [rax]
   14000a8eb:	or     DWORD PTR [rax],0x19
   14000a8ee:	add    BYTE PTR [rax],al
   14000a8f0:	ud0    esi,eax
   14000a8f3:	or     eax,DWORD PTR [rax]
   14000a8f5:	sbb    DWORD PTR [rax],eax
   14000a8f7:	add    BYTE PTR [rax],cl
   14000a8f9:	lock add BYTE PTR [rbx],al
   14000a8fc:	mov    al,0x9
   14000a8fe:	or     BYTE PTR [rax],al
   14000a900:	ud0    eax,DWORD PTR [rax]
   14000a903:	or     al,0x3b
   14000a905:	add    BYTE PTR [rax],cl
   14000a907:	jo     0x14000a909
   14000a909:	add    BYTE PTR [rax],al
   14000a90b:	or     al,0xc3
   14000a90d:	mov    al,0x8
   14000a90f:	jo     0x14000a918
   14000a911:	add    BYTE PTR [rax],al
   14000a913:	int3   
   14000a914:	int3   
   14000a915:	cmp    eax,DWORD PTR [rax]
   14000a917:	jo     0x14000a920
   14000a919:	mov    esp,cs
   14000a91b:	int3   
   14000a91c:	int3   
   14000a91d:	adc    esi,DWORD PTR [rax-0x6373f900]
   14000a923:	int3   
   14000a924:	int3   
   14000a925:	sbb    DWORD PTR [rbx],edi
   14000a927:	add    BYTE PTR [rdi],al
   14000a929:	mov    esp,cs
   14000a92b:	int3   
   14000a92c:	int3   
   14000a92d:	adc    DWORD PTR [rbx],eax
   14000a92f:	jo     0x14000a938
   14000a931:	mov    esp,ds
   14000a933:	int3   
   14000a934:	int3   
   14000a935:	ror    BYTE PTR [rax+0x70],0x7
   14000a939:	add    BYTE PTR [rax],0x0
   14000a93c:	add    BYTE PTR [rbx-0xf88ff8],ah
   14000a942:	(bad)  
   14000a943:	(bad)  
   14000a944:	jmp    FWORD PTR [rbx+0x780070f8]
   14000a94a:	mov    BYTE PTR [rax-0xf777578],cl
   14000a950:	add    edi,edi
   14000a952:	add    BYTE PTR [rax],al
   14000a954:	add    BYTE PTR [rdi],0x0
   14000a957:	add    BYTE PTR [rax-0x7ffffff9],al
   14000a95d:	(bad)  
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	add    BYTE PTR [rbx],al
   14000a962:	add    BYTE PTR [rax],al
   14000a964:	add    BYTE PTR [rcx],0x0
   14000a967:	add    BYTE PTR [rax-0x80000000],al
   14000a96d:	add    BYTE PTR [rax],al
   14000a96f:	add    BYTE PTR [rax-0x80000000],al
   14000a975:	add    BYTE PTR [rax],al
   14000a977:	add    BYTE PTR [rax-0x80000000],al
   14000a97d:	add    BYTE PTR [rax],al
   14000a97f:	add    BYTE PTR [rax-0x80000000],al
   14000a985:	add    BYTE PTR [rax],al
   14000a987:	add    BYTE PTR [rax-0x40000000],al
   14000a98d:	add    BYTE PTR [rax],al
   14000a98f:	add    BYTE PTR [rax],al
   14000a991:	add    BYTE PTR [rcx],al
   14000a993:	add    BYTE PTR [rdx],al
   14000a995:	add    BYTE PTR [rax],ah
   14000a997:	and    BYTE PTR [rax],dl
   14000a999:	add    BYTE PTR [rcx],al
   14000a99b:	add    BYTE PTR [rax+rax*1],al
   14000a99e:	call   0x14100a9a5
   14000a9a3:	add    BYTE PTR [rax],dl
   14000a9a5:	adc    BYTE PTR [rax],dl
   14000a9a7:	add    BYTE PTR [rcx],al
   14000a9a9:	add    BYTE PTR [rax+rax*1],al
   14000a9ac:	sub    BYTE PTR [rcx],al
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	add    al,BYTE PTR [rax]
   14000a9b2:	add    BYTE PTR [rax],al
   14000a9b4:	add    BYTE PTR [rax],al
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	sub    BYTE PTR [rax],al
   14000a9ba:	add    BYTE PTR [rax],al
   14000a9bc:	and    BYTE PTR [rax],al
   14000a9be:	add    BYTE PTR [rax],al
   14000a9c0:	add    BYTE PTR [rax],al
   14000a9c3:	add    BYTE PTR [rcx],al
   14000a9c5:	add    BYTE PTR [rax+rax*1],al
   14000a9c8:	add    BYTE PTR [rax],al
   14000a9ca:	add    BYTE PTR [rax],al
   14000a9cc:	add    BYTE PTR [rdx],0x0
	...
   14000a9e3:	add    BYTE PTR [rax],al
   14000a9e5:	add    BYTE PTR [rax+0x800000],al
   14000a9eb:	add    BYTE PTR [rax],al
   14000a9ed:	add    BYTE PTR [rax+0x8000],0x0
   14000a9f4:	add    BYTE PTR [rax],0x80
   14000a9f7:	add    BYTE PTR [rax-0x7fffff80],al
   14000a9fd:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000aa04:	add    BYTE PTR [rax],al
   14000aa06:	inc    DWORD PTR [rax]
   14000aa08:	add    bh,bh
   14000aa0a:	add    BYTE PTR [rax],al
   14000aa0c:	add    bh,bh
   14000aa0e:	inc    DWORD PTR [rax]
   14000aa10:	inc    DWORD PTR [rax]
   14000aa12:	add    BYTE PTR [rax],al
   14000aa14:	inc    DWORD PTR [rax]
   14000aa16:	inc    DWORD PTR [rax]
   14000aa18:	(bad)  
   14000aa19:	inc    DWORD PTR [rax]
   14000aa1b:	add    bh,bh
   14000aa1d:	(bad)  
   14000aa1e:	inc    DWORD PTR [rax]
   14000aa20:	add    BYTE PTR [rax],al
   14000aa22:	(bad)  
   14000aa23:	ja     0x14000aa9c
   14000aa25:	ja     0x14000aa9e
   14000aa27:	ja     0x14000aaa0
   14000aa29:	ja     0x14000aaa2
   14000aa2b:	ja     0x14000aaa4
   14000aa2d:	ja     0x14000aaa6
   14000aa2f:	add    BYTE PTR [rax],al
   14000aa31:	add    BYTE PTR [rdi+0x77],dh
   14000aa34:	ja     0x14000aaad
   14000aa36:	ja     0x14000aaaf
   14000aa38:	ja     0x14000aab1
   14000aa3a:	ja     0x14000aab3
   14000aa3c:	ja     0x14000aab5
   14000aa3e:	ja     0x14000aab0
   14000aa40:	add    BYTE PTR [rax],dh
	...
   14000aa4a:	add    BYTE PTR [rax],al
   14000aa4c:	add    BYTE PTR [rdi],al
   14000aa4e:	ja     0x14000aac7
   14000aa50:	add    edi,DWORD PTR [rbx-0x44444445]
   14000aa56:	mov    ebx,0xbbbbbbbb
   14000aa5b:	mov    ebx,0x777780bb
   14000aa60:	cmp    edi,DWORD PTR [rbx-0x44444445]
   14000aa66:	mov    ebx,0xbbbbbbbb
   14000aa6b:	mov    ebx,0x7707b8bb
   14000aa70:	cmp    edi,DWORD PTR [rbx-0x44444445]
   14000aa76:	mov    ebx,0xbbbbbbbb
   14000aa7b:	mov    ebx,0x7707bbbb
   14000aa80:	cmp    edi,DWORD PTR [rbx-0x44444445]
   14000aa86:	mov    eax,0xbbbb8b00
   14000aa8b:	mov    ebx,0x7007bbbb
   14000aa90:	cmp    edi,DWORD PTR [rbx-0x44444445]
   14000aa96:	mov    al,0x0
   14000aa98:	or     edi,DWORD PTR [rbx-0x47444445]
   14000aa9e:	(bad)  
   14000aa9f:	jo     0x14000aaa4
   14000aaa1:	mov    ebx,0xbbbbbbbb
   14000aaa6:	mov    al,0x0
   14000aaa8:	or     edi,DWORD PTR [rbx-0x4f444445]
   14000aaae:	ja     0x14000aab0
   14000aab0:	add    edi,DWORD PTR [rbx-0x44444445]
   14000aab6:	mov    eax,0xbbbb8b00
   14000aabb:	mov    ebx,0x7780bb
   14000aac0:	add    BYTE PTR [rbx],bh
   14000aac2:	mov    ebx,0xbbbbbbbb
   14000aac7:	mov    ebx,0xbbbbbbbb
   14000aacc:	mov    ebx,0x7007
   14000aad1:	cmp    edi,DWORD PTR [rbx-0x44444445]
   14000aad7:	or     edi,DWORD PTR [rbx-0x47444445]
   14000aadd:	(bad)  
   14000aade:	jo     0x14000aae0
   14000aae0:	add    BYTE PTR [rbx],al
   14000aae2:	mov    ebx,0xb8bbbbbb
   14000aae7:	or     BYTE PTR [rbx-0x4f444445],bh
   14000aaed:	ja     0x14000aaef
   14000aaef:	add    BYTE PTR [rax],al
   14000aaf1:	add    edi,DWORD PTR [rbx-0x4c444445]
   14000aaf7:	add    edi,DWORD PTR [rbx-0x7f444445]
   14000aafd:	ja     0x14000aaff
   14000aaff:	add    BYTE PTR [rax],al
   14000ab01:	add    BYTE PTR [rbx],bh
   14000ab03:	mov    ebx,0xb0bbbb
   14000ab08:	mov    ebx,0x7bbbbbb
   14000ab0d:	jo     0x14000ab0f
   14000ab0f:	add    BYTE PTR [rax],al
   14000ab11:	add    BYTE PTR [rbx],bh
   14000ab13:	mov    ebx,0x80bbbb
   14000ab18:	mov    edi,DWORD PTR [rbx+0x7007b8bb]
   14000ab1e:	add    BYTE PTR [rax],al
   14000ab20:	add    BYTE PTR [rax],al
   14000ab22:	add    edi,DWORD PTR [rbx+0x30bbbb]
   14000ab28:	cmp    edi,DWORD PTR [rbx+0x77b0bb]
   14000ab2e:	add    BYTE PTR [rax],al
   14000ab30:	add    BYTE PTR [rax],al
   14000ab32:	add    edi,DWORD PTR [rbx+0xbbbb]
   14000ab38:	or     edi,DWORD PTR [rbx+0x7780bb]
   14000ab3e:	add    BYTE PTR [rax],al
   14000ab40:	add    BYTE PTR [rax],al
   14000ab42:	add    BYTE PTR [rbx],bh
   14000ab44:	mov    ebx,0xb0000bb
   14000ab49:	mov    ebx,0x7007bb
   14000ab4e:	add    BYTE PTR [rax],al
   14000ab50:	add    BYTE PTR [rax],al
   14000ab52:	add    BYTE PTR [rbx],bh
   14000ab54:	mov    ebx,0xb0000bb
   14000ab59:	mov    ebx,0x7007b8
   14000ab5e:	add    BYTE PTR [rax],al
   14000ab60:	add    BYTE PTR [rax],al
   14000ab62:	add    BYTE PTR [rbx],al
   14000ab64:	mov    ebx,0xb0000bb
   14000ab69:	mov    ebx,0x77b0
   14000ab6e:	add    BYTE PTR [rax],al
   14000ab70:	add    BYTE PTR [rax],al
   14000ab72:	add    BYTE PTR [rbx],al
   14000ab74:	mov    ebx,0xb0000bb
   14000ab79:	mov    ebx,0x7780
   14000ab7e:	add    BYTE PTR [rax],al
   14000ab80:	add    BYTE PTR [rax],al
   14000ab82:	add    BYTE PTR [rax],al
   14000ab84:	cmp    edi,DWORD PTR [rbx-0x4474ff80]
   14000ab8a:	(bad)  
   14000ab8b:	jo     0x14000ab8d
   14000ab8d:	add    BYTE PTR [rax],al
   14000ab8f:	add    BYTE PTR [rax],al
   14000ab91:	add    BYTE PTR [rax],al
   14000ab93:	add    BYTE PTR [rbx],bh
   14000ab95:	mov    ebx,0xb8bbbbbb
   14000ab9a:	(bad)  
   14000ab9b:	jo     0x14000ab9d
   14000ab9d:	add    BYTE PTR [rax],al
   14000ab9f:	add    BYTE PTR [rax],al
   14000aba1:	add    BYTE PTR [rax],al
   14000aba3:	add    BYTE PTR [rbx],al
   14000aba5:	mov    ebx,0xb0bbbbbb
   14000abaa:	ja     0x14000abac
	...
   14000abb4:	add    edi,DWORD PTR [rbx-0x7f444445]
   14000abba:	ja     0x14000abbc
	...
   14000abc4:	add    BYTE PTR [rbx],bh
   14000abc6:	mov    ebx,0x7007bbbb
	...
   14000abd3:	add    BYTE PTR [rax],al
   14000abd5:	cmp    edi,DWORD PTR [rbx+0x7007b8bb]
	...
   14000abe3:	add    BYTE PTR [rax],al
   14000abe5:	add    edi,DWORD PTR [rbx+0x77b0bb]
	...
   14000abf3:	add    BYTE PTR [rax],al
   14000abf5:	add    edi,DWORD PTR [rbx+0x7080bb]
	...
   14000ac03:	add    BYTE PTR [rax],al
   14000ac05:	add    BYTE PTR [rbx],bh
   14000ac07:	mov    eax,0x0
	...
   14000ac14:	add    BYTE PTR [rax],al
   14000ac16:	add    esi,DWORD PTR [rbx]
	...
   14000ac20:	clc    
   14000ac21:	add    BYTE PTR [rax],al
   14000ac23:	add    esi,eax
   14000ac25:	add    BYTE PTR [rax],al
   14000ac27:	add    eax,eax
   14000ac29:	add    BYTE PTR [rax],al
   14000ac2b:	add    BYTE PTR [rax+0x0],al
	...
   14000ac39:	add    BYTE PTR [rax],al
   14000ac3b:	add    DWORD PTR [rax],eax
   14000ac3d:	add    BYTE PTR [rax],al
   14000ac3f:	add    DWORD PTR [rax-0x7ffd0000],eax
   14000ac45:	add    BYTE PTR [rax],al
   14000ac47:	add    eax,eax
   14000ac49:	add    BYTE PTR [rax],al
   14000ac4b:	(bad)  
   14000ac4c:	rol    BYTE PTR [rax],0x0
   14000ac4f:	(bad)  
   14000ac50:	loopne 0x14000ac52
   14000ac52:	add    BYTE PTR [rdi],cl
   14000ac54:	loopne 0x14000ac56
   14000ac56:	add    BYTE PTR [rdi],cl
   14000ac58:	lock add BYTE PTR [rax],al
   14000ac5b:	(bad)  
   14000ac5c:	lock add BYTE PTR [rax],al
   14000ac5f:	(bad)  
   14000ac60:	clc    
   14000ac61:	add    BYTE PTR [rax],al
   14000ac63:	(bad)  
   14000ac64:	clc    
   14000ac65:	add    BYTE PTR [rax],al
   14000ac67:	(bad)  
   14000ac68:	cld    
   14000ac69:	add    BYTE PTR [rax],al
   14000ac6b:	jg     0x14000ac69
   14000ac6d:	add    BYTE PTR [rax],al
   14000ac6f:	jg     0x14000ac6f
   14000ac71:	add    BYTE PTR [rax],al
   14000ac73:	(bad)  
   14000ac74:	inc    BYTE PTR [rax]
   14000ac76:	add    bh,bh
   14000ac78:	inc    DWORD PTR [rax]
   14000ac7a:	add    edi,edi
   14000ac7c:	inc    DWORD PTR [rax]
   14000ac7e:	add    edi,edi
   14000ac80:	inc    DWORD PTR [rax-0x7f0000fd]
   14000ac86:	add    edi,edi
   14000ac88:	inc    eax
   14000ac8a:	(bad)  
   14000ac8b:	(bad)  
   14000ac8c:	inc    eax
   14000ac8e:	(bad)  
   14000ac8f:	(bad)  
   14000ac90:	jmp    rax
   14000ac92:	ud0    edi,edi
   14000ac95:	loopne 0x14000acb6
   14000ac97:	(bad)  
   14000ac98:	push   rax
   14000ac9a:	jg     0x14000ac9b
   14000ac9c:	(bad)  
   14000ac9d:	clc    
   14000ac9e:	(bad)  
   14000ac9f:	jmp    FWORD PTR [rax]
   14000aca1:	add    BYTE PTR [rax],al
   14000aca3:	add    BYTE PTR [rax],dl
   14000aca5:	add    BYTE PTR [rax],al
   14000aca7:	add    BYTE PTR [rax],ah
   14000aca9:	add    BYTE PTR [rax],al
   14000acab:	add    BYTE PTR [rcx],al
   14000acad:	add    BYTE PTR [rax+rax*1],al
   14000acb0:	add    BYTE PTR [rax],al
   14000acb2:	add    BYTE PTR [rax],al
   14000acb4:	rol    BYTE PTR [rax],0x0
	...
   14000accb:	add    BYTE PTR [rax],al
   14000accd:	add    BYTE PTR [rax+0x800000],al
   14000acd3:	add    BYTE PTR [rax],al
   14000acd5:	add    BYTE PTR [rax+0x8000],0x0
   14000acdc:	add    BYTE PTR [rax],0x80
   14000acdf:	add    BYTE PTR [rax-0x7fffff80],al
   14000ace5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   14000acec:	add    BYTE PTR [rax],al
   14000acee:	inc    DWORD PTR [rax]
   14000acf0:	add    bh,bh
   14000acf2:	add    BYTE PTR [rax],al
   14000acf4:	add    bh,bh
   14000acf6:	inc    DWORD PTR [rax]
   14000acf8:	inc    DWORD PTR [rax]
   14000acfa:	add    BYTE PTR [rax],al
   14000acfc:	inc    DWORD PTR [rax]
   14000acfe:	inc    DWORD PTR [rax]
   14000ad00:	(bad)  
   14000ad01:	inc    DWORD PTR [rax]
   14000ad03:	add    bh,bh
   14000ad05:	(bad)  
   14000ad06:	inc    DWORD PTR [rax]
	...
   14000ad18:	add    BYTE PTR [rbx],al
   14000ad1a:	xor    esi,DWORD PTR [rbx]
   14000ad1c:	xor    esi,DWORD PTR [rbx]
   14000ad1e:	add    BYTE PTR [rax],al
   14000ad20:	add    BYTE PTR [rbx],bh
   14000ad22:	mov    ebx,0x30bbbbbb
   14000ad27:	add    BYTE PTR [rax],al
   14000ad29:	or     edi,DWORD PTR [rbx+0xbb0b00]
   14000ad2f:	add    BYTE PTR [rax],al
   14000ad31:	cmp    edi,DWORD PTR [rbx+0x70bbbbbb]
   14000ad37:	add    BYTE PTR [rax],al
   14000ad39:	or     edi,DWORD PTR [rbx+0xbbbbb0]
   14000ad3f:	add    BYTE PTR [rax],al
   14000ad41:	add    edi,DWORD PTR [rbx+0xb7bbb0]
   14000ad47:	add    BYTE PTR [rax],al
   14000ad49:	add    BYTE PTR [rbx+0xb00b00],bh
   14000ad4f:	add    BYTE PTR [rax],al
   14000ad51:	add    BYTE PTR [rbx],bh
   14000ad53:	add    BYTE PTR [rbx],cl
   14000ad55:	jo     0x14000ad57
   14000ad57:	add    BYTE PTR [rax],al
   14000ad59:	add    BYTE PTR [rbx],cl
   14000ad5b:	mov    al,0xbb
   14000ad5d:	add    BYTE PTR [rax],al
   14000ad5f:	add    BYTE PTR [rax],al
   14000ad61:	add    BYTE PTR [rbx],al
   14000ad63:	mov    ebx,0xb7
   14000ad68:	add    BYTE PTR [rax],al
   14000ad6a:	add    BYTE PTR [rbx+0xb0],bh
   14000ad70:	add    BYTE PTR [rax],al
   14000ad72:	add    BYTE PTR [rbx+0x70],bh
   14000ad75:	add    BYTE PTR [rax],al
   14000ad77:	add    BYTE PTR [rax],al
   14000ad79:	add    BYTE PTR [rax],al
   14000ad7b:	(bad)  
	...
   14000ad88:	(bad)  
   14000ad89:	inc    DWORD PTR [rax]
   14000ad8b:	add    al,al
   14000ad8d:	(bad)  
   14000ad8e:	add    BYTE PTR [rax],al
   14000ad90:	rol    BYTE PTR [rdi],0x0
   14000ad93:	add    BYTE PTR [rax-0x7ffffffd],al
   14000ad99:	add    eax,DWORD PTR [rax]
   14000ad9b:	add    al,al
   14000ad9d:	(bad)  
   14000ad9e:	add    BYTE PTR [rax],al
   14000ada0:	rol    BYTE PTR [rdi],0x0
   14000ada3:	add    al,ah
   14000ada5:	sldt   WORD PTR [rax]
   14000ada8:	loopne 0x14000adb9
   14000adaa:	add    BYTE PTR [rax],al
   14000adac:	lock (bad) 
   14000adae:	add    BYTE PTR [rax],al
   14000adb0:	lock (bad) 
   14000adb2:	add    BYTE PTR [rax],al
   14000adb4:	clc    
   14000adb5:	(bad)  
   14000adb6:	add    BYTE PTR [rax],al
   14000adb8:	clc    
   14000adb9:	(bad)  
   14000adba:	add    BYTE PTR [rax],al
   14000adbc:	cld    
   14000adbd:	jg     0x14000adbf
   14000adbf:	add    ah,bh
   14000adc1:	jg     0x14000adc3
   14000adc3:	add    dh,bh
   14000adc5:	inc    DWORD PTR [rax]
   14000adc7:	add    BYTE PTR [rax],al
   14000adc9:	add    BYTE PTR [rcx],al
   14000adcb:	add    BYTE PTR [rdx],al
   14000adcd:	add    BYTE PTR [rax],ah
   14000adcf:	and    BYTE PTR [rax],dl
   14000add1:	add    BYTE PTR [rcx],al
   14000add3:	add    BYTE PTR [rax+rax*1],al
   14000add6:	call   0x14300addd
   14000addb:	add    BYTE PTR [rax],dl
   14000addd:	adc    BYTE PTR [rax],dl
   14000addf:	add    BYTE PTR [rcx],al
   14000ade1:	add    BYTE PTR [rax+rax*1],al
   14000ade4:	sub    BYTE PTR [rcx],al
   14000ade6:	add    BYTE PTR [rax],al
   14000ade8:	add    al,0x0
   14000adea:	add    BYTE PTR [rax],al
   14000adec:	add    BYTE PTR [rax],al
   14000adee:	add    BYTE PTR [rax],al
   14000adf0:	sub    BYTE PTR [rax],al
   14000adf2:	add    BYTE PTR [rax],al
   14000adf4:	and    BYTE PTR [rax],al
   14000adf6:	add    BYTE PTR [rax],al
   14000adf8:	add    BYTE PTR [rax],al
   14000adfb:	add    BYTE PTR [rcx],al
   14000adfd:	add    BYTE PTR [rax+rax*1],al
   14000ae00:	add    BYTE PTR [rax],al
   14000ae02:	add    BYTE PTR [rax],al
   14000ae04:	add    BYTE PTR [rdx],0x0
	...
   14000ae1b:	add    BYTE PTR [rax],al
   14000ae1d:	add    BYTE PTR [rax+0x800000],al
   14000ae23:	add    BYTE PTR [rax],al
   14000ae25:	add    BYTE PTR [rax+0x8000],0x0
   14000ae2c:	add    BYTE PTR [rax],0x80
   14000ae2f:	add    BYTE PTR [rax-0x3fffff80],al
   14000ae35:	rol    al,0x0
   14000ae38:	add    BYTE PTR [rax+0x80],0xff
   14000ae3f:	add    BYTE PTR [rax],al
   14000ae41:	inc    DWORD PTR [rax]
   14000ae43:	add    BYTE PTR [rax],al
   14000ae45:	(bad)  
   14000ae46:	inc    DWORD PTR [rax]
   14000ae48:	inc    DWORD PTR [rax]
   14000ae4a:	add    BYTE PTR [rax],al
   14000ae4c:	inc    DWORD PTR [rax]
   14000ae4e:	inc    DWORD PTR [rax]
   14000ae50:	(bad)  
   14000ae51:	inc    DWORD PTR [rax]
   14000ae53:	add    bh,bh
   14000ae55:	(bad)  
   14000ae56:	inc    DWORD PTR [rax]
   14000ae58:	add    BYTE PTR [rax],al
   14000ae5a:	add    BYTE PTR [rax],al
   14000ae5c:	add    BYTE PTR [rax],al
   14000ae5e:	or     BYTE PTR [rax+0x808888],cl
	...
   14000ae6c:	add    BYTE PTR [rax-0x77777778],cl
   14000ae72:	mov    BYTE PTR [rax+0x0],cl
   14000ae78:	add    BYTE PTR [rax],al
   14000ae7a:	add    BYTE PTR [rax],al
   14000ae7c:	or     BYTE PTR [rcx+0x18111111],al
   14000ae82:	mov    BYTE PTR [rax+0x80],cl
   14000ae88:	add    BYTE PTR [rax],al
   14000ae8a:	add    BYTE PTR [rax],cl
   14000ae8c:	adc    DWORD PTR [rcx],ebx
   14000ae8e:	cdq    
   14000ae8f:	cdq    
   14000ae90:	cdq    
   14000ae91:	xchg   ecx,eax
   14000ae92:	adc    DWORD PTR [rax+0x8088],ecx
   14000ae98:	add    BYTE PTR [rax],al
   14000ae9a:	add    BYTE PTR [rcx-0x66666667],al
   14000aea0:	cdq    
   14000aea1:	cdq    
   14000aea2:	cdq    
   14000aea3:	sbb    BYTE PTR [rax+0x88],cl
   14000aea9:	add    BYTE PTR [rcx],al
   14000aeab:	sbb    DWORD PTR [rcx-0x66666667],ebx
   14000aeb1:	cdq    
   14000aeb2:	cdq    
   14000aeb3:	xchg   ecx,eax
   14000aeb4:	sbb    BYTE PTR [rax+0x80],cl
   14000aeba:	sbb    DWORD PTR [rcx-0x66666667],ebx
   14000aec0:	cdq    
   14000aec1:	cdq    
   14000aec2:	cdq    
   14000aec3:	cdq    
   14000aec4:	xchg   ecx,eax
   14000aec5:	mov    BYTE PTR [rax-0x66ff0000],al
   14000aecb:	cdq    
   14000aecc:	cdq    
   14000aecd:	cdq    
   14000aece:	cdq    
   14000aecf:	cdq    
   14000aed0:	cdq    
   14000aed1:	cdq    
   14000aed2:	cdq    
   14000aed3:	cdq    
   14000aed4:	cdq    
   14000aed5:	sbb    BYTE PTR [rax-0x66ff0000],cl
   14000aedb:	cdq    
   14000aedc:	cdq    
   14000aedd:	cdq    
   14000aede:	cdq    
   14000aedf:	cdq    
   14000aee0:	cdq    
   14000aee1:	cdq    
   14000aee2:	cdq    
   14000aee3:	cdq    
   14000aee4:	cdq    
   14000aee5:	sbb    BYTE PTR [rax-0x66e6ff80],cl
   14000aeeb:	cdq    
   14000aeec:	lahf   
   14000aeed:	cdq    
   14000aeee:	cdq    
   14000aeef:	cdq    
   14000aef0:	cdq    
   14000aef1:	cdq    
   14000aef2:	stc    
   14000aef3:	cdq    
   14000aef4:	cdq    
   14000aef5:	xchg   ecx,eax
   14000aef6:	mov    BYTE PTR [rax-0x666666ff],al
   14000aefc:	(bad)  
   14000aefd:	stc    
   14000aefe:	cdq    
   14000aeff:	cdq    
   14000af00:	cdq    
   14000af01:	lahf   
   14000af02:	call   FWORD PTR [rcx-0x7fe76667]
   14000af08:	add    DWORD PTR [rcx-0x6067],ebx
   14000af0e:	cdq    
   14000af0f:	cdq    
   14000af10:	cdq    
   14000af11:	(bad)  
   14000af12:	(bad)  
   14000af13:	stc    
   14000af14:	cdq    
   14000af15:	cdq    
   14000af16:	sbb    BYTE PTR [rax-0x666666ff],cl
   14000af1c:	(bad)  
   14000af1d:	(bad)  
   14000af1e:	stc    
   14000af1f:	cdq    
   14000af20:	lahf   
   14000af21:	(bad)  
   14000af22:	call   FWORD PTR [rcx-0x77e76667]
   14000af28:	sbb    DWORD PTR [rcx-0x606667],ebx
   14000af2e:	call   FWORD PTR [rcx-0x66060001]
   14000af34:	cdq    
   14000af35:	cdq    
   14000af36:	xchg   ecx,eax
   14000af37:	mov    BYTE PTR [rcx],bl
   14000af39:	cdq    
   14000af3a:	cdq    
   14000af3b:	cdq    
   14000af3c:	cdq    
   14000af3d:	(bad)  
   14000af3e:	(bad)  
   14000af3f:	(bad)  
   14000af40:	(bad)  
   14000af41:	call   FWORD PTR [rcx-0x6e666667]
   14000af47:	mov    BYTE PTR [rcx],bl
   14000af49:	cdq    
   14000af4a:	cdq    
   14000af4b:	cdq    
   14000af4c:	cdq    
   14000af4d:	lahf   
   14000af4e:	(bad)  
   14000af4f:	(bad)  
   14000af50:	(bad)  
   14000af51:	stc    
   14000af52:	cdq    
   14000af53:	cdq    
   14000af54:	cdq    
   14000af55:	cdq    
   14000af56:	xchg   ecx,eax
   14000af57:	mov    BYTE PTR [rcx],bl
   14000af59:	cdq    
   14000af5a:	cdq    
   14000af5b:	cdq    
   14000af5c:	cdq    
   14000af5d:	cdq    
   14000af5e:	(bad)  
   14000af5f:	(bad)  
   14000af60:	call   FWORD PTR [rcx-0x66666667]
   14000af66:	xchg   ecx,eax
   14000af67:	mov    BYTE PTR [rcx],bl
   14000af69:	cdq    
   14000af6a:	cdq    
   14000af6b:	cdq    
   14000af6c:	cdq    
   14000af6d:	cdq    
   14000af6e:	(bad)  
   14000af6f:	(bad)  
   14000af70:	call   FWORD PTR [rcx-0x66666667]
   14000af76:	xchg   ecx,eax
   14000af77:	mov    BYTE PTR [rcx],bl
   14000af79:	cdq    
   14000af7a:	cdq    
   14000af7b:	cdq    
   14000af7c:	cdq    
   14000af7d:	lahf   
   14000af7e:	(bad)  
   14000af7f:	(bad)  
   14000af80:	(bad)  
   14000af81:	stc    
   14000af82:	cdq    
   14000af83:	cdq    
   14000af84:	cdq    
   14000af85:	cdq    
   14000af86:	xchg   ecx,eax
   14000af87:	mov    BYTE PTR [rcx],bl
   14000af89:	cdq    
   14000af8a:	cdq    
   14000af8b:	cdq    
   14000af8c:	cdq    
   14000af8d:	(bad)  
   14000af8e:	(bad)  
   14000af8f:	(bad)  
   14000af90:	(bad)  
   14000af91:	call   FWORD PTR [rcx-0x6e666667]
   14000af97:	sbb    BYTE PTR [rcx],0x99
   14000af9a:	cdq    
   14000af9b:	cdq    
   14000af9c:	lahf   
   14000af9d:	(bad)  
   14000af9e:	call   FWORD PTR [rcx-0x66060001]
   14000afa4:	cdq    
   14000afa5:	cdq    
   14000afa6:	xchg   ecx,eax
   14000afa7:	add    BYTE PTR [rcx],0x99
   14000afaa:	cdq    
   14000afab:	cdq    
   14000afac:	(bad)  
   14000afad:	(bad)  
   14000afae:	stc    
   14000afaf:	cdq    
   14000afb0:	lahf   
   14000afb1:	(bad)  
   14000afb2:	call   FWORD PTR [rcx-0x7fe76667]
   14000afb8:	add    DWORD PTR [rcx-0x6067],ebx
   14000afbe:	cdq    
   14000afbf:	cdq    
   14000afc0:	cdq    
   14000afc1:	(bad)  
   14000afc2:	(bad)  
   14000afc3:	stc    
   14000afc4:	cdq    
   14000afc5:	cdq    
   14000afc6:	sbb    BYTE PTR [rax],al
   14000afc8:	add    DWORD PTR [rcx-0x6006667],ebx
   14000afce:	cdq    
   14000afcf:	cdq    
   14000afd0:	cdq    
   14000afd1:	lahf   
   14000afd2:	call   FWORD PTR [rcx+0x109999]
   14000afd8:	add    BYTE PTR [rcx],bl
   14000afda:	cdq    
   14000afdb:	cdq    
   14000afdc:	lahf   
   14000afdd:	cdq    
   14000afde:	cdq    
   14000afdf:	cdq    
   14000afe0:	cdq    
   14000afe1:	cdq    
   14000afe2:	stc    
   14000afe3:	cdq    
   14000afe4:	cdq    
   14000afe5:	xchg   ecx,eax
   14000afe6:	add    BYTE PTR [rax],0x0
   14000afe9:	add    DWORD PTR [rcx-0x66666667],ebx
   14000afef:	cdq    
   14000aff0:	cdq    
   14000aff1:	cdq    
   14000aff2:	cdq    
   14000aff3:	cdq    
   14000aff4:	cdq    
   14000aff5:	sbb    BYTE PTR [rax],al
   14000aff7:	add    BYTE PTR [rax],al
   14000aff9:	add    DWORD PTR [rcx-0x66666667],ebx
   14000afff:	cdq    
   14000b000:	cdq    
   14000b001:	cdq    
   14000b002:	cdq    
   14000b003:	cdq    
   14000b004:	cdq    
   14000b005:	adc    BYTE PTR [rax],al
   14000b007:	add    BYTE PTR [rax],al
   14000b009:	add    BYTE PTR [rcx],bl
   14000b00b:	cdq    
   14000b00c:	cdq    
   14000b00d:	cdq    
   14000b00e:	cdq    
   14000b00f:	cdq    
   14000b010:	cdq    
   14000b011:	cdq    
   14000b012:	cdq    
   14000b013:	cdq    
   14000b014:	xchg   ecx,eax
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	add    BYTE PTR [rax],al
   14000b019:	add    BYTE PTR [rcx],al
   14000b01b:	sbb    DWORD PTR [rcx-0x66666667],ebx
   14000b021:	cdq    
   14000b022:	cdq    
   14000b023:	xchg   ecx,eax
   14000b024:	adc    BYTE PTR [rax],al
   14000b026:	add    BYTE PTR [rax],al
   14000b028:	add    BYTE PTR [rax],al
   14000b02a:	add    BYTE PTR [rcx],al
   14000b02c:	cdq    
   14000b02d:	cdq    
   14000b02e:	cdq    
   14000b02f:	cdq    
   14000b030:	cdq    
   14000b031:	cdq    
   14000b032:	cdq    
   14000b033:	adc    BYTE PTR [rax],al
   14000b035:	add    BYTE PTR [rax],al
   14000b037:	add    BYTE PTR [rax],al
   14000b039:	add    BYTE PTR [rax],al
   14000b03b:	add    BYTE PTR [rcx],dl
   14000b03d:	sbb    DWORD PTR [rcx+0x11919999],ebx
	...
   14000b04b:	add    BYTE PTR [rax],al
   14000b04d:	add    DWORD PTR [rcx],edx
   14000b04f:	adc    DWORD PTR [rcx],edx
   14000b051:	adc    BYTE PTR [rax],al
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	add    BYTE PTR [rax],al
   14000b057:	add    bh,bh
   14000b059:	clc    
   14000b05a:	(bad)  
   14000b05b:	(bad)  
   14000b05c:	inc    eax
   14000b05e:	add    bh,bh
   14000b060:	inc    DWORD PTR [rax+0xfe7f00]
   14000b066:	add    BYTE PTR [rdi],bl
   14000b068:	cld    
   14000b069:	add    BYTE PTR [rax],al
   14000b06b:	psubb  mm0,QWORD PTR [rax]
   14000b06e:	add    BYTE PTR [rdi],al
   14000b070:	lock add BYTE PTR [rax],al
   14000b073:	(bad)  
   14000b074:	loopne 0x14000b076
   14000b076:	add    BYTE PTR [rbx],al
   14000b078:	loopne 0x14000b07a
   14000b07a:	add    BYTE PTR [rcx],al
   14000b07c:	rol    BYTE PTR [rax],0x0
   14000b07f:	add    DWORD PTR [rax-0x7fff0000],eax
   14000b085:	add    BYTE PTR [rax],al
   14000b087:	add    BYTE PTR [rax+0x0],al
	...
   14000b0a5:	add    BYTE PTR [rax],al
   14000b0a7:	add    DWORD PTR [rax],eax
   14000b0a9:	add    BYTE PTR [rax],al
   14000b0ab:	add    DWORD PTR [rax-0x7fff0000],eax
   14000b0b1:	add    BYTE PTR [rax],al
   14000b0b3:	add    eax,DWORD PTR [rax-0x3ff90000]
   14000b0b9:	add    BYTE PTR [rax],al
   14000b0bb:	(bad)  
   14000b0bc:	loopne 0x14000b0be
   14000b0be:	add    BYTE PTR [rdi],cl
   14000b0c0:	loopne 0x14000b0c2
   14000b0c2:	add    BYTE PTR [rdi],bl
   14000b0c4:	lock add BYTE PTR [rax],al
   14000b0c7:	(bad)  
   14000b0c8:	clc    
   14000b0c9:	add    BYTE PTR [rax],al
   14000b0cb:	jg     0x14000b0cb
   14000b0cd:	add    BYTE PTR [rcx],al
   14000b0cf:	(bad)  
   14000b0d0:	inc    DWORD PTR [rax]
   14000b0d2:	add    edi,edi
   14000b0d4:	jmp    rax
   14000b0d6:	(bad)  
   14000b0d7:	jmp    FWORD PTR [rax]
   14000b0d9:	add    BYTE PTR [rax],al
   14000b0db:	add    BYTE PTR [rax],dl
   14000b0dd:	add    BYTE PTR [rax],al
   14000b0df:	add    BYTE PTR [rax],ah
   14000b0e1:	add    BYTE PTR [rax],al
   14000b0e3:	add    BYTE PTR [rcx],al
   14000b0e5:	add    BYTE PTR [rax+rax*1],al
   14000b0e8:	add    BYTE PTR [rax],al
   14000b0ea:	add    BYTE PTR [rax],al
   14000b0ec:	rol    BYTE PTR [rax],0x0
	...
   14000b103:	add    BYTE PTR [rax],al
   14000b105:	add    BYTE PTR [rax+0x800000],al
   14000b10b:	add    BYTE PTR [rax],al
   14000b10d:	add    BYTE PTR [rax+0x8000],0x0
   14000b114:	add    BYTE PTR [rax],0x80
   14000b117:	add    BYTE PTR [rax-0x3fffff80],al
   14000b11d:	rol    al,0x0
   14000b120:	add    BYTE PTR [rax+0x80],0xff
   14000b127:	add    BYTE PTR [rax],al
   14000b129:	inc    DWORD PTR [rax]
   14000b12b:	add    BYTE PTR [rax],al
   14000b12d:	(bad)  
   14000b12e:	inc    DWORD PTR [rax]
   14000b130:	inc    DWORD PTR [rax]
   14000b132:	add    BYTE PTR [rax],al
   14000b134:	inc    DWORD PTR [rax]
   14000b136:	inc    DWORD PTR [rax]
   14000b138:	(bad)  
   14000b139:	inc    DWORD PTR [rax]
   14000b13b:	add    bh,bh
   14000b13d:	(bad)  
   14000b13e:	inc    DWORD PTR [rax]
   14000b140:	add    BYTE PTR [rax],al
   14000b142:	add    BYTE PTR [rax+0x8088],cl
   14000b148:	add    BYTE PTR [rax],al
   14000b14a:	adc    DWORD PTR [rcx],0x808811
   14000b150:	add    BYTE PTR [rcx],al
   14000b152:	sbb    DWORD PTR [rcx+0x881199],ebx
   14000b158:	add    BYTE PTR [rcx],bl
   14000b15a:	cdq    
   14000b15b:	cdq    
   14000b15c:	cdq    
   14000b15d:	cdq    
   14000b15e:	sbb    BYTE PTR [rax-0x660666ff],al
   14000b164:	cdq    
   14000b165:	stc    
   14000b166:	xchg   ecx,eax
   14000b167:	add    BYTE PTR [rcx],0x9f
   14000b16a:	call   FWORD PTR [rcx-0x776e0061]
   14000b170:	sbb    DWORD PTR [rcx-0x6000601],ebx
   14000b176:	cdq    
   14000b177:	sbb    BYTE PTR [rcx],bl
   14000b179:	cdq    
   14000b17a:	lahf   
   14000b17b:	(bad)  
   14000b17c:	call   FWORD PTR [rcx-0x66e6e767]
   14000b182:	cdq    
   14000b183:	(bad)  
   14000b184:	stc    
   14000b185:	cdq    
   14000b186:	cdq    
   14000b187:	sbb    BYTE PTR [rcx],bl
   14000b189:	cdq    
   14000b18a:	lahf   
   14000b18b:	(bad)  
   14000b18c:	call   FWORD PTR [rcx-0x66e6e767]
   14000b192:	(bad)  
   14000b193:	stc    
   14000b194:	(bad)  
   14000b195:	stc    
   14000b196:	cdq    
   14000b197:	adc    BYTE PTR [rcx],al
   14000b199:	lahf   
   14000b19a:	call   FWORD PTR [rcx-0x7f6e0061]
   14000b1a0:	add    DWORD PTR [rcx-0x6666607],ebx
   14000b1a6:	xchg   ecx,eax
   14000b1a7:	add    BYTE PTR [rax],al
   14000b1a9:	sbb    DWORD PTR [rcx+0x10999999],ebx
   14000b1af:	add    BYTE PTR [rax],al
   14000b1b1:	add    DWORD PTR [rcx],ebx
   14000b1b3:	cdq    
   14000b1b4:	cdq    
   14000b1b5:	adc    DWORD PTR [rax],eax
   14000b1b7:	add    BYTE PTR [rax],al
   14000b1b9:	add    BYTE PTR [rcx],al
   14000b1bb:	adc    DWORD PTR [rcx],edx
   14000b1bd:	add    BYTE PTR [rax],al
   14000b1bf:	add    ah,bh
   14000b1c1:	(bad)  
   14000b1c2:	add    BYTE PTR [rax],al
   14000b1c4:	lock (bad) 
   14000b1c6:	add    BYTE PTR [rax],al
   14000b1c8:	loopne 0x14000b1cd
   14000b1ca:	add    BYTE PTR [rax],al
   14000b1cc:	rol    BYTE PTR [rcx],0x0
   14000b1cf:	add    BYTE PTR [rax-0x7fffffff],al
	...
   14000b1e9:	add    DWORD PTR [rax],eax
   14000b1eb:	add    BYTE PTR [rax-0x7fffffff],al
   14000b1f1:	add    eax,DWORD PTR [rax]
   14000b1f3:	add    al,al
   14000b1f5:	(bad)  
   14000b1f6:	add    BYTE PTR [rax],al
   14000b1f8:	loopne 0x14000b209
   14000b1fa:	add    BYTE PTR [rax],al
   14000b1fc:	clc    
   14000b1fd:	(bad)  
   14000b1fe:	add    BYTE PTR [rax],al
   14000b200:	add    BYTE PTR [rax],al
   14000b202:	add    DWORD PTR [rax],eax
   14000b204:	add    al,BYTE PTR [rax]
   14000b206:	and    BYTE PTR [rax],ah
   14000b208:	adc    BYTE PTR [rax],al
   14000b20a:	add    DWORD PTR [rax],eax
   14000b20c:	add    al,0x0
   14000b20e:	call   0x14500b215
   14000b213:	add    BYTE PTR [rax],dl
   14000b215:	adc    BYTE PTR [rax],dl
   14000b217:	add    BYTE PTR [rcx],al
   14000b219:	add    BYTE PTR [rax+rax*1],al
   14000b21c:	sub    BYTE PTR [rcx],al
   14000b21e:	add    BYTE PTR [rax],al
   14000b220:	(bad)  
   14000b221:	add    BYTE PTR [rax],al
   14000b223:	add    BYTE PTR [rax],al
   14000b225:	add    BYTE PTR [rax],al
   14000b227:	add    BYTE PTR [rax+0x3],bh
   14000b22a:	xor    al,0x0
   14000b22c:	add    BYTE PTR [rax],al
   14000b22e:	push   rsi
   14000b22f:	add    BYTE PTR [rbx+0x0],dl
   14000b232:	pop    rdi
   14000b233:	add    BYTE PTR [rsi+0x0],dl
   14000b236:	add    BYTE PTR [r10+0x0],r10b
   14000b23a:	push   rbx
   14000b23b:	add    BYTE PTR [rcx+0x0],cl
   14000b23e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14000b242:	pop    rdi
   14000b243:	add    BYTE PTR [rcx+0x0],cl
   14000b246:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14000b24a:	rex.WRXB add BYTE PTR [r8],r8b
   14000b24d:	add    BYTE PTR [rax],al
   14000b24f:	add    BYTE PTR [rbp+0xfeef04],bh
   14000b255:	add    BYTE PTR [rcx],al
   14000b257:	add    BYTE PTR [rax],al
   14000b259:	add    BYTE PTR [rdx],cl
   14000b25b:	add    BYTE PTR [rax],al
   14000b25d:	add    BYTE PTR [rax],bpl
   14000b260:	add    BYTE PTR [rax],al
   14000b262:	or     al,BYTE PTR [rax]
   14000b264:	add    BYTE PTR [rax+0x0],al
   14000b267:	sub    BYTE PTR [rdi],bh
   14000b269:	add    BYTE PTR [rax],al
   14000b26b:	add    BYTE PTR [rax],al
   14000b26d:	add    BYTE PTR [rax],al
   14000b26f:	add    BYTE PTR [rax+rax*1],al
   14000b272:	add    al,0x0
   14000b274:	add    DWORD PTR [rax],eax
	...
   14000b282:	add    BYTE PTR [rax],al
   14000b284:	(bad)  
   14000b285:	add    al,BYTE PTR [rax]
   14000b287:	add    BYTE PTR [rcx],al
   14000b289:	add    BYTE PTR [rbx+0x0],dl
   14000b28c:	je     0x14000b28e
   14000b28e:	jb     0x14000b290
   14000b290:	imul   eax,DWORD PTR [rax],0x67006e
   14000b296:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b29a:	ins    BYTE PTR es:[rdi],dx
   14000b29b:	add    BYTE PTR [rbp+0x0],ah
   14000b29e:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b2a2:	data16 add BYTE PTR [rdi+0x0],ch
   14000b2a6:	add    BYTE PTR [rax],al
   14000b2a8:	mov    dl,0x2
   14000b2aa:	add    BYTE PTR [rax],al
   14000b2ac:	add    DWORD PTR [rax],eax
   14000b2ae:	xor    BYTE PTR [rax],al
   14000b2b0:	xor    al,0x0
   14000b2b2:	xor    BYTE PTR [rax],al
   14000b2b4:	cmp    DWORD PTR [rax],eax
   14000b2b6:	xor    BYTE PTR [rax],al
   14000b2b8:	xor    al,0x0
   14000b2ba:	rex.X add BYTE PTR [rax],sil
   14000b2bd:	add    BYTE PTR [rax],al
   14000b2bf:	add    BYTE PTR [rax+rax*1+0x16],cl
   14000b2c3:	add    BYTE PTR [rcx],al
   14000b2c5:	add    BYTE PTR [rbx+0x0],al
   14000b2c8:	outs   dx,DWORD PTR ds:[rsi]
   14000b2c9:	add    BYTE PTR [rbp+0x0],ch
   14000b2cc:	jo     0x14000b2ce
   14000b2ce:	(bad)  
   14000b2cf:	add    BYTE PTR [rsi+0x0],ch
   14000b2d2:	jns    0x14000b2d4
   14000b2d4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b2d8:	ins    DWORD PTR es:[rdi],dx
   14000b2d9:	add    BYTE PTR [rbp+0x0],ah
   14000b2dc:	add    BYTE PTR [rax],al
   14000b2de:	add    BYTE PTR [rax],al
   14000b2e0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b2e4:	movsxd eax,DWORD PTR [rax]
   14000b2e6:	jb     0x14000b2e8
   14000b2e8:	outs   dx,DWORD PTR ds:[rsi]
   14000b2e9:	add    BYTE PTR [rbx+0x0],dh
   14000b2ec:	outs   dx,DWORD PTR ds:[rsi]
   14000b2ed:	add    BYTE PTR [rsi+0x0],ah
   14000b2f0:	je     0x14000b2f2
   14000b2f2:	and    BYTE PTR [rax],al
   14000b2f4:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b2f8:	jb     0x14000b2fa
   14000b2fa:	jo     0x14000b2fc
   14000b2fc:	outs   dx,DWORD PTR ds:[rsi]
   14000b2fd:	add    BYTE PTR [rdx+0x0],dh
   14000b300:	(bad)  
   14000b301:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b305:	add    BYTE PTR [rdi+0x0],ch
   14000b308:	outs   dx,BYTE PTR ds:[rsi]
   14000b309:	add    BYTE PTR [rax],al
   14000b30b:	add    BYTE PTR [rdx],bh
   14000b30d:	add    BYTE PTR [rcx],cl
   14000b30f:	add    BYTE PTR [rcx],al
   14000b311:	add    BYTE PTR [rsi+0x0],al
   14000b314:	imul   eax,DWORD PTR [rax],0x65006c
   14000b31a:	add    BYTE PTR [rbp+0x0],r12b
   14000b31e:	jae    0x14000b320
   14000b320:	movsxd eax,DWORD PTR [rax]
   14000b322:	jb     0x14000b324
   14000b324:	imul   eax,DWORD PTR [rax],0x740070
   14000b32a:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b330:	add    BYTE PTR [rax],al
   14000b332:	add    BYTE PTR [rax],al
   14000b334:	push   rax
   14000b335:	add    BYTE PTR [rdx+0x0],dh
   14000b338:	outs   dx,DWORD PTR ds:[rsi]
   14000b339:	add    BYTE PTR [rcx+0x0],dl
   14000b33c:	jne    0x14000b33e
   14000b33e:	outs   dx,DWORD PTR ds:[rsi]
   14000b33f:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000b343:	add    BYTE PTR [rax],al
   14000b345:	add    BYTE PTR [rax],al
   14000b347:	add    BYTE PTR [rsi+0x0],ah
   14000b34a:	and    eax,DWORD PTR [rax]
   14000b34c:	add    DWORD PTR [rax],eax
   14000b34e:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b352:	ins    BYTE PTR es:[rdi],dx
   14000b353:	add    BYTE PTR [rbp+0x0],ah
   14000b356:	push   rsi
   14000b357:	add    BYTE PTR [rbp+0x0],ah
   14000b35a:	jb     0x14000b35c
   14000b35c:	jae    0x14000b35e
   14000b35e:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b364:	add    BYTE PTR [rax],al
   14000b366:	add    BYTE PTR [rax],al
   14000b368:	xor    DWORD PTR [rax],eax
   14000b36a:	xor    BYTE PTR [rax],al
   14000b36c:	add    BYTE PTR cs:[rax],dh
   14000b36f:	add    BYTE PTR [rsi],ch
   14000b371:	add    BYTE PTR [rcx],dh
   14000b373:	add    BYTE PTR [rax],dh
   14000b375:	add    BYTE PTR [rdx],dh
   14000b377:	add    BYTE PTR [rax+rax*1],dh
   14000b37a:	xor    BYTE PTR [rax],al
   14000b37c:	add    BYTE PTR cs:[rcx],dh
   14000b37f:	add    BYTE PTR [rsi],dh
   14000b381:	add    BYTE PTR [rbx],dh
   14000b383:	add    BYTE PTR [rax],bh
   14000b385:	add    BYTE PTR [rax+rax*1],dh
   14000b388:	and    BYTE PTR [rax],al
   14000b38a:	sub    BYTE PTR [rax],al
   14000b38c:	je     0x14000b38e
   14000b38e:	push   0x2e003100
   14000b393:	add    BYTE PTR [rcx],dh
   14000b395:	add    BYTE PTR [rip+0x37003000],dh        # 0x17700e39b
   14000b39b:	add    BYTE PTR [rax],dh
   14000b39d:	add    BYTE PTR [rcx],bh
   14000b39f:	add    BYTE PTR [rip+0x37003100],ch        # 0x17700e4a5
   14000b3a5:	add    BYTE PTR [rax],dh
   14000b3a7:	add    BYTE PTR [rax],dh
   14000b3a9:	add    BYTE PTR [rcx],ch
   14000b3ab:	add    BYTE PTR [rax],al
   14000b3ad:	add    BYTE PTR [rax],al
   14000b3af:	add    BYTE PTR [rdx],dh
   14000b3b1:	add    BYTE PTR [rcx],cl
   14000b3b3:	add    BYTE PTR [rcx],al
   14000b3b5:	add    BYTE PTR [rcx+0x0],cl
   14000b3b8:	outs   dx,BYTE PTR ds:[rsi]
   14000b3b9:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000b3bd:	add    BYTE PTR [rdx+0x0],dh
   14000b3c0:	outs   dx,BYTE PTR ds:[rsi]
   14000b3c1:	add    BYTE PTR [rcx+0x0],ah
   14000b3c4:	ins    BYTE PTR es:[rdi],dx
   14000b3c5:	add    BYTE PTR [rsi+0x0],cl
   14000b3c8:	(bad)  
   14000b3c9:	add    BYTE PTR [rbp+0x0],ch
   14000b3cc:	add    BYTE PTR gs:[rax],al
   14000b3cf:	add    BYTE PTR [rax+0x0],dh
   14000b3d2:	jb     0x14000b3d4
   14000b3d4:	outs   dx,DWORD PTR ds:[rsi]
   14000b3d5:	add    BYTE PTR [rcx+0x0],dh
   14000b3d8:	jne    0x14000b3da
   14000b3da:	outs   dx,DWORD PTR ds:[rsi]
   14000b3db:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000b3df:	add    BYTE PTR [rax],al
   14000b3e1:	add    BYTE PTR [rax],al
   14000b3e3:	add    BYTE PTR [rax+0x1002e00],al
   14000b3e9:	add    BYTE PTR [rax+rax*1+0x65],cl
   14000b3ed:	add    BYTE PTR [rdi+0x0],ah
   14000b3f0:	(bad)  
   14000b3f1:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000b3f5:	add    BYTE PTR [rdi+0x0],ch
   14000b3f8:	jo     0x14000b3fa
   14000b3fa:	jns    0x14000b3fc
   14000b3fc:	jb     0x14000b3fe
   14000b3fe:	imul   eax,DWORD PTR [rax],0x680067
   14000b404:	je     0x14000b406
   14000b406:	add    BYTE PTR [rax],al
   14000b408:	test   eax,0x4d002000
   14000b40d:	add    BYTE PTR [rcx+0x0],ch
   14000b410:	movsxd eax,DWORD PTR [rax]
   14000b412:	jb     0x14000b414
   14000b414:	outs   dx,DWORD PTR ds:[rsi]
   14000b415:	add    BYTE PTR [rbx+0x0],dh
   14000b418:	outs   dx,DWORD PTR ds:[rsi]
   14000b419:	add    BYTE PTR [rsi+0x0],ah
   14000b41c:	je     0x14000b41e
   14000b41e:	and    BYTE PTR [rax],al
   14000b420:	rex.XB add BYTE PTR [r15+0x0],bpl
   14000b424:	jb     0x14000b426
   14000b426:	jo     0x14000b428
   14000b428:	outs   dx,DWORD PTR ds:[rsi]
   14000b429:	add    BYTE PTR [rdx+0x0],dh
   14000b42c:	(bad)  
   14000b42d:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b431:	add    BYTE PTR [rdi+0x0],ch
   14000b434:	outs   dx,BYTE PTR ds:[rsi]
   14000b435:	add    BYTE PTR [rsi],ch
   14000b437:	add    BYTE PTR [rax],ah
   14000b439:	add    BYTE PTR [rcx+0x0],al
   14000b43c:	ins    BYTE PTR es:[rdi],dx
   14000b43d:	add    BYTE PTR [rax+rax*1+0x20],ch
   14000b441:	add    BYTE PTR [rdx+0x0],dh
   14000b444:	imul   eax,DWORD PTR [rax],0x680067
   14000b44a:	je     0x14000b44c
   14000b44c:	jae    0x14000b44e
   14000b44e:	and    BYTE PTR [rax],al
   14000b450:	jb     0x14000b452
   14000b452:	add    BYTE PTR gs:[rbx+0x0],dh
   14000b456:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b45a:	jbe    0x14000b45c
   14000b45c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14000b461:	add    BYTE PTR [rax],al
   14000b463:	add    BYTE PTR [rdx+0x0],al
   14000b466:	or     eax,0x4f000100
   14000b46b:	add    BYTE PTR [rdx+0x0],dh
   14000b46e:	imul   eax,DWORD PTR [rax],0x690067
   14000b474:	outs   dx,BYTE PTR ds:[rsi]
   14000b475:	add    BYTE PTR [rcx+0x0],ah
   14000b478:	ins    BYTE PTR es:[rdi],dx
   14000b479:	add    BYTE PTR [rsi+0x0],al
   14000b47c:	imul   eax,DWORD PTR [rax],0x65006c
   14000b482:	outs   dx,BYTE PTR ds:[rsi]
   14000b483:	add    BYTE PTR [rcx+0x0],ah
   14000b486:	ins    DWORD PTR es:[rdi],dx
   14000b487:	add    BYTE PTR [rbp+0x0],ah
   14000b48a:	add    BYTE PTR [rax],al
   14000b48c:	jo     0x14000b48e
   14000b48e:	jb     0x14000b490
   14000b490:	outs   dx,DWORD PTR ds:[rsi]
   14000b491:	add    BYTE PTR [rcx+0x0],dh
   14000b494:	jne    0x14000b496
   14000b496:	outs   dx,DWORD PTR ds:[rsi]
   14000b497:	add    BYTE PTR [rax+rax*1+0x61],dh
   14000b49b:	add    BYTE PTR [rsi],ch
   14000b49d:	add    BYTE PTR [rbp+0x0],ah
   14000b4a0:	js     0x14000b4a2
   14000b4a2:	add    BYTE PTR gs:[rax],al
   14000b4a5:	add    BYTE PTR [rax],al
   14000b4a7:	add    BYTE PTR [rdx+0x0],ch
   14000b4aa:	and    eax,0x50000100
   14000b4af:	add    BYTE PTR [rdx+0x0],dh
   14000b4b2:	outs   dx,DWORD PTR ds:[rsi]
   14000b4b3:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b4b7:	add    BYTE PTR [rbx+0x0],ah
   14000b4ba:	je     0x14000b4bc
   14000b4bc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14000b4c0:	ins    DWORD PTR es:[rdi],dx
   14000b4c1:	add    BYTE PTR [rbp+0x0],ah
   14000b4c4:	add    BYTE PTR [rax],al
   14000b4c6:	add    BYTE PTR [rax],al
   14000b4c8:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14000b4cc:	movsxd eax,DWORD PTR [rax]
   14000b4ce:	jb     0x14000b4d0
   14000b4d0:	outs   dx,DWORD PTR ds:[rsi]
   14000b4d1:	add    BYTE PTR [rbx+0x0],dh
   14000b4d4:	outs   dx,DWORD PTR ds:[rsi]
   14000b4d5:	add    BYTE PTR [rsi+0x0],ah
   14000b4d8:	je     0x14000b4da
   14000b4da:	scas   al,BYTE PTR es:[rdi]
   14000b4db:	add    BYTE PTR [rax],ah
   14000b4dd:	add    BYTE PTR [rdi+0x0],dl
   14000b4e0:	imul   eax,DWORD PTR [rax],0x64006e
   14000b4e6:	outs   dx,DWORD PTR ds:[rsi]
   14000b4e7:	add    BYTE PTR [rdi+0x0],dh
   14000b4ea:	jae    0x14000b4ec
   14000b4ec:	scas   al,BYTE PTR es:[rdi]
   14000b4ed:	add    BYTE PTR [rax],ah
   14000b4ef:	add    BYTE PTR [rdi+0x0],cl
   14000b4f2:	jo     0x14000b4f4
   14000b4f4:	add    BYTE PTR gs:[rdx+0x0],dh
   14000b4f8:	(bad)  
   14000b4f9:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000b4fd:	add    BYTE PTR [rsi+0x0],ch
   14000b500:	add    BYTE PTR [eax],ah
   14000b503:	add    BYTE PTR [rbx+0x0],dl
   14000b506:	jns    0x14000b508
   14000b508:	jae    0x14000b50a
   14000b50a:	je     0x14000b50c
   14000b50c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000b510:	add    BYTE PTR [rax],al
   14000b512:	add    BYTE PTR [rax],al
   14000b514:	rex.RX add BYTE PTR [rcx],r10b
   14000b517:	add    BYTE PTR [rcx],al
   14000b519:	add    BYTE PTR [rax+0x0],dl
   14000b51c:	jb     0x14000b51e
   14000b51e:	outs   dx,DWORD PTR ds:[rsi]
   14000b51f:	add    BYTE PTR [rax+rax*1+0x75],ah
   14000b523:	add    BYTE PTR [rbx+0x0],ah
   14000b526:	je     0x14000b528
   14000b528:	push   rsi
   14000b529:	add    BYTE PTR [rbp+0x0],ah
   14000b52c:	jb     0x14000b52e
   14000b52e:	jae    0x14000b530
   14000b530:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b536:	add    BYTE PTR [rax],al
   14000b538:	xor    DWORD PTR [rax],eax
   14000b53a:	xor    BYTE PTR [rax],al
   14000b53c:	add    BYTE PTR cs:[rax],dh
   14000b53f:	add    BYTE PTR [rsi],ch
   14000b541:	add    BYTE PTR [rcx],dh
   14000b543:	add    BYTE PTR [rax],dh
   14000b545:	add    BYTE PTR [rdx],dh
   14000b547:	add    BYTE PTR [rax+rax*1],dh
   14000b54a:	xor    BYTE PTR [rax],al
   14000b54c:	add    BYTE PTR cs:[rcx],dh
   14000b54f:	add    BYTE PTR [rsi],dh
   14000b551:	add    BYTE PTR [rbx],dh
   14000b553:	add    BYTE PTR [rax],bh
   14000b555:	add    BYTE PTR [rax+rax*1],dh
   14000b558:	add    BYTE PTR [rax],al
   14000b55a:	add    BYTE PTR [rax],al
   14000b55c:	add    BYTE PTR [rax],r8b
   14000b55f:	add    BYTE PTR [rcx],al
   14000b561:	add    BYTE PTR [rsi+0x0],dl
   14000b564:	(bad)  
   14000b565:	add    BYTE PTR [rdx+0x0],dh
   14000b568:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14000b56c:	ins    BYTE PTR es:[rdi],dx
   14000b56d:	add    BYTE PTR [rbp+0x0],ah
   14000b570:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000b574:	data16 add BYTE PTR [rdi+0x0],ch
   14000b578:	add    BYTE PTR [rax],al
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	and    al,0x0
   14000b57e:	add    al,0x0
   14000b580:	add    BYTE PTR [rax],al
   14000b582:	push   rsp
   14000b583:	add    BYTE PTR [rdx+0x0],dh
   14000b586:	(bad)  
   14000b587:	add    BYTE PTR [rsi+0x0],ch
   14000b58a:	jae    0x14000b58c
   14000b58c:	ins    BYTE PTR es:[rdi],dx
   14000b58d:	add    BYTE PTR [rcx+0x0],ah
   14000b590:	je     0x14000b592
   14000b592:	imul   eax,DWORD PTR [rax],0x6e006f
   14000b598:	add    BYTE PTR [rax],al
   14000b59a:	add    BYTE PTR [rax],al
   14000b59c:	or     DWORD PTR [rax+rsi*4],eax
   14000b59f:	add    al,0xcd
   14000b5a1:	dec    ch
   14000b5a3:	(bad)  
   14000b5a4:	fadd   DWORD PTR [rax]
   14000b5a6:	add    BYTE PTR [rax],al
   14000b5a8:	add    BYTE PTR [rax],al
   14000b5aa:	add    DWORD PTR [rax],eax
   14000b5ac:	add    BYTE PTR [rax],al
   14000b5ae:	add    BYTE PTR [rax],al
   14000b5b0:	adc    DWORD PTR [rax],eax
   14000b5b2:	add    BYTE PTR [rax],al
   14000b5b4:	add    BYTE PTR [rax],al
   14000b5b6:	add    BYTE PTR [rax],al
   14000b5b8:	add    al,BYTE PTR [rax]
   14000b5ba:	add    BYTE PTR [rax],al
   14000b5bc:	shl    ch,1
   14000b5be:	in     eax,dx
   14000b5bf:	or     eax,0x5a14659c
   14000b5c4:	push   rcx
   14000b5c5:	rex.RXB and r11b,r8b
   14000b5c8:	or     al,0x7f
   14000b5ca:	add    BYTE PTR [rcx+0x5d4f5a5a],ch
   14000b5d0:	je     0x14000b5f6
   14000b5d2:	(bad)  
   14000b5d3:	mov    cl,0x9
   14000b5d5:	rex.WB (bad) 
   14000b5d7:	stos   BYTE PTR es:[rdi],al
   14000b5d8:	adc    al,BYTE PTR [rdi+0x78]
   14000b5db:	stos   DWORD PTR es:[rdi],eax
	...
   14000b5f4:	mov    BYTE PTR [rax],al
   14000b5f6:	add    BYTE PTR [rax],al
   14000b5f8:	(bad)  
   14000b5f9:	add    BYTE PTR [rax],al
   14000b5fb:	add    BYTE PTR [rax+0x10000000],bl
   14000b601:	add    BYTE PTR [rax],al
   14000b603:	add    BYTE PTR [rax+0xe000000],ch
   14000b609:	add    BYTE PTR [rax],al
   14000b60b:	add    BYTE PTR [rax+0xc000000],bh
	...
   14000b619:	add    BYTE PTR [rax],al
   14000b61b:	add    al,cl
   14000b61d:	add    BYTE PTR [rax],al
   14000b61f:	add    BYTE PTR [rax+rax*1],cl
   14000b622:	add    BYTE PTR [rax],al
   14000b624:	add    BYTE PTR [rax],al
   14000b626:	add    BYTE PTR [rax],al
   14000b628:	rex.WRB add BYTE PTR [r13+0x0],r10b
   14000b62c:	rex.WB add BYTE PTR [r8],al
	...
   14000b637:	add    BYTE PTR [rbx],al
   14000b639:	add    BYTE PTR [rax],al
   14000b63b:	add    BYTE PTR [rsi],cl
   14000b63d:	add    BYTE PTR [rax],al
   14000b63f:	add    BYTE PTR [rax],dl
   14000b641:	add    BYTE PTR [rax],al
   14000b643:	add    BYTE PTR [rax],bl
   14000b645:	add    BYTE PTR [rax],al
   14000b647:	add    BYTE PTR [rbp+0x0],cl
   14000b64a:	push   rbp
   14000b64b:	add    BYTE PTR [rcx+0x0],cl
	...
   14000b656:	add    BYTE PTR [rax],al
   14000b658:	add    eax,0x6000000
   14000b65d:	add    BYTE PTR [rax],al
   14000b65f:	add    BYTE PTR [rax],dl
   14000b661:	add    BYTE PTR [rax],al
   14000b663:	add    BYTE PTR [rax],al
   14000b665:	add    BYTE PTR [rax],al
   14000b667:	add    BYTE PTR [rbp+0x0],ah
   14000b66a:	outs   dx,BYTE PTR ds:[rsi]
   14000b66b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193010b71
   14000b671:	add    BYTE PTR [rax],al
   14000b673:	add    BYTE PTR [rax],al
   14000b675:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

000000014000c000 <.reloc>:
   14000c000:	add    BYTE PTR [rax+0x0],ah
   14000c003:	add    BYTE PTR [rax],ah
   14000c005:	add    BYTE PTR [rax],al
   14000c007:	add    BYTE PTR [rax],dl
   14000c009:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c00a:	sbb    BYTE PTR [rax+rbp*1+0x48a440a4],ah
   14000c011:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c012:	nop
   14000c013:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c014:	cwde   
   14000c015:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c016:	test   al,0xa8
   14000c018:	shr    BYTE PTR [rax-0x572f5738],0x0
   14000c01f:	add    BYTE PTR [rax],al
   14000c021:	add    BYTE PTR [rax],0x0
   14000c024:	or     al,0x0
   14000c026:	add    BYTE PTR [rax],al
   14000c028:	jo     0x14000bfca
	...
